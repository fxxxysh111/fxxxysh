<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="WordPress 5.0" name="generator"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1.2" name="viewport"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="wPBT3TGAEvH3LEC76jIMhYgwPIXrPPg0o5gD3Rkn4wA" name="google-site-verification"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="en_US" property="og:locale"/>
  <meta content="website" property="og:type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2018/06/fully-permitted-mining-project-150x150.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2017/11/infrastructure-150x150.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2018/06/low-opex-150x150.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2018/06/uranium-mining-target-Australia-150x150.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2018/06/experienced-team-150x150.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2017/12/asx-logo.png" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2017/12/numerco-logo.jpg" property="og:image"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
  <meta content="https://bossresources.com.au/wp-content/uploads/2018/06/fully-permitted-mining-project-150x150.png" name="twitter:image"/>
  <meta content="WordPress 5.0" name="generator"/>
  <meta content="Powered by Visual Composer - drag and drop page builder for WordPress." name="generator"/>
  <meta content="Powered by Slider Revolution 5.4.7.4 - responsive, Mobile-Friendly Slider Plugin for WordPress with comfortable drag and drop interface." name="generator"/>
  <noscript>
  </noscript>
 </head>
 <body class="home page-template page-template-template-default-without-breadcrumbs page-template-template-default-without-breadcrumbs-php page page-id-924 wpb-js-composer js-comp-ver-5.1.1 vc_responsive">
  <div class="site-container">
   <div class="header-container">
    <div class="vertical-align-table">
     <div class="header clearfix">
      <div class="logo vertical-align-cell">
       [ahref]
       
      </div>
      [ahref]
      
      <div class="menu-container clearfix vertical-align-cell">
       <nav class="menu-main-menu-container">
        <ul class="sf-menu" id="menu-main-menu">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-924 current_page_item menu-item-949" id="menu-item-949">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-2420" id="menu-item-2420">
          [link]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2686" id="menu-item-2686">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2685" id="menu-item-2685">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2687" id="menu-item-2687">
            <a href="/about-us/#key-advisors">
             Key Advisors
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2688" id="menu-item-2688">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2689" id="menu-item-2689">
            [link]
            
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2540" id="menu-item-2540">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-2445" id="menu-item-2445">
          [link]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2510" id="menu-item-2510">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2511" id="menu-item-2511">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2512" id="menu-item-2512">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2514" id="menu-item-2514">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2670" id="menu-item-2670">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2682" id="menu-item-2682">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2679" id="menu-item-2679">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2680" id="menu-item-2680">
            [link]
            
           </li>
          </ul>
         </li>
         <li class="left-flyout menu-item menu-item-type-post_type menu-item-object-page menu-item-963" id="menu-item-963">
          [ahref]
          
         </li>
        </ul>
       </nav>
      </div>
      <div class="mobile-menu-container">
       <div class="mobile-menu-divider">
       </div>
       <nav class="menu-main-menu-container">
        <ul class="mobile-menu collapsible-mobile-submenus" id="menu-main-menu-1">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-924 current_page_item menu-item-949">
          [search]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-2420">
          <a href="/about-us/">
           ABOUT US
          </a>
          [ahref]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2686">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2685">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2687">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2688">
            <a href="/about-us/#corporate-governance">
             Corporate Governance
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2689">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2540">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-2445">
          [ahref]
          
          [ahref]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2510">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2511">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2512">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2514">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2670">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2682">
            <a href="/investors/#top-20-shareholders">
             Top 20 Shareholders
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2679">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2680">
            [link]
            
           </li>
          </ul>
         </li>
         <li class="left-flyout menu-item menu-item-type-post_type menu-item-object-page menu-item-963">
          [link]
          
         </li>
        </ul>
       </nav>
      </div>
     </div>
    </div>
   </div>
   <div class="theme-page">
    <div class="clearfix">
     <div class="vc_row wpb_row vc_row-fluid full-width">
      <div class="wpb_column vc_column_container vc_col-sm-12">
       <div class="wpb_wrapper">
        <div class="wpb_revslider_element wpb_content_element">
         <div class="rev_slider_wrapper fullwidthbanner-container" data-source="gallery" id="rev_slider_6_1_wrapper" style="margin:0px auto;background:#eeeeee;padding:0px;margin-top:0px;margin-bottom:0px;">
          <div class="rev_slider fullwidthabanner" data-version="5.4.7.4" id="rev_slider_6_1" style="display:none;">
           <ul>
            <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-6" data-masterspeed="1000" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="7" data-title="Slide" data-transition="fade">
             <div class="tp-caption tp-resizeme fullscreenvideo disabled_lc tp-videolayer" data-aspectratio="16:9" data-autoplay="on" data-forcecover="1" data-frames='[{"delay":10,"speed":300,"frame":"0","from":"opacity:0;","to":"o:1;","ease":"Power3.easeInOut"},{"delay":"wait","speed":300,"frame":"999","to":"opacity:0;","ease":"Power3.easeInOut"}]' data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingtop="[0,0,0,0]" data-responsive_offset="on" data-textalign="['inherit','inherit','inherit','inherit']" data-type="video" data-videocontrols="controls" data-videoheight="100%" data-videoloop="loopandnoslidestop" data-videomp4="https://bossresources.com.au/wp-content/uploads/2018/09/bossresources-home-video-27-09-2018.mp4" data-videopreload="auto" data-videowidth="100%" data-volume="mute" data-whitespace="nowrap" data-x="0" data-y="0" id="slide-6-layer-1" style="z-index: 5;">
             </div>
             <div class="tp-caption tp-shape tp-shapewrapper tp-resizeme" data-basealign="slide" data-frames='[{"delay":10,"speed":300,"frame":"0","from":"opacity:0;","to":"o:1;","ease":"Power3.easeInOut"},{"delay":"wait","speed":300,"frame":"999","to":"opacity:0;","ease":"Power3.easeInOut"}]' data-height="full" data-hoffset="['0','0','0','0']" data-paddingbottom="[0,0,0,0]" data-paddingleft="[0,0,0,0]" data-paddingright="[0,0,0,0]" data-paddingtop="[0,0,0,0]" data-responsive_offset="on" data-textalign="['inherit','inherit','inherit','inherit']" data-type="shape" data-voffset="['0','0','0','0']" data-whitespace="nowrap" data-width="full" data-x="['center','center','center','center']" data-y="['middle','middle','middle','middle']" id="slide-6-layer-3" style="z-index: 6;background-color:rgba(0,0,0,0);">
             </div>
            </li>
           </ul>
           <div class="tp-bannertimer tp-bottom" style="visibility: hidden !important;">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="vc_row wpb_row vc_row-fluid vc_custom_1503289180392 vc_row-has-fill full-width">
      <div class="wpb_column vc_column_container vc_col-sm-12">
       <div class="wpb_wrapper">
        <div class="vc_row wpb_row vc_inner vc_row-fluid">
         <div class="wpb_column vc_column_container vc_col-sm-12">
          <div class="vc_column-inner ">
           <div class="wpb_wrapper">
            <div class="wpb_raw_code wpb_content_element wpb_raw_html">
             <div class="wpb_wrapper">
              <div style="float:left;text-align:left;">
               <h1 class="text-white text-18 header-uppcase" style="font-size:32px">
                [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
               </h1>
               <h2 class="text-white" style="font-size: 14px">
                <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
               </h2>
              </div>
              <a class="more custome-more-btn" href="/honeymoon-uranium-project/" style="margin-top: 10px;margin-right:50px" title="Learn More">
               Learn More
              </a>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="vc_row wpb_row vc_row-fluid vc_custom_1510213714655 page-margin-top-section">
      <div class="wpb_column vc_column_container vc_col-sm-12">
       <div class="wpb_wrapper">
        <div class="wpb_text_column wpb_content_element description">
         <div class="wpb_wrapper">
          <div class="column-item-home">
           <p>
            <li>[ahref]</li><li>[search]</li><li>[link]</li><li>[ahref]</li>[ahref]
           </p>
           <h3 style="text-align: center; margin: 10px 0 15px;">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <ul class="custome-list-style">
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Fully Permitted for 3.2M Ib export (one of only four mines in Australia)
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Only non- producing project in Australia Licenced to be brought into production
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             9 months until production compared with the avg of 7-10 years from green field exploration to production
            </li>
           </ul>
          </div>
          <div class="column-item-home">
           <p>
            <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[ahref]</li>[link][search]
           </p>
           <h3 style="text-align: center; margin: 10px 0 15px;">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <ul class="custome-list-style">
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             $170m plant exists, successfully operated and in good condition
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             US$10M to restart mine to produce 880Klbs pa
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             US$58M to expand production to 2Mlbs
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             U$78M optionality to expand production to 3.2Mlbs in Year 4+
            </li>
           </ul>
          </div>
          <div class="column-item-home">
           <p>
           </p>
           <h3 style="text-align: center; margin: 10px 0 15px;">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <ul class="custome-list-style">
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Uranium demand and prices expected to increase
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Expanded plant AISC of <US$24/Ib
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Operating Costs C1 of <U$16/Ib
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Lowest cost quartile of world-wide producers
            </li>
           </ul>
          </div>
          <div class="column-item-home">
           <p>
            <noscript>
            </noscript>
           </p>
           <h3 style="text-align: center; margin: 10px 0 15px;">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <ul class="custome-list-style">
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Significant exploration target 100M Ib U3O8
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             63.3M Ib U3O8 JORC Resource
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Huge 80+ km potentially mineralised strike
            </li>
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             2,600km² under explored uranium province
            </li>
           </ul>
          </div>
          <div class="column-item-home">
           <p>
            <noscript>
            </noscript>
           </p>
           <h3 style="text-align: center; margin: 10px 0 15px;">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <ul class="custome-list-style">
            <li>
             <i class="fa fa-arrow-circle-o-right">
             </i>
             Chairman / MD / Marketing ex- Kalahari Minerals / Extract Resources which was subject to a $2.2B takeover and a $2.8B Husab Uranium mine build
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="vc_row wpb_row vc_row-fluid vc_custom_1511227988117 page-margin-top-section">
      <div class="wpb_column vc_column_container vc_col-sm-12">
       <div class="wpb_wrapper">
        <h2 class="box-header custome-heading-style">
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
        <h2 class="box-header custom-header-style-2">
         [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
        </h2>
        <div class="wpb_text_column wpb_content_element description">
         <div class="wpb_wrapper">
          <p class="simple-paragraph" style="margin-top: 0px !important;">
           Boss Resources has one of a few uranium projects ready to participate in the early stages of a new bull market; it truly is a product for this time. Against a backdrop of strengthening uranium prices, the Company has been proactively identifying, addressing, and positioning the Honeymoon Project to be Australia’s next producer of up to 3.2M lbs per annum.[link]<li>[link]</li><li>[ahref]</li>[link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <p class="simple-paragraph">
           Honeymoon is unique in that it is a fully permitted uranium mine with $170M of established infrastructure, a plant under care and maintenance, in good condition, that has produced and exported uranium from the safe jurisdiction of South Australia; where it holds approved Heritage and Native Title mining agreements.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </p>
          <p class="simple-paragraph">
           The Honeymoon mine can be fast tracked into production in a short 12-month time span so as to seize upon improved market fundamentals as uranium prices rise. The increased production through the addition of the ion exchange plant which will take approximately 24 months to construct and commission, with the timing dependent on the delivery schedule for the columns with which there is a significant upside potential.
          </p>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="vc_row wpb_row vc_row-fluid flex-display vc_custom_1509958404705 page-margin-top vc_row-o-equal-height vc_row-flex">
      <div class="custome-border-box custome-box-width wpb_column vc_column_container vc_col-sm-3">
       <div class="wpb_wrapper">
        <div class="wpb_text_column wpb_content_element ">
         <div class="wpb_wrapper">
          <p>
           <noscript>
           </noscript>
          </p>
          <p>
           <li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
          </p>
         </div>
        </div>
        <h4 class="box-header uranium-price">
         Uranium Spot Price ($US/lb)
        </h4>
        <div class="wpb_text_column wpb_content_element vc_custom_1512697154179">
         <div class="wpb_wrapper">
          <p style="margin-top: 5px; margin-bottom: 10px;">
           <noscript>
           </noscript>
          </p>
          <table class="custom-table-css" id="uranium-price-table">
           <tbody>
            <tr class="uranium-price-heading">
             <th>
              Symbol
             </th>
             <th>
              Last
             </th>
             <th>
              Movement
             </th>
            </tr>
            <tr>
             <td class="uranium-price-symbol">
              U308
             </td>
             <td class="uranium-price-last">
              $25.76
             </td>
             <td class="uranium-price-change">
              <span class="value">
               <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
              </span>
             </td>
            </tr>
           </tbody>
          </table>
         </div>
        </div>
        [link]
        
       </div>
      </div>
      <div class="custome-border-box custome-box-width custome-box-width-2 wpb_column vc_column_container vc_col-sm-3 vc_col-lg-3 vc_col-md-6 vc_col-xs-12">
       <div class="wpb_wrapper">
        <h3 class="box-header">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <ul class="list">
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0308
  </b>
 </body>
</html>
<ul>
 <li style="list-style-type: none;">
  <ul>
   <li style="padding-left: 0;">
    <a href="/investors/#why-invest-in-boss-resources">
     <i class="fa fa-check">
     </i>
     Why Invest in Boss Resources
    </a>
   </li>
  </ul>
 </li>
</ul>
<ul>
 <li style="list-style-type: none;">
  <ul>
   <li style="padding-left: 0;">
    <a href="/investors/#share-price-information">
     <i class="fa fa-check">
     </i>
     Share Price Information
    </a>
   </li>
  </ul>
 </li>
</ul>
<ul>
 <li style="padding-left: 0;">
  [ahref]
  
 </li>
</ul>
<p>
</p>
[ahref]

<div class="custome-border-box custome-box-width custome-box-width-margin wpb_column vc_column_container vc_col-sm-3">
 <div class="wpb_wrapper">
  <h3 class="box-header">
   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
  </h3>
  <ul class="list">
  </ul>
 </div>
</div>
<ul>
 <li style="list-style-type: none;">
  <ul>
   <li style="padding-left: 0;">
    [link]
    
   </li>
  </ul>
 </li>
</ul>
<ul>
 <li style="list-style-type: none;">
  <ul>
   <li style="padding-left: 0;">
    [ahref]
    
   </li>
  </ul>
 </li>
</ul>
<ul>
 <li style="list-style-type: none;">
  <ul>
   <li style="padding-left: 0;">
    <a href="/reports-announcements/#analyst-reports">
     <i class="fa fa-check">
     </i>
     Analyst Reports
    </a>
   </li>
  </ul>
 </li>
</ul>
<ul>
 <li style="padding-left: 0;">
  [link]
  
 </li>
</ul>
<p>
 [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref][ahref][link][ahref]
</p>
[link]

<div class="custome-border-box custome-box-width custome-box-width-top custome-box-width-4 wpb_column vc_column_container vc_col-sm-3">
 <div class="wpb_wrapper">
  <h3 class="box-header">
   [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
  </h3>
  <div class="wpb_text_column wpb_content_element ">
   <div class="wpb_wrapper">
    <p>
     [ahref]
     
    </p>
   </div>
  </div>
 </div>
</div>
<div class="vc_row wpb_row vc_row-fluid vc_custom_1536832376132 page-margin-top-section">
 <div class="wpb_column vc_column_container vc_col-sm-12">
  <div class="wpb_wrapper">
   <h2 class="box-header custome-heading-style">
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
   <div class="wpb_text_column wpb_content_element vc_custom_1536832200523 description">
    <div class="wpb_wrapper">
     <p class="simple-paragraph" style="margin-top: 0px !important;">
      Boss Resources remains confident that despite being a buyer’s market there are positive signs of upward price movement in the spot and term markets. Demand is growing especially in China, India and Russia, and emerging nuclear nations such as Saudi Arabia and more reactors restarting in Japan. Even prior to the recent cutback in uranium production in Canada, Kazakhstan and Africa due to unsustainably low prices, industry forecasts showed a need for new uranium production in the early to mid 2020s; cutbacks to world production have brought that deadline forward. To bring existing production back on line and encourage development of new production in time to meet demand prices will have to rise significantly several years prior to when production is needed.<li>[link]</li>[link][link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
     </p>
     <p class="simple-paragraph">
      Boss Resources has a clear price objective to maximise returns for shareholders and while it is higher than the current market expectations we are well within the range of expected near term price movements. In a favourable uranium market the Honeymoon mine can respond very quickly to changing market conditions and catch the upside of the market cycle by operating from operating in the lowest cost quartile worldwide. The existing SX plant is currently on care and maintenance and can reach a production level of around 880,000lbs per year within a 9 month period and, with the addition of the IX plant, ramp up to 2 m lbs per year within 24 months then increasing to 3.2 m lbs. With deliveries under long term contracts typically commencing around 18 months to 2 years after the contracts are signed, Boss Resources has the significant advantage of signing term agreements for supply in parallel with taking the decision to move forward with production. This is a rare advantage for a new producer as in many instances production may start several years after the decision to produce is taken and market conditions may have changed significantly.
     </p>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="vc_row wpb_row vc_row-fluid vc_custom_1527566795049 vc_row-has-fill full-width">
 <div class="wpb_column vc_column_container vc_col-sm-12">
  <div class="wpb_wrapper">
   <div class="vc_row wpb_row vc_inner vc_row-fluid">
    <div class="wpb_column vc_column_container vc_col-sm-12">
     <div class="vc_column-inner ">
      <div class="wpb_wrapper">
       <h2 class="vc_custom_heading" style="font-size: 29px;color: #ffffff;text-align: center">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <div class="wpb_text_column wpb_content_element vc_custom_1527566865081 text-white description align-center">
        <div class="wpb_wrapper">
         <p>
          Enter your details below to receive company announcements and the latest news.
         </p>
        </div>
       </div>
       <section class="yikes-mailchimp-container yikes-mailchimp-container-1 " id="yikes-mailchimp-container-1">
        <form class="yikes-easy-mc-form yikes-easy-mc-form-1 custom-new-subscribe-form" data-attr-form-id="1" id="bossresources-1" method="POST">
         <label class="FNAME-label yikes-mailchimp-field-required " for="yikes-easy-mc-form-1-FNAME">
         </label>
         <label class="EMAIL-label yikes-mailchimp-field-required " for="yikes-easy-mc-form-1-EMAIL">
         </label>
         <button class="yikes-easy-mc-submit-button yikes-easy-mc-submit-button-1 btn btn-primary custom-new-submit-button" type="submit">
          <span class="yikes-mailchimp-submit-button-span-text">
           Subscribe
          </span>
         </button>
        </form>
       </section>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="vc_row wpb_row vc_row-fluid page-margin-top-section">
 <div class="wpb_column vc_column_container vc_col-sm-12">
  <div class="wpb_wrapper">
   <h2 class="box-header">
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
  </div>
 </div>
</div>
<div class="vc_row wpb_row vc_row-fluid padding-bottom-87 page-margin-top">
 <div class="wpb_column vc_column_container vc_col-sm-12">
  <div class="wpb_wrapper">
   <div class="vc_row wpb_row vc_inner vc_row-fluid">
    <div class="wpb_column vc_column_container vc_col-sm-6">
     <div class="vc_column-inner ">
      <div class="wpb_wrapper">
       <div class="wpb_text_column wpb_content_element ">
        <div class="wpb_wrapper">
         <h3 style="text-align: center;">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </div>
       <video controls="" height="320" width="570">
        <source src="https://bossresources.com.au/wp-content/uploads/2018/12/ISL-Cut.mp4" type="video/mp4"/>
       </video>
      </div>
     </div>
    </div>
    <div class="wpb_column vc_column_container vc_col-sm-6">
     <div class="vc_column-inner ">
      <div class="wpb_wrapper">
       <div class="wpb_text_column wpb_content_element ">
        <div class="wpb_wrapper">
         <h3 style="text-align: center;">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </div>
       <video controls="" height="320" width="570">
        <source src="https://bossresources.com.au/wp-content/uploads/2018/12/bossresources-home-video-27-09-2018.mp4" type="video/mp4"/>
       </video>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="vc_row wpb_row vc_row-fluid gray footer-row full-width page-padding-top padding-bottom-50">
 <div class="vc_row wpb_row vc_inner vc_row-fluid row-4-4">
  <div class="vc_col-sm-3 wpb_column vc_column_container widget widget_text">
   <h6 class="box-header">
    BOSS RESOURCES LIMITED
   </h6>
   <div class="textwidget">
    <p>
     [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search][ahref][ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[link][ahref]<li>[search]</li>[search][search]<li>[search]</li>[search]
    </p>
    <p>
     <li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[ahref][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
    </p>
    <p>
     <i aria-hidden="true" class="fa fa-envelope">
     </i>
     <span style="display: inline-table;">
      [link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
     </span>
    </p>
   </div>
  </div>
  <div class="vc_col-sm-3 wpb_column vc_column_container widget widget_text">
   <div class="textwidget">
    <p>
     [link]
     
    </p>
    <p>
     [link]
     
    </p>
    <p>
     [search][ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li>
    </p>
    <p>
     [link]
     
    </p>
    <p>
     <li>[ahref]</li>[link][link]<li>[ahref]</li><li>[search]</li>[link]<li>[search]</li>[search]<li>[search]</li><li>[ahref]</li>
    </p>
    <p>
     <li>[search]</li><li>[ahref]</li>[search][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
    </p>
   </div>
  </div>
  <div class="vc_col-sm-3 wpb_column vc_column_container widget widget_text">
   <div class="textwidget">
    <p>
     [link]
     
    </p>
    <p>
     [link]
     
    </p>
   </div>
  </div>
  <div class="vc_col-sm-3 wpb_column vc_column_container widget widget_text">
   <h6 class="box-header">
    PROUD MEMBER OF
   </h6>
   <div class="textwidget">
    <p>
    </p>
   </div>
  </div>
 </div>
</div>
<div class="background-overlay">
</div>
[link]

<div id="om-aj2nplbjzuykj5ryru5u-holder">
</div>
<div id="om-im4y18r97dgdkwtwtske-holder">
</div>
<noscript>
</noscript>
<noscript>
</noscript>
<noscript>
</noscript>
<noscript>
</noscript>
