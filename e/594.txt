--->|Tm8gOSBwb3VuZGVyIGhhZCBhbnkgcmlnaHQgdG8gY29tcGxhaW4uLiAKVGhvc2UgdHdvLCBwbHVzIHByZXZpb3VzbHkgYW5ub3VuY2VkIGludmVzdG9yIENlbnRlcmJyaWRnZSBQYXJ0bmVycywgYXJlIGJhY2tpbmcgQmlnMyBmb3IgYXQgbGVhc3QgJDEgYmlsbGlvbiBhcGllY2UsIHNvdXJjZXMgc2FpZC4gCkVpZ2VudGxpY2ggbXVzcyBpY2ggbm9jaCBmcm9oIHNlaW4sIGRhc3MgaWNoIG5vY2ggbmljaHQgcGxlaXRlIGJpbiwgZGVubiBkaWVzZSBNZW5nZSBhbiBCYWQgQmVhdHMgZGllIGljaCBpbiBkZW4gbGV0enRlbiBUYWdlbiBlaW5zdGVja2VuIG11c3N0ZSwgdmVya3JhZnRldCBub3JtYWxlcndlaXNlIGVpbmUgc28ga2xlaW5lIEJhbmtyb2xsIHdpZSBkaWUgbWVpbmlnZSBuaWNodCBsZWljaHQuIApBIHNhbXBsZSBwbGFuIHdvdWxkIGJlIHRvIHRpcCB0aGUgZGVhbGVyIC41MCBvbiBhdmVyYWdlIHNpemUgcG90cyBhbmQgcG9zc2libHkgJDEuMDAgb24gbGFyZ2VyIHBvdHMgaWYgdGhlIGRlYWxlciBpcyBkb2luZyBhIGdvb2Qgam9iLiAKVGhpcyBxdWVzdGlvbiBpcyBhIGxpdHRsZSBiaXQgdHJpY2t5LiAKQmxpbmRzIGFuZCBBbnRlczogR2l2ZW4gdGhhdCB0aGUgYmxpbmRzIGluY3JlYXNlIGFzIHRoZSBnYW1lIHByb2NlZWRzLCBvbmUgbXVzdCBrZWVwIGluIG1pbmQgdGhhdCBpdCBjaGFuZ2VzIHRoZSBmcmFjdGlvbiBiZXR3ZWVuIHdoYXQgaXMgZWFjaCByb3VuZCBhbmQgdGhlIGF2ZXJhZ2Ugc3RhY2sgc2l6ZS4gVGhlcmVmb3JlLCB0aGlzIG1lYW5zIHRoYXQgZm9yIG9uZSB0byBiZSBzdWNjZXNzZnVsLCBoZSBvciBzaGUgbXVzdCBiZSBhaGVhZCBvZiB0aGUgYmxpbmRzLiBUaGlzIHdheSBpdCBpcyBlYXNpZXIgdG8gYXZvaWQgc3RhY2sgZmFsbGluZyBhd2F5IHdpdGhvdXQgY2F1c2luZyBvcHBvbmVudHMgYW55IGRhbWFnZSBvciByZWFjaGluZyB0aGF0IGZpbmFsIHRhYmxlLi4gCkV0IGNvbW1lIG9uIHBldXQgbGlyZSB0b3V0IGV0IHNvbiBjb250cmFpcmUsIGNvbW1lbnQgY2hvaXNpdCBvbiBub3RyZSBjcm95YW5jZSA/IEF2b3VleiBxdWUgYydlc3QgdHJzIGNvbXBsaXF1LkMnZXN0IGVmZmVjdGl2ZW1lbnQgdW4gcHJvYmxtZSBxdWUgamUgY29ubmFpcyBjb21tZSB0b3V0IGxlIG1vbmRlLCBqZSBjcm9pcyBxdSdpbCBmYXV0IGNvbW1lbmNlciBwYXIgZmFpcmUgdW5lIGxpc3RlIGRlIGNlIHF1ZSBsJ29uIHBldXQgY29uc29tbWVyLCBkZSBzYXZvaXIgcG91cnF1b2kgb24gZXhjbHV0IHRlbCBhbGltZW50LCBkZSBsJ2F2b2lyIGVuc3VpdGUgZW4gdHRlIGVuIGZhaXNhbnQgc2VzIGNvdXJzZXMsIGQnb3B0ZXIgZGFucyB1bmUgY2VydGFpbmUgbWVzdXJlIHBvdXIgbGUgYmlvIGV0IGQnYXZvaXIgdW5lIGlkZSBwcmNpc2UgZGUgY2UgcXVlIGRvaXQgY29tcG9ydGVyIHVuIHJlcGFzLiAKSWYgaGUgcHVzaGluZyB0aGUgaWRlYSBvbiB5b3UsIGhlIGlzIGFic29sdXRlbHkgbm90IHJlYWR5IHRvIGJlIGEgZGFkZHkgZG9tIGJlY2F1c2UgdGhhdCB0aGUgZXhhY3Qgb3Bwb3NpdGUgb2Ygd2hhdCBhIGRhZGR5IGRvbSBkb2VzLgpZb3UgcmVhZGluZyB0b28gbXVjaCBpbnRvIHRoZSAiZGlzcG9zYWJsZSIgcGFydC4gSXQgbW9yZSBhY2N1cmF0ZWx5IGNhbGxlZCBkaXNjcmV0aW9uYXJ5IGluY29tZSwgbWVhbmluZyBtb25leSBsZWZ0IG92ZXIgYWZ0ZXIgYWNjb3VudGluZyBmb3IgbmVjZXNzaXRpZXMuIEl0IHN0aWxsIGdldHMgc3BlbnQsIHRob3VnaC4gVGhlIG9ubHkgdHJ1bHkgZXhjZXNzIG1vbmV5IGlzIHdoYXQgbGVmdCBvdmVyIGFmdGVyIHlvdSBkaWUuIEkgd2FnZXIgdGhlcmUgYXJlIG1vcmUgcGVvcGxlIGluIHRoZSB3b3JsZCBzdHJ1Z2dsaW5nIHRvIG1ha2UgZW5kcyBtZWV0IGF0IHRoZSBlbmQgb2YgdGhlaXIgbGlmZSB0aGFuIHRob3NlIHdpdGggbW9yZSBtb25leSB0aGFuIHRoZXkga25vdyB3aGF0IHRvIGRvIHdpdGguCkF0IHRoZSBlbmQgb2YgdGhlIGRheSwgbm9ib2R5IGV2ZXIgZXZlbiBhc3NlcnRlZCB0aGlzIGFzIDEwMCUgdHJ1ZS4gVGhleSBqdXN0IHN1Z2dlc3RlZCBpdCBiZWNhdXNlIGl0IGhhcyBzdXBwb3J0IGJlaGluZCBpdC4gSWYgeW91IHdhbnQgdGhlIHNjaWVuY2UgY29uZmlybWluZyBvciBkZW55aW5nIGl0LCB5b3UgYmUgdGhlIGZpcnN0IHRvIGZ1bmQgaXQuLiAKSm9yZGFub3UgZmluYWxseSBwbGVhZGVkIGd1aWx0eSB0byB0d28gY2hhcmdlcyBvZiBjb25zcGlyYWN5IHRvIGRlZnJhdWQgaW4gRmVicnVhcnksIGFmdGVyIGZyYXVkdWxlbnRseSBvYnRhaW5pbmcgJDU4IG1pbGxpb24gaW4gbG9hbnMgZnJvbSB0aGUgQ29tbW9ud2VhbHRoIEJhbmsgdXNpbmcgZmFsc2UgZG9jdW1lbnRzIGJldHdlZW4gMjAxMCBhbmQgMjAxNC4gCkluIEZvdW5kYXRpb24gUGhhc2UgYSBsZWFybmVyIGlzIGEgTGV2ZWwgNyAoODAgMTAwJSkgc2ltcGx5IGdpdmUgYWxsIGxlYXJuZXJzIHdpdGggYSBsZXZlbCA3IGEgbWFyayBvZiA5MCB0aGUgbWlkIG1hcmsgb2YgYWxsIGxldmVscyBhbmQgYXNzaWduIHRvIGxlYXJuZXJzLgpJbiBmYWN0LCBuZXJvbGksIHZhbGVyaWFuLCBhbmQgbnV0bWVnIGFyZSBpbmNsdWRlZCBpbiBhIGJsZW5kIHBhdGVudGVkIGJ5IEludGVybmF0aW9uYWwgRmxhdm9ycyBhbmQgRnJhZ3JhbmNlcywgSW5jLiwgZm9yIGVhc2luZyBzdHJlc3MgaW4gdGhlIHdvcmtwbGFjZS4gQXJvbWF0aGVyYXBpc3RzIGZpbmQgeWxhbmcgeWxhbmcgYW5vdGhlciBwb3RlbnQgcmVsYXhhbnQuIApXaGVuIHlvdSB0aGF3IHRoZW0sIGV2ZW4gcGFydGlhbGx5LCB5b3UgY2FuIHNsaXAgdGhlaXIgc2tpbnMgcmlnaHQgb2ZmLiBUaGUgdG9tYXRvZXMgY2FuIHRoZW4gYmUgY2hvcHBlZCBhbmQgdXNlZCBpbiBzYXVjZXMgYW5kIG90aGVyIGNvb2tlZCBkaXNoZXMsIHRoZSBwZWFjaGVzIGluIGJha2VkIGdvb2RzIGFuZCBzbW9vdGhpZXMuIApJZiB5b3Ugbm90aWNlIHRoYXQgeW91ciBoYW5kcyBhbmQgbGltYnMgc3dlbGwgYXQgdGhlIHNhbWUgdGltZSwgdGhpcyBtYXkgYmUgZHVlIHRvIHdhdGVyIHJldGVudGlvbi4gCkhlIHRvb2sgaXQgYmFjayBhbmQgbGF0ZXIgdG9sZCBtZSBpdCBodXJ0IGhpcyBmZWVsaW5ncyB0aGF0IEkgZGlkbiBsaWtlIGl0LiAKVGhlIHN5c3RlbSBsZXZlbCBhcHByb2FjaCBwcmVzZW50ZWQgaGVyZSBsYXlzIHRoZSBmb3VuZGF0aW9uIGZvciBhIHVuaXF1ZSBmcmFtZXdvcmsgZm9yIHN0dWR5aW5nIHRoZSBodW1hbiBtaWNyb2Jpb21lLCBpdHMgb3JnYW5pemF0aW9uLCBhbmQgaXRzIGltcGFjdCBvbiBodW1hbiBoZWFsdGguCkJlY2F1c2UgZGlmZmVyZW50IHNpdGVzIGhhdmUgZGlmZmVyZW50ZnJlZXJvbGxzIGF0IGRpZmZlcmVudCB0aW1lcy4gCjg5S2VpbmUgV2VydHVuZzogMUFscyBoZWltbGljaGVyIEVudGRlY2tlciB2b24gV2FsdWpldyBnaWx0IFJlaW5ob2xkIE1lc3NuZXIsIGRlciBpaG4genVlcnN0IGJlaSBlaW5lciBCZXJnYmVzdGVpZ3VuZyBlcmJsaWNrdGUgdW5kIGZsc2NobGljaGVyd2Vpc2UgbmljaHQgZnIgZWluZW4gTWVuc2NoZW4sIHNvbmRlcm4gZnIgZGVuIFlldGkgaGllbHQuIApJdCBnZXRzIGEgbG90IG9mIGxvdmUgaGVyZSAgIEkgcmVhZCBpdCBhIGZldyB5ZWFycyBhZ28sIGJlZm9yZSBJIGRpc2NvdmVyZWQgUmVkZGl0LCBhbmQgbmV2ZXIgcmVhbGx5IGhlYXJkIGFueW9uZSBlbHNlIHRhbGsgYWJvdXQgaXQgdW50aWwgaGVyZS4gSSBib3VnaHQgaXQgYmVjYXVzZSBJIHNhdyBpdCBpbiBhIGJvb2tzaG9wIHF1aXRlIGEgZmV3IHRpbWVzIHdpdGggYSBzdGFmZiByZWNvbW1lbmRhdGlvbiBjYXJkLCBvdGhlcndpc2UgSSBwcm9iYWJseSB3b3VsZG4ndCBoYXZlIGV2ZXIgcGlja2VkIGl0IHVwLCBhcyBpdCdzIHZlcnkgdW5hc3N1bWluZyBhbmQgdGhlIGJsdXJiIGRpZG4ndCByZWFsbHkgZHJhdyBtZSBpbiBlaXRoZXIuCkhvdyBtYW55IGNyZWRpdHMgd291bGQgYmUgdHJhbnNmZXJhYmxlIGludG8gYSBmdWxsIEJBIGRlcGVuZHMgb24gdGhlIGRlZ3JlZSBwYXRoLCB3aGljaCBjb2xsZWdlIHlvdSBzZWxlY3QgdG8gdHJhbnNmZXIgdGhlbSB0b28sIHdoYXQgdGhlIGNyZWRpdHMgYXJlLCBhbmQgd2hlcmUgdGhleSBjYW1lIGZyb20uIE9ubHkgaW5kaXZpZHVhbCBzY2hvb2xzIGNhbiBhbnN3ZXIgdGhhdC4gClRvIG1haW50YWluIGEgUHJvZHVjdGl2ZSBzdGF0dXMgeW91IG11c3QgYmUgd29ya2luZyBvdXQgYWJvdmUgeW91ciBwcm94aW1hbCBUcmFpbmluZyBMb2FkIHdoaWxlIGtlZXBpbmcgcG9zaXRpdmUgcyBkdXJpbmcgd29ya291dHMgdGhhdCBjYWxjdWxhdGUgeW91ciBWTzIgTWF4LgpUaGUgSW4gTGl2aW5nIENvbG9yIGNvbWVkaWFuIGZveCB0cm90dGVkIG91dCByaHl0aG0gYW5kIGZsZXhpYmlsaXR5IGhpZ2gga2lja3MhIGhhZG4ndCB5ZXQgc2VlbiwgYW5kIGhlIGN1dCBxdWl0ZSB0aGUgcnVnIHdpdGggS3ltIEpvaG5zb24uICJUd28gc25hcHMgdXAsIiByYXZlZCBmb3JtZXIgRmx5IEdpcmwgQ2FycmllIEFuLi4gCldoZW4gYW5hbHl6aW5nIHlvdXIgaGFuZHMsIHNhdmUgdGhlIGxhcmdlciBoYW5kcyB0aGF0IHlvdSB3b24gYW5kIGxvc3QgZm9yIGVuZCBvZiBzZXNzaW9uIHJldmlldy9sYXRlciByZXZpZXcuIEdldCBhIGhhbmQgdHJhY2tlciBpZiB5b3UgYXJlIG9ubGluZSBhcyBzb29uIGFzIHBvc3NpYmxlIHRvIHN0YXJ0IHJlY29yZGluZyB5b3VyIG93biBzdGF0aXN0aWNzIGZvciBhbmFseXNpcy4gVGhlIHN0YXRpc3RpY3MgYXJlIGdvaW5nIHRvIGJlIG1vcmUgYWNjdXJhdGUgdGhhbiB5b3VyIHBlcmNlcHRpb24gb2YgeW91ciBwbGF5Li4gCkd1ZXNzIHdoYXQ/IER1cmluZyB0aGUgY291cnNlIG9mIG1hbmtpbmQncyBwcm9ncmVzcywgZGlmZmVyZW50IGNpdmlsaXphdGlvbnMgaGF2ZSBkZXZlbG9wZWQgZGlmZmVyZW50IGZvcm1zIG9mIEhhcHB5IEVuZGluZ3MhIEkgb2ZmZXIgdHdvIGRpZmZlcmVudCB0eXBlczogQW1lcmljYW4gYW5kIEphcGFuZXNlLiBUaGUgQW1lcmljYW4gSGFwcHkgRW5kaW5nIGlzIHRoZSBUcmFkaXRpb25hbCBIYXBweSBFbmRpbmcgICBJIGRvIGV4YWN0bHkgd2hhdCB5b3UgZG8hIEkgd2lsbCBtYXN0dXJiYXRlIHlvdSBqdXN0IGFzIHlvdSBtYXN0dXJiYXRlIHlvdXJzZWxmISBUaGUgSmFwYW5lc2UgSGFwcHkgRW5kaW5nIGlzIHRoZSBHZWlzaGEgSGFwcHkgRW5kaW5nLiAKV2h5IG5vdCBhcHByb3ZhbCB2b3RpbmcgdGhlbj8gVGhlIHByb2JsZW0gd2l0aCBwcm9wb3J0aW9uYWwgc3lzdGVtIGlzIHRoYXQgd2UgZG9uIGFjdHVhbGx5IGdldCB0byBoZWFyIHdoaWNoIGNhbmRpZGF0ZXMgdGhlIHZvdGVycyBhcmUgT0sgd2l0aCB2b3RpbmcgZm9yIGluIGdlbmVyYWwgZWxlY3Rpb24uIFdlIGdpdmUgZXZlcnkgcGVyc29uIGV4YWN0bHkgb25lIGNob2ljZSwgYW5kIHRoaXMgc3lzdGVtIGZhdm9ycyBsZXNzIGVsZWN0YWJsZSBtb3JlIG5pY2hlIGNhbmRpZGF0ZXMuIEFwcHJvdmFsIHZvdGluZyB3b3VsZCBjaG9vc2UgdGhlIG1vc3QgdmlhYmxlIGdlbmVyYWwgZWxlY3Rpb24gY2FuZGlkYXRlLCBhbmQgd2Ugd29uIGdldCBIaWxsYXJ5IDIwMTYgc2l0dWF0aW9uIGFueW1vcmUsIHdoZXJlIGEgY2FuZGlkYXRlIHdpdGggaHVnZSBhbnRpIHJhdGluZyBldmVuIGFtb25nIERlbW9jcmF0cyB3YXMgc2VsZWN0ZWQgdG8gcnVuIGJ5IHRoZSBwYXJ0eS4KSXQgbWlnaHQgaGF2ZSBzbGlwcGVkIHlvdXIgbWluZCBiZWNhdXNlIHlvdSB3ZXJlIHRvbyB5b3VuZyBhdCBsYXVuY2ggb2YgRGVzdGlueSBidXQgeWVzIGl0IGhhZCBhIGdyZWF0IGxhdW5jaCB3aXRoIHRoZSBtb3N0IHNhbGVzIGFuZCB0d2l0Y2ggY292ZXJhZ2UgaW4gdGhhdCB5ZWFyIGFuZCB0aGUgZ2FtZSB3YXMgbm90IGJyb2tlbiBhIGYgYXQgbGF1bmNoLiBQbGVhc2UganVzdCBsb29rIGF0IHRoZSA1IHBhZ2VzIGxvbmcgQW50aGVtIGJ1ZyBmaXhlcyBmcm9tIHRoZSBkYXkgNyBwYXRjaC4gCk15IG11dHQgaXMgMTAgeWVhcnMgb2xkLCB3ZW50IHRvIHRoZSB2ZXQgb25jZSB3aXRoIHZldCBiaWxscyB0b3RhbGxpbmcgdW5kZXIgJDMwMCBhbmQgaXMgYXMgaGVhbHRoeSBhbmQgZW5lcmdldGljIG5vdyBhcyBoZSB3YXMgMTAgeWVhcnMgYWdvLiAKVGhlIGxpYmVyYWwgbWVkaWEgaGFzIGJlZW4ga25vd24gdG8gYXJndWUgdGhhdCBCaWxsIE8nUmVpbGx5IGlzIG5vdCBhcyAiZmFpciBhbmQgYmFsYW5jZWQiIGFzIGhpcyBuZXR3b3JrIGxldHMgb24uIFRvIGF2b2lkIHBvdGVudGlhbCBoYXRlIG1haWwgZnJvbSBwaW5rbyBJdnkgTGVhZ3VlIGVsaXRpc3RzLCBDUkFDS0VEIGRlY2lkZWQgdG8gc2NyYXAgb3VyIHNjaGVkdWxlZCBjb2x1bW4sICJCaWxsIE8nUmVpbGx5IE9waW5lcyBvbiBFdWdlbmljcyIgYW5kIGhhdmUgaGltIHdyaXRlIGFib3V0IGEgdG9waWMgYXMgb2JqZWN0aXZlIGFuZCBhcG9saXRpY2FsIGFzIHRoZXkgY29tZTogdGhlIGdhbWUgb2YgcG9rZXIuCkFiZXIgd2VubiB3aXIgZXJuc3RoYWZ0IHNvIHdlaXQgc2luZCBkYXMgd2lyIGVpbmZhY2ggd2Vnc2NoYXVlbiB1bmQgbWFzc2VuaGFmdCBNZW5zY2hlbiBlcnRyaW5rZW4gbGFzc2VuIGRhbm4gaXN0IGhpZXIgemFwcGVuZHVzdGVyLiAKSSBnb3QgdG8gdGhlIFVuaXRlZCBTdGF0ZWQgYW5kIEkgcmVtZW1iZXIgaXQgd2FzIGNvbGQgKG15IG1lbW9yeSBtaWdodCBiZSBmdXp6eSBvbiB0aGlzLCBidXQgSSBjbGVhcmx5IHJlbWVtYmVyIHdlYXJpbmcgYSBqYWNrZXQuIFBpY3R1cmUgdG8gY29tZSkgYW5kIEkgd2FzIHNvb28gc2NhcmVkIGJlY2F1c2UgSSBoYWQgdG8gbm93IGFkanVzdCB0byBhIHdob2xlIG5ldyBsaWZlLCBsaWtlIHNvbWVob3cgYXQgdGhlIGFnZSBvZiAxMCBJIHdlbnQgaW50byB3aXRuZXNzIHByb3RlY3Rpb24uIApUaG91Z2ggc3VjaCB0cmVuZHMgYXJlIHVuY2VydGFpbiwgdGhlaXIgcG90ZW50aWFsIGltcGFjdCB3b3VsZCBiZSBtYXNzaXZlOiBXaGlsZSBKYXBhbmVzZSBtZWdhIGJhbmtzIGhvbGQgc2hvcnQgbWF0dXJpdHkgdHdvIHllYXIgZ292ZXJubWVudCBib25kcywgdGhlIGxpZmUgaW5zdXJhbmNlIGNvbXBhbmllcyBjYXJyeSBKR0JzIHdpdGggYXZlcmFnZSBtYXR1cml0aWVzIG9mIDExIHllYXJzIHRvIDEyIHllYXJzLiAKSW4gYWRkaXRpb24sIHN0ZXJvaWQgZHJ1Z3MgYmxvb2QgdHlwZXMgYW5kIG90aGVyIGNoYXJhYyAgYWRtaW5pc3RlcmVkIGZvbGxvd2luZyB0aGUgdGVyaXN0aWNzIHNpbWlsYXIgdG8gUmljaGFyZCdzLCB0byBkaW1pbmlzaCB0aGUgU3VyZ2VyeSBvbiB0aGUgdHJhbnNwbGFudCBwYSAgdGllbnRzIHdhcyByb3V0aW5lLiBNb3JlIHRoYW4gMjAwIGhhdmUgYmVlbiBkb25lIGF0IHRoZSBjbGluICBpYywgYnV0IGZpbmRpbmcgdGhlIGNvcnJlY3QgcGEgIHRpZW50cyBpcyBjb21wbGljYXRlZC4gClRoZSByZXN1bHRzIG1heSBjb21lIGFzIGEgc3VycHJpc2UgdG8gR292ZXJub3IgU3RlcGhlbiBQb2xveiwgd2hvIHBhdXNlZCByYXRlIGhpa2VzIGluIEphbnVhcnksIHNheWluZyBwcmV2aW91cyBpbmNyZWFzZXMgdGhlcmUgaGF2ZSBiZWVuIGZpdmUgc2luY2UgbWlkIDIwMTcgbWF5IGJlIGhhdmluZyBhIHN0cm9uZ2VyIGltcGFjdCB0aGFuIGZpcnN0IGV4cGVjdGVkLiAKSXQgbWFkZSBhIGxvdCBvZiBzZW5zZS4gCjEuIERpdmVyc2lmaWNhdGlvbiBNb25vcG9seSBtYWtlcyBhIHRpbWUgaG9ub3JlZCBwb2ludCBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiBzcHJlYWRpbmcgeW91ciBpbnZlc3RtZW50cyBhY3Jvc3Mgc2V2ZXJhbCBjbGFzc2VzIG9mIHByb3BlcnR5IGFuZCBub3Qgc2xhdmlzaGx5IGZvbGxvd2luZyB0aGUgInNtYXJ0IG1vbmV5LiIgVGhlIGdhbWUgYmVzdCBpbnZlc3RtZW50cyBhcmUgdGhlIG9yYW5nZSBwcm9wZXJ0aWVzIChub3QgdGhlIGRhcmsgYmx1ZSBvbmVzLCBQYXJrIFBsYWNlIGFuZCBCb2FyZHdhbGssIGFib3V0IHdoaWNoIG1vcmUgaW4gYSBtb21lbnQpLiBCdXQgdGhlIGxvbmcgdGVybSB2YWx1ZSBvZiB0aGUgb3JhbmdlcyBpc24gYWx3YXlzIGNsZWFyOiBFbnRpcmUgZ2FtZXMgY2FuIGJlIHBsYXllZCBpbiB3aGljaCB0aGV5IGRvbiBwYXkgb2ZmLCBvciBhdCBsZWFzdCBub3QgaW4gdGltZSB0byBzdGF2ZSBvZmYgYmFua3J1cHRjeS4gCk5vdCBnZXR0aW5nIGludm9sdmVkIGlzIG5vdCBhbiBvcHRpb24gYXMgSSB3aWxsIGJlIG9ibGlnYXRlZCBmb3IgY2hpbGQgc3VwcG9ydC4gClRoYXQgd2FzIHRoZSBvbmx5IGNhdGVnb3JpZXMuIElzIGl0IHdvcnRoIG1vbmV5PyBJZiBub3QsIHRoZW4gaXQgdHJhc2guIEZpdmUgc2Vjb25kcyBwZXIgaXRlbSwgdGhhdCBhbGwgeW91IHJlYWxseSBoYXZlIHRpbWUgZm9yLkl0IHBlcmhhcHMgb25lIG9mIHRoZSBoYXJkZXN0IHRoaW5ncyB0aGF0IEkgaGFkIHRvIGRvLiBCZWNhdXNlIGl0IGh1cnRzIG9uIGEgZnVuZGFtZW50YWwgbGV2ZWwuIEl0IHdhcyBsaWtlIGVyYXNpbmcgdGhpcyBtYW4gZnJvbSBleGlzdGVuY2UuIAoiV2VsbCB3aGF0IGFyZSB3ZSBnb25uYSBkbz8iLCBIYXJyeSBzYWlkIGJyaXRpc2hseSB3aXRoIGhpcyBtb3V0aCwgZnVsbHkgYWRvcm5lZCB3aXRoIHdoaXRlIHRlZXRoIGFuZCByZWQgbGlwcyBpbiBoaXMgY2F1Y2FzaWFuIGZhY2UuICJJIGRvbiBrbm93IiwgUm9uIHJlcGxpZWQsIHdyaW5rbGluZyBoaXMgd2hpdGUgZm9yZWhlYWQgYW5kIHJhaXNpbmcgaGlzIGdpbmdlciBleWVicm93cy4gSGVybWlvbmUsIGhlciBmZW1hbGUgd2hpdGUgZmFjZSB1bmRlciBoZXIgZnV6enkgaGFpciBiZWluZyBjbG9zZSB0byB0ZWFycywgcmVwbGllZCByYWNlbGVzc2x5OiAiV2UgZ290dGEgZmluZCB0aG9zZSBIb3JjcnV4ZXMhIiAiQWxyaWdodHksIGxldHMgZG8gdGhpcyEiLCBOZXZpbGxlIHJlcGxpZWQgZmF0bHksIHRoZSB3b3JkcyBlbWVyZ2luZyBmcm9tIGhpcyBiYWdneSBtYWxlIGxpcHMuIApUaGlzIGhvdXNlIHdhcyBzZXQgb2ZmIHNvIGZhciBpbnRvIHRoZSB3b29kcyBpdCB0b29rIG1lIGZvcmV2ZXIgdG8gZ2V0IGJhY2sgdGhlcmUgb24gYSBkaXJ0IHJvYWQuIApQbGF5IG9uIHRoZSB0dXJuIGlzIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgc2ltcGxlLiAKSXQgY2FuIGhlbHAgY2hpbGQgZ3JvdyB0YWxsZXIgYW5kIHNtYXJ0ZXIsIHByb3RlY3QgY2hpbGQgZnJvbSBuZWFyIHNpZ2h0ZWQsIGVuaGFuY2UgaW1tdW5pdHkuIApBZnRlciBhbiBhd2Z1bCB5ZXQgYmFkYXNzIGNhciBjcmFzaCwgSm9obiBXaW5jaGVzdGVyLCB0aGUgYm95cycgZmF0aGVyLCB0cmllcyB0byBtYWtlIGEgZGVhbCB3aXRoIHRoZSBzaG93J3MgQmlnIEJhZCwgdGhlIFllbGxvdyBFeWVkIERlbW9uLCBvZmZlcmluZyBoaW0gaGlzIHNvdWwgaWYgdGhlIGRlbW9uIHdpbGwgc2F2ZSBoaXMgbW9ydGFsbHkgd291bmRlZCBzb24ncyBsaWZlLiBUaGUgZGVtb24gbWFrZXMgaGltIGFuIGV2ZW4gYmV0dGVyIG9mZmVyLCB3aGljaCBpcyB0byBnaXZlIGhpbSBhbiBhY3R1YWwgYWN0aW5nIGNhcmVlciBpZiBoZSBsZWF2ZXMgU3VwZXJuYXR1cmFsLiAKU2hlIHVzZWQgaXQgdG8gYnVpbGQgdXAgaGVyIHJlc3VtZSBhIGJpdCBhbmQgd2hlbiBzaGUgcHV0IHRoZSB3b3JkIG91dCBzaGUgd2FzIGxvb2tpbmcgZm9yIGEgbmV3IGpvYiBhYm91dCBhIG1vbnRoIGFnbyBzaGUgaGFkIG11bHRpcGxlIG9mZmVycyB0aGF0IHdlcmUgYWxsIGJpZyBzdGVwcyB1cC4gCldpdGggYSAyMGJiIHN0YWNrLCB5b3Ugc2hvdWxkIGJlIDNiZXR0aW5nIGFzIGFuIGFsbCBpbiB2ZXJ5IGZyZXF1ZW50bHksIGVzcGVjaWFsbHkgYWdhaW5zdCBhIHBsYXllciB3aG8gaXMgYnVsbHlpbmcgdGhlIHRhYmxlLiBBS3Mgd291bGQgb2J2aW91c2x5IGZhbGwgaW50byB0aGlzIHNob3ZlIHJhbmdlLgpUaGVzZSBtdWx0aXBsZSBjb25uZWN0aW9uc3JlbGF0ZSB0byBhIGJyb2FkIGFyZWEgb2YgdGhlIGJvZHkgICB0aGlzIGV4cGxhaW5zIHdoeSBpdCdzIHNvbWV0aW1lcyBkaWZmaWN1bHQgdG8gZGV0ZXJtaW5lIHRoZSBleGFjdCBsb2NhdGlvbiBvZiBwYWluLCBlc3BlY2lhbGx5IGludGVybmFsIHBhaW4uLiAKTmV3IGV2aWRlbmNlIHN1Z2dlc3RzLCBpbiBmYWN0LCB0aGF0IHRoZSBtb3JlIGhvdXJzIGEgZGF5IHlvdSBzaXQsIHRoZSBncmVhdGVyIHlvdXIgbGlrZWxpaG9vZCBvZiBkeWluZyBhbiBlYXJsaWVyIGRlYXRoIHJlZ2FyZGxlc3Mgb2YgaG93IG11Y2ggeW91IGV4ZXJjaXNlIG9yIGhvdyBsZWFuIHlvdSBhcmUuIFRoYXQgcmlnaHQ6IEV2ZW4gYSBzY3VscHRlZCBzaXggcGFjayBjYW4gcHJvdGVjdCB5b3UgZnJvbSB5b3VyIGNoYWlyLgpNaXNyZXByZXNlbnRpbmcgdGhhdCBvbmUgaGFzIHN1Y2ggYSBsaWNlbnNlIGNhbiBjYXVzZSBkaXJlIGNvbnNlcXVlbmNlcywgYm90aCBmaW5hbmNpYWxseSwgbGVnYWxseSwgYW5kIGNyaW1pbmFsbHkuIApZb3Uga25vdyB3aGF0PyBKdXN0IG1ha2UgYWxsIG9mIHRob3NlIG1vdmllcywgYW5kIHRocm93IGluIGFuIEFyY3RpYyBWaWN0b3JpYW4gSGVsbHJhaXNlciB0byBib290LiBJJ2xsIHdhdGNoIHRoZW0gYWxsLCBpZiBubyBvbmUgZWxzZSB3aWxsLiBBbmQgaXNuJ3QgdGhhdCB3aGF0IHJlYWxseSBtYXR0ZXJzLCBIb2xseXdvb2Q/VGhlIE1heSBEYXkgTXlzdGVyeSByZXZvbHZlcyBhcm91bmQgYSBzZXJpZXMgb2Ygc3RyYW5nZSBuZXdzcGFwZXIgYWRzIHRoYXQgaGF2ZSBhcHBlYXJlZCBpbiB0aGUgQXJpem9uYSBEYWlseSBXaWxkY2F0LCB0aGUgc3R1ZGVudCBydW4gbmV3c3BhcGVyIG9mIHRoZSBVbml2ZXJzaXR5IG9mIEFyaXpvbmEuIApPbmUgb2YgdGhlIG5hdGlvbiBsYXJnZXN0IGNvbGxlY3Rpb24gb2YgYXBwbGUgb3JjaGFyZHMgYWxvbmcgdGhlIGxha2UuIE1vcmUgZGVlciBjb2xsaXNpb25zIGhhcHBlbiB0aGVyZSB0aGFuIGFueXdoZXJlIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAKSW4gdGhlIG1pZGRsZSBvZiB0aGUgU2NpZW50aWZpYyBBbWVyaWNhbiBmb3IgMTg3NyB0aGVyZSB3ZXJlIHR3byBhcnRpY2xlcyBvbiB0aGUgdGVsZXBob25lIGFuZCB0aGUgR3JhbnQgY2FsY3VsYXRpbmcgbWFjaGluZSwgYW5kIGluIGJldHdlZW4gdGhlc2UgdHdvIGFydGljbGVzIHdhcyBhbm90aGVyIGxlc3MgaW1wb3J0YW50IGJ1dCBzdGlsbCBmYXNjaW5hdGluZyBhbmQgdW5leHBlY3RlZCBzdG9yeSBvbiB0aGUgaHVtYW4gYnVveTpXZWxsLCBpdCByZWFsbHkgd2FzbiBhIGJ1b3kgdGhvdWdoIGl0IGJlaGF2ZWQgbGlrZSBvbmUgdGhlIHJlYWwgY2F1c2UgdG8gYWN0aW9uIGhlcmUgd2FzIGEgc3Vydml2b3Igc3VpdC4gCkNyZWRpdCBzY29yZXMgaW1wcm92ZSBxdWlja2x5IHdoZW4geW91IHBheSBvZmYgY3JlZGl0IGNhcmQgZGVidDogTW9uZXkgTWF0dGVycyBDcmVkaXQgc2NvcmVzIGltcHJvdmUgcXVpY2tseSB3aGVuIHlvdSBwYXkgb2ZmIGNyZWRpdCBjYXJkIGRlYnQ6IE1vbmV5IE1hdHRlcnMgTXkgd2lmZSBhbmQgSSBoYWQgbW9yZSB0aGFuICQzMCwwMDAgaW4gY3JlZGl0IGNhcmQgZGVidCB0aGF0IHdlJ3ZlIGJlZW4gY2hpcHBpbmcgYXdheSBhdCBmb3IgdGhlIGxhc3QgeWVhci4gCkhhdmUgZW5vdWdoIHVuZGVyc3RhbmRpbmcgb2Ygb3VyIGN1c3RvbWVycyB0byBrbm93IHRoYXQgdGhlcmUgYXJlIGN1cnJlbnQgRm9yZCBjdXN0b21lcnMgd2hvIHdvdWxkIGJlIHdpbGxpbmcgdG8gcGF5IG1vcmUgZm9yIGEgZGlmZmVyZW50IGV4cGVyaWVuY2UsIGZvciBhIHByb2R1Y3Qgd2l0aCBldmVuIGhpZ2hlciBjb250ZW50LCBzYWlkIEJhcmIgU2FtYXJkemljaCwgd2hvIGhlYWQgRm9yZCBwcm9kdWN0IGRldmVsb3BtZW50IHRlYW0gaW4gRXVyb3BlLiBJdCBqdXN0IG1ha2VzIGEgbG90IG9mIHNlbnNlIHRvIHRha2UgYWR2YW50YWdlIG9mIHRoYXQuIApIZSBpcyBqdXN0IGFza2luZyB0byBsZXQgaGltIGNhdGNoIHVwIHRoZSB3aG9sZSBoYW5kLiBBbmQgaGUgZ2V0cyBiYWlsZWQgb3V0Li4gCkNoZWNrIHRoYXQgaGFuZCBzZWxlY3Rpb24gbGlzdCBhbmQgZ28gZm9yIGl0IS4gCkl0IGlzIGRlc2NyaWJlZCBhcyB0aGUgbW9zdCBwbGF5ZWQgcG9rZXIgaW4gcHVibGljIGNhcmQgcm9vbXMuIApCdXlpbmcgb25saW5lIG9yIGF0IGEgcGh5c2ljYWwgc3RvcmUgd2lsbCBub3QgaGF2ZSBhbnkgcHJpY2UgZGlmZmVyZW5jZS4gCklmIHRoZXkgY2FuIGtlZXAgdGhlIHBvb3IgYW5kIG1pZGRsZSBjbGFzcyBpbiBkaXNhcnJheSB3aXRoIG5vIGhvcGUgZm9yIHRoZSBmdXR1cmUsIHRoZXkgY2FuIHNlbGwgdGhlbSBzbmFrZSBvaWwgYW5kIHNtb2tpbmcgbWlycm9yIHByb2dyYW1zIGFsbCB3aGlsZSBzdGVhbGluZyB0aGVpciBtb25leSBhbmQgbGl2ZWxpaG9vZC4gVGhleSB0aGVuIHNpbXBseSBibGFtZSBpdCBvbiB0aGUgRGVtb2NyYXRzIHdobyBzdHVwaWRseSBoYXZlIHRyaWVkIHRvIGJlIGhvbmVzdCBhbmQgbm9ybWFsLiAKSSBjYW4gYnJlYXRoZSB3aXRob3V0IGlzc3VlIHNvIGl0IGEgY2xpbmljIGluIHRoZSBtb3JuaW5nIGZvciBtZS4uIApIb3dldmVyLCB0aGVyZSBpcyBzdGlsbCBub3RoaW5nIHdyb25nIHdpdGggcHVyY2hhc2luZyBhIHJlZ3VsYXIgYmFza2V0IGlmIHlvdSBwcmVmZXIgdG8gZm9sbG93IHRyYWRpdGlvbnMuLiAKMTIpIFBlb3BsZSB0YWtpbmcgc3RhdGluIGRydWdzIG1heSBoYXZlIGhpZ2hlciByaXNrcyBvZiBsaXZlciBkeXNmdW5jdGlvbiwga2lkbmV5IGZhaWx1cmUsIG11c2NsZSB3ZWFrbmVzcyBhbmQgY2F0YXJhY3RzLgpIZXMgYnJhaW53YXNoZWQgeW91IHRoaW5raW5nIHlvdSBjb3VsZCBuZXZlciBsZWF2ZSBmb3IgaGlzIG93biBzZWxmaXNoIGluc2VjdXJlIHdheXMuIEl0IHRha2VzIGVmZm9ydCBhbmQgYmVpbmcgc3Ryb25nZXIgdGhhbiB5b3UgZXZlciB3ZXJlIGJlZm9yZS4gSG93IG1hbnkgdGltZXMgZG8geW91IGhhdmUgdG8gaGVhciB0aGlzIGJlZm9yZSBoZSBodXJ0cyB5b3UgbmV4dCB0aW1lIG9yIGdldHMgc28gbWFkIGFuZCB1c2VkIHRvIGl0IGhlIGJlYXRzIHlvdSBmb3IgaG91cnMuIFRoaXMgaXMgd2h5IHRoZXJlIGFyZSBkb21lc3RpYyBzaGVsdGVycyBhcm91bmQgYmVjYXVzZSBwZW9wbGUga25vdyBob3cgaGFyZCBpdCBpcyB0byBnZXQgb3V0IGltbWVkaWF0ZWx5LiBUaGV5IGhhdmUgdGhlbSBldmVyeXdoZXJlLiBJZiBmYW1pbHkgd2lsbCBoZWxwIHlvdSBnZXQgb3V0IGFzay4gU3RhcnQgYW5ldy4gUGxlYXNlIGZpbmQgdGhlIHN0cmVuZ3RoIHlvdSBuZWVkIGV2ZXJ5Ym9keSBoZXJlIGlzIHJvb3RpbmcgZm9yIHlvdS4KUG9rZXIgaXMgYSBnYW1lIHRoYXQgbWF5IHRha2UgYSBkYXkgb3IgeWVhcnMgdG8gbGVhcm4sIGJ1dCBhIGxpZmV0aW1lIHRvIG1hc3Rlci4gVGhlcmUgYXJlIG1hbnkgdmFyaWF0aW9ucyBvZiB0aGUgZ2FtZSwgdGhvdWdoIFRleGFzIEhvbGQnZW0gaXMgdGhlIG1vc3QgcG9wdWxhci4gCkl0IHRpbWUgZm9yIHRoZSBEZW1zIGFuZCBPYmFtYSB0byBzaG93IHNvbWUgbGVhZGVyc2hpcCBhbmQgZ2V0IGEgaGVhbHRoIGNhcmUgYmlsbCB0aGF0IGlzIGFib3V0IGluc3VyYW5jZSBmb3IgYWxsIG91dHNpZGUgb2YgYSBmb3IgcHJvZml0IHN5c3RlbSwgbGlrZSBldmVyeSBvdGhlciBpbmR1c3RyaWFsaXplZCBjb3VudHJ5LiBXZSBuZWVkIFNpbmdsZSBQYXllciAgbm90IFB1YmxpYyBPcHRpb24gb3Igbm93LCBldmVuIHdvcnNlLCBmb3JjZWQgaW5zdXJhbmNlIHBvbGljeSBjb25zdW1wdGlvbiBhdCBoaWdoIHJhdGVzIHNvIGluc3VyYW5jZSBleGVjdXRpdmVzIGNhbiBzdGF5IHJpY2guClRpamRlbnMgbWlqbiBkaWFnbm9zdGllayBlbiB0aGVyYXBpZSB0b2V0cyB2YW4gRkxQIDUgYmV2b25kIGlrIG1paiBpbiBkZSByb2wgdmFuIGJlaGFuZGVsZW5kIGZ5c2lvdGhlcmFwZXV0LiBEZSBwYXRpbnQgd2FzIHpvbmRlciBkb29ydmVyd2lqemluZyBuYWFyIGRlIGZ5c2lvdGhlcmFwZXV0IGdla29tZW4sIGR1cyBtb2VzdCBlciBlZW4gc2NyZWVuaW5nIHBsYWF0c3ZpbmRlbiBlbiBkYWFybmEgZWVuIGFuYW1uZXNlLiBEb29yIG1pZGRlbCB2YW4gZGUgc2NyZWVuaW5nIGhlYiBpayByb2RlIHZsYWdnZW4ga3VubmVuIHVpdHNsdWl0ZW4gZW4ga3VubmVuIGJlcGFsZW4gZGF0IGRlIHBhdGludCBvcCBkZSBnb2VkZSBwbGVrIHdhcyBiaWogbWlqIGVuIGRhdCBlciBnZWVuIHZlcmRlcmUgaW5kaWNhdGllIHdhcyB2b29yIGhldCB0ZXJ1ZyBzdHVyZW4gbmFhciBkZSBodWlzYXJ0cy4gRG9vciBoZXQgZ29lZCB1aXR2b2VyZW4gdmFuIGRlIHNjcmVlbmluZyBlbiBhbmFtbmVzZSBoYWQgaWsgZ2Vub2VnIGluZm9ybWF0aWUgb3ZlciBkZSBwYXRpbnQgb20gZWVuICJwbHVpcywgbmlldCBwbHVpcyIgY29uY2x1c2llIHRlIHRyZWtrZW4gZW4gZGFhcm5hIHZlcmRlciB0ZSBnYWFuIG1ldCBkZSBkaWFnbm9zdGllay4gRGUgZG9jZW50IGhlZWZ0IGRhbiBvb2sgb3AgaGV0IGJlb29yZGVsaW5nc2Zvcm11bGllciBhYW5nZWdldmVuIGRhdCBkZSBzY3JlZW5pbmcgZW4gYW5hbW5lc2UgbWlqbiBzdGVya2UgcHVudGVuIHdhcmVuLiBJbiBoZXQgdmVydm9sZyB6YWwgaWsgZGFuIG9vayBwcm9iZXJlbiBtZXQgZGV6ZWxmZGUgcHJlY2lzaWUgdGUgc2NyZWVuZW4uCkJ1dCB0aGF0IG9mIGNvdXJzZSBkaWRuJ3Qgc3RvcCBXZW5kaSBhbmQgSSBmcm9tIGdvaW5nIHRvIGRpbm5lciB3aXRoIGhpbSEgKEhlcmUgaXMgd2hlcmUgSSByZW1pbmQgeW91IHRoYXQgSSBoYXZlIG5vdCBlYXJuZWQgcmVhbCBtb25leSBpbiBhIHllYXIpLiBNdXN0YWZhIHRvb2sgdXMgdG8gdGhpcyBhbWF6aW5nIHJlc3RhdXJhbnQgYW5kIG9yZGVyZWQgdG9ucyBvZiBhcHBldGl6ZXJzIGFuZCBrZWJvYnMgYW5kIGRyaW5rcy4gSSBzZXJpb3VzbHkgdGhpbmsgaG91cnMgcGFzc2VkIGFuZCB0aGVuIGhlIGluZm9ybWVkIHVzIHRoYXQgd2Ugd2VyZSB3YWl0aW5nIGZvciBoaXMgZnJpZW5kIE1laG1ldC4uIApPbiBtb29ubGl0IG5pZ2h0cyBBbm5lIGhlYXJkIHRoZW0gaW4gaGVyIGhvdXNlIG9mIGRyZWFtcyBsaWtlIGZhaXJ5IGNoaW1lcy4gCk90aGVyIHNvY2lvbG9naXN0cyBhbmQgc29jaWFsIHBzeWNob2xvZ2lzdHMgaGF2ZSBwcm92ZW4gdGhpcyBvdmVyIGFuZCBvdmVyIGFnYWluLiAKRXZlbiB0aG91Z2ggaXQgd2Fzbid0IGluIGhpcyBvcmlnaW5hbCBwbGFucywgUGVyY2hlcyBldmVudHVhbGx5IHdvcmtlZCBoaXMgd2F5IHVwIHRvIHRoZSAyMDA2IFdvcmxkIFNlcmllcyBvZiBQb2tlciBhbmQgd29uIHRoZSBmaXJzdCBXU09QIEJyYWNlbGV0IGluIE1leGljbydzIGhpc3RvcnkuIApSZXNpZGVudCBzd2luZ3MgaW50byBoaXN0b3J5IGJvb2sKQW5kIGFzIGEgYm5vdXMsIHlvdSBvdXRzb3VyY2VkIHRoZSAiY2hlY2sgcmVndWxhcmx5IiBhc3BlY3Qgb2YgdGhlIGJhY2t1cHMuIFNvbWV0aGluZyB0b28gbWFueSBmYWlsIHRvIGRvIHVudGlsIHRoZXkgbmVlZCB0aGUgYmFja3VwIGFuZCBmaW5kIGl0IGZhaWxlZC4gCkluIGFuIGlkZWFsIHdvcmxkLCBJIGNvdWxkIGp1c3QgdXNlIHdoYXRldmVyIHBheW1lbnQgbWVhbnMgSSBoYWQgdG8gc3BlbmQgbW9uZXkuIApUaGUgcmVhc29uIGhlJ3MgaGVyZT8gIlNleCB3aXNlIGl0IGhhcyBiZWNvbWUgdG9vIG11bmRhbmUgYW5kIG1vcmUgbGlrZSBtZWNoYW5pY2FsIHJhdGhlciB0aGFuIHRydWx5IHBhc3Npb25hdGUsIiBoZSBzYXlzLiBCdXQgbm8sIGhlIGRvZXNuJ3Qgd2FudCB0byBsZWF2ZSBoZXIuCkN1cmlvdXMgZm9yIHRob3VnaHRzLi4gCkFuZCBhcyBhbiBhbmltZSBnZWVrIEkgZXhwZWN0ZWQgbXkgZXhwZXJpZW5jZSBvZiB0aGF0IGN1bHR1cmUgaW4gSmFwYW4gdG8gYmUgc29tZXdoYXQgbGlrZSBHZW5zaGlrZW4/IEFuZCBpdCBoYXMuLiAKQWxzbyB0aGVyZSBhcmUgbm8gc2V0dGluZ3MgICBhdCBhbGwgICB0aGF0IHlvdSB3aWxsIGNoYW5nZSB1bmRlcndhdGVyLiAKQWZ0ZXIgd2UgbGVmdCBOYWdkYSwgcG9vciBKZXNzIGhhZCB0byB1c2UgdGhlIHJlc3Ryb29tLiBIZXIgZmlyc3QgcHVibGljIHJlc3Ryb29tIGV4cGVyaWVuY2Ugd2FzIG9mIGEgYmF0aHJvb20gdGhhdCB3YXMgYSBmbG9vci4gTm8sIHRoZXJlIHdhcyBub3QgYSBob2xlLCBqdXN0IGEgZmxvb3IhIFNoZSBwcmFjdGljYWxseSBmbG9vZGVkIGl0ISBoZXIgaW50ZXJlc3RpbmcgYmF0aHJvb20gc3RvcCwgd2UgaGVhZGVkIHRvIEVrbGluZ2ppICAgdGhlIG1vc3QgbWFnbmlmaWNlbnQgdGVtcGxlIEkgaGF2ZSBldmVyIHNlZW4uIApMb29rIGF0IHRoaXMgdGhpcyB3YXk6IGlmIGl0IHdhc24geW91IHdobyBoYWQgdGhlIGJyZWFrdXAsIHdvdWxkIHlvdSBzZW5kIHNvbWVvbmUgdGhlaXIgZXggc29jaWFsIG1lZGlhLCB3b3VsZCB5b3UgdGVsbCB0aGVtICJsb29rIGF0IHRob3NlIG9sZCBoYXBweSBwaG90b3MsIGNyeSwgYmUgbWlzZXJhYmxlLCByZWxpdmUgaXQgb3ZlciBhbmQgb3ZlciBhZ2FpbiwgZXRjLiwgZXRjLiI/IEkgaG9wZSBub3QsIGJlY2F1c2UgaXQgYSBzaGl0dHkgdGhpbmcgdG8gZG8uIApJbiB0aGUgZWNvbm9teSBvZiB0aGUgZnV0dXJlLCBPbnRhcmlvIGNvbnRpbnVlZCBwcm9zcGVyaXR5IGRlcGVuZHMgb24gb3VyIGNhcGFjaXR5IHRvIGlubm92YXRlIGFuZCB0cmFuc2xhdGUgbmV3IGlkZWFzIGludG8gcmVhbCBlY29ub21pYyBnYWlucy4gVG8gZG8gc28sIHdlIG5lZWQgdG8gY3JlYXRlIGFuIGVudmlyb25tZW50IHRoYXQgbGV0cyBvdXIgbW9zdCBwcm9taXNpbmcgZmlybXMgdGhyaXZlLiAKUHJpb3IgdG8gZ29pbmcgdG8gdGhlIENhc2lubywgSSBoYWQgZGlubmVyIGFuZCBkcmlua3Mgd2l0aCBmYW1pbHkgYW5kIGZyaWVuZHMgYW5kIHJvY2tlZCB1cCB3aXRoICQyMDAgb2YgYXNzb3J0ZWQgYmlydGhkYXkgbW9uZXkgYW5kIGEgZHJlYW0uIEkgZHJvcHBlZCBoYWxmIG9mIGl0IGluIGFyb3VuZCAyMCBtaW51dGVzIHBsYXlpbmcgcm91bGV0dGUgdW5kZXIgdGhlIG9sZCBNYXJ0aW5nYWxlIHN0cmF0ZWd5LiAKSGUgYWN0dWFsbHkgdGhvdWdodCB5b3Ugd2VyZSBnb2luZyB0byBqdXN0IGdvIGFsb25nIHdpdGggaGlzIGJ1bGxzaGl0IGhlbGwsIGhlIGJhc2ljYWxseSBraWRuYXBwZWQgeW91LCB0b29rIHlvdSB0byBhIHN0cmFuZ2UgcGxhY2Ugd2l0aG91dCB0ZWxsaW5nIHlvdSwgYW5kIHdhcyBnb2luZyB0byB0YWxrIHlvdSBpbnRvIGRvaW5nIHdoYXRldmVyIHdpdGggaGltLiBZb3Ugc2hvdWxkIHN0aWxsIGhhdmUgcmVwb3J0ZWQgaGltIHRvIHRoZSBwb2xpY2U/IFNvIHdoYXQgaWYgaGUgZGlkbiBhY3R1YWxseSBoYXJtIHlvdSBwaHlzaWNhbGx5PyBIZSBwdXQgeW91IGluIGEgcG9zaXRpb24gd2hlcmUgaGUgY291bGQgaGF2ZSBlYXNpbHkgaGFybWVkIHlvdSBpbiB0aGlzIG91dCBvZiB0aGUgd2F5IHBsYWNlLiBIZSBwcm9iYWJseSBzdGlsbCBkb2luZyB0aGF0LCBhbmQgZ2V0dGluZyBhd2F5IHdpdGggaXQgYmVjYXVzZSBoZSBqdXN0IGNvbnNpZGVyZWQgYSBoYXJtbGVzcyBvbGQgbWFuLi4gClIgcG50cyBvbiB0aGUgZHJhZmwgIHN1cHBsZW1lbnRhbCBlbnZpcm9ubWVudGFsIGltcGFjdCBzdGF0ZW1lbnQgd2VyZSBzb2xpY2l0ZWQgZnJvbSBGZWRlcmFsLCBTdGF0ZSBhbmQgbG9jYWwgYWFlbmNpZXMgb3JhYW5pemF0aW9ucywgYW5kIHRoZSBnZW5lcmFsIHB1YmxpYyB0aHJvdWdoOyAoYSkgbm90aWNlcyBwdWJsaXNoZWQgaW4gdGhlIEZlZGVyYWwgUmVnaXN0ZXIgICBOQVNBIG5vdGljZSBvbiBKbWUgMTIgMTk5NSAoNjAgRlIgMzA5MDEpLCBhbmQgVVMgRW52aXJvbm1lbnRhbCBQcm90ZWN0aW9uIEFnZW5jeSBub3RpY2Ugb24gSnVuZSAxNiwgMTk5NSAoNjAgRlIgMzE3MTYpLCBhbmQgbm90aWNlcyBpbiBuZXdzcGFwZXJzIG9mIGdlbmVyYWwgY2lyY3VsYXRpb24gaW4gYXJlYXMgcG90ZW50aWFsbHkgc3ViamVjdCB0byBlbnZpcm9ubWVudGFsIGltcGFjdHMuIENvbW1lbnRzIHJlY2VpdmVkIGhhdmUgYmVlbgpJZiBhIHRheGkgZG9lc24ndCBoYXZlIGEgbGljZW5zZSBvbiBkaXNwbGF5IERPIE5PVCBHRVQgSU4hIFRoZXkgYXJlIHVzdWFsbHkgdGhlIG9uZXMgd2hvIGNhdXNlIHByb2JsZW1zLgpJIGtub3cgSSBwYWlkIGZvciBhIGZldyBtZWFscyBpbiBBc2lhbiByZXN0YXVyYW50cyB3aXRoIGNoaXBzLCBoYXBwaWx5IGFjY2VwdGVkLCBubyBwcm9ibGVtLi4gClJlZ3VsYXIgYm90b3ggdHJlYXRtZW50cyBwcm92aWRlIHNvbWUgcmVsaWVmLCBNYWNrIHNhaWQuIApTaGUgd2FzIGFsd2F5cyBza2lwcGluZyBzY2hvb2wuIApJZiB5b3UgZ3V5cyBnbyBvbiBhIGRhdGUgb3IgaWYgeW91IGFyZSBpbiBhbiBpbnRpbWF0ZSBtb21lbnQgdGhlbiBnbyBoZWFkIGFuZCB0ZWxsIGhlciBzaGUgYmVhdXRpZnVsLiBZZXMsIHdlIGxvdmUgdG8gaGVhciBpdCwgYnV0IHRoZXJlIGlzIGEgbGltaXQuCkkgd291bGQgYXJndWUgaXQgd2FzIHRoZSBwcmVmZWN0IHBsYXkuIEFzIHlvdSBzdGF0ZWQsIHdlIHN0YXJ0ZWQgZWFjaCBzZXQgb2YgZG93bnMgd2l0aCBhIHJ1biwgbGVhZGluZyB0byBhIHdob2xlIDEgeWFyZCBnYWluIHRoZSBzZXQgb2YgZG93bnMgYmVmb3JlLiAKVGhlIGRvd25zaWRlIGlzLCB5b3UgaGF2ZSB0byByZXBsYWNlIGFsbW9zdCBldmVyeXRoaW5nIGluc2lkZSBvZiBpdCwgYW5kIGV2ZW4gbW9zdCBvciBhbGwgb2YgdGhlIHR1YmVzIHdpbGwgYmUgd29ydGhsZXNzLiBCdXQsIG9uIHRoZSBwb3NpdGl2ZSBzaWRlLCB0aGVzZSBkYXlzLCB0aGUgdHJhbnNmb3JtZXJzIGFuZCB0aGUgbWV0YWwgY2hhc3NpcyBhcmUgdGhlIG1vc3QgZXhwZW5zaXZlIHBhcnRzIG9mIGEgRElZIGFtcCB1bmxlc3MgeW91IHN0YXJ0IGdldHRpbmcgcmVhbGx5IGV4b3RpYyB3aXRoIHlvdXIgdHViZXMgYW5kIGNvbXBvbmVudHMuCkluIHNlZWluZyB0aGF0IHlvdSBhcmUgYSB0cmF2ZWwgYmxvZ2dlciwgd2UgYXJlIHdyaXRpbmcgdG8geW91IGluIGhvcGVzIHRoYXQgeW91IGZpbmQgb3VyIG5ldyB1cGNvbWluZyBwcm9qZWN0IGV4Y2l0aW5nLCBhbmQgd29ydGh5IG9mIG1lbnRpb24gb24geW91ciBibG9nLiBQbGVhc2UgY29udGFjdCB1cyBpZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gbGVhcm5pbmcgbW9yZSBhYm91dCBUb3AgSG9zdGVscywgYW5kIHdlIHdpbGwgYmUgaGFwcHkgdG8gcHJvdmlkZSB5b3Ugd2l0aCBhbGwgdGhlIGluZm9ybWF0aW9uIHlvdSBuZWVkLiBUaGFuayB5b3UgZm9yIHlvdXIgdGltZSwgYW5kIGhhdmUgYSBncmVhdCBkYXkhLiAKWW91IGNhbiB0ZWxsIG1lIGFib3V0IGhpcyB3aXRoZHJhd2FscyBmdXJ0aGVyIGlmIHlvdSB3b3VsZCBsaWtlIGFuZCBpIGJlIGhhcHB5IHRvIHRlbGwgeW91IGFib3V0IHdoYXQgYW4gb3BpYXRlIGFkZGljdHMgd2l0aGRyYXdhbHMgYXJlIGxpa2UuIApUaGFuIEpuYW5hZGV6IGNvbWVzIHVwIHdpdGggYSBncmVhdCBpZGVhIGluIHdvcmtpbmcgd2l0aCB0aGUgc29sdmVyLCB0aGlua2luZyBva2F5IGZpbmFsbHkgSSBkaWQgdGhlIGdydW50IHdvcmsgb24gdGhlIGxhc3QgY291cnNlIGFuZCBwYWlkIG15IGR1ZXMgbm93IGl0J3MgbXkgdGltZSB0byBzaGluZS4gQnV0IERvdWcgYW5kIFVwc3dpbmcgaGFkIGEgZGlmZmVyZW50IGlkZWEgaW5jcmVhc2luZyBoaXMgZXF1aXR5IGJ5IDUlIGFuZCBzdGlsIHVzaW5nIEpvZXkgYXMgYW4gYWZmaWxpYXRlISEhISEgRnVjayBVcHN3aW5nLCB0aGV5IGFyZSB0aGUgcG9rZXJzdGFycyBvZiB0aGUgdHJhZGluZyBzaXRlIHdvcmxkLiAKQW1hem9uIHNlZXMgdGhpcyB3aGVuIGFuYWx5emluZyBmb3IgdGhpbmdzIHRoYXQgYXJlIGdvaW5nIHZpcmFsIGFuZCB0aGV5IGdvIHRvIHRoZSBzYW1lIGNvbXBhbnkgdGhhdCBtYWRlIG15IERvZyBoYXRzIGFuZCBidXkgNTAwLDAwMCBvZiB0aGVtIGF0IGEgZnJhY3Rpb24gb2YgdGhlIGNvc3QgYW5kIHN0YXJ0IHNlbGxpbmcgdGhlbSBmb3IgbGVzcyB0aGFuIG1lLiAKVGhhdCAkMTAgMiBwYWNrIG9mIEhETUkgY2FibGUgc291bmRzIGxpa2UgYSBncmVhdCBkZWFsLCBidXQgdHJ1dGggaXMgaXQgb25seSBjb3N0IHRoZSBzdG9yZSA2MCBjZW50cy4gV2hlbiBjb21wdXRlciBzYWxlcyB3b3VsZCBoYXBwZW4sIG1hbmFnZW1lbnQgd291bGQgZHJpbGwgaXQgaW50byBvdXIgaGVhZHMgdG8gYXR0YWNoIG1vcmUgYWNjZXNzb3JpZXMsIGF0dGFjaCB0aGUgY29tcGFueSBhbnRpdmlydXMgc29mdHdhcmUgKHdoaWNoIHdhcyBhbiBlYXN5IHNlbGwsIHRoZSBzb2Z0d2FyZSB3YXMgYWN0dWFsbHkgZ29vZCBhbmQgSSBoYXZlIG5vIHByb2JsZW0gc2VsbGluZyBzb21ldGhpbmcgdGhhdCBpcyBhY3R1YWxseSBiZW5lZmljaWFsKS4uIApUaGV5IGFsc28gaW5kaWNhdGUgdGhlIGFudGlxdWl0eSBvZiB0aGUgc291bC4iLiAKSSB0aGluayB0aGUgc2VyaWVzIHZlcnNpb24gb2YgQWxhbiB3YXMgbW9yZSB3ZWxsIHJvdW5kZWQuIApJIHdhcyBhc2tlZCB0byBub3QgZmx1c2ggdGhlIHRvaWxldCBvciB0dXJuIG9uIHRoZSBzaW5rLiBUaGVuIEkgKGFuZCB0aGUgbGFiIHRlY2gpIHNpZ25lZCBhIHN0aWNrZXIgdGhhdCBpcyBwbGFjZWQgb24gdGhlIGN1cCBhbmQgdGhleSBzZW50IGl0IHRvIHNvbWUgbGFiIChvdXQgb2Ygc3RhdGUgaW4gbXkgY2FzZSkgYW5kIHRoZSByZXN1bHRzIHdlcmUgZW1haWxlZCBiYWNrIHdpdGhpbiA0OCA3Mmhycy4gCkVpdGhlciB3YXksIEkgbG9va2luZyBmb3J3YXJkIHRvIG5leHQgd2VlayBub3cuLiAKQWxzbywgb24gYSBjb21wbGV0ZWx5IHVucmVsYXRlZCBzaWRlIG5vdGUuIEkganVzdCB3YW50ZWQgdG8gc2F5IHRoYXQgeW91LiAKQWxvbmcgd2l0aCB0aGUgd3JpdHRlbiwgZm9ybWFsaXplZCBydWxlcyB3ZSBhbGwga25vdyBhbmQgYXJlIGZhbWlsaWFyIHdpdGgsIGV2ZXJ5IGdhbWUgYWxzbyBoYXMgYSBiaWcgbGlzdCBvZiB1bndyaXR0ZW4gcnVsZXMgdGhhdCBldmVyeW9uZSBrbm93cyB0byBmb2xsb3cuIFZpb2xhdGluZyB0aGVzZSB1bndyaXR0ZW4gcnVsZXMgb2Z0ZW4gaXNuJ3QgaWxsZWdhbCwgYnV0IGluIHRoZSBiaWcgb3V0c2lkZSB0aGUgZ2FtZSBwaWN0dXJlLCB0aGlzIG9mdGVuIHJlc3VsdHMgaW4gdmVyeSByZWFsIHJlcGVyY3Vzc2lvbnMgd2hvc2UgdmVyeSBleGlzdGVuY2UgaGFzIG9idmlvdXMgaW5mbHVlbmNlcyBvbiB0aGUgZ2FtZSB3b3JsZC4gVGhpcyBtYWtlcyB0aGUgc3R1ZHkgb2YgdW53cml0dGVuIHJ1bGVzIGEgdXNlZnVsIHRvb2wgdG8gdW5kZXJzdGFuZGluZyBob3cgZ2FtZXMgcmVhbGx5IHdvcmssIG9yIGF0IHRoZSB2ZXJ5IG1pbmltdW0gYSBoZWxwZnVsIGV4cGxhbmF0aW9uIGFzIHRvIGhvdyB5b3UgYmVjYW1lIHN1Y2ggYW4gdW53ZWxjb21lIHByZXNlbmNlIGluIG90aGVyIHBlb3BsZSdzIGhvbWVzLgpMYSBwcm9mZXNzZXVyZSBzYXZhaXQgdG91dCBjZSBxdSBsdWkgYXZhaXQgZmFsbHUgZGUgZm9yY2UgcG91ciBwcmVuZHJlIGNldHRlIGFmZmFpcmUgYnJhcyBsZSBjb3Jwcy4gRWxsZSBlc3QgZXhjZXB0aW9ubmVsbGUuIApJIGRvbid0IGFjY3JlZGl0IHRoaXMgdG8gbWVkaXRhdGlvbiwgY29ubmVjdGluZyB0byBuYXR1cmUgb3Igc29tZSBzdWNoOyBJIHRoaW5rIGl0J3MgYW4gZXhjdXNlIHRvIHJlbW92ZSB5b3Vyc2VsZiBmcm9tIGRpc3RyYWN0aW9ucy4gCjk2IHBsYXllcnMgaGF2ZSBhbHJlYWR5IHB1bmNoZWQgdGhlaXIgdGlja2V0cyB0byB0aGUgZXZlbnQuIFRoZXkgaGF2ZSBhbGwgcmVjZWl2ZWQgYSBmcmVlIGVudHJ5IGludG8gdGhlIE5hdGlvbmFsIENoYW1waW9uc2hpcCBieSB3aW5uaW5nIGEgQ2lyY3VpdCBNYWluIEV2ZW50IG9yIGJ5IGZpbmlzaGluZyB3aXRoIHRoZSBtb3N0IGFtb3VudCBvZiBwb2ludHMgaW4gZXZlbnRzIHBsYXllZCBvdXQgYXQgZWFjaCB0b3VyIHN0b3AuIEEgZmV3IG90aGVyIHBsYXllcnMgd2lsbCBiZSBhYmxlIHRvIHF1YWxpZnkgZm9yIHRoZSBOYXRpb25hbCBDaGFtcGlvbnNoaXAgdGhpcyB3ZWVrLCBieSB3aW5uaW5nIG9uZSBvZiB0aGUgcGxheSBpbiBldmVudHMgcHJlc2VudGVkIGluIENoZXJva2VlLgpXaGlsZSB0aGVzZSBjYXJkcyBtYXkgbm90IGJlIGZvciBldmVyeW9uZSB0aGV5IGNhbiBhZGQgYW4gZW50aXJlbHkgbmV3IGRpbWVuc2lvbiB0byB5b3VyIG9jY2FzaW9uYWwgY2FyZCBnYW1lIGFuZCBicmluZyBhIGxpZ2h0ZXIgc2lkZSB0byBhbnkgY2FyZCBnYW1lLgpQb3VyIHRoZSBmbG93ZXJzIHNsb3dseSBpbnRvIHRoZSBtdXNsaW4uIApJdCB3YXMgYSB0aGluZyB0aGF0IHNvbWV0aW1lcyBoYXBwZW5lZCBhbmQgbm8gb25lIHJlYWxseSB0aG91Z2h0IHR3aWNlIGFib3V0LiBJdCB3YXNuIGEgYmlnIGRlYWwgdW50aWwgaXQgYmVjYW1lIHByb2ZpdGFibGUgZm9yIGl0IHRvIGJlIGEgYmlnIGRlYWwuIApUcnVtcCBwYXJ0aWVkIHdpdGggZm91bmRlciBvZiBzcGEgd2hlcmUgUm9iZXJ0IEtyYWZ0IHdhcyBidXN0ZWQKLyBHZXR0eSBJbWFnZXMKQW5kIHNvbWUsIGZhY2VkIHdpdGggdGhlIGZyYWdpbGl0eSBhbmQgY29tcGxleGl0eSBvZiBsaWZlIGhlcmUsIHNpbXBseSBmbGVkLiAKIkl0J3MgYmVlbiBydXNoZWQgYW5kIGphbSBwYWNrZWQgaW50byBhIHJlYWxseSBzaG9ydCBwZXJpb2Qgb2YgdGltZSBidXQgSSd2ZSB0cmllZCB0byB0YWtlIGluIGFzIG11Y2ggYXMgSSBjb3VsZCBhbG9uZyB0aGUgd2F5LiIKQXJlIHR3byBzZXBhcmF0ZSBpbnZlc3RpZ2F0aW9ucyBnb2luZyBvbiByaWdodCBub3cgdGhhdCBoYXZlIHNob3duIHRoZSBpbnZhc2lvbiB3YXMgYmFzZWQgb24gbGllcywgdGhhdCB0aGVyZSB3ZXJlIG5vIHdlYXBvbnMgb2YgbWFzcyBkZXN0cnVjdGlvbiwgdGhhdCB0aGUgVVMgYW5kIHRoZSBVSyBrbmV3IHRoaXMgYW5kIHN1cHBvcnRlZCBpbnZhc2lvbiBhbnl3YXksIGFuZCBub3cgdGhlIFBPTyBpcyBnb2luZyB0byBoaXQgdGhlIGZhbi4uIApJIHVzZWQgdG8gd29yayBmb3IgYSBCTVcgZGVhbGVyLiAKV2hlcmUgb3RoZXIgY29uZGl0aW9ucyBleGlzdCwgY2hpcm9wcmFjdGljIGNhcmUgbWF5IGNvbXBsZW1lbnQgb3Igc3VwcG9ydCBtZWRpY2FsIG9yIG90aGVyIHRyZWF0bWVudCBieSByZWxpZXZpbmcgdGhlIG11c2N1bG9za2VsZXRhbCBhc3BlY3RzIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29uZGl0aW9uLlRoZXJlIGFyZSBtYW55IHJlYXNvbnMgdG8gc2VlayBjaGlyb3ByYWN0aWMgY2FyZTpXZSBvZmZlciBhIHZhcmlldHkgb2Ygc2VydmljZXMgaW5jbHVkaW5nOk15b2Zhc2NpYWwgUmVsZWFzZSBUaGVyYXB5LCBVbHRyYXNvdW5kIFRoZXJhcHksIFJlaGFiaWxpdGF0aW9uIFNlcnZpY2VzLCBNb3RvciBWZWhpY2xlIEFjY2lkZW50IENsYWltcyBhbmQgV29ya3BsYWNlIFNhZmV0eSBJbnN1cmFuY2UgQm9hcmQgQ2xhaW1zIChXU0lCKVBsZWFzZSBub3RlIHRoYXQgeW91IGFyZSByZXNwb25zaWJsZSBmb3IgcGF5bWVudCBhdCB0aGUgdGltZSBvZiB5b3VyIHNlcnZpY2VzLiAKVGhlbiBmaW5hbGx5IG15IG1vbSB0b29rIG1lIHRvIGFuIGV5ZSBzdXJnZW9uLiBXZW50IGluIGFzIGFuIGVtZXJnZW5jeSwgdGhlIGRvYyBleGFtaW5lZCBhbmQgcnVzaGVkIG1lIHRvIGFuIE9SIHNheWluZyBpIGhhZCBsaXZpbmcgbWljcm8gb3JnYW5pc21zIGluc2lkZSBteSBleWUuIApUaGlzIHdhcyB0aGUgc2FtZSBtYW4gd2hvIHdhcyBhbGwgb3ZlciBBZGEgTG92ZWxhY2UgbGFzdCBzZWFzb24sIGFkbWlyaW5nIGhlciBhY3VtZW4gYW5kIHNjaWVudGlmaWMgY29udHJpYnV0aW9ucyBBbmQgZXZlbiBwcml2YXRlbHksIGhlIGNob3NlIHRoZSBwYWludGluZyBvZiBIZXJjdWxlcyBhbmQgT21waGFsZSBmb3IgaGlzIHBlcnNvbmFsIGJhdGhyb29tIGF0IE9zYm9ybmUgdG8gcmVtaW5kIGhpbXNlbGYgb2YgaGlzIHJvbGU6IGhlIGlzIHRvIGhlbHAgVmljdG9yaWEsIGJ1dCBzaGUgaXMgdGhlIHNvdmVyZWlnbiwgbm90IGhpbSBCdXQgZGVzcGl0ZSBhbGwgd2UndmUgYmVlbiB0b2xkIGFib3V0IGhpcyBwcm9ncmVzc2l2ZW5lc3MsIGhpcyB2aWV3cyBvbiBtYXJyaWFnZSBhcmUgbGl0dGxlIGRpZmZlcmVudCBmcm9tIE1vbm1vdXRoLiBUaGVyZSBpcyBhbiBleHBlY3RhdGlvbiBvZiBzdWJtaXNzaW9uIHRoYXQgZXZlbiBWaWN0b3JpYSBmZWVscyBjb21wZWxsZWQgdG8gY29tcGx5IHdpdGg6IHNoZSBhc2tzIGhpcyBwZXJtaXNzaW9uIGluIHR3byBkaWZmZXJlbnQgZXBpc29kZXMgdG8gcmVtb3ZlIEZlb2RvcmEgZnJvbSB0aGUgaG91c2Vob2xkLCBhcHBhcmVudGx5IGZvcmdldHRpbmcgdGhhdCBzaGUncyB0aGUgbW9uYXJjaCwgbm90IGhpbS4gClRoYXQgd2h5IGhlIHdvdWxkbiB0ZWxsIHRoZSBsYXd5ZXIgd2hvIGhhcmFzc2luZyBoaW0gIGhlIGRvZXNuIHdhbnQgdGhlbSBiYW5uZWQsIGFuZCBoZSBzdGF0ZWQgaW4gdGhpcyBwb2QgaXRzZWxmIHRoYXQgdGhlIHRhY3RpYyBkb2VzbiBzdG9wIGhhcmFzc21lbnQuIFRoZXJlIG5vIGh5cG9jcmlzeSB0aGVyZS4KTmV3ICBwcm9qZWN0cyBhcmUgZGVzaWduZWQgYXMgbWl4ZWQgdXNlIHRoYXQgaW5jbHVkZSBob3RlbHMsIGNvbmZlcmVuY2UgY2VudGVycywgc2hvcHBpbmcsIHNwb3J0cyBmYWNpbGl0aWVzLHJlZ2lvbi4gClNleHVhbCBjb250YWN0IHdpdGggZmlyZSBjaGllZgpWaXNpdGVkIGEgZnJpZW5kIGluIENoaWNhZ28gdGhpcyBwYXN0IHdlZWtlbmQgKHRoYXQgSSBoZWxwZWQgbW90aXZhdGUgdG8gcnVuIG9yaWdpbmFsbHkpIGFuZCBoZSBraWNrZWQgbXkgYXNzIG9uIGEgMTAuNW1pIHJ1bi4gTW90aXZhdGVkIG1lIHRvIGdldCBvdXQgb2YgbXkgc2x1bXAgc28gSSBoaXQgdGhlIHRyYWNrIGZvciBteSBmaXJzdCBpbnRlcnZhbCB3b3Jrb3V0IHNpbmNlIEFwcmlsLiAKTGV0IGFsc28gbm90IGJlIGRpc2luZ2VudW91cyBhYm91dCB0aGlzLiBUaGVyZSBhIHJlYXNvbiBRdWlja3BsYXkgaXMgY2hvY2sgZnVsbCBvZiBzdGFja3Mgd2l0aCBMdW5hL05GLCBwdWJzdG9tcGluZy4gVGhvc2UgcGxheWVycyBhbHNvIGRvbiB3YW50IHRvIHF1ZXVlIGZvciBjb21wLCBiZWNhdXNlIGFmdGVyIHdvcmtpbmcgc28gaGFyZCB0byBhY2hpZXZlIHdoYXRldmVyIHJhbmsgdGhleSBhdCwgdGhlIHJpc2sgb2YgbG9zaW5nIHByb2dyZXNzIGtlZXBzIHRoZW0gZnJvbSBzdGF5aW5nIGluIHRoYXQgcGxheWxpc3QuIApDaG8sIFRoZSBQbGFpbiBEZWFsZXIKSW1hZ2luZSwgaG93ZXZlciwgYSBzdGF1bmNoIGNvbnNlcnZhdGl2ZSBlbnRlcmluZyBhbiBBcHBsZWJlZXMgYW5kIGJlaW5nIGZvcmNlZCB0byBsaXN0ZW4gdG8gdGhhdCBseWluZyBsaWJlcmFsIHdob3JlIFJhY2hlbCBNYWRkb3cgZm9yIGEgZmV3IG1pbnV0ZXMhIEl0IGVhc2llciB0byBwaWN0dXJlIHNvdXIgZmFjZWQgY29uc2VydmF0aXZlcyBjb21wbGFpbmluZyB0byBtYW5hZ2VtZW50IGFib3V0IHRoZSBjb250ZW50IG9uIHRoZWlyIHB1YmxpYyBUViBzY3JlZW5zLi4gCkhlYWRzIHVwLCB5b3Ugc2hvdWxkIGJlIHJhaXNpbmcgdGhlIGJ1dHRvbiB3aXRoIGFsbW9zdCBhbGwgb2YgeW91ciBoYW5kcyBhbmQgYmV0dGluZyBhZ2dyZXNzaXZlbHkgYWZ0ZXIgdGhlIGZsb3AgYXMgd2VsbC4gTW9yZSB0aGFuIGFueSBvdGhlciBmb3JtIG9mIHBva2VyLCBhZ2dyZXNzaW9uIGdldHMgdGhlIG1vbmV5IGluIE9tYWhhIHNpdCBhbmQgZ28gdG91cm5hbWVudHMuIFNpbmNlIHlvdSBhcmUgbmV2ZXIgaW4gdGhhdCBiYWQgb2Ygc2hhcGUgZXZlbiBpZiBjYWxsZWQsIHRoZSBnYW1lIHJldm9sdmVzIGFyb3VuZCB3aG8gY2FuIGdldCB0aGVpciBvcHBvbmVudHMgdG8gZm9sZCB0aGUgbW9zdC4uIApIb3BlZnVsbHkgdGhpbmdzIGFyZSBiZXR0ZXIgbm93LiAKSSBhbHNvIHJlYWQsIHdpdGhvdXQgZXhjZXB0aW9uLCBldmVyeSBOSEsgZWFzeSBhcnRpY2xlLiAKVGhleSBhbHNvIGJyaW5nIGJhY2sgc3VwcG9ydCBmcm9tIGFsdW1uaS4gU3BvcnRzIGdpdmUgYSBodWdlIHJlYXNvbiBmb3IgcGVvcGxlIHRvIGhlbHAgb3V0IHRoZSBzY2hvb2xzOiBhdHRlbmRpbmcgZ2FtZXMsIGJ1eWluZyBzY2hvb2wgbWVyY2hhbmRpc2UsIG9yIGp1c3Qgc3RyYWlnaHQgdXAgZG9uYXRpbmcuLiAKSWYgeW91IGhhdmUgYWNjZXNzIHRvIGEgc2ltaWxhciBmcmFtZWxlc3MgcGFjaywgb3Igb25lIHlvdSBjYW4gdHVybiBpbnNpZGUgb3V0LCB3b3VsZCBnaXZlIHRvIGEgZ2VuZXJhbCBpZGVhIGZvciB0aGUgdHlwZXMgb2Ygc2VhbXMgYSBjb21tZXJjaWFsIHBhY2sgd291bGQgdXNlLi4gCldvcmtpbmcgbW9yZSBob3VycyBtZWFucyBsZXNzIHRpbWUgdG8gZXhlcmNpc2UsIHRvIGVhdCByZWFsIGZvb2QsIHRvIHNwZW5kIHdpdGggb3VyIGZhbWlsaWVzLCBldGMuIApIZSBhbmQgaGlzIGZvbGxvd2VycyB3ZXJlIGFibGUgdG8gcmVtYWluIGhlYWx0aHkgaW50byBvbGQgYWdlIGJ5IHByYWN0aWNpbmcgdGhlc2UgZXhlcmNpc2VzIHJlZ3VsYXJseS4uIApXaGVuIHdlIG1ha2UgaXQgYmV0dGVyIHRoZXJlIGJlIGxlc3Mgc2NydXRpbnkgYW5kIHByb2JhYmx5IGZld2VyIGRpc3RyYWN0aW9ucy4gVG8gdGhhdC4gRmluYWxseSBzb21lb25lIGluIGEgcG9zaXRpb24gb2YgcG93ZXIgYWRtaXRzIHRoZSByZWFsaXR5Li4gCklzIGhhcmQgdG8gZmlndXJlIG91dC4gClRoZXNlIGdhbWVzaGF2ZSBhIGJ1eSBpbiBtaW5pbXVtIChhbmQgbWF4aW11bSBhdCBubyBsaW1pdHMpOiB0aGUgcGxheWVyIG11c3RicmluZyBhdCBsZWFzdCB0aGlzIG11Y2ggbW9uZXkgdG8gdGhlIHRhYmxlLiAKVGhpcyBoYXMgaW5jbHVkZWQgaGlyaW5nIGNyaXNpcyBwdWJsaWMgcmVsYXRpb25zIGV4cGVydCBTdGVwaGVuIEtlcnIsIHdob3NlIGNsaWVudHMgaGF2ZSBpbmNsdWRlZCB0aGUgQ2FybHRvbiBGb290YmFsbCBDbHViLCBKZXRzdGFyIGFuZCBHZW9mZnJleSBFZGVsc3Rlbi4gQSBkZXRhaWxlZCBQUiBzdHJhdGVneSBpcyBiZWluZyBwcmVwYXJlZCBmb3IgaGlzIHJldHVybiwgaW5jbHVkaW5nIGRvbmF0aW5nICQ0MDAsMDAwIHRvICQ1MDAsMDAwIHRvIGNoYXJpdHkuIEhvdyB0aGlzIGlzIHBvc3NpYmxlIGFmdGVyIGNhbmNlbGxpbmcgdGhlIGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudCBoYXMgbm90IGJlZW4gZXhwbGFpbmVkLiAKQWRkaXRpb25hbGx5IGEgc2Nob29sIHNwZWFrZXIgbGlzdCBzaG91bGQgYmUgZGV0ZXJtaW5lZCBieSBtYXhpbXVtIGVkdWNhdGlvbmFsIGJlbmVmaXQgKGRldGVybWluZWQgYnkgdGhlIHVuaXZlcnNpdHkpIGlzIGl0IGFudGkgZnJlZSBzcGVlY2ggdG8gcmVmdXNlIHRvIGhvc3QgYSBmbGF0IGVhcnRoZXIgb3IgYSBob2xvY2F1c3QgZGVuaWVyIGluIGZhdm9yIG9mIGFuIGFzdHJvcGh5c2ljaXN0IGFuZCBhbiBleHBlcnQgb24gR2VybWFuIGhpc3RvcnkuIApBbm90aGVyIHNpZGUgYmVuZWZpdCBvZiBzbGVlcCB0cmFpbmluZyBpcyB0aGF0IHlvdSBrbm93IHdoZW4gc29tZXRoaW5nIGlzIHVwIGJlY2F1c2UgeW91IGhhdmUgYSBjbGVhciBiYXNlbGluZS4gT25lIG5pZ2h0IGxhc3Qgd2VlayBteSBzb24ganVzdCB3b3VsZG4gc2V0dGxlIGFuZCB3ZSBjb3VsZG4gZmlndXJlIG91dCB3aHkuIApJZiB0aGUgcmVxdWVzdCBpcyBmb3IgNTAgb3IgZmV3ZXIgcGFnZXMgb2YgcmVhZGlseSBhdmFpbGFibGUgaW5mb3JtYXRpb24sIG9yIGlmIHRoZSBjaGFyZ2UgZm9yIGZ1bGZpbGxpbmcgdGhlIHJlcXVlc3QgaXMgdW5kZXIgJDEwLjAwLCB0aGUgcmVxdWVzdG9yIHdpbGwgZ2VuZXJhbGx5IG5vdCBiZSBjaGFyZ2VkLiBSZXF1ZXN0b3JzIHdobyBleGNlZWQgdGhlIDM2IGhvdXIgdGltZSBsaW1pdCB3aWxsIGJlIHJlcXVpcmVkIHRvIHBheSBjb3N0cyBhdHRyaWJ1dGFibGUgdG8gY29zdCBvZiBtYXRlcmlhbHMsIG92ZXJoZWFkIGFuZCBwZXJzb25uZWwgdGltZSByZWdhcmRsZXNzIG9mIHdoZXRoZXIgdGhlIHJlcXVlc3RvciBpbnRlbmRzIHRvIG9ubHkgaW5zcGVjdCB0aGUgZG9jdW1lbnRzLi4gCkFmdGVyIHRoaXMsIGVhY2ggcGxheWVyIHdpbGwgcmVjZWl2ZSBoaXMgbmV4dCBjYXJkIGR1YmJlZCBhcyB0aGUgIjV0aCBzdHJlZXQuIiBUaGUgcGxheWVyIHRvIGFjdCBmaXJzdCBpcyB0aGUgcGxheWVyIHdpdGggdGhlIGhpZ2hlc3QgZXhwb3NlZCBjYXJkcy4gRWFjaCBwbGF5ZXIgbm93IHJlY2VpdmVzIGFub3RoZXIgZXhwb3NlZCBjYXJkIGNhbGxlZCAiRmlmdGggU3RyZWV0Ii4gQWdhaW4sIHRoZSBmaXJzdCBwbGF5ZXIgdG8gYWN0IGlzIHRoZSBpbmRpdmlkdWFsIHdob3NlIGV4cG9zZWQgY2FyZHMgaGF2ZSB0aGUgaGlnaGVzdCBwb2tlciB2YWx1ZS4gVGhlIHNhbWUgcHJvY2VzcyBpcyByZXBlYXRlZCBmb3IgdGhlIDZ0aCBjYXJkIGRlYWx0IHdoaWNoIGlzIGFsc28gY2FsbGVkICI2dGggU3RyZWV0LiIKIklmIEkgdGhvdWdodCB0aGVyZSB3YXMgYSBjaGFuY2Ugb2YgbWFraW5nIHByb2dyZXNzIG9uIHRoYXQgSSB3b3VsZCwiIGhlIHNhaWQuIApIYW5kcyB3aGljaCBtaWdodCB0YWtlIHRoaXMgbGluZTogODgsIDIyLCBUVCAoaW4gb3JkZXIgb2YgbGlrZWxpaG9vZCkgYW5kIG1heWJlIEpUcywgVDlzLCBUOHMsIEo5cywgNzlzLCB0aG91Z2ggdGhvc2UgYXJlIHNvbWV3aGF0IGFtYml0aW91cyBwcmVmbG9wIGNhbGwuIFRha2luZyB0aGlzIGxpbmUgd2l0aCBBVC9LVCBpcyBhbWJpdGlvdXMgYmVjYXVzZSBvZiB0aGUgcml2ZXIgYmV0LgpNYWlzIGRlcHVpcywgZm9yY2UgZXN0IGRlIGNvbnN0YXRlciBxdWUgbCdhbWJpdGlvbiBuJ2EgcGFzIHQgYXUgcmVuZGV6IHZvdXMgc3VyIGxhIHF1ZXN0aW9uIGRlIGxhIGNpcmN1bGF0aW9uIGV0IHF1ZSBsYSBsdXR0ZSBjb250cmUgbGUgc3RhdGlvbm5lbWVudCBpbGxpY2l0ZSBuJ2VzdCBwYXMgYXUgbml2ZWF1IGRlcyBwcm9ibG1lcyByZW5jb250cnMgc3VyIGxlIHNlY3RldXIsIGV0IGlscyBzb250IG5vbWJyZXV4LgpGUkVFIENSQUNLIFNPRlRXQVJFUzogTW9qb3NvZnQgUGhvdG8gRnJhbWUgU3R1ZGlvIDIuODUgU2VyaWFsIEtleUNyYWNrIEZyZWUgRG93bmxvYWQuIE5vdiA2LCAyMDE0IC4gCkkgc2F3IHRoaXMgZGVzaWduIG9uIGRyaWJiYmxlIGFuZCB0aG91Z2h0IGl0IHdvdWxkIGJlIGZ1biB0byBtYWtlIGpvYiBhZCBmb3IgYSBsb2NhbCBidXNpbmVzcyBvdXQgb2YgaXQsIHNpbmNlIHRoZXkgaGF2ZSBhIGxvZ28gdGhhdCB3b3VsZCBiZSBwcmV0dHkgc3dlZXQgZm9yIHRoaXMgdHlwZSBvZiBkZXNpZ24uIEkga25vdyB3aGF0IEkgZGlkIGlzIGp1c3QgYSBzdHJhaWdodCB1cCBjb3B5LCBidXQgdGhpcyB3YXMgbW9yZSBvZiBhbiBleHBlcmltZW50IHRvIGdldCBhdGxlYXN0IHNvbWV0aGluZyByaWdodCAoYW5kIHNvcnJ5IGZvciB0aGUgInNjcmFtYmxlZCB0ZXh0IiBidXQgSSBkb24gd2FudCB0byBnaXZlIHRoZSBidXNpbmVzcyBzcGFtKS4gU28gSSBjcmVhdGVkIHRoaXMuIApPbmNlIHRoZSBkb2cgaGFzIGRvbmUgaXQgam9iIGFuZCB0aGUgcGVyc29uIGlzIHJlc3RyYWluZWQsIHRoZSBkb2cgZ2V0cyB0aGUgY29tbWFuZCB0aGF0IHRoZSBqb2IgaXMgZG9uZSBhbmQgdGhleSBnZXQgdGhlaXIgcmV3YXJkLCB1c3VhbGx5IGEgZmF2b3VyaXRlIHR1ZyB0b3kgYW5kIHBsZW50eSBvZiBwcmFpc2UuCk1hY1BIRUUsIENoYXJsZXMgTm9ycmllICAgUGVhY2VmdWxseSwgc3Vycm91bmRlZCBieSBoaXMgbG92aW5nIGZhbWlseSwgYXQgdGhlIFN0ZWRtYW4gQ29tbXVuaXR5IEhvc3BpY2Ugb24gVHVlc2RheSwgTWF5IDIwLCAyMDA4IENoYXJsaWUgTWFjUGhlZSBvZiBCdXJmb3JkIGluIGhpcyA3M3JkIHllYXI7IGJlbG92ZWQgaHVzYmFuZCBvZiBNYXJpbHluIChuZWUgTG9nYW4pOyBsb3ZpbmcgZmF0aGVyIG9mIFNoZWxsZXkgRGF2aWRzb24sIFRyZXZvciAoVHJhY2llKSBNYWNQaGVlIGFuZCBLcmlzdGEgKEJyaWFuKSBQb3NzOyBjaGVyaXNoZWQgZ3JhbmRmYXRoZXIgb2YgS2FybGVpZ2ggYW5kIEthc3NpZSBEYXZpZHNvbiwgQ29ubm9yIGFuZCBLZWxzaWUgTWFjUGhlZSBhbmQgS2F0aWUgUG9zczsgbG92ZWQgc29uIG9mIE15c2llIGFuZCB0aGUgbGF0ZSBTZXltb3VyIE1hY1BoZWUgKDE5ODkpOyBkZWFyIGJyb3RoZXIgb2YgUmF5bW9uZCAoVHd5bGxpYSkgTWFjUGhlZSwgQXJsZW5lIFdoaXRld2F5IGFuZCBDYXJvbCAoRG91ZykgV2FyZS4gQ2hhcmxpZSB3YXMgYSBtZW1iZXIgb2YgU291dGggQnJhbnQgTGVnaW9uIDQ2MyBhbmQgdGhlIEV4ICBzZXJ2aWNlbWVuJ3MnIENyaWJiYWdlIExlYWd1ZS4gClNoZSBwZWVycyBvdXQgdGhlIHdpbmRvdyBhbmQgc2VlcyBKZXNzaWNhIGJyb3RoZXIgRXJpYy4gU2hlIG9wZW5zIHRoZSBkb29yIGFuZCBzdGFydHMgdGFsa2luZyB0byBFcmljLi4gCk5vdywgY29tbWVyY2lhbCBzZWxsZXJzIGhhdmUgZWNvbm9taWVzIG9mIHNjYWxlIHRvIGJyaW5nIHRoZSBjb3N0cyBkb3duLCBidXQgdGhleSBoYXZlIHRvIGFkZCBpbiB0aGUgY29zdHMgb2YgdHJhbnNwb3J0YXRpb24sIG92ZXJoZWFkLCBtYXJrZXRpbmcsIGV0Yy4gClRvbyBtYW55IHBlb3BsZSB0aGluayBpdHMgbm8gYmlnIGRlYWwuIEkgc2VsbCBuYWlsIHBvbGlzaCBvbiBldHN5IGFuZCBhIGxvdCBvZiB0aGUgY29tcGV0aXRpb24gZG8gYmV0dGVyIGJlY2F1c2UgdGhleSBvZmZlciBmYXN0ZXIgYW5kIGNoZWFwZXIgc2hpcHBpbmcsIGJ5IGlnbm9yaW5nIHRoZSBydWxlcyBhbmQgc2hpcHBpbmcgYWlyLgpUaGF0J3MgaG93IHdlIGNhbWUgdXAgd2l0aCBQcm9qZWN0IEFsbCBJbi4gVGhhdCdzIHdoYXQgdGhlIHN0YWdlZCBwb2tlciB0YWJsZSBpbnNpZGUgdGhlIGJveGluZyByaW5nIGlzIGZvci4iLiAKVGhhdCB3ZWxsIGJlbG93IHRoZSBhdmVyYWdlIGVzdGltYXRlIGZyb20gYW5hbHlzdHMuIApBdXN0cmFsaWFuIEFzc29jaWF0ZWQgUHJlc3NBcHJpbCAyNCAyMDE4ICAgNjoyNVBNLiAKIjMpICJSZXNpZGVudHMgaW4gbGVzcyBwb3B1bGF0ZWQgcGFydHMgb2YgdGhlIGNvdW50cnkgY29tcGxhaW4gYWJvdXQgcG93ZXIgcGxhbnRzICAgYW5kIHNtb2cgICBiZWluZyBzaGlmdGVkIHRvIHRoZW0uIApTcGEgZmFjaWFsIHRyZWF0bWVudHMgdXNlIGxvdGlvbnMsIG1hc2tzIGFuZCB0cmVhdG1lbnRzIHRoYXQgY291bGQgY2F1c2UgYSBmbGFyZSB1cCBpbiBqdXN0IGFib3V0IGFueSBvZiB0aGVzZSBza2luIGNvbmRpdGlvbnMgICBhbmQgc28gY2FuIGRydWdzdG9yZSBwcm9kdWN0cywgZXZlbiB3aGVuIHRoZXkncmUgbGFiZWxlZCBhcyBiZWluZyBhIGdvb2QgY2hvaWNlIGZvciBzZW5zaXRpdmUgc2tpbi4gCkJlY2F1c2Ugb2YgdGhlIGNyaW1lJ3MgcGVjdWxpYXIgbmF0dXJlLCB0aGUgNzMgeWVhciBvbGQgTWNDdWxsb3VnaCB3YXMgY2hhcmdlZCB1bmRlciB0aGUgbGF3cyBvZiAxOTU3IGFuZCBzZW50ZW5jZWQgdG8gc2VydmUgdGhlIHJlc3Qgb2YgaGlzICJuYXR1cmFsIGxpZmUiIGluIHByaXNvbi4KSSBndWVzcyBLaW5nIHdhbnRlZCB0aGUgYm9vayB0byBiZSBhYm91dCBzb21ldGhpbmcgb3RoZXIgdGhhbiBqdXN0IHRoZSBLZW5uZWR5IGFzc2Fzc2luYXRpb24gYW5kIHRob3VnaHQgaGUgY291bGQgYWRkIHNvbWUgaGVhcnQgdG8gdGhlIHN0b3J5IGF0IHRoZSBzYW1lIHRpbWUuIEhlIGdvZXMgd2F5IG92ZXJib2FyZCBmb2N1c2luZyBvbiBpdCwgaXQgdGFrZXMgdXAgd2F5IHRvbyBtYW55IHBhZ2VzIGFuZCBpcyBub3QgY29tcGVsbGluZy5QZW9wbGUgc29tZXRpbWVzIGNvbXBsYWluIGFib3V0IEtpbmcgbmVlZGluZyBhbiBlZGl0b3IgdG8gdHJpbSBkb3duIGhpcyBib29rcywgYW5kIEkgdGhpbmsgdGhpcyBib29rIGlzIG9uZSBvZiB0aGUgYmVzdCBleGFtcGxlcyBvZiB0aGF0LiAKSW4gVmVybW9udCwgZHVyaW5nIHRoZSBtYXJyaWFnZSBkZWJhdGVzLCBJIHdhcyBwYXJ0IG9mIGEgc2ltaWxhciBncm91cCBjYWxsZWQgSGV0ZXJvc2V4dWFscyBmb3IgTWFuZGF0b3J5IE1hcnJpYWdlIChITU0pIGFuZCB3ZSB0b28gYWR2b2NhdGVkIHRoYXQgYW55b25lIHdobyB3YW50cyBhbnkgY2l2aWwgcmlnaHRzICBmcm9tIHZvdGluZyB0byB0YWtpbmcgb3V0IGEgc3R1ZGVudCBsb2FuICBzaG91bGQgaGF2ZSB0byBiZSBtYXJyaWVkLiBXZSBhbHNvIHN1cHBvcnRlZCBzcGVjaWFsIHBhcmtpbmcgc3BhY2VzIGZvciBtYXJyaWVkIHBlb3BsZSwgcmlnaHQgbmV4dCB0byB0aGUgSGFuZGljYXBwZWQgb25lcy4gT3VyICJqb2tlIiB3YXMgbG9zdCBvbiBtYW55IHBlb3BsZSwgYnV0IE1hcmNvdHRlIGhhcyBiZWVuIHJlY2VpdmluZyBkb25hdGlvbnMgZnJvbSBhcm91bmQgdGhlIGNvdW50cnkgZnJvbSBwZW9wbGUgd2hvIHNpbmNlcmVseSBiZWxpZXZlIHdlIHNob3VsZCBzdG9wIGRpdm9yY2UgdG8gc2F2ZSBtYXJyaWFnZS4uIApGaW5kIGEgbWFzc2FnZSB0aGVyYXBpc3QgdGhhdCBpcyB1c2VkIHRvIHByZWduYW50IHdvbWVuLiBPbmNlIHlvdXIgYmVsbHkgZ2V0cyBsYXJnZSwgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gbGllIG9uIHlvdXIgc3RvbWFjaCB3aXRob3V0IGhlbHAuIFlvdXIgbWFzc2FnZSB0aGVyYXBpc3QgbWF5IHdhbnQgdG8gbWFzc2FnZSB5b3Ugd2hpbGUgeW91IGxheSBvbiB5b3VyIHNpZGUuIApUaGUgd2VkZGluZyBpbnZpdGF0aW9uIGlzIG9mIGJsdWVzLCB5ZWxsb3dzLCBncmVlbnMgYW5kIHBpbmtzLCBhbGwgdG9nZXRoZXIgaW4gZ2VudGxlLCB3aGltc2ljYWwgcGFzdGVscy4gQnkgdGhlIHNvdW5kcyBvZiBpdCwgeW91IGhhdmUgYmVlbiBpbnZpdGVkIHRvIHdlZGRpbmcgYW5kIHRlYSwgc28gd2VhciB5b3VyIGJlc3QgYXR0aXJlIHdpdGggYSBzcGxhc2ggb2YgY29sb3IuLiAKV2l0aCAxLjYzNSBwZW9wbGUgcGFzc2luZyB0aHJvdWdoIHRoZSBmcm9udCBkb29yIG9uIFNhdHVyZGF5LiBNYXkgMjcuIApJdCB3YXMgdGltZSBmb3IgdGhlbSB0byBnZXQgYmFjayB0byB0aGVpciBub3JtYWwgbGl2ZXMgYW5kIHNvIEplc3MgYW5kIEkgdG9vayBhIHRyYWluIGJhY2sgdG8gRnJhbmtmdXJ0LiAKWWVhaC4gUGVvcGxlIG91dHNpZGUgb2YgdGhlIFVTIGp1c3QgYXNzdW1lIGV2ZXJ5IHBsYWNlIGlzIHVuaW9uaXplZCBhbmQgbGlrZSxtYXliZSB0aGF0IGEgd29ydGh3aGlsZSBxdWVzdGlvbiBiZWNhdXNlIExBT1AgaXMgaW4gTllDLCBidXQgYmFzaWNhbGx5IGFueXdoZXJlIG91dHNpZGUgb2YgYSBtYWpvciBjaXR5IHdpbGwgaGF2ZSBwYXNzZWQgc29tZSBhbnRpIHVuaW9uIGxlZ2lzbGF0aW9uIHRoYXQgbWFrZXMgaXQgaW1wb3NzaWJsZSB0byB1bmlvbml6ZS4gTXkgdW5pdmVyc2l0eSBoYXMgYSB2ZXJ5IGdvb2QgdW5pb24gZm9yIG5vbiB0ZW51cmUgdHJhY2sgZmFjdWx0eSBhbmQgZ3JhZCBzdHVkZW50cywgYW5kIEkgZGlkbiByZWFsaXplIHVudGlsIHJlY2VudGx5IGhvdyBsdWNreSBJIGFtIHRvIGF0dGVuZCBhIHBsYWNlIHRoYXQgaXMgdW5pb25pemVkLi4gCk15IG9ic2VydmF0aW9uIGlzIHRoYXQgbW9zdCBwZW9wbGUgZG9uIGluY3JlYXNlIHVzZSBvZiBuaWNvdGluZSBqdXN0IGJlY2F1c2UgaXQgZWFzeSBhbmQgcmVsYXRpdmVseSBjb25zZXF1ZW5jZSBmcmVlIHRvIGRvIHNvLiAKVGhlIHBvbGljZSBzeXN0ZW0gYW5kIHRoZXNlIGNvZGVzIHNob3VsZCBjZXJ0YWlubHkgYmUgY2hhbmdlZCB3aGVyZSBuZWVkZWQuIEkgdGhpbmsgYSBsb3Qgb2YgdGhlc2UgY2lyY3Vtc3RhbmNlcyBhcmUgbW9yZSBjb21wbGljYXRlZCB0aGFuIGp1c3QgImEgY29wIHNob3QgYW4gaW5ub2NlbnQgbWFuLiIgQSBsb3Qgb2YgdGltZXMsIHRoZSAiaW5ub2NlbnQgbWFuIiB3YXMgYSBjcmltaW5hbCB3aG9tIGFjdGVkIGluYWRlcXVhdGVseS4gCkN1c3RvbWl6YWJsZSBDYXJkIEdhbWVzLCBvciBDQ0cncywgYXJlIG5vdCBsaWtlIFVubyBvciBQb2tlci4gCklmIEkgdW5kZXJzdGFuZCB3aGF0IHlvdSBhcmUgZGVzY3JpYmluZyB0aGVuIGp1c3QgdHVja2luZyB0aGUgc2hlZXQgYXJvdW5kIHRoZSBsZWcgZG9lc24ndCBmZWVsIHZlcnkgc2VjdXJlLCBzbyBwdWxsaW5nIHRoZSBzaGVldCBmcm9tIHRoZSBtZWRpYWwga25lZSBhbmQgdW5kZXIgdGhlIHRoaWdoIHRvIHRoZSBsYXRlcmFsIGFzcGVjdCBpcyBtb3N0IGNvbW1vbiBiZWNhdXNlIHlvdSBjYW4gZHJhcGUgdmVyeSBoaWdoIGV4cG9zaW5nIHRoZSBnbHV0ZXMgd2l0aG91dCByaXNrIG9mIGV4cG9zaW5nIHRoZSBnZW5pdGFscywgYnV0IGFsbG93aW5nIHlvdSB0byBnZXQgYXMgbXVjaCBvZiB0aGUgbXVzY2xlIGF2YWlsYWJsZSBhcyBwb3NzaWJsZS4gU29tZXRpbWVzIHdoYXQgSSdsbCBkbyB3aGVuIHRoZSBjbGllbnQgaXMgc3VwaW5lIGlzIGRyYXBlIHRoZSBzYW1lIGFzIEkgZGVzY3JpYmVkIGJ1dCB0YWtpbmcgdGhlIGV4dHJhIHBpZWNlIG9mIHNoZWV0IHRoYXQgSSBkcmFnZ2VkIHVuZGVyIHRoZSB0aGlnaCBhbmQgdGFrZSBpdCB1bmRlciB0aGUgY2xpZW50J3MgYXJtcGl0IGFzIHdlbGwsIHdoaWNoIGNyZWF0ZXMgYSBuaWNlIGV4dHJhIGJpdCBvZiBleHBvc3VyZSBmb3IgdGhlIGhpcCB3aGlsZSBmZWVsaW5nIG5pY2UgYW5kIHNlY3VyZS4gCkl0IGlzIGJ5IGZhciB0aGUgbW9zdCBoaXN0b3JpY2FsbHkgcGxhdXNpYmxlIHR5cGUgb2YgZW5kaW5nLiAKSXQgaXMgdGhlIGR1dHkgYW5kIHByaXZpbGVnZSBvZiBldmVyeSBmb2xsb3dlciBvZiBDaHJpc3QgYW5kIG9mIGV2ZXJ5IGNodXJjaCBvZiB0aGUgTG9yZCBKZXN1cyBDaHJpc3QgdG8gZW5kZWF2b3IgdG8gbWFrZSBkaXNjaXBsZXMgb2YgYWxsIG5hdGlvbnMuIApFdmVuIEthZmthIHdvdWxkIG5vdCBoYXZlIHRob3VnaHQgb2Ygc3VjaCBhIG1ldGFtb3JwaG9zaXMsIEkgcGxhY2UgUnMxMCwwMDAgb24gdGhhdCBjbGFpbS4uIApTdGFydGVkIHdpdGggYWx3YXlzIGJlaW5nIHRpcmVkLiAKQWZ0ZXIgYSB5ZWFyIG9mIHVwcyBhbmQgZG93bnMgdGhlcmUncyBnb29kIG5ld3MsIGFuZCBiYWQgbmV3c0hvdXNpbmcgaW5kdXN0cnkgbGVhZGVycyBzYXkgTWV0cm8gVmFuY291dmVyaXRlcyBjYW4gZXhwZWN0IHRvIHNlZSBzaW5nbGUgZmFtaWx5IGhvbWUgcHJpY2VzIGNvbnRpbnVlIHRvIGZhbGwgdGhpcyB5ZWFyIGFsb25nIHdpdGggc29tZSBzb2Z0ZW5pbmcgaW4gdGhlIHByaWNlcyBvZiBuZXcgbXVsdGkgZmFtaWx5IGhvbWVzLiBCdXQgaWYgeW91IGFyZSBjb3VudGluZyBvbiB0aGUgaG91c2luZyBtYXJrZXQgdG8gYmUgaGl0IGJ5IGEgdHJ1ZSByZWNlc3Npb24sIHlvdSBtYXkgZW5kIHVwIHdhaXRpbmcgYSBsb25nLCBsb25nIHRpbWUuIApGaXJzdCwgdGhlIHRlc3Qgd2FzIGluIEVuZ2xpc2gsIHdoaWNoIHB1dHMgYW55b25lIHdob3NlIGZpcnN0IGxhbmd1YWdlIGlzbiBFbmdsaXNoIGF0IGEgc3lzdGVtYXRpYyBkaXNhZHZhbnRhZ2UuIApCZWNvbWUgYSBSZWRkaXRvcmFuZCBzdWJzY3JpYmUgdG8gb25lIG9mIHRob3VzYW5kcyBvZiBjb21tdW5pdGllcy4KSWYgeW91IGhhdmUgdG8gbW92ZSwgaG93IG11Y2ggaXMgY29zdCBvZiBsaXZpbmcgdGhlcmU/IFJlbnQsIHRheGVzLCBnYXMsIGNvbW11dGUsIGV0Yy4gTEEgZm9yIGV4YW1wbGUgaGFzIGdyZWF0IGNhc2ggZ2FtZXMsIG15IGhvdXJseSB0aGVyZSBpcyBzdWJzdGFudGlhbGx5IGhpZ2hlciB0aGFuIGFueXdoZXJlIGluIFZlZ2FzLiAKQWxsIHRoZSBudWNsZWFyIHByb2Nlc3NlcyBmcm9tIHdoaWNoIGVuZXJneSBjYW4gYmUgb2J0YWluZWQgaW52b2x2ZSB0aGUgcmVhcnJhbmdlbWVudCBvZiBwcm90b25zIGFuZCBuZXV0cm9ucyBpbiBudWNsZWksIHRoZSBwcm90b25zIGFuZCBuZXV0cm9ucyB0aGVtc2VsdmVzIHJlbWFpbmluZyBpbnRhY3QuIEh1bmRyZWRzIG9mIGV4cGVyaW1lbnRhbCBpbnZlc3RpZ2F0aW9ucyB0aHJvdWdoIHRoZSBsYXN0IDMwIHllYXJzIGhhdmUgdGF1Z2h0IHVzIGhvdyBtdWNoIGVuZXJneSBjYW4gYmUgbGliZXJhdGVkIGluIGVhY2ggdHJhbnNmb3JtYXRpb24sIHdoaXRoZXIgYnkgdGhlIGZpc3Npb24gb2YgaGVhdnkgbnVjbGVpIG9yIHRoZSBmdXNpb24gb2YgbGlnaHQgb25lcy4gSW4gdGhlIGNhc2Ugb2YgZnVzaW9uLCBvbmx5IHRoZSBjb21iaW5hdGlvbiBvZiB0aGUgdmVyeSBsaWdodGVzdCBudWNsZWkgY2FuIHJlbGVhc2UgdmVyeSBsYXJnZSBhbW91bnRzIG9mIGVuZXJneS4uIApDYW4gYSBtYXNzYWdlIGxlYWQgdG8gYSBzdHJva2UKUHJldHR5IHN0YW5kYXJkIGZvciB0ZWxldmlzaW9uIGF1ZGllbmNlcy4gWW91IHdhbnQgdGhlIG1vc3QgdmlzaWJsZSBtZW1iZXJzIHRvIG1pcnJvciB0aGUgY29yZSBkZW1vZ3JhcGhpYyBvZiB0aGUgc2hvdywgYmVjYXVzZSB0aGF0IHdoYXQgYWR2ZXJ0aXNlcnMgd2FudC4gV2hpbGUgSSBhZ3JlZSBpdCBzb3VuZHMgbGlrZSBhbiBhd2t3YXJkIHNpdHVhdGlvbiwgYm90aCB5b3UgYW5kIHRoZSBvbGRlciBjb3VwbGUgYXJlIGJlaW5nIGEgYml0IG5haXZlIHRvIHN1Z2dlc3QgdGhhdCB0aGUgcHJvZHVjdGlvbiBpcyBpbiB0aGUgd3JvbmcuIFRoZXkgdGhlcmUgdG8gZG8gYSBqb2IgYW5kIHNlbGwgYSBwcm9kdWN0IGFuZCBhbnkgc3RhZ2UgbWFuYWdlciB3aG8gcHV0cyBhbiBvdmVyd2VpZ2h0LCBtaWRkbGUgYWdlZCBjb3VwbGUgZnJvbnQgYW5kIGNlbnRlciBvZiBhIHlvdXRoIG9yaWVudGVkIHByb2dyYW0gaXMgZ29pbmcgdG8gYmUgbG9va2luZyBmb3IgYSBuZXcgZ2lnIGJlZm9yZSB0aGUgZmlyc3Qgcm91bmQgb2Ygc3R1ZGlvIG5vdGVzIGdvIG91dC4KSGlzIGFydGljbGUgaW4gVGhlIE5ldyBZb3JrIFRpbWVzLCBodW1pbGlhdGluZyB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gd2l0aCBpdHMgc2FyY2FzdGljIGNvbmRlc2NlbnNpb24sIHdhcyBhIG1hc3RlcnBpZWNlIG9mIGNvbWljIGJyYXZhZG8uIApNeSBicmFpbiBiYXJlbHkgZnVuY3Rpb25zLCBhbmQgSSdtIGx1Y2t5IGlmIEkgZ2V0IGEgc2hvd2VyIGV2ZXJ5IGNvdXBsZSBvZiBkYXlzLiBJJ20gc3RpbGwgYmxlZWRpbmcsIGFuZCBJIGhhZCBhIHJlbGF0aXZlbHkgZWFzeSBkZWxpdmVyeS4uIApBbGwgb2YgdGhvc2UgYXJlIHBlcmZlY3QhISBJIHdvdWxkIGxpa2UgdG8gYWRkIHRvIHBsZWFzZSBlaXRoZXIgaGFuZyB1cCB5b3VyIGNlbGwgcGhvbmUsIG9yIHRlbGwgdGhlIHBlcnNvbiBvbiB0aGUgb3RoZXIgZW5kIHRvIGhvbGQgb24gYW5kIHNldCBpdCBkb3duLiBXaGlsZSBJIGRvbiBtYWtlIHNtYWxsIHRhbGsgd2l0aCBldmVyeW9uZSBJIHdhaXQgb24sIEkgZG8gYXNrIGEgZmV3IHF1ZXN0aW9ucy4gCjMzIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KRGlzYWJsZSBvcmlnaW4gb3ZlcmxheSwgYW5kIHJlYWRkIEFwZXggTGVnZW5kcyBsYXVuY2ggb3B0aW9ucyAgZnVsbCAgbm9ybWFsICBkeGxldmVsIDk1ICByZWZyZXNoIFtNYXhNb25pdG9ySHpIZXJlXSAgbm92aWQgIG5vam95ICtleGVjIFtDRkdmaWxlSWZZb3VIYXZlT25lXSArZnBzX21heCAxNDQgYXJlIG1vc3Qgb2YgdGhlIGxhdW5jaCBvcHRpb25zIEkgaGF2ZS4gTm90ZSB1c2UgIG5vcm1hbCBpbnN0ZWFkIG9mICBoaWdoOyAgaGlnaCBjYW4gY2F1c2UgYSBidWcgd2hlcmUgdGhlIG1lbnUgdG8gZ28gdG8gdGhlIG1haW4gbG9iYnkgc2NyZWVuIGp1c3QgdGVsbHMgeW91IHRvIHVwZGF0ZSBvcmlnaW4uICtmcHNfbWF4IDAsIGJ1dCBJIHJlbGF0aXZlbHkgY2VydGFpbiBtb3N0IHN5c3RlbXMgd2lsbCBoYXZlIGNyYXNoZXMgd2l0aCB0aGF0IHNldHRpbmcgYXRtLgpUaGF0IHRoZSBvbmx5IHRoaW5nIEkgdGhpbmsgIklmIEkgY2FuIGRvIGl0IHRoZW4gc28gY2FuIHlvdSIsIGp1c3QgaW4gcmVnYXJkIHRvIGRvaW5nIHNvbWUgYmFzaWMgdGhpbmdzIGZvciB5b3Vyc2VsZiBhbmQgdG8gaGVscCBvdGhlcnMgb3V0LiBZb3UgZG9uIGhhdmUgdG8gYmUgd2VsbCBpbiBhbnkgd2F5IHRvIGRvIHRoYXQsIEkgYW0gdGVzdGFtZW50IHRvIHRoYXQuCk9mIGNvdXJzZSBhIGJvbWIgaXMgZ3JlYXQgaGVyZSwgYnV0IGNvbnZlbnRpb25hbCB3ZWFwb25zIGNhbiB3b3JrLiBEb24gdGFrZSB0b28gbXVjaCBodWxsIGRhbWFnZSBkb2luZyB0aGlzIHRob3VnaC4gCkkgc2VlIG5vIHJlYXNvbiB0byBiZWxpZXZlIGluIHN1Y2ggYSBiZWluZy4gVGhhdCB3b3VsZCByZXF1aXJlIHByb29mIGFuZC9vciBldmlkZW5jZS4gSG93IHdvdWxkIHlvdSBrbm93IGlmIHNvbWV0aGluZyBsaWtlIHRoYXQgZXhpc3RzPyBXaGF0IG1ha2VzIHlvdSB0aGluayB0aGF0IHRoZSBjcmVhdG9yIHdvdWxkIGV2ZW4gY2FyZSBhYm91dCBtb3JhbHMgb3IgaHVtYW5zPwpSRVNVTFRTOiBBZnRlciAxIHdlZWsgb2YgcmVzdHJpY3RlZCBlbmVyZ3kgaW50YWtlLCBmYXN0aW5nIHBsYXNtYSBnbHVjb3NlIG5vcm1hbGlzZWQgaW4gdGhlIGRpYWJldGljIGdyb3VwIChmcm9tIDkuMjAuNCB0byA1LjkwLjQgbW1vbC9sOyBwPTAuMDAzKS4KSW4gUTIsIHRoZSB0b3RhbCBDb25zdHJ1Y3Rpb24gUGlwZWxpbmUgZGVjbGluZWQgbW9kZXN0bHkgdG8gMywzMjUgcHJvamVjdHMvIDM5MiwxODQgcm9vbXMsIHdpdGggcHJvamVjdHMgZG93biAyJSBhbmQgcm9vbXMgMSUgcXVhcnRlciBvdmVyIHF1YXJ0ZXIuIApIb3BlZnVsbHkgeW91ciBmcmllbmRzIG1ha2Ugc29tZSBlZmZvcnRzIHRvIHNob3cgeW91IHRoYXQgdGhleSBzdGlsbCB2YWx1ZSB5b3VyIGZyaWVuZHNoaXAuSSBhbHNvIGZpbmQgYXMgd2UgZ2V0IG9sZGVyLCBwZW9wbGUgbW92ZSBpbiBkaWZmZXJlbnQgZGlyZWN0aW9ucy4gQSBsb3Qgb2YgbXkgZnJpZW5kcyBjaG9zZSB0byBoYXZlIGZhbWlsaWVzLiAKSW5jcmVhc2VzIGNpcmN1bGF0aW9uOyBlbmhhbmNlcyB0aGUgaW1tdW5lIHN5c3RlbTsgcHJvbW90ZXMgbmVydm91cyBzeXN0ZW0gZnVuY3Rpb25pbmc7IHJlZHVjZXMgYmxvb2QgcHJlc3N1cmU7IHJlbGlldmVzIHBhaW4gYW5kIG11c2NsZSB0ZW5zaW9uOyBpbXByb3ZlcyBtb29kLCBpbnRlbGxlY3R1YWwgcmVhc29uaW5nIGFuZCBqb2IgcGVyZm9ybWFuY2U7IHBvc2l0aXZlIGVmZmVjdCBvbiBjb25kaXRpb25zIHN1Y2ggYXMgZmlicm9teWFsZ2lhLCBhcnRocml0aXMsIGRpYWJldGVzIGFuZCBtaWdyYWluZSBoZWFkYWNoZXMuIApUaGV5IHdpbGwgdXNlIHRoZSBjaGFvcyB0byBmb3JjZSAxOTg0IGxpa2UgbGF3cyBmb3IgInlvdXIgcHJvdGVjdGlvbiIuIApUaGF0IGdyZWF0ISBJZiB5b3UgY2FuIHJ1biBhIE5ld3MgT3JnYW5pemF0aW9uIHRoYXQgY2FuIHdpdGhzdGFuZCB0aGUgZmFjdCBjaGVja2luZywgdGhlIGNyZWRpYmlsaXR5IHdpbGwgYnVpbGQgaXRzZWxmIG1vcmUgYW5kIG1vcmUuIAoiVGhlcmUgaXMgbm8gc2hvcnRhZ2Ugb2YgcmVhc29ucyB3aHkgSGFycmFoJ3MgSmF6eiBDby4sIHRoZSBwYXJ0bmVyc2hpcCB0aGF0IHdhcyBmb3JtZWQgdG8gZGV2ZWxvcCBhbmQgJDg1NSBtaWxsaW9uIGxhbmQgYmFzZWQgY2FzaW5vIGluIE5ldyBPcmxlYW5zIHdhcyBmb3JjZWQgdG8gZmlsZSBmb3IgQ2hhcHRlciAxMSBiYW5rcnVwdGN5IHByb3RlY3Rpb24gaW4gbGF0ZSBOb3ZlbWJlciBCdXQgc29tZSBhcmUgbW9yZSByZWxldmFudCB0byB0aGUgb3ZlcmFsbCBjYXNpbm8gaW5kdXN0cnkgdGhhbiBvdGhlcnMuIENoaWVmIGFtb25nIHRoZW0gaXMgd2hldGhlciBjYXNpbm9zIGFyZSByZWFsbHkgbWVhbnQgdG8gc3VjY2VlZCBpbiBjaXRpZXMgdGhhdCBhcmUgYWxyZWFkeSB3ZWxsIHBvc2l0aW9uZWQgaW4gdGhlIG1pbmRzIG9mIHRvdXJpc3RzIGFuZCBsb2NhbHMgYXMgc29tZXRoaW5nIG90aGVyIHRoYW4gYSBnYW1pbmcgZGVzdGluYXRpb24uIiAoQ2hhcmxlcyBBbmRlcmVyLCAxOTk2LCAiV2hhdCBOZXcgT3JsZWFucyBUZWxscyBVcyIgaW4gSW50ZXJuYXRpb25hbCBHYW1pbmcgV2FnZXJpbmcgQnVzaW5lc3MsIFZvbC4gMTcsIE5vLiAKVm90cmUgY29uc2VudGVtZW50IG4nZXN0IHBhcyByZXF1aXMgcG91ciBjZXMgY29va2llcy4gSWwgbidlc3QgZG9uYyBwYXMgcG9zc2libGUgZGUgbGVzIGFjdGl2ZXIgb3UgZHNhY3RpdmVyIGluZGl2aWR1ZWxsZW1lbnQuIFZvdXMgcG91dmV6IGxlIGZhaXJlIHBvdXIgbGVzIGNvb2tpZXMgbmNlc3NpdGFudCB2b3RyZSBjb25zZW50ZW1lbnQgdW5pcXVlbWVudCwgYydlc3QgIGRpcmUgbGVzIGNvb2tpZXMgZm9uY3Rpb25uZWxzLCBkZSBwZXJmb3JtYW5jZSBldCBtYXJrZXRpbmcuIFZvdXMgcG91cnJleiAgdG91dCBtb21lbnQgZHNhY3RpdmVyIGxlcyBjb29raWVzIGRlcHVpcyB2b3RyZSBuYXZpZ2F0ZXVyICh2b2lyIHBvaW50ICJEc2FjdGl2YXRpb24gZXQgc3VwcHJlc3Npb24gZGUgdG91cyBsZXMgY29va2llcyIpLgpEaXNoYXJtb255IGluIGFuIG9yZ2FuIG9mdGVuIHNob3dzIHVwIGluIGl0cyBjb3JyZXNwb25kaW5nIG1lcmlkaWFuOiBBIHBlcnNvbiBleHBlcmllbmNpbmcgYSBoZWFydCBhdHRhY2sgbWF5IGFsc28gaGF2ZSBhIHNlbnNhdGlvbiBvZiBwYWluIGFuZCBudW1ibmVzcyB0aGF0IHRyYXZlbHMgZG93biB0aGUgYXJtIGludG8gdGhlIGxpdHRsZSBmaW5nZXIsIGNsb3NlbHkgZm9sbG93aW5nIHRoZSBwYXRoIG9mIHRoZSBoZWFydCBtZXJpZGlhbi4gUHJhY3RpdGlvbmVycyBwYWxwYXRlIGEgZGlhZ25vc3RpYyBwb2ludCBvbiB0aGUgY29ycmVzcG9uZGluZyBtZXJpZGlhbiB0byBhc3Nlc3MgdGhlIGhlYWx0aCBvZiBpdHMgcmVsYXRlZCBvcmdhbi4gSW4gb3RoZXIgY2FzZXMsIHRoZSBtZXJpZGlhbnMgdGhlbXNlbHZlcyBhcmUgdHJlYXRlZC4KVGhlcmUgaXMgdGhlIHV0dGVybHkgZmFudGFzdGljICIxODA0IFBhcmlzIE1hcmdhdCBvbiBhIHN0YWciLiBTb21laG93IEkgZ3Vlc3MgTS4gTWFyZ2F0IHRob3VnaHQgdGhhdCBiZWluZyBvbiBhIGhvcnNlIGp1c3Qgd2FzbiBxdWl0ZSBlbm91Z2gsIGFuZCBlbGVjdGVkIHRvIHJpZGUgYSBzdGFnLiBJIG5vdCBzdXJlIHdoYXQgdG8gc2F5LCBleGFjdGx5LCBleGNlcHQgdGhhdCBhbGwgb2YgdGhpcyByZW5kZXJzICIxODM2IFN1cnJleSBHYXJkZW5zIG1vbmtleSAiSmFjb3BvIiBwYXJhY2h1dGUgKHdpdGggYSBsaXR0bGUgbW9ua2V5IGRyb3BwZWQvdGhyb3duIGZyb20gdGhlIGJhbGxvb24gaW4gYW4gZXhwZXJpbWVudGFsIHBhcmFjaHV0ZSBkZXZpY2UpIHNvbWV3aGF0IGFudGkgY2xpbWFjdGljLiAKVGhlc2UgcGVvcGxlLCBvbiB0aGUgb3RoZXIgaGFuZCwgYXJlIGFjdHVhbGx5IGdvaW5nIG91dCBhbmQgc3BlbmRpbmcgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSBhbmQgZWZmb3J0IHRvIGRlbnkgYSBiZXR0ZXIgbGlmZSB0byBzb21lIGRpc2FibGVkIGNoaWxkcmVuLiAKQ2F1c2UgYW5kIEVmZmVjdCBwbGF5cyBhIGJpZyByb2xlIGluIHRoZSBtYW5nYSBhcyBpdCB0ZW5kcyB0byB1c2UgdGhhdCB0YWN0aWMgd2hpbGUgbWl4aW5nIGl0IHVwIHdpdGggbXlzdGVyaWVzIGFuZCB0aGVuIGhhdmluZyB0aGUgYnJpbGxpYW50IGlkZWEgb2Ygc29sdmluZyB0aGVtIGFuZCBob3cgYSBjZXJ0YWluIGFjdGlvbiBhZmZlY3RzIG90aGVyIGFjdGlvbnMgb3IgdGhvdWdodHMuIEl0IGJlZ2lucyB3aXRoIEtvdG9rbyBJd2FuYWdhLCB0aGUgc3RvcnkgcmV2b2x2ZXMgYXJvdW5kIGhlciBhcyB0aGUgdGFsZSBiZWdpbnMgd2hlbiBzaGUgd2FzIDExLCB3aG8gYXQgdGhhdCB0aW1lIHdhcyB0YWtlbiBhd2F5IGJ5IHNwaXJpdHMga25vd24gYXMgYW5kIHRoZW4gbWFkZSBoZXIgaW50byBhIGdvZGRlc3Mgb2Ygd2lzZG9tIGJ5IHRha2luZyBvbmUgb2YgaGVyIGV5ZXMgYW5kIG9uZSBvZiBoZXIgbGVncy4gCkNvcGVuaGFnZW4gaXNuIG9uZSBvZiB0aGUgbGFyZ2VyIGFpcnBvcnRzIGluIHRoZSB3b3JsZCwgYnV0IGl0IGlzIHRoZSBidXNpZXN0IGh1YiBmb3IgdHJhdmVsZXJzIGluIFNjYW5kaW5hdmlhLiBBYm91dCBhIHR3byBtaW51dGUgd2FsayBhd2F5LCB0aGUgSGlsdG9uIG9mZmVycyB0aGUgVGhhaSBzdHlsZWQgTmkgU3BhLCBhIHN0dW5uaW5nIHJldHJlYXQgd2l0aCBwb29sIGFuZCBzYXVuYSB3aG9zZSBtYWluIGF0dHJhY3Rpb24gaXMgYSByZWxheGF0aW9uIGVnZzogYSBsYXJnZSBvdmFsIGNvbnRhaW5pbmcgYSB2aWJyYXRpbmcgYmVkIHRoYXQgaXMgc2FpZCB0byBoZWxwIHdpdGggamV0IGxhZy4gUGFzc2VuZ2VycyB3aG8gYXJlIHBhc3NpbmcgdGhyb3VnaCBhcmUgd2VsY29tZSB0byB1c2UgdGhlIHNwYSBmb3IgYWJvdXQgJDQwIGEgcGVyc29uLiBNYW55IG9mIHRoZSBndWVzdCByb29tcyBvZmZlciB2aWV3cyBvZiB0aGUgdGVybWluYWxzLCB0YXhpd2F5cyBhbmQgcnVud2F5cy4gRGF5IHJhdGVzIGFyZSBhdmFpbGFibGUuCkNpbmVtYXRvZ3JhcGh5LiBJIGNvdWxkbiBiZWxpZXZlIG15IGV5ZXMgd2hlbiBJIGZpcnN0IHdhdGNoZWQgV1dGVEUuIEdvcmdlb3VzIGFuZCB3aWRlIGFuZCBnaXZlcyB0aGUgc2VyaWVzIGEgbmV3LCBtb3JlIGdyb3VuZGVkIHRvbmUuCk5vdCBqdXN0IHNoeWluZyBhd2F5LCBmZWVsaW5nIGJhZCBhYm91dCB5b3Vyc2VsZiBhcyB5b3UgdGhpbmsgb2YgZWFjaCBpbmNpZGVudC4gCkkgZGlkbiByZXBlYXQgcHJvcGFnYW5kYSwgSSBqdXN0IHRvb2sgd2hhdCBIaWxhcnkgQ2xpbnRvbiBhY3R1YWxseSwgbGl0ZXJhbGx5IHNhaWQsIGFzIHlvdSBjYW4gc2VlIGluIG15IGVhcmxpZXIgcmVwbHksIHNoZSBzYWlkIHNoZSB3YW50ZWQgdG8gZm9yY2UgbWlsaXRhcnkgYWN0aW9uIGFnYWluc3QgUnVzc2lhLCB3aXRoIHJlZ2FyZHMgdG8gdGhlIHNpdHVhdGlvbiBpbiBBbGVwcG8sIG1ha2luZyBTeXJpYSBhIG5vIGZseSB6b25lLiBUaGlzIGlzbiBwcm9wYWdhbmRhLCBzaGUgbGl0ZXJhbGx5IHNhaWQgdGhhdCwgSSBzYWlkIG5vdGhpbmcgYWJvdXQgV1dJSUkgb3Igd2hhdCBoZXIgcGxhbnMgYXJlLCBvciBhbnl0aGluZyBhYm91dCB0aGUgbWVkaWEsIGp1c3QgdGhhdCBzaGUgc3RhdGVkIGhlcnNlbGYgdGhhdCBzaGUgd2FudHMgdG8gZ28gdG8gd2FyIHdpdGggUnVzc2lhLiBCdXQgaXMgeW91ciBwb3NpdGlvbiB0aGF0IHdlIHNob3VsZCBhbGxvdyBSdXNzaWEgZG8gZG8gd2hhdCBpdCB3YW50cz8gU2hhbGwgaXQgY29udGludWUgdG8gYm9tYiBjaXZpbGlhbnMgaW4gU3lyaWE/IFNoYWxsIGl0IGNvbnRpbnVlIHRvIGFubmV4IGNvdW50cmllcz8uIApNYWtpbmcgbG90cyBvZiBtb25leSBhdCB3aGF0IGNvc3Q/IEJhc2VkIG9uIHdoYXQgcHJvZHVjdD8gV2hlbiBCaWxseSB0YWtlcyB0aGUgbWlsayBmb3IgImZyZWUiIGZyb20gdGhlIHBhcmVudHMvc3RhdGUgKHRoZSB3YXkgY29ycG9yYXRpb25zIHN1Y2sgdXMgZHJ5IHdpdGggY29ycG9yYXRlIHdlbGZhcmUpIGFuZCB0aGVuIG1ha2VzIGFsbCB0aGUgbWlsayBhbmQgY29va2llIHByb2ZpdHMgIGhlIGhhcyBjb3N0IFNhbGx5IGhlciBsYWJvciBhbmQgaGVyIGZyZWVkb20sIHRoZSBwYXJlbnRzL3N0YXRlIHRoZSBtaWxrLCBhbmQgdGhpcyBleGFtcGxlIGlzIG5vd2hlcmUgbmVhciBhcyBiYWQgYXMgdGhlIHJlYWwgbWFya2V0LiAKTW9uZXkgZnJvbSBhIGJvYXJkIGdhbWUuIApBIGxhIG1tZSBwb3F1ZSAob3UgcGV1IHMgZmF1dCksIGxlIGRvbWluaWNhaW4gVGhvZG9yaWMgQm9yZ29nbm9uaSAoMTIwNSAxMjk4KSBtZXQgZW4gcHJhdGlxdWUgbCBkIGFuZXN0aHNpYW50ZXMgKGRqIGRjcml0ZXMgcGFyIERpb3Njb3JpZGUpIDogIG9uIGltcHJnbmUgZGUganVzcXVpYW1lLCBkIGRlIG1hbmRyYWdvcmUsIGQgb3UgZGUgY2hhbnZyZSBpbmRpZW4sIHVuZSBwb25nZSwgZXQgb24gbGEgbGFpc3NlIGxvbmd1ZW1lbnQgc2NoZXIgYXUgc29sZWlsLiBVbmUgaGV1cmUgYXZhbnQgbCBvbiBsYSBkdHJlbXBlIGRhbnMgbCBJbCBuIHBsdXMgcXVlIGRlIGwgc3VyIGxlIG5leiBkdSBwYXRpZW50IHBvdXIgbGUgdm9pciBzICAoNSkuIApBc2lkZSBmcm9tIGEgY291cGxlIG9mIHNvbmdzIHRoYXQgcGxheSBvbiBwb3AgcmFkaW8gbm93IGFuZCB0aGVuLCBFbHZpcyBpc24gZXZlbiBhbiBpY29uIHRvZGF5LgpJdCBzYXlzIHRoYXQgU21vbGxldHQga25ldyBhdCB0aGUgdGltZSBoZSByZWxheWVkIGhpcyBhY2NvdW50IHRoYXQgaGUgaGFkIHJlYXNvbmFibGUgZ3JvdW5kIHRoYXQgc3VjaCBhbiBvZmZlbmNlIGhhZCBiZWVuIGNvbW1pdHRlZC4gU21vbGxldHQgYXJyZXN0LCB0aGUgcHJvZHVjZXJzIG9mIGFubm91bmNlZCB0aGF0IHRoZSBhY3RvciBjaGFyYWN0ZXIgd291bGQgYmUgcmVtb3ZlZCBmcm9tIHRoZSBzZWFzb24gZmluYWwgdHdvIGVwaXNvZGVzLiBGb3ggbmV0d29yayBhbmQgdGhlIHN0dWRpbyB0aGF0IHByb2R1Y2VzIGhhZCBubyBpbW1lZGlhdGUgY29tbWVudCBvbiB0aGUgbGF0ZXN0IGluZGljdG1lbnQuCkZpcnN0IHlvdSBzYWlkIHRoZXkgd2VyZSB0YXJnZXRpbmcgZ2VuIHggbm93IGl0J3Mgej8gSSdtIGNvbmZ1c2VkIHdoaWNoIGlzIGl0PyBBbmQgcGVvcGxlIHNwZWFraW5nIG91dCBhZ2FpbnN0IHZhY2NpbmF0aW9uIG5lZWQgY2Vuc29yaW5nIGJlY2F1c2UgeW91IGFyZSB0aGUgb25lcyBzcHJlYWRpbmcgZGFuZ2Vyb3VzIHByb3BhZ2FuZGEuIFlvdSBwdXQgdGhvdXNhbmRzIG9mIGxpdmVzIGF0IHJpc2sgYnkgZGlzcnVwdGluZyB0aGUgbWFzcyBpbW11bml6YXRpb24gdGhhdCBoYXMgbGVkIHRvIGEgbmVhciBlcmFkaWNhdGlvbiBvZiB0aGVzZSBkaXNlYXNlIGFuZCBub3cgdGhhdCB5b3UgYW5kIHlvdXIgc3R1cGlkIGZyaWVuZHMgaGF2ZSBzdG9wcGVkIHZhY2NpbmF0aW5nIHlvdXIga2lkcyBpdCdzIGJyb3VnaHQgdGhlbSBiYWNrLiBJdCdzIGFsc28gZXZpbCB0byBhbGxvdyBraWRzIHRvIGRpZSBiZWNhdXNlIHlvdSB0aGluayBtb2Rlcm4gc2NpZW5jZSBhbmQgbWVkaWNpbmUgaXMgYmFkLiAKSXQncyBtb3N0bHkgdXNlZCB0byBkZXNjcmliZSB0aGUgZGlzc29sdXRpb24gb2YgeW91ciBzZW5zZSBvZiBzZWxmIGFuZCB5b3VyIGlkZW50aXR5LCBlaXRoZXIgcmVhbGl6aW5nIHRoYXQgeW91IGFyZSBqdXN0IGEgcGllY2Ugb2YgdGhlIHVuaXZlcnNlIG9yIHVuaXZlcnNhbCBjb25zY2lvdXNuZXNzLCBvciB3aGVuIHRoaW5ncyBnbyBiYWQsIGJlbGlldmluZyB0aGF0IHJlYWxpdHkgaXMgYSBsaWUgYW5kIG5vdGhpbmcgcmVhbCBleGlzdHMgKHBvc3NpYmx5IG5vdCBldmVuIHlvdSkuIFRoZSBmb3JtZXIgaXMgbW9yZSBjb21tb24sIGJ1dCBJJ3ZlIGV4cGVyaWVuY2VkIGJvdGggb25jZS4gTGV0IG1lIHRlbGwgeW91LCBoYXJkY29yZSBlZ28gZGVhdGggKHdoZXJlIHRoaW5ncyBnbyBiYWQpIGlzIG5vdCBmdW4uIApJIHNhaWQgdGhhdCBpZiB5b3UgYXJlIHBsYXlpbmcgYWdhaW5zdCBiYWQgcGxheWVycywgd2hvIGNhbiBub3QgZXhwbG9pdCB5b3UsIHlvdSBkbyBub3QgbmVlZCB0byBiYWxhbmNlIHlvdSBjYW4gbWFrZSBtb3JlIG1vbmV5IGJlIGV4cGxvaXRpbmcgdGhlbS4gCk1vcmVvdmVyLCBsaWtlIHVuaXZlcnNhbGx5IHF1YW50aWZpZWQgdHlwZXMsIGV4aXN0ZW50aWFsbHkgcXVhbnRpZmllZCB0eXBlcyBhcmUgYWxzbyBzdWJqZWN0IHRvIHBhcmFtZXRyaWN0eS4gRm9yIGV4aXN0ZW50aWFsbHkgcXVhbnRpZmllZCB0eXBlcywgdGhpcyBwYXJhbWV0cmljaXR5IHJlbGF0aW9uIG1hbmlmZXN0cyBpdHNlbGYgYXMgYW4gZXF1aXZhbGVuY2UgcmVsYXRpb24gYmV0d2VlbiBtZW1iZXJzIG9mIHRoZSB0eXBlLiBJbiBvdXIgcGFydGljdWxhciBjYXNlLCBwYXJhbWV0cmljaXR5IHJlcXVpcmUgdGhhdCBmb3IgZXZlcnkgZnVuY3Rpb24gZiA6OiByMSAgPiByMiwgIDogcyAgPiAocjEgIGEpIGFuZCAgOiAocjIgIGEpICA+IHMgdGhhdCB0aGUgcGFpcnMgKGZpcnN0IGYgLiAKT3RoZXJ3aXNlLCBJIG1heSBiZSBpbmNsaW5lZCB0byBkZWxldGUgdGhlIGFuc3dlci4gCklzIHRoaXMgbm8gbGltaXQgdG91cm5hbWVudCBzdHlsZSBwbGF5LCBvciBhIGxpbWl0IGNhc2ggZ2FtZT8KU28gSSBjdXJyZW50bHkgaW4gdGhlIGJhdGhyb29tLiBJIHNvIHNpY2sgb2YgaGltLiAKRGVhciBicm90aGVyIG9mIHRoZSBsYXRlIFJvbiBXZWF2ZXIgKHN1cnZpdmluZyBzcG91c2UgQ2Fyb2wpLCBMb3Vpc2UgQmVhdHRpZSBhbmQgaGVyIGh1c2JhbmQgSmFjaywgRGlhbmUgTGV3aXMgYW5kIGhlciBodXNiYW5kIExsb3lkLCBSb3NlbWFyaWUgQnJvb21maWVsZCBhbmQgaGVyIGh1c2JhbmQgUm9uLCBDYXJsIFdlYXZlciBhbmQgaGlzIHdpZmUgQmFyYiwgS2ltIE1jUmFlIGFuZCBoZXIgaHVzYmFuZCBQZXRlIGFuZCBoYWxmIGJyb3RoZXIgUmljayBTaW5kcmV5IGFuZCBoaXMgd2lmZSBGbG8uIApUaGVyZSBhcmUgYWxzbyBzcXVhcmUgZGFuY2UgYXJjaGl2ZXMgdGhhdCBjYXJlIGFib3V0IHRoZXNlLCBpZiB5b3UgaGF2ZSByYXJlIHJlY29yZHMuClJldmVudWU6ICQ2MCAoZ2FtZSAzKSArIDUwIChnYW1lIDcpID0gJDExMAoiSHVtYW4gdHJhZmZpY2tpbmcgaXMgY2xlYXJseSBhIHByb2JsZW0gYW5kIGl0J3MgaGFwcGVuaW5nLCBhdCBsZWFzdCB0byBzb21lIFtleHRlbnRdLCBpbiBvdXIgY2l0eS4gClJlYWxseSBmb2N1cyBvbiB5b3VyIGRpZXQsIGFzIEkga25vdyBzb21lIGRhZHMgY2FuIGxvc2UgZm9jdXMgb24gdGhhdCB3aGVuIHRoZXkgaGF2ZSB5b3VuZyBjaGlsZHJlbi4gQWxzbywgaWYgeW91J3JlIHJlYWxseSBpbiBhIHBpbmNoLCB5b3UgY2FuIGpvaW4gYSBneW0gd2l0aCBhIGRheWNhcmUgKGlmIHRoZXJlJ3Mgb25lIGluIHlvdXIgYXJlYSkuIFlvdSdkIGhhdmUgdG8gd2FpdCB1bnRpbCB0aGUgY2hpbGQgaXMgYSBiaXQgb2xkZXIgb2YgY291cnNlLgpJIGRvbiBrbm93IGVub3VnaCBhYm91dCB0aGUgcmV0aXJlbWVudCBzeXN0ZW1zIG9mIHZhcmlvdXMgY291bnRyaWVzLCBidXQgd2VhbHRoIHdpbGwgcmVhbGx5IHZhcnkgYmFzZWQgb24gd2hhdCBnb3Zlcm5tZW50IGRvZXMuIElmIHRoZSBnb3Zlcm5tZW50IHRha2VzIDIlIG9mIHlvdXIgaW5jb21lIHRvIHB1dCBpbnRvIHVuZW1wbG95bWVudCwgdGhhdCBub3Qgd2VhbHRoIGZvciB3aGVuIHlvdSBkb24gaGF2ZSBhIGpvYi4gSWYgdGhlIGdvdmVybm1lbnQgcHJvdmlkZXMgbm8gdW5lbXBsb3ltZW50IGJlbmVmaXQgYW5kIHlvdSBwdXQgYXdheSA0JSBvZiB5b3VyIHNhbGFyeSBpbnRvIGEgYmFuayBhY2NvdW50IGluIGNhc2UgeW91IGxvc2UgeW91ciBqb2IsIHRoYXQgaXMgd2VhbHRoLiBIb3dldmVyLCBpZiB5b3UgbG9zZSB5b3VyIGpvYiwgdGhlIDQlIG9mIHlvdXIgaW5jb21lIHRoYXQgeW91IHB1dCBhd2F5IG1pZ2h0IG5vdCBjb3ZlciBleHBlbnNlcyBhcyB3ZWxsIGFzIHRoZSAyJSB0aGUgZ292ZXJubWVudCBoYXMgcHV0IGF3YXkgZnJvbSBldmVyeW9uZSB0byBzcHJlYWQgdGhlIHJpc2sgb3ZlciBtb3JlIHBlb3BsZS4gU28sIGlzIHRoZSBzZWNvbmQgcGVyc29uIHJlYWxseSB3ZWFsdGhpZXI/IEZyYW5rbHksIGl0IHdpbGwgZGVwZW5kIG9uIG9uZSBqdWRnZW1lbnQgb2YgdGhlIHJpc2sgb2YgYmVpbmcgam9ibGVzcywgb25lIHBvbGl0aWNzLCBldGMuCkJ1dCBwZXJoYXBzIG1vc3QgaW1wb3J0YW50LCB0aGUgZmluaXNoZWQgcHJvZHVjdCBob25vcnMgdGhlIHNpbXBsaWNpdHkgYW5kIGNvbWZvcnRpbmcgYXBwZWFsIG9mIHRoZSBvcmlnaW5hbCB3aXRob3V0IGZhbGxpbmcgaW50byB0aGUgdHJhcCBvZiB1bmR1ZSBmdXNzaW5lc3MuLiAKTm8gbWF0dGVyIHdoaWNoIHR5cGUgb2YgbWFzc2FnZSB5b3UgdXNlIHRoZXJlIGFyZSBtYW55IGF2YWlsYWJsZSBvdXQgdGhlcmUuIApJc3QgZGlyIGF1ZmdlZmFsbGVuLCBkYXNzIHNlaXQgZXR3YSBlaW5lbSBKYWhyemVobnQgU3BpZWxobGxlbiB3aWUgUGlsemUgYXVzIGRlbSBCb2RlbiB3YWNoc2VuPyBEaWUsIHdvIGFsbGUgRmVuc3RlciB2ZXJrbGVidCBzaW5kLCBlaW5lIEthbWVyYSBhbiBkZXIgVHIgaG5ndCB1bmQgbWFuIGtsaW5nZWxuIG11c3MsIHVtIGVpbmdlbGFzc2VuIHp1IHdlcmRlbiAoZGFtaXQsIHdlbm4gZGllIFBvbGl6ZWkgbWFsIGtsaW5nZWx0LCBzY2huZWxsIGF1ZmdlcnVtdCB3ZXJkZW4ga2FubikgICBkaWUgc2luZCB0YXRzY2hsaWNoIGluIGRlciBIYW5kIGRlciBNYWZpYS4uIApHaXZlIGJpcnRoIHRvIGlkZW50aWNhbCB0d2lucwpOYXRhc2hhIEZyZWUgUm91c3NvcG91bG9zIHNhaWQgc2hlIHdhcyB0b2xkIHRoYXQgdGhyZWUgR3JhZGUgMTIgc3R1ZGVudHMgaGF2ZSBiZWVuIHN1c3BlbmRlZCBmb3IgdGhlaXIgcm9sZSBpbiBwdWJsaXNoaW5nIGEgbGlzdCBpZGVudGlmeWluZyAxMDAgZmVsbG93IEdyYWRlIDEyIHN0dWRlbnRzIGFzIGhvbW9zZXh1YWwuIFRoZXkgd2VyZSBuYW1lZCB1c2luZyBhbiBvZmZlbnNpdmUgdGVybSBmb3IgZ2F5LCBzaGUgc2FpZC4KVGhlIHdlYnNpdGUgbWF5IGxvb2sgdmVyeSB3ZWxsIGxpa2UgZmFjZWJvb2sgb3IgYW55IG90aGVyIGtpbmQgb2Ygc2VjdXJpdHkgaW52ZW50ZWQgd2VzYml0ZS4gQW1hem9uIGFuZCBlQmF5IGFyZSBncmVhdCB0byBmaW5kIGdvb2QgY2hpcHMuIEhvd2V2ZXIsIG1vc3Qgb2YgdGhlIGNoaXBzIG9uIGVCYXkgYW5kIEFtYXpvbiBhcmUgbWFkZSBvZiBwbGFzdGljIGFuZCBoYXZlIG1ldGFsIGluc2VydHMuIFByb2Zlc3Npb25hbHMgYW5kIGNhc2lub3MgdXNlIGNsYXkgYW5kIGNlcmFtaWMgY2hpcHMuIApJbiB0aGVpciBncmllZiB0aGV5IHNodXQgb2ZmIGhpcyBvbmx5IGFiaWxpdHkgdG8gbGVhcm4gbW9yZSBhYm91dCBoaXMgbW9tIG91dHNpZGUgb2YgaGlzIGJyb3RoZXJlIHdobyB3ZXJlIG9ubHkgNyBhbmQgMTAuLiAKQWNobyBraWxvYnl0ZXMgZSBtZWdhYnl0ZXMuIE8gbXVuZG8gZXN0IHByZXN0ZXMgYSBleHBsb2RpciBlIHRvZG8gbXVuZG8gIGZyZW50aWNvIHNvYnJlIHN1YSBTRVJQLi4gCk9yIGEgUGlsbGFyIG9mIGl0LCBtaWdodCBzYXkgcG9vciBMb3Qgd2lmZS4gV2VyZSBJIHRvIGhhdmUgYW4gaW50ZXJlc3QgaW4gSmV3aXNoIGhpc3RvcnksIEkgbm90IHVzZSBhIGN1cnJlbnQgb3IgZm9ybWVyIE5hdGlvbmFsIFNvY2lhbGlzdCBXb3JrZXIgUGFydHkgcmVjb2xsZWN0aW9uIG9yICJvZmZpY2lhbCBhY2NvdW50Ii4gClRoZSBvZmZlbmNlcyBvY2N1cnJlZCBiZXR3ZWVuIEFwcmlsIDIwMTAgYW5kIE1hcmNoIDIxLCAyMDEzLgpXaGF0IGtpbGxzIG1lIGFzIGEgZ3V5IHRoYXQgc2VlcyBzaGl0IGxpa2UgdGhpcyAoYW5kIG90aGVyIG1vcmUgbWlub3IgYnV0IHN0aWxsIGdyb3NzZWQgb3V0IHZpZXdwb2ludHMgZnJvbSBvdGhlciBkdWRlcykgaXMgdGhhdCBpdCdzIGxpdGVyYWxseSBqdXN0IGJsb29kLiBMaWtlIGl0J3Mgbm90IGxpa2UgZ2lybHMgYXJlIGxlYWtpbmcgb3V0IHNsaW1lIGxpa2UgbmVvbiB5ZWxsb3cgcHVzLCB0aGF0J2QgYmUgZ3Jvc3MuIEJ1dCBpdCdzIGJsb29kLiBUaGF0IHRoaW5nIHRoYXQgbW9zdCBvZiB0aGVzZSBkdWRlcyBoYXZlIGV4cGVyaWVuY2VkIGNvbWluZyBvdXQgb2YgdGhlaXIgYm9keSBhZnRlciBhIHNjcmFwZSBvbiB0aGUgcGxheWdyb3VuZCBvciB0aGVpciBub3NlIHdoZW4gdGhlIHdlYXRoZXIgZ2V0cyB0b28gZHJ5IG9yIGV2ZW4gd2hlbiB0aGV5IHNoaXQgc29tZXRpbWVzICh0aGFua3MgaGVtb3JyaG9pZHMpLiBXaHkgaXMgaXQgc3VkZGVubHkgc28gd2VpcmQgYW5kIGdyb3NzIHdoZW4gaXQncyBjb21pbmcgb3V0IG9mIGEgdmFnaW5hPyBJIGNvdWxkIHVuZGVyc3RhbmQgbm90IHdhbnRpbmcgcGVyaW9kIHNleCBvciBvcmFsIGFjdGl2aXR5IGFzIGEgZ3V5IGJlY2F1c2Ugc29tZSBwZW9wbGUganVzdCBjYW4ndCBoYW5kbGUgYmxvb2QgaW4gYW55IGNhcGFjaXR5LCBidXQgdG8ganVzdCBhY3QgbGlrZSBpdCdzIHRoaXMgdGFib28gZGlzZ3VzdGluZyB0aGluZyB0aGF0IG11c3Qgbm90IGJlIG1lbnRpb25lZCBvciBoZWFyZCBvZiBpcyBqdXN0IHNpbGx5LgpJIGRvIHRoaW5rIHNoZSBoYXMgbWFkZSBpdCBjbGVhciBzaGUgaGFzIG5vdGhpbmcgYWdhaW5zdCBKZXdpc2ggQW1lcmljYW5zLCBidXQgaXMgYWdhaW5zdCBJc3JhZWwgZHVlIHRvIHRoZSBQYWxlc3RpbmlhbiBzaXR1YXRpb24sIGFuZCBpcyBhZ2FpbnN0IHRoZSBpbmZsdWVuY2UgYW5kIG1vbmV5IG9mIEFJUEFDLgogOCBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ29BdCB0aGUgaW5pdGlhbCBzdGFnZSBvZiBhbm5leGF0aW9uLCBsaXR0bGUgY2hhbmdlZC4gVGhlIGNvbXBhbmllcyB0aGF0IGhhZCByYW4gdGhlIENvbmdvIGZvciBMZW9wb2xkIHN0aWxsIGRpZCBhZnRlciB0aGUgYW5uZXhhdGlvbiBhbmQgdGhlaXIgZ292ZXJuYW5jZSBjaGFuZ2VkIG9ubHkgc2xpZ2h0bHkgdW50aWwgdGhlIEJlbGdpYW4gZ292ZXJubWVudCBhY3R1YWxseSBib3RoZXJlZCB0byBlbmZvcnhlIEFydGljbGUgMyBvZiB0aGUgbmV3IGNvbG9uaWFsIGNoYXJ0ZXIgd2hpY2ggZGlkbiBoYXBwZW4gaW5pdGlhbGx5LiAKU3R1ZmYgbGlrZSB0aGlzIGNhbiBoZWxwIHlvdSB3aXRoIHlvdXIgb3duIHJlYWRzL21lbnRhbCBub3RlcyBidXQgY2FuIGFsc28gYmUgbWVudGFsbHkgdGF4aW5nLiBTbyBiZSBzdXJlIHRvIGJhbGFuY2UgaXQgb3V0IGEgYml0Lkl0IGRlcGVuZHMgYSBsb3Qgb24gdGhlIHN0YWtlcyB5b3UgYXJlIHBsYXlpbmcuIApBbiBvbmxpbmUgY2FzaW5vIGRvZXNuJ3QgaGF2ZSBzbyBtYW55IHByb2JsZW0gYW5kIG9ubGluZSBjYXNpbm8gcHJvcG9zZSB1bnRpbCA1MDAgZ2FtZXMgb24ganVzdCBvbmUgd2Vic2l0ZXMuIApTdHlsZSwgbmFycmF0aW9uLCBhbmQgZ2VuZXJhbCBnYW1lcGxheSBpcyBwZXJmZWN0LCBidXQgdGhlIGNydXNoaW5nIGRpZmZpY3VsdHkgYW5kIGdyaW5keSBuYXR1cmUgb2YgdGhlIGVuZGdhbWUgd2FzIHZlcnkgb2ZmIHB1dHRpbmcgdG8gbWUuIApQcmV0dHkgc3R1cGlkIGlmIHlvdSBhc2sgbWUuIApUaGUgd2hvbGUgdGhpbmcgd2FzIGp1c3Qgc3VycmVhbC4gCldobyB0b29rIHRoZSBtb25leT8gVGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBzYXlzIGl0IHdhcyB0aGUgUHJvZmVzc29yIGFuZCBKZXN1cywgYW1vbmcgb3RoZXJzLiAKSXQgZ29vZCBmb3IgdGhlIFJlcHVibGljYW5zOyBpdCBnb29kIGZvciB0aGUgRGVtczsgaXQganVzdCBhaW4gc28gZ29vZCBmb3IgdGhlIGdheXMgYW5kIGxlc2JpYW5zLgpTdXJnZXJ5IGFsc28gbWF5IGJlIGluZGljYXRlZCBpZiB0aGUgYmxvY2thZ2UgcmVjdXJzIGZyZXF1ZW50bHkuLiAKTWFwIGlzIGEgYml0IG9mIGFkdmVydGlzZW1lbnQgYSAiY29udmluY2VyIiB0byBzZW5kIG1vcmUgZWNvbm9taWMgdHJhZmZpYyB0aHJvdWdoIHRoZSBHcmVhdCBMYWtlcyBhbmQgb2YgY291cnNlIHRoZSBHcmVhdCBMYWtlcyBTdC4gTGF3cmVuY2UgU2Vhd2F5LiAKQXMgeW91IG1heSBiZSBhd2FyZSwgRXVyb3BlYW4gVW5pb24ncyBuZXcgR2VuZXJhbCBEYXRhIFByb3RlY3Rpb24gUmVndWxhdGlvbiAoR0RQUikgaXMgY29taW5nIGludG8gZWZmZWN0IG9uIE1heSAyNSwgMjAxOC4gV2hpbGUgaXQncyBpbXBvcnRhbnQgdG8gdXMgdG8gY29udGludWUgc2hhcmluZyB0aGUgdmVyc2F0aWxpdHkgb2Ygb3VyIHRlY2hub2xvZ3kgYnkgcHJvdmlkaW5nIG91ciBzdWJzY3JpYmVycyB3aXRoIGZyZXNoIGNvbnRlbnQgYW5kIHZhbHVhYmxlIG9mZmVycywgaXQncyBtb3JlIGltcG9ydGFudCB0byB1cyB0byBtYWtlIHN1cmUgb3VyIHN1YnNjcmliZXJzIHN0aWxsIHdpc2ggdG8gcmVjZWl2ZSB0aGVzZSBtZXNzYWdlcyBmcm9tIHVzLiAgYXMgcGVyIG91ciBUZXJtcyBDb25kaXRpb25zIGFuZCBwcml2YWN5IFBvbGljeSwgd2hlbiBib29raW5nIGFwcG9pbnRtZW50IG9ubGluZSB5b3UgaGF2ZSB0byBwcm92aWRlIHVzIHdpdGggeW91ciBkYXRhIGFuZCBhdXRvbWF0aWNhbGx5IHN1YnNjcmliZSB0byBvdXIgbWFpbGluZyBsaXN0IHRvIHJlY2VpdmUgb2ZmZXJzIHZpYSBlbWFpbC4gCkRpZSBBbnR3b3J0IGZyIGRpZSBTa2VwdGlrZXI6CkxhcCAzLiAKQW55d2F5LCBvdmVyIHRoZSBzdW1tZXIgKEkgd2FzIHZpc2l0aW5nIG15IGRhZCksIEF2YSBJIGd1ZXNzIGhhZCB0YWxrZWQgaGVyc2VsZiB1cCBpbnRvIGEgZnJlbnp5IHRoYXQgaGVyIGV4IGh1c2JhbmQgd2FzIGFidXNpbmcgaGVyIGtpZHMgYW5kIG5vdCB0cmVhdGluZyBoZXIgcmlnaHQsIGFuZCBzbyBzaGUgYm91Z2h0IGEgZ3VuLiBXaGVuIHRoZWlyIGZhdGhlciBjYW1lIHRvIHBpY2sgdGhlbSB1cCBmb3IgdGhlaXIgd2Vla2VuZCBzaGUgc3RlcHBlZCBvdXRzaWRlLCBzaG90IGhpbSB1bnRpbCB0aGUgZ3VuIHdhcyBlbXB0eSwgdGhlbiB3ZW50IGJhY2sgaW5zaWRlIGNvb2wgYXMgeW91IHBsZWFzZSB0byBsZXQgaGltIGJsZWVkIHRvIGRlYXRoIG9uIHRoZSBzaWRld2Fsay4gClNvbWUgcmVsYXRpb25zaGlwcyBhcmUgYmV0dGVyIGZyb20gYSBkaXN0YW5jZS4uIApJdCB1c3VhbGx5IGEgcXVlc3Rpb24gb2YgaG93IG11Y2ggZmVsdCBpcyBvbiB0aGUgYmFsbC4gWW91IGtub3cgdGhvc2Ugc3RyYW5kcyB0aGF0IHN0aWNrIG91dCBvZiB0aGUgYmFsbCA/IFRoZSBtb3JlIHRoZXJlIGFyZSwgdGhlIG1vcmUgdGhlIGJhbGwgd2lsbCBiZSBhZmZlY3RlZCBieSBzcGluLiBTbyBpZiB5b3Ugd2FudCB0byBnbyBmb3Igc3BlZWQsIHBpY2sgdGhlIGJhbGwgd2l0aCB0aGUgbGVzcyBmZWx0LiBJZiB5b3Ugd2FudCB0byBkbyBhIGtpY2sgc2VydmUsIGdvIGZvciB0aGUgYmFsbCB3aXRoIHRoZSBtb3N0IGZlbHQuCkZvciAxNSB5ZWFycywgYW5kIG91ciBwcm9kdWN0aXZpdHkgd2VudCBkb3duLCB0aWNrLCB0aWNrLCB0aWNrLCBmb3IgMTUgeWVhcnMsIGhlIHNhaWQuIFNvIHRoZXkgYWNjcnVpbmcgdGhlIGVjb25vbWljIGJlbmVmaXRzIGFuZCBzdGF0ZSBwb3dlciB0aGF0IGNvbWVzIHdpdGggYnVpbGRpbmcgdGhvc2UgaW50YW5naWJsZSBhc3NldHMuLiAKV2hlbiBoZXIgZGF1Z2h0ZXIsIGEgbnVyc2UsIHBob25lZCB0aGUgZW5kb2NyaW5vbG9naXN0LCBoZSBkZW5pZWQgdGhhdCB0aGUgcGF0aWVudCdzIGJyZWF0aGluZyBwcm9ibGVtIHdhcyByZWxhdGVkIHRvIGhlciBsb3dlciBkb3NlIG9mIEFybW91ci4gSGUgYWR2aXNlZCBoZXIgdG8gY29uc3VsdCBhbiBlYXIsIG5vc2UsIGFuZCB0aHJvYXQgc3BlY2lhbGlzdC4gU2hlIHNhdyBhIGx1bmcgc3BlY2lhbGlzdCBpbnN0ZWFkLCBhbmQgaGUgcHJlc2NyaWJlZCA0MCBtZyBvZiBjb3J0aXNvbmUgYW5kIGFuIGluaGFsZXIuIFRoZSBpbmhhbGVyIGVuYWJsZWQgaGVyIHRvIGdldCB0aHJvdWdoIGhlciBkYXlzLiBCdXQgZXZlbiB3aXRoIHRoZSBoZWxwIG9mIHRoZSBpbmhhbGVyLCBzaGUgY291bGRuJ3Qgd2FsayB1cCBhIHNob3J0IGZsaWdodCBvZiBzdGFpcnMgd2l0aG91dCBnYXNwaW5nIGZvciBhaXIuIEhlciB2b2ljZSB3YXMgc28gYmFkbHkgYWZmZWN0ZWQgdGhhdCBzaGUgY291bGQgbm8gbG9uZ2VyIHNpbmcsIHdoaWNoIHNoZSBoYWQgYWx3YXlzIGVuam95ZWQuIGNvdWxkIG9ubHkgY3JvYWssIHNoZSBzYWlkLgpXaGVuIHNoZSBvcGVuZWQgaGVyIGJsb3VzZSwgc2hlIGhhZCBhIGdvcmdlb3VzLCBmbGF0LCB0YXV0IGJlbGx5IGFuZCBJIGp1c3QgY291bGRuIHdhaXQgdG8gZ2V0IHRvIGhlciEgUGVyaGFwcyBpbmV2aXRhYmx5LCBzaGUgaGFkIHZlcnkgc21hbGwgYnJlYXN0cywgYnV0IGZvciBtZSBhdCBsZWFzdCBicmVhc3Qgc2l6ZSBpcyBub3QgaGlnaCBvbiBteSBsaXN0LiAKV2hldGhlciB0aGF0IGJlIGJ5IGhpcyBleCBvciBmcm9tIGhpcyBzb24gbm90IGxpa2luZyBob3cgaGUgZGlzY2lwbGluZXMuIEluIGhpcyBtaW5kIGl0IGEgYmlnIGRlYWwuIAozIHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvV2FzIHRoZXJlIGFueSBicnVpc2luZz8gVGhpcyBzb3VuZHMgdmVyeSBzaW1pbGFyIHRvIHdoYXQgaGFzIGhhcHBlbmVkIHRvIG1lLCBib3RoIGluIHdyYXBzIGFuZCBvdXQuIFRoZSB0aW1lIGluIHdyYXBzIEkgd2FzIGNvbWluZyBvdXQgb2YgdGhlIGhvbGUgb2YgYSBzcXVhdCBhbmQgZmVsdCBib3RoIGhhbXN0cmluZyAicG9wIiBmb3IgbGFjayBvZiBhIGJldHRlciB0ZXJtLiAKTGVvbmFyZCBoYWQgc2NvcmVkIGF0IGxlYXN0IDI1IHBvaW50cyBpbiBoaXMgbGFzdCBmaXZlIGdhbWVzIGFnYWluc3QgdGhlIENlbHRpY3MgZGF0aW5nIGJhY2sgdG8gdGhlIDIwMTYgMTcgc2Vhc29uLgpBdWYgZWluZSB3b2hsdHVlbmRlIFdlbGxuZXNzcmVpc2UgaW5rbHVzaXZlIEhhbmRtYXNzYWdlIGdpbmcgZXMgZGFubiBpbSB3ZWl0bHVmaWdlbiBTcGEgIHVuZCBXZWxsbmVzc2JlcmVpY2guLiAKSSB0aGluayB3ZSBnb3QgdGhhdCBvbmUgZnJvbSBhIG1vdmllIG9yIHNob3cuIEl0IGxhc3RlZCBmb3JldmVyLCBhbmQgd2UgYWxsIGdvdCBjbGV2ZXIgd2l0aCBob3cgd2UgcGhyYXNlZCBvdXQgcXVlc3Rpb25zLiAKV2Ugb24gbXkgMjR0aCBiaXJ0aGRheSAodGhpcyBwYXN0IE5vdmVtYmVyKSBteSBnaXJsZnJpZW5kIGFuZCBJIHdlbnQgZG93bnN0YWlycyB0byBkcmluayB3aXRoIHNvbWUgZnJpZW5kcy4gClBlb3BsZSBuZXZlciB0cnVseSBsaXZlIHRoZWlyIGxpdmVzIGluIHRoZSBVUywgZXZlcnlvbmVzIHNvbGUgZm9jdXMgaXMgbW9uZXkgYW5kIHRoZWlyIGpvYnMuIApJZiB5b3UgaGFkIHRvIHByZWRpY3QgYmVmb3JlIFdlZG5lc2RheSdzIGdhbWUgd2hvIHdvdWxkIHNjb3JlIHRoZSBnYW1lIHdpbm5pbmcgZ29hbCwgaG93IG1hbnkgZ3Vlc3NlcyB3b3VsZCBpdCB0YWtlIHRvIGdldCB0byBEZXJ5ayBFbmdlbGxhbmQ/ClRoZSB0ZXh0dXJlIGlzIHJpY2ggYW5kIHRoZSBmaW5pc2ggbmV2ZXIgZW5kcy4gOTMvMTAwLiAKIlByb2JsZW0gZmluZGluZyBpcyBzdGlsbCBhIGh1bWFuIGZyb250aWVyLiBUbyBiZSBhYmxlIHRvIGxvb2sgaW50byBhIHJvb20gYW5kIGJlIGFibGUgdG8gc2VlIHdoYXQgaXMgbm90IGhlcmUsIHdoYXQgaXMgbWlzc2luZy4iClJvb3RpbmcgZm9yIHlvdS4gCklmIHlvdSBhcmUgaGlkaW5nIGEgcmVsYXRpb25zaGlwIGZyb20gc29tZW9uZSB0byBiZWNvbWUgaW50aW1hdGUgd2l0aCB0aGVtLCBpdCBpcyBubyBsb25nZXIgY29uc2Vuc3VhbCBiZWNhdXNlIHlvdSB0YWtlbiBhd2F5IHRoZWlyIGFiaWxpdHkgdG8gbWFrZSBhbiBpbmZvcm1lZCBjaG9pY2UuLiAKSSB1bmRlcnN0YW5kIGhvdyBjaGFuZ2VzIG5lZWRlZCB0byBiZSBtYWRlLCB0aGlzIGlzIGEgdGVycmlibGUgc2l0dWF0aW9uLCBidXQgaXQgc2VlbXMgYSBsaXR0bGUgcmlkaWN1bG91cyBob3cgb25seSBtYWxlIG51cnNlcyBuZWVkIGEgc3BlY2lmaWNhbGx5IGZlbWFsZSB3b3JrZXIgcHJlc2VudCB0byBkbyB0aGVpciBqb2Igb24gNTAlIG9mIHRoZWlyIHBhdGllbnRzLiBBcmUgbWFsZSBvYnNlcnZlcnMgbm90IGFsc28gY2FwYWJsZSBvZiBzdG9wcGluZyB0aGlzIGZyb20gaGFwcGVuaW5nIGFnYWluPyBSZWdhcmRsZXNzIHRoYXQgc2hlIHdhcyBwcmVnbmFudCwgc2hlIHdhcyBSQVBFRCwgYW5kIHRoZSBzYW1lIHRoaW5nIGNhbiBiZSBkb25lIHRvIG1lbiBpbiBhIHNpbWlsYXIgc3RhdGUsIHdoeSBub3QgYWxzbyByZXF1aXJlIGFsbCB3b3JrZXJzIHRvIGJlIG9ic2VydmVkIGlmIHlvdSdyZSBnb2luZyB0byBzYXkgbWFsZSBvbmVzIHNwZWNpZmljYWxseSBuZWVkIHRvIGJlIG9ic2VydmVkLi4gCkFsc28gYSBzdHJhd21hbi4gTm8gb25lIGlzIGFza2luZyBMZUJyb24gdG8gYmUgYSBsb2NrZG93biBkZWZlbmRlciBldmVyeSBwbGF5LCBtb3N0IHBlb3BsZSBoYXZlIHJlYWxpc3RpYyBleHBlY3RhdGlvbnMgZm9yIGEgMzQgeWVhciBvbGQgMTYgeWVhciB2ZXQuIApZb3UgZ290dGEgYWRtaXJlIHRoZWlyIG9yZ2FuaXphdGlvbjsgdGhleSBkbyB0aGluZ3MgcmlnaHQgYW5kIHRoZXkgYmVlbiBkb2luZyBpdCBmb3IgYSBsb25nLCBsb25nLCBsb25nIHRpbWUuIApUaGV5IGJvdGggaGF0ZSBzY2hvb2wsIEkgbm90IHNvIHN1cmUgdGhleSByZWFsbHkgc29jaWFsaXNlIG11Y2gsIHRoZXkgZG9uIHJlYWxseSB0YWxrIGFib3V0IGZyaWVuZHMgYW55bW9yZS4gSSBqdXN0IHdvbmRlciBpZiBob21lc2Nob29saW5nIHdvdWxkIGJlIGJldHRlci4gTXkgbW9tIGhhcyB0YXVnaHQgYmVmb3JlIChjb2xsZWdlKSBhbmQgZG9lcyBob21ld29yayB3aXRoIHRoZW0gYW5kIHNoZSByZWFsbHkgcGlja3MgdXAgYSBsb3QgYW5kIGtub3dzIGhvdyB0byBoZWxwIHRoZW0uIFNvIEkgd29uZGVyIHdoYXQgdGhlIGJlc3QgZGVjaXNpb24gd291bGQgYmUuIE5laXRoZXIgb2YgdGhlbSBkbyBzcG9ydCAob25lIGlzbiBhdGhsZXRpYywgb3RoZXIganVzdCBoYXRlcyBzY2hvb2wpIHdlIGRvIGhvbWUgYWN0aXZpdGVzIGFzIGEgZmFtaWx5IGFuZCBpZiB0aGV5IGhvbWVzY2hvb2xlZCB3ZSB3b3VsZCBwcm9iYWJseSBzZWVrIG91dCBhbiBleHRyYSBtdXJhbC4KT25lIGRheSB5b3UncmUgc2NyYXRjaGluZyB5b3VyIGNhdCdzIGVhcnMgd2hlbiB5b3Ugbm90aWNlIHNvbWV0aGluZyB1bnVzdWFsIGluc2lkZSAgIGEgZGFyayBicm93biwgY3J1bWJseSBzdWJzdGFuY2UgdGhhdCBsb29rcyBzb3J0IG9mIGxpa2UgY29mZmVlIGdyb3VuZHMuIFlvdXIgY2F0IHByb2JhYmx5IGhhcyBlYXIgbWl0ZXMsIHRpbnksIHBpbnBvaW50IHNpemVkIHBhcmFzaXRpYyBpbnNlY3RzIHRoYXQgbGl2ZSBhbmQgYnJlZWQgaW4gdGhlIGVhciBjYW5hbHMuIApHZXR0aW5nIGludG8gYSBob3VzZSBhdCB0aGlzIHBvaW50IGlzIHNvIGJhZCB0aGF0IGlmIHlvdSBhcmVuIGFscmVhZHkgaW4gYSBwbGFjZSB3aXRoIGVxdWl0eSBidWlsdCB1cCB0aGF0IHlvdSBhcmUgc2NyZXdlZCB1bmxlc3MgeW91IGhhdmUgQSBMT1Qgb2YgbW9uZXkgYXZhaWxhYmxlLi4gCkhlIGNvbXBldGVzIGluIElyb24gTWVuIGNvbXBldGl0aW9ucyBhbmQgdHJpYXRobG9ucywgYW5kIGxpa2VzIHRvIHNob290IChoZSB3YXMsIGZhbW91c2x5LCBvdXQgc2hvb3RpbmcgdGhlIGRheSB0aGUgR3JhbmFkYSBiaWQgd2FzIGxhdW5jaGVkKS4gQSBmcmllbmQgb2YgUHJpbmNlIENoYXJsZXMsIGhlIGFsc28gaGFzIHN0cm9uZyBvcGluaW9ucyBhYm91dCBob3cgdGhlIGNvdW50cnkgaXMgcnVuLiAKQWxzbyB0aGUgY2FzZSB5b3UgcmVmZXJyaW5nIHRvIEkgZ3Vlc3NpbmcgaXMgYWJvdXQgYSBNYWRyaWQgdHJhaW4gYm9tYmluZyBieSB0ZXJyb3Jpc3RzLiBGb3IgdGhvc2UgdW5hd2FyZSwgZmluZ2VycHJpbnRzIG9uIHRoZSBib21iIHdlcmUgZm91bmQgdG8gYmUgYSBwZXJmZWN0IG1hdGNoIHRvIGEgbGF3eWVyIGxpdmluZyBpbiBXYXNoaW5ndG9uLiBFeGNlcHQgb25lIG1ham9yIHByb2JsZW0sIHRoZSBsYXd5ZXIgaGFkIG5ldmVyIGV2ZW4gYmVlbiB0byBTcGFpbiwgYW5kIHRoZXJlIHdlcmUgY291bnRsZXNzIHdpdG5lc3NlcyB3aG8gc2F3IGhpbSBpbiBBbWVyaWNhIGR1cmluZyB0aGUgdHJhaW4gYm9tYmluZy4gQnV0IHRoYXQgZGlkbiB0aGUgcG9saWNlIGZyb20gc2hvd2luZyB1cCB0byBhcnJlc3QgdGhlIGxhd3llciBldmVuIHRob3VnaCB0aGVyZSB3YXMgbGl0ZXJhbGx5IHplcm8gb3RoZXIgZXZpZGVuY2UgcHV0dGluZyB0aGVtIGF0IHRoZSBzY2VuZSBvZiB0aGUgY3JpbWUgYWxsIHRoZSB3YXkgYWNyb3NzIHRoZSBvY2Vhbi4gRXZlbnR1YWxseSBTcGFpbiBwb2xpY2UsIGNvbnRpbnVpbmcgdG8gaW52ZXN0aWdhdGUgdGhlIHRlcnJvcmlzdCBhdHRhY2ssIGZvdW5kIHRoZSBhY3R1YWwgYm9tYmVyLCB3aXRoIHRoZSBzYW1lIGZpbmdlcnByaW50cywgYW5kIGhhZCBhIHRvbiBvZiBvdGhlciBldmlkZW5jZSB0aGF0IHRoZXkgd2VyZSB0aGVyZSB3aGVuIHRoZSBib21iaW5nIGhhcHBlbmVkLgpHYWRnZXRzIEdpem1vcyBHYWxvcmUgQXQgQ0VTIDIwMTMyMDEzIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgSGlnaGxpZ2h0cyBOZXdlc3QgVGVjaG5vbG9neVNhbXN1bmcncyBTbWFydCBDYXJlIHdhc2hlciBhbmQgZHJ5ZXIgYXJlIG9uIGRpc3BsYXkgYXQgdGhlIDIwMTMgSW50ZXJuYXRpb25hbCBDRVMgYXQgdGhlIExhcyBWZWdhcyBDb252ZW50aW9uIENlbnRlciBvbiBKYW51YXJ5IDgsIDIwMTMgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuIENFUywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhbm51YWwgY29uc3VtZXIgdGVjaG5vbG9neSB0cmFkZSBzaG93LCBydW5zIHRocm91Z2ggSmFudWFyeSAxMSBhbmQgaXMgZXhwZWN0ZWQgdG8gZmVhdHVyZSAzLDEwMCBleGhpYml0b3JzIHNob3dpbmcgb2ZmIHRoZWlyIGxhdGVzdCBwcm9kdWN0cyBhbmQgc2VydmljZXMgdG8gYWJvdXQgMTUwLDAwMCBhdHRlbmRlZXMuIChQaG90byBieSBEYXZpZCBCZWNrZXIvR2V0dHkgSW1hZ2VzKQpTaGUgaGFzIGhhZCBudW1lcm91cyBOdW1iZXIgMSBzb25ncywgYW5kIGlzIGtub3duIGZvciBjcmVhdGluZyB2ZXJ5IGRhbmNlYWJsZSBwb3AgaGl0cy4gU29tZSBvZiBoZXIgYmlnZ2VzdCBoaXRzIGluY2x1ZGUgIlBva2VyIEZhY2UsIiAiSnVzdCBEYW5jZSwiICJCYWQgUm9tYW5jZSwiIGFuZCAiQm9ybiBUaGlzIFdheS4iIChGdWxsIEFuc3dlcikuIApEbyBub3Qgb3ZlcnVzZSB5b3VyIGhhbmRzIHdoZW4gc3BlYWtpbmcuIEl0IGlzIGltcGVyYXRpdmUgdGhhdCB5b3UgbGVhcm4gaG93IHRvIHdhbGsgd2l0aCB5b3VyIGFybXMgcmVsYXhlZCBhdCB5b3VyIHNpZGVzLiAKQXBwcm9wcmlhdGVseSBlbm91Z2gsIHRoZSBpZGVhIGZvciB0aGUgc2hvdyBjYW1lIGZyb20gYSBqb2tlIG1hZGUgaW4gYSBkYXJrIHNpdHVhdGlvbi4gSXQgd2FzIGxhdGUgMjAxNSwgYSBmZXcgZGF5cyBhZnRlciBSb3NzIHJlcG9ydGVkIGhlciByYXBlIHRvIHRoZSBwb2xpY2UuIApTcGljZSB1cCB5b3VyIHdlYnNpdGUgd2l0aCBpbnRlcmVzdGluZyB2aWRlb3MgaW4gdGhlIGJhY2tncm91bmQgb2YgeW91ciB3ZWJzaXRlLiBXZSBwaWNrZWQgdGhlIHZpc3VhbGx5IGFtYXppbmcgdmlkZW9zIGZvciB5b3UgdG8gdXNlIGFuZCB5b3UgY2FuIGFsc28gY29ubmVjdCBhbnkgdmlkZW9zIGZyb20gWW91dHViZSBvciBWaW1lby4KQXQgbGV2ZWwgMTUwLCBPUCB3b3VsZCBoYXZlIGEgdG91Z2ggdGltZSBraWxsaW5nIG1vYnMgdG8ga2VlcCBsZXZlbGluZyB3aXRob3V0IGFueSBmdW5kaW5nLiBUaGF0IGEgZ29vZCB0aW1lIHRvIGdyaW5kIGRhaWx5IGJvc3NlcywgYW5kIHN0YXJ0IGRvaW5nIGdvbGx1eC9jb21tZXJjaS4gClNhdHVyZGF5LCBBcHJpbCAyMSAgT25lIEJ1cywgT25lIENhdXNlICAgSG9wZSBHYXJkZW5zCkJ1dCB5ZWFoLCAiR3JlYXRlc3QgU2hvdyIgIkEgTWlsbGlvbiBEcmVhbXMiICJOZXZlciBFbm91Z2gsIiBpdCBhIHJlYWwgbWFzdGVyY2xhc3MgaW4gaG9vayB3cml0aW5nLi4gCk15IG9sZGVzdCBiaXJ0aGRheSBpcyBhIG1vbnRoIGJlZm9yZS4gCllldCwgYXJlbiBCZXJuaWUgc3VwcG9ydGVycyBqdXN0IGEgbmFpdmUgYW5kIGd1bGxpYmxlPyBXaHkgZG8gd2UgbW9jayBUcnVtcCBzdXBwb3J0ZXJzLCB5ZXQgZmFpbCB0byBsb29rIGF0IG91cnNlbHZlcyBpbiB0aGUgbWlycm9yPy4gCldlIGp1c3Qga2VlcCBob3BpbmcgdGhhdCBvdXIgZWxlY3RlZCBvZmZpY2lhbHMgZG8gdGhlaXIgam9iLCB3aGljaCBpcyB0byBzcGVhayBmb3IgdXMuIApCRlQgaXMgZXZlcnl3aGVyZU9uZSBvZiB0aGUgbWlzY29uY2VwdGlvbnMgb3V0IHRoZXJlIGlzIHRoYXQgQkZUIGlzIG9ubHkgcmVsYXRlZCB0byBibG9ja2NoYWlucy4gV2hpbGUgdGhhdCBtYXkgYmUgdHJ1ZSB0byBhbiBleHRlbnQsIGl0IHJlYXJzIGl0cyBoZWFkIHdoZW5ldmVyIGEgc3lzdGVtIHdpdGggZGlzdHJpYnV0ZWQgbm9kZXMgaGFzIHRvIGRlYWwgd2l0aCBmYXVsdHMuClNhdnZ5IGJyYW5kcyBhcmUgYWxzbyBtYWtpbmcgdGhlbSBJbnN0YSB3b3J0aHkgYnkgd2hpcHBpbmcgdXAgYmVhdXR5IG1hc2tzIGluIHZpYnJhbnQgY29sb3JzLCBjcmVhdGluZyBzaGVldCBtYXNrcyBpbiBhbmltYWwgcHJpbnRzLCBhZGRpbmcgZ2xpdHRlciwgb2ZmZXJpbmcgdGFjdGlsZSBzZW5zYXRpb25zIHN1Y2ggYXMgZm9hbWluZyBhbmQgdGluZ2xpbmcsIGFzIHdlbGwgYXMgbWl4aW5nIGluIGF0dGVudGlvbiBncmFiYmluZyBpbmdyZWRpZW50cy4gIldoZW4geW91IHNlZSB1bmlxdWUgaW5ncmVkaWVudHMgbGlrZSAyNCBrYXJhdCBnb2xkIG9yIHNuYWlsIHNsaW1lIG9yIGRvbmtleSBtaWxrLCBvciBHbGFtIEdsb3cncyBkaXNjbyBraXQgbWFzayB3aXRoIHNoaW1tZXIgaW4gaXQsIGl0IG1ha2VzIHRoZSBwcm9kdWN0IGludGVyZXN0aW5nLCIgR2FpdGhlciBzYWlkLgpBZ2FpbiwgaWYgdGhlIHNpdHVhdGlvbiB3ZXJlIHJldmVyc2VkIGFuZCBzdHJhaWdodCBjb3VwbGVzIHdlcmUgZGVuaWVkIHZpc2l0YXRpb24gcmlnaHRzLCBtb3N0IHBlb3BsZSB3b3VsZCBzZWUgdGhhdCB0aGluZ3MgbmVlZCB0byBjaGFuZ2UuIApBbiBvY2Nhc2lvbmFsIGhvdCBvaWwgdHJlYXRtZW50IGlzIGdvb2Qgbm90IG9ubHkgZm9yIHlvdXIgbG9ja3MgYnV0IHlvdXIgc2NhbHAgYXMgd2VsbC4uIApUaGUgYmlnIGRheSBmaW5hbGx5IGNhbWUsIHNoZSBpbnNpc3RlZCBldmVyeW9uZSBwcmV0ZW5kIGFzIGlmIHNoZSB3ZXJlIHR1cm5pbmcgc2V2ZW46IHNldmVuIGNhbmRsZXMsIGhhcHB5IHNldmVudGggYmlydGhkYXkgaW4gcGluayBmcm9zdGluZywgYW5kIGEgc2lua2luZyBzdXNwaWNpb24gdGhhdCBJIHdhcyBzb21laG93IHRyYW5zbWl0dGluZyBteSBvd24gZmVhciBvZiBhZ2luZyB0byBteSBkYXVnaHRlcnMuLiAKTXVjaCBsaWtlIC91L0FjdXJ1c19Db3cgc3VnZ2VzdGVkLCB5b3UgZ29pbmcgdG8gY29tZSBhIGxvbmcgd2F5IHdpdGgganVzdCBhIHBpYW5vLiBXaGlsZSB5b3UgY2FuIHNwZW5kIGEgbG90IG9mIHRpbWUgbG9va2luZyBmb3IgdGhlIHJpZ2h0IERBVyAobXVzaWMgcHJvZ3JhbSwgYmFzaWNhbGx5KSwgVlNUcyAodmlydHVhbCBpbnN0cnVtZW50cywgYmFzaWNhbGx5KSBhbmQgc3VjaCwgaW4gdGhlIGVuZCBpdCBnb2luZyB0byBiZSBhIHBhaW4gdG8gd3JpdGUgYW55IHNjb3JlIGlmIHlvdSBoYXZlIG5vIGlkZWEgd2hhdCB5b3UgZG9pbmcgd2l0aCB0aGUgcHJvZ3JhbXMuCkFuZCBydWJiZWQgaXQgaW4gYnkgZ2l2aW5nIGhpbSBhIGdsYXNzIG9mIHdpbmUgcmlnaHQgaW4gZnJvbnQgb2YgeW91IHdoaWxlIGxvb2tpbmcgc211Zy4gCklmIGl0IGlzIGNvc3RpbmcgeW91IG1vbmV5IHRvIGhvbGQgeW91ciBtb25leSBpbiBhIGJhbmssIHlvdSB3aWxsIGNhc2ggb3V0IGFuZCBwdXQgaXQgYWxsIGluIGEgc2FmZXR5IGRlcG9zaXQgYm94LiBFdmVudHVhbGx5LCBkdWUgdG8gZnJhY3Rpb25hbCByZXNlcnZlcywgdGhlIGJhbmtzIHJ1biBvdXQgb2YgY2FzaCBhbmQgZ2lhbnQgZWNvbm9taWMgY3Jhc2ggZm9sbG93cy4gQnkgaGF2aW5nIGVDYXNoLCBmcmFjdGlvbmFsIHJlc2VydmVzIGFyZSBnb25lIGFuZCBhbGwgZUNhc2ggaXMgYWx3YXlzIHBhcnQgb2YgdGhlICJiYW5raW5nIHN5c3RlbSIgc2luY2UgdGhlcmUgaXMgbm8gcGh5c2ljYWwgZ29vZCB3aGljaCBjYW4gYmUgcHVsbGVkIGZyb20gZUNhc2guIApUcnVtcCBzYWlkIGhlIG5vdGljZWQgImEgbGl0dGxlIGNoYW5nZSIgaW4gS2ltIEpvbmcgVW4gImF0dGl0dWRlIiBhZnRlciBLaW0gdG9vayBhIHNlY29uZCB0cmlwIHRvIENoaW5hIHRoaXMgbW9udGggaW4gdGhlIHJ1biB1cCB0byB0aGUgc3VtbWl0LiAiSSBkb24gbGlrZSB0aGF0LCIgVHJ1bXAgc2FpZC4KIk1yLiAKQWxzbywgaWYgeW91IGRvIG5lZWQgYSBidW5jaCBvZiBkYXRhLCBjYW4geW91IGxlYXJuIGFzIGVmZmVjdGl2ZWx5IGlmIHRoZSBkYXRhIGlzIG9iZnVzY2F0ZWQ/IFRoZXNlIGFyZSBxdWVzdGlvbnMgQXBwbGUgaXMgdHJ5aW5nIHRvIHRhY2tsZSBiZWZvcmUgcmVsZWFzaW5nIGEgZmVhdHVyZS4gClRoZSBtYXAgZGVwaWN0cyB0aGUgZ3JvdW5kcyBvZiB0aGUgQmF0dGxlIG9mIHRoZSBTYW4gR2FicmllbCBSaXZlciwgYSB2aWN0b3J5IGZvciB0aGUgVW5pdGVkIFN0YXRlcywgd2hpY2ggcmVzdWx0ZWQgaW4gdGhlIHJldGFraW5nIG9mIExvcyBBbmdlbGVzIGZyb20gdGhlIENhbGlmb3Jub3MgYSBjb3VwbGUgb2YgZGF5cyBsYXRlciwgb24gSmFudWFyeSAxMC4gClBsdXMgaGUgZGlkbid0IHBheSB0YXhlcy4gCkxpbWl0IG15IHNlYXJjaCB0byByL3BpY3N1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KRllJLiAKTXkgbGFzdCBnaXJsZnJpZW5kIHdhcyBzbyBhbnRpIHBva2VyIGl0IHdhcyByaWRpY3Vsb3VzLCBubyBtYXR0ZXIgaG93IGhhcmQgSSB0cmllZCB0byBleHBsYWluIHRvIGhlciBob3cgcG9rZXIgaXNuIGdhbWJsaW5nIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgbG90dGVyeSBpcywgc2hlIGNvdWxkbiB0ZWxsIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gcG9rZXIgYW5kIGJsYWNramFjayB0byBzYXZlIGhlciBsaWZlLiBTaGUgZGVzY3JpYmVkIG1lIGFzIGEgZ2FtYmxpbmcgYWRkaWN0IGNhc3VhbGx5IGFuZCB1bmlycm9uaWNseSB0byBwZW9wbGUgYW5kIGV2ZXJ5IHRpbWUgSSBwbGF5ZWQgYSBsb3Npbmcgc2Vzc2lvbiwgc2hlIHRlbGwgbWUgdG8gImJlIGNhcmVmdWwiIGFuZCBjb25zaWRlciBxdWl0dGluZyB0aGUgZ2FtZSwgSSBoYXZlIHBsYXllZCBmb3IgNSB5ZWFycyBhbmQgYXQgdGhlIHRpbWUgd2FzIHBsYXlpbmMgNS81IGJhbmtyb2xsZWQgd2l0aCBhcm91bmQgMjUgYnV5IGlucy4uIApMYSBwcmluY2lwYWxlIHJ1bWV1ciBkZSB0cmFuc2ZlcnQgY29uY2VybmUgbGUgcXVhZHJ1cGxlIGNoYW1waW9uIGR1IG1vbmRlIGRlIEZvcm11bGUgMSwgU2ViYXN0aWFuIFZldHRlbCwgcXUgZGl0IGNvdXJ0aXMgcGFyIE1lcmNlZGVzIEFNRyBvIGlsIGRldmllbmRyYWl0IGxlIGNvIGRlIE5pY28gUm9zYmVyZyBkIDIwMTYuCkx1aSBvdSBsZXMgYXV0cmVzIEplIHN1aXMgZW4gYm91dCBkZSBwaXN0ZSwgamUgc2Fpcy4gSidlbiBhaSBncm9zIHN1ciBsYSBwYXRhdGUgIHZvaXIgbGEgcnVlIGNvbW1lIGVsbGUgZXN0LiBPdSwgcG91ciBtaWV1eCBkaXJlLCBjb21tZSBlbGxlIG4nZXN0IHBsdXMuCkkgZG9uIGtub3cgZm9yIG90aGVyIHN0cmVhbWVycywgYnV0IGEgbGFyZ2UgYW1vdW50IG9mIEtyaXBwIHZpZXdlcnMgZG9uIGV2ZW4gcGxheSBIUyBhbnltb3JlLCBoZSBtYWRlIGEgcG9sbCBvbmNlIHRvIGNoZWNrIGl0IG91dC4gVGhpbmcgaXMgSFMgaXMgYSB2ZXJ5IGNvbWZvcnRhYmxlIGdhbWUgdG8gd2F0Y2guIFlvdSBjYW4gbWlzcyBhIGZldyB0dXJucyBhbmQgc3RpbGwgdW5kZXJzdGFuZCBleGFjdGx5IHdoYXQgZ29pbmcgb24ganVzdCBieSBsb29raW5nIGF0IHRoZSBib2FyZCwgaXQgY29sb3JmdWwsIGFuZCBpdCBncmVhdCBiYWNrZ3JvdW5kIG5vaXNlIHdoZW4geW91IGRvIHNvbWV0aGluZyBlbHNlIGFzIHRoZSBtdXNpYyBhbmQgdGhlIHNvdW5kIGVmZmVjdHMgYXJlbiBvdmVyd2hlbG1pbmcuIEFsc28gbWF0Y2hlcyBhcmUgdXN1YWxseSBzaG9ydCwgc28geW91IHJhcmVseSBmZWVsIGZydXN0cmF0aW9uIHdoZW4geW91IG1pc3MgdGhlIGZpcnN0IGhhbGYgb2YgYSBnYW1lLgpUaGUgY3VyZSBmb3IgcmFjaXNtIGlzIGEgcGFzc3BvcnQsIGFuZCBpdCB0aGVpciBpc29sYXRpb24gdGhhdCBwZXJwZXR1YXRlcyB0aGVpciBvd24gZmVhcnMuIApGaWxlcyBsYXdzdWl0IGFnYWluc3QgY2hhaW4gZm9yIGFsbGVnZWQgcHJpY2UgZ291Z2luZ1RpbSBIb3J0b25zLCBmcmFuY2hpc2VlIGdyb3VwIGNsb3NlIHRvIHNldHRsaW5nIDIgY2xhc3MgYWN0aW9uIGxhd3N1aXRzVGhlIGFncmVlbWVudCBpbmNsdWRlcyBtYW55IG9mIHRoZSBzYW1lIHBvaW50cyB0aGUgdHdvIHBhcnRpZXMgc3VibWl0dGVkIGluIGEgbm9uIGJpbmRpbmcgdGVybSBzaGVldCB0byB0aGUganVkZ2UgYWJvdXQgYSBtb250aCBhZ28uLiAKRmV0dXMgb3IgY2hpbGQgd2hvIGRpZWQgYmVmb3JlIEJhcHRpc20gYW5kIHRoZSBlcmFzdXJlIG9mIG9yaWdpbmFsIHNpbiB3YXMgY29uZGVtbmVkIHRvIEhlbGwuIApDaHJvbmljIEZhdGlndWUgICBQcm9sb25nZWQgcGVyaW9kcyBvZiB0ZW5zaW9uIHdlYWtlbiB0aGUgbXVzY2xlcy4gV2hlbiBvbmUgbXVzY2xlIGdldHMgd2Vha2VuZWQsIGl0cyBvcHBvc2luZyBtdXNjbGUgaXMgYWxzbyBjb21wcm9taXNlZDsgc2xvd2x5IGl0IGFsc28gZ2l2ZXMgaW4uCkknbGwgYmUga2VlcGluZyBhbiBlYXIgb3V0IGZvciBnb29kIGNvbnRlbnQgaW4gbmV3ZXIgZXBpc29kZXMgdG8gbWFrZSBtb3JlIHZpZGVvcy4uIApUaGVMb3N0U2tlbGx5dG9uIHUKQWx0aG91Z2ggd2UgY29tcGxldGUgb3Bwb3NpdGVzLCB3ZSBiZWVuIGNsb3NlIGluIHRoZSBwYXN0LiAKWW91IGNhbiBhZHZhbmNlIGFuIGludmFsaWQgYXJndW1lbnQsIGFkbWl0IHRoYXQgaXQgbm90IHZhbGlkLCBhbmQgdGhlbiB1c2UgdGhhdCBhcmd1bWVudCB0byBzYXkgdGhlIG9wcG9uZW50cyBhcmd1bWVudCBpcyBpbnZhbGlkLiBJIGNvdWxkIHBvc2UgdGhlIG9wcG9zaXRlIGFyZ3VtZW50IHlvdSBqdXN0IG1hZGUsIHVzaW5nIHRoZSBleGFjdCBzYW1lIGRhdGEgYW5kIHRpbWVsaW5lLCBhbmQgaGF2ZSBqdXN0IGFzIHZhbGlkIGFuIGFyZ3VtZW50LiAiQWxsIGd1biByZWd1bGF0aW9uIGlzIGEgcmVzdWx0LCBub3QgYSBjYXVzZSBvZiBndW4gdmlvbGVuY2UuIEd1biB2aW9sZW5jZSBpcyBub3Qgd29yc2Ugb25seSBiZWNhdXNlIG9mIHRoYXQgcmVndWxhdGlvbi4gQ29sbGF0aW9uIGlzIG5vdCBjYXVzYXRpb24sIHRoZXJlIGlzIG5vIHJlYXNvbiB0byBiZWxpZXZlIHRoYXQgcmVsYXhpbmcgZmlyZWFybSByZWd1bGF0aW9ucyB3aWxsIG5vdCBsZWFkIHRvIG1vcmUgc2Nob29sIHNob290aW5ncy4iClRoZW4gaW4gdGhlIGFmdGVybm9vbnMgSSBhbHdheXMgcmVhZCBhIGJvb2sgb3IgZG8gbXkgaG9tZXdvcmsuIApPbmNlIGl0IGhhcyBiZWVuIGVtZXJnZWQgaW4gd2F0ZXIgZm9yIGEgb25lIGRheSBwZXJpb2QsIGNhcmVmdWxseSBpbnNwZWN0IGl0IHRvIHNlZSBpZiBhbnkgbWFqb3IgZGFtYWdlIGhhcyBvY2N1cnJlZC4gSWYgeW91IGZpbmQgdGhhdCB0aGUgY2hpcCBoYXMgaW5sYXlzIHRoYXQgY2FuIGJlIGVhc2lseSBkYW1hZ2VkIGFuZC9vciByZW1vdmVkLCBpdCBtYXkgbm90IGJlIHRoZSBzZXQgb2YgY2FzaW5vIHF1YWxpdHkgcG9rZXIgY2hpcHMgdGhhdCB5b3UgYXJlIHNlZWtpbmcuLiAKQW5kIHlvdSBuZWVkIHNvbWUgZ2VhciwgYXNhcC4gCkkgc29ycnkgdGhhdCB5b3Ugd2VyZSBub3QgYWJsZSB0byBnZXQgZ29vZCBhbnN3ZXJzIHdpdGhvdXQgYSBidW5jaCBvZiBzZWxmaXNoIHBlb3BsZSBydWluaW5nIGl0IGZvciB5b3UuIEJhZCBhZHZpY2UgaXMgd29yc2UgdGhhbiBubyBhZHZpY2UgYXQgYWxsLiBJIHN1Z2dlc3QgeW91IHRyeSByZXBvc3RpbmcgeW91ciBxdWVzdGlvbiBpbiBhIGZldyBkYXlzIGZyb20gYSBzdGFuZHBvaW50IG9mICJIb3cgZG8gSSB0YWxrIHRvIG15IGJveWZyaWVuZCBhYm91dCBtb25leT8iLi4gCkxvb2tpbmcgZm9yd2FyZCB0byB0aGF0LCBoZSBzYWlkLiBXaWxsIGhhdmUgbXkgZmlyc3QgZXhwZXJpZW5jZSBpbiB0aGUgbmV3IEMgNyBpbiBhIEdlcm1hbiBBdXRvQmFobiBvbiBUaHVyc2RheS4gTmV3IENhbWFybyBzZXRzIHVwIGEgcG9ueSBjYXIgY2hhbGxlbmdlIGluIEV1cm9wZSwgd2hlbiBGb3JkIGJyaW5ncyB0aGUgTXVzdGFuZyBoZXJlIGluIGEgeWVhciBvciBzby4gCkdvIHRvIEhFQi4gQnV5IHdhcm0gdG9ydGlsbGFzIGFuZCBhIHJvdGlzc2VyaWUgY2hpY2tlbi4gUHV0IHRoZSBjaGlja2VuIGluIHRoZSB0b3J0aWxsYS4gCkluIGp1a2FpLCBlYWNoIHZvdyBpcyByZWFkLCB0aGVuIHRoZSBzdHVkZW50IHJlYWRzIHRoZSB2b3cgaW4gdGhlaXIgb3duIHdvcmRzLiBTbyB1c2luZyB0aGUgZmlyc3Qgdm93IGFzIGFuIGV4YW1wbGUsIHRha2luZyByZWZ1Z2UgaW4gdGhlIGJ1ZGRoYSwgbXkgb3duIHdvcmRzIHdlcmU6IEkgdm93IHRvIGNob29zZSB0aGUgcGF0aCBvZiB0aGUgYnVkZGhhIGFuZCBkZWxpYmVyYXRlbHkgd2FsayBpdCwgc2Vla2luZyB3YWtlZnVsbmVzcyBpbiBteXNlbGYgYW5kIG90aGVycy4uIApJbiB0dXJuLCB0aGV5IHBlb3BsZSBpbiB0aG9zZSBwbGFjZXMgc2VsbCBhbGwgdGhleSBjYW4gYWJyb2FkLCBhbmQgaW1wb3J0IGNoZWFwZXIgc3R1ZmYgZnJvbSB3aGVyZXZlci4uIApBbmQgaWYgeW91IGRlY2lkZSB0aGlzIHdvcmxkIGlzIGp1c3QgdG9vIG11Y2ggc2hpdCB0byBicmluZyBhbm90aGVyIGxpZmUgaW50byAgIGZhaXIgZW5vdWdoLiAKTW9zdCBwYXJ0eSBwb2tlciBzaXRlcyB3aWxsIHJlcXVpcmUgeW91IHRvIGZpbGwgdXAgYSByZWdpc3RyYXRpb24gZm9ybS4gQWxsIHRoZSBiZXN0IHBhcnR5IHBva2VyIHNpdGVzIG9uIHRoZSB3ZWIgYXJlIG9uIG1lbWJlcnMgb25seSBiYXNpcy4gCkJ1dCBpZiB1bHRpbWF0ZSB0cmFucXVpbGl0eSBpcyB3aGF0IHlvdSBzZWVrLCB0aGVuIGhlYWQgdG8gdGhlIHNoaXAncyBzcGEuIApCdXQgZm9yIEV1cm9wZWFuIGRlcml2ZWQgY3VsdHVyZXMsIGluY2x1ZGluZyB0aGUgRW5nbGlzaCBzcGVha2luZyB3b3JsZCwgaXQgYW5jaWVudCBHcmVlY2UgYW5kIFJlbmFpc3NhbmNlIEl0YWx5IHRoYXQgaGF2ZSB0aGUgbW9zdCBpbmZsdWVuY2Ugb24gdXMgZnJvbSB0aGUgYW5jaWVudCB3b3JsZCwgYmVjYXVzZSB0aGV5IHRoZSBvbmVzIHRoYXQgbGVkIHVzIHRvIHdoZXJlIHdlIGFyZSB0b2RheSBhcyBhIGN1bHR1cmUuLiAKSWYgYSBtdXNjbGUgaXMgZXh0cmEgdGlnaHQgdGhvdWdoIHRoZSB0b3hpbiBpcyBzb3J0IG9mIHN0dWNrLiBvdyBvdyBidXJuaW5nISEgU09PTyBkdXJpbmcgYSBtYXNzYWdlIHRveGlucyBhcmUgYmVpbmcgInB1c2hlZCIgb3V0IGFuZCByZWxlYXNlZC4gVGhhdCBpcyB3aHkgaXQgaXMgR1JFQVQgQU5EIElNUE9SVEFOVCB0byBkcmluayBsb3RzIG9mIHdhdGVyIGFmdGVyIGEgbWFzc2FnZSBhbmQgRVZFUllEQVkgdG8gaGVscCBlbGltaW5hdGUgd2FzdGUgcHJvZHVjdCFXaGVyZSBhcmUgeW91IGdvaW5nIHRvIHNjaG9vbD9XaGVuIEkgd2FzIGluIHNjaG9vbCBhbGwgSSB0aG91Z2h0IHdhcyBXT1cgdGhpcyBpcyBnb2luZyB0byBiZSBzbyBlYXN5IEkgZ29pbmcgdG8gbGVhcm4gaG93IHRvIG1hc3NhZ2UgcGVvcGxlIGFuZCBjaGFyZ2UgOTAgZG9sbGFycyBhbiBob3VyIGFuZCBiZSByaWNoIGFuZCBkbyBsaWtlIDIgbWFzc2FnZXMgNSBkYXlzIGEgd2VlayBhIGRheSFJdCBpcyBhIGxvdCBvZiBpbmZvcm1hdGlvbiwgYW5hdG9teSxwYXRob2xvZ3ksIGtpbmVzaW9sb2d5LCBldGhpY3MsIHRlY2huaXF1ZSwgY2xpbmljYWwuIApBbmQgZXZlbiBpZiB0aGF0IGhhcHBlbnMgaXQgaXMgbGlrZWx5IHRoYXQgd2Ugd291bGQgc3RpbGwgYmUgb25lIG9mIHRoZSB3b3JsZCBtb3N0IGVudmlyb25tZW50YWxseSBmcmllbmRseSBjaXRpZXMsIGFzIHdlIGJlIHZlcnkgdmVyeSBsb3cgb24gdGhlIGVuZXJneSBleHBlbmRlZCBwZXIgcGVyc29uIGFuZCB2ZXJ5IHZlcnkgdmVyeSBsb3cgb24gdGhlIGNvbmNyZXRlIHBlciBwZXJzb24uIERlc3BpdGUgbGl2aW5nIGluIGEgY29uY3JldGUgY2l0eSwgd2UgSSA5OSBzdXJlIHVzZSBsZXNzIHRoYW4gbW9zdCBvdGhlciBjaXRpZXMsIGJlY2F1c2Ugcm9hZHMgYW5kIHBhcmtpbmcgYXJlIGtpbGxlcnMsIGFuZCB3ZSBkb24gaGF2ZSBtdWNoIG9mIGVpdGhlciBiZWNhdXNlIHdlIGxpdmUgc28gY2xvc2UgdG9nZXRoZXIuCk5vIGthcmFva2UsIGluc3RydW1lbnRhbCBjb3ZlcnMsIHJlbWl4ZXMgb3IgcmVhY3Rpb24gdmlkZW9zLiBBZGRpdGlvbmFsbHksIGFueSBjb3ZlcnMgbXVzdCBiZSBvZiBKYXBhbmVzZSBtdXNpYyBBTkQgcGVyZm9ybWVkIGJ5IGFydGlzdHMgaW4gdGhlIEphcGFuZXNlIG11c2ljIHNjZW5lL2luZHVzdHJ5LgpJbiBtYW55IHByb3ZpbmNlcywgdGhlaXIgam9icyBhcmUgY2hhbmdpbmcgZnJvbSB0aGF0IG9mIHJlZ3VsYXRpb24gbWFrZXIsIHdob3NlIGpvYiBpcyB0byBhZGQgcnVsZXMsIHRvIHRoYXQgb2YgcmVndWxhdGlvbiBtYW5hZ2VyIHdpdGggdGhlIGZhciBtb3JlIHNvcGhpc3RpY2F0ZWQgam9iIG9mIGFkZGluZyBydWxlcyB3aGVyZSBuZWVkZWQgYW5kIHN1YnRyYWN0aW5nIG9uZXMgdGhhdCBkb24gYWRkIHZhbHVlLiAKT2JlbGlzaykgdGhlcmUgaXMgbm8gY2VydGFpbiB3YXkgdG8gZGVmZWF0IG9iZWxpc2sgZXhjZXB0IGZvciBnZXR0aW5nIHJpZCBvZiBpdCBleGNlcHQgZm9yIGJvb3N0aW5nIHlvdXIgbW9uc3RlcnMnIGF0ayBhbmQgZ2V0IHJpZCBvZiBpdCBzdHJhaWdodCBhd2F5LiBKdXN0IHNvIHlvdSBrbm93IG9iZWxpc2sncyBlZmZlY3QgaXMgYnkgdHJpYnV0aW5nIDIgbW9uc3RlcnMgeW91ciBvcHBvbmVudCBjb250cm9scy4gCkluIHRoZSBzYW1lIHllYXIgdGhhdCB0aG9zZSBib3R0b20gMjAgbWlsbGlvbiB0YXhwYXllcnMgcGFpZCA1MGJuIGluIGluY29tZSB0YXgsIHRoZSBuZXQgd2VhbHRoIG9mIHRoZSBVSyByb3NlIGJ5IG5lYXJseSBoYWxmIGEgdHJpbGxpb24gcG91bmRzLCB5ZXQgYWxtb3N0IG5vbmUgb2YgdGhhdCBnYWluIHdhcyB0YXhlZC4gQXMgdGhlIGNoYW5jZWxsb3IgbGluZXMgdXAgdGhlIHNwcmluZyBzdGF0ZW1lbnQsIHRoZSBkZWJhdGUgc2hvdWxkIG5vdCBiZSBhYm91dCBpbmNvbWUgdGF4IG9yIHBlcnNvbmFsIGFsbG93YW5jZXMsIGJ1dCBob3cgd2UgcmVvcmllbnRhdGUgdGhlIHRheCBzeXN0ZW0gdG8gd2hlcmUgdGhlIG1vbmV5IHJlYWxseSBsaWVzLiAKVGhlIGJlc3Qgd2FzIHRoZSByb2FkIGJ5IGhpcyBob3VzZSwgaXQgd2FzIHRoZSByaXZlciwgYW5kIHdoZW5ldmVyIGEgY2FyIHdvdWxkIGdvIGJ5IGl0IHdvdWxkIHJlcHJlc2VudCBzb21lIFNhaGFncyAod2F0ZXIgbW9uc3RlcnMpIGp1bXBpbmcgb3V0LiBTbyB3ZSB3b3VsZCBjb21lIGZseWluZyBvdXQgb2YgdGhlIGJ1c2hlcyBhbmQgc3RhcnQgc3dpbmdpbmcgb3VyIGhvbWUgbWFkZSB3ZWFwb25zIGxpa2UgY3JhenkgcGVvcGxlLiAKRXZlcnlvbmUgaXMgYnVzeSB0aGVzZSBkYXlzLCBhbmQgc2xvdHMgcHJlc2VudCBhbiBpZGVhbCBvcHBvcnR1bml0eSB0byByZWxheCwgaGF2ZSBhIGZ1biBnYW1lIGFuZCBwb3NzaWJseSB3aW4gc29tZSBwcml6ZXMsIHdpdGhvdXQgaGF2aW5nIHRvIGdpdmUgeW91ciB1bmRpdmlkZWQgYXR0ZW50aW9uIHRvIHRoZSBzY3JlZW4uIFNsb3QgZ2FtZXMgZXZlbiBmaXQgaW50byBhIGJ1c3kgd29ya2luZyBkYXksIHRha2luZyB0aGUgYm9yZWRvbSBvdXQgb2YgbG9uZyBjb21tdXRlcy4uIApBZGFwdGluZyBpbnRlcm5hdGlvbmFsIGd1aWRlbGluZXMgdG8gc3VpdCBsb2NhbCBjb250ZXh0IGNhbiBkcml2ZSBldmlkZW5jZSBiYXNlZCBwcmFjdGljZSBpbiBsb3cgYW5kIG1pZGRsZSBpbmNvbWUgY291bnRyaWVzLCBzYXkgQWJoYSBNZWhuZGlyYXR0YSBhbmQgY29sbGVhZ3VlcywgYXMgdGhleSBkZXNjcmliZSBhIHByYWdtYXRpYyBhcHByb2FjaCB0byBkZXZlbG9wIHN0YW5kYXJkIHRyZWF0bWVudCBndWlkZWxpbmVzIGZvciBJbmRpYS4KSW1hZ2luZSB3YWxraW5nIGludG8gQmVzdCBCdXkgYW5kIHNlZSBhICQzMDAgZWxlY3Ryb25pYyBmcm9tIGEgYnJhbmQgbGlrZSBTb255ICwgU2Ftc3VuZyggYmVlbiBhcm91bmQgZm9yZXZlciApIGFuZCBmb3IgYXJndW1lbnRzIHNha2UgdGhleSBoYXZlIG1heWJlIDUwMCByZXZpZXdzIC4gWW91IHNlZSB0aGUgc2FtZSBpdGVtIHdpdGggdGhlIGJyYW5kIHhhbmdiZXN0c2VsbGVyaGFwcHljaGluYSBmb3IgJDI5MCAuIApTY2hvb2wgc3Bpcml0IGlzIGxhY2tpbmcuIEl0IGlzIG5vdCBhIHRyYWRpdGlvbmFsIHN0YXRlIHNjaG9vbCwgc3R1ZGVudHMgaGVyZSBhcmUgY3JpdGljYWwgb2YgRW1vcnkgYXMgSSB0aGluayBtb3N0IHN0dWRlbnRzIGF0IHRvcCBzY2hvb2xzIGFyZS4gSWYgeW91IGJvaWwgaXQgZG93biBhbmQgZXhjbHVkZSAxc3Qgc2VtZXN0ZXIgZnJlc2htZW4gd2hvIGFyZSB1cHNldCBhYm91dCBnZXR0aW5nIHJlamVjdGVkIEVEIGZyb20gRHVrZSB5b3UgZmluZCBzdHVkZW50cyBhcmUgaGFwcHkgYW5kIHByb3VkIG9mIHRoZSB1bml2ZXJzaXR5LgpUbyBtZSBydW5uaW5nIGl0IHR3aWNlIGp1c3QgbWFrZXMgY2hlYXRpbmcgYW5kIGNvbGx1c2lvbiB0aGF0IG11Y2ggZWFzaWVyLiBUaGUgb25seSByZWFzb24gY2hlYXRpbmcgaGFzbid0IGJlY29tZSBhbiBpc3N1ZSBpcyBiZWNhdXNlIGV2ZXJ5b25lIHdobyBwbGF5cyBrbm93cyB3aGljaCBwZW9wbGUgYXJlIHBsYXlpbmcgdG9nZXRoZXIsIHNwbGl0dGluZyBhZnRlciB0aGUgZ2FtZSwgcnVubmluZyBwZW9wbGUgb3V0IG9mIHBvdHMgdG8gcnVuIGl0IHR3aWNlIHdpdGggdGhlaXIgYnVkZHkgZXRjLiAKT25jZSB5b3UgZ2V0IHN0YXJ0ZWQsIHRoZSBnYW1lIHdpbGwgZW5jaGFudCB5b3UgYW5kIHlvdSB3b3VsZCB3YW50IHRvIGxlYXJuIGV2ZXJ5dGhpbmcgYWJvdXQgdGhlIGRpZmZlcmVudCBjYXJkIGNvbWJpbmF0aW9ucyBhbmQgdGhlIGJlc3Qgd2F5IHRvIHBsYXkgdGhlbS4gT2YgY291cnNlLCBwb2tlciBhcyBtYW55IG90aGVyIGNhcmQgZ2FtZXMgaXMgYSBnYW1lIG9mIGNoYW5jZS4gSG93ZXZlciwgdGhlcmUgYXJlIG1hbnkgdGhpbmdzIHlvdSBjYW4gZG8gYWZ0ZXIgdGhlIGNhcmRzIGFyZSBkZWFsdCwgc28gdGhhdCB5b3Ugd2lsbCBoYXZlIGJldHRlciBjaGFuY2VzIGF0IHdpbm5pbmcuIFBva2VyIGJvb2tzIHdpbGwgcHJvdmlkZSB5b3Ugd2l0aCBpbmZvcm1hdGlvbiB3aGF0IHlvdSBzaG91bGQgYW5kIHNob3VsZG4ndCBkbyB3aGVuIHBsYXlpbmcgdGhlIGdhbWUuIE1hbnkgYm9va3MgaGF2ZSBleHBsYW5hdGlvbnMgaG93IHlvdSBzaG91bGQgcGxheSBldmVyeSBwb3NzaWJsZSBjYXJkIGNvbWJpbmF0aW9uLiBXaGV0aGVyIHlvdSB3aWxsIHBhc3Mgb24gb3IgZ28gImFsbCBpbiIgZGVwZW5kcyBvbiB5b3VyIGNhcmRzIGFuZCBpZiB5b3Ugd2FudCB0byB0YWtlIHRoZSByaWdodCBkZWNpc2lvbiwgeW91IHNob3VsZCByZWFkIHNvbWUgcG9rZXIgYm9va3MuCkEgUmFpc2UgRGVhZCBzcGVsbCBpcyBwcm9iYWJseSBiZXlvbmQgeW91ciBidWRnZXQsIGFuZCBpdCB3b3VsZG4gd29yayBvbiBhIGNyZW1hdGVkIGJvZHkgYW55d2F5LiBEZXBlbmRpbmcgb24gaG93IHlvdXIgZ3JvdXAgaW50ZXJwcmV0cyB0aGUgcnVsZXMsIHlvdSBtaWdodCBiZSBhYmxlIHRvIHJlc3RvcmUgdGhlIGFzaGVzIHdpdGggYSBSZXN1cnJlY3Rpb24gc3BlbGwsIGJ1dCB5b3UgbWlnaHQgbmVlZCBhIFRydWUgUmVzdXJyZWN0aW9uLiBFaXRoZXIgb2YgdGhvc2Ugb3B0aW9ucyBhcmUgd2VsbCBiZXlvbmQgeW91ciBtZWFucyByaWdodCBub3cuLiAKSSB0b29rIHRoZSBjaGFsbGVuZ2Ugd2hlcmUgSSBjb3VsZCBzcGVuZCBvbmx5CiJJIHVzZWQgdG8gYXZvaWQgdGhlIGRlbnRpc3QgYXQgYWxsIGNvc3RzIGJlY2F1c2UgSSByZWFsbHkgZG9uJ3QgbGlrZSB0byBnbyBub3JtYWxseSwiIE5vdmVsbGEgc2FpZC4KQWZ0ZXJ3YXJkcyB0aGV5IGV4cGVyaWVuY2UgYSBncmFkdWFsIGJ1aWxkIHVwIG9mIHRlbnNpb24gYWdhaW4sIGFuZCB0aGUgY3ljbGUgcmVwZWF0IGl0c2VsZi4gVGhlIGVzY2FsYXRpb24gaW4gZnJlcXVlbmN5IG9mIGtpbGxpbmcsIG9yIHZpb2xlbmNlIGNvbW1pdHRlZCBkdXJpbmcgaXQsIGlzIHNpbWlsYXIgdG8gdGhlIHRvbGVyYW5jZSBzZWVuIGluIG90aGVyIHBoeXNpY2FsIGFkZGljdGlvbnMuIE92ZXIgdGltZSB0aGUga2lsbGVyIG5lZWRzIG1vcmUgYW5kIG1vcmUgc3RpbXVsYXRpb24gdG8gZ2V0IHRoZSBzYW1lIHBzeWNob2xvZ2ljYWwgcGF5b2ZmLi4gCkkgdGhpbmsgcGVvcGxlIHdobyBhbGxvdyB0aGVpciBwYXJlbnRzIHRvIGRpZSB3aXRoIGRpZ25pdHkgYW5kIHRoZXkgZW5kIHVwIGluIGhvc3BpY2UgdXN1YWxseSBoYXZlIG11Y2ggc3Ryb25nZXIgZmFtaWx5IHRpZXMgdGhhbiBzb21lIG9mIHRoZSBwYXRpZW50cyB3aG8gZmFtaWx5IG1lbWJlcnMgbWFkZSBtZSBicmVhayBkYWQgOTIgeWVhciBvbGQgY2hlc3QuIApJbiBhbnkgY2FzZSB3aGF0IGV2ZXJ5b25lIHNob3VsZCB3YXRjaCBvdXQgZm9yIGlzIFNjYW0gZW1haWxzIGFuZCBtZXNzYWdlcyBpbiBmYWNlYm9vayB3aGVyZSB5b3UgYXJlIHN1cG9zZSB0byBiZSBhd2FyZGVkIG9yIGJhbmVkIGZvciBhbnkgcmVhc29uLCBhbmQgeW91IGFyZSBhc2tlZCB0byBjbGljayBhIGxpbmsgdG8gdmVyaWZ5IHlvdXIgYWNjb3VudCwgd2hlcmUgeW91IHdvdWxkIG5lZWQgdG8gbG9naW4gb2YgY291cnNlOyB3aGVuIHlvdSBsb2dpbiB0byB0aGF0IGxpbmsgeW91IGRvbid0IGFjdHVhbGx5IHZlcmlmeSBhbnl0aGluZyB5b3UganVzdCBnaXZlIG91dCB5b3VyIHBhc3N3b3JkIGFuZCBhY2NvdW50IHRvIHNvbWUgaGFja2Vycy4gVGhlIHdlYnNpdGUgbWF5IGxvb2sgdmVyeSB3ZWxsIGxpa2UgZmFjZWJvb2sgb3IgYW55IG90aGVyIGtpbmQgb2Ygc2VjdXJpdHkgaW52ZW50ZWQgd2VzYml0ZS4gClRoZXNlIGFyZSB0aGluZ3MgSSBub3JtYWxseSBwdXQgdXAgd2l0aCBvciBzYXkgeWVzIHRvLi4gCkkgbmV2ZXIgcGFpZCBmb3Igc2V4LCBidXQgSSB3b3VsZCBpbWFnaW5lIHRoYXQgbWFueSBvZiB0aGUgbmVnYXRpdmUgZmFjdG9ycyBjaGFuZ2UgZ3JlYXRseSBvbiB3aGVyZSB5b3UgbGl2ZS4gSnVzdCBiZWNhdXNlIHlvdSBkb24gc2VlIHByb3N0aXR1dGVzIHdhbGtpbmcgdGhlIHN0cmVldHMgaW4gYSBuaWNlciBhcmVhIGRvZXNuIG1lYW4gdGhleSBhcmVuIHRoZXJlLiAKTW9yZSBncnVtYmxpbmcgYWJvdXQgd2FsbGVkIGdhcmRlbnMgYW5kIGRhdGEKVGhpcyBhbGwgc291bmRzIGhlYWR5LCBidXQgdGhlIGZpbG0gaXMgcXVpdGUgbGlnaHQgb24gaXRzIGZlZXQuIEZpbGxlZCB3aXRoIGZpbG1zIHdpdGhpbiB0aGUgZmlsbSwgcmVlbmFjdG1lbnRzIGFuZCB2b2ljZSBvdmVycywgdGhpcyBjb2xsYWdlIG5ldmVyIHRha2VzIGEgYnJlYXRoLiBNb3JlIHB1bmsgcm9jayB0aGFuIGNpbmVtYSB2ZXJpdGUsICJBbiBPdmVyc2ltcGxpZmljYXRpb24iIHdvcmtzIGJlY2F1c2UgaXRzIHNlbnRpbWVudGFsaXR5IGlzIGdlbnVpbmUgYW5kIGl0cyBjZXJlYnJhbCBwcmVvY2N1cGF0aW9ucyBhcmUgdmVyeSBtdWNoIGxpa2Ugb3VyIG93bi4gVGhlIHRydWUgb2JqZWN0IG9mIE5hbmNlJ3MgYWZmZWN0aW9uIGlzIG5vdCBhIHdvbWFuLCBidXQgY2luZW1hIGl0c2VsZi4KV2UgYWxsIGZpZ2h0aW5nIG91ciBvd24gYmF0dGxlcyBzbyB5b3UgYXJlIGRlZmluaXRlbHkgbm90IGFsb25lIGluIHRoaXMuIApOb2JvZHkgaGVyZSB3YXMgZXhwZWN0aW5nIGEgd2luIGFuZCBub2JvZHkgaXMgYnV0dGh1cnQgYWJvdXQgbG9zaW5nLiAKSW4gdGhlIGVuZCwgd2UgaG9wZSB0aGF0IHlvdSdyZSBhYmxlIHRvIGxlYXZlIGluc3BpcmVkIGFuZCB3aXRoIGlkZWFzIGZvciB5b3VyIG5leHQgdGF0dG9vLi4gCkkgZm91bmQgdGhlIGJlc3QgdGhpbmcgdG8gZG8gaXMgd2FsayB1cCB0byBoaXMgZGVzaywgY3JvdWNoIGRvd24gc28gbXkgZmFjZSBpcyBsZXZlbCBqdXN0IG92ZXIgdGhlIHRvcCBvZiBoaXMgZGVzaywgbG9vayBoaW0gaW4gdGhlIGV5ZSBhbmQgc2F5IGhhdmUgb25lIG1vcmUgY2hhbmNlIGFuZCB5b3UgZ29uZS4gClRvdXJuYW1lbnRzOiBJIGhhdmUgdHdvICQ3MDAgcHJvZml0IHRvdXJuYW1lbnRzIChvbmUgaW4gSnVseSwgb25lIGxhc3Qgd2VlaykgdGhhdCBjb2VyY2VkIG1lIGludG8gZ29pbmcgaGFyZCBpbnRvIHRoaXMgdG91cm5hbWVudCBzZXJpZXMgb3ZlciB0aGUgbGFzdCB3ZWVrLiBJIGRvbiB0aGluayBJIGEgYmFkIHRvdXJuZXkgcGxheWVyLCBidXQgdGhlIGxhc3Qgd2VlayBoYXMgZmVsdCBwcmV0dHkgc3Vic3RhbmRhcmQgaW4gdGVybXMgb2Ygc3RhcnRpbmcgaGFuZCBkaXN0cmlidXRpb24gYW5kIGZsb3AgaGl0ICUuIE92ZXIgYWxsIG9mIG15ICQzNTAgZW50cnkgdG91cm5hbWVudHMgSSBwcmV0dHkgc3VyZSBJIHdhcyBvbmx5IGRlYWx0IEFBIG9uY2UgYW5kIHdoZW4gSSBvcGVuIHJhaXNlZCBwcmVmbG9wIEVQIGV2ZXJ5b25lIGZvbGRlZCwgYW5kIGJvdGggdGltZXMgSSB3YXMgZGVhbHQgS0sgdGhlcmUgd2FzIGFuIEEgb24gZmxvcCwgbXVsdGl3YXkuCldhcyB0YWxraW5nIHRvIG15IGJveWZyaWVuZCBhYm91dCB0aGlzIGxhc3QgbmlnaHQgYW5kIEkgdG9sZCBoaW0gSSB3YXNuJ3QgY29tcGxhaW5pbmcgYWJvdXQgdGhlIGxpZmUgd2Ugc2hhcmUgYnV0IGhvbHkgc2hpdCBJIG1pc3MgbGl2aW5nIGFsb25lLiBJIG5ldmVyIHdvcmUgcGFudHMgaW4gbXkgaG91c2Ugd2hlbiBJIGxpdmVkIGFsb25lLiBDb21lIGhvbWUsIGNsb3RoZXMgb2ZmLCBUIHNoaXJ0IG9uLiAKSSByZW1lbWJlciBmaW5kaW5nIGEgZmlsbGVkIG91dCBvbmUgb2YgdGhvc2UgQXJ0IEluc3RydWN0aW9uIFNjaG9vbCBzZW5kYXdheXMgYXQgaGVyIGhvdXNlIHdoZW4gSSB3YXMgbGl0dGxlIGFuZCB0aGlua2luZyAid293LCBzaGUgZHJldyB0aGUgcGlyYXRlIEpVU1QgTElLRSB0aGUgcGljdHVyZSEiIFNoZSB3YXMgdmVyeSBhcnRzeSBhbmQgaGFkIGxvdHMgb2YgcGFpbnRpbmdzIGFuZCBzY3VscHR1cmVzIGFyb3VuZCBoZXIgaG91c2UgdGhhdCBzaGUgaGFkIG1hZGUuIEkgc2F3IHRoZXNlIHRoaW5ncyB0aHJvdWdoIGEgbm9zdGFsZ2lhIGxlbnMgYXMgSSBncmV3IHVwICAgYW5kIHdpdGggbm8gcGhvdG9zIHRvIGNvbXBhcmUgdG8sIEkgaGFkIGJ1aWx0IGhlciB1cCB0byBiZSBzb21lb25lIG1vcmUgaW1wcmVzc2l2ZSB0aGFuIHNoZSB3YXMuIApZb3UgYXJlIGdldHRpbmcgYSBkZWNlbnQgcHJpY2Ugb24gdGhlIHJpdmVyIHRvIGNhbGwgd2hpY2ggbWFrZXMgaXQgaGFyZCB0byBmb2xkIEkgaG9uZXN0bHkgbWlnaHQgbGVhbiBjYWxsIGhlcmUgZ2l2ZW4gdGhlIHByaWNlIGFuZCBoaXMgbGluZS4gSWYgaGUgcmVhbGx5IHdhbnRlZCB2YWx1ZSBvbiB0aGUgcml2ZXIgSSdkIGZpZ3VyZSBoZSdkIHNpemUgdXAgb24gdGhlIHJpdmVyIGdpdmVuIGhpcyBzbWFsbCBmbG9wIGFuZCB0dXJuIGJldHMuLiAKNy4gClRoZSBzZXJpZXMgaXMgZ29vZCBpZiB5b3UgZG9uIG1pbmQgdGhlIGRvcmt5bmVzcyBhbmQgc29tZSBwYXJ0cyBpbiB0aGUgc2VyaWVzIG1hZGUgbWUgbGF1Z2guU29tZSB0aGluZ3MgSSBub3RpY2VkIGluIHRoaXMgc2VyaWVzOiBJIGRvbiByZW1lbWJlciB0aGVyZSBiZWluZyBzbyBtdWNoIGVtcGhhc2lzIG9uIHNhZmV0eSBhbmQgYXdhcmVuZXNzLCBhbmQgY29tcGxpbWVudGluZyBlYWNoIG90aGVyIGFsbCB0aGUgdGltZSBpbiB0aGUgb2xkZXIgc2VyaWVzLiBQcmV0dHkgbXVjaCBpbiBldmVyeSBlcGlzb2RlLCBBc2ggb3Igc29tZW9uZSBpbiB0aGUgc2VyaWVzIGhhcyB0byBleHBsYWluIHdobyBUZWFtIFJvY2tldCBpcywgIlRoZXkgYmFkIGd1eXMgd2hvIHN0ZWFsIG90aGVyIHBlb3BsZSBQb2tlbW9uISJEaXR0byB0byB3aGF0IC91L05lcmRHMjMgc2FpZDogU2NpZW5jZSBpcyBzbyBhbWF6aW5nLiAKSXQgc2hvdWxkIGJlIGFibGUgdG8gZG8gaXRzIHdvcmsgaW4gc2Vjb25kcy4gT25jZSB5b3UgYXR0YWNoIGl0IHRvIHRoZSBvbmxpbmUgcG9rZXIgZ2FtZSwgaXQgc2hvdWxkIGluZm9ybSB5b3UgYWJvdXQgdGhlIGhhbmRzIGFuZCBvdGhlciB0aGluZ3MgaW1tZWRpYXRlbHkgYW5kIGFkdmljZSB5b3UgaG93IHRvIG1vdmUgb24uIApNYXliZSBqdXN0IGEgc3RyYWlnaHQgdXAgbWlsbGlvbiBkb2xsYXIgY2hlY2sgZnJvbSB0aGlzIGRvZ3NoaXQgY29tcGFueSBoZSBqdXN0IHNhdmVkLiAKODkgQWJzLiAKRXZlcnkgb3RoZXIgdGltZSBzb21lb25lIGhhcyB0YWtlbiBpdCBvdmVyIG5pZ2h0LiAKV2hhdCBpdCBoYXMgZ29pbmcgZm9yIGl0IGlzIGdvb2QvcmVmcmVzaGluZyBjb21lZHkgYW5kIHRvbmUsIHBsdXMgZ29vZCBjaGFyYWN0ZXJzLiAKQnV0IHRoZSBncmV5aG91bmRzLCB0aGVpciB0cmFpbmVycyBzYXksIGFyZSBiZXR0ZXIgb2ZmIHRoYW4gdGhvc2UgZ2FtYmxlcnMuIFVubGlrZSB0aGUgbWVuIGFuZCB3b21lbiBodW5jaGVkIG92ZXIgU291dGhsYW5kJ3MgMSwwMDAgImVsZWN0cm9uaWMgZ2FtZXMgb2Ygc2tpbGwsIiBzbW9raW5nIGNpZ2FyZXR0ZXMgYW5kIGxvc2luZyBtb25leSBpbiB2YXN0IHJvb21zIHRoYXQgbmV2ZXIgc2VlIHRoZSBsaWdodCBvZiBkYXksIHRoZSBkb2dzIGFyZSBkb2luZyB3aGF0IHRoZXkgbG92ZSB0byBkbzogUnVuLgpBcyBwYXJ0IG9mIHRoZSBhcnJhbmdlbWVudCwgQWNvc3RhIGFncmVlZCwgZGVzcGl0ZSBhIGZlZGVyYWwgbGF3IHRvIHRoZSBjb250cmFyeSwgdGhhdCB0aGUgZGVhbCB3b3VsZCBiZSBrZXB0IGZyb20gdGhlIHZpY3RpbXMuIApZb3UgY2FudCBmaW5kIG9ubGluZS4gCk9uY2UgeW91IGhhdmUgeW91ciBmb3JtIGluIGEgZ29vZCBwbGFjZSwgaW5jcmVhc2UgdGhlIHdlaWdodC4uIApUcmVrIHdlbnQgZnJvbSB1c2luZyBWSVNPUnMgdG8gdXNpbmcgb2N1bGFyIGltcGxhbnRzIGJhc2VkIG9uIHNhbHZhZ2VkIEJvcmcgdGVjaC4gClF1YW50ICBsIHNlbnRpbWVudGFsIHF1IGxhIG1hcmdhcml0YSwgbGEgYmFyYmUgZGUgSnVwaXRlciBjZW5zZSBjYXJ0ZXIgbGEgZm91ZHJlIG91IGxlcyBzb3VyY2lscyBkZSBWbnVzIChjIGFpbnNpIHF1ZSBsIG5vbW1lIGwgZGVwdWlzIGxlIFZJIG1lIHNpY2xlIGF1IG1vaW5zKSwgcXVhbmQgYmllbiBtbWUgb24gbGVzIGRzaWduZSB0b3V0ZXMgY29tbWUgaGVyYmVzIGRlIFNhaW50IEplYW4sIGlsIGVzdCBkaWZmaWNpbGUgZGUgbGVzIGxpZXIgYXUgYmFwdGlzdGUsIGNvdXNpbiBkZSBKc3VzLiBDZWNpIHRhbnQgZGl0LCBjZWxhIG5lIHZldXQgcGFzIGRpcmUgcXUgbmUgbGVzIGVtcGxveWEgcGFzIGxvcnMgZHUgcml0dWVsIHBhZW4gc29sc3RpY2lhbCAocHVpcyBjaHJpc3RpYW5pcykgc2Vsb24gbGVzIG1tZXMgcmFpc29ucyB2b3F1ZXMgcGx1cyBoYXV0LiBQcm9jZGVyICB1biByaXR1ZWwgZGUgbGEgU2FpbnQgSmVhbiwgYyBmYWlyZSBwcmV1dmUgZGUgZHZvdGlvbiBldCBkIExhIG1hZ2llIHMgYXV4IHZlcnR1cyBjdXJhdGl2ZXMgZGUgcGxhbnRlcyBxdSBjb25uYXQgcGx1cyBvdSBtb2lucyBlbXBpcmlxdWVtZW50LCBsZSB0b3V0IHN1ciBmb25kIGQgYXV4IGRpdmluaXRzLiAKQXMgYXBwcm92ZWQgaW4gdGhlIGJhbGxvdCBpc3N1ZSwgZ3Jvc3MgY2FzaW5vIHJldmVudWVzIHdpbGwgYmUgdGF4ZWQgYXQgMzMgcGVyY2VudCwgb25lIG9mIHRoZSBoaWdoZXN0IHJhdGVzIGluIHRoZSBuYXRpb24gZm9yIGEgcmVzb3J0IGNhc2lubyB3aXRoIHRoaXMgbGV2ZWwgb2YgaW52ZXN0bWVudC4uIApNaXNlICBqb3VyIGR1IDIyIGZ2cmllciAyMDE5SmUgbmUgcmVncmV0dGUgcGFzIGQnYXZvaXIgdW4gcGV1IGJydXNxdSBTZXJnZSBSYWRlciBsZSBwaGFybWFjaWVuICBsJ29yaWdpbmUgZCd1bmUgZG5vbmNpYXRpb24gZHUgY29udGVudSBtZXJkaXF1ZSBkZXMgdmFjY2lucyBldCBlbiBwYXJ0aWN1bGllciBkZXMgMTEgcXVpIHNvbnQgZGV2ZW51cyBvYmxpZ2F0b2lyZXMgcG91ciBsZXMgbm91cnJpc3NvbnMuIApUaGUgc3RvcnkgaXMgZmFudGFzdGljLCBhbmQgZmlsbHMgaW4gYSBsb3Qgb2YgdGhlIGdhcHMgYmV0d2VlbiBTVDUgNiwgYmVmb3JlIHRoZSBLaGl0b21lciBhY2NvcmRzLiAKWW91ciB2aWRlb3MgdGVuZCB0byBmb2N1cyBvbiAiaG93IHRvIHBsYXkgcG9rZXIgY29ycmVjdGx5IiwgdXN1YWxseSBtZWFuaW5nIHRoZSBvcHRpbWFsIGJhbGFuY2Ugb2YgYmx1ZmZzIGFuZCB2YWx1ZSBiZXRzIHNvIHlvdXIgb3Bwb25lbnQgY2FuIGV4cGxvaXQgeW91LiBBIGxvdCBvZiB0aGUgcmVhbGx5IGludGVyZXN0aW5nIHNoaXQgeW91IHNhaWQgaXMgaW4gd2hpY2ggaGFuZHMgdG8gdXNlIGluIHdoaWNoIHJhbmdlcyBhbmQgZ2V0dGluZyBpbnRvIHRoZSBkZXRhaWxzIG9mIHdoYXQgdGhvc2Ugb3B0aW1hbCByYW5nZXMgbG9vayBsaWtlLiAKR3JlZW5ob3VzZSBvd25lciBhbmQgbWFzc2FnZSB0aGVyYXBpc3Qgc2V4dWFsbHkgYXNzYXVsdGVkIHdvbWFuCk1pY2hpZ2FuJ3MgY2hhcml0eSBnYW1pbmcgaW5kdXN0cnkgZ3JldyBmcm9tIGxlc3MgdGhhbiAkOCBtaWxsaW9uIGluIGNoaXAgc2FsZXMgaW4gZmlzY2FsIHllYXIgMjAwNCB0byBtb3JlIHRoYW4gJDE5NyBtaWxsaW9uIGluIGZpc2NhbCB5ZWFyIDIwMTEuIApJZiB5b3UgYyBiZXQgbGFyZ2VyIE9URiwgaXQgbWFrZXMgZ2l2aW5nIHVwIG9uIHRoZSB0dXJuIG1vcmUgZXhwZW5zaXZlLiAKVGhlIGJpc2hvcCBzdW1tb25lZCBoZXIgdG8gYmUganVkZ2VkLCBidXQgY291bGRuJ3QgcmVzaXN0IGhlciBiZWF1dHkuIFNoZSBhc2tlZCBoaW0gdG8gcHV0IGFuIGVuZCB0byBoZXIgbGlmZTYsIHlldCB0aGUgYmlzaG9wIHJlZnVzZWQgdG8gY29uZGVtbiBoZXIuIApHZW9yZ2UgTmV3cyJJZiB3YXRlciBpcyBwcm92aWRlZCB0aGVuIHRoZSBwcm9qZWN0IGNhbiBnbyB0aHJvdWdoLCIgUm9iYiBzYWlkLiAKRnVydGhlcm1vcmUsIGlmIGJpYXMgaXMgc29tZXRoaW5nIHRoYXQgYWxsb3dzIGEgY29uc2Npb3VzIG9ic2VydmVyIHRvIGltbWVkaWF0ZWx5IGRpc21pc3MgYW4gYXJ0aWNsZSwgbGl0ZXJhbGx5IGV2ZXJ5dGhpbmcgU2hhcGlybyBoYXMgZXZlciB0b3VjaGVkIGlzIGltbWVkaWF0ZWx5IGRpc21pc3NpYmxlLi4gCktleSB0byBzdWNjZXNzIHdhcyB0aW1pbmcgYW5kIGRhbWFnZWNvbnRyb2wgaW4gYm90aCBwaGFzZXMuIEJvdGggVFQgd2VyZSBwb3dlcmZ1bCBlbm91Z2ggdG8gMiB0dXJuIHRoZSBhZGRzLiBXaXRoIFNvbGVpbHMgU1BSIGRlYnVmZiwgdGhleSBjYW1lIGNsb3NlIHRvIDkwJSBhZGQgbGlmZSBpbiBvbmUgdHVybiB3aXRoIHdhcyBraW5kIGEgbHVja3kgYmVjYXVzZSBpZiBtYWdpY2FsIGFjdGl2YXRpb24gcnVucyBvdXQgdW5wbGFubmVkLCB5b3UgY2FuIGtpbGwgdGhlIGFkZHMgd2l0aCBhIG5vcm1hbCBjaGFvcyB3YXZlLi4gCkJ1dCBob3cgQ3JvZnR5IGFkZHJlc3NlZCBpdCBpcyBob3cgaXQgc3RpbGwgd29ya2luZyBiZWhpbmQgdGhlIHNjZW5lcyBhbmQgaXMgaW5mb3JtYXRpb24gbWFueSB2aWV3ZXJzIHdhbnQgdG8ga25vdy4gSXQganVzdCBnb2luZyB0byBoYXBwZW4gdGhhdCBjb21tZW50YXRvcnMgd2lsbCBkaXNjdXNzIHdoYXQgZWFjaCBjb2xvciByZXByZXNlbnRzIGluIHRoZSBvbGQgbmFtZSBzeXN0ZW0gdnMgdGhlIEMxIDUgYW5kIHZzIHRoZSBuZXcgYWJicmV2aWF0ZWQgc3lzdGVtLiBIb3cgbWFueSByYWNlcyBpbnRvIHRoZSBzZWFzb24gdGhleSBkbyB0aGF0IGZvciBhbmQgaG93IHRoZXkgZ28gYWJvdXQgaXQgaXMgdG8gYmUgc2VlbiwgYnV0IHRoZSBudW1iZXIgb2YgZmFjdG9ycyB0aGF0IG5lZWQgdG8gYmUgYWRkcmVzc2VkIHRvIGV4cGxhaW4gdGhlIHRpcmUgc3lzdGVtIGZvciB0aGlzIHllYXIgZG8gbWFrZSBpdCBtb3JlIGNvbXBsZXggdG8gZXhwbGFpbi4gCkkgdGhpbmsgdGhhdCdzIGEgYmVhdXRpZnVsIHRoaW5nLi4gCkFuZCBNcnMuIEpvaG4gVyBHcmltIGFuZCBhbmQgZmZsbWlsIHJlY2VudGwgZGF1Z2h0ZXIsIFJ1dGgsIExvbmcgTGV2ZWwsIHdlcmUgdmlzaXRvcnMgaGVyZSwgRnJpZGF5IGFuZCBTYXR1cmRheS4gCkdldCByZWRkaXQgcHJlbWl1bVVzZXJzIG1heSBwb3N0IFRXSUNFIGV2ZXJ5IGRheS4gSWYgeW91IGhhdmUgbXVsdGlwbGUgc2NyZWVuc2hvdHMgdGhhdCB5b3UgbGlrZSB0byBzaGFyZSBpbiBhIGRheSwgbWFrZSBhbiBhbGJ1bS4gQWxidW1zIG9ubHkgY291bnQgYXMgb25lIHBvc3QuIApXaWxzb24gV2VyZSBhbmQgY29sbGVhZ3VlcyBleHBsYWluIHdoeSB0aGUgZ2xvYmFsIGNvbW11bml0eSBzaG91bGQgY29udGludWUgdG8gaW52ZXN0IGluIGNoaWxkcmVuJ3MgaGVhbHRoLCB0byBjb21wbGV0ZSB0aGUgdW5maW5pc2hlZCBjaGlsZCBzdXJ2aXZhbCBhZ2VuZGEgYW5kIHRhY2tsZSB0aGUgZW1lcmdpbmcgY2hpbGQgaGVhbHRoIHByaW9yaXRpZXNSZWFsaXNpbmcgdGhlIGhlYWx0aCBhbmQgd2VsbGJlaW5nIG9mIGFkb2xlc2NlbnRzCld5bm4gc3Bva2VzbWFuLCBSYWxwaCBGcmFtbW9saW5vLCBkaWQgbm90IGltbWVkaWF0ZWx5IHJlc3BvbmQgdG8gYW4gZW1haWxlZCByZXF1ZXN0IGZvciBjb21tZW50LgpTb21lIHBvc2l0aW9ucyByZXF1aXJlIGEgbWFzdGVyJ3MgZGVncmVlIGluIGluZHVzdHJpYWwgaHlnaWVuZSBvciBoZWFsdGggcGh5c2ljcy4gTWFueSBlbXBsb3llcnMgcHJlZmVyIGFwcGxpY2FudHMgd2hvIGhhdmUgZ29uZSB0aHJvdWdoIGludGVybnNoaXBzLiAKTGlrZSB0aGUgZmxvcCBiZXQsIGNhbiBwcm9iIHNpemUgdXAgYSBiaXQgdG8gcG90LiAKRG9uIGZvY3VzIG9uIGN1cHBpbmcgeW91ciB3cmlzdCBvciBhbnl0aGluZywgaXRzIGtpbmQgb2YgbmF0dXJhbC4gTGlrZSBsb29rIGF0IHlvdXIgcGFsbSwgbm93IGdyaXAgbGlrZSB5b3UgaGFkIHlvdXIgaGFuZHMgaW4geW91ciBib3dsaW5nIGJhbGwsIHlvdXIgd3Jpc3Qgc2hvdWxkIG5hdHVyYWxseSBjdXAuIE5vdyBwb3AgeW91ciB3cmlzdCBkaXJlY3RseSB0b3dhcmRzIHlvdXIgZmFjZSBob2xkaW5nIHlvdXIgZ3JpcCBwb3NpdGlvbiwgeW91ciB0aHVtYiBzaG91bGQgc2hvb3Qgb3V0IHdoaWNoIGlzIHdoYXQgaGFwcGVucyBhdCB0aGUgYm90dG9tIG9mIHRoZSBzd2luZy4gCkkgZ28gdG8gYSBXYWwgTWFydCBvciBGYXJtIEtpbmcgb3Igd2hhdGV2ZXIgYW1kIHN0b2NrIHNvbWUgcHJvZHVjdCBvciBwdXQgdXAgc2lnbnMgYW5kIGhhbmdlcnMgZm9yICQxMC9oLiAKRm9ybWVyIG5laWdoYm91cnMgb2YgU3RlcGhlbiBQYWRkb2NrIHRvbGQgdGhlIE9ybGFuZG8gU2VudGluZWwgaGUgd2FzIGFsd2F5cyBmcmllbmRseSwgYW5kIGRlc2NyaWJlZCBoaW1zZWxmIGFzIGEgd29ybGQgdHJhdmVsbGVyIGFuZCAicHJvZmVzc2lvbmFsIGdhbWJsZXIuIgpUbyB0aGUgbW9kIC8gbW9kZXJhdG9ycyB3aG8gYmFubmVkIG1lLCBJIHN0aWxsIGhhdmUgbm8gaWRlYSB3aG8geW91IGFyZS4gU2VyaW91c2x5LiAKSXMgY29udGluZ2VudCBvbiBhcHByb3ZhbCBieSB0aGUgTWljaGlnYW4gR2FtaW5nIENvbnRyb2wgQm9hcmQuUm9jayBHYW1pbmcgb2ZmaWNpYWxzIHNhaWQgdGhleSB3ZXJlICJvcHRpbWlzdGljIiBhYm91dCBnYWluaW5nIGFwcHJvdmFsIGFuZCBwb3NzaWJseSBmaW5hbGl6aW5nIHRoZSBkZWFsIGluIHRoZSBuZXh0IGZldyBtb250aHMuIFRoZXkgZGVjbGluZWQgdG8gZ2l2ZSB0aGUgZG9sbGFyIGFtb3VudCBvZiB0aGVpciBpbnZlc3RtZW50LlRoZXkgaW5kaWNhdGVkIHRoZXkgaGF2ZSBhZGRpdGlvbmFsIHBsYW5zIGZvciBEZXRyb2l0IGFuZCBDbGV2ZWxhbmQsIHdoZXJlIEdpbGJlcnQgZW1wbG95cyBzZXZlcmFsIHRob3VzYW5kIHBlb3BsZSBhbmQgb3ducyBvciBoYXMgYSBtYWpvcml0eSBzdGFrZSBpbiB0aGUgSG9yc2VzaG9lIGNhc2lubywgdGhlIENhdmFsaWVycywgVGhlIFEsIHRoZSAsIGFuZCBWZXJpdGl4LCBhbiBvbmxpbmUgZXZlbnQgdGlja2V0aW5nIGNvbXBhbnksIGFtb25nIG90aGVyIGludmVzdG1lbnRzLiJXZSdyZSBwYXlpbmcgYXR0ZW50aW9uIHRvIG9wcG9ydHVuaXRpZXMgaW4gQ2xldmVsYW5kIGFzIHdlbGwsIiBDdWxsZW4gc2FpZC4gClRoZXJlIHdlcmUgc29tZSB2ZXJ5IGdlbmVyb3VzIGFub255bW91cyBkb25vcnMgdGhhdCBoZWxwZWQgcmFpc2UgZW5vdWdoIHRvIGhhdmUgZXZlcnl0aGluZyBkb25lIGluIHRpbWUuLiAKSGVyZSBhbm90aGVyIGJpdCBJIGhhdmUgaXNzdWUgd2l0aDogIlNwZWFraW5nIG9mIHRoZSBzdGF0ZTogVGhleSBiZWxpZXZlIGl0IGlzIG5lY2Vzc2FyeSB0byBjYXBpdGFsaXNtLiBUaGUgcHJvdGVjdGlvbiBvZiBwcml2YXRlIHByb3BlcnR5IGFuZCBzdXBwcmVzc2lvbiBvZiB3b3JrZXJzIGlzIGNhcnJpZWQgb3V0IHRocm91Z2ggaXQuIApZb3VyIG1pbmQgcmFjZXMgYXQgYWxsIGhvdXJzIHdpdGggY29uY2VybnMgdGhhdCB5b3UgZGlkbid0IGV2ZW4ga25vdyBleGlzdGVkIHNpeCBtb250aHMgYWdvLiBBcyB5b3VyIHByZWduYW5jeSBwcm9ncmVzc2VzLCB5b3VyIG5ld2ZvdW5kIG1lbnRhbCB1bnJlc3QgaXMgYWNjb21wYW5pZWQgYnkgcmFuZG9tIGFjaGVzIGFuZCBwYWlucyBicm91Z2h0IG9uIGJ5IHN1Y2ggc3RyZW51b3VzIGFjdGl2aXRpZXMgYXMgc2l0dGluZyBvciBzdGFuZGluZywgYW5kIHlvdSdyZSB3YWtpbmcgdXAgMTcgdGltZXMgYSBuaWdodCB0byBjb21wbGV0ZSBhbiBlbGFib3JhdGUgc2VyaWVzIG9mIG1hbmV1dmVycyBvbmNlIGtub3duIHNpbXBseSBhcyAidHVybmluZyBvdmVyLiIuIApUaGFuayB5b3UgdmVyeSBtdWNoLiBZb3Uga25vdywgaSBzYXQgaGVyZSBhbmQgaSBsaXN0ZW5lZCB0byBhbGwgb2YgdGhpcyBhbmQgaXQgdmVyeSBwYWluZnVsLiBJdCB2ZXJ5IHBhaW5mdWwuIFlvdSBtYWRlIGEgbG90IG9mIG1pc3Rha2VzLCBtci4gQ29oZW4sIGFuZCB5b3UgYWRtaXR0ZWQgdGhhdC4gWW91IGtub3csIG9uZSBvZiB0aGUgc2FkZGVzdCBwYXJ0cyBvZiB0aGlzIHdob2xlIHRoaW5nIGlzIHRoYXQgc29tZSB2ZXJ5IGlubm9jZW50IHBlb3BsZSBhcmUgaHVydGluZywgdG9vLCBhbmQgeW91IGFja25vd2xlZGdlIHRoYXQuIApBcnJpdmluZyB2aXNpdG9ycyBpbnRvIExpc2JvbiBoYXZlIHNldmVyYWwgZ3JvdW5kIHRyYW5zcG9ydGF0aW9uIG9wdGlvbnMgaW50byB0aGUgY2l0eSwgaW5jbHVkaW5nIHRheGlzLCBob3RlbCBzaHV0dGxlcywgQ2FycmlzIGNpdHkgYnVzZXMgYW5kIHRoZSB1bmRlcmdyb3VuZCByYWlsIGxpbmUsIExpc2JvbiBNZXRybyBmcm9tIHRoZSBNZXRybyBkZSBMaXNib2Egc3RhdGlvbiBpbiBUZXJtaW5hbCAxLiAKV2VpaG5hY2h0c2xpZWRlciBzaW5kIGF1Y2ggYXVmIGRpZXNlbSBiZXNvbmRlcmVuIEFubGFzcyBnZXN1bmdlbiwgZGEgZXMgZWluIFRlaWwgZGVyIHRyYWRpdGlvbmVsbGVuIFplcmVtb25pZSB2b24gV2VpaG5hY2h0ZW4uLiAKU2VhcmNoIGZvcjpHYW1ibGluZyBBZGRpY3Rpb24gYW5kIFByb2JsZW0gR2FtYmxpbmdIb3cgdG8gU3RvcCBHYW1ibGluZyBhbmQgUmVnYWluIENvbnRyb2wgb2YgWW91ciBMaWZlIEl0IGNhbiBoYXBwZW4gdG8gYW55b25lIGZyb20gYW55IHdhbGsgb2YgbGlmZTogWW91ciBnYW1ibGluZyBnb2VzIGZyb20gYSBmdW4sIGhhcm1sZXNzIGRpdmVyc2lvbiB0byBhbiB1bmhlYWx0aHkgb2JzZXNzaW9uIHdpdGggc2VyaW91cyBjb25zZXF1ZW5jZXMuIFdoZXRoZXIgeW91IGJldCBvbiBzcG9ydHMsIHNjcmF0Y2ggY2FyZHMsIHJvdWxldHRlLCBwb2tlciwgb3Igc2xvdHMgaW4gYSBjYXNpbm8sIGF0IHRoZSB0cmFjaywgb3Igb25saW5lIGEgZ2FtYmxpbmcgcHJvYmxlbSBjYW4gc3RyYWluIHlvdXIgcmVsYXRpb25zaGlwcywgaW50ZXJmZXJlIHdpdGggd29yaywgYW5kIGxlYWQgdG8gZmluYW5jaWFsIGRpc2FzdGVyLiAKVGhlIHByYWN0aWNlIHNlZW1zIHRvIGhhdmUgb3JpZ2luYXRlZCBpbiBBc2lhLiAKU2FkbHkgdGhpcyBpc24gZXZlbiBhIGV4cGVyaWVuY2UgZnJvbSBhIEFtZXJpY2FuIHNjaG9vbCBidXQgYWN0dWFsbHkgYSB0aGlyZCB3b3JsZCBjb3VudHJ5IGlmIHlvdSBjaGVjayBvcHMgY29tbWVudHMuIEkgbm90IGRpc2FncmVlaW5nIG15IHNjaG9vbCBhcmVuIGhhcnNoIG9uIGRvcm1zIGJ1dCBJIG5ldmVyIGhhZCB0aGlzIHByb2JsZW0gd2hlbiBJIHdhcyBjYXVnaHQgYXQgbXkgY29sbGVnZSBkb3JtIHdpdGggcG90LCBJIGFjdHVhbGx5IGVuZGVkIHVwIG9uIGxpa2UgYmFzaWNhbGx5IGEgcHJvYmF0aW9uIGJ1dCBmb3IgbXkgY29sbGVnZSwgbm90IHdpdGggbGF3IGVuZm9yY2VtZW50LiAKRURJVDogV2hlbiB0aGUgZWNvbm9taWMgbGllcyBvZiBQcm9qZWN0IEZlYXIgYXJlIHBvaW50ZWQgb3V0LCByZXNwb25kIGJ5IHNheWluZyBpdCBiZWNhdXNlICJCcmV4aXQgaGFzbiBoYXBwZW5lZCB5ZXQiLiBUaHVzIGRpc2hvbmVzdGx5IHByZXRlbmRpbmcgdGhhdCB0aGUgVHJlYXN1cnkgc3BlY2lmaWMgZm9yZWNhc3RzIGZvciB0aGUgeWVhcnMgMjAxNiwgMjAxNyBhbmQgMjAxOCwgYW5kIHdoaWNoIHdlcmUgZXhwbGljaXRseSBiYXNlZCBvbmx5IG9uIGEgTGVhdmUgdm90ZSwgcmF0aGVyIHRoYW4gYWN0dWFsIEJyZXhpdCwgY2FuIGJlIHBvc3QgZGF0ZWQgdG8gYW55IHBvaW50IGFmdGVyd2FyZHMuIApGb3VuZGVkIG1vcmUgdGhhbiA0MCB5ZWFycyBhZ28sIEdvbGQncyBHeW0gaGFzIG1vcmUgdGhhbiA2MDAgbG9jYXRpb25zIGFjcm9zcyB0aGUgd29ybGQuIFRoZWlyIGRlZmluaXRpb24gb2YgZml0bmVzcyBleHBlcmllbmNlIGlzIGEgY29tYmluYXRpb24gb2YgdGhlIGJlc3QgYW1lbml0aWVzIGFuZCBwZXJzb25hbCB0cmFpbmluZy4gR29sZCdzIGd5bSBob3VzZXMgdGhlIGxhdGVzdCBjYXJkaW8gYW5kIHN0cmVuZ3RoIHRyYWluaW5nIGVxdWlwbWVudCBhbmQgb2ZmZXJzIGV4ZXJjaXNlIHByb2dyYW1zIGluY2x1ZGluZyB5b2dhLCBncm91cCBjeWNsaW5nLCBtaXhlZCBtYXJ0aWFsIGFydHMsIG11c2NsZSBlbmR1cmFuY2UgdHJhaW5pbmcsIGFuZCBQaWxhdGVzLiAKVGhlIENvdXJ0IGRlY2xpbmVkIHRvIGlzc3VlIGFuIGFkdmlzb3J5IG9waW5pb24gb24gdGhlIHF1ZXN0aW9uIHRoYXQgcHV0IHRoaXMgYWxsIGluIHBsYXkgd2hldGhlciB0aGUgb3JpZ2luYWwgYmFsbG90IHRpdGxlIHdhcyBzdWZmaWNpZW50LiBUaGUgQ291cnQgc2FpZCBpbiBhIHNlcGFyYXRlIG9waW5pb24gdGhhdCB0aGF0IGlzc3VlIGJlY2FtZSBtb290IHdoZW4gTWFydGluIGNlcnRpZmllZCB0aGUgYW1lbmRlZCBwcm9wb3NhbC4KQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCBVc2VyIEdlbmVyYXRlZCBDb250ZW50IGd1aWRlbGluZXMgaXMgYXZhaWxhYmxlIGluIHRoZSBQb3N0aW5nIFBvbGljeS4KIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29UaGUgcHJvYmxlbSB3aXRoIHByb3AgNDcgaXMgaXQgb25seSBhIGZpcnN0IHN0ZXAuIFByb3AgNDcgaXMgb25seSB0cmVhdGluZyBhIHBhcnQgb2YgYSBzeW1wdG9tIG5vdCB0aGUgcm9vdC4gClRocmVlIENhcmQgUG9rZXIgVGhpcyBpc24ndCBsaWtlIHBva2VyIGluIHRoZSB0cmFkaXRpb25hbCBzZW5zZSBpbiB0aGF0IHlvdSBkbyBwbGF5IGFnYWluc3QgdGhlIGhvdXNlIGluIHRoaXMgZ2FtZS4gClBsZW50eSBvZiB3b3JrIGFyb3VuZCwganVzdCBtaWdodCBiZSBhIGJpdCBoYXJkZXIgdG8gZmluZC4gClRoZSBlbnZpcm9ubWVudCB0aGUgc3BvcnQgaXMgYmVpbmcgcGxheWVkIGluIGhhcyB0byBiZSBmdWxseSBjaGVja2VkIGJlZm9yZSBhIGdhbWUgb3IgdHJhaW5pbmcgYmVnaW5zLiAKVGhlIHJvb21zIGFyZSBrZXB0IHdhcm0gICB0aGUgc2VwYXJhdGUgc3BhIGFyZWEgdXBzdGFpcnMsIGFuZCBEb3VpbGxhcmQncyBvZmZpY2UgYW5kIHJlY2VwdGlvbiBhcmVhICh3aGVyZSB5b3UgY2FuIGJ1eSBzcGVjaWFsIGRldG94IGZvb2RzLCBoZXJicyBhbmQgYm9va3MpIGRvd25zdGFpcnMuLiAKVGhpcyBtZXNzYWdlIG9mIHRlZW4gc2V4dWFsaXR5ICAgaWYgbm90IHByb21pc2N1aXR5ICAgaGFzIGJlZW4gY2xlYXJseSBlc3RhYmxpc2hlZCBpbiBvdGhlciByZWNlbnQgcHJvZ3JhbW1pbmcuClBvbGljZSBmaW5kIGJhZ3Mgb2YgY2FubmFiaXMgaW4gYmVkcm9vbSBkcmF3ZXIKVGhlIHBvaW50IGlzLCBCbGl6emFyZCBsZWFkIHVzIHRvIGJlbGlldmUgdGhhdCB0aGUgZ2FtZSB3b3VsZCBjb250aW51ZSB3aXRoIHRoZSBzdXBwb3J0LCBldmVudHMsIGV0YyB0aGF0IHdlIGhhZCBjb21lIHRvIGV4cGVjdCwgd2hpY2ggbGVhZCB0byBwZW9wbGUgYnV5aW5nIHRoZSBib29zdC4gCkluc3RlYWQgb2YgdGVsbGluZyB0aGVpciBraWRzIG9mZiBmb3Igc3ByZWFkaW5nIHJ1bW91cnMgdGhleSBhY3R1YWxseSBlbmNvdXJhZ2luZyB0aGVpciBidWxseWluZy4gClRoZSBCYXJyYWN1ZGFzIGFyZSB1bmRlZmVhdGVkIGF0IGxsIE8gTywgd2l0aCB0aGVpciBjbG9zZXN0IHRocmVhdCBiZWluZyB0aGUgT2tvdG9rcyBJY2Ugc2l0dGluZyBhdCA4IDMgMC4gVGhlIEJhcnJhY3VkYXMgc3RhcnRlZCBvdXQgbGFzdCB3ZWVrIGJ5IGNoYWxsZW5naW5nIHRoZSBNZWRpY2luZSBIYXQgU3VuIERldmlscyBmb3IgYSAxMiA3IHdpbi4gClBvc3R1cmFsIGluc3RhYmlsaXR5IChQSSkgaXMgYW4gaW1wb3J0YW50IHJpc2sgZmFjdG9yIGZvciBmYWxscywgZXNwZWNpYWxseSBpbiB0aGUgZnJhaWwgb2xkZXIgcG9wdWxhdGlvbi4gSW4gdGhpcyBzdHVkeSwgd2UgaW52ZXN0aWdhdGVkIHRoZSBpbXBhY3Qgb2Ygdml0YW1pbiBEIGRlZmljaWVuY3kgb24gUEkgaW4gYSBzYW1wbGUgb2YgY29tbXVuaXR5IGR3ZWxsaW5nIG9sZGVyIHN1YmplY3RzLiAKTGFzdCBJIGNoZWNrZWQgdGhlaXJzIGxlc3MgdGhhbiAyMDBrIHBlb3BsZSBvbiBtaW5pbXVtIHdhZ2UsIG1ham9yaXR5IG9mIHdoaWNoIGFyZSB3YWl0IHN0YWZmLiBXaG9tIG1ha2UgdGlwcyBvciBtaW5vcnMgd29ya2luZyBwYXJ0IHRpbWUuClVzaW5nIGEgRE5BIHRlc3QgdG8gbGF5IGNsYWltIHRvIGFueSBjb25uZWN0aW9uIHRvIHRoZSBDaGVyb2tlZSBOYXRpb24gb3IgYW55IHRyaWJhbCBuYXRpb24sIGV2ZW4gdmFndWVseSwgaXMgaW5hcHByb3ByaWF0ZSBhbmQgd3JvbmcuIEl0IG1ha2VzIGEgbW9ja2VyeSBvdXQgb2YgRE5BIHRlc3RzIGFuZCBpdHMgbGVnaXRpbWF0ZSB1c2VzIHdoaWxlIGFsc28gZGlzaG9ub3JpbmcgbGVnaXRpbWF0ZSB0cmliYWwgZ292ZXJubWVudHMgYW5kIHRoZWlyIGNpdGl6ZW5zLCB3aG9zZSBhbmNlc3RvcnMgYXJlIHdlbGwgZG9jdW1lbnRlZCBhbmQgd2hvc2UgaGVyaXRhZ2UgaXMgcHJvdmUuIFNlbmF0b3IgV2FycmVuIGlzIHVuZGVybWluaW5nIHRyaWJhbCBpbnRlcmVzdHMgd2l0aCBoZXIgY29udGludWVkIGNsYWltcyBvZiB0cmliYWwgaGVyaXRhZ2UuLiAKR292ZXJubWVudCBzcGVuZGluZywgYW4gdW51c3VhbGx5IGxhcmdlIGFjY3VtdWxhdGlvbiBvZiBpbnZlbnRvcmllcywgYW5kIGhvdXNlaG9sZCBleHBlbmRpdHVyZXMgYmFyZWx5IG91dHdlaWdoZWQgYSBiaWcgZHJvcCBpbiBpbnZlc3RtZW50LCBhdm9pZGluZyBhIGNvbnRyYWN0aW9uLiBPdmVyYWxsLCBHRFAgZXhwYW5kZWQgMS44IHBlciBjZW50IGxhc3QgeWVhciwgY29tcGFyZWQgd2l0aCB0aHJlZSBwZXIgY2VudCBpbiAyMDE3LCB3aGVuIFByaW1lIE1pbmlzdGVyIEp1c3RpbiBUcnVkZWF1IGJvYXN0ZWQgYWJvdXQgbGVhZGluZyB0aGUgc3Ryb25nZXN0IGVjb25vbXkgaW4gdGhlIEdyb3VwIG9mIFNldmVuLiBGb3Igbm93LCBoZSBvdmVyc2VlcyBvbmUgb2YgdGhlIHdlYWtlc3QuLiAKRnJvbSBGYWNlYm9vayBUaGUgYmVzdCB3YXkgdG8gZ2V0IGxvYWRzIG9mIHBva2VyIGNoaXBzIG9uIGZhY2Vib29rIGlzIHRvIGFzayBvdGhlciBwbGF5ZXJzIHRvIGRvbmF0ZSB0aGVpciBjaGlwcyB0byB5b3Ugb3IgYnV5IHRoZW0gZnJvbSB2YXJpb3VzIHNpdGVzIHdoaWNoIG1heSBiZSB1bnRydXN0d29ydGh5LiBPbmUgd2F5IHRvIGdldCBmcmVlIGZhY2Vib29rIHBva2VyIGNoaXBzIHdvdWxkIGJlIHRvLiBXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuIApMZXRzIGFkZCBpbiBzb21lIG5vbiBxdWFudGlmaWFibGUgZmFjdHM6IFRoZSBPVCBhbmQgU1QgZ2V0IGFsbW9zdCBhbGwgdGhlIG1lcmNoYW5kaXNpbmcuIApGb3IgYWxsIHRoZSBwYWluIGFuZCBzdWZmZXJpbmcgdGhhdCBvY2N1cnJlZCBpbiB0aGUgc2VyaWVzLCB0aGluZ3MgZW5kZWQgb24gYSBmaXR0aW5nbHkgcG9zaXRpdmUgbm90ZS4gR29vZCBqb2IsIElCTy4uIAogIEJyaWFuIEJyYWlrZXJBTkEgaGFzIHJ1biBpdHMgIk1hc3RlcnMgb2YgTWFya2V0aW5nIiBjb25mZXJlbmNlIGluIHRoZSBzaGFkb3cgb2YgRGlzbmV5IFdvcmxkIGZvciB5ZWFycywgYnV0IERpc25leSBoYXMgdHlwaWNhbGx5IG5vdCBoYWQgbXVjaCBvZiBhIHByZXNlbmNlIGhlcmUgYXQgdGhlIE9ybGFuZG8gZXZlbnQuIApDYXJkaW5hbDI5ICAzOCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSGUgaW4gYSBwb3NpdGlvbiBvZiBoaWdoIHJlc3BvbnNpYmlsaXR5LCB3ZSB3YW50ZWQgdG8gZW5zdXJlIHRoYXQgYWxsIG9mIG91ciBwcm90b2NvbHMgd2VyZSBjb3ZlcmVkLiBmaXJlIENoaWVmIEplZmYgRGVhbiBoYXMgYmVlbiBhcHBvaW50ZWQgYXMgS2luZ3N2aWxsZSBhY3RpbmcgZmlyZSBjaGllZlNhbnRvcyBzYWlkIHRoZSBtdW5pY2lwYWxpdHkgd2lsbCBiZSBob2xkaW5nIG1vcmUgbWVldGluZ3Mgb24gTW9uZGF5IHRvIGFzc2VzcyB0aGUgc2l0dWF0aW9uIGluIHRlcm1zIG9mIHRoZSBpbXBhY3Qgb24gZW1lcmdlbmN5IHNlcnZpY2VTYW50b3Mgd291bGRuIGNvbW1lbnQgZnVydGhlciBvbiB0aGUgY2FzZSBhZ2FpbnN0IEtpc3NuZXIgZXhjZXB0IHRvIHNheSB0aGUgY29tbXVuaXR5IG11c3Qgbm93IHB1dCBpdHMgZmFpdGggaW4gdGhlIHN5c3RlbW5lZWQgdG8gYWxsb3cgdGhpcyB0byB0YWtlIGl0cyBjb3Vyc2UsIFNhbnRvcyBzYWlkLiAKRXZlcnlvbmUgbmVlZHMgc2hlbHRlciwgYW5kIGV2ZXJ5b25lIG5lZWRzIGNhcmVkIGZvciwgYXQgb25lIHRpbWUgb3IgYW5vdGhlci4uIApUaGlzIG9ubHkgd29ya3MgYXMgYW4gYXJ0aWNsZSBpZiB5b3UgYmVsaWV2ZSBjYXBpdGFsaXNtIHRvIGJlIHBlcmZlY3RseSBtZWV0aW5nIGV2ZXJ5b25lIG5lZWRzIGFuZCBmb3IgdGhhdCB0byBjb250aW51ZSB0byBiZSB0cnVlIGZvciB0aGUgcmVzdCBvZiB0aW1lICAgd2hpY2ggaW5jcmVhc2luZyBudW1iZXJzIG9mIHBlb3BsZSBzZWVtIHRvIGJlIGluIGRpc2FncmVlbWVudCBvZi4KU2VpbmZlbGQgaXNuJ3QgdGhhdCBvbGQuIApFdmVyeSBpbmxheSB0ZWxscyBhIHN0b3J5IGFuZCBldm9rZXMgYSBmZWVsaW5nIG9mIG5vc3RhbGdpYS4uIApSb3NhbGluZCBGcmFua2xpbiBkaWVkIGluIDE5NTggYW5kIHRoZSBOb2JlbCBjb21taXR0ZWUgZG8gbm90IGF3YXJkIHByaXplcyBwb3N0aHVtb3VzbHkuIApBIG1lbW9yaWFsIGhhcyBiZWVuIHNldCB1cCBieSB0aGUgY29tbXVuaXR5IG91dHNpZGUgdGhlIGhvbWUgd2l0aCBiYWxsb29ucywgdGVkZHkgYmVhcnMgYW5kIHNpZ25zLiBUaGUgQnVyZ2VyIEtpbmcgb24gV2VzdCBNYXJrZXQgU3RyZWV0LCB3aGVyZSBtb3RoZXIgQW5uYSBBbmdlbCBoYXMgd29ya2VkIGZvciBzZXZlbiB5ZWFycywgaGFzIHN0YXJ0ZWQgYWNjZXB0aW5nIGRvbmF0aW9ucyBmb3IgZnVuZXJhbCBjb3N0cy4KSW4gYWxsIHByb2JhYmlsaXR5LCB0aGlzIHBhcnRpY3VsYXIgaW5zdGFuY2Ugd2lsbCBiZSBidXJpZWQgaW4gaGlzdG9yeSwgYW5kIGEgcGlsZSBvZiBvdGhlciBpc3N1ZXMgd2l0aCBzZW5zYXRpb25hbCBmcmlsbHMgd2lsbCBjb3ZlciB0aGUgZ3JvdW5kIGZvciBnb29kLiBIb3dldmVyLCBmb3IgdGhlIGRpc2Nlcm5pbmcgYW5kIHRoZSByaWdodGx5IG1vdGl2YXRlZCB0aGUgc2FnYSBvZiB0aGlzIHJlbWFya2FibGUgYW5kIGRhcmluZyBhdHRhY2sgb24gdGhlIHBlcnNvbiBvZiB0aGUgcHJlc2VudCBhcm15IGNoaWVmIHNlcnZlcyBhcyBhbiBleGFtcGxlIG9mIHRoZSBob2xsb3duZXNzIGFuZCBoeXBvY3Jpc3kgb2YgYWxsIHRob3NlIHdobyBoYXZlIG1hZGUgY2FyZWVycyBvdXQgb2YgcG9zaW5nIGFzIHdlbGwgd2lzaGVycyBvZiB0aGUgYXJteS4gVGhlIHBhaW5zIHRoYXQgdGhleSB0YWtlIGluIGRlZmVuZGluZyBHZW4gKHIpIFBlcnZleiBNdXNoYXJyYWYgb3IgdGhlc2UgZGF5cyBpbiBwcm9tb3RpbmcgR2VuIChyKSBSYWhlZWwgU2hhcmlmIHdlcmUgdG90YWxseSBtaXNzaW5nIGZyb20gdGhlaXIgbXVjaCBzdG9yaWVkIHNlbnNlIG9mIGR1dHkgdG8gcHJvdGVjdCB0aGUgaG9ub3VyIG9mIHRoZSBhcm1lZCBmb3JjZXMuCkkgc3RpbGwgaGF2ZSB0byB3YXRjaCB0aGUgcmVwbGF5IGJ1dCBhcyBhIGZlbGxvdyBpbnZva2VyIHNwYW1tZXIgSSBjYW4gdGVsbCB5b3UgdGhhdCBBRlRFUiBsYXRlc3QgY2hhbmdlcyBvbiB2aXBlciBpcyByZWFsbHkgaGFyZCBmb3IgeW91IHRvIHdpbiB0aGUgbGFuZSBTT0xPIGlmIHRoZSB2aXBlciBpcyBhdCBsZWFzdCBhcyBnb29kIGFzIHlvdS4gQ29uc2lkZXJpbmcgeW91IGhhdmUgdG8gYmUgcmVhbGx5IGdvb2QgYW5kIHJlbHkgb24gaGlzIG1pc3Rha2VzIHRvIGJlIGFibGUgdG8gZmFybSBiZXR0ZXIgYW5kIG91dCBsZXZlbCBoaW0gd2l0aG91dCBiZWluZyBsb3cgb24gSFAuLiAKU28gSSBwYXkgZm9yIGludGVybmV0IG9ubHkuIEluc3RlYWQgb2YgdGhlIHN1cHBvc2VkIDYwIG1icHMgZG93biBzcGVlZCBJIHNob3VsZCBiZSBnZXR0aW5nLCBJIGdldCBqdXN0IGEgbGl0dGxlIGxlc3MgdGhhbiAzMCBpbiBub3JtYWwgY2lyY3Vtc3RhbmNlcy4gClRoZSBUaW1lcyBhcnRpY2xlIGNpdGVkIGEgc3R1ZHkgYnkgdGhlIEd1dHRtYWNoZXIgSW5zdGl0dXRlLCBhbiBhYm9ydGlvbiByaWdodHMgcmVzZWFyY2ggZ3JvdXAuIApUaGUgc2Nob29scyBwcmluY2lwYWwgd29uIGhlbHAsIGJ1dCB0aGUgVlAgc3RhcnRzIGVzY29ydGluZyBtZSB0byBhbmQgZnJvbSBjbGFzc2VzLCBzbyBhdCBsZWFzdCB0aGUgeWVsbGluZyBhdCBtZSBzdG9wcyBpbiB0aGUgaGFsbHdheXMuIAoiIFNndC4gCkkgZG9uJ3Qga25vdyBhYm91dCB5b3VyIGVuY291bnRlcnMsIGJ1dCB0aGF0IHNvdW5kcyBsaWtlIGEgYm9zcyBmaWdodCB0byBtZSwgaW4gd2hpY2ggdGhlIHN0YWtlcyBzaG91bGQgYmUgaGlnaC4gSSB3b3VsZCBub3QgcHV0IDQgKG9yIG1vcmUpIGRlYWRseSBtb2JzIGluIHVubGVzcyB0aGF0IHdlcmUgdGhlIGNhc2UuCihJZiB5b3UgZG9uIGtub3csIHRoZSBseW1waCBzeXN0ZW0gaXMgdGhlIHNlY29uZCBsaW5lIG9mIGRlZmVuc2Ugb2Ygb3VyIGJvZGllcyBmb3IgZGVhbGluZyB3aXRoIHBhdGhvZ2VucywgdmlydXNlcywgYmFjdGVyaWEsIGV0Yy4gCldlIGRvbid0IGhhdmUgYSBob3VzZSBjbGVhbmVyIG9yIHlhcmQgc2VydmljZSBhbmQgcmFyZWx5IGVhdCBvdXQsIHNvIGd1ZXNzIHdobyBkb2VzIGFsbCBvZiB0aGF0IG5vdy4gCkkgc3RhcnRlZCBzb21lIHdhdGVyIGJvaWxpbmcgd2l0aCBlZ2dzIGluIHRoZW0gb24gdGhlIHN0b3ZlIHNvIHRoYXQgSSBjb3VsZCBtYWtlIHNvbWUgZGV2aWxlZCBlZ2dzIGZvciBhIHBvdGx1Y2sgSSBiZSBnb2luZyB0byB0aGUgbmV4dCBkYXkuIEkgZG8gdGhlIHN0eWxlIHdoZXJlIHlvdSBib2lsIHRoZSBlZ2dzIGluIGEgY292ZXJlZCBwYW4gZm9yIDE4IG1pbnV0ZXMsIHRoZW4gY29vbCB1bmRlciBzb21lIGNvb2wgd2F0ZXIuIApBZ2UgaXMgdGhlIGZpcnN0IGZhY3RvciBpbiBkZXRlcm1pbmluZyBpZiBzb21ldGhpbmcgaXMgdmludGFnZSwgYW5kIGl0J3MgYWxzbyB0aGUgaGFyZGVzdCB0byBwaW4gZG93bi4gCkFOU1dFUiBJbiBzcGl0ZSBvZiBhbmVjZG90YWwgcmVwb3J0cyBvZiBpbmRpdmlkdWFscyBleHBlcmllbmNpbmcgImV4YWN0bHkiIHRoZSBzYW1lIGRyZWFtLCB0aGVyZSBpcyBubyByZWxpYWJsZSBldmlkZW5jZSB0aGF0IHN1Y2ggc2hhcmVkIGRyZWFtcyBvY2N1ciwgYW5kIGF0IHRoZSBwcmVzZW50IHRpbWUsIHRoZXJlIGlzIG5vIHNjaWVudGlmaWMgb3IgcmF0aW9uYWwgbWV0aG9kIHRvIGNvbmZpcm0gc3VjaCBkcmVhbXMuIAokMzggJDY4LiAKQnJ1Y2UgQnVybmhhbSBmcm9tIFdQVCBMZWFndWUgcmFuIHRoZSBwb2tlciBjb21wZXRpdGlvbiB3aXRoIGVudGh1c2lhc3RpYyBwdW50ZXJzIGFsbCB2eWluZyBmb3IgdGhlIG1ham9yIHByaXplLiBUcnVzdGVlIEphbWllIEJydWNlIHdhcyBkZWxpZ2h0ZWQgd2l0aCB0aGUgc2lnbmlmaWNhbnQgZG9uYXRpb24gbWFkZSB0byB0aGUgVHJ1c3QuIApNeSBleCBkaWQgdGhlIHNhbWUgdGhpbmcsIHR3byBzZXBhcmF0ZSBpbmNpZGVudHMgIEkgZm91bmQgYW5vdGhlciBnaXJsJ3MgdGhvbmcgaW4gaGlzIGJlZHNoZWV0cywgYW5kIHRoZW4gYSBnaXJsIG1lc3NhZ2VkIG1lIGFwb2xvZ2l6aW5nIGZyYW50aWNhbGx5IHRoYXQgc2hlIGRpZG4ndCBrbm93IGhlIHdhcyBpbiBhIHJlbGF0aW9uc2hpcC4gCkxhbWJlcnQgcmFuIGludG8gRHJhZ29ucyBEZW4gcHJvZHVjZXJzIGF0IFRoZSBTaG9wcGluZyBDaGFubmVsIHN0dWRpb3MuIFRoZXkgc3VnZ2VzdGVkIGhlIHBpdGNoIHRoZSBkcmFnb25zLi4gCkJvbiwgcG91cnF1b2kgZXN0IGplIHF1ZSBqZSB2b3VzIHJhY29udGUgdG91dCBhID8gUGFzIHNldWxlbWVudCBwb3VyIHZvdXMgZmFpcmUgc2FsaXZlciAhIFZvdXMgdm91cyByYXBwZWxleiBxdWUgamUgdm91cyBkaXMgZGUgdGVtcHMgZW4gdGVtcHMgcXUnaWwgbmUgZmF1dCBwYXMgYWNjdXNlciBsZSByZXN0YXVyYW50IChvdSBsZXMgdmFjYW5jZXMgZ2FzdHJvbm9taXF1ZXMpIGRlIGZhaXJlIGdyb3NzaXIuIApXaGlsZSB5ZXMsIHRoZSBnZW5vY2lkZSB3YXMgYSBtaWxpdGFyeSBvcGVyYXRpb24sIG5vdCBjaXZpbGlhbiwgQVNTSyBjb3VsZCBoYXZlIHB1YmxpY2FsbHkgY29uZGVtbmVkIGl0LiBJbnN0ZWFkIHNoZSBzdHVjayB0byB0aGUgb2ZmaWNpYWwgbmFycmF0aXZlIGFuZCBkZW5pZWQgdGhlIHdob2xlIHRoaW5nLiAKTHVtb3Nfbm94aW91cyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJIExPVkVEIHRoZSBtYXRjaCBsYXN0IG5pZ2h0LiAKVGhlIHN1cnZleSBpcyBmcm9tIHRoZSBBbWVyaWNhbiBTb2NpZXR5IG9mIEFlc3RoZXRpYyBQbGFzdGljIFN1cmdlcnksIGFuIG9yZ2FuaXphdGlvbiB0aGF0IGNlcnRpZmllcyBjb3NtZXRpYyBzdXJnZW9ucy4gCk9mZmljZXIgd2hvIHdpdGggZG96ZW5zIG9mIG90aGVyIHNvbGRpZXJzIGVzY2FwZWQgR2VybWFueSBhZnRlciBXb3JsZCBXYXIgSUksIGpvaW5lZCB0aGUgRnJlbmNoIEZvcmVpZ24gTGVnaW9uLCBhbmQgc3BlbnQgeWVhcnMgaW4gVmlldG5hbSBicnV0YWxpemluZyB0aGUgaW5zdXJnZW5jeS4gCkRpZCB0aGV5IGZhaWwgYmVjYXVzZSB0aGUgY29tcGFuaWVzIHdlcmUgb2Z0ZW4gcnVuIGJ5IGtpZHM/IE5vcGUuIApMb3MgbW9jaGVzIHNvbiB1bmEgZmFudGFzYSBkZWwgcGVqZSwgbm8gc2UgcHVlZGUgaW52ZXN0aWdhciBuYWRhIHBvcnF1ZSBlc2EgcHJjdGljYSBkZSBhc2lnbmFjaW4gZGUgcmVjdXJzb3MgZXN0IGRlbnRybyBkZSBsYSBsZXkgeSBzZSBoaXpvLCBhIG1lbm9zIHd1ZSBzZSBwcmVzZW50ZW4gcHJ1ZWJhcyBkZSBxdWUgbm8sIGRlbnRybyBkZSBsb3MgcHJvY2VkaW1pZW50b3MgZXN0YWJsZWNpZG9zLiBMYSBuaWNhIGNydGljYSBsZWdpdGltYSBxdWUgc2UgcHVlZGUgaGFjZXIgZXMgcXVlIHNlIHByb3BpY2lhYmEgYWxnbyBwYXJlY2lkbyBhIGxhIGNvbXByYSBkZSB2b3RvcyBwZXJvIGEgbml2ZWwgY29uZ3Jlc28sIHBlcm8gbm8gcG9yIGRpc2VvLCBlcyB0cmFiYWpvIGRlIGxvcyBsZWdpc2xhZG9yZXMgcHJvbW92ZXIgZWwgZGVzYXJyb2xsbyBkZSBzdXMgZGlzdHJpdG9zIHkgZXN0YWRvcywgc2kgZmFsdGFiYSByZWdsYW1lbnRhY2luIHB1ZXMgaGF5IHF1ZSBoYWNlcmxhIG5vIGN1bHBhciBhIGxvcyBxdWUgaGFjaWFuIHN1IHRyYWJham8uIEFsIGlndWFsIHF1ZSBBbmF5YSB0b2RvcyBsb3MgcHJlc2lkZW50ZXMgZGUgcGFydGlkb3MgaW5jbHVpZG8gTW9yZW5hIHBhcnRpY2lwYWJhbiBlbiBsYSBwcmN0aWNhIGRlIG5lZ29jaWFyIHZvdG9zIGNvbiBwcmVzdXB1ZXN0byAoY29tbyBsbyBzaWd1ZW4gaGFjaWVuZG8gaG95IG1pc21vKSBwZXJvIEFuYXlhIChuaSBuaW5ndW4gb3RybyBkZSBsb3MgZGlyaWdlbnRlcykgbm8gZXJhIHF1aW4gYXNpZ25hYmEgZWwgcHJlc3VwdWVzdG8gbmkgc3VwZXJ2aXNhYmEgbGEgZWplY3VjaW4gZGUgbGFzIG9icmFzLCBlc28gZXMgY29zYSBkZWwgZ29iaWVybm8gZmVkZXJhbC4gClRoZSBncmVhdGVzdCBjcml0aWNpc20gaXNuIHRoYXQgY29udmluY2luZyB0aGUgd2VpZ2h0ZWQgNTElIG9mIGluZGl2aWR1YWwgdG9rZW4gaG9sZGVycyB0byBwYXJ0IHdpdGggdGhlaXIgY29pbnMgICBpdCB0aGF0IGFueSBzaW5nbGUgZW50aXR5IGNhbiBjb250cm9sIG11bHRpcGxlIGFkZHJlc3NlcywgYW5kIHRodXMgaW5kaXZpZHVhbHMgY2FuIHRoaW5rIHRoZXJlIG5vIGNoYW5nZSBpbiB0aGUgZGlzdHJpYnV0aW9uIG9mIGNvaW5zIHdoZW4gdGhleSBzZWxsIHRoZW0sIHdoaWxlIHJlYWxseSB0aGV5IGxldHRpbmcgb25lIGVudGl0eSBzbG93bHkgYWNxdWlyZSB0aGUgbWFqb3JpdHkuLiAKQXQgbWlsZSAxMCwgSSB3YXMgYmVhdCBidXQgSSBrbmV3IEkgbmVlZGVkIHRvIHBpY2sgdXAgbXkgcGFjZS4gSSBzdGFydGVkIHRvIHB1c2ggYW5kIGJlZ2FuIHRvIHBhc3MgcGVvcGxlIHdobyB3ZXJlIGFoZWFkIG9mIG1lLiBBdCBtaWxlIDExLCBJIGZlbHQgbGlrZSBJIGhhZCBubyBnYXMgbGVmdCBpbiB0aGUgdGFuayBidXQgSSB0cmllZCB0byBwaWNrIHVwIG15IHBhY2Ugc3RpbGwsIHJlbWluZGluZyBteXNlbGYgSSB3YXMgYWxtb3N0IGRvbmUuIE15IGFueGlldHkgY2FtZSBiYWNrIGFuZCBJIGZlbHQgbGlrZSB0aGVyZSB3YXMgbm8gd2F5IEkgY291bGQgZG8gdGhpcyAgIEkganVzdCB3YW50ZWQgdG8gZ2l2ZSB1cC4gTXkgc3RvbWFjaCBodXJ0IGEgdG9uIGFuZCBJIHJlZ3JldHRlZCB0aG9zZSBnZWxzLiBCdXQgSSB0aG91Z2h0IGhvdyBhYnNvbHV0ZWx5IHdpbGRseSBwaXNzZWQgSSdkIGJlIGlmIEkgbWlzc2VkIG15IGdvYWwganVzdCBiZWNhdXNlIG9mIHRoZXNlIGxhc3QgY3J1Y2lhbCBtaWxlcywgc28gSSBqdXN0IHN0YWdnZXJlZCBvbi4gTWlsZSAxMiwgdGhlcmUgd2VyZSBmb2xrcyB3YWl0aW5nIG9uIHRoZSBzaWRlIHRvIGNoZWVyIGFuZCB0ZWxsIHVzICJqdXN0IGtlZXAgZ29pbmchIiBTbyBhcHByZWNpYXRlZC4KSSB1c2VkIHRvIHdvcmsgaW4gYSBzZXJ2aWNlIGRlcHQgYXQgYSBjYXIgZGVhbGVyc2hpcC4gTGFkaWVzIEVTUEVDSUFMTFkgKGJ1dCBldmVyeW9uZSBzaG91bGQgbm90ZSk6IHBsZWFzZSBiZSBhZHZpc2VkIHRoYXQgKG9yIGF0IGxlYXN0IHNvbWUgb2YgdGhlIG1lbiBJIHdvcmtlZCB3aXRoKSB3b3VsZCBwcmV5IHVwb24gdGhpcyBhc3N1bWVkIGlnbm9yYW5jZSBhbmQgd291bGQgdHJ5IHRvIHNlbGwgdGhlbSBzaGl0IHRoZXkgZGlkIG5vdCBuZWVkLiBUYmYsIHRoZXNlIGFzc2hvbGVzIGRpZG4ndCBkaXNjcmltaW5hdGUgYWdhaW5zdCBtZW4gKGlmIHRoZXkgaGFkIGEgZmVlbGluZyB0aGV5IGNvdWxkIHB1bGwgdGhlIHdvb2wgb3ZlciB0aGVpciBleWVzLCB0aGV5J2QgdGFyZ2V0IHRoZW0gdG9vKS4gCkl0IGJlIGdvb2QgaWYgdGhleSB1c2VkIHRoZWlyIG1hbm5lcnMgaW4gYSBzb21ld2hhdCBtb3JlIGNvbnZlbnRpb25hbCBtYW5uZXIsIGJ1dCBpdCBhIGZpbmUgYmFsYW5jZSBvZiBtYW5uZXJzL2NoYXJtIGFnYWluc3QgcHJlIGVtcHRpdmVseSBzdGFuZGluZyB5b3VyIGdyb3VuZCBhbmQgdG8gYmUgaG9uZXN0IGFzIG11Y2ggYXMgaXQgbWF5IHNlZW0gc3RyYW5nZSB0byBzYXkgSSBnbGFkIHRoZXkgcGlja2luZyB0aGUgbWFyayB0aGV5IGFyZS4gU29ycnkgdG8gaGVhciBpdCBhIHN0cnVnZ2xlIGluIHlvdXIgZmFtaWx5LCB0b28uQWxzbywgTm9Tb3VsLCBub3Qgc3VyZSBob3cgb2Z0ZW4geW91IGxvZyBpbiAgIGNoZWNrIHlvdXIgRE1zLnRoZW1hZ2ljZGF2ZSAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgaW1hZ2luZSBhIGxvdWQgYXMgaGVsbCBhaXIgcmFpZCBzaXJlbi4gUHJldmlvdXNseSBoaWRkZW4gQ2hpbmVzZSBmbGFncyBzdGFydCBlbWVyZ2luZyBvbiB0aGUgc3RyZWV0cy4gCkhlIG91dGxhc3RlZCBuZWFybHkgMzAwIG90aGVyIGVudHJhbnRzLCB3aGljaCBpcyBwcmV0dHkgYW1hemluZyB3aGVuIHlvdSB0aGluayBhYm91dCBpdDoKSW4gRklGQSwgeW91IGNhbiBleGVjdXRlIGRpZmZlcmVudCBraW5kcyBvZiBwYXNzZXMgYXMgd2VsbCwgYnV0IHlvdSBub3QgcmVhbGx5IGFjdHVhbGx5IHBoeXNpY2FsbHkgcGFzc2luZyB0aGUgYmFsbC4gClRoZSBTaGVkICAgQSB1bmlxdWUgY3VsdHVyYWwgYW5kIHBlcmZvcm1pbmcgYXJ0cyBjZW50ZXIgYXQgdGhlIHBvaW50IHdoZXJlIEh1ZHNvbiBZYXJkcyBhbmQgdGhlIEhpZ2ggTGluZSBtZWV0LiBUaGUgMjAwLDAwMCBzcXVhcmUgZm9vdCBzdHJ1Y3R1cmUgaXMgd3JhcHBlZCBpbiBhIHRlbGVzY29waW5nIHN0ZWVsIGFuZCBnbGFzcyBzaGVsbCB0aGF0IGNhbiBnbGlkZSBvbiByYWlscyAgIGFuIGlkZWEgaW5zcGlyZWQgYnkgdGhlIEhpZ2ggTGluZSAgIHRvIGRvdWJsZSB0aGUgYnVpbGRpbmcncyBmb290cHJpbnQuIApDYXBpdG9sIG9uIFNlcHRlbWJlciA0LCAyMDEzIGluIFdhc2hpbmd0b24sIERDLiAKTmVlZCBzb21lIHRpbWUgdG8gc3BlbmQgd2l0aCBhIGZyaWVuZCwgaGUgc2FpZC4KSW5kcmEgd2FzIGNsbWJuZyB1cCBvbnRvIHRoZSBsdWdnYWdlIHNoZWxmIGJ1dCB0aGVuIHRoZSBkcnZlciBkZWNkZWQgdG8gbm90IGxldCBoZXIgYnV0IGhlIGRkIGxldCBoZXIgZ2V0IG50byB0aGUgZnJvbnQgc2VhdC4gU28gd2Ugd2VyZSBsZXNzIHNxdXNoZWQgc3RsbCBzdHRuZyB1cHJnaHQgZm9yIHRoZSByZXN0IG9mIHRoZSBuZ2h0LiAKSW4gMTkwMCBSYW5qaXRzaW5oamkgc2NvcmVkIDMsMDY1LCBhdmVyYWdlIDg3LjU3LiAKSSBwbGF5IGJvdGguIEkgZ29vZCBhdCBib3RoIGJ1dCBJIGRvbiBsaWtlIHRoZSB0aW1lIGNvbW1pdG1lbnQgb2YgYSB0b3VybmFtZW50LiBJIHBsYXkgU05HIGFuZCBNVFRzIGFzIHdlbGwuIApMaWtlIHlvdSwgRGFkIHdhcyBhYnVzaXZlICh0b2xkIHRoZSAxMXlyIG9sZCBkYXVnaHRlciAieW91IHNvIGZhdCBjdXogbW9tbXkgZmVlZHMgeW91IGNyYXAuIApUaGUgY2xhcmluZXQgaXMgZWFzeSB0byBnZXQgYSB0dW5lIG91dCBvZiBhbmQgaXMgYSBnb29kIGludHJvZHVjdGlvbiB0byB3b29kd2luZHMgZ2VuZXJhbGx5LiBCdXQgdG8gcGxheSB0aGUgY2xhcmluZXQgd2VsbCwgeW91IG5lZWQgdG8gc3RyZW5ndGhlbiB0aGUgbXVzY2xlcyBhcm91bmQgeW91ciBsaXBzLiAKS3Jpc3RpbmUncyBGaW5uaXNoIEJhY2tncm91bmQ6IFRoZSBGaW5uaXNoIEN1bHR1cmUgaXMgb25lIHRoYXQgYmVsaWV2ZXMgaW4gaGFyZCB3b3JrIGFuZCB0aGUgaGVhbGluZyBwb3dlciBvZiBuYXR1cmUuIApUaGUgcGxheWVyIGlzIHRyeWluZyB0byBjb252ZXkgdW5jZXJ0YWludHkgYWJvdXQgdGhlIGJldC4gQnV0IGlmIGl0IGFjdHVhbGx5IHdlcmUgYSB3ZWFrIGhhbmQsIHRoYXQgb3Bwb25lbnQgd291bGQgZG8gZXZlcnl0aGluZyBwb3NzaWJsZSB0byBkaXNndWlzZSB0aGUgZmFjdC4gCkluIHRoaXMgY2FzZSwgJDEsMDAwIG9mIG1lZGljYWwgZXhwZW5zZXMgd291bGQgcmVzdWx0IGluIGEgcGFsdHJ5ICQyNiBvZiB0YXggc2F2aW5ncyBiZWNhdXNlIG9ubHkgJDEwMCBvZiBleHBlbnNlcyBleGNlZWRzIHRoZSAkOTAwIHRocmVzaG9sZC4uIApJZiB0aGUgc29yZSB0aWdodCBzcG90IGlzIG9uIHRoZSBpbnNpZGUgb2YgdGhlIGNhbGYsIGZpbmdlciAob3IgZm9yZWFybSkgcHJlc3N1cmUgd29ya3Mgd2VsbC4gCkkgZ3Vlc3MgdGhhdCBpcyBhIHZlcnkgZmluZSBsaW5lIGluIG15IG1pbmQuIApEZXNlcnQgRGlhbW9uZCBDYXNpbm8gYnJlYWtzIGdyb3VuZCBuZWFyIHRoZSBHbGVuZGFsZQpXZSB3aWxsZXhwbG9yZSB0aGUgdHlwZSBvZiBob3VzZXMgQW1lcmljYW5zIGxpdmVkIGluLGhvdyB0aGV5IHdlcmUgZnVybmlzaGVkIGFuZCBob3cgdGVjaG5vbG9neWFuZCB3b21lbiByb2xlcyBjaGFuZ2VkIGJvdGguIApUaGVyZSBhIGRldmljZSBjYWxsZWQgYSBqZWFuIGEgbWEgamlnIHRoYXQgaXMgYSBzZXQgb2YgZGlmZmVyZW50IHNpemVkIHNoaW1zLCBzbyBpZiB5b3UgbG9vayBhdCBob3cgcGVvcGxlIHVzZSB0aGF0LCBpdCBleHBsYWluIGl0LiAKUmlnaHQgbm93IGNvbG9yIGNoYW5nZSBvbiB0aGUgdGV4dCB2aWV3IGFuZCBpY29uIGFyZSBub3QgYW5pbWF0ZWQuIFlvdSBjYW4gdXNlIG15IENoYW5nZUltYWdlVGludCBhbmQgQ2hhbmdlQ29sb3IgdG8gYW5pbWF0ZSBib3RoIGljb24gYW5kIHRleHQgY29sb3IgY2hhbmdlcy4gVGhhdCB3YXkgeW91IGNhbiBzdXBwb3J0IHByZSBraXRrYXQgdG9vLiAKVGhleSBoYXZlIHJlYWxpc2VkIHRoYXQgdGhlIHRlYW0ncyBzaGUgaXMgcmVjZWl2aW5nIHN1cHBvcnQgZnJvbSBhcmUgY2F1c2luZyBtb3JlIGRhbWFnZSB0aGFuIGdvb2QgdG8gaGVyIGNoYW5jZXMgb2YgYmVpbmcgQU5DIHByZXNpZGVudC4gU2hlIGlzIHJlZXZhbHVhdGluZyBoZXIgcG9zaXRpb24gYW5kIHBvc3NpYmxlIHRpZXMgd2l0aCB0aGUgWnVtYSBjYW1wLiAKV2l0aGluIHRoZSBTTUUgc2VjdG9yLCB0aGVyZSB3aWxsIGJlIHBhcnRpY3VsYXIgcHJvYmxlbSBzcG90cywgZXNwZWNpYWxseSBmb3IgdGhvc2UgaW4gdGhlIGFncmljdWx0dXJlLCB0cmFuc3BvcnRhdGlvbiBhbmQgZW5lcmd5IGludGVuc2l2ZSBtYW51ZmFjdHVyaW5nIHNlY3RvcnMuIApUaG91Z2ggdGhlaXIgcGh5c2lvbG9neSBpcyBpbmNvbXBhdGlibGUgd2l0aCBob3Qgb3IgY29sZCB3ZWF0aGVyLCB0aGUgZG9ncyBhcmUgbWFkZSB0byBydW4gZHVyaW5nIHRlbXBlcmF0dXJlIGV4dHJlbWVzLiAKVGhhbmtzIHRvIHRoZSBoZWxwZnVsIHdpa2kgb2YgdGhpcyBzdWIgSSBmb3VuZCB0d28gcHJvZHVjdHMgZm9yIG15IGZhY2Ugd2hpY2ggSSBjYW4gYnV5IGluIHRoaXMgY2l0eS4gVGhleSBhcmVuIHRoZSBsaXN0ZWQgcmVjb21tZW5kYXRpb25zLCBzbyBJIHdvdWxkIGxpa2UgYSBtb3JlIGtub3dsZWRnZWFibGUgcGVyc29uIHRvIGdpdmUgdGhlaXIgb3BpbmlvbiBvbiB0aGUgY2hvaWNlcy4gCllvdSdsbCBiZSBmaW5lLiBUYWtpbmcgYSBicmVhayB3b3VsZG4ndCBiZSB0aGUgd29yc3QgdGhpbmcgdGhvdWdoLgpXaGVuIEkgcmVhZCB3aGF0IEkgcmVhZCwgSSB0aG91Z2h0IGl0IHdhcyByaWRpY3Vsb3VzLCBhbmQgaXQgaW5mdXJpYXRlZCBtZSB0aGF0IHNvbWVvbmUgY291bGQgdGFrZSB0aGVpciBjaGlsZCBmb3IgZ3JhbnRlZCBhbmQgbmVlZCBhIG1hdGVyaWFsIHJlbWluZGVyLCBJIGNhbid0IHdyYXAgbXkgaGVhcnQgb3IgbXkgaGVhZCBhcm91bmQgaXQuIEkgY2FuJ3QgdW5kZXJzdGFuZCBob3cgaXQgaGFwcGVucy4gQnV0IEkgY2FuIHVuZGVyc3RhbmQgd2hlcmUgeW91IGFyZSBjb21pbmcgZnJvbS4gCjIuIFNlY29uZCwgd2UgbXVzdCBjb252ZXJ0IHRoZSBlY29ub215IHRvIHBlYWNlZnVsIG1lYW5zLiBJbnRvIHBsb3VnaCBzaGFyZXMgYW5kIGFsbCB0aGF0LiAKVHdvIGZpbmdlcnMgd2VudCBudW1iIGFuZCBpdCBmZWx0IGxpa2Ugc29tZW9uZSB3YXMgc3RhYmJpbmcgbXkgc2hvdWxkZXIgYmxhZGUuIEkgY2FycmllZCBsZXNzIGZvb2QgYW5kIHdlbnQgaW50byBldmVyeSB0b3duIEkgY291bGQuIEkgaGFkIHRvIHN0b3AgdXNpbmcgb25lIHRyZWtraW5nIHBvbGUgYW5kIG91dCB0aGUgYXJtIGluIGEgc2hvcnQgc2xpbmcgZm9yIDIgd2Vla3MuIApNeSB2b2NhYnVsYXJ5IGluIHBvbGl0aWNzL2dvdiBpcyBwcmV0dHkgbGltaXRlZCBzbyBJIGRvIHN0cnVnZ2xlIHRvIGtlZXAgdXAuIApJIHdvdWxkbiBzYXkgQisgaXMgYW4gb3V0cmlnaHQgcG9vciBDaW5lbWFTY29yZSBmb3IgYW55dGhpbmcgc2hvcnQgb2YgaW5zcGlyYXRpb25hbCBvciBmYW1pbHkgZmFyZSwgbW9yZXNvIG1peGVkIGFzIHlvdSBtZW50aW9uZWQuIFJlZ2FyZGxlc3Mgb2YgdGhhdCBxdWliYmxlLCB0aG91Z2gsIEkgZmVlbCBsaWtlIEluY2VwdGlvbiBoZWxkIHNvIHdlbGwgZGVzcGl0ZSBpdHMgQ2luZW1hU2NvcmUgYmVjYXVzZSBpdCBnb3QgcGVvcGxlIHRhbGtpbmcgYWJvdXQgaXRzIHR3aXN0cyBhbmQgdHVybnMgYW5kIGFtYmlndWl0eSBvZiBtZWFuaW5nLiBUaGF0IGJ1enogcHJvZHVjZWQgYSB3YW50IHRvIHNlZSBlZmZlY3QgZGVzcGl0ZSBhcHBhcmVudCBtaXhlZCB3b3JkIG9mIG1vdXRoIGluIGl0cyB0aW1lLCBzb21ldGhpbmcgdGhhdCBhbHNvIG9jY3VycmVkIG9uIGEgc21hbGxlciBzY2FsZSB3aXRoIGZvciBleGFtcGxlICAgZXZlbiB0aG91Z2ggdGhhdCBtb3ZpZSBoYWQgYSBwYXRoZXRpYyBDIENpbmVtYVNjb3JlLi4gCk1hbiwgZG8gSSB3aXNoIEkgY291bGQgZ28gYmFjayBpbiB0aW1lIHRvIHdlYXIgbXkgYnJhY2UuIEJ1dCBhcyBhIGtpZCB5b3UganVzdCBkb24gaGF2ZSB0aGF0IGtpbmQgb2YgZm9yZXNpZ2h0LiAKQ2VudGF1cnMgd291bGQgcHJvYmFibHkgaGF2ZSBicmVhc3RzIG9uIHRoZSBodW1hbiB0b3JzbyBwYXJ0LCBhbmQgYWxzbyBoYXZlIGhvcnNlIG1hbW1hcmllcyBvbiB0aGUgaG9yc2UgdG9yc28gcGFydC4gVGhpbmdzIGdldCBjb21wbGljYXRlZCBmcm9tIGhlcmUsIHNpbmNlIGNlbnRhdXIgYmFiaWVzIG1pZ2h0IHVzZSBlaXRoZXIgcGFpciwgZGVwZW5kaW5nIG9uIHdoZXRoZXIgdGhleSBsaWtlIGh1bWFuIGJhYmllcywgYW5kIGZhaXJseSBsYXJ2YWwgd2hlbiBib3JuLCBvciBsaWtlIGhvcnNlIGJhYmllcywgYW5kIHByZXR0eSBmdWxseSBkZXZlbG9wZWQuIEkgZ3Vlc3NpbmcgdGhlIGxhdHRlciBzaW5jZSBpbiBodW1hbnMgdGhlIGhlYWQgaXMgdGhlIGxpbWl0aW5nIGZhY3Rvciwgd2hpbGUgaW4gY2VudGF1cnMgdGhlaXIgaGVhZHMgYXJlIHNtYWxsZXIgdGhhbiBob3JzZSBoZWFkcy4gVGhpcyBtZWFucyB0aGV5IHByb2JhYmx5IHN1Y2tsZSBmcm9tIHRoZSBob3JzZSBuaXBwbGVzIGFuZCB0aGUgdXBwZXIgaHVtYW4gcGFpciBtaWdodCBiZSBtb3JlIHZlc3RpZ2lhbC4KSWwgZXN0IHBvc3NpYmxlIGQgbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgZW4gY3Vpc2luZSBlbiBsaWV1IGV0IHBsYWNlIGRlcyBwbGFudGVzIGZyYWNoZXMgb3Ugc2NoZXMuIEMgbGUgY2FzIGRlcyBzdWl2YW50ZXMgOiBhbmV0aCwgYmFpZSByb3NlLCBiYXNpbGljLCBjYW5uZWxsZSwgY2FyZGFtb21lLCBjaXRyb25uZWxsZSwgY29tYmF2YSwgY29yaWFuZHJlLCBjdW1pbiwgY3VyY3VtYSwgZXN0cmFnb24sIGdpbmdlbWJyZSwgZ2lyb2ZsZSwgbGF1cmllciwgbWFuaWd1ZXR0ZSwgbWFyam9sYWluZSwgbWVudGhlLCBtdXNjYWRlLCBwb2l2cmUsIHJvbWFyaW4sIHRoeW0sIHZlcnZlaW5lLCB5bGFuZyB5bGFuZywgZXRjLgpCZXR0aW5nIGlzIHNvbWV0aGluZyB0aGF0IHBlb3BsZSBjb3VsZCBub3QgbGl2ZSB3aXRob3V0IGJlY2F1c2UgdGhleSBoYXZlIGJlZW4gYWNjdXN0b21lZCB0byBkb2luZyBpdC4gQWx0aG91Z2ggdGhlcmUgYXJlIHZhcmlvdXMgdHlwZXMgb2YgYmV0dGluZywKSSB3aXNoIGkgY291bGQgYmUgdGhpcyBpcm9uaWMuIEV2ZW4gb24gYWNjaWRlbnQuIFNPUlJZISBpIG1lYW50IEJZIEFjY2lkZW50ISkuIApJbmZsYW1tYXRpb24gb2YgdGhpcyBidXJzYSAocGVzIGFuc2VyaW5lIGJ1cnNhKSBwcm9kdWNlcyBhIHBhcnRpY3VsYXJseSBleHF1aXNpdGUgYnVybmluZyBwYWluLiBJZiBpdCBpcyBvbmUgaW5qdXJ5LCBzYXJ0b3JpdXMgZml0cyB0aGUgYmlsbC4gSWYgYSBzZWNvbmRhcnkgaW5qdXJ5IGZvbGxvd2VkIHRoZW4gaXQgcmVxdWlyZXMgbW9yZSBwb3N0cy4uIApKYXgsIGluIHJlc3BvbnNlLCBkZW5pZWQgYW55IHZpb2xhdGlvbiBhbmQgaGFzIGdhaW5lZCByZXN0cmFpbmluZyBvcmRlcnMgdGhhdCBoYXZlIGJhcnJlZCBSZXV0ZXIgZnJvbSBjb250YWN0aW5nIGl0cyBjdXN0b21lcnMsIHNheWluZyB0aGF0IGhpcyBhY3Rpb25zIHdlcmUgaW50ZW5kZWQgdG8gZGlzcnVwdCBKYXgncyByZWxhdGlvbnNoaXAgd2l0aCB0aGVtLiAKQm91Y2hhcmQgYWxsZWdlZGx5IHRvbGQgaGVyIGNoaWVmIG9mIHN0YWZmIGhlIHVuZGVyc3Rvb2QgdGhlIGluZGl2aWR1YWwgQ3Jvd24gcHJvc2VjdXRvciB3YW50cyB0byBuZWdvdGlhdGUgYW4gYWdyZWVtZW50LCBidXQgdGhlIGRpcmVjdG9yIGRvZXMgbm90LiBBcyBXaWxzb24gUmF5Ym91bGQgbXVzZWQgdG8gdGhlIGNvbW1pdHRlZSwgY2FuIGhlbHAgYnV0IHdvbmRlciB3aHkgaGUgd291bGQgYnJpbmcgdGhhdCB1cC4gSG93IGhlIHdvdWxkIGtub3cgdGhhdC4gCkFtYXRldXIgc291dGhwYXcgaGVyZSwgbXkgY29hY2ggaGFzIGJlZW4gcmlkaW5nIG15IGFzcyByZWNlbnRseSBmb3IgaXQgbXlzZWxmLCBpZGsgaWYgaXQgYSBzb3V0aHBhdyB0ZW5kYW5jeSBvciBpZiBJIGp1c3QgaGF2ZSB0aGUgc2FtZSBpc3N1ZSwgYnV0IGhhdmluZyBhIHN0cm9uZyBndWFyZCB0ZW5kcyB0byBjYXVzZSB5b3UgdG8ganVzdCBtb3ZlIGluIG9uIHlvdXIgb3Bwb25lbnQgd2l0aG91dCBtb3ZpbmcgdG9vIG11Y2ggb2ZmIHRvIHRoZSBzaWRlcy4gCkFuZCB0aGV5IGRvbiBnaXZlIGEgc2hpdCBhYm91dCBhbnl0aGluZyBlbHNlIGluIGxpZmUgYXQgYWxsLCBzbyB0aGV5IGdvaW5nIHRvIHdvcmsgQSBMT1QgaGFyZGVyIHRoYW4geW91LiAKVGhlIHJlYXNvbiBJIHdhcyBhYmxlIHRvIGJlYXQgQ2VwaGV1cyB3YXMgYmVjYXVzZSBvZiB0aGUgYnJldml0eSBvZiB0aGUgbWF0Y2hlcy4gCldpbGRlciBjYW4gd2FsayBhd2F5IGFsbCBoZSB3YW50cy4gClRoZSBHZW5pZXMgYXJlIHRyYWluZWQgdG8gY2F0ZXIgdG8geW91ciBldmVyeSB3aGltLCBidXQgd2l0aCBsaW1pdGVkIHJlc291cmNlcyBhdCBzZWEsIHRoaXMgY2FuIHJlcXVpcmUgcmVhbCBjcmVhdGl2aXR5LiBEYW5pZWwsIG9uZSBvZiB0aGUgZ2VuaWVzLCBvbmNlIGhhZCBhIGNvdXBsZSBhc2sgZm9yIHRoZWlyIHN1aXRlIHRvIGJlIGZpbGxlZCB3aXRoIGZsb3dlcnMuIFVuYWJsZSB0byBzZWN1cmUgcmVhbCBib3VxdWV0cywgaGUgaGFkIHRoZSBwYXN0cnkgdGVhbSBiYWtlIGRvemVucyBvZiBwZXRhbCBzaGFwZWQgY29va2llcyBhbmQgc2NhdHRlcmVkIHRoZW0gYXJvdW5kIHRoZSByb29tLiBBbmQgd2hlbiBvbmUgZmFtaWx5IGdvdCBsb2NrZWQgb3V0IG9mIGEgcGVhayBzZWFzb24gRGVjZW1iZXIgc2FpbGluZywgZ2VuaWUgQW5kcmVpIHN1cnByaXNlZCB0aGVtIHdpdGggYW4gZWFybHkgQ2hyaXN0bWFzIGJ5IGRlY29yYXRpbmcgdGhlaXIgc3VpdGUgYW5kIHB1dHRpbmcgd3JhcHBlZCBwcmVzZW50cyB1bmRlciBhIG1ha2VzaGlmdCB0cmVlLgpFaW5lIGRlciBiZWlkZW4gTHV4dXNoZXJiZXJnZW4gZGVyIEthdGVnb3JpZSA1KyBzb2xsIDE1MCBaaW1tZXIgaGFiZW4gdW5kIHVudGVyIGRlciBNYXJrZSBIaWx0b24gZ2VmaHJ0IHdlcmRlbi4gSW4gZGVyIFZpZXIgU3Rlcm5lIFZhcmlhbnRlIEhpbHRvbiBHYXJkZW4gc29sbCBlcyAyMDAgWmltbWVyIGdlYmVuLiAKSGFkIG5vIHdheSBvZiBnZXR0aW5nIHdhcm0gd2F0ZXIgaW50byBnbHljb2wgbGluZXMuIApMdW9uZ28gd2FzIHNvIG5lcnZvdXMgaGUgcmVwb3J0ZWRseSBmbG9wcGVkIHRvIGhpcyBzdG9tYWNoIGFuZCBtYWRlIGEga2ljayBzYXZlLi4gCkFueXdheXMgSSB3YXMgYWJzb2x1dGVseSBhbWF6ZWQgYXQgaG93IGZhc3QgYW5kIHBvd2VyZnVsIGhlIHdhcy4gSXQgd2FzIGFsbW9zdCBsaWtlIEkgZGlkbid0IHJlbWVtYmVyIGl0IGxpa2UgdGhhdCB3aGVuIHdlIHdlcmUgZ3Jvd2luZyB1cC4gClBsYW4gdG8gZG91YmxlIHRoZSBtb25ldGFyeSBiYXNlIGlzIGFic29sdXRlbHkgdGhlIHJpZ2h0IHRoaW5nIHRvIGRvLCBidXQgbXkgY29uY2VybiBpcyBpdCBtYXkgbm90IGJlIGVub3VnaC4gCldvdWxkIGxvdmUgdG8gc2VlIHlvdXIgc3RyYXZhIHRyYWluaW5nIGlmIHlvdSBoYXZlIGl0LiBJIGluIGEgZGlmZmVyZW50IHBoYXNlIG9mIGxpZmUgc28gaXQgbmljZSB0byBzZWUgd2hhdCBlZmZlY3QgdHJhaW5pbmcgY2FuIGRvLiAKVGhlIHZpY2Ugc2VjdGlvbiBoYXMgeWV0IHRvIHN1YnBvZW5hIHRoZSBuZXdseSBhdmFpbGFibGUgY3JlZGl0IGNhcmQgaW5mb3JtYXRpb24sIGJ1dCwgU2hhbm5vbiBzYWlkLCBpdCdzICJjb21pbmcgdG8gYSBjb3VydHJvb20gbmVhciB5b3UuIi4gCjUuIFlvdSBjYW4gc3RyYXRlZ2llcyB0byBjaGFuZ2UgdGhlIGhvdXNlIGVkZ2UuCkV2ZXJ5IGNob2ljZSBpcyByZWxhdGl2ZWx5IGNsZWFyIHRvIHlvdSwgYW5kIGV2ZXJ5dGhpbmcgeW91IG1pZ2h0IHdhbnQgdG8ga25vdyAoYWJvdXQgQWxpY2UsIGFib3V0IE5vcnRoIHBhc3QsIGV0YykgaXMgdGhlcmUgZm9yIHlvdSB0byBzZWUuIApXaGVuIHB1cmNoYXNpbmcgYSBjYXNpbm8gcG9rZXIgY2hpcHMgc2V0LCBpdCBpcyBpbXBvcnRhbnQgdG8gY29uc2lkZXIgd2hhdCB5b3UgcHJlZmVyIHlvdXIgcG9rZXIgY2hpcHMgdG8gYmUgbWFkZSBvZi4gCkF0IGEgcmVjZW50IGNlcmVtb255IGluIFBhcmlzIGFja25vd2xlZGdpbmcgdGhlIDEwMHRoIGFubml2ZXJzYXJ5IG9mIHRoZSBXV0kgYXJtaXN0aWNlLCBUaGUgRWNvbm9taXN0IG1hZ2F6aW5lIHJlcG9ydHMgdGhhdCBGcmVuY2ggUHJlc2lkZW50IEVtbWFudWVsIE1hY3JvbiBwcm9waGVzaWVkIGJlZm9yZSBhIHNjb3dsaW5nIFByZXNpZGVudCBUcnVtcCBhbmQgYSBwb2tlciBmYWNlZCBWbGFkaW1pciBQdXRpbiB0aGF0ICJPbGQgZGVtb25zIGFyZSByaXNpbmcgYWdhaW4sIHJlYWR5IHRvIGNvbXBsZXRlIHRoZWlyIHRhc2sgb2YgY2hhb3MuIgpUaGV5IGRyYWdnZWQgSmFrZSBhbmQgQW1pciBvdXQgb2YgcmV0aXJlbWVudCB0byBkbyBhIGxhbWUsIHRyaXRlIGxhbWJhc3RlIG9mIFRydW1wIChkaXJlY3QgbGluaywgYnV0IGZlZWwgZnJlZSB0byBmaW5kIGFub3RoZXIgc291cmNlIGlmIHlvdSBkb24gd2FudCB0byBnaXZlIHRoZW0gdGhlIGhhdGUgYnVja3MpLiAKQmxvb2R5IGhlbGwuIEkga25vdyB5b3UgbWF5IG5vdCBzZWUgaGVyIGFzIGEgdGhyZWF0LCBidXQganVzdCBiZSBzdXBlciBjYXV0aW91cyBpZiB5b3UgZG8gY29uc2lkZXIgc2VlaW5nIGhlci4gTGlrZSBtYWtlIHN1cmUgeW91IGhhdmUgeW91ciBleGl0cyBwbGFubmVkIGlmIHNoaXQgdHVybnMgc291dGgsIGRvbid0IGdldCB0b28gY2xvc2UsIG1ha2Ugc3VyZSB5b3VyIG5ldmVyIGJldHdlZW4gaGVyIGFuZCBzb21ldGhpbmcgdGhhdCBjYW4gaGFybSB5b3UsIHNoZSBtYXkgbm90IGJlIHZpb2xlbnQgYWxsIHRoZSB0aW1lLCBidXQgc2hlIGRvZXMgc291bmQgbGlrZSBzaGUgaGFzIHNvbWUgaW1wdWxzZSBjb250cm9sIGlzc3VlcyBhbmQgeW91IGRvbid0IHdhbnQgaGVyIHRha2luZyBhbnkgbW9yZSBvdXQgb24geW91Li4gClRleGFzIENhcmQgSG91c2UgICB0aGlzIHBsYWNlIGhhcyB0aGUgbW9zdCBjYXNoIHBsYXllcnMuIFRoZXkgaGF2ZSBhIG5pY2UgZmFjaWxpdHkuIFRoZXkgaGF2ZSB0aGUgbW9zdCBjb25zaXN0ZW50IGJhdGNoIG9mIGRlYWxlcnMgYW5kIG1hbmFnZXJzLiBUaGV5IHNwcmVhZCAxLzIsIDIvMyBhbmQgNS81IE5MSEUgcHJldHR5IG11Y2ggZXZlcnkgbmlnaHQuIEFsd2F5cyBtdWx0aXBsZSAxLzIgdGFibGVzIGFuZCBvZnRlbiBtdWx0aXBsZSAyLzMgYW5kIDUvNSB0YWJsZXMuIFNvbWV0aW1lcyB0aGUgNS81IGlzIGEgcHJpdmF0ZSBnYW1lIGJ5IGludml0ZSBvbmx5LiBSYXJlbHkgZ2V0cyBhbiBPbWFoYSBnYW1lIGdvaW5nLiBTb21ldGltZXMgdGhlIHBsYWNlIGlzIGZpbGxlZCB3aXRoIHJlZ3MgdGhhdCBkb24gZ2l2ZSBhY3Rpb24uIEJ1dCBvdmVyYWxsLCBpZiB5b3UgYXJlbiBzdXJlIHdoZXJlIHRvIGdvLCB0aGlzIGlzIHRoZSBzYWZlc3QgYmV0IGZvciBmaW5kaW5nIGEgZ29vZCBnYW1lLgpTaGUgaXMgYXQgcGVhY2Ugbm93IGFuZCBubyBsb25nZXIgaW4gcGFpbi4gTXkgc2hlIGhhdmUgZXRlcm5hbCByZXN0IGluIHRoZSBhcm1zIG9mIEplc3VzLiAKVGhlIG9ubHkgcHJvYmxlbSBJIGV2ZXIgaGFkIHdpdGggYSBnaXJsIHdhcyBvbmUgdGltZSBzaGUgbWFkZSBhIGJpZyBkZWFsIG9mIHRoZSAic2l6ZSIgYW5kIGRpZG4gd2FudCB0byBkbyBmdWxsIHNlcnZpY2UuIFlvdSBjYW4gc2ltcGx5IGNvbXBsYWluIGFuZCBnZXQgeW91ciBtb25leSBiYWNrLiBUaGV5IHVzaGVyIHlvdSBpbnRvIGEgcm9vbSBhbmQgZG9uIGdpdmUgeW91IGEgY2hvaWNlIGFzIHRvIGF2b2lkIEtvcmVhbiBjdXN0b21lcnMgZnJvbSBzZWVpbmcgeW91LiAKUHJpY2Ugb2YgcG9rZXIgaXMgZ29pbmcgdXAgaGVyZSBhIGxpdHRsZSBiaXQgYW5kIEkgbWlnaHQgcGxheSBteSBoYW5kIGEgbGl0dGxlIHRpZ2h0ZXIsIEtyeXN0a293aWFrIHNhaWQgTW9uZGF5IGFmdGVybm9vbi4gCk5hdGlvbmFsIFZvbHVudGVlciBXZWVrIHRvb2sgcGxhY2UgZHVyaW5nIHRoZSB3ZWVrIG9mIEFwcmlsIDE2ICAgMjEuIE9uY2UgYWdhaW4sIHRoZSBWb2x1bnRlZXIgQ2VudGVyIGFuZCB0aGUgRmVsbG93cyBob3N0ZWQgVm9sdW50ZWVyIEFwcHJlY2lhdGlvbiBXZWVrIGF0IFVDTEEgdG8gY2VsZWJyYXRlIGFuZCByZWNvZ25pemUgdGhlIHBlb3BsZSwgb3JnYW5pemF0aW9ucywgYW5kIGNvbW11bml0eSBzZXJ2aWNlIGVmZm9ydHMgdGhhdCBhcmUgbWFraW5nIGEgZGlmZmVyZW5jZSBpbiBjb21tdW5pdGllcyBhY3Jvc3MgR3JlYXRlciBMb3MgQW5nZWxlcy4gClRoZXJlIGlzIG5vIGNvbnNlbnN1cyBvbiBUcmF5YSdzIG1vZGRpbmcsIGJ1dCBJIHRoaW5rIGEgZ29vZCBiYWxhbmNlIG9mIHByb3RlY3Rpb24sIHRlbmFjaXR5LCBzcGVlZCwgYXJtb3IvcmVzaXN0YW5jZSwgaGVhbHRoIG1ha2VzIGhlciBxdWl0ZSBhbiBlZmZlY3RpdmUgdGFuay4gCisgVGhpcyBraXRjaGVuIGlzIGEgZmluYWxpc3QgaW4gdGhlIEJlc3QgS2l0Y2hlbiBSZW5vdmF0aW9uIE92ZXIgJDEyNSwwMDAgY2F0ZWdvcnkgb2YgdGhlIENhbmFkaWFuIEhvbWUgQnVpbGRlcnMnIEFzc29jaWF0aW9uIG9mIEJyaXRpc2ggQ29sdW1iaWEncyAyMDE5IEdlb3JnaWUgQXdhcmRzLgoiT24gaG90IGh1bWlkIGRheXMsIGl0J3Mgd29yc2UgYmVjYXVzZSB0aGV5IGhhdmUgdG8gdmVudCBtb3JlIG9mdGVuIC4gWW91IHdvdWxkbid0IGJlIGFibGUgdG8gb3BlbiB5b3VyIHdpbmRvd3MsIiBoZSBzYWlkLgpHcmVnIEh5d29vZCBzaG91bGQgaGFuZyBoaXMgaGVhZC4gCkVzcGVjaWFsbHkgaWYgdGhleSB3ZXJlLCB3ZWxsLCBicm90aGVyIGFuZCBzaXN0ZXIuIApNYXliZSBtb3JlIGltcG9ydGFudGx5LCBzaGUgaXMgcGFydCBvZiB0aGUgTWFuaXB1bGF0ZWQgTGl2aW5nLCB3aG8gZ3VpZGUgRG9ubmllIG9uIGhpcyBxdWVzdCB0byBzZW5kIHRoZSBBcnRpZmFjdCBiYWNrIHRvIHRoZSBQcmltYXJ5IFVuaXZlcnNlLiBJdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHRoZXNlIHBlb3BsZSBkbyBub3QgcmVhbGl6ZSB0aGV5IGFyZSBiZWluZyBtYW5pcHVsYXRlZC4gCkNhc2ggcGFpZCB0byBNYWd1aXJlIHdhcyBjb25zaWRlcmVkIGlsbCBnb3R0ZW4gZ2FpbnMgYXMgUnVkZXJtYW4gZW1iZXp6bGVkIGZyb20gaGlzIGNsaWVudHMuLiAKTWNmbHVyc3RlcnMgdQpMb25nIHN0b3J5IHNob3J0LCBpZiB5b3UgbGlrZSB0byBwYXkgd2hhdCBpdCBzYXlzIG9uIHRoZSBzY3JlZW4sIGRvIHlvdXIgcmVzZWFyY2ggdG8gbWFrZSBzdXJlIHRoZSBvdGhlciBwZXJzb24gaXNuIGdldHRpbmcgc2NyZXdlZCBvdmVyLiA6KU5vdCBsZXNzIHRoYW4gbWluaW11bSB3YWdlLCBuby4gQnV0IGl0IGlzIGEgcGh5c2ljYWxseSBzdHJlbnVvdXMgc2VydmljZSBqb2IsIHdoZXJlIHRoZSBsYWJvciBpbnZvbHZlcyBxdWl0ZSBpbnRlbnNpdmUgZm9jdXNlZCBtZW50YWwsIGVtb3Rpb25hbCwgYW5kIHBoeXNpY2FsIGF0dGVudGlvbiB0byB5b3UsIHRoZSBjbGllbnQsIGZvciBhbiBob3VyIG9yIG1vcmUuIApJIGJlbGlldmUgaXQgd2FzIEtlbiBNY0Vscm95IChvciBSb2JlcnQgS3lvc2FraSkgd2hvIHNhaWQgdGhhdCBoZSBkb2Vzbid0IHdhaXQgdW50aWwgaGUga25vd3MgMTAwJSBvZiB0aGUgZGV0YWlscyBpbiBvcmRlciB0byBhY3QgICBoZSB3YWl0cyB1bnRpbCBoZSBrbm93cyA3MCUgb2Ygd2hhdCBoZSBuZWVkcyB0byBrbm93IHRoZW4gYWN0cy4gCkkgZG9uIHNwZWFrIHRvIG15IG1vdGhlciBmb3IgYW55dGhpbmcgbW9yZSBzaWduaWZpY2FudCB0aGFuIGEgaGFwcHkgaG9saWRheXMgdGV4dC4gClRoZSB1Z2x5IHRydXRoIGlzIHRoYXQgdW5pdmVyc2l0aWVzIGhhdmUgYmVjb21lIG1pbmkgdmVyc2lvbnMgb2YgTmVvbGliZXJhbCBjb3Jwb3JhdGUgQW1lcmljYS4gVGhlIHBlb3BsZSBhdCB0aGUgdmVyeSB0b3AgIHRoZSBwcmVzaWRlbnRzIGFuZCBwcm92b3N0cyBhbmQgY291bnRsZXNzIHZpY2UgcHJlc2lkZW50cyAgbWFrZSBhIHF1YXJ0ZXIgbWlsbGlvbiBvciBldmVuIGEgaGFsZiBtaWxsaW9uIGRvbGxhcnMgYSB5ZWFyLiBBIGdvb2QgY2h1bmsgb2YgYWxsIHRlYWNoaW5nIGlzIGRvbmUgYnkgIkFkanVuY3QiIHByb2Zlc3NvcnMsIG1lYW5pbmcgdGhhdCBnZXR0aW5nIHRoZWlyIFBoRCBoYXMgbGFuZGVkIHRoZW0gYSBqb2Igd2hlcmUgdGhleSB0ZWFjaCA0IGNsYXNzZXMgYSBzZW1lc3RlciAobW9yZSB0aGFuIGZ1bGwgdGltZSBmYWN1bHR5KSBhdCBhIGNvdXBsZSBvZiB0aG91c2FuZCBkb2xsYXJzIGEgY2xhc3Mgd2l0aCBubyBiZW5lZml0cy4gCkFoLCBoYXBweSByZXNvbHV0aW9uIHRpbWUuIEhvb2tlciBhbmQgdGhlIGdhbmcgaGFuZyBvdXQgaW4gdGhlIHN0YXRpb24gd2F0ZXJpbmcgaG9sZSwgc2hhcmluZyBkcmlua3MgYW5kIHRvYXN0aW5nIHdpdGggY2hhbXBhZ25lLiBUaGUgY2hpY2sgY29wIGlzIHRoZXJlIHRvbywgYW5kIHdlIGNsaW5rIGRyaW5rcyBhbmQgZnJlZXplIGZvciBjcmVkaXRzLCBldmVyeWJvZHkgYWxsIGhhcHB5IHNtaWxlcy4gTmV4dCB3ZWVrIG9uIFRKIEhvb2tlciwgSG9va2VyIGJyaW5ncyBkb3duIHRoZSBiYWQgZ3V5cyBhbmQgc2F2ZXMgdGhlIGRheSBhbmQgdGhlIGdpcmwuIFRoYXQgZXBpc29kZSB3YXNuJ3QgYXMgbXVjaCBjYW1weSBmdW4gYXMgdGhlIG9uZSBiZWZvcmUsIGJ1dCB0aGF0J3Mgb2theS4gSSBhbSB0b3RhbGx5IGhvb2tlZC4gSSBoYXRlZCBUSiBIb29rZXIgYmFjayBpbiB0aGUgZGF5LCBidXQgbm93IGl0J3MganVzdCBkYW1uIGZ1bm55LCBhbGwgbHVkaWNyb3VzIGNhbXB5IGdvb2RuZXNzLiA6KSBUaGFua3MgZm9yIGluZHVsZ2luZyBteSBhdHRlbXB0IGF0IFRWV1AgbmVzcy4gOikKSWwgZXN0IHBvc3NpYmxlIHF1ZSBsJ2FuYWx5c2UgZHUgY29tcG9ydGVtZW50IGRlIHZvcyBhZHZlcnNhaXJlcyBzb2l0IGVuY29yZSBwbHVzIGltcG9ydGFudGUgcXVlIHZvdHJlIG1haW4gYXUgcG9rZXIuIApXYXNoaW5ndG9uIHN0YXRlIGN1cnJlbnRseSBkb2VzIG5vdCBhbGxvdyBvbmxpbmUgcG9rZXIgYW5kIHBva2Vyc3RhcnMgcmVtb3ZlZCB0aGUgcmVhbCBtb25leSBwbGF5IG9wdGlvbiBmb3IgcGxheWVycyBpbiBXYXNoaW5ndG9uIGJlY2F1c2Ugb2YgdGhlaXIgcnVsaW5nLiBJJ20gbm90IHN1cmUgYWJvdXQgb3RoZXIgc3RhdGVzLgpQbHVzIG15IG93biBleHBlbnNlcyBsaWtlIG15IHBob25lLCBpbnN1cmFuY2UsIGFuZCB3aGF0IGhhdmUgeW91Li4gCkdvZXMgb3V0IHRoZSBkb29yLCBnZXRzIGluIHRoZSBjYXIsIHNldmVyZWQgcGVuaXMgaW4gaGFuZCwgYW5kIGRyaXZlcyBhIGJpdCBhbmQgdGhlbiB0aHJvd3MgaXQgb3V0IHRoZSB3aW5kb3cuIApSaWNoIEFsYXRpIGlzIGRhbmNpbmcgd2l0aCB0aGUgZGV2aWwuCkhlIHdhcyBvbmx5IHNlZW4gd2l0aCBoaXMgZ2lybGZyaWVuZCwgdGhvdWdoIGhlIGRpZG4gc2hvdyBoZXIgbXVjaCBhZmZlY3Rpb24sIHRoZSBob3N0IHNhaWQuUGFkZG9jayB3YXMgZWFzeSB0byBkZWFsIHdpdGggYW5kIGhlIGFsd2F5cyBwYWlkIGhpcyBkZWJ0IHByb21wdGx5LCB0aGUgaG9zdCBzYWlkLiBUaGF0IHN0YXllZCBjb25zaXN0ZW50IHRocm91Z2ggdGhlIHllYXJzLCBoZSBzYWlkLkVhY2ggb2YgdGhlIGhvc3RzIHNhaWQgUGFkZG9jayBuZXZlciBzaGFyZWQgbXVjaCBhYm91dCBoaXMgbGlmZSBhbmQga2VwdCB0aGUgdGFsayBtb3N0bHkgdG8gZ2FtYmxpbmcuUGFkZG9jayB0d2ljZSB3b24gY29udGVzdHMgd2l0aCBiaWcgcGF5b3V0cy4gCjggcHJlc2lkZW50aWFsIGVsZWN0aW9uLCB0aGUgZGlzZ3JhY2VkIGZvcm1lciBjb25ncmVzc21hbiBhbmQgZmFpbGVkIG1heW9yYWwgY2FuZGlkYXRlIHNwb2tlIHdpdGggYSBwYWwgd2hvIHdvcmtzIGF0IHRoZSBIdW50IEZpc2ggQ2x1YiwgdGhlIHN3YW5reSBUaW1lcyBTcXVhcmUgbWVhdCBtYXJrZXQsIGFib3V0IGhpcyBmdXR1cmUsIHR3byBzb3VyY2VzIGZhbWlsaWFyIHdpdGggdGhlIGNvbnZlcnNhdGlvbiBzYWlkLiAKRmVkZXJhbCBMYWJvciBsZWFkZXIgQmlsbCBTaG9ydGVuIGZsZXcgZG93biBmb3IgdGhlIHBhcnR5J3MgTGF1bmNlc3RvbiBjYW1wYWlnbiBsYXVuY2ggYnV0IGRpZG4ndCBiYWNrIE1zIFdoaXRlJ3MgYW50aSBwb2tpZXMgc3RhbmNlIG91dHJpZ2h0LgpNeSBwcmV2aW91cyBhcnRpY2xlcyBvbiBwb2tlciBjYWxjdWxhdG9ycyBoYXZlIG5vdCBpbmNsdWRlZCBpbmZvcm1hdGlvbiBvbiBQb2tlciBQcm9waGVjeSBiZWNhdXNlIGluIGVzc2VuY2UgaXQgaXMgTk9UIGFuIG9ubGluZSBwb2tlciBvZGRzIGNhbGN1bGF0b3IuIApBZnRlciBiZWluZyBzdHJpY3RseSB6ZXJvY2FyYiBmb3IgbmVhcmx5IGZvdXIgbW9udGhzLCBJIGRyYW5rIHNvbWUgMTV5ciB3aGlza2V5IHdpdGggYSBjb3VwbGUgYnVkZGllcyB3aG8gd2VyZSB2aXNpdGluZyBmcm9tIG90aGVyIGNvdW50cmllcy4gSSBkaWQgbm90IHRha2UgUGVwY2lkIGFuZCBkZWNpZGVkIHRvIGp1c3QgZ2l2ZSBpdCBhIHNob3QuIApXaGF0IHlvdSBzYXlpbmcgaXNuIHRvbyBjcmF6eSBvZiBhbiBpZGVhLiBIb3dldmVyLCBJIGJlbGlldmUgdGhhdCB0aGUgVUZDIGlzIHBsYXlpbmcgdGhlIGxvbmcgZ2FtZS4gVFYgdmlld2VycyBhcmVuIHNoaXQgd2hlbiB5b3UgdGhpbmsgYWJvdXQgdGhlIGFtb3VudCBvZiBwZW9wbGUgb24gdGhlIGludGVybmV0IHRhbGtpbmcgYWJvdXQgdGhlIGZpZ2h0cywgcGVvcGxlIHR3ZWV0aW5nL2luc3RhL3JlZGRpdGluZyBhYm91dCB0aGUgVUZDLiBUaGUgZnV0dXJlLCB0aGUgcGVvcGxlIHRoYXQgdGhlIFVGQyB3YW50cyB0byBwYXkgZm9yIHRoZSBhd2Z1bCBmaWdodCBraXRzLCBqb2luIHRoZSByZXdhcmRzIHByb2dyYW0sIGFuZCBidXkgdGhlIFBQVnMsIHRob3NlIGFyZSB0aGUgb25lcyB0aGV5IHdvcnJ5aW5nIGFib3V0IGFuZCBtYXJrZXRpbmcgdG8uIEkgdGhpbmsgd2UgY2FuIGFncmVlIHRoYXQgaXQgd291bGQgbG9vayBiZXR0ZXIgaWYgdGhlIFVGQyB3YXMgbW9yZSBsaWtlIHRoZSBORkwvTkhML05CQSwgYnV0IHRoZWlyIGJ1c2luZXNzIG1vZGVsIGRvZXNuIHdvcmsgdGhhdCB3YXkuIFRoZSBtZXJlIGlkZWEgb2YgZXhjbHVzaXZpdHkgbWFrZXMgcGVvcGxlIG1vcmUgbGlrZWx5IHRvIHdhdGNoIGxpdmUgYW5kIHBheSBmb3IgdGhhdCBleHBlcmllbmNlLlRoZXJlIGlzIFpFUk8gZ2FpbmVkIGZyb20gaGVyIGZpZ2h0aW5nIGEgbWFuLiBTaGUgYW5kIHRoZSBtYW55LCBtYW55IHNraWxsZWQgd29tZW4gZmlnaHRlcnMgYXJlIHRyeWluZyB0byBsZWdpdGltaXplIHdvbWVuIE1NQSwgbm90IHR1cm4gaXQgaW50byBhIGZyZWFrIHNob3cuU2hlIGlzIHNwb25zb3JlZCBieSBSZWVib2sgYW5kIE1ldHJvIFBDUy4gQWdhaW4sIHRoZXJlIGlzIE5PIGNoYW5jZSBpbiBoZWxsIHRoYXQgZWl0aGVyIG9uZSBvZiB0aGVzZSBzcG9uc29ycyB3b3VsZCBoYW5nIGFyb3VuZCBpZiB0aGVyZSB3YXMgdGhlIHNsaWdodGVzdCBjaGFuY2Ugc2hlIGdldCBpbnRvIGEgY2FnZSB3aXRoIGEgbWFuLgpUaGUgInJlbGllZiIgeW91IGZlZWwgZnJvbSBzbW9raW5nIGlzbid0IHJlYWwgcmVsaWVmIGF0IGFsbC4gRHVyaW5nIHNtb2tpbmcsIHlvdXIgYm9keSBpcyBiZWNvbWluZyBtb3JlIHN0cmVzc2VkLiBCbG9vZCBwcmVzc3VyZSBhbmQgaGVhcnQgcmF0ZSBpbmNyZWFzZXMsIHlvdXIgYm9keSBiZWNvbWVzIG1vcmUgdGVuc2UsIGFuZCBveHlnZW4gZmxvdyBpcyByZWR1Y2VkLiBUaGUgInJlbGllZiIgb2Ygc21va2luZyBpcyBqdXN0IGEgdGVtcG9yYXJ5IHJlbGllZiBmcm9tIG5pY290aW5lIHdpdGhkcmF3YWwuClRoZSB3aWZlIGFuZCB0aGUga2lkcyB3YW50ZWQgYSBkb2cuIApJJ20gZmFzY2luYXRlZCBieSB0aGUgY29tbWVudHMgZnJvbSBSZWRkaXRvcnMgaW4gb3RoZXIgY291bnRpZXMgYWJvdXQgdGhlaXIgbWVkaWNhbCBleHBlcmllbmNlcyBhbmQgaG93IGxpdHRsZSB0aGV5IGhhdmUgdG8gcGF5IGZvciB0aGUgc2VydmljZXMuIEhlYWx0aCBjYXJlIGluIEFtZXJpY2EgaXMgZnVja2VkIHVwLiBJIHRoaW5rIHdlIHNob3VsZCBhbGwgYmUgd2lsbGluZyB0byBsb29rIGF0IGFueSB0eXBlIG9mIGFsdGVybmF0aXZlIG1lYW5zIHRvIHByb3ZpZGUgaGVhbHRoIGNhcmUgdG8gYWxsIEFtZXJpY2Fucy4gCkwgYXZlYyBsZSBjaG5lLCBjIHF1ZSBkIGVzcGNlICBsIGxlcyBwcm9wcml0cyB0aHJhcGV1dGlxdWVzIGRlbWV1cmVudCBwcm9jaGVzLCBjZSBxdWUgbmUgbWFucXVlIHBhcyBkZSBkaXN0aW5ndWVyIERpb3Njb3JpZGUgcXVpIGRpc3NvY2llIG5hbm1vaW5zIGxlIGNobmUgZGUgbGEgeWV1c2U6IFRvdXRlIHNvcnRlIGRlIGNobmUgYSB1bmUgdmVydHUgYXN0cmluZ2VudGUsIGFmZmlybWUgdCBpbCAoMTQpLiBDZSBxdWkgZmFpdCBxdSB5IGEgZGUgZ3JhbmRlcyBjaGFuY2VzIHBvdXIgcXVlIGxlIGRpc2NvdXJzIHRlbnUgcGFyIGxlcyBBbmNpZW5zICBsIGR1IGNobmUgY29uY29yZGUgYXZlYyBjZSBxdWUgbm91cyBzYXZvbnMgZHUgY2huZSBwZG9uY3VsIGF1am91cmQgQWluc2kgcGV1dCBvbiBhY2NvcmRlciBjb25maWFuY2UgIFBsaW5lIGxvcnNxdSBhdmFuY2UgbGEgdmFsZXVyIGhtb3N0YXRpcXVlIGR1IGNobmUgY29tbWUgcmVtZGUgZGVzIGhtb3JyYWdpZXMgcGFzc2l2ZXMgKGhtb3B0eXNpZSBldCBjcmFjaGVtZW50IGRlIHNhbmcsIGZsdXggdXRyaW5zIGFub3JtYXV4KSwgZGUgbGEgZHlzZW50ZXJpZSBldCBkZSBsYSBkaWFycmhlLCBkZSBsYSBsZXVjb3JyaGUgZXQgZGUgZGl2ZXJzZXMgYWZmZWN0aW9ucyBjdXRhbmVzICh1bGNyYXRpb25zLCBkZXJtYXRvc2VzLCBldGMuKSwgcHJvdWVzc2VzIHJlbmR1ZXMgcG9zc2libGVzIHBhciBsIGRlIGxhIHNlY29uZGUgY29yY2UgcXVpIGVzdCBlbnRyZSBsYSBncm9zc2UgY29yY2UgZXQgbGUgYm9pcywgZXQgbW1lIGNldHRlIHBldGl0ZSBwZWxsaWN1bGUgcXVpIGVzdCBlbnRyZSBsIGV0IGxhIGNoYWlyIGR1IGdsYW5kLCBwcmNpc2UgRGlvc2NvcmlkZSAoMTUpLiAKVmlldyBpbWFnZVEuIApPbmNlIGl0IHdhcyBzbyBob3QgbXkgZW50aXJlIHJlc2VhcmNoIGdyb3VwIGJlY2FtZSBzdHVwaWQgYW5kIGxldGhhcmdpYy4gSSBteXNlbGYgZmVsbCBvdmVyIG15IG93biBmZWV0LCBsYW5kZWQgZmFjZSBmaXJzdCBpbiB0aGUgZGlydCBhbmQgbGFpZCB0aGVyZSBoeXN0ZXJpY2FsbHkgbGF1Z2hpbmcgYXQgbXlzZWxmIHVudGlsIG15IHN1cGVydmlzb3Igc3VnZ2VzdGVkIHdlIHRha2UgYSB3YXRlciBicmVhayBhbmQgY29vbCBvZmYuClRob3VnaCBvYnZpb3VzbHkgc29tZW9uZSBjb3VsZCBoYXZlIG1hZGUgdGhlICJyaWdodCIgcmVhZCBiYXNlZCBvbiBzb21ldGhpbmcgdGhhdCBJIGxpdGVyYWxseSBhbHdheXMgZXhwZXJpZW5jZSBhbmQgbm90IHNhaWQgYW55dGhpbmcuLiAKUm9jazM3bWFuICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnbwpUaGV5IGRpZG50IGhhdmUgYSBnZW5lcmF0b3IsIGZvb2QgZm9yIHRoZSBkb2dzIGFuZCBjYXRzLCBmb29kIGZvciB0aGVtc2VsdmVzIGJleW9uZCBhYm91dCBhIHdlZWsgYW5kIG1vc3Qgb2YgdGhhdCB3YXMgZnJvemVuIHN0dWZmIGluIHRoZSBmcmlkZ2UsIGFuZCB0aGVpciBzdHJlZXQgd2FzIGFscmVhZHkgcHJvbmUgdG8gZmxvb2RpbmcuIElmIGl0IGhhZCBiZWVuIG11Y2ggd29yc2UgaW0gY29udmluY2VkIHRoZXkgd291bGQgaGF2ZSBsb3N0IHRoZSBob3VzZSBhbmQgdGhlaXIgbGl2ZXMgaGFkIHRoZXkgc3RheWVkLi4gCk9uY2UgeW91J3JlIHNpdHVhdGVkLCBjbG9zZSB5b3VyIGV5ZXMgYW5kIGJyZWF0aGUgc2xvd2x5LCBmZWVsaW5nIHRoZSBhaXIgZW50ZXIgeW91ciBsdW5ncy4gTmV4dCwgZXhoYWxlIHNsb3dseSwgZmVlbGluZyB0aGUgYWlyIGxlYXZlIHlvdXIgYm9keS4gS2VlcCB0aGUgZm9jdXMgb24geW91ciBicmVhdGhpbmcuIElmIHlvdXIgbWluZCB3YW5kZXJzIG9mZiwgZ2VudGx5IGJyaW5nIHlvdXIgZm9jdXMgYmFjayB0byB5b3VyIGJyZWF0aGluZy4gWW91IHdhbnQgeW91ciBhdHRlbnRpb24gdG8gcmVtYWluIG9uIHlvdXIgYnJlYXRoaW5nIHRvIGtlZXAgeW91IGluIHRoZSBwcmVzZW50IG1vbWVudC4gVGhpcyB3YXkgeW91IHdvbid0IGJlIGRpc3RyYWN0ZWQgYnkgcGFzdCBvciBmdXR1cmUgZXZlbnRzIHRoYXQgbWF5IGNhcnJ5IHlvdXIgbWluZCBhd2F5IGFuZCBwb3NzaWJseSBicmluZyBhbnhpZXR5LgpObyBwb3N0aW5nIG9mIGlsbGVnYWwgY29udGVudCBvciBkaXNjdXNzaW9uIG9uIGlsbGVnYWwgYWN0aXZpdGllcyB1bmRlciBUaGFpIGxhdy4gVGhpcyBpbmNsdWRlcyBhbnl0aGluZyB0aGF0IGZhbGxzIHVuZGVyIGxzZSBtYWplc3QgcnVsZXMgaW4gVGhhaWxhbmQgd2hpY2ggY291bGQgZ2V0IHVzIGluIHRyb3VibGUuIFRvIHByZXZlbnQgc3VjaCBkaXNjdXNzaW9uIGZyb20gYXJpc2luZyB3ZSBhc2sgdGhhdCB5b3UgZG9uIHN1Ym1pdCBhbnkgY29udGVudCBpbnZvbHZpbmcgdGhlIHJveWFsIGZhbWlseS4gSXQgd2lsbCBnZXQgZGVsZXRlZCBhbmQgcmVwZWF0ZWQgb2ZmZW5kZXJzIHdpbGwgYmUgYmFubmVkLiBXZSBoYXZlIHRvIGRvIHRoaXMgdG8gYmUgc3VyZSBubyBvbmUgd2lsbCBiZSBhcnJlc3RlZCBzbyB3ZSBraW5kbHkgYXNrIHlvdSByZXNwZWN0IHRoaXMgcnVsZS4KSSB1c3VhbGx5IGhhdmUgc2FpZCAiVGhpcyBpcyBpdCIgdG8gcHJlY2VkZSBzb21lIG9mIHRoZSBtb3JlIGltcG9ydGFudCByZWxlYXNlcyBpbiBoZWF2eSBtZXRhbCBoaXN0b3J5IGFuZCB0aGlzIGlzIGl0IGlmIHdlIGFyZSB0YWtpbmcgYWJvdXQgd2hlbiBleHRyZW1lIG1ldGFsIHJlYWxseSBzdGFydGVkIHRvIGdldCBnb2luZy4gU3VyZSB0aGUgYmFuZCBhbHNvIGhhZCBhbiBleHBsb3NpdmUgc2VyaWVzIG9mIGRlbW9zLCBhbGwgd2hpY2ggbm93IGxpdmUgaW4gdGhlIGljb25pYyBoaXN0b3J5IG9mIHVuZGVyZ3JvdW5kIG1ldGFsIGJ1dCBJIGJlbGlldmUgaXQgaXMgd2FzIHRoaXMgRVAgd2hlbiB0aGUgYmFuZCBlbmVyZ3kgYW5kIHRoZWlyIGFiaWxpdHkgdG8gbWFrZSBtdXNpYyB3aGljaCBkaWRuIHNvdW5kIGxpa2UgZ2FyYmFnZSBhbGlnbmVkIGZvciBhIGRpc2hhcm1vbmlvdXMgdW5pb24uIElmIHlvdSB3YW50ZWQgdG8gdHJhdmVsIGJhY2sgdG8gYSB0aW1lIHdoZW4gYmFuZHMgd2VyZSB3aWVsZGluZyBnZW5yZXMgYXJvdW5kIGxpa2UgY2FwdHVyZWQgbGlnaHRpbmcgdGhhdCB3YXMgcHVsbGVkIGZyb20gdGhlIHNreSwgdGhpcyBpcyBpdC4uIApFbGxpcyBzYWlkIHRvIGFub3RoZXIgcHJvc2VjdXRvcjogIllvdSBtdXN0IGJlIHF1aWV0LicnCkFyZSB5b3UgY3VyaW91cyBhcyB0byBob3cgbWFueSBwZW9wbGUgd2UgaGFkIGNvbWUgb3V0IHRvIHBsYXk/IEluIGFsbCB0aGVyZSB3ZXJlIDE4MC4gVGhlcmUgY291bGQgaGF2ZSBiZWVuIG1vcmUgYnV0IHRoZSBwbGFjZSB3ZSByZW50ZWQgb3V0IG9ubHkgaGFkIDMwMCBhcyBtYXhpbXVtIGNhcGFjaXR5LiBPbmNlIHlvdSBmaWd1cmUgaW4gZnJpZW5kcyBvZiBwbGF5ZXJzLCBmYW1pbHkgbWVtYmVycyBvciBvdGhlcnMganVzdCBjb21pbmcgdG8gd2F0Y2ggaXQgd2FzIGEgc21hcnQgaWRlYSBvbiBvdXIgcGFydC4gV2hhdCBpdCBjb21lcyBkb3duIHRvIGlzIGlmIHlvdSdyZSBqdXN0IGxvb2tpbmcgZm9yIGEgbmV3IHNldCB0aGF0IHdpbGwgbWFrZSBhIHN0YXRlbWVudCwgd2UgZGVmaW5pdGVseSByZWNvbW1lbmQgdGhlIDI0MCBDaGlwIE5leEdlbiBQUk8gQ2xhc3NpYyBTdHlsZSBQb2tlciBTZXQgV2l0aCBXb29kIENhc2UuCkkgaG9wIHVwIG9uIHRoZSBiYWNrIG9mIHRoZSBqYWN1enppLCBhbmQgY2hlY2sgb3V0IHRoZSBzb3VyY2Ugb2YgdGhlIHByb2JsZW0uIFRoZSB3aW5kb3cgaXMgb25lIG9mIHRob3NlIHRoYXQgb3BlbnMgYXQgdGhlIHRvcCBhbmQgdGhlIGJvdHRvbSwgYW5kIHRoZSB0b3AgaXMgc2xpZ2h0bHkgb3BlbiwgYW5kIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRoYXQgb3BlbmluZyBpcyBhIGZ1Y2tpbmcgcmVkIHdhc3AgY2l0eS4KRWRpdDogaXQncyBub3QganVzdCBhYm91dCB0YXhlcy4gWW91IGFyZW4ndCByZWFsaXppbmcgdGhlIG1haW4gd2F5IHRoaXMgbWFrZXMgY29tcGFuaWVzIG1vbmV5LCBZT1UhIEJ5IGZ1bmRpbmcgYSBjaGFyaXR5IHRvIG9mZnNldCB0aGUgY29zdHMgb2YgaGlnaCBjb3BheXMgZm9yIGluc2FuZWx5IGV4cGVuc2l2ZSBkcnVncywgbW9yZSBwZW9wbGUgY2FuIGFmZm9yZCB0aGUgY29wYXkgYW5kIE1lZGljYXJlIHBpY2tzIHVwIHRoZSByZW1haW5pbmcgY29zdC4gWW91KSBwYXlzIHRoZW0gdGhlIG90aGVyICQ5MCwwMDAuIApUaGV5IGFsc28gdXNlIHRoZSBjb25jZXB0IG9mIG1vbmV5IGxlYXZpbmcgdGhlIHBlbmluc3VsYSBmcm9tIG92ZXJzZWFzIHBheXNpdGVzIGFzIGEgc2Vjb25kYXJ5IGFyZ3VlbWVudCBiZWNhdXNlIHdoZXRoZXIgaXQgaXMgY29uc2VydmF0aXZlIG9yIGxpYmVyYWwgdGhlIEtvcmVhbiBnb3YgbmV2ZXIgZXZlciB3YW50cyB0byBzZWUgbW9uZXkgbGVhdmluZyB0aGUgY291bnRyeSB0aGF0IGlzbiB0YXhlZCBpbiBzb21lIHdheS4uIApJIHVzZWQgdG8gd29yayBpbiBkZW1lbnRpYSBjYXJlLiBPbmUgb2YgdGhlIHRoaW5ncyB5b3UgaGF2ZSB0byBkbyBpcyBjb25zaWRlciByZXNpZGVudHMgdG8gaGF2ZSB0aGUgc2FtZSBtZW50YWwgY2FwYWNpdHkgYXMgc21hbGwgY2hpbGRyZW4uIAoiSSdtIG5vdCBhbnRpIFJTTCwgYnV0IEkgYW0gYW50aSBnYW1ibGluZyBhbmQgZ2FtaW5nLCIgc2hlIHNhaWQuICJXZSBiZWxpZXZlIHRoYXQgaW5jcmVhc2VkIG51bWJlcnMgb2YgcG9rZXIgbWFjaGluZXMgYW5kIHRoZSBzdWJzZXF1ZW50IGltcGFjdCBpcyBhbiBpc3N1ZSB0aGF0IHdpbGwgYWZmZWN0IHRoZSBsaXZlcyBvZiBtYW55IGluIG91ciBjb21tdW5pdHkuIgpXb3csIHlvdSBtaXNzZWQgdGhpcyBwb2ludCBieSBhIGNvdW50cnkgbWlsZS4gQWxzbyB3aHkgd291bGQgSSBiZSBydW5uaW5nIHRoZW0gd2l0aCBhZG1pbiBwcml2aWxlZ2VzPyBBbmQgYnkgInVuc2lnbmVkIiB5b3UgbWVhbiAiZnJvbSBkZXZlbG9wZXJzIHdlYnNpdGVzIiB3aGljaCBpbiBpdHNlbGYgZ2FybmVycyBhIGRlY2VudCBsZXZlbCBvZiB0cnVzdC4gQW5kIG5vLCB0aGF0IG5vdCB0aGUgdHJ1c3QgSSB3YXMgcmVmZXJyaW5nIHRvLiBUaGUgdHJ1c3QgSSB3YXMgcmVmZXJyaW5nIHRvIHdhcyB0byBkbyB3aXRoIHRoZSBmYWN0IHRoYXQgTWljcm9zb2Z0IGFyZSBhIHNjdW1teSBjb21wYW55IHdobyB3aWxsIHRyeSBhbmQgbWlsayB0aGVpciB1c2VyYmFzZSBmb3IgZXZlcnl0aGluZyB0aGV5IGNhbiBhbmQgY2hhbmdlcyB3aWxsIHJhcmVseSBiZSBpbiB5b3VyIGJlc3QgaW50ZXJlc3QuCjIwMTggMDIgNjYgQW5ub3VuY2VtZW50OiBUaGUgUG9zdCBuZXcgZXZlcnkgd2VlayBvbiBoMmcyOiBGZWF0dXJlZCBHdWlkZSBFbnRyaWVzOiBGaW5kIHRoZW0gb24gdGhlIEZyb250IFBhZ2UhIFlvdSBhYnNvbHV0ZWx5IGNhbm5vdCBsaXZlIHdpdGhvdXQgdGhpcyBpbmZvcm1hdGlvbiEgU2VlIHRoZSBleGNpdGluZyBhcnQhIGgyZzIgUG9zdDogWWVzLCBpdCdzIG5ldyBldmVyeSBNb25kYXksIGFsdGhvdWdoIHRoZSBzbmVha3kgUG9zdCBFZGl0b3IgcHV0cyBpdCB1cCBvbiBTdW5kYXksIHNvIHlvdSBjYW4gcmVhZCB0aGUgYWR2YW5jZSBjb3B5IHRoZW4gYW5kIGRvIHRoZSBxdWl6emVzIGJlZm9yZSB0aGUgbGF6eSBwZW9wbGUgd2hvIHdhaXQgdW50aWwgTW9uZGF5IG1vcm5pbmcuIApTd2VkaXNoIG1hc3NhZ2UgaXMgc3lub255bW91cyB3aXRoIG1hc3NhZ2UgaXRzZWxmIGJlY2F1c2UgaXQgaXMgdGhlIG1vc3QgY29tbW9uLiBJbiBFdXJvcGUgaXQgaXMgY2FsbGVkIHRoZSAiQ2xhc3NpYyBNYXNzYWdlIi4gV2hlbiB5b3UgZ28gZ2V0IGEgbWFzc2FnZSBhbmQgZG8gbm90IHNwZWNpZnkgYSB0eXBlIG9mIG1hc3NhZ2UsIGNoYW5jZXMgYXJlIGl0IHdpbGwgYmUgdGhlIFN3ZWRpc2ggbWFzc2FnZSBzaW5jZSBpdCBpcyB0aGUgbW9zdCB0YXVnaHQgYW5kIHVzZWQgYnkgdGhlIG1hc3NldXNlIG9yIHRoZXJhcGlzdC4gCkFzIG9mdGVuIGhhcHBlbnMgc3ViY29uc2Npb3VzbHksIHBlb3BsZSB3aWxsIHRlbmQgdG8gYmxhZGUgdGhlbXNlbHZlcyB0b3dhcmRzIGEgcGVyY2VpdmVkIHRocmVhdC4gQmxhZGluZyByZWZlcnMgdG8gYSBjb21iYXQgc3R5bGUgc3RhbmNlLCB3aGVyZSB0aGUgZG9taW5hbnQgZm9vdCBpcyBiZWhpbmQgdGhlIG5vbiBkb21pbmFudCBmb290IGFuZCBhYm91dCBzaG91bGRlciB3aWR0aCBhcGFydC4gCiJOb3VzIHZvdWxvbnMgcXVlIGxhIHBlcnNvbm5lIHF1aSBkY2lkZSBkZSB2ZW5pciAgTWF0ZXJhIHZpdmUgdW5lIGV4cHJpZW5jZSIsIGV4cGxpcXVlIFBhb2xvIFZlcnJpLCBkaXJlY3RldXIgYXJ0aXN0aXF1ZSBkZSBNYXRlcmEgMjAxOS4gCk5vdyBoZXJlIGFyZSBzb21lIENvbnMgb2YgdGhlIHNpdGUuIApXaGlsZSBub3QgZm9yIGV2ZXJ5b25lLCB0aGUgdG9uZ3VlIGluIGNoZWVrIG5hdHVyZSBvZiBvdXIgYXBwcm9hY2ggZ2F2ZSBmYW5zIGEgcmVhc29uIHRvIHJvb3QgZm9yIHVzLiBXZSBsZXQgb3VyIGd1YXJkIGRvd24gYW5kIGV2ZW4gam9rZWQgdGhhdCBzb21lIG9mIHRoZW0gd291bGQgY2FsbCB1cyBzZWxsb3V0cyAoeWVwLCBhZ2FpbikgYnV0IGl0IHBsYXllZCB0byBvdXIgYmVuZWZpdC4gVGhlIGNvbW11bmljYXRpb24gc3R5bGUgc2FpZCB3ZSB1bmRlcnN0b29kIGFuZCBjb3VsZCByZWxhdGUgdG8gdGhlbSAoYW5kIHNvbWUgb2YgdGhlaXIgdHJvbGwgbGlrZSBpbnN0aW5jdHMpLkJlIGFkYXB0aXZlIGFuZCByZWFjdGl2ZVNpbXBseSBwdXQsIHNoaXQgY2FuIGdvIHdyb25nLiAKTWljaGFlbCBXLiAyNyBpbiB0aGUgRm91ciBDb3JuZXJzIGFyZWEgaXMgZmFjaW5nIHByb3N0aXR1dGlvbiBjaGFyZ2VzLiAKVGhhdCBwcmV0dHkgaW50ZXJlc3RpbmcgYW5kIEkgc2VlbiB0aGlzIHF1ZXN0aW9uIHBvc2VkIGVsc2V3aGVyZSBvbiBhIGRpZmZlcmVudCBmb3J1bS4gQSB2YXJpYXRpb24gcGVyaGFwcyBidXQgdGhlIG51bWJlciBvZiB5ZWFycyB3YXMgZGVmaW5pdGVseSAxMSBhbmQgc28gSSBhbSBpbnRyaWd1ZWQuIEp1cGl0ZXIgY2FtZSB0byBtaW5kIGJlZm9yZSBJIGV2ZW4gcmVhZCB5b3VyIHBvc3QsIGJ1dCB0aGUgc3lub2RpYyBjeWNsZSBpcyBjbG9zZXIgdG8gMTIgeWVhcnMgKDExLjkpIGFuZCBzb21lIG9mIHRoZSBjaGFydHMgeW91IHBvc3RlZCBkbyBub3QgY29ycmVsYXRlIChpdCB0b3VnaCB0byBtZWFzdXJlIHdpdGhvdXQgbW9yZSBzcGVjaWZpY2l0eSBvbiB0aGUgY2hhcnRzIHdpdGggZGF0ZXMgZXRjLikuIFRoZSBTYXR1cm4gY3ljbGUgYXBwZWFycyBvZmYgdG9vLCBidXQgSSBvbmx5IHRvb2sgYSBjdXJzb3J5IGdsYW5jZS4gTWF5YmUgcnVuIHRob3NlIGNoYXJ0cyBhZ2FpbiB1c2luZyB0aGUgcHJlY2lzZSB0aW1pbmcgb2YgdGhlIGV2ZW50cy4KVG8gcGxheSBkZXZpbCBhZHZvY2F0ZSwgdGhlIHJlYXNvbiB3ZSBnYXZlIGNlcnRhaW4ganVkZ2VzIGxpZmV0aW1lIGFwcG9pbnRtZW50cyB3YXMgc3VwcG9zZWQgdG8gYmUgc28gdGhhdCB0aGV5IHdvdWxkIG5ldmVyIGhhdmUgdG8gd29ycnkgYWJvdXQgbG9iYnlpbmcgaW50ZXJlc3RzLiBTaW5jZSB0aGV5IG5ldmVyIGhhdmUgdG8gcnVuIGZvciByZSBlbGVjdGlvbiwgdGhleSBjYW4gZm9jdXMgb24gaW50ZXJwcmV0aW5nIHRoZSBsYXcgY29ycmVjdGx5IHdpdGggdGhlIGZyZWVkb20gb2Ygbm90IGhhdmluZyB0byB3b3JyeSBhYm91dCB3aGVyZSB0aGVpciByZSBlbGVjdGlvbiBtb25leSBpcyBnb2luZyB0byBjb21lIGZyb20uIApEb3plbnMgYXJyZXN0ZWQgZm9yIHNleCB0cmFmZmlja2luZyBhaGVhZCBvZiBTdXBlciBCb3dsClRoZXkgbWVudGlvbiB0aGF0OiAiT3VyIHN0dWR5IHdhcyBhIGZpcnN0IGZvcmF5IGludG8gaW1hZ2luZyB0aGUgYnJhaW5zIG9mIHByb2Zlc3Npb25hbGx5IHRyYWluZWQgU2Fuc2tyaXQgcGFuZGl0cyBpbiBJbmRpYS4gQWx0aG91Z2ggdGhpcyBpbml0aWFsIHJlc2VhcmNoLCBmb2N1c2VkIG9uIGludGVyZ3JvdXAgY29tcGFyaXNvbiBvZiBicmFpbiBzdHJ1Y3R1cmUsIGNvdWxkIG5vdCBkaXJlY3RseSBhZGRyZXNzIHRoZSBTYW5za3JpdCBlZmZlY3QgcXVlc3Rpb24gKHRoYXQgcmVxdWlyZXMgZGV0YWlsZWQgZnVuY3Rpb25hbCBzdHVkaWVzIHdpdGggY3Jvc3MgbGFuZ3VhZ2UgbWVtb3JpemF0aW9uIGNvbXBhcmlzb25zLCBmb3Igd2hpY2ggd2UgYXJlIGN1cnJlbnRseSBzZWVraW5nIGZ1bmRpbmcpLiIKVGhlbiB0aGVyZSBpcyB0aGUgRmlyZVBheSwgYSBXZWIgYmFzZWQgY2FzaCBhY2NvdW50LiBGaXJlUGF5IGlzIGdyZWF0IHNpdGUgd2hlcmVpbiBwbGF5ZXJzIHdpdGggZnVuZCBhY2NvdW50cyBmcm9tIGEgVW5pdGVkIFN0YXRlcyBiYW5rIGNhbiBkaXJlY3RseSBvcGVuIGEgcG9rZXIgbW9uZXkgYWNjb3VudCB3aXRoIHRoZW0uIGJhbmsgYWNjb3VudC4KV0FTSElOR1RPTiAoQ2lyY2EpIER1cmluZyBoaXMgZmlyc3Qgd2VlayBpbiBvZmZpY2UsIFByZXNpZGVudCBEb25hbGQgVHJ1bXAgZnVsZmlsbGVkIGEgY2VudHJhbCBjYW1wYWlnbiBwcm9taXNlIGFuZCB3aXRoZHJldyB0aGUgVW5pdGVkIFN0YXRlcyBmcm9tIHRoZSBUcmFucyBQYWNpZmljIFBhcnRuZXJzaGlwIChUUFApLCB0aGUgMTIgbmF0aW9uIGZyZWUgdHJhZGUgYWdyZWVtZW50IHNpZ25lZCBieSBoaXMgcHJlZGVjZXNzb3IsIFByZXNpZGVudCBCYXJhY2sgT2JhbWEuIApPbiBhIHBvc3QsIHRoZXJlJ3MgYSBob29rLiAKUmVtYW5pcyBwb3VyIGwnZGl0aW9uLCBub3VzIHZvdXMgcHJvcG9zb25zIHVuZSBzbGVjdGlvbiBkZSAyMCBtb3RzIGdyZWNzIHF1aSBzb250IGFycml2cyBkYW5zIGxhIGxhbmd1ZSBmcmFuYWlzZSBhdSB0ZXJtZSBkJ3VuIGxvbmcgcGFyY291cnMgdHJhdmVyc2FudCBsYW5ndWVzIGV0IGN1bHR1cmVzLCBoaXN0b2lyZXMgZXQgc3Bpcml0dWFsaXRzLgpUaGUgY29tcGFueSBpcyBwYXJ0bmVyZWQgd2l0aCBSZXNvcnRzIENhc2lubyBIb3RlbCwgYW5kIGlzIGV4cGVjdGVkIHRvIGdpdmUgYSBib29zdCB0byBOZXcgSmVyc2V5IEludGVybmV0IGdhbWJsaW5nIG1hcmtldC4KV2UgaGF2ZSBhIHNvY2lldGFsIG1hbGFpc2UgZnJvbSBkZWNhZGVzIG9mIGluYWRlcXVhdGUgZ292ZXJubWVudCBpbmVydGlhIGFuZCB0aGUgZmVlbGluZ3Mgb2YgZnV0aWxpdHkgdGhhdCBmb2xsb3cuIFdlIGJlY29tZSBhY2N1c3RvbWVkIHRvIHN0ZXBwaW5nIHBhc3Qgb3VyIGZlbGxvdyBjaXRpemVucywgaHVkZGxlZCB1bmRlciBhd25pbmdzIGFuZCBpbiBkb29yd2F5cy4gV2Ugc3RhcnQgdG8gYWNjZXB0IHRoYXQgdGhpcyBpcyB0aGUgd2F5IHRoaW5ncyBhcmUuIApZb3UgYmUgbG9va2luZyBmb3IgYWNjb3VudHMgdGhlIGZ1dHVyZSBib3RoIGluIHRoaW5ncyBsaWtlIGNvbm5lY3RpbmcgdG8gd2VpcmQgc3RyYWlnaHRzLCBidXQgYWxzbyB0aGUgc2FtZSBhY2NvdW50cyBmb2xkaW5nIEFLIG9yIHNvbWV0aGluZyBwcmVmbG9wIHRvIHNldHMgdGhhdCB3b3VsZCBmbG9wLiBJZiBpdHMganVzdCBhbGwgaW5kaXZpZHVhbCBoYW5kcywgaXQgd291bGRuIHRlbGwgeW91IGlmIHRoZSBiZWhhdmlvdXIgaXMgd2VpcmQuIFlvdSBiZSBhYmxlIHRvIGFuYWx5c2lzIG9mIGlmIHRoZSBkZWFsaW5nIGlzIGZhaXIgb3Igbm90LCBidXQgdGhhdCBpdC4uIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblBPS0VSIG1hY2hpbmVzIGhlbHBlZCBwdXQgTXVsd2FsYSBhbmQgaXRzIHRocmVlIGxpY2Vuc2VkIGNsdWJzIG9uIHRoZSBtYXAsIGJ1dCB0aG9zZSBpbiBjaGFyZ2Ugb2YgdGhlaXIgb3BlcmF0aW9uIGFyZSBmZWFyZnVsIGNoYW5nZXMgdGhpcyB5ZWFyIGNvdWxkIHVubGVhc2ggZWNvbm9taWMgY2FybmFnZS4gClRoZSBmdXR1cmUsIHRoZSBwZW9wbGUgdGhhdCB0aGUgVUZDIHdhbnRzIHRvIHBheSBmb3IgdGhlIGF3ZnVsIGZpZ2h0IGtpdHMsIGpvaW4gdGhlIHJld2FyZHMgcHJvZ3JhbSwgYW5kIGJ1eSB0aGUgUFBWcywgdGhvc2UgYXJlIHRoZSBvbmVzIHRoZXkgd29ycnlpbmcgYWJvdXQgYW5kIG1hcmtldGluZyB0by4gCldlIGRyb3BwZWQgdGhlbSBvZmYgYXQgYSBob3N0ZWwgd2l0aCBoYW1tb2NrcyBhbmQgYWxsIEkgY291bGQgdGhpbmsgd2FzIHRoYXQgSSBhbSBkZWZpbml0ZWx5IHRvbyBvbGQgdG8gc3RheSBpbiBwbGFjZXMgdGhhdCBhcmUgJDQgYSBuaWdodCEgT3VyIGhvdGVsIGhhZCByZWNvbW1lbmRlZCB3ZSBnbyB0byBQbGF5YSBSb2NhIGluIExhcyBQZW5pdGFzLiBXZSBpbWFnaW5lZCByZW50aW5nIGEgY2hhaXIgYW5kIHVtYnJlbGxhLCBzd2ltbWluZyBpbiB0aGUgZ2VudGxlIHdhdGVyLCBlYXRpbmcgZnJlc2ggZmlzaCB0YWNvcy4gCklmIGEgbWFuIGFuZCBhIHdvbWFuIGVhY2ggcGxhY2UgdGhlaXIgaGFuZHMgb24gYSBob3Qgc3RvdmUsIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGVpciBicmFpbnMgd2lsbCBhY3RpdmF0ZS4gSW4gMjAwMywgcmVzZWFyY2hlcnMgYXQgVUNMQSBkaXNjb3ZlcmVkIHRoYXQgdGhlIGNvZ25pdGl2ZSwgb3IgYW5hbHl0aWMsIHJlZ2lvbiBvZiB0aGUgbWFsZSBicmFpbiBsaWdodHMgdXAsIHdoaWxlIHRoZSBmZW1hbGUgbGltYmljIHN5c3RlbSwgdGhlIGJyYWluJ3MgZW1vdGlvbmFsIGhlYWRxdWFydGVycywgc3ByaW5ncyBpbnRvIGFjdGlvbiBbc291cmNlOiBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgICBMb3MgQW5nZWxlc10uLiAKVGhlIHByb2JhYmlsaXR5IG9mIGRlYWxpbmcgdGhlIEtpbmcgb2YgU3BhZGVzIG5leHQgaXMgMSBpbiA1MS4gCiJJIGRpZG4ndCBsb3NlIGhvdXNlcywgY2FycywgZnJpZW5kc2hpcHMgb3IgcmVsYXRpb25zaGlwcywiIGhlIHNhaWQuICJZb3UgY2FuIGdldCBoZWxwIGJlZm9yZSBpdCBnZXRzIHRvIHRoYXQgcG9pbnQuIiBIaW5kbWFyc2gsIHdobyBzcG9rZSB0byAxNTAgcGVvcGxlIGF0IEFsYnVyeSBUQUZFIGFzIGFuIGFtYmFzc2Fkb3IgZm9yIENsdWJzIE5TVyBmb3IgUmVzcG9uc2libGUgR2FtYmxpbmcgQXdhcmVuZXNzIFdlZWssIGVuY291cmFnZWQgcGVvcGxlIHRvIHNwZWFrIHVwIGlmIHRoZXkgd2VyZSBjb25jZXJuZWQgYWJvdXQgdGhlaXIgZ2FtYmxpbmcgaGFiaXRzLiAKTW9lc3QgaWsgbnUgZWNodCB0ZXJtaW5hYWwgemlqbiBkYW4gem91IGlrIGhldCBhbmRlcnMgZG9lbiwgaWsgbm9kaWcgbWlqbiBmYW1pbGllIHVpaSBvbSBlZW5zIGVlbiByZWlzIHRlIG1ha2VuIG5hYXIgQ2hpbmEgZW4gZGFhciB0ZSBnZW5pZXRlbiB2YW4gYWwgd2F0IG1vb2lzIGlzLiBEZSBrb3N0ZW4gbW9nZW4gZGFuIG9wbG9wZW4gdG90IDIwMDAwIEV1ciwgZGllIGJldGFhbCBpayBkYW4gemVsZi4gWm8gaGVlZnQgbWlqbiBmYW1pbGllIG9vayBlZW4gbW9vaWUgaGVyaW5uZXJpbmcgYWFuIGRlIGxhYXRzdGUgcGVyaW9kZSBkYXQgd2lqIGJpaiBlbGthYXIgd2FyZW4uIApUaGV5IHRoZW4gaGF2ZSBhIGNoYW5jZSB0byB2ZXJpZnkgdGhlIGFjY3VyYWN5IG9mIHdoYXQgeW91IGhhdmUgaGVhcmQgYW5kIHVuZGVyc3Rvb2QuIFlvdSBzZWxlY3QgeW91ciBvd24gd29yZHMgdG8gZGVzY3JpYmUgdGhlIG90aGVyJ3MgZXhwZXJpZW5jZS4gSW4gZG9pbmcgdGhpcyBpdCBpcyBpbXBvcnRhbnQgdGhhdCB5b3UgZG8gbm90IGFkZCB0byBvciBkaXN0b3J0IHRoZSBvdGhlcidzIG1lYW5pbmcuVGhpcyBpcyBhIHZlcnkgaW1wb3J0YW50IGxpc3RlbmluZyB0b29sIGFzIGl0IG1pcnJvcnMgdGhlIG1lYW5pbmcgYW5kIGZlZWxpbmcgb2Ygd2hhdCBoYXMgYmVlbiBzYWlkLiAKV2hlbiB5b3Ugc2F5ICJnbGFzc2VzIiwgaXQgaXMgcGx1cmFsLiBBICJnbGFzcyIgaXMgb25lIG9mIHRoZSBsZW5zZXMuICJHbGFzc2VzIiB3b3VsZCByZWZlciB0byBib3RoIG9mIHRoZSBsZW5zZXMsIGFuZCBhICJwYWlyIG9mIGdsYXNzZXMiIGRvZXNuJ3QgbWVudGlvbiBhbnl0aGluZyBhYm91dCB0aGUgZnJhbWUsIGJ1dCBpdCBtZW50aW9ucyB0aGUgdHdvIGxlbnNlcy4gV2hlbiB5b3Ugc2F5ICJhIHBhaXIgb2YgZ2xhc3NlcyIsIHlvdSBhcmUgcmVmZXJyaW5nIHRvIHRoZSAicGFpciBvZiBsZW5zZXMiLCBub3QgdGhlIGZyYW1lLiBUaGUgZnJhbWUgaG9sZGluZyB0aGUgdHdvIGxlbnNlcyBtYWtlcyB1cyB0aGluayB0aGF0IGl0IGlzIG9uZSBvYmplY3QsIHdoZW4gdGhlIHdvcmQgImdsYXNzZXMiIHJlZmVycyBvbmx5IHRvIHRoZSBsZW5zZXMsIG5vdCB0aGUgZnJhbWUuIFRoYXQgaXMgd2h5IGl0IGlzIGNhbGxlZCAiYSBwYWlyIG9mIGdsYXNzZXMiLiAoRnVsbCBBbnN3ZXIpCkZyYW5rbGluIFBlYWxlLCAiVGFibGUgb2YgUHJvcGVydGllcyBvZiB0aGUgTWV0YWxzLCB0YWtlbiBmcm9tIGEgdGFibGUgYnkgTS4gQ2hhdWRldCBvZiB0aGUgUGFyaXMgTWludCIsIHBwIDM3NSAzODUuIFRoaXMgaXMgYmFzaWNhbGx5IGEgdGFidWxhciByZXBvcnQgb24gMzQgbWV0YWxzLCBsaXN0ZWQgYWxwaGFiZXRpY2FsbHksIGFuZCBpbmNsdWRpbmcgZGF0ZXMgb2YgZGlzY292ZXJ5IGFuZCB0aGUgbmFtZXMgb2YgZGlzY292ZXJlcnMsIHBsdXMgdGhlIG5hbWVzIGFuZCBsb2NhdGlvbnMgb2YgdGhlIHByaW5jaXBsZSBtaW5lcywgcGx1cyBjb2xvciwgY2hhcmFjdGVyLCBzdGFiaWxpdHksIHNwZWNpZmljIGdyYXZpdHksIHN0YXRlIGluIHdoaWNoIHRoZSBtZXRhbHMgYXJlIGZvdW5kLCBhbmQgc2V2ZXJhbCBvdGhlciBwcm9wZXJ0aWVzLiAKSW4gRW5nbGlzaCwgbm91bnMgZG9uIGhhdmUgYSBncmFtbWF0aWNhbCBnZW5kZXIsIHNvIHRoZSB3b3JkIGNpdGl6ZW4gaXMgdXN1YWxseSBub3QgcGVyY2VpdmVkIGFzIG1hc2N1bGluLCB3aGlsZSBpdCBpcyBpbiBHZXJtYW55LiAKV2hlbiB0aGUgYmFieSByZWFjaGVzIGZ1bGwgc2l6ZSBzaGUgcmVsZWFzZXMgaG9ybW9uZXMgdGhhdCBpbiB0dXJuIHRyaWdnZXIgdGhlIHJlbGVhc2Ugb2YgYSBudW1iZXIgb2Ygb3RoZXIgaG9ybW9uZXMgYnkgdGhlIG1vdGhlciB0aGF0IGNhdXNlIHRoZSBtdXNjbGVzIG9mIHRoZSB1dGVydXMgdG8gY29udHJhY3QuIApTb21lIHBva2VyIHByb2R1Y3RzIGxpa2UgQmFkIEJlYXQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaGFzIGFsc28gYmVjb21lIHN1Y2Nlc3NmdWwgd2l0aCB0aGF0LiAKU3BlbnQgOCBtb250aHMgZ29pbmcgdG8gbXkgZG9jdG9yIGZvciBjaHJvbmljLCBkZWJpbGl0YXRpbmcgYmFjayBwYWluLiBOZXZlciBvbmNlIGFza2VkIGZvciBwYWluIG1lZHMsIG5ldmVyIG9uY2UgYXNrZWQgZm9yIG5vdGVzIG9mZiBvZiB3b3JrLiBBdCB0aGUgZW5kIG9mIHRob3NlIDggbW9udGhzLCB3aGVuIHNoZSB3YXMgU1RJTEwgaW5zaXN0aW5nIHRoYXQgSSBoYXZlIGFueGlldHkgYW5kIGRlcHJlc3Npb24sIG5vdCBwaHlzaWNhbCBwYWluLCB3ZSBnb3QgaW50byBhIHllbGxpbmcgbWF0Y2ggYW5kIEkgaW5zaXN0ZWQgc2hlIHNlbmQgbWUgdG8gc29tZW9uZSB3aG8gd291bGQgaGVscCBtZS4gU2hlIHJlZmVycmVkIG1lIHRvIGEgcHN5Y2hvbG9naXN0IGFuZCBhIHBhaW4gc3BlY2lhbGlzdCAodGhlIGxhdHRlciB3YXMgYSBGSUdIVCkuIFdpdGhpbiAyIG1vbnRocyAoaW5jbHVkaW5nIHRoZSB3YWl0IHRvIGdldCBpbnRvIHRoZSBzcGVjaWFsaXN0KSB0aGV5IGhhZCBhIHZlcnkgZ29vZCBpZGVhIHdoYXQgaXQgd2FzLCBqdXN0IHRvb2sgc29tZSB0ZXN0aW5nLCBhbiBhdHRlbXB0IGF0IFBUICh3aGljaCBmYWlsZWQpIGFuZCB0aGVuIGEgcHJvY2VkdXJlIHRvIGdldCBzdGVyb2lkcyBpbnRvIHRoZSByaWdodCBwYXJ0IG9mIG15IGJhY2ssIHdoaWNoIGZpbmFsbHkgdG9vayBjYXJlIG9mIGFib3V0IDg1JSBvZiBteSBwYWluLgpJIHBsYXkgb25saW5lIHBva2VyLiAKIkFsbCBiYXNpYyByaWdodHMgc2hvdWxkIGJlIHByb3RlY3RlZCByZWdhcmRsZXNzIG9mIHNhaWQgVGhlb2RvcmUgVy4gU3RlcGhlbnMsIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiBIUkMuIApHZXQgYSByYW5jaCBob21lIGZlZWwgYnkgYWRkaW5nIGEgZGlmZmVyZW50IGFycmF5IG9mIHRhYmxlcyB0byB5b3VyIGxpdmluZyByb29tIG1peC4gQSB0ZWFrIHNpZGUgdGFibGUgbWFkZSBvZiByZWNsYWltZWQgdGVhayB0aW1iZXJzIGZyb20gYWdlZCBmYXJtIGhvbWVzLCBhYmFuZG9uZWQgb3ggY2FydHMsIGFuZCBvdGhlciB3ZWF0aGVyZWQgZmFybSBpbXBsZW1lbnRzIHdvdWxkIGJlIHByYWN0aWNhbCBjaG9pY2VzLiAKV2hlbiBpIHdhcyBhIHN1cGVydmlzb3IgaW4gcmV0YWlsIGkgaGFkIGEgY3VzdG9tZXIgYXNrIHRvIHNwZWFrIHRvIGEgbWFuYWdlciwgYXBwYXJlbnRseSB3aGVuIGNoZWNraW5nIGhlciBpdGVtcyB0aGUgY2FzaGllciBhY2NpZGVudGFsbHkgZHJvcHBlZCBoZXIgcGFja2FnZSBvZiBjaGlja2VuLiAKSSB3b3JyaWVkIHRoYXQgYmVjYXVzZSBJIG5vdCBhIHR5cGljYWwgdGFyZ2V0IGZvciB0aGlzIGxhdyAobm8gQUlEUywgZXRjLikgdGhhdCB0aGUgc3RhdGUgbWF5IHNlZWsgbWUgb3V0IGFuZCBwcm9zZWN1dGUgbWUsIG9yIHRoYXQgSSBtYXkgZW5kYW5nZXIgbXkgZmFtaWx5IGhlYWx0aCBjYXJlLCBldGMKQW50cyB3ZXJlIHdlaXJkIGJlY2F1c2UgdGhlIGxlZ3Mgd2VyZSBzbWFsbCBlbm91Z2ggdG8gZ2V0IHN0dWNrIGluIG15IHRlZXRoLiAKV3JpdGluZyBteSBjb21tZW50cyBJIHdhcyBib3RoIGh1cnQgYW5kIGFuZ3J5IGF0IHRoZSBzYW1lIHRpbWUuIFdoZW4geW91bmcsIHRyeWluZyB0byBtYWtlIGl0IG15IG1lYWxzIHdlcmUgbWFjIG4gY2hlZXNlIC4xOSBhIGJveCBtaXhlZCB3aXRoIGVpdGhlciB0dW5hIC4zNiBhIGNhbiBob3QgZG9ncyBtYXliZSAuNjkgYSBwYWNrYWdlLiBJIHRoaW5rIHlvdSBnZXQgdGhlIGlkZWEuIFByaWNlcyB3ZXJlIGRpZmZlcmVudCB0aGVuIGFzIHdlcmUgcGVyIGhvdXIgcmF0ZXMgZm9yIHdvcmsuIEkgaGFkIGxvYW5zIHRvIHBheSBzbyBJIGxpa2Ugc29tZSBvZiB5b3UsIHdhcyB3b3JraW5nIHR3byBqb2JzLiBTbyByZWFkaW5nIGFuIGluZGl2aWR1YWwgbWFrZSBzdWNoIHN0YXRlbWVudHMgd2l0aG91dCBldmVyIGZhY2luZyB0cnVlIGFkdmVyc2l0eSdzIHRydWx5IHJlZmxlY3RzIHRoZSBjbGFzcyBkaXNjb25uZWN0LgpDdXJpb3VzIHRvIGtub3cgaWYgYW55b25lIGhhcyBoYWQgYSBwcm9ibGVtIHdpdGggdGhlIENhcmIgR3VhcmQuIEkgaGF2ZSA5IGhvcnNlcyBvbiB0d28gc2VwYXJhdGUgcHJvcGVydGllcy4gVGhleSBlYXQgZGlmZmVyZW50IGhheSBmcm9tIGRpZmZlcmVudCBmYXJtcywgYW5kIGhhdmUgbm8gYWNjZXNzIHRvIGdyYXNzICh1bmZvcnR1bmF0ZWx5KS4gSSBoYXZlIGZlZCBDb250ZW5kZXIgZm9yIHNldmVyYWwgeWVhcnMsIGFuZCBkZWNpZGVkIHRvIHN3aXRjaCB0byB0aGlzIG5ldyBwcm9kdWN0IGJlY2F1c2UgaXQgc291bmRlZCBtb3JlIGFwcHJvcHJpYXRlIGZvciBteSBoZXJkcy4KQXVjaCBhdWYgZGllIEdlZmFociBoaW4sIGRhc3MgSWhyIFBhcnRuZXIgZW50dHVzY2h0IGlzdCwgd2VpbCBlciBTaWUgZ2VybmUgbWFzc2llcmVuIHdyZGU6IE5pY2h0IGFsbGUgRnJhdWVuIGtubmVuIGVpbmUgTWFzc2FnZSB3aHJlbmQgZGVyIEdlYnVydCBnZW5pZWVuLiAKTm8sIGkgZG9uIGFsd2F5cyBoYXZlIHRoZSBlbmVyZ3kuIApUaGlzIHByb2JsZW0gY2FuIG1ha2UgeW91IGZlZWwgdGlyZWQgYWxsIGRheSBsb25nLCBhbmQgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gYmUgYXMgcHJvZHVjdGl2ZSBhcyB5b3Ugc2hvdWxkLiAKVGhvc2UgamFja3MgYXJlIHN1cGVyIGNoZWFwIGFuZCB0aGUgaW50ZXJuYWwgY29udGFjdHMgd2lsbCBkZWZpbml0ZWx5IGdldCBiZW50IGFmdGVyIG1vbnRocy95ZWFycyBvZiB1c2UgYW5kIG5vIGxvbmdlciBtYWtlIGdvb2QgY29udGFjdC4gWW91IG1pZ2h0IGJlIGFibGUgdG8gcHJ5IHRoZSBqYWNrcyBvcGVuIChpdCBsb29rcyBsaWtlIHRoZXJlIG1pZ2h0IGJlIGEgInBhbmVsIiBzb3J0IG9mIHBpZWNlIG9uIHRoZSB0b3AsIGJhc2VkIG9uIHlvdXIgcGhvdG8pIGFuZCB1c2UgYSBzbWFsbCBzY3Jld2RyaXZlciB0byBiZW5kIHRoZSBwaW5zIGlud2FyZCBzbyB0aGV5IG1ha2UgYmV0dGVyIGNvbnRhY3QuCklmIHlvdSBzZWxsIDMwMCBDbGF5IFBva2VyIENoaXBzIG9ubGluZSwgaXQgaXMgaW1wb3J0YW50IHRvIGtub3cgYW5kIHVuZGVyc3RhbmQgd2hhdCB0eXBlcyBvZiB3ZWIgaG9zdGluZyBpcyBhdmFpbGFibGUgZm9yIHlvdXIgd2Vic2l0ZS4gSW4gdGhpcyBob3cgdG8gZ3VpZGUsIHlvdSB3aWxsIGJlIGludHJvZHVjZWQgdG8gdGhlIHBvcHVsYXIgd2ViIGhvc3RpbmcgdHlwZXMgdGhhdCBtYW55IGhhdmUgZm91bmQgdG8gYmUgc3VjY2Vzc2Z1bCB3aGVuIGl0IGNvbWVzIHRvIHNlbGxpbmcgcmV0YWlsIG9ubGluZS4gSWYgeW91IGFyZSBsb29raW5nIHRvIHN1Y2NlZWQgd2hlbiBpdCBjb21lcyB0byBzZWxsaW5nIENsYXkgUG9rZXIgQ2hpcHMgb24gdGhlIGludGVybmV0LCBoYXZpbmcgYSBnb29kIHdlYiBob3N0IG1heSBiZSB0aGUgY29tcG9uZW50IHRoYXQgeW91IG5lZWQuIE5vdywgSSB3aWxsIHRlYWNoIHlvdSBob3cgdG8gaWRlbnRpZnkgcG9wdWxhciB3ZWIgaG9zdGluZyB0eXBlcyBmb3IgeW91ciBidXNpbmVzcyB0aGF0IHNlbGxzIDMwMCBDbGF5IFBva2VyIENoaXBzLgpJbiBoZXQga2xlaW5lIGRvcnBqZSBQYXRhIChsZXVrZSBuYWFtKSBzdG9wZW4gd2Ugb29rIHZvb3IgZWVuIGNhY2hlLiAKQnV0IEkgdGhpbmsgaXQgY2xlYXJseSB3b3VsZCBoYXZlIGJlZW4gYmV0dGVyIHRvIGhhdmUgdGhvc2UgNCBwb2ludHMgdGhhbiBub3QuIE1pc3NpbmcgdGhhdCBGRyByaWdodCBiZWZvcmUgdGhlIGhhbGYgd2FzIGEga2lsbGVyLCB0aG91Z2gsIG5vIG1hdHRlciB3aGF0LiBZb3Ugb24gdGhlIHJvYWQgaGF2aW5nIHRha2VuIEtDIGJlc3QgcHVuY2gsIGdvaW5nIGludG8gaGFsZnRpbWUgd2l0aCB0aG9zZSAzIHB0cyBtYWtlcyB5b3UgZmVlbCBsaWtlIHRoZSBDb2x0cyBhdCBsZWFzdCBhcmUgZmlnaHRpbmcgYmFjayBhbmQgcGVyaGFwcyBoYXZlIHNvbWUgbW9tZW50dW0uIApVVEcgd2FzIHRoZSBQRlIgYW5kIHRoZW4gY29udGludWF0aW9uIGJldCB0aGUgZmxvcCBhdCB3aGljaCBwb2ludCBoZSBnb3QgY2FsbGVkLiBBdCB0aGF0IHBvaW50IGlmIGhlIGhhZCBhaXIgaGUgd291bGQgc2xvdyBkb3duIGFuZCBwcm9iYWJseSBqdXN0IGNoZWNrL2ZvbGQgdGhlIHR1cm4uIApMZXMgbWlzZXMgZGVzIGpvdWV1cnMgb250IGRwYXNzIGxlcyAxNSBtaWxsaWFyZHMgbCdhbiBkZXJuaWVyLCBjb250cmUgMTQsMyBlbiAyMDE2LgpFZHVjYXRpb24gUmVxdWlyZW1lbnRzVGhlIHJlcXVpcmVtZW50cyBmb3IgYmVjb21pbmcgYSBwb2xpY2Ugb2ZmaWNlciBpbiBOZXcgWW9yayBpbmNsdWRlIHRoYXQgdGhlIGFwcGxpY2FudCBpcyBhdCBsZWFzdCBhZ2UgMjEsIGhhcyA2MCBjb21wbGV0ZWQgY29sbGVnZSBjcmVkaXRzLCBhbmQgaGFzIHN1Y2Nlc3NmdWxseSBwYXNzZWQgYSB3cml0dGVuIGV4YW0sIGEgbWVkaWNhbCBleGFtLCBwc3ljaG9sb2dpY2FsIGV4YW1zIGFuZCBhIGJhY2tncm91bmQgY2hhcmFjdGVyIGludmVzdGlnYXRpb24uIFR3byB5ZWFycyBvZiBtaWxpdGFyeSBzZXJ2aWNlIGNhbiBiZSBzdWJzdGl0dXRlZCBmb3IgY29sbGVnZSBjcmVkaXQuIAovci9Bc3Npc3RhbmNlICAgRm9yIGNoYXJpdHkgYW5kIEdvRnVuZE1lIGNhbXBhaWduc0JlY29tZSBhIFJlZGRpdG9yYW5kIHN1YnNjcmliZSB0byBvbmUgb2YgdGhvdXNhbmRzIG9mIGNvbW11bml0aWVzLjJUaGV5IGFza2VkIG1lIHRvIHRha2UgSHlkcm8gZmxhc2sgb3V0IG9mIHRoZSBLaWNrc3RhcnRlciB0aXRsZSBhbmQgdG8gcmVtb3ZlIGFueSBsb2dvcyBmcm9tIHRoZSBib3R0bGVzLiAKU2V0IHVwIG11bHRpcGxlIGlzc3VlcyBhbmQgaGF2ZSBlYWNoIGdyb3VwIHRyeSB0byBzdG9wIHRoZW0uIElmIGEgZ3JvdXAgZmFpbHMgdGhlcmUgYXJlIGNvbnNlcXVlbmNlcyB0aGF0IGFmZmVjdCBhbGwgdGhlIGdyb3Vwcy4gRXRjLgpXZSBsaXZlZCBzZXZlcmFsIHN0YXRlcyBhd2F5IHRoaXMgd2FzIGJhY2sgYmVmb3JlIGV2ZXJ5b25lIHRoZWlyIGJyb3RoZXIgaGFkIHN1cnZlaWxsYW5jZSBjYW1lcmFzIHNldCB1cCBzbyBub3RoaW5nIGV2ZXIgY2FtZSBvZiBpdC4gSSBsaWtlIHRvIGltYWdpbmUgdGhlIGJhc3RhcmQgbGVhcm5lZCBoaXMgbGVzc29uIGJ1dCByZWFsaXN0aWNhbGx5IEkgZG91YnQgaGUgZGlkLnJlZXJlZWp1Z3MgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIG5ldmVyIGxldCBteSBraWRzIHdhdGNoIHNob3dzIHRoYXQgcG9ydHJheWVkIHBhcmVudHMgdGhhdCB3YXkgd2hlbiB0aGV5IHdlcmUgbGl0dGxlIGJlY2F1c2Ugb2YgdGhlIGhvcnJpYmxlIG1lc3NhZ2UgdGhleSBzZW5kIHRvIHNtYWxsIGNoaWxkcmVuLiAKVGhlIElHVCBQRSBQbHVzIG11bHRpIGdhbWUgdmlkZW8gcG9rZXIgaXMgYSBmaXZlIGdhbWUgdmlkZW8gcG9rZXIuIEl0IGlzIGEgdmVyeSBzdGFibGUgcGxhdGZvcm0gYW5kIGlzIGJlY29taW5nIHBvcHVsYXIgb3ZlcnNlZXMgYmVjYXVzZSBvZiBpdHMgYWdlLiBBIEJhbGx5IEdhbWUgTWFrZXIgaXMgYSAxMCBnYW1lIHRvdWNoIHNjcmVlbiBwbGF0Zm9ybSB3aGVyZSB5b3UgY2FuIG1peCwgc2xvdHMsIHRhYmxlIGdhbWVzIGFuZCBrZW5vLiAKU2hlIG5ldmVyIHBpY2tlZCB1cCB0aGUgY3JhcHB5IHBsYXN0aWMgYW5kIGNhcmRib2FyZCB2ZXJzaW9uIG9mIENhbmR5bGFuZCBhZ2Fpbi4uIApJZiB0aGUgcm9sZXMgYXNzaWduZWQgdG8gbWVuIGFuZCB3b21lbiBjaGFuZ2UgYmFzZWQgb24gdGhlIG5lZWRzIG9mIHNvY2lldHksIHRoZW4gd2hhdCBiYXNpcyBpcyB0aGVyZSB0byBzYXkgdGhhdCBnZW5kZXIgcm9sZXMgYW5kIGdlbmRlciBpdHNlbGYgaXMgYW55dGhpbmcgb3RoZXIgdGhhbiBzb2NpZXRhbD8gVGhpcyBpcyBhbGwgd2l0aG91dCBnb2luZyBpbnRvIHRoZSBleGlzdGVuY2Ugb2YgdGVydGlhcnkgZ2VuZGVycyBpbiBvdGhlciwgdXN1YWxseSBub24gV2VzdGVybiBjaXZpbGl6YXRpb25zLCB3aGljaCBoYXZlIGJlZW4gb2JzZXJ2ZWQgYW5kIGRvY3VtZW50ZWQgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHlvdSBjaG9vc2UgdG8gYWNrbm93bGVkZ2UgdGhlbS4uIApJY2ggZ2xhdWJlIG5pY2h0LCBkYXNzIHdpciBoaWVyIGVpbmZhY2ggbnVyIHZvbiAiZWluIHBhYXIgQ2VudCBmciBTY2hlaWUiIHVuZCBhc3NpZ2VuICJuYWNoIG1pciBkaWUgU2ludGZsdXQiIEJyZ2VybiBzcHJlY2hlbi4gRXMgc2luZCBqYSBuaWNodCBudXIgZGllIEx1eHVzZW5kcHJvZHVrdGUgdm9uIGRlaW5lciBIYXVzIG1pdCBHYXJ0ZW4gSGF1c3RyIGltIFNwZWNrZ3J0ZWwsIGVzIHNpbmQgYXVjaCBzY2hvbiBadWxpZWZlcmVyIGRpZSBoaWVyIGJldHJvZmZlbiB3cmVuIHVuZCBkaWUgZ2VzYW10ZSBXYXJlbmtldHRlLiBEYSBobmdlbiBhdWNoIGJlcmFsbCBBcmJlaXRzcGx0emUgZHJhbi4KSSBuZXZlciBtYWtlIHRoZSBuZXh0IGNsaWVudCBwYXkgZm9yIHRoZSBwcmV2aW91cyBwZXJzb24gbWlzdGFrZS4gSUYgSSBoYXBwZW4gdG8gaGF2ZSBhIGJyZWFrIGluIG1hc3NhZ2VzIGFmdGVyIHRoZSBsYXRlIHBlcnNvbiBBTkQgSSBmZWVsaW5nIG5pY2UgKG1haW5seSBpZiB0aGUgbGF0ZSBwZXJzb24gaXMgZ2VudWluZWx5IHNvcnJ5IGFuZCBuaWNlKSB0aGFuIEkgcnVuIGludG8gbXkgb3duIGJyZWFrIHRpbWUgdG8gbWFrZSB1cCB0aGUgZGlmZmVyZW5jZSBidXQgbmV2ZXIgaW50byBzb21lb25lIGVsc2UgSSB3b3JrIGF0IGEgcmVzb3J0IHNvIGNsaWVudCByZXRlbnRpb24gaXNuIGFzIGltcG9ydGFudCBhcyBnaXZpbmcgZ29vZCBtYXNzYWdlcyB0byBhbGwgb2YgbXkgY2xpZW50IChpZiB5b3UgcnVuIDEwIG1pbnMgbGF0ZSBmb3Igb25lIHBlcnNvbiB0aGF0IG1lYW5zIHlvdSBnb2luZyB0byBydW4gMTAgbWlucyBsYXRlIGZvciBldmVyeSBjbGllbnQgZm9yIHRoZSByZXN0IG9mIHRoZSBkYXkgdW5sZXNzIHlvdSBjdXQgaW50byBzb21lb25lIHRpbWUpIHNvIEkgcmF0aGVyIG9uZSBjbGllbnQgYmUgdXBzZXQgYXQgdGhlaXIgb3duIG1pc3Rha2UgdGhhbiBoYXZlIDQgb3IgNSBwZW9wbGUgZmVlbCBqaXBwZWQuIApSb2IgRmxldGNoZXIgaGFzIHNjb29wZWQgYSBzcG90IGluIHRoZSBSZWR0b290aCBQb2tlciBWZWdhcyAxMDAgdG91cm5hbWVudCBhZnRlciBiZWF0aW5nIG9mZiBwbGF5ZXJzIGZyb20gYWNyb3NzIHRoZSBjb3VudHJ5IHdpdGggaGlzIGNhcmQgc2tpbGxzLgpMYSBncm9zc29waG9iaWUgZmFpdCBncm9zc2lyICEgRXQgY2VsYSBjb21tZW5jZSBwYXIgbGEgZ3Jvc3NvcGhvYmllIGZhbWlsaWFsZS4gT24gZXN0IHRvdXMgZGlmZnJlbnQoZSlzIGV0IHBhcyB0b3VzIGZhaXQoZSlzIHBvdXIgdHJlIGRlcyBicmluZGlsbGVzLiBVbiBlbmZhbnQgcGV1dCBhdm9pciB1bmUgbW9ycGhvbG9naWUgdW4gcGV1IG1vaW5zIGZpbmUgcXVlIGxlIHJlc3RlIGRlIGxhIGZhbWlsbGUuIApPbiB0aGUgb3RoZXIgaGFuZCwgb25saW5lIHBva2VyIGdhbWVzIGhhdmUgZGlmZmVyZW50IHdheXMgb2YgbWFuYWdpbmcgcG9rZXIgbW9uZXkuIE1vc3Qgb2YgdGhlIG9ubGluZSBwb2tlciB3ZWJzaXRlcyByZXF1aXJlIHRoZWlyIHBsYXllcnMgdG8gaGF2ZSB0aGVpciBwb2tlciBtb25leSBhY2NvdW50cyB0aHJvdWdoIGRlcG9zaXRzLiAKSGVyIGNvbW1vcmF0aXZlIHBpY3R1cmUgcmVwcmVzZW50cyBub3Qgb25seSBtZSBmaW5pc2hpbmcgdGhlIGdhbWUgYnV0IGFsbCB0aGF0IHRpbWUgd2Ugc3BlbnQgdG9nZXRoZXIgb24gaXQgb3ZlciB0aGUgeWVhcnMuIEl0IG9uZSBvZiBteSBncmVhdGVzdCB0cmVhc3VyZXMuLiAKVGhlIGZ1dHVyZSBvZiAiTWVneW4gS2VsbHkgVG9kYXkiIGlzIGluIHF1ZXN0aW9uIGFmdGVyIHRoZSBob3N0IG1hZGUgb2ZmZW5zaXZlIGNvbW1lbnRzIGFib3V0IGJsYWNrZmFjZSBIYWxsb3dlZW4gY29zdHVtZXMgZWFybGllciB0aGlzIHdlZWsuIEJ1dCBmb3IgYWR2ZXJ0aXNlcnMsIGl0J3MganVzdCBhbm90aGVyIGJsaXAgb2YgZHJhbWEgaW4gYSBuZXdzIG1hcmtldHBsYWNlIHRoYXQgaGFzIGJlY29tZSBsaXR0ZXJlZCB3aXRoIGNhbGxzIGZvciBib3ljb3R0cyBhbmQgZGVtYW5kcyB0byBwdWxsIHRhbGtpbmcgaGVhZHMgb2ZmIG5ldHdvcmtzLiBUaGUgc2hvdywgbW9yZW92ZXIsIGhhcyBiZWVuIGJyaW5naW5nIGluIHBvb3IgcmF0aW5ncyBldmVuIGJlZm9yZSB0aGUgaW5jaWRlbnQuLiAKUHJvZ3JhbSBTcGVjaWFsaXN0IHRvIGd1aWRlIHlvdSBpbiBtYWtpbmcgZm9sbG93IHVwIGFwcG9pbnRtZW50cyBhbmQgYW5zd2VyIHF1ZXN0aW9ucwpFcyBpc3QgendhciBlcmtlbm5iYXIsIGRhc3MgaW4gZGVuIHMgZGllIEFuemFobCBkZXIgIGlubmVuIGJlcmVpdHMgZGV1dGxpY2ggenVnZW5vbW1lbiBoYXQuIApUaGF0IGlzIHRoZSBraW5kIG9mIGZhY3QgcGF0dGVybiB0aGF0IHdpbGwgbWFrZSBpdCBoYXJkIHRvIGNvbnZpbmNlIENSQSB5b3Ugc2V2ZXJpbmcgcmVzaWRlbnRpYWwgdGllcy4gS2VlcGluZyBhIHByb3BlcnR5IGFzIGEgZmFsbGJhY2sgaW4gbWluZCB3b3VsZCBiZSBpbmRpY2F0aXZlIG9mIHlvdSBtYWludGFpbmluZyByZXNpZGVudGlhbCB0aWVzLgpJIHRvbGQgdGhlbSBmdWNrIG9mZiwgSSBqb2luZWQgYW5vdGhlciB0ZWFtLCBnb3QgbWF0Y2hlZCB3aXRoIHRoZW0gYW5kIHByb2NlZWRlZCB0byBkZXN0cm95IHRoZWlyIHRlYW0gd2l0aCBob2cuLiAKVGhlIGZpbG0gd2UnbGwgcXVvdGUgdGhpcyB3ZWVrIGluc3RlYWQgb2YgbWFraW5nIHJhbmNvciBpbmR1Y2luZyBwcmVkaWN0aW9ucyB0aGF0IG1ha2Ugb3Zlcndyb3VnaHQsIHVuZGVyIHNvY2lhbGl6ZWQgdHJvbGwgZmFucyBnbyBvbiBjdXJzZSBzcGl0dGluZyByYW1wYWdlcyB3aWxsIGJlIHRoZSBkZWxpZ2h0ZnVsbHkga2l0c2NoeSB3ZXN0ZXJuIFRvbWJzdG9uZS4gSXQgc3RhcnJlZCBWYWwgS2lsbWVyIGFzIERvYyBIb2xsaWRheSwgd2hvIGNvbXBsZXRlbHkgdXBzdGFnZWQgYSBmaXJzdCBjbGFzcyBjYXN0IGluY2x1ZGluZyBLdXJ0IFJ1c3NlbGwsIFNhbSBFbGxpb3R0LCBCaWxsIFBheHRvbiwgUG93ZXJzIEJvb3RoZSwgQ2hhcmx0b24gSGVzdG9uLCBKYXNvbiBQcmllc3RsZXksIE1pY2hhZWwgUm9va2VyLCBCaWxseSBaYW5lLCBEYW5hIERlbGFuZXkgYW5kICBCaWxseSBCb2IgVGhvcm50b24uIApBcyBmb3IgdGhlIGN1bHR1cmFsIHJlYXNvbiwgSSBkb24gcmVhbGx5IGhhdmUgYW4gYW5zd2VyLiBUaGVyZSBhcmUgYSBidW5jaCBvZiBwYXJrcyBpbiB0aGUgY2l0eSBjZW50ZXIgKEtvbmdlbnMgaGF2ZSwgRnJlZGVyaWtzYmVyZyBoYXZlLCBTeWRoYXZuZW5zdGlwcGVuLCBBbWFnZXJmbGxlZCwgRmxsZWRwYXJrZW4pLCBhbmQgc29tZSBsYXJnZXIgcmVzZXJ2ZXMgeW91IGNhbiBnZXQgdG8gYnkgdHJhaW4gbGlrZSBLYWx2ZWJvZCBmbGxlZCBhbmQgRHlyZWhhdm5lbi4gSSBsaXZlZCBoZXJlIGZvciA0IHllYXJzIGFuZCBkb250IG93biBhIGNhciBhbmQgZG9uIHJlYWxseSBzZWUgYSByZWFzb24gdG8uCkZvbGxvd2luZyBhIGNvdXBsZSBjbG9zZSBjYWxscyB3aXRoIHRoZSBiYWQgZ3V5LCBIaWNjdXAgZGVjaWRlcyB0aGUgb25seSB3YXkgZHJhZ29ucyB3aWxsIGV2ZXIgYmUgc2FmZSBmcm9tIGV2aWwgbWVuIGlzIGlmIHRoZXkgY2FuIGVzY2FwZSB0byB0aGVpciBmYWJsZWQgYW5jZXN0cmFsIGhvbWUuIFNvIHRoZSBjaXRpemVucyBvZiBCZXJrIHVwcm9vdCBhbmQgaGVhZCB3ZXN0IGludG8gdGhlIHVua25vd24sIGhvcGluZyB0byBmaW5kIHRoZSBIaWRkZW4gV29ybGQuClRob3NlIGJlaW5nIGZ1cmxvdWdoZWQgaW5jbHVkZSA1MiwwMDAgd29ya2VycyBhdCB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBTZXJ2aWNlIGFuZCBuZWFybHkgZXZlcnlvbmUgYXQgTkFTQS4gCkl0IG9rYXkgaWYgd2hlbiB5b3UgZmlyc3QgcHV0IHRoZW0gb24geW91ciB0b2VzIGJydXNoIHRoZSB0aXAgb2YgdGhlIGJvb3QsIGJ1dCB0aGV5IHNob3VsZG4gaHVydCwgYW5kIHRoZXkgc2hvdWxkbiBmZWVsIGNyYW1wZWQgd2hlbiB5b3UgYmVuZCB5b3VyIGtuZWVzLi4gCk5vdHJlIHF1aXBlLCBub3Mgb2JqZWN0aWZzIDMuIERldmVuaXIgbWVtYnJlIGRlIGwnQVBOIDQuIApNYW55IHBlb3BsZSB0YWtlIHRoZSB3cm9uZyBhcHByb2FjaCB3aXRoIHRoZWlyIENhbmFkYSBQZW5zaW9uIFBsYW4gKENQUCkgcmV0aXJlbWVudCBwZW5zaW9uLiBGb3Igc29tZSwgQ1BQIGlzIGFuIGFyYml0cmFyeSBkZWNpc2lvbi4gU2VydmljZSBDYW5hZGEgbWFpbHMgdGhlbSBhbiBhcHBsaWNhdGlvbiBmb3JtIHByaW9yIHRvIHRoZWlyIDY1dGggYmlydGhkYXksIGFuZCB0aGV5IGNvbXBsZXRlIHRoZSBwYXBlcndvcmssIHNpZ24gb24gdGhlIGRvdHRlZCBsaW5lLCBhbmQgc3RhcnQgdGhlaXIgcGVuc2lvbi4KRm9yIGV4YW1wbGUsIHRoZSBOWFQgZ3V5cy4gV2h5IG5vdCBydW4gdmlkZW8gdmlnbmV0dGVzIG9mIHRoZSBndXlzIHlvdSBicmluZ2luZyB1cCwgc28gdGhlIFJhdyB3YXRjaGluZyBjcm93ZCBtaWdodCBrbm93IHdobyB0aGV5IGFyZT8gTm9wZS4gTW9yZSBXV0UgZm9yY2UgZmVlZGluZy4KRnJlZS4gMTQwMCBWYW4gQnVyZW4gU3QuIEF0IHRoZSBNaW5uZXNvdGEgSGlzdG9yeSBDZW50ZXIgeW91J2xsIGZpbmQgbGFyZ2Ugc2NhbGUgZGlzcGxheXMgd2l0aCBwaG90b2dyYXBocyBhbmRiaW9ncmFwaGllczsgdXNlIHlvdXIgcGhvbmUgdG8gc2NhbiBhIFFSIGNvZGUgYW5kIGVhY2ggcGVyc29uIHdpbGwgZGV0YWlsIHRoZWlyIGV4cGVyaWVuY2VzIHdpdGggeW91IHRocm91Z2ggdmlkZW8gYW5kIGF1ZGlvIGNsaXBzLiAKVGhpcyBpcyB0aGUgc2FtZSBhcyB0aGUgbnVtYmVyIG9mIHBlcm11dGF0aW9ucyBvZiBOICg1MikgdGhpbmdzIHRha2VuIFAgKDMpIGF0IGEgdGltZSwgd2hpY2ggaXMgc3RhdGVkIGFzIE4hICAgUCEgKDUyICA1MSAgNTApIElmIHlvdSBkaWQgbm90IGNhcmUgd2hhdCBvcmRlciB0aGUgY2FyZHMgd2VyZSBkZWFsdCBpbiwgYnV0IHN0aWxsIHdhbnRlZCB0byBrbm93IHRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIHRoZSBBY2UsIEtpbmcsIGFuZCBRdWVlbiBvZiBTcGFkZXMsIHRoZW4geW91IHdvdWxkIGJlIHRhbGtpbmcgYWJvdXQgdGhlIGNvbWJpbmF0aW9ucyBvZiBOICg1MikgdGhpbmdzIHRha2VuIFAgKDMpIGF0IGEgdGltZSwgd2hpY2ggaXMgc3RhdGVkIGFzIChOISAgIFAhKSAvIChOICAgUCkhICg1MiAgNTEgIDUwIC8gMyAvIDIgLyAxKS4gClNvbWVvbmUgSSBrbm93IGlkZW50aWZpZXMgYXMgYSBzY2FsZXkgd2hpY2ggaXMgdGhlIGRyYWdvbiBlcXVpdmFsZW50IG9mIGEgZnVycnkuIAooUHJpdmFjeSBQb2xpY3kpUmVtYXJrZXRpbmcgUGl4ZWxzV2UgbWF5IHVzZSByZW1hcmtldGluZyBwaXhlbHMgZnJvbSBhZHZlcnRpc2luZyBuZXR3b3JrcyBzdWNoIGFzIEdvb2dsZSBBZFdvcmRzLCBCaW5nIEFkcywgYW5kIEZhY2Vib29rIGluIG9yZGVyIHRvIGFkdmVydGlzZSB0aGUgSHViUGFnZXMgU2VydmljZSB0byBwZW9wbGUgdGhhdCBoYXZlIHZpc2l0ZWQgb3VyIHNpdGVzLiBDb252ZXJzaW9uIFRyYWNraW5nIFBpeGVsc1dlIG1heSB1c2UgY29udmVyc2lvbiB0cmFja2luZyBwaXhlbHMgZnJvbSBhZHZlcnRpc2luZyBuZXR3b3JrcyBzdWNoIGFzIEdvb2dsZSBBZFdvcmRzLCBCaW5nIEFkcywgYW5kIEZhY2Vib29rIGluIG9yZGVyIHRvIGlkZW50aWZ5IHdoZW4gYW4gYWR2ZXJ0aXNlbWVudCBoYXMgc3VjY2Vzc2Z1bGx5IHJlc3VsdGVkIGluIHRoZSBkZXNpcmVkIGFjdGlvbiwgc3VjaCBhcyBzaWduaW5nIHVwIGZvciB0aGUgSHViUGFnZXMgU2VydmljZSBvciBwdWJsaXNoaW5nIGFuIGFydGljbGUgb24gdGhlIEh1YlBhZ2VzIFNlcnZpY2UuIApJdCB0aW1lIGZvciBoaWdoZXIgZWQgdG8gZ2V0IGJhY2sgdG8gYmFzaWNzLiByZXF1aXJlcyBzdHVkZW50cyBhbmQgcHJvZmVzc29ycyBhbmQgcmVhc29uYWJseSBlcXVpcHBlZCBjbGFzc3Jvb21zLCBkb3JtIHJvb21zLCBkaW5pbmcgaGFsbHMsIGJhc2ljIHN1cHBvcnQgc3RhZmYgYW5kIG1lZGljYWwgc2VydmljZXMuIGRvIG5vdCBuZWVkIHVwcGVyIG1hbmFnZW1lbnQgbWFraW5nIGhhbGYgYSBtaWxsaW9uIGRvbGxhcnMgYSB5ZWFyIG9yIGEgcXVhcnRlciBvZiBhIG1pbGxpb24gZG9sbGFycyBhIHllYXIgb3Igd2hhdGV2ZXIgcmlkaWN1bG91cyBzYWxhcmllcyB0aGV5IG1ha2UuIGRvIG5vdCBuZWVkIHN1cGVyc3RhciBhY2FkZW1pY3Mgd2hvIG1ha2Ugc2ltaWxhciBhbW91bnRzLiB3YW50IGEgZ29vZCBlZHVjYXRpb24gZnJvbSBwcm9mZXNzb3JzIHdobyBjYXJlIGFib3V0IHRoZW0sIG5vdCBwZW9wbGUgd2hvIGFyZSBpbiB0aGUgbmV3cy4gd2FudCBhIGxpdmFibGUgd2FnZSBhbmQgam9iIHNlY3VyaXR5IGFuZCBiZW5lZml0cy4KSm9uZXMsIDQ5LCBkZW5pZWQgc2VsbGluZyBtZXRoIHRvIEhhZ2dhcmQuIGhlIHRvbGQgTVNOQkMuIEhhZ2dhcmQgc29tZW9uZSBlbHNlIHRoYXQgSSBoYWQgaG9va2VkIGhpbSB1cCB3aXRoIHRvIGJ1eSBpdC4gYWxzbyBzY29mZmVkIGF0IHRoZSBpZGVhIHRoYXQgYSBob3RlbCB3b3VsZCBoYXZlIHNlbnQgSGFnZ2FyZCB0byBoaW0uIGNvbmNpZXJnZSBpbiBEZW52ZXIgd291bGQgaGF2ZSByZWZlcnJlZCBtZSwgaGUgc2FpZC4gSGUgc2FpZCBoZSBoYWQgYWR2ZXJ0aXNlZCBoaW1zZWxmIGFzIGFuIGVzY29ydCBvbmx5IGluIGdheSBwdWJsaWNhdGlvbnMgb3Igb24gZ2F5IFdlYiBzaXRlcy4KTXkgdHJpY2sgZm9yIHRoaXMgaXMgdG8gZmluZCBvdXQgZnJvbSB0aGUgdXNlciBpZiB0aGUgaGFyYXNzZXIgaXMgb24gYW55IG90aGVyIHN1YiB3aXRoIHRoZW0sIHRoZW4gdG8gcmVhY2ggb3V0IHRvIHRob3NlIG1vZHMgd2l0aCB0aGUgaHlwZXJsaW5rIHRvIHRoZSB0aGUgUE0ncyBhbmQgaGF2ZSB0aGVtIGFsc28gcmVwb3J0IGl0LiBTdWJzIHRoYXQgYXJlIERlZmF1bHQgc2VlbSB0byBnZXQgYSByZWFjdGlvbiBzb29uZXIgYXMgdGhleSBhcmUgdGhlIGluaXRpYWwgZnJvbnQgZmFjZSBvZiB0aGUgUmVkZGl0IHRvIG5ldyB1c2Vycy4gVGhlbiBpdCBnb2VzIHNpemUgbGFyZ2UgdG8gc21hbGwuIFNvIGlmIHlvdSBjYW4gaG9vayB1cCB3aXRoIG1vZHMgaW4gYSBkZWZhdWx0IG9yIGEgbGFyZ2Ugc3ViLCB5b3UnbGwgZ2V0IGEgcmVhY3Rpb24gc29vbmVyIGFzIHRoZXJlIHdpbGwgYmUgbXVsdGlwbGUgcmVwb3J0cyB3aXRoIGRpZmZlcmluZyB0cmlhZ2UgdGlja2V0cy4gSG9wZSB0aGF0IGhlbHBzIHNvbWUhCjgpIEV4Y2Vzc2l2ZSBTcGFtLiAKWW91ciB1bmNsZSB3aWxsIG5vdCBoYXZlIGdyb3VuZHMgZm9yIGEgc3VjY2Vzc2Z1bCBsYXdzdWl0IG92ZXIgdGhpcy4gSGUgbWlnaHQgdHJ5IGFueXdheXMgICBpZiB5b3Ugc2VydmVkLCBnZXQgYSBsYXd5ZXIgICBidXQgaXQgbGlrZWx5IGhlIGhvcGluZyBmZWFyIG9mIHRoZSBsZWdhbCBzeXN0ZW0gd2lsbCBzY2FyZSB5b3Ugb2ZmLCBpbnN0ZWFkLiAKVGhlIGxldmVsIG9mIGtub3dsZWRnZSBvbmUgaGFzIGluIHZhcmlvdXMgZGVwYXJ0bWVudHMuIDMuIE9uZSBhYmlsaXR5IHRvIGNvcGUgd2l0aCB0aGUgY3VzdG9tZXIvZW1wbG95ZWUgZHluYW1pYy4gCiI5MDIxMCIgY28gc3RhciBJYW4gWmllcmluZyBwYWlkIHRyaWJ1dGUgdG8gaGlzIGNvIHN0YXIgb24gVHdpdHRlciAsIHdoZXJlIGZhbnMgYW5kIGNlbGVicml0aWVzIHNoYXJlZCB0aGVpciBtZW1vcmllcyBvZiBQZXJyeSBhbmQgbW91cm5lZCBoaW0gLiAiSSB3aWxsIGZvcmV2ZXIgYmFzayBpbiB0aGUgbG92aW5nIG1lbW9yaWVzIHdlJ3ZlIHNoYXJlZCBvdmVyIHRoZSBsYXN0IHRoaXJ0eSB5ZWFycywiIFppZXJpbmcgc2FpZC4gIk1heSB5b3VyIGpvdXJuZXkgZm9yd2FyZCBiZSBlbnJpY2hlZCBieSB0aGUgbWFnbmlmaWNlbnQgc291bHMgd2hvIGhhdmUgcGFzc2VkIGJlZm9yZSB5b3UsIGp1c3QgbGlrZSB5b3UgaGF2ZSBkb25lIGhlcmUsIGZvciB0aG9zZSB5b3UgbGVhdmUgYmVoaW5kLiIKTm90Zm9yc2FsZTUwICA0MSBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KRGV0ZXJtaW5lIHlvdXIgYnVkZ2V0LiBTaW5jZSB5b3UndmUgYmVlbiBrZWVwaW5nIHJlY29yZHMsIHRoaXMgcGFydCBpcyBlYXN5LiBIb3cgbXVjaCBtb25leSBkbyB5b3UgbmVlZCB0byBlYXJuLCBzYXksIGV2ZXJ5IG1vbnRoIHRvIGJlIGZpbmFuY2lhbGx5IHNhZmU/IEZvciBzb21lIHBlb3BsZSBpdHMgJDUsMDAwIGFuZCBmb3Igc29tZSBpdCdzICQyNSwwMDAuIApJbmR1c3RyeSBzb3VyY2VzIHNhaWQgYm90aCBkZWZlbmRhbnRzIGFyZSB0cmVhdGluZyB0aGUgY2FzZSB3aXRoIHRoZSAic2VyaW91c25lc3MgaXQgZGVzZXJ2ZXMiLCBidXQgYmVsaWV2ZSB0aGV5IGhhdmUgd2Fsa2VkIHdpdGhpbiB0aGUgYm91bmRhcmllcyBvZiB0aGUgbGF3LiBBbGwgcG9rZXIgbWFjaGluZXMgaGF2ZSB0byBjb21wbHkgd2l0aCBhIHNldCBvZiBzdHJpbmdlbnQgcmVxdWlyZW1lbnRzLCBjYWxsZWQgdGhlIEF1c3RyYWxpYS9OZXcgWmVhbGFuZCBHYW1pbmcgTWFjaGluZSBOYXRpb25hbCBTdGFuZGFyZCwgd2hpY2gsIGZvciBtYW55IHllYXJzIG5vdywgaGF2ZSBjb250YWluZWQgcmVzcG9uc2libGUgZ2FtYmxpbmcgbWVhc3VyZXMuIApJIGhhdmUgYWxyZWFkeSBwZXJzb25hbGx5IGJlZW4gYm95Y290dGluZyByZWNoYXJnZXMgZHVlIHRvIHRoaXMgaXNzdWUgc2luY2UgYXJvdW5kIEFydCBvZiBXYXIuIFdoZW4gSSBmaXJzdCBzdGFydGVkIHBsYXlpbmcgdGhpcyBnYW1lIGEgeWVhciBhZ28sIHJlY2hhcmdlIHN1aXRzIHdlcmUgc3RpbGwgY29taW5nIGJhY2sgZm9yIGNyYWZ0aW5nLCBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgZ2FtZSB3YXMgc28gZnJpZW5kbHkgdG8gZnJlZSBwbGF5ZXJzIHdhcyB3aGF0IG1hZGUgbWUgZmVlbCBsaWtlIGl0IHdhcyB3b3J0aCBzcGVuZGluZyBtb25leSBvbi4gV2hlbiB0aGV5IGV2ZW50dWFsbHkgc3RvcHBlZCBkb2luZyB0aGF0LCBpbiBjb250cmFzdCB0byB0aGUgb3RoZXIgc2VydmVycywgaXQgZmVsdCBsaWtlIGEgYmFpdCBhbmQgc3dpdGNoLiAKQSBwcm9kdWN0QSBwbGFjZSB0byBzZWxsIHRoZSBwcm9kdWN0ICAgaW4gZSBjb21tZXJjZSwgYSBXZWIgc2l0ZSBkaXNwbGF5cyB0aGUgcHJvZHVjdHMgaW4gc29tZSB3YXkgYW5kIGFjdHMgYXMgdGhlIHBsYWNlQSB3YXkgdG8gZ2V0IHBlb3BsZSB0byBjb21lIHRvIHlvdXIgV2ViIHNpdGVBIHdheSB0byBhY2NlcHQgb3JkZXJzICAgbm9ybWFsbHkgYW4gb24gbGluZSBmb3JtIG9mIHNvbWUgc29ydEEgd2F5IHRvIGFjY2VwdCBtb25leSAgIG5vcm1hbGx5IGEgbWVyY2hhbnQgYWNjb3VudCBoYW5kbGluZyBjcmVkaXQgY2FyZCBwYXltZW50cy4gVGhpcyBwaWVjZSByZXF1aXJlcyBhIHNlY3VyZSBvcmRlcmluZyBwYWdlIGFuZCBhIGNvbm5lY3Rpb24gdG8gYSBiYW5rLiBEZWxsIHdvdWxkIGJlIHNlbGxpbmcgbm8gbW9yZSBjb21wdXRlcnMuIApUaGUgcGVyY2VudGFnZSBmaXJzdCB3ZW50IGFzIGhpZ2ggYXMgMTAgcGVyY2VudCBpbiAxOTY5LCB3aGVuIGl0IHdhcyAxMC4wIHBlcmNlbnQuIAo2LiBBIGRlYWxlciBidXR0b24gcmVwcmVzZW50cyB3aG8gdGhlIGRlYWxlciBpcywgaXQgcm90YXRlcyBjbG9ja3dpc2UgYWZ0ZXIgZWFjaCBoYW5kIGlzIGNvbXBsZXRlLiBBIHNtYWxsIGJsaW5kIGlzIHRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIGRlYWxlciBhbmQgdGhlIGJpZyBibGluZCBpcyB0aGUgcGxheWVyIHRvIHRoZSBsZWZ0IG9mIHRoZSBzbWFsbCBibGluZC4gVGhlIGJsaW5kIGJldHMgYXJlIGZvcmNlZCBiZXRzIGJ5IHR3byBwbGF5ZXJzLiBJdCBpcyBjb21tb24gaW4gaG9sZCdlbSB0b3VybmFtZW50cyBmb3IgdGhlIGJsaW5kcyB0byBpbmNyZWFzZSBhcyB0aGUgdG91cm5hbWVudCBwcm9ncmVzc2Vlcy4gV2hlbiB0aGVyZSBhcmUgdHdvIHBsYXllcnMgbGVmdCB0aGUgcGVyc29uIHRoYXQgaXMgdGhlIGRlYWxlciB3b3VsZCBiZSB0aGUgc21hbGwgYmxpbmQuIFdoZW4gZGVhbGluZyB0aGUgY2FyZHMgdGhlIHBsYXllciB0aGF0IGlzIHRoZSBzbWFsbCBibGluZCByZWNlaXZlcyB0aGUgZmlyc3QgY2FyZC4KQnV0LCBpdCBkb2VzIHNlZW0gdGhhdCBzb21lIGxhd3Mgd2VyZSB2aW9sYXRlZCBpbiB0aGUgTWFpbmUgY2FtcGFpZ24gYmVjYXVzZSBub3QgYWxsIG9mIHRoZSBtb25leSBjYW1lIGZyb20gQ2F0aG9saWMgZGlvY2VzZXMgaW4gdGhlIFVTLiBBYm91dCAkMjUyLDAwMCBzZWVtcyB0byBoYXZlIGNvbWUgZnJvbSB0aGUgbWFnaWMgYW5kIGJvdHRvbWxlc3MgcHVyc2UgdGhhdCBpcyB0aGUgVmF0aWNhbi4gV2hpY2ggd291bGQgYmUgYSBmb3JlaWduIGNvdW50cnkgdW5kdWx5IGluZmx1ZW5jaW5nIGEgcG9saXRpY2FsIHByb2Nlc3MgaW4gdGhlIFVTLgpGb3JlaWduIHBvbGljeSB3aXNlLCBoZSB3YXMgYW4gZWFybHkgc3VwcG9ydGVyIG9mIHRoZSBJcmFxIFdhciwgc28gaGUgbGlrZWx5IHNsb3dzIGRvd24gdHJvb3Agd2l0aGRyYXdhbHMgaW50byAyMDEyIG9yIGJleW9uZCwgd2hpY2ggbWF5IGhpbmRlciB0aGUgZ3Jvd3RoIG9mIElTSVMgbGF0ZXIgaW4gdGhlIGRlY2FkZS4gCkJlY2F1c2Ugb2Ygc3RyaXAgcG9rZXIncyBwb3B1bGFyaXR5LCB0aGVyZSBoYXZlIGJlZW4gdGhvdXNhbmQgb2Ygc2l0ZXMgZGVkaWNhdGVkIHRvIHRoZSBnYW1lLiAKQ29uc2lkZXJpbmcgeW91IGFza2VkIHdobyB0aGUgYmVzdCBXaUZpIHByb3ZpZGVyIGlzLCBJIGdvaW5nIHRvIGFzc3VtZSB5b3UgbWF5IG5vdCBiZSBhYmxlIHRvIHNldCB1cCB0aGUgY29ubmVjdGlvbiB5b3Vyc2VsZi4gQXNrIHRoZSBwcm92aWRlciBpZiB0aGV5IGNhbiBzZW5kIHNvbWVvbmUgb3V0IHRvIHNldCB1cCwgb3IgYXNrIGEgZnJpZW5kLiBUaGUgcHJvdmlkZXIgd2lsbCBjaGFyZ2UgeW91LiAKIlRoaXMgaW5kdXN0cnkgaXMgb24gaXRzIHdheSBvdXQsIGJ1dCBtZWFud2hpbGUgZG9ncyBhcmUgc3VmZmVyaW5nLCIgc2FpZCBLYXRlIE1hY0ZhbGwsIEZsb3JpZGEgZGlyZWN0b3IgZm9yIHRoZSBIdW1hbmUgU29jaWV0eSBvZiB0aGUgVW5pdGVkIFN0YXRlcy4KSW4gR2VybWFueSB3ZSBoYXZlIGFub255bW91cyBldmlkZW5jZSBjb2xsZWN0aW9uIHBsYWNlcyB0aGF0IHdpbGwgY29sbGVjdCBhbmQgc2VjdXJlIHRoZSBldmlkZW5jZSBldmVuIGlmIHlvdSBkb24gd2FudCB0byBnbyB0byB0aGUgcG9saWNlIGRpcmVjdGx5LCBtb3N0bHkgYmVjYXVzZSBpdCBpcyBhIGNsb3NlIGZhbWlseSBtZW1iZXIgb3Igc29tZW9uZSBpbiBhIHBvc2l0aW9uIG9mIHBvd2VyIG92ZXIgdGhlIHZpY3RpbS4uIApBc3RyYWVubnVpICAxMzYgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KV2UgaGF2ZSB0YWxrZWQgYWJvdXQgaXQuLiAKSnVzdCBhcyB3ZSBjYW4gcGh5c2ljYWxseSB0cmFpbiBtdXNjbGVzIHRvIGJlY29tZSB0aWdodGVyIGFuZCBzdHJvbmdlciwgd2UgY2FuIG1lbnRhbGx5IHRyYWluIG91cnNlbHZlcyB0byBkcmF3IG1vcmUgcGxlYXN1cmUgZnJvbSB0aGUgbXVuZGFuZS4gCkhvdyBvZGQgaGUgYWN0ZWQgZHVyaW5nIHRoZSBpbnRlcnZpZXdzLiAKQW5kIGZpcmUgaW4geW91ciBzb3VsIGJ1cm5pbmcgYnJpZ2h0IC4gLiAuCkJhbmtzIHRob3VnaHQgaXQgbm90IHNvIGFkdmlzYWJsZSB0byBJbnRlciB0aGUgQm9keSBhc2hvcmUgaW4gYSBwbGFjZSB3aGVyZSB3ZSB3ZXJlIHV0dGVyIHN0cmFuZ2VycyB0byB0aGUgQ3VzdG9tIG9mIHRoZSBOYXRpdmVzIG9uIHN1Y2ggb2NjYXNpb25zOyBpdCB3YXMgdGhlcmVmb3JlIHNlbnQgb3V0IHRvIHNlYSBhbmQgY29tbWl0dGVkIHRvIHRoYXQgRWxlbWVudCB3aXRoIGFsbCB0aGUgZGVjZW5jeSB0aGUgQ2lyY3Vtc3RhbmNlIG9mIHRoZSBwbGFjZSB3b3VsZCBhZG1pdCBvZi4gVGhpcyBtb3JuaW5nIHNldmVyYWwgb2YgdGhlIENoaWVmcyBmcm9tIHRoZSB3ZXN0d2FyZCBtYWRlIHVzIGEgVmlzaXQ6IHRoZXkgYnJvdWdodCB3aXRoIHRoZW0gRW1ibGVtcyBvZiBQZWFjZSwgd2hpY2ggYXJlIFlvdW5nIFBsYW50YWluIFRyZWVzLiBUaGVzZSB0aGV5IHB1dCBvbiBib2FyZCB0aGUgU2hpcCBiZWZvcmUgdGhleSB3b3VsZCB2ZW50dXJlIHRoZW1zZWx2ZXMuIApXZSBhbHdheXMgaGFkIGdyZWF0IGN1c3RvbWVyIHNlcnZpY2UgdW50aWwgbm93LiAKRWgsIGFzIGZhciBhcyBJIGtub3csIG5vIGFkbWluIGNhbWUgaW4gYW5kIGZpeGVkIHRoaW5ncy4gSSBkaWQgYWRkIG9uIGFuIGFkbWluIHRvIHRoZSBtb2QgdGVhbSBidXQgdGhhdCB3YXMgbW9yZSBjb2luY2lkZW50YWwgdGltaW5nIHRoYW4gYW55dGhpbmcgICB3ZSBsb3N0IGEgY291cGxlIG1vZHMgYW5kIG5lZWRlZCBzb21lIG5ldyBvbmVzLiBJIGhhZCB0YWxrZWQgdG8gdGhlIGFkbWluIG92ZXIgdGhlIHN1bW1lciBhdCBhIHJlZGRpdCBtZWV0IHVwIGFuZCBmaWd1cmVkIGhlIGJlIHBlcmZlY3QgZm9yIHRoZSBzcG90IHNpbmNlIGhlIGEgaHVnZSBicm93bnMgZmFuIGFuZCBmcm9tIHRoZSBhcmVhLiAKTG9uZ2VyIGlzIHRoZSBwcm9kdWN0IGFsbCBmcm9tIFNvdXRoYnJvb2suIFdlIGFyZSBub3cgcHVyY2hhc2luZyBhbGwgdGhlIG9yZ2FuaWMgcmVkIHdpbmUgcG9tYWNlIGluIE9udGFyaW8uIApKdXN0IG1lZXQgYW5kIGdldCBtYXJyaWVkIHRvIGEgU291dGggS29yZWFuIGNpdGl6ZW4uIFRoYXQgbW9yZSByZWFsaXN0aWMgYW5kIGRvYWJsZSB0aGFuIGdvaW5nIHRvIGEgdW5pdmVyc2l0eSBpbiBBbWVyaWNhIGZvciA0KyB5ZWFycyBwbHVzIG1hc3RlcnMsIHRvIGdldCBhbiBFbmdsaXNoIHRlYWNoZXIgcG9zaXRpb24ganVzdCBzbyB0aGF0IHlvdSBjYW4gbGl2ZSBoZXJlLiAKVGhlIG5leHQgdGhpbmcgdGhhdCB5b3Ugc2hvdWxkIGRvIGlzIHRvIHB1cmNoYXNlIGZvbGRlcnMgZm9yIHlvdXIgZmlsaW5nIGNhYmluZXQuIFlvdSBzaG91bGQgZGVzaWduYXRlIG9uZSB0byB0d28gZm9sZGVycyBmb3IgZWFjaCBtb250aCBvZiB0aGUgeWVhci4gCkhlIHRoZW4gam9pbmVkIHRoZSBOYXZ5IGFuZCBsYXRlciBzcGVudCAzMCB5ZWFycyB3aXRoIEJhbGwgU3RhdGUgVW5pdmVyc2l0eSBhcyBhIGNhcnBlbnRlci4gTXVuY2llIGlzIHNpZ25pZmljYW50IHRvIGhpbSwgc28gaGUgd2FudGVkIHRvIHNhdmUgaXQgZm9yIGhpcyBsYXN0IHZpc2l0IHRvIHNob3cgdGhlIGpvdXJuZXkgaGFkIGNvbWUgZnVsbCBjaXJjbGUuLiAKQnV0IGFwYXJ0IGZyb20gc29tZSBmYWN0b3JpZXMgYW5kIGl0cyBGZXJyYXJpIGFuZCBBbGZhIFJvbWVvIGJyYW5kcywgYW5hbHlzdHMgc2F5IEZpYXQgQXV0byBpcyB3b3J0aCBsaXR0bGUgb3V0c2lkZSBvZiBJdGFseSwgd2hlcmUgaXQgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGVtcGxveWVycy4iVGhlIGZhY3QgaXMgdGhhdCBGaWF0IGhhZCBiZWVuIG1pc21hbmFnZWQgZm9yIHRoZSBiZXN0IHBhcnQgb2YgYSBkZWNhZGUsIiBwcmlvciB0byBpdHMgbGluayB1cCB3aXRoIEdNLCBNYXh0b24gc2FpZC4iSSBiZWxpZXZlIHRoYXQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyYW5zYWN0aW9uIGl0IHdhcyB2ZXJ5IGRpc3RhbnQgZnJvbSB0aGUgbWluZHMgb2YgYWxsIHRoZSBwcmluY2lwYWxzIHRoYXQgdGhpcyAocHV0IG9wdGlvbikgd291bGQgZXZlciBiZSBpbnZva2VkLCIgU2NvdHQgU3ByaW56ZW4sIGNoaWVmIGF1dG8gaW5kdXN0cnkgYW5hbHlzdCBhdCBjcmVkaXQgcmF0aW5nIGFnZW5jeSBTdGFuZGFyZCBQb29yJ3MsIHRvbGQgUmV1dGVycy4iSSB3b3VsZCBzYXkgaXQgd2FzIG5vdCB0aGUgYmVzdCB0aG91Z2h0IG91dCB0cmFuc2FjdGlvbiBpbiBidXNpbmVzcyBoaXN0b3J5LCBhbmQgSSBkb24ndCB0aGluayB0aGUgY3VycmVudCBtYW5hZ2VtZW50IG9mIEdlbmVyYWwgTW90b3JzIHNlZXMgdGhhdCBkaWZmZXJlbnRseSwiIGhlIHNhaWQuSmFjayBTbWl0aCB3YXMgR00ncyBDRU8gd2hlbiBpdCBzaWduZWQgdGhlIGRlYWwgd2l0aCBGaWF0LiBIaXMgc3VjY2Vzc29yLCBSaWNrIFdhZ29uZXIsIHdhcyBHTSdzIHByZXNpZGVudC4iSGUgd2FzIGEgcm9va2llLCIgTWV5ZXJzIHNhaWQgb2YgV2Fnb25lci4gIkhlIGdvdCBzdWNrZWQgaW50byB0aGlzIGdyYW5kIGdsb2JhbCBzY2hlbWUgdGhpbmcuIlMgcmF0aW5nIG9uIEdNJ3MgbWFzc2l2ZSBkZWJ0IGlzIGhvdmVyaW5nIGp1c3Qgb25lIG5vdGNoIGFib3ZlIGp1bmsgc3RhdHVzLiAKR2V0IG9uZSB3aXRoIGEgY2FydmVkIGhhcmR3b29kIGZyYW1lIGFuZCBsZWF0aGVyIHVwaG9sc3RlcnkuIERvbid0IGZvcmdldCBhIGZvb3QgcmVzdCB3aXRoIG5haWwgaGVhZCB0cmltIHRvIG1hdGNoLi4gCklsIHJlc3BvbnNhYmlsZSBkZWxsJ2luaXppYXRpdmEgc2kgZmEgY2FyaWNvLCBwcmV2aWEgYXBwcm92YXppb25lIGRlbCBEaXJldHRpdm8sIGRpIHN0YWJpbGlyZSB0YWxlIHF1b3RhIGUgbGUgbW9kYWxpdCBkaSBwYXJ0ZWNpcGF6aW9uZS4KSSBrbm93IHRoYXQgaGFwcGVucyB0byBwZW9wbGUgYnV0IEkgY29udGludWVkIHRvIG1ha2UgZXhjdXNlcyBmb3IgZm91ciB5ZWFycy4gSSB3ZW50IG91dCBsZXNzIGFuZCBsZXNzIGFuZCB3YXMgcmFyZWx5IHBoeXNpY2FsbHkgYWN0aXZlLiBJIHBsYXllZCBmYXN0IGZvb2QgcG9rZXIgd2l0aCBHbGVuIGV2ZXJ5IG90aGVyIG5pZ2h0IChJJ2xsIHNlZSB5b3VyIGRvdWJsZSBjaGVlc2VidXJnZXIgYW5kIHJhaXNlIHlvdSBhIGxhcmdlIGZyaWVzIGFuZCBhIGNob2NvbGF0ZSBzaGFrZS4gCkJlc2lkZXMsIHlvdSBjYW4gYnJlYWsgaW50byB0aGUgaW5kdXN0cnksIHRvdXIgd29ybGR3aWRlLCBhbmQgc3RpbGwgbm90IHNob3cgdXAgaW4gdGhlc2UgY2hhcnRzLiAKV2hhdCBzaGUncyBkb2luZyBpcyB3cm9uZy5Qb3NzaWJsZSBzaGUgZ290IGFuIFNURCBhbmQgZG9lc24ndCB3YW50IHRvIHRlbGwgeW91LkluIHRoYXQgbGluay4gVGhlIHdpZmUgZ2FzbGl0IHRoZSBodXNiYW5kIGZvciBhIHllYXIgdG9vLiAKVGhlIGlzc3VlIGlzIHRoYXQgaGUgY291bGQgaGF2ZSBjbGFyaWZpZWQgdGhpcyBtdWNoIGVhcmxpZXIgb3IgYXNrZWQgdGhlIEZvcmVpZ24gT2ZmaWNlIHRvIGJlIG1vcmUgdmlnb3JvdXMgaW4gZWxhYm9yYXRpb24uIEJ1dCB0aGUgb3Bwb3NpdGlvbiByZWZ1c2VkIHRvIGJ1ZGdlLiAKQnVudSBub3JtYWxkZSBzZW5pbiB5YXBtYW4gbGF6bSBhbWEgaXRlIHNlbiBiZW5sZSB1cmFtYXkgdGVyY2loIGVkaXlvcnN1bi4gCkp1c3Qgd2FudCB0byB3YXJuIHlvdSwgc2luY2UgdGhpcyBwb3N0IGlzIHJlY2VudDogeW91IGFyZSBnb2luZyB0byBnZXQgYSBsb3Qgb2YgYmFja2xhc2ggb24gdGhpcyBzdWIuIFdlIGdlbmVyYWxseSBhYmhvciBmbHlpbmcgd2l0aCBwZXRzLCBiZWNhdXNlIHRoZSBleHBlcmllbmNlIGlzIHRyYXVtYXRpemluZyBmb3IgYW5pbWFscyBhbmQgaGFzIGEgcmVsYXRpdmVseSBzaWduaWZpY2FudCBtb3J0YWxpdHkgcmF0ZS4gCklmIFN0YXJmaWVsZCBpcyBnb2luZyBpbnRvIHRoZSBmYXIgZnV0dXJlLCB0aGVuIHRoZXJlIGNhbiBiZSBhbGwga2luZHMgb2YgaWRlYXMgZmxvYXRpbmcgYXJvdW5kLiAKVGhlIHByb2JsZW0gd2l0aCBjaGlsZHJlbiBpcyB0aGF0IGF0IGNlcnRhaW4gYWdlcyB0aGV5IHZhcnkgZHJhc3RpY2FsbHkgaW4gc2l6ZS4gQmVjYXVzZSBvZiB0aGlzLCBpbiBvcmRlciB0byBhZG1pbmlzdGVyIGRydWdzIHNhZmVseSB5b3UgbmVlZCB0byB3b3JrIG91dCB0aGVpciBzdXJmYWNlIGFyZWEgKFdlaWdodCBpbiBLRyB4IEhlaWdodCBpbiBDTSAvIDM2MDApLiAKSXQgcG9zc2libGUgdGhhdCBtYW55IHdpbGwgYXV0b21hdGljYWxseSBhc3N1bWUgeW91IGFuIGFjdHVhbCBBc2lhbiBpbW1pZ3JhbnQgaW5zdGVhZCBvZiBhbiBBbWVyaWNhbiwgc28geW91IG1pZ2h0IGhhdmUgdG8gdGVsbCB0aGVtLCBidXQgaXQgcmVhbGx5IGRvZXNuIG1ha2UgYSBkaWZmZXJlbmNlIGVpdGhlciB3YXkuIApJIHdyb3RlIG9uZSBvZiB0aG9zZSBsb25nIGxldHRlcnMgdG8gbXkgbW9tIG9uY2UuIEl0IHdhcyBhZnRlciAyMiB5ZWFycyBvZiBhcmd1bWVudHMsIGJlaGF2aW9yIHRoYXQgaHVydCBtZSwgYXdmdWwgYmxvd3MgdXBzLCBldGMuIApJdCB0aGUgbmF0dXJhbCBjb25zZXF1ZW5jZSBvZiBhIHBvbGl0aWNhbCBjdWx0dXJlIHRoYXQgdmlsaWZpZXMgZ292ZXJubWVudGFsIGFpZCBwcm9ncmFtcyBmb3IgcG9vciBhbmQgam9ibGVzcyBpbmRpdmlkdWFscy4gSm9icyB0YWtlIG9uIHRoZSByb2xlIHRob3NlIHByb2dyYW1zIHdvdWxkIG90aGVyd2lzZSBoYXZlLCB3aGVyZSBpZiBwZW9wbGUgZG9uIGhhdmUgdGhlbSB0aGV5IGxpdGVyYWxseSBzdGFydmUgYW5kIGxvc2UgdGhlaXIgaG9tZXMuIFNvIGluIHRoZSBlbmQgdGhlIGdvdmVybm1lbnQgaGFzIHRvIHBvdXIgYmlsbGlvbnMgaW50byBrZWVwaW5nIHBvaW50bGVzcyBqb2JzIGFsaXZlLCBhbmQgaW4gdHVybiBmaWxsIHRoZSBwb2NrZXRzIG9mIHRoZSBhc3Nob2xlcyB0aGF0IHJ1biB0aG9zZSBidXNpbmVzc2VzLCBpbnN0ZWFkIG9mIGp1c3Qgc3BlbmRpbmcgdGhhdCBtb25leSBvbiBoZWxwaW5nIHBlb3BsZSB3aXRob3V0IGpvYnMgaGF2ZSBhIGRlY2VudCBzdGFuZGFyZCBvZiBsaXZpbmcuClRoZSBoaSBsbyAoaGlnaCBsb3cpIHZlcnNpb24gb2YgT21haGEgd2lsbCBiZSBkaXNjdXNzZWQgaW4gdGhlc2UgcGFnZXMgc2luY2UgaXQgaXMgdGhlIG1vcmUgcG9wdWxhciBvZiB0aGUgdHdvIHZlcnNpb25zLiBNb3Jlb3ZlciwgdGhlIGhpZ2ggb25seSB2ZXJzaW9uIGlzIHBsYXllZCBleGFjdGx5IHRoZSBzYW1lIHdheSBhcyB0aGUgaGkgbG8gdmVyc2lvbiBleGNlcHQgdGhlIHBvdCAodGhlIHRvdGFsIGFtb3VudCBvZiBtb25leSBiaXQgb24gYSBzaW5nbGUgaGFuZCkgaXMgbm90IHNwbGl0IGFuZCB0aGUgaGlnaCBoYW5kIGlzIGF3YXJkZWQgdGhlIGVudGlyZSBwb3QuLiAKV2Uga3JlZ2VuIGVlbiBkb25rZXJncmlqemUgQVdEIFRveW90YSBWZW56YSBtZWUuIApJZiB5b3VyIGRvY3RvciBpcyBub3QgdHJlYXRpbmcgaXQgYXMgYSBzZXJpb3VzIGlzc3VlLCB5b3UgbmVlZCB0byBnZXQgYW5vdGhlciBvbmUgZmFzdC4gClBhcmNlIHF1ZSBub3VzIGF2b25zIGRldXggcGlsb3Rlcy4gTm91cyB2ZW5vbnMgZGUgcHJvbG9uZ2VyIGxlIGNvbnRyYXQgZGUgTmljbywgZXQgbm91cyBkaXNjdXRvbnMgYXZlYyBMZXdpcyAoSGFtaWx0b24pIG1haW50ZW5hbnQuIE1haXMgaWwgeSBhIHVuZSB2b2xvbnQgZGUgcHJvbG9uZ2VyIGxlIGNvbnRyYXQgZGUgTGV3aXMgZCBMYXVkYS4KRm9yIGEgZGlzY3Vzc2lvbiBvZiBiZXN0IHByYWN0aWNlcyByZWxhdGVkIHNvbGVseSB0byBsZWdhbCBtYXJrZXRpbmcsIGN1cmF0ZWQgYnkgYW5kIGRpcmVjdGVkIHRvd2FyZHMgbWFya2V0aW5nIHByb2Zlc3Npb25hbHMsIGZlZWwgZnJlZSB0byB2aXNpdCBvdXIgZnJpZW5kcyBvdmVyIGF0IC9yL0xlZ2FsTWFya2V0aW5nIGFuZCAvci9MYXdGaXJtTWFya2V0aW5nLgpJbmRvbiBhYmcgY2FtIGhvcm55LiAKSXQgd2FzIGFsbCBhYm91dCBwcml2YXRlIGJ1c2luZXNzIGRlYWxpbmdzIGJldHdlZW4gUGF1bCBNYW5hZm9ydCBhbmQgdmFyaW91cyBidXNpbmVzcyBhc3NvY2lhdGVzIHNvbWUgb2YgdGhlbSBBbWVyaWNhbiwgc29tZSBvZiB0aGVtIGZvcmVpZ24sIHNvbWUgb2YgdGhlbSBVa3JhaW5pYW4uIEJlZm9yZSBoZSBldmVyIHdvcmtlZCBmb3IgdGhlIFRydW1wIGNhbXBhaWduLiAKTm8gbmVlZCB0byBtYWtlIHRoZSBnYW1lIGFyYml0cmFyaWx5IHNob3J0ZXIgZm9yIG5vIHJlYXNvbiBsaWtlIGl0IHdhcyBpbiB0aGF0IHJld29yay5FcmFuZ2VsIG1heSBuZWVkIGEgbG9vdCByZXdvcmssIGJ1dCBub3QgdG9ucyBhbmQgdG9ucyBvZiBuZXcgY29tcGxleGVzL2hvdXNlcy4gCk1pc3NpbmcgbW9uZXkgZnJvbSBhbnRpIGJvb3plIGNhbXBhaWduQSBmZXcgbW9udGhzIGxhdGVyLCBteSBDaXR5IEhhbGwgcmVwb3J0aW5nIHBhcnRuZXIsIFN0ZXZlIFRob21wc29uLCBmb2xsb3dlZCBoaXMgb3duIGxlYWRzIGludG8gc29tZSBzdHJhbmdlIENhcmF3YXkgZGVhbHMuIApZb3UgY2FuIGFsc28gYXBwbHkgdG8gdGhlIGdvdmVybm1lbnQgdG8gc2hhcmUgeW91ciBDUFAvUVBQIHBlbnNpb24gd2l0aCB5b3VyIHNwb3VzZS4gVGhpcyBpcyBkaXN0aW5jdCBmcm9tIHBlbnNpb24gc3BsaXR0aW5nLCB3aGljaCBpcyBkb25lIHRocm91Z2ggdGhlIHRheCByZXR1cm4gZmlsaW5nIHByb2Nlc3MuIElmIHlvdSB3ZXJlIHRoZSBvbmx5IG9uZSB3aG8gbWFkZSBjb250cmlidXRpb25zLCB5b3UgY2FuIHNoYXJlIHlvdXIgQ1BQL1FQUCBwZW5zaW9uLiBJZiBib3RoIHlvdSBhbmQgeW91ciBzcG91c2UgY29udHJpYnV0ZWQsIGVhY2ggb2YgeW91IGNhbiByZWNlaXZlIGEgc2hhcmUgb2YgYm90aCBvZiB5b3VyIHBlbnNpb25zLiBUaGUgY29tYmluZWQgdG90YWwgYW1vdW50IG9mIHRoZSB0d28gcGVuc2lvbnMgc3RheXMgdGhlIHNhbWUgd2hldGhlciB5b3UgZGVjaWRlIHRvIHNoYXJlIHlvdXIgcGVuc2lvbnMgb3Igbm90LiBZb3UgY2FuIGFsd2F5cyBhcHBseSB0byBjYW5jZWwgQ1BQL1FQUCBzaGFyaW5nIGlmIGl0IG5vIGxvbmdlciBtYWtlcyBzZW5zZSBpbiB0aGUgZnV0dXJlLgpXYXMgc3VycHJpc2luZ2x5IGVhc3kgdG8gZ2V0IGFuIFViZXIgdG8gdGhlIGdhbWUgd2hpY2ggd2FzIGx1Y2t5LCBhbmQgd2UganVzdCBob3BwZWQgb24gdGhlIGJ1c2VzIGFmdGVyIHRoZSBnYW1lLiBUaGUgc3RhZGl1bSBiZWluZyBzbyBmYXIgYXdheSB3YXMga2luZCBvZiBzdHJhbmdlIGFuZCBhIHBhaW4gdGhvdWdoLiAKSG93IGRvIHBva2VyIHBsYXllcnMgZmlsbSB0aGVpciBwb2tlciB2bG9ncyBmb3IgeW91dHViZQpBbWVyaWNhbnMgcmVhbGx5IGRvbiB3YW50IHRvIGFkbWl0IHRoYXQgd2Ugc3RpbGwgcGFydGljaXBhdGUgaW4gYm90aCB0aGUgaWRlb2xvZ3kgb2YgZXVnZW5pY3MgYW5kIHRoZSBwcmFjdGljZSBvZiBpdCB0aHJvdWdoIG1lZGljaW5lLiBUaGUgaWRlb2xvZ3kgb2YgZXVnZW5pY3Mgc2FpZCB0cmFpdHMgc3VjaCBhcyBpbnRlbGxpZ2VuY2Ugb3IgbXVzaWNhbCBza2lsbHMgYXJlIGluaGVyaXRhYmxlIGFzIG9wcG9zZWQgdG8gdGhlIHJlc3VsdCBvZiB1cGJyaW5naW5nLiBBcyB3ZSBhbGwga25vdywgQW1lcmljYW5zIGFyZSBoZWxsYmVudCBvbiBmaW5kaW5nIHRoZSBzdXBwb3NlZCBnZW5ldGljIGNhdXNlIGZvciBldmVyeXRoaW5nIGZyb20gaG9tb3NleHVhbGl0eSB0byBzaHluZXNzIHRvIGF0aGxldGljIGFiaWxpdHkuCkZvciBzb21lIHJlYXNvbiwgdGhlc2UgYXJlIHR3byB3b3JkcyB0aGF0IGFyZSBub3QgdXNlZCB2ZXJ5IG9mdGVuIGluIFVTIG5ld3MgY292ZXJhZ2Ugb2YgQWZnaGFuaXN0YW4sIG5vdCB0aGUgbWFpbnN0cmVhbSBzb3J0IGFueXdheS4gVGhlIGZhY3QgdGhhdCBBZmdoYW5pc3RhbiBoYXMgYmVlbiBlbmdhZ2VkIGluIGEgY2l2aWwgd2FyIHNpbmNlIGJlZm9yZSB0aGUgU292aWV0IGludmFzaW9uICgxOTc5KSBhbmQgdGhhdCB0aGlzIGNpdmlsIHdhciBjb250aW51ZXMgYW5kIHRoYXQgdGhlIFVTIGlzIG9uIHRoZSBzYW1lIHNpZGUgb2YgdGhlIGNpdmlsIHdhciBhcyB0aGUgU292aWV0cyB3ZXJlIGlzLCBJIHN1cHBvc2UsIHRvbyBvYnZpb3VzIHRvIHJlcG9ydCBvbi4gQW5kIEkgZ3Vlc3MgdGhlIGZhY3QgdGhhdCB0aGUgU292aWV0cyBoYWQgdGhlaXIgYnV0dHMga2lja2VkIGFuZCB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIHNvIHRob3JvdWdobHkgZHJhaW5lZCB0aGUgQ29tbXVuaXN0IHN0YXRlIG9mIHJlc291cmNlcyBhbmQgY3JlZGliaWxpdHkgdGhhdCBtYW55IG9ic2VydmVycyBzYXcgdGhhdCB3YXIgYXMgdGhlIGJlZ2lubmluZyBvZiB0aGUgZW5kIG9mIHRoZSBTb3ZpZXQgRW1waXJlIGhhcyBiZWVuIHNvIHRob3JvdWdobHkgaWdub3JlZCBieSB0aGUgbWFpbnN0cmVhbSBtZWRpYSBiZWNhdXNlIGl0IGp1c3Qgc28gd2lkZWx5IGtub3duIGJ5IHRoZSBBbWVyaWNhbiB2b3RlcnMgdGhhdCBpdCBkb2VzbiBtZXJpdCBhIG1lbnRpb24uCkkgZ3Vlc3MgaXQgbWlnaHQgYmUgbW9yZSBmYXZvcmFibGUgaWYgeW91IHdhbnQgdG8gdXNlIGl0IGFzIGFuIGFjdHVhbCB0YWJsZXQuIApUaGUgc3VtbWVyLCB0aGUgVUhDIFVuaWZvciBMb2NhbCAyMDAgUGVvcGxlIENob2ljZSBQYW50cnkgaXMgb3ZlcmZsb3dpbmcgd2l0aCBsb2NhbGx5IHNvdXJjZWQgZnJlc2ggcHJvZHVjZSBvZmZlcmluZ3MuIApNaWNoaWdhbiBDb3VwbGUgQ2F1Z2h0IEhhdmluZyBTZXggSW4gUmVzb3J0IEhvdCBUdWIKQSBnb29kIG1hbmFnZXIgaXMgYWJsZSB0byBibGVuZCBpbnRvIHRoZSBiYWNrZ3JvdW5kLCBjaGFuZ2luZyBzbWFsbCB0aGluZ3MgaGVyZSBhbmQgdGhlcmUgdG8gZ3JlYXQgZWZmZWN0LiAKQWN0dWFsbHkgdGhleSBrbm93IGJ1dCB0aGV5IHRoaW5rIGl0IHNvbWV0aGluZyBJIGNhbiBkZWFsIHdpdGggaXQgbXlzZWxmIHdpdGhvdXQgc2hlbGxpbmcgdG9ucyBmb3IgYW4gYXR0b3JuZXkuIEl0IGEgY2l2aWwgbGF3c3VpdCwgbm90IGEgY3JpbWluYWwgY2FzZS4gRG8geW91IGtub3cgdGhlIHJlcGVyY3Vzc2lvbnMgb2Ygc2lnbmluZyAiTm9uIENMRVRTIENpdmlsIEhhcmFzc21lbnQgUmVzdHJhaW5pbmcgT3JkZXIiPyBJdCBzZWVtcyBpdCB3aWxsIGJlIGFscmlnaHQgaW4gNSB5ZWFycy4gCkluIGEgc3RhdGVtZW50IHJlbGVhc2VkIGJ5IGhlciBsYXd5ZXIsIERhbmxleSB3aG8gc2FpZCBQYWRkb2NrIHNlbnQgaGVyIHRvIHRoZSBQaGlsaXBwaW5lcyBhYm91dCB0d28gd2Vla3MgYmVmb3JlIHRoZSBzaG9vdGluZyBkZXNjcmliZWQgaGltIGFzICJhIGtpbmQsIGNhcmluZywgcXVpZXQgbWFuLiAKSnVzdCBhZGQgUG9rZXIsIEJsYWNramFjaywgYW5kIG1heWJlIGEgZmV3IG90aGVyIGNhcmQgZ2FtZXMgYW5kIHNlcGFyYXRlIHRoZSBjdXJyZW5jeSB0byBwdXJlbHkgbm9uIHB1cmNoYXNhYmxlIGdvbGQgb3IgaXQgb3duIGNoaXBzLCBhbmQgb29vaGhoaCBib3kgeW91IGdldCBhIGJ1bmNoIG9mIHBsYXllcnMgYmFjay4gTm90IGV2ZW4gZXhhZ2dlcmF0aW5nLCB0aGVyZSBoYWQgYmVlbiBtdWx0aXBsZSB0aW1lcyB3aGVyZSBJIGp1c3QgcG9wIGludG8gdGhlIHNpbmdsZSBwbGF5ZXIsIHBsYXkgYSBmZXcgcm91bmRzIG9mIHBva2VyKG1vcmUgbGlrZSBhIGhvdXJzIHdvcnRoIG9mIHR3bykgYW5kIGRpcCBvdXQgd2hlbiBJIGxvc3QgdG8gbXVjaCBtb25leS4gSXQgd291bGQgYmUgc28gbXVjaCBtb3JlIGZ1biBhZ2FpbnN0IG90aGVyIHBsYXllcnMsIExJS0UgV0UgQ09VTEQgSU4gUkQxIQpGZXRodWxsYWggR2xlbiB3b3VsZCBiZSBjYWxsZWQgYSB0cmFpdG9yIGFuZCBlbmVteSBvZiB0aGUgc3RhdGUsIGp1c3QgYXMgRXJkb2FuIHNob3VsZCwgYnV0IGhlIGNhbGxlZCBhIHRlcnJvcmlzdCB0aGFua3MgdG8gRXJkb2FuIHByb3BhZ2FuZGEuIE1lYW5pbmcgdGhleSB0dXJuZWQgdGhvc2UgcHJvcGFnYW5kYSBndW5zIHRvIGVhY2ggb3RoZXIsIGFuZCBFcmRvYW4gcHJvdmVkIHRvIGhhdmUgYmlnZ2VyIGd1bnMuIEhlIHByb2JhYmx5IGhhcyB0aGUgcG9saXRpY2FsIHN1cHBvcnQgR2xlbiBsYWNrZWQuCklmIHlvdSB3YW50IHRvIHZlbnR1cmUgaW50byBkYXkgdHJhZGluZywgZG9uIGdhbWJsZSB5b3VyIHJldGlyZW1lbnQgb3IgdGhlIGtpZHMgY29sbGVnZSBmdW5kcy4gVGhhdCB3b3VsZCBleHBvc2UgeW91ciBmYW1pbHkgdG8gdG9vIG11Y2ggcmlzay4KTm93IGhlcmUgd2hlcmUgdGhpbmdzIGdldCB0cmlja3kuIApFISBOZXdzIGhhcyBsZWFybmVkIHRoZSA0NyB5ZWFyIG9sZCBzdGFyIGhhcyBmaWxlZCBsZWdhbCBkb2N1bWVudHMgc2Vla2luZyBhbiBhbm51bG1lbnQgb2YgdGhlaXIgbWFycmlhZ2UuIFRoZSBjYXNlIHdhcyBmaWxlZCBpbiBMYXMgVmVnYXMgb24gV2VkbmVzZGF5LgpKdXN0IC4gSXQgc2VlbXMgbWFkZSB1cCBidXQgaXQncyBhbGwgdG9vIHJlYWwuLiAKTm9ub21hZDEyMyB1ClRoZSBnYW1lIHdhcywgaW4gbXkgb3BpbmlvbiwgaW1tZWFzdXJhYmx5IHdvdW5kZWQgYnkgdGhlIHJlbW92YWwgb2YgdGhlIGV4cGxvcmF0aW9uIGVsZW1lbnRzLiBNYXNzIEVmZmVjdCBiZWNhbWUgYSBnZW5lcmljIGNvcnJpZG9yIHNob290ZXIsIHdpdGggc29tZSBzcGFjZSBtYWdpYyB0YWNrZWQgb24gdG8gdHJ5IGFuZCBtYWtlIGl0IGZlZWwgZGlzdGluY3QuIEV2ZW4gdGhlIGNpdHkgaHVicyBmZWx0IHNtYWxsZXIgaW4gTUUyIDMsIGZvciBzb21lIHJlYXNvbi4KSGVyZSBhbiBpbnRlcmVzdGluZyB0d2lzdCBvbiBlbGVjdHJpY2l0eSBhbmQgdGhlIHRlbGVncmFwaCwgYnV0IG5vdCBxdWl0ZSB3aGF0IHlvdSBleHBlY3QuIApMZXQgbWUgZWxhYm9yYXRlIGV2ZW4gZnVydGhlci4gSSBwcmV0dHkgc3VyZSB0aGVyZSBhcmVuIHN0dWRpZXMgZG9uZSBvbiBzdHJlc3MgaW4gY2F0cyBhbmQgZG9ncyBmb3IgY2hhc2luZyBsYXNlciBwb2ludCBsaWdodHMuIEJ1dCBldmVyeSBldm9sdXRpb25hcnkgcHN5Y2hvbG9naXN0IHdvcnRoIHRoZWlyIHNhbHQgaXMgcmVhc29uYWJseSBjb25jZXJuZWQgYWJvdXQgZG9pbmcgaXQgZnJlcXVlbnRseSBhbmQgbm90IGxldHRpbmcgdGhlIGxpZ2h0IHZhbmlzaCBvbiBzb21ldGhpbmcgdGhlIHBldCBjYW4gcGh5c2ljYWxseSBzbmF0Y2guIApJZiB5b3Ugcm9sbCBhIHNldmVuLCB5b3UgcHV0IGEgcGVubnkgKG9yIHdoYXRldmVyIHlvdSBhcmUgdXNpbmcgZm9yIGNoaXBzKSBmcm9tIHlvdXIgc3VwcGx5IGludG8gYSBwb3QgaW4gdGhlIGNlbnRlciwgd2hpY2ggdGhlIHdpbm5lciBnZXRzIGF0IHRoZSBlbmQuIApUaGVzZSBpbmNsdWRlIHN0YXJ0aW5nIGEgZmlyZSB3aXRob3V0IHJlbHlpbmcgb24gYSBtYXRjaCBvciBsZWFybmluZyBob3cgdG8gZm9yYWdlICAgeW91IGNhbiBmb3JhZ2UgZXZlbiBpZiB5b3UncmUgYSBjaXR5IGR3ZWxsZXIsIGFuZCB3aGF0IHlvdSBjb25zaWRlciBhIHdlZWQgbWlnaHQgYmUgYSB0YXN0eSBncmVlbiB5b3UndmUgYmVlbiBtaXNzaW5nIG91dCBvbi4gCkEgbW90aGVyIHN1ZmZlcmluZyBmcm9tIHBvc3QgbmF0YWwgZGVwcmVzc2lvbiBjYXJyaWVzIHRoZSBhZGRlZCBndWlsdCBvZiAiSSBzaG91bGQgYmUgaGFwcHkiIGFuZCAiRXZlcnlvbmUgZWxzZSBpcyBkZWxpZ2h0ZWQsIHdoeSBhcmVuJ3QgST8iLiAKT25lIG9mIHRoZSBtYWluIHJlYXNvbnMgb25saW5lIHBva2VyIGhhcyBnb3R0ZW4gc28gbXVjaCBoeXBlIGluIHJlY2VudCB5ZWFycyBpcyB0aGUgZmFjdCB0aGUgY2xpZW50cyBjYW4gcGxheSBmcm9tIHRoZSBjb21mb3J0IG9mIHRoZWlyIG93biBob21lIG9yIG9mZmljZSwgb3IgZXZlbiBoYW5kaGVsZHMgbm93YWRheXMuIApUaGF0IGJvdGggbmVhdCBhbmQgYSBiaXQgZnJ1c3RyYXRpbmcgdG8gbm90IGhhdmUgdGhlIGNob2ljZS4gQXNwYXJ0YW1lIGFuZCBhIHNlbGVjdGlvbiBvZiBvdGhlciBhbHRlcm5hdGl2ZSBzd2VldGVuZXJzIGFyZSBrbm93biB0byB0cmlnZ2VyIG1pZ3JhaW5lcyAoYW5kIHNvbWUgb3RoZXIgY29uZGl0aW9ucyksIHNvIHRoZSBjb21wbGV0ZSByZW1vdmFsIG9mIHRoZSBvdGhlciByZWNpcGUgbWFrZXMgU3ByaXRlIGluYWNjZXNzaWJsZS4gQWRtaXR0ZWRseSBpdCBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2Ygd2hhdCBhbHJlYWR5IGEgc21hbGwgZ3JvdXAsIGJ1dCB3aGF0IG1vcmUgaW1wb3J0YW50IGlzIGhvdyBub3JtYWxpemVkIHVzaW5nIHRoZXNlIGFsdGVybmF0aXZlIHN3ZWV0ZW5lcnMgaXMgYmVjb21pbmcgYW5kIGhvdyBiaWcgb2YgYW4gaW1wYWN0IHRoYXQgaGF2aW5nIG9uIHNvbWUgb2YgdXMuIEkgaGF2ZSB0byByZWFkIHRoZSBpbmdyZWRpZW50cyBvbiBldmVuIGNvbW1vbmx5IHB1cmNoYXNlZCBpdGVtcyBiZWNhdXNlIGEgZmV3IGhhdmUgdW5leHBlY3RlZGx5IG1hZGUgcmVjaXBlIGNoYW5nZXMgdG8gc3RhcnQgdXNpbmcgc3VjcmFsb3NlIG9yIHN0ZXZpYS4gSGF2aW5nIGEgdGlueSBiaXQgb2Ygc3RldmlhIGNhbiBjb3N0IG1lIGRheXMgb2YgbG9zdCBwcm9kdWN0aXZpdHkgYW5kIGFuIEVSIHRyaXAgd2hpY2ggaXMgZmFyIGZyb20gY2hlYXAgaGVyZSBzYWRseS4KRmluZCB3YXlzIHRvIHJlbGF4LiBTb21ldGltZXMgZGVsYXlzIGluIHlvdXIgcGVyaW9kIGFyZSBjYXVzZWQgYnkgdG9vIG11Y2ggc3RyZXNzLiBMaXN0ZW4gdG8gcmVsYXhpbmcgbXVzaWMgb3Igc2ltcGx5IHB1dCB5b3VyIGZlZXQgdXAgYW5kIGZlZWwgdGhlIHN0cmVzcyBsZWF2ZSB5b3VyIGJvZHkuIApFdmVyeSBzdWNjZXNzZnVsIGluZGl2aWR1YWwgaGFzIGZhY2VkIGZhaWx1cmUgYWxvbmcgdGhlIHdheS4gVGhlc2UgZmFpbHVyZXMgYXJlIHB5cnJoaWMgaW4gbmF0dXJlOyB0aGV5IG9ubHkgbWFrZSB0aGUgcmV3YXJkcyBtdWNoIHN3ZWV0ZXIuLiAKV2hhdCBoYXBwZW5lZCBpcyB0aGF0IG5vdyB0aGV5IGVuZCB1cCBsb3ZpbmcgdGhlIGV4cGVyaWVuY2Ugb2YgbmV3IHBsYWNlcyB0b2dldGhlciBvciBnb2luZyBiYWNrIHRvIHBsYWNlcyBvbmUgb2YgdGhlbSBoYWQgYmVlbiBiZWZvcmUgYW5kIHJlZGlzY292ZXJpbmcgaXQgdG9nZXRoZXIuIApWb3VzIHRlcyBpbnZpdHMgYXV4IG5vY2VzIGQnb3IgZGUgZGV1eCBhbWlzLiBTdWl0ZSAgdW4gaW5jaWRlbnQsIHZvdXMgYXJyaXZleiB0cnMgdGFyZCwgbGVzIGVuZmFudHMgZXQgbGVzIGFtaXMgc29udCBkaiByZXBhcnRpcyAuIE1haXMgbGUgY291cGxlIG4nYSBwYXMgZW52aWUgZGUgZG9ybWlyLCBtdXMgcGFyIGNldCBhbm5pdmVyc2FpcmUsIGlscyB2b3VzIHJldGllbm5lbnQgZXQgdm9udCBjaGVyY2hlciB1bmUgZ3JhbmRlIGJvdGUgcXUnaWxzIG91dnJlbnQgZGV2YW50IHZvdXMuIApFbnRyZSBkZXV4IHBhbm5lYXV4ICBzdGF0aW9ubmVtZW50IGludGVyZGl0ICwgdG91dGUgdW5lIHJhbmdlIGRlIHQnYXV0byBtb2JpbGVzICBsJ2FycnQuIERvcm1hbnRlcyBzYW5zIGZhdGlndWUgc3VyIHBsYWNlLiBRdW9pcXUndW5lIGxpZ25lIGphdW5lIHRyYWNlIHN1ciBsZSBib3JkIGR1IHRyb3R0b2lyIGNvbmZpcm1lIGwnaW50ZXJkaWN0aW9uIGRlCklyb25pc2NoZXJ3ZWlzZSBpc3QgZGFzIFVuZmFsbCBLcmFua2VuaGF1cyBpbiBNdXJuYXUgZWluZXMgZGVyIG1vZGVybnN0ZW4gdW5kIGJlc3RlbiBpbiBFdXJvcGEgdW5kIGRhcyBnZW5hdWUgR2VnZW50ZWlsIHp1ciBJbm5lbnN0YWR0LiAyIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvClNvIFN0YW4gdHJhZGVkIGZvciBhIHBsYXllciB0aGF0IGZpdCBRIG1vbGQgd2hpbGUgY2xlYXJpbmcgY2FwIHNwYWNlLi4gCkhvdyB0byBQbGF5IEJpZyBUd28gQ2FyZCBHYW1lIEFLQSBDaGluZXNlIFBva2VyClJhdHMgdGFpbHMganVzdCBhcmVuJ3QgYSBnb29kIGxvb2sgaW4gdGhlIFNxdWFyZSBNaWxlLiBNeSBzdHJhaWdodGVuZXJzIHRyYW5zZm9ybSBtZSBmcm9tIGdydW5neSB0byBnbG9zc3kgaW4gZml2ZSBtaW51dGVzIGZsYXQuCldoZW4gSSBnbyBiYWNrIHRvIENoaW5hLCBJIGxpa2UgdG8gdmlzaXQgSGFuZ3pob3UsIGFzIHdlbGwgYXNzZWUgdGhlIG1vdW50YWlucyBhdCBaaGFuZ2ppYWppZSBOYXRpb25hbCBTY2VuaWMgQXJlYSBpbiBIdW5hbiBQcm92aW5jZS4gSW4gQXVzdHJhbGlhLCBJIHJlYWxseSBuZWVkIHRvIGdvIGJhY2sgdG8gZXhwZXJpZW5jZSBRdWVlbnNsYW5kIGFuZCBnbyB0cmVra2luZyB0aHJvdWdoIHRoZSBEYWludHJlZSBSYWluZm9yZXN0LCBhbmQgdHJ5IHNub3JrZWxsaW5nIGFtaWRzdCB0aGUgR3JlYXQgQmFycmllciBSZWVmIGFuZCB3aG8ga25vd3MsIG1heWJlIGV2ZW4gZ28gY2FnZSBkaXZpbmcgd2l0aCBHcmVhdCBXaGl0ZXMhIEFuZCBJIGhhdmUgbmV2ZXIsIGV2ZXIgYmVlbiB0byBDaGlsZSwgd2hpY2ggaXMgYSBiaWcgb21pc3Npb24gZnJvbSBteSBsaXN0IHRodXMgZmFyIQpOb3cgaGl0IHRoZSBmYXN0IGZvcndhcmQgYnV0dG9uLiBUaGlzIHNlYXNvbiB0aGUgRmxhbWVzIHR3byBsZWFkaW5nIHNjb3JlcnMgYXJlIEdhdWRyZWF1LCB3aG8gc2l0cyBmb3VydGggaW4gdGhlIGxlYWd1ZSwgYW5kIE1vbmFoYW4sIHdobyBvbiBwYWNlIGZvciA0MCBnb2Fscy4gClNjaG9vbCBwaWN0dXJlcyBhcmVuIHJlcXVpcmVkLiAKImtub2NrZWQgb2ZmIGhpcyBoaWdoIGhvcnNlIiBkb2VzbiBldmVuIGJlZ2luIHRvIGRlc2NyaWJlIGl0LiAKSW4gb3JkZXIgZnJvbSBiZXN0IGhhbmQgdG8gd29yc3Q6IEEgcm95YWwgZmx1c2ggKEFjZSBIaWdoIHN0cmFpZ2h0IG9mIG9uZSBzdWl0KSBTdHJhaWdodCBGbHVzaCAoQSBzdHJhaWdodCBvZiBvbmUgc3VpdCkgRm91ciBPZiBBIEtpbmQgKFNhbWUgcmFuaykgRnVsbCBIb3VzZSAoVGhyZWUgb2YgYSBraW5kIGFuZCBhIHBhaXIpIEZsdXNoICggRml2ZSBvZiB0aGUgc2FtZSBzdWl0KSBTdHJhaWdodCAoRml2ZSBjYXJkcyBpbiBzZXF1ZW5jZS4gCk5vdyBpIGhhdmUgYSBmYWNlYm9vayBtZW1vcnkgZXZlcnkgeWVhciB0byByZW1pbmQgbWUuIChoZSBtYWRlIGEgZmx1c2ggd2l0aCBoaXMgNCBpbiBjYXNlIHlvdSB3ZXJlIHdvbmRlcmluZykoMSkgQUEsIHJhaXNlZCwgb3BwIHJlIHJhaXNlZCwgSSBzaG92ZWQsIG9wcCB0YW5rIGNhbGxlZCB3aXRoIEFRLiBCb2FyZCBRUXh4eC4gV2hhdGV2ZXIsIGl0IGhhcHBlbnMsIG5pY2UgaGFuZCwgbW92ZSBvbi4gRXhjZXB0IHRoZW4gaGUgc2F0IHRoZXJlIGZvciB0aHJlZSBob3VycyBhbmQgbGl0ZXJhbGx5IGRpZG4gcGxheSBhIHNpbmdsZSBoYW5kLgpZb3VyIHN0b3J5IGhpdHMgY2xvc2UgdG8gaG9tZSB0b28uIE15IHlvdW5nZXN0IGJyb3RoZXIgaXMgc3RpbGwgaW4gY29sbGVnZSwgc28gZXZlbiB0aG91Z2ggaGUgY2FuIGNvbnRyaWJ1dGUgZmluYW5jaWFsbHksIGluIG1hbnkgd2F5cywgSSBzYXkgaGUgcHJvdmlkZXMgdGhlIG1vc3QgKGluIHRlcm1zIG9mIGVtb3Rpb25hbCBzdXBwb3J0LCBzaW5jZSBoZSBzdGF5cyB3aXRoIG15IG1vbSBvdmVyIGFsbCBvZiBoaXMgYnJlYWtzLikgTWF5YmUgdGhpcyBpcyB0aGUgc2FtZSBmb3IgdGhlIGJyb3RoZXIgd2hvIGxpdmVzIHdpdGggdGhlIG1vbS4gSGUgbWlnaHQgbm90ICJwcm92aWRlIiBidXQgaGUgaXMgdGhlIG9uZSB3aG8gaXMgdGhlcmUgZGVhbGluZyB3aXRoIHRoZSBkYWlseSBCUy4gCkkgdW5kZXJzdGFuZCBsb29raW5nIGluIHRoZSBtaXJyb3IgYW5kIHNlZWluZyBzb21lb25lIGRpZmZlcmVudCBldmVyeXRpbWUuIEV2ZW4gbm93LCBJIGZlZWwgbGlrZSBBbGljZSBpbiBXb25kZXJsYW5kLCBjb25zdGFudGx5IGNoYW5naW5nIHNpemUgYW5kIHNoYXBlLCBldmVyeSBzaXAgb2Ygd2F0ZXIgc2hvd2luZyB0byB0aGUgd29ybGQuIEJ1dCByZWFsbHksIGl0IG5vdCBsaWtlIHRoYXQuIE5vIG9uZSBzZWVzIHRoZSB0aGluZ3MgSSBkbyBiZWNhdXNlIHRoZXkgYXJlbiBhY3R1YWxseSByZWFsLiBUaGVyZSBhcmUgdHJlYXRtZW50cyB0aGF0IHdpbGwgaGVscCBhbmQgZXZlbiB0aG91Z2ggSSBzdGlsbCBzZWUgdGhpbmdzIHdyb25nIG9yIGp1c3QgZmVlbCBsaWtlIG15IGJvZHkgaXMgd3JvbmcsIHRocm91Z2ggdHJlYXRtZW50IEkgd2FzIGFibGUgdG8gZmluZCB0aGUgdG9vbHMgdG8gd29yayB0aHJvdWdoIHRob3NlIGZlZWxpbmdzIHdoZW4gdGhleSBvY2N1ci4gU28gY2FuIHlvdS4gQW5kIGl0IHNvIG11Y2ggZWFzaWVyIHRvIGxlYXJuIGJldHRlciBjb3BpbmcgbWVjaGFuaXNtcyB3aGVuIHlvdSBoYXZlbiBiZWVuIGluZ3JhaW5lZCBpbiBoYXJtZnVsIHRob3VnaHQgcGF0dGVybnMgZm9yIHllYXJzLgpEdWRlLCBkb24gbGV0IHlvdXIgcHJpZGUgc2NyZXcgeW91IG92ZXIuIEdldCBvdXQgb2YgeW91ciBoZWFkLiBHZXR0aW5nIHNvbWV0aGluZyBkb3NlbnQgbWVhbiBzb21lb25lIGVsc2Ugd29uIEZyZWUgZm9vZCBvbmNlIGEgZGF5IHdpbGwgZGFyZSB5b3UgbW9uZXkgdG8gZ2V0IHlvdSBiYWNrIG9uIHlvdXIgZmVldCBmYXN0ZXIuIApIYXZlIHlvdSBjb25zaWRlcmVkIGJyaW5naW5nIGEgYnVmZj8gWW91IGNvdWxkIHJlcGxhY2UgdGhlIGZsZWVjZSBoYXQgd2l0aCBhIGJ1ZmYsIGJ1dCBpIHdvdWxkIHRha2UgYm90aCBpZiBpIGhhZCB0byBoaWtlIHRoZSBQQ1QgYWdhaW4uClRoYXQncyB3aGVyZSBXaWxsaWFtIHN0YXJ0ZWQgYW5kIGhlJ3MgcHJldHR5IHdlbGwgb2ZmIGF0IHRoZSBtb21lbnQuIApOb3cgeW91J3JlIHJlYWR5IHRvIGJlZ2luIHRoZSBtYXNzYWdlLiAKU3ByaW5nSGlsbCBTdWl0ZXMgYnkgTWFycmlvdHQKQmxhY2sgYW5kIEJsdWVBIHNpbXBsZSB0aXAgdGhhdCB3b3JrcyB3ZWxsIGlzIHRvIHZpc3VhbGlzZSB0aGF0IHlvdSdyZSBicmVhdGhpbmcgaW4gYmx1ZSwgY2FsbWluZyBhaXIsIGFuZCBleGhhbGluZyBibGFjaywgYW5ncnkgYWlyLiBJbWFnaW5lIHRoZSBhbmdlciBkcmFpbmluZyBvdXQgb2YgeW91IHdpdGggZXZlcnkgYnJlYXRoLCBncmFkdWFsbHkgcmVkdWNpbmcgdGhlIGludGVuc2l0eSBvZiB0aGUgYmxhY2sgc28gdGhhdCBpdCBhbmQgeW91ciBzdHJlc3MgZmFkZXMuCldhcnJlbiBCdWZmZXR0LCQ2Ny42IGJpbGxpb24sIFdoYXJ0b24gZHJvcG91dC4gCkxlYXRoZXJwdW1wa2luICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpUaGUgSW5kaWFuIFBva2VyIExlYWd1ZSBraWNrcyBvZmYgaXRzIGZpcnN0IGVkaXRpb24gaW4gT2N0b2JlciBhcyB0aGUgZmllbGQgZm9yIHByb2Zlc3Npb25hbCBmcmFuY2hpc2VzIGV4cGFuZHMgZXZlciB3aWRlci4KVGhpcyBoZWFya2VucyB0byBNYXJzaGFsbCBNY2xMdWhhbiBzdGF0ZW1lbnQgdGhhdCB0aGUgbWVkaXVtIGlzIHRoZSBtZXNzYWdlLiBBY2NvcmRpbmcgdG8gaGlzIHRoZW9yeSBhIG5ldyBtZWRpdW0gYWZmZWN0cyB0aGUgZml2ZSBzZW5zZXMgYW5kIHdpbGwgbWFrZSBvbmUgb2YgdGhlIHNlbnNlcyBtb3JlIGRvbWluYW50IHRoYW4gdGhlIG90aGVyIGZvdXIgKCB0aGUgYWJsYXRpdmUgcHJvY2VzcykuIEluIHRoaXMgY2FzZSB3ZSBoYXZlIG91dGVyZWQgYSBzaXh0aCBzZW5zZSwgdGhlIGNlbnRyYWwgbmVydm91cyBzeXN0ZW0sIGF0IHRoZSBleHBlbnNlIG9mIHRoZSB2aXN1YWwsIGxpbmVhciBtZXNzYWdlIG9mIHRoZSBwcmludGVkIHdvcmQuClRoZSBzZWNvbmQgcGxhbiBpcyBWSVAgICB5b3UgbmVlZCB0byBwYXkgc21hbGwgZmVlIGV2ZXJ5IG1vbnRoIGluIG9yZGVyIHRvIHN0YXkgVklQIGJ1dCB0aGlzIG9wZW5zIGEgbG90IG9mIGRpZmZlcmVudCBvcHBvcnR1bml0aWVzLiAKSWYgeW91IGVuam95IHBsYXlpbmcgcG9rZXIgYW5kIG90aGVyIGdhbWVzIG9mIGNoYW5jZSwgaXQgaXMgaW1wb3J0YW50IHRvIGtub3cgYW5kIHVuZGVyc3RhbmQgaG93IHRvIGNob29zZSBhIGNhc2lubyBwb2tlciBjaGlwcyBzZXQuIFR5cGljYWxseSwgeW91IG1heSBvYnRhaW4gc2V0cyBvZiBwb2tlciBjaGlwcyB0aGF0IGluY2x1ZGUgMTAwIGNoaXBzLCAyMDAgY2hpcHMsIGFuZCBzbyBvbiwgYWxsIHRoZSB3YXkgdXAgdG8gMTAwMCBjaGlwcy4gVGhlcmUgYXJlIHNldmVyYWwgY29uc2lkZXJhdGlvbnMgdGhhdCBzaG91bGQgYmUgbWFkZSB3aGVuIGNvbnNpZGVyaW5nIGhvdyBzbWFsbCBvciBob3cgbGFyZ2Ugb2YgYSBzZXQgdGhhdCB5b3Ugd2lsbCBuZWVkLiAKSW4gSmFudWFyeSwgQ2hpbmEgc2V0IHVwIGEgc3BlY2lhbGl6ZWQgSVAgY291cnQgaW4gQmVpamluZy4gCkl0J3MganVzdCB0aGF0IGNvbGxlY3RpdmVseSwgd2UndmUgYWxsIHNhaWQgcGFzdCBhbmQgcHJlc2VudCwgIldlJ2QgcmF0aGVyIGhhdmUgdG9ucyBvZiBjaGVhcCBjcmFwIGFuZCBsb29rIHRoZSBvdGhlciB3YXkiLCBib29rcyB3ZXJlIHdyaXR0ZW4gYWJvdXQgdGhlIGh5cG90aGV0aWNhbCBkZW1pc2Ugb2Ygc3VjaCBncm91cHMgKEFmdGVyIGFsbCwgaWYgdGhleSBhcmVuJ3QgdXRpbGl6aW5nIGV2ZXJ5IGxhc3QgcmVzb3VyY2UgYW5kIHdvcmtpbmcgMjQvNywgdGhleSBtdXN0IGJlIGFuIGluZmVyaW9yIGN1bHR1cmUgYW5kIG5vdCB3b3J0aHkgb2YgY29uc2lkZXJhdGlvbiksIGxpa2UgTGFzdCBvZiB0aGUgTW9oaWNhbnMuLiAKV2lubmluZyB0aGUgZmlyc3QgZmlnaHQgaXMgZ3JlYXQsIGJ1dCB0aGVuIHRoZXkgcGxheSBsb290IHNpbXVsYXRvciB0aGVuIG9uLiBFdmVuIGlmIHlvdSBoYXZlIGRlY2VudCBnZWFyLCB0aGUgYmVzdCB3YXkgeW91IGhhdmUgb2YgZ2V0dGluZyByaWQgb2YgdGhlIGhpZ2hlc3Qgc2tpbGwgc3F1YWQgaXMgYnkgM3JkIHBhcnR5aW5nIHRoZW0gd2hpbGUgdGhleSBjaGFzaW5nIGtpbGxzIHRoZW1zZWx2ZXMsIG5vdCBieSB3YWl0aW5nIHRoZW0gb3V0IGZvciB0aGUgMiBzcG90LgpUaGVyZSB3YXMgbm8gd2F5IHRvIGZpbmQgb3V0IGFib3V0IHRoZSBldmVyIGVsdXNpdmUgSW50ZXJpb3IgTWluaXN0ZXIuLiAKRGFzIGhhYmUgaWNoIHNvIGxlaWRlciBub2NoIG5pY2h0IGF1c3Byb2JpZXJ0LCBkYSBrYW5uIGljaCBkaXIgbnVyIGVtcGZlaGxlbiBlaW4gYmlzc2NoZW4genUgZXhwZXJpbWVudGllcmVuLiBXZW5uIGRpciBuYWNoIGRlbSBBdXNraGxlbiBkaWUgS29uc2lzdGVueiB6dSB3ZWljaCBvZGVyIHp1IGhhcnQgaXN0LCBlaW5mYWNoIG5vY2htYWwgZWluc2NobWVsemVuIHVuZCBqZSBuYWNoZGVtIGVudHdlZGVyIG5vY2ggbWVociBTaGVhYnV0dGVyIChkYW1pdCBlcyB3ZWljaGVyIHdpcmQpIG9kZXIgbm9jaCBtZWhyIEtha2FvYnV0dGVyIChkYW1pdCBlcyBocnRlciB3aXJkKSB6dWZnZW4uIFNoZWEgIHVuZCBLYWthb2J1dHRlciB3ZXJkZW4gaGF1cHRzY2hsaWNoIGFscyBLb25zaXN0ZW56Z2ViZXIgdW5kIEVtdWxnYXRvcmVuIHZlcndlbmRldC4gVm9yIGFsbGVtIGJlaSBkZW4gQm9keW1lbHRzIGdlaHQgZXMgamEgZGFydW0sIGRhc3Mgc2llIGZlc3Qgc2luZCB1bmQgbmljaHQgc29mb3J0IGluIGRlciBIYW5kIHNjaG1lbHplbi4gSWNoIHdyZGUgZXMgdmllbGxlaWNodCBtaXQgNjAgZ3IgU2hlYSB1bmQgMzUgZ3IgS2FrYW8gdmVyc3VjaGVuLCB2aWVsbGVpY2h0IHNvZ2FyIG51ciAyNSAzMCBnciBLYWthby4gaGllciBkYXJmIGJlaSBkZWluZXIgTWlzY2h1bmcgZGVyIEFudGVpbCBuaWNodCB6dSBob2NoIHNlaW4sIGRhIGRpZSBNZWx0cyBzb25zdCBuaWNodCBndXQgYXVmIGRlciBIYXV0IHNjaG1lbHplbi4gSWNoIGthbm4gbWlyIGFsbGVyZGluZ3Mgdm9yc3RlbGxlbiwgZGFzcyBlcyBzaWNoIGFsbGVpbiBtaXQgU2hlYSAgdW5kIEtha2FvYnV0dGVyIG5pY2h0IGd1dCB2ZXJ0ZWlsZW4gbHNzdCBpY2ggc3RlbGxlIG1pciBkaWUgS29uc2lzdGVueiBzZWhyIGtsZWJyaWcgdm9yIHVuZCB3cmRlIGRpciBlbXBmZWhsZW4genVtaW5kZXN0IGVpbiBiaXNzY2hlbiB2b24gZWluZW0gZ3V0ZW4gT2xpdmVubCB6dXp1Zmdlbiwgd2VubiBkdSBrZWluIGFuZGVyZXMgbCB6dSBIYXVzZSBoYXN0LiBTbyBsYXNzZW4gc2ljaCBkaWUgQm9keSBNZWx0cyBiZXN0aW1tdCBiZXNzZXIgdmVydGVpbGVuIHVuZCBlcyBrYW5uIGJlc3NlciBpbiBkaWUgSGF1dCBlaW56aWVoZW4uCk5vLCB0aGUgYXJlYXMgd2UgYWxyZWFkeSBoYXZlIGEgd2FsbCBhcmUgY2F1c2luZyBzZXJpb3VzIGVudmlyb25tZW50YWwgZGFtYWdlIGVzcGVjaWFsbHkgdG8gdGhlIGxvY2FsIHdhdGVyIHRhYmxlcyBpbiBBcml6b25hLCBOZXcgTWV4aWNvLCBUZXhhcywgYW5kIENhbGlmb3JuaWEgLiBXZSBhcmUgYWxyZWFkeSBmYWNpbmcgc2VyaW91cyB3YXRlciBzaG9ydGFnZSBmcm9tIHRoZSBDb2xvcmFkbyBSaXZlciwgd2UgZ3JvdyBhIGxvdCBvZiBvdXIgY291bnRyeSB3aW50ZXIgZm9vZCBzdXBwbHkgaW4gdGhlc2UgYXJlYXMgYW5kIHRoZSBsb2NhbCBmYXJtZXJzIGFyZSBhbHJlYWR5IHN1ZmZlcmluZy4gSXQgaHVydHMgQW1lcmljYSBzbWFsbCBidXNpbmVzc2VzIG93bmVycyBhbmQgcHJldmVudHMgdXMgZnJvbSBncm93aW5nIG91ciBvd24gZm9vZC4uIApJZiB5b3UgZmxvZyB0aGUga25lZSB3aXRoIG5ldHRsZXMsIHlvdSB3aWxsIHNldCB1cCBhbiBpbmZsYW1tYXRpb24gdGhhdCB3aWxsIGJyaW5nIGEgbW9yZSBlZmZpY2llbnQgYmxvb2Qgc3VwcGx5IGludG8gdGhlIGFyZWEsIGFuZCBhbHNvIGhlbHAgdG8gY2FycnkgYXdheSB3YXN0ZXMuCkl0IGlzIGFsc28gdGhlIGNhc2UgdGhhdCBhbGwgcGVvcGxlIGZhY2UgaGFyZHNoaXBzLiAKRXZlbnR1YWxseSwgVmF1Z2huIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIG9uZSBnaXJsIHdpdGggYSBzaG9ydCBibG9uZCBwb255dGFpbCBhbmQgYSBjb3dib3kgaGF0LiBTaGUgd2FzIGluIGhlciAyMHMsIHBldGl0ZSBhbmQgd29yZSBkYXJrIGV5ZWxpbmVyLiBBY2NvcmRpbmcgdG8gYW4gZXlld2l0bmVzcywgIlZpbmNlIHNlZW1lZCBpbnRlcmVzdGVkIGluIGhlci4gSGUgd2FudGVkIGhlciB0byBzdGljayBhcm91bmQuIiBBcHBhcmVudGx5LCBoZSB3YXMgdmVyeSBpbnRlcmVzdGVkLCBiZWNhdXNlIHRoZSB0d28gbGVmdCB0aGUgcGFydHkgdG9nZXRoZXIuClRoZSBDbGV2ZWxhbmQgY2FzaW5vIG9wZW5lZCBNYXkgMTQsIDIwMTIsIHRoZSBUaGlzdGxlRG93biBSYWNpbm8gaW4gTm9ydGggUmFuZGFsbCBvcGVuZWQgQXByaWwgOSwgMjAxMywgYW5kIHRoZSBIYXJkIFJvY2sgUm9ja3Npbm8gb3BlbmVkIGluIFN1bW1pdCBDb3VudHkgRGVjZW1iZXIgMTgsIDIwMTMuIApKYWxpbW8xMCAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpMb3RzIG9mIHZpZGVvIHR1dG9yaWFscy4gR3JhcGhpY3MgSW5wdXQvT3V0cHV0IFByb2dyYW1taW5nIEV4YW1wbGVzIFNjcmlwdGluZyBTdGFja3MgVG9vbHMgVG9vbHNldHMgLiAyNCBPY3QgMjAxNyAgIDUxIG1pbiAgIFVwbG9hZGVkIGJ5IFJqIFN5c3RlbXMgOiAgVGhlIEJyYW5kIG9mIFRydXN0IFJldG91Y2hpbmcgLiBSZXRvdWNoIHNraW4gbGlrZSBhIHBybyB3aXRoIHRoZXNlIFBob3Rvc2hvcCByZXRvdWNoaW5nIGFjdGlvbnMgdGhhdCB3aWxsIGxldCB5b3UgaGVhbCwgbWF0dGlmeSwgYW5kIGFpcmJydXNoIHNraW4gd2l0aCBvbmUgY2xpY2suIApSZXN0YXVyYW50cyBhcmUgYSBtYWpvciBzb3VyY2Ugb2YgYW54aWV0eSBmb3IgbWUuIEkgYWx3YXlzIHRha2Ugbm90ZSBvZiB3aGVyZSB0aGUgcmVzdHJvb21zIGFyZSBsb2NhdGVkIGFuZCBoZWF2ZW4gZm9yYmlkIGl0IGlzIGEgc2luZ2xlIGJhdGhyb29tIHdpdGggYSB3YWl0aW5nIGxpbmUuIElyb25pY2FsbHksIG15IGZpcnN0IGVwaXNvZGUgd2FzIGluIGEgVmVnYXMgY2FzaW5vIHJlc3RhdXJhbnQgd2hpY2ggZG9lcyBub3QgaGF2ZSByZXN0cm9vbXMuIExpa2UgYSByYXQgaHVudGluZyBjaGVlc2UgaW4gYSBtYXplLCB5b3UgbmVlZCB0byBzZWFyY2ggZm9yIGEgcmVzdHJvb20gaW4gYSBjYXNpbm8gc2luY2UgdGhleSBhcmUgZGVzaWduZWQgdG8ga2VlcCB5b3Ugb24gdGhlIGZsb29yIGdhbWJsaW5nLgpBdCA0MSwgbXkgbW90aGVyIHN1ZGRlbmx5IGJlY2FtZSBwZXJtYW5lbnRseSBkaXNhYmxlZC4gCkkgd2Fsa2VkIG91dHNpZGUgYW5kIHRoZSBwYXJlbnRzIGFza2VkIGhpbSB0byB0aGFuayBtZSBhbmQgSSBzYWlkIG5vdCB0byB3b3JyeSBJJ20gaGFwcHkgaGUgZ2V0cyB0byBlbmpveSB0aGVtISBUaGVuIGhlIGhpZ2ggZml2ZWQgbWUgLiAKRXZlcnkgU2luZ2Fwb3JlYW4gc2hvdWxkIGp1c3QgY29vayBhIHBvdCBvZiBjdXJyeSBhbmQgZWF0IGl0IChyZWdhcmRsZXNzIG9mIHJhY2UgLyBsYW5ndWFnZSAvIHJlbGlnaW9uKS4gV2UgYXJlIFNpbmdhcG9yZWFucyBhbmQgd2UgTE9WRSBvdXIgY3VycmllcyAgIGJlIGl0IGNoaWNrZW4gY3VycnkgLyBmaXNoIGN1cnJ5IC8gbGFtYiBjdXJyeSAvIGJlZWYgY3VycnkgLyBiZWVmIHJlbmRhbmcgLyBsb250b25nIC8gbWVlIHNpYW0vIGxha3NhIC8gUGV0YWkgc2FtYmFsIGJlbGFjaGFuIC8gYXlhbSBidWFoIGtlbHVhayBldGMKQSBsb3Qgb2YgYW1hemluZyBwdWJsaWMgc2Nob29scyBhbHNvIGhhcHBlbiB0byBiZSBpbiBleHBlbnNpdmUgbmVpZ2hib3Job29kcy4KTGVpZGVyIGlzdCBlcyBkYW5rIGRlciA1JSBIcmRlIHRhdHNjaGxpY2ggc28sIGRhc3MgZGllIFN0aW1tZW4gZGVyZXIgZGllIGRpZXNlIEtsZWluc3RwYXJ0ZWllbiBnZXdobHQgaGFiZW4gbmljaHQgaW4gZGVyIFJlZ2llcnVuZyByZXByc2VudGllcnQgd2VyZGVuIHVuZCBkYW1pdCBhbHMgInZlcmxvcmVuIiB3YWhyZ2Vub21tZW4gd2VyZGVuLgpGaXJzdCBvZmYsIHRvIGV4cGxhaW4gd2hhdCBJIG1lYW4gYnkgJ0dlbmVyaWMgQ2FyZCBHYW1lIFNpbXVsYXRvcicsIG15IGZhbWlseSBhbmQgZnJpZW5kcyBhcmUgZmFpcmx5IHNjYXR0ZXJlZCBhY3Jvc3MgdGhlIGNvdW50cnkgKFVTKSwgc28gcGxheWluZyBjYXJkcyBsaWtlIHdlIHVzZWQgdG8gaXNuJ3QgcG9zc2libGUuIApIZSA3IHllYXJzIG9sZGVyIGFuZCBpcyB1cHNldCB0aGF0ICJJIGNoYW5nZWQiIGR1cmluZyB0aGVzZSBsYXN0IDkgeWVhcnMuIApJIHRoaW5rIERIIChkZWFyIGh1c2JhbmQpIHRoaW5rcyBpdCdzIG5vcm1hbCBhbmQgb2theSB0byBsaWUgc29tZSBvZiB0aGUgdGltZSB0byB5b3VyIHdpZmUuLiAKQXQgbWlsZSA2IEkgaGFkIHRvIHVzZSB0aGUgYmF0aHJvb20uIApQcm9iYWJseSBub3QuIHNpbmNlIHRoZSBvbmx5IHdheXMgb3V0IG9mIHRoZSB3b3JrIHRoYXQgaXMgbWFycmlhZ2UgYXJlIGRpdm9yY2UsIGhvbWljaWRlLCBvciBhZHVsdGVyeSwgbWF5YmUgdGhlIGJlc3Qgd2F5IHRvIHNwZW5kIHRoaXMgVmFsZW50aW5lIERheSBpcyB0byBoYXZlIGFuIGFmZmFpcj8KTmVhbE1jQmVhbF9fTmF2eVNlYWwgIDQyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClNvIGlmIHlvdSBjYW4gYnVpbGQgYnJhbmQgbG95YWx0eSBmb3IgYSB3ZWIgc2l0ZSBlYXJseSwgaXQgZ2l2ZXMgeW91IGFuIGFkdmFudGFnZSBvdmVyIG90aGVyIHZlbmRvcnMgd2hvIHRyeSB0byBlbnRlciB0aGUgbWFya2V0IGxhdGVyLiAKTG92ZSB0aGUgYW5hbG9naWVzIHRvIGRpZmZlcmVudCBnYW1ibGluZyBnYW1lcy4gWW91J3JlIHJpZ2h0IGFib3V0IHBva2VyICAgdHdvIHZlcnkgZGlmZmVyZW50IHR5cGVzIG9mIHBsYXllcnMuIApJdCBpcyBwZXJzb25pZmllZCBieSB0aGUgS2FyYWNoaSBTdG9jayBFeGNoYW5nZSAoS1NFKSBvbiBvbmUgaGFuZCwgYW5kIGJ5IHRoZSBvcHBvc2l0aW9uIHBhcnRpZXMgb24gdGhlIG90aGVyLiAKR3Jvd251cGlwIHUKSGF2aW5nIGEgZ29vZCBmZWVsIGZvciB5b3VyIHRhYmxlJ3MgbW9tZW50dW0gb3IgZHluYW1pY3MgY2FuIGhlbHAgeW91IGNvbWJhdCBhbiBlbmRsZXNzIHJ1biBvZiBsb3VzeSBjYXJkcy4gVGFraW5nIGRvd24gaW5jaWRlbnRhbCwgbm9uIGNvbnRlc3RlZCBwb3RzIGlzIHRoZSBrZXkgdG8gc3Vydml2YWwgYW5kIHRvdXJuYW1lbnQgYWR2YW5jZXMuIEJ1dCB0aGF0IHJlcXVpcmVzIGludHVpdGl2ZSBpbmZvcm1hdGlvbi4gSWYgeW91IHVzZSBIb2xkJ2VtIFBpcmF0ZSBsaWtlIEkgZG8sIHRoZSBWUElQIG1ldGVyIGlzIGludmFsdWFibGUgaW4gdGhhdCByZWdhcmQuIEF0IGEgZ2xhbmNlIHlvdSBrbm93IGhvdyB5b3VyICJjb2xsZWN0aXZlIHRhYmxlIiBpcyBhY3RpbmcgYW5kIGhvdyB0aGF0IGlzIGFmZmVjdGluZyB0aGUgY29udGVzdGVkIHBvdHMuIFNvIGlmIHlvdSBhcmUgbm90IGluIHBvc2l0aW9uLCBvciBub3QgZ2V0dGluZyBwb3Qgb2RkcywgeW91IGFyZSBiZXR0ZXIgb2ZmIHN0YXlpbmcgb3V0IG9mIHRoZSBhY3Rpb24gd2l0aCBhIGhpZ2ggVlBJUCB0YWJsZSByYXRpbmcuIE9uIHRoZSBvdGhlciBoYW5kLCBhIGxvdyAodGlnaHQpIFZQSVAgcmF0aW5nIHdpdGggb2ZmZXIgdXAgYW1wbGUgb3Bwb3J0dW5pdHkgdG8gdGFrZSBkb3duIGEgbG90IG9mIHNtYWxsIHBvdHMgd2hpbGUgYnVpbGRpbmcgYW4gYWdncmVzc2l2ZSBpbWFnZSBmb3IgeW91cnNlbGYuCk1pY2hvbiBNYXJ0aW4sIGNoaWVmIGRlcHV0eSBhdHRvcm5leSBnZW5lcmFsIGZvciBOZXZhZGEsIHNhaWQgY3JpbWluYWxzIGhhdmUgcmVhbGl6ZWQgdGhleSBvZnRlbiBmYWNlIGhhcnNoZXIgc2VudGVuY2VzIGZvciB0cmFmZmlja2luZyBkcnVncyB0aGFuIHRyYWZmaWNraW5nIGh1bWFucy4KRmFzdCBUaXA6IFJlYWQgYW4gYXJ0aWNsZSBhbG91ZCB3aXRoIHN0cm9uZyBkb3dud2FyZCBpbmZsZWN0aW9ucy4gQmVnaW4gZWFjaCBzZW50ZW5jZSBhdCBtaWRkbGUgdG8gaGlnaCBwaXRjaCBhbmQgY2FzY2FkZSBkb3dud2FyZCBhdCB0aGUgZW5kIG9mIGVhY2ggcGhyYXNlLgpTaGUgd29uIGhlciBmaXJzdCBpbmRpdmlkdWFsIExlYWd1ZSBDaGFtcGlvbnNoaXAgYXMgYSBzb3Bob21vcmUgaW4gMjAxNiBhbmQgZWFybmVkIGhlciBzZWNvbmQgY29uc2VjdXRpdmUgdGVhbSBNVlAgaG9ub3JzIHRoaXMgc3ByaW5nLi4gClRoaW5rIGFib3V0IHdoYXQgeW91J2Qgc2F5IHRvIHRoZSBpbnRlcnZpZXdlciBpbiBwZXJzb24sIHRoZW4gd3JpdGUgYW4gYWJicmV2aWF0ZWQgdmVyc2lvbiBvZiB0aGlzIGV4cGxhbmF0aW9uLi4gCkkgYWdyZWUsIEkgbmV2ZXIgc2FpZCB0aGF0IEkgb25seSB1c2UgcmVnZXguIApJIGRlY2lkZSB0byBkbyBzb21ldGhpbmcgYWJvdXQgaXQuIEZpcnN0IGEgdHJpcCB0byBXYWxsIFN0cmVldCB0byBjYXNoIGluIDUgYmlsbGlvbiBpbiBjcmVkaXQgZGVmYXVsdCBzd2Fwcy4gCkFzaWRlIGZyb20gdGhpcywgNSBib2FyZCBjYXJkcyBhcmUgZGVhbHQgZmFjZSB1cCBpbiB0aGUgY2VudGVyIG9mIHRoZSB0YWJsZSBhbmQgYXJlIGNvbnNpZGVyZWQgYXMgY29tbXVuaXR5IGNhcmRzLiBNb3N0IG9mIHRoZSB0aW1lLCBwbGF5ZXJzIHdobyBhcmUgdXNlZCB3aXRoIFRleGFzIEhvbGRlbSBnZXQgY29uZnVzZWQgd2l0aCBzb21lIG9mIHRoZSBydWxlcyBpbiBPbWFoYSBIaWdoIExvdyB3aGljaCBhcmUgcmV2ZXJzZSB0byBzb21lIG9mIHRoZSBydWxlcyBpbiB0aGUgZm9ybWVyLiAKIldlIGhhdmUgbm8gcHJvYmxlbXMgd2l0aCBhbnlvbmUgZ29pbmcgdGhyb3VnaCBvdXIgYm9va3MgYXQgYW55IHN0YWdlLCIgaGUgdG9sZCB0aGUgSGVyYWxkIFN1bi4gQnV0IGl0IHdhcyBjbGFzc2ljIHNwaW4uIAoiV2l0aCBIYWxvLCBbdGhlcmUncyBhbiBhY2hpZXZlbWVudCBmb3IgZ2V0dGluZyBhIGNlcnRhaW4gbnVtYmVyIG9mIHNob3RndW4ga2lsbHMgaW4gdW5kZXIgMjAgc2Vjb25kc10uIApEYW5sZXkgc2FpZCBzaGUgd2FzIGluaXRpYWxseSBwbGVhc2VkIHdoZW4gUGFkZG9jayB3aXJlZCBoZXIgbW9uZXkgaW4gdGhlIFBoaWxpcHBpbmVzIHRvIGJ1eSBhIGhvdXNlIGZvciBoZXIgZmFtaWx5LCBidXQgc2hlIGxhdGVyIGZlYXJlZCBpdCB3YXMgYSB3YXkgdG8gYnJlYWsgdXAgd2l0aCBoZXIuCiJUaGF0J3MgYSBsb3Qgb2YgbW9uZXksIiB0aGUgbGF3eWVyIHNhaWQuCldlIGhhZCBpbnZpdGVkIGhlciB0byBjZWxlYnJhdGUgd2l0aCBteSBkYWQgKHRoZXkncmUgc2VwYXJhdGVkKSBiZWNhdXNlIHNoZSB3b3VsZCBiZSBhIHRlcnJvciBpZiB3ZSBkaWRuJ3QuIApQZW9wbGUgcHJvcGVybHkgZm9sbG93aW5nIENCVCBhbmQgdGhlIGFkdmljZSBvZiB0aGVpciBwc3ljaGlhdHJpc3Qgd2lsbCBzdG9wIHVzaW5nIGNhbm5hYmlzLCBsZWF2aW5nIHRoZSBiYWQgYXBwbGVzIHdobyBrZWVwIHVzaW5nIGl0IGFzIHdlbGwgYXMgZm9sbG93aW5nIG90aGVyIGJhZCBwcmFjdGljZXMuClRoZSBzZWNvbmQgdGhpcmQgb2YgdGhlIGdhbWUgaXMgcHVyZSBtYXRocy4gSWYgeW91IGNhbiB3b3JrIG91dCB0aGUgb2RkcyAgIG9uIHRoZSBmbHkgICBvZiB3aGF0IGNhcmRzIGFyZSBsZWZ0IGluIHRoZSBwYWNrIGFuZCB0aGUgbGlrZWxpaG9vZCBvZiB0aGUgY2FyZHMgeW91IG5lZWQgdHVybmluZyB1cCBsYXRlciBpbiB0aGUgZ2FtZSwgdGhlbiB5b3UgYXJlIGltbWVkaWF0ZWx5IGFib3ZlIHRoZSBtYWpvcml0eSBvZiBwbGF5ZXJzIHdobyBhcmUgc2ltcGx5IGhvcGluZyB0aGF0IHRoZWlyIGNhcmQgd2lsbCB0dXJuIHVwLiBJZiB5b3UgcGxheSB0aGUgb2RkcywgaW4gYSBzZW5zaWJsZSB3YXksIGl0IGlzIGhpZ2hseSBsaWtlbHkgdGhhdCB5b3Ugd2lsbCB3aW4gbW9yZSB0aGFuIHlvdSBsb3NlIG92ZXIgdGltZS4uIApDbGl2ZU1jS3JhY2tlbiAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQmVhdCB0aGUgZWdnIHdpdGggYSB3aXJlIHdoaXNrLiAKSXQgdGFrZXMgYSBodW11bmdvdXMgZGVhbCBvZiBwYXRpZW5jZSB0byBub3Qgb25seSBsZWFybiB0aGUgbWFubmVyIG9mIHRoZSBnYW1lIGJ1dCBhbHNvIHRoZSBnYW1lIGluIGl0c2VsZi4gCk9mIGNvdXJzZSBJJ2xsIGFsd2F5cyBzdXBwb3J0IG15IGNoaWxkcmVuLCByZWdhcmRsZXNzIG9mIGFnZSwgaG93ZXZlci4gYXQgYSBjZXJ0YWluIGFnZSwgbXkgZmluYW5jaWFsIHN1cHBvcnQgd2lsbCBiZSBsaW1pdGVkLgoxLDYxNCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCldpdGggdGhhdCBpbiBtaW5kLCBJIHdvdWxkIGxpa2UgdG8gaGlnaGxpZ2h0IHRoYXQsIGlmIG5vdCBzZWxmIGV2aWRlbnQsIFRoZSBUd2lsaWdodCBab25lIGlzIGEgaG9ycm9yIHNlcmllcyB0aGF0IGZyYW1lcyBpdHNlbGYgaW4gZmFudGFzeSBhbmQgc2NpZW5jZSBmaWN0aW9uLkEgbG90IG9mIHRoZSBzb2NpYWwgY29tbWVudGFyeSBmb3VuZCBpbiBUaGUgVHdpbGlnaHQgWm9uZSB3YXMgbm90IG9yaWdpbmFsIHRvIFRoZSBUd2lsaWdodCBab25lLiBZZWFycyBiZWZvcmUgdGhlIE1vbnN0ZXJzIHdlcmUgZHVlIG9uIE1hcGxlIFN0cmVldCB0aGUgcGFyYW5vaWEgb2YgZW5lbWllcyB3aXRoaW4gd2FzIGNyaXRpY2l6ZWQgYnksIEludmFzaW9uIG9mIHRoZSBCb2R5IFNuYXRjaGVycyB3aGVyZSBldmVuIG91ciBmcmllbmRzIGNvdWxkIGJlIGVuZW1pZXMuIApXaHkgUXVlYmVjZXJzIGFyZSB1bmltcHJlc3NlZApJdCBpcyBqdXN0IGltcG9ydGFudCB0byBzZWxlY3QgYSB0YWJsZSB0aGF0IHdpbGwgYmUgbW9zdCBhcHByb3ByaWF0ZSBmb3IgeW91ciBuZWVkcy4uIApCeSBteSBkZXNjZW5kYW50cyBmb3IgdGhlIGZpcnN0IGZldyBjZW50dXJpZXMsIGFuZCB0aGVuIGFzIGEgbWVtb3J5IG9mIGFuY2llbnQgdGltZXMsIGFuZCB0aGVuLiBXZWxsIEkgZG9uIGV4YWN0bHkga25vdyB0byBiZSBob25lc3QuIEkgaGVhcmQgbWFueSBydW1vcnMgb3ZlciB0aGUgeWVhcnMuIApTdGVwIDU6IElmIHlvdSBoYXBwZW4gdG8gaGF2ZSAkNDUwICsgJDQ1IHlvdSBjYW4gYnV5IGluIHRvIHRoaXMgbGV2ZWwuIElmIHlvdSd2ZSB3ZXJlIGx1Y2t5IGVub3VnaCB0byBjb21lIGluIDFzdCBvciAybmQgdGhlIHByZXZpb3VzIHN0ZXAsIGl0IGNvc3RzIHlvdSBub3RoaW5nLiAKRmluZCB2YXJpb3VzIGNoZXN0IGFuZCBhYmRvbWluYWwgZXhlcmNpc2VzLCBsZWFybiBob3cgdG8gbG9zZSB3ZWlnaHQgZmFzdCBhbmQgc2FmZWx5LCBhbmQgY3JlYXRlIGEgaGVhbHRoeSBkaWV0LiBPdXIgZml0bmVzcyBzcGVjaWFsaXN0cyB3aWxsIGFkdmlzZSB5b3Ugb24gaG93IHRvIGxvb2sgYW5kIGZlZWwgZ29vZC4uIApPbmUgb2YgdGhlIG1vc3QgY29tbW9uIHNvbHV0aW9ucyBmb3IgbWlycm9yIHNjcmF0Y2hlcyBpcyBieSB1c2luZyByZWd1bGFyIHRvb3RocGFzdGUgdGhhdCB5b3UgdXNlIHRvIGJydXNoIHlvdXIgdGVldGguIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZUFib3V0ICQ1MCBtaWxsaW9uIGlzIGZlZCBpbnRvIHBva2VyIG1hY2hpbmVzIGluIHRoZSBTaGVsbGhhcmJvdXIgcmVnaW9uIGVhY2ggeWVhci4gQ291bmNpbGxvciBQZXRlciBNb3JhbiB0aGlua3MgdGhhdCBpcyBhIG1hc3NpdmUgYW1vdW50IG9mIG1vbmV5IGZvciBvbmx5IGEgcmVsYXRpdmVseSBzbWFsbCBjaXR5LiAKVGhlIGF1dG9tYWtlciBoYXMgc3BlbnQgbW9yZSB0aGFuICQ3LjUgYmlsbGlvbiB0byByZXN0cnVjdHVyZSBpdHMgZm9ybWVyIHBhcnRzIGRpdmlzaW9uLCBEZWxwaGkuCkFuZCB0aGF0IG1ha2luZyBhIGxvdCBvZiBmYWN1bHR5IGFuZCBzdHVkZW50cyBhdCBTTVUgYSB3ZWUgYml0IGFueGlvdXMuIApXaWxsIHdvcmsgZm9yIHVzLiBZZXMsIGZvciB1cy4gVGhleSBhcmUgb3VyIHJlcHJlc2VudGF0aXZlIGluIENvbmdyZXNzIG9yIGFzIFByZXNpZGVudC4gV2UgbmVlZCBzb21lb25lIHdobyB3aWxsIGxpc3Rlbi4gTm93IEkgdW5kZXJzdGFuZCB0aGF0IHRoZXkgbmVlZCB0byBnbyBieSB3aGF0IHRoZSBtYWpvcml0eSBvZiBBbWVyaWNhbnMgd2FudCBidXQgbm90IGV2ZXJ5b25lIHdhbnRzIHRoZSBzYW1lIHRoaW5nLiBJIHdhbnQgYSBQcmVzaWRlbnQgd2hvIGNhbiBjb21wcm9taXNlIGVub3VnaCB0byBnaXZlIHVzIGFsbCB3aGF0IHdlIGRlc2VydmUuIFdlIG5lZWQgYSBQcmVzaWRlbnQgd2hvIHdpbGwgbG9vayBhdCB0aGUgbmVlZHMgb2YgdGhlIGFsbCBhbmQgZnVsZmlsbCB0aGF0IGtub3dpbmcgaXQgd2lsbCBnaXZlIGV2ZXJ5b25lIHRoZSBvcHBvcnR1bml0eSB0aGV5IGRlc2VydmUgaW4gbGlmZS4KV2h5IGRvZXMgdGhlIGdhbWUgY29zdCBhbiB1cGZyb250ICQyMD8gQmVjYXVzZSBJZiAiVGhlIHBheW1lbnRzIGFyZSBza2V3ZWQgdG8gYW4gZXh0cmVtZWx5IHNtYWxsIHBvcnRpb24gb2YgdGhlIHBvcHVsYXRpb24sIiB0aGF0IHNraW5uZXJ3YXJlLiAKTGV0IGdpdmUgdGhlbSBhbGwgdGhlIGJlbmVmaXQgb2YgdGhlIGRvdWJ0IGFuZCBzYXkgdGhhdCB0aGV5IGFsbCBzYXcgTmVlbGl4IHRvc3MgaW4gMzAgd2hlbiBoZSBzYWlkICJ0d2VudHkiIHNvIHRoZXkgZGlkbiBjb3JyZWN0IGhpbSwgc2luY2UgdGhlIGJldCB3YXMgY29ycmVjdCwgaGUganVzdCBhY2NpZGVudGFsbHkgc2FpZCB0aGUgd3JvbmcgdGhpbmcuIEhlIHRoZW4gcmFpc2VzIDIwIG1vcmUgaW4gYSBTRVZFUkUgc3RyaW5nIGJldCwgYnV0IGV2ZXJ5Ym9keSBpcyBzdHJpbmcgYmV0dGluZyAoZXhwbGFpbmVkIGJlbG93KSBhbmQgaXQgdXN1YWxseSBjb25zaWRlcmVkIGEgdmVyeSBtaW5vciB2aW9sYXRpb24gaW4gYSBob21lIGdhbWUgYW5kIGlzIGFsbG93YWJsZS5dLiAKSGUgbmV2ZXIgdHJpZWQgdG8gZ2V0IHRvIHRoZSBib3R0b20gb2YgdGhlIG5hc3R5IHJlc3RyaWN0aW9ucyB0aGF0IHdlcmUgcGxhY2VkIG9uIG1lIGJ5IE11c2hhcnJhZi4gCkNoZXJpc2hlZCBncmFuZG1vdGhlciBvZiA1IGFuZCBncmVhdCBncmFuZG1vdGhlciBvZiAzLiAKRGFydGhlbG1ldDEgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KV2UgZm91bmQgZXZpZGVuY2Ugb2Ygc2VsZiBzZXJ2aW5nIGF0dHJpYnV0aW9ucyB0aGF0IG9jY3VyIGJldHdlZW4gcHJpbWFyeSByZWxhdGlvbnNoaXAgcGFydG5lcnMgZm9sbG93aW5nIHNleHVhbCBiZXRyYXlhbHMuIE1vcmVvdmVyLCB3ZSBmb3VuZCB0aGF0IHBhcnRpY2lwYW50cyB3aXRoIHByaW9yIGV4cGVyaWVuY2UgYXMgYm90aCBzZXh1YWwgaW5maWRlbGl0eSBwZXJwZXRyYXRvcnMgYW5kIHZpY3RpbXMgZGlzcGxheWVkICJzZXh1YWwgaHlwb2NyaXN5IiBieSBqdWRnaW5nIG90aGVycyBtb3JlIGhhcnNobHkgdGhhbiB0aGVtc2VsdmVzIGZvciBzZXh1YWxseSB1bmZhaXRoZnVsIGJlaGF2aW9yLiBPdXIgZmluZGluZ3MgZGVtb25zdHJhdGUgdGhhdCBwZXJzb25hbGl0eSB2YXJpYWJsZXMgYXNzb2NpYXRlZCB3aXRoIHNleHVhbCBpbmZpZGVsaXR5IChuYXJjaXNzaXNtLCBzZXh1YWwgbmFyY2lzc2lzbSwgYXZvaWRhbnQgYXR0YWNobWVudCwgYW5kIHByaW1hcnkgcHN5Y2hvcGF0aHkpIGFyZSBhbHNvIHJlbGV2YW50IHRvIHNlbGYgc2VydmluZyBhdHRyaWJ1dGlvbnMgaW4gdGhlIHNleHVhbCBpbmZpZGVsaXR5IGNvbnRleHQuIApUaGUgcmVzdWx0aW5nIHNlbnRlbmNlIHdhcyB0aW1lIHNlcnZlZCwgNSB5ZWFycyBvZiByYXBpbmcgdG9ydHVyZSBwcm9iYXRpb24sIGFuZCBzZXggb2ZmZW5kZXIgcmVnaXN0cmF0aW9uLiBJIGZlbHQgdGhhdCBJIHdhcyBwc3ljaG9sb2dpY2FsbHkgc2xhbW1lZCBvbiB0aGUgYmFjayBzaWRlIG9mIG15IGhlYWQgd2l0aCB0aGUgdGltZS4gQXQgbm93IG5lYXJseSAzMSB5ZWFycyBvbGQsIEkgZmVlbCBzZXh1YWxseSBkZWZsYXRlZCwgbXkgY2FyZWVyIHByb3NwZWN0cyBhcmUgcnVpbmVkIFtJIGhhcmRseSBoYXZlIGFueSBleHBlcmllbmNlXSwgYW5kIEkgaGF2ZSBvbmx5IG15IG1vdGhlciBmb3Igc3VwcG9ydC4gCkkgYXNrZWQgaGltIHRvIHN0b3AsIGhlIHN0b3BwZWQsIHNob3QgbWUgdGhhdCBkcmVhbXkgTXVsZGVyIGxvb2ssIGFuZCBzYXVudGVyZWQgYXdheSBpbiBoaXMgdHJlbmNoY29hdC4gCkkgZ3Vlc3Mgc29tZSBwZW9wbGUgY2FuIHN0YW5kIG5vdCB3YXRjaGluZyBiYXRzaGl0IGNyYXp5IHByb3BhZ2FuZGEgZm9yIHRoZSBmaWZ0ZWVuIG1pbnV0ZXMgdGhleSBpbiB0aGUgd2FpdGluZyByb29tLiAKQnV0IGFueXdheXMuIApJIGd1ZXNzIHRoYXQgd2h5IEkgZmVlbCBjb21wZWxsZWQgdG8gdHJ1c3QgYW5kIGdhaW4gdGhlIGFwcHJvdmFsIG9mIG9sZGVyIHdvbWVuIHdobyBhcmUgZW1vbSBvcHBvc2l0ZTogd2FybSB3aXRoIGEgc3BpbmUuIEJ1dCB0aGlzIGxvbmdpbmcgZm9yIGEgbWF0ZXJuYWwgY29ubmVjdGlvbiBkb2VzbiBicmluZyBtZSBqb3kuIE1vcmUgdGhhbiBhbnl0aGluZywgaXQgbWFrZXMgbWUgZmVlbCBsaWtlIEkgYmVpbmcgY2hpbGRpc2ggYW5kIG5lZWR5IGZvciBzb21ldGhpbmcgdGhhdCBhbHdheXMgZ29pbmcgdG8gYmUgdG9vIG11Y2ggdG8gYXNrIGZvciBhcyBzb21lb25lIHdobyBubyBsb25nZXIgeW91dGhmdWwgYW5kIGhhcyBuZXZlciBiZWVuIGNoYXJtaW5nLiAKSXQgYWxzbyB0aGUga2luZCBvZiBwb3NlIHRoYXQgcGluIHVwIGdpcmxzIGhhZCB3aGVuIHRoZXkgd2VyZSBwYWludGVkIG9uIHRoZSBzaWRlIG9mIGJvbWJlcnMgaW4gV29ybGQgV2FyIDIsIHdoaWNoIGlzIGEgbmljZSB0aWUgaW4gdG8gaGVyIGhpc3RvcnkgYXMgYSBwaWxvdCAoc3BlY2lmaWNhbGx5LCB0aGUgcG9zZSBpcyBiYXNpY2FsbHkgdGhhdCBvZiB0aGUgTWVtcGhpcyBCZWxsZSBub3NlIGFydCwgd2hpY2ggaXMgb25lIG9mIHRoZSBtb3N0IGljb25pYyBub3NlIGFydHMgZHVlIHRvIHRoZSBwbGFuZXMgaGlzdG9yeSkuLiAKSW4geW91ciBuZXdzIHJlYWRlciwgc2VsZWN0IHRoZSBvcHRpb24gdGhhdCBhZGRzIGEgbmV3IGZlZWQgb3IgY2hhbm5lbCwgdGhlbiBwYXN0ZSBpbiB0aGUgVVJMIGFuZCBjbGljayBPSy4uIApQb2x5cGhhc2ljYmFsaXNvbmcwLjQgSCAgIFNjcmF0Y2g/CkZseWluZ0FwcGxlMzEgIDMzIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KSSB3YXMgaG9waW5nIHRvIGNvbWUgaW4gdW5kZXIgMTozMCBhbmQgSSByYW4gYSAxOjI5OjU4IS4gCk1vdGhlcmJvYXJkOiBDb21tb24gc2Vuc2Ugd291bGQgZ28gd2l0aCBhbiBYNDcwIGJvYXJkIHdoZW4gYnVpbGRpbmcgd2l0aCBhIFJ5emVuIDcuIApBcyB0aGUgaW52ZXN0aWdhdGlvbiBjb250aW51ZWQsIGluZm9ybWF0aW9uIHdhcyBkZXZlbG9wZWQgdGhhdCBhIHNlY29uZCBzdXNwZWN0IHdhcyBwcmVzZW50IGFuZCBwYXJ0aWNpcGF0ZWQgaW4gdGhlIG11cmRlciBvZiBNcy4gClBva2VyIGhhcyBzaG93biBhbiB1bnByZWNlZGVudGVkIGdyb3d0aCBpbiBwb3B1bGFyaXR5IGluIHRoZSBsYXN0IGZldyB5ZWFycy4gVGhlcmUgYXJlIG1hbnkgcmVhc29ucyBjb250cmlidXRpbmcgdG8gdGhpcy4uIAo1IEV4dHJhdmFnYW50IENhciBBbWVuaXRpZXMKRm9yIGEgbW9yZSBmb3JtYWwgZmVlbCwgdGhlIHNtYWxsZXIgSW50ZXJ2YWxsbyAocHJpY2Ugb24gcmVxdWVzdCkgd2l0aCBpdHMgZGlhbW9uZCBzaGFwZWQgY2FzZSBwZXJmZWN0bHkgYnJpZGdlcyB0aGUgZ2FwIGJldHdlZW4gY29mZmVlIGFuZCBnYW1lcyB0YWJsZS4gQ0hSSVNUSU5BIE9ITFkgRVZBTlMuIApTdXJlLCB0aGVyZSBhcmUgc29tZSBpc3N1ZXMgaGVyZSBhbmQgdGhlcmUgdGhhdCBJIG5vdGljZWQgc3VjaCBhcyBvZmYgbW9kZWwgYW5pbWF0aW9uLCBzdG9yeSBiZWluZyByb3VnaCBhdCB0aGUgZWRnZXMgYXQgc29tZSBwb2ludCAoZXNwZWNpYWxseSB3aGVuIHlvdSBjb25zaWRlciB0aGUgZmFjdCB0aGF0IHRoZSBlbmRpbmcgaGFkIHRvIGJlIHJld3JpdHRlbiBmb3IgdGhlIGxhc3QgNSBlcGlzb2RlcyBpbiBvcmRlciB0byBnaXZlIGEgYmV0dGVyIGVuZGluZyB0byB0aGUgY2hhcmFjdGVycykgYW5kIElkaW9rIGJ1bGxzaGl0IHBsb3QgYXJtb3VyIGtlZXBpbmcgaGltIGFsaXZlIHVudGlsIHRoZSB2ZXJ5IGxhc3QgZXBpc29kZS4gCkkgdGhpbmsgaXQgaXMgNSBzZWNvbmRzLiAKSG93ZXZlciwgTXIgQWNodGVyc3RyYWF0IHNheXMgdGhlIGF1ZGl0IGZvdW5kIHRoZSBndWlkZWxpbmVzIHdlcmUgInZhZ3VlIG9uIHdoYXQgY2FuIGJlIGZ1bmRlZCIuIFRoaXMgbWVhbnQgdGhhdCBmdW5kaW5nIGRlY2lzaW9ucyAiYXJlIG5vdCB0cmFuc3BhcmVudCIuICJDbHVicyBtYWtlIGRlY2lzaW9ucyBiYXNlZCBvbiBjbHViIHBoaWxvc29waHksIGxvYmJ5aW5nIGJ5IHBvdGVudGlhbCByZWNpcGllbnRzLCBwcm9qZWN0cyB0aGV5IHdvdWxkIGxpa2UgdG8gZnVuZCBvciBoYXZlIGhhZCBhIGhpc3Rvcnkgb2YgZnVuZGluZywiIHRoZSByZXBvcnQgc2F5cy4gClRoaXMgZ2FtZSBpcyBzbyBtdWNoIGZ1bi4gClNvIEkgd2VudCBiYWNrIGFuZCByZWFkIDE5ODQgZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIGhpZ2ggc2Nob29sIGFuZCBpdCByZWFsbHkgZWVyaWUuIEhlIHJlYWxseSBuYWlsZWQgaXQuIFNvIHllYWgsIHRoZSBuZXh0IGFsYnVtIGlzIGdvaW5nIHRvIGJlIGFsbCBhYm91dCBkeXN0b3BpYS4gClJlZ2FyZGxlc3Mgb2YgaG93IHlvdSB0aGluayBpdCBzaG91bGQgYmUsIHRoZSBncmltIGZhY3QgaXMgdGhhdCBzb2NpZXR5IGlzIG5vdCBzZXQgdXAgdG8gYWNjb21vZGF0ZSBldmVyeSB2YXJpZXR5IG9mIGRlZmVjdCBhbmQgZW5hYmxlIGEgZnVsZmlsbGluZyBsaWZlLiBGb3IgY3J5aW5nIG91dCBsb3VkLCB3ZSBzdGlsbCBzdHJ1Z2dsaW5nIHdpdGggd2hlZWxjaGFpciByYW1wcyBhbmQgaGFuZGljYXAgcGFya2luZywgbGV0IGFsb25lIGdlbmVyYWwgcHJlanVkaWNlcyBsaWtlIHJhY2UgYW5kIGNvbG9yLi4gCkJhc3MgR3JlZW5zIE1IQSBBbmRyZWEgRGF3a2lucyBzYWlkIHRoZSBmaWd1cmVzIHNob3dlZCByZW1vdmluZyBlbGVjdHJvbmljIGdhbWluZyBtYWNoaW5lcyBmcm9tIHB1YnMgYW5kIGNsdWJzIG1heSBub3Qgc3RvcCBwcm9ibGVtIGdhbWJsZXJzLCBidXQgaXQgd2FzIHN0aWxsIHRoZSBiZXN0IHBsYWNlIHRvIHN0YXJ0LgpHb3QgaXQsIE9MRyBzYWlkLiAKTVlUSCBOTy4gMTpNaWNoYWVsIEphY2tzb24ncyBmYXRoZXIgc2V4dWFsbHkgYWJ1c2VkIGhpbSBhcyBhIGNoaWxkCkkgZG9uIHRoaW5rIGFnZSB3aWxsIGhhdmUgbXVjaCBmYWN0b3IgaW4gaXQsIHJlYWxseS4gSSB3b3VsZG4gYmFyZSBkb3duIG9uIHlvdXJzZWxmIGZvciB3aGF0IHlvdSBoYXZlbiBkb25lIGF0IGFnZSAyOCwgYXMgSSBzdXJlIHlvdSBoYWQgbWFueSBleHBlcmllbmNlcyBhbmQgbGl2ZWQgdmVyeSBpbnRlcmVzdGluZyB0YWxlcyB0aGF0IHBlb3BsZSBvZiBhbnkgYWdlIHdvdWxkIGJlIGVudmlvdXMgb2YhIFlvdXIgam91cm5hbCBzZWVtcyBsaWtlIGEgZ3JlYXQgaWRlYS4gClRoZSBJbnRlcnRvcHMgUG9rZXIgTWFuYWdlciwgc2FpZDogIlRoZSBTT0ZUIFNlcmllcyBpcyBzaG9ydCBhbmQgc3dlZXQsIGJ1dCBpdCBpcyB0aGUgcGVyZmVjdCBvcHBvcnR1bml0eSBmb3IgcGxheWVycyB0byB0ZXN0IHRoZWlyIHNraWxscywgaGF2ZSBmdW4gYW5kIHdpbiBzb21lIGluY3JlZGlibGUgcHJpemVzLiIKWmllbCBkZXIgU2Fua3Rpb25lbiBpc3QgZXMgLCBkaWUgVmVyc29yZ3VuZ3NsYWdlIHNvIHdlaXQgenUgdmVyc2NocmZlbiwgYmlzIGRpZSBCZXZsa2VydW5nIHNpY2ggZ2VnZW4gZGllIFJlZ2llcnVuZyBlcmhlYnQgdW5kIHNpZSBhdXMgZGVtIEFtdCBmZWd0LiBVbmQgZGllIGltIEFQIEFydGlrZWwgYmVzY2hyaWViZW5lbiBGbGxlIHplaWdlbiBkZXV0bGljaCBhdWYsIGRhc3MgZGllIFNhbmt0aW9uZW4gICBhdWNoIHdlbm4gZWluaWdlIExlaWNodGdsdWJpZ2UgaW1tZXIgd2llZGVyIGFyZ3VtZW50aWVyZW4sIGRhc3Mgc2llIGphIG51ciBnZWdlbiBFaW56ZWxwZXJzb25lbiBkZXIgUmVnaWVydW5nIGdlcmljaHRldCBzZWllbiAgIHZvbGwgYXVmIGRpZSBub3JtYWxlIEJldmxrZXJ1bmcgZHVyY2hzY2hsYWdlbiwgc2llIGhydGVyIHRyZWZmZW4sIGFscyBpaHJlICAgYW5nZWJsaWNoICAgZWlnZW50bGljaGVuIFppZWxlLi4gCkl0J3MgZXh0cmVtZWx5IGVuam95YWJsZSwgYnV0IG5vdyB0aGF0IHdlIGhhdmUgYSBSZWQgQ2FzaW5vIEdyYWRlIFdvb2wgQmxlbmQgU3BlZWQgQ2xvdGggb24gZWFjaCB0YWJsZSBwZW9wbGUgaGF2ZSBiZWVuIGNvbW1lbnRpbmcgb24gaXQgbGlrZSBjcmF6eS4gT3VyIGxhc3QgZ2V0IHRvZ2V0aGVyIG15IGJyb3RoZXIncyB3aWZlIGNhbWUgdXAgYW5kIGFza2VkIHdoZXJlIHdlIGdvdCB0aGUgY2xvdGggYmVjYXVzZSBzaGUgd2FudGVkIHRvIGJ1eSBzb21lIGZvciBoaXMgdGFibGVzIChoZSBoYXMgdHdvKS4gSXQgd2FzIGZ1bm55IGJlY2F1c2Ugc2hlIGRpZG4ndCBiZWxpZXZlIG1lIHdoZW4gSSB0b2xkIGhlciB3ZSBwdXJjaGFzZWQgdGhlbSBvbmxpbmUuIApIZSBhZGRlZDogIldlJ3JlIGFzIGVxdWFsbHkgc3R1bm5lZCBhcyBldmVyeWJvZHkgZWxzZS4iClJlZ2FyZGluZyAoYikgSSBub3QgZm91bmQgYW55IHJlYWxseSBnb29kIGd1aWRlcyBvbiB0aGlzIGF0IGFsbCAgIGl0IGFsbCBqdXN0IHNlZW1zIHRvIGJlICJ5b3UgZ2V0IHRoZSBoYW5nIG9mIGl0IGluIHRpbWUiIHNvcnQgb2Ygc3R1ZmYuIE9yIHZlcnkgc3BlY2lmaWMgZXhhbXBsZXMgdGhhdCBtYWtlIGl0IGhhcmQgdG8gZXh0cmFwb2xhdGUgaW50byBhIGdlbmVyYWxpc2F0aW9uIGFib3V0IHBsYXllciB0eXBlcyBldGMuCkl0IGlzIGltcG9ydGFudCBhbmQgYWJzb2x1dGVseSBlc3NlbnRpYWwgdG8gZW5zdXJlIHRoYXQgdGhlIGVkZ2VzIGFyZSBpbiBnb29kIGNvbmRpdGlvbiBhbmQgdGhhdCB0aGV5IGFyZSBub3QgbWFya2VkIGluIGFueSB3YXkuIApJIHRoaW5rIGl0IHdvdWxkIGJlIGtpbmQgb2YgeW91IHRvIGdpdmUgaGltIHRoZSBmZXcgdGhpbmdzIGhlJ3MgcmVxdWVzdGVkIGl0IHdvdWxkIGxpa2VseSBtZWFuIGEgbG90IHRvIGhpbS4uIApGb3IgVWtyYWluZSBhbmQgd2lsbCBiZSBkaXNjdXNzZWQgYmVsb3cuCkNob29zaW5nIGEgc3RvcmUgdGhhdCBzcGVjaWFsaXplcyBpbiBtYXNzYWdlIHRvb2xzIHN1Y2ggYXMgdGhvc2UgZm9yIGEgZmFjaWFsIG1hc3NhZ2Ugb3IgYSBzaG91bGRlciBtYXNzYWdlIGlzIGJlc3QgYXMgdGhlc2Ugc3RvcmVzIGNhcnJ5IHRvcCBicmFuZHMuLiAKV2FzIG1pdCBkZXIgSyBpbiBEIGJlZ2FubiwgaXN0IGhldXRlIEFsbHRhZyBpbiBHcm8gd2VsdHdlaXQuIApUaGUgb25seSBleHBsYW5hdGlvbiB3aHkgdGhlcmUgYXJlIHNvIG1hbnkgRXVyb3BlYW4gZm9vdGJhbGwgbGVhZ3VlcyBjb3ZlcmVkIGF0IFVuaWJldCBpcyB0aGF0IHRoZXkgYXJlIG9uIHRoZSBtaXNzaW9uIHRvIGNvdmVyIGFueSBwb3NzaWJsZSBmb290YmFsbCBjb21wZXRpdGlvbiBpbiBFdXJvcGUuIApBcyBwYXJ0IG9mIHRoZSBjb21wYW55J3MgY29ycG9yYXRlIGNpdGl6ZW5zaGlwIGluaXRpYXRpdmUsIEFjY2VudHVyZSBsYXVuY2hlZCB0aGUgU2tpbGxzIHRvIFN1Y2NlZWQgaW5pdGlhdGl2ZSBpbiAyMDEwLCBhbiBpbnRlcm5hdGlvbmFsIGVmZm9ydCB0byBoZWxwIGluZGl2aWR1YWxzIGRldmVsb3AgdGhlIG5lY2Vzc2FyeSBza2lsbHMgZm9yIGVtcGxveW1lbnQgICBvdmVyIDIuMiBtaWxsaW9uIHBlb3BsZSBoYXZlIGJlZW4gaGVscGVkIHdvcmxkd2lkZSwgaW5jbHVkaW5nIG92ZXIgMjcsMDAwIENhbmFkaWFucyBsYXN0IHllYXIKKFByaXZhY3kgUG9saWN5KUFtYXpvbiBVbmlmaWVkIEFkIE1hcmtldHBsYWNlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKSSBjYW4ndCBzdG9wIHRoaW5raW5nIGFib3V0IHBva2VyISBPZGRzLCBoYW5kcywgYmx1ZmZzLCBzdHJhdGVnaWVzLCB0aGUgdGhyaWxsIG9mIHRoZSB2aWN0b3J5IGFuZCB0aGUgYW5nZXIgb2YgdGhlIGxvc3Nlcy4gRXZlcnl0aGluZyBJIGRvbid0IGhhdmUgaW4gbXkgZGF5IGpvYiwgSSBjYW4gZmluZCBpdCBpbiBwb2tlci4gSSBoYXZlIHNvbWUgZnJpZW5kcyB3aG8gYmVjYW1lIHByb2Zlc3Npb25hbHMgYW5kIGhvbmVzdGx5IEkgZW52eSB0aGVpciBsaWZlc3R5bGU6IHRoZXkncmUgaW4gVmVnYXMgcmlnaHQgbm93IHBsYXlpbmcgdGhlIFdTT1Agd2hpbGUgSSdtIGF0IGFuIG9mZmljZSBkb2luZyBub24gY2hhbGxlbmdpbmcgd29yaywgdGhvdWdoIEkgaGF2ZSBhIHZlcnkgZ29vZCBhbmQgc3RhYmxlIGpvYiB3aG8gZWFybnMgbWUgZ29vZCBtb25leS4uIApFdmVyeXRoaW5nIGhhcyBwYWlkIG9mZi4gIkkgdGhpbmsgSSdsbCB0YWtlIGEgeWVhciBvZmYgYW5kIGNvbWUgYmFjayBhbmQgZG8gYSBtYXN0ZXJzIGluIHByb2plY3QgbWFuYWdlbWVudC4iIFJlbmVlIEdvb3Nlbiwgd2hvIGhhcyBzdHVkaWVkdmlhIGRpc3RhbmNlLCBoYXMgbm93IHJlY2VpdmVkIGhlciBzZWNvbmQgbWFzdGVycyBkZWdyZWUgIGEgTWFzdGVycyBvZiBDbGluaWNhbCBQc3ljaG9sb2d5LiAKSSByZWNvcGllZCBteSBjaGlja2Vuc2NyYXRjaCBxdWljayBub3RlcyBmcm9tIGNsYXNzIGluIGNsZWFyIGhhbmR3cml0aW5nLCBpbiBkaWZmZXJlbnQgY29sb3IgcGVucyBmb3IgZGlmZmVyZW50IGlkZWFzLCBhZGRlZCBpbGx1c3RyYXRpb25zIGFzIG5lZWRlZCBhbmQga2VwdCBub3RlYm9va3Mgb3JnYW5pemVkIGJ5IGNsYXNzLiAKRmVybmFuZGV6IHdhcyBhY2N1c2VkIG9mIGhlbHBpbmcgYSBob3RlbCBjb21wYW55IHdpdGggcGVybWl0dGluZyBwcm9ibGVtcyBhbmQgcmVjZWl2aW5nIGZyZWUgYWNjb21tb2RhdGlvbnMuIE9ydGl6IGFja25vd2xlZGdlZCBpbiB0aGUgc2V0dGxlbWVudCwga25vd24gYXMgYSBzdGlwdWxhdGlvbiwgdGhhdCBiZWxpZXZpbmcgaGVyIGh1c2JhbmQgd2FzIGFwcHJvcHJpYXRlbHkgbWFuYWdpbmcgdGhlIGhvdXNlaG9sZCBmaW5hbmNlcywgc2hlIGZhaWxlZCB0byB0YWtlIHJlYXNvbmFibGUgc3RlcHMgdG8gc3RheSBhcHByaXNlZCBvZiBoZXIgZmluYW5jaWFsIGNpcmN1bXN0YW5jZXMsIGluY2x1ZGluZyBmYWlsaW5nIHRvIG1ha2Ugc3BlY2lmaWMgaW5xdWlyeSBpbnRvIGhvdyB0aGUgdHJpcHMgd2VyZSBwYWlkIGZvci4KVGhlIGZpZ2h0aW5nIGFuZCBwZW9wbGUgZ2V0dGluZyBrbm9ja2VkIGRvd24gY2FtZSBmcm9tIGp1bXBpbmcgZm9yIHRoZSBmcmlzYmVlIGFzIGl0IGNvbWUgdG93YXJkcyBhIGdyb3VwLCBmaWdodGluZyBvdmVyIG9uZSB0d28gcGVvcGxlIGhhZCBjb250cm9sIG92ZXIsIG9yIHRyeWluZyB0byBkb2RnZSBzb21lb25lIHN3aW5naW5nIG9uZSBhdCB5b3UuCldlIGRpZCB0aGUgd29yayBzbyB0aGF0IHlvdSBjYW4gcmVhcCB0aGUgcmV3YXJkcyBhbmQgc3RhcnQgbWVldGluZyBnaXJscyB0b25pZ2h0LiAKV2hlbiBwZWFjZWZ1bCBkZW1vbnN0cmF0b3JzIGFyZSBiZWF0ZW4gYW5kIHNpbGVuY2VkLCB3ZSBoYXZlIGEgZHV0eSB0byByYWlzZSBvdXIgdm9pY2VzIG9uIHRoZWlyIGJlaGFsZi4gCkNhbmR5X2hlYXJ0ICAxMDEgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KUmVzcG9uc2UgZnJvbSBUQlJlc29ydFNpZXN0YUtleSwgRGlyZWN0b3Igb2YgU2FsZXMgYXQgVHJvcGljYWwgQnJlZXplIFJlc29ydFJlc3BvbmRlZCAyIHdlZWtzIGFnbwo5NyA5OSkiIEJvcm4gVGhpcyBXYXkgKERlbHV4ZSBBbGJ1bSBCb251c1NvbmdzKSIgQmxhY2sgSmVzdXMgKyBBbWVuIEZhc2hpb24sIEZhc2hpb24gb2YgSGlzIExvdmUsIFRoZVF1ZWVuLiAKIkhlIHRob3VnaHQgaGUgaGFkIGtpbGxlZCBoZXIuIkNvbGxpbnMnIGF0dG9ybmV5LCBaYWsgTWFsa2luc29uLCBkaWQgbm90IGNoYWxsZW5nZSB0aGUgZmlyc3QgZGVncmVlIGFzc2F1bHQgY2hhcmdlIGZvciB0aGUgcHVycG9zZSBvZiB0aGUgcHJlbGltaW5hcnkgaGVhcmluZywgYnV0IGRpZCBzYXkgdGhhdCB0aGVyZSB3YXMgbm90IGVub3VnaCBldmlkZW5jZSBmb3IgYW4gYXR0ZW1wdGVkIG11cmRlciBjaGFyZ2UuIkZvciBwdXJwb3NlcyBvZiB0aGlzIGFyZ3VtZW50LCBoaXR0aW5nIHNvbWVvbmUgb3ZlciB0aGUgaGVhZCBvbmNlIG9yIHR3aWNlIGRvZXMgbm90IGVxdWFsIGF0dGVtcHRlZCBtdXJkZXIsIiBNYWxraW5zb24gc2FpZC4gIlRoZXJlJ3MgY2xlYXJseSBldmlkZW5jZSBmb3IgdGhlIGZpcnN0IGRlZ3JlZSBhc3NhdWx0LCBidXQgYXMgZmFyIGFzIGRlbGliZXJhdGlvbiAuIApQcm9ncmFtbWVkIHdpdGggQmx1ZXRvb3RoIHRoYXQgZnVuY3Rpb25zIGluIHRlbXBlcmF0dXJlcyBhcyBsb3cgYXMgbWludXMgNSBkZWdyZWVzIEZhcmVuaGVpdCwgdGhlIGhlbG1ldCBjYW4gdGFrZSBtb2JpbGUgcGhvbmUgY2FsbHMgYW5kIHBsYXkgbXVzaWMgICBldmVuIHdoZW4gYSB1c2VyIGlzIGZhbGxpbmcgb3Zlci4gCkpvaG5zb24gaGFkIHBsYW5uZWQgdG8gYW5ub3VuY2UgdGhlIHBlYWNlIHBsYW4gb24gdHYuIApEb3dubG9hZCB0aGUgTGl2ZSBmb3IgU3BlZWQgdG9ycmVudCBmaWxlLiBMYXRlc3QgdmVyc2lvbi4gCkkgbG92ZWQgdGhlIHdob2xlIGV4cGVyaWVuY2Ugd2l0aCB0aGUgZGluaW5nIGNhciwgc2lnaHRzZWVpbmcgY2FyLCBhbmQgdHJhdmVsaW5nIHRocm91Z2ggbWFueSBzdGF0ZXMgYmFja3lhcmRzLi4gCidJdCdzIGJlZW4gc3VjaCBzbyBsb25nIHBlb3BsZSBmb3Igc29tZXRoaW5nIGEgZGVwcml2ZWQgYXJlYSBmb3IgYXJlIGRlc3BlcmF0ZSB0byBoYXBwZW4nIEluIEp1bmUgMjAxNiwgdGhlIEJyZXhpdCByZWZlcmVuZHVtIHNhdyBFYmJ3IFZhbGUgZGVsaXZlciBhIDYyJSB2b3RlIGluIGZhdm91ciBvZiBsZWF2aW5nIHRoZSBFVSAgIHRoZSBoaWdoZXN0IGluIFdhbGVzICAgZGVzcGl0ZSBiZW5lZml0aW5nIGZyb20gbWlsbGlvbnMgaW4gRXVyb3BlYW4gZnVuZGluZy4gClNvLCBldmVuIHRyeWluZyB0byBlbXBhdGhpemUgd2l0aCB0aGVzZSBwZW9wbGUsIEkgc3RpbGwgY29tZSB1cCBzaG9ydC4uIApJIHdvdWxkIHJlY29tbWVuZCB5b3UgZG8gbm90IGdvLiAKQ29va2luZyB1cCB0YXN0eSBiaXRlcyB0byBnbyB3aXRoIGl0cyBiZWVyICAgZGluaW5nIHJldmlldyBMb2NrIDE1IEJyZXdpbmcgQ28uIApKb2huIEN5bm4gaG9sZHMgdXAgdGhlIGJyYWNlbGV0IGFmdGVyIHdpbm5pbmcgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBtYWluIGV2ZW50LCBTdW5kYXksIEp1bHkgMTUsIDIwMTgsIGluIExhcyBWZWdhcy4gdHJ1bHkgaXMgYSBibGVzc2luZyB0byBiZSBoZXJlLiBhbmQgQ3lubiBoYWQgZG96ZW5zIG9mIHN1cHBvcnRlcnMgY2hlZXJpbmcgdGhlbSBvbiBpbiB0aGUgYmFsbHJvb20gaG9zdGluZyB0aGUgZXZlbnQgYXQgdGhlIFJpbyBBbGwgU3VpdGUgSG90ZWwgYW5kIENhc2lubyBuZWFyIHRoZSBMYXMgVmVnYXMgU3RyaXAuIFRoZSBzdXBwb3J0ZXJzIHNwb3J0ZWQgVCBzaGlydHMgdGhhdCByZWFkIFRFQU1NSUxFUywgV2VsY29tZSB0byBDeW5uIENpdHkgYW5kIFRoZSBDeW5uYWxvYSBDYXJ0ZWwsIHBsYXlpbmcgd2l0aCB0aGUgbmFtZSBvZiB0aGUgZHJ1ZyB0cmFmZmlja2luZyBvcmdhbml6YXRpb24gU2luYWxvYSBDYXJ0ZWwuClRoZWlyIG9mZmVuc2Ugd2FzIHN0YWxlIGFuZCBzdGFnbmFudCB3aXRoIEZsYWNjbywgdGhlaXIgcmVjb3JkIHdhcyBiYWQgZW5vdWdoIHRoYXQgdGhlIFJhdmVucyBvd25lciBzdGFydGVkIHB1YmxpY2x5IGhpbnRpbmcgYXQgbW92aW5nIG9uIGZyb20gSGFyYmF1Z2guIEZsYWNjbyBpbmp1cmVkIGhpcyBoaXAgYW5kIExhbWFyIGNhbWUgaW4gYW5kIG1hZGUgdGhlaXIgb2ZmZW5zZSBlbGVjdHJpYyBhbmQgdGhlIHJlc3QgaXMgaGlzdG9yeS4gVGhleSBoYXZlIHRoZSBiZXN0IGRlZmVuc2UgaW4gdGhlIE5GTCBzbyBpdCBub3QgbGlrZSBMYW1hciBoYXMgdG8gYmUgbGlrZSBNYWhvbWVzIGFuZCBkcm9wIDM1KyBqdXN0IHRvIHN0YXkgaW4gdGhlIGdhbWUuIEhlIGRvZXNuIG5lZWQgdG8gYmUgZ3JlYXQgYW5kIEZsYWNjbyB3YXMgcGVkZXN0cmlhbiwgaWYgaGUgc3RvcHMgZnVtYmxpbmcgaGUgc2hvdWxkIGJlIGp1c3QgZmluZS4KTWVkaWNpbmUgYXQgdGhpcyB0aW1lIGhhZCBhIG1pYXNtaWMgdGhlb3J5IG9mIGRpc2Vhc2UsIHdoaWNoIHN1Z2dlc3RlZCB0aGF0IGRpc2Vhc2Ugd2FzIGNhdXNlZCBieSBiYWQgZ2FzZXMgdGhhdCBnb3QgdHJhcHBlZCBpbiBjcmFtcGVkIHNwYWNlcyBsaWtlIGxpdHRsZSBzdHJlZXRzKS4gClN0ZXJvaWRzIGdpdmUgbWUgc28gbXVjaCByZWxpZWYgdGhhdCBJIGFsbW9zdCBjb21wbGV0ZWx5IHBhaW4gZnJlZSBidXQgb25seSBmb3IgYSBjb3VwbGUgZGF5cy4gSXRzIGEgd29uZGVyZnVsIGZlZWxpbmcuIEkgZmVlbCBsaWtlIEkgeW91bmcgYWdhaW4uIChJIDU4KSBBcyBzb29uIGFzIEkgZ2V0IGhvbWUgZnJvbSB0aGUgZG9jdG9ycyBvZmZpY2UgSSBwYWludCAocGljdHVyZXMpIGFuZCBjbGVhbiwgZG8gbGF1bmRyeSBvciBjb29rLgoiT25lIGhpZ2hsaWdodCB3YXMgdGhlIGludHJvZHVjdGlvbiBvZiBvdXIgc3RyZWV0IGZvb2QgcHJlY2luY3QgZHVyaW5nIHRoZSBzdW1tZXIgbW9udGhzLiAiVGhpcyBzYXcgdGhlIGludHJvZHVjdGlvbiBzZXZlcmFsIG5ldyBmb29kIG9wdGlvbnMgZm9yIGN1c3RvbWVycyBhbmQgYSBncmVhdCBhbGZyZXNjbyBkaW5pbmcgYXRtb3NwaGVyZS4gCkkgaGFkIG9yaWdpbmFsbHkgd2VpZ2hlZCB0aGUgY29zdHMgb2YgYnV5aW5nIG5ldywgYnVpbGRpbmcgbmV3LCBvciBidXlpbmcgdXNlZCBhbmQgcmVub3ZhdGluZy4gVGhleSBhbGwgY29tcGFyYWJsZSwgYW5kIEkgZXZlbnR1YWxseSB3ZW50IHdpdGggYnV5aW5nIHVzZWQgc2ltcGx5IGJlY2F1c2UgSSBsb3ZlZCB0aGUgbGFuZCB0aGUgaG91c2Ugd2FzIG9uLiBOaWNlIGxhbmQgd2FzIHRvd2FyZCB0aGUgdG9wIG9mIG15IGxpc3QuClRoZSB0b3RhbCBwcml6ZSBwb29sIGluIDIwMDkgZ3JldyBiZXlvbmQgJDE3NCBtaWxsaW9uIGFuZCBmb3Igb25seSB0aGUgMm5kIHRpbWUgaW4gV1NPUCBoaXN0b3J5LCBldmVyeW9uZSB3aG8gbWFkZSB0aGUgTWFpbiBFdmVudCBmaW5hbCB0YWJsZSB3aWxsIHdpbiAkMSBtaWxsaW9uIG9yIG1vcmUuIApaaXBwaW5nIGZyb20gY2xpcCB0byBjbGlwIGxpa2UgYSByYWNpc20gc3VwZXJjdXQsIFRoZSAxM3RoIGp1bXBzIGJldHdlZW4gYXJjaGl2YWwgZm9vdGFnZSBvZiBHZW9yZ2UgV2FsbGFjZSBwbGVkZ2luZyBhbGxlZ2lhbmNlIHRvIHNlZ3JlZ2F0aW9uIGFuZCBjaG9pY2UgbW9kZXJuIGRheSBwdW5kaXQgcXVvdGVzLCB0aGVuIHNwbGljZXMgaW4gVFYgYW5kIHZpcmFsIHZpZGVvIG9mLCBzYXksIHRoZSBhZnRlcm1hdGggb2YgdGhlIE1pY2hhZWwgQnJvd24gc2hvb3Rpbmcgb3IgcHJvdGVzdHMgZm9sbG93aW5nIHRoZSBraWxsaW5nIG9mIFRyYXl2b24gTWFydGluLiBFYWNoIHRocmVlICBvciBmb3VyIHNlY29uZCBjbGlwIGFkZHMgc3VwcG9ydCB0byB0aGUgYXJndW1lbnQgbGlrZSBhIGJydXNoc3Ryb2tlIG9uIGEgcGFpbnRpbmcsIG1peGluZyBwYXN0IGFuZCBwcmVzZW50IHRvIHByb3ZlIHRoYXQgaGlzdG9yeSBkaWQgbm90IGNvbWUgZnJvbSBub3doZXJlLCBub3IgaXMgdGhlIHByZXNlbnQgbW9tZW50IHNlcGFyYXRlIGZyb20gaGlzdG9yeS4gQnJvdWdodCB0b2dldGhlciBpbiBvbmUgcGxhY2UsIHRoZSBmb290YWdlIG1ha2VzIGhhdW50aW5nbHkgdmlzaWJsZSB0aGUgd2F5cyBpbiB3aGljaCB0aGUganVzdGljZSBzeXN0ZW0gaGFzIGNyaW1pbmFsaXplZCBBZnJpY2FuIEFtZXJpY2FucywgZGVzdHJveWluZyBmYW1pbGllcywgcHJvbW90aW5nIG5lZ2F0aXZlIHN0ZXJlb3R5cGVzLCBhbmQgcnVpbmluZyBpbmRpdmlkdWFsIGxpdmVzLCBhdCBsZWFzdCBzaW5jZSB0aGUgcmF0aWZpY2F0aW9uIG9mIHRoYXQgc3VzcGljaW91cyBhbWVuZG1lbnQgaW4gMTg2NS4uIApXZWxjaGUgQm9udXMgQW5nZWJvdGUgZ2lidCBlcz8KSGF2ZSBhbiBlbWVyZ2VuY3kgbGlmZSBmdW5kLCB0b28uIFNvbWUgcGVvcGxlIGFyZSBqdXN0IG5vdCBzbWFydCBhYm91dCBwbGF5aW5nIGdhbWVzIG9mIHNraWxsLiBUaGV5IGVuZCB1cCBsb3NpbmcgYWxsIHRoZWlyIG1vbmV5IG9uIGEgaGFuZCB0aGV5IHN3b3JlIHdhcyBnb2luZyB0byBiZSB0aGUgYmlnIHdpbm5lci4gVGhleSBnbyBob21lIHBlbm5pbGVzcywgaGF2aW5nIHRvIGJlZyB0aGVpciBmcmllbmRzIGZvciBmYXZvcnMuIERvbid0IGxldCB0aGF0IGJlIHlvdSEgSGF2ZSBzb21lIG1vbmV5IHNhdmVkIHVwIGZvciBhIHJhaW55IGRheSBpbiBjYXNlIHlvdSBiZWNvbWUgYSBsaXR0bGUgdG9vIGFkZGljdGVkIHRvIHRoZSBnYW1lIGFuZCBoYXBwZW4gdXBvbiBhbiB1bmZvcnR1bmF0ZSBsb3Npbmcgc3RyZWFrLgpPZiBjb3Vyc2UsIHRoaW5ncyBnZXQgdHJpY2tpZXIgaW4gbGVzcyBlcm90aWMgc3RhdGVzLiAKTm91cyB5IHNvbW1lcyBNYXJjaGVzc2VhdSBldCBNb3NzcmkgISBMZWRpdCBNb3NzaWVyaSBxdWkgZGFucyBsJ0F1YmUgcHJvcG9zYWl0IGRlcyBjdXJlcyBkZSBqZXVuZXMgdGhyYXBldXRpcXVlcyBldCBmYWlzYWl0IHBheWVyIHRycyBjaGVyIHVuZSBodGVsbGVyaWUgcGx1dHQgdHJzIHNwYXJ0aWF0ZS4gCkNhcm9saW5lIDogY2VsYSBkcGVuZCBkZSBsJ2VudmllIGR1IG1vbWVudCwgZGUgcXVlbHF1ZSBjaG9zZSBxdWkgdmEgYXR0aXJlciBtb24gaWwuIEV0IGonYWRvcmUgbGVzIG1pbGxlIGZldWlsbGVzIGF1IHJlc3RhdXJhbnQuCkJ0dyBJIGFtIHBlcmZlY3RseSBpbmZvcm1lZCB0aGF0IGJ1aWxkaW5nIGlzIHRoZSBjb3JlIG1lY2hhbmljIG9mIGZvcnRuaXRlLCB5b3UgZG9uIG5lZWQgdG8gc2F5IGl0Li4gCkkgdXNlZCB0byB3b3JrIGF0IGEgcHViIHRoYXQgd2FzIDIgbWlsZXMgZnJvbSBteSBob3VzZS4gTXkgc2hpZnQgZW5kZWQgYXQgYWJvdXQgMTEgb25lIG5pZ2h0LiAKQXp1cmVuZXZlcmZhZGVzICA3IHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCkl0IGhhZCAxNDAwaXNoIENQLCBub3QgbGlrZSB0aGUgcmVhbGx5IGhpZ2ggQ1Agb25lIEkganVzdCBmb3VnaHQuIEkgZmVkIGl0IGEgZ29sZGVuIHJhc3BiZXJyeSBhbmQgY2F1Z2h0IGl0IHdpdGggYSBjdXJ2ZSBiYWxsIGFuZCAiZ3JlYXQiIHRocm93IG9uIHRoZSBmaXJzdCB0cnkuIEl0IHdhcyBub3QgYm91bmNpbmcgYXJvdW5kIG9yIGFueXRoaW5nLi4gCkFmdGVyIHlvdSBsZWFybiBzbyBtdWNoLCBpdCBjb21lcyB0aGUgdGltZSB3aGVyZSB5b3UganVzdCBuZWVkIHRvIHdvcmsgb24geW91ciBsZWFrcyBpbiBvcmRlciB0byBwcm9ncmVzcy4gClRoaXMgZ3V5IHdhcyBwcm9iYWJseSBpbiBoaXMgbGF0ZSAyMCBIZSB3YXMgYnJhZ2dpbmcgYSBsaXR0bGUgYml0IGFib3V0IGhvdyBoZSB3YXMgYSBwcm8gYW5kIHBsYXlzIDUvMTAgYW5kIGJpZ2dlciBhbmQgd2FzIHdhaXRpbmcgZm9yIGhpcyBzZWF0IGF0IHRoZSBiaWdnZXIgZ2FtZS4gQW55d2F5LCBJIG1hZGUgYSBiaWcgYmx1ZmYgYW5kIGhlIGZvbGRlZCBhbmQgSSBjb3VsZCB0ZWxsIGhlIHdhcyByZWFsbHkgcGlzc2VkIGFib3V0IGl0LiAKRnJpZW5kIGhhZCBmYWxsZW4gb2ZmIGhlciBsb25nIGJvYXJkIGEgZmV3IGRheXMgcHJpb3IgYW5kIGhhZCBhIHByZXR0eSBuYXN0eSBibGFjayBleWUuIFRoZSBsaXR0bGUgc2lzdGVyIHdhcyBpbiBneW1uYXN0aWNzIGFuZCBoYWQgaW5qdXJlZCBoZXIgYXJtIHJlY2VudGx5IHRoZW4gYXMgd2VsbCBhbmQgd2FzIGluIGFuIGFybSBzbGluZy4gU28gaW4gd2Fsa3MgaW4gYSB2ZXJ5IHlvdW5nIGxvb2tpbmcgY291cGxlIHdpdGggYSBjaGlsZCwgYW5kIGJvdGggd29tZW4gd2VyZSBzcG9ydGluZyBmcmVzaCBpbmp1cmllcyB3aGlsZSBJIHdhcyB1bnNjYXRoZWQuCkdvdCBpbnRvIGFyZ3VtZW50IHdpdGggc2FpZCBnZiBhYm91dCBoZXIgbm90IHdhbnRpbmcgdG8gd2FpdCB1bnRpbCBuZXh0IGJyZWFrIGFuZCBtYW5hZ2VkIHRvIHB1bnQgb2ZmIG15IHN0YWNrIGFuZCBidWJibGUgd2l0aGluIDcgaGFuZHMuIAoxMCUgaW5jcmVhc2UgbWF4IHdhcyBhbGwgdGhleSB3ZXJlIHBlcm1pdHRlZCB0byBvZmZlci4gCkkgc3RhcnRlZCBwbGF5aW5nIHBva2VyIGFzIGEgdGVlbmFnZXIgaW4gMjAwMi4gRXZlcnkgc2Vjb25kIHdlZWtlbmQgbXkgZm9vdGJhbGwgY2x1YiBpbiBIYW1pbHRvbiB0b29rIGEgYnVzIHRvIHBsYXkgZ2FtZXMgaW4gQXVja2xhbmQuIE9uIHRoZSB3YXkgaG9tZSB3ZSBnYW1ibGVkLiBmaXJzdCBpdCB3YXMgYWxsIGJhZCBibHVmZmluZyBhbmQgZHJ1bmtlbiBidWxsc2hpdHRpbmcsIGJ1dCBpdCBxdWlja2x5CklmIG5vdCwgZ3JlYXQhIFRoZW4geW91IGp1c3QgZ290dGEgbWFuYWdlIGhvdXIgZXhwZWN0YXRpb25zIGFuZCBzdGF5IGNvb2wuIApIZSB3YXNuJ3QgZXZlbiBkcmVzc2VkIHVwIG11Y2gsIHRoaW5rIGl0IHdhcyBhIFQgc2hpcnQgYW5kIHNvbWUgYWNjZXNzb3JpZXMgdG8gZ28gd2l0aCBpdC4gSGUgbmV2ZXIgc3Bva2Ugb2YgaXQgYWdhaW4gYW5kIGhhc24ndCBkb25lIGFueXRoaW5nIGxpa2UgaXQgc2luY2UuLiAKQmllbiBwbHVzLCBsJ29sZmFjdG90aHJhcGllIHBlcm1ldCB1bmUgY29tbXVuaWNhdGlvbiBhdmVjIG5vdHJlIHByb3ByZSBpbmNvbnNjaWVudCB0b3V0IGVuIHMnYWZmcmFuY2hpc3NhbnQgZGVzIGNvbmRpdGlvbnMgbGltaXRhbnRlcyBkdSBjb3J0ZXgsIGxlIHNpZ2UgZGUgbGEgcmFpc29uLiAKQnV5IGZpc2ggb2lsIHRvIGltcHJvdmUgdGhlaXIgaGVhbHRoLCBSb2Ugc2FpZCBUdWVzZGF5IGluIGEgdGVsZWNvbmZlcmVuY2Ugd2l0aCByZXBvcnRlcnMuIGhhdmUgbm8gd2F5IG9mIGtub3dpbmcgaWYgYWxsIG9mIHRoZSBvdGhlciBmaXNoIG9pbCBwcm9kdWN0cyBoYXZlIFBDQiwgdG9vLiBsYXdzdWl0IG5hbWVzIENWUy9QaGFybWFjeSwgR2VuZXJhbCBOdXRyaXRpb24gQ29ycC4gKEdOQyBzdG9yZXMpLCBOb3cgSGVhbHRoIEdyb3VwLCBPbWVnYSBQcm90ZWluLCBSaXRlIEFpZCwgU29sZ2FyLCBUd2lubGFiIGFuZCBQaGFybWF2aXRlLCB3aGljaCBwcm9kdWNlcyBOYXR1cmUgTWFkZSBzdXBwbGVtZW50cywgYXMgZGVmZW5kYW50cy4KUmVsaWdpb3VzIFJlbGF0aW9ucwpUbyBleHBlcmltZW50IHdpdGggYSB3ZWFwb24gbGlrZSB0aGlzLCBzbyBjaG9vc2luZyBhIGxvY2F0aW9uIHNvIGNsb3NlIHRvIHRoZSBvbmUgdGhhdCB3YXMgdXNlZCBmb3IgYW4gYWN0dWFsIGF0b21pYyBleHBsb3Npb24gaXMgcHJldHR5IGludGVyZXN0aW5nLiAKTGF3cmVuY2UgbGlrZW5zIGl0IHRvIGJydXNoaW5nIHlvdXIgdGVldGg6IGNsZWFuaW5nIG91dCB5b3VyIG9yZ2FucyBhbmQgdGhlIHN5c3RlbXMgaW4geW91ciBib2R5LCBhcyB3ZWxsIGFzIHlvdXIgcHN5Y2hpYyBzeXN0ZW0uLiAKUGVyc29uYWxseSBJIGJlbGlldmUsIHRoYXQgdGhlcmUgc2hvdWxkIGJlIGEgcG9zc2liaWxpdHkgdG8gInJldHVybiIgZHVwbGljYXRlIGl0ZW0sIGFuZCByZXN1bHQgb2YgdGhhdCB3b3VsZCBiZSBnZXR0aW5nIDMwIHBvaW50cyBiYWNrICggY29zdCBvZiBteXN0ZXJ5Ym94IHlvdSBnb3QgaXRlbSBmcm9tKS4gVGhlbiwgdGhlc2UgMzAgcG9pbnRzIHdvdWxkIGJlIG1hcmtlZCBhcyBpbXBvc3NpYmxlIHRvIHVzZSB0byBidXkgbXlzdGVyeWJveCBhZ2Fpbi4gCkFzIGZhdGUgd291bGQgaGF2ZSBpdCwgdGhlIHN0YWZmIGNvbmZ1c2VkIHRoZWlyIG1lZHMuIEhlIHdhcyAxMCB5ZWFycyBvbGRlciB0aGFuIG1lIGFuZCBoaXMgZGFkIGhhZCBtb3JlIHRoYW4gb25lIHdpZmUuIEhlIHdhcyBhbiBhYnVzaXZlIGFzc2hvbGUsIGJ1dCBhIGRvdWJsZSBkb2N0b3IhIFdoYXQgY291bGQgcG9zc2libHkgZ28gd3Jvbmc/LiAKVGhlIFRBQkMgZmlsZWQgYWRtaW5pc3RyYXRpdmUgY2hhcmdlcyBhZ2FpbnN0IGFuIEF1c3RpbiBBbWVyaWNhbiBMZWdpb24gcG9zdCB0aGF0IHdhcyB1c2luZyB0aGUgc2FtZSBzd2VlcHN0YWtlcyBvcGVyYXRpb24gaW4gMjAxMC4gCkkgaGF2ZSBuZXZlciBmZWx0ICJub3Qgc2FmZSIgYXQgbXkgb2ZmaWNlIGNhdXNlIGxvdHMgb2YgcGVvcGxlIGluIHRoZSBzdHJlZXQgYW5kIGl0J3Mgbm90IHZlcnkgc291bmQgcHJvb2YgaW4gdGhlcmUuIE1lYW5pbmcgSSBjYW4gc2NyZWFtIGp1c3QgcmVhbGx5IGxvdWQgYW5kIHNvbWVvbmUgd2lsbCBoZWFyIG1lLiAKU2hlIGhhcyBuZXZlciBoYWQgaGVyIGxpY2Vuc2UgZHVlIHRvIGJlaW5nIGEgdmVyeSBwYXNzaW9uYXRlIGN5Y2xpc3QgYW5kIGhhcyBtYW5hZ2VkIHRvIGNvbnRpbnVlIGN5Y2xpbmcgd2hlbmV2ZXIgc2hlIGNhbiBhbGwgdGhyb3VnaCBoZXIgaWxsbmVzcy4gVG9kYXkgaXMgaGVyIDUzcmQgYmlydGhkYXkgYW5kIHRoaXMgbW9udGggc2hlIGlzIGdpdmluZyBtZSBoZXIgYmlrZS4gU2hlIGZpbmFsbHkgZ2V0dGluZyB0byB0aGUgcG9pbnQgd2hlcmUgc2hlIGNhbiByaWRlIHdpdGhvdXQgZ2V0dGluZyBzdHVjayBzb21ld2hlcmUgZnJvbSBoZXIgbGVmdCBzaWRlIGNyYW1waW5nIHVwIGFuZCBwcmV2ZW50aW5nIGhlciBmcm9tIG1vdmluZy4gCkdyb3VwIHNwYSB0cmVhdG1lbnRzIGZvciBkaWZmZXJlbnQgY3VzdG9tZXJzLiBXaG8gYXJlIHlvdXIgdGFyZ2V0IGN1c3RvbWVycz8gWW91IHNob3VsZCBsaXN0IGRvd24gdGhlIHNwYSB0cmVhdG1lbnRzIHRoYXQgeW91IHdpbGwgYmUgb2ZmZXJpbmcgYmFzZWQgb24gdGhlIGN1c3RvbWVycy4gRm9yIGluc3RhbmNlLCBoYXZlIGEgc2V0IG9mIHRyZWF0bWVudHMgZm9yIG1lbiwgZm9yIHdvbWVuLCBmb3IgY2hpbGRyZW4sIG9yIGZvciBvbGRpZXMuIApQbGF5aW5nIG1vcmUgdGhhbiBvbmUgZnJlZSBwb2tlciBjYXJkIGdhbWUgaXMgYWxzbyByZWNvbW1lbmRlZCBpZiB5b3Ugd2lzaCB0byB3aW4gYXMgYSBwb2tlciBwbGF5ZXIuIEluIG90aGVyIHdvcmRzLCB5b3Ugc2hvdWxkIHRha2UgdGhlIHRpbWUgdG8gcHJhY3RpY2Ugb24gZnJlZSBnYW1lcyBmaXJzdCBiZWZvcmUgcGxheWluZyBpbiAnYWN0dWFsIGdhbWVzJywgb3IgcGFpZCBnYW1lcy4gClN1cmUgdGhlcmUgd2lsbCBiZSBzb21lIHdpbGxpbmduZXNzIGJ1dCB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aGVzZSB3b21lbiBhcmUgZm9yY2VkIGludG8gaXQgYW5kIGhhdmUgbm8gZnJlZWRvbS4gCkpvZSBpbiBPVCBpbiB0aGUgZmlyc3Qgcm91bmQgYW5kIHdlbnQgb24gdG8gd2luIHRoZSB3aG9sZSB0aGluZy4gTWljaGlnYW4gd29uIGluIHRoZSBzZWNvbmQgcm91bmQgYWdhaW5zdCBIb3VzdG9uIG9uIGFuIGltcHJvYmFibGUgYnV6emVyIGJlYXRlciBhbmQgd2VudCBvbiB0byB0aGUgTkNHLiAKSSB3YXMgaW4gUGVuc2Fjb2xhIGZvciB0cmFpbmluZyBhbmQgZGlkIGEgUFQgdGVzdC4gRm9yIHdoYXRldmVyIHJlYXNvbiwgSSB0aG91Z2h0IEkgdGFrZSBhIHNjb29wIG9mIEphY2szZCBiZWZvcmUgbXkgcnVuLiAKVGhpcyBwaG90byBvZiB0aGUgcGhvdG8gd2FzIHByaW50ZWQgYnkgVW5kZXJ3b29kIFVuZGVyd29vZCwgYW5kIHN0YW1wZWQgIkJyaXRpc2ggT2ZmaWNpYWwgUGhvdG9ncmFwaCIsIGFuZCBwcmludGVkIGF0IHNvbWUgdGltZSBpbiAxOTE4LiAKT3RoZXIgdGhhbiB0aGF0IGhhZCBhIHRyaXAgb3ZlcnNlYXMgYnV0IG5vdGhpbmcgZWxzZS4uIApNZWV0dXBzIG1heSBpbmNsdWRlIHdhbGtzLCBib3dsaW5nLCBldmVuaW5nIG1lYWxzIG9yIGdldCB0b2dldGhlcnMgYXQgZmVzdGl2YWxzIG9yIGNvbmZlcmVuY2VzLiBXZSBkbyBub3QgcHJvdmlkZSByZWZ1bmRzIG9yIGNyZWRpdHMgZm9yIHRob3NlIHdobyBjYW5ub3QgYXR0ZW5kIGJ1dCB3ZSB3aWxsIHVzZSB0aGlzIGtub3dsZWRnZSB0byBhdHRlbXB0IHRvIGtlZXAgdGhlIHJhdGlvcyBldmVuLiAKR2V0IGZyZWUgY2hpcHMgZm9yIFRleGFzIGhvbGRlbQpIZSBpcyBjYWxsZWQgdGhlIEdvZCBvZiB0aGUgd2hvbGUgZWFydGguCihPYmFtYSBpcyBhIE11c2xpbSBmcm9tIEtlbnlhLiAKSSB1c2VkIHRvIGhhcHBpbHkgbGlzdGVuIHRvIHRob3NlIHN0b3JpZXMgYW5kIGFmdGVyIHNvbWUgZGF5cywgSSB3b3VsZCByZWFsaXNlIHRoYXQgd2FzIGFsbCBtYWRlIHVwLiIuIApPbiBGcmlkYXksIHRoZSBkZWZlbmRpbmcgc3RhdGUgY2hhbXBpb24gTG9uZ21vbnQgYm95cyBiYXNrZXRiYWxsIHRlYW0gd2lsbCBmYWNlIFB1ZWJsbyBFYXN0IGluIHRoZSBGaW5hbCA0IGF0IHRoZSBEZW52ZXIgQ29saXNldW0uIApFbiBpbiBoZXQgcGVuc2lvbiBoYWRkZW4gemUgZWVuIHdpam5rZWxkZXIgZW4gemVsZnMgZWVuIGVpZ2VuIG9uZGVyZ3JvbmRzZSBtaWpuZ2FuZy4gCkJ1dCB5b3UgY2FuIG9ubHkgaGF2ZSBzbyBtdWNoIGltcGFjdCBhcyBhbiBvdXRzaWRlci4gQW5kIHdoYXQgd2UgdHJpZWQgdG8gaGVscCB3aXRoIHVsdGltYXRlbHkgZmFpbGVkLiBJIGZlZWwgc28gc29ycnkgZm9yIHRoYXQgeW91bmcgbWFuLgpUaGUgIkJ1aWxkIGFuIGV5ZWJhbGwgcHJvdGVpbiIgYWxzbyBhY3RpdmF0ZXMgIkJ1aWxkIGEgbGVucyIgRE5BIGFuZCAibWFrZSBjb2xsYWdlbiIgRE5BIGFuZCAiYnVpbGQgYW4gaXJpcyIgRE5BLCBhbmQgdGhhdCAiQnVpbGQgYW4gaXJpcyIgRE5BLCB2aWEgcHJvdGVpbnMsIHR1cm5zIG9uIHRoZSAiQmVjb21lIG11c2NsZSBjZWxscyIgRE5BIGFuZCAiQmVjb21lIGVwaXRoZWxpYWwgY2VsbHMiIEROQSBldGMuIApJZiB5b3UncmUgdHJ5aW5nIHRvIHNvbHZlIGEgY3Jvc3N3b3JkIHB1enpsZSB3aXRoIHRoZSBjbHVlIE1pc3NvdXJpIENvbXByb21pc2Ugc2lnbmVyLCB0aGVuIHRoZSBhbnN3ZXIgbWlnaHQgYmUgbGlzdGVkIGJlbG93LiAKQmVzdCBtYXNzYWdlIHRoZXJhcHkgc2Nob29sIGluIEVkbW9udG9uCk15IGV4cGVyaWVuY2Ugd2l0aCB0aGF0IHR5cGU6IGhvbWUgc2Nob29saW5nIHdvcmtzIHdlbGwgYXMgbG9uZyBhcyB0aGUgcHVycG9zZSBpcyB0byBmb2N1cyBoZWF2aWx5IG9uIGFjYWRlbWljcyByYXRoZXIgdGhhbiBqdXN0IGtlZXAgeW91ciBraWQgYXdheSBmcm9tIHB1YmxpYyBzY2hvb2xzIGJlY2F1c2UgeW91IGRpc2FncmVlIHdpdGggdGhlIHNjaG9vbHMsIGFuZCBhcyBsb25nIGFzIHRoZSBzdHVkZW50IGhhcyBzb21lIHdheSBvZiBzb2NpYWxpemluZy4gRGVmaW5pdGVseSBtZXQgc29tZSBraWRzIHdobyB3ZXJlIHRlcnJpYmxlIHBlb3BsZS4gCkJlcm5hcmQncyBsYXN0IHJvY2sgb2YgdGhlIGdhbWUgICAiUHJldHR5IHJvdXRpbmUgZG91YmxlIHRha2VvdXQsIiBzaGUgc2FpZCBsYXRlciAgIGJhcmVseSBvdmVyY3VybGVkLCBhbmQgb25lIFN3ZWRpc2ggc3RvbmUgcmVtYWluZWQgaW4gc2NvcmluZyBwb3NpdGlvbiwgc2V0dGluZyBvZmYgYSB3aWxkIGNlbGVicmF0aW9uIGJldHdlZW4gTm9yYmVyZywgdGhpcmQgRXZhIEx1bmQsIHNlY29uZCBDYXRocmluZSBMaW5kYWhsIChOb3JiZXJnJ3Mgc2lzdGVyKSBhbmQgbGVhZCBBbm5hIExlTW9pbmUsIHRoZSBzYW1lIGxpbmV1cCB0aGF0IHdvbiBpbiBUdXJpbi5BdCB0aGUgc2FtZSB0aW1lLCBCZXJuYXJkLCB0aGlyZCBTdXNhbiBPJ0Nvbm5vciwgc2Vjb25kIENhcm9seW4gRGFyYnlzaGlyZSBhbmQgbGVhZCBDb3JpIEJhcnRlbCAodGhlIHRlYW0gaXMgcm91bmRlZCBvdXQgYnkgYWx0ZXJuYXRlIEtyaXN0aWUgTW9vcmUgYW5kIGNvYWNoIERlbm5pcyBCYWxkZXJzdG9uKSBzbG93bHkgd2VudCBiYWNrIGRvd24gdGhlIGljZSB0byBnYXRoZXIgdGhlaXIgZXF1aXBtZW50LCBhY2NvbXBhbmllZCBieSBjaGVlcnMgZnJvbSB0aGUgc2VsbG91dCBjcm93ZC4iSSBtZWFuLCBpdCdzIGhhcmQgdG8gbG9zZSwiIHNhaWQgTydDb25ub3IsIGhlciBleWVzIGdsaXN0ZW5pbmcgd2l0aCB0ZWFycy4gCkNlIHF1aSBzZXJhaXQgdnJhaW1lbnQgaW5ub3ZhbnQgc2VyYWl0IHF1ZSBsZXMgZGNpZGV1cnMgcydlbmhhcmRpc3NlbnQgZXQgZmFzc2VudCBjb25maWFuY2UgYXV4IHBvcnRldXJzIGRlIHByb2pldHMgZW4gYWRvcHRhbnQgY2V1eCBxdWkgYXVqb3VyZCdodWkgcGFyYWlzc2VudCBsZXMgcGx1cyBhdWRhY2lldXgsIHZvaXJlIGxlcyBtb2lucyByYWxpc3Rlcy4gUydpbCBlc3QgdW4gZG9tYWluZSBvIGxhIGNvbXB0aXRpb24gc2VyYWl0IGJuZmlxdWUgIGxhIHBvcHVsYXRpb24gZXQgIGxhIHBsYW50ZSwgYydlc3QgYmllbiBjZWx1aSBkZSBsICdjb2xvZ2llLiBBbG9ycyBtZXNkYW1lcyBldCBtZXNzaWV1cnMgbGVzIGx1cywgb3NleiAhIE9zZXogc291dGVuaXIgbGEgY3JhdGl2aXQgc2FucyByc2VydmUgISBMYWlzc2V6IG5vdXMgbm91cyBlbnRob3VzaWFzbWVyICEgT24gdmV1dCB5IGNyb2lyZSAgY2V0dGUgdXRvcGllIHRvdXRlIHZlcnRlIGNhciBpbCB5IGEgcHJpbCBlbiBsYSBkZW1ldXJlLiAKV2Ugd2VudCB0byBsb29rIGF0IGl0LCBJIHNhdyBzb21lIHBvdGVudGlhbC4gSXQgd2FzIGEgMSBzdG9yeSBkdXBsZXguIApHYW1ibGluZyBSdWxlcyBUaGUgYmFzaWMgZnJhbWV3b3JrIG9mIGVhY2ggY2FzaW5vIHRhYmxlIGdhbWUgcmVtYWlucyBlc3NlbnRpYWxseSB0aGUgc2FtZSBmcm9tIG9uZSBpc2xhbmQgdG8gYW5vdGhlciwgYnV0IHRoZSBzcGVjaWZpYyBydWxlcyB2YXJ5IGZyb20gb25lIGNhc2lubyB0byB0aGUgbmV4dC4gVG8gYXZvaWQgdXBzZXR0aW5nIHRoZSBkZWFsZXIgb3IgY3JvdXBpZXIsIG1ha2UgYSBwcmUgZ2FtYmxpbmcgb3JpZW50YXRpb24gdmlzaXQgdG8gdGhlIGNhc2lubyB0byBwaWNrIHVwIGEgYm9va2xldCBvdXRsaW5pbmcgdGhlIGhvdXNlIHJ1bGVzIGZvciBlYWNoIGdhbWUuIFN0dWR5IGl0IGNhcmVmdWxseSBiZWZvcmUgeW91IGJlZ2luIHRvIGdhbWJsZS4gSW4gc29tZSBjYXNpbm8gaG90ZWxzLCBhIHNwZWNpYWwgY2hhbm5lbCBydW5zIGluZm9ybWF0aW9uYWwgdmlkZW9zIG91dGxpbmluZyB0aGUgcnVsZXMgb2YgdmFyaW91cyB0YWJsZSBnYW1lcyBpbiB0aGUgaG90ZWwncyBjYXNpbm8uClNvIHlvdSBuZWVkIHRvIGJvdGggbGV0IGhlciBnbywgYnV0IGFsc28gYnJpbmcgaGVyIHVwIHRvIHNwZWVkIG9uIHJlYWwgbGlmZSwgYW5kIHRoZW4gaG9uZXN0bHksIGp1c3QgdHJ1c3QgaGVyLiAKUmVwZWF0IHRoZSBtYW50cmEgMyA0IHRpbWVzLiBEbyB0aGlzIGFueXRpbWUgeW91IGZlZWwgZG93biBvbiB5b3Vyc2VsZiBvciBmZWVsIHRoZSBkZXNpcmUgY29tZSB1cCB0byBkaXN0cmFjdCB5b3Vyc2VsZiB2aWEgb25lIG9mIHlvdXIgc2VsZiBwcm9jbGFpbWVkIGFkZGljdGlvbnMuIEluIHRoZSBiZWdpbm5pbmcsIHlvdSBtaWdodCBmaW5kIHlvdXJzZWxmIGRvaW5nIHRoaXMgcml0dWFsIGRvemVucyBvZiB0aW1lcyBhIGRheS4KQWNlcyBjYW4gYmUgcmFua2VkIGhpZ2ggb3IgbG93IGRlcGVuZGluZyBvbiB3aGF0IHR5cGUgb2YgcG9rZXIgaXMgYmVpbmcgcGxheWVkLiBSZW1lbWJlciAgIGVhY2ggaGFuZCBjb250YWlucyBmaXZlIGNhcmRzLiBGbHVzaCAgIEZpdmUgY2FyZHMgYmVsb25naW5nIHRvIHRoZSBzYW1lIHN1aXQsIHJlZ2FyZGxlc3Mgb2YgdGhlIG51bWJlciBTdHJhaWdodCAgIGZpdmUgY2FyZHMgaW4gY29uc2VjdXRpdmUgb3JkZXIgb2YgbnVtYmVyaW5nLiBGb3IgZXhhbXBsZSwgMyA0IDUgNiA3LiAKQWRyaWFuIFNvbG9tb24gYW5kIEVybmllIFNjaGVyZXIgSW4gMjAwNiwgQWRyaWFuIFNvbG9tb24gd2FzIGxpdmluZyBpbiBOb3J0aCBDYXJvbGluYSB3aGVuIGEgYnVzaW5lc3MgdHJpcCBsZWQgaGVyIHRvIGEgY2hhbmNlIGVuY291bnRlciB3aXRoIEVybmllIFNjaGVyZXIuIApJIHRoaW5rIHdoZXJlIHdlIHByb2JhYmx5IGRvIGRpc2FncmVlIGlzIG9uIGZ1bGwgSXJhbmlhbnMsIGFzIEkgZG8gY29uc2lkZXIgdGhlbSBQb0MuIEkndmUgbmV2ZXIgbWV0IG9uZSB3aG8gaGFzIGNvbnNpZGVyZWQgdGhlbXNlbHZlcyAid2hpdGUiIGluIHRoZSBBbWVyaWNhbiBjb250ZXh0IChDYXVjYXNpYW4gaXMgc2VwYXJhdGUgaXNzdWUgYmVjYXVzZSBhdCB0aGF0IHBvaW50LCB5b3UgY2FuIGFyZ3VhYmx5IGZpdCBhbGwgTWlkZGxlIEVhc3Rlcm5lcnMgYW5kIFNvdXRoIEFzaWFucyBpbnRvIHRoYXQgZGVmaW5pdGlvbikgYW5kIEkgaGF2ZSBuZXZlciBoZWFyZCBhbnlvbmUgZWxzZSBjYWxsIHRoZW0gIndoaXRlIiBlaXRoZXIsIGV4Y2VwdCBmb3IgdGhvc2Ugd2VpcmQgY2Vuc3VzIGRvY3VtZW50cyBidXQgdGhvc2UgYWxzbyBjb25zaWRlciBJbmRpYW5zIGFuZCBFYXN0IEFzaWFucyBhcyBwYXJ0IG9mIHRoZSBzYW1lIHJhY2UsIHNvIG5vdCBleGFjdGx5IGNyZWRpYmxlLiBFdmVuIEpvSm8ncyBtb20sIGlmIEkgc2F3IGhlciB3YWxraW5nIGRvd24gdGhlIHN0cmVldCwgbXkgZmlyc3QgZ3Vlc3Mgd291bGQgYmUgYSAobWl4ZWQgcmFjZSkgTGF0aW5hLCBub3Qgd2hpdGUuClBvbGljZSBhcmUgbG9va2luZyBmb3IgdGhyZWUgc3VzcGVjdHMgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBob21lIGludmFzaW9uLiBUaGUgZmlyc3Qgc3VzcGVjdCBpcyBkZXNjcmliZWQgYXMgYSBibGFjayBtYWxlLCAyOCB0byAzMyB5ZWFycyBvZiBhZ2UsIGZpdmUgZm9vdCBzaXggdG8gZml2ZSBmb290IHNldmVuIHdpdGggbG9uZyBkcmVhZGxvY2tzLiBUaGUgc2Vjb25kIHN1c3BlY3QgaXMgZGVzY3JpYmVkIGFzIGEgYmxhY2sgbWFsZSwgYWJvdXQgMzEgeWVhcnMgb2YgYWdlLCBmaXZlIGZvb3Qgc2V2ZW4gdG8gZml2ZSBmb290IGVpZ2h0IGluIGhlaWdodCB3aXRoIGEgdGhpbiBidWlsZC4gCkkgZGlkbiBnZXQgdGhhdCBpbXByZXNzaW9uIGF0IGFsbCwgYnV0IGl0IGNvdWxkIHRvdGFsbHkgYmUgYmVjYXVzZSBJIGFncmVlIHdpdGggaGltL2hlci4gSSBhbSByZWFsbHkgcGlja3ksIGJ1dCBJIHdpbGwgc3RpbGwgdHJ5IHNvbWV0aGluZyBhIGZldyB0aW1lcyBiZWZvcmUgZGVjaWRpbmcgdGhhdCBJIGp1c3QgZG9uIGxpa2UgaXQuIEkgbWV0IHF1aXRlIGEgZmV3IGFkdWx0cyB3aG8gYXJlIHNvIHBpY2t5IHRoZXkgd2lsbCBkZW1hbmQgYSBzcGVjaWFsIG1lYWwgYmUgbWFkZSBqdXN0IGZvciB0aGVtIChub3QgZHVlIHRvIGRpZXRhcnkgcmVzdHJpY3Rpb25zKS4gSXQgaGFzIGxlZCBtZSB0byB0aGluayB0aGF0IGFueW9uZSB3aG8gcmVmdXNlcyB0byB0cnkgc29tZXRoaW5nIHJlbGF0aXZlbHkgbm9ybWFsIGF0IGxlYXN0IG9uY2UgaXMgaW1tYXR1cmUuClRha2UgdGhlIEkgdG9vayBhbiBhcnJvdyB0byB0aGUga25lZSBvciBoZWxsIGluIGEgY2VsbCBjb21tZW50cyBlbHNld2hlcmUuIApPdXIgZmFucyBoZXJlIGxvdmUgaGltIGFuZCBJIGhvcGUgaGUnbGwgd2VhciBhIFRGQyBqZXJzZXkgZm9yIHRoZSByZXN0IG9mIGhpcyBjYXJlZXIsIiBUb3JvbnRvIHByZXNpZGVudCBCaWxsIE1hbm5pbmcgc2FpZCBpbiBhIHN0YXRlbWVudC4gCk1vc3QgaGlzdG9yaWFucyBvZiB3aGl0ZW5lc3MgYXJndWUgdGhhdCB0aGVzZSB3YWdlcyB3ZXJlICJwYWlkIiBpbiBhIHNlbnNlIHRvIHdvcmtpbmcgd2hpdGVzIGluIG9yZGVyIHRvIGtlZXAgdGhlbSBhbGxpZWQgd2l0aCB0aGUgd2VhbHRoeSBhbmQgYWdhaW5zdCBBZnJpY2FuIEFtZXJpY2Fucy4gQnV0IHdoYXQgYWJvdXQgdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgcGF5IHRoZSB3YWdlcyBvZiB3aGl0ZW5lc3M/IFRoZSBpbnZpc2libGUgd2hpdGUgZWxpdGVzIHdobyBhcmUgd2lsbGluZyB0byBzaGFyZSBzb21lIG9mIHRoZSBwcml2aWxlZ2VzIG9mIHJhY2lhbCBoaWVyYXJjaHkgd2l0aG91dCBleHRlbmRpbmcgYW55dGhpbmcgbGlrZSBlY29ub21pYyBzZWN1cml0eSBvciBldmVuIGhlYWx0aCBjYXJlIHRvIHRoZWlyIGJyb3RoZXJzIGFuZCBzaXN0ZXJzIGluIHJhY2lzbT8uIApFYWNoIHNwcmluZywgYSBuZXcgZ3JvdXAgb2Ygc3R1ZGVudHMgYXJlIGNob3NlbiB0byBzZXJ2ZSBmb3IgdGhpcnRlZW4gbW9udGhzIHRvIHdvcmsgd2l0aCB0aGUgQ2VudGVyIHRvIHBsYW4gdGhlIHllYXIncyBhZ2VuZGEgYW5kIGF0dGVuZCByZWd1bGFyIG1lZXRpbmdzIHdpdGggc3RhZmYgYW5kIGFkdmlzb3JzLiBGZWxsb3dzIGNvbWUgZnJvbSBhIHZhcmlldHkgb2YgY29tbXVuaXR5IGFuZCBsZWFkZXJzaGlwIHBlcnNwZWN0aXZlcyBhdCBVQ0xBIGFuZCBpbiB0aGUgTG9zIEFuZ2VsZXMgY29tbXVuaXR5LiAKUm9iaW5zb24gc2NvcmVkIHRoZSBNYXJvb25zIGxvbmUgZ29hbCBlYXJseSBpbiB0aGUgc2Vjb25kIHBlcmlvZCBmb3IgdGhlIDEgMSB0aWUuLiAKVGhlIG5leHQgdHlwZSBvZiB3ZWIgaG9zdGluZyB0aGF0IHlvdSBtYXkgbGlrZSB0byBwbGFjZSB5b3VyIDMwMCBDbGF5IFBva2VyIENoaXBzIFNldCBvbiBpcyBhIHZpcnR1YWwgcHJpdmF0ZSBzZXJ2ZXIuIEFzIGZhciBhcyBoYXJkd2FyZSwgdGhlcmUgaXMgdWx0aW1hdGVseSBvbmUgc2VydmVyLiAKVGhleSByZW1vdmVkIHdhdmUgZGFzaCwgbCBjYW5jZWxzLCBhbmQgc2xvd2VkIHRoZSBwYWNlIG9mIHRoZSBnYW1lLCBidXQgdGhlIG1vc3QgaW5mYW1vdXMgY2hhbmdlIGlzIHRoYXQgZXZlcnkgdGltZSB5b3UgY2hhbmdlIGRpcmVjdGlvbnMgaW4gdGhlIGdhbWUgdGhlcmUncyBhIHJhbmRvbSBjaGFuY2UgeW91IHdpbGwgdHJpcCBhbmQgZmFsbC4gCk5vIHlvdSBkdW1teSAgIHNleCByZWZlcnMgdG8gZ2VuaXRhbHMgYW5kIGdlbmRlciByZWZlcnMgdG8gYnJhaW4uIApNeSBhYnNvbHV0ZSBGQVZPVVJJVEUgcmVzdGF1cmFudCBpcyBUaGUgVmlsbGFnZS4gVGhlcmUgYXJlIDMgb2YgdGhlbSBhbmQgdGhleSBvbmx5IGRvIGJyZWFrZmFzdCBhbmQgbHVuY2ggYnV0IGl0J3MgcGhlbm9tZW5hbCBmb29kIGFuZCBncmVhdCBzZXJ2aWNlLiBXaGVyZSB0aGV5IGZpbG1lZCBzY2VuZXMgZm9yIHRoZSBYIE1lbiBtb3ZpZXMuIApUaGlzIHdhcyBhc3NvY2lhdGVkIHdpdGggZGVjcmVhc2VkIHBhbmNyZWF0aWMgYW5kIGxpdmVyIHRyaWFjeWxnbHljZXJvbCBzdG9yZXMuIFRoZSBhYm5vcm1hbGl0aWVzIHVuZGVybHlpbmcgdHlwZSAyIGRpYWJldGVzIGFyZSByZXZlcnNpYmxlIGJ5IHJlZHVjaW5nIGRpZXRhcnkgZW5lcmd5IGludGFrZS4KSGUgc3RyZXNzZWQgdGhlIGFsbGVnYXRpb25zIGhhZCBub3QgYmVlbiBwcm92ZW4gYnV0IHNhaWQgaWYgdGhleSB3ZXJlLCB0aGUgY2FzaW5vIHNob3VsZCBub3QgaGF2ZSBpdHMgbGljZW5jZSByZW5ld2VkLiAKQW5kIGdpdmVzIHVzIHRoZSBwcmVwcGVkIHVwIGlucHV0cyB3aXRob3V0IHRoZSBlYXJsaWVyIHJpZ291ciwgaW4gcmVhbCB0aW1lLCBmb3IgZGV2ZWxvcGluZyBkaXNydXB0aXZlIHNvbHV0aW9ucy4gCk5vdywgd2hhdCBjYW4geW91IGRvIHBlcnNvbmFsbHkgdG8gZmlnaHQgY2xpbWF0ZSBjaGFuZ2U/ClRoaXMgZ2l2ZXMgeW91IHRoZSBvcHBvcnR1bml0eSB0byBwcm9maXRhYmx5IGJldCBtZWRpdW0gc3Ryb25nIGhhbmRzIHlvdSBtaWdodCBvdGhlcndpc2UgaGF2ZSBjaGVja2VkLiAKQm91bGRlciBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBDbWRyLiAKU3R1ZHlpbmcgb3BlbmluZ3MgYW5kIHBhdHRlcm5zIGluIGNoZXNzIGhhdmUgYSBzaW1pbGFyIHB1cnBvc2UuIFdoZW4geW91IGp1c3Qgc3RhcnRpbmcsIHRoZXJlIGxpdHRsZSB2YWx1ZS4gWW91IGRvbiBsZWFybiB0byBwbGF5IHRoZSBndWl0YXIgYnkgcGlja2luZyBpdCB1cCBmb3IgdGhlIHZlcnkgZmlyc3QgdGltZSBhbmQgdHJ5IHRvIGxlYXJuIGEgd2hvbGUgc29uZy4gWW91IGZvY3VzIG9uIGxlYXJuaW5nIHRoZSB0ZWNobmlxdWVzIHRvIHBsYXkgdGhlIGd1aXRhci4gQ2hlc3MgaXMgdGhlIHNhbWUuIFlvdSBkb24gc3RhcnQgd2l0aCBvcGVuaW5ncyBhbmQgdGhlb3J5LCB5b3Ugc3RhcnQgd2l0aCB0aGUgdGVjaG5pcXVlcyBvZiBjaGVzcy4gTGVhcm4gdGhlIGdlbmVyYWwgcHJpbmNpcGxlcyBvZiBkZXZlbG9wbWVudCwgdW5kZXJzdGFuZCBhbmQgaW50ZXJuYWxpemUgdGhlIHJlYXNvbmluZyBiZWhpbmQgdGhlIHByaW5jaXBsZXMuIERvIHNvbWUgcHV6emxlcyB0byBsZWFybiBhYm91dCB0YWN0aWNzIGxpa2UgZm9ya3MgYW5kIHBpbnMgYW5kIHRyeSB0byBwdXQgdGhlbSB0byB1c2UgaW4geW91ciBvd24gZ2FtZXMuIExlYXJuIHRvIHN0b3AgYmx1bmRlcmluZyB5b3VyIHBpZWNlcyBhd2F5IGFuZCBsZWF2aW5nIHRoZW0gdW5kZWZlbmRlZC4gTGVhcm4gdG8gc3RvcCBzZXR0aW5nIHlvdXIgcGllY2VzIHVwIGluIHBpbnMgYW5kIGZvcmtzIHlvdXIgZW5lbXkgY2FuIHRha2UgYWR2YW50YWdlIG9mIChvciBhdCBsZWFzdCBzZWUgdGhlbSBjb21pbmcpLiBGb2N1cyBvbiBpbXByb3ZpbmcgeW91ciBib2FyZCB2aXNpb24gdW50aWwgeW91IHN0b3AgZ2V0dGluZyBibGluZHNpZGVkIGJ5IHBpbnMgYW5kIGZvcmtzLiBMZWFybiBzb21lIG9mIHRoZSBiYXNpYyBlbmRnYW1lIG1hdGluZyBwYXR0ZXJucyBzbyB5b3Uga25vdyBob3cgdG8gY2hlY2ttYXRlIHlvdXIgb3Bwb25lbnQgaWYgeW91IGdldCB0aGVyZSAoSytRIHZzLiBLLCBLK1IgdnMuIEssIEsrMiBCaXNob3BzIHZzIEsuLCBldGMuKS4KSW4gb3RoZXIgd29yZHMsIHRoZSBzaWduYWwgdG8gbm9pc2UgcmF0aW8gZmFsbHMgcHJlY2lwaXRvdXNseS4gVGhpcyBoYXMgY29uc2VxdWVuY2VzLiAKTXMgUnVkZHNhaWQgc2hlIHdhcyAibW9ydGlmaWVkImFmdGVyIHJlZmVycmluZyB0byBMYWJvdXIgZnJvbnRiZW5jaGVyIERpYW5lIEFiYm90dCBhcyAiY29sb3VyZWQiIGR1cmluZyBhIHJhZGlvIGludGVydmlldy4gClRoZSBuZXh0IGltcG9ydGFudCBwb2ludCBpbnZvbHZlcyBwb3Qgb2Rkcy4gCklmIHlvdSd2ZSBmb3Jnb3R0ZW4gZXZlcnl0aGluZyBvciBoYXZlbid0IGxlYXJudCB0aGVzZSB5ZXQsIHNjcm9sbCBkb3duIHRvIHRoZSBib3R0b20gb2YgdGhlIHBhZ2UsIHdoZXJlIHlvdSdsbCBmaW5kIGEgbGluayB0byBhIHN0YXRpc3RpY3MgYm9vayBvbiBBbWF6b24gY292ZXJpbmcgdGhlc2UgdG9waWNzLiBQcm9ibGVtcyBpbnZvbHZpbmcgdGhlIFJ1bGUgb2YgVG90YWwgUHJvYmFiaWxpdHkgYW5kIEJheWVzJyB0aGVvcmVtIHdpbGwgYmUgbWFya2VkIHdpdGggYSAsIHNvIHlvdSBtYXkgc2tpcCB0aGVtIGlmIHlvdSBoYXZlIG5vdCBsZWFybnQgdGhlc2UgYXNwZWN0cyBvZiBwcm9iYWJpbGl0eS4uIAoiTm9ib2R5IGNvdWxkIGJlYXQgbXkgbW90aGVyIGF0IGNhcmRzLCIgc2FpZCBoZXIgZGF1Z2h0ZXIgTWFyamllIG9mIFNvbWVydmlsbGUuICJJdCB3YXMgcG9pbnRsZXNzOyBNb20ganVzdCB3b24uIFRoYXQncyB3aGF0IHNoZSBkaWQgd2hlbiBzaGUgcGxheWVkIGNhcmRzLiBBbmQgc2hlIGd1YXJkZWQgaXQgd2VsbC4gU2hlIGRpZG4ndCB0ZWFjaCB1cyBob3cgdG8gd2luLiBUaGF0J3Mgbm90IG9uZSBvZiB0aGUgdGhpbmdzIHNoZSBoYW5kZWQgZG93bi4iClRoZSBjb21wYW55IG9mZmVycyBwZXJrcyBsaWtlIGFkb3B0aW9uIGFzc2lzdGFuY2UsIGd5bSBtZW1iZXJzaGlwcyBhbmQgQ2xhc3NQYXNzIHN1YnNjcmlwdGlvbnMsIGFuZCB1bmxpbWl0ZWQgcGFpZCB0aW1lIG9mZiBhZnRlciBhIHllYXIgb2YgZW1wbG95bWVudC4gCiJUaGlzIG1vbmV5IGNvbWVzIGZyb20gYWRkaWN0aW9uLiBJIGdyZXcgdXAgaW4gYSBzbWFsbCBjb3VudHJ5IHRvd24sIGEgZ3JlYXQgY29tbXVuaXR5LiBQb2tpZXMgZGFtYWdlZCB0aGF0LiBBIG5ldGJhbGwgZmllbGQgd2FzIHNtYWxsIGNvbnNvbGF0aW9uLiIKWW91IHBsYXllZCB0aGlzIGZpbmUsIGVzcGVjaWFsbHkgd2l0aCBoaXMgc2l6aW5nIHRoZXJlLiBUdXJuIENSIHdvdWxkIGJlIGF3ZnVsIGhlcmUsIGVzcGVjaWFsbHkgZ2l2aW5nIHN0YWNrIHNpemVzLiBObyBpZGVhIHdoeSBoZSB3b3VsZCBiZSBhZ2FpbnN0IGEgcml2ZXIgQ1IsIGhlIHByb2JhYmx5IHRoaW5rcyBoZSBpbmR1Y2VkIGEgYmx1ZiB3aXRoIGhpcyBzaXppbmcgYW5kIHdpbGwgc2hydWcgY2FsbCBhbnkgb3ZlcnBhaXIuCkZvciBleGFtcGxlIGV2ZW4gSmFlZG9uZyB1c2VkIGEgTGVhcG9sZCBiZWZvcmUgZ29pbmcgb3ZlciB0byBFRy4gV2hlbiBGbGFzaCBnb3QgcGlja2VkIHVwIGJ5IFJhem9yIGhlIHdhcyBnaXZlbiBhIHJlZ3VsYXIgQmxhY2t3aWRvdyBidXQgbGVzcyB0aGVuIDIgbW9udGhzIGxhdGVyIGhlIHdhcyBzZWVuIHdpdGggYSAxMCBrZXlsZXNzIGJyb3duIHN3aXRjaCB2ZXJzaW9uLiAKRGlzbmV5IHNwb25zb3JlZCBGcmlkYXkgbW9ybmluZydzIGNvZmZlZSBicmVhayBhbmQgcGx1Z2dlZCBpdCB3aXRoIGEgY3VzdG9tIHZpZGVvIHRoYXQgbWFkZSB1c2Ugb2YgRGlzbmV5IG93bmVkIEFCQyBhbmQgRVNQTiBwZXJzb25hbGl0aWVzLCBpbmNsdWRpbmcgIkdvb2QgTW9ybmluZyBBbWVyaWNhIiBob3N0cyBHZW9yZ2UgU3RlcGhhbm9wb3Vsb3MsIFJvYmluIFJvYmVydHMgYW5kIE1pY2hhZWwgU3RyYWhhbi4gCkl0IGlzIHdlbGwgd2l0aGluIHlvdXIgcmlnaHRzIHRvIGNhbGwgcHJhY3RpdGlvbmVycyBhbmQgYXNrIHRoZW0gYWJvdXQgdGhlaXIgdHJhaW5pbmcgYW5kIGV4cGVyaWVuY2UuIApUaGVtb3N0IHJlY2VudCBvbmUgY291bGQgYWxzbyBiZSBlaWdodCB5ZWFycyBvbGQsIGp1c3QgYSBmZXcgZGF5c3lvdW5nZXIuIApCbG93cyB1cCBiZWZvcmUgdGhlIG1vbmV5IGJ1YmJsZSB3aGVuIHNvbWUgdGlnaHQgcGxheWVyIHRyYXBzIGhpbSB3aXRoIGEgbW9uc3Rlci4uIApBdSBYVklJSSBtZSBzaWNsZSwgdW5lIG1hcmllIHNjYW5kaW5hdmUgYXNzdXJhaXQgc29uIGJvbmhldXIgY29uanVnYWwgZW4gb3JuYW50IHNvbiBjb3JzYWdlIGRlIGZsZXVycyBkIHBsdXMgcGV0aXQgcXVlIGxlIGZlbm91aWwgYXVxdWVsIGlsIHJlc3NlbWJsZSBiZWF1Y291cCwgbCBlc3QgY29uc3RpdHUgZCB0aWdlIGNyZXVzZSwgbGlzc2UgZXQgdmVydCBnbGF1cXVlLiAKQW5kIGp1c3QgbGlrZSB3ZSBsZWFybmVkIHRvIHBsYXkgYXJvdW5kIHRoZSBhd3Agd2l0aCBpdHMgcmlkaWN1bG91cyBzdGF0cywgd2Ugd2lsbCBsZWFybiB0byBwbGF5IGFyb3VuZCB0aGUgYXVnLiBJdCBhIGRpZmZlcmVudCBtZXRhIHlvdSBuZWVkIHRvIGxlYXJuLCB0aGF0IGFsbC4KTGV0IGFzc3VtZSB0aGF0IHdlIHRhbGtpbmcgdGhlIGNvbG9yIGF0IHRoZSB2ZXJ5IGhlYXJ0IG9mIHRoZSBhcnJvdy4gRm9yIHRoZSBvbGQgZGVzaWduLCB0aGF0IGZmOGI2MC4gRm9yIHRoZSBuZXcgZGVzaWduLCB0aGF0IGZmNDUwMC4KRG8gdGhlIHdvbWVuIHlvdSBnbyBvbiBkYXRlcyB3aXRoIGtub3cgeW91IG5ldmVyIGJlZW4gaW4gYSBMVFI/IE1heWJlIHRoYXQgaXMgYWxzbyBzb21ldGhpbmcgdGhhdCBpcyB0dXJuaW5nIHRoZW0gb2ZmLCBpbiB3aGljaCBjYXNlLCBwZXJoYXBzIHlvdSBjb3VsZCBiZSB2YWd1ZSBhYm91dCBpdC4gCkxlYWRlcnMgd291bGQgcHJlZmVyIHRvIHNwZWFrIGluIHRoZSBsYW5ndWFnZSBvZiByZWFkaWx5IGNhbGN1bGFibGUgaW50ZXJlc3RzLiBUYWxrIG9mIGNhcmUgYW5kIG1vcmFsIHNjcnVwbGVzIGlzIHVuY29tZm9ydGFibGUgYW5kIHVuc3RhYmxlIHRlcnJhaW4uIEFzIHRoZSBUdXJraXNoIHBvbGl0aWNhbCBhbmFseXN0IE11c3RhZmEgQWt5b2wgaGFzIHB1dCBpdCwgZm9yIG1vc3Qgb2YgdGhlIFR1cmtpc2ggcG9wdWxhdGlvbiwgImNhcmUgZm9yIFN5cmlhIGRvZXMgbm90IHRyYW5zbGF0ZSBpbnRvLCAnTGV0J3MgZ28gbGliZXJhdGUgaXQuJyIgWWV0IGxlYWRlcnMgd2hvIG5lZWQgdGhlaXIgcGVvcGxlJ3Mgc3VwcG9ydCB0byBhZGRyZXNzIGNvbXBsZXgsIGludGVyZGVwZW5kZW50IHByb2JsZW1zIGJleW9uZCB0aGVpciBib3JkZXJzIG11c3Qgc29jaWFsaXNlIHRoZW0gaW50byBhIHR3ZW50eSBmaXJzdCBjZW50dXJ5IHdvcmxkIGluIHdoaWNoIGNhcmluZyB3aXRob3V0IGFjdGluZyBpbXBlcmlscyB1cyBhbGwuLiAKVmVudXMgaGFkIHJpc2VuIGFib3ZlIHRoZSBicmFuY2gsIGFuZCB0aGUgZWFyIG9mIHRoZSBHcmVhdCBCZWFyIHdpdGggaXRzIHNoYWZ0IHdhcyBub3cgYWxsIHBsYWlubHkgdmlzaWJsZSBhZ2FpbnN0IHRoZSBkYXJrIGJsdWUgc2t5LCB5ZXQgc3RpbGwgaGUgd2FpdGVkLi4gCkkgcmVjZW50bHkgd2F0Y2hlZCBpdCBibHVyYXkuIEkgZG8gbm90IHRoaW5rIHRoZSBjcml0aWNzIHJldmlldyBzY29yZSByZXByZXNlbnQgdGhlIGZpbG0gZmFpcmx5LCB3aGVyZWFzIGdvb2dsZSByZXZpZXdzIGFyZSBhdCA5NSUuCkJlY2F1c2UgZGlmZmVyZW50IHNpdGVzIGhhdmUgZGlmZmVyZW50ZnJlZXJvbGxzIGF0IGRpZmZlcmVudCB0aW1lcy4gCkFjYWRlbWljbGFkeSAgMjUsMzc4IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkhlIGFsc28gaGFzIHNvbWUgaW50ZXJlc3Rpbmcgc3R1ZmYgdG8gc2F5IGFib3V0IHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBHT1AgbGVhZGVycyBhbmQgdGhlIGdvdmVybm9yLiBXaGlsZSB0aGVyZSBhcmUgYmlnIHBoaWxvc29waGljYWwgZGlmZmVyZW5jZXMsIGl0IGFwcGVhcnMgdGhleSBzdGlsbCBwbGFuIHRvIHRyeSBhbmQgd29yayB0b2dldGhlci4gCldoaXBsYXNoIGluanVyeSBjYXVzZXMgbWljcm9zdHJ1Y3R1cmFsIGNoYW5nZXMsIGFub21hbG91cyBmaWJlciByZWFsaWdubWVudCBhbmQgbGF4aXR5IG9mIHRoZSBmYWNldCBjYXBzdWxhciBsaWdhbWVudHMuClRoZSBjYXZlIGlzIHRoZSBsYXJnZXN0IGtub3duIG9mIGl0cyB0eXBlLCBhIHZhcmlldHkgb2YgInN0cmlwZWQga2Fyc3QsIiB3aGljaCBpcyBtYXJibGUgaW50ZXJzcGVyc2VkIHdpdGggb3RoZXIgdHlwZXMgb2YgYW5jaWVudCBvY2VhbiByb2NrLCBzaGUgc2FpZC4KUGVyYWx0YTMwIHUKTGlrZSwgZHVkZSwgSSBub3Qgc29tZSBzY2FyeSBib29nZXltYW4gb3V0IHRvIGdldCB5b3UuIApIb3cgZG9lcyB1bmRlcnN0YW5kaW5nIGhpcyBwb2ludCBvZiB2aWV3IGNoYW5nZSB3aGF0IGhlIGRpZD8gSGUgZGlkIGEgc2hpdHR5IHRoaW5nLCBhbmQgdGhlIHJlYXNvbmluZyBiZWhpbmQgaXQgZG9lcyBub3Qgc29mdGVuIHRoZSBhY3Rpb24gaXRzZWxmLiBJZiBoZSBpc24gYSB3aGl0ZSBuYXRpb25hbGlzdCwgaGUgc3RpbGwgc3VwcG9ydGVkIHdoaXRlIG5hdGlvbmFsaXN0cy4gQXMgeW91IHlvdXJzZWxmIHNheSwgaGUgYmx1cnMgdGhlIGxpbmUgb2YgaGlzIGFydCwgaGlzIGNvbWVkeSBhbmQgaGlzIHBlcnNvbmFsIGxpZmUuIFdoZW4gYW0gSSBzdXBwb3NlZCB0byB0YWtlIGhpbSBzZXJpb3VzbHk/IFdoZW4gaGUgc2F5cyBzbz8gV2hhdCBhcmUgaGlzIGFjdHVhbCBiZWxpZWZzIGFuZCB3aGF0IHNhdGlyaWNhbD8gTWF5YmUgaGlzIGV4cGxhbmF0aW9uIHdhcyBzYXRpcmljYWwsIHdobyBrbm93cz8gQWxsIEkgY2FuIGp1ZGdlIGhpbSBvbiBhcmUgaGlzIGFjdGlvbnMsIGFuZCBoZSBkb25hdGVkIGEgYnVuY2ggb2YgaGlzIG93biBtb25leSB0byBhIHdoaXRlIG5hdGlvbmFsaXN0IGdyb3VwLiBGdW5jdGlvbmFsbHksIGl0IGRvZXNuIG1hdHRlciB3aGF0IGhpcyB2aWV3cG9pbnQgaXMuCkJ1dCB0aGVyZSBhbm90aGVyLCBldmVuIG1vcmUgaHVtYmxpbmcgcmVhc29uIHlvdSBtYXkgZXhwZXJpZW5jZSB5b3Vyc2VsZiBhcyBhIHdvcmtwbGFjZSB0YXJnZXQ6IGEgcHN5Y2hvbG9naWNhbCBiaWFzIGNhbGxlZCB0aGUgc3BvdGxpZ2h0IGVmZmVjdCwgd2hpY2ggd2FzIGRlbW9uc3RyYXRlZCBzb21lIHllYXJzIGJhY2sgYnkgQ29ybmVsbCBVbml2ZXJzaXR5IHBzeWNob2xvZ3kgcHJvZmVzc29yIFRvbSBHaWxvdmljaCBhbmQgY29sbGVhZ3Vlcy4gSW4gdGhlIG1vc3QgcmVjZW50IGVkaXRpb24gb2Ygb3VyIGJvb2sgICAgIFRvbSBhbmQgSSBzdW1tZWQgdXAgdGhlIHJlbGV2YW50IHRha2Vhd2F5IHRodXNseToga2V5IGxlc3NvbiBpcyBub3QgdGhhdCBmZXdlciBwZW9wbGUgYXJlIHBheWluZyBhdHRlbnRpb24gdG8geW91IHRoYW4geW91IHRoaW5rOyBpdCdzIHRoYXQgeW91J3JlIHBheWluZyBtb3JlIGF0dGVudGlvbiB0byB3aGF0IHlvdSB0aGluayBwZW9wbGUgYXJlIHRoaW5raW5nIGFib3V0IHlvdSB0aGFuIGlzIHdhcnJhbnRlZC4gV2h5IFR1cmJvcHJvcHMgQXJlIE1ha2luZyBhIENvbWViYWNrKQpUZXhhcyBIb2xkZW0gUGlyYXRlIFBva2VyIFNvZnR3YXJlIFJldmlldwpGaXJzdCBvZiBhbGwsIEknbSBub3QgY2hlY2tpbmcgbm90aWZpY2F0aW9ucyBvbiBoZXJlIGNvbnN0YW50bHkuIApQZXJzb25hbGl0eSBpcyBhbHNvIGp1ZGdlZCBieSB0aGUgaGFuZHNoYWtlLiBBIGZpcm0gYW5kIHdhcm0gaGFuZHNoYWtlIGlzIGEgbWFqb3IgaW5kaWNhdG9yIG9mIGhvdyB0aGUgbWVldGluZyBiZXR3ZWVuIHR3byBzdHJhbmdlcnMgd2lsbCB1bmZvbGQuIFRoZSBjdXJyZW50IHBhc3NlZCB0aHJvdWdoIHZpYSBoYW5kc2hha2UgY2FuIGJlIGxpdmUgb3IgZGVhZC4gSWYgaXQgaXMgbGl2ZSwgdGhlIHJlc3BvbnNlIHdpbGwgYmUgbW9zdCBsaWtlbHksIGEgd2FybWVyIHJlYWN0aW9uLiBTZW5kaW5nIGNvbGQgZW5lcmd5IGFjcm9zcyBpcyBhbiBpbmRpY2F0aW9uIG9mIGEgbGFjayBvZiBpbnRlcmVzdC4gSSBoYWQgYSBmcmllbmQgYXQgdW5pdmVyc2l0eSwgd2hvIGhhZCB0aGUgbW9zdCBzb2Z0IGhhbmRzaGFrZTsgd2hlbmV2ZXIgaGUgdmlzaXRlZCBvdXIgaG91c2UsIG15IGZhdGhlciB3b3VsZCBzYXksICJoZSBkb2Vzbid0IHNoYWtlIGhhbmRzIGhlIGhhbmRzIG92ZXIgaGlzLCBoYW5kcyBzaGFrZSBpdCwgaWYgeW91IHdpc2ggdG8sIGlzIHRoZSBtZXNzYWdlLiIgQ2hpbmVzZSBwcmVtaWVyIFpob3UgRW5sYWkgd2FzIGtub3duIGZvciBoaXMgZXhjZWVkaW5nbHkgbG9uZyBhbmQgd2FybSBoYW5kc2hha2UuIEluZmFjdCwgaGlzIHVud2lsbGluZ25lc3MgdG8gbGV0IGdvIG9mIHRoZSBoYW5kIG9mIEJlZ3VtIE51c3JhdCBCaHV0dG8sIHVwb24gYXJyaXZhbCBhdCBCZWppbmcgYWlycG9ydCwgYWxvbmdzaWRlIGhlciBodXNiYW5kLCBadWxpZnFhciBBbGkgQmh1dHRvLCBoYWQgYmVjb21lIHRoZSBidXR0IG9mIG1hbnkgam9rZXMuIEJ1dCBhbGwgTGVhZGVycywgZnJvbSBTb3ZpZXQgTGVvbmlkIEJyZXpobmV2IHRvIEFtZXJpY2FuIFJpY2hhcmQgTml4b24gYWNrbm93bGVkZ2VkIHRoYXQgWmhvdSdzIGhhbmRzaGFrZSB3YXMgd2FybSBhbmQgZnJpZW5kbHksIG1ha2luZyBoaW0gYWRtaXJhYmxlLgpUaGlzIHR5cGUgb2YgZG9nIGRvZXMgbm90IG5lZWQgdG8gaGF2ZSBhIGhhcmQgd29ya291dCBldmVyeWRheSBiZWNhdXNlIHRoZSBzY2hub29kbGUgdGlyZXMgb3V0IGVhc2lseS4gClNuYXBla2lsbHNlZGRhcmQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KT25jZSByZWluc3RhdGVkIGluIDE5ODAsIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgcHJvbWlzZWQgMTUsMDAwIGFjcmVzIHRvIHRoZSBQYWl1dGVzIHRoYXQgdGhleSB3b3VsZCBiZSBhYmxlIHRvIGNob29zZSAgIHRob3VnaCB0aGlzIG5ldmVyIGhhcHBlbmVkLCBSb2JiIHNhaWQuIApQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gCkEgQmFzaWMgSW50cm9kdWN0aW9uIHRvIE9tYWhhIFBva2VyCkZpZ3VyaW5nIG91dCBob3cgdG8gZGVhbCB3aXRoIHRoZSBzaXR1YXRpb24gcmVhbGx5IGp1c3QgZGVwZW5kcyBvbiB3aGF0IHlvdXIgZW5kIGdvYWwgaXMuIApJIHdhcyBsaXN0ZW5pbmcgdG8gb25lIHdoZXJlIGEgZ3V5IHdobyBoYWQgYSBsb3Qgb2YgY3JlZGl0IGNhcmQgZGVidCB3YXMgYXNraW5nIGFib3V0IHRpdGhpbmcuIE9mIGNvdXJzZSBEYXZlIFJhbXNleSB0b2xkIGhpbSB0aXRoaW5nIHdhcyBhIGdvb2QgdGhpbmcgdG8gZG8uIApZb3UgbWF5IGFjY2VzcyB0aGUgV2Vic2l0ZXMgb25seSBwZXJzb25hbGx5IHdpdGggYW4gaW5kaXZpZHVhbCBicm93c2VyIGFuZCB1c2UgdGhlIENvbnRlbnQgb25seSBmb3IgcGVyc29uYWwgb3IgcHJvZmVzc2lvbmFsIGZhbWlseSBoaXN0b3J5IHJlc2VhcmNoLCBhbmQgZG93bmxvYWQgQ29udGVudCBvbmx5IGFzIHNlYXJjaCByZXN1bHRzIHJlbGV2YW50IHRvIHRoYXQgcmVzZWFyY2ggb3Igd2hlcmUgZXhwcmVzc2x5IHBlcm1pdHRlZCBieSBXb3JsZCBBcmNoaXZlcy4gCkluIDIwMDIsIENydWlzZSB3YXMgc2VudGVuY2VkIHRvIDI0IHllYXJzLiAKQSBNbnVjaGluIHNwb2tlc21hbiBkaWQgbm90IGltbWVkaWF0ZWx5IHJlc3BvbmQgdG8gYSByZXF1ZXN0IGZvciBjb21tZW50Li4gCkEgY2Fwc3VsZSBsYXVuY2hlZCBsYXN0IHdlZWsgd2l0aCBhIGR1bW15IG5pY2tuYW1lZCAiUmlwbGV5IiBhYm9hcmQsIGEgcmVmZXJlbmNlIHRvIHRoZSBob3Jyb3IgZmlsbSBBbGllbixzdWNjZXNzZnVsbHkgcmVhY2hlZCB0aGUgSW50ZXJuYXRpb25hbCBTcGFjZSBTdGF0aW9uIGFuZCBpcyBkdWUgdG8gcmV0dXJuIHRvIGVhcnRoIHRoaXMgd2Vla2VuZC4gCkNvbXBldGl0aW9uIGlzIG9ubHkgZ29pbmcgdG8gZ2V0IG1vcmUgaW50ZW5zZSB0aGUgZ3JhbmRkYWRkeSBvZiB0aGUgbmV3IE5vcnRoZWFzdCBnYW1ibGluZyBwcm9wZXJ0aWVzLCB0aGUgJDIuNiBiaWxsaW9uIEVuY29yZSBCb3N0b24gSGFyYm9yLCBieSBXeW5uIFJlc29ydHMsIGlzIHNjaGVkdWxlZCB0byBvcGVuIGluIEp1bmUuIApJZiBib3RoIGhhbmRzIGFyZSB0aWVkLCBvciBpZiB0aGUgYmFua2VyIHdpbnMgZWl0aGVyIHRoZSBoaWdoIG9yIGxvdyBoYW5kIGFuZCB0aGUgb3RoZXIgaXMgdGllZCwgdGhlIGJhbmtlciB3aW5zIHRoZSBwbGF5ZXIncyBiZXQuIApHbyB0byB0aGUgaXNsZSB0byBidXkgdGhlIG1hdHRlcmhvcm4uIApOZXVyb0ltYWdlLiAKU29tZSBjYXNpbm8gdG91cm5hbWVudHMgYXdhcmQgdGhlaXIgcGxheWVycyB3aXRoIGV4dHJhIHBvaW50cyBmb3IgYmVpbmcgdGhlIG1vc3QgcmVsaWFibGUgb3IgbG95YWwgcGxheWVyIHRvIHRoZWlyIHdlYnNpdGUgb3IgZm9yIHBsYXlpbmcgdGhlIG1heGltdW0gbnVtYmVyIG9mIGdhbWVzIG9uIGEgc2luZ2xlIHdlYnNpdGUuIApJJ20gYSBkYW1uIGdvb2QgYXJ0aXN0IGFuZCBhIHF1aWNrIGxlYXJuZXIgd2l0aCBtYWtpbmcgdGhpbmdzLgpUaGlzIGxlYXZlcyA0IHBsYXllcnMgYWN0dWFsbHkgdHJ5aW5nIHRvIHdpbiBtb25leSBpbiB0aGUgbG9uZ3Rlcm06IDEgaXMgYSBiYWQgcmVnLCBhbm90aGVyIGlzIGEgc2xpZ2h0bHkgbG9zaW5nIHBsYXllciB3b3JraW5nIG9uIGhpcyBnYW1lLCB0aGVyZSBpcyBhIGJyZWFrIGV2ZW4gcGxheWVyIHRoYXQgYmVhdHMgYWxsIGJ1dCBvbmUgcGxheWVyIGFuZCB0aGVuIHRoZXJlIGlzIHRoZSB3aW5uaW5nIHBsYXllciB3aG8gY3J1c2hlcyBhbmQgYWJ1c2VzIHRoZSBicmVhayBldmVuIHBsYXllciBsaWtlIGhpcyBwZXJzb25hbC4gCldlIGFyZSBqdXN0IGF0IHRoZSB2ZXJ5IGJlZ2lubmluZyBvZiB0aGlzIHNoaWZ0LCBhbmQgaXQgdGFrZXMgdGltZSB0byByZWFjaCBwZW9wbGUsIGFuZCBmb3IgdGhlIG1lc3NhZ2luZyB0byB0YWtlIGhvbGQuIAo=|<---