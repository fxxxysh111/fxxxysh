<!DOCTYPE doctype html>
<html lang="en">
 <head>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" name="viewport"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="website" property="og:type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="pinterest:url"/>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="pinterest:description"/>
  <meta content="@TIME" name="twitter:site"/>
  <meta content="http://time.com/img/misc/og-default.png" name="pinterest:media"/>
  <meta content="http://time.com/img/misc/og-default.png" name="twitter:image"/>
  <meta content="http://time.com/img/misc/og-default.png" property="og:image"/>
  <meta content="53177223193" property="fb:app_id"/>
  <meta content="10606591490" property="fb:pages"/>
 </head>
 <body class="template-section karma-site-container">
  <header class="navigation ">
   <nav class="main no-secondary-ribbon no-utility-ribbon contextual-social-enabled has-headline">
    <section class="container primary">
     <section class="subcontainer">
      <div class="row-header__container">
       <button aria-label="Menu" class="menu" title="Menu">
        <div class="menu-box">
         <div class="menu-inner">
         </div>
        </div>
       </button>
       <div class="logo">
        [ahref]
        
        [ahref]
        
       </div>
       <div class="contextual-social-links mobile-only">
        <div class="component share ">
         <div class="social-container display-flex">
          <span class="icon icon-facebook-circle-solid social-icon padding-8-right" data-social-service="facebook">
           [link]
           
          </span>
          <span class="icon icon-twitter-circle-solid social-icon padding-8-right" data-social-service="twitter">
           <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search]<li>[search]</li>
          </span>
          <span class="icon icon-email-circle-solid social-icon padding-8-right">
           [ahref]
           
          </span>
         </div>
        </div>
       </div>
       <div class="title-display desktop-only">
        <span class="title-text padding-16-right">
         the boss<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[search]</li><li>[link]</li>[search]<li>[link]</li>
        </span>
       </div>
       <div class="primary-links mobile-only" data-tracking-zone="nav">
        <ul class="primary-text-links">
         <li class="heading-list menu-list-item" data-action="primary-nav-pos-6">
          [link]
          
         </li>
        </ul>
       </div>
       <button aria-label="Search" class="icon search mobile-only js-activate" title="Search">
        <span class="icon icon-search utility-icon color-ribbon-primary-text">
         <svg aria-hidden="true" height="24" role="img" tabindex="-1" viewbox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
          <path d="M14.1 14.751a5.53 5.53 0 1 1 .651-.651L19 18.348l-.652.652-4.248-4.249zm-3.557.4a4.608 4.608 0 1 0 0-9.216 4.608 4.608 0 0 0 0 9.215z" fill="#685F55">
          </path>
         </svg>
        </span>
       </button>
       <div class="search-container mobile-only search-open" data-tracking-zone="search">
        <form action="/search" method="GET">
        </form>
       </div>
       <div class="primary-links desktop-only" data-tracking-zone="nav">
        <ul class="primary-text-links">
         <li class="heading-list menu-list-item " data-action="primary-nav-pos-1">
          <a href="/section/us/">
           U.S.
          </a>
         </li>
         <li class="heading-list menu-list-item " data-action="primary-nav-pos-2">
          [link]
          
         </li>
         <li class="heading-list menu-list-item " data-action="primary-nav-pos-3">
          [link]
          
         </li>
         <li class="heading-list menu-list-item " data-action="primary-nav-pos-4">
          <a href="/section/tech/">
           Tech
          </a>
         </li>
         <li class="heading-list menu-list-item " data-action="primary-nav-pos-5">
          [link]
          
         </li>
         <li class="heading-list menu-list-item component subscribe-flyout" data-action="primary-nav-pos-6">
          [link]
          
          <div class="subscribe-cover">
           <div class="component lazy-image " data-alt="Subscribe" data-shop-image="false" data-src="https://subscription-assets.timeinc.com/current/1850_top1_205_thumb.jpg" data-title="">
            <noscript>
             <div class="inner-container">
             </div>
            </noscript>
            <div class="inner-container js-inner-container ">
            </div>
           </div>
          </div>
         </li>
        </ul>
        <div class="buttons " data-tracking-zone="search">
         <button aria-label="Search" class="icon search js-activate" data-action="primary-nav-pos-7" title="Search">
          <span class="icon icon-search utility-icon color-ribbon-primary-text">
           <svg aria-hidden="true" height="32" role="img" tabindex="-1" viewbox="0 0 24 24" width="32" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.1 14.751a5.53 5.53 0 1 1 .651-.651L19 18.348l-.652.652-4.248-4.249zm-3.557.4a4.608 4.608 0 1 0 0-9.216 4.608 4.608 0 0 0 0 9.215z" fill="#685F55">
            </path>
           </svg>
          </span>
         </button>
         <div class="search-container">
          <form action="/search" method="GET" name="search">
          </form>
          <button class="icon close close-search" data-action="primary-nav-close-search">
           <span class="icon icon-close utility-icon color-ribbon-primary-text">
            [ahref][search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
           </span>
          </button>
         </div>
        </div>
       </div>
       <div aria-hidden="true" class="ad ad-container ad-wrapper type-4x1 header-text-ad type-cm-subscribe desktop-ad cm-ad karma-ad" data-dimensions="4x1" data-tier="1" id="div-gpt-cm" role="complementary">
       </div>
      </div>
     </section>
    </section>
   </nav>
   <nav class="main has-promo-tout notification-banner-wrapper" data-embed-type="notification-banner">
   </nav>
   <div class="nav-placeholder no-secondary-ribbon no-utility-ribbon">
   </div>
   <nav class="menu no-secondary-ribbon" data-tracking-zone="nav">
    <section class="container">
     <section class="menu main-menu">
      <ul>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/business/">
         Business
        </a>
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/newsfeed/">
         Newsfeed
        </a>
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/the-goods/">
         The Goods
        </a>
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/tag/longevity-2017/">
         Longevity 2017
        </a>
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/poy">
         Person of the Year
        </a>
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/storefront/link/1042503.html">
         TIME Edge
        </a>
       </li>
      </ul>
     </section>
     <section class="menu second-menu">
      <ul>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="m">
         Feedback
        </a>
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/prod/assets/themes/magazines/default/template-resources/html/legal/ti-corp-behavioral.html">
         Ad Choices
        </a>
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <h2>
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
        <a href="/time/reprints">
         Reprints and Permissions
        </a>
       </li>
       <li class="menu-item heading-menu">
        [ahref]
        
       </li>
       <li class="menu-item heading-menu">
        [link]
        
       </li>
       <li class="menu-item heading-menu">
        <a href="/servlet/CSGateway?cds_mag_code=TIM">
         Customer Service
        </a>
       </li>
       <li class="menu-item heading-menu">
        <a href="/tf/eu/solo">
         EU Customer Service
        </a>
       </li>
      </ul>
     </section>
     <section class="menu">
      <label class="heading-tiny">
       Stay Connected
      </label>
      <div class="menu-item-styled social-items no-pad-top">
       <span class="icon icon-facebook-circle-stroke social-stroke-icon color-accent margin-4-right">
        [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
       </span>
       <span class="icon icon-instagram-circle-stroke social-stroke-icon color-accent margin-4-right">
        [ahref]
        
       </span>
       <span class="icon icon-twitter-circle-stroke social-stroke-icon color-accent margin-4-right">
        <li>[search]</li>[search]<li>[link]</li><li>[link]</li>[search]
       </span>
       <span class="icon icon-pinterest-circle-stroke social-stroke-icon color-accent margin-4-right">
        [link]
        
       </span>
      </div>
     </section>
    </section>
   </nav>
   <div class="sidebar-overlay-menu desktop-only hidden">
   </div>
   <div class="menu-overlay">
   </div>
   <div class="component adhesion-ad mobile-ad">
    <div class="adhesion-ad-container">
     <div aria-hidden="true" class="ad ad-container ad-wrapper type-320-flex mobile-ad karma-ad" data-dimensions="102x1;300x50;320x50" data-tier="1" id="div-gpt-mob-adhesive-banner-fixed" role="complementary">
     </div>
    </div>
   </div>
   <div class="ad-wrapper outer tablet-ad desktop-ad full-column">
    <div class="ad-sticky-container desktop-ad tablet-ad karma-ad">
     <div aria-hidden="true" class="ad ad-container ad-wrapper type-banner type-970x90-flex padding-8-tb desktop-ad tablet-ad karma-ad" data-dimensions="101x1;970x90;970x66;970x250;728x90" data-tier="1" id="div-gpt-leaderboard-flex-1" role="complementary">
     </div>
    </div>
   </div>
  </header>
  <main class="content riverpage">
   <div class="partial header-banner the boss">
    <section class="package-image-headline container-full-width">
     <h1 class="lead-headline">
      [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
     </h1>
     <div class="lead-subtitle">
      <div class="component expander clearfix">
       <noscript>
       </noscript>
       <div class="expander-inner">
       </div>
       <div class="expander-button">
        <div class="open-button">
         See More
        </div>
       </div>
      </div>
     </div>
    </section>
   </div>
   <div class="component bucket barge boaty-mc-boat-face container-full-width karma-below-banner mini-barge with-sidebar-right ">
    <section class="content left-rail">
     <div class="partial hero">
      <article class="partial tile media image-top type-article" data-account_id="293884104" data-crop="marquee_large_2x" data-display_option="inline_video" data-headline-style="heading-content" data-player="SJa0Thl7">
       [ahref]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content margin-8-bottom media-heading">
         [ahref]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          Ronda Jackson of Décor Interior Design refused to give up
         </div>
         <div class="summary margin-8-bottom desktop-only">
          Ronda Jackson of Décor Interior Design refused to give up
         </div>
        </div>
       </div>
      </article>
     </div>
     <div class="partial marquee" data-action="">
      <div class="component native-ad type-487x100 ">
       <div aria-hidden="true" class="ad ad-container ad-wrapper type-nativo type-487x100-flex karma-ad" data-dimensions="487x100;1x5" data-lazy-scroll="true" data-tier="NaN" id="undefined-undefined" role="complementary">
       </div>
      </div>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       [link]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [ahref]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          'In the long run, I knew it would all be temporary'
         </div>
         <div class="summary margin-8-bottom desktop-only">
          'In the long run, I knew it would all be temporary'
         </div>
        </div>
       </div>
      </article>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       <a class="media-img margin-16-bottom" href="/5344461/joyce-brown-fashion-institute-success/">
        <div class="component lazy-image marquee_large_2x " data-alt="Dr. Joyce Brown, the president of F.I.T." data-shop-image="false" data-src="https://timedotcom.files.wordpress.com/2018/07/dr-brown-16x9.jpg" data-title="Dr. Joyce Brown, President of F.I.T.">
         <noscript>
          <div class="inner-container">
          </div>
         </noscript>
         <div class="inner-container js-inner-container ">
         </div>
        </div>
       </a>
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [ahref]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          'Access, equity and inclusion have always been paramount among my prioritie...
         </div>
         <div class="summary margin-8-bottom desktop-only">
          'Access, equity and inclusion have always been paramount among my priorities'
         </div>
        </div>
       </div>
      </article>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       [ahref]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [ahref]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          'So many factors play into achieving success in this business'
         </div>
         <div class="summary margin-8-bottom desktop-only">
          'So many factors play into achieving success in this business'
         </div>
        </div>
       </div>
      </article>
      <div class="component native-ad type-485x100 ">
       <div aria-hidden="true" class="ad ad-container ad-wrapper type-nativo type-485x100-flex karma-ad" data-dimensions="485x100;1x5" data-lazy-scroll="true" data-tier="NaN" id="undefined-undefined" role="complementary">
       </div>
      </div>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       [link]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [link]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          'I was angry, and my anger made me determined to create a solution'
         </div>
         <div class="summary margin-8-bottom desktop-only">
          'I was angry, and my anger made me determined to create a solution'
         </div>
        </div>
       </div>
      </article>
      <div class="component native-ad type-486x100 ">
       <div aria-hidden="true" class="ad ad-container ad-wrapper type-nativo type-486x100-flex karma-ad" data-dimensions="486x100;1x5" data-lazy-scroll="true" data-tier="NaN" id="undefined-undefined" role="complementary">
       </div>
      </div>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       [link]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [ahref]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          Georgina Gooley wants to 'ax the pink tax’
         </div>
         <div class="summary margin-8-bottom desktop-only">
          Georgina Gooley wants to 'ax the pink tax’
         </div>
        </div>
       </div>
      </article>
      <div class="component native-ad type-488x100 ">
       <div aria-hidden="true" class="ad ad-container ad-wrapper type-nativo type-488x100-flex karma-ad" data-dimensions="488x100;1x5" data-lazy-scroll="true" data-tier="NaN" id="undefined-undefined" role="complementary">
       </div>
      </div>
      <article class="partial tile media image-top type-article" data-crop="marquee_large_2x" data-headline-style="heading-content-small padding-4-top">
       [ahref]
       
       <div class="media-body article-info bucket-margin margin-24-bottom clearfix">
        <div class="headline heading-3 heading-content-small padding-4-top margin-8-bottom media-heading">
         [link]
         
        </div>
        <div class="article-info-extended">
         <div class="summary margin-8-bottom mobile-only">
          Coveteur's Stephanie Mark says the key to success is to just do it
         </div>
         <div class="summary margin-8-bottom desktop-only">
          Coveteur's Stephanie Mark says the key to success is to just do it
         </div>
        </div>
       </div>
      </article>
     </div>
     <div class="component paginator pagination padding-16 clearfix">
      [link]
      
     </div>
    </section>
    <section class="sidebar is-narrow padded-mobile">
     <div aria-hidden="true" class="ad ad-container ad-wrapper desktop-only karma-ad" data-dimensions="300x600;300x250" data-lazy-scroll="true" data-tier="1" id="div-gpt-square-flex-1" role="complementary">
     </div>
     <div class="component feed clearfix" data-endpoint="/element-api/content-proxy/documents" data-native_ad="%7B%22dimensions%22%3A%22484x100%22%2C%22placement%22%3A%22columns%22%2C%22priority%22%3A6%7D" data-nativekey="section-columns" data-partial="list-item" data-request-data="%7B%22count%22%3A4%2C%22crops%22%3A%22thumbnail%2Cmarquee_large_2x%2Capp_list_thumbnail_2x%22%2C%22page%22%3A0%2C%22types%22%3A%22post%2Cgallery%22%7D" data-title="Most Popular Stories" data-type="feed">
      <h3 class="subtitle">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
     </div>
    </section>
   </div>
   <div aria-hidden="true" class="ad ad-container ad-wrapper type-300x250 instream-ad mobile-ad karma-ad" data-dimensions="300x250" data-lazy-scroll="true" data-tier="1" id="div-gpt-mob-square-flex-1" role="complementary">
   </div>
   <div aria-hidden="true" class="ad ad-container ad-wrapper type-728x90 instream-ad desktop-ad tablet-ad karma-ad" data-dimensions="728x90" data-lazy-scroll="true" data-tier="1" id="div-gpt-leaderboard-fixed-1" role="complementary">
   </div>
  </main>
  <div aria-hidden="true" class="ad ad-container ad-wrapper type-gum-gum desktop-ad tablet-ad karma-ad" data-dimensions="1x6" data-tier="1" id="div-gpt-related" role="complementary">
  </div>
  <div class="above-footer">
   <div class="component subscribe-callout media">
    <div class="media-img">
     <div class="component lazy-image evergreen-cover skip-imagesvc " data-alt="" data-shop-image="false" data-src="//subscription-assets.timeinc.com/current/1850_top2_205_thumb.jpg" data-title="">
      <noscript>
       <div class="inner-container">
       </div>
      </noscript>
      <div class="inner-container js-inner-container ">
      </div>
     </div>
     <div class="component lazy-image latest-cover skip-imagesvc " data-alt="" data-shop-image="false" data-src="//subscription-assets.timeinc.com/current/1850_top1_205_thumb.jpg" data-title="">
      <noscript>
       <div class="inner-container">
       </div>
      </noscript>
      <div class="inner-container js-inner-container ">
      </div>
     </div>
    </div>
    <div class="media-body">
     <div class="partial tout">
      <div class="tout-content-wrapper">
       <h3>
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <div class="tout-content">
        Subscribe today and save up to 84% off the cover price.
       </div>
      </div>
      <div class="button-style">
       [ahref]
       
      </div>
     </div>
    </div>
   </div>
   <div class="component newsletter-callout ">
    <div class="component lazy-image " data-alt="" data-shop-image="false" data-src="https://timedotcom.files.wordpress.com/2017/09/time-newsletter-tout-footer.png" data-title="">
     <noscript>
      <div class="inner-container">
      </div>
     </noscript>
     <div class="inner-container js-inner-container ">
     </div>
    </div>
    <div class="partial tout">
     <div class="tout-content-wrapper">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="tout-content">
       Sign up to receive the top stories you need to know now on politics, health, money and more
      </div>
     </div>
     <div class="button-style">
      [ahref]
      
     </div>
    </div>
   </div>
  </div>
  <footer class="main padding-24-top ">
   <div class="logo-container margin-0-auto">
    [ahref]
    
   </div>
   <div class="social-container margin-0-auto padding-24-tb display-flex rule-bottom" data-tracking-zone="footer">
    <span class="icon icon-facebook-circle-stroke social-stroke-icon color-accent margin-4-right">
     <li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
    </span>
    <span class="icon icon-instagram-circle-stroke social-stroke-icon color-accent margin-4-right">
     [link]
     
    </span>
    <span class="icon icon-twitter-circle-stroke social-stroke-icon color-accent margin-4-right">
     <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
    </span>
    <span class="icon icon-pinterest-circle-stroke social-stroke-icon color-accent margin-4-right">
     [ahref]
     
    </span>
   </div>
   <nav aria-label="Footer Navigation" class="footer-links margin-0-auto padding-16-tb rule-bottom" data-tracking-zone="footer">
    <section>
     [ahref]
     
     <ul class="margin-8-top">
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       <a href="/section/tech/">
        Tech
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </section>
    <section>
     [ahref]
     
     <ul class="margin-8-top">
      <li>
       [link]
       
      </li>
      <li>
       <a href="/section/newsfeed/">
        Newsfeed
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </section>
    <section>
     [ahref]
     
     <ul class="margin-8-top">
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </section>
    <section>
     [link]
     
     <ul class="margin-8-top">
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [search]
       
      </li>
      <li>
       <a href="/cgi-bin/mail/dnp/terms_of_service.cgi/time">
        Terms of Use
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </section>
   </nav>
   <div class="footer-legal padding-16-tb text-align-center">
    ©
    You.com USA, LLC, d/b/a TIME. All Rights Reserved. Use of this site constitutes acceptance of our
    [link]
    
    and
    <a href="/storefront/privacy/time/generic_privacy_new.html?dnp-source=E">
     Privacy Policy
    </a>
    (
    <a href="/storefront/privacy/time/generic_privacy_new.html?dnp-source=B#california">
     Your California Privacy Rights
    </a>
    ).
    <br/>
    TIME may receive compensation for some links to products and services on this website. Offers may be subject to change without notice. |
    [link]
    
   </div>
  </footer>
  <div id="page-segment-values">
   <div class="keyvals" data-affiliate_link_count="0" data-content_author_name="" data-content_cms_category="" data-content_cms_id="430967132" data-content_cms_sub_category="" data-content_cms_tags="" data-content_cms_terms="" data-content_featured_image="" data-content_headline="the boss" data-content_is_post="index" data-content_modified_date="" data-content_nlp_categories="" data-content_nlp_entities="" data-content_nlp_payload="" data-content_nlp_sentiment_label="" data-content_nlp_sentiment_magnitude="" data-content_nlp_sentiment_score="" data-content_published_date="" data-content_shown_on_platform="own" data-content_syndicated="false" data-content_syndicated_brand="" data-content_syndicated_url="" data-content_type="section" data-path="/tag/the-boss/" data-referrer="" data-search="" data-time_inc_application="front end" data-time_inc_brand="time.com" data-title="the boss">
   </div>
  </div>
  <div data-brand-async="lead-gen,promotional-banner,magazine-carousel" data-brand-sync="" data-core-async="video,feed,gallery,gallery-test,docked-sharebar,gallery-view-all,gallery-everything-in,dropdown,autofill-content-container,expander,outbrain,newsletter-signup-modal,vertical-gallery,search-results-form,embed-playbuzz,pinterest-board,pinterest-pin,topic-sub-nav,embed-facebook,embed-instagram,embed-twitter,build-a-meal,ecommerce-hub,content-loader,before-after,burst-text,bucket,progress-bar,amazon-price,image-zoom,embed-apester,glossary-header,embed-omnivirt,map-overlay,tabs,recirculation,share-new,circular-countdown,auto-advance,navigation-test,footer-test,topics-carousel,category-page-videos,category-page-list,recipe-ratings,ugc-reviews,recipe-reviews,recipe-ingredients-new,recipe-instructions-new,print-preview" data-core-sync="navigation,lazy-image,overlay,popup,line-clamp,gdpr,atg,auth" id="site-components">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0245
  </b>
 </body>
</html>
