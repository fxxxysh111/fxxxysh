--->|SSBzdGF5ZWQgdW50aWwgSSBzbmFwcGVkIGFuZCBpdCBmZWx0IGxpa2UgbGVhdmluZyBhbiBhYnVzaXZlIHJlbGF0aW9uc2hpcCB0byBhIGRlZ3JlZS4gClNwZWNpYWxseSwgcGxheWluZyBjYXJkcyBhcmUgdGhlIG1hdHRlciBvZiBhdHRyYWN0aW9uIG5vd2FkYXlzLiBQZW9wbGUgYXJvdW5kIHRoZSBjb3VudHJ5IGp1c3QgbG92ZSB0byBwbGF5IGNhcmQgZ2FtZXMgdG8gcGFzcyBsZWlzdXJlcy4gClRoYXQgY29zdCBtZSBhYm91dCAkMTAsMDAwLCBzbyB0aGF0IGRlZmluaXRlbHkgc3Vja3MgYSBsb3QuIi4gClN0YXRlIHBvbGljZSBzYWlkIHRoZXkgcmFpZGVkIHRoZSBTdW4gU2t5IFNwYSwgNzcyMCBNYWluIFN0LiwgRm9nZWxzdmlsbGUsIG9uIFR1ZXNkYXkgYWZ0ZXIgYSB3ZWVrc2xvbmcgaW52ZXN0aWdhdGlvbiBpbiB3aGljaCBpbmZvcm1hbnRzIHZpc2l0ZWQgdGhlIHNwYSBhbmQgcGFpZCBmb3Igc2V4LiAKV2hlbiBZb3VyIEh1c2JhbmQncyBIZWFydCBJcyBIYXJkIFRydWUgV29tYW4gQmxvZyBSZXZpdmUgT3VyIEhlYXJ0cyBpb24gYW5kcm9pZCBtb3JlIGhvcml6b250YWwgaW9uIGFuZHJvaWQgbW9yZSB2ZXJ0aWNhbCBpb24gY2hldnJvbiByaWdodCBpb24gaW9zIGJvb2ttYXJrcyBvdXRsaW5lIGlvbiBpb3MgYm9va21hcmtzIGlvbiBpb3MgY2hhdGJ1YmJsZSBvdXRsaW5lIGlvbiBpb3MgY2hhdGJ1YmJsZSBpb24gaW9zIGNsb3VkIGRvd25sb2FkIG91dGxpbmUgaW9uIGlvcyBjbG91ZCBkb3dubG9hZCBpb24gaW9zIHBhcGVycGxhbmUgb3V0bGluZSBpb24gaW9zIHBhcGVycGxhbmUgaW9uIGlvcyBwcmludGVyIG91dGxpbmUgaW9uIGlvcyBwcmludGVyIGlvbiBpb3MgbG9ja2VkIGlvbiBzb2NpYWwgZmFjZWJvb2sgb3V0bGluZSBpb24gc29jaWFsIGZhY2Vib29rIGlvbiBzb2NpYWwgdHdpdHRlciBvdXRsaW5lIGlvbiBzb2NpYWwgdHdpdHRlciBpb24gc29jaWFsIHdoYXRzYXBwIG91dGxpbmUgaW9uIHNvY2lhbCB3aGF0c2FwcCBuZXdzIHByb2ZpbGUgcmVjZWlwdCBjcmVkaXQgY2FyZCBkaWFtb25kMyBidWxsaG9ybiBpb24gaW9zIGxvY2F0aW9uIG91dGxpbmUgSSB3YXMgYSB3aWZlIHdpbGxpbmcgdG8gc3RheSBhbmQga2VlcCBteSB2b3csIG5vIG1hdHRlciB3aGF0LiAKU2VlIGJ1dCB0aGUgZGlmZmVyZW5jZSBpcyB0aGUgY29uZGl0aW9uaW5nIGluIGNoaWxkaG9vZDsgeW91IHN0aWxsIGF0ZSB0aG9zZSBydWJiZXJ5IGZyaWVzIGJlY2F1c2UgeW91IGhhZCBmb25kZXIgbWVtb3JpZXMgb2YgdGhlIHRveSB5b3UgZ290IHdpdGggdGhlIGhhcHB5IG1lYWwgb3IgYW55IG90aGVyIHBvc2l0aXZlIGNvbm5lY3Rpb24gdGhhdCBtaWdodCBoYXZlIGJlZW4gZGVyaXZlZCBmcm9tIFJvbmFsZCdzIGJ1cmdlciBlbXBpcmUuIENvbnRyYXN0ZWQgdG8gdGhlIGluYWJpbGl0eSB0byB3YXRjaCBtb3JlIHRoYW4gb25lIG1vdmllIG9yIGdpdmUgaXQgYSBjaGFuY2UgYmVjYXVzZSBhZ2FpbiBhcyBhIGNoaWxkIHlvdSB3ZXJlIGNvbmRpdGlvbmVkIHRvIG5vdCB0byBsaWtlIGl0LCBtb3JlIGFjY3VyYXRlbHkgdG9sZCBpdCB3YXMgZXZpbC4KSSBiZWxpZXZlIG9uY2UgaGUgaG9va2VkIG1lIGl0IHdhcyBhIHNsb3cgY3Jhc2ggYW5kIGJ1cm4gZnJvbSB0aGVyZS4gCkl0IGEgbG90IGVhc2llciB0aGFuIHlvdSB0aGluay4gClRoZSBBbWVyaWNhbiBlbGVjdG9yYXRlIGhhZCBhIGNob2ljZSBhbmQgaXQgaGFzIGV4ZXJjaXNlZCBpdC4gCktlbGx5IGV4IGdpcmxmcmllbmQgc2F5cyBoZXIgZGF1Z2h0ZXIgd2FzIGJlYXRlblRoZSBHYXlsZSBLaW5nIEludGVydmlldyB3aXRoIFIuIEtlbGx5SnVzc2llIFNtb2xsZXR0IGluZGljdGVkIG9uIDE2IGZlbG9ueSBjb3VudHMgYnkgZ3JhbmQganVyeSJJIHRob3VnaHQgd2Ugd2VyZSBnb2luZyB0byBkaWUiOiBGYW1pbHkgcmVjYWxscyByZXNjdWUgZnJvbSBDb2xvcmFkbyBhdmFsYW5jaGVDb3VsZCBhIGN1cmUgYmUgY2xvc2UgZm9yIHNpY2tsZSBjZWxsIGFuZW1pYT9GZWRzIGludmVzdGlnYXRlIGFsbGVnZWQgcHJpc29uIGNlbGxwaG9uZSB1c2UgYnkgIlBoYXJtYSBCcm8iIE1hcnRpbiBTaGtyZWxpTWljaGFlbCBDb2hlbiBmYWNlcyBhY2N1c2F0aW9ucyBvZiBseWluZyBkdXJpbmcgaGlzIGNvbmdyZXNzaW9uYWwgdGVzdGltb255VGhlIEdheWxlIEtpbmcgSW50ZXJ2aWV3IHdpdGggUi4gS2VsbHkiWW91IGV2ZXIgYmVlbiBpbiBqYWlsLCBHYXlsZT8iIFIuIApJbmZvOiBJIGRvbiByZWFsbHkgaGF2ZSBhIHJvdXRpbmUgb3RoZXJ3aXNlLiAKTm8gbW9yZSBTY2hlZHVsZSA0CkEgR29vZ2xlIGVtcGxveWVlIGFjY3VzZWQgQW5kcm9pZCBjaGllZiBBbmR5IFJ1YmluIG9mIGNvZXJjaW5nIGhlciBpbnRvIHBlcmZvcm1pbmcgb3JhbCBzZXggaW4gYSBob3RlbCByb29tIGluIDIwMTMsIHRoZSBOZXcgWW9yayBUaW1lcyByZXBvcnRlZCBvbiBUaHVyc2RheS4gR29vZ2xlIGludmVzdGlnYXRlZCwgY29uY2x1ZGVkIGhlciBjbGFpbSB3YXMgY3JlZGlibGUsIGFuZCBhc2tlZCBSdWJpbiB0byByZXNpZ24uIApHcmVhdGVyIHBhcml0eS4gV2l0aCB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSBzYWxhcnkgY2FwLCBkeW5hc3RpZXMgYXJlIGEgdGhpbmcgb2YgdGhlIHBhc3QuIEJlZm9yZSB0aGUgY2FwIGVyYSwgYSBzdWNjZXNzZnVsIGxhcmdlIG1hcmtldCB0ZWFtIHdhcyBhYmxlIHRvIHN0b2NrIHVwIG9uIHBsYXllcnMgaW4gYSB3YXkgdGhhdCBsZXNzIHN1Y2Nlc3NmdWwgLyBzbWFsbCBtYXJrZXQgdGVhbXMgY291bGRuIGFmZm9yZC4gCkMgdW5lIFRlY2huaXF1ZSBkdSB0b3VjaGVyIHRvbm5hbW1lbnQgc2ltcGxlLiBMYSB2aWUgY29tbWVuY2UgIGxhIGNvbmNlcHRpb24sIGxvcnNxdWUgbGEgcHJlbWlyZSBjZWxsdWxlIGVzdCBmb3JtZS4gCkxhZHk1MTQgdQpObyBzcG9pbGVycyB3aXRob3V0IGEgd2FybmluZy4gU3BvaWxlcnMgaW5jbHVkZSwgYW5kIGFyZSBub3QgbGltaXRlZCB0bywgcmV2ZWFsaW5nIHNvbWV0aGluZyBhYm91dCB0aGUgcGxvdCBsYXRlIGluIHRoZSBnYW1lIG9yIGV4cGxhaW5pbmcgYW4gaW1wb3J0YW50IHBsb3QgcG9pbnQuIFRoaXMgZ29lcyBmb3IgYm90aCBjb21tZW50cyBhbmQgcG9zdHMuIAoiQW5kIGhhZCBzb21lIG9mIHRoZSBncmVhdGVzdCBjcmVhdGl2aXR5IGV4cGVyaWVuY2VkIGZyaWVuZHNoaXAsIGZhbWlseSwgaGVhcnRicmVhaywgYmFiaWVzLCBldmVyeXRoaW5nIHRvZ2V0aGVyLiAKVGhleSBhbHNvIGFsbG93IHBsYXllcnMgdG8gYnJ1c2ggdXAgb24gdGhlaXIgc2tpbGxzLCB3aGlsZWNvbXBldGluZyBhZ2FpbnN0IHBva2VyIGVudGh1c2lhc3RzIGZyb20gYWxsIG92ZXIgdGhlIHdvcmxkLiAKRHViYmVkIHRoZSBFZmZlY3Qgd2hhdCBtYWRlIHRoZSB3aW4gYW1hemluZyB3YXMgdGhhdCBpdCB3YXMgdGhlIGZpcnN0IHRpbWUgdGhlIGFtYXRldXIgcGxheWVyIHdhcyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBiaWdnZXN0LCBvbGRlc3QgYW5kIGJlc3Qga25vd24gcG9rZXIgY2hhbXBpb25zaGlwIGluIHRoZSB3b3JsZCwgYW5kIHRoYXQgaGUgZ290IGluIGFmdGVyIHdpbm5pbmcgYSAkMzkgc2F0ZWxsaXRlIHRvdXJuYW1lbnQgKGhlIGRpZG4gaGF2ZSB0byBzaGVsbCBvdXQgdGhlICQxMCwwMDAgYnV5IGluIG9yIGVudHJ5IGZlZSkuLiAKTmF3YXogU2hhcmlmLCB0aGUgUE1MIE4gbGVhZGVyLCBzYWlkIGFmdGVyIGEgUFBQIGRlbGVnYXRpb24gYXBwcm9hY2hlZCBoaW0gZm9yIHN1cHBvcnQ6ICJJdCBoYWQgYmVlbiBhZ3JlZWQgdGhhdCB3aGVuIE11c2hhcnJhZiB3b3VsZCByZXNpZ24gb3IgZ2V0IGltcGVhY2hlZCwganVkZ2VzIHdlcmUgdG8gYmUgcmVpbnN0YXRlZCBhdXRvbWF0aWNhbGx5IHdpdGhpbiAyNCBob3Vycy4KTGVjdGVyciAgMSBwb2ludCAgc3VibWl0dGVkIDE3IGRheXMgYWdvCkl0IGluIHRoZSBPdXRyaWdnZXIgaG90ZWwgYWJvdmUgRHVrZSBIZXJlIGFyZSBhIGZldyBwaWNzIEkgdG9vayBmcm9tIHRoZSByZXN0YXVyYW50LiBUaGUgdmlld3MgYXJlIGFic29sdXRlbHkgaW5jcmVkaWJsZSEgVGhleSBvcGVuIGF0IDY6MzBhbSwgc28gSSBnbyBhcyBzb29uIGFzIHRoZXkgb3BlbiB0byB3YXRjaCB0aGUgc3VucmlzZS4gCkkgZG9uJ3QgdXNlIEJCIGNyZWFtcyBzbyBJIGNhbid0IHJlY29tbWVuZCBhbnl0aGluZywgYnV0IEkndmUgYmVlbiB1c2luZyB0aGUgVGhlIFNhZW0gVGlwIGNvbmNlYWxlciB0byBjb3ZlciBteSBmYWNpYWwgZWN6ZW1hLiAKV2UgYXJlIGZseWluZyBpbnRvIEtleSBXZXN0IEFpcnBvcnQgYW5kIGxvb2tpbmcgZm9yIGFuIGFmZm9yZGFibGUgdHJhbnNwb3J0IGZyb20gYWlycG9ydCB0byBtb3RlbCwgdGhpcyBpcyBvdXIgZmlyc3QgdGltZSB0byBLZXkgV2VzdCBhbmQgc2V2ZXJhbCBmcmllbmQgaGF2ZSBzYWlkIHlvdSByZWFsbHkgZG8gbm90IG5lZWQgdG8gcmVudCBhIGNhci4gCkFuIGV4Y2VwdGlvbiBpcyB3aXRoIHN3ZWF0IGdsYW5kcyB3aGljaCByZWNlaXZlIHN5bXBhdGhldGljIGlubmVydmF0aW9uIGJ1dCBoYXZlIG11c2NhcmluaWMgYWNldHlsY2hvbGluZSByZWNlcHRvcnMgd2hpY2ggYXJlIG5vcm1hbGx5IGNoYXJhY3RlcmlzdGljIG9mIFBOUy4gCklmIHdlIGFjdHVhbGx5IGhhZCBkaXZlcnNlIHJlcHJlc2VudGF0aW9uLCB3ZSB3b3VsZCBoYXZlIG1vcmUgcGFydGllcyBhbmQgdm90ZXJzIHdvdWxkIGJlIGJldHRlciByZXByZXNlbnRlZCBieSBjYW5kaWRhdGVzIHdobyBtb3JlIGNsb3NlbHkgbWF0Y2ggdGhlaXIgdmlld3MuIEluc3RlYWQsIHdlIGhhdmUgYW4gYWJzb2x1dGUgc2hpdHNob3cgb2YgY29tcG91bmRlZCBnZW9ncmFwaGljIHJlcHJlc2VudGF0aW9uIHRoYXQgZW5zdXJlcyB0aGF0IHRoZSB2YXN0IG1ham9yaXR5IG9mIHZvdGVycyBhcmUgcmVwcmVzZW50ZWQgYnkgc29tZW9uZSB3aG8gdGhleSBkaXNhZ3JlZSB3aXRoIGZ1bmRhbWVudGFsbHkuLiAKVGhlIHBsYXllciBoYW5kbGluZyB0aGUgaGlnaGVzdCBwYWlyIHdpbnMgOiBhbiBoYW5kIGxpa2UgQUE1NUsgd2lsbCB3aW4gYWdhaW5zdCAgS0tRUUEuIFRoZSBzYW1lIGlmIHBsYXllciBvbmUgaGFzIDIsMixLLEssNyBhbmQgcGxheWVyIHR3byBoYXMgMiwyLEosSixLIHBsYXllciBvbmUgd291bGQgd2luIGJlY2F1c2UgaGlzIENvd2JveXMocGFpciBvZiBLaW5ncykgYmVhdHMgcGxheWVyIHR3bydzIEZpc2hpbmcgSG9va3MoSmFja3MpLiBMZXRzIHNheSBQbGF5ZXIgb25lIGhhcyAyLDIsNSw1LDggYW5kIHBsYXllciB0d28gaGFzIDIsMiw1LDUsSi4gClN0LiwgRWx5cmlhLCBhdCA0MTQ5IEJlbGxlIEF2ZS4sIHN0YXRlcyBzaGl2ZXJlZCBoaSB0aGUgY29sZC4gSW4gU2FuIEZyYW5jaXNjbywgYSBoaWdoIG9mIDc0JyB3YXMgcmVjb3JkZWQsIGdpdmluZyB0aGUgYXJlYSBJdHMgd2FybWVzdCBSaXZlciBiZWdhbiByZWNlZGluZyBmcm9tIGl0cyBmbG9vZCBkZXB0aCB3aGljaCdjaGFzZWQgbWFueSBsb3dsYW5kIGR3ZWxsZXJzIGZyb20gdGhlaXIgaG9tZXMgYW5kIGxlZnQgcmFuY2hlcyBpc29sYXRlZCBvbiBhIGlzbGFuZC4gCllvdSBkb24gc3RhdGVtZW50cyBsaWtlICJzaG91bGQgaGF2ZSBiZWVuIGFibGUgdG8gZG8gbW9yZS4iIGNvbWUgZnJvbSBhIHBsYWNlIG9mIGlnbm9yYW5jZS4gWW91IGF0dGVtcHRpbmcgdG8gc291bmQgZWR1Y2F0ZWQgb24gc29tZXRoaW5nIHlvdSBxdWl0ZSBwYXRlbnRseSBhcmVuIEl0IGxpa2UgdHJ5aW5nIHRvIHRlbGwgYSBjaXR5IHBsYW5uZXIgaG93IHRvIGRlc2lnbiB0aGUgaW5mcmFzdHJ1Y3R1cmUgb2YgYSBjaXR5IHdoZW4geW91IGF0IGJlc3QsIHBsYXllZCBTaW0gQ2l0eS4gClByaXZhdGVseSBvd25lZCBhbmQgb3BlcmF0ZWQgc2luY2UgMTk0NiwgdGhlIEFsaXNhbCBpcyBhIHdvcmtpbmcgY2F0dGxlIHJhbmNoIGFuZCBmdWxsIHNlcnZpY2UgcmVzb3J0LiAKSSBuZXZlciB3YW50ZWQgdG8gYmUgaGVyLiAKSXQgbG9va3MgbGlrZSB0aGUgbGFzdCBiaXQgb2YgY3VycmVuY3kgd2FzIHNxdWVlemVkIG91dCBvZiB0aGlzIG9sZCBidWlsZGluZywgcGVyZm9ybWFuY2VzIGJlaW5nIGdpdmVuIHJpZ2h0IHRvIHRoZSB2ZXJ5IGVuZCB3aGlsZSBmb3VuZGF0aW9ucyBmb3IgdGhlIG5ldyBidWlsZGluZyB3ZXJlIGJlaW5nIGNvbnN0cnVjdGVkIDI0IGhvdXJzIGEgZGF5LiAKQSBzbWFsbCBidXQgdmVyeSBkZWRpY2F0ZWQgdGVhbSBvZiB2b2x1bnRlZXJzIGdpdmUgdXAgYSBncmVhdCBkZWFsIG9mIHRpbWUgdG8ga2VlcCB0aGUgZ2F0ZXMgdG8gdGhpcyBiaWcgcmFtYmx5IG9sZCBob3VzZSBhbmQgZ2FyZGVuIG9wZW4uIEEgc21hbGwgbW9kZXJhdGlvbiB0ZWFtIG5vdyB3b3JrcyBkaXJlY3RseSB0byB0aGUgQm9hcmQgb2YgTlBMIGFuZCB3ZSBhbGwgZG8gb3VyIGJlc3QgdG8gbGVhdmUgc3BhY2UgZm9yIHRoZSBiZXN0IG9mIHRoZSBzaXRlJ3MgdHJhZGl0aW9uIG9mIHJvYnVzdCBjb252ZXJzYXRpb24uIENvbXBhcmVkIHRvIHdoYXQgd2FzIGFuZCB3YXNuJ3QgT0sgdW5kZXIgdGhlIEJCQywgdGhlIG1vZGVyYXRpb24gcG9saWNpZXMgaGVyZSBhcmUgcHJldHR5IGxpYmVyYWwgYW5kIHdlJ2QgbGlrZSB0byBrZWVwIGl0IHRoYXQgd2F5LiAKUG9zdGVkIGJ5IE1pa2V5T2J2aW91c2x5IGF0IDEwOjAxIEFNIG9uIEphbnVhcnkgMSwgMjAxMyBbNCBmYXZvcml0ZXNdClRoZSBiZXR0ZXIgb3B0aW9uIGlzIHRvIGVsZWN0IGxlYWRlcnMgdGhhdCBkb24gcGFuZGVyIHRvIEZveCBOZXdzICAgaWYgbm8gbW9yZSBwb2xpdGljaWFucyB3ZW50IG9uIHRoZSBzaG93cywgaWYgdGhleSBjb3VsZG4gZ2V0IGFjY2VzcyB0byBwcmVzcyBjb25mZXJlbmNlcyAgIHRoZXkgbG9zZSBjcmVkaWJpbGl0eSBhbmQgdmlld2VycyBhbmQgZHdpbmRsZSBhd2F5LCBvciBiZSBzZWVuIGFzIGFuIG9waW5pb24gdnMgbmV3cy4gVGhhdCBpc24gaGFwcGVuaW5nLiBUaGV5IGNvbnRpbnVhbGx5IHJlZmVyZW5jZWQgYW5kIGhhdmUgZ3Vlc3RzIGFuZCBhcmUgZ2l2ZW4gdGhlIHNhbWUgcmlnaHRzIGFzIG5ld3Mgc291cmNlcy4gUmVtb3ZlIGNyZWRpYmlsaXR5IGFuZCBzdG9wIGNpdGluZyB0aGVtLCBzdG9wIGNhbGxpbmcgdGhlbSBuZXdzLCBhbmQgdGhleSBzdG9wIGJlaW5nIHRha2VuIGFzIGZhY3QuCiJJIHdhbnRlZCB0byBqdXN0IGhhdmUgaGltIGNsZWFyIGhpbXNlbGYuIApJdCBodWdlIHdpZGUgb3BlbiB3aXRoIG5vIHdoZXJlIHJlbW90ZWx5IHRvIHRha2UgZ29vZCBmaWdodHMgb3V0c2lkZSBvZiB0aGUgM3Jkcy4gSSBwbGF5ZWQgYSA0MCBtaW51dGUgZ2FtZSBQdlQgaW4gbG90diB3aGVyZSBpdCB3YXMgbWFzcyBjYXJyaWVyIHZzIG1hc3MgdGhvciBiZWNhdXNlIGVpdGhlciBvZiB1cyBjb3VsZG4gcHJlc3N1cmUgb3RoZXJzIGJhc2VzIGJlY2F1c2UgaXQgd2FzIGEgbWlsZSBiZXR3ZWVuIHRoZW0uT29ncmF5SmluIEFpciBHcmVlbiBXaW5ncyAxIHBvaW50ICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ29ZZWFoIG1vc3Qgb2YgdGhlIHN0dWZmIEkgY29tcGxhaW5pbmcgYWJvdXQgaXMgSE9UUy9XaW5ncyBwcm9ibGVtcy4gCkFsbCBvZiBhIHN1ZGRlbiB5b3UgYXJlIHdlYXJpbmcgbWVnZ2luZ3MgYXQgdGhlIEd5bSB3aXRob3V0IGEgc2Vjb25kIHRob3VnaHQgeWVhcnMgbGF0ZXIuLiAKTGlwb3NsaW0gaXMgYSBicmVha3Rocm91Z2ggdG9waWNhbCB0cmVhdG1lbnQgd2hpY2ggaXMgY2xpbmljYWxseSBwcm92ZW4gdG8gcmVkdWNlIGNlbGx1bGl0ZSBhcHBlYXJhbmNlIGluIGFzIGxpdHRsZSBhcyAxMCBtaW51dGVzLCB3aGlsc3QgcGVyZm9ybWluZyBhIGRlZXBlciwgcHJvZ3Jlc3NpdmUgc21vb3RoaW5nIGFjdGlvbiB3aGljaCByZWR1Y2VzIGNlbGx1bGl0ZSBhcHBlYXJhbmNlIGxvbmcgdGVybSwgYW5kIHZpc2libHkgc2xpbXMgYm9keSBjb250b3Vycy4KQWFyYW55YSBrYWFuZGFtIDUuMSBtb3ZpZSBmcmVlIGRvd25sb2FkZ29sa2VzIFZBIENocmlzdG1hcyBDaGlsbCBPdXQuIEluY2FyY2F0IGRlIEFjY2VzYXJpIDExMDkgRGF0YSAzMC4xMC4xMCBNYXJpbWUgNS4xIE1CIEJyb3dzZXJ1bCB0YXUgbnUgc3Vwb3J0YSBIVE1MNS4gClNvbiB3YXMgd3JpdHRlbiBhYm91dCBoaXMgZXhwZXJpZW5jZSB0aGVyZS4gRm9nZXJ0eSByZWNlaXZlZCBhIGRyYWZ0IG5vdGljZSBhbmQgc2VydmVkIG91ciBjb3VudHJ5IGR1cmluZyB0aGUgVmlldG5hbSBXYXIuIApBcyBzb21lb25lIHdobyBub3cgbGl2ZXMvd29ya3MgaW4gRXVyb3BlIHRoaXMgc2VudGltZW50IGJ1bXMgbWUgb3V0IGJlY2F1c2UgKGF0IGxlYXN0IG9uIG15IHBhcnQpIGl0IGhvbmVzdGx5IG5vdCAiZmFrZSIuIEkgZ2VudWluZWx5IHdhbnQgdG8gbG9vayBhZnRlciB5b3VyIHdlbGwgYmVpbmcgaW4gYW5kIG91dHNpZGUgdGhlIHdvcmtwbGFjZSBidXQgaXQgYSB0d28gd2F5IHN0cmVldC4gTWFqb3JpdHkgb2YgbXkgY293b3JrZXJzIGFyZSBGcmVuY2ggYW5kIHRoZWlyIGFwcHJvYWNoIHRvIHdvcmsgaXMgc28gZGFtbiBjeW5pY2FsIGF0IHRpbWVzIHRoYXQgaXQgZHJpdmVzIG1lIGNyYXp5LgpGb3IgaW5zdGFuY2UsIHdoZW4geW91IGFyZSBpbiBhIHN0cmVzc2Z1bCBzaXR1YXRpb24gICBvciBldmVuIHdoZW4geW91IGFyZSBqdXN0IHRoaW5raW5nIGFib3V0IG9uZSAgIHlvdXIgaGVhcnQgcmF0ZSB0ZW5kcyB0byBzcGVlZCB1cCwgeW91ciBicmVhdGhpbmcgcXVpY2tlbnMsIHlvdXIgYmxvb2QgcHJlc3N1cmUgaW5jcmVhc2VzLCBhbmQgeW91ciBtdXNjbGVzIHRlbnNlIHVwLiBDb252ZXJzZWx5LCBieSBzaGlmdGluZyB5b3VyIHRob3VnaHRzIHRvIGNhbG1pbmcgc2NlbmVzIG9yIHNpdHVhdGlvbnMgb3IgYnkgY29uc2Npb3VzbHkgdGFraW5nIHNsb3csIGRlZXAgYnJlYXRocywgeW91IGNhbiBzbG93IHlvdXIgaGVhcnQgcmF0ZSwgbG93ZXIgeW91ciBibG9vZCBwcmVzc3VyZSwgYW5kIGVhc2UgbXVzY2xlIHRlbnNpb24uIFRoZSBiaW9mZWVkYmFjayBtYWNoaW5lIG1ha2VzIHRoZXNlIHJlYWN0aW9ucyBlYXNpZXIgdG8gcmVjb2duaXplLiBGb3IgZXhhbXBsZSwgdGhlIG1hY2hpbmUgbWF5IGJlIHNldCB0byBiZWVwIGF0IGV2ZXJ5IGhlYXJ0YmVhdCwgc28geW91IGNhbiBoZWFyIHdoZW4geW91ciBoZWFydCBpcyByYWNpbmcgb3Igd2hlbiBpdCdzIHNsb3dpbmcuClJlcXVlc3RzIGdvIGluIHRoZSBzdGlja2llZCByZXF1ZXN0cyB0aHJlYWQuCkFuZCB5ZXMsIHBlb3BsZSBwYWlkIGEgcHJldHR5IHBlbm55IGZvciBkaXNjcmV0aW9uLiAKQXVmIG1laW5lbSBCbG9nIHNpbmQgUGx1Z2lucyBkZXMgc296aWFsZW4gTmV0endlcmtzIEZhY2Vib29rIGludGVncmllcnQuIApCb3RoIFBhcnR5IFBva2VyIGFuZCBQb2tlclN0YXJzIGhhdmUgY3V0IHRoZW1zZWx2ZXMgb2ZmIGZyb20gcmVhbCBtb25leSBBbWVyaWNhbiBwbGF5ZXJzLCBwYWlkIGV2ZXJ5dGhpbmcgYmFjaywgYW5kIGhhdmUgYmVlbiBvcGVyYXRpbmcgY29tcGxldGVseSBhYm92ZSBib2FyZCwgdW5saWtlIEZ1bGwgVGlsdCB3aGljaCBjcmFzaGVkIGFuZCBidXJuZWQgc3BlY3RhY3VsYXJseS4gSWYgeW91IGNhbiBhY2Nlc3MgZWl0aGVyIG9mIHRoZWlyIHNvZnR3YXJlIGZyb20gdGhlIFVTIHRvIHBsYXkgZm9yIGZyZWUsIEkgd291bGQgYWJzb2x1dGVseSBub3QgdGhpbmsgdHdpY2UgYWJvdXQgaXQuIApBbmQgdGhlIGZpbG0gZG9lcyBldmVudHVhbGx5IG1vdmUgb3V0IGludG8gdGhlIGFjdHVhbCB3b3JsZCwgdW5kZXJzY29yaW5nIHdpdGggaGVhdnkgaGFuZCB0aGUgaG9uZXN0eSAgIHRoZSBodW1ibGUgcmVhbGl0eSAgIG9mIHRoZSBhcmlzdG9jcmF0IGZhcm1lciBMZXZpbiAoRG9taG5hbGwgR2xlZXNvbikgYW5kIGhpcyBjb25uZWN0aW9uIHRvIHRoZSBsYW5kLiBXaGVuIEtpdHR5IGxlYXZlcyBTdC4gUGV0ZXJzYnVyZyB0byB0b2lsIGluIHRoZSBmaWVsZHMgd2l0aCB0aGUgcGVhc2FudHMgYW5kIGhlciBuZXcgaHVzYmFuZCwgeW91IGZlZWwgV3JpZ2h0IGZpbmFsbHkgcmVsYXggaGlzIGdyaXAgYW5kIGxldCBUb2xzdG95J3MgZHJlYW1zIG9mIHV0b3BpYSBzaGluZSB0aHJvdWdoLi4gCk1lZXQgd2FzIE1hcmNoIDkuIFRoZW4gSSB3YXMgZ29pbmcgdG8gZGVsb2FkIGEgd2Vlay4gCkkgZG9uIGV2ZW4ga25vdyBpZiBJIGNhbiBiZSBib3RoZXJlZCB0byB0cnkgbWFrZSB0aGluZ3MgcmlnaHQgYW5kIEkgc28gYW5ub3llZCBiZWNhdXNlIGl0cyBDaHJpc3RtYXMgYW5kIEkgY2FudCBnZXQgYW55IGFwcG9pbnRtZW50cyB3aXRoIGFueW9uZSB0byBnbyBvdmVyIG15IG9wdGlvbnMuIApTdGlsbCBsZWZ0IHN0YW5kaW5nLiBUaGVyZSBhcmVJIGZlZWwgbGlrZSBJIHVzZSB0aGlzIHBocmFzZSBhIGxvdCwgYnV0IGl0J3Mgc28gb2Z0ZW4gYXBwbGljYWJsZSAgIHlvdSBjYW4gcmVhbGx5IGZlZWwgdGhlIGhpc3Rvcnkgd2hlbiB5b3Ugd2FsawpFYWNoIGNoYXJpdHkgdXNlZCB0byBob3N0IGV2ZW50cyBhdCBUcmlwcGVyJ3MsIGEgTGFuc2luZyB2ZW51ZSwgYW5kIHJhaXNlIGJldHdlZW4gJDEyLDAwMCBhbmQgJDE4LDAwMCBwZXIgeWVhci4gCkFsZXJ0OiBMdC4gCkFzIGZvciB0aGUgYmVkcywgY2xvdGhpbmcsIGFuZCBwZXJzb25hbCBpdGVtcyBmb3VuZCBpbiB0aGUgYmFjayByb29tLCBXYW5nIHNheXMgc2hlIHByb3ZpZGVzIGEgbG91bmdlIGZvciBoZXIgd29ya2VycyB0byByZXN0IHVwIGFmdGVyIHRpcmluZyBzaGlmdHMsIG5vdGhpbmcgbW9yZS4gClNjaXJlbWFtbWFubyByZWNlbnRseSBjb21wbGV0ZWQgYSBzZW50ZW5jZSBvZiBwcm9iYXRpb24gZm9yIGEgZmVkZXJhbCByYWNrZXRlZXJpbmcgY29udmljdGlvbiwgYW5kIGlzIGJlbGlldmVkIHRvIGJlIGEgc29sZGllciBvZiB0aGUgQm9ubmFubyBjcmltZSBmYW1pbHkuClRoZSBzdGFmZiBpcyByZWFsbHkgaGVscGZ1bCB0aGVyZSwgc28gSSBhbSBjb25maWRlbnQgdGhleSBjYW4gaGVscCB5b3UuIElmIHRoZSBjYWxsIHdvdWxkbiB3b3JrIG91dCBkdWUgdG8gbGFuZ3VhZ2UgZGlmZmljdWx0aWVzLCB5b3UgY2FuIHN0aWxsIGdvIHdpdGggYW4gZSBtYWlsLiBGaW5nZXJzIGNyb3NzZWQuMCB2b3Rlcy4gCldoZW4gdGhlIHNoaXQgaGl0cyB0aGUgZmFuIGFuZCB0aGUga2lkIGlzIGluIHNlcmlvdXMgY3Jpc2lzIGFyZSB5b3UgZ29pbmcgdG8gYmUgdGhlcmU/IFRoZSB0ZWRkeSBiZWFyPyBOb3BlLiBPbmx5IGhpcyBmYW1pbHkgd2lsbCBiZS4uIApOb3csIHlvdSBtYXkgYXNrLCBob3cgY2FuIHlvdSBnZXQgaG9sZCBvZiB0aGlzIGFsbW9zdCBtYWdpY2FsIGZyZWUgcG9rZXIgc29mdHdhcmU/IFdlbGwsIHRoZSBhbnN3ZXIgaXMgYSBzaW1wbGUgb25lLiBBbGwgeW91IGhhdmUgdG8gZG8gaXMgc2VhcmNoIHRoZSBJbnRlcm5ldCBhbmQgZmluZCBvdXQgc29tZSBjcmVkaWJsZSBzaXRlcyB3aGVyZSB5b3UgY2FuIGRvd25sb2FkIHRoaXMgc29mdHdhcmUuIEhvd2V2ZXIsIGRvIGtlZXAgaW4gbWluZCBub3QgdG8gcGF5IGV2ZW4gYSBzaW5nbGUgcGVubnkgZm9yIHRoaXMgZnJlZSBzb2Z0d2FyZS4gTmV2ZXJ0aGVsZXNzLCB5b3Ugd2lsbCBjb21lIGFjcm9zcyBzb21lIHdlYnNpdGVzIHRoYXQgd2lsbCBiZSBhc2tpbmcgZm9yIHNvbWUga2luZCBvZiBjaGFyZ2VzIHRoYXQgd291bGQgc291bmQgbG9naWNhbCB0byB5b3UgYnV0IHlvdSBkbyBub3QgaGF2ZSB0byBwYXkgZm9yIGZyZWUgc29mdHdhcmUuClRoYXQgbW9tZW50IHdoZW4gb2xkIERhdmlkIHNlZXMgeW91bmcgS2VpdGggd2FzIHdoYXQgZGlkIGl0IGluIGZvciBtZS4gSSBjb21wbGV0ZWx5IGxvc3QgaXQuCiJJIHRoaW5rIHNoZSBqdXN0IGFzc3VtZWQgdGhhdCB0aGV5IHdlcmUgZXZhY3VhdGluZyBoZXIgYW5kIHRoYXQgc2hlIHdvdWxkIGV2ZW50dWFsbHkgZ28gYmFjayB0byB0aGUgaG91c2UgYnV0IHdpdGhpbiBmaXZlIGhvdXJzIHNoZSBnb3Qgbm90aWZpY2F0aW9uIHRoYXQgaGVyIGhvdXNlIGhhZCBidXJuZWQgZG93biB0byB0aGUgZ3JvdW5kLiIKVGhlIG90aGVycyBoYXZlIGdyb3duIGNvbXBsYWNlbnQsIHRoZXkndmUgYWNjZXB0ZWQgdGhhdCB0aGVyZSB3aWxsIGJlIG5vIGVzY2FwaW5nIHRoaXMgaGVsbC4gVGFiaXRoYSBhbmQgSSBhcmUgZGlmZmVyZW50LCB3ZSB3YW50IG91dC4gClRoZXJlJ3Mgbm8gd2F5IHRvIG1hcmsgdGhlIGNhcmRzIGluIHZpZGVvIHBva2VyLCBvciBzbGlwIGEgbWFnbmV0aWMgYmFsbCBpbnRvIHRoZSByb3VsZXR0ZSB3aGVlbC4gClRoZSBqaWcgaXMgdXAgeW91ciBnb2luZyB0byBnZXRzIHRoZXNlIGNyeXRvcyBmb3IgcGVubmllcyBhZ2FpbiBzb29uLiAKSSB3aWxsIGFkZCB0aGF0IHRoZSBtb20gaXMgZnJvbSBhIHN1cGVyIHJlbGlnaW91cyBmYW1pbHkgYW5kIHRoYXQgdGhlIHJlYXNvbiBzaGUgbWFycmllZCBhIG1hbi4gClRoaXMgaXMgZWZmZWN0aXZlbHkgd2hhdCB0aGV5IGxldCBNaXNsaW1pIGRvIChhbGJlaXQgaGUgZGlkbiB3YW50IHRvIGRvIHRoYXQpLi4gCklmIHRoYXQncyB0aGUgcm91dGUgeW91IHdhbnQgdG8gZ28sIG1heCBvdXQgdGhlIGdvb2QgaGFuZHRyYXBzIChvZ3JlIGFuZCBiZWxsZSBpbiBwYXJ0aWN1bGFyKSwgYW5kIGRyb3AgZXZlbmx5IG1hdGNoZWQgZm9yIHJlZCByZWJvb3QuIFJlZCByZWJvb3QgaW4gcGFydGljdWxhciBpcyBncm9zcyBmb3IgdGhpcyBzdHJhdGVneSBiZWNhdXNlIGlmIHlvdSBoaXQgdGhlbSB3aXRoIGl0IHlvdSBvbmx5IG5lZWQgdG8gd29ycnkgYWJvdXQgc3BlbGxzIGFuZCBtb25zdGVyIGVmZmVjdHMgd2hpY2ggZmVlbCBsZXNzIGRhbmdlcm91cyB0byBtZSByaWdodCBub3cuCk5vYm9keSBsYXVnaGVkLiAKUmVsaWMyMjc5ICA1IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZSBQYW5hbWEgcGFuZG9yYSBib3ggd2FzIG9wZW5lZCBieSBpbnZlc3RpZ2F0aXZlIGpvdXJuYWxpc3QgVW1hciBDaGVlbWEuIEh1bmRyZWRzIG9mIFBha2lzdGFuaXMgaGVsZCBhbmQgY29udGludWUgdG8gaG9sZCBvZmZzaG9yZSBhY2NvdW50cyBpbiBQYW5hbWEuIEludmVzdGlnYXRpb25zIHNob3VsZCBub3QgYmUgbGltaXRlZCB0byBOYXdheiBTaGFyaWYgYWxvbmUuClNvbWVvbmUgbWVudGlvbmVkIGJpdHBheSwgdGhlcmUgYWxzbyBjb2luYmFzZSBwbHVnaW4gYW5kIGEgdmFyaWV0eSBvZiBvdGhlciBzZXJ2aWNlcy4gU29tZSB3aWxsIHRha2UgY3J5cHRvIGFuZCBwYXkgeW91IGNhc2ggYW5kIHRoYXQgbWlnaHQgYmUgYXR0cmFjdGl2ZSBmb3IgaGltLiBCdXQgdGhlIHJlYWxpdHkgaXMgY3J5cHRvIGlzIG1lYW50IHRvIGJlIHVzZWQgd2l0aG91dCBhbiBpbnRlcm1lZGlhcnkuIApUbyBzdHVkeSB0b2dldGhlcjsgdG8gZ2l2ZSBzdXBwb3J0IG9uIHN0dWR5aW5nQ29tcG91bmQgb2YgKGNpcmNsZSksIGFuZCBIaW1hIChodW1hbnMpSSBnb3QgbW9yZSBzZXJpb3VzIGluIHRoZSBzdHVkeWdyYW0gY29tbXVuaXR5IHRoaXMgeWVhci4gQnV0IHNhZGx5LCBhbmQgaXJvbmljYWxseSwgYmVjYXVzZSBvZiBzY2hvb2wsIEkgbmVnbGVjdGVkIG15IHZlcnkgc3R1ZHlncmFtIGFjY291bnQuIApUaGUgdHdvIHdlcmUgcG9raW5nIGFyb3VuZCBuZWFyIHRoZSBzdHJlYW0gaW4gRXJpYydzIGJhY2t5YXJkIHdoZW4gdGhleSAiZ290IGJvcmVkIGFuZCBkZWNpZGVkIHRvIGJ1aWxkIGEgZGFtLiIgVGhlIGJveXMgc3BvdHRlZCB0aGUgYm9uZSBhbmQgdG9vayBpdCBob21lLiBUaGUgIEluc3RpdHV0ZSBvZiBTY2llbmNlIGlkZW50aWZpZWQgdGhlIDEzLDAwMCB5ZWFyIG9sZCBmb3NzaWwgYXMgdGhlIGF4aXMgYm9uZSBmcm9tIGFuIEFtZXJpY2FuIG1hc3RvZG9uLiJJdCB3b3VsZG4ndCBjYXRjaCBvbiBmaXJlIG9yIHBsYXkgdmlkZW8gZ2FtZXMsIHNvIHdlIGdhdmUgaXQgdG8gYW4gYWR1bHQuIi4gCk92ZXJ2aWV3IGZvciBuMWMwClJhbmRvbSB0aG91Z2h0czogUGFuYW1hIGFuZCBvdXIgcG9saXRpY3MKSW4gZmFjdCwgSSdtIGNvbnNpZGVyaW5nIGFuIGFsdW1pbnVtIGNhc2luZyB3aXRoIGEgY2xlYXIgdG9wIHllYWgsIG5vdyBqdXN0IGltYWdpbmUgc2hvd2luZyBvZmYgeW91ciBwcm8gY2FyZHMgYW5kIHBybyBjaGlwcyBiZWZvcmUgeW91IGV2ZW4gZmxpcCB0aGUgbGlkISBNYWtlIHlvdXIgcG9rZXIgcGxheWluZyBmcmllbmRzIGRyb29sIGJlZm9yZSB0aGUgZ2FtZXMgZXZlbmJlZ2luIC4gSSBrbm93IHRoYXQgdGhleSBhbHNvIG1ha2UgImhpZ2ggcm9sbGVyIiBwcm9mZXNzaW9uYWwgcG9rZXIgc2V0cyB0aGF0IGluY2x1ZGUgY2FzaW5vIGRpY2UuIFRoYXQncyBub3QgZm9yIG1lLCBidXQgaXQgbWlnaHQgYmUgZm9yIHlvdS4uIApNeSBwYXJlbnRzIHdlcmUgcmVtYXJrYWJseSBva2F5IHdpdGggaXQgYnV0IEkgaGFkIGEgR0YgYXQgdGhlIHRpbWUgdGhhdCBjb3VsZG4gc3RhbmQgaXQuLiAKQ29uc2lkZXIgaG93IGxhcmdlIHlvdSB3YW50IHlvdXIgcGljdHVyZXMgdG8gYmUgaW4geW91ciBmaW5hbCBjb2xsYWdlLiBUaGUgcGljdHVyZXMgZG8gbm90IG5lZWQgdG8gYmUgdGhlIHNhbWUgc2l6ZSwgbm9yIGRvIHRoZXkgbmVlZCB0byBiZSB0aGUgc2FtZSBzaGFwZS4gClRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCBhIGdpcmwgd2FudGluZyB0aGlzIGFzIHdlbGwuIFRoZXJlIGlzIHNvbWV0aGluZyB3cm9uZyB3aXRoIG1vbXMgZm9yY2luZyBhIHByb2dyYW0gdG8gY2hhbmdlIHNvIHRoZWlyIGRhdWdodGVyIGNhbiBnbyBjYW1waW5nLiBZb3UgY2hvc2VuIHRvIGJlIHNvIHNlbGZpc2ggdGhhdCB5b3Ugd291bGQgcnVpbiBhbiBlbnRpcmUgZHluYW1pYyBqdXN0IHNvIHlvdXIgZGF1Z2h0ZXIgY2FuIGxlYXJuIHRvIGZpc2ggd2l0aCBmcmllbmRzIHNoZSB3b24gZXZlbiBiZSBpbnRlcmVzdGVkIGluIGtlZXBpbmcuIFRoYXQgYnVsbHNoaXQuClRoZSBmaW5hbCBzdHJhdyBmb3IgdGhpcyBndXkgd2FzIHdoZW4gaGUgd2FzIHdvcmtpbmcgYSBtYWNoaW5lIHRoYXQgd2FzIG1ha2luZyBwYXJ0cyB0aGF0IGV2ZXJ5Ym9keSBoYXRlZCB3b3JraW5nIG9uLCBldmVuIG1lLiBUaGUgbWFjaGluZSBwdW1wcyBvdXQgNCBwYXJ0cyBvbmNlIGEgbWludXRlIGFuZCB5b3UgbmVlZCB0byBncmFiIHRoZSBob3QgcGFydHMgYW5kIHNuaXAgdGhlIGVuZHMgd2l0aCB3aXJlIGN1dHRlcnMgd2hpbGUgdGhleSBhcmUgc3RpbGwgaG90IG9yIGl0IHdpbGwgYmVjb21lIGRyYW1hdGljYWxseSBoYXJkZXIgdG8gY3V0LiBTbyB0aGlzIGp1c3QgcmVxdWlyZWQgeW91IHRvIGp1c3Qgc2l0IGJ5IHRoZSBtYWNoaW5lIHRoZSB3aG9sZSBzaGlmdCBhbmQgZG8gaXQsIHByZXR0eSBzaW1wbGUuIApTb21ldGltZXMgSSB3YW50IHRvIHJlbGF4IG9uIHRoZSB3ZWVrZW5kLCBidXQgdGhlbiBhIHNwZWNpYWwgcHJpY2UgcG9wcyB1cCB0byBmbHkgdG8gQmFuZ2tvaywgTWFuaWxhLCBvciBIb25nIEtvbmcgdGhhdCBmb3JjZXMgbWUgdG8gdGFrZSB3ZWVrZW5kIHZhY2F0aW9ucyB0byB0aG9zZSBjaXRpZXMuLiAKTm9yd2VnaWFuIFBlYXJsJ3MgU291dGggUGFjaWZpYyBTcGEsIG9wZXJhdGVkIGJ5IE1hbmRhcmEgU3BhcywgaXMgdGhlIHBlcmZlY3QgcGxhY2UgdG8gdW53aW5kIGFuZCBnZXQgcGFtcGVyZWQuIFRoZSBzcGEgZmVhdHVyZXMgMjAgdHJlYXRtZW50IHJvb21zLCAzIG9mIHdoaWNoIGFyZSBkZXNpZ25lZCBmb3IgY291cGxlcyBhbmQgb2ZmZXJzIGV2ZXJ5dGhpbmcgZnJvbSBtYXNzYWdlcyBhbmQgbWFuaWN1cmVzLCB0byB0ZWV0aCBicmlnaHRlbmluZyBhbmQgQm90b3ghCklmIHlvdSBqdXN0IGRvd25sb2FkaW5nIFNUTHMgZm9yIHByaW50aW5nIGFsbCB5b3UgbmVlZCBpcyBhIHNsaWNlciAobGlrZSBDdXJhKSB0byBjb252ZXJ0IHRoZSAzRCBvYmplY3QgaW50byBhIEdDT0RFIGZpbGUgdGhhdCB0aGUgcHJpbnRlciB1bmRlcnN0YW5kcy4gQWZ0ZXIgdGhhdCBpdCBqdXN0IGRyb3AgaXQgb24gYW4gU0QgY2FyZCwgbG9hZCBpdCB1cCwgYW5kIHNlbGVjdCB0aGUgZmlsZS4gCkhPTEQuIApDbHViRGVyVG90ZW5EaWNodGVuIHUKSXQgbm90IGFib3V0IHRoZW0gdXNpbmcgInJlYWxpc3RpYyIgZ3JhcGhpY3MuIEl0IGFib3V0IGl0IGp1c3QgbG9va2luZyBvbGQuCkFuZCBJIGtuZXcgdGhhdCB0aGlzIHdhcyBhIHNldCB1cCBiZWNhdXNlIHRoaXMgd2FzIHRvbyBjb252ZW5pZW50IGZvciB0aGlzLgpJIHdvbmRlcmVkIHdoYXQgd2FzIGhhcHBlbmluZy4gSXQgdHVybmVkIG91dCB0aGV5IHdlcmUgYWxyZWFkeSBxdWV1aW5nIHRvIGdldCB0aGVpciBvd24gY29waWVzIG9mIHRoZSBib29rIGFuZCBzbyBJIHNwZW50IHRoZSBuZXh0IHRocmVlIG9yIGZvdXIgaG91cnMgc2lnbmluZyBodW5kcmVkcyBvZiBib29rcy4gSXQgd2FzIGEgaHVnZSBwcml2aWxlZ2UgdG8gYmUgaW52aXRlZCB0byBsYXVuY2ggdGhlIGJvb2sgb24gc3VjaCBhbiBpbXBvcnRhbnQgZGF0ZSBpbiB0aGUgS25naXRhbmdhIGNhbGVuZGFyIGFuZCB0byBzZWUgdGhlIHdheSBpbiB3aGljaCBpdCBoYXMgYmVlbiBlbWJyYWNlZCBieSBUYWludWkgaGFzIGJlZW4gYW1hemluZy4gClRoZWlyIE1hcmNoIGNvdWxkIHNlZSBtb3JlIG9mIGl0IG5vdy4gVGhlIGRlZmVuc2l2ZSBsaW5lLiBTb21lIG9mIHRoZSBoZXJvZXMgbGluZSB1cCBvbiBhbm90aGVyIHJvb2Z0b3AuIEdvbGVtLCBWaXN0YSwgYSBnaXJsIGluIG1ldGFsIGFybW9yLgpGb3IgZXhhbXBsZSwgYSBwbGF5ZXIgbWF5IG1ha2UgYXJvdW5kICQxMCBwZXIgMTAwIGhhbmRzIGF0IGEgbG93ZXIgbGltaXQgZ2FtZS4gCkRhdnkgY2FtZSBkb3duc3RhaXJzIHNsb3dseS4gRG9yYSB3YXMgd2FpdGluZyBpbiB0aGUgaGFsbCBmb3IgaGltLCBoYXZpbmcgYmVlbiBtYWRlIHJlYWR5IGJ5IE1ycy4gTHluZGUuIERhdnkgaGFkIGF0dGVuZGVkIHRvIGhpcyBvd24gcHJlcGFyYXRpb25zLiBIZSBoYWQgYSBjZW50IGluIGhpcyBwb2NrZXQgZm9yIHRoZSBTdW5kYXkgU2Nob29sIGNvbGxlY3Rpb24sIGFuZCBhIGZpdmUgY2VudCBwaWVjZSBmb3IgdGhlIGNodXJjaCBjb2xsZWN0aW9uOyBoZSBjYXJyaWVkIGhpcyBCaWJsZSBpbiBvbmUgaGFuZCBhbmQgaGlzIFN1bmRheSBTY2hvb2wgcXVhcnRlcmx5IGluIHRoZSBvdGhlcjsgaGUga25ldyBoaXMgbGVzc29uIGFuZCBoaXMgR29sZGVuIFRleHQgYW5kIGhpcyBjYXRlY2hpc20gcXVlc3Rpb24gcGVyZmVjdGx5LiBIYWQgaGUgbm90IHN0dWRpZWQgdGhlbSAgIHBlcmZvcmNlICAgaW4gTXJzLiBMeW5kZSdzIGtpdGNoZW4sIGFsbCBsYXN0IFN1bmRheSBhZnRlcm5vb24/IERhdnksIHRoZXJlZm9yZSwgc2hvdWxkIGhhdmUgYmVlbiBpbiBhIHBsYWNpZCBmcmFtZSBvZiBtaW5kLiBBcyBhIG1hdHRlciBvZiBmYWN0LCBkZXNwaXRlIHRleHQgYW5kIGNhdGVjaGlzbSwgaGUgd2FzIGlud2FyZGx5IGFzIGEgcmF2ZW5pbmcgd29sZi4KRmVsb255IGFuZCBwcmlzb24gdGltZS4gUHVsbCB0aGUgdHJpZ2dlciB0aGVuIGl0IGxpZmUgaW4gcHJpc29uLiAKUGF1bGluZSBTdG9jayBnYXZlIGFuIHJlYWRpbmcgb2YgYW4gSW5kaWFuIHdlZGRpbmcuIEFsbGVuIE1ycy4gClRoZSBmZXN0aXZhbCBvZmZlcnMgYW4gb3Bwb3J0dW5pdHkgdG8gc3BlYWsgZGlyZWN0bHkgd2l0aCBzb21lIG9mIHRoZSBmaWxtbWFrZXJzIGFuZCB0aGVpciBzdWJqZWN0cywgYXMgd2VsbCBhcyBtb3ZlcnMgYW5kIHNoYWtlcnMgaW4gdGhlIGZpbG0gaW5kdXN0cnkuIAoiV2UgaGF2ZSBhbHdheXMgb3BlcmF0ZWQgaW5kZXBlbmRlbnRseSwgYW5kIEkgdGhpbmsgdGhhdCdzIGJlZW4gb3VyIHN1Y2Nlc3MuIFNoZSBqb2luZWQgQWQgQWdlIGFmdGVyIGEgZG96ZW4geWVhcnMgb2Ygd3JpdGluZyBmb3IgQ3JhaW4ncyBOZXcgWW9yayBCdXNpbmVzcywgd2hlcmUgc2hlIGFsc28gZm9jdXNlZCBvbiB0aGUgcmV0YWlsIGluZHVzdHJ5LiAKTW9yZSBpbXBvcnRhbnRseSwgeW91IGp1c3Qgc2hhcmVkIGEgcmFuZG9tIEFsdEh5cGUgdmlkZW8sIEkgdGhvdWdodCBpdCB3YXMgZmFpciB0byBwb2ludCBvdXQgdGhhdCBoZSBpc24gYW4gZXRobm8gbmF0aW9uYWxpc3QuIApUaGUgZ3JhbmRmYXRoZXIgb2YgdGhlc2UgZ2FtZXMgaXMgV2FyaGFtbWVyLCB3aGljaCBpcyBiYXNlZCBpbiBhIGZhbnRhc3kgd29ybGQgb2Ygb3JjcyBhbmQgZWx2ZXMuIApEYWxlIFZhbiBFcHBzJ3MgT2JpdHVhcnkgYnkgdGhlIFN5cmFjdXNlIFBvc3QgU3RhbmRhcmQKQW5kIGl0IG5vdCBqdXN0IHBlb3BsZSBsaWtlIEVpbGVlbiB3aG8gYXJlIGFmZmVjdGVkLiBUaGUgbHVyZSBvZiBlYXN5IG1vbmV5IGV2ZW4gYnJvdWdodCBkb3duIEJ1bmNvbWJlIENvdW50eSB0b3AgY29wLiAKRGFzIGlzdCBlaW5lIEFuc3BpZWx1bmcgYXVmIGRlbiBTcGl0em5hbWVuIGFsbGVyLCBkaWUgaGllciBpbSBUYWwgd29obmVuLCBuYXRybGljaCBlcmZ1bmRlbiB2b24gZGVuIEhhdXB0c3RkdGVybiB1bmQgaWhyZW4gU2F0ZWxsaXRlbiBhdWYgZGVyIE9zdHNlaXRlLiAKSWYgeW91IGNhbiBzZWUgdGhhdCB0aGUgcGxheWVyIG1hZGUgZmFyIG1vcmUgb3V0IG9mIHRoYXQgdGhlcmUgd2hhdCB3YXMgdGhlcmUgYW5kIGRpdmVkLCB0aGVuIHlvdSBkb24gaGF2ZSBhIGNsdWUgYWJvdXQgdGhhdCBnYW1lIGFuZCBpbiBmYWN0IHJlZ2FyZGxlc3Mgb2YgdGhlIHNwb3J0LCBpdCBpcyBzbyBvYnZpb3VzIHdoYXQgaGFwcGVuZWQgdGhhdCB5b3VyIG9waW5pb25zIGFib3V0IGxpZmUgaW4gZ2VuZXJhbCBzaG91bGRuIGJlIHRha2VuIHNlcmlvdXNseS4gCkl0IHdhcyBjYXB0dXJlZCBvbiB0aGUgQ1ZSIGFuZCBkb2N1bWVudGVkIGluIHRoZSBOVFNCIHJlcG9ydC4uIApJIGRvbiBwbGF5IG9ubGluZSBnYW1lcyBtdWNoIGFueW1vcmUgc2luY2UgSSBoYXZlIGxpdHRsZSBraWRzLiBCdXQgaWYgSSBwbGF5ZWQgd2l0aCBzb21lb25lIG11Y2ggbW9yZSBwcmFjdGljZWQgdGhhbiBtZSwgSSBtYWtlIHN0dXBpZCBtaXN0YWtlcyBtb3JlIHRoYW4gb25jZSB0b28gICBiZWNhdXNlIHlvdSBjYW4ganVzdCAicmVtZW1iZXIiIGluIHRoZXNlIGdhbWVzLCB5b3UgaGF2ZSB0byByZW1lbWJlciB3ZWxsIGVub3VnaCB0byBoYXZlIG11c2NsZSBtZW1vcnkuIApSZW1lbWJlciB3aGF0IEkgd3JvdGUgdXAgdG9wLiBUaGUgU3RhdGVzIGdvYWxzLiAKUHJldHR5IG11Y2ggYW55IHNlYXJjaCBjb250YWluaW5nICJpZ25pdGlvbiBwb2tlciB0cmFja2VyIHR1cm5zIHVwIHRoZSBzYW1lIHJlc3VsdHMgZnJvbSBtdWx0aXBsZSBmb3J1bXMgYXMgd2VsbC4iCkFzIHRoZSBraWQgZ3Jvd3MsIGhpcyBtaW5kIHdpbGwgYmVjb21lIG1vcmUgaW5kZXBlbmRlbnQgYW5kIGhlIHdpbGwgZGVjaWRlIHdoZXRoZXIgb3Igbm90IGhlIGJlbGlldmVzLiBJdCdzIGEgcGVyc29uYWwgY2hvaWNlLiAKQSBoYXQgaXNuJ3QgYSBiYWQgaWRlYSBzbyB5b3UgZG9uJ3QgZ2V0IHlvdXIgZmFjZSBhYnNvbHV0ZWx5IGNvb2tlZC4uIAo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIEEgZmV3IGhvdXJzIGludG8gcGxheWluZyBhbmQgYSBmZXcgdGFibGVzIG92ZXIgZGlhZ29uYWxseSwgc29tZSBkdWRlIGp1bXBzIHVwIHNjcmVhbWluZyB3aXRoIGpveSwgaGUgaGFkIGp1c3Qgd29uIHRoZSBiYWQgYmVhdCBqYWNrcG90IGZvciAkMzVLIChBQSB2cyBLSyBUaGUgZ3V5IEkgYmVlbiB0YWxraW5nIHdpdGggaXMgbGlrZSAiaGV5eXkgdGhhdCBteSBidWRkeSAoaW5zZXJ0IG5hbWUpLiIgVHVybnMgb3V0IHRoZXJlIHdlcmUgNSBvZiB0aGVtIHRoZXJlIGFsbCB0b2dldGhlciwgc28gdGhleSBhbGwgZ28gYW5kIGNvbmdyYXR1bGF0ZSBoaW0gYW5kIHdoYXRub3QuClRoaXMgc3BvdCBpcyBxdWl0ZSBjb21wbGV4IGFzIHRoZXJlIGFyZSBzbyBtYW55IGNvbWJvcyBvZiBib3RoIHZhbHVlIGFuZCBibHVmZnMuIElmIEkgYWJzb2x1dGVseSBoYWQgdG8gYnJlYWsgaXQgZG93biBpbiB0aGUgbW9tZW50LCBJIHdvdWxkIHByb2JhYmx5IGNvbWUgdXAgd2l0aDogQXNLeCgzKSwgQXNUeCgzKSwgUXNLeCgzKSwgUXNUeCgzKSwgSnNLeCgzKSwgYW5kIEpzVHgoMykgZm9yIHZhbHVlIHRoYXQgSWtlIHdvdWxkIHRha2UgdGhpcyBsaW5lIHdpdGggMTAwJSBvZiB0aGUgdGltZS4gClN0ZXZlIE86IFRoZSBKYWNrYXNzIHN0YXIgdW5zdXJwcmlzaW5nbHkgc3RlZXJlZCBmYXIgY2xlYXIgb2YgdGhlIHNvcnQgb2YgdHJpY2tzIHRoYXQgbGFuZGVkIGhpbSBpbiB0aGUgRVIgbGFzdCB3ZWVrLiBZb3UgY291bGRuJ3QgaGVscCBidXQgc21pbGUgZHVyaW5nIGhpcyBmb3ggdHJvdCwgY29uc2lkZXJpbmcgaG93IGhhcHB5IHRoZSBib3d0aWUgc3BvcnRpbmcgZGFyZWRldmlsIHNlZW1lZCB0byBiZSBiYWNrLCBidXQgbWF5YmUgTGFjZXkgU2Nod2ltbWVyIHNob3VsZG4ndCBoYXZlIGdvbmUgc28gZWFzeSBvbiBoaW0gaW4gcmVoZWFyc2FsLiBBIG1hc3NpdmUgZm9vdHdvcmsgZmx1YiByZWFsbHkgdG9vayB0aGUgd2luZCBvdXQgb2YgaGlzIHNhaWxzIGluIHRoZSBkYW5jZSdzIHNlY29uZCBoYWxmLCBhbmQgYm90aCBTdGV2ZSBPIGFuZCBMYWNleSBsb29rZWQgb24gdGhlIHZlcmdlIG9mIHRlYXJzIGFzIHRoZXkgc3Rvb2QgYmVmb3JlIHRoZSBqdWRnZXMgYWxsIGFwcGxhdWRlZCBoaXMgZWZmb3J0IGJ1dCBjb3VsZCBvbmx5IGRvbGUgb3V0IHNvIG1hbnkgcG9pbnRzLi4gClNob3VsZCBZb3UgSGF2ZSBhIFJlZCBTdWl0ZWQgQ29tcGFzcyBTcGlubmVyIGluIGEgUHJvIFBva2VyIFJvb20/Ckl0IG1vcmUgdGhhdCBJIGhhdmUgZ3Jvd24gdXAgaW4gYW4gZW52aXJvbm1lbnQgd2hlcmUgb3BlbiBzZXh1YWxpdHkgaXMgZnJvd25lZCB1cG9uLCBhbmQgSSBoYXZlIGRlY2lkZWQgdG8gbGlmZSBkaWZmZXJlbnRseSBmcm9tIHRoYXQuIFdoYXQgSSB0cnlpbmcgdG8gZmlndXJlIG91dCBpcyBob3cgbXVjaC4gT25lIG5pZ2h0IHN0YW5kcyB3b3VsZG4gcmVhbGx5IGJlIHRvbGVyYXRlZCBieSBjZXJ0YWluIGZyaWVuZCBncm91cHMgb2YgbWluZSBJIHByZXR0eSBzdXJlIGZvciBpbnN0YW5jZSwgc28gSSBkb24gdGFsayBhYm91dCBpdCB0aGVyZSB5ZXQsIGJlY2F1c2UgSSBub3QgMTAwJSBjZXJ0YWluIGlmIG15c2VsZiBkb24gZmluZCBzdWNoIGJlaGF2aW9yIGRlcGxvcmFibGUuIApMZXQncyBsb29rIGF0IENQTSBpbiBtb3JlIGRldGFpbC4KSW1vIGhlIGNvdWxkIGJlIHRoZSBiZXN0IHN1cGVyaGVhdnkgb3ZlciBESyBpbiB0aGUgbG9uZyBydW4sIGFuZCBybiBoZSdzIGF0IGxlYXN0IHRoZSAybmQgYmVzdCBzdXBlcmhlYXZ5LiBIZSBzdGlsbCBnb2VzIGV2ZW4gb3IgZXZlbmlzaCB3aXRoIGFsbCB0aGUgc3dvcmRpZXMgaW1vIChub3QgY291bnRpbmcgb25lcyB3aXRoIHByb2plY3RpbGVzIGxpa2UgdGluaywgeWluaywgcm9iaW4sIGV0Yy4pIGR1ZSB0byBoaXMgY3JhenkgcmFuZ2UgYW5kIGFiaWxpdHkgdG8gY2F0Y2ggbGFuZGluZ3Mgd2hpY2ggaXMgZ3JlYXQgaW4gYSBnYW1lIHdoZXJlIHN3b3JkaWVzIHNlZW0gdG8gYmUgZG9taW5hdGluZy4gSW1vICh0aGVzZSBjYW4gY2VydGFpbmx5IGNoYW5nZSBvdmVyIHRpbWUsIGJ1dCB0aGVzZSBhcmUgbXkgdGhvdWdodHMgYXRtKSBoZSBoYXMgZXZlbiBtdXMgdnMgTWFyY2luYSwgQ29ycmluLCBDbG91ZCwgSWtlLCBhbmQgU2h1bGssIGFuZCBhIHBvc3NpYmx5IGV2ZW4gbXUgdnMgY2hyb20vcm95IGFuZCBMaW5rLiBJIGFsc28gdGhpbmsgaGUgbWlnaHQgZG8gYmV0dGVyIHRoYW4gbW9zdCB2cyBJbmtsaW5nIG9ubHkgbG9zaW5nIHRvIHRoZW0gc2xpZ2h0bHkuIEhlIHN0aWxsIGxvc2VzIHRvIHpvbmVycywgYW1hemluZyBqdWdnbGVycywgcG90ZW50IGVkZ2VndWFyZGVycywgYW5kIGp1c3QgZXh0cmVtZWx5IGZhc3QgY2hhcmFjdGVycywgYnV0IGV2ZW4gaGlzIHdvcnN0IG11cyBhcmUgc3RpbGwgZG9hYmxlLiBPdmVyYWxsLCBoZSdzIG11Y2ggYmV0dGVyIHNvbG8gbWFpbiB3aXNlIHRoYW4gaGUgd2FzIGluIHNtNHNoLCBidXQgc3RpbGwgcmV0YWlucyBoaXMgYWJpbGl0eSB0byBiZSBhbiBhbWF6aW5nIHNlY29uZGFyeSBkdWUgdG8gYmVpbmcgYSBzdXBlciBlYXN5IHRvIGxlYXJuIGNoYXJhY3RlciB0aGF0IGNhbiBiZSB1c2VkIGFzIGEgY291bnRlcnBpY2sgaW4gY2VydGFpbiB0b3AvaGlnaCB0aWVyIG11cy4KSXQgaGFzIHNpbmNlIGJlZW4gZGVsZXRlZCBmb2xsb3dpbmcgdGhlIGVuZCBvZiB0aGUgZ2FtZS4gRHJ1bmsgcmVncmV0cz8gQmFzZWQgb24gdGhpcywgaGVyIG5hbWUgaXMgcHJvYmFibHkgVmFuZXNzaXRhIEFsdmFyZXogb3IgVmFuZXNzYSBBbHZhcmV6LiBDb3VsZG4gZmluZCBhbnl0aGluZyBvbiBoZW5kb25tb2IuIElmIHlvdSBnb29nbGUgdGhhdCBJRyBoYW5kbGUgeW91IHNlZSAxIDIgaW1hZ2VzIG9mIGhlciBwb3AgdXAgYW55d2F5LiBFZGl0OiBoZXJlIGhlciBuZXcgSUcgSSBzdXBwb3NlLiAKV2hlbiBvbmUgb2JzZXJ2ZXMgYW4gb3Bwb25lbnQsIHNvbWV0aW1lcyB0aGV5IHdvdWxkIHJlYWN0IHVua25vd2luZ2x5IG9yIGRvIHNvbWV0aGluZyB0aGF0IGNhbiB0aXAgeW91IG9uIHdoYXQgdGhlIHZhbHVlIG9mIHRoZWlyIGhhbmQgaXMuLiAKSSBkZWNpZGVkIHRvIG5vdCBoYXZlIGNoaWxkcmVuICAgZm9yIGEgbnVtYmVyIG9mIHJlYXNvbnMuIEkgdGhpbmsgeW91ciBxdWVzdGlvbiBzb3VuZHMgbGlrZSBhIHBlcmZlY3RseSBub3JtYWwgdGhvdWdodCB0aGF0IGV2ZW4gcGVvcGxlIHdpdGgga2lkcyB0aGluayBoZXJlIGFuZCB0aGVyZS4gCkhlIHdvbiBhIGxvdC4gWWVhaC4gSG93IG11Y2ggd2FzIGhlIHdpbm5pbmcuIE92ZXIgdGhlIHllYXJzLCBtaWxsaW9ucy4gV2hhdCB3YXMgaXQgbGlrZSB0byBzZWUgYWxsIG9mIHRoZXNlIGhpZ2ggcm9sbGVycywgaW5jcmVkaWJseSBzdWNjZXNzZnVsIHdlYWx0aHkgbWVuIHNpdHRpbmcgYXQgYSB0YWJsZSB3aGVuIHRoZXJlIHdhcyBqdXN0IHRoYXQgbW9uZXkgYXQgc3Rha2UgYW5kIHRoZWlyIGVnbyBhdCBzdGFrZSwgYXMgd2VsbD8gSXQgd2FzIHN0cmVzc2Z1bC4gClNpbG55bG9uIGNhbiBiZSBhIGJpdCBzbGlwcGVyeS4gCldlbGwsIGl0IGhvdyBhIHNvY2lldHkgZnVuY3Rpb25zIGFuZCBob3cgZ292ZXJubWVudCByZWd1bGFyaXplcyBpdCBpbnRlcmZhY2VzIHRvIGJlbmVmaXQgY29tbWVyY2UuIApZZXMsIHF1aXRlIHN0cmlraW5nLiBUaGUgY29udHJvbCBncm91cCBzdGFydGVkIG9mZiB0aGUgc2VtZXN0ZXIgYnkgc2hpdCB0YWxraW5nICJvdGhlciBwZW9wbGUiLiBGcm9tIHRoZSBhcnRpY2xlOgpJbCB5IGEgcXVlbHF1ZXMgam91cnMsIGplIG1lIHN1aXMgZGl0IHF1ZSBjZWxhIG5lIHBvdXZhaXQgcGx1cyBkdXJlciBldCBqJ3RhaXMgaW1wYXRpZW50ZSBkZSBwcnBhcmVyIHVuIHBvdWxldCB0YW5kb29yaS4gSWwgc2UgdHJvdXZlIHF1ZSBkaW1hbmNoZSBtaWRpLCBjcm5lYXUgc291dmVudCBvY2N1cCBwYXIgTW9uc2lldXIsIGMndGFpdCAgbW9uIHRvdXIgZGUgcGFzc2VyIGVuIGN1aXNpbmUuIApUd28gcGFpciB3aWxsIHdpbiwgaW4gVGV4YXMgSG9sZGVtJyBoYW5kcyByYW5raW5nIHR3byBwYWlyIGlzIGhpZ2hlciB0aGFuIHRocmVlIG9mIGEga2luZC4gVGhlIHJldmVyc2UgaXMgZm9yIGFsbCBvdGhlciB0eXBlcyBvZiBwb2tlci4gVGhpcyBpcyBub3QgZXZlbiBjbG9zZSB0byBjb3JyZWN0LCB3aG9ldmVyIHR5cGVkIHRoaXMgaXMgbm90IHNtYXJ0IG9yIHNpbXBseSBkb2VzIG5vdCBrbm93IHBva2VyIHJ1bGVzLiAKQSBjb3VwbGUgaGl0cyBvZiBhY2lkIGFuZCBzb21lIE1ETUEgdHVybnMgbXVzaWMgaW50byBhbiBleHBlcmllbmNlIHRoYXQgY2FuIGFkZXF1YXRlbHkgYmUgZGVzY3JpYmUuIApUaW1lIHRvIGRvIG91ciBob21ld29yayBhbmQgc2hvdyB0aGF0IHRoZSBFbXBvcmVyIE5ldyBDbG90aGVzIG1heSBqdXN0IGJlIHRoZSBzYW1lIG9sIG5lb2xpYmVyYWwgY29uIGpvYiBvZiBtYWtpbmcgdGhlIHJpY2ggcmljaGVyIGd1c3NpZWQgdXAgYXMgcG9wdWxpc3QgcG9saWN5Li4gCkl0IG1heSBiZSB0b28gbGF0ZS4gQnV0IEkgaGF2ZSB3b24uIEJsYWNrLi4gCkJlc3Qgd2VkZGluZyBJJ3ZlIGJlZW4gdG8uIEFsc28gb25lIG9mIHRoZSBsYXJnZXN0IHdlZGRpbmdzLiAKTXkgR0Ygc2lzdGVyIGRpZCBhIHBhcGVyIGN1dCBvZiB3aGF0IGlzIG9idmlvdXNseSBUb20gRHVtb3VsaW4gb24gaGlzIHdheSB0byB3aW5uaW5nIHN0YWdlIDkgaW4gdGhpcyB5ZWFycyBHaXJvLiBTaGUgc2FpZCBzaGUgZGlkbiBrbm93IHdobyBUb20gRHVtb3VsaW4gaXMsIGJ1dCBJIGhhdmluZyBhIGhhcmQgdGltZSBiZWxpZXZpbmcgaGVyLiBJdCBjb3VsZCBwbGF1c2libHkgYmUgc3RhZ2UgMjEgdGhvdWdoLCBub3QgdG9vIHN1cmUuIApIZSBhbHNvIHJldmlzaXRlZCBoaXMgcGFzc2lvbiBmb3Igd29vZCB3b3JraW5nIGFuZCB3aXRoIE1hcmdhcmV0IGxlYXJuZWQgaG93IHRvIHBsYXkgYnJpZGdlLiBXaXRoIGhlYXJ0ZmVsdCBncmF0aXR1ZGUgb3VyIGZhbWlseSB3b3VsZCBsaWtlIHRvIHRoYW5rIHRoZSBmb2xsb3dpbmcgcGVvcGxlLyBmYWNpbGl0aWVzOiBEci4gCkRvd25sb2FkIE1pY3Jvc29mdCBXb3JkIDIwMTAgdG9kYXkhIC4gCkRlc3N1dG9tIGthbiBkdSBWaXNhIHN0IGQgZiByIGRpdHQgdiBubGlnYSBrdmFydGVyIEh1YmJlciBoZWx0IGVua2VsdCBnZW5vbSBhdHQgYm9rbSBya2EgZGVuIGggciBzaWRhbiBlbGxlciBibGFuZCB2aXNzYSBmcmFrdGlvbmVyLCBtIHN0ZSBkdSBrIHBhIHVwcGRyYWcgc29tIG1lZCBmIHJkZWwgZnIgbiBncnVwcGVuLiAKRGlkIHRoaXMgbWFzc2FnZSB0dXJuIGluYXBwcm9wcmlhdGUKWW91IGRvbiBoYXZlIHRvIHRhbGsuIFlvdSBib3RoIGVuZ2FnYWdlZCwgYW5kIHlvdSBhY2tub3dsZWRnZSBlYWNoIG90aGVyIG5vbnZlcmJhbGx5ICAgdG91Y2hlcywgZ2xhbmNlcyBldGMuIFBhdXNlIHRvIHJlYWQgc29tZSBwYXNzYWdlIHlvdSBsaWtlZCB0byBoZXIgb3IgYXNrIHdoYXQgYSB3b3JkIG9yIGN1bHR1cmFsIHJlZmVyZW5jZSBtZWFucy4gCkkgYW0gaW4geW91ciBhZ2UgYnJhY2tldCwgMzQsIGdvdCBteSB2YXNlY3RvbXkgbGl0dGxlIG92ZXIgYSB5ZWFyIGFnby4gRG9jdG9yIHRvb2sgdmVyeSBsaXR0bGUgY29udmluY2luZyBhbmQgd2hhdCBsaXR0bGUgZGlzY3Vzc2lvbiB0aGF0IGRpZCBoYXBwZW5lZCB3YXMgY2VudGVyZWQgYXJvdW5kIGNsYXJpZnlpbmcgdGhhdCBJIGtuZXcgd2hhdCB0aGUgbG9uZyB0ZXJtIGltcGxpY2F0aW9ucyB3ZXJlLiBDb252aW5jaW5nIHRoZSBkb2N0b3IgdG8gYWN0dWFsbHkgZG8gdGhlIHByb2NlZHVyZSB3YXMgYSBub24gaXNzdWUuCk9uY2UgdGhleSBnb3QgaW50byBhIGdyb292ZSBpdCBnb3Qgc28gbXVjaCBiZXR0ZXIuIEkgZW5qb3kgdGhlIG1vcmUgcG9saXRpY3MgaW4gc3BhY2UgYmV0d2VlbiByYWNlcywgcmVhbGx5IGhlbHBlZCB0byBzaG93IGEgc2lkZSBvZiB0aGUgZmVkZXJhdGlvbiB0aGF0IHlvdSBoYWRuIHNlZW4gYmVmb3JlLCBzaW5jZSBiZWZvcmUgdGhhdCB0aGV5IHdlcmUgdGhlIG1hZ2ljYWwgc3BhY2UgY29tbXVuaXN0cyB0aGF0IHdlcmUgdGhlIGlkZWFsIHNvY2lldHkgYW5kIGNvdWxkIGRvIG5vIHdyb25nLiBEUzkgYWxzbyBkaWQgYSBsb3Qgb2Ygc2Vhc29uIGxvbmcgYXJjcyBmb3IgY2hhcmFjdGVycywgYW5kIHRoZSBjaGFyYWN0ZXJzIHJlYWxseSBncmV3IGFsb25nIHdpdGggdGhlIHNob3cuIApKaXJpc2FuIGlzIGdyZWF0IHRvbyAgIHlvdSBmaW5kIGxvdHMgb2Ygd2lkZSBvcGVuIHRyYWlscyBhbmQgYXJlYXMgd2l0aG91dCBzdGFpcnMuIE5hZWphbmdzYW4gYW5kIFNvbmduaXNhbiByZW1pbmRlZCBtZSBhIGJpdCBtb3JlIG9mIEFtZXJpY2FuIHBhcmtzLCB3aXRoIG1vc3RseSBkaXJ0IHBhdGhzIGdvaW5nIHRocm91Z2ggdGhlIGZvcmVzdC4uIApJZiB0aGUgZmxvcCBjb21lcyA0IDYgNywgYm90aCBwbGF5ZXJzIGhhdmUgdGhlIGJlc3QgcG9zc2libGUgbG93IGhhbmQuIFlvdSBtaWdodCByYWlzZSB0aGUgYmV0IGhlcmUsIHRoaW5raW5nIHlvdSBoYXZlIGEgZ29vZCBzaG90IGF0IHRoZSBsb3cgaGFuZC4gCkkgY3JlYXRlZCBhIDIgcGFnZSBkb2N1bWVudCBmb3IgZWFjaCBvZiB0aGVtIHdpdGggdGhpbmdzIEkndmUgYWNjb21wbGlzaGVkIGFuZCBwcm9qZWN0cyB3ZSd2ZSB3b3JrZWQgb24gdG9nZXRoZXIgYW5kIHRoZSBvdXRjb21lcyBhY2hpZXZlZC4gSSBhbHNvIGluY2x1ZGVkIG15IGNhcmVlciBnb2FscyBhbmQgYWN0aXZpdGllcyBJIHdhcyBpbnZvbHZlZCB3aXRoIG91dHNpZGUgb2Ygd29yay4gS2luZCBvZiBsaWtlIGEgYmlnIHJlc3VtZSBpbiBhIHdheSB3aXRoIGEgbG90IG1vcmUgZGV0YWlsIHRvIHByb2plY3RzIGFuZCBzdHVmZiBmcm9tIHdvcmsuIApJZiB0aGUgZmxhc2hsaWdodCBpcyBiYXR0ZXJ5IG9wZXJhdGVkLCB0aHJvdyBpbiBhIHBhY2sgb2YgYWRkaXRpb25hbCBiYXR0ZXJpZXMgZm9yIHRoZSBvZmZpY2VyIHRvIGhhdmUgd2l0aCBoaW0uLiAKQnVpbGRpbmcgb24gaXRzIGV4aXN0aW5nIGNvbW1pdG1lbnRzIGFzIHBhcnQgb2YgdGhlIFN1c3RhaW5hYmxlIFN0b2NrIEV4Y2hhbmdlIEluaXRpYXRpdmUsIE5FTyBhbm5vdW5jZWQgdHdvIG5ldyBjb21taXRtZW50cyB0aGF0IGFmZmlybSBpdHMgZGVkaWNhdGlvbiB0byBnZW5kZXIgZXF1YWxpdHkgaW4gQ2FuYWRpYW4gY2FwaXRhbCBtYXJrZXRzLiBJbiBKYW51YXJ5LCBORU8gYmVjYW1lIHRoZSBmaXJzdCBDYW5hZGlhbiBzdG9jayBleGNoYW5nZSB0byBzaWduIGEgQ0VPIFN0YXRlbWVudCBvZiBTdXBwb3J0IGZvciB0aGUgLCBhbiBpbml0aWF0aXZlIHNwZWFyaGVhZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBpbiBwYXJ0bmVyc2hpcCB3aXRoIFVOIFdvbWVuIGFuZCBVTiBHbG9iYWwgQ29tcGFjdC4gCkluIHRoZSBsb25nIHRlcm0sIHdlIHdhbnQgdGhlIG1ham9yaXR5IG9mIHN0dWRlbnRzIHRvIGxlYXZlIGNvbGxlZ2UgbW9yZSByaWdodCB3aW5nIHRoYW4gd2hlbiB0aGV5IGFycml2ZWQuIEV2ZW50dWFsbHksIHdlIHdvdWxkIGxpa2UgdG8gc3RhcnQgY2hhbmdpbmcgY3VycmljdWx1bSBvbiBjYW1wdXMgdG8gcmVzdG9yZSBhbiBlbXBoYXNpcyBvbiByZWFsIGVkdWNhdGlvbiBhbmQgY2xhc3NpY2FsIGxlYXJuaW5nLCByYXRoZXIgdGhhbiB0cmVuZHkgbXVsdGljdWx0dXJhbGlzbS4KQSBmdWxsIGNvbW1lcmNpYWwgcHVzaCBpcyBwbGFubmVkIGZvciBuZXh0IHllYXIuLiAKQXMgZm9yIHBvaW50cywgaXQgYmV0dGVyIHRvIHByZXBhcmUgY29uc2VydmF0aXZlbHkgYXMgeW91IG5ldmVyIGtub3cgaG93IHRoZSBpbW1pZ3JhdGlvbiBvZmZpY2VyIHJldmlld2luZyB5b3VyIGFwcCB3aWxsIGNvdW50IHlvdXIgcG9pbnRzLiAKTW9zdGx5IGZyb20gYmVpbmcgcmFpc2VkIGJ5IHNpbmdsZSBwYXJlbnRzIHdvcmtpbmcgbXVsdGlwbGUgam9icy4gSSBhdGUgYSBsb3Qgb2YgcHJvY2Vzc2VkL21pY3Jvd2F2YWJsZSBmb29kIGdyb3dpbmcgdXAgYmVjYXVzZSB0aGVyZSB3YXMgbm8gb25lIGhvbWUgdG8gY29vayByZWFsIG1lYWxzLi4gCldlIGZ1Y2tlZCB1cCBpbiB0aGUgZmFsbCB3aGVuIHdlIGhhZCBhIGNoYW5jZSB0byBnZXQgYSBwcm8gdW5pb24gbWVtYmVyIG9uIHRoZSBib2FyZCBpbnN0ZWFkIG9mIEdhcnkgWWVlIGFuZCBkaWRuIHdvcmsgaGFyZCBlbm91Z2ggZm9yIGhlciwgYW5kIE9FQSBmdWNrZWQgdXAgYnkgbm90IGZyYW1pbmcgdGhpcyBhcyB3aGF0IGl0IHdhcyAgYSBzdG9wZ2FwIGJlZm9yZSBhIGJpZ2dlciBmaWdodCwgbm90LCBhcyB5b3Ugc2FpZCwgdGhlIG1vb24uIFVzaW5nIHRoZSBlbW90aW9ucyBhcm91bmQgc2Nob29sIGNsb3N1cmVzIGFuZCBwcm9ncmFtIHNodXRkb3ducywgT0VBIG1hZGUgcGVvcGxlIHRoaW5rIHRoaXMgd2FzIGFib3V0IGFsbCB0aG9zZSB0aGluZ3MgYW5kIG5vdCBhYm91dCB3aGF0IGEgdW5pb24gYWN0dWFsbHkgZG9lcyAgZmlnaHQgZm9yIHNhbGFyeSwgaG91cnMsIGFuZCB3b3JrbG9hZC4KV2h5PyAgIEkgZ3Vlc3MgaGUgbGlrZXMgdGhlIHZpZXcgb3ZlciB0aGVyZS4gSXQncyBjbG9zZXIgdG8gdGhlIHdhdGVyIGFuZCBpcyBtb3JlIG9uIGEgcGVuaW5zdWxhIGJ5IGl0c2VsZi4gVGhhdCdzIHRoZSBvbmx5IHJlYXNvbiBJIGNhbiB0aGluayBvZi4gQ2xvc2VyIHRvIHRoZSBkb2NrLiBBbmQgSSBndWVzcyBiZWNhdXNlIGhlIGNhbi4KV2hhdCBkb2VzIGl0IGNvc3Q/IEEgb25lIGhvdXIgc2Vzc2lvbiB3aXRoIEJ1c2NoIGNvc3RzICQ4MCB3aGlsZSBhIDExLzIgaG91ciBzZXNzaW9uIGNvc3RzICQxMjAuIApBbHNvLCBqdXN0IHRvIGZpbGwgeW91IGluIHdpdGggbW9yZSBhYm91dCBob3cgSSBkbyB0aGUgc3RvcmFnZSBhbmQgc3RyZWFtaW5nLCBJIGhhdmUgZXZlcnl0aGluZyByZWNvcmRlZCBvbiBhIGNvdXBsZSBvZiBibGFjayBtYWdpYyBkZXNpZ24gaHlwZXJkZWNrIG1pbmlzLCBiZWNhdXNlIFNEIGNhcmRzIGFyZSBlYXN5LiAKU28gdGhlIEZBUSBpcyBpbiBhIHByZXR0eSBzb3JyeSBzdGF0ZSBhdCB0aGUgbW9tZW50IGFzIGlzIHBvaW50ZWQgb3V0IHRvIG1lIG9uIGEgZmFpcmx5IHJlZ3VsYXIgYmFzaXMuIEEgbG90IG9mIHRoZSBsaW5rcyBhcmUgZGVhZCBub3cgYW5kIGl0IHdhcyB3cml0dGVuIGF0IGEgdGltZSB3aGVuIHF1ZXN0aW9ucyB3ZXJlIGRpc2NvdXJhZ2VkIGluIHRoaXMgc3ViIGFuZCBzbyB3YXMgdHJ5aW5nIHRvIHByZWVtcHQgdGhlIG1vcmUgY29tbW9uIG9uZXMuIEkgZG9uIHRoaW5rIHRoaXMgcmVhbGx5IG1ha2VzIHNlbnNlIGFueW1vcmUgYW5kIGl0IHByb2JhYmx5IHdvdWxkIGJlIGJldHRlciBhcyBhIGdlbmVyYWwgcnVubmluZyB3aWtpIGNvbnRhaW5pbmcgcnVubmluZyBhbmQgL3IvcnVubmluZyByZWxhdGVkIHJlc291cmNlcy4gCklmIHRoZXJlIGlzIG5vIHRyb3VibGUgY29kZSwgSSB3b3VsZCB0YWxrIHRvIGEgZmV3IHRyYW5zbWlzc2lvbiBwbGFjZXMgYW5kIGdldCBzb21lIG9waW5pb25zIGJlZm9yZSBtYWtpbmcgYW55IGRlY2lzaW9uLiAKVG90YWxseS4gQnV0IGxldCdzIG5vdCBhbHNvIGZvcmdldCB0aGF0IGFsbW9zdCBhbGwgb2Ygb3VyIG93biBwb2xpdGljaWFucyBhcmUgZHVkZXMsIGFuZCBob3cgdGhhdCBtaWdodCBhZmZlY3QgdGhlIGRlZ3JlZSB0byB3aGljaCB0aGV5IGVtcGF0aGl6ZSB3aXRoIHdvbWVuL2NhcmUgd2hldGhlciB3b21lbiBhcmUgYmVpbmcgY29udHJvbGxlZC4gCldpdGggIkFtZXJpY2FuIEh1c3RsZSwiICJHcmF2aXR5LCIgYW5kICIxMiBZZWFycyBhIFNsYXZlIiBsZWFkaW5nIHRoZSBPc2NhciBub21pbmF0aW9ucyB0aGlzIHllYXIsIGFuZCBFbGxlbiBEZUdlbmVyZXMgYmFjayBhcyB0aGUgc2hvdydzIGhvc3QsIHRoZXJlJ3MgYWxyZWFkeSBhIGxvdCB0byB0YWxrIGFib3V0LiAKWW91IGtpZGRpbmc/IDkwcyBHTSBjYXJzIGFyZSBjaGVhcCBhcyBoZWxsIHRvIG1haW50YWluLiBJIGhhZCBhIDk0IFNpZXJyYSwgU2VycGVudGluZSBiZWx0IHNuYXBwZWQ/IE9oIGJveSwgJDE1IGZvciBhIG5ldyBvbmUgYW5kIGNhbiBwdXQgaXQgb24gd2l0aG91dCB0b29scy4gU3BhcmsgcGx1Z3MgYmFkPyAkMzAgZm9yIGEgc29saWQgc2V0IG9mIG5ldyBvbmVzLCBoYWxmIGhvdXIgb2Ygd29yayBhbmQgc2hlIGJhY2sgb24gdGhlIHJvYWQuIApBbmQgd2hhdCBkaWQgcmVwdWJsaWNhbnMgZG8gYXMgc29vbiBhcyB0aGV5IGdvdCBhbnkgcG93ZXI/IEhvdyBjYW4geW91IGNvbWUgb3V0IG9mIHRoaXMgdGhpbmtpbmcgdGhhdCByZXB1YmxpY2FucyBsaWtlIEJlbiBTYXNzZSB3aWxsIGJlIGFjdGluZyBpbiBnb29kIGZhaXRoPy4gCkJyZXYgbGl2ZWQgaW4gYSBsYXJnZSBob3VzZSBkaXZpZGVkIGluIHR3byBieSBhbiBpbnRlcm5hbCB3YWxsIHdpdGggYSBzaW5nbGUgZG9vciBhbGxvd2luZyBoaW0gdG8gbW92ZSBmcm9tIG9uZSBzaWRlIHRvIHRoZSBvdGhlci4gClRoYXQgbGVkIHRvIHNvbWUgdG91cm5hbWVudHMgb3ZlcnNlYXMgYW5kIHRoZW4gYSBtb3ZlIHRvIExhcyBWZWdhcy4uIApCZSB5b3VyIG93biBoYWlyZHJlc3NlcjogSW5zdGVhZCBvZiB3YXN0aW5nIG1vbmV5IGdvaW5nIHRvIHRoZSBoYWlyZHJlc3NlciBhbmQgbGVhdmluZyB3aXRoIGEgaGFpcnN0eWxlIHlvdSBhcmUgbm90IGNvbnZpbmNlZCB0aGF0IHlvdSBldmVuIGxpa2UsIHRyeSBpdCBhdCBob21lLiAKV2UgbW92ZWQgaW4gdG9nZXRoZXIgYSBjb3VwbGUgZGF5cyBiZWZvcmUgSSBnYXZlIGJpcnRoIHRvIG91ciBzb24uIApXaGVyZSBUIGlzIHRoZSBhbW91bnQgb2YgdGltZSB5b3Ugd2lsbCBiZSBhd2F5IGZyb20gdGhlIHRhYmxlLiBTIGlzIHlvdXIgd2Fsa2luZyBzcGVlZC4gCkV2ZXJ5b25lIGlzIGNsb3NpbmcgaW4uIEp1c3QgZnVja2luZyB0b3JjaCBpdCBhbGwuIApJdCB3YXMgZnJvbSB0aGUgYWZvcmVtZW50aW9uZWQgaXNzdWVzIG9mIGNvbmN1cnJlbnQgYmVuY2ggYW5kIG9ocCB0cmFpbmluZy4gCkFsbCB3aG9sZSBudW1iZXJzIGFyZSBkaXZpc2libGUgYnkgMS4gTnVtYmVycyBhcmUgZGl2aXNpYmxlIGJ5IDIgaWYgdGhleSBlbmQgaW4gMiwgNCwgNiwgOCBvciAwLiAKRWdvbmNhc3RlZWwgdQpQYXQgc2xpZ2h0bHkgdXAgb24gdGhlIGVkZ2VzLiAKQXMgYSBjb25ub2lzc2V1ciBvZiB0aGUgaW5kdXN0cnksIEkgd2lsbCBzaGFyZS4gCkkgY3VycmVudGx5IG9uIGEgZGF0aW5nIGFwcCBkZXRveCBzbyBteSBvcGluaW9uIG1heSBiZSBhIGJpdCBtb3JlIHNrZXdlZCB0aGFuIG90aGVycy4gCkFsc28sIGJvdGggc2hvcnRuZXNzIGFuZCBvYmVzaXR5IGxlYWQgdG8gYSBwcmVkaWN0YWJsZSBsaXN0IG9mIGNvcm9uYXJ5IGRpc2Vhc2VzLi4gClNoZSBiZWxpZXZlcyB0aGUgYWdlbmN5IENNTyByZWxhdGlvbnNoaXAsIHdoaWNoIGhhcyBoYWQgc29tZSBjaG9wcHkgd2F0ZXJzLCBpcyBpbXByb3ZpbmcuIApJIGFsc28gdGhpbmsgaXQncyBpbXBvcnRhbnQgdG8gYmUgeW91ciBvd24gcGVyc29uLiBJIGZlZWwgSSBicmluZyBtb3JlIHRvIG15IGNoaWxkIGFuZCBteSBodXNiYW5kIGluIHRoYXQgd2F5LiBJIHRyeSB0byB0YWtlIGFuIGhvdXIgdG8gcmVhZCBhIGJvb2sgZXZlcnkgZGF5LiBJJ20gcHJldHR5IGFjdGl2ZSBhcyBhIHN0YXkgYXQgaG9tZSBtb20gYW5kIGRvZyB0cmFpbmVyIHdpdGggYSBodWdlIGdhcmRlbiBpbiB0aGUgc3VtbWVyIGFuZCBhIHdvb2Qgc3RvdmUgaW4gdGhlIHdpbnRlciBidXQgaXQncyByZWFsbHkgaW1wb3J0YW50IGZvciBtZSBhcyBhbiBpbnRyb3ZlcnQgd2l0aCBhIGxvdmUgb2YgYm9va3MgdG8gaGF2ZSB0aGF0IGxpdHRsZSBzYW5jdHVhcnkgZm9yIG15c2VsZiBldmVyeSBkYXkgaWYgcG9zc2libGUuCldlIGFsbCB3YW50IG91ciBmYW1pbGllcyBzYWZlLiAKQ29udHJvbCBvciBtb2RlcmF0aW9uIHNob3VsZCBiZSBleGVyY2lzZWQgaW4gZ2FtYmxpbmcgYXMgaXQgc2hvdWxkIGJlIGluIHBvdGVudGlhbGx5IGRhbmdlcm91cyBhY3Rpdml0aWVzIGxpa2UgZHJpbmtpbmcgYWxjb2hvbCBhbmQgc21va2luZy4gCkhhdmUgeW91IGNoZWNrZWQgeW91ciBzY2hvb2wgZm9yIGhvdXNpbmc/IE1vc3QgY2FtcHVzZXMgaGF2ZSBBcHRzIGZvciBzdHVkZW50cyB3aXRoIGZhbWlsaWVzIHRoYXQgeW91IGNhbiB1c2Ugc3R1ZGVudCBsb2FucyB0byBwYXkgZm9yIGlmIG5lZWQgYmUuIApMJ2VycmV1ciBvbiBsYSBwb3VyZmVuZHMgISBVbiBwb2ludCBjJ2VzdCB0b3V0ICEuIApZb3UnbGwgZ2VuZXJhbGx5IGhhdmUgdG8gcGljayBhbW9uZyBhIGdhbWUgdGhhdCdzIG5vdCByZWFsbHkgbHVjcmF0aXZlIGFuZCBub3QgcGxheWluZyBhdCBhbGwuLiAKUXVhbGlmeWluZyBpbmNvbWUgaGFzIGluY3JlYXNlZCBzdWJzdGFudGlhbGx5IG92ZXIgdGhlIHBhc3QgdGhyZWUgeWVhcnMuIEluIFZhbmNvdXZlciwgaXQgc3VyZ2VkIGJ5ICQ4NCwwMDAgKG9yIDY2IHBlciBjZW50KSwgd2hlcmVhcyBpdCByb3NlIGJ5ICQ2NCwwMDAgaW4gVG9yb250byBhbmQgJDY4LDAwMCBpbiBWaWN0b3JpYS4gClRoZSBzdGF0ZSBiYXIgc29jaWV0eSBkb2VzIHJlZmVycmFscy4gWW91IGFyZSBhbiB1bmFybWVkIG1hbiBpbiBhbiBhcnRpbGxlcnkgZHVlbCwgYXNraW5nIHdoZXRoZXIgYW4gdW1icmVsbGEgaXMgdGhlIHJpZ2h0IHNvbHV0aW9uLiBHaXZlbiBob3cgc2VyaW91c2x5IENhbGlmb3JuaWEgdGFrZXMgcmVzdHJhaW5pbmcgb3JkZXJzIGdlbmVyYWxseSwgSSB3b3VsZCBub3QgYWdyZWUgdG8gYW55dGhpbmcgd2l0aG91dCBoYXZpbmcgeW91ciBvd24gYXR0b3JuZXkgbG9vayBhdCBpdC4gCkJ1dCB0aGUgcmVzdCBvZiB0aGUgaG9zcGljZSB3YXMgZnVsbCBvZiBzdWNoIHBlb3BsZS4gCkJhc2VkIG9uIHBsYWNlIG5hbWVzLCBDZWx0aWMgc3BlYWtpbmcgcGVvcGxlcyBhbHNvIHZlbmVyYXRlZCBzYWNyZWQgZ3JvdmVzIChuZW1ldG9uIGluIEdhdWxpc2g7IG5lbWVkIGluIE9sZCBJcmlzaCkgYXMgd2VsbCBhcyBvYWsgdHJlZXMgKGZyb20gUHJvdG8gQ2VsdGljIGRhcnUgKS4gCkkganVzdCBjYW1lIGJhY2sgZnJvbSBhIHF1aXRlIHdpbGQgaGFwcHkgaG91ciBNYXJkaSBHcmFzIHBhcnR5LiBJIGRpZCBub3QgZHJpbmsgYXQgYWxsLiBJbiBmYWN0IEkgc3RpbGwgZ28gdG8gcGFydGllcyBhbmQgZGFuY2UgYW5kIHdoYXRldmVyIGp1c3QgZXZlbiB3aXRob3V0IGRyaW5raW5nLiBTbyBJIHRoaW5rIHlvdSBjYW4gc3RpbGwgY3V0IGxvb3NlIGdldCB3aWxkIHdoYXRldmVyIGFuZCBldmVuIGNvbGxlY3QgYmVhZHMgOiApIHdpdGhvdXQgZHJpbmtpbmcuCldoZW4gd2UgZ2V0IDUgRFBTIGluIFFQIEkgZ28gTWVyY3kgYW5kIGNhbGwgaXQgIk1lcmN5IGFuZCBoZXIgNSBJcnJlc3BvbnNpYmxlIERQUyBNYWlucyIgYW5kIGl0IGhvbmVzdGx5IG1hZGUgaXQgMzAwJSBtb3JlIGVuam95YWJsZSBmb3IgbWUuIElmIHdlIGxvc2UgbWlzZXJhYmx5LCB0aGVyZSB3YXMgbm90aGluZyBJIGNvdWxkIHJlYWxseSBkbyBhYm91dCB0aGUgdGVhbSBjb21wLCBidXQgdGhlcmUgbGlrZSBhIDEvMyBjaGFuY2UgeW91ciBEUFNlcnMgYXJlIGdvaW5nIHRvIGFic29sdXRlbHkgY3JlYW0gdGhlIG90aGVyIHRlYW0gYW5kIGl0IGFsd2F5cyBoaWxhcmlvdXMuCjYuIEFkZCBuZXcgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRoYXQgZ2l2ZSB5b3UgbmVnb3RpYXRpbmcgZmxleGliaWxpdHkgYW5kIGdyb3d0aC4gCk9uZSBvZiB0aGUgbWFpbiBwb2ludHMgaW4gZ2FtZSB0aGVvcnkgaXMgd2hhdHMgdGhlIG9wdGltYWwgZ2FtZSBwbGF5LiBGb3IgZXhhbXBsZSwgcG90IGhhcyAkMTAwIGRvbGxhcnMgYW5kIG9wcG9uZW50cyBiZXQncyAkMjAgZG9sbGFycywgb3B0aW1hbCBnYW1lIHRoZW9yeSB3b3VsZCBzdWdnZXN0IGJlY2F1c2UgeW91IGFyZSBnZXR0aW5nIHBvdHQgb2RkcyBvZiA2LzEgb24geW91ciBtb25leSB5b3Ugc2hvdWxkIGNhbGwgMSB0aW1lcyBhbmQgZm9sZCA2LiBIb3dldmVyIGlmIHRoZSBvcHBvbmVudCBtYWRlIGl0IGEgJDEwMCBkb2xsYXIgYmV0IHlvdXIgZ2V0dGluZyAyLzEgb24geW91ciBtb25leSBtZWFuaW5nIHlvdSBmb2xkIHR3aWNlIGNhbGwgb25jZS4gCkp1c3QgcmVtaW5kIGhpbSAibm8gYmFja3NpZXMiIGlmIGhlIHRoaW5rcyB5b3UgdG9vIGhhcnNoLiAKSWxzIG4gcGFzIGRlIGNvcnBzLCBtYWlzIGRlcyBzZXJyZXMgcHVpc3NhbnRlcy4gCkp1ZGdtZW50IGFuZCBQZXJjZXB0aW9uIEF0IHRpbWVzLCBtYXNzYWdlIHRoZXJhcGlzdHMgbXVzdCBkZWNpZGUgd2hldGhlciBhIHNlc3Npb24gd291bGQgd29yc2VuIGEgY2xpZW50J3MgY29uZGl0aW9uLCBzdWNoIGFzIGEgbWVkaWNhbCBjb25kaXRpb24gdGhhdCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIG1hc3NhZ2UgdGhlcmFweS4gVGhleSBtaWdodCBoYXZlIHRvIGRlY2xpbmUgdHJlYXRtZW50IG9yIGNob29zZSBhIHRlY2huaXF1ZSBvdGhlciB0aGFuIHRoZSBvbmUgdGhlIGNsaWVudCByZXF1ZXN0ZWQuIApVc2luZyBoZXJiYWwgZHVtcGxpbmdzIGFsc28ga25vd24gYXMgUGFyayBIb3AgYXJlIGltcG9ydGVkIGZyb20gVGhhaWxhbmQsIG91ciBhdXRoZW50aWMgVGhhaSBEdW1wbGluZyBNYXNzYWdlIGlzIHRoZSB1bHRpbWF0ZSBpbiByZWxheGF0aW9uLiBJbiBjYXNlIHlvdSBhcmUgdW5mYW1pbGlhciB3aXRoIHRoaXMgdHJlYXRtZW50LCB0aGUgZHVtcGxpbmdzIGFyZSB3YXJtZWQgaW4gb3JkZXIgdG8gYnJvaWwgdGhlIG9pbHMgYW5kIGhlcmJzIGNvbnRhaW5lZCB0aGVyZWluLiBUaGUgcHJvY2VzcyBjYW4gaW1wcm92ZSBjaXJjdWxhdGlvbiBhbmQgaXJyaXRhYmxlIHNraW4gY29uZGl0aW9ucy4gCk9uIGEgaHVtYW4uIApUaGlzIHRlbmRlbmN5IGlzIGFwcGFyZW50IHdoZW4gSSBzZWUgcG9ydGZvbGlvcyB3aXRoIGEgbXVsdGl0dWRlIG9mIGhvbGRpbmdzLiAKVGhlcmVmb3JlLCB3ZSBoYXZlIG1hZGUgYSBsaXN0IG9mIHRoZSBiZXN0IE5ldEVudGVydGFpbm1lbnQgY2FzaW5vcyB3aGljaCB3aWxsIGhlbHAgeW91IGZpbmQgYSBnYW1ibGluZyBzaXRlIHRoYXQgaXMgc2FmZSBhbmQgcmVsaWFibGUuIFdlIGZ1bGx5IHRlc3QgYWxsIHRoZSBvbmxpbmUgY2FzaW5vcyBmZWF0dXJlZCBvbiBvdXIgbGlzdCBhbmQgdGhlcmVmb3JlIGFsbCBpbmZvcm1hdGlvbiBpcyBjaGVja2VkIGFuZCB1cCB0byBkYXRlLiBBcyBhIHZpc2l0b3IsIHlvdSBjYW4gZWFzaWx5IGZpbmQgaW1wb3J0YW50IGRldGFpbHMgYWJvdXQgTmV0RW50IHJ1bm5pbmcgb3BlcmF0b3JzIHN1Y2ggYXMgbGljZW5zaW5nLCBhY2NlcHRlZCBwYXltZW50IG1ldGhvZHMsIHN1cHBvcnRlZCBsYW5ndWFnZXMsIHR5cGVzIG9mIGdhbWVzIGFuZCBldGMuIE91ciBsaXN0IG9mIE5ldEVudHRlcnRhaW5tZW50IGNhc2lub3MgaW5jbHVkZXMgb25seSB0aGUgb3BlcmF0b3JzIHRoYXQgcHJvdmlkZSBpbXBlY2NhYmxlIHNlcnZpY2UgYW5kIGl0IGNhbiBzZXJ2ZSB5b3UgYXMgYW4gdWx0aW1hdGUgY2FzaW5vIGd1aWRlIGZvciBmaW5kaW5nIGEgY2FzaW5vIHNpdGUgdGhhdCB3aWxsIG5ldmVyIGRpc2FwcG9pbnQgeW91LgpQb3N0ZWQgYnkgZGVsbW9pIGF0IDM6MDggUE0gb24gQXVndXN0IDE2LCAyMDA2CkFsb25nIHdpdGggYnJpbmdpbmcgYmFjayBHb3Jkb24sIHRoZSB0ZWFtIGhhcyByZSBzaWduZWQgcGl0Y2hlciBDaHJpcyBZb3VuZyB0byBhbiAkMTEuNSBtaWxsaW9uLCB0d28geWVhciBkZWFsIHRvIHNvbGlkaWZ5IHRoZWlyIHJvdGF0aW9uIGFuZCBicm91Z2h0IGJhY2sgZm9ybWVyIGNsb3NlciBKb2FraW0gU29yaWEgb24gYSAkMjUgbWlsbGlvbiwgdGhyZWUgeWVhciBkZWFsLiBUaGV5J3ZlIGFsc28gZXhlcmNpc2VkIGFuICQ4IG1pbGxpb24gb3B0aW9uIG9uIEFsbCBTdGFyIGNsb3NlciBXYWRlIERhdmlzIGFuZCBhICQ1LjI1IG1pbGxpb24gb3B0aW9uIG9uIEFsbCBTdGFyIHNob3J0c3RvcCBBbGNpZGVzIEVzY29iYXIuClNvbWV0aW1lcyB5b3UgY2FuIFRlbmFudHMgcnVuIGludG8gZmluYW5jaWFsIHByb2JsZW1zIGFuZCB5b3UgbWF5IGJlIHRoZSBvbmUgb24gdGhlIGVuZCBvZiB0aGUgaG9vayBmb3IgaXQuCllvdSB3aWxsIHdhbnQgdG8gaGlnaGxpZ2h0IHRoZSBhcmVhIHRoYXQgeW91IHdhbnQgdGhlaXIgZm9jdXMgb24gc3BlY2lmaWNhbGx5IHRocm91Z2hvdXQgdGhlIGVtYWlsLiBJdCBpcyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgdGhlIGluZm9ybWF0aW9uIHRoYXQgeW91IGxpc3QgaXMgZnVuIGFuZCBlbnRlcnRhaW5pbmcgYWxsIGF0IG9uY2UuIApQaG9zcGhvc2lkZXJpdGVsb3ZlciB1Ck15IHBhcnR5IG9mIDMgaXMgd2FuZGVyaW5nIHRoZSBzZWNvbmQgbGV2ZWwgbG9va2luZyBmb3IgdmVuZ2VhbmNlIHVwb24gSGFsbGV0aCBmb3JtZXIgY29tcmFkZXMuIFRoZXkgZmluaXNoZWQgdGhlaXIgNHRoIDNociBzZXNzaW9uLCBidXQgSSBub3QgbWFraW5nIHRoZW0gY2xlYXIgbGV2ZWxzIGZvciBYUC4gU2luY2UgdGhlaXIgZ3JvdXAgaXMgc21hbGwsIEkgYXNzdW1pbmcgdGhhdCBpZiB0aGV5IHJlYWNoIHRoZSBzdGFpcnMgdG8gdGhlIG5leHQgbGV2ZWwsIHRoZXkgZ2V0IHRvIGxldmVsIHVwLCBhdCBsZWFzdCB1bnRpbCBmdXJ0aGVyIGRvd24gaW4gdGhlIGR1bmdlb24uClRoaXMgaXMgY2F1c2VkIG5vdCBieSBkaXNjcmltaW5hdGlvbiwgYnV0IGJ5IHRoZSBmYWN0IHRoYXQgbWVuOiBUZW5kIHRvIHdvcmsgaW4gcGh5c2ljYWxseSBkZW1hbmRpbmcgYW5kIGRhbmdlcm91cyBqb2JzIG1vcmUgdGhhbiB3b21lbiAoYW5kIHRoZXNlIGpvYnMgdGVuZCB0byBwYXkgcHJldHR5IHdlbGwpIGFuZCBhcmUgZ2VuZXJhbGx5IG1vcmUgYWdncmVzc2l2ZSB3aGVuIG5lZ290aWF0aW5nIHJhaXNlcy4gQWxzbywgc3RheSBhdCBob21lIG1vbXMgYXJlIG1vcmUgcHJldmFsZW50IHRoYW4gc3RheSBhdCBob21lIGRhZHMsIHNvIHRoYXQgbWVhbnMgdGhlcmUgYXJlIGxlc3Mgd29tZW4gaW4gdGhlIHdvcmtmb3JjZS4pIDQgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnby4gCkp1c3QgYmVjYXVzZSB5b3UgYW5kIEJGIGhhdmUgZG9uZSB0aGlzLCBkb2VzbiBtYWtlIHlvdSB0aGUgZmFtaWx5IGJhbmsuLiAKVGhlIEJvYXJkIGNvbWVzIGRvd24gb24gdXBwZXIgbWFuYWdlbWVudCwgd2hvIGluIHR1cm4gZmlyZXMgdGhlIG1pZGRsZSBtYW5hZ2VyIHdobyBoaXJlZCB0aGUgMyBiYWQgY29udHJhY3RvcnMuLiAKSWYgYSBob3RlbCBndWVzdCBvcmRlcmVkIGEgcGFydGljdWxhciByZWQgd2luZSBkdXJpbmcgYSBwcmV2aW91cyB2aXNpdCwgZm9yIGV4YW1wbGUsIHRoZXkgY2FuIGJlIG9mZmVyZWQgdGhlIHNhbWUgd2luZSBhcyBvbmUgb2YgdGhlaXIgY2hvaWNlcyBzdWJzZXF1ZW50IHZpc2l0cy4uIApPbiB0b3Agb2YgdGhhdCwgd2hlbiBhIGhvdXNlbWFpZCBjYW1lIHRvIGRyYXcgbXkgYmVkcm9vbSBjdXJ0YWlucywgdGhlIHdob2xlIGxvdCAgIGN1cnRhaW5zLCBwZWxtZXQgYW5kIGhlYXZ5IGJyYXNzIHJvZHMgICBjYW1lIGRvd24gd2l0aCBhIGNsYXR0ZXIsIG5hcnJvd2x5IG1pc3NpbmcgbXkgaGVhZC4gCkxldmVscyBhbmQgYWxzbyB0aGUgYXNzb2NpYXRpb24gb2YgREFHIHdpdGggaW5zdWxpbiBhY3Rpb24gdGhpcyBzdHVkeSB3YXMgY2FycmllZCBvdXQuClRoZSBkZWFsIE1yLiAKQ3JldyBtZW1iZXJzIGFyZSB0cmFpbmVkIHRvIGRlYWwgd2l0aCBoYW5kc3kgcGFzc2VuZ2VyczogU2xlZXBpbmcgd2l0aCBhIHBhc3NlbmdlciB3aWxsIGdldCB5b3UgImNoaWNrZW4gb3IgYmVlZiwiIGFzIFBhdmxvdiBwdXRzIGl0LiAiVGhhdCdzIHdoYXQgYSBmbGlnaHQgYXR0ZW5kYW50IGFza3MgeW91IHdoZW4geW91J3JlIHB1dCBvbiB0aGUgZmlyc3QgZmxpZ2h0IGhvbWUuIgpJIGFtIGEgcHJvZHVjdCBvZiB0aGUgZWFybHkgcG9rZXIgYm9vbS4gQW5kIHBsYXllZCBhIGxvdCBvZiBwb2tlciBzdGFycyBmdWxsIHRpbHQgYW5kIGFsbCB0aGUgZ29vZCBvbmVzIHByaW9yIHRvIEJsYWNrIEZyaWRheS4gSSBkb24ndCB0aGluayBHbG9iYWwgUG9rZXIgaXMgYSBzY2FtLiAKVGhlcmUgbm8gYmF0dGVyeSBiZWNhdXNlIHRoZSBjaGFyZ2UgaXMgcHJvdmlkZWQgYnkgYSBzZWxlbml1bSBjZWxsLCB3aGljaCB1bmRlcmdvZXMgYSBwaG90b2NoZW1pY2FsIHJlYWN0aW9uIHdoZW4gZXhwb3NlZCB0byBsaWdodC4gVGhlIHJlYWN0aW9uIGNyZWF0ZXMgYSBjaGFyZ2UsIGFuZCB0aGF0IGNoYXJnZSBpcyB1c2VkIHRvIGRldGVybWluZSBleHBvc3VyZS4uIApUb2dldGhlciB3aXRoIGd1ZXN0IGhvc3QgL3UvQmVybmFyZGl0bywgd2UgdGFsayBhYm91dCBhIGNvbmZsaWN0IHdpdGggbWFueSBtaXNjb25jZXB0aW9uczogVGhlIFRhaXBpbmcgUmViZWxsaW9uICgxODUwIDE4NjQpLiAKWW91ciBicmFpbiBpdHNlbGYgY2Fubm90IHNlbnNlIHBhaW4sIHNvIGEgaGVhZGFjaGUgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB5b3VyIGJyYWluIGh1cnRpbmcuIApJdCBub3QgZ29pbmcgdG8gY2hhbmdlIHlvdXIgbGlmZSBvciBhbnl0aGluZywgYnV0IGl0IGFub3RoZXIgbWV0cmljIHRoYXQgeW91IGNhbiB1c2UgaW4gY29tYmluYXRpb24gd2l0aCBvdGhlciBtZXRyaWNzIHRvIGp1ZGdlIHBhY2UsIGVmZm9ydCwgcmVjb3ZlcnksIGZpdG5lc3MgaW1wcm92ZW1lbnRzLCB0cmFpbmluZyBsb2FkLCBldGMuIEl0IGVzcGVjaWFsbHkgaGFuZHkgY29tcGFyZWQgdG8gcGFjZSBmb3IgaGlsbHMgYW5kIHRyYWlscy4gU29tZSBmb2xrcyBhbHNvIGp1c3QgcmVzcG9uZCBiZXR0ZXIgdG8gbnVtYmVycyB0aGFuICJmZWVsIiwgb3IgbmVlZCBhIHdheSB0byB0dW5lIHRoZWlyIGZlZWwgdG8gYSBudW1iZXIgZm9yIGEgd2hpbGUgdW50aWwgdGhleSBmaWd1cmUgaXQgb3V0Li4gClZlbnR1cmUgaW50byB0aGUgdmlkZW8gZ2FtZXMuIFRoZXNlIGFyZSBvdGhlcndpc2UgcmVmZXJyZWQgdG8gYXMgIm11bHRpIGxpbmUiIGdhbWVzIGFuZCB0aGV5IHdvcmsgc2ltaWxhcmx5IHRvIGJ1eSBhIHBheXMuIFlvdSBnZXQgdG8gY2hvb3NlIGhvdyBtYW55IGxpbmVzIHlvdSdkIGxpa2UgdG8gYnV5IGFuZCBob3cgbWFueSBjcmVkaXRzIHlvdSdkIGxpa2UgdG8gc3BlbmQgb24gZWFjaCBsaW5lLiBBdCBhIHBlbm55IHNsb3QsIHlvdSBjb3VsZCBzcGVuZCAxIG9uIHRoZSBjZW50ZXIgbGluZSBhbmQgdGFrZSBhIHNwaW4uIEl0IHByb2JhYmx5IHdvbid0IHBheSB5b3UgYW55dGhpbmcsIGJ1dCB5b3UgY291bGQgZG8gaXQuIFNvbWUgbWFjaGluZXMgaGF2ZSB1cCB0byA1MDAgbGluZXMgdGhhdCB5b3UgY2FuIGJldCBvbiwgYW5kIHlvdSBjYW4gdXN1YWxseSBiZXQgc29tZXdoZXJlIGJldHdlZW4gYSBwZW5ueSBhbmQgYSBkb2xsYXIgcGVyIGxpbmUgKGRlcGVuZGluZykuCldlIHBheSB0aGUgaGlnaGVzdCByYWtlYmFjayBwZXJjZW50YWdlcyB0byBhZ2VudHMuIEkgdHJ1bHkgYmVsaWV2ZSB3ZSBhcmUgdGhlIGZpcnN0IGNsdWIgc3RhcnRpbmcgb24gd2hhdCB3aWxsIGJlY29tZSBhIHRyYW5zZm9ybWF0aW9uIG9mICBmb3IgdGhlIGJldHRlci4gCkFsc28sIGRpZCB5b3UgdGVsbCB5b3VyIGZhbWlseSBmcmllbmQgd2hhdCBoYXBwZW5lZD8gSWYgbm90LCB5b3Ugc2hvdWxkIGhhdmUgc28gdGhhdCB0aGlzIG5ldmVyIGhhcHBlbmVkIHRvIHlvdSBhZ2Fpbi4KUGxlYXNlIGZlZWwgZnJlZSB0byBtYWtlIGFuIGFwcG9pbnRtZW50IG9yIHdhbGsgaW4gYW55dGltZS4iSW4gdGhhdCBjYXNlLCBmZWRlcmFsIGFuZCBzdGF0ZSBhZ2VudHMgcmFpZGVkIHRoZSBSZWxheCBab25lLCB3aGVyZSBjdXN0b21lcnMgdG9sZCBhZ2VudHMgdGhleSBwYWlkIGZvciBzZXggYWN0cy5JbiBhbm90aGVyIENsZXZlbGFuZCBjYXNlLCBwcm9zZWN1dG9ycyBmaWxlZCBjaGFyZ2VzIGFnYWluc3QgMTQgbWVuIGFuZCBvbmUgd29tYW5pbiBjb25uZWN0aW9uIHdpdGggYSB0d28gZGF5IHVuZGVyY292ZXIgcHJvc3RpdHV0aW9uIHN0aW5nIG9wZXJhdGlvbiBvdXQgb2YgYSBob3RlbCBvbiBDbGV2ZWxhbmQncyBXZXN0IFNpZGUuLiAKQXV0aXNtL2FzcGVyZ2VycyB0aGF0IG1ha2VzIGl0IHRvdWdoIHRvIHNvY2lhbGl6ZSBub3JtYWxseT8gNyBldXJvIGNvZmZlZS4gCkFuZCBldmVuIHdoZW4gdGhleSBkaWQgdGhleSB0cmVhdCBpdCBkZWxlZ2l0bWl6ZSBpdCBhIGJpdCBJTU8gd2hlbiBzbyBtdWNoIG9mIHRoZSBtYXJrZXRpbmcgaXMgYW9idXQgaGVyIGJlaW5nIGEgd29tYW4uIApOTVMsIGhlIHNheXMsIG1heSBsZWFkIHRvIGEgY29uY2VudHJhdGlvbiBvZiB0cmFkaW5nIGF0IGV4Y2hhbmdlcyB0aGF0IGNhbiBwcm92aWRlIHRoZSBoaWdoIHNwZWVkIHRoYXQgaW5zdGl0dXRpb25hbCBpbnZlc3RvcnMgZGVtYW5kLiBUaGF0IHdpbGwgbGlrZWx5IGJlbmVmaXQgdGhlIE5ldyBZb3JrIFN0b2NrIEV4Y2hhbmdlIG9yIE5hc2RhcSwgYm90aCBvZiB3aGljaCBhcmUgbm93IHB1YmxpY2x5IHRyYWRlZCwgZm9yIHByb2ZpdCBjb21wYW5pZXMgd2l0aCBhbiBpbmNlbnRpdmUgdG8gZHJpdmUgZmVlcyB1cC4gClRoZXJlIGEgdG9uIG9mIGRpZmZlcmVuY2UgYmV0d2VlbiAxIDUwIG1pbGxpb24gdG8gYSBiaWxsaW9uLiBJZiB5b3Ugc3RhcnQgd2l0aCAkMSBhbmQgYnVpbGQgdGhhdCBpbnRvICQxMDAwIHRoZW4geW91IGRlZmluaXRlbHkgYXJlIHNlbGYgbWFkZSwgc2FtZSB3aXRoICQ1MCB0byAkMTAwMC4gClRoZXkgaGF2ZSB3b25kZXJmdWwgaGVlbCBpbXBhY3QgYWJzb3JwdGlvbi9jdXNoaW9uaW5nOiBubyBtYXR0ZXIgaG93IGZhciBJIHdhbGssIG15IGhlZWxzIGRvbiBnZXQgdGlyZWQgb3Igc29yZSwgbm9yIGRvIG15IGtuZWVzLiBIb3dldmVyLCB0aGUgYmFsbHMgb2YgbXkgZmVldCBnZXQgc29yZSBhbmQgc3dvbGxlbiB2ZXJ5IHF1aWNrbHksIGFmdGVyIGFib3V0IGEgbWlsZSBhbmQgYSBoYWxmLiBJdCBhbG1vc3QgZmVlbHMgbGlrZSBJIHdhbGtpbmcgZGlyZWN0bHkgb24gdGhlIGdyb3VuZC4KSSB2ZXJ5IG11Y2ggZG91YnQgdGhleSBhcmUuIEF0IGxlYXN0LCBub3QgaW4gdGhlIHNhbWUgd2F5LiBBIHByaXZhdGUgaW5zdXJhbmNlIGNvbXBhbnkgY2FuIG1ha2UgYSBsZWdhbCBjYXNlIHNheWluZyAid2UgZG9uIGNvdmVyIHRoaXMsIiBidXQgSSBzZWUgYWJzb2x1dGVseSBubyBldmlkZW5jZSB0aGV5IGNhbiBzYXkgImFuZCB5b3UgY2FuIGdldCBtZWRpY2FsIGNhcmUgYW55d2hlcmUgZWxzZS4iIFRoYXQgaXMgd2hhdCBoYXBwZW5lZCB3aXRoIEFsZmllIEV2YW5zIGFuZCBDaGFybGllIEdhcmQuCk9mIGNvdXJzZSB0aGVyZSBhbHdheXMgYSByaXNrIGFuZCBJIGF2b2lkIHdvbWVuIHRoYXQgb2ZmZXIgc2V4IHdpdGhvdXQgY29uZG9tLCBidXQgYXBhcnQgZnJvbSB0aGF0LCBhcyBsb25nIGFzIHRoZSBjb25kb20gaG9sZHMgdGhlIHJpc2sgaXMgbm8gZ3JlYXRlciB0aGFuIHdpdGggYW55IG90aGVyIHJhbmRvbSB3b21hbi5BcmUgdGhlIHdvbWVuIHNhZmUgZnJvbSBmb3JjZWQgcHJvc3RpdHV0aW9uP1RoZSBuZXcgbGF3IGkgbWVudGlvbmVkIGVhcmxpZXIgdHJpZXMgdG8gYWNjb21wbGlzaCB0aGlzLCBieSBtYWtpbmcgdGhlIHdvbWVuIGhhdmUgaW5mb3JtYXRpb25hbCB0YWxrcyBhdCBnb3Zlcm5tZW50IGFnZW5jaWVzIHJlZ3VsYXJseS4gClRoZXJlIGFyZSBtYW55IHZhcmlhdGlvbnMgb2YgdGhpcyAgIGZvciBleGFtcGxlLCB0aGUgc3RyaW5ncyBjYW4gYmUgcGx1Y2tlZCBpbnN0ZWFkIG9mIGJvd2VkLCBvciB0aGUgbGVmdCBoYW5kIGZpbmdlcnMgY2FuICd2aWJyYXRlJyB0byBjcmVhdGUgYSBkaWZmZXJlbnQgcXVhbGl0eSBvZiBzb3VuZCAoYSB2aWJyYXRvIGVmZmVjdCkuIApOb3Qgb25seSBkaWQgaGUgZGlzbG9jYXRlIGhpcyBzaG91bGRlciwgaXQga25vY2tlZCBoaW0gb2ZmIHRoZSBiYWNrIG9mIHRoZSB0cnVjay4gCk90aGVyIGNlbGVicml0aWVzIGVzY2hldyBIb2xseXdvb2QncyBnbGFyZSBjb21wbGV0ZWx5IGR1cmluZyB0aW1lcyBvZiBjcmlzaXMuIFN5bHZlc3RlciBTdGFsbG9uZSBza2lwcGVkIHNvbWUgcHJvbW90aW9ucyBmb3IgaGlzIGxhdGVzdCBmaWxtLCAiVGhlIEV4cGVuZGFibGVzIDIsIiBhZnRlciBoaXMgc29uJ3MgdW5leHBlY3RlZCBkZWF0aCBsYXN0IG1vbnRoLiAKTmV3IG93bmVycywgY2hhbmdpbmcgc3RyYXRhIGNvdW5jaWxzLCBuZXcgcHJvcGVydHkgbWFuYWdlcnMgYW5kIHByb3BlcnR5IG1hbmFnZW1lbnQgY29tcGFuaWVzIG9mdGVuIGV4cG9zZSBlcnJvcnMgdGhhdCBoYXZlIGJlZW4gaGlzdG9yaWMuIApZb3UgcGF5IHRvIHBsYXkuIApUaGlzIGlzIGZ1bmN0aW9uIG9mIHRoZSBtb2RlbCBjbGFzcyBhbmQgdGhlIGRhdGEgZGlzdHJpYnV0aW9uLiBOYWl2ZWx5LCB3aXRob3V0IHVzaW5nIGFueSBwcmlvciBpbmZvcm1hdGlvbiwgeW91J2Qgc2F5IHlvdSBzaW1wbHkgbmVlZCBhIGxvdCBvZiBkYXRhLiBCdXQgdGhpcyBpc24ndCB0cnVlLCBhbmQgcGVvcGxlIHJlc2VhcmNoIGZpbmRpbmcgZWZmZWN0aXZlIGRhdGEgc2V0cyB0byB0cmFpbiBvbiBmb3Igc3BlY2lmaWMgZGVjaXNpb24gYm91bmRhcmllcyBhbmQgbW9kZWwgY2xhc3Nlcy4gCk1vcmUgImV2aWRlbmNlIHRoYXQgQWNvcm4gYW5kIG90aGVyIGdyb3VwcyB0aGF0IHdvcmsgZm9yIHNvY2lhbCBqdXN0aWNlIGZvciBwb29yIHBlb3BsZSBhcmUgaW4gZmFjdCBwYXJ0IG9mIGEgdmFzdCBsZWZ0IHdpbmcgY29uc3BpcmFjeSB0byBkZWZsb3dlciB0aGUgcHVyaXR5IG9mICJvdXIiIHdvbWVuLi4gCkkgd291bGRuIGhhdmUgaWdub3JlZCB0aGUgaG9ycmlibGUgcGFpbiBJIGdvdCBhbmQgbm90IHRyaWVkIHRvIHdvcmsgdGhyb3VnaCBpdC4gClRoZSBtYXNrZWQgc3VzcGVjdCAgIHdobyBoYXMgbm90IGJlZW4gaWRlbnRpZmllZCAgIGJsZXcgb3BlbiBhIGxvY2tlZCBkb29yIHdpdGggYSBzaG90Z3VuIGFuZCBkZXNjZW5kZWQgb24gYSBjcm93ZCBvZiBwZW9wbGUgcGxheWluZyBwb2tlciBhYm91dCBhbiBob3VyIGJlZm9yZSBjbG9zaW5nIHRpbWUgYXQgdGhlIGJ1c2luZXNzLCBCdXJ0b24gcG9saWNlIHNhaWQuIApPdmVyYWxsOjQuNS8xMC4gCkkganVzdCBjYW1lIGJhY2sgcmVjZW50bHkgYW5kIGhhdmUgbm90aWNlZCB0aGUgYXJtaWVzIG9mIEdhbGthIEJTVHMgKHNlZW1pbmdseSBvbmx5IGVpdGhlciBuYWtlZCBvciBpbiBmdWxsIG91dHJpZGVyIGdlYXIpLiAKSSBoYWQgdGhvdWdodCBhIHRyZWUgd2FzIGNyYXNoaW5nIGRvd24gb24gbXkgYmVkcm9vbSwgYW5kIHdhcyBhYm91dCB0byBjcnVzaCBtZSB0byBkZWF0aC4gCkphbWVzdG93biBhbHNvIGZhaWxlZCBmb3IgdGhlIHNhbWUgcmVhc29uIGNvbW11bmlzbSBhbHdheXMgZmFpbHM6IFBlb3BsZSBmaWd1cmVkIG91dCB0aGV5IGNvdWxkIGVhdCB3aXRob3V0IHdvcmtpbmcsIHRoZW4gcGVvcGxlIHN0b3BwZWQgd29ya2luZywgdGhlbiB0aGVyZSB3YXMgbm8gZm9vZCBmb3IgYW55b25lLiBJdCBvbmx5IHN1cnZpdmVkIGJlY2F1c2UgSm9obiBTbWl0aCBzYWlkLApJIHByb2JhYmx5IGNsYXNzIG15c2VsZiBhcyBhZ25vc3RpYyAoaGVhdmlseSBsZWFuaW5nIGF0aGVpc3QpIGJhc2VkIG9uIHRoZSBmYWN0IHRoYXQgbm8gb25lIGtub3dzIHdoYXQgY3JlYXRlZCB0aGUgdW5pdmVyc2UuIApZZWFoLCBJIHRoaW5rIHRoZSAiZXBoZW1lcmFsIiBxdWFsaXR5IG9mIFNhemFlIHNhbiB3aGVyZSBldmVyeSBlcGlzb2RlIGlzIG9uZSB0aGF0IHlvdSB3YXRjaCBhbmQgdGhlbiBpcyBsb3N0IGZvcmV2ZXIgaXMgKHRob3VnaCBub3QgbmVjZXNzYXJpbHkgcGFydCBvZiBpdCBpbml0aWFsIHN1Y2Nlc3MpIGEgYml0IHBhcnQgb2Ygd2h5IFNhemFlIHNhbiBjb250aW51ZXMgdG8gaG9sZCBzdWNoIHByb21pbmVuY2UgaW4gdGhlIHJhbmtpbmdzLiBJIG5ldmVyIHNlZW4gYW55IHNvcnQgb2YgYWNhZGVtaWMgc3R1ZHkgb24gc3VjaCBhIHRoaW5nLCBidXQgSSB0aGluayBwZW9wbGUgcmVzcG9uZCBwb3NpdGl2ZWx5IHRvIHRoZSBjb25jZXB0IG9mIG5vc3RhbGdpYSB0aGF0IGNhbiBiZSBlYXNpbHkgInJlY2xhaW1lZCIgc28gdG8gc3BlYWssIHZlcnN1cyBhbGwgdGhlIG5vc3RhbGdpYSB3aGVyZSB5b3UganVzdCBidXkgdGhlIHJlbWFzdGVyZWQgRFZEIGVkaXRpb24gb2YgdGhlIGZpcnN0IGNvdXBsZSBzZWFzb25zIGFuZCBuZXZlciB3YXRjaCB0aGVtLiAxMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvLiAKTXkgVGFpIENoaSBpbnN0cnVjdG9yIHRvbGQgdXMgZnJvbSB0aGUgYmVnaW5uaW5nIGl0IHdhcyBhIHJlbGF4aW5nIGV4ZXJjaWVzLCBXYWxraW5nIE1lZGl0YXRpb24uIFdlIGRpZG4ndCBiZWxpZXZlIGl0IGF0IGZpcnN0LiBBbGwgb3VyIGNvbmNlbnRyYXRpb24gaGFkIHRvIGJlIG9uIHdoYXQgbW92ZSB3YXMgbmV4dC4gCkkgYWNjaWRlbnRhbGx5IHdvcmtlZCBhdCBhIGhhcHB5IGVuZGluZyBtYXNzYWdlIHBhcmxvcgpNYW5hZ2VtZW50IG9yIHJlZHVjdGlvbiBvZiBwYWluIGluY2x1ZGVzIHRoZSB1c2Ugb2YgYSBwYWluIHJlbGlldmVyLiBPbmUgdHlwZSBvZiBwYWluIHJlbGlldmVyIGlzIGFuIGFuYWxnZXNpYy4gSXQgaXMgYSB0eXBlIG9mIGRydWcgdGhhdCBpcyB1c2VkIHRvIHJlbGlldmUgdGhlIGZlZWxpbmcgb2YgcGFpbi4gUGFpbiByZWxpZXZlcnMgZG8gbm90IHByb3ZpZGUgcGVybWFuZW50IHBhaW4gcmVsaWVmIG5vciBkbyB0aGV5IGN1cmUgdGhlIHByb2JsZW0gY2F1c2luZyB0aGUgcGFpbi4gVGhleSBvbmx5IGdpdmUgcmVsaWVmIGZvciBhIGNlcnRhaW4gcGVyaW9kIG9mIHRpbWUuIFRoZXNlIGRydWdzIGFyZSB1c3VhbGx5IHByZXNjcmliZWQgdG8gYmUgdGFrZW4gZXZlcnkgdGltZSBhIHBlcnNvbiBmZWVscyBpbnRvbGVyYWJsZSBwYWluLgpTbyB5b3Ugc2F5aW5nIHRoYXQgZ2VuZGVyIHJvbGVzIGZvciBodW1hbnMgYXJlbiBiaW9sb2dpY2FsLCBhbmQgeW91IGFsc28gc2F5aW5nIHRoYXQgdHJhbnMgcGVvcGxlIGV4aXN0LiAKSnVzdCBkb24gZXhwZWN0IHlvdXJzZWxmIHRvIGJlIGFibGUgdG8gcmVhZCBhbnkgZ2l2ZW4gTGF0aW4gdGV4dCBsaWtlIHlvdSBjb3VsZCByZWFkIGEgbmV3c3BhcGVyIHdyaXR0ZW4gaW4gRW5nbGlzaCwgaXQgbm90IGdvaW5nIHRvIGhhcHBlbi5CZSBoYXBweSB3aXRoIGV2ZXJ5dGhpbmcgdGhhdCB5b3UgZG8gcmVjb2duaXplLCBubyBzaGFtZSBpbiBjb25zdWx0aW5nIHJlZmVyZW5jZXMgZm9yIHdvcmRzIHlvdSB3ZXJlIG5ldmVyIG1hZGUgYXdhcmUgb2YuIEVuam95IHlvdXIgY29udGludW91cyBsZWFybmluZyBvZiB0aGUgbGFuZ3VhZ2UsIGRvbiB0cnkgdG8gbWFrZSBpdCBhbiBvYnN0YWNsZSB0byB0YWNrbGUuLiAKVGhlIG90aGVyIGNhdGVnb3J5IG9mIGRlcG9zaXRpbmcgcG9rZXIgbW9uZXkgaXMgdGhyb3VnaCBhIDNyZCBwYXJ0eSBzZXJ2aWNlcyBsaWtlIE5FVGVsbGVyIG9yIHByZXBhaWQgQVRNIHdoaWNoIGFjdHMgbGlrZSBJbnRlcm5ldCBiYW5rcy4gClNhbSBpcyBkcmFnZ2VkIHJpZ2h0IHRvIHRoZSB0cnVuayBvZiBoaXMgYmVsb3ZlZCBDaWVsLiAKVGhlcmUgYXJlIG1hbnkgYXBwcm9hY2hlcyB0byByZWR1Y2luZyB0aGUgdXNlIG9mIGNhcmJvbiBmdWVscyBhIG1ham9yIGNvbnRyaWJ1dG9yIHRvIEdIR3MgcmFuZ2luZyBmcm9tIHJlZ3VsYXRvcnkgbGltaXRzLCBiYW5zIGFuZCBpbmNlbnRpdmVzIHRvIHJlIHByaWNpbmcgbWVjaGFuaXNtcywgYW5kIGluIHRydWUgQ2FuYWRpYW4gZmFzaGlvbiBvdXIgZ292ZXJubWVudHMgYXJlIHVzaW5nIHRoZW0gYWxsLiAKRGhhbmdvTmV4dXMgICAxIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlIHBvaW50IGlzIERheiBoYXMgY3VsdGl2YXRlZCB0aGlzIHBlcnNvbmEgYmFzZWQgb24gd3JpdGluZyBzZXhpc3QgY2hhcmFjdGVycyBiZWNhdXNlIGhlIGdldHMgaXQuIEhlIHdva2UuIEJ1dCB0aGUgdHJ1dGggaXMgaGUgd3JpdGVzIHNleGlzdCBib29rcyBiZWNhdXNlIGhlIGp1c3QuIHNleGlzdC4gQW5kIG9uIHRvcCBvZiB0aGF0IGlzIHZlcmJhbGx5IGFidXNpdmUgYW5kIGJ1bGx5aW5nIHRvIHdvbWVuIHdobyBkb24gaGF2ZSBhbiBvdW5jZSBvZiB0aGUgcG93ZXIgaGUgcG9zc2Vzc2VzIGluIHRoZSBsaXRlcmFyeSB3b3JsZC4gVGhpcyBpcyBhYm91dCBEYXogYmVpbmcgYWNjb3VudGFibGUgdG8gaGlzIGh5cG9jcmlzeSBmaXJzdCBhbmQgZm9yZW1vc3QuClNvbWUgbWFjaGluZXMgd2lsbCBiZSBibGF0YW50bHkgYmV0dGVyIHRoYW4gb3RoZXJzLiBNYWNoaW5lcyB0ZW5kIHRvIGJlIGdyb3VwZWQgYnkgZGVub21pbmF0aW9uLCBzdHlsZSBhbmQgYnJhbmQgbmFtZS4gVmlkZW8gc2xvdHMgaGF2ZSBhIEhFTFAgb3IgSU5GTyBidXR0b24gdGhhdCB3aWxsIHdhbGsgeW91IHRocm91Z2ggdGhlIHZhcmlvdXMgcGF5b3V0cywgcGxheSBsaW5lcywgYm9udXMgZ2FtZXMgYW5kIHNwZWNpYWwgZmVhdHVyZXMuLiAKVGhpcyBoYXMgYSB0YW5nZW50aWFsIHJlbGF0aW9uIHRvIHByaXZhY3kgYnV0IGhvbmVzdGx5IGFueW9uZSB3aG8gcmVhbGx5IGNhcmVzIGFib3V0IHByaXZhY3kgaGFzIG11Y2ggYmlnZ2VyIGZpc2ggdG8gZnJ5IHRoYW4gd2hldGhlciB0aGVpciBsdW5jaCBwbGFucyBuZWVkIHRvIGluY2x1ZGUgYSBzdG9wIGF0IHRoZSBBVE0gKGFyZSBBVE1zIGV2ZW4gYWxsb3dlZCBpbiB0aGUgTUdUT1cgY29tbXVuaXR5PykuClRoZSByZXZlcnNlIGlzIGZvciBhbGwgb3RoZXIgdHlwZXMgb2YgcG9rZXIuIApCZWNvbWUgYSBSZWRkaXRvcmFuZCBzdWJzY3JpYmUgdG8gb25lIG9mIHRob3VzYW5kcyBvZiBjb21tdW5pdGllcy44MApNb2hlZ2FuIHRvdXJuYW1lbnRzIGFyZSB0aGUgc2FtZSA2MCAxMjAgZG9sbGFyIGJ1eSBpbiB0aHJpY2UgZGFpbHkgYWxsIG1vbnRoIHdpdGggdGhlIHZlcnkgb2NjYXNpb25hbGx5IHdlZWtlbmQvaG9saWRheSBzZXJpZXMuIAoiVGhlIHByZXNlbnQgd29yayBpcyB3b3J0aCB3aGlsZSBmb3IgaXRzIG93biBzYWtlLCIgaGUgYW5ub3VuY2VkLiAiSXQgaXMgc28gZGFuZ2Vyb3VzIHRoYXQgeW91IG1pZ2h0IGVhc2lseSBsb3NlIHlvdXIgbGlmZSB3aXRoaW4gYSBmb3J0bmlnaHQuIFRoYXQgaXMgd2h5IEkgc2hhbGwgZ2l2ZSB5b3UgeW91ciB3b3JrIGNoYXB0ZXIgYnkgY2hhcHRlci4gVG8gZGF5IEkgcHJvcG9zZSBvbmx5IHRvIGhhbmQgeW91IHlvdXIgY3JlZGVudGlhbHMgd2hpY2gsIGJ5IHRoZSBieSwgd2lsbCBtZWFuIHN1ZGRlbiBkZWF0aCB0byB5b3UgaWYgZXZlciB0aGV5IGFyZSBmb3VuZCBieSB0aGUgd3JvbmcgcGVvcGxlIHVwb24geW91ciBwZXJzb24gYW5kIGV4cGxhaW4gdGhlIGNvbW1lbmNlbWVudCBvZiB5b3VyIHRhc2suIgpJZiB5b3UgYXJlIGNvbnN0YW50bHkgZ2V0dGluZyBtYW5pY3VyZXMsIGFsbCB0aGUgaGFzaCBjaGVtaWNhbHMgbWF5IG1ha2UgdGhlIGN1dGljbGVzIGRyaWVyIGFuZCB0aGlubmVyLiAKTXVjaCBhcHByZWNpYXRlZCwgaXQncy4gSGFyZC4gU2hlIGRpZWQgMiBkYXlzIGJlZm9yZSBteSBiaXJ0aGRheSwgMiBtb250aHMgdW50aWwgSSBncmFkdWF0ZSBjb2xsZWdlLiAKSGUgc2FpZCB0aGUgY291bmNpbCB3b3VsZCBkZXZlbG9wIGEgZ2FtaW5nIHBvbGljeSB0byBiZSBzdXJlIGFib3V0IGFueSBmdXR1cmUgcmVxdWVzdHMgZm9yIG1vcmUgcG9raWVzLiAiV2hlbiB3ZSBnZXQgZnV0dXJlIGFwcGxpY2F0aW9ucyBmb3IgdGhpbmdzIGxpa2UgYWRkaXRpb25hbCBwb2tlciBtYWNoaW5lcyB3ZSBhY3R1YWxseSBoYXZlIGFuIG9yZ2FuaXNhdGlvbiBwb2xpY3kgdGhhdCBpcyBidWlsdCBvbiBjb21tdW5pdHkgY29uc3VsdGF0aW9uIHNvIHdlIHVuZGVyc3RhbmQgd2hhdCB0aGUgY29tbXVuaXR5J3Mgdmlld3MgYXJlLCIgTXIgTWNHcmF0aCBzYWlkLiAKU2hlIGh1bmcgdXAgd2l0aCB5b3VyIG1vbSBhZnRlciB0aGUgaG9ybiBibGV3IG91dHNpZGUuIApJbiAyMDE4LCBvdmVyIDYuMzMgbWlsbGlvbiBoYXZlIHBsYXllZCBXb3JsZCBvZiBXYXJjcmFmdC4gRGlhYmxvIHRocmVlIGhhdmUgZXhwZXJpZW5jZWQgdGhlIGJlc3Qgc2VsbGluZyBQQyBnYW1lcyBkZXNwaXRlIGJlaW5nIGluIHRoaXJkIHBsYWNlLiBUaGUgVGV4YXMgSG9sZCAnRW0gcG9rZXIgb25saW5lIGdhbWUgaGFzIGV4cGVyaWVuY2VkIGEgbWFzc2l2ZSA2NS4zNSBtaWxsaW9uIG9mIHBsYXllcnMuIApBIGxhIGZpbiBkZSBsYSBkZXJuaXJlIGdsYWNpYXRpb24gKFdybSksIGxhIG1lciBlc3QgICAxMjAgbXRyZXMgcGFyIHJhcHBvcnQgIHNvbiBuaXZlYXUgYWN0dWVsLiAKRGlzcmVnYXJkaW5nIHBlcmZvcm1hbmNlIGNvbmNlcm5zLCBJIHN0aWxsIG5vdCB5ZXQgcmVhZHkgdG8gZ2l2ZSB1cCBvbiBmcmVlciBlZmZlY3RzLiBUaGUgaW5hYmlsaXR5IChJSVJDKSB0byBjcmVhdGUgYSBDb250VCBsaWtlIGludGVycHJldGVyIGxpdGVyYWxseSBtZWFucyBub3RoaW5nIHRvIG1lLCBhbmQgSSBob25lc3RseSB0aGluayB0aGF0IGF0IGxlYXN0IGNvbmNlcHR1YWxseSB0aGV5IG1ha2UgbW9yZSBzZW5zZSB0aGFuIG1vbmFkIHN0YWNrcy4gVGhhdCBpcywgY29uY2VwdHVhbGx5LCBpZiBvbmUgaWdub3JlcyBwZXJmb3JtYW5jZSBhbmQgdGhlIGhhcnJvd2luZyBzeW50YXggZm9yIGNyZWF0aW5nIGludGVycHJldGVycyAobXVjaCBvZiB3aGljaCBzdGVtcyBmcm9tIEhhc2tlbGwgbGFjayBvZiBvcGVuIGRhdGEgdHlwZXMsIGJ1dCBJIHNhdmUgdGhhdCByYW50IGZvciBhbm90aGVyIGRheSkuLiAKMjAwayBncmFudCB0byBSb3NzZm9yZCBkZXBhcnRtZW50cwpQdXR0aW5nIERvd24gUm9vdHMgaGFzIGJvdGggVGF0dGxldGFsZSBhbmQgU29waGlhIGV2ZW50dWFsbHkgc2Vjb25kIHRyaWdnZXIuCkl0IGlzIGFjdHVhbGx5IGEgcHJldHR5IGNvb2wgcGxheSBhcmVhLiBUaGV5IGhhdmUgYSB3aG9sZSB0b3duIGluIHZhcmlvdXMgY3ViaWNsZXMuIFRoZXkgaGF2ZSBhIG1vY2sgRmlyZXN0YXRpb24sIFBvbGljZSBzdGF0aW9uLCByZXN0YXVyYW50LCBncm9jZXJ5IHN0b3JlLCBhbmQgZG9sbHkgbnVyc2VyeSwgYW5kIGEgZnVsbCBwbGF5aG91c2UgaW4gdGhlIGJhY2sgcm9vbS4gCkJ1dCBMaW51eCBpcyBsb3ZlbHkuIApBZnRlciBhbGwsIHRoZXJlIGhhdmUgYmVlbiBhdXRvbWF0ZWQgbWFjaGluZXMgdGhhdCBoYXZlIHRha2VuIGpvYnMgZnJvbSBmb2xrcyBnb2luZyBiYWNrIHRob3VzYW5kcyBvZiB5ZWFycy4gCllvdSBjYW50IG1ha2UgdGhpcyBzaGl0IHVwIGZvbGtzIVRob3NlIGFyZSBwYXBlciB0b3dlbHMgeW91IGltYmVjaWxlVGhleSBwYXBlciB0b3dlbHMsIG1vcm9uVGhleSBjbGVhcmx5IHBhcGVyIHRvd2Vscy4gCkknbSB0cnVseSBodW1ibGVkIHRvIHNheSB0aGF0IG15IHBhcnRuZXIgaW4gY3JpbWUgYW5kIEkgdW5vZmZpY2lhbGx5IHJldGlyZWQgbGFzdCB5ZWFyLiBUaGlzIG1lYW5zIHdlIGhhdmUgZW5vdWdoIG1vbmV5IHRvIGxhc3QgdXMgYSBjb3VwbGUgb2YgbGlmZXRpbWVzLCB1bmxlc3Mgb3VyIGtpZHMgc2NyZXcgaXQgdXAuIElzbid0IHRoYXQgaG93IGl0IGdvZXM/IFRoZSBmaXJzdCBnZW5lcmF0aW9uIGJ1aWxkcyBpdCwgdGhlIHNlY29uZCBvbmUgZXhwYW5kcyBpdCAgIG9yIHlvdSBob3BlIHRoZXkgZG8gICBhbmQgdGhlIHRoaXJkIG9uZSBsb3NlcyBpdCBhbGwsIHJpZ2h0Py4gCkF0IHRoZSBlbmQgb2YgdGhlIGRheSB5b3UgYXNraW5nIHRoaXMgcXVlc3Rpb24gaXMgY29tcGxldGVseSB1c2VsZXNzIGJ5IHRoZSB3YXkuIFdoeSBkb24geW91IHNwZW5kIDEwMCBob3VycyBwbGF5aW5nIGJvdGggYW5kIGZpZ3VyZSBvdXQgd2hpY2ggaXMgYmV0dGVyIGZvciB5b3U/IFdoeSBkb24geW91IHRyeSBwbGF5aW5nIG9uIGRpZmZlcmVudCBzaXRlcyB0byBzZWUgd2hhdCBwbGF5ZXJzIHlvdSBwbGF5IGJldHRlciBhZ2FpbnN0PyBJIGZlZWwgbGlrZSBJIGhhdmUgdG8gdHlwZSB1cCBvYnZpb3VzIGFuc3dlcnMgd2hlbiBwZW9wbGUgYXNrIHRoZXNlIHR5cGVzIG9mIHJoZXRvcmljYWwgcXVlc3Rpb25zLi4gClRoZSBjZW50cmFsIHF1ZXN0aW9uIHN1cnJvdW5kaW5nIHRoZSBsZWdhbGl0eSBvZiB0aGUgaW5kdXN0cnksIG9uIHdoaWNoIEFtZXJpY2FucyBjb25zdW1lcnMgc3BlbmQgJDYgYmlsbGlvbiBhbm51YWxseSwgaGFzIGJlZW4gd2hldGhlciBwb2tlciBpcyBhIGdhbWUgb3Igc2tpbGwgb3IgbHVjay4gRGVzcGl0ZSB0aGlzLCB0aGUgcGFwZXIgc2F5cywgIltzXXRhdGUgY291cnRzIHRoYXQgaGF2ZSBydWxlZCBvbiB3aGV0aGVyIHBva2VyIGlzIGEgZ2FtZSBvZiBza2lsbCB2ZXJzdXMgbHVjayBnZW5lcmFsbHkgaGF2ZSBkb25lIHNvIGluIHRoZSBhYnNlbmNlIG9mIGFueSBzdGF0aXN0aWNhbCBldmlkZW5jZVsuXSIKU3BpZGVyT2ZDYW50ZXJ2aWxsZSB1CkN1cnJlbnQgZGVtb2NyYWN5IHdhcyBoYXJkIGZvdWdodC4/IEkgaGF2ZSB0byBjb21wbGV0ZWx5IGRpc2FncmVlLiAKQnkgMjAwNyB0aGV5IHdlcmUgYSBmYXNoaW9uIGNyYXplIGFuZCB0aGVpciBwcmVzZW5jZSBvbiB0aGUgaGlnaCBzdHJlZXQgYmVjYW1lIHViaXF1aXRvdXMuLiAKRGllIERvc2lzIHdpcmQgdGdsaWNoIHVtIGVpbmVuIFRyb3BmZW4gZXJoaHQgKHp1ciBHZXdobnVuZykuIApIZSBsaWtlZCBwbGF5aW5nIGNhcmRzLCBhbmQgb25lIG9mIHRoZSBnYW1lcyBoZSBwbGF5ZWQgdGhlIGRheSBvZiB0aGUgcmV2ZWxhdGlvbiB3YXMgY2hvaWNlLiBUaGUgZGVhbGVyIGNob3NlIGJsYWNramFjaywgYW5kIEJhbGR3aW4gcXVpY2tseSBsZWFybmVkIHRoZSBydWxlcy4gT25lIHRoaW5nIGhlIGxlYXJuZWQgd2FzIHRoYXQgaW4gY2FzaW5vIGJsYWNramFjayB0aGUgZGVhbGVyIGlzIGFuIGF1dG9tYXRvbi4gVGhhdCBpcywgdGhlIGRlYWxlciBtYWtlcyBubyBjaG9pY2VzOyBoZSBzaW1wbHkgZm9sbG93cyB0aGUgaG91c2UgcnVsZXMuIFRvIHVuZGVyc3RhbmQgdGhpcyBsZXQgbWUgZXhwbGFpbiBhIGJpdCBvZiBob3cgYmxhY2tqYWNrIGlzIHBsYXllZCBpbiBhIHR5cGljYWwgQW1lcmljYW4gY2FzaW5vLgpUaGlzIGlzIGEgZ3JlYXQgcG9pbnQgdG8gaGl0IGlmIHlvdSBhcmUgcGFzdCBmb3J0eSB3ZWVrcyBhbmQgbG9va2luZyBmb3IgYW4gaW5kdWN0aW9uLCBidXQgaXQncyBpbXBvcnRhbnQgdGhhdCB5b3VyIG1hc3NhZ2UgdGhlcmFwaXN0IGF2b2lkIHRoaXMgc3BvdCBiZWZvcmUgZm9ydHkgd2Vla3MuIFlvdXIgbWFzc2FnZSB0aGVyYXBpc3Qgc2hvdWxkIGFsc28gYXZvaWQgdGhlIGFjdXByZXNzdXJlIHBvaW50IGFib3ZlIHRoZSBhbmtsZS4gClRoYXQgaXMgbm90IGF0IGFsbCByZWxldmFudCB0byB3aGF0IEkgc2F5aW5nLiAKQXMgYSBmZWxsb3cgcG9rZXIgcGxheWVyIGkgc2hvdWxkIHdhcm4geW91IHRob3VnaCwgaG9sbGFuZCBjYXNpbm8gaXMgcXVpdGUgYSBzaGl0c2hvdy4gQ2FzaCBnYW1lcyBhcmUgYWxtb3N0IG5vbiBleHNpc3RlbnQgKG9mdGVuIHlvdSBldmVuIGhhdmUgdG8gcmVzZXJ2ZSBhIGEgc3BvdCBhIGZldyBkYXlzIGluIGFkdmFuY2UpLCBleGNsdXNpdmVseSBoaWdoIHN0YWtlcyBhbmQgSEMgY2hhcmdlcyBpbnNhbmUgcmFrZS4gU2VydmljZSBpcyBnZW5lcmFsbHkgYWxyaWdodCB0aG91Z2ggaXZlIGhlYXJkIHNvbWUgcHJldHR5IGluc2FuZSBzdG9yaWVzIGFib3V0IHNoaXR0eSBzZXJ2aWNlLiAKQnV0IHRoZXJlIG5vIGdsYXJpbmcgaXNzdWUuIApGaXJzdCwgTE4gaXMgYSBzbWFydCBjb250cmFjdHMgcG93ZXJlZCBwcm90b2NvbC4gCk56aGRlaCBjcmVhdGVkIHRoZSBpbmZhbW91cyBBcm1lbmlhbiBMZWdpb24sIGFwcHJveGltYXRlbHkgMzAsMDAwIG1lbiwgYW5kIG1hZGUgdGhlbSBhdmFpbGFibGUgdG8gdGhlIE5hemkgY29tbWFuZCBkdXJpbmcgV29ybGQgV2FyIElJLiAKQW5kIHRoZSBzdGF0ZW1lbnQgdGhhdCBoZSBnYXZlIGF0IHRoZSBjcmlja2V0IGdyb3VuZCBoYWQgdXMgZXZlbiBtb3JlIGNvbmZ1c2VkLiBPbiB0aGUgb25lIGhhbmQsIG91ciBqZXQgZmlnaHRlcnMgYXJlIHBvdW5kaW5nIHRoZSBUYWxpYmFuIHRhcmdldHMsIG9uIHRoZSBvdGhlciBvdXIgaW50ZXJpb3IgbWluaXN0ZXIgaXMgaW52aXRpbmcgdGhlIFRhbGliYW4gZm9yIGEgY3JpY2tldCBtYXRjaC4gCkFuZCBhY2NvcmRpbmcgdG8gdGhlIENvdW5jaWwgb24gQ29tcHVsc2l2ZSBHYW1ibGluZyBvZiBOZXcgb2YgdGhvc2Ugd2hvIGV4cGUgIHJpZW5jZSBtb3JlIHNldmVyZSBwcm9ibGVtcyBhbmQgaHBjb21lIHBhdGhvbG9naWNhbCBtb3N0IGFyZSBwZW9wbGUgd2hvIHN0YXJ0IGdhbSAgYmxpbmcgYmVmb3JlIHRoZXkgcmVhY2ggMTQuIApDJ2VzdCBwYXJjZSBxdWUgbGVzIGFyb21hdGVzIG9udCwgZGFucyB1biBwcmVtaWVyIHRlbXBzLCB0IGRlc3RpbnMgYXV4IGFjdGl2aXRzIHRocmFwZXV0aXF1ZXMgZXQgc3Bpcml0dWVsbGVzLCBxdSdpbHMgc29udCwgZGUgZmFpdCwgdG9tYnMgZW50cmUgbGVzIG1haW5zIGRlIHJlbGlnaWV1eCBldCBkZSBtZGVjaW5zLiBEcyBsJ0FudGlxdWl0LCBldCBjZWxhIGF1dGFudCBjaGV6IGxlcyBIYnJldXggcXVlIGNoZXogbGVzIEdyZWNzIGV0IGxlcyBSb21haW5zLCBsZXMgcHJjaWV1eCBhcm9tYXRlcyBzb250IHV0aWxpc3MgIGRlcyBmaW5zIHNwaXJpdHVlbGxlcyBldCByZWxpZ2lldXNlcy4gT24gZW4gY29tcG9zYWl0IGRlcyBodWlsZXMgZXQgZGVzIGJhdW1lcyBwYXJmdW1zIHF1J29uIGFwcGxpcXVhaXQgZHZvdGVtZW50IHN1ciBsZXMgc3RhdHVlcyBkZXMgZGl2aW5pdHMsIGRvbnQgb24gZW1iYXVtYWl0IGxlcyBjYWRhdnJlcyBldCBkcG9zYWl0IG1tZSBkZXMgZmxhY29ucyAgbCdpbnRyaWV1ciBkZXMgdG9tYmVzLCBldGMuIApGb3JtZXIgV29ybGQgMSBEYW5pZWwgTmVncmVhbnUgKEdQSTMpIGhhcyBlbmpveWVkIHlldCBhbm90aGVyIHZlcnkgc3VjY2Vzc2Z1bCBzZWFzb24gb24gdGhlIGxpdmUgdG91cm5hbWVudCBjaXJjdWl0LiAKOk8pIFNvLCBoZXJlIFlvdSBnbywgcGx1Y2tpbicgZG93biBzb21lIG9mIG15IGhhcmQgZ290IDI1IHNtYWNrZXJzLCBhbmQgZ3Vlc3Mgd2hhdCEgJ0kgZmVlbCBnb29kLCBsaWtlIEkndmUga25ldyBzbyBJIHdvdWxkJyBbeWVhaCwgbXkgbmV3IG1hbiBCcnVjZSBCIGFjY29tcGxpc2hlZCBtZSBhcnRpY3VsYXRlIHRoYXRdLiBTbywgWUVTLCBJIGRvIHJlYWxseSBkbyBmZWVsIGdvb2QuIEkgZ2VudWluZWx5IGdvb2QgaW4gdGhlIHJlZ2lvbiBvZiB0aGlzIHByb2dyYW0sIGFuZCBiZWNhdXNlIEkgYWNxdWlyZSBtYWRlIGEgcGFydGljdWxhciB2ZXJ5IHJpZ2h0IGFuZCBwcmFjdGljYWwgZmluYW5jaWFsIHB1cmNoYXNlLkFuZCBmaW5hbGx5LCB0aGUgaXNzdWUgYnVnIHJlbWFpbnMgYml0aW5nIHJlc3RyaWN0aW5nIGVuZCBUb255IGFkYW1vd2ljeiBNb2Vha2kgbG9jYXRlZCBpbiB0aGUgZ2x1dGVzIChvciBhY3R1YWxseSwgaW4gYWxsIGFybSByZXN1bHRpbmcgaW4gYSBicm9rZW4gc2hvdWxkZXIgZG9pbmcgdGhlIFN0ZWVsZXJzIGdhbWUpLCBhcyBpdCBjb21wb25lbnQgaGFzIHlvdXIgQ2hpZWZzIGxlYWRpbmcgb2ZmaWNlIGxvb2tpbmcgZm9yIGZvciBpbmRpdmlkdWFscyB0aGF0IGRvZXMgc3RheSBhbHdheXMgb24gdGhlIGxpbmUgb2YgYnVzaW5lc3MgYXMgYSBtYWpvciAzIEdvbGRlbiBHb29zZSBGcmFuY3kgU25lYWtlcnMgZXN0cmljdGVkIGVuZC4gClRoYW5rIHlvdSBmb3IgYmVpbmcgb3VyIGd1ZXN0LCBhbmQgd2UgbG9vayBmb3J3YXJkIHRvIHNlZWluZyB5b3UgYWdhaW4gc29vbi4gClNldmVudHkgZGF5cyB3ZW50IGJ5IHdpdGhvdXQgYSBzaW5nbGUgZGF5IG9mZi4gSSBjYW4gc3RpbGwgZmVlbCB0aGUgcGFpbiBpbiBteSBmZWV0IGFmdGVyIGEgbG9uZyBzaGlmdCBhbmQgcmVtZW1iZXIgcnViYmluZyB0aGVtIGluIGFnb255LiBJZiBJIGhhZCBhbm90aGVyIGNoYW5jZSBhdCBidXNpbmVzcywgSSBuZWVkZWQgdG8gbWFrZSBpdCBjb3VudC4gVGhlIGNoYW5jZSBmaW5hbGx5IGFycml2ZWQgb25lIGRheSAgIGRheSA3MCwgaW4gZmFjdCB3aGVuIGFuIG9sZCBmcmllbmQgY2FsbGVkIGFuZCBvZmZlcmVkIG1lIHdoYXQgd291bGQgYmVjb21lIGEgbGlmZSBjaGFuZ2luZyBvcHBvcnR1bml0eS4gTXkgZnJpZW5kIGhhZCBidWlsdCBhbmQgb3duZWQgYSBtYXJrZXRpbmcgY29tcGFueSBhbmQgaGFkIHJlY2VudGx5IGZpcmVkIGhpcyBtYW5hZ2VyLiBIZSBuZWVkZWQgc29tZW9uZSB0byBoZWxwIHdpdGggdGhlIGRheSB0byBkYXkgcnVubmluZyBvZiBoaXMgYnVzaW5lc3MuCkZvb3QgYW5kIGFua2xlIHByb2JsZW1zIGFyZSBxdWl0ZSBjb21tb24uIFRoZXkgbWF5IGJlIGNvbmdlbml0YWwsIGFjcXVpcmVkIGR1ZSB0byBpbXByb3BlciBmb290d2VhciwgcmVzdWx0cyBvZiB0cmF1bWF0aWMgaW5qdXJpZXMsIGluZmVjdGlvbiBvciBjYXVzZWQgYnkgYXJ0aHJpdGlzClRvIGhlciBzdXJwcmlzZSB0aGUgc2FtdXJhaSB3YXMgd2VlcGluZyB3aXRoIGhhcHBpbmVzcyB0byBiZSBhdCBTdCBDbGVyYW5zLiBIdXN0b24gZXhwbGFpbmVkIGF0IGJyZWFrZmFzdCB0aGF0IGhpcyB0ZWFycyB3ZXJlIGEgZ3JlYXQgY29tcGxpbWVudCwgYXMgc2FtdXJhaSB3ZXJlIG9ubHkgcGVybWl0dGVkIHRvIGNyeSBhIGZldyB0aW1lcyBpbiB0aGVpciBsaXZlcy4gCjQuIApXZSBsaW1pdGVkIHRoZW0gdG9kYXkuIApCZWZvcmUgZmFsbGluZyBwcmVnbmFudCBJIGFsc28gd2FzIGRpYWdub3NlZCBhcyBiaXBvbGFyLiBJIHdvcmtlZCBoYXJkIHRvIGJlIGFibGUgdG8gbWFuYWdlIGl0IGFuZCBmaW5hbGx5IGFmdGVyIHllYXJzIG9mIG1lZGljYXRpb24gYW5kIHRoZXJhcHkgZ290IHRvIGEgZ29vZCBwbGFjZS4gCkl0IGlzIGEgYm91dGlxdWUgdG93ZXIgdGhhdCBpcyBhIHZlcnkgaHVtYW4gc2NhbGUuIApTaGUgZ290IHByZXR0eSBzYWQgYWJvdXQgaXQuIFNoZSB3ZW50IGJhY2sgYSBmZXcgbW9udGhzIGFnbyBhbmQgZGlkIGJldHRlciwgc3RpbGwgbm90IGdvb2QgYnV0IHNoZSBpbXByb3ZlZC4gCldpbCBtZXIgQW5kZXJzb24sIDQ3NSBKLCBvciBNcnMuIFJheSBTZWx2b2EgNTRHIE0sIGJ5IFR1ZXNkYXksID09Pz1FREdFQlRPeSwgV0kzLj01Xj0gUklBTFRPIFRIRUFURVIgRUFTVCBUSU1FIFRPTklHSFQgV2lsIDY6MzAgICA4OjNTIFNVTi4sIE1PTi4gQW5kIFRVQlMuIApBZ2FpbnN0IFBsYXllciBCIGhvbGRpbmcgIktkIEtzIEFkIEFoIDloIiwgMiBwYWlyLiBIZXJlIHRoZSBwb3Qgd2lsbCBub3QgZ2V0IHNwbGl0IGJlY2F1c2UgbmVpdGhlciBwbGF5ZXIgaG9sZHMgMiBoZWFydHMgYmVjYXVzZSBuZWl0aGVyIHBsYXllciBjYW4gY2xhaW0gNSBib2FyZCBjYXJkcy4gClRoZXNlIGJvb2tzIHNob3VsZCBnaXZlIHlvdSBhbiBpZGVhIG9mIHRoZSBjb3JlIHByaW5jaXBsZXMgaW4gcG9rZXIuIApBbHNvLCBtb3N0IHBva2VyIHJvb21zIGhhdmUgYSBwbGFjZSB0byBzaWduIGEgd2FpdGluZyBsaXN0IGZvciBhIHBhcnRpY3VsYXIgZ2FtZS4gU29tZSBoYXZlIGEgd2hpdGUgYm9hcmQgd2l0aCB0aGUgZ2FtZXMgYW5kIGxpbWl0cyBhdmFpbGFibGUgYWxvbmcgd2l0aCB0aGUgd2FpdGluZyBwbGF5ZXJzJyBpbml0aWFscy4gT3RoZXJzIHdpbGwganVzdCBoYXZlIHNvbWVvbmUgd2hvIHdyaXRlcyBpbml0aWFscyBvciBuYW1lcyBvbiBhIHNoZWV0IG9mIHBhcGVyLiBUaGUgY2FyZCByb29tIGNhbGxzIHRoZSBuZXh0IHBlcnNvbiBvbiB0aGUgbGlzdCB3aGVuIGEgc2VhdCBiZWNvbWVzIGF2YWlsYWJsZS4gU2ltcGx5IGFzayB3aG9ldmVyIGlzIGluIGNoYXJnZSBvZiB0aGUgYm9hcmQgICBvciBhIHN0YWZmIG1lbWJlciAgIHRvIHBsYWNlIHlvdSBvbiB0aGUgbGlzdCBmb3IgYWxsIG9mIHRoZSBnYW1lcyB5b3UgYXJlIHdpbGxpbmcgdG8gcGxheS4gSWYgeW91IGFyZSBpbiBhIHNtYWxsIHBva2VyIHJvb20gd2l0aCBubyB2aXNpYmxlIHNpZ24gdXAgYXJlYSwgYXNrIGEgZGVhbGVyIGhvdyB0byBlbnRlciBhIGdhbWUuClp1dm9yIHN0YW5kIGRpZXNlciBSZWtvcmQgbm9jaCBiZWkgcnVuZCA2NS4wMDAgT25saW5lICBuLiAKS2F6dW1hcmEgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpUZWxsIG1lLCB3aGF0IGNvdW50cnkgaXMgIm1vc3QiIGNhcGl0YWxpc3QgYWNjb3JkaW5nIHRvIHlvdT8gRG9uIHNheSB0aGUgVW5pdGVkIFN0YXRlcy4gCkR1ZSB0byBvbmUgb2YgaGlzIHRyZWF0bWVudHMsIG15IHNvbidzIHNob3RzIGhhZCB0byBiZSBkZWxheWVkIGZvciAxMCBtb250aHMuIEl0IGhhcyBiZWVuIHRoZSBtb3N0IHN0cmVzc2Z1bCAxMCBtb250aHMgb2YgbXkgbGlmZSBhbmQgSSBhbSBvdmVyam95ZWQgdGhhdCBoZSBjYW4gZmluYWxseSBnZXQgY2F1Z2h0IHVwLiBXZSBoYWQgdG8gZmluZCBhIHNwZWNpYWwgcHJlc2Nob29sIHRoYXQgb25seSBhbGxvd3MgbWVkaWNhbCBleGVtcHRpb25zIGZvciByZXF1aXJlZCBzaG90cyBhbmQgdGhleSBzZW5kIGEgY2hpbGQgaG9tZSBhdCB0aGUgaGludCBvZiBzaWNrbmVzcyB0byBwcm90ZWN0IHRoZSBvdGhlcnMuIFdlIGFyZSBmb3J0dW5hdGUgdG8gaGF2ZSBzb21lIGV4dHJlbWVseSBzdXBwb3J0aXZlIGZhbWlseSBhbmQgZnJpZW5kcywgYnV0IGhhdmUgc3RydWdnbGVkIHRocm91Z2ggZWFjaCAiYnJlYWsgdXAiIHdpdGggb3VyIHVuZWR1Y2F0ZWQgZmFtaWx5IG1lbWJlcnMuCkVpbiBQcm9ibGVtLCB3ZWxjaGVzIGljaCBkYW1pdCBzZWhlLCBpc3QgZGVyIHN0YXJrZSBFaW5mbHVzcywgZGVuIEVsdGVybiBhdWYgaWhyZSBLaW5kZXIgaGFiZW4uIERpZSBGcmFnZSwgd2VuIG1hbiBkZW5uIG51biB3aGxlbiBzb2xsLCBpc3QgZnIgdW5zIEVyd2FjaHNlbmUgc2Nob24gbmljaHQgZWluZmFjaCB1bmQgaWNoIGZocmUgdGVpbHdlaXNlIHNlaHIgbGFuZ2UgR2VzcHJjaGUgbWl0IG1laW5lbiBnZXJhZGUgMTggamhyaWdlbiBCZXdvaG5lcm4gZGFyYmVyLiBOaW1tdCBtYW4gamV0enQgbWFsIGFuLCBkYXNzIGluIHZpZWxlbiBGbGxlbiBkYXMgV2FobHZlcmhhbHRlbiBlaW5lcyBLaW5kZXMgc2VociBkaXJla3QgZHVyY2ggZGllIEVsdGVybiBiZXN0aW1tdCB3aXJkLCBkYW5uIGtubnRlbiBFbHRlcm4gc2ljaCBxdWFzaSB6dXN0emxpY2hlIFN0aW1tZW4gZ2ViZW4sIGluZGVtIHNpZSBtZWhyIEtpbmRlciBiZWtvbW1lbi4gClRoZSBtb2RlcmF0b3JzIHdpbGwgcG9zdCB0aGVtIG9jY2FzaW9uYWxseSwgc28gbG9vayBvdXQgZm9yIHRoZW0hNC4gCkkgc2hvdCB0b29rIGF0IDI1IGJ1eSBpbnMgdGhyb3VnaCAyMDBOTCBhbmQgbW92ZWQgZG93biBhdCAyMC4gCklmIGJvdGggbG9zZSwgeW91IGxvc2UuIApEZWt1IG9ubHkgdGFrZXMgdGhpcyByb3VuZCBpZiBTcGlkZXkgc3RhbmRzIHN0aWxsIGFuZCB0cmllcyB0byB0YW5rIHRoZSBwdW5jaC4gCiJUaGUgbG95YWx0eSBzcGFjZSBpdHNlbGYgaXMgZXZvbHZpbmcsIiBoZSBzYWlkLCBub3RpbmcgdGhhdCAiY29uc3VtZXIgZm9jdXNlZCBicmFuZHMgbmVlZCB0byBwdXNoIHRyYWRpdGlvbmFsIGxveWFsdHkgYm91bmRhcmllcyIgdG8gZHJpdmUgc2FsZXMgYW5kIGNyZWF0ZSBsb25nIHRlcm0gZW5nYWdlbWVudC4gRWFybGllciB0aGlzIHllYXIsIEtvaGwncyBjb21iaW5lZCBpdHMgdGhyZWUgcHJvZ3JhbXMsIEtvaGwncyBDYXNoLCBLb2hsJ3MgQ2hhcmdlLCBhbmQgWWVzMllvdSBpbnRvIG9uZSBzaW5nbGUgS29obCdzIFJld2FyZHMgc3lzdGVtLCB3aGljaCBpcyBub3cgYXQgMTAwIHN0b3JlcywgYW5kIHJvbGxpbmcgb3V0IG5hdGlvbmFsbHkgdGhyb3VnaCB0aGUgY29taW5nIGhvbGlkYXlzLi4gClhzdHJlYW1SZWRkaXQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQW5kIEkgZ2F0aGVyZWQgYWxsIHRoZSBtYXRlcmlhbCBjdXQgZnJvbSB0aGUgYXJ0aWNsZSBpbnRvIGEgbWFzc2l2ZSBibG9nIHBvc3QsIHdoaWNoIGRlYWx0IGV4cGxpY2l0bHkgd2l0aCB0aGlzIHF1ZXN0aW9uIG9mIHdoZXRoZXIgcG9rZXIgaXMgYSBnYW1lIG9mIGNoYW5jZSBvciBza2lsbC4uIApNZWRpY2F0aW9ucyBtYXkgcmVsaWV2ZSB0aGUgb2JzdHJ1Y3Rpb24gYnkgcmVkdWNpbmcgdGhlIGxvY2FsIGFyZWEgb2YgaW5mbGFtbWF0aW9uLiAKSGUgaXMgaW4gU3R5Z2lhLCB0aGUgNXRoIGxheWVyIG9mIGhlbGwsIGFuZCBiZWluZyBwdXJzdWVkIGJ5IExldmlzdHVzIHdobyB3YW50cyB0aGUgS3Jha2VuIGhlbHAgaW4gYmVpbmcgZnJlZWQgZnJvbSBoaXMgaWN5IHByaXNvbi4gClNwdGVyIGZvbGd0ZW4gQXJiZWl0ZW4gbWl0IFJlc3QgIHVuZCBGdW5kc3Rja2VuIGluZHVzdHJpZWxsZXIgUHJvZHVrdGlvbiB2b24gU2Nocm90dHBsdHplbi4gClRha2luZyBvdmVyIHJhZGlvIHRvd2VycyB0byBvcGVuIHVwIHRoZSBtYXAgc28geW91IGNhbiBhY3R1YWxseSBwbG90IGEgam91cm5leSBiZWNvbWVzIG1vcmUgYW5kIG1vcmUgVG9tYiBSYWlkZXIuIApEdXJpbmcgYSByZWNlbnQgY29udmVyc2F0aW9uLCBHYXJyZXR0IHRhbGtlZCBhYm91dCBzb21lIG9mIHRob3NlIHJpZ2h0IHBsYWNlLCByaWdodCB0aW1lIG1vbWVudHMuCkl0IGlzIHJhcmUgdG8gbG9zZSAxNSBoYW5kcyBpbiBhIHJvdywgYnV0IG5vdCB1bmhlYXJkIG9mLiBJZiB5b3Ugd2FhbnQgdG8gZ2FtYmxlLCBhbmQgYmUgInNhZmUsIiBieSB3aGljaCBJIGFzc3VtZSB5b3UgbWVhbiBtaW5pbWl6ZSB5b3VyIGxvc3NlcywgeW91ciBiZXN0IGJldCBpcyB0byBsZWFybiBwb2tlci4KTGFuZ3VhZ2UgYW5kIHB1YmxpY2F0aW9uIHJlc3RyaWN0aW9ucyBtaWdodCBtZWFuIHRoYXQgc3R1ZGllcyB3ZXJlIG1pc3NlZCBhbmQgdGhlIHJlbGF0aXZlIGJpYXNlcyBjb3VsZCBub3QgYmUgcnVsZWQgb3V0LiAKKEZ1bGwgQW5zd2VyKS4gCkkgd291bGRuIHNheSB0aGUgc2lnbnMgYXJlIGFjY3VyYXRlLCB0aGUgcG9zaXRpb25pbmcgb2YgdGhlIGNvbnN0ZWxsYXRpb25zIGFjdHVhbGx5IGNoYW5nZWQgc2luY2UgdGhlaXIgaW5jZXB0aW9uIHNvIHRoZSB6b2RpYWMgY2FsZW5kYXIgdGhhdCBwZW9wbGUgdXNlIHRvZGF5IGlzbiBldmVuIHRoZSBhY2N1cmF0ZS4gClRoaXMgaGlzdG9yaWMgYW5kIHBpY3R1cmVzcXVlIG1pbmluZyB0b3duIHNpdHMgcmlnaHQgaW4gdGhlIG1pZGRsZSBvZiBMYXMgVmVnYXMgYW5kIExhdWdobGluLiBKdXN0IGZvdXJ0ZWVuIG1pbGVzIHVwIHRoZSBoaWxsIGZyb20gYmVhdXRpZnVsIENvdHRvbndvb2QgQ292ZSBvbiBMYWtlIE1vaGF2ZS4gV2UgYXJlIGEgcGVyZmVjdCBwbGFjZSBmb3IgYW4gYWZ0ZXJub29uIGRyaXZlIHRocm91Z2ggdGhlIGJlYXV0aWZ1bCBOZXZhZGEgZGVzZXJ0LiAKUGh5c2ljYWwgd2l0aGRyYXdhbCBzeW1wdG9tcyB3aWxsIGhhcHBlbiB3aXRoIG1lZGljYXRpb25zIGZvciBkZXByZXNzaW9uLCBkaWFiZXRlcywgaGlnaCBibG9vZCBwcmVzc3VyZSwgYW5kIHRoZSBsaXN0IGdvZXMgb24gYW5kIG9uLiAKVW5sZXNzIGl0J3MgYSBzcGVjaWFsIG9jY2FzaW9uLCBJIGNvb2sgd2hvbGUzMC9wYWxlbyBhdCBob21lLiBJJ2xsIHBpY2sgdXAgc29tZSBjb3JuIHRvcnRpbGxhcyBvciBtYWtlIHBhbmNha2VzIGZyb20gdGltZSB0byB0aW1lLCBidXQgaXQncyByYXJlLiAKSSByZWFsbHkgbmVlZGVkIGl0LiBUaGFuayB5b3Ugd2hvZXZlciBkb25lIGl0LiAKSWYgaGUgZG9lcywgSSB0aGluayBsZWFuaW5nIHRvd2FyZHMgYSA0YmV0IGhlcmUgaXMgYmV0dGVyIGZvciB1cy4gSWYgaGUgZG9lcyBub3QsIHRoZW4gd2UgY2FuIGNhbGwgYW5kIGJlIGhhcHB5IHRvIGJldCB3aGVuIGNoZWNrZWQgdG8gb24gYSBsb3Qgb2YgZmxvcHMgYW5kIHRha2UgaXQgZG93bi4gCkNyZWF0aW5nIEZhc2hpb25hYmxlIEVhcnJpbmdzIGZyb20gQ2hlYXAgQ2xheSBQb2tlciBDaGlwcwpMaWtlIHlvdSBhbGx1ZGVkIHRvLCBpZiB5b3UgaGF2ZSBhIGxhcmdlIHBvc3QgZmxvcCBlZGdlLCB0aGUgRVYgb2Ygd2Vha2VyIGhhbmRzIGdvIHVwIGFuZCB3ZSBjYW4gcHJlZmVyIGNhbGxzIHJhdGhlciB0aGFuIGp1c3QgdGFraW5nIGRvd24gdGhlIGJsaW5kcy4gClRleGFzIEhvbGQnZW0gbSBQb2tlciBQcmFjdGljZSBUaXAgIDI6IERvIG5vdCBob2xkIGFueSBsb25naW5nIG9yIGhvcGUgZm9yIHVucmVsYXRlZCBjYXJkcy4gT2theSwgYmVnaW5uZXJzIHVzdWFsbHkgcGluIHRvbyBtdWNoIGhvcGUgaW4gcmFuZG9tIGNhcmRzIHRoaW5raW5nIGlmIHRoZXkgaGFkIGEgMyBhbmQgYSA2IG9mIGhlYXJ0cywgaXQgbWlnaHQgZm9ybSBhIHN0cmFpZ2h0LiAKR3JlZW5zIE1QIGFuZCBHYW1ibGluZyBIYXJtIHNwb2tlc21hbiwgSnVzdGluIEZpZWxkLCBzYWlkIHRoZSBCYWxsaW5hIGNvbW11bml0eSBsb3N0ICQxOSBtaWxsaW9uIG92ZXIgdGhlIHBhc3QgeWVhciwgb3IgJDM3NSw4NjYgYSB3ZWVrLCBvbiBwb2tpZXMuCkVESVQ6IEkgd291bGQgbG92ZSB0byBoZWFyIHNvbWUgY291bnRlcnBvaW50cyBmcm9tIHRoZSBkb3dudm90ZXJzLiBUbyBiZSBjbGVhciwgSSBhbSBzdGFuZGluZyBieSBteSBvcmlnaW5hbCBjbGFpbSB0aGF0IGl0IGlzIHBvc3NpYmxlIGZvciBhIHBva2VyIHBsYXllciB0byBjb25jZWl2YWJseSBpZGVudGlmeSBhbmQgdGFrZSBhIEdUTyBsaW5lIGluIHRoZSBtYWpvcml0eSBvZiBzcG90czsgYW5kIEkgY29uY2VkZSB0aGUgcG9pbnQgdGhhdCBwbGF5aW5nIEdUTyAxMDAlIG9mIHRoZSB0aW1lIGlzIGltcG9zc2libGUgYmVjYXVzZSBjb21wbGV0ZWx5IHNvbHZpbmcgdGhlIGdhbWUgKGFuZCB0aGVyZWZvcmUgdHJ1bHkgcGxheWluZyBHVE8pIGlzIGltcG9zc2libGUuIEJ1dCB0aHJvdWdoIGludGVuc2Ugc3R1ZHkgb2YgZW5vdWdoIGRlY2lzaW9uIHRyZWVzIHRoZSBhcHByb3hpbWF0aW9ucyBvZiBHVE8gbGluZXMgYXJlIGNsb3NlIGVub3VnaCB0byBlbmFibGUgYSBwbGF5ZXIgdG8gcmVhY2ggdGhpcyBsZXZlbCBvZiBwbGF5Li4gCkl0IGlzIHJhcmUgdGhhdCB0aGV5IHdpbGwgcGF5IG9mZiBob3dldmVyLiBXaGVuIHlvdSBzaG93IG90aGVycyB0aGF0IHlvdSdyZSBub3QgYmV0dGluZyBvbiBhbnkgb2xkIHRoaW5nIHRoYXQgY29tZXMgdGhyb3VnaCwgeW91ciBiZXRzIHdpbGwgaGF2ZSBtb3JlIHdlaWdodCBhbmQgeW91J2xsIGJlIGNvbnNpZGVyZWQgbW9yZSBjb25zZXJ2YXRpdmUuIApCeSBMbG95ZCBJLiBXaGlsZSBJIGRvbiBoYXZlIGEgbWFqb3Igc3VydmV5IHRvIHBvaW50IHRvLCBteSB3b3JrIGRlbWFuZHMgdGhhdCBJIHBheSBhdHRlbnRpb24gdG8gdGhpcyBlcGlkZW1pYyBhbmQgdGhlIHN0b3JpZXMgd3JpdHRlbiBhYm91dCBpdCBhbmQgdGhhdCBJIGVuY291cmFnZSBvdGhlcnMgdG8gdGFrZSBpdCBzZXJpb3VzbHkgYXMgd2VsbC4KQXMgQml0TWV0aG9kIGdyZXcgSSByYW4gb3V0IG9mIGh1bWFuIGJhbmR3aWR0aCB0byBwcm9wZXJseSBjYXJlIGFuZCBncm93IGJvdGggYnVzaW5lc3Nlcy4gCkknbSBzdXJlIHRoYXQgaGUgd291bGQgdmlnb3JvdXNseSBhcmd1ZSB0aGF0IGhpcyAidmVyeSB1bmlxdWUiIHNwZWNpZmljIGpvYiBhbmQgb2ZmaWNlIGN1bHR1cmUgInJlcXVpcmVzIiBhbGwgb2YgdGhlLCBhaGVtLCAibmV0d29ya2luZyI7IHRoYXQgYW55b25lIG9uIHRoZSBvdXRzaWRlICJqdXN0IHdvdWxkbid0IHVuZGVyc3RhbmQiIGxpa2UgYSBwZXR1bGFudCB0ZWVuYWdlciBleHBsYWluaW5nIHRvIGhpcyBwYXJlbnRzIHRoYXQgZXZlcnlib2R5IGlzIGRyaW5raW5nIGFuZCBkb2luZyBkcnVncy4gSWYgdGhpcyB3ZXJlIHRydWUsIHRoZW4gdGhlcmUgY291bGQgYmUgbm8gc29iZXIgcGVvcGxlIHRoYXQgaGFkIGFueSBzdWNjZXNzIGluIGhpcyBlbnRpcmUgaW5kdXN0cnkuIFRoYXQncyBvYnZpb3VzbHkgbHVkaWNyb3VzLCBidXQgdG8gYSBjb21taXR0ZWQgYW5kIHNlbGZpc2ggcGFydHkgYm95LCB0aGlzIGlzIGEgcmVhc29uYWJsZSBhcmd1bWVudC4uIApUcnkgdGhpcyBmb3IgMzAgc2Vjb25kcy4gVHJ5IHRvIGVudW5jaWF0ZSB0aGUgZW5kcyBvZiB5b3VyIHdvcmRzIGZvciAzMCBzZWNvbmRzIHRvIGFwcGVhciBtb3JlIGNvbmZpZGVudC4gCkhlIGNhbiBjaGVjayBhbmQgdGhlIHBsYXllciB0byBoaXMgbGVmdCB0aGVuIGhhcyB0aGUgb3B0aW9uIG9mIGJldHRpbmcgb3IgY2hlY2tpbmcuIElmIHRoZXJlIGlzIGEgYmV0IGFuZCBhIHBsYXllciBhY3RpbmcgYWZ0ZXIgdGhlIGJldCBtdXN0IGNhbGwsIGZvbGQgb3IgcmFpc2UuIApVbmVtcGxveWVkIGZvciB0d28geWVhcnM/IElzIHRoaXMgZHVlIHRvIGhpbSB0cnlpbmcgZm9yIGEgc3BlY2lmaWMgZmllbGQgb3IgaXMgaGUgdW5hYmxlIHRvIGZpbmQgYW55IGZvcm0gb2YgaW5jb21lIHdoYXRzb2V2ZXIgaW4gdGhlIGxhc3QgdHdvIHllYXJzPyBJIGRvbid0IGtub3cgdGhlIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcyBpbiB5b3VyIGFyZWEgb3IgaGlzIHNwZWNpZmljIGZpZWxkLCBidXQgSSdtIGluY2xpbmVkIHRvIHRoaW5rIGhlJ3Mgbm90IHRyeWluZyBhcyBoYXJkIGFzIGhlIHNob3VsZCB0byBnZXQgYSBqb2IgaWYgaGUgaGFzbid0IGhhZCBhbnl0aGluZyBmb3IgdHdvIHllYXJzLiAKQ2xhcml0eXkgIDY1IHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCk5vdCBvbmx5IGRvIHRoZXkgbGVhcm4gYSBsb3QgYWJvdXQgdGhlIGNhbmRpZGF0ZXMgdGVjaG5pY2FsIHNraWxscywgTWVzc3JzLiAKVHJhdmVsaW5nIGV4aGliaXRpb25zIGRvIG5vdCB0eXBpY2FsbHkgY291bnQgYXMgYmVpbmcgdGhlIHNhbWUgc2hvdy4gCllvdSBoYXZlIHRydXN0IGlzc3Vlcy4gClRoaXMgaXMgYWxzbyBhbiBpbnNpZ2h0IHRvIHRoZSBkdXJhdGlvbiBvZiBzb21lIG9mIHRob3NlIGJhdHRsZXMgdG8gY29uc3RydWN0IHN1Y2ggYSBzdGF0aW9uIGltcGVydmlvdXMgdG8gcG9zc2libHkgc2VtaSBjb250aW51b3VzIGJvbWJhcmRtZW50IG1lYW50IHRoYXQgdGhlIGxpbmVzIG9mIGJhdHRsZSB3ZXJlIHN0YXRpYywgd2l0aCBtYW55IG9mIHRoZSBtYWpvciBlbmdhZ2VtZW50cyBvZiBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2Ygc29sZGllcnMgbGFzdGluZyBmb3IgbW9udGhzLCBhbmQgaW4gc29tZSBjYXNlcywgeWVhcnMuIEV4cHJlc3Npb25zIGhlcmUgYXJlIGRpZmZpY3VsdCwgYW5kIGRpZmZpY3VsdCB0byBhY3R1YWxseSByZWNvZ25pemUgYXMgYW55dGhpbmcgdGhhdCBpc24gZXhoYXVzdGlvbi4uIApUaGlzIGFwcHJvYWNoIGNhbiBiZSB1c2VkIHRvIHVuZGVyc3RhbmQgdGhlIG5ldXJvYmlvbG9naWNhbCB1bmRlcnBpbm5pbmdzIG9mIG1lZXRpbmcgd2l0aCBhIHBvdGVudGlhbCBjbGllbnQgZm9yIHRoZSBmaXJzdCB0aW1lLi4gCkF0IHRpbWVzIGl0IGhhcyBmZWx0IGxlc3MgbGlrZSBhIGJvb2sgYW5kIG1vcmUgbGlrZSBJJ20gcGFydCBvZiBzb21lIGtpbmQgb2Ygc29jaWFsIG1vdmVtZW50LiAKRG9uIHdvcnJ5IHRvbyBtdWNoLCBhbmQgZW5qb3kgeW91ciBzdGF5ISBJdCBhIGdyZWF0IGNpdHksIGVzcGVjaWFsbHkgaW4gdGhlIHN1bW1lci4gSSB3ZW50IHRvIGEgbGFuZ3VhZ2Ugc2Nob29sIChEaWUgTmV1ZSBTY2h1bGUgaW4gQ2hhcmxvdHRlbmJ1cmcpIHdoZXJlIEkgYWxzbyBnb3QgbXkgQzEgR29ldGhlIFplcnRpZmlrYXQgaW4gR2VybWFuLi4gCkl0IHN0b3BzIG1hbnkgb2YgdGhlIGJlc3QgbGVhZGVycyBmcm9tIGxlYWRpbmcgKGJlY2F1c2UgdGhleSBnYXkgb3IgcHJvbWlzY3VvdXMgb3IgZmF0KS4gCjEuIApCZXNpZGVzIHRoZSBmcmVlIGFkdmVydGlzZW1lbnQgb2YgYSBzZXJpZXMgb3Igd29yayBmcm9tIHRoaXMgc3ViLiBJdHMgYSBiaXQgZGlmZmVyZW50IHRvIG1hbmdhIGkgdGhpbmsuIE1hbmh3YSBhcnRpc3RzIGdldCBtb3N0IG9mIHRoZWlyIHByb2ZpdCBvbmxpbmUsIGllLiBub3Qgb24gaGFyZCBjb3BpZXMgZXRjLiBTbyBpZiBzb21lb25lIGRvIHNjYW50YWxhdGlvbnMgaXQgaGl0cyB0aGVtIG1vcmUgY29tcGFyZWQgdG8gYSBKYXBhbmVzZSBtYW5nYS4KWW91IGNhbiBtYWtlIHRoZSBhcmd1bWVudCB0aGF0IGEgdGhpbmtpbmcgdmlsbGFpbiBjYW4gZXhwbG9pdGl2ZWx5IGZvbGQgdG8gYSB0dXJuIG92ZXJiZXQgYmVjYXVzZSBpdCBpcyByYXJlbHkgYSBibHVmZiBhdCBsb3cgc3Rha2VzLCBidXQgaGUgY291bGQganVzdCBhcyBlYXNpbHkgYmUgdGhlIHR5cGUgb2YgcGxheWVyIHRvIGFzc3VtZSB0aGF0IGFuIG92ZXJiZXQgaXMgbW9yZSBsaWtlbHkgdG8gYmUgYSBkcmF3IGJlY2F1c2UgaXQgbG9va3MgbGlrZSB5b3UgZG9uIHdhbnQgYSBjYWxsLiBJdCB0b3VnaCB0byBnZXQgaW5zaWRlIHBlb3BsZSBoZWFkcy4KQmxvZ2dlcnMgcmVwb3J0ZWQgYmFkIGJsb29kIGFmdGVyIHRoZSBsb2dnZXIgZWxpbWluYXRlZCBCZWdsZWl0ZXIsIHdobyBzZWVtZWQgdG8gYmUgYSBtYXJrZWQgbWFuIGF0IHRoZSB0YWJsZSBvZiBuaW5lIHRoZSB3YXkgaGlzIHJhaXNlcyB3ZXJlIGNvbnNpc3RlbnRseSBtZXQgd2l0aCBiaWcgcmVyYWlzZXMgdGhhdCBwcm9tcHRlZCBoaW0gdG8gZm9sZC4gCkdvdmVybm1lbnQgcmVndWxhdGlvbiBpcyBub3QgYWx3YXlzIHRoZSBhbnN3ZXIuLiAKVGhleSBoYWQgYWJzIGNvcyB0aGV5IHdlcmUgbGVhbmVyIHRoYW4geW91LCBpdCB3YXNuIGJlY2F1c2UgdGhleSBnb3QgYSBncmVhdCB0cmFpbmluZyBlZmZlY3QgZnJvbSAzIHNldHMgYW5kIHlvdSBkaWRuIDYgMjM1LCAyNSAyOSUgYm9keWZhdC4gQXMgSSBzYWlkLCBJbSBtb3JlIG9mIGFuIE1lc28vRW5kb21vcnBoLiBUYWxsIHdpdGggbG9uZyBhcm1zIGFuZCBsZWdzLiAKQmVmb3JlIGZhbGxpbmcgcHJlZ25hbnQgSSBhbHNvIHdhcyBkaWFnbm9zZWQgYXMgYmlwb2xhci4gSSB3b3JrZWQgaGFyZCB0byBiZSBhYmxlIHRvIG1hbmFnZSBpdCBhbmQgZmluYWxseSBhZnRlciB5ZWFycyBvZiBtZWRpY2F0aW9uIGFuZCB0aGVyYXB5IGdvdCB0byBhIGdvb2QgcGxhY2UuIApQaWNrIHlvdXIgdG9wIFNpbmdsZSB0YXJnZXQgdGFsZW50cywgZG9uIHBpY2sgYW55IGFkZGl0aW9uYWwgdGFsZW50cy4gUGljayBhbGwgY29tcGV0aXRpdmUgZ2Vhci9hemVyaXRlIHRoYXQgeW91IGNhbiBmaXQuIApOb3Qgc3VyZSBpZiByZWNlaXZpbmcgb3JhbCB3aWxsIGV2ZXIgYmUgYSB0aGluZyB5b3UgZW5qb3kgYnV0IHRoZXJlIGEgY291cGxlIHRoaW5ncyB5b3UgbWlnaHQgdHJ5LgpBcm91bmQgdGhlIHRhYmxlLCBoZSB3b3VsZCBzYXkuIApCbG9vbSdzIGF0dG9ybmV5LCBMYXdyZW5jZSBGb3gsIGhhZCBhc2tlZCB0aGF0IEJsb29tIGJlIHRyaWVkIGVsc2V3aGVyZSBiZWNhdXNlIG9mIHdoYXQgaGUgdGVybWVkIGV4dGVuc2l2ZSBwdWJsaWNpdHkgYWJvdXQgdGhlIGNhc2UuIApUaGUgcmlzaW5nIHN0YXJzLCBLZWl0aCAiT25lIFRpbWUiIFRodXJtYW4sIEVycm9sICJUaGUgVHJ1dGgiIFNwZW5jZSBKci4sIEFkcmllbiAiVGhlIFByb2JsZW0iIEJyb25lciwgVGVyZW5jZSAiQnVkIiBDcmF3Zm9yZCwgTWlrZXkgR2FyY2lhLiBJJ2xsIGdyb3VwIHRoZXNlIGVsaXRlIGZpZ2h0ZXJzIHRvZ2V0aGVyIGJlY2F1c2UgdGhleSdyZSBhbGwgaW4gdGhlIGhpZ2hseSBjb21wZXRpdGl2ZSBhbmQgZ2xhbW9yb3VzIHdlbHRlcndlaWdodCBkaXZpc2lvbi4gS2VpdGggYW5kIEVycm9sIGNhbiBjaGFuZ2UgYW55b25lIGdhbWUgcGxhbiB3aXRoIGEgc2luZ2xlIHB1bmNoLiAKVGhhdCB0aGVyZSBhcmUgcmVhbCBjb25zZXF1ZW5jZXN0aGF0IGNvbWUgZnJvbSBldmVyeSBzaW5nbGUgZGVjaXNpb250aGF0IHlvdSBtYWtlLi4gCk92ZXJ2aWV3IGZvciBOb3N0eTg1Ckl0IGZlZWxzIHNvIHN1YnRsZSBidXQgeWVzIHlvdSBhcmUgb2xkZXIgc28gbWF5YmUgdGhhdCB3aGF0IGlzIGRpZmZlcmVudD8gVGhlcmUgcmVhbGx5IG5vIHdheSBvZiB0ZWxsaW5nLCBidXQgaXQga2luZCBvZiBmcmVha3MgeW91IG91dCwgc28geW91IHF1aXQgdGFraW5nIGl0LCBhbGwgeW91ciBoYWlyIGZhbGxzIG91dCwgYW5kIHlvdSB3YXN0ZWQgNCB5ZWFycyBvZiBwYXlpbmcgZm9yIGEgZHJ1ZyB0aGF0IGZ1Y2tzIHdpdGggeW91ciBoZWFkLCBsaXRlcmFsbHkuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25SZWdpc3RlcmVkIGNsdWJzIGluIHRoZSBJbGxhd2FycmEgYW5kIFNob2FsaGF2ZW4gYXJlIGJhdHRsaW5nIHRvIHN1cnZpdmUsIHdpdGggc2V2ZW4gYW1hbGdhbWF0aW5nIGFuZCBzaXggY2xvc2luZyBpbiB0aGUgcGFzdCBkZWNhZGUuIApCeSBzcGVuZGluZyA0IHBvaW50cywgeW91IGNhbiByZWdlbiAxIGFuZCByZWRpcmVjdCAyLCBvciByZWRpcmVjdCA0LiAKRnJlZSBNU1JQICQ1Ljc1IC4gCk5PVEU6IEhpcyByb29tbWF0ZSBoYWQgZmluaXNoZWQgZmluYWxzIGFuZCBtb3ZlZCBvdXQgZWFybGllciB0aGF0IGRheSwgc28gaGUgd2FzIHRoZSBvbmx5IG9uZSBsaXZpbmcgdGhlcmUuCk9uIGEgc3RhbmRhcmQgd29ya2luZyBkYXksIEkgd291bGQgYnV5IGluIGZvciAkMzAwMCB3b3J0aCBvZiBvbmxpbmUgbXVsdGkgdGFibGUgdG91cm5hbWVudHMsIHBsYXkgMTIgYXQgb25jZSwgYXJvdW5kIDIwIDMwIHBlciBkYXksIHNwcmVhZCBhY3Jvc3MgdHdvIG1vbml0b3JzLiAKU2hvdWxkIHRoZSB3aWZlIGp1c3Qgc3RheSB1bmhhcHB5IGFuZCBzdXNwaWNpb3VzLCBhbmQgcG9zc2libHkgd2FzdGUgdGhlIHJlc3Qgb2YgaGVyIGxpZmUgaW4gdGhpcyBzdGF0ZT8gQWxzbywgSSBzdXJlIE9QIGRvZXMgbm90IGhvdW5kIHRoZXNlIG1lbiBzaGUgc2FpZCB0aGF0IHdoZW4gdHVybmVkIGRvd24sIHNoZSBpcyBoYXBweSBpbnNpZGUgYW5kIGxlYXZlcyBpdCBiZS4gClJlZG9ubmVyIGxhIHBhcm9sZSBhdXggcGVyc29ubmVzIGNvbmNlcm5lcyBkYW5zIGRlcyBlc3BhY2Ugc2N1cmlzcyBldCBiaWVudmVpbGxhbnRzLiBDJ2VzdCBlc3NlbnRpZWwgY2FyIGJlYXVjb3VwIGRlIHBlcnNvbm5lcyBncm9zc2VzIG9udCBhcHByaXMgIHByZW5kcmUgbW9pbnMgZGUgcGxhY2UgcXVlIGNlbGxlIHF1J2VsbGVzIG9jY3VwZW50IHBoeXNpcXVlbWVudCBldCAgbmUgcGFzIGV4cHJpbWVyIGxldXIgcmVzc2VudGkuIFNvbnQgb3JnYW5pc3MgZGVzIGdyb3VwZXMgZGUgcGFyb2xlIHRobWF0aXF1ZXMsIGRlcyBhY3Rpdml0cyAoIllvZ3JhcyIsIHBpc2NpbmUgZW4gZ3JvdXBlKS4gUGFydGFnZXIgZGVzIGV4cHJpZW5jZXMsIHJlbmNvbnRyZXIgZCdhdXRyZXMgcGVyc29ubmVzIGVzdCBlc3NlbnRpZWwgcG91ciBzb3J0aXIgZGUgbGEgY3VscGFiaWxpdCBldCBkZSBsYSBob250ZSBxdWUgcmVzc2VudGVudCB0cnMgc291dmVudCBsZXMgcGVyc29ubmVzIGdyb3NzZXMgZHUgZmFpdCBkdSByZWdhcmQgZGUgbGEgc29jaXQuCkkgc2FpZCBtaWdodCAuIApWaXJ0dWFsIEJveSB3YXMgZm9sbG93ZWQgdGhlIE42NCBhbmQgd2UgYWxsIGtub3cgaG93IGFtYXppbmcgdGhhdCB3YXMuIApIb3cgdG8gUGxheSBUZXhhcyBIb2xkCk1lbW9yeSBjYXJlIGNhbiBiZSB1cCB0byAkOEsgYSBtb250aCwgYW5kIHBhdGllbnRzIGNhbiBsaXZlIGZvciBhIGRlY2FkZSwgc28gdGhhdCBjYW4gZXhoYXVzdCBldmVuIGEgc2l6ZWFibGUgcmV0aXJlbWVudCBmdW5kLiAKTm90IHRvIG1lbnRpb24sIEkgZG9uIHJlYWxseSB0aGluayBhbnlvbmUgY2FuIGJsYW1lIHRoZSBMb3JkIENvbW1hbmRlciwgdGhhdCBqdXN0IGNhbWUgYmFjayB0byBsaWZlICh3aGljaCBpcyBzdGlsbCBraW5kYSBjcmF6eSBpbiBXZXN0ZXJvcyksIGZyb20gZG9pbmcgc29tZXRoaW5nIG90aGVyIHRoYW4gaGFuZ2luZyBhcm91bmQgdGhlIHBlb3BsZSB0aGF0IGJldHJheWVkIGhpbS4KVGhyZWUgbW9udGhzIGxhdGVyLCBHYWdhIHRvbGQgV29tZW4ncyBXZWFyIERhaWx5IHRoYXQgc2hlIHdhcyBsb29raW5nIGZvciBhIHdlZGRpbmcgZHJlc3Mgd2l0aCBoZXIgZmlhbmMgaW4gbWluZC4gIkl0IHdpbGwgYmUgdG90YWxseSBmb3IgVGF5bG9yLiAKSG93ZXZlciwgdGhlIFRQUCAxMSBwcmVzZXJ2ZWQgbWFueSBvZiB0aGUgcmVkdWN0aW9ucyBpbiB0cmFkZSBiYXJyaWVycyBhbmQgaW5jcmVhc2VkIG1hcmtldCBhY2Nlc3MgdGhhdCB0aGUgVW5pdGVkIFN0YXRlcyBoZWxwZWQgbmVnb3RpYXRlLiBEYWRlIGNvbXBhcmVkIHRoZSBVbml0ZWQgU3RhdGVzIHdhbGtpbmcgYXdheSBmcm9tIHRoZSBkZWFsIHRvIGEgcG9rZXIgcGxheWVyIGdldHRpbmcgdG8gdGhlIGZpbmFsIHJvdW5kIGFuZCBpbnN0ZWFkIG9mIGNhc2hpbmcgaW4sIHRocm93aW5nIHRoZSBjaGlwcyBvbiB0aGUgdGFibGUgdG8gYmUgZGl2dmllZCB1cCBieSB0aGUgcmVzdCBvZiB0aGUgcGxheWVycy4KQnV0IEkgaGF2ZSByZWFzb24gdG8gdGhpbmsgdGhhdCB1bmxpa2UgdGhlIEJ1c2hpZXMsIHRoZXkgZG9uJ3QgcmVhbGx5IGJlbGlldmUgaXQ7IGl0J3MganVzdCBwb2xpdGljcy4gCkFzIHdlIGFsbCBrbm93IGJ5IG5vdywgYW5kIGFzIFplbGxuZXIgY2VydGFpbmx5IGtuZXcgYXQgdGhlIHRpbWUsIHVuZGVyIFdpc2NvbnNpbiBzdGF0dXRlcyBhbmQgY2FzZSBsYXcsIGFsbCBhcmd1bWVudHMgYXZhaWxhYmxlIHRvIHRoZSBkZWZlbnNlIHRocm91Z2ggZHVlIGRpbGlnZW5jZSBtdXN0IGJlIHJhaXNlZCBpbiBhbiBpbml0aWFsIHBvc3QgY29udmljdGlvbiBtb3Rpb24uIFN1YnNlcXVlbnQgbW90aW9ucyBjYW4gYmUgZmlsZWQsIGJ1dCBvbmx5IHdoZXJlIGl0IGlzIHNob3duIHRoZXkgaW52b2x2ZSBpc3N1ZXMgdGhhdCBjb3VsZCBub3QgYmUgcmFpc2VkIHNvb25lciB0aHJvdWdoIGR1ZSBkaWxpZ2VuY2UuCiJUaGUgQ1JUIHdhcyB0ZW1wb3JhcmlseS4gCkhlIG1vdmVkIHRvIFBha2lzdGFuIGluIDE5NzAgZnJvbSBhIHRvd24gaW4gVVAgbmFtZWQgR3VsYW90aGkuIEkgaGFkIHRoZSBwcml2aWxlZ2Ugb2YgdmlzaXRpbmcgQmFidSBKZWUncyBncmF2ZSBhdCBZYXNlZW5hYmFkIGluIEthcmFjaGkgdGhpcyBFaWQsIGFmdGVyIG1vcmUgdGhhbiBhIGRlY2FkZS4gCkxhIHZlcnNpb24gb2ZmaWNpZWxsZSBhbXJpY2FpbmUgcXVhbnQgYXV4IGF0dGVudGF0cyBkdSAxMSBzZXB0ZW1icmUgMjAwMSBpbXB1dGUgIHVuIGNvbW1hbmRvIHNhb3VkaWVuIGwnYXR0YXF1ZS4gMTQgYW5zIGFwcnMgbGUgMTEgc2VwdGVtYnJlIGFtcmljYWluIGpvdXIgcG91ciBqb3VyLCB1bmUgZ3J1ZSB0b21iZSBzdXIgbGEgZ3JhbmRlIG1vc3F1ZSBmYWlzYW50IHBvdXIgbCdpbnN0YW50IHBsdXMgZCd1bmUgY2VudGFpbmUgZGUgbW9ydHMgZXQgcGx1c2lldXJzIGNlbnRhaW5lcyBkZSBibGVzc3MuIElsIHNlIHRyb3V2ZSBxdSdpbCB5IGF2YWl0IDE0IGdydWVzIGV4YWN0ZW1lbnQgc3VyIGNlIGNoYW50aWVyLk1vaSBjZSBxdWkgbSd0b25uZSAoc2kgdGFudCBlc3QgcXVlIHF1ZWxxdWUgY2hvc2UgcGV1dCBtJ3Rvbm5lcikgYydlc3QgbGUgbm9tYnJlIHF1aSBxdWl2YXV0ICAyIGZvaXMgNyBldCBzZSB0cm91dmUgbWFjcm9jb3NtaXF1ZW1lbnQgZGFucyBsJ2hpc3RvaXJlIGRlcyAxNCBtYW52YW50YXJhcyBkZSBsYSBjeWNsb2xvZ2llIGhpbmRvdWUgZm9ybWUgZGUgNyBwcmlvZGVzIGFzY2VuZGFudGVzIGV0IDcgZGVzY2VuZGFudGVzLiAKSW4gb3RoZXIgd29yZHMsIHdoYXQgaWYgdGhpcyB0aGluZyAgdGhpcyBib2RpbHkgdGhpbmcgIHRoYXQgd2UgdGhpbmsgaXMgc3RhYmxlIGFuZCByZWFsIGFuZCBlYXNpbHkgcmVhZGFibGUgYXMgIm1hbGUiIG9yICJmZW1hbGUgaXMgaW4gZmFjdCBhcyBtZXNzeSBhbmQgdW5jbGVhciBhcyB3aGVuIGEgd29tYW4gZml4ZXMgdGhlIGVuZ2luZSBvbiBoZXIgY2FyIGluIG92ZXJhbGxzIGFuZCBoaWdoIGhlZWxzPyBIaXN0b3JpYW5zIGxpa2UgVGhvbSBMYWNxdWV1ciBoYXZlIGFkZGVkIHRvIHRoaXMgc2Vuc2UgdGhhdCAiZ2VuZGVyIiBhbmQgInNleCIgYXJlIGJvdGggdGhlIHNhbWUgYW5kIGJvdGggbWVzc3kgYnkgc2hvd2luZyBob3cgdGhlIHR3byBzZXggc3lzdGVtIGlzIGZhaXJseSByZWNlbnQsIGxpa2UgUmVmb3JtYXRpb24gcmVjZW50LiBGb20gdGhlIENsYXNzaWNhbCBHcmVla3MgdGlsbCBhYm91dCAxNjAwIG9yIHNvLCBXZXN0ZXJuIGRvY3RvcnMgYW5kIGxheXBlb3BsZSBhbGlrZSB0aG91Z2h0IHRoZXJlIHdhcyBPTkUgc2V4IChhbmQgaXQgd2FzIG1hbGUgIHdvbWVuIHdlcmUganVzdCBpbnZlcnRlZCB2ZXJzaW9ucyBvZiB0aGUgbW9yZSBwZXJmZWN0IG1hbGUgZm9ybSkuIFRoZSBpbnRlcmVzdGluZyB0aGluZyBhYm91dCB0aGUgb25lIHNleCBtb2RlbCBpcyBpdCBhbGxvd2VkIGZvciB0aG9zZSB3aG8gd2VyZSBub3Qgb25lIG5vciB0aGUgb3RoZXIgKHRoZWlyIGdlbml0YWxzIHdlcmUgbm90IGZ1bGx5IGludmVydGVkICBsaWtlIGEgd29tYW4gbm9yIGZ1bGx5IGV4dHJvdmVydGVkIGxpa2UgYSBtYW4gIHNvIHRoZSAiaW4gYmV0d2VlbnMiIGRpZCBub3QgY2F1c2UgYSBjYXRlZ29yeSBjcmlzaXMpLgpEbyB5b3Ugbm90IHVuZGVyc3RhbmQgdGhhdCBJIGRvbiB3YW50IHRvIHdhc3RlIG15IHRpbWU/IFRoYXQgSSBoYXZlIGFscmVhZHkgc3BlbnQgYSBsb3Qgb2YgdGltZSBlbWFpbGluZyBhbmQgdGFraW5nIHBob3RvcyBhbmQgYXR0YWNoaW5nIHN0dWZmIGFuZCB3YWl0aW5nIGZvciByZXBsaWVzLiAKQW1icm9zZSBpbiBteSBleWVzIHBsYXlzIGEgZ29vZCBmYWNlIGluIHRoZSBXV0UsIHllcyBJIGtub3cgcGVvcGxlIHdvdWxkIGxvdmUgdG8gc2VlIGhpcyBoZWVsIHN0dWZmIGZyb20gdGhlIEluZGllcyBidXQgZ29vZCBsb3JkIHRoYXQgbmV2ZXIgZ29pbmcgdG8gaGFwcGVuLiBaaWdnbGVyIG9uIHRoZSBvdGhlciBoYW5kPyBEdWRlIGlzIGJldHRlciBhcyB0aGUgY29ja3kgaGVlbCBpbiBteSBleWVzLgpUaGlzIE1hcmtlZCBQbGF5aW5nIENhcmRzIFByaWNlIGluIERlbGhpIEFyZSBCdWlsdCB3aXRoIEx1bWlub3VzIFRlY2hub2xvZ3ksIHdoaWNoIGhhcyBiZWVuIG1hcmtlZCBpbiB0aGUgYmFjayB3aXRoIGludmlzaWJsZSBpbmsgd2hpY2ggaXMgaW1wb3NzaWJsZSB0byBkZXRlY3Qgd2l0aCBuYWtlZCBleWVzLiBCdXQgeW91IHdpbGwgYmUgYWJsZSB0byBzZWUgdGhlIGNhcmRzIHNlcnZlZCB0byB0aGUgcGxheWVycyBpZiB5b3Ugd2VhciBTb2Z0IENvbnRhY3QgTGVuc2VzIFdoaWNoIEhhdmUgdGhlIENhcGFiaWxpdHkgdG8gU2VlIHRoZSBNYXJrcyBmcm9tIHRoZSBSYW5nZSBvZiAzMCBUbyA0MCB3aXRob3V0IGJlaW5nIGJvdGhlcmVkIGF0IGFsbC4gSWYgdGhpcyB0ZWNobm9sb2d5IGlzIGluIHlvdXIgaGFuZHMgdGhlbiB5b3UgaGF2ZSBhIGZhciBiZXR0ZXIgY2hhbmNlIG9mIHdpbm5pbmcgR2FtZXMgb2YgR2FtYmxpbmcgbGlrZSBCbGFja2phY2ssIE1hdSBNYXUsIEJ1bGwsIE9tYWhhIFBva2VyLCBUZXhhcyBQb2tlciwgUnVtbXksIFRlZW4gUGF0dGkgYW5kIEZsYXNoIHdpdGhvdXQgY2hlYXRpbmcgbWFudWFsbHkuIApMZWQgYnkgYW4gaW1wYXRpZW50IGJsYWNrIHBhbnRoZXIgbmFtZWQgQmFnaGVlcmEsIGhlIGlzIHNlbnQgYXdheSBmcm9tIGhpcyBqdW5nbGUgaG9tZSB0byB0aGUgc2FmZXR5IG9mIGEgbmVhcmJ5IG1hbiB2aWxsYWdlLCB0aG91Z2ggdGhlIGpvdXJuZXkgYmVjb21lcyBsZXNzIHN0cmFpZ2h0IGZvcndhcmQgdGhlIGZ1cnRoZXIgdGhleSBzdHJheS4gClVzdWFsbHkgdGhleSBwcmVhY2ggc2VybW9ucyB0byB0aGUgY29uZ3JlZ2F0aW9uICAgbW9zdCBsaWtlbHkgb24gU3VuZGF5cyAgIHRlYWNoaW5nIHRoZW0gaG93IHRvIGFwcGx5IFNjcmlwdHVyZSB0byB0aGVpciBsaXZlcywgYW5kIGxlYWRpbmcgdGhlbSBpbiBwcmF5ZXIuIApCdXQgYXMgbG9uZyBhcyB0aGV5IHNlbGwgZW5vcm1vdXMgbnVtYmVycywgdGhleSBkb24gd2FudCB0byBjaGFuZ2UgaXQuIERvbiBDaGFkd2ljaywgdGhlIGNvIGRlc2lnbmVyIG9mIHRoZSBBZXJvbiwgc2F5cyBoZSB3YXNuIGhpcmVkIHRvIGRlc2lnbiB0aGUgaWRlYWwgcHJvZHVjdCBmb3IgYW4gZWlnaHQgaG91ciB3b3JrZGF5OyBoZSB3YXMgaGlyZWQgdG8gdXBkYXRlIEhlcm1hbiBNaWxsZXIgcHJldmlvdXMgYmVzdCBzZWxsZXIuIFdlcmUgZ2l2ZW4gYSBicmllZiBhbmQgYmFzaWNhbGx5IHRvbGQgdG8gZGVzaWduIHRoZSBuZXh0IGdlbmVyYXRpb24gb2ZmaWNlIGNoYWlyLCBoZSBzYXlzLi4gCjAzIEFwciAyMDE2Ck9uY2UgeW91IGluc3RhbGwgaXQgb24geW91ciBjb21wdXRlciwgeW91IGNhbiB1c2UgaXQgZXZlcnkgdGltZSB5b3UgcGxheSBvbmxpbmUgcG9rZXIuLiAKVGhhdCdzIHRoZSB0YWtlYXdheSBmcm9tICIiIChTcGllZ2VsIEdyYXUpLCBZdXZhbCBOb2FoIEhhcmFyaSdzIGZyaWdodGVuaW5nIG5ldyBib29rIG9mIGJpZ3RoaW5rLiBNYWNoaW5lcyBwdXQgaHVnZSBudW1iZXJzIG9mIG1hbnVhbCBsYWJvcmVycyBhbmQgZmFjdG9yeSB3b3JrZXJzIG91dCBvZiBidXNpbmVzcywgYnV0IHRob3NlIHBlb3BsZSBsYXJnZWx5IG1vdmVkIG9uIHRvIGpvYnMgb3JnYW5pemVkIGFyb3VuZCB0aGUgY29nbml0aXZlIGNhcGFjaXRpZXMgb2YgaHVtYW5zLiAKWW91IHB1dCBoaW0gaW4gd2l0aCBhbnkgZmlnaHRlciwgaW4gYW55IGNhdGVnb3J5LCBvZiBhbnkgZXJhLCBhbmQgaGUgd291bGQgZGVmZWF0IHRoZSBvdGhlciBtYW4gaW50ZWxsaWdlbmNlLCBldmVyeSB0aW1lLkdlbmVyYWxzIGRvIG5vdCBsZWFkIG1hbiBvbnRvIHRoZSBiYXR0bGVmaWVsZCB0byBnZXQga2lsbGVkLiBJbiBib3hpbmcsIHlvdXIgbWVuIGFyZSB5b3VyIGxpbWJzIGFuZCB5b3VyIG92ZXJhbGwgaGVhbHRoLiBJcnJlc3BlY3RpdmUgb2YgdGhlaXIgc3RyZW5ndGhzIHlvdSB3b3VsZCBhbHdheXMgcHVsbCB0aHJvdWdoIGFuZCBmaW5kIGEgd2F5IHRvIHdpbi4gCk5laXRoZXIgaGUgbm9yIEJsdW1zdGVpbiwgb2YgQnJpZ2FudGluZSwgTmV3IEplcnNleSwgaGFkIHByZXZpb3VzbHkgcGxheWVkIGF0IHRoZSBtYWluIGV2ZW50LiAKTGV0J3Mgbm90IGludmFsaWRhdGUgcGVvcGxlIGJlaW5nIHNleHVhbGx5IGhhcmFzc2VkIG9yIHRha2VuIGFkdmFudGFnZSBvZiBqdXN0IGJlY2F1c2UgdGhleSBoYXBwZW4gdG8gYmUgMTguIFRoYXQncyBhIHByZXR0eSBzaGl0dHkgdGhpbmcgdG8gZG8gdG8gb3RoZXIgcGVvcGxlLiBTaXR1YXRpb25zIGFyZW4ndCBqdXN0IGVpdGhlciB0aGUgd29yc3QgY3JpbWUgaW4gdGhlIHdvcmxkIG9yIGNvbXBsZXRlbHkgZmluZSwgdGhlcmUncyB1bmZvcnR1bmF0ZWx5IGEgd2lkZSBzcGVjdHJ1bSBvZiBwcmVkYXRvcnkgb3Igb3RoZXJ3aXNlIHVuZXRoaWNhbCBiZWhhdmlvcnMuLiAKV2UgYWx3YXlzIHVzZWQgdG8gam9rZSB3aXRoIGhpbSBiZWNhdXNlIGhpcyBvdGhlciBwYXJ0IHRpbWUgd29yayB3YXMgcGxheWluZyBwb2tlciB3aXRoIHRoZSBvdGhlciBjb2xsZWdlIGtpZHMgb24gY2FtcHVzLiAKSmVkZSBBdWZnYWJlIGlzdCBwcmluemlwaWVsbCBzbyBnZXN0YWx0ZXQgd2llIGRhcyBkaWUgQmVpc3BpZWxlIGluIGRlbiBlcnN0ZW4gYmVpZGVuIEJuZGVuIHNjaG9uIHdhcmVuLiBBbHNvIGdpYnQgZXMgZXJzdCBtYWwgZWluZSBUaXNjaGJlcnNpY2h0LCBkYW5uIGVpbiBiaXNzY2hlbiB3YXMgYmVyIGRpZSBNaXRzcGllbGVyLCBzbyB3aXIgaXJnZW5kd2FzIGJlciBzaWUgd2lzc2VuLiBEYW5uIGdpYnQgZXMgS2FydGVuIHVuZCB3aXIgbXNzZW4gZGllIEVudHNjaGVpZHVuZ2VuIHRyZWZmZW4sIGRpZSBvZnQgZGllIFZvbGxwcm9maXMgYW4gd2ljaHRpZ2VuIFRpc2NoZW4gbGFuZ2Ugdm9yIHVucyBnZXRyb2ZmZW4gaGFiZW4sIHVuZCBuaWNodCBpbW1lciBpc3QgZXMgcmljaHRpZywgd2FzIGRpZXNlIG1hbCBpcmdlbmR3YW5uIGVudHNjaGllZGVuIGhhYmVuLi4gCkkgc3RhcnRlZCB0aGUgTXVzaWNpYW5zIEd1aWxkLCBhIHZpcnR1YWwgY2x1YiBmb3IgbXVzaWNpYW5zIGFuZCBtdXNpYyBhZmZpY2lvbmFkb3MuIFRoZSBHdWlsZCBoYXMgZG9uZSBhbiBhZG1pcmFibGUgam9iIG9mIGhlbHBpbmcgbXVzaWNhbCB0eXBlIHBlb3BsZSB3aXRoIGZ1enp5IGxvZ2ljIGZpbmQgd2hhdCB0aGV5J3JlIGxvb2tpbmcgZm9yLiBJJ20gYWxzbyBhIChub24gcHJhY3RpY2luZykgbWVtYmVyIG9mIHRoZSBGcmVlZG9tIEZyb20gRmFpdGggRm91bmRhdGlvbi4gVGhlIEZvdW5kYXRpb24gcHJvdmlkZXMgYSBzYWZlIHNwYWNlIGZvciBub24gQ2hyaXN0aWFucyB0byB2b2ljZSB0aGVpciBvcGluaW9ucy4KVGhlcmUgd2VyZSBhbHRlcm5hdGl2ZXMsIGFjY29yZGluZyB0byBIYXJrZW5yaWRlci4gVGhlIGNhc2lubyBjb3VsZCBoYXZlIGNsZWFyZWQgcGVybWFuZW50bHkgcGxhY2VkIGdhbWJsaW5nIHRhYmxlcyBhbmQgcGxheWVkIHRoZSBXU09QIGluIGZsaWdodHMgdG8gbWFrZSBzdXJlIHRoZSB0b3VybmFtZW50J3Mgc3VydmVpbGxhbmNlIGNvbXBsaWVkIHdpdGggc3RhdGUgbGF3LiBUaGUgcHJvYmxlbSBmb3IgdGhlIGNhc2lubywgSGFya2VucmlkZXIgc2FpZCwgaXMgdGhleSBkaWRuJ3Qgd2FudCB0byBsb3NlIHRoZSBkYWlseSBjYXNoIHBsYXlzIGF0IHRoZSBwZXJtYW5lbnQgdGFibGVzIGR1cmluZyB0aGUgbmVhcmx5IHR3byB3ZWVrIGV2ZW50LgpXZSBhbGwgZGlkIGl0IHdoZW4gd2Ugd2VyZSBiYWJpZXMuIApMaWtlIGluIHRoZSBjYXNlIG9mIGFsbG93aW5nIG9ubHkgY2VydGFpbiBtYXJyaWVkIGNvdXBsZXMgdG8gYm9hcmQgdG9nZXRoZXIgaW4gYSBob21lbGVzcyBzaGVsdGVyLi4gCkl0IGltcG9ydGFudCB0byByZW1lbWJlciB0aGF0IEkgb25seSBjb25zaWRlcmluZyBoaWdoIHRpZXIgZmlsbSBzY2hvb2xzLCB0aGVyZSBhcmUgbGl0ZXJhbGx5IGRvemVucyBvdGhlciB0aGF0IG1heSBiZSBhIGJldHRlciBmaXQgZm9yIHlvdSBwcmljZSB3aXNlLiBEb24gbGV0IHRoYXQgYmUgZGlzY291cmFnaW5nIGVpdGhlciwgZmlsbSBzY2hvb2wgaXMgYWJvdXQgdGhlIGxlYXJuaW5nIGVudmlyb25tZW50IGFuZCBjb2xsYWJvcmF0aW9uLCBub3QgbmVjZXNzYXJpbHkgb25seSB3aGVyZSB5b3UgbGVhcm4gYW5kIHdvcmsuCkkgYmVnZ2VkIGhpbSB0byBnaXZlIG1lIHNvbWUgYWR2aWNlLiBXZSBhbHdheXMgaGFkIGVhY2ggb3RoZXJzIGJhY2tzLCB3aGljaCBpcyBuaWNlLiAKSGFkIGhlIGdhaW5lZCBhIHNpbmdsZSBkZWZlYXQgb24gaGlzIHJlY29yZCB0aGUgaGF0ZXJzIHdvdWxkIGhhdmUgcmVhY2hlZCBldXBob3JpYSB2aWxsZSBhbmQgbW92ZWQgb250byB0aGUgbmV4dCBhbm5veWluZyB1bmRlZmVhdGVkIHRhcmdldC4gCkFuZCB0aGVuIHRoZXJlIGFyZSBzb21lIHRoYXQgZG9uJ3QgZGVsaXZlciB0aGUgcGFja2FnZXMgYXQgYWxsLi4gClRoaXMsIG9mIGNvdXJzZSwgYXNzdW1lcyB0aGF0IHRoZSB3YWF0YSBhY3R1YWxseSBhcmUgYW4gaW5kZXBlbmRlbnQgc2FwaWVuY2UgZXZlbnQgYW5kIG5vdCBkZXBlbmRlbnQgb24gaHVtYW5pdHkgaW4gb3JkZXIgdG8gZXhpc3QgKHRoZXJlIGRlYmF0ZSBvbiB0aGF0IHBvaW50KS4gQnkgdGhlIHRpbWUgdGhlIGZyb250IG9mIHdhYXRhIGNvbG9uaXphdGlvbiBhcHByb2FjaGVzIEVhcnRoLCBWb3lhZ2VyIGhhcyBiZWVuIGFkcmlmdCBmb3Igc29tZSA0NTAsMDAwIHllYXJzIGF0IGxlYXN0IGFuZCBpcyBtb3JlIHRoYW4gMjUgbGlnaHQgeWVhcnMgZnJvbSBFYXJ0aC4uIApPbmx5IGNhc2lub3MsIG5vdCByYWNpbm9zLCBjYW4gb2ZmZXIgdGhvc2UgZ2FtZXMgYW5kIHZpZGVvIHBva2VyLiBNb3J0bGFuZCBzYWlkIHRoZSBjYXNpbm8gYWxzbyBub3cgb2ZmZXJzIGxpdmUgZW50ZXJ0YWlubWVudCBpbiBpdHMgVmludGFnZSA1MSBCYXIgb24gVGh1cnNkYXlzLCBGcmlkYXlzIGFuZCBTYXR1cmRheXMuIApJbnRlcm5ldCBBcnRpY2xlcyAgSnVuZSAzLCAyMDA4CkZvciB0aGlzIHN0cmF0ZWd5IHRvIHdvcmssIHRoZSBmYXNjaXN0IGZhY3Rpb24gYW5kIHRoZWlyIGZhbmJvaXMgaW4gdGhlIE11cmRvY2ggcHJlc3MgbmVlZCB0byBhdCBsZWFzdCBhcHBlYXIgdG8gZmFsbCBpbiBsaW5lIGJlaGluZCB0aGVpciBuZXcgZ29sZGVuIGJveSBEdXR0b24uIE15IHdvcnJ5IGxhdGVseSBpcyB0aGF0IHRoZXkgaGF2ZSBiZWVuIGRvaW5nIHRoaXMgYSBsaXR0bGUgdG9vIHdlbGwsIGFuZCBpdCBoYXMgb2YgY291cnNlIGFsbCBnb25lIHRvIER1dHRvbiBoZWFkLiBJIHRoaW5rIEFiYm90dCBtYXkgaGF2ZSBhIGZpZ2h0IG9uIGhpcyBoYW5kcyB3aGVuIHRpbWUgY29tZXMgZm9yIGhpcyBwYXduIHRvIHJlbGlucXVpc2ggdGhlIHRocm9uZS4KRXRjLi4gCkNhcHR1cmUgZCdjcmFuIHRpcmUgZGUgUG9rZXJTdGFycyAoYXJjaGl2ZXMpClRoZSB0d28gZmlsbCBvdXQgdGhlIHNvdW5kIHdlbGwgd2l0aG91dCBhbnkgYXBwYXJlbnQgZG91YmxlIHRyYWNraW5nIG9mIHRoZWlyIGluc3RydW1lbnRzLiAKRWxlY3Rpb24gT3BpbmlvbiBWaWV3IFNlY3Rpb24gPkNvbHVtbnMgR3Vlc3QgIEVkaXRvcmlhbHMgTGV0dGVycyB0byB0aGUgRWRpdG9yCllvdSBkb2RnZWQgYSBidWxsZXQuIEluIDcgeWVhcnMgeW91ciBleCB3aWxsIGJlIG1hcnJpZWQgd2l0aCAyIGtpZHMgdG8gc29tZSBiYW5raW5nIGFzc2hvbGUgd2hvIG1vc3QgbGlrZWx5IGNoZWF0cyBvbiBoZXIgd2l0aCAxOSB5ZWFyIG9sZCBzdHJpcHBlcnMgbmFtZWQgS3J5c3RhbCBhbmQgc2hlIHdpbGwgYmUgc3R1Y2sgd2l0aCBoaW0gYmVjYXVzZSB0aGF0J3MgdGhlIGxpZmUgc2hlIGtub3dzIGFuZCBoZXIgbW90aGVyIHdvbid0IGFsbG93IGhlciB0byBkaXZvcmNlLiBBbmQgaW4gNyB5ZWFycyB3aGVuIHlvdSBhcmUgc3VjY2Vzc2Z1bCBhbmQgbWFraW5nIHlvdXIgZmlyc3QgbWlsbGlvbnMsIGVuZ2FnZWQgdG8gYW4gZXhvdGljIFBoRCBjYW5kaWRhdGUgeW91IHdpbGwgcnVuIGludG8gaGVyIGFuZCBoZXIgYnJhdHR5IGtpZHMgYW5kIHlvdSB3aWxsIHNtaWxlIGFuZCBub2QgYW5kIHdhbGsgb24uIApCdXQgeW91IGNhbiBjb24gYSBjb24gYW5kIFZhbmVzc2Egd2FzIHJpZ2h0ZnVsbHkgc3VzcGljaW91cy4KQXQgNDYsIHNleHkgc2hvdWxkIGJlIGEgc3RhdGUgb2YgbWluZCB0aGF0IG1ha2VzIHlvdSBmZWVsIGdvb2QgYW5kIGNvbmZpZGVudCBhcyBhIHdvbWFuLi4gClRoZSBob3VzZSBiaWxsIGluIGNvbmdyZXNzIHdvdWxkIGJhbiBJbnRlcm5ldCBnYW1ibGluZyBleGNlcHQgZm9yZSBob3JzZSByYWNlIGJldHRpbmcgYW5kIHN0YXRlIGxvdHRlcmllcy4gSXQgaXMgYW4gYXR0ZW1wdCB0byBjbG9zZSBhIGxvb3Bob2xlIGluIHRoZSAxOTYxIFdpcmUgQWN0LCBtZWFudCB0byBjcmFjayBkb3duIG9uIHJhY2tldGVlcmluZy4gCkhlIHNhaWQgd2hpbGUgbWlsbGVubmlhbCB3b21lbiBtYWtlIHVwIGFib3V0IGEgcXVhcnRlciBvZiB0aGUgY29tcGFueSdzIGN1c3RvbWVyIGJhc2UsIHRoZXkgaGF2ZSBhY2NvdW50ZWQgZm9yIGhhbGYgdGhlIHBhdHJvbnMgYXQgdGhlIG5haWwgc2Fsb25zLi4gCldoYXQgZG8gdGhleSBkbz8gdGhleSBnaXZlIHVzIHRydW1wLgpJIHRoaW5rIHRoZXkgYXJlIG1hZGUgaW4gdGhlIGZpcnN0IDEwIHllYXJzIG9mIHRoZWlyIGxpZmUuIFNvIGl0IGVpdGhlciBpbiB5b3Ugb3IgaXQgbm90LiAKV2hlbiBhc2tlZCB3aGV0aGVyIHRha2luZyBhd2F5IHRoZSBmcmVlIG9ubGluZSBmb3J1bSB3b3VsZCBlbmRhbmdlciBwcm9zdGl0dXRlcyBieSBmb3JjaW5nIHRoZW0gb250byB0aGUgc3RyZWV0cyBhbmQgaW50byBjYXNpbm9zLCBhIHNwb2tlc3dvbWFuIGZvciBDb3J0ZXogTWFzdG8sIEVkaWUgQ2FydHdyaWdodCwgc2FpZCB2aWEgZSBtYWlsLCAiUHJvc3RpdHV0aW9uIGhhcyBhbHdheXMgYmVlbiBhIGZsdWlkIHByb2JsZW0uIEl0IGlzIHRoZSBzZWNyZWN5IG9mIGFub255bW91cyBhZHMgb24gQ3JhaWdzbGlzdCB0aGF0IHRoZSBhZ3JlZW1lbnQgdGFyZ2V0cy4iLiAKU2hlIGxlZnQgYnJpZWZseSBhbmQgY2FtZSBiYWNrLiBDb2NvIHByb2NlZWRlZCB0byBkaXNyb2JlLCB0YWtpbmcgb2ZmIGhlciBibGFjayBicmEgYW5kIHJlZCBwYW50aWVzLCB3aGljaCBzaGUgdHdpcmxlZCBpbiBmcm9udCBvZiBoaXMgZmFjZS4gU2hlIGdyYWJiZWQgdGhlIHJlcG9ydGVyJ3MgaGFuZCBhbmQgdHJpZWQgdG8gaW5kdWNlIGhpbSB0byB0b3VjaCBoZXIgYnJlYXN0cy4gSGUgcmVmdXNlZC4KTmF0YWxpZSBpcyBwbHVzIHNpemVkLCB3aGljaCBpcyBzdXBlciByZWZyZXNoaW5nLiAKSSBoZWFyIGdvb2QgdGhpbmdzIGFib3V0IHRoZSBNYXJ2ZWwgc2hvd3MgYnV0IGhhdmVuIGdvdHRlbiBpbnRvIHRoZW0geWV0LCBpdCBvbiBhIGxvbmcgbGlzdCBvZiBzdHVmZiB0byB3YXRjaCBoYWhhLiAKVGhlbiBJJ2Qgbm90IGFsbG93IGhlciB0byBiZWhhdmUgaW4gdGhpcyBtYW5uZXIgdG8geW91LiBJdCdzIGxpa2UgaWYgeW91ciB0YWxraW5nIHRvIHlvdXIga2lkcywgdGhlIG1vbWVudCB0aGV5IGdldCBkaXNyZXNwZWN0ZnVsIHRoZSBjb252ZXJzYXRpb24gZW5kcyB1bnRpbCB0aGV5IGNhbG0gZG93biBhbmQgYXBvbG9naXNlIGFuZCBhcyB3aXRoIGNoaWxkcmVuLCBZT1UgSEFWRSBBIFVOSVRFRCBGUk9OVC4gClRoZXNlIGhlcm9pY3MgcHJvbXB0ZWQgYSBzdGF0aXN0aWNpYW4gdG8gbG9vayB1cCB3aGF0IERob25pIGhhcyBiZWVuIHVwIHRvIGluIGhpcyBPREkgY2FyZWVyIHdpdGggcmVnYXJkIHRvIHN1Y2Nlc3NmdWwgcnVuIGNoYXNlcywgYW5kIGl0IGEgdGVsbGluZyBzdGF0aXN0aWMgdGhhdCBoZSBjYW1lIHVwIHdpdGguIEhlIGF2ZXJhZ2VzIGEgQnJhZG1hbmVzcXVlIDEwMCBwbHVzIGluIG1hdGNoZXMgdGhhdCBJbmRpYSBoYXMgd29uIGJhdHRpbmcgc2Vjb25kLCByZW1haW5pbmcgbm90IG91dCBpbiA2MCUgb2YgdGhlc2UgZGVzcGl0ZSBhIHN0cmlrZSByYXRlIG9mIDkwICh0aGF0IGlzLCBhbG1vc3QgYSBydW4gYSBiYWxsKS4uIApHYW1lIDkgICBMb3N0ClRoZXkgYXJlIG1hZGUgZm9yIGtpZHMgc28gdGhleSBjYW4gZ2V0IHRoZWlyIHZlZ2V0YWJsZXMgaW4gYW5kIHRoZXkgY29tZSBpbiBEaW5vIGFuZCBTdGFyIHNoYXBlcy4gTG9sLiBUaGV5J3JlIG15IGd1aWx0eSBwbGVhc3VyZSBhbmQgdGhleSdyZSBnbHV0ZW4gZnJlZSBpZiB5b3UgY2FuJ3QgdG9sZXJhdGUgZ2x1dGVuISBZb3UgY2FuIGZpbmQgdGhlbSBpbiB0aGUgZnJlZXplciBzZWN0aW9uLi4gCkl0IGp1c3QgdGFrZXMgYSBodWdlIGxldmVsIG9mIG1hdHVyaXR5IHRvIHZpZXcgcG9rZXIgYXMgYSBqb2IuIApJbiBtb3N0IHBva2VyIHJvb21zIGl0IGlzIG5vdCBhbGxvd2VkIHRvIGhpZGUgeW91ciBjYXJkcyBmcm9tIHZpZXcuIFRoaXMgaXMgYmVjYXVzZSBwbGF5ZXJzIG1ha2UgdGhlaXIgZGVjaXNpb25zIGJhc2VkIG9uIGhvdyBtdWNoIHBlb3BsZSBhcmUgY3VycmVudGx5IHBsYXlpbmcgaW4gdGhlIGhhbmQgYmFzZWQgb24gdGhlaXIgcG9zaXRpb24uIApJbCBsZXVyIGZhdXQgZGVzICJ2aWRvcyIgb3IgbCdhdWRpbyB2aXN1ZWwgdHJhdmFpbGxlIHN1ciBsJ2lsbHVzaW9uLCBsYSBzZHVjdGlvbiBwYXIgbCdtb3Rpb25uZWwuIApJIG1lYW4sIEkgaGF2ZSBubyBkb3VidCB0aGF0IHBlb3BsZSB3aWxsIGJlbGlldmUgdGhlIERBIGFuZCBqdWRnZSB3b3VsZCB0aHJvdyBhd2F5IHRoZWlyIGNhcmVlcnMgZm9yIGEgZm9ybWVyIGNvdW50eSBjb21taXNzaW9uZXIgc29uIHdobyB3b3JrcyBhdCBEYXJpIE1hcnQsIGJ1dCB0aGF0IG9uIHRoZW0uIEkgbWVhbiwgYyB3aGF0IGlzIHRoZSBkZWFsPyBXaHkgZGlkIGl0IGhhcHBlbiBxdWl0ZSBsaWtlIHRoaXM/IEl0IGxvb2tzIGxpa2Ugc29tZWJvZHkgd2FzIHZlcnkgdXBzZXQgYW5kIHB1bGxlZCB0aGUgdHJpZ2dlciBvbiBhIHByb2Nlc3Mgd2hpY2ggY2FuIGJlIHN0b3BwZWQsIG9uY2Ugc3RhcnRlZCwgYnV0IGFmdGVyd2FyZCBoYWQgc29tZXRoaW5nIGxpa2UgYSBjaGFuZ2Ugb2YgaGVhcnQgb24gdGhlIG1hdHRlci4gCkJ1dCB0aGV5IHdpbGwgd2luIE1PU1Qgb2YgdGhlIHRpbWUuIApJIHdhcyBvbiB0aGUgcGxhbmUgd2l0aCB0aGVuIEZpcnN0IExhZHkgSGlsbGFyeSBDbGludG9uIGZvciB0aGUgdHJpcCBmcm9tIEdlcm1hbnkgaW50byBCb3NuaWEgaW4gMTk5Ni4gV2Ugd2VyZSBwdXQgb24gYSBDIDE3ICAgYSBwbGFuZSBjYXBhYmxlIG9mIHN0ZWVwIGFzY2VudHMgYW5kIGRlc2NlbnRzICAgcHJlY2lzZWx5IGJlY2F1c2Ugd2Ugd2VyZSBmbHlpbmcgaW50byB3aGF0IHdhcyBjb25zaWRlcmVkIGEgY29tYmF0IHpvbmUuIFdlIHdlcmUgaXNzdWVkIGZsYWsgamFja2V0cyBmb3IgdGhlIGZpbmFsIGxlZyBiZWNhdXNlIG9mIHBvc3NpYmxlIHNuaXBlciBmaXJlIG5lYXIgVHV6bGEuIEFzIGFuIGFkZGl0aW9uYWwgcHJlY2F1dGlvbiwgdGhlIEZpcnN0IExhZHkgYW5kIENoZWxzZWEgd2VyZSBtb3ZlZCB0byB0aGUgYXJtb3JlZCBjb2NrcGl0IGZvciB0aGUgZGVzY2VudCBpbnRvIFR1emxhLiBXZSB3ZXJlIHRvbGQgdGhhdCBhIHdlbGNvbWluZyBjZXJlbW9ueSBvbiB0aGUgdGFybWFjIG1pZ2h0IGJlIGNhbmNlbGVkIGJlY2F1c2Ugb2Ygc25pcGVyIGZpcmUgaW4gdGhlIGhpbGxzIHN1cnJvdW5kaW5nIHRoZSBhaXIgc3RyaXAuIEZyb20gVHV6bGEsIEhpbGxhcnkgZmxldyB0byB0d28gb3V0cG9zdHMgaW4gQm9zbmlhIHdpdGggZ3Vuc2hpcHMgZXNjb3J0aW5nIGhlciBoZWxpY29wdGVyLgpJIGdyZXcgdXAgaW4gTmV3IEhhbXBzaGlyZSBiYWNrIGluIHRoZSA5MCBOb3QgbXVjaCBkaXZlcnNpdHkuIApJJ20gc3VyZSB0aGVyZSBhcmUgcGVvcGxlIHRoYXQgYXJlIGNsZWFybHkgbW9yZSBxdWFsaWZpZWQgdG8gcnVuIHdoYXRldmVyIGFkdmlzZW1lbnQgc2hlJ3MgZG9pbmcuIERvIEkgdGhpbmsgc2hlJ3MgcXVhbGlmaWVkIGF0IGFsbCB0byBiZSBhbiBhZHZpc29yPyBOb3QgcmVhbGx5LihzaGUgY291bGQsIGJ1dCBJIGRvbnQgdGhpbmsgaGVyIGV4cGVyaWVuY2Ugd2l0aCBwdWJsaWMgbW9uZXlzIGlzIGxpbWl0ZWQgY29tb2FyZWQgdG8gbWFueSBwb3RlbnRpYWwgY2FuZGlkYXRlcyB0aGF0IGRlZGljYXRlIHRoZW1zZWx2ZXMgMjQvNyB0byBwdWJsaWMgZnVuZCBhbGxvY3N0aW9ucy4gRG8gSSB0aGluayBzaGUgZ290IHRoaXMgb3Bwb3J0dW5pdHkgYmVjYXVzZSBzaGUncyB0aGUgZGF1Z2h0ZXIgb2YgdGhlIHByZXNpZGVudD8gU3VyZS5SYW5keSB0b2xkIFRoZSBWZXJnZSB0aGF0IGhlIGRvZXNuJ3QgYmVsaWV2ZSB0aGF0IDkvMTEgd2FzIGEgdGVycm9yaXN0IGF0dGFjayBhZnRlciByZXZpZXdpbmcgZW5vdWdoIGNvbnNwaXJhY3kgdGhlb3J5IHZpZGVvcyB0aGF0IHRyaWVkIHRvIG1ha2UgdGhhdCBjYXNlLiAKUGlja2V0IEZlbmNlIHdhcyBub3QgYSBtYW4gb2YgbWFueSB3b3Jkcy4gVW5mb3J0dW5hdGVseSwgdGhvc2Ugd29yZHMgaGUgZGlkIHVzZSB0ZW5kZWQgdG8gZ2V0IG9uIE9sZCBEaW5nbyBsYXN0IG5lcnZlLiAKSGVyIGNvYWNoIHdhcyBhbHNvIHRoZSBzaWRlIGp1ZGdlIG9uIGhlciBwbGF0Zm9ybSB0aGF0IHdhdGNoZWQgaXQgZ2V0IGxvYWRlZC4gCkl0IGFsc28gZGVzaWduZWQgdG8gZ28gZmFzdCAgIG5vdCBhcyBmYXN0IGFzIGh1bWFubHkgcG9zc2libGUgKHRoYXQgd291bGQgYmUgdGhlIFNSIDcxKSBidXQgYXMgZmFzdCBhcyBwb3NzaWJsZSBnaXZlbiB0aGUgb3RoZXIgZGVzaWduIHJlcXVpcmVtZW50cy4uIApGb3IgZXhhbXBsZSwgZG8geW91IGJlbGlldmUgdGhhdCAoYSkgYWxsIHBlb3BsZSBhcmUgaW5uYXRlbHksIGdlbmV0aWNhbGx5IHN3aW5nZXJzLCB0aGV5IGp1c3QgbmV2ZXIgdGhpbmsgdG8gdHJ5IGl0IGJlY2F1c2Ugb2YgY3VsdHVyYWwgbm9ybXMsIG9yIChiKSB0aGF0IHNvbWUgcGVvcGxlIGFyZSBnZW5ldGljYWxseSBwcmVkaXNwb3NlZCB0byBzd2luZywgYW5kIG90aGVycyBhcmUgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgTk9UIHRvIHN3aW5nLCBhbmQgdGhhdCBvaz8KV2hpbGUgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IHR5cGVzIG9mIDEwMDAgQ2xheSBQb2tlciBDaGlwcyBTZXRzIG9mZmVyZWQgb24gdGhlIG1hcmtldCB0b2RheSwgeW91IGNhbiBiZW5lZml0IGluIHNldmVyYWwgd2F5cyBieSBjaG9vc2luZyB0aGUgc2V0IG9mZmVyZWQgYnkgSmFja3BvdCBDYXNpbm8uIEludHJvZHVjZWQgaW4gdGhlIHllYXIgb2YgMjAwNSwgdGhpcyBtYWduaWZpY2VudCBzZXQgb2YgQ2xheSBQb2tlciBDaGlwcyByZW1haW5zIHRvIGJlIG9uZSBvZiB0aGUgZmF2b3JpdGVzIG9mIFByb2Zlc3Npb25hbCBQb2tlciBQbGF5ZXJzIGFyb3VuZCB0aGUgd29ybGQsIGFzIHdlbGwgYXMgbWFueSByZWNyZWF0aW9uYWwgZ2FtZXJzLiBJbiB0aGlzIGhvdyB0byBhcnRpY2xlLCBJIHdpbGwgb3V0bGluZSB0aGUgbWFueSBhZHZhbnRhZ2VzIHRvIHBsYXlpbmcgd2l0aCB0aGlzIHBhcnRpY3VsYXIgc2V0IG9mIHBva2VyIGNoaXBzLiAKSXQgbWlnaHQgYmUgdGhhdCBoZSB1c2VkIGEgbGl2ZSBkaXNjICh0aGF0IGRvZXNuIHRvdWNoIHRoZSBoYXJkIGRyaXZlKSB0byB2ZXJpZnkgdGhhdCB0aGUgbWVtb3J5IGluc3RhbGwgd2VudCBva2F5LCB0aGVuIGZvcmdvdCB0byByZW1vdmUgaXQgYmVmb3JlIGdpdmluZyBpdCBiYWNrIHRvIHlvdS4KV291bGQgbG92ZSB0byBmaW5kIGEgc29sdXRpb24gZm9yIHRoYXQsIGJ1dCB3ZSBjb3VsZCBiZSBsb29raW5nIGF0IGEgUmVkZGl0L2h1bWFuIG5hdHVyZSBwcm9ibGVtLiAKSW4gTW9udHJlYWwsIGlmIHRlZW5hZ2UgZ2lybHMgZG9uIHdlYXIgYmlraW5pcyBhbmQgZGlzcGxheSB0aGVtc2VsdmVzLCB0aGVuIHRoZXkgd2lsbCBoYXZlIHRvIHBheSBzb2NpYWwgYW5kIGVjb25vbWljIGNvc3RzLiBJbiBNb250cmVhbCwgaWYgdGVlbmFnZSBnaXJscyBkb24gY292ZXIgdGhlbXNlbHZlcyBmcm9tIGhlYWQgdG8gdG9lIGFuZCBkaXNwbGF5IGEgd2lsbGluZ25lc3MgdG8gb2JleSB0aGUgb3JkZXJzIG9mIHRoZSBtZW4gaW4gdGhlaXIgZmFtaWxpZXMsIHRoZW4gdGhleSBtaWdodCBoYXZlIHRvIHBheSB3aXRoIHRoZWlyIGxpdmVzLiBCZWluZyBhIHdvbWFuIGlzIG5ldmVyIHdpdGhvdXQgY29zdHMsIGJ1dCBkZWF0aCBpcyBzdXJlbHkgdG9vIGhpZ2ggYSBjb3N0IGZvciBhbnkgb2YgdXMgdG8gdG9sZXJhdGUuLiAKVGhlIG1haG9nYW55IGZpbmlzaCBnaXZlcyB5b3VyIGNoaXAgc2V0IHRoZSBsb29rIG9mIGEgZmluZSBjaWdhciBodW1pZG9yIGFuZCB0aGUgd29vZCBpdHNlbGYgYW5kIGl0cyBjb25zdHJ1Y3Rpb24gYXJlIHZlcnkgc29saWQuIApJIGFscmVhZHkgaGFkIGEgbG93IHN1Z2FyIGNvbnN1bXB0aW9uIGluIGdlbmVyYWwuIEhvd2V2ZXIgSSBmb3VuZCwgbGlrZSBhbm90aGVyIGNvbW1lbnRvciBoZXJlLCB0aGF0IEkgcmVjb2duaXplZCBob3cgbmF0dXJhbGx5IHN3ZWV0IGNlcnRhaW4gZm9vZHMgd2VyZSBpbiBnZW5lcmFsLiBMaWtlIGJyb2Njb2xpLCBhbG1vbmRzLCBhcHBsZXMuClVuZm9ydHVuYXRlbHkgaXQgc2VlbXMgd2UgaGF2ZSBhIHN0aWdtYSBpbiBvdXIgY3VsdHVyZSBhYm91dCBzYWZldHkuIEkgZ3Vlc3MgaWYgeW91IHRha2luZyBwcmVjYXV0aW9ucyB0byBiZSBzYWZlIHlvdSBtdXN0IGJlIGEgd2ltcCBvciBzb21ldGhpbmcsIGlkayBidXQgaXQgc3R1cGlkLiBJIHdhdGNoZWQgcGVvcGxlIGJsb2NrIGZpcmUgZXhpdHMgd2l0aCBmb3JrbGlmdHMsIHNtb2tlIG5leHQgdG8gcHJvcGFuZSBzdG9yYWdlLCBldGMsIGV0Yy5JZiBhbnl0aGluZyBpcyBnb2luZyB0byBraWxsIHRoaXMgc3BlY2llcyBpdCBiZSB0aGVpciBvd24gYXBhdGh5IGFuZCBpZ25vcmFuY2UuRW5kZGFNaSBNaXggMyBQaXhlbCBDIDEwIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnb0kgZ290IG15IE1pIE1peCAzIHJpZ2h0IGF0IGxhdW5jaCBhbmQgSSBoYXZlIGhhZCBzdWNoIGEgdGVycmlibGUgdGltZSB3aXRoIGlkbGUgYmF0dGVyeSBkcmFpbi4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlTEcgQmVzdCBTcGxpdCBBQyBGb3IgVGhpcyBTdW1tZXJzCjIwLjAxJSB0byAzNi45JSAgIEF2ZXJhZ2U6IFRoZXNlIHBsYXllcnMgYXJlIHRoZSBtb3N0IGRhbmdlcm91cyBpbiB0aGF0IHRoZXkgbWF5IGhhdmUgdGVuZGVuY2llcyBvZiBiZWluZyBzb2xpZCBhbmQgd2VhaywgbWFueSBvZiB0aGVtIGluIHBva2VyIGxlYXJuaW5nIHN0YWdlcyB0aGF0IG1heSB3ZWxsIGJlIGltcHJvdmluZy4gSSBmaW5kIHRoZSByZWFzb24gd2h5IHRoZXNlIG9ubGluZSBwb2tlciBwbGF5ZXJzIGFyZSBzdHVjayBpbiB0aGlzIHpvbmUgaXMgdGhhdCB0aGV5IGNhbid0IGxldCBnbyBvZiBkcmF3cywgZXZlbiB3aGVuIHBvdCBvZGRzIGp1c3RpZnkgYW4gb2J2aW91cyBmb2xkLiBUaGUgY291cnNlIG9mIGFjdGlvbiBoZXJlIGlzIGJhc2ljYWxseSBzdHJhaWdodCB1cCwgdW5sZXNzIHlvdSBoYXZlIHNvbWUgb3RoZXIgaW5kaWNhdGlvbiBvZiB0aGVpciBwbGF5LiBJZiB5b3UgaGF2ZSB0aGVtIG9uIGFuIG9idmlvdXMgZHJhdywgYmV0IHNvbGlkLiBJZiB0aGUgcml2ZXIgaXMgYSBicmljayBhZGQgb25lIHNtYWxsIGJldCB0byBjYXAgaXQgb2ZmLCBhbmQgaG9wZSBmb3IgYSByZSByYWlzZS4gSW4gZ2FtZSBwbGF5LCB0aGV5IGFyZSB0aGUgb25lcyB0byB3YXRjaCBtb3N0IGluIG9yZGVyIHRvIGhlbHAgYnVpbGQgYW4gaWRlbnRpdHkuCkxhdGVyIG9uIHRoZSBmaWZ0aCBmbG9vciwgaGUgc2V0cyBwYXJ0IG9mIGEgcmVkIGhhbGx3YXkgY2FycGV0IGFibGF6ZSwgZmlsbGluZyB0aGUgY29ycmlkb3Igd2l0aCBzbW9rZS4gSG90ZWwgc2VjdXJpdHkgaGFkIGFscmVhZHkgZXZhY3VhdGVkIGd1ZXN0cy4KQXBwcmVuZXogbGVzIGNvbWJpbmFpc29ucyAgY2lucSBjYXJ0ZXMuIElsIGV4aXN0ZSBkaXggbWFpbnMgIGNpbnEgY2FydGVzIGRlIGJhc2UgYXUgcG9rZXIgKGRjcml0ZXMgZGFucyBsYSBkZXJuaXJlIHNlY3Rpb24gZGUgY2UgdHV0b3JpZWwpLiBBcHByZW5leiBsZXMgYWluc2kgcXVlIGxldXIgY2xhc3NlbWVudCAoZGUgbGEgcGx1cyBmb3J0ZSAgbGEgcGx1cyBmYWlibGUpLiBDJ2VzdCBpbmRpc3BlbnNhYmxlIHBvdXIgam91ZXIgYXUgcG9rZXIuIEltcHJpbWV6IHVuZSBmaWNoZSBhdmVjIGNlcyBjb21iaW5haXNvbnMgZXQgdHVkaWV6IGxhLiBTaSB2b3VzIGNvbm5haXNzZXogYmllbiB0b3V0ZXMgbGVzIGNvbWJpbmFpc29ucyBwb3NzaWJsZXMsIHZvdXMgcG91cnJleiBkdGVybWluZXIgc2kgdm90cmUgbWFpbiBlc3QgYXNzZXogZm9ydGUgcG91ciBxdWUgdm91cyBtaXNpZXogb3Ugc2kgdm91cyBkZXZleiB2b3VzIGNvdWNoZXIgb3UgZXNzYXllciBkZSBibHVmZmVyLgpBICJiYWNrdXAiIGJ1cm5lciBhbmQgZnVlbCBuZWdhdGVzIHdoYXRldmVyIG1hcmdpbmFsIHdlaWdodCBzYXZpbmdzIHlvdSBnZXQgZnJvbSBhIHdvb2Qgc3RvdmUsIGFuZCBjYXJyeWluZyBhbiBlcXVhbCB3ZWlnaHQgaW4gYWxjb2hvbCB2cyB0aGUgd29vZCBzdG92ZSB3aWxsIG1vcmUgdGhhbiBsaWtlbHkgZ2V0IHlvdSB3aGVyZSB5b3VyIGdvaW5nIGFuZCBiZSBtb3JlIGNvbnZlbmllbnQuLiAKTXkgbW90aGVyIG5ldmVyIGV2ZXIgZGlkIHRoYXQgYWdhaW4uIEFuZCBJIGxlYXJuZWQgYSB2YWx1YWJsZSBsZXNzb24gYWJvdXQgaG93IE5PVCB0byBiZWhhdmUgbm93IHRoYXQgSSBoYXZlIGdyYW5ka2lkcyBvZiBteSBvd24uIEkgZG8gaGF2ZSB0aGUgZGVzaXJlIHRvIHNheSAiT2gsIHRoZXkgZmluZSwgbGV0IHRoZW0gYmUuIiBCdXQgSSBrbm93IGJldHRlciB0aGFuIHRvIHNheSBpdC4KR3JpbmQgdGhlIG9hdG1lYWwgaW4gYSBjb2ZmZWUgZ3JpbmRlciBvciBmb29kIHByb2Nlc3NvciB0byBnZXQgYSBzYW5keSBjb25zaXN0ZW5jeS4gCkF0IDE1IG1pbiB5b3UgbWF5IG5vdCBnZXQgYSBmdWxsIG9yYml0IG9mIHRoZSBidXR0b24gaW4gYSBsaXZlIGdhbWUsIGRlcGVuZGluZyBvbiB0aGUgcGFjZSBvZiB5b3VyIGdhbWUuIApPd25lcnMgb2YgdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24gbGl2ZSBvZmYgb2Ygb3VyIGxhYm9yLCBhbmQgdGhleSBsaXZlIHdlbGwuIApJbiBwb2tlciBwYXJsYW5jZSwgd2hhbGVzLiAKS2V0dGxlYmVsbCB0cmFpbmluZyBpbnZvbHZlcyBtdWx0aXBsZSBtdXNjbGUgZ3JvdXBzIGFuZCBlbmVyZ3kgc3lzdGVtcyBhdCBvbmNlLCB0aHVzIGluY3JlYXNpbmcgcmVzaXN0YW5jZSB0byBpbmp1cnkuClN0YXJ0IGFwcGx5aW5nLiBNYW55IGhpcmluZyBtYW5hZ2VycyAobXlzZWxmIGluY2x1ZGVkKSB3aWxsIG5vdCByZXF1aXJlIHlvdSB0byBoYXZlIGNvbXBsZXRlZCBhbnkgZm9ybWFsIGVkdWNhdGlvbiBpbiBJRCBnaXZlbiB5b3VyIHRlYWNoaW5nIGJhY2tncm91bmQgaW4gYWRkaXRpb24gdG8geW91ciBpbiBwcm9ncmVzcyBjZXJ0aWZpY2F0aW9uIHdvcmsuIEkgY2FuIHRlbGwgeW91IGZpcnN0IGhhbmQsIGF0IGxlYXN0IG9uIHRoZSBlYXN0IGNvYXN0LCB0aGF0IGdvb2QgcGF5aW5nIElEIGpvYnMgYXJlIHBsZW50aWZ1bCBhbmQgaXQgaXMgYSBidXllciBtYXJrZXQuIE1vcmUgam9icyB0aGFuIGNhbmRpZGF0ZXMuIEp1c3QgZG9uIGV4cGVjdCBhICJTci4iIElEIHJvbGUgYW5kIHlvdSBoYXZlIG5vIHByb2JsZW0gc28gbG9uZyBhcyB5b3UgaW50ZXJ2aWV3IHdlbGwuIEFuZCBmb3IgZ29vZG5lc3Mgc2FrZSAgIGhhdmUgYSBwb3J0Zm9saW8uIElmIEkgc2VlIG9uZSBtb3JlIGNhbmRpZGF0ZSBnaXZlIG1lIHRoZSAiQWxsIG9mIG15IHBhc3Qgd29yayBpcyBwcm9wcmlldGFyeS90b3Agc2VjcmV0IiBJIGdvaW5nIHRvIGNyeSA6ICkKU29tZXRpbWVzIHlvdSB3aWxsIHNlZSBwbGF5ZXJzIHN0aWZmIHRoZSBkZWFsZXIgaWYgdGhlIHBvdCB3YXMgdGlueSBvciBzcGxpdCBiZXR3ZWVuIHR3byBwbGF5ZXJzLiAKUGVydmlvdXMgZXN0aW1hdGVzIHB1dCB0aGUgbWFzcyBvZiB0aGUgTWlsa3kgV2F5IHJhbmdpbmcgYmV0d2VlbiA1MDAgYmlsbGlvbiBhbmQgMyB0cmlsbGlvbiB0aW1lcyB0aGUgbWFzcyBvZiB0aGUgU3VuLiBUaGUgVGVzbGEgYW5kIFNwYWNlWCBmb3VuZGVyIGlzIHJlc3VibWl0dGluZyBhIGZvcm0gd2hpY2ggcmVxdWlyZXMgZ292ZXJubWVudCBlbXBsb3llZXMgb3IgY29udHJhY3RvcnMgd2l0aCBzZWN1cml0eSBjbGVhcmFuY2UgdG8gZGlzY2xvc2UgaWxsZWdhbCBkcnVnIHVzZSBpbiByZWNlbnQgeWVhcnMsICByZXBvcnRlZC4gCk5vdGhpbmcgdGhhdCBoYXBwZW5zIHRvIFRydW1wLCBhdCB0aGlzIHBvaW50LCBpcyBnb2luZyB0byBkaXNzdWFkZSB0aGVtLiAKSSBhbHNvIHByZXR0eSBjb25maWRlbnQganVzdGljZSB3aWxsIHJlYXNzZXJ0IGl0c2VsZiBvdmVyIHRoaXMgbW9zdCByZWNlbnQgY291cCBhbmQgYSBzb3J0IG9mIG5vcm1hbGN5IHdpbGwgYmUgcmVlc3RhYmxpc2hlZCwgYXQgbGVhc3QgaW4gZ292ZXJubWVudC4KQWZ0ZXIgeW91J3ZlIGludmVzdGlnYXRlZCBzY2hvb2wgc3BlY2lmaWMgYWlkLCB5b3UgY2FuIGxvb2sgdG8gb3JnYW5pemF0aW9ucyBpbnRlcmVzdGVkIGluIHN1cHBvcnRpbmcgc3R1ZGVudHMgd2l0aCBmaW5hbmNpYWwgbmVlZCwgZ29vZCBhY2FkZW1pYyBjcmVkZW50aWFscyBhbmQgYW4gaW50ZXJlc3QgaW4gdHJhZGUgc2Nob29sLiAKVGhhdCBsYXdzdWl0ICAgYW5kIGFuIHVucmVsYXRlZCBzdGF0ZSBjb3VydCBjYXNlIHNjaGVkdWxlZCBmb3IgdHJpYWwgb24gRGVjLiA0ICAgY291bGQgZXhwb3NlIG1vcmUgYWJvdXQgRXBzdGVpbidzIGNyaW1lcywgYXMgd2VsbCBhcyB3aG8gZWxzZSB3YXMgaW52b2x2ZWQgYW5kIHdoZXRoZXIgdGhlcmUgd2FzIGFueSB1bmR1ZSBpbmZsdWVuY2UgdGhhdCB0YWludGVkIHRoZSBmZWRlcmFsIGNhc2UuClRoZSBUaW1lcyBhcnRpY2xlIGNpdGVkIGEgc3R1ZHkgYnkgdGhlIEd1dHRtYWNoZXIgSW5zdGl0dXRlLCBhbiBhYm9ydGlvbiByaWdodHMgcmVzZWFyY2ggZ3JvdXAuIApUaGlzIHdpbGwgYWxzbyBoZWxwIHlvdXIgY2hhbmNlcyBvZiBoYXZpbmcgdGhlIEVudHJ5IEFwcHJvdmVkLkFzayB5b3Vyc2VsZiBpZiB5b3UgYWN0dWFsbHkgdW5kZXJzdGFuZCB0aGUgRW50cnkuIE9uIHRoZSBvdGhlciBoYW5kLCBpdCBtaWdodCB3ZWxsIGJlIHlvdSwgc28gZG9uJ3QgYmUgYWZyYWlkIHRvIHRhY3RmdWxseSBhc2sgZm9yIGFuIGV4cGxhbmF0aW9uLlRyeSBub3QgdG8gaGVhZCBvZmYgb24gdGFuZ2VudHMgb3IgZHJpZnQgYXdheSBmcm9tIGRpc2N1c3Npb24gb2YgdGhlIGVudHJ5LiAKQWxzbywgbW9zdCBwb2tlciBwbGF5ZXJzIHN0aWxsIHByZWZlciBsaXZlIHBva2VyIGdhbWVzIGJlY2F1c2UgdGhleSBiZWxpZXZlIHRoYXQgaW4gb25saW5lIHBva2VyIGdhbWVzIHBsYXllcnMgZG8gbm90IGdldCB0byBjb21taXQgbWlzdGFrZXMgY29tcGFyZWQgdG8gcGVvcGxlIHdobyBwbGF5IGxpdmUuIApUaGF0IHNvdW5kcyBjb2xkIGFzIGhlbGwgdG8gc29tZSwgYnV0IGl0IGlzIHRoZSB0cnV0aC4gCkp1c3QgaW1hZ2luZSBpZiB5b3Ugd2VyZSBpbiB0aGVpciBzaG9lcyAgIERlbW9jcmF0cyBhbmQgbGliZXJhbCB2YWx1ZXMgb24gdGhlIHJpc2UsIHlvdXIgbW9zdCBkcmVhZGVkIGJvb2dleXdvbWFuIGFib3V0IHRvIHRha2UgdGhlIHdoaXRlIGhvdXNlICAgYWxsIHNlZW1zIGxvc3QuIFRoZW4gY29tZXMgRG9uYWxkIFRydW1wLiBBbmQgc3VkZGVubHkgaGUgc2F5aW5nIHRoZSBzYW1lIHJhY2lzdCBzaGl0IGluIHRoZSBXaGl0ZSBIb3VzZSB5b3UgYmVlbiBzYXlpbmcgdG8geW91ciBidWRkaWVzIGZvciBhbGwgdGhlc2UgeWVhcnMsIGdyb3dpbmcgYW5ncmllciBhbmQgYW5ncmllciB0aGF0IHlvdSBjYW4gc2F5IGl0IGluIHB1YmxpYyBhbnltb3JlLgpJc2xhbTRVSyBpcywgYWNjb3JkaW5nIHRvIHRoZSBCcml0aXNoIGdvdmVybm1lbnQgYW5kIG11Y2ggb2YgdGhlIHByZXNzLCBhIGJhbmQgb2YgcmFkaWNhbCBkZWZlbmRlcnMgb2YgYWxsIHNvcnRzIG9mIHRlcnJvcmlzbSBkb25lIGluIHRoZSBuYW1lIG9mIElzbGFtIGFuZCB0aGVyZWZvcmUgYSAicHJvYmxlbS4iIHRoZSBncm91cCBwbGFubmVkIGEgZGVtb25zdHJhdGlvbiBpbiBXb290b24gQmFzc2V0dCwgYSB0b3duIG1hZGUgZmFtb3VzIGZvciBob25vcmluZyB0aGUgQnJpdGlzaCBkZWFkIGZyb20gdGhlIHdhcnMgaW4gSXJhcSBhbmQgQWZnaGFuaXN0YW4uIDQgVUsgd2FudGVkIHRvIG1hcmNoIHdpdGggY29mZmlucyByZXByZXNlbnRpbmcgbm90IEJyaXRpc2ggc29sZGllcnMsIGJ1dCBJcmFxaSBhbmQgQWZnaGFuIGNpdmlsaWFuIGRlYWQuCkJhaGFtYXMgQmVoZW1vdGggVGhlIENhcmliYmVhbiBjYXNpbm8gZ2FtYmxpbmcgc2NlbmUgaXMgZHluYW1pYyBhbmQgZXZlciBjaGFuZ2luZywgYnV0IHRoZSBiaWdnZXN0IG9mIHRoZSByZWdpb24ncyBjYXNpbm9zLCBhcyBvZiBzcHJpbmcgMjAxMCwgd2FzIGF0IHRoZSBBdGxhbnRpcyBQYXJhZGlzZSBIb3RlbCBpbiB0aGUgQmFoYW1hcy4gT3BlbiAyNCBob3VycyBhIGRheSwgdGhlIGNhc2lubyBjb3ZlcnMgMTAwLDAwMCBzcXVhcmUgZmVldCBhbmQgb2ZmZXJzIG1vcmUgdGhhbiA4MDAgZWxlY3Ryb25pYyBzbG90IG1hY2hpbmVzIGFuZCBhYm91dCA4MCB0YWJsZSBnYW1lcywgaW5jbHVkaW5nIGJsYWNramFjaywgYmFjY2FyYXQsIGNyYXBzLCBwb2tlciBhbmQgcm91bGV0dGUuIEluIGFkZGl0aW9uIHRvIGl0cyBzdGF0dXMgaW4gdGVybXMgb2Ygc2hlZXIgc2l6ZSwgdGhlIEF0bGFudGlzIGlzIGNsZWFybHkgdGhlIG1vc3QgbGF2aXNobHkgZGVjb3JhdGVkLCBmZWF0dXJpbmcgYSBDaGlodWx5IGdsYXNzIGNoYW5kZWxpZXIgdGhhdCBvdmVyaGFuZ3MgdGhlIGJhY2NhcmF0IHBsYXlpbmcgYXJlYS4KQ29uIGVzdG8gZXN0biB0ZXJtaW5hbmRvIGRlIG1hdGFyIGxvcyB0b3JuZW9zIGRlIHBva2VyLiAKTWF0dGhld2hhbmcgICAxIHBvaW50cyAgc3VibWl0dGVkIDI2IGRheXMgYWdvCkkgd29uZGVyIHdoYXQgc2hlIGhhZCB0aG91Z2h0IG9mIG1lLiAKSSByZWZ1c2UgdG8gZ2V0IGEgc2lkZSBqb2IsIG91dCBvZiBwdXJlIHN0dWJib3JubmVzcyAoYW5kIHRoZSBmYWN0IG15IGpvYiBpcyBhY3R1YWxseSB2ZXJ5IHRpbWUgZGVtYW5kaW5nIHdpdGggdHJhdmVsIHNvIGl0IHdvdWxkIGJlIGhhcmQgdG8gd29yayBhcm91bmQgaXQpLiBJIGZvcnR1bmF0ZSB0aGF0IEkgZ2V0IHBhaWQgd2VsbCBlbm91Z2ggbm90IHRvIG5lZWQgYSBzaWRlIGpvYiwgYnV0IEkgaGF2ZSBhIG1hc3RlcnMgZGVncmVlIGluIGVuZ2luZWVyaW5nLiAKV2l0aCBoZXIgd2lubmluZ3Mgc2hlIGhhcyBwYWlkIG9mZiBoZXIgY2FyIGFuZCBzb21lIG90aGVyIGJpbGxzLCBhbmQgc2hlIGlzIG5vdyBpbiB0aGUgcHJvY2VzcyBvZiByZXN0b3JpbmcgaGVyIGZhbWlseSBob21lIGluIFNlbmF0b2JpYS4KQm91cmdlb2lzQ2Flc2FyIHUKVGhlcmUgYXJlIHR3byBwb2ludHMgdG8gbm90ZSBiZWZvcmUgd2Ugc3RhcnQ6Ck1vcmVvdmVyIHRvd2FyZHMgdGhlIGxpc3Qgb2YgcG9zaXRpdmUgYXNwZWN0cyBtZW50aW9uZWQgYWJvdmUsIG9ubGluZSBnYW1ibGluZyBvZmZlcnMgZXF1YWwgY2hhbmNlIGZvciBtZW4gYW5kIHdvbWVuIHdpdGggZGlzYWJpbGl0aWVzIG9yIHRob3NlIHdobyBjYW5ub3QgYWZmb3JkIHRyYXZlbGluZyBvdXQgb2YgdGhlaXIgc3RhdGUgdG8gcGxheSBpbnNpZGUgYSBsZWdhbCBsYW5kIHByaW1hcmlseSBiYXNlZCBjYXNpbm8uIEl0IGluY2x1ZGVzIGEgc3Vic3RhbnRpYWwgdW50YXBwZWQgdmlzaXRvcnMgc291cmNlLiAKSW4gaGlzIDIyIHllYXJzIG9uIHRoZSBmb3JjZSwgb25seSBvbmUgKE9ORSkgcGVyc29uIGhhcyBqdW1wZWQgb24gQnJpZ2dzJyB3YXRjaC4gTm90IGV2ZW4gQmF0bWFuIGNhbiBib2FzdCB0aGF0IGtpbmQgb2Ygc3VjY2VzcyByYXRlLiAKU28gY29tbXVuaWNhdGlvbiBpcyBhIHByb2Nlc3Mgd2hpY2ggY2Fubm90IGJlIGhpZGRlbiBvciBjb250cm9sbGVkIGJ5IGFueSBwZXJzb24uIApFdmVyeSBzbyBvZnRlbiB3aGVuIHdlIGFyZSBvdXQgYW5kIGFib3V0IGFuZCBoZSBpcyBub3QgaW4gZWFyc2hvdCwgSSBiZWVuIGdldHRpbmcgc3RyYW5nZXJzIHRvIHRlbGwgaGltIHRoYXQgaGUgbG9va3MgbGlrZSBKdXN0aW4gVGltYmVybGFrZSAoaGUgbG9va3Mgbm90aGluZyBsaWtlIEpUKS4gClVuZm9ydHVuYXRlbHksIHRoZXkgbW92ZWQgYWJvdXQgMiBob3VycyBhd2F5IGEgY291cGxlIG9mIHllYXJzIGFnby4gCkRvIHRoaW5rIHlvdSBzdGFydGluZyB0byBoZWFyIG1vcmUgcGVvcGxlIHdhbnRpbmcgdGhlaXIgdHJhZGVzIG91dCBsb2NhbCwgc2hlIHNheXMuIGFyZWEgaXMgZ3Jvd2luZyBsYXJnZSBlbm91Z2ggdGhhdCB5b3UgY2FuIHN0YXkgbG9jYWwsIGFuZCBJIHRoaW5rIGl0IGJyaW5ncyBwZWFjZSBvZiBtaW5kLiBZb3UgcmVhbGl6ZSAnd2h5IGRvIEkgd2FudCB0byBiZSBkcml2aW5nIHRocm91Z2hvdXQgVmFuY291dmVyLCBhbmQgdGhlIGVudGlyZSBsb3dlciBtYWlubGFuZCB0byByZWFjaCBkaWZmZXJlbnQgc2VydmljZXMnPyJNaWNrZXkgRmFiYmlhbm8gYW5kIFNlYmFzdGlhbiBTZXZhbGxvIG9mIEhHVFYncyBXb3JzdCB0byBGaXJzdCB3aWxsIGJlIHByZXNlbnRpbmcgYXQgdGhlIEJDIEhvbWUgKyBHYXJkZW4gU2hvdy4gUGhvdG86IFB1cml0eSBEZXNpZ24gVGhlIEhvbWUgRnJvbnQ6IEV4cGVydCBhZHZpY2UgYXQgdGhlIEJDIEhvbWUgKyBHYXJkZW4gU2hvdyBieSBSZWJlY2NhIEtlaWxsb3IgW1BORyBNZXJsaW4gQXJjaGl2ZV0KT24gcydlc3QgZGogcmVuY29udHIgbG9ycyBkZSBGZXN0aXZhbHMgY29tbWUgY2VsdWkgZGUgTSBHaGVuIHBycyBkZSBDb2xtYXIgZW4gMjAwNiBvdSAyMDA3LgpXaGVuIHdlIHdlbnQgZm9yIG91ciB3ZWRkaW5nIHJpbmdzIGFuZCBpbiB3YWxrcyBzdXBlciB3aGl0ZSBtZSBhbmQgbXkgdmVyeSBMYXRpbm8gbG9va2luZyAodGhlbikgZmluYWMuIEl0IGEgdGlueSBsaXR0bGUgc2hvcCBhbmQgdGhlIHR3byBwcm9wcmlldG9ycyBiZWdpbiB0byB0YWxrIGFtb25nc3QgdGhlbXNlbHZlcyBpbiBIZWJyZXcgKG9uZSBvZiBteSBodXNiYW5kICJmaXJzdCIgbGFuZ3VhZ2VzKSBhYm91dCBob3cgbXVjaCB0aGV5IHNob3VsZCBjaGFyZ2UuIFRoZSBmaXJzdCBzYXlzLCAiaXQgc2hvdWxkIGJlIGF0IGxlYXN0ICQ2NTAsIiB0aGUgc2Vjb25kIHNheXMsICJ0ZWxsIGhpbSBpdCB3aWxsIGJlICQ3MDAgYXQgbGVhc3QsIiAibWF5YmUsICQ3NTAsIEkgY2FuIHRyeSB0aGF0LiIgTXkgaHVzYmFuZCBzYXlzLCBpbiBIZWJyZXcgKGJ1dCB3aXRoIGEgc21pbGUpLCAiSSBnaXZlIHlvdSAkNTAwLiIgVGhleSBqdXN0IGZyb3plLCBhbmQgZXZlcnlvbmUgbGF1Z2hlZCBhbmQgd2Ugd2VudCBpbnRvIGEgbW9yZSBvcGVuIG5lZ290aWF0aW9uLiAKWW91IGNhbiBtYWtlIGEgUHJvZmlsZSB5b3Vyc2VsZiBvciBwdXJjaGFzZSBvbmVzIG1hZGUgYnkgcHJvZmVzc2lvbmFsIHBsYXllcnMuLiAKUnVuc29ucGVhbnV0YnV0dGVyICAyMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpGb3IgdGhlIGhhbmRzIEkndmUgZ290IGhhbmQgd2FybWVyIHBhY2tzLCBmb2xsb3dlZCBieSBhIHNvY2sgb24gbXkgZmluZ2VydGlwcywgZm9sbG93ZWQgYnkgQXVjbGFpciBtaXR0ZW5zLiAKVGhlIEh1bnRlcnMgaGF2ZSBiYXJlbHkgd29rZW4gdXAgYW5kIGFyZSB0aGVuIGhhdmluZyBhIHRyYXVtYXRpYyBldmVudC4gClN3ZWF0aW5nLCByYXNoZXMgYW5kIGV2ZW4gZnVuZ2FsIGluZmVjdGlvbnMgYXJlIGFsc28gcG9zc2liaWxpdGllcy4gTWFueSB3b21lbiBmaW5kIHRoYXQgc2lsayBhbmQgY290dG9uIGNhbWlzb2xlcyB3b3JuIG5leHQgdG8gdGhlIGJyZWFzdCBsZXNzZW4gdGhlc2UgaXNzdWVzLiAKQXNzdW1pbmcgeW91IGhhdmUgYSByZWFzb25hYmxlIHRhZyBpbWFnZSBhbmQgeW91ciBvcHBvbmVudCBpcyBhIHRoaW5raW5nIHBsYXllciB3aG8gd291bGQgZ2l2ZSBhIDMvNCBiZXQgY3JlZGliaWxpdHkgdGhlbiB0aGV5IGJlIGluY2xpbmVkIHRvIGxldCBpdCBnby4gSmFja3MgaXMgdGhlIHZlcnkgdG9wIG9mIHRoYXQgcmFuZ2UgdGhhdCBjb3VsZCBsZXQgdGhlaXIgaGFuZCBnbyBhbmQgeWVzIEkgc3VyZSB0aGVyZSBhcmUgcGxlbnR5IG9mIHBsYXllciB3aG8gd291bGQgbm90IGxldCBqYWNrcyBnbyBpdCByZWFsbHkgZGVwZW5kZW50LiBBbHNvIGEgcG9ja2V0IHBhaXIgaXNuIGNvbnNpZGVyZWQgbmFwa2lucyBieSBhbnkgc3RyZXRjaC4uIApGb3IgdGhlIHBhc3QgZmV3IHllYXJzLCBJIGhhZCB0aGVtIGVtYWlsIHRoYXQgdmVyaWZpY2F0aW9uIHRvIGEgZ29vZ2xlIGVtYWlsIGFkZHJlc3Mgc28gdGhhdCBpdCB3YXMga2VwdCBvdXRzaWRlIG9mIHRoZSBub3JtYWwgbW9kbWFpbCBsaXN0LCBhbmQgSSBtIGFibGUgdG8gZGVsZXRlIHRob3NlIGVtYWlscyBvbmNlIHRoZXkgYmVlbiBwcm9jZXNzZWQuIE15IGlkZWFsIHNvbHV0aW9uIGlzIGEgc3BhY2Ugd2hlcmUgSSBjYW4gZ28gdGhyb3VnaCBvbmUgYXQgYSB0aW1lIGFwcHJvdmluZyB1c2VycyB0byB0aGUgc3VicmVkZGl0IHF1aWNrbHkgd2l0aCBvbmUgb3IgdHdvIGNsaWNrcywgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBkZWxldGluZyB0aGVpciBhZG1pdHRhbmNlIHJlcXVlc3RzIG9uY2UgdGhleSB3ZXJlIGFwcHJvdmVkLiAKKEhlcmUgeW91IG5vdCBnZXR0aW5nIGEgcGVyZmVjdCBhaXJ5IHNwb3QgYmVjYXVzZSB0aGUgbGFzZXIgaXNuIGlkZWFsLikuIApIb3BlIHRoYXQgaGVscHMgc29tZSEuIApTZW5zaWJsZU1hZG5lc3MgdQpXaGF0J3MgbW9yZSwgaXQgYSBjb25jZXB0IHRoYXQgaXMgdmVyeSBhcHBsaWNhYmxlIHRvIGFsbCBjaHJvbmljIGRpc2Vhc2UuCkl0IGZydXN0cmF0aW5nIHdoZW4geW91ICJkbyBldmVyeXRoaW5nIHJpZ2h0IiBhbmQgc3RpbGwgc3RydWdnbGUuLiAKTWFjcm8gYnJlYWtkb3duIGlzIGEgY2xvc2Ugc2Vjb25kLCBidXQgY2Fsb3JpZXMgYXJlIGtpbmcuIApXZSBtYXkgYWxzbyB1c2Ugd2ViIGJlYWNvbnMgYW5kIHNpbWlsYXIgdGVjaG5vbG9naWVzLiBXZSB1c2UgdGhlc2UgdG9vbHM6LiAKSG93IHBsYXllcnMgYXJlIHBlcmNlaXZlZCBieSBvdGhlcnMgaXMgdGhlIGtleSB0byBtb3N0IGFueSBibHVmZnMgYW5kIHRlbGxzLiBQbGF5ZXJzIG5lZWQgdG8gYmUgZXh0cmVtZWx5IGF3YXJlIG9mIHRoZWlyIGltYWdlIGJlZm9yZSBhdHRlbXB0aW5nIGFueXRoaW5nIGxpa2UgdGhpcy4gT25lIGhhcyB0byBiZSBiZWxpZXZhYmxlLiBJbiBtb3N0IGNhc2VzIHBsYXllcnMgd2hvIGFyZSB0aWdodCBoYXZlIHRoZSBiZXN0IGNoYW5jZSBvZiBnZXR0aW5nIGF3YXkgd2l0aCBpdCBzdWNjZXNzZnVsbHkuIExvb3NlIG9yIGFnZ3Jlc3NpdmUgcGxheWVycyB3aWxsIG1vc3QgZGVmaW5pdGVseSBnaXZlIGF3YXkgbW9yZS4KSWYgeW91IHRyeSB0aGF0IGluIHRoZSB3b3JsZCBub3cgeW91IHR5cGljYWxseSBnZXQgYSByZXNwb25zZSBvZiAicGxlYXNlIGdvIG9uIG91ciB3ZWJzaXRlL2pvYiBwb3J0YWwgYW5kIGZpbGwgb3V0IHRoZSBmb3JtIi4uIApBIGNvdXBsZSB3ZWVrcyBhZnRlciBoZSBnYXZlIG1lIGhpcyBjb2xsZWN0aW9uIEkgd2FzIGF0IE5ldXRyYWwgR3JvdW5kcyBhbmQgc2F3IGEgZ3V5IHdpdGggYSBjdXN0b20gZGVjayBob2xkZXIuIEkgYXNrZWQgaGltIHdoZXJlIGhlIGdvdCBpdCxoZSB0b2xkIG1lIGhlIG1hZGUgaXQuIApBZ2Fpbiwgd2l0aG91dCBleGFtaW5pbmcgeW91ciBwZXQva25vd2luZyBpdHMgaGlzdG9yeSwgYW5kIGRvaW5nIGEgbmVjcm9wc3kgdW5mb3J0dW5hdGVseSB0aGVyZSByZWFsbHkgaXNudCBhIHdheSB0byB0ZWxsLCBzbyBhbGwgdGhlIGFib3ZlIGFyZSBub3RoaW5nIG1vcmUgdGhhbiBoeXBvdGhlc2lzLiBJIHdvdWxkIGhvd2V2ZXIgdGFrZSBjb21mb3J0IGluIHRoZSBmYWN0IHRoYXQgeW91ciB2ZXQgYmVsaWV2ZXMgc2hlIHBhc3NlZCBpbnN0YW50bHkgYW5kIHRoZXJlZm9yZSBkaWRuJ3Qgc3VmZmVyLgpTZWUgaGlzIGludGVydmlldyB3aXRoIENocmlzIEhheWVzIChhIHNlbGYgaWRlbnRpZmllZCBCZXJuaWUgc3VwcG9ydGVyKSBsYXN0IHdlZWsgYXMgYW4gZXhhbXBsZS4gClB1dCBvbiBhIHBvZGNhc3QgYW5kIGdvIHRocm91Z2ggcm9wZXMsIHNoYXJwZW4gYXhlcywgY2hlY2sgc2xpbmdzIGFuZCBjYXJhYmluZXJzIGZvciB3ZWFyICAgbG9vayBhdCBzb21lIGNsb3RoaW5nIGFuZCBjaGVjayBpZiBpdCBiZWNvbWluZyB3b3JuLiAKVGhlbiB3ZSBjYW4gZG8gYSBibG9jayBzaXplIGluY3JlYXNlIG1heWJlLgoiSWYgY2hhcml0aWVzIHJlZnVzZWQgdG8gZGl2ZXJ0IHRoZWlyIHByb2ZpdHMgYXMgZGlyZWN0ZWQgICBpZiB0aGV5IHJlZnVzZWQgdG8gJ3BheSB0byBwbGF5JyAgIHRoZXkgd291bGQgYmUgZGVuaWVkIGdhbWluZyBldmVudHMgYXQgdGhlIFBhbGFjZSBQb2tlciBSb29tLCIgdGhlIGdhbWluZyBjb250cm9sIGJvYXJkIGNoYXJnZXMuICJQYWxhY2UgUG9rZXIgUm9vbSBpcyBvbmUgb2YgTWljaGlnYW4ncyB0b3AgZ3Jvc3NpbmcgcG9rZXIgcm9vbXMsIHdpdGggb3ZlciAkMiBtaWxsaW9uIGluIHJlcG9ydGVkIGdhbWJsaW5nIHByb2ZpdHMgZnJvbSAyMDEwIDIwMTIsIiByZWFkcyB0aGUgcmVsZWFzZS4KR28gZm9yIGEgdmFyaWV0eSBvZiBjb2xkIHdhdGVyIGZpc2ggYmVjYXVzZSB0aGV5IGFyZSBoaWdoIGluIG9tZWdhIDMgZmF0cyBmb3IgaW5zdWxpbiBoZWFsdGgsIGhpZ2ggaW4gcHJvdGVpbiwgYW5kIGNvbnRhaW4gdGhvc2UgbXVzY2xlIGJ1aWxkaW5nIG51dHJpZW50cyBsaWtlIGNyZWF0aW5lIGFuZCBjYXJuaXRpbmUuIApJdHMgYW4gaW1wb3J0YW50IGZhY3RvciB0aGF0IHRoZSBjb21tdW5pdHkgaXMgYXdhcmUgb2YgdGhlc2UgcG9zdHMgdGhhdCBlbmxpZ2h0ZW4gdGhlc2UgaXNzdWVzIGFzIHRoaXMgaGVscHMgaW1wcm92ZSB0aGUgZ2FtZSBpbiB0aGUgbG9uZyBydW4uIApJJ2QgcmF0aGVyIHRoZXkgZGlkbid0IGdvIGFib3V0IGFuZCB0cnkgdG8gY29udmluY2UgbXkgcGFyZW50cyB0byBraWNrIHRoZWlyICJpZGlvdCBzb24iIChwYXJhcGhyYXNlZCkgb3V0IG9mIHRoZWlyIGxpdmVzIGZvciBub3QgZ2V0dGluZyBpbnRvIGEgZGVjZW50IGdyYWR1YXRlIHNjaG9vbCAoeWV0KS4gQnV0IG1vcmUgaW1wb3J0YW50bHksIEknZCByYXRoZXIgbXkgZm9sa3MgZGlkbid0IHNpZGUgd2l0aCB0aG9zZSBwZW9wbGUgYW5kIGJlcmF0ZSBtZSBieSBzYXlpbmcgdGhhdCBJJ20gbm90IHdvcnRod2hpbGUgdG8gdGhlbSBzaW5jZSBJIGNvdWxkbid0IGdpdmUgb3VyIGZhbWlseSBhIGdvb2Qgc29jaWFsIHJlcHV0YXRpb24uIEknZCBtdWNoIHJhdGhlciBrZWVwIGFsbCBvZiBteSBvd24gaXNzdWVzIGluIG15IG93biBsaWZlLkkgdGhpbmsgbW9zdCBvZiB0aGUgZnJ1c3RyYXRpb24gYW5kIHRoZSBjb25mdXNpb24gY29tZXMgZnJvbSB0aGUgZmFjdCB0aGF0IG15IHNpc3RlciBpcyBpbmNyZWRpYmx5IHdlbGwgcmVzcGVjdGVkIGFuZCByZXZlcmVkIGFtb25nIHRoZSBsb2NhbCBLb3JlYW4gY29tbXVuaXR5IGJlY2F1c2Ugc2hlIHdlbnQgdG8gYW4gSXZ5IExlYWd1ZSBhbmQgaXMgbWFraW5nIGEgc2l4IGZpZ3VyZSBzYWxhcnkuIApUaGUgcmFkaW8gY291bGQgbm90IGJlIHVzZWQgdG8gbGV0IGNvbGxlYWd1ZXMgaW4gUGFraXN0YW4ga25vdzogdGhhdCBjb3VsZCBhbGVydCB0aGUgUnVzc2lhbnMuIEluc3RlYWQgaGUgYnJvYWRjYXN0IHR3byBjbGlja3MuIFBlc2hhd2FyIHNlbnQgYmFjayBhIHNpbmdsZSBjbGljazogcHJvY2VlZCBhcyBwbGFubmVkLi4gCkFjY3VzaW5nIHNvbWVvbmUgdGhhdCBpcyBleHBsYWluaW5nIGEgcGhlbm9tZW5vbiBvZiBiZWluZyBhIHJhY2lhbCBhcG9sb2dpc3QgaXMgZXhhY3RseSB3aGF0IEknbSB0YWtpbmcgYWJvdXQuIEl0J3MgYmVjb21lIGEgY2x1YiB3aGVyZSB5b3UgY2FudCBldmVuIHRhbGsgYWJvdXQgd2hhdCBkcml2ZXMgY2VydGFpbiB2b3RlcnMgd2l0aG91dCBnZXR0aW5nIGFjY3VzZWQgb2YgcmFjaXNtLiBJdCdzIGV4YWN0bHkgd2hhdCBzaGUgZGlkIHRvIG1lLiBJIHVuZGVyc3RhbmQgdGhhdCBwZW9wbGUgbGlrZSBoZXIgaGF2ZSBzdWZmZXJlZCBmcm9tIHJhY2lzbSBvbiBhIHJlZ3VsYXIgYmFzaXMuIEkgdW5kZXJzdGFuZCBpdCBtYWtlcyB0aGVtIHdhbnQgdG8gbm90IGdpdmUgYSBzaGl0IHdoYXQgc29tZSBydXJhbCB3aGl0ZSBtYWxlIHRoaW5rcyBvciBmZWVscy4gSSBnZXQgdGhhdC4gQnV0IHRoZSByZWFsaXR5IGlzIHRoYXQgdGhpcyBraW5kIG9mIHRob3VnaHRsZXNzIHJlYWN0aW9uYXJ5IHN0dWZmIGNvc3RzIHZvdGVzLiBJdCBmZWVscyBlbXBvd2VyaW5nIGJ1dCBpdCB0YWtlcyBhd2F5IHBvbGl0aWNhbCBwb3dlci4KQnV0IFJ1c3NpYSBkb2Vzbid0IHdhbnQgd2hhdCdzIGJlc3QgZm9yIEN5cHJ1cywgb3IgZm9yIHRoZSBFVS4gUnVzc2lhIHdhbnRzIHdoYXQncyBiZXN0IGZvciBSdXNzaWEuIEFuZCB0aGUgd2F5IGl0J3MgYWN0aW5nIHJlbWluZHMgbWUgb2Ygbm90aGluZyBzbyBtdWNoIGFzIGEgY2xhc3NpYyBXYWxsIFN0cmVldCBiZWFyIHJhaWQsIGRlc2lnbmVkIHRvIGRyaXZlIGRvd24gdGhlIHByaWNlIG9mIHNvbWV0aGluZyB5b3Ugd2FudCB0byBiZSBhYmxlIHRvIHBpY2sgdXAgdmVyeSwgdmVyeSBjaGVhcC4gV2hhdCdzIG1vcmUsIGl0IG1pZ2h0IGV2ZW4gd29yay4KQXMgbG9uZyBhcyBSZXB1YmxpY2FucyBjb250aW51ZSB0byBleHBsb2l0IHRob3NlIGZlYXJzLCB0aGVpciB2b3RlcnMgd2lsbCBvdmVybG9vayBvciBoYW5kd2F2ZSBhd2F5IGFueSBzZWxmIHNlcnZpbmcgZnVja2VyeSB0aGV5IHB1bGwuIApUaGUgcHJlIHJlbGVhc2UgcmV2aWV3cyBoZSBwdWxscyB1cCB0byBzaG93IGhvdyB3ZSAiZ2l2ZSBCZXRoZXNkYSBhIHBhc3MiIGFsbCBtZW50aW9uIHRoZSAiZ29vZnkgYnVncyIgYmVpbmcgZW50aXJlbHkgaW50YWN0LCBhbmQgaXQgbm90IGxpa2UgQmV0aGVzZGEgZXZlciBldmVuIHNsaWdodGx5IGltcGxpZWQgdGhhdCB0aGlzIHJlbGVhc2Ugd291bGQgaW5jbHVkZSBhbnkgYnVnZml4ZXMsIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgdGhlIFNwZWNpYWwgRWRpdGlvbiByZWxlYXNlcyBub3QgdGhhdCBsb25nIGFnbyBhbHJlYWR5IGRpZCBub3QgYW5kIGhhdmVuIHNlZW4gYW55IHBhdGNoZXMuCktlcHQgdGhlIGJsdWZmIGdvaW5nIHdoZW4gaGUgc2FpZCBoZSB3YXMgc3VwZXIgY2xvc2UgYW5kIEkgdG9sZCBoaW0gIkkgd2FzIGhvcGluZyIuIERpZG4ndCB0ZWxsIGhpbSB3aGF0IEkgd2FzIGhvcGluZyA7KS4gCk5vdCBhIHNob3cgc3RvcHBlciBidXQgdGhleSBkb24gZXZlbiBoYXZlIHRoZWlyIG9uIElQdjQgc3BhY2Ugd2hpY2ggbWVhbnMgdGhhdCB5b3Ugc2hvdyB1cCB0byBldmVyeSBzaXRlIHlvdSBnbyB0byBhcyBhbiBJUCBvbiB0aGVpciB1cHN0cmVhbSBiYWNrYm9uZSBwcm92aWRlci4gTmV2ZXIgaGVhcmQgb2YgYW4gSVNQIHRoYXQgZG9lc24gYWN0dWFsbHkgcGF5IGZvciBJUHMuCkl0IGlzIGFjdHVhbGx5IGdvb2QgdG8gYmxvdyBvZmYgYSBsaXR0bGUgc3RlYW0gYnkgcGxheWluZyBwb2tlciBvbmxpbmUuIEl0IGhlbHBzIHJlbGlldmVzIHlvdSBvZmYgdGhlIHN0cmVzcy4uIApJIHN1cHBvc2UgaXRzIHBvc3NpYmxlIHRvIGtpbGwgdGhlbSBhbGwgbG91ZGx5IGJ1dCBpdHMgbXVjaCBtb3JlIGRpZmZpY3VsdCBhbmQgaWYgeW91IGRpZSB5b3UgdGVjaG5pY2FsbHkgc3RhcnQgb3Zlci4gTWVhbmluZyB5b3UgY2FuIHNhdmUgZHVyaW5nIHRoZSBtaXNzaW9uIGlmIHlvdSBzY3JldyB1cCBhbmQgZ28gYmFjayB0byBpdCBidXQgSSBuZXZlciBkaWQgdGhhdCBiZWNhdXNlIGl0cyBubyBmdW4gYW5kIGp1c3Qgc3RhcnRlcyBvdmVyIHdoZW5ldmVyIEkgZGllZC4uIApJZiB0aGVyZSdzIGEgYnVybmluZyBuZWVkIHRvIGRlYmF0ZSBhbnl0aGluZyBvdGhlciB0aGFuIHRoZSBFbnRyeSwgcGxlYXNlIHN0YXJ0IGFub3RoZXIgQ29udmVyc2F0aW9uIGVsc2V3aGVyZS5TdGF5IHN1YnNjcmliZWQgdG8gdGhlIHRocmVhZDsgb25jZSB5b3UndmUgY29tbWVudGVkLCBrZWVwIGFuIGV5ZSBvbiB3aGF0IG90aGVycyBhcmUgc2F5aW5nLiBJdCBtYXkgYmUgdGhlIHN0YXJ0IG9mIGFuIGludGVyZXN0aW5nIENvbnZlcnNhdGlvbi5IYXZpbmcgWW91ciBFbnRyeSBBY2NlcHRlZE9uY2UgeW91ciBFbnRyeSBoYXMgYmVlbiBpbiBQZWVyIFJldmlldyBmb3Igc2V2ZW4gZGF5cywgaXQgY2FuIGJlIFBpY2tlZCBieSBhIFNjb3V0IGZvciBpbmNsdXNpb24gaW4gdGhlIEFwcHJvdmVkIEd1aWRlLiAKU29tZW9uZSB0YWxraW5nIGEgZGlhbGVjdCBvciBhIGxvY2FsIHZhcmlhbnQgb2YgYSBsYW5ndWFnZSBpcyBub3QgIndyb25nIiwganVzdCBiZWNhdXNlIHNvbWVvbmUgZGVjaWRlZCB0byBkZWNsYXJlIHNvbWUgb3RoZXIgZGlhbGVjdCB0byBiZSB0aGUgInN0YW5kYXJkIGZvcm0iIG9mIHRoYXQgbGFuZ3VhZ2UuIFlvdXIgYXZlcmFnZSBNaW5uZXNvdGFuIGZhcm1lciBtaWdodCBub3QgYmUgdGFsa2luZyBib29rIHBlcmZlY3QgRW5nbGlzaCBkYXkgdG8gZGF5IGFuZCB5b3VyIGF2ZXJhZ2UgU2NvdHRpc2ggYmxva2Ugd29uIGJlIHRhbGtpbmcgIkhlciBNYWplc3RpZXMgRW5nbGlzaCIgYW5kIHRoZSBzYW1lIGlzIHRydWUgZm9yIHByZXR0eSBtdWNoIGFsbCBsYW5ndWFnZXMsIGJ1dCB0aGF0IGRvZXNuIG1lYW4gdGhhdCB0aG9zZSBwZW9wbGUgImFyZSB3cm9uZyIgb3IgImRvbiBrbm93IGhvdyB0byB0YWxrIjogdGhleSBnZXQgYnkganVzdCBmaW5lIGFuZCBldmVyeW9uZSBhcm91bmQgdGhlbSB1bmRlcnN0YW5kcyB3aGF0IHRoZXkgYXJlIHNheWluZy4KTmV3IHRlYWNoZXJzIGFuZCBwc3ljaG9sb2dpc3RzIGFyZSBieSBkZWZpbml0aW9uIGluZXhwZXJpZW5jZWQuIAoiVGhleSBtYXkgbm90IGdldCB0aGUgbW9uZXkgaGVyZSwgYnV0IGRvd24gdGhlIGxpbmUsIHRoZXJlIGlzIG1vbmV5IGludm9sdmVkLCIgSGFzdGluZ3MgZXhwbGFpbmVkLgpPZiB0aGUgZ2FtZS4gCkkgc29ycnkuIEl0IHNvdW5kcyBvdmVyYmxvd24uIEl0IHNvdW5kcyBoeXBlcmJvbGljIGFuZCBwYXJ0aXNhbi4gQnV0IEkgcmVhbGx5IGJlbGlldmUgYWxsb3dpbmcgVHJ1bXAgdG8gd2luIGlzIGEgbW9yYWwgZmFpbGluZy4KSGF0ZW15am9iWiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpUaGUgbW9zdCBvYnZpb3VzIHN0cmlrZSBhZ2FpbnN0IHBvc3NpYmxlIHN1Y2Nlc3MgaXMgdGhhdCBpdCBoYXNuJ3QgbGFuZGVkIG9uIG9uZSBvZiB0aGUgZm91ciBtYWpvciBhZmZpbGlhdGVzLCBidXQgQXJrYW5zYXMgRGVtb2NyYXQgR2F6ZXR0ZSBzcG9ydHMgZWRpdG9yIFdhbGx5IEhhbGwgaGFzIG1hZGUgYSBzdWNjZXNzIG9mIGhpcyBjYWxsIGluIHNob3cgYnJvYWRjYXN0IG92ZXIgQ29tY2FzdCBjYWJsZS4uIAozOiBCZWlydXQgcmVzdGF1cmFudCBmb3IgTGViYW5lc2UgZmFyZSBhbmQsIGR1cmluZyB0aGUgZGlubmVyIHNlcnZpY2UsIHRyYWRpdGlvbmFsIGJlbGx5IGRhbmNpbmcgcGVyZm9ybWVkIGxpdmUgdGFibGUgdG8gdGFibGUsIHRoZSBkYW5jZXJzIGVudGljaW5nIHBhdHJvbnMgdG8gZ2V0IHVwIGFuZCBqb2luIHRoZW0gaW4gdGhlaXIgcmh5dGhtaWMgcm91dGluZXMuIFlvdSBjYW4gY2FwIG9mZiB5b3VyIGV2ZW5pbmcgYXQgQmVpcnV0IHdpdGggYSByZWxheGluZyBob29rYWggb24gdGhlIHBhdGlvLgpJdCBhIGJpdCBvZiBhIGxvbmcgc3RvcnksIGJ1dCB0aGUgdHJpcCB3YXMgYWxtb3N0IGluIGRvdWJ0IGJlY2F1c2Ugb3VyIEFpciBDb25kaXRpb25lciBicm9rZSBhbmQgd2UgbmVlZGVkIGEgbmV3IG9uZS4gClNpZGUgbm90ZTogQnV5IGZyb20gcmVwdXRhYmxlIGNvbXBhbmllcyEgSXQgZG9lc24ndCBwYXkgdG8gZmluZCB0aGUgY2hlYXBlc3QgZmlzaCBvaWwgcHJvZHVjdHMuIFlvdSB3b3VsZG4ndCBzaG9wIGZvciBjaGVhcGVzdCBoZWFydCBzdXJnZW9uIGZvciBhIGxvdmVkIG9uZSB3b3VsZCB5b3U/IFJlYWQgdGhpcyBsaW5rIG9uIGZpc2ggb2lsIGxhd3N1aXQgaW4gMjAxMC4KQnV0IG9mIGNvdXJzZSB0aGUgcHJpZGUgdGhhdCBpcyBpbiB5b3VyIGxpdHRsZSBicmFpbiB0ZWxscyB5b3UgaG93IGdvb2QgeW91IGFyZSBhdCBwb2tlIHdpbGwgbm90IGxldCB5b3UgcGxheSB0aGUgd2F5IEkganVzdCB0b2xkIHlvdSwgc28sIHlvdSBiZSBsb3NpbmcgYW5kIGtlZXAgbG9zaW5nIDEwMGJiIG9uIHRvcCBvZiBtb3JlIDEwMGJiIG92ZXIgYW5kIG92ZXIgYW5kIGNvbWUgaGVyZSBhbmQgYXNrIG1lIHdoYXQgd3Jvbmcgd2l0aCB5b3VyIHN0cmF0ZWd5LgpTb21lIG9mIHRoZSBwaWVjZXMgd2VyZSBmcmVzaCBhbmQgb3RoZXJzIFN0YWxlLiBUaGUgTmF0aXZlcyBkaWQgbm90IHNlZW0gdG8gbGlrZSB0aGF0IHdlIHNob3VsZCBnbyBuZWFyIHRoZSBib2R5LCBhbmQgc3Rvb2QgYXQgYSBsaXR0bGUgZGlzdGFuY2UgdGhlbXNlbHZlcyB3aGlsZSB3ZSBleGFtaW4nZCB0aGVzZSBtYXR0ZXJzLCBhbmQgYXBwZWFyZWQgdG8gYmUgcGxlYXNlZCB3aGVuIHdlIGNhbWUgYXdheS4gClRoZXkgYXJlIGFsbCB1bmRlciAkMTAwMC4gClRoZXJlZm9yZSwgc3RpY2sgdG8gdGhlIFBsYXl0ZWNoIGNhc2lub3Mgd2UgcmF0ZSBoaWdobHkgYW5kIGVuam95IHlvdXIgcHJvZml0YWJsZSBnYW1pbmcuLiAKSSBicm91Z2h0IHNvbWUgdG8gc2Nob29sIGp1c3QgdG8gc3RhY2sgYW5kIG5vbmUgb2YgbXkgdGVhY2hlcnMgc2FpZCBhbnl0aGluZy4gCkxhIHByc2VuY2UgZGUgbCdlc3ByaXQgZGUgRGlldSBkYW5zIGxlIG1vbmRlIGVzdCByZWNvbm51ZSBwYXIgY2VsdWkgb3UgY2VsbGUgcXVpIHZpdCBsYSBwcnNlbmNlIGRlIERpZXUgZW4gbHVpLCBlbiBlbGxlLiAKTmllbWFuZCB3ZWV0IGRhdCBoZXQgYmVyaGF1cHQgaWxsZWdhYWwgaXMuIApUaGUgc3RvcnkgdGhhdCBTb3V0aGVybiBEZW1vY3JhdHMgYmVjYW1lIFJlcHVibGljYW5zIHNvIGFzIHRvIGJlIGFibGUgdG8gY29udGludWUgdG8gYmUgcmFjaXN0IGlzIG9mIGNvdXJzZSBhIG15dGggYW5kIG1vZGVybiBEZW1vY3JhdHMgc3VyZSBkbyBsb3ZlIG15dGhzIGFuZCBjb25zcGlyYWN5IHRoZW9yaWVzLiAKQSBNZXNxdWl0ZSBzdG9yZSwgR3VucyBHdWl0YXJzLCBzYWlkIGl0IHNvbGQgYSBndW4gdG8gUGFkZG9jayBhbmQgdGhhdCAiaGUgbmV2ZXIgZ2F2ZSBhbnkgaW5kaWNhdGlvbiBvciByZWFzb24gdG8gYmVsaWV2ZSBoZSB3YXMgdW5zdGFibGUgb3IgdW5maXQgYXQgYW55IHRpbWUuIgpJbnNlc3Npb25hbCBBY2FkZW1pYyBFbmdsaXNoIFN1cHBvcnQgY291cnNlcyB0aGF0IGVuYWJsZSB5b3UgdG8gZGV2ZWxvcCB5b3VyIGxhbmd1YWdlIHNraWxscyBhbmQgYWNhZGVtaWMgdW5kZXJzdGFuZGluZyBhcyB5b3Ugc3R1ZHkgb24geW91ciBkZWdyZWUgcHJvZ3JhbW1lClF1ZWxxdWVzIG1vdHMgIHByb3BvcyBkZSB0cm9pcyBwcm9wcml0cyBhYm9yZGVzIGNpIGRlc3N1cyA6IGF2YW50IGRlIHByb2NkZXIgIHVuIGRyYWluYWdlIGhwYXRpcXVlIGF2ZWMgbCBkZSBwYW1wbGVtb3Vzc2UsIGlsIGZhdXQgc2F2b2lyIHNpIGxlIGZvaWUgZXN0IGVuZ29yZy4gUG91ciBjZWxhLCB1bmUgYW5hbHlzZSBzYW5ndWluZSBydmxlcmEgb3UgcGFzIGxhIHByc2VuY2UgZGUgY2hvbGVzdHJvbC4gRW4gdGVtcHMgbm9ybWFsLCBjZXR0ZSBzdWJzdGFuY2UgZXN0IHByc2VudGUgZGFucyBsIG1haXMgY2VydGFpbnMgZHJnbGVtZW50cyBwZXV2ZW50IGZhdm9yaXNlciBzYSBwcm9kdWN0aW9uLiBTaSBsZSBjaG9sZXN0cm9sIGF1Z21lbnRlLCBzdXJ0b3V0IGxlIExETCBkaXQgIG1hdXZhaXMgY2hvbGVzdHJvbCAsIGMgbGUgc2lnbmUgcXVlIGxlIGZvaWUgYSBiZXNvaW4gZCBkcmFpbiBldCBwdXJpZmkuCkl0IHByZXR0eSBjb21tb24gdGhhdCBwYXJhbWVkaWNzL0VNVHMgd2lsbCBhc2sgYWJvdXQgZHJ1ZyBvciBhbGNvaG9sIHVzYWdlIGJlY2F1c2UgdGhhdCB3b3VsZCBkZXRlcm1pbmUgaWYgdGhleSBjYW4gb3IgY2Fubm90IGdpdmUgeW91IHNvbWV0aGluZywgYmFzaWNhbGx5IGRldGVybWluaW5nIHdoYXQgdGhlaXIgY291cnNlIG9mIGFjdGlvbiB3b3VsZCBiZS4gSXQgbm90IG5vcm1hbCB0aGF0IHRoZXkgd291bGQgY29udGludW91c2x5IHByZXNzIHlvdSBhbmQgdHJlYXQgeW91IHBvb3JseSwgc28gaWYgeW91IG1ha2UgYSBjb21wbGFpbnQgaXQgbWF5IGJlIGJlc3QgdG8gZm9jdXMgb24gdGhhdCBhc3BlY3Qgb2YgdGhlIHNpdHVhdGlvbi5BbHNvIG5vdGV3b3J0aHksIGlmIHlvdSBmaW5kIHlvdXJzZWxmIGluIHRoYXQgc2l0dWF0aW9uIGFnYWluLCB5b3UgY2FuIHJlZnVzZSB0aGVpciBzZXJ2aWNlcy4gCkVUQTogU29tZXRpbWVzIGd1eXMgZG9uJ3QgZ2V0IHRoaXMsIHNvIHRlbGwgeW91ciBESCB0aGF0IGl0J3MgYmFzaWNhbGx5IGxpa2UgeW91ciBicm90aGVyIG9yIGRhZCBzYXlpbmcgInlvdSB3b24ndCB3YW50IHRvIGdvIHRvIHRoZSBneW0gd2l0aCBtZSBhbmQgbXkgZnJpZW5kcyBiZWNhdXNlIHlvdSBoYXZlIHN1Y2ggYSBzbWFsbCBkaWNrIGFuZCB3ZSBhbGwgaGF2ZSBhdCBsZWFzdCBkZWNlbnQgc2l6ZWQgZGlja3MuIFlvdSdkIGJlIGh1bWlsaWF0ZWQuIApNb3JwaDExMyB1Ckl0J3MgdG9vIG11Y2ggdG8gcHV0IGludG8gYSBSZWRkaXQgY29tbWVudCwgYnV0IGNvbnNpZGVyIHRoYXQgYXMgc3RhY2sgc2l6ZXMgZ2V0IGRlZXBlciBpbiBhIGNhc2ggZ2FtZSwgaGFuZCB2YWx1ZXMgY2hhbmdlIGRyYW1hdGljYWxseS4gQXNrIHlvdXJzZWxmIGhvdyB5b3VyIHN0YWNrIGdvdCBkb3duIHRvIDUzIGluIHRoZSBmaXJzdCBwbGFjZSwgZm9yIGV4YW1wbGUuIApTY29yY2hmcm9zdCAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnbwpUaGUgcGxhbm5pbmcgd2lsbCBuZWFybHkga2lsbCB5b3UgeW91ciBmaXJzdCB5ZWFyLCBidXQgb25jZSB5b3UgaGF2ZSBhIHNvbGlkIHdvcmtpbmcgYmFuayBvZiBsZXNzb25zIGFuZCBzb21lIGV4cGVyaWVuY2Ugd2luZ2luZyBpdCwgaXQgYmVjb21lcyBtdWNoIG1vcmUgdG9sZXJhYmxlLiAKQW5kIHlldCwgdGhlcmUgYXJlIHBpcGUgYm9tYnMgYmVpbmcgc2VudCB0byBwb2xpdGljYWwgZmlndXJlcy4gVGhlcmUgYXJlIGh1cnRpbmcgcGVvcGxlIG9uIG91ciBzb3V0aGVybiBib3JkZXJzIHRyeWluZyB0byBlbnRlciBvdXIgbmF0aW9uIGlsbGVnYWxseS4gCldoaWxlIHRoZSBVbml2ZXJzaXR5IHdhcyBhIDEgdGltZSBwYXltZW50IGNvdXJzZSwgSk5hbmRleiB3YXMgdmVyeSBhY3RpdmUgaW4gdGhlIEZCIGdyb3VwIGFuZCBzdGFydGVkIHVwZGF0aW5nIGxlc3NvbnMgYW5kIGNoYXJ0cyBiYXNlZCBvbiBoaXMgc29sdmVyIHdvcmsgYmVjYXVzZSBoZSBkaWRuIHdhbnQgdG8gbGVhdmUgdGhlIG1lbWJlcnMgYmVoaW5kLiBJdCBiZWNhbWUgYXBwYXJlbnQgdGhlIHdob2xlIGNvdXJzZSBjb3VsZCBiZSB1cGdyYWRlZCwgYW5kIHNpbmNlIEpOYW5kZXogZGlkIG5vdCB3YW50IHRvIGNyZWF0ZSBhbm90aGVyIHByb2R1Y3QgdGhhdCB3b3VsZCBzdWZmZXIgdGhpcyBmYXRlLCBoZSBhcHByb2FjaGVkIHlvdSBndXlzIHRvIGNyZWF0ZSBhIG1lbWJlcnNoaXAuLiAKVGhlIGRldmVsb3BlcnMgY3VycmVudGx5IGhhdmUgYWJvdXQgZml2ZSBsZXR0ZXJzIG9mIGludGVudCBmcm9tIGxhcmdlIHBvdGVudGlhbCB0ZW5hbnRzLCBzYWlkIENoYXJsZXMgV3VydHpidXJnZXIsIHdobyBmb3IgNDAgeWVhcnMgaGFzIG93bmVkIHRoZSBsYW5kIHdoZXJlIEZvcmVzdCBIaWxsIFBsYXphIHdpbGwgYmUgYnVpbHQuCkxpa2Ugd2hlbiB5b3VyIGJvc3MgaXMgdGhlcmUgdGhlIG9uZSB0aW1lIGFuZCBoZSdzIGp1c3Qgc3RhcmluZyBhdCB5b3Ugd2FpdGluZyBvbiB5b3UgdG8gZnVjayB1cCBzbyBoZSBjYW4gY29ycmVjdCB5b3UuLiAKSWYgd2UgZ28gdG8gTWlyYXZhbCwgaXMgaXQgZGlmZmljdWx0IHRvIGdldCBpbnRvIGNsYXNzZXMgb24gc3VjaCBzaG9ydCBub3RpY2U/QW5zd2VyIGZyb20gQ2xlYTE3QXVnIDIwMTggSSB0aGluayB5b3UncmUgZ29pbmcgYXQgdGhlIHdyb25nIHNlYXNvbiB0byBoaWtlLiBJIGhhdmUgZG9uZSBhIGdvb2QgYW1vdW50IG9mIGJvdGggb24gYW5kIG9mZiBwcm9wZXJ0eSBoaWtpbmcgYXQgTWlyYXZhbCBpbiBEZWNlbWJlciBhbmQgb24gdGhlIG9mZiBwcm9wZXJ0eSBoaWtlcyB0aGUgZXhlcnRpb24gaW4gdGhhdCBoZWF0IGNhbiBiZSBjaGFsbGVuZ2luZyBldmVuIGluIHdpbnRlci4gCkVSIGluIHRoZSBjb3VudHkgd2lsbCBnZXQgYSBmZXcuIFNvbWUgd2lsbCBiZSB0cmFuc2ZlcnJlZCBpbnRvIHRoZSBidXJuIGNlbnRlciBhdCBKYWNrc29uLCBoZSBzYWlkLCBhZGRpbmcgdGhhdCBtb3N0IGZpcmV3b3JrcyBpbmp1cmllcyBhcmVuIHNlcmlvdXMsIGJ1dCBzb21lIHdpbGwgYmUgcGVybWFuZW50bHkgZGViaWxpdGF0aW5nLiBsaXRlcmFsbHkgd2lsbCBibG93IG9mZiBmaW5nZXJzLCBvciB5b3Ugd2lsbCBmcmFjdHVyZSBoYW5kcywgb3IgeW91IHdpbGwgYnVybiBoYW5kcyB0byB0aGUgcG9pbnQgeW91IHdpbGwgZ2V0IHNjYXJzIGFuZCB0aGUgbG9zcyBvZiB1c2Ugb2YgeW91ciBmaW5nZXJzLCBoZSBzYWlkLgpJZiB5b3UgaGF2ZSBldmVyIHBsYXllZCB3aXRoIGEgc2ltcGxlIHBsYXN0aWMgc2V0LCB5b3UgaGF2ZSBwcm9iYWJseSBmb3VuZCB0aGF0IGl0IGlzIG5vdCBlYXN5IHRvIGtlZXAgdGhlIGNoaXBzIGluIGdyZWF0IHNoYXBlIG92ZXIgYW4gZXh0ZW5kZWQgYW1vdW50IG9mIHRpbWUuIApIZSBidWlsdCBhIGxpZmUgYXJvdW5kIGJlaW5nIGEgYm91bnR5IGh1bnRlciBhbmQgdXNlZCBoaXMgaGF0ZSBvZiBKZWRpIGFzIHRoZSBmdWVsIGZvciB0aGUgZmlyZSBpbiBoaXMgc291bC4gCkJyaW5nIHlvdXIgb3duIHBpY25pYywgc3VwcGVyIGFuZCBkcmlua3MgYW5kIGVuam95IGxvY2FsIGJhbmQgTW91bnRhaW4gRnVuayBhbmQgYSBsaWdodCBzaG93LiBFbnRyeSBpcyBieSBwdXJwbGUgbm90ZSBvciBnb2xkIGNvaW4gZG9uYXRpb24uLiAKVGhlIGFzIHByb3AgYW5kIHJvdXRlIG1hc2tpbmcgYXJlIGNvbXBsZXRlbHkgb3B0aW9uYWwuIFlvdSBjb3VsZCBqdXN0IHVzZSBocmVmIGFuZCBzZWFyY2ggcGFyYW1ldGVycy4gSHJlZiBuZWVkcyB0byBiZSB1bm1hc2tlZCB0byBtYWtlIGl0IGVhc3kgZm9yIE5leHQgdG8gZGV0ZXJtaW5lIHdoaWNoIHBhZ2UgaXMgYmVpbmcgbGlua2VkIHRvLiAKRXZlcnkgbWFqb3IgdGVjaCBmaXJtIGhhcyBjb21wZXRpdG9ycyBhbGwgb3ZlciB0aGUgcGxhY2UuIEZhY2Vib29rIGNvbXBldGVzIHdpdGggU25hcGNoYXQsIFR3aXR0ZXIsIExpbmtlZEluLCBUaWtUb2ssIFZpbmUsIFJlZGRpdC4gQW1hem9uIGRvZXNuIGV2ZW4gaGF2ZSBhcyBiaWcgb2YgYSBzaGFyZSBvZiB0aGUgcmV0YWlsIG1hcmtldCBhcyBXYWxtYXJ0LCBhbmQgZXZlbiBpdCBzdXBwb3NlZGx5IG1vc3QgIm1vbm9wb2xpc3RpYyBwcm9kdWN0IiAgIEFtYXpvbiBXZWIgU2VydmljZXMgICBoYXMgTWljcm9zb2Z0IEF6dXJlIGFzIGEgbWFqb3IgY29tcGV0aXRvciBhbmQgY29tcGV0aXRpb24gZnJvbSBvdGhlciBtYWpvciBjb21wYW5pZXMgbGlrZSBHb29nbGUgcmFwaWRseSBlbmNyb2FjaGluZyBvbiBpdHMgbWFya2V0IHNoYXJlLiAKQXMgd2UgbWVudGlvbmVkLCB3aGVuIGVjb25vbWljIHByb3NwZWN0cyBsb29rIGdvb2QsIGZld2VyIGludmVzdG9ycyB3YW50IHRvIGJ1cnkgdGhlaXIgbW9uZXkgaW4gYSByZWxhdGl2ZWx5IGxvdyB5aWVsZCwgbG9uZyB0ZXJtIGJvbmQuIApCdXQgaXQgd2FzIGp1c3QgYSBob21lbGVzcyBndXkgc2hpdHRpbmcgaW4gYSBib3guIFRvIGJlIHN1cmUgSSBhc2tlZCBoaW0gaWYgaGUgd2FzIHRoZSBzb24gb2YgR29kIGJ1dCBoZSBkaWRuIHNwZWFrIEVuZ2xpc2guIApUaGUgT0VDRCByZXBvcnQgd2FzIHByZXBhcmVkIGJlZm9yZSBDaGluYSBhbm5vdW5jZWQgaXRzIG5ldyBncm93dGggdGFyZ2V0IHJhbmdlIG9mIDYgcGVyIGNlbnQgdG8gNi41IHBlciBjZW50LiAKVGhlIG9uZSBJIGN1cnJlbnRseSBhdHRlbmQgaXMgdmVyeSAiYWQgaG9jIiAgIHRoZXkgbWVldCBpbiBhIFN0YXJidWNrcyBhbmQgdGhlcmUgbm8gb3JnYW5pemVkIHN0cnVjdHVyZS4gClRoZWF0cmljYWwgbGlnaHRpbmcgYW5kIHNsaWdodGx5IGNvb2xlciB0ZW1wZXJhdHVyZXMgaW5zaWRlIGFsd2F5cyBhZGQgYSB3aG9sZSBuZXcgZGltZW5zaW9uIHRvIHRoaXMgZ2FyZGVuIGV4cGVyaWVuY2UuUHVuY2hpbmcgdXAgdGhlIGNvbG91ciBhbmQgcHVtcGluZyBvdXQgdGhlIHBlcmZ1bWUsIDMwLDAwMCBidWxicywgcGVyZW5uaWFscywgdHJlZXMgYW5kIHNocnVicyBoYXZlIGFsbCBiZWVuIGZvcmNlZCBpbnRvIGxlYWYgYW5kIGJsb29tLiBDb250YWluZXJzIG9mIGFsbCBzaXplcywgZmlsbGVkIHRvIHRoZSBicmltIHdpdGggaGlnaGx5IGNyZWF0aXZlIGNvbWJpbmF0aW9ucyBvZiBiZWF1dGlmdWwgZmxvd2VycyBhbmQgcmljaCBmb2xpYWdlLCB3aWxsIGFsc28gYmUgY29udHJpYnV0aW5nIHRvIHRoZSBtYWdpYy5Td2Vuc29uIGV4cGxhaW5lZCB0aGF0IHRoZSBzaG93IGhhcyBiZWVuIHNjaGVkdWxlZCBhIGxpdHRsZSBsYXRlciB0aGlzIHllYXIgdG8gYWxsb3cgbW9yZSB0aW1lIGZvciB0aGUgZ2FyZGVuIGNyZWF0b3JzIHRvIGJyaW5nIGEgZ3JlYXRlciBudW1iZXIgb2YgcGxhbnRzIGFuZCBidWxicyBpbnRvIGJsb29tLlJlbGF0ZWRSZWFkIG1vcmUgYWJvdXQgZ2FyZGVuaW5nRXZlcnl0aGluZyB5b3UgbmVlZCB0byBrbm93IGFib3V0IHNwcmluZyBnYXJkZW5pbmdDb250YWluZXIgV2FycyB3YXMgYSBiaWcgaGl0IGxhc3QgeWVhciwgYW5kIHRoaXMgZnJpZW5kbHksIGZhc3QgcGFjZWQgYW5kIGVudGVydGFpbmluZyBmbG9yYWwgZGVzaWduIGNvbXBldGl0aW9uIGlzIHJldHVybmluZy4gClBlciBlc2VndWlyZSBpbCBtYXNzYWdnaW8gcHJvc3RhdGljbzogcHJpbWEgZGVsbCdpbml6aW8gZGVsIHByb2Nlc3NvLCBzaSByYWNjb21hbmRhIGRpIHB1bGlyc2kgbWV0aWNvbG9zYW1lbnRlIGUgcXVpbmRpIGV2YWN1YXJlIGUgdXJpbmFyZSAgbmVjZXNzYXJpbywgcXVlc3RvICBpbXBvcnRhbnRlIHBhcmNoIHNpYSBpbCBwaSByaWxhc3NhdG8gcG9zc2liaWxlIFNpIHB1IHVzYXJlIHVuIGRpdG8gYWNjdXJhdGFtZW50ZSBwcm90ZXR0byBkYSB1biBndWFudG8gZGkgbGF0dGljZSBtb25vdXNvLCBvcHB1cmUgcGljY29saSBnaW9jYXR0b2xpIHNlc3N1YWxpLiBTaSBhdnZpYSBpbCBwcm9jZXNzbyBkaSBtdW5naXR1cmE6IG1hc3NhZ2dpYXJlIGxhIHByb3N0YXRhIGRhcHByaW1hIGRvbGNlbWVudGUgZSBwb2kgcGFzc2FyZSBwaSBzb2xpZGEgZSBwaSB2ZWxvY2Ugc3VsIHJpdG1vIGNoZSBmYSBwZXIgdm9pLiAKVGhpcyB0cmVhdG1lbnQgd2lsbCBnZXQgcmlkIG9mIHVud2FudGVkIHRveGlucyBhbmQgaGVscCByZXN0b3JlIHRoZSBza2luIHNvIHRoYXQgaXQgbG9va3MgYW5kIGZlZWxzIGJldHRlciB0aGFuIGV2ZXIuIEhlcmUgYXJlIHRoZSBzdGVwcyB5b3Ugd2lsbCBuZWVkIHRvIGZvbGxvdyBpbiBvcmRlciB0byBwcm9wZXJseSBhcHBseSBhIHBhcmFmZmluIGZhY2lhbC4uIApUaGUgc3RhdGUgaGFzIHN1c3BlbmRlZCBjaGFyaXRpZXMgZnJvbSBjb25kdWN0aW5nIGdhbWVzIGF0IDE0IHZlbnVlcywgYW5kIHNldmVyYWwgb3RoZXJzIGNsb3NlZCBvbiB0aGVpciBvd24gYWNjb3JkLi4gCkhlIG1vdmVkIHRvIFBha2lzdGFuIGluIDE5NzAgZnJvbSBhIHRvd24gaW4gVVAgbmFtZWQgR3VsYW90aGkuIApUaGV5IGFza2VkIGlmIGhlIGhhZCBhbnkgcHJvaGliaXRlZCBkcnVncyBoZSB3YW50ZWQgdG8gZGVjbGFyZSBhbmQgaGUgdG9sZCBwb2xpY2UgaGUgaGFkIHNvbWUgY2FubmFiaXMgaW4gaGlzIGJlZHJvb20uIFBvbGljZSB3ZW50IHRvIHRoZSByb29tIGFuZCBmb3VuZCBhIGJsYWNrIGJhZyB3aXRoIHR3byBwbGFzdGljIHJlc2VhbGFibGUgYmFncyBpbnNpZGUgYSBjaGVzdCBvZiBkcmF3ZXJzLgpJIGRvbiBrbm93IGFib3V0IEJ1cm1hIG9yIENhbWJvZGlhLCBidXQgZ2l2ZW4gdGhlaXIgcG92ZXJ0eSBhbmQgcmVjZW50IGhpc3RvcnksIEkgd291bGRuIGV4cGVjdCBtdWNoLi4gCkluIGFkZGl0aW9uIHRvIHRoYXQsIHdvcmsgb24geW91ciB0cmlwb2QgICB3aGVyZSB5b3VyIGhlZWwsIHlvdXIgcGlua3kgdG9lL2tudWNrbGUsIGFuZCB5b3VyIGJpZyB0b2Uva251Y2tsZSBhcmUgUFJFU1NFRCBpbnRvIHRoZSBncm91bmQgYW5kIHlvdXIgZm9vdCBpcyBlbmdhZ2VkIGFuZCBjcmVhdGVzIGEgc3Ryb25nIHN0YWJsZSB0cmlwb2QgZm9yIHRoZSByZXN0IG9mIHlvdXIgYm9keSB0byByZXN0IG9uLiAKVGhlcmUgYXJlIHRvdGFsbHkgdW5yZWxhdGVkIHRoaW5ncyB0aGF0IHN0YXJ0IGJyZWFraW5nIGRvd24gYXMgeW91IGdldCBzaWNrZXIsIGFzIHlvdXIgaW1tdW5lIHN5c3RlbSBkaWVzIGJlZm9yZSB5b3UgZG8uIFlvdSdyZSBib2R5IGlzIGxlZnQgdW5wcm90ZWN0ZWQgZnJvbSBldmVyeXRoaW5nLiAKSXQgd291bGQgaGF2ZSBiZWVuIGluY3JlZGlibGUsIiBzYWlkIEZyYXNlci4uIApIZSBkb2Vzbid0ICJzaXQiIGFuZCAiZG8iIGhlIFJVTlMgYW5kIERFU1RST1lTLiAKVGhlIHRvbWF0b2VzIGNhbiB0aGVuIGJlIGNob3BwZWQgYW5kIHVzZWQgaW4gc2F1Y2VzIGFuZCBvdGhlciBjb29rZWQgZGlzaGVzLCB0aGUgcGVhY2hlcyBpbiBiYWtlZCBnb29kcyBhbmQgc21vb3RoaWVzLiAKWW91ciBwcmllc3QgbWlnaHQgd2FudCB0byBoYXZlIGEgd29yZCB3aXRoIHlvdXIgbWFtYS4gUGVvcGxlIHdpbGwgdGFsayBhYm91dCBpdC4gWW91IHdpbGwgbmV2ZXIgYmUgYWJsZSB0byBtYXJyeSBpbiB0aGUgY2h1cmNoIG9yIHJlY2VpdmUgdGhlIGNvbW11bmlvbiBhbnltb3JlLiAKQ2hvc2VuIGNhcmVlciBpbiBhbiBhbHRlcm5hdGUgcmVhbGl0eTpIb21lIGJ1aWxkZXIgb3IgcmVtb2RlbGVyLgpCbHVmZmluZyBpcyBvbmUgb2YgdGhlIGtleSBzdHJhdGVnaWVzIG9mIHdpbm5pbmcgd2hlbiB5b3UgcGxheSBwb2tlci4gSXQgaXMgdXN1YWxseSB1c2VkIGJ5IHBsYXllcnMgdG8gdGhyb3cgb2ZmIHRoZWlyIG9wcG9uZW50cyBpbnRvIHRoaW5raW5nIHRoYXQgdGhleSBhcmUgaG9sZGluZyB0aGUgYmVzdCBoYW5kLiAKU3VtbWVycyBub3Qgb25seSBzcGVudCB0aGUgMTk5MHMgZGVyZWd1bGF0aW5nIHRoZSBiYW5rcyBzbyB3ZSBjb3VsZCBnZXQgaW50byB0aGlzIGNyaXNpcyBpbiB0aGUgZmlyc3QgcGxhY2UsIGhlIGFsc28gaGVscGVkIGNyZWF0ZSB0aGUgbWVjaGFuaXNtcyB0aGF0IHdvdWxkIGNpcmN1bXZlbnQgaW50ZXJuYXRpb25hbCByZWd1bGF0aW9uIG9mIGJhbmtzLiAKSG93ZXZlciwgdGhlcmUgaXMgbm8gc2lnbiB0aGlzIGlzIGJvb3N0aW5nIHRoZSBvdmVyYWxsIGVjb25vbXksIGFzIGJvdGggdG90YWwgZW1wbG95bWVudCBhbmQgYnVzaW5lc3MgaW52ZXN0bWVudCBoYXZlIHN0YWxsZWQuIEFwcGFyZW50bHksIHRoZXJlIGlzIHNvbWV0aGluZyBtb3JlIHRvIGVjb25vbWljIGdyb3d0aCB0aGFuIGp1c3QgcmV2dmluZyB1cCBmYWN0b3J5IG91dHB1dC4gCkkgcHJlZ25hbnQgd2l0aCAyIHJpZ2h0IG5vdyBzbyBJIGd1ZXNzaW5nIHRoZSBuZXdib3JuIHBoYXNlIHdpbGwgbWVzcyB3aXRoIHRoaXMgYSBsaXR0bGUsIGJ1dCBvbmNlIHNoZSBvbiBhIG1vcmUgcmVndWxhciBzY2hlZHVsZSB3ZSBtYWludGFpbiB0aGUgd2Vla2VuZCBzbGVlcCBpbiBkYXlzIGZvciBlYWNoIG9mIHVzLi4gCkVlcnN0IGRvb3IgZWVuIGdyb290IGJvczsgaGllciB2aWVsIG9ucyBvcCBob2UgdmVlbCBSdXNzZW4gZ2V3b29uIG9wIGRlIHBlY2hzdHJvb2sgcGFya2VyZW4gbGFuZ3MgZGUgYXV0b3N0cmFkZS9leHByZXN3ZWcsIG9tIHRlIGhhbmRlbGVuLCBvZiBvb2sgZGlrd2lqbHMgb20gZnJ1aXQgdGUga29wZW4uIFZlZWwga3JhYW1wamVzIG9uZGVyd2VnLCBtZWVzdGFsIGluIGRlIGxhYWRiYWsgdmFuIGVlbiB2cmFjaHR3YWdlbnRqZS4gRW4gaGVlbCB3YXQgb3VkZSB2cmFjaHR3YWdlbnMgb3AgZGUgYmFhbi4gClRoYXQgY2hpbGRyZW4gb2Ygc2FtZSBzZXggcGFydG5lcnMgbmVlZCBhdCBsZWFzdCBvbmUgcm9sZSBtb2RlbCBvciBjYXJlIHRha2VyIGluIHRoZWlyIGxpZmUgdGhhdCBpcyB0aGUgb3Bwb3NpdGUgc2V4IG9mIHRoZWlyIHBhcmVudHMgc28gdGhhdCB0aGV5IGNhbiBncm93IHVwIGJhbGFuY2VkIGFuZCBoYXZlIGJvdGggZ2VuZGVycyB0byBsZWFybiBmcm9tLiBCYXNpY2FsbHkgc2F5aW5nIHR3byBkYWRzIGNhbid0IHRlYWNoIG9yIHVuZGVyc3RhbmQgdGhlaXIgZGF1Z2h0ZXIgYWJvdXQgZ29pbmcgdGhyb3VnaCBwdWJlcnR5LCBkb2luZyBoYWlyL21ha2V1cCwgb3IgdGFsa2luZyB0byBib3lzLiAKU28sIHdoYXQgaXMgdGhlIHNlY3JldCB0aGF0IG1ha2VzIHNsb3QgbWFjaGluZXMgZmFyIGFuZCBhd2F5IHRoZSBtb3N0IHBvcHVsYXIgdHlwZSBvZiBnYW1lIGF0IHRoZSBjYXNpbm8/IFRoZSBxdWVzdGlvbiBtYXkgYmUgc2ltcGxlLCBidXQgdGhlIGFuc3dlciBoYXMgbW9yZSB0aGFuIG9uZSBsYXllci4gSGVyZSB3ZSBhcmUgdG8gdW5wYWNrIHRoZSBteXN0ZXJ5IG9mIHRoZSBlbmR1cmluZyBhcHBlYWwgb2YgdGhpcyBjbGFzc2ljIGNhc2lubyBnYW1lLgpMb29rIGF0IHRoZSBsaWVzIGFuZCBjb3ZlciB1cHMgd2UgYWxsIGtlZXAgZGVueWluZyBpcyBoYXBwZW5pbmcgdGhpcyBlbGVjdGlvbiB5ZWFyLiAKVGhlIHNob3cgYWxzbyBkb2VzIGEgd29uZGVyZnVsIGpvYiBvZiBzaG93aW5nIGhvdyBxdWlja2x5IHlvdSBjYW4gZmFsbCBiYWNrIGludG8gb2xkIHBhdHRlcm5zIG5vIG1hdHRlciBob3cgZmFyIHlvdSBjb21lLiBUaGUgc2Vjb25kIHlvdSBnZXQgYmFjayB0byB0aGUgcGxhY2Ugb3IgcGVvcGxlIHdobyBhYnVzZWQgeW91LCB5b3UgbWlnaHQgYXMgd2VsbCBiZSB0aGUgc2FtZSBwZXJzb24geW91IHdlcmUgdGhlbiwgbm8gbWF0dGVyIGhvdyBtdWNoIG9sZGVyIG9yIHN0cm9uZ2VyIG9yIHdpc2VyIHlvdSBhcmUgbm93LiBJdCBhIHZlcnkgcGVjdWxpYXIgZmVlbGluZyBhbmQgZXhwZXJpZW5jZSwgYW5kIEkgY2FuIGV2ZW4gcHV0IGludG8gd29yZHMgZXhhY3RseSBob3cgdGhlIHNob3cgaXMgY2FwdHVyaW5nIHRoYXQsIGJ1dCBpdCBpcy4gRXhjZWxsZW50LCBleGNlbGxlbnQgd29yayBvbiBhbGwgZnJvbnRzIGJ1dCBlc3BlY2lhbGx5IGJ5IEFteSBBZGFtcy4KTE9jIFBFUiBDT1BZIEJFQVVUSUZVTCBCQVJBTk9GIElTTEFORCBURVJSSVRPUlkgRlJJREFZLCBGRUJSVUFSWSA3LCAxOTQxIFN0b3JtIEhpdHMgU2l0a2EgT24gTW9uZGF5IFR1ZXNkYXkgaGF0IGl0IGV2aWRlbnRseSB3YXMgY2F1c2VkIGJ5IGhlIHdhcm0gd2luZHMgdGhhd2luZyB0aGUgc25vdyBuIHRoZSBoaWxscy4gClRoZSBOYXppcyBoYWQgdGhpcyBpZGVhIG9mICJyYWNlIiB3aGVyZSB0aGV5IHdhbnRlZCBwZW9wbGUgdG8gaGF2ZSBhcyBtYW55IGNoaWxkcmVuIGFzIHBvc3NpYmxlICh5ZXQgb25seSB0aGUgInJpZ2h0IiBraW5kIG9mIHBlb3BsZSBpbiB0aGVpciBleWVzKS4gVGhpcyB3YXMgYmVjYXVzZSB0aGV5IHRob3VnaHQgdGhleSB3ZXJlIHRoZSBzdXBlcmlvciByYWNlIGFuZCBiZWNhdXNlIHRoZXkgd2FudGVkIGFzIG1hbnkgc29sZGllcnMgYXMgcG9zc2libGUuIFRoZSBOYXppcyBwcm9tb3RlZCBudWRpdHkgYW5kICJmcmVlIiBzZXh1YWxpdHksIHRoZXJlIHdlcmUgYSBsb3Qgb2YgcHJvcGFnYW5kYSBtb3ZpZXMgYWJvdXQgdGhpcyB3aGljaCB3ZXJlIGxpa2Ugc29mdCBwb3JuLiAKVGhpcyB1bmlxdWUgc3BhIG5vdCBvbmx5IG9mZmVycyB0aGUgc3RhbmRhcmQgd2F5cyB0byBzcG9pbCB5b3Vyc2VsZiwgc3VjaCBhcyBmYWNpYWxzIGFuZCBtYXNzYWdlLCBidXQgaXQgYWxzbyBpbmNvcnBvcmF0ZXMgYW5jaWVudCBBeXVydmVkaWMgdHJlYXRtZW50cyBhbmQgYWN1cHVuY3R1cmUuIApXaHkgYW0gSSBzbyBiYWQgYXQgb25saW5lIHBva2VyCkVuIGluZGVyZGFhZCwgYWxzIGVyIGJpaiBad29sbGUgaWV0cyBmb3V0IGdhYXQgKG9mIGVyZ2VucyB0dXNzZW4gTFdEIGVuIFp3b2xsZSBlZW4gYnJ1Z2dldGplIG1hbGZ1bmN0aW9uZWQpIGJlbiBqZSBoZWxlbWFhbCBkZSBzamFhay4gTmllbWFuZCB2YW4gbWlqbiBsZWVmdGlqZCBrYW4gaW5taWRkZWxzIGZhdHNvZW5saWprIG1lZXIgZWVuIGh1aXMga29wZW4gaW4gQW1zdGVyZGFtLiBJZW1hbmQgaW4gbWlqbiBvbWdldmluZyBoZWVmdCBsYWF0c3RlIG1lZXIgZGFuIDMuNWUgdG9uIG5lZXJnZWxlZ2Qgdm9vciBlZW4gZ2V6aW5zYXBwYXJ0ZW1lbnQgbWV0IHR1aW4uCiJXZSB3YW50ZWQgdG8gZG8gc29tZSBjbGV2ZXIgbWFya2V0aW5nIHRoYXQgaXMgdGFsa2VkIGFib3V0LCByYXRoZXIgdGhhbiBtYWtlIGEgYmlnIG5vaXNlIGFib3V0IHRoZSBsYXVuY2gsIiBCaGFuZGFyeSBzdGF0ZXMuIEEgc2ltaWxhciBhY3Rpdml0eSB3aWxsIGJlIGltcGxlbWVudGVkIGluIHRoZSBtZXRybyB0cmFpbnMgb2YgRGVsaGkuClN1bmRheSBCbG9vZHkgU3VuZGF5IGZpZ2h0IGhhcyBmaW5hbGx5IGFycml2ZWQKUHJldmlvdXMgc3R1ZGllcyBzdWdnZXN0IHRoYXQgZXhlcmNpc2VzIChjdXJsIHVwcywgZG91YmxlIGxlZyBsb3dlcmluZywgcHVzaCB1cHMpIHBlcmZvcm1lZCBvbiBhIFN3aXNzIGJhbGwgaW5jcmVhc2UgdGhlIGNvcmUgbXVzY3VsYXIgYWN0aXZpdHkgbW9yZSB0aGFuIHdoZW4gcGVyZm9ybWVkIG9uIGEgc3RhYmxlIHN1cmZhY2UuCklmIHlvdXIgZGVmZW5zZSBpcyBiYXNlZCBhcm91bmQgbm90IGJlaW5nIGFzIGJhZCBhcyB0aGUgd29yc3QgZnVja2VycyB3aG8gZXZlciBoZWxkIHBvd2VyIGluIEV1cm9wZSB0aGVuIEkgc3VnZ2VzdCBkcm9wcGluZyB0aGUgc3ViamVjdC4gCk9yIGlmIHlvdSBoYXZlIDdLIGluIGZyb250IG9mIHlvdSBidXQgeW91IGFyZSBzdGlsbCBzdHVjayAySyBvdmVyIHRoZSBleHRlbmRlZCBzZXNzaW9uIHRoYXQgd2lsbCBsZWFkIHRvIGEgd2F5IGRpZmZlcmVudCBtaW5kc2V0IHRoYW4gYmVpbmcgZmluYWxseSB1bnN0dWNrLiBPciBwZW9wbGUgbGlrZSBzcGVjaWZpYyBudW1iZXJzIGFuZCB3YW50IHRvIGtlZXAgc3RhY2tzIG92ZXIgMTBLIGV0YyB3aGljaCBtYXR0ZXJzIGluIG1pbmRzZXQgdG9vLiAKV2lqIHZvbmRlbiBvb2sgaGllciBlZW4gZ2VvY2FjaGUgZW4gZ2Vub3RlbiB2YW4gZWVuIG1vb2kgdWl0emljaHQgdmFuYWYgaGV0IGhvZ2VyIGdlbGVnZW4gcHVudC4gCkJldHdlZW4gdGhlIG90aGVyIGNoYWlucyBwbHVzIENvc3RjbyBhbmQgdGhlIGxvY2FsIGZhcm0gYW5kIG1lYXQgbWFya2V0cyB0aGVyZSByZWFsbHkgaXMgbm8gcmVhc29uIHRvIGV2ZXIgZ28gdGhlcmUgKHVubGVzcyB5b3UgaGF0ZSBzYXZpbmcgbW9uZXkpLi4gCkl0IGhlbHBlZCBtZSBzdXJ2aXZlIHRoZSBtZWFuaW5nbGVzcyBwbGF0aXR1ZGVzIGFuZCB1bmRlcnN0YW5kIGhvdyBJIHRydWx5IHdhcyBub3QgYWxvbmUgZXZlbiBpZiBpdCBmZWx0IGxpa2UgaXQuLiAKSG93IGRvIHlvdSBnZXQgYSBmcmVlIGxhcHRvcCBubyBzY2FtP25pZiB5b3UgYW5zd2VyIHRoZWlyIHN1cnZleSwgeW91IHdpbGwgYmUgYXNrZWQgZm9yIHBlcnNvbmFsIGluZm9ybWF0aW9uIHRoYXQgc2hvdWxkIE5FVkVSIGJlIGdpdmVuIG91dCB0byBhbiB1bmtub3duIHBhcnR5LCBpbmZvcm1hdGlvbiBzdWNoIGFzIHNvY2lhbCBzZWN1cml0eSBudW1iZXJzLiAKVGhlIGRlIEJsYXNpbyBhZG1pbmlzdHJhdGlvbiBpcyBsaWtlIHRocm93aW5nIGRhcnRzIGF0IGEgd2FsbCBjb3ZlcmVkIHdpdGggcGFydHkgYmFsbG9vbnM6IEp1c3QgYWJvdXQgZXZlcnkgdG9zcywgc29tZXRoaW5nJ3MgZ29pbmcgdG8gcG9wLiAKTGFub2xpbiBvZmZlcnMgYSB2YXJpZXR5IG9mIHVzZXMgYXMgd2VsbC4gSXQgY291bGQgYmUgdXNlZCBmcm9tIHVzaW5nIGl0IGFzIGEgc2ltcGxlIG1vaXN0dXJpemVyIHRvIHVzaW5nIGl0IGFzIGEgcmF3IG1hdGVyaWFsIHRvIG1ha2Ugdml0YW1pbnMuIApNYXkgaGlzIHNvdWwsIGFuZCB0aGUgc291bHMgb2YgYWxsIHRoZSBmYWl0aGZ1bCBkZXBhcnRlZCwgdGhyb3VnaCB0aGUgbWVyY3kgb2YgR29kLCByZXN0IGluIHBlYWNlLiAKSSBuZXZlciBiZWVuIHRoZSBzdHJvbmdlc3QsIG5laXRoZXIgdGhlIHdlYWtlc3QuIEJ1dCBJIHN1cnZpdmVkLiBMb25nZXIgdGhhbiBhbnlvbmUsIGh1bnRlciBub3IgcHJleS4gTm93IHRoZXkgY293ZXIgdG9nZXRoZXIuIEVuZW1pZXMgdW5pdGVkIGFzIG9uZS4gUHJleS4KR3dhaWhpciB3YXMgb25seSBhdCBJc2VuZ2FyZCBmb2xsb3dpbmcgdGhhdCByZXF1ZXN0LCBhbmQgR2FuZGFsZiB3YXMgbHVja2lseSBiZWluZyBpbXByaXNvbmVkIG9uIHRoZSByb29mIGF0IHRoZSB0aW1lLi4gClNvLCBpcyB0aGUgc2Vjb25kIHBlcnNvbiByZWFsbHkgd2VhbHRoaWVyPyBGcmFua2x5LCBpdCB3aWxsIGRlcGVuZCBvbiBvbmUganVkZ2VtZW50IG9mIHRoZSByaXNrIG9mIGJlaW5nIGpvYmxlc3MsIG9uZSBwb2xpdGljcywgZXRjLi4gClRoYXQgaXQuIApJIHdhcyBpbiBhIG1ldGEgZ2FtZSByYWlzaW5nIHdhciB3aXRoIHNvbWUgZHJ1bmsgbW9yb24geWVhcnMgYWdvIGF0IGEgJDEvMiB0YWJsZSB3aXRoIGVmZmVjdGl2ZSBzdGFja3MgYXQgYXJvdW5kICQyNTAgICBIZSB3YXMgbWluIDMgYmV0dGluZyBhbmQgdGhlbiBmb2xkaW5nIHRvIGphbXMuIApUbyBwdXQgaXQgZnJhbmtseSwgbW9kZXJuIHNob3VsZG50IGhhdmUgYmVjb21lIGFzIHBvcHVsYXIgYXMgaXQgaGFzLiAKVml0IEQgIFJlZHVjdGlvbiBpbiBicmVhc3QgY2FuY2VyIHJpc2sgQ2FuY2VyIENhdXNlcyBDdHJsIDIwMTAKRWFjaCBvZiB0aGVzZSBtb3ZlbWVudHMgY2FuIGJlIGRvbmUgaW4gdmFyaW91cyBwb3NpdGlvbnMgKHN1cGluZSwgdGFsbCBrbmVlbGluZywgaGFsZiBrbmVlbGluZywgc2VhdGVkLCBzdGFuZGluZywgc2Npc3NvciBzdGFuY2UpIGRlcGVuZGluZyBvbiB0aGUgdW5kZXJseWluZyBzdGFiaWxpdHkgb2YgdGhlIGluZGl2aWR1YWwgY2xpZW50LlN0YXJ0aW5nIHBvc2l0aW9uIGlzIGRpY3RhdGVkIGJ5IHRoZSBoZWFsdGggcHJvZmVzc2lvbmFsIGV2YWx1YXRpb24gb2Ygc3RhdGljLCBkeW5hbWljIGFuZCBmdW5kYW1lbnRhbCBzdGFiaWxpdHkuIFRoZSBkZWdyZWUgb2YgZHlzZnVuY3Rpb25hbCBzdGFiaWxpdHkgKG1vdG9yIGNvbnRyb2wpIGRpY3RhdGVzIGhvdyBjaGFsbGVuZ2luZyB0aGUgZXhlcmNpc2Ugc2hvdWxkIGJlIGluIHJlZ2FyZHMgdG8gcG9zaXRpb25pbmcgYW5kIHJlc2lzdGFuY2UuQ2hvcCBhbmQgbGlmdCBwYXR0ZXJucyBmb3IgZnVuZGFtZW50YWwgc3RhYmlsaXR5IGR5c2Z1bmN0aW9ucyB0eXBpY2FsbHkgYmVnaW4gaW4gYW4gdW5sb2FkZWQgc3VwaW5lIHBvc2l0aW9uIHRvIGxlc3NlbiBkZW1hbmQgb24gdGhlIG5lcnZvdXMgc3lzdGVtLCB0aHVzIGluY3JlYXNpbmcgcXVhbGl0eSBvZiBtb3ZlbWVudC5TdGF0aWMgYW5kIGR5bmFtaWMgc3RhYmlsaXR5IGR5c2Z1bmN0aW9ucyB3YXJyYW50IHRhbGwgb3IgaGFsZiBrbmVlbGluZyBwYXR0ZXJucyB0byBlbmdhZ2UgY29yZSBtdXNjdWxhdHVyZSBvZiB0aGUgaGlwLiAKSW5jaGVvbiBHcmFuZCBQYXJrICgpIChJbmNoZW9uKQpJJ20gbm90IGRlZmVuZGluZyBoZXIgYnV0LCBJJ3ZlIGhlYXJkIGZyb20gc2V2ZXJhbCBzb3VyY2VzIHRoYXQgSXQgd2FzICJzdWdnZXN0ZWQiIHRoYXQgTGFyaXNzYSBnbyBpbiBsaWtlIHRoYXQuIEkgY2FuIHNlZSBUTEMgZG9pbmcgdGhhdC4gU2hlIGhhZCBqdXN0IGFycml2ZWQgYW5kIHdhcyBuZXcgdG8gdGhlIGZyYXVkIHRoYXQgdGhlIHByaWNlcyBkby4gU2hlIHByb2JhYmx5IHRob3VnaHQgdGhhdCdzIHRoZSB3YXkgdGhlIHNob3cgd2FzIGRvbmUuIEFzIGZvciB0aGUgZm9vZCwgc2hlIGp1c3QgZmxldyBmb3Igb3ZlciAxNSBob3VycyBhbmQgdGhlbiB3YXMgbGl0ZXJhbGx5IGRyYWluZWQgaW4gdGhhdCBob3QgY2FyLiBJIGNhbid0IGltYWdpbmUgYW55b25lIHdhbnRpbmcgYSBib3dsIG9mIGhvdCBjYW5uZWQgc3Rldy4gVGhhdCB3YXMgcHJvYmFibHkgZnJhdWRlZCBieSB0bGMsIHRvby4KWW91ciBoaWdoIGdheXJlZWsgSVEgbXVzdCBmYWlsZWQgaGlzdG9yeSwgYmVjYXVzZSB0aGUgc3ViaHVtYW5zIGtub3duIGFzIGFyYWJzIGhhdmUgbm90aGluZyB0byBkbyB3aXRoIFRya3Mgb3RoZXIgdGhhbiBhcmFicyBiZWluZyBvdXIgYml0Y2ggaW4gcmVjZW50IGhpc3Rvcnkgc2hvd2Nhc2luZyB1cyBhcyBmYWN0dWFsbHkgc3VwZXJpb3IuIEluIGZhY3QsIHdlIGhhdmUgbWFkZSB5b3Ugb3VyIGJpdGNoIHRvbywgdGhlcmVmb3JlIHdlIGFyZSBzdXBlcmlvciB0byB5b3UgKG5vdCBzdXJwcmlzaW5nKS4gSG93IGxvbmcgY291bGQgeW91ciBnYXlyZWVrIGFzcyBob2xkIG91dCBhZ2FpbnN0IHdhciBhZ2FpbnN0IFR1cmtleSB3aXRob3V0IGNyeWluZyB0byB5b3VyIEV1cm9wZWFuIG1hc3RlcnMgbGlrZSB0aGUgbGFwZG9nIHlvdSBhcmUgSSB3b25kZXIuClRoZSBhbGFybSB3YXMgb24uIApOb3QgeW91ciBvcmRpbmFyeSBwbGFzdGljIG9uZXMgeW91IGNhbiBmaW5kIGF0IFdhbCBNYXJ0LCBidXQgYWN0dWFsIENhc2lubyBQb2tlciBDaGlwcyB0aGF0IG1hZGUgdGhlIGdhbWUgZmVlbCBtb3JlIHJlYWwuIApJIGRvbiBrbm93IGhvdyBtdWNoIHRpbWUgeW91IHNwZW5kIGluIG5hdGlvbmFsIHBhcmtzLCBidXQgSSBsaXZlIGluIFZlcm1vbnQuIFRoZXJlIGxpdGVyYWxseSBub3RoaW5nIGVsc2UgdG8gZG8gYnV0IGhpa2UuIApUaGUgdGVuc2lvbnMgZGlkbid0IGVuZCB0aGVyZS4gQWxvbmcgdGhlIGJhY2sgd2FsbCAyMDA0IFdvcmxkIFBva2VyIENoYW1waW9uIEdyZWcgUmF5bWVyIHN0b29kIHdhaXRpbmcgZm9yIGEgdGFsayByYWRpbyBpbnRlcnZpZXcuICJGb2N1cyBvbiB0aGUgRmFtaWx5IGNvbnNpZGVycyBwb2tlciBpbW1vcmFsLCIgUmF5bWVyIHNhaWQsIGdlc3R1cmluZyB0b3dhcmRzIHRoZSBGb2N1cyBvbiB0aGUgRmFtaWx5IGJvb3RoIGRvd24gYW4gYWlzbGUuIApFbnRlcnRhaW5tZW50IEFydGljbGVzICBEZWNlbWJlciA4LCAyMDEwCkJ5IHRoZSB3YXksIGV2ZW4gaWYgdGhleSBhcmUgIm5pdHR5IiB0aGlzIGRvZXNuIG1lYW4gaXQgaXNuIGEgZ29vZCBnYW1lLiBPYnZpb3VzbHkgeW91IHdvdWxkIHByZWZlciB3aGFsZXMgb3ZlciBuaXR0eW5lc3MgYnV0IGlmIEkgY291bGQgZGVzY3JpYmUgbXkgZmF2b3JpdGUgdHlwZSBvZiBwbGF5ZXIgaXQgaXMgbG9vc2Ugd2Vhay4gCkNhbiBjaGVjayBpZiB0aGVyZSBpcyBhbnlvbmUgZWxzZSBhdHRlbmRpbmcgdGhlIHNhbWUgbWVldCBhcyB5b3Ugb3Igd2lsbGluZyB0byB2b2x1bnRlZXIgdG8gaGFuZGxlIGF0IG1lZXRzLiBUaGlzIGlzIHRoZSBsYXRlc3Qgb25lIGZvciBleGFtcGxlOiA0IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29KdXN0IHNpZ25lZCB1cCBmb3IgbXkgZmlyc3QgcG93ZXJsaWZ0aW5nIG1lZXQgaW4gQXByaWwgYW5kIEkgc3VwZXIgZXhjaXRlZC4gSSB3YWxraW5nIGFyb3VuZCBhdCAxNTAgMTUybGJzIHJpZ2h0IG5vdyBzbyBJIGRvbiBrbm93IGlmIEkgc2hvdWxkIGN1dCBkb3duIHRvIDE0NWxicyBvciBqdXN0IGNvbXBldGUgYXQgbXkgY3VycmVudCB3ZWlnaHQuIApUaGVuIGNvbWVzIHRoaXMgaG9seSBncmFpbCBvZiBnYW1lIGRldmVsb3BtZW50IGFuZCBpdCBoYXJkIHRvIGdyYXNwLiA1MjMgcG9pbnRzICBzdWJtaXR0ZWQgMjMgZGF5cyBhZ28uIApOb3QgYSBmYW4gb2YgdGhlIFRleGFzIEhvbGRlbSBnYW1lPyBXZWxsLCBvbmxpbmUsIGl0IGlzIGVhc2llciBmb3IgeW91IHRvIGZpbmQgYSBzaXRlIHRoYXQgaGFzIHRoZSBraW5kIG9mIGdhbWUgeW91IHdhbnQuIERvIHlvdSBwcmVmZXIgT21haGEgb3IgUmF6ej8gQ2hlY2sgeW91ciBzaXRlJ3MgbG9iYnkgcGFnZSBhbmQgc2VlIGlmIHRoZXkgb2ZmZXIgdGhpcy4gCkFsbCA1LiBTbyB0aGUgbWVjaGFuaWMgZ2V0cyBsb2NraW5nIGx1ZyBudXRzLiBUaGVuLCBvbiB0aGUgaGlnaHdheSBnb2luZyA4MCwgbXkgY2FyIGZpbGxzIHdpdGggc21va2UgYW5kIGp1c3Qgc3RvcHMuIApUaGVIb3VuZFRoYXRSaWRlc0Rpc25leSBDYW5vbiBJcyBCZXN0IENhbm9uClBsYWNlIGNhbiBzaW1wbHkgd2FsayBhY3Jvc3MgdGhlIGNhc2lubydzIHNlY29uZCBmbG9vciB0byBhIGJyaWRnZSBsaW5raW5nIFBhcnEgdG8gR2F0ZSA2IG9mIHRoZSBzdGFkaXVtLiAKTGVhdmUgdGhlIGNvdHRvbiB3b29sIGJhbGwgcmVzdGluZyBvbiB0aGUgbmFpbCBmb3IgYSB3aGlsZSB0byBzb2FrIGluIGEgYml0IGJlZm9yZSB3aXBpbmcgZmlybWx5IGFsb25nIHRoZSBuYWlsLCBjdXRpY2xlIHRvIHRpcC4gVGhpcyBoZWxwcyBhIGxvdCBhdCBnZXR0aW5nIGl0IG9mZiBxdWlja2VyLCBlc3BlY2lhbGx5IGlmIGl0IGlzIGJlaW5nIHJlbW92ZWQgZmFpcmx5IHNvb24uLiAKIlRoaXMgaXMgdGhlIG5ld2VzdCBicmFuZGVkIGhvdGVsIGluIFZlcmFjcnV6LCBhbmQgaXQncyBhIGZyZXNoLCBuZXcgb3B0aW9uIGZvciBndWVzdHMgd2hvIHdhbnQgdG8gZXhwZXJpZW5jZSB0aGUgbG9jYWwgY3VsdHVyZSBhbmQgY29tbXVuaXR5LCIgc2FpZCBKb3JnZSBDcnV6LCBnZW5lcmFsIG1hbmFnZXIsIEhvdGVsIEluZGlnbyBWZXJhY3J1eiBCb2NhIERlbCBSaW8uClNvIEkgd2VudCB0byBhbiBTRUMgc2Nob29sIGluIGEgY29sbGVnZSB0b3duIHdoZXJlIHRoZSBiYXJzIGFyZSBhbGwgbG9jYXRlZCBpbiBvbmUgcGxhY2UsIGFsbCB3aXRoaW4gd2Fsa2luZyBkaXN0YW5jZS4gCldoYXQgbWFrZXMgdGhlIHdvcmsgZGlmZmVyZW50IGlzIHRoZSBpbnRlbnRpb24gYW5kIGZvY3VzIG9uIGdvbGYgcmVsYXRlZCBtb3ZlbWVudHMuIApJZiBvbmx5IEtaIGNvdWxkIHRlc3QgZXZlcnl0aGluZyAuLiAKU2lkZSBub3RlIGJlZm9yZSB0aGUgYXJ0aWNsZTogU1BNIFNwZWNpYWxpemVkIFBybyBSZXNvbHZpbmcgTWVkaWF0b3JzIEluZmxhbW1hdGlvbiBmaWdodGVycy4gVGhlIFNQTXMgKGxpcG94aW5zLCByZXNvbHZpbnMsIHByb3RlY3RpbnMgYW5kIG1hcmVzaW5zKSBhcmUgZGVyaXZlZCBmcm9tIGFyYWNoaWRvbmljIGFjaWQgYW5kIG9tZWdhIDMgZmF0dHkgYWNpZHMuIApPYmkgV2FuIHN1YnNlcXVlbnRseSByZXRyZWF0ZWQgdW5kZXIgdGhlIHN1cmZhY2Ugb2YgdGhlIGxha2UsIHNvIHRoYXQgaGUgY291bGQgbWFpbnRhaW4gdGhlIHRvcG9ncmFwaGljYWwgbG93L2hpZ2ggZ3JvdW5kLi4gCkluIGFueSBjYXNlLCBubyBtYXR0ZXIgd2hldGhlciB5b3UgbGlrZSBiZXR0aW5nLCBzbG90cywgcm91bGV0dGUgb3IgcG9rZXIgICBjZXJ0YWluIHRoaW5ncyBzdWNoIGFzIHNlY3VyaXR5IGFuZCBmYWlybmVzcyBhcmUgc29tZXRoaW5nIHRoYXQgZ29vZCBvbmxpbmUgZ2FtYmxpbmcgc2l0ZXMgaGF2ZSBpbiBjb21tb24uIApZVEEgZm9yIGRvaW5nIHRoYXQgaW4gYSBwYXJraW5nIGxvdC4gVGhlIGxlc3NvbiB0aGUga2lkIGlzIGxlYXJuaW5nIGlzIHRoYXQgaXQncyBva2F5IGRvIHRvIHBvdGVudGlhbGx5IGlycmVzcG9uc2libGUgdGhpbmdzIGFyb3VuZCBvdGhlciBjYXJzL3Blb3BsZS4gWW91IG1heSBiZSB0aGUgYmVzdCBkcml2ZXIgaW4gdGhlIHdvcmxkIGJ1dCB0aGUga2lkIGRvZXNuJ3Qga25vdyB0aGF0LCBhbmQgaXQncyBwb3NzaWJsZSB0aGV5J2xsIHdhbnQgdG8gdHJ5IHRoZSBzYW1lIHRoaW5nIHdoZW4gdGhleSBjYW4gZHJpdmUgYnV0IGVuZCB1cCBjcmFzaGluZyBpbnRvIGEgY2FyIG9yIHdvcnNlLi4gCkJ1dCBJIHByZWZlciBpZiB0aGF0IGRpZG4gYmVjb21lIHRoZSBleHBlY3RhdGlvbiBhbnkgdGltZSBzb21lIGxvdyB3YWdlIGVtcGxveWVlIHBlcmZvcm1zIHNvbWUgc2VydmljZSAoYmV5b25kIHdoZXJlIGl0IGFscmVhZHkgaXMgdGhlIGV4cGVjdGF0aW9uKS4uIApXaGVyZSBJIHdvcmssIHdlIG5lZWRlZCB0byBnZXQgd29yayBkb25lIHdoZXJlIHdlIGRpZCBub3QgaGF2ZSB0aGUgbWFucG93ZXIgdG8gZ2V0IHNhaWQgd29yayBkb25lLiBPdXIgQm9hcmQgZGlkbiBjYXJlIGhvdyB0aGF0IHdvcmsgZ290IGRvbmUgYXMgbG9uZyBhcyBpdCB3YXMgd2l0aGluIGJ1ZGdldC4gVGhhdCB3YXMgcGFzc2VkIGRvd24gdGhlIHJhbmtzIHVudGlsIHNvbWVvbmUgaW4gbWlkZGxlIG1hbmFnZW1lbnQgc3VnZ2VzdGVkIHdlIGNvbnRyYWN0IHRoYXQgd29yayBvdXQgaW5zdGVhZCBvZiBoaXJpbmcgbmV3IGVtcGxveWVlcyB0byBkbyB0aGUgd29yayBhcyBpdCB3YXNuIGxvbmcgdGVybSB3b3JrLiBJdCB3YXMgYWdyZWVkIHVwb24gYnkgdXBwZXIgbWFuYWdlbWVudCB3aXRoaW4gdGhlIG9yZyAobm90IHRoZSBib2FyZCBhcyBhZ2FpbiwgZGlkbiBjYXJlIGFzIGxvbmcgYXMgaXQgd2FzIHdpdGhpbiBidWRnZXQpIHRoYXQgaXQgd291bGQgYmUgY29udHJhY3RlZCBvdXQgYW5kIHRoYXQgdGhlIGRlY2lzaW9uIG9mIHdobyBpdCB3b3VsZCBiZSBjb250cmFjdGVkIG91dCB0byB3b3VsZCBiZSBtYWRlIGJ5IHNvbWVvbmUgaW4gbWlkZGxlIG1hbmFnZW1lbnQuIFRoYXQgbWlkZGxlIG1hbmFnZXIgcmVzcG9uc2libGUgaGlyZWQgYSBjb250cmFjdG9yIGJhc2VkIHVwb24gdmFyaW91cyB2YXJpYWJsZXMgYW5kIGluIHR1cm4gdGhhdCBjb250cmFjdG9yIGNvdWxkIGNvbXBsZXRlIHRoZSB3b3JrLiBObyByZXBlcmN1c3Npb25zIGFnYWluc3QgdGhhdCBtaWRkbGUgbWFuYWdlciB3ZXJlIG1hZGUgYmVjYXVzZSBpdCB3YXMgYSBmaXJzdCB0aW1lIGlzc3VlLiBNaWRkbGUgbWFuYWdlciBnb2VzIGFuZCBoaXJlcyBhbm90aGVyIGNvbnRyYWN0b3IsIG5ldyBjb250cmFjdG9yIGRvZXNuIGRlbGl2ZXIgYXMgd2VsbC4gVGhpcyB0aW1lIG1pZGRsZSBtYW5hZ2VyIGlzIHdhcm5lZCB0byBiZSBtb3JlIGNhcmVmdWwgaW4gd2hvIHRoZXkgaGlyZSBhcyB0aGUgd29yayBoYXMgdG8gYmUgZG9uZSBhbmQgcmVtYWluIHVuZGVyIGJ1ZGdldC4gV2VsbCwgbWlkZGxlIG1hbmFnZXIgaGlyZXMgYSAzcmQgY29udHJhY3RvciB3aG8gYWxzbyBkb2VzIG5vdCBnZXQgdGhlIHdvcmsgZG9uZSBhbmQgdGhpbmdzIGFyZSBnb2luZyBvdmVyIGJ1ZGdldC4gVXBwZXIgbWFuYWdlbWVudCBoYXMgdG8gcmVwb3J0IHRoaXMgdG8gdGhlIEJvYXJkIG5vdyBhcyB0aGVyZSBhIGJ1ZGdldCBpc3N1ZS4gVGhlIEJvYXJkIGNvbWVzIGRvd24gb24gdXBwZXIgbWFuYWdlbWVudCwgd2hvIGluIHR1cm4gZmlyZXMgdGhlIG1pZGRsZSBtYW5hZ2VyIHdobyBoaXJlZCB0aGUgMyBiYWQgY29udHJhY3RvcnMuCldoeSBpcyB0aGlzIGltcG9ydGFudD8gV2VsbCBpZiBJIGxvb2sgZG93biBhdCBzaXhlcyBhbmQgb2xkIG1hbiBjb2ZmZWUgaXMgZGVlcCBzdGFja2VkIGFuZCAzYmV0IG1lIEkgZ29pbmcgdG8gc2V0IG1pbmUuIApUaGUgcG9saWNlIHN5c3RlbSBhbmQgdGhlc2UgY29kZXMgc2hvdWxkIGNlcnRhaW5seSBiZSBjaGFuZ2VkIHdoZXJlIG5lZWRlZC4gSSB0aGluayBhIGxvdCBvZiB0aGVzZSBjaXJjdW1zdGFuY2VzIGFyZSBtb3JlIGNvbXBsaWNhdGVkIHRoYW4ganVzdCAiYSBjb3Agc2hvdCBhbiBpbm5vY2VudCBtYW4uIiBBIGxvdCBvZiB0aW1lcywgdGhlICJpbm5vY2VudCBtYW4iIHdhcyBhIGNyaW1pbmFsIHdob20gYWN0ZWQgaW5hZGVxdWF0ZWx5LiBUaGVyZSBhcmUgY2FzZXMgdGhhdCBhcmUgY2xlYW4gY3V0LCBidXQgaXQncyBzdWNrIGEgbWlub3JpdHkuLiAKSW4gdGhpcyBhcnRpY2xlLCB3ZSdsbCBzZWUgaG93IHN0dWRlbnRzIG9mIGthcmF0ZSAoY2FsbGVkIGthcmF0ZWthcykgYWNjb21wbGlzaCBzdWNoIGFtYXppbmcgZmVhdHMuIEthcmF0ZSBpcyBhIGhpZ2hseSBjb21wbGV4IGFydCB0aGF0IHRha2VzIG1hbnkgeWVhcnMgdG8gbWFzdGVyLiBJdCBpcyBpbXBvc3NpYmxlIHRvIHN1bSB1cCB0aGlzIGFuY2llbnQsIHRyYW5zY2VuZGVudGFsIGRpc2NpcGxpbmUgaW4gYSBzaG9ydCBhcnRpY2xlLCBidXQgd2UgY2FuIGdldCBhIGhhbmRsZSBvbiBzb21lIG9mIHRoZSB1bmRlcmx5aW5nIHByaW5jaXBsZXMuIApQcnVyaXRpYyB1cnRpY2FyaWFsIHBhcHVsZXMgYW5kIHBsYXF1ZXMgb2YgcHJlZ25hbmN5LCBvciBQVVBQUCwgaXMgYSBzdG9tYWNoIHJhc2ggdGhhdCB1c3VhbGx5IGJlZ2lucyBpbiB0aGUgdGhpcmQgdHJpbWVzdGVyLiAKQ29ycmVjdCBtZSBpZiBJJ20gd3JvbmcsIGJ1dCB0aGUgc2hvcnQgc3Rvcnkgb2Ygd2hhdCBNYXRlb3MgY2FuZSB1cCB3aXRoIHdhcyB0aGlzOiBJa2UgY291bGQgZWFzaWx5IGhhdmUgdHVybmVkIGFueSBwYWlyK2RyYXcsIHN0cmFpZ2h0LCB0d28gcGFpciwgc2V0LCBvciBzbWFsbCBmbHVzaCBoYW5kIGludG8gYSBibHVmZiwga25vd2luZyBoZSB3YXMgYmVhdC4gQmVjYXVzZSB0aGVyZSBhcmUgc28gbWFueSBvZiB0aGVzZSBjb21ib3MgY29tcGFyZWQgdG8gdmFsdWUgY29tYm9zLCBpdCB3YXMgbGlrZWx5IGEgY29ycmVjdCAoaWYgc2VlbWluZ2x5IGludHVpdGl2ZWx5IGluY29ycmVjdCkgY2FsbC4gVGhpbmsgYWJvdXQsIG9ubHkgQXMsIFFzLCBKcywgOXMgb3IgOHMgYmVhdHMgaGltOyBob3cgbWFueSBjb21ib3Mgb2YgaGFuZHMgdGhhdCBpbmNsdWRlIHRob3NlIHBhcnRpY3VsYXIgY2FyZHMsIGRvZXMgSWtlIGhhdmUgaW4gaGlzIHJhbmdlPwpUMyBpcyBlc3BlY2lhbGx5IHVzZWZ1bCBmb3IgdGhpcyBwdXJwb3NlLiBJbiAxOTkxLCBFZ3lwdGlhbiByZXNlYXJjaGVycyB0cmVhdGVkIDIzIGFzdGhtYXRpYyBjaGlsZHJlbiB3aXRoIFQzLlsyOV0KSSB3b3VsZCBpbWFnaW5lIHRoZSBzb3VuZHMgaW4gdGhhdCB3b29kbGFuZCBnbGFkZSAgIGp1c3QgYSBicmVlemUgcnVzdGxpbmcgdGhlIGxlYXZlcywgYW5kIGEgbGl0dGxlIGJpdCBvZiBiaXJkIHNvbmcuIApIZSByZW1lbWJlcnMgTGl0ZXJhY3kgTmlnaHQgaW4gMjAwMSB3aGVyZSBmYW5zIHJlY2VpdmVkIGEgcG9zdGVyIG9mIFNveCBwaXRjaGVyIERlcmVrIExvd2UuIEJ1dCBpbiB0aGUgOXRoIGlubmluZyB0aGF0IG5pZ2h0IExvd2UgYmxldyB0aGUgc2F2ZS4gClRoZXNlIHNwYXMgZW1wbG95IHdvbWVuIHRoYXQgYXJlIG1haW5seSBmcm9tIENoaW5hIHdobyBzcGVhayB2ZXJ5IGxpdHRsZSBlbmdsaXNoIGFuZCBtb3N0bHkgbWFuZGFyaW4uIFNvbWUgYXJlIGZyb20gSEsgYW5kIGNhbiBzcGVhayBjYW50b25lc2UuIFRoZSBtYWpvcml0eSBvZiB0aGVtIGFyZSAib24gbG9hbiIgdG8gdGhlIG93bmVycyBmcm9tIENoaW5hIChpZS4gdHJhZmZpY2tlZCkgZm9yIGFueXdoZXJlIGZyb20gJDUwMDAgICQxMCAwMDAgZm9yIDMgbW9udGhzIG9mIHNlcnZpY2UgdG8gdXB3YXJkcyBvZiBhIHllYXIuCkNhcHRpdmF0ZSA4IHJlc3BvbnNpdmUgZGVzaWduLCBicmVha3BvaW50cywgaVBob25lIDYgYW5kIGhlYXJ0YnJlYWsKVGhlIGFkcyBhcmUgYWxsIHNpbWlsYXIuIApEYSB2ZXJzdGVoZSBpY2ggamVkZW4gZGVyIG1pdCBkZW0gQXV0byBmaHJ0LkZpY2tpTXVja2kgIDIwIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29JY2ggbWFnIGRpZSBGaWxtZSB2b20gSGVyem9nIHdpcmtsaWNoIGdlcm5lLCBhYmVyIG1hbiBkYXJmIG5pY2h0IGFsbGVzIGZyIGJhcmUgTW56ZSBuZWhtZW4uIApDYW5ub3QgZGVzaWduIHlvdXIgd2F5IGFyb3VuZCB0aGlzIHByb2JsZW0sIHNheXMgQ3JhbnouIFRoZSBpZGVhIG9mIGx1bWJhciBzdXBwb3J0IGhhcyBiZWNvbWUgc28gZW1iZWRkZWQgaW4gcGVvcGxlIGNvbmNlcHRpb24gb2YgY29tZm9ydCwgbm90IHRoZWlyIGFjdHVhbCBleHBlcmllbmNlIG9uIGNoYWlycy4gV2UgYXJlLCBpbiBhIHNlbnNlLCBsb2NrZWQgaW50byBpdC4gClBhc3NpbmcgdGhlaXIgZXZlbmluZ3MgYXQgQ2xldmVsYW5kJ3MgTGFrZXNob3JlIEhvdGVsLCBDb2xlIGFuZCBoaXMgbWVuIGVudGVydGFpbmVkIHRoZW1zZWx2ZXMgYnkgZHJhd2luZyB1cCBwbGFucyB0aGF0IGV2ZW50dWFsbHkgYmVjYW1lIENoZXZyb2xldCdzIHNtYWxsIGJsb2NrIFYgOC4gSGUgYmVjYW1lIENoZXZ5J3MgY2hpZWYgZW5naW5lZXIgaW4gMTk1Mi4KT3IgeW91IGNvdWxkIHNraXAgdGhhdCBsYXN0IHBhcnQuIFRvdGFsbHkgdXAgdG8geW91LgpXaGVuIG1lbW9yaWVzIGFuZCByZWxhdGlvbnNoaXBzIGZyb20gdGhlIHBhc3QgYXJlIGJvdGhlcmluZyB5b3UKQXMgYSBsaWJyYXJpYW4sIEknbSBzdXJwcmlzZWQuIFdlIGhhdmUgbWVldGluZyByb29tcyB0aGF0IGxvY2FsIHBhdHJvbnMgY2FuIHJlc2VydmUgYnV0IHBhcnQgb2YgdGhlIHJ1bGVzIG9mIHJvb20gdXNhZ2UgaW5jbHVkZSB0aGF0IGl0IGNhbid0IGJlIHNhbGVzIG9yIHByb2R1Y3QgcmVsYXRlZC4gRG9UZXJyYSB3b3VsZCBiZSAxMDAlIGEgbm8gZ28gaW4gbXkgbGlicmFyeSBhbmQgaG9uZXN0bHksIHRoYXQncyBwcmV0dHkgc3RhbmRhcmQgZm9yIGFueSBsaWJyYXJ5IGJlaW5nIHJ1biBieSBwcm9mZXNzaW9uYWxzIChub3QgcGVvcGxlIHdobyBoYXZlIGV4dGVuc2l2ZSBleHBlcmllbmNlIGFuZC9vciBkZWdyZWVzIGluIExpYnJhcnkgU2NpZW5jZSkuLiAKU2hlIGJhc2ljYWxseSBkb21pbmF0ZWQgdGhlIG11c2ljIGluZHVzdHJ5LiAKVGhpcyBmaWd1cmUgbWVhc3VyZXMgZW1wbG95ZWUgc2F0aXNmYWN0aW9uIGFuZCBnaXZlcyBpbmZvcm1hdGlvbiBhYm91dCB3aGV0aGVyIHlvdSdyZSBhYmxlIHRvIG1haW50YWluIGEgc2tpbGxlZCBhbmQgZXhwZXJpZW5jZWQgd29ya2ZvcmNlIHJhdGhlciB0aGFuIGNvbnRpbnVhbGx5IGludmVzdGluZyBpbiB0cmFpbmluZyBuZXcgc3RhZmYuIEJ1dCBpdCBkb2Vzbid0IHJlYWxseSB0ZWxsIGFueXRoaW5nIGFib3V0IGdyb3NzIGVhcm5pbmdzIG9yIHJldmVudWUsIGFsdGhvdWdoIHlvdXIgc2FsZXMgbWF5IGJlIGhpZ2hlciBpZiB5b3VyIHR1cm5vdmVyIGlzIGxvd2VyIGJlY2F1c2UgZW5nYWdlZCBhbmQgaW52ZXN0ZWQgZW1wbG95ZWVzIGRvIGEgYmV0dGVyIGpvYi4uIApLZWVwIGluIG1pbmQgdGhhdCBpbiB0aGUgVVNBIG91ciB0YXhlcyBhcmUgbXVjaCBsb3dlciwgYW5kIHdlIG9mdGVuIGhhdmUgbGVzcyBnb3Z0IGludGVydmVudGlvbiBhbmQgcmVndWxhdGlvbiAoZXNwZWNpYWxseSBmb3Igc2VsZiBlbXBsb3llZCBwZW9wbGUpCkhvb2tlciBhcHByb2FjaGVzIHRoZSBiZW5jaCB3aXRoIHRoZSBEQSBhbmQgdGhleSBkaXNjdXNzIHRoZSBjYXNlLiBUaGV5IGdvIGJhY2sgdG8gdGhlaXIgcmVzcGVjdGl2ZSB0YWJsZXMuIApUb2RheSwgc2hhZGVzIG9mIHNjYXJsZXQgYXJlIGxpbmtlZCB3aXRoIHBvd2VyLCBhZ2dyZXNzaW9uLCBhbmQgc2V4IGZyb20gdGhlIHZlcm1pbGlvbiBvZiB0aGUgQnJpdGlzaCBRdWVlbiByb3lhbCByZWdhbGlhIHRvIHRoZSBnYXVkeSBuZW9uIG9mIEFtc3RlcmRhbSByZWQgZGlzdHJpY3QuIEFuZCB0aG9zZSBhc3NvY2lhdGlvbnMgbWF5IG5vdCBiZSBjb2luY2lkZW5jZS4gQSBuZXcgYnJhbmNoIG9mIHNjaWVuY2UgY2FsbGVkIHBzeWNob2xvZ3kgaGFzIGZvdW5kIHRoYXQgcmVkIGNhbiBoYXZlIGEgcHJvZm91bmQgaW5mbHVlbmNlIG9uIG91ciBtb29kLCBwZXJjZXB0aW9ucyBhbmQgYWN0aW9ucy4gCkJlIHN1cHBvcnRpdmUsIGxpZ2h0aGVhcnRlZCwgYW5kIHBvc2l0aXZlIGluIHlvdXIgYXBwcm9hY2gsIGFuZCBvZmZlciB0byBoZWxwICAgcGVyaGFwcyB3aXRoICJjb2RlIHdvcmRzIiBpZiB5b3Ugc2VlIGhlciBzdGFydCB0byBuaWJibGUgaW4gcHVibGljLCBvciBldmVuIGJ5IHByb3ZpZGluZyBhIHJld2FyZC4uIApTb21lIGV4b3RpYyBwcmltYXJpZXMgYXJlIGZpbmUuIFN1cmUgdGhlcmUgYXJlIHNvbWUgdGhhdCBuZWVkIHNvbWUgYnVmZnMsIGJ1dCBzb21lIG90aGVycyBhcmUgb3Zlcmxvb2tlZCBieSB0aGUgZXhvdGljIHBvd2VyIHdlYXBvbnMgYW5kIHRoZWlyIGluc2FuZSBnYXAgaW4gZHBzIHdoZW4gY29tcGFyZWQgdG8gbGVnZW5kYXJpZXMsIGFuZCBzb21lIGZvciB0aGUgZmFjdCB0aGV5IGRvbiBoYXZlIGNhdGFseXN0cyBhbmQgY2FuIGdlbmVyYXRlIG9yYnMuIEEgZmV3IGV4YW1wbGVzIGFyZToKUmVudGVkIHRoZSBlbnRpcmUgcGxhY2UuIAoiSSB3b3VsZCBuZXZlciBkbyBCYW5nIEJyb3Mgb3IgUG9ybmh1YiBvciBhbnl0aGluZyBsaWtlIHRoYXQsIiBzYXlzIHRoZSBlbmdhZ2VkIG1vbSBvZiB0d28uICJUaGUgYmlnIGRpZmZlcmVuY2UgaXMgdGhlIGNvbnRyb2wuIEkgY2FuIGNvbnRyb2wgZXZlcnl0aGluZyB0aGF0IGdldHMgcHV0IG91dC4gVGhlIHNpdGUgYWxzbyBhY3RzIGFzIGEgbWlkZGxlbWFuIGJ5IGhhbmRsaW5nIHN1YnNjcmlwdGlvbnMgICBWYWxlbnRpbmEgTWFyaWEgbGFuZHMgMTAgdG8gMTUgbmV3IHN1YnNjcmliZXJzIGEgZGF5LCBhY2NvcmRpbmcgdG8gYSBjb21wYW55IHNwb2tlc3dvbWFuICAgYW5kIHVzZXIgZmVlcy4gVGhlIGNvc3QgaXMgJDI1IHBlciBtb250aCBvciAkMTAwIGZvciBsaWZldGltZSBhY2Nlc3MgdG8gaGVyIHByaXZhdGUgU25hcGNoYXQgY2hhbm5lbCwgYW5kIFRlZGR5J3MgR2lybHMgdGFrZXMgYSAyNSBwZXJjZW50IGN1dC4KVGhlIGZvdW5kYXRpb24gaXMgc2V0IHVwIHNvIHRoYXQgeW91IG1heSB1c2UgYSBkb25hdGlvbiBhcyBhIHRheCBkZWR1Y3Rpb24uIEFkZGl0aW9uYWxseSwgaW5kaXZpZHVhbHMgYW5kIGJ1c2luZXNzZXMgd2lsbCBiZSBhY2tub3dsZWRnZWQgdmlhIGEgWW91IGFkIGluIHRoZSBsb2NhbCBuZXdzcGFwZXJzLgpUaGF0IGlzIGEgdGVycmlibGUgYW5hbG9neSwgYW5kIGRvZXNuIGZpdCBhdCBhbGwuIApNb3N0IGFkZHJlc3NlcyBJIHRyaWVkIHRvIGRlbGl2ZXIgdG8gaW4gdGhlIG1pZGRsZSBvZiB0aGUgbmlnaHQgd2VyZSBpbXBvc3NpYmxlIHRvIGxvY2F0ZSB3aXRob3V0IGEgcG9ydGFibGUgc3BvdGxpZ2h0IGFuZC9vciBQcmVkYXRvciB2aXNpb24uIEkgaGFkIHRvIGNyZWVwIHVwIGFuZCBkb3duIHRvdGFsbHkgYmxhY2tlZCBvdXQgbmVpZ2hib3Job29kIHN0cmVldHMgd2l0aCBteSBoaWdoIGJlYW1zIG9uIGFuZCBob3BlIG5vYm9keSBtaXN0b29rIG1lIGZvciB0aGUgcG9saWNlLCBvciBmb3IgYW4gYW5vbnltb3VzIGRlbGl2ZXJ5IGRyaXZlciB3aXRoIHBvY2tldHMgZnVsbCBvZiBjYXNoIGFuZCBhIGJvZHkgdGhhdCBjb3VsZCBiZSBlYXNpbHkgZm9sZGVkIGludG8gYSBzdWl0Y2FzZSBhbmQgc3R1ZmZlZCBpbnNpZGUgdGhlIGhvbGxvdyBiYXNlIG9mIGEgc3RyZWV0bGlnaHQgYWxvbmcgdGhlIGVkZ2Ugb2YgYSBXYWxtYXJ0IHBhcmtpbmcgbG90Li4gCkluIHRoZSBiZWdpbm5pbmcgbGV2ZWxzIG9mIHBva2VyLCB0aGUgZ2FtZSBpcyBhbGwgYWJvdXQgcGxheWluZyB0aWdodCBhbmQgY29uc2VydmF0aXZlLiBQbGF5IGdvb2QgY2FyZHMgYW5kIGZvbGQgdGhlIGJhZCBvbmVzIGFuZCB5b3UgYXJlIHByZXR0eSBtdWNoIGd1YXJhbnRlZWQgdG8gbWFrZSBtb25leSBhdCB0aGUgbG93ZXIgbGV2ZWxzIG9mIHBva2VyLiBBdCB0aGUgbG93IGxldmVscyBubyBvbmUga25vd3MgaG93IHRvIGZvbGQuIEp1c3QgcGF5IGF0dGVudGlvbiB0byB3aG9zZSBwbGF5aW5nIGxpa2UgYSBtYW5pYWMgKGhpbnQgaXQgZ29pbmcgdG8gYmUgbW9yZSB0aGFuIGhhbGYgdGhlIHRhYmxlIGF0IDEkLzIkKSBhbmQgd2FpdCB0aGVtIG91dC4gT25jZSB5b3UgZ2V0IGEgZ29vZCBoYW5kIGJldCBpdCBoYXJkLgpJZiB5b3UgZG9uJ3Qga25vdyB0aGUgaGFuZCByYW5raW5ncyBob3cgd2lsbCB5b3Uga25vdyB3aGF0IGJlYXRzIHdoYXQ/CkRpZCBpdCBmZWVsIHdyb25nPyBZZWFoLCBpdCBkaWQuIEFic29sdXRlbHkuIApEdW5jYW4gQ2hhbm5vbidzICJHYW1lIFJlY29nbml6ZSBHYW1lIiBmb3IgdGhlIEdvbGRlbiBTdGF0ZSBXYXJyaW9ycyBmZWF0dXJlcyBvdXQgb2YgaG9tZSB3b3JrIGluIHRoZSBCYXkgYXJlYSB3aGljaCBzaG93IHBsYXllcnMgZnJvbSB0b2RheSBhbG9uZ3NpZGUgImljb25pYyBXYXJyaW9ycyBhY3Jvc3MgdGhlIGRlY2FkZXMuIiBUViBzcG90cyBhbHNvIHNob3cgYSAiY3Jvc3MgZ2VuZXJhdGlvbmFsIiBXYXJyaW9ycyBnYW1lIHdpdGggcGxheWVycyBsaWtlIFJpY2sgQmFycnkgYW5kIEJhcm9uIERhdmlzIHRoYXQgcGxheSB3aXRoIFN0ZXBoIEN1cnJ5IGFuZCBLZXZpbiBEdXJhbnQuICJTZWVpbmcgYSBXYXJyaW9ycyBzdXBlciB0ZWFtIGJ1aWx0IGFjcm9zcyBnZW5lcmF0aW9ucyBmZWVscyBsaWtlIHRoZSB1bHRpbWF0ZSBnaWZ0IHRvIHRoZSBmYW5zLCBhbmQgYSBuYXR1cmFsIGZpdCBmb3IgYSB0ZWFtIHRoYXQgcm91dGluZWx5IGFja25vd2xlZGdlcyB0aGUgd29yayBhbmQgaGlzdG9yeSB0aGF0IHByZWNlZGVzIHRoZWlyIGFjY29tcGxpc2htZW50cyB0b2RheSwiIGNvIGZvdW5kZXIgUGFya2VyIENoYW5ub24gc2FpZCBpbiBhIHN0YXRlbWVudC4uIApXZWxsLCBwYXJ0IG9mIGl0IGlzIHNheWluZyBoZSdzIHNtYXJ0IGJlY2F1c2Ugb2YgZXVnZW5pY3MsIHBhcnQgb2YgaXQgaXMgcmFtYmxpbmcgYWJvdXQgaG93LCB1bSwgcG93ZXJmdWwsIEkgZ3Vlc3MsIG51Y2xlYXIgcG93ZXIgaXMuIFNvbWUgcmFuZG9tIHRhbmdlbnRzIGluIHRoZXJlLCBEZW1vY3JhdHMgYXJlIHVuZmFpciB0byBoaW0gZm9yIHRvdGFsbHkgcGFydGlzYW4gdW5mYWlyIHJlYXNvbnMsIGFuZCB0aGUgUGVyc2lhbnMgYXJlIGdyZWF0IG5lZ290aWF0b3JzIHNvIHRoZSBJcmFuIERlYWwgaXMgYmFkIGZvciB1cy4gU29tZXRoaW5nIGxpa2UgdGhhdC4uIApEci4gQWRhbGJlcnQgSS4KRXh0ZW5zaXZlIHJlc2VhcmNoIGhhcyBiZWVuIGRvbmUgdG8gZGV0ZXJtaW5lIGhvdyBiZXN0IHRvIG51ZGdlIHBlb3BsZSB0byBzYXZlIG1vcmUgZm9yIHJldGlyZW1lbnQuIFJpY2hhcmQgVGhhbGVyIHdvbiB0aGUgTm9iZWwgUHJpemUgaW4gMjAxNyBmb3IgaGlzIGV4dGVuc2l2ZSBjb250cmlidXRpb25zIHRvIGJlaGF2aW91cmFsIGVjb25vbWljcywgcGFydGljdWxhcmx5IGhvdyBwZW9wbGUgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiBjYW4gZW5jb3VyYWdlIHRoZW0gdG8gYXZvaWQgaXJyYXRpb25hbCAoYmFkKSBjaG9pY2VzLiBCdXQgYXJlIHRoZXJlIGZhY3RvcnMgYmV5b25kIGJhZCBkZWNpc2lvbiBtYWtpbmcgYXQgcGxheSB0aGF0IG1heSBsZWFkIHRvIHNhdmluZyBzaG9ydGZhbGxzPwpBdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBtYW5nYSBJIGNhbiBob25lc3RseSBzYXkgdGhhdCBpdCB3YXMgYSBiaXQgY29uZnVzaW5nIGFzIGl0IGxhY2tlZCBhIHZlcnkgc21hbGwgZXhwbGFuYXRpb24gdG8gZ2V0IGl0IHRocm91Z2ggbXkgaGVhZCwgdGhvdWdoIGl0IHdhcyBvbmx5IGZvciB0aGUgdmVyeSBmaXJzdCBwYWdlcyBhbmQgbm90IGxpa2UgdGhvc2UgbWFuZ2EgdGhhdCB0ZW5kIHRvIG5vdCBleHBsYWluIG5vdGhpbmcgYXQgYWxsIGluIGNlcnRhaW4gY2FzZXMgdW50aWwgYSBmZXcgY2hhcHRlcnMgbGF0ZXIuIEkgYXBwcmVjaWF0ZWQgdGhhdCBhbmQgaXQgbWFkZSBpdCBmZWVsIGEgYml0IG1vcmUgbGl2ZWx5IGFzIGl0IGV4cGxhaW5lZCBhZnRlciBhIGZldyBtb3JlIHBhZ2VzLiBBIHJlYXNvbiB0byBkbyB0aGlzIGlzIGJlY2F1c2Ugb2YgdGhlIGZvY3VzIG9mIHRoZSBtYWluIHByb3RhZ29uaXN0LiAKU2hlIGxpa2VzIHRvIHByZXRlbmQgdGhhdCBzaGUgaXMgYWxsIHdpc2UgYW5kIGxvdmluZy4gCkRhcyBlaW56aWdhcnRpZ2UgR3JhbmQgSG90ZWwgc3RlaHQgd2llIGtlaW4gendlaXRlcyB3ZWx0d2VpdCBmciBlaW4gZ2FuemVzIExhbmQuIApJbWFnaW5lIHdhbGtpbmcgaW50byBCZXN0IEJ1eSBhbmQgc2VlIGEgJDMwMCBlbGVjdHJvbmljIGZyb20gYSBicmFuZCBsaWtlIFNvbnkgLCBTYW1zdW5nKCBiZWVuIGFyb3VuZCBmb3JldmVyICkgYW5kIGZvciBhcmd1bWVudHMgc2FrZSB0aGV5IGhhdmUgbWF5YmUgNTAwIHJldmlld3MgLiBZb3Ugc2VlIHRoZSBzYW1lIGl0ZW0gd2l0aCB0aGUgYnJhbmQgeGFuZ2Jlc3RzZWxsZXJoYXBweWNoaW5hIGZvciAkMjkwIC4gCkJpbGR1bmcgaXN0IGF1Y2ggZGFkdXJjaCBlaW4gR3V0LCBkYXNzIEF1ZndhbmQgKGluIEZvcm0gdm9uIEFyYmVpdHNrcmFmdCBkZXIgUHJvZmVzc29yZW4sIExlaHJtYXRlcmlhbGllbiwgR2VidWRlaW5zdGFuZGhhbHR1bmcgZXRjLikgYmV0cmllYmVuIHdlcmRlbiBtdXNzLCB1bSBzaWUgenVyIFZlcmZndW5nIHp1IHN0ZWxsZW4sIHVuZCBpc3QgZGVzaGFsYiBhdWNoIGluIGdld2lzc2VyIFdlaXNlIGtuYXBwOyBlcyBnZWhlbiB6dW1pbmRlc3QgYW5kZXJlIFNhY2hlbiBkYWR1cmNoIHZlcmxvcmVuLCBkYXNzIEJpbGR1bmcgYW5nZWJvdGVuIHdpcmQuIEF1Y2ggZWluIEJ1Y2ggc2NocmVpYmVuIGtubmVuLiBKZW1hbmRlbSBlaWdlbnRsaWNoIGVnYWwgaXN0LCBvYiBlciBlaW5lIExlaHJlIGFuZm5ndCBvZGVyIFBoaWxvc29waGllIHN0dWRpZXJ0LiAKQnV0IG5vbmUgY2FuIHRyYWluIHlvdSBmb3IgYSBndWFyYW50ZWUgdGhhdCB5b3Ugd2lsbCBiZSBhYmxlIHRvIG1ha2UgYSBsb3Qgb2YgbW9uZXkgcGxheWluZyBwb2tlciBzb21lZGF5LiAKQnJpbmcgYSBndWVzdCAodW5saW1pdGVkIG51bWJlcikKRmliZXJzIGZyb20gdGhlIFNOUyBpbm5lcnZhdGUgdGlzc3VlcyBpbiBhbG1vc3QgZXZlcnkgb3JnYW4gc3lzdGVtLCBwcm92aWRpbmcgYXQgbGVhc3Qgc29tZSByZWd1bGF0b3J5IGZ1bmN0aW9uIHRvIHRoaW5ncyBhcyBkaXZlcnNlIGFzIHB1cGlsIGRpYW1ldGVyLCBndXQgbW90aWxpdHksIGFuZCB1cmluYXJ5IG91dHB1dC4gClRoZSBraWQgd2FzIGluIHRoZSBzYW1lIGNsYXNzIGFzIG15IG9sZGVyIHNpc3RlciBhbmQgd2UgYXR0ZW5kZWQgdGhlIHNhbWUgY2h1cmNoLCBzbyBvdXIgZmFtaWxpZXMga25ldyBlYWNoIG90aGVyIHJlYXNvbmFibHkgd2VsbC4gQnV0IHdoaWxlIEkgYmFyZWx5IHJlbWVtYmVyIGl0LCBpdCBtYWRlIGEgbGFzdGluZyBuZWdhdGl2ZSBpbXByZXNzaW9uIG9uIGhpbS4gSSBidW1wZWQgaW50byBoaW0gMjAgeWVhcnMgbGF0ZXIgYW5kIGhlIHNhaWQgdGhlIGV4cGVyaWVuY2UgaGFkIGJlZW4gdHJhdW1hdGljLiAKRXZlbiB0aGUgcm9vc3RlciBrbmV3IHRoZXJlIHdhcyBzb21ldGhpbmcgZGlmZmVyZW50IGFib3V0IHVzLiAKQXMgcmVjZW50bHkgYXMgMTk2MSwgZXZlbiBOZXcgWmVhbGFuZCBib3JuIENoaW5lc2UgaGFkIHRvIGdldCBhIHBlcm1pdCB0byByZSBlbnRlciB0aGUgY291bnRyeSBpZiB0aGV5IGxlZnQgaXQuIFNoZSBhbHNvIGNvbnNpZGVycyB0aGUgYmFycmllcnMgdG8gYWNjZXB0YW5jZSAgIG1vc3Qgb2J2aW91c2x5IGFwcGVhcmFuY2UgICBidXQgdGhlIDE5NjBzIHRvIDE5ODBzIHNhdyBhIGRlY2xpbmUgaW4gZGlzY3JpbWluYXRpb24gYW5kIGFwcGFyZW50IGFjY2VwdGFuY2UgYXQgbGFzdC4gCkxpZXUgZHUgc3RhZ2UgOiByZXRyYWl0ZSBhdmVjIGNvdWNoZXIgc3VyIHBsYWNlIChjZSByZXRyYWl0IGRlIG5vdHJlIG1pbGlldSBmYXZvcmlzZSB1bmUgcGx1cyBncmFuZGUgZGlzcG9uaWJpbGl0IGF1eCBjaGFuZ2VtZW50cyBldCBwcmlzZXMgZGUgY29uc2NpZW5jZSBwZXJzb25uZWxsZXMpIE8gPyA6IFN0IEpvYWNoaW0gZGUgc2hlZmZvcmQgKCAxNW1uIGRlIGdyYW5ieSkKQW4gb3BlbiBob3VzZSBjZWxlYnJhdGlvbiBvZiBsaWZlIHRvIGJlIGhlbGQgZnJvbSA0OjAwIDc6MDBwbSBvbiBXZWRuZXNkYXksIEp1bmUgMjl0aCwgMjAxNiBhdCBCaWxsJ3Mgb2ZmaWNlLCAxMDg3IEdhaW5zYm9yb3VnaCBSZCwgSHlkZSBQYXJrIE9OLi4gCkxvb2sgdXAgY29taWNzIGV4cGxhaW5lZCBjaGFubmVsIG9uIFlvdVR1YmUgaWYgeW91IHdhbnQgYSBtb3JlIHRob3JvdWdoIGV4cGxhbmF0aW9uIGxpdGVyYWxseSBsaWtlIGEgMyBob3VyIHZpZGVvLiAKVGhlIENsYXl0b24gQWN0IHdhcyBwYXNzZWQgdGhlIHNhbWUgeWVhciwgYWRkcmVzc2luZyBzcGVjaWZpYyBwcmFjdGljZXMgdGhlIFNoZXJtYW4gQWN0IGRvZXMgbm90IHByb2hpYml0LiBGb3IgZXhhbXBsZSwgdGhlIENsYXl0b24gQWN0IHByb2hpYml0cyBoYXZpbmcgdGhlIHNhbWUgcGVyc29uIG1ha2UgYnVzaW5lc3MgZGVjaXNpb25zIGZvciBjb21wZXRpbmcgY29ycG9yYXRpb25zLiBUaGUgdGhyZWUgYW50aXRydXN0IGxhd3MgZGVzY3JpYmUgdW5sYXdmdWwgbWVyZ2VycyBhbmQgYnVzaW5lc3MgcHJhY3RpY2VzIGluIGdlbmVyYWwgdGVybXMsIGxlYXZpbmcgY291cnRzIHRvIGRlY2lkZSB3aGljaCBvbmVzIGFyZSBpbGxlZ2FsIGJhc2VkIG9uIGZhY3RzIG9mIGVhY2ggY2FzZS4uIApBbmQgdGhleSBkb24gZ2l2ZSBhIHNoaXQgYWJvdXQgYW55dGhpbmcgZWxzZSBpbiBsaWZlIGF0IGFsbCwgc28gdGhleSBnb2luZyB0byB3b3JrIEEgTE9UIGhhcmRlciB0aGFuIHlvdS4gClNoYWJieSBDaGljIGZ1cm5pdHVyZSBpcyBnaXZlbiBhIGRpc3RyZXNzZWQgbG9vayBieSBiZWluZyBjb3ZlcmVkIGluIHNhbmRlZCBtaWxrIHBhaW50LiAKIkhlJ3MgcHV0dGluZyBpdCBiYWNrIGluIHRoZSBjbG9zZXQsIHVuZGVyIGhpcyBicmVhdGggaGUgc2F5cywgJ0kgd29uZGVyIHdoZXJlIHRoZSBzZWNvbmQgb25lIHdlbnQuJyAiIFJlbWVtYmVyLCBib3RoIHBhcmVudHMgaGFkIGJlZW4gc2F2YWdlbHkgc2xhc2hlZC4gQWZ0ZXIgRXJuaWUgZmxlZCwgUm9ieW4gdGhvdWdodCBhYm91dCB0aGF0IG1pc3Npbmcgc3dvcmQuIApUaGF0IGRvZXNuIG1lYW4gZ2V0dGluZyB0aGlzIG1vdmllIG1hZGUgd2FzIGVhc3kuIEFuIGVhcmx5IHByb3NwZWN0aXZlIHByb2R1Y2VyIHN1Z2dlc3RlZCBjYXN0aW5nIGEgd2hpdGUgd29tYW4gYXMgdGhlIGxlYWQuIExhdGVyLCB0aGUgZmlsbW1ha2VycyB0dXJuZWQgZG93biBhIGx1Y3JhdGl2ZSBkZWFsIHdpdGggTmV0ZmxpeCB0byBtYWtlIHRoZSBmaWxtIHdpdGggV2FybmVyIEJyb3MuLCB3aGljaCBndWFyYW50ZWVkIGl0IGEgaGlnaGVyIHByb2ZpbGUgcmVsZWFzZS4gCjI4IGJ5IHR3byBtYXNrZWQgbWVuIHdobyBodXJsZWQgcmFjaWFsIGFuZCBob21vcGhvYmljIHNsdXJzIGF0IHRoZSBibGFjayBhbmQgb3Blbmx5IGdheSBhY3RvciwgYmVhdCBoaW0sIHRocmV3IGFuIHVuaWRlbnRpZmllZCBsaXF1aWQgY2hlbWljYWwgb24gaGltIGFuZCBsb29wZWQgYSByb3BlIHRpZWQgbGlrZSBhIG5vb3NlIGFyb3VuZCBoaXMgbmVjay4gCldvcmxkIFN3b3JkIFN3YWxsb3dlcnMgRGF5IDIwMTUKWW91IGNhbiBzZXQgdGhlIDQgZGVjayBhdXRvbWF0aWMgY2FyZCBzaHVmZmxlciBjb252ZW5pZW50bHkgYW55d2hlcmUgaW4geW91ciBwb2tlciB0YWJsZS4gCkhvd2V2ZXIgaWYgeW91IHdhbnQgdG8gZ28gZmFyLCBJIHdvdWxkIHNheSBjb21pbmcgZnJvbSBhIHByb2dyYW1taW5nIGJhY2tncm91bmQgaXMgZXNzZW50aWFsLiAKWW91IG5lZWQgZ2Vhci4gCkV0Yy4uIApJIGtub3cgdGhlcmUgYSBuYXR1cmFsIHByb2dyZXNzaW9uIHRvIHRoaW5ncywgYW5kIHRoYXQgd2hhdCBJIGxpa2UgY291bGQgaGF2ZSBvbmx5IGV4aXN0ZWQgYnkgcmVwbGFjaW5nIHdoYXQgaGFkIGJlZW4gdGhlcmUgYmVmb3JlLiAKVGhlcmUgaXMgYSBodWdlIG51bWJlciBvZiBwb2tlciByZXZpZXcgc2l0ZXMgb3V0IHRoZXJlIGVhY2ggaGF2aW5nIHRoZWlyIHRha2Ugb24gdGhlIGNvdW50bGVzcyBwb2tlciByb29tcyBvcGVyYXRpbmcgb24gdGhlIEludGVybmV0LiBJbiB0aGlzIGFydGljbGUsIHdlIHdpbGwgYmVnaW4gdGhlIHByb2Nlc3Mgb2YgYnJlYWtpbmcgZG93biBvdXIgb3duIG9ubGluZSBwb2tlciByZXZpZXcgZ3VpZGUgc28geW91IGtub3cgd2hhdCBsb29rIGZvciB3aGVuIHRyeWluZyB0byBmaW5kIGFuIG9ubGluZSBwb2tlciByb29tIHRoYXQgc3VpdHMgeW91LgpXZSdkIGFsc28gbGlrZSB0byBjbGVhciB1cCBvbmUgdGhpbmcgdGhhdCBhcHBlYXJzIHRvIGJlIGNhdXNpbmcgY29uZnVzaW9uIGFyb3VuZCB0aGlzIHBvbGljeSAgIGl0IGlzIG5vdCBhbHdheXMgYSBxdWVzdGlvbiBvZiB0aGUgaW1hZ2UgaXRzZWxmLiBDb21tZW50cyBhbmQgY29udGV4dHVhbGl6YXRpb24gbWF0dGVyLiBFdmVuIGlmIGFuIGltYWdlIG9mIGEgbWlub3IgaXMgU0ZXLCBpZiB0aGUgY29tbWVudHMgYW5kIGRpc2N1c3Npb24gYXJvdW5kIHRoYXQgaW1hZ2UgYXJlIHN1Z2dlc3RpdmUsIHRoZW4gYSB2aW9sYXRpb24gaXMgY3JlYXRlZC4gVGhpcyBpcyB3aHkgeW91IG1heSBoYXZlIHNlZW4gU0ZXIHBob3RvcyBjb21lIGRvd24gdW5kZXIgdGhpcyBwb2xpY3kuCkluIGl0cyBkYXksIHRoZSBvbGQgUlNMIENsdWIgd2FzIGEgbWFnbmV0IGZvciBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBlbnRlcnRhaW5lcnMsIHdpdGggbmFtZXMgbGlrZSBBQyBEQywgTWlkbmlnaHQgT2lsLCBDb2xkIENoaXNlbCBhbmQgQXVzdHJhbGlhbiBDcmF3bCBkcmF3aW5nIGh1Z2UgY3Jvd2RzIGludG8gdGhlIDEyNiBmb290ICg0MCBtZXRyZSkgYXVkaXRvcml1bS4gClRoZW4gYWdhaW4sIHRoZXJlIGFyZSBvZiBzdG9yaWVzIGZyb20gRXVyb3BlIG9mIGJsYXRhbnQgcmFjaXNtIGFnYWluc3QgQXNpYW5zLiBJIG5vdCBtYWtpbmcgYSBjYWxsIG9uIGFueSBvZiB0aGlzLCBqdXN0IHB1dHRpbmcgaW4gYW4gYWRkaXRpb25hbCBwZXJzcGVjdGl2ZS4KVG8gUmVwb3J0IGFuIEluY2lkZW50IG9yIENvbmNlcm4KSXQgbWFrZXMgbWUgcXVlc3Rpb24geW91ciBpbnRlbnRpb25zIG9mIG1ha2luZyB0aGUgdGhyZWFkIGluIHRoZSBmaXJzdCBwbGFjZS4gClRoZXJlIGhhcyBuZXZlciBiZWVuIGEgZmlsbW1ha2VyIGF0dGFjaGVkIHRvIGl0LCBFdmFucyBpbmNsdWRlZC4uIApJcyBvdXIgZ29hbCB0byBlbGV2YXRlIHRoZSBXUFQgVG91cm5hbWVudCBvZiBDaGFtcGlvbnMsIGNyZWF0aW5nIGFuIGV4dHJhb3JkaW5hcnkgc2Vhc29uIGVuZGluZyBldmVudCB0byBjZWxlYnJhdGUgdGhlIG1lbWJlcnMgb2YgdGhlIFdQVCBDaGFtcGlvbnMgQ2x1YiBhbmQgdGhlIHJpY2ggbGVnYWN5IG9mIHRoZSBXb3JsZCBQb2tlciBUb3VyLCBXUFQgUHJlc2lkZW50IGFuZCBDRU8gQWRhbSBQbGlza2Egc3RhdGVkIGluIGEgcHJlc3MgcmVsZWFzZS4gQSBzaWduaWZpY2FudCBvdmVybGF5IG9mIGNhc2ggYW5kIHByaXplcyB0aGUgV1BUIGhhcyBpbW1lZGlhdGVseSBpbmNyZWFzZWQgdGhlIHZhbHVlIG9mIGJlaW5nIGEgV1BUIENoYW1waW9ucyBDbHViIG1lbWJlciwgYW5kIHdlIHdpbGwgY3Jvd24gdHdvIG1vcmUgd2lubmVycyBwcmlvciB0byB0aGUgV1BUIFRvdXJuYW1lbnQgb2YgQ2hhbXBpb25zIGR1cmluZyB0aGUgU2VtaW5vbGUgSGFyZCBSb2NrIFBva2VyIFNob3dkb3duIGZlc3RpdmFsLiBUaGUgc2FtZSBwcmVzcyByZWxlYXNlLCBXUFQgRXhlY3V0aXZlIFRvdXIgRGlyZWN0b3IgTWF0dCBTYXZhZ2UgYWRkZWQsIGhhdmUgYWx3YXlzIGJlbGlldmVkIHRoYXQgYmVpbmcgYSBtZW1iZXIgb2YgdGhlIFdQVCBDaGFtcGlvbnMgQ2x1YiBpcyBhbiBpbmNyZWRpYmxlIGhvbm9yLiAKQWRkaXRpb25hbGx5LCBjb25zaWRlciBob3cgeW91bmcgeW91IGJvdGggd2VyZSB3aGVuIHlvdSBnb3QgdG9nZXRoZXIgYW5kIGhvdyBvbGQgeW91IGFyZSBub3cuIE1vc3QgcGVvcGxlIGdvIHRocm91Z2ggYSBncm93dGggYmV0d2VlbiAxNiAyNSB3aGVyZSB0aGV5IGhhdmUgc2V2ZXJhbCBzZXh1YWwgYW5kL29yIGVtb3Rpb25hbCByZWxhdGlvbnNoaXBzICBzbyB1bmRlcnN0YW5kIHRoYXQgdGhvc2UgNCB5ZWFycyBzcGVudCB3aXRoIHlvdSBtZWFudCBzaGUgd2FzbiBvdXQgaW4gdGhlIGRhdGluZyBwb29sLCBnb2luZyB0aHJvdWdoIGEgYnVuY2ggb2YgdHJhc2ggZHVkZXMuIApJIGtub3cgb2Ygc2V2ZXJhbCB2ZXJ5IGdvb2Qgd2FyZCBvcmdhbmlzdHMgd2hvIGhhdmUgZm91bmQgdGhlbXNlbHZlcyB3aXRoIGEgbXVzaWMgZGlyZWN0b3Igd2hvIGRvZXNuIHVuZGVyc3RhbmQgdGhlIGltcG9ydGFuY2Ugb2YgdGVtcG8gYW5kIGVuZXJneSBhbmQgbm90IGdhc3BpbmcgZm9yIGFpciBhbmQgd2lsbCBwdXJwb3NlbHkgZ28gc2xvdyBpbiBvcmRlciB0byBiZSAicmV2ZXJlbnQuIiBJIGtub3cgb2Ygb3RoZXIgZGlyZWN0b3JzIHdobyBiZWdpbiB0byB0aXJlIHRocm91Z2ggdGhlIGh5bW4sIGFuZCBzbyB0aGUgYmVhdCBwYXR0ZXJuIGdldHMgc2xvd2VyIGFuZCBzbG93ZXIgKHVzdWFsbHkgYmVjYXVzZSBhbWF0ZXVyIGRpcmVjdG9ycyB0ZW5kIHRvIG1ha2UgYmlnLCBzd29vcHkgbW90aW9ucyB0aGF0IGFyZSB3YXkgbW9yZSB3b3JrIHRoYW4gaXMgbmVlZGVkKS4gR29vZCBvcmdhbmlzdHMgYXJlIHRyYWluZWQgdG8gZm9sbG93IHRoZSBkaXJlY3RvciBubyBtYXR0ZXIgd2hhdC4gSWYgdGhlIG9yZ2FuaXN0IGZvbGxvd3Mgc2xvdyBsZWFkZXJzaGlwLCBhbmQgdGhlIGNvbmdyZWdhdGlvbiBmb2xsb3dzIHRoZSBvcmdhbiBpbnN0aW5jdGl2ZWx5LCBldmVyeW9uZSBnb2VzIG92ZXIgdGhlIGNsaWZmIHRvZ2V0aGVyLi4gClNoZSBncmV3IHVwIHBsYXlpbmcgdGhlIHRydW1wZXQgYW5kIHVzaW5nIGNyZWF0aXZpdHkgYW5kIGh1bW9yIHRvIG92ZXJjb21lIGxvbmVsaW5lc3MuIEluIGhlciB0ZWVucywgc2hlIGNhbWUgdXAgd2l0aCBoZXIgcGVyc29uYSBhbmQgc3RhZ2UgbmFtZSAoYSBwbGF5IG9uIHdhdGVyIGJyYW5kIEFxdWFmaW5hKSBhcyBhIHdheSB0byBoYXZlIGEgbGF1Z2ggd2l0aCBhIGZyaWVuZC4gClRoZSBsYXJnZSBwYWludGluZyB3YXMgYWN0dWFsbHkgYSBjYW1wYWlnbiBwb3N0ZXIgdXNlZCBkdXJpbmcgYSBwYXJhZGUgZG93biB0aGUgc3RyZWV0cyBvZiBHb3NoZW4gaW4gMTg2MCBkdXJpbmcgdGhlIHByZXNpZGVudGlhbCBwcmltYXJ5LiBUaGUgYXJ0aXN0IHdhcyBKb3NlcGggRGlsbGUsIHdobyBsaXZlZCBpbiBHb3NoZW4uIApBY3R1YWxseSwgYm90aCBhc3N1bXB0aW9ucyBhcmUgZmFsc2UuLiAKTXkgdGFiYnkgZ2lybCBpcyBzd2VldCBhbmQgdmVyeSB2b2NhbC4gVGhlcmUgc29tZSBiZW5nYWwgYmxvb2QgaW4gaGVyIHdoaWNoIGlzIHdoZXJlIGhlciBleHRyZW1lbHkgdm9jYWwgdHJhaXQgY29tZXMgZnJvbSwgYXMgd2VsbCBhcyBoZXIgcHJldHR5IGJpZyBwcmV5IGRyaXZlIGFuZCB3YXRlciBvYnNlc3Npb24uIApJZiB5b3UgamFtIGhlcmUsIHdoYXQgYmV0dGVyIGhhbmRzIGFyZSBmb2xkaW5nPyBNYXliZSBsb3cgZmx1c2hlcyB0aGF0IHNvbWVob3cgbWFkZSBpdCBoZXJlLCBidXQgYmFzZWQgb24gaG93IHRoZSBoYW5kIHdlbnQsIGRvIHdlIGV4cGVjdCByZWFsbHkgbG93IGZsdXNoZXMgdG8gYmUgaGVyZT8gVGhlIHdvcnN0IGZsdXNoIHdlIGNhbiBleHBlY3QgaXMgVGQ5ZCwgZXZlbiB0aGF0IG1pZ2h0IGhpdCB0aGUgY2FsbCBkZXBlbmRpbmcgb24gc3RhY2sgc2l6ZXMuIERvIHdlIHRoaW5rIGEgZnVsbCBob3VzZSBpcyBmb2xkaW5nPyBGdWNrIG5vLi4gCldoaWNoIG1lYW5zIEkgYW0gZ29pbmcgdG8gc2l6ZSBteSBiZXQgdGhlIHNhbWUgZm9yIG15IGVudGlyZSByYW5nZS4gClRoZSBjaGlwcyBoYXZlIGEgdmVyeSBkZWxpY2F0ZSBsb29rIGV4dGVybmFsbHkuIApJY2ggZmluZGUgZGFzIG5pY2h0IHZlcndlcmZsaWNoLCBtYW4gbXUgZXMgbnVyIHdpc3NlbiB1bmQgZGFyZiBlYmVuIHNlaW5lIEZpbG1lIG5pY2h0IGFscyBaZXVnbmlzc2UgZWluZXIgb2JqZWt0aXZlbiBSZWFsaXR0IHNlaGVuLldhcnVtIHJlaXRlIGljaCBkYXJhdWYgcnVtPyBXZWlsIFdhbHRlciBTYXhlciwgUHJvZHVrdGlvbnNsZWl0ZXIgdmllbGVyIEZpbG1lIEhlcnpvZ3MgdW5kIGRlcmplbmlnZSwgZGVyIEtpbnNraSBpbiBkZW0gYmVyaG10ZW4gQ2xpcCBoYXQgd2lzc2VuIGxhc3NlbiwgZGEgZXIgZGVuIFNjaGVpZnJhIG5pY2h0IGVzc2VuIG1zc2UsIGtsaXBwIHVuZCBrbGFyIGdlc2FndCBoYXQsIGRhIGRhcyBWZXJobHRuaXMgendpc2NoZW4gSGVyem9nIHVuZCBLaW5za2ksIHNvIHdpZSBlcyBpbiAiTWVpbiBsaWVic3RlciBGZWluZCIgZGFyZ2VzdGVsbHQgd3VyZGUsIG5pY2h0IGRlciBSZWFsaXR0IGVudHNwcmFjaCwgc29uZGVybiwgZGEgc2ljaCBIZXJ6b2cgaW4gU3plbmUgZ2VzZXR6dCBoYXQuIERpZSBQYXNzYWdlIGluIGRlciBIZXJ6b2cgS2luc2tpIG1pdCBkZW0gR2V3ZWhyIGJlZHJvaHRlLCBzb2xsIHNpY2ggYmVpc3BpZWxzd2Vpc2UgbmllIHp1Z2V0cmFnZW4gaGFiZW4uVW5kIGdlbmF1IHNvLCB3cmRlIGljaCBhdWNoIGRpZSByZXN0bGljaGVuIEdlc2NoaWNodGVuIHNlaGVuOiBLYW5uIHNlaW4sIGRhIEhlcnpvZyBnZXBsYW50IGhhdCBLaW5za2kgdW16dWJyaW5nZW4sIG11IGFiZXIgbmljaHQuRnJpZGFfdGhlX3VuaWNvcm4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnb1p1IGRlaW5lbSBsZXR6dGVuIEFic2F0ejogTWVpc3RlbnMga2FubiBpY2ggS2luc2tpIGd1dCB2ZXJzdGVoZW4gaW4gc2VpbmVyIGdydW5kc3R6bGljaGVuIEFibmVpZ3VuZyBiZXN0aW1tdGVyIFNpdHVhdGlvbmVuLCB6dW0gQmVpc3BpZWwgZGllc2VtIHNjaHJlY2tsaWNoZW4gSW50ZXJ2aWV3IHZvbiBHb3R0c2NoYWxrLiAKQ2FsaWxhbGEzNTY3OCAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClNlY29uZCBhbHRlcm5hdGl2ZTogU2VsbCB0aGUgY290dGFnZSBmb3IgJDYxNyw1MDAgYWZ0ZXIgNSBwZXIgY2VudCBjb3N0cywgcGF5IG9mZiB0aGUgJDE1MCwwMDAgbW9ydGdhZ2UsIGFuZCBpbnZlc3QgdGhlIGRpZmZlcmVuY2UsICQ0NjcsNTAwIGZvciAzNSB5ZWFycyB0byBleGhhdXN0IGFsbCBpbmNvbWUgYW5kIGNhcGl0YWwgZm9yIGEgeWllbGQgb2YgJDIxLDEyMyBwZXIgeWVhci4gQWRkZWQgdG8gb3RoZXIgaW5jb21lIHNvdXJjZXMgaW5jbHVkaW5nIEZlbGljaXR5IGVzc2VudGlhbGx5IHRlbXBvcmFyeSAkMzIsNzAwIHNhbGFyeSBhbmQgRUkgYW5kICQxNyw4MDAgZnJvbSB0aGUgUlJTUCBwYWlkIG91dCBmb3IgMzUgeWVhcnMgYW5kIEZyZWQgJDYsNjAwIENQUCBhdCA2MCwgd291bGQgZ2l2ZSBhIHRvdGFsIG9mICQ3OCwyMjMgYmVmb3JlIHRheC4gU3BsaXQgYW5kIHRheGVkIGF0IGFuIGF2ZXJhZ2UgcmF0ZSBvZiAxNSBwZXIgY2VudCwgdGhleSB3b3VsZCBoYXZlICQ1LDU0MCB0byBzcGVuZCBwZXIgbW9udGguIFRoYXQgbm90IGVub3VnaCB0byBzdXBwb3J0IGN1cnJlbnQgc3BlbmRpbmcgbWludXMgJDk1MCBwZXIgbW9udGggZm9yIHRoZSBjb3R0YWdlIG1vcnRnYWdlLCBuZXQgJDYsMzEwIHBlciBtb250aC4gVGhpcyBwbGFuIHdvbiB3b3JrLCBFaW5hcnNvbiBzYXlzLiBUaGV5IHNob3VsZCB0aGVyZWZvcmUgc2VsbCB0aGUgaG91c2UgYW5kIGtlZXAgdGhlIGNvdHRhZ2UuClNjaWVudGlzdHMgYmVsaWV2ZSB0aGF0IHJlcGVhdGVkIHN0b3JtIHN1cmdlcyBvbiB0aGUgd2VzdCBjb2FzdHMgb2YgQnJpdGFpbiBhbmQgRnJhbmNlIG1heSBoYXZlIGJlZW4gcmVzcG9uc2libGUgZm9yIHRoZSBtYXNzIGRlYXRocywgYnkgbWFraW5nIGl0IGRpZmZpY3VsdCBmb3IgdGhlIHNlYWJpcmRzIHRvIGZvcmFnZSBpbiB0aGUgcm91Z2ggc2Vhcy4gVGhlIFJveWFsIFNvY2lldHkgZm9yIFByb3RlY3Rpb24gb2YgQmlyZHMgY29tbWVudGVkIHRoYXQgZm9yIHRoZSBwdWZmaW5zLCBmZWVkaW5nIGluIHN0b3JtIHRvc3NlZCBzZWFzIG11c3QgYmUgYWtpbiB0byBjYXRjaGluZyBmaXNoIGluc2lkZSBhIHNwaW5uaW5nIHdhc2hpbmcgbWFjaGluZS4gVGhhdCdzIHdoeSBtb3N0IG9mIHRoZSBiaXJkcyBmb3VuZCB3ZXJlIHVuZGVyd2VpZ2h0IGFuZCBhcHBlYXJlZCB0byBoYXZlIHN0YXJ2ZWQgdG8gZGVhdGguCkt3d3hpcyAgNSBwb2ludHMgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ28KQnV0IHdlIG5ldmVyIHNwb2tlLi4gCiJUaGVyZSBpcyBhIGNsb3NlIHRvIDEwMCBwZXIgY2VudCBjaGFuY2Ugc29tZW9uZSB3aWxsIHdpbiBpbiB0aGUgbmV4dCBmZXcgd2Vla3MuIEl0J3MgcXVpdGUgaGlnaCwiIEd1cHRhIHByZWRpY3RzLgpGb3gncyBkYWZmeSBuZXcgc2Vuc2F0aW9uIGxlYWRzIGEgcGFjayBvZiBvdGhlciByZWNlbnQgdW5zY3JpcHRlZCBlZmZvcnRzIHRoYXQgaGF2ZSBjYXVnaHQgdGhlIGZhbmN5IG9mIHRob3NlIHdobyBzdGlsbCB3YXRjaCBhZCBzdXBwb3J0ZWQgVFYuIEFsc28gZWFybmluZyBpdHMgcGxhY2UgYW1vbmcgdGhlIHNlYXNvbidzIGhpZ2hlc3QgcmF0ZWQgbmV3YmllcyBhcmUgTkJDJ3Mgc3Bpbm9mZiBvZiBpdHMgc3VtbWVyIGZsYWdzaGlwLCAiQW1lcmljYSdzIEdvdCBUYWxlbnQ6IFRoZSBDaGFtcGlvbnMsIiB3aGljaCBhdmVyYWdlZCAxMC4xIG1pbGxpb24gdmlld2VycyBhbmQgYSAxLjcgcmF0aW5nIGFzIGEgZmlsbCBpbiBmb3IgdGhlIHNlZW1pbmdseSBkZWF0aGxlc3MgIlRoZSBWb2ljZSwiIGFuZCB0aGUgUGVhY29jaydzIER3YXluZSBKb2huc29uIGhvc3RlZCAiVGhlIFRpdGFuIEdhbWVzIiAoNS4xNyBtaWxsaW9uIHZpZXdlcnMsIDEuNCByYXRpbmcpLi4gClN1cmUsIHlvdSBtaWdodCBub3QgYmUgaW50ZXJlc3RlZCBpbiBhbGwgdGhlIHRoaW5ncyB0aGF0IHNoZSBpcywgYnV0IGtub3dpbmcgdGhhdCB5b3Ugd2lsbCB0YWtlIHRoZSB0aW1lIHRvIGxlYXJuIG1vcmUgYWJvdXQgd2hvIHNoZSBpcyB3aWxsIG1lYW4gdGhlIHdvcmxkIHRvIGhlci4gVGhlIG1vbWVudCBzaGUga25vd3MgdGhhdCB5b3UgYXJlIHJlYWxseSBsaXN0ZW5pbmcgdG8gaGVyIHNoZSB3aWxsIHNlZSB5b3UgaW4gYW4gZW50aXJlbHkgZGlmZmVyZW50IGxpZ2h0LiBUaGlzIHdpbGwgbWFrZSBoZXIgdGhpbmsgYW5kIHRhbGsgYWJvdXQgeW91IG1vcmUgdGhhbiBzaGUgZXZlciBkaWQgYmVmb3JlLgpBc2RmZ2hqa2w3MTAgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClRoYXQgcGFydGx5IGZlZWRzIGludG8gdGhlICJsYXllcmVkIiB0aGluZy4gQmFuZ2tvayBpc24gYSBzdXBlcmZpY2lhbCBjaXR5LCBidXQgaW5zdGVhZCBhIGNpdHkgd2l0aCBodW5kcmVkcyBvZiB5ZWFycyBvZiBoaXN0b3J5IGFuZCBkZXZlbG9wbWVudCwgd2l0aCBtdWNoIG9mIGl0IHN0aWxsIHRoZXJlLCBsYXllcmVkIG9uIHRvcCBvZiB0aGUgcHJldmlvdXMsIGdvaW5nIGJhY2sgYXMgZmFyIGFzIHRoZSAxOHRoIGNlbnR1cnksIGlmIHlvdSBsb29rIGRlZXAgZW5vdWdoLiBCdXQgQmFuZ2tvayBpcyBhbHNvIGxheWVyZWQgYXQgdGhlIHN0cmVldCBsZXZlbCwgaW4gdGhhdCBpbiBvbmUgc3RyZWV0IHlvdSB3aWxsIHNlZSBhIGJpZyBtb2Rlcm4gbWFsbCwgYnV0IGlmIHlvdSBsb29rIGNsb3NlciBhbmQgYXJvdW5kIHlvdSBzZWUgYSBtaXh0dXJlIG9mIGFsbCBzb3J0cyBvZiBvdGhlciBraW5kcyBvZiBzdHJlZXQgbGlmZSBvZiBhbGwgbGV2ZWxzIG9mIHNvY2lldHkgYW5kIGhpc3RvcnkuCllvdSBzaG91bGQgZW5zdXJlIHRoYXQgeW91IGhhdmUgaGVhdnkgZG9vcnMgdGhhdCBoYXZlIHNlY3VyZSBsb2Nrcy4gCkkgYW0gcGVyZmVjdGx5IGNvbnRlbnQgd2l0aCB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGluZ3MgSSBhbSBub3QgY29tcGxhaW5pbmcgYXQgYWxsLCBpZiB0aGUgbWV0YSBjaGFuZ2VzIHNvIGJlIGl0IEkgYWRhcHQgSSBkb250IFFRIGxpa2UgeW91LiBBbmQgdW5saWtlIHlvdSB3aG8gaXMgYmxpbmQgYWYgZnJvbSBhbGwgdGhlIHBvc2l0aXZlIHZpYmVzIHRoYXQgYW55IHNvcnQgb2YgbmVnYXRpdmUgY29tbWVudCBkZXNlcnZlcyBhbiBmIHUsIEkgZ2l2ZSAwIHNodHMgd2hhdCB1IHRoaW5rLiBPaCB3ZXJlIGRlZmluaXRlbHkgZG9uZSBoZXJlLCBub3cgZ28gYm90aGVyIHNvbWVvbmUgZWxzZSBib3kuIERvbnQgYm90aGVyIHJlcGx5aW5nIEkgd29udCBzZWUgaXQuCk9rYXlicmFoICAzIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvClRoZSBsb2NhbCBnb3Z0IHNoZSB3b3JrcyBmb3IgInB1cmNoYXNlZCIgYW4gb2xkIGluZHVzdHJpYWwgZXN0YXRlIGFuZCBzb21lIGxhbmQgbmV4dCB0byBpdCwgdGFydGVkIGl0IHVwIGFuZCBzbyBmYXIgYXMgSSBjYW4gdGVsbCwgcHV0IGEgbGF0ZSAyMHMgUmFpbnkgKGluIGFsbW9zdCBldmVyeSBzZW5zZSBvZiB0aGUgc3RlcmVvdHlwZSkgaW4gY2hhcmdlIG9mIHByb21vdGluZyBpdCEKUGFydGljaXBhdGUgaW4gY29vcGVyYXRpdmUgZWR1Y2F0aW9uIGlmIHRoZSB0cmFpbmluZyBwcm9ncmFtIHlvdSBjaG9vc2Ugb2ZmZXJzIGl0LiBUaGlzIHR5cGUgb2YgcHJvZ3JhbSBnaXZlcyB5b3UgdGhlIGNoYW5jZSB0byBwcmFjdGljZSB0cmFuc2NyaWJpbmcgaW4gYSBjb3VydCBlbnZpcm9ubWVudCBvciBpbiBhIGxlZ2FsIG9mZmljZS4gSWYgeW91ciBwcm9ncmFtIGRvZXMgbm90IHByb3ZpZGUgY29vcGVyYXRpdmUgZWR1Y2F0aW9uIG9wcG9ydHVuaXRpZXMsIHlvdSBjYW4gc3RpbGwgZ2V0IHRoaXMgdHlwZSBvZiB0cmFpbmluZy4gTWFueSBqb2JzIG9mZmVyIHNvbWUgb24gdGhlIGpvYiB0cmFpbmluZyB0byBuZXcgaGlyZXMuIFR5cGluZyBzcGVlZCBjb3VudHMsIGFuZCB5b3UgbmVlZCBhdCBsZWFzdCBhIDIyNSB3b3JkIGEgbWludXRlIHR5cGluZyBzcGVlZCBpbiBvcmRlciB0byBwYXNzLiBCb3RoIGNlcnRpZmljYXRpb25zIHJlcXVpcmUgb25nb2luZyBlZHVjYXRpb24gY3JlZGl0cyB0byByZXRhaW4gb3IgcmVuZXcgY2VydGlmaWNhdGVzLgpJbiB0ZXJtcyBvZiBzaGFkZXJzLCBkaXNtYW50bGluZyB0aGVtIGdpdmVzIHlvdSBhIHBheW91dCAgbGVnZW5kYXJ5IHNoYXJkcywgYnJpZ2h0IGR1c3QsIGdsaW1tZXIuIElmIHlvdSBkaXNtYW50bGVkIGEgc3RhY2sgb2YgOTk5LCBvciBpZiB5b3UgYW5kIGEgZmV3IG90aGVyIHBlb3BsZSBpbiB0aGUgdG93ZXIgZGlkIGF0IHRoZSBzYW1lIHRpbWUsIHRoZXJlIHdvdWxkIGJlIHBvdGVudGlhbCBmb3IgaXNzdWVzIHRvIGFyaXNlLgpBZGQgdGhlIGJ1dHRlciBhbmQgdG9zcyBxdWlja2x5IChhbmQgY2FyZWZ1bGx5ISkgd2l0aCB5b3VyIGZpbmdlcnMgdG8gY29hdCBlYWNoIGN1YmUgb2YgYnV0dGVyIHdpdGggdGhlIGZsb3VyLiBQdWxzZSAxMiB0byAxNSB0aW1lcywgb3IgdW50aWwgdGhlIGJ1dHRlciBpcyB0aGUgc2l6ZSBvZiBwZWFzLi4gCk1lcmNlbmFyaWVzIGFuZCBWaWtpbmdzIHdlcmUgdXNlZCB0byB0cnkgYW5kIHByb3RlY3QgdGhlIEVuZ2xpc2gga2luZ2RvbTsgdGhlc2UgaW5jbHVkZWQgVGhvcmtlbGwgaW4gMTAxMiwgYW5kIE9sYWYgVHJ5Z2d2YXNvbiwgd2hvIHByb21pc2VkIHRvIGRlZmVuZCBFbmdsYW5kIGZyb20gZnVydGhlciByYWlkcyBhZnRlciBoaXMgY29udmVyc2lvbiB0byBDaHJpc3RpYW5pdHkgaW4gOTk0LiAKU2FwcHlkYXJrIHUKRmFjZWJvb2sgaXMgYSBnbG9iYWwgbmV0d29yayBmb3JtYXRpb24gdGhyb3VnaCBpbmZvcm1hdGlvbiBlZHVjYXRpb24gYW5kIGFjY3VtdWxhdGlvbiBvZiBhIGxvdCBvZiB0ZWNobm9sb2dpZXMsIGEgbG90IG9mIHBlb3BsZSBoYXZlIGJlZW4gY29tcGxhaW5pbmcgYWJvdXQgb2Z0ZW4gZWFzeSB0byBnZXQgbG9zdCBpbiB0aGUgbmV0d29yaywgYW5kIHRoaXMgcmUgZGVzaWduIHdpbGwgYmUgb25seSB3b3JzZW4gdGhpcyBzaXR1YXRpb24uIApEYSBnaWJ0IGVzIG5pY2h0cyBzY2huIHp1cmVkZW4gdW5kIGVzIHdpcmQgYXVjaCBuaWNodCBkYXZvbiBhYmxlbmtlbiB3ZXIgZGllIFNjaHVsZCBhbiBkZXIgTWlzZXJlIGluIGRpZXNlbSBMYW5kIHRyZ3QuIApKdXN0IGZvciBmdW4gSSB0cmllZCB0byBnbyBiYWNrIGFuZCBmaW5kIHBpY3R1cmVzIGZvciBjb21wYXJpc29uLiAKVGhhdHMgaWYgdGhleSB0YWtlIGl0IG91dCBvZiB5b3VyIGJvbmVzLCBpZiB5b3UgZG8gdGhlIFBlcmlwaGVyYWwgc3RlbSBjZWxsIHRyYW5zcGxhbnRhdGlvbiAodGhlIG9uZSBJIGRpZCkgeW91IHJlY2VpdmUgYSBzZXJpZXMgb2YgaW5qZWN0aW9ucyBmaWxncmFzdGltIChpdCB3YXMgNiBmb3IgbWUgIG9uZSBlYWNoIGRheSkgdG8gaW5jcmVhc2UgdGhlIHByb2R1Y3Rpb24gb2YgdGhlICJnb29kIHN0dWZmIiB0aGV5IHRha2Ugb3V0IGZvciB0aGUgZG9uYXRpb24uIApUaGUgcGVyc29uIGdpdmluZyB0aGUgaGFwcHkgZW5kaW5nIHdvdWxkIG5vdCBsaWtlbHkgZ2V0IGluIHRyb3VibGUuIApPYnZpb3VzbHkgaWYgdGhlIGd1eSBpcyBhIHN0YXRpb24gdGhpcyB3b24ndCB3b3JrLiBJIGFsc28gZG9uJ3QgbG92ZSBkb2luZyBpdCBhcyBtdWNoIGluIHRoaXMgc3BvdCBiZWNhdXNlIHRoZSBib2FyZCBpcyBLIGhpZ2guIApJdCBhbHNvIGFsbG93ZWQgc29tZSBwbGF5ZXJzIHRvIGJ1eSBpbiBmb3IgbW9yZSB0aGFuIDEwMCBiaWcgYmxpbmRzLiAKQmVmb3JlIEkgZm91bmQgb3V0IEkgd2FudGVkIHRvIGJlIGEgdHJhdW1hIHNwZWNpYWxpc3Qgb3Igc29tZXRoaW5nIHNpbWlsYXI7IG5vdyBJIHdhbnQgdG8gc2NyYXBlIG15c2VsZiBvbiB0byBiZSBhIHBhdGhvbG9naXN0IG9yIHNvbWV0aGluZyBzaW1pbGFyIGp1c3Qgc28gSSBkb24gaGF2ZSB0byBkZWFsIHdpdGggcGVvcGxlIGFueW1vcmUuIApIb3BlZnVsbHkgeW91IGhhdmUgcGlja2VkIHVwIGEgaGFuZCBvciB0d28gYW5kIGFkZGVkIHRvIHlvdXIgc3RhY2sgaW4gdGhlIGVhcmx5IHN0YWdlcywgYnV0IGlmIHlvdSBoYXZlIGJlZW4gcGxheWluZyB0aWdodCAoYW5kIGNvcnJlY3RseSkgeW91IHVzdWFsbHkgd2lsbCBoYXZlIHNvbWV3aGVyZSBuZWFyIHlvdXIgc3RhcnRpbmcgc3RhY2suIApOb3Qgc3VyZSBob3cgaXQgd291bGQgcmVhbGx5IGluY2VudGl2ZSBtaWRyYW5nZSwgdW5sZXNzIHRoZXJlIGlzIGFueSBldmlkZW5jZSB0aGF0IHRoZSBiYWxsIHJhdHRsZXMgYXJvdW5kIG1vcmUgZm9yIDNzLiAKTm90IGxvbmcgaW50byB0aGUgY29udmVyc2F0aW9uLCBJIG5vdGljZWQgdGhhdCB0aGUgb3RoZXIgc2VydmVyIHdhcyBsb29raW5nIGF0IG1lIGxpa2UgSSBzYWlkIHNvbWV0aGluZyBmaWx0aHksIHR1cm5zIG91dCB3aGljaCBtZWFucyAiaG90IiB3aGVuIHJlZmVycmluZyB0byBhbiBvYmplY3QsIGNvbGxvcXVpYWxseSBtZWFucyAiaG9ybnkiIHdoZW4geW91IHRhbGtpbmcgYWJvdXQgYSBwZXJzb24sIHNvIGluc3RlYWQgb2YgY29tbWVudGluZyBvbiBpdCBiZWluZyBhIGdvb2QgZGF5IHRvIGJlIGluc2lkZSBpbiB0aGUgYWlyIGNvbmRpdGlvbmluZywgSSBzYWlkIEkgd2FzIHJlYWxseSBob3JueS4gCk1vc3QgcGVvcGxlIHdpbGwgdGhpbmsgTWFubnkgaXMgbm90aGluZyBidXQgYSBwYXduIGluIGFsbCBvZiB0aGlzLCBidXQgZG9uJ3QgbGV0IE1hbm55J3Mgc2lsZW5jZSBvciBsYWNrIG9mIHB1YmxpYyBkaXNjbG9zdXJlIGFib3V0IGhpcyB0cnVlIGZlZWxpbmdzIGZvb2wgeW91LiAKVGhhdCBub3QgYWN0dWFsbHkgaXQuIApUaGUgb3RoZXIgY29tbWVudCBoYXMgbW9zdCBvZiB3aGF0IHlvdSB3cm90ZSBjb3ZlcmVkLCBidXQgZm9yIHRoZSBvdGhlciBiaXQ6IFlvdSBjYW4gdGFrZSBOeVF1aWwsIGhvbmV5LiBJdCdzIHVubGlrZWx5IHRvIG1ha2UgeW91ciBzdG9tYWNoIHdvcnNlLiBKdXN0IGJlIHN1cmUgdG8gdGFrZSBhIHByb3BlciBkb3NlIGFuZCBub3QgbW9yZSwgYW5kIG9ubHkgdGFrZSBpdCBvbmNlIGJlZm9yZSBiZWQuIEFsc28sIGl0J3Mgb2sgdG8gbGV0IHRoZSBzdG9tYWNoIGJ1ZyByaWRlIGEgY291cGxlIG9mIGRheXMsIGJ1dCBpZiBpdCBsYXN0cyBtb3JlIG9yIGdldHMgdmVyeSBiYWQgcGxlYXNlIGRvIHNlZSBhIGRvY3Rvci4gSSBrbm93IHRoYXQgeW91IGhhdmUgYSBjb21wbGljYXRlZCBmZWVsaW5nIHRvd2FyZCB0aGVtIGFmdGVyIHdoYXQgaGFwcGVuZWQsIGJ1dCB0aGVyZSdzIG5vdGhpbmcgYSBtb3RoZXIgd2FudHMgbW9yZSB0aGFuIGdvb2QgY2FyZSBmb3IgaGVyIHNvbi4gQW5kIHBsZWFzZSBiZSBzdXJlIHRvIGRyaW5rIGxvdHMgb2YgY2xlYXIgbGlxdWlkcyB1bnRpbCB5b3UncmUgd2VsbC4KOS4gRHJvcCB5b3VyIHBpdGNoLiBVbmxlc3MgeW91IGFyZSBhIHNtb2tlciBvciBoYXZlIGFuIHVudXN1YWxseSBsb3cgdm9pY2UsIHlvdSBhcmUgcHJvYmFibHkgc3BlYWtpbmcgdG9vIGhpZ2guIFVzaW5nIGxvd2VyIHRvbmVzIGNvbW1hbmRzIHlvdXIgYXVkaWVuY2UncyBhdHRlbnRpb24gaW5zdGFudGx5LiBIaWdoZXIgdm9pY2VzIG5vdCBvbmx5IHNvdW5kIHdlYWtlciB0aGFuIGxvd2VyIG9uZXMsIGJ1dCBhIGhpZ2hlciB2b2ljZSBpcyBleHRyZW1lbHkgZ3JhdGluZyBhbmQgdGlyZXNvbWUgb24gdGhlIGVhci4gSHVtbWluZyBpbiBsb3dlciB0b25lcyBvbiB5b3VyIHdheSB0byB3b3JrIGlzIGEgZ3JlYXQgd2F5IHRvIGxvd2VyIHlvdXIgcGl0Y2guIE15IGZhdm9yaXRlIGV4ZXJjaXNlIGlzIGV4aGFsaW5nIG9uIGEgInoiIHdoaWNoIGhlbHBzIGVzdGFibGlzaCBzdXBwb3J0IGZvciB5b3VyIHZvaWNlLgpUaGUgQTYgc3VpdGVkLCAzMiw3JSBjaGFuY2Ugb2Ygd2lubmluZyBhZ2FpbnN0IHBvY2tldCA2J3MuIENvbmNsdXNpb246IFBvY2tldCA2J3MgYXJlIG1hdGhlbWF0aWNhbGx5IHNwZWFraW5nIGFsd2F5cyBhIGJldHRlciBzdGFydGluZyBoYW5kLiAoRnVsbCBBbnN3ZXIpLiAKMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29Ob3QgdGhyb3VnaCB3YWl2ZXJzLCBidXQgb24gdGhlIG9wZW4gbWFya2V0IEkgd291bGQgYmUgd2lsbGluZyB0byB0YWtlIHNvbWUgZXhwbG9yYXRvcnkgbW92ZXMgb24gYSBmZXcgZXggMXN0IHJvdW5kIHdpZGUgcmVjZWl2ZXJzIERlVmFudGUgUGFya2VyLCBLZXZpbiBXaGl0ZSwgRG9yc2V0dCwgQ29yZXkgQ29sZW1hbi4gCkhlIHdhcyBWaWNlIFByZXNpZGVudCBNb25kYWxlJ3MgY291bnNlbCBhbmQgZGVwdXR5IGNoaWVmIG9mIHN0YWZmLCBhbmQgbmF0aW9uYWwgY29vcmRpbmF0b3IgZm9yIGhpcyBwcmVzaWRlbnRpYWwgcnVuLiAKQWx0aG91Z2ggaGUgZG9lc24ndCBoYXZlIG1lZGljYWwgcHJvb2YsIGhlIGF0dHJpYnV0ZXMgaXQgdG8gYSBjb21iaW5hdGlvbiBvZiBlbmRvcnBoaW5zIGFuZCByZWxheGF0aW9uLiAKQnV0IHBhc3QgdGhhdCwgcGVvcGxlIHNheSBUcnVtcCBpcyB0aGUgbW9zdCBoYXRlZCBwcmVzaWRlbnQgaW4gaGlzdG9yeS4gSSBzdXJlIHdlIGhhdmUgYW5vdGhlciAibW9zdCBoYXRlZCBwcmVzaWRlbnQgaW4gaGlzdG9yeSIuIApOb3Rlcy4gCk9uZSBvZiB0aGUgd29tZW4gaW52b2x2ZWQgaW4gdGhlIDIwMTAgc2hvb3Rpbmcgb2YgYSBtYW4gZHVyaW5nIGEgdG9wbGVzcyBtYXNzYWdlIGluIEFsbGVudG93biB3YXMgYXJyZXN0ZWQgbGFzdCBtb250aCBvbiBwcm9zdGl0dXRpb24gY2hhcmdlcywgYWNjb3JkaW5nIHRvIGNvdXJ0IHJlY29yZHMuIFN1bnNoaW5lIEEuIERhdWJlcnQsIDIzLCBvZiBBbGxlbnRvd24gYWxsZWdlZGx5IGFycmFuZ2VkIGEgc2V4dWFsIHRyeXN0IHdpdGggYW4gdW5kZXJjb3ZlciBzdGF0ZSB0cm9vcGVyIG9uIE1hcmNoIDE5LiBUaGUgdHJvb3BlciBjb250YWN0ZWQgRGF1YmVydCBvbiBhbiBvbmxpbmUgY2xhc3NpZmllZCBhZCBzaXRlIGFuZCB0aGV5IGFycmFuZ2VkIHRvIG1lZXQgYXQgdGhlIFN1cGVyIDggTW90ZWwgb24gQWlycG9ydCBSb2FkIGluIEFsbGVudG93biwgY291cnQgcmVjb3JkcyBzYXkuIFRoZSB0cm9vcGVyIHdhcyB0b2xkIHRvIGJyaW5nIGNvbmRvbXMgdG8gdGhlIG1lZXRpbmcsIGFjY29yZGluZyB0byBjb3VydCByZWNvcmRzLgpPdmVyIHRoZSBuZXh0IHR3ZW50eSB5ZWFycywgaW50byB0aGUgMTk0MCB0aGUgaW50ZXJlc3Qgc2VlbXMgbGVzcyBpbiBjb21tdW5pY2F0aW9uIHRoYW4gd2l0aCB0aGUgdmlzaXRpbmcgdGhlIHBsYWNlLi4gCkFuZ2xlIGlzIGV2ZXJ5dGhpbmcuIElmIHlvdXIgYW5nbGUgY2hhbmdlcyB5b3UgZ2V0IGJhZCByZXN1bHRzLiBUaGUgbW9zdCBzaW1wbGUgYW5kIGFjY2Vzc2libGUgdGhpbmcgdG8gdXNlIGlzIDIgcGVubmllcy4gUHV0IHRoZW0gb24gdGhlIGVkZ2Ugb2YgeW91ciBzdG9uZSBhbmQgcmVzdCB0aGUgc3BpbmUgb2YgdGhlIGtuaWZlIG9uIHRoZW0uIFRoaXMgc2hvdWxkIGdldCB5b3UgaW4gdGhlIGFyZWEgb2YgMTUgMjIgZGVncmVlcy4gQ2hhbmdlIHNpZGVzIHdoZW4geW91IGZsaXAgdGhlIGtuaWZlIG92ZXIuIEl0IHRha2VzIHRpbWUgdG8gZ2V0IHJlc3VsdHMuIElmIHlvdSBrZWVwIHVwIG9uIGl0IHlvdSBjYW4gZ2V0IHRoZW0gZmFzdGVyLiBJIHVzZWQgdG8gc2hhcnBlbiBteSBrbml2ZXMgZGFpbHkgd2l0aCBoZWF2eSB1c2UgKGF0IHdvcmspLiBOb3cgb25jZSBhIHdlZWsgb24gMTAwMCBncml0IGtlZXBzIHRoZW0gdGlwIHRvcC4gS2VlcCBwcmFjdGljaW5nLiBPbmx5IHdheSB0byBnZXQgaXQuIEdvb2QgbHVjayEhIQpXaG8ga25vd3MgaG93IHRoYXQgZ2FtZSBwbGF5cyBvdXQgaWYgaGUgbWFrZXMgdGhvc2Uga2lja3MuIEtDIGNvbWluZyBvdXQgb2YgdGhlIGhhbGYgdXAgMjQgMTAgaW5zdGVhZCBvZiAyNCA3IHByb2JhYmx5IGNoYW5nZXMgdGhlaXIgYXBwcm9hY2guIApUaGVyZSBhcmUgYmxhY2sgY29sb3JlZCBSZWFsIENsYXkgUG9rZXIgQ2hpcHMgYXMgd2VsbC4gVGhlc2UgYXJlIGRlZmluaXRlbHkgbW9zdGx5IGZvdW5kIGluIGdhbWVzIHRoYXQgaGF2ZSBoaWdoZXIgYmV0cyBvY2N1cnJpbmcuIApKb2luIHRoZSAzMlJlZCBwbGF5ZXIgY29tbXVuaXR5IHRvZGF5IGFuZCBiZWNvbWUgcGFydCBvZiB0aGUgd2lubmluZyBsb3JlIGluIGp1c3QgMyBzaW1wbGUgc2lnbiB1cCBzdGVwcy4gT25jZSBwYXJ0IG9mIG91ciBwbGF5ZXIgY29tbXVuaXR5LCB5b3UnbGwgYmUgYWJsZSB0byBlbmpveSB0aGUgYWxsdXJlIG9mIHRoZSBSZWQgUnVieSBMb3lhbHR5IENsdWIsIHRoZSBwb3NzaWJpbGl0eSBvZiBiZWNvbWluZyBhIG1lbWJlciBvZiB0aGUgZXhjbHVzaXZlIENsdWIgUm91Z2UgYW5kIGhhdmUgZXZlcnkgb3Bwb3J0dW5pdHkgdG8gcGFydGFrZSBpbiBhbiBleGNlbGxlbnQgY2FzaW5vIGV4cGVyaWVuY2UgdW5yaXZhbGxlZCBieSBtb3N0LkNhc2lubyBCb251c1dlbGNvbWUgQm9udXMgICAzMiBmb3IgZXZlcnkgMTBUaGVyZSBpcyBub3RoaW5nIG1vcmUgZml0dGluZyB0aGFuIG9mZmVyaW5nIGFsbCBvdXIgcGxheWVycyB0aGUgcm95YWwgdHJlYXRtZW50LCBnaXZpbmcgdGhlbSBhbGwgYWNjZXNzIHRvIHRoZSBpbW1lbnNlIHF1YWxpdHkgYm9udXNlcywgcHJvbW90aW9ucyBhbmQgc3RlbGxhciBkZWFscyB0aGF0IHdlIGhhdmUgZGVzaWduZWQgZXhjbHVzaXZlbHkgZm9yIHRoZW0uIApDdXN0b20gVGF0dG9vIERlc2lnbiBsZXRzIGNvbnN1bWVycyBjcmVhdGUgYSBvbmUgb2YgYSBraW5kIGRlc2lnbiB3aXRoIG9uZSBvZiBjdXJyZW50bHkgMjAwIGZyZWVsYW5jZSBwcm9mZXNzaW9uYWwgZ3JhcGhpYyBhcnRpc3RzIGFuZCBkZXNpZ25lcnMuIApEZXIgU3R1cm0sIGRlcmVyIGRhcyBnYXIgTGNoZXJsaWNoZSBoaW5mb3J0aCB3ZWhldCwgd2FzIGRpciBhbHMgZGV5biBMZWJlbiB6dSBiZXpleWNobmVuIGdlZmxsaWcgaXN0LiAKRWlnaHRlZW4hIEFtYXppbmcuIEkgZGlkbiBrbm93IHdoZW4gSSBzZWxlY3RlZCBoZXIsIGJ1dCB3aGF0IGEgZ3JlYXQgY2hvaWNlIGZvciB0aGF0IHJlYXNvbiBhbG9uZSEgV2hpY2ggYmVncyB0aGUgcXVlc3Rpb24gd2h5IHRob3NlIHR3byBwbHVtcCBnaXJscyBvbiB0aGUgc2lkZWxpbmUgY29zdCBtb3JlLCBzaW5jZSB0aGV5IHdlcmVuIGV2ZW4gYXR0cmFjdGl2ZSBhbmQgY291bGRuIGhhdmUgYmVlbiB5b3VuZ2VyIHRoYW4gdGhlIGdpcmwgSSBwaWNrZWQgZnJvbSB0aGUgbWFpbiBzZWxlY3Rpb24uIEFzIGEgbWFuIGluIG15IDMwcywgSSB3YXNuIHN1cmUgaWYgSSBzaG91bGQgZmVlbCBndWlsdHkgaGF2aW5nIHNleCB3aXRoIGFuIDE4IHllYXIgb2xkLCBidXQgaGV5LCBzdXJlbHkgdGhlIHdob2xlIHBvaW50IG9mIHBheWluZyBmb3Igc2V4IGlzIHRvIGRvIGl0IHdpdGggd29tZW4gd2Ugd291bGRuIG90aGVyd2lzZSBoYXZlIGEgY2hhbmNlIHdpdGgsIG9yIHRvIGZ1bGZpbGwgZmFudGFzaWVzIGFuZCB3aG8gaGFzbiBmYW50YXNpc2VkIGFib3V0IDE4IHllYXIgb2xkIEFzaWFuIGdpcmxzITEwLzEwCkxpa2V3aXNlIHdlIHNob3VsZCBiZSBnb29kIHN0ZXdhcmRzIG9mIG91ciBtb25leSBhbmQgc2VlayBvdXQgZ29vZCBjb21wYW5pZXMgYWxiZWl0IGEgbGl0dGxlIG1vcmUgZXhwZW5zaXZlLCBhIGxpdHRsZSBsZXNzIGNvbnZlbmllbnQgYnV0IGEgd2hvbGUgbG90IGJldHRlciBmb3Igb3VyIHdvcmxkIGFuZCBvdXIgd2F5IG9mIGxpdmluZy4gSSBndWVzcyBpdCByZWFsbHkgYm9pbHMgZG93biB0byB1cyBhcyBpbmRpdmlkdWFscyBmb2N1c2VkIG9uIG91ciBtb25leSBhbmQgbm90IHRoZSB3ZWxsIGJlaW5nIG9mIHRoZSBwbGFuZXQgb3Igb3RoZXJzLiBXaGF0IHdvdWxkIHJlYWxseSBiZSBjb29sIGlzIGlmIHdlIGNvdWxkIGdldCAzMDAgbWlsbGlvbiBwZW9wbGUgd29ybGQgd2lkZSB3aWxsaW5nIHRvIGJ5IG9uZSBzaGFyZSBvZiBzdG9jayBhbmQgdGhlbiB0dXJuIGFyb3VuZCBhbmQgc2VsbCBpdCBmb3IgMTAuMDAgbGVzcy4gCk9uZSBvZiB0aGUgd29tZW4gd2FzIGFycmVzdGVkIG9uIGEgd2FycmFudCBmcm9tIGFub3RoZXIgY291bnR5LCBEZVNwYWluIHNhaWQsIGFsdGhvdWdoIGhlIGRpZG4ndCBoYXZlIGFueSBmdXJ0aGVyIGRldGFpbHMuIEFza2VkIHdoYXQgaGFwcGVuZWQgdG8gdGhlIG1hbiBhbmQgd29tYW4sIGhlIHNhaWQgb25seSwgIlRoZSBjYXNlIGlzIG9uZ29pbmcgYXMgd2Ugc3BlYWsuIEl0J3MgYSB2ZXJ5IGZsdWlkIHNpdHVhdGlvbi4iCkV2ZW50dWFsbHksIGV2ZXJ5b25lIGhhcyBoYWQgYSB0dXJuIGFuZCB0aGUgZmxvb3IgaXMgY292ZXJlZCBpbiBzaGl0LiBUaGUgbW90aGVyIHRoZW4gdGFrZXMgYW4gdW51c2VkIGp1bWJvIHRhbXBvbiBhbmQgc29wcyB1cCB0aGUgbWVzcy4gU2hlIHRoZW4gcG9wcyBvdXQgaGVyIGxlZnQgZXllYmFsbCBmcm9tIHRoZSBzb2NrZXQgYW5kIGluc2VydHMgdGhlIHRhbXBvbi4gV2hpbGUgdGhlIGluZmVjdGlvbiBzZXRzIGluLCB0aGUgZW5zdWluZyBmbGllcyBqb2luIGluIG9uIHRoZSBhY3QuIFRoZSBjaGlsZHJlbiBmaWdodCBvdmVyIHR1Z2dpbmcgdGhlIHRhbXBvbiBvdXQgb2YgdGhlaXIgTW90aGVyIGV5ZSB3aGlsZSB0aGUgRmF0aGVyIHBvcHMgdGhlIG90ZWhyIGV5ZSBvdXQgb2YgdGhlIGV5ZSBzb2NrZXQgYW5kIGZ1Y2tzIGl0LiBNZWFud2hpbGUsIHRoZSBNb3RoZXIgZmluZ2VyIGZ1Y2tzIHRoZSBraWRzIGFzc2VzIHdoaWxlIHRoZSBkb2cgYmFya3MgYWxvbmcgdG8gTW90aGVyIHNpbmdpbmcsICJHT2QgYmxlc3MgQW1lcmljYSIKSSBoZWFyZCBvZiB5b3VuZ2VyIGNhdHMgYmVpbmcgdG9vIHJlc2lzdGFudCBmb3IgbGVhc2ggdHJhaW5pbmcgb3IgdG9vIHVuZm9jdXNlZCB0byBsZWFybiB0cmlja3MuIApVc2UgdHdvIHRvIHRocmVlIGJhc2ljIGNvbG9ycyAgIGdlbmVyYWxseSwgcmVkLCBibHVlLCBncmVlbiwgYmxhY2ssIHllbGxvdywgb3Igd2hpdGUKVGhleSB1c3VhbGx5IGhhZCBwYXR0ZXJucyAgIHRoZXkga25ldyB0aGVyZSB3b3VsZCBiZSBhIHRpbWUgb2YgZGF5IHdoZW4gSSB3b3VsZCBqdXN0IGJlIHJlbGF4aW5nIG9uIHRoZSBjb3VjaCBldGMsIGFuZCBhcm91bmQgdGhhdCB0aW1lIHRoZXkgdXN1YWxseSB3YW50IHRvIHNudWdnbGUgdXAgYW5kIGdldCBsb3RzIG9mIHBldHMuLiAKRnN0b3BwZXJzIGhvdyB0byBiZWNvbWUgYSBwcm9mZXNzaW9uYWwuIApGaWd1cmluZyBvdXQgd2hlcmUgaHVtYW5zIGFyZSBvciB3aGF0IGhhcHBlbmVkIHRvIHRoZW0gaWYgdGhleSBub3QgYXJvdW5kIHdvdWxkIGJlY29tZSBwcmlvcml0eSAxIGZvciB0aGUgZ3JvdXAgb2Ygd2FhdGEgdGhhdCBkaXNjb3ZlcmVkIHRoZSBwcm9iZS4uIApTQ09UVCwgRGF2aWQgUGVhY2VmdWxseSBhdCBKb3NlcGggQnJhbnQgSG9zcGl0YWwgb24gVGh1cnNkYXksIEZlYnJ1YXJ5IDIxLCAyMDE5IERhdmlkIFNjb3R0IHBhc3NlZCBhd2F5IGF0IHRoZSBhZ2Ugb2YgNzMgeWVhcnMuIEhlIHdpbGwgYmUgbWlzc2VkIGJ5IGhpcyBjaGlsZHJlbiBTaGFubm9uIFNjb3R0IChBZGFtIFdpbGxpYW1zb24pLCBCcmV0dCBTY290dCAoUXVpbnRhbmEgQ2FydGVyKSwgS3lsZSBTY290dCAoTWVsaXNzYSBTY2h3ZXllcikgYW5kIHRoZWlyIG1vdGhlciBTaGVsbGV5IFNjb3R0LCBhbmQgYnkgaGlzIGdyYW5kY2hpbGRyZW4gTGV4aSBhbmQgTmF0aGFuIFdpbGxpYW1zb24sIGFuZCBEYXZpZCBhbmQgQ2FtZXJvbiBTY290dC4gQWxzbyBzdXJ2aXZlZCBieSBoaXMgc2lzdGVyIE5vcmVlbiBNb29yZSwgbmllY2VzIGFuZCBuZXBoZXcsIEFkZWxlLCBEZWJiaWUgYW5kIERhdmlkLCBzaXN0ZXIgaW4gbGF3IExvcm5hIFNjb3R0LCBuaWVjZSBhbmQgbmVwaGV3LCBBbmdlbGEgYW5kIERhdmlkLCBjb3VzaW4gTm9ybWEgV2V5ZW1hcnMgYW5kIGhlciBkYXVnaHRlciBLYXRoeSB3aXRoIGhlciBjaGlsZHJlbiBDaGFzZSBhbmQgU3VsbHkuIApBbmQgaGVyZSBhIHN1Z2dlc3Rpb24gYWJvdXQgc29tZXRoaW5nIHRvIGFkZCB0byB0aGUgcmVhbGx5IGJpZyB1bml0cyB3aXRoIGxvdHMgb2Ygc3BhY2UgdG8gcGFpbnQgd2hlbiB5b3UgZ2V0IHRvIHRoZW0gKE1vbm9saXRoIGFuZCBUZXNzZXJhY3QgQXJrKTogbG9vayBhdCBob3cgdGhpcyBndXkgcGFpbnQgdGhlIHBsYW5ldHMgb24gdGhlIHRvd2VyIGZsb29yLiAKVGhlcmUgYXJlIDYgc2VyaWVzIG9mIGRyYXdzIHlvdSBjYW4gZ2V0IHRoYXQgd2lsbCBnaXZlIHlvdSBhY2UsIHF1ZWVuLCBhbmQgMTAgKDMhLCBvciAzeDJ4MSkuIApEaWFuYSBIZW5yeSBCYWtlZCBDaGlja2VuIHdpdGggRGlqb24gTXVzdGFyZCBhbmQgSGVyYnMKVGhlIHNvbmdzIGluIE1vYW5hIGFyZSBzdW5nIGluIEVuZ2xpc2gsIFNhbW9hbiBhbmQgVG9rZWxhdSwgd2l0aCB0aGUgc29uZyAiV2UgS25vdyBUaGUgV2F5IiBzdW5nIGluIGJvdGggU2Ftb2FuIGFuZCBUb2tlbGF1YW4KVGhlIG1hcmtldCBvcGVuZWQgdG9kYXkgb3ZlciA5LjAwMCwgdGhlIGZpcnN0IHRpbWUgdGhpcyB5ZWFyLCBGb3JkIGhhcyBwb3N0ZWQgYSBwcm9maXQsIGFuZCBhdXRvIHNhbGVzIGFyZSByZWJvdW5kaW5nLiBTaG91bGQgSSBjb21wbGFpbiB0byB0aGUgZWRpdG9ycyBvZiBUL1MgYmVjYXVzZSB5b3UgZGVjaWRlZCB0aG9zZSBmYWN0cyBhcmVuIGltcG9ydGFudC4gClNvIGRlcGVuZGluZyBvbiB3aGF0IHlvdSdyZSBmaXJzdCBkZWFsdCwgeW91IGhhdmUgYmV0dGVyIG9yIHdvcnNlIGNoYW5jZXMgb2YgYWNoaWV2aW5nIGEgY2VydGFpbiBoYW5kLiAKTGFzIFZlZ2FzIGlzICdncm91bmQgemVybycgZm9yIGNoaWxkIHNleCB0cmFmZmlja2luZwpGaXJzdCwgYWx0aG91Z2ggbW9zdCBzZWN1cmVkIGNhcmQgaXNzdWVycyBkbyByZXBvcnQgeW91ciBhY3Rpdml0eSB0byBjcmVkaXQgYnVyZWF1cywgY2hlY2sgdGhlIGZpbmUgcHJpbnQgb3IgY2FsbCBhbmQgYXNrIHRvIG1ha2Ugc3VyZSBpdCByZXBvcnRzIHRvIGF0IGxlYXN0IG9uZSBvZiB0aGUgYmlnIHRocmVlIChUcmFuc1VuaW9uLCBFcXVpZmF4IG9yIEV4cGVyaWFuKS4gClBvaW50aW5nIG91dCB0aGF0IHlvdSBhcmUgaW5zZWN1cmUgYWJvdXQgdGhlc2Ugb3RoZXIgZ2lybHMgYXBwcm9hY2hpbmcgaGltIGlzIHJlbWluZGluZyBoaW0gdGhhdCB0aGVyZSBpcyBmb3JiaWRkZW4gZnJ1aXQgd2Fsa2luZyBhcm91bmQsIGFuZCBoaW50aW5nIGF0IGluc2VjdXJpdGllcywgc2V0dGluZyBib3VuZGFyaWVzLCBvciBleGhpYml0aW5nIGFueSBnZW5lcmFsbHkgdW50cnVzdGluZyBiZWhhdmlvciB3aWxsIG1ha2UgdGhlIGZvcmJpZGRlbiBmcnVpdCBzd2VldGVyLiBJbiB0aGVzZSBzaXR1YXRpb25zLCBpdCBpcyBiZXN0IHRvIGZpZ2h0IHRoZSBmb3JiaWRkZW4gZnJ1aXQgd2l0aCBob25leS4gClBlcmZvcm1hbmNlIENvb2tpZXMgc2FtbWVsbiBJbmZvcm1hdGlvbmVuIGRhcmJlciwgd2llIHVuc2VyZSBXZWJzZWl0ZW4gZ2VudXR6dCB3ZXJkZW4sIHVtIGRhcmF1ZiBiYXNpZXJlbmQgZGVyZW4gQXR0cmFrdGl2aXR0LCBJbmhhbHQgdW5kIEZ1bmt0aW9uYWxpdHQgenUgdmVyYmVzc2Vybi4gRGllc2UgQ29va2llcyBoZWxmZW4gdW5zIGJlaXNwaWVsc3dlaXNlIGZlc3R6dXN0ZWxsZW4sIG9iIHVuZCB3ZWxjaGUgVW50ZXJzZWl0ZW4gdW5zZXJlciBXZWJzZWl0ZSBiZXN1Y2h0IHdlcmRlbiB1bmQgZnIgd2VsY2hlIEluaGFsdGUgc2ljaCBkaWUgTnV0emVyIGJlc29uZGVycyBpbnRlcmVzc2llcmVuLiAKVGhhbmsgeW91IGZvciBhbGwgb2YgdGhlIGFkdmljZSBhbmQgZmVlZGJhY2suIEkga25vdyB3ZSB3aWxsIGJlIGZpbmUgZmluYW5jaWFsbHkgdGhpcyBqdXN0IHN1Y2tzIHJpZ2h0IG5vdy4gSSBzdGlsbCBsb3ZlIG15IHdpZmUsIHNoZSBpcyBqdXN0IHZlcnkgdHJ1c3Rpbmcgb2YgcGVvcGxlLCB3aGljaCBpcyB1c3VhbGx5IGEgcG9zaXRpdmUgcXVhbGl0eSwgYnV0IGluIHRoaXMgY2FzZSBwZW9wbGUgdG9vayBhZHZhbnRhZ2Ugb2YgaXQuLiAKV2hhdCBtYWtlcyBwb29sIGRpbmluZyB0YWJsZXMgdW5pcXVlIGlzIHRoYXQgdGhleSBjYW4gYmUgdXNlZCB0byBhY2NvbW1vZGF0ZSBhIGdhbWUgb2YgcG9vbCwgb3IgaXQgY2FuIGJlIHVzZWQgYXMgYSBkaW5uaW5nIHRhYmxlLiAKSSBrbm93IEkgZHJlc3NlZCBzY2FudGlseSBidXQgdGhhdCBubyByZWFzb24gdG8gbGl0ZXJhbGx5IHRyeSB0byBwaG90b2dyYXBoIG15IGdlbml0YWxzIHdpdGhvdXQgbXkgY29uc2VudC4gClRyeSBhIGZldyBkcm9wcyBvbiB5b3Vyc2VsZiBhbmQgeW91J2xsIHNlZSB3aGF0IEkgbWVhbi4gCkhvdyBoYXJkIGl0IGlzIHRvIGludGVyYWN0IHdpdGggdGhlIHB1YmxpYyBkZXBlbmRzIG9uIHdoZXJlIHlvdSBsaXZlLiBSdXJhbCBBbGFiYW1hPyBJIHdvdWxkIGd1ZXNzIHJlYWxseSBmdWNraW5nIGhhcmQgdW5sZXNzIHlvdSBjb21wbGV0ZWx5IHBhc3MgYW5kIGFyZSAxMDAlIHN0ZWFsdGguIApBdCBob21lLCBDYW5hZGlhbiBkYXRhIGFyZSByZWZsZWN0aW5nIHRoaXMgc2xvd2VyIGdsb2JhbCBtb21lbnR1bS4gSW4gdGhhdCByZWdhcmQsIGdvdmVybmluZyBjb3VuY2lsIHNwZW50IGEgbG90IG9mIHRpbWUgZGlzY3Vzc2luZyB0aGUgbmF0aW9uYWwgYWNjb3VudHMgZGF0YSBmb3IgdGhlIGZvdXJ0aCBxdWFydGVyIG9mIGxhc3QgeWVhci4gClRoYXQgYmVjYXVzZSB0aGUgcmljaCB3aWxsIGxvb2sgcmVhbGx5IGRpZmZlcmVudCB0aGFuIHVzIG9yZGluYXJ5IG1vcnRhbHMuIApNaXNzb3VyaSBDb21wcm9taXNlIENyb3Nzd29yZCBQdXp6bGUgQW5zd2VycwpUaGUgUG9rZXIgSG91c2VJdCB3YXMgaW4gMjAxMCwgdGhyZWUgeWVhcnMgYWZ0ZXIgSSBtZXQgQ2FyYXdheSwgdGhhdCBJIHdyb3RlIGFib3V0IHRoZSBmaXJzdCBzZXJpb3VzIHNjYW5kYWwgaW52b2x2aW5nIGhpbS4gTXkgY29sbGVhZ3VlIGF0IHRoZSB0aW1lLCBUYW55YSBFaXNlcmVyLCBnb3QgYSB0aXAgQ2FyYXdheSB3YXMgY2hpbGxpbmcgYSBwb2xpY2UgY3JhY2tkb3duIGludG8gYSBnYW1ibGluZyBob3VzZSBpbiBTb3V0aCBEYWxsYXMuIFRoZSBhbGxlZ2F0aW9uIHdhcyBzZXJpb3VzLiAKT3ZlcnZpZXcgZm9yIGZyYW5rY2hlc3RlcgpFdmVyeSB2b3RlIHdvdWxkIG5vdyBjb3VudCBzbyB5b3UgY291bGQgc2VlIGEgUmVwdWJsaWNhbiBjYW1wYWlnbmluZyBpbiBSaG9kZSBJc2xhbmQgYmVjYXVzZSB0aGUgcmVwdWJsaWNhbnMgdGhlcmUgd2lsbCBubyBsb25nZXIgYmUgZXNzZW50aWFsbHkgZGlzZW5mcmFuY2hpc2VkIGJ5IHRoZSBlbGVjdG9yYWwgY29sbGVnZS4gWW91IHdvdWxkIHNlZSBhIERlbW9jcmF0IGNhbXBhaWduaW5nIGFjcm9zcyB0aGUgc291dGggYmVjYXVzZSB0aGV5IHdvdWxkIHdhbnQgdG8gZHJpdmUgdXAgdGhlaXIgc3VwcG9ydCBmcm9tIGRlbW9jcmF0cyBhbmQgaW5kZXBlbmRlbnRzIGluIHRoZSBhcmVhIHdob3NlIHZvdGVzIHdvdWxkIGFjdHVhbGx5IG1lYW4gc29tZXRoaW5nLkthaHpndWwgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ29OZWl0aGVyIHN0dWR5IGhhcyBhbnl0aGluZyB0byBkbyB3aXRoIHdoZXRoZXIgYWxsb3dpbmcgY2hpbGQgcG9ybiB0byBiZSBob3N0ZWQgb24gYSB3ZWJzaXRlIGVuYWJsZXMgdGhvc2Ugd2hvIHNlZWsgY2hpbGQgcG9ybiwgYW5kIHN0dWR5IHR3bywgd2hpY2ggaXMgYXQgbGVhc3Qgc29tZXdoYXQgcmVsZXZhbnQgY29tcGFyZWQgdG8gbm9uIHNlcXVpdHVyIHN0dWR5IDEsIG9ubHkgbG9va3MgYXQgdmlvbGVudCBiZWhhdmlvciBvZiB0aG9zZSB3aG8gdmlldywgd2hpbGUgd2lsZnVsbHkgaWdub3JpbmcgdGhhdCB0aGVyZSBhcmUgY2hpbGRyZW4gaW4gdGhlIGNoaWxkIHBvcm4gYmVpbmcgdmlld2VkIHdobyBhcmUgYWxyZWFkeSB2aWN0aW1zIGF0IHRoZSB0aW1lIG9mIHZpZXdpbmcuIApUZWVuYWdlcnMgYW5kIHlvdXRocyBpbiBnZW5lcmFsIGFyZSBpbmNyZWFzaW5nbHkgaW5mYW50aWxpemVkLCB3aXRoIHZlcnkgZmV3IGV2ZXIgY29taW5nIHRvIHJlYWxpemUgdGhlaXIgZnVsbCBpbnRlbGxlY3R1YWwsIHNvY2lhbCwgb3IgYXRobGV0aWMgcG90ZW50aWFsLgpIb3cgd291bGQgU3RhbGluIGhhdmUgZGVhbHQgd2l0aCB0aGUgc3VnYXIgY3Jpc2lzPyBCeSB0aGUgZXhwcm9wcmlhdGlvbiBvZiB0aGUgc3VnYXIgYmFyb25zLiBCZXJpYSwgaGVhZCBvZiB0aGUgZmVhcmVkIEtHQiwgd291bGQgaGF2ZSBrbm93biBob3cgdG8gZGVhbCB3aXRoIHRoZW0uIEJodXR0bydzIG5hdGlvbmFsaXNhdGlvbiBwb2xpY2llcyB3ZXJlIGEgZGlzYXN0ZXIgYmVjYXVzZSB0aGV5IHdlcmUgbWlzY29uY2VpdmVkIG5vdCBlbm91Z2ggdGhvdWdodCBnb2luZyBpbnRvIHRoZW0gYW5kIGJlY2F1c2UgdGhleSB3ZXJlIGltcGxlbWVudGVkIGJ5IGJ1cmVhdWNyYXRzLiBCdXQgaWYgYW55dGhpbmcgY2FsbHMgZm9yIGEgZnJlc2ggcm91bmQgb2YgbmF0aW9uYWxpc2F0aW9uIGl0IGlzIHRoZSBzaG9ydGFnZSBjcmVhdGVkIGJ5IHRoZSByb2JiZXIgYmFyb25zIG9mIHRoZSBzdWdhciBpbmR1c3RyeS4gVGhhdCdzIHRoZSBvbmx5IGxhbmd1YWdlIHRoZXkgd2lsbCB1bmRlcnN0YW5kLgpNYXliZSBEb3VnIHdpbGwgdGFrZSBhIGxvb2sgYXQgaXQgbGF0ZXIuLiAKTWFpcyBpbCBzZW1ibGUgcmV2ZW5pciBzdXIgbGUgZGV2YW50IGRlIGxhIHNjbmUsIHNhbnMgZG91dGUgZW4gbGllbiBhdmVjIGxlcyBwb3NzaWJpbGl0cyBkZSBjb21tdW5pY2F0aW9uIHBsdXMgZGlyZWN0ZSBxdWUgcGVybWV0IGludGVybmV0LiAKVGhpcyBpcyBhbm90aGVyIHRoaW5nIHRoZSB0diBzaG93IGlzIGRpc2hvbmVzdCBhYm91dC4gSGlzIHRlc3RpbW9ueSBpcyBISUdITFkgZWRpdGVkIHRvIHRoZSBwb2ludCB0aGV5IGhhdmUgaGltIGFuc3dlcmluZyBxdWVzdGlvbnMgaGUgbmV2ZXIgZXZlbiBhbnN3ZXJlZC4gSW4gZmFjdCBDb2xib3JuIGlzIHN1aW5nIHRoZW0gZm9yIGRlZmFtYXRpb24gZHVlIHRvIHRoZWlyIGVkaXRpbmcuIApSaXNrIHRha2luZywgdGhlcmVmb3JlLCBpcyBub3QgbmV3IHRvIHRoZSBBbWVyaWNhcyBhbmQgdGhlIFVuaXRlZFN0YXRlcyBoYXMgaGFkIGEgbG9uZyBhbmQgbGVuZ3RoeSBoaXN0b3J5IG9mICJnYW1ibGluZyIgdGhyb3VnaG91dGhpc3RvcnkuIApCeSBjb250cmFzdCwgb25seSA2LjcgcGVyY2VudCBvZiBwZW9wbGUgd2l0aG91dCBhbGxlcmdpYyBkaXNlYXNlIHdvdW5kIHVwIHdpdGggYSBwc3ljaGlhdHJpYyBkaWFnbm9zaXMuLiAKSGVyZSBpcyB0aGUgdGhpbmcgd2l0aCBteSBERiBhZGRpY3Rpb24uIFN0YXJ0ZWQgcGxheWluZyBpbiAyMDA4IGFuZCB3aWxsIGdldCB0aGUgdGhpcnN0IGV2ZXJ5IDYgMTIgbW9udGhzIHRvIHN0YXJ0IHVwIGFnYWluLiBFdmVyeSB0aW1lIEkgc3RhcnQgYSBnYW1lIHRoZXJlIHNlZW1zIHRvIGhhdmUgYmVlbiBhbiB1cGRhdGUgYW5kIGEgbWFqb3IgZ2FtZSBwbGF5IGNoYW5nZSBidXQgU09NRUhPVyBteSBmaW5nZXJzIHN0aWxsIGtub3cgaG93IHRvIGdldCB0aHJvdWdoIHRoZSBtZW51cyBldmVuIGlmIG15IGJyYWluIGRvZXNuIEkgY2FuIGFsc28gcmVtZW1iZXIgZXZlcnkgaGVhcnRicmVha2luZyByZWFzb24gSSBzdG9wcGVkIHBsYXlpbmcuLiAKSWYgeW91IGRvIGEgbGl0dGxlIHJlc2VhcmNoIGFyb3VuZCB0aGUgaW50ZXJuZXQsIHlvdSB3aWxsIGZpbmQgdGVzdGltb25pYWxzIHRoYXQgaW5kaXZpZHVhbHMgc3VibWl0IHdoZXJlIHRoZXkgYXJlbid0IHBsZWFzZWQgd2l0aCBwbGFzdGljIHBva2VyIGNoaXBzLiAKQnV0IEZhY2Vib29rIGhhcyBleGNsdXNpdmUgYWNjZXNzIHRvIHNvbWUgb2YgWnluZ2EgbW9zdCBwb3B1bGFyIGdhbWVzIHVuZGVyIGEgZGVhbCB0aGF0IHJ1bnMgdGhyb3VnaCAyMDE1LiBBcyBhIHJlc3VsdCwgWnluZ2EgY2Fubm90IGRpdmVyc2lmeSB0aGUgZGlzdHJpYnV0aW9uIHBvaW50cyBvZiBpdHMgc3Ryb25nZXN0IGdhbWVzLi4gClRoZXkgaW5mbGF0ZWQgdGhlIGN1cCBzaXplLiBXaGF0IG1lYXN1cmVkIGFzIGEgQiB3YXMgbm93IG1hcmtlZCBhIEMuIApXZSB3ZXJlIHRvbyBidXN5IHdvcmtpbmcgdG8gbm90aWNlLiAKSSB0ZW5kIHRvIGxvb2sgZm9yIHBlb3BsZSB3aG8gYXJlIHNtaWxpbmcgd2hlbiB0aGV5IGFyZSB0YWxraW5nIHRvIHBlb3BsZS4gSXQgbWVhbnMgdGhleSBhcmUgYWN0aXZlbHkgZW5nYWdlZCBpbiB0aGUgY29udmVyc2F0aW9uLCBhbmQgYXJlIG1vcmUgbGlrZWx5IHRvIGhhdmUgYW4gZWFzeSBnb2luZyBkZW1lYW5vciBhbmQgYXJlIG9wZW4gdG8gbGlnaHRlciBjb252ZXJzYXRpb24uIEl0IGEgZ3JlYXQgd2F5IHRvIHN0YXJ0LiBJZiBldmVyeW9uZSBpcyB2ZXJ5IHN0aWZmLCBJIHRyeSB0byBmaW5kIHNtYWxsZXIgZ3JvdXBzIG9mIHBlb3BsZS4gVGhhdCB3YXkgSSBjYW4ganVzdCBsaXN0ZW4uIFJlbW92aW5nIHRoZSByZXF1aXJlbWVudCB0byBhY3R1YWxseSB0YWxrIGZvciB0aGUgZmlyc3QgY29udmVyc2F0aW9uIGhlbHBzIGEgbG90LiBFdmVudHVhbGx5IHNvbWVvbmUgaW4gdGhlIGdyb3VwIHdpbGwgYXNrIHNvbWV0aGluZyByZW1vdmluZyB0aGUgbmVlZCBmb3IgbWUgdG8gY29tZSB1cCBhbmQgc3RhcnQgdGhlIGNvbnZlcnNhdGlvbi4gSWYgdGhleSBkb24ganVzdCBsaXN0ZW4gYW5kIHNtaWxlLiBGaXJzdCBzdGVwcyBhcmUgc3RpbGwgc3RlcHMsIG5vIG1hdHRlciBob3cgc21hbGwuCldlcmUgdGhlIGRyYXdpbmdzIHJlcHJvZHVjZWQgaW4gdGhlIDE4dGggY2VudHVyeT8gUmlnaHQgbm93LCBJIGp1c3QgZG9uIGtub3cuIEkgZGlkIGRvIGEgc2VhcmNoIHVuZGVyICJKYWNxdWV0IERyb3oiIGluIEdhbGxpY2Egb3ZlciB0aG91c2FuZHMgb2YgcHVibGljYXRpb25zIGFuZCBhdCBmaXJzdCBibHVzaCB0aGVyZSAoMSkgc2VlbXMgdG8gYmUgbm90IG1hbnkgaGl0cyBhbmQgKDIpIG5vbmUgdGhhdCBJIGhhdmUgc2VlbiBoYXZlIGFueSBpbGx1c3RyYXRpb25zLiAKSG93ZXZlciwgYXQgc29tZSBwb2ludCBkdXJpbmcgdGhlIHNlc3Npb24gKHVzdWFsbHkgdGhlIGxhdHRlciBoYWxmKSwgeW91IHdpbGwgYmUgYXNrZWQgdG8gZmxpcCBvdmVyIGFuZCB0aGV5IHdpbGwgYXNrIHlvdSB3aGF0IGtpbmQgb2Ygc2VydmljZXMgeW91IHdhbnQuIApXZSByZWNvbm5lY3RlZCBhZnRlciBTYWxvbW9uIEJyb3RoZXJzLCBzb21lIHRpbWUgZG93biB0aGUgcm9hZC4gSSB1c2VkIHRvIGNvbWUgb3V0IHRvIEFzcGVuIGluIHN1bW1lcnMuIE15IHBhcmVudHMgcmVudGVkIGEgaG91c2UgdGhlcmUgZm9yIDIwIHllYXJzLiBBbmQgd2Ugd291bGQgZG8gYW4gYW5udWFsIGJpa2UgcmlkZS4gV2Ugd2VudCBvdmVyIHRvIHRoZSBNYXJvb24gQmVsbHMsIHdlIHJvZGUgdG8gQ3Jlc3RlZCBidXR0ZSwgYW5kIHJlYWxpemVkIHdoZW4gd2UgZ290IHRoZXJlIHRoYXQgaGUgZGlkbid0IGhhdmUgdGhlIGtleXMgdG8gdGhlIGNhciBoZSBwYXJrZWQgKGxhdWdocykuClByaW1hcmlseSB3ZSBhcmUgbG9va2luZyBmb3IgY2hhcml0aWVzIGZvY3VzaW5nIG9uIGJhc2ljIGxpdGVyYWN5IHNraWxscyAgIHJlYWRpbmcgYW5kIHdyaXRpbmcgZm9yIHdoYXRldmVyIGFnZSBncm91cCAgIGFuZCBnbG9iYWxseSEgQnV0IHdlIGFyZSBhbHNvIGludGVyZXN0ZWQgaW4gb3JnYW5pc2F0aW9ucyB3aGljaCBmb3N0ZXIgbGl0ZXJhY3kgaW4gYSBicm9hZGVyIHNlbnNlIHRvby5UaGUgZ29vZCBuZXdzIGlzIHRoYXQgdGhlIEZvdW5kYXRpb24gaGFzLCB0aGFua3MgdG8gdGhlIGtpbmRuZXNzIG9mIGEgZmV3IGRvbm9ycywgYWxyZWFkeSByYWlzZWQgc2V2ZXJhbCB0aG91c2FuZCBwb3VuZHMuIApGcmVlIGRvd25sb2FkIDcgd29uZGVycyAyIGZ1bGwgdmVyc2lvbiBmb3IgYW5kcm9pZGluc3RtYW5rIGh1bSBkaWwgZGUgY2h1a2Ugc2FuYW0gMTA4MHAgdmlkZW8gc29uZ3MgLiBMZ2cgdGlsbCBlbiBkaXNrdXNzaW9uIFNlIGFsbGEuIApDaHJvbmljIGluZmxhbW1hdGlvbiBsZWFkcyB0byB0aGUgZGVzdHJ1Y3Rpb24gb2YgdGlzc3VlIGFuZCBhIGJ1aWxkdXAgb2YgYmlvbWFya2VycyB0aGF0IHByb2R1Y2UgbW9yZSBpbmZsYW1tYXRpb24uIENocm9uaWMgaW5mbGFtbWF0aW9uIGlzIG1vcmUgb2YgYSBwcm9ibGVtIG5vdyB0aGFuIGV2ZXIgYmVmb3JlIGJlY2F1c2Ugb2Ygb3VyIGRhaWx5IGV4cG9zdXJlIHRvIHBldHJvY2hlbWljYWxzIGFuZCBoZWF2eSBtZXRhbHMuIApCdXQgYnJhZ2dpbmcgcmlnaHRzIHRvIHRoZSBTZXJpZXMgYXJlIGltcG9ydGFudCwgZXZlbiBpZiBmaXJzdCBwcml6ZSBpcyBvbmx5ICQ4MzUsMDAwLiAKVE9QSE9URUxQUk9KRUNUUzogU2VjaHMgbmV1ZSBIb3RlbGJhdSBQcm9qZWt0ZSBkZXIgSG90ZWxrZXR0ZSBpbiBCYXUKVGhlcmUgYXJlIDEzIHBvdGVudGlhbCByYW5rcyBvZiBjYXJkcyBpbiB0aGUgZGVjay4gCkV2ZW4gaWYgd2UgYXJlIGNvbnNpZGVyaW5nIGhhbmQgd2FzaGluZyB0aGUgYXBwcm9wcmlhdGUgc29sdXRpb24sIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBhYmlsaXR5IHRvIGRvIHRoaXMgYXQgaG9tZSBhbmQgdGhlIGFiaWxpdHkgdG8gZG8gdGhpcyBpbiBhIHB1YmxpYyBsaWJyYXJ5IHJlc3Ryb29tLiAKV2VsbCBJIGNhbiBraW5kYSBncmFzcCB3aHkgdGhvLiAKSSBsb29rZWQgYXQgQXNjZW50LCBQaWxvdCwgYW5kIEhpZ2hsYW5kZXIgYW5kIGZvdW5kIGZvciB0aGUgbGV2ZWwgSSB3YW50LCB3aGljaCBpbmNsdWRlcyBhYmlsaXR5IHRvIHRvdyA1MDAwIHBvdW5kcywgdGhlIEFzY2VudCB3YXMgZGVmaW5pdGVseSB0aGUgYmVzdCB2YWx1ZS4gUGlsb3QgaGFkIHRvIGp1bXAgdXAgc2V2ZXJhbCBsZXZlbHMgdG8gZ2V0IHRoZSB0b3dpbmcgYWJpbGl0eS4gU3ViYXJ1IGJhc2ljYWxseSBtYWtlcyBvbmUgY2FyIGJ1dCBzdHJldGNoZXMgZW5naW5lIHBvd2VyIG9yIGZyYW1lIHNpemUgZm9yIHRoZSBtb2RlbC4gVGhlIEJveGVyIGVuZ2luZXMgYXJlIGZ1ZWwgZWZmaWNpZW50LCBnaXZlIGEgbG90IG9mIHBlcCBmb3IgaXRzIHNpemUsIGFuZCB3aWxsIGVhc2lseSBtYWtlIGl0IHRvIDIwMGsgb3IgbW9yZSB3aXRoIGdvb2QgY2FyZS4KU2hlJ3MgdXN1YWxseSB0aGUgb25lIHdpdGggdGhlIHB1bmNobGluZXMgYWJvdXQgdGhlIGxvc3Mgb2YgaGVyIHJpZ2h0IGFybSwgd2hpY2ggd2FzIHNldmVyZWQgaW4gYSAyMDA4IGNhciBjcmFzaC4gCkVuIDIwMDQsIFZpdiBUb21icywgYWxvcnMgZGlyZWN0cmljZSBkZSBHYXJkZW4gUHJpbWFyeSBTY2hvb2wgZGUgTWVydG9uIChhdSBzdWQgZGUgTG9uZHJlcykgZGlzYWl0IGR1IHByb2dyYW1tZTogIGxvcnNxdWUgbm91cyBhdm9ucyBjb21tZW5jICBwcmF0aXF1ZXIgbGUgbWFzc2FnZSBlbiBjbGFzc2UgZGFucyBsZSBjYWRyZSBkJ3VuIHByb2pldCBwaWxvdGUsIGonYXZhaXMgZGUgbGEgZGlmZmljdWx0ICBjcm9pcmUgbGVzIHJzdWx0YXRzLiAKQnJlbWVydG9uIHR1cm5zIGludG8gUmF5bW9uZCBTdCwgd2hpY2ggeW91IGZvbGxvdyB1bnRpbCB5b3UgcGFzc2luZyBNY0tlbnppZSBlbGVtZW50YXJ5IG9uIHlvdXIgbGVmdC4gVGFrZSB0aGUgb3ZlcnBhc3MuCkNCOiBNYXliZSBzaGUgY2FuIGFzc2lzdCBiZWZvcmUgaGVyIGNsYXNzZXM/IFRoZSBzaG9wIG9wZW5zIGF0IDU6MDAgaW4gdGhlIG1vcm5pbmcuIElmIHNoZSBoZWxwcyBvdXIgZmFtaWx5LCBzaGUgbWF5IGhlbHAgaGVyc2VsZiB0byBhIGNvbXBsaW1lbnRhcnkgZG91Z2hudXQgYW5kIGNhcnRvbiBvZiBtaWxrLiAKQWltaWEgc2hhcmVob2xkZXJzIGFwcHJvdmUgc2FsZSBvZiBBZXJvcGxhbiB0byBBaXIgQ2FuYWRhIGNvbnNvcnRpdW0KSWYgc29tZW9uZSB0b29rIHRoZSB0aW1lIHRvIGJlIG15IGZyaWVuZCBvciBteSByb21hbnRpYyBwYXJ0bmVyLCB0aGVpciBsaWZlIHdvdWxkIGJlIHRhbmdpYmx5IHdvcnNlIGJ5IGFzc29jaWF0aW9uLiAKV2hlbiBwZW9wbGUgYXNrIGluYXBwcm9wcmlhdGUgdGhpbmdzIEkgbGlrZSBzYXlpbmcgdGhlIGV2ZXIgc28gc2xpZ2h0bHkgZHJhd24gb3V0ICJleGN1c2UgbWU/IiBJdCBwcmV0dHkgZ29vZCBhdCBtYWtpbmcgcGVvcGxlIGJhY2twZWRhbC4gRXhjZXB0IGZvciB0aGUgb25lIGJpdGNoIHdobyB3YXMgYWRhbWFudCB0aGF0IGlmIEkgZG9uIGhhdmUgYSBiaW8ga2lkIHdpdGggbXkgdGhlbiBmaWFuYyAoaGUgbXkgZGF1Z2h0ZXIgc3RlcGRhZCkgdGhhdCBoZSBjaGVhdCBvbiBtZS9sZWF2ZSBmb3IgYSB3b21hbiB3aG8gYmVhciBoaW0gY2hpbGRyZW4uIFNoZSBrZXB0IGFza2luZyBtZSAiYXJlbiB5b3Ugd29ycmllZCBoZSBsZWF2ZSB5b3UgZm9yIGFub3RoZXIgd29tYW4/PyIgdW50aWwgSSBzbmFwcGVkICJXSFkgd291bGQgeW91IGV2ZXIgdGhpbmsgdGhhdCBhY2NlcHRhYmxlIHRvIGFzayBzb21lb25lPyBUaGF0IGlzIFNPIHJ1ZGUhIi4gClFpIGdvbmcgaGFzIGEgd2lkZSB2YXJpZXR5IG9mIGZvcm1zLCByYW5naW5nIGZyb20gcXVpZXQgbWVkaXRhdGl2ZSBleGVyY2lzZXMgdGhhdCBicmluZyBhYm91dCBhIHNlbnNlIG9mIHBlYWNlIGFuZCB3ZWxsIGJlaW5nIHRvIHRlY2huaXF1ZXMgdGhhdCBzZW5kIHBvd2VyZnVsIHdhdmVzIG9mIGVuZXJneSBmbG93aW5nIHRocm91Z2ggdGhlIGJvZHkuIEluIGl0cyBtZWRpY2FsIGZvcm0sIHFpIGdvbmcgaXMgdXNlZCB0byBidWlsZCBpbW11bml0eSwgdHJlYXQgZGlzZWFzZSwgaW1wcm92ZSBzdHJlbmd0aCwgY2xhcmlmeSB0aGUgbWluZCwgYW5kIGVuYWJsZSBhIHBlcnNvbiB0byB0YXAgaW50byB1bmRlcmx5aW5nIHJlc2VydmVzIG9mIGVuZXJneS4uIApUaGV5IGNvdWxkbiBldmVuIGdldCBhIHByaWNlIGVzdGltYXRlIGZyb20gYW55IGNvbnRyYWN0b3IgYmVjYXVzZSB0aGUgd29yayByZXF1aXJlZCB0byBmaWd1cmUgb3V0IHRoZSBzdHJ1Y3R1cmFsIGFsdGVyYXRpb25zIHdhcyBleHRlbnNpdmUgZW5vdWdoIHRvIHJlcXVpcmUgYSBwcmljZSBlc3RpbWF0ZSBpbiBpdHNlbGYuLiAKVGlueSBXaXNkb20sIE9uIE1pbmRmdWxuZXNzOiBTaW1wbGUgVGlwcyBmb3IgTGl2aW5nIGluIHRoZSBOb3cuIApJdCBqdXN0IGZpdHMgYWxzbyB3aXRoIHdoYXQgSSdtIGRvaW5nIHJpZ2h0IG5vdyBjcmVhdGl2ZWx5LiAKVGhlIGluanVyZWQgbXVzY2xlIHdpbGwgc2xvd2x5IGxvc2UgaXRzIGZsZXhpYmlsaXR5IGFuZCBlbGFzdGljaXR5IGluY3JlYXNpbmcgdGhlIG11c2NsZSdzIHN0aWZmbmVzcy4gCklmIEkgZXZlciBleHBlcmllbmNlZCBhbiBpc3N1ZSBJIHdhcyBhbHdheXMgYWJsZSB0byBnZXQgaGVscC4gSSBrZWVwIGVub3VnaCBpbiBjaGVja2luZyBzbyB0aGF0IG15IGluc2FuZSBudW1iZXIgb2YgdHJhbnNmZXJzIGlzIHByb2JhYmx5IG92ZXJsb29rZWQgc2luY2UgdGhleSBhIGh1YiBmb3IgYmFuayBjaHVybmluZy4gSSBuZXZlciB1c2UgaXQgZm9yIE1PIHRob3VnaC4gCkRvZXMgMiBwYWlyIGJlYXQgYSBmbHVzaApJdCdzIGZpbmFsbHkgaGFwcGVuZWQhIEFmdGVyIHllYXJzIG9mIHdhdGNoaW5nIGFuZCAoaG9wZWZ1bCkgd2FpdGluZywgdG9tb3Jyb3cgaXMgdGhlIGRheSB0aGF0IEkgZmluYWxseSBzdGVwIGludG8gdGhlIFRFRHggYXJlbmEgYWxvbmdzaWRlIGFuIGFtYXppbmcgYXJyYXkgb2Ygc3BlYWtlcnMgdG8gZ2l2ZSBhIHNob3J0IHRhbGsgYWJvdXQgJ2FuIGlkZWEgd29ydGggc3ByZWFkaW5nJy4gCkkgbWVhbiwgaXQgZG9lc24gbWVhbiB0aGF0IHNoZSB3YXNuIGFidXNpbmcgdGhlIHN5c3RlbSwgYnV0IGl0IG5vdCBsaWtlIHNoZSBjb3VsZCBqdXN0IGNhbGwgdXAgYW5kIG1ha2UgYW4gYXBwb2ludG1lbnQgYW5kIG9yZGVyIHVwIGltcGxhbnRzLiBTaGUgaGFkIHRvIGhhdmUgY28gY29uc3BpcmF0b3JzIGluIHRoZSBzeXN0ZW0uLiAKUEQgcmVzdWx0cyBmcm9tIHRoZSBwcm9ncmVzc2l2ZSBsb3NzIG9mIGRvcGFtaW5lcmdpYyBuZXVyb25zLiBUaGlzIHJlc3VsdHMgaW4gcG9vciBtdXNjbGUgY29udHJvbCwgYW1vbmcgb3RoZXIgc3ltcHRvbXMuQ0JEIGFjdHMgYXMgYW4gaW52ZXJzZSBhZ29uaXN0IGF0IHRoZSBHUFI2IHByb3RlaW4gcmVjZXB0b3JzIG9mIHRoZSBicmFpbiwgd2hpY2ggYm9vc3RzIGRvcGFtaW5lIGxldmVscyBzaW5jZSBhIGRlcGxldGlvbiBvZiBHUFI2IGlzIGNvcnJlbGF0ZWQgd2l0aCB0aGlzIGVmZmVjdCBpbiB3YXlzIHdlIGRvbiBmdWxseSB1bmRlcnN0YW5kIGFzIG9mIHlldC5TbyBubywgdGhlIENCRCBvaWwgaXMgbm90IHNsb3dpbmcgZG93biBoaXMgYnJhaW4gZnVuY3Rpb24gdGhhdCBwcmVjaXNlbHkgdGhlIGlzc3VlIHdpdGggUEQuIEl0IGJvb3N0aW5nIGhpcyBicmFpbiBmdW5jdGlvbiBieSBlbnN1cmluZyB0aGVyZSBpcyBlbm91Z2ggb2YgYSBjcnVjaWFsIG5ldXJvdHJhbnNtaXR0ZXIgdG8gZ28gYXJvdW5kLi4gCkNhbiBhIHBlbmlzIGJlIHRvbyBiaWcgZm9yIGFuYWwgc2V4PyBQcm9iYWJseSBub3QsIHRob3VnaCBzaXplIGRvZXMgbWF0dGVyLiBIb3dldmVyLCBhIGJpZyBwZW5pcyBkb2VzbiBoYXZlIHRvIGJlIGEgZGVhbCBicmVha2VyLiBXaXRoIHByb3BlciBwcmVwYXJhdGlvbiwgZW5vdWdoIGx1YnJpY2F0aW9uLCB0aGUgcmlnaHQgcG9zaXRpb24sIGFuZCByZWxheGF0aW9uIHRlY2huaXF1ZXMsIGhhdmluZyBhbmFsIHNleCB3aXRoIGEgYmlnIHBlbmlzIGNhbiBiZSBjb21mb3J0YWJsZSBhbmQgcGxlYXN1cmFibGUuCk9uY2UgeW91IGZsdXNoIHRoaXMgZ3V5IG91dCBvZiB5b3VyIGxpZmUsIHlvdSBjYW4gZmlsbCB0aGF0IHNwYWNlIHdpdGggZ29vZCB0aGluZ3MuIEhvYmJpZXMgeW91IGxvdmUsIHBlb3BsZSB3aG8gYWN0dWFsbHkgbG92ZSB5b3UgYW5kIGFyZSBnb29kIHRvIHlvdS4uIApJaHIgUGFydG5lciAgIG9kZXIgZWluIHZlcnRyYXV0ZXIgTWVuc2NoLCBkZXIgU2llIGR1cmNoIGRlciBHZWJ1cnQgYmVnbGVpdGV0ICAgc29sbHRlIHNlaW5lIEhuZGUgYXVmIElocmUgU2NodWx0ZXJuIGxlZ2VuIHVuZCBsZWljaHRlbiAoISkgRHJ1Y2sgYXVzYmVuLiAKVGhlIDIwMTUgRW1wbG95bWVudCBBZ3JlZW1lbnQgcGVybWl0cyBNci4gClRoYXQgcG9zdCB3YXMgY29uc3RydWN0ZWQgdG8gYXBwZWFsIHRvIHlvdXIgZW1wYXRoZXRpYyBlbW90aW9ucy4gQnV0IHRoaW5nIGlzLCB0aGVyZSBubyBlbXBhdGh5IGluIG5hdHVyZS4gCklmIHRoYXQgYSBtaXNjaGFyYWN0ZXJpemF0aW9uLCBJIGFwb2xvZ2l6ZS4gCkRldGVybWluZSB0aGUgdHlwZSBvZiBtYXNzYWdlIHRoZXJhcHkgeW91J2QgbGlrZS4gVGhlcmUgYXJlIGRpZmZlcmVudCB0eXBlcyBvZiBtYXNzYWdlIHRoZXJhcHksIGFuZCB0aGUgbW9zdCBwb3B1bGFyIG9uZXMgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiBTd2VkaXNoIG1hc3NhZ2UsIHdoaWNoIG1ha2VzIHVzZSBvZiBsb25nIHN0cm9rZXMgYW5kIGZyaWN0aW9uIG9uIHRoZSBtdXNjbGVzIG9mIHRoZSBib2R5OyBTaGlhdHN1IG1hc3NhZ2UsIHdoaWNoIG1ha2VzIHVzZSBvZiByaHl0aG1pYyBwcmVzc3VyZSBmcm9tIHRoZSBmaW5nZXJzIHRvIGRpZmZlcmVudCBib2R5IHBhcnRzIHRvIHByb21vdGUgdGhlIGZsb3cgb2YgY2hpOyBkZWVwIHRpc3N1ZSBtYXNzYWdlLCB3aGljaCBhcHBsaWVzIHByZXNzdXJlIG9uIGRlZXAgbGF5ZXJzIG9mIG11c2NsZXM7IGFuZCBwcmVzc3VyZSBwb2ludCBtYXNzYWdlLCB3aGljaCBmb2N1c2VzIG9uIGVhc2luZyB0aGUgc3RyZXNzICJrbm90cyIgb24gdGhlIGJvZHkuIE9uY2UgeW91J3ZlIGRldGVybWluZWQgdGhlIHR5cGUgb2YgbWFzc2FnZSB0aGF0IHlvdSBsaWtlLCBmaW5kIGEgbWFzc2FnZSB0aGVyYXB5IHdobyBzcGVjaWFsaXplcyBvbiB0aGlzLi4gCkxhIGdyYW5kZSBjYW1vbWlsbGUgZW4gcGh5dG90aHJhcGllCkFsbG93aW5nIHRlZW5zIHRoZSBvcHBvcnR1bml0eSB0byB0YWtlIHJpc2tzIGluIGEgc2FmZSBjb250ZXh0IGNvdWxkIGFsc28gaGVscCB0aGVtIGRldmVsb3AgZXhwZXJ0aXNlIHRoYXQgdW5kZXJsaWVzIGdpc3QgYmFzZWQgdGhpbmtpbmcuLiAKV2hlbiBhIHJlcG9ydCBpcyBmaWxlZCwgaXQgd2lsbCBiZSByb3V0ZWQgdG8gYW4gYXBwcm9wcmlhdGUgdW5pdmVyc2l0eSBjb250YWN0ClRha2hhbmEgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KSWYgd2UgYXJlIHBsYXlpbmcgUm9jayBQYXBlciBTY2lzc29ycyBhbmQgeW91IG9ubHkgdXNlIHJvY2ssIEkgd291bGQgdGhlbiBhZGp1c3QgYnkgb25seSB0aHJvd2luZyBwYXBlci4gCkdyZWVud2FsZCBpcyBhIGhhY2sgYW5kIHdpbGwgZGlzcmVnYXJkIGpvdXJuYWxpc3RpYyBzdGFuZGFyZHMgdG8gY2F0ZXIgdG8gYXNzdW1wdGlvbnMgYW5kIG9waW5pb25zIG9mIGhpcyByZWFkZXJzLiBUaGlzIGdvZXMgYmFjayBlYXJseSBpbiBoaXMgY2FyZWVyIHRvIHdoZW4gaGUgd2FzIGNhdWdodCB1c2luZyBzb2NrcHVwcGV0IGFjY291bnRzIG9uIHBvbGl0aWNhbCBmb3J1bXMuIEluIHRoaXMgaW5zdGFuY2UgdGhlIGZvcnVtIGFkbWluIG5vdGljZWQgbXVsdGlwbGUgdXNlcnMgbG9nZ2luZyBpbiBmcm9tIHRoZSBzYW1lIElQIGFkZHJlc3MgYXMgR3JlZW53YWxkIGRpZCwgb25seSB0byBkZWZlbmQgaGltIGluIGlkZW50aWNhbCBsYW5ndWFnZS4KSSBoZWxwIG1hbmFnZXJzIG5hdmlnYXRlIGxlZ2FsIGZyYW1ld29ya3MsIGluZHVzdHJpYWwgcmVsYXRpb25zIGFuZCBvdGhlciBpc3N1ZXMgdGhleSBhcmVuIHRyYWluZWQgdG8gaGFuZGxlLiBNYW5hZ2VycyBkb24gYWxsIGNvbWUgZnJvbSBhIGJ1c2luZXNzIGJhY2tncm91bmQgICBzb21lIGFyZSB0cmFkZXNwZXJzb25zLCBlbmdpbmVlcnMsIGRldmVsb3BlcnMsIGFuZCBzbyBvbi4gVGhleSBhcmVuIGFsd2F5cyAiYm9ybiIgZ3JlYXQgbGVhZGVycy4gVGhlIGxlYWRlcnNoaXAgdGVhbSBhc2sgbWUgZm9yIGFkdmljZSBvbiBob3cgdG8gbWFuYWdlIHBlb3BsZSBiZWNhdXNlIGl0IGlzbiB0aGVpciBiYWNrZ3JvdW5kLCB0aGV5IHRoZSBzdWJqZWN0IG1hdHRlciBleHBlcnRzLiBJIHRoZSBwcm9jZXNzIGV4cGVydC4KU29tZSBwZW9wbGUgY2FuIGhhdmUgYSBmZXcgZHJpbmtzIGhlcmUgYW5kIHRoZXJlLCBvciBldmVuIHJlZ3VsYXJseSwgYW5kIG5vdCBiZSBjb21wcm9taXNlZCBlbW90aW9uYWxseSwgcGh5c2ljYWxseSwgb3Igc3Bpcml0dWFsbHkuIApQb2xpY2U6IFRlZW4gQ2F1Z2h0IE9uIENhbWVyYSBTdGVhbGluZyBQcmljZXkgU2Nob29sIEVxdWlwbWVudEEgdGVlbiBpcyB1bmRlciBhcnJlc3QgYWZ0ZXIgcG9saWNlIHNheSBoZSB3YXMgY2FwdHVyZWQgb24gc3VydmVpbGxhbmNlIHN0ZWFsaW5nIHByaWNleSBlbGVjdHJvbmljIGVxdWlwbWVudCBmcm9tIGFuIGVsZW1lbnRhcnkgc2Nob29sLgpNeSBib2FyZCBjb3ZlcnMgYXJlIDEvNCIgdG90YWwgdGFsbGVyIHRoYW4gdGhlIHRleHQgYmxvY2sgICBzbyAxLzgiIG92ZXJoYW5nIG9uIHRvcCBhbmQgYm90dG9tLiAKU3RlZiBQdXJkeSB3YXMgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRoZSBIZWxsZG9yYWRvIGNvbW1pdHRlZSBmb3Igc2V2ZW4geWVhcnMsIHVudGlsIDE5OTcuIEhpcyBmYXRoZXIsIHRoZSBsYXRlIFJhbHBoIFB1cmR5LCB3YXMgb25lIG9mIHRoZSBmb3VuZGluZyBtZW1iZXJzIG9mIHRoZSBjb21taXR0ZWUuCkFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudCBkaWdpdGFsIHN0b3Jlcy4gCiJPbmNlIHBlb3BsZSB1bmRlcnN0b29kIEkgaGFkIGEgc2l0dWF0aW9uIGFuZCB3YXNuJ3QganVzdCBwaXNzaW5nIG1vbmV5IHVwIHRoZSB3YWxsLCBpdCBiZWNhbWUgZWFzaWVyLiAiSWYgeW91IGhhdmUgdGhhdCBmZWVsaW5nIG9mIGRpc2FwcG9pbnRtZW50LCByZXNlbnRmdWxuZXNzIGFuZCBkaXNndXN0IHRoZW4geW91IGhhdmUgYW4gaXNzdWUuIiBIaW5kbWFyc2ggaXMgbm90IHRyeWluZyB0byBzdG9wIHBlb3BsZSBnYW1ibGluZyAgIGhlIGp1c3Qgd2FudHMgdGhlbSB0byBsZWFybiB0byBkbyBpdCByZXNwb25zaWJseS4gIkl0J3MgYWJvdXQgZWR1Y2F0aW9uLCIgaGUgc2FpZC4gCkRvIHlvdSBsb3ZlIHBsYXlpbmcgcG9rZXI/IElmIHNvLCB0aGVuIHlvdSBzaG91bGQgbWFrZSBzdXJlIHRvIGJ1eSBhIHF1YWxpdHkgcG9rZXIgdGFibGUuIFRoaXMgd2lsbCBoZWxwIHlvdSB0byBlbmpveSBob3VycyB1cG9uIGhvdXJzIG9mIHBva2VyLiBXaGV0aGVyIHlvdSdyZSBhIGZhbiBvZiA3IENhcmQgRHJhdyBvciBObyBMaW1pdCBUZXhhcyBIb2xkICdFbSwgZmluZGluZyB0aGUgcmlnaHQgdGFibGUgd2lsbCBjYXVzZSB5b3VyIGZyaWVuZHMgdG8gY2hvb3NlIHlvdXIgaG9tZSBvbiBlYWNoICJwb2tlciBuaWdodC4iIEhlcmUgYXJlIHNvbWUgdGlwcyB0byBmaW5kIHRoZSByaWdodCByb3VuZCBwb2tlciB0YWJsZSB0b3AgZm9yIHlvdXIgbmVlZHM6CkkgZGlkIGEgR29vZ2xlIHNlYXJjaCBhbmQgY2FtZSBhY3Jvc3MgeW91ciBzaXRlLiAKT25lIHN0dWR5IGF0IEZvcnQgTGV3aXMgQ29sbGVnZSBpbiBEdXJhbmdvIGZvdW5kIFNwaW5hbCBSZWZsZXggQW5hbHlzaXMgYW5kIEF0dGFjaG1lbnQgUG9pbnQgVGhlcmFweSBpbXByb3ZlZCB0aGUgcmFuZ2Ugb2YgbW90aW9uIGFmdGVyIGluanVyeSBhbmQgZGVjcmVhc2VkIHBvc3Qgd29ya291dCB0ZW5kZXJuZXNzIGZvciBjb2xsZWdlIGF0aGxldGVzLiAKVGhpcyByZW1pbmRzIG1lLiBJIGhhdmUgdG8gd3JpdGUgc29tZXRoaW5nIG91dCwgYmVjYXVzZSBJIGhhdmVuIHJlYWxseSwgYW5kIEkgZmVlbCBsaWtlIEkgbmVlZCB0by4KVGhlIDM2IHllYXIgb2xkJ3MgcGVyc29uYWxpdHkgbHVyZXMgcGxheWVycy4gCk5ld2JpZSBGcmllbmRseTogYSBsYW5kIGJhc2VkIGNhc2lubyBjYW4gYmUgYW4gaW50aW1pZGF0aW5nIHBsYWNlIGZvciB0aGUgbmV3YmllIGdhbWJsZXIuIFRoZSBhdmVyYWdlIG9ubGluZSBjYXNpbm8sIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBmYXIgbW9yZSBiZWdpbm5lciBmcmllbmRseSB0aGFuIGl0cyBicmljayBhbmQgbW9ydGFyIGVxdWl2YWxlbnQuIEludGVyYWN0aXZlIHR1dG9yaWFscywgcGxheSBtb25leSBtb2RlcyBhbmQgdGhlIGFsdGVybmF0aXZlIG9mIGF2b2lkaW5nIHNvY2lhbCBlbWJhcnJhc3NtZW50IHRyaWdnZXJlZCBieSBtaXN1bmRlcnN0YW5kaW5nIG9uIHRoZSBndWlkZWxpbmVzIGFuZCBjb2RlcyBvZiBiZWhhdmlvciBpcyByZWFsbHkgYSBleHRyYSBwbGVhc2FudCB3ZWxjb21lIGZvciB0aGUgbm92aWNlIGNhc2lubyBnYW1lciBvciBwb2tlciBwbGF5ZXIuIApNYW55IHdvcmsgdW5jb25zY2lvdXNseSB3aXRoIHRoZSBnb2FscyByZWd1bGFybHkuIApIZXJlIGFyZSBteSBleHBhbmRlZCBpZGVhcyBvbiB3aGF0IGEgbmV3IGNsYXNzIGNvdWxkIGxvb2sgbGlrZS4gSSBtYWRlIHRoaXMgaW4gYSBodXJyeSBhbmQgSSBub3QgYSBnYW1lIGRldmVsb3Blciwgc28gc29tZSBvZiB0aGVzZSBwZXJrcyBjb3VsZCBiZSByZWR1bmRhbnQgb3IgT1AsIGJ1dCBJIHdhbnRlZCB0byBpbmNsdWRlIHRoZW0gdG8gZ2l2ZSBzb21lIGlkZWFzIG9uIGhvdyB0aGV5IGNvdWxkIHdvcmsgd2l0aCB0aGUgbmV3IGhlcm8gbG9hZG91dHMuIFBsZWFzZSBsZXQgbWUga25vdyB3aGF0IHlvdSB0aGluay4gCkknbSBhbiBhYnN0YWluZXIuIEkgd29uJ3QgZWF0IHRoZSBvbmUgcGllY2UsIEknbGwgZWF0IGFzIG11Y2ggY2hvY29sYXRlIGFzIEkgd2FudCAod2hpY2ggaXMgYWxsIG9mIGl0KS4gQnV0IGlmIEkgdGVsbCBteXNlbGYgIm9oLCBJIGRvbid0IGVhdCBzdWdhciBhbnltb3JlLCBJJ20gbmV2ZXIgZWF0aW5nIFMnTW9yZXMgYWdhaW4uIiBJJ20gYWN0dWFsbHkgYmV0dGVyIG9mZiBhbmQgY2FuIHJlZ3VsYXRlIG15c2VsZiBqdXN0IGZpbmUuIApEYXZpZCBBdHRlbmJvcm91Z2gsIHdobyBwcmFpc2VkIElyd2luIG1hbnkgdGltZXMsIGNyaXRpY2lzZWQgdGhlIGVhcmxpZXIgc3R1ZmYgaGUgZGlkLiAKQW4gYXJvbWF0aGVyYXB5IGxhbXAuIFRvIHVzZSBhbiBhcm9tYXRoZXJhcHkgbGFtcCwgeW91J2xsIHdhbnQgdG8gYWRkIHlvdXIgY2hvc2VuIGVzc2VudGlhbCBvaWwgdG8gYSBiYXNpbiB3aXRoIHdhdGVyIGFuZCBhIGNhbmRsZSBpcyBsaXQgYmVuZWF0aCBpdC4gSW4gYSBzaG9ydCBhbW91bnQgb2YgdGltZSwgdGhlIHNjZW50IGlzIHNwcmVhZCB0aHJvdWdob3V0IHRoZSByb29tLgpUaGUgYnJpZ2h0bmVzcyBkb2VzIHNvdW5kIGEgbGl0dGxlIG9kZC4gV2hhdCBraW5kIG9mIGd1aXRhciBhcmUgeW91IHVzaW5nPyBZb3UgY291bGQgdHJ5IGp1c3Qgcm9sbGluZyBiYWNrIHRoZSB0b25lIGtub2Igb24gdGhlIGd1aXRhciBhIGxpdHRsZSBiaXQsIHRoYXQgbWlnaHQgbWVsbG93IHRoaW5ncyBvdXQgYSBsb3QuCjUgUmVsYXhpbmcgTW92aWVzIG9uIE5ldGZsaXggdG8gQ2hpbGwgV2l0aCBUaGlzIFdlZWtlbmQKV2h5IGlzIHRoaXMgYSBzdXJwcmlzZSB0aGF0IHRoZSBSdXNzaWFucyBmaW5hbGx5IGdvdCBzaWNrIG9mIHRoZSBseWluZyBhbmQgdG9vayBzb21lIGFjdGlvbi4gSSB0aGluayBpdCBpcyBkZXNlcnZlZCAodGhvdWdoIG15IHByZWZlcmVuY2Ugd291bGQgYmUgdGhhdCB0aGV5IGFycmVzdCB0aGUgbWlzc2lvbiBwcmVzaWRlbnQgYW5kIGdpdmUgdGhlIHRlZW5hZ2UgcGF0c2llcyA0OCBob3VycyB0byBkZXBhcnQgdGhlIGNvdW50cnkpLgpDb21wYW55IGlzIGJhc2VkIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgU2VydmljZXMgYXJlIHByb3ZpZGVkIGZyb20gdGhlIFVuaXRlZCBTdGF0ZXMuIApNeSBtb20gd2Fsa3MgaW4gYSBzaG9wIGFuZCBzaGUgaXMgb3V0IGEgZmV3IG1pbnV0ZXMgbGF0ZXIuIApUbyBhZGQgYSB2b2x1bnRlZXIgb3Bwb3J0dW5pdHkgb24gYmVoYWxmIG9mIHlvdXIgb3JnYW5pemF0aW9uLCBjb21wbGV0ZSB0aGUgU3VibWl0IGEgVm9sdW50ZWVyIE9wcG9ydHVuaXR5IGZvcm0sIGluY2x1ZGluZyBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZXZlbnQsIHlvdXIgb3JnYW5pemF0aW9uJ3MgbWlzc2lvbiwgYW5kIHRoZSB2b2x1bnRlZXIgYXNzaWdubWVudHMuIApXaGVuIEkgZ2V0IHRoZSBmdWxsIDV4NSBvZiBhIHdlaWdodCBJIGluY3JlYXNlIGJ5IDVsYiB0aGUgbmV4dCB0aW1lIGFuZCBkbyB0aGF0IHdlaWdodCB1bnRpbCBJIGdldCBpdC4gSSBhbSBnZXR0aW5nIHN0cm9uZ2VyIGJ1dCBpdCBzZWVtcyB0b28gc2xvdy5ZZXN0ZXJkYXkgZm9yIGJlbmNoIEkgZGlkIDE3MHg0LDUsNCwzLDMuIApVcCBPUiBtZWV0dXAgT1IgbWVldCBBTkQgdXAKSSBoYXZlIHNjb3VyZWQgdGhlIGJvb2tzIGZvciB2YXJpb3VzIGFiaWxpdGllcyB0aGF0IGFsbG93IHVuaXRzIHRvIG1vdmUgb3V0c2lkZSB0aGUgbW92ZW1lbnQgcGhhc2UsIGFuZCBzbyBmYXIgQUxMIG9mIHRoZW0sIGV2ZXJ5IHNpbmdsZSBvbmUgSSBoYXZlIHJlYWQgb3RoZXIgdGhhbiBWTVQsIGhhcyBzYWlkICJhcyBpZiBpdCB3ZXJlIHRoZSBtb3ZlbWVudCBwaGFzZSIuIFNvIHBlcmhhcHMgaXQgaXNuIGV2ZW4gYW4gb3ZlcnNpZ2h0LiAKVG9yb250byBEb21pbmlvbiwgQ2FuYWRhIHNlY29uZCBsYXJnZXN0IGxlbmRlciBieSBhc3NldHMsIHNldCBhc2lkZSAkODUwIG1pbGxpb24gZm9yIHNvdXJlZCBsb2FucyBpbiB0aGUgcXVhcnRlciBlbmRlZCBKYW4uIDMxLCB1cCAyMyBwZXIgY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyIGFuZCB0aGUgaGlnaGVzdCBsZXZlbCBpbiBhdCBsZWFzdCB0d28geWVhcnMuIApXZSBhbHNvIGRvbiBoYXZlIGFueSAiY2FtcHMiIHdoZXJlIHBlb3BsZSBqdXN0IGhhcHBlbiB0byBkaWUuIApEb24gcnVzaCB0byBHVE8gYmVjYXVzZSBldmVyeW9uZSAiZG9pbmcgaXQiLiBXaXRob3V0IGdvb2QgZnVuZGFtZW50YWxzLCB5b3UgYmUgbG9zdC4gSmFuZGEgYW5kIENpY2h5IGJvdGggaGF2ZSBib29rcyBvbiBtb2Rlcm4gcG9rZXIgdGhlb3J5IHRoYXQgbWFrZXMgYSBncmVhdCBuZXh0IHN0ZXAgYWZ0ZXIgdGhlIGZ1bmRhbWVudGFscy4gQWxzbywgYWx0aG91Z2ggbm8gb25lIHJlYWxseSB0YWxrcyBhYm91dCBleHBsb2l0YXRpdmUgcG9rZXIgYW55bW9yZSwgaXRzIHN0aWxsIGltcG9ydGFudCB0byBoYXZlIHRoaXMgc3RyYXRlZ3kgYXMgcGFydCBvZiB5b3VyIGdhbWUuIEVkIE1pbGxlciBQbGF5aW5nIHRoZSBQbGF5ZXIgYW5kIEpvbmF0aGFuIExpdHRsZSBTdHJhdGVnaWVzIGZvciBCZWF0aW5nIFNtYWxsIFN0YWtlcyBQb2tlciBDYXNoIEdhbWVzIHdpbGwgY292ZXIgbW9zdCBvZiB3aGF0IHlvdSBuZWVkIHRvIGtub3cuCkluZGljYXRvcnM6IEluZGljYXRvcnMsIHN1Y2ggYXMgYXV0b2NsYXZlIHRhcGUsIGluZGljYXRlIHdpdGggYSB2aXNpYmxlIGNvbG91ciBjaGFuZ2UgdGhhdCB0aGV5IGhhdmUgYmVlbiB0aHJvdWdoIHRoZSBhdXRvY2xhdmUgcHJvY2Vzcy4gQXQgdGhlIGVuZCBvZiB0aGUgYXV0b2NsYXZlIGN5Y2xlLCBpbmRpY2F0b3JzIHNob3VsZCBiZSBjaGVja2VkIHRvIGVuc3VyZSB0aGV5IGhhdmUgY2hhbmdlZCBjb2xvdXIuCkxldCBub3QgZXZlbiB0YWxrIGFib3V0IGxhY2sgb2Ygc2xlZXAgYW5kIGhhdmluZyB0byBiZSBpbiB5b3VyIHRvcCBzaGFwZSBmb3IgZG9pbmcgeW91ciB3b3JrIHdlbGwuIApTbyB3ZWxsIHdhcyB0aGUgd2hvbGUgcHJvY2VzcyBzaW11bGF0ZWQsIHRoYXQgSSBzaG91bGQgaGF2ZSBiZWVuIHF1aXRlIGRlY2VpdmVkLCBoYWQgSSBub3Qgc2VlbiB0aGF0IHRoZSBmbHkgd2FzIHN0aWxsIHVwb24gdGhlIHdpbmRvdy4gCkljaCBoYXR0ZSBkZW4gVmVyZ2xlaWNoIG1pdCBLdWJhIHVuZCBWZW5lenVlbGEgendhciBuaWNodCwgYWJlciBpY2ggYmluIHJlZ2VsbWlnIGluIEtvbHVtYmllbiwgd2VpbCBtZWluZSBTY2h3aWVnZXJmYW1pbGllIHZvbiBkb3J0IChNZWRlbGxuKSBpc3QuIApMZWFmcyBkZWZlbmNlbWFuIE1hcmsgRnJhc2VyIGxlZnQgdGhlIGdhbWUgd2l0aCBhbiB1bmRpc2Nsb3NlZCBpbmp1cnkgYWZ0ZXIgcGxheWluZyBmaXZlIHNoaWZ0cyBhbmQgMzo1NCBpbiB0aGUgZmlyc3QgcGVyaW9kLgpUaGUgc2hvdydzIGNyZWF0b3IgaXMgRXJpYyBLcmlwa2UsIHdobyB3cm90ZSB0aGUgc2NyZWVucGxheSBmb3IgdGhlIDIwMDUgbW92aWUgQm9vZ2V5bWFuLiBIZSB3YXMgb2ZmZXJlZCBjcmVhdGl2ZSBjb250cm9sIG9mIGEgVFYgc2hvdyBpbiBleGNoYW5nZSBmb3IgYSBwcm9taXNlIHRvIG5ldmVyLCBldmVyIHdyaXRlIGEgbW92aWUgYWdhaW4uIEZvciBzb21lIHJlYXNvbiwgcG9zc2libHkgaW52b2x2aW5nIGJsYWNrbWFpbCwgYSBzaXplYWJsZSBudW1iZXIgb2YgcHJvZHVjZXJzIGFuZCBkaXJlY3RvcnMgZnJvbSB0aGUgWCBGaWxlcyB0aGVuIGpvaW5lZCBvbiB0byB0aGUgc2hvdy4gCkhleSBJIGFtIGEgZm9yZWlnbiBDRU8gb2YgYSB3ZWxsIGtub3duIGdsb2JhbCBzdGFydHVwIGJhc2VkIGluIEtvcmVhIGFuZCBJIGFsc28gaGF2ZSBhIGRldmVsb3BtZW50IGFnZW5jeSBvbiB0aGUgc2lkZSBhcyBhIHBlcnNvbmFsIHByb2plY3QuIE15IGludGVyZXN0IGlzIGluIGRldmVsb3BtZW50IGRlc2lnbiAgIEkgYmVlbiBkb2luZyBib3RoIHNpbmNlIEkgd2FzIDE2LgpCaWdnZXN0IHRpcCBpcyB0byB1bmRlcnN0YW5kIHRoYXQgeW91IGNhbiBwcmV2ZW50IHNoZWRkaW5nLCBhbmQgdGhhdCBiZWluZyB1cHNldCBvciBub3QgdXBzZXQgYnkgZ2lhbnQgdHVtYmxld2VlZHMgb2YgZG9nIGhhaXIgaXMgYSBjaG9pY2UuIFlvdSBqdXN0IG5lZWQgdG8gbGV0IGdvIG9mIHRoZSBpZGVhIG9mIGEgbWFnYXppbmUgcmVhZHkgcHJpc3RpbmUgaG9tZSAob3IsIHJlYWxseSwgYmFzaWMgY2xlYW5saW5lc3MpLiBTaGVkZGluZywgY2xhdyBtYXJrcyBpbiB0aGUgZmxvb3JpbmcsIG9jY2FzaW9uYWwgYWNjaWRlbnRzLiBTdHVmZiB0YWlsIGVkIG92ZXIuIEl0IGFsbCBwYXJ0IG9mIHRoZSBnYW1lLgpBIHRlbGwgaW4gcG9rZXIgaXMgc29tZXRoaW5nIHRoYXQgZ2l2ZXMgYXdheSB0aGUgb3Bwb25lbnQncyBoYW5kLiBUaGlzIGlzIGEgcG93ZXJmdWwgd2VhcG9uIHRoYXQgYSBwb2tlciBwbGF5ZXIgc2hvdWxkIGtub3cgc2luY2UgaXQgaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBrZXlzIHRvIHdpbm5pbmcgYSBnYW1lIG9mIHBva2VyLiBXaGVuIG9uZSBvYnNlcnZlcyBhbiBvcHBvbmVudCwgc29tZXRpbWVzIHRoZXkgd291bGQgcmVhY3QgdW5rbm93aW5nbHkgb3IgZG8gc29tZXRoaW5nIHRoYXQgY2FuIHRpcCB5b3Ugb24gd2hhdCB0aGUgdmFsdWUgb2YgdGhlaXIgaGFuZCBpcy4KMS4gV2hlbiBwbGF5ZXJzIGJ1eSBpbnRvIGEgZ2FtZSBpbiBhIGxvdyBrZXkgbWFubmVyLCBoaWRpbmcgdGhlaXIgbW9uZXksIHlvdSBjYW4gZXhwZWN0IHRoZW0gdG8gcGxheSBjb25zZXJ2YXRpdmVseS4gQ29udmVyc2VseSwgaWYgdGhleSBmbGFzaCB0aGVpciBtb25leSwgY2FsbGluZyBmb3IgY2hpcHMgd2l0aCBhIGZsYWlyLCB0aGV5J2xsIHVzdWFsbHkgcGxheSByZWNrbGVzc2x5LiAKVXNlIHRob3NlIHJlc291cmNlcyAobm90IHVzZSB5b3Uga25vdyB3aGF0IEkgbWVhbikgYXMgbXVjaCBhcyB5b3UgY2FuLiAKSW4gMTk5NSwgQ3ViYW4gYW5kIGZlbGxvdyBJbmRpYW5hIFVuaXZlcnNpdHkgYWx1bW51cyBUb2RkIFdhZ25lciBzdGFydGVkIEF1ZGlvbmV0LCBjb21iaW5pbmcgdGhlaXIgbXV0dWFsIGludGVyZXN0IGluIGNvbGxlZ2UgYmFza2V0YmFsbCBhbmQgd2ViY2FzdGluZy4gCkV2ZW4gdGhlIG5ldyBhZG1pdHMgZG9uJ3Qgd2FudCB0byBzdGF5IHBhcnRpY3VsYXJseSBsb25nLCBiZWNhdXNlIHRoZXkgZmVhciB0aGF0IGEgZGlhZ25vc2lzIG9mIGVwaWxlcHN5IHdpbGwgcHJldmVudCB0aGVtIGZyb20gd29ya2luZyBvciBkcml2aW5nLiBTbyB5ZWFoLCB5b3UncmUgbm90IGFsb25lLiBQYXRpZW50cyB3aXRoIGNocm9uaWMgY29uZGl0aW9ucyB3aG8gaGF2ZSB0cm91YmxlIHRha2luZyBtZWRpY2F0aW9ucyB0aGF0IGtlZXAgdGhlbSBmcm9tIGhhdmluZyBhIGxpZmUgdGhyZWF0ZW5pbmcgZXhhY2VyYmF0aW9uIGFyZSBrbm93biB0byBhbGwgc3BlY2lhbHRpZXMuLiAKVGhhdCB3aHkgdGhleSBwdWJsaXNoZWQgdGhpcyBzdG9yeSwgZGVzcGl0ZSBpdCBiZWluZyBhIG5vbiBzdG9yeS4gCkdvb2dsZSBhbmQgRmFjZWJvb2sgbWF5IGhhdmUgcGFpZCBmb3IgbHVuY2ggKGFuZCBnaXZlbiBzcG9uc29yZWQgcHJlc2VudGF0aW9ucyBvbiBUaHVyc2RheSBhbmQgRnJpZGF5KSwgYnV0IG1hcmtldGVycyB3ZXJlIHN0aWxsIGdydW1ibGluZyBhYm91dCBob3cgZGlmZmljdWx0IGl0IGlzIHRvIGdldCBkYXRhIG91dCBvZiB0aGVtLCBhIHBoZW5vbWVub24ga25vd25zIGFzICJ3YWxsZWQgZ2FyZGVucy4iIEEgaG90IHRvcGljIGFtb25nIEFOQSBib2FyZCBtZW1iZXJzLCB3aG8gbWV0IHByaXZhdGVseSwgaXMgdGhlIGRpZmZpY3VsdHkgb2YgZ2V0dGluZyBjb25zdW1lciBkYXRhIGFjcm9zcyBkaWdpdGFsIHBsYXRmb3JtcyB0byBkbyB0aGluZ3MgbGlrZSBwcmV2ZW50IHBlb3BsZSBmcm9tIGJlaW5nIGludW5kYXRlZCB3aXRoIHRoZSBzYW1lIGFkcywgYWNjb3JkaW5nIHRvIFAgUHJpdGNoYXJkLCB3aG8gaXMgY2hhaXJtYW4gb2YgdGhlIGJvYXJkLgpKYXkgZ290IG91dCBoaXMgZmVlbGluZ3MgKGhvcGUgaGUgaXMgZmluYWxseSBoYXBweSBub3cgYW5kIGNhbiBkcm9wIHRoaXMpIHNvIGhvcGVmdWxseSBoZSBmZWVscyBiZXR0ZXIgbm93KCBldmVuIHRob3VnaCBoZXMgYSBtaWxsaW9uYWlyZSkgYW5kIGNhbiBnbyBvbiBiYWNrIHRoZSBwb2tlciB0YWJsZXMgYW5kIHdpbiB0aGF0IDEwMGsgYmFjayBpbiBhIGZldyBtb250aHMuIApPaCwgamVsbHkgYmVhbiwgZXNlIGR1bGNlIGNvbmZlY2NpbiBvdmFsIHF1ZSBlcyBlbCBwaWxhciBkZSBsYSBjYW5hc3RhIGRlIFBhc2N1YSBjYXJhbWVsb3MuIExvcyBwYWRyZXMgY29uZmFuIGVuIGVsIGVjb25taWNhIGplbGx5IGJlYW4gYSBncmFuZWwgaGFzdGEgbGEgY2VzdGEgeSB1dGlsaXphciBtYWx0ZWFkYSBodWV2b3MgeSBjb25lam9zIGRlIGNob2NvbGF0ZSBtcyBjYXJvcyBjb21vIGd1YXJuaWNpbi4gClNoaW5zZWkgb2ZmZXJzIHRoZSBiZXN0IGV4Y2hhbmdlIHJhdGVzIEkgaGF2ZSBzZWVuIGZyb20gYSBjb25zdW1lciBiYW5rLCBhbmQgdGhleSBkb24gY2hhcmdlIHRvIHJlY2VpdmUgd2lyZXMuIEEgd2lyZSB3aWxsIGFsc28gYmUgZGVwb3NpdGVkIGluIHRoZSBjdXJyZW5jeSBpdCBhcnJpdmVzIGluIGFuZCB0aGVuIHlvdSBjYW4gZmxpcCBpdCB0byBKUFkgd2hlbiB5b3UgcmVhZHkuClJlcGVhdCB0aGlzIGRvd253YXJkIGNvbWJpbmcgc2V2ZXJhbCB0aW1lcy4KVU5PIGlzIGNvbW1pdHRlZCB0byBwcm92aWRpbmcgYSBzYWZlLCBzZWN1cmUsIGFuZCBldGhpY2FsIGNhbXB1cyBlbnZpcm9ubWVudC4gVU5PIHJlbGllcyBvbiB5b3UgdG8gc3BlYWsgdXAgaWYgeW91IGJlbGlldmUgeW91IGhhdmUgb2JzZXJ2ZWQgdW5ldGhpY2FsLCBpbGxlZ2FsLCBvciBzdXNwaWNpb3VzIGJlaGF2aW9yLgpMb2wgYnV0IEkgbGlrZSBzdGltcyBiZWNhdXNlIHRoZXkgZ28gYWdhaW5zdCBteSBuYXR1cmFsIHRlbXBlcmFtZW50IGFuZCBzbyBldmVuIHRob3VnaCBJIGhhdmluZyBhIGdyZWF0IHRpbWUsIG15IGJyYWltIGNsZWFybHkgZG9lc24gbG9jayBhbmQga2V5IGl0IHRoZSBzYW1lIHdheS4gCkxpc3RlbiB0byB5b3VyIGxhd3llci4gCllvdSBjYW4gZWFzaWx5IGp1c3QgcmVtb3ZlIGFsbCB0aGUgY29tbWVudHMgYW5kIHRoZW4gYmFuIGFsbCB0aGUgb2ZmZW5kaW5nIHVzZXJzIGJlZm9yZSB0aGUgZGFtYWdlIGlzIGRvbmUgZXZlbiBpZiB5b3VyIGVudGlyZSB0ZWFtIGhhcHBlbnMgdG8gYmUgb25saW5lIGFuZCByZWFkeSB0byBoZWxwLiAKIi4gCkZvcmVzdGVyIGhlcmUuIE5vIHRyZWUgaW4gdGhlIGJvcmVhbCBmb3Jlc3QgbGl2ZXMgYW55d2hlcmUgY2xvc2UgdG8gMTAwMCB5ZWFycy4gTWF5YmUgYW4gRWFzdGVybiBXaGl0ZSBDZWRhciBpbiB0aGUgcGVyZmVjdCBlbnZpcm9ubWVudC4gSG93ZXZlciBDZWRhcnMgYXJlIE5PVCB1c2VkIGluIHRoZSBwYXBlciBtYWtpbmcgcHJvY2Vzcy4gQmxhY2sgU3BydWNlIGlzIHRoZSBsYXJnZXN0IHNwZWNpZXMgdXNlZCwgd2hpY2ggbWlnaHQgbGl2ZSB0byAxNTAgeXJzLiBNYXliZS4gVGhpcyBwb3N0IGlzIHNvIGlnbm9yYW50IHRvIHNjaWVuY2UsIGluIHRoZSBCb3JlYWwgZm9yZXN0IHRoZSB1c3VhbCByb3RhdGlvbiBhZ2Ugb2YgYSBzaW5nbGUgZm9yZXN0IHJhbmdlcyBmcm9tIDgwIDMwMCB5ZWFycyBkZXBlbmRpbmcgb24gdGhlIGZpcmUgY3ljbGUuIFRoaXMgaXMgdGhlIHNhbWUgYXMgdGhlIGhhcnZlc3QgY3ljbGUuIEFsbCB0cmVlcyBhcmUgcmVwbGFudGVkIGFuZCByZWdyb3cuIElmIHRoZXkgd2VyZSBub3QgaGFydmVzdGVkIHRoZXkgd291bGQgbm90IGp1c3QgY29udGludWUgdG8gbGl2ZS4gVGhlcmUgaXMgYSB0aGluZyBjYWxsZWQgc2VuZXNjZW5jZSB0aGF0IGFmZmVjdHMgYWxsIGxpdmluZyBvcmdhbmlzbXMsIHRyZWVzIGluY2x1ZGVkLiBKYWNrIFBpbmUgYW5kIEJsYWNrIFNwcnVjZSB3aWxsIG5vdCBsaXZlIDIwMCB5ZWFycy4gVGhpcyBwb3N0IGlzIGJleW9uZCBtYWRlIHVwLiBObyBmYWN0dWFsIGluZm8gYXQgYWxsLiBFbnZpcm9ubWVudGFsIGdyb3VwcyBkbyBOT1QgZW1wbG95IGZvcmVzdGVycyBvciBhbnlib2R5IHdpdGggYSBmb3Jlc3Qgc2NpZW5jZSBkZWdyZWUuIFRoaXMgcG9zdCBjb3VsZCBub3QgYmUgbW9yZSBtaXNsZWFkaW5nCkRldGVybWluZSB0aGUgbnVtYmVyIG9mIG91dHMgYXZhaWxhYmxlIHRvIHlvdS4gCkJhc2ljIFN0ZXBzIHRvIFBsYXlpbmcgQmxhY2tqYWNrCkhlIHdvdWxkIHNpdCBvbiB0aGVpciBiYWxjb255IGFuZCBsb29rIG91dCBvdmVyIG91ciB0aW55IGNpdHkvdG93biwgYnV0IHdoYXQgaGUgd2FzIGxvb2tpbmcgYXQgd2FzIHRoZSByaXZlciBhbmQgdmlsbGFnZSB3aGVyZSBoZSBncmV3IHVwLi4gClNvIHRoZXkgbWFrZSBtaXN0YWtlcywgYnV0IGFsc28gMiBqdWRnZXMgdGhhdCBtYWtlIHdlaXJkIGNhbGxzIG1heSBiZSBzdWJqZWN0IHRvIHRoZSBzYW1lIGlzc3VlcyB0aGF0IGNhdXNlZCB0aGVtIHRvIGp1ZGdlIHRoYXQgd2F5Lkl0IHdvdWxkIHRha2UgbW9yZSwgaXMgd2hhdCBJIHNheWluZy4gMjQ0IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnb1llYWggSSBtZXQgTWFyYyBHb2RkYXJkIGJlZm9yZSB0b28uIAo0KSBNaWNoZWxsZTogMTkzMCAyMTAwLCAxNTBFLCBNb2xkb3ZhbiwgMTY4Y20sIHByZXR0eSwgc2xpbSwgQSBjdXAsIGxvbmcgZGFyayBibG9uZGUsIHR3byBhbmQgYSBoYWxmIHllYXJzIGF0IFNoYXJrcyBhZnRlciBvbmUgYW5kIGEgaGFsZiB5ZWFycyBhdCBXb3JsZC4gSW4gYSByb29tIDUgbWluIGNhcmVzc2luZywgMjUgbWluIERBVFkgd2l0aCBjb21wbGV0ZWx5IG5vIHJlYWN0aW9uIG9uIGhlciBzaWRlLCAxMCBtaW4gQkosIDEwIG1pbiBjb3dnaXJsLCA1IG1pbiBtaXNzaW9uYXJ5LCBwaWxsb3cgdGFsayBhYm91dCBob3cgdG8gbGVhZCBoZXIgdG8gZWNzdGFzeSBhbmQgNSBtaW4gREFUWSBhcyBwcmVwIGZvciBvdXIgdG9tb3Jyb3cncyAzIGhvdXIgbGVzc29uLiBTaGUgZGVtYW5kZWQgdGhyZWUgIG9yIGxvbmdlciBob3VyIHNlc3Npb25zIHRvIGtpc3MsIGJ1dCBJIGFtIHN0aWxsIHdvbmRlcmluZyBpZiBJIHdvdWxkIHJlYWxseSB0YWtlIHRoZSAzIGhvdXIgbGVzc29uIGFib3V0IGhlciBvcmdhc20gdG9tb3Jyb3cuIFdlIHdpbGwgc2VlLiBMZWZ0IDIyMzAKSSBoYXZlIHRoZSBwaG9uZS4gU2hlIGhhbmRzIGhpbSB0aGUgcGhvbmUgYW5kIGhlIGNhbGxzIGhpcyBtb20uIApTYWlkIGhlIHNhdyBubyBsZXR1cCBpbiBIYW5vaSdzIHdhciBlZmZvcnRzLiAKVGhhdCdzIHNvbWV0aGluZyB0aGF0IEkgZm91bmQgaXMgdHJ1ZSwgYnV0IGlmIHlvdSBsb29rIGFyb3VuZCB0aGVyZSBzaG91bGQgYmUgc21va2Ugc2hvcHMgd2hvIGhhdmUgdGhlbSBmb3IgdmVyeSBkZWNlbnQgcHJpY2VzLiAKSSB3b3VsZCBhc3N1bWUgdHJhaW5pbmcgdGhlIEFJIGZvciBNZXRybyB3b3VsZCBiZSBtb3JlIGRpZmZpY3VsdCB0aGFuIEJGVi4gCkluIEJhZ2hkYWQsIHdvbWVuIGJ1eSBuZXcgbm9zZXMgYmVsaWV2aW5nIHRoYXQgYSBuZXcgZmFjZSB3aWxsIGxlYWQgdG8gYSBkaWZmZXJlbnQgZnV0dXJlIGluIHRoZWlyIHdhciB0b3JuIGNvdW50cnkuClBsdXMgZ3JhdmUsIGwnYWx0cmF0aW9uIGRlIHF1ZWxxdWVzIHVucyBkZXMgdGV4dGVzLiAKSGUga25ldyB0aGF0IGl0IHdvdWxkIGJyaW5nIGhpbSBib3RoIGZhbWUgYW5kIGZvcnR1bmU7IGJ1dCB3aGVuIGhlIGhhZCB3cml0dGVuIHRoZSBsYXN0IGxpbmUgb2YgaXQgaGUgaGFkIGJvd2VkIGhpcyBoZWFkIG9uIHRoZSBtYW51c2NyaXB0IGFuZCBzbyBzYXQgZm9yIGEgbG9uZyB0aW1lLiAKIlRoaXMgaXMgZGVzcGl0ZSBzdHJvbmcgY291bmNpbCBhbmQgY29tbXVuaXR5IG9iamVjdGlvbnMgaW4gbW9yZSB0aGFuIGhhbGYgb2YgdGhlc2UgYXBwbGljYXRpb25zLCIgQ3IgR2FmZm5leSBzYWlkLiAKQm90dG9tIGxpbmU6IEIsIE5pY2UgdGV4dHVyZSBhbmQgYmFsYW5jZSBvdmVyYWxsCkplbm55Ym9vbWJhdHogIDg3IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvClRoaXMgbWVhbnMgU2luZ2Fwb3JlYW5zIHVuZGVyc3RhbmQgdGhhdCB2b3RpbmcgaW4gYSBiYWQgZ292ZXJubWVudCBjb3VsZCBsZWFkIHRvIGEgcGx1bmdlIGluIHByb3BlcnR5IHZhbHVlcyBhbmQgYSBsb3NzIG9mIGpvYnMsIE1yIExlZSBhZGRlZC4gZG9uIGtub3cgdGhlIGVjb25vbWljIHJhdGlvbmFsZSBiZWhpbmQgaXQuIEV2ZXJ5Ym9keSBoYXMgYSBzdGFrZSwgZXZlcnlib2R5IGhhcyB0byBwZXJmb3JtLgpCbGFjayBhbmQgQnJvd24gcGVvcGxlKSBzZW50aW1lbnRzIHRoYXQgZnVlbGVkIGhlciBjYW5kaWRhY3kgaW4gdGhlIGZpcnN0IHBsYWNlLiBQZXJoYXBzIHdoYXQgUGFsaW4gc2hvdWxkIGhhdmUgY2FsbGVkIGhlciBib29rIGlzICJHb2luZyBCYWNrIiB0byBhIHRpbWUgd2hlbiBydXJhbCwgd2hpdGUsIGFuZCBtYXJyaWVkIEFtZXJpY2EgcnVsZWQgdGhlIGxhbmQuIEJ1dCB0aGVuIHNoZSBwcm9iYWJseSB3b3VsZG4gaGF2ZSBnb3R0ZW4gdGhhdCBodWdlIGFkdmFuY2UgYW5kIGJlZW4gYWJsZSB0byBvZmZlciBoZXIgcG9ybiBhY3RvciB3b3VsZCBiZSBzb24gaW4gbGF3IGEgdGlja2V0IGhvbWUgZm9yIHRoZSBob2xpZGF5cy5JdCBub3QgdGhhdCBJIGxpa2UgYmVpbmcgbGlzdGVkIGFzIGEgU2FyYWggUGFsaW4gc3VwcG9ydGVyIG9uIEZhY2Vib29rLiAKVGhleSBsb3ZlIGFwcHJvYmF0aW9uIG9yIHByYWlzZTsgYW5kIGEgZG9nIGNhcnJ5aW5nIGEgYmFza2V0IGZvciBoaXMgbWFzdGVyIGV4aGliaXRzIGluIGEgaGlnaCBkZWdyZWUgc2VsZiBjb21wbGFjZW5jeSBvciBwcmlkZS4gCldyb3RlLiAKTm8gYmV0dGVyIHBsYWNlIHRvIGNyYWNrIGpva2VzIHRoYW4gdGhlIHBsYWNlIGEgcHJlc2lkZW50IHdhcyBhc3Nhc3NpbmF0ZWQsIHJpZ2h0PyBPdXQgb2YgdGhlIGNvbGQsIGJhY2sgd2VzdCB3YXMgdGhlIGVxdWFsbHkgc3RhdHVlc3F1ZS4uIApJZiBJIHdlcmUgdG8gdGFrZSBhIHdpbGQgZ3Vlc3MsIEkgaW1hZ2luZSBoZWFkcyB1cCBwb2tlciB3aWxsIGJlIHNvbHZlZCB0byBhIHNpbWlsYXIgZGVncmVlIGFzIGNoZXNzIHdpdGhpbiA1IHllYXJzLCBhbmQgbXVsdGkgd2F5IHdpdGhpbiAxMCB5ZWFycy4KWnVtaW5kZXN0IHNvIGxhbmdlIG1hbiBpbiBkZW4gU3QgYmxlaWJ0LiBBdWYgZGVtIExhbmRlIGlzdCBDaGluYSBhdWNoIGhldXRlIG5vY2ggdmllbGVyb3J0cyBzbyB3aWUgdm9yIGRlbSBncm8gV2lydHNjaGFmdHNhdWZzY2h3dW5nLCBkZXIgdm9yIGNhLiAKV2UgbmV2ZXIgZG9uZSBhbnl0aGluZyBpbmFwcHJvcHJpYXRlLiAKSSBsb3ZlIHRoZSB3b3JrIGFuZCBzb21lb25lIGlzIHdpbGxpbmcgdG8gcGF5IG1lIGZvciBpdC4gSWYgdGhleSBkaWQgSSB3b3VsZCBjYWxsL3RleHQgYmFjayBhbiBlcXVhbCBudW1iZXIgb2YgdGltZXMuIApJIHRoaW5rIEkganVzdCBoYXZlIGdlbmV0aWNhbGx5IGJhZCBhbmQgZGVmaWFudCAyYi9jIGhhaXIgOiguIApDb2xsaW5nZSBXLCBLYWhuIEosIFNvbHR5c2lrIFI6IFByb21vdGluZyByZWludGVncmF0aW9uIG9mIE5hdGlvbmFsIEd1YXJkIHZldGVyYW5zIGFuZCB0aGVpciBwYXJ0bmVycyB1c2luZyBhIHNlbGYgZGlyZWN0ZWQgcHJvZ3JhbSBvZiBpbnRlZ3JhdGl2ZSB0aGVyYXBpZXM6IGEgcGlsb3Qgc3R1ZHksIE1pbCBNZWQgMTc3KDEyKToxNDc3IDQ4NSwgMjAxMi4KIlNwaW5hbCBtYW5pcHVsYXRpdmUgdGhlcmFweSAoU01UKSBoYXMgYmVlbiByZWNvZ25pemVkIGFzIGFuIGVmZmVjdGl2ZSB0cmVhdG1lbnQgbW9kYWxpdHkgZm9yIG1hbnkgYmFjaywgbmVjayBhbmQgbXVzY3Vsb3NrZWxldGFsIHByb2JsZW1zLiBPbmUgb2YgdGhlIG1ham9yIGlzc3VlcyBvZiB0aGUgdXNlIG9mIFNNVCBpcyBpdHMgc2FmZXR5LCBlc3BlY2lhbGx5IHdpdGggcmVnYXJkcyB0byBuZWNrIG1hbmlwdWxhdGlvbiBhbmQgdGhlIHJpc2sgb2Ygc3Ryb2tlLiAKSSB3YXMgcHJldHR5IGh1cnQhIExpa2UuIApXaGV0aGVyIHRoaXMgd29ya3MgYW5kIHRoZSBpZGVhcyBzcHJlYWQgaXMgYWxzbyBkZXRlcm1pbnNpdGljLCBidXQgaXQgZG9lc24gbWFrZSBzZW5zZSB0byBub3QgZG8gYW55dGhpbmcgYmVjYXVzZSBleGlzdGVuY2UgaXMgZGV0ZXJtaW5pc3RpYy4gCkEgR3VpZGUgb24gSG93IHRvIFBsYXkgUG9rZXIgZm9yIEJlZ2lubmVycwpZb3Uga25vdyB3aGVuIHlvdSBnZXQgYSBkZWFkIGxlZywgaG93IHRoZSBwYWluIGlzIGludGVuc2UsIGFuZCB0aGVuIGZhZGVzPyBUaGF0IHByZXR0eSBtdWNoIGhvdyBteSBiYWNrIGZlbHQuIApUaGUgZHJpdmVyLCBoaXMgeW91bmdlciBicm90aGVyIEdlcmFyZCBEYXZpZCBCcmVubmFuLCBub3cgMzQsIHBsZWFkZWQgZ3VpbHR5IHRvIGRhbmdlcm91cyBkcml2aW5nIG9jY2FzaW9uaW5nIGRlYXRoIGFuZCBvbiBGcmlkYXkgd2FzIHNwYXJlZCBhIGphaWwgdGVybSBpbiBOZXdjYXN0bGUgRGlzdHJpY3QgQ291cnQsIGluIHBhcnQgZHVlIHRvIHRoZSAiZXhjZWVkaW5nbHkgaGlnaCB2YWx1ZSBvZiBzdWJqZWN0aXZlIG1hdGVyaWFsIiBwcm92aWRlZCBieSB0aGUgZGVmZW5jZSBhbmQgYmVjYXVzZSBoaXMgbGF0ZSBicm90aGVyJ3MgYWN0aW9ucyAic2lnbmlmaWNhbnRseWNvbnRyaWJ1dGVkIiB0byB0aGVjYXVzZSBvZiB0aGUgY3Jhc2ggYW5kIGhpcyBzdWJzZXF1ZW50IGRlYXRoLiBEYW1pZW4gQnJlbm5hbmhhZCBhIGJsb29kIGFsY29ob2wgcmVhZGluZyBvZiAwLjI5NSB3aGVuIGhlIEdlcmFyZCBCcmVubmFuLCB3aG8gaGFkIGEgYmxvb2QgYWxjb2hvbCByZWFkaW5nIG9mIDAuOSwgc2V0IG9mZiBmcm9tIFRoZSBCZWF0dHkgSG90ZWwgYXQgR3Jlc2ZvcmQgdG8gYSBwcm9wZXJ0eSBhdCBuZWFyYnkgQmluZ2xlYnVycmEgYWZ0ZXIgYW4gZXZlbmluZyBvZiBkcmlua2luZyBhbmQgcGxheWluZyB0aGUgcG9rZXIgbWFjaGluZXMuIApUaGUgYmFzZSBpcyB0aGUgZm91bmRhdGlvbiBvZiB0aGUgcG9zZSwgb24gd2hpY2ggdGhlIHBhcnRuZXIgaXMgYWJsZSB0byB0YWtlIGZsaWdodC4gQmFzaW5nIHJlcXVpcmVzIHRoZSBpbmRpdmlkdWFsIHRvICJzdGFjayIgaGlzIG9yIGhlciBib25lcyBhbmQgcmVtYWluIHN0ZWFkeSB0byBzdXBwb3J0IHRoZSBmbHllci4zLiAKIkdpdmUgaXQgYW5vdGhlciB0aHJlZSBvciBmaXZlIHllYXJzLiAKSW4gQWxwaW5lIFNoaXJlIHRha2luZ3Mgcm9zZSAkNzgsMDAwIGR1cmluZyB0aGUgc2l4IG1vbnRoIHBlcmlvZC4gSW4gQXVndXN0LCB0aGUgYW1vdW50IGxvc3QgYnkgcGxheWVycyBhdCBBbHBpbmUncyB0aHJlZSB2ZW51ZXMgcm9zZSBmcm9tICQyMDYsOTQwIGluIEF1Z3VzdCAyMDEyIHRvICQyMzgsMTA4IGluIEF1Z3VzdCAyMDEzLiBUaGVyZSB3YXMgYWxzbyBhbiBpbmNyZWFzZSBpbiB0YWtpbmdzIGF0IEJlbmFsbGEncyB0aHJlZSB2ZW51ZXMgICB0aGUgYm93bHMgY2x1YiwgZ29sZiBjbHViIGFuZCB0aGUgUm95YWwgSG90ZWwgICByaXNpbmcgZnJvbSAkMi42NDQgbWlsbGlvbiB0byAkMi44MjMgbWlsbGlvbiBmb3IgdGhlIHNpeCBtb250aHMgZnJvbSBKdWx5IDIwMTMuLiAKUmVjZW50bHkgbXkgZmVlbGluZ3MgaGF2ZSBiZWVuIHRyaWdnZXJlZCBieSBteSBtb3RoZXIuIEkgaGF2ZSBsZWZ0IHRoZSByZWxhdGlvbnNoaXAgYmVjYXVzZSBJIGZlZWwgSSBjYW4gbm90IGxpdmUgd2l0aCB0aGUgbmVnYXRpdml0eSBhbmQgcGFzc2l2ZSBhZ2dyZXNzaXZlbmVzcyB0aGF0IHNoZSBiZXN0b3dzIHVwb24gbWUuIEkgZmVlbCBhIGxvdCBvZiB0aGF0IHN0ZW1zIGZyb20gaGVyIG93biBndWlsdCB0aGF0IHNoZSBjYW4gbm90IGZhY2UuIApPdXIgc2Vuc2Ugb2Ygc2VsZiBhbmQgaWRlbnRpdHkgaXMgY2xvc2VseSBsaW5rZWQgd2l0aCBvdXIgcmVsYXRpb25zaGlwIHdpdGggb3VyIHNlbnNlcy4gQSBwYXJ0aWN1bGFyIHNvbmcgY2FuIGV2b2tlIHN0cm9uZyBlbW90aW9ucyBhbmQgdGFrZSB1cyBiYWNrIHRvIGEgcGFydGljdWxhciB0aW1lIGFuZCBwbGFjZS4gQSBzbWVsbCBjYW4gcmVtaW5kIHVzIG9mIGEgY2hpbGRob29kIG1lbW9yeS4gQSB0b3VjaCBjYW4gcmVtaW5kIHVzIG9mIGEgcGFydGljdWxhciBsb3Zlci4gV2UgdGVuZCB0byBsb29rIGF0IG91ciBzZW5zZXMgaW4gaXNvbGF0aW9uLCBidXQgd2hhdCBjYW4gYmUgcmV2ZWFsZWQgaWYgd2UgYnJpbmcgdGhlbSB0b2dldGhlciwgaW1tZXJzZSBvdXJzZWx2ZXMgaW4gdGhlbT8gV2hhdCBpbXBhY3Qgd2lsbCB0aGlzIGhhdmUgb24gb3VyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHJlbGF0aW9uc2hpcHMgZm9ybSBhbmQgdWx0aW1hdGVseSBvdXIgc2Vuc3VhbCBhbmQgc2V4dWFsIGlkZW50aXRpZXM/CkkgdGhpbmsgZm9yIG1lIGl0IHdvdWxkIGJlIGJldHdlZW4gRkdPIGFuZCBHQkYuIFRoZXkgc3RhciB3aXRoIHdlYWsgYXJjIGJ1dCBmcm9tIHRoZSBhbG1vc3QgdGhlIG1pZGRsZSBwYXJ0IGl0IHN0YXJ0IGdldHRpbmcgc2VyaW91cyBhbmQgZXBpYy4gRXhhbXBsZSBDYW1lbG90IGFuZCBCYWJ5bG9uaWEgd2VyZSBhIGJsYXN0IG1lYW53aGlsZSBpbiBHQkYgaXMgd2hlbiB5b3UgYXJlIGFscmVhZHkgZG9pbmcgdGhlIENoYXB0ZXJzIGZyb20gNDArIG9ud2FyZC4gCkNvdmVyczMzIHUKIkl0IHdhcyBhIGZ1bm55IGdhbWUuIApPbmUgc2VtZXN0ZXIgaXMgbm90IHRvbyBkZWVwLCB5b3UgY2FuIGVhc2lseSBwdXQgb24gdGhlIGJyZWFrcyBpZiB5b3Ugd2FudCB0by4gSSB3b3JrIGF0IGEgc2Nob29sIGFuZCBJIG9mdGVuIHRlbGwgbXkgc3R1ZGVudHMgdGhhdCB0YWtpbmcgMiA1IHllYXJzIHRvIHdvcmsgYmVmb3JlIHNjaG9vbCB3aWxsIGhlbHAgeW91IHVuZGVyc3RhbmQgd2hhdCB5b3UgbGlrZSBhbmQgd2hhdCB5b3UgZG9uIHlvdSBjYW4gZG8gY29tbXVuaXR5IGNvbGxlZ2UgZHVyaW5nIHRoYXQgdGltZSwgaWYgeW91IHdhbnQuIApXZSBoYWQgdG8gdGhyZWF0ZW4gdG8gY2FsbCB0aGUgcG9saWNlIGJlZm9yZSBzaGUgd291bGQgc3RvcC4gCkF0IGZpcnN0LCBJIGhhdmUgdG8gd2F0Y2ggaGFuZHMgdGhhdCBJJ20gbm90IGludm9sdmVkIGluIHRvIGdldCBhIHNlbnNlIGZvciBob3cgcGVvcGxlIHBsYXkgYW5kIHdoYXQgdGhlIGZsYXdzIGluIHRoZWlyIG92ZXJhbGwgc3RyYXRlZ3kgYXJlLiBBZnRlciBhIHdoaWxlIHRob3VnaCwgSSBjYW4ganVzdCBlaXRoZXIgc29jaWFsaXplIG9yIHdhdGNoL2xpc3RlbiB0byBzb21ldGhpbmcgb24gbXkgcGhvbmUsIGdvIG9uIHJlZGRpdCwgcGxheSBoZWFydGhzdG9uZSBvciB3aGF0ZXZlci4uIApEb2tvbmNhIG5lbXVzdGUgcyBkbyBrbmluaWNlLCBpbnRlcm5ldCB1bW91amUgdnNrdW0gbWllc3Qga2Rla292ZWsgbmEgc3ZldGUuIEFrIG1ldGUgdnloYWRhIGxva2FsaXR5IHN0YXIgVnN0YXZpdCwga2FybmV2YWx5IGEga29uY2VydHkgbWllc3RhY2ggYWxlYm8gc24gcG9sZSwga2RlIHNhIGtvbmFqIGF1a2NpZSwgYXN0byBuamRldGUgdmVhIG1pbmMsIGt0b3IgYm9saSB2eW5lY2hhbi4gCkhvcnNlc2hvZSBDYXNpbm8gaXMgcnVuIGxvY2FsbHkgYnkgUm9jayBHYW1pbmcsIExMQyBhbmQgb3duZWQgY29ycG9yYXRlbHkgYnkgQ2Flc2FycyBFbnRlcnRhaW5tZW50LiBIYXJrZW5yaWRlciBzYWlkIGhlJ3Mgbm90IHN1cmUgd2hvIGlzIHRvIGJsYW1lIGZvciBub3QgY29tcGx5aW5nIHdpdGggdGhlIHN0YXRlJ3MgY2FzaW5vIGxhd3MgdGhhdCBsZWQgdG8gdGhlIGNhbmNlbGxhdGlvbiwgYnV0IHNhaWQgYm90aCBvd25lcnNoaXAgZ3JvdXBzIGtuZXcgd2hhdCB0aGV5IGRpZCB3aXRoIHRoZSBzdXJ2ZWlsbGFuY2UgY2FtZXJhcyBpbiAyMDEzIHdhc24ndCBnb2luZyB0byB3b3JrIGluIDIwMTUuLiAKUHMuIFRoZXkgY2FsbGluZyB5b3UgYW4gaWRpb3QgYmVjYXVzZSB5b3UgYXJlLiBJIGNvdWxkIGdpdmUgbGVzcyBvZiBhIHNoaXQgYWJvdXQgeW91IHB1dHRpbmcgeW91ciBvd24gbGlmZSBpbiBkYW5nZXIuIApUaGVzZSBhcmUgc29tZSBvZiB0aGUgc3B5IGRldmljZXMgdG8gY2hlYXQgaW4gUG9rZXIgc28gdGhhdCB5b3UgY2FuIGVhc2lseSB3aW4gYWxsIHlvdXIgY2FyZHMgZ2FtZSB0byBtYWtlIHRoZSB1bmxpbWl0ZWQgYW1vdW50cyBvZiBtb25leSB3aXRob3V0IGFueSBoYXJkIHdvcmsgb3IgZXh0cmEgZWZmb3J0cy4gWW91IGNhbiBhbHNvIHVzZSB0aGUgTi4KIlBva2VyIGhhcyBleHBsb2RlZCBpbiBNYWNhdSwiIHNheXMgQ2VsaW5hIExpbiwgMjYsIGFuIEF1c3RyYWxpYW4gcG9rZXIgcGxheWVyIHdobyBjb21wZXRlcyBpbiBNYWNhdS4gCkF0IGxlYXN0IGZvdXIgYnJva2VyYWdlcyByYWlzZWQgdGhlaXIgcHJpY2UgdGFyZ2V0IG9uIHRoZSBzdG9jaywgd2l0aCBUZWxzZXkgbWFraW5nIHRoZSBtb3N0IGJ1bGxpc2ggbW92ZSBieSByYWlzaW5nIGl0cyBwcmljZSBieSBVUyQ2IHRvIFVTJDQwLCB3ZWxsIGFib3ZlIHRoZSBtZWRpYW4gb2YgVVMkMzAuCkkgbm90IG1pc2ludGVycHJldGluZyBpdC4gSSBtZXJlbHkgYm9sZGVkIGl0IHRvIGVtcGhhc2l6ZSB0aGF0IHRoZXJlIHdhcyBhbiBldGhpY2FsIGd1aWRlbGluZSBmcm9tIEFDT0cgcmVnYXJkaW5nIHRoZSBzcGVjaWZpYyBzaXR1YXRpb24geW91IHdlcmUgb3JpZ2luYWxseSByZWZlcnJpbmcgdG8sIHRoZSBjYXNlIG9mIGFuIGVjdG9waWMgcHJlZ25hbmN5IChwcmVzdW1hYmx5IG5vdCBydXB0dXJlZCkuIApIb3cgY291bGQgdGhleSBlbmpveSBpdCA/IFdoZXJlIGlzIHRoZSBmdW4gd2hlbiB5b3Uga25vdyB0aGF0IHlvdSB3aWxsIGxvb3NlIG9uIHRoZSBsb25nIHJ1biA/IC4gSSBndWVzcyB0aGUgYW5zd2VyIGlzIHRoYXQgdGhleSBzaW1wbHkgZG9uJ3QgZXZlbiBrbm93IHRoYXQgdGhleSB3aWxsIGxvb3NlIGFuZCB0aGluZyB0aGF0IHRoZXkgY2FuIGJlIHNtYXJ0ZXIgYnV0IHdpdGgganVzdCBhIGxpdHRsZSBiaXQgb2YgZWR1Y2F0aW9uIHlvdSBjb3VsZCBrbm93IHRoaXMuIApTdGF0ZSBDaGFtcGlvbnNoaXAgU2F0dXJkYXkgUmVzdWx0c1N0YXRlIENoYW1waW9uc2hpcCBTYXR1cmRheSBSZXN1bHRzSGlnaCBzY2hvb2wgdGVhbXMgY29tcGV0ZWQgZm9yIGNoYW1waW9uc2hpcHMgb24gU2F0dXJkYXkuCkZyb20gYW50ZWxvcGUgdG8gemVicmEgYW5kIGFsbCB0aGUgd2lsZGxpZmUgaW4gYmV0d2VlbiwgQWZyaWNhJ3Mgc3R1bm5pbmcgZmF1bmEgaW5zcGlyZXMgaHVuZHJlZHMgb2YgYWR2ZW50dXJlIHRvdXJzIGEgeWVhciwgaW5jbHVkaW5nIHRob3NlIG9mIFVsdGltYXRlIEFmcmljYSBTYWZhcmlzLCB3aG9zZSBzY2hlZHVsZWQgZ3JvdXAgdHJpcHMgKHdpdGggZWlnaHQgdHJhdmVsZXJzIG1heCkgYW5kIGN1c3RvbWl6ZWQgdG91cnMgY29tZSB3aXRoIGxpdHRsZSB0byBubyBzaW5nbGUgZmVlcyBhdHRhY2hlZC4gVGhlc2UgU2VhdHRsZSBiYXNlZCB0cmF2ZWwgc3BlY2lhbGlzdHMgY3JlYXRlIGhpZ2ggcXVhbGl0eSwgYWxsIGluY2x1c2l2ZSBzYWZhcmlzIGNvbXBsZXRlIHdpdGggYWlyZmFyZSwgdHJhdmVsIGluc3VyYW5jZSwgYW5kIGNhbXBpbmcgb3IgbHV4dXJ5IGFjY29tbW9kYXRpb25zIHRvIHN1aXQgYWxsIHN0eWxlcyBhbmQgdGFzdGVzLiBUaGV5J2xsIGV2ZW4gc2V0IHlvdSB1cCB3aXRoIG9uZSBvZiB0aGVpciBwYXJ0bmVyIHNpdGVzIHdpdGggbm8gc29sbyBzdXBwbGVtZW50czogV2lsZGVybmVzcyBTYWZhcmlzLCBmb3Igb25lLCBydW5zIGEgeWVhciByb3VuZCAxMCBkYXkgcGFja2FnZSBhbG9uZyB0aGUgbWlncmF0aW9uIHRyYWlscyBvZiBlbGVwaGFudHMgYW5kIHplYnJhcyB0aHJvdWdoIEJvdHN3YW5hIGFuZCBaYW1iaWE7IFJvYmluIFBvcGUgU2FmYXJpcywgbWVhbndoaWxlLCBsaXN0cyBzZXZlcmFsIGxvdyBzZWFzb24gcGFja2FnZXMgdGhyb3VnaCBaYW1iaWEuIFRoZSBjYWxsIG9mIHRoZSB3aWxkIGhhcyBuZXZlciBzb3VuZGVkIGJldHRlci4KU28gaWYgeW91IHBsdWcgYSBzZWNvbmRhcnkgU1NELCBpdCB3aWxsIGJlIGxpbWl0ZWQgdG8gbm9ybWFsIE0uMiBzcGVlZC4gCkZyYW5rZnVydCBBdXRvIFNob3cgVmlkZW8gVG91ciBSb3VuZHVwV1dKIEF1dG9CZWF0IFJlcG9ydGVyIEplZmYgR2lsYmVydCBoYXMgYXNzZW1ibGVkIGEgY29sbGVjdGlvbiBvZiB2aWRlb3MgZnJvbSB0aGUgRnJhbmtmdXJ0IEF1dG8gU2hvdy4KU28gaW5zdGVhZCB0aGUgZW50aXJlIGJvb2sgdG91ciB3aWxsIHBsYXllZCBvdXQgaW4gc21hbGwgdG93biBBbWVyaWNhLCBXYXNoaW5ndG9uLCBQQSBhbmQgUm9hbm9ha2UsIFZBLiBCbGFjayBhbmQgQnJvd24gcGVvcGxlKSBzZW50aW1lbnRzIHRoYXQgZnVlbGVkIGhlciBjYW5kaWRhY3kgaW4gdGhlIGZpcnN0IHBsYWNlLiBQZXJoYXBzIHdoYXQgUGFsaW4gc2hvdWxkIGhhdmUgY2FsbGVkIGhlciBib29rIGlzICJHb2luZyBCYWNrIiB0byBhIHRpbWUgd2hlbiBydXJhbCwgd2hpdGUsIGFuZCBtYXJyaWVkIEFtZXJpY2EgcnVsZWQgdGhlIGxhbmQuIApSb2FjaCB0b29rIHRoZSByYXcgZGlhbW9uZCB0aGF0IHdhcyBQYWNxdWlhbywgYW5kIHdpdGggYWxsIHRoZSBza2lsbHMgYW5kIGF0dGVudGlvbiB0byBkZXRhaWwgb2YgYSBtYXN0ZXIgamV3ZWxlciwgc2hhcGVkIGhpbSB0byBiZWNvbWUgdGhlIGJyaWxsaWFudCBqZXdlbCBvZiBhIGJveGVyIHdlIHNlZSB0b2RheS4gUGFjcXVpYW9zIGJveGluZyBhcnNlbmFsIGhhcyBiZWVuIHRyYW5zZm9ybWVkIGZyb20gYSBvbmUgc2hvdCB3b25kZXIgdG8gdGhhdCBvZiBhbiBhbGwgcm91bmQsIGdyZWF0IGJveGVyLiBUb2RheSBpdCBzZWVtcyBoZSBjYW4gZG8ganVzdCBhYm91dCBhbnl0aGluZyBpbiB0aGUgcmluZy4gQXMgZmFyIGFzIEkga25vdyB0aGVyZSBpcyBubyBkcnVnIHRoYXQgY2FuIGdpdmUgeW91IHNraWxscyB5b3UgZG9udCBoYXZlLiBUaGF0IGlzIHRoZSB3b3JrIG9mIGEgdHJhaW5lci4KR2lybGZyaWVuZCdzIGNvd29ya2VyIHJldmVhbGVkIHRvIGhlciB0aGF0IHNoZSdzIGNoZWF0ZWQgb24gaGVyIGh1c2JhbmQgU0lYIFRJTUVTIGJlY2F1c2UgaGUgd291bGRuJ3QgZnVsZmlsbCBoZXIgZmV0aXNoLiBXaGljaCBoYXBwZW5zIHRvIGJlIGRyZXNzaW5nIHVwIGxpa2UgYSBiYWJ5LiAKQW5kIHNoZSBjYXNoZWQgb3V0IGhlciA0MDFrLCBoZXIgbGlmZSBzYXZpbmdzIGFuZCBhIHNlY29uZCBtb3J0Z2FnZSB0byBzZW5kIHRvIGhpbS4gU2hlJ3MgNjcuCkkgd3JpdGUgc3VtbWFyaWVzIHRocm91Z2ggbXkgb3duIG1vcmFsIGNvbnZpY3Rpb24uIEkgY2Fubm90IHN0YW5kIGFzaWRlIGFuZCB3YXRjaCBvdXIgd29ybGQgYmUgdG9ybiBkb3duIGZlYXIgYW5kIGhhdHJlZC4gCk5ldmVyIG1pbmQgdGhlIGZhY3QgdGhhdCBpdCBubyBkaWZmZXJlbnQgdGhhbiBzb21lb25lIHdobyBjbGFpbXMgdGhleSBhcmUgZm9sbG93aW5nIHRoZSBjdXJyZW50IFVTREEgZ3VpZGVsaW5lcyBldmVuIHRob3VnaCB0aGV5IGFyZW4gR3JyLmhvdyB1cHNldCB3b3VsZCB5b3VyIERIIGJlIGlmIHRoZSBzaXR1YXRpb24gYXJpc2VzIHRoYXQgSSB3b3VsZCBoYXBwZW4gdG8gZW5jb3VudGVyIE1vcmxvY2sgaW4gdGhlIHdpbGQsIGFuZCBzaG9ydGx5IHRoZXJlYWZ0ZXIgYWNxdWFpbnQgaGVyIGZhY2lhbCBmZWF0dXJlcyB3aXRoIGEgZnVuZGFtZW50YWwgaXRlbSB1c2VkIGluIGJ1aWxkaW5nIHdhbGxzPyBSZXBlYXRlZGx5LjogSSBtYXkgYmUgc2Vuc2l0aXZlIHRvIHdlaWdodCBpc3N1ZXMgaW4gbXkgcGVyc29uYWwgbGlmZSBkdWUgdG8gYSBsaWZldGltZSBvZiBnZXR0aW5nIGNvbW1lbnRhcnkgb24gIkJldHRlciBub3QgZWF0IHRvbyBtdWNoIG9yIHlvdSBnZXQgZmF0IiBhbmQgIldoZW4gSSB3YXMgeW91ciBhZ2UgSSBvbmx5IHdlaWdoZWQuIiBhbmQgIlNlbGYgY29udHJvbCBzdGFydHMgd2l0aCB0aGUgZGlubmVyIHBsYXRlLiIgYW5kICJJIHNvcnJ5IHlvdSBzYWQuIFdhbnQgc29tZSBjb29raWVzL2ljZSBjcmVhbS9jYWtlL3BvcGNvcm4vY2hpcHMvY29tZm9ydCBmb29kPyJQZXJpZHdlbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvSSBqdXN0IHdhbnQgdG8gYWRkIHRvIE9QIHRoYXQgaXQgT0sgaWYgeW91IGRvbiBoZWFyIHRoZSBkaWZmZXJlbmNlIGluIHRoZSAiSSBodW5ncnkiICJJIHVuY29tZm9ydGFibGUiIGV0YyBjcmllcy4gClRoZSBjbG9zZXN0IHRoYXQgT3JlZ29uIGhhcyBjb21lIHRvIGFsbG93aW5nIG9ubGluZSBnYW1ibGluZyBoYXMgY29tZSB2aWEgbGl2ZSBrZW5vIGdhbWVzIHRoYXQgYXJlIGJyb2FkY2FzdCBhY3Jvc3MgdGhlIGludGVybmV0LiBUaGF0J3MgYXMgZmFyIGFzIHRoZSBzdGF0ZSBoYXMgYmVlbiBwcmVwYXJlZCB0byBnbyB1cCB0byBub3cgYnV0IHRoZXJlIGFyZSBzdWdnZXN0aW9ucyBmb2xsb3dpbmcgdGhlIFVTIFN1cHJlbWUgQ291cnQgcnVsaW5nIGluIE1heSB0aGF0IHRoZSBzaXR1YXRpb24gbWF5IGNoYW5nZS4KQWR2ZXJzZSBuZXVyb211c2N1bGFyIGV2ZW50cyBoYXZlIGJlZW4gZGVzY3JpYmVkIGluIGNhc2Ugb2YgbG93IHNlcnVtIDI1IGh5ZHJveHl2aXRhbWluIEQgKDI1T0hEKSBjb25jZW50cmF0aW9ucywgc3VnZ2VzdGluZyB0aGF0IHZpdGFtaW4gRCBtYXkgYmUgaW52b2x2ZWQgaW4gZ2FpdCBzdGFiaWxpdHkuIFRoZSBvYmplY3RpdmUgb2YgdGhpcyBjcm9zcyBzZWN0aW9uYWwgc3R1ZHkgd2FzIHRvIGV4YW1pbmUgdGhlIGFzc29jaWF0aW9uIGJldHdlZW4gc3RyaWRlIHRvIHN0cmlkZSB2YXJpYWJpbGl0eSBvZiBzdHJpZGUgdGltZSAoU1RWKSBhbmQgc2VydW0gMjVPSEQgY29uY2VudHJhdGlvbiBpbiBhZHVsdHMgYWdlZCA2NSB5ZWFycyBhbmQgb2xkZXIuCkxhZHkgR2FnYSBnb3QgYSBtYW5zIGRpY2sKVGhlIFNhbiBGcmFuY2lzY28gQmF5IEFyZWEgaXMgdGhlIG1ldHJvcG9saXRhbiByZWdpb24gc3Vycm91bmRpbmcgTm9ydGhlcm4gQ2FsaWZvcm5pYSdzIFNhbiBGcmFuY2lzY28gYW5kIFNhbiBQYWJsbyBiYXlzLiBIb21lIHRvIG1vcmUgdGhhbiAxMDAgY2l0aWVzIHRoYXQgY29udGFpbiBpbiBleGNlc3Mgb2YgNyBtaWxsaW9uIHBlb3BsZSBjb21iaW5lZCwgaXQgZW5jb21wYXNzZXMgcm91Z2hseSA3LDAwMCBzcXVhcmUgbWlsZXMgKDE4LDEzMCBzcXVhcmUga2lsb21ldGVycykgW3NvdXJjZTogV2hhdCBJcyB0aGUgQmF5P10uIFdoaWxlIHRoZXJlIGlzIG5vIGNlbnRyYWwgZ292ZXJuaW5nIGJvZHkgdGhhdCBvdmVyc2VlcyBhbGwgb2YgdGhlIEJheSBBcmVhJ3MgaGlraW5nIHRyYWlscywgaXQncyBzYWZlIHRvIHNheSB0aGVyZSBhcmUgdGhvdXNhbmRzIG9mIG1pbGVzIG9mIHRyYWlsIGhlcmUuIApCaWxsZ2FybXNhcm15IHUKQWxsIEkgY2FuIHNheSB3aXRoIHJlYWwgY29uZmlkZW5jZSBpcyB0aGF0IGl0IHdhcyBhIGxhYm91ciBvZiBsb3ZlLCBhbmQgd2FzIGdyZWF0IGZ1biB0byBtYWtlLiAKVG8gcGxheSBwb2tlciBmb3IgZnJlZSBvbmxpbmUgaXMgb25lIG9mIHRoZSBlYXNpZXN0IGFuZCBpbmNyZWFzaW5nbHkgcG9wdWxhciB3YXlzIHRvIGxlYXJuIHRoZSBnYW1lLCBlc3BlY2lhbGx5IFRleGFzIE5vIExpbWl0IEhvbGQnRW0uIFZpcnR1YWxseSBhbGwgb25saW5lIHBva2VyIHJvb21zIHdpbGwgbGV0IHBsYXllcnMgY29tZSBpbiBhdCBubyBjb3N0IGJlY2F1c2UgdGhleSB3b3VsZCBsb3ZlIHRvIGhhdmUgeW91IGFzIGEgcmVhbCBtb25leSBwbGF5ZXIgaW4gdGhlIGZ1dHVyZS4gCkFuIE92ZXJ2aWV3IGFuZCBFYXN5IEd1aWRlIHRvIGEgQ3JhcHMgVG91cm5hbWVudCBTdHJhdGVneSAgNzogQ3JhcHMgdG91cm5hbWVudHMgdGhhdCByZXF1aXJlIGEgcmVnaXN0cmF0aW9uIGZlZSBoYXZlIHRoZSBzYW1lIG1lY2hhbmljcyBhcyB0b3VybmFtZW50cyBvZiB0aGUgZ2FtZSBvZiBwb2tlci4gV2hhdCB3aWxsIGhhcHBlbiBpcyB0aGUgcGxheWVyIHdpbGwgaGF2ZSB0byBidXkgaW4gYW5kIHRoaXMgd2lsbCByZXN1bHQgaW4gZ2V0dGluZyBhIGNlcnRhaW4gYW1vdW50IG9mIGNoaXBzLiBUaGVzZSBjaGlwcyBkbyBub3QgaGF2ZSBtb25ldGFyeSB2YWx1ZSBhbmQgaXMgdXNlZCBzb2xlbHkgZm9yIHRoZSB0b3VybmFtZW50Li4gCk9uIHRoZSBvcmlnaW5hbCBoYW5kLCBlYWNoIHBsYXkgaXMgZGVhbHQgMiBjYXJkcyB3aGljaCBhcmUgZmFjZSBkb3duLiBUaGVzZSBhcmUgY2FsbGVkIFBvY2tldCBDYXJkcyBvciBIb2xlIENhcmRzLiBBZnRlciBwbGF5aW5nIGEgZmV3IHJvdW5kcywgcGxheWVycyBjYW4gY29tYmluZSB0aGUgYmVzdCB3aW5uaW5nIGNvbWJpbmF0aW9uIG9mIHRoZWlyIGhvbGUgYW5kIGNvbW11bml0eSBjYXJkcy4gClNhbmZ0ZXMgWW9nYSB1bmQgS3VuZGFsaW5pIFlvZ2EgbWl0IEV2YSBHdXJ1IFNhbnQgUGF3bGFzOiBtaXR0d29jaHMgdm9yIGRlbSBNaXR0YWdlc3NlbnZvbiAxMTozMCBVaHIgYmlzIDEyOjMwIFVociwgZnJlaXRhZ3Mgdm9uIDk6MzAgVWhyIGJpcyAxMSBVaHIuIApGb2xsb3dpbmcgYSBjb3VwbGUgY2xvc2UgY2FsbHMgd2l0aCB0aGUgYmFkIGd1eSwgSGljY3VwIGRlY2lkZXMgdGhlIG9ubHkgd2F5IGRyYWdvbnMgd2lsbCBldmVyIGJlIHNhZmUgZnJvbSBldmlsIG1lbiBpcyBpZiB0aGV5IGNhbiBlc2NhcGUgdG8gdGhlaXIgZmFibGVkIGFuY2VzdHJhbCBob21lLiBTbyB0aGUgY2l0aXplbnMgb2YgQmVyayB1cHJvb3QgYW5kIGhlYWQgd2VzdCBpbnRvIHRoZSB1bmtub3duLCBob3BpbmcgdG8gZmluZCB0aGUgSGlkZGVuIFdvcmxkLgpRdWF5bGltZTogaXQncyBhbHNvIHRpbWUgdG8gZ28gcmV0cm8gYXMgdGhlIGZvb2QgYW5kIGJldmVyYWdlcyBmbG93IGZyb20gOHBtIHVudGlsIGxhdGUuIFRoZXJlIGlzIGEgdHdvIGhvdXIgZHJpbmsgcGFja2FnZSwgY2FuYXBzIGFsbCBuaWdodCwgYSByZXRybyBESiBhbmQgbGl2ZSBiYW5kLCBhbmQgYSBwZXJmZWN0IHZpZXcgb2YgdGhlIGZpcmV3b3JrcyBmcm9tIHRoZSBkZWNrLiBSZXRybyBkcmVzcyBpcyBvcHRpb25hbCBmb3IgdGhlICQxMjUgZXZlbnQgYW5kIHJlc2VydmF0aW9ucyBjYW4gYmUgbWFkZSBvbiA2NTg0IDQwMzkuIApBbiBPbnRhcmlvIGJvcm4gZmlsbW1ha2VyIGhhcyBiZWVuIGlzc3VlZCBhIG5vbiBiaW5hcnkgYmlydGggY2VydGlmaWNhdGUgYWZ0ZXIgYSB5ZWFyIGxvbmcgbGVnYWwgYmF0dGxlIHdpdGggdGhlIHByb3ZpbmNpYWwgZ292ZXJubWVudCBhbmQgc2F5cyByZWNlaXZpbmcgdGhlIGRvY3VtZW50IG1hcmtzIGEgdmljdG9yeSBmb3IgdGhlIG5vbiBiaW5hcnkgYW5kIHRyYW5zZ2VuZGVyIGNvbW11bml0eS4KTm93IGxldCBzYXkgdGhleSBoYXZlIGRlZHVjdGlvbnMgd29ydGggNTAlIG9mIHRoYXQgc28gdGhleSBnZXQgJDI4NjcuNSBiYWNrIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIuIFNvIGxvZ2ljYWxseSB0aGV5IGNvdWxkIGp1c3QgcGF5IHRoZSBleGFjdCBhbW91bnQgb2YgdGF4ZXMgdGhhdCB5ZWFyIGFuZCBzYXZlICQyODY3LjUgYW5kIGdldCAzJSBiYWNrIGZyb20gYSBzYXZpbmdzIGFjY291bnQuIFRoYXQgbGVzcyB0aGFuICQ5MC4gClRoZSByZXZlcnNlIGFwcGVhcnMgdG8gYmUgIkJvbyBDaGlvd2FuIiBJIHRoaW5rLCBpbmRpY2F0aW5nIEJvYXJkIG9mIFJldmVudWUgUGVraW5nLCBidXQgaXQgaXMgYWxzbyB2ZXJ5IGNydWRlLCBhbG1vc3QgZ2FyYmxlZC4gCkhvdyB5b3UgZHJhdyBkb3duIHlvdXIgcmV0aXJlbWVudCBzYXZpbmdzIGNvdWxkIHNhdmUgeW91IHRob3VzYW5kcyAgIHRoaXMgcHJvZ3JhbSBwcm92ZXMgaXRGcmllbmRzIHdpdGggdGF4IGJlbmVmaXRzOiBIb3cgRVRGcyBjYW4gaGVscCBrZWVwIHRoZSB0YXhtYW4gYXQgYmF5QWluJ3Qgbm8gcGFydHkgbGlrZSBhbiBPQVMgcGFydHk6IFJldGlyZW1lbnQgZ3VydSBKb25hdGhhbiBDaGV2cmVhdSBvbiB0dXJuaW5nIDY1TWF0dGhldyBBcmRyZXksIGEgd2VhbHRoIGFkdmlzb3Igd2l0aCBUb3JvbnRvIGJhc2VkIFRyaURlbHRhIEZpbmFuY2lhbCwgc2F5cyBpZiB5b3UgbmVhciB0aGUgdGhyZXNoaG9sZCBhIGxhcmdlciBPQVMgcGF5b3V0IGNvdWxkIHB1dCB5b3Ugb3ZlciB0aGUgdG9wLCBjYXVzaW5nIHlvdSB0byByZXBheSAxNSBwZXIgY2VudCBvZiB0aGUgT0FTIGRlZmVycmVkLiBBbHNvLCBhZnRlciBhZ2UgNzEsIHlvdSB3aWxsIGJlIHN1YmplY3QgdG8gbWFuZGF0b3J5IGFubnVhbCBhbmQgdGF4YWJsZSB3aXRoZHJhd2FscyBmcm9tIFJlZ2lzdGVyZWQgUmV0aXJlbWVudCBJbmNvbWUgRnVuZHMgKFJSSUZzKS4gQXJkcmV5IGVzdGltYXRlcyBzb21lb25lIHdpdGggJDEwLDAwMCBpbiBhbm51YWwgQ1BQIGluY29tZSBhbmQgYSAkMS4yNSBtaWxsaW9uIFJSSUYgd291bGQgYWxyZWFkeSBiZSBhdCB0aGUgT0FTIHRocmVzaG9sZC4gVGhpcyBwZXJzb24gbWF5IGJlIGJldHRlciBvZmYgdGFraW5nIE9BUyBhdCA2NS4KWW91IG1pZ2h0IHRlbGwgdGhlbSB0aGF0IGl0J3MgZWFzaWVyIGZvciBsaXR0bGUga2lkcyB0byB1bmRlcnN0YW5kIFNhbnRhIENsYXVzIGFzIGp1c3Qgb25lIGd1eSBpbnN0ZWFkIG9mIHNvbWVvbmUgd2hvIHdvcmtzIHdpdGggbWFueSBvdGhlciBwZW9wbGUuIApJbnNpZGlvdXMgVGhlIExhc3QgS2V5ICgyMDE4KSAxMDgwcCAgIEJScmlwICAgeDI2NCAgIEREIDUuMSAgW0hpbmRpICsgVGFtaWwgKyAuIApQZW9wbGUgbGF1Z2hpbmcgd2hlbiB5b3UgYXNrZWQgaWYgeW91IGhhdmUgYSBwYXJ0bmVyL3dpZmUva2lkcy4KSG93IG1hbnkgVUsgbnVtYmVyIDEgaGl0cyBoYXMgTGFkeSBHYWdhIGhhZApTZXZlbiB0aGluZ3MgdG8gZG8gaW4gdGhlIExvd2VyIE1haW5sYW5kClRvIHN0YXJ0IGZhbWlsaWFyaXppbmcgeW91cnNlbGYgd2l0aCB0aGUgZGlmZmVyZW50IGhhbmRzLCBwcmludCBvdXQgYSAiY2hlYXQgc2hlZXQiIGFuZCBzdHVkeSBpdC4gClRoZSBiZXR0ZXIgcGxheWVycyB3aWxsIGRvIHRoaXMgd2l0aCBtYXNzaXZlIGNvbWJvIGRyYXdzIG1heWJlLiBUaGluZ3MgbGlrZSBLaCBRaCAoZ3V0IHNob3Qgc3RyYWlnaHQgZmx1c2ggZHJhdyksIFFoIFRoIChndXR0ZXIgc3RyYWlnaHQgZmx1c2ggZHJhdyB3aXRoIGd1dHRlciB0byBzdHJhaWdodCksIFRoIDloIChvcGVuIGVuZGVkIHN0cmFpZ2h0IGRyYXcgd2l0aCBmbHVzaCBkcmF3KS4gV2l0aCB0aGF0IHNhaWQsIGl0IG1vcmUgbGlrZWx5IGEgcGxheWVyIHRoYXQgd2FudHMgdG8gZG8gdGhpcyB3aWxsIGNoZWNrIHRvIHlvdSwgbGV0IHlvdSBjb250aW51YXRpb24gYmV0LCB0aGVuIHJhaXNlLiBTbyBJIHdvdWxkbiBleHBlY3QgdGhlc2UgaGFuZHMgb2Z0ZW4gd2l0aCBhIGRvbmsgbGVhZCwgYnV0IGl0IHBvc3NpYmxlLgpXaGVuIHRoZXJlIGFyZSB0d28gcGxheWVycyBsZWZ0IHRoZSBwZXJzb24gdGhhdCBpcyB0aGUgZGVhbGVyIHdvdWxkIGJlIHRoZSBzbWFsbCBibGluZC4gCkkgbm90IHJlYWxseSBhcmd1aW5nIGFnYWluc3QgeW91LCBJIGp1c3Qgd29uZGVyaW5nIHdoYXQgeW91IHByb3Bvc2luZy4gSSBub3QgYSBsYXcgb3IgY2l2aWNzIGVudGh1c2lhc3Qgc28gSSBkb3VidCBJIGNvdWxkIGNvbWUgdXAgd2l0aCB0aGUgYW5zd2VyIG15c2VsZiwgYnV0IEkgaGF2ZSB0byBpbWFnaW5lIHRoYXQgdGhlcmUgYXJlIG1hbnkgaGlnaCBtaW5kZWQgaW5kaXZpZHVhbHMgd29ya2luZyB3aXRoIHRoZSBkZW1vY3JhdHMgb24gdGhpcyBpc3N1ZSBhbmQgdGhleSBoYXZlIHRvIGtub3cgdGhlIG9wdGlvbnMgdGhleSBjYW4gdGFrZS4gV2hhdCBhcmUgdGhvc2Ugb3B0aW9ucywgcmVhbGlzdGljYWxseT8KSSByZWFsbHkgZW5qb3llZCB0aGUgTG9pcmUgVmFsbGV5LCBDaGVubm9uY2VhdXggYW5kIENoZXZlcm55LCBpbiBwYXJ0aWN1bGFyLiBFdHJldGF0LCBhYm91dCBhbiBob3VyIG5vcnRoIG9mIFBhcmlzIGlzIGEgcGljdHVyZXNxdWUgaWR5bGwsIGxvbmcgZmF2b3JlZCBieSBhcnRpc3RzLiAKSSB3YXMgc28gZHJ1bmsgdGhhdCBJIGZlbGwgaW4gdGhlIGJhdGhyb29tLCBzbWFzaGVkIG15IGZhY2Ugb24gdGhlIHR1YiwgcGFzc2VkIG91dCBhbmQgYmxlZCBhbGwgb3ZlciBteXNlbGYuIApJbmRpdmlkdWFscyBjYW50IGltbWlncmF0ZSBhbmQgaW50ZWdyYXRlIHRoZXJlLiAKSGUgaXMgdGhlIG9ubHkgcGVyc29uIG1hZGUgaXQgdG8gdGhlIGZpbmFsIHRhYmxlIGluIDIwMDMgYW5kIDIwMDQgY29uc2VxdWVudGx5LiAKRmlyc3Qgb2YgYWxsLCBtYXRlcmlhbHMgd2VyZSBzY2FyY2UuIFBhcGVyLCBwZW5jaWxzLCBpbmsgdGhlc2Ugd2VyZSBub3QgY29tbW9uIHRoaW5ncyBmb3Iga2lkcyB0byBvd24gaW4gdGhlIDE5dGggY2VudHVyeSwgZXNwZWNpYWxseSBtb3JlIGluIHRoZSBtaWRkbGUgYW5kIGVhcmx5IHBhcnRzIG9mIHRoZSBjZW50dXJ5LiAKSGUgY2hhbmdlZCBoaXMgbWluZCB3aGVuIGhlIGFjdHVhbGx5IGFzc3VtZWQgb2ZmaWNlLiAKSW5ub2NlbnQgcGVvcGxlIHVzdWFsbHkgZG8gbm90IHNlZSB0aGVtc2VsdmVzIGFzIHN1c3BlY3RzLiBFc3BlY2lhbGx5IHdoZW4gdGhleSB1bmF3YXJlIG9mIGFueSByZWFzb24gdGhlIGNvcHMgd291bGQgaGF2ZSB0byBzdXNwZWN0IHRoZW0uCllvdSdsbCBiZSBmaW5lLiBUYWtpbmcgYSBicmVhayB3b3VsZG4ndCBiZSB0aGUgd29yc3QgdGhpbmcgdGhvdWdoLgpQcmlvciB0byB0aGUgUmVhbCBNZWRpYSBSZWFsIENoYW5nZSBDeWJlcmJ1bGx5aW5nIENvbmZlcmVuY2UgZmlhc2NvLCBvbmUgb2YgdGhlIGxvY2FsIExvcmRzIG9mIEZvcm0gYXBwcm9hY2hlZCBOb3J0aGVybiBTdGFyIGVkaXRvciwgRGF2aWQgS2lya3BhdHJpY2sgdG8gc2VlIGlmIHRoZSBwYXBlciB3b3VsZCBydW4gc3RvcmllcyBhYm91dCBVbml2ZXJzYWwgTWVkaWNpbmUuIEtpcmtwYXRyaWNrIHdhcyByZWx1Y3RhbnQgc2VlaW5nIHRoZSBjdWx0IGhhZCB0aHJlYXRlbmVkIHRoZSBwYXBlciB3aXRoIGxlZ2FsIGFjdGlvbiBmb3Igd3JpdGluZyB0aGF0IFNlcmdlIGNsYWltcyB0byBiZSBhYmxlIHRvIGN1cmUgY2FuY2VyLCBhbmQgdGhlIHBhcGVyIGhhZCBlcnJvbmVvdXNseSBwcmludGVkIHRoYXQgQmVuaGF5b24gYW5kIGhpcyBzb25zIHByYWN0aWNlIEVzb3RlcmljIEJyZWFzdCBNYXNzYWdlLiBUaGUgcGFwZXIgc2hvdWxkIGhhdmUgY2hlY2tlZCB0aGVpciBmYWN0cyBiZWZvcmUgZ29pbmcgdG8gcHJlc3MuIEN1cnRpcyBCZW5oYXlvbiBvbmx5IHByYWN0aWNlcyBVdGVydXMgTWFzc2FnZSwgYW5kIHdoaWxlIFNlcmdlIHRlbGxzIGV2ZXJ5b25lIGhlIG9ubHkgcGVyZm9ybWVkIEJyZWFzdCBtYXNzYWdlIG9uIGhpcyBjYXB0aXZlIHBhcnRuZXIsIHdlIHNob3duIHRoZSBwaG90b2dyYXBoaWMgZXZpZGVuY2Ugb2YgaGlzIGhhbmRzIG9uIGNoZXN0cyBhbmQgYm90dG9tcywgYW5kIGhvdyBoZSBnb2VzIGZvciB0aGUgZ2VuaXRhbHMgb2Ygc2V4dWFsIGFidXNlIHZpY3RpbXMgYXMgd2VsbC4KVGhlIGRpbmluZyB0YWJsZSBjYW4gc2VhdCBhIGZhbWlseSBvZiA2IGZvciBkaW5uZXIsIGFuZCBjYW4gc2VhdCA4IHBva2VyIHBsYXllcnMuIApUaGVuIHdlIGdvIGFuZCBoaXJlIGFub3RoZXIgZ3V5IHRvIGhlbHAgb3V0LiBJIGFib3V0IHRvIHNob3cgaGltIGhvdyB0byB3aXJlIHRoaW5ncyB1cCBhbmQgam9raW5nbHkgc2F5ICJZb3Ugbm90IGNvbG9yIGJsaW5kIHJpZ2h0PyIgSGlzIHJlc3BvbnNlICJXZWxsIGFjdHVhbGx5IEkgd2FzbiBnb2luZyB0byBzYXkgYW55dGhpbmcgYnV0LiIgSSBoYWQgdG8gbGF1Z2guIFNvIHRoZSBmaXJzdCBndXkgZ290IGEgd2lyZSBwdWxsaW5nIGJ1ZGR5IHdoaWNoIGlzIGZpbmUgYmVjYXVzZSBpdCByZWFsbHkgaXMgYSB0d28gcGVyc29uIGpvYiBhbmQgaXQgbmFzdHkgKHdlIHdlcmUgdXNpbmcgdGhpcyB5ZWxsb3cgd2F4IGJhc2VkIGx1YnJpY2FudCkgc28gSSB3YXMgaGFwcHkgdG8gbm90IGRvIGl0LgpTdGFuIFVscmljaCwgd2hvIGxpdmVzIGluIEZvcmVzdCwgT250Liwgc2FpZCBoZSBtZXQgTGluZHNheSBhbmQgc29tZSBvdGhlciBSZWQgV2luZ3MgaW4gdGhlIDE5NTBzIHdoZW4gdGhleSBtYWRlIGEgdHJpcCB0byByYWlzZSBtb25leSBmb3IgYXJ0aWZpY2lhbCBpY2UgaW4gdGhlIHRvd24gYXJlbmEuCk15IGJveWZyaWVuZCAoSSdtIGEgZ3V5IHRvbyBmb3IgcmVmZXJlbmNlKSB3YXRjaGVzIG1vcmUgcG9ybiB0aGFuIG1lIGFuZCBJIHN0aWxsIHN0cnVnZ2xlIHdpdGggYmVpbmcgamVhbG91cyBhbmQgc2FkIGFib3V0IGl0IHNvbWV0aW1lcyBidXQgd2UgY29tbXVuaWNhdGUgcmVhbGx5IHdlbGwgYW5kIGhlIGV4cGxhaW5lZCBpdCBwcmV0dHkgbXVjaCBleGFjdGx5IGhvdyB5b3UgZGlkIGFuZCBJJ20gd29ya2luZyBvbiBpdC4gCg==|<---