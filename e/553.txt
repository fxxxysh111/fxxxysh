--->|VXN1YWxseSwgdGhlIGRlYWxlciBtdXN0IGJlIGludm9sdmVkOyBjb25zaWRlcmluZyB0aGUgc3VydmVpbGxhbmNlIGluIHBsYWNlIGF0IG1vZGVybiBjYXNpbm9zLCBmaW5kaW5nIGEgY3Jvb2tlZCBkZWFsZXIgdGhlcmUgaXMgaW5jcmVhc2luZ2x5IHJhcmUuIApJbiB0aGlzIGJldHRpbmcgc3lzdGVtLCB0aGUgcGxheWVyIGluY3JlYXNlcyB0aGUgYmV0IHdoZW5ldmVyIGhlIG9yIHNoZSBsb3Nlcy4gCkknbSBkb2luZyBtZS4gCkFkZGl0aW9uYWxseSwgdGhleSBtYXkgbGVhZCBDaHJpc3RpYW4gY2VyZW1vbmllcyBmb3IgYmFwdGlzbSwgQ29tbXVuaW9uLCBmdW5lcmFscyBhbmQgd2VkZGluZ3MuLiAKMTQgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkFudG9uaW8gQnJvd24sIEhhbGwgb2YgRmFtZSBwbGF5ZXIsIEhhbGwgb2YgRmFtZSBjbG93bi4gR2l2ZSBoaW0gYSBnb2xkIGphY2tldCByaWdodCBub3csIHdhaXZlIHRoZSA1IHllYXJzLCBwdXQgaGltIGluIHRoZSBIYWxsIG9mIEZhbWUgb2YgY2xvd25zLiAKU3BlbnQgbW9udGhzIGxvc2luZyBhbG1vc3QgZXZlcnl0aGluZy4gClllYWgsIHRoYXQgcm91Z2guIFRoZSBnYW1lIGFsd2F5cyBzdWdnZXN0cyBsb3cgcG9wIHJlYWxtcyBhbmQgSSB3aXNoIHRoZXkgZGlkbiBkbyB0aGF0IHRob3VnaCwgdGhleSBkaWQgaXQgd2l0aCBEYWxhcmFuIGZvciBsaXRlcmFsIHllYXJzIGFuZCBpdCBub3cgYSBoaWdoIHBvcCByZWFsbSBJIHRoaW5rLCBzbyBpdCBjYW4gcGljayB1cCBzcGVlZCB3aXRoIHRpbWUuIApIaWxsYXJ5IENsaW50b24KVHdvIHRpbWUgaGVhdnl3ZWlnaHQgYm94aW5nIGNoYW1waW9uIGFuZCwgbGF0ZXIsIGdyaWxsIGFmaWNpb25hZG8gR2VvcmdlIEZvcmVtYW4gb25jZSBxdWlwcGVkOiBxdWVzdGlvbiBpc24gYXQgd2hhdCBhZ2UgSSB3YW50IHRvIHJldGlyZSwgaXQgYXQgd2hhdCBpbmNvbWUuIE5ldyBDSUJDIHJldGlyZW1lbnQgcG9sbCBvdXQgdGhpcyB3ZWVrIGZvdW5kIHRoYXQgNzQgcGVyIGNlbnQgb2YgcmVzcG9uZGVudHMgd29ycnkgYWJvdXQgaGF2aW5nIGVub3VnaCBpbmNvbWUgaW4gcmV0aXJlbWVudC4gQWNjb3JkaW5nIHRvIHRoZSBwb2xsLCBDYW5hZGlhbnMgdG9wIGFudGljaXBhdGVkIHNvdXJjZXMgb2YgcmV0aXJlbWVudCBpbmNvbWUgaW5jbHVkZTogQ2FuYWRhL1F1ZWJlYyBQZW5zaW9uIFBsYW4gYmVuZWZpdHMgKDg1IHBlciBjZW50KSwgT2xkIEFnZSBTZWN1cml0eSBiZW5lZml0cyAoODAgcGVyIGNlbnQpLCBSUlNQcyAoNjMgcGVyIGNlbnQpLCBURlNBcyAoNTggcGVyIGNlbnQpIGFuZCBpbmNvbWUgZnJvbSBhIHBlbnNpb24gcGxhbiAoNTMgcGVyIGNlbnQpLi4gCkhlZWwgY3JhY2sgdHJlYXRtZW50IEJUIHByb21pc2VzIGZpYnJlIHRvIG1vc3Qgb2YgTG9uZG9uIGJ5IDIwMTEgICBQaWN0dXJlcy4gClByZXR0eSBtdWNoIHN1bXMgaXQgdXAuIE5vIEZGPyBVbnJlYWwuIENvbWJhdD8gQSBqb2tlLiBDdXRzY2VuZXM/IERpYWxvZ3VlIHByYXR0bGVzIG9uIGFuZCBvbiwgb2Z0ZW4gd2l0aCBsb25nIGxvbmcgbG9uZyBwYXVzZXMgYmV0d2VlbiBvbmUgY2hhcmFjdGVyIGFuZCBhbm90aGVyLiBBbmQgdGhlIGNoYXJhY3RlcnMgb2Z0ZW4gbWFrZSB3aGF0IHNob3VsZCBzZWVtIGxpa2Ugc21hbGwgdGFsaywgd2hpY2ggd291bGQgbWFrZSB0aGVtIG1vcmUgcmVsYXRhYmxlLCBidXQgdGhlIHBhdXNlcyBhbmQgc2xvdyBwYWNpbmcgb2Z0ZW4gY2F1c2VzIHRoYXQgdG8gbWlzcyB0aGUgbWFyay4gV2hhdCB3ZSBnZXQgaXMgYSBjb252ZXJzYXRpb24gYm9yZGVyaW5nIHRoZSB1bmNhbm55IHZhbGxleSB0ZXJyaXRvcnkuIE9oLCBhbmQgdGhhdCBjb3B5L3Bhc3RlIHNvbmc/PwpKdXN0IHdhbm5hIHRocm93IHRoaXMgb3V0IHRoZXJlOiBJIG5vdCBFdXJvcGVhbiBidXQgSSBhIEtvcmVhbiBzcGVha2luZyB3aGl0ZSBmb3JlaWduZXIgbGl2aW5nIGluIEtvcmVhLiAKU2RlbGx5ICAzIHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpJIGhhdmUgd2hvbGVzYWxlcnMgYnJpbmdpbmcgbWUgZGVhbHMgYXQgMSUgcmVudCBvciA4NSUgb2YgbWFya2V0IHZhbHVlLiBZb3UganVzdCBoYXZlIHRvIGJlIGEgZGlzY2lwbGluZWQgaW52ZXN0b3IgYW5kIHN0aWNrIHRvIHlvdXIgY3JpdGVyaWEuIApJZiB3ZSBnbyB3aXRoIGEgaGlzdG9yaWNhbCBjb2luIHNpemUgYW5kIHdlaWdodCwgd2UgY2FuIGFzc3VtZSB0aGF0IHRoZSBjb2lucyBwcm9iYWJseSB3ZWlnaCBhcm91bmQgMC4xNCB0cm95IG96LiwgYXMgYW55IGxhcmdlciB3b3VsZG4gbWFrZSBzZW5zZSBmb3IgcmVndWxhciB0cmFuc2FjdGlvbnMgMC4xNCB4IDI1ID0gMy41LCAzLjUgeCAxMzAwIChhc3N1bWluZyB0aGF0IGl0IGlzIDEwMCUgcHVyZSBhbmQgbm90IG1peGVkIHdpdGggYW5vdGhlciBtZXRhbCkgPSA0LDU1MC4KQSByb3VuZCBvZiBiZXR0aW5nIG9jY3VycyBhcyBwbGF5ZXJzIGRlY2lkZSBmb3IgdGhlIGZpcnN0IHRpbWUgaWYgdGhleSBhcmUgaW4gb3IgdGhleSdyZSBvdXQuIFRoZW4gZml2ZSBjb21tdW5pdHkgY2FyZHMgZm9sbG93IHdpdGggYmV0dGluZyBhZnRlciB0aGUgZmxvcCwgdGhlIHR1cm4sIGFuZCB0aGUgcml2ZXIuIApJIGhhdmUgYmVlbiBjaGVja2luZyBoaXMgcGhvbmUgcGVyaW9kaWNhbGx5IGFuZCBoZSBpcyBkZWZpbmV0ZWx5IHN0aWxsIGdvaW5nIHRvIHRoZSBjYXNpbm8gYW5kIHBsYXlpbmcgcG9rZXIuIEhlIGRvZXMgdGhpcyB3aGlsZSBoZSBpcyBhcHBhcmVudGx5ICJhdCB3b3JrIi4gClVzZSBhIHByb2dyYW0gdG8gbWFrZSBhIGtpbmQgb2YgcGl4ZWwgdmVyc2lvbiB3aXRoIGdyaWRsaW5lcywgdGhlbiBqdXN0IGRyYXcgdGhlIGdyaWRsaW5lcyBvbiB0aGUgYWlkYSAob3IgbG9vc2VseSBzdGl0Y2ggc29tZSB0aHJlYWQgb24gdGhlcmUgdG8gbWFrZSB0aGUgZ3JpZHMgYW5kIHB1bGwgdGhlbSBvdXQgYXMgeW91IGdvKS4uIApUaGVzZSBmZWF0dXJlcyBpbmNsdWRlIGEgYnVpbHQgaW4gYXV0b21hdGljIHNjb3JlIHN5c3RlbSwgcmVhbGlzdGljIHNvdW5kcyB0aGF0IHJlZmxlY3QgdGhvc2UgdGhhdCBhcmUgb2Z0ZW4gaGVhcmQgaW4gcmVhbCBjYXNpbm9zLCBhbmQgZXZlbiBhIDUwLDAwMCBwb2ludCBwYXlvdXQgZm9yIHRob3NlIHRoYXQgaGF2ZSBhICJSb3lhbCBGbHVzaCIhLiAKSG9wZWZ1bGx5IHRoZWlyIHJlY29uY2lsaWF0aW9uIG1hcmtzIHRoZSBlbmQgb2YgQmV0dHkncyB0aW1lIGFzIGEgY2FtIGdpcmwsIGJlY2F1c2UgdGhlcmUgYXJlIG90aGVyIHN0b3JpZXMgd2UnZCByYXRoZXIgd2F0Y2ggdGhhbiBhbiB1bmRlcmFnZSBnaXJsIGNhdGVyaW5nIHRvIGxvbmVseSBtZW4gb24gdGhlIGludGVybmV0IGFzIGEgd2F5IG9mIGNvcGluZyB3aXRoIGhlciBtZW50YWwgaGVhbHRoIHN0cnVnZ2xlcy4gT25jZSBhZ2FpbiwgY2FuIHlvdSBwbGVhc2UgZ28gc2VlIGEgdGhlcmFwaXN0LCBCZXR0eSBDb29wZXI/Ck5vdGhpbmcgbGlrZSBoYXZpbmcgdGhlIEdvc3BlbCBzaG91dGVkIGF0IHlvdSBhcyB5b3Ugc3BhciwgZG9pbmcgcHVzaCB1cHMgZm9yIG5vdCBzYXlpbmcgeW91IGFjY2VwdCBKZXN1cyBDaHJpc3QgaW50byB5b3VyIGhlYXJ0IGFzIHlvdXIgb3duIHBlcnNvbmFsIHNhdmlvciwgYW5kIGdlbmVyYWxseSBtaXhpbmcgZmFpdGggYW5kIGZpZ2h0aW5nIHRvIG1ha2UgbWUgdGhpbmsgdGhhdCBpZiB0aGVyZSBpcyBhIEdvZCB0aGVuIFMvSGUgc2hvdWxkIHNtaXRlIHRoZSBoZWxsIG91dCBvZiB0aGVzZSBwZW9wbGUuLiAKSWYgeW91ciBtaW5kIGNoZWNrcyBwb3N0dXJlIGFuZCBpdCBnb29kLCB0aGVuIHlvdSBzYXkgam9iIG1pbmQgYW5kIGtlZXAgb24gd2l0aCB5b3VyIGRheS4gClRvdGFsIG9uIHRoaXMgbGlzdDogMTEwIDEgMTQpICJCb3JuIFRoaXMgV2F5IChPcmlnaW5hbEFsYnVtKSAiOiBNYXJyeSBUaGUgTmlnaHQvQm9ybiBUaGlzV2F5L0dvdmVybm1lbnQgSG9va2VyL0p1ZGFzL0FtZXJpY2Fuby9IYWlyL1NjaGVpZSAvIEJsb29keSBNYXJ5IC8gQmFkIEtpZHMvSGlnaHdheSBVbmljb3JuIChSb2FkIFRvIExvdmUpL0hlYXZ5TWV0YWwgTG92ZXIvWW8gYW5kIEkvVGhlIEVkZ2UgT2YgR2xvcnkuIEdldCB0aGlzIG5ld2VzdCBhbGJ1bWZyb20gaVR1bmVzISAxNSkgUmV0cm8gRGFuY2VGcmVhayAuIApJIHNheSBoaWdobHkgdW5saWtlbHkgYXMgdGhlIFJlcHVibGljYW4gU2VuYXRlIGhhcyB6ZXJvIGFwcGV0aXRlIHRvIGltcGVhY2ggc2luY2UgZW1icmFjaW5nIGhpbSBhcyB0aGUgbGVhZGVyIG9mIHRoZWlyIHBhcnR5LiAKQW4gYXJiaXRyYXRvciB1bHRpbWF0ZWx5IHJ1bGVkIGluIHRoZSBDb3Ntb3BvbGl0YW4ncyBmYXZvciwgYWNjb3JkaW5nIHRvIHR3byBzb3VyY2VzLi4gCkkgYmUgMzAgdGhpcyB5ZWFyIGFuZCBteSBJVUQgd2lsbCBicmluZyBtZSB0byBhZ2UgMzIuIApOb24gVGhlcmFwZXV0aWMgRm9vdCBNYXNzYWdlUmVmbGV4b2xvZ3kgZm9vdCBtYXNzYWdlIGludm9sdmVzIG1hbmlwdWxhdGluZyBzb2Z0IHRpc3N1ZSBmb3IgdGhlcmFwZXV0aWMgcHVycG9zZXMuIEluIHNvbWUgc3RhdGVzLCB5b3UgYXJlIG5vdCByZXF1aXJlZCB0byBnZXQgYSBmb290IG1hc3NhZ2UgbGljZW5zZSwgYXMgbG9uZyBhcyB5b3UgYXJlIG5vdCBnaXZpbmcgbWFzc2FnZXMgZm9yIHRoZSBwdXJwb3NlIG9mIHRoZXJhcHkuIApUaGUgZ2FtZSBhc3N1bWVzIHlvdSBzdGFydGluZyBhcyBhIG5vcm1hbCBwZXJzb24gdGhhdCBnZXRzIGludm9sdmVkIGluICJldmVudHMgb3V0IG9mIHlvdXIgY29udHJvbCIgYW5kICJoYXZlIHRvIGJlY29tZSBhIHNraWxsZWQgYW5kIGRhbmdlcm91cyBvcHBvbmVudCBvZiB0aGUgZm9yY2VzIHRoYXQgY291bGQgZGVzdHJveSB5b3UuIiBJbiBvdGhlciB3b3JkcyB5b3Ugbm90IGdvaW5nIHRvIGJlIHN0YXJ0aW5nIG9mZiBhcyB0aGUgTWFqb3IgZnJvbSBHaXRTLiBUaGlzIGlzIHJlZmxlY3RlZCBpbiB0aGUgc3RhcnRpbmcgY2hhcmFjdGVyIHBhY2thZ2VzIHRoYXQgcXVpdGUgaG9uZXN0bHkgZG9uIGdpdmUgeW91IGVub3VnaCBnZWFyIHRvIGJ1aWxkIG91dCBhIGNoYXJhY3RlciB3aXRoIHRoZSBnZWFyIHRoYXQgb25lIHNob3VsZCBoYXZlIGFzIGEgcGVyc29uIGluIGEgZnV0dXJlIHdpdGggY3liZXJuZXRpYyBhdWdtZW50YXRpb24uIEFzIGFuIGV4YW1wbGUsIHRoZSBDeWJvcmcgYXJjaGV0eXBlIGdldHMgeW91IGEgZnJlZSBwaWVjZSBvZiBjeWJlcm5ldGljcyB1cCB0byAkMTAwMCwgYnV0IGEgcmVwbGFjZW1lbnQgYXJtIG9yIGxlZyBjb3N0cyAkMjAwMC4gVGhlIG9ubHkgd2F5IHRvIGdldCB0aGF0IGlzIHRvIHRha2UgYSBiaWcgZmF2b3IgZHVyaW5nIGNoYXJhY3RlciBjcmVhdGlvbiB0byBnZXQgZXh0cmEgY2FzaCwgYnV0IHRoZW4geW91IG9ubHkgZ290ICQ1MDAgbGVmdCBvdmVyIGZvciB5b3VyIHN0YXJ0aW5nIGdlYXIsIHdoaWNoIHJlYWxseSBkb2VzbiBidXkgbXVjaC4gVGhpcyBpcyBlYXN5IHRvIGZpeCBieSB0aHJvd2luZyBtb3JlIG1vbmV5IGF0IHBsYXllcnMgdG8gbWFrZSB0aGVpciBjaGFyYWN0ZXJzLCBhZGRpbmcgYSBmZXcgZGVmYXVsdCB0aGluZ3MgdG8gY2hhcmFjdGVyIGJ1aWxkcywgb3IgbGV0dGluZyB0aGVtIG93ZSBtb3JlIGZhdm9ycy4gV2hpY2ggYnJpbmdzIHVzIHRvOgpUaGUgc29uIG9mIGEgdHJ1Y2sgZHJpdmVyLCBEYXZpZCBVbGxpb3R0IHdhcyBib3JuIGluIEtpbmdzdG9uIHVwb24gSHVsbCBvbiBBcHJpbCA0IDE5NTQgYW5kIGJyb3VnaHQgdXAgaW4gYSBjb3VuY2lsIGhvdXNlIHdoZXJlIGhlIHNoYXJlZCBhIGJlZHJvb20gd2l0aCBoaXMgc2lzdGVyLiAKQ28gb3BzLiAKQW5vdGhlciBzYWZlIHdheSB0byBnbyBhcmUgdGhlIHNvIGNhbGxlZCAiVGVybWlud29obnVuZ2VuIi4gImkgd29yayBpbiBsYXN0IGZlYnJ1YXJ5IHdlZWsiKS4gdGhleSB1c3VhbGx5IGhhdmUgd2Vic2l0ZXMgc2hvd2luZyB3aGljaCBnaXJscyBhcmUgY3VycmVudGx5IHRoZXJlIGFuZCB0aGVuIHlvdSBlaXRoZXIgbWFrZSBhbiBhcHBvaW50bWVudCBpbiBhZHZhbmNlIG92ZXIgdGhlIHBob25lLCBvciBqdXN0IGdvIHRoZXJlLiBZb3UgYmUgZ3JlZXRlZCBieSB0aGUgc28gY2FsbGVkICJIYXVzZGFtZSIgKHNoZSB0YWtlcyBjYXJlIG9mIGJvdGggdGhlIGxhZGllcyBhbmQgdGhlIGN1c3RvbWVycywgc28gdGhhdCBldmVyeW9uZSBoYXBweSkgYW5kIGxlZCB0byBhIHNlcGFyYXRlIHJvb20uIGlmIHlvdSBkaWRuIGJvb2sgYSBnaXJsIGluIGFkdmFuY2UsIHRoZSBhdmFpbGFibGUgbGFkaWVzIHdpbGwgY29tZSBpbiAxIGJ5IDEgYW5kIGludHJvZHVjZSB0aGVtc2VsdmVzLiBpZiB5b3UgZGlkIGJvb2sgaW4gYWR2YW5jZSwgYnV0IGZlZWwgbGlrZSB5b3UgbWFkZSBhIGJhZCBjaG9pY2Ugd2hlbiBtZWV0aW5nLCB5b3UgY2FuIGNoYW5nZSB5b3VyIG9waW5pb24gYW5kIGFzayB0byBnZXQgYSBsb29rIGF0IHRoZSBvdGhlcnMuIGlmIG5vbmUgb2YgdGhlIGdpcmxzIGlzIHRvIHlvdXIgdGFzdGUsIHlvdSBjYW4ganVzdCBsZWF2ZS4gYSB2ZXJ5IGdvb2QgaGF1c2RhbWUgd2lsbCByZXNwZWN0IHRoYXQuClRoZSBEUFQgc2VyaWVzIGN1bG1pbmF0ZXMgd2l0aCAxNUsgUExPIG9uIDI0dGggQXByaWwsIHdpdGggdHdvIHJlIGVudHJpZXMgYW5kIGJyaW5ncyBScy4gCkEgZmV3IHdlZWtzIGFnbyBJIHRvb2sgYSBnaXJsIGhvbWUgZnJvbSBvdXIgc2Vjb25kIGRhdGUuIFJlYWxseSBuaWNlIHJlc3RhdXJhbnQsIHNoZSBnb3QgZHJlc3NlZCB1cCBraW5kIG9mIHNleHksIGNvbnZlcnNhdGlvbiBhbmQgZm9vZCB3YXMgZ3JlYXQuIFdlIGhhZCBhY3R1YWxseSBnb25lIGJhY2sgdG8gbXkgcGxhY2UgdG8gc21va2Ugc29tZSB3ZWVkIChhcyBjb2xsZWdlIGtpZHMgaW4gdGhlIFBhY2lmaWMgTm9ydGggV2VzdCBkbykgYW5kIG5vdGhpbmcgaGFwcGVuZWQgYnV0IHRoZXJlIHdhcyBkZWZpbml0ZWx5IHNvbWUgdGVuc2lvbi4gClRoaXMgaXMgd2h5IGl0IHdhcyByZW1vdmVkLi4gCk5TVyBGYWlyIFRyYWRpbmcgYWxsZWdlcyB0aGUgdG90YWwgYW1vdW50IHRha2VuIHdhcyBtb3JlIHRoYW4gJDEuNSBtaWxsaW9uLCBob3dldmVyIEhhcnJvZCdzIGxhd3llciB5ZXN0ZXJkYXkgaW5kaWNhdGVkIHNoZSBkaXNwdXRlZCB0aGF0IGFtb3VudC4gUmVjb3JkcyBmcm9tIGJvdGggY2x1YnMsIG9idGFpbmVkIGJ5IEZhaXIgVHJhZGluZywgcmV2ZWFsZWQgSGFycm9kIGdhbWJsZWQgJDEwLjEgbWlsbGlvbiBvbiBwb2tlciBtYWNoaW5lcyBvdmVyIGFib3V0IGEgc2V2ZW4geWVhciBwZXJpb2QsIGluY2x1ZGluZyB0aGUgeWVhcnMgc2hlIHdhcyBzd2luZGxpbmcgZnJvbSB0aGUgY29tcGFueS4gClRPS1lPICAgQSAxMTYgeWVhciBvbGQgSmFwYW5lc2Ugd29tYW4gd2hvIGxvdmVzIHBsYXlpbmcgdGhlIGJvYXJkIGdhbWUgT3RoZWxsbyB3YXMgaG9ub3VyZWQgU2F0dXJkYXkgYXMgdGhlIHdvcmxkJ3Mgb2xkZXN0IGxpdmluZyBwZXJzb24gYnkgR3Vpbm5lc3MgV29ybGQgUmVjb3Jkcy4gSGVyIGZhbWlseSBhbmQgdGhlIG1heW9yIHdlcmUgcHJlc2VudCB0byBjZWxlYnJhdGUuCkhlciBicmVha291dCBldmVudHMsIGhvd2V2ZXIsIHdlcmUgYXQgdGhlIDIwMTYgQXVzc2llIE1pbGxpb25zIGluIE1lbGJvdXJuZS4gU2hlIHN0YXJ0ZWQgdGhhdCBzZXJpZXMgYnkgdGFraW5nIDIxc3QgcGxhY2UgaW4gYSBOTEhFIDYgTWF4IGV2ZW50IGFuZCB0aGVuIHRoaXJkIGluIGEgTkxIRSBUZXJtaW5hdG9yIHRvdXJuYW1lbnQuIFNoZSBlbnRlcmVkIHRoZSBBVSQxMEsgYnV5IGluIE5MSEUgTWFpbiBFdmVudCB0aGUgQVBQVCBBdXNzaWUgTWlsbGlvbnMgUG9rZXIgQ2hhbXBpb25zaGlwIGFuZCBkaWQgd2VsbC4gClRoZSBwZXJzb24gd2hvIHdhcyBhdCBsZWFzdCB0aGUgY28gZGlzY292ZXJlciBvZiB0aGUgdHJhbnNpc3RvciB3YXMgYSBtYW4gY2FsbGVkIEdvcmRvbiBFIE1vb3JlLiBIZSBwcmVkaWN0ZWQgdGhhdCB0aGUgbnVtYmVyIG9mIHRyYW5zaXN0b3JzIG9uIGFuIEludGVyZ3JhdGVkIENpcmN1aXQgd291bGQgZG9ibGUgZXZlcnkgMiB5ZWFycy4gSW4gbW9yZSByZWNlbnQgeWVhcnMgdGhhdCBkb3VibGluZyBoYXMgaGFwcGVuZWQgZXZlcnkgMTggbW9udGhzLiAKWW91IHdlcmUgc3VjaCBhbiBhbWF6aW5nIGJ1bm55LiAKQ29uc2lkZXJpbmcgdGhlIGFib3ZlLCB0aGUgbmV4dCBtb3ZlIHNob3VsZCBiZSBzYXZpbmcgdGhlIGV4aXN0aW5nIGhhbmQgYW5kIGhpdHRpbmcgRHJhdwpKdXN0IGRvbiBiZSBzdHVwaWQgYWJvdXQgaXQgKEkgZGlkIHNvZnRlbiBteSBwb3N0aWlvbiBzb21ld2hhdCBpbiByZXNwb25zZSB0byBjb21tZW50cyAgdGhhbmtzISlTcGVhcmFmZXcgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhlcmUgaXMgYSBuZXdseSBjcmVhdGVkIFVLIFVMIHN1YnJlZGRpdC4gUGVyaGFwcyBhc2sgb24gdGhlcmUuIApTb21lb25lIGF0IG91ciB0YWJsZSBhY3R1YWxseSBwYWlkIGEgZ3V5ICQyMCBhdCB0aGUgdGFibGUgbmV4dCB0byB1cyB0byBtb3ZlIHNvIGhlIGhhZCBhIGJldHRlciB2aWV3IS4gCkl0IG1heSBiZSB0aGF0IHRoaXMgd2FzIHRoZSBhY3R1YWwgd29yZGluZyBvZiB0aGUgc3VydmV5IHF1ZXN0aW9uLCBpbiB3aGljaCBjYXNlIEkgc2hvdWxkIGFkZHJlc3MgbXkgY3VybXVkZ2Vvbmx5IGdydW1ibGluZ3MgdG8gTGluaywgdGhlIGNhc2ggbWFjaGluZSBjb21wYW55IHRoYXQgY2FycmllZCBpdCBvdXQuIApUaGVyZSB3YXMgZXZpZGVuY2UsIGJ1dCBJIHdhc24ndCBldmVuIGdpdmVuIGEgY2hhbmNlLiAKVGhlcmUgaXMgYWJzb2x1dGVseSBub3RoaW5nIHdyb25nIHdpdGggQ2FuYWRhIGJlaW5nIG1hZGUgdXAgb2YgYWxsIHNvcnRzIG9mIHJhY2VzLiBBbmQgYXMgbG9uZyBhcyB0aGUgY3VsdHVyZXMgd2UgaW1wb3J0IGNlZGUgdG8gdGhlIGh1bWFuaXNtIHRoYXQgbWFueSAoYnV0IG5vdCBhbGwpIENhbmFkaWFucyB1cGhvbGQsIHRoZW4gaXQgYSB3aW4gd2luIGZvciBldmVyeW9uZS4gCkl0IHdhcyBtb3JlIHRyaWFsIGFuZCBlcnJvciwgZ2V0dGluZyB0aGUgcHJpY2UgcG9pbnQgZG93biBmcm9tICQxNC45OSB0byAkOS45OSwgd2hpY2ggaXMgd2hhdCB0aGUgcmV0YWlsZXJzIHdhbnRlZCAgdGhhdCB3YXMgYSBzdHJ1Z2dsZS4gU2hvcHBpbmcgY2hhbm5lbCBRVkMuIApUaGF0IHB1dHMgdGhlIGN1dG9mZiBpbiBhIHJlYWxseSB1bmNvbWZvcnRhYmxlIHNwb3QuIEhlIGNhbiBmb2xkIGFuZCBnaXZlIHVwIHNvbWUgc3Vic3RhbnRpYWwgZXF1aXR5LCBoZSBjYW4gY2FsbCwgd2hpY2ggY2FwcyBoaXMgcmFuZ2UgYW5kIHB1dHMgaGltIGluIHBvc2l0aW9uIHRvIGdldCByZXNxdWVlemVkLCBvciBoZSBjYW4gNSBiZXQsIHdoaWNoIGF0IHRoaXMgdGFibGUgYWdhaW5zdCB0aGF0IG9wcG9uZW50IGd1YXJhbnRlZXMgYWNlcyBvciBraW5ncyBhbmQgeW91IGNhbiBzYWZlbHkgZm9sZC4uIApCZWNhdXNlIG9mIHRoZSBqdWRnZSdzIGN1cmlvdXMgdGltaW5nIHNvbWUgYW5ncnkgZnJpZW5kcyBvZiB0aGUgb2FrcyBldmVuIGNhbGwgaXQgcHJlanVkaWNpYWwgcGxhaW50aWZmcywgaW5jbHVkaW5nIHRoZSBDaXR5IG9mIEJlcmtlbGV5LCBoYXZlIG9ubHkgYSBzaG9ydCB3ZWVrIGluIHdoaWNoIHRvIGZpbGUgdGhlaXIgYXBwZWFscy4gCkZvciBpbnN0YW5jZSwgdGhlIHdvcmxkIGZhbW91cyBiYXNrZXRiYWxsIHRlYW0gdGhlIExvcyBBbmdlbGVzLiAKWW91IGNvdWxkIHRyeSBzZW5kaW5nIHlvdXIgYm9zcyBhIHByb2Zlc3Npb25hbCBlbWFpbCBzdGF0aW5nIHRoYXQgaGlzIGNvbmR1Y3QgaXMgbm90IHdhbnRlZCBhbmQgYXNraW5nIGhpbSB0byBzdG9wLiBLZWVwIHRoYXQgaW4geW91ciByZWNvcmRzIGFzIHdlbGwgYXMgaGlzIHJlc3BvbnNlLiBEb2N1bWVudCBpbiB0aGUgZmlyc3QgZW1haWwgZXZlcnl0aGluZyBoZSBoYXMgZG9uZSwgc2xhcHBlZCB5b3VyIGJvdHRvbSBhbmQgY29tbWVudGVkIG9uIHlvdXIgYnVzdCBhcyB3ZWxsIGFzIGFueXRoaW5nIGVsc2UuLiAKTmFoLiAKS2VlcCBkaXNjdXNzaW9ucyBjaXZpbCBhbmQgcmVzcGVjdGZ1bC4gS25vdyB5b3VyIHJlZGRpcXVldHRlIS4gQ29tbWVudHMgc2hvdWxkIGJlIG9uIHRvcGljIGFuZCBjb250cmlidXRlIHRvIHRoZSBjb252ZXJzYXRpb24uCldlIGdlbmVyYWxseSBoYXZlIGFuIGlkZWEgb2Ygd2hhdCB3ZSBjYW4gc3BlbmQgb24gb3Vyc2VsdmVzIGVhY2ggbW9udGggYW5kIHN0YXkgd2l0aGluIHRoYXQgYnVkZ2V0IHNvIGl0J3Mgbm90IGFuIGlzc3VlLiBZb3VyIHNlY29uZCBwb2ludCB0cnVseSBzcGVha3MgdG8gdGhlIGltcG9ydGFuY2Ugb2YgbWFycmlhZ2Ugbm90IGp1c3QgYXMgYSB1bmlvbiBvZiBsb3ZlLCBidXQgYXMgYSBzZWN1cml0eS4gCldlIGdvdCBhIGZpcnN0IGNsYXNzIGtpdCBvdXQgb2YgdGhlIGRlYWwhIEJ1dCB3aXRoIHRoZSBoZWxwIG9mIGEgc2hhcmVkIEFtYmllbiBhbmQgYXMgbXVjaCBmb29kIGFzIERlbHRhIGNhbiBzdHVmZiBpbiB5b3VyIGZhY2UsIHRoZSBmbGlnaHQgcGFzc2VkIHJlYWxseSBxdWlja2x5IGFuZCB3ZSBhcnJpdmVkIHRvIEFtbWFuIGFyb3VuZCA2IHBtIG9uIFN1bmRheS4gClRoYXQgZG9lc24gcnVpbiB0aGUgZGVmaW5pdGlvbiBhbnltb3JlIHRoYW4gYSB0b21hdG8gcnVpbnMgdGhlIGNsZWFyIGN1dCBkZWZpbml0aW9uIG9mIGEgdmVnZXRhYmxlLi4gCkl0J3MgYmVlbiAxNSB5ZWFycyBzaW5jZSB0aGUgY2l0eSBidW1wZWQgdXAgdGhlIHBheSBzY2FsZSBmb3IgY2l0eSBsYXd5ZXJzLiBXaGF0IGRvZXNuJ3QgaXMgQnVkaXNoJ3MgYWRtaW5pc3RyYXRpb24uIFNvIHdoeSBoYXNuJ3QgaGUgZW1icmFjZWQgZWZmb3J0cyB0byBjcmVhdGUgYSBuZXcgYW5kIG1vcmUgaW5jbHVzaXZlIGVjb25vbWljIGRldmVsb3BtZW50IGFnZW5kYS4KSWYgeW91IGRvbiBzZWUgWU9VUiBzdGF0ZSBsaXN0ZWQsIHlvdSBnb2xkZW4uIEV2ZW4gaWYgeW91IGxpdmUgaW4gb25lIG9mIHRob3NlIGVsZXZlbiBzdGF0ZXMsIHlvdSBjYW4gc3RpbGwgcmVjb3JkLiBFaXRoZXIgeW91IHdhcm4gaGVyIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIGNvbnZlcnNhdGlvbiwgb3IgaXQgbm90IExFR0FMTFkgQURNSVNTQUJMRS5UaGUgd2FybmluZyBjb3VsZCBzb3VuZCBsaWtlLCAiSGkgRGFtbXkhIFdlIGJlZW4gaGF2aW5nIHNvbWUgaXNzdWVzIHdpdGggY2FsbGVycyBzYXlpbmcgd2VpcmQgdGhpbmdzIGxhdGVseSBzbyBESCBhbmQgSSBwdXQgYSByZWNvcmRpbmcgYXBwIG9uIG91ciBkZXZpY2VzLiAKUmVhZCB0aHJvdWdoIHRoZSB3aG9sZSBib29rIGJlZm9yZSB5b3UgZ2V0IGluIHRvbyBkZWVwLiBUaGVyZSBhcmUgbG90cyBvZiBkZXRhaWxzIHNwcmVhZCB0aHJvdWdoIHRoZSB3aG9sZSB0aGluZyB0aGF0IGxpbmsgcGxhY2VzIGFuZCBwZW9wbGUgYW5kIGlkZWFzIHRvZ2V0aGVyIGFuZCBoZWxwcyB5b3UgZmxlc2ggb3V0IHRoZSB3b3JsZC4gQWxzbyBkb24ndCBleHBlY3QgaXQgdG8gYmUgbGluZWFyICByYXZlbmxvZnQgaXMgYSB2ZXJ5IG9wZW4gd29ybGQgc2V0dGluZywgc28gYmUgcHJlcGFyZWQgZm9yIGFueXRoaW5nIGFuZCBnaXZlIHlvdXIgcGxheWVycyBvcHRpb25zLiAKVGhlIGZpcnN0IFRoYW5rc2dpdmluZyBpbiB0aGUgTmV3IFdvcmxkIHdhcyBjZWxlYnJhdGVkIGluIDE2MjEsIG5lYXJseSBhIHllYXIgYWZ0ZXIgdGhlIFBpbGdyaW1zIGxhbmRlZCBhdCBQbHltb3V0aCBpbiB0aGUgTWFzc2FjaHVzZXR0cyBCYXkgQ29sb255LgpXZWlnaHQgbG9zcyB3YXMgc3R1cGVmeWluZy4gSSBjb3VsZG4ndCB3b3JrIG91dCBhdCB0aGUgc2FtZSBsZXZlbHMsIGJ1dCBqdXN0IGEgbGl0dGxlIGJpdCB0byBzdGF2ZSBvZmYgbGFyZ2UgbXVzY2xlIGxvc3NlcyBkaWQgd29uZGVycy4gSSdtIHRhbGtpbmcgeW9nYSBsZXZlbC4gTm90IHlvZ2kgbGV2ZWwuClRoZXkgd2VyZSBiZWluZyBwb2xpdGUgYW5kIHRoYXQgaXMgT0sgdG9vLi4gClRoYXQncyB0aGUgdGhlb3J5IHRoYXQgZXZlcnlvbmUgaW4gYSBmaWVsZCBnZXRzIHByb21vdGVkIHRvIGhpcyBvd24gbGV2ZWwgb2YgaW5jb21wZXRlbmNlLiAKQW5kIHJpZ2h0IG5vdyB0aGlzIGNvdW50cmllcyByZXNwb25zZSB0byB0aGUgb3Bpb2lkIGVwaWRlbWljIGlzIGFzIGhhbSBmaXN0ZWQgYW5kIHN0dXBpZCBhcyBpdCByZXNwb25zZSB0byB0aGUgb3RoZXIgaWxsZWdhbCBkcnVncy4uIApUaGF0IGNoYXB0ZXIgaGF1bnRlZCBEZXNtb25kLiBTaGUgZGl2b3JjZWQsIHNodXQgZG93biBoZXIgYnVzaW5lc3MgYW5kIG1vdmVkIGF3YXkgZm9ybSBOb3ZhIFNjb3RpYSBzZWVraW5nIG5ldyBvcHBvcnR1bml0aWVzIGFuZCBhIGZyZXNoIHN0YXJ0LiBJbiAxOTY1IHNoZSBkaWVkIGFsb25lIGluIHRoZSBVU0EgYXQgNTAuIApJIHRoaW5rIHRoZSBsYXN0IFJQRyB3aGVyZSB0aGUgc3Rvcnkgd2FzIG9uZSBvZiB0aGUgbWFpbiByZWFzb25zIEkga2VwdCBwbGF5aW5nIGl0IHdhcyBTaGFkb3dydW46IERyYWdvbmZhbGwgZm9yIHNvbWUgcmVhc29uLiBQcm9iYWJseSBiZWNhdXNlIEkgc2ltcGx5IHdhbnRlZCB0byBrbm93IHdoYXQgd2FzIGFjdHVhbGx5IGdvaW5nIG9uLCBzaW1pbGFyIHRvIGEgZ29vZCBkZXRlY3RpdmUgc3RvcnkuIFRoYXQgdGhlIHN0b3J5IHdhcyByZWxhdGl2ZWx5IHNtYWxsIHNjYWxlIGFuZCBub3QgInNhdmUgdGhlIHdvcmxkISIgcmlnaHQgaW4geW91ciBmYWNlIGRpZCBwcm9iYWJseSBhbHNvIGhlbHAuIEl0IHNpbXBseSBzdGFydHMgd2l0aCBhIGJ1bmNoIG9mIHBlb3BsZSB0cnlpbmcgdG8gc3RheSBhbGl2ZSBhZ2FpbnN0IGFuIGVuZW15IHRoYXQgaXMgbm90IG9ubHkgd2F5IG1vcmUgcG93ZXJmdWwgdGhhbiB0aGVtIGJ1dCBhbHNvIHN1cHBvc2VkIHRvIGJlIGRlYWQuCkhlIGEgcGV0LiBIZSB3YW50cyB5b3VyIGF0dGVudGlvbi4gQ2F0cyB2ZXJ5IG11Y2ggZW5qb3kgYmVpbmcgd2l0aCB5b3UuIE15IGNhdCBoYXMgc2xlcHQgbnV6emxlZCBhZ2FpbnN0IG15IHJpZ2h0IHNpZGUgZXZlcnkgc2luZ2xlIG5pZ2h0IGZvciB0d2VsdmUgeWVhcnMuCldlIGNhbiBkaXNjb3VudCBBSywgQVEsIEFKLCBhcyB5b3UgZXhwZWN0IHRvIHNlZSBhIHJhaXNlIGZyb20gdGhvc2UgaGFuZHMgaW4gYSBsaW1wZWQgcG90IHByZWZsb3AuIApJIG9mdGVuIHBsYXkgaW4gZ2FtZXMgd2hlcmUgdGhlIGJlc3QgcGxheWVycyAoZ3V5cyB3aG9tIGhhdmUgd29uIDcgZmlndXJlcysgbGlmZXRpbWUgaW4gY2FzaCBhbmQvb3IgdG91cm5leXMpIGFyZSBkcnVua2VzdCBhbmQgbG9vc2VzdCAoaW1hZ2UgdXNlZCB0byBnZXQgYWN0aW9uKS4gSWYgeW91IGp1c3Qgd2FsayB1cCB0byB0aGUgdGFibGUsIHlvdSB0aGluayB0aGV5IGFyZSBpZGlvdHMgdGhhdCBoYXRlIG1vbmV5LiBIb3dldmVyIHRoZXkgZW5kIHVwIHdpdGggYWxsIHRoZSBjaGlwcyBieSB0aGUgdGltZSB0aGUgZ2FtZSBicmVha3MuIApGbG9yaWRhJ3MgYnVpbHQgdG8gc3RvcCB0aGUgcnVuLCBzbyB0aGF0J2xsIGJlIGludGVyZXN0aW5nIGZvciBhIHdoaWxlLiAKVGhlIENpdHkgR29sZiBpcyBhIEdlcm1hbiBlbmdpbmVlcmVkIGJ1aWx0IGluIEJyYXppbCBmcm9udCB3aGVlbCBkcml2ZSwgZml2ZSBwYXNzZW5nZXIgaGF0Y2hiYWNrLiBEZXNwaXRlIGl0cyBuZXcgc2hlZXQgbWV0YWwgYW5kIHJlZGVzaWduZWQgaW50ZXJpb3IsIGl0IGNsZWFybHkgZXhoaWJpdHMgaXRzIG9sZGVyICgxOTk5IDIwMDYpIEdvbGYgRE5BLCBidXQgdGhhdCdzIG5vdCBhIGJhZCB0aGluZy4gVGhlIENpdHkgR29sZiByZXRhaW5zIHRoZSBvcmlnaW5hbCBHb2xmJ3MgYmFsYW5jZWQgcHJvcG9ydGlvbmluZyBhbmQgY2xlYW4gbGluZXMgYWxvbmcgd2l0aCBpdHMgYnJvYWQgc2xhYnMgb2YgZ2xhc3Mgd2hpbGUgbG9va2luZyBmcmVzaGVyIGFuZCBtb3JlIHVwIHRvIGRhdGUgdGhhbmtzIHRvIGEgc2xlZWtlciBub3NlIHNvZnRlciBhbmdsZXMuLiAKT250YXJpbyBwcmV2aW91c2x5IG9mZmVyZWQgbm9uIGJpbmFyeSBvcHRpb25zIGZvciBkcml2ZXJzJyBsaWNlbnNlcyBhbmQgaGVhbHRoIGNhcmRzLCBidXQgbm90IGJpcnRoIGNlcnRpZmljYXRlcy4gVGhlIGNoYW5nZSBpcyBzaWduaWZpY2FudCwgc2FpZCBGZXJndXNvbiwgY2FsbGluZyBiaXJ0aCBjZXJ0aWZpY2F0ZXMgInRoZSBtb3N0IHZpdGFsIGZvcm0gb2YgSUQgZm9yIHBlcnNvbmhvb2QuIgpTd2luZUZsdVNobXUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KUG91ciBhdm9pciBkaiBkYW5zIGxlIHBhc3Mgc2lnbmFsIGRlIHRlbHMgZHlzZm9uY3Rpb25uZW1lbnRzIGRhbnMgZGVzIHN1cGVybWFyY2hzLCBub3VzIG5vdXMgYXR0ZW5kaW9ucyAgdW5lIHJwb25zZSBkZSBsJ2FkbWluaXN0cmF0aW9uIHJhcGlkZS4gCjMpLiBUbyBhY2Nlc3MgdGhpcyBlbWVyYWxkIHlvdSB3aWxsIG5lZWQgdG8gdW5sb2NrIGFsbCByZWQgc2FmZXMgKHdoaWNoIGNhbiBiZSBkZWFjdGl2YXRlZCBpbiB0aGUgc2VjdGlvbiB5b3UgZm91bmQgdGhlIHByZXZpb3VzIGVtZXJhbGQpLiBHbyB0byB0aGUgbG93ZXIgZmxvb3IgYW5kIGNsaW1iIHRvIHRoZSBjZWlsaW5nLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gZ28gb250byBhIGhvcml6b250YWwgc3VwcG9ydCAodGhlIGhpZ2hlc3Qgb25lIGluIHRoZSBtYWluIGxldmVsKSwgdGhlIG9uZSB5b3UgYXJlIGxvb2tpbmcgZm9yIGhhcyBhIG1ldGFsIGJveCBvbiBpdCBhbmQgYW4gZW5lbXkuIApZb3UgZG8gbm90IGhhdmUgdG8gc3BlbmQgeW91ciBjYXNoIG9uIHlvdXIgZmxpZ2h0IHRvIFZlZ2FzIG9yIHlvdXIgZ2FzIG1vbmV5IHRvIGdldCB0byBBdGxhbnRpYyBDaXR5LiBZb3UgZG8gbm90IGhhdmUgdG8gcGF5IGZvciByZXN0YXVyYW50IHNlcnZpY2VzIG9yIGJvb2sgYSAkMjAwIHJvb20uIFlvdSBkbyBub3QgZXZlbiBoYXZlIHRvIGdpdmUgdGlwcyB0byB5b3VyIGRlYWxlci4gVGhlc2UgYXJlIHRoZSB3YXlzIHRoYXQgeW91IHNhdmUgbW9uZXkgd2hlbiB5b3UgcGxheSBvbmxpbmUgcG9rZXIuIFRoZSBtb25leSB5b3Ugc2F2ZSBjb3VsZCBiZSBiZXR0ZXIgc3BlbnQgb24gYnV5aW5nIHBva2VyIGNoaXBzLgpDb25mZXNzaW9uOiBJIGRpZCBhIGxvdCBvZiBoaWdoIG1pbGVhZ2UgcnVubmluZyBkdXJpbmcgdGhlIGhvbGlkYXlzLCBidXQgYWxzbyBhIHRvbiBvZiBlYXRpbmcuIEkgcHJvYmFibHkgbmVlZCB0byBsb3NlIGEgYml0IG9mIHB1ZGdlIG92ZXIgdGhlIG5leHQgZmV3IG1vbnRocyBzbyBJIGNhbiBnZXQgaW50byBpZGVhbCByYWNpbmcgd2VpZ2h0IGZvciBteSBnb2FsIG1hcmF0aG9uIHRoaXMgeWVhciAoQmVybGluKSBpbiBTZXB0ZW1iZXIuCkkgbGV0IGhlciBzdHVwaWQgc3RhdGVtZW50IGhhbmcgaW4gdGhlIGFpciBmb3IgYSBtb21lbnQgYmVmb3JlIGNvbnRpbnVpbmcgb24gaW4gbXkgY2hlZXJmdWwgbWFubmVyLCB3aXRoIGEgYml0IG9mIGEgZ2lnZ2xlIGFuZCBhIHF1aXp6aWNhbGx5IHJhaXNlZCBleWVicm93LCAiV2VsbC4gCkJ1dCBJIHRob3VnaHQsIGhvdyBtdWNoIHRpbWUgZG8gSSBoYXZlIGxlZnQgb24gdGhlIHBsYW5ldD8gRG8gSSB3YW50IHRvIGdvIG9uIGFuZCBvbiBkb2luZyB0aGUgc2FtZSB0aGluZz8gb2YgdGhlIGNvaG9ydCBoYWQgc29tZXRoaW5nIHRoYXQgZHJldyB0aGVtIHRvIHRlYWNoaW5nIGFwYXJ0IGZyb20gYSBsb3ZlIG9mIHNpbXVsdGFuZW91cyBlcXVhdGlvbnMgb3IgdGhlIHBsYXlzIG9mIE1vbGkgRm9yIHNvbWUsIGl0IHdhcyBpbiB0aGUgYmxvb2QuIApJdCB3YXNuIHRoYXQgaGUgbWFkZSBvdXIgam9icyBoYXJkZXIgdGhhdCBwaXNzZWQgbWUgb2ZmLCBpdCB3YXMgdGhhdCBoZSB3YXMgYSBzY2hvb2wgdGVhY2hlci4gCkl0IHdhcyBhIGh1Z2UgcHJpdmlsZWdlIHRvIGJlIGludml0ZWQgdG8gbGF1bmNoIHRoZSBib29rIG9uIHN1Y2ggYW4gaW1wb3J0YW50IGRhdGUgaW4gdGhlIEtuZ2l0YW5nYSBjYWxlbmRhciBhbmQgdG8gc2VlIHRoZSB3YXkgaW4gd2hpY2ggaXQgaGFzIGJlZW4gZW1icmFjZWQgYnkgVGFpbnVpIGhhcyBiZWVuIGFtYXppbmcuIEkgYWxzbyByZWFsbHkgaG9wZWQgdGhlIGJvb2sgd291bGQgc3BlYWsgdG8gUGtlaCBhYm91dCB0aGUgbmVlZCB0byBvd24gdGhlaXIgaGlzdG9yeSBhbmQgYWdhaW4gdGhlIHJlY2VwdGlvbiBoYXMgYmVlbiByZW1hcmthYmxlLiBBdCB0aW1lcyBpdCBoYXMgZmVsdCBsZXNzIGxpa2UgYSBib29rIGFuZCBtb3JlIGxpa2UgSSdtIHBhcnQgb2Ygc29tZSBraW5kIG9mIHNvY2lhbCBtb3ZlbWVudC4gClRoZXkgYnJvdWdodCB1cyBhIHByZXNlbnQgb2YgMiBIb2dzIChhbiBBcnRpY2xlIHdlIGZpbmQgaGVyZSB2ZXJ5IFNjYXJjZSkgYW5kIHNvbWUgQnJlYWQgRnJ1aXQ7IGZvciB0aGVzZSB0aGV5IGhhZCBIYXRjaGV0cyBhbmQgb3RoZXIgdGhpbmdzLiAKU28gU2VmIGhlIHN0YXllZCBmb3IgdGhlIG5leHQgMTEgeWVhcnMgNSBtb250aHMgYW5kIDE2IGRheXMuLiAKQWdlIDIwcyBFc3NlbmNlIENvdmVyIFBhY3QgaW4gMjEuIFN1cGVyIGVhc3kgdG8gdXNlLCBhIGNyZWFtIHBhY3QgdGhhdCBvZmZlcnMgbGlnaHQgdG8gbWVkaXVtIGNvdmVyYWdlLiBHb3QgY29tcGxpbWVudHMgd2hlbiBJIHVzZWQgdGhpcyBmb3IgdGhlIHJhZGlhbnQgc2tpbi4gCkhheWxleSBpbiAyMDA0IGF0IGFnZSAxMiwgbW9tZW50cyBiZWZvcmUgdGhlIHRzdW5hbWkgaGl0LgpDYXB0YWluIExvdSB3aWxsIGFsc28gYmUgZ3JlYXRseSBtaXNzZWQgYnkgaGlzIGRvZyBBbmdlbCBhbmQgaGlzIGNvdW50bGVzcyBmcmllbmRzIHRoYXQgYWx3YXlzIHN1cnJvdW5kZWQgaGltLiAKTm8gdmlkZW8gZ2FtZSBhcnRpZmljaWFsbmVzcyAgIFdoYXQgdGFrZXMgbWUgb3V0IG9mIHRoZSB3b3JsZCBpbiBtb3N0IG1hbmdhIGlzIHdoZW4gdGhleSB1c2UgdGhlIHN5c3RlbXMgYW5kIG5hbWVzIG9mIHZpZGVvIGdhbWVzLiBGb3IgZXhhbXBsZSB3aGVuIGNoYXJhY3RlcnMgbGl0ZXJhbGx5IHJlZmVycyB0byBnYWluaW5nICJsZXZlbHMiIG9yICJza2lsbHMiIG9yIGEgd29ybGQgYmUgc3RydWN0dXJlZCBsaWtlIGEgSlJQRyB3aXRoIHRoaW5ncyBsaWtlIHpvbmVzIG9yIGRlbW9uIGtpbmdzLiAKQm90aCBjb3VsZCBiZSBqdXN0IGFzIHdyb25nIHdpdGggdGhlaXIgaW5pdGlhbCByZWFjdGlvbnMuIApOb3csIHRoZSBzYW1lIGd1eSBpcyBvdXQsIGltcGVyc29uYXRpbmcgT1Agb24gc29jaWFsIG1lZGlhLCBhbmQgcHJldGVuZGluZyB0byBiZSBhIHBlZG9waGlsZS4gCkl0IGhhcyBiZWVuIGRldGVybWluZWQgdGhhdCBhIHBhc3NlbmdlciBvbiB0aGlzIGZsaWdodCBkb2VzIG5vdCBleGlzdC4gT3VyIG1hbmlmZXN0IGhhcyBldmVyeSBzZWF0IGZ1bGwsIHlldCB3ZSBzb21laG93IGhhdmUgb25lIGFkZGl0aW9uYWwgcGFzc2VuZ2VyIGFjY29tbW9kYXRlZCBpbiB0aGUgcGxhbmUuIFdlIGNhbm5vdCBkZXRlcm1pbmUgd2hvIG9yIHdoYXQgdGhpcyBwYXNzZW5nZXIgaXMsIHNvIHdlIGhhdmUgYmVlbiBpbnN0cnVjdGVkIHRvIHRha2Ugb2ZmIHdpdGggbm8gaW50ZW50aW9uIG9mIGxhbmRpbmcgdGhlIHBsYW5lLiAKU3Vydml2YWwgcmF0ZXMgYXJlIGxvdyBmb3IgYSByZWFzb24uIEVpdGhlciB0aGUgY2FuY2VyIHdpbGwga2lsbCB5b3Ugb3IgdGhlIHRoZXJhcHkuIApIZXIgbWFpbiBwb2ludHMgYWJvdXQgbWFpbnRhaW5pbmcgbG92ZSwgYXR0cmFjdGlvbiwgYWRtaXJhdGlvbiwgZXRjLiAKU2lsdmVybWFyZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KVGhlcmUgYXJlIHNvbWUgdmVyeSBwcm9taW5lbnQgdHlwZXMgb2YgZ2FtYmxpbmcgaW4gSW5kaWEuIFRoZSBtb3N0IGVtaW5lbnQgb25lIG9mIHRoZW0gaXMgTWF0a2Egd2hpY2ggaG9sZHMgaXQgb3JpZ2luIGluIE11bWJhaSBieSBSYXRhbiBLaGF0cmkuIE1hdGthIGFsc28ga25vd24gYnkgdGhlIG5hbWUgU2F0dGEgaXMgYSBnYW1lIGNvbmNlcm5lZCB3aXRoIHRoZSBnYW1ibGluZyBvZiBudW1iZXJzLiBUaGUgZ2FtaW5nIHByb2NlZHVyZSBzYXlzIHRoYXQgdGhlIGNsaWVudCBjb25jZXJuZWQgYmV0IG1vbmV5IG9uIHR3byB0aHJlZSBkaWdpdCBudW1iZXJzIGFuZCB0aGUgd2lubmluZyBudW1iZXIgZ2V0cyBlaWdodHkgdGltZXMgbW9yZSBtb25leSB0aGFuIHdoYXQgd2FzIHN0YWtlZC4gVGhlIGNsaWVudCB3aG8gaGFzIHdvbiB0aGUgcHJpemUgbW9uZXkgZ2l2ZXMgaXQgdG8gdGhlIGxvY2FsIHN1YiBhZ2VudCB3aG8gdGFrZXMgb3ZlcmFsbCA1JSBvZiBpdCBhbmQgdGhlbiB0aGUgc3ViIGFnZW50IGluIHJldHVybiBnaXZlcyB0aGF0IG1vbmV5IHRvIHRoZSBsb2NhbCBib29raWUgd2hvIGtlZXBzIGEgcmVjb3JkIG9mIHRoZSBiZXQgYW1vdW50IGFuZCB0aGUgbnVtYmVycy4gTXVtYmFpIGlzIGEgd2VsbCBrbm93biBjZW50ZXIgZm9yIE1hdGthIGdhbWJsaW5nIGluIEluZGlhLgpVc2luZyBhbiBlYXIgZHJvcHBlciwgYXBwbHkgYSBmZXcgZHJvcHMgb2YgZXh0cmEgdmlyZ2luIG9saXZlIG9pbCAoY29va2luZyBvaWwgaXMgcHJlZmVycmVkIGR1ZSB0byBleHRyYSB2aXJnaW4gbm90IGhhdmluZyBhZGRpdGl2ZXMpIHRvIHlvdXIgZWFyLiAKUmVhZCBhIHN1bW1hcnkgb2YgdGhlIGtleSB0ZXJtcyBhbmQgY29uZGl0aW9ucwpPcmdhbml6ZXJzLCBzdWNoIGFzIGEgc3BpY2UgcHVsbG91dCBhbG9uZ3NpZGUgdGhlIHJhbmdlLCBjdXQgZG93biBvbiBjb3VudGVydG9wIGNsdXR0ZXIuV2hpbGUgdGhlIHZhdWx0ZWQgY2VpbGluZyBpbiB0aGUga2l0Y2hlbiBoZWxwcyBtYWtlIHRoZSBzcGFjZSBmZWVsIGFpcnkgYW5kIGxpZ2h0LCBpdCB0ZXN0ZWQgdGhlIHRlYW0gbWF0aCBza2lsbHMuIEZpZ3VyaW5nIG91dCBwbGFjZW1lbnQgZm9yIHRoZSBwb3QgbGlnaHRzIGFyb3VuZCB0aGUgZXhpc3Rpbmcgc2t5bGlnaHRzIHdhcyBlYXN5IGNvbXBhcmVkIHRvIGNhbGN1bGF0aW5nIHRoZSBhbmdsZXMgZm9yIHRoZSBjdXN0b20gc3RhaW5sZXNzIHN0ZWVsIGR1Y3QgYWJvdmUgdGhlIGhvb2QgZmFuIHRoYXQgaGFkIHRvIGJlIG1pdHJlZCB0byBmaXQgdGhlIHNsb3BlIG9mIHRoZSBjZWlsaW5nLCBKZW5zZW4gc2F5cy5UbyBlbnN1cmUgYWxsIHRoZSB3b29kIHdhcyBjb21wbGVtZW50YXJ5LCBKZXN0IHNheXMgdGhleSBjb25zaWRlcmVkIDE1IGRpZmZlcmVudCBzaGFkZSBvcHRpb25zIGJlZm9yZSBkZWNpZGluZyBvbiBqdXN0IHRoZSByaWdodCBjb2xvdXIgZm9yIHRoZSB3aGl0ZSBvYWsgZW5naW5lZXJlZCBoYXJkd29vZCBmbG9vciB0aGF0IHJ1bnMgdGhyb3VnaG91dCB0aGUgaG9tZSBsaXZpbmcgc3BhY2VzLiAKWW91IGFyZSBkZWxpcmlvdXMuIApBZnRlciBpbml0aWFsIGFudGVzIGFyZSBtYWRlIGVhY2ggcGxheWVyIHRoZW4gZGVjaWRlcyB0byBmb2xkIG9yIHBsYXkuIApJIHRob3VnaHQgdGhhdCBtYXliZSBpZiBJIGNhbiBqdXN0IGdldCBwZW9wbGUgdGhhdCBhcmUgbW90aXZhdGVkIHRvIGNhbGwgbWUgaW5zdGVhZCwgdGhhdCB3aWxsICJicmVhayB0aGUgaWNlIiBzbyB0byBzcGVhay4gWWEga25vdyB3aGF0IGhhcHBlbmVkPyBJIGRpZG4ndCB3YW50IHRvIGRvIG1hcmtldGluZyBvciBhZHZlcnRpc2luZy4gClRoZXJlIGFyZSBzaWRlIG5laWdoYm9ycyB0aGF0IG1ha2UgbG91ZCBub2lzZXMgdGhhdCB0aGUgYm90dG9tIG5laWdoYm9ycyBjb3VsZCBlYXNpbHkgdGhpbmsgYXJlIG1pbmUuIApJbnZlc3RpbmcgaW4gYSBuZXcgc3BvcnQgY2FuIGJlIGNvc3RseS4gSG93ZXZlciwgd2hlbiB5b3UgZGVjaWRlIHRvIHRha2UgdXAgYnJpZGdlIGFsbCB5b3UgbmVlZCBpcyBhIGRlY2sgb2YgY2FyZHMgYW5kIHRocmVlIG90aGVyIHBsYXllcnMsIGEgdmVyeSBpbmV4cGVuc2l2ZSBwYXN0aW1lLiBPbiBhdmVyYWdlLCAxMiwwMDAgcGVvcGxlIHdvcmxkd2lkZSBhcmUgcGxheWluZyBicmlkZ2UgZm9yIGZyZWUgb24gdGhlIGludGVybmV0IGF0IGFueSBnaXZlbiB0aW1lIGZyb20gdGhlIGNvbWZvcnQgb2YgdGhlaXIgb3duIGhvbWVzLgpEZXIgVmVydGVpZGlnZXIgaGF0IGRlbiBSdWYgZWluZXMgQXJiZWl0c3RpZXJzLiAyMiBNaW51dGVuIHBybyBNYXRjaCBzdGFuZCBkZXIgMzcgaiBWZXJ0ZWlkaWdlciBmIGRpZSBQYW50aGVycyBhdWYgZGVtIEVpcy4gSW0gUG93ZXJwbGF5IGJpbGRldGUgZXIgZWluIGtvbmdlbmlhbGVzIER1byBtaXQgSnVuZ3N0YXIgQWFyb24gRWtibGFkLiAKV2hhdCBtaWdodCBlc3RhYmxpc2ggdGhlIHBlcmlwaGVyaWVzIG9mIHRoaXMgcXVlc3Rpb24gYXJlIGJvb2tzIHRoYXQga2VlcCBpbnRhY3QgYSBiZWxpZWYgc3lzdGVtLCBvciB3YXkgb2YgbGlmZSwgYSBzZWNyZXQgb3Igbm90IGNvZGlmaWNhdGlvbiBvZiBhIHN0YXRlIG9mIHdlbGwgYmVpbmc/IEEgQmlibGU/IEFsY29ob2xpY3MgQW5vbnltb3VzPyBQcm9iYWJseSB0aGF0IGlzIHRoZSBmaXJzdCBwbGFjZSB0byB2aXNpdCwgdGhlIHJlbGlnaW91cyBib29rLCB0aG91Z2ggb2ZmaGFuZCBpdCBzZWVtcyB0aGF0IHRoZSB0cmF2ZWwgb2YgdGhpcyBzb3J0IG9mIGJvb2sgd291bGRuIHRyYW5zY2VuZCBvbmUgb3duZXIuIFRoZSBCaWJsZSBhbmQgY29tcGFueSBhcmUgZW5vcm1vdXNseSBwb3B1bGFyIGJvb2tzIGFuZCBoYXZlIGJlZW4gcHJpbnRlZCBubyBkb3VidCBpbiB0ZXJtcyBvZiBiaWxsaW9ucyBvZiBjb3BpZXMsIHNvIHRoZXkgaGF2ZSBhIG11Y2ggYmV0dGVyIGNoYW5jZSBvZiBiZWluZyB0aGUgbGVhZGVyIG9mIHRoZSBjYXRlZ29yeSBieSBzaGVlciBudW1lcmljYWwgcG9zc2liaWxpdHkuIApJIGxpa2UgeW91ciB0aGlua2luZyBhYm91dCBpbnRlcmVzdGluZyB0aGluZ3MgdG8gZG8sIEkgbG92ZSB0byBnbyBvdXQgb24gYSBkYXRlIHdpdGggeW91LCBidXQgbG9naXN0aWNzIGFyZSBtb3JlIGltcG9ydGFudCBkZXBlbmRpbmcgb24gd2hhdCB5b3Ugd2FudCB0byBhY2NvbXBsaXNoIHdpdGggdGhpcyBnaXJsLiAKSG93ZXZlciwgaW4gdGhlIGNhc2Ugb2YgYm90aCBSaXNoaWtlc2ggYW5kIEhhcmlkd2FyLCB0aGUgQ1dDIHN0cmFpZ2h0YXdheSBtYWRlIG1lZGl1bSBmbG9vZCBmb3JlY2FzdHMsIGNsZWFybHkgbWlzc2luZyB0aGUgbG93IGZsb29kIGZvcmVjYXN0cy4KVmVzIGR1IHRyb3R0b2lyCkNoYXJpdHkgcG9rZXIgaW4gTWljaGlnYW4gY291bGQgc3RvcCBpbiBKdWx5IHdpdGhvdXQgbGVnYWwgb3IgbGVnaXNsYXRpdmUgYWN0aW9uCiJPdXIgZm9jdXMgaXMgb24gZGVsaXZlcmluZyB0aGUgYmVzdCBwb3NzaWJsZSBzZXJ2aWNlIHRvIG91ciBmb3VyIGxpbmVzIG9mIGJ1c2luZXNzLCB3aGljaCB3ZSBjYWxsIHRoZSBmb3VyIENzICAgdGhlIENoYW1iZXIsIENvbW1pdHRlZXMsIENhdWN1cyBhbmQgQ29uc3RpdHVlbmNpZXMsIiBzYXlzIHRoZSBDbGVyay4gClIuIApEaWV0IGlzIG5vdCB0aGUgc29sZSBmb2N1cy4gRXRoaWNhbCB2ZWdhbmlzbSBpcyBzaW1wbHkgbm90IGVhdGluZyBhbmltYWwgcHJvZHVjdHMsIHdoaWNoIGhhdmUgb25seSBiZWVuIGF2YWlsYWJsZSBpbiB0aGUgZm9ybSBhbmQgcXVhbnRpdHkgdGhleSBhcmUgbm93IGZvciBhIGZldyBodW5kcmVkIHllYXJzLi4gClBlcmhhcHMgdGhlIGN1cnJlbnQgc2NhbmRhbCBvdmVyIEdvbGRtYW4gU2FjaHMsIHRoZSBhYnNvbHV0ZSBvYnZpb3VzIGZhY3QgdGhhdCB0aGV5IHJpcHBlZCB1cyBvZmYgYW5kIG1hZGUgYSBmb3J0dW5lIGRvaW5nIGl0LCB3aWxsIGFsbG93IGF2ZXJhZ2UgQW1lcmljYW5zIHRvIGZpZ3VyZSBvdXQgd2hlcmUgdGhlaXIgaW50ZXJlc3RzIHJlYWxseSBsaWUuIApJcyBJdCBJbGxlZ2FsIHRvIERyaXZlIFdpdGggYSBEb2cgaW4gWW91ciBMYXAKSG93ZXZlciwgdGhlcmUgaXMgc29tZXRoaW5nIEkgd2FudGVkIHRvIHRhbGsgYWJvdXQgd2hpbGUgd2UgZW5qb3llZCB0aGUgY2FzaW5vcy4gCkJ5IGEgZGVlcCByZWNlc3Npb24sIEFsbGVuIG1lYW5zIGEgc2lnbmlmaWNhbnQgaW5jcmVhc2UgaW4gdW5lbXBsb3ltZW50IGFuZCBiYW5rcnVwdGNpZXMgZm9yIHRoZSBsZWdpb25zIG9mIEphcGFuZXNlIGNvbXBhbmllcyB0aGF0IHNob3VsZCBnbyBiYW5rcnVwdCwgYnV0IGhhdmVuIGR1ZSB0byBzdWJzaWRpZXMgYW5kIG90aGVyIGZvcm1zIG9mIHByb3RlY3Rpb25pc20gYnkgYSBnb3Zlcm5tZW50IHdhcnkgb2YgYSBwb3NzaWJsZSBkb21pbm8gZWZmZWN0IGFuZCBzdXJnaW5nIHVuZW1wbG95bWVudC4gClVwb24gcmV0aXJpbmcgYXQgdGhlIGVuZCBvZiBsYXN0IHllYXIsIGFuZCBjbGVhcmx5IGlnbm9yYW50IG9mIGFuIGVudGlyZSBnZW5yZSBvZiBob3Jyb3IgbW92aWVzLCBTdGVlciBhbmQgc29tZSBmcmllbmRzIHBva2VkLCBwcm9kZGVkLCBkdWcsIGFuZCBleGNhdmF0ZWQsIHRvaWxpbmcgYXdheSBpbiB0aGUgYnJ1dGFsIGFuZCB1bmZvcmdpdmluZyBsYW5kIG9mIFRoYXQgU3BvdCBpbiBGcm9udCBvZiB0aGUgQ291Y2guIApJIGdhdmUgdXAgb24gdGhlbSBjb21wbGV0ZWx5IHdoZW4gbXkgYmYgYW5kIEkgd2VudCBpbiBhbmQgc2F0IGF0IGEgdGFibGUgYW5kIHdhaXRlZCB3aGlsZSB3ZSB3YXRjaGVkIHRocmVlIHNlcnZlcnMgaGFuZ2luZyBvdXQgYmVoaW5kIHRoZSBiYXIuIApCdXQsIEkgYmFjayBhdCAkMTAwTkwgYW5kIHdpbm5pbmcgYW5kIG1ha2luZyBkZWNlbnQgbW9uZXkgYW5kIGJvdGggRU5KT1lJTkcgcG9rZXIgYW5kIFNVQ0NFRURJTkcgYXQgcG9rZXIuIApUaGUgc3RhdGVtZW50IG1ha2luZyBodWUgaXMgc3VyZSB0byBhZGQgYSBwb3dlcmZ1bCBwb3Agb2YgY29sb3VyIHRvIGFueSBsaXZpbmcgb3Igd29yayBzcGFjZS4gQW5kIHdlIGxvb2tpbmcgZm9yd2FyZCB0byBzZWVpbmcgaG93IHBlb3BsZSBkcmVhbSB1cCBuZXcgdXNlcyBmb3IgdGhpcyBib2xkIGJvb2tjYXNlLiAoR29vZ2xlICJCaWxseSBCb29rY2FzZSBoYWNrcyIgdG8gc2VlIHNvbWUgb2YgdGhlIGludmVudGl2ZSB3YXlzIHNob3BwZXJzIGhhdmUgcmVwdXJwb3NlZCB0aGlzIGljb25pYyBJa2VhIHBpZWNlKS4uIApIb3dldmVyLCBJIGFtIGdvaW5nIGJ5IHByZWNlZGVudCBoZXJlLiBJIGhhdmUgc2NvdXJlZCB0aGUgYm9va3MgZm9yIHZhcmlvdXMgYWJpbGl0aWVzIHRoYXQgYWxsb3cgdW5pdHMgdG8gbW92ZSBvdXRzaWRlIHRoZSBtb3ZlbWVudCBwaGFzZSwgYW5kIHNvIGZhciBBTEwgb2YgdGhlbSwgZXZlcnkgc2luZ2xlIG9uZSBJIGhhdmUgcmVhZCBvdGhlciB0aGFuIFZNVCwgaGFzIHNhaWQgImFzIGlmIGl0IHdlcmUgdGhlIG1vdmVtZW50IHBoYXNlIi4KT3l1biBEaWxpIDogLiBMZXRpbSBTaXN0ZW1pIDogV2luZG93cyBYUCAvIFdpbmRvd3MgVmlzdGEgLyBXaW5kb3dzIDcgLyBXaW5kb3dzIDggLiAKRW5maW4sIHJpZW4gZGUgY2UgcXVpIGFsaW1lbnRlcmEgbGEgbWF1dmFpc2UgcnB1dGF0aW9uIHF1IGEgZmFpdGUgYXUgY2hhbnZyZS4gCllvdW5nSm9obkpvZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkkgaGFkIGEgYnVuY2ggb2YgQnJvb2tzIHNob2VzIChvbGRlciBSYXZlbm5hcywgc3BlY2lmaWNhbGx5KSB0aGF0IHJlYWxseSBkaWRuIGZlZWwgZ29vZCB1bnRpbCA1MCA2MCBtaWxlcyBidXQgYWZ0ZXIgdGhhdCB3ZXJlIGp1c3QgaGVhdmVubHkuLiAKRXhwZWN0IDUgMTAgcG91bmRzIGJ1dCBJIGZpbmQgbG9zaW5nIHRoYXQgd2VpZ2h0IHdhcyBlYXNpZXIgdGhhbiBjb2xkIHR1cmtlIGluZyAyIHBhY2tzIG9mIG5ld3BvcnRzIGRhaWx5LgpIZSBkcm9wcGVkIG1lIG9mZiwgYW5kIHJlZnVzZWQgdG8gdGFrZSBhbnkgbW9uZXksIGFuZCBqdXN0IGFza2VkIHRoYXQgSSBwYXNzIG9uIGEgZmF2b3VyIGlmIEkgd2FzIGFibGUgdG8uIAoyMDBrIGdyYW50IHRvIFJvc3Nmb3JkIGRlcGFydG1lbnRzClRoZXJlIGFyZSBvdGhlciBtdXNjdWxhciBhbmQgbmV1cm9sb2dpY2FsIGZhY3RvcnMgaW4gZmF0aWd1ZSBhcyB3ZWxsLiBGaW5hbGx5LCB1cmVhIGlzIGRlZmluaXRlbHkgYSB3YXN0ZSBwcm9kdWN0LCBidXQgYmlsZSBpcyBvbmx5IHBhcnRpYWxseSBzby4gQmlsZSBhY3RzIHRvIGFpZCBkaWdlc3Rpb24gYW5kIGJpbmQgY2hvbGVzdGVyb2wgc28gaXQgY2FuIGJlIGV4Y3JldGVkLi4gCk1hbnkgb2YgdGhlIGhpZ2ggZW5kLCBleHBlbnNpdmUgdG9vbHMgYXJlIGludGVuZGVkIHRvIGJlIHVzZWQgYWxvbmcgdGhlIGluc2lkZSBvZiB0aGUgcGFuZWwsIG11Y2ggbGlrZSBhIHBybyB3b3VsZCBkby4gKEdhaW5pbmcgYWNjZXNzIHRvIHRoZSBpbnNpZGUgb2YgYm9keSBwYW5lbHMgY2FuIGJlIGEgY2hvcmUsIHRob3VnaCwgYW5kIG9mdGVuIGludm9sdmVzIGNhcmVmdWwgcmVtb3ZhbCBvZiBtdWx0aXBsZSBpbnRlcmlvciB0cmltIHBpZWNlcy4pIEFsdGVybmF0aXZlcyAod2hpY2ggdGVuZCB0byBiZSB0aGUgbGVzcyBleHBlbnNpdmUga2l0cykgZmxhdW50IHRoZSBjb252ZW50aW9uYWwgd2lzZG9tIHRoYXQgc21hbGwgZGVudHMgc2hvdWxkIGJlIG1hc3NhZ2VkIGJhY2sgb3V0IGZyb20gYmVoaW5kIHRoZSBwYWludGVkIHN1cmZhY2UuIFRoZXNlIG9wdGlvbnMgaW5zdHJ1Y3QgdGhlIHVzZXIgdG8gZ2x1ZSBhIHRvb2wgdG8gdGhlIGRlbnRlZCBzdXJmYWNlIGFuZCB0aGVuIHR3aXN0IG9yIHB1bGwgb24gdGhlIHRvb2wgdG8gcG9wIGl0IG91dC4gVHJ1ZSwgeW91IGNhbiBnbyBidXkgdGhlIHNhbWUgdG9vbHMgYXMgYSBwcm8sIGJ1dCBpdCB0YWtlcyBhIGxvdCBvZiBza2lsbCBhbmQgZXhwZXJpZW5jZSB0byB1c2UgdGhlbSBwcm9wZXJseS4KV2Ugdm9uZGVuIGhpZXIgdHJvdXdlbnMgZWVuIGxldWtlIGdlb2NhY2hlIHZlcnN0b3B0IGluIGVlbiBuYWdlbWFha3QgYm9yZGplIHZhbiBlZW4gdHVpbmFhbm5lbWVyLCBoaWhpLiAKTGFkeSBHYWdhIHdhcyBub3QgZGlhZ25vc2VkIHdpdGggYnJlYXN0IGNhbmNlciwgc2hlIHdhcyBkaWFnbm9zZWQgd2l0aCBhIGJyYWluIHR1bW9yIG9uIE1hcmNoIDMxc3QgMjAxMi4gVGhlIHNpbmdlciBpcyBleHBlY3RlZCB0byBhbm5vdW5jZSB0aGUgY2FuY2VsbGF0aW9uIG9mIGhlciB1cGNvbWluZyB0b3VyIHRvZGF5LCBzbyBzaGUgY2FuIGZvY3VzIG9uIHJlY2VpdmluZyB0cmVhdG1lbnQuIFRoZSBGYW1lIHdlbnQgdG8gbnVtYmVyIG9uZSBpbiBjb3VudHJpZXMgc3VjaCBhcyB0aGUgVW5pdGVkIEtpbmdkb20sIENhbmFkYSwgQXVzdHJpYSwgR2VybWFueSwgU3dpdHplcmxhbmQgYW5kIElyZWxhbmQgLiAKVmlldyBEZXRhaWxzIC4gMTAwMCBLTklUVElORyBQQVRURVJOUyBCT09LICg3MDAgS25pdCAzMDAgQ3JvY2hldCkgICBKYXBhbmVzZSBDcmFmdCBCb29rLiAkODkuMDAuIApMZXQgbWUgcmVwZWF0IG9uZSBtb3JlIHRpbWUsIHdlIGRvbid0IGtub3cgdGhlIHBlcmNlbnRhZ2Ugb2YgcGF5b3V0cyBpbiBiaW5nbyAod2UgZG9uJ3Qga25vdyB0aGUgbnVtYmVyIG9mIHNvbGQgdGlja2V0cykuIEluIHByaW5jaXBsZSwgcGxheWluZyBmb3IgbWFueSB0aW1lcyBpbiB0aGUgc2FtZSBiaW5nbyByb29tIHlvdSBjYW4gY291bnQgdGhlIHBlcmNlbnRhZ2Ugb2YgcGF5bWVudHMgaW4gdGhlIHByYWN0aWNlLiBTaW1wbHkgZGl2aWRlIGdhaW5lZCBhbW91bnRzIGludG8gc3BlbnQgb25lcyBhbmQgeW91IHdpbGwgZmluZCBvdXQgdGhlIGVzdGltYXRlIGJ1dCB5b3Ugc2hvdWxkIHBsYXkgZm9yIGEgbG9uZyB0aW1lIHNvIHRoYXQgdGhpcyBlc3RpbWF0ZSBjb21lIGNsb3NlciB0byB0aGUgcmVhbGl0eS4gR2VuZXJhbGx5IHNwZWFraW5nLCBpZiBpdCBpcyBwb3NzaWJsZSB0byBmaW5kIG91dCB0aGUgcGVyY2VudGFnZSBvZiBwYXlvdXRzLCBwbGF5IHdoZXJlIGl0IGlzIHRoZSBsYXJnZXN0IGFuZCBnb29kIGx1Y2sgYmVhdGluZyBvbmxpbmUgYmluZ29zLgpTb3JyeSwgYnV0IHdlIGhhdmUgcmVtb3ZlZCB5b3VyIHJlc3BvbnNlLCBhcyB3ZSBleHBlY3QgYW5zd2VycyBpbiB0aGlzIHN1YnJlZGRpdCB0byBiZSBpbiBkZXB0aCBhbmQgY29tcHJlaGVuc2l2ZSwgYW5kIHRvIGRlbW9uc3RyYXRlIGEgZmFtaWxpYXJpdHkgd2l0aCB0aGUgY3VycmVudCwgYWNhZGVtaWMgdW5kZXJzdGFuZGluZy4gUG9zaXRpbmcgd2hhdCBzZWVtcyBvciBvdGhlcndpc2Ugc3BlY3VsYXRpbmcgd2l0aG91dCBhIGZpcm0gZ3JvdW5kaW5nIGluIHRoZSBjdXJyZW50IGFjYWRlbWljIGxpdGVyYXR1cmUgaXMgbm90IHRoZSBiYXNpcyBmb3IgYW4gYW5zd2VyIGhlcmUsIGFzIGFkZHJlc3NlZCBpbiB0aGlzIFJ1bGVzIFJvdW5kdGFibGUuIEJlZm9yZSBjb250cmlidXRpbmcgYWdhaW4sIHBsZWFzZSB0YWtlIHRoZSB0aW1lIHRvIGJldHRlciBmYW1pbGlhcml6ZSB5b3Vyc2VsZiB3aXRoIHRoZSBydWxlcywgYXMgd2VsbCBhcyBvdXIgZXhwZWN0YXRpb25zIGZvciBhbiBhbnN3ZXIgc3VjaCBhcyBmZWF0dXJlZCBvbiBUd2l0dGVyIG9yIGluIHRoZSAuLiAKPiBub3doZXJlIG5lYXIgdGhlIHBsYXllciBoZSB1c2VkIHRvIGJlCkV4cGFuZCB0aGF0IHF1ZXN0aW9uIGZ1cnRoZXIgb3V0LCBvbmNlIHByaXZhdGUgaW5kdXN0cmllcyBzdGFydCB0byB0YWtlIG92ZXIgdGhpbmdzIGxpa2Ugcm9hZCBtYWludGVuYW5jZSwgc2V3YWdlLCBhbmQgb3RoZXIgbmVjZXNzaXRpZXMsIGFnYWluIHdoZXJlIGlzIHRoZWlyIG1vdGl2YXRpb24gdG8gYWN0IGluIHRoZSBiZXN0IGludGVyZXN0IG9mIHRoZSBjb25zdW1lciBhbmQgbm90IHRoZSBwcm9maXQgbWFyZ2luPyBDb21wYW5pZXMgYWxyZWFkeSBkbyB0aGlzIHRvIGEgcG9pbnQsIGFsdGhvdWdoIGFyZSBoaW5kZXJlZCBieSBnb3Zlcm5tZW50IHJlZ3VsYXRpb24uIE9uY2UgdGhhdCByZWd1bGF0aW9uIGlzIHJlbW92ZWQgd2hhdCBpcyB0aGUgbW90aXZhdGlvbiBmb3IgY29ycG9yYXRpb25zIHRoYXQgbm93IGhvbGQgdGhlIHZlcnkgZXNzZW5jZSBvZiBsaWZlICh3YXRlciwgc2FuaXRhdGlvbikgdG8gbm90IGV4cGxvaXQgcGVvcGxlPyBJIG5ldmVyIHRhbGtlZCB0byBhIGxpYmVydGFyaWFuIHRoYXQgaGFzIGJlZW4gYWJsZSB0byBhbnN3ZXIgdGhpcyBxdWVzdGlvbiBvdXRzaWRlIG9mICJtdWggZnJlZSBtYXJrZXQiLCBkaXNyZWdhcmRpbmcgdGhlIGZhY3QgdGhhdCBvbmNlIGNvbXBhbmllcyBoYXZlIGRlZXAgZW5vdWdoIHBvY2tldHMgdGhleSBqdXN0IGVsaW1pbmF0ZSB0aGVpciBjb21wZXRpdGlvbiBhbmQgYWN0IGhvd2V2ZXIgdGhleSBwbGVhc2UgKGxpa2Ugc29tZSBhcmUgYWxyZWFkeSBkb2luZywgYnV0IGFyZSBoaW5kZXJlZCBieSBnb3Zlcm5tZW50IHJlZCB0YXBlKS4KQXBwbHkgc29tZSBvciBhbGwgb2YgdGhlc2UgdGFjdGljcyB5b3UnbGwgYmUgYmFjayBvbiB0cmFjayB0byBzdXBlcmlvciBzdWNjZXNzLiAKSXRzIG11bHRpIGxheWVyZWQgbmFycmF0aXZlIGlzIGF0IG9uZSBsZXZlbCBhIGNvbWluZyBvZiBhZ2UgdGFsZSBvZiBhIG1pZGRsZSBjbGFzcyBraWQgZnJvbSBDaW5jaW5uYXRpIG5hbWVkIFJvZ2VycyBTdG91dC4gCkxhZHkgR2FnYSB3YXMgbm90IGRpYWdub3NlZCB3aXRoIGJyZWFzdCBjYW5jZXIsIHNoZSB3YXMgZGlhZ25vc2VkIHdpdGggYSBicmFpbiB0dW1vciBvbiBNYXJjaCAzMXN0IDIwMTIuIAoiV2Ugc3BlbmQgYWJvdXQgJDUwLDAwMCBhIHllYXIgb24gc3VwcG9ydGluZyBwZW9wbGUgaW4gbmVlZCB0aHJvdWdoIG91ciBuZXR3b3JraW5nIHN5c3RlbS4iIEEgbG90IG9mIHRoYXQgbW9uZXkgd2FzIHJhaXNlZCB0aHJvdWdoIEFuemFjIERheSBhbmQgUmVtZW1icmFuY2UgRGF5IGV2ZW50cy4gIldlIGFyZSB2ZXJ5IHByb3VkIG9mIHdoYXQgd2UndmUgZ290IGhlcmUgbm93LCIgaGUgc2FpZC4gClRWIFJhZGlvIE15IEdyZWF0ZXN0ICdBSEEnIE1vbWVudCBEbyB5b3UgcmVtZW1iZXIgdGhlIG1vbWVudCB3aGVuIHNvbWV0aGluZyBpbXBvcnRhbnQsIHN1ZGRlbmx5Li4gCk1hbm55IGhhcyB0byB0dXJuIHRoZSB0aWRlIGFuZCBnaXZlIEFydW0gYSBkb3NlIG9mIGhpcyBvd24gbWVkaWNpbmUuIEknbSBzdXJlIE1hbm55IGlzIHdlbGwgb2ZmIGZpbmFuY2lhbGx5LiBJZiBoZSB3ZXJlbid0LCBoZSB3b3VsZG4ndCBiZSBidXlpbmcgYSBoZWxpY29wdGVyIHdpdGggaGlzIG5hbWUgc3ByYXdsZWQgYWxsIGFjcm9zcyB0aGUgc2lkZS4gSSdtIHN1cmUgaGUgd291bGRuJ3QgaGF2ZSBhIHByb2JsZW0gdGFraW5nIHNvbWUgdGltZSBvZmYgZWl0aGVyLiBUaGlzIHNlcnZlcyB0d28gcHVycG9zZXMuIE9uZSwgaXQgcHJldmVudHMgQXJ1bSBmcm9tIGNhcGl0YWxpemluZyBvbiBNYW5ueSdzIG5hbWUgYW5kIHRoZXJlYnkgZGlzcnVwdHMgYW55IGZpc2NhbCByaHl0aG0gQXJ1bSBnZW5lcmF0ZWQgb3ZlciB0aGUgbGFzdCA3IHllYXJzIGNvbnNpc3RlbnRseSBzdGFnaW5nIFBhY3F1aWFvIGJvdXRzIHR3aWNlLCBzb21ldGltZXMgdGhyZWUgdGltZXMsIHBlciB5ZWFyLiBUd28sIGl0IHdpbGwgYWxsb3cgUGFjcXVpYW8gdG8gcmVzdCBoaXMgYWdpbmcgYm9keSBhbmQgZ2l2ZSBoaW0gc29tZSB0aW1lIHRvIGdldCBhd2F5IGZyb20gdGhlIHNwb3J0IHRvIHJlIGV2YWx1YXRlIHRoaW5ncy4gQnkgZG9pbmcgdGhpcywgUGFjcXVpYW8gd2lsbCBzdXJlbHkgbWlzcyB0aGUgc3BvcnQgaGUgbG92ZXMsIGFuZCBoZSB3aWxsIHJlIGRlZGljYXRlIGhpbXNlbGYgYW5kIGNvbWUgYmFjayBzdHJvbmdlciB0aGFuIGV2ZXIuIEl0IGhhcHBlbmVkIHRvIEZsb3lkIGluIDIwMDcsIDIwMDksIGFuZCAyMDEwLiBJdCBjYW4gaGFwcGVuIHRvIFBhY3F1aWFvIGluIDIwMTIuCkFuZCB3YXMgdGhvdWdodCBieSB0aGUgZGVhbGVyLCBKb2UgQXJtc3Ryb25nLCB0byBiZSBjaGVhdGluZy4gCkhvdyBtYW55IG51bWJlciAxIHNpbmdsZXMgaGFzIExhZHkgR2FnYSBnb3Q/CllvdSBzaG91bGQgYmUgcGxheWluZyBpbiBmcmVlcm9sbCB0b3VybmFtZW50cyBhbmQgcGxheSBtb25leSB0b3VybmFtZW50cyB0byBnZXQgdGhlIGZlZWwgb2YgYSB0b3VybmFtZW50IHN0cnVjdHVyZS4gWW91IHNob3VsZCBzdGljayB0byBwbGF5aW5nIG9uZSB3aGVyZSB1IGtub3cgaG93IG1hbnkgcGVvcGxlIGVudGVyIGVhY2ggdGltZSBhbmQgd2hhdCBibGluZCBzdHJ1Y3R1cmUgKGJsaW5kIHRpbWUgbGltaXRzKSB5b3UgZmVlbCBjb21mb3J0YWJsZSBwbGF5aW5nIHdpdGggeW91ciBzdHlsZS4gSWYgeW91IGZlZWwgdGhlcmUgYXJlIGFsb3Qgb2YgZG9ua2V5cyBnb2luZyBhbGwgaW4gYmVjYXVzZSBpdHMgYSBmcmVlIHRvdXJuYW1lbnQgcmVtZW1iZXIgaXQgaGFwcGVucy4gCllvdSBhcmUganVzdCBwYXlpbmcgZm9yIGNvbXBhbmlvbnNoaXAuIFRoZXkgYWN0IGxpa2UgeW91ciBnaXJsZnJpZW5kLCBzbnVnZ2xlIHdpdGggeW91LCBraXNzIHlvdSwgYW5kIGxldCB5b3UgdG91Y2ggdGhlaXIgdGl0cy4gSSBndWVzcyBwZW9wbGUgamVyayBvZmYgaW4gdGhlcmUgYmVjYXVzZSBhIGdpcmwgYXNrZWQgaWYgSSB3YW50ZWQgdG8gYmVhdCBvZmYsIGFuZCBzaWduIHNheXMgeW91IHJlc3BvbnNpYmxlIHRvIGNsZWFuIHVwIHlvdXIgb3duIGppenouIFNleCwgb3JhbCBzZXgsIGdlbml0YWwgdG91Y2hpbmcgaXMgbm90IGF2YWlsYWJsZS4gSSBhc3N1bWUgdGhlIGdpcmxzIHdvcmtpbmcgaGVyZSBhcmUgYWN0dWFsbHkgc3R1ZGVudHMgdHJ5aW5nIHRvIG1ha2Ugc29tZSBzaG9wcGluZyBtb25leS4gSXQgY29zdHMgYWJvdXQgNDAgZG9sbGFycyBmb3IgMzAgbWludXRlcy4gVGhlcmUgYXJlIHR3byB2YXJpYW50czogQSBqZXJrb2ZmL2Jsb3dqb2IgcGxhY2Ugb3IgYSBzZXggcGxhY2UuIEF0IGplcmtvZmYgcGxhY2VzLCB0aGV5IGp1c3QgamVyayB5b3Ugb2ZmLiBTb21ldGltZXMgdGhlIGdpcmwgd2hvIGdyZWV0cyB5b3UgYW5kIGdldHMgeW91IGhhcmQgaXMgZGlmZmVyZW50IHRoYW4gdGhlIGdpcmwgd2hvIGFjdHVhbGx5IGplcmtzIHlvdS4gQSBtYXRlIG9mIG1pbmUgaGFkIGEgYmFkIGV4cGVyaWVuY2Ugd2hlbiBhZnRlciB0aGV5IHB1dCB0aGUgdG93ZWwgb3ZlciBoaXMgZXllcywgaGUgcGVla2VkIHRvIGZpbmQgdGhhdCB0aGUgb3duZXIgd2FzIGplcmtpbmcgaGltIG9mZiAoYW4gb2xkIG1hbikuIFNleCBwbGFjZXMgeW91IGp1c3QgcGF5IGZvciBzZXguCkNvdWxkIG1vZHMgZXhwbGFpbiB3aGF0IHRoZXkgbWVhbiBieSAidHJ1c2N1bSI/IEkgYW0gbm90IHN1cGVyIHVwIG9uIHRoZSBsYXRlc3QgaGlwcGVzdCBsaW5nbywgYW5kIEkgZmVlbCBsaWtlIEkgaGVhcmQgdGhhdCB3b3JkIHVzZWQgaW4gYSBmZXcgZGlmZmVyZW50IHdheXMsIHN1Y2ggYXMgdG8gZGVodW1hbmlzZSBwZW9wbGUgd2hvIGVuam95IHRoZWlyIChhY3F1aXJlZCkgYmluYXJ5IGdlbmRlciByb2xlIG9yIHdobywgZmVlbGluZyB0aGF0IHRoZXkgaGF2ZSAiY29tcGxldGVkIHRyYW5zaXRpb24iLCBhcmUgdW5pbnRlcmVzdGVkIGluIGNvbnRpbnVpbmcgdG8gaWRlbnRpZnkgYXMgdHJhbnMuIEFzIGEgcmVjZW50IG5ld2NvbWVyIHRvIHRoZSBzdWIgSSBiZWVuIG1pbGRseSBjb25jZXJuZWQgdG8gc2VlIHRoYXQgd29yZCBiZWluZyB1c2VkLCBhbmQgSSBoYWQgYXNzdW1lZCB0aGF0IHRoaXMgd2FzIGdvaW5nIHRvIGJlIGEgcG9zdCBhc2tpbmcgcGVvcGxlIHRvIGNoaWxsIG91dCB3aXRoIHRoYXQuLiAKVG95b3RhIGlzIHRoZSBmaXJzdCBtYXJrZXRlciB0byB0YWtlIGFkdmFudGFnZSBvZiBOQkMgVW5pdmVyc2FsJ3MgYWR2ZXJ0aXNpbmcgb2ZmZXJpbmcgb24gU25hcGNoYXQuIEFzIHBhcnQgb2YgdGhlIGRlYWwsIFRveW90YSBpcyBzcG9uc29yaW5nICJUaGUgVm9pY2UiIFNuYXBjaGF0IHN0b3J5LCB3aGljaCBjb25zaXN0cyBvZiBmaXZlLCBzaG9ydCBmb3JtIHZpZGVvcyB0aGF0IGZlYXR1cmUgdXNlciBzdWJtaXR0ZWQgcGVyZm9ybWFuY2VzLiBCYXNlZCBvbiB0aGVzZSBzdWJtaXNzaW9ucywgIlRoZSBWb2ljZSIgY29hY2hlcyBzZWxlY3QgYSBjb250ZXN0YW50IHRvIGFwcGVhciBvbiB0aGUgYnJvYWRjYXN0IHByZW1pZXJlIG9mIHRoZSBzaG93Li4gCkJhcnJhdWQgaGFzIGdhdGhlcmVkIGEgd2VhbHRoIG9mIGludGVyZXN0aW5nIGluZm9ybWF0aW9uIGFuZCBmYWN0cyAgIHNvbWUgd2VsbCBrbm93biBhbmQgb3RoZXJzIHN1cnByaXNpbmcgIGFib3V0IHRoZSBjcmVlcHkgY3Jhd2xpZXMgdGhhdCBpbmhhYml0IG91ciBnYXJkZW5zLCBwYWlyaW5nIHRoZXNlIHdpdGggaGlzIGdvcmdlb3VzIHJlYWxpc3RpYyBhcnR3b3JrIHRvIGJyaW5nIHRoZSBpbnNlY3RzIHRvIGxpZmUuLiAKSWYgaXQgd2FzIGEgY29uc3BpcmFjeSwgdGhlbiB0aGUgY29uc3BpcmFjeSBzdGFydGVkIHdpdGggb3h5Y29kb25lIHByb2R1Y3Rpb24gYW5kIHBpbGwgbWlsbHMgd2hpY2ggd2FzIHRoZSBzb3VyY2Ugb2Ygb3VyIGN1cnJlbnQgZXBpZGVtaWMuIFRoZSBwaWxsIG1pbGsgcHJvYmxlbSB3YXMgcmVzcG9uZGVkIHRvIGJ5IGV4dGVuc2l2ZSBhbmQgb3Zlcmx5IGhhcnNoIHJlZ3VsYXRpb24uIFRoYXQsIGluIHR1cm4sIGluY3JlYXNlZCBkZW1hbmQsIHdoaWNoIGdvdCBwZW9wbGUgaW50byBjdXR0aW5nIGZlbnQgaW50byB0aGVpciBkb3BlLiBUaGVuIGFzIHRpbWUgd2VudCBvbiB0aGV5IHJlYWxpemVkIGl0IHdhcyBjaGVhcGVyIHRvIGp1c3Qgc3VwcGx5IHRoZSBmZW50LiBUaGF0J3MgaG93IGl0IHdlbnQgbWFuLCBubyBjb25zcGlyYWN5IHRoZXJlLgpUaGlyZCwgYWRkIHRoaXMgdmFsdWUgdG8gdGhlIHNpemUgb2YgdGhlIHBvdCBhbmQgY2FsY3VsYXRlIHlvdXIgcG90IG9kZHMgYWdhaW4uIApJIHNpbmNlcmVseSBkb3VidCBhbnkgQ2F0aG9saWMgd291bGQgY2FsbCB5b3Ugb3V0IGZvciBoYXRlIHNwZWVjaCBpZiB5b3UgdXNlZCB0aGUgdGVybSBuZWFyIHRoZW0uIEkgc29ycnksIGJ1dCB0aGlzIHNlZW1zIGxpa2UgYSB2ZXJ5IHNpbGx5IGJhdHRsZSB0byBmaWdodC4oQXMgYW4gYXNpZGUsIHRoZSBBbmdsaWNhbiBjaHVyY2ggc2VlbXMgdG8gaGF2ZSB1c2VkIGl0IG1vcmUgb2ZmZW5zaXZlbHkgdGhhbiB0aGUgTHV0aGVyYW5zIGV2ZXIgaGF2ZS4gClJlbmV3IHlvdXIgZHJpdmVycyBsaWNlbnNlL3Bhc3Nwb3J0IG90aGVyd2lzZSB5b3Ugd2lsbCBuZWVkIHRvIG1ha2UgYW4gb2NjYXNpb25hbCB0cmlwIChsaWtlIG9uY2UgZXZlcnkgMTAgeWVhcnMpLiAKVGhlIEFBIHlvdSBob2xkIGFyZSBqdXN0IHRvbyB2dWxuZXJhYmxlIHRvIHRoaXMgdHlwZSBvZiBydW4gb3V0IGFuZCB3aGVuIHdlIHRyYXAgaGFuZHMgd2Ugd2FudCB0byB1c2UgaGFuZHMgdGhhdCBhcmUgYXMgaW52dWxuZXJhYmxlIGFzIHBvc3NpYmxlLiAKUGFsaW4gaXMgc29tZWhvdyBuZWFybHkgYXMgY3JlZXB5LiBnb3QgYSBGQiBhbm5vdW5jZW1lbnQgZnJvbSBoZXIgdGhpcyB3ZWVrZW5kIEkgYW5kIDEyLDAwMCBvdGhlciBwZW9wbGUgYXJlIGhlciBGYWNlYm9vayAiZnJpZW5kcyIpOiAiR2xvYmFsIHdhcm1pbmc/IGxpa2UgYSBzbm93IGpvYiIuCiJDcm93biBjYW5ub3QgYmUgYWxsb3dlZCB0byBvcGVyYXRlIHBva2llIG1hY2hpbmVzIHVudGlsIGFuIGluZGVwZW5kZW50IGF1ZGl0IGhhcyBiZWVuIGNvbXBsZXRlZC4KQSB3aGlzdGxlIGFuZCBhIHNpZ25hbGxpbmcgbWlycm9yIGFyZSBhbHNvIGEgZ29vZCBpZGVhLiAKRGVwZW5kaW5nIG9uIHdoYXQgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcsIGFuZCB3aGF0IHRoZXkgaGF2ZSBoYXMgYWxyZWFkeSBoaXQsIHlvdXIgb2RkcyB3aWxsIGNoYW5nZS4gSW4gdGhlIGFib3ZlIGV4YW1wbGUgaWYgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcgcG9ja2V0IEFBLCBhbmQgaGFzIGEgbWFkZSBzZXQsIHlvdSBzdGlsbCBoYXZlIGEgMjclIGNoYW5jZSB0byB3aW4gaWYgeW91IGdvIHRvIHRoZSByaXZlci4gVGhpcyBpcyB3aHkgb3BlbiBlbmRlZCBzdHJhaWdodCBhbmQgZmx1c2ggZHJhd3MgYXJlIHNvIHBvd2VyZnVsLCBhbmQgbmVlZCB0byBiZSBwbGF5ZWQgdmVyeSBhZ2dyZXNzaXZlbHkuIApVbmdhciBoYWQgYW4gdW5yaXZhbGxlZCByZWNvcmQgaW4gdGhlIHdvcmxkJ3MgYmlnZ2VzdCBwb2tlciB0b3VybmFtZW50cy4gSGUgYmVjYW1lIHRoZSBvbmx5IHBsYXllciB0byB3aW4gdGhlV1NPUCBhbmQgU3VwZXJib3dsIG9mIFBva2VyIE1haW4gRXZlbnRzIHRocmVlIHRpbWVzIGVhY2guIEhpcyBzdWNjZXNzIHNwYW5uZWQgc2V2ZXJhbCB2YXJpYXRpb25zIG9mIHRoZSBnYW1lIGluY2x1ZGluZyBob2xkZW0sIGRyYXcgYW5kIHN0dWQuIApTbyBqdXN0IGxpa2UgYSBmaW5hbCB0YWJsZSBhbnlvbmUgZnJvbSBhbm90aGVyIHRhYmxlLCB3aXRoIGEgbXVjaCBsYXJnZXIgZ2V0LCB3aWxsIG5vdCBiZSBtb3ZpbmcgdG8geW91ciB0YWJsZS4gCkkgbWVhbiwgdGhleSBzdGlsbCByZXBvcnQgaGlzIGxlZ2FsIHByb2JsZW1zLCBtYXliZSBzbnViIGhpbSBmb3IgdGhlIEhhbGwgYSBmZXcgeWVhcnMsIHRoZW4gbG9vayBmb3J3YXJkIHRvIHN0aWNraW5nIHNvbWUgamFicyBpbiB3aGVuIEEgUm9kIGVuY3JvYWNoZXMgYnV0IHRoZSBCb25kcyB3YXRjaCBpcyBub3cgb2ZmaWNpYWxseSBvdmVyLiAKRm9vdGFnZSBvZiB0aGUgVmlldG5hbWVzZSBBbWVyaWNhbiBiZWluZyBoYXVsZWQgb2ZmIHRoZSBvdmVyYm9va2VkIGZsaWdodCBhdCBDaGljYWdvJ3MgTydIYXJlIEludGVybmF0aW9uYWwgQWlycG9ydCBvbiBTdW5kYXkgY2F1c2VkIG91dHJhZ2Ugb24gTW9uZGF5LkRyIERhbyB3YXMgaGVhcmQgaW4gdmlkZW9zIGNhcHR1cmVkIG9mIGhpcyBzaG9ja2luZyBldmljdGlvbiBzYXlpbmcgaGUgbmVlZGVkIHRvIGdldCBob21lIHRvIExvdWlzdmlsbGUgc28gaGUgY291bGQgc2VlIHBhdGllbnRzLiAKQXMgcGVyIHRoZSBkZWFsLCB0aGUgU2lraCB3YXMgcHJvbWlzZWQgb2YgZ2V0dGluZyBiYWNrIGhpcyBzaG9wIGtleXMgYWZ0ZXIgaGUgYXJyYW5nZXMgdGhlIG1vbmV5LiAKQm95IFNjb3V0cyBjcmVhdGVkIGJvbmRzIHRocm91Z2ggZGlmZmljdWx0IHRhc2tzIHRoYXQgcmVxdWlyZWQgdGVhbXdvcmsgYW5kIHVuZGVyc3RhbmRpbmcuIEl0IHdhcyBhIGJlYXV0aWZ1bCB0aGluZyB1bnRpbCBnaXJscyBIQUQgdG8gYmUgaW5jbHVkZWQsIG5vdyBpdCdzIGp1c3QgYSBqb2tlLiAKQnV0IHBsZWFzZSBoZWFyIG1lIG91dC4gClN0b3AgYmVpbmcgdGhhdCBzYWQsIHBhdGhldGljIGxvc2VyIHdobyBnZXRzIGhpcyBrbmlja2VycyBpbiBhIHVwcGl0eSB0d2l0Y2ggb3ZlciBhIGZ1Y2tpbmcgbWVtZSwgbG9sLi4gCkRhdmV0b2tlYm9ybiAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMiBtb250aHMgYWdvCihQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBHb29nbGUgQW5hbHl0aWNzVGhpcyBpcyB1c2VkIHRvIHByb3ZpZGUgZGF0YSBvbiB0cmFmZmljIHRvIG91ciB3ZWJzaXRlLCBhbGwgcGVyc29uYWxseSBpZGVudGlmeWFibGUgZGF0YSBpcyBhbm9ueW1pemVkLiAoUHJpdmFjeSBQb2xpY3kpSHViUGFnZXMgVHJhZmZpYyBQaXhlbFRoaXMgaXMgdXNlZCB0byBjb2xsZWN0IGRhdGEgb24gdHJhZmZpYyB0byBhcnRpY2xlcyBhbmQgb3RoZXIgcGFnZXMgb24gb3VyIHNpdGUuIApUaGV5J3JlIHRoZSBwZXJmZWN0IHRhcmdldC4gClN0cmlrZXN1aXRWaXJnaW5pYSBDYXZhbGllcnMgLyBOWVUgVmlvbGV0cwpPaywgc28gZHVkZSwgaXQgbm90IDE5ODUgYW5kIEkgY2FuIHByZXR0eSBlYXNpbHkganVzdCBnb29nbGUgdGhhdCBzaGl0IGFuZCB0ZWxsIHlvdSB0aGF0IHlvdSBkb24gYnV0IGV2ZW4gaWYgaXQgV0VSRSAxOTg1LCBpdCBncmVhdCB0aGF0IHlvdSBob2xkIHRoYXQgcmVjb3JkICAgdGVsbCB5b3VyIGZyaWVuZHMgYWJvdXQgaXQgICBidXQgbWF5YmUgZG9uIGxlYWQgd2l0aCBpdCB3aGVuIHRoZXkgYXNrIHdoeSB5b3UgdGhpbmsgeW91IGEgZ29vZCBmaXQgZm9yIHRoZSBqb2IuIEJ1dCwgSSBkaWdyZXNzLCB3ZSB3ZXJlIHRhbGtpbmcgYWJvdXQgd29ybGQgcmVjb3Jkcy4gCllvdSBnb3QgbWUuIE9ubHkgcmVhc29uIEkgY29waWVkIE9kZCBQYWxhZGluIHdhcyBzbyBJIGNvdWxkIGZlZWwgZ29vZCBhYm91dCB3aW5uaW5nLiBJIHVzZSBjYXN1YWwgYXMgYSBzdG9tcGluZyBncm91bmQgc28gSSBjYW4gc3F1aXNoIG5vb2JzIGxpa2UgeW91LCB0YXN0ZSB5b3VyIHJlZGRpdCB0ZWFycywgYW5kIGNvbXBsZXRlIG15IHF1ZXN0cyBzdXBlciBkdXBlciBmYXN0LgpFdmVyeW9uZSBzdWdnZXN0cyBtaXJhbGF4LCBidXQgdGhlIGlzc3VlIHdlIGNvbnNpc3RlbnRseSBoYWQgdGhlcmUgaXMgc2hlIHdvdWxkIGdldCBsaXF1aWQgcG9vcCBhbmQgY29udGludWUgdG8gaG9sZCBpdCBpbi4gQXQgdGhlIHRpbWUgSSByZXNlYXJjaGVkIHRoaXMgb25lIG9mIHRoZSBhcnRpY2xlcyBzYWlkIGV2ZW4gb24gbWlyYWxheCBhIGNoaWxkIGNhbiBob2xkIHRoZSBzdG9vbCBpbnNpZGUgZm9yIDggZGF5cy4gClVubGVzcyB5b3UgaW4gYSB3YXIgem9uZSwgdGhlIG9kZHMgb2YgZ2V0dGluZyBhbGwgdGhyZWUgYXQgb25jZSBhcmUgc2NhbnQuCkp1cm9ycyBkZWJhdGVkIGxlc3MgdGhhbiAzMCBtaW51dGVzIGJlZm9yZSBjb252aWN0aW5nIFJvbm5pZSBNYXJ0aW4gRGltYXR0ZWksIDIyLiBvZiBhc3NhdWx0IHdpdGggaW50ZW50IHRvIG11cmRlciwgY2FycnlpbmcgYSBkZWFkbHkgd2VhcG9uIGFuZCBiYXR0ZXJ5IG9mIGEgcG9saWNlIG9mZmljZXIuIFRoZSBpbmNpZGVudCBvY2N1cnJlZCBvbiBKYW4uIERpbWF0dGVpIGlzIG9uZSBvZiB0aHJlZSBwZXJzb25zIGNoYXJnZWQgd2l0aCB0aGUgc2hvb3RpbmcuIEEgY29kZWZlbiAgZGFudCwgSmFtZXMgVGhvbWFzIEJveWVyIEpyLiwgMjIsIGhhcyBhZG1pdHRlZCBhc3NhdWx0IGFuZCBiYXR0ZXJ5LiAKV2Ugd2lsbCByZXZlcnNlIG91ciBydWxpbmcgYW5kIGFsbG93IHlvdSB0byByZXBvc3QgYWZ0ZXIgc2VlaW5nIHBob3RvIElEIGluY2x1ZGluZyBwaWN0dXJlIGFuZCBkYXRlIG9mIGJpcnRoLiBBbGwgb3RoZXIgaW5mb3JtYXRpb24gY2FuIGJlIGNlbnNvcmVkIGF0IHlvdXIgb3duIGRpc2NyZXRpb24sIGFuZCB3ZSB3aWxsIG5vdCB1c2UgYW55dGhpbmcgc2VudCB0byB1cyBmb3IgYW55dGhpbmcgbW9yZSB0aGFuIHZlcmlmeWluZyB0aGUgcm9hc3RlZSBhZ2UuIAooOSkgICBUaGUgUnVsZSAgIEluZGl2aWR1YWwgcG9zdHMgaGlnaGxpZ2h0aW5nIGJvZGlseSBmdW5jdGlvbnMgc3VjaCBhcyBib3dlbCBtb3ZlbWVudHMgd2lsbCBiZSByZW1vdmVkIGF0IGRpc2NyZXRpb24gb2YgdGhlIG1vZGVyYXRpb24gdGVhbS4gVGhhdCB3YXMgYSB0ZXJyaWJsZSBldmVudC4gClRoZSBCZXN0ICAgdGhpcyBndXkgaXMgdGhlIGhhbmRzIGRvd24sIGJlc3QgcGxheWVyIGF0IHlvdXIgdGFibGUuIApOb3VzIG5lIHNhdXJpb25zIGFjaGV2ZXIgY2UgcGV0aXQgYXJ0aWNsZSBzYW5zIGZhaXJlIG1lbnRpb24gZHUgcmxlIHByb3BpY2UgZGUgbCB0dWUgbW91Y2hlIChBbWFuaXRhIG11c2NhcmlhKSBkdXJhbnQgY2Ugcml0dWVsIGQgQyBncmNlICBsYSBjb25zb21tYXRpb24gZGUgY2UgY2hhbXBpZ25vbiBxdWUgbGUgY2hhbWFuIGluaXRpIGVudHJlIGRhbnMgdW5lIHRyYW5zZSBiaWVuIG5jZXNzYWlyZSwgYWluc2kgcXVlIHNlcyBjb21wYWdub25zIGZpbHMgZXQgcHJlLiBFdCwgc2FucyBxdSBzb2l0IGJlc29pbiBkZSBwYXJsZXIgZGUgaGFzYXJkLCBpbCBzIHF1ZSBjZXR0ZSBhbWFuaXRlIGNyb3QgZW4gcmVsYXRpb24gbXljb3JoaXphbGUgYXZlYyBsZSBib3VsZWF1LCBsZXF1ZWwgbmUgZHByY2llIHBhcyBub24gcGx1cyBsYSBjb21wYWduaWUgZGVzIGJvbGV0cywgbGFjdGFpcmVzIGV0IGF1dHJlcyBydXNzdWxlcy4uIApUaGV5IHdpbGwgYWxtb3N0IGNlcnRhaW5seSBuZWVkIHRvIGJlIGNvbXBldGVudCBzdXJnZW9ucywgc2hvdWxkIHRoZSBuZWVkIGFyaXNlLiBJc3N1ZXMgb2Ygc2FuaXRhdGlvbiBoYXZlIGFscmVhZHkgYmVlbiBtZW50aW9uZWQsIGJ1dCBpdCBpcyB1bmxpa2VseSB0aGF0IHRlbGVjb21tdW5pY2F0aXZlIG1lZGljaW5lIHdpbGwgYmUgYXZhaWxhYmxlIHRvIHRoZW0gICBwaHlzaWNpYW5zIHdpbGwgbmVlZCB0byBiZSB0aGVvcmV0aWNhbGx5IGNhcGFibGUgb2Ygb3BlcmF0aW5nIG9uIGEgd2lkZSB2YXJpZXR5IG9mIHRyYXVtYXMgdG8gZWZmZWN0aXZlbHkgcmVzcG9uZCB0byBpbW1lZGlhdGUgdGhyZWF0cyB0byBsaWZlLgpLZWVwIHNob3VsZGVycyBiYWNrIGFuZCBkb3duLiBLZWVwIGhlYWQgYmFjaywgbGV2ZWwgYW5kIHRhbGwuIApGb3J3YXJkIEhlYWQgUG9zdHVyZQpUaGUgb25lIG1vZCBJIHVzZSB0aGF0IGRvZXMgY2hhbmdlIGdhbWVwbGF5IGlzIERlZXBXb29kcy4gSXQgYSBsaXR0bGUgb3ZlcnBvd2VyZWQgaWYgeW91IGdvIGludG8gdGhlIHdvb2RzIGVhcmx5IG9uLCBidXQgYnkgdGhlIHRpbWUgeW91IGhpdCBTa3VsbCBDYXZlcm5zLCBpdCBsZXNzIHByb2ZpdGFibGUgdG8gc3BlbmQgYSBkYXkgaW4gdGhlIERlZXAgV29vZHMgdGhhbiB0aGVyZS4gV2hhdCBJIGxpa2UgYWJvdXQgaXQgaXMgaXQgZ2l2ZXMgeW91IGFub3RoZXIgcGxhY2UgdG8gZXhwbG9yZSBhbmQgaXQgZ2l2ZXMgeW91IGEgd2F5IHRvIGZhcm0gaGFyZHdvb2QgdGhhdCBpc24gYXMgZ3JpbmR5IGFuZCB0ZWRpb3VzIGFzIGhhdmluZyB0byBjaGVjayB0aGUgU2VjcmV0IFdvb2RzIGV2ZXJ5IGRheS4KUmhldW1hdG9sb2d5IEludGVybmF0aW9uYWwKSSB0aGluayB0aGF0IGEgbGl0dGxlIGhhcnNoLiBUaGVyZSBhcmUgcGxlbnR5IG9mIHBlb3BsZSB3aG8gZW5qb3kgdGhlIHJlZmVyZWVpbmcgYXNwZWN0IG9mIHRoaW5ncyBtb3JlIHRoYW4gdGhlIHBsYXkuIEkgaGF2ZSBhIGZyaWVuZCB0aGF0IHdhbnRlZCB0byBiZSBhIGJhc2ViYWxsIHVtcCBzaW5jZSBoZSB3YXMgYSBraWQsIEkgd29yayB3aXRoIGFub3RoZXIgZ3V5IHdobyBjdXJyZW50bHkgd29ya2luZyBoaXMgd2F5IHRocm91Z2ggTkJBIHJlZmVyZWVpbmcuIApIZSB3YXMgdmVyeSBmaW5pY2t5IGFib3V0IGJlaW5nIHN0dWNrIGluIGEgcm9vbSwgc29tZXRpbWVzIHdlIGhlYXIgaGltIG1lb3dpbmcgYW5kIGxldCBoaW0gaW4sIGFuZCB0aGVuIGhlIGltbWVkaWF0ZWx5IHdhbnQgb3V0IGFuZCBzdGFydCBtZW93aW5nIGF0IHRoZSBkb29yIHRvIGJlIGxldCBvdXQuIApJdCBpcyB0aGUgbGF0ZXN0IGJsb3cgdG8gdGhlIGxvY2FsIGxpY2Vuc2VkIGNsdWJzIGluZHVzdHJ5IGZvbGxvd2luZyB0aGUgUGFudGhlcnMgR3JvdXAncyBkZWNpc2lvbiB0byBzaHV0IHRoZSBMYXZpbmd0b24gUGFudGhlcnMgQ2x1YiBhIGZvcnRuaWdodCBhZ28uIENsdWIgcHJlc2lkZW50IFJvYiBXaWxsaWFtcyBjb3VsZG4ndCBiZSBjb250YWN0ZWQgZm9yIGNvbW1lbnQgeWVzdGVyZGF5IGFuZCB0aGUgY2x1YidzIGRlYnQgYW5kIHRoZSBudW1iZXIgb2YgY3JlZGl0b3JzIHJlbWFpbnMgdW5jbGVhci4gVGhlIGNsdWIgd2FzIG9wZW4gYW5kIGNvbnRpbnVlZCB0byB0cmFkZSBhdCB0aGUgd2Vla2VuZC4gCkxhc3Qgd2VlaywgYSBiaXBhcnRpc2FuIGdyb3VwIGluIHRoZSBTZW5hdGUgdHJpZ2dlcmVkIGFuIGludmVzdGlnYXRpb24gb2YgU2F1ZGkgQXJhYmlhIGludm9sdmVtZW50IGluIE1yLiAKTWNEb25hbGQncyB3YXMgdGhlIG5hdGlvbidzIDI5dGggbGFyZ2VzdCBhZHZlcnRpc2VyIGluIDIwMTcsIGFjY29yZGluZyB0byB0aGUgQWQgQWdlIERhdGFjZW50ZXIsIHdpdGggYWQgc3BlbmRpbmcgdXAgMy40IHBlcmNlbnQgdG8gbmVhcmx5ICQxLjUxIGJpbGxpb24uIE5lYXJseSA4MCBwZXJjZW50IG9mIHRoZSAyMDE3IGJ1ZGdldCB3ZW50IHRvIFRWIGFkcywgd2hpY2ggaW5jbHVkZSBib3RoIG5hdGlvbmFsIGFuZCBsb2NhbCBzcG90cy4KSXQgdGhlIGNvbnRleHQgb2YgeW91ciBhY3Rpb25zLCBhbmQgb3RoZXIgYWN0aW9ucyB0aGF0IGxlYWQgdG8gdGhvc2UsIHRoYXQgZGVmaW5lcyB5b3UgYXMgbW9yYWxseSByZXByZWhlbnNpYmxlIG9yIG5vdC4gCkluIGRlbiBSaG9tYmVuIHVuZCBLcmluZ2VsbiB3ZXJkZW4gd2luemlnZSBNYXJraWVydW5nZW4gYW5nZWJyYWNodCB1bmQga25uZW4gc3B0ZXIgZHVyY2ggZWluZW4gYmVzdGltbXRlbiBDb2RlIGdlbGVzZW4gd2VyZGVuLiBEYWR1cmNoIGthbm4ga29udHJvbGxpZXJ0IHdlcmRlbiwgd2VsY2hlIEthcnRlbiBpbSBVbWxhdWYgc2luZC4gRGllIGJla2FubnRlc3RlIE1pc2NobWV0aG9kZSBiZWltIFBva2VybiBpc3QgZGFzIFJpZmZlbCAgb2RlciBhdWNoIEZhcm9taXNjaGVuIGdlbmFubnQuIApOYXR1cmFsIGdhcz8gR2l2ZW4gQ3lwcmlvdCBuYXRpb25hbCB0aWVzLCBpdCdzIGVhc3kgdG8gc2VlIHdoaWNoIGNvbXBhbnkgaGFzIHBvbGUgcG9zaXRpb24gaW4gdGVybXMgb2YgZ2V0dGluZyB0aGF0IG1hbmRhdGU6IEdhenByb20uClRoZXJlIGlzbiBhbiBleHRyYSBzcGVjaWFsIHBhdGggd2l0aCBoaW0uIFN1cmUgaWYgaGUgbWVldHMgVHJlbnQgYWdhaW4gYW5kIHByb3ZlcyB0byBiZSBwb3dlcmZ1bCBUcmVudCB3aWxsIHRyeSB0byBicmluZyBoaW0gYmFjayBpbnRvIHRoZSBmb2xkIGJlY2F1c2UgcG93ZXIgbGlrZXMgcG93ZXIuIApUaGVuIEkgc2F5IG9uY2UgeW91IHNlZSBuZXcgZ3Jvd3RoIG9uIGhpbSwgeW91IGNhbiBjdXQgdGhlIHN0ZW1zIHdoZXJlIGl0IGxvc3QgYSBsb3Qgb2YgbGVhdmVzIGFuZCBwdXQgdGhlIHRpcHMgYmFjayBpbiB0aGUgcG90IHRvIGZpbGwgb3V0IHRoZSBwb3QuIERvZXMgdGhhdCBtYWtlIHNlbnNlPyBJZiBpdCBncm93aW5nIHdlbGwgSSBldmVuIHJlY2NvbW1lbmQgcG9wcGluZyBhIGZld2xlYXZlcyBvZmYgYW5kIHRocm93aW5nIHRoZW0gaW4gdGhlIHBvdCB0byB0aGlja2VuIGl0IHVwLiBHb29kIGx1Y2sgd2l0aCB5b3VyIGxpdHRsZSBmcmllbmQhLiAKVGhhdCBzYWlkLCBJIGNvdWxkIHByb2JhYmx5IHN0aWxsIGJlIGNvbnZpbmNlZCB3ZSBzaG91bGQgdGhpbmsgYWJvdXQgc3BsaXR0aW5nIEFtYXpvbiB2ZXJ0aWNhbHMuIFNhbWUgd2l0aCBGYWNlYm9vaywgd2hpY2ggd291bGQgZXZlbiBoYXZlIHZlcnRpY2FscyB0aGF0IHdvdWxkIGNvbXBldGUgKEZhY2Vib29rIHZzLiAKUGhpbGFudGhyb3B5IGJ5IHRoZSBSZXN0IG9mIFVzCkF0IHRoZSBlbmQgb2YgdGhlIGRheSBhIHBpZWNlIG9mIHBhcGVyIHdpdGggYSBncmFkZSB3aWxsIGFsd2F5cyBiZSBtb3JlIGNyZWRpYmxlIHRoYW4gYSBzZWxmIHBhY2VkIGZyZWUgb25saW5lIGNsYXNzIGJ1dCBvbiBhbiBpbmRpdmlkdWFsIGJhc2lzIGZvciB3aGljaCBtZWFucyBtb3JlIHRvIGEgaGlyaW5nIG1hbmFnZXIuIApVc2luZyBzZXJpYWwgbnVtYmVycyB0aGF0IHlvdSBkaWQgbm90IHB1cmNoYXNlIGlzIGFsc28gaWxsZWdhbCwgZXZlbiBpZiB5b3UgcHVyY2hhc2VkIHRoZSBzb2Z0d2FyZSBhbmQgbG9zdCB5b3VyIHNlcmlhbCBudW1iZXIgKHNlZSBhYm92ZSBmb3Igb2J0YWluaW5nIGEgbmV3IG9uZSBpbiB0aGlzIGNhc2UpLiBJdCBpcyBhbHNvIGlsbGVnYWwgdG8gdXNlIGtleSBnZW5lcmF0b3JzIChrZXlnZW5zKSB3aGljaCBwcm92aWRlIHNlcmlhbCBudW1iZXJzIGFzIHdlbGwgYXMgY3JhY2tzIHRvIGJ5cGFzcyBleHBpcmVkIHRpbWUgdHJpYWxzIG9yIGVudGVyaW5nIGEgc2VyaWFsIG51bWJlciBhbmQgbm8gQ0QgY3JhY2tzIHdoaWNoIGVuYWJsZSB5b3UgdG8gdXNlIHRoZSBzb2Z0d2FyZSB3aXRob3V0IHRoZSBvcmlnaW5hbCBwdXJjaGFzZWQgQ0QgZm9yIHRoZSBzb2Z0d2FyZS4gV2lraUFuc3dlcnMgd2lsbCBub3QgcHJvdmlkZSBzZXJpYWwgbnVtYmVycyBvciBsaW5rcyB0byBzZXJpYWwgbnVtYmVycy4gV2Ugd2lsbCBhbHNvIG5vdCBwcm92aWRlIGluZm9ybWF0aW9uIG9yIGxpbmtzIG9uIHdoZXJlIHRvIG9idGFpbiBwaXJhdGVkIHNvZnR3YXJlLCBzZXJpYWwgbnVtYmVycywga2V5Z2Vucywgb3IgY3JhY2tzLiAKVHJ1bXAgYWNvbHl0ZXMgbGlrZSB5b3Vyc2VsZiB3aWxsIGFsd2F5cyBkZWZsZWN0IGN1cnJlbnQgcmVhbGl0aWVzIHdpdGggcmVkIGhlcnJpbmcgYW5kIHN0cmF3IG1hbiBhcmd1bWVudHMsIG5vIG1hdHRlciBob3cgbXVjaCBldmlkZW5jZSB5b3VyIGNvbmZyb250ZWQgd2l0aC4gCkknbSBub3Qgc3VyZSB3aGF0IHdlIHdvdWxkIGhhdmUgZG9uZSB3aXRob3V0IEpvaG4sIGhpcyBpbnB1dCBpbnRvIG91ciB0cmlwICAgZmxpZ2h0IGJvb2tpbmdzLCB0cmFpbiBib29raW5ncywgYWNjb21tb2RhdGlvbiwgdmlzYXMgICBoYXMgYmVlbiBlbm9ybW91cy4gCk1heWJlIGV2ZW4gaGlnaGVyIGlmIFYgaGFzIHJhbmRvbSBibHVmZnMgd2l0aCB1bmRlcnBhaXJzIG9yIHRoZSBiaXphcnJvIGJsdWZmcyB5b3Ugc29tZXRpbWVzIHNlZSBpbiBsaXZlIHBva2VyLiAKR3JhdHVpdG8gcGFyYSB0ZXN0YXI7IDEzNCwyMCBNQjsgUGFyYSBXaW5kb3dzIDc7IEF0dWFsaXphZG8gZW0gMTQvNS8yMDEwOyBTY2F3ZW4gUm9iZXJ0cywgLiAKR2FsZW4gZGlkIHRoaXMgd2l0aCBwaWdzLCBkZW1vbnN0cmF0aW5nIGV4YWN0bHkgd2hhdCBoZSBjb3VsZCBjdXQgYW5kIHNldyBiYWNrIHRvZ2V0aGVyIHNvIHRoYXQgdGhlIHBpZyB3b3VsZCBiZSBqdXN0IGZpbmUuIApUaGluZ3MgYXJlIHN0aWxsIHNvIGdvb2QgdGhhdCBzb21ldGltZXMgSSB3YWtlIHVwIGFuZCBjYW4gYmVsaWV2ZSBJIGRhdGluZyB0aGlzIGFtYXppbmcgZ3V5LiAKSXQgd2FzIGEgY2xhc3NpYyBjYXNlIG9mIGZhc2hpb24gb3ZlciBmdW5jdGlvbiwgaGUgc2FpZC4gCldlIGhlYWRlZCBvdXQgb2YgdG93biBhbmQgcGlja2VkIHVwIHR3byBoaXRjaGhpa2VycyAoYmFja3BhY2tlcnMpIHdobyBuZWVkZWQgdG8gZ28gdG8gdGhlIGJlYWNoIHRvby4gClN1emFubmUgU2FwZXJzdGVpbiBnb3QgdGhlIGhvdXNlIGluIHRoZSBkaXZvcmNlLCBhbmQgbm93IGhhcyBwdXQgaXQgb24gdGhlIG1hcmtldC4gCkkgaGFkIG15IFNLWDAwNyBmb3IgYWJvdXQgdHdvIHllYXJzIGFuZCB3ZWFyIGl0IG9mdGVuLiAKSXQgbm90IGxpa2UgaGUgd2FzIGFzc3VtaW5nIHlvdSBjb3VsZG4gZHJpdmUgb3IgaGFkIGJhZCBtYXRoIHNraWxscyBvciBwbGF5ZWQgb2ZmIGFueSBvdGhlciBmZW1hbGUgc3RlcmVvdHlwZS4gCkkgd29yayBpbiBhIHNhZmV0eSBzZW5zaXRpdmUgZmVpbGQsIHNvIEkgaGF2ZSB0byB1bmRlcnN0YW5kIEkgY2FudCBpbmR1bGdlIGxpa2UgaSBkaWQgd2hlbiBpIHdhcyB5b3VuZ2VyLiBQb3QgaXMgdGhlIHJpc2tpZXN0IGJlY2F1c2UgaXQgc3RheXMgaW4geW91ciBzeXN0ZW0gc28gbG9uZy4gQ29jYWluZSBpcyBuZXh0IGJlY2F1c2UgaXQgbGluZ2VycyBhIGxvbmcgdGltZSBhbmQgeW91IGNhbnQgZGlsdXRlIHlvdXJzZWxmIG91dCBvZiBhIHBvc2l0aXZlIHdpdGggY29jYWluZS4gCihQcml2YWN5IFBvbGljeSlGYWNlYm9vayBBZHNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApUaGVpciBhZ2VzIHJhbmdlZCBmcm9tIDE5IHRvIDMwLCBzaGUgdG9sZCBpbnZlc3RpZ2F0b3JzLkFjY29yZGluZyB0byBwb2xpY2UsIHJvb21zIGluIENvaWwncyBob3VzZSB3ZXJlIHRyYW5zZm9ybWVkIGludG8gcHJpdmF0ZSBtYXNzYWdlIHNwYWNlcyB3aXRoIHRhYmxlcy4gVGhlIHdvbWVuIHdlcmUgaW5zdHJ1Y3RlZCB0byByZW1vdmUgdGhlaXIgY2xvdGhlcyBhcyBzb29uIGFzIHRoZXkgd2Fsa2VkIGluLiBDb2lsIHdvdWxkIHR5cGljYWxseSBiZSBuYWtlZCBvbiB0aGUgcHJlbWlzZXMgYnV0IG91dCBvZiBzaWdodCBvZiBjbGllbnRzLlRoZSBtYXNzYWdlIGZlZSB3YXMgJDEwMCwgYW5kIHRoZSB3b21lbiB3ZXJlIGFsbG93ZWQgdG8ga2VlcCBhbGwgb2YgaXQsIHBvbGljZSBzYWlkLiAKU2luY2UgdGhlIGJvb2tzIGFuZCB0aGUgbW92aWUsIEZvcmtzIGFuZCBUd2lsaWdodG1hbmlhIGhhdmUgYmVjb21lIGJpZyBidXNpbmVzcy4KQXQgbGFzdCBUaHVyc2RheSdzIHByb2NlZWRpbmdzLCBEaVJlbnpvIHRlc3RpZmllZCB0aGF0IHVwb24gZGlzY292ZXJpbmcgdGhlIGNyaW1lIHNjZW5lLCBwb2xpY2UgY292ZXJlZCB0aGUgZm9vdHByaW50IGV2aWRlbmNlIHdpdGggYSB0YXJwIHRvIHByb3RlY3QgaXQgZnJvbSBhbiBvbmNvbWluZyBzdG9ybS4gT24gY3Jvc3MgZXhhbWluYXRpb24sIEhlcm5hbmRleidzIGF0dG9ybmV5cyBnb3QgRGlSZW56byB0byBhZG1pdCB0aGF0IHRoZXkgZGlkIG5vdCBjb3ZlciB0aGUgZW50aXJlIGluZHVzdHJpYWwgcGFyayB3aXRoIHRhcnBzLCBhbmQgdGhhdCBvdGhlciBmb290cHJpbnQgZXZpZGVuY2Ugd2FzIHRoZXJlZm9yZSBsb3N0IHRvIHRoZSByYWluLiAKSGUgc3RheXMgYmFja3N0YWdlIHdpdGggbWUsIGluIHRoZSBkcmVzc2luZyByb29tLCBvciBvbiBzdGFnZSBvbmx5LiAKSSBzaG92ZSBhbmQgaGUgc25hcHMgaG9sZGluZyA2Ni4KSSBhZ3JlZSBJIGRvbiB3YW50IHRvIGJ1aWxkIGEgaHVnZSBwb3Qgd2l0aCBUVCBvdXQgb2YgcG9zaXRpb24gdG8gMiBvZiB0aGUgMy4gClZpbSBoYXMgY29tcGxldGlvbiBtZWNoYW5pc21zIGJ1aWx0IGluLCBzZWUgOmhlbHAgaW5zIGNvbXBsZXRpb24uIApUaGV5IG1pZ2h0IG5vdCBiZSBzbWFydCwgb3Igd2VsbCB0cmFpbmVkLCBidXQgdG8gc2l0IHRoZXJlIGFuZCBqdXN0aWZ5IHRoZWlyIGFjdGlvbnMgYnkgcHJldGVuZGluZyB0aGVpciBhY3R1YWxseSBkb2luZyB0aGUgcmlnaHQgdGhpcyBpcyBqdXN0IGRpc2luZ2VudW91cy4gCkFsbW9zdCAxOCB5ZWFycyBsYXRlciwgSWFuIGlzIHRoZSBsb2dpc3RpY3MgbWFuYWdlciBmb3IgQWRkaWNvbSwgYSBtb2JpbGUgcGhvbmUgYWNjZXNzb3J5IHByb3ZpZGVyLiAKVGhlIHdhbGwgd2l0aCBNZXhpY28gd2lsbCBub3QgYmUgYnVpbHQgb3Zlcm5pZ2h0Li4gClNtYWxsLiAKUG9rZXIgcmVxdWlyZXMgc3BsaXQgc2Vjb25kIGRlY2lzaW9uIG1ha2luZywgYW5kIEkgbGlrZSB0aGF0IHlvdSBwbGF5IGFnYWluc3QgeW91cnNlbGYuLiAKV2hlbiB3ZSBmYWlsLCBob3dldmVyLCBpdCBkb2VzIG5vdCBhbHdheXMgbWVhbiB3ZSBjaG9zZSB3cm9uZyBpdCBjb3VsZCBoYXZlIGJlZW4gYmFkIGx1Y2suIApNeSB1bmVkdWNhdGVkIGd1ZXNzIHdvdWxkIGJlIGVuZCBvZiB0aGlzIHllYXIsIGF0IHRoZSBhYnNvbHV0ZSBlYXJsaWVzdC4gVGhleSBhbHNvIGZvY3VzZWQgb24gb3BlbmluZyBhIGRlY2VudHJhbGl6ZWQgZXhjaGFuZ2UgcGxhdGZvcm0sIGFzIHdlbGwgYXMgYWxyZWFkeSBiZWluZyBidXN5IG1ha2luZyBtb25leSBoYW5kIG92ZXIgZmlzdCB3aXRoIHRoZWlyIGV4aXN0aW5nIGJ1c2luZXNzLiBTbyBpbiB0aGUgbWVhbiB0aW1lIEkgc2VlIHRoZW0gYmVpbmcgcGVyZmVjdGx5IGNvbnRlbnQgdG8gbGV0IENvaW5iYXNlIGV0LiAKTm93IHRoaXMgaXMgd2hlbiB3ZSB3ZXJlIGFib3V0IDEwIDEyIHllYXJzIG9sZCBhbmQgdGhlIGhheSBiYWxlcyB3ZXJlIG92ZXIgNiBmZWV0IHRhbGwuLiAKU2hlIHNob3VsZG4gYmUgcGVyZm9ybWluZyBhbnkgc29ydCBvZiBib2R5d29yayBpZiBzaGUgaGFzIGluanVyaWVzIGxpa2UgdGhhdCBvciBpcyBvbiBkcnVncyAodGhvdWdoIGlmIHNoZSB3b3JraW5nIGZvciBhIGZyYW5jaGlzZSB0aGV5IHRlbmQgdG8gbm90IGdpdmUgYW55IHNoaXRzIGFuZCB3b3VsZCBwcm9iYWJseSBmaXJlIGhlciBmb3IgdGFraW5nIHRpbWUgb2ZmIHRvIGhlYWwgb3Igc2hlIGNvdWxkbiBhZmZvcmQgdG8gdGFrZSB0aGUgdGltZSBvZmYgYXMgdGhlIGNvbXBlbnNhdGlvbiBpcyBob3JyaWJsZSkuIFRoZW4gdGhlcmUgdGhlIHRlcnJpYmx5IGluYXBwcm9wcmlhdGUgY29uZHVjdCBhbmQgY29udmVyc2F0aW9uLiAKOykuIApDT05TVUxUSSBESSBBU1RST0xPR0lBIEtBUk1JQ0EgRVZPTFVUSVZBCklQIHRoZWZ0cyBoYXZlIGJlZW4gcmFtcGFudCBpbiBDaGluYSBmb3IgYSBsb25nIHRpbWUsIGFuZCB0aGUgdGhpbmtpbmcgYmVoaW5kIHRoYXQgaXMsICdJZiBJIHNlZSBzb21ldGhpbmcgZ29vZCwgSSB3YW50IHRvIGRvIGl0LCB0b28sJyBzYWlkIFpoYW8uIApXcml0aW5nIGluIDE5MzQsIE1hdXMgaGFkIGEgInJldmVsYXRpb24iIHdoaWxlIGx5aW5nIGluIGEgaG9zcGl0YWwgYmVkIGluIE5ldyBZb3JrLi4gCkhlYXJ0IGRpc2Vhc2UgYW5kIGhlYXJ0IGF0dGFjayBjYW4gY29udHJpYnV0ZSB0byBjaGVzdCBwYWluIGFuZCB0aWdodG5lc3MuIE90aGVyIHN5bXB0b21zIHRoYXQgeW91IHNob3VsZCBsb29rIGZvciBhIGV4dHJlbWUgcGFpbiBpbiB0aGUgbGVmdCBwYXJ0IG9mIHRoZSBoZWFydCwgbnVtYm5lc3Mgb2YgdGhlIGNoZXN0IGFuZCBzaG91bGRlciBwYWluLiBBbHRob3VnaCB0aGVzZSBjb21iaW5hdGlvbnMgb2Ygc3ltcHRvbXMgZG8gbm90IGhhcHBlbiB0byBtYW55IGhlYXJ0IGF0dGFjayBwYXRpZW50cywgaXQgaXMgYmVzdCB0byBldmFsdWF0ZSB0aGUgZGVncmVlIG9mIHBhaW4gaW4gdGhlIGNoZXN0IGFuZCBzZWVrIG1lZGljYWwgYXR0ZW50aW9uIGlmIGl0IGdldHMgd29yc2UuIEhlYXJ0IGRpc2Vhc2UgY2FuIGJlIHJlZHVjZWQgd2l0aCBnb29kIGxpZmVzdHlsZSBhbmQgZnJlcXVlbnQgZXhlcmNpc2luZy4KQSBjZSB0aXRyZSwgbGVzIHJnaW9ucyBkZSBwcm9kdWN0aW9uIChNYXJvYywgTGliYW4sIEFmZ2hhbmlzdGFuLCBQYWtpc3RhbiBldCBJbmRlIHNvbnQgZGUgZ3JhbmRzIHByb2R1Y3RldXJzKSByZWNvdXZyZW50IHBldSBvdSBwcm91IGxlcyB6b25lcyBkJ3V0aWxpc2F0aW9uIGxnYWxlIGR1IGNhbm5hYmlzLiBDZSBxdWkgZXN0IGxvaW4gZCd0cmUgbGUgY2FzIGVuIEZyYW5jZSwgcGFyIGV4ZW1wbGUsIHZ1IHF1ZSBsZSBkY3JldCBkdSAyNyBtYXJzIDE5NTMgYSByZXRpciBsZSBjaGFudnJlIGRlIGxhIHBoYXJtYWNvcGUgZnJhbmFpc2UuIApPbmxpbmUgb25lIG1pZ2h0IGFyZ3VlIGhhcyBiZXR0ZXIgd2F5cyB0byBzcG90IGNvbGx1c2lvbi4gSG93ZXZlciB0aGV5IGFyZSBub3QgZ29pbmcgdG8gYnVzdCBhIGRldGVybWluZWQgdGVhbSwgYW5kIGlmIHRoZXkgZG8sIHRoZXkgcmVhbGx5IGNhbm5vdCBkbyBtdWNoIGFjY2VwdCBjbG9zZSBhY2NvdW50cyBhbmQgcGVyaGFwcyBzZWl6ZSB3b24gbW9uZXkuIEJ1dCB0aGF0IGlzIG5vdCBhIGJpZyBkZWFsIHRvIGEgZGV0ZXJtaW5lZCBjaGVhdGVyLCBuZXcgYWNjb3VudHMgYXJlIG9wZW5lZCwgb3RoZXIgc2l0ZXMgYXJlIGhpdCBhbmQgaXQganVzdCBnb2VzIG9uLi4gCldpdGggdGhlIHRpbWVseSBhcnJpdmFsIG9mIGltbWlncmFudHMgKEJlZm9yZSBtaWR0ZXJtIGVsZWN0aW9ucykgdG8gcmVmdWdlZSBjYW1wcyB3aGVyZSBuaWdodGx5IHZpb2xlbmNlIHdpdGhpbiBzaWdodCBvZiB0aGUgYm9yZGVyIHdvdWxkIG9mIGlsbHVzdHJhdGVkIHRoZSBNYW5pY2hlYW4gcG9saXRpY3Mgb2YgZmVhciBhbmQgeGVub3Bob2JpYS4gT3VyIHN0cm9uZ21hbiBsZWFkZXIgd291bGQgb2YgY292ZXJlZCBoaW1zZWxmIGluIGdsb3J5IGFuZCAob2YgY291cnNlKSB0aGUgb3JhbmdlIHRpbnQgb2YgdGFubmluZyBjcmVhbS4KMy4gVEhFIENVU1RPTUVSIENPVVJURVNZIE1BU1NBR0UgUFJPR1JBTQpDbGluaWNhbCBQcm9mZXNzb3IKRGFsb2lhLCA2OCBvZiBCYWxkd2luc3ZpbGxlLCBwYXNzZWQgYXdheSBEZWMuIApIYXJwZXIgc29tZXRpbWVzIHNlZW1zIHNvIGltcHJlc3NlZCBieSBoaXMgb3duIGZlYXJzb21lbmVzcyB0aGF0IGhlIGNhbid0IGltYWdpbmUgYW55b25lIHN0YW5kaW5nIHVwIHRvIGhpbSwgYXMgRHVmZnkgZGlkIGxhc3Qgd2Vlay4KVGVxdWlsYSBjYW4gaGVscCBlYXNlIHlvdSBvdXQgb2YgeW91ciBzaHluZXNzIGFuZCBsZXQgeW91IHRlbGwgdGhlIHdvcmxkIHRoYXQgeW91J3JlIHJlYWR5IGFuZCB3aWxsaW5nIHRvIGRvIGp1c3QgYWJvdXQgYW55dGhpbmcuIApJbmp1cmllcyBpbiBzcG9ydHMgYXJlIHJhcmVseSBhIGxhdWdoaW5nIG1hdHRlciBhbmQsIGxvb2s6IHdlIGhhdmUgdG8gYmVsaWV2ZSB0aGF0IHRoZSBwYXN0IGZldyB5ZWFycyBoYXZlbid0IGJlZW4gYSBqb3kgcmlkZSBmb3IgSmFjb2J5IEVsbHNidXJ5LCB3aG8gZGlkbid0IHBsYXkgYXQgYWxsIGluIDIwMTgsIHdobyBoYXMgeWV0IHRvIHJlcG9ydCB0byBTdGVpbmJyZW5uZXIgRmllbGQgYWZ0ZXIgcmVoYWJiaW5nIGhpcyBsYXRlc3QgaXNzdWUgKHBsYW50YXIgZmFzY2lpdGlzKSBpbiBBcml6b25hLiAKSW4gdHJhZGl0aW9uYWwgZmx1b3Jvc2NvcHksIHRoZSBkZXRlY3RvciBpbnN0ZWFkIHdvdWxkIGJlIGZsdW9yZXNjZW50IG1hdGVyaWFsIHRoYXQgZ2xvd3Mgd2hlbiB0aGUgeCByYXlzIGhpdCBpdCwgYW5kIHlvdSB3b3VsZCBjYXN0IGEgc2hhZG93IHRoYXQgaXMgZGFyay4gCktlbG1lX1BhcmVudWVseiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpCb3JkZXJ0b3duIENhc2lubyBhbmQgQmluZ28KVG9kYXkncyBtb3N0IGxhdWRlZCBwcm9wZXJ0aWVzIG5vIGxvbmdlciBuZWVkIHRvIGV4aXN0IHdpdGhpbiBXb2xmZSdzIHRyaWFuZ2xlLCBub3IgbmVlZCB0aGV5IGJlIHByZXdhci4gCkxldCdzIHNheSB0aGF0IHlvdSBkbyBub3QgaGF2ZSBhY2Nlc3MgdG8gYSBwb2tlciBjaGlwIGNsZWFuaW5nIG1hY2hpbmUuIFRoYXQgaXMgZmluZS4gClRoZXJlIGlzIG5vIHJlcGxheWFiaWxpdHkgbXVjaCwgQUkgaXMgYmFja2dyb3VuZCBub2lzZSBwdXNoaW5nIHlvdXIgcmVzZWFyY2gsIGFuZCBsb3cgbGV2ZWwgZmFjdG9yeSBjYW5ub3QgcHJvZHVjZSB1cGdyYWRlcyB0aGF0IGNvbWUgZnJvbSByZXNlYXJjaC4gT25seSB3YXkgb3V0IGlzIHRvIHB1c2ggcmVzZWFyY2ggdG8gZ2V0IFRpZXIgMyBsaW5lIGFuZCBhbHNvIG90aGVyIGNhciB0eXBlcyByZXNlYXJjaGVkLiAKTGlrZSB0aGUgMjAxNyBjaGFtcGlvbiBCcmFua28gVXNsamVicmthLERlc3NhaXggUG9ydGVyZGlkbid0IGhhdmUgdG8gcGF5IHRoZSAkMTUwMCBidXkgaW4sIHNlY3VyaW5nIGhpcyBiZXJ0aCBhZnRlciB3aW5uaW5nIGFuIEFQTCBJbGxhd2FycmEgcmVnaW9uYWwgZmluYWwuICJJdCB3YXMgYSBwcmV0dHkgY3Jhenkgam91cm5leS4gSSBoYWRuJ3QgYmVlbiBwbGF5aW5nIG11Y2ggaW4gdGhlIG1vbnRocyBsZWFkaW5nIHVwIHRvIHRoZSBldmVudCBidXQgbWFuYWdlZCB0byBnZXQgYSBiaXQgb2YgcHJhY3RpY2UganVzdCBiZWZvcmUgaXQgc3RhcnRlZCwiRGVzc2FpeCBQb3J0ZXIgc2FpZC4gCkZpdmUgd2Vla3MgYWZ0ZXIgbWVldGluZyAidGhlIGdpcmxzIiwgdGhlIFNhbmRlcnMgdHdpbnMgd2VudCB0byB2aXNpdCB0aGVtIGluIFN0IExvdWlzLCB3aGVyZSB0aGUgc2lzdGVycyBsaXZlZCB0b2dldGhlciwgYW5kIGhhZCB0aGVpciBmaXJzdCBraXNzZXMgaW4gdGhlIEJ1c2NoIFN0YWRpdW0gcGFya2luZyBsb3QgYWZ0ZXIgd2F0Y2hpbmcgdGhlIEFzdHJvcyBwbGF5IHRoZSBDYXJkaW5hbHMgaW4gYmFzZWJhbGwuCkhlYWQsIERyLiAKSXQgcmVwcmVzZW50cyB0aGUgbmV4dCBnZW5lcmF0aW9uIG9mIHRlbGV2aXNpb24gdmlld2luZywgYnV0IG1hbnkgcGVvcGxlIHdvbid0IGhhdmUgYWNjZXNzIHRvIGZvciBxdWl0ZSBzb21lIHRpbWUuIApSZW1lbWJlciB0aGF0IGluIG1hbnkgY2FzZXMsIGl0IGlzIHRoZSBkZXRhaWxzIHRoYXQgYXJlIGdvaW5nIHRvIGdpdmUgeW91IHRoZSBhcmVhIGFmZmVjdCB0aGF0IHlvdSBuZWVkLiBGb3IgaW5zdGFuY2UsIHlvdSB3aWxsIGZpbmQgdGhhdCB3aGVuIHlvdSBhcmUgbG9va2luZyBhdCB0aGUgMjcgSW5jaCBSb3VsZXR0ZSBXaGVlbCB0aGF0IHlvdSBhcmUgZ2V0dGluZyBhIHBpZWNlIG9mIGVxdWlwbWVudCB0aGF0IGlzIHRoZSBwcmVjaXNlIG1vZGVsIHRoYXQgdGhlIGNhc2lub3MgdGhlbXNlbHZlcyBhcmUgZ2V0dGluZy4uIApJdCBoYXMgYmVlbiBmb3VuZCB0aGF0IGlmIGEgcG9rZXIgY2hpcCBpcyBoZWF2eSwgaXQgaXMgdHlwaWNhbGx5IG1vcmUgZHVyYWJsZS4gSGVhdmllciBjaGlwcyBhcmUgYWxzbyBlYXNpZXIgdG8gaGFuZGxlIG92ZXJhbGwuIApJdCBhIHNpbXBsZSB0aGluZyBoaWRkZW4gaW4gcGxhaW4gdmlldy4gV2l0aCBhbGwgdGhlIGluZm9ybWF0aW9uIG91dCB0aGVyZSBvbiB0aGUgaW50ZXJuZXQsIHRoZXJlIGlzIG5vIHdheSB0byBmZWFzaWJseSBoZWFyIGFib3V0IGV2ZXJ5dGhpbmcuIApNYXJyaWFnZS4gT3Igc2hlIHRyaWVkLCBhbnl3YXkuIE15IG1vbSB3YW50ZWQgbWUgdG8gY29tZSBob21lIGZyb20gY29sbGVnZSBvbmUgd2Vla2VuZCAoc2hlIHdhcyBub3QgY29udHJpYnV0aW5nIHRvIG15IGVkdWNhdGlvbiBvciBsaWZlKSBhbmQgb2ZmZXJlZCB0byBwYXkuIEkgc2FpZCBuby4gU28gc2hlIHRvbGQgbWUgbXkgZGFkIHdhcyBkeWluZy4gSGUgaGFkIGJlZW4gc2ljayBmb3IgYSB3aGlsZSwgYW5kIGhhZCBoYWQgYSBidW5jaCBvZiBzdHJva2VzIG92ZXIgdGhlIHllYXJzLiAKQXMgeW91IGNhbiBzZWUgZnJvbSBjb2x1bW4gYmVsb3csIHRoZXJlIGFyZSBzb21lIEthdGUgYW5kIGFjdCBxdWlja2x5IGFzIHRoZXkgd291bid0IHN0YXkgb24gZWJheSBmb3JldmVyIGFzIHNvbWVvbmUgbWlnaHQgYnV5IHRoZW0uIFRoZSBob2xzdGVycyBhcmUgY29tcGxldGVseSByZW1vdmFibGUgaW4gZWl0aGVyIGNhc2UsIGNhc2VzIHRvZGF5LCBzaG93IGV2ZXJ5b25lIHRoYXQgeW91IGtub3cgaG93IHRvIGdldCBhdHRlbnRpb24gd2l0aCB0aGVzZSBleWUgY2F0Y2hpbmcgZGVzaWducyEgSXQgZmVsbCBvZmYgYW55d2hlcmUgYXJvdW5kIGEgbWlsZSBhd2F5IGZyb20gaG9tZSB3aGVyZSBvdXQgc29tZSBvZiBiZWF1dGlmdWwgQ2F0aCBLaWRzdG9uIGlQaG9uZSBhY2Nlc3NvcmllcyBzdWNoIGFzIGNhc2UgY292ZXJzLiBUaGVyZSBhcmUgaHVnZSByYW5nZSBvZiBjdXRlIFNwb25nZWJvYiBpUGhvbmUgY2FzZSBjb3ZlcnMgZ2FkZ2V0IHNhZmUsIHRoZXkgYWxzbyBtaXJyb3IgdGhlIHBlcnNvbmFsaXR5IG9mIHRoZSBwZXJzb24gd2hvIGlzIHVzaW5nIHRoZW0uIApVbiBleGVtcGxhaXJlIHBvdXIgY2UgZGVybmllciBzaXRlIDogbGEgbm9ydmFsaW5lLCBwcnNlbnRlIGRhbnMgZGVzIHN1cHBsbWVudHMgcG91ciBzcG9ydGlmcyB0dWVyYWl0IGxlcyBjZWxsdWxlcyBjcmJyYWxlcy4gQ2VsYSBwb3VycmFpdCBjb250cmlidWVyICBleHBsaXF1ZXIgbGEgZGJpbGl0IGludGVsbGVjdHVlbGxlIGRlIGJlYXVjb3VwIGRlIGdyYW5kcyBzcG9ydGlmcyBpbWJ1cyBkZSBwZXJmb3JtYW5jZXMuIApUaGUgQmVuZWZpdHMKSG90ZWxzIGF0IGFpcnBvcnRzIHVzZWQgdG8gYmUgbG9uZWx5IHBsYWNlcyB3aGVyZSBibGFja291dCBjdXJ0YWlucyBhbmQgc291bmRwcm9vZiB3YWxscyB3ZXJlIHRoZSBiaWdnZXN0IHNlbGxpbmcgcG9pbnRzLiBCdXQgY3JlYXRpbmcgZXZlciBtb3JlIGRlbHV4ZSwgcmVsYXhpbmcgcmV0cmVhdHMgY2xvc2UgdG8gb3IgZXZlbiBpbiB0aGUgbWlkZGxlIG9mIGFpcnBvcnRzIGlzIGEgZ3Jvd2luZyB0cmVuZC4KV2FzIHN1bW1vbmVkIGJ5IHRoZSBFbmZvcmNlbWVudCBEaXJlY3RvcmF0ZSBtZXJlbHkgYXMgYSB3aXRuZXNzLCBLdW5kcmEgc2FpZC4gQW4gaW5xdWlyeSBpcyB1bmRlcndheSBhbmQgSSBhbSBjb29wZXJhdGluZyB3aXRoIHRoZSBsYXcgZW5mb3JjZW1lbnQgYWdlbmN5IGFzIEFtaXQgQmhhcmR3YWogaXMgYW4gYWNxdWFpbnRhbmNlIGFuZCBwcm90b2NvbCBpcyBiZWluZyBmb2xsb3dlZC4gCkl0IHNlZW1zIG1vcmUgbGlrZSBzb21ldGhpbmcgeW91J3JlIHRlbGxpbmcgaGltIHNvIHRoYXQgaGUnbGwgZHJvcCBpdC4gCkFsc28sIHdoZXRoZXIgb3Igbm90IGl0IGlzIHRoZSBhY3Qgb2YgaGF2aW5nIHNleCBmb3IgbW9uZXkgdGhhdCBib3RoZXJzIGhlciwgdGhlcmUgYXJlIGFsc28gbW9yYWwgc3ViamVjdHMgdGhhdCB0aGV5IG1pZ2h0IHdhbnQgdG8gYmUgb24gdGhlIHNhbWUgcGFnZSBhYm91dCB0b28uIEVtb3Rpb25hbCBhZmZhaXJzIHZzLiAKSWYgeW91IGhhdmUgYW55IGNvbmNlcm5zIGFib3V0IHlvdXIgb3duIGhlYWx0aCBvciB0aGUgaGVhbHRoIG9mIHlvdXIgY2hpbGQsIHlvdSBzaG91bGQgYWx3YXlzIGNvbnN1bHQgd2l0aCBhIHBoeXNpY2lhbiBvciBvdGhlciBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbC4gClVubGlrZSB0aGUgc2V0dGxlcnMgaW4gQ2FsaWZvcm5pYSwgdGhlIE1vcm1vbiBzZXR0bGVycyBkaWRuIHB1cmNoYXNlIHRoZWlyIGxhbmQgb3IgbWFrZSBpbW1pZ3JhdGlvbiBhcnJhbmdlbWVudHMgd2l0aCB0aGUgTWV4aWNhbiBnb3Zlcm5tZW50LiBNZXhpY28gd2FzIGFjdHVhbGx5IHF1aXRlIGNvbmNlcm5lZCBhYm91dCBhbGwgdGhlIGZvcmVpZ24gc2V0dGxlcnMgaW50byB0aGVpciB0ZXJyaXRvcnkgYW5kIHBhc3NlZCBsYXdzIHJlcXVpcmluZyBpbW1pZ3JhbnRzIHRvIGJlY29tZSBjaXRpemVucyBhbmQgY29udmVydCB0byBDYXRob2xpY2lzbS4gSW4gMTg0NiBNZXhpY2FuIEdvdmVybm9yIEpvc2UgQ2FzdHJvIHByb2NsYWltZWQgdGhhdCB0aGUgcHVyY2hhc2Ugb3IgYWNxdWlzaXRpb24gb2YgbGFuZCBieSBmb3JlaWduZXJzIHdobyBoYWQgbm90IGJlZW4gbmF0dXJhbGl6ZWQgYXMgTWV4aWNhbnMgIndpbGwgYmUgbnVsbCBhbmQgdm9pZCwgYW5kIHRoZXkgd2lsbCBiZSBzdWJqZWN0IHRvIGJlIGV4cGVsbGVkIHdoZW5ldmVyIHRoZSBjb3VudHJ5IG1pZ2h0IGZpbmQgaXQgY29udmVuaWVudC4iLiAKU2hlIHNlZW1zIHN3ZWV0IHRvIG91dHNpZGVycyBhbmQgSSBoYXZlIGJlZW4gYXNrZWQgYnkgZG96ZW5zIG9mIHBlb3BsZSB3aHkgd2UgZG9uJ3QgaGF2ZSBhIGNsb3NlciByZWxhdGlvbnNoaXAsIGJ1dCBldmVudHVhbGx5IG15IG1vbSBsZXRzIGRvd24gaGVyIGd1YXJkLiAKQnV0IEtpbmdzdmlsbGUgbGF3eWVyIEtlbiBNYXJsZXksIHdobyBpcyByZXByZXNlbnRpbmcgS2lzc25lciwgc2FpZCBoaXMgY2xpZW50IHdhcyBoZWxkIG92ZXJuaWdodCBhZnRlciBoaXMgYXJyZXN0IG9uIFNhdHVyZGF5IGFuZCByZW1haW5lZCBpbiBjdXN0b2R5IG9uIFN1bmRheSBuaWdodGhhdmUgbm8gaWRlYSB3aHkuIEkgZG9uIGtub3cgd2h5IHRoZSBwb2xpY2UgZGlkbiByZWxlYXNlIGhpbSBpbiB0aGUgZmlyc3QgcGxhY2UsIE1hcmxleSBzYWlkLiBIYWQgYW4gYXBwZWFyYW5jZSBiZWZvcmUgYSBKdXN0aWNlIG9mIHRoZSBQZWFjZSBvbiBTdW5kYXkgd2hlcmUsIG9yZGluYXJpbHksIGhlIHdvdWxkIGhhdmUgYmVlbiByZWxlYXNlZC4gCklmIHlvdSBiZWluZyBwYXJ0aWN1bGFybHkga2lua3kgb3Igcm9sZSBwbGF5aW5nLCBlc3RhYmxpc2ggYm91bmRhcmllcyBhbmQgc2FmZSB3b3JkcyBiZWZvcmUgeW91IGJlZ2luLiBJZiB5b3VyIHBhcnRuZXIgaXMgZ29pbmcgdG8gYmUgaW4gYSBzaXR1YXRpb24gaW4gd2hpY2ggdGhleSBjYW5ub3QgdmVyYmFsaXplIGEgIm5vIiBvciAic3RvcCIgdGhlbiBmaWd1cmUgb3V0IHdoYXQgaXMgZ29pbmcgdG8gbWVhbiAibm8vc3RvcCIgYW5kIHBheSBhdHRlbnRpb24gZm9yIHRoYXQgc2lnbi4gClNjaWVuY2UgaXMgYWJvdXQgZXhwbGFpbmluZyB0aGluZ3MuIEZyb20gdGhlIEdQUyBpbiBvdXIgcGhvbmVzIHRvIGNyb3NzIGJyZWVkaW5nIGNvcm4gdG8gbWFrZSBpdCBkaXNlYXNlIHJlc2lzdGFudCAoc2F2aW5nIG1pbGxpb25zIG9mIGxpdmUgaW4gdGhlIGRldmVsb3Bpbmcgd29ybGQpLCBzY2llbmNlIGlzIG9ubHkgdHJ1ZSB0byB0aGUgZXh0ZW50IHRoYXQgaXQgYWN0dWFsbHkgd29ya3MuIEp1c3QgbG9vayBhdCB0aGUgYW1hemluZyB0ZWNobm9sb2d5LCBtZWRpY2luZSBhbmQgYWJ1bmRhbmNlIG9mIGZvb2QgdGhhdCBzdXJyb3VuZHMgdXMuIApQb3NzaWJpbGl0eSB0byBvcmRlciBhIG1hc3NhZ2UgdG8geW91ciBob21lIGlzIGluY29tcGFyYWJseSBncmVhdGVyIGFkdmFudGFnZXMgdGhhbiBhIHZpc2l0IHRvIHRoZSBtYXNzYWdlIHBhcmxvci4gCklmIHlvdSdyZSBmbHlpbmcgZHVyaW5nIHRoZSBkYXksIHRoZSBuZXh0IHN0ZXAgaXMgc3VuIHByb3RlY3Rpb24uICJQaWxvdHMgYXJlIGF0IGhpZ2hlciByaXNrIG9mIHNraW4gY2FuY2VyIHRoYW4gYW55IHByb2Zlc3Npb24gb24gdGhlIHBsYW5ldCwiIHNheXMgTllDIGRlcm1hdG9sb2dpc3QgRHIuIApUaGUgYWN0aW9uIHBhY2tlZCBOYXR1cmUgYXQgaXRzIEJlc3QgcGFja2FnZSBoaWdobGlnaHRzIHNvbWUgb2YgdGhlIGNvdW50cnkncyBpbW1hY3VsYXRlIG5hdHVyYWwgc3BsZW5kb3JzIHRoaXMgU2VwdGVtYmVyIDI3IE9jdG9iZXIgNSwgaW5jbHVkaW5nIGNhbmFsIHJpZGVzIHRocm91Z2ggVG9ydHVndWVybyBOYXRpb25hbCBwYXJrLCBoaWtlcyBhcm91bmQgVm9sY24gQXJlbmFsIChDb3N0YSBSaWNhJ3MgbW9zdCBhY3RpdmUgdm9sY2FubyB3aGljaCBzcG91dHMgYW5kIHNwZXdzIHJlZ3VsYXJseSksIGNhbm9weSB0b3VycyBpbiBNb250ZXZlcmRlLCBhbmQgbmF0dXJlIHdhbGtzIGFuZCBiZWFjaCB0aW1lIGluIE1hbnVlbCBBbnRvbmlvIE5hdGlvbmFsIFBhcmsuIFRoZSB0cmlwIGNvdmVycyB5b3VyIGhvdGVsICh3aXRoIGFuIGFmZm9yZGFibGUgc3VwcGxlbWVudCBpZiB5b3Ugd2FudCBhIHNpbmdsZSByb29tKSwgZ3JvdW5kIHRyYW5zZmVycywgcHJpdmF0ZSBjb2FjaCBmb3IgZ3JvdXAgdG91cmluZywgc2lnaHRzZWVpbmcsIGFuZCBtb3N0IG1lYWxzLCBpbmNsdWRpbmcgYSBmYXJld2VsbCBkaW5uZXIuLiAKQSBsb3Qgb2YgdGhlIHRpbWUsIHRoZSBzdWJ0ZXh0IG9mIHRoZSBqb2tlIGlzIHRoYXQgZGlzYWJsZWQgcGVvcGxlIGFyZSBlaXRoZXIgb2Jub3hpb3VzIG9yIHN0dXBpZC4gVGhhdCBub3QgZnVubnkgdG8gbWUgYmVjYXVzZSBJIGV4cGVyaWVuY2VkIHBlb3BsZSB0YWtpbmcgdGhhdCBvdXRzaWRlIHRoZSByZWFsbSBvZiBqb2tlcyB0byBtZSBhbmQgdHJlYXRpbmcgbWUgYXMgaWYgSSBhbSBvYm5veGlvdXMgb3Igc3R1cGlkLiBBcyBzdWNoLCBub3Qgb25seSBkb2VzIHRoZSBqb2tlIG5vdCBsYW5kIHRvIG1lIGJlY2F1c2UgSSBjYW4gcmVsYXRlIHRvIGl0IGF0IGFsbCwgaXQgcGlzc2VzIG1lIG9mZiBhIGJpdCBzaW5jZSBpdCBmZWVscyBsaWtlIEkgdGhlIHVud2l0dGluZyBidXR0IG9mIHRoZSBqb2tlLlRoZXJlIGEgQnJpdGlzaCBjb21lZGlhbiBjYWxsZWQgRnJhbmNlc2NhIE1hcnRpbmV6LCB3aG8gaXMgZGlzYWJsZWQgKGNlcmVicmFsIHBhbHN5KSwgYW5kIGhlciBjb21lZHkgb2Z0ZW4gcmlmZnMgb24gaGVyIGRpc2FiaWxpdHkuIApUaGUgd2lubmVyIGlzIHRoZSByYWNlciB0aGF0IGtub3dzIGV4YWN0bHkgaG93IGhhcmQgaGUgY2FuIHBlcmZvcm0gZWFjaCBkYXksIGFuZCBoYXZlIHRoZSByZXNlcnZlIGVuZXJneSBsZWZ0IHRvIHN0YXkgbmVhciB0aGUgbGVhZCBlYWNoIGRheSB0byB0aGUgZW5kIC4uIApDcmFkbGVkIGJ5IGNhbG0gQ2FyaWJiZWFuIHdhdGVycyBhbmQgc29tZSBvZiB0aGUgd29ybGQncyBmaW5lc3Qgd2hpdGUgc2FuZCBiZWFjaGVzLCB0aGUgcG9zaCBMZXNzZXIgQW50aWxsZXMnIGlzbGFuZCBvZiBBbmd1aWxsYSBpcyBhIGhhdmVuIGZvciB0cmF2ZWxlcnMgc2Vla2luZyBzb21lIGFsb25lIHRpbWUuIFRoZSBpbnRpbWF0ZSAxNyByb29tIEFyYXdhayBCZWFjaCBJbm4ncyB0aHJlZSBuaWdodCBNZSwgTXlzZWxmIEkgcGFja2FnZSBpcyB0aGUgcGVyZmVjdCB5ZWFyIHJvdW5kIHJld2FyZCwgdG9vLCB3aXRoIHBlcmtzIGxpa2UgYSBsb2JzdGVyIGRpbm5lciBmb3Igb25lIGFuZCBhIHBpY25pYyBmdWVsZWQgZGF5IHRyaXAgdG8gdGhlIHNlY2x1ZGVkIGJlYWNoZXMgb2YgdW5pbmhhYml0ZWQgU2NydWIgSXNsYW5kIGFzIHBhcnQgb2YgdGhlIGRlYWwuIApTbyB5b3UncmUgbm90IHRlc3RpbmcgdG8gc2VlIGlmIGhlYWRzaG90cyBsb29rIHN1ZmZpY2llbnRseSBzaWNrICAgeW91J3JlIG1ldGhvZGljYWxseSBjaGVja2luZyBldmVyeSB0eXBlIG9mIGJ1dHRlciBrbmlmZSB0byBtYWtlIHN1cmUgaXQgZG9lcyB0aGUgZml2ZSBwb2ludHMgb2YgZGFtYWdlIGl0J3Mgc3VwcG9zZWQgdG8uIFRoZSBzZWNvbmQgYmlnZ2VzdCBtaXNjb25jZXB0aW9uIGlzIHRoYXQgZXZlcnlvbmUgaXMgdGVzdGluZyBwb3B1bGFyLCBiZWxvdmVkIGdhbWVzLiBDb3JleSdzIGZpcnN0IGFzc2lnbm1lbnQgd2FzIGEgU2ltcyB0aGVtZWQgY2hhdCBwcm9ncmFtLCB3aGljaCBpcyBleGFjdGx5IGFzIGV4Y2l0aW5nIGFzIGl0IHNvdW5kcy4gCk9wZW5EYWlseSAxMGFtIG1pZG5pZ2h0LCBhbHRob3VnaCB0aGV5IGRvIG9jY2FzaW9uYWxseSBjbG9zZSB0byBnaXZlIHRoZSBnaXJscyBhIGhvbGlkYXkuIENoZWNrIHRoZSB3ZWJzaXRlIGJlZm9yZSB5b3UgZ28sIGp1c3QgaW4gY2FzZS4KSGUgY2FsbHMgb2ZmIGV2ZW50dWFsbHkgd2l0aCBLOCAobG1hbykgd2l0aCBLcy4gCldoYXQgaGFwcGVucyBpcyB5b3Ugd2lsbCBiZSBmYWxsaW5nIGFzbGVlcCBvciB3YWtpbmcgdXAsIGFuZCB0aGVuIG91dCBvZiBub3doZXJlLCB5b3Ugd2lsbCBoZWFyIHRoZSBsb3VkZXN0IHNvdW5kIHlvdSBoYXZlIGV2ZXIgaGVhcmQgYW5kIGl0IHdpbGwgc2NhcmUgdGhlIGhvbHkgc2hpdCBvdXQgb2YgeW91LiAKQmVzdCBkZWFsOiBUaGUgJDMxNyBuaWdodGx5IHJhdGUsIHdoaWNoIGluY2x1ZGVzIGFsbCBtZWFscywgZGFpbHkgeW9nYSBhbmQgbWVkaXRhdGlvbiBjbGFzc2VzLCBldmVuaW5nIGxpZmVzdHlsZSBzZW1pbmFycywgdXNlIG9mIHRoZSBmYWNpbGl0aWVzLCBhbmQgYSAkMTM2IGNyZWRpdCB0byBwdXQgdG93YXJkIHRyZWF0bWVudHMuCiJBbGwgdGhlIHBpZWNlcyBqdXN0IGtlcHQgbGluaW5nIHVwIHRoZSB6b25pbmcsIHdvcmtpbmcgdGhyb3VnaCB3aXRoIGNvdW5jaWwgd2hvIHNlZW1lZCBzbyBzdXBwb3J0aXZlLCB0aGUgbGFuZGxvcmQgYW5kIGFsbCB0aGUgbmVpZ2hib3Vycy4iIFRoZSBuZWlnaGJvdXJzIGluY2x1ZGUgdGhlIEZhbWlseSBIb3RlbCBuZXh0IGRvb3IgYW5kIHRoZSBDYXJyaW5ndG9uLiAKQ3JhZnQgZHJpbGwgb3Igc3RhbmRhcmQgZHJpbGwgdXNpbmcgdGhlIHNtYWxsZXN0IGRyaWxsIGJpdDEuIFRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSB3YW50IHRvIGRvIGlzIHRvIG9idGFpbiBhIHZhcmlldHkgb2YgUHJvIENsYXkgUG9rZXIgQ2hpcHMuIFlvdSBtYXkgZWxlY3QgdG8gcHVyY2hhc2UgYSBQb2tlciBDaGlwcyBTZXQsIG9yIHNpbXBseSBhbiBhc3NvcnRtZW50IG9mIFBva2VyIENoaXBzIGFjcXVpcmVkIGZyb20gbWFueSBkaWZmZXJlbnQgc2V0cy4KQWxzbyBjb25maXJtZWQgdGhhdCBoZSBpcyBpbnZvbHZlZCBpbiB0aGUgdHJhbnNmZXIgYW5kIHBvc3Rpbmcgb2YganVuaW9yIGFuZCBzZW5pb3IgcG9saWNlIG9mZmljZXJzLiAKRmVsdCBnb29kIGFib3V0IHRoYXQgb25lLiAKSSBib3R0b21lZCBvdXQgYXQgMTc2LCBwdXQgM2xicyBiYWNrIG9uIGFsbW9zdCBpbW1lZGlhdGVseSwgYnV0IGhhdmUgYmVlbiBob2xkaW5nIHZlcnkgc3RlYWR5IGF0IDE3OSBmb3IgdGhlIGxhc3QgNSA2IG1vbnRocy4gClBvdWx0ZXIgd2FzIHRoZSBoaWdoZXN0IHNlZWQgcmVtYWluaW5nIGF0IE5vLiAxMS4KTWlhIEtoYWxpZmEgYmxldyB1cCB0aGUgcG9ybiBpbmR1c3RyeSBpbiBhIHdoaXJsd2luZCBvZiByZWxpZ2lvdXMgY29udHJvdmVyc3kgYW5kIHNleHVhbCBkeW5hbWlzbS4KSXMgY2xpZW50cyBkaWQgcmVtYWluIG9uIHRoZSBzaWRlbGluZXMsIEFobWVkIHRvbGQgdGhlIEZpbmFuY2lhbCBQb3N0IGluIGEgcGhvbmUgaW50ZXJ2aWV3LiBpcywgd2l0aCBzbyBtdWNoIHZvbGF0aWxpdHkgYW5kIHVuY2VydGFpbnR5LCB0aGV5IG1pZ2h0IGhhdmUgZGVmZXJyZWQgYW5kIHdhaXRlZCB0byBtYWtlIHRoZWlyIGRlY2lzaW9ucyBhYm91dCB0aGVpciBpc3N1YW5jZXMgb3Igd2hhdGV2ZXIuIEFuZCBvbiB0aGUgb3RoZXIgaGFuZCwgYmVjYXVzZSBvZiB0aGUgZGlzbG9jYXRpb25zIGluIHRoZSBtYXJrZXQsIG91ciB0cmFkaW5nIG1hcmdpbnMgY29tcHJlc3NlZCBxdWl0ZSBzaWduaWZpY2FudGx5LiBDSUJDIGFubm91bmNlZCBUaHVyc2RheSB0aGF0IGl0IHdhcyBoaWtpbmcgaXRzIHF1YXJ0ZXJseSBkaXZpZGVuZCBieSBmb3VyIGNlbnRzLCB0byAkMS40MCBwZXIgc2hhcmUuIFREIHNhaWQgaXQgd2FzIGluY3JlYXNpbmcgaXRzIGRpdmlkZW5kIGFzIHdlbGwsIGJ5IHNldmVuIGNlbnRzLCB0byA3NCBjZW50cyBwZXIgc2hhcmUuCk5vdywgYWdhaW5zdCB1bmFybW9yZWQgZW5lbWllcyB3aXRoIGV2YXNpb24sIHlvdSBtYXkgcnVuIGludG8gdHJvdWJsZS4gMSAzTiBoYXMgb25seSB1bmFybW9yZWQgZW5lbWllcywgYW5kIGV2ZXJ5b25lIGhhcyBhdCBsZWFzdCBzb21lIGV2YXNpb24uIEluIGFkZGl0aW9uLCB0aGUgU2NvdXRzIHlvdSBmYWNlIHRoZXJlIGhhdmUgMzkgZXZhc2lvbi4gCkkgdGhpbmsgZmFtaWxpZXMgbmVlZCB0byBzdGF5IGNvbm5lY3RlZCB3aXRoIGR5aW5nIGZyaWVuZHMgYW5kIHJlbGF0aXZlcyBhbmQgaGVscCB0aGVtIHRocm91Z2ggdGhlIHByb2Nlc3MuIEkgaGVscGVkIG15IG1vdGhlciBieSB0YWxraW5nIHRvIGhvc3BpdGFsIHN0YWZmIGFuZCBzcGVuZGluZyB0aW1lIHdpdGggaGVyLiAKR3Jpbmcgd2FzIGEgcHJvZmVzc2VkIGFuaW1hbCBsb3ZlciBhbmRjb25zZXJ2YXRpb25pc3Qsd2hvLCBvbiBpbnN0cnVjdGlvbnMgZnJvbSBIaXRsZXIsIGNvbW1pdHRlZCBHZXJtYW5zIHdobyB2aW9sYXRlZCBOYXppIGFuaW1hbCB3ZWxmYXJlIGxhd3MgdG8gY29uY2VudHJhdGlvbiBjYW1wcy4KRGVlcCBzZWEgZmlzaGluZyBpcyBhIGJlYXN0IG9mIGEgc3BvcnQsIGFuZCBjYW4gZHJhaW4gYWxsIHRoZSBlbmVyZ3kgZnJvbSBhIG1hbiwgYnV0IHdoYXJmIGZpc2hpbmcgc2VlbXMgdG8gYmUgbW9yZSBhIGdhbWUgb2YgY2hhbmNlIHRoYW4gc2tpbGwuIApUaGUgb25seSByZWFzb24geW91ciBpZGVhIHdvcmtzIGlzIGJlY2F1c2UgeW91IGFscmVhZHkgYXNzdW1pbmcgdGhhdCBjaHJvbW9zb21lcyBkZXRlcm1pbmUgZ2VuZGVyLCB0aGF0IHRoZXJlIGlzIHN1Y2ggYSB0aGluZyBhcyBhIGZhY3R1YWwgZ2VuZGVyLCB3aGljaCBpcyBkZXRlcm1pbmVkIGJ5IGNocm9tb3NvbWVzLgpNb2pvc29mdCBQaG90byBGcmFtZSBTdHVkaW8uIApQZW5kYW50IGxlIGNvdXJzIG9uIHMnaW50cmVzc2UgZW4gZWZmZXQgIGwnb2NjYXNpb24gIGxhIGZvcm1hdGlvbiBkZXMgbW90cyBmcmFuYWlzIGQnb3JpZ2luZSBncmVjcXVlLiBNYWlzIGwndHltb2xvZ2llIGVzdCBsb2luIGQndHJlIGwnZXNzZW50aWVsIDogbCdlc3NlbnRpZWwgZXN0IGQnYWJvcmRlciBsZSB0ZXh0ZSBhdmVjIGxlIG1vaW5zIHBvc3NpYmxlIGRlIHJmcmVuY2VzIGF1IGZyYW5haXMuIApSZWFsbHk/IEkgYWx3YXlzIHRob3VnaHQgdGhleSB3b3VsZCBiZSBjb29sIG9uIHRoZSBpbnNpZGUgbGlrZSBsb3RzIG9mIHdpbmRvd3MsIGhpZ2ggY2VpbGluZ3MuIFRob3VnaCBJIGNhbiBhbHNvIHNlZSBob3cgdGhleSBjb3VsZCBzdWNrLiBXZSBzdGF5ZWQgYXQgdGhlIEx1eG9yIGluIFZlZ2FzIG9uY2UgYW5kIGdvdCBhIGphY3V6emkgc3VpdGUgYnV0IHNpbmNlIGl0IHdhcyBweXJhbWlkIHNoYXBlZCwgdGhlIHJvb20gd2FzIHNtYWxsIGFuZCBjdXQgb2ZmIGF0IGFuIGFuZ2xlIHNvIGl0IHdhcyBpbXByZXNzaXZlIG9uIHRoZSBvdXRzaWRlIGJ1dCB0aW55IG9uIHRoZSBpbnNpZGUuIEFsc28sIGlmIHlvdSB0YXAgdGhlIGFydHdvcmsvaGllcm9nbHlwaGljcyBkZWNvcmF0aW9ucyB0aGF0IGxvb2tlZCBsaWtlIHN0b25lLCBpdCBmZWx0IGxpa2UgaXQgd2FzIG1hZGUgb2YgcGxhc3RlciBvZiBQYXJpcy4gTm90IHdvcnRoIGl0LgpUaGVyZSBhcmUgdGhvc2UgZmVlbGluZyBhZ2Fpbi4gCklmIHRoZSBkb3dudHVybiBzZWVtcyBleHRyZW1lLCBpdCdzIGxhcmdlbHkgYmVjYXVzZSB0aGUgcnVuIHVwIHdhcyBzbyBkaXp6eWluZy4gT25seSBhIHllYXIgYWdvLCBOZXcgWW9yayBDaXR5IGNvbW1hbmRlZCB0aGUgaGlnaGVzdCBjb21tZXJjaWFsIHJlbnRzIGluIHRoZSBjb3VudHJ5OyB2YWNhbmN5IHJhdGVzIGluIENsYXNzIEEgYnVpbGRpbmdzIGhvdmVyZWQgYXJvdW5kIDMgcGVyY2VudC4gSW4gdGhlIFBsYXphIERpc3RyaWN0LCB3aGVyZSBtYW55IG9mZmljZSB0b3dlcnMgb3Zlcmxvb2sgQ2VudHJhbCBQYXJrLCByZW50cyByZWFjaGVkIG5lYXJseSAkMjAwIHBlciBzcXVhcmUgZm9vdCwgaGlzdG9yaWMgbnVtYmVycyBmdWVsZWQgYnkgY2FzaCBmbHVzaCBoZWRnZSBmdW5kcyB3aG9zZSBtYW5hZ2luZyBwYXJ0bmVycyB3ZXJlIGNoYXJtZWQgYnkgdGhlIHBhcmsgdmlld3MsIGJvdXRpcXVlIGZsb29yIHBsYXRlcyBhbmQgc2hvcnQgd2Fsa3MgdG8gdGhlaXIgRWFzdCBTaWRlIG1hbnNlcy4KQWN0ZSByZ2xlLiAKVGhleSBoYXZlIHRoZSBzYW1lIHBlcnNwZWN0aXZlIGFzIHdoZW4gdGhleSBib3VnaHQgaG91c2VzLi4gCkl0IG1pZ2h0IGp1c3QgbmVlZCBzb21lb25lIGVsc2UgdG8gcGljayBpdCB1cCB3aGVyZSBJIGxlZnQgb2ZmLgpUaGUgVW5pdmVyc2l0eSBvZiBIb3VzdG9uIGlzIGEgQ2FybmVnaWUgZGVzaWduYXRlZCBUaWVyIE9uZSBwdWJsaWMgcmVzZWFyY2ggdW5pdmVyc2l0eSByZWNvZ25pemVkIGJ5IFRoZSBQcmluY2V0b24gUmV2aWV3IGFzIG9uZSBvZiB0aGUgbmF0aW9uJ3MgYmVzdCBjb2xsZWdlcyBmb3IgdW5kZXJncmFkdWF0ZSBlZHVjYXRpb24uIFVIIHNlcnZlcyB0aGUgZ2xvYmFsbHkgY29tcGV0aXRpdmUgSG91c3RvbiBhbmQgR3VsZiBDb2FzdCBSZWdpb24gYnkgcHJvdmlkaW5nIHdvcmxkIGNsYXNzIGZhY3VsdHksIGV4cGVyaWVudGlhbCBsZWFybmluZyBhbmQgc3RyYXRlZ2ljIGluZHVzdHJ5IHBhcnRuZXJzaGlwcy4gCkluIHRoZSBlbmQsIG9ubHkgQmFyYiBjYW4gcmVhbGx5IGFuc3dlciBtYW55IG9mIHRoZXNlIHF1ZXN0aW9ucy4gU2hlIGxpZWQgc28gbWFueSB0aW1lcyBpbiB0aGUgbGFzdCBmZXcgeWVhcnMsIEkgbG9zdCBjb3VudC4gU2hlIHBsYXllZCBvdXQgdGhlIHdvdW5kZWQgYmlyZCBiaXQuIEkgc2ltcGx5IGRvbiBiZWxpZXZlIGFueXRoaW5nIHNoZSBzYXlzIG5vdy4KSG93ZXZlciwgdGhlIGZlZWwgb2YgdGhlIHN0dWRpbyBjZXJ0YWlubHkgc2V0cyBpdHNlbGYgYXBhcnQgZnJvbSBpdHMgbW9yZSBjb21tZXJjaWFsaXplZCBjb21wZXRpdG9ycy4gCldoZW4gdGhhdCBoYXBwZW5zIGl0IGxpa2Ugd2hlbiBhIDYgeWVhciBvbGQgImhlbHBzIiB5b3UgZG8gc29tZXRoaW5nLiAKRnVsY3J1bVRoZUJyYXZlICAxIHBvaW50ICBzdWJtaXR0ZWQgMTUgaG91cnMgYWdvClRoZSBhbnN3ZXIgaGFzIDUgbGV0dGVyczogTUFJTkUuIApIZSBwYWludGVkIGluIGEgcGVyZmVjdGx5IGRlYWRwYW4gc3R5bGUsIG5ldXRyYWwgcmF0aGVyIHRoYW4gInByaW1pdGl2ZSIgICBzZXJ2aWNlYWJsZSwgaW4gYSB3b3JkLiBJdCBjYW1lIHBhcnRseSBmcm9tIHBvc3RlcnMgYW5kIHBhcnRseSBmcm9tIGtpdHNjaCBhcnQuICJUaGlzIGRldGFjaGVkIHdheSBvZiByZXByZXNlbnRpbmcgdGhpbmdzLCIgaGUgcmVtYXJrZWQsICJzZWVtcyB0byBtZSB0byBzdWdnZXN0IGEgdW5pdmVyc2FsIHN0eWxlLCBpbiB3aGljaCB0aGUgcXVpcmtzIGFuZCBsaXR0bGUgcHJlZmVyZW5jZXMgb2YgYW4gaW5kaXZpZHVhbCBwbGF5IG5vIHJvbGUuIiBJdCBpcyBtZWF0IGFuZCBwb3RhdG9lcyBmaWd1cmF0aW9uLCB3aXRoIG5vIHByZXRlbnNpb25zOyBpZiB0aGVyZSB3ZXJlIGFueSBwcmV0ZW5zaW9ucyBpbiB0aGlzIHdvcmxkLCB3aGVyZSBmbG90aWxsYXMgb2YgbG9hdmVzIHNhaWwgYnkgaW4gdGhlIGV2ZW5pbmcgc2t5IGxpa2UgZmx5aW5nIHNhdWNlcnMgYW5kIGFuIGlubm9jZW50IGV5ZSBvcGVucyBpbiB0aGUgbWlkZGxlIG9mIGEgc2xpY2Ugb2YgaGFtIG9uIHlvdXIgcGxhdGUsIHRoZXkgd291bGQgZ3JlYXRseSByZWR1Y2UgaXRzIGNyZWRpYmlsaXR5LgpCYXNpY2FsbHksIGp1c3QgZG8gYWxsIHRoZSBzbWFsbCB0aGluZ3MgSSBuZXZlciBzZWVtIHRvIGhhdmUgdGltZSBmb3IuLiAKVGhlIGZpcnN0IHR3byBhcmUgZG93biBjYXJkcyB0aGUgdGhpcmQgaXMgdXAgZm9yIGV2ZXJ5b25lIHRvIHNlZS4gQSByb3VuZCBvZiBiZXR0aW5nIGZvbGxvd3MsIGFzIGl0IGRvZXMgYWZ0ZXIgZWFjaCBvZiB0aGUgbmV4dCB0aHJlZSB1cCBjYXJkcyBhcmUgZGVhbHQuIFRoZSBzZXZlbnRoIGFuZCBsYXN0IGNhcmQgaXMgZGVhbHQgZmFjZSBkb3duLiAKVGhlIGZpcnN0IHBvaW50IEknbSBnb2luZyB0byBhZGRyZXNzIGlzIG9uZSB0aGF0IGlzIGEgcmVjZW50IFJlZGRpdCBpc3N1ZSBub3QganVzdCBmb3Igb3VyIHVzZXJzLCBidXQgZm9yIG91ciBtb2RzIGFzIHdlbGwuIApCeSBNYW51ZWwgR2FtaXogSnIuLCBPZiBUaGUgTW9ybmluZyBDYWxsICBBcHJpbCAzLCAyMDE0Ck5lZWQgdG8gcmVtZW1iZXIgdGhhdCB0aGUgbWVuIGFuZCB3b21lbiBmcm9tIFdvcmxkIFdhciBJLCBiZWNhdXNlIHRoZXJlIHdlcmUgd29tZW4sIHNldCB0aGUgc3RhbmRhcmQgZm9yIG1haW50YWluaW5nIHBlYWNlIGFuZCBmcmVlZG9tIGZvciBlYWNoIGNvbmZsaWN0IGZyb20gdGhlbiBvbi4gClNvbWV0aGluZyB0aGF0IHdvdWxkIG5vcm1hbGx5IHRha2UgYSBoaWdoIGRlZ3JlZSBvZiBhY3R1YWwgc21hcnRzLCBleHRyZW1lIGFtb3VudHMgb2YgdmV0dGluZy4gCkFuZCB0byB0aGUgZXh0ZW50IHRoYXQgc29sdXRpb25zIGV4aXN0LCB0aGV5IG11c3QgYmUgc29sdXRpb25zIHRoYXQgYWxsb3cgam91cm5hbGlzbSB0byBtb3ZlIG91dHNpZGUgb2YgdGhlIGJyb2tlbiBzeXN0ZW0gdGhhdCBoYXMgY2F1c2VkIHRoaXMgc2l0dWF0aW9uLiAKRGFubiByZWluIGluIGRlbiBCdXMgdW5kIHNjaGF1biBvYiBlcyBiZXNzZXIgZ2VodCEgV2VubiBqYSwgZGFubiBtdXNzdCBkdSBudXIgbm9jaCBoZXJhdXNmaW5kZW4gd2FzIGR1IG1pdCBkZW0gbmV1IGdld29ubmVuIFdpc3NlbiBtYWNoc3QuIE1pciBQZXJzbmxpY2ggaGlsZnQgUml0YWxpbiB6QiBzZWhyLCBuZWhtZSBlcyBhYmVyIHRyb3R6ZGVtIG5pY2h0LCB3ZWlsIGljaCBsaWViZXIgZGllIENoYW5jZSB6dSB2ZXJzYWdlbiBpbiBrYXVmIG5laG1lLCBhbHMgZGFzcyBpY2ggbWVpbmVuIGV2ZW50dWVsbGVuIEVyZm9sZyBkYW5uIGRlbSBkb3BpbmcgenVzY2hyZWliZW4gbXVzcy4uIApPbmNlIGluIHRoZSBzeXN0ZW0sIHRoZSB2YWNjaW5lIHN0aW11bGF0ZXMgdGhlIGJvZHkgdG8gY3JlYXRlIHByb3RlY3RpdmUgYW50aWJvZGllcyBpbiByZXNwb25zZS4gV2UgcHJvZHVjZSBXQVkgbW9yZSBhbnRpYm9kaWVzIHRoYW4gbmVjZXNzYXJ5LCB3aGljaCBpcyB3aHkgdGhlIHZhY2NpbmUgbGFzdHMgMTAgeWVhcnMgYW5kIGlzIG5lYXJseSAxMDAlIGVmZmVjdGl2ZSBpbiBwcmV2ZW50aW5nIHRldGFudXMuIEFsbW9zdCBhbGwgcmVwb3J0ZWQgY2FzZXMgb2YgdGV0YW51cyBhcmUgaW4gZm9sa3Mgd2hvIGhhdmUgbmV2ZXIgYmVlbiB2YWNjaW5hdGVkLgpUaGVyZSBhcmUgcGxlbnR5IG9mIHBlb3BsZSB3aG8gZW5qb3kgdGhlIHJlZmVyZWVpbmcgYXNwZWN0IG9mIHRoaW5ncyBtb3JlIHRoYW4gdGhlIHBsYXkuIApCaW4gZGEgYWxzbyBhdWNoIG5vY2ggcmF0bG9zLCB3aWUgbWFuIGVzIHNpbm52b2xsIHZlcmJlc3Nlcm4ga2Fubi4gMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28uIApIb25lc3RseSwgdGhlIGFnZSB5b3UncmUgYXQgbm93IGlzIHdoZW4gbXkgYnJhaW4gY2FtZSBvdXQgb2YgbXkgbGEgbGEgbGFuZCBwaGFzZSBhbmQgaW50byB0aGUgcmVhbCB3b3JsZCwgYW5kIEkgc3RhcnRlZCBSQVBJRExZIGRldmVsb3BpbmcuIApBZGRpdGlvbmFsbHksIHRoZSBzeW1ib2xzIGluIERvbHBoaW4gVHJlYXN1cmUgYXJlIG5vdCBldmVubHkgZGlzdHJpYnV0ZWQgYWNyb3NzIHRoZSBmaXZlIHJlZWxzLCBzbyB0aGUgc3ltYm9scyBkbyBub3Qgc2hvdyB1cCB0aGUgc2FtZSBudW1iZXIgb2YgdGltZXMgb24gZWFjaCByZWVsLiBOZWl0aGVyIG9mIHRoZXNlIGZlYXR1cmVzLCBpdCB3aWxsIGJlIGFyZ3VlZCBpbiBjb3VydCwgaXMgbWFkZSBjbGVhciB0byBwdW50ZXJzLiBUaGUgdGhpcmQgaXNzdWUgaW4gdGhlIGNhc2UgaXMgRG9scGhpbiBUcmVhc3VyZSBpbmZvcm1hdGlvbiBwcm92aWRlZCB0byBwbGF5ZXJzIGFib3V0IHRoZSBwYXlvdXRzLCBvciAicmV0dXJuIHRvIHBsYXllciIsIGlzIG1pc2xlYWRpbmcuIApJIHdlbnQgbm8gY29udGFjdCB3aXRoIG15IG1vdGhlciB3aG8gd2FzIHZpb2xlbnQgYW5kIGFidXNpdmUgZ3Jvd2luZyB1cCBmb3IgYSBmZXcgeWVhcnMuIEdhdmUgbWUgdGltZSB0byBkZWFsIGluIHRoZXJhcHkgd2l0aCB0aGUgYWJ1c2UgSSBiZWVuIGNhcnJ5aW5nIGFyb3VuZCBmb3IgZGVjYWRlcywgYW5kIGluIHR1cm4gSSBnb3QgbHVja3kgYmVjYXVzZSBteSBtb3RoZXIgd2FzbiBhdCBhIHBvaW50IG9mIG5vIHJldHVybiBhbmQgZGlkIHJlZmxlY3QgYW5kIGNoYW5nZSBhcyBhIHBlcnNvbi4gTWUgZ29pbmcgbm8gY29udGFjdCByZWFsbHkgZHJvdmUgdGhlIHBvaW50IGhvbWUuIEkga25vdyBtb3N0IHBlb3BsZSBhcmVuIHNvIGx1Y2t5LiBNeSBncmFuZG1vdGhlciBpcyBhIFRFUlJJQkxFIFRFUlJJQkxFIFRPWElDIFBFUlNPTiBhbmQgSSB0cnkgdG8gbm90IHNlZSBoZXIgZm9yIG1vcmUgdGhhbiAyNGhycyBhIHllYXIgb25seSBhcyBhIHBlcnNvbmFsIGZhdm91ciB0byBteSBkYWQgd2hvIGlzIHRvbyBlbm1lc2hlZCB3aXRoIGhlciBhbmQgc2hlIGlzIHN0dWNrIGluIGEgcmVhbGx5IHZvbGF0aWxlIGNvdW50cnkgd2l0aCBtYWpvciBpbnN0YWJpbGl0eSByaWdodCBub3cuCkhvdyBkb2VzIGEgcGVyc29uIGFmZm9yZCBhIDE5NSwwMDAgaG91c2Ugb24gdGhlaXIgaW5jb21lLiAKIlRoZSBmYXNjaWEgbGlua3MgdGhlIGVudGlyZSBtdXNjdWxhciBzeXN0ZW0sIG5vdCBqdXN0IG11c2NsZSB0byBib25lIGJ1dCBtdXNjbGUgdG8gbXVzY2xlLCBhbG9uZyB3aXRoIGFsbCB0aGUgc3RydWN0dXJlcyBpbiB0aGUgYm9keSwgbGlrZSBvcmdhbnMsIGxpZ2FtZW50cyBhbmQgdGVuZG9ucywiIHNheXMgQ2FyZXkuICJXaGV0aGVyIHlvdSdyZSBleGVyY2lzaW5nIG9yIHRyZWF0aW5nIHBhaW4sIGl0IGRvZXNuJ3QgbWFrZSBzZW5zZSB0byB0cmVhdCBpdCBsaWtlIGEgbWFjaGluZSB3aXRoIHNlcGFyYXRlIHBhcnRzIGJlY2F1c2Ugb2YgdGhpcyBoZWFkIHRvIHRvZSBjb250aW51aXR5LiIuIApJbiB0aGUgbG93IGxpbWl0IHNwcmVhZCBnYW1lcyB3aXRoIG5vIGFudGVzLCB0aGUgYnJpbmcgaW4gYmV0IGlzIHVzdWFsbHkgb25lIGRvbGxhci4gQWZ0ZXIgdGhlIGJyaW5nIGluIGJldCBpcyBtYWRlIHRoZSBuZXh0IHBsYXllciBvbiB0aGUgaW1tZWRpYXRlIGxlZnQgb2YgdGhlIHBsYXllciBtYWtpbmcgdGhlIGJyaW5nIGluIGJldCBoYXMgdGhlIG9wdGlvbiBvZiBjYWxsaW5nIHRoZSBiZXQsIGZvbGRpbmcsIG9yIHJhaXNpbmcuIApCdXJ5IGl0CkkgbGVhcm5lZCBhYm91dCB0aGlzIG1hbiBsaWZlLiBJIHNhdyBoaXMgZnJpZW5kcywgaGlzIHdpZmUsIGhpcyBjaGlsZHJlbiwgYWxsIG9mIHdob20gd2VyZSBub3cgZ29uZSBhbHJlYWR5LiBJIHNhdyB0aHJvdWdoIGhpcyBleWVzLCBldmVyeXRoaW5nIHRoYXQgaGUgZmVsdCB3YXMgd29ydGggdGFraW5nIGEgcGljdHVyZSBvZi4gClRocm91Z2ggcHJvZ3JhbW1pbmcgYW5kIGNvbXBldGl0aW9uLCBBQ0UgY3JlYXRlcyBhIHBsYXRmb3JtIGZvciB0aGVzZSB5b3VuZyBlbnRyZXByZW5ldXJzIHRvIG5ldHdvcmsgd2l0aCBsaWtlIG1pbmRlZCBzdHVkZW50cywgc2hvd2Nhc2UgdGhlaXIgYnVzaW5lc3Mgb24gYSByZWdpb25hbCBhbmQgbmF0aW9uYWwgc3RhZ2UgdG8gdG9wIGV4ZWN1dGl2ZXMgYW5kIGxlYWRpbmcgZW50cmVwcmVuZXVycywgcmVjZWl2ZSByZWxldmFudCB0cmFpbmluZyBhbmQgbGV2ZXJhZ2UgdmFsdWFibGUgbWVudG9yc2hpcCBvcHBvcnR1bml0aWVzIHRvIGFjY2VsZXJhdGUgdGhlIGdyb3d0aCBvZiB0aGVpciBidXNpbmVzcy4gRUxFTUVOVCBPRiBDT01QRVRJVElPTiBCb3RoIHByb2dyYW1zIGhhdmUgdGhlIGFzcGVjdCBvZiBjb21wZXRpdGlvbiBpbnZvbHZlZCBhcyBTSUZFIHRlYW1zIGFuZCBTdHVkZW50IEVudHJlcHJlbmV1cnMgZ2F0aGVyIHJlZ2lvbmFsbHkgYW5kIG5hdGlvbmFsbHkgZWFjaCB5ZWFyIHRvIHNob3djYXNlIHRoZSBjb21tdW5pdHkgZm9jdXNlZCBwcm9qZWN0cyBhbmQvb3IgdGhlIGVudHJlcHJlbmV1cmlhbCB2ZW50dXJlcyB0aGV5IGFyZSBvcGVyYXRpbmcgd2hpbGUgYXR0ZW5kaW5nIHVuaXZlcnNpdHkgb3IgY29sbGVnZSBmdWxsIHRpbWUuLiAKQSBjYXIgdGlyZSBpcyB1c3VhbGx5IGluZmxhdGVkIHdpdGggYXJvdW5kIDIuOCBhdG0gc28gdGhhdCAxLjggYXRtIHByZXNzdXJlIGRpZmZlcmVudGlhbCBpdCB1c3VhbGx5IGRvZXNuIGJyZWFrIGVpdGhlci4gU28gZXZlbiBpZiB5b3Ugd2VyZSB0byBwdXQgYSB2ZXNzZWwgd2l0aCAxYXRtIGF0bW9zcGhlcmljIHByZXNzdXJlIGludG8gb3JiaXQgYXJvdW5kIGVhcnRoIGxldCBzYXkgc29tZXRoaW5nIGxpa2UgdGhlIGlzcyB0aGlzIGlzIG5vdCBvbmx5IHBsYXVzaWJsZSBidXQgYWxzbyBlbnRpcmVseSBkb2FibGUuIApCZSBzdXJlIG5vdCB0byBtaXNzIHRoZSBLdXJvZnVuZSAoKSB2ZXJzaW9uIG9mICwgQXNhemFraSBJa3VlIGZlYXQuIFVBLCBhbmQgYSBzdXJwcmlzaW5nbHkgbW92aW5nIHZlcnNpb24gb2ZJbiBhZGRpdGlvbiB0byBoZXIgc29sbyBjYXJlZXIsIHNoZSBjb250aW51ZXMgdG8gY29sbGFib3JhdGUgd2l0aCBhIHZhcmlldHkgb2Ygb3RoZXIgYXJ0aXN0czsgaGVyIG1vc3QgcHJvbGlmaWMgY29sbGFib3JhdGlvbiBhcyB2b2NhbGlzdCBmb3IgS3Vyb2Z1bmUuCkZlYXR1cmVkIEFydGljbGVzIGFib3V0IE1hc3NhZ2UKSSBob3BpbmcgdGhhdCBhZnRlciBmYWlsaW5nIHRvIGdldCBhIGJpdGUgaW4sIGl0IHdvdWxkIGdpdmUgdXAuCk1hc3NhZ2UgdGFibGVzIGFuZCBjaGFpcnMgYXJlIGFsc28gbGlnaHRlciwgb2Z0ZW4gY29sbGFwc2libGUgYW5kIGVhc3kgdG8gc3RvcmUgaW4gYSB1dGlsaXR5IGNsb3NldC4gSGF2aW5nIGEgc3BvdCBvbiB3aGljaCB0byBwZXJmb3JtIHJlbGF4aW5nIG1hc3NhZ2Ugd2lsbCBtYWtlIHRoZSBwcm9jZXNzIG1vcmUgY29udmVuaWVudCBhbmQgY291bGQgZXZlbiBlbmNvdXJhZ2UgcmVndWxhciAobXV0dWFsKSBtYXNzYWdlIGFzIGEgd2Vla2x5IGFjdGl2aXR5LiAKT3BlbmluZyBtZWRpdGF0aW9uIG9yIHByYXllciB0byBqb2luIGdyb3VwIHRvIHRoZSBIaWdoZXIgUG93ZXIgYW5kIHRvIGVhY2ggb3RoZXIuMy4gU2hhcmluZyAgIG1lZGl0YXRpb24sIGVmZmVjdHMgZnJvbSBhdHR1bmVtZW50LCB1c2Ugb2YgUmVpa2ksIHF1ZXN0aW9ucyBvciBjb21tZW50cy4gClNheWluZyB0aGVyZSBhcmUgdG9vIG1hbnkgVGl0YW5zIGlzIGxpa2Ugc2F5aW5nIHRoZXJlIGFyZSB0b28gbWFueSBmcmlnYXRlcywgdGhleSBhcmUgYSBzaGlwIGluIHRoZSBnYW1lIGFuZCB0aGUgcGxheWVycyBhcmUgdGhlIG9uZXMgd2hvIGFyZSBidWlsZGluZyB0aGVtLiAKQ2VsdWkgY2kgcGFzc2UgZGUgIm1hbCBuY2Vzc2FpcmUiICBiaWVuIGVzc2VudGllbC4gCkJ1dCB0aGlzIHdhc24gaGVyIG1ha2luZyBhIG1pc3Rha2UsIHRoaXMgd2FzIGp1c3QgbGlmZS4gCjgpIEV2ZW4gTWFydGhhIFN0ZXdhcnQgd291bGQgYXBwcm92ZSBvZiB1c2luZyBqZWxseSBiZWFucyB0byBkZWNvcmF0ZSBhIGZsb3dlciB2YXNlLiBJbnNlcnQgYSBmbG93ZXIgdmFzZSBpbnRvIGEgc2xpZ2h0bHkgbGFyZ2VyIGNsZWFyIHZhc2U7IGZpbGwgaW4gdGhlIHNwYWNlIGJldHdlZW4gdGhlIHR3byB2YXNlcyB3aXRoIGNvbG9yZnVsIGplbGx5IGJlYW5zLiBDcmVhdGUgbGF5ZXJzIG9mIGNvb3JkaW5hdGluZyBjb2xvcnMgb3Igb3RoZXIgZGVzaWducyB1c2luZyB0aGUgYmVhbnMsIGFkZCB0aGUgZmxvd2VycyBhbmQgd2F0ZXIgdG8gdGhlIGNlbnRlciB2YXNlIHdoZW4gdGhlIGNyZWF0aXZlIHdvcmsgaXMgZG9uZS4KTmV2ZXIgZ2V0cyBmcmF6emxlZCwgaGUgc2FpZC4gd291bGQgbmV2ZXIgcGxheSBwb2tlciBhZ2FpbnN0IGhlciBiZWNhdXNlIEkgd291bGRuIGtub3cgd2hhdCBoZXIgaGFuZCB3b3VsZCBiZS4gRG9yYW4sIEhhcmRpbmcgYWR2YW5jZWQgdG8gdGVhbSBhbmQgaW5kaXZpZHVhbCBjaGFtcGlvbnNoaXAgcm91bmRzIGR1cmluZyBhbGwgZm91ciB5ZWFycyBhdCBLZWxsZW5iZXJnLiBTaGUgd29uIGhlciBmaXJzdCBpbmRpdmlkdWFsIExlYWd1ZSBDaGFtcGlvbnNoaXAgYXMgYSBzb3Bob21vcmUgaW4gMjAxNiBhbmQgZWFybmVkIGhlciBzZWNvbmQgY29uc2VjdXRpdmUgdGVhbSBNVlAgaG9ub3JzIHRoaXMgc3ByaW5nLgpUaGUgaWRlYSB0aGF0IE5ldyBaZWFsYW5kIGlzIGFuIGVnYWxpdGFyaWFuIHNvY2lldHkgaGFzIGFsd2F5cyBiZWVuIHZ1bG5lcmFibGUgdG8gcmVhbGl0eSAgIGFuZCBnb2luZyBieSB0aGUgY3VycmVudCBkZWJhdGUgb3ZlciB0aGUgd2lkZW5pbmcgd2VhbHRoIGdhcCwgbmV2ZXIgbW9yZSBzbyB0aGFuIHRvZGF5LiBCdXQgd2hpbGUgaW5lcXVhbGl0eSBtaWdodCBoYXZlIHdvcnNlbmVkIGluIHJlY2VudCB5ZWFycywgdGhlIHBhc3Qgd2FzIGhhcmRseSBhbiBlZ2FsaXRhcmlhbiBuaXJ2YW5hLgpQZW9wbGUgdHJ5IHRvIGJlIHRvdWdoIGluIHRoZSBiYXJiZXJzaG9wIFtidXRdLCB3aGVuIHlvdSBnbyB0byB0aGUgbmFpbCBzYWxvbiwgSSBmZWVsIGxpa2UgeW91IGp1c3QgZ290IHRvIGxldCBpdCBhbGwgb3V0LiBDaGlsbCBvdXQgYW5kIHJlbGF4IGFuZCBoYXZlIGEgZ29vZCB0aW1lLiBSZW1lbWJlcnMgb25jZSBiZWluZyBhIHlvdW5nIGJveSB3aG8gd2FzIGhlbGQgaG9zdGFnZSBpbnNpZGUgYSBzYWxvbiBkdXJpbmcgaGlzIG1vdGhlciBhcHBvaW50bWVudHMuIApJdCBhbiBpbnRlcmVzdGluZyBkZWNrLCBhbmQgZGVmaW5pdGVseSB1bmlxdWUuLiAKSSdtIG5vdCBnb2luZyB0byBsaWU7IEkndmUgbmV2ZXIgaGFkIGEgaHlwbm8gbWFzc2FnZS4gSG93ZXZlciwgSSdtIHJlY29tbWVuZGluZyBpdCB0byB5b3UgYmVjYXVzZSBpdCdzIHRoZSB1bHRpbWF0ZSB3YXkgdG8gY292ZXIgeW91ciBiYXNlcyBpbiBjYXNlIHNvbWV0aGluZyBnb2VzIHdyb25nLiAKSW4gYSB3YXkgVHJ1bXAgcmFsbHkgd2FzIFRydW1wIGdpdmluZyBSb2JlcnRvIGhpcyBvd24gbWVkaWNpbmUuIFJvYmVydG8gd291bGQgdHJhdmVsIGFjcm9zcyB0aGUgc3RhdGUgaW4gZGVlcCByZWQgYXJlYXMgaG9sZGluZyByYWxsaWVzLCBhbmQgYmUgbGlrZSAiVGhhbmsgeW91LCBMdWJib2NrLCBJIHBodWNraW5nIGxvdmUgeW91IGd1eXMhIiBOb3csIFRydW1wIHJldHVybnMgdGhlIGZhdm9yLiBlbm91Z2ggYWJvdXQgUm9iZXJ0by4gYmVzdCBwYXJ0IG9mIHRoZSBldmVuaW5nIHdhcyBvZiBjb3Vyc2UgeW91ciBsb2NhbCBqb3Vybm9zLiBiZWluZyB0aGUgc3Rvcnl0ZWxsZXIgdGhhdCBoZSBpcyBoZSBleGFnZ2VyYXRlcyB0aW1lIHRvIHRpbWUuIFdoZW4gaGUgc2FpZCB0aGUgY291bnRlciByYWxseSBoYWQgb25seSAyMDAgb3IgMzAwIHBlb3BsZSBpbiBnb2VzIHRoZSBlbnRpcmUgRWwgUGFzbyBUaW1lcyBuZXdzcm9vbSB0aGlua2luZywgIkd1eXMsIHdlIGNhbm5vdCBsZXQgaGltIGdldCBhd2F5IHdpdGggdGhpcyEgT25lIHRoaW5nIGlzIHB1c2hpbmcgYSBwcm9wb3NhbCB0byBzZWxsIG91ciBidWlsZGluZywgYW5vdGhlciB0aGluZyBpcyBseWluZyBhYm91dCBhdHRlbmRhbmNlIG51bWJlcnMhISEgV2UgYXJlIGdvbm5hIGdldCB0aGF0IHNvbm9mYWJpdGNoISEhIgpBbmQgdGhlbiBpbiBtb3N0IHBsYWNlcyB0aGV5IGdvIGFoZWFkIGFuZCBjaXJjdW1jaXNlIG5ld2Jvcm5zIGZvciBubyBnb29kIHJlYXNvbiA6ey4gClNvIG15IHNpdHVhdGlvbiBpcyBJIHNhdCBpbiBiZWZvcmUsIGJ1dCBraW5kYSBmb3Jnb3QgaG93IG15IHBvc3RlcmlvciBmZWx0LiBCdXQgYW55d2F5cy4gCklmIHRoZSBGREEgZXZlbnR1YWxseSBkb2VzIGFwcHJvdmUgUHJpbGlneSwgaXQgd2lsbCBiZSBhIHdhdGVyc2hlZCBtb21lbnQgZm9yIGEgY29uZGl0aW9uIHRoYXQgcmVjZWl2ZWQgbGl0dGxlIGF0dGVudGlvbiBmcm9tIHJlc2VhcmNoZXJzIHVudGlsIGEgZGVjYWRlIGFnby4gRG9jdG9ycyB3aWxsIGhhdmUgYSBwcm92ZW4gc29sdXRpb24gZm9yIG1lbiB3aG8ndmUgYmVlbiByb2JiZWQgb2Ygc2V4dWFsIHNhdGlzZmFjdGlvbi4gCkFuZCBieSB0aGUgZW5kIG9mIGl0IHlvdSByYXJlbHkgaGF2ZSBhbnkgY2xvc3VyZSBvZiBhbnkga2luZC4gSW4gY29tcGFyaXNvbiwgdGhlIG9sZCBzdHlsZSB3YXMgd2F5IHNpbXBsZXI6IHRoZSBzdG9yeSB3YXMgYWJvdXQgc29sdmluZyB0aGUgcHJvYmxlbSBvZiB0aGF0IGVwaXNvZGUsIGFuZCBieSB0aGUgZW5kIGl0IHdvdWxkIGhhdmUgaGFwcGVuZWQuLiAKTXkgc2hpZnQgZW5kZWQgYXQgYWJvdXQgMTEgb25lIG5pZ2h0LiAKSWYgeW91J3ZlIHdlaWdoZWQgYWxsIHRoZSBwb3NzaWJsZSBvdXRjb21lcyBjYXJlZnVsbHksIHRoZXJlJ3MgYSBnb29kIGNoYW5jZSB0aGF0IHlvdXIgY29uZmlkZW5jZSB3aWxsIGJlIHJld2FyZGVkLlsxNl0uIApJJ20gbGVhcm5lZCByZWNlbnRseSB0aGF0IHlvdSBjYW4gcmVhbGx5IGxvdmUgYSBjb250ZXN0YW50IGJ1dCB0aGV5IHN0aWxsIG1pZ2h0IG5vdCBtYWtlIGEgZ29vZCBsZWFkLiBIYW5uYWggc2VlbXMgYSBsaXR0bGUgaW5zZWN1cmUgc29tZXRpbWVzIGFuZCBzZWVtcyB0byBzdHJ1Z2dsZSB3aXRoIGNvbmZpZGVuY2UgYSBsb3Qgd2hpY2ggaW4gYW5kIG9mIGl0c2VsZiBkb2Vzbid0IG1lYW4gc2hlIHdvbid0IGJlIGdyZWF0LCBidXQgSSdtIHdvbmRlcmluZyBpZiBzaGUgd2lsbCBkbyB3ZWxsIHVuZGVyIHRoYXQga2luZCBvZiBwcmVzc3VyZT8gV2lsbCB0aGlzIGJlIGdvb2QgZm9yIGhlcj8gSSBmZWVsIGEgbGl0dGxlIGNvbmNlcm5lZCBhbmQgZG9uJ3Qgd2FudCB0aGUgZnJhbmNoaXNlIHRvIGVhdCBoZXIgYWxpdmUuIApIaXMgYWN0aW9ucyBoYXZlIG5vdCBiZWVuIHNldmVyZSBlbm91Z2ggdG8gZ3JvdXAgaGltIGluIHdpdGggdGhhdCBjcm93ZC4gClRob3NlIGFyb3VuZCBoZXIgaW4gdGhlIE5ldmFkYSBjYXNpbm8gaGFkIHJlZ3VsYXJseSB3b24gYW5kIGxvc3QgZm9ydHVuZXMsSW5jcmVkaWJseSwgZ2FtYmxlcnMgcGFpZCAkMTAsMDAwIGVhY2ggdG8gdGFrZSBwYXJ0IGluIHRoZSBXb3JsZCBTZXJpZXMuU2hpcmxleSwgZnJvbSBOb3J0aGZpZWxkLCBwYWlkICAgbGVzcyB0aGFuIHRoZSBwcmljZSBvZiBhIHN1cGVybWFya2V0IGxvYWYuV2lubmluZyB0aG9zZSBnYW1lcyBnYXZlIGhlciB0aGUgY2hhbmNlIHRvIHNwaW4gdGhlIHByaXplIHdoZWVsLiBJdCBzdG9wcGVkIG9uIGEgJDEyLDUwMCBwb2tlciBwYWNrYWdlIHRvIFZlZ2FzICAgYSBwYWNrYWdlIHRoYXQgaW5jbHVkZSBoZXIgcGxhY2UgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBtYWluIGV2ZW50LCBhIGZpdmUgbmlnaHQgc3RheSBhdCB0aGUgbHV4dXJpb3VzIFZkYXJhIEhvdGVsIHBsdXMgdHJhdmVsIG1vbmV5IGFuZCBleHBlbnNlcy5BdCBmaXJzdCwgc29uIEpvbmF0aGFuLCAzNCAgIGEga2VlbiBwb2tlciBwbGF5ZXIgICB0cmllZCB0byB0YWtlIG11bSdzIHBsYWNlLiAKTm93IGlmIHRoZSBpc3N1ZSBpcyBhbnl0aGluZyBlbHNlIChkaWRuIHRyYWRlIGluIGFuIGVsaWdpYmxlIHBob25lLCBhY3RpdmF0aW9uIGxvY2sgd2FzbiBjbGVhcmVkLCBhZGRlZCB0aGUgbGluZSBvdXRzaWRlIHRoZSBwcm9tbyBwZXJpb2QsIGV0YykgdGhlbiB0aGF0IGEgc2VwYXJhdGUgaXNzdWUuIE90aGVyd2lzZSwgeW91IGluIHRoZSByaWdodCBoZXJlLiBEb24gZG8gYSBjaGFyZ2ViYWNrIHlldCwgbGV0IHRoZSBDb3N0Y28gd2lyZWxlc3MgcmVwcyAodGVjaG5pY2FsbHkgV2lyZWxlc3MgQWR2b2NhdGVzIGlzIHRoZSBjb21wYW55IG5hbWUpIHdvcmsgd2l0aCB5b3UgdG8gcmVzb2x2ZSB0aGUgaXNzdWUgZmlyc3QuIApJJ20gd29ycmllZCBhYm91dCB0aGlzIHRvbyEgU2hlJ3MgYmVlbiB1bmRlcndoZWxtaW5nIGFuZCBpbmNvbnNpc3RlbnQuIApSZW1lbWJlciAgIGFueGlldHkgRkVFRFMgb24gaXRzZWxmLiAKT2JhbWEgc2FpZDogIklmIGxlZnQgdW5jaGVja2VkLCB0aGUgVGFsaWJhbiBpbnN1cmdlbmN5IHdpbGwgbWVhbiBhbiBldmVuIGxhcmdlciBzYWZlIGhhdmVuIGZyb20gd2hpY2ggYWwgUWFpZGEgd291bGQgcGxvdCB0byBraWxsIG1vcmUgQW1lcmljYW5zLiAKTm93LCBpdCBhbGwgYmxlbmRlZCB0b2dldGhlciBhbmQgSSBmb3VuZCB0aGF0IG91dCB0aGUgaGFyZCB3YXkuIE9uIG15IHdheSB0byBhIG1haW4gcXVlc3QgbWlzc2lvbiwgSSB3YXMgYWxlcnRlZCB0byBhIG11bHRpcGxheWVyIG9wcG9ydHVuaXR5IGFuZCB0b29rIGl0LiAKSSBkbyBoYXZlIGZyaWVuZHMgaW4gdGhlIGNocm9uaWNhbGx5IGhvbWVsZXNzIGNhdGVnb3J5LCBhbmQgdGhleSBhYnNvbHV0ZWx5IG5ldmVyIHBsYW4gb24gYmVpbmcgaW4gYSBob21lIGFnYWluLCBhbmQgaW4gMiBwYXJ0aWN1bGFyIGNhc2VzLCB0aGV5IGFyZSBzb2JlciwgYW5kIHdoaWxlIG5vdCBzb2xpZGx5IGdyb3VuZGVkIGluIHRoZSBzYW1lIHJlYWxpdHkgYXMgbWUsIHNlZW0gbGlrZSBwZXJmZWN0bHkgZnVuY3Rpb25pbmcgYWR1bHRzLi4gClJpdmVyIGlzIGEgNS4gSGUgdGhpbmtzIGZvciBhIHNlY29uZCBhbmQgbGVhZHMgb3V0IGZvciA0MDAgaW50byBhIDgwIGNoaXAgcG90LiBFdmVyeW9uZSBmb2xkcyB0byB0aGUgYnV0dG9uLCB3aG8gaXMgc3RhcmluZyB0aGUgZ3V5IGRvd24gaGFyZC4gSGUgc2F5cyAiSSBkb24gYmVsaWV2ZSB5b3UgZm9yIHNvbWUgcmVhc29uIiBhbmQgY2FsbHMgdGhlIDQwMC4KSnVzdCBhcyBtdWNoIGZ1biBhbmQgbGlmZSBjaGFuZ2luZyBmb3IgcGFyZW50cyBhbmQgZm9yIGFueW9uZSB3aG8gaGFzIGEgbWVhbmluZ2Z1bC4gClBhbmFzb25pYyBpcyBzdGVwcGluZyB1cCBhZHZlcnRpc2luZyB3aXRoIGEgMiBtaW51dGUgZGlyZWN0IHJlc3BvbnNlIFRWIGNvbW1lcmNpYWwgYWlyaW5nIGluIGxvY2FsIG1hcmtldHMsIHZpYSBNYXJzaGFsbCBKYWNjb21hIE1pdGNoZWxsLCBOZXcgWW9yay5CdXQgR3JlYXQgQW1lcmljYW4gQmFja3J1YiB3YW50cyB0byBtYWtlIGdldHRpbmcgYSBtYXNzYWdlIGFjY2Vzc2libGUgdG8gYWxsLiBBIHRoaXJkIG91dGxldCBpcyBzbGF0ZWQgdG8gb3BlbiBpbiBOZXcgWW9yaywgYW5kIHBsYW5zIGFyZSBiZWluZyBtYWRlIHRvIGZyYW5jaGlzZSB0aGUgY29uY2VwdCBuYXRpb25hbGx5IHRoaXMgc3ByaW5nLlRoZSBjb21wYW55IGlzIHRoZSBicmFpbmNoaWxkIG9mIGVudHJlcHJlbmV1ciBCaWxsIFphbmtlciwgMzksIHdobyBmb3VuZGVkIHRoZSBMZWFybmluZyBBbm5leCBlZHVjYXRpb24gYW5kIHNlbGYgaW1wcm92ZW1lbnQgY2hhaW4gaW4gdGhlIDE5ODBzLiAKWWVzLCBJIHdlbnQgdG8gdGhlIHZldCB0aGlzIG1vcm5pbmcgYnV0IHVuZm9ydHVuYXRlbHkgc2luY2UgaGUgcGFzc2VkIGxhc3QgbmlnaHQgd2hlbiB0aGV5IHdlcmUgY2xvc2VkIGl0IGhhZCBiZWVuIHRvbyBsb25nLiBJIGhhZCBwbGFjZWQgaGltIGluIHRoZSBjYXIgaG9waW5nIGl0IHdvdWxkIGJlIGNvbGQgZW5vdWdoIGJ1dCBpdCB3YXMgdW51c3VhbGx5IGhvdCBvdXQuIFZldCBzYWlkIGl0IGhhZCBiZWVuIHRvbyBsb25nIHRvIGRvIGFueSBibG9vZCB0ZXN0cy4KSSBjYW1lIGludG8gdGhpcyB0aHJlYWQgdG8gc3VnZ2VzdCB0aGlzISBJIGhhZCBhIGZyaWVuZCB3aG8gZ2F2ZSB1cCBzdWdhciBmb3IgbGVudCBhbmQgZW5kZWQgdXAganVzdCBuZXZlciBnb2luZyBiYWNrLiBTaGUgbG9zdCBhIGJ1bmNoIG9mIHdlaWdodCBhbmQgZmVsdCB3YXkgYmV0dGVyLiBUaGUgZmlyc3QgY291cGxlIHdlZWtzIHdlcmUgcm91Z2gsIGJ1dCBvbmNlIHlvdXIgYm9keSBzdG9wcyBjcmF2aW5nIGl0IHlvdSBtaWdodCBmaW5kIHlvdXJzZWxmIGFjdHVhbGx5IERJU0xJS0lORyB0aGUgaWRlYSBvZiBvdmVybHkgc3dlZXQgdHJlYXRzLgpGb3IgdGhlIFVTIHVuaXZlcnNpdGllcywgbWFueSBzY2hvb2xzIG9mZmVyIGZpbmFuY2lhbCBhc3Npc3RhbmNlICh3aXRob3V0IGJvbmRzKSwgYmFzZWQgb24gZGVtb25zdHJhdGVkIG5lZWQuIApZb3UgY291bGQgcGVyaGFwcyBhcmd1ZSB0aGF0IHRoZSBkaXN0aW5jdGlvbiBpcyBidW5rIG5vdywgYnV0IGF0IHRoZSB2ZXJ5IGxlYXN0IHRoYXQgd2hhdCBpdCB3YXMgd2hlbiB0aGUgd29yZHMgaGFkIHRoZWlyIG93biBtZWFuaW5ncy4uIApPbmNlLCBpbiB0aGUgTG9zIEFuZ2VsZXMgYnVyZWF1LCBJIGxpc3RlbmVkIHRvIGEgdmlzaXRpbmcgTmF0aW9uYWwgc3RhZmYgcmVwb3J0ZXIgdGVsbCBhIGNvbnRhY3QsIG1vcmUgb3IgbGVzczogIk15IGVkaXRvciBuZWVkcyBzb21lb25lIHRvIHNheSBzdWNoIGFuZCBzdWNoLCBjb3VsZCB5b3Ugc2F5IHRoYXQ/Ii4gClZvdXMgcG91dmV6IGRzb3JtYWlzIGFpZGVyIHVuIGFtaSBkYW5zIGxlIGJlc29pbiBlbiBsdWkgbGFpc3NhbnQsIHNhdm9pciBxdWUgbGUganVzIGRlIGNpdHJvbiBldCBsZSBjaXRyb24gbHVpIG1tZSB0ZWwgcXUnZXhwbGlxdSBjaSBkZXNzdXMsIGVzdCBibmZpcXVlIGRhbnMgbGEgcHJ2ZW50aW9uIGRlIGxhIG1hbGFkaWUuIApUaGUgQXVidXJuIFVuaXZlcnNpdHkgRm91bmRhdGlvbiBpcyBhIHNlcGFyYXRlIGFuZCBkaXN0aW5jdCBub25wcm9maXQgb3JnYW5pemF0aW9uLCBjaGFyZ2VkIGJ5IHRoZSBBdWJ1cm4gVW5pdmVyc2l0eSBwcmVzaWRlbnQgdG8gZW5zdXJlIGFsbCBkb25hdGlvbnMgbWFkZSB0byBBdWJ1cm4gVW5pdmVyc2l0eSBhbmQgQXVidXJuIFVuaXZlcnNpdHkgYXQgTW9udGdvbWVyeSBiZW5lZml0IHRoZSBpbnN0aXR1dGlvbnMgYXMgaW50ZW5kZWQsIGFuZCB0byBtYW5hZ2UgdGhlIHVuaXZlcnNpdGllcycgZW5kb3dtZW50cyBzbyBhcyB0byBwcm92aWRlIGEgcGVycGV0dWFsIHNvdXJjZSBvZiBmdW5kaW5nIGZvciB0aGUgZnV0dXJlLgpJIGtub3cgdGhpcyBpcyBhYnNvbHV0ZWx5IHBldHR5IGFmLCBidXQgaWYgeW91IGxpdmUgaW4gb25lIG9mIHRoZSBmZXcgc3RhdGVzIHRoYXQgYWxsb3cgZm9yICJhbGllbmF0aW9uIG9mIGFmZmVjdGlvbiIgbGF3c3VpdHMgSSBjb25zaWRlciB0YWtpbmcgaGVyIHRvIGNvdXJ0LiBUaGlzIGlzIHNvIGNvbXBsZXRlbHkgZWdyZWdpb3VzIHRoYXQgbXkgdmluZGljdGl2ZSBzaWRlIHdhbnRzIHRoaXMgd29tYW4gdG8gc3VmZmVyIHNvbWUga2luZCBvZiBwZXJzb25hbCBjb25zZXF1ZW5jZXMgZm9yIGhlciBhY3Rpb25zLCBhbmQgY29uc2lkZXJpbmcgImxpZmUgY29hY2hlcyIgaGF2ZSBubyBnb3Zlcm5pbmcgYm9keSB0byByZXBvcnQgaGVyIHRvLCBhIGxhd3N1aXQgbWF5IGJlIG9uZSBvZiB5b3VyIG9ubHkgcmVtZWRpZXMuIEkgdGhpbmsgeW91IGhhdmUgYSBzbGFtIGR1bmsgaGVyZS4uIApTdGlsbCBzYWx0eSBhYm91dCB0aGF0Li4gCkkgdGhpbmsgeW91J3JlIG1pc3NpbmcgdGhlIHBvaW50LiBJdCdzIHRoZSBzYW1lIHRoaW5nIGFzIHdoZW4gdGhlIGdvdmVybm1lbnQgZGVtYW5kZWQgd29tZW4gbm90IHdlYXIgc2tpcnRzIHNob3J0ZXIgdGhhbiB0aGVpciBrbmVlIGNhcHMuClRoYXQgc2FpZCwgaXQgcG9zc2libGUgc2hlIGhhcyBoZXIgd29yayBwZXJtaXQgbm93IGRlcGVuZGluZyB3aGVuIHRoZXkgZ290IG1hcnJpZWQgYW5kIGlmIHRoZXkgZmlsZWQgdGhlaXIgcGFwZXJ3b3JrLCBJIGd1ZXNzLiBTb21lIHBlb3BsZSBoYXZlIGd1ZXNzZWQgc2hlIHJlYWxseSBjYW1lIGluIG9uIGEgc3BvdXNhbCB2aXNhLCBub3QgYSBLMS4gClRoZSBoaXN0b3J5IG9mIG1vZGVybmlzbSBpcyBzdWZmdXNlZCB3aXRoIGN1bHRzIG9mIGFydGlzdGljIGVnbyBhbmQgcmFtcGFudCAib3JpZ2luYWxpdHkiICAgZXNwZWNpYWxseSBTdXJyZWFsaXNtLCB0aGUgbW92ZW1lbnQgTWFncml0dGUgd2FzIGxpbmtlZCB0by4gQnV0IGhlIG1hZGUgYSB2aXJ0dWUgb2YgYW5vbnltaXR5LCBkaXNhcHBlYXJpbmcgYmVoaW5kIHRoZSB3b3JrIGxpa2Ugb25lIG9mIHRoZSBwYXJ0bHkgdmFuaXNoaW5nLCBhbWJpZ3VvdXMgZmlndXJlcyBpbiBoaXMgb3duIHBhaW50aW5ncy4gCkNvdXBsZSBob2xlcyBpbiB0aGUgd2FsbHMuIApQZW9wbGUgc2F5ICJnYW1lcnMiIGFyZSBhIHRveGljLCB2aW9sZW50IGJ1bmNoLCBidXQgbG9vayBhdCB3aGF0IHRoZXkgbGV0IHN0dWRpb3MgZ2V0IGF3YXkgd2l0aC4gClRoaXMgaXMgaWYgd2UgYXNzdW1lIGhlIGV2ZW4gbWFrZXMgdGhlIGZpbmFscywgd2hpY2ggd291bGRuIGJlIGxpa2VseS4uIApBYm91dCB0aGUgb25seSB0aGluZyBNUHMgYWdyZWUgb24gaXMgdGhlIG5lZWQgdG8gYXZvaWQgYSBjaGFvdGljLCBubyBkZWFsIEJyZXhpdC4gClRoZW9wZW8xICA1MCBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwooVGhpcyBpcyBmb3IgT1Agd2hvIGRvZXNuJ3QgZHJpdmUpLiAKVGhlIHN0YXRlIEJpbmdvIEFjdCBhbGxvd3MgZm9yICJtaWxsaW9uYWlyZSBwYXJ0aWVzLCIgd2hpY2ggYWxsb3cgbm9ucHJvZml0IGdyb3VwcyB0byByYWlzZSBmdW5kcyBieSBob3N0aW5nIGNhc2lubyBzdHlsZSBnYW1lcyBzdWNoIGFzIFRleGFzIEhvbGQgJ2VtIGFuZCBibGFja2phY2suIEluIHRoZSBwYXN0LCB0aGVzZSBwYXJ0aWVzIHdlcmUgc21hbGxlciBldmVudHMgaGVsZCBhdCBjaHVyY2ggZmVzdGl2YWxzIGFuZCB0aGUgbGlrZS4KUXVlZW4ncyBndWFyZHMgYWNjdXNlZCBvZiBydW5uaW5nIHBvcm4gcG9rZXIgcmluZ3MKUG9rZXIgbm90IGEgZ2FtZSBvZiBza2lsbAooYWJvdXQgMiBtaW51dGVzKSBUaGVuIEkgbW92ZSBvbiB0byB0aGUgZm9yZWhlYWQsIHVzaW5nIHRoZSBzYW1lIHR5cGUgb2Ygb3BlbiBwYWxtIG1hc3NhZ2UgdG8gcm9jayB5b3VyIGZvcmVoZWFkIGJhY2sgYW5kIGZvcnRoIHNsb3dseS4gCkFuZCB0aGVuIGhlIHNhaWQgc29tZXRoaW5nIEknZCByZW1lbWJlciBmb3IgdGhlIHJlc3Qgb2YgbXkgbGlmZS4gCkVkZW4gQ2x1YiBpcyB2ZXJ5IGNlbnRyYWxseSBsb2NhdGVkIGFuZCBlYXN5IHRvIGdldCB0by4gSXQgaXMgd2l0aGluIG1vbWVudHMgb2YgTmFuYSBCVFMgc3RhdGlvbi4gV2hlbiB5b3UgYXJyaXZlIGF0IE5hbmEsIHRha2UgdGhlIGV4aXQgZm9yIFN1a2h1bXZpdCBTb2kgNy8xICh0aGUgb25lIHdpdGggYSBTdWJ3YXkgc2FuZHdpY2ggYnJhbmNoIG9uIHRoZSBsZWZ0IGNvcm5lcikuIApTb21ldGhpbmcgdGhhdCB0cnVseSBkZXBpY3RzIHRoZSBncmVhdG5lc3Mgb2YgQW1lcmljYSBUZWFtOiBoYXZlIHNvbWV0aGluZyBjYWxsZWQgdGhlIG9mIEFsbCBCb21icyBOb3RoaW5nIGxpa2UgdGhpcyBoYXMgZXZlciBiZWVuIHVzZWQgYmVmb3JlLiAKSSBvdXRzcG9rZW4gZW5vdWdoIGFuZCBJIGxpdGVyYWxseSBsaXZpbmcgdGhpcyBzY2VuYXJpbywgc28gSSB2ZXJ5IGxldmVsIGhlYWRlZGx5IGV4cGxhaW5lZCB3aHkgaXQgYWxsIGJ1bGxzaGl0LiAKVGhlIGRlYWxlciBtdXN0IGJlIGRlYWx0IGEgUXVlZW4gSGlnaCB0byBwbGF5LiBUaGUgcGxheWVyIGNhbiBwbGFjZSBhbiBBbnRlIGJldCBhcyB3ZWxsIGFzIG9wdGlvbmFsIFBhaXIgUGx1cyBhbmQgU2l4IENhcmQgQm9udXMgYmV0cyB0aGF0IHByb3ZpZGUgdGhlbSB3aXRoIGEgY2hhbmNlIHRvIHdpbiB1cCB0byAxMDA6MSBvciAxLDAwMDoxIHJlc3BlY3RpdmVseSByZWdhcmRsZXNzIG9mIHRoZSBkZWFsZXIncyBoYW5kLi4gCk5LIG5lZWRzIHRvIHNob3cgdGhlIHdvcmxkIGFuIGFjdHVhbCBjb21taXRtZW50IHRvIGZvcmVpZ24gaW52ZXN0bWVudCBvdGhlciB0aGFuIHRoZSBoYW5kIHdhdmluZyBCUyBzcGVjaWFsIGVjb25vbWljIHpvbmVzLiBUaGV5IG5lZWQgdG8gYWxsb3cgZm9yZWlnbiBidXNpbmVzc2VzIHRvIGJ1aWxkIGEgdHJhY2sgcmVjb3JkIG9mIG9iamVjdGl2ZSBzdWNjZXNzLgpUaGF0IGlzIE5PVCBob3cgImV4cHJvcHJpYXRbaW5nXSB0aGUgbWVhbnMgb2YgcHJvZHVjdGlvbiBhbmQgcHV0W3RpbmddaW4gdGhlIGhhbmRzIG9mIHRoZSB3b3JrZXIgY2xhc3MiIHdvcmsuIEZpcnN0bHkgYmVjYXVzZSB0YXhlcyB0YWtlIG1vbmV5ICh3aGljaCBhcmUgbm90IG9yZGluYXJpbHkgY29uc2lkZXJlZCBhIG1lYW5zIG9mIHByb2R1Y3Rpb24pIGZyb20gZXZlcnlvbmUsIG5vdCBqdXN0IHRoZSBib3VyZ2VvaXNpZS4gCktvbmRpY3RvcmlhIGlzIHRoZSByYWdlIHRocm91Z2hvdXQgYWxsIG9mIEVzY2FuYWJhLiAKUG9rZXIgaXMgYWx3YXlzIGEgZnVuIGFuZCBlbmpveWFibGUgZ2FtZSwgaXQgdHJ1ZSwgYnV0IGlmIGFuZCB3aGVuIHlvdSBwbGF5IHRoZSBzYW1lIHRoaW5nIG92ZXIgYW5kIG92ZXIsIGl0IHRlbmRzIHRvIGJlY29tZSBhIGJpdCBib3JpbmcsIGRvZXNuIGl0PyBUaGF0IHdoeSB3aGVuIGNob29zaW5nIGFuIG9ubGluZSBwb2tlciBzaXRlIHRvIHBsYXkgYXQsIHlvdSBoYXZlIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSB3ZWJzaXRlIG9mZmVycyBhIHdpZGUgdmFyaWV0eSBvZiBnYW1lcy4gCkJ1dCB5b3UgY2FuIGRlbnkgdGhlIGltcGFjdCBleHRyYSBwb2ludHMgd291bGQgaGF2ZSBvbiBwbGF5ZXJzIGRyaXZlIG5lYXIgdGhlIGVuZCBvZiByZWd1bGF0aW9uLiAKRWFnZXJfUXVlc3Rpb24gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnbwpIZSB3b24gOSBvdXQgb2YgMTAuIExpa2UgaGFsZiBvZiB0aG9zZSBJIGhhZCBtdWx0aXBsZSBmYWNlIGNhcmRzIGFuZCBldmVyeSB0aW1lIGhlIHdvdWxkIG1hdGNoIGl0IG9yIGhhdmUgYmV0dGVyLiAKV2hpbGUgZG93bnRvd24gTWlhbWkgaGFzIHNldmVyYWwgZXhjZXB0aW9uYWwgaG90ZWxzIGxpa2UgdGhlIE1hbmRhcmluIE9yaWVudGFsIGFuZCB0aGUgRm91ciBTZWFzb25zIE1pYW1pLCB0aGUgbW9zdCBjb3ZldGVkIGFyZWEgdG8gc3RheSBmb3IgbGVpc3VyZSB0cmF2ZWxlcnMgaXMgTWlhbWkgQmVhY2gsIHdoZXJlIHZpc2l0b3JzIGNhbiBjaG9vc2UgdG8gc3RheSBhdCBhbnkgb2YgdGhlIGhpc3RvcmljIEFydCBEZWNvIGhvdGVscyBhbG9uZyBPY2VhbiBEcml2ZSBhbmQgb25lIG9mIHRoZSB3b3JsZCBtb3N0IGZhbW91cyBiZWFjaGVzLiAKRnJ1aXQgZCBhcmJyZSBlbmRtaXF1ZSBkZSBsIGRlcyBNb2x1cXVlcyBlbiBJbmRvbnNpZSwgbGUgY2xvdSBkZSBnaXJvZmxlIGRidXRlIHNhIGNhcnJpcmUgZW4gbWRlY2luZSBheXVydmRpcXVlLCBpbCB5IGEgcGx1cyBkZSAzIDUwMCBhbnMuIApJIGxpdmUgYWxvbmUsIHNvIHN3ZWV0LiBJIGxldCB0aGUgaG9uayBsb29zZSBhbmQgaXRzIHdyb25nLiAKS2VsbHkgZGVuaWVzIHRoYXQgaGUgcHJleWVkIG9uIHVuZGVyYWdlIGdpcmxzVGhlIHJpc2UgYW5kIGZhbGwgb2YgUi4gS2VsbHlTb21lIHN0YXRlcyBtYWtpbmcgbW92ZXMgdG8gb3B0IG91dCBvZiBkYXlsaWdodCBzYXZpbmcgdGltZURlbW9jcmF0aWMgcHJlc2lkZW50aWFsIGNhbmRpZGF0ZSBBbmRyZXcgWWFuZyBvbiAiVGhlIFRha2VvdXQiIkknbSBub3QgYSBjb250cm9sbGluZyBwZXJzb24iOiBSLiAKSSBzYXkgMzAlIG9mIHRoZXJhcGlzdHMgYXJlIG1hbGUgc28gaXQgZGVmaW5pdGVseSBhIG1pbm9yaXR5IGJ1dCBpdCBub3Qgc3RyYW5nZSB0byBzZWUvaGF2ZS9iZSBhIG1hbGUgdGhlcmFwaXN0LiBTb21lIG9mIHRoZSBiZXN0IExNVHMgSSBtZXQgaGF2ZSBiZWVuIGR1ZGVzLiBJdCByaWRpY3Vsb3VzIHRvIHRoaW5rIHBlb3BsZSB3b3VsZCBsb29rIGRvd24gb24geW91IGZvciBpdC4KTG9vayB0aHJvdWdoIHNvbWUgb2YgdGhlaXIgcmV2aWV3cy4gVGhpbmdzIG1heSBoYXZlIGNoYW5nZWQgbm93LCBidXQgdGhleSB3ZXJlIGNoYXJnZWQgd2l0aCBhbmltYWwgbmVnbGVjdCBhIGZldyB5ZWFycyBiYWNrLiBBcyBmb3IgbXkgZG9nLCBteSBmcmllbmQgd2FzIGZvc3RlcmluZyBoaW0gYmVmb3JlIHdlIGV2ZW50dWFsbHkgYWRvcHRlZCBoaW0uIENhcm9sIGhhcyBiZWVuIGZvc3RlcmluZyBoaW0gc2V2ZXJhbCB3ZWVrcywgYnV0IHdhcyBzY2hlZHVsZWQgdG8gZ28gb24gdmFjYXRpb24gYW5kIGNvdWxkbid0IGdldCBhaG9sZCBvZiBhbnlvbmUgaW4gdGhlIG9mZmljZSBhcyB0byB3aGF0IHNoZSB3YXMgc3VwcG9zZWQgdG8gZG8gd2l0aCB0aGlzIGRvZyBkdXJpbmcgaGVyIHZhY2F0aW9uLiBObyBvdGhlciBmb3N0ZXIgaG9tZSBoYWQgYmVlbiBzZXQgdXAgZm9yIGhpbS4gVGhlIG5pZ2h0IGJlZm9yZSBzaGUgd2FzIHN1cHBvc2VkIHRvIGxlYXZlLCBzaGUgY2FsbGVkIG1lLCBkZXNwZXJhdGUgdG8gZmluZCBzb21lb25lIHJlc3BvbnNpYmxlIHRvIHRha2UgdGhlIGRvZy4gQ2Fyb2wgbGVmdCBteSBuYW1lIGFuZCBudW1iZXIgb24gdGhlIHZvaWNlbWFpbCBhdCB0aGUgRnVyZXZlciBIb21lcyBvZmZpY2UgdGVsbGluZyB0aGVtIHNoZSBoYWQgbm8gb3RoZXIgY2hvaWNlIGJlY2F1c2Ugb2YgdGhlaXIgbGFjayBvZiBjb250YWN0IGFuZCBkaXJlY3Rpb24uClRoZXJlIHdlcmUgNSBSQ1RzIChuPTQsNjUwKSBvZiBlcGlzaW90b215IGluY2x1ZGVkOyAxIFJDVCAobj0zMzMpIG9mIHNwb250YW5lb3VzIGRlbGl2ZXJ5IHZlcnN1cyBmb3JjZXBzIDsgNyBSQ1RzIChuPTIsNTgyKSBvZiBmb3JjZXBzIHZlcnN1cyB2YWN1dW0gZXh0cmFjdGlvbjsgMyBSQ1RzIChuPTEsNTQ3KSBvZiBwZXJpbmVhbCBtYXNzYWdlIDsgOSBSQ1RzIG9mIGJpcnRoaW5nIHBvc2l0aW9uLCA3IHdpdGggc3VwcG9ydGluZyBmdXJuaXR1cmUgKG49Miw5NTgpIGFuZCAyIHdpdGhvdXQgKG4gbm90IHJlcG9ydGVkKTsgMSBSQ1QgKG4gbm90IHJlcG9ydGVkKSBvZiB3aGlybHBvb2wgYmF0aHM7IDEgUkNUIChuPTUsNDcxKSBvZiBoZWFkIGZsZXhpb247IGFuZCAyIFJDVHMgKG49MzgyKSBvZiBwdXNoaW5nIGluc3RydWN0aW9ucy4KRm9yIGV4YW1wbGUsIGEgcmV2aWV3IG9mIHN0dWRpZXMgdGhhdCB0ZXN0ZWQgdmFyaW91cyBwcm90ZWluIGRvc2VzIGluIGNvbmp1bmN0aW9uIHdpdGggcmVzaXN0YW5jZSB0cmFpbmluZyBvbiBtdXNjbGUgZGV2ZWxvcG1lbnQgZm91bmQgdGhhdCBhIG1pbmltYWwgZG9zZSBvZiAyLjM4IGcva2cvZGF5IG9mIHByb3RlaW4gaXMgdGhlIGFtb3VudCB0aGF0IHJlbGlhYmx5IHByb2R1Y2VkIHRoZSBtb3N0IG11c2NsZSBkZXZlbG9wbWVudC4gCkluIGJldHdlZW4gdGltZXMgd2UgdXNlIGZvciBzdHVkeWluZyBsaW5lcyBhbmQgZ2V0dGluZyByZWFkeSBmb3IgdGhlIG5leHQgdGFrZS5UaGVuIGl0J3MgZHJpbmtzIGFmdGVyIHdvcms/Tm9vbywgdXN1YWxseSBhZnRlciBhIGRheSBvZiBmaWxtaW5nIHdlIGFyZSBhbGwgcHJldHR5IGV4aGF1c3RlZCBzbyB3ZSBoZWFkIGhvbWUgdG8gcmVzdCwgc3R1ZHksIGVhdCwgYW5kIGNyYXNoLiAKU2hhdW55aXAgIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KNCkgVG8gZ2V0IGFuIGlkZWEgb24gc3BlZWR3b3JrIGJ1eSB0aGUgYm9vayBBZHZhbmNlZCBNYXJhdGhvbmluZyBieSBQZXRlIFBmaXR6aW5nZXIuIERvbiBsZXQgdGhlIHRpdGxlIHNjYXJlIHlvdS4gV2hpbGUgbG90cyBvZiB0aGUgYm9vayBpcyBnZWFyZWQgdG93YXJkcyB0aGUgbW9yZSBleHBlcmllbmNlZCBtYXJhdGhvbmVyLCB0aGVyZSBpcyBsb3RzIG9mIGluZm8gZm9yIHRoZSBmaXJzdCB0aW1lci4KTWFpcyBub3VzIG4nYWxsb25zIHBhcyB2b3VzIGxhaXNzZXIgc3VyIHZvdHJlIGZhaW0sIGV0IHNhbnMgdG91dCBkdm9pbGVyIGRhbnMgbGUgZHRhaWwsIG5vdXMgdm91cyBwcnNlbnRvbnMgbGVzIGxtZW50cyBwcmluY2lwYXV4IGRlIGNldHRlIGRlcm5pcmUgcGhhc2UgZHUgcHJvamV0LiAKSSBhZGRlZCBteSBpbnB1dCB0byB0aGUgbWVldGluZyBhbmQgd2hlbiBpdCBpbmV2aXRhYmx5IHR1cm5lZCB2aW9sZW50IEkgd2FzIHRlbGVwb3J0ZWQgdG8gVmVjbmEgcGxhbmUgdG8gd2FpdCB1bnRpbCB0aGUgZHVzdCBjbGVhcmVkLiAKWW91IGtub3cgaG93IHRoZXkga2VlcCB0cnlpbmcgdG8gdGllIHRlcnJpYmxlIGNyaW1lcyBvciB0cmVuZHMgdG8gdGhlIEludGVybmV0PyBTb21lIHRlZW5hZ2VyIGRpZXMgZHVlIHRvICJjeWJlciBidWxseWluZyIgb3IgZ2V0cyBqYWlsZWQgZHVlIHRvICJzZXh0aW5nIiBvciBzb21lYm9keSBsb3NlcyBldmVyeXRoaW5nIG9uIGEgQ3JhaWdzbGlzdCBzY2FtLCBhbmQgdGhlIHN0b3J5IHNvbWVob3cgaW1wbGllcyBpdCdzIHRoZSB0ZWNobm9sb2d5IHRoYXQncyBtYWtpbmcgcGVvcGxlIGV2aWw/ClJpY2hhcmQgc3RvcHBlZCB0aGUgYXNzYXVsdCB3aGVuIGhpcyBzdGVwZGF1Z2h0ZXIgaGl0IGEgcGFuaWMgYnV0dG9uIG9uIHRoZSBob21lIGFsYXJtIHN5c3RlbS4gCkluIHRoZSBmdXR1cmUsIGEgbG90IG9mIGNvbWJhdCBhbmQgYmF0dGxlcyB3aWxsIGJlIGRvbmUgaW4gdmlydHVhbCByZWFsaXR5LiBBcyB0ZWNobm9sb2d5IGFkdmFuY2VzLCBzbyB3aWxsIGJlIHRoZSBnYW1pbmcgZXhwZXJpZW5jZS4gVGhpcyB3aWxsIG9wZW4gdXAgYSBkb29yIHRvIG5ldyBvcHBvcnR1bml0aWVzLi4gCkZpcmUgVG9uZ3MKMjAgVmlld3MuIApTdXN0YXIgc2FpZCBoZSBsZWZ0IEZvcmQgYnkgbXV0dWFsIGFncmVlbWVudCB3aXRoIHRoZSBhdXRvbWFrZXIgaW4gMTk5OS4gClNhbmQgSG9sbG93IFN0YXRlIFBhcmsgaXMgdGhlIHByZW1pZXIgc3BvdCBmb3IgZXZlbnRzLCBTdHVkZWJha2Vyc2FpZC4gCkFDQ1VFSUwgZXQgUExBTiBEVSBTSVRFIDEuIEluc3RpdHV0IGRlIER2ZWxvcHBlbWVudCBlbiBDcmF0aXZpdCBldCBlbiBQIDEuIApKZWJ1c01jQXpuIHUKSGUgd2VudCB0byBTdC4gCkEgaGVhZGxpbmUgaGFzIG9uZSBnb2FsLCBhbmQgb25lIGdvYWwgb25seSBhbmQgdGhhdCdzIHRvIGVuY291cmFnZSBwZW9wbGUgdG8gY2xpY2sgYW5kIHJlYWQuIApOQUguIEl0IHNvdW5kcyBsaWtlIHlvdXIgR0YgbWF5IGJlIGZlZWxpbmcgYSBsaXR0bGUgaW5zZWN1cmUgYWJvdXQgdGhlIExEUi4gCkFsdGhvdWdoIHR3byB0aGlyZHMgb2YgVmEgR2EgeW91bmcgYXJlIG1hbGUsIGZldyBtYWxlcyBzdXJ2aXZlIHRvIGFkdWx0aG9vZC4gVGhlIFZhIEdhIG5lZWQgbWVhdCBhcyB3ZWxsIGFzIHZlZ2V0YXRpb24gdG8gc3Vydml2ZSBhbmQgaGF2ZSByZXNvcnRlZCB0byBjYW5uaWJhbGlzbTsgaW5qdXJlZCBhbmQgZGlzb2JlZGllbnQgbWFsZXMgYXJlIGVhdGVuLiBGZW1hbGVzIGFyZSBuZXZlciBlYXRlbiBhcyBtYWxlcyBnYWluIHNvY2lhbCBzdGF0dXMgYmFzZWQgb24gdGhlIHNpemUgb2YgdGhlaXIgJ2hlcmQnIG9mIGZlbWFsZXMuLiAKSXQncyBjYWxsZWQgdGhlIHVuZHlpbmcgbGFuZHMuIFRoZXJlIG1vc3QgbGlrZWx5IHRyeWluZyB0byBzYXkgdGhhdCB0aGV5IHdhbnQgdG8gZ2V0IG91dCBvZiB0aGUgd29ybGQgYW5kIGdvIHRvIGhlYXZlbi4gCkNvbnNpZGVyaW5nIHRoZSBpbnRyb3NwZWN0aXZlIG5hdHVyZSBvZiBBbnNhcmkncyBjb21lZHksIGl0IHNlZW1zIGNlcnRhaW4gdGhhdCBoZSB3aWxsIGNvbnRpbnVlIHRvIHJlZmxlY3Qgb24gdGhlIGV2ZW50IGluIGhpcyB3b3JrLiAKQXNoa2VuYXppIGlzIGFuIGV4cGVyaWVuY2VkIGdhbWluZyBpbmR1c3RyeSBleGVjdXRpdmUgYW5kIGpvaW5zIFJhdGlvbmFsIEdyb3VwIGZyb20gUGxheXRlY2gsIGEgZ2xvYmFsIGdhbWluZyBzb2Z0d2FyZSBjb21wYW55LCB3aGVyZSBoZSBzZXJ2ZWQgYXMgQ09PIGFuZCBib2FyZCBtZW1iZXIuIEFzaGtlbmF6aSBzcGVudCBzZXZlbiB5ZWFycyB3aXRoIFBsYXl0ZWNoLCBkaXJlY3RpbmcgdGhlIGRheSB0byBkYXkgb3BlcmF0aW9uYWwgYW5kIGJ1c2luZXNzIGFjdGl2aXRpZXMgYXMgdGhlIGNvbXBhbnkgZ3JldyByYXBpZGx5IGZyb20gMjAwIHRvIG1vcmUgdGhhbiAyLDQwMCBlbXBsb3llZXMuLiAKWW91IGdldCBhIGZyZWUgdGltZSBzaGlmdCBhdCB0aGUgYmVnaW5uaW5nIG9mIGVhY2ggY291cnNlIGFuZCBnZXQgYW4gZXh0cmEgZXZlcnkgdGltZSB5b3UgZ2V0IDMwIGVnZ3MgZmlyc3QgdGltZSwgNjAgMm5kLCA5MCAzcmQgZXRjLiBIb3BlIHRoaXMgaGVscHMuIApJIGdldCB3aGVyZSB5b3UgY29taW5nIGZyb20sIGFuZCBpdCBkZWJhdGFibGUgd2hldGhlciBvciBub3QgaXQgc2hvdWxkIGhhdmUgYmVlbiBhIHBhaWQgZXhwYW5zaW9uLiBJIHBlcnNvbmFsbHkgdGhpbmsgdGhlcmUgd2FzIGVub3VnaCBjb250ZW50IGluIHRoZSBiYXNlIGdhbWUgYW5kIGF0IGEgaGlnaCBlbm91Z2ggcG9saXNoIGxldmVsIHRoYXQgaXQgd2FzIHdvcnRoIGZ1bGwgcHJpY2UgYXQgbGF1bmNoLiAKMTYwMSBVbml2ZXJzaXR5IEF2ZS4sIFN0LiAKRGlkIHlvdSBnZXQgYW55IGdvb2QgYWR2aWNlIG9uIHdoYXQgdG8gZG8gd2l0aCB0aGUgd2lubmluZ3M/IERpZCB5b3UgZ2V0IGFueSBiYWQgYWR2aWNlPyBOb3QgcmVhbGx5LCBJIHRoaW5rIGV2ZXJ5b25lIHdhcyBqdXN0IHNvIGhhcHB5IHNvbWVvbmUgZnJvbSB0aGUgYXJlYSBoYWQgYSBzdG9yeSBsaWtlIHRoYXQuIApHcmVuc292ZXJnYW5nIGluIGRlIGJ1dXJ0IHZhbiBQYXNzYXUgZW4gZGFhcm5hIHJlZGVuIHdlIGhlZWwgZWluZCBkb29yIE9vc3RlbnJpamsuIE5pZXQgaGV0IE9vc3RlbnJpamsgdWl0IGRlIGJvZWtqZXMgbWV0IGhvZ2UgYmVyZ2VuLCBtYWFyIHZlZWwgdmxha2tlcjogbGFnZSBoZXV2ZWxzIGVuIHZlZWwgYm9zLiBXZSBrb2NodGVuIGVlbiBpanNqZSBiaWogZGUgTWNEb25hbGRzIGVuIHZvbmRlbiBlZW4gcHJhY2h0aWcgVEIgaG90ZWwgaW4gZGUgYnV1cnQgdmFuIE1lbGsuIApIdWF3ZWkncyBvd25lcnNoaXAgd2FzIG5vdCBhIGh1cmRsZSwgc2FpZCBNciBZYW5nLiBXaGlsZSBtYW55IGluZmx1ZW50aWFsIENvbW11bmlzdCBwYXJ0eSBmYW1pbGllcyBhbmQgcHJpdmF0ZSBlcXVpdHkgZmlybXMgaGFkIG9mZmVyZWQgSHVhd2VpIGludmVzdG1lbnQsIE1yIFJlbiBoYWQgZGVjbGluZWQgdGhlbSBpbiBmYXZvdXIgb2YgYmFuayBsb2FucywgaGUgc2FpZC4KTWVkaWNhbCBtYWxwcmFjdGljZSBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoaXMgc3VicmVkZGl0LiBJdCBpcyB2ZXJ5IGZhY3Qgc3BlY2lmaWMuIApJbiAxOTk2IHRoZSB3aW5uZXIgb2YgdGhhdCBldmVudCB3YXMgQ2FuYWRhJ3MgRG9ub3ZhbiBCYWlsZXksIHdobyBub3Qgb25seSB3b24gYnV0IGVyYXNlZCBhbGwgZG91YnRzIGJ5IGJyZWFraW5nIHRoZSB3b3JsZCByZWNvcmQgaW4gdGhlIGZpbmFscyB3aXRoIDkuODQuIFdlbGwsIG5vdCBhbGwgZG91YnRzLgpUeWxkZXNsZXkuIFRoZSBjdXJyZW5jeSBoYWQgbm90IGJlZW4gZGViYXNlZCB5ZXQuLiAKVGhlIHdvcmtvdXQsIHlvdSBjYW4gaGF2ZSBmdW4gd2l0aCBpdCwgbGlrZSB0aGUgb3RoZXIgdXNlciBzYWlkLiAKTm8gdHdvIGNyZWF0aW9ucyBhcmUgYWxpa2U6IHRoZXkgbWlnaHQgaW5jb3Jwb3JhdGUgYSBmYW1pbHkgY3Jlc3QsIHRva2VucyBvZiBtZW1vcmFiaWxpYSBvciBoYXZldmVuZWVycyBhbmQgbGluaW5ncyB0byBtYXRjaCBhIHlhY2h0LCBjYXIgb3IgaW50ZXJpb3IgZGVzaWduIHNjaGVtZS4gVXNpbmcgd29vZHMgcmFuZ2luZyBmcm9tIGVib255IHRvIGJ1cnIgd2FsbnV0LCBlYWNoIGlzIG1hZGUgYnkgYSB0ZWFtIG9mIGFydGlzYW5zIGRyYXduIHRvZ2V0aGVyIGZyb21hY3Jvc3MgdGhlIEJyaXRpc2ggSXNsZXMuIFRoZSBhbGwgaW1wb3J0YW50IGNoaXBzIGFyZSBubyBleGNlcHRpb24gKHBlcmhhcHMgbW90aGVyIG9mIHBlYXJsLCBuZXN0bGVkIGluIHNpbGsgbGluaW5nPykgYW5kIHRoZXNlIGFyZSBzYWZlbHkgc2VjdXJlZCB3aXRoIGtleXMgY3V0IHRvIGZpdGEgdmVyc2lvbiBvZiB0aGUgMTc4NCBCcmFtYWggbG9jayB0aGF0IHdhcyBzcGVjaWFsbHkgbW9kaWZpZWQgZm9yIExhbmNlbG90IExhbmNhc3RlciBXaGl0ZS4KQW5kIHdoaWxlIHRoZSAidHVybm92ZXIiIGZpZ3VyZXMgcmVmZXIgdG8gdGhlIHRvdGFsIHZhbHVlIG9mIGJldHMgbWFkZSBvbiBnYW1pbmcgbWFjaGluZXMgIGluY2x1ZGluZyBiZXRzIHRoYXQgYXJlIG1hZGUgdXNpbmcgY3JlZGl0cyB3b24gZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgcGxheSAgdGhlIGxvc3NlcyBhcmUgYWxzbyBzdGFnZ2VyaW5nLiAKRnVydGhlcm1vcmUsIHVzaW5nIHRoZSByZWR1bmRhbnQgZW5nbGlzaCBuYW1lIGhhcyB0aGUgYmVuZWZpdCBvZiBiZWluZyBhIHVzZWZ1bCBuYW1lIGZvciBib3RoIHRoZSBpbmZvcm1lZCBhbmQgdW5pbmZvcm1lZCwgd2hpbGUgdXNpbmcgdGhlIGtvcmVhbiB2ZXJzaW9uIHdpdGhvdXQgYSBzdWZmaXggb25seSBzZXJ2ZXMgaXRzIHB1cnBvc2UgZm9yIHRoZSBpbmZvcm1lZC4gVGh1cywgdGhlIHJlZHVuZGFudCB2ZXJzaW9uIGlzIHVuZGVuaWFibHkgbW9yZSBwcmFjdGljYWwgYXMgaXQgd29ya3MgZm9yIGJvdGggZ3JvdXBzLi4gCkEgcmljaCBhZGRpdGlvbj8KSXQgcHJldHR5IG11Y2ggd2hhdCB5b3UgZXhwZWN0IGluIGhpbmRzaWdodC4gSXQgd2FzIGludGVyZXN0aW5nIHRvIGhlYXIgaGlzIHBlcnNwZWN0aXZlIGFuZCB0aGF0IE1pa2Ugd2lsbCBubyBsb25nZXIgYmUgaW52aXRlZCB0byBwbGF5IG9uIHRoZSBzaG93LgpFcyBnaWJ0IGluIGRlbSBDYXNpbm8gZWluICAgbWl0IDguMDAwIGdhcmFudGllcnRlbSBQcmVpc3Bvb2wsIDI1IEJ1eSBJbiB1bmQgMjAgUmVidXlzLiBad2FyIGtubmVuICAgZ2FueiBpbSBTaW5uZSBlaW5lciB1bWdla2VocnRlbiBHbGVpY2hiZXJlY2h0aWd1bmciIHNvd29obCBNbm5lciB3aWUgRnJhdWVuIGFuIGRlbSAgdGVpbG5laG1lbi4gRGllc2UgUmVnZWx1bmcgaGF0IHp1IGVpbmVtIGdyb2VtIFp1bGF1ZiB2b24gRGFtZW4gaW0gIENhc2lubyBnZWZocnQuIApIZXJvaW4gaXMgbWV0YWJvbG9zZWQgaW50byBtb3JwaGluZSwgc28gdGVjaG5pY2FsbHkgd2UgYXJlIGp1c3QgdXNpbmcgYSBtb3JlIHB1cmUgZm9ybS4gVGhlcmUgaXMgbm90aGluZyBpbmhlcmVudGx5IEJBRCBvciBhZGRpY3RpdmUgd2l0aCBoZXJvaW4gdGhhdCBtYWtlcyBpdCBiZXR0ZXIgdGhhbiBhbnkgb3RoZXIgb3BpYXRlLiBBdCB0aGUgZW5kIG9mIHRoZSBkYXkgaXRzIHRvdGFsbHkgaW5hY3RpdmUgdW50aWwgbWV0YWJvbGlzZWQgdG8gbW9ycGhpbmUsIGFuZCB0aGF0cyBraW5kIG9mIHRoZSBpc3N1ZS4gV2UgYXJlIHRyeWluZyB0byBtb3ZlIGF3YXkgZnJvbSBwcm9kcnVncyB0aGF0IHJlcXVpcmUgbWV0YWJvbGlzbSBiZWNhdXNlIHdlIGFyZSBmaW5kaW5nIHBlb3BsZSByYW5nZSBmcm9tIFBNKHBvb3IgbWV0YWJvbGlzZXJzIHdpdGggcmVkdWNlZCBlZmZlY3QpIHRvIFVSTSh1bHRyYSByYXBpZCBtZXRhYm9saXNlcnMgd2hvIGNhbiBlYXNpbHkgb3ZlcmRvc2Ugb24gdGhlcmFwZXV0aWMgZG9zZXMpLiBUaGF0cyB3aHkgd2UgYXJlIHNlZWluZyBtb3JlIHN5bnRoZXRpYyBub24gcHJvZHJ1Z3MgbGlrZSB0YXBlbnRhZG9sLiBBbGwgdHJpY3ljbGljIGFuZCB0byBhIGxlc3NlciBleHRlbnQgdGV0cmFjeWNsaWMgYW50aWRlcHJlc3NhbnRzIChzb21lIG9mIHRoZSBtb3N0IHdpZGVseSBwcmVzcmliZWQgbWVkcykgaW5oaWJpdCBjeXAyZDYgb3IgY3lwM2E0LCB0aGUgbWFpbiBlbnp5bWVzIHVzZWQgZm9yIGRlbWV0aHlsYXRpb24vbWV0YWJvbGlzbSBvZiBhbGwgdGhlIHByb2RydWdzIHdlIHN0aWxsIHVzZSB0b2RheS4KSWYgc28sIHNob3VsZCBJIG1vdmUgb3V0IG9yIHN0YXkgYW5kIGxpdmUgYXMgcm9vbWF0ZXMgYmVjYXVzZSBJIGNhbid0IGFmZm9yZCB0byBsaXZlIG9uIG15IG93biBhbmQgSSBoYXZlIDIgbW9yZSBzZW1lc3RlcnMgbGVmdCBmb3IgbXkgY29sbGVnZSBkZWdyZWUuIE15IHNpc3RlciByZWNlbnRseSBzZXBlcmF0ZWQgZnJvbSBoZXIgaHVzYmFuZCBzbyBub3cgc2hlIGlzIHN0YXlpbmcgYXQgbXkgbW9tJ3MgcGxhY2Ugc28gSSBkb24ndCB3YW50IHRvIG1vdmUgYmFjayB0aGVyZSBpZiBJIGNhbiBhdm9pZCBpdC4gCkluIHJlYWxpdHk/IE9uZSBvZiB0aGUgc2Nhcmllc3QgcGxhY2VzIEkgZXZlciBzdGF5ZWQgICBhbmQgeW91IGtub3cgdGhhdCBtZWFucyBpdCBTQ0FSWSEgTm8gdG9pbGV0IHBhcGVyLCBubyB0b3dlbHMsIG5vIHNob3dlciBjdXJ0YWluLiBXZSBuZXZlciB0b29rIG91ciBzaG9lcyBvZmYuIApUaGF0J3Mgd2hlcmUgaXQgYWxsIHN0YXJ0ZWQuIiBPcGVuZWQgYnkgYSBncm91cCBvZiAyNyBzZXJ2aWNlbWVuIGluIDE5NDcsIHRoZSBSU0wgQ2x1YiBhcyB3ZSByZW1lbWJlciBpdCBmZWF0dXJlZDogdGhlIEpvaG4gT3hsZXkgUm9vbTsgTGUgUGV0aXQgRXNjYXJnb3Q7IGRvd25zdGFpcnMgYmlzdHJvOyBTcG9ydHMgQmFyLCBUaGUgUGF2aWxsaW9uIGNvY2t0YWlsIGJhcjsgRG9uIFN0ZWVsZSBCYXI7IGEgZ2FtaW5nIHJvb207IE5pc3NlbiBIdXQgZnVuY3Rpb24gcm9vbTsgRWxlY3RyaWMgQmFsbHJvb20gYW5kOyBhIGd5bSwgc3BhIGFuZCBzcXVhc2ggY291cnQgYXJlYSBrbm93biBhcyBUaGUgTG9mdC4gCllvdSBjYW4gZmluZCB0aGUgUENUIHdhdGVyIHJlcG9ydCBoZXJlIHdoaWNoIGFsc28gaGFzIHRoZSBudW1iZXJzIHRvIHNlbmQgaW4gdXBkYXRlcy4gVHJlYXQgaXQganVzdCBsaWtlIGEgZm9vZCByZXN1cHBseSAgIHN0YXJ0IHRoZSBmaXJzdCBkYXkgd2l0aCB3YXRlciB0byBnZXQgeW91IHRvIHRoZSBuZXh0IHNvdXJjZSBhbmQgdGhlbiBmcm9tIHRoZXJlIGNoZWNrIHRoZSByZXBvcnQgdG8ga25vdyBob3cgbXVjaCB0byBjYXJyeSB0byB0aGUgbmV4dCBsb2NhdGlvbi4gSSBkb3dubG9hZGVkIGEgbmV3IGNvcHkgdG8gbXkgcGhvbmUgZWFjaCB0aW1lIEkgd2FzIGluIHRvd24gb3Igd2hlbmV2ZXIgSSBoYWQgc2VydmljZSwgYmVjYXVzZSBpdCBjYW4gY2hhbmdlIHF1aWNrbHkuIERvd25sb2FkIHRoZSBtb3N0IGN1cnJlbnQgY29weSBlaXRoZXIgdGhlIG5pZ2h0IGJlZm9yZSB5b3VyIGhpa2Ugb3IgdGhlIG1vcm5pbmcgb2YuCkluIHNwaXRlIG9mIHRoZXNlIGdyYXkgYXJlYXMsIG1pbGxpb25zIGluIHRoZSBVLiBTLiBBbmQgYXJvdW5kIHRoZSB3b3JsZCByZWd1bGFybHkgZW5qb3kgcGFydGljaXBhdGluZyBpbiBvbmxpbmUgcG9rZXIgZ2FtZXMgZnJvbSB0aGUgY29tZm9ydCBvZiB0aGVpciBvd24gaG9tZXMuIApFYXJseSBpbiB0aGUgY29udmVyc2F0aW9uLCBKaW0gVHJlbGl2aW5nIG9mIEJvc3RvbiBQaXp6YSBtZW50aW9uZWQgdGhhdCB0aGUgbWFsZSBmZW1hbGUgcmF0aW8gb2YgdGhlIGVudHJlcHJlbmV1cnMgaGUgaW52ZXN0ZWQgaW4gd2FzIDcwJSA6IDQwJS4gV2hlbiBMYXZhIExpZmUgY28gZm91bmRlciBCcnVjZSBDcm94b24gY2FsbGVkIGhpbSBvbiBpdCwgVHJlbGl2aW5nIHNob3QgYmFjazogbmV2ZXIgd2FzIGdvb2Qgd2l0aCBudW1iZXJzLiAKVGhlIGlkZWEgaXMgdG8gd29yayB0b2dldGhlciB3aXRoIHBlb3BsZSBvZiBkaWZmZXJpbmcgb3BpbmlvbnMgc28gdGhhdCB3ZSBjYW4gaGF2ZSBhbiBpbnRlbGxpZ2VudCBjb252ZXJzYXRpb24gYW5kIGNvbWUgdG8gYSBjb21wcm9taXNlIHRoYXQgZW5jb21wYXNzZXMgdGhlIGJlc3QgaWRlYXMgb24gYm90aCBzaWRlcy4uIApUaGlzIG9idmlvdXNseSBuZXZlciBjcm9zc2VkIFRydW1wIG1pbmQuCk9oIHllcyBJIGhhdmUgZ2FzIGJ1YmJsZXMgYWxsIHRoZSB0aW1lIHRoYXQgSSBjYW4gZmVlbCBnbyB1cCBhbmQganVzdCBkaXNhcHBlYXIuIE5vdCBzdXJlIHdoZXRoZXIgaXQgYW54aWV0eSBvciBub3QsIGJ1dCBJIGNhbiB0ZWxsIHlvdSBJIHN0YXJ0ZWQgdGFraW5nIGN5bWJhbHRhIGEgZmV3IG1vbnRocyBiYWNrIGFsb25nIHdpdGggQ0JEIG9pbCBhbmQgaXQgZG9uZSB3b25kZXJzIGZvciBteSBtZW50YWwgaGVhbHRoIGFuZCBJIGFjdHVhbGx5IG5vdGljZWQgbGVzcyBoZWFydGJ1cm4gYW5kIEdFUkQgc3ltcHRvbXMgaW4gZ2VuZXJhbC4gClNoZSBzYWlkIHNoZSBhbHNvIGV4YW1pbmVkIEJvbmQgdW5kZXJwYW50cywgUmlwY3VybCBzaG9ydHMgYW5kIGEgYmVsdCBsb2NhdGVkIGluIENvb2NoaW4gQ3JlZWsgaW4gMjAxMS4KVGhlc2UgZ2FtZXMgYWxsb3cgc29saWQgcGxheWVycyB0byB1c2UgYWxsIG9mIHRoZWlyIHRvb2xzIGluIGFyZWFzIHN1Y2ggYXMgYmx1ZmZpbmcsIHBvdCBvZGRzLCBwc3ljaG9sb2d5LCBhbmQgc29saWQgZ2FtZSBza2lsbHMuIAoxMSwgYSBtYW4gcm9iYmVkIGEgZHJpdmVyIG9mIGhpcyB2ZWhpY2xlIGluIFN1cnJleSwgdGhlbiBjYXVzZWQgYSBjb2xsaXNpb24gd2l0aCBhIHBvbGljZSBjcnVpc2VyIGluIEJ1cm5hYnkgYW5kIHRoZW4gZmlyZWQgYSBndW4gYXQgYW5vdGhlciB2ZWhpY2xlIGluIENvcXVpdGxhbS5KZWV2YW4gSm9oYWwgU2FlcGFuIGhhcyBiZWVuIGFycmVzdGVkIGFuZCBjaGFyZ2VkIHdpdGggcm9iYmVyeSB3aXRoIGEgcmVzdHJpY3RlZC9wcm9oaWJpdGVkIGZpcmVhcm0sIHVubGF3ZnVsbHkgZGlzY2hhcmdpbmcgYSBmaXJlYXJtLCBwb3NzZXNzaW9uIG9mIGEgcmVzdHJpY3RlZC9wcm9oaWJpdGVkIGZpcmVhcm0sIG9jY3VweWluZyBhIHZlaGljbGUga25vd2luZyBhIGZpcmVhcm0gaXMgcHJlc2VudCwgZGFuZ2Vyb3VzIG9wZXJhdGlvbiBvZiBhIG1vdG9yIHZlaGljbGUsIGFuZCBmYWlsdXJlIHRvIHN0b3AgYXQgYSBjb2xsaXNpb24ubGl2ZSBpbiBnb29kIGNvbW11bml0aWVzIGFuZCB3ZSB3YW50IHRoZSBwdWJsaWMgdG8ga25vdyB0aGF0IHRoZWlyIGxvY2FsIFJDTVAgZGV0YWNobWVudHMgd2lsbCBhbHdheXMgd29yayB0b2dldGhlciB0byBrZWVwIG91ciBzdHJlZXRzIHNhZmUsIHNhaWQgQ29xdWl0bGFtIFJDTVAgQ3BsLiAKRGF0aW5nIGEgUG9ybiBTdGFyCllldCwgaXMgYSBsZXR0ZXIgc2lnbmVkIGJ5IG1vcmUgdGhhbiA2MCBsYXdtYWtlcnMgdG8gdGhlIERlcGFydG1lbnQgb2YgSnVzdGljZSBkZW1hbmRpbmcgYSBjcmltaW5hbCBpbnZlc3RpZ2F0aW9uIG9mIEdvbGRtYW4gU2FjaHMuIFNwZWFyaGVhZGVkIGJ5IFJlcHJlc2VudGF0aXZlIE1hcmN5IEthcHR1ciwgKEQgT0gpLCBhbmQgY29udGFpbmluZyBtb3JlIHRoYW4gMTQwLDAwMCBzaWduYXR1cmVzIGZyb20gQW1lcmljYW4gY2l0aXplbnMgKGEgY2FtcGFpZ24gc3BlYXJoZWFkZWQgYnkgTW92ZSBPbiksIHRoZSBsZXR0ZXIgZW5kcyB3aXRoIHRoZXNlIGxpbmVzOi4gCjEuIFJ1bGUgb3V0IHBvdGVudGlhbGx5IHNlcmlvdXMgc3BpbmFsIHBhdGhvbG9neQpUaGUgRWFzdCBWYW5jb3V2ZXIgY2luZW1hIHdhcyBwYWNrZWQgd2l0aCBDcmF6eThzIGFsdW1uaSwgYWxvbmcgd2l0aCBob3BlZnVscyBhbmQgdGhpcyB5ZWFyIGNyb3Agb2Ygc2l4IHBpdGNoIHdpbm5lcnMgY2hvc2VuIGZyb20gMjAwIGFwcGxpY2FudHMuIFRoZXksIGFsb25nIHdpdGggaW5kdXN0cnkgbGVhZGVycyBhbmQgYXNwaXJpbmcgYWN0b3JzLCBjb252ZW5lZCB0byBuZXR3b3JrLCB3YXRjaCBwYXN0IGZsaWNrcyBhbmQgc3VwcG9ydCB0aGUgbmV4dCBnZW5lcmF0aW9uIG9mIGZpbG0gdGFsZW50LiBUaGVpciBmaWxtIElkb2xzIE5ldmVyIERpZSB3aWxsIGJlZ2luIHNob290aW5nIHRoaXMgd2VlaywgYWxvbmcgd2l0aCBTdGV2ZSBLYW1tZXJlciBBZGEsIExlZSBTaG9ydGVuJ3MgUGFyYWJvbGEsIEhlYXRoZXIgUGVybHV6em8gSGF0Y2gsIE5lc3NhIEFyZWYgVGhlIE1pcnJvciBhbmQgTWljaGFlbCBQLiBWaWRsZXIncyBVbmtlcHQuCk51ciBtaXQgQW5rYXJhIGFsbGVzIGd1dC5uc2VyZSBBaW1hdGxhbmQgaXNjaCB0b3RhbCBhbiBkaWUgQWJncnVuZCB3ZWdlbiBkaWVzZSBic2UsIGJzZSBFcmRiZWJlbi4gV2lyIGluIEFpdGkgc2luZCBzZWhyIHRyYXVyaWcgdW5kIHdvbGxlbiBldHdhcyBBdWZtZXJrc2Fta2VpdC4gTnVuLCB3aXIgdm9uIGRpZSBsaWViZSBJbnNlbCwgYml0dGVuIGRpZSBPbHltcGlzY2hlIEtvbWl0ZWUsIGRhcyB3aXIgd2VuaWdzdGVucyBkaWUgT2x5bXBpc2NoZSBTcGllbGUgYXVzdHJhZ2VuIGRyZmVuLiAKSXQgaXMgdmVyeSBzaW1pbGFyIHRvIGEgc2luZ2xlIGxpbmUgdmlkZW8gc2xvdCBnYW1lLiAKTG9vdCBhdCBvbmxpbmUgY2FzaW5vcy4gVGhleSBoYXZlIGEgbG90IG9mIGNvb2wgZmVhdHVyZXMsIHN1Y2ggYXMgbGl2ZSBkZWFsZXIsIHNvIHlvdSBjYW4gZ2V0IGFzIGNsb3NlIHRvIGEgcmVhbCBsaWZlIGV4cGVyaWVuY2UgYXMgcG9zc2libGUuIApJdHMgcmVhbGx5IHRpcmluZy4uIApJdCBkb2Vzbid0IHNvdW5kIGxpa2UgeW91J3JlIGJlaW5nIGEgYnJpZGV6aWxsYSwgYnV0IEknbSBhbHNvIG5vdCBpbiB0aGUgcm9vbSBsaXN0ZW5pbmcgdG8geW91IGd1eXMgZGlzY3VzcyBpZGVhcy4gSXQgc291bmRzIGxpa2UgdGhlcmUgYXJlIHRoaW5ncyBhYm91dCB0aGUgd2VkZGluZyB0aGF0IGFyZSBpbXBvcnRhbnQgdG8gaGltLiAKSXQgaXMgYWxzbyB3ZWlyZCB0byBjb21lIGJhY2sgaG9tZSBhbmQgaGF2ZSB0cmFzaCBjYW5zIGluIHB1YmxpYyAocmF0aGVyIHRoYW4gcHV0dGluZyB5b3VyIG93biB0cmFzaCBpbiB5b3VyIG93biBiYWcgYW5kIGJyaW5naW5nIGl0IGhvbWUgdG8gcmVjeWNsZSkuIFNvIG1hbnkgZGlmZmVyZW5jZXMsIEkganVzdCBjdXQgaXQgb2ZmIGhlcmUuIApJIHdvdWxkIGxvdmUgdG8gZ2VuZXJhdGUgYSBmZXcgYm9va3Mgb3V0IG9mIHRoZW0sIGFuZCBJIHRoaW5rIHRoYXQgYSBjaG9pY2UgNTAwIG9mIHRoZW0gb3Igc28gd291bGQgbWFrZSBhIHRyZW1lbmRvdXMgc2hvdyBzb21ld2hlcmUgKEJyb29rbHluPykgYXMgYSBGb3VuZCBBcnQsIFVuZXhwZWN0ZWQgRGFkYWlzdCwgVGhlIFN1cnByaXNlIG9mIHRoZSBOYWl2ZSBTdXJyZWFsLCBzaG93IG9yIHNvbWUgc3VjaCB0aGluZywgc2hvd2luZyBhIG1hcnJpYWdlIG9mIGRlc2lnbiwgb3V0c2lkZXIgaW50ZWxsZWN0IGFuZCBzdWJsaW1lIG11bmRhbmUuIApTbyBpbiBhIHdheSwgTW9ybmVhdSBpcyByaWdodDogdGhlcmUgaXMgc3Ryb25nIGpvYiBncm93dGguIApNYXNzYWdlIHByb3ZlcyB0byBiZSBoZWxwZnVsIGZvciB3b21lbiBpbiBsYWJvdXIsIGJlY2F1c2UgaXQgcHJvdmlkZXMgdGhlbSBwYWluIHJlbGllZi4gClNvbmlhIGFpbXMgdG8gb2ZmZXIgeW91OlRoZSB0ZWNobmlxdWVzIHVzZWQgbWF5IGludm9sdmU6UmVsZWFzZSBvZiB0ZW5zaW9uIHRyaWdnZXIgcG9pbnRzTnV0cml0aW9uIGJhc2VkIEF5dXJ2ZWRpYyBzeXN0ZW0gb2YgaGVhbHRoSGVsZW4gaXMgYSBjb21wbGVtZW50YXJ5IGhlYWx0aGNhcmUgcHJhY3RpdGlvbmVyIHdpdGggb3ZlciAxMCB5ZWFycyBleHBlcmllbmNlIGluIGhlYWx0aGNhcmUgYW5kIHdlbGxiZWluZywgd29ya2luZyBpbiBOSFMgYW5kIGNvbXBsZW1lbnRhcnkgaGVhbHRoIHNldHRpbmdzLiAKVGhpcyBtYXkgd2VsbCBiZSB0aGUgb25lIG9mIHRoZSB0d28gZWFybGllc3Qgam91cm5hbCBhcHBlYXJhbmNlcyBvZiB0aGUgc3VjY2Vzc2Z1bCBkZW1vbnN0cmF0aW9uIG9mIHRoZSBNb3JzZS9WYWlsIGVsZWN0cm9tYWduZXRpYyByZWNvcmRpbmcgdGVsZWdyYXBoLCBhbmQgaXMgcGVyaGFwcyB0aGUgdmVyeSBmaXJzdCBhcHBlYXJhbmNlIG9mIHRoZSAiZG90IiBlbmQgb2YgdGhlIE1vcnNlIENvZGUuCkhlIHdvbiA5IG91dCBvZiAxMC4gCkkgd2VudCB0byBteSBPQiBhbmQgd2UgdHJhY2tlZCBteSBIQ0cgYW5kIGZvdW5kIGl0IHdhcyBsb3cgYW5kIG9ubHkgc2xpZ2h0bHkgcmlzaW5nLiBJIGRpZCBhIGJpb3BzeSBvZiBteSB1dGVydXMgdG8gY29uZmlybSB0aGVyZSB3YXMgbm8gZmV0YWwgdGlzc3VlLiAKQk9VQ0hFUlZJTExFLCBRdWUuICAgTG93ZSdzIENvbXBhbmllcyBJbmMuIGlzIHJlZHVjaW5nIGl0cyBDYW5hZGlhbiBmb290cHJpbnQgYnkgY2xvc2luZyAzMSBwcm9wZXJ0aWVzIGFjcm9zcyB0aGUgY291bnRyeSBpbiBhIGJpZCB0byBzdHJlYW1saW5lIGl0cyBidXNpbmVzcy4KQWxzbyBkb24ndCBleHBlY3QgaXQgdG8gYmUgbGluZWFyICByYXZlbmxvZnQgaXMgYSB2ZXJ5IG9wZW4gd29ybGQgc2V0dGluZywgc28gYmUgcHJlcGFyZWQgZm9yIGFueXRoaW5nIGFuZCBnaXZlIHlvdXIgcGxheWVycyBvcHRpb25zLiAKRHJhY2FyeXNIaWppbmtzICA3IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVmljdG9yaWFucyBsb3N0IG5lYXJseSAkMi43IGJpbGxpb24gb24gcG9rZXIgbWFjaGluZXMgaW4gdGhlIGxhc3QgZmluYW5jaWFsIHllYXIgICB0aGUgaGlnaGVzdCBmaWd1cmUgaW4gYSBkZWNhZGUgIHdpdGggcHVudGVycyBpbiBzb21lIG9mIHRoZSBzdGF0ZSdzIG1vc3QgZGlzYWR2YW50YWdlZCBjb21tdW5pdGllcyBsb3NpbmcgdGhlIG1vc3QgbW9uZXkuCkV2ZXJ5b25lIGFscmVhZHkga25vd3MsIHRoZSBtaW51dGUgdGhleSBsb29rIGF0IG1lLCB3aGF0IG15IHBvbGljeSBwb3NpdGlvbnMgYXJlLiBJIGFtIGxpdGVyYWxseSBhIHdhbGtpbmcgcHJvdGVzdCBpbiB0aGlzIGFyZWEuIApPdXIgdmlkZW9zIGluc2lkZSB0aGlzIHZvb2sgcHJvdmlkZSBhbiBhY3R1YWwgR29sZGVuIEdvb3NlIFN1cGVyc3RhciBNZW5zIFNuZWFrZXJzIEF1c3RyYWxpYSBTdG9ja2lzdHMgbGltcHNlIGluIG9yZGVyIHRvIHRoZSBhcmVhIG9mIHVzdWFsbHkgdGhlIGZhbW91cyBwcml2YXRlIGV5ZSBhbmQgdGhvc2UgdGhpbmdzIHRoYXQgaW5zcGlyZWQgdGhlIHR5cGUgb2YgaW5ub3ZhdGl2ZSBsYXcgYnJlYWtpbmcgZmlnaHRpbmcgYnVuY2ggd3JpdHRlbiB0byBDb25hbiBEb3lsZS4uIApXaGVuIEkgZmlyc3QgYm91Z2h0IGl0IGF3aGlsZSBiYWNrLCB0aGUgaXNzdWUgb2Ygd2hldGhlciBvciBub3QgaXQgd291bGQgd29yayB3ZWxsIGNhbWUgdG8gbWluZC4uIApJbnN0ZWFkLCBJJ20gcGxhbm5pbmcgdG8gZmluYWxseSBjaGVjayBvdXQgdGhlIGZyZWUgZml0bmVzcyBjZW50ZXIgYWZ0ZXIgd29yayB0b25pZ2h0LCBtYWtlIHNvbWUgcGl6emEgd2hlbiBJIGdldCBob21lIGFuZCB3YXRjaCBzb21lIG5ldyBTdGFyIFRyZWsgRGlzY292ZXJ5LiBUb21vcnJvdyBodXNiYW5kIGFuZCBJIGFyZSBkb2luZyBzb21lIHRpZHlpbmcgdXAgc28gd2UgY2FuIHNldCB1cCBhIG5ldyBoZWF2eSBiYWcgYW5kIHN0YXRpb25hcnkgYmlrZSA6KQpBa3R1ZWxsZSBJbmZvcyBiaWV0ZXQgYXVjaCBkaWUgRmFjZWJvb2sgU2VpdGUgZGVyIEFrdGlvbiwgZG9ydCB3ZXJkZW4gbGF1ZmVuZCBha3R1ZWxsZSBNZWxkdW5nZW4gdmVyZmZlbnRsaWNodDogTGEgUnV0YSBkZWwgR2FsbG8uIApCeSBTdW4gU3RhZmYgKGNvbnRhY3QpCkl0IGlzIHZlcnkgbXVjaCBjbGVhciB0aGF0IHRoZSBsb3ZlIG9mIEdvZCBmb3IgZXZlcnkgbmF0aW9uIGlzIHNvIHByb21pc2luZyB0aGF0IGEgbW90aGVyIGNhbiBmb3JnZXQgaGVyIGNoaWxkLCBidXQgR29kIHdpbGwgbmV2ZXIgZm9yZ2V0cyBvciBzdXJyZW5kZXJzIHlvdS4gUmVhZCB0aGUgdmVyc2VzIGJlbG93IHRoYXQgd2lsbCBjb25maXJtIHRoaXMgc3RhdGVtZW50IHJpZ2h0IGZyb20gdGhlIG1vdXRoIG9mIEdvZC4xM1NpbmcsIE8gaGVhdmVuczsgYW5kIGJlIGpveWZ1bCwgTyBlYXJ0aDsgYW5kIGJyZWFrIGZvcnRoIGludG8gc2luZ2luZywgTyBtb3VudGFpbnM6IGZvciB0aGUgTE9SRCBoYXRoIGNvbWZvcnRlZCBoaXMgcGVvcGxlLCBhbmQgd2lsbCBoYXZlIG1lcmN5IHVwb24gaGlzIGFmZmxpY3RlZC4KS25vd2luZ2x5IHBlcm1pdHRpbmcgYSBwYXRpZW50IHRvIHNlbGYgbWVkaWNhdGUgd2l0aCBhIGNvbnRyb2xsZWQgc3Vic3RhbmNlIG91dHNpZGUgb2YgYSBkb2N0b3IncyBvcmRlcnMgd291bGQgYmUgSFVHRSBtYWxwcmFjdGljZS4gRXZlcnlvbmUgaW52b2x2ZWQgd291bGQgYmUgY3VyYnN0b21wZWQgYnkgdGhlIGxhdywgd2hhdGV2ZXIgbWVkaWNhbCBib2FyZHMgdGhleSBhcmUgYWNjb3VudGFibGUgdG8sIG1hbHByYWN0aWNlIGluc3VyZXJzLCB0aGUgRkRBLCBhbmQgcG9zc2libHkgdGhlIERFQS4KRm9yIGV4YW1wbGUsIHRoZSBmZWUgZm9yIGEgc3BvcnRzIG1hc3NhZ2UgY2VydGlmaWNhdGlvbiBvZmZlcmVkIGJ5IFBhdGhzIGluIEhlYWxpbmcgaXMgJDEsMjc1LiBTb21lIHByb2dyYW1zIGNvbWUgd2l0aCBhZGRpdGlvbmFsIHJlcXVpcmVtZW50cywgc3VjaCBhcyBwYXJ0aWNpcGF0aW9uIGluIG9uIHNpdGUgbWFzc2FnZSBldmVudHMgYW5kIHByb3ZpZGluZyBtYXNzYWdlcyB0byBhdGhsZXRlcyBpbiB0cmFpbmluZy4uIApIb3cgY2FuIHBlb3BsZSBkZXN0cm95IHRoZWlyIGxpdmVzPyB0aGUgZmlyc3QgZm9sbG93IHVwIFNjaGVmdGVyIGhhcyBvZmZlcmVkIHNpbmNlIGhpcyBGZWIuIDIyIHJlcG9ydCwgaW4gd2hpY2ggaGUgc2FpZCwgIkknbSB0b2xkIHRoYXQgUm9iZXJ0IEtyYWZ0IGlzIG5vdCB0aGUgYmlnZ2VzdCBuYW1lIGludm9sdmVkIGRvd24gdGhlcmUgaW4gU291dGggRmxvcmlkYSwgYW5kIHdlIHdpbGwgc2VlIHdoYXQgcG9saWNlIHR1cm4gdXAgaW4gdGhlIHJlcG9ydC4iIFNjaGVmdGVyIGhhZCBkZWNsaW5lZCBjb21tZW50IHRocm91Z2ggYSBzcG9rZXNtYW4gdG8gVGhlIFBvc3QgQW5kcmV3IE1hcmNoYW5kIGxhc3Qgd2Vlay4uIApEYW5zIGxhIHBlcnNwZWN0aXZlIGRlcyBsZWN0aW9ucyBtdW5pY2lwYWxlcyBkZSAyMDIwLCBxdWkgc2UgZHJvdWxlcm9udCBkYW5zIHByYXRpcXVlbWVudCB1biBhbiAobGVzIGRhdGVzIHByY2lzZXMgbmUgc29udCBwYXMgZW5jb3JlIGNvbm51ZXMpLCBub3VzIHZvdXMgcHJvcG9zb25zIHVuIHRhdCBkZXMgbGlldXggZGUgbGEgcHIgY2FtcGFnbmUgcXVpIGEgZGogY29tbWVuYy4gCiJJIG9ubHkgdGFsayBhYm91dCBpdCB3aGVuIHBlb3BsZSBsaWtlIHlvdSBicmluZyBpdCB1cC4iLiAKR2l2ZW4gaXRzIGFtYml0aW9ucywgaXQgdW5zdXJwcmlzaW5nIHRoYXQgQ3JhenkgUmljaCBBc2lhbnMgaGFzIGJlZW4gaGVsZCB0byBoaWdoIHN0YW5kYXJkcy4gClRoYXQgc2VudGltZW50IGhhcyBzcHJlYWQgYmV5b25kIENvbmdyZXNzIHRvIHRvcCBBbWVyaWNhbiBhbmQgaW50ZXJuYXRpb25hbCBidXNpbmVzc2VzIGFuZCBmaW5hbmNpZXJzLiBNb3JnYW4gQ2hpZWYgRXhlY3V0aXZlIEphbWllIERpbW9uIGFuZCBGb3JkIE1vdG9ycyBDaGFpcm1hbiBCaWxsIEZvcmQgY2FuY2VsZWQgdGhlaXIgcGFydGljaXBhdGlvbiBpbiB0aGUgY29uZmVyZW5jZSwgc28gZGlkIFViZXIgQ0VPIERhcmEgS2hvc3Jvd3NoYWhpLCBHb29nbGUgZXhlY3V0aXZlIERpYW5lIEdyZWVuZSwgVmlhY29tIENFTyBCb2IgQmFraXNoIGFuZCBiaWxsaW9uYWlyZSBjbyBmb3VuZGVyIG9mIEFPTCwgU3RldmUgQ2FzZS4gVGhlIGV4ZWN1dGl2ZXMgb2YgQmxhY2tzdG9uZSBHcm91cCwgb25lIG9mIHRoZSB3b3JsZCBsYXJnZXN0IHByaXZhdGUgZXF1aXR5IGZpcm1zIGFuZCByZWFsIGVzdGF0ZSBpbnZlc3RvcnMgYW5kIEJsYWNrU3RvbmUsIHRoZSB3b3JsZCBsYXJnZXN0IGFzc2V0IG1hbmFnZXIgYWxzbyB3aXRoZHJldyBmcm9tIHRoZSBjb25mZXJlbmNlLgpJJ20gbm90IHN1cmUgd2hlcmUgdG8gdHVybiBidXQgSSByZWFsbHkgbmVlZCB5b3UncmUgYXNzaXN0YW5jZSBldmVyeW9uZS4KT24gaGlzIHdheSB0byBTdGFuZm9yZCBVbml2ZXJzaXR5IHRvIHN0dWR5IGxhdyBpbiAxOTc0LCBoZSBkcm9wcGVkIGJ5IExhcyBWZWdhcyBmb3IgdGhlIHdlZWtlbmQgZm9yIGEgbGl0dGxlIGxvdyBzdGFrZXMgcG9rZXIuIEhpcyBiYW5rcm9sbCB3YXMgYSBtb2Rlc3QgJDQwMCBidXQgd2l0aGluIGRheXMgaGUgaGFkIHdvbiAkNjAnMDAwIGluIGEgc2V2ZW4gY2FyZCBzdHVkIHRvdXJuYW1lbnQuIApUaGVyZWZvcmUgeW91IHByb2JhYmx5IG5vdCBudXR0ZWQgYXMgeW91IHdvdWxkbiBuZWVkIG1vcmUgaW5mb3JtYXRpb24uIFNlY29uZGx5LCB5b3UgcHJvYmFibHkgZ2l2aW5nIG9mZiBib2R5IGxhbmd1YWdlIHRlbGxzIGFzIHlvdSBzdWJjb25zY2lvdXNseSByZWFjdGluZyB0byB0aGUgaW5kaXZpZHVhbC4gCkluIGZhY3QsIGhlIGRlc3Bpc2VkIGZyYWdyYW5jZXMgYmVjYXVzZSB0aGV5IHJlbWluZGVkIGhpbSBvZiBoaXMgUGVyc2lhbiBlbmVtaWVzLCBhbmQgaGUgY29udGVtcHR1b3VzbHkgdGhyZXcgb3V0IGEgYm94IG9mIHByaWNlbGVzcyBvaW50bWVudHMgZnJvbSBLaW5nIERhcml1cycgdGVudCBhZnRlciBkZWZlYXRpbmcgaGltIGF0IHRoZSBiYXR0bGUgb2YgSXNzb3MuIEhvd2V2ZXIsIGFmdGVyIGEgZmV3IHllYXJzIG9mIHRyYXZlbGluZyB0aHJvdWdoIEFzaWEsIGhlIGJlY2FtZSBjb252aW5jZWQgb2YgdGhlIGpveXMgb2YgZmluZSBzY2VudC4gClRoZSBvbmx5IHRoaW5nIHRoYXQgaGVscGVkIG1lIGlzIEwgR2x1dGFtaW5lLiBJIHRha2UgaXQgZXZlcnkgc2luZ2xlIGRheSwgYW5kIGl0IGhhcyBoZWxwZWQgbWUgdHJlbWVuZG91c2x5LiBJIGhhdmUgZnVsbCBib2R5IGRpc2NvbG9yZWQgc2tpbiBlY3plbWEsIGFuZCBJIHRhbGtpbmcgYWJvdXQgbmVhcmx5IDEwMCUgb2YgbXkgYm9keSBpcyBjb3ZlcmVkLiBJIHN0YXJ0ZWQgdGFraW5nIHRoaXMgaW4gbGF0ZSBEZWNlbWJlciwgYW5kIEkgd2lsbCBzYXkgSSBmZWVsIDIwIDMwJSBiZXR0ZXIuIE5vdywgSSBzdGlsbCBzY3JhdGNoaW5nIGFuZCB0aGlzIGVjemVtYSBpcyBzdGlsbCBoZXJlLCBidXQgSSBmZWVsIGl0IGdldHRpbmcgYmV0dGVyLCBhbmQgSSBub3RpY2UgdGhhdCBpdCBpcyBsb29raW5nIGEgbGl0dGxlIGJldHRlciB0b28uIEJ1dCBub3csIEkgY2FuIHNob3dlciBjb21mb3J0YWJseSwgbW9pc3R1cml6ZSBjb21mb3J0YWJseSwgYW5kIGV2ZW4gd29ya291dC4gU2xlZXBpbmcgaXMgc3RpbGwgdW5jb21mb3J0YWJsZSwgYnV0IGl0IGdldHRpbmcgYmV0dGVyIGVhY2ggbmlnaHQuIEkgY291bGRuIGRvIGFueSBvZiB0aGF0IGJlZm9yZSBMIEdsdXRhbWluZS4gSXQgdGhlIG9ubHkgdGhpbmcgdGhhdCB3b3JrZWQgZm9yIG1lLiBJIGZlbHQgbXVjaCBiZXR0ZXIgaW4ganVzdCAzIHdlZWtzLgpJbiBjdXBib2FyZHMsIGJlaGluZCBhbmQgdW5kZXJuZWF0aCBmdXJuaXR1cmUsIGhhbmdpbmcgZnJvbSBzdHVmZi4gCkphbWVzIExldmluZSwgd2hvIHdhcyBjb25kdWN0aW5nIHRoZSBCb3N0b24gU3ltcGhvbnkgT3JjaGVzdHJhIG9uIFRodXJzZGF5LCBzYWlkOiAiTHVjaWFubydzIHZvaWNlIHdhcyBzbyBleHRyYW9yZGluYXJpbHkgYmVhdXRpZnVsIGFuZCBoaXMgZGVsaXZlcnkgc28gbmF0dXJhbCBhbmQgZGlyZWN0IHRoYXQgaGlzIHNpbmdpbmcgc3Bva2UgcmlnaHQgdG8gdGhlIGhlYXJ0cyBvZiBsaXN0ZW5lcnMgd2hldGhlciB0aGV5IGtuZXcgYW55dGhpbmcgYWJvdXQgb3BlcmEgb3Igbm90LiIKVGhpcyBpcyBteSBmYXZvcml0ZSBpbiB0aGUgc2VyaWVzLiBJdCBnb3QgZXNwaW9uYWdlLCBzbHkgY291cnRyb29tIGRyYW1hLCBhbmQgdW5kZXJkb2cgdHJpdW1waHMuIApDb3N0OiAkNzAgJDEyNSBwZXIgdHJlYXRtZW50LCBkZXBlbmRpbmcgb24gdGhlIHRoZXJhcGlzdCBleHBlcmllbmNlIGFuZCB0aGUgc2hpIHNoaSBmYWN0b3Igb2YgdGhlIHBvb2wuIFRoZXJhcGlzdHMgd2hvIGFyZSBhbHNvIGxpY2Vuc2VkIHRvIHByYWN0aWNlIG1hc3NhZ2UgY2FuIGJpbGwgaW5zdXJhbmNlLgpBIGxvdCBvZiB0aW1lcyB0aGUgcGVyc29uIGdpdmluZyB0aGUgdGVzdCB3b24ndCBtaW5kIGlmIHlvdSBzdGljayB5b3Vyc2VsZiBmb3IgdGhhdCB0ZXN0LiBJIGFsd2F5cyBoYWQgdGhlIGRlZXAgc29yZW5lc3MgaW4gbXkgZmluZ2VyIHdoZW4gdGhleSBkaWQgaXQuIEkgdGFrZSBteSBsYW5jZXQgZGV2aWNlIChhbiBhY2N1Y2hlY2sgbXVsdGljbGl4KS4KVGhlIGJlZXMgdGhlbiBkZXBvc2l0IHRoZSBuZWN0YXIgaW50byB0aGUgY2VsbHMgb2YgdGhlIHdheCBob25leWNvbWJzIHRoZXkgYnVpbHQuIApJIGRvbid0IGtub3cgd2hhdCB0aGUgbmV3IGFsYnVtIGlzIGdvaW5nIHRvIGJlIGNhbGxlZC4gVGhlcmUncyBhbHNvIFRoZSBGYW1lIE1vbnN0ZXIgKGRlbHV4ZSBlZGl0aW9uKSAoRnVsbCBBbnN3ZXIpLiAKVGhlIEtvcmVhbiBQZW5pbnN1bGEgaXMgbm90IGFuIGV4dGVuc2lvbiBvZiBDaGluYSdzIGxhbmQuIEFuZCBDaGluYSBoYXMgbm8gcmlnaHQgdG8gZW5mb3JjZSBLb3JlYXMnIGRlZmVuc2UgcG9saWN5IGFuZCBpbnZvbHZlIEtvcmVhIGluIGl0cyBhZ2dyZXNzaW9uIGFuZCBhcmd1bWVudHMgb3ZlciB0aGUgZ2xvYmUgZm9yIHdvcmxkL3JlZ2lvbmFsIGRvbWluYW5jZUx1ZGR5dm9uICA1IHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvClRoZSBibG9jaywgaGVhZHMsIGFuZCBjcmFua3NoYWZ0IGFyZSBTYWxlZW4ncyBvd24gY3JlYXRpb25zLCBhbmQgY2FzdCBmcm9tIGFsdW1pbnVtIGFuZCBmb3JnZWQgc3RlZWwuIApUaGVvZG9yZSBJemVyIGFuZCBkYXVnaHRlciwgVGhlZGEsIG9mIE1ubmEgRnVybmFjZSwgc3BlbnQgbGFzdCBUaHVyc2RheSB3aXRoIE1ycy4gCkknZCBsaWtlIHRvIHRhbGsgYWJvdXQgdGhlIGRlZXAgZmVlbGluZ3MgYW5kIGlubm92YXRpdmUgaWRlYXMgb2YgTHlhcmkncyByZXNpZGVudHMuIEkgd291bGQgdGFrZSBncmVhdCBwbGVhc3VyZSBpbiBkZXNjcmliaW5nIHRoZSBsaWdodCBpbiB0aGUgZXllcyBvZiBsaXR0bGUgY2hpbGRyZW4gaW4gTHlhcmkgYXMgdGhleSB0b2xkIG1lIGFib3V0IHRoZSBOR08gc2Nob29scyB0aGF0IHRoZXkgYXR0ZW5kLiBJIHdvdWxkIHJhdGhlciBlbmpveSBkZXNjcmliaW5nIHRoZSBydXN0aWMgYmVhdXR5IG9mIEx5YXJpJ3MgeW91bmcgbGFkaWVzLCBhbmQgdGhlIHJhdyBtYXNjdWxpbml0eSBvZiBMeWFyaSdzIHlvdW5nIG1lbi4uIAoiQXQgdGhhdCBwb2ludCB3ZSB0b29rIG91ciBCaWJsZSBzdHVkeSBmcm9tIG91ciBsaXZpbmcgcm9vbSwgYW5kIHdlIG1vdmVkIGl0IGludG8gdGhhdCBidWlsZGluZywiIGhlIHNhaWQuICJXZSBzdGFydGVkIHdvcnNoaXBwaW5nIGluIHRoYXQgYnVpbGRpbmcgZXZlcnkgd2Vla2VuZC4iCkZvciBleGFtcGxlLCBpZiB0aGUgY2hhbm5lbCBmb2N1c2VzIGV4Y2x1c2l2ZWx5IG9uIHRoZSBvdXRkb29ycywgYnV0IHRoZXkgYXJlIGJyb2FkY2FzdGluZyBUZXRyaXMgZ2FtZXBsYXksIHRoZW4gdGhlIGNhdGVnb3J5IGlzIFRldHJpcywgcmVnYXJkbGVzcyBvZiB0aGVpciBub3JtYWwgZm9jdXMsIGFuZCB0aGUgY29ycmVjdCBjYXRlZ29yeSBpcyBUZXRyaXMgZXZlbiBpZiB0aGVyZSBpcyBsaXZlIGNvbnZlcnNhdGlvbiB3aGlsZSBUZXRyaXMgaXMgYmVpbmcgcGxheWVkLCBhbmQgYWxsIHRoZSBkaXNjdXNzaW9uIG9uIHN0cmVhbSBpcyBzb2xlbHkgYWJvdXQgVHJhdmVsIGFuZCBPdXRkb29ycyByZWxhdGVkIHRvcGljcy4uIApCZXNtaXJjaGVkQW5hdGV4aXMgdQogMiBwb2ludHMgIHN1Ym1pdHRlZCAxNCBob3VycyBhZ29Ob2JvZHkgZmFtb3VzLCBidXQgSSBhbSByZWxhdGVkIHRvIDMgYnJvdGhlcnMgd2hvIHdlcmUgc2VsZiBtYWRlIG1lbiBkdXJpbmcgdGhlIEdybmRlcnplaXQuIFRoZWlyIGZhdGhlciB3YXMgYSBwb3R0ZXJlciB3b3JraW5nIGFzIGEgZGF5bGFib3VyZXIsIHNvIGRpcnQgcG9vci4gT25lIG9mIHRoZSBzb25zIGJlY2FtZSBhIGJyaWNrbGF5ZXIsIGFub3RoZXIgYSBwb3R0ZXJlciBhbmQgdGhlIHRoaXJkIGEgbWVyY2hhbnQuIApOZWFybHkgYW55dGhpbmcgb3V0ZG9vcnN5LCBhcyBsb25nIGFzIGl0IGRvZXNuJ3QgaW52b2x2ZSBzcGlkZXJzLiAKSSB0b29rIG15IDMgeWVhciBvbGQgdG8gYSBzcGxhc2ggcGFkIG9uZSBkYXkuIApGb3IgZXhhbXBsZSwgaW4gYSAkMS8yIGxpbWl0IGdhbWUsIHRoZSByYWlzZXMgd2lsbCBiZSBhcyBmb2xsb3dzLCBsaW1pdGVkIHRvIGZvdXIgdGltZXMgdGhlIGZpcnN0IGJldCB0aGF0IHdhcyBtYWRlOiAuLiAKV2hlbiB0aGUgbWVzc2VuZ2VyIGhhbmRlZCB0aGUgdGVsZWdyYW0gdG8gSHVzdG9uLCBoZSBnbGFuY2VkIGF0IGl0LCB0aGVuIHB1dCBpdCBpbnRvIGhpcyBwb2NrZXQuIEthdGhlcmluZSBIZXBidXJuIGV4Y2xhaW1lZDogRm9yIEdvZCBzYWtlcyBKb2huLCB3aGF0IGRvZXMgaXQgc2F5PyByZXBsaWVkOiBJdCBhIGdpcmwuIEhlciBuYW1lIGlzIEFuamVsaWNhLiB0aGUgdG93biBvZiBOZXZhZGFUaGUgZGVjaXNpb24gdGhhdCBIdXN0b24gbWFkZSB3YXMgdGhhdCB0aGVzZSB0d28gY2hpbGRyZW4gd291bGQgYmUgYnJvdWdodCB1cCBhd2F5IGZyb20gdGhlIEhvbGx5d29vZCBsaWZlIHN0eWxlLiBJbiBmYWN0IGl0IHdhcyBhIGRlY2lzaW9uIHRoYXQgc3VpdGVkIGhpbSB0b28uIFRoZW4gaW4gaGlzIG1pZCBmb3J0aWVzLCBIdXN0b24gd2FzIGEgbGVnZW5kIGluIEhvbGx5d29vZCwgbm90IG9ubHkgZm9yIGhpcyBncmVhdCBmaWxtcywgYnV0IGZvciBoaXMgc3dhZ2dlciwgaW50ZWxsaWdlbnQgY29tcGFuaW9uc2hpcCwgd2lzZG9tIGFuZCBodW1vdXIuIEhlIHdhcyBhIHdvbmRlcmZ1bCBob3N0LCB3aXRoIGVudGVydGFpbmluZyBzdG9yaWVzIHRvIHRlbGwsIGNyeWluZyBvdXQgZm9yIGFuIGF1ZGllbmNlLgpJIGFsc28gc2VudCBteSBmbGVldCB0byBEdXRjaCBFYXN0IEluZGllcywgd2l0aCBDb252b3kgUmFpZGluZyB5b3UgY2FuIGhvbGQgb3V0IGFnYWluc3QgdGhlIEphcGFuZXNlIGFuZCBzaW5rIHRyb29wcyBwcmVwYXJpbmcgdG8gaW52YWRlIHlvdXIgbGFuZCwgYnV0IHRoZXkgdXN1YWxseSBnZXQgdGhyb3VnaCBhbmQgZG8gc29tZSBsYW5kaW5ncyBuZXh0IHRvIHBvcnRzIGJ1dCBzaW5jZSB0aGV5IG9uIGlzbGFuZHMgd2l0aCBubyBpbmZyYXN0cnVjdHVyZSBhbmQgZG9uIGhhdmUgYW55IHBvcnRzLCBldmVuIHlvdXIgY29sb25pYWwgdHJvb3BzIGNhbiBlbmQgdGhlbSBlYXNpbHkuIEFsc28gZG9uIGRlZmVuZCBwbGFjZXMgbGlrZSBXZXN0IFBhcHVhIHdoZXJlIHRoZXJlIGlzbiBhbnkgcmVzb3VyY2VzLiBCdXQgSmFwYW5lc2UgQUkgaXMgc29tZXdoYXQgY29tcGV0ZW50IGFuZCB0aGV5IGV2ZW4gcGFyYWRyb3Agb250byBJbmRvbmVzaWEuClRoZSBNZWxib3VybmUgZmF0aGVyIG9mIHRocmVlIHNheXMgaGUgc2hvd3MgcHVudGVycyBob3cgdG8gY2FzaCBpbiBvbiBwcm9ncmVzc2l2ZSBqYWNrcG90cyAgIHRoYXQgaXMgamFja3BvdHMgdGhhdCBhcmUgZ3VhcmFudGVlZCB0byBnbyBvZmYgYnkgdGhlIHRpbWUgdGhleSByZWFjaCBhIHByZSBzZXQgYW1vdW50LgpUaGUgZWFzaWVzdCB3YXkgdG8gdGhpbmsgYWJvdXQgZXhwZWN0ZWQgdmFsdWUgaXMgdGhyb3VnaCBhbiBleGFtcGxlIGdpdmVuIGJ5IEJpbGx5IE11cnBoeSBvZiBGb3JldmVyIEpvYmxlc3MuIApDZSB0cmFpdGVtZW50IHByc2VudGUgcGx1c2lldXJzIGF2YW50YWdlcyBzZWxvbiBKZWFuIFBpZXJyZUJpc3Nvbm5ldHRlLCBjaGVmIGFzc29jaSBkdSBkcGFydGVtZW50IGRlIHBoeXNpcXVlIG1kaWNhbGUgYXUgUHJpbmNlc3MgTWFyZ2FyZXQgQ2FuY2VyIENlbnRyZSBkZSBUb3JvbnRvLiBJbCBwZXJtZXQgZGUgdHJhaXRlciB1biBwYXRpZW50IGdyY2UgIHVuZSBzZXVsZSBpbnRlcnZlbnRpb24sIHBsdXR0IHF1ZSBkZXMgdHJhaXRlbWVudHMgY2hlbG9ubnMgc3VyIHBsdXNpZXVycyBzZW1haW5lcywgZXQgbWluaW1pc2UgbGVzIHJpc3F1ZXMgZCdlZmZldHMgc2Vjb25kYWlyZXMuClRoZSBwZW9wbGUgSSBrbm93IG9uIHRoZSBsZWZ0IGFyZSBtb3JlIG15IGFnZSwgYW5kIG11Y2ggbGVzcyBnaXZpbmcgb3IgZW1wYXRoZXRpYyBpbiBnZW5lcmFsLiAKQnV0IHRoZXJlIGEgd2F5IHRvIGdldCB0byBhIHBsYWNlIHdoZXJlIHRoZSB0cmF1bWEgZG9lc24gYWN0aXZlbHkgaGF1bnQgdXMgYW55bW9yZS4gQW5kIGl0IHBvc3NpYmxlIHRvIHVubGVhcm4gdGhlIGRhbWFnaW5nLCBub24gY29uc3RydWN0aXZlIGNvcGluZyBtZWNoYW5pc21zIGFuZCBwYXR0ZXJucyB0aGF0IHRyYXVtYSBpbnN0aWxscy4gCllvdSByZW1vdmUgdGhlIGV4cGFuc2lvbiBvZiB0aGUgdW5pdmVyc2UsIHNvIHdoZW4gYW5vdGhlciBzY2llbnRpc3QgYWRkcyBpdCBiYWNrIGluLCB0aGV5IGdldCB0byBjaG9vc2Ugd2hpY2ggZXhwYW5zaW9uIG1vZGVsIHRvIHVzZS4gCkQnZW1ibGUsIGVsbGUgbHVpIGRpdCBxdSdlbGxlIGEgdW4gc3BjaWFsIHBvdXIgbHVpLiBJbnRyaWd1LCBpbCBsdWkgZGVtYW5kZSAgcXVvaSBlbGxlIGZhaXQgcmZyZW5jZS4gClVwIHVudGlsIHRoZW4sIEkgaGF0ZWQgdGhlIGdyaXR0aW5lc3Mgb2YgZ3JvdW5kIGJlZWYsIGl0IGp1c3QgZ3Jvc3NlZCBtZSBvdXQuIFRoYXQgZG9lc24gbWVhbiB0aGF0IEkgd2lsbCBldmVudHVhbGx5IGxpa2UgYWxsIHRoZSB0aGluZ3MgSSBoYXRlIG5vdywganVzdCB0aGF0IEkgc2hvdWxkIGFsd2F5cyBrZWVwIGFuIG9wZW4gbWluZC4uIApJdCB3YXMgYmV0dGVyIHRvIGdvIHRvIG9uZSBsb2NhdGlvbiBhbmQgd2FsayB0byBldmVudHMhIEJldGhsZWhlbSBoYXMgc2hvdCBpdHNlbGYgaW4gdGhlIGhlYWQsIHdoYXQgd2VyZSB0aGV5IHRoaW5raW5nPyBGb3IgbXkgZmFtaWx5LCB3ZSB3aWxsIGdvIHRvIHRoZSBvcmlnaW5hbCBtdXNpa2Zlc3Qgc2l0ZXMsIHdhbGsgYXJvdW5kIHRoZW4gbGVhdmUuIEV4cGxhaW4gdG8gbWUgaG93IE11c2lrZmVzdCBpcyBnb2luZyB0byBjb250cm9sIHRyYWZmaWMgYW5kIHRoZSBQYS4gClV0YWgncyBzb2xlIGxvc3MgdG8gZGF0ZSB3YXMgYSB0aHJlZSBwb2ludCBsb3NzIHRvIGEgaGlnaGx5IHJhbmtlZCBTYW4gRGllZ28gU3RhdGUgc3F1YWQuIEl0IHdhcyBvbmx5IHRoZSBzZWNvbmQgcmVhbCBnYW1lIG9mIHRoZSBzZWFzb24sIHdpdGggdHdvIG9mIHRoZSBSdW5uaW4nIFV0ZXMnIHN0YXJ0ZXJzIGJlaW5nIG5ld2NvbWVycyAgIEpDIHRyYW5zZmVyIENocmlzIFJleWVzIChhIHNvcGhvbW9yZSB3aG8gcGxheWVkIGF0IENpdHJ1cyBDb2xsZWdlIGxhc3QgeWVhcikgYW5kIHRydWUgZnJlc2htYW4gSmFrb2IgUG9lbHRsIChhIHRydWUgZGlhbW9uZCBpbiB0aGUgcm91Z2ggb3V0IG9mIFZpZW5uYSwgQXVzdHJpYSkuIApQaWxsb3dzIGFuZCBjYXJwZXRzIGZlYXR1cmUgcXVvdGVzIGZyb20gRW1pbHkgRGlja2luc29uLCB0aGUgMTl0aCBjZW50dXJ5IEFtaGVyc3QgcG9ldCB3aG8gcHVibGlzaGVkIHdvcmsgaW4gdGhlIFNwcmluZ2ZpZWxkIFJlcHVibGljYW4gbmV3c3BhcGVyLiAKV2UncmUgYW4gaW5zdGl0dXRpb24gdGhhdCdzIHN0ZWVwZWQgaW4gdHJhZGl0aW9uLCBidXQgd2UgYWltIHRvIGJlIHByb2dyZXNzaXZlIGFuZCBkeW5hbWljIGluIHByb3ZpZGluZyBzZXJ2aWNlcyB0byBNZW1iZXJzLiBHaXZlbiB0aGUgbWFueSBkZW1hbmRzIHBsYWNlZCBvbiB0aGVtLCB3ZSB3YW50IHRvIG1ha2UgaXQgZWFzeSBmb3IgTWVtYmVycyB0byBmb2N1cyBvbiB0aGVpciBpbXBvcnRhbnQgd29yayBhcyBwYXJsaWFtZW50YXJpYW5zLiIuIApJIGNhbid0IHdyaXRlIG9yIHJlYWQgdG9vIHdlbGwuIApJIG5vdCBlaXRoZXIuIFRoYXQgcGVyc29uIGlzIGRvd24gYmVjYXVzZSB0aGV5IGJlbGlldmUgdGhleSB0aHJldyBhIHBlcmZlY3QgbGlmZSBhd2F5IG92ZXIgcG9rZXIuIFRoZSBpZGVhIHRoYXQgdGhlaXIgbGlmZSB3YXNuIHBlcmZlY3QsIHRoYXQgaXMgd2FzIG1pc3Npbmcgc29tZXRoaW5nLCBldmVuIGlmIHRoZXkgZGlkbiByZWFsaXplIGl0LCBhbmQgdGhhdCB3aHkgdGhleSB0dXJuZWQgdG8gcG9rZXIgYW5kIGNvdWxkbiBzdG9wLCByZWxpZXZlcyBzb21lIG9mIHRoZWlyIGJ1cmRlbi4gVGhleSBjYW4gc3RvcCBiZWF0aW5nIHRoZW1zZWx2ZXMgdXAgb3ZlciBwbGF5aW5nIHBva2VyLCBhbmQgZm9jdXMgb24gbG9va2luZyBmb3Igd2hhdCB0aGVpciBsaWZlIHdhcyBtaXNzaW5nLgpMZW1vbiBqdWljZSBpcyBhIGZydWl0IGFjaWQsIGNpdHJpYyBhY2lkLCBhbmQgaXQgbWF5IHRlbXBvcmFyaWx5IGxpZ2h0ZW4geW91ciBza2luIGNvbG9yLCBqdXN0IGxpa2UgYW55IHNraW4gY2FyZSBwcm9kdWN0IHByb21pc2luZyB0byB3aGl0ZW4sIGJyaWdodGVuIGFuZCBsaWdodGVuIHlvdXIgY29tcGxleGlvbi4gT24gYSB3ZWVrbHkgYmFzaXMgYXBwbHkgZnJlc2ggbGVtb24ganVpY2UgdG8geW91ciBmcmVja2xlZCBhcmVhcyBhbmQgbGVhdmUgaXQgdG8gdHJlYXQgeW91ciBza2luIGZvciB1cCB0byAxMCBtaW51dGVzIGJlZm9yZSB0aG9yb3VnaGx5IHJpbnNpbmc7IG1peCBhIHBpbmNoIG9mIHN1Z2FyIHdpdGggdGhlIGxlbW9uIGp1aWNlIHRvIGFkZCBleGZvbGlhdGlvbiBiZW5lZml0cyB0byB5b3VyIERJWSB0cmVhdG1lbnQgW3NvdXJjZTogSm9obnNvbl0uIEp1c3QgbGlrZSBhIGJsZWFjaGluZyBvciBmYWRpbmcgY3JlYW0gbGVtb24ganVpY2UgaXMgb25seSBlZmZlY3RpdmUgaWYgeW91IHVzZSBpdCByZWd1bGFybHkgICB0aGUgZWZmZWN0cyBhcmUgZ3JhZHVhbCBhbmQgeW91IG1heSBub3Qgc3RhcnQgdG8gbm90aWNlIGFueSBkaWZmZXJlbmNlIHVudGlsIHlvdSd2ZSB1c2VkIGl0IGZvciBhIGZldyBtb250aHMuLiAKVm91cyBwb3V2ZXogdm91cyBkZW1hbmRlciBzaSB2b3VzIGF2ZXogZW52aWUgZXQgZW5jb3JlIGZhaW0gcG91ciB1biBkZXNzZXJ0LCB0b3V0IGRlIHN1aXRlIG91IHBsdXMgdGFyZC4uIApCbGFrZUp1c3RCbGFrZSAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpPbmUgdGhpbmcgdGhhdCB3b3VsZCBiZSBmdW4gaXMgaWYgaGUgaXMgbGlrZSBWYXNoIHRoZSBTdGFtcGVkZSBhbmQgaGFzIGEgcmVwdXRhdGlvbiBmb3IgYmVpbmcgYSBzZXJpYWwga2lsbGVyIHRoYXQga2lsbHMgYW55b25lIGhlIGNyb3NzZXMgcGF0aHMgd2l0aCBkZXNwaXRlIGhpbSBoYXZpbmcgbmV2ZXIgdGFrZW4gYSBzaW5nbGUgbGlmZS4gKG1pc3VuZGVyc3RhbmRpbmdzIGFuZCBhbGwgdGhhdC4pCkluIEphbnVhcnkgMjAxNSwgYSB3b21hbiB3aG9zZSBkYXVnaHRlciBsaXZlZCBpbiB0aGUgYXBhcnRtZW50IGJ1aWxkaW5nIG5vdGljZWQgYSBtYWxlIG9ubHkgY2xpZW50ZWxlIHZpc2l0aW5nIHRoZSBzdG9yZWZyb250LCBtb3N0bHkgYXQgbmlnaHQuIApJIGRlY2lkZWQgdG8gZ28gdG8gdGhlIGJhdGhyb29tIGFuZCB0aG91Z2h0IHRoZXJlIHdhcyBhIGxpbmUgc2luY2UgdGhlcmUgd2VyZSBhIGxvdCBvZiBndXlzIG9uIHRoZSB0b3VyLiBBcyBJIHNhdyBhIGd1eSB3YWl0IG91dHNpZGUsIGhlIHdhcm5lZCBtZSB0aGF0IHRoZXJlIHdhcyBhIGdob3N0IGluIHRoZSBiYXRocm9vbS4gSSBkaWRuIGJlbGlldmUgaGltIGJlY2F1c2UgMSkgSSByZWFsbHkgaGFkIHRvIGdvIGFuZCAyKSB0aG91Z2h0IGhlIHdhcyBhIGxvY2FsIHlhbmtpbmcgbXkgY2hhaW4uIApIYW5kIDMpIE5vdGhpbmcgdG8gc2F5IGhlcmUsIHlvdSBzZXQgbWluZWQgYW5kIG1pc3MuIE5lc3QgaGFuZC4KVGhpcmQsIG1hZ25lc2l1bSBwbGF5cyBhIHJvbGUgaW4gcGh5c2ljYWwgcGVyZm9ybWFuY2UgYW5kIG11c2NsZSBmdW5jdGlvbiwgbWVhbmluZyB0aGF0IGF0aGxldGVzIGFuZCByZWNyZWF0aW9uYWwgdHJhaW5lZXMgYXJlIGNvbW1vbmx5IGRlZmljaWVudCBiZWNhdXNlIHN0cmVuZ3RoIHRyYWluaW5nIGluY3JlYXNlcyBtYWduZXNpdW0gcmVxdWlyZW1lbnRzLiBJIHByZXNlbnQgdGhlIG1hbnkgcmVhc29ucyB5b3Ugc2hvdWxkIG1ha2Ugc3VyZSB5b3VyIG1hZ25lc2l1bSBsZXZlbHMgbWVhc3VyZSB1cCBiZWxvdyB3aXRoIGRldGFpbGVkIHJlc2VhcmNoIHdpdGggTVkgVEFLRUFXQVlTIGlmIHlvdSBqdXN0IHdhbnQgdGhlIHF1aWNrIHRpcHMuIEF0IHRoZSBlbmQgeW91J2xsIGZpbmQgYSBsaW5rIHRvIGEgbWFnbmVzaXVtIHN1cHBsZW1lbnRhdGlvbiBndWlkZS4uIApUaGUgb3V0Y29tZSBvZiB0aGUgZ2FtZSBpc24gYXMgaW1wb3J0YW50IGFzIGhhbmdpbmcgb3V0IHdpdGggbXkgZnJpZW5kcywgdGFpbGdhdGluZyBhbmQgaGF2aW5nIGEgZ29vZCB0aW1lLi4gCkJ5IGFjY2Vzc2luZyBvciB1c2luZyBvdXIgU2VydmljZXMsIHlvdSBhZ3JlZSB0byBiZSBib3VuZCBieSB0aGVzZSBUZXJtcy4gCk1vc3QgYWN0b3JzIGhhdmUgYSByb2xlIHdpdGggd2hpY2ggdGhleSBiZWNvbWUgaW5kZWxpYmx5IGFzc29jaWF0ZWQuIEZvciBKb2huIFJoeXMgRGF2aWVzIGl0IHdhcyB0aGF0IG9mIEdpbWxpLCB0aGUgYmVsbGlnZXJlbnQsIHBsYWluIHNwZWFraW5nIGR3YXJmIGluIFBldGVyIEphY2tzb24ncyBMb3JkIE9mIFRoZSBSaW5ncyBmaWxtcy4KWW91IGFsbCBuZWVkIHRvIHRocm93IG91dCBhbnkgcHJlc3VtcHRpb25zIG9mIHdoYXQgc2lkZSBvZiB0aGUgYWlzbGUgaXMgaW5ub2NlbnQgb2YgdGhpcy4gCkJ5IGludiBmSmZpbCd0JyBvIGluZyBwb3dlciBvZiBhZHVsdHMuIApUaGUga2V5IHRvIGxvbmcgZGF5cyBpcyBub3QgaGlraW5nIGZhc3QsIGJ1dCBmaW5kaW5nIGEgY29tZm9ydGFibGUgYWxsIGRheSBwYWNlLiAKIkl0J3Mgc28gY3J1Y2lhbCBpbiBob3cgeW91IGRvIGl0LCIgR3JlZ28gc2FpZC4gIklmIHlvdSdyZSBkb2luZyBpdCBhYm92ZWJvYXJkLCBpdCdzIDEwIHRpbWVzIGhhcmRlci4iClNsaWdodGx5IHRlcnJpZnlpbmcuIFByb2JhYmx5IGhhcyBtdWx0aXBsZSBib2RpZXMgaW4gaGlzIGNsb3NldCBhdCBob21lLiAKQWlyLCB0aGUgcGFpciBhY2NlcHRlZCBhIGRlYWwgZnJvbSBhbGwgdGhlIGRyYWdvbnMgZXhjZXB0IEtldmluIE8gd2hvIGhhZCBtYWRlIGhpcyBvd24gb2ZmZXIuIFRoZSBkZWFsIGdhdmUgZWFjaCBkcmFnb24gYSAzJSByb3lhbHR5IG9uIHNhbGVzLiAKSXQgYWxzbyB2ZXJ5IHNtb290aCB0aG91Z2gsIG5vdCBncmFpbnkgaXIgYW55dGhpbmcuIApJIGFsd2F5cyBib2FyZGVkIGF0IHRoZSB2ZXJ5IGZyb250IChvciBiYWNrPyBnZWV6IGkgZG9uIGV2ZW4gcmVtZW1iZXIgYXQgdGhpcyBwb2ludCkgb2YgdGhlIHRyYWluIGFuZCBhdCBtb3N0IDMgb3IgNCBwZW9wbGUgY291bGQgYm9hcmQgZWFjaCB0aW1lIHRoZSB0cmFpbiBjYW1lLCB3aGljaCBpcyBhYm91dCBob3cgbWFueSBwZW9wbGUgd291bGQgbGluZSB1cCBiZXR3ZWVuIHRyYWlucyBhbnl3YXkgc28gaSBwcmV0dHkgbXVjaCBhbHdheXMgYm9hcmRlZCByaWdodCBhd2F5LiAKSW4gU2VwdGVtYmVyIDIwMTQgaGUgd29uIHRoZSBXb3JsZCBDaGFtcGlvbnNoaXAgb2YgT25saW5lIFBva2VyIGZvciAxLjMgbWlsbGlvbi4gSW4gMjAxNSwgaGUgZmluaXNoZWQgMjV0aCBpbiBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgTWFpbiBFdmVudCBjYXNoaW5nIGZvciAkMjYyLDU3NC4gCklmIHlvdSBydWRlIGFuZCBkb24gc3RvcCBjYWxsaW5nIGhlciBuYW1lcywgeW91IG91dC4gSGVyIHdvcmxkLCBoZXIgbGF3Li4gClRoaXMgaXMgbGlrZWx5IHRoZSBvbmUgcG9zaXRpb24gd2UgY2FuIGFjdHVhbGx5IHNlbGwgb24gdGFraW5nIGEgYmVsb3cgbWFya2V0IGRlYWwuIFNvIHdoeSBub3QgYnJpbmcgYSBmZXcgaW50byB0aGUgYnVpbGRpbmcuLiAKQ2V0dGUgcGljZSBub3VzIHJhcHBlbGxlIGxhICBDb21lZGlhIGRlbGwnQXJ0ZSAgcGFyIHNlcyBzY25lcyBjb21pcXVlcyBldCBzZXMgY29zdHVtZXMuRXhwb3NpdGlvbnMsIGNvbmNlcnRzLCBzcGVjdGFjbGVzIHZpdmFudHMsIHBhcmNvdXJzIGN1bHR1cmVscyBvdSByZW5jb250cmVzIGF2ZWMgbGVzIGhhYml0YW50cy4gRGVzIGNlbnRhaW5lcyBkJ3ZuZW1lbnRzLCBxdWkgcyd0YWxlcm9udCBzdXIgNDggc2VtYWluZXMsIG9udCB0IHBydnVzIGRhbnMgdW4gcHJvZ3JhbW1lIGxhYm9yIGRlcHVpcyAyMDE0LCBhbm5lIGRlIGxhIGRzaWduYXRpb24gZGUgTWF0ZXJhIGNvbW1lIENhcGl0YWxlIGV1cm9wZW5uZSBkZSBsYSBDdWx0dXJlIDIwMTksdGl0cmUgcXUnZWxsZSBwYXJ0YWdlIGF2ZWMgUGxvdmRpdiwgZW4gQnVsZ2FyaWUuNTQgZmFuZmFyZXMgc2FtZWRpIDE5IGphbnZpZXIgMjAxOSBwb3VyIGxhIGpvdXJuZSBpbmF1Z3VyYWxlIE1hdGVyYSwgam95YXUgY2xhc3MgYXUgcGF0cmltb2luZSBtb25kaWFsIGRlIGwnVU5FU0NPRGVzIGZlc3Rpdml0cyBxdWkgZG1hcnJlbnQgY2Ugc2FtZWRpIHBhciB1bmUgZ3JhbmRlIGpvdXJuZSBpbmF1Z3VyYWxlICBsYXF1ZWxsZSBwYXJ0aWNpcGVyb250IDU0IGZhbmZhcmVzLCBlbiBwcm92ZW5hbmNlIGRlcyBjYXBpdGFsZXMgZXVyb3Blbm5lcyBkZSBsYSBDdWx0dXJlIGV0IGRlcyBjb21tdW5lcyBkZSBsYSBCYXNpbGljYXRlLCByZ2lvbiBkb250IE1hdGVyYSBlc3QgbCd1biBkZXMgY2hlZnMgbGlldXguIAoyMCBNaW51dGVuIFppbW1lcmJld3VuZGVybiBwbHVzIHdlaXRlcmUgdW5mcmVpd2lsbGlnZSAyMCBNaW51dGVuLCB1bSBkaWUgVGVjaG5payBpbSBaaW1tZXIgenUgdmVyc3RlaGVuICggYmVpbSBFaW50cmV0ZW4gaW4gZGVuIGRhZiB2b3JnZXNlaGVuIFNjaGxpdHogbmViZW4gZGVyIFQgc3RlY2tlbiB2ZXJrIGRpZXNlbiBQcm9ncmFtbXB1bmt0IGxvY2tlciB1bSAxNSBNaW51dGVuKQpBIGxvdCBvZiB3aGF0IHRoZSBwb2xpY2UgZm9yY2UgaXMgZGlzaW5nZW51b3VzLiBZb3UgYWx3YXlzIGhhdmUgdG8gd2F0Y2ggeW91ciBiYWNrLCBiZWNhdXNlIGlmIGl0IGlzbiBhIG11Z2dlciB0cnlpbmcgdG8gcm9iIHlvdSwgaXQgYSBwb2xpY2Ugb2ZmaWNlciB0cnlpbmcgdG8gd3JpdGUgeW91IGEgdGlja2V0LCBvciBhcnJlc3QgeW91Li4gCkkgZmVlbCB0aGF0IHRoZXkgbWlnaHQgaGF2ZSBoaXQgb24geW91IGJ1dCB0aGVpciBzaWduYWxzIG1pZ2h0IG5vdCBoYXZlIHJlZ2lzdGVyZWQgaW4geW91ciByZWNlaXZlcnMuIFNsaWdodGx5IG92ZXJ3ZWlnaHQgaXMgYmV0dGVyIHRoYW4gdG9vIHRoaW4sIHNvIEkgdGhpbmsgeW91IGFyZSBnb29kLiAKQW5kIGdvZCBkaWQgaXQgZmlsbCBnb29kLiAKVW5jeWNsb3BlZGlhOiBHYWIgZXMgTGF0ZW56ZW4gYXVjaCBzY2hvbiBmcmhlciwgb2RlciBpc3QgZGllIExhdGVuemZvcnNjaHVuZyBlaW5lIHdpZGVyc3ByY2hsaWNoZSBFcmZpbmR1bmc/ClRoZSBRdWVlbidzIERyaXZlRVg0IDRRSklmIHRoZSBpbmZvcm1hdGlvbiBkaXNjbG9zZWQgaXMgYSBkYXRhc2V0IGFuZCBoYXMgYmVlbiByZXF1ZXN0ZWQgaW4gYW4gZWxlY3Ryb25pYyBmb3JtYXQsIGl0IG11c3QgYmUgcHJvdmlkZWQgaW4gYSByZXVzYWJsZSBmb3JtYXQgdGhpcyBtZWFucyB0aGF0IGl0IHNob3VsZCBiZSBtYWNoaW5lIHJlYWRhYmxlIGFuZCBpbiBhIGZvcm1hdCBiYXNlZCBvbiBvcGVuIHN0YW5kYXJkcywgcmF0aGVyIHRoYW4gYSBwcm9wcmlldGFyeSBmb3JtYXQuIFdlIHdpbGwgbm9ybWFsbHkgcHJvdmlkZSB0aGVzZSBkYXRhc2V0cyBhcyBhIHNwcmVhZHNoZWV0IGluIGEgQ1NWIChjb21tYSBzZXBhcmF0ZWQgdmFsdWUpIGZvcm1hdC4gQWZ0ZXIgYSBkYXRhc2V0IGhhcyBiZWVuIGRpc2Nsb3NlZCBpdCB3aWxsIGJlIHB1Ymxpc2hlZCBvbiB0aGUgVW5pdmVyc2l0eSB3ZWJzaXRlLi4gClNvbWUgcGVvcGxlIGFyZSBhYmxlIHRvIGRlbnkgdGhpcyBwcm9ncmFtbWluZywgcmVhbGl6ZSB0aGF0IHdlIGRvbid0IG5lZWQgbW9yZSBodW1hbnMsIGFuZCBvdGhlcnMgc3VyZWx5IGZlZWwgdGhlIHBvaW50bGVzc25lc3Mgb2YgbGlmZSBhbmQgZm9sbG93IHRocm91Z2ggd2l0aCBzdWljaWRlLCBwYXNzaW5nIGludG8gdGhlIHZvaWQuIApUaGlzIHdlZWsgd2UgbGVhcm4gdGhhdCBTaXIgQWxleCBGZXJndXNvbiB0YWxrcyB0byBhIGNhcnRvb24gZmlndXJlaGVhZCAobm8sIG5vdCB0aGUgUXVlZW4pLCBtZW4gYXJlbid0IGFsbG93ZWQgdG8gd2F0Y2ggc29jY2VyIGluIFR1cmtleSwgYW5kIGNoaWNrZW5zIGNhbiBlbnRlciBjYW1lbCByYWNlcy4gVmljdG9yIE9ydGl6IGxlYXJucyB0aGF0IGxlYWRpbmcgd2l0aCBoaXMgZmFjZSBpcyBhIG1hcmdpbmFsIGJveGluZyBzdHJhdGVneS4gClRoZSByZWFzb24gb3RoZXJzIGRvbid0IGFuZCBJIHRvdGFsbHkgZ2V0IGl0LiBJcyBjdXogaXQncyByZWFsbHkgYW5ub3lpbmcgd2hlbiB0aGUgcGVyc29uIGFza2luZyBkb2Vzbid0IGRvIHRoZSBsZWcgd29yay4gCkdvbm5hIG5lZWQgc29tZSBjbGFyaXR5IG9uIHRoaXMsIGVzcGVjaWFsbHkgZm9yIG1vZGVyYXRvcnMgdG8gdW5kZXJzdGFuZCBob3cgdGhpcyBpcyBlbmZvcmNlZC4gVGhpcyBpbmNsdWRlcyBtZW1lcy9tZWRpYSB0aGF0IGNvbWVzIGZyb20gbm9uIEZGWElWIGNvbnRlbnQgc3VjaCBhcyBhIFRWIHNob3cgYW5kIG1pbm9yIEZGWElWIGVsZW1lbnRzIGFyZSBpbnNlcnRlZCBpbnRvIGl0LgpJbXBlcmlhbCAzIGluIDEgT2N0YWdvbiBQb2tlci9CdW1wZXIvRGluaW5nIFRhYmxlIGluIE9hayAgIElmIHlvdSdyZSBsb29raW5nIGZvciBjaGVhcCBvY3RhZ29uIGJ1bXBlciBwb29sIGRpbmluZyB0YWJsZXMgZm9yIHNhbGUgb25saW5lLCB0aGVuIHRoZSBJbXBlcmlhbCBjYW4gaG9sZCB1cCB0byA4IHBva2VyIHBsYXllcnMgYXQgYSB0aW1lLiAKV2FkZSBSb2Jzb24ncyBtb3RoZXIgdGVzdGlmaWVkIGluIHRoZSAyMDA1IHRyaWFsIHRoYXQgc2hlIGZ1bm5lbGVkIHdhZ2VzIHRocm91Z2ggSmFja3NvbidzIGNvbXBhbnkgYW5kIHdhcyBnaXZlbiBhIHBlcm1hbmVudCByZXNpZGVudCB2aXNhLiBKaW1teSBTYWZlY2h1Y2sncyBwYXJlbnRzIGdvdCBhIGhvdXNlLiBKb3JkaWUgQ2hhbmRsZXIncyBtb3RoZXIgZ290IGEgZGlhbW9uZCBicmFjZWxldC5Ud28gb2YgdGhlIGZhdGhlcnMgb2YgdGhvc2Ugd2hvIGhhdmUgYWNjdXNlZCBKYWNrc29uLCBKb3JkaWUgQ2hhbmRsZXIgYW5kIFdhZGUgUm9ic29uLCBjb21taXR0ZWQgc3VpY2lkZS4gCkdvb2QgbmV3cyBmcm9tIHRoZSBwaHlzaW8gd2hvIHdvcmtlZCBvdXQgInllYXJzIG9mIG5lZ2xlY3QgaW4gbXkgR2x1dGV1cyBNZWRpdXMiLiAKVGhpcyBpcyBhIHN0b3J5IGJ5IEhlbnJ5IEhhc3NlIGFuZCBpdCBpbnZvbHZlcyBhIGdyZWF0IHNjaWVudGlzdCBhbmQgdGhlIGhpcyBlbGl4aXIgY2FsbGVkICJTaHJpbngiIHdoaWNoIGFmdGVyIGl0IGhhcyBiZWVuIGluamVjdGVkIGludG8gaGlzIGFzc2lzdGFudCBzaHJpbmtzIHRoZSBtYW4gaW1tZWFzdXJhYmx5LCBzbyBzY2llbmNlIGZpY3Rpb25hbGx5IHNtYWxsLCB0aGF0IGhlIGhhcyBwYXNzZWQgdGhyb3VnaCB0aGUgbWljcm9zY29tb3MgYW5kICJzdWJ1bml2ZXJzZXMiIHRvIHRoZSBwb2ludCB3aGVyZSBoZSBlbWVyZ2VzIG9uIGEgcHJpbWl0aXZlIHBsYWNlIGNhbGxlZCBFYXJ0aC4gCk5vIG9uZSBzYWlkIGFueXRoaW5nLiAKQU9MIHdhcyBhIG1hZGhvdXNlLi4gCkkgdGFrZSBpdCBJIGhhdmUgbm90IHdvbiB0aG91Z2ggYmVjYXVzZSBJIHN0aWxsIGhhdmUgbXkgdHJhZGVtYXJrIHBvcnRseSBmaWd1cmUsIGVzcGVjaWFsbHkgYWZ0ZXIgc2lua2luZyBtb3JlIHRoYW4gYSBmZXcgcGludHMgb2YgdGhlIGFmb3JlbWVudGlvbmVkIGJpdHRlci4KSWYgYWRzIHdlcmUgZGlmZmVyZW50IGNvbG9ycyBvbiBkaWZmZXJlbnQgc3VicmVkZGl0cywgSSB0aGluayB0aGF0IHdvdWxkIGJlIGV2ZW4gbW9yZSBjb25mdXNpbmcuIApKb2UgY2xhaW1lZCBoZSB3YXMgYSBnb29kIGtpZCwgYXMgaW4gZ29vZCBhdCBjaGVhdGluZyBhbmQgc3RlYWxpbmcgcmF0aGVyIHRoYW4gYmVpbmcgZ29vZCBiZWhhdmVkLiBUaGF0J3Mgd2hhdCB0aGUgbW9iIGd1eXMgd2VyZSBsb29raW5nIGZvciBpbiB0aGUgc3RyZWV0IGtpZHMuCldlIGFsbCBrbm93IHBsYXlpbmcgYWdhaW5zdCBhIG1hbmlhYyBjYW4gYmUgZnJ1c3RyYXRpbmcgYnV0IGludmlnb3JhdGluZyBhcyB3ZWxsLiBUaGlzIGlzIG9uZSBvZiB0aG9zZSBzaXR1YXRpb25zIHdoZXJlIG15IGluc3RpbmN0cyBndWlkZSBtZSBtb3JlIHRoYW4gbXkgcG9rZXIgY2FsY3VsYXRvciBzb2Z0d2FyZSwgZXNwZWNpYWxseSBpZiB5b3UgYXJlIHNlYXRlZCBuZWFyIHRoZSBtYW5pYWMgYW5kIHlvdSBrbm93IHlvdSdyZSBnb2luZyB0byBiZSBoZWFkcyB1cC4gCkFsc28sIHRoZSBhY2NvdW50YW50IGNhbiBrZWVwIGRvaW5nIHdoYXQgaGUgZG9pbmcsIGJ1dCB0aGF0IGRvZXNuIG1lYW4gSSBoYXZlIHRvIGhpcmUgaGltLiBJZiBoZSB3b3JrZWQgZm9yIHRoZSBzdGF0ZSBhbmQgbXkgdGF4IGRvbGxhcnMgd2VudCB0byBmdW5kaW5nIGhpcyBzYWxhcnksIEkgd291bGQgcHJvdGVzdCBqdXN0IGFzIG11Y2gsIHRoZSBzYW1lIHdheSBJIHByb3Rlc3RlZCB0aGUgY3VycmVudCBDb25zdGFibGUgYW5kIENvcm9uZXIuIFRoYXQgdGhlIHdob2xlIHBvaW50LCB0aGF0IHBlb3BsZSBkb24gd2FudCB0byBzdXBwb3J0IGhpbSBmaW5hbmNpYWxseS4gSWYgdGhleSBidXkgYSB0aWNrZXQsIHRoZXkgc3VwcG9ydGluZyBoaW0uCkhhaGFoYWggdGhhdCBmaW5lLiBCZWVmIGZhdCAodGFsbG93KSBpcyBhIHN1cGVyIHRyYWRpdGlvbmFsIGJlYXV0eSBpbmdyZWRpZW50IHRob3VnaC4gCk92ZXJ2aWV3IGZvciBraXR0eXdpdGhjbGF3cwpBc3BlcmdlciBmYWxscyBhbG9uZyB0aGUgQXV0aXN0aWMgc3BlY3RydW0uIApDbG90aGluZywgRm9vdHdlYXIgYW5kIEVxdWlwbWVudCAgIFRoaXMgcmlzayBmYWN0b3IgaXMgYmFzZWQgb24gaG93IHN1aXRhYmxlIHRoZSBlcXVpcG1lbnQgaXMgaW4gdHJhaW5pbmcgYW5kIGNvbXBldGl0aW9uIHNpdHVhdGlvbnMuIElmIGFuIGluZGl2aWR1YWwgaXMgd2VhcmluZyBpbmNvcnJlY3QgZm9vdHdlYXIgdGhlbiB0aGVpciBmb290IG9yIGFua2xlIHdpbGwgbm90IGJlIHByb3RlY3RlZCBlZmZlY3RpdmVseSBhbmQgZm9yY2VzIHBsYWNlZCBvbiB0aGVzZSBhcmVhcyB3aWxsIG5vdCBiZSBkaXNwbGFjZWQgZWZmaWNpZW50bHkgaW5jcmVhc2luZyB0aGlzIHBlcnNvbidzIHJpc2sgb2YgaW5qdXJ5LiBGb3IgZXhhbXBsZSwgaWYgYSBmb290YmFsbCBwbGF5ZXIgaXMgd2VhcmluZyBydW5uaW5nIHNob2VzIG9uIGEgd2V0LCBzbGlwcGVyeSBmb290YmFsbCBwaXRjaCBpbnN0ZWFkIG9mIHRoZSBjb3JyZWN0IGZvb3RiYWxsIGJvb3RzIHRoZW4gdGhleSBhcmUgZ29pbmcgdG8gc2xpcCBvdmVyLiAKSWYgeW91IHdvdWxkIGxpa2UgdG8ga25vdyBtb3JlIGFib3V0IHRoZSBtYW4gYmVoaW5kIHRoZSBtb25pa2VyLCBsZWF2ZSBhIG1lc3NhZ2UgaW4gdGhpcyByYXRoZXIgc25henp5IGJveCBhbmQgSSdsbCBzZWUgd2hhdCBJIGNhbiBkby4uIApCeSByZW1vdmluZyB0aGUgc28gY2FsbGVkIGtpbmsgaW4gdGhlIGhvc2UgdGhlIGJvZHkgY2FuIHNlbmQgbm9ybWFsIG5lcnZlIHByb3ByaW9jZXB0aXZlIHNpZ25hbHMgdGhhdCBhcmUgZXNzZW50aWFsIHRvIG92ZXJhbGwgZ29vZCBoZWFsdGguIApQZXJoYXBzIHRoZSBJTUYgZXF1YXRlcyAnZWNvbm9taWMgYWN0aXZpdGllcycgd2l0aCBncm93dGggaW4gR0RQIGFuZCAnZXh0ZXJuYWwgcG9zaXRpb24nIHdpdGggdGhlIGxldmVsIG9mIGZvcmVpZ24gZXhjaGFuZ2UgcmVzZXJ2ZXMgb25seS4gCkFuZCBJIGFncmVlLCBCYXJiIGRvZXNuIGhhdmUgbXVjaCwgaWYgYW55LCBjcmVkaWJpbGl0eSBsZWZ0LiAKQnViYmxlIGN1dCBCYXJiaWUuIFRoZXkgY2FtZSBpbiBhIHZhcmlldHkgb2YgaGFpciwgZXllLCBsaXAgY29sb3JzLiBTaGUgY2FtZSB3aXRoIGEgc3RyYWlnaHQgaGFyZCBsZWdzLiAKQSBxdWludGV0IG9mIGRlc3BlcmFkb3Mgd2VudCBkb3duIGZvciBhIHZpb2xlbnQgZ3VucG9pbnQgcm9iYmVyeSBGcmlkYXkgdGhhdCBsZWZ0IGEgaG9tZW93bmVyIHNjYXJyZWQgYnkgYSB0aHVnIGtuaWZlLgpUaGVyZSBpcyBhIGNoYW5jZSBmb3IgdXMgdG8gcG9zc2libHkgY2hvb3NlIGEgcG9ydGlvbiB0aW1lIHRlYWNoaW5nIHBsYW4gb3IgY29tcGxldGUgdGltZSB0cmFpbmluZyBzeXN0ZW0uIFRoZSBzdWJqZWN0cyBsaWtlIGV0aGljcywgYW5hdG9teSwgcGh5c2lvbG9neSwga2luZXNpb2xvZ3kgZXRjIG1pZ2h0IGJlIHVuZGVydGFrZW4gaW4gbWFzc2FnZSB0aGVyYXB5IGluc3RydWN0aW9uIGFwcGxpY2F0aW9ucy4gSW4gYSBmZXcgcHJvZ3JhbXMgZW50ZXJwcmlzZSBtYW5hZ2VtZW50IG1heSBhbHNvIGJlIGFkZGVkIGFsb25nIHdpdGggb3RoZXIgbWFzc2FnZSBzdHJhdGVnaWVzLiAKVGhlIGx5cmljcyBtYXkgaGF2ZSBiZWVuIHdyaXR0ZW4gd2l0aCBkaWZmZXJlbnQgaW50ZW50aW9ucyBhdCBmaXJzdCBidXQgSSBkbyBmZWVsIHRoZXkgaGF2ZSBldm9sdmVkIHRvIGFwcGx5IHRvIGV2ZXJ5b25lLCBjaHJpc3RpYW4gb3Igbm90LiAKV2UgZ2F2ZSB0aGVtIGNsaW50b24sIHdobyB3YXMgYSBiaXQgb2YgYSBzY3VtYmFnIHRvIHdvbWVuIGluIGhpcyBwYXN0LiBidXQgYmVzaWRlcyB0aGF0LiBoaXMgd29yc3QgY3JpbWUgd2FzIGdpdmluZyB1cyBhIHN1cnBsdXMuCiAxIHBvaW50ICBzdWJtaXR0ZWQgMTggZGF5cyBhZ29JIHdhcyBib3JuIGFuZCByYWlzZWQgYSBUZXJwIChsaWtlIGV2ZXJ5IGhvbWUgZm9vdGJhbGwgYmFza2V0YmFsbCBnYW1lKSBhbmQgdGhlbiBJIGRlZmVjdGVkIHRvIHRoZSBjbGVhcmx5IHN1cGVyaW9yIHNjaG9vbCAoc29ycnkgTW9tLikgKEJ1dCBpbiBhbGwgc2VyaW91cywgUFNVIGhhZCB0aGUgbWFqb3IgSSB3YW50ZWQgYW5kIEkgZmVsbCBpbiBsb3ZlIHdpdGggdGhlIHNjaG9vbCB0aGUgbW9tZW50IEkgc2V0IGZvb3Qgb250byBjYW1wdXMuKUkgd2FzIGEgZnJlc2htYW4gYXQgUGVubiBTdGF0ZSB3aGVuIFRoZSBTY2FuZGFsIGJyb2tlIG91dC4gCkJhbmdsYSB2aWRlbyBzdGF0dXMgTXA0IERvd25sb2FkIC4gSW5zaWRpb3VzIFRoZSBMYXN0IEtleSAoMjAxOCkgMTA4MHAgICBCUnJpcCAgIHgyNjQgICBERCA1LjEgIFtIaW5kaSArIFRhbWlsICsgLiAKTm93IHdlIGNhbiBkZWNvbXBvc2UgdGhlc2UgZm9yY2VzIGludG8gdGhlaXIgY29tcG9uZW50cyBpbiB0aGUgeCBkaXJlY3Rpb24gaW4gdGhlIHkgZGlyZWN0aW9uLiBTaW5jZSB0aGUgdHdvIGNoYXJnZXMgYXJlIHRoZSBzYW1lIHNpemUsIGFuZCBtYWduaXR1ZGUsIGFuZCBzYW1lIGRpc3RhbmNlIGZyb20gdGhlIHRvcCBjaGFyZ2UgaW4gdGVybXMgb2Ygb24gdGhlIHggYXhpcywgd2UgY2FuIG1ha2UgYSBzeW1tZXRyeSBhcmd1bWVudCB0aGF0IHRoZXNlIGZvcmNlcyBjYW5jZWwuIFdoaWNoIG1lYW5zIGFsbCB3ZSBuZWVkIHRvIGRvIGlzIGNhbGN1bGF0ZSB0aGUgZm9yY2UgaW4gdGhlIHkgZGlyZWN0aW9uLi4gCiJIZSB3YXMgYSB3ZWFsdGh5IGd1eSBhbmQgaGUgbGlrZWQgdG8gcGxheSB2aWRlbyBwb2tlciBhbmQgaGUgbGlrZWQgdG8gZ28gb24gY3J1aXNlcywiIHRoZSBndW5tYW5zIHNlZW1pbmdseSBiYWZmbGVkIGJyb3RoZXIgRXJpYyBQYWRkb2NrIHRvbGQgcmVwb3J0ZXJzIGZyb20gaGlzIGRvb3JzdGVwIGluIE9ybGFuZG8sIEZsb3JpZGEsIG9uIE1vbmRheS4KRml2ZSBodW5kcmVkIHNwaW5zIHRvIGdldCB0aGlzIG9mZmVyLiBBcmUgeW91IHNlcmlvdXM/IEFyZSB5b3UgcmVhbGx5IGdvaW5nIHRvIGRvIGFsbCB0aGVzZSBzcGlucz8gWW91IGxvc2UgbW9yZSBtb25leSB2YWx1ZSBvZiBmaXZlIGh1bmRyZWQgc3BpbnMgaW4gY29tcGFyaXNvbiB0byBvbmUgaHVuZHJlZCBmcmVlIHNwaW5zLiAKU3VyZSB5b3UgbWF5IHByZWZlciBpdCwgYnV0IG92ZXJhbGwsIGl0IGlzIGFuIGluZmVyaW9yIGRldmljZSwgaGVuY2UgdGhlIHByaWNlIGFuZCBwb3B1bGFyaXR5IGRpZmZlcmVuY2UuIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvTm90IHJlYWxseSBwb3NzaWJsZSB0byBkbyBwcm9wZXJseS4gCkhvd2V2ZXIgdHJhZGl0aW9uYWwgdGhpbmdzIHRoYXQgd2UgaGF2ZSBoaXN0b3JpY2FsbHkgcmVjZWl2ZWQgd2l0aCBwYXN0IGNvbnRlbnQgZHJvcHMgKHZlbmRvciByZXNldHMsIHN0cmlrZXMsIGFuZCBjcnVjaWJsZSBtYXBzL21vZGVzKSBiZWluZyBhYnNlbnQgd2l0aCB0aGUgYW5udWFsIHBhc3Mgd2hpbGUgbm90IG5lY2Vzc2FyaWx5IGEgc2xhcCBpbiB0aGUgZmFjZSBjYW4gc3RpbGwgZmVlbCBsaWtlIGl0IHRvIGxvbmcgdGVybSBwbGF5ZXJzIHdobyBoYXZlIGJlY29tZSBhY2N1c3RvbWVkIHRvIHRoZXNlIGluIHRoZSBwYXN0LiAKRnJvbSBoYXZpbmcgdG8gcmVhY3QgdG8gYSBmcmF1ZCBhdG9taWMgYm9tYi4gQWxlcnQ6IEx0LiBCeXJkIHN1Y2NlZWRzLCB0aGUgWm9yaWFucyBhcmUgZXhwb3NlZCwgYW5kIHRoZXkgb2YgY291cnNlIGJsb3cgdGhlbXNlbHZlcyB0byBraW5nZG9tIGNvbWUgaW4gdGhlIGVuZC4uIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZVNvdXJjZTogTmV3Y2FzdGxlIEhlcmFsZCBQYXJyYW1hdHRhRWVscyBsZWdlbmQgTmF0aGFuIEhpbmRtYXJzaCBlc3RpbWF0ZXMgaGUgbG9zdCBhcyBtdWNoIGFzICQzMDAsMDAwIGFzIGEgcmVzdWx0IG9mIGFuIG91dCBvZiBjb250cm9sIGdhbWJsaW5nIGFkZGljdGlvbiBzcGFubmluZyBtb3N0IG9mIGhpcyBOUkwgY2FyZWVyLCBhIENsdWJzIE5TVyBldmVudCBpbiBOZXdjYXN0bGUgaGVhcmQgeWVzdGVyZGF5LiAKV2hlbiB0aGlzIGhhcHBlbnMgeW91IG1heSBoYXZlIGluY29udGluZW5jZS4gClNoZSBoYWQganVzdCBmb3VuZCBvdXQsIG9uIGhlciB3ZWRkaW5nIGRheSwgdGhhdCBoZXIgZ3Jvb20gaGFkIG9uY2UgYmVlbiBlbmdhZ2VkIHRvIG9uZSBvZiBoZXIgYnJpZGVzbWFpZHMuIFRoZSBncm9vbSB3YXMgTk9UIGNoZWF0aW5nIG9uIGhlciwgYnV0IGp1c3QgbmV2ZXIgZ290IGFyb3VuZCB0byB0ZWxsaW5nIGhlciB0aGF0IGhlIGFuZCBvbmUgb2YgdGhlaXIgIm11dHVhbCBmcmllbmRzIiBoYWQgb25jZSBiZWVuIGFuIGl0ZW0uIApPbmxpbmUgY2FzaW5vcyBtYWtlIHVzZSBvZiBjaGVjayBib3hlcyBzdWNoIGFzICJmb2xkLCIgInJhaXNlIGFueSIgb3IgImNhbGwgYW55LiIgVGhlIHRoaW5nIHlvdSBzaG91bGQgbG9vayBmb3IgaGVyZSBpcyB0aGUgY29tbWFuZCAicmFpc2UgYW55LCIgc2luY2UgaXQgZGVub3RlcyBhIHN0cm9uZyBoYW5kIHdoaWxlICJjaGVjayIgZGVub3RlcyBhIHdlYWsgaGFuZCwgYW5kICJjYWxsIGFueSIgbWVhbnMgdGhlIG9wcG9uZW50IGlzIHdhaXRpbmcgZm9yIGEgbWlyYWNsZSBjYXJkLi4gClRoZXNlIGxhc3QgMTAgeWVhcnMgaGF2ZSBkZWZpbml0ZWx5IHRha2VuIGEgdG9sbCBvbiBtZSBhcyBhIGZhbi4gSSBzdGlsbCBsb3ZlIHRoZSBWb2xzLCB0aGV5IGFyZSB0aGUgc3BvcnRzIHRlYW0gSSBjYXJlIGFib3V0IHRoZSBtb3N0IGJ5IGEgbG9uZyBzaG90LiBUaGF0IHNhaWQsIEkgbG9vayBhdCBTYXR1cmRheXMgZGlmZmVyZW50bHkgbm93LiAKT24gdGhlIERlYWxlciBQb2tlciBDYXJkIFByb3RlY3RvciBjYW4gaGVscCB0aGVtIGEgbG90IHRvIGltcHJvdmUgb24gcGVyc29uYWwgbGV2ZWwgdGhhdCBoYXMgYWN0dWFsbHkgaW5jcmVhc2VkIHRoZSBzYWxlcyBvZiB0aGUgcG9rZXIgbWVyY2hhbnRzIG91dCB0aGVyZS4gVGhlIHBva2VyIGZhbnMgYXJlIGFsc28gZW50aWNpbmcgdGhlIHBva2VyIG1lcmNoYW50cyB0byBzZWxsIHRoZXNlIHByb2R1Y3RzIGJleW9uZCB0aGVpciBsb2NhbCBtYXJrZXQuIFRoZXkgYXJlIHRyeWluZyB0byBwdXJjaGFzZSBlYWNoIGFuZCBldmVyeSBwb2tlciBwcm9kdWN0cyByaWdodCBmcm9tIHRoZSBtYXJrZXQuIApUaGlzIGlzIGRheSAyIGhhaXIsIHNvIHllc3RlcmRheSBJIHdhc2hlZCB1cHNpZGUgZG93biB3aXRoIGRldmFjdXJscyBsb3cgcG9vIGRlbGlnaHQgc2hhbXBvbywgY29tYmVkIG91dCB3aXRoIHNob3dlciBjb21iLCB0aGVuIHNxdWlzaGVkIGluIHRoZSBkZXZhY3VybCBkZWxpZ2h0IGNvbmRpdGlvbmVyLiBBZnRlciBnZXR0aW5nIG91dCBvZiB0aGUgc2hvd2VyLCBJIHNxdWVlemVkIG91dCBtb3N0IG9mIHRoZSBkcmlwcyBhbmQgd2l0aCBqdXN0IG15IGhhbmRzLCBhcHBsaWVkIGRldmFjdXJsJ3MgZ2VsIGFsbCB0aGUgd2F5IHRvIHRoZSByb290cyAoY2FuJ3QgcmVtZW1iZXIgdGhlIGV4YWN0IG5hbWUgYnV0IGl0J3Mgbm90IHdhdmVtYWtlciksIGFuZCB1c2VkIGEgVCBzaGlydCB0byBzcXVlZXplIG91dCBleHRyYSBtb2lzdHVyZSBub3QgcXVpdGUgcGxvcHBpbmcsIGJ1dCBzcXVlZXppbmcgZm9yIGEgc2Vjb25kIG9yIHR3by4gCkEgZmV3IGRheXMgbGF0ZXIgSSB3YXMgY29tcGV0aXRpdmUgaW4gYSBsb2NhbCBoaWxsY2xpbWIuLiAKSWYgSSB3YXNuIG9uIHdhdGNoLCB0aGVuIGV2ZXJ5Ym9keSBoYWQgYSBwbGFjZSB0aGV5IGhhZCB0byBnbyBhbmQgbWluZSB3YXMgb24gdGhlIHN0YXJib2FyZCBzaWRlIGRlcHRoIGNoYXJnZSBzdG9yZS4gQW5kIEkgYmUgdGhlcmUgdW50aWwgd2UgZ290IHRoZSBhbGwgY2xlYXIuIApOb3QgaGFyZCwgbWluZCB5b3UsIGJ1dCBlbm91Z2ggdG8gbWFrZSBoZXIgcG9pbnQuIApPciBhdCBsZWFzdCB0aGUgc29ydCBvZiBzdHVkZW50cyBhbnkgY29sbGVnZSBzaG91bGQgd2FudCB0byBhdHRyYWN0ICB0aGUgb25lcyB3aG8ga25vdyB0aGF0IGl0IG5vdCBhYm91dCAicGVyZmVjdCIgYnV0IGFib3V0IGtub3dsZWRnZSAgd2hpY2ggY2FuIGhhcHBlbiBpbiBjcnVtYmxpbmcgYnVpbGRpbmdzIHdpdGggbm8gYWlyIGNvbmRpdGlvbmluZyBhbmQgd2VlZHMgYWxsIGFyb3VuZC4gQW5kIGtub3dsZWRnZSB3aGljaCBjYW4gaGFwcGVuIHdpdGhvdXQgdGhlIGhlbHAgb2YgdmljZSBwcmVzaWRlbnRzIHdpdGhvdXQgZW5kIGVhcm5pbmcgNSB0aW1lcyB3aGF0IHRoZSBwcm9mZXNzb3JzIHRlYWNoaW5nIHRoZW0gZWFybi4gSW4gZmFjdCwgSSBiZSB3aWxsaW5nIHRvIHNheSB0aGF0IGZldyBzdHVkZW50cyBjYXJlIGFib3V0IHRoZSBhZG1pbmlzdHJhdG9ycyB0aGV5IGVuY291bnRlciBpbiB0aGVpciBmb3VyIHllYXJzIGF0IGNvbGxlZ2UgYW5kIGlmIHRoZSBjb3N0IG9mIHRoZSBhZG1pbmlzdHJhdG9ycyB3YXMgb2ZmZXJlZCB0byB0aGVtIGFzIGEgY2hvaWNlLCBhIHNvcnQgb2YgZWR1Y2F0aW9uYWwgbWVudSwgbW9zdCBzdHVkZW50cyB3b3VsZCBjaG9vc2UgbG93ZXIgY29zdHMgb3ZlciAicGVyZmVjdC4iLiAKSGVybyB3YWtlcyB1cCB3aXRoIFFTUUggaW4gQkIuIApUaW0gYWR2b2NhdGVzIGZvciBvcGVuIGRpc2N1c3Npb24gd2l0aCBtaW5pbWFsIGJhbm5pbmcsIGhlIGV2ZW4gc2F5cyB0aGF0IFR3dHRlciBpcyBiYXNpY2FsbHkgYSBwdWJsaWMgc3BhY2UgdGhhdCBGcmVlIFNwZWVjaCBsYXdzIHNob3VsZCBhcHBseSB0b28gYW5kIGluIHRoaXMgcG9kY2FzdCBoZWF2aWx5IGltcGxpZWQgaXQgc2hvdWxkIGhhdmUgbm8gcnVsZXMgYmV5b25kIHdoYXQgdGhlIDFzdCBhbWVuZG1lbnQgcmVzdHJpY3RzLgpJIHVzZWQgdG8gaGF2ZSBhIHdpZGUgbm9zZSBhbmQgd2FzIGEgdmVyeSBoYXBweSBjYW1wZXIgKGhlYWx0aCB3aXNlKSwgYWx0aG91Z2ggSSBkaWRuIGxpa2UgdGhlIHdheSBpdCBsb29rZWQuIE5vdyBJIGFjdHVhbGx5IGVudnkgcGVvcGxlIHdobyBoYXZlIG5vc2VzIGxpa2UgbXkgb2xkIG5vc2UgKGFuZCBldmVuIHNlZSB0aGVtIGFzIGF0dHJhY3RpdmUpIGFuZCB3aGVuIEkgc2VlIHBlb3BsZSB3aXRoIG5hcnJvdyBub3NlcyBJIGRvbiBrbm93IGhvdyB0aGV5IGhhdmUgbGl2ZWQgdGhlaXIgd2hvbGUgbGl2ZXMgbGlrZSB0aGF0LiBJIGd1ZXNzIG1vc3QgZG9uIGtub3cgYW55IG90aGVyIHdheSBvciBtYXliZSB0aGV5IHVzZSBsZXNzIGFpciwgSSBkb24ga25vdy4gCkkgd2FzIGZvcnR1bmF0ZSB0byBnZXQgYSBwaWVjZSBvZiBpdC4gClRoZSBmaXJzdCBwYXJ0IG9mIHRoZSBxdW90ZSAoIGNhcmRzIHlvdSBhcmUgZGVhbHQgaW5kaWNhdGVzIGx1Y2sgd2hpbGUgdGhlIHNlY29uZCBwYXJ0ICggeW91IHBsYXkgaXQgaW5kaWNhdGVzIHNraWxsLiAKSSBhbSBvbGQgbm93LCBteSBtaW5kIGlzIGdvbmUsIG15IG1lbW9yaWVzIGFyZSBmYWRpbmcsIGJ1dCBJIGFtIHN0aWxsIGJyZWF0aGluZywgc3RpbGwgZ29pbmcuCkkgZG8gYWdyZWUgdGhhdCByZW1vdmluZyB0aGUgY2FwIG9uIHRoZSBudW1iZXIgb2YgUmVwcmVzZW50YXRpdmVzIHdvdWxkIGJlIGEgYmlnIGltcHJvdmVtZW50LgpUb21vaGlybyBJc2hpaSB2cy4gWXVqaSBOYWdhdGEgICA0LjI1IHN0YXJzICAgRnVja2luZyBhd2Vzb21lIG1haW4gZXZlbnQuIFRoaXMgd2FzIGFsbW9zdCBhIGNhcmJvbiBjb3B5IG9mIHRoZSBJc2hpaSBHb3RvIG1hdGNoIGZyb20gbGFzdCB5ZWFyIEcxLCBqdXN0IHR3byBndXlzIGJlYXRpbmcgdGhlIHNoaXQgb3V0IG9mIGVhY2ggb3RoZXIgZm9yIDIwIG1pbnV0ZXMuIEl0IGRpZG4gYmxvdyBhd2F5IGV4cGVjdGF0aW9ucywgYnV0IGl0IGRpZG4gZmFsbCBzaG9ydCBvZiB0aGVtIGVpdGhlci4gRXhhY3RseSB3aGF0IEkgd2FudGVkIGZyb20gdGhlc2UgZ3V5cy4KSW4gdGVybXMgb2YgY29uY2VhbGluZyBmaXJlYXJtcyBJIG5vdCBzdXJlIGhvdyB3ZSB3b3VsZCBkbyB0aGF0IGluIHVuaWZvcm0sIGhvd2V2ZXIgcGVyc29uYWxseSBJIGZvdW5kIG15IGV4cGVyaWVuY2UgaGFzIGJlZW4gY29tcGxldGVseSB0aGUgb3Bwb3NpdGUgZnJvbSB3aGF0IHRoZSBhcnRpY2xlIGltcGxpZXMuIFBlb3BsZSBzZWVtIHRvIGZpZ2h0IGFuZCBwbGF5IHVwIHdpdGggbWUgYW5kIG15IGNvbGxlYWd1ZXMgYSBsb3QgbGVzcyAuIDE3NyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28uIApCdXQgd2hlbiBpdCBjb21lcyB0byB0cmlwcywgSSBvbmUgYm91cmdlb2lzIG1vdGhlcmZ1Y2tlciB3aGVuIGl0IGNvbWVzIHRvIGhvdGVscyBhbmQgcmVzdGF1cmFudHMuIElmIGl0IEV1cm9wZSwgd2UgdHJ5IHRvIGZpbmQgdGhlIG1vc3QgY2hhcm1pbmcgc21hbGwgYm91dGlxdWUgaG90ZWxzIHdlIGNhbiwgYW5kIGluIGEgVVMgY2l0eSwgd2Ugc3RheSBpbiByaWNoIGFzc2hvbGUgZWxlZ2FudCBvbGRlciBob3RlbHMgbGlrZSB0aGUgV2FsZG9yZiBvciBBbGdvbnF1aW4gaW4gTmV3IFlvcmsgb3IgdGhlIFJpdHogb3IgUm9vc2V2ZWx0IGluIE5ldyBPcmxlYW5zLCBhbmQgdGhlIERyYWtlIGluIENoaWNhZ28gaXMgcHJldHR5IGRlY2VudC4gCklmIGFueW9uZSB0ZWxscyB5b3UgdGhhdCBiZWluZyBnYXkgaXMgYSBjaG9pY2UsIGFzayB0aGVtIHRvIGJlIGdheSBmb3IgYSBzZWNvbmQgdGhlbi4gSWYgaXQncyBhIGNob2ljZSwgdGhleSdkIGJlIGFibGUgdG8gYmUgZ2F5IGZvciA1bWluIGFuZCB0aGVuIHN3aXRjaCBiYWNrIHRvIGJlaW5nIHN0cmFpZ2h0LiBJZiB0aGV5IHNheSAiSSBkb24ndCB3YW50IHRvIiwgeW91IGNhbiBzYXkgIm5vdCB5ZXQsIGJ1dCBvbmNlIHlvdSBtYWtlIHRoZSBjaG9pY2UgdG8gc3dpdGNoIHlvdSB3aWxsLCBidXQgeW91IGNhbiBhbHdheXMgc3dpdGNoIGJhY2shIgpUaGF0IHByZXR0eSBtdWNoIGNvbnZpbmNlZCBtZSB0aGF0IHlvdSBndXlzIHdlcmUgdGVsbGluZyB0aGUgdHJ1dGguIEFuZCBJJ20gY2VydGFpbiB0aGF0IGFueSBtZW50aW9uIG9mIHN1Y2ggc2NhbmRhbHMgd2lsbCByZXN1bHQgaW4gYSBiYW4gc28gbm8gb25lIGluIFRfRCB3aWxsIGtub3cgb2YgdGhlbS4gVGhlcmUncyBhIGxvdCB0aGV5IGRvbid0IGtub3cgaXQgbWFrZXMgaXQgZGlmZmljdWx0IHRvIHRhbGsgdG8gdGhlbSB3aGVuIEkgaGF2ZSB0byBleHBsYWluIHRoZSBwYXN0IGRlY2FkZS4KSGUgZGlkbiBrbm93IHRoYXQgaXMgd2FzIHRoZSBkZWFsZXIgcmVzcG9uc2liaWxpdHkgdG8gY29udHJvbCB0aGUgZ2FtZS4gCkp1c3QgbG9va2luZyBmb3Igc29tZSB0aG91Z2h0cyBzaW5jZSBJJ3ZlIG9idmlvdXNseSBiZWVuIGxvc2luZyBhcyBvZiBsYXRlLiBJIHN0YXJ0ZWQgcGxheWluZyBwb2tlciAxLjUgeWVhcnMgYWdvIHdpdGggbXkgZnJpZW5kcyBhdCBzY2hvb2wgZm9yIHJvdWdobHkgYW4gaG91ciBhIGRheSBkdXJpbmcgYnJlYWsuIEFzIHRoZSB0aW1lIHdlbnQgb24gSSBzdGFydGVkIHdhdGNoaW5nIHBva2VyIHZpZHMgdG8gZ2V0IHRoZSBmdW5kYW1lbnRhbHMgYW5kIHNvb24gYWZ0ZXIgSSBzdGFydGVkIHRvIGRvIG11Y2ggYmV0dGVyIGFuZCBwcm9iYWJseSB3b24gb3IgY2FtZSBpbiBzZWNvbmQgb3VyIG1pbmkgdG91cm5hbWVudHMgODAlIG9mIHRoZSB0aW1lLi4gCkV0IGNoZXogbGVzIFBpY3RlcyBkICBsIGhpc3RvcmlxdWUsIGxhIHRyYW5zbWlzc2lvbiBkZSBsIGV0IGxhIHN1Y2Nlc3Npb24gIGxhIHJveWF1dCBzZSBmYWlzYWllbnQgZW5jb3JlIHBhciBsZXMgZmVtbWVzIGF1IDZtZSBzaWNsZSBkZSBub3RyZSByZS4gCkhlIGhhcyA1IFBybyBUb3VyIFRvcCA4ICh3aXRoIDEgd2luKSBhbmQgMTMgR3JhbmQgUHJpeCBUb3AgOCAod2l0aCA1IHdpbnMpIEluIDIwMTMgaGUgd2FzIGluZHVjdGVkIGludG8gdGhlIEhhbGwgb2YgRmFtZS4uIApPbmNlIHlvdSBzaWduIHVwIHdpdGggdGhlIEJlc3QgUG9rZXIgU2l0ZXMgT25saW5lLCB5b3UgYXJlIGd1YXJhbnRlZWQgdG8gZW5qb3kgdGhlIGdhbWUgYW5kIGxpa2V3aXNlIGdhaW4gbW9uZXkgd2l0aCBhYmlsaXR5IGFuZCBmYXRlLiBJZiB5b3UgYXJlIG5vdCBjb250ZW50IHdpdGggb25lIHdlYiBzaXRlLCB5b3UgY291bGQgYWx3YXlzIGpvaW4gYSBkaWZmZXJlbnQgb25lIG9uIHRoZSBsaXN0aW5nLiAKQnV0IHRvIHdhbnQgdG8gc3RyaXAgb25lIG9mIG91ciBtb3N0IGxveWFsIGFuZCBwYXNzaW9uYXRlIHBsYXllcnMgb2YgY2FwdGFpbmN5IGlzIHBhdGhldGljIGluIG15IG9waW5pb24uIFdhdGNoIGhpcyByZWFjdGlvbiB0byBzY29yaW5nIGhpcyBwZW5hbHR5LCBJIG5vdCBzZWVuIHNvbWVvbmUgbG92ZSB0aGUgY2x1YiBsaWtlIERhdmUgc2luY2UgSlQuCkFkZGl0aW9uYWxseSwgaXQgYWxzbyBzdWdnZXN0aW5nIHRoYXQgaGUgcHJlZmVycyBzb21lb25lIHRoYXQgaXMgKHBlcmNlaXZlZCkgbWVlaywgbWlsZCwgbW9kZXN0LCBpbnRyb3ZlcnRlZCwgZWN0LiBUaGF0IHNheXMgdG8gbWUgdGhhdCBoZSBhbHNvIHByZWZlcnMgdnVsbmVyYWJsZS9jb250cm9sbGFibGUgd29tZW4sIGJlY2F1c2UgaGUga25vd3MgaGUgb2ZmZXJzIGxpdHRsZSBpbiB0aGUgd2F5IG9mIHRoZSB3b21hbiBvbiB0aGUgcmlnaHQuIFRvIEFOWSB3b21hbiwgdGhhdCBzY3JlYW1zIEluY2VsLgpBbmQgaXQgd2FzIGNhdXNlZCBieSB0aGUgc3RhdGUsIGRvbid0IGdldCBtZSB3cm9uZy4gCkJ1dCBtb3JlIHBlb3BsZSBhcmUgbGl0ZXJhbGx5IGp1c3QgYSBib2F0IHJpZGUgYXdheSEuIApPbmNlIHlvdSBzZWVuIHRoZSBpY2UsIHlvdSBoYWQgdG8gc3RhcnQgY2hpcHBpbmcsIGdldCBpdCBvZmYgYmVjYXVzZSBpdCB3b3VsZCBtYWtlIHlvdSB0b3AgaGVhdnkuIFRoZSBjb3J2ZXR0ZXMgZGlkbiBjdXQgdGhyb3VnaCB0aGUgd2F0ZXIsIHRoZXkgd2VudCB1cCBhbmQgb3ZlciBpdCBhbmQgZG93biBpdC4gClRvcCBXb3JrcGxhY2VzIDIwMTkgbm9taW5hdGlvbiBkZWFkbGluZSBleHRlbmRlZCBUb3AgV29ya3BsYWNlcyAyMDE5IG5vbWluYXRpb24gZGVhZGxpbmUgZXh0ZW5kZWQgVG9wIFdvcmtwbGFjZXMgMjAxOSBkZWFkbGluZSBmb3Igbm9taW5hdGlvbnMgaGFzIGJlZW4gZXh0ZW5kZWQgdG8gRmViLiAxNS4KVGhlIGNvbXBhbnkgc2VsbHMgaXRzIHByb2R1Y3RzIGFuZCBlcXVpcG1lbnQgdG8gYSB3aWRlIGFycmF5IG9mIGN1c3RvbWVycyBpbiB0aGUgZ2xvYmFsIGhlYWx0aCBjYXJlIGluZHVzdHJ5LiAKQSAiMCIgb3IgYSAiNSIpLiAKSW4geW91ciBtaW5kLCB5b3UgZ28gb3ZlciB0aGUgcHJvcyBhbmQgY29ucyBvZiBwaWNraW5nIG9uZSBvciB0aGUgb3RoZXIgYSB0aG91c2FuZCB0aW1lczsgYmFjayBhbmQgZm9ydGggYSB0aG91c2FuZCBkaWZmZXJlbnQgdGltZXMgaW4geW91ciBoZWFkIGJlZm9yZSBmaW5hbGx5IHBpY2tpbmcgb25lIG92ZXIgdGhlIG90aGVyLiBHb2Qga25ldyB3aGljaCBvbmUgeW91IHdvdWxkIGNob29zZSB3aGVuIHlvdSB3ZXJlIGdpdmVuIHRoZSBjaG9pY2UuIApUaGVyZSBpcyBsaXR0bGUgaGUgaGFzIGJlZW4gcHJvYWN0aXZlIGFib3V0LiAKVGhvc2UgY2hhcmdlcyB3ZXJlIGRpc21pc3NlZCBhZnRlciBhIHByZWxpbWluYXJ5IGhlYXJpbmcgbGFzdCBPY3RvYmVyIGFuZCBhIHNlY29uZCBkZWdyZWUgbXVyZGVyIGNoYXJnZSBhZ2FpbnN0IGEgZmVtYWxlIHlvdXRoIHdhcyBkcm9wcGVkIGJ5IHRoZSBDcm93biBpbiBPY3RvYmVyLgpBbHNvIGRpc3NvbHZlZCBpbiBwbGFzbWEgYXJlIGVsZWN0cm9seXRlcywgbnV0cmllbnRzIGFuZCB2aXRhbWlucyAoYWJzb3JiZWQgZnJvbSB0aGUgaW50ZXN0aW5lcyBvciBwcm9kdWNlZCBieSB0aGUgYm9keSksIGhvcm1vbmVzLCBjbG90dGluZyBmYWN0b3JzLCBhbmQgcHJvdGVpbnMgc3VjaCBhcyBhbGJ1bWluIGFuZCBpbW11bm9nbG9idWxpbnMgKGFudGlib2RpZXMgdG8gZmlnaHQgaW5mZWN0aW9uKS4gCkl0cyByZWFsbHkgd29ydGggY2VsZWJyYXRpbmcgYWxsIHRoZSBnb29kIHRoaW5ncyB0aGF0IGhhcHBlbiBhdCB0aGlzIHBvaW50LiBJIGFsc28gcmVhbGl6ZWQgcmVjZW50bHkgdGhhdCBhIGxvdCBvZiBzb2NpYWwgYW54aWV0eSBoYXMgc3RhcnRlZCB0byBkaXNzaXBhdGUuIApJbUJvblJ1cmd1bmR5ICAyMCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpCdXQgYXMgdGhlIHNjaG9vbCB5ZWFyIHdlbnQgb24sIG9ubHkgaGUgYW5kIEkgZ290IGNsb3Nlci4gV2Ugd291bGQgc3BlbmQgYSBsb3Qgb2YgdGltZSB0b2dldGhlciBpbiBoaXMgY2xhc3Nyb29tIGR1cmluZyBhbmQgYmV0d2VlbiBjbGFzc2VzLiAKQnV0IGxpa2UsIGxldCBiZSByZWFsIGhlcmUsIGl0IGRlZmluaXRlbHkgd291bGRuIHJ1aW4gaGlzIGxpZmUgZXZlbiBpZiBoZSB3ZW50IHRvIHByaXNvbi4gVGhlcmUgYSBzZXh1YWwgcHJlZGF0b3IgaW4gdGhlIFdoaXRlIEhvdXNlIGFuZCBvbmUgb24gdGhlIFN1cHJlbWUgQ291cnQgYmVuY2ggYW5kIGxpa2UgYSB6aWxsaW9uIGluIEhvbGx5d29vZCBhbmQgZXZlcnlib2R5IGtub3dzIHdoYXQgdGhleSBkaWQgYW5kIG5vbmUgb2YgdGhlaXIgbGl2ZXMgaGF2ZSBiZWVuIHJ1aW5lZCBieSB0aGF0LiBTbyBjYW4gd2Ugc3RvcCBwbGF5aW5nIHRoZSBzYWQgdmlvbGlucyBmb3IgdGhlIHBvb3IsIGlubm9jZW50IHNleHVhbCBwcmVkYXRvcnMgbm93PyBUaGFua3MhIENvb2whLiAKSnVzdCB0byBjb25maXJtLCBkbyB5b3UgZ2V0IHRoYXQgbm90aWZpY2F0aW9uIHdoZW4gc3VibWl0dGluZyB0aGUgaW5pdGlhbCBhcHBsaWNhdGlvbiBmb3IgdGhlIGV4YW0/IEkgaGF2ZSBhIGNvbGxlYWd1ZSB3aG8gYXR0ZW5kZWQgYSBwcmVwIGNvdXJzZSwgYW5kIGhlIHdhcyB0b2xkIHRoYXQgeW91IHdvdWxkIGZpbmQgb3V0IGlmIHlvdSBiZWluZyBhdWRpdGVkIHdoZW4geW91IHN1Ym1pdHRlZCB0aGUgcGF5bWVudCAgIGFmdGVyIHRoZSBhcHBsaWNhdGlvbiBoYXMgYmVlbiBhcHByb3ZlZC4KTW9zdCBvZiBteSBpbmp1cmllcyBhcmUgaG9yc2UgcmlkaW5nIHJlbGF0ZWQsIG5vdCBydW5uaW5nLiBidXQgInJvbWFuY2UiIGZvciBpdHMgb3duIHNha2UsIG5vdCBzbyBtdWNoLgpUaGUgcmVzdWx0IHdhcyB0aGF0IEkgc2F0IG91dHNpZGUgdGhlIGRvb3IgYW5kIGxpc3RlbmVkIGF2aWRseSB0byBiZWF1dGlmdWwgY2hhbWJlciBtdXNpYy4hIS4uIApJZiB5b3UgaGF2ZSBzcGVjaWZpYyBxdWVzdGlvbnMgZG9uJ3QgaGVzaXRhdGUgdG8gUE0gbWUuIFRTRCAgUkFWRU4gICAgQ2F0ZWdvcnkgU3VwZXJ2aXNvciAgIEkgaG9wZSB0aGlzIGhlbHBzIGlmIHNvbWVvbmUgdG9sZCB5b3UgYWxsIHRob3NlIGRpc2Mgd2VyZSBidWxnaW5nIHlvdSBtdXN0IGhhdmUgaGFkIGEgbXJpPyBJIGp1c3Qgd2VudCB0aHJldyB0aGUgc2FtZSB0aGluZyBjNSBjNiBoYWQgYSBwaW5jaCBuZXJ2ZSBhbmQgdGhleSBkaWQgdGhlcmFweSBkaWQgYW5vdGhlciBtcmkgc2hvd2VkIG5lcnZlIHdhc250IHBpbmNoIGFueW1vcmUgYW55d2F5IHRvIG1ha2UgYWxvbmcgc3Rvcnkgc2hvcnQgaGF2ZSBhIERyIGRvIGEgbWlsb2dyYW0gYW5kIGNhdHNjYW4gdGhpcyBzaG93cyBhbGwgYXJvdW5kIHRoZSBkaXNrLiAKSSBqdXN0IHdpc2ggdGhlIGdhbWUgd291bGQgZ2V0IHNvbWUgUkVBTCBzdXN0YWluaW5nIGNvbnRlbnQuIEkgc3VyZSBpdCBiZWVuIHNhaWQgb3ZlciwgYW5kIG92ZXIsIGFuZCBvdmVyIGJlZm9yZS4gQnV0IGhvbmVzdGx5LCB0aGUgb25seSB0aGluZyB0byBzcGVuZCBtb25leSBvbiBpcywgcmF0aGVyIGxhbWUsIGNvc21ldGljcy4gClRoZSB3aXRuZXNzLCB3aG9zZSBuYW1lIHdhcyByZWRhY3RlZCwgc2FpZCBoZSByYW4gZHVyaW5nIGJyZWFrcyBpbiB0aGUgZ3VuZmlyZS4iVGhlbiBvbiB0aGUgdGhpcmQgcm91bmQgb2Ygc2hvdHMgaXMgd2hlbiBJIGdvdCwgSSBnb3QgaGl0IHJ1bm5pbmcsIHJpZ2h0IGluIHRoZSBiYWNrLCIgaGUgdG9sZCBhbiBpbnZlc3RpZ2F0b3IuVGhlIG1hbiBhbmQgaGlzIGZyaWVuZHMgcmFuIGFnYWluIHVudGlsIGhlIGNvdWxkbiBnbyBvbi4gCkFsc28sIG1vc3QgcG9rZXIgcGxheWVycyBzdGlsbCBwcmVmZXIgbGl2ZSBwb2tlciBnYW1lcyBiZWNhdXNlIHRoZXkgYmVsaWV2ZSB0aGF0IGluIG9ubGluZSBwb2tlciBnYW1lcyBwbGF5ZXJzIGRvIG5vdCBnZXQgdG8gY29tbWl0IG1pc3Rha2VzIGNvbXBhcmVkIHRvIHBlb3BsZSB3aG8gcGxheSBsaXZlLiBPbmxpbmUgcGxheWVycyBoYXZlIHRoZSBjaGFuY2Ugb2YgdXNpbmcgZGlmZmVyZW50IGVxdWlwbWVudHMgdGhhdCB3aWxsIGhlbHAgdGhlbSBwbGF5IHdlbGwgd2l0aG91dCBsZXR0aW5nIHRoZSBvdGhlciBwbGF5ZXJzIGtub3cgYWJvdXQgaXQuIEFuZCBiZWNhdXNlIG1hbnkgcGxheWVycyBtYWtlIGJpZyBtaXN0YWtlcyB3aGVuIHBsYXlpbmcgbGl2ZSBwb2tlciwgb25lIHRoaW5nIGlzIGZvciBzdXJlOiBtb3JlIG1pc3Rha2VzIG9mIHlvdXIgY29udGVuZGVycyB3b3VsZCBtZWFuIG1vcmUgbW9uZXkgZm9yIHlvdSEKSSBhbmFseXRpY2FsIGFuZCBoYXZlIHNlbGYgY29udHJvbC4uIAoxMCBOb3YgMjAxNCAgIDYgbWluICAgVXBsb2FkZWQgYnkgTG92ZXJzIG9mIEdhbWVUaGUgS2luZyBvZiBGaWdodGVycyA5OCBHYW1lIGZvciBXaW5kb3dzIGFuZCBQQy4gClRoZXkgaGF2ZSBiZWdpbm5lciB5b2dpcyB0cnlpbmcgdG8gZG8gdGhlIGltcG9zc2libGUsIGdpdmluZyB0aGVtIHJpdHVhbHMsIGNoYW50cyBhbmQgZW1wb3dlcm1lbnRzIHRoYXQgZG9udCBhY3R1YWxseSBidWlsZCBoYXJkIGNvbmNlbnRyYXRpb24gYW5kIHZpcGFzc2FuYSBza2lsbHMgdGhhdCB3ZWxsLi4gCkluc2lkZXJTd29yZHNTYW4gRnJhbmNpc2NvLCBDYWxpZm9ybmlhIGJ1dCBsaXZpbmcgaW4gRnJhbmNlIHJpZ2h0IG5vdwpJIGtub3cgQXVzdHJhbGlhIGlzIGZhciBmcm9tIHBlcmZlY3QuIEkgd2FzIGp1c3QgcG9pbnRpbmcgb3V0IHRoYXQgSSBkaWRuIGtub3cgYSBjb3VudHJ5IGxpa2UgSXJlbGFuZCB3b3VsZCBoYXZlIGEgbGVnYWwgc3lzdGVtIHdoaWNoIHRha2VzIHRoZSBzaWRlIG9mIGEgcmFwaXN0IHRoZSB3YXkgaXQgZGlkIGluIHRoaXMgc3BlY2lmaWMgY2FzZS4gClRoYXQgZG9lc24gc3VnZ2VzdCB0aW1lIHN0YXJ0ZWQgaW4gdGhlIDE5dGggY2VudHVyeS5jZWNpbG1leWVyICAxIHBvaW50ICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0kgZW5qb3kgdGFsa2luZyB0byBldm9sdXRpb25pc3RzIHRoYXQgYXJlIG5vdCBydWRlIGFuZCBhcnJvZ2FudC4gCjI2LCAxOTUxLCBhdCBTdC4gUGl1cyBYIENhdGhvbGljIENodXJjaCBpbiBTb2xvbiBTcHJpbmdzIGFuZCB0aGV5IGVuam95ZWQgNTUgeWVhcnMgdG9nZXRoZXIuIApPZ25pdHMgdQpNYXJ5b2Zib3N0b24gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkV2ZXJ5b25lIHdhcyByZWFsbHkgZnJpZW5kbHkuIApUaGF0IGhvd2V2ZXIsIG1heSBiZSBzbWFsbCBjb25zb2xhdGlvbiwgYXMgY29tcGFueSB3YXRjaGVycyBub3RlIHRoYXQgdGhlIGxlZ2FsIGNsb3VkIGhhbmdpbmcgb3ZlciBTTkMgd2lsbCB1bmRvdWJ0ZWRseSBtYWtlIGl0IGRpZmZpY3VsdCB0byBzZWN1cmUgbmV3IGJ1c2luZXNzLCB3aGljaCBpbiB0dXJuIGNvdWxkIGxlYWQgZW1wbG95ZWVzIHRvIGxvb2sgZm9yIG9wcG9ydHVuaXRpZXMgZWxzZXdoZXJlLiBTTkMgd2lsbCBhbHNvIGhhdmUgdG8gZGVhbCB3aXRoIHRoZSBvdGhlciBidXNpbmVzcyBpc3N1ZXMgdGhhdCBoYXZlIHBsYWd1ZWQgaXQsIGluY2x1ZGluZyBhIGRpc3B1dGUgd2l0aCBhIGNsaWVudCByZWxhdGVkIHRvIGEgbWluaW5nIHByb2plY3QgaW4gTGF0aW4gQW1lcmljYSwgZ3Jvd2luZyB0ZW5zaW9ucyBiZXR3ZWVuIENhbmFkYSBhbmQgU2F1ZGkgQXJhYmlhIG92ZXIgaHVtYW4gcmlnaHRzIGFuZCBvdGhlciBwb3RlbnRpYWwgbGVnYWwgaXNzdWVzLiAKTWFueSBvZiB0aGUgcG9rZXIgY2hpcHMgdGhhdCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGNvbGxlY3Qgd2lsbCBoYXZlIGJlZW4gdXNlZCBpbiBjb25qdW5jdGlvbiB3aXRoIGEgdGVjaG5vbG9neSB0aGF0IGlzIHJlZmVycmVkIHRvIGFzICJSRklEIi4uIApIZSBzYXlzIHNvbWV0aGluZyB0aGF0IGNhdXNlcyB0aGUgY2hpY2sgY29wIHRvIGdvIGFsbCBmcm93bnkgYW5kIHNob2NrZWQsIGFuZCB0aGVuIGNvbnRpbnVlcyBzcGVha2luZy4gCkJ1dCBhbG1vc3Qgbm9ib2R5IHdpbGwuIEFuZCBwZW9wbGUgY2FuIGJlIGNvbnZpbmNlZCBieSBzb21lb25lIGVsc2UgdG8gY2hhbmdlIHRoZWlyIG1pbmQgb24gc29tZXRoaW5nIHRoZXkgaGF2ZSBhIHN0cm9uZyBvcGluaW9uIG9uLiAKT25jZSB5b3UgY2FsbSBkb3duLCBJIHN1Z2dlc3QgeW91IGdvIHRhbGsgdG8geW91ciBmcmllbmRzLCBoYXZlIGFuIGhvbmVzdCBkaXNjdXNzaW9uIGFib3V0IGhvdyB5b3VyIGJlaGF2aW9yIGhhcyBlZmZlY3RlZCB0aGVpciBlbmpveW1lbnQgb2YgdGhlIHNlc3Npb24sIGFuZCByZSBjb25zaWRlciBob3cgeW91IGludGVyYWN0IHdpdGggdGhlIGdhbWUuLiAKV2UgYWxsIGhhdmUgdG8gYWdyZWUgdGhhdCBwbGF5aW5nIHBva2VyIG9ubGluZSB1c2luZyBwbGF5IG1vbmV5IGNhbiBiZSBmdW4gYW5kIGVudGVydGFpbmluZy4gSG93ZXZlciwgdGhlcmUgd2lsbCBjb21lIGEgdGltZSB0aGF0IHlvdSBoYXZlIHRvIGNoYW5jZSBhIGJpdCBvZiB0aGlzIG9ubGluZSBwb2tlciBzdHJhdGVneSBvZmp1c3QgdXNpbmcgcGxheSBtb25leS4gQWZ0ZXIgbGVhcm5pbmcgYSBmZXcgb2YgdGhlc2UgcG9rZXIgc3RyYXRlZ2llcyB1c2luZyBmcmVlIG1vbmV5LCBhIHdheSB0byBpbXByb3ZlIHlvdXIgc2tpbGxzIGluIHBsYXlpbmcgb25saW5lIHBva2VyIGlzIGJ5IHN0YXJ0aW5nIHRvIHBsYXkgZm9yIHJlYWwgbW9uZXkuLiAKTWlsZXMgYW5kIEN5bm4gaGFkIGRvemVucyBvZiBzdXBwb3J0ZXJzIGNoZWVyaW5nIHRoZW0gb24gaW4gdGhlIGJhbGxyb29tIGhvc3RpbmcgdGhlIGV2ZW50IGF0IHRoZSBSaW8gQWxsIFN1aXRlIEhvdGVsIGFuZCBDYXNpbm8gbmVhciB0aGUgTGFzIFZlZ2FzIFN0cmlwLiAKQWNrbm93bGVkZ2luZyB0aGF0IFlTIGlzc3VlcyBjb3VsZCByZXN1bHQgaW4gYW4gaW5jaWRlbnQgaWYgSWcgaGFzIHZpc2l0YXRpb24gaW4gaGVyIGhvbWUgaXMgYSBuYXR1cmFsIGV4dGVuc2lvbiBvZiB0aGF0Li4gCkFuZCB0byB0aGUgZXh0ZW50IHRoYXQgc29sdXRpb25zIGV4aXN0LCB0aGV5IG11c3QgYmUgc29sdXRpb25zIHRoYXQgYWxsb3cgam91cm5hbGlzbSB0byBtb3ZlIG91dHNpZGUgb2YgdGhlIGJyb2tlbiBzeXN0ZW0gdGhhdCBoYXMgY2F1c2VkIHRoaXMgc2l0dWF0aW9uLiAKSGUgaGFkIHJvbGVzIGluIGEgaGFuZGZ1bCBvZiBmaWxtcywgaW5jbHVkaW5nICJUaGUgRmlmdGggRWxlbWVudCwiICJCdWZmeSB0aGUgVmFtcGlyZSBTbGF5ZXIsIiAiOCBTZWNvbmRzIiBhbmQgIkFtZXJpY2FuIFN0cmF5cywiIGFwcGVhcmVkIGluIEhCTydzIHByaXNvbiBkcmFtYSAiT3oiIGFzIGEgdGVsZXZhbmdlbGlzdCBjb252aWN0ZWQgb2YgZnJhdWQsIGFuZCB2b2ljZWQgY2FydG9vbnMgaW5jbHVkaW5nICJUaGUgSW5jcmVkaWJsZSBIdWxrIiBhbmQgIk1vcnRhbCBLb21iYXQuIgpOYXR1cmFsbHkgdGhleSBob2xkIGFib3V0IHRlbiB0aW1lcyB0aGUgcXVhbnRpdHkgb2YgcGVvcGxlIHRoYXQgd291bGQgYmUgbGVnYWxseSBhbGxvd2VkIGluIHRoZSBVUywgYnV0IHNvbWVob3cgYWxsIHRoZSBjaGFvcyB3b3Jrcy4uIApGb3IgcG9zdHMgaW5jbHVkaW5nIGZvdXIgb3IgbW9yZSBzZXJpZXMgdXNlZCBpbiB0aGUgaW1hZ2UsIHRoZSBPcmlnaW5hbCBQb3N0ZXIgaXMgcmVxdWlyZWQgdG8gc291cmNlIHRoZW0gYWxsIGFzIGEgY29tbWVudCB3aXRoaW4gRml2ZSBtaW51dGVzIG9mIHBvc3RpbmcuClRoZXJlIGEgbGl0dGxlIHJpc2sgb2YgdGhyb3dpbmcgb3V0IHRoZSBiYWJ5IHdpdGggdGhlIGJhdGh3YXRlciB3aXRoIG91ciBhcHByb2FjaCwgYnV0IGluIGEgcGxhY2UgbGlrZSByZWRkaXQsIHRoZXJlIHNvIG11Y2ggYmF0aHdhdGVyIGZyb20gbG9uZWx5IHlvdW5nIG1lbi4gClRoZSBydW5uaW5nIHRpdGxlIGF0IHRoZSB0b3Agb2YgdGhlIHBhZ2UgaW4gdGhlIEpvdXJuYWwgb2YgdGhlIEZyYW5rbGluIEluc3RpdHV0ZSAoU2VwdGVtYmVyIDE4NjApIHJlYWRzICJTdHJhaWdodGVuaW5nIGEgQ29sb3NzYWwgQ2hpbW5leSBTdGFjayIsIHdoaWNoIGF0dHJhY3RlZCBteSBpbW1lZGlhdGUgYXR0ZW50aW9uLiBJdCB3YXMgY29uc3RydWN0ZWQgaW4gMTg1OSBpbiBQb3J0IER1bmRhcywgbmVhciBHbGFzZ293LCBTY290bGFuZCwgYW5kIGV2aWRlbnRseSBuZWVkZWQgc29tZSBoZWxwIGluIGJlaW5nIHN0cmFpZ2h0IG91dCBwZXJwZW5kaWN1bGFyLiBUaGUgY2hpbW5leSB3YXMgNDU0IHRhbGwsIGFuZCB0aGUgdGFsbGVzdCBpbiB0aGUgd29ybGQgaXQgd2FzIGFsc28gb25lIG9mIHRoZSB0YWxsZXN0IG1hc29ucnkgc3RydWN0dXJlcyBpbiBleGlzdGVuY2UuIEFuZCBpdCBuZWVkZWQgc3RyYWlnaHRlbmluZy4gdGFsbGVzdCBjaGltbmV5IHdhcyBidWlsdCBhdCBQb3J0IER1bmRhcywgR2xhc2dvdywgU2NvdGxhbmQsIDE4NTcgdG8gMTg1OSwgZm9yIEYuIFRvd25zZW5kLiBJdCBpcyB0aGUgaGlnaGVzdCBjaGltbmV5IGluIHRoZSB3b3JsZCwgKDQ1NCBmZWV0LCkgYW5kIG9uZSBvZiB0aGUgbG9mdGllc3QgbWFzb25yeSBzdHJ1Y3R1cmVzIGluIGV4aXN0ZW5jZS4gSXQgaXMsIGluZGVwZW5kZW50IG9mIGl0cyBzaXplLCBvbmUgb2YgdGhlIGJlc3Qgc3BlY2ltZW5zIG9mIHN1YnN0YW50aWFsLCB3ZWxsIG1hZGUgYnJpY2t3b3JrIGluIGV4aXN0ZW5jZS4iIFNlcHRlbWJlciA4LCAxODk1LCBQYWdlIDE3LCBUaGUgTmV3IFlvcmsgVGltZXMgQXJjaGl2ZXMKTGllIG9uIHlvdXIgYmFjayBvbiB0aGUgZmxvb3Igd2l0aCBrbmVlcyBiZW50LgpSZXZvbHV0aW9uYXJ5IEFzc29jaWF0aW9uIG9mIHRoZSBXb21lbiBvZiBBZmdoYW5pc3RhbgpHcmF5Z3JpZiAgMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkJ1dCBldmVuIHRoZW4sIEtpcmFmbGF4IHRvb2sgYSBnYW1lIG9mZiBNS0xlbyByZWNlbnRseSBpbiB0b3VybmFtZW50LCBhbmQgRWFydGggaGFzIHN0aWxsIHlldCB0byBqb2luIHRoZSBjb21wZXRpdGl2ZSBzY2VuZS4gSSBkb24gYmVsaWV2ZSB0aGUgY2hhcmFjdGVyIHNob3VsZCBiZSB3cml0dGVuIG9mZiBiZWNhdXNlIG9mIHRoaXMuIFRoZXJlIGEgbG90IG9mIHBvdGVudGlhbCBmb3IgcmVzdWx0cyB0aGF0IGlzbiB0aGVyZSBkdWUgdG8gdGhlIFBpdHMgaGF2aW5nIG9uZSBvZiB0aGUgc21hbGxlc3QgcGxheWVyYmFzZXMgaW4gdGhlIGdhbWUuU2FnZW1vb24gICAxOSBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnb0RlZGljYXRlZCBzZXJ2ZXJzIHdvdWxkIG5vdCBtYWtlIHNtYXNoIG1vcmUgbGFnZ3kgYW5kIGFzc3VtaW5nIGEgd2VsbCBiYWxhbmNlZCBzcHJlYWQgb2YgaG9zdHMsIHdvdWxkIGN1dCBsYXRlbmN5IGluIGhhbGYuIAoiRG9uJ3Qgd29ycnkgYWJvdXQgS251Y2tsZSBjcmFja2luZyBpdCBkb2VzIG5vdCBjYXVzZSBhcnRocml0aXMsIGVubGFyZ2VkIGpvaW50cywgb3IgYW55IG90aGVyIGhhcm0uIFRoZSBkaXNjb25jZXJ0aW5nIHBvcHBpbmcgc291bmRzIHJlc3VsdHMgd2hlbiB0aGUgdHdvIG9wcG9zaW5nIGJvbmVzIGluIHRoZSBrbnVja2xlcyBhcmUgcHVsbGVkIGFwYXJ0LCB3aGljaCBjcmVhdGVzIGEgdmFjdXVtIHdpdGggdGhlIGpvaW50LiBBIHNtYWxsIGFtb3VudCBvZiBnYXMgZGlzc29sdmVkIGluIHRoZSBqb2ludCBmbHVpZCBpcyBxdWlja2x5IHJlbGVhc2VkLCBmb3JtaW5nIGEgYnViYmxlIHRoYXQgYWxtb3N0IGluc3RhbnRseSBjb2xsYXBzZXMgYW5kIHByb2R1Y2VzIHRoZSBub2lzZS4iIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSBhdCBCZXJrZWxleSBXZWxsbmVzcyBMZXR0ZXIuIApJIHBsYXkgaGlkZSBhbmQgZ28gc2VlayB3aXRoIHRoZSBjYXRzLiBJIGxpc3RlbiB0byBvbGQgcmVjb3Jkcy4gSSB0YWtlIGEgaG90IGJhdGggYXQgbm9vbiBpZiBJIGZlZWwgbGlrZSBpdCBjYXVzZSBteSBsaWZlIGlzIGZ1Y2tpbmcgYXdlc29tZS4gCkkgYmV0IGFib3V0IDIvMyBwb3QuIApGcm9tIHByb3RlY3Rpb24gYWdhaW5zdCBjb2duaXRpdmUgZGVjbGluZSBhbmQgY29uZ2VzdGl2ZSBoZWFydCBmYWlsdXJlIHRvIHJlZHVjaW5nIGluc3VsaW4gbGV2ZWxzIGFuZCBzaGllbGRpbmcgYWdhaW5zdCBtdXNjbGUgbG9zcywgY3JlYXRpbmUgZW5oYW5jZXMgbWl0b2Nob25kcmlhbCBmdW5jdGlvbiB0aGF0IGhlbHBzIHJlZHVjZSB0aGUgcmF2YWdlcyBvZiBhZ2luZy4KUGxheWVycyBpbiB0aGUgcG9rZXIgdG91cm5hbWVudCBwdXQgdXAgVVMkNSwwMDAgdG8gcGxheSwgYW5kIGFyZSBhc2tlZCB0byBkb25hdGUgYXQgbGVhc3QgaGFsZiB0aGVpciB3aW5uaW5ncy4gClRoZSBob3VzaW5nIG1hcmtldCBubyBsb25nZXIgaXMgcmVkIGhvdC4gRXhwb3J0cyBhbmQgYnVzaW5lc3MgaW52ZXN0bWVudCBoYXZlIGdvbmUgY29sZCwgYXMgd2VhayBvaWwgcHJpY2VzIGFuZCB0aGUgdHJhZGUgd2FycyBzYXAgYnVzaW5lc3MgY29uZmlkZW5jZS4KSGFoYWFhYSwgeWVhaC4gVGhhdCB3aHkgSSBhZHZpc2UgYWdhaW5zdCBpdC4gVGhlcmUgYXJlIGEgbG90IG9mIGhpZGRlbiBpc3N1ZXMgdGhhdCBkb24gcHJlc2VudCB0aGVtc2VsdmVzIGluIG90aGVyIGVuZ2luZXMsIHNvIHlvdSBuZWVkIHRvIHN0YXkgZmFpcmx5IGluc3VsYXIgaW4gdGhlIHJvdGFyeSBjb21tdW5pdHkgdG8gZ2V0IHRoaW5ncyBkaWFnbm9zZWQuIApIZSBjdWQgYmUgc2hvdmluZyB3dGggNTZzLCBBMiwgYW55IDl4LCBvdmVycGFpcnMgKGV4Y2VwdCB3ZSBhbHJlYWR5IGtub3cgaGUgZG9lc24ndCBoYXZlIEFBKSwgYW5kIGV2ZW4gZ2V0dGluZyBzdHVwaWQgd3RoIDg4IG9yIDc3LiAKSSBoYWQgYSBuaWdodG1hcmUgd2hlbiBJIHdhcyBtYXliZSA1IHllYXJzIG9sZCwgdGhhdCBJIHdlbnQgZG93bnN0YWlycyB0byB0aGUgYmFzZW1lbnQgYXQgbmlnaHQgdGltZS4gSSB3YXMgcmVhbGx5IHNjYXJlZCBiZWNhdXNlIGl0IHdhcyBkYXJrLCBhbmQgSSByZWFjaGVkIGZvciB0aGUgbGlnaHQgc3dpdGNoIGF0IHRoZSBmb290IG9mIHRoZSBzdGFpcnMsIGJ1dCBpdCBkaWRuIHdvcmsgYmVjYXVzZSBzb21ldGhpbmcgaGFkIG1lbHRlZCB0aGUgcGxhc3RpYyBpbnRvIGFuIHVudXNhYmxlIGx1bXAgb24gdGhlIHdhbGwuIFJpZ2h0IHRoZW4gSSBrbmV3IEkgd2FzIGRvb21lZCBiZWNhdXNlIG9mIHNvbWUgdW53cml0dGVuIHJ1bGU6IElmIHRoZSBsaWdodHMgd29uIHR1cm4gb24gd2hlbiB5b3UgcmVhbGx5IG5lZWQgdGhlbSB0bywgdGhhdCBtZWFucyBzb21ldGhpbmcgaXMgcmVhbGx5IHRoZXJlIGluIHRoZSBkYXJrIHdpdGggeW91IGFuZCBpcyBnb2luZyB0byBodXJ0IHlvdS4uIApUaGUgcm9hZCB0byBwb2xlIGJyaWRnZSBpcyBpbiBhIG11Y2gsIG11Y2ggbW9yZSByZW1vdGUgcGFydCBvZiB0aGUgcGFyaywgZ2V0dGluZyBhIGhpdGNoIGludG8gdGhlcmUgY291bGQgYmUgYSBodWdlIHBhaW4uIFRoZSByb2FkIGlzIG1haW5seSBkaXJ0IGFuZCBzcGxpdHMgb2ZmIGZyb20gdGhlIGhpZ2h3YXkgaW50byBBcGdhciBzb21ld2hlcmUganVzdCBvdXRzaWRlIG9mIFdoaXRlZmlzaC4gSWYgeW91IGFyZSBsb29raW5nIGZvciBhbiBhbHRlcm5hdGUgcG9pbnQgdG8gc3RhcnQgZnJvbSwgVGhlIExvb3Agd291bGQgYmUgbXVjaCBtb3JlIGFjY2Vzc2libGUgd2l0aCBhIGhpa2UgdXAgb3ZlciBmbGF0IHRvcCB0byB3aGVyZSB5b3UgbWVldCB0aGUgQ0RUIGF0IGZpZnR5IG1vdW50YWluIGNhbXBncm91bmQuIApUaGUgY29uZmxhdGlvbiBvZiB3aGl0ZSBmZW1hbGUgcHVyaXR5IGFuZCBjaGlsZGlzaCBzZXh1YWwgaW5ub2NlbmNlIGdvdCB0YW5nbGVkIHVwIHdpdGggbm90aW9ucyBvZiB3aGl0ZSBzdXBlcmlvcml0eSBvdmVyICJ0aG9zZSBwZW9wbGUiIHdob3NlIGNoaWxkcmVuIGhhZCBzZXggYW5kIHdvbWVuIHdlcmUgcHJvbWlzY3VvdXMuIApXYXMgYSBoYXJkbm9zZWQgaG9ja2V5IHBsYXllckxpbmRzYXksIGJvcm4gaW4gUmVuZnJldywgT250Liwgd2FzIG9uZSBvZiB0aGUgZ3JlYXRlc3QgbGVmdCB3aW5nZXJzIG9mIGFsbCB0aW1lLiBIZSBwbGF5ZWQgMTMgc2Vhc29ucyB3aXRoIHRoZSBSZWQgV2luZ3MgYW5kIGxlZCB0aGUgdGVhbSB0byBmb3VyIFN0YW5sZXkgQ3VwcyBpbiB0aGUgMTk1MHMsIGluY2x1ZGluZyB0d28gYXMgY2FwdGFpbi4uIAoiS25vdyB0aGUgZW5lbXkgYW5kIGtub3cgeW91cnNlbGYiIGFkdmlzZWQgU3VuIFR6dSwgdGhlIGFuY2llbnQgd2Fycmlvci4gClByZWduYW50IGFuZCB0b3RhbGx5IHVuZGVyc3RhbmQuIEkgc3RhcnRlZCBhIG5ldyBqb2IgYXQgYSBGb3J0dW5lIDI1MCBjb21wYW55IGhhbGZ3YXkgdGhyb3VnaCBteSBwcmVnbmFuY3kgYW5kIEkgZG8gbm90IHF1YWxpZnkgZm9yIEZNTEEsIGFuZCB3aWxsIG9ubHkgZ2V0IDYwJSBvZiBteSBwYXkgZHVyaW5nIFNURCAoYnV0IGF0IGxlYXN0IGl0IHNvbWV0aGluZykuCldoeSB3b3VsZCBpdCBiZSBhc3N1bWVkIHRoYXQgTWFyaW5lIDEgaXMgaW5mZXJpb3IgdG8gdGhlIGluaXRpYWwgbW9kZWwgZGVzaWduZWQgb3ZlciA1MCB5ZWFycyBhZ28/IFN1cmVseSBNYXJpbmUgMSBjYW4gd2l0aHN0YW5kIHdpbmQgb2YgMTEgbXBoLi4gClNvLCBzaGUgZ290IGJvdGggcXVhbnRpdHkgYW5kIHF1YWxpdHkuIApXZSBzZWUgdGhhdCBvbGQgd29ya3MgdGhhdCBwb3J0cmF5ZWQgY29uc2Npb3VzbmVzcyBhbmQgZGl2aW5pdHkgaW4gYSBtYW5uZXIgd2hpY2ggcmVzb25hdGVzIHdpdGggdGhlIENvc21pY2FsbHkgQ29uc2Npb3VzIHdlcmUgdHlwaWNhbGx5IGhpZGRlbiBzdWJ2ZXJzaXZlbHkgaW4gcmVsaWdpb3VzIGFydCBjb21taXNzaW9ucy4gClNvcnJ5IHRoaXMgaGFzIGJlY29tZSBzbyBsb25nIHdpbmRlZCwgSSB0aGluayBpdCBmYWlyIGVub3VnaCB0byBiZSB1cHNldCB3aGVuIHRoZXJlIGlzIGFuIGV4cGVjdGF0aW9uIGluIHRoZSBpbmR1c3RyeSB0aGF0IGlmIHNvbWVvbmUgYnV5cyBzb21ldGhpbmcgZnJvbSB5b3UgdGhlcmUgaXMgYW4gb251cyB0byBnZXQgaXQgaW50byByZWFzb25hYmxlIHdvcmtpbmcgY29uZGl0aW9uLiAKSSB3YXMgbGlrZSwgIldoYXQgZG8geW91IG1lYW4/IFRoZXJlJ3MgYW5vdGhlciB3YXk/IFlvdSBjYW4ganVzdCBidXkgdGhlc2UgdGhpbmdzPyIgQmVjYXVzZSBhIGxvdCBvZiByZXN0YXVyYW50cyB3aWxsIG9wZW4gYSBjYW4gYW5kIHB1dCBpdCBvbi4gCldoYXQgaXMgdGhlIG5hbWVzIG9mIExhZHkgR2FnYXMgaGl0cwpNYW55IG5ldyBwbGF5ZXJzIGhhdmUgYWxyZWFkeSByZWFjaGVkIGVub3Jtb3VzIHN1Y2Nlc3Mgd2l0aCB0aGlzIGdhbWUgYW5kIG5vdyBtb3JlIGFuZCBtb3JlIHBlb3BsZSBhcmUgZ2V0dGluZyBpbnRlcmVzdGVkIGFib3V0IHRoaXMgZ2FtZS4gRm9yIHRoZSBuZXdiaWVzLCB0aGVyZSBhcmUgc3RpbGwgYSBsb3Qgb2YgdGhpbmdzIHRvIGxlYXJuLiAKU3ZlbnNvbl8yNiAgMzAsNTk3IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpXb21lbiwgb24gdGhlIG90aGVyIGhhbmQsIGhhdmUgZmV3ZXIgcGFscyBidXQgZ2V0IGNsb3NlciB0byB0aGVtLiBBdCB0aGUgbW9zdCB0aGV5IG1heSBlbmQgdXAgZWF0aW5nIGRpZXQgZm9vZCBvciBzaG9wcGluZyB0b2dldGhlciBhcyBmYXIgYXMgc29jaWFsIGFjdGl2aXRpZXMgYXJlIGNvbmNlcm5lZC4gU2F5cyB0YXJvdCBjYXJkIHJlYWRlciBNdW5pc2hhIEtoYXR3YW5pLCBhcmUgbW9yZSBjaGFybWluZy4gCk15IGxhc3QgMiBjeWNsZXMgaGF2ZSBiZWVuIHRlcnJpYmxlIEkgdGhpbmsgbXkgZW5kb21ldHJpb3NpcyBpcyBiYWNrLiAKRHVyaW5nIGNyYWNrIGRvd24sIHRoZSBDRlNFVSB1bmlmb3JtIGdhbmcgZW5mb3JjZW1lbnQgdGVhbSBzdG9wcGVkIDE0NCB2ZWhpY2xlcywgY2hlY2tlZCAxNzMgcGVvcGxlIGFuZCBzZWl6ZWQgYSB2YXJpZXR5IG9mIHN1YnN0YW5jZXMgYmVsaWV2ZWQgdG8gYmUgbWV0aGFtcGhldGFtaW5lLCBjcmFjayBjb2NhaW5lIGFuZCBmZW50YW55bC4KRWZmZWN0cyBvZiBTd2lzcyBiYWxsIGNvcmUgc3RyZW5ndGggdHJhaW5pbmcgb24gc3RyZW5ndGgsIGVuZHVyYW5jZSwgZmxleGliaWxpdHksIGFuZCBiYWxhbmNlIGluIHNlZGVudGFyeSB3b21lbi4KQ29tcHJpc2VkIG9mIFJvbmFsZCBSZWFnYW4gVUNMQSBNZWRpY2FsIENlbnRlciwgVUNMQSBNZWRpY2FsIENlbnRlciwgU2FudGEgTW9uaWNhLCBSZXNuaWNrIE5ldXJvcHN5Y2hpYXRyaWMgSG9zcGl0YWwgYXQgVUNMQSwgVUNMQSBNYXR0ZWwgQ2hpbGRyZW4ncyBIb3NwaXRhbCwgYW5kIHRoZSBVQ0xBIE1lZGljYWwgR3JvdXAgd2l0aCBpdHMgd2lkZSByZWFjaGluZyBzeXN0ZW0gb2YgcHJpbWFyeSBjYXJlIGFuZCBzcGVjaWFsdHkgY2FyZSBvZmZpY2VzIHRocm91Z2hvdXQgdGhlIHJlZ2lvbiwgVUNMQSBIZWFsdGggaXMgYW1vbmcgdGhlIG1vc3QgY29tcHJlaGVuc2l2ZSBhbmQgYWR2YW5jZWQgaGVhbHRoY2FyZSBzeXN0ZW1zIGluIHRoZSB3b3JsZC4KVGhlIGFtb3VudCBnb2VzIGludG8geW91ciBraXZhIGFjY291bnQgYW5kIHlvdSBjYW4gc3BsaXQgaXQgdXAgdG8gYXMgbWFueSBsb2FucyBhcyB5b3Ugd2FudCB0byB3aG9ldmVyIHlvdSB3YW50LiAKSSBrbmV3IGV4YWN0bHkgd2hlbiBJIHBpc3NlZCBpdCBvdXQuIEluIHRoZSBzZWNvbmQgc3RhbGwgaW4gdGhlIFJ1c3NlbGx2aWxsZSwgQWxhYmFtYSBXYWxtYXJ0LiBUaGUgcmVhc29uIEkga25vdyBpcyBiZWNhdXNlIGl0IGZlbHQgbGlrZSBzb21lYm9keSBncmFiYmVkIG15IGRpY2ssIGFuZCBoaXQgdGhlIHRvcCBvZiBpdCBsaWtlIHRoZXkgd2VyZSB0cnlpbmcgdG8gaGFtbWVyIGEgbmFpbCBpbnRvIGl0cyBldGVybmFsIHJlc3RpbmcgcGxhY2UuIApGaW5kZW4gU2llLCB3aWUgdW5kIHdvIHp1IGthdWZlbiBGZXJuc2Voc2Vzc2VsIG1pdCBBdWZzdGVoaGlsZmUgU0VOSU9SIElJIDIwMTEgRWNodGxlZGVyIENSRU1FLiBCUkFORE5FVSBNT0RFTEwgMjAxMisgQW5zcHJ1Y2hzdm9sbGUgT3B0aWsrIFBlcmZla3RlciBLb21mb3J0IGluIHBlcmZla3RlbSBGZXJuc2Voc2Vzc2VsKyBLb21mb3J0YWJsZSBBcm1sZWhuZW4rIEtpbmRlcmxlaWNodGUsIHZvbGxlbGVrdHJpc2NoZSBWZXJzdGVsbHVuZysgUmNrZW5sZWhuZSArIEJlaW5iZXJlaWNoIGZhaHJlbiB2b2xsZWxla3RyaXNjaCwgc3R1ZmVubG9zIGluIGRpZSBnZXduc2NodGUgUG9zaXRpb24rIFZvbGxlbGVrdHJpc2NoZSBBdWZzdGVoaGlsZmUsIHNvIGRhc3MgZGllIFBlcnNvbiBnYW56IGVpbmZhY2ggYXVmc3RlaGVuIGthbm4gdW5kIHF1YXNpIGF1ZiBkaWUgQmVpbmUgZ2VzdGVsbHQgd2lyZC4gKERlciBNb3RvciBoZWJ0IGRlbiBTZXNzZWwgdW0gNThjbSBhbikuKyBUcmFuc3BvcnRyb2xsZW4gZnIgZWluZW4gc2VociBlaW5mYWNoZW4gVHJhbnNwb3J0KyAyIFRhc3RlbiBGZXJuYmVkaWVudW5nIGZyIGVpbmUgbWF4aW1hbCBlaW5mYWNoZSBCZWRpZW51bmcrIFN1cGVyIG1vZGVybmVzLCBvcHRpc2NoIGFuc3BydWNoc3ZvbGxlcyBEZXNpZ24rIFRvcCBWZXJhcmJlaXR1bmcgTm9ybWFscHJlaXM6IDE5OTksMDAgPyBUZWNobmlzY2hlIERhdGVuOiBNYWU6U2Vzc2VsIGF1ZnJlY2h0OiA5MCBjbSBUIHggOTIgY20gQiB4IDExNSBjbSBIU2l0emhoZTogNDcgY20gKER1cmNoIGRpZSBBdWZzdGVoaGlsZmUgYXVjaCBoaGVyIGVpbnN0ZWxsYmFyISlTaXR6bWE6IDUwIGNtIEIgeCA1OCBjbSBUTGllZ2VmbGNoZTogMTg1IGNtIEwgeCA1MCBjbSBCIChpbm5lbiBnZW1lc3NlbilSY2tlbmxlaG5lbmhoZSB2b20gU2l0eiBhdXMgZ2VtZXNzZW46IGNhLiA3OGNtTmVpZ3VuZ3NncmFkOiB2b24gOTAgYXVmcmVjaHQgYmlzIGNhLiAxNzUgbGllZ2VuZCBHZXdpY2h0OiBjYS4gRGllIFdhaGwgV29obnppbW1lciBNYmVsLCBkaWUgaW4gTW9kZSBpc3QgbWFuY2htYWwgc2Nod2llcmlnLCBhYmVyIGJld2Vpc2VuIGthbm4gZWluZmFjaCBzZWluLCB3ZW5uIHNpZSBtaXQgZGVyIHJpY2h0aWdlbiBQZmxlZ2UgdW5kIEdlZ2VubGVpc3R1bmcgZXJmb2xndC4gRXMgd2lyZCBlaW4gd2VuaWcgdmVyd2lycmVuZCwgZGEgZXMgc28gdmllbGUgdmVyc2NoaWVkZW5lIFNvcnRlbiB2b24gTWJlbG4genUgc29ydGllcmVuIGF1cyBzaW5kLgpUaGF0IEltcmFuIHRvb2sgYSBkaWcgYXQgTmF3YXogZm9yIGhpZGluZyBiZWhpbmQgYXJteSB3YWxsYXMgbWlnaHQgaGF2ZSBiZWVuIG5vdGljZWQuIApIZSBncmFkdWF0ZWQgd2l0aCBvbmx5IHNpeHRlZW4gb3RoZXIga2lkcywgYnV0IGFsbCB0aGUga2lkcyBkcmVzc2VkIHVwIGZvciB0aGUgZ3JvdXAgZ3JhZHVhdGlvbiBwaG90b3MsIG1ha2luZyB0aGUgc2Nob29sIGdyYWR1YXRpb24gY2xhc3MgbG9vayBsaWtlIGFsbW9zdCBhIGh1bmRyZWQuIFRoZSBzY2hvb2wgd2FzIGxvY2F0ZWQgaW4gYW4gb2ZmaWNlIGJ1aWxkaW5nIGluIHRoZSBjaXR5OiBubyBjYWZldGVyaWEsIHBsYXlncm91bmQsIG9yIGNhbXB1cy4uIApUaGluayBvZiBob3cgZGlmZmVyZW50bHkgZWR1Y2F0aW9uIGlzIGFwcHJvYWNoZWQgdG9kYXksIGFzIGEgYmluYXJ5LCBlaXRoZXIvb3IgY29ycmVjdC9pbmNvcnJlY3QgY29uY2x1c2lvbiwgd2hlcmVhcyB0aGUgVHJpdml1bSBpcyBhIG1vcmUgdHJpbmFyeSB2aWV3OiB3aGF0IGlzLCB3aGF0IGlzIG5vdCwgYW5kIHRoZSBjb21tb24gc3VyZmFjZSBiZXR3ZWVuIHRoZW0uLiAKRWRpdDoganVzdCBhZGRyZXNzaW5nIHRoZSB3aG9sZSBtZSBiZWluZyBhc3Nob2xlIGZvciBtYWtpbmcgYXNzdW1wdGlvbnMgdGhpbmcuIEkgYWxyZWFkeSBtZW50aW9uZWQsIEknbSB3ZWFrIGFmLiBOZXZlciBiZWVuIGFibGUgdG8gY2FycnkgdGhvc2UgYm90dGxlcyBhbmQgcHJvYmFibHkgbmV2ZXIgd2lsbC4gCiggbWlkd2l2ZXMsIGRvY3RvcnMsIGRvdWxhcywgZXRjLikgU2VpemluZyBIZXIgRGF5IEludGVuc2l0eSBDYXB0dXJlZCBPaCwgeWVhaCwgQkFCWSEhISEgVGhvdWdodHMgb24gIk9uZSBCb3JuIEV2ZXJ5IE1pbnV0ZSIgVGVycmlibGUgRmVlbGluZ3MgU3Vycm91bmRpbmcgTGV0ZG93bj8gR3Vlc3QgUG9zdDogSEJBQyBTdG9yeSBmcm9tIENOTSdzIFBPViBEaWQgWW91IFRyYW5zZmVyL1RyYW5zcG9ydCB0byB0aGUgSG9zcGl0YWw/IFJlYWxseT8gUkVBTExZPyBIeXBvY3JpdGUgaW4gdGhlIE1pZGRsZSBUaGUgSXJvbnkgb2YgUHJpdmlsZWdlIFdoYXQgQXJlIFlvdXIgV29yc3QgRmVhcnMgaW4gUHJlZ25hbmN5PyBQcmVmYWNlIHRvIEJpcnRoIFJhcGUgUGllY2UgKHF1ZXN0aW9ucykgRmFjZWJvb2sgb3IgQmxvZy4gRGVmaW5pbmcgTWlkL01lZHdpZmUgSSdtIGEgUHJvdWQgTWFtYSEgQmFubmluZyBDYW1lcmFzIGF0IEJpcnRoIFdoZW4gQ2hvb3NpbmcgYW4gT0IuIApJJ2QgZ28gc2hvcHBpbmcgd2l0aCBteSBkYWQsIGFuZCBzaGUnZCBzYXkgSSdkIHBpY2tlZCBoaW0gb3ZlciBoZXIsIHRoYXQgSSBoYXRlZCBoZXIsIGhlIHR1cm5lZCBtZSBhZ2FpbnN0IGhlciwgaG93IGNvdWxkIGhlLCBob3cgY291bGQgSSwgZXRjLiBPdmVyIGEgYmVuaWduIHNob3BwaW5nIHRyaXAuIEFuIGVycmFuZC4gSSBzYXcgaXQgYXMgcGF0aGV0aWMuIERpc2RhaW5mdWwuIFNoZSB3YXMgYW4gYWR1bHQuIFR3aWNlIG15IGFnZS4gTXkgbW90aGVyLiBMb3NpbmcgaGVyIHNoaXQsIGFzY3JpYmluZyBtZWFuaW5nIHdoZXJlIHRoZXJlIHdhcyBub25lLCBtYWtpbmcgY29uc3BpcmFjaWVzIG91dCBvZiB0aGluIGFpciwgb3ZlciBwZXR0eSBzaGl0IHRoYXQgaGFkIG5vdGhpbmcgdG8gZG8gd2l0aCBoZXIuIEFsbCBteSBsaWZlIHdhcyBsaWtlIHRoaXMuIEV2ZXJ5dGhpbmcgaGFkIG1lYW5pbmcuCkFuZCB3aGlsZSB0aGUgInR1cm5vdmVyIiBmaWd1cmVzIHJlZmVyIHRvIHRoZSB0b3RhbCB2YWx1ZSBvZiBiZXRzIG1hZGUgb24gZ2FtaW5nIG1hY2hpbmVzICBpbmNsdWRpbmcgYmV0cyB0aGF0IGFyZSBtYWRlIHVzaW5nIGNyZWRpdHMgd29uIGR1cmluZyB0aGUgY291cnNlIG9mIHBsYXkgIHRoZSBsb3NzZXMgYXJlIGFsc28gc3RhZ2dlcmluZy4gIlRoZSBhdmVyYWdlIHJldHVybiBvZiBhbGwgZ2FtaW5nIG1hY2hpbmVzIG92ZXIgdGhpcyBwZXJpb2QgW3dhc10gYWJvdXQgOTAgcGVyIGNlbnQsIiB0aGUgc3Bva2VzbWFuIHNhaWQuIApBcyBpZiB0byBpbGx1c3RyYXRlIHRoaXMgcG9pbnQgd2UgYWxzbyBjYXJyaWVkIGFuIGFydGljbGUgYWJvdXQgU2hhbWltYSBCZWd1bSBieSB0d28gYWNhZGVtaWNzLCB3aGljaCB0YWxrZWQgYWJvdXQgdGhlICJwcm9ibGVtYXRpYyBuYXJyYXRpdmUgb2YgJ2ppaGFkaSBicmlkZXMnIi4uIApUaGUgTkNBQSBpcyBnb2luZyB0byB3YW50IHRoZWlyIGN1dCBvZiB3aGF0PyBJbiBjb2xsZWdlIGJhc2tldGJhbGwsIHRoZXkgbWFrZSB0aGVpciBtb25leSBvZmYgb2YgdGhlIE1hcmNoIE1hZG5lc3MgdG91cm5hbWVudC4gSGF2aW5nIDUgMTAgcGxheWVycyBhIHllYXIgbm90IGdvaW5nIHRvIGNvbGxlZ2UgaXMgbm90IGdvaW5nIHRvIGFmZmVjdCB0aGVpciBib3R0b20gbGluZS4gVGhlIGxhc3QgMyAxIE5CQSBkcmFmdCBwaWNrcyBwbGF5ZWQgMSBnYW1lIGluIHRoZSBNYXJjaCBNYWRuZXNzIHRvdXJuYW1lbnQuIApUaGUgQWlyYnVzIEEzODAgY2FuIHJlYWNoIGEgbWF4aW11bSBzcGVlZCBvZiA2MzRtcGggKE1hY2ggMC45NikgYW5kIGhhcyBhIHJhbmdlIG9mIDksNzU1IG1pbGVzLiAKVGhhbmsgeW91IGZvciB5b3VyIGN1c3RvbS4gCkhvdyB0byBQcmV2ZW50IElkZW50aXR5IFRoZWZ0IGluIFlvdXIgRmF1eCBDbGF5IFBva2VyIENoaXBzIEJ1c2luZXNzCkdpZnQgQ2VydGlmaWNhdGVzIG11c3QgYmUgYm9va2VkLCBhbmQgc3VycmVuZGVyZWQgb24gdGhlIGRheSBvZiBhcHBvaW50bWVudCB1bmxlc3MgdGhlIEdpZnQgQ2VydGlmaWNhdGUgaXMgYXNzaWduZWQgdG8gdGhlIHJlY2lwaWVudCBhbmQgdGhlIHNlcnZpY2VzIGhhdmUgYmVlbiBhcHBsaWVkIHRoZSB0aGUgcmVjaXBpZW50cyBhY2NvdW50LiBHaWZ0IENlcnRpZmljYXRlcyBjYW5ub3QgYmUgcmVmdW5kZWQgb3IgZXhjaGFuZ2VkIGZvciBjYXNoIHZhbHVlLgpTbyBpbXBvcnRhbnQgdG8gaGF2ZSBhIGdvb2QsIHNvbGlkIHB1YmxpYyBoZWFsdGggdW5pdCBpbiB5b3VyIGNvbW11bml0eSB0aGF0IHdvcmtpbmcsIHNhaWQgVmlja2kgTWNLZW5uYSwgcHJvdmluY2lhbCBwcmVzaWRlbnQgZm9yIE9OQSB3aG8gam9pbmVkIHRoZSBudXJzZXMgb24gdGhlIHBpY2tldCBsaW5lLiBXaGF0IHRoZXNlIG51cnNlcyB3YW50IHRvIGRvLCB0aGV5IHdhbnQgdG8gYmUgYmFjayBhdCB3b3JrIGJ1dCBpdCBiZWVuIGEgeWVhciB3aXRob3V0IGEgY29udHJhY3QuIApUaGUgcXVhbGl0eSBzY29yZSB3YXMgNTYgcG9pbnRzLiAKVGhyZWUgb2YgYSBraW5kLiBUaGlzIGlzbid0IHRoZSBsb3dlc3QgdmFsdWVkIG9mIHRoZSBzcGVjaWFsIGhhbmRzLCBidXQgaXQgaXMgdGhlIGxlYXN0IGZhdm91cmFibGUgaW4gdGhpcyBsaXN0LiBJdCByZWZlcnMgdG8gYSBzZXQgb2YgZml2ZSBjYXJkcyB3aGVyZSB0aHJlZSBhcmUgb2YgdGhlIHNhbWUgZGVub21pbmF0aW9uIGFuZCB0aGUgdHdvIGV4Y2VzcyBhcmUgdW5wYWlyZWQuIExpa2UgdGhlIEZvdXIgb2YgYSBraW5kLCB0aGUga2lja2VycyBhcmUgdXRpbGl6ZWQgdG8gZGV0ZXJtaW5lIHdoaWNoIG9mIHRoZSBwbGF5ZWQgc2V0cyBkb21pbmF0ZS4KTWVhbndoaWxlLCBwcm9kdWN0aW9uIG9mIHRoZSA3ODcgaW4gcGFydGljdWxhciBjb250aW51ZXMgdG8gaW1wcm92ZSBhbmQgdG8gYnJpbmcgaW4gbW9yZSBjYXNoIGV2ZXJ5IHF1YXJ0ZXIuIEJvZWluZyBnZW5lcmF0ZWQgJDQuNiBiaWxsaW9uIGluIG9wZXJhdGluZyBjYXNoIGZsb3cgaW4gdGhlIHF1YXJ0ZXIuCkFwYXJ0IGZyb20gdGhlIGJ1bGxsc2hpdCBsb2dpYyB0aGF0IHlvdSBoYXZlIGFwcGxpZWQgaGVyZSAoSSBuZWVkIHRvIHNwZWFrIG15IG5laWdoYm91ciBsYW5ndWFnZSBub3QgdG8gYnV0Y2hlciBoaW0/IT8pLCBsZXRzIGp1c3QgYXNzdW1lIHRoYXQgSSBhIHNoaXR0eSBwZXJzb24gYW5kIEkgZG9uIGxpa2UgS3VyZHMuIEkgZG9uIGhhcm0gdGhlbSwgSSBqdXN0IGRvbiBsaWtlIHRoZW0gYW5kIHRoZWlyIGxhbmd1YWdlLiAKVGhlIHByb2Nlc3Mgb2YgY29tbXVuaWNhdGlvbiBiZWNvbWVzIGVmZmVjdGl2ZSB3aGVuIGl0IGdpdmVzIHNvbWUgcG9zaXRpdmUgZWZmZWN0LiBJbiB0b2RheSdzIHdvcmxkIHRoZSBwcm9jZXNzIG9mIGNvbW11bmljYXRpb24gcmVhY2hlZCBldmVyeSBjb3JuZXIgb2YgdGhlIHdvcmxkLiAKSGUgd2FzIG5vdyBzYXlpbmcgdGhlIGZvdW5kYXRpb24gaGFkIGRpc3RyaWJ1dGVkIGFib3V0IDUwIHBlciBjZW50IG9mIHdoYXQgaXQgaGFkIHJhaXNlZCBzaW5jZSAyMDA0LiBUaGlzIHdhcyBvZnRlbiBhY2NvbXBhbmllZCB3aXRoIGEgcGxlZGdlIHRvIGdpdmUgYXdheSBhbm90aGVyICQ0MDAsMDAwIHRvICQ1MDAsMDAwIGluIHRoZSBjb21pbmcgbW9udGhzLCBicmluZ2luZyB0aGUgdG90YWwgZGlyZWN0bHkgY29udHJpYnV0ZWQgdG8gY2hhcml0eSB0byBtb3JlIHRoYW4gJDQgbWlsbGlvbiBpbiB0aGUgcGFzdCAxMSB5ZWFycy4gQnV0IHRob3NlIGluIHRoZSBrbm93IGtuZXcgYmV0dGVyLiAKU29tZSBwbGFjZXMgd2hlcmUgaXQgbGVnYWwgbWFrZSBpdCBzaWduaWZpY2FudGx5IHNhZmVyIGFzIHdlbGwuQWxsIHRoYXQgYXNpZGUsIG15IHVuZGVyc3RhbmRpbmcgaXMgdGhhdCBhIGJvbnVzIG9mIGhpcmluZyBhIHByb3N0aXR1dGVzIG9yIGVzY29ydCBtZWFucyB5b3UgY2FuIGdldCByaWdodCB0byB5b3VyIGtpbmsgd2l0aG91dCBlbWJhcnJhc3NtZW50IG9yIHdvcmtpbmcgdXAgdG8gaXQgd2l0aCBhIHJlZ3VsYXIgcmVsYXRpb25zaGlwLiBZb3UgY2FuIGp1c3QgZHJvcCBjYXNoIGFuZCBqdW1wIHJpZ2h0IGluLiAKQmxha2thc2F1cnVzICAzIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvClRoZXkgYXJlIHRoZSBvbmVzIHdpdGggdGhlIHRpbWUgYW5kIGVuZXJneS4gV2UgcGF5IHRoZW0gd2VsbC4gCkFuZCwgYXMgSSBzYWlkLCBhIGxvdCBvZiBpdCBpcyBoaWdoIGVsZXZhdGlvbiBmb3IgdGhpcyBhcmVhLCBhbmQgZXhwb3NlZCB0byB0aGUgd2luZCwgc28gaXQgY2FuIGdldCByZWFsIGNvbGQsIHJlYWwgZmFzdC4gClRyeSB0byBiZSBhIHNoYXJrIGFuZCBlbGltaW5hdGUgcGxheWVycyB0aGF0IHlvdSBzZWUgYXJlIHdlYWsgZWFybHkgaW4gdGhlIGdhbWUgYW5kIHdob3NlIGNoaXBzIGFyZSBkd2luZGxpbmcuIEJ1bXAgb3V0IHRoZSBwbGF5ZXIgeW91IHRoaW5rIGlzIHdlYWsgYnkgd2FnZXJpbmcgYWdhaW5zdCBoaW0gZm9yIHRoZSBhbW91bnQgb2YgcG9rZXIgY2hpcHMgaGUgaGFzLiBJZiB5b3UgcGxheSB5b3VyIGNhcmRzIHJpZ2h0LCBoZSB3aWxsIHJpZGUgd2l0aCB0aGUgYmV0LCBwdXQgYWxsIGhpcyBjaGlwcyBpbiBhbmQgbG9zZS4gVGhhdCBpcyBvbmUgcGxheWVyIG91dCBvZiB5b3VyIHdheS4KQWx0aG91Z2ggdGhlIGNvbXBsYWludHMgYXJlIG1vc3RseSByaWRpY3Vsb3VzLCBSZWxhdGVkIENvbXBhbmllcyBmb3VuZGVyIGFuZCBDaGFpcm1hbiBTdGVwaGVuIE0uIFJvc3Mgc291bmRlZCBzdHVuZyBieSB0aGUgc25pcGluZy4gSGUgc2FpZCBhdCBhIHJlY2VudCBtZWRpYSB3YWxrIHRocm91Z2gsICJUaGlzIGlzIG5vdCBhIHByb2plY3QgZm9yIHRoZSByaWNoLCBub3QgYW4gZW5jbGF2ZS4gV2UncmUgaGl0dGluZyBhbGwgaW5jb21lIGxldmVscyBhdCBldmVyeSBwcmljZSBwb2ludC4gSXQncyBhIGNpdHkgd2l0aGluIHRoZSBjaXR5IHRoYXQncyBhbHNvIHBhcnQgb2YgdGhlIGNpdHkuIgpEbyB5b3UgcGxheSBwb2tlcj8gSSBhbSBhIHBva2VyIGZhbi4gSSBkaWQgcGxheSBhIGJpdCBidXQgbm90IG5vdy4gSSBqdXN0IGRvbiBoYXZlIGEgZ29vZCBlbm91Z2ggZ2FtZSB0byBzdWNjZWVkIGF0IHRoZSBoaWdoZXN0IGxldmVscy4gQnV0IHRvIGJlIGFibGUgdG8gdGVhY2ggeW91IG5lZWQgdG8gcGxheSB3ZWxsIGVub3VnaCB0byBlYXJuIHRoZSBzdHVkZW50cyByZXNwZWN0LiBJIG5lZWQgdG8gYmUgYWJsZSB0byBwbGF5IGhhbmRzIHdpdGggdGhlbSBhbmQgdGVsbCB0aGVtIHRoaXMgaXMgd2h5IEkgZGlkIHRoaXMuClRoZSBDbGlwcGVycyBhcmUgZ29pbmcgdG8gdHJ5IHRvIHNwZW5kLiAKWWVzLCB3aGVuIHlvdSBoYXZlIGEgc2V0IGFuZCB0aGV5IGZvbGQgaXQgc3Vja3MuIEhvd2V2ZXIgdGhhdCBkb2VzbnQgbWVhbiBpdCBpc250IHRoZSBtb3N0ICtFViBkZWNpc2lvbiBmb3IgeW91ciBvdmVyYWxsIHJhbmdlLi4gCkFiZXIgZGVyIEdydW5kIGlzdCBuaWNodCBlaW5lIEV0aG5pZSBzb25kZXJuIHdlaWwgZGllc2UgYXVzIHJlaWNoZW4gSW5kdXN0cmllbG5kZXJuIHN0YW1tZW4uQWxzIEV1cm9wZXIgdW5kIHNvbWl0IGRpZSBiZXJ3aWVnZW5kZSBNZWhyaGVpdCBkZXIgSGVya3VuZnQgdm9uIGRvcnRpZ2VuIFRvdXJpc3RlbiwgZXJrZW5udCBtYW4gZGljaCB2b20gQXVzc2VoZW4gc2Nob24gdm9uIHdlaXRlbSB1bmQgZHUgYmlzdCBmciBkaWUgR2VzY2hmdHN0Y2h0aWdlbiBudW5tYWwgc29taXQgZWluIERvbGxhcnNjaGVpbiBhdWYgendlaSBCZWluZW4uRGllc2UgRXJsZWJuaXNzZSBrYW5uIG1hbiBhYmVyIG5pY2h0IG1pdCBkZW0gbmNoc3RlbiBQYXVzY2hhbHVybGF1YiB2ZXJnbGVpY2hlbiwgd29tZ2xpY2ggbm9jaCBpbiBFdXJvcGEgc2VsYmVyLktpbGxlcmF3ZnRNZWhyIHNvIGRlciBGaWNrZXIgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvRGFzIEF1c3NlaGVuIGhhdCBldHdhcyBkYW1pdCB6dSB0dW4sIGRhc3Mgc2llIGFscyBUb3VyaXN0aW4gZXJrYW5udCB3aXJkLCB3YXMgd2llZGVydW0gZXR3YXMgZGFtaXQgenUgdHVuIGhhdCwgZGFzcyBzaWUgYWJnZXpvY2t0IHdpcmQuIFdlbm4gZGllIEVpbmhlaW1pc2NoZW4gYXVzIGRlbSBMYW5kIGJlaSBhbmRlcmVuIFRvdXJpc3RlbiBhbiBhbmRlcmVuIFNhY2hlbiBtZXJrZW4sIGRhc3Mgc2llIFRvdXJpc3RlbiBzaW5kIHdlcmRlbiBkaWUgbWl0IFNpY2hlcmhlaXQgZ2VuYXUgc28gYXVzZ2Vub21tZW4uIApFVEE6IEp1c3QgZ290IGJhY2sgZnJvbSBwYXRyb2xsaW5nIGFyb3VuZCB0aGUgUG9uZCBhdCA1OXRoIGFuZCA1dGggYnkgV29sbG1hbiBSaW5rLiAKSnVuZSAyLCAxOTkwQlVJTERJTkdTIFRIQVQgaGF2ZSBiZWVuIGZyZXF1ZW50IHNpdGVzIG9mIHByb3N0aXR1dGlvbiBjYW4gYmUgZGVjbGFyZWQgcHVibGljIG51aXNhbmNlcyBhbmQgZXZlbnR1YWxseSBzaHV0IGRvd24gdW5kZXIgYSBiaWxsIHRoZSBIb3VzZSBzZW50IHRvIEdvdi4gQm9iIE1hcnRpbmV6IG9uIEZyaWRheS4gVGhlIGxlZ2lzbGF0aW9uIChIQiAyOTg3KSB3b3VsZCBsZXQgbG9jYWwgZ292ZXJubWVudHMgZmlsZSBjb21wbGFpbnRzIGluIGNvdXJ0IGFib3V0IGFsbGVnZWQgc2l0ZXMgb2YgcHJvc3RpdHV0aW9uLkFSVElDTEVTIEJZIERBVEVTZXggc3Rpbmcgc25hcmVzIEZsb3JpZGEgY29wIGR1cmluZyBPcGVyYXRpb24gU3VtbWVyIExvdmluJ01DVCBSRUdJT05BTCBORVdTLCBBdWd1c3QgMTksIDIwMTRBIFBhbGF0a2EgcG9saWNlIGRldGVjdGl2ZSB3aG8gcmFuIGZvciBQdXRuYW0gQ291bnR5IHNoZXJpZmYgd2FzIGFycmVzdGVkIGR1cmluZyBhIFN0LiAKWW91IHRvb2sgdGhlIHRpbWUgdG8gd3JpdGUgdGhpcyBsZXR0ZXIsIHdoaWNoIG1lYW5zIHlvdSdyZSByZWFkeSB0byBjb25mcm9udCB0aGlzIG1hbiBhYm91dCB3aGF0J3MgaGFwcGVuaW5nLiAKRXZlcnkgR3JlZ2dzIGJha2VyeSBpbiBCaXJtaW5naGFtIHJhbmtlZCBhbmQgcmF0ZWQgb24gVHJpcEFkdmlzb3IgYW5kIEdvb2dsZQpXaXRoIGtpbmQgcmVnYXJkcyBmcm9tIHRoZSBCMiB5b3VyIEd1ZXN0IEFtYmFzc2Fkb3IgTmluYSBTY2hyb2VkZXJSZXNwb25zZSBmcm9tIEIyQm91dGlxdWVIb3RlbCwgRGlyZWN0b3Igb2YgU2FsZXMgYXQgQjIgQm91dGlxdWUgSG90ZWwgKyBTcGFSZXNwb25kZWQgSmFuIDMwLCAyMDE5RGVhciBTaWdodHNlZTE3NTQwNDA5MTY1IEkgYW0gc28gZ2xhZCB0byBoZWFyIHRoYXQgeW91IGVuam95ZWQgeW91ciBzdGF5IHdpdGggdXMuIEkgd2lsbCBiZSBkZWxpZ2h0ZWQgdG8gZm9yd2FyZCB5b3VyIGxvdmVseSB3b3JkcyB0byBteSBlbnRpcmUgdGVhbS4gClRoZSBudW1iZXJzIGFyZSBncm93aW5nIG11Y2ggZmFzdGVyIHRoYW4gb3VyIGdlbmVyYWwgY2xpZW50IG51bWJlcnMsIGFuZCB3ZSBhcmUgb24gdHJhY2sgdG8gaGF2ZSBldmVuIGxhcmdlciBudW1iZXJzIG9mIHlvdXRoIGdhbWJsZXJzIGNvbWluZyB0aHJvdWdoIG91ciBkb29ycyB0aGlzIHllYXIuIi4gCkVpdGhlciB3YXkgd291bGQgYWNjb21wbGlzaCB0aGUgc2FtZSBnb2FsIHNvIEkgZm9yIGl0LiBBbm90aGVyIHRoaW5nIEkgd2FudCwgYW5kIGl0IHN1Y2tzIGJlY2F1c2UgSSBhIEJlcm5pZSBndXksIGlzIGFuIGFnZSBsaW1pdCB0byB0aGVzZSBwb3NpdGlvbnMuIEl0IHRoZSBwb2xpdGljYWwgcmV0aXJlbWVudCBhZ2Ugc2hvdWxkIGJlIDY1IGFzIGl0IHdvdWxkIGJlIGluIGEgbm9ybWFsIHdvcmtmb3JjZS4gCjEgc2FjaGV0IG9mIGRhc2hpbm8gbW90byBhbmQgbWlzbyB0byB0YXN0ZS4gVXN1YWxseSBiZXR3ZWVuIDMgNCB0c3AuClRoZXJlIHdlcmUgbm8gZGVlcCBnbGltcHNlcyBpbnRvIHdoYXQgY291bGQgYmUsIG9ubHkgd2hhdCB3b3VsZCBzb29uIHBhc3MgIGEgc2luZ2xlLCB1bmNoYW5nZWFibGUgZGlzcGxheSwgbGlrZSBhIGZvb3RiYWxsIGdhbWUgc3RyZWFtaW5nIGp1c3QgYSBiaXQgdG9vIGVhcmx5LldvcmQgc3ByZWFkIG9mIGhpcyBhYmlsaXRpZXMsIGFmdGVyIGZyaWVuZHMgYW5kIGZhbWlseSBjYXVnaHQgZ2xpbXBzZXMgb2YgaGlzIG9kZGl0aWVzLiAKT24gdGhlIG5pZ2h0IG9mIEZlYnJ1YXJ5IDNyZCAyMDE0IEkgc2F3IGEgZHJlYW0uIFRoaXMgaXMgYSBkcmVhbSBwb3J0cmF5aW5nIHRoZSBwYXNzaW9uYXRlIGludGltYWN5IG9mIEdvZCB3aXRoIEhpcyBicmlkZSwgYW5kIGEgd2FybmluZyBvZiBncmVhdGVyIGZ1dHVyZSBjYXRhc3Ryb3BoaWMgdHJvdWJsZXMgYWhlYWQgb2YgdXMuIFBsZWFzZSBqb2luIG1lIGluIG15IHByb3BoZXRpYyBkcmVhbSB0byB1bmRlcnN0YW5kIHdoYXQgdGhlIEdPRCBvZiB0aGUgdW5pdmVyc2Ugd2FudHMgSGlzIHBlb3BsZSB0byBrbm93LgpXaGlsZSBtb3ZpbmcgeW91IHRocm91Z2ggdGhhdCByYW5nZSBvZiBtb3Rpb24sIHlvdSB3b3VsZCBiZSByZXNpc3RpbmcgaGltIGJ5IHByZXNzaW5nIHlvdXIgZm9vdCBkb3duIHRvd2FyZHMgdGhlIHRhYmxlIHRoZXJlYnkgY29udHJhY3RpbmcgeW91ciBoYW1zdHJpbmdzLiAKTm90IGdvbm5hIGRpZS4gCiJIZXMgbmV2ZXIgZHJhd24gaGlzIGd1biwgaXQgbWFrZXMgbm8gc2Vuc2UsIiBFcmljIFBhZGRvY2sgc2FpZC4gSGUgc2FpZCBoZSB3YXMgYXdhcmUgdGhhdCBoaXMgYnJvdGhlciBoYWQgYSBjb3VwbGUgb2YgaGFuZGd1bnMgaGUga2VwdCBpbiBhIHNhZmUsIHBlcmhhcHMgYSBsb25nIHJpZmxlLCBidXQgbm8gYXV0b21hdGljIHdlYXBvbnMuCkFub3RoZXIgd2FzIGZvciBhICQxNTAsMDAwIGNhc2ggcHJpemUuQ29uY2VydGdvZXJzIGRlc2NyaWJlIHRoZSBzY2VuZVRoZSBkb2N1bWVudHMgYWxzbyBpbmNsdWRlIG1hbnkgd2l0bmVzcyBzdGF0ZW1lbnRzIGZyb20gcGVvcGxlIGF0dGVuZGluZyB0aGUgY29uY2VydCwgaGVhZGxpbmVkIGJ5IGNvdW50cnkgc3RhciBKYXNvbiBBbGRlYW4uT25lIG1hbiBkZXNjcmliZWQgdGFraW5nIGNvdmVyIHRvIHRoZSByaWdodCBvZiB0aGUgc3RhZ2Ugb25jZSBoZSBhbmQgb3RoZXJzIGhlYXJkIGd1bnNob3RzLiAKVmVyeSBvZnRlbiB0aGUgY291cGxlIGFyZSB3ZWxsIGludG8gdGhlaXIgY2FyZWVycyBvciBhbHJlYWR5IG93biBhIGJpZyBuZXcgaG91c2UgICBub3QgZXhhY3RseSBmaXR0aW5nIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgeW91bmcgYW5kIGp1c3Qgc3RhcnRpbmcgb3V0IGNvdXBsZXMgc29jaWFscyB1c2VkIHRvIGJlIGZvci4gCk9yIGhhdmluZyB0byBjaGFzZSBkb3duIGEgbWFuYWdlciBhbmQgZ2l2ZSB0aGVtIGV2ZXJ5LiAKQXNpYSBtaWdodCBiZSBuZXcgdG8gdGhlIGdhbWUsIGJ1dCBzb21lIG9mIHRoZSBtb3N0IGZhbW91cyBBbWVyaWNhbiBwb2tlciBwbGF5ZXJzIGFyZSBvZiBBc2lhbiBkZXNjZW50LiAKVW5sZXNzIG9mIGNvdXJzZSwgQnJhbmRvbiBpcyByb2xsaW5nLi4gCkZvciB0aGlzIHByb2plY3QsIGNob29zZSBhIG1haW4gaW1hZ2UgYW5kIHRoZW4gYXNzZW1ibGUgc21hbGwgcGljdHVyZXMgYWNjb3JkaW5nIHRvIGNvbG9yIHRvbmVzIGluIHRoZSBtYWluIGltYWdlLiAKT3V0Y29tZXMgZm9yIHByZW1hdHVyZSBiYWJpZXMgKGVzcGVjaWFsbHkgYXQgYSBsYXRlciBzdGFnZSBsaWtlIHlvdSBpbiBjdXJyZW50bHkpIGFyZSBldmVyIGltcHJvdmluZyBhbmQgZ3Vlc3Mgd2hhdD8gMzMgd2Vla3MgaXMgY29uc2lkZXJlZCBvbmx5ICJtaWxkbHkiIHByZW1hdHVyZSEgVGhhdCBkb2VzbiBzb3VuZCBzbyBiYWQsIHJpZ2h0Py4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uSSBXT1VMRCBsaWtlIHRoZSBjb21tdW5pdHkgdG8gYmUgYXdhcmUgb2YgdGhlIGZvbGxvd2luZzogICBXaGVuIHRoZSBDb3Jvd2EgQm93bGluZyBDbHViIHdlbnQgaW50byByZWNlaXZlcnNoaXAsIGEgZ3JvdXAgb2YgY29uY2VybmVkIGNpdGl6ZW5zIHB1cmNoYXNlZCB0aGUgbGFuZCBsZWFzZSBhbmQgYnVpbGRpbmcgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGdldHRpbmcgaXQgYmFjayB1cCBhbmQgcnVubmluZyBhcyBhIGNvbW11bml0eSBjbHViOyAgIE5pbmUgc3BvcnRpbmcgY2x1YnMgcmVwcmVzZW50aW5nIHRoZSBjb21tdW5pdHkgb2YgQ29yb3dhIHRvb2sgb24gdGhlIGNoYWxsZW5nZSBhbG9uZyB3aXRoIEl2YW4gUm9zcyBhbmQgZ290IHRoZSBjbHViIG9wZXJhdGluZyBvbmNlIGFnYWluOyAgIEFmdGVyIGZpdmUgeWVhcnMgb2Ygb3BlcmF0aW9uIHRoZSBzcG9ydGluZyBjbHVicyBzb2xkIHRoZSBsZWFzZSBhbmQgYnVpbGRpbmcgdG8gdGhlIFJTTCBDbHViIGZvciAkNTAwLDAwMCB3aGljaCB3YXMgcGFpZCBiYWNrIHRvIHRoZSBvcmlnaW5hbCBncm91cCBvZiBjb25jZXJuZWQgY2l0aXplbnM7ICAgVGhlIFJTTCBDbHViIHdhcyBhbHNvIGhhbmRlZCBtb3JlIHRoYW4gJDEsMDAwLDAwMCB3b3J0aCBvZiBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIGZyb20gdGhpcyBjb21tdW5pdHkgZ3JvdXA7ICAgVGhlIFJTTCBzdGF0ZWQgdGhhdCB0aGV5IHdvdWxkIHJ1biB0aGUgY2x1YiBmb3IgYSBtaW5pbXVtIG9mIGZpdmUgeWVhcnMgdG8gc2hvdyB0aGF0IHRoZSBwdXJjaGFzZSB3YXMgZ2VudWluZTsgYW5kLCAgIEp1c3Qgb24gZml2ZSB5ZWFycyBsYXBzZWQsIGFuZCB0aGUgUlNMIGNsb3NlZCB0aGUgY2x1Yi4gSSBmZWVsIHRoYXQgdGhlIFJTTCBDbHViIG93ZXMgYSBkZWJ0IHRvIHRoZSBjb21tdW5pdHkgb2YgQ29yb3dhIGJlY2F1c2Ugd2UgaGF2ZSBnaXZlbiB0aGVtIHRoZSBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIHRvIGNvbnRpbnVlIHRvIG9wZXJhdGUgdGhlIGNsdWIsIHdoaWNoIHRoZXkgaGF2ZSBub3QgZG9uZS4gClRoZXJlIGFyZSBzZXZlcmFsIHZhcmlhYmxlcyBpbnZvbHZlZC4gCkFkZWxhaWRlIGhhcyBwZW5jaWxsZWQgaW4gYSBmYXJld2VsbCBob21lIHdpbiBhZ2FpbnN0IHRoZSBLYW5nYXJvb3MgYXMgdGhlIGZpcnN0IHN0ZXAgaW4gYXRvbmluZyBmb3IgYW4gdW5kZXIgcGFyIDIwMTggY2FtcGFpZ24uIApJIHN0YXJ0ZWQgdHJhY2tpbmcgbXkgcnVucyBhbmQgd2Vla2x5IG1pbGVhZ2Ugb24gU3RyYXZhLCByZWFkaW5nIG1vcmUgYWJvdXQgaW1wcm92aW5nIGF0IHJ1bm5pbmcsIGFuZCBidWlsZGluZyB1cCBteSB3ZWVrbHkgbWlsZXMuIApZaWVsZCBDdXJ2ZSBJbnZlcnNpb24gSGFzIFJlY2Vzc2lvbiBXYXRjaGVycyBXb3JyaWVkCkdvdCBmbG93ZXJzIGRlbGl2ZXJlZCBmcm9tIHRoZSBjZW50cmFsIGZsb3dlciBtYXJrZXQgaW4gU2VvdWwuIEdvdCBhIGNhdGVyZXIgdG8gZGVsaXZlciB0aGUgc3RhbmRhcmQgZmVhc3QgdG8gdGhlIHBlbnNpb24uIFdhcyBhbWF6aW5nIGZ1biBhbmQgbW9zdCBvZiB0aGUgKG1haW4gZmFtaWx5IGFuZCBmcmllbmRzKSBndWVzdHMgc2xlcHQgYXQgdGhlIHBlbnNpb24gYW5kIHBhcnRpZWQgYWxsIG5pZ2h0LiAKSGUgd2FzIHJhaXNlZCBwcmltYXJpbHkgaW4gV2VzdGRhbGUgYW5kIGF0dGVuZGVkIENhbmFkaWFuIE1hcnR5cnMgYW5kIENhdGhlZHJhbCBCb3lzIEhpZ2ggU2Nob29sLiAKSXQgbm90IGVub3VnaCBmb3IgdGhlcmUgdG8gbWVyZWx5IGJlIGVxdWFsIGFjY2VzcyB0byBDYXRhbGFuIGFuZCBTcGFuaXNoIGN1bHR1cmUuIFRoYXQgbGlrZSBwaXR0aW5nIGEgZmVhdGhlcndlaWdodCBhZ2FpbnN0IGFuIG9seW1waWMgaGVhdnl3ZWlnaHQuIFNjb3R0aXNoIEdhZWxpYywgQnJldG9uIGFuZCBTYW1pIGFsbCBoYXZlIGVxdWFsIGxhbmd1YWdlIHJpZ2h0cyBidXQgdGhleSBhcmUgc3RpbGwgaHVydGxpbmcgdG93YXJkcyBleHRpbmN0aW9uIGJlY2F1c2UgdGhhdCB3aGF0IGhhcHBlbnMgdG8gbWlub3JpdHkgY3VsdHVyZXMgcGl0dGVkIGFnYWluc3QgYSBkb21pbmFudCBjdWx0dXJhbCBoZWdlbW9uLiBFc3BlY2lhbGx5IGluIENhdGFsb25pYSB3aGljaCBoYXMgZXhwZXJpZW5jZWQgdW5yZWxlbnRpbmcgaW1taWdyYXRpb24gZnJvbSBvdGhlciBwYXJ0cyBvZiBTcGFpbiBhbmQgYWJyb2FkIHRvIHRoZSBwb2ludCB0aGF0IHRoZXkgYXJlIHRoZSBtYWpvcml0eSBpbiBtb3N0IGNpdGllcyBhbmQgaGF2ZSBtYXNzaXZlbHkgcmFsbGllZCBhcm91bmQgYSBwYXJ0eSB0aGF0IHdhbnRzIHRvIHJlZHVjZSB0aGUgc3RhdHVzIG9mIENhdGFsYW4gYW5kIHJlbW92ZSBDYXRhbG9uaWEgYXV0b25vbXkuIDkgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KWW91IGNvdWxkIHRydXN0IGluIGEgY2xvdWQgYmFja3VwIHN5c3RlbSAoYXNzdW1pbmcgeW91IGhhdmUgYmxhemluZyBmYXN0IGludGVybmV0IHRvIGJlIGFibGUgdG8gaGFuZGxlIHRlcnJhYnl0ZXMgb2YgZGF0YSB1cGxvYWQgaW4gYSByZWFzb25hYmxlIGFtb3VudCBvZiB0aW1lKSBidXQgdGhvc2UgYXJlbiBndWFyYW50ZWVkIGVpdGhlci4gSGFja3MgaGFwcGVuIGRhaWx5LCB0aGF0IG9mZnNpdGUgZGF0YSBmYXJtIGNvdWxkIGdldCBidXJuZWQgZG93biwgb3IgbWlzdGFrZXMgY291bGQgaGFwcGVuIG9uIHRoZWlyIGVuZCB0aGF0IHlvdSBsb3NlIGFjY2VzcyB0byB5b3VyIGVuY3J5cHRlZCBhY2NvdW50Li4gCk1hbnkgbGl2ZSBldmVudHMgYXJlIGFscmVhZHkgc3RyZWFtZWQgb24gVHdpdGNoIHdoZXJlIHRoZXkgZ2F0aGVyIGEgYmlnZ2VyIGNyb3dkIHRoYW4gb24gWW91dHViZSB3aGlsZSBzdGlsbCBiZWluZyBiZXR0ZXIgbW9kZXJhdGVkIChleGFtcGxlcyBpbmNsdWRlIFRyaXRvbiBQb2tlciwgV29ybGQgQ2hlc3MgQ2hhbXBpb25zaGlwLCBFMy9OaW50ZW5kbyBEaXJlY3RzIGFtb25nIG90aGVycykKVGhpcyBjYW4gbWFrZSB5b3VyIHdpZmUgZmVlbCBzZXh5IGFuZCBzcGVjaWFsLiBXb21lbiB3YW50IHRvIGJlIHBhbXBlcmVkIGJ1dCBpdCBjYW4gYmUgZGlmZmljdWx0IHRvIGZpbmQgdGhlIHRpbWUgdG8gZ28gdG8gdGhlIHNwYSB3aXRoIGEgYnVzeSBzY2hlZHVsZS4gRG9pbmcgdGhpcyB3aWxsIGFsbG93IHlvdXIgd2lmZSB0byBoYXZlIGEgc3BhIGRheSB0aGF0IHNoZSBoYXMgYWx3YXlzIHdhbnRlZC4gClRoZXkgYXJlIHNob3J0IHBpdGh5LCBwb2VtcywgdXN1YWxseSBvbmUgb3IgdHdvIHBhZ2VzLCB3aXRoIHN0YWNjYXRvIHJoeXRobXMsIG9mdGVuIG9uZSB3b3JkIGxpbmVzLCBhbmQgdmFyaWVkLCBvZnRlbiB1bnVzdWFsLCB1c2Ugb2YgcmVwZXRpdGlvbiwgYWxsaXRlcmF0aW9uLCBtZXRhcGhvciwgc2ltaWxlcyBhbmQgb3RoZXIgdGVjaG5pY2FsIHRvb2xzLi4gCldoZW4gUnVjaCB3YXMgbGVhcm5pbmcgYWJvdXQgY29ycG9yYXRlIGN1bHR1cmUgaW4gdW5pdmVyc2l0eSwgaGUgZGlkbid0IHRoaW5rIG11Y2ggb2YgaXQuICJJIHRob3VnaHQgdGhhdCBhIGxvdCBvZiBjb21wYW5pZXMgaGFkIHB1dCBhIGxvdCBvZiB3b3JkcyBvbiBwYXBlciwgYnV0IGl0IGRpZG4ndCByZWFsbHkgbWVhbiBtdWNoLCIgaGUgc2F5cy4gSG93ZXZlciwgaXQgd2FzIGltbWVkaWF0ZWx5IGNsZWFyIHRvIGhpbSB0aGF0IHRoYXQgd2Fzbid0IHRoZSBjYXNlIGF0IExhYmF0dC4gIkV2ZXJ5b25lIGhlcmUgaXMgcGFzc2lvbmF0ZSBhYm91dCB0aGUgY29tcGFueSwgYWJvdXQgcmVzdWx0cywiIGhlIGFkZHMuICJNZXJpdG9jcmFjeSBpcyBleHRyZW1lbHkgaW1wb3J0YW50LCBhbmQgaXQncyBhY3RlZCB1cG9uLiBZb3Ugc2VlIGl0IGV2ZXJ5IGRheS4iClNvIG5vdyBJIHRyZWF0IGV2ZXJ5IGludGVyYWN0aW9uIHdpdGggc3VzcGljaW9uIGFuZCBkYWlseSByZWhlYXJzZSB2YXJpb3VzIHdheXMgb2Ygc2F5aW5nICJubywgbm90IGludGVyZXN0ZWQsIGxlYXZlIG1lIGFsb25lLCBJIG1hcnJpZWQsIEkgSEFQUElMWSBtYXJyaWVkLiIgY2F1c2Ugc29tZXRpbWVzIG1lbiB3b24gZXZlbiBnaXZlIHVwIGF0IHRoZSBkZWNsYXJhdGlvbiB0aGF0IEkgbWFycmllZCwgdGhhdCBkaXN0dXJicyBtZSB0aGUgbW9zdC4gSSBqdXN0IHdhbnQgdG8gYmUga2luZCwgSSBsaWtlIHRvIGJlIGZyaWVuZHMsIHVuZm9ydHVuYXRlbHkgdGhhdCBkb2VzbiBzZWVtIHBvc3NpYmxlLi4gCkJhY2sgaW4gdGhlIGRheSBpdCB3YXMgdGhlIFRoYWkgUm9vbSBvbiBQYXRwb25nIGFuZCBhIGZldyBvdGhlciBqb2ludHMgdGhhdCBjYXJyaWVkIE1leGljYW4gaXRlbXMuIApCdXQgdGhlIHdpbm5lciBtYXkgY2hhbGxlbmdlIGhlciB0byBhIGR1ZWwgb25jZSB0aGV5IGxlYXJuIHdoYXQgaW4gdGhlIHBvdC4gCkhlIGhhZCBhIHNpbWlsYXIgZXhwZXJpZW5jZSB3aXRoIGhpcyBzY2hvb2wsIGFuZCBpbiBhZGRpdGlvbiBoZSBzYWlkIGl0IHdhcyB2ZXJ5IHNtYWxsLiAKVGhleSBldmVuIG1hZGUgcGljdHVyZXMgb2YgaG93IHRoZXNlIGFuY2VzdG9ycyBsb29rZWQgbGlrZSB3aGVuIHRoZXkgd2VyZSBhbGl2ZS4gCk9ubGluZSBwb2tpZXM6IHNpbmNlIHRoaXMgaXMgYSBwcmVmZXJyZWQgY2F0ZWdvcnkgZm9yIEF1c3RyYWxpYW4gY2FzaW5vIHBsYXllcnMgaXQgbmVlZHMgdG8gYmUgZGlzY3Vzc2VkIGluIG1vcmUgZGV0YWlsLiBUaGUgYmVzdCBnYW1lcyBzdXBwbGllcnMgaW5jbHVkZSBhIGxhcmdlIG51bWJlciBvZiB2aWRlbyBwb2tpZXMgaW4gdGhlaXIgcG9ydGZvbGlvLCBpbmNsdWRpbmcgcHJvZ3Jlc3NpdmUgamFja3BvdCBwb2tpZXMgYW5kIGJyYW5kZWQgcG9raWVzLiAKV2UgaGF2ZSB0byB0aHJvdyBpdCBhd2F5Li4gCiJPa2F5ISBMZXQgZG8gaXQhIkkgbGlrZSB0byBzYXkgSSBoYWQgdGhlIGZvcmV0aG91Z2h0IHRvIGtlZXAgaGVyIG51bWJlciBidXQsIGFsYXMsIGl0IGRpZG4gb2NjdXIgdG8gbWUgYXQgdGhlIHRpbWUuIApIb3dldmVyIHRvIG1lIHNob3J0ZXIgbWFsZSBmcmllbmRzIG91dCB0aGVyZS4gdGhlcmUgYXJlIHNldmVyYWwgb3B0aW9ucyB0byBpbmNyZWFzZSB5b3VyIGFwcGVhcmFuY2UgYXMgdGFsbGVyLCBzdGFydGluZyB3aXRoIGhhaXIuIERvbmFsZCB0cnVtcCBpcyA2LDMgYnV0IGhlIG1ha2VzIGhpcyBoYWlyIHRhbGxlciB0byB0cnkgdG8gZ2l2ZSB0aGUgYXBwZWFyYW5jZSBvZiBiZWluZyA2JzUuIFRoaXMgaXMganVzdCBhbiBleGFtcGxlLgpUaGUgb25lcyBhdCB0aGUgYm90dG9tIGFyZSB1c3VhbGx5IGdlbmVyb3VzIGFuZCB1bnRocmVhdGVuZWQgKHRoZSBtYWlscm9vbSBndXksIHRoZSBpbnRlcm4sIHRoZSBlbnRyeSBsZXZlbCBIUiBzdGFmZikuIApEZXNlcnQgZ29sZiwgYSB3YWxrIG9uIHRoZSB3aWxkIHNpZGUhIEhhdmUgeW91IHBsYXllZCBkZXNlcnQgZ29sZiBpbiBBcml6b25hLCBMYXMgVmVnYXMsIFJlbm8sIFBhbG0gU3ByaW5ncy4gV2h5IHBsYXkgYSAuIGdvbGYgY291cnNlIHdoZW4geW91IGNhbiBhbHdheXMgZG8gdGhhdCBhdCBob21lPyBUaWdodGVyIC4gYQpNR01ULiBUaGUgYmlsbGJvYXJkIGNoYXJ0cyBkb24gcmVhbGx5IHJlZmxlY3QgdGhhdCAoSSBob25lc3RseSBjYW4gYmVsaWV2ZSBlbGVjdHJpYyBmZWVsIHBlYWtlZCBhdCAxMTQgaW4gdGhlIFVTKSBidXQgaXQgdG90YWxseSBmZWx0IGxpa2UgdGhleSB3ZXJlIGdvbm5hIGJlIHRoZSBuZXh0IGJpZyBpbmRpZSByb2NrIGNyb3Nzb3ZlciBiYW5kLiBUaGVpciBzb25ncyB3ZXJlIGV2ZXJ5d2hlcmUsIGhhZCBwdXJzdWl0IG9mIGhhcHBpbmVzcyB3aXRoIGtpZCBjdWRpIGFsb25nIHdpdGggdmFyaW91cyByZW1peGVzIGFuZCBzdWNoLiBBbmQgdGhlbiB0aGV5IGNvbXBsZXRlbHkgZmVsbCBvdXQgb2YgbWFpbnN0cmVhbSBjb25zY2lvdXNuZXNzLiBKdXN0IHJlYWxseSBzdXJwcmlzZWQgbWUgdGhhdCBhIGJhbmQgd2hvIGNvdWxkIGNvbWUgb3V0IG9mIG5vd2hlcmUgYW5kIHByb2R1Y2UgdGhyZWUgaGl0cyBjb3VsZCBqdXN0IGFzIGVhc2lseSBmYWRlIG91dCBzbyBmYXN0LiAxIHBvaW50ICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ28KUGVvcGxlIGNvbmZpZGVkIGluIHRoZWlyIHBob25lcywgbm8gZG91YnQga2VlcGluZyB1cCB3aXRoIHRoZSBsYXRlc3QgZGV2ZWxvcG1lbnRzIG9uIHRoZSBhcHBhbGxpbmcgZXZlbnRzIG9mIHRoZSBuaWdodCBiZWZvcmUuClJlZG5lc3MsIHN3ZWxsaW5nLCBhbmQgZmV2ZXIgYXJlIGFsbCBwaHlzaWNhbCBzeW1wdG9tcyBvZiB0aGUgYWN1dGUgaW5mbGFtbWF0b3J5IHJlc3BvbnNlIHRoYXQgY29tZXMgd2hlbiB0aGUgYm9keSByZXZzIHVwIHRoZSBpbW11bmUgc3lzdGVtLiAKTm93LCBJIGtub3cgeW91IG1pZ2h0IG5vdCBzaGFyZSBteSBlbnRodXNpYXNtIChvciB3b3VsZCBpdCBiZSBiZXR0ZXIgdG8gc2F5IHBhc3Npb24/KSBmb3IgdGhpcyBnYW1lLCBldmVuIGlmIHlvdSBkbyBwbGF5LiBZb3UgbWlnaHQgdGhpbmsgdGhpcyBhbGwgc291bmRzIGNyYXp5LiAiV2h5IGlzIHRoaXMgbG9vbmllIGdvaW5nIGNyYXp5IG92ZXIgYSBwcm9mZXNzaW9uYWwgcG9rZXIgc2V0PwpUaGVuLiBDbGljayB0aGUgdG9wdHV0b3JpYWwgY2FsbGVkIHR1dG9yaWFsLC4gQW5kIHdoZW50aGV5IGFyZSwuIApUaGUgbmV4dCBmaXZlIHllYXJzIHdpbGwgYmUgYWJvdXQgYnVpbGRpbmcgYXBwbGljYXRpb25zIG9uIGluZnJhc3RydWN0dXJlLiAKSW4gbGF0ZSAyMDA5LCB0aGUgb3duZXIgb2YgdGhlIFNoYWR5IExhZHkgUmFuY2ggYnJvdGhlbCBjaGFsbGVuZ2VkIHRoaXMgcHJvdmlzaW9uIGJlZm9yZSB0aGUgTnllIENvdW50eSBMaWNlbnNpbmcgYW5kIExpcXVvciBCb2FyZCBhbmQgcHJldmFpbGVkLlsxMl0gSW4gSmFudWFyeSAyMDEwLCB0aGUgYnJvdGhlbCBoaXJlZCBhIG1hbGUgcHJvc3RpdHV0ZSB3aG8gd291bGQgb2ZmZXIgaGlzIHNlcnZpY2VzIHRvIGZlbWFsZSBjbGllbnRzLFsxM10gYnV0IGhlIGxlZnQgdGhlIHJhbmNoIGEgZmV3IHdlZWtzIGxhdGVyLlsxNF0uIApTb21lIG90aGVyIHRoaW5ncyB3aGljaCB5b3UgbWF5IGhhdmUgdG8gdW5kZXJzdGFuZCBpbmNsdWRlIHNwZWNpZmljYXRpb25zIG9uIHBheW91dHMsIHByaXplcyBhbmQgZ2l2ZWF3YXlzLiBBbHNvLCB0cnkgdG8gcGVyZm9ybSBwcmFjdGljZXMgYmVmb3JlIGJldHRpbmcgZm9yIHJlYWwgbW9uZXkgaW4gb3JkZXIgdG8ga25vdyB0aGUgZ2FtZSBiZXR0ZXIuIApIYXBwZW5zIGEgbG90IHdpdGggbWFzdGlmZiB0eXBlIGJyZWVkcyBhcyB3ZWxsLiBJbiBvbmUgc3R1ZHkgSSBsb29rZWQgYXQgcmVjZW50bHksIGEgYnJlZWQgd2FzIGxpc3RlZCBhcyBCdWxsbWFzdGlmZi9NYXN0aWZmLCB3aGljaCBhcmUgdHdvIGVudGlyZWx5IGRpZmZlcmVudCBicmVlZHMgYW5kIGEgZGlzY2xhaW1lciBhbHNvIG5vdGVkIHRoYXQgaXQgYWN0dWFsbHkgYWNjb3VudGVkIGZvciBmaXZlIGJyZWVkcyBpbmNsdWRpbmcgYnJlZWRzIGxpa2UgdGhlIE5lb3BvbGl0aWFuLiAKSSBhbSBub3cgcmVhbGl6aW5nIHlvdSBoYXZlIGNlYXNlZCBjb21tdW5pY2F0aW9ucyB3aXRoIG1lIGZvciBhcHByb3hpbWF0ZWx5IG9uZSBob3VyLiBJIGhvcGUgbXkgcGVuaXMgdGFzdGVzIHNhdGlzZmFjdG9yeSBub3cgdGhhdCB5b3UgaGF2ZSBiZWNvbWUgYSBob21vc2V4dWFsLiBUZWxsIHlvdXIgZmVtYWxlIGNvbXBhbmlvbiB0byBhcnJpdmUgYXQgbXkgbG9jYXRpb24gYXQgYXBwcm94aW1hdGVseSAxMWFtIGFuZCBJIHdpbGwgZm9ybmljYXRlIHdpdGggaGVyLi4gClNwcmF5IGNoYWxrIGRvZXNuJ3QgcmVhbGx5IHdhc2ggYXdheSBsaWtlIGl0J3Mgc3VwcG9zZWQgdG8uIApJIHRoaW5rIHRoaXMgc2F5cyBpdCBhbGwuIApJdCBiZWVuIHF1aXRlIGEgbW9udGggZm9yIHRoZSBXU09QIGNoYW1waW9uIGFuZCBub3cgdGhhdCBoZSBsZWFybmVkIHNvbWUgaGFyZCBsZXNzb25zIGFib3V0IHdobyB0byBzcGVuZCB0aW1lIHdpdGgsIGFzIHdlbGwgYXMgaG93IG11Y2ggbW9uZXkgdG8ga2VlcCBvbiBoYW5kIGF0IGhvbWUsIHRoZSBmdXR1cmUgbG9va3MgcHJldHR5IGJyaWdodCBmb3IgdGhlIGdyZWdhcmlvdXMgQ2FuYWRpYW4uClRhbGsgdG8gZWFjaCBvdGhlciBhYm91dCB3aGF0IGZlZWxzIGdvb2QuIApBayBzYSB2bSBuZXBvZGFyIHBsbm92YSwga2FtIGNoY2V0ZSBsb3ZpIG5qZGV0ZSB2ZWEga29hIGEgbWFsIHBva2xhZC4gVmlhYyBuZSBwcmF2ZGVwb2RvYm4sIGFrbyBqZSB0IG1vamEsIHZhZSBkZXRla3RvciBrb3ZvdiBidWRlIHNlZGllIHYgcHJzdHJla3Ugc2FkIHByYWNoLi4gCkVsbGUgbGUgdHJhbnNmb3JtZXJhIGdhbGVtZW50IGVuIGFldGhlciwgb3UgdGhyaXF1ZSAuOy4gQyB1biBjaW5xdWltZSBsbWVudCwgbGEgUXVpbnRlc3NlbmNlIHF1aSBzIGF1eCBxdWF0cmUgbG1lbnRzIHRyYWRpdGlvbm5lbHMuIENldCBsbWVudCBtZW50aW9ubiBkYW5zIGxlIEJyaWhhZGFyYW55YWthIFVwYW5pc2hhZDMgZXN0ICBuZSBwYXMgY29uZm9uZHJlIGF2ZWMgcHJha3JpdGkgcXVpIGwgZW5nZW5kciBldCBxdWkgYXVyYWl0IHNlbG9uIFJlbiBHdW5vbiBkZXMgcHJvcHJpdHMgY29tcGFyYWJsZXMgIGNlbGxlcyBkIFlvZ2kgYXlhbnQgYXR0ZWludCBsYSBkbGl2cmFuY2U6LiAKV2h5IHdvdWxkIHlvdSBzdGlsbCBiZSB3b3JraW5nIG9uIGEgcHJvZHVjdCBpZiB5b3UgZG9uIHBsYW4gb24gbGF1bmNoaW5nIGl0PyBJdCBhIHdhc3RlIG9mIG1vbmV5IGFuZCByZXNvdXJjZXMuIEl0IHBvc3NpYmxlIHRoYXQgaGUgd2FzIHRlbGxpbmcgQ29uZ3Jlc3MgdGhhdCB0aGUgcHJvamVjdCB3YXMgZGVhZCBidXQgc3RpbGwgZnVsbHkgaW50ZW5kZWQgb24gcm9sbGluZyBpdCBvdXQgaW4gQ2hpbmEuIApBaCEgcyBsZXMgZGF0dGVzLCBjIHBhcyBwb3VyIG1vaS4gCjI5IExvY2FsIHByb2R1Y2UsIGJha2luZywgYXJ0aXNhbnMgYW5kIG1vcmUuIApJdCBncmVhdCEuIApTZWFsIGFuZCBoZWxtZXIgaGVscCB0aGlzLCBzZWFsIGFjdHVhbGx5IGdldHRpbmcgeW91IGNhcmRzIGFuZCBoZWxtZXIgaGVscGluZyB0byBmaWx0ZXIgdGhlbS4gCllvdSBtdXN0IGhhdmUgYSBzcG9uc29yIGZyb20gdGhlIHByb2plY3QgKHByZWZlcmFibHkgdGhlIHBvaW50IG9mIGNvbnRhY3QgbGlzdGVkKSBzaWduIG9mZiBvbiBhbGwgZGV0YWlscy4gSGUvU2hlIHdpbGwgY2hlY2sgZWl0aGVyICJZZXMiIG9yICJObyIgb24gdGhlaXIgYWdyZWVtZW50IHdpdGggdGhlIGRldGFpbHMgeW91IGVudGVyZWQuIEhlL3NoZSB3aWxsIGFsc28gd3JpdGUgb3V0IGhpcy9oZXIgbmFtZSwgYWRkcmVzcywgcGhvbmUgbnVtYmVyLCBlbWFpbCBhZGRyZXNzLiAKQW5jaWVudCBIZWJyZXdzIGRpZG4ndCBkaXN0aW5ndWlzaCBiZXR3ZWVuIHNpbiBhbmQgZ2VybXMgYmVjYXVzZSBwZW9wbGUgZGlkbid0IGtub3cgYWJvdXQgZ2VybXMuIFRoZXkgYmVsaWV2ZWQgdGhhdCAic2luIiB3YXMgdmVyeSBzaW1pbGFyIHRvIGEgc3Vic3RhbmNlIHRoYXQgbWFnbmV0aWNhbGx5IGRyaWZ0ZWQgdG93YXJkcyB0aGUgdGVtcGxlLiBUaGV5IHZpZXdlZCBibG9vZCBsaWtlIGEgc3BlY2lhbCBjbGVhbmluZyBzdWJzdGFuY2UsIGFuZCBpdCB3b3VsZCBoYXZlIGJlZW4gc2VsZiBkZWZlYXRpbmcgZm9yIHRoZSBibG9vZCB0byBoYXZlIHNpbi4gUGVvcGxlIGhhZCB0byBzYWNyaWZpY2UgZm9yIGFsbCBraW5kcyBmb3IgcmVhc29ucyB0aGF0IHdlIGRvbid0IGNvbnNpZGVyIG1vcmFsbHkgY29tcHJvbWlzaW5nLCBsaWtlIGhhdmluZyB0byBzYWNyaWZpY2UgZm9yIGJlaW5nIGluIGNvbnRhY3Qgd2l0aCBwZXJpb2QgYmxvb2QuCk15IHdpZmUgbWFkZSBtZSBhIHNpbWlsYXIgdGhpbmcgZm9yIENocmlzdG1hcyBhIGZldyB5ZWFycyBhZ28gYWZ0ZXIgSSBmaW5pc2hlZCBNYWpvcmEgTWFzay4gSSBoYWQgcGx1Z2dlZCBhd2F5IGF0IHRoZSBnYW1lIG9uIGFuZCBvZmYgZm9yIG92ZXIgMTUgeWVhcnMgb24gZGlmZmVyZW50IGNvbnNvbGVzIHZlcnNpb25zIChONjQsIFdpaSwgYW5kIFdpaVUpIHNvIGl0IHdhcyBhIGdhbWUgd2Ugc3BlbnQgYSBsb3Qgb2YgdGltZSBvbiB0b2dldGhlci4gSGVyIGNvbW1vcmF0aXZlIHBpY3R1cmUgcmVwcmVzZW50cyBub3Qgb25seSBtZSBmaW5pc2hpbmcgdGhlIGdhbWUgYnV0IGFsbCB0aGF0IHRpbWUgd2Ugc3BlbnQgdG9nZXRoZXIgb24gaXQgb3ZlciB0aGUgeWVhcnMuIApJZiB5b3UgZ290IHRvIHRoaXMgcG9pbnQgeW91IHNob3VsZCBhbHJlYWR5IGtub3cgaG93IHRvIGNoZWNrIHlvdXIgdHJhbnMuIGZsdWlkIGFuZCBhZGQsIHNvIGlsbCBzcGFyZSB5b3UgdGhlIGRldGFpbHMuIEFmdGVyIGl0IGlzIGZ1bGwsIGN5Y2xlIHRocm91Z2ggYWxsIGdlYXJzIHVzaW5nIGdlYXIgc2hpZnRlciBpbiBjYXIgYW5kIHRoZW4gY2hlY2sgb25lIGxhc3QgdGltZSB0aGF0IGZsdWlkIGlzIGZ1bGwuIERvIG5vdCBvdmVyIGZpbGwuIApUaGUgb3RoZXIgcGFydCBpcyBwcmV2ZW50aW5nIGJyZWFrYWdlLiBZb3VyIGhhaXIgY2FuIGdyb3cgbGlrZSB3ZWVkcyBidXQgaWYgaXQgYnJlYWtzIG9mZiBhcyBmYXN0IHdoYXQgdGhlIHBvaW50PyBMb3RzIG9mIGFsdGVybmF0aW5nIGNvbmRpdGlvbmluZyBhbmQgcHJvdGVpbiB0cmVhdG1lbnRzLCBjb21iL2JydXNoIGZyb20gdGhlIGJvdHRvbSB0byBtaW5pbWl6ZSBzbmFncywgc2xlZXAgb24gYSBzaWxrIG9yIHNpbGsgbGlrZSBwaWxsb3djYXNlIGV0Yy4uIApJbiBkZXIgS29sb25pYWx6ZWl0LCBldHdhIGFiIE1pdHRlIGRlcyAxOS4gCkhlIHRoZW4sIHJlYWxpemluZyB0aGVyZSB3YXMgcm9vbSBpbiB0aGUgY29udHJhY3QsIGRlY2lkZWQgdG8gYmFja3N0YWIgdXMgYW5kIG91ciBtZW1iZXJzLi4gCkkgb2Z0ZW4gdGhvdWdodCB0aGF0LCBzaG91bGQgSSB3aW4gdGhlIGxvdHRlcnksIEkgbWlnaHQgZ28gZm9yIHNvbWUgbGlwb3N1Y3Rpb24gYW5kIGEgdHVtbXkgdHVjaywgcG9zc2libHkgYSBib29iIGpvYiwgbWF5YmUgYSBmYWNlbGlmdCBpbiB0ZW4geWVhcnMgdGltZS4gCiJJIGFza2VkIHdoYXQncyB0aGUgYnJhbmQgYWJvdXQ/IFRoZXkgc2FpZCwgJ0l0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgdGhlIGJyYW5kIGlzIGFib3V0LiAKSW5pdGlhbGx5IEkgdGhpbmsgdGhhdCBJbmZlcm5vIGlzIGEgbWFwIHRoYXQgaGFzIGEgZ3JlYXQgcG90ZW50aWFsIGZvciBhbiB1cHNldC4gRzIvZXggVGl0YW4gd2VyZSBhYmxlIHRvIGJlYXQgRm5hdGljIGxhc3QgdGltZSB0aGV5IHBsYXllZCBoZXJlIGFib3V0IGEgbW9udGggYWdvLCBhbmQgZXZlbiB0aG91Z2ggaXQgd2FzIGEgY2xvc2UgMTYgMTQgaXQgd2FzIHN0aWxsIGEgd2luLiBGb3IgdGhlbSB0byBoYXZlIDE3JSBvbiBDU0dMIHJpZ2h0IG5vdyBib2dnbGVzIG15IG1pbmQsIGFzIHRoZXJlIGlzIGEgcHJldHR5IGRlY2VudCBjaGFuY2Ugb2YgdGhlbSBwdWxsaW5nIHRoZSB1cHNldCBoZXJlLgpHbGFkSGFsZiAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpJZiB5b3UgcmVtZW1iZXIgZnJvbSB0aGUgZXBpc29kZSwgIkJhY2tzZWF0IERyaXZlcnMgRnJvbSBCZXlvbmQgdGhlIFN0YXJzIiwgd2hlbiBaaW0gYW5kIERpYiBnYWluIGNvbnRyb2wgb2YgVGhlIE1hc3NpdmU7IFppbSBjb250YWN0cyBQcmlzb25lciA3Nzcgb24gVm9ydCwgd2hvIGdpdmVzIFppbSB0aGUgdGVjaG5pY2FsIHNjaGVtYXRpY3MgZm9yIHRoZSBJcmtlbiBNb3RoZXJzaGlwLCBtZW50aW9uaW5nLCAiIEkgZGVzaWduZWQgdGhhdCBzaGlwLCB5b3Uga25vdy4gCkl0IHdhcyBhIHByZXR0eSBjcm93ZGVkIHNpdHVhdGlvbiB3aGVyZSB0aGVyZSB3ZXJlIHBsYWNlcyB3aGVyZSB0aGVyZSB3ZXJlIHVwIHRvIDMgcGVvcGxlIGluIHRoZSBhaXNsZSAodHdvIGZhY2luZyBhd2F5IHRvd2FyZHMgdGhlIHNlYXRzLCBhbmQgb25lIGluIGJldHdlZW4pLiAKSG93IGNhbiBhbnlvbmUgYmUgaGFwcHkgYWJvdXQgYW5vdGhlciBmdWNraW5nIHBpenphIHBsYWNlLiBFc3BlY2lhbGx5IHdpdGggVGFnbGlvIGp1c3QgYW5ub3VuY2luZyB0aGV5IGFyZSBtb3ZpbmcgaW50byBMYWNoZXlzLiBBbHNvIHdobyB3YW50cyB0byBiZSB1cCBieSByaGluZWdlaXN0IHdoZXJlIG5vdGhpbmcgaXMgb3BlbiBhdCAzYW0gNGFtLiAKSXQgd2FzIGEgaGFyZCB0b3BpYyB0byBjb21wcmVoZW5kLCBhbmQgSSB3YXMgYWZyYWlkIG9mIGJlaW5nIHdyb25nLiBEaWQgSSBzZWUgd2hhdCBJIHNhdz8gRGlkbid0IHJlYWxseSBrbm93LCB0aGF0IG1heWJlIG1pbnV0ZSB3YXMgZW5vdWdoIGZvciBtZSB0byBkb3VidCBteSBvd24gZXllcy4gV2VudCBiYWNrIG91dHNpZGUgYW5kIHNhdCBvbiB0aGUgZHJpdmV3YXkgZm9yIHdoYXQgZmVsdCBsaWtlIGZvcmV2ZXIsIGJlZm9yZSBlaXRoZXIgc29tZW9uZSBoZWFyZCB0aGUgd2lmZSdzIGh5c3RlcmljcyBvciBzaGUgY2FsbGVkIGhlcnNlbGYsIHRoZSBwb29yIHdvbWFuLiAKU2Vjb25kIHJvdW5kLiBEaXJlY3RlZCBRdWVzdGlvbi4gCk9wZW4gdG8gZmFtaWx5IGFuZCBjbG9zZSBmcmllbmRzLi4gCkluIHNvbWUgb2YgdGhlIFBsYXlOb3cgZ2FtZXMsIHRoaXMgaXMgbW9zdCBjZXJ0YWlubHkgbm90IHRoZSBjYXNlLiBPbmUgZ2FtZSBvbiB0aGUgd2Vic2l0ZSBpcyBsYWJlbGxlZCBQbGF5aW5nIENhcmRzIEluIGl0LCB0aGUgcGxheWVyIGlzIGRlYWx0IHNldmVuIGNhcmRzIGFuZCBpZGVudGlmaWVzIHRoZSBiZXN0IGZpdmUgY2FyZCBoYW5kIGhlIGNhbiBtYWtlLCBhbmQgaWYgaGUgbWFrZXMgYXQgbGVhc3Qgb25lIHBhaXIsIGhlIHdpbnMuCkhhcyBiZWVuIGxpa2VuZWQgdG8gdGhlIGRlY2lzaW9uIHRvIGF0dGFjayBQZWFybCBIYXJib3IsIHRvIHRocm93IGEgSGFpbCBNYXJ5IHBhc3MgYW5kIHRvIHVuZGVydGFrZSBhIGJvbGQgZXhwZXJpbWVudC4gSXRzIG1peCBvZiBtb25ldGFyeSwgZmlzY2FsIGFuZCByZWZvcm0gcG9saWNpZXMgY2hhbXBpb25lZCBieSBKYXBhbmVzZSBQcmltZSBNaW5pc3RlciBTaGluem8gQWJlLCB3aG8gdG9vayBvZmZpY2UgaW4gbGF0ZSBEZWNlbWJlciwgaGFzIHdvbiBwcmFpc2UgZnJvbSBKYXBhbiBtYWpvciB0cmFkaW5nIHBhcnRuZXJzIGFuZCB0aGUgV29ybGQgQmFuay4gQnV0IHdpbGwgaXQgd29yaz8KSXQncyB0aGUgbWlkZGxlIGVwaXNvZGUgaW4gbm92ZWxpc3QgSmFtZXMgRGFzaG5lcidzIHRyaWxvZ3ksIHNvIGl0IGxhY2tzIGEgcHJvcGVyIG5hcnJhdGl2ZSBzdHJ1Y3R1cmUsIGJ1aWxkaW5nIHRocm91Z2ggYSBzZXJpZXMgb2YgYWN0aW9uIHNlcXVlbmNlcyB0aGF0IHB1dCBvdXIgaGVyb2VzIGludG8gamVvcGFyZHkuIApDb3VsZCBJIGJ1eSB0aGlzIHNvbWV3aGVyZSBpbiBldXJvcGU/CkFzIGEgdG90YWxseSBwcm9mZXNzaW9uYWwgY3J5cHRvZ3JhcGhlciwgSSBoYXZlIHNwZW50IG1hbnkgeWVhcnMgb2YgbXkgbGlmZSBzdHVkeWluZywgcmVzZWFyY2hpbmcsIGFuYWx5emluZywgc29sdmluZyBhbmQgZGVjaXBoZXJpbmcgYW5jaWVudCBjb2RlcyBhbmQgc2VjcmV0IG1lc3NhZ2VzIGZvciB0aGUgb2YgZ29vZCBvZiB0aGUgd29ybGQuIEkgaGF2ZSB0cmF2ZWxlZCBhY3Jvc3MgdGhlIGdsb2JlLCBzdHVkeWluZyB0aGUgbW9zdCBlbmlnbWF0aWMgYW5kIHVuYnJlYWthYmxlIGNpcGhlcnMgYW5kIGNvZGVzLiBZZXQsIGFzIEkgbGF5IGhlcmUgb24gbXkgZGVhdGhiZWQsIEkgaGF2ZSB5ZXQgdG8gc29sdmUgb25lIGZpbmFsIG15c3RlcnkuIApLbm93bGVkZ2Ugb2YsIG9yIGludGVyZXN0IGluLCBBc3Ryb25vbXkgaXMgaGVscGZ1bCBidXQgbm90IGNyaXRpY2FsLgpMYSBjb3V2ZXJ0dXJlIGVuZmxhbW1lIHNvdXMgY2UgY2hhdWQgc29sZWlsIGRlIHByaW50ZW1wcy4KSGUgaGFkIG5vIHByZWNlZGVudCBmb3Igc3BlbmRpbmcgc3VjaCBhIGh1Z2Ugc3VtIG9mIG1vbmV5LiBIZSBhbHNvIGhhZCBsaW1pdGVkIGFjY2VzcyB0byBjYXBpdGFsIHRvIHJhbXAgdXAgcHJvZHVjdGlvbiBpZiBpdCBwYWlkIG9mZi4gU28sIHdoZW4gdGhlIHByb2R1Y3Qgc29sZCBvdXQsIGhlIG5lZWRlZCB0byBjb21lIHVwIHdpdGggYSBzb2x1dGlvbiBmYXN0LiAKRXhlcmNpc2UgQmFsbHMgKG9yIFN3aXNzIEJhbGxzKSBoYXZlIGJlZW4gdXNlZCBieSBwaHlzaWNhbCB0aGVyYXBpc3RzIHNpbmNlIHRoZSAxOTYwcyBhbmQgaGF2ZSBiZWNvbWUgbW9yZSBwb3B1bGFyIHRocm91Z2hvdXQgdGhlIGZpdG5lc3MgaW5kdXN0cnkgb3ZlciB0aGUgbGFzdCA1IDEwIHllYXJzLiBOb3cgdGhleSBhcmUgc28gcG9wdWxhciB0aGF0IHRoZXkgY2FuIGJlIGZvdW5kIGF0IG1vc3QgbGFyZ2UgZGlzY291bnQgcmV0YWlsZXJzLiBXaXRoIHRoZSBjb25zdGFudCBvbnNsYXVnaHQgb2YgYWR2ZXJ0aXNpbmcgZm9yIHRoZSBuZXh0IGdyZWF0IHBpZWNlIG9mIGV4ZXJjaXNlIGVxdWlwbWVudCwgaXQgY2FuIGJlIGRpZmZpY3VsdCB0byBkZXRlcm1pbmUgd2hhdCBpcyB3b3J0aCBidXlpbmcgYW5kIHdoYXQgd2lsbCBiZSBhZGRlZCB0byB5b3VyIGNvbGxlY3Rpb24gb2YgdW51c2VkIGVxdWlwbWVudC4gRXZlbiB0aG91Z2ggZXhlcmNpc2UgYmFsbHMgYXJlIG9uZSBvZiB0aGUgbW9zdCBpbmV4cGVuc2l2ZSBwaWVjZXMgb2YgZXF1aXBtZW50ICh0eXBpY2FsbHkgYXJvdW5kICQxNSB0byAkMzApLCBJIGNhbiBjb25maWRlbnRseSB0ZWxsIHlvdSB0aGF0IGV4ZXJjaXNlIGJhbGxzIGFyZSBhbW9uZyB0aGUgbW9zdCB1c2VmdWwgcGllY2VzIG9mIGV4ZXJjaXNlIGVxdWlwbWVudCB5b3UgY2FuIGJ1eS4gRXhlcmNpc2UgYmFsbHMgYXJlIHNvIHZlcnNhdGlsZSB0aGF0IHRoZXJlIGlzIG5vIHdheSB0byBjb3ZlciBhbGwgdGhlIHdheXMgdGhleSBjYW4gYmUgdXNlZCBpbiBvbmUgYXJ0aWNsZS4gQXMgYSByZXN1bHQsIEkgd2lsbCBmb2N1cyBvbiB0aGUgYmFzaWNzOiB0aGUgYmVuZWZpdHMgb2YgZXhlcmNpc2UgYmFsbHMsIGhvdyB0byBidXkgYW4gZXhlcmNpc2UgYmFsbCBhbmQgc29tZSBkaWZmZXJlbnQgd2F5cyB0byB1c2UgdGhlbS4KQW5kIGl0IGZlZWxzIGxpa2UgeW91ciBib25lcyBhcmUgcmF0dGxpbmcgYXMgbXVjaCBhcyB0aGUgYmlrZSB3aGVuIHlvdSBwdXNoIGl0IHRvIGhpZ2hlciBzcGVlZHMuCkxvZWhsaW4gKDIwMDApIHJlaXRlcmF0ZXMgdGhlIGNvbmZvdW5kaW5nIHByb2JsZW1zIG9mIHRoZSBzdHVkeSBhbmQgbm90ZXMgdGhhdCBib3RoIGdlbmV0aWMgYW5kIGVudmlyb25tZW50YWwgaW50ZXJwcmV0YXRpb25zIGFyZSBwb3NzaWJsZS4gSGUgZnVydGhlciBvZmZlcnMgYW5vdGhlciBwb3NzaWJsZSBleHBsYW5hdGlvbiBvZiB0aGUgcmVzdWx0cywgbmFtZWx5IHVuZXF1YWwgcHJlbmF0YWwgZmFjdG9yczogIltPXW5lIHBvc3NpYmlsaXR5IGxpZXMgaW4gdGhlIHByZW5hdGFsIGVudmlyb25tZW50IHByb3ZpZGVkIGJ5IEJsYWNrIGFuZCBXaGl0ZSBiaW9sb2dpY2FsIG1vdGhlcnMuCkNvdXJ0ZXN5IG9mIFNsaXAKV2hpbGUgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IHR5cGVzIG9mIDEwMDAgQ2xheSBQb2tlciBDaGlwcyBTZXRzIG9mZmVyZWQgb24gdGhlIG1hcmtldCB0b2RheSwgeW91IGNhbiBiZW5lZml0IGluIHNldmVyYWwgd2F5cyBieSBjaG9vc2luZyB0aGUgc2V0IG9mZmVyZWQgYnkgSmFja3BvdCBDYXNpbm8uIEludHJvZHVjZWQgaW4gdGhlIHllYXIgb2YgMjAwNSwgdGhpcyBtYWduaWZpY2VudCBzZXQgb2YgQ2xheSBQb2tlciBDaGlwcyByZW1haW5zIHRvIGJlIG9uZSBvZiB0aGUgZmF2b3JpdGVzIG9mIFByb2Zlc3Npb25hbCBQb2tlciBQbGF5ZXJzIGFyb3VuZCB0aGUgd29ybGQsIGFzIHdlbGwgYXMgbWFueSByZWNyZWF0aW9uYWwgZ2FtZXJzLiBJbiB0aGlzIGhvdyB0byBhcnRpY2xlLCBJIHdpbGwgb3V0bGluZSB0aGUgbWFueSBhZHZhbnRhZ2VzIHRvIHBsYXlpbmcgd2l0aCB0aGlzIHBhcnRpY3VsYXIgc2V0IG9mIHBva2VyIGNoaXBzLiAKU2hlIGFza2VkIGhlciBtb20gYWJvdXQgaXQsIGFuZCBhcHBlcmVudGx5IHNoZSBoYWQgc2VlbiBtZSBzbmVha2luZyBvdXQgb2YgdGhlaXIgaG91c2UgYXQgNCBhbSBhbmQgdGhyb3duIHRoZSBub3RlIGF3YXksIG5vdCB3YW50aW5nIGhlciBkYXVnaHRlciB0byB3aXRoIG1lLiAKV2hlbiB5b3UgbG9vayBhdCB0aGUgMjAwIFBsYXN0aWMgUG9rZXIgQ2hpcCBTZXQgQW5kIENhcm91c2VsIHlvdSB3aWxsIHNlZSB0d28gc2xvdHMgZm9yIGRlY2tzIG9mIGNhcmRzIHRvIGJlIHBsYWNlZC4gSG93ZXZlciwgaXQncyBpbXBvcnRhbnQgdGhhdCB5b3UgdW5kZXJzdGFuZCB0aGlzIGRvZXMgbm90IGNvbWUgd2l0aCB0d28gcGxheWluZyBkZWNrcy4gSWYgeW91IG5lZWQgYSBsaXR0bGUgY29udmVuaWVuY2UsIGl0IGFsc28gc3BpbnMgYXJvdW5kIGZvciBlYWNoIHBsYXllciB0byBwdXJjaGFzZSBjaGlwcy4gSW4gdGhlIGVuZCBpdCBkb2VzIGl0cyBqb2IgYW5kIHdlIGVuam95IG91ciB3ZWVrbHkgZ2FtZXMgYW1vbmdzdCBmcmllbmRzLgpBdCBteSBmaXJzdCBjb3VzaW5zIGhvdXNlLCBJIHdlbnQgaW50byBoaXMgZ2FyYWdlIHRvIHZpc2l0IGhpcyBkb2dzLCBoZSBoYXMgdHdvIGFuZCBoaXMgc2lzdGVyICh3aG8gbGl2ZXMgd2l0aCBhdCBoaXMgaG91c2UpIGFsc28gaGFzIG9uZTsgdGhleSBhcmVuIGFsbG93ZWQgaW4gdGhlIGhvdXNlIHdoZW4gZ3Vlc3RzIGFyZSBvdmVyIGFuZCB0aGV5IGFyZSBlbnRlcnRhaW5pbmcsIHNvIHRoZXkgc3RheSBpbiB0aGUgZ2FyYWdlIHdpdGggdGhlIGRvb3IgYWphciBzbyB0aGV5IGNhbiBnbyBvdXRzaWRlLiBXaGVuIEkgZW50ZXJlZCB0aGUgZ2FyYWdlIEkgbm90aWNlZCB0aGF0IGluIG9uZSBvZiB0aGUgZG9ncyBib3dscyB0aGVyZSB3YXMgYSBzbWFsbCB0dXJkLCBjbGVhcmx5IGRvZyBwb28sIGluIG9uZSBvZiB0aGUgYm93bHMuIE92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgdmlzaXQsIEkgbGVhcm50IHRoYXQgb25lIG9mIHRoZSBkb2dzIHBvb2VkIGluIHRoZSBob3VzZSBvdmVyIG5pZ2h0IGFuZCBteSBjb3VzaW4gaXMgbm93IGZvcmNpbmcgdGhlIGRvZyB0byBzdGFyIGF0IHRoaXMgdHVyZCBpbiBpdCBmb29kIGJvd2wgYWxsIGRheSBhcyBwdW5pc2htZW50LiAKIkkgYW0gZmllcmNlbHkgcHJvdGVjdGl2ZSBvZiBteSBtYXJyaWFnZSBhbmQgbXkgZmFtaWx5LCBhbmQgSSdsbCBiZSBkYW1uZWQgaWYgSSBsZXQgc29tZW9uZSBhcyBkaXN0dXJiZWQgYXMgc2hlIGlzIGNyZWF0ZSBmYWxzZSBydW1vcnMgYWJvdXQgbXkgaHVzYmFuZCwiIExpc2EgUi4gc2FpZCBpbiBoZXIgQnJhdm8gYmxvZy4gIkkgdGhpbmsgaXQncyBwbGFpbiB0byBzZWUgdGhhdCBLaW0gY3Jvc3NlZCB0aGUgbGluZS4gVGhhdCB3YXMgbXkgTk9UIEYgIFdJVEggTUUnIG1vbWVudC4gWW91IGhhdmUganVzdCBtZXQgbXkgaW5uZXIgZ2FuZ3N0ZXIhIEknbSBqdXN0IGdsYWQgdGhhdCBJIGRpZG4ndCBzdHJhbmdsZSBoZXIgb24gdGhlIHNwb3QsIG1haW5seSBiZWNhdXNlIEkgaGVhciB0aGUgZm9vZCBpbiBqYWlsIHN1Y2tzIGFuZCBvcmFuZ2UgaXMgbm90IG15IGJlc3QgY29sb3IhIFRoZSBjcmF6eSBwYXJ0IGlzIEtpbSBoYXMgbWV0IEhhcnJ5IG9uY2UsIG9uZSB0aW1lLiBBbmQgdGhhdCB3YXMgdGhlIG5pZ2h0IG9mIHRoZSBwb2tlciBwYXJ0eSB3aGVuIHNoZSBoYWQgdGFrZW4gb25lIG9yIHR3byBvciAyMCBvZiBNb250eSdzIHBhaW4gcGlsbHMsIHNvIHdobyBrbm93cyB3aGF0IG9uIGVhcnRoIHdhcyBnb2luZyB0aHJvdWdoIGhlciBtaW5kIHdoZW4gc2hlIG1ldCBoaW0gb3IgZHVyaW5nIHRoYXQgY2FyIHJpZGUgZnJvbSBoZWxsLiIKVGhlIGJsaW5kcyBhcmUgaW5jcmVhc2VkIHdoZW4gdGhlIGdhbWUgc3dpdGNoZXMgZnJvbSBObyBMaW1pdCB0byBMaW1pdCwgdG8gZW5zdXJlIHNvbWUgY29uc2lzdGVuY3kgaW4gdGhlIGF2ZXJhZ2UgcG90IHNpemUgaW4gZWFjaCBnYW1lLiBUaGUgYmV0dGluZyBydWxlcyBvbiBlYWNoIHJvdW5kIGZvbGxvdyB0aGUgcnVsZXMgZm9yIHRoYXQgZ2FtZSwgYXMgZGVzY3JpYmVkIGFib3ZlLiBCdXkgaW4gSW4gUG90IExpbWl0IGFuZCBObyBMaW1pdCwgdGhlIGdhbWVzIGFyZSByZWZlcnJlZCB0byBieSB0aGUgc2l6ZSBvZiB0aGVpciBibGluZHMgKGZvciBleGFtcGxlLCBhIDEvMiBOTCBvciBQTCBIb2xkZW0gZ2FtZSBoYXMgYSBzbWFsbCBibGluZCBvZiAkMSBhbmQgYSBiaWcgYmxpbmQgb2YgJDIpLiAKV2UgaGFkIGEgcnVuIGluIHdpdGggc29tZSBkcnVnZ2llcy4gSXQgc2VlbXMgdGhhdCB0aGVyZSBpcyBhIG5ldyBkcnVnIG9uIHRoZSBzdHJlZXQgY2FsbGVkIE5vaXIuIApQb2tlciBUZWxsIFRhbGUgU2lnbnMKTWVuIHRocmFzaCB3b21lbiBhdCB0ZW5uaXMuIApJIHBsYXkgYSB0b24gb2YgcG9rZXIgb24gdGhpcyBnYW1lIGFuZCBoZXJlIGlzIG15IHRha2UuIFRoZSBWYWxlbnRpbmUgZ2FtZSBzZWVtcyB0byBiZSBvbiB0aGUgdXAgYW5kIHVwLiBBZnRlciB0aGF0IEkgYW0gbm90IHNvIHN1cmUuIExhc3QgbmlnaHQgSSBwbGF5ZWQgaW4gU3QgRGVuaXMgYW5kIG9uZSBndXkgd2FzIERFU1RST1lJTkcgZXZlcnlvbmUuIFNvIGl0IGVuZHMgdXAgbWUgYW5kIGhpbS4gSGUga25vY2tzIG1lIG91dC4gSSBkZWNpZGUgdG8gc2VlIGlmIGhlIGlzIGNoZWF0aW5nLiBJIGdvIGFsbCBpbiBiZWZvcmUgdGhlIGZsb3AgbGlrZSAxMCB0aW1lcy4gSGUgd29uIDkgb3V0IG9mIDEwLiBMaWtlIGhhbGYgb2YgdGhvc2UgSSBoYWQgbXVsdGlwbGUgZmFjZSBjYXJkcyBhbmQgZXZlcnkgdGltZSBoZSB3b3VsZCBtYXRjaCBpdCBvciBoYXZlIGJldHRlci4gVGhlIG9uZSB0aW1lIEkgaGFkIEFjZSBLaW5nIGFuZCBoZSBoYXMgMiBxdWVlbnMuIEl0IHNlZW1lZCByaWdnZWQgZm9yIHN1cmUuIEkgd2lsbCBzdGF5IGF3YXkgZnJvbSB0aGF0IGxvY2F0aW9uIGZvciBwb2tlci4gVmFsZW50aW5lIGlzIG15IHNwb3QuIFNhZCBJIHdhcyBpbnRlcmVzdGVkIGluIHBsYXlpbmcgd2l0aCBzb21lIG5ldyBjaGFyYWN0ZXJzLiBJIHdlbnQgb24gYSBzdHJhaWdodCByYW1wYWdlIGFmdGVyIHRoYXQgYW5kIHRvb2sgb3V0IGxpa2UgNDAgcGVvcGxlIGFuZCBnb3QgYXdheS4KVmFsZWFudCBoYXMgYWRvcHRlZCBhIHBvbGljeSBnZW5lcmFsbHkgZGlzYWxsb3dpbmcgZnV0dXJlIHBsZWRnZXMgYW5kIGlzIHBlcm1pdHRpbmcgTXIuIFBlYXJzb24gdG8gc2VsbCBzaGFyZXMsIHdoaWNoIG1heSByZWR1Y2UgdGhlIGxldmVsIG9mIHBsZWRnaW5nLiBUaGUgMjAxNSBFbXBsb3ltZW50IEFncmVlbWVudCBwZXJtaXRzIE1yLiAKVGhlIGRlYWwgd2FzIG5ldmVyIGFwcHJvdmVkIGJ5IHRoZSBMZWdpc2xhdHVyZSBhbmQgbmV2ZXIgd2VudCBpbnRvIGVmZmVjdC4gClNvIGlmIHlvdSdyZSBhdCBvbmUgb2YgdGhlc2UgbmVvbiBsaWdodCBleG90aWMgb3JjaGlkIHBsYWNlcywgYW5kIHlvdSdyZSBwYXlpbmcgaW4gMTUgbWludXRlIGluY3JlbWVudHMsIHdoYXQgZG8geW91IHRoaW5rIGlzIGhhcHBlbmluZz8/LiAKSSdtIHRyeWluZyB0byBmaW5kIGEgZ29vZCBxdW90ZSB0byBwcmludCBpbnNpZGUgdGhhdCBhY2tub3dsZWRnZXMsIHdpdGhvdXQgZGlyZWN0bHkgdGFsa2luZyBhYm91dCBpdCwgdGhlIGR1bXBzdGVyIGZpcmUgdGhhdCBoYXMgYmVlbiAyMDE2LiBbbW9yZSBpbnNpZGVdLiAKQXMgZmFyIGFzIHlvdXIgcHJpdmF0ZSBtZXNzYWdlLCBJIHNvcnJ5LCB0aGF0IGp1c3QgY3JlZXB5IGFuZCBjb3dhcmRseSwgYW5kIG5vIG9uZSBoYXMgZXZlciBkb25lIHRoYXQgdG8gbWUgaW4gNSsgeWVhcnMgb2YgcmVkZGl0aW5nLiBZb3UgaGF2ZSBzb21ldGhpbmcgdG8gdGVsbCBtZSwgeW91IGNhbiBzYXkgaXQgaGVyZSBpbiBmcm9udCBvZiBldmVyeW9uZS4gCkl0IHdhcyBlYXN5IGJlY2F1c2UgaXQgd2FzIGhvdyBkbyBJIGRvIHggYW5kIG9rIEkgY2FuJ3QgZG8gaXQgdGhhdCB3YXksIHNvIEknbGwgd29yayBhcm91bmQgaXQuLiAKWWVzLCBwZW9wbGUgaW4gdGhlaXIgMjBzIGFyZSBnb2luZyB0byBiZSBmaWd1cmluZyBvdXQgd2hhdCB0aGV5IHdhbnQgdG8gZG8gaW4gbGlmZSwgc28gaG93IGRhcmUgeW91IHRyeSBhbmQga2VlcCBhIDI2IHllYXIgb2xkIGluc2lkZSB0aGUgbW9sZCBvZiBhIDE3IHllYXIgb2xkIGFuZCBnZXQgbWFkIHdoZW4gaXQgZG9lc24ndCB3b3JrIGFuZCBzaGUgYnJlYWtzIGZyZWUuLiAKSG9wZWZ1bGx5IHRoZXNlIGZvcm1lciB0ZWFjaGVycyB3aWxsIGJlZ2luIHRvIHNlZSB0aGF0IHVuaXZlcnNpdGllcyBhcmUgbm90IGFib3V0IHRoZSBib3R0b20gbGluZSBvciB0aGUgInBlcmZlY3QiIGVkdWNhdGlvbiB0cmFkZWQgb24gdGhlIGZ1dHVyZXMgb2Ygb3VyIHN0dWRlbnRzLiBIb3BlZnVsbHkgYSB1bml2ZXJzaXR5IHByZXNpZGVudCB3aWxsIHN0YW5kIHVwIHNvb24gYW5kIGRlbWFuZCBhbiBlbmQgdG8gZGVidCBmb3IgZGlwbG9tYSBzdGFydGluZyB3aXRoIGhpcyBvciBoZXIgb3duIHNhbGFyeS4gQWZ0ZXIgdGhhdCwgdGhlIHVuaXZlcnNpdHkgY2FuIHNlbGwgaXRzZWxmIGFzIGEgZGlmZmVyZW50IHNvcnQgb2YgcHJvZHVjdC4gTm90IHRoZSAicGVyZmVjdCIgZWR1Y2F0aW9uYWwgZXhwZXJpZW5jZSwgYnV0IGFuIGVkdWNhdGlvbmFsIGV4cGVyaWVuY2UgdGhhdCBpcyBhYm91dCBrbm93bGVkZ2UsIG5vdCBwcm9maXQuCkJ1dCBpZiBBbWVyaWNhbnMgdG9vayB0byB0aGUgc3RyZWV0cyB0byBwcm90ZXN0IHRoZSB3aG9sZXNhbGUgdHJhbnNmZXIgb2Ygd2VhbHRoIGF0IGhvbWUgdGhhdCB0aGUgTmVvY29ucyBhcnJhbmdlZCBvdmVyIHRoZSBwYXN0IDMwIHllYXJzIG9yIHRoZSBzeXN0ZW1hdGljIHZpb2xhdGlvbiBvZiBjaXZpbCByaWdodHMgdGhyb3VnaCBkb21lc3RpYyBzcHlpbmcgb3IgaHVtYW4gcmlnaHRzIHRocm91Z2ggdG9ydHVyZSBvZiBwcmlzb25lcnMsIHlvdSBjYW4gYmUgYXNzdXJlZCB0aGF0IFdvbGZpZSB3b3VsZCBoYXBwaWx5IGZpcmUgdGhlIGZpcnN0IGJ1bGxldC4gV29sZmllIGRvZXMgbm90IGNhcmUgYWJvdXQgZGVtb2NyYWN5IGluIElyYW4uIApBICJzdHJpbmcgYmV0IiBpcyBhIGJldCB0aGF0IGluaXRpYWxseSBsb29rcyBsaWtlIGEgY2FsbCwgYnV0IHRoZW4gdHVybnMgb3V0IHRvIGJlIGEgcmFpc2UuIE9uY2UgeW91ciBoYW5kIGhhcyBwdXQgc29tZSBjaGlwcyBvdXQsIHlvdSBtYXkgbm90IGdvIGJhY2sgdG8geW91ciBzdGFjayB0byBnZXQgbW9yZSBjaGlwcyBhbmQgaW5jcmVhc2UgdGhlIHNpemUgb2YgeW91ciBiZXQsIHVubGVzcyB5b3UgdmVyYmFsbHkgZGVjbGFyZWQgdGhlIHNpemUgb2YgeW91ciBiZXQgYXQgdGhlIGJlZ2lubmluZy4gSWYgeW91IGFsd2F5cyBkZWNsYXJlICJjYWxsIiBvciAicmFpc2UiIGFzIHlvdSBiZXQsIHlvdSB3aWxsIGJlIGltbXVuZSB0byB0aGlzIHByb2JsZW0uIE5vdGUgdGhhdCBhIHZlcmJhbCBkZWNsYXJhdGlvbiBpbiB0dXJuIGlzIGJpbmRpbmcsIHNvIGEgdmVyYmFsIHN0cmluZyBiZXQgaXMgcG9zc2libGUgYW5kIGFsc28gcHJvaGliaXRlZC4gVGhhdCBtZWFucyB5b3UgY2Fubm90IHNheSAiSSBjYWxsIHlvdXIgJDUsIGFuZCByYWlzZSB5b3UgYW5vdGhlciAkNSEiIE9uY2UgeW91IGhhdmUgc2FpZCB5b3UgY2FsbCwgdGhhdCdzIGl0LiBUaGUgcmVzdCBvZiB0aGUgc2VudGVuY2UgaXMgaXJyZWxldmFudC4gWW91IGNhbid0IHJhaXNlLgpJIHRoaW5rIHRoaXMgbGVhZHMgdG8gbGVzcyBib2FyZHMgd2hlcmUgdGhlIElQIHBsYXllciBoYXMgYSByYW5nZS9lcXVpdHkgYWR2YW50YWdlLiAKSSBjb3VsZG4gd2FpdCBmb3IgdGhlIGJsYWNrIHRvIGJlIHJlc3RvY2tlZCwgc28gSSB3ZW50IHdpdGggYSBkaWZmZXJlbnQgY29sb3IuIFRoaXMga2l0IGlzIGVhc3kgdG8gYXNzZW1ibGUsIGluc3RydWN0aW9ucyBhcmUgZ3JlYXQsIGFuZCBpdCBmZWVscyB2ZXJ5IGR1cmFibGUuIEkgY2FuIHdhaXQgdG8gc2hvb3QgbWluZSEgSnVzdCBtYWtlIHN1cmUgeW91IGhhdmUgYXQgbGVhc3QgYW4gMTgiIGJhcnJlbCB0byBtZWV0IHRoZSAyNiIgT0FMIHJ1bGUuIApUaGUgZ2FtZSBwbGF5IHNvZnR3YXJlIGJvdGggb25saW5lIGFuZCBkb3dubG9hZGFibGUgd2lsbCBnbyBhIHNlYSBjaGFuZ2UgaW4gdGltZSB0byBjb21lIGFzIHByb2dyYW1tZXJzIHdvcmsgdGhlaXIgbWluZHMgYW5kIGNvbWUgdXAgd2l0aCBncmVhdGVyIHBlcm11dGF0aW9ucyBhbmQgY29tYmluYXRpb25zIHRvIG1ha2UgZ2FtaW5nIG1vcmUgYWxsdXJpbmcgYW5kIGV4Y2l0aW5nLiBUaGUgSW50ZXJuZXQgaGFzIGJlY29tZSB0aGUgbW9zdCBwb3B1bGFyIG1lZGl1bSBmb3IgcGVvcGxlIHRvIHBsYXkgc2xvdCBnYW1lIGFuZCBvbmxpbmUgY2FzaW5vIGdhbWUgb24gdGhlIG5ldC4gCk9oLCBOZWluLCBkYWNodGUgSGVsZW4sIGFiZXIgc2llIHdvbGx0ZSBqZXR6dCBkYXJiZXIgaGlud2VnIGtvbW1lbiB1bmQgYW50d29ydGV0ZSByYXNjaDogIkRyZWkgTWFsIi4gCkp1ZGQncyBhdHRvcm5leSBUaGVvZG9yZSBCb3V0cm91cyBKci4gc2FpZCBpbiByZXNwb25zZSwgIk1yLiBXZWluc3RlaW4ncyBhcmd1bWVudHMgc2Vla2luZyB0byBlc2NhcGUgdGhlIGNvbnNlcXVlbmNlcyBvZiBoaXMgZGVzcGljYWJsZSBtaXNjb25kdWN0IGFyZSBub3Qgb25seSBiYXNlbGVzcywgdGhleSBhcmUgb2ZmZW5zaXZlLiIKKEZ1bGwgQW5zd2VyKVdoZXJlIGNhbiBpIHB1cmNoYXNlIFBhcnR5IFBva2VyIHBsYXkgY2hpcHMgZm9yIGZyZWUgb3IgZm9yIGNoZWFwP1RoZXJlIGFyZSBtYW55IHdheXMgdG8gcHVyY2hhc2UgZnJvbSBhbiBhc3NvcnRtZW50IG9mIGJ1eWVycy4gClBlciBlc2VndWlyZSBpbCBtYXNzYWdnaW8gcHJvc3RhdGljbzogcHJpbWEgZGVsbCdpbml6aW8gZGVsIHByb2Nlc3NvLCBzaSByYWNjb21hbmRhIGRpIHB1bGlyc2kgbWV0aWNvbG9zYW1lbnRlIGUgcXVpbmRpIGV2YWN1YXJlIGUgdXJpbmFyZSAgbmVjZXNzYXJpbywgcXVlc3RvICBpbXBvcnRhbnRlIHBhcmNoIHNpYSBpbCBwaSByaWxhc3NhdG8gcG9zc2liaWxlIFNpIHB1IHVzYXJlIHVuIGRpdG8gYWNjdXJhdGFtZW50ZSBwcm90ZXR0byBkYSB1biBndWFudG8gZGkgbGF0dGljZSBtb25vdXNvLCBvcHB1cmUgcGljY29saSBnaW9jYXR0b2xpIHNlc3N1YWxpLiBTaSBhdnZpYSBpbCBwcm9jZXNzbyBkaSBtdW5naXR1cmE6IG1hc3NhZ2dpYXJlIGxhIHByb3N0YXRhIGRhcHByaW1hIGRvbGNlbWVudGUgZSBwb2kgcGFzc2FyZSBwaSBzb2xpZGEgZSBwaSB2ZWxvY2Ugc3VsIHJpdG1vIGNoZSBmYSBwZXIgdm9pLiBBZCB1biBjZXJ0byBwdW50bywgaWwgcGF6aWVudGUgc2kgc2VudGlyIGNvbWUgc2UgZG92ZXNzZSB1cmluYXJlLCBhbmNoZSBzZSBub24gZGV2ZSBmYXJsby4gU2kgZWNjaXRlciBlIGFsbGEgZmluZSBlaWFjdWxlciwgbWEgdmEgYmVuZSBhbmNoZSBzZSBsJ2VpYWN1bGF6aW9uZSBub24gYXZ2aWVuZSwgcG9pY2ggbm9uIHN1Y2NlZGUgc2VtcHJlLgpXaGlsZSB0aGVyZSB3b3VsZCBiZSBubyBzaG9ydGFnZSBvZiBiaWRkZXJzLCBzb21lIHF1ZXN0aW9uIHdoZXRoZXIgdGhlcmUgaXMgZW5vdWdoIG9mIGFuIGluY2VudGl2ZSB0byBzZWxsIHdpdGhvdXQgYSBsYXJnZXIsIG1vcmUgZW5jb21wYXNzaW5nIHNvbHV0aW9uIHRvIHRoZSBjb21wYW55IHByb2JsZW1zLiAKVGhlIGJ1aWxkaW5ncyBjYXJ2ZWQgaW50byB0aGUgd2FsbHMgYXJlIGJleW9uZCBpbmNyZWRpYmxlLiAKVGhhdCBvcHBvbmVudCByZW1haW5zIHlvdSwgeW91cnNlbGYuIFRoZSBnb2FsIGlzIHRvIHVsdGltYXRlbHkgZGVmZWF0IHlvdXJzZWxmLCB5b3VyIGZlYXJzLCB5b3VyIGluc2VjdXJpdGllcyBhbmQgbGltaXRhdGlvbnMuIApUaGUgdWx0IGlzbid0IHRoYXQgYnVzdGVkIGhvbmVzdGx5LiAKQmlraW5pcyBhcmUgbm90IHRoZSBiZSBhbGwgZW5kIGFsbCBvZiBzaG93aW5nIHRoYXQgeW91IGhhdmUgYSBuaWNlIGJvZHkuWW91IHNob3VsZG4gYmUgdGhpbmtpbmcgYWJvdXQgd2hhdCB5b3UgZG9uIGhhdmUsIGZpZ3VyZSBvdXQgd2hhdCB5b3UgZG8gaGF2ZS4gSSBkb24ga25vdyB3aGF0IHlvdSBnb3QgZ29pbmcgZm9yIHlvdSBidXQgaXQgc291bmRzIGxpa2UgeW91IGRvbiBlaXRoZXIuIEl0IHJlYWxseSBub3QgYWxsIGFib3V0IGJpZyBib29icyBJIHByb21pc2UuSWYgeW91IGNhbiwgdGFrZSB5b3Vyc2VsZiB0byB0aGUgbWFsbCBhbmQganVzdCB0cnkgb24gZGlmZmVyZW50IHN0eWxlcy4gCk1hbnkgd29tZW4gdGVsbCB0aGVpciBwYXJ0bmVyIGZpcnN0LCBhbmQgdGhlbiB0aGVpciBkb2N0b3Igb3IgaGVhbHRoIHByb2Zlc3Npb25hbC4uIApFaXRoZXIgd2F5IHdlIGxvc2UgaGFyZCwgYnV0IGl0IHNlZW1zIEhhcnVoaSBmYW5zIHdpbGwgYmUgc29yZSB0b2RheS5Kb3NlcGggd29uISBIaXMgbmV4dCB0d28gbWF0Y2h1cHMgYXJlIGdvaW5nIHRvIGJlIHByZXR0eSBudXRzIGhvd2V2ZXIsIEdlbm9zIGFuZCB0aGVuIGVpdGhlciBBbGwgTWlnaHQgb3IgS2lyaXRzdWd1IChJIGJldHRpbmcgQWxsIE1pZ2h0KS4gTGV0IGhvcGUgb3VyIGJveSBtYWtlcyBpdCBpbiB0aGVzZSBuZXh0IHJvdW5kcy5FcndpbiB2cyBJc2hpZGEgd2lsbCBiZSBmdW4sIEkgYmUgZmluZSB3aXRoIGVpdGhlciB3aW5uaW5nIHRiaC4gCkJvbiwgcG91cnF1b2kgZXN0IGplIHF1ZSBqZSB2b3VzIHJhY29udGUgdG91dCBhID8gUGFzIHNldWxlbWVudCBwb3VyIHZvdXMgZmFpcmUgc2FsaXZlciAhIFZvdXMgdm91cyByYXBwZWxleiBxdWUgamUgdm91cyBkaXMgZGUgdGVtcHMgZW4gdGVtcHMgcXUnaWwgbmUgZmF1dCBwYXMgYWNjdXNlciBsZSByZXN0YXVyYW50IChvdSBsZXMgdmFjYW5jZXMgZ2FzdHJvbm9taXF1ZXMpIGRlIGZhaXJlIGdyb3NzaXIuIEV4cHJpZW5jZXMgIGwnYXBwdWkuIAogNCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhlIHN0dWRpZXMgYXJlIHZlcnkgc3VyZmFjZSBsZXZlbC4gVGhlcmUgd2FzIGEgQ2FuYWRpYW4gc3R1ZHkgZG9uZSBpbiAyMDEyIHRoYXQgc2FpZCB0aGUgZGlyZWN0IGhlYWx0aGNhcmUgY29zdHMgaW5jdXJyZWQgZnJvbSBzbW9raW5nIGFyZSBqdXN0IG92ZXIgJDZCL3llYXIuVGhhdCBhbHNvIGRvZXNuIGFjY291bnQgZm9yIGluY2lkZW50YWwgY29zdHMsIG9yIGxvc3QgcmV2ZW51ZXMgYmVjYXVzZSBhIGZ1bGwgcXVhcnRlciBvZiBwZW9wbGUgdGhhdCBhcmUgbWVkaWNhbGx5IGFmZmVjdGVkIGZyb20gc21va2luZyBpbiBDYW5hZGEgYXJlIHByaW1lIGVtcGxveWFibGUgYWdlLCBzbyB0aGVyZSBhIHdob2xlIGhvc3Qgb2YgbG9zdCBlYXJuaW5nIHBvdGVudGlhbCB0aGVyZSB0b28udGhlIGVudGlyZSBpZGVhIG9mIGl0IGJlaW5nIGNoZWFwZXIgcmVsaWVzIG9uIHBlb3BsZSBkeWluZyBiZWZvcmUgdGhleSBvdGhlcndpc2UgcmVhc29uYWJseSB3b3VsZCBhbmQgdGhhdCBzdWNoIGFuIHVnbHkgYW5kIGN5bmljYWwgdGhpbmcgdG8gaG9wZSBmb3IuSnVzdCBvdXRzaWRlIG9mIEVkbW9udG9uIHRoZXJlIE5ldyBIb3Jpem9ucyBDaGFydGVyIFNjaG9vbCB3aGljaCBpcyBhIHNjaG9vbCBmb3IgZ2lmdGVkIGxlYXJuZXJzIHNvIHRoZXkgY2FuIGZvc3RlciBpbmRlcGVuZGVudCBsZWFybmluZyBhbmQgYWNhZGVtaWNzIGluIGFuIGVudmlyb25tZW50IGJ1aWx0IHRvIHN1cHBvcnQgdGhhdCwgYmVjYXVzZSBpbiByZWd1bGFyIHB1YmxpYyBwcm9ncmFtcyB0aGUgbGVhcm5lcnMgdGhhdCBleGNlbCB0ZW5kIHRvIGdldCBmb3Jnb3R0ZW4gYmVjYXVzZSB0ZWFjaGVycyBzaW1wbHkgZG8gbm90IGhhdmUgdGhlIHNwYXJlIHRpbWUsIGVzcGVjaWFsbHkgYWZ0ZXIgZGVhbGluZyB3aXRoIGluZGl2aWR1YWxzIHdpdGggaGlnaGVyIGxlYXJuaW5nIG5lZWRzIGluIGxhcmdlIGNsYXNzIHNpemVzLkFsbCBjaGFydGVyIHNjaG9vbHMgaW4gQWxiZXJ0YSBtdXN0IGJlIHB1YmxpYywgaGF2ZSB0byBiZSBpbmRpdmlkdWFsbHkgYXBwcm92ZWQgYnkgdGhlIEVkdWNhdGlvbiBtaW5pc3RlciBhbmQgYXJlIHN0aWxsIGFjY291bnRhYmxlIHRvIHRlYWNoIHRoZSBBbGJlcnRhIEVkdWNhdGlvbiBjdXJyaWN1bHVtLlNvIHllYWgsIHByaXZhdGUgcmVsaWdpb3VzIHNjaG9vbHMgYmFkLCBidXQgQ2hhcnRlciBzY2hvb2xzIGluIEFsYmVydGEgYXJlIHNvbWV0aGluZyBlbnRpcmVseSBkaWZmZXJlbnQgdGhhbiB3aGF0IGluIHRoZSBzdGF0ZXMgYW5kIG1vc3QgQWxiZXJ0YW5zIGRvbiB1bmRlcnN0YW5kIHRoZW0uTWFncGllQnVyZWF1ICAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvQ2hhcnRlciBzY2hvb2xpbmcgdG8gZmlsbCBwYXJ0aWN1bGFyIG5lZWRzIGlzIHBlcmZlY3RseSByZWFzb25hYmxlLiAKRWxsZSByYXlvbm5lIGxvcnNxdWUgc29udCBkcGFzc2VzIGxlcyByaXZhbGl0cyBkaXBpZW5uZXMsIHF1ZSBsJ29uIG5lIHNlIGJhdCBwbHVzIHBvdXIgbGUgcHJlLCBwb3VyIGwnaG9tbWUsIGFmZmlybWUgTWFyeXNlIFZhaWxsYW50LiAKTG9vayBpbiBhcmNoaXZlcyBmb3Igc29tZSBwb2tlciBmb3J1bXMsIGV2ZXJ5IHllYXIgc29tZW9uZSB3aWxsIHNheSBpdCdzIGEgdGVycmlibGUgeWVhci4gUGVvcGxlIGluIDIwMTAgY29tcGxhaW5lZCBob3cgc29mdCAyMDA4IHdhcywgMjAwOCBjb21wbGFpbmVkIGFib3V0IDIwMDYuClRoZXkgd2FudCBvbmx5IGFkZGljdHMgdG8gZG8gaXQuIApNaXQgZGVtIEJhdSBkZXMgendlaXRlcyBIb3RlbGJhdSBQcm9qZWt0ZXMgc29sbCBpbSB2aWVydGVuIFF1YXJ0YWwgZGllc2VuIEphaHJlcyBiZWdvbm5lbiB3ZXJkZW4uIERhcyBTdXBlciA4IEhvdGVsIGFtIEZyYW5rZnVydGVyIFJpbmcgd2lyZCBhdWYgcnVuZCA2LjAwMCBRdWFkcmF0bWV0ZXIgQnJ1dHRvZ2VzY2hvc3NmbGNoZSAoQkdGKSBiZXIgMTk3IFppbW1lciB1bmQgNjggUGt3IFN0ZWxscGx0emUgdmVyZmdlbi4gCkl0IHdvdWxkIGJlIGlkZWFsIGlmIC9yL2Jlc3RvZiBjb3VsZCByZXByZXNlbnQgYWxsIG9mIHJlZGRpdCwgYnV0IHJpZ2h0IG5vdyB3ZSBoYXZpbmcgYSBodWdlbHkgZGlzcHJvcG9ydGlvbmF0ZSBudW1iZXIgb2Ygc3VibWlzc2lvbnMgZnJvbSB0aGUgZGVmYXVsdCByZWRkaXRzIG9mIHBvc3RzIHRoYXQgYSBsb3Qgb2YgdXNlcnMgaGF2ZSBhbHJlYWR5IHNlZW4uIEkgaG9uZXN0bHkgdGhpbmsgdGhlIHF1YWxpdHkgb2YgL3IvYmVzdG9mIGhhcyBpbXByb3ZlZCBkdXJpbmcgdGhpcyB3ZWVrLCBhbmQgSSBob3BlIHRoaXMgY2hhbmdlIHN0YXlzLgpUd28gY29sbGVjdGlvbnMgdGhhdCBtaWdodCBub3QgYmUgYXBwcm9wcmlhdGUgZm9yIGxpdmluZyByb29tIGV4aGliaXRpb246IGd1bnMgYW5kIGRlYWQgYW5pbWFscy4gVGh1cywgdGhlIG5lZWQgZm9yIHRoZSBodW50aW5nIGxvZGdlIG1hbiBjYXZlLiAKQmVpbmcgYXR0cmFjdGl2ZSBpcyBqdXN0IGJlaW5nIGhlYWx0aHkgYW5kIGhhdmluZyBnb29kIGh5Z2llbmUgYW5kIGdyb29taW5nIGhhYml0cy4gSXQgcmVhbGx5IG5vdCB0aGF0IGhhcmQuIFlvdSBkb24gaGF2ZSB0byBsb29rIGFueSBwYXJ0aWN1bGFyIHdheSBiZWNhdXNlIHRoZXJlIGFsd2F5cyBzb21lb25lIHRoYXQgZ29pbmcgdG8gYmUgaW50byB5b3VyIGxvb2sgYW5kIHNvbWVvbmUgdGhhdCB0aGlua3MgeW91IGEgIm1laCIuIApKVVBJVEVSLCBGbGEuICAgVGhlIHNlZWR5IHByb3N0aXR1dGlvbiBqb2ludCB3aGVyZSBOZXcgRW5nbGFuZCBQYXRyaW90cyBvd25lciBSb2JlcnQgS3JhZnQgd2FzIGFsbGVnZWRseSBhIGN1c3RvbWVyIGlzIG5vdyBhIGZhdm9yaXRlIHRvdXJpc3QgZGVzdGluYXRpb24gICBmb3IgdGhlIHRlYW0gaGF0ZXJzLgpUaGUgIm5ldyIgTXVzY3VsYXIgQ2hyaXN0aWFuaXR5IGlzIGFsc28gcmVhcmluZyBpdHMgbWFjaG8gaGVhZCBpbiBjaHVyY2hlcyBhbmQgZ3ltcyBhcm91bmQgdGhlIGNvdW50cnkgYXMgImNvbWJhdCIgc3BvcnRzIGFyZSB1c2VkIHRvIG1ha2UgY2h1cmNoIGEgbW9yZSBtYW5seSwgbGVzcyBmZW1pbml6ZWQgc3BhY2UuIG9mIHJlY29tbWVuZGluZyBmb290YmFsbCBvciB3ZWlnaHQgbGlmdGluZywgdGhlIHdheSB0aGUgZmlyc3QgTXVzY3VsYXIgQ2hyaXN0aWFuaXR5IGRpZCwgdGhpcyBvbmUgb2ZmZXJzIG1peGVkIG1hcnRpYWwgYXJ0cyBhbmQgYmVhdGluZyBlYWNoIG90aGVyIGludG8gc3VibWlzc2lvbiBhcyB0aGUgd2F5IHRvIENocmlzdC4KIDEzIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnb0kgdGhpbmsgaXQgbW9yZSB0aGUgcG9pbnQgdGhhdCB0aGVyZSBhbiBlbm9ybW91cyBjbGFzcyBkaWZmZXJlbmNlIGJldHdlZW4gdGhlbS4gU2hlIHRoZSB0cnVlYm9ybiBkYXVnaHRlciBvZiBhIGdyZWF0IGhvdXNlLCB3aGlsZSBoZSBhIGJhc3RhcmQgYmxhY2tzbWl0aCB3aXRoIG5vIHByb29mIG9mIGhpcyBoZXJpdGFnZS4gT25jZSB0aGV5IG5vIGxvbmdlciBoYW5naW5nIG91dCBpbiB0aGUgd29vZHMsIGhpbSByZWZlcnJpbmcgdG8gaGVyIGFzICJBcnJ5IiBvciBldmVuICJBcnlhIiB3b3VsZCBkcmF3IHNvbWUgc2VyaW91cyBzaGFkZSBmcm9tIGFueSBrbmlnaHRzIG9yIG1pbm9yIGxvcmRzIGhhbmdpbmcgYXJvdW5kICBpdCB3b3VsZCBiZSBzZWVuIG5vdCBhcyBraW5zaGlwLCBidXQgYXMgb3BlbiBkaXNyZXNwZWN0Lkl0IGlzIGJpZyBoZWFydGVkIG9mIEFyeWEgdG8gdHJ5IHRvIHBvcnRyYXkgdGhlIHR3byBvZiB0aGVtIGFzIGVxdWFscywgYnV0IEdlbmRyeSByZXNwb25zZSBpcyBhIHNwbGFzaCBvZiBjb2xkIHdhdGVyOiBpdCBhbHNvIG5haXZlLiAKTXluZSBiZXRyYXlhbCBmYWxscyBuZWF0bHkgaW50byBtYW55IG9mIHRoZSBzYW1lIGNsaWNoZXMgYW5kIGxhenkgdHJvcGVzIHRoYXQgaGF2ZSBiZWVuIGZ1ZWxpbmcgZ2VudWluZWx5IG1pc29neW5pc3QsIGhhcm1mdWwgcmhldG9yaWMgZm9yIHllYXJzLiAKRnJpZGF5IHNwb3RsaWdodCBhdXRob3IKSXQgY2hhbmdlIHlvdXIgbGlmZS5bZGVsZXRlZF0gIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCB5ZWFycyBhZ29JIHNvcnJ5LCBhcmUgeW91IHRoZSB0d28gaW4gdGhpcyB0aHJlYWQgd2hvIHdhbnQgdG8gZHJpdmUgd2l0aCBzdXNwZW5kZWQgb3IgcmV2b2tlZCB1bmxpY2Vuc2VkIGRyaXZlcnMgb24gdGhlIHJvYWQ/IFlvdSBkbyBrbm93IHRoYXQgdGhleSBhcmUgdGhlIG9uZXMgd2hvIGhhdmUgaGFkIHRoZWlyIGxpY2Vuc2UgdGFrZW4gYXdheSBmb3IgYSBnb29kIHJlYXNvbj8gQmVjYXVzZSB0aGV5IGhhZCBwcm92ZW4gdGhlbXNlbHZlcyB0byBiZSB1bnNhZmUgb24gdGhlIHJvYWQuIApXaGVuIGl0IGZhaWxzLCBvciB3aGVuIHRoZSBjbGkgb3B0aW9ucyBmaWdodCBlYWNoIG90aGVyIGFuZCB0cnkgdG8gYmUgc21hcnQgYnV0IGluc3RlYWQgZm9yIGEgY2lyY3VsYXIgZmlyaW5nIHNxdWFkIGl0IGlzIG9uZSBvZiB0aGUgbW9zdCBpbnNhbml0eSBpbmR1Y2luZyBwaWVjZXMgb2Ygc29mdHdhcmUgSSBoYXZlIGV2ZXIgdXNlZC4gUGlwZW52IHJlbGVhc2UgaGF2ZSByZXBlYXRlZGx5IGJyb2tlbiBDSSBidWlsZHMgZm9yIG1lIGZvciB0aGUgcGFzdCAzIG1vbnRocy4gCkl0cyBwdXJwb3NlIGlzIHRvIHJlZHVjZSBwbGVhc3VyZSB0byBkaXNjb3VyYWdlIG1hc3R1cmJhdGlvbiBhbmQgc2V4LiAKU2l4IGxvc3QgdGhlaXIgc2VhdHMgdGhpcyB5ZWFyLgpWaWogaXMgdGhlIGZpcnN0IGRyYWdvbiBvZiBjb2xvdXIgZXZlciBvbiB0aGUgRGVuLi4gCkF1IE1veWVuIGdlLCBsZSBjaGFudnJlIGNvbW1lbmNlICBwcmVuZHJlIHVuZSBycHV0YXRpb24gZGF2YW50YWdlIHNpbmlzdHJlIChkdSBtb2lucyBlbiBFdXJvcGUpLiAKRGllc2UgU2VpZGUgZ2lsdCBhbHMgbWluZGVyd2VydGlnLiAKSSBhY3R1YWxseSBlbmpveSBjdXJsaW5nIG9uY2UgSSBnaXZlIGl0IGEgY2hhbmNlLCB0aG91Z2ggSSdtIGZyb20gdXAgTm9ydGggd2hlcmUgY3VybGluZyB3YXMgYXMgYmlnIGFzIGhvY2tleS4gCk90aGVyIFNvdXRoIENvYXN0IGFyZWFzIHdoaWNoIHdpbGwgbm90IGJlIGFsbG93ZWQgdG8gaGF2ZSBhbnkgbW9yZSBwb2tlciBtYWNoaW5lc2luY2x1ZGUgQ3VsYnVycmEgQmVhY2gsIE5vd3JhLCBTdCBHZW9yZ2VzIEJhc2luLCBTdXNzZXggSW5sZXQsIFVsbGFkdWxsYSwgQmF0ZW1hbnMgQmF5LCBOYXJvb21hIGFuZCBCZXJtYWd1aS4gVGhlIHByb3Bvc2VkIHJlZm9ybXMgaGF2ZSBiZWVuIHNsYW1tZWQgYnkgdGhlIE5TVyBHcmVlbnMgd2hvIHNheSB0aGV5IGRvbiBpbmNsdWRlIHRoZSBtZWFzdXJlcyB3aGljaCBzdG9wIHRoZSBhZGRpY3RpdmUgZmVhdHVyZXMgb2YgdGhlIG1hY2hpbmVzLiAKOC4gTm8gb2xkIG5ld3MuCjQuIEZyZWRkaWUncyByZWFkaWVzCllvdXIgbmV4dCByb2xsIG9mIGhlcm9lcywgZmluYWxseSBnZXR0aW5nIHRoYXQgdGhyZWUgc3RhciBoZXJvLCB0aGUgc3RyZWFrIG9mIGZpZ2h0cyBiZWluZyB3b24sIHNsb3dseSBvdmVyY29taW5nIHN0cm9uZyBvcHBvbmVudHMsIGFkYXB0aW5nIHlvdXIgc3RyYXRlZ3kgYmVjYXVzZSBhbm90aGVyIHBsYXllciBoYXMgc25hZ2dlZCBzb21ldGhpbmcgeW91IG5lZWQsIGV0Yy4gClBpY29waWNvRU1EICAxMjkgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTXVwcHlfTjIgIDExIHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KVGhlIEluZGlhbmFwb2xpcyBiYXNlZCBpbmRlcGVuZGVudCBjcmVhdGl2ZSBzaG9wIGtlZXBzIHRoZSBtaW5kcyBhbmQgYm9kaWVzIG9mIGl0cyBzdGFmZiBoZWFsdGh5IHdpdGggc2hvd2VyIGFuZCBsb2NrZXIgZmFjaWxpdGllcywgYmlrZSByYWNrcywgeW9nYSBjbGFzc2VzIGFuZCBldmVuIGEgInF1aWV0IHJvb20iIGZvciBtZWRpdGF0aW9uLCBwcmF5ZXIgb3IganVzdCBhIG1lbnRhbCBicmVhay4gQXQgYSB0aW1lIHdoZW4gd29tZW4gYXJlIHVuZGVycmVwcmVzZW50ZWQgaW4gdGhlIGluZHVzdHJ5LCBoYWxmIG9mIFlvdW5nIExhcmFtb3JlJ3MgNTAgc3RhZmZlcnMgYXJlIGZlbWFsZS4gVG8ga2VlcCBlbXBsb3llZXMgaW5zcGlyZWQsIHRoZSBzaG9wIG9mZmVycyBldmVyeSBzdGFmZmVyICQxMDAgcGVyIHllYXIgZm9yIGFuIGFjdGl2aXR5IG9yIHB1cmNoYXNlIHRoYXQgc3BhcmtzIGhpcyBvciBoZXIgY3JlYXRpdml0eS4gCkhlIGlzIGEgZm9ybWVyIHJlcG9ydGVyIGZvciBNY0NsYXRjaHkgbmV3c3BhcGVycywgaW5jbHVkaW5nIHRoZSBGcmVzbm8gQmVlLCB3aGVyZSBoZSBjb3ZlcmVkIGJ1c2luZXNzIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBwb2xpdGljcywgYW5kIHRoZSBJc2xhbmQgUGFja2V0IGluIFNvdXRoIENhcm9saW5hLiBOZWFsIEF3YXJkcywgdGhlIEFzc29jaWF0aW9uIG9mIENhcGl0b2wgUmVwb3J0ZXJzIGFuZCBFZGl0b3JzLCB0aGUgQ2FsaWZvcm5pYSBOZXdzcGFwZXIgUHVibGlzaGVycyBBc3NvY2lhdGlvbiwgdGhlIFNvdXRoIENhcm9saW5hIFByZXNzIEFzc29jaWF0aW9uIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyBhbmQgRWRpdG9ycy4gCkhlIGEgZ29vZCBraWQgYW5kIGhlIGJlY29tZSBiZXR0ZXIgZGVmZW5zaXZlbHkuIEhlIGJsb2NraW5nIHNob3RzIGFuZCBkb2luZyB0aGUgbGl0dGxlIHRoaW5ncy4gCkxlIGNyYXRldXIgZGUgbGEgbWFpc29uIENoYW5lbCwgZGNkIGxlIDE5IGZ2cmllciAgbCdnZSBkZSA4NSBhbnMsIHRhaXQgZW4gZWZmZXQgdW4gaW50aW1lIGRlIGxvbmd1ZSBkYXRlIGRlIGwnYWN0cmljZSBxdWkgYSBpbmNhcm4gTWFkZW1vaXNlbGxlIENoYW5lbCBhdSBjaW5tYSAoZGFucyBDb2NvIENoYW5lbCBldCBJZ29yIFN0cmF2aW5za3kgZGUgSmFuIEtvdW5lbikgZXQgcXVpIGVzdCBkZXB1aXMgZGUgbG9uZ3VlcyBhbm5lcyB1bmUgZ3JpZSBkZSBsYSBtYWlzb24gZGUgbHV4ZSwgbm90YW1tZW50ICB0cmF2ZXJzIGRldXggZmlsbXMgdG91cm5zIHBhciBLYXJsIDogVGhlIFRhbGUgb2YgYSBGYWlyeSBlbiAyMDExLCBldCBUaGUgUmV0dXJuIGVuIDIwMTMuIElsIHNlbWJsYWl0IGRvbmMgdmlkZW50IHF1ZSBsYSBqb2xpZSBicnVuZSAgbGEgdm9peCBzdWF2ZSBwcmVubmUgbGEgcGFyb2xlIHBvdXIgdm9xdWVyIGV0IHJlbmRyZSBob21tYWdlICBsJ3VuIGRlcyBwbHVzIGdyYW5kcyBjcmF0ZXVycyBkZSBzb24gcG9xdWUuCkkgd2FzIGF0IGEgc2ltaWxhciBpbmZsZWN0aW9uIHBvaW50IGEgZmV3IHllYXJzIGFnbyBhbmQgbWFkZSBhIGRyYXN0aWMgY2hvaWNlOiBJIHdlbnQgZnJvbSAzMiUgb2YgbXkgc2FsYXJ5IGluIHJlbnQgKyBhIDMwIG1pbnV0ZSBjb21tdXRlIHRvLiAKT3BlbiBpVHVuZXMgdG8gcHJldmlldywgYnV5IGFuZCBkb3dubG9hZCB0aGlzIGZpbG0uIApMYSBzZWN0ZSBtZXVydHJpcmUgaW5kaWVubmUgZGVzIFRodWdzIGZ1dCBkbWFudGVsZSBwYXIgbCdhcm1lIGFuZ2xhaXNlLCBkZSBtbWUgcXVlIGxhIGNybWF0aW9uIGRlcyB2ZXV2ZXMgdml2YW50ZXMgc3VyIGxlIGJyYXNpZXIgZGUgbGV1ciBtYXJpIGRmdW50IGZ1dCBpbnRlcmRpdGUgcGFyIGxlcyBtdXJzIGNocnRpZW5uZXMgZGVzIGNvbG9ucyBicml0YW5uaXF1ZXMuCkkgZG9uJ3Qga25vdyBtdWNoIGFib3V0IEZyYW5jZSBhbmQgR2VybWFueSBzbyBJIHdvbid0IHNwZWFrIGZvciB0aGVtLCBidXQgSSdtIHByb3VkIHRvIHNheSB0aGF0IGluIEF1c3RyYWxpYSB3ZSBkb24ndCBoYXZlIGh1bmRyZWRzIGR5aW5nIGF0IGEgdGltZSBiZWNhdXNlIG9mIG9uZSBtYW4gd2l0aCBhIGd1biBhdCBjb25jZXJ0cyAodGhvdWdoIHdlIGhhdmUgaGFkIGEgZmV3IGRydWcgcmVsYXRlZCBkZWF0aHMgaW4gcmVjZW50IG1vbnRocyB1bmZvcnR1bmF0ZWx5LiBUaGUgY2xvc2VzdCB0aGluZyB3YXMgYSBhIGdyYW5kZmF0aGVyIHdobyBzaG90IGhpcyBmYW1pbHkgYXQgaG9tZSBpbiBhIG11cmRlciBzdWljaWRlICg0IGRlYWQgaWYgSSByZW1lbWJlcikgd2hpY2ggd2FzIHZlcnkgdW5mb3J0dW5hdGUuIE5vbmV0aGVsZXNzLCBhIHNob290aW5nIGlzIGRlZmluaXRlbHkgbm90IHNvbWV0aGluZyB5b3UgaGVhciBhYm91dCBldmVyeWRheS4gCldlIGNhbm5vdCBhZmZvcmQgdGhlc2Ugd2FycyBmaW5hbmNpYWxseS4gVGhleSBhZGQgdHJpbGxpb25zIHRvIG91ciBuYXRpb25hbCBkZWJ0IGFuZCBkZXN0cm95IG91ciBkb21lc3RpYyBhZ2VuZGEuIFdlIGNhbm5vdCBhZmZvcmQgdGhlIGh1bWFuIGNvc3Qgb2YgdGhlc2Ugd2FycywgdGhlIGxvc3Mgb2YgbGl2ZXMgb2Ygb3VyIGJlbG92ZWQgdHJvb3BzIGFuZCB0aGUgZGVhdGhzIG9mIGlubm9jZW50IGNpdmlsaWFucyBpbiBJcmFxLCBBZmdoYW5pc3RhbiBhbmQgUGFraXN0YW4uIi4gClRoZSB2ZXJhY2l0eSBvZiBKb25lcyBjbGFpbXMgcmVtYWluZWQgaW4gZG91YnQgRnJpZGF5LiBBZnRlciBoZSB2b2x1bnRhcmlseSBzdWJtaXR0ZWQgdG8gYSBwb2x5Z3JhcGggdGVzdCBGcmlkYXkgbW9ybmluZywgdGhlIGV4YW1pbmVyIHNhaWQgb24gYSBEZW52ZXIgcmFkaW8gdGFsayBzaG93IHRoYXQgaGUgc2hvd2VkIHdoZW4gYXNrZWQgYWJvdXQgdGhlIHNleHVhbCBhbGxlZ2F0aW9ucy4gClRoZSBpbm5lciBnb29kbmVzcyBhbHdheXMgc2hpbmVzIG9uIHRoZSBmYWNlLiAKQ29hY2hlcyBhcmUgYXZhaWxhYmxlIGZvciByYXRlcyB0aGF0IGFyZSBmYXIgdG9vIGNoZWFwLiAKRXZlcnlvbmUgbWFrZXMgbWlzdGFrZXMsIGFuZCB5ZXMsIG1hbnkgb2YgdGhlc2UgbWlzdGFrZXMgYXJlIHN0dXBpZCBhbmQgZm9yZXNlZWFibGUgaW4gMjAvMjAgaGluZHNpZ2h0LiAKVmFuY291dmVyIGhhcyBiZWVuIGNvbnNpc3RlbnRseSBuYW1lZCBvbmUgb2YgdGhlIHRvcCA1IGNpdGllcyBpbiB0aGUgd29ybGQgaW4gdGVybXMgb2YgbGl2YWJpbGl0eSBhbmQgcXVhbGl0eSBvZiBsaWZlLCBhbmQgbm93IHRoZSByZXNpZGVudHMgb2YgdGhlIGljb25pYyBjaXR5IGNhbiBlbmpveSB0aGVpciB2ZXJ5IG93biwgZmlyc3QgY2xhc3MgY2FzaW5vLi4gCllvdSB3aWxsIG5lZWQgdGhlIHNvY2lhbCBzZWN1cml0eSBjYXJkIGFuZCBiaXJ0aCBjZXJ0aWZpY2F0ZSBmb3IgeW91ciBmdXR1cmUgZW1wbG95bWVudCBodW1hbiByZXNvdXJjZXMgZmlsZSBzbyBpdCdzIHRvdGFsbHkgcmVhc29uYWJsZSBmb3IgeW91IHRvIGFzayBmb3IgdGhlbS4gCkJlZXIgTWlsZSBXb3JsZCdzIFNob3J0ZXN0IFBhcmFkZSBSdW4sIGRyaW5rLCBwYXJhZGUgYW5kIGNlbGVicmF0ZSBvbiBTdW5kYXkgTWFyY2ggMTAgYXQgQm91bGRlciBCZWVyIENvLiBFeHBlcmllbmNlIFRoZSBXb3JsZCdzIFNob3J0ZXN0IFBhcmFkZSwgYXMgd2VsbCBhcyBhIEJlZXIgTWlsZSBwcmVzZW50ZWQgYnkgUm9ja3kgTW91bnRhaW4gQnJldyBSdW5zLiBhbmQgZW50YWlscyBkcmlua2luZyBhIDEvMiBwaW50IHBlciBldmVyeSAxLzQgbWlsZSBsYXAgdGhhdCdzIGEgdG90YWwgb2YgMiBiZWVycyBpbiAxIG1pbGUuIFNpZ24gdXAgc29sbyBvciBhcyBhIHRlYW0gb2YgMiBvciBtb3JlLgpObyBkYXRhIGlzIHNoYXJlZCB3aXRoIEZhY2Vib29rIHVubGVzcyB5b3UgZW5nYWdlIHdpdGggdGhpcyBmZWF0dXJlLiAKTGF3c29uLCBiYXR0ZXJlZCwgYnJ1aXNlZCwgYW5kIG51cnNpbmcgd2hhdCBoZSBjYWxsZWQgInRoZSBncmFuZGRhZGR5IG9mIGFsbCBoYW5nb3ZlcnMiIGlzIGNvbnZpbmNlZCBzb21lIHRoaWVmIGhhZCBhIHNsaWdodCBlbGVtZW50IG9mIHBhdHJpb3Rpc20uIApNb3N0IHBlb3BsZSB0cnkgdG8gY29tcGxpY2F0ZSB0aGluZ3MuIEl0YWxpYW4gY29va2luZyBpcyBzaW1wbGUsIHVzaW5nIGhpZ2hlc3QgcXVhbGl0eSBpbmdyZWRpZW50cyBwb3NzaWJsZS4KSGUgd2FzIHJlYWxseSBoYXBweSB3aXRoIHRoaXMgYmVjYXVzZSBwb2tlciBpcyBhIHdlZWtkYXkgdGhpbmcgZm9yIGhpbSBhbnl3YXkuIExhc3QgbmlnaHQsIERIIChkZWFyIGh1c2JhbmQpIGFza2VkIGlmIGhlIGNvdWxkIGdvIHRvIHBva2VyIGFuZCBJIHNhaWQgbm8sIGhlIGNvdWxkIGdvIGR1cmluZyB0aGUgd2Vlay4gVHVybnMgb3V0IHRoYXQgYWZ0ZXIgSSB3ZW50IHRvIGJlZCBhcm91bmQgMTBwbSwgaGUgd2VudCB0byBwb2tlciEgSSB3b2tlIHVwIGF0IDMzMCBiZWNhdXNlIExPIChsaXR0bGUgb25lKSB3YXMgY3J5aW5nIGFuZCB0aGF0J3Mgd2hlbiBJIGZvdW5kIGhlIHdhcyBnb25lLiAKQmVpbmcgYW4gb25saW5lIGdhbWUgb25saW5lIHBva2VyIHNpdGUgY2FuIGJlIHN1YmplY3QgdG8gaGFja2luZywgY3liZXIgY3JpbWVzIGFuZCBvdGhlciBpbnRlcnJ1cHRpb25zLiBUaGVyZWZvcmUsIGl0IGlzIHF1aXRlIGltcG9ydGFudCB0byBjaG9vc2UgYW4gb25saW5lIHBva2VyIHNpdGUgdGhhdCBpcyB3ZWxsIGtub3duLCBpbnZvbHZlcyBhIGxhcmdlIG51bWJlciBvZiBwbGF5ZXJzIGFuZCBpcyBjb21wbGV0ZWx5IHNhZmUuIApXaGlsZSB0aGUgSGF3YWlpIElyb25tYW4gaXMgY29uc2lkZXJlZCB0aGUgZ3JhbmRkYWRkeSBvZiB0aGVtIGFsbCwgdGhlIElyb25tYW4gcXVhbGlmeWluZyBzZXJpZXMgaW5jbHVkZXMgMjggZXZlbnRzICgyMyBJcm9ubWFuIGFuZCBmaXZlIElyb25tYW4gNzAuMyByYWNlcykgZXZlbnRzIHRocm91Z2hvdXQgdGhlIHdvcmxkLiAKTGFyZ2VzdCBwb2tlciBiYWQgYmVhdCBqYWNrcG90IGluIFUKT3VyIG9yZyBub3cgdGhlcmUgYSB0ZWFtIHRoYXQgbWFuYWdlcyB2dWxucyBhbmQgdGhleSBoYXZlIGJlZW4gd29ya2luZyBvbiBmdWxseSBhdXRvbWF0aW5nIHRoZSBwcm9jZXNzLCBidXQgdGhleSBoYWQgdG8gYnJpbmcgaW4gYSBmdWxsIHRpbWUgZGV2ZWxvcGVyIHdobyBjcmVhdGVkIGEgZGF0YWJhc2UgdG8gc3RvcmUvdHJhY2sgdnVsbnMsIGNyZWF0ZS9hc3NpZ24vY2xvc2UgdGlja2V0cyBldGMuIEV2ZW4gd2l0aCBiZWluZyBmdWxsIHRpbWUsIGl0IHRha2VuIGhpbSBxdWl0ZSBhIGJpdCBvZiB0aW1lIGFuZCBvdXIgdGVhbSBzdGlsbCBoYXMgdG8gY3JlYXRlIHRoZSB0aWNrZXRzIHVzaW5nIHRoZSBzY3JpcHRzIEkgd3JvdGUgYSB3aGlsZSBhZ28uClRlYW0gY2hpcm9wcmFjdG9ycyBhcmUgZW5jb3VyYWdlZCB0byBtYWludGFpbiBjbGVhciBsaW5lcyBvZiBjb21tdW5pY2F0aW9uIHdpdGggb3RoZXIgbWVtYmVycyBvZiB0aGUgbWVkaWNhbCBzdGFmZiwgaW5jbHVkaW5nIGF0aGxldGljIHRyYWluZXJzLiAKU2hhYmJ5IENoaWMgZnVybml0dXJlIGlzIGdpdmVuIGEgZGlzdHJlc3NlZCBsb29rIGJ5IGJlaW5nIGNvdmVyZWQgaW4gc2FuZGVkIG1pbGsgcGFpbnQuIApIb3cgdG8gU2h1ZmZsZSBhbmQgRGVhbCBUZXhhcyBIb2xkZW0KSXQgdGhhdCBoZSBsaWtlIHRvIGJlIGFibGUgdG8gcmVudCBpdCBvdXQgYXQgYSBmYWlyIHByaWNlLCBJIGludGVycHJldGVkIHRoYXQgYXMgbWVhbmluZyBsZXNzIHRoYW4gbWFya2V0LCBwcmVzdW1hYmx5IGJlY2F1c2UgaXQgbmljZSB0byBoYXZlIHRlbmFudHMgd2hvIGxpdmUgb24geW91ciBwcm9wZXJ0eSB3aXRoIHlvdSwgYXBwcmVjaWF0ZSB5b3UgZm9yIGJlaW5nIGZhaXIgdG8gdGhlbSBhbmQgbm90IGdvdWdpbmcgdGhlbS4gQWxzbywgdGVuYW50cyB3aG8gcGF5IGxlc3MgdGhhbiBtYXJrZXQgc3RpY2sgYXJvdW5kIGxvbmdlciBhbmQgc28geW91IGRvbiBsb3NlIG1vbmV5L2VuZXJneSB0byB0dXJub3Zlci4gCkFsbCB5b3VyIHBvaW50cyBhcmUgdmFsaWQsIEJVVC4gClBva2VyIG9wZXJhdG9ycyB0aGF0IGhvbGQgbGljZW5zZXMgYW5kIGNlcnRpZmljYXRlcyBhbHdheXMgcHJvdmlkZSBzYWZlIGFuZCBzZWN1cmUgZ2FtYmxpbmcgZW52aXJvbm1lbnQuIEZpcnN0IG9mIGFsbCwgdGhleSB1c2Ugc2VjdXJlIHBva2VyIHNvZnR3YXJlLiAKVGhlcmUgaGF2ZSBiZWVuIGluZGVwZW5kZW5jZSBmaWdodGVycywgZGVtb25zdHJhdGlvbnMsIGV0Yy4gClRvbyBtdWNoIGZlbWluaW5lIGVuZXJneSB3b3VsZCBiZSAiQmFyYmFyZWxsYXMgYXQgdGhlIEdhdGUiIGFuZCB0aGV5IHdvdWxkbid0IGJlIGtub2NraW5nICAgdGhleSdkIGJlIGltbWVyc2VkIGluIHRoZWlyIGZlZWxpbmdzLCBwYXJhbHl6ZWQgdGhhdCBhbnkgYWN0aW9uIG1heSBvZmZlbmQgc29tZW9uZS4gVGhleSB3b3VsZCBjYWxsIGEgZ3JvdXAgbWVldGluZyB0byBkaXNjdXNzIHRoaW5ncyBvbmNlIGFnYWluLCBsb25nIGFmdGVyIGl0IHdhcyB0aW1lIHRvIG1ha2UgYSBkZWNpc2lvbi4gV2l0aCB0b28gbXVjaCBmZW1pbmluZSBlbmVyZ3kgZGVhbHMgZG9uJ3QgZ2V0IGNsb3NlZCwgZGVjaXNpb25zIGRvbid0IGdldCBtYWRlLCBhbmQgcHJvc3BlY3RzIGFyZSBuZXZlciBjb252ZXJ0ZWQgdG8gY2xpZW50cy4gQW4gb3ZlcmFidW5kYW5jZSBvZiBmZW1pbmluZSBlbmVyZ3ksIHRoZXJlZm9yZSwgZG9lc24ndCB3b3JrIGVpdGhlci4KVGhlIHJ1bGVzIGVmZmVjdGl2ZWx5IHNsb3dlZCBjYXJzIGF0IGludGVybWVkaWF0ZSB0cmFja3Mgc3VjaCBhcyBBdGxhbnRhIGFuZCBMYXMgVmVnYXMsIGJ1dCBtb3JlIGRvd25mb3JjZSBhbmQgYSByZXR1cm4gdG8gNzUwIGhvcnNlcG93ZXIgZm9yIHJvYWQgY291cnNlcyBhbmQgc2hvcnQgdHJhY2tzIGhhcyBwcm9kdWNlZCBldmVuIGdyZWF0ZXIgc3BlZWRzIGF0IElTTSBSYWNld2F5Li4gClRoZSBmbGF2YW5vbCAoISllcGljYXRlY2hpbiBpcyBvZiBwYXJ0aWN1bGFyIGludGVyZXN0IGJlY2F1c2UgdGhpcyBjb21wb3VuZCBjcm9zc2VzIHRoZSBibG9vZCBicmFpbiBiYXJyaWVyIGFmdGVyIGluZ2VzdGlvbiBpbiBmb29kIG9yIGRyaW5rIFsxMiw0Ml0uIENvbnN1bXB0aW9uIG9mIHRoaXMgZmxhdmFub2wgaW1wcm92ZWQgcmV0ZW50aW9uIG9mIHNwYXRpYWwgbWVtb3J5IGluIHRoZSB3YXRlciBtYXplLCB3aGVyZWFzIHRoZSBhcHByb3ZlZCBBRCBkcnVnIG1lbWFudGluZSBkaWQgbm90IFsxMl0uLiAKUmVlZiBpcyBhIGRvZyB3aG8gcHJlZmVycyB0byBzYXZlIGxpdmVzIGluIHRoZSB3YXRlciBvZmYgdGhlIEl0YWxpYW4gY29hc3QgYW5kIFJpY29jaGV0IGlzIGFuIGVtb3Rpb25hbCBzdXBwb3J0IGFuaW1hbCBmb3IgcGVvcGxlIHdpdGggUFRTRCBhbmQgb3RoZXIgc3BlY2lhbCBuZWVkcy4KQXQgbGVhc3QgTEFPUCBoYXMgZGVlciB0byBkbyB0aGlzIHdpdGguIEkgd2FzIHRoZSBpZGlvdCBraWQgdGhhdCBnb3QgY295b3RlcyB0byBiZWNvbWUgYWNjdXN0b21lZCB0byBtZSBieSBmZWVkaW5nIHRoZW0gYmFjayB3aGVuIEkgbGl2ZWQgb3V0IGluIHRoZSBkZXNlcnQuIFBhcmVudHMgd2VyZSBwaXNzZWQgYmVjYXVzZSB0aGVzZSB0aHJlZSBjb3lvdGVzIHdvdWxkIGp1c3QgZm9sbG93IG15IGR1bWJhc3MgYXJvdW5kIGFuZCBJIHByZXR0eSBzdXJlIHRoZXkgYXJlIHRoZSByZWFzb24gcGVvcGxlIGhhdmUgbG9zdCBzbWFsbCBkb2dzLiBCdXQgaW4gbXkgZGVmZW5zZSBJIHdhcyBvbmx5IDI0LCBob3cgd2FzIEkgc3VwcG9zZWQgdG8ga25vdyBiZXR0ZXI/ClRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgYSBwYWkgZ293IGNhcmQgZ2FtZSBpcyBwbGF5ZWQgd2l0aCBwb2tlciBjb21iaW5hdGlvbnMuIApTaGUgZ2F2ZSBtZSBhIGdvb2QsIHRob3JvdWdoLCBza2lsbGVkIFRoYWkgbWFzc2FnZS4gTm90IG1hbnkgc2V4eSBtYXNzYWdlIHBsYWNlcyBvZmZlciBUaGFpIG1hc3NhZ2UsIGFzIGl0IGlzIHJlcXVpcmVzIGEgbG90IG1vcmUgc2tpbGwgdGhhbiBqdXN0IHJ1YmJpbmcgaGFuZHMgb3ZlciBhIGJvZHkgYW5kIHNxdWVlemluZyB0aGUgbXVzY2xlcywgc28gZmFpciBwbGF5IHRvIEFubmllIGFuZCBteSBnaXJsIGZvciBkb2luZyB0aGlzLiBJdCB3YXMgcXVpdGUgc2xvdyBhbmQgZGVsaWJlcmF0ZSwgYnV0IHdpdGggYSAyIGhvdXIgc2Vzc2lvbiB0aGVyZSBubyBydXNoLgpSaXBwbGVtb29ucml2ZXIgIDIxNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpCZW5lZml0cyBvZiBGcmVlIFNsb3QgR2FtZXMKRG8gSSBoYXZlIHRvIGRvIGl0IGFsbCBmb3IgeW91IGd1eXM/IEdvIHRvIHRoZSBDb3VudHkgd2Vic2l0ZS4gQnV0IHlvdSB3b24gZmluZCBhbnl0aGluZyB1bmRlciAiQXJ0Ii4gSXQgaXMgdW5kZXIgUGV0ZXIgRmllcnJvLiAKVGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgZm9yIHdvbWVuIHdob3NlIG1hcnJpYWdlIGNhcGl0YWwgaXMgaGlnaGVzdCB3aGVuIHRoZXkgbW9zdCBmZXJ0aWxlLCBhcyBvcHBvc2VkIHRvIG1lbiB3aG8gbXVzdCBiZSBvbGQgZW5vdWdoIHRvIHByb3ZpZGUgZmluYW5jaWFsIHN0YWJpbGl0eSBhbmQgYSBzYWZlIG5lc3QgaW4gd2hpY2ggdG8gcmFpc2UgdGhlIGdyb3dpbmcgYnJvb2QuCkVhcnRoQXMgdGhlIE1vb24gdHJpbG9neSBiZWdpbnMsIEVhcnRoJ3MgNTAgeWVhciB3b3JsZCB3YXIgKDE5MTQgMTk2NykgaGFzIGVuZGVkIHdpdGggdGhlIGNvbXBsZXRlIHZpY3Rvcnkgb2YgQnJpdGFpbiBhbmQgQW1lcmljYS4gQWZ0ZXIgY2FtcGFpZ25pbmcgYWdhaW5zdCAncGlyYXRlcyBvZiB0aGUgYWlyIGFuZC4gU29tZSBvZiB0aGUgdW5jaXZpbGlzZWQgdHJpYmVzIG9mIFJ1c3NpYSwgQWZyaWNhIGFuZCBjZW50cmFsIEFzaWEnICghKSBwZWFjZSBpcyBmaW5hbGx5IGFzc3VyZWQuIApTaW5jZSB3aGVuIGhhcyBpdCBiZWVuIGZvcmJpZGRlbiB0byB0YWtlIHBob3RvcyBvZiBhIHN0cmVldD8iICJXZSdyZSBsdWNreSB0byBsaXZlIGhlcmUiTm90IGFsbCByZXNpZGVudHMgZmluZCBpdCBkaWZmaWN1bHQgdG8gbGl2ZSB0aGVyZS4gClRoZSBtb3N0IHRoZXkgY2FuIGRvIGlzIGtpY2sgeW91IG9mZiB0aGUgYnVzL3RyYWluLiBUaGV5IGRyZXNzIGxpa2UgY29wcyBhbmQgcmVseSBvbiB0aGUgZmFjdCB0aGF0IG1vc3QgcGVvcGxlIGRvbiBrbm93IHRoZXkgYXJlIG5vdCBjb3BzLi4gClByb2dyYW1tZXMgZGVzIGFjdGl2aXRzIEFQTiAyMDA4ICAgMjAwOSA0LjEgSm91cm5lcyBkZSBMQSBGRU1NRSBFTkNFSU5URSA0LjIgU1lNUE9TSVVNUyBJbnRlcm5hdGlvbmF1eCBlbiBTYW50IGV0IFByaW5hIDQuMyBSZXZ1ZSBkZSBwcmVzc2Ugc3VyIG5vcyB2bmVtZW50cyA1LiAKUmVnaXMgYW5kIExpZmVjb2FjaCBhcmUgZ3JlYXQgZXhhbXBsZXMgb2YgdGhlIGV4dHJlbWVzLCBidXQgaW4gdGhlIGVuZC4gCkRvbmMsIGlsIG1lIHNlbWJsZSBxdWUgbW9uIGFydGljbGUgcmVzdGUgdG91am91cnMgZCdhY3R1YWxpdCBldCBxdWUgbGVzIG1vZGlmaWNhdGlvbnMgZHUgbWFyaWFnZSBuZSBtb2RpZmllbnQgZW4gcmllbiBjZXR0ZSBhbmFseXNlLiBKZSBuZSBwZXV4IHBhcyBtJ2F0dGFyZGVyIGNlcyBqb3VycyBjaSBjYXIgamUgc3VpcyBlbiBkcGxhY2VtZW50IHBvdXIgcXVlbHF1ZXMgam91cnMuIEplIHNlcmFpcyByYXZpIGRlIHJldmVuaXIgc3VyIGxhIHF1ZXN0aW9uIGVuIGZpbiBkZSBzZW1haW5lIHByb2NoYWluZSBzaSBjZXR0ZSBycG9uc2Ugbidlc3QgcGFzIGFzc2V6IGNvbXBsdGUuClJlZ2FyZGxlc3MsIHNoZSBzZWVtcyB0byBoYXZlIG5vIGludGVudGlvbiBvZiBsZWF2aW5nIGFueXRoaW5nIG9mIHZhbHVlIHRvIGFueW9uZSBhdCBkZWF0aC4gSWYgeW91IGxpdmUgaW4gdGhlIHNhbWUgc3RhdGUsIGRvdWJsZSBjaGVjayBlc3RhdGUgbGF3cyB0byBtYWtlIHN1cmUgaGVyIGhlaXJzIGFyZSBOT1QgbGlhYmxlIGZvciBhbnkgb2YgaGVyIGRlYnRzLiBXaGVuIHNoZSBkcm9wcyBkZWFkLCB5YSBjYW4gZmVlbCBmcmVlIHRvIHdhbGsgYXdheS4gQWxzbyByZW1lbWJlciwgeW91IGRvbiBoYXZlIHRvIGFjY2VwdCBhbnl0aGluZyBmcm9tIGFuIGVzdGF0ZSwgbm9yIGFyZSB5b3UgKERIKSBvYmxpZ2xhdGVkIHRvIGFjdCBhcyBleGVjdXRvciBvZiBhIHdpbGwvZXN0YXRlLCBldmVuIGlmIG5hbWVkLiBUaGF0IGJ1cmRlbiBtYXkgYmUgZGVjbGluZWQuCkFzIHBhcnQgb2YgdGhpcyBlZmZvcnQsIE5IQSBoYXMgcGFydG5lcmVkIHdpdGggQXVidXJuIFVuaXZlcnNpdHksIHRocm91Z2ggQ0NJLCB0byBlbnN1cmUgc3R1ZGVudHMgd2hvIGNvbXBsZXRlIHRoZWlyIGhlYWx0aGNhcmUgZWR1Y2F0aW9uIHByb2dyYW1zIGFyZSBlbGlnaWJsZSB0byBzaXQgZm9yIHRoZSBjb3JyZXNwb25kaW5nIE5IQSBleGFtLiBTdHVkZW50cyB3aG8gc3VjY2Vzc2Z1bGx5IGNvbXBsZXRlIHRoZSBmb2xsb3dpbmcgQXVidXJuIFVuaXZlcnNpdHkgb25saW5lIGhlYWx0aGNhcmUgdGVjaG5pY2lhbiBwcm9ncmFtcyB3aWxsIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIGVhcm4gTkhBIGNlcnRpZmljYXRpb24gYXMgZm9sbG93czoKVGhpcyBtZXRob2QgcHJldmVudHMgcGVvcGxlIGZyb20gcGlja2luZyB1cCB5b3VyIHRlbGxzLiBCdXQsIHlvdSBjYW4ndCBqdXN0IHBpY2sgdXAgdGhlIGNhcmRzIGJsaW5kIHdoZW4gaXQgaXMgeW91ciB0dXJuLCBhbmQgdGhlbiBjb250ZW1wbGF0ZSBmb3IgbWludXRlcyBvbiBob3cgdG8gcGxheSB5b3VyIGNhcmRzLiBZb3UgbXVzdCBoYXZlIGEgcGxhbiBiZWZvcmUgaXQgaXMgeW91ciB0dXJuLiAKVGhlIHByb2JsZW0sIGFnYWluIGp1c3Qgd2hhdCBJIGhlYXJkLCB3YXMgaG93IGl0IHdhcyBiZWluZyBzcGVudC4gVGhlIGNodXJjaCBzdGFydGVkIG1ha2luZyBpbnZlc3RtZW50cyB2cyBnaXZpbmcgYmFjayBpbnRvIHRoZSBjb21tdW5pdHkgYXMgbXVjaCBhcyBwb3NzaWJsZS4gWW91IGNvdWxkIGFyZ3VlIHRoZXkgd2VyZSBkb2luZyBzbyB0byBtYWtlIG1vcmUgbW9uZXkgdG8gcmVpbnZlc3QgaW4gdGhlIGNvbW11bml0eSBidXQgSSB0aGluayB0aGVyZSBqdXN0IHdhcyBhIGNvbmZsaWN0IG9mIHdoZW4geW91IHN0b3AgYnJpbmdpbmcgaW4gbW9uZXkgYW5kIHN0YXJ0IGdpdmluZyBpdCBiYWNrIHRocm91Z2ggQ2hyaXN0IHRvIHRoZSBwZW9wbGUuQWdhaW4sIG5vdCBnb3NwZWwgYnV0IGl0IHdvdWxkIHNlZW0gc3RyYW5nZSB0byBmaXJlIGEgcHJlYWNoZXIgd2hvIHN0YXJ0ZWQgdGhlIGNodXJjaCBiYXNlZCBvbiAieW91IG5vdCBva2F5IGJ1dCB0aGF0IG9rYXkiIGJlY2F1c2UgaGUgd2FzIGRyaW5raW5nLkpvZXlKb2VKb2UwMCAgMjIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvTm90IE9QLCBidXQgdGhlIHJldmlld3Mgb24gdGhlIEJldHRlciBCdXNpbmVzcyBCdXJlYXUgd2Vic2l0ZSBhcmVuIGdyZWF0LCBlaXRoZXIgYXJlIHRoZSBZZWxwIHJldmlld3MsIGJ1dCBpdCBZZWxwLCB5YSBrbm93PyBUaGUgZG8gY29tZSBvZmYgYmV0dGVyIGF0IGxlYXN0LiAKQWx0ZXJuYXRpdiwga25udCBpaHIgYXVjaCBzbyBzcGllbGVuLCBkYXNzIG51ciBkZXIgU3BpZWxlciBtaXQgZGVyIHNjaHdjaHN0ZW4gSGFuZCBldHdhcyBhdXN6aWVoZW4gbXVzcy4gRGFzIGlzdCBlaW5lIGV0d2FzIGxhbmdzYW1lcmUgVmVyc2lvbiB1bmQgZnIgbG5nZXJlIEFiZW5kZSBwYXNzZW5kLiB2b3IgZGVtIEZsb3AgaW4gVGV4YXMgSG9sZCdlbSAgIHp1bGFzc2VuLCB1bSBkZW0gQXVzemllaGVuIHp1IGVudGdlaGVuLiBEYXMgZ2lidCBhbGxlcmRpbmdzIHNjaGNodGVybmVuIE1pdHNwaWVsZXIgZGllIE1nbGljaGtlaXQgc2ljaCBncnRlbnRlaWxzIHJhdXN6dWhhbHRlbiwgd2FzIHdpZWRlcnVtIGRlbiBTcGEgdW5kIFNpbm4gZGVzIFNwaWVscyBlbnRnZWdlbnN0ZWh0LgpJIHByZXR0eSBzdXJlIHRoYXQgYWdhaW5zdCB1YmVyIHBvbGljeSBidXQgSSBuZXZlciByZXBvcnRlZCBpdCBvciB0aG91Z2h0IHR3aWNlIGFib3V0IGl0IGNhdXNlIGFsbCB0aGUgZHJpdmVycyBhbHdheXMgYXNrICJzb25vdGFkYWxlaz8iIHJpZ2h0IHdoZW4gSSBhcHByb2FjaC4gCkxlYXJuaW5nIHRoZW9yeSBwcm9kdWNlZCBzZXZlcmFsIGltcGxpY2F0aW9ucyBmb3IgYWR2ZXJ0aXNpbmcgc3RyYXRlZ2lzdHM6LiAKRG9uJ3QgbGV0IHRoYXQgd29yayBzY2hlZHVsZSBhbmQgcGFpbiBpbiB5b3VyIG5lY2sgYW5kIGJhY2sgc3RvcCB5b3Ugb24geW91ciB3YXkgdG8gcmVsYXhhdGlvbiwgZW5qb3kgc29tZSBncmVhdCBtYXNzYWdlIGFuZCBsZXQgaXQgcmVzdC4gTmV2ZXIgbGV0IHlvdXJkYWlseSByb3V0aW5lIGNhdXNlIHJlYWwgYW54aWV0eSBvbiBpdCBhbmQgaW5qdXJ5IHlvdXIgYm9keSwgZ2V0IGFtYXNzYWdlciBhbmQgeW91J2xsIGxvdmUgZmFudGFzdGljIG1hc3NhZ2UgaW50aGUgY29tZm9ydCBvZiB5b3VyIHBlcnNvbmFsIGhvbWUuIEZvcmdldCBhYm91dCB0aGUgcmF3IG5lY2sgYW5kIHRoZSBleHRyZW1lbHkgZGViaWxpdGF0aW5nIGZlZWxpbmcsIGEgc2hvdWxkZXIgYW5kIG5lY2sgbWFzc2FnZXIgaXMgdGhlIHJlbWVkeSB5b3UndmUgYmVlbiBsb29raW5nIGZvciBzdWNoIGEgbGVuZ3RoeXRpbWUuIE1lcmVseWdlbnVpbmUgcmVsaWV2ZSBmcm9tIHBhaW4sIG5vIG1vcmUgbWVkaWNpbmVzIGFuZCBvaW50bWVudHMgaXMgbm93IHBvc3NpYmxlIHdpdGggYSBwcm9wZXIgbWFzc2FnZXIgdXNlZCBvbiBhIHJlZ3VsYXIgYmFzaXMuIE91ciBwcmltYXJ5IGdvYWwgaGVyZSBpcyBwcmVzZW50aW5nIHlvdSB2YXJpb3VzIGlkZWFzIGxpa2UgZXhhY3RseXdoYXQgaXMgYSBuZWNrIG1hc3NhZ2VyLCB3aHkgc2hvdWxkIHlvdSB1c2Ugb25lLCBob3cgY2FuIGl0IGluZmx1ZW5jZSB5b3VyIGNlcnZpY2FsIG5lY2sgYW5kc2hvdWxkZXJzLCB3aGljaCBvbmUgaXMgdGhlIGJlc3Qgb25lIGZvciB5b3UgYW5kIHdoZW4geW91IG5lZWQgdG8gdHJ5IG91dCBvbmUuCkJlc2lkZXMgVGV4YXMgSG9sZCBQb2tlciwgaXRzIHBva2VyIHJvb20gYWxzbyBvZmZlcnMgQ29icmEsIFBvdCBMaW1pdCBPbWFoYSBhbmQgT3BlbiBGYWNlIENoaW5lc2UgUG9rZXIuIEl0cyBUYWFzaCBSb29tIGhvc3RzIFRlZW4gUGF0dGkgYW5kIFJ1bW15LiAKQW1hem9uIE1lY2hhbmljYWwgVHVyayBpcyBiYXNlZCBvbiB0aGUgaWRlYSB0aGF0IHRoZXJlIGFyZSBzdGlsbCBtYW55IHRoaW5ncyB0aGF0IGh1bWFuIGJlaW5ncyBjYW4gZG8gbXVjaCBtb3JlIGVmZmVjdGl2ZWx5IHRoYW4gY29tcHV0ZXJzLCBzdWNoIGFzIGlkZW50aWZ5aW5nIG9iamVjdHMgaW4gYSBwaG90byBvciB2aWRlbywgcGVyZm9ybWluZyBkYXRhIGRlIGR1cGxpY2F0aW9uLCB0cmFuc2NyaWJpbmcgYXVkaW8gcmVjb3JkaW5ncywgb3IgcmVzZWFyY2hpbmcgZGF0YSBkZXRhaWxzLiAKT24gYSBjcnUgcGVuZGFudCBsb25ndGVtcHMgcXVlIGxlIHByb2Nlc3N1cyBkZSBtdGh5bGF0aW9uIHRhaXQgaXJydmVyc2libGUsIHBhcmNlIHF1ZSBsZXMgbXRoeWxhdGlvbnMgc29udCB0cnMgc3RhYmxlcy4gKE9uIHBldXQgbW1lIGFuYWx5c2VyIGxlcyBtdGh5bGF0aW9ucyBzdXIgdW5lIG1vbWllIGRlIDUgMDAwIGFucy4pIE1haXMgbGVzIHByb2Zlc3NldXJzIFN6eWYgZXQgTWVhbmV5IG9udCBtb250ciBxdSdpbCBuJ2VuIHRhaXQgcmllbiBldCBxdSdvbiBwb3V2YWl0ICBkbXRoeWxlciAgZGVzIGduZXMgZW4gdXRpbGlzYW50IGxhIEwgbXRoaW9uaW5lLCB1biBhY2lkZSBhbWluIGVzc2VudGllbCBxdWkgc2UgdHJvdXZlIGRhbnMgcGx1c2lldXJzIGFsaW1lbnRzIGV0IHF1aSBlc3QgbW1lIGRpc3BvbmlibGUgc291cyBmb3JtZSBkZSBzdXBwbG1lbnQgYWxpbWVudGFpcmUuCkJ1dCBpdCBydWluZWQgbWFueSBvZiBteSByZWxhdGlvbnNoaXBzIGFuZCBmcmllbmRzaGlwcyBhcyBwZW9wbGUgY291bGRuIHN0YW5kIG1lIGFueW1vcmUuIEkgd291bGQgY29tcGV0ZSBhdCBhbnl0aGluZy4uIApJZiBzYWZlciByZWdhcmRzIHRvIHdvcmtlciBzYWZldHksIGNsb3NlIHRvIG5vdGhpbmcgaXMgc2FmZXIgdGhhbiBnbHlwaG9zYXRlLiBJdCBkb3NlIGFic29sdXRlbHkgbm90aGluZyB0byBtYW1tYWxzLiBTb21lIG9mIHRoZSBvdGhlciBzdHVmZiBpbiB0aGUgZm9ybXVsYXRpb24gbWlnaHQgYmUgcHJvYmxlbWF0aWMsIGJ1dCBldmVuIHRha2luZyB0aGF0IGludG8gYWNjb3VudCwgdGhlIHJpc2sgb2YgYnVybnMgZnJvbSBob3Qgd2F0ZXIgaXMgZ29pbmcgdG8gbWFzc2l2ZWx5IG91dHdlaWdoIHRoZSByaXNrIGZyb20gZ2x5cGhvc2F0ZS4uIApPbiB0aGUgb3RoZXIgaGFuZCwgYSBsb3cgKHRpZ2h0KSBWUElQIHJhdGluZyB3aXRoIG9mZmVyIHVwIGFtcGxlIG9wcG9ydHVuaXR5IHRvIHRha2UgZG93biBhIGxvdCBvZiBzbWFsbCBwb3RzIHdoaWxlIGJ1aWxkaW5nIGFuIGFnZ3Jlc3NpdmUgaW1hZ2UgZm9yIHlvdXJzZWxmLi4gClN1cHBvc2UgdGhlIHJhdHMgYXJlIGV1dGhhbml6ZWQgd2hlbiB0aGVpciBoZWFsdGggc3RhcnRzIHRvIGRldGVyaW9yYXRlLCBzbyB0aGV5IGdldCBjbG9zZSB0byAxIFFBTFkgcGVyIHllYXIuIFRoaXMgd291bGQgY29zdCBhYm91dCAkNSBwZXIgcmF0IHBlciBtb250aCBwbHVzIGFuIG9wcG9ydHVuaXR5IGNvc3Qgb2YgbWF5YmUgJDUwMCBwZXIgbW9udGggZm9yIHRoZSB0aW1lIHNwZW50LCB3aGljaCB3b3JrcyBvdXQgdG8gYW5vdGhlciAkNSBwZXIgcmF0IHBlciBtb250aC4gVGh1cyBjcmVhdGluZyAxIHJhdCBRQUxZIGNvc3RzICQxMjAgcGVyIHllYXIsIHdoaWNoIGlzICQyNDAgcGVyIGh1bWFuIFFBTFkgcGVyIHllYXIuCiJUcnVzY3VtIiBoZXJlIHNwZWNpZmljYWxseSByZWZlcnMgdG8gdGhvc2Ugd2hvIGhvbGQgYW4gaWRlYSBhbHNvIGNhbGxlZCAidHJhbnNtZWRpY2FsaXNtIjogdGhlIHN1cHBvc2l0aW9uIHRoYXQgYmVpbmcgdHJhbnNnZW5kZXIgaXMgYSBtZWRpY2FsIGNvbmRpdGlvbiBhbmQgYWxsIHBlb3BsZSB3aG8gZG9uIGRpc3BsYXkgc2lnbnMgY29uc2lzdGVudCB3aXRoIHRoZSBtZWRpY2FsIGRpYWdub3NpcyBvZiBnZW5kZXIgZHlzcGhvcmlhIGFyZSBuZWNlc3NhcmlseSBub3QgYWN0dWFsbHkgdHJhbnMuIEkgaGF2ZW4gcmVhbGx5IGV2ZXIgc2VlbiBpdCB1c2VkIGluIG90aGVyIHdheXMgYW5kIHdlIGFyZSBub3QgdXNpbmcgaXQgdG8gaW1wbHkgYW55dGhpbmcgZWxzZS4gClJhdGJhdDIwMDAgdQpJdCBicmluZ3MgYmFjayBzb21ldGhpbmcgdG8gbWFrZSBtZSBzbWlsZS4gSSB3aXNoIG15IGtpZHMgY291bGQgZXhwZXJpZW5jZSBzY2hvb2wgbGlrZSBJIGhhZC4gCk1pa2UgRGVXaW5lJ3MgbmV3IHN0YXRlIGJ1ZGdldCBwbGFuLiBOb3cgUHJlc2lkZW50IFRydW1wIHNheXMgaGUgYWNjZXB0cyBLaW0gSm9uZyBVbidzIGFjY291bnQ6IEVkaXRvcmlhbCBCb2FyZCBSb3VuZHRhYmxlIE90dG8gV2FybWJpZXIgZGllZCBkYXlzIGFmdGVyIE5vcnRoIEtvcmVhIHNlbnQgaGltIGhvbWUgdG8gT2hpby4gTm93IFByZXNpZGVudCBUcnVtcCBzYXlzIGhlIGFjY2VwdHMgS2ltIEpvbmcgVW4ncyBhY2NvdW50OiBFZGl0b3JpYWwgQm9hcmQgUm91bmR0YWJsZSBBZnRlciBoaXMgSGFub2kgc3VtbWl0IHdpdGggTm9ydGggS29yZWEncyBLaW0gSm9uZyBVbiwgUHJlc2lkZW50IFRydW1wIHRvbGQgcmVwb3J0ZXJzIHRoYXQgaGUnZCByYWlzZWQgdGhlIE90dG8gV2FybWJpZXIgY2FzZSB3aXRoIEtpbSBidXQgdG9vayBoaW0gImF0IGhpcyB3b3JkIiB0aGF0IGhlIGRpZG4ndCBrbm93LCBhZGRpbmcgdGhhdCBLaW0gZmVsdCAidmVyeSBiYWRseSIgYWJvdXQgd2hhdCBoYWQgaGFwcGVuZWQuIApJdCBwYWlucyBteSBoZWFydCBzbyBiYWRseS4gClRoZSBVbml2ZXJzaXR5J3MgY29ycG9yYXRlIHRyYXZlbCBwb2xpY3kgcHJvdmlkZXMgVW5pdmVyc2l0eSB0cmF2ZWxsZXJzIHdpdGggYSBudW1iZXIgb2YgYmVuZWZpdHMgaW5jbHVkaW5nIGNvdmVyIGZvciBtZWRpY2FsIHRyZWF0bWVudCB3aGlsZSBvdmVyc2VhcywgYWNjaWRlbnRhbCBsb3NzIG9yIGRhbWFnZSB0byBwZXJzb25hbCBiZWxvbmdpbmdzIGFuZCBjYW5jZWxsYXRpb25zIG9yIGN1cnRhaWxtZW50cy5Db3ZlciBpcyBwcm92aWRlZCB0byBzdGFmZiwgc3R1ZGVudHMsIGhvbm9yYXJ5IHRpdGxlaG9sZGVycywgY29udHJhY3QgbGVjdHVyZXJzIGFuZCBjb250cmFjdG9ycyB3aG9zZSB0cmF2ZWwgbWVldHMgdGhlIHBvbGljeSB0ZXJtcyBhbmQgY29uZGl0aW9ucyBhbmQgaGFzIGJlZW4gYXBwcm92ZWQgYnkgdGhlIFVuaXZlcnNpdHkuQWx1bW5pLCBzdGFmZiBhbmQgc3R1ZGVudHMgbWF5IHB1cmNoYXNlIGNvdmVyIHVuZGVyIHRoZSBVbml2ZXJzaXR5J3MgY29ycG9yYXRlIHRyYXZlbCBpbnN1cmFuY2UgcG9saWN5IGZvciBub24gVW5pdmVyc2l0eSByZWxhdGVkIHRyYXZlbC4gCkFnYWluLCB5b3UgYXJlIHdyb25nLiBEZW50YWwgb2ZmaWNlcyBtYWtlIGFueSBhbmQgYWxsIHBhdGllbnQgc2lnbiBkaXNjbGFpbWVycyB0aGF0IGlmIHRoZWlyIGluc3VyYW5jZSBjb21wYW55IHBheXMgbGVzcyB0aGFuIGV4cGVjdGVkIG9yIGRvZXNuJ3QgY292ZXIgWCxZLFogdGhlIHBhdGllbnQgaXMgcmVzcG9uc2libGUuIERvbid0IHBheSwgZmluZS4gClRoZSAyIHllYXJzIGFwcHJlbnRpY2VzaGlwIEkgZGlkIHdhcyBqdXN0IHRocm93biBvdXQgdGhlIHdpbmRvdy4gCiJBbGwgSSBjYW4gc2F5IGlzIHdlIGFic29sdXRlbHkgdHJpZWQgZXZlcnl0aGluZyBhbmQgaXQgd2FzIGEgcmVhbGx5IGhhcmQgZm91Z2h0IGFuZCBleGhhdXN0aW5nIGpvdXJuZXksIGFuZCBpdCdzIHJlYWxseSBzYWQgdG8gc2VlIHRoaXMgYXMgdGhlIGVuZCByZXN1bHQsIiBNY0N1aXN0aW9uIHNhaWQuICJXZSB3b3JrZWQgd2l0aCBhIHZlcnkgY29tbWl0dGVkIHNrZWxldG9uIGNyZXcgdGhhdCB3YXMgdW5kZXJmdW5kZWQgYW5kIHdvcmtpbmcgYWdhaW5zdCBhbGwgb2RkcyBmb3IgdHdvIHllYXJzLCBhbmQgd2UgZmVsdCBsaWtlIHdlIGdvdCBzdWNrZXIgcHVuY2hlZC4gQnV0IHdlIGdhdmUgaXQgb3VyIGJlc3Qgc2hvdC4iTWNDdWlzdGlvbiwgYW4gYWx1bW51cywgd2FzIGFwcG9pbnRlZCB0aGUgc2Nob29sJ3MgcHJlc2lkZW50IGluIEphbnVhcnkgMjAxMiBpbiBob3BlcyBoZSBjb3VsZCBoZWxwIGl0IGNvcnJlY3QgaXRzIGZpbmFuY2lhbCBpc3N1ZXMuIEVucm9sbG1lbnQgaW5jcmVhc2VkIGFuZCB0aGUgY3VycmljdWx1bSBhbmQgam9iIHBsYWNlbWVudCByYXRlcyBpbXByb3ZlZCBvbiBoaXMgd2F0Y2gsIGFjY29yZGluZyB0byB0aGUgc2Nob29sLgpUaGlzIGRlbGF5IGlzIGNsZWFybHkganVzdCBNYXkgcnVubmluZyBvdXQgdGhlIGNsb2NrLiBJIG5vdCBzdXJlIGl0IHdpbGwgd29yayBhbmQgSSB0aGluayBtb3N0IGxpa2VseSAgIGFsbCB0aGluZ3MgY29uc2lkZXJlZCAgIGlzIGFuIGV4dGVuc2lvbi4gSSBndWVzcyB3ZSBzaGFsbCBzZWUuCkluIDIwMTQsIGJ5IHRoZSB3YXksIHRoZSBEZW1vY3JhdGljIGNhbmRpZGF0ZXMgZ290IHRyb3VuY2VkIGluIENvbmdyZXNzLCBzbyB5ZWFoLCBtYXliZSBJIHdhcyByaWdodCBhYm91dCB0aGF0IG9uZS4gCldlIHdhdGNoZWQgdGhlIGxhc3QgZmV3IHNvbmdzIGZyb20gdGhlIGZyb250IGFuZCBpdCB3YXMgaGVyIGhhcHBpZXN0IHNpbmNlIHRoZSB0cmFnZWR5LiAKVGhlIGFuc3dlciB0byBLYWdhbiBwcm9ibGVtcyBhbmQgdGhlIG1pbGl0YXJ5ICJEb24gQXNrLCBEb24gVGVsbCIgZmlhc2NvIHdvdWxkIGJlIGEgbmV3IHBvbGljeSBvZiAiTm8gSG9tby4iIGhvbW8gaXMgd2hhdCB5b3Ugc2F5IGFmdGVyIHlvdSBkbyBzb21ldGhpbmcgcmVhbGx5IGdheSB0byBzdG9wIGFueW9uZSBmcm9tIHRoaW5raW5nIHRoYXQgeW91IGFyZSBpbiBmYWN0IGdheS4gClRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgSSBhbSBwdXNoaW5nIG15IHNlbGYgcXVpdGUgYSBiaXQgbW9yZSBzaW5jZSA2IHdlZWtzIGlzIGEgbG9uZyB0aW1lIHRvIG1haW50YWluIGEgc3RyaWN0IHJlZ2ltZS4gCkhhc24gb2J2aW91c2x5IHNob3duIG9yIG1hZGUgaXRzZWxmIGZlbHQgaW4gdGhlIGVtcGxveW1lbnQgZGF0YSBidXQgYXMgeW91IGdvIGZvcndhcmQgeW91IHdvdWxkIGV4cGVjdCB0aGF0IG5vdCB0byBtYWtlIGV2ZXJ5dGhpbmcgZ28gYmFja3dhcmRzLCBidXQgdG8gc2xvdyB0aGF0IHBhY2UgeWVhciBvbiB0aGUgZW1wbG95bWVudCBzaWRlLCBEZVByYXR0byBzYWlkLgpZb3UgaW1tZWRpYXRlbHkgc2VwYXJhdGUgc29tZW9uZSB3aG8gaXMgYWN0dWFsbHkgdmVyeSBzaW1pbGFyIGluIHBvbGljeSBnb2FscyB0byB5b3UuIFRoYXQgY29tcGxldGVseSB1bm5lY2Vzc2FyeSBhbmQsIHF1aXRlIGZyYW5rbHksIG9mZmVuc2l2ZS4uIApCcm93biB3YXMga2VlbiB0byBjYXB0dXJlIHRoZSBvbGQgc291bmRzIGhlIGhlYXJkIG9uIHRoZSBvbGQgcG9zdHdhciBDaGVzcyBhbmQgU3VuIHJlY29yZHMgc28gaGUgcmVjb3JkZWQgbGl2ZSBvZmYgdGhlIGZsb29yIHVzaW5nIHZpbnRhZ2UgZ2VhciBhbmQgbG8gZmkgdGVjaG5pcXVlcyBhdCBhIHN0dWRpbyBpbiBDYWxpZm9ybmlhLiBUaGUgcmVzdWx0aW5nIGFsYnVtIG1peGVzIGNvdmVycyBvZiBjbGFzc2ljcyBmcm9tIHRoZSBwZXJpb2QsIGluY2x1ZGluZyBPdGlzIFNwYW5uIEl0IE11c3QgSGF2ZSBCZWVuIHRoZSBEZXZpbCBhbmQgTXVkZHkgV2F0ZXJzIEhhcmQgRGF5cyBCbHVlcywgd2l0aCBsaWtlIG1pbmRlZCBvcmlnaW5hbHMuCkhvcGVmdWxseSBub3RoaW5nIHRlcnJpYmxlIGhhcyBoYXBwZW5lZCBpbnNpZGUgb2YgdGhlIGVuZ2luZSB0aGF0IHdpbGwgY29zdCBtZSB0aG91c2FuZHMgb2YgZG9sbGFycy4gClRoZSBvZiBzZXBhcmF0ZSBtdXNjbGVzIGlzIGNyZWF0ZWQgYnkgdGhlIGFuYXRvbWlzdCBzY2FscGVsLCBkaXZpZGluZyB0aXNzdWVzIGFsb25nIHRoZSBwbGFuZXMgb2YgZmFzY2lhLiBUaGlzIHJlZHVjdGl2ZSBwcm9jZXNzIHNob3VsZCBub3QgYmxpbmQgdXMgdG8gdGhlIHJlYWxpdHkgb2YgdGhlIHVuaWZ5aW5nIHdob2xlLiBUSEFUIFRIRSBPTEQgTkVXUy4gCldoYXQgeW91IHNob3VsZCB0ZWxsIGEgY29tcGFueSB0aGF0IGNhbGxzIHRvIG9mZmVyIHlvdSBhIGJldHRlciBlbGVjdHJpYyByYXRlOiBNb25leSBNYXR0ZXJzIFdoYXQgeW91IHNob3VsZCB0ZWxsIGEgY29tcGFueSB0aGF0IGNhbGxzIHRvIG9mZmVyIHlvdSBhIGJldHRlciBlbGVjdHJpYyByYXRlOiBNb25leSBNYXR0ZXJzIEkgcmVjZWl2ZWQgYSB2b2ljZW1haWwgb24gbXkgaG9tZSBwaG9uZSB0aGF0IEkgbmVlZGVkIHRvIGltbWVkaWF0ZWx5IGNhbGwgYSBsb2NhbCBudW1iZXIgKDQ0MCA2MDAgODEwOCkgYWJvdXQgbXkgZWxlY3RyaWMgcmF0ZS4gVG9pbGV0IHBhcGVyIGFuZCB0aXNzdWUgYnJhbmRzIGFyZSB3aXBpbmcgb3V0IENhbmFkaWFuIGZvcmVzdHMgQSByZXBvcnQgZnJvbSBlbnZpcm9ubWVudGFsIGdyb3VwcyBwcm9iZXMgZ3V0dGluZyBvZiBmb3Jlc3RzIHRvIG1ha2UgdGlzc3VlIHBhcGVyIGFuZCB3aGljaCBicmFuZHMgdXNlIHJlY3ljbGVkIHBhcGVyLi4gClJlY2VudCBkZWFscyBoYXZlIHNldCBhIFVTJDYwIG1pbGxpb24gdmFsdWUgb24gQ3JpbXNvbi4gVGhhdCB2YWx1ZSBpcyBlbm91Z2ggdG8gbWFrZSBCZWF0b24sIHRoZSBjb21wYW55IGJpZ2dlc3Qgc2hhcmVob2xkZXIsIGEgVVMkMjYgbWlsbGlvbiBtYW5jaGlsZC4KU3VuZGF5OiBEeWxhbiBNb3JhbjogWWVhaCBZZWFoLCBUaGUgQmxhY2sgQm94IFRoZWF0cmUsIDhwbS4gNCBQb29mcyBhIFBpYW5vIHdpdGggV2lsbGEgV2hpdGUgYW5kIEdlYXJvaWQgRmFycmVsbHksIFRvd24gSGFsbCBUaGVhdHJlLCA4cG0uIApGb3JjZXMgcHJpdmVzIGV0IHZpZ2lsZXMgZGVzIHB1Y2llcnMgc29udCBnYWxlbWVudCBkZSBsYSByZXZ1ZS4gClJlYWxseSBub2JvZHkga25vd3MgdGhlIGV4YWN0IGFtb3VudCwgYnV0IHlvdSBjYW4gZmluZCBtYW55IGluZm9ybWF0aW9ucyB0aGF0IGFyb3VuZCAzMDAgNDAwIG1pbGxpb25zIGR1cmluZyBoaXMgZW50aXJlIHByb2Zlc3Npb25hbCBib3hpbmcgY2FyZWVyLiBBbHRob3VnaCwgdGhlcmUncyBhIGZldyBxdWVzdGlvbnMgbWFya3MuIER1cmluZyB0aGUgbGVnYWwgYmF0dGxlIGl0IHdhcyBwcm92ZWQgdGhhdCBUeXNvbiBvZnRlbiBuZXZlciBrbmV3IGZvciBob3cgbXVjaCBoZSB3YXMgYWN0dWFsbHkgZmlnaHRpbmcgZm9yLiBUaGUgb3RoZXIgdGhpbmcgd2FzLCB0aGF0IFR5c29uIHdhc24ndCBpbiBjaGFyZ2Ugb2YgaGlzIG93biB3ZWFsdGguIERvbiBLaW5nIHdhcyByZXNwb25zaWJsZSBmb3IgbWFuYWdpbmcgVHlzb24ncyBhbGwgbW9uZXkgaGUgd2FzIG1ha2luZyBvbiBmaWdodHMuIFNvLCBpbWFnaW5lIGEgcG9vciBibGFjayBraWQgZnJvbSBCcm9va2x5biB3aG8gbmV2ZXIga25ldyB0aGUgdmFsdWUgb2YgZG9sbGFyIGFuZCBzdWRkZW5seSBpcyBnaXZlbiBhIDEgbWlsbGlvbiBpbiBjYXNoIHRvIHNwZW5kIGFuZCB3aGVuIGl0IGNvbWVzIHRvIHRoZSBvdGhlciAyOSBtaWxsaW9ucyBmb3IgdGhlIGZpZ2h0LCBEb24gd2FzIHRha2luZyBoaXMgcGllY2Ugb2YgMS8zLCBhbmQgMi8zIHdlcmUgZGl2aWRlZCBiZXR3ZWVuIFR5c29uJ3MgbWFuYWdlcnMgKEpvaG4gSG9ybmUpIGFuZCBoaXMgdGVhbS4gVGh1cywgYWZ0ZXIgdGhlIHRheGVzIFR5c29uIHdhcyBsZWZ0IHdpdGggY2EuIDcgbWlsbGlvbnMuIERvbiBLaW5nIHdhcyByb2JiaW5nIFR5c29uIHNpbmNlIGRheSBvbmUuIFNvIHJlYWxseSwgaGUgbmV2ZXIgc2F3IHRoaXMgMzAwIDQwMCBtaWxsaW9ucy4gKEZ1bGwgQW5zd2VyKQpUaGVzZSBhcmUgdGhlIG9yaWdpbnMgb2YgdGhlIENoZW4gYW5kIFlhbmcgZm9ybXMgb2YgVGFpIENoaS4gVGhlIFd1LCBTdW4sIGFuZCBIYW8gc3R5bGVzIGRldmVsb3BlZCBsYXRlci4gCkl0IHNvdW5kcyBsaWtlIHlvdXIgZ29hbCBhcyBhIGdyb3VwIGlzIHRvIGhhdmUgZnVuLiBTb21ldGltZXMgdGhhdCBtZWFucyBwdXR0aW5nIGF3YXkgeW91ciBwb3dlcmZ1bCBjYXJkcyB0byBmb3N0ZXIgYSBwbGF5IGVudmlyb25tZW50IHRoYXQgZXZlcnlvbmUgY2FuIGVuam95LiAKUGxlbnR5IG9mIGRlY2VudCBnZW50bGVtYW4gSSBrbm93IGFyZSB3b3JyaWVkIGFib3V0IGJhc2VsZXNzIGFsbGVnYXRpb25zLCBub3QgYmVjYXVzZSBvZiBob3cgb2Z0ZW4gdGhleSBoYXBwZW4sIGJ1dCBmb3IgdGhlIHZlcnkgcmVhbCBwb3NzaWJpbGl0eSBvZiBoYXZpbmcgeW91ciBsaWZlIHR1cm5lZCB1cHNpZGUgZG93biBpbiB0aGF0IHNjZW5hcmlvLiBXaGlsZSBJIGFtIGFsbCBmb3IgYW4gZW52aXJvbm1lbnQgdGhhdCBpcyBzYWZlIGZvciB2aWN0aW1zIHRvIHJlcG9ydCBjcmltZXMsIEkgYW0gbm90IGEgZmFuIG9mIGd1aWx0eSB1bnRpbCBwcm92ZW4gaW5ub2NlbnQgc2NlbmFyaW9zLiBFdmlkZW5jZSBkb2VzbiBzZWVtIHRvIG1hdHRlciBpbiB0aGUgY291cnQgb2YgcHVibGljIG9waW5pb24gYW5kIGl0IHNvbWV0aGluZyBwbGVudHkgb2YgbWVuIGRvbiB3YW50IHRvIGJlIGEgY2F1c2FsaXR5IG9mLi4gClRoaXMgd291bGQgY29zdCBhYm91dCAkNSBwZXIgcmF0IHBlciBtb250aCBwbHVzIGFuIG9wcG9ydHVuaXR5IGNvc3Qgb2YgbWF5YmUgJDUwMCBwZXIgbW9udGggZm9yIHRoZSB0aW1lIHNwZW50LCB3aGljaCB3b3JrcyBvdXQgdG8gYW5vdGhlciAkNSBwZXIgcmF0IHBlciBtb250aC4gCldlIHVzZWQgb3VyIGludGVybmFsIHRlc3RpbmcgZGF0YSB0byBpbXByb3ZlIHRoZSBkZXNpZ25zLiAKTGEgZGNvdXZlcnRlIGRlcyBwaWNlcyBTaGlyYW4gOiBhdXRhbnQgQm9ubmF0IGVzdCB1bmUgbWFycXVlIGluc3RhbGxlIGRlcHVpcyBwbHVzIGRlIDEzMCBhbnMsIGF1dGFudCBTaGlyYSBlc3QgdW5lIG1hcnF1ZSB0b3V0ZSBqZXVuZSwgbGFuY2UgcGFyIHVuIGFuY2llbiBjdWlzaW5pZXIsIHBhcnRpICB0cmF2ZXJzIGxlIG1vbmRlIGF2ZWMgbCdleGlnZW5jZSBkZSB0cm91dmVyIGxlcyBtZWlsbGV1cnMgcGljZXMsIG5vbiBzZXVsZW1lbnQgYm9ucyBhdSBnb3QgbWFpcyBwcm9kdWl0cyBkZSBmYW9uIHZlcnR1ZXVzZSBwYXIgZGUgcGV0aXRzIHByb2R1Y3RldXJzLiBJbCBtJ2EgZXhwbGlxdSBzYSBkbWFyY2hlIGV0IGNlIHF1ZSBqJ2FpIHNlbnRpIGV0IGdvdCB0YWl0IGZhYnVsZXV4IGV0IGonYWkgZXUgbGEgY2hhbmNlIGRlIHJlcGFydGlyIGF2ZWMgcXVlbHF1ZXMgcGljZXMgIGRjb3V2cmlyLCBkb250IHVuIFphYXRhciBmYWJ1bGV1eC4uIApTYXVkaSBBcmFiaWEgZXhjaGFuZ2UgdGhyZWF0cyB0byBicmVhayBiaWxhdGVyYWwgdGllcwpBY3Jvc3MgdGhlIGNvdW50cnksIHV0aWxpdHkgY29tcGFuaWVzIGFyZSByYXBpZGx5IHRyYW5zaXRpb25pbmcgZnJvbSBvbGQgZmFzaGlvbmVkIG1ldGVycyB0byBlbGVjdHJvbmljICJzbWFydCIgbWV0ZXJzLCB3aGljaCBjYXB0dXJlIGRhdGEgb24geW91ciBlbGVjdHJpY2l0eSBvciBuYXR1cmFsIGdhcyB1c2UgYW5kIHRyYW5zbWl0IGl0IHdpcmVsZXNzbHkgdG8gdGhlIGNvbXBhbnkncyBjb21wdXRlcnMuIApDaXZpbCBsaWJlcnRpZXMKQXVzd2VuZGlnLCBvaG5lIHp1IHZlcnN0ZWhlbiB3YXMgZGFoaW50ZXJzdGVja3QsIHNjaG1pZXJ0IGRhcyBnYW56ZSBkYW5uIGluIGRlciBLbGF1c3VyIHNjaG5lbGwgaGluIHVuZCBkcmNrdCBpbSBUYXNjaGVucmVjaG5lciBub2NoIHp3ZWkgZHJlaSBLbnBmZSB1bmQgZGllIEF1ZmdhYmUgaXN0IGltIFByaW56aXAgZmVydGlnLi4gClBlb3BsZSBhcmUgc3BlY2lmaWNhbGx5IHRyeWluZyB0byBhdHRhY2sgdHJhbnMgcGVvcGxlIHVzaW5nIHRoaXMgbG9naWMgYXMgdGhlaXIgY292ZXIuIElmIHlvdSBnZW51aW5lbHkgZG9uIG1lYW4gYW55dGhpbmcgYnkgaXQgYW5kIGRvbiB3YW50IHRvIGZvcmNlIHRyYW5zIHBlb3BsZSB0byBrZWVwIHRoZWlyIGJpcnRoIHNleCBvbiB0aGVpciBJRHMgdGhlbiBncmVhdC4gSWYgeW91IGNhbiB1bmRlcnN0YW5kIHdoeSBvbmUgb2YgdGhlIG1vc3QgdnVsbmVyYWJsZSBtaW5vcml0aWVzIHRvIGFzc2F1bHQsIGhhcmFzc21lbnQsIHJhcGUgYW5kIG11cmRlciB3b3VsZCByZWFjdCBwb29ybHkgdG8gc29tZW9uZSB1c2luZyBhIHJpZ2h0IHdpbmcgdGFsa2luZyBwb2ludCB0aGVuIEkgZG9uIGtub3cgd2hhdCB0byB0ZWxsIHlvdS4gCkxhZHkgR2FnYSBzYXlzIHNoZSBwdWxsZWQgb3V0IG9mIEthbnllIHRvdXIgdG8gYWRkcmVzcyBwZXJzb25hbCBtZW50YWwgaGVhbHRoClRydW1wIGdvdCBwbGF5ZWQuIEkgY2FuJ3QgdW5kZXJzdGFuZCBob3cgT2JhbWEgaXMgc3VwcG9zZWRseSBzbyBiYWQgaW4gY29tcGFyaXNvbi4gQXQgbGVhc3QgdGhlIElyYW4gRGVhbCBoYWQgdmVyaWZpYWJsZSBzdGVwcyB0aGF0IElyYW4gd2FzIGluIGNvbXBsaWFuY2Ugd2l0aC4KVGhlIDIwMDUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGJyb2FkY2FzdHMgd2lsbCBoYXZlIG92ZXIgMiwwMDAsMDAwIHBlb3BsZSB3YXRjaGluZyBlYWNoIHRlbGV2aXNlZCBlcGlzb2RlIHdoZW4gRVNQTiBzdGFydHMgc2hvd2luZyB0aGVtIGluIEp1bmUuIFdvcmxkIFBva2VyIFRvdXIgZXBpc29kZXMgd2lsbCBiZSBzaG93biBpbiA2MCBjb3VudHJpZXMgYW5kIGlmIFN0ZXZlIExpcHNjb21iIGhhcyBoaXMgd2F5IHRoaXMgd2lsbCBpbmNyZWFzZSB0byAyMDAgY291bnRyaWVzLiAKVXNlIHlvdXIgdGh1bWJzIHRvIHN0cmV0Y2ggdGhlIGZvcmVoZWFkIGdlbnRseSwgcHVsbGluZyBvdXR3YXJkcyBmcm9tIHRoZSBjZW50cmUgVXNlIHRoZSB0aXBzIG9mIHlvdXIgZm9yZWZpbmdlciB0byBkcmF3IGRvd24gdGhlIGphd2JvbmUgZnJvbSB0aW4gZnJvbnQgb2YgdGhlIGVhciB1bnRpbCB5b3VyIGZpbmdlcnMgbWVldCBvbiB0aGUgY2hpbiBEcmF3IHNtYWxsIGNpcmNsZXMgb24gdGhlIHNraW4gYWJvdmUgdGhlIGhpbmdlIG9mIHRoZSBqYXcgaW4gZnJvbnQgb2YgdGhlIGVhcnMgU3Ryb2tlIGZyb20gdGhlIGJyaWRnZSBvZiB0aGUgbm9zZSwgZG93biB0aGUgc2lkZXMgb2YgdGhlIG5vc2UgYW5kIGFjcm9zcyB0aGUgY2hlZWtib25lcyBTdHJva2UgZnJvbSB0aGUgYnJpZGdlIG9mIHRoZSBub3NlIGFsb25nIHRoZSBleWVicm93cyBSdW4gdGhlIHBhZHMgb2YgeW91ciB0aHVtYnMgZ2VudGx5IGRvd24gZnJvbSB0aGUgY2VudHJlIG9mIHRoZSBleWVicm93IGFuZCBvdmVyIHRoZSBleWVsaWQsIGNsb3NpbmcgdGhlIGV5ZXMgaW4gdGhlIHByb2Nlc3MgKHNvbWUgcGFyZW50cyBzd2VhciBieSB0aGlzIGFzIGEgd2F5IG9mIGVuY291cmFnaW5nIHNsZWVwISkgU3Ryb2tlIHRoZSB0b3AgbGlwLCBmaW5pc2hpbmcgaW4gYW4gdXB3YXJkIHN0cm9rZSwgbWFraW5nIHRoZSBzaGFwZSBvZiBhIHNtaWxlIERvIHRoZSBzYW1lIHdpdGggdGhlIGxvd2VyIGxpcC4gCkluIG90aGVyIHdvcmRzLCBpbiBhbnkgZ2l2ZW4gdG91cm5hbWVudCB3aXRoIDQwMCBlbnRyYW50cywgdGhlIHRvcCBwbGF5ZXIgaW4gdGhlIGZpZWxkIHdvdWxkIGJlIG5vIGJldHRlciB0aGFuIGEgMTAwIDEgc2hvdCB0byB3aW4gaXQuIApVc2UgdHJhbnNsYXRpb24gc29mdHdhcmUgaWYgbmVjZXNzYXJ5ICAgaXQgd2lsbCBiZSBxdWl0ZSB0ZWRpb3VzLCBidXQgaXQgY291bGQgd29yay4gClBsZWFzZSBzZWVkIHRoaXMgZm9yIGFzIGxvbmcgYXMgcG9zc2libGUuIApTcHJlY2h0IGRpZSBSZWdlbG4gYWIuIEVudHNjaGVpZGV0IGV1Y2gsIHdlbGNoZSBkZXIgdW50ZW4gZXJ3aG50ZW4gVmVyc2lvbmVuIGlociBzcGllbGVuIHdvbGx0LCB3ZWxjaGVuIFdlcnQgd2VsY2hlIEtsZWlkdW5nc3N0Y2sgaGF0IHVuZCBzbyB3ZWl0ZXIgdW5kIHNvIGZvcnQuCklmIHlvdSBhcmUgbG9va2luZyB0byBzZWxsIFBhdWxzb24gQ2xheSBQb2tlciBDaGlwcyBvbmxpbmUsIGl0IGlzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3Uga25vdyBhbmQgdW5kZXJzdGFuZCB0aGUgYmFzaWNzIG9uIGhvdyB0byBjcmVhdGUgYSBzdWNjZXNzZnVsIHBhZ2UuIEJ5IGtub3dpbmcgaG93IHRvIHNldCB1cCBhIHBhZ2Ugc28gdGhhdCB5b3VyIHRhcmdldCBtYXJrZXQgYWN0dWFsbHkgbWFrZXMgaXQgdG8gdGhlIHBhZ2UsIGFuZCBwdXJjaGFzZSB0aGUgaXRlbXMgZnJvbSB5b3VyIHdlYnNpdGUsIHlvdSBhcmUgc2V0dGluZyB5b3Vyc2VsZiB1cCB0byBleHBlcmllbmNlIG1vcmUgc3VjY2Vzcy4uIApXZW5keSBkZWFscyB3aXRoIGFsbCB0aGUgdXN1YWwgc3RydWdnbGVzIG9mIGhlciBhZ2U6IHByZWNhcmlvdXMgZW1wbG95bWVudCwgcHJlY2FyaW91cyBob3VzaW5nLCBwcmVjYXJpb3VzIGxpdmluZyB3aXRoIGFsbCB0aGF0IHByZWNhcmlvdXNuZXNzIGV4YWNlcmJhdGVkIGZvciBhIHRyYW5zIHdvbWFuLiBXb3JrIG9wdGlvbnMgYXJlIGxpbWl0ZWQgd2hlbiB5b3UgYXJlIGNvbnN0YW50bHkgcHJlanVkZ2VkIGZvciBiZWluZyB3aG8geW91IGFyZS4uIApJIHdhcyBvbmx5IGdvaW5nIGZvciB0aGUgY29tcHV0ZXIgYXMgb3RoZXJzIHdlcmUgZGVzaWduYXRlZCBvdGhlciB0aGluZ3MgdG8gaGVscCBoZXIgd2l0aC4gClRoZSBoYXJkIHBhcnQgaXMgc2VwYXJhdGluZyBob3cgbXVjaCBvZiBoaW0gd2FzIGxlZnQgYWZ0ZXIgZmFtZSwgdGhlIGVudGVydGFpbm1lbnQgaW5kdXN0cnksIGdvc3NpcCBjb2x1bW5zLCBhIG1pc3NpbmcgY2hpbGRob29kLCBhbiBhYnVzaXZlIGZhdGhlciBnb3QgZG9uZSB3aXRoIGhpbS4gSGlzIHJlYWxpdHkgYXQgdGhhdCBwb2ludCBjb3VsZCBoYXZlIGJlZW4gc28gZGlzdG9ydGVkIHRoYXQgd2hhdCBoZSB3YXMgZG9pbmcgd2FzIG5vcm1hbC4gClRoZSBQcmFpcmllIEJpa2VyIFJhbGx5IG9yaWdpbmF0ZWQgaW4gMjAwOCBhcyBhIEJydXNoIENoYW1iZXIgb2YgQ29tbWVyY2UgY29tbXVuaXR5IHByb21vdGlvbiBhbmQgZnVuZHJhaXNlci4gCkFtb25nIHRoZSBhY3Rpdml0aWVzIHNjaGVkdWxlZCBmb3IgU2F0dXJkYXkgYXJlIHRoZSBTaG93IGFuZCBTaGluZSBldmVudCwgYmlrZXIgcm9kZW8gYW5kIGZvdXIgd2hlZWxlciByb2Rlby4KVGhlIGJlbmVmaXRzIG9mIG1hc3RlcmluZyBibGFja2phY2sgYXJlIG1vcmUgcmV3YXJkaW5nIHRoYW4gbW9zdCBwZW9wbGUgaW1hZ2luZS4gVGhlIHRpbWUgaW52ZXN0ZWQgaW4gbGVhcm5pbmcgdGhlIGdhbWUgYW5kIGJsYWNramFjayBzdHJhdGVneSBwcm9kdWNlcyBhIGZlZWxpbmcgb2YgZXhlcmNpc2luZyB0aGUgbWluZCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGVuYWJsaW5nIGEgcGxheWVyIHRvIHRha2UgaG9tZSBhIGxpdHRsZSBxdWljayBwYXkgZGlydCAgIGEgZ3JlYXQgbW9uZXRhcnkgcmV3YXJkIGZvciBhIGZldyBoYW5kcyBvZiBmdW4gY2FyZCBwbGF5aW5nLi4gCg==|<---