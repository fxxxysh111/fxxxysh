--->|QnV0IG91dHNpZGUgb2YgdGhlIGNvbnRleHQgb2YgdGhlIHNvbmcsIEkgdGhpbmsgaXQgcGVyZmVjdGx5IGZpbmUgdG8gYmUgYWJzb2x1dGVseSBvYnNlc3NlZCB3aXRoIHNvbWV0aGluZyAgIGEgYmFuZCwgYSBib29rLCBhIG1vdmllLCB3aGF0ZXZlciBpdCBtYXkgYmUuIE15IGZhdm9yaXRlIGJhbmQgaGFzIGJlZW4gbXkgZmF2b3JpdGUgYmFuZCBmb3IgMjAgeWVhcnMuIEkgaGF2ZSBtdWx0aXBsZSB0YXR0b29zIG9mIHRoaW5ncyByZWxhdGVkIHRvIHRoZSBiYW5kLiAKQW5kIG1hbnkgb2YgdGhvc2UgdHVybmVkIGludG8gZ3JlYXQgZGVhbHMuIFR3byBJIHJlYWxseSBsaWtlZCwgb25lIHdhcyBhIHBhcmNlbCB3ZSBiaWQgb24gYmVjYXVzZSBvdXIgcG9ja2V0cyB3ZXJlIGZ1bGwgb2YgcG9rZXIgd2lubmluZ3MgZnJvbSB0aGUgbmlnaHQgYmVmb3JlLiBBbmQgSSBrbmV3IGZyb20gdGhlIGFzc2Vzc29ycyBwYXJjZWwgbnVtYmVyIGl0IHdhcyBpbiBhIGdyZWF0IGFyZWEuIApXaGVuIHlvdSBoYXZlIGEgY29yZCB0byBzb21lb25lIGNsb3NlIHRvIHlvdSB3aG8gaGFzIChvciBoYXMgaGFkKSBhbiBhZGRpY3Rpb24sIHN1Y2ggYXMgYWxjb2hvbGlzbSwgb3IgYW4gYWRkaWN0aW9uIHRvIGhhcmQgZHJ1Z3MsIG9yIGV2ZW4gZHJ1Z3Mgc3VjaCBhcyBtYXJpanVhbmEsIGl0IGNhbiBtYWtlIGEgcmVhbCBkaWZmZXJlbmNlIHRvIHlvdXIgYXVyYSB3aGVuIHlvdSB0YWtlIG91dCB0aGF0IGNvcmQuCkFuZCB0b2RheSBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnMsIGJ1c2luZXNzZXMgb3IgY29ycG9yYXRpb25zIG9mZmVyIG9ubGluZSBwb2tlciB0b3VybmFtZW50cyBmb3IgcHJvbW90aW9uIHB1cnBvc2VzLiAKU3dhZ19BdHRhY2sgIDcgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpJIGhhdGUgdGhhdCBzaGUgZ2V0cyB0aG9zZSBkaWdzIGluLiBTaGUgdHJpZXMgdG8gYWN0IHNvIG5pY2UgYW5kIHN3ZWV0IGJ1dCBpZiB5b3UgbGlzdGVuIHRvIGhlciwgeW91IGtub3cgaXQgaXMgYSBmYWNhZGUuLiAKT3Igb3ZlciB0aGUgZmxpcHNpZGUsIGEgdW5jb25zdHJ1Y3RpdmUgcmVzdWx0IG1heSBwb3NzaWJseSB3ZWxsIGRydWRnZSB3YXkgdXAgYSBhbW91bnQgb2Ygb2Ygc2V2ZXJhbCBpZGVhcy4gCk5vIGFtb3VudCBvZiBzZWxmIGRpc2NpcGxpbmUgY2FuIG92ZXJjb21lIGEgYnJhaW4gdGhhdCBpcyBwaHlzaWNhbGx5IGJ1aWx0IGRpZmZlcmVudCB0byB0aGUgcG9pbnQgaXQgY2FuIGJlIHNlZW4gb24gYnJhaW4gc2NhbnMuIEV4cGxhaW5pbmcgaG93IEFESEQgYWZmZWN0cyBleGVjdXRpdmUgZnVuY3Rpb25zLiAKVGhleSBoYXZlIGEgaGFuZCBoaXN0b3J5IHdpdGggZWFjaCBvdGhlci4gCllvdSBnYXRoZXIgYWxsIHRoZSBpbmZvcm1hdGlvbiB5b3UgY2FuIHRvIG1ha2UgdGhlIGJlc3QgcG9zc2libGUgZGVjaXNpb24uIApJIG1vdmVkIGJhY2sgdG8gYmUgY2xvc2Ugd2l0aCB0aGUgc2FtZSBhdW50IGFuZCB1bmNsZSBub3cgdGhhdCBJIGFuIGFkdWx0LiBJIGJyb2tlbiwgcmVhbGx5IGZ1Y2tlZCB1cCBmcm9tIHRoZSB3YXkgSSB3YXMgYWJ1c2VkIChsdWNreSBzY2FwZWdvYXQga2lkIGhlcmUpLCBidXQgbXkgY291c2lucyBhcmUgYWxsIGluY3JlZGlibHkgd2VsbCBhZGp1c3RlZCwgc29jaWFsLCBhbmQgc21hcnQgKG15IGF1bnQgbWFkZSB1cyBkbyBob21ld29yayBvdmVyIHRoZSBzdW1tZXJzIHNvIHdlIGFsd2F5cyBoYXZlIGEgbGVnIHVwIG9uIHRoZSBvdGhlciBraWRzKS4uIApJIGhhZCBhIHJpbmcgbWFkZSBieSBnZW12YXJhIChub3QgbG9jYWwgYW5kIG1pZ2h0IG5vdCBiZSB3aGF0IHlvdSBhcmUgbG9va2luZyBmb3IpIGJ1dCB0aGV5IGhhdmUgbWFueSBtYW55IGRlc2lnbnMgYW5kIGEgbGFyZ2Ugc2VsZWN0aW9uIG9mIHN0b25lcyBpbmNsdWRpbmcgTW9pc3Nhbml0ZSAoaWYgdGhhdCB3YXMgeW91ciAic3ludGhldGljIikuIFRoZXkgYWxzbyBkbyByZXBhaXJzIGFuZCBjdXN0b20gd29yayAgIGJ1dCBpIGhhdmUgbm8gZXhwZXJpZW5jZSBvZiB0aGVpciB3b3JrL3ByaWNlcy4KVk5FTUVOVFMgREUgTCdBUE4gSUlJLiBQb3N0Z2FkdWVzIGVuIG9zdG9wYXRoaWUgSVYuIApUaGUgUGxheTogRGVhbCB0d28gZG93biBhbmQgb25lIHVwIHRvIGV2ZXJ5IHBsYXllciBhbmQgbGF5IHRocmVlIGNvbW11bml0eSBjYXJkcyBpbiB0aGUgbWlkZGxlLiBCZXRzIGFyZSBtYWRlIGJldHdlZW4gZWFjaCBkZWFsLiAKSSBkb24gd2FudCB0byBoYXZlIHRvIGJyaWJlIGEgcGlsb3QgdG8gbGFuZCBzYWZlbHkuIApHcm93aW5nIHVwIGluIFZhbmNvdXZlciwgSHVpIHdhcyByYWlzZWQgb24gd2hhdCBzaGUgdGhvdWdodCBvZiBhcyAicmVhbCIgQ2hpbmVzZSBmb29kICAgbWFyaW5hdGVkIGR1Y2sgd2luZ3MsIGplbGx5ZmlzaCBzYWxhZCBhbmQgZmlzaCBtYXcgc291cCAgIGFuZCBleHBvc2VkIHRvIGFuICJhbWF6aW5nbHkgZGl2ZXJzZSIgYXJyYXkgb2YgcmVnaW9uYWwgY3Vpc2luZXMgYXQgbWFueSBvZiB0aGUgY2l0eSdzIGV4Y2VwdGlvbmFsIENoaW5lc2UgcmVzdGF1cmFudHMuIApEb25uaW5nIGEgc2Vjb25kIHN0cmlraW5nIG91dGZpdCwgdGhlIGJsb25kZSB3YXMgYW4gYWJzb2x1dGUgdmlzaW9uIHdoZW4gc2hlIHRvb2sgdG8gdGhlIHJ1bndheSBpbiBhIGJsb29taW5nIGJlYXV0aWZ1bCBmbG93ZXIgaW5zcGlyZWQgZHJlc3MsIGFjY2Vzc29yaXNlZCB3aXRoIGEgY2h1bmt5IGZsb3JhbCBuZWNrbGFjZS4KSXQganVzdCBtYWtlcyBzZW5zZSBmb3IgV09UQyB0byBraWxsIHRoZSBwYXBlciBjb21wZXRpdGl2ZSBzY2VuZSBpbiBmYXZvdXIgb2YgYXJlbmEuIEZseWluZyBwZW9wbGUgaW50byB0aGUgc2FtZSBsb2NhdGlvbiBmb3IgYSBwcm8gdG91ciBjb3N0cyB0aGVtIG1pbGxpb25zLiBUaGUgc2FtZSB3aXRoIHRoZWlyIHByb2R1Y3Rpb24gY3Jldy4gCkFybWVkIEZvcmNlcyBNb3RvcmN5Y2xlIENsdWIsIEd1bGZwb3J0UHV0IG9uIHlvdXIgd2Fsa2luZyBzaG9lcyB0byB0aGUgdGVzdCBmb3IgdGhlIFdhbGtpbmcgb24gV2F0ZXIgQnJpZGdlIFdhbGsuIFRoaXMgd2FsayB3aWxsIGJlIGhlbGQgYXQgdHdvIGxvY2F0aW9uczogdGhlIEJpbG94aSBPY2VhbiBTcHJpbmdzIGJyaWRnZSBvciB0aGUgQmF5IFN0LiAKUGVvcGxlIHdobyBhcmVuIGNsaW5nIHRvIHN0ZXJlb3R5cGVzLCBnZW5lcmFsaXNhdGlvbnMsIGFuZCBtZWRpYSBwb3J0cmF5YWxzIG9mIGRpc2FibGVkIHBlb3BsZSB3aGljaCBhcmUgb2J2aW91c2x5IGluYWNjdXJhdGUgdG8gdGhvc2Ugb2YgdXMgd2hvIGhhdmUgbGl2ZWQgd2l0aCB0aGUgdGhpbmdzIHRoZXkgam9raW5nIGFib3V0LlRoYXQgbm90IHRvIHNheSB0aGF0IGEgZGlzYWJsZWQgcGVvcGxlIGNhbiBtYWtlIGEgdGFzdGVsZXNzIGFuZCBvZmZlbnNpdmUgam9rZSB0aGF0IEkgZG9uIGFwcHJlY2lhdGUuIEludGVybmFsaXNlZCBiaWdvdHJ5IGlzIGEgdGhpbmcsIGZvciBvbmUgdGhpbmcuIApUaGV5IG5lZWQgaGlzIHNpZ25hdHVyZSB0byBiZWNvbWUgbGF3Li4gCkR1dGNoIHJlc2VhcmNoZXJzIHdhbnQgdG8gZW5jb3VyYWdlIHBhcmVudHMgb2Yga2lkcyB3aXRoIGF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIgdG8gdHJ5IGEgc3BlY2lhbCBkaWV0IHRvIHNlZSBpZiBzb21lIG9mIHRoZSBzeW1wdG9tcyBtYXkgYmUgbGlua2VkIHRvIGNlcnRhaW4gZm9vZHMuSXQgY2FsbGVkIHRoZSBSZXN0cmljdGVkIEVsaW1pbmF0aW9uIERpZXQgKFJFRCkgYW5kIG1heSByZWR1Y2Ugb3IgZWxpbWluYXRlIEFESEQgc3ltcHRvbXMuSW4gYSBzdHVkeSBwdWJsaXNoZWQgaW4gdGhlIE1lZGljYWwgSm91cm5hbCBMYW5jZXQgKHNlZSBiZWxvdyksIDc4IHBlcmNlbnQgb2Yga2lkcyB3aG8gc3RheWVkIG9uIHRoZSBkaWV0IGZvciA1IHdlZWtzIGhhZCBmZXdlciBzeW1wdG9tcyBhbmQgc29tZSB3ZXJlIGFibGUgdG8gc3RvcCB0YWtpbmcgbWVkaWNhdGlvbi4gV09XIVJlc2VhcmNoZXJzIGF0IHRoZSBBREhEIFJlc2VhcmNoIENlbnRyZSBpbiBFaW5kaG92ZW4sIHRoZSBOZXRoZXJsYW5kcywgZGl2aWRlZCAxMDAga2lkcyB3aXRoIEFESEQgKGFnZXMgNCB0byA4ICkgaW50byB0d28gZ3JvdXBzLk9uZSBncm91cCBhdGUgYSBoZWFsdGh5IGRpZXQgZm9yIDUgd2Vla3Mgd2hpbGUgdGhlIG90aGVyIGdyb3VwIGF0ZSB0aGUgUmVzdHJpY3RlZCBFbGltaW5hdGlvbiBEaWV0LlRoZSBSRUQgZGlldCBkb2VzIG5vdCBhbGxvdyBmb3IgcHJvY2Vzc2VkIGZvb2RzLiBJdCBtYWlubHkgY29uc2lzdHMgb2Ygd2hvbGUgZm9vZHMgaW5jbHVkaW5nIG1lYXQsIHZlZ2V0YWJsZXMsIGZydWl0LCB3YXRlciBhbmQgcmljZS4gCkhpcyBjb3ZlciBzdG9yeSBhYm91dCBjb21pbmcgZnJvbSBhIHNtYWxsIHZpbGxhZ2UgY291bGQgYmUgc29tZXdoYXQgcGxhdXNpYmxlLCBidXQgSSBkb24gdGhpbmsgdGhlIEdlcm1hbnMgaW4gdGhlIHNjZW5lIHdvdWxkIGhhdmUgYWN0dWFsbHkgYm91Z2h0IGl0LgpPaCBnb2QuIFRoaXMgcmVtaW5kZWQgbWUgb2YgYSBjYWxsIEkgdG9vayB3aGVuIEkgd29ya2VkIGZvciBhIFZvSVAgY29tcGFueS4gU29tZW9uZSBjYWxsZWQgaW4gY2xhaW1pbmcgdGhlIHBob25lcyB3ZXJlbiB3b3JraW5nLCBzbyBJIHN0YXJ0ZWQgZG9pbmcgYmFzaWMgdHJvdWJsZXNob290aW5nLCBhbmQgdHVybnMgb3V0IHRoZSBpbnRlcm5ldCB3YXMgY29tcGxldGVseSBkb3duLiAKQWJzb2x1dGVseSAgIGFjdHVhbGx5IHRoZSBmaXJzdCBtb250aCBJIHdhcyBvbiB0aGVtIEkgZmVsdCBJIHdhcyAiYmxpc3NmdWxseSBuZXV0cmFsIiAgIGxpa2UgdGhlIGNvbWUgdXAgb2YgYW4gZWNzdGFzeSB0cmlwIHdpdGhvdXQgdGhlIGdvb2QgcGFydCBhZnRlciBvbnNldC4gCjIwMTguIAoiSW4gbGF0ZSAyMDE3IEFMSCBlbmdhZ2VkIENhbmFkYSBSZXNwb25zaWJsZSBHYW1ibGluZyBDb3VuY2lsLCBhbiBpbmRlcGVuZGVudCBub24gcHJvZml0IG9yZ2FuaXNhdGlvbiBkZWRpY2F0ZWQgdG8gcHJvYmxlbSBnYW1ibGluZyBwcmV2ZW50aW9uLCB0byBjb25kdWN0IGFuIGluZGVwZW5kZW50IHJldmlldyBvZiBBTEggZ2FtaW5nIG9wZXJhdGlvbnMsIiBNciBDYWlybnMgc2FpZC4gIkFMSCB3aWxsIGV4cGFuZCBSR0MgcmV2aWV3IHRvIGluY2x1ZGUgdGhlIGFsbGVnYXRpb25zIHJhaXNlZCBieSB0aGUgZm9ybWVyIEFMSCBlbXBsb3llZXMgYW5kIE1yIEFuZHJldyBXaWxraWUuIApZb3UgZGVjaWRlLCB3ZWxsIGRvbmUgb24geW91ciBwcm9ncmVzcyBzbyBmYXIsIGFuZCB0aGUgY2hhbmdlcyB5b3UgbWFkZSB0byB5b3VyIGRpZXQgYW5kIGxpZmVzdHlsZSEKWWVhaCBjb21wbGV0ZWx5IGJ1dCB3b3VsZCBpdCBtYXliZSBiZSBiZXR0ZXIgaWYgaXQgd2VyZSBhIHdlZWtlbmQgd2hlbiBoZSdzIG5vdCBhdCB3b3JrIHNvIHNoZSB3b3VsZG4ndCBiZSBleGhhdXN0ZWQgbm9yIG5lZWQgdGhlIGhlbHAgYXMgbXVjaCBvbiBhIHdlZWtlbmQgYXMgaGUncyB0aGVyZSB0byBoZWxwLiAKRHJlYW0gVGhlYXRlciAgIERpc3RhbmNlIE92ZXIgVGltZTogSSB3YXMgaGVzaXRhbnQgZ29pbmcgaW50byB0aGlzIGJlY2F1c2UgSSByZWFsbHkgZGlkbiBsaWtlIHRoZWlyIHByZXZpb3VzIGFsYnVtLCBidXQgb3ZlcmFsbCBJIHRoaW5rIHRoaXMgaXMgbXkgZmF2b3VyaXRlIG9mIHRoZWlyIHBvc3QgTWlrZSBQb3J0bm95IGFsYnVtcy4gSSBub3JtYWxseSBmZWVsIGxpa2UgTWFuZ2luaSBkcnVtbWluZyBmZWVscyB0b28gc3RpZmYsIGJ1dCBJIHRoaW5rIGhlIHJlYWxseSBnb3QgaGlzIGdyb292ZSBoZXJlIGFuZCBQZXRydWNjaSBsYWlkIGRvd24gc29tZSBzb2xpZCByaWZmcy4gQXQgdGltZXMgdGhlIGx5cmljcyB3ZXJlIGEgYml0IGNoZWVzeSwgYnV0IEkgbmV2ZXIgZ29uZSB0byBEVCBmb3IgbHlyaWNzLi4gCkdvb2dsZSBzb2x2ZWQgdGhpcyBwcm9ibGVtIG9uIFlvdVR1YmUsIGZvciBpbnN0YW5jZSwgYnkgdGFyZ2V0aW5nIHZpZGVvIGFkcyBiYXNlZCBvbiBhIHZpZXdlcidzIHNlYXJjaCBoaXN0b3J5Li4gCkJ1dCBtYWludGFpbmluZyByZWNvdmVyeSBmcm9tIGdhbWJsaW5nIGFkZGljdGlvbiBvciBwcm9ibGVtIGdhbWJsaW5nIGlzIHN0aWxsIHBvc3NpYmxlIGlmIHlvdSBzdXJyb3VuZCB5b3Vyc2VsZiB3aXRoIHBlb3BsZSB0byB3aG9tIHlvdSBhY2NvdW50YWJsZSwgYXZvaWQgdGVtcHRpbmcgZW52aXJvbm1lbnRzIGFuZCB3ZWJzaXRlcywgZ2l2ZSB1cCBjb250cm9sIG9mIHlvdXIgZmluYW5jZXMgKGF0IGxlYXN0IGF0IGZpcnN0KSwgYW5kIGZpbmQgaGVhbHRoaWVyIGFjdGl2aXRpZXMgdG8gcmVwbGFjZSBnYW1ibGluZyBpbiB5b3VyIGxpZmUuTWFraW5nIGhlYWx0aGllciBjaG9pY2VzT25lIHdheSB0byBzdG9wIGdhbWJsaW5nIGlzIHRvIHJlbW92ZSB0aGUgZWxlbWVudHMgbmVjZXNzYXJ5IGZvciBnYW1ibGluZyB0byBvY2N1ciBpbiB5b3VyIGxpZmUgYW5kIHJlcGxhY2UgdGhlbSB3aXRoIGhlYWx0aGllciBjaG9pY2VzLiAKVGhhbmsgeW91IHNvIG11Y2ggZm9yIHRoZSBlbmNvdXJhZ2VtZW50Li4gCkkgcGxheSBhIG1peCBvZiBvbmxpbmUgYW5kIGxpdmUgMS8yLiBTb21ldGhpbmcgeW91IHdpbGwgZGVmaW5pdGVseSBoYXZlIHRvIGdldCB1c2VkIHRvIGlzIHRoZSBwYWNlIG9mIGxpdmUgcGxheS4gTGl2ZSBwbGF5cyBzbyBtdWNoIHNsb3dlciB0aGFuIG9ubGluZSBhbmQgd2l0aG91dCB0aGUgb3B0aW9uIG9mIHBsYXlpbmcgNiBtYXggaXQgZmVlbHMgZXZlbiBzbG93ZXIuIApJIHdlbnQgd2hlbiBJIHdhcyByZWNvdmVyaW5nIGZyb20gYSBjb2xkIGFuZCBoYWQgc2VyaW91cyBzaW51cyBwcmVzc3VyZS4gCkluIG51cnNpbmcgc2Nob29sIHdlIHRhbGtlZCBhYm91dCBNUlNBIGFuZCBob3NwaXRhbCBhY3F1aXJlZCBpbmZlY3Rpb25zLiBXZSBhbHNvIGxlYXJuZWQgdGhhdCBTY2FuZGluYXZpYW4gYW5kIE5vcndlZ2lhbiBob3NwaXRhbHMgaGFkIGxvdyBpbmZlY3Rpb24gcmF0ZXMuIFRoZSBkaWZmZXJlbmNlIGluIEFtZXJpY2FuIGFuZCBTY2FuZGluYXZpYW4gbnVyc2luZz8gRXZlcnkgZGF5IHRoZSBudXJzZXMgd291bGQgY29tZSBpbiBhbmQgb3BlbiBhbGwgdGhlIHdpbmRvd3MgYW5kIGRvb3JzLCByZWdhcmRsZXNzIG9mIHRlbXBlcmF0dXJlLCBhbmQgbGV0IGZyZXNoIGFpciBhbmQgc3VubGlnaHQgaW4uIFRoZSBVViBzdW5saWdodCBhbmQgZnJlc2ggYWlyIGhlbHBlZCBwYXRpZW50cyByZWNvdmVyIGFuZCBpbXByb3ZlZCBIQUkgcmF0ZXMuIEV2ZXJ5IHRpbWUgaSB3YWxrIGludG8gYSByb29tIGFmdGVyIDEwIHllYXJzLCBpIHN0aWxsIHdhbnQgdG8gb3BlbiB0aGUgd2luZG93cy4gT25seSB5b3UgY2FudCBkbyB0aGF0IGFueSBtb3JlLgpEcml2ZXJzIGFuZCB0ZWFtcyBzdGlsbCBoYWQgdG8gd2FpdCBwYXRpZW50bHkgZm9yIHRoZSBGSUEncyBkZWNpc2lvbi4gVGhlIGxpZ2h0cyBmYWRpbmcgZWFybGllciB0aGFuIGV4cGVjdGVkLCB0aGUgZGVjaXNpb24gdG8gcG9zdHBvbmUgd291bGQgaGF2ZSBiZWVuIHRha2VuIGFyb3VuZCAzOjIwUE0gcmF0aGVyIHRoYW4gNDozMFBNLCBhcyBpdCB3YXMgb3JpZ2luYWxseSBhbm5vdW5jZWQuCkhlIGV4cHJlc3NlcyB2ZXJ5IGxpdHRsZSBpbnRlcmVzdCBpbiB5b3VyIGxpZmUsIGZhbWlseSwgZnJpZW5kcywgd29yayBvciB5b3VyIGFjdGl2aXRpZXMgYW5kIGludGVyZXN0cy4gCkEgcGFydGljdWxhciBzb25nIGNhbiBldm9rZSBzdHJvbmcgZW1vdGlvbnMgYW5kIHRha2UgdXMgYmFjayB0byBhIHBhcnRpY3VsYXIgdGltZSBhbmQgcGxhY2UuIApBICQyNSwwMDAgZGVjayByZXBhaXIgY2FuIGVhc2lseSBzcGlyYWwgb3V0IG9mIGNvbnRyb2wgaW50byBhICQxMDAsMDAwIG5pZ2h0bWFyZS4gCk15IHBsYW4gaXMgdG8gYnJpbmcgYmFjayB2aWRlbyBwb2tlciwgYSAkNCBiaWxsaW9uIGluZHVzdHJ5LCBhbmQgdGF4IGl0LiAKSW0gd2lkZSBhd2FrZS4gCldoYXQgdHlwZSBvZiBtYXNzYWdlIG9pbCB0aGF0IGlzIHVzZWQgZGVwZW5kcyBvbiB0aGUgbWFzc2V1c2UuIAoiV2Uga2VwdCBjb21pbmcgYmFjayBhbmQga2VwdCBmYWxsaW5nIGluIGxvdmUgd2l0aCB0aGUgYXJlYSBtb3JlIGFuZCBtb3JlLCIgTXIgTWNDcmVhZHlzYWlkLiBBcyB3ZWxsIGFzIGJ1c2h3YWxraW5nIGFuZCByb2NrIGNsaW1iaW5nLCB0aGV5IHdlcmUgYWxzbyBsb29raW5nZm9yIHNvbWV3aGVyZSB0byBzZXQgdXAgdGhlaXIgYnJld3B1Yi4gVGhleSB3ZXJlcmVndWxhciBjbGllbnRzIG9mQ2l2aWMgVmlkZW8gYW5kbG92ZWQgdGhlIGJ1aWxkaW5nLiAKVGhlIGNoYW5jZXMgb2YgU2hhaGJheiBTaGFyaWYgYmVpbmcgYXBwb2ludGVkIGFzIHRoZSBQTSBjYXJyaWVzIGluaGVyZW50IGRhbmdlcnMgZm9yIFB1bmphYiB3aXRoIGl0IGFzIHRoZSBwcm92aW5jZSBtaWdodCBzbGlwIG91dCBvZiB0aGUgUE1MIE4gY29udHJvbC4KVGhlIHJ1bGUgb2YgbGF3IGhhcyBnb25lIG91dCB0aGUgd2luZG93IHRvby4gClRoZSBjbG9zdXJlLCBmb3JtYWxseSBhbm5vdW5jZWQgaW4gYSBsZXR0ZXIgdG8gc3R1ZGVudHMgU2VwdC4gNCwgaXMgdGhlIHNlY29uZCB0aGUgQ29sbGVnZSBvZiBNYXNzYWdlIFRoZXJhcHkgaGFzIHVuZGVyZ29uZSB0aGlzIHllYXIuIEl0IGlzIGxpbmtlZCB0byBhICJjb25zdGVsbGF0aW9uIG9mIGlzc3VlcyByZWxhdGVkIHRvIHRoZSBwcmV2aW91cyB5ZWFycyBvZiBmaW5hbmNpYWwgbG9zc2VzIiBhbmQgYSBkZWNyZWFzZSBpbiB0aGUgdmFsdWUgb2YgdGhlIHNjaG9vbCdzIGZhY2lsaXR5LCBhY2NvcmRpbmcgdG8gdGhlIGxldHRlci4gRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24gc28gdGhhdCB0aGUgc2Nob29sIG1pZ2h0IGFnYWluIGFjY2VzcyBmZWRlcmFsIHNjaG9sYXJzaGlwIGZ1bmRpbmcuIEJ1dCBtdWNoIG9mIHRoYXQgc3VwcG9ydCB3YXMgbGF0ZXIgd2l0aGRyYXduLCBhZ2FpbiBwdXR0aW5nIHRoZSBjb2xsZWdlIGF0IG9kZHMgd2l0aCBzdGF0ZSBhbmQgZmVkZXJhbCBlZHVjYXRpb24gb2ZmaWNpYWxzIGFuZCBsZWFkaW5nIHRvIHRoaXMgd2VlaydzIHNodXRkb3duLCBhY2NvcmRpbmcgdG8gdGhlIGxldHRlciBzZW50IHRvIHN0dWRlbnRzLgoyMDE5IENlbGVicml0eSBEZWF0aHNDYXJzIExhbmQgUmVkIENhcnBldCBFdmVudCBBdCBEaXNuZXlsYW5kIFJlc29ydApJIGdhdmUgaGltIG15IGNhcmQgYW5kIGhlIHB1bGxlZCB1cCBteSB3ZWJzaXRlIG9uIGhpcyBwaG9uZSBpbW1lZGlhdGVseS4gV2UgdGFsa2VkIGZvciBzb21lIHRpbWUgYWJvdXQgY29tbWlzc2lvbnMgKGRpZG4gZ28gYW55d2hlcmUpLiAKRWxlY3Ryb25pY2llbiBhdXRvZGlkYWN0ZSwgSG93YXJkIFN0YXBsZXRvbiBhIGNvbmZlY3Rpb25uIHNvbiBtY2FuaXNtZSBzb25vcmUsIGRhbnMgc2EgY2hhbWJyZSwgYXBycyBzJ3RyZSBsYXNzIGR1IGNvbXBvcnRlbWVudCBkZXMgc2F1dmFnZW9ucyBkZXMgZW52aXJvbnMgcXVpIGx1aSBndGFpZW50IGwnZXhpc3RlbmNlIG5vbiBtb2lucyBxdWUgY2VsbGUgZGVzIGNvbW1lcmFudHMgdm9pc2lucy4gClllYWgsIE9nYXRhIHdhcyB0aGUgZmlyc3QgZHVkZSBTdWdpbW90byBmb3VnaHQsIGl0IHdvdWxkIGJlIGNvb2wgYXMgaGVsbCBpZiBoZSB3YXMgYWxzbyB0aGUgbGFzdCBndXksIHRvIG1ha2UgZXZlcnl0aGluZyBnbyBmdWxsIGNpcmNsZS4gSGUgYWxzbyBmZWVscyBsaWtlIHNvbWVvbmUgd2hvIGlzIG1vcmUgZ3JvdW5kZWQgYW5kIG9uIFN1Z2ltb3RvIGxldmVsLCB1bmxpa2UgSGlqaWthdGEgb3IgVHN1cnVtaSB3aG8gZ2l2ZXMgb2ZmIGJpZyBiYWQgdmliZXMuIFN1Z2ltb3RvIGFuZCBPZ2F0YSByZWxhdGlvbiB0byBlYWNob3RoZXIgaXMgcGVyc29uYWwuIApUaGV5IGhhZCBubyBpZGVhIGlmIHRoZWlyICJncmFiIGJhZyIgYXMgd29ydGggJDEuMDAgb3IgJDEsMDAwLjAwICAgYW5kIHRoaXMgZG9lc24gZGVzZXJ2ZSB5b3VyIGdlbmVyb3NpdHkgb2Ygc3Bpcml0LCBubyBtYXR0ZXIgaG93IHdlbGwgaW50ZW5kZWQuLiAKTGlrZSB0aGUgcmVzdCBvZiB0aGUgd29ybGQsIGlzIGF3YXNoIGluIGNvc21ldGljYWxseSBlbmhhbmNlZCBib2RpZXMsIGZhY2VzIHVucmVjb2duaXphYmxlIGJlY2F1c2UgdGhleSBubyBsb25nZXIgbW92ZSBhbmQgbm8gbG9uZ2VyIGxvb2sgbGlrZSB0aGUgd29tZW4gdGhleSBvbmNlIHdlcmUgb3IgY291bGQgaGF2ZSBiZWVuLiAKNS4gUEFJIEdPVy4gCiJJdCdzIGF3ZXNvbWUsIiBSZW5jayBzYWlkLCBwb2ludGluZyBvdXQgdGhhdCB3aGlsZSBoZSBoYXNuJ3QgaGFkIG11Y2ggdGltZSB0byBnZXQgaW4gcHJlc2Vhc29uIGJhc2ViYWxsIHJlcHMsIGhlIGV4cGVjdHMgdGhlIGJhc2tldGJhbGwgdGVhbSdzIHN1Y2Nlc3MgdG8gcGFybGF5IGludG8gdGhlIHVwY29taW5nIGJhc2ViYWxsIGNhbXBhaWduLiAiSXQgZ2l2ZXMgdXMgYSBsb3Qgb2YgY29uZmlkZW5jZSBiZWNhdXNlIHRoZSBiYXNlYmFsbCBndXlzIGNvbWUgdG8gb3VyIGJhc2tldGJhbGwgZ2FtZXMgYW5kIGl0IG1vdGl2YXRlcyB0aGVtIHRvIHNlZSB0aGUga2luZCBvZiBhdG1vc3BoZXJlIHdlIHBsYXkgaW4uIFdoZW4gSSBjb21lIGludG8gYmFzZWJhbGwgc2Vhc29uLCBJIGp1c3QgdHJ5IHRvIGJlIGEgbGVhZGVyIGFuZCBzaG93IGd1eXMgd2hhdCBpdCB0YWtlcyB0byBnZXQgdG8gdGhhdCBsZXZlbCBhbmQgY29tcGV0ZS4iClBJWDogRG9scGhpbnMgU2hvY2sgUGF0cmlvdHMgV2l0aCBNaXJhY2xlIEluIE1pYW1pTmV3IEVuZ2xhbmQgUGF0cmlvdHMgdiBNaWFtaSBEb2xwaGluc01JQU1JLCBGTCAgIERFQ0VNQkVSIDA5OiBUb20gQnJhZHkgMTIgb2YgdGhlIE5ldyBFbmdsYW5kIFBhdHJpb3RzIHJlYWN0cyBvbiB0aGUgc2lkZWxpbmVzIGluIHRoZSBzZWNvbmQgaGFsZiBhZ2FpbnN0IHRoZSBNaWFtaSBEb2xwaGlucyBhdCBIYXJkIFJvY2sgU3RhZGl1bSBvbiBEZWNlbWJlciA5LCAyMDE4IGluIE1pYW1pLCBGbG9yaWRhLiAoUGhvdG8gYnkgTWljaGFlbCBSZWF2ZXMvR2V0dHkgSW1hZ2VzKS4gCkFsdGhvdWdoIENOTiBhbmQgdGhlIEF0bGFudGEgQ29uc3RpdHV0aW9uIEpvdXJuYWwgY29ycmVjdGx5IHJlcG9ydGVkIHRoYXQgdGhlIHZpZGVvIHdhcyBhIG1pc3JlcHJlc2VudGF0aW9uIG9mIHRoZSBmdWxsIHNwZWVjaCwgRm94IE5ld3MgYW5kIHRoZSByaWdodCB3aW5nIEdPUCBub2lzZSBtYWNoaW5lIHN0YXJ0ZWQgdGhlIGRydW0gYmVhdCBhbmQgdGhlIERlbXMgZGlkIHdoYXQgdGhleSBhbHdheXMgZG8gIHRoZXkgY2F2ZWQuIHRvIFlvc2kgU2VyZ2FudCwgaXQgaXMgdGltZSBmb3IgT2JhbWEgYW5kIHRoZSBEZW1zIHRvICJncm93IGEgcGFpci4iIFNlcmdhbnQgd291bGQga25vdyB3aGF0IGl0IGxpa2UgdG8gYmUgdGhyb3duIHVuZGVyIHRoZSBidXMgYnkgdGhlIERlbXMgYW5kIHRoaXMgYWRtaW5pc3RyYXRpb24sIHNpbmNlIGhlIGhpbXNlbGYgd2FzIGFsc28gbWlzcmVwcmVzZW50ZWQgYnkgQnJlaXRiYXJ0IG9mIEJpZyBHb3Zlcm5tZW50IHdoZW4gQnJlaXRiYXJ0IG1pc3JlcHJlc2VudGVkIGhpcyB3b3JrIGFzIHRyeWluZyB0byB1c2UgdGhlIE5hdGlvbmFsIEVuZG93bWVudCBmb3IgdGhlIEFydHMgdG8gc3VwcG9ydCB0aGUgT2JhbWEgQWRtaW5pc3RyYXRpb25MZXQgcHJldGVuZCB0aGF0IHRoZSBEZW1zIGFyZSBhY3R1YWxseSBjYXBhYmxlIG9mIGxlYXJuaW5nIGZyb20gdGhlaXIgcGFzdCBtaXN0YWtlcyAobm8gZXZpZGVuY2UgeWV0KSBhbmQgc2F5IHRoZXkgZG8gbGVhcm4gdG8gImdyb3cgYSBwYWlyIiBvciBwZXJoYXBzIG1vcmUgYWNjdXJhdGVseSBhbmQgbGVzcyBzZXhpc3QgIGdldCBhIHNwaW5lICBhbmQgYmVnaW4gdG8gc3RhbmQgdXAgdG8gdGhlIGFic29sdXRlIGhhdGUgYW5kIHByb3BhZ2FuZGEgdGhhdCBpcyBCaWcgR292ZXJubWVudCwgRm94ICJOZXdzLCIgYW5kIHRoZSByZXN0IG9mIHRoZSBub2lzZSBtYWNoaW5lLiAKQW5kIHRoaXMgaXMgd2h5IGVkdWNhdGlvbiBuZWVkcyBiZXR0ZXIgZnVuZGluZy4KTGV0IHNheSAoSFVTTkcpIHlvdSBwbGF5aW5nIGFnYWluc3QgYSBwbGF5ZXIgd2hvIHlvdSBub3RpY2UgZm9sZHMgYWxsIG9mIHRoZSB0aW1lIGluIHRoZSBiaWcgYmxpbmQgdG8gYSBzaG92ZSBmcm9tIHRoZSBidXR0b24uIE1heGltdW0gK0VWIHdvdWxkIGJlIHRvIHNob3ZlIGFsbCBvZiB0aGUgdGltZSB3aXRoIGFsbCBvZiB5b3VyIGhvbGRpbmdzLiBCdXQgdGhpcyBpcyBub3QgYSBHVE8gc3RyYXRlZ3ksIGFzIGl0IGNhbiBiZSBleHBsb2l0ZWQuIApUaGlzIGxhc3QgZ29hbCB3YXMgNjUyIGZvciBPdmksIDQ1IG9uIHRoZSBzZWFzb24sIHdoaWNoIGhhcyBiZWVuIDY1IGdhbWVzIHNvIGZhci4gVGhhdCBnaXZlcyBoaW0gYSAuNjkgZ29hbHMvZ2FtZSBwYWNlIChuaWNlKSBvbiB0aGUgc2Vhc29uLiBXaXRoIDE3IGdhbWVzIGxlZnQgb24gdGhlIGRvY2tldCwgdGhhdCBzbGF0ZXMgaGltIGZvciBhYm91dCAxMSBtb3JlIGdvYWxzIHRoaXMgc2Vhc29uLiBMZXQncyBiZSBjb25zZXJ2YXRpdmUgICBoZSdzIHNsb3dlZCBkb3duIGEgbGl0dGxlIHRoZSBwYXN0IG1vbnRoIG9yIHNvLCBhZnRlciBhbGwgICBhbmQgc2F5IGhlIGdldHMgOCBtb3JlLCAxIGV2ZXJ5IG90aGVyIGdhbWUsIGZvciBhIHJlc3BlY3RhYmxlIDUzIGdvYWxzIG9uIHRoZSBzZWFzb24uIFRoaXMgcHV0cyBoaW0gYXQgNjYwIGV2ZW4gYWxsIHRpbWUsIDIzNSBzaG9ydCBvZiA4OTUgYW5kIHNvbGUgcG9zc2Vzc2lvbiBvZiB0aGUgcmVjb3JkLgpCdXQgTXVpbGVuYnVyZyBjaGFyYWN0ZXJpemVkIHRoaXMgYXMgYW4gaW52ZXN0bWVudCBmb3IgdGhlIGZ1dHVyZS4KSXQgYmVlbiBhIGRpZmZpY3VsdCBwcmVnbmFuY3kgc28gZmFyIGJlY2F1c2UgSSBhbSBubyB3aGVyZSBuZWFyIGRvbmUgZ3JpZXZpbmcuIEkgc2VjcmV0bHkgd2lzaCBpdCB3YXMgc3RpbGwgaGVyIHdlIHdlcmUgZXhwZWN0aW5nLi4gClRoYXQgYmVpbmcgc2FpZCwgaXQgd291bGQgdGFrZSBsZXNzIHRpbWUsIG1vbmV5IGFuZCBlZmZvcnQgdG8gc3RyZW5ndGhlbiB0aGUganVkaWNpYXJ5IHRoYW4gaXQgd291bGQgdGFrZSB0byBjb3JyYWwgdGhlIG1pbGl0YXJ5LCByZWludmlnb3JhdGUgY2l2aWwgc29jaWV0eSBvciByZWhhYmlsaXRhdGUgdGhlIGJ1cmVhdWNyYWN5LiAKQSBwb3NzaWJpbGl0eSB0byB3aW4gYmFjayB0aGUgY2FzaW5vIGJvbnVzIGluIHRoaXMgY2FzZSBpcyBhIGJpdCBsZXNzIHRoYW4gNTAlIChmb3IgdGhhdCB5b3Ugb25seSBuZWVkIHRvIHN0YWtlIHRoZSBlbnRpcmUgYW1vdW50IG9uIHRoZSBjaGFuY2VzIGluIHJvdWxldHRlKS4gSW4gb3JkZXIgdG8gbWF4aW1pemUgcHJvZml0cyBmcm9tICJzdGlja3kiIGNhc2lubyBib251c2VzIGEgY2FzaW5vIHBsYXllciBuZWVkcyB0byB1c2UgdGhlIHN0cmF0ZWd5ICJwbGF5IGFuIGFsbCBvciBub3RoaW5nIGdhbWUiLiAKS2V0dGxlYmVsbHMgZm9yIEluanVyeSBSZWhhYgpJIGFtIGEgYmlnIGZhbiBvZiB0aGUgTW9zaW4gUFUgc2NvcGUgYW5kIHdvdWxkIGxpa2UgdGhlIFNLUyB0byBoYXZlIGl0IGFzIHdlbGwuZGllbW1lNDQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNSBob3VycyBhZ295ZWEsIEkgY291bGQgdW5kZXJzdGFuZCBpZiB0aGV5IHdhbnRlZCB0byBoYXZlIGFuIGV4dGVuZGVkIG1hZyBvbiB0aGUgRzM2LCB0aGV5IGNvdWxkIGhhdmUgd2VudCB3aXRoIGFuIGV4dGVuZGVkIE00IG1hZyBpbiBhIGFkYXB0b3IgbWFnd2VsbC5CdXQgdGhlbiBvZiBjb3Vyc2UgdGhhdCB3b3VsZCBtZWFuIGFsdGVyaW5nIGJvdGggbWFnYXppbmUgYW5kIHRoZSBndW4gbW9kZWwsIHBsdXMgdGhleSBwcm9iYWJseSBoYXZlIHRvIG5vdyBtYWtlIHRob3NlIG1hZ3MgInNjYXZlbmdhYmxlIiBiZXR3ZWVuIEczNnMgYW5kIHRoZSBNNC9NMTZzVGhlIGV4dGVuZGVkIG1hZyBvbiB0aGUgTVA1QTIgaXMsIGFzIGZhciBJIGtub3csIGluYWNjdXJhdGUgYXMgd2VsbC4gCkFsbW9zdCBhbGwgdHlwZXMgb2YgcG9rZXIgaW4gdGhlIGNhc2lub3MgYXJlIGFsc28gYXZhaWxhYmxlIGluIHRoZSBpbnRlcm5ldCwgaW5jbHVkaW5nIHRoZSBPbWFoYSwgVGV4YXMgaG9sZCdlbSwgYW5kIHRoZSBzZXZlbiBjYXJkIHN0dWQuIE9ubGluZSBwb2tlciBpcyBhbHNvIGludm9sdmVkIGluIGJldHRpbmcgcHJvY2VzcyB3aGVyZWluIHBsYXllcnMgd2lsbCBoYXZlIHRoZSBjaGFuY2UgdG8gd2luIGEgbG90IG9mIG1vbmV5LiBZb3UgY2FuIGFsc28gam9pbiB0aGUgcG9rZXIgdG91cm5hbWVudCBvbmxpbmUgdG8gZWFybiBhIGJpZ2dlciBhbW91bnQgb2YgcHJpemVzLi4gCkkgd2FzIGxpa2UsIHd0ZiBhcmUgdGhlc2U/PyBJIHdhc24ndCBzdXJlIHdoYXQgdG8gZG8gd2l0aCB0aGVtLCB0aG91Z2h0IG1heWJlIEknZCBqdXN0IHNpdCBvbiB0aGVtIGZvciBhIGZldyBkYXlzIGJlZm9yZSBJIHdlbnQgYWJvdXQgY29udGFjdGluZyB0aGUgc2VsbGVyIGFuZCBwb3NzaWJseSBzaGlwcGluZyB0aGVtIGJhY2suLiAKUHJlcGFyaW5nIGZvciB5b3VyIFRoYWkgTWFzc2FnZQpXaXRoIFZhbm5leSBlbXBsb3lpbmcgYSA0IDMgMyBmb3JtYXRpb24gdGhpcyBzZWFzb24sIHdpZHRoIHdpbGwgcGxheSBhIGxhcmdlciBwYXJ0IGluIHRoZSBUb3JvbnRvIGdhbWUuCkFuZCB3aGlsZSBJIGNhbGwgaGltIG91dCBmb3Igbm90IGhhdmluZyBlbWVyZ2VuY3kgc3VwcGxpZXMgZm9yIHNlbGYgcmVjb3Zlcnkgb3Igc3Vydml2YWwsIHZlcnkgZmV3IG9mIHVzIHRydWx5IGtub3cgaG93IHdlJ2QgaGFuZGxlIHN1Y2ggYW4gZW1lcmdlbmN5LiBCZXlvbmQgYSBzaG92ZWwsIHNlbGYgcmVjb3ZlcnkgZ2VhciBjYW4gYmUgZXhwZW5zaXZlIGFuZCByZXF1aXJlIHRyYWluaW5nLiAKSXQgY3V0IHRocm91Z2ggdGhlIGNhbG0sIHdhcm0sIGVhc3kgZ29lcyBpdCBzdW1tZXIgYWlyLiAKVGhlIGJlc3QgbGVzc29uIEkgZXZlciBsZWFybmVkIHdpdGggdGhpcyBnYW1lIGlzIHRvIHVzZSB0aGUgbXV0ZSBidXR0b24gY29uc2lkZXJhYmx5IG1vcmUgb2Z0ZW4gdGhhbiBJIHRoaW5rIEkgbmVlZCB0by4gCkFscyBEaWVuc3RlYW5iaWV0ZXIgc2luZCB3aXIgZ2VtICA3IEFicy4xIFRNRyBmciBlaWdlbmUgSW5oYWx0ZSBhdWYgZGllc2VuIFNlaXRlbiBuYWNoIGRlbiBhbGxnZW1laW5lbiBHZXNldHplbiB2ZXJhbnR3b3J0bGljaC4gTmFjaCAgOCBiaXMgMTAgVE1HIHNpbmQgd2lyIGFscyBEaWVuc3RlYW5iaWV0ZXIgamVkb2NoIG5pY2h0IHZlcnBmbGljaHRldCwgYmVybWl0dGVsdGUgb2RlciBnZXNwZWljaGVydGUgZnJlbWRlIEluZm9ybWF0aW9uZW4genUgYmVyd2FjaGVuIG9kZXIgbmFjaCBVbXN0bmRlbiB6dSBmb3JzY2hlbiwgZGllIGF1ZiBlaW5lIHJlY2h0c3dpZHJpZ2UgVHRpZ2tlaXQgaGlud2Vpc2VuLiAKT25lIHJlY2VudCBzdHVkeSwgcHVibGlzaGVkIGluIFRoZSBOZXcgRW5nbGFuZCBKb3VybmFsIG9mIE1lZGljaW5lLCBmb3VuZCB0aGF0IGR1cmluZyBwdWJlcnR5ICAgd2hlbiBob3Jtb25hbCBjaGFuZ2VzIHNwdXIgYm9uZSBkZXZlbG9wbWVudHMgICB0aGUgYm9uZSBkZW5zaXR5IG9mIGJsYWNrIGdpcmxzIGluY3JlYXNlcyB0aHJlZSB0aW1lcyBtb3JlIHRoYW4gdGhhdCBvZiB3aGl0ZSBnaXJscy4gClRoZXJlIHdpbGwgYmUgZW5naW5lZXJlZCBoYXJkd29vZCBmbG9vcmluZyB0aHJvdWdob3V0IHdpdGggYSBjZWlsaW5nIGhlaWdodCBvZiBlaWdodCBmb290LCBzaXggaW5jaGVzIGluIHRoZSBtYWluIGxpdmluZyBhcmVhLiAKQW5vdGhlciBwb2tlciBydW4gZm9yIFNhdHVyZGF5IHJhaXNlZCBtb25leSBmb3IgSHVudGVyIERlYW4gU2NvdHQsIHRoZSBsb2NhbCBmb3VyIHllYXIgb2xkIGJhdHRsaW5nIGJyYWluIGNhbmNlci4KU29tZSBtZXNzYWdlcyBhbHNvIGltcGx5IHRoYXQgS2lyayBiZWxpZXZlcyB0aGF0IHNoZSB3YXMgdXNlZCB0byBoZWxwIGNsb3NlIHRoZSAkNDUwIG1pbGxpb24gY28gZmluYW5jaW5nIGRlYWwgZm9yIFBhY2tlciBhbmQgUmF0bmVyJ3MgUmF0UGFjIEVudGVydGFpbm1lbnQuClRoZXkgZGVtYW5kZWQsIHZpYSBlbWFpbCwgdGhhdCBoZSBjYWxsIG9mZiBQSXMgdGhhdCBoZSBoYWQgaGlyZWQgdG8gaW52ZXN0aWdhdGUgdGhlIEVucXVpcmVyICh0byBmaW5kIG91dCBob3cgdGhlIEVucXVpcmVyIGhhZCBnb3R0ZW4gaGlzIHRleHQgbWVzc2FnZXMpIGFuZCBzYWlkIHRoYXQgdGhleSBoYWQgYSBudW1iZXIgb2YgcGhvdG9ncmFwaHMgaW4gdGhlaXIgcG9zc2Vzc2lvbiBmcm9tIEJlem9zIHRleHQgbWVzc2FnZXMgd2l0aCBoaXMgbWlzdHJlc3MsIGluY2x1ZGluZyBkaWNrIHBpY3MsIGFuZCBpbnNpbnVhdGVkIHRoYXQgdGhleSB3b3VsZCBvbmx5IHByb21pc2Ugbm90IHRvIHB1Ymxpc2ggdGhvc2UgcGhvdG9zIGlmIGhlIGNvbXBsaWVkIHdpdGggdGhlaXIgZGVtYW5kcy4gQmV6b3MgcG9zdGVkIHRoZWlyIGVtYWlscyBvbiBUd2l0dGVyLi4gCkEgZmV3IHllYXJzIGFnbyBJIGZpbmlzaGVkIFRoZSBDb25maWRlbmNlIEdhbWUsIGFib3V0IGNvbiBhcnRpc3RzLiAKSSdtIHNpbWlsYXIgdG8geW91ciBkdWRlIGluIHRoZSBmYWN0IHRoYXQgSSBhbHNvIGFwcHJvYWNoIHRoaW5ncyBmcm9tIGEgcGVyc29uYWwgaW1wYWN0IHN0YW5kcG9pbnQgYXMgb3Bwb3NlZCB0byBhIGJsYWNrIC8gd2hpdGUgc3RhbmRwb2ludC4gSSdtIHNvbWVvbmUgd2hvIGRvZXNuJ3QgY2FyZSBpZiBzb21ldGhpbmcgd2FzIHRlY2huaWNhbGx5IHJpZ2h0ICAgaWYgc29tZW9uZSB3YXMgaHVydCBhbmQgeW91J3ZlIGNob3NlbiB0byBsb29rIHRoZSBvdGhlciB3YXksIEknbSBnb2luZyB0byBiZSBkaXNhcHBvaW50ZWQgYnkgeW91ciBjaG9pY2UuCkNvbGxlZ2UgYW5kIFVuaXZlcnNpdHkKVGhlIFZhdGljYW4gYW5ub3VuY2VkIHRoYXQgaGlzIGZ1bmVyYWwgd2FzIGdvaW5nIHRvIHRha2UgcGxhY2Ugb24gRnJpZGF5LCA4IEFwcmlsLCAyMDA1LiAKV2VsbCwgSSBkaWQgaGF2ZSB0byByZWRvIHRoZSBjb2duaXRpdmUgYmVjYXVzZSBpdCB3YXMgcmVxdWVzdGVkIHdpdGggdGVzdGluZy4gClNvZnR3YXJlIHRyYWluaW5nIG1pZ2h0IGhlbHAgeW91IGluIHRoZSBmb3JtZXIsIGJ1dCBub3Qgc28gbXVjaCB0aGUgbGF0dGVyIHdoZXJlIG9uZSBwbGF5cyBhZ2FpbnN0IHRoZSBwZXJzb24gYXMgbXVjaCBhcyBhZ2FpbnN0IGhpcyBjYXJkcy4KVGhpcyBpcyB0aGUgdGhpcmQgbWVkaWNhbCBsZWF2ZSBJJ3ZlIGhhZCBpbiA1IHllYXJzLiAKVGhlIHBhdGllbnRzIGluIHRoaXMgc3R1ZHkgd2VyZSBjaHJvbmljLCBoYXZpbmcgcGFpbiBmb3IgYXQgbGVhc3QgNiBtb250aHMuClRoaXMgaXMgdGhlaW5mYW1vdXMgIlRoZSBGYW1lIE1vbnMgZXIiIGFsYnVtLCBhbmQgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcy4gCldoYXQgdGhlIGJlc3QgcGxheT8gSXQgZG9lc24gZXZlbiBtYXR0ZXIgd2hhdCB5b3VyIGhhbmQgaXMuIApBIGNvdXBsZSBvZiB5ZWFycyBiYWNrIGEgY291cGxlIG9mIGZyaWVuZHMgYW5kIEkgaGVhZGVkIGRvd24gZm9yIGEgd2Vla2VuZCBpbiBnb29kIG9sZCBMYXMgVmVnYXMuIApJZiB5b3Ugd2luLCB0aGF0cyBncmVhdC4gCkFyZ3VtZW50cyBhcmUgdGhlcmUgZm9yIGJlbGlldmluZyBpbiBHb2Qgb3IgZm9yIGZvbGxvd2luZyBhIHNwZWNpZmljIHJlbGlnaW91cyB0cmFkaXRpb24/IE9saXZlaXJhIGFza2VkLiByZWFzb25zIGFuZCBhcmd1bWVudHMgYXJlIHRoZXJlIGluIHN1cHBvcnQgb2YgYmVsaWV2aW5nIG9yIG5vdCBiZWxpZXZpbmcsIGluIHN1cHBvcnQgb2YgYmVsb25naW5nIG9yIG5vdCBiZWxvbmdpbmcgdG8gYSByZWxpZ2lvdXMgY29tbXVuaXR5PyBIb3cgY2FuIGluZGl2aWR1YWxzIGp1c3RpZnkgZWl0aGVyIGNob2ljZT8KSXQgY3JlYW15IGVub3VnaCB0aGF0IGlmIHlvdSBjbG9zZSB5b3VyIGV5ZXMgYW5kIGJlbGlldmUgaGFyZCBlbm91Z2ggaXQgbGlrZSBhIG1pbGtzaGFrZS4gCkZvciBvbmUgdGhpbmcsIGl0IHdvdWxkIHdpbmQgdXAgd29ya2luZyBhZ2FpbnN0IHRoZW0sIGdpdmVuIHRoYXQgdGhleSB3b3VsZG4ndCBiZSBhYmxlIHRvIGNoYXJnZSB0aGUgcHJlbWl1bXMgdGhhdCB0aGV5IGRvIGZvciB0aGUgYWZvcmVtZW50aW9uZWQgYWR2ZXJ0aXNlbWVudHMuLiAKSXQgaXMgYSBsaXR0bGUgaW50aW1pZGF0aW5nIGF0IGZpcnN0LCBidXQgbm93IEkgbGl0ZXJhbGx5IGRvbiBjYXJlIGlmIG90aGVyIHBlb3BsZSBhcmUgaW4gdGhlcmUuIApUaGF0IGNhbiBjb21wZXRlIHdpdGggSG9sbHl3b29kIGxldmVsIG9mIHN0b3J5IHRlbGxpbmcuVGhlcmUgYXJlIHNvbWUgZ29vZCBvbmVzIHRob3VnaCB3aGVyZSB0aGUgc2lsbGluZXNzWW91IGhhdmVuIGNsZWFybHkgbWV0IGFuIEluZGlhbiB0byBhY3R1YWxseSBzdWdnZXN0IHNvbWUgZ29vZCBtb3ZpZXMgZm9yIHlvdXIgdGFzdGUuVGhlcmUgYXJlIHNvbWUgZXh0cmVtZWx5IGhhdW50aW5nIG1vdmllcywgYW5kIG1lYW5pbmdmdWwgb25lcy5KdXJpakZlZG9yb3YgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGhvdXJzIGFnb1RoaXMgaXMgcmVhbGx5IGdyZWF0IHdvcmsuIEkgbWFkZSBteSBvd24gbWFwIHRvbyBzb21lIHRpbWUgYWdvLCBidXQgSSB1c2VkIHRoZSBXaWtpcGVkaWEgbGlzdCBhbmQgYXMgSSBsb29rIG9uIHlvdXIgbWFwIEkgY2FuIHNlZSB0aGF0IHRoYXQgV2lraXBlZGlhIGxpc3QgaXMgaW5jb21wbGV0ZS4gSSB0aGluayB5b3UgbWF5IGhhdmUgc29tZSBtaXN0YWtlcyB0aG91Z2gsIGJ1dCBJIG5vdCBzdXJlLlRoZSBOaWdlciBmbGFnIGhhcyBhIGNpcmNsZSBvbiBpdCB0aGF0IG1heSBiZSBhIHN1bi4gCk9uIG9uZSBiaXJ0aGRheSB3ZSB3ZXJlIGFsbCBoYW5naW5nIG91dCBhbmQga2l0dHkgY2FtZSBpbiB3aXRoIGEgZnVsbCBzaXplIGRlYWQgYmlyZCBhbmQgcGxvcHBlZCBpdCBpbiB0aGUgbWlkZGxlIG9mIHRoZSByb29tLiBNeSBmcmllbmQgcXVpY2tseSB0b29rIHRoZSBiaXJkIGFuZCBkaXNwb3NlZCBvZiBpdCBpbiB0aGUgdHJhc2guIE5vdCAxMCBtaW51dGVzIGxhdGVyIHNoZSBjYW1lIHRyb3R0aW5nIGluIHdpdGggYSBiaXJkLiBJIHdhcyBhYm91dCB0byB5ZWxsIGF0IGhlciBmb3IgZ29pbmcgaW4gdGhlIHRyYXNoLCBidXQgdGhpcyB3YXMgYSBuZXcgYmlyZC4gTXkgbmlja25hbWUgZm9yIHRoaXMgY2F0IHdhcyBNYXN0YWggS2lsbGFoLCBzaW1pbGFyIHRvIHlvdXJzLgpHcmFoYW0gSGFuY29jayBpcyBmdW4gZm9yIHNwZWN1bGF0aW9uIGFib3V0IHRoZSBwb3NzaWJsZSBjaXZpbGl6YXRpb24gcHJlIGZsb29kIGFuZCB3aHkgaGUgdGhpbmtzIHNvbWUgbW9udW1lbnRzIGFyZSB3YXkgb2xkZXIgdGhlbiB3ZSBjdXJyZW50bHkgZ3Vlc3MuIEFsbCBvZiB0aGVtIGhhdmUgYmVlbiBpbnRlcnZpZXdlZCBvbiBKUkUgcG9kY2FzdCBhdCBsZWFzdCBvbmNlIGFuZCBhcmUgZXhjZWxsZW50IHdpdGggYW55IGFkdWx0IHN1YnN0YW5jZSBvZiBjaG9pY2UgaW4gcmVzcG9uc2libGUgYW1vdW50cy4uIApQb3B1bGFyIENoaW5lc2UgJ0hlYWxpbmcgUG90aW9uJyBJcyBNb3N0bHkgQ29ja3JvYWNoZXMKVGhlIHRyaWNraWVzdCBpcyB0aGUgZm91cnRoIHR5cGUgcG9rZXIgcGxheWVycywgd2hvIGxvdmUgdG8gcGxheSB0aGUgcHJpY2luZyBnYW1lIGFuZCBoYXZlIGxlYXJuZWQgdGhhdCBpZiB0aGV5IGZvY3VzIG9uIHByaWNlLCB0aGV5IGNhbiBnZXQgdmVuZG9ycyB0byBsZWF2ZSBtb25leSBvbiB0aGUgdGFibGUgYnV0IGNvbnRpbnVlIHRvIHByb3ZpZGUgaGlnaCB2YWx1ZSBmZWF0dXJlcyBhbmQgc2VydmljZXMuIApPbiBsaW5lIHBva2VyIG9mZmVycyAiIGFuIGV4Y2l0aW5nICJwb2tlciBsaWtlIiBwbGF5aW5nIGV4cGVyaWVuY2UuIEl0IGlzIG5vdCByZWFsIHBva2VyLiBJdCBpcyBhIGNhcm5pdmFsIHJpZGUgdGhhdCBzZWVtcyBsaWtlIHBva2VyIGJ1dCBpcyBhY3R1YWxseSBmaXhlZCBzbyB0aGF0IGFmdGVyIGEgd2lsZCByaWRlIG9mIHNldmVyYWwgd2Vla3Mgb3IgbW9udGhzLCBhIHNlcnZlciBjb250cm9sZWQgImJvdCIgcGxheWVyIHdpbGwgc2lwaG9uIG9mZiBhbGwgb2YgeW91ciBtb25leS4gClJlY2VudGx5LCB0aGUgY2FzaW5vcyBzdGFydGVkIGlzc3VpbmcgY29tbWVtb3JhdGl2ZSBjaGlwcyBmb3IgY2VydGFpbiBldmVudHMuIApXaGlsZSBub3QgZGVzaWduZWQgdG8gYmUgYSBkaXJlY3Qgcml2YWwgdG8gdGhlIEEzODAsIHRoZSA3ODcgbmV2ZXJ0aGVsZXNzIGNvbXBldGVzIHdpdGggdGhlIEEzNDAgYW5kIEEzMzAgbWVtYmVycyBvZiB0aGUgQWlyYnVzIGZhbWlseS4gClRoaXMgaXMgd2h5IEkgaGF2ZSBhIGhhcmQgdGltZSByZWFkaW5nIEFsZXhhbmRlciBIYW1pbHRvbidzIHdyaXRpbmcgY29tcGFyZWQgdG8gdGhhdCBvZiBoaXMgY29udGVtcG9yYXJpZXMuIAoiSG93IHRhbmdpYmxlIGl0IGlzIGFuZCBob3cgbXVjaCB5b3UgY2FuIG1lYXN1cmUgaXQgSSdtIG5vdCB0b28gc3VyZSwgYnV0IGl0IHdpbGwgYXNzaXN0IGluIHRoZSByZWNvdmVyeSBhbmQgdGhlIHByZXBhcmF0aW9uIGFuZCB0aGV5J3JlIHRoZSBvbmUgcGVyY2VudGVycyB0aGF0IHNlcGFyYXRlIHRlYW1zIGluIHRoaXMgZGF5IGFuZCBhZ2UuIi4gCkkgc3RpbGwgdGhpbmsgV0IgaXMga2luZCBvZiB3YXN0aW5nIHRoZSBjb25jZXB0IG9mIHRoZSBTdWljaWRlIFNxdWFkLiAKSXQgZnJlc2ggYW5kIGNyaXNwIGFuZCBwZXJmZWN0bHkgc2Vhc29uZWQsIHdpdGggcmljZSB2aW5lZ2FyIGFuZCBmaXNoIHNhdWNlIGFuZCBsaW1lLCBhbmQganVzdCB0aGUga2luZCBvZiB0aGluZyB5b3UgZG9uIHdhbnQgdG8gc3RvcCBjcnVuY2hpbmcgeW91ciB3YXkgdGhyb3VnaC4gWW91IGhhdmUgdG8gcmVzdHJhaW4geW91cnNlbGYgZnJvbSBzcG9vbmluZyB1cCB0aGUganVpY2VzIGxlZnQgaW4gdGhlIGVtcHR5IGJvd2wuIEkgYWRkZWQgY2hvcHBlZCBzYWx0ZWQgcGVhbnV0cywgYmVjYXVzZSBJIGNvcnJlY3RseSBndWVzc2VkIHRoYXQgSHVnbyBtaWdodCBiZSBzbGlnaHRseSBtb3JlIGluY2xpbmVkIHRvIGVhdCBpdCBpZiB0aGVyZSB3ZXJlIHBlYW51dHMgdG8gZmlzaCBvdXQsIGFuZCBJIHVyZ2UgeW91IHRvIGRvIHRoZSBzYW1lLiAKS2VubmVkeU1hcmlseW4gTW9ucm9lIGFuZCBKb2huIEYuVGhlIHNhbWUgY2FuJ3QgYmUgc2FpZCBmb3IgdGhlIGRhbGxpYW5jZXMgb2YgUHJlc2lkZW50IEpvaG4gS2VubmVkeS5GaXJzdCBsYWR5IEphY2tpZSBLZW5uZWR5IHNwZW50IGxvbmcgZ2V0YXdheXMgYXQgdGhlIGNvdXBsZSdzIFZpcmdpbmlhIGZhcm0sIGFuZCB3aGVuIHRoZSB3aWZlIHdhcyBhd2F5LCB0aGUgcHJlc2lkZW50IHBsYXllZCwgc3dpbW1pbmcgaW4gdGhlIG51ZGUgaW4gdGhlIFdoaXRlIEhvdXNlIHBvb2wgIndpdGggaGlzIGZlbWFsZSBwYXJhbW91cnMsIHNvbWUgb2Ygd2hvbSB3b3JrZWQgYXMgc2VjcmV0YXJpZXMgaW4gdGhlIFdoaXRlIEhvdXNlLiJPbmUgc3RhZmZlciB3aG8gY2FtZSBieSB0byB3b3JrIG9uIHRoZSBwb29sIGdvdCBhbiB1bmV4cGVjdGVkIGV5ZWZ1bC4iV2hlbiBoZSBvcGVuZWQgdGhlIHBvb2wgZG9vciwgaGUgd2FzIHNob2NrZWQgdG8gc2VlIEtlbm5lZHkgYWR2aXNlciBhbmQgY2xvc2UgZnJpZW5kIERhdmUgUG93ZXJzIHNpdHRpbmcgYnkgdGhlIHBvb2wgICBuYWtlZCAgIHdpdGggdHdvIG9mIEtlbm5lZHkncyBzZWNyZXRhcmllcy4iIFRoZSBzdGFmZmVyIHJhbiBvdXQsIGFuZCB0aGUgaW5jaWRlbnQgd2FzIG5ldmVyIG1lbnRpb25lZC5JdCB3YXMgd2VsbCBrbm93biBhbW9uZyBzdGFmZmVycyB0aGF0IHdoZW5ldmVyIEphY2tpZSB3YXMgYXdheSwgdGhleSB3ZXJlIHRvIGF2b2lkIHRoZSBzZWNvbmQgZmxvb3Igb2YgdGhlIFdoaXRlIEhvdXNlLiBTb21ldGltZXMsIGhvd2V2ZXIsIGl0IHdhcyB1bmF2b2lkYWJsZSwgYXMgd2l0aCBvbmUgc3RhZmZlciB3aG8sIEJyb3dlciB3cml0ZXMsICJzYXcgYSBuYWtlZCB3b21hbiB3YWxraW5nIG91dCBvZiB0aGUga2l0Y2hlbiB3aGVuIGhlIHdlbnQgdXBzdGFpcnMgdG8gc2VlIGlmIHRoZSBnYXMgd2FzIHR1cm5lZCBvZmYuIk5vdCBhbGwgb2YgdGhlIHN0YWZmJ3MgS2VubmVkeSBtZW1vcmllcyBhcmUgc29yZGlkLCB0aG91Z2gsIGFzIHN0YWZmZXJzIGR1cmluZyBKRksncyBhZG1pbmlzdHJhdGlvbiB3ZXJlIHdpdG5lc3MgdG8gc29tZSBvZiB0aGUgc2FkZGVzdCBwcmVzaWRlbnRpYWwgZXZlbnRzIG9mIHRoZSBsYXN0IGhhbGYgY2VudHVyeS4uIApBdm9pZCBsaWZ0aW5nIGhlYXZ5IG9iamVjdHMuIElmIHlvdSBhcmUgZGlhZ25vc2VkIHdpdGggYSBoaWF0YWwgaGVybmlhLCBzdG9wIGxpZnRpbmcgaGVhdnkgb2JqZWN0cyBhbmQgYXNrIG90aGVyIHBlb3BsZSBvciBtYWtlIHVzZSBvZiBkZXZpY2VzIHRvIGhlbHAgeW91LgpUaGVyZSBpcyBhbiBldmVudCBhdCBvdXIgaG91c2UgZXZlcnkgb3RoZXIgd2VlaywgYW5kIEkgd2lsbCBwbGF5IGF0IG9uZSwgYW5kIEphcXVpZSB3aWxsIHBsYXkgYXQgdGhlIG90aGVyLiAKSWYgeW91IG5ldyB0byBMQU5EZXNrLCBlbmpveSBjb2RpbmcsIGFuZCB3YW50IHRvIHN1cGVyY2hhcmdlIHlvdXIgTEFORGVzayB1c2FnZSwgeW91IHNob3VsZCBsb29rIGludG8gdGhlaXIgTUJTREsuIFlvdSBjYW4gZG8gYSBsb3Qgb2Ygc3R1ZmYgdGhyb3VnaCB0aGVyZSwgdXNpbmcgYW55dGhpbmcgdGhhdCBsZXRzIHlvdSBjb25zdW1lIHdlYiBzZXJ2aWNlcy4gSSB1c2VkIGl0IHZpYSBWQkEgaW4gRXhjZWwsIFBvd2VyU2hlbGwsIGFuZCBDIHRvIGdyZWF0IGVmZmVjdC4KTXkgYmFzZSB3YXMgaGlnaGVyIGF0IENDIGJ1dCBvdmVyYWxsIGNvbXBlbnNhdGlvbiB3YXMgbXVjaCBsb3dlciBSU1VzLiBDQyB3YXMgYSBuaWNlIGNvbXBhbnksIG9mdGVuIHJhdGVkIGEgcmVhbGx5IGdyZWF0IG9uZSB0byB3b3JrIGZvciBpbiBteSB0b3duLiAKS3VwcGVyLmEgbG90IG1vcmUgdGhhdCBuZWVkcyB0byBiZSBkb25lIGZvciBwZW9wbGUgd2l0aCBnbHV0ZW4gc2Vuc2l0aXZpdHksIHNoZSBzYXlzLiBBdCBsZWFzdCB3ZSBub3cgcmVjb2duaXplIHRoYXQgaXQgcmVhbCBhbmQgdGhhdCB0aGVzZSBwZW9wbGUgYXJlbiBjcmF6eS4gClJ1c3NpYSwgaG93ZXZlciwgaW4gMjAwNiBwcm9oaWJpdGVkIGFueSBraW5kIG9mIHJlbW90ZSBnYW1ibGluZy4uIApJJ3ZlIGdvdCBhIHBlcnNvbmFsIHRyYWluZXIsIGEgcGVyc29uYWwgc2hvcHBlciwgYSBwZXJzb25hbCBhc3Npc3RhbnQgYW5kIGEgcGVyc29uYWwgYWdlbmRhLiBZb3UgY2FuJ3Qgc2h1dCBtZSB1cC4gTXkgb3V0cHV0IGlzIGRvd24sIGJ1dCBteSBpbmNvbWUgaXMgdXAuIEkgdG9vayBhIHNob3J0IHBvc2l0aW9uIG9uIHRoZSBsb25nIGJvbmQgYW5kIG15IHJldmVudWUgc3RyZWFtIGhhcyBpdHMgb3duIGNhc2ggZmxvdy4gSSByZWFkIGp1bmsgbWFpbCwgSSBlYXQganVuayBmb29kLCBJIGJ1eSBqdW5rIGJvbmRzIGFuZCBJIHdhdGNoIHRyYXNoIHNwb3J0cyEgSSdtIGdlbmRlciBzcGVjaWZpYywgY2FwaXRhbCBpbnRlbnNpdmUsIHVzZXIgZnJpZW5kbHkgYW5kIGxhY3Rvc2UgaW50b2xlcmFudC4KV2l0aCBoaXMgZXZpbCBpbnRlbnRpb25zIGhlIHdhbnRlZCB0byBkZXN0cm95IElzbGFtLiAKQ2hhbmNlcyBhcmUsIGlmIHlvdSBoYXZlIGNoaWxkcmVuLCBvciBlbmpveSBhIG51bWJlciBvZiBkaWZmZXJlbnQgZ2FtZXMsIHlvdSBtYXkgaGF2ZSBkZWNpZGVkIHRvIGRlZGljYXRlIG9uZSByb29tIG9mIHlvdXIgaG9tZSB0byBnYW1pbmcuIEFzIG1heSBiZSBleHBlY3RlZCwgdGhpcyB0eXBlIG9mIHJvb20gd2lsbCBpbmV2aXRhYmx5IGluY2x1ZGUgYSB0YWJsZSBhbmQgY2hhaXJzIHRoYXQgY2FuIGJlIHVzZWQgZHVyaW5nIGNhcmQgZ2FtZXMuIApJZiBJIHdlcmUgaW4gdGhlaXIgcG9zaXRpb24gSSBjYW4gc2F5IHRoYXQgSSB3b3VsZG4gZ3Jhdml0YXRlIHRvd2FyZHMgdGhlIHNhbWUgY29uY2x1c2lvbnMgdGhleSBoYXZlIG1hZGUgb24gdGhlIGlzc3VlLiBIZWxsIEkgd291bGQgZmFsbCB1bmRlciB0aGUgTklNQlkgY2F0ZWdvcnkgZm9yIGlzc3VlcyBzdWNoIGFzIG9mZnNob3JlIGRyaWxsaW5nIGFyb3VuZCBNb250YW5hIGRlIE9ybyBvciBldmVuIGhvdXNpbmcgZGV2ZWxvcG1lbnQgdGhhdCB3b3VsZCBkcmFzdGljYWxseSByYWlzZSB1cmJhbiBzcHJhd2wgaW50byB1bmRldmVsb3BlZCBsYW5kLiAKVGhleSBoYWQgY2hlY2tlZCBhbmQgcmVjaGVja2VkIHRoZWlyIHdvcmsgYW5kIGNvdWxkIGZpbmQgbm8gZXJyb3IgYnV0IG9wZW5seSBkb3VidGVkIHRoZWlyIG93biB1bmV4cGVjdGVkIG9ic2VydmF0aW9ucyBhbmQgc28gcHVibGlzaGVkIGFza2luZyB0aGUgd29ybGQgYXQgbGFyZ2UgdG8gaW52ZXN0aWdhdGUsIHJlcGxpY2F0ZSBhbmQgdmFsaWRhdGUgdG8gaGVscCB0aGVtIGV4cGxhaW4gd2hhdCB0aGV5IGdvdCB3cm9uZy4gU3VyZSBlbm91Z2gsIHRoZSBzdWJ0bGUgZXJyb3IgaW4gdGhlaXIgZXhwZXJpbWVudCB3YXMgZGlzY292ZXJlZCBhbmQgZXhwbGFpbmVkIGJ5IG90aGVycy4gCkNhcmUgaXMgcHJvdmlkZWQgYnkgb3VyIHRlYW0gb2YgZnVsbHkgbGljZW5zZWQgYW5kIEJvYXJkIENlcnRpZmllZC9FbGlnaWJsZSBQaHlzaWNpYW5zIChNRCwgRE8pLCBDZXJ0aWZpZWQgUmVnaXN0ZXJlZCBOdXJzZSBQcmFjdGl0aW9uZXJzIChDUk5QKSBhbmQgQ2VydGlmaWVkIFBoeXNpY2lhbiBBc3Npc3RhbnRzIChQQSBDKSwgYW5kIHN1cHBvcnRpbmcgc3RhZmYuIApEZXNoYWxiIGlzdCBlcyBtZWluZSBQZmxpY2h0IGFscyBCdXJnZXIgdW5kIHZvciBhbGxlbSBQcm9maXNwb3J0bGVyLCBkaWVzZXMgRXZlbnQgd2llZGVyIHp1bSBMZWJlbiB6dSBlcndlY2tlbiB1bmQgZGFiZWkgenUgc2VpbiwgdW0gZGVyIFdlbHQgenUgemVpZ2VuLCBkYXNzIGRlciBGbHVtbWkgU3BvcnQgYW0gQW5mYW5nIGVpbmVyIGJ1bnRlbiB1bmQgc3BydW5naGFmdGVuIFp1a3VuZnQgc3RlaHQhIEkgbG92ZSBGbHVtbWkhIi4gClJvbGwgdGhlIHdhcm0gZWdnICh3aXRoIG9yIHdpdGhvdXQgdGhlIGVnZ3NoZWxsKSB1bnRvIHRoZSBicnVpc2UgdW50aWwgdGhlIGVnZyBiZWNvbWVzIGNvb2wuIApEZWxpdmVyeSBvZiBhbiBlZHVjYXRpb24gcGFja2FnZSB3aXRoIGEgc2luZ2xlIGNsZWFyIG1lc3NhZ2VUaGlzIHByb2dyZXNzaW9uIGZyb20gZG9lciB0byBtZW50b3IgcmVxdWlyZWQgbmV3IHNraWxscy4gSXQgd2FzIGltcG9ydGFudCB0byBndWlkZSBteSBqdW5pb3IgdHJhaW5lZSBidXQgbm90IHRvIGluc3RydWN0LiAKV2hpbGUgVHJ1bXAgdHJpZXMgdG8gYnV5IHRpbWUsIHRoZSBleGNoYW5nZSBvZiB0aHJlYXRzIGZyb20gV2FzaGluZ3RvbiBhbmQgUml5YWRoIGlzIG1vcmUgdGhhbiBibHVzdGVyLCBzYWlkIERyLiBKb25hdGhhbiBTY2hhbnplciwgc2VuaW9yIHZpY2UgcHJlc2lkZW50IG9mIHRoZSBGb3VuZGF0aW9uIGZvciBEZWZlbnNlIG9mIERlbW9jcmFjaWVzLiAiVGhpcyBpcyBhIGhpZ2ggc3Rha2VzIGdhbWUgb2YgcG9rZXIgcmlnaHQgbm93IHdpdGggYSBudW1iZXIgb2YgcG93ZXJmdWwgYWN0b3JzIGFsbCB0cnlpbmcgdG8gcHJlc3MgdGhlaXIgYWR2YW50YWdlLCIgaGUgZXhwbGFpbmVkLiAKSSdtIGhhcHB5IHdlIGFyZSBtYWtpbmcgcHJvZ3Jlc3MsIGFuZCB0aGlzIGZpbG0gd2FzIGEgZ3JlYXQgZXhhbXBsZSBvZiB0aGF0LiAKWW91IG1heSBkcmF3IHRoaXMgZWJvb2ssIGkgY29udHJpYnV0ZSBkb3dubG9hZHMgYXMgYSBwZGYsIGFtYXpvbmR4LCB3b3JkLCB0eHQsLiAKVGhlIG5zYSBoYXMgZXZlcnlvbmUncyBpbmZvcm1hdGlvbi4gSXQgc291bmRzIGxpa2Ugc2NpZW5jZSBmaWN0aW9uIGJ1dCBpdCdzIG5vdC4gVGhleSBoYXZlIHlvdXIgY3JlZGl0IGNhcmQgbnVtYmVyLCB5b3VyIGVtYWlscywgdGV4dCBtZXNzYWdlcywgcGFzc3dvcmRzLiBBbGwgb2YgaXQuIFRoZXkgdHJhY2sgYWxsIG9mIHVzLiBTbyBJIGRvbid0IHNlZSB3aHkgd2UgYXJlIHN1cnByaXNlZCB0aGV5IGhhdmUgYSBkYXRhIGJhc2UgZnVsbCBvZiBwb2xpdGljYWwgZmlndXJlcyBpbiB0aGUgbWVkaWEuIFRoZXkgcHJvYmFibHkgaGF2ZSBtb3JlIGxpc3RzLiBQdXQgdXMgaW4gZ3JvdXBzLiBUaGVyZSBhcmUgc3RvcmllcyB0aGF0IG5zYSB3b3JrZXJzIHdpbGwgc3B5IG9uIGV4IGdpcmxmcmllbmRzLiBBdCB0aW1lcyB0aGV5IGV2ZW4gYmxhY2ttYWlsIHRoZW0uIFdlIGhhdmUgbm8gcHJpdmFjeSBmcm9tIHRoZSBnb3Zlcm5tZW50LgpJZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zIG9yIGNvbmNlcm5zLCBwbGVhc2UgbWVzc2FnZSB0aGUgbW9kZXJhdG9ycyBvZiB0aGlzIHN1YnJlZGRpdC4KWWVzLCB0aGFuayB5b3UsIHdlIGhhZCBxdWl0ZSBhIGRlY2VudCBDaHJpc3RtYXMuIApMZXQncyBmYWNlIGl0LCBhdCB0aGUgY3VycmVudCBtaW5pbXVtIHdlaWdodCwgd2UncmUgbG9va2luZyBhdCA0NzBiaHAvdG9uICh0aG91Z2ggSSBub3Qgc3VyZSBhbnlib2R5IGFueXdoZXJlIG5lYXIgdGhhdCkuIEFzIGEgZnVydGhlciB0aG91Z2h0LCBwZXJoYXBzIHdlIGNvdWxkIG1hc3NhZ2UgdGhhdCBtaW5pbXVtIHdlaWdodCBhIGZyYWN0aW9uIHRvIG1ha2UgaXQgNDc1YmhwL3RvbiAgIGEgcHJldHR5IG1lYW5pbmdsZXNzIGNoYW5nZSBpbiB0aGUgcmVhbCB3b3JsZCwgYnV0IGEgbmljZSByb3VuZChpc2gpIG51bWJlci4KSSBhbSBhIGxpdmluZyB0aGluZyB0aGF0IHJlYWNoZXMgYmFjayBpbnRvIHRpbWUgcGVyaGFwcyA0MDAgbWlsbGlvbiB5ZWFycyBhbmQgdGhlIHJlc3VsdCBvZiBiaWxsaW9ucyBvZiBqb2luaW5nIG9mIHBhaXJzIG9mIGNlbGxzLiAKRXZlcnlvbmUgaXMgc3VwcG9zZWQgdG8gb3BlbiB0aGVpciBoYW5kcyBpbW1lZGlhdGVseS4gCkFPTCBhdHRlbXB0ZWQgdG8gYmUgdGhpcyBzcXVhcmUsIGZhbWlseSBmcmllbmRseSAiZW50aXJlIGludGVybmV0IGluIG9uZSBhcHBsaWNhdGlvbiIsIGJ1dCwgc2VldGhpbmcgYmVuZWF0aCB0aGUgc3VyZmFjZSB3YXMgY2hhb3MgYW5kIGlsbGVnYWxpdHkuIApPdXIgYmF0aGluZyBhbmQgaGFpciB3YXNoaW5nIHJvdXRpbmVzIGFyZSBiYXNlZCBvbiBhIHN0cmFuZ2Ugc3lzdGVtIG9mIGRlcGxldGluZyB0aGUgc2tpbiBhbmQgaGFpciBvZiB0aGVpciBuYXR1cmFsIG9pbHMgYnkgbGF0aGVyaW5nIHVwIHdpdGggc29hcCBhbmQgc2hhbXBvbyBhbmQgdGhlbiByZXBsZW5pc2hpbmcgdGhlbSB3aXRoIG1vaXN0dXJpemVycyBhbmQgY29uZGl0aW9uZXJzLiBXZSBjYXJyeSBvdXQgdGhpcyAodXN1YWxseSkgZGFpbHkgcml0dWFsIGZvciBhIGNvdXBsZSBvZiByZWFzb25zOiBCeSBXZXN0ZXJuIHN0YW5kYXJkcywgdGhlIGFwcGVhcmFuY2Ugb2Ygb2lseSwgdW53YXNoZWQgaGFpciBpcyBnZW5lcmFsbHkgdW5hY2NlcHRhYmxlICAgYW5kIGl0IGp1c3QgZmVlbHMga2luZCBvZiBncm9zcyB0byBnbyB3aXRob3V0IGEgYmF0aCBvciBzaG93ZXIgZm9yIG1vcmUgdGhhbiBhIGNvdXBsZSBvZiBkYXlzLiBTZWNvbmRseSwgdGhlc2UgbmF0dXJhbCBvaWxzIGNhbiBsZWFkIHNraW4gY29uZGl0aW9ucyBsaWtlIGFjbmUgdnVsZ2FyaXMsIHdoZXJlIHNlYnVtIGJlY29tZXMgYmFja2VkIHVwIGluIHRoZSBoYWlyIGZvbGxpY2xlcywgY3JlYXRpbmcgYSBzbW9yZ2FzYm9yZCBmb3IgYmFjdGVyaWEsIHdoaWNoIGJyZWFrIHRoZSBmYXRzIGludG8gZmF0dHkgYWNpZHMuIApQRVRBIHJlbGVhc2VzIHJlcG9ydCBvZiBSaW5nbGluZyBCcm9zClRodXMsIHdoeSBzaGUga2VwdCBoZXIgbWVtb3JpZXMgb2YgUm94YXMgYW5kIEF4ZWwuIApUaGlzIGlzIGJlY2F1c2UgYSBkZWNrIGZpbGxlZCB3aXRoIDEwIGluY3JlYXNlcyB0aGUgY2hhbmNlIG9mIHRoZSBkZWFsZXIgZ2V0dGluZyBidXN0LiAKRGFuIGxvdmVkIHNvIGRlZXBseSwgYW5kIHdhcyBzbyBkZWVwbHkgbG92ZWQuIERhbidzIGZhbWlseSB3b3VsZCBsaWtlIHRvIGV4dGVuZCBzaW5jZXJlIGFuZCBoZWFydGZlbHQgdGhhbmtzIHRvIGFsbCBvZiB0aGUgaW5jcmVkaWJsZSBwZW9wbGUgYXQgU3QuIApTZWxvbiBjZXJ0YWlucyBzY2llbnRpZmlxdWVzLCBxdWkgZm9udCBkZSBsJ0FmcmlxdWUgbGUgYmVyY2VhdSBkZSBsJ2h1bWFuaXQsIGwnaGlzdG9pcmUgZGVzIHBldXBsZXMgbm9pcnMgY29tbWVuY2UgbW1lIGJpZW4gYXZhbnQgY2VsbGUgZGVzIHBldXBsZXMgaW5kbyBldXJvcGVucy4gCldlIGxvdmVkIHBhcnRpZWQgeW91IGtub3cgc21va2luZyB3ZWVkLCBkcmlua2luZywgcGFzc2luZyBvdXQgYW5kIHdha2luZyB1cCBpbiBnb2Qga25vd3Mgd2hlcmUgeW91IGtub3cgaG93IGl0IGdvZXMuIApBbmQgT2FrbGFuZCBpbmNyZWFzaW5nbHkgZGVzcGlzZXMgaXRzIHBvb3IgYW5kIGRpc2VuZnJhbmNoaXNlZCwgcmVmdXNpbmcgdG8gdXNlIGNpdHkgZnVuZHMgcmVzcG9uc2libHkgZm9yIHRoZSB1bmRlcnNlcnZlZCwgYW5kIEFtZXJpY2EganVzdCBoYXRlcyBraWRzLiAKV2hhdCBtYWtlcyBwb29sIGRpbmluZyB0YWJsZXMgdW5pcXVlIGlzIHRoYXQgdGhleSBjYW4gYmUgdXNlZCB0byBhY2NvbW1vZGF0ZSBhIGdhbWUgb2YgcG9vbCwgb3IgaXQgY2FuIGJlIHVzZWQgYXMgYSBkaW5uaW5nIHRhYmxlLiBQb29sIHRhYmxlcyB0YWtlIHVwIHF1aXRlIGEgYml0IG9mIHNwYWNlLiAKSW50cm9kdWN0aW9uOiBJdCBpcyB3ZWxsIGtub3duIHRoYXQgc3BlY2lmaWMgZm9vZHMgdHJpZ2dlciBtaWdyYWluZSBhdHRhY2tzIGluIHNvbWUgcGF0aWVudHMuIFdlIGFpbWVkIHRvIGludmVzdGlnYXRlIHRoZSBlZmZlY3Qgb2YgZGlldCByZXN0cmljdGlvbiwgYmFzZWQgb24gSWdHIGFudGlib2RpZXMgYWdhaW5zdCBmb29kIGFudGlnZW5zIG9uIHRoZSBjb3Vyc2Ugb2YgbWlncmFpbmUgYXR0YWNrcyBpbiB0aGlzIHJhbmRvbWlzZWQsIGRvdWJsZSBibGluZCwgY3Jvc3Mgb3ZlciwgaGVhZGFjaGUgZGlhcnkgYmFzZWQgdHJpYWwgb24gMzAgcGF0aWVudHMgZGlhZ25vc2VkIHdpdGggbWlncmFpbmUgd2l0aG91dCBhdXJhLgpJdCB2ZXJ5IHZpc3VhbGx5IGFwcGVhbGluZy4gClRoZXkgd2VyZSBnb2luZyBhbG9uZSwgd2hpY2ggZGlkIG5vdCBvZnRlbiBoYXBwZW4sIGZvciBNcnMuIApPbiBXZWRuZXNkYXksIG1vcmUgdGhhbiAxLDMwMDAgYXBwbGljYXRpb25zIGhhZCBiZWVuIHJlY2VpdmVkIG9ubGluZSBmb3IgdGFibGUgZ2FtZSBkZWFsZXJzIGFuZCBzdXBlcnZpc29ycy4gCkFuIHVuZGVyY292ZXIgZ3VuIHNtdWdnbGluZyBkZWFsIGdvbmUgYmFkIGlzIHRoZSBwZWFrIG9mIE9iYW1hJ3MgYWRtaW5pc3RyYXRpb24gImJhZCBkZWFsIiBvciBjb3JydXB0aW9uIC4gClRoZSBnaXJscyBhcmUgdmVyeSBmcmFuayBhbmQgcmVhbGlzdGljIGFib3V0IHRoZWlyIGpvYiBhbmQgaXRzIHJpc2tzL2JlbmVmaXRzLiAKSSBjYW1lIGRvd24gYW5kIG9wZW5lZCB0aGUgZG9vci4gCkV2ZXJ5dGhpbmcgbG9va3Mgc29vIGdyZWVuClRoZSBsaWx0aW5nIHJoeXRobSBndWl0YXIgb24gIkFsbW9zdCAoU3dlZXQgTXVzaWMpIiBzdWdnZXN0cyBhIHN3ZWV0ZXIgbG92ZSBzb25nOyB0aGVuIHlvdSBub3RpY2UgdGhhdCB0aGUgbHlyaWNzIGhhdmUgYmVlbiBwaWVjZWQgdG9nZXRoZXIgZnJvbSB0aGUgdGl0bGVzIG9mIGFib3V0IDIwIGphenogY2xhc3NpY3MsIGEgcmV2ZXJlbnQgcmVmZXJlbmNlIHN0ZXcuIApUaGVpciBpbnRlbnRpb24gaXMgdG8gbWFrZSBzdXJlIHRoYXQgb3VyIGxpZ2h0cyBhcmUgZGltbWVkLiAKR3JhZCBzY2hvb2wgICBhaC4gRGlkIHlvdSBncmFkdWF0ZT8gV2hhdCBkaWQgeW91IHN0dWR5PyBJIGdvdCBhIE1CQSBiYWNrIGluIDE5OTQuIEJ1dCBJIHdlbnQgdG8gYSBjcmFwcHkgc2Nob29sLCBhbmQgSSBiZWVuIGZvcnR1bmF0ZSB0byB3b3JrIGZvciBhIHN0cmluZyBvZiBjcmFwcHkgYm9zc2VzIHNpbmNlIHRoZW4gc28gdGhhdCBiZWVuIGZ1bi4gSSBiZWVuIGEgd2ViIGFwcGxpY2F0aW9uIGRldmVsb3BlciBzaW5jZSB0aGVuLgoiSGFycmluZ3RvbiBvbiBIb2xkJ2VtIiBpcyBhIHJldm9sdXRpb25hcnkgYm9vayBmb3IgdGhlIGFtYXRldXIgcG9rZXIgcGxheWVycyB0aGF0IGhhcyByZXZlYWxlZCB0aGUgc2VjcmV0IG9mIHRoZSBQb2tlciBnYW1lIGluIGZyb250IG9mIHRoZW0uIApCdXlpbmcgYSBuZXcgaG9tZSBpcyBlYXNpbHkgb25lIG9mIGxpZmUncyBtb3N0IGZ1bmRhbWVudGFsbHkgaW1wb3J0YW50IGRlY2lzaW9ucy4gCiJHZW9yZ2UgYXNwaXJlZCB0byBsZWF2ZSBoaXMgYm9keSBpbiBhIGNvbnNjaW91cyBtYW5uZXIgYW5kIHRoYXQgd2FzIGEgZ29hbCBvZiBoaXMgbGlmZSwgeW91IGtub3cuIFRoYXQgaXMgdGhlIHdob2xlIHBvaW50IG9mIG1lZGl0YXRpb24sIHRoZSB3aG9sZSBwb2ludCBvZiBzcGlyaXR1YWwgcHJhY3RpY2UsIiBzYXlzIE9saXZpYS4gIkhlIHVzZWQgdG8gc2F5OiAnWW91IGNhbid0IGp1c3QgcmVtZW1iZXIgR29kIGF0IHRoZSBlbmQgb2YgeW91ciBsaWZlLicgVGhlIHRoaW5nIHRoYXQgeW91IHJlbWVtYmVyIG1vc3QgaW4geW91ciBsaWZlIGlzIHdoYXQgeW91IGFyZSBnb2luZyB0byByZW1lbWJlciB3aGVuIHlvdSBkaWUgYW5kIGhlIHNhaWQgdG8gbWU6ICdJIGRvbid0IHdhbnQgdG8gYmUgdGhpbmtpbmcsIGRpZCBJIHB1dCB0aGUgY2F0IG91dD8nICIgRm9sbG93aW5nIGEgc2VsZiBlbmZvcmNlZCBwZXJpb2Qgb2Ygc29saXR1ZGUgYWZ0ZXIgaGlzIGRlYXRoLCBPbGl2aWEgaXMgbm93IGZlZWxpbmcgbW9yZSBwb3NpdGl2ZSwgbm90IGxlYXN0IGJlY2F1c2Ugc2hlIHN0aWxsIGZlZWxzIGEgZGVlcCBjb25uZWN0aW9uIHdpdGggaGVyIGh1c2JhbmQuCk9uIHRoZSBmbGlwIHNpZGUsICJiYWQiIFJORyBpcyB0d28gZGltZW5zaW9uYWwuIApJIGZlZWwgYXMgaWYgSSBkb2luZyBsZXNzIG1pbGVhZ2UgYW5kIGZvY3VzaW5nIG9uIG90aGVyIHdheXMgb2YgZXhlcmNpc2UgKG1vYmlsaXR5LCBzdHJlbmd0aCB0cmFpbmluZy93ZWlnaHRsaWZ0aW5nLCBzb2NjZXIpIHdvdWxkIGJlIGJldHRlciBmb3IgbXkgZGV2ZWxvcG1lbnQgYXMgYW4gYWxsIHJvdW5kIGF0aGxldGUuIFRoZSBsb3cgd2FzIGluIHRoZSB0ZWVucywgYW5kIG15IGJvdHRsZXMgd2VyZSBhbHJlYWR5IHNsdXNoeSBieSB0aGUgdGltZSBJIGdvdCB0byBjYW1wLCBzbyBJIHR1Y2tlZCB0aGVtIG5leHQgdG8gbXkgbGVncyBpbnNpZGUgdGhlIHF1aWx0IGFuZCBzdHVjayBteSBmbGVlY2UgZ2xvdmVzIG92ZXIgdGhlIGJvdHRvbSBoYWxmIG9mIHRoZSBib3R0bGVzIGp1c3QgdG8gc29hayB1cCBzb21lIG9mIHRoZSBjb25kZW5zYXRpb24gYW5kIGRpc2NvdXJhZ2UgdGhlbSBmcm9tIHJvbGxpbmcgYXJvdW5kLiBJIGNvdWxkIGZlZWwgdGhlIGhlYXQgbG9zcywgYnV0IGl0IHdhc24gdG9vIGJhZC4KQnV0IG90aGVyd2lzZSBoZSB3aG9sbHkgYWNjZXB0cyBLZWxpIHZlcnNpb24gb2YgZXZlbnRzLiBCZWNyb2Z0IGFza3MgaWYgaGUgY29uc2lkZXJzIGl0IGF0IGFsbCBvZGQgdGhhdCBOb3JyaXMgYW5kIGhpcyBnaXJsZnJpZW5kLCBNZWwsIHdvdWxkIGFncmVlIHRvIHJhaXNlIHRoZSBjaGlsZC4gIk9mIGNvdXJzZSBpdCB1bnVzdWFsLCIgaGUgc2F5cy4gIlRoaXMgaXMgYSBtb3N0IHVudXN1YWwgbWF0dGVyLiIgVGhlIGNvcm9uZXIgc2VlbXMgdG91Y2hlZCBieSB0aGlzIHNob3cgb2YgZmFpdGguIApJJ3ZlIGdpdmVuIHlvdSBhbiBhbnN3ZXIgYnV0IGl0IGlzbid0IGdvb2QgZW5vdWdoLiBXaGF0IGxhdyBkbyB5b3UgdGhpbmsgUnVzc2lhIGlzIGJyZWFraW5nPyBUaGUgYnVyZGVuIHRvICJjaXRlIHRoZSBsYXciIGlzIG9uIHlvdS4gSWYgeW91IHdlcmUgYW55dGhpbmcgbW9yZSB0aGFuIGFuIGFybWNoYWlyIGxhd3llciB5b3Ugd291bGQga25vdyB0aGF0LgpHb29keSBmb3IgeW91LiIgSXQgaGFyZCB0byB0ZWxsLCBidXQgbWF5YmUgb25lIGxhc3QgcG9rZSBhdCB5b3VyIGdyYXkgcm9jayB0byBzZWUgaWYgeW91IHdpbGwgZ2l2ZSBpdCB1cD8gT3IgdXNpbmcgc2FyY2FzbSBhcyBhbiBvdXRsZXQgZm9yIGhlciBhbmdlciB0aGF0IHNoZSBjb3VsZG4gcHJvdm9rZSB5b3U/IFJlZ2FyZGxlc3MsIEkgdGhpbmsgeW91IGFyZSBkb2luZyBncmVhdCEgR3JheSByb2NraW5nLCByZWxlbnRsZXNzIHBvc2l0aXZpdHksIGFjdGluZyBjb25mdXNlZC9saXRlcmFsLCBhbmQgcmVmdXNpbmcgdG8gYWxsb3cgbXlzZWxmIHRvIGJlIHByb3Zva2VkIGludG8gYW4gYW5ncnkgcmVzcG9uc2UgaGF2ZSB3b3JrZWQgdmVyeSB3ZWxsIGZvciBtZSB3aXRoIG15IHdhaWYgbW9tLCBhbmQgSSB0aGluayBpdCBhIGdvb2QgY29tYmluYXRpb24uIEtlZXAgdXAgdGhlIExDICBpdCBzbyBoZWxwZnVsIS4gCkFkZGVkIGJlbmVmaXRzIG9mIE9ubGluZSBHYW1ibGluZwpJbiBjYXNlIHlvdSBkb24gcmVtZW1iZXIgdGhlIGZpcnN0ICJmaW5nZXIgbGVuZ3RoIiBzY2llbmNlLCBpdCB3YXMgYWxsIGFib3V0IGxlc2JpYW5pc20uIApVbmVtcGxveW1lbnQgcmlzayBtYW5hZ2VtZW50IGNhbiBpbmNsdWRlIGFuIGVtZXJnZW5jeSBmdW5kIHdoZXRoZXIgY2FzaCBvciBhbiB1bnVzZWQgbG93IGludGVyZXN0IHJhdGUgbGluZSBvZiBjcmVkaXQuIEEgcmV0aXJlbWVudCBwbGFuIHNob3VsZCBwcm9iYWJseSBhbHNvIGJlIGJhc2VkIHVwb24gYW4gZWFybHkgcmV0aXJlbWVudCwganVzdCBpbiBjYXNlIGEgY2FyZWVyIGlzIGN1dCBzaG9ydCBkdWUgdG8gdW5mb3Jlc2VlbiBjaXJjdW1zdGFuY2VzLiBUaGVuIHdvcmtpbmcgbG9uZ2VyIGludG8gb25lIDYwcyBvciA3MHMgaXMgYSBjaG9pY2UgcmF0aGVyIHRoYW4gYSBuZWNlc3NpdHkuLiAKWW91IGRpZG4gZGVzY3JpYmUgaW4gZGV0YWlsIGhvdyB0aGVzZSBmaWdodHMgZW5kIHVwIGhhcHBlbmluZywgc28gaXQgaGFyZCBmb3IgbWUgdG8gZGV0ZXJtaW5lIHdobyBzdGFydHMgdGhlbSwgd2hvIGVzY2FsYXRlcyB0aGVtLCBhbmQgd2hvIGRvZXNuIGRlIGVzY2FsYXRlIHRoZW0uIApFZGl0LiBUaGUgcmVzcG9uc2VzIGJlbG93IGFyZSByZWZlcnJpbmcgdG8gc29tZXRoaW5nIGNhbGxlZCBwb3N0IHBhcnR1bSBwc3ljaG9zaXMgSSB3YXMgbm90IGF3YXJlIG9mLCBhbmQgd2FzIG5vdCBzb21ldGhpbmcgdGhlIGNvbW1lbnQgYWJvdmUgbWUgbWVudGlvbmVkLiBBbmQgb2YgY291cnNlIEkgZG9uIHRoaW5rIGVpdGhlciBpcyBmdW5ueSwgdGhlcmUgaXMgbm90aGluZyBmdW5ueSBhYm91dCBhIGdvZGRhbW4gdGhpbmcgaGVyZSBzbyBub3Qgc3VyZSB3aGVyZSB0aGUgIm5vdCBhIGxhdWdoaW5nIG1hdHRlciIgY2FtZSBmcm9tLi4gClNvIGlmIHlvdSBidWlsZCBhIG1pY3Jvc2NvcGUgd2l0aCBhIGJpZ2dlciBhcGVydHVyZSwgeW91IGNhbiBzZWUgc21hbGxlciBzdHVmZi4gVGhlcmUgYXJlIHRyYWRlb2ZmcyB0aG91Z2gsIGxpa2UgeW91IGxpbWl0IHlvdXIgZGVwdGggb2YgZmllbGQuCllvdSBjYW4gc2VlIG15IHRlbXAgc2V0dGluZ3MgaW4gdGhlIGdpc3QgSSBwb3N0ZWQsIGJ1dCBJIGJlZW4gZmluZGluZyBsYXRlbHkgdGhhdCBmb3IgSGF0Y2hib3gsIHRoZSBiZXN0IHRlbXBlcmF0dXJlIHNlZW1zIHRvIGJlIDE4NyAgIDE5MiBmb3IgdGhlIGhvdCBlbmQsIGFuZCBhYm91dCA1NyAgIDYzIGZvciB0aGUgYmVkLiAKVGhlbiBjaGVjayB0byBzZWUgaWYgdGhlIGNydW1iIGlzIHN0aWxsIGluIHRoZSBzYW1lIHBsYWNlIGFmdGVyIHlvdXIgcmV0dXJuLi4gCkFjY29yZGluZyB0byBXaGF0IEhpRmkgdGhleSBhcmUgZ29vZCBiZWNhdXNlIHRoZXkgaGF2ZSBhIGhvbGxvdyB0dWJlIHJ1bm5pbmcgZG93biB0aGUgY2VudGVyIG9mIHRoZSBjYWJsZSB0byBjb21iYXQgc2tpbiBlZmZlY3QvcHJveGltaXR5IGVmZmVjdCwgYW5kIGhhdmUgbG93IERDIHJlc2lzdGFuY2UgYW5kIG94eWdlbiBmcmVlIGNvcHBlci4gCkJvdGggdGhlIGNvbnN0aXR1dGlvbiBhbmQgdGhlIGxhdyBpcyBleHRyZW1lbHkgdmFndWUuIApUYXhlcyBhbmQgZmVlcyB0aGF0IGFyZSBzaG93biBhcmUgZXN0aW1hdGVzIG9ubHkuIApPYnZpb3VzbHkgbm90IGFuIGFjY2lkZW50LiBBbGwgNS4gU28gdGhlIG1lY2hhbmljIGdldHMgbG9ja2luZyBsdWcgbnV0cy4gVGhlbiwgb24gdGhlIGhpZ2h3YXkgZ29pbmcgODAsIG15IGNhciBmaWxscyB3aXRoIHNtb2tlIGFuZCBqdXN0IHN0b3BzLiBDYW4gc3RlZXIgd2VsbCwgZXZlcnl0aGluZyBpcyBkZWFkLiBNZWNoYW5pYyB0aGlua3Mgc3VnYXIgb3IgYSBQaW5nIHBvbmcgYmFsbCBvciBzb21ldGhpbmcsIGJ1dCB0aGUgZW5naW5lIGlzIHRvYXN0LiBSSVAgZmlyc3QgY2FyLiAKRGF2ZSBSdWJpbiBpcyBhIGxpYmVyYWwuIFNhbSBIYXJyaXMgaXMgYSBsaWJlcmFsLiBCaWxsIE1haGVyIGlzIGEgbGliZXJhbC4gU28gb2J2aW91c2x5IHRoZSB0ZXJtIGRvZXNuIHJlZmVyIHRvIHRoZSAidGhlIExlZnQgYXMgYSB3aG9sZSIuCkNoaWxkcmVuIG9mIHRoZSBOYW1lbGVzcy4gSSBjYW4gZXhwcmVzcyBob3cgbXVjaCBJIGxvdmUgdGhpcyBub3ZlbGxhLiBEYXZyaWVsIGlzIGp1c3Qgc28gd2VsbCB3cml0dGVuLiBUYmggSSBjYW4gcmVhbGx5IHNheSBhbGwgb2YgdGhlIHJlYXNvbnMgd2h5IGJlY2F1c2UgaXQgd291bGQgc3BvaWwgdGhpbmdzLCBidXQgaGUganVzdCBzbyBhYnN1cmQgc29tZXRpbWVzIGFuZCBoaXMgb3BpbmlvbnMgYWJvdXQgcGVvcGxlIGFyZSBxdWl0ZSByaWdodC4gSGUgZGVmaW5pdGVseSBteSBzZWNvbmQgZmF2b3JpdGUgcGxhbmVzd2Fsa2VyLiBUaGUgZGVtb25zIGluIHRoZSBzdG9yeSBhcmUgc28gY29vbCwgYXMgd2VsbC4KT3VyIHRlYW0gd2FzIGFsd2F5cyBvbiwgd2F0Y2hpbmcgdGhlIGNvbnZlcnNhdGlvbnMgdW5mb2xkIGluIFJlZGRpdCB0aHJlYWRzIGFuZCBEaXNjb3JkLCBhbnN3ZXJpbmcgZmFucyBpbiByZWFsIHRpbWUsIHdoaWNoIG1hZGUgdGhlbSBmZWVsIGV2ZW4gbW9yZSBjb25uZWN0ZWQgdG8gb3VyIGJyYW5kIGFzIHRoZSBwYXkgd2FsbCB3YXMgZXJlY3RlZC5UaGVyZSdzIG5vIHBlcmZlY3QgZm9ybXVsYSB0byBsYXVuY2hpbmcgYSBzdWJzY3JpcHRpb24gc2VydmljZSwgYnV0IHRoZSBiaWdnZXN0IG1pc3Rha2Ugd2UndmUgc2VlbiBpcyB3aGVuIGEgYnJhbmQgZmFpbHMgdG8gcGljayBhIGNsZWFyIGxhbmUgd2l0aCBleHBsaWNpdCBpbnRlbnRpb25zLiBGb3JtdWxhdGUgYSB2YWx1ZSBwcm9wb3NpdGlvbiB0aGF0IG1lZXRzIHRoZSBuZWVkcyBvZiB5b3VyIHBhcnRpY3VsYXIgYXVkaWVuY2Ugc2VnbWVudCwgc3RhdGUgaXQgY2xlYXJseSBhbmQgbWFrZSBzdXJlIHRoYXQgZXZlcnkgZGVjaXNpb24gYWNyb3NzIHByb2R1Y3QsIG1hcmtldGluZyBhbmQgY29udGVudCBpcyBtZXQgd2l0aCB0aGF0IHNhbWUgZmlsdGVyLi4gCkEgY29tYmluYXRpb24gb2YgdGVjaG5pY2FsIGlubm92YXRpb24sIGFnZ3Jlc3NpdmUgaW52ZXN0aW5nIGFuZCBjb3Bpb3VzIGxheWVycyBvZiBvaWwgcmljaCBzaGFsZSBoYXZlIHRyYW5zZm9ybWVkIHRoZSBQZXJtaWFuLCBvbmNlIGNvbnNpZGVyZWQgYSB3b3JuIG91dCBwYXRjaCwgaW50byB0aGUgd29ybGQgc2Vjb25kIG1vc3QgcHJvZHVjdGl2ZSBvaWwgZmllbGQuCkRpZG4gcHJhY3Rpc2UgaXQgZm9yIG1vc3Qgb2YgdGhlIHllYXIgdGhvc2UgZ29vZCBoYWJpdHMgYW5kIGF0IHRoZSBlbmQgb2YgdGhlIGRheSB3aGVuIHB1c2ggY2FtZSB0byBzaG92ZSBhbmQgdGhlIGFkdmVyc2l0eSBjb21lcyBvdXQsIHRoYXQgdGhlIGJlc3QgZWZmb3J0IHdlIGhhZC4gVGhhdCByZWFsbHkgZGVqZWN0aW5nIHRvIHNlZSB0aGF0LCBlc3BlY2lhbGx5IGluIGEgc2VyaWVzIHdoZXJlIHlvdSBoYXZlIGFuIGVsaW1pbmF0aW9uIGdhbWUgYXQgaG9tZSBhbmQgd2UgYWxyZWFkeSBsb3N0IHR3byBob21lIGdhbWVzLiAKQmVya3NoaXJlIEVhZ2xlOiBBbmdzdCBvdmVyIGludGVybmV0IHNwZWVkc05vLCBJIG5vdCBraWRkaW5nLiBJIG5vdGljZWQgcmVwb3J0cyBvbiB0aGlzIHBvc3Qgc28gSSBjaGVja2VkIGl0IG91dCwgYXMgSSBzdXBwb3NlZCB0byBkbywgYW5kIEkgYWdyZWUgd2l0aCB0aGUgcmVwb3J0cy4gClRoZXkgY29vayBvbiBjaGFyY29hbCBhbmQgd29vZC4gVGhleSBwbGF5IG5vbiBlbGVjdHJvbmljIGdhbWVzICAgZXZlcnl0aGluZyBmcm9tIG1hcmJsZXMgdG8gcG9rZXIuLiAKUm9ocm1hbidzIGZpcnN0IHR1cm5pbmcgcG9pbnQgY2FtZSBkdXJpbmcgV29ybGQgV2FyIElJLiBIaXMgcGFyZW50cyBoYWQgbW92ZWQgdG8gbm9ydGhlcm4gV2lzY29uc2luIHdpdGggdGhlaXIgdGhyZWUgeW91bmdlc3QgY2hpbGRyZW4uIEJ1dCB3aGVuIGhpcyBmYXRoZXIgYmVjYW1lIHNpY2sgYWZ0ZXIgYnVpbGRpbmcgQXJteSBiYXJyYWNrcyBvbiBBdHR1IGluIEFsYXNrYSdzIEFsZXV0aWFuIElzbGFuZHMsIFJvaHJtYW4sIHRoZW4gMTMsIHdhcyBzaGlwcGVkIGJhY2sgdG8gTGFmYXlldHRlIHRvIGxpdmUgd2l0aCBhbiBvbGRlciBzaXN0ZXIncyBmYW1pbHkuLiAKSSByYXJlbHkgY29tZSBoZXJlIGJlY2F1c2UgaXMgaG93IHRveGljIHRoaXMgZW52aXJvbm1lbnQgaXMuIEkgdGhpbmsgcGVvcGxlIGNvdWxkIHBvc3NpYmx5IGJlIGplYWxvdXMgaXMgV1dUIGNvbmZpZGVuY2UuIEkgc3dlYXIuIEkgc2VlIHNpbWlsYXJpdGllcyBpbiBoZXIgcGVyc29uYWxpdHkgd2l0aCBteSBvd24sIHlldCBJIGRvbiBoYXZlIHJpZGUgb3IgZGllIGZyaWVuZHMgbGlrZSBzaGUgZG9lcy4gSSBzdXBwb3NlIEkgdHVybiBwZW9wbGUgb2ZmLiBTbyBkb2VzIFdXVC4gSSBhbHNvIHN1cHBvc2UgSSBoYXZlIG1vcmUgc2VsZiBhd2FyZW5lc3MgdGhhbiBXV1QuCkpldCBmdWVsIGNhbiBtZWx0IGRhbmsgbWVtZXMsIHRoYXQgc3RhaHAgZ2F2ZSBtZSBjYW5jZXIgZm9yIHNjaWVuY2UsIHNvIHRoYXQgZW5vdWdoIGludGVybmV0IGZvciBtZSB0b2RheS4gT1AgaXMgYSBmdXp6eSBsaXR0bGUgbWFuIHBlYWNoLCAyLzEwLCB3b3VsZCBub3QgYmFuZy4gCkkgc3VwcG9zZSB0aGF0IHRvIGJlIGV4cGVjdGVkIHRob3VnaCB3aGVuIHlvdSB3b3JrIGF0IHRoZSBzYW1lIHBsYWNlIGZvciBzZXZlcmFsIHllYXJzOyBvdmVyYWxsIHRoaW5ncyBhcmUgc3RpbGwgZ29pbmcgcXVpdGUgd2VsbC4uIApNeSBmYW1pbHkgb25seSBqdXN0IHJlYWxpemVkIHdoYXQgbXkgam9iIGlzLiAKQW5uYSBIdXRjaGlzb24gdG8gbWFycnkgSG9sbHl3b29kIGhvdHNob3QKTGEgZm9ybWF0aW9uIHNlIHZldXQgZHluYW1pcXVlIGV0IGludGVyYWN0aXZlLiAKQXUgZHRvdXIgZGUgZGlzY3Vzc2lvbnMgZXQgZCdjaGFuZ2VzIGF1IHNlaW4gZGVzIGxhYm9yYXRvaXJlcyBkZSByZWNoZXJjaGUsIHBsdXNpZXVycyBjaGVyY2hldXJzIHBhcnRhZ2VhaWVudCBsZSBjb25zdGF0IHNlbG9uIGxlcXVlbCBsYSBwcnNlbmNlIGRlcyBmaWN0aW9ucyBkYW5zIGxlIGRyb2l0IGZhaXNhaXQgbCdvYmpldCBkZSBsYSBwbHVwYXJ0IGRlcyBlbnNlaWduZW1lbnRzIGRpc3BlbnNzIGRhbnMgbGVzIGZhY3VsdHMuIFRvdXRlZm9pcywgbCd0dWRlIGRlIHNhIHByc2VuY2UgZGFucyBsZXMgZmljdGlvbnMgcmVzdGFpdCB1biB0ZXJyYWluIHBldSBleHBsb3IgZGFucyBsZSBjYWRyZSB1bml2ZXJzaXRhaXJlLCByZW5kYW50IGFsb3JzIGludmlzaWJsZSBsZSBkcm9pdCBkYW5zIGxlcyBkaWZmcmVudGVzIGZpY3Rpb25zLiBFdCBwb3VydGFudCwgbGUgZHJvaXQgc2UgZHZvaWxlIGF1IHRyYXZlcnMgZGUgbCdvcmdhbmlzYXRpb24gZGUgc29jaXRzIGltYWdpbmFpcmVzLiAKVGhpcyBuZXh0IG1vbnRoIEkgaG9wZSB0byBzZWUgZXZlcnlvbmUgYWdhaW4uIEkgaG9wZSB5b3VyIGJsb2dzIHN0YXkgc3Ryb25nIGFuZCB5b3VyIHdyaXRpbmcgc3RheXMgZnJlc2guIEkgd2lsbCBtaXNzIHlvdSBhbGwgYW5kIEkgdGhhbmsgeW91IGFsbCBmb3IgdGhlIGZlZWRiYWNrIGFuZCBsb3ZlLgpXaGVuIEkgd2FzIDkgbW9udGhzIHByZWduYW50LCBiaXR0ZXJseSBmYXQgYW5kIHdhZGRsaW5nLCBhbiBvbGQgbWFuIHNuYXBwZWQgYXQgbWUgZm9yIG5vdCBtb3ZpbmcgZmFzdCBlbm91Z2ggdG8gc2VydmUgaGltIGEgYmVlci4gCkFsc28sIHN0b2NrIHVwIG9uIHZpdGFtaW4gQy5EbyB5b3Uga25vdyB3aGljaCBncmFkZSB5b3Ugd291bGQgbGlrZSB0byB0ZWFjaD8gSSB0YWtlIGl0IHlvdSBhcmUgc29tZSBob3VycyBpbnRvIGEgZmV3IHByYWN0aWN1bXMuIEhhdmUgeW91IGdvdHRlbiBhIGRlY2VudCBsb29rIGF0IGEgZGl2ZXJzZSByYW5nZSBvZiBhZ2VzIHRocm91Z2ggdGhhdD9XaGVuIHRhbGtpbmcgdG8gdGVhY2hlcnMgdGhhdCB3ZXJlIGJ1cm5pbmcgb3V0IGluIHRoYXQgU3RhdGVzLCB0aGUgbW9zdCBjb21tb24gY29tcGxhaW50IEkgaGVhcmQgd2FzIHRoYXQgdGhlIGxvYWQgb2YgSUVQIGFuZCA1MDQgYWNjb21tb2RhdGlvbnMgd2VyZSB0b28gbnVtZXJvdXMgYW5kIGRpdmVyc2UgdG8gaGFuZGxlIGluIG9uZSBjbGFzcy4gCiJsZWFybiB0byBjb2RlIiB3YXMgdXNlZCBieSBzb21lIHJhY2lzdHMsIHNvIHRoZW4gYW55b25lIHdobyB1c2VzIGl0IGdldHMgc3VzcGVuZGVkIGV2ZW4gaWYgdGhleSBuZXZlciB2aW9sYXRlZCB0aGUgcnVsZXMuIApUaGVyZSBpcyBhIHBhcmFsbGVsIHN5c3RlbSBhdCB3b3JrIHdpdGggS29yZWFucyBhbmQgQ2hpbmVzZSBvd25lZCBidXNpbmVzc2VzIGluIE5aLiBUb28gbWFueSBmbG91dCB0aGUgbGFib3VyIGxhd3MgYW5kIGFjdCBhcyB0aG91Z2ggdGhleSBkb250IGFwcGx5IHRvIHRoZW0uIApKZSBkaXMgY2VsYSBzYW5zIGFycmlyZSBwZW5zZS4gCkJ1dCB3ZSBkaWQgZXZlcnl0aGluZyBxdWlja2x5IGFuZCBoYWQgbm8gaXNzdWVzIGZyb20gdGhlIGluc3BlY3Rpb24gZm9yIHRoZW0gdG8gZml4LiAKSW4gZXZlcnkgc3RhdGUsIGNyaW1lcyBhcmUgcHV0IGludG8gZGlzdGluY3QgY2F0ZWdvcmllcy4gVGhlIGNhdGVnb3JpZXMgYXJlIHVzdWFsbHkgImZlbG9ueSwiICJtaXNkZW1lYW5vciwiIGFuZCAiaW5mcmFjdGlvbi4iIERlY2lzaW9ucyBvbiBjcmltZSBjbGFzc2lmaWNhdGlvbiBhcmUgbWFkZSBieSBzdGF0ZSBsZWdpc2xhdG9yczsgdGhlIGRldGVybWluYXRpb24gZm9jdXNlcyBvbiB0aGUgc2VyaW91c25lc3Mgb2YgdGhlIGNyaW1lLiBUaGlzIGFydGljbGUgbG9va3MgYXQgdGhlIGRpZmZlcmVuY2VzIGFtb25nIHRoZXNlIGNyaW1lIGNsYXNzaWZpY2F0aW9ucywgbW92aW5nIGZyb20gbGVhc3Qgc2VyaW91cyAoaW5mcmFjdGlvbnMpIHRvIG1vc3QgKGZlbG9uaWVzKS4gCk9uIHRvcCBvZiB0aGF0IHdlIGFyZSBwcmVzZW50aW5nIGFuIGFsbCBoZWF2eXdlaWdodCBzaG93IHdpdGggbG90cyBvZiBncmVhdCB0YWxlbnQuIApUaGUgYmF0dGFsaW9uIHRyeWluZyB0byBjcm9zcyBpbnRvIFRoYWlsYW5kIHRvdGFscyBzb21lIDYwMCBtZW4gYW5kIGluY2x1ZGVzIFRoYWkgaW5zdXIgIGdlbnRzIGRyaWxsZWQgaW4gTm9ydGggVmlldCAgbmFtLCBtZW4gb2YgdGhlIENvbW11bmlzdCBQYXRoY3QgTGFvIG1vdmVtZW50IGluIExhb3MgYW5kIE1jbyB0cmliZXNtZW4sIHNhaWQgR2VuLiBQcmFwaGFzIENoYXJ1c2F0aGljbiwgd2hvIGlzIGRlcHV0eSBwcmVtaWVyIGFzIHdlbGwgYXMgY29tbWFuZGVyIGluIGNoaWVmIG9mIHRoZSBUbyBjaGVjayB0aGUgdGhyZWF0LCBwaGFzIHNhaWQsIGhlbGljb3B0ZXJzIHdoaXJyZWQgaW50byBOYW4gcHJvdmluY2UgY2FycnlpbmcgZ292ZXJubWVudCB0cm9vcHMgZnJvbSBDaGxjbmdyYWksIGluIG5vcnRoZXJuIFRoYWkgIGxhbmQgYW5kIHVuaXRzIGZyb20gdGhlIDNyZCBBcm15IEhlYWRxdWFydGVycy4gCkkgaGF2ZSB0aGUgdG9wIG1ldGEgZnVsbHkgdHJhaW5lZCB3ZWxsIGVxdWlwcGVkIEFSU01HLCBSRkhHLCBTR01HLCBYb2RpYSwgZXRjIHNxdWFkcyBldGMsIGJ1dCBub3cgSSBmZWVsaW5nIHRoZSBwcmVzc3VyZSB0byBkdXBlIGFuZCBldmVuIHRyaXBsZSB0aGVtLiAKV2hlbiBtb3JlIGludmVzdG9ycyBhbmQgY29tcGFuaWVzIHdhbnQgdG8gYnV5IGxvbmcgdGVybSBib25kcywgdGhlIHByaWNlIGdvZXMgdXAgYW5kIHRoZSB5aWVsZCBnb2VzIGRvd24uIApUbyBnZXQgdGhlIHByb2JhYmlsaXR5IHRoYXQgb3VyIGNhcmRzIGRvIG5vdCByZXN1bHQgaW4gZWl0aGVyIG9mIHRob3NlIHR3byBpbnN0YW5jZXMgaXMgMSAzLzEwODEsIG9yIDEwNzgvMTA4MS4gU28sIG91ciBmaW5hbCBwcm9iYWJpbGl0eSBpcyAxOC80OSAgMTA3OC8xMDgxLCBvciAzOTYvMTA4MSwgZ2l2aW5nIHlvdSBhbiBhcHByb3hpbWF0ZSAzNi42IHBlcmNlbnQgY2hhbmNlIG9mIGdldHRpbmcgYSBmdWxsIGhvdXNlLiAuLiAKV2hlcmUgZGlkIEkgY2xhaW0gdGhhdD8gSSBzYWlkIGl0IHJpZGljdWxvdXMgdG8gYmxhbWUgYSBwaWVjZSBvZiBtZWRpYSBmb3IgYSB0cmlwbGUgaG9taWNpZGUuCkZhdCBmcm9tIG90aGVyIGFuaW1hbHMgaXMgc2lnbmlmaWNhbnRseSBlYXNpZXIgZm9yIG91ciBvd24gc2tpbnMgdG8gcmVjb2duaXplIGFuZCB1c2UuIApCdXQgTGludXggaXMgbG92ZWx5LiAKSWYgdGhlIHNob2Ugd2FzIG9uIHRoZSBvdGhlciBmb290IGFuZCBGZXJuYW5kYSBkaWRuJ3Qgd2FudCB0byB0YWxrIHRvIEpvbmF0aGFuLCB0aGVuIGhlIHdhcyBtYWtpbmcgY29tbWVudHMgbGlrZSAiWW91IGNhbiBpZ25vcmUgbXkgbWVzc2FnZXMgYnV0IHlvdSB3b24ndCBpZ25vcmUgbWUgd2hlbiBJIHB1dCBpdCBvbiBwdWJsaWMgYmxhc3QhIiBJIGZlZWwgbGlrZSBwZW9wbGUgd291bGQgYmUgbW9yZSBvdXRyYWdlZC4gUGVvcGxlIHdvdWxkIGJlIGNyeWluZyBpdCdzIGhhcmFzc21lbnQgb3IgZW1vdGlvbmFsIG1hbmlwdWxhdGlvbiBhbmQgdGhhdCdzIDEwMCUgd2hhdCBJIHRoaW5rIEZlcm5hbmRhIGlzIGRvaW5nLiBJZiBzb21lb25lIGlnbm9yZXMgeW91ciBtZXNzYWdlcywgaXQncyBiZWNhdXNlIHRoZXkgYXJlbid0IGludGVyZXN0ZWQgaW4gdGFsa2luZyBhbmQgdHJ5aW5nIHRvIGZvcmNlIGNvbnRhY3QgaXNuJ3Qga29zaGVyLiAKRm9yIGV4YW1wbGUsIER1bmdlb25zIERyYWdvbnMgaXMgYSB0cmFkZW1hcmsgb2YgV2l6YXJkcyBvZiB0aGUgQ29hc3QuLiAKRXZlbiB0aG91Z2ggSSBub3QgYW4gZW5kb2NyaW5vbG9naXN0LCA1IG5tb2wvbCBzZWVtcyB2ZXJ5IHBlcm1pc3NpdmUuIE5vIHRyYW5zIHdvbWVuIEkga25vdyBvZiB3b3VsZCB3YW50IHRvIGJlIGFueXdoZXJlIG5lYXIgdGhhdCBoaWdoIGFuZCBuZWl0aGVyIHdvdWxkIGEgcHJlc2NyaWJpbmcgZG9jdG9yLi4gClRoZXJlIGEgcHJvZ3Jlc3Npb24gb2YgdGhpbmtpbmcgdGhhdCBUaGUgV2FsbCB0aGUgYmVzdCBhbGJ1bSB0aGVuIHRoaW5raW5nIEFuaW1hbHMgb3IgTWVkZGxlIGlzIHRoZSBiZXN0IGFsYnVtIGJlY2F1c2UgdGhlIFdhbGwgaXMgdG9vIG9idmlvdXMgYW5kIHRvbyBvdmVyIHRoZSB0b3AgdGhlbiB0aGlua2luZyB0aGF0IFBpcGVyIGF0IFRoZSBHYXRlcyBvZiBEYXduIGlzIHRoZSBiZXN0IGFsYnVtIGJlY2F1c2UgU3lkIEJhcnJldCB3YXMgc3VjaCBhIGdlbnVpcyBidXQgaW4gdGhlIGVuZCB5b3UgdWx0aW1hdGVseSByZWFsaXplIHRoYXQgVGhlIFdhbGwgaXMgdGhlIGJlc3QgYWxidW0uIEl0IFBpbmsgRmxveWQgYXQgdGhlaXIgbW9zdCBQaW5rIEZsb3lkLiAKU2luY2UgaXQgd2FzIGEgbGlnaHQgbGVhayBhbmQgbm90IGdlbmV0aWNzIHlvdSBzaG91bGQgYmUgYWxyaWdodCB0byBncm93IHRoZW0gb3V0LiBLZWVwIGEgY2xvc2UgZXllIG9uIGl0IGFuZCBpZiBpdCBoZXJtcywgcHVsbCBpdC4gCkp1YW4gVHJ1cXVpIHBvc2VzIGZvciBhIHBob3RvIHdpdGggaGlzIGJhYnkgZGF1Z2h0ZXIgSXNhYmVsbGEgTWFyaWUgYW5kIHdpZmUgTG9yZW5hIGFmdGVyIHNoZSBoYWQgYSBDIHNlY3Rpb24gYXQgU3QuIFBhdWwncyBIb3NwaXRhbCBpbiBkb3dudG93biBWYW5jb3V2ZXIgb24gV2VkbmVzZGF5LCBBdWcuIApIZSBsaWtlcyB0byBjaGV3IGJ1dCBvbmx5IGhpcyB0b3lzLCBpcyBjb21wbGV0ZWx5IGhvdXNlIGJyb2tlbiwgYW5kIGdlbnRsZSB3aGVuIHlvdSBwbGF5IHdpdGggaGltIChrbm93cyB0byBkcm9wIGEgYmFsbCBmb3IgeW91IGFuZCBub3QgdG8gYml0ZSBoYXJkIHdoZW4gd3Jlc3RsaW5nKS4gSGUgaXMgZ29vZCB3aXRoIG90aGVyIGRvZ3MsIGNhdHMgKGZyb20gYSBwcmV2aW91cyBob21lKSwgYW5kIGtpZHMuIApBbnRpY2lwYXRlZCBkcm9wcyBpbiByZXZlbnVlIHJhbmdlIGJldHdlZW4gMTUgYW5kIDQwIHBlciBjZW50IGluY2x1ZGluZyB0aGUgcHJlZGljdGlvbiBzb21lIGxvY2FsIGNsdWJzIGFscmVhZHkgZmFjaW5nIG1hcmdpbmFsIGluY29tZXMgd2lsbCBjbG9zZS4KTWFnbmV0aWMgZmllbGQgdGhlcmFweSBhbmQgbmV1cmFsIHRoZXJhcHkgYXBwZWFyIHRvIGhhdmUgYSBzaG9ydCB0ZXJtIGFtZWxpb3JhdGl2ZSBlZmZlY3Qgb24gdGhlIHBoeXNpY2FsIE1TIHN5bXB0b21zLiAKSSByZXBvcnRlZCBhbGwgb2YgdGhpcyBiYWNrIHRvIG15IGZyaWVuZHMsIHRoZSBwb3RlbnRpYWwgcGFyZW50cywgYW5kIHdlIHNwZW50IHRoZSByZXN0IG9mIHRoYXQgd2VlayBpbiBEZW52ZXIgZ29pbmcgb3ZlciBldmVyeXRoaW5nLiBXb3VsZCB0aGUgYmFieSBrbm93IHdobyB0aGVpciBiaXJ0aCBwYXJlbnRzIHdlcmU/IFdoYXQgc29ydCBvZiByZWxpZ2lvbiB3b3VsZCB0aGV5IGJlIHJhaXNlZCB3aXRoPyBTcGFua2luZ3M/IEVkdWNhdGlvbj8gTmFtZXM/IEFueXRoaW5nIEkgY291bGQgdGhpbmsgb2YuIEFuZCB3aGVuIEkgcmFuIG91dCBvZiBxdWVzdGlvbnMsIEkgY2FsbGVkIG15IG1vdGhlci4uIApPbWFoYS84IGdhbWVzLCBlc3BlY2lhbGx5IG9uIHRoZSBJbnRlcm5ldCwgYXJlIGZpbGxlZCB3aXRoIHBsYXllcnMgd2hvIGRvbid0IGtub3cgaG93IHRvIHBsYXkgdGhlIGdhbWUuIEFsbW9zdCBhbGwgT21haGEvOCBwbGF5ZXJzIGFyZSBjdXJyZW50IG9yIGZvcm1lciBUZXhhcyBIb2xkJ2VtIHBsYXllcnMgd2hvIHVzZSB0aGUgc2FtZSB0aG91Z2h0IHByb2Nlc3MgYW5kIG1lbnRhbGl0eSB3aGlsZSBwbGF5aW5nIE9tYWhhLzggYXMgd2hlbiB0aGV5IHBsYXllZCBIb2xkJ2VtLiAKVGhlIG90aGVyIGlzIHRvIGZvbGQgeW91ciBoYW5kLCB3aGljaCB3aWxsIGNvc3QgeW91IGFsbCB0aGUgbW9uZXkgaW4gdGhlIHBvdC4gT2J2aW91c2x5IGZvbGRpbmcgeW91ciBoYW5kIHdpbGwgYmUgYSBmYXIgbW9yZSBjb3N0bHkgbWlzdGFrZSB0aGVuIG1lcmVseSBjYWxsaW5nIGEgYmV0LiAKVGhleSB3ZXJlIG1hcnJpZWQgZm9yIGFib3V0IDEwIHlycyBiZWZvcmUgdGhleSBkaXZvcmNlZC4gCkNoZWFwIG9wdGlvbjogZGlsZG9zIHdpdGggYSBzdWN0aW9uIGN1cCBlbmQgKHRoZXJlIGFyZSBhIExPVCBvZiB0aGVzZSkgY2FuIGJlIG1vdW50ZWQgb24gd2FsbHMgYW5kIGZ1cm5pdHVyZSBvciB0aGUgd2FsbCBvZiB5b3VyIHNob3dlciBvciB3aGVyZXZlciByZWFsbHkuIEkgc3VnZ2VzdCBidXlpbmcgb25lLCBtb3VudGluZyBpdCBzb21ld2hlcmUgeW91IGNhbiBzdWNrL3BlbmV0cmF0ZSB5b3Vyc2VsZiBvbiwgYW5kIHVzZSB0aGF0IGF0IG9uZSBlbmQgYW5kIHlvdXIgYm95ZnJpZW5kIGF0IHRoZSBvdGhlci4uIApXaGF0IGhhcHBlbnMgbm93IGlzIHRoYXQgaW4gbXkgZHJlYW0sIEkgYW0gc2VudCBiYWNrIHRvIG15IGZyaWVuZCBob3VzZSwgYmFzaWNhbGx5IGp1c3QgcmVsaXZpbmcgdGhlIGRheSBhZ2FpbiwgaG93ZXZlciwgbXkgcGVyc3BlY3RpdmUgc3VkZGVubHkgY2hhbmdlcy4gTXkgc2lnaHQgaXMgbm93IGx5aW5nIG9uIHRoZSBncm91bmQgKGxpa2UgaWYgSSB3YXMgbHlpbmcgZG93biBvbiB0aGUgZmxvb3IsIGxvb2tpbmcgYXQgdGhlIGJlZCkgYnV0IG15IGZyaWVuZCBhbmQgSSBhcmUgc3RpbGwgZG9pbmcgd2hhdCB3ZSBkaWQgICBzbyBJIGtpbmQgb2Ygc3dpdGNoZWQgdG8gYSB0aGlyZCBwZXJzb24uIEkgbm93IHNlZSBteSBmcmllbmQgc2l0dGluZyBvbiB0aGUgYmVkLCBteSBwaG9uZSBmYWxsaW5nIGRvd24gb24gdGhlIGZsb29yLCBhbmQgaGltIGtpY2tpbmcgdGhlIHBob25lIHVuZGVyIHRoZSBiZWQgd2l0aCBoaXMgaGVlbCAobm90IGludGVudGlvbmFsKS4uIApEb2VzIFRpZ2VycyBSZWJ1aWxkIE1lYW4gTm8gRXhwZWN0YXRpb24gT2YgQ29udGVuZGluZz8iSSBkb24gdGhpbmsgYW55Ym9keSBsaWtlcyBhIHJlYnVpbGQuIEkgdGhpbmsgZXZlcnlib2R5IHdvdWxkIHJhdGhlciBoYXZlIGEgdGVhbSB0aGF0IHByZXBhcmVkIHRvIHdpbiBhIGh1bmRyZWQgZ2FtZXMgYW5kIGdldCBpbnRvIHRoZSBwbGF5b2ZmcyAgIGFzIHdlIHdvdWxkLCIgZ2VuZXJhbCBtYW5hZ2VyIEFsIEF2aWxhIHNhaWQuICJCdXQgaXQgaXMgYSBwYWluZnVsIHByb2Nlc3MuIgpCbHVmZmluZ05vdywgdGhlb3JldGljYWxseSB5b3UgY291bGQgd2luIGEgZ2FtZSBvZiBwb2tlciBqdXN0IHRocm91Z2ggc2hlZXIgbHVjayBvZiB0aGUgY2FyZHMgYW5kIGRyYXdpbmcgYSByb3lhbCBmbHVzaC4gVGhlIG9kZHMgb2YgdGhpcyBhcmUgYXN0cm9ub21pY2FsLCBidXQgdGhlbiBhZ2FpbiBnYW1ibGVycyBoYXZlIHN0YWtlZCBjYXJlZXJzIG9uIGJlYXRpbmcgdGhlIG9kZHMgZm9yIGNlbnR1cmllcy4gClpvIHZvbmRlbiB3ZSBlZW4gY2FjaGUgYmlqIGRlIGFtYmFzc2FkZSB2YW4gSXJhayAoISwgaGFyZCBiZXdhYWt0IG5hdHV1cmxpamspIGJpaiBlZW4gbW9vaSBvdWQgaG91dGVuIGJsYXV3IGh1aXMgKFBvZ29kaW4gd29vZGVuIGh1dCwgMTlkZSBlZXV3KSwgaGV0IE1haWRlbiBGaWVsZCdzIHBhcmtqZSBlbiBoZXQgcHJhY2h0aWdlIGtsZXVycmlqa2UgKHdpdCwgcm9vZCwgZ3JvZW4sIGdvdWQpIGtlcmtqZSBDaHVyY2ggb2YgU3QuIApDQlMgU2VhdHRsZQpJZiB5b3UncmUgc2Vla2luZyBhIHF1YWxpZmllZCB0cmFkaXRpb25hbCBDaGluZXNlIGhlcmJhbGlzdCwgdGhlIE5DQ0EgYWxzbyBwcm92aWRlcyBhIGxpc3Qgb2YgcHJhY3RpdGlvbmVycyB3aG8gaGF2ZSBwYXNzZWQgdGhlaXIgZXhhbSBvbiBoZXJiYWwgbWVkaWNpbmUuIApNYWkgMjAxNCBpc3QgZXMgd2llZGVyIHNvIHdlaXQ6IERpZSBUcmFuc3Z1bGNhbmlhLCBkYXMgZ3J0ZSBzcG9ydGxpY2hlIEVyZWlnbmlzIExhIFBhbG1hcyBmaW5kZXQgc3RhdHQgdW5kIGRpZSBnYW56ZSBJbnNlbCBpc3QgaW0gQXVzbmFobWV6dXN0YW5kIi4gCkJ1dCB0aGlzIHN5c3RlbSBpcyB0aGUgQkVTVCBmb3IgYmVnaW5uZXJzLiAKSG9uLCAyOSwgYW5kIGhpcyBmaWFuYyBBbm5hIE5ndXllbiwgMjcsIGxpdmUgaW4gYSA5OTAgc3F1YXJlIGZvb3QsIHR3byBsZXZlbCBwdXJwb3NlIGJ1aWx0IGxvZnQgbmVhciBDaXR5IEhhbGwuIApUaGV5IGNvdWxkIHN0aWxsIGFkZCAkNDgwIHRvIHRoZWlyIFJSU1BzIGFuZCAkNTAwIHRvIFRGU0FzIGVhY2ggbW9udGgsIGFzIHRoZXkgZG8gbm93LCBhbmQgYm9vc3QgdGhlc2UgY29udHJpYnV0aW9ucyB3aXRoIGxlZnRvdmVyIGNhc2guLiAKTXkgZGFkIHdhcyBjb25zdGFudGx5IGF0IHdvcmsgb3Igb24gYnVzaW5lc3MgdHJpcHMuIApXaXJkIGRhcyBCbHV0IHp1IHNhdWVyLCBrbm5lbiBkaWUgcm90ZW4gQmx1dGtycGVyY2hlbiwgZGllIGRlbiBTYXVlcnN0b2ZmIHRyYW5zcG9ydGllcmVuLCBpaHJlIEF1ZmdhYmUgbmljaHQgcmljaHRpZyBlcmZsbGVuIHVuZCB1bnNlcmUgemVsbGVuIGJla29tbWVuIHp1IHdlbmlnIFNhdWVyc3RvZmYuIFN1cmVuIHVuZCBHaWZ0c3RvZmZlIG1zc2VuIGltIEtycGVyIG5ldXRyYWxpc2llcnQgd2VyZGVuLi4gCkkgZG9uIHRoaW5rIHZpZXdlcnMgdW5kZXJzdGFuZCB0aGUgdGltZSBjb21taXRtZW50IGludm9sdmVkIGluIGJlaW5nIGEgZHJhZ29uLiAKWWVzLCB3ZSBrbm93IHRoYXQgaGF0ZXNwZWVjaCBhbmQgaGF0ZSBjcmltZXMgZ28gZG93biB3aGVuIHRoZWlyIGFjY2VzcyB0byByZWNydWl0bWVudCBpcyBzdHltaWVkIGFuZCB0aGF0IGlzIHdoYXQgbmVlZHMgdG8gaGFwcGVuLiBXZSBhbGwga25vdyB0aGlzLiAKV2hlbiBJIHJlYWxpemVkIHRoZXJlIHdhcyBubyB3YXkgSSB3YXMgZ2V0dGluZyBhIGpvYiwgbGV0IGFsb25lIGEgd2VsbCBwYWlkIG9uZSBiZWNhdXNlIGV2ZXJ5IHBpZWNlIG9mIGNsb3RoaW5nIEkgb3duZWQgd2FzIGJsYWNrIGFuZCBlZGd5IGFzIGZ1Y2suIFdobyBoYXZlIGtub3duIHdlYXJpbmcgYSBDcmFkbGUgb2YgRmlsdGggc2hpcnQgd2l0aCAiZnVja2VkIGJ5IGplc3VzIiwgYW5kICJmaW5nZXJlZCBieSBnb2QiIHdpdGggcmVzcGVjdGl2ZSBpbWFnZXMgb24gdGhlIGZyb250IGFuZCBiYWNrIGlzIGEgaHVnZSBubyBubyBhdCBhIGpvYiBpbnRlcnZpZXc/IEkgbmV2ZXIgYWN0dWFsbHkgZGlkIHRoYXQsIGJ1dCB0aGF0IG15IHBvaW50LiBJIGVuam95ZWQgdGhhdCBwb2ludCBvZiBteSBsaWZlLCBidXQgSSB3YXMgYSBraWQgZG9pbmcga2lkIHRoaW5ncy4gCkkgbWV0IHNvbWVvbmUgd2hvIHdhcyBzd2ltbWluZyBpbiBJY2VsYW5kIGFuZCBnb3QgYW4gYW5jaWVudCBtaWNyb29yZ2FuaXNtIGluIGhpcyBlYXIgYWZ0ZXIgZ2xvYmFsIHdhcm1pbmcgZXhwb3NlZCBpdCBmcm9tIGdsYWNpYWwgaWNlLiBIZSBzcGVudCB5ZWFycyBnb2luZyBmcm9tIGRvYyB0byBkb2MgdG8gZG9jLCBoYWQgc3VwZXIgZXhwZW5zaXZlIHRyZWF0bWVudHMsIGFuZCBzdWZmZXJlZCBjb25zaWRlcmFibGUgcGFpbiB0aGF0IG5vIG9uZSBjb3VsZCBkaWFnbm9zZS4gRmluYWxseSBhIHNwZWNpYWxpc3QgZmlndXJlZCB0aGlzIG91dCBoZSdzIG9uZSBvZiBzaXggcGVvcGxlIG9uIHRoZSBwbGFuZXQgd2l0aCB0aGlzIHBhcnRpY3VsYXIgaXNzdWUuIFRoZXJlIGFyZSBhbGwgc29ydHMgb2YgaWxsbmVzc2VzIGh1bWFucyB3aWxsIHJlY2tvbiB3aXRoIGFzIHdoYXQgaGFzIGxvbmcgYmVlbiBidXJpZWQgaW4gaWNlIGNvbWVzIGludG8gY29udGFjdCB3aXRoIHVzLgpOb3Qgc3VyZSBJIHRocmlsbGVkIHdpdGggaGlzIGNvbW1lbnRzIGFib3V0IG5vdCBrbm93aW5nIHRoZSBzY2hlbWUgdW50aWwgd2Ugc2VlIHdoYXQgd2UgaGF2ZS4gTm90IHRoYXQgSSBleHBlY3RlZCBhbnl0aGluZyBkaWZmZXJlbnQgcmVhbGx5LCBqdXN0IG1ha2VzIGl0IHNlZW0gbGlrZSBvdXIgZ3V5cyBhbmQgZXZlbiBvdXIgY29hY2hlcyB3b24gaGF2ZSBtdWNoIHRpbWUgdG8gbGVhcm4gd2hhdGV2ZXIgZGVmZW5zZSBTcGFncyBtYW5hZ2VzIHRvIHB1dCB0b2dldGhlciBpbiB0aGUgd2Vla3MgYWZ0ZXIgT1RBcy4KRWRpdCAyOyBpbnNwaXJlZCBieSB0aGUgY29tbWVudHMgSSBwcmVzZW50OiBEaXNhc3RlciBIb3NwaXRhbCEhISFjaGFwdGVyIDEgb2YgbWFueSBwZXJoYXBzPwpJIGhvcGUgdGhpcyBpcyBhIHRyb2xsIG90aGVyd2lzZSwgcGxlYXNlIGRvbiBwYXNzIG9uIHlvdXIgZ2VuZXMsIHRoZSB3b3JsZCBkb2VzbiBuZWVkIG1vcmUgb2YgdGhpcyBpbiBpdC4KSXQgbm90IHJpZ2h0IGFzIGEgaHVtYW4gcHJvcG9ydGlvbmVkIGNoYXJhY3RlciBhbmQgdGhlIGJsdWUgZnVyIC8gaHVtYW5vaWQgYnV0IG51ZGUgdGhpbmcganVzdCBjb21lcyBvZmYgYXMgYSBiaWcgYnJhaW5mdWNrLiBUaGUgc3RvcnlzIGFyZSBhbHdheXMgdGhlIHNhbWU6IG1jIHdobyBuZXZlciBsb3NlcywxIGJlc3QgZnJpZW5kIG9mIG1jIHdobyBiYXJlbHkgKG9yIG5ldmVyKSBkdWVscywgMSBnaXJsIChhbmQgYSBjb3VwbGUgb2YgcmFuZG9tcykgd2hvIGxvc2UgZXZlcnkgaW1wb3J0YW50IG1hdGNoIGFuZCB0aGUgbWFpbiB2aWxsYWluIG9mIHRoZSAxc3Qgc2Vhc29uIEFMV0FZUyBiZWNvbWVzIGdvb2QgaW4gdGhlIDJuZCBzZWFzb24uIApUaGlzIGZvcm0gb2YgY2hlYXRpbmcgaXMgdmVyeSBoYXJkIGZvciB0aGUgaG91c2UgdG8gZGV0ZWN0LCBhbmQgaGFyZGVyIHN0aWxsIGZvciBpbmRpdmlkdWFsIHBsYXllcnMuIApGZWV0IGFuZ2xlIHJlYWxseSBkZXBlbmRzIG9uIGNvbWZvcnQgYW5kIGFuYXRvbXkuIApGb3IgdGhvc2UgUm9jaGVzdGFyaWFucyB3aG8gbXVzdCBnYW1ibGUsIGNhc2lub3MgYWxyZWFkeSBleGlzdCBpbiB0aGUgc3RhdGUuIENhc2lub3MgZG9uJ3QgZml0IGludG8gUm9jaGVzdGVyJ3MgaGlzdG9yeSBvciBmdXR1cmUuIEkgaG9wZSByZXNpZGVudHMgcmVtZW1iZXIgb3VyIHNoYXJlZCBsZWdhY3kgb2YgZWR1Y2F0aW9uLCBjdWx0dXJlLCBkaXNjaXBsaW5lIGFuZCBpbmR1c3RyeSBzbyBhcyB0byByZXNpc3QgdGhlIGZhbHNlaG9vZHMgdGhhdCB3aWxsIGNvbWUgd2l0aCBhbnkgcHJvcG9zYWwgZm9yIGEgY2FzaW5vLi4gCkxlIGdvdXZlcm5lbWVudCBIYXJwZXIgdmEgdCBpbCBjb250aW51ZXIgIGNyaW1pbmFsaXNlciBsIGRlIHNlcnZpY2VzIHNleHVlbHMgcGFyIGxlcyBjbGllbnRzIGV0IGxlIHByb3hudGlzbWU/IFZhIHQgaWwgZGNyaW1pbmFsaXNlciBsZSB0cmF2YWlsIGRlcyBwcm9zdGl0dWVzPwpXaGF0IHRoaXMgZ3V5IGRpZCB3YXMgY29sZCBibG9vZGVkIG11cmRlci4gSXQgd2FzbiBzb21lIGNyaW1lIG9mIHBhc3Npb24gd2hlcmUgaGUgc2F3IHRoZSBhY2N1c2VkIHN1c3BlY3QgYW5kIGZsZXcgaW50byBhIHZpb2xlbnQgcmFnZS4gCldlIGFyZSBub3QgYXNzb2NpYXRlZCB3aXRoIGFueW9uZSByZXZpZXdlZCBvbiB0aGlzIHNpdGUuIEJ1c2FuIEVzY29ydCBTZXJ2aWNlICAgQnVzYW4gSWYgeW91IGFyZSBsb25lbHkgaW4gQnVzYW4gICBTb3V0aCBLb3JlYSBhbmQgeW91IHJlYWxseSB3YW50IHNvbWVvbmUgdG8gYmUgeW91ciBsb3ZlciBkdXJpbmcgdGhlIGRheXRpbWUsIG5pZ2h0IG9yIGZvciB0aGUgb2NjYXNpb24geW91IHdhbnQgdG8sIHRoZW4gd2l0aG91dCBtdWNoIGFkbyBtYWtlIHN1cmUgdG8gaGlyZSBlc2NvcnQgZ2lybHMgZnJvbSBCdXNhbi4uIApNZXNzYWdlIHRoZSBtb2RzLgpMYW5laWdlIFdhdGVyIFNsZWVwaW5nIE1hc2sKVGhlIGNhcmRzIG9wZW4gd2VyZSBhIDIsNywgOCBhbmQgMTAuIEkgaGFkIDggYW5kIDEwIGluIG15IGhhbmQuIApGaXJzdCwgaGF2ZSB5b3Ugc3BlbnQgYW55IHRpbWUgd29ya2luZyBpbiBhIGxhdyBmaXJtLCBvciBmb3IgYW55IGxhd3llcnMgdGhhdCBkbyB0aGUga2luZCBvZiBsYXcgeW91IG1pZ2h0IHdhbnQgdG8gcHJhY3RpY2U/IElmIG5vdCwgZG9uIGV2ZW4gdGhpbmsgYWJvdXQgZ29pbmcgdG8gbGF3IHNjaG9vbCBiZWZvcmUgZG9pbmcgdGhhdC4gV2h5PyBCZWNhdXNlIHRoZSBpZGVhIG9mIGJlaW5nIGEgbGF3eWVyIGlzIGdyZWF0LCBidXQgdGhlIHJlYWxpdHkgb2YgYmVpbmcgYSBsYXd5ZXIgZnVja2luZyBzdWNrcyBhbmQgeW91IG5lZWQgdG8gZmluZCB0aGF0IG91dCBiZWZvcmUgeW91IHNwZW5kICQxNTBrIG9uIGFuIGVkdWNhdGlvbi4uIApIb3dldmVyLCB0aGV5IGRlZmluaXRlbHkgZGVjaWRlZCB0aGF0IHRoZXkgZGlkIG5vdCB3YW50IHRoZSBkb2cuIFNvdXJjZXMgY2xvc2UgdG8gRmFyaXMgYW5kIFByYXR0IHRvbGQgVE1aIHRoYXQgdGhlIGNvdXBsZSBoYWQgZm91bmQgYSAibmljZSBmYW1pbHkgaG9tZSIgZm9yIFBldGUuIApJIHVzZWQgdG8gd2FsayBwYXN0IGEgdGVudCBjaXR5IChqdXN0IGFkamFjZW50IHRvIHRoZSBzaGVsdGVyKSB0byBnZXQgdG8gd29yaywgYW5kIHdoaWxlIEkgZGlkIGhhdmUgc29tZSBpbnRlcmVzdGluZyBlbmNvdW50ZXJzIChJIG9uY2Ugd2F0Y2hlZCBhIGZ1bGx5IGNsb3RoZWQgYmFyZWZvb3QgbWFuIHB1bGwgaGltc2VsZiBvdXQgb2YgYSByZXRlbnRpb24gcG9uZCBhbmQgd2FsaywgZHJpcHBpbmcgd2V0LCB0byB0aGUgbmVhcmJ5IGhvc3BpdGFsKSwgSSBuZXZlciBmZWx0IHVuc2FmZSBvciBoYXJhc3NlZC4uIApMaWtlIGhlciBiaXRjaCBhc3MgbW9tbXkgY291bGQgZG8gYW55dGhpbmcgZm9yIGhlci4gSmFtZXMgcGlja2VkIHVwIGEgcm9jayBhbmQgc21hc2hlZCBpdCBpbiBoZXIgaGVhZC4gCkhlbnJ5IG9mIEplZmZlcnNvbi4gCkknbSBzdGlsbCBhdCBjb2xsZWdlLCBoYXZlbid0IGJ1aWxkIGFueXRoaW5nIGFtYml0aW91cyB5ZXQgYW5kIHdhbnRpbmcgdG8gdGFja2xlIGEgcHJvYmxlbSB0aGF0IHdpbGwgaG9sZCBteSBpbnRlcmVzdCBpbiB0aGUgbG9uZyB0ZXJtLiBJJ20gbmV3IHRvIHRoZSBmaWVsZCBvZiBBSS4gClRoZSBtb3N0IGNvbW1vbiB0eXBlIG9mIGhhaXIgbG9zcyBpcyBtYWxlIG9yIGZlbWFsZSBwYXR0ZXJuIGJhbGRuZXNzICAgb3IgYW5kcm9nZW5ldGljIEFsb3BlY2lhICAgd2hpY2ggaXMgY2F1c2VkIGJ5IGdlbmV0aWNzLiAKQSBQcmFjdGljYWwgR3VpZGUgdG8gTWluZGZ1bG5lc3Mgb2YgQnJlYXRoaW5nIGFuZCBUcmFucXVpbCBXaXNkb20gTWVkaXRhdGlvbi4gaGlnaGVzdCBxdWFsaXR5IGJvb2tzIG9uIEJ1ZGRoaXNtIGFuZCBtaW5kZnVsIGxpdmluZy4gV2UgaG9wZSB0aGlzIGJvb2sgd2lsbCBiZSAuIGluZyBtaW5kZnVsbmVzcy4gQ29tYmluaW5nIG1lYW5pbmdmdWwgZXhhbXBsZXMgLiBFaWdodCBtaW5kZnVsIHN0ZXBzIHRvIGhhcHBpbmVzcyA6IHdhbGtpbmcgdGhlIHBhdGggb2YgdGhlLiBCdWRkaGEgLiBlc3NlbmNlIG9mIGEgZ29vZCBsaWZlLiAKSGFuZHdyaXRpbmcgcmVxdWlyZXMgdG9vbHMgYW5kIHRpbWUsIHNvIHlvdXIgbW9yZSBoaWdoIHZvbHVtZSBjcmVlcGVycyBoYWQgd2hhdCBhbW91bnRlZCB0byBhIGxhYm9yIHByb2JsZW0gICBtYW55IHRhcmdldHMgYnV0IGxpbWl0ZWQgYW1tby4gVGh1cywgdGhlIGRpcnR5IG5vdmVsdHkgY2FyZCB3YXMgYm9ybi4gQSBwcmUgcHJpbnRlZCwgZWFzaWx5IGxlZ2libGUsIGFuZCB0b3RhbGx5IGNvbnZlbmllbnQgbWV0aG9kIG9mIGNhcnBldGJvbWJpbmcgcGVvcGxlIHdpdGggcmFuZG9tIGNvbWUgb25zLiAKV2UgZHJvcHBlZCB0aGVtIG9mZiBhdCBhIGhvc3RlbCB3aXRoIGhhbW1vY2tzIGFuZCBhbGwgSSBjb3VsZCB0aGluayB3YXMgdGhhdCBJIGFtIGRlZmluaXRlbHkgdG9vIG9sZCB0byBzdGF5IGluIHBsYWNlcyB0aGF0IGFyZSAkNCBhIG5pZ2h0ISBPdXIgaG90ZWwgaGFkIHJlY29tbWVuZGVkIHdlIGdvIHRvIFBsYXlhIFJvY2EgaW4gTGFzIFBlbml0YXMuIApBbHRob3VnaCBDZXJlYnJhbCBJbWFnaW5nIHJlc3QgaW4gcGVhY2Ugd2lsbCBzb29uIGJlIGJhbm5lZCwgaXQncyBhbiBIQiBJRCB0aGF0IHJlYWxseSB1bmxvY2tzIHRoZSBpZGlvdGljIGZ1biBvZiB0aGUgY29ycCBzaWRlIG9mIE5ldHJ1bm5lci4gSGF2aW5nIDE1KyBjYXJkcyBpbiBoYW5kIGFuZCB0YWtpbmcgMTAgY2xpY2sgdHVybnMgY2FuIGdpdmUgYSBraW5kIG9mIEFuYXJjaCwgSURHQUYgZmVlbCB0byBwbGF5aW5nIGNvcnAuIApJIGhhdmUgbmV2ZXIgbWV0IGEgY2hpcm9wcmFjdG9yIHdobyBkaWRuIHdhbnQgdG8gZG8gbG90cyBvZiB4IHJheXMgYW5kIHJlcGVhdGVkIHZpc2l0cyBmb3IgbWFuaXB1bGF0aW9ucy4gQWxzbywgYSBsb3Qgb2YgY2hpcm9wcmFjdG9ycyBhcmUgaW50byB3b28uIFRoZXkgd2lsbCB0cnkgdG8gc2VsbCB5b3UgaG9tZW9wYXRoaWMgbWVkcywgZXNzZW50aWFsIG9pbHMsIGNyeXN0YWxzLCBzcGVjaWFsIGRpZXQgc3VwcGxlbWVudHMsIGFuZCB0aGUgbGlrZS4gClVuZSByc2lzdGFuY2UgcGx1cyBvdSBtb2lucyBwYXNzaXZlIHMgUGx1dHQgcXVlIGQgc29uIHByb3NseXRpc21lIGp1c3F1IGxhIGN1bG90dGUsIGwnZ2xpc2UgZXV0IHVuZSBpZGUgZ25pYWxlLiAKKFRvIGJlIGNsZWFyLCBJIHRhbGtpbmcgcGFydGljdWxhcmx5IGFib3V0IGNhcmQgcmVtb3ZhbCBlZmZlY3RzLCB3aGljaCBhcmUgYWx3YXlzIHByZXNlbnQsIGV2ZW4gaW4gcmFuZ2UgdnMuIApBbmQgaWYgaGUgY2hlY2svcmFpc2VkIHRoZSBudXQgZmx1c2ggZHJhdyBvbiB0aGUgZmxvcCwgaGUgd29uIGJlIGxlYWRpbmcgdGhlIHR1cm4gdmVyeSBvZnRlbi4gQWxsIDEvMiBwbGF5ZXJzIGFyZSBjaGVja2luZyB0byBpbmR1Y2UgYWN0aW9uLgpJIGhhdmUgYSBzaWNrIHNlbnNlIHdoZW4gaXQgY29tZXMgdG8gdGhlc2UgdHlwZXMgb2YgdGhpbmdzLiBJdCBpcyBhbG1vc3Qgc3Bvb2t5LCBiZWNhdXNlIEkgY2Fubm90IHR1cm4gYSBibG9uZGUgZXllIHRvIHRoZXNlIGdsYXJpbmcgZmxhd3MgaW4geW91ciByaGV0b3JpYy4gSSBoYXZlIHplcm8gdGFsbGVyIGFudHMgd2hlbiBpdCBjb21lcyB0byBwZW9wbGUgc3BvdXRpbmcgb3V0IGhhdGUgaW4gdGhlIG5hbWUgb2YgbW9yYWwgcmlnaHRlb3VzbmVzcy4gCktyYXRvbS4gClRoZSBsb2JieSBpbiBvbmxpbmUgcG9rZXIgcm9vbXMgaGF2ZSB0byBiZSBnaXZlbiBhdHRlbnRpb24gYmVjYXVzZSBpdCBpcyBhcyB2aXRhbCBhcyBwbGF5aW5nIHRoZSBnYW1lIGl0c2VsZi4gWW91IGNhbiBnbyB0byB0aGUgdmFyaW91cyBvbmxpbmUgcG9rZXIgcm9vbXMgYW5kIHdhbGsgYXJvdW5kIHRoZSBzaXRlIHNvIHRoYXQgeW91IGNhbiBjaGVjayB0aGUgZ2FtZXMgYmVpbmcgcGxheWVkIGFuZCB0aGUgbGltaXRzIHRoZXNlIGdhbWVzIGhhdmUuIApLZWVwIGFza2luZyBmb3IgYWR2aWNlIGZyb20gcGVvcGxlLCBhbmQgaWYgc29tZW9uZSBvZmZlcnMgeW91IGhlbHAgdGhlbiBhc2sgZm9yIGEgbWVhbCBmb3IgcG9zdHBhcnR1bSBvciBvbiBiZWQgcmVzdC4gCk9yLCBpbiBhIHBsYWNlIHdoZXJlIHRoZSBtZWRpYW4gaW5jb21lIGlzICQxMTMsMDAwIGFuZCB0aGUgYXZlcmFnZSBob21lIHByaWNlICQ2ODQsMDAwLCBjb3VsZCBpdCBiZSBhIGJyb3RoZWwgbmV4dCBkb29yPwpXaGVuIHRoZSBSYXZlbnMgdGhyb3csIHRoZXkgYnJpbmcgaW4gYSBkaWZmZXJlbnQgUkIuIFRoZSB0ZWFtIGNhbiBydW4gaXRzIG9mZmVuc2UgdGhpcyB3YXkuIFRoZSBpbXByb3ZlbWVudCBvbiBvZmZlbnNlIGdvaW5nIGZyb20gRWR3YXJkcy9EaXhvbiB0byBhIHNpbmd1bGFyIGVsaXRlIFJCIHdvdWxkIG5vdCBiZSBhcyBub3RpY2VhYmxlIGFzIHlvdSB0aGluay4uIApPYmFtYSBhbHNvIChhcmd1YWJseSkgY29tbWl0dGVkIHdhciBjcmltZXMgYW5kIGJyb2tlIGludGVybmF0aW9uYWwgbGF3IGluIFN5cmlhLCBieSBzdXBwb3J0aW5nIHRoZSByZWdpbWUgY2hhbmdlIGludGVydmVudGlvbiBhZ2FpbnN0IEFzc2FkLiBXaGV0aGVyIG9yIG5vdCBBc3NhZCBpcyBhICJnb29kIGd1eSIgKGhlIG5vdCksIHRoZSBVUyBoYXMgbm8gcmlnaHQgdG8gcmVtb3ZlIGhpbS4Kd2hhdCBhcmUgc29tZSB0aGluZ3MgeW91IHdpc2ggeW91ciBjbGllbnRzIHdvdWxkIGRvCkN1c2hpb25raW4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28KKEJvdGggb2YgSGFuc2VuIEx2ZSdzIHBhcmVudHMgYXJlIHBoaWxvc29waHkgcHJvZmVzc29yczsgYnkgc2hlZXIgY29pbmNpZGVuY2UsIGhlciBtb20gdGF1Z2h0IEh1cHBlcnQncyBkYXVnaHRlciwgTG9saXRhLCBhdCBhIGx5Y2Ugbm9ydGggb2YgUGFyaXMgeWVhcnMgYmVmb3JlIHRoZSBmaWxtbWFrZXIgYW5kIGFjdHJlc3MgYmVnYW4gdGhlaXIgY29sbGFib3JhdGlvbi4pICJXZSB3ZXJlIHJlYWxseSBpbiB0dW5lIGR1cmluZyB0aGUgd2hvbGUgc2hvb3QsIiBIdXBwZXJ0IHNheXMgb2Ygd29ya2luZyB3aXRoIEhhbnNlbiBMdmUsIHdob3NlIGluc3RydWN0aW9ucyB0byBoZXIgbGVhZCBwZXJmb3JtZXIgd2VyZSBzaW1wbGUuIApEaWQgeW91IGtub3cgdGhhdCA5NSBwZXJjZW50IG9mIGFsbCByZXRhaWwgc2FsZXMgaW4gU3dlZGVuIGFyZSBjYXNobGVzcz8gQW5kIGRpZCB5b3Uga25vdyB0aGF0IHRoZSBnb3Zlcm5tZW50IG9mIERlbm1hcmsgaGFzIGEgc3RhdGVkIGdvYWwgb2YgImVyYWRpY2F0aW5nIGNhc2giIGJ5IHRoZSB5ZWFyIDIwMzA/IEFsbCBvdmVyIHRoZSB3b3JsZCwgd2UgYXJlIHNlZWluZyBhIHJlbGVudGxlc3MgbWFyY2ggdG93YXJkIGEgY2FzaGxlc3Mgc29jaWV0eSwgYW5kIG5vd2hlcmUgaXMgdGhpcyB0cnVlciB0aGFuIGluIG5vcnRoZXJuIEV1cm9wZS4gSW4gU3dlZGVuLCBodW5kcmVkcyBvZiBiYW5rIGJyYW5jaGVzIG5vIGxvbmdlciBhY2NlcHQgb3IgZGlzcGVuc2UgY2FzaCwgYW5kIHRob3VzYW5kcyBvZiBBVE0gbWFjaGluZXMgaGF2ZSBiZWVuIHBlcm1hbmVudGx5IHJlbW92ZWQuIEF0IHRoaXMgcG9pbnQsIGJpbGxzIGFuZCBjb2lucyBvbmx5IGFjY291bnQgZm9yIDIgcGVyY2VudCBvZiB0aGUgU3dlZGlzaCBlY29ub215LCBhbmQgbWFueSBzdG9yZXMgbm8gbG9uZ2VyIHRha2UgY2FzaCBhdCBhbGwuIApIb3dldmVyLCBhcyB3YXMgdGhlIGNhc2Ugd2hlbiBJIHdhcyAxNCBhbmQgYm91Z2h0IG15IGZpcnN0IHBhY2ssIHNvbWUgcmFuZG9tIGd1eSBhdCB0aGUgZ2FzIHN0YXRpb24gd2hvIGp1c3Qgd2FudHMgdG8gZWFybiBlbm91Z2ggZm9yIHJlbnQgYW5kIGEgc2l4IHBhY2sgZG9lc24ndCByZWFsbHkgZ2l2ZSBhIHNoaXQsIGFuZCBpcyB3aWxsaW5nIHRvIGp1c3Qga2luZGEgbG9vayB0aGUgb3RoZXIgd2F5IGZvciBhIHNhbGUuIApHb2xkZW4gR29vc2UgRGVsdXhlIEJyYW5kIEZyYW5jeSBHbGl0dGVyIFNuZWFrZXJzIEJlZ2lubmVyJ3MgR3VpZGUgVG8gZQpFdmVyeW9uZSBpc24gYm9ybiBpbiB0byB0aGUgcmlnaHQgZW52aXJvbm1lbnQgdG8gc3VjY2VlZCwgc28ganVzdCBzYXlpbmcgIndvcmsgaGFyZCIgaXMgYW4gZW1wdHkgcGxhdGl0dWRlLgpQUkVUU0VMTCwgSm9obiBTdGV3YXJ0IGFrYSAiUHJldHMiIE1pc3Npc3NhdWdhLCBPbnRhcmlvIChIYW1pbHRvbiBib3JuKSBBcHJpbCAyMywgMTk1NiAgIE9jdG9iZXIgMjMsIDIwMTIgSW4gaGlzICJCZWRkaWFuIiBCaXJ0aGRheSBZZWFyIFBlYWNlZnVsbHksIHN1cnJvdW5kZWQgYnkgaGlzIGZhbWlseSBhbmQgbG92ZWQgb25lcywgYWZ0ZXIgYW4gaW5jcmVkaWJsZSBiYXR0bGUgd2l0aCBjYW5jZXIsIHdoaWNoIGhlIGFjY2VwdGVkIGFuZCBoYW5kbGVkIGp1c3QgYXMgaGUgaGFuZGxlZCBoaXMgd2hvbGUgbGlmZSwgInN0cmFpZ2h0IHVwIi4gQSB3b25kZXJmdWwsIGxvdmluZyBhbmQgZGV2b3RlZCBIdXNiYW5kIHRvIENhdGhlcmluZSAoQ2F0aGkgUGl2YSkgZm9yIG92ZXIgMzUgeWVhcnMuIApBcHBCaWJsaWEgZGUgcHIgR1JBVElTLiBRdWVyZW1vcyBoYWNlciBtIGYgcGFyYSB1c3RlZCBwYXJhIGxlZXIgeSBjb21wYXJ0aXIgbGEgUGFsYWJyYSBkZSBEaW9zLiBUcmFkdWNjaW9uZXMgZGUgNTAgbGlicmUgeSBkZWNlbmFzIGRlIHBsYW5lcyBkZSAuCkxvb2sgYXQgdGhlIGZsb29yIGFuZCB5b3Ugd2lsbCBzZWUgdGhlIHVnbGllc3QgY2FycGV0aW5nIHlvdSBoYXZlIGV2ZXIgc2VlbjsgdGhhdCBpcyB0aGVyZSBvbiBwdXJwb3NlIHRvIGtlZXAgeW91IGxvb2tpbmcgdXAsIG5vdCBkb3duLiBCdXQgdGhlIGZsb29yIHdpbGwgYWxzbyBzaG93IHlvdSB3aGVyZSB0aGUgbWFpbiB3YWxrd2F5cyBhcmUsIHNob3VsZCB5b3UgYmVjb21lIGxvc3QuIEFsc28gbm90aWNlIHRoZSBvdmVyaGVhZCBzaWducyB0aGF0IGluZGljYXRlIGRpZmZlcmVudCBhcmVhcyBhbmQgaG93IHRvIGdldCBiYWNrIHRvIHdoZXJlIHlvdSB3ZXJlLi4gCkEgQ2FubmFiaXMgc2F0dmlhIHZhcmlldHkgd2l0aCBhbiBhYm5vcm1hbCBjaHJvbXNvbWFsIGNvdW50IHdvdWxkIHN0aWxsIGJlIENhbm5hYmlzIHNhdHZpYS4gCkhlIGhhZCBjcm9zc2VkIGludG8gQ2hpbGUgb24gTW9uZGF5LCBuZWFybHkgYSBkYXkgYWZ0ZXIgbGVhdmluZyB0aGUgTGltYSBob3RlbCAgIGZpdmUgeWVhcnMgdG8gdGhlIGRheSBhZnRlciBIb2xsb3dheSdzIGRpc2FwcGVhcmFuY2UuCkFjY29yZGluZyB0byBKYW1lcyBOZWlsbCwgdGhlIEdyZWVrIHRlcm0gInBhaXMiIHVzZWQgZm9yIHRoZSBzZXJ2YW50IGluIE1hdHRoZXcgYWNjb3VudCBhbG1vc3QgYWx3YXlzIGhhZCBhIHNleHVhbCBjb25ub3RhdGlvbi4gSW4gc3VwcG9ydCBvZiB0aGlzIHZpZXcsIGhlIHJlbWFya3MgdGhhdCB0aGUgd29yZCBwYWlzLCBhbG9uZyB3aXRoIHRoZSB3b3JkICJlcmFzdGhhaSIgKHRvIGxvdmUpIGlzIHRoZSByb290IG9mIHRoZSBFbmdsaXNoIHdvcmQgInBlZGVyYXN0eSIuIEhlIHNlZXMgaW4gdGhlIGZhY3QgdGhhdCwgaW4gTHVrZSBwYXJhbGxlbCBhY2NvdW50LCB0aGUgY2VudHVyaW9uIHNlcnZhbnQgaXMgZGVzY3JpYmVkIGFzICJ2YWx1ZWQgaGlnaGx5IiBieSB0aGUgY2VudHVyaW9uIGFuIGluZGljYXRpb24gb2YgYSBob21vc2V4dWFsIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSB0d28sIGFuZCBzYXlzIHRoYXQgdGhlIEdyZWVrIHdvcmQgImRvdWxvcyIgdXNlZCBvZiBoaW0gaW4gTHVrZSBhY2NvdW50IHN1Z2dlc3RzIGhlIG1heSBldmVuIGhhdmUgYmVlbiBhIHNleCBzbGF2ZS4gRGFuaWVsIEEuIEhlbG1pbmlhayBhZ3JlZXMgdGhhdCB0aGUgd29yZCBwYWlzIGNvdWxkIGhhdmUgYSBzZXh1YWwgbWVhbmluZy4gVGhlb2RvcmUgVy4gSmVubmluZ3MgSnIuIGFuZCBUYXQgU2lvbmcgQmVubnkgTGlldyBmdXJ0aGVyIHdyaXRlIHRoYXQgUm9tYW4gaGlzdG9yaWNhbCBkYXRhIGFib3V0IHBhdHJvbiBjbGllbnQgcmVsYXRpb25zaGlwcyBhbmQgYWJvdXQgc2FtZSBzZXggcmVsYXRpb25zIGFtb25nIHNvbGRpZXJzIHN1cHBvcnQgdGhlIHZpZXcgdGhhdCB0aGUgcGFpcyBpbiBNYXR0aGV3IGFjY291bnQgaXMgdGhlIGNlbnR1cmlvbiAiYm95IGxvdmVyIiwgYW5kIHRoYXQgdGhlIGNlbnR1cmlvbiB0aGVyZWZvcmUgZGlkIG5vdCB3YW50IEplc3VzIHRvIGVudGVyIGhpcyBob3VzZSBmb3IgZmVhciBwZXJoYXBzIHRoYXQgdGhlIGJveSB3b3VsZCBiZSBlbmFtb3VyZWQgb2YgSmVzdXMgaW5zdGVhZC4KVGhlIHJlc2lnbmF0aW9uIG9mIEVsbGVuIFBhbyBhbmQgdGhlIGFwcG9pbnRtZW50IG9mIFN0ZXZlIEh1ZmZtYW4gYXMgQ0VPLCBkZXNwaXRlIGluaXRpYWwgaG9wZXMsIGhhcyBjb250aW51ZWQgdGhlIHNhbWUgdHJlbmQuCkZvY3VzIG9uIENvcmUgUXVhbGl0aWVzIFdoZW4gcHJlcGFyaW5nIGZvciBhbiBpbnRlcnZpZXcsIGZpZ3VyZSBvdXQgd2hhdCBzdHJlbmd0aHMgeW91IGhhdmUgdGhhdCBhbGlnbiB3ZWxsIHdpdGggdGhlIHBvc2l0aW9uLiBJbiBzZWxsaW5nLCBjb21tdW5pY2F0aW9uLCBwcmVzZW50YXRpb24gYW5kIGludGVycGVyc29uYWwgc2tpbGxzIGFyZSBuZWNlc3NhcnksIGZvciBpbnN0YW5jZS4gUmVpdGVyYXRpbmcgeW91ciB0b3Agc3RyZW5ndGhzIGZvciB0aGUgam9iIHRocm91Z2hvdXQgdGhlIGludGVydmlldyBoZWxwcyBlbnN1cmUgdGhlIGhpcmluZyBtYW5hZ2VyIHVuZGVyc3RhbmRzIHdoYXQgeW91IG9mZmVyLiBJZGVhbGx5LCB5b3UgaGF2ZSBzcGVjaWZpYyBhY2NvbXBsaXNobWVudHMgdG8gbm90ZSBpbiB5b3VyIHJlc3BvbnNlLiBZb3UgbWlnaHQgc2F5ICJSZWxhdGlvbnNoaXAgYnVpbGRpbmcgaXMgY3JpdGljYWwgaW4gZ3Jvd2luZyBzYWxlcyByZXN1bHRzLiBJIHdhcyB0aGUgdG9wIHNlbGxlciB0aGUgbGFzdCB0aHJlZSBtb250aHMgYXQgY29tcGFueSBYLCBsYXJnZWx5IGJhc2VkIG9uIG15IGFiaWxpdHkgdG8gY29tbXVuaWNhdGUgd2VsbCBhbmQgYnVpbGQgcmFwcG9ydCB3aXRoIGNsaWVudHMuIgpBZ2Ugb2YgY2hpbGRyZW4gKGV4Y2x1ZGluZyBwcmUgdGVybSBpbmZhbnRzKSByYW5nZWQgZnJvbSAyIHRvIDE2IHllYXJzLk91dGNvbWVzIGFzc2Vzc2VkIGluIHRoZSByZXZpZXdObyBpbmNsdXNpb24gY3JpdGVyaWEgcmVsYXRpbmcgdG8gb3V0Y29tZXMgd2VyZSBzcGVjaWZpZWQuIE91dGNvbWVzIHJlcG9ydGVkIGluIHN0dWRpZXMgb2YgcHJlIHRlcm0gaW5mYW50cyBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3IHdlcmUgcG9seWdyYXBoIHJlYWRpbmdzLCBCcmF6ZWx0b24gTmVvbmF0YWwgQmVoYXZpb3VyYWwgQXNzZXNzbWVudCBTY2FsZSAoQk5CQVMpLCB3ZWlnaHQsIFRob21hbidzIHNsZWVwL3dha2Ugc3RhdGUgY3JpdGVyaWEsIGZlZWRpbmcsIHN0b29saW5nLCBjYWxvcmljIGludGFrZSwgdHJhbnNjdXRhbmVvdXMgYmxvb2QgZ2FzIHByZXNzdXJlLCBhbmQgZGF5cyBpbiBob3NwaXRhbC5PdXRjb21lcyByZXBvcnRlZCBpbiBvdGhlciBjaGlsZHJlbiB3ZXJlIGRlcHJlc3Npb24gKG1lYXN1cmVkIGJ5IHRoZSBQcm9maWxlIG9mIE1vb2QgU3RhdGVzIGFuZCBDRVMgRCBzY2FsZSksIGFueGlldHkgKG1lYXN1cmVkIGJ5IHRoZSBTdGF0ZSBUcmFpdCBBbnhpZXR5IEludmVudG9yeSwgUmV2aXNlZCBDaGlsZHJlbidzIE1hbmlmZXN0IEFueGlldHkgU2NhbGUsIEJlaGF2aW91ciBPYnNlcnZhdGlvbiBTY2FsZSksIHNhbGl2YXJ5IGNvcnRpc29sIGxldmVscywgY29vcGVyYXRpb24sIG5pZ2h0dGltZSBzbGVlcCwgbW9vZCBzdGF0ZSAobWVhc3VyZWQgYnkgdGhlIEhhcHB5IEZhY2VzIFNjYWxlKSwgZW1vdGlvbmFsIHByb2JsZW1zIChtZWFzdXJlZCBieSBzZWxmIGRyYXdpbmdzKSwgcmVsYXhhdGlvbiBsZXZlbCAodmlzdWFsIGFuYWxvZ3VlIHNjYWxlKSwgcGFpbiAoVmFybmkvVGhvbXBzb24gUGFpbiBRdWVzdGlvbm5haXJlLCBDaGlsZCBhbmQgUGFyZW50IGZvcm1zKSwgc3RpZmZuZXNzLCBtZWFzdXJlcyBvZiBhdXRpc20gKHRvdWNoIGF2ZXJzaW9uLCBvZmYgdGFzayBiZWhhdmlvdXIsIG9yaWVudGluZyB0byBpcnJlbGV2YW50IHNvdW5kcywgc3RlcmVvdHlwaWNhbCBiZWhhdmlvdXJzLCBBdXRpc20gQmVoYXZpb3VyIENoZWNrbGlzdCwgRWFybHkgU29jaWFsIENvbW11bmljYXRpb24gU2NhbGVzIGFjdGl2aXR5KSwgYXN0aG1hIG1lYXN1cmVtZW50cyAodm9jYWxpc2luZywgYXN0aG1hIGF0dGl0dWRlLCBwZWFrIGFpciBmbG93KSwgY2xpbmljYWwgbWVhc3VyZXMgb2YgZGVybWF0aXRpcywgYW5kIHBlYWsgYWlyIGZsb3cgaW4gY2hpbGRyZW4gd2l0aCBjeXN0aWMgZmlicm9zaXMuIApQb2tpZXMgdGFyZ2V0IGluIEJlbmFsbGEgR29sZiBDbHViIHRoZWZ0cwpNeSBwYXJlbnRzIGRpZCB0aGlzIHRvIG1lLCBldmVuIGdvaW5nIHNvIGZhciBhcyB0byBjYWxsIG1lIHNlbGZpc2ggYW5kIHNheSBJIGxhY2tlZCByZXNwZWN0IGZvciBteSBlbGRlcnMgd2hlbiBJIG9wdGVkIG5vdCB0byBjb250aW51ZSB2b2x1bnRlZXJpbmcgbXkgd2Vla2VuZHMgZm9yIGhvdXNlIGNhbGxzIHRvIHRoZWlyIGVsZGVybHkgbmVpZ2hib3VycyBhbmQgZnJpZW5kcy4KSWYgaXQgZ2V0cyBhbnkgd29yc2UsIFRIRU4gSSBkbyBzb21ldGhpbmcuIEV4Y2VwdCwgbm8uIFlvdSB3b24gRXZlci4uIApUaGluayBhYm91dCwgb25seSBBcywgUXMsIEpzLCA5cyBvciA4cyBiZWF0cyBoaW07IGhvdyBtYW55IGNvbWJvcyBvZiBoYW5kcyB0aGF0IGluY2x1ZGUgdGhvc2UgcGFydGljdWxhciBjYXJkcywgZG9lcyBJa2UgaGF2ZSBpbiBoaXMgcmFuZ2U/LiAKSW5kZWVkLCBhcyBib3RoIG9mIHRoZW0gaGF2ZSBwbGF5ZWQgYSBsZWFkaW5nIHJvbGUgaW4gZGV2ZWxvcGluZyBpZGVhcyBvbiB0aGUgbmF0dXJlIG9mIGNvbnRpbmVudGFsIE5ldyBaZWFsYW5kLCBpdCB3b3VsZCBiZSBkaWZmaWN1bHQgdG8gZmluZCBhIHJldmlld2VyIHdobyBkaWQgbm90IGtub3cgdGhlbSwgYW5kIG1hbnkgb2YgdGhlIG90aGVyIHNjaWVudGlzdHMgd2hvIGZlYXR1cmUgaW4gdGhpcyB2b2x1bWUuLiAKWW91IHdpbGwgYWxzbyB1c2UgeW91ciBoYW5kcywgYXJtcyBhbmQgc2hvdWxkZXJzIHdoZW4gZGVtb25zdHJhdGluZyBleGVyY2lzZXMsIHN0cmV0Y2hlcyBhbmQgcHJvcGVyIHVzZSBvZiBlcXVpcG1lbnQuIApEaWQgeW91IGhhcHBlbiB0byBjYXRjaCB0aGUgZnJvbnQgcGFnZSB0aHJlYWQgYXdoaWxlIGJhY2ssIGFib3V0IGhvdyBhbnRpIGxpdHRlcmluZyBjYW1wYWlnbnMgd2VyZSBjcmVhdGVkIHRvIHNoaWZ0IGJsYW1lIGZyb20gd2FzdGVmdWwgaW5kdXN0cmllcyBvbnRvIGNvbnN1bWVycywgc28gdGhhdCB0aG9zZSBpbmR1c3RyaWVzIHdvdWxkbiBiZSByZWd1bGF0ZWQ/IEl0IHJlYWxseSBjaGFuZ2VkIG15IHRoaW5raW5nIG9uIHRoaXMuIApSaWdodCBhZnRlciB0aGUgbWF0Y2ggdGhlIFBlbm4gVGVsbGVyIFRoZWF0ZXIgaW5zaWRlIHRoZSBSaW8gTGFzIFZlZ2FzIGVuZGVkLCB0aGVyZSB3ZXJlIGxpa2UgMiBvciAzIGhvdXJzIG9mIGludGVydmlld3MsIHBob3RvcywgYXV0b2dyYXBocyBhbmQgc3R1ZmYgbGlrZSB0aGF0LiBUaGVuIGEgYnVuY2ggb2YgdXMgd2VudCBiYWNrIHRvIG91ciBzdWl0ZSBhdCB0aGUgUGFsYXp6by4gTXkgZmFtaWx5IGhhZCBjb21lIG91dCB0byBiZSB3aXRoIG1lLCBhbmQgSSBoYWQgYWJvdXQgMTAwIGZyaWVuZHMgd2hvIGNhbWUgb3V0IGZyb20gTWljaGlnYW4gdG8gY2hlZXIgbWUgb24gdG9vLiAKSSBkaWRuJ3Qga25vdyB3aGF0IHdvdWxkIGJlIGNvbWluZyBuZXh0IGJlY2F1c2UgZXZlcnkgY2hhcHRlciB3YXMgU08gZGlmZmVyZW50LiBBbW5lc3R5IGlzIGdvb2QgYW5kIEkgZG8gbG92ZSBsaXN0ZW5pbmcgdG8gdGhlIHBvZGNhc3QgYW5kIHRoZSBkeW5hbWljcyB0aGUgTWNFbHJveXMgaGF2ZSBidXQgdGhlIGZhY3QgdGhhdCBpdCdzIDEpIEZpbmQgbW9uc3RlciAyKSBGaWd1cmUgb3VyIG1vbnN0ZXJzIHdlYWtuZXNzIDMpIFNldCB0cmFwIGZvciBtb25zdGVyIDQpIERlZmVhdCBtb25zdGVyIGlzIGEgbGl0dGxlIHRvbyBib3R0bGVkIGZvciBtZS4gCkFuZCB0aGF0IHZpYmUgdGhleSByZWNhcHR1cmUgaGVyZSwgZXZlbiB3aGVuIHRoZXkgZ2V0IGFnZ3Jlc3NpdmUgb24gIlBhc3Npb25hdGUsIiBldmVuIHdoZW4gdGhleSdyZSBmaWd1cmF0aXZlbHkgb24gdGhlaXIga25lZXMgaG9waW5nIHlvdSdsbCB0YWtlIHRoZW0gYmFjaywgZXZlbiB3aGVuIGVtYnJhY2luZyBtYXRlcmlhbCBNYXggTWFydGluIHdvdWxkbid0IGV2ZW4gaGF2ZSBzaWduZWQgb2ZmIG9uIGZvciBmaWxsZXIgMjAgeWVhcnMgYWdvLiAKQ29uc3RydWN0aW9uIHN0YXJ0IGRlbGF5ZWQgb24gbmV3IEFtaGVyc3RidXJnIGhpZ2ggc2Nob29sIG1lYW5zIG9uZSBtb3JlIHNlYXNvbiBmb3IgcGFyayBnb2VycwpQcmVzaWRlbnQgT2JhbWEgc2lnbmVkIHRoZSBiaWxsIHRvIG5hbWUgYSBuZXcgZmVkZXJhbCBjb3VydGhvdXNlIGluIFl1bWEgYWZ0ZXIgZmVkZXJhbCBKdWRnZSBKb2huIE0uIApUaGUgdHJhZGUgbG9va2VkIGxvcHNpZGVkOyBSdXNzaWEgYWxyZWFkeSBoYWQgdGhlIGdyZWVucyBhbmQgZWFnZXJseSBhY2NlcHRlZC4gQ29tcGxhY2VudCwgaGUgaGFkbiBub3RpY2VkIE5vcndheSBwaWxlIG9mIGNhc2ggb3IgdGhlIGZhY3QgdGhhdCBhbGwgdGhlIHNoaW55IG1ldGFsIHRva2VucyB3ZXJlIGFwcHJvYWNoaW5nIHRoZSBsaWdodCBibHVlcy4gClByaW1ldmFsIE11ZGQgZm9ybWVybHkgUm95bW9uZG8KSmV0enQga25udGUgbWFuIGVudHdlZGVyIHNhZ2VuICJ3YXMgYmVzY2hmdGlndCBkaWNoIGVpZ2VudGxpY2ggZ2VyYWRlIHp1ciBaZWl0PyIsIG9kZXIgYWJlciBtYW4gaGF0IGVpbmUgc2lubmxvc2VzIHVuZCBvYmVyZmxjaGxpY2hlcyBHZXNwcmNoIGJlciAiZGFtYWxzIjsgb2RlciBtYW4gZml4aWVydCBzaWNoIGViZW4gYXVmIGRpZSBLaW5kZXIgKGRhenUga2FubiBqZWRlciBldHdhcyBzYWdlbiksIG9kZXIgYXVmIGRpZSBLcmFua2hlaXRlbiAoYXVjaCBkYSBrYW5uIGplZGVyIE1pdHJlZGVuKS4gV2FzIGR1IGRhIG1pdGJla29tbXN0LCBpc3QgbWVpbmVzIEVyYWNodGVucyBlaW5mYWNoIG51ciBTeW1wdG9tIGRlc3NlbiwgZGFzcyBkZWluZSBGYW1pbGllIHNpY2ggbmljaHRzIHp1IHNhZ2VuIGhhdDsgb2RlciB2aWVsbGVpY2h0IGF1Y2ggZWluZmFjaCBpbiBpaHJlbSBhbGx0Z2xpY2hlbiBMZWJlbiBzbyB3ZW5pZyBHZW1laW5zYW1rZWl0ZW4gaGF0LCBkYXNzIG1hbiBlYmVuIGJlciBPYmVyZmxjaGxpY2hlcyByZWRldC4gCkludGVybmF0aW9uYWwgV29tZW4ncyBEYXkgOCBNYXJjaFdvbWVuJ3MgRGF5IEhpc3RvcnkKSWYgeW91IGJvdGggc21va2Ugb3IgZXZlbiBpZiBvbmUgb2YgeW91IHNtb2tlcywgbm93IGlzIGEgZ3JlYXQgdGltZSB0byBxdWl0LiAKVGhlbiwgdGhlcmUgaXQgd2FzIGFnYWluLCBsb3VkZXIgYW5kIG1vcmUgdXJnZW50LiAKUG9rZXIgR2ViZW4genUgbGVybmVuIGJlaW5oYWx0ZXQsIGRhcyBBdXN0ZWlsZW4gZGVyIEthcnRlbiB6dSBiZW4sIHR5cGlzY2hlIEVpZ2Vuc2NoYWZ0ZW4gZWluZXMgR2ViZXJzIHp1IGVudHdpY2tlbG4gdW5kIG1pdCBlaW5pZ2VuIFZhcmlhdGlvbmVuIGRlcyBTcGllbHMgdmVydHJhdXQgenUgc2Vpbi4uIApMb29raW5nIGF0IHRoZSBJcmlzaCBwYXJ0eSBJIGxpbmtlZCBoZXJlLCB0aGV5IHJlY2VudGx5IHdvbiBhIGNvdXJ0IGJhdHRsZSBpbiB3aGljaCB0aGVyZSB3YXMgYW4gYXR0ZW1wdCB0byBwdXQgbWVtYmVycyBpbiBwcmlzb24gcmVhbGx5IGRvZGd5IHJlYXNvbnMuIFRoZWlyIHNpc3RlciBwYXJ0eSBpbiBFbmdsYW5kIGhhcyBzdWZmZXJlZCBwb2xpY2UgaW5maWx0cmF0aW9uIGFuZCBibGFja2xpc3Rpbmcgb2YgbWVtYmVycy4gU2ltaWxhcmx5IGluIHRoZSBVU0EsIHRoZSBvZmZpY2lhbCBjb21tdW5pc3QgcGFydHkgd2FzIGluZmFtb3VzbHkgcmlkZGxlZCB3aXRoIENJQS4uIApUaGUgSW52ZW50aW9uIG9mIEJvZHkgT2lscwpRdWl0ZSBhIGZldyB3ZWJzaXRlcyBvZmZlciBQb2tlciBHYW1lcyBhbmQgZG9uJ3QgY2hhcmdlIGZvciB0aGlzIHNlcnZpY2UuIApDb3VudGxlc3MgaW5kaXZpZHVhbHMgaGF2ZSBzcG9rZW4gb3V0IGFnYWluc3QgdGhhdCB3YXkgb2YgbGlmZSB0aHJvdWdob3V0IHJlY29yZGVkIGhpc3RvcnkuIApNeSBib3lmcmllbmQgZGlkbiBiZWxpZXZlIG1lLiAKQSBzbWFsbCBjYXIgdmlld2VyIHByb2dyYW0gd2hpY2ggY2FuIGhlbHAgd2l0aCBza2lubmluZyBmb3IgTEZTIGNhcnMuIFRvIHVubG9jayBMRlMsIHlvdSBuZWVkIGFuIFMxLCBTMiBvciBTMyBsaWNlbnNlIChpbmZvIC8gc2hvcCksIGFuZCB5b3VyIGNvbXB1dGVyIC4gRG93bmxvYWQgdGhlIExpdmUgZm9yIFNwZWVkIHRvcnJlbnQgZmlsZS4gTGF0ZXN0IHZlcnNpb24uIApPaCBhbmQgSGlnaC9sb3cgc3BsaXQ/IEd1aWxsb3RpbmU/CkhlIHdhcyBqdXN0IHNvIGdvb2QuLiAKVGhlIFVTU0YgZGlkIG5vdCBoYXZlIGFuIGltbWVkaWF0ZSBjb21tZW50LiBuYXRpb25hbCB0ZWFtcyBoYXZlIHNlcGFyYXRlIGNvbGxlY3RpdmUgYmFyZ2FpbmluZyBhZ3JlZW1lbnRzLCBhbmQgdGhlaXIgcGF5IGlzIHN0cnVjdHVyZWQgZGlmZmVyZW50bHkuIFRoYXQgbWVhbnMgdGhlcmUgaXMgbm8gZG9sbGFyIHRvIGRvbGxhciBzYWxhcnkgY29tcGFyaXNvbi4KTWF5IGNhdXNlIGVyZWN0aWxlIGR5c2Z1bmN0aW9uIGFmdGVyIHBlcmZvcm1lZC4gClRoZXJlIGp1c3Qgd2FzbiB0aGUgc25vdyBmb3IgaXQuIApJdCBvbmx5IGNhdXNlcyBtb3JlIHByb2JsZW1zIGFuZCB3aWxsIGJlIHVzZWQgYWdhaW5zdCB5b3UuLiAKTmF0aW9uYWwgaWRlbnRpdHkgaXNuIHRoZSBpc3N1ZSBoZXJlLCBpdCBpcyB0aGVpciByYWNlIHRoYXQgaXMgdGhlIGlzc3VlLiBUaGF0IGlzIHdoeSBJIGFza2VkLCB3b3VsZCB5b3UgYmUgb2theSBpZiB0aGlzIHdhcyB0aGUgc2l0dWF0aW9uIGluIGEgY291bnRyeSBsaWtlIEdoYW5hPyBJZiBibGFja3Mgd2VyZSBiZWNvbWluZyB0aGUgbWlub3JpdHkgaW4gdGhlaXIgb3duIGNvdW50cnkuCkZhc3QgZm9yd2FyZCB0byB0aGUgQUNPUk4gdGFwZXMuIApLbm93aW5nIHdoZXJlIEkgY2FuIHRha2UgYSBicmVhay4gKEFuZCBhY3R1YWxseSBsZXQgbWUgdGFrZSBhIGJyZWFrIGlmIEkgbmVlZCB0bykgRXNwZWNpYWxseSByaWdodCB3aGVuIHdlIGFycml2ZSwgSSB3YW50IHRvIGJlIGFibGUgdG8gc2l0IGRvd24gc29tZXdoZXJlIGFuZCBqdXN0IGxvb2sgYXJvdW5kLCBiZSBub3QgYm90aGVyZWQgZm9yIDUgbWlucyBiZWZvcmUgcmVhbGx5IGxhdW5jaGluZyBpbnRvIHRoZSBhY3Rpdml0eS4gTXVzdCBiZSBvdXQgb2YgdGhlIGZsb3cgb2YgcGVvcGxlLCBiZXR0ZXIgaWYgcXVpZXQgYW5kIHRoZXJlJ3MgZm9vZC93YXRlci9iYXRocm9vbXMgaW1tZWRpYXRlbHkgYXZhaWxhYmxlLi4gCkhvdyBtdWNoIG1vcmUgImludGVyYWN0aXZlIiBjYW4geW91IGdldCB0aGFuIGJldHRpbmcgb24gc3BvcnRzPyBObyBvZmZlbnNlIGludGVuZGVkLCBidXQgYSBsb3Qgb2YgdGhvc2UgdGhhdCBhcmUgaGVhdmlseSBpbnRvIHNwb3J0cyBiZXR0aW5nIGxpdmUsIGJyZWF0aGUsIGFuZCBibGVlZCBzcG9ydHMgc3RhdHMgYW5kIGZpZ3VyZXMhIFRoZWlyIGVudGlyZSBsaXZlcyBwcmFjdGljYWxseSByZXZvbHZlIGFyb3VuZCBvZGRzLCByYW5rcywgcmVzdWx0cywgYW5kIG91dGNvbWVzIS4gCkFwcGx5aW5nIHRvIHNob3dzLCBtYWludGFpbmluZyBwcm9mZXNzaW9uYWwgd2Vic2l0ZXMgYW5kIHNvY2lhbCBtZWRpYSwgYWxsIG9uIHlvdXIgb3duLCB3aXRoIG5vIGd1YXJhbnRlZSBvZiBzdWNjZXNzLiAKQW5kIGFzIGEgYm9udXMsIHlvdSB1c2UgdGhlIHBvd2VyIG9mIHlvdXIgbWluZCwgdGhlIGluc3RpbmN0dWFsIHdheSBpdCBpbnRlZ3JhdGVzIHVuY29uc2Npb3VzIGV4cGVyaWVuY2UgYW5kIGNoYW5nZXMgaG93IHlvdSByZWFjdCB0byB0aGVzZSBzaXR1YXRpb25zIChzb2NpYWwgaW4gdGhpcyBjYXNlKS4gClBvdHMsIHBsYW50ZXJzIGFuZCBjb250YWluZXJzIGRyeSBvdXQgcXVpY2tseSwgc28gbW9uaXRvcmluZyBtb2lzdHVyZSBpcyBpbXBvcnRhbnQsIGhlIHNheXMuVGhlIGdyZWF0IHNlbGVjdGlvbiBvZiBuZXcgdmFyaWV0aWVzIGVuc3VyZXMgdGhlcmUgc29tZXRoaW5nIGZvciBldmVyeSBncmVlbiB0aHVtYi5zZWVkIHZhcmlldGllcyBpbmNsdWRlIGNhdWxpZmxvd2VyLCBjaGlja3BlYXMsIG11c3RhcmQgYW5kIHdhc2FiaSBhcnVndWxhIHRvIGdpdmUgYSB6aW5nIHRvIHlvdXIgc2FsYWQuIApZb3UgYXJlIG5vdCBhIGZhaWx1cmUuIFlvdSBkaWQgbm90IGNhdXNlIHlvdXJzZWxmIHRvIGJlY29tZSBpbGwuIEdvb2QgbHVjay4uIApJbiBRMiwgQ29uc3RydWN0aW9uIFN0YXJ0cyBmb3IgcHJvamVjdHMgYWxyZWFkeSBpbiB0aGUgUGlwZWxpbmUgd2VyZSBhdCB0aGUgbG93ZXN0IGxldmVscyBpbiBvdmVyIGEgZGVjYWRlIGFuZCBOZXcgUHJvamVjdCBBbm5vdW5jZW1lbnRzIGludG8gdGhlIFBpcGVsaW5lIHdlcmUgYXQgdGhlIGxvd2VzdCBzaW5jZSBRMiAyMDA0Li4gClRoZSBBTkEgbmV4dCB3ZWVrIGlzIGV4cGVjdGVkIHRvIHNoYXJlIGEgd2hpdGUgcGFwZXIgd2l0aCBtZW1iZXJzIGdpdmluZyBkZXRhaWxlZCBpbnN0cnVjdGlvbnMgYWJvdXQgaG93IHRvIGRlYWwgd2l0aCB0aGUgRkJJLCBhcyB3ZWxsIGFzIHRoZSByYW1pZmljYXRpb25zIG9mIHRoZSBwcm9iZS4gU2NodWx0eiBpcyB0aGUgQ2hpY2FnbyBCdXJlYXUgQ2hpZWYgYXQgQWQgQWdlIGFuZCBjb3ZlcnMgYmV2ZXJhZ2UsIGF1dG9tb3RpdmUgYW5kIHNwb3J0cyBtYXJrZXRpbmcuIApJdCB3aWxsIGJlIGludGVyZXN0aW5nIHRvIHNlZSBpZiBWYW5lc3NhJ3MgYmlnIG1vdmUgd2lsbCBzZWUgdm90ZXJzIHZvdGUgZm9yIGhlciBvciBpZiB0aGUgYmV0cmF5YWwgd2lsbCBjb3N0IGhlciB0aGUgZ2FtZS4gCkxHIGlzIG5vdyB1cCB3aXRoIGZldyBuaWNlIHNwbGl0IGFpciBjb25kaXRpb25lcnMgZm9yIHRoaXMgc3VtbWVyIGFuZCBoYXZlIGNvbWUgdXAgd2l0aCBuZXcgZmVhdHVyZXMgYXMgd2VsbC4gCldhbnQgdG8gZ2V0IG9uIFRhb2JhbywgYnV0IHV0dGVybHkgYmV3aWxkZXJlZCBieSB0aGUgc2l0ZT8gQ2hlY2sgb3V0IHRoZSBUYW9iYW8gZmllbGQgZ3VpZGUsIGFuZCBmaW5kIG91dCBob3cgdG8gc2V0IHVwIHlvdXIgQWxpcGF5IGFjY291bnQuCihJIHNheSB0cnVlIGJlY2F1c2UgdGhlIE5DQyBtYWRlIHVwIHRoZSBydWxlcyBhbmQgY2FuIGVhc2lseSBjaGFuZ2UgdGhlbSB0byBhbGxvdyBhbiBleHRlbnNpb24gb2YgdGhpcyBwcm9jZXNzLCBhIG1vZGVzdCByZXRoaW5rIG9yIGEgdG90YWwgcmVib290LikuIApDaHJpc3RtYXMgd2Ugd2VyZSB1cCBraW5kIG9mIGVhcmx5ICh3aGljaCB3YXMga2luZCBvZiBwYWluZnVsIGFmdGVyIHRoZSBkcmlua2luZyBhbmQgbmFyZ2lsZWggc21va2luZyBvZiB0aGUgbmlnaHQgYmVmb3JlKS4gV2UgZGlkbiBrbm93IGhvdyBsb25nIGl0IHdvdWxkIHRha2UgdG8gZ2V0IHRvIEFtbWFuIHNvIHdlIHdhbnRlZCB0byBoYXZlIGV4dHJhIHRpbWUuIFRoYW5rIGdvZCAgIGl0IHdhcyBzdWNoIGEgZ3JheSBhbmQgZm9nZ3kgYW5kIHJhaW55IGRheSB0aGF0IHRoZSB2aXNpYmlsaXR5IHdoaWxlIGRyaXZpbmcgaW4gdGhlIG1vdW50YWlucyB3YXMgYWJvdXQgMjAgZmVldC4gCldlbmRlbGxTY2hhZGVuZnJldWRlICA4IHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvClNpIGVuIHRlbmFudCBjb21wdGUgZGVzIGNoaWZmcmVzIHF1ZSBqZSBjb21tdW5pcXVhaXMgaWwgeSBhIHF1ZWxxdWVzIGpvdXJzLCBvbiBmYWl0IGwnZWZmb3J0IGRlIHJlZ3JvdXBlciBsZXMgcG91cmNlbnRhZ2VzIGRlcyBub24gdm90YW50cyAoTm9uIGluc2NyaXRzICsgaW5zY3JpdHMgcXVpIHNlIHNvbnQgYWJzdGVudXMgZCdhbGxlciB2b3RlcikgZXQgZGVzIHZvdGVzIG51bHMuIApIYXZpbmcgc2FpZCB0aGF0LCB0byBnZXQgdG8gUkVBTExZIGhpZ2ggc3Rha2VzIFBTIHBsYXkgbW9uZXkgcG9rZXIgeW91IHdvdWxkIGhhdmUgdG8gZWl0aGVyIHBsYXkgZm9yIGEgTE9ORyB0aW1lIG9uIHRoZXJlIGFjY3J1aW5nIGNoaXBzIHRvIHBsYXkgdGhhdCBoaWdoLCBvciBwdXJjaGFzZSBtaWxsaW9ucyAob3IgYmlsbGlvbnMpIG9mIHBsYXkgY2hpcHMgZnJvbSBQUy4gVGhlcmVmb3JlLCBpIHN0dWRpZWQgcG9rZXIgYSB0b24gYmVmb3JlIEkgcHV0IG1vbmV5IG9udG8gYW55IHdlYnNpdGUuIEluIHJldHJvc3BlY3QgSSB3aXNoIEkgaGFkIHB1dCBzb21lIG1vbmV5IG9udG8gc2l0ZXMgeWVhcnMgYWdvIHJhdGhlciB0aGFuIHdhaXRpbmcuIApUaGVyZSBib2R5Y2FtIGZvb3RhZ2Ugb2YgbWUgdHJ5aW5nIHRvIGtlZXAgaGltIHN0aWxsIG9uIHRoZSBncm91bmQsIHRoZW4gbW92aW5nIG91dCBvZiB0aGUgd2F5IG9mIHRoZSBwYXJhbWVkaWNzIGFuZCBqdXN0IGdvaW5nLCAib2ggbXkgR29kLCIgbG9va2luZyB1cCBhdCB0aGUgaGVpZ2h0IG9mIHRoaXMgY2FyIHBhcmsuLiAKSGVyIHB1cnNlIHdhcyBpbiBoZXIgb3V0c2lkZSBjb2F0IHBvY2tldCBXaGVuIHNoZSBzdGFydGVkIHRvIGdldCBoZXIgbW9uZXkgdGhlIHB1cnNlIHdhcyBvcGVuIGFuZCB0aGUgYmlsbHMgbWlzc2luZy4gTXJzIE1pY2hhZWwgQ3VydGluLCBTcGxpdCBSb2NrLCB3YXMgYW5vdGhlciB2aWN0aW0uIFNoZSBsb3N0IGluIGEuIHNpbWlsYXIgbWFubmVyLiBNcnMuIFdpbGxpYW0gRWFnZXIsIEJhbGR3aW5zdmlsbGUgcmVwb3J0ZWQgdGhhdCBzaGUgYm91Z2h0IHNvbWUgY2xvdGggIGluZyBhbmQgcGxhY2VkIHRoZSBwYWNrYWdlIG9uIGEgY291bnRlci4gClNlIGludmVjZSBzcG9zaSBwaWVuYW1lbnRlIGlsIG5vc3RybyBwcm9nZXR0byxsbyBzZW50aSB0dW8gYWwgMTAwJSBlIGRlc2lkZXJpIG1ldHRlcnRpIGFsIHNlcnZpemlvIGRpIHF1ZXN0YSBncmFuZGUgY2F1c2EsIHRyYW1pdGUgaWwgbGluayBpbiBiYXNzbyBwdW9pIHJpY2hpZWRlcmUgZGkgZW50cmFyZSBhIGZhciBwYXJ0ZSBkZWwgQ29uc2lnbGlvIERpcmV0dGl2byBkaSBBUlQgZWxldmVuLiAoIFVuaWNhIGNvbmRpemlvbmU6IHVuIGFtb3JlIGFzc29sdXRvIHZlcnNvIERpbyBlIHZlcnNvIGlsIHR1byBwcm9zc2ltbykKR2V0dGluZyBhIG1hbmljdXJlIGlzIGFuIGVhc3kgd2F5IHRvIGdldCBhbiBpbmZlY3Rpb24gZnJvbSBzb21lb25lIGVsc2UuIApBbGwgb2YgdGhpcyBicmluZ3MgdGhlIHJpY2ggaGlzdG9yeSBhbmQgbXl0aG9sb2d5IG9mIHRoZSBCaWJsZSBpbnRvIGZvY3VzLiBJdCBub3QgYSBoaXN0b3J5IG9mIEdvZCBkZWFsaW5ncyB3aXRoIG1hbiAgIGl0IGEgaGlzdG9yeSBvZiBtYW4gaW52ZW50aW9uIG9mIEdvZC4KVGhpcyBpcyBub3QgdGhlIHBsYWNlIHRvIHNwYW0geW91ciBjaGFubmVsIG9yIHN0cmVhbS4gTm8gcmVmZXJyYWwsIGFmZmlsaWF0ZSBhbmQvb3Igc3VydmV5IGxpbmtzLgpMb2NhdGVkIGluIHRoZSBoZWFydCBvZiBDYW1wdXMgTWFydGl1cyBpbiBEZXRyb2l0LCBUaGUgV29vZGhvdXNlIERheSBTcGEgaXMgYXZhaWxhYmxlIHNpeCBkYXlzIGEgd2VlayBmb3IgeW91ciBtYXNzYWdlIGVzY2FwZS4gCkFnYWluc3QgdGhlc2UgcGxheWVycyBJIGp1c3QgZm9sZCBldmVyeXRoaW5nIGJ1dCBLSysgaWYgdGhleSAzYmV0IG9yIDRiZXQuIApJIGhhZCBhIHNlY3Rpb24gYW5kIGFtIGhhdmluZyBhIHNlY29uZCBpbiBhIGZldyB3ZWVrcy4gCkkgZ3JvYW4gYW5kIHJlbHVjdGFudGx5IG11Y2sgbXkgaGFuZC4uIApNYW55IE5ldyBZb3JrZXJzIGFyZSBiYWZmbGVkIGJ5IHRoZSBjbHVzdGVyIG9mIHBlYWtzIHRoYXQgaGF2ZSBjb21lIHRvIG93biB0aGUgZm9ybWVybHkgZW1wdHkgc2t5LiBJdCdzIGhhZCBkZXRyYWN0b3JzIHNpbmNlIGl0IHdhcyBhbm5vdW5jZWQgbW9yZSB0aGFuIDEwIHllYXJzIGFnby4gVGhpcyBpcyBOZXcgWW9yaywgYWZ0ZXIgYWxsISBCdXQgTklNQlkgdHlwZXMgY2FuJ3QgZ3JvYW4gb3ZlciBpc3N1ZXMgdGhhdCBtYWRlIGNlcnRhaW4gb3RoZXIgYmlnIGRldmVsb3BtZW50cyBlYXN5IHRvIGhhdGUuCiJjb25jZW50cmF0ZWQgb24gdGhlIGNvcmUgc2V0IHVwIG9mIEFydGh1ciBEZW50IGxlYXZpbmcgRWFydGggd2l0aCBGb3JkIFByZWZlY3QgYmVmb3JlIGVuY291bnRlcmluZyBaYXBob2QsIE1hcnZpbiBhbmQgVHJpbGxpYW4sIHdobyBkbyBub3QgYXBwZWFyIHVudGlsIGFmdGVyIGhhbGYgb2YgdGhlIGZpcnN0IGFjdC4iICAgdGhpcyBzZWVtcyBhIGJpdCBjb250cmFkaWN0b3J5ICAgaXMgaXQgc2F5aW5nIHRoYXQgWmFwaG9kLCBNYXJ2aW4gYW5kIFRyaWxsaWFuIGFyZSBjb3JlLCBidXQgbm90IGNvcmUgYmVjYXVzZSB0aGV5IGRvbid0IGFwcGVhciBlYXJseSBlbm91Z2g/IENvdWxkIHlvdSBqdXN0IGVuZCB0aGUgc2VudGVuY2UgYWZ0ZXIgJ1RyaWxsaWFuJz8KSG9yZ2FuIGhhcyBtYW5hZ2VkIHRvIGFwcHJvdmUgdGhlIFNpdGUgQyBkYW0sIGFuZCBpcyBub3cgcGxhbm5pbmcgdG8gdGFrZSBjcmVkaXQgZm9yIHRoZSAkNDAgYmlsbGlvbiBMTkcgQ2FuYWRhIG1lZ2EgcHJvamVjdCwgYWxsIHdoaWxlIFdlYXZlciBwcm9wcyB1cCBIb3JnYW4gbWlub3JpdHkgTkRQIGdvdmVybm1lbnQuIApTbyBpdCBlc3NlbnRpYWxseSB0aGUgY2hlc3Qgc3lzdGVtIHdpdGhvdXQgdGhlIG5lZWQgb2YgcGxheWluZyBkYWlseSB0aGVyZS4gVGhlIG9ubHkgdGhpbmcgdGhhdCBzdWNrcyB0aGVyZSBhcyBhIGdyaW5kZXIgaXMgbm8gdGFibGUgc2VsZWN0aW9uLCBidXQgSSB0aGluayB0aGF0IGlzIGEgZ29vZCB3YXkgdG8gZ28gZm9yIHJlY3JlYXRpb25hbCBwbGF5ZXJzIGJlY2F1c2UgeW91IGRvbiBoYXZlIHNoYXJrcyB3aXRoIHNjcmlwdHMgYXV0b21hdGljYWxseSBzaXR0aW5nIGJlc2lkZSB5b3UgYW5kIGNydXNoaW5nIHlvdSBmb3IgeW91ciBtb25leSBiZWZvcmUgeW91IGV2ZW4gcmVhbGl6ZSB3aGF0IGdvaW5nIG9uLiAKU28gZm9yIGV4YW1wbGUsIGlmIGhlIGlzIGRyaXZpbmcgYXJvdW5kIGxvb2tpbmcgZm9yIHZpY3RpbXMsIGFuZCB0aGUgY29wcyBhcmUgc3VydmV5aW5nIHRyYWZmaWMsIHRoZXkgd2lsbCBnYWluIGNsdWVzIGFib3V0IHdobyBoZSBpcz8gTm8gaWRlYSBpZiB0aGlzIHdvcmtzIG9yIG5vdCwganVzdCBhbiBpbnRlcmVzdGluZyBpZGVhIGZvciBhIGNhdCBhbmQgbW91c2Ugc3R5bGUuIApCdXQgZm9yIG1hbnkgcGxheWVycywgdGhpcyBnYW1lIGhhcyBhbHNvIGJlZW4gYWJvdXQgZXhwZXJpZW5jaW5nIHNvbWUgb2YgdGhlIGJlc3QgcG9rZXIgYm9udXNlcyB3aGVuIHBsYXllZCBvbmxpbmUgZXNwZWNpYWxseSBhdCB0aGUgY29zdCBvZiBub3RoaW5nLiAKQnkgdGhlIGxhdGUgMTk3MHMgdGhlIHRvcCAxIHBlcmNlbnQgcmFrZWQgaW4gb25seSA4IHRvIDkgcGVyY2VudCBvZiBBbWVyaWNhIHRvdGFsIGFubnVhbCBpbmNvbWUuIApTbyBOYXRlIGlzIHRoZXJlIG9uIHRoZSBiYWNrIG9mIGJhcnN0b29sLiAKVGhlIGRlcGFydG1lbnQgc3RvcmVzIGFyZSBwcm9iYWJseSBsYW1lbnRpbmcgdGhlIGVuZCBvZiB0aGUgaGVhdCB3YXZlLi4gCkkgY29tcGxldGVseSB1bmRlcnN0YW5kIHdoeSB0aGUgY2FtbWVyIHdhcyBhbmdyeSwgZHJ1bmsgZHJpdmVycyBhcmUgZnVja2luZyBhc3Nob2xlcyB3aG8gY2FuIGtpbGwgc29tZW9uZSwgYnV0IHRoZXJlIHdhcyByZWFsbHkgbm8gbmVlZCB0byBydW4gYXQgdGhhdCBndXkgY2FsbGluZyBoaW0gbmFtZXMgYW5kIGJlaW5nIGFnZ3Jlc3NpdmUuIEJ5c3RhbmRlcnMgbGlrZSB0aGF0IG5laWdoYm9yLCBvciBldmVuIHRoZSBjb3BzIHdvdWxkIGp1c3Qgc2VlIHNvbWVvbmUgdHJ5aW5nIHRvIGRyYWcgc29tZW9uZSBlbHNlIG91dCBvZiB0aGVpciBjYXIgYW5kIHRoaW5rIHRoZSBjYW1tZXIgd2FzIHRoZSB2aWxsYWluLiBFc3BlY2lhbGx5IGluIHRoZSBVUywgc29tZW9uZSBtaWdodCBwdWxsIGEgZ3VuLgpSb3N1dmFzdGF0aW4gdG8gcHJldmVudCB2YXNjdWxhciBldmVudHMgaW4gbWVuIGFuZCB3b21lbiB3aXRoIGVsZXZhdGVkIEMgcmVhY3RpdmUgcHJvdGVpbi4gClNvbWUgdGFibGVzIHdpbGwgaGF2ZSBhIGJpZ2dlciBwb3Qgc2l6ZSB0aGFuIGFub3RoZXIgdGFibGVzIHRoYXQgaGF2ZSB0aGUgc2FtZSBsaW1pdC4gVGhpcyBpcyB3aHkgYWdhaW4sIGluIG9ubGluZSBwb2tlciByb29tcywgeW91IHNob3VsZCBhbHdheXMgYmUgbW9uaXRvcmluZyB0aGUgbG9iYnkgc28gdGhhdCB5b3UgY2FuIGtlZXAgYW4gZXllIG9uIHRoZSBiZXN0IGdhbWVzIGFuZCBvbiB0YWJsZSBjaGFuZ2luZy4gVGhpcyBpbmZvcm1hdGlvbiBjYW4gaGVscCB5b3VyIGRlY2lzaW9ucyBhbmQgdWx0aW1hdGVseSBoZWxwIHlvdSB3aW4uLiAKVGhlIHNvbHV0aW9uIHdhcyBmb3IgdGhlbSB0byBtYXJyeSBpbiBhIGNpdmlsIGNlcmVtb255LCBhbmQgdGhlbiBoYXZlIHRoZWlyIHVuaW9uIGJsZXNzZWQgaW4gYSByZWxpZ2lvdXMgc2VydmljZSBhZnRlcndhcmRzLi4gCkkgaGF2ZSA1IGNvbmdlbml0YWwgaGVhcnQgZGVmZWN0cy4gVXAgdW50aWwgaSB3YXMgYWJvdXQgMjAgSSB3YXMgc3VwZXIgc2tpbm55LiBJIGxvb2sgYXQgb2xkIHBob3RvcyBoYXZlIG5vIGlkZWEgaG93IEkgZGlkbid0IGJyZWFrIG15IGxlZ3MgYnkganVzdCB3YWxraW5nLiBJIHdhcyBwYWxlLiBBbmQgc2hlIHNhdyBtZSBnbyB0byB0aGUgcmVzdHJvb20gYSBsb3QuIEJlY2F1c2UgaXQgd2FzIG5lYXIgbXkgbG9ja2VyIGFuZCBhY3Jvc3MgZnJvbSBoZXIgY2xhc3Nyb29tLgooUHJpdmFjeSBQb2xpY3kpTWFya2V0aW5nR29vZ2xlIEFkU2Vuc2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApUaGUgY3VtdWxhdGl2ZSBlZmZlY3Qgd2FzIGEgY29tZm9ydGluZyBzb2xpdHVkZSB0aGF0IHdlbnQgYmV5b25kIHNlbnN1YWwsIGJleW9uZCBpbnRpbWF0ZS4gSXQgd2FzIHByZW5hdGFsLi4gCkFic2Fsb20gc3RhbmRzIG91dHNpZGUgaGVyIGhvdXNlLCBiZWdnaW5nIGZvciBhIGtpc3MuIApXaGljaCBidXMgd2FzIGl0PyBJdCBoYXBwZW5lZCB0byBtZSBzZXZlcmFsIHRpbWVzIHdoZW4gd2FpdGluZyBmb3IgdGhlIDk3Yi4gCiJJdCdzIHNvIG11Y2ggZnVuIHBsYXlpbmcgdGhlIGdhbWUgbGl2ZSBhbmQgeW91IHRlbmQgdG8gZ2V0IGNvbXBsZXRlbHkgaW52b2x2ZWQuIApUaGUgZmF2b3JlZCBtZXRob2QgcmVxdWlyZXMgdGFraW5nIHR3byBzZXBhcmF0ZSBwYWNrZXRzIG9mIGNhcmRzIGZyb20gdGhlIG1pZGRsZSBvZiB0aGUgZGVjaywgcHV0dGluZyB0aGVtIGluIGEgcGlsZSB0b2dldGhlciwgYW5kIHBsYWNpbmcgdGhlIHJlc3Qgb2YgdGhlIGRlY2sgb24gdG9wIG9mIHRoYXQgcGlsZS4gVGhlbiwgeW91IGN1dCB0aGUgZGVjayBhZ2Fpbi4gCldoeSB3b3VsZCBhbnkgc2VsZiByZXNwZWN0aW5nIGh1bWFuIGJlaW5nIGNvbnNpZGVyIGEgcGFsYWNlIGNvdXAgaW4gdGhlIFNhdWRpIHJveWFsIGZhbWlseSwgbGVkIGJ5IGEgWmlvbmlzdCBBcmFiIHByaW5jZSwgdGhlIGhpZ2hlc3QgYWNoaWV2ZW1lbnQgb2YgdGhlIEFyYWIgU3ByaW5nPyBXaGF0IHV0dGVyIGNvbnRlbXB0IGNvdWxkIGEgcGVyc29uIGhhcmJvdXIgZm9yIHRoZSBkZW1vY3JhdGljIGFzcGlyYXRpb25zIG9mIG1pbGxpb25zIG9mIGh1bWFuIGJlaW5ncyB3aG8gcG91cmVkIHRoZWlyIGhlYXJ0LCBib2R5LCBhbmQgc291bCBpbnRvIHRoZSBzdHJlZXRzIGFuZCBzcXVhcmVzIG9mIHRoZWlyIGhvbWVsYW5kIHRvIGNvbnNpZGVyIGEganV2ZW5pbGUgZGVsaW5xdWVudCdzIHBvd2VyIG1vbmdlcmluZyBhbiAiQXJhYiBTcHJpbmcgZnJvbSB0aGUgdG9wIj8gV2hhdCBoaWdoIHNjaG9vbCwgd2hhdCBjb2xsZWdlLCB3aGF0IHNjaG9vbCBvZiBqb3VybmFsaXNtIGRpZCB0aGlzIG1hbiBkcm9wIG91dCBvZiB0byB1dHRlciBzdWNoIGhvZ3dhc2ggYW5kIGdldCBpdCBwdWJsaXNoZWQgaW4gdGhlIE5ldyBZb3JrIFRpbWVzPyBXaGF0IGVkaXRvciBhdCB0aGUgTmV3IFlvcmsgVGltZXMgY291bGQgZ2V0IHVwIHRoZSBmb2xsb3dpbmcgbW9ybmluZyBhbmQgbG9vayB0aGVtc2VsZiBpbiB0aGUgZXllIHdoaWxlIHRoZWlyIGJydXNoaW5nIHRlZXRoPyBJdCBpcyBiZXlvbmQgYmVsaWVmLiAKIDExIHBvaW50cyAgc3VibWl0dGVkIDMgeWVhcnMgYWdvRG9uIHdvcnJ5LCBJIGdvaW5nIGludG8gYW5lc3RoZXNpYSBhbmQgbm9uZSBvZiB0aGlzIG1hZGUgYW55IGludHVpdGl2ZSBzZW5zZSB0byBtZSBmb3IgYSB3aGlsZS4gSSB0cnkgdG8gZXhwbGFpbiBpdCB0byB5b3UgaW4gYSB3YXkgdGhhdCBpcyBtb3JlIG9yIGxlc3MgZmFjdHVhbGx5IGNvcnJlY3QsIGJ1dCBhIHRydWUgYmxvb2RlZCBwaGFybWFjb2xvZ2lzdCBtaWdodCBoYXZlIGFuIGFuZXVyeXNtIHJlYWRpbmcgaXQuIApJbnRlcmVzc2FudGUgVGlzY2hnZXNwciBiZWltIEZyIHNpbmQgZ2FyYW50aWVydDogRGEgcmluZ2VuIEFscGhhdGllcmUgdW0gaWhyZSBQb3NpdGlvbmVuIHVuZCBub3JkZW4gZGFzIEdlZ2VuIHNjaG9uIG1hbCBnZXJuZSBlaW4sIHdlbm4gZXMgenUgdm9yd2l0emlnIHdpcmQsIG5hdCBpbiBhbGxlciBGcmV1bmRsaWNoa2VpdC4gCkRlbGl2ZXIgdG8geW91ciAuIExvb2sgaW5zaWRlIHRoaXMgYm9vay4gQWFyYW55YSBLYWFuZGFtIE9yaWdpbmFsIFNjcmVlbnBsYXkgYnkgW0t1bWFyYXJhamEsIFRoaWFnYXJhamFuXS4uIApNZW4gdG9vayBjaGFyZ2UgYmVjYXVzZSB0aGF0J3Mgd2hhdCB0aGV5IGRpZC4gCklmIHlvdSB3YW50IHRvIHdyaXRlIGFib3V0IHBvbGl0aWNhbCBpc3N1ZXMsIHlvdSBjYW4gZG8gdGhhdCB3aXRob3V0IHNwZWNpZnlpbmcgdGhvc2UgdGhpbmdzLiAKVGhvc2UgYXJlIG1ha2luZyB1c2Ugb2YsIG9yIGFyZSBpbmZsdWVuY2luZyB0aGUgc2FtZSBlbmVyZ3kgYW5kIHVzZSB0aGUgbWF0cml4IHRvIHRoZWlyIGFkdmFudGFnZS4gCkkgaW1hZ2luZSB0aGlzIHdpbGwgbWFrZSBjeWNsaW5nIGluIFNlb3VsIGEgbXVjaCBtb3JlIGF0dHJhY3RpdmUgcHJvc3BlY3QgdG8gdGhlbSBzZWVpbmcgYXMgdGhleSdsbCBoYXZlIHRvIGludGVyYWN0IGxlc3Mgd2l0aCBjYXJzIGFuZCBzdWJ3YXlzIHRvIGdldCB0aGUgSGFuIHBhdGggb24gdGhlIHdlZWtlbmQuIApUaGUgZHJpdmUgaXNuIGxvbmcuIApFRElUOiBwbGVhc2UsIGZvciB0aGUgbG92ZSBvZiBnb2RkZXNzLCBzb21lb25lIHdobyBpcyBnb29kIGF0IHNrZXRjaGluZyBwbGVhc2UgZHJhdyBhIGxpdHRsZSBza2V0Y2ggb2YgJ21lbnN0cnVhdGlvbiBtYW5hZ2VtZW50JyAgIG15IHZpc2lvbiBpcyBhIGJ1bmNoIG9mIG1pZGRsZSBhZ2VkLCBtYW5hZ2VyaWFsIHR5cGUgbWVuIHdlYXJpbmcgc3VpdHMsIG1hcmNoaW5nIGluIHRvIGEgYmF0aHJvb20gdG8gaGVscCAnbWFuYWdlIHRoZSBtZW5zdHJ1YXRpb24nLiBZb3Ugd291bGQgbWFrZSBteSB5ZWFyLiAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0kgd2FzbiBpbXByZXNzZWQuIApXZSBkb24ndCB0aGluayB0aGF0IGhhcHBlbnMgaW4gdGhlIG90aGVyIHNob3cuLiAKIldlIHJlYWxseSBuZWVkZWQgdG8ga2VlcCB0aGF0IGRpc3RhbmNlIGZvciBhbnkgcGVyY2VpdmVkIG9yIHJlYWwgY29uZmxpY3Qgb2YgaW50ZXJlc3QsIiBIdXRjaGluc29uIHNhaWQuICJXZSBmZWx0IHZlcnkgc3Ryb25nbHkgYWJvdXQgdGhhdCBiZWNhdXNlIGluIHRoZSAyMDA3IEZvb2QgR3VpZGUgdGhlcmUgd2FzIGEgZmFpciBhbW91bnQgb2YgY3JpdGljaXNtIGFib3V0IHRoZSBpbmZsdWVuY2Ugb2YgaW5kdXN0cnkgYW5kIHdlIHRoaW5rLCB0byBtYWtlIHN1cmUgd2Uga2VlcCB0aGUgY29uZmlkZW5jZSBvZiBDYW5hZGlhbnMgYW5kIGhlYWx0aCBwcm9mZXNzaW9uYWxzIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMsIGl0IHdhcyBuZWNlc3NhcnkgdG8gc3RheSBxdWl0ZSBzdHJpY3Qgb24gdGhhdC4iLiAKV2VudCB2ZXJ5IHdlbGwsIGl0IHdhcyBhIGdvb2QgZGF5LCBzYWlkIG9yZ2FuaXplciBHYXJ5IENyYW5lLiBIYWQganVzdCB1bmRlciAxMDAgYmlrZXMgc2hvdyB1cC4gCiAzMSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29GaW5hbGx5IGluIGEgcG9zaXRpb24gd2hlcmUgSSdtIHNhdGlzZmllZCB3aXRoIG15IGZvcm0gb24gZXZlcnkgc2luZ2xlIGxpZnQuIEZlZWxzZ29vZG1hbi4gU3VycHJpc2VkIGhvdyBldmVuIG1pbnV0ZSBkZXRhaWxzIGNhbiBtYWtlIGEgaHVnZSBkaWZmZXJlbmNlLkZvciBkZWFkcyBJIHVzZWQgdG8gcHVsbCB0aGUgc2xhY2sgb3V0IG9mIHRoZSBiYXIgd2hlbiBteSBoaXBzIHdlcmUgYWxyZWFkeSBkb3duIGFuZCBzZXQuIApTbyBpbiBvdGhlciB3b3JkcywgaXQgc2F3IGFsb3Qgb2YgaGFuZHMgb24gdXNlIGVhcmx5IGluIGl0cyBsaWZlLi4gCk5vdyBCYXJiaWUgaGVyc2VsZiBpcyB0aHJlYXRlbmVkIGFuZCBoZXIgZGVtaXNlIG1heSBzaWduYWwgdGhlIGVuZCBvZiB0aGUgQW1lcmljYSBFbXBpcmUuIEFjY29yZGluZyB0byBhbiBhcnRpY2xlIGluIHRoZSBOZXcgWW9yayBUaW1lcywgQmFyYmllIGlzIGZhY2luZywgZm9yIHRoZSBmaXJzdCB0aW1lLCBzb21lIHJlYWwgY29tcGV0aXRpb24uIEFsdGhvdWdoIHRoZSBCYXJiaWUgRW1waXJlIGlzIHN0aWxsIHdvcnRoICQzIGJpbGxpb24gYSB5ZWFyLCB0aGUgTGl2IGFuZCBNb3hpZSBkb2xscyB3aWxsIGJlIHdvcnRoIGFib3V0ICQzMCA0MCBtaWxsaW9uIHRoaXMgeWVhci4uIApJdCB3YXMgdWdseSBhbmQgd2UgbmVlZCB0byB3aW4gdWdseS4gClRoZXJlIHdhcyBvbmUgdmlkZW8gd2hlcmUgU2F1Y2UxMjMgYW5hbHl6ZXMgYSA2eCBzaG92ZSBvbiB0aGUgcml2ZXIgYnkgT1RCX1JlZEJhcm9uIGFuZCBpdCByZWFsbHkgZ290IG1lIHRoaW5raW5nIG91dHNpZGUgbXkgbm9ybWFsIGxldmVsLiBUaGV5IGFsc28gZG8gYSBidW5jaCBvZiBQSU8gd29yayBzbyBpdHMgaGVscGZ1bCB0byBzZWUgd2hhdCByYW5nZXMgdGhleSBhc3N1bWUgd2hlbiBydW5uaW5nIHNpbXMgYW5kIGhvdyB0aGV5IHNpbXBsaWZ5IGEgdG9uIG9mIGluZm9ybWF0aW9uIHRvIG1ha2UgaXQgZml0IGludG8gYW4gb3ZlcmFsbCBwbGF5YWJsZSBzdHJhdGVneS4gCkl0IHF1aXRlIGEgYml0IGxpa2UgYSBjb21wYXNzaW9uIGNsdWIsIGV4Y2VwdCB5b3UgY2FuIGFjdHVhbGx5IGJ1eSB3ZWVkIHRoZXJlLiBUaGVyZSBhIG1lbWJlcnNoaXAgZmVlICh3aGVuIEkgam9pbmVkIGl0IHdhcyAkMTAwLCBidXQgbWF5IGJlIG1vcmUgbm93KSB3aGljaCBnZXRzIHlvdSBhbiBpbiBwZXJzb24gdmlzaXQgd2l0aCBhIGRvY3RvciwgYXMgd2VsbCBhcyBhIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBwaGFybWFjaXN0LCBhbmQgdGhlbiBmb2xsb3cgdXBzIHZpYSBlbWFpbC9waG9uZSBpZiB5b3Ugd2FudC4gVGhleSBhbHNvIGhvc3QgZXZlbnRzIGZyb20gdGltZSB0byB0aW1lIHdoZXJlIHRoZXkgdGVhY2ggeW91IGFib3V0IGRpZmZlcmVudCB1c2VzIGZvciBtYXJpanVhbmEsIGhvdyB0byBwcmVwYXJlIGl0IGludG8gb2lscy9idXR0ZXIsIHRoYXQgc29ydCBvZiB0aGluZy4uIApXaHkgYW0gSSB0aGlua2luZyBhYm91dCAzMCB5ZWFycyBsZWZ0PyBJIGhhdmUgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgYW5kIHRoYXQgYSBsb3Qgb2YgdGltZSB0byBkbyBhIGxvdCBvZiBzdHVmZi4gCjIpIFdoZXRoZXIgeW91IHNob3VsZCBoYXZlIHNleCB3aXRoIHRoaXMgcGFydGljdWxhciB3b21hbi4gSW4gZ2VuZXJhbCwgSSdkIHNheSBpZiB5b3UncmUgbm90IGV4Y2l0ZWQgdG8gZG8gaXQsIGRvbid0LiAKV2hlbiBkZXB1dGllcyBhcnJpdmVkLCB0aGV5IHNhdyBhYm91dCBhIGRvemVuIHBlb3BsZSBhcm91bmQgdHdvIG1lbiB3aG8gd2VyZSBseWluZyBvbiB0aGVpciBiYWNrcyBhIHNob3J0IGRpc3RhbmNlIGZyb20gdGhlIHJvYWQuCk1vc3QgcGxheWVycyBhcmUgcHJldHR5IGNvbnNpZGVyYXRlIGJ1dCB5b3Ugc29tZXRpbWVzIGdldCAoZXhwbGV0aXZlcykuIEknbSBzb21ldGltZXMgaW4gc3BvdHMgd2hlcmUgcGVvcGxlIGFyZSBhdHRhY2tpbmcgbWUuIEknbSBwcmV0dHkgZGVwcmVzc2VkIGFuZCB0aGVuIHBhcnQgb2YgbWUsIEkgd2lsbCBnZXQgb3V0c2lkZSBvZiBteXNlbGYgYW5kIHNheSwgaXMgdGVycmlibGUgYnV0IGl0J2xsIGJlIGdyZWF0IGZvciB0aGUgYm9vay4gdGhlcmUgYSBtb21lbnQgaXQgYWxsIGNsaWNrZWQgZm9yIHlvdT8KRm9yIGV4YW1wbGUsIHRoZSBmZWUgZm9yIGEgc3BvcnRzIG1hc3NhZ2UgY2VydGlmaWNhdGlvbiBvZmZlcmVkIGJ5IFBhdGhzIGluIEhlYWxpbmcgaXMgJDEsMjc1LiBTb21lIHByb2dyYW1zIGNvbWUgd2l0aCBhZGRpdGlvbmFsIHJlcXVpcmVtZW50cywgc3VjaCBhcyBwYXJ0aWNpcGF0aW9uIGluIG9uIHNpdGUgbWFzc2FnZSBldmVudHMgYW5kIHByb3ZpZGluZyBtYXNzYWdlcyB0byBhdGhsZXRlcyBpbiB0cmFpbmluZy4uIApQYXN0IGV2ZW50cyB3aWxsIGJlIHJldmlld2VkLCBkaXNjdXNzZWQsIG11bGxlZCBhbmQgY2hld2VkIG92ZXIgaW4gdGhlIFBvc3QuIApJIHN1Y2sgYXQgYSBsb3Qgb2YgdGhpbmdzLCBidXQgSSdtIGhvcGluZyB0byB0ZWFjaCBhcnQgdG8gaW5tYXRlcyBpbiBwcmlzb24gc28gdGhleSBnZXQgYSBzZWNvbmQgY2hhbmNlIGxpa2UgSSBkaWQuIFNvbWVvbmUgdG8gYmVsaWV2ZSBpbiB0aGVtLiBJJ20gZmFyIGZyb20gdGhlIGJlc3QgYXJ0aXN0IG91dCB0aGVyZSBidXQgSSdtIG5vdCB0ZXJyaWJsZSwgSSdtIHByb3VkIG9mIGl0IGFuZCBpdCdzIHdoYXQgbWFkZSBtZSBiZSBhY2NlcHRlZCBmdWxsIHJpZGUgaW50byBjb2xsZWdlLiAKTGVzIGNvbW11bmlxdXMgZGUgcHJlc3NlIHBldXZlbnQgdHJlIHRyYW5zbWlzICBsJ3F1aXBlIGRlIHJkYWN0aW9uIHBhciBjb3VycmllbCBzZWxvbiBsYSBzZWN0aW9uIHNvdWhhaXRlIGF1eCBhZHJlc3NlcyBzdWl2YW50ZXMgOkNvbXB0ZSB0ZW51IGRlIGwnZXNwYWNlIGxpbWl0IGV0IGRlIGxhIHF1YW50aXQgZCd2bmVtZW50cyAgY291dnJpciwgbCdxdWlwZSBkZSByZGFjdGlvbiBkb2l0IHRvdXRlZm9pcyBmYWlyZSBkZXMgY2hvaXggZXQgbmUgcGV1dCBmYWlyZSB1biBzdWl2aSBpbmRpdmlkdWVsIGF2ZWMgdG91cyBjZXV4IHF1aSBzb3VtZXR0ZW50IHVuZSBwcm9wb3NpdGlvbiBkZSBzdWpldCBvdSB1biBjb21tdW5pcXUuClBldGUgaGFkIHRvIGZhc3QgZnJvbSAxMHBtIGxhc3QgbmlnaHQsIHNvIG5vIGJyZWtraWUgZm9yIGhpbSwgYnV0IEpvaG4gYW5kIEkgd2VudCBkb3duIHRvIHRoZSBob3RlbCByZXN0YXVyYW50IGFuZCBoYWQgYSBiaXRlIHRvIGVhdC4gSSBjYW1lIGF3YXkgd2l0aCBteSBwb2NrZXRzIGxvYWRlZCBmb3IgUGV0ZSwgYXMgd2UncmUgbm90IHF1aXRlIHN1cmUgeWV0IHdoYXQgdGhlIGRheSB3aWxsIGhvbGQuIFdlIGFyZSBiZWluZyBwaWNrZWQgdXAgYXQgMTAuMzBhbSBhbmQgdGFrZW4gdG8gYW5vdGhlciBob3NwaXRhbCBmb3IgUGV0ZSB0byBoYXZlIGEgUGV0IFNjYW4gYW5kIHdlIHdpbGwgbWVldCB3aXRoIERyIFdhbmcgd2hvIHdpbGwgZG8gYSBoZWFsdGggYXNzZXNzbWVudCBvbiBoaW0uLiAKUHJvYmxlbXMgY2FuIGJlIHRvdWdoIHRvIHNvbHZlLCBidXQga25vdyB0aGF0IG90aGVyIHBlb3BsZSBjYXJlIGFuZCBhcmUgd2lsbGluZyB0byBoZWxwLiBZb3Ugc2hvdWxkIGtub3cgdGhhdCB5b3UncmUgYSBnb29kIHBlcnNvbiBmb3Igd2FudGluZyB0byBoZWxwIHlvdXIgZmlhbmNlIGFuZCBoZXIgZnJpZW5kLiAKTm90IHBlcmZvcm0gdGhlaXIgam9iIGR1dGllcwpCbGFjayBBbWVyaWNhbnMgYXJlIHZpb2xlbnQgYW5kIGFnZ3Jlc3NpdmUgKHRoYW5rIGhvbGx5d29vZCwgcHJvIHNwb3J0cyBhbmQganVzdCBvdmVyYWxsIHRoZXkgZHluYW1pY3Mgb2Ygb3VyIG5hdGlvbikuIApUaGVuIGFnYWluLCBpdCBwb3NzaWJsZSB0aGF0IHlvdSBoYXZlIHRvIHBpY2sgaGVyIHVwLCBjbGVhciBjdXN0b21zIGluIEhvbmcgS29uZyBhbmQgcmUgY2hlY2sgaGVyLCBzbyB5b3UgY291bGQgdGFrZSBoZXIgb3V0c2lkZSB0aGVuICh5b3UgaGF2ZSB0byBhc2sgdGhlIGFpcmxpbmUpLiAKVGhlIEZCSSwgTlNBLCBhbmQgQ0lBIHJvdXRpbmVseSBwb2x5Z3JhcGgga2V5IGVtcGxveWVlcy4gCkNsaXZlIEFsbGNvY2s6IEkgYW0gb25lIG9mIHRoZSBwZW9wbGUgd2hvJ3ZlIGFyZ3VlZCB0aGF0IGl0J3Mgbm90LCBhbmQgSSBoYXZlIGEgbG90IG9mIGRpZmZpY3VsdHkgd2l0aCBhbiBpbGxuZXNzIG1vZGVsIGFyb3VuZCB0aGlzIGZvcm0gb2YgYmVoYXZpb3VyLiBNeSByZWFzb25zIGZvciB0aGF0IGFyZSBzaG93IG1lIHRoZSBwYXRob2xvZ2ljYWwgZ2FtYmxlci4gTm93IHdoYXQgSSBtZWFuIHdoZW4gSSBzYXkgdGhhdCBpcyB3ZSBoYXZlIGNlcnRhaW4gY3JpdGVyaWEgYnkgd2hpY2ggd2UgZGVmaW5lIHRoZSBpbmRpdmlkdWFsIHdobydzIHNhaWQgdG8gYmUgdGhlIHByb2JsZW0gZ2FtYmxlci4gQnV0IHBlb3BsZSBtb3ZlIGludG8gYW5kIG91dCBvZiB0aGlzIHBhcnRpY3VsYXIgcGF0dGVybiBvZiBiZWhhdmlvdXIgZm9yIGFsbCBzb3J0cyBvZiByZWFzb25zLiBTb21lIG1heSBkbyBzbyB3aGVuIHRoZWlyIHdpZmUgdGhyZWF0ZW5zIHRvIGxlYXZlLCBzbyB0aGV5IHF1aWNrbHkgZ2l2ZSB1cCB0aGUgcGF0dGVybiBvZiBiZWhhdmlvdXI7IHNvbWUgbWF5IGRvIHNvIHdoZW4gdGhleSBkZWNpZGUgZm9yIHRoZW1zZWx2ZXMgdGhhdCB0aGV5J3JlIGdhbWJsaW5nIG1vcmUgdGhhbiB0aGV5IHNob3VsZC4KRGlzdGlsbGVkIHBhcnRuZXJzIHdpdGggUGFjaWZpYyBBc3Npc3RhbmNlIERvZ3MgU29jaWV0eSwgYW5kIHZvbHVudGVlcnMgd2l0aCBkb2dzIHdpbGwgYmUgcm9hbWluZyB0aGUgZXZlbnQgd2hpbGUgb2ZmZXJpbmcgdGlja2V0cyB0byBhIDUwLzUwIGRyYXcuIExhc3QgeWVhciB0aGUgZmVzdGl2YWwgcmFpc2VkIGNsb3NlIHRvICQ1MDAwIGZvciB0aGUgb3JnYW5pemF0aW9uLiAKVGhlIHByb2Zlc3Npb25hbCBwbGF5ZXJzIGhhdmUgZXhjZWxsZW50IHBva2VyIHNraWxscywgc3RhcnRpbmcgaGFuZCBzZWxlY3Rpb24sIGZsb3AgcGxheSwgcmVhZGluZyB0aGUgb3RoZXIgcGxheWVycywga25vd2luZyB3aGVuIHRvIGJsdWZmLCB3aGVuIHRvIGNhbGwsIHdoZW4gdG8gZ2V0IG91dCBvZiB0aGUgd2F5LiBCdXQgdGhlbiBhZ2Fpbiwgc28gZG8gdGhlIGFtYXRldXJzIHdlIHNlZSBhdCB0aGUgZmluYWwgdGFibGUuCkJlZW4gaW4gYWNhZGVtZSBmb3IgYWxtb3N0IGFsbCBvZiBteSBhZHVsdCBsaWZlLiBJIGhhdmUgdHdvIGRlY2FkZXMgb2YgZXhwZXJpZW5jZSB3YXRjaGluZyBwZW9wbGUgZ28gdGhyb3VnaCB0aGUgdGVudXJlIHByb2Nlc3MsIHNvbWV0aW1lcyBzdWNjZXNzZnVsbHksIHNvbWV0aW1lcyBub3QuIE1heSBzZWVtIGluY29tcHJlaGVuc2libHkgY3VzaHkgdGhhdCBzb21lIG9mIHVzIGV2ZXIgZ2V0ICJhIGxpZmV0aW1lIGd1YXJhbnRlZSIgZm9yIG91ciBqb2JzLCBidXQgYWNhZGVtZSBpcyBhIG5vdCBleGFjdGx5IHRoZSBzYW1lIG9uIHRoZSBpbnNpZGUgYXMgaXQgbG9va3MgZnJvbSB0aGUgb3V0c2lkZS4uIApIb3dldmVyLCB0aGUgbW9zdCBsaWtlbHkgZG93bnNpZGUgdG8gdGhlc2UgYWNyeWxpYyBhZGQgb25zIGlzIGluZmVjdGlvbiwgd2hpY2ggY2FuIHJlc3VsdCBmcm9tIGltcHJvcGVyIGFwcGxpY2F0aW9uLCB0aGUgdGVjaG5pY2lhbiB1c2luZyB1bnN0ZXJpbGl6ZWQgdG9vbHMsIG9yIHRoZSBuYWlscyBiZWluZyBqYXJyZWQgbG9vc2UgZHVyaW5nIGV2ZXJ5ZGF5IGFjdGl2aXRpZXMuIElmIHRoZXkgc2VwYXJhdGUgZnJvbSB5b3VyIG5hdHVyYWwgbmFpbHMsIHRoZSBwb2NrZXQgdGhhdCBjYW4gZm9ybSBpcyBhbiBvcGVuIGludml0YXRpb24gZm9yIGJhY3RlcmlhbCBvciBmdW5nYWwgaW5mZWN0aW9uLiBOYWlsIGZ1bmd1cyAob3Igb255Y2hvbXljb3NpcykgdGhyaXZlcyBpbiB0aGUgd2FybSwgbW9pc3QgZW52aXJvbm1lbnQgYmV0d2VlbiBmYXVsdHkgc2VhbHMgYW5kIGNhbiBsZWFkIHRvIGRlZm9ybWVkIG5haWxzIHRoYXQgYXJlIGRpc2NvbG9yZWQsIHRoaWNrIGFuZCByb3VnaC4gTGVmdCB1bnRyZWF0ZWQsIGluZmVjdGlvbiBjYW4gYWxzbyBhZmZlY3QgdGhlIG5haWwgYmVkIGFuZCBtaWdodCBldmVuIGNhdXNlIHRoZSBuYXR1cmFsIG5haWwgdG8gc2VwYXJhdGUgZnJvbSB0aGUgc2tpbiB1bmRlcm5lYXRoLgpZb3UgdGhpbmsgdGhhdCBtaWRkbGUgYWdlZCBBc2lhbiB3b21hbiBydW5uaW5nIHRoZSBwbGFjZSBpcyBnb25uYSBzdG9wIHNlbGxpbmcgaGFuZCBqb2JzIGJlY2F1c2Ugb2YgdGhhdD8KSWYgeW91IGFyZSBhIHBva2VyIGxvdmVyIGFuZCB5b3UgdGhpbmsgYWJvdXQgcGxhbm5pbmcgYSBwb2tlciBwYXJ0eSByaWdodCBhdCBob21lLCB5b3UgaGF2ZSB0byBwdXJjaGFzZSB0aGUgcHJvZHVjdHMgcmlnaHQgZnJvbSB0aGUgcG9rZXIgc3RvcmVzLiBOb3cgc29tZSBzdG9yZXMgaGF2ZSBjb21lIGZyb250LiBUaGVzZSBzdG9yZXMgaGF2ZSBzdGFydGVkIHNlbGxpbmcgYWZmb3JkYWJsZSBwcm9kdWN0cyBvbmxpbmUgYW5kIHlvdSBjYW4gYWNjZXNzIHRoZXNlIHByb2R1Y3RzIHN0YXlpbmcgYW55d2hlcmUgaW4gdGhlIHdvcmxkIGFuZCBnZXQgdGhvc2UgcHJvZHVjdHMgZGVsaXZlcmVkIHRoZXJlLiBTYXksIHlvdSBsaWtlIGEgcHJvZHVjdCBsaWtlIFRoZSBDb2FjaCBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3RvciBhbmQgeW91IG5lZWQgdGhhdC4gWW91IG9ubHkgbmVlZCBpcyBhIHdvcmtpbmcgaW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgYSBmaW5hbmNpYWwgY2FyZCB0byBwbGFjZSBhbiBvcmRlciBvbmxpbmUuClRoZXJlIGFyZSB0aGluZ3MgdGhhdCBhcmVuIGFzIGNsZWFyIGluIHRoZSBFbmdsaXNoIHZlcnNpb24sIG9mIHRoZSB0b3Agb2YgbXkgaGVhZCwgSSBnaXZlIDIgc2NlbmVzIGFzIGFuIGV4YW1wbGUgOiBUaGUgb25lIGF0IHRoZSBlbmQgb2YgQ2FyaWJiZWFuLCBhbmQgdGhlIG9uZSB3aXRoIFZhbml0YXMgYWZ0ZXIgZGVmZWF0aW5nIGhpbS5UaGUgQ2FyaWJiZWFuIG9uZSBpcyB3aXRoIFZleGVuLCB3aG8gaXMgd2F0Y2hpbmcgdGhlIHdob2xlIHRoaW5nIGFib3V0IHRoZSBib3ggd2l0aCB0aGUgYmFkZGllIGhlYXJ0IGluIGl0LCBhbmQgSSByZW1lbWJlciBoaW0gc2F5aW5nIHRoYXQgdGhlIGhlYXJ0ICggPiBIZWFydCAodW5kZWZpbmVkKSApIHdhc24gYWN0dWFsbHkgYSBIZWFydCAoID4gS29rb3JvID4gdGhlICJNaW5kIiBpbiB0aGUgS0ggdHJpbml0eSBvZiB0aGUgU2VsZikuIE9idmlvdXNseSB0aGF0IG9uZSBpcyBpZmZ5IHRvIHRyYW5zbGF0ZSwgYnV0IGl0IGNvdWxkIGhhdmUgYmVlbiBtYWRlIGNsZWFyZXIgc3RpbGwuVGhlIG9uZSB3aXRoIFZhbml0YXMgaXMgdGVycmlibGU7IEZvciBjb250ZXh0LCBpdCB3aGVuIFZhbml0YXMgdGVsbCBTb3JhIGFuZCBWZW4gdGhhdCB0aGV5IGFyZSBicm90aGVyIHVuaXRlZCBhcyBhIGdyZWF0ZXIgd2hvbGUgb3Igc29tZXRoaW5nLCBhbmQgU29yYSBhc2sgaGltIHRoZW4gd2h5IGhlIHN0YW5kcyB3aXRoIERhcmtuZXNzIGluc3RlYWQgb2Ygd2l0aCB0aGVtLiBBbmQgdG8gdGhhdCwgaW4gdGhlIEVuZ2xpc2ggdmVyc2lvbiwgVmFuaXRhcyByZXBsaWVzIHdpdGggIkJlY2F1c2UgSSBhbSBEYXJrbmVzcy4gCkZsdXNoIGFuZCBvcGVuIHN0cmFpZ2h0IGRyYXc6IFRvIGlsbHVzdHJhdGUgdGhpcyBzY2VuYXJpbywgc2F5IHlvdSd2ZSBkcmF3biB0aGUgamFjayBhbmQgMTAgb2YgZGlhbW9uZHMsIGFuZCB0aGUgZmxvcCBpcyB0aGUgOSBvZiBzcGFkZXMsIGFuZCB0aGUgOCBhbmQgNCBvZiBkaWFtb25kcy4gWW91J3JlIGluIGEgdmVyeSBhZHZhbnRhZ2VvdXMgcG9zaXRpb24gd2l0aCAxNSBvdXRzLiAKT3VyIFNwYSBwYWNrYWdlIGluY2x1ZGVzIHRoZSBoaWdoZXN0IHF1YWxpdHksIEZlcm1pIE11ZCBiZWluZyBicnVzaGVkIG9uIHlvdSBmb3JtIGhlYWQgdG8gdG9lIGFmdGVyIHdlIGV4Zm9saWF0ZSB5b3Ugd2l0aCB5b3VyIGNob2ljZSBvZiBhIHN1Z2FyIHNjcnViLCBzYWx0IHNjcnViIG9yIGRyeSBicnVzaC4gQWxsIHdoaWxlIGVuam95aW5nIFlvdW5nIExpdmluZyBFc3NlbnRpYWwgT2lscywgTGF2ZW5kZXIgT2lsIGFuZCBmaW5pc2hpbmcgb2ZmIHdpdGggaG90IHRvd2VscyBhbmQgYSB3b25kZXJmdWwgbWFzc2FnZSBvZiBjcmFuaWFsIHNhY3JhbCBhbmQgcmVmbGV4b2xvZ3kuIFRoaXMgcGFja2FnZSB3aWxsIHByb3RlY3QgYW5kIHJlZ3VsYXRlIGZyb20gbW9pc3R1cmUgY2hhbmdlcywgcmViYWxhbmNlIGFuZCByZXN0b3JlIGh5ZHJhdGlvbiBhbmQgcHJldmVudCBmdXR1cmUgc2tpbiBkYW1hZ2UuIAoiSSBoYXZlIGF0dGVuZGVkIHRoZSBmaW5lc3QgcGFydGllcyBhbGwgb3ZlciB0aGUgd29ybGQsIGJ1dCBub3RoaW5nIHRoYXQgY29tcGFyZXMgdG8gdGhpcywiIHJlY291bnRzIE15cmEgSm9uZXMsIGEgTWlsYW4gYmFzZWQgZmFzaGlvbiBtb2RlbCB3aG8gd291bGQgamV0IGluIGZvciB0aGUgYW5udWFsIGV2ZW50LiAKV2hldGhlciBpdCdzIGEgZ2lmdCBmb3Igc29tZW9uZSBlbHNlIG9yIHlvdSBqdXN0IHdhbnQgdG8gc3BpY2UgdXAgeW91ciBnYW1lIGF0IGhvbWUsIHlvdSBoYXZlIHRvIHNlZSB0aGlzIHBva2VyIHNldC4gClRoZXkgYXJlIHZlcnkgbGlrZWx5IHRvIGJlIGV4dHJlbWVseSBzZW5zaXRpdmUgdG8gY2FwYWNpdG9yIHdhcmZhcmUgKHRvIHN1c3RhaW4gdGhlaXIgYWN0aXZlIHRhbmsuKQpUaGVzZSBzdGF0ZW1lbnRzIGlzIHNvIHBvd2VyZnVsISBJZiB5b3UgYXJlIG1hcnJpZWQgdG8gc29tZW9uZSB3aG8gaXMgZW1vdGlvbmFsbHkgaW1tYXR1cmUgeW91IHByb2JhYmx5IGZhY2UgZ3JlYXQgY2hhbGxlbmdlcyBpbiBkZWFsaW5nIHdpdGggdGhlaXIgbW9vZHMgYW5kIGJlaGF2aW9ycy4gWW91IGhhZCBwbGFucyBmb3IgYSBuaWNlIHdlZWtlbmQgdG9nZXRoZXI/IEJ1dCwgdGhlbiBhZ2FpbiwgYSBsb3Qgb2YgdGhlIHRoaW5ncyB0aGV5IGRvIHdvcmsuIFdpdGggbWF0dXJpdHkgd2UgZGlzY292ZXIgd2UgYXJlIG5vdCBhYmxlIHRvIGNvbnRyb2wgb2YgYXMgbWFueSB0aGluZ3MgYXMgd2UgdGhvdWdodCB3ZSBjb3VsZCBhbmQgc28gd2UgbGVhcm4gaG93IHRvIGNvcGUuIEhlIGhhZCBhbHNvIHRyaWVkIGNvY2FpbmUgb25jZS4gQmV5b25kIGludHVpdGlvbiwgdGhlcmUgYXJlIGEgZmV3IHNwZWNpZmljIHRoaW5ncyB5b3UgY2FuIGxvb2sgZm9yIHRvIGhlbHAgeW91IGRldGVybWluZSB3aGV0aGVyIGEgZ3V5IGlzIGVtb3Rpb25hbGx5IG1hdHVyZSBlbm91Z2ggZm9yIGEgY29tbWl0dGVkIHJlbGF0aW9uc2hpcC4gQnkgc3RheWluZyBwb3NpdGl2ZSBpdCBjYW4gaGVscCBvdGhlcnMgYXJvdW5kIHlvdSwgYW5kIGhvcGVmdWxseSBpdCBjYW4gaGVscCBhbnkgZW1vdGlvbmFsIGltbWF0dXJlIHBlcnNvbiBvciBwZW9wbGUgd2UgaGF2ZSBlbmNvdW50ZXJlZCBpbiBvdXIgbGl2ZXMuClNpbmNlIHlvdXIgdXRpbGl6YXRpb24gcmF0aW8gaXMgc28gaW1wb3J0YW50LCBhIGxvdCBvZiBwZW9wbGUgdGhpbmsgdGhhdCBnZXR0aW5nIGFzIG11Y2ggYXZhaWxhYmxlIGNyZWRpdCBhcyBwb3NzaWJsZSAgIGltbWVkaWF0ZWx5ICAgd2lsbCBkbyB0aGUgdHJpY2suIEJ1dCBpdCBkb2VzbiB3b3JrIGxpa2UgdGhpcywgdW5mb3J0dW5hdGVseS4gKEJhbmtzIGFuZCB0aGlyZCBwYXJ0eSB3ZWJzaXRlcyB0aGF0IGFnZ3JlZ2F0ZSBjcmVkaXQgY2FyZCBkZWFscyBib3RoIGdlbmVyYWxseSBzcGVsbCBvdXQgd2hhdCBraW5kIG9mIGNyZWRpdCBzY29yZSB5b3UgbmVlZCB0byBvYnRhaW4gYSBwYXJ0aWN1bGFyIGNhcmQuKQpBbGwgdGhpcyBnb3QgdXMgdG8gcmVsZWFzZSB0aGUgZmlyc3Qgc2Vhc29uIG9mIExpdHRsZSBUaGluZ3MsIiBTdXJlc2ggYWRkZWQuLiAKTGlvbiBpbiB0aGUgU3RyZWV0c1doZW46IEphbi4gCkluIE1ha2luZyBXaGl0ZW5lc3MsIGhpc3RvcmlhbiBHcmFjZSBIYWxlIGFyZ3VlcyB0aGF0IGx5bmNoaW5nIGFyb3NlIGFmdGVyIHRoZSBDaXZpbCBXYXIgYXMgYSBuYXRpb25hbGx5IGNpcmN1bGF0ZWQgc3BlY3RhY2xlIHRocm91Z2ggdGhlIG5ldyB0ZWNobm9sb2dpZXMgb2YgcGhvdG9ncmFwaHkgYW5kIHRoZSB0ZWxlZ3JhcGguIEJlY2F1c2UgdGhlIGx5bmNoaW5nIG9mIEJsYWNrIG1lbiBjb3VsZCBiZSByZXByZXNlbnRlZCAgdGhyb3VnaCBwcmVzcyBhY2NvdW50cyBhbmQgZXZlbiBwb3N0Y2FyZHMgIHRocm91Z2hvdXQgdGhlIGNvdW50cnksIGx5bmNoaW5nIGNhbWUgdG8gc2VydmUgYXMgYSB3YXkgb2YgbWFpbnRhaW5pbmcgdGhlIHJhY2lhbCBvcmRlciBhdCBhIHRpbWUgd2hlbiBCbGFjayBBbWVyaWNhbnMgd2VyZSBzdWRkZW5seSAiZnJlZSIgYW5kIGFsc28gbW92aW5nIHRvIHRoZSBOb3J0aCBpbiBncmVhdCBudW1iZXJzLi4gClNQUiBqdXN0IGFib3V0IDE6MSwgaGUgbmVlZHMgdG8gY2FsbCBhdCA+NTAlIGZyZXF1ZW5jeS4gCk1pZGRsZSBtYW5hZ2VtZW50IGV4cGF0czogc2Vjb25kIHJhdGUgd29ya2VycyB3aG8gY2FuIGN1dCBpdCBiYWNrIGhvbWUuClZvaWNpIHF1ZWxxdWVzIGluZGljYXRpb25zIHN1ciBjZSBub3V2ZWF1IGxpdnJlIGRzICBwcnNlbnQgZGlzcG9uaWJsZSAgbGEgdmVudGUgLi4gCllvcmsgQ291bnR5IEp1ZGdlIExsb3lkIEdyYWJ1cm4gZXZlbnR1YWxseSBydWxlZCB0aGF0IGphaWxpbmcgUmljaGFyZHMgd291bGQgYmUgaW5hcHByb3ByaWF0ZSBiZWNhdXNlIGhlIHdhcyBzZWVraW5nIHRyZWF0bWVudCBmb3IgZHJ1ZyBhZGRpY3Rpb24gYW5kIHByb3ZpZGVkIGJlbmVmaXQgdG8gdGhlIGNvbW11bml0eSwgUm9sbGluZyBTdG9uZSBtYWdhemluZSByZXBvcnRlZCBhdCB0aGUgdGltZS4gUmljaGFyZHMgY2xhaW1lZCBpbiBoaXMgMjAxMCBtZW1vaXIgTGlmZSB0aGF0IGEgYmxpbmQgd29tYW4gbWFkZSBhbiBhcHBlYWwgdG8gdGhlIGp1ZGdlIGZvciBsZW5pZW5jeSBhZnRlciBSaWNoYXJkcyBoYWQgbWFkZSBhcnJhbmdlbWVudHMgdG8gY2FyZSBmb3IgaGVyIHNhZmV0eSBhdCBjb25jZXJ0cy4KSW4gYWRkaXRpb24gdG8gdGVhbSBhbmQgaW5kaXZpZHVhbCBhdGhsZXRpYyB0cmFpbmluZywgc2thdGVycyBob2xkIHBvc2l0aW9ucyBvbiB2YXJpb3VzIGNvbW1pdHRlZXMgdG8ga2VlcCB0aGUgYWxsIHZvbHVudGVlciBvcmdhbml6YXRpb24gcnVubmluZy4gVGhlIGxlYWd1ZSBpcyBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uLCBvcGVyYXRlcyB1bmRlciB0aGUgZ3VpZGVsaW5lcyBvZiB0aGUgV29tZW4ncyBGbGF0IFRyYWNrIFJvbGxlciBEZXJieSBBc3NvY2lhdGlvbiAoV0ZUREEpIGFuZCBpcyBydW4gY29tcGxldGVseSBieSB2b2x1bnRlZXJzLkFib3V0IFJvbGxlciBEZXJieVJvbGxlciBEZXJieSBpcyBhbiBBbWVyaWNhbiBtYWRlIGNvbnRhY3Qgc3BvcnQgdGhhdCBvcmlnaW5hdGVkIGluIHRoZSBlYXJseSAxOTAwcy4gVGhlIHNwb3J0IHdhcyBoaWdobHkgcG9wdWxhciBpbiB0aGUgMTk3MHMgd2hlbiBwcm9mZXNzaW9uYWwgbWF0Y2hlcyB3ZXJlIHRlbGV2aXNlZCBhbmQgdGhlIHNwb3J0IHNoYXJlZCBhIHJlcHV0YXRpb24gZm9yIHN0YWdlZCBhY3Rpb24uIAogNSBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29JIGxpdmVkIGluIE1pZHRvd24gZm9yIGFib3V0IDUgeWVhcnMgbm93IGFuZCBhZ3JlZSB3aXRoIHdoYXQgb3RoZXJzIGhhdmUgY29tbWVudGVkIG9uIHRodXMgZmFyLiBJIHdpc2ggdGhlIGNpdHkgY291bGQvd291bGQgZG8gc29tZXRoaW5nIGFib3V0IHRoZSBtb3RvcmN5Y2xpc3RzIHdobyBkbyBhbiB1bm5lY2Vzc2FyeSBhbW91bnQgb2YgcmV2dmluZy4gClRoZSBjYXIgaXMgYSBzaWx2ZXIgTGFuZCBSb3ZlciBEaXNjb3ZlcnksIHdpdGggMjUsMDAwIG1pbGVzIG9uIHRoZSBjbG9jayAgIHRob3VnaCBoZSBhbHNvIG93bnMgYSBjbGFzc2ljIERlTG9yZWFuIHNwb3J0cyBjYXIsIHRoZSB0eXBlIG1hZGUgZmFtb3VzIGluIHRoZSBCYWNrIHRvIHRoZSBGdXR1cmUgZmlsbXMuClRoZSBTdXByZW1lIENvdXJ0J3Mgb3JkZXIgYXBwb2ludGluZyB0aHJlZSBtZWRpYXRvcnMgdG8gZmluZCBhIHNvbHV0aW9uIHRvIHRoZSBSYW0gSmFubWFiaG9vbWkgQmFicmkgTWFzamlkIGRpc3B1dGUgaXMgcXVpdGUgc3RyYW5nZSBhbmQgaW5jb25ncnVvdXMsIGdpdmVuIHRoYXQgYWxsIHN1Y2ggcHJldmlvdXMgYXR0ZW1wdHMgaGF2ZSBlbmRlZCBpbiBmYWlsdXJlLiAKSSBwbGF5IHBva2VyIDQgdG8gNiBkYXlzIGEgd2Vlay4gCkJleW9uZCB0aGF0LCBsZXQgc2F5IHlvdSBzZWUgYW4gb2xkIHdvbWFuIGFuZCBzaGUgcmVtaW5kcyB5b3Ugb2YgeW91ciBncmFuZG1vdGhlciwgYW5kIHlvdSBsaWtlbHkgaGF2ZSBhIHdhcm0gZmVlbGluZyB0b3dhcmQgdGhhdCBwZXJzb24gZHVlIHRvIHRoaXMgbWVudGFsIGFzc29jaWF0aW9uICAgaWYgeW91IGhhdmUgYSBnb29kIHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgZ3JhbmRtb3RoZXIsIHRoYXQgaXMuIElmIEkgc2VlIGEgbGl0dGxlIGdpcmwsIHRoZXkgbWF5IHJlbWluZCBtZSBvZiBteSBuaWVjZSwgYW5kIHRoYXQgbWFrZSBtZSBmb25kIG9mIHRoZW0uIEZvciBwZW9wbGUgd2hvIGhhdmUgbWl4ZWQgcmFjZSBwYXJlbnRzICAgYW5kIEkgY2FuIHNwZWFrIGZyb20gcGVyc29uYWwgZXhwZXJpZW5jZSBoZXJlICAgd2hlbiB0aGV5IHNlZSBhIG1peGVkIHJhY2UgY291cGxlLCB0aGV5IHRoaW5rIG9mIHRoZWlyIG1vdGhlciBhbmQgZmF0aGVyLCB0aGVpciBob21lLCB0aGVpciBjaGlsZGhvb2QuIFRoaXMgaXMgYWxsIGdvaW5nIHRvIGdpdmUgeW91IGEgd2FybSBmdXp6eSBmZWVsaW5nLiBIb3cgaXMgdGhhdCB3cm9uZyBvciByYWNpc3Q/IEZ1cnRoZXJtb3JlLCBpZiB5b3UgYSBtaXhlZCByYWNlIHBlcnNvbiwgZXNwZWNpYWxseSBpZiB5b3Ugb2xkZXIsIHlvdSB2ZXJ5IHdlbGwgcmVtZW1iZXIgYmVpbmcgdGVhc2VkIGZvciB0aGlzIGdyb3dpbmcgdXAsIGJlaW5nIHVuYWNjZXB0ZWQgYnkgeW91ciBwZWVycywgYmVpbmcgbWFkZSB0byBmZWVsIGFzaGFtZWQgb2YgeW91ciBtaXhlZCByYWNlIGhlcml0YWdlICAgYWdhaW4sIHRoaXMgaXMgbWUgc3BlYWtpbmcgZnJvbSBwZXJzb25hbCBleHBlcmllbmNlICAgc28gd2hlbiB5b3Ugc2VlIGEgbWl4ZWQgcmFjZSBjb3VwbGUsIGl0IGNhbiB3YXJtIHlvdXIgaGVhcnQgYnkgcmVtaW5kaW5nIHlvdSB0aGF0IHRoaW5ncyBhcmUgY2hhbmdpbmcsIHdlIG1vdmluZyBmb3J3YXJkIGFzIGEgc29jaWV0eSBhbmQgd2hhdCB3YXMgb25jZSB0YWJvbyBpcyBiZWNvbWluZyBjb21wbGV0ZWx5IG5vcm1hbC4gV2UgbW92aW5nIHRvd2FyZCBhIG1vcmUgYWNjZXB0aW5nIHNvY2lldHkgYW5kIHNlZWluZyB0aGlzIHJhbmRvbSBtaXhlZCByYWNlIGNvdXBsZSBpcyBpbmRpY2F0aXZlIG9mIHRoYXQuIFdoeSBzaG91bGQgdGhleSBzdXBwcmVzcyBvciBkZW55IHRoYXQgd2FybSBmZWVsaW5nIHRoZXkgZ2V0IHdoZW4gdGhleSByZW1pbmRlZCBvZiB0aGlzIGZhY3Q/IEFnYWluLCBqdXN0IGJlY2F1c2UgYW4gb3BpbmlvbiBpcyBpbmZvcm1lZCBieSByYWNlLCB0aGF0IGRvZXNuIG1ha2UgaXQgcmFjaXN0LiBOb25lIG9mIHRoaXMgaXMgaW4gYW55IHdheSByYWNpc3QuIFNpbXBseSBhY2tub3dsZWRnaW5nIHJhY2UgZG9lcyBub3QgbWFrZSBvbmUgcmFjaXN0LiBSYWNpc20gaXMgdGhlIGJlbGllZiB0aGF0IGNlcnRhaW4gcmFjZXMgYXJlIHN1cGVyaW9yIG9yIGluZmVyaW9yIHRvIG90aGVycyBhbmQgaXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBoYXZpbmcgYSB3YXJtLCBmdXp6eSBmZWVsaW5nIHVwb24gc2VlaW5nIGEgbWl4ZWQgcmFjZSBjb3VwbGUuClRoYXQgd2h5LCByZWdhcmRsZXNzIG9mIHRoZSBjYXJkcywgdGhlIGJlc3QgcG9rZXIgcGxheWVycyBhcmUgYWx3YXlzIGF0IHRoYXQgbGFzdCB0YWJsZSBjb21wZXRpbmcuCkJlZ2luIHlvdXIgYmxvd291dCBhdCB0aGUgZnJvbnQgc2VjdGlvbnMgb2YgaGFpciBhcyB0aGVzZSBhcmUgdGhlIHBhcnRzIHRoYXQgcGVvcGxlIHdpbGwgc2VlIGZpcnN0IGFuZCBhcmUgdGhlcmVmb3JlIHRoZSBtb3N0IGltcG9ydGFudC4gSWYgeW91IHN0YXJ0IGF0IHRoZSBib3R0b20gYW5kIHdhaXQgdW50aWwgdGhlIGVuZCB0byBkcnkgdGhlIGZyb250IHNlY3Rpb25zLCB5b3VyIGFybXMgd2lsbCBiZSB0aXJlZCBieSB0aGUgdGltZSB5b3UgcmVhY2ggdGhlbSBhbmQgeW91IHdvbid0IGRvIGFzIGdvb2QgYSBqb2IuWzNdCktldXJpZyBpcyBkZWVwbHkgY29tbWl0dGVkIHRvIHZvbHVudGVlcmlzbSBhbmQgZ2l2aW5nIGJhY2sgdG8gdGhlIGNvbW11bml0eS4gCkFjdHVhbGx5IHRoZSBiZXN0IHdheSB0byBsZWFybiBpcyBub3QgYnkgY29hY2ggZmlyc3QsIGJ1dCB3YXRjaGluZyBjaGVzcyBvcGVuaW5nIHZpc2VvcyBvbiB5b3V0dWJlIGZvciBiYXNpY3MsIGFuZCB0aGVuIHJlYWRpbmcgYXJ0aWNsZXMgYWJvdXQgc29tZSBzcGVjaWZpYyBvcGVuaW5ncyBpbiB0aGUgaW50ZXJuZXQuCkJ1dCBldmVyeSBvbmUga25vd3Mgd2hhdCB0aGUgbGF3cyBhcmUgbWVhbnQgdG8gZG8uIFRoYXQgYmVpbmcgc2FpZCBpIGFtIGN1cnJlbnRseSBsb29raW5nIGZvciBhbnkgcGFwZXIgdGhhdCB0YWxrcyBhYm91dCBpdCBzaW5jZSBhbGwgb2YgbXkgaW5mb3JtYXRpb24gc28gZmFyIGhhcyBqdXN0IGJlZW4gZnJvbSBwZW9wbGUgd2hvIHdoZXJlIGFjdGl2ZSBpbiB0aGUgcG9saXRpY2FsIGRlYmF0ZSB3aGVuIHRoaXMgd2FzIG9uIHRoZSBkb2NrZXRzLiBJIHdpbGwgYmUgc3VyZSB0byBrZWVwIHlvdSB1cGRhdGVkIHdpdGggd2hhdCBpIGZpbmQuLiAKVGhpcyB3ZWVrIGJvdGggY291bnRyaWVzIGhlbGQgZWxlY3Rpb25zLiBFc3RvbmlhJ3MgcG9sbHMgY2xvc2Ugb24gTWFyY2ggM3JkLCBidXQgaW50ZXJuZXQgdm90aW5nIHN0YXJ0ZWQgdGVuIGRheXMgZWFybGllci4gTW9sZG92YSdzIHZvdGUgdG9vayBwbGFjZSBvbiBGZWJydWFyeSAyNHRoLiAKVGhlbiBvZiBjb3Vyc2UgeW91IGhhdmUgdGhlIHR3byBodW5kcmVkIHN1aXRlZCBwb2tlciBjaGlwcyB0aGF0IGFyZSByZWQsIHdoaXRlIGFuZCBibHVlLCBhcyB3ZWxsIGFzIG9mZmVyIGVkZ2Ugc3BvdHMgZm9yIGEgY2FzaW5vIGxpa2UgYXBwZWFsLiBPaCwgYW5kIGlmIHlvdSBsaWtlIHBsYXlpbmcgZGljZSBnYW1lcyB0aGUgMjAwIFN1aXRlZCBQb2tlciBDaGlwcyB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2Ugb2ZmZXJzIDUgb2YgdGhlbSByZWFkaWx5IGF2YWlsYWJsZS4gV2hlbiB5b3UgdGFrZSBhbGwgdGhlIGNoaXBzIG91dCB0aGUgY2FzZSBpcyBsaW5lZCB3aXRoIGEgc21vb3RoIGdyZWVuIGZlbHQgdG8gbWFrZSBldmVyeXRoaW5nIGxvb2sgbW9yZSBwcm9mZXNzaW9uYWwuCkF0IDEvMiBJIHBsYXkgdGlnaHQgYW5kIGFnZ3Jlc3NpdmUgd2hpY2ggSSBoYWQgdG8gZ2V0IGEgYml0IHVzZWQgdG8gc2luY2UgSSBqYWJiZWQgYSBsb3Qgd2l0aCBteSBmcmllbmRzLiAKVGhvc2UgaW4gdGhlIFdlc3QgZWFybmVkIGJldHdlZW4gJDM2LDAwMCB0byAkNTcsMDAwLCByZXNwZWN0aXZlbHksIGluIEhhd2FpaSBhbmQgQ2FsaWZvcm5pYS4gCk1pbGFuYSB6ZXR0ZSBvbnMgZGFhcm5hIHRlZ2VuIGVlbiB1dXIgb2YgNiB3ZWVyIGFmLCBuYSBlZW4gbWV0cm8gcml0LCBiaWogS2FtZXJnZXJza3kgUGVyLCB3YWFyIHdlIG9wIGVlbiB0ZXJyYXNqZSBlZW4gVmlyZ2luIE1vbmppdG8gZHJvbmtlbiAoZGF0IHdvb3JkIGlzIGhldHplbGZkZSBpbiBoZXQgUnVzc2lzY2gpLiBXZSBoYWRkZW4gZWVuIGRydWtrZSBlbiBsZWVycmlqa2UgZGFnIGdlaGFkIG1ldCBvbnplIGdpZHMsIG1hYXIgd2FyZW4gZWVybGlqayBnZXplZ2Qgb25kZXJ0dXNzZW4gd2VsIGJsaWogZGF0IHdlIGVlbiBiZWV0amUgdGlqZCB2b29yIG9uc3plbGYgaGFkZGVuLCB6b25kZXIgYWwgZGllIHZlcmhhbGVuIG92ZXIgYXJjaGl0ZWN0dXVyIGVuIGRpY2h0ZXJzLiBPcCB3ZWcgbmFhciBlZW4gZ2VvY2FjaGUgcGFzc2VlcmRlbiB3ZSB3ZWVyIGJpaiBoZXQgTWFuZWdlIFBsZWluIGVuIGRlIEFsZXhhbmRlciBHYXJkZW5zLCBtYWFyIGRhYXJuYSB2b2xnZGUgbm9nIGVlbiBsYW5nZSBvbXdlZyBvbSB0ZSB0cmFjaHRlbiBoZXQgZHJ1a2tlIGtydWlzcHVudCB2b29yIGhldCBLcmVtbGluIG92ZXIgdGUgc3Rla2VuLiBFZW4gaGFsZiB1dXIgbGF0ZXIgKGlrIGRlbmsgZWNodCBkYXQgZGF0IG5pZXQgb3ZlcmRyZXZlbiBpcykgc3RvbmRlbiB3ZSBlaW5kZWxpamsgYWFuIGRlIGFuZGVyZSBrYW50IHZhbiBkZSBzdHJhYXQgYmlqIGRlIGdlb2NhY2hlLCB3YWFyYmlqIHdlIHdlZXIgcnVpbXNjaG9vdHMgZGUga2FucyBnZWtyZWdlbiBoYWRkZW4gb20gZGUgcG9saXRpZSBoaWVyIHRlIG9ic2VydmVyZW4sIGhlZWwgYWN0aWVmIGluIE1vc2tvdSBvbSBhdXRvIHZhbiBkZSBiYWFuIHRlIGhhbGVuIChibGlqa2JhYXIgem9la2VuIHplIGdlc3RvbGVuIHdhZ2VucykuCkEgcHJldHR5IGZlbWFsZSBiYXJ0ZW5kZXIgY29tZXMgd2Fsa2luZyBvdXQgb2YgYSBiYWNrIHJvb20gYW5kIHNlZXMgbXkgYnJvdGhlciBzdGFuZGluZyB0aGVyZSwgaGFuZHMgb24gaGlwcywgcGVsdmlzIHRocnVzdCBmb3J3YXJkLCBhbmQgbWUgY29uY2VudHJhdGluZyBpbnRlbnRseSBhbmQga25lYWRpbmcgd2hhdCBsb29rcyBsaWtlIGEgZ2lhbnQgcGVuaXMgaW4gaGlzIHBhbnRzLiAKVGhhdCBnbyBmb3IgYnJva2UgbWVudGFsaXR5IHBhaWQgb2ZmIGluIE1pY2hpZ2FuIFN0YXRlJ3MgMjEgMTcgd2luLi4gCkFuZCBiYXNlbGVzcyBoeXN0ZXJpYSBhYm91dCBsaWJlcmFsIHBvbGljaWVzIGxlYWRpbmcgdG8gYSBkeXN0b3BpYW4gc29jaWFsaXN0IGNlc3Nwb29sIHVuZGVyIFNoYXJpYSBMYXcgd2hlcmUgdGhlIHN0cmVldHMgYXJlIHJhdmFnZWQgYnkgdGVycm9yaXN0cyBhbmQgTVMxMyBmbG9vZGluZyBhY3Jvc3MgdGhlIGJvcmRlci4KSW4gdGhlIHJpZ2h0IGNpcmN1bXN0YW5jZXMsIGhvd2V2ZXIsIHRoZSBwbGF5ZXIgc29tZXRpbWVzIHdpbGwgYnJlYWsgdXAgYSBmbHVzaCwgYSBzdHJhaWdodCwgb3IgYSBwYWlyIG9mIGphY2tzIG9yIGJldHRlci4gSWYgeW91IGRvIG5vdCBoYXZlIG9uZSBvZiB0aGUgImFsd2F5cyBrZWVwIiBoYW5kcywgdXNlIHRoZSBmb2xsb3dpbmcgbGlzdC4gClRoZSBSb2NrZXRzIHNob3QgdGhlIGxpZ2h0cyBvdXQgaW4gdGhlIGZvdXJ0aCwgYW5kIHdoZW4gSGFyZGVuIGRyaWxsZWQgYSB0aHJlZSB3aXRoIGp1c3QgdW5kZXIgc2l4IG1pbnV0ZXMgdG8gcGxheSwgdGhlIGxvbmcgYm9tYiB3YXMgSG91c3RvbidzIHNldmVudGggdGhyZWUgcG9pbnRlciBvZiB0aGUgcXVhcnRlciwgYW5kIGdhdmUgdGhlIHZpc2l0b3JzIGEgMTQgcG9pbnQgbGVhZC4gCkxlcyB0YXV4IGh5cG90aGNhaXJlcyBhdmFudGFnZXV4IGV0IHVuIG1hcmNoIGltbW9iaWxpZXIgZW4gcmVwcmlzZSBzb250IGRlIGJvbnMgYXJndW1lbnRzIHBvdXIgc29uZ2VyIHNyaWV1c2VtZW50ICBkZXZlbmlyIHByb3ByaXRhaXJlIGRlIHZvdHJlIGNvbmRvLiBQb3VyIFBoaWxpcHBlIE1pb3QsIGRpcmVjdGV1ciBhdXggcHJ0cyBjb21tZXJjaWF1eCAgbGEgRGVzamFyZGlucyBCYW5rLCBsYSBxdWVzdGlvbiBuZSBzZSBwb3NlIG1tZSBwYXMuIApUaGUgY2xvc3VyZSwgZm9ybWFsbHkgYW5ub3VuY2VkIGluIGEgbGV0dGVyIHRvIHN0dWRlbnRzIFNlcHQuIDQsIGlzIHRoZSBzZWNvbmQgdGhlIENvbGxlZ2Ugb2YgTWFzc2FnZSBUaGVyYXB5IGhhcyB1bmRlcmdvbmUgdGhpcyB5ZWFyLiAKQW5kIHlldCBJIGRvdWJ0IENvbnNlcnZhdGl2ZSBzdHJhdGVnaXN0cyBhcmUgcmVhZHkgdG8gcHVzaCB0aGUgcGFuaWMgYnV0dG9uLiAKOSksIEJ1Y2sgV2lsZCAoQXVnLiAKSGltIGNhbGxpbmcgeW91ciB0dXJuIGFsc28gc2VlbXMgbGlrZSBoZSdzIHRyeWluZyB0byB0cmFwLiAKTGVzIHJhaXNvbnMgZHUgY2hvaXggZGUgc2VzIHJlY2hlcmNoZXMgOiBwb3VycXVvaSA/IGNvbW1lbnQgPyBxdWFuZCA/CkkgbmV2ZXIgcnVuIGFueXRoaW5nIG1vcmUgdGhhbiA3ayB3aXRob3V0IHN0b3BwaW5nLCBiZWZvcmUgSSBqdXN0IGRlY2lkZWQgdG8gZ28gYW5kIHJ1biBhIDIxSy4KRmxvcCBpcyA5NzRyLiAKQSBsYWtlIG9mIGJ1cm5pbmcgZ2Fzb2xpbmUgYmV0d2VlbiB0aGUgaGlwcy4gCkljaCBmYWhyZSByZWdlbG1pZyBuYWNoIEphcGFuLCBpbiBlaW5lbSBNb25hdCB3aWVkZXIsIGljaCBoYWJlIGRhIG5vY2ggbmllKCEpIGJlc2NobWllcnRlIFpnZSwgQmFobmhmZSBvZGVyIFRvaWxldHRlbiBnZXNlaGVuLiBJbSBPc3RlbiBoYXR0ZW4gd2lyIHNvd2FzIGF1Y2ggbmljaHQuIE51ciBpbSBXZXN0ZW4gZ2VoZW4gZGllIExldXRlIGRlcmFydCByY2tzaWNodHNsb3MgbWl0IGZmZW50bGljaGVtIEVpZ2VudHVtIHVtIHVuZCBob2xlbiBzaWNoIGhpbnRlcmhlciBub2NoIGRhcmF1ZiBlaW5lbiBydW50ZXIsIHdlbm4gYW5kZXJlIExldXRlIHNpY2ggYmVyIFZhbmRhbGlzbXVzIGJlc2Nod2VyZW4uLiAKSXQgY2FuIGNoYW5nZSB3aXRoIHRoZSBhbW91bnQgb2YgbW9uZXkgZWFjaCBwb3QgaXMgd29ydGggb3Igd2hhdCBpdCB0YWtlcyBmb3IgZWFjaCBwb3QgdG8gYmUgd29uLiAKSUFOQUwgYnV0IGlmIGFueW9uZSBjb3VsZCBzcGVhayB0byB0aGF0LCB0aGF0IHdvdWxkIGJlIGVubGlnaHRlbmluZy4gCldoYXQgVG8gRG8gd2l0aCBPT0wgRGVhbGVyCkF0IHRoaXMgcG9pbnQgdGhlIHdvcnN0IHRoZXkgY2FuIGRvIGlzIGRlY2lkZSBub3QgdG8gcmFuayB5b3UuIApJIGdvdCB0aGUgY2hhbmNlIHRvIHVzZSBhIENyYWZ0eSBmb3IgYSBiaXQgbm90IGxvbmcgYWdvIGFuZCB0YmgsIEkgc2VlIG5vIGJlbmVmaXQgb3ZlciB0aGUgTWlnaHR5IGF0IGFsbC4gTm90IGJlaW5nIGFibGUgdG8gc3RhbmQgdGhlIGRldmljZSBvbiBlbmQgaXMgaGFyZGx5IGEgbmVnYXRpdmUuIEl0IHRha2VzIDEwcyB0byBmaWxsIHdpdGggdGhlIHRvb2wgdXNpbmcgb25lIGhhbmQgdG8gaG9sZCB0aGUgZGV2aWNlIGFuZCBvbmUgaGFuZCB0byBwb2tlIHRoZSBncmVlbmVyeSBpbi5CbHVldG9vdGgsIGxlZCBldGMgaXMgYWxsIGp1c3Qgc3R1ZmYgdGhhdCBkb2VzbiByZWFsbHkgYWlkIGluIHRoZSB1c2VyIGV4cGVyaWVuY2UuVGhlIG9ubHkgYmVuZWZpdCB0byB0aGUgQ3JhZnR5IHNlZW1zIHRvIGJlIGRyYXcgZGV0ZWN0aW9uIElNTy4gCkxldHMgc2F5IHRoZSBmbG9wIGlzIEs5NHIgYW5kIHlvdSBoYXZlIEtRLiBWIGlzIHJhaXNpbmcgNTAlIHByZSBzdGlsbC4gCkFuIGFtYXppbmcgcGxheWVyLCBCcmlzZWJvaXMgc2FpZCBvZiB0aGUgNiBmb290IDQsIDIxMSBwb3VuZCByaWdodCB3aW5nZXIsIHdobyBoYXMgYW5vdGhlciB5ZWFyIGxlZnQgb24gaGlzIGVudHJ5IGxldmVsIGRlYWwuIApQbHVzIGNsYXNzaXF1ZW1lbnQsIG9uIHJldHJvdXZlIHRyb2lzIHRlY2huaXF1ZXMgZCdpZGVudGlmaWNhdGlvbiBkZSBsYSBwZXJzb25uZSA6IGxlIG5vbSwgbGUgZG9taWNpbGUgZXQgbCd0YXQgY2l2aWwuIExlIG5vbSBkb2l0IGJlYXVjb3VwICBsYSBjb3V0dW1lLCAgbGEganVyaXNwcnVkZW5jZSBldCAgbGEgcHJhdGlxdWUgYWRtaW5pc3RyYXRpdmUuIFBhciBub20sIG9uIGVzdCBuY2Vzc2FpcmUgZGUgZGlzdGluZ3VlciBsZSBub20gcGF0cm9ueW1pcXVlIG91IG5vbSBkZSBmYW1pbGxlLCBkdSBwcm5vbS4gTGUgYnV0IGRlIGxhIHBvc3Nlc3Npb24gZCd1biBub20gZXQgZCd1biBwcm5vbSBlc3QgZG9uYyBkZSBwZXJtZXR0cmUgZCdpZGVudGlmaWVyIGxhIHBlcnNvbm5lLCBkYW5zIGxhIHNvY2l0IGV0IGF1IHNlaW4gZGUgbGEgZmFtaWxsZS4KRGVwZW5kaW5nIG9uIHdoZW4geW91IGFza2VkIGhpbSwgaGUgbWF5IGhhdmUgYmVlbiBib3JuIGF0IFN0LiBKb3NlcGgncyBpbiBIYW1pbHRvbiwgb3IgaW4gYSBiYXJuIGluIFdhdGVyZG93biwgb3IgYXQgaGFsZnRpbWUgZHVyaW5nIGEgVGlnZXIgQ2F0IGdhbWUuIFJpY2sgd2FzIGVsZXZlbiB5ZWFycyB5b3VuZ2VyIHRoYW4gaGlzIG5leHQgY2xvc2VzdCBzaWJsaW5nIFBhdWwuIEhlIHVzZWQgdG8gam9rZSB0aGF0IGhpcyBtb20gS2F0aGxlZW4gbmVlZGVkIHRoYXQgYnJlYWsgdG8gcmVzdCB1cCBmb3IgUmljaydzIGFycml2YWwuIApQb2ludCBzdXIgbCdhY3R1YWxpdCBkdSBDb25zZWlsIGRlIHF1YXJ0aWVyIGRlcHVpcyBsYSByZW5jb250cmUgZCdvY3RvYnJlIChjb21wdGUgcmVuZHUgY29uc3VsdGFibGUgZW4gbGlnbmUpCkphdmEgTWljcm9zZXJ2aWNlcyB3aXRoIFNwcmluZyBDbG91ZDogQ29vcmRpbmF0aW5nIFNlcnZpY2VzCkFsc28gYXJlIHlvdSByZWFsbHkgYWN0dWFsbHkgY29uY2VybmVkIGFib3V0IGhvdyBtdWNoIHRpbWUgeW91ciBodXNiYW5kIGlzIHNwZW5kaW5nIHBsYXlpbmcgcG9rZXIgb25saW5lIG9yIGlzIHlvdXIgcmVhbCBjb25jZXJuIHRoZSBzZXh1YWwgbmF0dXJlIG9mIHRoZSBjaGF0IHRoYXQgaXMgaGFwcGVuaW5nIGF0IHRoZSBwb2tlciByb29tIHNpdGU/IEhhdmUgeW91IGNhdWdodCBoaW0gZW5nYWdpbmcgaW4gdGhpcyBzZXh1YWwgY2hhdHRpbmcgaW4gdGhlIGNoYXQgcm9vbSBvciBoYXZlIHlvdSBqdXN0IHNlZW4gb3RoZXIgcGxheWVycyBkb2luZyBpdD8gSWYgeW91IGhhdmUgY2F1Z2h0IGhpbSBjaGF0dGluZyBsaWtlIHRoYXQgdG8gb3RoZXIgcGVvcGxlIHRoZW4gc2l0IGhpbSBkb3duIGFuZCBleHBsYWluIHRvIGhpbSB0aGF0IHlvdSBmZWVsIHRoYXQgYmVoYXZpb3VyIGlzIG5vdCBhY2NlcHRhYmxlIGZvciBhIG1hcnJpZWQgbWFuIGFuZCB0aGF0IHlvdSB3b3VsZCBsaWtlIGZvciB0aGF0IGtpbmQgb2YgY2hhdHRpbmcgdG8gY2Vhc2UgaW1tZWRpYXRlbHkgYXMgeW91IGZlZWwgaXQgaXMgYSBmb3JtIG9mIGRlY2VwdGlvbiBieSBoaW0uIApJZiBhIHBsYXllciBvbmx5IGhhcyA0MCBkb2xsYXJzIHdvcnRoIG9mIGNoaXBzLCB0aGFuIHlvdSBrbm93IGhlIGlzIGxvc2luZyBhbmQgdGhhdCBoZSBwcm9iYWJseSBkb2Vzbid0IGtub3cgbXVjaCBhYm91dCBwb2tlciBzaW5jZSB5b3Ugc2hvdWxkIGFsd2F5cyBoYXZlIGVub3VnaCBjaGlwcyBmb3IgYXRsZWFzdCAxNSBiaWcgYmV0cy4uIApXYXRlcmJvdHRsZWJhbmRpdCB1CldhbHQgU3RvbGwncyBXZWIgc2l0ZSBhbmQgdGhlIDNMUyBXZWxsbmVzcyBwcm9ncmFtLiAKV2luZHNvciBFc3NleCBkZXNlcnZlcyBub3RoaW5nIGxlc3MuLiAKT2xkIFZlZ2FzIGlzIGJhc2ljYWxseSB0aGUgY2xhc3NpYyBuZW9uIHBsYXlncm91bmQgcGVvcGxlIHBpY3R1cmUgd2hlbiB0aGV5IHRoaW5rIG9mIFZlZ2FzIGluIHRoZSAxOTUwcy4gCklmIHlvdSBtb2xlc3RlZCB0aGlzIGtpZCwgd2h5IHdvdWxkIHlvdSB3YW50IGhpbSBiZWluZyBhc2tlZCBhbGwgdGhlc2UgcXVlc3Rpb25zIGJ5IGEgdGVhbSB0aGF0IHRyeWluZyB0byBnZXQgaGltIHRvIHNxdWVhbD8uIAoiV2UndmUgaGFkIG9uZSBmb3IgbWFueSB5ZWFycywgYnV0IGZvciBhIHdoaWxlIG5vdyB3ZSd2ZSB3YW50ZWQgdG8gdGFrZSBpdCB1cCBhIG5vdGNoLiBJdCdzIGZyZXNoLCBjbGVhbiBhbmQgbW9kZXJuLiBUaGUgaW5mb3JtYXRpb24gYmVsb3cgd2lsbCBiZSB1c2VkIHRvIG9wdGltaXplIHRoZSBjb250ZW50IGFuZCBtYWtlIGFkcyBhY3Jvc3MgdGhlIG5ldHdvcmsgbW9yZSByZWxldmFudCB0byB5b3UuIFlvdSBjYW4gYWx3YXlzIGNoYW5nZSB0aGUgaW5mb3JtYXRpb24geW91IHNoYXJlIHdpdGggdXMgYnkgZWRpdGluZyB5b3VyIHByb2ZpbGUuIApNYWRlIGZyb20gb3JnYW5pYyBwb21hY2UgKGFrYSBncmFwZSBza2lucyBhbmQgc2VlZHMsIG9yIHdpbmUgd2FzdGUpLCB3aGljaCB3b3VsZCBvdGhlcndpc2UgYmUgZGlzY2FyZGVkLCBCaW9mbGF2aWEgaXMgYW4gaW5ncmVkaWVudCB0aGF0IGNhbiBiZSBhZGRlZCB0byBzbW9vdGhpZXMsIHlvZ3VydCwgY2VyZWFsLCBqdWljZSBhbmQgcG9ycmlkZ2UgYXMgYSBmb29kIHN1cHBsZW1lbnQgdG8gaGVscCBtZWV0IHlvdXIgZGFpbHkgcmVxdWlyZW1lbnQgb2YgYW50aW94aWRhbnRzLiAKWW91IHdpbGwgbm8gbG9uZ2VyIGhhdmUgdGhlIHByaXZpbGVnZSBvZiBrbm93aW5nIGFueXRoaW5nIGFib3V0IHRoaXMgcHJlZ25hbmN5LCBvciBhYm91dCBtZSBvciBteSBmYW1pbHksIHVudGlsIEkgYW0gY2VydGFpbiBpdCBpcyBzb21ldGhpbmcgSSdtIHJlYWR5IGZvciB5b3UgdG8gYmxhYiBhYm91dC4uIApJdCB3YXMgbm90IG9ubHkgdGhlIGNsb3Nlc3QgdGhpbmcgdG8gYSByZWFsIHBva2VyIHNldCB0aGV5IHVzZSBpbiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLCBidXQgdGhlIGhvbGRpbmcgY2FzZSBnYXZlIG9mZiBhIHByb2Zlc3Npb25hbCBwZXJzb25hLiAKRGF2aWQgYWx3YXlzIGhvc3RzIGEgcG9rZXIgZ2FtZSBvbiBGcmlkYXkgb3IgU2F0dXJkYXkgbmlnaHQuIApJIHVzZWQgYSBkdXN0eSBwYW5zeSBwdXJwbGUgdW5kZXIgQm9ybiBQcmV0dHkncyBtYWduZXRpYyBnZWwgaW4gR2xhbW91cm91cyBMaWdodC4gSG9seSBtb2x5ISBJdCBnYXZlIG1lIHRoZSBtb3N0IHVuZXhwZWN0ZWRseSBhd2Vzb21lIERpc25leSBWaWxsYWluIC8gR2FtZSBvZiBUaHJvbmVzIERyYWdvbiBFeWVzIHZpYmUhIFRoZSBjb2xvciBpbXBvc3NpYmxlIHRvIHBob3RvZ3JhcGguIApJIGhhdmUgYmVlbiB0YWtpbmcgcGljdHVyZXMgYXMgSSB3YWxrIGFyb3VuZCBNdW5pc2luZyB3aGlsZSB3YWl0aW5nIGZvciBwZW9wbGUgdG8gY2FsbCBpbi4gSSBydW4gb2ZmIGZvciBzb21lIGx1bmNoIHNvbWV3aGVyZSB1c3VhbGx5IEpvaG5ueSBEb2dzLiBJZiB5b3UgYXJlIGluIE11bmlzaW5nLCBJIHdvdWxkIHNvIHN1Z2dlc3QgSm9obm55IERvZ3MhIE9uZSB0aGluZyBhYm91dCBKb2hubnkgRG9ncywgdGhleSBhcmUgcGFja2VkIHNvIHBsYW4gb24gYSBsb25nIGxpbmUhIE15IG90aGVyIGZhdm9yaXRlIHNwb3QgaW4gTXVuaXNpbmcgaXMgdGhlIEZhbGxpbmcgUm9jayBDYWZlLiBBIGZlbGxvdyBOYW5jeSBvd25zIHRoaXMgY2FmZS4gU2hlIGhhcyBhIHRvbiBvZiBib29rcyBmb3IgeW91IHRvIHJlYWQsIGxpdmUgZW50ZXJ0YWlubWVudCBzb21lIGRheXMvbmlnaHRzLCBhbmQgdGhleSBtYWtlIGFtYXppbmcgc2FuZHdpY2hlcy4gSWYgeW91IGFyZSBjcmF2aW5nIHBpenphLCBnbyB0byBQaWN0dXJlZCBSb2NrcyBQaXp6YS4gUGl6emEgaXMgY29va2VkIGluIGFib3V0IDggbWludXRlcyBhbmQgYXQgYSBncmVhdCBwcmljZS4gVGhlIGJyZWFkIHN0aWNrcyBhcmUgYW1hemluZyBhcyB3ZWxsLiBJIGVhdCBwYXN0aWVzIGF0IE11bGRvb24gSSBhbSBub3Qgc3VyZSB3aGVyZSBlbHNlIHBhc3RpZXMgYXJlIHNvbGQgaW4gdG93biwgYnV0IHRoaXMgaXMgdGhlIHBsYWNlIGV2ZXJ5b25lIGdvZXMgdG8gZm9yIHBhc3RpZXMuIEkgYWx3YXlzIGdldCBhIHRyYWRpdGlvbmFsIGJlZWYgcGFzdHkuIFdlIGRvIGhhdmUgYSBuZXcgY29mZmVlIHNob3AgaW4gTXVuaXNpbmcuIEl0IGlzIGNhbGxlZCBGdWRnZSBhbmQgQ29mZmVlLgpXaG8gSSBzZWUsIHdoYXQgSSBtYWtlLCBob25lc3R5IGluIG1hcmtldGluZywgZXRjLiAKSSBmaWd1cmVkIHNvbWUgb2YgbXkgbGVzc29ucyB3b3VsZCBhcHBseSB0byB5b3Ugc3VtbW9uZXJzIGhlcmUKSSB3b3VsZCBzYXkgIk5vLCBJJ20gbm90IGNhbGxpbmcgaGVyIHRvIHNtb290aCB0aGluZ3Mgb3Zlci4gU2hlIHVuZGVybWluZWQgdXMgYm90aCwgc28gc2hlIGRvZXNuJ3QgZ2V0IGEgInNtb290aGluZyIgY2FsbC4gSWYgc2hlIHdhbnRzIHRvIGNhbGwgYW5kIHNtb290aCB0aGluZ3Mgb3ZlciBmb3IgcmVmdXNpbmcgdG8gZm9sbG93IHRoZSBwYXJlbnRpbmcgZGVjaXNpb25zIHdlJ3ZlIG1hZGUgYW5kIGZvciBkaXNjdXNzaW5nIHRoaXMgd2l0aCBhIHRoaXJkIHBhcnR5LCBJJ20gaGFwcHkgdG8gdGFrZSB0aGF0IGNhbGwuIApCdXQgdGhhdCB0aGUgcmVhbGl0eSBpbiB3aGljaCB3ZSBsaXZlLiAKSC4gTHlubiBDaGFwZWwgb2YgQ2Fyc29uIEZ1bmVyYWwgSG9tZXMuLiAKQXMgeW91IGRyYWcgdGhlIHNvbmFyIGFjcm9zcyB0aGUgd2F0ZXIgaXQgd2lsbCBnaXZlIHlvdSBhIDNEIHZpZXcgb2Ygd2hhdCB0aGUgYm90dG9tIGxvb2tzIGxpa2Ugc28geW91IGNhbiBjcmVhdGUgYSBmaXNoaW5nIG1hcCB0aGF0IHlvdSBjYW4gc2F2ZSBvbiB5b3VyIHBob25lLiAKMS4gRG9lcyB0aGUgcG9rZXIgcm9vbSBwcmlvcml0aXplIHNhZmV0eSBhbmQgcHJpdmFjeT8gV2hlbiB5b3UgZGVjaWRlIHRvIGVudGVyIHlvdXIgaW5mb3JtYXRpb24gYW5kIGNyZWRpdCBjYXJkIG51bWJlciwgZG9lcyB0aGUgcG9rZXIgcm9vbSBhc3N1cmUgeW91IG9mIHRoZSBzYWZldHkgb2Ygc3VjaCBpbmZvcm1hdGlvbiBhbmQgdGhhdCB0aGVzZSB3aWxsIG5vdCBiZSBzb2xkPyBBc2lkZSBmcm9tIHBlcnNvbmFsIGluZm9ybWF0aW9uLCBvdGhlciB0aGluZ3MgeW91IG5lZWQgdG8gY29uc2lkZXIgYXJlIHRoZSBmb2xsb3dpbmcgIERldGVybWluZSB3aGF0IHByb3RlY3Rpb24gdGhleSBlbmZvcmNlIHN1Y2ggdGhhdCB0aGUgc29mdHdhcmUgYmVpbmcgdXNlZCBpbiB0aGUgcG9rZXIgcm9vbSBjYW5ub3QgYmUgbWFuaXB1bGF0ZWQgYW5kIHRoYXQgdGhlaXIgc2VydmVycyBhcmUgc2VjdXJlLiAgQ2hlY2sgdGhlIGtpbmQgb2YgYWxnb3JpdGhtIHRoZXkgdXNlIGZvciBjYXJkIHNodWZmbGluZy4gCkltbWF0dXJlIGF1dG9tYXRlZCBwYXRoIHF1YWxpdHkgZGV0ZWN0aW9uIGFuZCBzd2l0Y2hpbmcuIEhvcGVmdWxseSB3aGVuIHRoZXJlIGlzIGdyZWF0ZXIgZGVwbG95bWVudCBkZW5zaXR5IGFuZCBtb3JlIHRpbWUgdG8gZGV2ZWxvcCB0aGUgYXV0b21hdGVkIG1vbml0b3Jpbmcgb2YgbGlua3MsIGRldGVjdGlvbiBvZiBpc3N1ZXMgd2l0aCBsaW5rIGhlYWx0aCBhbmQgYXV0b21hdGVkIHN3aXRjaGluZyB0byBoZWFsdGhpZXIgbGlua3MgdGhpcyB3aWxsIGJlIGxlc3Mgb2YgYSBwcm9ibGVtLgpMaWtlLCBpdCBiZSBzb21lIGRydWcgdGhhdCBzdXBwb3NlZCB0byBkbyBzb21ldGhpbmcgdG8geW91ciBraWRuZXlzIG9yIHdoYXRldmVyIGFuZCBpdCBiZSBsaWtlLCBNYXkgY2F1c2UgbmVydm91c25lc3MsIGJsaW5kbmVzcywgbWVtb3J5IGxvc3MsIG5pZ2h0IHRlcnJvcnMsIGRpc29yaWVudGF0aW9uLCBuYXVzZWEsIGRpYXJyaGVhLCBkaWFiZXRlcywgdmVydGVicmFsIG1lbHRpbmcsIGNyYW5pYWwgc2hyaW5rYWdlLCBzdWRkZW4gZGVhdGgsIG9yIGtpZG5leSBmYWlsdXJlIFt3YWl0LCBraWRuZXkgZmFpbHVyZT8hXS4gU29tZSBwYXRpZW50cyBleHBlcmllbmNlZCByYWNpbmcgaGVhcnQsIGhhbGx1Y2luYXRpb25zLCBhbmQgbmV0aGVyd29ybGQgY2hhbm5lbGluZy4gCkZvciB5ZWFycywgdGhlIGhlYWQgb2YgQWxhYmFtYSdzIENocmlzdGlhbiBDb2FsaXRpb24gSm9obiBHaWxlcyBoYXMgYmVlbiBwdXR0aW5nIG1vbmV5IHdoZXJlIGhpcyBtb3V0aCBpcy4gSGUgaGFzIGJlZW4gYSBtYWpvciBwbGF5ZXIgaW4gZGVmZWF0aW5nIG1vc3QgZ2FtYmxpbmcgcHJvcG9zYWxzIGluIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSwgYW5kIGZvciB5ZWFycyBoZSdzIGJlZW4gc2F5aW5nIG5vbmUgb2YgdGhlIG1vbmV5IGZvciB0aGF0IGZpZ2h0IGNhbWUgZnJvbSBNaXNzaXNzaXBwaSBjYXNpbm9zLiAKTGVzIGxhY3J5bW9zLCAgbGEgbGltaXRlIGMgZGUgYm9ubmUgZ3VlcnJlIHBvdXIgZGlzcGVyc2VyIHVuZSBmb3VsZSAocXVhbmQgYyBqdXN0aWZpLCBldCBsZXMgc3F1ZWxsZXMgc29udCB0cnMgcmFyZXMpLCBtYWlzIGxlcyBleHBsb3NpZnM/IEMgdW4gcGV1IHJpc3F1IGV0IGRpc3Byb3BvcnRpb25uIG5vbj8KVGhlIHN0YXRlIEdhbWluZyBDb250cm9sIEJvYXJkIHJlY2VudGx5IGFubm91bmNlZCBhIHBsYW4gdG8gbGltaXQgc2l0ZXMgaG9zdGluZyBwb2tlciBnYW1lcyBhcyBmdW5kcmFpc2VycyBmb3Igbm9ucHJvZml0cyB0byBmb3VyIG5pZ2h0cyBhIHdlZWssIGFsb25nIHdpdGggcmVxdWlyaW5nIHRocmVlIHdvcmtlcnMgZnJvbSB0aGUgY2hhcml0eSB0byBiZSBvbiBoYW5kIGR1cmluZyBhbnkgZXZlbnQuIApIZSB3aGlueSwgdW5pbnRlcmVzdGluZywgbmV2ZXIgY2FuIG1ha2UgYW55IGRlY2lzaW9uIGFuZCB3aGVuIGhlIGRvZXMsIGl0IGlzIHVzdWFsbHkgYSBjb2xvc3NhbCBtaXN0YWtlLiAKVGFrZSBub3RlIHRoYXQgaW4gdGhpcyBzdHVkeSwgbG93ZXIgbWFnbmVzaXVtIGxldmVscyB3ZXJlIGFsc28gYXNzb2NpYXRlZCB3aXRoIGEgaGlnaGVyIGJvZHkgbWFzcyBpbmRleCwgaW5kaWNhdGluZyB0aGUgY29ubmVjdGlvbiBiZXR3ZWVuIGJvZHkgZmF0IHBlcmNlbnRhZ2UgYW5kIG1hZ25lc2l1bSBsZXZlbHMuCkV2ZW4gdGhlIHBva2VyIGZhbnMgaGF2ZSBhbHNvIGJlY29tZSBpbnRlcmVzdGVkIGFib3V0IHRoZXNlIHBva2VyIHBpZWNlcy4gClNlbi4gClRoZSB3b3JrIHdhcyBpbnN0YWxsZWQsIHRoZSBjaXR5IGtuZXcgdGhlIGxvdCBuZXh0IHRvIGl0IGF0IHRoZSBWQ0MgQ2xhcmsgU3RhdGlvbiBvZiB0aGUgTWlsbGVubml1bSBMaW5lIGNvdWxkIGJlIGRldmVsb3BlZC5Jcm9uaWNhbGx5LCB0aGUgc2l0ZSB3YXNuIGFydGlzdCBLZW4gTHVtIGZpcnN0IGNob2ljZS4gCkV2ZW4gdGhvdWdoIHlvdSdyZSBzaXR0aW5nIHdpdGggYSBwYWlyIG9mIGFjZXMsIGlmIHBvc3NpYmxlIHRyeSB0byBhdm9pZCBhIHNob3cgZG93bi4gCkJhbmtyb2xsIHN0ZWh0IGpldHp0IGJlaSAzLjAyMEJvbnVzIGZyZWlnZXNwaWVsdCB1bmQgbmV0dGVzIFJha2ViYWNrCkkgYWN0dWFsbHkgaGF2ZSBhIGxpZmUgb3V0c2lkZSBvZiBSZWRkaXQgdW5saWtlIHlvdSBmdWNraW5nIGR3ZWVicy4gClRoZSBzZXJtb24gd2FzIGp1c3Qgc28gcmFuZG9tIGFuZCB1bnBsYW5uZWQuIEV2ZXJ5b25lIHdhcyB1bmNvbWZvcnRhYmxlIGFuZCB3ZSBjb3VsZCBhbGwgdGVsbCB0aGF0IG15IGZyaWVuZCdzIGRhZCB3YXMgYWJzb2x1dGVseSBwaXNzZWQuIE15IGZyaWVuZCBpcyBubyBsb25nZXIgbWFycmllZCB0byB0aGF0IGd1eSBmb3IgdW5yZWxhdGVkIHJlYXNvbnMuLiAKSSB3YXMgZmVlbGluZyBsaWtlIEkgaGFkIG5vdGhpbmcgbGVmdCBmb3IgbWUuLiAKTXlzcGFjZSB1ClNob3VsZCBjb250aW51ZSB1c2luZyBpdCBoYXBwaWx5IGFuZCB0aGV5IHNob3VsZG4gcmVhbGx5IGNhcmUgd2hvIHRoZSBzaGFyZWhvbGRlcnMgYXJlLiAKQnVpbGRpbmcgYSBnb29kIG9ubGluZSBwb2tlciBzdHJhdGVneSBjYW4gYmUgdGltZSBjb25zdW1pbmcgYW5kIHdvbid0IGhhcHBlbiBvdmVybmlnaHQuIFlvdSB3aWxsIG5lZWQgdG8gc2VlIGEgbG90IG9mIGhhbmRzIHRvIGZ1bGx5IG1hc3RlciB0aGUgZ2FtZS4gU28gcGxheSB3aGVuIHlvdSBjYW4gYW5kIGFkZCB0aGVzZSB0aXBzIHRvIHlvdXIgb25saW5lIHRleGFzIGhvbGRlbSBzdHJhdGVneS4KQnV0IHRoaXMgb3RoZXJ3aXNlIHNvbGlkIGJ1c2luZXNzIGhhcyBhIHBvdGVudGlhbGx5IGZhdGFsIGZsYXcgaXRzIGRlcGVuZGVuY2Ugb24gRmFjZWJvb2sgcGxhdGZvcm0gYW5kIHVzZXIgYmFzZS4gCklzdGFuYnVsMjAwIHUKVGhlc2UgcGVvcGxlIHRydWx5IGRvIG5vdCBjYXJlIGFib3V0IHRoZSBsb3NzIGFuaW1hbCBsaXZlcyBleGNlcHQgaWYgaXQgaXMgZHVlIHRvIHRoZSBodW1hbiBkaWV0LiBUaGVpciBzZW50aW1lbnQgaXMgc2ltaWxhciBDb25zZXJ2YXRpdmVzIHdobyBmaWdodCBmb3IgdGhlIHJpZ2h0cyBvZiB1bmJvcm4gZmV0dXNlcyBidXQgZG9uIGdpdmUgYSBzaGl0IGFib3V0IHRoZSBjaGlsZCBhZnRlciBpdCBpcyBib3JuLiAKU29tZXRpbWVzIHRoZSBsb25nZXIgeW91IGFnb25pc2Ugb3ZlciBpdCwgdGhlIG1vcmUgeW91IHdpbGwgY2F1c2Ugb3RoZXJzIHRvIGRvIHNvLCB0b28uIApUaGV5IGdvIGJhY2sgdG8gdGhlaXIgcmVzcGVjdGl2ZSB0YWJsZXMuIEJhY2sgYXQgdGhlIHBvbGljZSBzdGF0aW9uLCBndXlzIGdvIGpvZ2dpbmcgYnkgcmFwaWQgZmlyZSBjaGFudGluZyAiZHJvaXRlIGdhdWNoZSBkcm9pdGUgZ2F1Y2hlIGRyb2l0ZSBnYXVjaGUsIiB3aGljaCBpcyBhY3R1YWxseSBwcmV0dHkgZGFtbiBmdW5ueS4gKGl0IG1lYW5zIHJpZ2h0LCBsZWZ0LCByaWdodCwgbGVmdCkgSG9va2VyIGFuZCB0aGUgZ2FuZyBkaXNjdXNzIHRoZSBiYWQgZ3V5cyBhdCB0aGUgc3F1YWQgY2FyIGFuZCBsb29rIGF0IG11Z3Nob3RzLiAKU2NobW9zYnkgdQpXaGVuIHlvdSBzYXkgYSAic2FmZSIgd2F5IG9mIGdhbWJsaW5nLCBJIGFtIGFzc3VtaW5nIHRoYXQgeW91IGFyZSB0YWxraW5nIGFib3V0IGJlaW5nIGFibGUgdG8gZ2FtYmxlIHdpdGhvdXQgZ2V0dGluZyBjYXJyaWVkIGF3YXkgYW5kIGxvc2luZyB5b3VyIGhvdXNlLCB5b3VyIGNhciwgYW5kIGxpZmUgc2F2aW5ncy4gSWYgdGhpcyBpcyB0aGUgY2FzZSwgaXQgYWxsIGJlZ2lucyB3aXRoIHlvdXIgbWluZHNldC4gTm9ib2R5IHJlYWxseSB3YW50cyB0byBsb3NlIGluIGdhbWJsaW5nIGJ1dCB5b3UgaGF2ZSB0byBhY2NlcHQgdGhlIGZhY3QgdGhhdCB5b3UgY2FuIGFuZCB3aWxsIGxvc2UgbW9uZXkuIApJZiB5b3UgZGF0ZSB0aGUgZ3V5LCB0aGF0IHdpbGwgYWxtb3N0IGNlcnRhaW5seSBiZSB0aGUgZW5kIG9mIHlvdXIgZnJpZW5kc2hpcCB3aXRoIGhpcyBleC4uIApBbHdheXMgcmVhZCB0aGUgaW5zdHJ1Y3Rpb25zIGFuZCBjYXV0aW9ucyBhYm91dCBlc3NlbnRpYWwgb2lscyBiZWZvcmUgcHVyY2hhc2luZyB0aGVtLiBQcmVnbmFudCB3b21lbiwgbWFueSBjaGlsZHJlbiBhbmQgc29tZSBwZW9wbGUgd2l0aCBpbGxuZXNzZXMgY2Fubm90IHVzZSBjZXJ0YWluIGVzc2VudGlhbCBvaWxzLiBXaGVuIGJ1eWluZyBhbiBhcm9tYXRoZXJhcHkgZ2lmdCBjb250YWluaW5nIGVzc2VudGlhbCBvaWxzLCBpbmZvcm0gdGhlIHJlY2lwaWVudCB0aGF0IHRoZSBwcm9kdWN0IGNvbnRhaW5zIGVzc2VudGlhbCBvaWxzIGFuZCBsZXQgdGhlbSBrbm93IHdoYXQgdGhlIHByZWNhdXRpb25zIGFyZSBvciB3aGVyZSB0byBsZWFybiBvZiB0aGVtLiBFc3NlbnRpYWwgb2lscyBzaG91bGQgbmV2ZXIgYmUgcHV0IGRpcmVjdGx5IG9uIHRoZSBza2luICh0aGV5IHNob3VsZCBiZSBhZGRlZCB0byBhIGNhcnJpZXIgb2lsIG9yIGxvdGlvbikgYW5kIHNob3VsZCBuZXZlciBiZSBpbmdlc3RlZCB1bmxlc3MgeW91IGFyZSB1bmRlciB0aGUgY2FyZSBvZiBhbiBhcm9tYXRoZXJhcGlzdC4KWW91IGNhbiBwYXJzZSBbWF1IVE1MIHdpdGggcmVnZXguIApCdXQgZXZlcnlvbmUga25vd3MgYW4gYXJ0aXN0IHdvcmsgYmVjb21lIG1vcmUgdmFsdWFibGUgYWZ0ZXIgdGhleSBkaWUuIApPbmUgcmVhbGx5IGRvZXMgbm90IGdvIHRvIG1lZGljYWwgc2Nob29sIHRvIHN0dWR5IGhlYWx0aDsgYnV0IHJhdGhlciwgb25lIGdvZXMgdG8gbWVkaWNhbCBzY2hvb2wgdG8gc3R1ZHkgZGlzZWFzZWFuZCB0aGUgdHJlYXRtZW50IG9mIHRoZSBzeW1wdG9tcyBvZiBkaXNlYXNlIGJ5IHRoZSB1c2Ugb2YgZHJ1Z3MsIHN1cmdlcnkgYW5kIChvZnRlbiBleHBlbnNpdmUpIG1lZGljYWwgaW50ZXJ2ZW50aW9uLgpTaGFuZ2hhaSBNYXNzYWdlIFRyb3VibGVzCkkgcmVtZW1iZXIgYXNraW5nIGlmIEkgd2FzIGFsbG93ZWQgdG8uIEluIHJldHJvc3BlY3QgSSB1bmRlcnN0YW5kIGhvdyBob3JyaWJsZSBvZiBhIG1vdmUgdGhhdCBpcywgYnV0IEkgd2FzIGEgbmFpdmUgYmVnaW5uZXIsIEkganVzdCB3YW50ZWQgdG8ga25vdyBteSByaWdodHMuIApJdCByZWNlaXZlZCBmYWlybHkgcG9zaXRpdmUgcmV2aWV3cyB1cG9uIGxhdW5jaCwgd2l0aCBvdXIgb3duIHJldmlldyBhd2FyZGluZyB0aGUgZ2FtZSBhIDcgb3V0IG9mIDEwLiAKQXNoIHNob3ZlbHMgYXJlIG1hZGUgdG8gc2Nvb3AgYXNoIGZyb20gdGhlIGJvdHRvbSBvZiB0aGUgZmlyZXBsYWNlLiBUaGUgc2hvdmVscyBhcmUgYXNzaXN0ZWQgYnkgZmlyZSBicm9vbXMgd2hpY2ggYnJ1c2ggdGhlIGFzaCBhbmQgYXNoIGJ1Y2tldHMgd2hpY2ggaG9sZCB0aGUgYXNoLiBXaGVuIGFzaCBidWlsZHMgdXAgdW5kZXIgdGhlIGdyYXRlIGl0IG5lZWRzIHRvIGJlIHJlbW92ZWQuIApTbyBldmVuIHRob3VnaCBJIGhhdmVuIGJyb2tlbiB0aHJvdWdoIG9uIERNVCBpbiBzZXZlcmFsIHllYXJzLCB0aHJvdWdoIG1lZGl0YXRpb24gYW5kIGEgbGl0dGxlIGhlbHAgZnJvbSB3ZWVkIGFuZCBzb21ldGltZXMgbWljcm9kb3Npbmcgb24gb3RoZXIgcHN5Y2hlZGVsaWNzLCBJIGNhbiBnZXQgaW50byB0aGVzZSBvdGhlciBkaW1lbnNpb25zLiBOb3QgYXMgZGVlcGx5IGFzIG9uIGEgZnVsbCBibG93biBETVQgdHJpcCwgb2YgY291cnNlLCBidXQgSSB3b3JraW5nIG9uIGl0IGFuZCBpdCBleHRyYW9yZGluYXJpbHkgZW5qb3lhYmxlLiBJIGZlZWwgbGlrZSBJIHN0aWxsIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyBwYXRoLCBidXQgaXQgYWtpbiB0byBzdXBlciBhZHZhbmNlZCBsdWNpZCBkcmVhbWluZyBvciByZW1vdGUgdmlld2luZyBvciBzb21ldGhpbmcgIGJ1dCBldmVuIG1vcmUgaW50ZXJlc3RpbmcgYW5kIHJld2FyZGluZywgYmVjYXVzZSB5b3UgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgZW50aXRpZXMsIHRoaXMgb3RoZXIgaW50ZWxsaWdlbmNlLiAKRURJVDogR290IGhvbWUgZm9yIGEgZG91YmxlIGNoZWNrICJsaWtlIGFuIG9sZCBwYWlyIG9mIG1pbmUiIGlzIHNwb2tlbiB3aGVuIHdlIG9ubHkgc2VlIHRoZSBiYWNrIG9mIEpvZGllIGhlYWQsIGFuZCBoZXIgamF3IGRvZXNuIGFwcGVhciB0byBiZSBtb3ZpbmcgaW4gdGhlIHNob3QuIEkgd291bGQgcHV0IG1vbmV5IG9uIHNvbWUgbGFzdCBtaW51dGUgY29udGludWl0eSBiZWluZyBhZGRyZXNzZWQgaW4gcG9zdCA7KQpUaGUgNDQgdGFibGUgdG91cm5hbWVudCB3YXMgaGVsZCBhdCBUYXlsb3JzIExha2VzIEhvdGVsIGFuZCBHZW9yZ2Ugd2FzIGFtb25nIHRocmVlIG1lbWJlcnMgb2YgdGhlIEFsYnVyeSBXb2RvbmdhIGJyYW5jaCB3aG8gcHJvZ3Jlc3NlZCB0byB0aGUgZmluYWwgdGFibGUuIEFsYnVyeSdzIENocmlzIE8nVG9vbGUgZmluaXNoZWQgcnVubmVyIHVwIGFuZCBXb2RvbmdhJ3MgSmFzb24gU3RlYXIsIDI2LCBmaW5pc2hlZCBzaXh0aC4gCjEgVWhyIG1vcmdlbnMgZmFuZGVuIHdpciBlcyBub2NoIGtsYXNzZSwgQmVzdGFuZHRlaWwgZGVzIGVtc2lnZW4gVHJlaWJlbnMgenUgc2VpbjogV2llIHZpZWxlIHZlcnNjaGllZGVuZSBGIGhpZXIgb2huZSBVbnRlcmxhc3MgZWluICB1bmQgYXVzZmFocmVuOyB3YXMgZiBrb21pc2NoZSBHZXIgZGllIHdpdHppZ2VuLCBhbnRpcXVhcmlzY2ggYW5tdXRlbmRlbiBNb3RvcnIgbWFjaGVuOyB3aWUgYXVzZ2VsYXNzZW4gZGllIEdyaWVjaGVuIGhpZXIgZHJhdWYgc2luZCB1bmQgd2llIHNjaCBzaWUgenUgaWhyZW4gc3RpbW11bmdzdm9sbGVuIE1lbG9kaWVuIHNpbmdlbiBrIEFscyBkYW5uIGFiZXIgYXVjaCB1bSAzIFVociBtb3JnZW5zIGltbWVyIG5vY2ggb2huZSBVbnRlcmxhc3Mgb2hyZW5iZXQgR2VrbmF0dGVyIGRlbiB2aWVsIHp1IGxhdXRlbiBmYWhyYmFyZW4gVW50ZXJzZXR6ZXJuIGVudGZ1aHIsIGRhcyBHZWdyIHp1IG5lcnZpZ2VyIE11c2lrIGtlaW4gRW5kZSBuZWhtZW4gd29sbHRlIHVuZCBpbiBkZW4gZnIgTW9yZ2Vuc3R1bmRlbiBkaWUgZXJzdGUgQXV0b2YgdW50ZXIgamVkZXIgTWVuZ2UgR2V0IGRlbiBJbmhhbHQgaWhyZXMgTGVpYmVzIGVudGxlZXJ0ZSwgd2FyIFNjaGx1c3MgbWl0IGx1c3RpZy4gClZlcnkgdmVyeSB2ZXJ5IGZldyBwZW9wbGUgaGVyZSBtYWtlIGEgbGl2aW5nIGF0IHBva2VyLiAKV2UgaGF2ZSBzZWVuIHRoZSBpc3N1ZSBvbiBSZWFsdGVrIEludGVsIGFuZCBRdWFsY29tbSBhcyBmYXIgaGFyZHdhcmUgZ29lcy4gCjEgaW4gQXVndXN0LiAKSWYgeW91IG92ZXIgYW5hbHl6ZSBhIGRlYWwsIGlmIGl0J3MgYSBnb29kIGRlYWwsIHRoZSBwZXJzb24gd2hvIGFjdGVkIG9uIGl0IHdpbGwgYmUgdGhlIG9uZSB0ZWxsaW5nIHlvdSBob3cgZ3JlYXQgaXQgd2FzLiAKQnJvYWRseSBzcGVha2luZywgdGhleSB3aWxsIG5lZWQgdG8gYWN0IGFzIHBoYXJtYWNpc3RzLiAKRXZlbiBzZXJ2aWNlIGluZHVzdHJpZXMgbGlrZSBteSBvd24gd2hpY2ggZG9lc24ndCBzaGlwIHBoeXNpY2FsIGdvb2RzIGFjcm9zcyB0aGUgYm9yZGVyIHdvdWxkIGJlIGh1cnQgYnkgdGhlIHRyYWRlIGZyaWN0aW9uIGNyZWF0ZWQgYnkgYm9yZGVyIGNoZWNrcywgbm90IHRvIG1lbnRpb24gdGhlIGRhbmdlciB0aGF0IGEgaGFyZCBib3JkZXIgY291bGQgdW5yYXZlbCB0aGUgR29vZCBGcmlkYXkgYWdyZWVtZW50LgpJJ2Qgc2F5IGdvIGZvciB0aGUgTVJJIGlmIHlvdSBjYW4gYWZmb3JkIGl0LiAKIk5vIGdsb3ZlcywgZWl0aGVyLiBOb3RoaW5nIGFydGlmaWNpYWwuIEp1c3Qgc3RyYWlnaHQgb3JnYW5pYyBoYW5kcy4gWW91IGRvbid0IHNlZSB0aGF0IGEgbG90IGluIHRoaXMgZGF5IGFuZCBhZ2UuIFdlIGtlZXAgdHJ5aW5nIHRvIGdldCBjb2FjaCAoTWlrZSkgU2h1bGEganVzdCB0byBnaXZlIG1lIGEgY2hhbmNlLiIKUGluayBNYXNzYWdlIGlzIHdlbGwgbG9jYXRlZCwgdmVyeSBjbG9zZSB0byBQaHJvbSBQaG9uZyBCVFMsIG9yIGFib3V0IDEwIG1pbnV0ZXMgd2FsayBvciBhIHNob3J0IG1vdG9yY3ljbGUvdGF4aSByaWRlIGZyb20gU3VraHVtdml0IHN1YndheSBzdGF0aW9uLiBGcm9tIHRoZSBtb3V0aCBvZiBTdWtodW12aXQgUm9hZCwgdHVybiBpbiB0byBTb2kgMjQgYW5kIGFmdGVyIGFib3V0IDEwMCBtZXRyZXMgb24geW91ciBsZWZ0IHlvdSB3aWxsIGZpbmQgYSBzbWFsbCBwbGF6YSBjb25zaXN0aW5nIG1vc3RseSBvZiBtYXNzYWdlIHNob3BzLiBBIEtvcmVhbiByZXN0YXVyYW50IGlzIG9uIHRoZSBsZWZ0IGNvcm5lci4gClRoZXJlIGFyZSBubyBtb3JlIG1pbGVzdG9uZXMgZm9yIEthbGxpcyB0byBjaGFzZS4gSGUgaGFzIGFscmVhZHkgY2xhaW1lZCBoaXMgMjAwdGggY2F0Y2ggYW5kIGF0IDI5MiB3aWNrZXRzLCAzMDAgaXMgdW5saWtlbHkgdG8gYmUgaW4gaGlzIHNpZ2h0cy4gQWxsIGhlIG5lZWRzIHRvIGRvIGlzIGVuam95IHRoZSBmaW5hbCBkYXkgd2hpbGUgdGhlIHJlc3QgYXJlIHN3ZWF0aW5nIG92ZXIgaG93IHRvIHNlbmQgaGltIG9mZiB3aXRoIGEgd2luLiAiSGUgcmljaGx5IGRlc2VydmVzIHRvIGRvIHRoYXQsIiBQZXRlcnNvbiBzYWlkLiAiQWxsIHRoZSBndXlzIGp1c3Qgd2FudCBoaW0gdG8gZW5qb3kgaGlzIGxhc3QgbW9tZW50cy4iClllcyBteSBESCAoZGVhciBodXNiYW5kKSBpcyBnb25lIGEgbG90IGJlY2F1c2Ugb2YgdGhlIGhvdXJzIGhlIHdvcmtzLCBhbmQgZXZlbiBvbiBoaXMgb2ZmIGRheXMgSSB1c3VhbGx5IGhhdmUgTE8gKGxpdHRsZSBvbmUpIGF0IHdvcmsgd2l0aCBtZSwgc28gSSBzdGlsbCBkbyBhYm91dCA5NSUgb2YgdGhlIHdvcmsuIEhlIGhlbHBzIHdoZW4gd2UgYXJlIGJvdGggaG9tZSwgYnV0IHRoYXQgZG9lc24ndCBtZWFuIGhlIGNhbid0IGRvIHNvbWV0aGluZyBmb3IgaGltc2VsZi4gSGlzIGRheXMgb2ZmIGNvbnNpc3Qgb2YgaGVscGluZyBhcm91bmQgdGhlIGhvdXNlLiAKVmlzaXQgdGhlIENlbnRlcidzIEltcGFjdCBNYXAgZm9yIGRlc2NyaXB0aW9ucyBvZiBwYXN0IGFuZCBjdXJyZW50IGNvbW11bml0eSBwYXJ0bmVyIHNpdGVzLi4gCkl0IGlzIGJlc3QgdG8gdHJ5IHRvIGRpc3RyYWN0IHlvdXIgbWluZCB3aXRoIHNvbWV0aGluZyBlbmdhZ2luZy4gSnVzdCBiZSBzdXJlIHRvIGNob29zZSBzb21ldGhpbmcgeW91IHJlYWxseSBlbmpveSBldmVuIGlmIGl0IGlzIHNvbWV0aGluZyB5b3UgcmVhZCBvciB3YXRjaGVkIGJlZm9yZS4gVGhlIGVuam95bWVudCBvZiBpdCB3aWxsIGhlbHAgeW91IGZlZWwgYmV0dGVyLiAKQW5kIHlvdSBkb24gbmVlZCB0byB0ZWxsIG1lIGFib3V0IG5ldXJhbCByZWNlcHRvcnMgYW5kIGF0cm9waHkgICBJIHdhcyBvbiBlZmZleG9yIDMwMG1nIDMgeWVhcnMsIGFuZCBJIHdlbnQgdGhyb3VnaCB0aGUgcHJvY2VzcyBvZiB0YXBlcmluZyBhbGwgdGhlIHdheSBkb3duIHRvIDAsIHdpdGhvdXQgYW55IGxvbmcgdGVybSBuZWdhdGl2ZSBlZmZlY3RzLiBOZXVyYWwgcmVjZXB0b3IgYXRyb3BoeSBpcyBhIHByZXR0eSBoZWF2eSB0ZXJtIHRvIHRocm93IGFyb3VuZCBhbmQgZGVmaW5pdGVseSBvbmUgdGhhdCB3b3VsZCBzY2FyZSBzb21lb25lIGlmIHRoZXkgZGlkbiB1bmRlcnN0YW5kIGl0LiAKTWVhbndoaWxlLCB0aGUgQW9uIE1lZGlhbiBTb2x2ZW5jeSBSYXRpbyBmZWxsIGluIHRoZSBmb3VydGggcXVhcnRlciB0byA5NS4zIHBlciBjZW50IGFzIG9mIEphbi4gMSwgMjAxOSwgYSBkZWNsaW5lIG9mIG5lYXJseSBlaWdodCBwZXJjZW50YWdlIHBvaW50cyBmcm9tIHRoZSB0aGlyZCBxdWFydGVyIG9mIDIwMTguCkhvcm1vbmFsIGFuZCBtZXRhYm9saWMuIApFbiBhY2NvcmQgYXZlYyBsYSB0cmFkaXRpb24ganVpdmUsICBsYXF1ZWxsZSBpbCBlc3QgZmlkbGUsIGlsIHB1aXNlIHNhIHJwb25zZSBkYW5zIGxhIFRvcmFoIG8gb24gbGl0IDogIlsgLiBdIGNhciBtb2kgbCdFdGVybmVsLCBqZSBzdWlzIHRvbiBtZGVjaW4gKHJvcGgpIiAoRXhvZGUgMTUgOiAyNikuIE1haW1vbmlkZSBwZW5zZSBxdWUgInNpIERpZXUgZGl0IHF1J2lsIHNvaWduZSwgaWwgZXN0IHBlcm1pcyAgdW4gaG9tbWUgZGUgZGV2ZW5pciBtZGVjaW4gZXQgZGUgcHJhdGlxdWVyIHNvbiBhcnQiICgiTGEgbWRlY2luZSBkZSBNYW1vbmlkZSIsIFByLiBGLiBSb3NuZXIpLgpZb3UgYXJlIHN1cmUgdG8gYnJpZ2h0ZW4gdXAgYW55IGJhcmUgb3IgdW5pbnNwaXJlZCBzcGFjZSB3aXRoIGFueSBvZiB0aGVzZSBydXN0aWMgY2hvaWNlcy4gU28gd2hhdCBhcmUgeW91IHdhaXRpbmcgZm9yPyBHZXQgc2FkZGxlZCBhbmQgZ2lkZHkgdXAgZm9yIHlvdXIgbmV3IHdlc3Rlcm4gbG9vayEKVGhhdCBhIG1vcmFsbHkgYmFua3J1cHQgc3RhbmNlLiBZb3UgbWlnaHQgYXMgd2VsbCBhcmd1ZSB0aGF0IGEgc3Ryb25nZXIgcGVyc29uLCBzb2xlbHkgYnkgYmVpbmcgc3Ryb25nZXIsIG1pZ2h0IGFsdGVyIHRoZSBjb250ZXh0LCBhbmQgdGh1cyB0aGUgcmFuZ2Ugb2YgYWNjZXB0YWJsZSBiZWhhdmlvci4gCkplbm5pZmVyIFJvYmVydHMsIGFzc29jaWF0ZSBkaXJlY3RvciBvZiB0aGUgSW50ZXJuYXRpb25hbCBDZW50ZXIgZm9yIEdhbWluZyBSZWd1bGF0aW9uIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE5ldmFkYSwgTGFzIFZlZ2FzLCBzYWlkIHRoZSBpbXBhY3Qgb2YgdGhlIG9waW5pb24gcmVzdHMgb24gaG93IHN0cmljdGx5IHRoZSBKdXN0aWNlIERlcGFydG1lbnQgaXMgZ29pbmcgdG8gZW5mb3JjZSB0aGUgbmV3IGludGVycHJldGF0aW9uIG9mIHRoZSBzdGF0dXRlLgpMaWtlIGhlciB0ZWxsaW5nIG1lICJzaXQgb24gdGhpcyBibGFua2V0IiBhbmQgbWUgcmVzcG9uZGluZyB3aXRoICJMb29rLiBEb24gdGVsbCBtZSB3aGF0IHRvIGRvLiAKSGF2ZSB0byBmb3JjZSB0aGUgc3RhdGUgdG8gcmVndWxhdGUgb2lsLCB0YXggZ2FzLCBhbmQgaW52ZXN0IGluIHB1YmxpYyB0cmFuc2l0IGFuZCBjbGVhbiBlbmVyZ3kgdGVjaG5vbG9naWVzLiAKUmVzZWFyY2hlcnMgYWxzbyByZWNvbW1lbmRlZCBnYW1pbmcgcm9vbXMgYmUgbG9jYXRlZCBhd2F5IGZyb20gZGluaW5nIGFyZWFzIG9yIGNsdWIgZW50cmFuY2VzLiAKVGhlIHJlcG9ydCBzdWdnZXN0cyBHb29nbGUgaGFkIGEgcGVybWlzc2l2ZSBjdWx0dXJlIHdoZW4gaXQgY2FtZSB0byBleGVjdXRpdmUgY29uZHVjdCBhbmQgcmVsYXRpb25zaGlwcyB3aXRoIGNvIHdvcmtlcnMuIEF0IGxlYXN0IG9uZSBHb29nbGUgZW1wbG95ZWUgc3Bva2Ugb3V0IGZ1cnRoZXIgZm9sbG93aW5nIHRoZSByZXBvcnQsIHNheWluZyB0aGUgY29tcGFueSdzIG1vdmVzIHRvIHByb3RlY3QgZXhlY3V0aXZlcyBtYWtlcyBpdCBoYXJkZXIgZm9yIHZpY3RpbXMgdG8gcmVwb3J0IGFidXNlLgpJZiB0YWtpbmcgYSBzaG93ZXIgc291bmRzIGxpa2UgaW1wb3NzaWJsZSBmb3IgeW91LCBzaW1wbHkgc29hayB5b3VyIGZlZXQgb3IganVzdCB0aGUgYWZmZWN0ZWQgZm9vdCBpbiB3YXJtIHdhdGVyIHdpdGggYSBmZXcgZHJvcGxldHMgb2YgdGVhIHRyZWUgb2lsLi4gCkluIHRoaXMgbWFya2V0LCB5b3UgbWlnaHQgZ2V0IGEgZmV3IG1vcmUgbm8ncyB0aGVuIHlvdSB3b3VsZCBoYXZlIGluIDIwMTEsIDIwMTIsIGJ1dCB5b3UgaGF2ZSB0byBzdGF5IHBlcnNpc3RlbnQgYW5kIGNvbnNpc3RlbnQuIApEZWZpbml0ZWx5IGdvbm5hIGJlIGV4dHJhIGNhcmVmdWwgdGhpcyB0aW1lIGFyb3VuZCBiZWNhdXNlIEkgYnJpbmdpbmcgZXh0cmEgY29tcGFueS4gUHJvYmFibHkgNCBzbWFsbCBjYW1wZXJ2YW4gKHRoZSBKdWN5IG9uZSkgb3IgMyBiaWcgbW90b3Job21lLiBVbnN1cmUgaWYgdGhlIHNtYWxsZXIgb25lIGNhbiBnbyB0aHJvdWdoIHNvbWUgcm9hZHMgdGhlcmUsIGJ1dCBJIHNhdyB0aGVyZSBhcmUgcGxlbnR5IG9mIGNhbXBzaXRlIGZvciBjZXJ0aWZpZWQgc2VsZiBjb250YWluZWQgdmVoaWNsZS4gCiAyIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29CaW5vY3VsYXIgcml2YWxyeSBib3RoZXJzIHNvbWUgbW9yZSB0aGFuIG90aGVycy4gCkFuZCB0aGF0IG1lYW5zIGtlZXBpbmcgdHJhY2sgb2YgZXZlcnkgZ2FtZSB5b3UgcGxheSBhbmQgdGhlIHJlc3VsdHMuIEhlcmUncyB0aHJlZSByZWFzb25zIHdoeTouIApHb29kIGxvcmQuIEJ1dCBJIHdvbmRlciBqdXN0IGhvdyBiYWQgaGUgd2FzIHRoYXQgdGhleSBmZWx0IGEgbmVlZCB0byBkbyB0aGF0LCBzYXkgaWYgaGUgY291bGQgYmUgZGFuZ2Vyb3VzLiBPciwgdGhleSB3ZXJlIGp1c3QgcmVhbGx5IHNoaXR0eSBwYXJlbnRzLiBJIGhhZCBhbiBleCB3aG8gdXNlZCB0byBzcGVuZCB0aW1lIGluIHRoZSBob3NwaXRhbC4gUHJvYmxlbSBpcywgaXQgYSBtZW50YWwgaG9zcGl0YWwga25vd24gZm9yIHZpb2xlbnQgcGVvcGxlLiBIZSB3YXMgYmlwb2xhciwgYnV0IEkgaGVhcmQgaGUgd2FzIGFsc28gc2NoaXpvcGhyZW5pYy4gVEhBVCBwYXJ0IGhlIHdvdWxkIG5ldmVyIGFkbWl0IHRvLCBidXQgaGUgYWRtaXQgdG8gYmlwb2xhciBhbmQgZXZlcnl0aGluZyBlbHNlLiBOb3QgdG8gbWVudGlvbiBuYXJjaXNzaXN0LiBIZSBjb3VsZCBiZSBhIGNoYXJtZXIsIGdldCB5b3UgdG8gYmVsaWV2ZSBhbnl0aGluZy4gSW5jbHVkaW5nICJob3cgYmFkIGFsbCB0aG9zZSBvdGhlciB3b21lbiBodXJ0IGhpbSIuIFVudGlsIGhlIGR1bXBlZCBtZSAoYWdhaW4pLCBhbmQgYWdhaW4sIG1hcnJpZWQgdGhlIHdvbWFuIGhlIHRvb2sgdXAgd2l0aCBhZnRlciBtZS4gQWZ0ZXIgdGhleSBzcGxpdCwgaGUgc3RhcnRlZCBzdGFsa2luZyBtZS4gVGhleSBnb3QgYmFjayB0b2dldGhlciwgaGUgc3RvcHBlZC4gVGhlbiB0aGV5IGRpdm9yY2VkLCBhbmQgSSBoYWQgdG8gZ2V0IGEgc2VjdXJpdHkgY2FtZXJhLCBiZWNhdXNlIGhlIHdhcyB2YW5kYWxpemluZyBteSB2ZWhpY2xlcywgdG9zc2luZyBteSBwb3R0ZWQgcGxhbnRzIGFyb3VuZCwgYW5kIGV2ZW4gY3V0IG15IGdhcmRlbiBob3NlISBTbywgSSBhcHByb2FjaGVkIHRoZSByZWNlbnQgd2lmZS9leCB3aWZlICgzKSwgYW5kIHdlIGhhZCBhIGxvdmVseSBjaGF0LiBIZSB3YXMgcGh5c2ljYWxseSBhYnVzaXZlLCBhbmQgYXQgb25lIHBvaW50IHNhaWQgaGUgY3V0IGhlciB1cCBhbmQgZmx1c2ggaGVyIGRvd24gdGhlIHRvaWxldCBhbmQgbm8gb25lIHdvdWxkIGV2ZXIga25vdy4gQnV0LCB0byByZWFkIGhpcyBzb2NpYWwgbWVkaWEsIHNoZSB3YXMgYW4gZXZpbCBjdW50IHdobyBjaGVhdGVkIG9uIGhpbSAoaGUgd2FzIGNoZWF0aW5nIG9uIDIgd2l0aCBob29rZXJzKSwgc2hlIHdhcyBzZWNyZXRpdmUsIGFuZCBhYnVzaXZlLiBTaGUgdG9sZCBtZSB0byBnbyB0byB0aGUgY29wcywgYmVjYXVzZSBoZSB3YXMgREFOR0VST1VTLiBPZiBjb3Vyc2UsIG5vdCBtdWNoIHRoZXkgY291bGQgZG8gdW5sZXNzIEkgY2F1Z2h0IGhpbSBvbiBjYW1lcmEsIGJ1dCBieSB0aGF0IHRpbWUsIGhlIGhhZCBhIG1hc3NpdmUgc3Ryb2tlLiBUaGVuIGEgY291cGxlIHllYXJzIGFnbywgaGUgd2VudCB0byB0YWtlIGEgbmFwIG9uIHRoZSBzb2ZhLCBoaXMgbW9tIGNhbWUgdG8gY2hlY2sgb24gaGltLCBhbmQgaGUgd2FzIGdvbmUuIERpZWQgaW4gaGlzIHNsZWVwLiBCbGVzc2luZyBmb3IgaGltLCBhbmQgdXMuCkFzIHN1Y2gsIEkgZm91bmQgdGhpcyBib29rIHRvIGJlIHF1aXRlIGludGVyZXN0aW5nIGFuZCB1bmlxdWUgaW4gdGhlIHNwYWNlLiBJdCBhbHNvIGEgcHJldHR5IHBvc2l0aXZlIG1lc3NhZ2UgICBpZiBoZSBjYW4gZG8gaXQsIChJKSB5b3UgY2FuIHRvbyEKWW91IHRoZW4gbmVlZCB0byBmaW5kIHlvdXJzZWxmIGEgZ29vZCBwbGFjZSB0byBzaG9vdC4gCklmIHlvdSBuZWVkIG1vcmUgdGhhbiBhIHNlY29uZCB0byBkZWNpZGUgd2hhdCB0byBkbywgY2FsbCAiVGltZSEiIHRvIHN0b3AgdGhlIGFjdGlvbi4gV2hpbGUgeW91IGRlY2lkZSwgZG9uJ3QgdGFwIHlvdXIgZmluZ2VycyBuZXJ2b3VzbHk7IHRoYXQgaXMgYSBjbGVhciBjaGVjayBzaWduYWwgYW5kIHdpbGwgYmUgY29uc2lkZXJlZCBiaW5kaW5nLi4gClRvZGF5IENoaWxlcydzIDExIHByb3BlcnRpZXMgYWxvbmcgUGluZSBBdmVudWUgaGF2ZSBhbGwgYmVlbiBMRUVEIGNlcnRpZmllZC4gClRoZSAibmV0d29yayBlcnJvciIgcHJvYmxlbSBoYXMgYmVjb21lIHJlYWxseSBiYWQgZm9yIG1lIGluIHRoZSBsYXN0IHdlZWsuIFVwIHVudGlsIHRoZW4sIEkgaGFkbiBoYWQgbXVjaCB0cm91YmxlIHdpdGggcGVyZm9ybWFuY2UgZnJvbSB0aGUgZ3ltIHVwZGF0ZS4gSG93ZXZlciwgSSBjYW4gbm93IG5vIGxvbmdlciBiYXR0bGUgaW4gZ3ltcyBhdCBhbGwuIE15IG9wcG9uZW50IGdldHMgdG8gMCBjcCBidXQgZG9lc24gZGllOyBJIGp1c3QgZ2l2ZW4gdGhlICJuZXR3b3JrIGVycm9yIiBtZXNzYWdlLiBJIGNhbiBnZXQgaW4gYW55IGd5bXMgcmlnaHQgbm93IGFuZCBteSBiYXR0ZXJ5IGlzIGdldHRpbmcgZHJhaW5lZCB2ZXJ5IHF1aWNrbHkuIEl0IG1hZGUgdGhlIGdhbWUgdW5wbGF5YWJsZSByZWFsbHkuIEkgYmUgaW50ZXJlc3RlZCBpbiBrbm93aW5nIGhvdyBjb21tb24gdGhpcyBwcm9ibGVtIGlzIGFuZCB3aGVuIGl0IGJlZ2FuIHRvIGFmZmVjdCBwZW9wbGUuClRoZSBtYWluIHJlYXNvbiB3aHkgVGV4YXMgSG9sZCdFbSBTaXQgYW5kIEdvIHRvdXJuYW1lbnRzIGFyZSBzbyBwb3B1bGFyIGlzIGJlY2F1c2UgdGhleSBhcmUgZmFzdCBwYWNlZCBhbmQgYmVjYXVzZSB0aGV5IG9mZmVyIHNraWxsZWQgcG9rZXIgcGxheWVycyBhIGdvb2QgY2hhbmNlIG9mIHJlY2VpdmluZyBhIGJpZyBwYXlvdXQuIFVzdWFsbHkgOSB0byAxMCBwbGF5ZXJzIGNhbiBwYXJ0aWNpcGF0ZSBpbiBhIHNpbmdsZSB0YWJsZSBTaXQgYW5kIEdvIHRvdXJuYW1lbnQgYW5kIG91dCBvZiB0aGVtIG9ubHkgdGhlIHRvcCAzIHdpbGwgZ2V0IGEgcGF5b3V0LiBUaGUgcG9vbCBpcyBkaXZpZGVkIGFzIGZvbGxvd3M6ICAgNTAlIHRvIHRoZSAxc3QgcGxhY2UgZmluaXNoZXI7ICAzMCUgdG8gdGhlIDJuZCBwbGFjZSBmaW5pc2hlcjsgIDIwJSB0byB0aGUgM3JkIHBsYWNlIGZpbmlzaGVyO1RoZSBnYW1lIGlzIGZhc3QgcGFjZWQgYmVjYXVzZSB0aGUgYmxpbmRzIGFyZSByYWlzZWQgZXZlcnkgMTAgb3IgMTUgbWludXRlcy4gVGhpcyB3aWxsIGxlYXZlIHlvdSBzaG9ydCBzdGFja2VkIGF0IHRpbWVzIGlmIHlvdSBkbyBub3QgcGxheSBzbWFydC4KSWwgZmF1dCBlbiBlZmZldCB0ZW5pciBjb21wdGUgZGVzIHJpc3F1ZXMgZCdlbmNvbWJyZW1lbnRzIGR1IGJvdWxldmFyZCBkZSBsYSBDaGFwZWxsZSBzaSBsZXMgZGNoYXJnZW1lbnRzIHRycyBpbXBvcnRhbnRzIHNlIGZvbnQgZW4gbW1lIHRlbXBzIHF1ZSBjZXV4IGRlcyBjb21tZXJhbnRzIGR1IG1hcmNoLiAKSGUgbGl2ZXMgd2l0aCBoaXMgZmFtaWx5IGluIGEgdmlsbGFnZS4gTGl0ZXJhbGx5LiAKQ2hyaXN0aWFucyBoYXZlIGRpZmZlcmluZyB2aWV3cyBvbiBpZiBkaXZvcmNlIGlzIGJpYmxpY2FsbHkgYWNjZXB0YWJsZSBpbiB0aW1lcyBvZiBhYnVzZSwgYnV0IEkgdGhpbmsgdGhlIGZpcnN0IHN0ZXAgZm9yIHlvdSBpcyB0byBpbnN0aWdhdGUgYm91bmRhcmllcy4gClNob3VsZCB3ZSBiZSBlcXVhbGx5IGltcHJlc3NlZD8gTm90IGV4YWN0bHkgYW4gYXBwbGUgZm9yIGFwcGxlLCBpIGFncmVlIGJ1dCBhcyBmYXIgYXMgY2hlYXRpbmcsIHdoZXJlIGRvIHdlIGRyYXcgdGhlIGxpbmU/IFNpbmNlIHdoZW4gZGlkIGh5cG9kZXJtaWMgbmVlZGxlcyBiZWNvbWUgb2theSBpbiBicmVha2luZyByZWNvcmRzIG9yIHdpbm5pbmc/IEl0IG5vdC4gClVudGlsIEp1bmUgMjUsIHRoZSBSaXZlciBQYWxhY2Ugd2FzIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGNhc2lub3MgaW4gS2lldiwgYnV6emluZyB3aXRoIGN1c3RvbWVycyB0cnlpbmcgdGhlaXIgbHVjayBpbiByb29tcyBhd2FzaCB3aXRoIHRoZSBzb3VuZHMgb2YgcGluZ2luZyBiZWxscyBhbmQgY2xpY2tpbmcgcm91bGV0dGUgYmFsbHMuIApQbGF5aW5nIHBva2VyIG9ubGluZSBpcyBhbHNvIG1vcmUgYWZmb3JkYWJsZSB0aGFuIGVuZ2FnaW5nIGluIHRoZSBzbyBjYWxsZWQgYnJpY2sgYW5kIG1vcnRhciBwb2tlciBtYXRjaC4gCkpvcmRpZSBDaGFuZGxlcidzIG1vdGhlciBnb3QgYSBkaWFtb25kIGJyYWNlbGV0LlR3byBvZiB0aGUgZmF0aGVycyBvZiB0aG9zZSB3aG8gaGF2ZSBhY2N1c2VkIEphY2tzb24sIEpvcmRpZSBDaGFuZGxlciBhbmQgV2FkZSBSb2Jzb24sIGNvbW1pdHRlZCBzdWljaWRlLiBCb3RoIHdlcmUgZXN0cmFuZ2VkIGZyb20gdGhlaXIgc29ucyBhdCB0aGUgdGltZS4uIApZZXMgdGhlIHdlbGwgb2ZmIHVzZSBhcyB3ZWxsLiAKU2VydmljZSBjbyBvcmRpbmF0b3IgS2V2aW4gSG93YXJkIHNhaWQgOTEgcGVyIGNlbnQgb2YgY2xpZW50cyB3ZXJlIHByb2JsZW0gZ2FtYmxlcnMgYW5kLCBvZiB0aGUgcHJvYmxlbSBnYW1ibGVycyBzZWVuLCA5MiBwZXIgY2VudCBoYWQgcHJlc2VudGVkIHdpdGggcHJvYmxlbXMgd2l0aCBwb2tlciBtYWNoaW5lcy4KU29tZXRpbWVzIHdoZW4geW91J3JlIGxvb2tpbmcgZm9yIGEgUG9rZXIgQ2hpcCBTZXQgdGhhdCBzdGFuZHMgYXBhcnQgZnJvbSBhbGwgdGhlIG90aGVycyB0aGV5J3JlIGhhcmQgdG8gZmluZC4gVGhhdCBpcyB1bmxlc3MgeW91IGNvbWUgYWNyb3NzIHRoZSAxMDAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXBzLiBHcmFudGVkIHRoaXMgaXNuJ3QgYmVjYXVzZSBQYXVsc29uIGhhcyBiZWVuIHRoZSBsZWFkZXIgaW4gdGhpcyBpbmR1c3RyeSBmb3IgcXVpdGUgc29tZSB0aW1lLiAKQnV0IHN1Y2ggb2RkcyBjYWxjdWxhdGlvbnMgYXJlIG5vdCBhdmFpbGFibGUgdG8gdGhlIHRyYWRlciAgaGUgbWF5IGJlIGdlbnVpbmVseSBteXN0aWZpZWQuIApTcXVlYWwgV2VhdGhlciBhbmQgdGltaW5nIGhhdmUgYmVlbiBhZ2FpbnN0IG1lIHRoaXMgd2hvbGUgd2ludGVyLiBJIHdhcyBzdXBwb3NlZCB0byBydW4gb24gVHVlc2RheSBhbmQgdGhlIHdlYXRoZXIgd2FzIHN1cHBvc2VkIHRvIGJlIGNsZWFyLCBidXQgaXQgc3RhcnRlZCBwb3VyaW5nIHdoZW4gSSBnb3QgaG9tZS4gCkFuZCB0aGVyZSdzIG5vIHJlYXNvbiB0aGF0IGEgaG9tZSBvZmZpY2UgaGFzIHRvIGJlIGEgZHVsbCwgc3RlcmlsZSBwbGFjZS4gClBhZGRvY2ssIHdobyBraWxsZWQgaGltc2VsZiwgYWN0ZWQgYWxvbmUsIHBvbGljZSBoYXZlIHNhaWQuVGhlIGhvc3Qgc2FpZCB0aGVyZSB3YXMgb25lIGluY2lkZW50IHllYXJzIGFnbyBpbiB3aGljaCBQYWRkb2NrIHllbGxlZCBhdCBoaW0gb3ZlciBsYXRlIGx1Z2dhZ2UsIHNvbWV0aGluZyB0aGUgaG9zdCB0aG91Z2h0IHBlY3VsaWFyLiAKVGhleSBkb24gbmVlZCBhIHByb2JsZW0gc29sdmVyLiAKQ2FzY2lhdG8gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClRheWxvciBNb3Jlbm86IEJhbmdpbmcgZ3V5cyB3aG9zZSBsYXN0IG5hbWVzIGFyZSBOT1QgTW9yZW5vLgpXRUFUSEVSIFBhcnRseSBjbG91ZHkgdG9kYXkgYW5kIHRvICBtb3Jyb3cgd2l0aCBmZXcgbGlnaHQgZWFybHkgdG9kYXkuIApIaXMgc29uIGhhZCB5ZWFycyBhbmQgeWVhcnMgdG8gcmVhY2ggb3V0IGFuZCBtZW5kIGJyb2tlbiBmZW5jZXMsIGJ1dCBvbmx5IHJlYXBwZWFyZWQgYWZ0ZXIgdGhlIG1hbiB3YXMgZGVhZCBhbmQgbm93IHRoaW5rcyBoZSBpcyBlbnRpdGxlZCB0byBvd24gc29tZXRoaW5nIG9mIGhpczsgd2hlbiB0aGV5IHdlcmUgbmV2ZXIgdHJ1bHkgYSBwYXJ0IG9mIGVhY2ggb3RoZXIgbGl2ZXMuClRoZSBvcGVyYXRvciB0b2xkIHVzIHRoYXQgYWRkaW5nIHRvbyBtYW55IG9mIHRoZXNlIHN0ZXBzIGNyYXNoZXMgdGhlIHNvZnR3YXJlLiBJbiB0aGUgZmlmdGVlbiBtaW51dGVzIEkgd2FzIGFyb3VuZCwgSSBzYXcgaXQgZnJlZXplIHRocmVlIHRpbWVzLCBhbmQgdGhlIG9wZXJhdG9yIHdhcyBhbHdheXMgc3RhbmRpbmcgYnkgdG8gcmVzZXQgaXQuIFRoZW4gaXQgd291bGQgc2VydmUgdXAgbW9zdGx5IGVtcHR5IGN1cCwgd2hhdGV2ZXIgc3RhZ2UgaXQgd2FzIGF0LiAKSW4gYSByb29tIERGSywgY2FyZXNzaW5nLCAzNSBtaW4gREFUWSB3aXRoIGhlciBuZWFybHkgb3JnYXNtaW5nIDEwIHRpbWVzIGJ5IGJyaWRnaW5nLCBCQkJKLCBjb3cgZ2lybCwgMjAgbWluIG1pc3Npb25hcnkgd2l0aCBoZXIgbmVhcmx5IG9yZ2FzbWluZyBhIGNvdXBsZSBvZiB0aW1lcywgaGVyIDE1IG1pbiBtYXNzYWdlIG9uIG1lIGFuZCBteSAxNSBtaW4gbWFzc2FnZSBvbiBoZXIuIApTb21ldGltZXMgaXQgaXMgaGFyZCB0byBsb29rIGF0IGhhbmRzIGFuZCBsYXkgdGhlbSBkb3duLiBCdXQgaXQncyBtdWNoIGVhc2llciB0byBmb2xkIHdoZW4geW91ciBvbmxpbmUgcG9rZXIgY2FsY3VsYXRvciBpcyBmbGFzaGluZyBicmlnaHQgYm9sZCB3YXJuaW5nIGNvbG9ycyBhdCB5b3UsIHJlbWluZGluZyB5b3UgaG93IG11Y2ggIEVWIHlvdXIgaGFuZCBoYXMuIApUaGUgY29uY2VwdCBvZiBhIFBva2VyIFJ1biBpcyB0byB0cmF2ZWwgYSBjb3Vyc2Ugb3Igcm91dGUgYW5kIHdoaWxlIGRvaW5nIHNvIHBpY2sgdXAgcG9rZXIgY2FyZHMgYWxvbmcgdGhlIHdheS4gClRoaXMgcGFzdCB3ZWVrLCB3aXRoIGFyZWEgZ3Jvd2VycyBzdGlsbCBpbiB0aGUgZ3JpcCBvZiB3aW50ZXIsIHRvbWF0b2VzLCBvbmlvbnMgYW5kIHBlcHBlcnMgd2VyZSB0aGUgbWFpbiBmcmVzaCBpdGVtcyBiZWluZyBkaXN0cmlidXRlZC4uIApUaGUgZXhjaGFuZ2Ugb2YgaW50ZXJjb3Vyc2UgZm9yIG1vbmV5IGlzIG5vdCB0aGUgb25seSBzZXJ2aWNlIG9mZmVyZWQgYnkgcHJvZmVzc2lvbmFsIHByb3N0aXR1dGVzLCBhbmQgaXQgbWF5IG5vdCBiZSB0aGUgbW9zdCBwb3B1bGFyIGZvciBjbGllbnRzLiBNYW55IGxlZ2FsIHNlcnZpY2VzIHByb3ZpZGVkIGJ5IExhcyBWZWdhcyBlc2NvcnRzIG1heSBzdGlsbCByZXN1bHQgaW4gc2V4dWFsIHNhdGlzZmFjdGlvbi4gClRoZSB2b2x1bWUgaXNzdWUgc291bmRzIGZhaXJseSBub3JtYWwgdG8gbWUuIFRoZSBkaWZmZXJlbnQgZ2FpbiBsZXZlbHMgd2lsbCBzb3VuZCBhbmQgcmVhY3Qgc28gbXVjaCBkaWZmZXJlbnRseSB0aGF0IGl0IHJlYWxseSBpc24gc3VycHJpc2luZyB0aGF0IHRoZSB2b2x1bWVzIHdvdWxkIGJlIGRpZmZlcmVudC4KQXMgYSBuZXcgY29uY2VwdCBpbiBwb2tlciwgdGhlIElyaXNoIEFtYXRldXIgUG9rZXIgTGVhZ3VlIGlzIGEgY2hlYXAgd2F5IHRvIHNwZW5kIGFuIGV2ZW5pbmcgd2l0aG91dCBmZWFyIG9mIGxvc2luZyB5b3VyIGhvdXNlLiBXaXRoIGZyZWUgZW50cnkgYW5kIGEgbWVtYmVyc2hpcCBwZXIgZ2FtZSwgdGhlIElyaXNoIEFtYXRldXIgUG9rZXIgTGVhZ3VlIGlzIGFpbWVkIGF0IGFsbCBza2lsbCBsZXZlbHMsIGZyb20gdGhvc2Ugd2FudGluZyB0byBsZWFybiB0byB3aW5uaW5nIHRoZSBsZWFndWUuIApJbnZlc3RpZ2F0b3JzIHNhaWQgS3JhZnQgd2FzIGJhY2sgYXQgdGhlIHNwYSAxNyBob3VycyBsYXRlciwgYXJyaXZpbmcgYXQgdGhlIHVwcGVyIG1pZGRsZSBjbGFzcyBzaG9wcGluZyBjZW50ZXIgd2hlcmUgdGhlIHNwYSB3YXMgbG9jYXRlZCBpbiBhIGNoYXVmZmV1cmVkIDIwMTUgYmx1ZSBCZW50bGV5LCB0aGUgZG9jdW1lbnRzIHNhaWQuIEhlIHdhcyB2aWRlb3RhcGVkIGVuZ2FnaW5nIGluIHNleCBhY3RzIGJlZm9yZSBwYXlpbmcgd2l0aCBhICQxMDAgYmlsbCBhbmQgYW5vdGhlciBiaWxsLCBwb2xpY2Ugc2FpZC4KUGFpciB3aXRoIHBvYWNoZWQgaGFsaWJ1dCBmb3IgdGhlIGRhdGUgbmlnaHQgd2luIS4gCiJUaGlzIGluZm9ybWF0aW9uIGlzIHZpdGFsIGZvciBjb21tdW5pdHkgZGViYXRlIGFuZCByZXNwb25zZSB0byB0aGUgZXh0ZW5zaXZlIHNvY2lhbCBhbmQgZmluYW5jaWFsIGhhcm0gY2F1c2VkIGJ5IHBva2VyIG1hY2hpbmUgYWRkaWN0aW9uLCIgaGUgc2FpZC4KQSB3aG9wcGluZyAkMzUwIHdhcyBtaW5lIGZvciBjbG9zaW5nIG9uIGEgaG91c2UuIApIb3NwaXRhbCBwZXJzb25uZWwgdXNlIGJsZWFjaCBhcyBhIGRpc2luZmVjdGFudCwgaG90ZWxzIHVzZSBibGVhY2ggdG8gY2xlYW4gYW5kIGRpc2luZmVjdCBiZWQgbGluZW5zIGFuZCBzdXJmYWNlcywgYW5kIHJlc3RhdXJhbnRzIGRpc2luZmVjdCBmb29kIHByZXBhcmF0aW9uIHN1cmZhY2VzIHdpdGggY2hsb3JpbmUgYmxlYWNoLiBQZW9wbGUgdXNlIGNobG9yaW5lIGluIHN3aW1taW5nIHBvb2xzIHRvIGtlZXAgdGhlIHdhdGVyIGNsZWFuIGFuZCByYWlzZSB0aGUgcEgsIGFuZCBpbiBtdWNoIHNtYWxsZXIgY29uY2VudHJhdGlvbnMgdG8gaGVscCBrZWVwIG11bmljaXBhbCB3YXRlciBzdXBwbGllcyBmcmVlIG9mIGhhcm1mdWwgb3JnYW5pc21zLiAKTXkgY3VycmVudCBzcGEgaGFzIGlzc3VlcyB0b28sIGJ1dCBJIGRvIG5vdCBoZXNpdGF0ZSB0byBicmluZyBpdCB0byBtYW5hZ2VtZW50IG9yIGNvbXBsYWluIGFib3V0IGl0IHVudGlsIGEgY2hhbmdlIGlzIG1hZGUuIENsZWFubGluZXNzIGlzc3VlcyBhcmUgdW5hY2NlcHRhYmxlIGluIHRoaXMgaW5kdXN0cnkuIEJlIHZvY2FsIGFib3V0IGl0ISBJZiB0aGV5IHdyaXRlIHlvdSBvZmYsIGxlYXZlLiBUcnVzdCBtZSwgeW91J2xsIHRoYW5rIHlvdXJzZWxmIGZvciBkb2luZyBzby4KSWYgd2Ugd2VyZSB0byBiZWxpZXZlIE5hd2F6IFNoYXJpZiwgaGUgYW5kIGhpcyBjaGlsZHJlbiBuZXZlciBkaWQgYW55dGhpbmcgd3JvbmcuIE1lYW53aGlsZSwgdGhlIGZpdmUgaG9ub3VyYWJsZSBqdWRnZXMgYXJlIGJlaW5nIG1hZGUgb3V0IHRvIGJlIG5vdmljZXMgd2hvIGhhdmUgY29udmljdGVkIGhpbSBvbiBhIHdoaW0uIEhlIGlzIGx1Y2t5IHRoYXQgdGhlIGxhdyBkb2VzIG5vdCBhdHRhY2ggYW55IHBlbmFsdHkgdG8gdGhlIGp1ZGdtZW50IHBhc3NlZCBvbiBoaW0uIApFYWNoIHBsYXllciBjb21wYXJlcyB0aGVpciBoYW5kcyB0byBlYWNoIGluZGl2aWR1YWwgcGxheWVyLiAKSSBhZG1pdCB0aGF0IEkgZG9uIHVuZGVyc3RhbmQgdGhlIHJpZ2h0IHdpbmcgdmVyeSB3ZWxsLCBidXQgdGhlcmUgc2VlbSB0byBiZSBkaWZmZXJlbnQga2luZHMgYWZyYWlkIG9mIGRpZmZlcmVudCB0aGluZ3MuIFRoZXJlIGFyZSByZWxpZ2lvdXMgcGVvcGxlIGFmcmFpZCB0aGF0IG5ldyBsYXdzIHdpbGwgZm9yY2UgdGhlbSB0byBnbyBhZ2FpbnN0IHRoZWlyIGJlbGllZnMuIE9yIHRoYXQgaW5kaXZpZHVhbHMgd2lsbCBzdGFydCBkaXNjcmltaW5hdGluZyBhZ2FpbnN0IHRoZW0sIHNvIHRoZXkgbmVlZCBnb3Zlcm5tZW50IHByb3RlY3Rpb24uIFRoZXJlIGEgbmV3bHkgdmlzaWJsZSBzZXQgd2hvIHRoaW5rcyBtYWpvciBpbnN0aXR1dGlvbnMgYXJlIHRyeWluZyB0byBwdXNoIHdoaXRlIHBlb3BsZSBkb3duIGJlbG93IG90aGVycywgb3IgbGV0IGluIGVub3VnaCBpbW1pZ3JhbnRzIHRvIHN3YW1wIHRoZW0gYXQgdGhlIHBvbGxzLgpJZiBJIGhhdmUgdG8gZ2V0IHVsdHJhc291bmQsIGdvdHRhIHdhaXQgYW5vdGhlciAyMCBtaW5zIHRvIGJvb2sgYW4gYXBwb2ludG1lbnQuIEluIGVtZXJnZW5jeSByb29tLCBJIHNlZW4gd2FpdHMgdGhhdCBnbyB1cCB0byAyIGhvdXJzIGluIGEgcm9vbSBmdWxsIG9mIHNpY2sgcGVvcGxlLiAKSW4gaGlzIHNwZWVjaCwgRm9seiBjaGlkZWQgbWUgZm9yIGEgcGFzdCBjb21tZW50YXJ5IHdoaWxlIGhlIG1hZGUgdGhlIHBvaW50IHRoYXQgUFNBIGNhbiBzdXJ2aXZlIGF0IGl0cyBjdXJyZW50IHNpemUuIE1yLiBGb2x6LCBJIGFncmVlIHdpdGggeW91LiBJJ2QgbGlrZSBQU0EgdG8gc3RheSBzdHJvbmcgYW5kIGluZGVwZW5kZW50LgpUaGlzIGlzIHRoZSBzdXJlc3Qgd2F5IHRvIHJlZHVjZSBkb21lc3RpYyBjb25mbGljdHMgd2l0aCB0aG9zZSB3aG8gZGVtYW5kIGF0dGVudGlvbi4gRXZlbiB0aG91Z2ggcG9rZXIgcmVxdWlyZXMgdG90YWwgZGVkaWNhdGlvbiB0byBpdCwgaXQgaXMgcG9zc2libGUgdG8gbGV0IHRoZSBmYW1pbHkgdW5kZXJzdGFuZCB0aGF0IHlvdSBhcmUgYnVzeSBhdCBhIHBhcnRpY3VsYXIgdGltZS4gClllcywgSSB1bmRlcnN0YW5kIHRoYXQsIEkganVzdCBzYWlkIHRoYXQuIEkgc2F5aW5nIHRoYXQgaXMgYW4gdW5ldGhpY2FsIHNpdHVhdGlvbi4gU29tZW9uZSBzaG91bGRuIGJlIHRha2luZyBvbiBhIHJpc2sgdGhhdCBlbmRhbmdlcnMgdGhlaXIgbGlmZSBhbmQgaGVhbHRoIGJlY2F1c2UgdGhlIGFsdGVybmF0aXZlIGlzIGhhdmluZyBhIGpvYiB0aGF0IGRvZXNuIGNvbWUgd2l0aCBhcyBtdWNoIHJpc2sgYnV0IGFuIGluY29tZSB0aGF0IHByb3ZpZGVzIHNpbWlsYXIgb3Igd29yc2Ugcmlza3MuIApUaGUgcGVyZm9ybWFuY2UgcmVtaW5kZWQgbWUgb2YgdGhlIHZlcnkgZmlyc3QgdGltZSBteSBkYWQgc2F3IE1pY2hhZWwgSmFja3NvbiBvbiBUViwgSSB3YXMgcHJvYmFibHkgYWJvdXQgMTAgb3Igc28uIE15IGRhZCBzYWlkIHNvbWV0aGluZyBsaWtlLCAiV2hhdCBpcyB0aGF0PyIsIHJlZmVycmluZyB0byBNaWNoYWVsIGhpbXNlbGYuIExPTC4gSSByZW1lbWJlciB0aGlua2luZyB0aGF0LCBkdWgsIGl0IHdhcyBvbmx5IHRoZSBjb29sZXN0IGd1eSBldmVyIQpQZXIgdGhlIE1MQiBKb2ludCBEcnVnIFByZXZlbnRpb24gYW5kIFRyZWF0bWVudCBQcm9ncmFtLCBXcmlnaHQgaXMgaW5lbGlnaWJsZSB0byBwaXRjaCBpbiBiaWcgbGVhZ3VlIGdhbWVzIGR1cmluZyBzcHJpbmcgdHJhaW5pbmcgYnV0IGNhbiBwaXRjaCBpbiBCIGdhbWVzIHRoYXQgZG9uJ3QgY2hhcmdlIGFkbWlzc2lvbi4gSG93ZXZlciwgYmVjYXVzZSBoZSBpcyBzdGlsbCBhdCBhbiBlYXJseSBzdGFnZSBvZiBoaXMgcGl0Y2hpbmcgcHJvZ3Jlc3Npb24sIGl0J3MgdW5saWtlbHkgdGhhdCBoZSdsbCBiZSByZWFkeSBmb3IgZ2FtZXMgb2YgYW55IHNvcnQgYmVmb3JlIHRoZSBSZWQgU294IGJyZWFrIGNhbXAuCkFuZCBsaWtlIHRob3NlIHdobyBjYW1lIGJlZm9yZSBoaW0sIEZvd2xlciBpcyB0cnlpbmcgdG8gc2VlIHRoZSBzdW5ueSBzaWRlIG9mIGl0Li4gCkkgaGF2ZSB3b3JrZWQgZm9yIGJvdGgsIGFuZCBJIGFsd2F5cyB0aG91Z2h0IEkgd2FzIG1vcmUgY2FwYWJsZSBvZiBuZWdvdGlhdGluZyBmb3IgbXlzZWxmIHRoYW4gcGF5aW5nIHNvbWVvbmUgdG8gZG8gaXQgZm9yIG1lLiBJbiBteSBvcGluaW9uLCBpZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGEgZ292ZXJubWVudCBzb2x1dGlvbiwgSSB3b3VsZCByYXRoZXIgc2VlIHRoYXQgbW9uZXkgc3BlbnQgb24gdHJhaW5pbmcgYW5kIHRob3NlIHR5cGUgb2YgcmVzb3VyY2VzIHRvIGhlbHAgcGVvcGxlIGJlY29tZSBtb3JlIHNraWxsZWQgYXQgc29tZXRoaW5nIHJhdGhlciB0aGFuIGZvcmNlIGNvbXBhbmllcyB0byBwYXkgbGFyZ2VyIHNhbGFyaWVzIHRoYXQgY2FuIG5lZ2F0aXZlbHkgaW1wYWN0IGVtcGxveW1lbnQuIEkgd29yayBpbiBhbiBpbmR1c3RyeSB3aGVyZSBteSBjdXN0b21lcnMgYXJlIGFsd2F5cyBhc2tpbmcgZm9yIHNraWxsZWQgbWFjaGluaXN0cyAoc29tZSBkb24ndCBwYXkgd2VsbCBhbmQgc29tZSBwYXkgdmVyeSB3ZWxsKSwgeWV0IHRoZXJlIGFyZSB2ZXJ5IGZldyBzY2hvb2xzIG9yIHBlb3BsZSB0byBmaWxsIHRob3NlIHBvc2l0aW9ucy4gCk9yaWdpbmFsbHkgcG9zdGVkIGJ5IEtldmluIFdhbmc6CkFuIEFpciAxMDAgc2VsZmllIGRyb25lIHdpdGggYW4gSEQgYWVyaWFsIGNhbWVyYSwgYWxsIGFib3V0IHRoZSBzaXplIG9mIHlvdXIgaGFuZC4gSXRzIGNhbWVyYSB1c2VzIGZhY2lhbCByZWNvZ25pdGlvbiB0ZWNobm9sb2d5IHRvIGxvY2sgb250byB5b3VyIGZhY2UgYXMgaXQgaXMgaG92ZXJpbmcsIGFuZCBpdCBjYW4gZm9sbG93IHlvdSBhcm91bmQuIApCdXQgdGhlIGx1bmNoIGFuZCBkaW5uZXIgbWVudXMgYWxzbyBzaG93Y2FzZSBzdXJwcmlzZXMgbGlrZSBBQyBTdHlsZSBDbGFtcyBDYXNpbm8uIApUaGUgUGVyZmVjdCBOYW5ueSBpcyB3aGF0IHlvdSB3b3VsZCBjYWxsIGEgY2hhcmFjdGVyIHN0dWR5LiBJdCBpcyBhYm91dCB0d28gd29tZW4sIE15cmlhbSBhbmQgTG91aXNlLCB5b2tlZCB0b2dldGhlciBpbnRpbWF0ZWx5LCBwcmVjYXJpb3VzbHksIGFzIGVtcGxveWVyIGFuZCBlbXBsb3llZS4gCkVESVQ6IE5vdCBzYXlpbmcgZXllIGZvciBhbiBleWUgaXMganVzdGlmaWVkIHdoYXRzb2V2ZXIsIGp1c3Qgc3RhdGluZyB0aGF0IGFidXNlIGlzIHNoaXR0eSwgZ2FuZyBtZW50YWxpdHkgaXMgc2hpdHR5LCBhbmQgYWJ1c2Ugb2YgcG93ZXIgaXMgc2hpdHR5IHRvby4gTGV0J3Mgbm90IGJlY29tZSBsaWtlIHRoZSBVU0EgYW5kIGxldCdzIG5vdCBmb3JnZXQgYW55IG9mIHRoZXNlIGV2ZW50cyBvbiBlaXRoZXIgc2lkZS4KU290byBLYXJhc3MgMTQ2ClB1dCB5b3VyIGNsYXdzIHVwOiBGb3IgYW5vdGhlciBsb29rLCB0aGUgSnVzdCBEYW5jZSBoaXRtYWtlciBzbGlwcGVkIGhlciBpbmNyZWRpYmxlIHBoeXNpcXVlIGludG8gYSBpcmlkZXNjZW50IGJvZHlzdWl0IGFuZCBtYXRjaGluZyBib290cwpXaGlsZSBJIHNvcnQgdGhpcyBvdXQgKHllcywgaXQgYW4gb25nb2luZyBwcm9jZXNzKSBJIGNvbWUgdG8gcmVhbGl6ZSB0aGF0IHJlbGlnaW9uIGZvciBtYW55IHBlb3BsZSAoc2VlIGFib3ZlIGJlY29tZSBtb3JlIGZhaXRoZnVsIGluIGFkdmVyc2l0eSBhbmQgY2xpbmcgdG8gdGhlIGhvcGUgb2Ygc2VlaW5nIHRoZSBsb3N0IG9uZXMgYWdhaW4gc29tZSBkYXkpIGlzIGp1c3QgYSBjb21mb3J0LiBJIGNhbiBhbmQgd29uIHRyeSB0byBkZW55IHRoYXQgdG8gdGhlbSwgYW5kIEkgcHJheSwgeWVzLCBJIHN0aWxsIHByYXksIHRoYXQgb25lIGRheSBJIHdpbGwgZmluZCB0aGF0IGZhaXRoIGFnYWluLi4gCldoZW4gdGhlIDI3IHllYXIgb2xkIEJvdWNoZXJ2aWxsZSBuYXRpdmUgaXNuJ3QgbWFraW5nIGhpcyBvcHBvbmVudHMgcGF5IGZvciB0aGVpciBtaXN0YWtlcyBhdCBwb2tlciB0YWJsZXMgdGhlIHdvcmxkIG92ZXIsIGhlJ3MgZm9sbG93aW5nIGV2ZXJ5IG1vdmUgaGlzIGJlbG92ZWQgQ2FuYWRpZW5zIG1ha2UgYmFjayBob21lIGFuZCBvbiB0aGUgcm9hZC4gCkl0IGlzIG5vdCB3b3J0aCB0aGUgcmlzaywgdG8gbWUgYW55d2F5LiBJIHNlZSB5b3VyIHBvaW50IGFib3V0IHJlZ2lvbmFsIHN0YWJpbGl0eSwgdGhhdCBpcyBpbXBvcnRhbnQuIERvIHlvdSByZW1lbWJlciB0aGUgc3RvcmllcyBvZiB0aGUgSGVhcnN0IE5ld3NwYXBlcnMgYW5kIHRoZSBTcGFuaXNoIEFtZXJpY2FuIHdhcj8gSSBzZWUgYSBzaW1pbGFyIHNpdHVhdGlvbiBoZXJlLiAKWW91IGNhbiBhbHNvIHB1bGwgdXAgYSBmZXcgcmV2aWV3cyBvbmxpbmUgZm9yIG9uZSBvZiB5b3VyIHBvdXJzIGFuZCB0cnkgdG8gcGljayBvdXQgZGVzY3JpcHRvcnMgdGhhdCBjb21lIHVwIHJlZ3VsYXJseS4gRm9yIGluc3RhbmNlLCBhIGxvdCBvZiBwZW9wbGUgcGljayB1cCBiYW5hbmEgZnJvbSBKRC4gTWFueSBjb21tZW50IG9uIFdvb2Rmb3JkIFJlc2VydmUgaGF2aW5nIGEgbWV0YWxsaWMgdGFzdGluZyBmaW5pc2guIFNlZSBpZiB5b3UgY2FuIHBpY2sgb3V0IHRob3NlIGVsZW1lbnRzLgpJbnRpbWlkYXRpb24gaXMgYSBiaWcgcGFydCBvZiB0aGUgVmVnYXMgZGVhbC4gSSBtYXkgaGF2ZSB3YWxrZWQgaW4gbGlrZSBDb25uZXJ5LCBidXQgSSBsZWZ0IHRoYXQgZmlyc3QgY2FzaW5vIGZlZWxpbmcgbW9yZSBsaWtlIExhcnJ5IHRoZSBDYWJsZSBHdXkuIFNvIEkgaGVhZGVkIGRvd250b3duLCB3aGVyZSB0aGUgbWlkZGF5IHNjZW5lIGlzIGEgbGl0dGxlIG1vcmUgcmVsYXhlZCwgbGVzcyBnbGFtLiAKSW4gZGVyIGFiZ2VsYXVmZW5lbiBOSEwgU2Fpc29uIGZhbmQgZXIgaW0gQWJzY2hsdXNzIHp1IGFsdGVyIFN0IHp1ciAzMCBUb3JlIHVuZCAzMyBWb3JsYWdlbiB3dXJkZW4gaW4gODIgSGF1cHRydW5kZW4gUGFydGllbiBnZXogRXMgd2FyIGRhcyB6d2VpdGUgTWFsIGluIHNlaW5lciBLYXJyaWVyZSwgZGFzcyBlciBkaWUgTWFya2Ugdm9uIDMwIFRyZWZmZXJuIGtuYWNrdGUuIApPZiB0aG9zZSB3aG8gZGllZCwgZml2ZSB3ZXJlIGluIHZlaGljbGVzLiBTaGUgYWRkZWQ6ICJNYW55IGZhbWlsaWVzIGRvIG5vdCBsb29rIGZvciBjb21wZW5zYXRpb24uIApGaW5hbGx5LCB0aGUgUFQgbXVzdCBwYXNzIHRoZSBib2FyZCBjZXJ0aWZpY2F0aW9uIGV4YW0uIApEZWZpbml0ZWx5IHN0YXJ0IHVzaW5nIGFuIEFIQSBvciBCSEEgKG9yIGJvdGgsIGlmIHlvdXIgc2tpbiBjYW4gaGFuZGxlIGl0KS4gCldhbm5hIGtub3cgaG93IHRoZSByYWNpYWwgaGllcmFyY2h5IGdvZXMgc2luY2UgeW91IGd1eXMgc2VlbSB0byBoYXZlIHNvIG1hbnkgcmFjZSBhZXN0aGV0aWNzIHRocmVhZHMuIApJZiB5b3VyIHNjaGVkdWxlIGlzIHRvbyBtdWNoIGZvciB5b3UgdG8gYmUgYWJsZSB0byBjb29rIGEgbWVhbCB5b3Vyc2VsZiBtYXliZSB5b3Ugc2hvdWxkIGRyb3AgZG93biBvbiB0aGUgbnVtYmVyIG9mIHNwb3J0cyB5b3UgZG9pbmcuIAoiV2UncmUgbG9va2luZyB0byBzcGxpdCBpdCBbdGhlIFZpY3RvcmlhXSBpbnRvIHRocmVlOiBhcmVhbGx5IGZ1bmt5IGJhciBvciB0YXZlcm47IGEgZ29vZCByZXN0YXVyYW50IGFuZCBnb29kIGNoZWY7IGFuZCBhIGJvdXRpcXVlIGhvdGVsIGZvciBhY2NvbW1vZGF0aW9uLCIgaGUgc2FpZC4gSGUgYWxzbyBob3BlcyB0byB1bmNvdmVyIHRoZSBWaWN0b3JpYSBIb3RlbCdzIGhpc3RvcnkgYW5kIGl0cyBwbGFjZSBpbiB0aGUgZWFybHkgZGF5cyBvZiBCYXRodXJzdC4gIldoZW4gdGhlIHJhaWx3YXkgZmlyc3QgY2FtZSB0byB0b3duLCB0aGlzIHdvdWxkIGhhdmUgYmVlbiB0aGUgbWFpbiBzdHJlZXQsIiBoZSBzYWlkIG9mIEtlcHBlbCBTdHJlZXQuIApCdXQgVGlsbHkgd2FzIHBlcnNpc3RlbnQgYW5kIGNvbnRpbnVlZCB0byBtYWtlIGEgc2NlbmUsIHNvIGhlciBwYXJlbnRzIGZpbmFsbHkgZ2F2ZSBpbiBhbmQgaGVhZGVkIGZvciBoaWdoZXIgZ3JvdW5kLiBPbiB0aGVpciB3YXksIHRoZXkgbWVudGlvbmVkIHRoZWlyIHN1c3BpY2lvbnMgdG8gYSBzZWN1cml0eSBndWFyZCwgYmVjYXVzZSBCcml0aXNoIHBlb3BsZSBhcmUgcG9saXRlIGxpa2UgdGhhdC4gQWJvdXQgMTAwIGJlYWNoZ29lcnMgY2xlYXJlZCBvdXQsIGFuZCB0aGUgdHN1bmFtaSBzb29uIHJhZ2VkIGluLiBJdCBlbmRlZCB1cCB0YWtpbmcgYWJvdXQgYSBxdWFydGVyIG1pbGxpb24gbGl2ZXMgaW4gMTMgY291bnRyaWVzLCBidXQgemVybyBwb2ludCB6ZXJvIGxpdmVzIG9uIFRpbGx5J3MgYmVhY2guCkJlIHJlc3BlY3RmdWwgdG8gb3RoZXJzICAgdGhpcyBpbmNsdWRlcyBubyBob3N0aWxpdHksIHJhY2lzbSwgc2V4aXNtLCBiaWdvdHJ5LCBldGMuCk1mdyBhbGwgdGhlIHRheGVzIEkndmUgcGFpZCBpbiBteSBlbnRpcmUgd29ya2luZyBsaWZlIHByb2JhYmx5IHRvdGFscyB0byBhYm91dCB0aGUgc2FtZSBhbW91bnQgb2YgbW9uZXkgdGhhdCBhIHNpbmdsZSBkcm9uZSBtaXNzaWxlIGNvc3RzLgpOb3cgSSBmdWNraW5nIGNsb2NrIG91dCBvbiB0aGUgZG90IGV2ZXJ5IG5pZ2h0LiAzIHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvSWYgeW91IHJlYWxseSB3YW50ZWQgdG8gdGhyb3cgdGhlIGJvbmUsIEkgZ28gc28gZmFyIGFzIHRvIGFyZ3VlIHlvdSBjb3VsZCBqdXN0IGFib3V0IGFib2xpc2ggdGhlIGJhZCBiaWxsaW9uYWlyZXMuIEluIHRoZSBtb2Rlcm4gd29ybGQgeW91IGNhbiBmaW5kIG91dCBleGFjdGx5IHdobyBvZiB0aGUgdWx0cmEgcmljaCBkb25hdGVzIHRvIGNhdXNlcyBzdWNoIGFzIGNsaW1hdGUgY2hhbmdlIGRlbmlhbCwgcG9vciBlY29ub21pY3MsIHN0cmljdGVyIGltbWlncmF0aW9uIHBvbGljeSwgYW5kIHRoZSBvdmVyYWxsIGRlY29uc3RydWN0aW9uIG9mIG91ciBuZXdzIG1lZGlhLiAKSWYgYWRzIHdlcmUgZGlmZmVyZW50IGNvbG9ycyBvbiBkaWZmZXJlbnQgc3VicywgdGhhdCBtaWdodCBjb25mdXNlIG5vcm1hbCB1c2Vycy4gQW5kIG1ha2luZyBhbiBlbnRpcmUgY29sb3Igb2ZmIGxpbWl0cyBpcyBwcmV0dHkgcmVzdHJpY3RpdmUsIGlmIHlvdSBibG9ja2VkIG9ubHkgdGhlIGV4YWN0IGNvbG9yIHRoZW4geW91IGNvdWxkIHN0aWxsIHVzZSBhIHNoYWRlIHNpbWlsYXIgdG8gaXQsIGFuZCBpZiB5b3UgYmxvY2sgYWxsIHNpbWlsYXIgc2hhZGVzIHRoZW4gbW9kcyBjb3VsZCBubyBsb25nZXIgdXNlIGFuIGVudGlyZSBjYXRlZ29yeSBvZiBjb2xvcnMuIElmIHByb21vdGVkIHBvc3RzIHdlcmUgYSBtdXRlIHNoYWRlLCBsaWtlIGEgbGlnaHQgZ3JheSBpc2ggYmx1ZSwgSSB0aGluayB0aGF0IGNvdWxkIHByb2JhYmx5IHdvcmsgd2l0aG91dCByZXN0cmljdGluZyBtb2QgY29sb3Igb3B0aW9ucy4KRm91ciBQZWVsIHJlZ2lvbmFsIHBvbGljZSBvZmZpY2VycyBjaGFyZ2VkIHdpdGggdGhlZnQKVGhlcmUncyBhIHRvbiBvZiBiaXR0ZXIgYWNjdXNhdGlvbiBvZiB3cm9uZ2RvaW5nIGFsb25nIHdpdGggdGhlIGV2aWRlbmNlIHRvIGJhY2sgaXQgdXAuIFRoZSBub3RlLCB3cml0dGVuIGJ5ICJNb2RlcmF0b3IiLCBhcHBlYXJlZCBpbiBNZWNoYW5pY3MgTWFnYXppbmUgZm9yIDE1IEp1bmUgMTgyNSAodm9sdW1lIGl2LCBwIDE0OCkuIFNpbmNlIHRoaXMgaXMgMTgyNSwgdGhlIHRlbGVncmFwaCBiZWluZyByZWZlcnJlZCB0byBoZXJlIGlzIGFuICJhdG1vc3BoZXJpYyB0ZWxlZ3JhcGgiLCBvciBzZW1hcGhvcmUsIHRoZSBlbGVjdHJpYyB0ZWxlZ3JhcGggb2YgTW9yc2UgYmVpbmcgYW5vdGhlciBkb3plbiB5ZWFycyBhd2F5IGFuZCBhbm90aGVyIDUgb3IgNiBiZWZvcmUgaXRzIHByYWN0aWNhbCBhcHBlYXJhbmNlLi4gCkNvdW50cnkgY2x1YiBwcmVzaWRlbnQgUm9zcyBEYXZpcyBzYWlkIHRoZXJlIHdhcyBubyBhbHRlcm5hdGl2ZSB0byBhZG1pbmlzdHJhdGlvbiBhZnRlciB0d28gbGV0dGVycyBvZiBhcHBlYWx0byBtZW1iZXJzIHRoaXMgeWVhciBmYWlsZWQgdG8gbGlmdCB0dXJub3Zlci4gIlRoZSBib3R0b20gbGluZSBpcyB0aGVyZSB3YXMgbm90IGVub3VnaCBjYXNoZmxvdyB0byBrZWVwIGl0IHZpYWJsZSwiIE1yIERhdmlzIHNhaWQuICJJIG5vdCB2ZXJ5IGhhcHB5LCBidXQgdGhlcmUgaXMgbm8gYWx0ZXJuYXRpdmUgIGxlZ2FsbHkgb3IgbW9yYWxseS4iIEEgZnVsbCB0aW1lIG1hbmFnZXIgYW5kIHVwIHRvIGVpZ2h0IGNhc3VhbCBzdGFmZiB3aWxsIGxvc2UgdGhlaXIgam9icyB0aHJvdWdoIHRoZSBjbG9zdXJlIHdoaWNoIHRvb2sgZWZmZWN0IGxhc3QgTW9uZGF5LiAKQXUgTW95ZW4gZ2UsIGNlIG5lIHNvbnQgcGFzIG1vaW5zIHF1ZSBsIGRlIFNhbGVybmUgZXQgSGlsZGVnYXJkZSBxdWkgbCBjb21tZSByZW1kZS4gTGEgY2xicmUgY29sZSBkZSBtZGVjaW5lIGl0YWxpZW5uZSBzZSBmZW5kcmEgbW1lIGRlIGJvbnMgbW90cyAgc29uIHN1amV0IDogIGwgY2hhc3NlIGxlcyB2ZW50cywgYW1vaW5kcml0IGxlcyBodW1ldXJzIGV0IGQgdmVudHJlIHJlcGxldCBkaXNzaXBlIGxlcyBncm9zc2V1cnMgICgxKS4gUXVhbnQgIGwgZGUgQmluZ2VuLCBlbGxlIHByY29uaXNlIGwgZW4gY2FzIGRlIHNhaWduZW1lbnQgZGUgbmV6LCBkZSBtYWxhZGllcyBwZWN0b3JhbGVzLCBkZSBkb3VsZXVycyBkZSBsYSByYXRlIGV0IGRlIGdvdXR0ZS4uIApGb2xsb3dpbmcgYSAyIHdlZWsgZGlldCBmcmVlIGludGVydmFsIGFmdGVyIHRoZSBmaXJzdCBkaWV0IHBlcmlvZCwgdGhlIHNhbWUgcGF0aWVudHMgd2VyZSBnaXZlbiB0aGUgb3Bwb3NpdGUuIApBbmQgd2hhdCdzIHBhc3QgaXMgcGFzdC4gClRoaXMgaXMgdGhlIG9uZSB0aGF0IHNldCBtZSBvZmYgbGFzdCBuaWdodCwgaXQgd2FzIGFjdHVhbGx5IGF0IHRoZSB0b3Agb2YgdGhlIHBvc3RzIHllc3RlcmRheSwgYmVjYXVzZSBpdCBnb3Qgc28gbWFueSB1cHZvdGVzLiBJIGFjdHVhbGx5IGF2b2lkZWQgdGhlIGZvcnVtIGR1cmluZyB0aGUgS2F2YW5hdWdoIGhlYXJpbmdzIGZvciB0aGUgbW9zdCBwYXJ0LCBhbmQgYWdhaW4gYWZ0ZXIgYSBjb3VwbGUgd2Vla3Mgb2YgdGhlIEZvcnRoIHN1aWNpZGUsIGJlY2F1c2UgU1NDIGVuZG9yc2VzIHRoZSBjdWx0aXZhdGVkIGRlbHVzaW9ucyBvZiBwZXJzZWN1dGlvbiBJIGluaXRpYWxseSBlbmNvdW50ZXJlZCBhZnRlciBteSBvd24gYXR0YWNrLiBUaGUgdG9wIHBvcnRpb24gb2YgdGhhdCBwb3N0IGdldHMgcGVvcGxlIChjb3JyZWN0bHkpIGVucmFnZWQsIGJ1dCBpdCBwcmltaW5nLCB1c2VkIHRvIHNsaWRlIGluIHRoZSBzZWNvbmQgbm9uc2Vuc2ljYWwgcG9pbnQuClRoZWlyIGJsdW5kZXIsIG5vdCB5b3Vycy4gClRoZXJlIGEgdG9uIG9mIG90aGVyIHN0dWZmLCB0b28sIHRoYXQgSSBub3Qgc2VlbiBjb25jZXJuaW5nIHRoZW0sIGJ1dCBpbiB0aGlzIGluc3RhbmNlIHRoZSBwaG90byBvZiB0aGUgaGFuZ2FyL3NjaG9vbCBpcyBzbyBjaGFybWluZyBhbmQgdGhlIHN0b3J5IHNvIGNvbXBlbGxpbmcgdGhhdCBJIHRoaW5rIEkganVzdCBtaXNzZWQgc29tZXRoaW5nIHRoYXQgaXMgcHJvYmFibHkgYSBwaWVjZSBvZiBoaWdobHkgdmlzaWJsZSBwb3B1bGFyIGN1bHR1cmUuIApUaGV5IGFscmVhZHkgaGFkIGEgY29sbGVjdGlvbiBhbmQgZ2F2ZSBtZSA0MC4gVmVyeSBnZW5lcm91cyBidXQgbm93IGFzIHdlIGFuIG9mZmljZSBvZiAxMCB0aGF0IG1lYW5zIEkgd2lsbCBoYXZlIHRvIGpvaW4gaW4gd2l0aCBiaXJ0aGRheSBjb2xsZWN0aW9ucyBmb3IgdGhlIHJlc3Qgb2YgdGhlIHllYXIuIApNci4gCk5vIGlzc3VlcyB0aGVyZS4gCkZvciBtZSwgSSBzdGFydGVkIG1vZGVzdGx5IGFuZCB3b3JrZWQgZGlsaWdlbnRseSBvbiBteSBmaW5hbmNpYWwgZ29hbHMgZm9yIDIwIHllYXJzLCBidXQgaGF2aW5nIG15IGFjY291bnRzIGF2YWlsYWJsZSBpbiBhIGdyYXBoaWMgZm9ybWF0IHJhdGhlciB0aGFuIGp1c3QgaW4gbnVtYmVycyBpbiBhIHNwcmVhZHNoZWV0IGhlbHBlZCBtb3RpdmF0ZSBtZSB0byBrZWVwIGdvaW5nLi4gCkNpdHkgc3RhZmYgcmVjb21tZW5kIG1hZ25ldGljIGxldml0YXRpb24gdHJhaW4gZm9yIFRvcm9udG8gWm9vCk1heWJlLCBidXQgdGhlIGtpZCB3YW50IGF0IHJpc2suLiAKSSBuZWVkIGdsYXNzZXMgdG8gc2VlIGFuZCBteSBwYXJlbnRzIGFyZSBvZiBkaWZmZXJlbnQgcmFjZXMgYW5kIEkgYXR0cmFjdGVkIHRvIHBlb3BsZSByZWdhcmRsZXNzIG9mIGdlbmRlciBpZGVudGl0eS4gCkl0J3MgZWFzeSB0byBnZXQgY2F1Z2h0IHVwIGluIHRoZSBub3Rpb24gdGhhdCB5b3UncmUgc3R1Y2sgaW4gYSBmaWVsZCBvciBqb2IsIHlvdSdyZSBub3QuIFRha2UgdGhlIGxlYXAgb2YgZmFpdGghLiAKVGhlIGNvbXBhbnkgaXMgaW50ZXJlc3RlZCBpbiBzaG93Y2FzaW5nIGEgbG93ZXIgc3BlZWQgbWFnbmV0aWMgbGV2aXRhdGlvbiBzeXN0ZW0gdGhhdCBlbXVsYXRlcyBoaWdoIHNwZWVkIG1hZ2xldiB0cmFpbnMgYWxyZWFkeSBpbiBvcGVyYXRpb24gaW4gU2hhbmdoYWksIENoaW5hIGFuZCBpbiBBaWNoaSBQcmVmZWN0dXJlLCBKYXBhbi4KIkhlIHdhcyBzbyBzd2lmdCwgYW5kIHRoZSBkZW50cyBzbyBzdWJ0bGUsIHRoYXQgaGlzIGNoZWF0aW5nIGluaXRpYWxseSB3ZW50IHVubm90aWNlZC4iSW4gc2V2ZXJhbCBoZSB1c2VkIGZhbHNlIGRvY3VtZW50cywgaGF2aW5nIGFscmVhZHkgYmVlbiBiYW5uZWQgZnJvbSB0aGVpciBwcmVtaXNlcy4KRGFuYSBUYWtlIE9uIHRoZSBvdGhlciBzaWRlIG9mIHRoZSBpbnZlc3RtZW50IGlzc3VlIGlzIHRoZSBkYXkgdHJhZGVyLiAKWWVhaCBpdCdzIG5vdCBoYXBwZW5pbmcuIApTb3V0aGVybkJlbGxlR2FtZXIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCldhcyBqdXN0IHNpdHRpbmcgdGhlcmUgYW5kIHRoZSBuZXh0IHRoaW5nIFBhZHJhaWcgUGFya2luc29uLCBvbmUgb2YgdGhlIHRvcCBndXlzIGluIElyZWxhbmQsIGNvbWVzIGFuZCBzaXRzIGRvd24gYmVzaWRlIG1lLiAKU28gZmFyLCBoaXMgcHJvamVjdGlvbnMgaGF2ZSBwcm92ZWQsIGlmIGFueXRoaW5nLCB0b28gY29uc2VydmF0aXZlLiBUaGUgQm9yZ2F0YSdzIHJldmVudWVzIGhhdmUgZ3Jvd24gbW9udGhseS4gSXRzIGZpcnN0ICBhbmQgc2Vjb25kIHF1YXJ0ZXIgcmVzdWx0cyBiZWF0IEJveWQncyBlc3RpbWF0ZXMuIApUaGV5IGRvbid0IHNvdW5kIGR1bWIgdG8gbWUuIApXZSB3YW50ZWQgdG8gY2hlY2sgb3V0IHRoZSBIYXZhbmEgYXJlYSBpbiB0aGUgYmFjayBvZiB0aGUgc2hpcC4gSXQncyBnb3QgdHdvIG1vcmUgaG90IHR1YnMgYnV0IGl0J3Mgb25seSBhdmFpbGFibGUgYWZ0ZXIgN3BtLiBTbywgcmlnaHQgYXQgNywgd2UgaGVhZGVkIG92ZXIuCkkgZG9uIGtub3cuIEJ1dCBmb3IgbWUsIEkgaGF2ZW4gYmVlbiBpbnRlcmVzdGVkIGluIGFuIEZQUyBzaW5jZSB0aGV5IGFsbCBtb3ZlZCB0byB0aGUgdGlueSBtYXAvZm9yY2VkIGNvbmZsaWN0IG1vZGVsLiAKSHl1bmRhaSwgS2lhLCBWVyBBdWRpLCB0aGV5IGFyZSBhbGwgZmFzdCBob3JzZXMuLiAKSW4gY2xhc3MsIGZvbGxvd2luZyBTdGV2ZW5zJ3MgYWR2aWNlLCBTdG91dCBzbG9ncyBoYXJkIHRvIGxlYXJuIHRoZSBjb25jZXB0cyBhbmQgcnVsZXMgb2YgYWNjb3VudGluZy4gT25lIG9mIGhpcyBmYXZvcml0ZSBmYWN1bHR5IG1lbWJlcnMgaXMgYSBzb2Npb2xvZ3kgcHJvZmVzc29yIG5hbWVkIERyLiAKV2h5PyBXZSB2ZXJ5IGFyZ3VhYmx5IGhhdmUgdGhlIHN0cm9uZ2VzdCBwcml2YXRlIHByb3BlcnR5IGxhd3MgaW4gdGhlIHdvcmxkLiBJbiBmYWN0IG11Y2ggb2Ygb3VyIHZlcnkgZm91bmRhdGlvbiBhcyBhIGNvdW50cnkgYXJlIHJvb3RlZCBpbiB0aGUgZGV2ZWxvcG1lbnQgb2Ygb3VyIHByb3BlcnR5IGxhd3MgYW5kIHRoZWlyIHNpZ25pZmljYW5jZS4KQ2FsbGVkIHRoZSBzZXJpZXMgU2xpY2Ugb2YgSGVhdmVuLiAKUGx1cyBvbiBlc3QgZGUgZm91cwpZb3UgY2hvb3NlLCBpbiB0aGlzIHNpdHVhdGlvbiB0eXBlIChIVVNORywgYnV0dG9uLCAxMGJiIGVmZmVjdGl2ZSkgdG8gbGltcCAwJSBvZiB0aGUgdGltZSwgcmFpc2UgdG8gMmJiIDkuOTliYiAwJSBvZiB0aGUgdGltZSBhbmQgc2hvdmUgd2l0aCB0aGlzIHJhbmdlIGFuZCBmb2xkIGFsbCBvdGhlciBzdGFydGluZyBoYW5kcy4gV2l0aCB0aGlzIHN0cmF0ZWd5LCB5b3VyIG9wcG9uZW50IHdpbGwgbm90IGJlIGFibGUgdG8gZXhwbG9pdCB0aGUgc3RyYXRlZ3kgYW5kIG9ubHkgYmUgYWJsZSB0byBicmVha2V2ZW4gYWdhaW5zdCB5b3UsIG9yIGxvc2UgaW4gdGhlIGxvbmcgcnVuLiBBcyBzdGF0ZWQgaW4gbXkgcG9zdCwgdGhpcyBpcyBieSBkZWZpbml0aW9uIGEgR1RPIHN0cmF0ZWd5LCBhcyBHVE8gaXMgYW4gdW5leHBsb2l0YWJsZSBzdHJhdGVneS4gCiJUaGV5IHdlcmUgYWxtb3N0IGxpa2Ugc2Fsb25zIGZvciBwc3ljaG90aGVyYXB5IHRoYXQgd291bGQgZHJhdyBmYWN1bHR5IGFuZCB0cmFpbmVlcyB0byBoZXIgaG9tZSBpbiBDYW1icmlkZ2UsIiBSb3NlbmJhdW0gc2FpZC4KQXQgZmlyc3QgaXQgd2FzIG1lIGFuZCBteSBmcmllbmRzIHdobyBwbGF5ZWQsIHdlIHN0YXJ0ZWQgd2l0aCAxMyBwbGF5ZXJzIHRoZSBmaXJzdCBtb250aC4gV2UganVtcGVkIHVwIHRvIGhpZ2ggdGVlbnMgd2l0aGluIGEgeWVhciwgYW5kIHN0YXllZCB0aGVyZSBmb3IgdGhlIGZpcnN0IDIgMyB5ZWFycy4gCklzIG5vdCB0cnVlLiBQbGVudHkgb2YgcGVvcGxlIGxpdmUgYWxvbmcgdGhlIENhbGlmb3JuaWEgY29hc3QgYW5kIGhpa2UgaW4gdGhlIFNpZXJyYS4gUGVvcGxlIGZyb20gYWxsIG92ZXIgd2l0aCB3aWRlbHkgdmFyeWluZyBleHBlcmllbmNlIGxldmVscyBoaWtlIHRoZSBKTVQsIHdoaWNoIHN1bW1pdHMgV2hpdG5leS4gVGhlcmUgbm8gbmVlZCB0byBkaXNzdWFkZSB0aGUgT1Agd2l0aCBleGFnZ2VyYXRlZCBjbGFpbXMsIHdpdGggcHJvcGVyIHBsYW5uaW5nIHRoZXkgYmUgMTAwJSByZWFkeSBieSBmYWxsLgpKb3NlIGlzIGEgcGhlbm9tZW5hbCBmaWdodGVyLCBpdCBzdGlsbCBzaG93biBpbiBoaXMgbWF0Y2hlcy4gQnV0IGxldCBub3QgcmVhZCBpbnRvIGl0IHRvbyBtdWNoIGFib3V0IGhpcyB0d28gbG9zc2VzIHRvIE1heC5TYXkgdGhhdCB0aGVyZSBpcyBhIDYwJSBwcm9iYWJpbGl0eSB0aGF0IGFueSByYW5kb20ganVkZ2Ugd291bGQgZ3JhbnQgSG9sbG93YXkgdGhlIGRlY2lzaW9uLiAKRmlyc3QsIGF2b2lkIGN5Y2xpbmcgYW5kIG1ha2Ugc3VyZSB5b3VyIHNleCB0b3lzIGFyZW4gcG9pc29uaW5nIHlvdS4KU29tZSBhZHZpY2U6IGtlZXAgeW91ciBvcGVyYXRpb25zLCBtYW5hZ2luZyBjb3N0cywgcG9saWNpZXMgZXRjLiAKQnV0IHRoZSBmYWN0IHRoYXQgdGhleSBjYW4gZ28gb3V0IGFuZCB0YWtlIHRoYXQgUE9TIGRhdGEgYW5kIHBpY2sgYW5kIGNob29zZSB3aGljaCBwcm9kdWN0cyB0aGV5IHdhbnQgdG8gY2FwaXRhbGl6ZSBhbmQgb25seSB0YWtpbmcgcmlzayBhZnRlciBJIGFscmVhZHkgdG9vayB0aGUgcmlzayBpcyB0aGUgY29uZmxpY3QgaGVyZS4uIApEb3VnbGFzIHdyb3RlIG1hbnkgb2YgdGhlIGZpcnN0IEVudHJpZXMgdG8gYXBwZWFyIG9uIEgyRzIuIEFzIHdlbGwgYXMgY29sbGF0aW5nIGFsbCBoaXMgY29udHJpYnV0aW9ucyB0byB0aGUgc2l0ZSwgdGhpcyBwYWdlIGFsc28gaGFzIGxpbmtzIHRvIGFsbCB0aGUgQXBwcm92ZWQgRW50cmllcyB3cml0dGVuIGJ5IG1lbWJlcnMgb2YgdGhlIGNvbW11bml0eSB0aGF0IGFyZSBhYm91dCBBZGFtcyBhbmQgaGlzIHdvcmsuIEFtb25nIHRoZW0geW91J2xsIGZpbmQgQWRhbXMnIG93biBkaXNjb3Vyc2VzIG9uIHRoZSBHcmVhdCBCcml0aXNoIGN1cCBvZiB0ZWEsIGludGVybmF0aW9uYWwgZHJpdmluZyBsYXdzIGFuZCBldmVuIHNvbWUgZmVzdGl2ZSBoYW5nb3ZlciBjdXJlcy4gWW91J2xsIGFsc28gZmluZCBhIGNvbXBsZXRlIGd1aWRlIHRvIHRoZSBoaXN0b3J5IGFuZCBtYW55IGluY2FybmF0aW9ucyBvZiBUaGUgSGl0Y2hoaWtlcidzIEd1aWRlIHRvIHRoZSBHYWxheHkgLCBBZGFtcycgRGlyayBHZW50bHkgbm92ZWxzLCBhcyB3ZWxsIGFzIHRoZSBMYXN0IENoYW5jZSB0byBTZWUgZWNvbG9naWNhbCBwcm9qZWN0IGJlZ3VuIGJ5IERvdWdsYXMgQWRhbXMgYW5kIHpvb2xvZ2lzdCBNYXJrIENhcndhcmRpbmUgaW4gdGhlIDE5ODBzIGFuZCBjb250aW51ZWQgYnkgU3RlcGhlbiBGcnkgYW5kIENhcndhcmRpbmUgaW4gdGhlIDIwMDBzLgpJdCBzYWlkIGl0IHdhcyBjb21taXR0ZWQgdG8gZXhhbWluaW5nIHRoZSBhY2N1c2F0aW9ucyBhbmQgcmVhY2hpbmcgb3V0IHRvIHZpY3RpbXMgd2hpbGUgc2FmZWd1YXJkaW5nIHRoZSByaWdodHMgb2YgYWxsIGludm9sdmVkLgpGcm9tIHdoYXQgSSBjYW4gdGVsbCBmcm9tIHRoZSBwb3N0LCB5b3UgZGlkbiBrbm93IHRoZSBnaXJsZnJpZW5kIHdlbGwsIGV2ZW4gaWYgeW91IGRpZCBoaXQgaXQgb2ZmLiBCZXN0IHlvdSBjYW4gZG8gZm9yIHNvbWVvbmUgYXMgYSBmcmllbmQgaXMgdGVsbCB0aGVtIHdoYXQgdGhleSBkb2luZyB3cm9uZyBhbmQgaG9wZSB0aGV5IGxpc3Rlbi4gCk5vLCBtb3N0IERlbXMgc3RpbGwgYXJlbiAibGVmdGlzdHMiLCBldmVuIGluIHRoZSBBbWVyaWNhbiBjb250ZXh0LiAKVGhlIFJvY2sgb2YgQ2hpY2thbWF1Z2EsIFRoZSBUcmVlIG9mIEFwcG9tYXR0b3gsIGV0Yy4gClRoZSByZWFsaXR5IGlzIHRoYXQgam9icyB3aWxsIG5vdCBjb21lIGJhY2sgdG8gdGhlIFVTIGluIGEgeWVhci4gSGlsbGFyeSB3aWxsIG5vdCBiZSBwcm9zZWN1dGVkIGluIHRocmVlIG1vbnRocyBvciBldmVyLiBUaGUgd2FsbCB3aXRoIE1leGljbyB3aWxsIG5vdCBiZSBidWlsdCBvdmVybmlnaHQuLiAKQW5kIGluIHRoZSBlYXJseSAxOTQwcywgdGhlIFBpb25lZXIgU2Fsb29uIHdhcyBmcmVxdWVudGVkIGJ5IG5vbmUgb3RoZXIgdGhhbiB0aGUgZmFtb3VzIGFjdG9yIENsYXJrIEdhYmxlLiBIZSBhbmQgQ2Fyb2xlIExvbWJhcmQgdmlzaXRlZCB0aGUgdG93biBtYW55IHRpbWVzLiBIaXMgZmFtb3VzIGxpbmsgdG8gdGhlIFBpb25lZXIgU2Fsb29uIGNhbWUgYWJvdXQgdmVyeSB0cmFnaWNhbGx5LiBIZSB3YXMgd2FpdGluZyBmb3Igd29yZCBvZiBhIHRlcnJpYmxlIHBsYW5lIGNyYXNoIHRoYXQgdGhlIGxvdmUgb2YgaGlzIGxpZmUgYW5kIHdpZmUgb2YgbGVzcyB0aGFuIHR3byB5ZWFycywgQ2Fyb2xlIExvbWJhcmQsIHdhcyB1bmZvcnR1bmF0ZWx5IGludm9sdmVkIGluLiBUaGUgcGxhbmUgc2hlIHdhcyBpbiBoYWQgY3Jhc2hlZCBpbnRvIG5lYXJieSBQb3Rvc2kgTW91bnRhaW4gYW5kIHdvcmQgY2FtZSB0aHJvdWdoIHRoYXQgdGhlcmUgd2VyZSBubyBzdXJ2aXZvcnMuIEl0IGlzIHNhaWQgdGhhdCBDbGFyayBHYWJsZSB3YWl0ZWQgaW4gdGhlIFBpb25lZXIgU2Fsb29uIGZvciB0aHJlZSBkYXlzLCB3YWl0aW5nIGZpcnN0IGZvciB3b3JkIGFib3V0IGhlciBmYXRlIGFuZCB0aGVuIGZvciBuZXdzIG9mIHRoZSByZWNvdmVyeSBvZiBoZXIgYm9keS4KSSBkb24gdGhpbmsgdGhlIGFudGl2YWNjaW5hdGlvbiBtb3ZlbWVudCBoYXMgYSBncmVhdCBpbmZsdWVuY2Ugb24gdGhhdCBpc3N1ZS4gQXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgb3V0YnJlYWsgdGhlcmUgd29uIGJlIGEgdmFjY2luZS4gVGhleSB0cnkgdG8gc3VydmVpbGxhbmNlIHRoZSBpbmZsdWVuemEgdmlydXNlcyBhcm91bmQgdGhlIHdvcmxkICh3aGljaCBpcyB2ZXJ5IGRpZmZpY3VsdCBjb25jZXJuaW5nIHRoZSBwb3VsdHJ5IHNpdHVhdGlvbiBpbiBBc2lhKSBhbmQgbWFrZSBpdCBwb3NzaWJsZSB0byBwcm9kdWNlIGEgdmFjY2luZSBpbiBzaXggbW9udGhzIGFmdGVyIHRoZSBmaXJzdCBvdXRicmVhay4gSSBkb24ga25vdyBob3cgdGhlIHNpdHVhdGlvbiBpcyBpbiB0aGUgVVNBLCBidXQgaW4gRXVyb3BlIHRoZSBzZWFzb25hbCBpbmZsdWVuemEgdmFjY2luZSBpcyBub3QgcmVjb21tZW5kIGZvciB0aGUgZ2VuZXJhbCBwdWJsaWMsIHNvIHRoZXJlIHdvbiBiZSBhIGhlcmQgaW1tdW5pdHkgKG1pZ2h0IGJlIHBvc3NpYmxlIGluIHRoZSBoZWFsdGggY2FyZSBzZWN0b3IpLgpCbHVmZmluZyBpcyBkZWZpbmVkIGFzIGFuIGFjdCBvZiBkZWNlcHRpb24gYnkgYSBmYWxzZSBzaG93IG9mIGNvbmZpZGVuY2UgaW4gdGhlIHN0cmVuZ3RoIG9mIHlvdXIgY2FyZHMuIEJhc2ljYWxseSwgeW91J3JlIHRyeWluZyB0byBjb252aW5jZSB5b3VyIG9wcG9uZW50cyB0aGF0IHlvdXIgaGFuZCBpcyB1bmJlYXRhYmxlLiBXaGVuIHlvdSBjaG9vc2UgdG8gYmx1ZmYsIHlvdSdyZSBhY3R1YWxseSBob3BpbmcgdGhhdCBldmVyeW9uZSBlbHNlIGZvbGRzLiAKRXZlcnkgdGltZSBJIGhhdmUgbXkgd3Jpc3QgaW4gbXkgbGluZSBvZiBzaWdodCwgSSBzYXkgdG8gbXlzZWxmLCBraXRjaGVuIG9yIG1hcmtldC4gCkkgZmVlbCBsaWtlIEkgc2hvdWxkIGxldCBoaW0gZ28gYW5kIGhhdmUgZnVuLCBidXQgSSBzdGlsbCBhbSBwcmV0dHkgY29uY2VybmVkIHdoZW4gSSB0aGluayB0aGF0IGhlIGNvdWxkIHBvc3NpYmx5IG1pc3MgdGhlIGJpcnRoIGlmIHRoaW5ncyBoYXBwZW5lZCBmYXN0LCB3aGljaCBpcyBhbHdheXMgYSBwb3NzaWJseSB3aXRoIHRoZSB0aGlyZCBjaGlsZC4gClNvbWVvbmUgaGFzIHRvIGJ1eSB0aGUgZXF1aXBtZW50LgpWb3VzIHBvdXZleiB2b3VzIGRlbWFuZGVyIHNpIHZvdXMgYXZleiBlbnZpZSBldCBlbmNvcmUgZmFpbSBwb3VyIHVuIGRlc3NlcnQsIHRvdXQgZGUgc3VpdGUgb3UgcGx1cyB0YXJkLi4gClRoZXNlIHN0dWRpZXMgc3VnZ2VzdCB0aGF0IGV4ZXJjaXNlIGNvdWxkIGhhc3RlbiB0aGUgcmVhcHBlYXJhbmNlIGluIHRoZSBjZW50cmFsIGNpcmN1bGF0aW9uIG9mIGxldWtvY3l0ZXMgY29uZGl0aW9uZWQgYnkgdGhlIGxvY2FsIGVudmlyb25tZW50IG9mIHRoZSBsdW5nLHNwbGVlbiwgYW5kIG11c2NsZSBwcm92aWRpbmcgYSBwb3RlbnRpYWwgbWVjaGFuaXNtIHRocm91Z2ggd2hpY2ggdGlzc3VlcyBsaWtlIG11c2NsZSBjb3VsZCBpbmZsdWVuY2UgaW1tdW5lIGZ1bmN0aW9uIHN5c3RlbWljYWxseS5UaGlzIHNwZWN1bGF0aW9uIGlzIGNvbnNpc3RlbnQgd2l0aCBhIGdyb3dpbmcgYm9keSBvZiBkYXRhIGZyb20gYWlyIHBvbGx1dGlvbiB0byBzdXJnZXJ5LCB0aGF0IGxvY2FsIHRyaWdnZXJzIGNhbiBpbmZsdWVuY2VzeXN0ZW1pYyBpbW11bmUgY2VsbCBmdW5jdGlvbiAoZGVuIEhhcnRpZ2ggZXQgYWwuLCAyMDEwOyBMYW5kaXMsMjAwOTsgTWVuemllcyBldCBhbC4sIDIwMDY7IFRob21hcyBldCBhbC4sIDIwMDIpLkNpcmN1bGF0aW5nIGxldWtvY3l0ZXMgaW5jcmVhc2UgcmFwaWRseSB3aXRoIGV4ZXJjaXNlIHRoZW4gcXVpY2tseSBkZWNyZWFzZSB3aGVuIHRoZSBleGVyY2lzZSBlbmRzLldlIHRlc3RlZCB3aGV0aGVyIGV4ZXJjaXNlIGFjdXRlbHkgbGVkIHRvIGJpZGlyZWN0aW9uYWwgaW50ZXJjaGFuZ2Ugb2YgbGV1a29jeXRlcyBiZXR3ZWVuIHRoZSBjaXJjdWxhdGlvbiBhbmQgdGhlIGx1bmcsIHNwbGVlbiwgYW5kIGFjdGl2ZSBza2VsZXRhbCBtdXNjbGUuVG8gYWNjb21wbGlzaCB0aGlzIGl0IHdhcyBuZWNlc3NhcnkgdG8gbGFiZWwgYSBsYXJnZSBudW1iZXIgb2YgaW1tdW5lIGNlbGxzIChncmFudWxvY3l0ZXMsIG1vbm9jeXRlcywgYW5kIGx5bXBob2N5dGVzKSBpbiBhIHdheSB0aGF0IHJlc3VsdGVkIGluIG1pbmltYWwgcGVydHVyYmF0aW9uIG9mIGNlbGwgZnVuY3Rpb24uUmF0cyB3ZXJlIGluamVjdGVkIGludHJhdmVub3VzbHkgd2l0aCBhIHNpbmdsZSBib2x1cyBvZiBjYXJib3h5Zmx1b3Jlc2NlaW4gZGlhY2V0YXRlIHN1Y2NpbmFtaWR5bCBlc3RlciAoQ0ZTRSkgZHllIHdoaWNoIGlzIHJhcGlkbHkgYW5kIGlycmV2ZXJzaWJseSB0YWtlbiB1cCBieSBjaXJjdWxhdGluZyBjZWxscy5UaGUgdGltZSBjb3Vyc2Ugb2YgdGhlIGRpc2FwcGVhcmFuY2Ugb2YgbGFiZWxlZCBjZWxscyBhbmQgdGhlaXIgcmVhcHBlYXJhbmNlIGluIHRoZSBjaXJjdWxhdGlvbiBmb2xsb3dpbmcgZXhlcmNpc2Ugd2FzIGRldGVybWluZWQgdmlhIGZsb3cgY3l0b21ldHJ5LlRoZSBtYWpvcml0eSBvZiBjaXJjdWxhdGluZyBsZXVrb2N5dGVzIHdlcmUgbGFiZWxlZCBhdCA0aC4gCkMnZXN0IHBvdXJxdW9pIGNlIGxpdnJlLCBkYW5zIHRvdXRlIHNhIG1vZGVzdGllIGV0IHNvbiBpbXBlcmZlY3Rpb24sIHNlIHZldXQgdW4gaG9tbWFnZSByZW5kdSAgdW5lIGRpdmluaXQgZG9udCBvbiBhIGJlYXVjb3VwICBhcHByZW5kcmUsIGV0IGNlbGEgcXUnb24gc29pdCB1bmUgZmVtbWUgb3UgdW4gaG9tbWUuLiAKWW91ciBiYW5rIHdpbGwgcHJvdGVjdCB5b3UgICBpZiB0aGUgZ2lnIGRvZXNuIGhhcHBlbiBhcyBzb2xkLCBpZSBpZiB0aGUgdGFsZW50IGlzbiB0aGVyZSwgeW91IGNhbiBkaXNwdXRlIHRoZSBjaGFyZ2UuIApmb3VuZGVyIGxhdW5jaGVzIENvbG9yYWRvIGNhdHRsZSB2ZW50dXJlClRoZSBTZW1pbm9sZXMgd2FudCB0byBleHRlbmQgdGhlaXIgZXhjbHVzaXZlIHJpZ2h0IHRvIG9mZmVyIHdoYXQgYXJlIGNhbGxlZCBiYW5rZWQgY2FyZCBnYW1lcywgbWFpbmx5IGJsYWNramFjayBhbmQgYmFjY2FyYXQsIGF0IHRyaWJlIG93bmVkIGNhc2lub3MuIEEgc2VuYXRlIG1lYXN1cmUgd291bGQgZXh0ZW5kIHRoZSBhZ3JlZW1lbnQgdG8gSnVseSBvZiBuZXh0IHllYXIsIGluc3RlYWQgb2YgbGV0dGluZyBpdCBleHBpcmUgdGhpcyBKdWx5IDEuClRoaXMgd2VudCBvbiBmb3IgYSB3aGlsZSBhbmQgd2hlbiBpdCBjYW1lIHRvIHByZXNlbnRhdGlvbiB0aW1lIGhlIGRlY2lkZWQgdG8gZnVjayB1cyBvdmVyIGFuZCBub3QgdHVybiB1cCBhbmQgY29zdCBhbGwgYSBwZXJjZW50YWdlIG9mIG91ciBncmFkZSAodGhvdWdoIGhlIGRpZCBoYXZlIHRoZSBkZWNlbmN5IHRvIHRlbGwgdXMgaGUgd291bGRuJ3QgYmUgY29taW5nIGluKS4gSSBtZWFuIHVsdGltYXRlbHkgaGUgaGFkIHRoZSBsYXN0IGxhdWdoLCBhcyB3ZSBoYWQgdG8gc2NyYW1ibGUgdG9nZXRoZXIgYSBwb3J0aW9uIG9mIGhpcyB3b3JrIG9uIHRoZSBkYXkgb2YgdGhlIHByZXNlbnRhdGlvbiBhbmQgd2hlbiB3ZSBhY3R1YWxseSBwcmVzZW50ZWQgaXQgd2UgbG9va2VkIGEgYml0IHN0dXBpZCBiZWNhdXNlIHdlIGRpZG4ndCByZWFsbHkga25vdyB3aGF0IHdlIHdlcmUgdGFsa2luZyBhYm91dC4gV2Ugc3RpbGwgZ290IGEgZ29vZCBncmFkZSB0aG91Z2ggYW5kIHdlIHRvbGQgdGhlIGxlY3R1cmVyIGtuZXcgaGUgZGlkbid0IHR1cm4gdXAgc28gaGUgZ290IDAlIGZvciBpdC4gCkVnb25jYXN0ZWVsIHUKU3RheWluZyBtZWFzdXJlZCBpbiB5b3VyIGdvYWxzIGRvZXNuJ3QgbWVhbiB0aGF0IHlvdSBzaG91bGQgYWx3YXlzIHBsYXkgaXQgY29uc2VydmF0aXZlLCBuZXZlciBzZXR0aW5nIGhpZ2ggZ29hbHMuIApIZSAic2F0IG9uIGl0IGFjY2lkZW50YWxseSwiIGFwcGFyZW50bHkuIApIZXksIEkgYW0gbm90IGFyZ3Vpbmcgd2l0aCB5b3UsIHdhcyBqdXN0IGdpdmluZyB0aGUgcGVvcGxlIGEgcmVtaW5kZXIgb2YgdGhlIHBlcnNvbiB0aGF0IGRpZCB3aGF0IHlvdSBzYWlkIHdvdWxkIGZlZWwgYmFkLgpUaG9zZSB3aG8gYXJlIGF3YXJlIG9mIGEgc2VjdXJpdHkgaW4gb2xkIGFnZSBvciBkZWNsaW5pbmcgYWdlIHRlbmQgdG8gYmUgaGFwcGllciB0aGFuIHRob3NlIHdobyBkb24ndC4uIApTYWt1cmFpIGhpbXNlbGYgdXNlZCB0byBzYXkgdGhhdCAoSSBkb24gcmVtZW1iZXIgdGhlIGV4YWN0IHF1b3RlLCBidXQgaWYgSSByZW1lbWJlcmluZyBjb3JyZWN0bHksIGhlIHNhaWQgc29tZXRoaW5nIGxpa2U6KSBoZSBkaWRuIGxpa2UgdGhhdCBwZW9wbGUgd2VyZSB0cnlpbmcgdG8gcGxheSBoaXMgZ2FtZXMgY29tcGV0aXRpdmVseS4gQ291cGxlIHRoaXMgd2l0aCB0aGUgZmFjdCB0aGF0IE5pbnRlbmRvIGluIHByZXZpb3VzIHllYXJzIChhcyBTa3kgbWVudGlvbmVkIGluIHRoZSB0aHJlYWQpIHdhcyBhY3RpdmVseSBhZ2FpbnN0IGJyb2FkY2FzdGluZyBjb21wZXRpdGl2ZSBNZWxlZSBhbmQgZGlkIGFsbCBpdCBjb3VsZCB0byBwcmV2ZW50IGl0IGZyb20gaGFwcGVuaW5nLCBhbmQgcmVjb25zaWRlci5Zb3UgY2Fubm90IHBvc3NpYmx5IHRlbGwgbWUgVWx0aW1hdGUgd291bGQgZXhpc3QgdGhlIHdheSBpdCBkb2VzIHRvZGF5LiAKSXQgaGVscHMgc29vb28gbXVjaC4gCldoYXQgSSB3YXMgdHJ5aW5nIHRvIGdldCBhdCB3aXRoIG15IHN0YXRlbWVudCBpcyB0aGF0IHRoZSByZWFzb24gd2h5IGl0J3Mgbm90IHRha2VuIGFzIHNlcmlvdXNseSBhcyBpZiBpdCdzIGEgZmVtYWxlIGluIHRoZSBzaXR1YXRpb24gaXMgYmVjYXVzZSBvZiB0aGF0IGV4YWN0IHRob3VnaHQgcHJvY2Vzcy4gCkkgc2VlIHdoYXQgeW91IHNheWluZywgYW5kIGl0IHdvdWxkIGJlIHRydWUgaWYgeW91IGtuZXcgZm9yIHN1cmUgYm90aCBwbGF5ZXJzIHdlcmUgY2FsbGluZyB3aWRlIGFuZCB3b3VsZCBmb2xkIGEgbG90IHBvc3QgZmxvcC4gSSByZWFsbHkgd291bGRuIGV4cGVjdCBCQiBjb2xkIGNhbGxpbmcgdG8gYmUgbXVjaCB3aWRlciB0aGFuIDk5IFFRLCBBVHMgQVFzIGFuZCBLUXMgVDlzLiAKSXQgdHJ1ZSB0aGF0IHdlIGNhbiB0cmVhdCBzb21lIGNvbW11bmljYWJsZSBkaXNlYXNlcyBiZWNhdXNlIG9mIGFudGliaW90aWMgcmVzaXN0YW5jZSwgYnV0IHRoZSBtYWluIHRocmVhdHMgdGhhdCBoYXZlIHRoaXMgcmVzaXN0YW5jZSBhcmUgbW9zdGx5IG5vc29jb21pYWwsIGZlY2FsIG9yYWwsIGFuZCBzZXh1YWxseSB0cmFuc21pdHRlZCwgcmF0aGVyIHRoYW4gc29tZXRoaW5nIHRoYXQgc3ByZWFkcyBieSBzaW1wbHkgc3BlYWtpbmcgb3IgYWlyIGRyb3BwaW5nIG1lZGljYWwgc3VwcGxpZXMgKGVzcGVjaWFsbHkgdGhlIGZpcnN0IG9uZSwgYXMgbXVsdGlkcnVnIHJlc2lzdGFudCBzdHJhaW5zIGFyZSBmb2N1c2VkIGFyb3VuZCBob3NwaXRhbHMgbW9yZSB0aGFuIGFueXdoZXJlIGVsc2UpLiBBbmQgdGhlIGZpcnN0IHRoaW5nIHdlIGNvdWxkIGRvIHdhcyBnaXZpbmcgdGhlbSB2YWNjaW5lcyBmb3IgdGhlIGRpc2Vhc2VzIHRoYXQgYXJlIHN1cGVyIGVhc2lseSB0cmFuc21pdHRlZCBsaWtlIG1lYXNsZXMgYW5kIGNoaWNrZW5wb3ggKHRoZSB0aGluZ3MgdGhhdCBoYXZlIHByZXZpb3VzbHkga2lsbGVkIHVuY29udGFjdGVkIHBlb3BsZSkuLiAKSWYgdGhhdCBkb2VzbiBhZGVxdWF0ZWx5IHN1bSB0aGluZ3MgdXAsIEkgZG9uIGtub3cgd2hhdCBkb2VzLiBRdWVzdGlvbjogc2hvdWxkIEplZmYgRmluZ2VyIG5vdCBiZSB0aGUgbmFtZXNha2UgZm9yIHdoYXRldmVyIGRlZmVuc2l2ZSB1bml0IGhlIHBsYXlzIG9uPyBGaW5nZXIgcGFpcmluZyBoYXMgc3VjaCBhIG5pY2UgcmluZyB0byBpdC4gCiJUaGUgaW5uIGtlZXBlciBpcyBjdXJyZW50bHkgdG9vIGRpc3RyYWN0ZWQgYnkgcGVvcGxlIHRoYXQgaGF2ZSBzaG93ZWQgdXAuIEFzIHlvdSBsb29rLCB5b3Ugc2VlIHRoZXJlIGFyZSA3IHRhbGwgbWVuIGluIGRhcmssIHlldCBzaWxrZW4gcm9iZXMgdGhhdCBoYXZlIGEgcmVnYWwgZmVlbCB0byB0aGVtLiAKTEVTU09OIDkgRkVMTE9XIE5FV0JJRVM6IERvbid0IGp1c3Qga25vdyBvZiBmYWNldHMgb2YgdGhpbmdzIGxpa2UgMTAzMSdzLCBsZWFybiBhcyBtdWNoIGFzIHlvdSBjYW4gYWJvdXQgdGhlbSBzbyB5b3UgY2FuIGNhdGNoIHRoaW5ncyBvbiB0aGUgdXAgZnJvbnQgcmF0aGVyIHRoYW4gdGhlIGJhY2tlbmQuIFRoZSBjb250cmFjdCBJIHNpZ25lZCB3YXMgYmV0d2VlbiBtZSBhbmQgdGhlIHNlbGxlciBob3dldmVyLCB0aGUgdGl0bGUgb2YgdGhlIHByb3BlcnR5IHdhcyB1bmRlciBoaXMgYnVzaW5lc3NlcyBuYW1lLiAKTGUgbm9tYnJlIGRlIHN0YXRpb25zIHF1aSBtZXN1cmFpZW50IGwncGFpc3NldXIgZGUgbmVpZ2UgYXUgc29sIGRlcHVpcyAxOTUwIGEgZ3JhbmRlbWVudCBkaW1pbnUgY2VzIGRlcm5pcmVzIGFubmVzLiBUb3V0ZWZvaXMsIGxlcyBhbmFseXNlcyBkJ0Vudmlyb25uZW1lbnQgQ2FuYWRhLCBub3RhbW1lbnQgYmFzZXMgc3VyIGRlcyBpbWFnZXMgc2F0ZWxsaXRlcyBkZXMgYW5uZXMgNzAganVzcXUnIGF1am91cmQnaHVpLCBkbW9udHJlbnQgYXVzc2kgbGUgcmVjdWwgZGUgbGEgbmVpZ2UgYXUgcGF5cy4KVGhyZWUgeWVhcnMgbGF0ZXIsIFJpaXMgcmVwb3J0ZWQgdGhlIHN0b3J5IG9mIHRoaXMgaGlnaGx5IHN1Y2Nlc3NmdWwgInBlbm55IHN1YnNjcmlwdGlvbiIgaW4gdGhlIG1hZ2F6aW5lIFRoZSBPdXRsb29rLCB1cmdpbmcgaXRzIGR1cGxpY2F0aW9uIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAKQSByZWNlcHRpb24gd2lsbCBmb2xsb3cgYXQgdGhlIExvY2toYXJ0IFJlY2VwdGlvbiBDZW50cmUuIApJbmRpY2F0ZSBob3cgeW91IHdvdWxkIGVuam95IHRoZSBjaGFsbGVuZ2Ugb2Ygd29ya2luZyBmb3Igc3VjaCBhIGZpbmUgcmVzdGF1cmFudCBhbmQgY29udHJpYnV0aW5nIHRvIGl0cyBzdWNjZXNzLi4gClRob3NlIHJlbGF0aXZlcyBkaWVkIGZpZ2h0aW5nIGZvciBzbGF2ZXJ5LiAKVGhlIHZlcnkgYmVoYXZpb3VycyB0aGF0IG9uY2UgcGVybWVhdGVkIHRoZSBjcmFmdCAgIGdhdGVrZWVwaW5nLCBoYXppbmcgYW5kIHRoZSAicmVzcGVjdCIgY29kZSAgIGhhdmUgcmlnaHRseSBiZWVuIG91dGVkIGFuZCBjbGVhbmVkIHVwIGluIG9yZGVyIHRvIGNyZWF0ZSBhIG1vcmUgc3VwcG9ydGl2ZSBhbmQgY29sbGFib3JhdGl2ZSB3b3JrIGVudmlyb25tZW50LiBJIHRoaW5rIHRob3NlIHdobyBzdWdnZXN0IGEgcmV0dXJuIHRvIHRoZSAiZ29vZCBvbCBkYXlzIiBhbmQgd2F4IHRvbyBub3N0YWxnaWMgYWJvdXQgdGhlIEF0dGl0dWRlIEVyYSBvciB0aGUgTW9uZGF5IE5pZ2h0IFdhcnMgd2lsbCBmaW5kIGZldyBmcmllbmRzIGluIHRoZSBidXNpbmVzcyB0aGF0IG5vdyBleGlzdHMuClRoZSBpbmZvcm1hdGlvbiBvbiB0aGUgRGlhYmV0ZXMgZGlldCBzdGF0ZWQgdGhhdCBpdCBzaG91bGQgYWltIGF0IGV2ZW5seSBkaXN0cmlidXRlZCBtZWFscyB3aXRoIGluY3JlYXNlZCBpbnRha2Ugb2YgdmVnZXRhYmxlcywgcm9vdCB2ZWdldGFibGVzLCBkaWV0YXJ5IGZpYmVyLCB3aG9sZSBncmFpbiBicmVhZCBhbmQgb3RoZXIgd2hvbGUgZ3JhaW4gY2VyZWFsIHByb2R1Y3RzLCBmcnVpdHMgYW5kIGJlcnJpZXMsIGFuZCBkZWNyZWFzZWQgaW50YWtlIG9mIHRvdGFsIGZhdCB3aXRoIG1vcmUgdW5zYXR1cmF0ZWQgZmF0LiAKSXQgd291bGQgYmUgbWUgYW5kIHRoZSBiYWJ5Li4gCldoaWxlIE9ydGhpcyBpbmdyYXRpYXRlcyBoaW1zZWxmIHdpdGggdGhlIFZhIEdhIGxlYWRlciwgcHJvbWlzaW5nIHRvIG1ha2UgaGltIHBvd2VyZnVsIGFuZCBhc2tpbmcgb25seSBmb3IgTmFoIGVlIGxhaCBpbiBleGNoYW5nZSwgSnVsaWFuIHJlc2N1ZXMgdGhlIHByaW5jZXNzLiBUaGV5IHRyYXZlbCB0byBMYXl0aGUsIHdoaWNoLCBhcyB0aGUgbGFzdCBjaXR5IGZyZWUgZnJvbSBLYWxrYXIgcnVsZSwgaXMgc3ViamVjdCB0byBiZXNpZWdpbmcgZm9yY2VzLiBJbnNpZGUgdGhlIGNpdHksIE5haCBlZSBsYWgncyBmYXRoZXIgSmVtYWRhciBTYWdyb3RoJ3MgcnVsZSBpcyBjaGFsbGVuZ2VkIGJ5IGEgcG93ZXJmdWwgcml2YWwsIEphdmFkYXIgS28gdGFoLCB3aG8gaXMgcHJlcGFyZWQgdG8gc2VsbCBvdXQgaGlzIHBlb3BsZSBpbiBvcmRlciB0byBnYWluIHBvd2VyLi4gCkhlIGZvbGRlZC4gCkR5ZWQgYmxvbmQsIHRvIHNpZ25pZnkgInlvdXRoIiBhbmQgImlubm9jZW5jZS4iIGNsZWFybHkgbWFya2VkIGFzIGZlbWluaW5lLCBidXQgYWxzbyBmZW1pbml6ZWQgIG5vdCB0aGUgcHJhY3RpY2FsIGhhaXJkbyBvZiB0aGUgaGFyZHdvcmtpbmcsIGJ1dCB0aGUgc29ydCBvZiBoYWlyIHRoYXQgZ2V0cyBpbiB0aGUgd2F5LCBoYXMgdG8gYmUgdGllZCBiYWNrLCBzbG93cyBvbmUgZG93bi4uIApXaGlsZSBkb21pbmF0aW5nIGF0IE9tYWhhIHdhc24ndCBhbnl0aGluZyBuZXcgdG8gUm93c29tZSwgaXQgd2FzIGJlaW5nIHJlY29nbml6ZWQgYW1vbmcgdGhlIHRocm9uZ3Mgb2YgcHJvcyB0aGF0IHJlYWxseSBtYWRlIGhlciBzdGF0dXMgYXMgYSBwb2tlciBwbGF5ZXIgaGl0IGhvbWUuCjEwIEp1biAyMDE0ICAgMiBtaW4gICBVcGxvYWRlZCBieSBKb25ueUdhbWVzbGlrZSB5IHN1c2NyaWJldGUgc2kgdGUgZ3VzdG8gZWwgdmlkZW8gbGluayBkZSBlbCByb3V0ZXIga2V5Z2VuIGVzcGVyYSA1IHNlZ3VuZG9zIHkgZGFsZSBlbiAuIApEbyB5b3UgaGF2ZSBhbnkgcmVjb21tZW5kYXRpb25zIGZvciBwcm9ncmFtcyBvbmNlIEkgZXN0YWJsaXNoIG5ldyAxUk1zPyBNeSBnb2FsIGlzIHByaW1hcmlseSBzdHJlbmd0aCBhcyBJIHdvdWxkIGxpa2UgdG8gY29tcGV0ZSBzb29uLiBJIHdhcyB0aGlua2luZyBvbmUgb2YgQmVuIFBvbGxhY2tzIHByb2dyYW1zIG9yIHBvc3NpYmx5IG9uZSBmcm9tIEdaQ0wuIFRoYW5rcyBpbiBhZHZhbmNlIQpBbnRvbmlvIEJyb3duIChib3JuIEp1bHkgMTAsIDE5ODgpIGlzIGFuIEFtZXJpY2FuIGZvb3RiYWxsIHdpZGUgcmVjZWl2ZXIgYW5kIHJldHVybiBzcGVjaWFsaXN0IGZvciB0aGUgUGl0dHNidXJnaCBTdGVlbGVycyBvZiB0aGUgTmF0aW9uYWwgRm9vdGJhbGwgTGVhZ3VlIChORkwpLiBIZSB3YXMgZHJhZnRlZCBieSB0aGUgU3RlZWxlcnMgaW4gdGhlIHNpeHRoIHJvdW5kIG9mIHRoZSAyMDEwIE5GTCBEcmFmdC4gSGUgcGxheWVkIGNvbGxlZ2UgZm9vdGJhbGwgYXQgQ2VudHJhbCBNaWNoaWdhbiwgd2hlcmUgaGUgd2FzIG5hbWVkIGEgZmlyc3QgdGVhbSBBbGwgQW1lcmljYW4gYnkgVGhlIFNwb3J0aW5nIE5ld3MgYXMgYSBwdW50IHJldHVybmVyIGluIDIwMDggYW5kIDIwMDkuLiAKRmxvYXRpbmc6IFRoaXMgaXMgYW4gZXh0cmVtZWx5IGVmZmVjdGl2ZSBwb2tlciB0YWN0aWMgYWdhaW5zdCBwZW9wbGUgd2hpY2ggb2Z0ZW4gYyBiZXQgYW5kIGdpdmUgdXAgb24gdGhlIHR1cm4uIFdoZW5ldmVyIHlvdSBzdXNwZWN0IHNvbWVvbmUgdGhhdCBkb2VzIHRoaXMgY2FsbCB0aGVpciBiZXQgcHJlZmxvcCB3aXRoIHZpcnR1YWxseSBhbnkgaGFuZCBvbiB0aGUgYnV0dG9uLiBPbmNlIHRoZXkgbWFrZSB0aGVpciBjIGJldCBqdXN0IGNhbGwgd2l0aCB0aGUgaW50ZW50aW9uIHRvIHRha2UgdGhlIHBvdCBhd2F5IGZyb20gdGhlbSBvbiB0aGUgdHVybi4gCkF1ZXJnZXdobmxpY2hlIEJlZ2VnbnVuZ2VuIHdlcmRlbiBkYSBtZ2xpY2guIApTY2llbmNlIGhhcyBhIG5hbWUgZm9yIE1hdHQncyBwcm9ibGVtLCBvbmUgdGhhdCBzb3VuZHMgYm90aCBzdGVyaWxlIGFuZCBqdWRnbWVudGFsOiBwcmVtYXR1cmUgZWphY3VsYXRpb24uIEFzIGEgc3R1ZHkgaW4gdGhlIEFyY2hpdmVzIG9mIFNleHVhbCBCZWhhdmlvciBub3RlcywgUEUgaXMgdGhlIG1vc3QgY29tbW9uIG1hbGUgc2V4dWFsIGR5c2Z1bmN0aW9uLiBBY2NvcmRpbmcgdG8gZXN0aW1hdGVzLCBzb21ld2hlcmUgYmV0d2VlbiAyMCBwZXJjZW50IGFuZCAzMCBwZXJjZW50IG9mIG1lbiBleHBlcmllbmNlIGl0LCB3aXRoIG1hbnkgbWVuIGRvaW5nIGFsbW9zdCBhbnl0aGluZyB0byBsYXN0IGxvbmdlciBpbiB0aGUgc2Fjay4gVGhvc2Ugd2Ugc3Bva2Ugd2l0aCBzYWlkIHRoZXkndmUgZG93bmVkIGJlZXJzLCB1bmRlcmdvbmUgaHlwbm9zaXMsIGFuZCBldmVuIHRpZWQgZWxhc3RpYyBiYW5kcyBhcm91bmQgdGhlaXIgcGVuaXNlcy4KSSBoYWQgbW9icyBkaXNhcHBlYXIgd2hpbGUgSSBhdHRhY2tlZCB0aGVtLCBqdXN0IGNvbXBsZXRlbHkgcmVtb3ZlZCBmcm9tIGdhbWUuCkF1ZXJkZW0gZ2lidCBTY2htaWR0IGluIDI1IEJlaXNwaWVsaG5kZW4gRWluYmxpY2sgaW4gc2VpbiBFcmZvbGdzbW9kZWxsIHVuZCB6ZWlndCwgd2llIG1hbiBiZWltIENhc2hnYW1lIGRlciBHZWdlbndhcnQgcHJvZml0YWJlbCBhYnNjaG5laWRldC4uIApBcyBhbHJlYWR5IG1lbnRpb25lZCwgeW91ciBlbGJvd3MgYXJlIHByZXR0eSBoaWdoL2ZsYXJlZC4gCllvdXIgbG92ZSBmb3IgeW91ciBkYWQgaXMgY2xlYXIgZnJvbSB5b3VyIHBvc3RzLiBZb3VyIGtpZHMgd2lsbCBsb3ZlIGhpbS4uIApUaGUgb2ZmZXIgd2hpY2ggd2FzIDE5MS41ayB3aXRoICQ1ayBiYWNrIGluIGNsb3NpbmcgbWVldHMgMyUgYnV0IG5vdCAyJSAobGVzcyBsZW5kZXIgY3JlZGl0KS4gVGhlIGJhbGFuY2UgZHVlIGlzIGFib3V0ICQxMzAwLgpXaGVuIDE5IGlzIGRlc3Ryb3llZCwgR2VybyBzY3JhbWJsZXMgZm9yIHJlaW5mb3JjZW1lbnRzLCBiYXJlbHkgc3VjY2VlZGluZy4gQW5kIHRoZW4gdGhvc2UgcmVpbmZvcmNlbWVudHMgZW5kIGhpbSBhbmQgY29tcGxldGVseSB3cmVjayB0aGUgaGVyb2VzLiAKWWVzLCBoZXJlIGlzIGhpcyBuZXcgcmV2aWV3LCBhbmQgaXQgaXMgdmVyeSBpbnRlcmVzdGluZy4gQ2VydGFpbmx5IHRoZSBvbmx5IHJlYXNvbiBJIHdvdWxkIGV2ZXIgY29uc2lkZXIgY2VkaW5nIHRvIHRoZSBzdWIgdGhyZXNob2xkIGRvc2UuIEkganVzdCBkb24gYmVsaWV2ZSBpdCByZWxldmFudCBzZWVpbmcgYXMgbm90aGluZyBjb21lcyBvZiBhIDNnIGRvc2UgYWZ0ZXIgcmVwZWF0ZWQgc2VsZiBleHBlcmltZW50cy4gVGhlcmUgaXMgbm8gdXRpbGl0eSBhbmQgdGhlcmUgaXMgbm8gbW9vZCBlbmhhbmNpbmcgZWZmZWN0IG9yIGEgImJldHRlciBkYXkiIG9yIGJldHRlciBvdXRjb21lcyBpbiBhbnl0aGluZyB3aGF0c29ldmVyLiBJIHRyaWVkIGl0IG1hbnkgbWFueSB0aW1lcyBhbmQgSSBmaW5kIGl0IGFuIGFic29sdXRlIHdhc3RlIG9mIHRpbWUuCkhvbmVzdGx5IGJlY2F1c2UgSSdtIHN0aWxsIGluIHRoYXQgc3dlZXQgc3dlZXQgZGVwcmVzc2l2ZSBsb3csIGl0J3MgaGFyZCB0byBmZWVsIGdvb2QgYWJvdXQgbXkgYWNjb21wbGlzaG1lbnQuIApDdCBib25uZXMgYWRyZXNzZXMsIGplIG1lIHN1aXMgaW5zY3JpdGUgc3VyIE1hcHN0ciwgdW5lIGFwcGxpY2F0aW9uIGZyYW5haXNlIHBvdXIgc3RvY2tlciwgcGFydGFnZXIgc2VzIGJvbm5lcyBhZHJlc3NlcywgZW4gbGVzIHRyaWFudCBhdmVjIGRlcyBtb3RzIGNscyAgdm9sb250LiBDZWxhIG0nYSBwZXJtaXMgZGUgcmVncm91cGVyIGRpdmVyc2VzIGFkcmVzc2VzIChkc29sZSwgZXNzZW50aWVsbGVtZW50IHBhcmlzaWVubmVzLikgZXQgYmVhdWNvdXAgIGRjb3V2cmlyLiAKRGVtb2NyYWN5LCBiYWJ5Li4gCkluIHlvdXIgZXhhbXBsZSB0aGUgcG90IG9kZHMgYXJlIGNsb3NlIG9yIGJhZCwgc28gcHJvYmFibHkgYSBmb2xkIGFzIHlvdSBkZWR1Y2VkLiBUaGUgZ2VuZXJhbCBxdWVzdGlvbnMgaXMgbXVjaCBtb3JlIGludGVyZXN0aW5nLiAKQWxtb3N0IGV2ZXJ5IHBva2VyIHJvb21zIGlzIG9mZmVyaW5nIHBva2VyIGZyZWVyb2xscy4gQSBGcmVlcm9sbCBpcyBhIEZyZWUgUG9rZXIgVG91cm5hbW5ldCB3aXRoIGEgc3BvbnNvcmVkIHByaXplIHBvb2wuIApBcyBhIFZJUCwgeW91J2xsIGJlIGFibGUgYWNjZXNzIHRvIG91ciBWSVAgdGFibGVzLCBnZXQgZnJlZSBkcmlua3MsIGJlbmVmaXQgZnJvbSBpbmNyZWFzZWQgZGFpbHkgY2hpcCBib251c2VzIGFuZCBzaG93IG9mZiB5b3VyIHN0YXR1cyBhdCB0aGUgdGFibGVzLiAKVGhlIG1lc3NhZ2UgaXMgbm90IG1lYW50IGZvciBvbmUgcGVyc29uLiAKRmVkZXJhbCBhbmQgc3RhdGUgcHJvc2VjdXRvcnMsIG1lYW53aGlsZSwgaGF2ZSBnb25lIGFmdGVyIHRoZSBqb2hucyB3aG8gcG9zdCBZZWxwIHN0eWxlIHJldmlld3MgYWJvdXQgdGhlaXIgbWFzc2FnZSBwYXJsb3IgZXhwZXJpZW5jZXMgb24gb25saW5lIG1lc3NhZ2UgYm9hcmRzLgpUaGUgcG9pbnQgaXMsIEkgdGhpbmsgdGhpcyBwb3N0IChhbmQgb3RoZXJzIGxpa2UgaXQpIGNvbmZsYXRlIHRoZSByZWFsIGlzc3Vlcy4gRG8gSSB3YW50IHRvIGJlIGNoYWxsZW5nZWQgaW4gUHZQPyBTdXJlLiAKV2Fsa2VyICByZWZlcnJlZCB0byBkdXJpbmcgTmd1eWVuIHRyaWFsIGJ5IGhpcyBuaWNrbmFtZSwgcGxlYWRlZCBndWlsdHkgaW4gU2VwdGVtYmVyIDIwMTcgdG8gcmFwaW5nIG9uZSBvZiB0aGUgdGVlbnMuIApTb3VuZHMgbGlrZSBhIG1hdGNoIG1hZGUgaW4gaGVhdmVuLiAKV2UgaGF2ZSB0byBzZXQgdXAgb3VyIHdlZGRpbmcgYW5kIGdldCBhbGwgdGhlIG5lY2Vzc2FyeSBwYXBlcndvcmsgZHVyaW5nIHRoYXQgdGltZS4gSSB3YXMgdW5kZXIgdGhlIGltcGxpY2F0aW9uIHRoYXQgaWYgdGhlIHBldCBpcyBzbWFsbCBlbm91Z2ggdG8gZml0IHVuZGVyIHRoZSBzZWF0IHRoYXQgaGUgd291bGQgYmUgYWxsb3dlZCB0byBjb21lIGFib2FyZCB3aXRoIHVzLiBJIGRvdWJsZSBjaGVjayB3aXRoIHRoZSBhaXJsaW5lIGJlY2F1c2UgaWYgaGUgd291bGQgaGF2ZSB0byBnZXQgdGhyb3duIGludG8gdGhlIGNhcmdvIGFyZWEgd2Ugd2lsbCBub3QgYnJpbmcgaGltLi4gCkkgaGF2ZW4gaGFkIGEgdm9jYWwgdGVhY2hlciBidXQgSSBoYXZlIHByYWN0aWNlZCBhIHRvbiBzaW5jZSBhYm91dCB0d28gZGF5cyBhZnRlciBteSBzaGVsbCBjcmFja2VkLiAKV2hpbGUgcmVudCBpcyBjZXJ0YWlubHkgYW4gaW1wb3J0YW50IGNvbnNpZGVyYXRpb24sIG1hbnkgc3VjY2Vzc2Z1bCBtYXNzYWdlIGJ1c2luZXNzZXMgbG9jYXRlZCBpbiBkb3dudG93biBvciBjZW50cmFsIGVudGVydGFpbm1lbnQgZGlzdHJpY3RzIGRvIGVzcGVjaWFsbHkgd2VsbCBhcyB0aGV5IGdlbmVyYXRlIGEgZ29vZCBiaXQgb2Ygd2FsayB1cCB0cmFmZmljLiAKSSdtIG5vdCBhbiBhbGNvaG9saWMsIEkganVzdCBnbyB0byB0aGUgbWVldGluZ3MgZm9yIHRoZSBjb2ZmZWUuCk1ha2Ugc3VyZSB0aGF0IHlvdSBsb2NrZWQgZG93biB0aGUgZ2lybCBzY2hvb2wsIGRvY3RvcnMsIGV0YyAgIG1ha2UgaXQgY2xlYXIgdGhhdCB0aGVyZSBhIGNyYXp5IHdvbWFuIG91dCB0aGVyZSB3aG8gaGFzIGl0IG91dCBmb3IgeW91LCBhbmQgYXBwZWFycyB0byBiZSBvYnNlc3NlZCB3aXRoIHRoZXNlIGNoaWxkcmVuIHRoYXQgc2hlIG5ldmVyIG1ldC4gCkl0J3MgYSBwcmV0dHkgaW1wb3J0YW50IGFzcGVjdCBvZiBwb2tlciB0byBiZSBhYmxlIHRvIHBpY2sgdXAgcGF0dGVybnMgb2YgcGxheWVycyBhbmQgYnJlYWsgZG93biB0aGVpciBtZWFuaW5ncy4gCjgwMDAgc2NyYXAgc3RlZWwgaXMgYW4gZWFzeSBhbW91bnQgdG8gY29tZSB1cCB3aXRoLiBBIGJpdCBvZiBvcmUsIGEgYml0IG9mIGFjaWQuIGJvb20uIFdoZW4gSSBjcmFmdCBhbW1vLCBzdGVlbCBpcyB3aGF0IEkgZW5kIHVwIG5lZWRpbmcgdGhlIG1vc3Qgb2YsIGFuZCB0aGF0IGEgcmVhbGx5IHJlYWxseSBzbWFsbCBmaWd1cmUgd2hlbiBpdCBjb21lcyB0byBtZSBjcmFmdGluZyBhIGxhcmdlIGFtb3VudCBvZiBhbW1vIGZvciBtZSBhbmQgbXkgZnJpZW5kcy4KIkJyaXRpc2ggcG9rZXIgaXMgZG9pbmcgaW5jcmVkaWJseSB3ZWxsIGF0IHRoZSBtb21lbnQsIiBoZSBzYXlzLiAiT3ZlciB0aGUgbGFzdCB0d28geWVhcnMgd2UndmUgaGFkIGJyaWxsaWFudCByZXN1bHRzIGluIHRoZSBiaWdnZXN0IHRvdXJuYW1lbnRzIGluIHRoZSB3b3JsZCwgYm90aCBpbiBsaXZlIHRvdXJuYW1lbnRzIGFuZCBvbmxpbmUuIENvbnNpZGVyaW5nIG91ciBwb3B1bGF0aW9uLCBhbmQgcG9wdWxhdGlvbiBvZiBwbGF5ZXJzLCBpdCdzIHF1aXRlIGluY3JlZGlibGUgcmVhbGx5LgpUaGUgdGhpbmcgRXJpayBoYXMgZG9uZSBhbG9uZyB0aGUgd2F5IHRoYXQgSSBmaW5kIHRoZSBzaW5nbGUgbW9zdCBpbXBvcnRhbnQgdG9vbCBpbiBteSBhcnNlbmFsIGlzIGhlIGRvZXMgaGFuZCByZXZpZXdzLiBIZSB0YXVnaHQgbWUgdG8gd3JpdGUgZG93biBoYW5kcyBhcyBJIHBsYXkuIEhlJ3MgYSB0b3VnaCB0ZWFjaGVyLCBoZSBoYXMgbm8gcHJvYmxlbSB0ZWxsaW5nIG1lIEknbSBkb2luZyBzb21ldGhpbmcgd3JvbmcuIApUaGlzIHN1Z2dlc3RzIHRoYXQgYm90aCBwZXJpcGhlcmFsIG5lcnZlcyBhbmQgYmxvb2QgYm9ybmUgaW1tdW5lIHNpZ25hbGluZyBtb2xlY3VsZXMgY2FuIGNvbnRyaWJ1dGUgdG8gZ3V0IGJyYWluIGNvbW11bmljYXRpb24uMjMgQXQgdGhlIGxldmVsIG9mIHRoZSBoeXBvdGhhbGFtdXMsIHRoZSBicmFpbidzIGF1dG9ub21pYyBuZXJ2b3VzIHN5c3RlbSBjb250cm9sIGNlbnRlciwgdGhlcmUgaXMgY29uc2lkZXJhYmxlIGV2aWRlbmNlIHRoYXQgcHN5Y2hvbG9naWNhbCwgcGh5c2lvbG9naWNhbCwgYW5kIHBhdGhvbG9naWNhbCBjaGFsbGVuZ2VzIGNhbiBhY3RpdmF0ZSB0aGUgaHlwb3RoYWxhbXVzIGFuZCB0dXJuIG9uIHRoZSBib2R5J3Mgc3RyZXNzIHJlc3BvbnNlLiAKR2xpc2NvciB1CkhlIHRvb2sgaXQgYmV0dGVyIHRoYW4gSSB0aG91Z2h0IGFuZCBzZWVtZWQgdG8gbGV0IGl0IGdvLiAKT3IgZXZlbiBnbyBiYWNrIGZhcnRoZXIgYmVmb3JlIG9pbCBhbmQgdW5pb25zIHdlcmUgYXJvdW5kIHRoZXkgd2VyZSBzdGlsbCBib3VnaHQgYW5kIHBhaWQgZm9yLiBEb24gYmVsaWV2ZSBtZSBqdXN0IGxvb2sgaXQgdXAuIE9ic2VydmUgYW5kIGFuYWx5c2lzIHRoZSBuZXdzIGJhc2UgcG9saXRpY2FsIHN0YW5kaW5nLiAKUGxlbnR5IG9mIGNhc2lub3MgaGF2ZSB0aGVpciB1bmZhdm9yYWJsZSBzbG90IG1hY2hpbmVzIHBsYWNlZCBuZWFyIHRoZSBkb29yLCBuZWFyIHBva2VyIGFuZCBibGFja2phY2sgdGFibGVzIGFuZCB0aGVzZSBhcmUgbWFjaGluZXMgdGhhdCB5b3UgaGF2ZSB0byBzdGF5IGF3YXkgZnJvbS4gCkNvdW50ZXIgb2ZmZXIsIGlmIHlvdXIgY29tcGFuaW9uIHJ1bnMgbXkgZmFtaWx5IHNob3AgZm9yIHRocmVlIGRheXMsIEkgY2FuIGNvbXBlbnNhdGUgaGVyIHdpdGggdHdvIGdyYW1zIG9mIG1hcmlqdWFuYS4gSGVyIGluZmVyaW9yIHZhZ2luYSBoYXMgdHVybmVkIHlvdSBob21vc2V4dWFsLiBQZXJoYXBzIHNoZSBjYW4ganVzdCB3b3JrIHVudGlsIG5vb24gYXMgSSBoYXZlIGJ1c2luZXNzIHRvIGF0dGVuZCB0bz8gSSBjYW4gcHJvdmlkZSBmdWxseSBwcmVwYXJlZCBtYXJpanVhbmEgY2lnYXJldHRlcyBhcyBjb21wZW5zYXRpb24uIApXaXRoIEphdmVsaW4geW91IGhhdmUgdG8gb3BlbiB0aGUgbGluayBmcm9tIEphdmVsaW4gdG8gSmF2ZWxpbi4gSSBkb24gdXNlIHRoZSBmdWxsIEphdmVsaW4gYnJvd3NlciBhcyBteSBkZWZhdWx0IGZ1bGwgYnJvd3Nlci4gQnV0IG90aGVyIHRoYW4gdGhhdCwgdGhleSBib3RoIHNpbWlsYXIuLiAKV2UgY2FyZSBhYm91dCB0aGUgcGVvcGxlIHdobyBhcmUgc3RpbGwgY2FwYWJsZSBvZiByYXRpb25hbCB0aG91Z2h0LiAKVGhlIGludGVyZXN0aW5nIHRoaW5nIGFib3V0IHRoaXMgS09NIGlzIHRoYXQgdW5saWtlIGV2ZXJ5IG90aGVyIEtPTSBhbm90aGVyIGNsaW1iIGRpZCBub3QgZm9sbG93IHRoZSBzdW1taXRpbmcgb2YgdGhlIG1vdW50YWluICAgdGhhbmtmdWxseS4gVGhlIGRlY2VudCB3YXMgZXhjZWxsZW50IGFsdGhvdWdoIHZlcnkgY29udHJvbGxlZCBhcyB3ZSByZWNlaXZlZCBhbiBlc2NvcnQgZG93biB0aGUgbW91bnRhaW4gZnJvbSB0aGUgc2hlcnJpZmYuIEkgdGhpbmsgaGUgd2FzIG1vcmUgY29uY2VybmVkIGFib3V0IHVzIGV4Y2VlZGluZyB0aGUgc3BlZWQgbGltaXQgdGhhbiBlbnN1cmluZyB3ZSBzYWZlbHkgbWFkZSBpdCBkb3duLi4gCkluZm9ybWF0aW9uIG9uIGhvdyB0byB1c2UgYSBwcm94eSBjYW4gYmUgZm91bmQgb24gdGhlIHJlbGF0ZWQgbGlua3Mgb2YgdGhpcyBxdWVzdGlvbi4gVGhlIGJlc3RzaXRlIG9uIHRoYXQgbmV0d29yayBpcyBieSBmYXIgQ2FyYm9uIFBva2VyLiAKSSB3ZWxjb21lIHlvdSB0byBnaXZlIG1lIGEgY2FsbCB0byBkaXNjdXNzIHlvdXIgc3RheSBmdXJ0aGVyLiBIZWFsdGh5IHJlZ2FyZHMsIFNoYXJvbiBTdHJpY2tlcklzIHRoaXMgc29tZXRoaW5nIHlvdSBjb3VsZCBkbyBvbiB5b3VyIG93biBmb3IgYSB3ZWVrIG9yIGJldHRlciB0byBnbyB3aXRoIGEgc3BvdXNlIG9yIGZyaWVuZChzKT8gTG9va2luZyBmb3IgZml0bmVzcyBhbmQgcmVsYXhhdGlvbiBidXQgd291bGQgSSBmZWVsIHVuY29tZm9ydGFibGUgYWxvbmU/IERvIG1vc3QgY29tZSB3aXRoIHNvbWVvbmUhQXByIDIwMTcgQ2FueW9uIFJhbmNoIGhhcyBhIGxhcmdlIHBlcmNlbnRhZ2Ugb2YgZ3Vlc3RzIHRoYXQgdHJhdmVsIHNvbG8uIApUaGUgZGF0YSB0aGV5IGNvbGxlY3Qgb24gdGhlIHVzZXIgYmFzZSBzaG9wcGluZyBoYWJpdCBpcyB0aGUgcmVhbCBwcm9kdWN0IG1vc3QgbGlrZWx5LiBKdXN0IGhvdyBmYWNlYm9vayBidXNpbmVzcyBpcyBzZWxsaW5nIHRoZSBkYXRhIG9mIHlvdS4gClF1aWNrIGFzIGxpZ2h0bmluZywgdGhlIGdhbWJsZXIgZHJhd3MgaGlzIHJldm9sdmVyIGFuZCBzaG9vdHMgdGhlIGNoZWF0IGRlYWQgYmV0d2VlbiB0aGUgZXllcy4uIApDb3VsZCByZWxhdGUgdG8gbXkgbGlmZS4gVGhleSBrbmV3IGV2ZXJ5dGhpbmcsIHNhaWQgR2FycmV0dC4gCiJsaXNhYmV0aCBDYXJ0ZXJvbiBhIGRjaWQgZGUgcHJlbmRyZSBzYSByZXRyYWl0ZSBhdSBzb2xlaWwgOiBlbGxlIHF1aXR0ZSBkdSBtbWUgY291cCBsJ2Fycm9uZGlzc2VtZW50IGV0IGxhIHR0ZSBkZSBsJ2Fzc29jaWF0aW9uLgpBcyBhIHJlc3VsdCwgdGhlIHRheHBheWVyIGhpcmVkIHR3byBjYXJlZ2l2ZXJzIHRvIGNhcmUgZm9yIGhlciB5b3VuZ2VzdCBzb246IGZyb20gMjAwMyB0aHJvdWdoIDIwMDUsIHNoZSBoaXJlZCBhIGNsb3NlIGZyaWVuZCBvZiBvbmUgaGVyIG9sZGVyIHNvbnMgdG8gYmFieXNpdCBhbmQsIGluIDIwMDYgYW5kIDIwMDcsIHNoZSBoaXJlZCBoZXIgbmVwaGV3LCB3aG8gbGl2ZWQgbmVhcmJ5Li4gCllPVSBoYXZlIHRvIHNvbWVob3cgcHJvdmUgaXQgd2FzbiBTbyBpZiB5b3UgZ2V0IGFycmVzdGVkIGZvciB3ZWVkIHBvc3Nlc3Npb24gYW5kIGhhdmUgJDUwMCBvbiB5b3UsIHlvdSBjYW4ga2lzcyB0aGF0IG1vbmV5IGdvb2RieWUsIGV2ZW4gaWYgeW91IGp1c3QgYSBjdXN0b21lciBhbmQgaGF2ZSBuZXZlciBzb2xkIGRydWdzIGluIHlvdXIgbGlmZS4gCkluIG1hbmFnZW1lbnQgY29uc3VsdGluZyAod2hlcmUgYSBwYXJ0bmVyIHdvdWxkIGhhdmUgbXkgaGVhZCBhbmQgY3JpdGljaXplIG15IGxhY2sgb2YgYXR0ZW50aW9uIHRvIGRldGFpbCkuLiAKT2YgdGhlIG1haW4gZHJhd3Mgd2FzIHRoYXQgYmVjYXVzZSBpdCBpcyBpbnNpZGUgYSBjb250cm9sbGVkIGVudmlyb25tZW50LCBmYXJtaW5nIGNhbiBiZSBkb25lIGFueXdoZXJlLCBEYW5pZWxzIHNheXMuIFNpbmNlIHdlIGdvaW5nIHZlcnRpY2FsIHdpdGggdGhlIHBsYW50cywgd2UgY2FuIGdldCBtb3JlIHByb2R1Y3Rpb24gcGVyIHNxdWFyZSBmb290LiBJdCBtYWtlcyBzZW5zZSBpbiB1cmJhbiBjZW50cmVzIHdoZXJlIHRoZXJlIGlzIG5vdCBhIGxvdCBvZiBhdmFpbGFibGUgc3BhY2UuIApPdGhlciBub3RlIHdvcnRoeSB0aXRsZXMgdGhhdCB3ZSBoYXZlIGJlZW4gYXdhcmRlZCBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6IEJlc3QgY2FzaW5vIGdyb3VwaW5nOyBCZXN0IGN1c3RvbWVyIHNlcnZpY2U7IEJlc3QgZ2xvYmFsIGNhc2lubzsgQmVzdCBwbGF5ZXIgZXhwZXJpZW5jZTsgQmVzdCBVSyBjYXNpbm8gYW5kIGNhc2lubyBtYW5hZ2VyLiBUbyBiZWNvbWUgcGFydCBvZiB0aGlzIGF3YXJkIHdpbm5pbmcgZ2FtaW5nIGV4cGVyaWVuY2UsIGFsbCB5b3UgbmVlZCB0byBkbyBpcyBzaWduIHVwLiAKWW91IHNob3VsZCBhbHNvIHNpZ24gdXAgYW4gYWNjb3VudCB3aXRoIGEgcG9rZXIgc2l0ZSB0aGF0IG9mZmVycyB0aGUgdHlwZSBvZiBwb2tlciB2YXJpYW50IHlvdSB3YW50IHRvIHBsYXkgYW5kIGxldHMgeW91IHBsYXkgdGhlIGdhbWUgYXQgeW91ciBzdGFrZSBsZXZlbC4gT25lIG9mIHRoZSB3YXlzIHRvIHByb21vdGUgc2VjdXJpdHkgaXMgdmlhIHRoZSBiYW5raW5nIGNob2ljZS4gVGhlcmVmb3JlLCBhIHNhZmUgc2l0ZSBpcyB0aGUgb25lIHRoYXQgb2ZmZXJzIHBvcHVsYXIgYW5kIHdlbGwga25vd24gYmFua2luZyBvcHRpb25zIHN1Y2ggYXMgY3JlZGl0L2RlYml0IGNhcmRzLCBwcmUgcGFpZHMsIGUgd2FsbGV0cyBhbmQvb3IgYmFuayB0cmFuc2ZlciBvcHRpb25zLiAKQW5kIEkgZHJldyBteSBpZGVhLiBIZXIgY3JlYXRpdml0eSBpbnNwaXJlZCBteSBvd24uLiAKTXkgZnJpZW5kISBBIGJyYSBpcyBqdXN0IGFuIGFydGljbGUgb2YgY2xvdGhpbmcuIFRoZXJlIG5vdGhpbmcgc2hhbWVmdWwgYWJvdXQgbmVlZGluZyB0cm91c2VycyBpZiB5b3UgaGF2ZSBhIGJ1dHQuIE5lZWRpbmcvd2FudGluZyBhIGJyYSBpcyBubyBkaWZmZXJlbnQgZnJvbSBuZWVkaW5nL3dhbnRpbmcgYSBwYWlyIG9mIHRyb3VzZXJzLiBXZSBiZWxpZXZlIGluIHlvdSEKVGhlcmUgYXJlIGEgbG90IG9mIG9ubGluZSBwb2tlciBzaXRlcyB3aGljaCBhbGxvdyB5b3UgdG8gdXNlIHBsYXkgbW9uZXkgd2hlbiBlbmdhZ2luZyBpbiBhIGdhbWUgb2YgcG9rZXIuIApTb21lIGxhd3MsIHBhcnRpY3VsYXJseSByb2FkIHRyYWZmaWMgbGF3cyBkbyByZXF1aXJlIHRoZSBvZmZpY2VyIHRvIGJlIGluIHVuaWZvcm0uIApWZXNzZWwgICBNZWFudCB0byBiZSBIdWRzb24gWWFyZHMnIHB1YmxpYyBjZW50ZXJwaWVjZSwgVmVzc2VsIChpdHMgdGVtcG9yYXJ5IG5hbWUgdG8gYmUgY2hhbmdlZCBsYXRlcikgaXMgYSBzY3VscHR1cmFsIGZvbGx5IGJ5IGFjY2xhaW1lZCBCcml0aXNoIGRlc2lnbmVyIFRob21hcyBIZWF0aGVyd2ljay4gCk1hcm9vbiA1IGlzIGhlYWRsaW5pbmcgdGhpcyB5ZWFyJ3Mgc2hvdyBhbmQgd2lsbCBmZWF0dXJlIFRyYXZpcyBTY290dCBhbmQgQmlnIEJvaS4gQnV0IGhlcmUncyBhIGxvb2sgYmFjayBhdCBzb21lIG9mIHRoZSBtb3N0IG1lbW9yYWJsZSBoYWxmdGltZSBzaG93cyBpbiBTdXBlciBCb3dsIGhpc3RvcnkuCkluIGJyaWNrIGFuZCBtb3J0YXIgY2FzaW5vcywgdGhlIGF2ZXJhZ2UgcmF0ZSBvZiBwbGF5IGlzIGFyb3VuZCB0aGlydHkgaGFuZHMgcGVyIGhvdXIuIApXZSBib2FyZGVkIHRoZSBmdWxsIGZsaWdodCB3aGljaCB3YXNuIGZ1bGwuIFRoZXkgdG9sZCB1cyB3ZSB3ZXJlIHdhaXRpbmcgZm9yIDIwIG1vcmUgcGVvcGxlLiAKVHVya2lzaCB2aWxsYXMgPS89IHlvdXIgaWRlYSBvZiBBbWVyaWNhbi9XZXN0ZXJuIEV1cm9wZWFuIHZpbGxhcy4gVGhleSB3ZXJlIG9yIGJhaGVsaWV2bGVyIHRoYXQgaG91c2VkIHlvdSwgeW91ciBmYW1pbHksIHlvdXIgZ3JhbmRwYXJlbnRzLCBhbmQgbWF5YmUgYSBkYXlpL3RleXplLiAKVG9kYXksIHRoZSBCcml0aXNoIE1lZGljYWwgSm91cm5hbCBwdWJsaXNoZWQgYW4gaW50ZXJlc3RpbmcgYXJ0aWNsZSB3aGljaCBhc2tzIGlmIGdsdXRlbiBzZW5zaXRpdml0eSBpbiB0aGUgYWJzZW5jZSBvZiBjb2VsaWFjIGFjdHVhbGx5IGV4aXN0cyBbMV0uIEFiZG9taW5hbCBkaXNjb21mb3J0IGFuZCBibG9hdGluZykgaGF2ZSB3aGVhdCAoYXMgd2VsbCBhcyBvdGhlciBmb29kcyBpbmNsdWRpbmcgY293J3MgbWlsaykgcmVtb3ZlZCBmcm9tIHRoZSBkaWV0IFsyXS4gCkEgcHJvcG9zIGRlIGwgc3lsdmVzdHJlLCBvbiBsYSB0cm91dmUgZGUgZmFvbiBhYm9uZGFudGUgc3VyIGxlcyB0YWx1cywgYXV4IGFib3JkcyBkZXMgaGFpZXMsIGRhbnMgbGVzIGNoZW1pbnMsIGxlcyBwcmFpcmllcyBvbWJyYWdlcywgbGVzIGJvcmRzIGRlIHJ1aXNzZWF1eCwgbGVzIGVuZHJvaXRzIG1hcmNhZ2V1eApIZSB3YXMgYSBSb3RhcnkgQ2x1YiBNZW1iZXIgYW5kIGRvbmF0ZWQgaGlzIHRpbWUgd2hlcmV2ZXIgaXQgd2FzIG5lZWRlZC4gCkFzIG9mIDEyOjAwIE5vb24gQ2VudHJhbCBEYXlsaWdodCBUaW1lLCBGcmlkYXksIEF1Z3VzdCA1LCAyMDExLCB0aGUgcGVyZm9ybWVyIGtub3duIGFzIExhZHkgR2FnYSBpcyBhbGl2ZSBhbmQgd2VsbCwgYW5kIHB1cnN1aW5nIGhlciAiY2FyZWVyIi4gCkl0IGRpZ2VzdGlibGUgYmVjYXVzZSB0aGVyZSBhcmVuIGEgdG9uIG9mIGVwaXNvZGVzIGxpa2UgREJaIG9yIE9uZSBQaWVjZSwgYnV0IGFsc28gdGhhdCBpdCBsaXZlcyB1cCB0byBpdCBuYW1lLiBUaGVzZSBhcmUgdHJ1bHkgc29tZSBiaXphcnJlIGFkdmVudHVyZXMuIEl0IGxpa2UgSW5kaWFuYSBKb25lcyBhcmNoYWVvbG9neSBtZWV0cyBGYXN0IGFuZCBGdXJpb3VzIHJpZGljdWxvdXNuZXNzIHdpdGggYSBoZWFsdGh5IGRvc2Ugb2YgbWFjaGlzbW8uIApXaGF0IC9yL3Bvd2VybGlmdGluZyBpc24gaXMgbm90IGEgcGxhY2UgZm9yIHF1ZXN0aW9ucyB0aGF0IGNhbiBiZSBhbnN3ZXJlZCB2aWEgYSBxdWljayBnb29nbGUgc2VhcmNoLgpIaXMgZmF0aGVyLCBhbiBJdGFsaWFuIGltbWlncmFudCwgc3RhcnRlZCB0aGUgIm9sZCBjb21wYW55IiBpbiAxOTM0IHdpdGggYSBtaWxrIGJhciBpbiBMb25kb24uIEJ5IHRoZSB0aW1lIFJvY2NvIHdhcyBib3JuLCBoZSBoYWQgYSBjaGFpbiBvZiB0aGVtLCBhbmQgYXMgaGlzIHNvbiBncmV3IHVwICh0aGUgb25seSBib3kgYW1vbmcgZml2ZSBzaXN0ZXJzKSwgc28gdG9vIGRpZCB0aGUgYnVzaW5lc3MsIGludG8gYSBwb3VuZHMgMWJuIGVtcGlyZS4gCk5vdGhsaXQgIDggcG9pbnRzICBzdWJtaXR0ZWQgMjMgZGF5cyBhZ28KVGhpcyBwcm9ncmFtIGlzIGRlc2lnbmVkIHRvIGdlbmVyYXRlIGFkZGl0aW9uYWwgcmV2ZW51ZSBhdCB0cmFkZSBvciBjb25zdW1lciBzaG93IGFzIHdlbGwgYXMgYmVpbmcgb2YgYmVuZWZpdCB0byB5b3VyIGF0dGVuZGVlcy4KTkVPIGhhcyBhbHNvIHRvIGl0cyBsaXN0aW5ncyBtYW51YWwgdG8gZW5jb3VyYWdlIG5vbWluYXRpbmcgYW5kIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGNvbW1pdHRlZXMgb2YgTkVPIGxpc3RlZCBjb21wYW5pZXMgdG8gY29uc2lkZXIgdGhlIGRpdmVyc2l0eSBvZiB0aGUgYm9hcmQgY29tcG9zaXRpb24gd2hlbiBtYWtpbmcgcmVjb21tZW5kYXRpb25zIGZvciBuZXcgYm9hcmQgbWVtYmVycyBvciBleGVjdXRpdmUgb2ZmaWNlcnMuIENvbnNpZGVyYXRpb25zIGZvciBkaXZlcnNpdHkgb2YgdGhlIGJvYXJkIGluY2x1ZGVzIHdoZXRoZXIgdGFyZ2V0cyBoYXZlIGJlZW4gYWRvcHRlZCBmb3Igd29tZW4sIHZpc2libGUgbWlub3JpdGllcywgQWJvcmlnaW5hbCBwZW9wbGUgYW5kIHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcy4uIApTb21ld2hlcmUgTXIgQmVuZGVyLCBteSA2dGggZ3JhZGUgbWF0aCB0ZWFjaGVyLCBpcyBwcmV0dHkgcHN5Y2hlZCBJIHJlbWVtYmVyIHRoaXMpLi4gClRoZSBkaWZmZXJlbmNlIGJldHdlZW4gcGxheWluZyBwb2tlciBpbiB0cmFkaXRpb25hbCBicmljayBhbmQgbW9ydGFyIGNhc2lub3MgYW5kIG9ubGluZSBwb2tlciByb29tcyBpcyB0aGF0IHBsYXllcnMgZG8gbm90IHNpdCByaWdodCBhY3Jvc3MgZnJvbSBlYWNoIG90aGVyLCB0aGVyZWZvcmUgdW5hYmxlIHRvIG9ic2VydmUgdGhlaXIgb3Bwb25lbnRzIHRlbGxzIHN1Y2ggYXMgcmVhY3Rpb25zIGFuZCBib2R5IGxhbmd1YWdlLgpXZSBtaWdodCBub3Qgc2VlIGFub3RoZXIgR2lhbnRzIGhvbWUgcnVuIGZvciBhbm90aGVyIHR3byB3ZWVrcy4uIApPZGRseSBlbm91Z2ggaXQgd2Fzbid0IGZyb20gYSBsb2NhbCByZXRhaWwgc3RvcmUgbmVhcmJ5IG91ciBuZXcgaG9tZSwgYnV0IHRoaXMgcGxhY2Ugd2UgY2FtZSBhY3Jvc3Mgb24gdGhlIEludGVybmV0Li4gCihJdCBhbHNvIHdvcmtzIGxpa2UgdGhlIG90aGVyIFNvdEIgVDEgdGFsZW50cyB3aGVyZSB5b3UgY2FuIGNhbGwgdXBvbiBhIG1lbWJlciBvZiB0aGUgbWFnaWNhbCBjb21tdW5pdHkgZm9yIGEgc21hbGwgZmF2b3IuKS4gClRWIGhhcyBhbHdheXMgYmVlbiBhIGNvcm5lcnN0b25lIG9mIGFkdmVydGlzaW5nIGNhbXBhaWducyBkdWUgdG8gaXRzIHVuaXF1ZSBhYmlsaXR5IHRvIGVtcGxveSBzaWdodCwgc291bmQgYW5kIG1vdGlvbiB0byBncmFiIHZpZXdlcnMnIGF0dGVudGlvbiwgYW5kIG5vdywgd2l0aCBuZXcgZGlnaXRhbCBwcml2YWN5IHJlZ3VsYXRpb25zLCBpdCdzIGFsc28gaW1wb3J0YW50IHRvIGtub3cgdGhhdCBUViBjYW4gZW5hYmxlIHlvdSB0byBjb25uZWN0IHdpdGggaG91c2Vob2xkcyBpbiBhIG1vcmUgcHJpdmFjeSBjb21wbGlhbnQgd2F5LgpUaGUgbWFzc2FnZSBoZWxwcyB0byBzdGltdWxhdGUgYSBjaGVtaWNhbCByZXNwb25zZSBpbiB0aGUgYm9keSB0aGF0IHJlZHVjZXMgdGhlIGNoYW5jZSBmb3IgdGhlIGJvZHkgc3VzY2VwdGliaWxpdHkgdG8gY29sZHMgYW5kIHNsb3dlciByZWNvdmVyeSB0aW1lLiBPbmUgb2YgdGhlIGNydWNpYWwgd2lkZXNwcmVhZCByZWFzb25zIHRvIHNjaGVkdWxlIGEgbWFzc2FnZSBpcyB0byBhbGxldmlhdGUgdGhlIHF1YW50aXR5IG9mIHRlbnNpb24gYW5kIHN0cmVzcyB0aGF0IG9uZSBtaWdodCBmZWVsLiBQbGVhc2Ugbm90aWNlIHRoYXQgc29sZWx5IExpY2Vuc2VkIGFuZC9vciBMaWNlbnNlZCBNYXNzYWdlIFRoZXJhcGlzdHMgbmVlZHMgdG8gYmUgdHJhaW5pbmcgbWFzc2FnZS4uIApTbyBJIHBob25lZCBhIGZyaWVuZCBhbmQgYXNrZWQgaGltIHRoZSBkYXRlLCB3aGljaCB3YXMgYSBsaXR0bGUgZW1iYXJyYXNzaW5nLCBidXQgZ29vZCBmb3IgYSBsYXVnaC4gCk1hbiBhcnJlc3RlZCBhZnRlciBhYnVzZSBvZiBCcml0aXNoIHBybwpIZSBwaXRjaGVkIGhpcyBvbmx5IG5vIGhpdHRlciBmb3IgdGhlIFJlZHMgaW4gSnVuZSAxOTc4IGFnYWluc3QgU3QuIExvdWlzIGFuZCB3YXMgdHJhZGVkIGJhY2sgdG8gTmV3IFlvcmsgYWZ0ZXIgdGhlIDE5ODIgc2Vhc29uLiBCdXQgTWV0cyBnZW5lcmFsIG1hbmFnZXIgRnJhbmsgQ2FzaGVuIGJsdW5kZXJlZCBieSBsZWF2aW5nIFNlYXZlciBvZmYgaGlzIGxpc3Qgb2YgMjYgcHJvdGVjdGVkIHBsYXllcnMsIGFuZCBpbiBKYW51YXJ5IDE5ODQgU2VhdmVyIHdhcyBjbGFpbWVkIGJ5IHRoZSBDaGljYWdvIFdoaXRlIFNveCBhcyBmcmVlIGFnZW50IGNvbXBlbnNhdGlvbiBmb3IgbG9zaW5nIHBpdGNoZXIgRGVubmlzIExhbXAgdG8gVG9yb250by4KS3dhbnphYSBpcyBhIHdlZWsgbG9uZyBBZnJpY2FuIEFtZXJpY2FuIGN1bHR1cmFsIG9ic2VydmFuY2UuIEluIHdoYXQgeWVhciB3YXMgdGhlIGhvbGlkYXkgZmlyc3QgY2VsZWJyYXRlZD8KV2h5IG5vdD8gQmVjYXVzZSBFaW5hdWRpIGhhcyB3cml0dGVuIGZvdXIgYmFycyBvZiBjb252ZW50aW9uYWxseSB0b25hbCBtdXNpYywgd2hlcmVhcyB0aGUgbWluaW1hbGlzdHMgYXJlIG1vcmUgb2Z0ZW4gY2hhcmFjdGVyaXNlZCBieSB0aGVpciB1c2Ugb2YgYW1iaWd1b3VzIGhhcm1vbnkuIApBbiBpbmNlbnNlZCBXYXJuZSB1c2VkIGhpcyByb2xlIGFzIGEgQ2hhbm5lbCBOaW5lIGNvbW1lbnRhdG9yIHRvIGxhdW5jaCBhIHNwaXJpdGVkIGRlZmVuY2Ugb2YgdGhlIGZvdW5kYXRpb24gZHVyaW5nIHRoZSBsdW5jaCBicmVhayBvZiB0aGUgQWRlbGFpZGUgVGVzdCBhZ2FpbnN0IE5ldyBaZWFsYW5kIGluIE5vdmVtYmVyLiAKVGhpcyBpcyB0aGUgcGFyYWdyYXBoIHRoYXQgZW5kcyB0aGUgbG9uZyBzZWxlY3Rpb24sIGJlbG93LCB0YWtlbiBmcm9tIFRoZSBQaWN0b3JpYWwgYW5kIExpdGVyYXJ5IFNrZXRjaCBCb29rIG9mIHRoZSBCcml0aXNoIEVtcGlyZSwgKHZvbHVtZSAxLCBwdWJsaXNoZWQgYnkgQ2hhcmxlcyBLbmlnaHQsIExvbmRvbiwgMTg0OSkuIEl0IGlzIGEgZ3JlYXQgYW5kIGxvdmVseSBlbmRpbmcgYW5kIGFsc28gYSBmaW5lIGJlZ2lubmluZyB0byBkZXNjcmliaW5nIGEgY3VyaW91cyBhbmQgZW5nYWdpbmcgYXJ0aWNsZSwgIkJpc2N1aXQgQmFraW5nIE1hY2hpbmVyeSIsIGluIHRoZSBKb3VybmFsIG9mIHRoZSBGcmFua2xpbiBJbnN0aXR1dGUsIDE4MzMuIApUaGUgY29tcGFueSBzYXlzIGFib3V0IGEgcXVhcnRlciBvZiBpdHMgc3RhZmYgaXMgbm93IGZyb20gYSBtaW5vcml0eSBvciBtdWx0aWN1bHR1cmFsIGdyb3VwLi4gClRyeSB0byBpbmNsdWRlIGEgbGluayB0byBhIHNvdXJjZSBvZiBzb21lIHNvcnQgd2hlbiBwb3N0aW5nIGFuIGFuc3dlci4gRXZlcnlvbmUgZ290IGFuIG9waW5pb24sIGZhY3RzIGhlbHAuCkkgYW0gbm90IHF1aXRlIHN1cmUgaWYgSSBhbSB0aGF0IHNhbWUgcGVyc29uIHRob3VnaCBvciBpZiBLb3JlYSBpcyB0aGUgc2FtZSBjb3VudHJ5LiAKT25lIHBhZ2UgYSBkYXkuIApBY2NvcmRpbmcgdG8gTW9qYW5nIFN1cHBvcnQsIG9ubHkgcGxheWVycyB0aGF0IGhhdmUgcHVyY2hhc2VkIHRoZSBKYXZhIGVkaXRpb24gb2YgdGhlIGdhbWUgY2FuIGdldCB0aGUgV2luZG93cyAxMCBlZGl0aW9uIGZvciBmcmVlOiBNaW5lY3JhZnQ6LiAKVGhlbiwgdGhlIHNwYWNlIHRoZXkgdmFjYXRlIGNhbiBiZSBmbG9vZGVkIHdpdGggY29uc2lkZXJhdGlvbiwgc2Vuc2l0aXZpdHksIGNvbXBhc3Npb24sIGFuZCBlbXBhdGh5OyB0aGVzZSBhcmUgdGhlIHRydWUgZGV0ZXJyZW50cyB0byBhbmQgYW50aWRvdGVzIGZvciBkaXNyZXNwZWN0LiBCdXQsIHdoeSBkbyBtZW4gZGlzcmVzcGVjdCB3b21lbiBpbiByZWxhdGlvbnNoaXBzPyBJIGdhaW5lZCBhbiBhbWF6aW5nIGluc2lnaHQgYWJvdXQgc3VjY2Vzc2Z1bCB0aGUgb3RoZXIgZGF5IHdoZW4gbXkgSmFuaWUgdG9sZCBtZSBhIHdpbGQgc3RvcnkgbGFzdCB3ZWVrLiBPciB0aGF0IHdoaWNoIGFwcGVhcnMgdG8gYmUgdmFsdWFibGUgYnkgdmlydHVlIG9mIHNjYXJjaXR5LiAKSSBlYXQgcGFzdGllcyBhdCBNdWxkb29uIEkgYW0gbm90IHN1cmUgd2hlcmUgZWxzZSBwYXN0aWVzIGFyZSBzb2xkIGluIHRvd24sIGJ1dCB0aGlzIGlzIHRoZSBwbGFjZSBldmVyeW9uZSBnb2VzIHRvIGZvciBwYXN0aWVzLiBJIGFsd2F5cyBnZXQgYSB0cmFkaXRpb25hbCBiZWVmIHBhc3R5LiAKUmFtYXNzYWdlIGRlIGxhIG5laWdlIGRhbnMgY2VydGFpbmVzIHJ1ZXMgZGUgOWFycm9uZGlzc2VtZW50cyBkZSBNb250cgpJIG5ldmVyIG1ldCB0aGUgZ3V5LiBZZXQgSSBpbiBBbWVyaWNhIGJlY2F1c2UgaGUgZGlkIHdoYXQgaGUgZGlkLiAKRmluZGluZyB0aGlzIGxhcmdlIGRvdWJsZSBwYWdlIGlsbHVzdHJhdGlvbiBpbiBUaGUgSWxsdXN0cmF0ZWQgTG9uZG9uIE5ld3MxZ2F2ZSBtZSBhIHBoeXNpY2FsIHJlYWN0aW9uIGxpa2UgdGhlIG9uZSBJIGdldCB3aGVuIHRoaW5raW5nIGFib3V0IHRoZSBkaXNjYXJkZWQgRGFsdG9uIFRydW1ibydzMiBhbnRpIHdhciBub3ZlbCwgSm9obm55IEdvdCBIaXMgR3VuLiBUaGUgbm92ZWwncyBtYWluIGNoYXJhY3RlciAoSm9lIEJvbmhhbSkgaXMgdmlydHVhbGx5IGVuY2FzZWQgaW4gaGlzIG93biBtaW5kLCBoYXZpbmcgbG9zdCBoaXMgYXJtcywgbGVncyBhbmQgZmFjZSBpbiBhbiBleHBsb3Npb24gb24gYSBXV0kgYmF0dGxlZmllbGQgdGhlIHN0b3J5IGlzIHRvbGQgZnJvbSBoaXMgYmVkcmlkZGVuIHBlcnNwZWN0aXZlOyBkYXJrLCBiYW5kYWdlZCwgYWxvbmUsIGhpcyBtaW5kIGFuZCBicmFpbiBmdW5jdGlvbmluZywgYW5kIHdpdGggbGl0dGxlIG1lYW5zIG9mIGNvbW11bmljYXRpb24gb3IgY29udHJvbCBvdmVyIGhpcyBib2R5LiBbVGhlIHR3byBzZXRzIG9mIGZvdXIgaW1hZ2VzIGZvbGxvd2luZyBzaG91bGQgYmUgdmlld2VkIGFzIHR3byBwYXJ0cyBvZiBvbmUgbG9uZyBpbWFnZSwgdGhlIGJvdHRvbSBwYXJ0IGJlaW5nIG9uIHRoZSByaWdodC5dClRoZSBhZGRpdGlvbmFsIHByZW1pdW0gaXMgYW4gb25jb3N0IGJvcm5lIGJ5IHRoZSBzdGFmZiBtZW1iZXIncyBmYWN1bHR5LCBzY2hvb2wgb3IgdGhlIHN0YWZmIG1lbWJlci4gClBlcmhhcHMgaGUgZG9lcyBub3QgbGl2ZSBhbG9uZSBhbmQgaGFzIGEgbG90IG9mIGZhbWlseSBhcm91bmQgaGlzIGhvbWUsIGFuZCBoZSBkb2VzbiB3YW50IHRvIGhhdmUgdG8gZ28gdGhyb3VnaCB0aGUgInRoaXMgaXMgbXkgbWFzc2V1c2UiIGNoYXJhZGUgaW4gZnJvbnQgb2YgaGlzIGdyYW5ka2lkcywgd2hlbiBoZSBjb3VsZCBqdXN0IGRpc2NyZWV0bHkgbGVhdmUgZm9yIGFuIGhvdXIgYW5kIGNvbWUgYmFjayBubyBxdWVzdGlvbnMgYXNrZWQuIApKU1lLIG15IGdpcmxmcmllbmQgaGFkIGEgZmV3IGlzc3VlcyB3aXRoIENvcm5lcnN0b25lLiBTaGUgc2lnbmVkIGEgbGVhc2UgZm9yIGEgJDY1MCBhIG1vbnRoIGZvciBhIHN0dWRpby4gMyBkYXlzIGJlZm9yZSB0aGUgcGVyc29uIGluIGhlciBwbGFjZSBtb3ZlZCBvdXQgKHNvIDMzIGRheXMgYmVmb3JlIHNoZSB3YXMgbW92aW5nIGluKSB0aGUgcGVyc29uIGRlY2lkZWQgdG8gc3RheSBhbmQgY2FsbGVkIGhlciBhbmQgdG9sZCBoZXIgdGhlIHN0dWRpbyB3YXMgbm8gbG9uZ2VyIGF2YWlsYWJsZSBhbmQgc2hlJ2QgaGF2ZSB0byB0YWtlIG9uZSB0aGF0IHdhcyAkNzIwIGEgbW9udGguLiAKU291dGhlcm4gRG93bnMgTWF5b3IgVHJhY3kgRG9iaWUgc2FpZCB0aGUgJDEzNG0gbG9zdCBvbiBwb2tpZXMgaW4gMTIgeWVhcnMgd2FzICJzdGFnZ2VyaW5nIi4KRXZhbiBkZWFscyB0aGUgZmxvcCwgYW5kIGl0IGNvbWVzIHVwIHNldmVuIG9mIGNsdWJzLCBhY2Ugb2Ygc3BhZGVzIGFuZCBqYWNrIG9mIGRpYW1vbmRzLiBJIGJlbGlldmUgdGhlIHBocmFzZSwgIldob29wLCB0aGVyZSBpdCBpcywiIGlzIHJlc2VydmVkIGZvciB0aGVzZSBzaXR1YXRpb25zLiBUaGUgcmVzdCBvZiB0aGUgaGFuZCB3aWxsIGJlIGFuIGV4ZXJjaXNlIGluIHBhdGllbmNlOiBJIGhhdmUgdG8gYmFpdCBKYW1lcyBhbmQgRXZhbiB3aXRob3V0IGxldHRpbmcgdGhlbSBrbm93IEknbSBiYWl0aW5nIHRoZW0uLiAKVGhlIHByb2JsZW0gaXMgdGhhdCB0aGUgdmFzdCBtYWpvcml0eSBvZiBnb29kIENoaW5lc2Ugc3R1ZGVudHMganVzdCBzdGF5IGluIENoaW5hIGFuZCB3cml0ZSB0aGUgR29ha2FvLiBUaGUgb25lcyBiZWluZyBzZW50IHRvIHN0dWR5IGluIENhbmFkaWFuIHNjaG9vbHMgYXJlIHRoZSBob3JyaWJsZSBzdHVkZW50cyB0aGF0IHRoZSBwYXJlbnRzIGhhdmUgYm9yZGVybGluZSBnaXZlbiB1cCBvbiB3aG8gd291bGQgZmxhdCBvdXQgYm9tYiB0aGUgZ2Fva2FvLgpIb3dldmVyLCB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIHRoZSBwYXRpZW50cyB3aG9zZSBIYkExYyBpbmNyZWFzZWQgd2VyZSBkaWZmZXJlbnQgZnJvbSB0aG9zZSB3aG9zZSBIYkExYyBkZWNyZWFzZWQuIApQbGVhc2Ugc2VlIG91ciBsaXN0aW5ncyBvZiB3aG8ncyB3aG8gYW5kIGNvbnRhY3QgdGhlIHByYWN0aXRpb25lciBkaXJlY3RseSwgZWl0aGVyIGJ5IHBob25lIG9yIHZpYSB0aGVpciB3ZWJzaXRlLCBhcyB0aGV5IGVhY2ggdGFrZSB0aGVpciBvd24gYm9va2luZ3MuCk1hbnkgd29ya2VycyBoYXZlIGdvbmUgdG8gc29jaWFsIG1lZGlhIHdpdGggc3RvcmllcyBvZiB0aGUgZmluYW5jaWFsIGhhcmRzaGlwIHRoZXkgZXhwZWN0IHRvIGZhY2UgYmVjYXVzZSBvZiB0aGUgc2h1dGRvd24uLiAKVGhleSBkb24gbmVlZCB0aGUgY2FzaCBmbG93IGFuZCB0aGV5IHdhbnQgbG93ZXIgdGF4ZXMuIApZb3UnbGwgbm90aWNlIHRoZXJlJ3MgYSBnZW5lcmFsIHRlbmQgaGVyZSBmb3IgJ25vcm1hbCcgdmFsdWVzIHRvIHJpc2UgYXMgcGVvcGxlIGFnZS4KSXRzIHRoZSBQcmVzaWRlbnQgdGhpbmcsIGFuZCBjb21lcyBmcm9tIHRoZSBmYWN0IHRoZSBTZWNyZXQgU2VydmljZSBiZWNhbWUgc28gYW5hbCBhZnRlciBKRktzIGFzc2Fzc2luYXRpb24gaXQgYmFzaWNhbGx5IHJlcXVpcmVkIHRoZW0gdG8gZHJpdmUgdGhlIFByZXNpZGVudCBhbmQgZm9ybWVyIFByZXNpZGVudHMgYXQgYWxsIHRpbWVzLgpNYWtlcnMgZXllIGRhdGEgZnJhbWV3b3JrcyBhbWlkIFNpZGV3YWxrIExhYnMnIFF1YXlzaWRlIHByb2plY3QKQXRoZWlzdCBoYXBweSIgdHlwZSBvZiB3YXksIGJ1dCBpbiB0aGUgd2F5IHRoYXQgdGhlIG1lbWJlcnMgb2YgdGhlIGNodXJjaCBhcmUgZGVjaWRpbmcgd2hhdCB0aGV5IHdhbnQgdGhhdCBjaHVyY2ggdG8gYmUuIApJY2ggYmV6aWVoIG1pY2ggZGFiZWkgZXhwbGl6aXQgYXVmIEZpcm1lbi4gCldoaWxlIHRoZSBzaXRlIG1heSBiZSBhIGxpdHRsZSBiaWFzZWQgYmVpbmcgYXMgdGhleSBzZWxsIG5pY290aW5lIHByb2R1Y3RzLCB0aGlzIGFydGljbGUgaXMgcHJldHR5IGdvb2QuIEkgZG9uJ3QgbmVjZXNzYXJpbHkgdGhpbmsga2lkcyBzaG91bGQgYmUgdmFwaW5nIGJ1dCBpdCdzIGJldHRlciB0aGFuIHRoZSBhbHRlcm5hdGl2ZS4gSSdtIGEgdmFwZSBlbnRodXNpYXN0IG15c2VsZiBhbmQgSSdtIHByZXR0eSBoYXBweSB0aGF0IGl0J3MgaGVscGVkIG1lIHF1aXQgc21va2luZywgSSdtIGRvd24gdG8gM21nIGFuZCBoYXZlbid0IGZlbHQgdGhpcyBnb29kIGluIGEgbG9uZyB0aW1lLiAKTmV2ZXIgYWxsb3cgdGhlIGhhdHJlZCBvZiBwZW9wbGUgdG8gcHJldmVudCB5b3UgZnJvbSBiZWluZyBqdXN0LiBCZSBqdXN0LCBmb3IgdGhpcyBpcyBjbG9zZXN0IHRvIHJpZ2h0ZW91c25lc3MgKFF1cmFuIDU6OCkuLiAKSG93IGFib3V0IGEgR2VybWFuIHJlc3RhdXJhbnQgZm9yIGdvZHMgc2FrZS4gSG93IGFib3V0IGEgY2hpbGkgcGFybG9yLiAKTW9zdCBvZiB0aGVzZSByZWNvbW1lbmQgYSBzdHJhdGVneSB0aGF0IGludm9sdmVzIHBsYXlpbmcgcmVsYXRpdmVseSBmZXcgaGFuZHMgYnV0IGJldHRpbmcgYW5kIHJhaXNpbmcgb2Z0ZW4gd2l0aCB0aGUgaGFuZHMgb25lIHBsYXlzLiAKV2hpY2hldmVyIHNoZSB3b3VsZCBoYXZlIGNob3Nlbiwgc2hlIHdvdWxkIGhhdmUgYmVlbiBhbiBhc3NldHMgdG8gdGhlIHByb2Zlc3Npb24uLiAKIFNkdWlyZSwgYWltZXIsIHRyZSBhaW0oZSksIGF2b2lyIGRlcyBlbmZhbnRzIHF1YW5kIG9uIGVzdCBncm9zKHNlKSA6IG9uIGVuIGEgcGFybCBhdXggUmVuY29udHJlcyBkdSBHUk9TWSBhIHQgaWwgdW4gZ2UgbGltaXRlIHBvdXIgZnRlciB2cmFpbWVudCBzb24gYW5uaXZlcnNhaXJlID8gSmUgbmUgY3JvaXMgcGFzLCBjaGFjdW4oZSkgZmFpdCBjb21tZSBpbChlbGxlKSB2ZXV0LiBQb3VyIG1hIHBhcnQsIGMnZXN0IHRvdWpvdXJzIHVuZSBib25uZSBvY2Nhc2lvbiBkZSBmZXN0b3llciBhdmVjIGdvdXJtYW5kaXNlLiBFdCBjZXR0ZSBhbm5lLCBqJ2FpIGV1IGVudmllIGRlIHByb2ZpdGVyIGRlIGNldHRlIGpvdXJuZSBwb3VyIHBhc3NlciB1biBtb21lbnQgdHJhbnF1aWxsZSBldCBhZ3JhYmxlLgpPdGhlciBCb3N0b24gbW9iaWxlIGNvbXBhbmllcywgc3VjaCBhcyB0aGUgUGF5UGFsIE1lZGlhIE5ldHdvcmsgYW5kIEp1bXB0YXAgYWxzbyBwcm92aWRlIHNlcnZpY2VzIHRvIHVuZGVyc3RhbmQgbW9iaWxlIHVzZXIgYmVoYXZpb3IgYW5kIHNlcnZlIHVwIGFkdmVydGlzZW1lbnRzIHRoYXQgd2lsbCBiZSBlbnRpY2luZyBlbm91Z2ggdG8gZGlyZWN0IG15IGZlZXQgKGFuZCB3YWxsZXQpIGludG8gbmVpZ2hib3Job29kIG1lcmNoYW50cy4gQW5kIGdpdmVuIHRoYXQgSSwgbGlrZSBtb3N0IHBlb3BsZSwgZG8gbm90IHdhbnQgYW55IGNvbXBhbnkgdHJhY2tpbmcgbXkgbW9iaWxlIHRyYXZlbHMgKG9yIHJldmVhbGluZyBteSBmcmVxdWVudCB0cmlwcyB0byBKUCBMaWNrcyksIHRoZXJlIGFyZSBwcml2YWN5IHByYWN0aWNlcyBpbiBwbGFjZSB0aGF0IGNvbXBhbmllcyBhZGhlcmUgdG8uIE15IGlkZW50aXR5IGlzIHN0aWxsIHNlY3JldCBpbiB0aGUgZW5kIS4gCkZvciBvdXIgc2hvd2VyLCBodWJieSBpcyBnb2luZyB0byBjcmVhdGUgYSBtYW4gY2F2ZSBmb3IgdGhlIGd1eXMgaW4gdGhlIGdhcmFnZSBzbyB0aGV5IGNhbiBoYXZlIHRoZWlyIG1hbiB0aW1lIGJ1dCBzdGlsbCBiZSBhcm91bmQgdG8gZW5qb3kgaW4gZm9vZCwgY29tcGFueSBhbmQgc29jaWFsaXplLi4gCjIwMTQgaGFzLCB0byBkYXRlLCBiZWVuIGFuIGV4dHJlbWVseSBnb29kIHllYXIgZm9yIEplZmYgTWFkc2VuIChHUEkzOSkgb24gdGhlIGxpdmUgdG91cm5hbWVudCBjaXJjdWl0LiAKUmFpZCA1IGlzbid0IGdvaW5nIHRvIGJlIG5lY2Vzc2FyeSBpbiB5b3VyIGNhc2Ugc2luY2UgcmFpZCA1IGlzIHJlYWxseSBvbmx5IGZvciBsYXJnZSBhbW91bnRzIG9mIGRhdGEgbmVlZCB0byBiYWNrZWQgdXAsIGJ1dCBpZiB5b3VyIGdvaW5nIHRvIGJ1eSBtb3JlIHRoYW4gMiBkcml2ZXMgb2YgdGhlIHNhbWUgc2l6ZSB5b3UgY2FuIHJ1biBpdCBpbiByYWlkLgpBbHNvIEkgd291bGQgcmVjb21tZW5kIGpvaW5pbmcgYSBicm9rZXIgc2hvcCBhbmQgbGVhcm4gdGhlIHJvcGVzIHRoZW4gdmVudHVyZSBvdXQgb24geW91ciBvd24gaWYgeW91IHJlYWxseSByb2NrIGl0Li4gCkkgdHlwaWNhbGx5IGF2b2lkIHRoZSBwcm9tb3MgZm9yIGZ1dHVyZSBlcGlzb2RlcyBiZWNhdXNlIHRoZXkgZ2l2ZSB0b28gbXVjaCBhd2F5LiAKV2hlbiB5b3UgYXJlIHN1cnJvdW5kZWQgd2l0aCBhIGxhcmdlIG51bWJlciBvZiBwZW9wbGUgc3RhcmluZyBibGFua2x5LCB5b3Ugc29tZXRpbWVzIHdvbmRlciB3aGV0aGVyIHRoZXkgYXJlIGFsaXZlIG9yIG5vdC4gVGhvc2Ugd2l0aCBib29rcyBob3dldmVyLCB5b3UgZmVlbCBkcmF3biB0bywgYW5kIHdvbmRlciB3aGF0IG9uIGVhcnRoIHRoZXkgYXJlIHJlYWRpbmcgdGhhdCBpcyBzbyBpbnRlcmVzdGluZyEgWW91J2xsIGZpbmQgeW91cnNlbGYgaHVudGluZyBkb3duIGEgbnVtYmVyIG9mIGJvb2tzLCBqdXN0IGJlY2F1c2UgdGhlIGZyb250IGNvdmVyIG9mIHRoZSBib29rIG9mIHRoZSB3b21hbiBvcHBvc2l0ZSB5b3Ugb24gdGhlIHR1YmUgbG9va3Mgc28gaW50ZXJlc3RpbmchUmVhZGluZyBkcmF3cyB5b3UgaW50byBhbm90aGVyIHdvcmxkLCBhbmQgaXQgY2FuIHJlbW92ZSB5b3UgZnJvbSBhbnkgdW5wbGVhc2FudCBjb25kaXRpb25zLiAKVGhlc2UgcGF0dGVybnMgaGF2ZSBwb3NpdGl2ZXMgYW5kIG5lZ2F0aXZlcyBhbmQgYmVpbmcgYWJsZSB0byByZWNvZ25pemUgdGhlbSBnaXZlcyB5b3UgaW5mb3JtYXRpb24gd2l0aG91dCBoYXZpbmcgdG8gYWN0dWFsbHkgY2FsY3VsYXRlIGl0IGV2ZXJ5IHRpbWUuIApJZSBpdCBpcyBhIHllYXIgbWFyayBub3QgYSB0ZXJtIG1hcmsgYXMgaXMgdGhlIGNhc2Ugd2l0aCB0ZXJtcyAxIDMuIApJdCB3b3VsZCBtYWtlIHRoaXMgYmxvZyBzbyBtdWNoIG1vcmUgaW50ZXJlc3RpbmcuIApJbWl0cmV4IGlzIGFub3RoZXIgb2YgdGhlIG9uZXMgdGhhdCBpcyBzdXBwb3NlZCB0byBoZWxwIGFuZCBzaGUgZ290IGEgc2V2ZXJlIHJlYWN0aW9uKHBhcnRpYWwgdGVtcG9yYXJ5IHN3ZWxsaW5nIGFuZCBzdGlmZm5lc3MgdG8gbmVjaywgcGFuaWMpIGZyb20gaXQgYW5kIGl0IGRpZG4gaGVscCB0aGUgbWlncmFpbmVzLiBMeXJpY2EgaGVscGVkIHRoZSBtaWdyYWluZXMgYnV0IGNhdXNlZCBzd2VsbGluZyByZWRuZXNzIGFuZCBidXJuaW5nIHRvIGhlciBoYW5kcy9hcm1zLiAKQnVkIGlzIGEgcmlzaW5nIHN0YXIgYnV0LCBsaWtlIE1pa2V5LCBpcyBzdGlsbCB3aXRob3V0IGEgc2luZ2xlIGZpZ2h0IGF0IFdXOyB0aG91Z2ggd2UnbGwga25vdyBzb29uIHdoYXQgZGlyZWN0aW9uIGhpcyBjYXJlZXIgaXMgZ29pbmcgaW4gYWZ0ZXIgaGUgZmFjZXMgb2ZmIGFnYWluc3QgaGVhZCBidXR0ZXIgZXh0cmFvcmRpbmFpcmUsIEplZmYgSG9ybi4uIApUaGUganVkZ2UgaW4gdGhlIGZpdmUgZGF5IGNhc2UsIEp1ZGdlIFNpbW9uIFdpbGtpbnNvbiwgc2FpZDogIkkgZG8gbm90IGNvbnNpZGVyIHRoaXMgdG8gYmUgYSBjYXNlIHdoZXJlIGFueSBzZW50ZW5jZSBvZiBpbXByaXNvbm1lbnQgaXMgYXBwcm9wcmlhdGUuIiBIZSBzYWlkOiAiSGFkIHRoZXJlIGJlZW4gYSB2ZXJkaWN0IG9mIG5vdCBndWlsdHksIHRoaXMsIG9mIGNvdXJzZSwgY291bGQgcmVhbGx5IGhhdmUgY2F1c2VkIGVub3Jtb3VzIHByb2JsZW1zIGZvciB0aGUgZ2FtaW5nIGxhdyBiZWNhdXNlIHlvdSB0aGVuIGhhdmUgYSBncmVlbiBsaWdodCBpbiBzb21lIHBlb3BsZSdzIGV5ZXMgdG8gdW5yZWd1bGF0ZWQgcG9rZXIuIgpLYXp1bWFyYSAgMSBwb2ludCAgc3VibWl0dGVkIDIyIGhvdXJzIGFnbwpGb3IgZXhhbXBsZSwgTmlveGluIHRoZXJhcHkgcmV2aXRhbGl6ZXMgaGFpciBmb2xsaWNsZXMgYW5kIHByb21vdGVzIGdyb3d0aCwgTW9yb2NjYW4gb2lsIHRyZWF0bWVudCBzdHJlbmd0aGVucyBoYWlyIGFuZCByZXN0b3JlcyBzaGluZSwgYW5kIHRoZXJlIGFyZSBhbHNvIHRyZWF0bWVudHMgZm9yIGRyeSBzY2FscCBbc291cmNlOiBSb29rc10uIApJIERvbiBHaXZlIEEgRnVjayBBYm91dCBNeSBKb2IgY291bGQgcG90ZW50aWFsbHkgYWJ1c2UgaGlzIG5ldyBmb3VuZCBwb3dlci4gCkhvdyBtdWNoIGludGVyYWN0aW9uIG9jY3VyZWQgd2hlbiB0aGUgbGljaCBjYW1lIG9udG8gdGhlIGZpZWxkIHRvIHNhdmUgdGhlIGRheT8gSWYgdGhlIGxpY2gganVzdCBhcHBlYXJlZCB0byBraWxsIG9mZiB0aGUgTmlnaHQgVHdpc3RzIGFuZCBsZWZ0IHdpdGhvdXQgc2F5aW5nIGEgd29yZCwgeW91IGNvdWxkIGp1c3QgcGxheSBpdCBvZmYgYXMgYSBzcGVsbGNhc3RlciBvdXQgZ2F0aGVyaW5nIG1hdGVyaWFsIGNvbXBvbmVudHMgaGUgbmVlZGVkIGZvciBoaXMgcmVzZWFyY2ggKE5pZ2h0IFR3aXN0IEVzc2VuY2UvU291bHM/KS4gCk1heWJlIHNoZSB3YXMgY2FsbGluZyB0aGUgbWFya2V0IHRvIGZpbmQgb3V0IGlmIGl0IHdhcyBhIGdvb2QgdGltZSB0byBzZWxsIGEgY293IG9yIHNvbWUgbWlsay4gTm93IHdpdGggdG91Y2ggcGhvbmVzLCBwZW9wbGUgaW4gdmVyeSBpc29sYXRlZCBwbGFjZXMgY2FuIGRvIGJhbmtpbmcgb3IgZ2V0IG5ld3Mgd2l0aCBhcHBzLiBXaGVuIEkgd2FzIGEgc21hbGwgY2hpbGQgbXkgcGFyZW50cyBoYWQgYSBwaG9uZSwgYnV0IGl0IHdhcyBhIGxhcmdlIGJveCBvbiB0aGUgd2FsbCBhbmQgaGFkIGEgY3JhbmsgdGhhdCB0aGV5IHR1cm5lZCB3aGVuIHRoZXkgd2FudGVkIHRvIG1ha2UgYSBjYWxsLi4gCkJlaW5nIG1hcnJpZWQgb2Z0ZW4gYm9vc3RzIGhhcHBpbmVzcywgYXMgZG9lcyBhIGdlbmV0aWMgYmFzaXMgZm9yIGEgc3VubmllciBkaXNwb3NpdGlvbi4gClN0cmFuZ2UgdGVybXM/IEkgaW52aXRlIHlvdSB0byBsZWFybiB0aGVtIHdpdGggZWFybmVzdHkuIApWaXNpdG9ycyB3aWxsIGFsc28gbm90aWNlIG5ldywgcmVkIGF3bmluZ3Mgb3V0c2lkZSB0aGUgY2FzaW5vLCByZXBsYWNpbmcgYmxhY2sgb25lcywgYW5kIGNhc2lubyBzdGFmZiB3ZWFyaW5nIHJlZCBUIHNoaXJ0cyBmb3IgdGhlIGZpcnN0IG1vbnRoLiBUaGUgc2hpcnRzIGhhdmUgc2F5aW5ncyBvbiB0aGUgYmFjayBsaWtlLCBpdCB1cCB0b25pZ2h0LCB3ZSBhbGwgZ29pbmcgdG8gYmUgZWF0aW5nIHRhcGlvY2EgaW4gQm9jYSBSYXRvbiBzb21lZGF5LiBTYXlpbmdzIGxpa2UgdGhhdCBhcmUgcGFydCBvZiB0aGUgaW1hZ2UgdGhlIG5hbWUgdHJhbnNmb3JtYXRpb24gdGhlIGNvbXBhbnkgaXMgdHJ5aW5nIHRvIHByb2plY3QuLiAKSW4gYmxhY2tqYWNrLCBob3dldmVyLCB0aGVyZSBhcmUgbm8gY2FyZCBjb21iaW5hdGlvbnMgdG8gbWVtb3JpemUuIApUaGUgT1Agc2FpZCB0aGUgaGFuZCB0aGUgb3RoZXIgbmlnaHQgd2hpY2ggSSBhc3N1bWUgbWVhbnMgaXQgd2FzIGxpdmUgYXQgYSBjYXNpbm8uIApMZWFybiBUbyBQbGF5IExpa2UgQSBQcm9mZXNzaW9uYWwKWW91ciBub3QgaGVscGluZy4gVGVsbGluZyBsb3cgZWxvIHBsYXllcnMgdG8gIndyZWNrIHRoZWlyIGxhbmUgdG8gaW5zcGlyZSB0aGVpciByYW5kb21seSBzZWxlY3RlZCB0ZWFtbWF0ZXMgdG8gbGlzdGVuIHRvIHRoZW0uIFRoZW4gc2VjdXJlIHRoZSBCYXJvbiBwaXQgc28geW91IGNhbiB0YWtlIGl0IGF0IHRoZSBwZXJmZWN0IHRpbWUgZ2l2ZW4gdGhlIGVuZW15IHRlYW0gY29tcCB3aGlsZSBwdXNoaW5nIHRvd2VycyBpbiBiZXR3ZWVuISBFdGMuIgpJIGhvcGUgeW91IGZpbmQgdGhlIG1vdGl2YXRpb24geW91IG5lZWQgdG8gc3RhcnQgdGFraW5nIHRoZSBzdGVwcyBuZWNlc3NhcnkgdG8gd29yayBvdXQgb2YgeW91ciBkZXByZXNzaW9uLiAKTWFycmlhZ2UuIApUaGUgYnJlYWtmYXN0IGJ1ZmZldCBydW5zIGV2ZXJ5IG1vcm5pbmcgYnV0IFN1bmRheSwgYW5kIEZyaWRheSBpcyB0aGUgYWxsIHlvdSBjYW4gZWF0IGRpbm5lciBidWZmZXQuIFBsYXkgbGltaXQgYW5kIG5vIGxpbWl0IFRleGFzIGhvbGQgJ2VtIGFuZCB0d28gdHlwZXMgb2YgT21haGEuIApBIDMwIHllYXIgcHJhY3RpdGlvbmVyIG9mIHlvZ2EgYW5kIGEgdHJhaW5lZCBjaGlyb3ByYWN0b3Igd2l0aCBhIGxvbmcgc3RhbmRpbmcgZm9jdXMgaW5iaW9tZWNoYW5pY3Mgb2YgdGhlIHNwaW5lLCBJIGNhbiBob25lc3RseSBzYXkgdGhhdCBhIDE1IG1pbnV0ZSBmb3VuZGF0aW9uIHRyYWluaW5nIGV4ZXJjaXNlIHByb2dyYW0gd2lsbCBhY3RpdmF0ZSBhbmQgc3RyZW5ndGhlbiBtdXNjbGVzIGxlZnQgY29tcGxldGVseSB1bnRvdWNoZWQgaW4gYSA5MCAgbWludXRlIHlvZ2Egd29ya291dC4gQXJlIGEgZmV3IHF1b3RlcyBmcm9tIERyLiBHb29kbWFuIGhpbXNlbGYsIHRoZSBmaXJzdCBvbmUgcmVnYXJkaW5nIHRoZSBvbmUgb2YgdGhlIHByaW1hcnkgZXhlcmNpc2VzIGZlYXR1cmVkIGluIHRoaXMgdHJhaW5pbmcgc3lzdGVtOi4gClRoZSByZWFzb24gSSBzdWdnZXN0aW5nIHRvIGdvIERlbHBob2kgb3ZlciBMaXNhIGlzIGZvciBhIGNvdXBsZSBvZiByZWFzb25zLiBEZWxwaG9pIGJhc2Ugc3RhdHMgbWFrZSBpdCBzaWduaWZpY2FudGx5IGVhc2llciB0byBnZXQgaGVyIGZyb250IGxpbmluZyBmb3Igc3RhcnRlcnMsIGFuZCBzaGUgcHJvdmlkZXMgYW4gZXh0cmEgaGVhbCB3aGljaCBpcyBhbHdheXMgbmljZS4gQmV0d2VlbiBoZXIgYW5kIENvbGxlZW4geW91IHNob3VsZCBiZSBzb3J0ZWQgZm9yIGhlYWxpbmcsIGlmIGl0IHN0YXJ0cyBnb2luZyB3cm9uZyB5b3UgY291bGQgbWF4IHRoYXQgTWloeWFuZyBhbmQgc3ViIG91dCBhIGRhbWFnZSBkZWFsZXIgZm9yIGhlci4uIApPbmUgb2YgdGhlIG1vc3QgaW50ZXJlc3RpbmcgdGhpbmdzIGFib3V0IHBsYXlpbmcgcG9rZXIgd2FzIGxlYXJuaW5nIHRoZSBkaXNjaXBsaW5lIG9mIG5vdCBjb25mdXNpbmcgdGhlIHJpZ2h0IGRlY2lzaW9uIHdpdGggdGhlIGluZGl2aWR1YWwgb3V0Y29tZSBvZiBhbnkgc2luZ2xlIGhhbmQsIGJ1dCB0aGF0J3Mgd2hhdCBhIGxvdCBvZiBwb2tlciBwbGF5ZXJzIGRvLiBJZiB0aGV5IHdpbiBhIGhhbmQsIHRoZXkgYXNzdW1lIHRoZXkgbWFkZSB0aGUgcmlnaHQgYmV0LCBhbmQgaWYgdGhleSBsb3NlIGEgaGFuZCwgdGhleSBvZnRlbiBhc3N1bWUgdGhleSBtYWRlIHRoZSB3cm9uZyBiZXQuIFdpdGggdGhlIGNvaW4gdGhhdCBsYW5kcyBvbiBoZWFkcyBhIHRoaXJkIG9mIHRoZSB0aW1lLCB0aGlzIHdvdWxkIGJlIGxpa2Ugc2VlaW5nIHRoZSBjb2luIGxhbmQgb24gaGVhZHMgb25jZSAodGhlIGluZGl2aWR1YWwgb3V0Y29tZSkgYW5kIGNoYW5naW5nIHlvdXIgYmVoYXZpb3Igc28geW91IGJldCBvbiBoZWFkcywgd2hlbiB0aGUgbWF0aGVtYXRpY2FsbHkgY29ycmVjdCB0aGluZyB0byBkbyBpcyB0byBhbHdheXMgYmV0IG9uIHRhaWxzIG5vIG1hdHRlciB3aGF0IGhhcHBlbmVkIGluIHRoZSBwcmV2aW91cyBjb2luIGZsaXAgKHRoZSByaWdodCBkZWNpc2lvbikuLiAKRm9yIGV4YW1wbGUsIGEgZmFpcmx5IG5ldXRyYWwgY29sb3VyIGlzIGEgZ29vZCBjaG9pY2UgZm9yIHdvcmssIHdoaWxlIGEgdml2aWQgY29sb3VyIHRoYXQgbWF0Y2hlcyB3aXRoIHRoZSByZXN0IG9mIHlvdXIgb3V0Zml0IHdvcmtzIHdlbGwgZm9yIGdvaW5nIG91dC4gCktpcGxpbmcgc2VlbXMgdG8gaGF2ZSB0cnVseSBiZWxpZXZlZCBpbiB0aGUgV2hpdGUgTWFuIGJ1cmRlbiwgYXMgZG8gdGhlIG1lbWJlcnMgb2YgdGhlIElkYWhvIGdyb3VwIHdobyBjYW1lIHRvIHNhdmUgdGhlIGNoaWxkcmVuIGZyb20gdGhlaXIgImhhbGYgZGV2aWwsIGhhbGYgY2hpbGQiIHdheXMuIGNvdXJzZSwgdGhlIEltcGVyaWFsaXNtIG9mIEFtZXJpY2EgYW5kIEVuZ2xhbmQgaGFzIGFsd2F5cyBiZWVuIGxheWVyZWQgd2l0aCB0aGUgSW1wZXJpYWxpc20gb2YgYSBtaWxpdGFudCBhbmQgbmF0aW9uYWxpc3QgQ2hyaXN0aWFuIEV2YW5nZWxpY2FsIG1vdmVtZW50LgpGb3IgUGFya2VyLCB0aGUgY29tcGFueSBoYXMgcHJvdmlkZWQgYW4gb3Bwb3J0dW5pdHkgdG8gZXhlcmNpc2UgaGVyIGxlYWRlcnNoaXAgYW5kIGNoYWxsZW5nZSBoZXIgc2tpbGxzIGFzIGEgbWFya2V0aW5nIHByb2Zlc3Npb25hbC4gTGVhZGluZyBhIGNvbXBhbnkgd2lkZSBwaG90byBwcm9qZWN0LCBmb3IgZXhhbXBsZSwgUGFya2VyIHNwZW50IHNldmVyYWwgbW9udGhzIGZpbmRpbmcgY2FuZGlkYXRlcywgd29ya2luZyB3aXRoIHBob3RvZ3JhcGhlcnMgYW5kIHN0cmF0ZWdpemluZyB3aXRoIHRoZSBjb21wYW55J3MgaW50ZXJuYWwgY3JlYXRpdmUgdGVhbS4KVGhlcmFwaXN0IGhlcmUuIFRoaXMgb25lIGlzIGdvaW5nIHRvIGRlcGVuZCBncmVhdGx5IG9uIHRoZSB0aGVyYXBpc3QuIApDb21tb24gQnV6emFyZHMgYXJlIHJlbGF0ZWQgdG8gYmlyZHMgY2FsbGVkIGhhd2tzIGluIE5vcnRoIEFtZXJpY2EsIHN1Y2ggYXMgUmlkZ3dheSdzIEhhd2sgKEJ1dGVvIHJpZGd3YXlpKSBhbmQgdGhlIFJlZCBUYWlsZWQgSGF3ayAoQnV0ZW8gamFtYWljZW5zaXMpLiAKQWxsIG9mIHVzIGhhdmUgbW9yZSB0aGFuIG9uZSBzdG9yeSBhYm91dCB0aGUgaW52aW5jaWJsZSBHYXJ0aCBhbmQgaXQgaXMgZHVyaW5nIHRoaXMgdGltZSBvZiBjZWxlYnJhdGlvbiB0aGF0IHdlIHdpbGwgc2hhcmUgdGhlbSBhbGwuIEksIGZvciBvbmUsIGhlYXIgbXkgYnJvdGhlciB2b2ljZSByaWdodCBub3cgc2F5aW5nOiBlbm91Z2ggd2l0aCB0aGUga25pdHRpbmcgYWxyZWFkeSBicmVhayBvdXQgdGhlIEphY2sgYW5kIHBhc3MgdGhlIHBlYWNlIHBpcGUuIApSYXluYXVkJ3MgaXMgbW9yZSBjb21tb24gaW4gY29sZGVyIGNsaW1hdGVzIGFuZCB3b21lbiBhcmUgYWZmZWN0ZWQgbW9yZSBvZnRlbiB0aGFuIG1lbi4gUG9wdWxhdGlvbiBoYXMgdGhpcyBjb25kaXRpb24uIApIZXJlIHRoZSBmZWVkYmFjayB0aHJlYWQgd2UgcmFuIGZvciB0aGlzIHJvdW5kIHZvdGUgdGhlIG9wdGlvbnMgZm9yIHRoZSBwb2xsIGNhbWUgZnJvbSB0aGF0IHRocmVhZCFJIGZlbHQgbGlrZSB0aGlzIHZvdGluZyBzaG91bGQgaGF2ZSBiZWVuIGhlbGQgYWZ0ZXIgdGhlIEdlbmVyYXRpb24gOCBnYW1lcyB3ZXJlIGFubm91bmNlZCB3aGVuIG1vcmUgcGVvcGxlIGFyZSB2aXNpdGluZyBhbmQgcGF5aW5nIGF0dGVudGlvbi4gUmlnaHQgbm93IHdlIGluIGEgZHJvdWdodCBhbmQgdGhlIHN1YiB2aXNpdHMgdnMgc3Vic2NyaWJlcnMgbnVtYmVycyBzaG93IHRoYXQuVGhlIHJlYXNvbiB3ZSBkaWQgaXQgd2hlbiB3ZSBkaWQgd2FzIHRvIHRyeSBhbmQgZXN0YWJsaXNoIGEgcGF0dGVybiB3aXRoIHByZXZpb3VzIHllYXJzLCB3aGVuIHdlIGhlbGQgdm90ZXMgaW4gbWlkd2ludGVyLiAKRHJlYW0gZGV0YWlsczogTWUgYW5kIGEgZ3V5IGkgbGlrZWQgaGFkIHRoZSBFWEFDVCBzYW1lIGRyZWFtIGFib3V0IG9ubHkgdXMgMi4gYW5kIHdlIHdlcmUga2lzc2luZyEgaSByZWFsbHkgd2FudCB0byBrbm93IHdoYXQgaXQgbWVhbnMuCkxpc3Qgb2YgRmVtYWxlIFBvcCBTaW5nZXJzIG9mIHRoZSAyMDAwcwpIZSBjb3VsZCByZW1haW4gc2lsZW50IHRoZSB3aG9sZSB0aW1lLiBUaGVyZSBpcyBubyByZXF1aXJlbWVudCBpbiBVUyBjb3VydHMgdG8gcHJvdmUgaW5ub2NlbmNlLiBUaGF0IHdoeSB0aGUgdmVyZGljdCBpcyBlaXRoZXIgImd1aWx0eSIgb3IgIm5vdCBndWlsdHkuIiBUcnVtcCBkb2VzIG5vdCBoYXZlIHRvIGFuc3dlciBxdWVzdGlvbnMgdW5kZXIgb2F0aCB0byBwcm92ZSBoaXMgaW5ub2NlbmNlLi4gCkluIHRoZSAxOTYwcyBhbmQgJzcwcywgdGVhbXMgb2YgZW5naW5lZXJzIGFuZCBjb21wdXRlciBzY2llbnRpc3RzIHdvcmtlZCB0byBidWlsZCB0aGUgZm91bmRhdGlvbiBmb3IgYSBuZXR3b3JrIG9mIG5ldHdvcmtzLiBBUlBBTkVULCBvbmUgb2YgdGhlIEludGVybmV0J3MgcHJlZGVjZXNzb3JzLCBiZWdhbiBtb2Rlc3RseSBhcyBhIHRocmVlIG5vZGUgbmV0d29yay4gCjQgcG91bmRzIG9mIG11c2NsZSBjb25zdW1lcyBhcyBtYW55IGNhbG9yaWVzIGFzIHJ1bm5pbmcgb25lIG1pbGUgZXZlcnkgZGF5IQpJbiAyMDAxLCBTaHVsbWFuIGFuZCBoaXMgZmFtaWx5IG1vdmVkIHRvIEJvc3Rvbiwgd2hlcmUgaGUgd29ya2VkIG9yZ2FuaXppbmcgc3BlZWQgZGF0aW5nIGV2ZW50cyBmb3IgSmV3aXNoIHNpbmdsZXMsIGFuZCB0aGVuIHRvIE1hbGRlbiwgd2hlcmUgaGUgd29ya2VkIGF0IENvbmdyZWdhdGlvbiBCZXRoIElzcmFlbC4gQnkgMjAwNiwgaGUgYWdhaW4gIndhcyBsb29raW5nIGZvciBzb21ldGhpbmcgZGlmZmVyZW50LiIgQnJvd3NpbmcgdGhlIEludGVybmV0IG9uZSBuaWdodCwgaGUgY2FtZSBhY3Jvc3MgYSBVUyBBcm15IGNoYXBsYWluY3kgd2Vic2l0ZS4gCkFuZCBOZWlsLiBCY2hlciBpbiAuIApNYWRlIHN1cmUgdGhhdCB0aGUgaW50ZXJ2aWV3IHdhcyBmb2N1c2VkIG9uIHRoZSBhZHVsdCBjb252ZXJzYXRpb24gZXZlbiB0aG91Z2ggdGhlaXIga2lkcyB3ZXJlIHBsYXlpbmcgaW4gdGhlIHJvb20KSXQncyBwb3NzaWJsZSB0byBmYWtlIGEgZ2xhc3Mgd2FsayBvciB0byBib29zdCB5b3VyIGNoYW5jZXMgb2YgY29tcGxldGluZyBpdCB3aXRob3V0IGluanVyeS4gQnJlYWthd2F5IGdsYXNzLCBhbHNvIGtub3duIGFzIHN1Z2FyIG9yIGNhbmR5IGdsYXNzLCBpcyBhbiBlYXN5IHRvIHNoYXR0ZXIgc3Vic3RpdHV0ZSBmb3IgcmVhbCBnbGFzcy4gClNpZXN0YSBLZXkgVG91cmlzbVNpZXN0YSBLZXkgSG90ZWxzU2llc3RhIEtleSBCZWQgYW5kIEJyZWFrZmFzdFNpZXN0YSBLZXkgVmFjYXRpb24gUmVudGFsc1NpZXN0YSBLZXkgVmFjYXRpb24gUGFja2FnZXNGbGlnaHRzIHRvIFNpZXN0YSBLZXlTaWVzdGEgS2V5IFJlc3RhdXJhbnRzVGhpbmdzIHRvIERvIGluIFNpZXN0YSBLZXlTaWVzdGEgS2V5IFRyYXZlbCBGb3J1bVNpZXN0YSBLZXkgUGhvdG9zU2llc3RhIEtleSBNYXBTaWVzdGEgS2V5IFRyYXZlbCBHdWlkZUFsbCBTaWVzdGEgS2V5IEhvdGVsc1NpZXN0YSBLZXkgSG90ZWwgRGVhbHNMYXN0IE1pbnV0ZSBIb3RlbHMgaW4gU2llc3RhIEtleUJ5IEhvdGVsIFR5cGVTaWVzdGEgS2V5IEZhbWlseSBIb3RlbHNSb21hbnRpYyBIb3RlbHMgaW4gU2llc3RhIEtleVNpZXN0YSBLZXkgUmVzb3J0c1NpZXN0YSBLZXkgQmVhY2ggSG90ZWxzQnkgSG90ZWwgQ2xhc3MzIHN0YXIgSG90ZWxzIGluIFNpZXN0YSBLZXlQb3B1bGFyIEFtZW5pdGllc1NpZXN0YSBLZXkgSG90ZWxzIHdpdGggUG9vbHNQZXQgRnJpZW5kbHkgSG90ZWxzIGluIFNpZXN0YSBLZXlQb3B1bGFyIE5laWdoYm9yaG9vZHNIb3RlbHMgbmVhciBPY2VhbiBCZWFjaEhvdGVscyBuZWFyIE1pcmEgTWFyIEJlYWNoSG90ZWxzIG5lYXIgTWlyYSBNYXJIb3RlbHMgbmVhciBGaWRkZXIgQmF5b3VIb3RlbHMgbmVhciBQZXBwZXJ0cmVlIEJheUhvdGVscyBuZWFyIFNhcmFzb3RhIEJlYWNoSG90ZWxzIG5lYXIgU2llc3RhIE1hbm9ySG90ZWxzIG5lYXIgU2llc3RhIElzbGVzUG9wdWxhciBTaWVzdGEgS2V5IENhdGVnb3JpZXNDb25kbyBIb3RlbHMgaW4gU2llc3RhIEtleVN1aXRlIEhvdGVscyBpbiBTaWVzdGEgS2V5RGlzY291bnQgSG90ZWxzIGluIFNpZXN0YSBLZXlDb3VwbGVzIEhvdGVscyBpbiBTaWVzdGEgS2V5U2llc3RhIEtleSBIb3RlbHMgd2l0aCBIb3QgVHVic0hvdGVscyB3aXRoIFByaXZhdGUgQmVhY2ggaW4gU2llc3RhIEtleVNpZXN0YSBLZXkgSG90ZWxzIHdpdGggS2l0Y2hlbmV0dGVTaWVzdGEgS2V5IEhvdGVscyB3aXRoIFJlc3RhdXJhbnRzU2llc3RhIEtleSBDbGVhbiBIb3RlbHNRdWlldCBIb3RlbHMgaW4gU2llc3RhIEtleU5lYXIgTGFuZG1hcmtzSG90ZWxzIG5lYXIgU2llc3RhIEJlYWNoSG90ZWxzIG5lYXIgQ3Jlc2NlbnQgQmVhY2hIb3RlbHMgbmVhciBUdXJ0bGUgQmVhY2hIb3RlbHMgbmVhciBQb2ludCBvZiBSb2Nrc0hvdGVscyBuZWFyIFRoZSBHYWxsZXJ5IG9uIFNpZXN0YSBLZXlIb3RlbHMgbmVhciBTaWVzdGEgS2V5IEJlYWNoSG90ZWxzIG5lYXIgU2hlbGwgQmVhY2hOZWFyIEFpcnBvcnRzSG90ZWxzIG5lYXIgKFNSUSkgU2FyYXNvdGEvQnJhZGVudG9uIEludGVybmF0aW9uYWwgQWlycG9ydEhvdGVscyBuZWFyIChQSUUpIFN0LiAKVGhlIGd1eXMgd2hvIHdlcmUgdXNlZCB0byB0aGUgaGlnaCBzY29yaW5nIHVwc3RhaXJzIGFsbGV5IG9mIHRoZSBPbGQgTWFya2V0IHdlcmUgZmluZGluZyB0aGluZ3MgYSBiaXQgbW9yZSBkaWZmaWN1bHQgb24gdGhlIENvbW1lcmNpYWwgYWxsZXkgYW5kIGxvc3QgYSBmdXJ0aGVyIDEwIHBpbnMgb24gdGhlIGZpZnRoIGhhbmQgdGhhbmtzIHRvIHNvbWUgc3RlYWR5IFdhbmRlcmVycyBza2l0dGxpbmcgYW5kIGEgMTYgZmxvcHBlciBmcm9tIGEgYmFjayBvbiBmb3JtIE9KIFN0YWJiaW5zLiBUaGUgV2FuZGVyZXJzIHRoZW4gdG9vayB0aGUgZm9vdCBvZmYgdGhlIGdhcyBhcyB0aGUgbGFzdCB0d28gaGFuZHMgb2YgNTggYW5kIDU3IHJlc3BlY3RpdmVseSwgbGV0IHRoZSAiaG9tZSIgdGVhbSBwdWxsIDkgcGlucyBiYWNrIHRvIGF2b2lkIHRoZSB3aGl0ZXdhc2gsIGJ1dCB0aGVuIGNydWlzZWQgdG8gdmljdG9yeSBieSAzOSBwaW5zLiBNaWtlICJJJ2xsIHN0YXJ0IHNraXR0bGluZyBub3cgdGhhdCB0aGUgc2Vhc29uJ3MgZmluaXNoZWQiIFN0YWJiaW5zIGZpbmlzaGVkIHRvcCB3aXRoIDc0LCB3aXRoIFNraXBwZXIgSGFrZSBiYWNraW5nIGhpbSB1cCBieSBoaXR0aW5nIDY3LiBObyBvbmUgZWxzZSBtYW5hZ2luZyB0byBoaXQgb3ZlciA2MCBvbiB0aGUgbmlnaHQuCihQcml2YWN5IFBvbGljeSlWaW1lb1NvbWUgYXJ0aWNsZXMgaGF2ZSBWaW1lbyB2aWRlb3MgZW1iZWRkZWQgaW4gdGhlbS4gTm8gZGF0YSBpcyBzaGFyZWQgd2l0aCBQYXlwYWwgdW5sZXNzIHlvdSBlbmdhZ2Ugd2l0aCB0aGlzIGZlYXR1cmUuIApDb25jZWl2ZWQgYnkgSHVuZ2FtYSBEaWdpdGFsIFNlcnZpY2VzIGFuZCBwcm9kdWNlZCBieSBFcXVpbmV4dCBGaWxtcywgdGhlIHRocmVlIG1pbnV0ZSB2aWRlbyBpcyBtZWFudCBleGNsdXNpdmVseSBmb3IgdGhlIGRpZ2l0YWwgbWVkaXVtLiBUaGUgZmlsbSBmZWF0dXJlcyB0aGUgcHJvdGFnb25pc3QsIEFiaGksIHdobyBwbGF5cyBhIHByYW5rIHRvIHRlc3Qgd2hpY2ggb2YgaGlzIGZyaWVuZHMgYXJlICI0IEFNIGZyaWVuZHMiLCB0aGUga2luZCBvZiBmcmllbmRzIHdobyB3aWxsIGJlIHRoZXJlIGZvciBoaW0gZXZlbiBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodC4uIApTdHVkaW8gNEssIFN1cGVyIFNvdXJjZSBsZXRzIHlvdSBhZGQgbXVsdGkgYm94IHBpY3R1cmUgaW4gcGljdHVyZSBjb21wb3NpdGlvbnMgdG8geW91ciAuIApJIGRpZCBub3QgaGF2ZSBsYXN0aW5nIERSIHdpdGggbXkgZmlyc3QsIGJ1dCBJIHRoaW5rIGdlbmVyYWwgbGFjayBvZiAocmVjb3ZlcmVkKSBjb3JlIHN0cmVuZ3RoIGFmdGVyIG15IGZpcnN0IHByZWduYW5jeSBoYXMgY29udHJpYnV0ZWQgdG8gaXNzdWVzIHRoaXMgdGltZSBhcm91bmQsIGFuZCBJIGhhdmUgdG8gd29yayBoYXJkZXIgdG8gcmVjb3ZlciBmcm9tIGFueSBzZXBhcmF0aW5nLi4gCkhvdyBtdWNoIGFyZSB3ZSBwbGF5aW5nIGZvcj9BIGhvbWUgcG9rZXIgdG91cm5hbWVudCBzaG91bGQgYmUgbW9yZSBhYm91dCBoYXZpbmcgYSBncm91cCBvZiBmcmllbmRzIG92ZXIgYW5kIGhhdmluZyBhIGdvb2QgdGltZSByYXRoZXIgdGhhbiBhYm91dCB3aW5uaW5nIGEgbGFyZ2Ugc3VtIG9mIG1vbmV5LiAKU2F0dXJkYXksIDE1dGguIFdpbmRzIGF0IEVhc3QgZHVyaW5nIHRoZSBkYXksIGluIHRoZSBOaWdodCBhIGxpZ2h0IGJyZWV6ZSBvZmYgdGhlIGxhbmQ7IGFuZCBhcyBJIGFwcHJlaGVuZCBpdCBiZSB1c3VhbCBoZXJlIGZvciB0aGUgVHJhZGUgd2luZCB0byBibG93IGR1cmluZyBhIGdyZWF0IHBhcnQgb2YgdGhlIGRheSBmcm9tIHRoZSBFYXN0ZXJuIEJvYXJkLCBhbmQgdG8gaGF2ZSBpdCBDYWxtIG9yIGxpZ2h0IGJyZWV6ZXMgZnJvbSB0aGUgbGFuZCB0aGF0IGlzIFNvdXRoZXJseSBkdXJpbmcgdGhlIG5pZ2h0IHdpdGggZmFpciB3ZWF0aGVyLCBJIHNoYWxsIG9ubHkgbWVudGlvbiB0aGUgd2luZCBhbmQgd2VhdGhlciB3aGVuIHRoZXkgZGV2aWF0ZSBmcm9tIHRoaXMgcnVsZS4gCllvdSBjYW4gZ2V0IHRoaXNzb25nIGZyb20gdmFyaW91cyBvdXRsZXRzL1lvdXR1YmUuIDUyKSBQb2tlciBGYWNlLyBTcGVlY2hsZXNzLyBZb3VyIFNvbmcgdy9FbHRvbiBKb2huIChNZWRsZXkpLiBHZXQgaXQgb24gaVR1bmVzLiAKQW5kIGZvciB3aGF0IHJlYXNvbiwgc28gd2UgY2FuIGdldCBtYWQgYWJvdXQgc29tZSBraWQgcHV0dGluZyBoaXMgYm9vdHMgb24gdGhlIHNlYXQ/IEl0cyBub25zZW5zZS4uIApJbiBBbWVyaWNhLCBmYWN0b3JpZXMgc3dpdGNoZWQgb3ZlciB0byBtYWtpbmcgbXVuaXRpb25zIGVhcmx5IGluIHRoZSB3YXIgYmVjYXVzZSB0aGUgbWlsaXRhcnkgd2FzIGJ1eWluZyB0aG9zZSBtdW5pdGlvbnMgYXQgYXR0cmFjdGl2ZSBwcmljZXMuIFdoZW4gdGhlIGdvdmVybm1lbnQgd2luZHMgZG93biBtaWxpdGFyeSBwcm9jdXJlbWVudCBhdCB0aGUgZW5kIG9mIGEgd29ybGQgd2FyLCB0aGVyZSBhcmUgc3Ryb25nIGZpbmFuY2lhbCBpbmNlbnRpdmVzIGZvciBmYWN0b3JpZXMgdG8gc3dpdGNoIGJhY2sgdG8gcGVhY2V0aW1lIHByb2R1Y3Rpb24uIEluIGNvbnRyYXN0LCB0aGUgaGVhZHMgb2YgdGhlIGRlc2lnbiBidXJlYXVzIGFuZCBtdW5pdGlvbnMgZmFjdG9yaWVzIGluIHRoZSBVU1NSIGRpZG4gaGF2ZSB0aG9zZSBzYW1lIGluY2VudGl2ZXMsIHNvIHRoZXkgcHJvYmFibHkgaGFkIHRvIG1ha2UgdGhlIGNhc2UgdG8gdGhlIGhpZ2hlciB1cHMgdGhhdCB0aGV5IHNob3VsZCBrZWVwIGdvaW5nLgpJIGJvdWdodCBpdCAzIDQgeWVhcnMgYWdvIGFuZCBzdGlsbCB3b3JrcyBwcmV0dHkgd2VsbCBidXQgaXQncyBub3QgYWN0dWFsIGxlYXRoZXIgc28gaXQgaGFzIHN0YXJ0ZWQgdG8gZmFkZSBhbmQgcmlwIGEgbGl0dGxlLiAKQnJlYWtpbmcgYm9uZXMgYW5kIGRpc2xvY2F0aW5nIGpvaW50cyBkdXJpbmcgdGhlIGFjdGlvbiBpcyBtb3JlIG9mIGEgaG9ycm9yIHRyb3BlLCB3aGljaCBtYWtlcyBpdCBwZXJmZWN0bHkgb2sgdGhhdCBJIGEgaHlwb2NyaXRlIHdobyBicmVha3MgaW52ZXN0aWdhdG9yIGJvbmVzIG9uIHRoZSByZWd1bGFyCkJlIGF0dGVudGl2ZSB0byBob3cgeW91ciBib2R5IGZlZWxzIGFzIHlvdSBicmVhdGhlIGluIGFuZCBvdXQuIEFmdGVyIHR3byBvciB0aHJlZSBkZWVwIGJyZWF0aHMsIHJhaXNlIHlvdXIgaGFuZHMgYWJvdmUgeW91ciBoZWFkIGFuZCBzdHJldGNoIGFzIGlmIHlvdSB3ZXJlIHRyeWluZyB0byB0b3VjaCB0aGUgY2VpbGluZy4gClRoZXJlIGFyZSBzZXZlcmFsIGNvbXBhbmllcyB0aGF0IGhlbHBlZCBIaXRsZXIgYnVpbGQgaGlzIHdhciBtYWNoaW5lLCBzdWNoIGFzIFBvcnNjaGUgYW5kIE1heWJhY2guIFdlcmUgdGhlc2UgY29tcGFuaWVzIGV2ZXIgYXNzaWduZWQgYmxhbWUgb3IgZGlkIHRoZXkgZXZlciBhZGRyZXNzIHRoYXQgZmFjdD8gSXQgc2VlbXMgZnVubnkgdG8gbWUgdGhhdCB0aGVzZSBjb21wYW5pZXMgYXJlIHN1Y2Nlc3NmdWwgdG8gdGhpcyBkYXkgeWV0IHRoZXkgc2VlbSB0byBoYXZlIGEgZGFyayBzcG90IGluIGhpc3RvcnkuIFRoZXNlIGNvbXBhbmllcyB3ZXJlIGJ5IHRoaXMgdGltZSBtdWx0aW5hdGlvbmFsIGNvcnBvcmF0aW9ucyB3aXRoIGxvY2FsIGV4ZWN1dGl2ZXMgKGFuZCB0aGlzIG1lYW50IGxvY2FsbHkgbWFuYWdlZCBvcGVyYXRpb25zKSBpbiB0aGUgYXJlYXMgdGhleSBvcGVyYXRlZC4gSnVzdCBieSB2aXJ0dWUgb2YgdGhlbSBleGlzdGluZyBpbiBHZXJtYW4gdGVycml0b3J5IGF0IHRoZSBzdGFydCBvZiB0aGUgd2FyLCBpdCB3b3VsZCBub3QgaGF2ZSBiZWVuIHNvIGVhc3kgZm9yIHRoZXNlIGZhY3RvcmllcyBub3QgdG8gaGF2ZSBiZWVuIHRha2VuIG92ZXIgaW4gc29tZSBjYXBhY2l0eS4gVGhhdCdzIG5vdCB0byBzYXksIGhvd2V2ZXIsIHRoYXQgdGhlIGNvcnBvcmF0aW9ucyBib3JlIG5vIHJlc3BvbnNpYmlsaXR5IGZvciB0aGVtLiBNb3N0IHBlb3BsZSBrbmV3IHdoYXQgdGhlIE5hemlzIHdlcmUgYWJvdXQgYW5kIHRoZXNlIGNvcnBvcmF0aW9ucyBoYWQgNiA4IHllYXJzIHRvIGRpdmVzdCwgcmVwdXJwb3NlLCBvciBhYmFuZG9uIHRoZWlyIEdlcm1hbiBvcGVyYXRpb25zLgpUaGVyZSBpcyBhIHZhc3QgYW1vdW50IG9mIGluZm9ybWF0aW9uIGF2YWlsYWJsZSBvbmxpbmUuIENoZWNrIG91dCBzb21lIGZvcnVtcyBzdWNoIGFzIFBvY2tldGZpdmVzLCAyKzIgb3IgTGlxdWlkIFBva2VyLiAKVGhlbHdlYXJkJ3Mgc29uIHRoZWxtYWVyLCB3aG8gd291bGQgaGF2ZSBiZWVuIGV4cGVjdGVkIHRvIGluaGVyaXQgdGhlIHRpdGxlLCBsYXRlciBkZWZlY3RlZCB0byBTd2VpbiB3aXRoIGNvbnNpZGVyYWJsZSBmb3JjZS4gCkFueSBzdWdnZXN0aW9ucyBmb3IgaG9tZXNjaG9vbGluZy9hY3Rpdml0aWVzIGZvciBhIHRvZGRsZXIgd2hvIGlzIGNvbnN0YW50bHkgYm91bmNpbmcgb2ZmIHRoZSB3YWxscyBhbmQgY3JlYXRpbmcgY2hhb3Mgd2hlcmV2ZXIgaGUgZ29lcz8uIApSZWFkIG1vcmU6JDYwMG0gcHV0IHRocm91Z2ggSWxsYXdhcnJhIHBva2llcyBpbiB0aHJlZSBtb250aHMgIGZpZ3VyZXMgSW4gdGhlIGZpcnN0IGV2ZXIgY2FzZSBvZiBpdHMga2luZCwgQXVzdHJhbGlhIEZlZGVyYWwgQ291cnQgb24gVHVlc2RheSBiZWdpbnMgYW4gZXh0cmFvcmRpbmFyeSAxNCBkYXkgbGVnYWwgdGVzdCwgYWdhaW5zdCBBcmlzdG9jcmF0IGFuZCBhZ2FpbnN0IEphbWVzIFBhY2tlciBDcm93biBSZXNvcnRzLCB0aGUgYmlnZ2VzdCBjYXNpbm8gb3BlcmF0b3IgaW4gdGhlIGNvdW50cnkuIApMZSBncm91cGUgZGUgdHJhdmFpbCBtaXMgc3VyIHBpZWQgcGFyIE90dGF3YSBwb3VyIHR1ZGllciBsYSBsZ2FsaXNhdGlvbiBkdSBjYW5uYWJpcyByZWNvbW1hbmRlIHF1ZSBsIG1pbmltYWwgcG91ciBhY2hldGVyIGR1IHBvdCBzb2l0IGZpeCAgMThhbnMuIEF1eCB0YXRzIFVuaXMsIGRldXggdGF0cyBxdWkgb250IGxnYWxpcyBsIGRlIGxhIG1hcmlqdWFuYSAgZGVzIGZpbnMgcmNyYXRpdmVzLCBlbiBsIGxlIENvbG9yYWRvIGV0IGwgZGUgV2FzaGluZ3Rvbiwgb250IGRjaWQgZCBsYSB2ZW50ZSBkZSBjYW5uYWJpcyBhdXggbWluZXVycy4uIApXZWFyIHByb3RlY3RpdmUgbGVhdGhlciBnbG92ZXMgYW5kIHRoaWNrIHNvbGVkIHNob2VzLiAKSSdsbCBsb3ZlIHlvdSBhdCBsZWFzdCAndGlsIHRoZSBtaWRkbGUgb2YgbmV4dCB3ZWVrIUlmIGFsbCB0aGF0IHNlZW1zIGxpa2UgdG9vIG11Y2ggd29yaywgY2hlYXQuIFRoZSByaHltaW5nIGRpY3Rpb25hcnkgaGFzIGFscmVhZHkgZG9uZSB0aGUgd29yayBmb3IgeW91ISBBZnRlciBhbGwsIHdoeSBnbyB0byBtb3JlIGVmZm9ydCB0aGFuIHlvdSBoYXZlIHRvPwpBbHNvIHVuZGVyIHRoaXMgc2VjdGlvbiBhcmUgdGhlIGJldHRpbmcgc3RydWN0dXJlcyBhdmFpbGFibGUgb24gZWFjaCBnYW1lOiBsaW1pdCwgbm8gbGltaXQsIHBvdCBsaW1pdCwgd2l0aCB0aGUgcmFuZ2Ugb2YgdGhlIHN0YWtlcyBmb3IgZWFjaC4gSWYgeW91IGNvbWUgYWNyb3NzIHRoZSB0ZXJtICJNaWNyb2xpbWl0cywiIHRoaXMgY29tbW9ubHkgcmVmZXJzIHRvIGdhbWVzIHdpdGggYmxpbmRzIHRoYXQgYXJlIGluIHRoZSBwZW5ueSBvciBuaWNrZWwgcmFuZ2UuCkJsb2c6IExhdGUgZ29hbCBoZWxwcyBHb2xkZW4gS25pZ2h0cyBrbm9jayBvZmYgQ2FsZ2FyeSBGbGFtZXMgTWFyY2ggNiwgMjAxOQpVc2UgdGhpcyB0aW1lIHRvIG1lbnRhbGx5IHByZXBhcmUgYW5kIHJlZmluZSB5b3VyICJiYXR0bGUgcGxhbiIgZm9yIHRyYW5zZmVycmluZyB0aGVpciBjaGlwcyBpbnRvIHlvdXIgc3RhY2suIEl0J3MgYmVzdCB0byBmb3JtdWxhdGUgc2V2ZXJhbCBzdHJhdGVnaWVzIGR1cmluZyB5b3VyIHByZSB0b3VybmFtZW50IHBsYW5uaW5nLCBhbmQgdGhlbiByZWZpbmUgZWFjaCBvbmUgYXMgeW91IHNlZSBob3cgdGhlIGdhbWUgaXMgYWN0dWFsbHkgc2hhcGluZyB1cCwgdGhlIHR5cGVzIG9mIHBsYXllcnMgYXQgeW91ciB0YWJsZSBhbmQgaG93IHlvdSdsbCBhcHByb2FjaCBlYWNoIHNpdHVhdGlvbi4uIApVbnNraWxsZWQsIG91dCBvZiBwcmFjdGljZSBzdWJzLCB1bmZhbWlsaWFyIHdpdGggdGhlIHN0YW5kYXJkIG9mIHByb2Zlc3Npb25hbGlzbSBvZiB0aGUgZGlzdHJpY3QuLiAKWW91IGNhbiBnZXQgeW91ciBiYWxhbmNlIG9uIGxpbmU7IGhvd2V2ZXIsIEkgZ2V0IG15IGJhbGFuY2Ugc2VudCB0byBteSBwaG9uZSBkYWlseSB2aWEgYSB0ZXh0IG1lc3NhZ2UuIApXaGF0IGlmIHRoZSByZXN1bHQgb2YgYWxsIHRoaXMgY29uc29saWRhdGlvbiBvZiBmaW5hbmNpYWwgcG93ZXIgaW4gdGhlIGhhbmRzIG9mIGEgZmV3IGlzIHRoYXQgdGhlIHJpY2ggZ2V0IHJpY2hlcj8gVGhlcmUgaXMgbm8gZ3VhcmFudGVlIHRoYXQgdGhlIGVjb25vbWljIGNvbGxhcHNlIGlzIGdvaW5nIHRvIHJlc3VsdCBpbiBhIHJlZGlzdHJpYnV0aW9uIG9mIHdlYWx0aCwgZGVzcGl0ZSB0aGUgc2NyZWFtcyBvZiBzb2NpYWxpc20gY29taW5nIGZyb20gRm94IE5ld3MgY29tbWVudGF0b3JzLkluIGZhY3QsIHNvbWUgZXhwZXJ0cyBhcmUgc3VnZ2VzdGluZyB0aGF0IHdoYXQgaXMgcmVhbGx5IGdvaW5nIG9uIGlzIHRoYXQgY2xhc3MgaW50ZXJlc3RzIGFyZSBiZWluZyBwcm90ZWN0ZWQgYnkgU2VjcmV0YXJ5IEdlaXRobmVyIGFuZCBoaXMgZ2FuZy4gCkhlcmUncyB0aGUgd29uZGVyZnVsbHkgZWNjZW50cmljIExhZHkgR2FnYSBpbiBKbydzIExpdmUgTG91bmdlIGJhY2sgaW4gMjAwOSwgdGFsa2luZyB0ZWEgY3VwcyBhbmQgcG9wIG11c2ljLCBiZWZvcmUgcGxheWluZyBQb2tlciBGYWNlIGFuZCBhIGNvdmVyIG9mICdzIFZpdmEgbGEgVmlkYS4gTGFzdCB5ZWFyLCB0aG91Z2gsIEhvemllciBjb3ZlcmVkICwgd2hvLCBsaWtlIEdhZ2EsIGhhdmUgYWxzbyBjbG9ja2VkIHVwIDEwIGNvdmVycy4gVHdvIG9mIHRob3NlIHdlcmUgb24gdGhlIHNhbWUgZGF5ICAgYnkgUXVlZW5zIG9mIHRoZSBTdG9uZSBBZ2UgaW4gU2VwdGVtYmVyIDIwMTMuCldlIGhhdmUgbGVhcm5lZCBmcm9tIGV4cGVyZW5jZSBhbmQgZnJvbSB0aGUgcGVvcGxlIGF0IEh1c3RsZXIuIEJ1dCB5b3UgbmVlZCB0byBkZXRveCB5b3VyIGJvZHkgYmVjYXVzZSBJIGhhdmUgbGVhcm5lZCB0aGF0IGlmIHlvdSBkb24geW91IGhhdmUgdGhlIGZlZWxpbmcgb2YgZ29pbmcgdG8gdGhlIGJhdGhyb29tIGEgbG90Li4gClRoZSBjaGFyYWN0ZXIgd2lsbCBzdGF5IHdpdGggdGhlIGNoaWxkIGFuZCBjb2xvciB3aXRoIGhpbSBvciBoZXIsIHBhaW50IGhlciBuYWlscywgb3IganVzdCBzaXQgYmVzaWRlIGhpbSBvciBoZXIgd2hpbGUgaGUgb3Igc2hlIGVuZHVyZXMgaGVyIHRyZWF0bWVudC4gRmlnaHQgTGlrZSBBIEdpcmwgaXMgYWxzbyBvcmdhbml6aW5nIG1vbnRobHkgYWN0aXZpdGllcyBmb3IgdGhlIGNoaWxkcmVuIHRvIGNvbWUgYW5kIGludGVyYWN0IHdpdGgga2lkcyBzdWZmZXJpbmcgdGhlIHNhbWUgZmlnaHQuIEZpZ2h0IExpa2UgQSBHaXJsIHdpbGwgZG8gd2hhdGV2ZXIgaXQgY2FuIHRvIHByb21vdGUgYSBwb3NpdGl2ZSBvdXRsb29rLi4gCkl0IG11Y2ggbW9yZSBjb21wbGljYXRlZCBpbiBuZXR3b3JrIG9wZXJhdGlvbi4gVGhlIGxvd2VzdCBhY2Nlc3MgY2xhc3MgcmF0aW5ncyB3b3VsZCBiZSByZXNlcnZlZCBmb3IgbmV0d29yayBvcGVyYXRpb24sIGFuZCBoaWdoZXIgb3JkZXIgZ292ZXJubWVudCBmdW5jdGlvbiAoUE9UVVMsIGV0YykuIApFeHBlcnRzIHdobyBzdGFydGVkIHRvIHNpZnQgdGhyb3VnaCB0aGUgbWF0ZXJpYWwgc2FpZCB0aGF0IGl0IGFwcGVhcmVkIGxlZ2l0aW1hdGUgYW5kIHRoYXQgdGhlIHJlbGVhc2Ugd2FzIGFsbW9zdCBjZXJ0YWluIHRvIHNoYWtlIHRoZSBDSUEuLiAKR2FnYSB3YXMgb25jZSBhIEdvIEdvIGRhbmNlci4gMTYuIApUaGlzIGlzIGZyb20gdGhlIHNhbWUgdW5pdmVyc2UgYXMgdGhpcyBtYXAgSSBwb3N0ZWQgaW4gdGhlIHN1Yi4gSXQgbm90IGdvdCBhbiBpZGVudGljYWwgYXBwZWFyYW5jZSB0byB0aGUgbGFzdCBiZWNhdXNlIHRoZSBQYWdlIHRoYXQgYSAyOHRoIGNlbnR1cnkgcGVyc29uIHdvdWxkIGJlIHVzaW5nIHRvIHZpZXcgaXQgaXMgY3VzdG9taXNhYmxlLCBhbmQgd2hhdCBpbnRlcmVzdHMgb25lIHBlcnNvbiBhYm91dCBhbiBvZmZ3b3JsZCBjb2xvbnkgbWlnaHQgbm90IGludGVyZXN0IGFub3RoZXIgcXVpdGUgc28gbXVjaC4KSGUncyBhIGdvb2QgZm9vdGJhbGwgcGxheWVyLCBidXQgaGUgbmVlZHMgdG8gZ2V0IGhpcyBzaGl0IHRvZ2V0aGVyLiBUaGUgQUFGIGlzIGhpcyBsYXN0IGhvcGUuIEhlIHNob3VsZCBjbGVhbiB1cCBiZWZvcmUgdGFraW5nIGEgc2hvdCBhdCBpdC4KV2hhdCBpcyBleGNpdGluZyBhbmQgbmV3IGlzIHRoZSBjb25zaWRlcmF0aW9uIG9mIGJvdHRvbSB1cCBjb250cm9sIHRoYXQgaXMsIGhvdyB0aGUgZ3V0LCBvciBtb3JlIHByZWNpc2VseSB0aGUgbWljcm9iaW90YSBpbiB0aGUgR0kgdHJhY3QsIGNhbiBpbmZsdWVuY2UgYnJhaW4gZnVuY3Rpb24uIApTaGUgYmFzaWNhbGx5IGluc3RhbnRseSByZWNvZ25pemVkIHRoYXQgd2hhdCBzaGUgd2FzIGRvaW5nIGlzIHdyb25nIGFuZCBjb25mZXNzZWQgZXZlcnl0aGluZywgZXZlbiBkZXRhaWxzIHNoZSBkaWRuJ3QgbmVlZCB0byBzaGFyZSB0aGF0IGNvdWxkIG1ha2UgdGhpbmdzIHdvcnNlIGZvciBoZXIuIApUaGUgVVMgaXMgbGlrZSBhIHBlcnNvbiB3aXRoIGNhbmNlci4gCkJ1dCB0aGUgY2hhaW4gb2YgZG9ub3JzIGFuZCBlbXBsb3llZXMgcnVubmluZyB0aHJvdWdoIGdvdmVybm1lbnQgdG8gdGhlIENsaW50b24gZm91bmRhdGlvbiBhbmQgYmFjayBhZ2FpbiBzaG91bGQgY29uY2VybiB5b3UgICBhcyBpdCBwb2ludHMgb3V0IGhvdyBXYXNoaW5ndG9uLCBvbiBib3RoIHNpZGVzIG9mIHRoZSBhaXNsZSwgaXMgcm90dGVuIHdpdGggdGhlIHdoaWZmIG9mIG1vbmV5IGFuZCBpbmZsdWVuY2UgcGVkZGxpbmcuLiAKSSBkb24gbGlrZSB0aGVpciBwb2tlciByb29tIHVwIG9uIHRoYXQgYmFsY29ueSB0aGluZywgYWxzbyB0aGV5IHRlbmQgdG8gaGF2ZSBtb3JlIGluZXhwZXJpZW5jZWQgc3RhZmYuIApTaGUgYWxzbyByZWFsaXNlZCB0aGF0IGhlciBmZWFycyB3ZXJlIGlycmF0aW9uYWwgYW5kIHRoZSByZWFsaXR5IG9mIHdoYXQgc2hlIGhhZCB3aXRoIHlvdSB3YXMgc29tZXRoaW5nIGFuZCBzb21lb25lIHNoZSB3YW50ZWQgICAoYXMgZm9yIGhpbSBiZWluZyBhbiBhbGxlZ2VkIDEwLzEwLCBJIGRvbiBrbm93IHdoYXQgdG8gc2F5LiBJdCBsaWtlIHBhcnRuZXJzIGFsd2F5cyBoYXZlIGEgZmxpbmcgd2l0aCBzb21lb25lIHRoYXQgc2VlbXMgdG8gYmUgYmV0dGVyIGJ1dCB0dXJucyBvdXQgdG8gYmUgd29yc2U/IFNlZSBDaGFybGVtYWduZSB0aGEgZ29kIHN0b3J5IG9uIGhpcyBnZiB3aG8gc2xlcHQgd2l0aCBzb21lb25lIGVsc2UuIApJdCdzIGFib3V0IDUwIHBvdW5kcyBsZXNzIHRoYW4gbXkgc3F1YXQuIEkgc2xvdyBkb3duIGEgbG90IHJpZ2h0IGJlbG93IHRoZSBrbmVlIHNvIEkgdGhpbmsgSSdtIGdvbm5hIHRyeSBhbmQgZG8gYSBsb3Qgb2YgaGFtc3RyaW5nIGFjY2Vzc29yeSB3b3JrLiAKV2UgZmlnaHQgdG8gc3Vydml2ZSwgYnV0IHdoYXQgYXJlIHdlIHN1cnZpdmluZz8gVGhlcmUgaXMgbm90aGluZyBvdXQgdGhlcmUsIGV2ZXJ5dGhpbmcgaXMgaGVyZSB3aXRoIHVzLCBpbiB0aGlzIGNhZ2UuLiAKWWVhcnMgbGF0ZXIsIEknbSBnbGFkIHdlIGdvdCB0byBsZWFuIG9uIGVhY2ggb3RoZXIgaW4gdGhlIG1vbnRocyBiZWZvcmUgdGhlIGJhYnkgd2FzIGJvcm4uIApFeHBsYW5hdGlvbiBmb3IgdGhvc2Ugd2l0aG91dCBpbnN0YWdyYW0gb3IgYXJlIHRvbyBsYXp5IHRvIG9wZW4gaW5zdGFncmFtIGxvbDogc28gbGllZGEgd2FzIGNhdWdodCBzY2FtbWluZyB0aGUgYmFrZXJ5IHRoYXQgbWFkZSBoZXIgd2VkZGluZyBjYWtlICh0aGV5IGJha2VkIGhlciBjYWtlIGFuZCBzaGUgbmV2ZXIgcGFpZCwgc2hlIHRoZW4gdHJpZWQgdG8gdHVybiBpdCBhcm91bmQgYW5kIHN1Z2dlc3QgdGhhdCB0aGV5IHdlcmUgd3JvbmcsIGFuZCB0aGF0IHNoZSBpcyBhbHNvIGEgY2F0ZXJlciBhbmQga25vd3MgdGhhdCB0aGVpciBwcmljZSB3YXMgb2ZmICBpIGtub3cgdGhpcyBmcm9tIGFuIG91dHNpZGUgc291cmNlIGFjdHVhbGx5IGFuZCBpdCBpc250IHN0YXRlZCBpbiB0aGlzIGluc3RhZ3JhbSBwYWdlLiBzZWVuIHNvbWV3aGVyZSBhcm91bmQgdGhlIHN1YiwgYW5kIHRoZXJlIHdlcmUgdHJhbnNsYXRlZCBzY3JlZW5zaG90cyksIHBvc3RlZCBoZXIgbnVtYmVyIG9uIG11bHRpcGxlIHBsYXRmb3JtcyBsaWtlIHR3aXR0ZXIgYW5kIHJlZGRpdCAoaGVyIHVzZXIgd2FzIGxlaWRhbmllbCkgcGltcGluZyBoZXJzZWxmIG91dCBhcyBhIG1hc3NldXNlIGFuZCBmb3Igc2V4IGluIGphcGFuIGxvbC4gc28gYmFzaWNhbGx5LCBoZXIgcGhvbmUgbnVtYmVyIGlzIGFsbCBvdmVyIHRoZSBpbnRlcm5ldCwgYW5kIHByb3ZlcyB0aGF0IHNoZSBwb3N0ZWQgYWxsIHRoZXNlLiAoc2hlIHVzZWQgdGhlIHNhbWUgcGhvbmUgbnVtYmVyIGZvciBldmVyeXRoaW5nIGxvbCkKRGVyZWsgS2VsbHksIDQ2LCBjaGFpcm1hbiBvZiB0aGUgR3V0c2hvdCBQcml2YXRlIE1lbWJlcnMgQ2x1YiBpbiBDbGVya2Vud2VsbCwgY2VudHJhbCBMb25kb24sIHdhcyBmb3VuZCBndWlsdHkgb2YgY29udHJhdmVuaW5nIHRoZSBhY3QgYnkgb3JnYW5pc2luZyBhIGdhbWUgb2YgcG9rZXIgb24gRGVjZW1iZXIgNywgMjAwNCwgaW4gd2hpY2ggYSBsZXZ5IHdhcyBjaGFyZ2VkIG9uIHRoZSB3aW5uaW5ncy4gSGUgd2FzIGFsc28gZm91bmQgZ3VpbHR5IGJ5IGEganVyeSBhdCBTbmFyZXNicm9vayBDcm93biBDb3VydCwgaW4gZWFzdCBMb25kb24sIG9mIGNvbnRyYXZlbmluZyB0aGUgYWN0IGJ5IG9yZ2FuaXNpbmcgYSBwb2tlciBnYW1lIG9uIEphbnVhcnkgMjcsIDIwMDUsIGluIHdoaWNoIGEgZmVlIHdhcyBjaGFyZ2VkIHRvIHRha2UgcGFydC4KQWxzbyBIaXQgbiBydW4gaXMgbm90IGFsbG93ZWQgb24gdGhlaXIgc2l0ZS4gSSBzdHJvbmdseSBiZWxpZXZlIGlmIHRoZXkgbWFkZSB0aGUgcHJvcGVyIGJ1eSBpbnMgZm9yIGNhc2ggZ2FtZXMgdGhpcyB3b3VsZCBhdCBsZWFzdCBzdG9wIGEgYml0IG9mIHRoZSBoaXQgbiBydW5uaW5nLiBJIGRvbiB3YW50IHRvIHBsYXkgYSAxMCBCQiBzdGFjayBidXQgaWYgeW91IHJlcGVhdGVkbHkgZ28gZnJvbSBvbmUgdGFibGUgdG8gbmV4dCBhbmQgZGVjbGluZSB0aGV5IGNhbiBjb25zaWRlciB0aGF0IHByZWRhdG9yeS4gCjQpIEZvciBtZSwgSSBsaWtlIHRvIGFsd2F5cyBjYXJyeSBhIHNuaXBlciBzbyBJIGNhbiBzZWUgZmFydGhlciBhcyBJIHRyYXZlbCwgdGhlbiBJIGxpa2UgaGF2aW5nIGFuIGFzc2F1bHQgcmlmbGUgaW4gbXkgc2Vjb25kIHNsb3QgYW5kIGFuIHNtZy9zaG90Z3VuIGluIHRoZSB0aGlyZC4gCldoZW4gY2hvb3NpbmcgYSBwb2RpYXRyaXN0LCB5b3Ugd2lsbCB3YW50IHRvIGNvbnNpZGVyIGFsbCB0aGUgc2FtZSBmYWN0b3JzIHlvdSBkbyBpbiBjaG9vc2luZyBhbnkgb3RoZXIgZG9jdG9yLiAKVGhvc2Ugd2VudCB0byBIb2xseXdvb2Qgd2hlcmUgYWxsIGJ1dCA0MCB3ZXJlIGVsaW1pbmF0ZWQuIApCYWNrIHRvIEJvY2h5IHBsYXlpbmcgS2xlc2tvLCBEdXJoYW0sIGFuZCBSb2JlcnRzIGxpa2UgdGhlcmUgbm8gdG9tb3Jyb3cgKGF0IGxlYXN0IGhlIHJpZ2h0IGFib3V0IHRoYXQhKS4gCkkgbGlrZSB0byBnbyBkb3duIG9uIGhlciwgdXNpbmcgbXkgdG9uZ3VlIGFuZCBmaW5nZXJzIHRvIGdldCBoZXIgY2xvc2UgdG8gY3VtbWluZywgdGhlbiBJIHN0b3AgYW5kIHdoaXAgaGVyIG9yIHBpbmNoIGhlciBuaXBwbGVzLCBJIGRvIHRoaXMgZm9yIGEgd2hpbGUsIGVkZ2luZyBoZXIgY2xvc2VyIGV2ZXJ5IHRpbWUgYnV0IG5vdCBsZXR0aW5nIGhlciBjdW0uIApOZXZhZGEgY3JpbWluYWwganVzdGljZSByZWZvcm0gYmlsbCBoZWFyZCBieSBsYXdtYWtlcnMgQnkgUnlhbiBUYXJpbmVsbGksIEFzc29jaWF0ZWQgUHJlc3MgTGF3bWFrZXJzIGhlbGQgYSBoZWFyaW5nICBvbiBhIGNvbnRlbnRpb3VzIGFuZCB3aWRlIHJhbmdpbmcgY3JpbWluYWwganVzdGljZSByZWZvcm0gYmlsbCB0aGF0IGhhcyBwaXR0ZWQgcHJvc2VjdXRvcnMgYWdhaW5zdCBwdWJsaWMgZGVmZW5kZXJzLiBTdXBwb3J0ZXJzIGNvbnRlbmQgdGhlIGxlZ2lzbGF0aW9uIHNlZWtzIHRvIGxvd2VyIHJlY2lkaXZpc20gcmF0ZXMsIGN1cmIgYW4gLgpJbnZlc3RvdmEgbmVqYWsgYXMgdiBza21hbiBvYmxhcywga2RlIGNoY2V0ZSBza3NpIHN2b2plIGFzdGllLiAKV2l0aCB0aGUgc25vdyBhbmQgdGhlIGNvbGQgb3ZlciB0aGUgbGFzdCB3ZWVrIG9yIHNvLCB0aGVyZSBoYXMgbm90IGJlZW4gbXVjaCBhY3Rpdml0eSBvbiB0aGUgcml2ZXIuIEFuZ2xlcnMgd2hvIGhhdmUgdmVudHVyZWQgb3V0IGhhdmUgZm91bmQgYSBtaXggb2Ygc3RlZWxoZWFkIGFuZCBicm93biB0cm91dC4gCkxlbyB3b3VsZCB3YWxrIGluIHdpdGggaGlzIGhlYWRwaG9uZXMgb24gYW5kIHNlZW0gYSBiaXQgZGV0YWNoZWQgYW5kIGZvciBzbyBsb25nIGl0IGRpZG4ndCBtYWtlIHNlbnNlIHRvIG1lIGFuZCB0aGVuIGV2ZW50dWFsbHkgSSByZWFsaXplZCB3aHkgdGhhdCB3YXMuIFdoeS4gCkFzIGZvciBIb3JhY2UgQmF4dGVyLCBoZSB3YXMgaW4gZmluYW5jaWFsIGRpZmZpY3VsdGllcyBhIHllYXIgYWdvIGxhc3Qgc3VtbWVyLCBhbmQgaGUgcHJheWVkIHRvIHRoZSBMb3JkIGZvciBoZWxwOyBhbmQgd2hlbiBoaXMgd2lmZSBkaWVkIGFuZCBoZSBnb3QgaGVyIGxpZmUgaW5zdXJhbmNlIGhlIHNhaWQgaGUgYmVsaWV2ZWQgaXQgd2FzIHRoZSBhbnN3ZXIgdG8gaGlzIHByYXllci4gCkhpc3BhbmljcyAxMDAgICAxNTAgbm1vbC9sID0gNDAgNjAgbWcvZGwKUG91cnF1b2kgbmUgc29tbWVzIG5vdXMgcGFzIGF1IGNvdXJhbnQgZGUgY2VsYSA/IFBhcmNlIHF1J2lsIGV4aXN0ZSBkZXMgbGFib3JhdG9pcmVzIGludHJlc3NzICBmYWlyZSB1bmUgdmVyc2lvbiBzeW50aHRpcXVlIHF1aSBsZXVyIGFwcG9ydGVyYSBkJ25vcm1lcyBwcm9maXRzLiBWb3VzIHBvdXZleiBkc29ybWFpcyBhaWRlciB1biBhbWkgZGFucyBsZSBiZXNvaW4gZW4gbHVpIGxhaXNzYW50LCBzYXZvaXIgcXVlIGxlIGp1cyBkZSBjaXRyb24gZXQgbGUgY2l0cm9uIGx1aSBtbWUgdGVsIHF1J2V4cGxpcXUgY2kgZGVzc3VzLCBlc3QgYm5maXF1ZSBkYW5zIGxhIHBydmVudGlvbiBkZSBsYSBtYWxhZGllLiBTb24gZ290IGVzdCBhZ3JhYmxlIGV0IGlsIG5lIHByb2R1aXQgcGFzIGxlcyBlZmZldHMgaG9ycmlibGVzIGRlIGxhIGNoaW1pb3RocmFwaWUuIApJRlAgcHJlc2lkZW50IFBhdHJpY2sgTmFsbHkgdG9sZCBBRlAgdGhhdCBJbmRpYSB3YXMgdGhlIGZpcnN0IGNvdW50cnkgdG8gZ2V0IHRoZSBsZWFndWUgYnV0IHNhaWQgaGUgaG9wZWQgaXQgd291bGQgYmUgcm9sbGVkIG91dCB0byBvdGhlcnMgc29vbiwgd2l0aCBwbGFubmluZyBmb3IgbGVhZ3VlcyBpbiBJdGFseSBhbmQgU3BhaW4gYXQgYW4gYWR2YW5jZWQgc3RhZ2UuClJldm9raW5nIGNpdGl6ZW5zaGlwIGlzIHVuaGVhcmQgb2YgZm9yIGdvb2QgcmVhc29uLiAKRXZlbiBpZiBzaGUgZXZlciBzYXlzICJNdW07IHRoaXMgaXMgeW91ciBmYXVsdCBhbmQgeW91IGZhaWxlZCBtZSIgcmVtZW1iZXIgc2hlIGlzIGluIHBhaW4gYW5kIG92ZXJ3aGVsbWVkIGFuZCByaWdodCBub3cgaGVyIG9ubHkgY29waW5nIHNoZSByZWxlYXNlIG1lY2hhbmlzbSBpcyB0byBjdXQgaGVyc2VsZi4KVGhlIHRlZXRoIHVzZWQgZm9yIHRoZSBpdm9yeSBmbG9vciB3aXRoaW4gdGhlIGRvbGxob3VzZSB3ZXJlIHRyb3BoaWVzIGJ1dCBhbHNvIHJlZmxlY3RpdmUgb2YgQW1tYSdzIHlvdXRoIGFuZCBkZXZpYXRpb24uIApJIGxvdmUgbXkgYnJvdGhlciB0byBwaWVjZXMsIGhlIGlzIGxpa2UgbXkgY2hpbGQuIEkgd291bGQgbGF5IGRvd24gbXkgbGlmZSBmb3IgaGltIHdpdGhvdXQgaGVzaXRhdGlvbi4gSGUgZGlkbnQgcHV0IG1lIGluIHRoYXQgc2l0dWF0aW9uLCBteSBwYXJlbnRzIGRpZC4gClRoZSBhbnN3ZXIgd2UgZm91bmQgZm9yIHRoZSBjbHVlIE1pc3NvdXJpIENvbXByb21pc2Ugc3ViamVjdCBpczouIDIgQXByIDIwMTggLiBTdGF0ZSBmb3JtZWQgYXMgcGFydCBvZiB0aGUgTWlzc291cmkgQ29tcHJvbWlzZSBjcm9zc3dvcmQgY2x1ZSAuIHNlZW4gdG9kYXksIEFwcmlsIDIgMjAxOCBhdCB0aGUgcG9wdWxhciBjcm9zc3dvcmQgcHV6emxlLCBOZXcgWW9yayBUaW1lcy4gTWlzc291cmkgQ29tcHJvbWlzZSBzaWduZXIgQ3Jvc3N3b3JkIENsdWUgLiBwdXp6bGUsIHdlIGFyZSBub3cgYWxsIHJlYWR5IHRvIHNvbHZlIHRoZSBnaXZlbiBjbHVlOiBNaXNzb3VyaSBDb21wcm9taXNlIHNpZ25lci4gCktlZXAgeW91ciBleWVzIG9wZW4gZm9yIHRoZSBiYW5kaXRzLCB0aGVyZSBhcmUgYSBtaWxsaW9uIG9mIHRoZW0gb3V0IHRoZXJlIGFuZCBhIGxvdCBvZiB0aGVtIGdldCBzb2xkIGZvciBjaGVhcCBiZWNhdXNlIHBlb3BsZSBhc3N1bWUgdGhleSBqdXN0IHByYWN0aWNlIGFtcHMuCkFtZXJpY2FucyBVbml0ZWQgYWxzbyBwb2ludGVkIG91dCB0aGF0IHNvbWUgbGVnaXNsYXRvcnMgb3Blbmx5IGFkbWl0dGVkIHRoYXQgdGhleSB3b3VsZCBub3Qgdm90ZSBmb3Igc2ltaWxhciBwbGF0ZXMgZm9yIG1pbm9yaXR5IGZhaXRocy4KV2hlbiBhcHBseWluZyBuYWlsIHBvbGlzaCwgZmlyc3Qgb3BlbiBhIGJvdHRsZSBvZiB3aW5lIGFuZCBwb3VyIHlvdXJzZWxmIGEgZ2xhc3MuIEZvciBvbmUgUmVzZWFyY2hlciwgbmFpbCB2YXJuaXNoIGFwcGxpY2F0aW9uIGFsbW9zdCBhbHdheXMgdGFrZXMgcGxhY2Ugb2YgYW4gZXZlbmluZyB3aGVuIHRoZXkgaGF2ZSBub3RoaW5nIHRvIGRvICAgdGh1cyBhdm9pZGluZyBzbXVkZ2luZyAgIHNvIGEgbGl0dGxlIHRpcHBsZSBhbG9uZyB0aGUgd2F5IGlzIGFsd2F5cyB3ZWxjb21lLiBEb24ndCBoYXZlIHRvbyBtdWNoIHRob3VnaCBvciB5b3UgY291bGQgZW5kIHVwIHdpdGggYSBzZXJpb3VzbHkgZG9kZ3kgc2V0IG9mIG5haWxzLiBBbHNvLCBnbyB0byB0aGUgbG9vIG5vdyBzbyB0aGVyZSBpcyBubyBkYW5nZXIgb2Ygc25hZ2dpbmcgdGhlIGZpbmlzaGVkIHJlc3VsdCBvbiB5b3VyIGtuaWNrZXJzL2plYW5zL3RpZ2h0cyBldGMuCkluIHRoZSBOZXRoZXJsYW5kcyB0aGUgdmFsdWUgb2YgeW91ciBjZXJ0aWZpY2F0ZSBpcyB0aGUgc2FtZSByZWdhcmRsZXNzIG9mIHRoZSB1bml2ZXJzaXR5IHlvdSBnbyB0by4gVGhlIHVuaXZlcnNpdGllcyBtb3N0bHkgZGlmZmVyIGluIHRoZSB3YXkgdGhhdCB0aGV5IHRlYWNoIHlvdSBhbmQgd2hpY2ggY291cnNlcyB0aGV5IGdpdmUgeW91LlRoZSBvbmVzIEkgZW5qb3llZCBtb3N0IHdlcmUgaW4gUm90dGVyZGFtIGFuZCBpbiBTY2hldmVuaWdlbiwgYW5kIGRlcGVuZGluZyBvbiB5b3VyIHN0dWRpZXMgTGVpZGVuIGlzIHlvdXIgYmVzdCBiZXQsIGdpdmVuIHRoYXQgaXQgYW1vbmcgdGhlIHRvcCAzMCB1bml2ZXJzaXRpZXMgaW4gdGhlIHdvcmxkIGVzcGVjaWFsbHkgaW4gdGVybXMgb2YgdGhlIHNjaWVuY2VzIGFuZCBjdWx0dXJlIHN0dWRpZXMuUGx1cywgTGVpZGVuIHN0dWRlbnQgbGlmZSBpcyBhbWF6aW5nLiAKUmVsaWV2ZXMgdGVuc2lvbiAgIEV4cGVydCBtYXNzYWdlIHRoZXJhcGlzdCByZWNvZ25pemVzIGRpZmZlcmVuY2VzIGluIGZpcm1uZXNzIGFuZCB0aWdodG5lc3MgYXQgZGlmZmVyZW50IHBsYWNlcyBvZiB0aGUgbXVzY2xlcyBhbmQgYWRqdXN0cyBwcmVzc3VyZSBhY2NvcmRpbmdseSB0byBsb29zZW4gdGhlIHRlbnNpb24gc3BvdHMuIE1hc3NhZ2UgcmVsYXhlcyBhbmQgcmV2aXZlcyB0aGUgbXVzY2xlcyBnb25lIGZsYWNjaWQgZHVlIHRvIHRlbnNpb24uIEl0IHNtb290aGVucyBhbmQgbG9vc2VucyB0aGUgc3BvdHMgZ29uZSBzdGlmZiBkdWUgdG8gc3RyZXNzLgpJIG5vdCBzdXJlIHdoeSBhIHN1cGVyY2lsaW91cyBhdHRpdHVkZSB0b3dhcmRzIFRvbSBTdG9wcGFyZCBzY3JlZW5wbGF5cywgYW5kIHRoZW4gYSBzdHJhbmdlIGh1bWJsZSBicmFnIGhhcyBhbnl0aGluZyB0byBkbyB3aXRoIHRoaXMgbW92aWVzIHF1YWxpdHkuIApJIHByb2JhYmx5IHNob3VsZCBtZW50aW9uIHRoYXQgSSdtIG5vdCBhIHByb2Zlc3Npb25hbCBwcm9ncmFtbWVyIG15c2VsZi4gQnV0IHRoZXJlIHN1cmVseSBhcmUgYSBsb3Qgb2YgZ3JlYXQgbGlicmFyaWVzIGluIHB1cmUgQy4KVGhlIGFuc3dlciB0byBhbnkgdGVybSB5b3UgZG9udCB1bmRlcnN0YW5kIGlzIGF0IHlvdXIgZmluZ2VydGlwcy4gClRoZSB0YXBpbmcgcmVhbGx5IGhlbHBlZCBtZSBrZWVwIHJpZGluZyB3aXRob3V0IHN0cmVzc2luZyB0aGUgdGVuZG9uIGFuZCB3aGlsZSBJIGRpZCBleGVyY2lzZXMgdG8gc3RyZW5ndGhlbiB0aGUgdGVuZG9uIChsaWtlIGhlZWwgcmlzZXMpLiAKSW50ZXJlc3RpbmcgaG93IGhpc3RvcnkgcmVwZWF0cyBpdHNlbGYsIG5vPyBUaGVzZSBWZXJ0cmllYmVuZW4sIHRoZSBHZXJtYW4gcmVmdWdlZXMsIHdlcmUgb2Z0ZW4gdHJlYXRlZCBhcyBzZWNvbmQgY2xhc3MgY2l0aXplbnMgYmVjYXVzZSBvZiB0aGVpciBhY2NlbnRzIGFuZCB0aGVpciBwb3ZlcnR5LiBTb21lIGhhZCB0byBsaXZlIGluIGhhc3RpbHkgZXJlY3RlZCBiYXJyYWNrcywgb3RoZXJzIGhhZCB0byBzaGFyZSBhIHJvb20gKG15IGdyYW5kbW90aGVyIGhhZCB0byB0YWtlIGluLCBmb3IgZXhhbXBsZSwgYSB5b3VuZyBtb3RoZXIgd2l0aCBhIGNoaWxkIHdobyBzaGFyZWQgYSByb29tKS4uIApPdGhlciBhc3NldHMgbm93IGluY2x1ZGUgaG90ZWxzIGFuZCBwcm9wZXJ0aWVzIGluIGVhc3Rlcm4gRXVyb3BlIGFuZCBhIGZpdmUgcGVyIGNlbnQgc3Rha2UgaW4gQW5nbG8gSXJpc2ggQmFuay4gCkF0IHRoZSBlbmQgb2YgeWVhcnMgb2YgZmlnaHRpbmcgZXZlcnkgZ2VuZXJhbCBzb2xkaWVyIGRlc2VydmVzIHJlc3BlY3QgYW5kLCBhdCBsZWFzdCwgc29tZSBmcmVlIGZvb2QgSSBob3BlIHRoaXMgZ3V5IGdvdCBoaXMuCllvdSBoYXZlIGluZGVlZCwgY29ycmVjdGx5IGRpc2Nlcm5lZCBhdCBsZWFzdCBvbmUgdGhpbmc6IEkgYW4gQXRoZWlzdC4KVmluY2VudCBkZSBQYXVsIENlbWV0ZXJ5LiAKTGUgbm9tIGVzdCBkb25jIGVuIHByaW5jaXBlIGF0dHJpYnUgZW4gcmFpc29uIGR1IGxpZW4gZGUgZmlsaWF0aW9uLiBUb3V0ZWZvaXMsIGlsIHNlIHBldXQgcXVlIGNldHRlIGF0dHJpYnV0aW9uIGludGVydmllbm5lICBsYSBzdWl0ZSBkJ3VuZSBkY2lzaW9uIGFkbWluaXN0cmF0aXZlLiBMJ2VuZmFudCB0cm91diwgb3UgZG9udCBsYSBtcmUgYSBzb3VoYWl0IGdhcmQgbCdhbm9ueW1hdCwgc2Ugdm9pdCBhdHRyaWJ1IHVuIG5vbSBwYXIgbCdvZmZpY2llciBkJ3RhdCBjaXZpbCAoQXJ0LiBDZXR0ZSBhdHRyaWJ1dGlvbiBlc3QgYW5udWxlIHBhciBsJ3RhYmxpc3NlbWVudCBkJ3VuIGxpZW4gZGUgZmlsaWF0aW9uIChhY3RlIGRlIG5haXNzYW5jZSByZXRyb3V2IG91IG5haXNzYW5jZSBqdWRpY2lhaXJlbWVudCBkY2xhcmUpLgpJdCBtYXkgdGFrZSBzb21lIHRpbWUgdG8gZ2V0IGl0IGp1c3QgcmlnaHQsIGJ1dCBpZiB5b3UgZm9sbG93IHRoZXNlIDEwIHN0ZXBzLCB5b3Ugd2lsbCBib3RoIGhhdmUgbG90cyBvZiBmdW4gdHJ5aW5nLiAKUGV0ZSBoYWQgc29tZSBtb3JlIHRlc3RzIHRvZGF5ICAgSSBtdXN0IHNheSwgdGhlIHN0YWZmIGFyZSB2ZXJ5IHRob3JvdWdoLiBIZSdzIGhhZCBmYXIgbW9yZSB0ZXN0cyB0aGFuIGhlIGRpZCBpbiBBdXN0cmFsaWEsIGFuZCBhIGNvdXBsZSBvZiB0aGUgZG9jdG9ycywgaW5jbHVkaW5nIERyLiBXYW5nIHdyb3RlIGRvd24gaGlzIGZ1bGwgaGlzdG9yeSwgaW5jbHVkaW5nIHdoYXQgZHJ1Z3MgaGUgaGFkIGluIGNoZW1vIGFuZCB3YW50ZWQgdG8ga25vdyB3aGF0IHN0cmVuZ3RoIHJhZGlhdGlvbiBoZSdkIGhhZC4KQnV0IGF0IHRoZSBlbmQgb2YgdGhlIGRheSwgYSBnb29kIHNvbG8gbW92aWUsIG9yIG9uZSB0aGF0IGlzIGEgdGVhbXVwIGJldHdlZW4gYSBzbWFsbGVyIG51bWJlciBvZiBjaGFyYWN0ZXJzLCBoYXMgbW9yZSByb29tIGZvciBmb2N1c2luZyBvbiB0aGUgZ3Jvd3RoIGFuZCBkZXZlbG9wbWVudCBvZiB0aGF0IGNoYXJhY3RlciBhbmQgZm9jdXNpbmcgb24gdGhlaXIgb3duIHBlcnNvbmFsIHN0YWtlcy5JdCBsaWtlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSBodWdlIGJ1ZmZldCBhbmQgYSB2ZXJ5IHdlbGwgbWFkZSB2ZXJzaW9uIG9mIHlvdXIgZmF2b3JpdGUgZGlzaC5yeWNvbG9neSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JZiBpdCdzIGEgbG9zZSBsb3NlIHRoZW4gdGhleSBzaG91bGQganVzdCBpbXBsZW1lbnQgdGhlIHRlY2ggY29tcGxldGVseSByYXRoZXIgdGhhbiBwYXJ0aWFsbHkuIEF0IGxlYXN0IHRoYXQgd2F5IHRoZXkgY2FuIHdhc2ggdGhlaXIgaGFuZHMgc2F5aW5nICJsb29rLCB3ZSdyZSBnaXZpbmcgeW91IHRoZSBmdWxsIGRlYWwgdGhhdCB5b3Ugd2FudGVkIi5JJ2Qgc2F5IHRoYXQgYSBzZWNvbmQgeWVsbG93IHNob3VsZCBiZSBhbiBhcHBlYWxhYmxlIHNpdHVhdGlvbi4gCllldCBkZXNwaXRlIGFsbCB0aGlzIGVkdWNhdGlvbiBhbmQgdGF4IGJhY2tncm91bmQsIHRoZSBqdWRnZSBzYWlkIHRoZSB0YXhwYXllciBubyBlZmZvcnQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlcmUgd2FzIGFueSBsZWdpdGltYXRlIGJhc2lzIGZvciBleGNsdWRpbmcgdGhlIHRpcHMgZnJvbSBoaXMgaW5jb21lLiBIZSBkaWQgbm90IG1ha2UgYW55IGlucXVpcmllcyB3aXRoIGEgQ1JBIG9mZmljaWFsLCBhY2NvdW50YW50LCBib29ra2VlcGVyIG9yIGxhd3llciwgYnV0IGFkb3B0ZWQgYW4gaW50ZXJwcmV0YXRpb24gdGhhdCB3YXMgbW9zdCBmYXZvdXJhYmxlIHRvIGhpcyBjaXJjdW1zdGFuY2VzLiBUaGF0IHRoZSB1bnJlcG9ydGVkIHRpcHMgd2VyZSBzaWduaWZpY2FudCBhbmQgbWF0ZXJpYWwgY29tcGFyZWQgdG8gaGlzIHJlcG9ydGVkIGluY29tZSwgdGhlIGp1ZGdlIGZlbHQgdGhlIHRheHBheWVyIHNob3VsZCBoYXZlIHNvbWUgZWZmb3J0IHRvIGFzY2VydGFpbiB0aGUgcHJvcGVyIHRheCB0cmVhdG1lbnQgb2Ygc3VjaCBsYXJnZSBncmF0dWl0eSBhbW91bnRzLiAKV2hhdCBpZiB3ZSBtb3ZlIHVwIHRoZSBpbmNvbWUgcmFuZ2UgdG8gd2hhdCBpcyByb3VnaGx5IHRoZSAzMHRoIHBlcmNlbnRpbGUsIG9yICQ2MCw0MjAgb2YgaG91c2Vob2xkIGluY29tZSwgc3BsaXQgZXF1YWxseT8KQ2xpY2sgd29ya2luZyBmZWF0dXJlIHZpZGVvIGhhdmUgdXNpbmcgZXhwZWN0IGF0IGxlc3MgdWsgY2FzaW5vIG5vbiBibGFja2phY2suIApEYW5keWJvbWIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpXaXRoIFJvY2sgVGFwZSwgSSBrbm93IHlvdSBjYW4gdXNlIG1pbGsgb2YgbWFnbmVzaWEgYXBwbGllZCB0byB5b3VyIHNraW4gYmVmb3JlIHVzaW5nIHRoZSB0YXBlIChsZWFybmVkIHRoaXMgZnJvbSBhIHJlcCwgYnV0IGhhdmUgbm90IHRyaWVkIGl0IHNpbmNlIFJYIHdvcmtlZCBmaW5lIG9uIGl0cyBvd24gZm9yIG1lKS4gVGhpcyBpcyBzb21ldGhpbmcgeW91IGNvdWxkIGNhdXRpb3VzbHkgdHJ5IGZvciBvdGhlciBicmFuZHMuIAoiV2hldGhlciB3ZSdyZSBpbnZvbHZlZCBpbiBtdXNpYyBmZXN0aXZhbHMgb3IgcHVyY2hhc2luZyBuZXcgbXVzaWMgZXF1aXBtZW50IGZvciBzY2hvb2xzLCBvdXIgZ29hbCBpcyB0aGUgc2FtZSAgIHRvIGlkZW50aWZ5IGFuZCBzdXBwb3J0IGVtZXJnaW5nIGFydGlzdHMsIiBzYWlkIE5hbmN5IElub3V5ZSwgbmF0aW9uYWwgbWVkaWEgbWFuYWdlciwgVG95b3RhLCBpbiBhbiBlbWFpbC4gIkJlaW5nIHRoZSBleGNsdXNpdmUgYXV0b21vdGl2ZSBwYXJ0bmVyIG9mICdUaGUgVm9pY2UnIGlzIGFuIGFtYXppbmcgd2F5IGZvciBUb3lvdGEgdG8gdW5jb3ZlciBidWRkaW5nIG11c2ljIHRhbGVudC4iLiAKU28gaXQgYWJvdXQgdHJ5aW5nIG5ldyB0aGluZ3MgYW5kIGV4cGVyaW1lbnRpbmcsIHBsdXMgbG90cyBvZiBjb21tdW5pY2F0aW9uLi4gCkkgaGF2aW5nIGEgbG90IG9mIHRyb3VibGUgc29ydGluZyBvdXQgYWR2YW5jZWQgY29uY2VwdHMgbGlrZSAldmFsdWUgaGFuZHMgdnMuIApJIGFtIGEgcGVyc29uIHdobyBjcmllcyB3aGVuIHVwc2V0LCBidXQgbm90IGp1c3QgdXBzZXQgYXMgaW4gSSBzYWQuIFdoZW4gSSBoYXZlIHRvIHF1aXQgYSBqb2IgYW5kIHRvIHRvIGluZm9ybSB0aGUgYm9zcyAgIEkgY3J5IGF0IHRoZSBib3NzIGRlc2suIFdoZW4gSSBoYXZlIHRvIHRhbGsgdG8gYSB0aGVyYXBpc3QgYWJvdXQgcGVyc29uYWwgc3R1ZmYsIHNvbWV0aW1lcyBldmVuIGFib3V0IG11bmRhbmUgc2hpdCwgSSBzaGFrZSBhbmQgY3J5LiBXaGVuIEkgYW0gY29uZnJvbnRpbmcgc29tZW9uZSBhbmQgSSBhbmdyeSAgIHdhdGVyd29ya3MuIEkgc2VyaW91c2x5IGhhdGUgaXQuIEkgdGhpbmsgaXQgbWFrZXMgbWUgbG9vayB3ZWFrIGFuZCBzdHVwaWQuIEkgd2lzaCBpdCB3YXMgYXMgZWFzeSBhcyBqdXN0IHN0b3BwaW5nICAgYnV0IGl0IGEgcmVhbCBwaHlzaW9sb2dpY2FsIHJlYWN0aW9uIHRvIHN0cmVzcy9lbW90aW9uL3BhaW4uCkltIGx1Y2t5IHRoYXQgYWxsIG15IG1hbmFnZW1lbnQgdGVhbSBnZXRzIGFsb25nIHdpdGggbWUgZm9yIHRoZSBtb3N0IHBhcnQuIApBIHNwZWNpYWwgdGhhbmsgeW91IHRvIHRoZSBkb2N0b3JzLCBudXJzZXMgYW5kIHN0YWZmIGF0IFN0LiBKb3NlcGgncyBIb3NwaXRhbCBmb3IgdGhlaXIgY2FyZSBhbmQgc3VwcG9ydC4gSGlzIGZhbWlseSB3aWxsIHJlY2VpdmUgZnJpZW5kcyBmb3IgYSBNZW1vcmlhbCBHYXRoZXJpbmcgYXQgdGhlIENyZXNtb3VudCBGdW5lcmFsIEhvbWUsIDMyMiBGZW5uZWxsIEF2ZS4gClRoaXMgcGVycGxleGVkIG1lIGJlY2F1c2UgaXQgc2VlbWVkIGxpa2UgaXQgd291bGQgYmUgdGhlIG90aGVyIHdheSBhcm91bmQuIEhvd2V2ZXIsIGl0IG1hZGUgbWUgY29uc2lkZXIgYSBmZXcgdGhpbmdzLgpUbyBtZSBhdCBsZWFzdCwgaXQgbGFzdGVkIGFsbCBkYXkgb25jZSBJIHNldCBteSBtYWtldXAgd2l0aCBVRCBBbGwgTmlnaHRlci4gCkluIGNvbnRyYXN0LCBkaXN1c2VkIHBhc3N3b3JkcyBjYW4gYmUgZm9yZ290dGVuIHdpdGhpbiBkYXlzLi4gClRoZSBBbWVyaWNhbiBMZWdpb24gQXV4aWxpYXJ5IGhlbGQgdGh0ZWlyIHJlZ3VsYXIgbWVldGluZyBhdCB0aGU7IER1Z291dCBvbiBNb25kYXkgZXZlbmluZyB3aXRoIE1pc3MgRG9yaXMgQ2Fyc3RlbnNlbiBhcnJpdmVkIGZpdmUgdmlzaXRpbmcgbWVtYmVycyBwcmVzZW50LiAKSXQgd2FzIGFuIGFsbCBib3lzIGNsdWIgdW50aWwgMTk4MCB3aGVuLCBhbmVjZG90ZSBoYXMgaXQsIHRoZSBzaWducyBvbiB0aGUgbGF2YXRvcmllcyB3ZXJlIGNoYW5nZWQgdG8gcmVhZDogWW91cmNlbmFyLiAKTWFudWFsZSBEaSBDYXN0ZWdnaW8gLiBDb2NrdGFpbCBmdWxsIG1vdmllIGRvd25sb2FkIHRocm91Z2ggdXRvcnJlbnQgMTkgdGhvbWFzIG5hZ2VsIHdoYXQgZG9lcyBpdCBhbGwuIFJlc3VsdHMgMSAgIDE2IG9mIDExNyAuIApJdCB3YXMgdG9ydHVyZSB3aGVuIGFuIGFjZSBjYW1lIG9uIHRoZSByaXZlciBhbmQgSSBsb3N0IHRoZSBoYW5kLiBPbmx5IGFuIGhvdXIgbGF0ZXIsIGluIHRoZSBiaWcgYmxpbmQsIEkgd2FzIGFnYWluIGRlYWx0IHBvY2tldCBzaXhlcyB3aGVuIHRoZSBwbGF5ZXIgaW4gdGhlIHNtYWxsIGJsaW5kIG1vdmVkIG1lIGFsbCBpbi4gVGhlIGJsaW5kcyB3ZXJlIDgsMDAwLzE2LDAwMCBhbmQgSSBvbmx5IGhhZCA4MCwwMDAgcmVtYWluaW5nLiAKQnJvd24gZW5jb3VyYWdlcyB5b3UgdG8gZXhwbG9yZSBtYW55IGFyZWFzLiBNYWtlIHN1cmUgdG8gZG8gdGhhdC4gCldoYXQgaXMgdHdvIHBhaXIgaW4gcG9rZXIKSSBkbyBub3QgZG8gc3BpbiBjbGFzc2VzLCBidXQgSSBjeWNsZSBwcmV0dHkgcmVsaWdpb3VzbHkuIApTbWFydHBob25lIGNvbXBhdGliaWxpdHkgaXMgYW5vdGhlciBwZXJrIG9mIHRoaXMgZml0bmVzcyB0cmFja2VyLiAKSWYgeW91ciBnb29kIGVub3VnaCB0byB3aW4gYW5kIGdldCBhY2NlcHRlZCBpbnRvIGEgcmVhbCB0b3VybmFtZW50IHRoZW4geW91IHNob3VsZCBiZSB3ZWxsIG9uIHlvdXIgd2F5LiAKUm9zcyBEb3V0aGF0IHBvaW50cyBvdXQgaW4gdG9kYXkgTmV3IFlvcmsgVGhpcyBncmltIHBvc3NpYmlsaXR5IGlzIGltcGxpY2l0IGluIHRoZSBSb2xsaW5nIFN0b25lIHByb2ZpbGUgdGhhdCB1bmRpZCBHZW4uIApUaGUgZm9sbG93aW5nIGRheSB3ZSB3ZW50IG9uIGEgMTIgaXNsYW5kIGJvYXQgdG91ci4gCkxhZHkgR2FHYSBoYXMgcmVsZWFzZWQgdHdvIGFsYnVtcyBzbyBmYXI6IFRoZSBGYW1lIGFuZCBUaGUgRmFtZSBNb25zdGVyLiAKIk1lIGFuZCBteSBkYWQgc3RpbGwgZ2V0IHBob25lIGNhbGxzIGZyb20gY2hhcml0aWVzIGFuZCBwbGF5ZXJzIGFuZCBkZWFsZXJzIGp1c3QgYWJvdXQgZXZlcnkgZGF5LCIgaGUgc2FpZC4gUGFydCBvZiB0aGUgcHJvcG9zZWQgY29tcHJvbWlzZSBieSB0aGUgc3RhdGUgR2FtaW5nIENvbnRyb2wgQm9hcmQgd291bGQgYWxsb3cgZXZlbnRzICJhdCBuZWFybHkgYW55IGxvY2F0aW9uIGluIHRoZSBzdGF0ZSwgaW5jbHVkaW5nIGJhcnMsIGNodXJjaGVzLCBzY2hvb2xzLCBmcmF0ZXJuYWwgaGFsbHMsIGNvbW11bml0eSBjZW50ZXJzLCBvciBvdGhlciBsb2NhdGlvbnMiIGFuZCBhbGxvdyBjaGFyaXRpZXMgb3IgYSBsaWNlbnNlZCBzdXBwbGllciB0byBydW4gZXZlbnRzLgpTY29yZWxlc3NQaW5lICAyIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpNb250aGx5IENvaW5zQXMgYSB0aGFuayB5b3UgdG8gb3VyIFByZW1pdW0gbWVtYmVycywgeW91J2xsIGdldCBhIHNwZWNpYWwgb25lIHRpbWUgYm9udXMgb2YgMSwwMDAgQ29pbnMganVzdCBmb3Igam9pbmluZywgYW5kIHRoZXJlYWZ0ZXIgZWFybiA3MDAgZXZlcnkgbW9udGguIFVzZSB5b3VyIENvaW5zIHRvIGF3YXJkIGV4dHJhb3JkaW5hcnkgY29udHJpYnV0aW9ucyB0byBSZWRkaXQuCldvdy4gVGhpcyBpcyBwcmVmZWN0LiBUaGFua3MgZm9yIHB1dHRpbmcgaXQgYWxsIHRvZ2V0aGVyLiAKRW4gZmV1aWxsZXRhbnQgbGVzIHBldGl0ZXMgYW5ub25jZXMgZGFucyBsZSBxdW90aWRpZW4gcmdpb25hbCwgb24gcmVtYXJxdWUgdW5lIHB1YmxpY2l0IHBvcnRhbnQgbGUgdGl0cmUgTWFzc2FnZSBBc2lhbiBTcGEuIERhbnMgc2EgZGVzY3JpcHRpb24sIG9uIHkgbWVudGlvbm5lIGxlIG1tZSBudW1ybyBkZSB0bHBob25lIHF1ZSBjZWx1aSBpbmRpcXUgZGFucyBsYSB2aXRyaW5lIGR1IGNvbW1lcmNlLiBMJ2FkcmVzc2UgZXN0IGdhbGVtZW50IGxhIG1tZSwgbWFpcyBsZXMgaGV1cmVzIGQnb3V2ZXJ0dXJlIGRpZmZyZW50IDogZGUgOSBoICAyNCBoLCA3IGpvdXJzIHBhciBzZW1haW5lLiBPbiB5IGFqb3V0ZSBnYWxlbWVudCBub3V2ZWxsZSBqZXVuZSBmaWxsZS4KQW5kIGZvciBvdXIgdGhyaWxsaW5nIG1haW4gZmVhdHVyZSwgdGhlIGgyZzIgUG9zdCBwYXlzIHRyaWJ1dGUgdG8gQ2hvY29sYXRlIGFuZCBCZWV0cm9vdCBDYWtlLCB0aGUgdGFzdGUgc2Vuc2F0aW9uIHRoYXQgd29uIHRoZSB3YXIuIApJIGhhdmUgYSBiYWQgc2Vuc2Ugb2Ygc21lbGwgYW5kIGp1c3QgZGlkbiB0aGluayBJIHNtZWxsZWQuIApJbWFnaW5lLCBob3dldmVyLCBhIHN0YXVuY2ggY29uc2VydmF0aXZlIGVudGVyaW5nIGFuIEFwcGxlYmVlcyBhbmQgYmVpbmcgZm9yY2VkIHRvIGxpc3RlbiB0byB0aGF0IGx5aW5nIGxpYmVyYWwgd2hvcmUgUmFjaGVsIE1hZGRvdyBmb3IgYSBmZXcgbWludXRlcyEgSXQgZWFzaWVyIHRvIHBpY3R1cmUgc291ciBmYWNlZCBjb25zZXJ2YXRpdmVzIGNvbXBsYWluaW5nIHRvIG1hbmFnZW1lbnQgYWJvdXQgdGhlIGNvbnRlbnQgb24gdGhlaXIgcHVibGljIFRWIHNjcmVlbnMuLiAKTWF5YmUgeW91IHdpbGwgZmluZCB5b3VyIHdheSBiYWNrIHRvIHRoZSBzdW4uIApDYW4gdGhlbSBhbGwsIHN0b3JlIHRoZW0gaW4gdGhlIGJhc2VtZW50LCBoYXZlIGxpa2UgYSBoYXJ2ZXN0IHBhcnR5IHdoZW4gaXQgZ2V0cyBsb2FkZWQgaW4uLiAKTXkgaGVhbHRoIHdhcyBnZW5lcmFsbHkgZ29vZCBidXQgSSBoYWQgbWFueSBvZiB0aGUgdHlwaWNhbCBwcm9ibGVtcyBhc3NvY2lhdGVkIHdpdGggbG9uZyB0ZXJtIG9iZXNpdHkuIApQcmVzaWRlbnQgT2JhbWEgaGFzIGhhZCBoaXMgY29tZXVwcGFuY2UgaW4gdGhlIG1pZHRlcm0gY29uZ3Jlc3Npb25hbCBlbGVjdGlvbnMuIEhlIGxvb2tzIGNoYXN0ZW5lZCBhbmQgYSBiaXQgYmVhdGVuLiBUaGUgQW1lcmljYW4gZWxlY3RvcmF0ZSBoYWQgYSBjaG9pY2UgYW5kIGl0IGhhcyBleGVyY2lzZWQgaXQuIApSYXZpZDogQ2VydGFpbmx5LCB0aGVyZSBpcyBhIGJlbmVmaXQgdG8gYmVpbmcgbm9taW5hdGVkIGFuZCB3aW5uaW5nIHRoZSBhd2FyZC4gCklmIHlvdSBmZWVsIGxpa2UgeW91ciBhIGJ1cmRlbiB0byBwZW9wbGUgdHJ5IHRvIGFzayB5b3Vyc2VsZiB3aHkuIElmIHlvdSBjYW4ndCBhbnN3ZXIgdGhlIHF1ZXN0aW9uIGxvb2sgb24gdGhlIGludGVybmV0IGFib3V0IG90aGVyIHBlb3BsZSdzIHN0b3JpZXMgYW5kIHdoYXQgdGhleSBmZWx0IGFib3V0IHRoZSBwZW9wbGUgYXJvdW5kIHRoZW0gYW5kIHNlZSBpZiB5b3UgZmVlbCBsaWtlIHlvdSBjYW4gcmVsYXRlLiAKVGhlIGl0ZW1zIGluY2x1ZGUgc3dvcmRzIHVzZWQgYnkgRHJvbmEgYW5kIHRoZSB2aWxsYWluLCBSaXogUmF6YWlkYTsgYSBtYWdpYyBib3g7IGFuZCBEcm9uYSdzIGNhcGUuIApCdXQgZXZlbiB0aGF0IHdhcyBzaG9ydCBsaXZlZC4uIAo=|<---