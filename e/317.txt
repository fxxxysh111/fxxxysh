<!DOCTYPE doctype html>
<html dir="ltr" lang="en">
 <head>
  <base href="https://play.google.com/"/>
  <meta content="origin" name="referrer"/>
  <meta content="IE=10" http-equiv="X-UA-Compatible"/>
  <meta content="PJKdyVFC5jlu_l8Wo_hirJkhs1cmitmn44fgpOc3zFc" name="google-site-verification"/>
  <meta content="A6H2WZG5rRIUFFopIQcyPeabS5ffxhFlhTiyhzWGPRA" name="google-site-verification"/>
  <meta content="website" property="og:type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="Cake(케이크): 영어 회화, 스피킹, 리스닝 모두 해결 - Apps on Google Play" name="twitter:title">
   <title id="main-title">
    [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description" property="og:description"/>
   <meta content="https://lh3.googleusercontent.com/MM85oNWP9hPL15iZOT4g3JSx5-YOqf11xbx663dcbr4YcmVynVMjITsFPSSDTDAAJaQ" property="og:image"/>
   <meta content="https://lh3.googleusercontent.com/MM85oNWP9hPL15iZOT4g3JSx5-YOqf11xbx663dcbr4YcmVynVMjITsFPSSDTDAAJaQ" name="twitter:image"/>
  </meta>
 </head>
 <div class="QKtxw" id="fcxH9b" jsmodel="jnH8Sb">
  <body class="tQj5Y ghyPEc IqBfM e2G3Fb EWZcud k8Lt0" data-has-footer="true" data-ih="120" data-iw="600" id="yDmH0d" jsaction="rcuQ6b:npT2md;click:FAbpgf" jscontroller="pjICDe">
   <c-wiz data-legacy-base-path-prefix="https://play.google.com" data-node-index="3;0" data-p="%.@.]
" jsaction="rcuQ6b:npT2md; submit:GNwXB; input:w2SLu;" jscontroller="mqk2rb" jsdata="deferred-i1" jsmodel="hc6Ubd HBRW5b" jsname="OEs3Cf" jsrenderer="rGsFle" jsshadow="">
    <c-wiz jsdata="deferred-i2" jsmodel="hc6Ubd" jsshadow="">
     <div>
      <div id="gbar">
       <nobr>
        [ahref]
        
        [link]
        
        [ahref]
        
        <a class="gb1" href="/?tab=8o">
         Drive
        </a>
        <a class="gb1" href="/calendar?tab=8c">
         Calendar
        </a>
        [ahref]
        
        [ahref]
        
        <a class="gb1" href="/?hl=en&amp;tab=8v">
         Videos
        </a>
        <a class="gb1" href="/intl/en/about/products?tab=8h" style="text-decoration:none">
         <u>
          More
         </u>
         »
        </a>
       </nobr>
      </div>
      <div id="guser" width="100%">
       <nobr>
        <span class="gbi" id="gbn">
         [ahref]<li>[ahref]</li>[ahref][search]<li>[link]</li><li>[ahref]</li>
        </span>
        <span class="gbf" id="gbf">
         <li>[search]</li><li>[search]</li><li>[ahref]</li>[link]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
        </span>
        <span id="gbe">
         [ahref][search][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]
        </span>
       </nobr>
      </div>
      <div class="gbh" style="left:0">
      </div>
      <div class="gbh" style="right:0">
      </div>
     </div>
     <c-data id="i2">
     </c-data>
    </c-wiz>
    <c-data id="i1" jsdata=" Gz1Cwb;_;1">
    </c-data>
   </c-wiz>
   <div jsaction="rcuQ6b:Rayp9d;" jscontroller="VQbeBe">
    <div jsaction="rcuQ6b:YUF6vf" jscontroller="Tc5Ble">
     <div class="sZwd7c B6Vhqe qdulke jK7moc Cq5pMb" jsaction="transitionend:Zdx3Re" jscontroller="ltDFwf" jsname="Igk6W" role="progressbar">
      <div class="xcNBHc um3FLe">
      </div>
      <div class="w2zcLc Iq5ZMc" jsname="cQwEuf">
      </div>
      <div class="MyvhI TKVRUb" jsname="P1ekSe">
       <span class="l3q5xe SQxu9c">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[ahref]</li>[ahref]<li>[link]</li>[link]<li>[search]</li>
       </span>
      </div>
      <div class="MyvhI sUoeld">
       <span class="l3q5xe SQxu9c">
        [ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link][search][search]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
       </span>
      </div>
     </div>
     <div class="XDXaGc" jsname="uZXxQc" style="display: none">
     </div>
    </div>
    <c-wiz class="Knqxbd tzLNed Mfkobe" data-node-index="2;0" data-p="%.@.[1,1]
]
" data-selected-corpus-id="1" jsaction="rcuQ6b:Rayp9d; blur:C0ntFf; mouseleave: C0ntFf;jd9b9e:C0ntFf;cY8qRd:dpbS5;EY8hMd:G3Uxgd;dERoL:umQQ7b;" jscontroller="kRhlSb" jsdata="deferred-i3" jsmodel="hc6Ubd vFJKcf" jsname="HXIGjc" jsrenderer="NVKKEe" jsshadow="">
     <div class="ZpIPg" jsname="aDLa4e" tabindex="-1">
     </div>
     <span class="znPNx" jsaction="mouseenter:dpbS5" jsname="zyXJec">
      [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[search][ahref]
     </span>
     <ul class="XBXPXc wEDdvc" jsname="SW97x" role="navigation">
      <li class="uQeS5e qKjvAb J919pd" data-item-id="1" data-selected="true" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       [link]
       
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         [link]
         
        </li>
        <li class="AhXF6c ">
         [ahref]
         
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/apps/category/GAME">
          <span class="Mqdrgf">
           [ahref][search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search]
          </span>
          <span class="null">
           Games
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/apps/category/FAMILY">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Family
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/apps/topic?id=editors_choice">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Editors' Choice<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li><li>[link]</li><li>[ahref]</li>[ahref]
          </span>
         </a>
        </li>
       </ul>
      </li>
      <li class="uQeS5e N41Tic iZhiic oPekyc" data-item-id="9" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/movies" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <li>[search]</li><li>[search]</li>[link]<li>[search]</li>[ahref]
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Movies &amp; TV[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][ahref][ahref][link][ahref][search]<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[link]<li>[ahref]</li>[search][search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>
         </span>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         [link]
         
        </li>
        <li class="AhXF6c ">
         <a class="WhMnYc gWazle" href="/store/movies" jsname="rSwqg">
          Shop
         </a>
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         [link]
         
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/movies/category/FAMILY">
          <span class="Mqdrgf">
           <li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][search]<li>[ahref]</li><li>[ahref]</li>
          </span>
          <span class="null">
           Family
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/movies/stream/promotion_collections_movie_studios">
          <span class="Mqdrgf">
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </span>
          <span class="null">
           Studios
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/movies/stream/promotion_collections_tv_networks">
          <span class="Mqdrgf">
          </span>
          <span class="null">
           Networks[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[ahref]</li>[link][ahref]
          </span>
         </a>
        </li>
       </ul>
      </li>
      <li class="uQeS5e od7MSc iZhiic oPekyc" data-item-id="4" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/music" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         [ahref]
         
        </li>
        <li class="AhXF6c ">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e WEMC7e iZhiic oPekyc" data-item-id="5" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/books" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span class="S6Rud" jsname="vdp2Fc">
          <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
         </span>
         <span class="pvVVcb" jsname="r4nke">
          Books<li>[link]</li>[ahref][link][ahref]<li>[ahref]</li>[ahref]<li>[link]</li>[link]<li>[link]</li><li>[search]</li>[search]<li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c id-track-click">
         <a class="WtH9qd " href="/books" jsname="IdGokb">
          My books
         </a>
        </li>
        <li class="AhXF6c ">
         <a class="WhMnYc gWazle" href="/store/books" jsname="rSwqg">
          Shop
         </a>
        </li>
        <li aria-hidden="true" class="POfIAc">
        </li>
        <li class="fle8Af">
         [link]
         
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/books/category/coll_1401">
          <span class="Mqdrgf">
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
          <span class="null">
           Comics[link]<li>[search]</li>[search]<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </span>
         </a>
        </li>
        <li class="fle8Af">
         <a class="gm1qLe" href="/store/books/category/coll_1673">
          <span class="Mqdrgf">
           <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
          </span>
          <span class="null">
           Textbooks
          </span>
         </a>
        </li>
        <li class="fle8Af">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="uQeS5e KVqzMb iZhiic oPekyc" data-item-id="7" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store/devices" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <li>[ahref]</li>[search]<li>[link]</li>[ahref][ahref][link]<li>[search]</li>
        </span>
       </a>
       <ul class="APEy4b EGz53e" jsname="E7tEZe">
        <li class="AhXF6c ">
         <a class="WhMnYc gWazle" href="/store/devices" jsname="rSwqg">
          Shop
         </a>
        </li>
       </ul>
      </li>
      <li class="uQeS5e KhlB4 iZhiic oPekyc" data-item-id="8" data-selected="false" data-sub-item-id="1" jscontroller="fOzGvb" jsname="SSKL5e">
       <a class="mzRh0d" href="/store" jsaction="focusin:sbHm2b; mouseover:sbHm2b" jsname="UOtaxb">
        <span class="zyvEve" jsname="pSKjQb">
         <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][ahref]<li>[ahref]</li><li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
        </span>
       </a>
      </li>
     </ul>
     <div jsaction="focus:C0ntFf">
      <ul class="CoKTif" jsname="EkaWNc">
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/account">
         <span class="Mqdrgf">
          <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>
         </span>
         <span class="null">
          Account<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[ahref]
         </span>
        </a>
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/store/account/subscriptions">
         <span class="Mqdrgf">
          <li>[link]</li>[search]<li>[link]</li>[link]<li>[search]</li>
         </span>
         <span class="null">
          My subscriptions<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
        </a>
       </li>
       <li class="fle8Af id-track-click">
        [ahref]
        
       </li>
       <li class="fle8Af">
        [ahref]
        
       </li>
       <li class="fle8Af">
        [link]
        
       </li>
       <li class="fle8Af">
        <h3>
         [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <a class="gm1qLe" href="/store/myplayactivity">
         <span class="Mqdrgf">
          [link][link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <span class="null">
          My Play activity
         </span>
        </a>
       </li>
       <li class="fle8Af">
        <a class="gm1qLe" href="/googleplay?p=pff_parentguide">
         <span class="Mqdrgf">
          <li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[link][search]<li>[link]</li><li>[search]</li><li>[link]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
         </span>
         <span class="null">
          Parent Guide<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
         </span>
        </a>
       </li>
       <li class="YWGNae">
       </li>
      </ul>
     </div>
     <c-data id="i3" jsdata=" Mc5Qae;_;2">
     </c-data>
    </c-wiz>
    <c-wiz data-node-index="0;0" data-p="%.@.1]
" jsdata="deferred-i4" jsmodel="hc6Ubd" jsrenderer="fgZ3Zd" jsshadow="">
     <div class="wkJZwc rXI5N j0qzGf" data-country="US" data-locale="en-US" jsaction="EY8hMd:G3Uxgd;kLjSF:JJR6ye;" jscontroller="aqLWcd" jsmodel="lwqmbc" role="navigation">
      <div class="Rc8qze sVEEmc">
       <div class="t5eBue ovVTif">
        <div class="mZr3Me">
         <div class="wvAFH" jscontroller="end4Ge">
          <div class="JRhuKe" jsaction="click:PZcoEd;" jsname="j4gsHd">
           <button aria-controls="action-dropdown-children-Categories" aria-expanded="false" aria-haspopup="true" aria-owns="action-dropdown-children-Categories" class="qAAUy" id="action-dropdown-parent-Categories" jsname="kRX3Ve">
            <span class="TwyJFf">
             Categories[search]<li>[search]</li><li>[link]</li><li>[link]</li><li>[search]</li><li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[link]</li><li>[ahref]</li><li>[link]</li>[link]<li>[search]</li>[link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </span>
            <span class="kgGUm">
             <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]<li>[link]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
            </span>
           </button>
          </div>
          <div aria-labelledby="action-dropdown-parent-Categories" class="zxErU" id="action-dropdown-children-Categories" jsname="tQZUQd" style="display:none">
           <div class="LNKfBf">
            <ul>
             <li class="CRHL7b eZdLre">
              <ul class="TEOqAc">
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/EDUCATION" title="Education">
                 Education
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/FINANCE" title="Finance">
                 Finance
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/HOUSE_AND_HOME" title="House &amp; Home">
                 House &amp; Home
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/MEDICAL" title="Medical">
                 Medical
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/PARENTING" title="Parenting">
                 Parenting
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/PHOTOGRAPHY" title="Photography">
                 Photography
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/SHOPPING" title="Shopping">
                 Shopping
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/TRAVEL_AND_LOCAL" title="Travel &amp; Local">
                 Travel &amp; Local
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/VIDEO_PLAYERS" title="Video Players &amp; Editors">
                 Video Players &amp; Editors
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
              </ul>
             </li>
             <li class="CRHL7b eZdLre">
              <ul class="TEOqAc">
               <li class="GL7Kod">
                <a class="zyz7Fb" href="/store/apps/category/GAME" title="Games">
                 Games
                </a>
               </li>
               <li class="YcEAid">
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_ACTION" title="Action">
                 Action
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_ARCADE" title="Arcade">
                 Arcade
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_BOARD" title="Board">
                 Board
                </a>
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_MUSIC" title="Music">
                 Music
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_PUZZLE" title="Puzzle">
                 Puzzle
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_RACING" title="Racing">
                 Racing
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_SIMULATION" title="Simulation">
                 Simulation
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/GAME_WORD" title="Word">
                 Word
                </a>
               </li>
              </ul>
             </li>
             <li class="CRHL7b eZdLre">
              <ul class="TEOqAc">
               <li class="GL7Kod">
                <a class="zyz7Fb" href="/store/apps/category/FAMILY" title="Family">
                 Family
                </a>
               </li>
               <li class="YcEAid">
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/FAMILY?age=AGE_RANGE2" title="Ages 6-8">
                 Ages 6-8
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/FAMILY?age=AGE_RANGE3" title="Ages 9 &amp; Up">
                 Ages 9 &amp; Up
                </a>
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/info/collection/promotion_family_popular_characters" title="Popular Characters">
                 Popular Characters
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/FAMILY_BRAINGAMES" title="Brain Games">
                 Brain Games
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                <a class="r2Osbf" href="/store/apps/category/FAMILY_EDUCATION" title="Education">
                 Education
                </a>
               </li>
               <li class="KZnDLd">
                [ahref]
                
               </li>
               <li class="KZnDLd">
                [link]
                
               </li>
              </ul>
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="mZr3Me">
         <div class="JvjCjf">
         </div>
        </div>
        <div class="mZr3Me">
         <div class="jGu02">
          [ahref]
          
         </div>
        </div>
        <div class="mZr3Me">
         <div class="jGu02">
          [link]
          
         </div>
        </div>
        <div class="mZr3Me">
         <div class="jGu02">
          <a class="L9ZZW uJjCzb" href="/store/apps/new">
           New Releases
          </a>
         </div>
        </div>
        <div class="b7cPmf">
         <div class="mZr3Me">
          <button class="LkLjZd ScJHi nMZKrb CVBexe g3P27d id-track-click " data-uitype="112" jsaction="rcuQ6b:rcuQ6b; L1KARc" jscontroller="VrOwqf" title="Help">
           <span class="L9ZZW">
            [ahref][link]<li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[ahref]
           </span>
          </button>
         </div>
         <div class="mZr3Me ">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </div>
     <c-data id="i4" jsdata=" ULZlTb;_;5">
     </c-data>
    </c-wiz>
   </div>
   <div aria-labelledby="main-title" class="id-body-content-beginning" tabindex="-1">
   </div>
   <div class="zXYjDf" id="wBcokc" style="display:none">
    <span class="aPliFd" id="X3SwIb">
     [search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[search]</li>[search][ahref]<li>[search]</li>[link]
    </span>
   </div>
   <c-wiz jsaction="XndO6: WHyGDc" jscontroller="R6xS0b" jsdata="deferred-i5" jsmodel="hc6Ubd" jsshadow="">
    <c-data id="i5">
    </c-data>
   </c-wiz>
   <div class="WpDbMd" jsname="LcUpsb">
    <c-wiz class="zQTmif SSPGKf I3xX3c drrice" data-node-index="0;0" data-ogpc="" data-p='%.@.["me.mycake",7]
,false,false,[false]
,true,[27,4,8,57,30,11,16,49,1,3,9,12,55,56,10,34,77]
]
' jscontroller="tiSncc" jsdata="deferred-i6" jslog="43407; 1:2|CBSqARUKEwjc746qpZrfAhWWf2gKHWUeCTk=; track:impression" jsmodel="hc6Ubd" jsrenderer="Z5wzge">
     <div class="T4LgNb" jsname="a9kxte">
      <div class="VjFXz">
      </div>
      <div class="ZfcPIb">
       <div class="UTg3hd">
        <div class="JNury Ekdcne">
         <div class="LXrl4c">
          <c-wiz data-node-index="3;0" data-p='%.@.["me.mycake",7]
,false,false]
' jsdata="deferred-i7" jsmodel="hc6Ubd" jsrenderer="rDSaC" jsshadow="">
           <c-wiz data-node-index="1;0" data-p='%.@.["me.mycake",7]
,false]
' jsdata="deferred-i8" jsmodel="hc6Ubd" jsrenderer="uYqOpb" jsshadow="">
            <div class="oQ6oV">
             <div class="hkhL9e">
              <div class="dQrBL">
              </div>
             </div>
             <div class="D0ZKYe">
              <div class="rlnrKc">
               <div class="sIskre">
                <c-wiz data-node-index="10;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i9" jsmodel="hc6Ubd" jsrenderer="vVnOi" jsshadow="">
                 <h1 class="AHFaub" itemprop="name">
                  [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
                 </h1>
                 <c-data id="i9" jsdata=" OKeYaf;_;11">
                 </c-data>
                </c-wiz>
                <div class="jdjqLd">
                 <div class="ZVWMWc">
                  <div class="i4sPve">
                   <span class="T32cc UAO9ie">
                    Playlist Corporation[ahref][search][link]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                   </span>
                   <span class="T32cc UAO9ie">
                    [link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
                   </span>
                  </div>
                  <div class="i4sPve">
                   <div class="KmO8jd">
                    Everyone
                   </div>
                  </div>
                 </div>
                 <div class="dNLKff">
                  <c-wiz data-node-index="8;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i10" jsmodel="hc6Ubd" jsrenderer="GxnCG" jsshadow="">
                   <div class="pf5lIe">
                    <div aria-label="Rated 4.8 stars out of five stars" role="img">
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="vQHuPe bUWb7c">
                     </div>
                     <div class="L0jl5e bUWb7c cm4lTe">
                      <div class="vQHuPe bUWb7c D3FNOd" style="width: 82.21139907836914%">
                      </div>
                     </div>
                    </div>
                   </div>
                   <span class="AYi5wd TBRnV">
                    <span aria-label="4,115 ratings" class="">
                     4,115
                    </span>
                    <span class="O3QoBc qLorRc">
                     <li>[ahref]</li><li>[ahref]</li>[ahref]<li>[search]</li><li>[link]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[link]</li><li>[link]</li><li>[search]</li>[search][ahref][ahref]
                    </span>
                   </span>
                   <c-data id="i10" jsdata=" V4l1v;_;6">
                   </c-data>
                  </c-wiz>
                 </div>
                </div>
                <c-wiz autoupdate="" data-node-index="1;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i11" jsmodel="hc6Ubd" jsrenderer="TAD86b" jsshadow="">
                 <c-data id="i11">
                 </c-data>
                </c-wiz>
               </div>
               <div class="wE7q7b">
                <div class="i9550b">
                 <div class="KO5dHd">
                  <c-wiz autoupdate="" data-node-index="3;0" data-p='%.@.["me.mycake",7]
,null,false]
' jsdata="deferred-i12" jsmodel="hc6Ubd" jsrenderer="MGKh8" jsshadow="">
                   <c-wiz autoupdate="" data-node-index="0;0" data-p='%.@.null,["me.mycake",7]
,false]
' jsdata="deferred-i13" jsmodel="hc6Ubd" jsrenderer="JuzNtf" jsshadow="">
                    <c-data id="i13" jsdata=" v3Bbmc;unsupported;16 v3Bbmc;unsupported;16 v3Bbmc;unsupported;16">
                    </c-data>
                   </c-wiz>
                   <c-data id="i12">
                   </c-data>
                  </c-wiz>
                 </div>
                 <div class="hfWwZc">
                  <div class="iDoEAf">
                   <c-wiz autoupdate="" data-node-index="7;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i14" jsmodel="hc6Ubd" jsrenderer="rxFDD" jsshadow="">
                    <wishlist-add>
                     <button aria-label="Add to wishlist" class="V2rsl " data-item-id='%.@."me.mycake",7]
' jsaction="rcuQ6b:WYd;focus:AHmuwe; blur:O22p3e; mouseup:GfWc1e; touchend:GfWc1e;click:OuTedb;" jscontroller="q8NYMd" jslog="38005; 1:204; track:click; mutable:true" jsmodel="c7dHKc">
                      <span class="VMIf2c r1Rcnb">
                       <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                      </span>
                      <span class="lmqfOc nSYH7e">
                       Add to Wishlist
                      </span>
                     </button>
                    </wishlist-add>
                    <c-data id="i14">
                    </c-data>
                   </c-wiz>
                  </div>
                  <div class="hwKISe">
                   <c-wiz autoupdate="" data-node-index="0;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i15" jsmodel="hc6Ubd" jsrenderer="z2mnpe" jsshadow="">
                    <div>
                     <span class="oocvOe">
                      <li>[search]</li>[search][link][ahref]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[ahref]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                     </span>
                    </div>
                    <c-data id="i15" jsdata=" sCuaec;_;7 OKeYaf;_;11 pH8t9b;_;4">
                    </c-data>
                   </c-wiz>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <c-data id="i8" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-wiz data-node-index="2;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i16" jsmodel="hc6Ubd K1jl3e" jsrenderer="tet8yd" jsshadow="">
            <div class="XYLQ2b" data-slideable-portion-heuristic-width="4100" jsaction="rcuQ6b:npT2md;Jj4WTd:iksoyf;" jscontroller="BDrzMb">
             <div class="xmkADf" jsaction="mousedown:q1TRae; mouseup: V43Ssf; mouseleave:V43Ssf" jsname="PjUZJf">
              <div class="a2zAnf" jsname="ZlDilf">
              </div>
             </div>
             <div class="FaSaxe Eg31qe" jsname="CmYpTb">
              <div class="KDxLi" jsname="pCbVjb">
               <div class="MSLVtf NIc6yf" jsname="WR0adb">
                <div class="TdqJUe">
                 <button aria-label="Play Cake(케이크): 영어 회화, 스피킹, 리스닝 모두 해결" class="lgooh " data-item-id="me.mycake" data-item-type="7" data-trailer-url="https://www.youtube.com/embed/X8JGGRUdj1s?ps=play&amp;vq=large&amp;rel=0&amp;autohide=1&amp;showinfo=0" jsaction="click:axChxd" jscontroller="HnDLGf" jsname="pWHZ7d">
                 </button>
                </div>
               </div>
               <button aria-label="Open screenshot 0" class="NIc6yf" data-screenshot-item-index="0" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 1" class="NIc6yf" data-screenshot-item-index="1" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 2" class="NIc6yf" data-screenshot-item-index="2" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 3" class="NIc6yf" data-screenshot-item-index="3" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 4" class="NIc6yf" data-screenshot-item-index="4" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 5" class="NIc6yf" data-screenshot-item-index="5" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 6" class="NIc6yf" data-screenshot-item-index="6" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
               <button aria-label="Open screenshot 7" class="NIc6yf" data-screenshot-item-index="7" jsaction="click:O1htCb" jscontroller="jt8Aqb" jsname="WR0adb">
               </button>
              </div>
             </div>
             <div class="xmkADf p4mP1d" jsaction="mousedown:Ak0pgd; mouseup: V43Ssf; mouseleave:V43Ssf" jsname="kZCROc">
              <div class="IjjTBf" jsname="RWbse">
              </div>
             </div>
            </div>
            <c-data id="i16" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-wiz data-node-index="0;0" data-p='%.@.["me.mycake",7]
]
' jscontroller="wqd1Zc" jsdata="deferred-i17" jsmodel="hc6Ubd" jsrenderer="FWvnoe" jsshadow="">
            <div class="FvYhIc">
             <span class="PCKMSe">
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[link]</li>
             </span>
             <span class="IImhOd">
             </span>
             <span jsname="sngebd">
              Translate the description into English (United States) using Google Translate?
             </span>
             <span jsname="Igi1ac" style="display: none;">
              Translate the description back to Korean (South Korea)<li>[search]</li><li>[search]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <div class="yDynte">
              <button class="LqEOEf LkLjZd ScJHi nMZKrb " jsaction="click:GUAMQb">
               Translate
              </button>
             </div>
             <div style="clear: both">
             </div>
            </div>
            <div class="JHTxhe IQ1z0d">
             <div class="W4P4ne ">
              <div class="wSaTQd">
              </div>
              <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
              <h1 aria-label="Description">
               [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
              </h1>
              <div class="PHBdkd" data-content-height="144" jsaction="rcuQ6b:npT2md" jscontroller="IsfMIf" jsshadow="">
               <div class="DWPxHb" itemprop="description" jsname="bN97Pc">
                <content>
                 <div jsname="sngebd">
                  🍰 1분: 살아있는 영어 표현 내 꺼 만드는 시간!
                  <br/>
                  꼭 필요한 표현만 유튜브에서 콕 잘랐으니까,
                  <br>
                   <li>[link]</li><li>[link]</li><li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
                  </br>
                  보고만 있어도 내 꺼 되는 영어 표현!​
                  <br/>
                  <br>
                   <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][link]<li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>
                  </br>
                  🍰 주제로 묶여 있는 표현
                  <br/>
                  비슷한 상황/표현을 주제로 묶어 제공하니까,
                  <br/>
                  더 체계적으로 표현을 익힐 수 있어요.
                  <br>
                   <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[ahref]</li>
                  </br>
                  매일 새로운 주제와 표현이 업데이트 돼요!
                  <br/>
                  ​
                  <br>
                   <li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
                  </br>
                  🍰 영어 표현 따라해 보기
                  <br/>
                  표현을 따라하면 어색한 발음을 콕 집어주니까,
                  <br/>
                  조만간 나도 원어민?!
                  <br>
                   <li>[ahref]</li>[link][link]<li>[ahref]</li>[ahref][search][ahref][ahref][search][ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]<li>[link]</li>[link]
                  </br>
                  ​
                  <br>
                   [ahref]<li>[ahref]</li><li>[search]</li>[search][link]<li>[search]</li>[ahref][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search][search][search]<li>[search]</li><li>[search]</li><li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                  </br>
                  🍰 100% 무료 앱!
                  <br/>
                  전 국민 영어 실력 향상 앱 케이크는 무료입니다!
                  <br/>
                  “He can speak, she can speak, why not me?”
                  <br>
                   [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                  </br>
                  ​
                  <br>
                   <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[search][search]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link]<li>[ahref]</li><li>[link]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<li>[search]</li>[link][ahref][link]
                  </br>
                  <br/>
                  [필수 접근 권한 상세]
                  <br>
                   [ahref][search][link]<li>[ahref]</li>[link][search][ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
                  </br>
                  저장 공간: 썸네일 및 녹음 파일 저장 및 열람
                  <br/>
                  휴대폰/기기ID : 디바이스 내 저장된 기기 관련 정보 확인
                  <br/>
                  Wi-Fi 연결 정보 : 영상 시청시 데이터 소모 여부 안내
                  <br>
                   [link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </br>
                  <br>
                   [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
                  </br>
                  [선택 접근 권한]
                  <br>
                   [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[ahref]<li>[link]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                  </br>
                  마이크: 음성 녹음
                  <br/>
                  <br/>
                  * 선택 접근권한은 동의하지 않아도 앱을 사용하실 수 있습니다.
                  <br/>
                  * 케이크 앱의 접근권한은 안드로이드 6.0 이상 버전에 대응하여, 필수 권한과 선택 권한으로 나누어 구현되어 있습니다. 6.0 미만 버전을 사용 중일 경우 선택 권한을 개별적으로 허용할 수 없으므로, 보유하고 있는 단말의 제조사에서 운영체제 업그레이드 기능을 제공하는지 확인해 보신 뒤 가능하다면 6.0 이상으로 업데이트하시는 것을 권장합니다.
                  <br>
                   <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][link][link][link][search]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>
                  </br>
                  ----
                  <br/>
                  개발자 연락처 :
                  <br>
                   <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[link]<li>[link]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                  </br>
                  +82 2-2038-6046
                 </div>
                 <div jsname="Igi1ac" style="display:none;">
                  🍰 One minute: It's time to make a living in English!
                  <br>
                   <li>[ahref]</li>[search][search][link][link][search][link][search]<li>[search]</li>[search][search]<li>[ahref]</li>[link]<li>[ahref]</li><li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search][link][ahref][search][search][link][ahref][search]<li>[search]</li>[ahref]
                  </br>
                  Since only the necessary expressions were cut off on YouTube,
                  <br>
                   <li>[link]</li>[search]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<li>[search]</li>[search]
                  </br>
                  Even if I just have to look at it, my English expression!
                  <br>
                   <li>[link]</li>[link][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[search]<li>[link]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                  </br>
                  <br>
                   [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[search]</li>[ahref]<li>[link]</li>
                  </br>
                  표현 The expression enclosed in the subject
                  <br>
                   [search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][link]
                  </br>
                  Since we provide similar situations / expressions as topics,
                  <br>
                   [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>
                  </br>
                  I can learn expression more systematically.
                  <br>
                   [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][link][ahref]
                  </br>
                  New topics and expressions are updated every day!
                  <br>
                   <li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link][search]
                  </br>
                  <br/>
                  해 Try it in English
                  <br>
                   <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[link]</li><li>[search]</li>
                  </br>
                  When I follow expressions, I pick up the awkward pronunciation,
                  <br/>
                  Sooner or later I'm a native speaker ?!
                  <br/>
                  <br>
                   <li>[ahref]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </br>
                  🍰 100% free app!
                  <br>
                   [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li>[ahref]<li>[link]</li>
                  </br>
                  Improvement of the English proficiency of the whole The app cake is free!
                  <br/>
                  "He can speak, she can speak, why not me?"
                  <br>
                   [search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
                  </br>
                  <br>
                   [search]<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                  </br>
                  <br>
                   [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link][ahref]<li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                  </br>
                  [Required Access Details]
                  <br/>
                  Storage space: Storing and viewing thumbnails and recording files
                  <br>
                   [search][ahref]<li>[link]</li>[search][link]<li>[search]</li><li>[link]</li>[link]
                  </br>
                  Mobile phone / device ID: Check information related to the device stored in the device
                  <br/>
                  Wi-Fi connection information: Whether data is consumed when watching video
                  <br>
                   [search]<li>[ahref]</li><li>[search]</li>[ahref]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
                  </br>
                  <br>
                   <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref][link]<li>[link]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[ahref]</li>
                  </br>
                  [Select access right]
                  <br>
                   <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref]<li>[search]</li><li>[link]</li><li>[ahref]</li>[link]<li>[link]</li>
                  </br>
                  Microphone: Voice recording
                  <br>
                   [ahref][link][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
                  </br>
                  <br/>
                  * You can use the app even if you do not accept the opt-in permission.
                  <br>
                   <li>[ahref]</li><li>[link]</li>[link]<li>[ahref]</li><li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link]
                  </br>
                  * Cake app access rights are supported for Android version 6.0 and above, and are implemented by dividing into mandatory and optional permissions. If you are using a version lower than 6.0, you can not individually allow the selection rights. Therefore, we recommend that you check with the manufacturer of the terminal you are providing the operating system upgrade function and update to 6.0 or higher if possible.
                 </div>
                </content>
                <div class="uwAgLc f3Fr9d" jsname="WgKync">
                </div>
               </div>
               <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="xBmnf">
                <div aria-disabled="false" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
                 <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
                 </div>
                 <div class="ZFr60d CeoRYc">
                 </div>
                 <content class="CwaK9">
                  <span class="RveJvd snByac">
                   Read more<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>
                  </span>
                 </content>
                </div>
               </div>
               <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="zDTjtb">
                <div aria-disabled="false" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
                 <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
                 </div>
                 <div class="ZFr60d CeoRYc">
                 </div>
                 <content class="CwaK9">
                  <span class="RveJvd snByac">
                   Collapse[ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][ahref]<li>[search]</li>
                  </span>
                 </content>
                </div>
               </div>
              </div>
             </div>
             <div class="Njo8s">
             </div>
            </div>
            <c-data id="i17" jsdata=" OKeYaf;_;11">
            </c-data>
           </c-wiz>
           <c-data id="i7">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="5;0" data-p='%.@.["me.mycake",7]
,[false]
]
' jsaction="rcuQ6b:si1QCe" jscontroller="Qa6EOc" jsdata="deferred-i18" jsmodel="hc6Ubd" jsrenderer="qH3aJc" jsshadow="">
           <div class="W4P4ne ">
            <div class="wSaTQd">
             <h2 class="Rm6Gwb">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             [ahref]
             
            </div>
            <c-wiz data-node-index="2;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i19" jsmodel="hc6Ubd" jsrenderer="JV1xu" jsshadow="">
             <div class="K9wGie">
              <div aria-label="Rated 4.8 stars out of five stars" class="BHMmbe">
               4.8
              </div>
              <div class="LvvOW">
               <div aria-label="Rated 4.8 stars out of five stars" role="img">
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="BGNhFb WF1WQd">
                </div>
                <div class="NVmCwd WF1WQd cm4lTe">
                 <div class="BGNhFb WF1WQd D3FNOd" style="width: 82.21139907836914%">
                 </div>
                </div>
               </div>
              </div>
              <span class="EymY4b">
               <span class="O3QoBc hzfjkd">
                [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               <span aria-label="4,115 ratings" class="">
                4,115[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[ahref]</li>[link]
               </span>
               total
              </span>
             </div>
             <div class="VEF2C">
              <div class="mMF0fd">
               <span class="Gn2mNd">
                5
               </span>
               <span class="L2o20d P41RMc" style="width: 100%" title="3,547">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                4[search][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li>
               </span>
               <span class="L2o20d tpbQF" style="width: 12%" title="457">
                <li>[ahref]</li>[ahref]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                3<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><li>[link]</li>[search][link]<li>[search]</li>[search]
               </span>
               <span class="L2o20d Sthl9e" style="width: 1%" title="70">
                <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[link]<li>[search]</li>[search][search][link][search][ahref]
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                2
               </span>
               <span class="L2o20d rhCabb" style="width: 0%" title="29">
               </span>
              </div>
              <div class="mMF0fd">
               <span class="Gn2mNd">
                1[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
               </span>
               <span class="L2o20d A3ihhc" style="width: 0%" title="12">
               </span>
              </div>
             </div>
             <c-data id="i19" jsdata=" V4l1v;_;6">
             </c-data>
            </c-wiz>
            <div class="Fx1lse">
             <div class="EmVfjc qs41qe" data-active="true" data-loadingmessage="Loading..." jsaction="animationend:kWijWc;dyRcpb:dyRcpb" jscontroller="qAKInc">
              <div aria-live="assertive" class="Cg7hO" jsname="vyyg5">
               Loading...
              </div>
              <div class="xu46lf" jsname="Hxlbvc">
               <div class="ir3uv uWlRce co39ub">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv GFoASc Cn087">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv WpeOqd hfsr6b">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
               <div class="ir3uv rHV3jf EjXFBf">
                <div class="xq3j6 ERcjC">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="HBnAAc">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
                <div class="xq3j6 dj3yTd">
                 <div class="X6jHbb GOJTSe">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
           </div>
           <div class="Njo8s">
           </div>
           <c-data id="i18" jsdata=" v3Bbmc;unsupported;18 v3Bbmc;unsupported;18">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="7;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i20" jsmodel="hc6Ubd" jsrenderer="FzdkFd" jsshadow="">
           <div class="W4P4ne ">
            <div class="wSaTQd">
             <h2 class="Rm6Gwb">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
            </div>
            <div class="PHBdkd" data-content-height="144" jsaction="rcuQ6b:npT2md" jscontroller="IsfMIf" jsshadow="">
             <div class="DWPxHb" itemprop="description" jsname="bN97Pc">
              <content>
               이제 학습 시간을 학습 목표로 설정하세요!
               <br/>
               - 일 목표 학습 시간을 달성하면 불꽃이 켜져요.
               <br>
                <li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[search]</li>[link]<li>[link]</li><li>[link]</li><li>[ahref]</li>[ahref]<li>[ahref]</li>[search]<li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][search][ahref][search]<li>[ahref]</li>
               </br>
               - 학습완료 영상 기준 목표 달성은 GOOD BYE!
              </content>
              <div class="uwAgLc f3Fr9d" jsname="WgKync">
              </div>
             </div>
             <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="xBmnf">
              <div aria-disabled="false" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
               <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
               </div>
               <div class="ZFr60d CeoRYc">
               </div>
               <content class="CwaK9">
                <span class="RveJvd snByac">
                 Read more<li>[ahref]</li><li>[link]</li><li>[link]</li><li>[link]</li>[ahref]<li>[search]</li>[search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </content>
              </div>
             </div>
             <div class="n1EcZc uhqVLe" jsaction="JIbuQc:ornU0b" jsname="zDTjtb">
              <div aria-disabled="false" class="U26fgb O0WRkf oG5Srb C0oVfc n9lfJ" jsaction="click:cOuCgd; mousedown:UX7yZ; mouseup:lbsD7e; mouseenter:tfO1Yc; mouseleave:JywGue;touchstart:p6p2H; touchmove:FwuNnf; touchend:yfqBxc(preventMouseEvents=true|preventDefault=true); touchcancel:JMtRjd;focus:AHmuwe; blur:O22p3e; contextmenu:mg9Pef;" jscontroller="VXdfxd" jsshadow="" role="button" tabindex="0">
               <div class="Vwe4Vb MbhUzd" jsname="ksKsZd">
               </div>
               <div class="ZFr60d CeoRYc">
               </div>
               <content class="CwaK9">
                <span class="RveJvd snByac">
                 Collapse<li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>
                </span>
               </content>
              </div>
             </div>
            </div>
           </div>
           <div class="Njo8s">
           </div>
           <c-data id="i20" jsdata=" OKeYaf;_;11">
           </c-data>
          </c-wiz>
          <c-wiz data-node-index="0;0" data-p='%.@.["me.mycake",7]
]
' jsdata="deferred-i21" jsmodel="hc6Ubd" jsrenderer="Wnurre" jsshadow="">
           <div class="W4P4ne ">
            <div class="wSaTQd">
             <h2 class="Rm6Gwb">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
            </div>
            <div class="JHTxhe IQ1z0d">
             <div class="xyOfqd">
              <div class="hAyfc">
               <div class="BgcNfc">
                Updated
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  December 12, 2018<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li>
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Size
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  Varies with device<li>[link]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[search]</li>[search][link]
                 </span>
                </div>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Installs
               </div>
               <span class="htlgb">
                500,000+<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[search]</li>[link]<li>[search]</li>[link][ahref][link][ahref][ahref]<li>[ahref]</li>[ahref][ahref]<li>[link]</li><li>[ahref]</li>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Current Version
               </div>
               <span class="htlgb">
                1.5.0[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][search]
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Requires Android
               </div>
               <span class="htlgb">
                4.4 and up[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Content Rating
               </div>
               <span class="htlgb">
                [search]<li>[link]</li><li>[link]</li><li>[link]</li><li>[link]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[ahref][search][ahref]<li>[ahref]</li><li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
               </span>
              </div>
              <c-wiz data-node-index="0;0" data-p='%.@.["me.mycake",7]
]
' jscontroller="VwI7ld" jsdata="deferred-i22" jsmodel="hc6Ubd" jsrenderer="HwUY7e" jsshadow="">
               <div class="hAyfc">
                <div class="BgcNfc">
                 Permissions
                </div>
                <span class="htlgb">
                 [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
                </span>
               </div>
               <c-data id="i22" jsdata=" OKeYaf;_;11">
               </c-data>
              </c-wiz>
              <div class="JHTxhe IQ1z0d YjpPef">
               <div class="hAyfc">
                <div class="BgcNfc">
                 Report
                </div>
                <span class="htlgb">
                 [search]<li>[search]</li><li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[search]</li><li>[ahref]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </div>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Offered By
               </div>
               <span class="htlgb">
                Playlist Corporation<li>[ahref]</li><li>[link]</li>[search][ahref][ahref]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
               </span>
              </div>
              <div class="hAyfc">
               <div class="BgcNfc">
                Developer
               </div>
               <span class="htlgb">
                <div class="IQ1z0d">
                 <span class="htlgb">
                  <div>
                   [ahref]
                   
                  </div>
                  <div>
                   [link]
                   
                  </div>
                  <div>
                   8th Fl., Alphadom tower4, 117, Bundangnaegok-ro(535 Baekhyeon-dong), Bundang-gu, Seongnam-si, Gyeonggi-do
                  </div>
                 </span>
                </div>
               </span>
              </div>
             </div>
            </div>
           </div>
           <div class="Njo8s">
           </div>
           <c-data id="i21" jsdata=" OMXY1e;_;8 OKeYaf;_;11">
           </c-data>
          </c-wiz>
         </div>
        </div>
        <div class="tlG8q">
         <c-wiz data-node-index="6;0" data-p="%.@.true]
" jsaction="rcuQ6b:iEtWhe;fXS6ad:Jov36c;FcZK2d:k4bDCc;" jscontroller="fPcQoe" jsdata="deferred-i23" jsmodel="hc6Ubd" jsrenderer="LRovxc" jsshadow="">
          <c-wiz class="UBeTzd Ubi8Z" data-node-index="0;0" data-p="%.@.true,false]
" jsdata="deferred-i24" jslog="38000; 1:400|CBSqARUKEwjx3pGqpZrfAhWWf2gKHWUeCTk=; track:click,impression" jsmodel="hc6Ubd" jsrenderer="Y413Bc" jsshadow="">
           <c-wiz data-node-index="9;0" data-p="%.@.true,false]
" jsdata="deferred-i25" jsmodel="hc6Ubd" jsrenderer="PRm2u" jsshadow="">
            <div class="uTDLzc drrice">
             <div class="rAknu">
              <div class="xBRiJc">
               [link]
               
              </div>
              <div class="g4kCYe">
               <a aria-label="Check out more content from Similar" class="LkLjZd ScJHi IfEcue nMZKrb id-track-click " data-uitype="290" href="/store/apps/collection/cluster?clp=wgYTCg8KCW1lLm15Y2FrZRABGAMYAQ%3D%3D:S:ANO1ljIXSIY&amp;gsr=ChbCBhMKDwoJbWUubXljYWtlEAEYAxgB:S:ANO1ljJUldM" jslog="37927; 1:290; track:click">
                See more
               </a>
              </div>
             </div>
             <div class="IFTL7 XWV5qb" jsaction="rcuQ6b:npT2md" jscontroller="SopwVc" jsname="O2DNWb">
              <div class="WHE7ib mpg5gc">
               <c-wiz data-node-index="0;0" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i26" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaOQogEh4KGGNvbS5kb2N0b3I5LmV2ZHRlbm1pbmVuZxABGAMQADITCIW8jaqlmt8CFZZ/aAodZR4JOQ==; track:click,impression">
                 <div class="Vpfmgd">
                  <div class="uzcko">
                   <div class="N9c7d eJxoSc">
                    <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[search]</li>
                    </span>
                    <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                    </span>
                    <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                     [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                    </span>
                    <div class="wXUyZd">
                     <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=com.doctor9.evdtenmineng" tabindex="-1">
                     </a>
                    </div>
                   </div>
                  </div>
                  <div class="RZEgze">
                   <div class="vU6FJ p63iDd">
                    <a aria-hidden="true" class="JC71ub" href="/store/apps/details?id=com.doctor9.evdtenmineng" tabindex="-1">
                    </a>
                    <div class="k6AFYd">
                     <div class="bQVA0c">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="b8cIId ReQCgd Q9MA7b" title="꾸매영 (꾸준하게 매일 빡쎄게 영어): 영화, 미드로 영어 회화, 스피킹, 리스닝 *무료*">
                         <a href="/store/apps/details?id=com.doctor9.evdtenmineng">
                          <div class="WsMG1c nnK0zc">
                           꾸매영 (꾸준하게 매일 빡쎄게 영어): 영화, 미드로 영어 회화, 스피킹, 리스닝 *무료*
                          </div>
                         </a>
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId ReQCgd KoLSrc" title="">
                         <a class="mnKHRc" href="/store/apps/developer?id=%EA%B5%AC%EC%84%B8%EC%A4%80">
                          <div>
                           구세준
                          </div>
                         </a>
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId f5NCO">
                         [link]
                         
                         <div class="cqtbn xKFUib">
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                     <div class="Z2nl8b">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="pf5lIe">
                         <div aria-label="Rated 4.9 stars out of five stars" role="img">
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="L0jl5e bUWb7c cm4lTe">
                           <div class="vQHuPe bUWb7c D3FNOd" style="width: 93.87469291687012%">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <c-data id="i26" jsdata=" OhlBSe;7,com.doctor9.evdtenmineng,;19 QwEV2c;7,com.doctor9.evdtenmineng,;20">
                </c-data>
               </c-wiz>
              </div>
              <div class="WHE7ib mpg5gc">
               <c-wiz data-node-index="0;1" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i27" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaMgoZEhcKEWNvbS5ndWd1ZG9jaS5vbmVlEAEYAxABMhMIhbyNqqWa3wIVln9oCh1lHgk5; track:click,impression">
                 <div class="Vpfmgd">
                  <div class="uzcko">
                   <div class="N9c7d eJxoSc">
                    <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                     [ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
                    </span>
                    <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><li>[ahref]</li>
                    </span>
                    <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[link]</li>[link]<li>[search]</li>[ahref][ahref][ahref]
                    </span>
                    <div class="wXUyZd">
                     <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=com.gugudoci.onee" tabindex="-1">
                     </a>
                    </div>
                   </div>
                  </div>
                  <div class="RZEgze">
                   <div class="vU6FJ p63iDd">
                    [ahref]
                    
                    <div class="k6AFYd">
                     <div class="bQVA0c">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="b8cIId ReQCgd Q9MA7b" title="하루1분 생활영어, 영어회화, 영어단어">
                         <a href="/store/apps/details?id=com.gugudoci.onee">
                          <div class="WsMG1c nnK0zc">
                           하루1분 생활영어, 영어회화, 영어단어
                          </div>
                         </a>
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId ReQCgd KoLSrc" title="">
                         [ahref]
                         
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId f5NCO">
                         [link]
                         
                         <div class="cqtbn xKFUib">
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                     <div class="Z2nl8b">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="pf5lIe">
                         <div aria-label="Rated 4.8 stars out of five stars" role="img">
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="L0jl5e bUWb7c cm4lTe">
                           <div class="vQHuPe bUWb7c D3FNOd" style="width: 80.67007064819336%">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <c-data id="i27" jsdata=" OhlBSe;7,com.gugudoci.onee,;22 QwEV2c;7,com.gugudoci.onee,;23">
                </c-data>
               </c-wiz>
              </div>
              <div class="WHE7ib mpg5gc">
               <c-wiz data-node-index="0;2" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i28" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaOAofEh0KF2NvbS5hbmRyb3guZGVldmFqZXNzaWNhEAEYAxACMhMIhbyNqqWa3wIVln9oCh1lHgk5; track:click,impression">
                 <div class="Vpfmgd">
                  <div class="uzcko">
                   <div class="N9c7d eJxoSc">
                    <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                     [search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
                    </span>
                    <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                     <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
                    </span>
                    <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                    </span>
                    <div class="wXUyZd">
                     [ahref]
                     
                    </div>
                   </div>
                  </div>
                  <div class="RZEgze">
                   <div class="vU6FJ p63iDd">
                    [ahref]
                    
                    <div class="k6AFYd">
                     <div class="bQVA0c">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="b8cIId ReQCgd Q9MA7b" title="디바제시카의 영어회화 300">
                         [link]
                         
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId ReQCgd KoLSrc" title="">
                         <a class="mnKHRc" href="/store/apps/developer?id=androx.co.kr">
                          <div>
                           androx.co.kr
                          </div>
                         </a>
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId f5NCO">
                         [ahref]
                         
                         <div class="cqtbn xKFUib">
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                     <div class="Z2nl8b">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="pf5lIe">
                         <div aria-label="Rated 4.6 stars out of five stars" role="img">
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="L0jl5e bUWb7c cm4lTe">
                           <div class="vQHuPe bUWb7c D3FNOd" style="width: 56.723737716674805%">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <c-data id="i28" jsdata=" OhlBSe;7,com.androx.deevajessica,;24 QwEV2c;7,com.androx.deevajessica,;25">
                </c-data>
               </c-wiz>
              </div>
              <div class="WHE7ib mpg5gc">
               <c-wiz data-node-index="0;3" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i29" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaOAofEh0KF2NvbS5yb2lkdXMuaWJsdWdwYXJ0aWFsEAEYAxADMhMIhbyNqqWa3wIVln9oCh1lHgk5; track:click,impression">
                 <div class="Vpfmgd">
                  <div class="uzcko">
                   <div class="N9c7d eJxoSc">
                    <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[search]</li><li>[link]</li>[search]<li>[search]</li>[ahref]<li>[search]</li>[search]<li>[search]</li>[link][ahref]
                    </span>
                    <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                    </span>
                    <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                    </span>
                    <div class="wXUyZd">
                     [link]
                     
                    </div>
                   </div>
                  </div>
                  <div class="RZEgze">
                   <div class="vU6FJ p63iDd">
                    [link]
                    
                    <div class="k6AFYd">
                     <div class="bQVA0c">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="b8cIId ReQCgd Q9MA7b" title="Let's 일빵빵">
                         [link]
                         
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId ReQCgd KoLSrc" title="">
                         <a class="mnKHRc" href="/store/apps/developer?id=%ED%86%A0%EB%A7%88%ED%86%A0%EC%B6%9C%ED%8C%90%EC%82%AC">
                          <div>
                           토마토출판사
                          </div>
                         </a>
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId f5NCO">
                         [ahref]
                         
                         <div class="cqtbn xKFUib">
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                     <div class="Z2nl8b">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="pf5lIe">
                         <div aria-label="Rated 4.6 stars out of five stars" role="img">
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="L0jl5e bUWb7c cm4lTe">
                           <div class="vQHuPe bUWb7c D3FNOd" style="width: 56.33678436279297%">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <c-data id="i29" jsdata=" OhlBSe;7,com.roidus.iblugpartial,;26 QwEV2c;7,com.roidus.iblugpartial,;27">
                </c-data>
               </c-wiz>
              </div>
              <div class="WHE7ib mpg5gc">
               <c-wiz data-node-index="0;4" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i30" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaNgodEhsKFWNvbS5xdWFsc29uLnJlYWxjbGFzcxABGAMQBDITCIW8jaqlmt8CFZZ/aAodZR4JOQ==; track:click,impression">
                 <div class="Vpfmgd">
                  <div class="uzcko">
                   <div class="N9c7d eJxoSc">
                    <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[link]</li>
                    </span>
                    <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                     <li>[search]</li>[link]<li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref][link][link]<li>[link]</li><li>[search]</li><li>[search]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
                    </span>
                    <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                    </span>
                    <div class="wXUyZd">
                     [link]
                     
                    </div>
                   </div>
                  </div>
                  <div class="RZEgze">
                   <div class="vU6FJ p63iDd">
                    <a aria-hidden="true" class="JC71ub" href="/store/apps/details?id=com.qualson.realclass" tabindex="-1">
                    </a>
                    <div class="k6AFYd">
                     <div class="bQVA0c">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="b8cIId ReQCgd Q9MA7b" title="리얼클래스 - 타일러 영어 인강">
                         [link]
                         
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId ReQCgd KoLSrc" title="">
                         [ahref]
                         
                         <div class="cqtbn">
                         </div>
                        </div>
                        <div class="b8cIId f5NCO">
                         <a href="/store/apps/details?id=com.qualson.realclass">
                          교육 앱 1위 슈퍼팬 제작진의 회심작
                          <br>
                           <li>[search]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[link]
                          </br>
                          영어 인강에 영화, 미드, 애니를 더하다
                          <br>
                           <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link][search]<li>[link]</li>[search]<li>[ahref]</li>[search]<li>[ahref]</li>[search]
                          </br>
                          영어 회화, 영어 듣기, 영단어, 문법, 영어발음 모두 정복하세요
                         </a>
                         <div class="cqtbn xKFUib">
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                     <div class="Z2nl8b">
                      <div class="PODJt">
                       <div class="kCSSQe">
                        <div class="pf5lIe">
                         <div aria-label="Rated 4.8 stars out of five stars" role="img">
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="vQHuPe bUWb7c">
                          </div>
                          <div class="L0jl5e bUWb7c cm4lTe">
                           <div class="vQHuPe bUWb7c D3FNOd" style="width: 75.33459663391113%">
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
                <c-data id="i30" jsdata=" OhlBSe;7,com.qualson.realclass,;28 QwEV2c;7,com.qualson.realclass,;29">
                </c-data>
               </c-wiz>
              </div>
             </div>
            </div>
            <c-data id="i25" jsdata=" Hg4CF;_;30 yehdwb;_;31 QbiEs;CheC0_-4AxEKCPqegZ0DAggFEP_NjpP6LBAFGhbCBhMKDwoJbWUubXljYWtlEAEYAxgB,;32">
            </c-data>
           </c-wiz>
           <c-data id="i24" jsdata=" yehdwb;_;31 LK9wFf;_;33">
           </c-data>
          </c-wiz>
          <c-data id="i23" jsdata=" yehdwb;_;31">
          </c-data>
         </c-wiz>
         <c-wiz data-node-index="2;0" data-p='%.@.["me.mycake",7]
,true,[27,4,8,57,30,11,16,49,1,3,9,12,55,56,10,34,77]
]
' jsdata="deferred-i31" jsmodel="hc6Ubd" jsrenderer="uB9Bld" jsshadow="">
          <c-wiz data-node-index="0;0" data-p="%.@.true]
" jsaction="rcuQ6b:iEtWhe;fXS6ad:Jov36c;FcZK2d:k4bDCc;" jscontroller="fPcQoe" jsdata="deferred-i32" jsmodel="hc6Ubd" jsrenderer="LRovxc" jsshadow="">
           <c-wiz class="UBeTzd Ubi8Z" data-node-index="0;0" data-p="%.@.true,false]
" jsdata="deferred-i33" jslog="38000; 1:400|CBSqARUKEwio85KqpZrfAhWWf2gKHWUeCTk=; track:click,impression" jsmodel="hc6Ubd" jsrenderer="Y413Bc" jsshadow="">
            <c-wiz data-node-index="9;0" data-p="%.@.true,false]
" jsdata="deferred-i34" jsmodel="hc6Ubd" jsrenderer="PRm2u" jsshadow="">
             <div class="uTDLzc drrice">
              <div class="rAknu">
               <div class="xBRiJc">
                <a href="/store/apps/collection/cluster?clp=igMuChkKEzczNzAxOTA5OTYyNTUwMzcyMTQQCBgDEg8KCW1lLm15Y2FrZRABGAMYAQ%3D%3D:S:ANO1ljJjgAY&amp;gsr=CjGKAy4KGQoTNzM3MDE5MDk5NjI1NTAzNzIxNBAIGAMSDwoJbWUubXljYWtlEAEYAxgB:S:ANO1ljJs32Q">
                 <h2 class="C7Bf8e bs3Xnd">
                  [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                 </h2>
                </a>
               </div>
               <div class="g4kCYe">
                <a aria-label="Check out more content from Playlist Corporation" class="LkLjZd ScJHi IfEcue nMZKrb q12TOd id-track-click " data-uitype="290" href="/store/apps/collection/cluster?clp=igMuChkKEzczNzAxOTA5OTYyNTUwMzcyMTQQCBgDEg8KCW1lLm15Y2FrZRABGAMYAQ%3D%3D:S:ANO1ljJjgAY&amp;gsr=CjGKAy4KGQoTNzM3MDE5MDk5NjI1NTAzNzIxNBAIGAMSDwoJbWUubXljYWtlEAEYAxgB:S:ANO1ljJs32Q" jslog="37927; 1:290; track:click">
                 See more
                </a>
               </div>
              </div>
              <div class="IFTL7 XWV5qb" jsaction="rcuQ6b:npT2md" jscontroller="SopwVc" jsname="O2DNWb">
               <div class="WHE7ib mpg5gc">
                <c-wiz data-node-index="0;0" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i35" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                 <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaLQoUEhIKDGlvLnN0b3J5Y2hhdBABGAMQADITCLCpjqqlmt8CFZZ/aAodZR4JOQ==; track:click,impression">
                  <div class="Vpfmgd">
                   <div class="uzcko">
                    <div class="N9c7d eJxoSc">
                     <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li>[ahref]
                     </span>
                     <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                      [search]<li>[ahref]</li><li>[search]</li>[link][ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[ahref]<li>[ahref]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li>
                     </span>
                     <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                      <li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref]<li>[link]</li><li>[search]</li>[search]<li>[link]</li>
                     </span>
                     <div class="wXUyZd">
                      [link]
                      
                     </div>
                    </div>
                   </div>
                   <div class="RZEgze">
                    <div class="vU6FJ p63iDd">
                     [ahref]
                     
                     <div class="k6AFYd">
                      <div class="bQVA0c">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="b8cIId ReQCgd Q9MA7b" title="wit - All about Kpop">
                          <a href="/store/apps/details?id=io.storychat">
                           <div class="WsMG1c nnK0zc">
                            wit - All about Kpop
                           </div>
                          </a>
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId ReQCgd KoLSrc" title="">
                          [link]
                          
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId f5NCO">
                          <a href="/store/apps/details?id=io.storychat">
                           Be connected with Kpop fans
                          </a>
                          <div class="cqtbn xKFUib">
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                      <div class="Z2nl8b">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="pf5lIe">
                          <div aria-label="Rated 4.6 stars out of five stars" role="img">
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="L0jl5e bUWb7c cm4lTe">
                            <div class="vQHuPe bUWb7c D3FNOd" style="width: 63.1319522857666%">
                            </div>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <c-data id="i35" jsdata=" OhlBSe;7,io.storychat,;34 QwEV2c;7,io.storychat,;35">
                 </c-data>
                </c-wiz>
               </div>
               <div class="WHE7ib mpg5gc">
                <c-wiz data-node-index="0;1" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i36" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                 <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaNAobEhkKE2NvbS5wbGF5bGlzdC5wb3J0cmEQARgDEAEyEwiwqY6qpZrfAhWWf2gKHWUeCTk=; track:click,impression">
                  <div class="Vpfmgd">
                   <div class="uzcko">
                    <div class="N9c7d eJxoSc">
                     <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      [link]<li>[ahref]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
                     </span>
                     <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                      [search][ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                     </span>
                     <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                     </span>
                     <div class="wXUyZd">
                      <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=com.playlist.portra" tabindex="-1">
                      </a>
                     </div>
                    </div>
                   </div>
                   <div class="RZEgze">
                    <div class="vU6FJ p63iDd">
                     <a aria-hidden="true" class="JC71ub" href="/store/apps/details?id=com.playlist.portra" tabindex="-1">
                     </a>
                     <div class="k6AFYd">
                      <div class="bQVA0c">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="b8cIId ReQCgd Q9MA7b" title="PORTRA – Stunning art filter">
                          [ahref]
                          
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId ReQCgd KoLSrc" title="">
                          [link]
                          
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId f5NCO">
                          [link]
                          
                          <div class="cqtbn xKFUib">
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                      <div class="Z2nl8b">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="pf5lIe">
                          <div aria-label="Rated 4.4 stars out of five stars" role="img">
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="L0jl5e bUWb7c cm4lTe">
                            <div class="vQHuPe bUWb7c D3FNOd" style="width: 38.805580139160156%">
                            </div>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <c-data id="i36" jsdata=" OhlBSe;7,com.playlist.portra,;36 QwEV2c;7,com.playlist.portra,;37">
                 </c-data>
                </c-wiz>
               </div>
               <div class="WHE7ib mpg5gc">
                <c-wiz data-node-index="0;2" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i37" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                 <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaMwoaEhgKEmNvbS5wbGF5bGlzdC5wYWJsbxABGAMQAjITCLCpjqqlmt8CFZZ/aAodZR4JOQ==; track:click,impression">
                  <div class="Vpfmgd">
                   <div class="uzcko">
                    <div class="N9c7d eJxoSc">
                     <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      [link]<li>[ahref]</li>[ahref][ahref][search]<li>[ahref]</li>[link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                     </span>
                     <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                     </span>
                     <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                      <li>[search]</li>[search][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>
                     </span>
                     <div class="wXUyZd">
                      <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=com.playlist.pablo" tabindex="-1">
                      </a>
                     </div>
                    </div>
                   </div>
                   <div class="RZEgze">
                    <div class="vU6FJ p63iDd">
                     [ahref]
                     
                     <div class="k6AFYd">
                      <div class="bQVA0c">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="b8cIId ReQCgd Q9MA7b" title="7 Colors - Pixel Art Coloring">
                          <a href="/store/apps/details?id=com.playlist.pablo">
                           <div class="WsMG1c nnK0zc">
                            7 Colors - Pixel Art Coloring
                           </div>
                          </a>
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId ReQCgd KoLSrc" title="">
                          <a class="mnKHRc" href="/store/apps/developer?id=Playlist+Corporation">
                           <div>
                            Playlist Corporation
                           </div>
                          </a>
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId f5NCO">
                          <a href="/store/apps/details?id=com.playlist.pablo">
                           Coloring by Numbers
                          </a>
                          <div class="cqtbn xKFUib">
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                      <div class="Z2nl8b">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="pf5lIe">
                          <div aria-label="Rated 4.6 stars out of five stars" role="img">
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="L0jl5e bUWb7c cm4lTe">
                            <div class="vQHuPe bUWb7c D3FNOd" style="width: 55.30076026916504%">
                            </div>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <c-data id="i37" jsdata=" OhlBSe;7,com.playlist.pablo,;38 QwEV2c;7,com.playlist.pablo,;39">
                 </c-data>
                </c-wiz>
               </div>
               <div class="WHE7ib mpg5gc">
                <c-wiz data-node-index="0;3" data-p="%.@.true]
" jsaction="aM6rcc:MRWqkd" jscontroller="JpEzfb" jsdata="deferred-i38" jsmodel="hc6Ubd" jsrenderer="PAQZbb" jsshadow="">
                 <div class="uMConb V2Vq5e POHYmb-eyJpod YEDFMc-eyJpod y1APZe-UtC6se" jslog="38003; 1:500|CAIaNAobEhkKE2lvLmNvb2x0aW1lLmp1bXBpbmcQARgDEAMyEwiwqY6qpZrfAhWWf2gKHWUeCTk=; track:click,impression">
                  <div class="Vpfmgd">
                   <div class="uzcko">
                    <div class="N9c7d eJxoSc">
                     <span class="yNWQ8e K3IMke buPxGf" style="height: 160px;width: 160px">
                      <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search]<li>[search]</li>[link][ahref][ahref]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>[link]<li>[ahref]</li>[link][search][search]
                     </span>
                     <span class="ZYyTud K3IMke buPxGf" style="height: 160px;width: 160px">
                      <li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[link]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                     </span>
                     <span class="kJ9uy K3IMke buPxGf" style="height: 160px;width: 160px">
                      [ahref][ahref]<li>[link]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
                     </span>
                     <div class="wXUyZd">
                      <a aria-hidden="true" class="poRVub" href="/store/apps/details?id=io.cooltime.jumping" tabindex="-1">
                      </a>
                     </div>
                    </div>
                   </div>
                   <div class="RZEgze">
                    <div class="vU6FJ p63iDd">
                     [link]
                     
                     <div class="k6AFYd">
                      <div class="bQVA0c">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="b8cIId ReQCgd Q9MA7b" title="Jumping : Save the penguins">
                          <a href="/store/apps/details?id=io.cooltime.jumping">
                           <div class="WsMG1c nnK0zc">
                            Jumping : Save the penguins
                           </div>
                          </a>
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId ReQCgd KoLSrc" title="">
                          [link]
                          
                          <div class="cqtbn">
                          </div>
                         </div>
                         <div class="b8cIId f5NCO">
                          <a href="/store/apps/details?id=io.cooltime.jumping">
                           BATTLE JUMPING! Major Cuteness Alert - Penguin VS Penguin "Jump-off" is here!
                          </a>
                          <div class="cqtbn xKFUib">
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                      <div class="Z2nl8b">
                       <div class="PODJt">
                        <div class="kCSSQe">
                         <div class="pf5lIe">
                          <div aria-label="Rated 4.5 stars out of five stars" role="img">
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="vQHuPe bUWb7c">
                           </div>
                           <div class="L0jl5e bUWb7c cm4lTe">
                            <div class="vQHuPe bUWb7c D3FNOd" style="width: 45.42374610900879%">
                            </div>
                           </div>
                          </div>
                         </div>
                        </div>
                       </div>
                      </div>
                     </div>
                    </div>
                   </div>
                  </div>
                 </div>
                 <c-data id="i38" jsdata=" OhlBSe;7,io.cooltime.jumping,;40 QwEV2c;7,io.cooltime.jumping,;41">
                 </c-data>
                </c-wiz>
               </div>
              </div>
             </div>
             <c-data id="i34" jsdata=" Hg4CF;_;42 yehdwb;_;43 QbiEs;-,;44">
             </c-data>
            </c-wiz>
            <c-data id="i33" jsdata=" yehdwb;_;43 LK9wFf;_;45">
            </c-data>
           </c-wiz>
           <c-data id="i32" jsdata=" yehdwb;_;43">
           </c-data>
          </c-wiz>
          <c-data id="i31" jsdata=" zvDxob;_;21">
          </c-data>
         </c-wiz>
        </div>
       </div>
      </div>
      <div itemscope="" itemtype="https://schema.org/SoftwareApplication">
       <meta content="ANDROID" itemprop="operatingSystem">
        <meta content="Cake(케이크): 영어 회화, 스피킹, 리스닝 모두 해결" itemprop="name">
         <meta content="https://play.google.com/store/apps/details/Cake_%EC%BC%80%EC%9D%B4%ED%81%AC_%EC%98%81%EC%96%B4_%ED%9A%8C%ED%99%94_%EC%8A%A4%ED%94%BC%ED%82%B9_%EB%A6%AC%EC%8A%A4%EB%8B%9D_%EB%AA%A8%EB%91%90_%ED%95%B4%EA%B2%B0?id=me.mycake&amp;hl=en_US" itemprop="url">
          <meta content="https://lh3.googleusercontent.com/sWs_TFyQcedO4iNS4_xHx4h6tkUNzWAXDuNHIWwp0TA2TMzBeKlPk_dTEolNzaNmz_D-" itemprop="image">
           <meta content="🍰 1분: 살아있는 영어 표현 내 꺼 만드는 시간!
꼭 필요한 표현만 유튜브에서 콕 잘랐으니까,
보고만 있어도 내 꺼 되는 영어 표현!​

🍰 주제로 묶여 있는 표현
비슷한 상황/표현을 주제로 묶어 제공하니까,
더 체계적으로 표현을 익힐 수 있어요.
매일 새로운 주제와 표현이 업데이트 돼요!
​
🍰 영어 표현 따라해 보기
표현을 따라하면 어색한 발음을 콕 집어주니까,
조만간 나도 원어민?!
​
🍰 100% 무료 앱!
전 국민 영어 실력 향상 앱 케이크는 무료입니다!
“He can speak, she can speak, why not me?”
​

[필수 접근 권한 상세]
저장 공간: 썸네일 및 녹음 파일 저장 및 열람
휴대폰/기기ID : 디바이스 내 저장된 기기 관련 정보 확인
Wi-Fi 연결 정보 : 영상 시청시 데이터 소모 여부 안내 

[선택 접근 권한]
마이크: 음성 녹음

* 선택 접근권한은 동의하지 않아도 앱을 사용하실 수 있습니다.
* 케이크 앱의 접근권한은 안드로이드 6.0 이상 버전에 대응하여, 필수 권한과 선택 권한으로 나누어 구현되어 있습니다. 6.0 미만 버전을 사용 중일 경우 선택 권한을 개별적으로 허용할 수 없으므로, 보유하고 있는 단말의 제조사에서 운영체제 업그레이드 기능을 제공하는지 확인해 보신 뒤 가능하다면 6.0 이상으로 업데이트하시는 것을 권장합니다.
----
개발자 연락처 :
+82 2-2038-6046" itemprop="description">
            <meta content="Everyone" itemprop="contentRating">
             <meta content="EDUCATION" itemprop="applicationCategory">
              <div itemprop="aggregateRating" itemscope="" itemtype="https://schema.org/AggregateRating">
               <meta content="4.822113990783691" itemprop="ratingValue">
                <meta content="4115" itemprop="reviewCount"/>
               </meta>
              </div>
             </meta>
            </meta>
           </meta>
          </meta>
         </meta>
        </meta>
       </meta>
      </div>
      <div data-deep-link-cookie="CBSqARUKEwjc746qpZrfAhWWf2gKHWUeCTk=" data-deep-link-type="1" jsaction="rcuQ6b:c6Ziwc;IBB03b:TfPcKb;" jscontroller="LCkxpb">
      </div>
     </div>
     <c-data id="i6" jsdata=" EDxpkb;_;9 OKeYaf;_;11 vTKgMb;_;15 V4l1v;_;6">
     </c-data>
    </c-wiz>
    <div class="y089Ob" id="ZCHFDb">
     <c-wiz data-node-index="0;0" data-p="%.@.true]
" jsaction="DzyM5d:EHCGpf" jscontroller="ozuUvf" jsdata="deferred-i39" jsmodel="hc6Ubd" jsrenderer="c4OaZ" jsshadow="">
      <div class="TAviAb">
       <div class="vUI6Ye" style="display: none">
       </div>
       <div class="sIIDsc IQ1z0d">
        <div class="RRKTjb">
         <span class="BDUOnf">
          ©2018 Google<li>[ahref]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[link]</li>[search][link][ahref][search]<li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref]
         </span>
         <a class="XjE2Pb fx1akb" href="/intl/en-US_us/about/play-terms.html" target="_blank">
          Site Terms of Service
         </a>
         [link]
         
         <a class="XjE2Pb fx1akb" href="/index.html" target="_blank">
          Developers
         </a>
         <a class="XjE2Pb fx1akb" href="/artists" target="_blank">
          Artists
         </a>
         <a class="XjE2Pb fx1akb" href="/googleplay/?p=about_play" target="_blank">
          About Google
         </a>
         <span class="XjE2Pb">
          |
         </span>
         <span class="XjE2Pb">
          Location: United States<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li>
         </span>
         <span class="XjE2Pb">
          Language: English (United States)
         </span>
         <div jsname="Gvbqzc">
          <span>
           By purchasing this item, you are transacting with Google Payments and agreeing to the Google Payments
           <a href="/termsOfService?hl=en_US" target="_blank">
            Terms of Service
           </a>
           and
           [link]
           
           .
          </span>
         </div>
        </div>
       </div>
      </div>
      <c-data id="i39" jsdata=" Qv8W4;_;3">
      </c-data>
     </c-wiz>
    </div>
   </div>
   <b style="color:black;background-color:#a0ffff">
    jnice12-ipp11-we-ze-0319
   </b>
  </body>
 </div>
</html>