<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="text/tcl" http-equiv="Content-Script-Type"/>
  <meta content="text/css" http-equiv="Content-Style-Type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
 </head>
 <body>
  <div id="accessibility">
   <ul>
    <li>
     [ahref]
     
    </li>
    <li>
     [link]
     
    </li>
    <li>
     [link]
     
    </li>
   </ul>
  </div>
  <form action="p" method="get" name="frmView">
  </form>
  <div id="wrap">
   <div id="header">
    <div class="util">
     <div class="utilin">
      <div class="left">
       <a href="/usr/minwon/eCommunication/mctCommEtc/homeOpinion.jsp?pSiteCode=03" target="_blank" title="누리집(홈페이지) 불편신고 새 창 열림">
       </a>
       [link]
       
       [ahref]
       
       <a class="bar" href="/mcstkorea/" target="_blank" title="문화체육관광부 블로그 바로가기 새 창 열림">
       </a>
       [ahref]
       
       [ahref]
       
      </div>
      <div class="center">
       [ahref]
       
       [ahref]
       
      </div>
      <div class="right">
       [ahref]
       
       [link]
       
       [link]
       
       <div class="nation" id="vodList" style="display: none;">
        <ul>
         <li>
          <a href="/english/index.jsp" target="_blank" title="영어사이트 새 창 열림">
           English
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <div class="header_inside">
     <div id="incTop1">
      <h1 class="logo">
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
      <div class="searchpart">
       <div class="integrationsearch">
        <form action="/search/search.jsp" method="get" name="topTotalSearchFrm" onsubmit="return fn_checkTotalSearch()">
         <fieldset>
          <legend style="display:none">
           검색
          </legend>
          <ul id="integrationsearch">
           <li class="label">
            <label for="intesrh">
             검색어 입력
            </label>
           </li>
           <li class="input">
           </li>
           <li class="btn">
           </li>
          </ul>
         </fieldset>
        </form>
       </div>
       <div class="searchword">
        <span>
         [link]
         
        </span>
        <span>
         [link]
         
        </span>
        <span class="end">
         [search][ahref]<li>[search]</li><li>[search]</li>[search][search]
        </span>
       </div>
      </div>
      <div class="trightpart">
       <div class="global">
        [link]
        
        [link]
        
        [link]
        
       </div>
      </div>
     </div>
     <div id="incTop2">
      <div id="mainmenu">
       <ul id="onedepth">
        <li class="onedept">
         [link]
         
         <div class="submenu_box bg01" id="twodepth01" onmouseout="menu_ShowHide('twodepth01','','hide');imgchangeout('onedepth01');" onmouseover="menuShowHide('01');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/web/s_open/guide/openInfoProc.jsp" target="_self">
               청구 및 처리절차
              </a>
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              <a href="/web/s_open/guide/openInfoException.jsp" target="_self">
               불복구제절차
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/web/s_open/pre/preOpenInfo.jsp" target="_self">
             정보공개자료
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/web/s_open/report/openData.jsp" target="_self">
               정보목록
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/web/s_open/publicData/publicData.jsp" target="_self">
               공공데이터
              </a>
             </li>
             <li class="threedept">
              <a href="/web/s_open/government/appCase.jsp" target="_self">
               문화데이터
              </a>
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/web/s_open/kogl/intro.jsp" target="_self">
             공공누리
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/web/s_open/kogl/koglType.jsp" target="_self">
               공공누리유형안내
              </a>
             </li>
            </ul>
           </li>
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
          </ul>
          <a class="mclose" href="e" onclick="menu_ShowHide('twodepth01','','hide');menufocuson('onedepth01');return false;">
          </a>
         </div>
        </li>
        <li class="onedept">
         <a href="/usr/minwon/index.jsp" onfocus="menuShowHide('02');" onmouseout="menu_ShowHide('twodepth02','','hide');imgchangeout('onedepth02');" onmouseover="this.onfocus()" target="_blank">
         </a>
         <div class="submenu_box bg02" id="twodepth02" onmouseout="menu_ShowHide('twodepth02','','hide');imgchangeout('onedepth02');" onmouseover="menuShowHide('02');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/usr/minwon/eMinwon/introCivil/windowCivil/introCivilConts.jsp" target="_blank" title="새 창 열림">
               민원안내
              </a>
             </li>
             <li class="threedept">
              <a href="/usr/minwon/eMinwon/formatCivil/formatCivil/formatView.jsp" target="_blank" title="새 창 열림">
               문서민원
              </a>
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/usr/minwon/eCorruption/missDir/missDirReportNoNm.jsp" target="_blank" title="새 창 열림">
             신고센터
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/usr/minwon/eCorruption/missDir/missDirReportNoNm.jsp" target="_blank" title="새 창 열림">
               갑질피해신고
              </a>
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/usr/minwon/eCommunication/freeMember/freeBoardList.jsp" target="_blank" title="새 창 열림">
               공공기관 임직원마당
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/usr/minwon/eRegulatory/concept/conceptConts01.jsp" target="_blank" title="새 창 열림">
               행정규제란?
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/usr/minwon/eCommunication/consultationGov/inforCivilcomplaintGov.jsp" target="_blank" title="새 창 열림">
               110화상(수화)/채팅상담
              </a>
             </li>
             <li class="threedept">
              <a href="/usr/minwon/eCommunication/mctCommEtc/serviceConts.jsp" target="_blank" title="새 창 열림">
               행정서비스헌장
              </a>
             </li>
             <li class="threedept">
              <a href="/usr/minwon/eCommunication/mctCommEtc/homeOpinion.jsp" target="_blank" title="새 창 열림">
               누리집개선의견
              </a>
             </li>
            </ul>
           </li>
          </ul>
          [link]
          
         </div>
        </li>
        <li class="onedept">
         [link]
         
         <div class="submenu_box bg03" id="twodepth03" onmouseout="menu_ShowHide('twodepth03','','hide');imgchangeout('onedepth03');" onmouseover="menuShowHide('03');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            <a href="/web/s_notice/press/pressList.jsp" target="_self">
             보도자료
            </a>
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
          </ul>
          <a class="mclose" href="e" onclick="menu_ShowHide('twodepth03','','hide');menufocuson('onedepth03');return false;">
          </a>
         </div>
        </li>
        <li class="onedept">
         [ahref]
         
         <div class="submenu_box bg04" id="twodepth04" onmouseout="menu_ShowHide('twodepth04','','hide');imgchangeout('onedepth04');" onmouseover="menuShowHide('04');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [ahref]
            
           </li>
          </ul>
          <a class="mclose" href="e" onclick="menu_ShowHide('twodepth04','','hide');menufocuson('onedepth04');return false;">
          </a>
         </div>
        </li>
        <li class="onedept">
         [link]
         
         <div class="submenu_box bg05" id="twodepth05" onmouseout="menu_ShowHide('twodepth05','','hide');imgchangeout('onedepth05');" onmouseover="menuShowHide('05');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [link]
            
           </li>
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              <a href="/web/s_data/ordinance/legislation/legislationList.jsp" target="_self">
               입법·행정예고
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/web/s_data/corpNaru/corpList.jsp" target="_self">
             현황자료
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/COOP/disclosure/newDisclosureArchiveList.do" target="_blank" title="새 창 열림">
             경영공시자료
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
          </ul>
          [link]
          
         </div>
        </li>
        <li class="onedept">
         [link]
         
         <div class="submenu_box bg06" id="twodepth06" onmouseout="menu_ShowHide('twodepth06','','hide');imgchangeout('onedepth06');" onmouseover="menuShowHide('06');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            <a href="/web/s_policy/plan2018/plan2018.jsp" target="_self">
             업무계획
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              <a href="/web/s_policy/dept/deptList.jsp?pType=02" target="_self">
               문화예술
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              <a href="/web/s_policy/dept/deptList.jsp?pType=06" target="_self">
               국민소통
              </a>
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              <a href="/web/s_policy/dept/deptList.jsp?pType=99" target="_self">
               기타
              </a>
             </li>
            </ul>
           </li>
           <li class="twodept">
            [search]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/web/s_policy/comm/poli/suggest.jsp" target="_self">
             정책소통
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
          </ul>
          <a class="mclose" href="e" onclick="menu_ShowHide('twodepth06','','hide');menufocuson('onedepth06');return false;">
          </a>
         </div>
        </li>
        <li class="onedept">
         [link]
         
         <div class="submenu_box bg07" id="twodepth07" onmouseout="menu_ShowHide('twodepth07','','hide');imgchangeout('onedepth07');" onmouseover="menuShowHide('07');" style="display:none">
          <ul class="twodeptlist">
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [ahref]
            
            <ul class="threedeptlist">
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            [link]
            
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/web/s_about/organ/main/mainOrgan.jsp" target="_self">
               본부
              </a>
             </li>
             <li class="threedept">
              [link]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
           <li class="twodept">
            <a href="/web/s_about/location/location.jsp" target="_self">
             청사안내
            </a>
            <ul class="threedeptlist">
             <li class="threedept">
              <a href="/web/s_about/location/location.jsp" target="_self">
               찾아오시는 길
              </a>
             </li>
             <li class="threedept">
              [ahref]
              
             </li>
            </ul>
           </li>
          </ul>
          [ahref]
          
         </div>
        </li>
       </ul>
      </div>
      <div class="clear">
      </div>
     </div>
    </div>
   </div>
   <div id="container">
    <div id="leftmenu">
     <h2>
      [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
     </h2>
     <ul>
      <li>
       <a href="/web/s_culture/festival/festivalList.jsp" onblur="imgChangeOff('leftmenu052900')" onfocus="imgChangeOn('leftmenu052900')" onmouseout="imgChangeOff('leftmenu052900')" onmouseover="imgChangeOn('leftmenu052900')" target="_self">
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/web/s_culture/culture/cultureList.jsp" onblur="imgChangeOff('leftmenu052700')" onfocus="imgChangeOn('leftmenu052700')" onmouseout="imgChangeOff('leftmenu052700')" onmouseover="imgChangeOn('leftmenu052700')" target="_self">
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/web/s_culture/story/storyTellingList.jsp" target="_self">
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </div>
    <div id="content">
     <div id="subtop">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="path">
       <a href="/index.jsp" onclick="getURL('/index.jsp', null, null, true);return false;">
       </a>
       >
       <span>
        [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][search][search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>
       </span>
       >
       <span class="page">
        문화스토리텔링
       </span>
      </div>
     </div>
     <div class="topbtn_part">
      <div class="snsbtn">
       [ahref]
       
       <a href="/share.php?u=http%3A%2F%2Fwww.mcst.go.kr%2Fweb%2Fs_culture%2Fstory%2FstoryTellingView.jsp%3FpSeq%3D176&amp;t=%EA%B9%80%EC%B9%98%EB%B3%B6%EC%9D%8C%EB%B0%A5" target="blank" title="페이스북으로 보내기 새 창 열림">
       </a>
       [ahref]
       
       [link]
       
       [ahref]
       
      </div>
      <div class="listbtn">
       [ahref]
       
       [ahref]
       
       [ahref]
       
      </div>
     </div>
     <div class="orangeline">
      <table cellpadding="0" cellspacing="0" class="view" summary="문화스토리텔링의 게시일, 조회수, 담당부서, 담당자, 작가, 출처, 비고, 전문보기 등 내용보기" title="문화스토리텔링 내용보기입니다">
       <caption>
        문화스토리텔링 - 내용보기
       </caption>
       <colgroup>
        <col style="width:15%"/>
        <col style="width:37%"/>
        <col style="width:15%"/>
        <col/>
       </colgroup>
       <tbody>
        <tr>
         <th class="btitle" colspan="4" title="김치볶음밥">
          김치볶음밥
         </th>
        </tr>
        <tr>
         <th class="item_bg" scope="row" title="게시일">
          게시일
         </th>
         <td class="txt" title="2010.08.26.">
          2010.08.26.
         </td>
         <th class="item_bg" scope="row" title="조회수">
          조회수
         </th>
         <td class="txt" title="7292">
          7292
         </td>
        </tr>
        <tr>
         <th class="item_bg" scope="row" title="담당부서">
          담당부서
         </th>
         <td class="txt" title="정보통계담당관(02-3704-9274)">
          정보통계담당관 (02-3704-9274)
         </td>
         <th class="item_bg" scope="row" title="담당자">
          담당자
         </th>
         <td class="txt" title="관리자">
          관리자
         </td>
        </tr>
        <tr>
         <th class="item_bg" scope="row" title="작가">
          작가
         </th>
         <td class="txt" title="농수산물유통공사">
          농수산물유통공사
         </td>
         <th class="item_bg" scope="row" title="출처">
          출처
         </th>
         <td class="txt" title="농수산물유통공사">
          농수산물유통공사
         </td>
        </tr>
        <tr>
         <th class="item_bg" scope="row" title="비고">
          비고
         </th>
         <td class="txt" colspan="3" title="국내외 한식당 대표음식 125개 스토리텔링 (2/125)">
          국내외 한식당 대표음식 125개 스토리텔링 (2/125)
         </td>
        </tr>
        <tr>
         <td class="edit" colspan="4" title="김치볶음밥에 대한 내용입니다">
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li><li>[ahref]</li><li>[link]</li>[search]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <li>[search]</li>[search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][search]<li>[link]</li>[ahref][ahref]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <font color="black" face="'Gulim'">
            <span style="FONT-SIZE: 14pt">
             김치볶음밥<li>[link]</li><li>[ahref]</li>[search]<li>[search]</li><li>[link]</li>[link]
            </span>
           </font>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <li>[ahref]</li>[search][search]<li>[link]</li><li>[link]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           - 국내외 한식당 대표음식 125개 스토리텔링 (2번째) : 2번째 밥 이야기[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[search]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            <font face="'Gulim'">
             영어로 프라이드 라이스라고 불리는 볶음밥은 볶을 때 필요한 열매개체인 유지류와 조리 도구인 프라이팬이 대중화 되고 난 뒤 일반화된 음식으로 보아야 할 것이다. 일제강점기인 기록을 통해 1930년대 경에는 프라이팬이 국내에 도입 되고, 각종 프라이 요리가 소개되고 있는 것을 확인할 수 있지만 아직 대중화 되었다고 보기는 어렵다.
            </font>
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           김치볶음밥의 유래를 한 번 살펴보자. 한국인이면 누구나 만들 수 있고 또 좋아하는 이 김치볶음밥은 옛 문헌에 전혀 나타나지 않으며 그 유래는 무척 짧다고 할 수 있다. 밥과 김치, 즉 식재료는 오래 전부터 먹어 왔지만 조리도구인 프라이팬을 사용한 요리법은 그리 오래되지 않았기 때문이다. 김치만 잘게 썰어서 밥과 함께 프라이팬에 볶으면 되는 간단한 음식인데, 이 김치볶음밥을 만들기 위해서 필요한 것은 무엇일까? 물론 김치와 밥이 필요하다. 하지만 김치와 밥만 있다고 해서 김치볶음밥을 만들 수 있는 것은 아니다. 더욱 중요한 것은 밥을 볶기 위한 프라이팬과 화력조절이 자유로운 가스렌지, 볶기 위한 기름이다. 즉, 프라이팬이 없던 시대에는 볶음밥을 만들 수가 없었다.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[search]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            밥을 프라이팬에 기름과 함께 볶는 요리는 일제강점기 때 서양 또는 중국 요리가 소개되면서부터 시작되었다. <조선무쌍신식요리제법>이라는 책에 보면 ‘푸라이라이스 보금밥’이라는 요리를 만든 방법이 자세히 안내되어 있는데 서양요리로 분류되어 있다.<li>[link]</li><li>[ahref]</li>[search][ahref]<li>[search]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           김치볶음밥은 볶음밥이라는 새로운 메뉴와 조리 방법이 서양요리로든 중국요리로든 소개된 후, 그리고 중국집 볶음밥에 익숙해 진 후, 각 가정에서 김치를 재료로 하여 만들게 된 것이라고 볼 수 있겠다. 그 시기는 물론 각 가정에서도 프라이팬을 사용하여 무언가를 볶을 수 있게 된 후일 것이다. 또는 어느 음식점에서 번득이는 아이디어로 김치볶음밥을 내놓았을 수도 있겠다. 하지만 볶음밥이란 중국집에만 있는 메뉴였다는 사람들의 기억으로 보아 가정식에서 출발했다는 설이 힘을 얻고 있다. 발생지역은 서울이었을 것이다. 프라이팬의 보급이나 중국집이라는 외식문화의 시작 등을 생각해보면 말이다.<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search][link]<li>[link]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <li>[search]</li><li>[ahref]</li>[search][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][ahref][search][search][search]<li>[search]</li>[search]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            <font face="'Gulim'">
             우리나라에서 볶음밥의 원조는 중국식 볶음밥과 일본에서 유입된 오믈렛라이스의 유행이 견인차 역할을 했다고 볼 수 있을 것이다. 다른 나라에서 도입된 볶음밥 조리법의 'Gulim'에 우리나라 대표 음식이자, 김치를 재활용하여 만들어진 것이다.
            </font>
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            밥과 신 김치를 활용하여 만들어진 훌륭한 메뉴일 뿐만 아니라, 다른 볶음밥과 달리 김치가 들어가면서 느끼한 맛을 감소시킬 수 있다는 장점 때문에 한국인에게 많은 사랑을 받는 메뉴 중 하나이다.<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <li>[search]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            1990년대 초반 볶음밥의 대중적 선풍을 일으켰던 것 중 하나는 ‘철판볶음밥’ 집이었다. 볶음밥에 들어가는 재료를 취향에 따라 2가지 정도 고르면 즉석에서 조리사가 넓 다란 철판에서 고슬고슬하게 볶은 뒤 입맛 돋우는 라이스 소스를 끼얹어 주는 것이었다. 이러한 퓨전식 철판볶음밥에서도 손님들의 대다수가 볶음밥의 느끼함을 없앨 수 있는 김치를 반드시 속 재료로 선택하고 있다는 것에 착안해, 볶음밥 재료 선택의 폭을 넓혀주려는 차원에서 이후에는 모든 볶음밥에 김치는 기본으로 들어가도록 한 집들이 많았다. 즉, 김치볶음밥이 기본 베이스가 된 위에 고기나 채소 또는 해물 등 중에서 추가 재료를 선택해 만들어 먹었던 것이다.[search][ahref]<li>[link]</li><li>[search]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            <font face="'Gulim'">
             집에서는 비교적 간단하게 만들 수 있는 것이 김치볶음밥이지만 요리사의 손을 거치면 새롭게 재탄생된다. 그래서 현재는 매우 다양한 재료들을 사용한 김치 볶음밥 요리가 만들어지고 있다. 요리사들의 상상력에 의해서 새로운 맛의 요리가 탄생하는 것이다.
            </font>
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <li>[ahref]</li>[ahref][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            김치볶음밥은 별다른 반찬 없이도 먹을 수 있는 음식이다. 이는 한국인의 최소한의 한 끼 식사가 밥과 김치만 가지고도 가능한 것과 마찬가지다. 그래서 별다른 식재료가 없을 때, 상차림이 번거로울 때, 특별히 구미가 당기는 음식이 생각나지 않을 때, 특히 밥은 있는데 딱히 처리할 방법이 생각나지 않을 때 김치볶음밥을 하게 된다. 밥과 김치만 놓고 먹는 초라한 식탁에 비해 김치볶음밥은 똑같은 재료의, 그러나 맛도 외형도 그럴듯한 단품요리가 되는 것이다. 이것이 김치볶음밥을 모든 한국인이 사랑하는 이유이다.[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            이렇게 가정에서 손쉽게 만들 수 있고 다른 반찬이 필요 없는 김치볶음밥은 이제 한국의 대표요리가 되고 있다. 외국인들이 즐겨하는 요리로 재탄생되고 있는 것이다. 그래서 현재 예전의 가정에서 간단히 먹던 김치볶음밥은 새로운 재료와 상상력으로 새로운 한식당 메뉴로 새롭게 거듭나고 있다. 김치는 오색과 오미를 모두 갖춘 대표 음식으로 채소류의 신선한 맛, 젖산발효에 의한 상쾌한 맛, 고춧가루 등 향신료에 의한 독특한 맛, 젓갈류의 감칠맛이 어우러져 식욕을 돋우며 여러 채소에서 우러난 비타민, 무기질 등 영양물질을 풍부하게 포함하고 있어 식욕이 촉진되는 음식이다.<li>[search]</li>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref]
           </span>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           김치에 들어가는 다양한 채소들은 열량이 적고 식이섬유소를 많이 함유하고 있어 체중조절에 도움을 준다. 특히 고추에는 캡사이신이라는 성분이 있어 신진대사작용을 활발히 함으로서 지방을 연소시켜 체중조절에 도움을 준다. 연구결과에 의하면 고추만 투여했을 때 보다는 김치에 든 고춧가루가 다이어트 효과가 탁월 하다고 보고하고 있다. 김치가 숙성함에 따라 증가하는 유산균과 유기산, 식이 섬유소는 장을 깨끗이 하는 정장작용을 하고 장내 발암물질 활성을 떨어뜨리고 대장의 pH를 떨어뜨려 대장암을 예방하는데 중요한 역할을 한다.[link]<li>[link]</li>[search][link][search]<li>[link]</li>[search]<li>[link]</li>
          </p>
          <p style="LINE-HEIGHT: 180%; MARGIN-TOP: 0px; MARGIN-BOTTOM: 0px">
           <span style="FONT-SIZE: 10pt">
            이러한 김치를 재료로 만든 김치 볶음밥은 김치의 영양을 고스란히 담고 있으며 거기다 밥의 당질 섭취까지 더해지고 그 외 첨가된 부재료에 의해 훌륭한 한 끼 식사의 역할을 할 수 있다.[ahref]<li>[search]</li><li>[ahref]</li><li>[ahref]</li>[ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li>
           </span>
          </p>
         </td>
        </tr>
        <tr>
         <td class="license" colspan="4">
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <div class="opennuri">
      <p>
       이 저작물은
       [ahref]
       
       에 따라 이용하실 수 있습니다.
      </p>
     </div>
     <br/>
     <br>
      <li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
     </br>
     <div class="bottombtn_part">
      <div class="listbtn">
       [ahref]
       
       [link]
       
       <a href="5" onclick="fnPreNext('175');return false;">
       </a>
      </div>
     </div>
    </div>
   </div>
   <div class="clear">
   </div>
   <div id="footerAll">
    <div class="footer_left">
     <ul class="footer_menu">
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/web/s_etc/copyright/copyrightGuide.jsp">
        저작권정책
       </a>
      </li>
      <li>
       <a href="/web/s_etc/guide/homepageGuide.jsp">
        누리집 이용안내
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li class="end">
       [ahref]
       
      </li>
     </ul>
     <div class="footer_bottom">
      [link]
      
      <address>
      </address>
     </div>
    </div>
    <div class="footer_right">
     [link]
     
     [link]
     
    </div>
    <noscript>
    </noscript>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0188
  </b>
 </body>
</html>