--->|SGUgaXMgcXVvdGVkIGFzIHNheWluZzogIkkgbG92ZWQgdGhvc2Ugc3RlYW0gdHJhaW5zIGFuZCB0aGF0J3MgcHJvYmFibHkgd2h5IEkgcHV0IHRoZW0gaW4gbXkgZmlsbXMuCkkgZGVmaW5pdGVseSBoYXZlIEdpZ2FiaXQgZmliZXIsIGFuZCBpdCBkZWZpbml0ZWx5IG9ubHkgJDY1IGEgbW9udGggZm9yIG1lLiAKV0hFTiBFVkVSWUJPRFkgVEhFIEJVSUxESU5HIFdJTEwgQkUgQU5EIEdPIFRFTEwgVEhFTSBXSEVSRSBJJ00gSElESU5HID8gWU9VIE1VU1QgVEhKTksgUFVUIFRIQVQgUElQRSBJJ0xMIE5PVCBIQVZFIFlPVSBTSUdOQUxJTkcgV0lUSCBJVCBJIEJFICdMT09LLCBZT1UgU1VSRUxZIFdPVUxETidUIEhBUk0gVEhFIFlPVVdTIFdIWSBET04nVCBZT1UgQUxMT1cgSEVSIFRPIExFQVZFIEJMT05EMUUgRE9OQUxEIERVQ0sgQ09NRSBPUywgVGVBQVBMRVRPTSwgVldFJ0xMIFNORUFLIFVQIE9NIFRXRUFBIEFORCBUSEVXIEEsIFRIT1NFIFBDQVRURUQgTVVTVCBTTEVFUElORyBPTUUgT0YgQ09NRSBCWS4nIE5FVkVSICJWIHYgciB2IEEgSiBJVFMgVU5GQUlSIFRPIFRBS0UgMSBBRFZBTlRBNkUgT0YgQSBNQU4gSU4gVEhJUyBQT1NpVElPTiBJTEwgQk9SUk9XIEEgRklWRSBBIE1WIFdJRkUgU09UIE1WIE1PTkVZIFdISUxFIFQgV0FTIElOIFRIRSBTSE9XRVIgVk9PIFdBU0hFRCBDQU4gVFRIQVQgRkFTVD8gQSBQUk9WRSBQUklTQ0lMTEEnUyBQT1AgRlJFQ0tMRVMgQU5EIEhJUyBGUklFTkRTIHVyQUNpIExFQVNFIFRINTFFLiAKQnV0IGhleSwgb25lIHBlcnNvbmFsIHJpZ2h0cyBpbiB0aGlzIGRheSBhbmQgYWdlIHNlZW1zIHRvIG91dHdlaWdoIHRoZSByZXN0IG9mIHRoZSBwb3B1bGF0aW9uLgpOb3QgbXVjaCB0YWxraW5nLCBhbG1vc3Qgbm8gbGF1Z2hpbmcuIApTbyBOYXRlIGlzIHRoZXJlIG9uIHRoZSBiYWNrIG9mIGJhcnN0b29sLiBTdXJlbHkgeW91IGRvbiB0aGluayB0aGF0IGJhcnN0b29sIGRlc2VydmVzIG5vdGhpbmcgZnJvbSBhbGxvd2luZyBoaW0gdG8gZ28/IEFsc28gSSB0aGluayB0aGUgRGF2ZSBzdGFuY2UgaXMgdGhhdCBOYXRlIHdpbGwgZ2V0IHBhaWQuIApXaGVuIGRvaW5nIGNhc2ggb3V0cywgaXQgZ29lcyBkaXJlY3RseSB0byB5b3VyIGNhcmQuIEFuZCB0aGUgZ29vZCB0aGluZyBhYm91dCBpdCBpcyB0aGF0IHRoZSBwcmVwYWlkIEFUTSB3b3JrcyB3aXRoIG1vc3QgbG9jYWwgQVRNIG1hY2hpbmVzLi4gCkkgd2FzIG5vdCBzdXJwcmlzZWQgdGhhdCB0aGlzIHBhdGllbnQgd2FzIHN0aWxsIHN1ZmZlcmluZyBmcm9tIGh5cG90aHlyb2lkIHN5bXB0b21zLCBpbmNsdWRpbmcgYWlyIGh1bmdlci4KSWNlIGFmdGVyIGV2ZXJ5IHJpZGUuIFNlbGYgbWFzc2FnZSBvZiBzYXJ0b3JpdXMgbXVzY2xlIGJlbGx5IHByaW9yIHRvIHJpZGUgYW5kIHNldmVyYWwgaG91cnMgYWZ0ZXIgKG5vIG5lZWQgdG8gdG9ydHVyZSB5b3Vyc2VsZiwganVzdCB0cnlpbmcgdG8gZWFzZSBtdXNjbGUgc3Bhc20pLCBsb2NhbCBhcHBsaWNhdGlvbiBvZiB0b3BpY2FsIGFudGkgaW5mbGFtbWF0b3J5IHN1Y2ggYXMgdm9sdGFyZW4gZ2VsIHByaW9yIHRvIHJpZGUsIGFuZCB3YXJtIHVwIGFwcHJvcHJpYXRlIHRvIHN0YWdlIG9mIHRyYWluaW5nIHByb2dyYW0uLiAKQnJhemlsaWFuIFBvcnR1Z3Vlc2UgbGFja3MgdGhpcyBjb250cmFzdCBhbmQgc28gaXRzIC9pLyBvY2N1cGllcyBhIHNsaWdodGx5IHdpZGVyIHJhbmdlIGluIHRoZSB2b3dlbCBzcGFjZS4gCklmIHNvbWVvbmUgY29sZCBjYWxscyBhIDNiIElQIGFuZCB0aGUgUEZSIGZvbGRzLCBJJ2QgcHJvYmFibHkgZmluZCBteXNlbGYgZG9pbmcgYSBsb3Qgb2YgY2hlY2tpbmcgc2luY2UgbXkgM2IgcmFuZ2UgY29udGFpbnMgYmx1ZmZzIGFuZCBJUCBoYXMgb25jZSBhZ2FpbiBhIGNvbmRlbnNlZCB2YWx1ZSByYW5nZS4KSXQgd2lsbCBiZSBpbXBvc3NpYmxlIHRvIGdvIHRvIHRoZSBtb3ZpZXMgaW4gdGhlIG5leHQgZmV3IHdlZWtzIGFuZCBub3QgaGVhciBzb21ldGhpbmcgYWJvdXQgU0ZJRkYuIFdpdGggdGhlIGZlc3RpdmFsJ3MgYW5udWFsIGluY2VwdGlvbiwgdGhlIGxhbmRzY2FwZSBvZiB0aGUgY2l0eSBjaGFuZ2VzLiAKVGhleSBsaXN0IGFsbCB0aGUgcmVhc29ucyB3aHkgdGhleSB0aGluayBHZXJtYW55IGlzIG5vdCBhIHN0YXRlIGFuZCBkb2VzbiBhY3R1YWxseSBleGlzdC4gClNoZSBoYXMgcmVzZWFyY2hlZCBob3cgdGhlIG1hcmtldGluZyBvZiBwcm9kdWN0cyBzdWNoIGFzIG5pY290aW5lIHJlcGxhY2VtZW50IHBhdGNoZXMsIGRlYnQgY29uc29saWRhdGlvbiBsb2FucyBhbmQgaWRlbnRpdHkgdGhlZnQgcHJvZHVjdHMgaW5mbHVlbmNlIGNvbnN1bWVyIHBlcmNlcHRpb25zIGFuZCByaXNreSBiZWhhdmlvci4gCkFmdGVyIG15IHZpc2l0LCBuZWlnaGJvcmhvb2QgcG9rZXIgbmlnaHQgd2FzIG1hZGUgbWVuIG9ubHkuIFNvbWVvbmUgcG9zdGVkIGluIG91ciBuZWlnaGJvcmhvb2QgZm9ydW0gdGhhdCB0aGV5IHN0YXJ0aW5nIGEgbmVpZ2hib3Job29kIHBva2VyIG5pZ2h0LiBJIHNhaWQgaG93IGV4Y2l0ZWQgSSB3YXMgYWJvdXQgaXQsIGFuZCBzYWlkIGl0IHRvbyBiYWQgaXQgaGFkbiBoYXBwZW5lZCBzb29uZXIsIGFzIHdlIGFyZSBtb3Zpbmcgb3V0IG9mIHN0YXRlIGluIHR3byB3ZWVrcy4gSSBhc2tlZCB0byBiZSBhZGRlZCB0byB0aGUgcHJpdmF0ZSBncm91cCBmb3IgaXQuIEFmdGVyIEkgc2VudCB0aGUgaW52aXRlLCBJIHNhdyBhIGNvbW1lbnQgYnVyaWVkIGRlZXAgaW4gdGhlIHRocmVhZCBhYm91dCBpdCBiZWluZyBhIHdheSB0byBhd2F5IGZyb20gdGhlIHdpdmVzIFNvIEkgc2VudCBhIHByaXZhdGUgbWVzc2FnZSBhbmQgc2FpZCAiSGV5LCBzb3JyeSBkaWRuIHJlYWxpemUsIGlmIGl0IG1lbiBvbmx5IGp1c3QgbGV0IG1lIGtub3cuIiBJIHdhcyBhc3N1cmVkIGl0IHdhc24gYW5kIHRoYXQgSSB3YXMgd2VsY29tZS4gSSB3YXMgU08gZXhjaXRlZC4gSSBub3QgZ3JlYXQgYXQgcG9rZXIgYnV0IEkgbGVhcm5pbmcgYW5kIEkgcHJldHR5IGZyaWVuZGx5LCBidXQgZGVmaW5pdGVseSBhbiBpbnRyb3ZlcnQgc28gSSBwcmFjdGljaW5nIG15IHNvY2lhbCBza2lsbHMgYW5kIGFtcGluZyBteXNlbGYgdXAgdG8gYmUgbW9yZSBvdXRnb2luZyBzbyB3aGVuIHdlIG1vdmUsIEkgbm90IHNvIGxvbmVseSBhbmQgaXNvbGF0ZWQgbGlrZSBJIHRlbmQgdG8gbWFrZSBteXNlbGYuCkl0IGVudGlyZWx5IHBvc3NpYmxlIHRvIHByb3ZpZGUgYSBwcm9kdWN0IG9yIHNlcnZpY2Ugd2l0aG91dCBhY3RpdmVseSBjcmVhdGluZyBoYXJtcyBpbiB0aGUgcHJvY2Vzcy4gCklmIHRoZSBjYXJkcyB5b3Ugc2VlIGFyZSBhIHBva2VyIGNvbWJpbmF0aW9uLCBpdCB3aWxsIGJlIGRpc3BsYXllZCBvbiB0aGUgc2NyZWVuLiBZb3VyIGJlc3QgcG9rZXIgaGFuZCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgc2VsZWN0ZWQuIApJbiB0aGUgZm9sbG93aW5nIGRheXMsIEkgd2FzIHBsZWFzZWQgdG8gZmluZCBteSB0aGlnaHMgYW5kIGFicyBzdGlsbCBmZWx0IGFzIHRob3VnaCB0aGV5J2QgYmVlbiB3b3JrZWQuIApGYXNzYmVuZGVyIGJpZCB0byByZXR1cm4gYXMgQ2l0eSBtYXlvciBmYWlscwpMaW1pdCBIb2xkJ2VtIGlzIHBsYXllZCB3aXRoIGEgZml4ZWQgYmxpbmQgc3RydWN0dXJlIGFuZCBmaXhlZCBiZXR0aW5nIGxpbWl0cyBvbiBlYWNoIHJvdW5kLiBUaGUgYmlnIGJsaW5kIGlzIHVzdWFsbHkgZXF1YWwgdG8gdGhlIHNtYWxsZXN0IHNpemUgYmV0LCBhbmQgdGhlIHNtYWxsIGJsaW5kIGlzIGhhbGYgdGhlIGJpZyBibGluZC4gClRoZXkgbGV0IGl0IGdvIHdpdGhvdXQgYXR0YWNobWVudCwgYW5kIGEgd2hvbGUgbmV3IGZlZWxpbmcgY29tZXMgdXAuLiAKT2ggeWVhaCBtYW4uIFdlbGwsIHNob3VsZCBiZSBzaW5jZSB0aGV5IGFyZSB3YXkgbW9yZSBsYXggdGhhbiBVUy4gCkl0IGhhcyBzb21lIGluZ2VuaW91cyBmZWF0dXJlcyB0aG9zZSBoYXZlIG1ha2UgaXQgYSB1bmlxdWUgYW5kIHVsdGltYXRlIHN0eWxpbmcgdG9vbCBmb3Igc2hvcnQgaGFpciBvZiBib3RoIG1lbiBhbmQgd29tZW4uIFRoZSBHaGQgbWluaSBzdHlsZXIgaXMganVzdCBwZXJmZWN0IGZvciBjcmVhdGluZyBjdXJscywgbW92ZW1lbnQsIHZvbHVtZSwgYW5kIHN0cmFpZ2h0IGhhaXIuIApJIHdlbnQgYmFjayBpbnRvIGdyaW5kIG1vZGUgYW5kIHdvcmtlZCA3MCBob3VyIHdlZWtzLiAKIlRoZSB2aWN0aW0gdG9sZCB0aGUgYWNjdXNlZCB0aGF0IHNoZSBkaWQgbm90IHdhbnQgdG8gZW5nYWdlIGluIHRoZXNlIGFjdHMsIGhvd2V2ZXIgc2hlIHdhcyBhZHZpc2VkIGl0IHdhcyBubyBsb25nZXIgaGVyIGNob2ljZSBhbmQgd2FzIHRocmVhdGVuZWQgd2l0aCBwaHlzaWNhbCB2aW9sZW5jZSBpZiBzaGUgZGlkIG5vdCBmb2xsb3cgdGhlaXIgZGlyZWN0aW9uLCIgQmVhdmVuIERlc2phcmRpbnMgc2FpZC4KQWxzbywgaW4gV2VzcGUsIHRoZSBzaW5nbGUgInMiIGlzIHByb25vdW5jZWQgbGlrZSBhbiBFbmdsaXNoICJzIiwgbm90IGxpa2UgYW4gRW5nbGlzaCAieiIuIApUaGlzIGlzIG5vdCB3aGF0IEkgd2FzIHRhbGtpbmcgYWJvdXQuIEZpcnN0IG9mIGFsbCwgd2hlbiBJIGZpcnN0IHJlYWQgdGhlIHdoaXRlcGFwZXIsIHRoZSA1MSUgYXR0YWNrIHNlZW1lZCBsaWtlIGEgam9rZS4gTm9ib2R5IGlzIHN0dXBpZCBlbm91Z2ggdG8gZW5nYWdlIGluIHN1Y2ggYW4gYXR0YWNrIGZvciB0aGUgcmVhc29ucyB5b3Ugc3RhdGVkLgpJIGFtIGEgZm9ybWVyIHRlYWNoZXIsIDE5OTQgICAyMDExLiBJIGFncmVlIGNvbXBsZXRlbHkuIChHcmVhdCBib29rIG9uIHRoZSBzdWJqZWN0OiBTYXZhZ2UgSW5lcXVhbGl0aWVzIGJ5IEpvaG5hdGhvbiBLb3phbC4pIE91ciBvbmNlIHRvcCBub3RjaCBzY2hvb2xzLCB3aGVyZSBpdCB0b29rIHllYXJzIHRvIGdldCBpbiBmb3IgYW4gaW50ZXJ2aWV3LCBhcmUgbm93IGZhY2luZyBhIHRlYWNoZXIgc2hvcnRhZ2UgYWZ0ZXIgR292LiAKQnV0IHdlIGtub3cgdGhhdCBhIHdob2xlIGJ1bmNoIG9mIEV1cm9wZWFucyBnb3QgdG9nZXRoZXIgYW5kIGRpZCBzb21lIHdob29wIGFzcyBvbiB0aGUgTmF0aXZlIEFtZXJpY2FuIHBlb3BsZS4gCkkgdGhpbmsgaXQgd291bGQgYmUgb2theSBmb3IgdGhlbSB0byBoYXZlIGEgbnVtYmVyIG9mIHNtYWxsIHBsYW5ldHMgYW5kIGEgbnVtYmVyIG9mIG1lZGl1bSBwbGFuZXRzIGFzIHdlbGwuIApUaGF0IGFib3V0IG15IGV4dGVudCBvZiBmYWNlIGltcHJvdmVtZW50IGtub3dsZWRnZS4uIApDaW5jZXJhdG8gIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KRXZlcnkgbWVkaWNhbCBzcGVjaWFsdHkgaGFzIHZhc3QgcXVhbnRpdGllcyBvZiBza2lsbHMgYW5kIGtub3dsZWRnZSB0aGF0IGlzIGFjcXVpcmVkIHdoaWxlIG9uIHRoZSBqb2IgICBlYXN5IGV4YW1wbGVzIGFyZToKUGxlbnR5IG9mIGNhc2lub3MgaGF2ZSB0aGVpciB1bmZhdm9yYWJsZSBzbG90IG1hY2hpbmVzIHBsYWNlZCBuZWFyIHRoZSBkb29yLCBuZWFyIHBva2VyIGFuZCBibGFja2phY2sgdGFibGVzIGFuZCB0aGVzZSBhcmUgbWFjaGluZXMgdGhhdCB5b3UgaGF2ZSB0byBzdGF5IGF3YXkgZnJvbS4gQ2FzaW5vcyBkb24ndCB3YW50IHRoZWlyIGJsYWNramFjayBhbmQgcG9rZXIgcGxheWVycyB0byBiZSBkaXN0cmFjdGVkIGJ5IHNvdW5kcyBjb21pbmcgZnJvbSBjaGVlcmluZyBwZW9wbGUgY2xvc2UgdG8gdGhlc2Ugc2xvdCBtYWNoaW5lcyBhbmQgZHVlIHRvIHRoaXMgcmVhc29uIHRoZXkgZXN0YWJsaXNoIHRoZSBiZXN0IHNsb3QgbWFjaGluZXMgYXdheSBmcm9tIHRoZXNlIHRhYmxlcy4KIkhlcmUgYSBuZXcgZXhoaWJpdCB3ZSBwdXQgaW4gYWJvdXQgYSB5ZWFyIGFnby4gClRoZSBCZXN0IEd1aWRlIHRvIE9yZ2FuemluZyBZb3VyIE93biBQb2tlciBIb21lIEdhbWVzVGhpcyBhcnRpY2xlIGlzIGludGVuZGVkIGFzIGEgJ2hvdyB0bycgZ3VpZGUgZm9yIGFueW9uZSBpbnRlcmVzdGVkIGluIG9yZ2FuaXppbmcgcG9rZXIgaG9tZSBnYW1lcy4gSXQgcHJvbW90ZXMgcG9rZXIgYXMgYSBzb2NpYWJseSBlbmpveWFibGUgZ2FtZSBvZiBza2lsbC4gSW4gYWNjb3JkYW5jZSB3aXRoIEh1YnBhZ2VzIHBvbGljeSwgaXQgZG9lcyBub3QgcHJvbW90ZSB0aGUgYWN0IG9mIGdhbWJsaW5nLgpJIHN0YXJ0ZWQgRHJhZ29uIFBlYXJsIGJ5IFlvb24gSGEgTGVlLiBJIGxvdmVkIGhpcyBNYWNoaW5lcmllcyBvZiBFbXBpcmUgc2VyaWVzIGFuZCB3YXMgZXhjaXRlZCB0byBzZWUgd2hhdCB3YXMgbmV4dC4gCkFueW9uZSBsaXZpbmcgaW4gdGhpcyBlYXJ0aCBoYXZlIGFjY2VzcyB0byB0aGVzZSBwcm9kdWN0cyBhbmQgdGhlIGNvbXBhbmllcyBoYXZlIGVuc3VyZWQgdGhlIGRlbGl2ZXJ5IG9mIHRoZXNlIHByb2R1Y3RzIGV2ZW4gaW4gdGhlIHJlbW90ZSBhcmVhcyBvZiB0aGlzIHdvcmxkLiBUaGUgbGVhZGluZyBkZWxpdmVyeSBvcmdhbml6YXRpb25zIGFyZSB3b3JraW5nIHRvZ2V0aGVyLiAKSSBiZWVuIHJlYWRpbmcgYSBib29rIGNhbGxlZCBDYW5vbiBSZXZpc2l0ZWQgYnkgTWljaGFlbCBLcnVnZXIuIApKZXR6dCBnaWJ0IGRlciBTY2hhZmZuZXIga2xlaW4gYmVpLiBFciBzYWd0IGVzIHBhc3N0IHNvIHVuZCBlciB3cmRlIE9tZXIgbmljaHQgbWVociBiZWxlc3RpZ2VuLiBJY2ggZ2ViZSBpaG0gbm9jaCBkaWUgNjAgdW5kIGtsYXRzY2hlIGlobSBhdWYgZGllIFN0aXJuIHdpZSBtYW4gZGFzIG1pdCBzY2hsZWNodGVyIFNjaGxlciBtYWNodC4gVW50ZXIgaGVtaXNjaGVuIFJ1ZmVuIHdpZSAiRHUgUHJvdG9qb2NrZWwhIiB1bmQgIkhhdSBhYiBkdSBWb2xsZ2Fzb3R0byEiIHZlcmxlc3N0IGVyIGRhcyBBYnRlaWwuIERpZSBPbWVyIGRhbmt0IGFsbGVtIHVuZCBzdHp0IHNpY2ggdmVybGVnZW4gaGluLiBFcyB3YXIgdmllbCBmciBzaWUuIFZvbiBBdWZyZWd1bmcgaGVyLgpUaGUgUmlzaW5nIFN1biBpcyB3ZWRnZWQgYmV0d2VlbiB0d28gYmFycyBpbiBhIHJvdyBvZiB0d28gc3RvcnkgYnVpbGRpbmdzIGFib3V0IGEgYmxvY2sgZnJvbSB0aGUgc3RhdGUgQ2FwaXRvbC4gClRoZSBzdGF0ZSBiYXIgc29jaWV0eSBkb2VzIHJlZmVycmFscy4gWW91IGFyZSBhbiB1bmFybWVkIG1hbiBpbiBhbiBhcnRpbGxlcnkgZHVlbCwgYXNraW5nIHdoZXRoZXIgYW4gdW1icmVsbGEgaXMgdGhlIHJpZ2h0IHNvbHV0aW9uLiAKR25yYWxlbWVudCwgZGFucyBsZXMgcHJhdGlxdWVzIGNoYW1hbmlxdWVzLCBsZSBqZW5lIGZhdm9yaXNlIGxlIHRyYXZhaWwgaW5pdGlhdGlxdWUsIGNvbW1lIGNlbHVpIHF1aSBlc3QgcHJhdGlxdSBlbiBBbXJpcXVlIGR1IE5vcmQgbG9ycyBkZXMgcHJldXZlcyBkZSBwcnBhcmF0aW9uIGF1eCBmb3NzZXMgZGUgdmlzaW9uLi4gCldlIGRvbiBrbm93IGhpcyBiYWNrc3Rvcnkgb3IgaGlzIGVudGlyZSBtb3RpdmF0aW9uLiAKQ2VzIHNhbmNlcyBzb250IGxlIHRyb2lzaW1lIHZvbGV0IGR1IGN5Y2xlICJMJ2F0dGVuZHUgZXQgbCdpbmF0dGVuZHUsIGRhbnMgbGEgQmlibGUgZXQgZGFucyBsYSB2aWUiLgpCZXJuYXJkIG9uIEF0d29vZCBhbmQgU3QuIERlbm5pczsgbXkgZWxkZXN0IGF0dGVuZHMgc2Nob29sIGF0IHRoZSBsYXR0ZXIpIGFuZCB0aGV5IGxlYW4gb24gdGhlIGxpYmVyYWwgc2lkZS4gSSBjaGVja2VkIHdpdGggbXkgd2lmZSB3aG8gaXMgbW9yZSBwbHVnZ2VkIGluIHRvIHRoZSBvdGhlciBjaHVyY2hlcyBpbiB0aGUgZGlvY2VzZXMsIGFuZCBzaGUgYWdyZWVkIHRoYXQgUXVlZW4gb2YgUGVhY2UgaXMgYWxzbyBtb3JlIGxpYmVyYWwsIHRoYW4gc2F5IE1hcmlhIEdvcnJldHRpLiAKQXJ0aW55YSBkYWt3YWggdGVsYWggbWF0aS4gCkZhc3QgZm9yd2FyZCB0byBub3cuIApXZSBhcmUgdmVyeSBiaWcgcGxheWVycyBvbiBhbnl0aGluZyB0byBkbyB3aXRoIHJlc3BvbnNpYmxlIGdhbWJsaW5nLiBDb3N0ZWxsbyBzYWlkIHRoZSBRdWVlbnNsYW5kIEdvdmVybm1lbnQgbmVlZGVkIHRvIHJlZHVjZSB0aGUgbWF4aW11bSBiZXQgb24gcG9raWVzIHRvICQxIGFuZCBzaWduaWZpY2FudGx5IHJlZHVjZSB0cmFkaW5nIGhvdXJzLi4gCkthaXNlciBQZXJtYW5lbnRlIGlzIGEgZ29vZCBleGFtcGxlLiAKU2hlIHN1cHBvcnRlZCB0aGUgc3ViZGl2aXNpb24gb2YgNDIgbG90cyB3aGljaCB3b3VsZCBiZSB3aXRoaW4gJyd3YWxraW5nIGRpc3RhbmNlIG9mIHRoZSBuZXcgbXVsdGltaWxsaW9uIGRvbGxhciB0cmFpbiBzdGF0aW9uJycuICcnV2UgbmVlZCBhIGRpdmVyc2UgaW5jb21lIHN0cmVhbSBhdCBUaGUgTGlua3MuIApXZSBzaG91bGQgZG8gb3VyIGJlc3QgdG8gcmVzcGVjdCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGUgZXNzZW5jZSBvZiB0aGlzIGFyZ3VtZW50IGFnYWluc3QgaGVyLCBidXQgaW4gcmVhbGl0eSwgaXQgc3BpdGUgYW5kIGRpc3Jlc3BlY3QgZm9yIHRob3NlIHBlb3BsZSBzaG93aW5nLiBNZWV0aW5ncyBhcmUgYW4gb3V0ZGF0ZWQgZGlzY2lwbGluZS4gClRoZXJlIGFyZSB0aG91c2FuZHMgb2YgYm9va3MsIGRpZXRzLCBmYWRzLCBzdWJyZWRkaXRzLCBhbmQgY29udmVyc2F0aW9ucyBhYm91dCBob3cgdG8gbG9zZSB3ZWlnaHQuIApRdWVyY3VzIHBlZHVuY3VsYXRhCkhvd2V2ZXIsIHdpdGggYSByZWFjdGl2ZSByZXNpbiBib3dsaW5nIGJhbGwgeW91IHNob3VsZCBiZSBhYm91dCB0byBzdGFuZCBvbiBhcm91bmQgdGhlIDE1dGggYm9hcmQgYW5kIHB1dCB5b3VyIGJhbGwgZG93biBiZXR3ZWVuIHRoZSBmaXJzdCBhbmQgc2Vjb25kIGFycm93IHdpdGggYSB2ZXJ5IHNtYWxsIGFtb3VudCBvZiByb3RhdGlvbiBhbmQgaXQgd2lsbCBwaWNrIHVwIGFuZCBob29rIHRvd2FyZHMgdGhlIHBvY2tldC4gSSBndWVzc2luZywgc2luY2UgeW91IGFuICJhdGhsZXRpYyBidWlsZCIgeW91IGFyZSBqdXN0IHRocm93biB0aGUgYmFsbCB0b28gZmFzdC4gU28gdGhlIGJhbGwgaXMgcm90YXRpbmcgYnV0IHRoZSBzcGVlZCBpcyB0b28gaGlnaCBmb3IgaXQgdG8gYWN0dWFsbHkgcmVhZCB0aGUgbGFuZSBhbmQgdGhlIGZyaWN0aW9uIGFuZCBtYWtlIGl0cyBtb3ZlLiBGb2N1cyBvbiBzbG93aW5nIGRvd24geW91ciBmZWV0LCBsZXQgZ3Jhdml0eSBkbyBhbGwgdGhlIHdvcmsgYW5kIHdvcmsgb24gdGhhdCByZWxlYXNlIGFuZCBmb2xsb3cgdGhyb3VnaCwgdGhlIGJvd2xpbmcgYmFsbCB3aWxsIGRvIG1vc3Qgb2YgdGhlIHdvcmsgZm9yIHlvdSByaWdodCBub3cgYW5kIHRoYXQgY29tcGxldGVseSBva2F5LgpPcmJpdHJvbnMgIDM0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KSW4gdGhlIGFybXksIEkgd2FzIGEgY29tbXVuY2F0aW9ucyB0ZWNobmljaWFuIGZvciBhcm1vcmVkIHZlaGljbGVzLiBJIHdvcmtlZCBpbiB0aGUgc2FtZSBraW5kIG9mIGVudmlyb25tZW50IGFzIFBhbmcuIEkga25vdyBob3cgY3JhbXBlZCB0aGUgaW50ZXJpb3Igb2YgYSBmdWxseSBlcXVpcHBlZCBhcm1vcmVkIHZlaGljbGUgY2FuIGJlLiAKIiBOby4gSSBvbmx5IHdpc2ggSSBjb3VsZC4gCjEwLiBObyBTTVMgb3Igc29jaWFsIG1lZGlhIGNvbnRlbnQgKGluY2x1ZGluZyBSZWRkaXQpLgpJZiB0aGlzIGlzIGEgcG9zc2liaWxpdHkuIHRlYWNoIGFicm9hZC4gSSByZWNvbW1lbmQgdGhpcyBmb3IgbmVhcmx5IGV2ZXJ5b25lIHdobyB3YW50cyB0byB0ZWFjaCBpbiBhIGNvbXBldGl0aXZlIGZpZWxkLCBzdWNoIGFzIFNvY2lhbCBTdHVkaWVzIGxpa2UgbXlzZWxmLiBGb3IgbGlmZS4gZ2l2ZXMgeW91IHNvIG1hbnkgYW1hemluZyBleHBlcmllbmNlcy4gRm9yIHRlYWNoaW5nLCBnaXZlcyB5b3Ugc29tZSBjbGFzc3Jvb20gZXhwZXJpZW5jZSB3aGlsZSBtYWtpbmcgcmVsYXRpdmVseSBkZWNlbnQgbW9uZXkgKGtleSB3b3JkLiByZWxhdGl2ZSkuIEl0IGdvdCBtZSBtYW55IGludGVydmlld3MgYW5kIGNhbiBhbHNvIGdpdmUgeW91IGNsYXNzcm9vbSBleHBlcmllbmNlIGJlZm9yZSB5b3UgZGVjaWRlIHRvIHB1cnN1ZSBjZXJ0aWZpY2F0aW9uLgpQcm9zZWN1dG9ycyBzYXkgTHVkd2lnIFBheiAgIGEgcmV0aXJlZCB2aWNlIGRldGVjdGl2ZSAgIGFuZCBoaXMgd2lmZSBoZWFkZWQgdGhlIG9wZXJhdGlvbiwgcnVubmluZyBicm90aGVscyBpbiBRdWVlbnMsIEJyb29rbHluIGFuZCBIZW1wc3RlYWQsIExJLCB3aGljaCBnZW5lcmF0ZWQgbW9yZSB0aGFuICQyIG1pbGxpb24gZG9sbGFycyBiZXR3ZWVuIEF1Z3VzdCAyMDE2IGFuZCBTZXB0ZW1iZXIgMjAxNy4KQ29tbWVudCBtb2lucyBlbiBzdWJpciBsZXMgY29uc3F1ZW5jZXMgZXQgbW9pbnMgZW4gc291ZmZyaXIgPyBFdCBtaWV1eCBsJ2FjY29tcGFnbmVyIGN0IG1vbmRlIG1kaWNhbCA/RCdhYm9yZCwgbGVzIHJhY2luZXMgZHUgc3VycG9pZHMuIE9uIG5lIHBldXQgbCBlbmNvcmUgcGFzIGducmFsaXNlciBtYWlzIGJlYXVjb3VwIGRlIHBlcnNvbm5lcyBvbnQgcHJpcyBkdSBwb2lkcyBzdWl0ZSAgdW4gdHJhdW1hdGlzbWUsIGRlcyB2aW9sZW5jZXMgcGh5c2lxdWVzLCBwc3ljaG9sb2dpcXVlcyBvdSBzZXh1ZWxsZXMsIHVuZSBjYXJlbmNlIGFmZmVjdGl2ZS4gCkhlbGwgSSBrbm93IGRhbW4gd2VsbCBob3cgZ29vZCBpdCB3YXMgdG8gYmUgbWFraW5nICQyMy9ociBpbiBoaWdoIHNjaG9vbCBhcyB5b3VyIGZpcnN0IGpvYiwgYnV0IEkgZW5kZWQgdXAgY3J5aW5nIHRvIG15IHBhcmVudHMgd2FudGluZyB0byBxdWl0IGFmdGVyIGEgZmV3IHdlZWtzIGN1eiBJIHJlYWxpemVkIEkgaGF0ZSB3b3JraW5nIGZvciB0aGUgZXh0cmVtZWx5IHdlYWx0aGx5Li4gCk1vbmV5PyBXaG8gd2FudHMgbGVzcyBtb25leT8gRnJpZW5kIG9mIG1pbmUgbWFuYWdlZCBhIHNob2Ugc3RvcmUuIApJIHdvdWxkIGxvdmUgZm9yIGEgd2F5IGZvciBwb3RlbnRpYWwgbmV3IG1lbWJlcnMgdG8gY2xpY2sgb24gYSBidXR0b24gdG8gc3VibWl0IGFuIGFwcGxpY2F0aW9uIHRvIGpvaW4gb3IgcmVxdWVzdCBwZXJtaXNzaW9uIHRvIGpvaW4gdGhhdCB3b3VsZCBnbyB0byBhIHNlcGFyYXRlIHR5cGUgb2YgbW9kbWFpbCBvciBzb21ldGhpbmcgb3V0c2lkZSBvZiB0aGUgbm9ybWFsIG1vZG1haWwgcXVldWUuIEkgYWxzbyByZXF1ZXN0IHRoZXkgdXN1YWxseSBhdHRhY2ggYSBwaWN0dXJlIHZlcmlmeWluZyB0aGVpciBhZG1pdHRhbmNlIHRvIHByYWN0aWNlIGxhdyBzb21ld2hlcmUgYXMgcGFydCBvZiB0aGUgdGhlaXIgYXBwbGljYXRpb24uIApUaGFua3MgZm9yIHB1dHRpbmcgaXQgYWxsIHRvZ2V0aGVyLiBUaGVuIGFnYWluIHRoYXQgcGVyc29uIG1heSBoYXZlLiAKQnV0IG90aGVycyBkbywgYW5kIEkgdGhpbmsgdGhleSBzaG91bGQgYmUgZ2l2ZW4gdGhlIHJlc3BlY3QgdGhleSBkZXNlcnZlLiAKRWNrbGVidXJnIGFyZSBibHVlIGFuZCBnaWdhbnRpYyAgIHRoZWlyIGlyaXNlcyBhcmUgb25lIHlhcmQgaGlnaC4gVGhleSBsb29rIG91dCBvZiBubyBmYWNlLCBidXQsIGluc3RlYWQsIGZyb20gYSBwYWlyIG9mIGVub3Jtb3VzIHllbGxvdyBzcGVjdGFjbGVzIHdoaWNoIHBhc3Mgb3ZlciBhIG5vbmV4aXN0ZW50IG5vc2UuIApJdCBhbHJlYWR5IHJlc3RyaWN0cyBjdXN0b21pemF0aW9uLCB0aG91Z2gsIGRvZXNuIGl0P1NvIG1hbnkgc2tpbnMgZm9yIHdlYXBvbnMgYW5kIHlvdXIgZnJhbWUsIHRoZW4gdGhlcmUgdGhlIG9wZXJhdG9yIHN0dWZmLCB0aGVyZSBhIGxvdCBvZiBzdHVmZiB5b3UgY2FuIGdldCB0byB3aXRob3V0IHBsYXQuIEkgZG9uIHRoaW5rIHRoZSBmaXJzdCBjb2xvciBwYWxldHRlIHNob3VsZCBiZSBvbmUgb2YgdGhvc2UgdGhpbmdzLCBpIHRoaW5rIGEgUkdCIHN5c3RlbSB3b3VsZCBiZSBpZGVhbC4gSGVsbCwgaSBnbGFkbHkgYWNjZXB0IHRoYXQgc29tZSBvZiB0aGUgc2hpdCBCYXJvIHNlbGxzIGJlY29tZXMgcGxhdCBib3VuZCBpZiBpdCBtZWFudCBhIGNvbXBsZXRlIHBhbGV0dGUgb3IgYW4gUkdCIHN5c3RlbS4KVGhhdCBpcyBob3cgSSBmZWVsLCBJIGZlZWwgbGlrZSBhbiBhdGhsZXRlIHdobyBpc24gYmVpbmcgZmVkIGVub3VnaCBhbmQgdGhlbiBiZWluZyBibGFtZWQgZm9yIG5vdCBiZWluZyBzdWNjZXNzZnVsIGFuZCB0aGVuIGJlaW5nIGdpdmVuIGEgYnVuY2ggb2YgY3JhcHB5IGFkdmljZSBpbnN0ZWFkIG9mIGZvb2QuLiAKU28gaGUgZ2V0cyBob21lIHRvIGhhdmUgZGlubmVyIGFuZCBraXNzIHRoZSBraWRzIGdvb2RuaWdodCwgdGhhdCBpdC4gVGhhdCBvbmUgb2YgdGhlIHdvcnN0IHBhcmVudCBjaGlsZCByZWxhdGlvbnNoaXBzIHlvdSBjYW4gaGF2ZSwganVzdCBzZWUgeW91ciBwYXJlbnQgbGVhdmUgaW4gdGhlIG1vcm5pbmcgYW5kIGdldCBiYWNrIGF0IG5pZ2h0LCB3aXRoIG5vIHRpbWUgdG8gYWN0dWFsbHkgZG8gYW55dGhpbmcgb3IgdGFsayB0byB0aGVtLi4gCk5vcnRoIFNpb3V4IENpdHksIFMuIEQuLCBhbmQgRGFrb3RhIE5lYi4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDIxIGhvdXJzIGFnb0kgYWN0dWFsbHkgZGlkIGJhY2sgaXQgdXAuIFJlZ3VsYXRvcnkgYWxpZ25tZW50IGlzIHRoZSBkZWZpbmVkIHJlc3VsdCBieSBBcnQuNiB3aGljaCBleHBsaWNpdGx5IHN0YXRlcyAibm8gZGltaW51dGlvbiBvZiByaWdodHMsIHNhZmVndWFyZHMgYW5kIGVxdWFsaXR5IG9mIG9wcG9ydHVuaXR5Ii5JdCBhbHNvIGxpdGVyYWxseSBzdGF0ZXMgIk5vIHNlY3VyaXR5IGluZnJhc3RydWN0dXJlIiAgIHdoaWNoIGlzIHVwIGZvciBpbnRlcnByZXRhdGlvbiB0byBzb21lIGV4dGVudC4gClRvZGF5LCB0aG91Z2gsIHdlIGhhdmUgcHJvYmxlbXMgdGhhdCB3ZSBrbm93IGZvciBhIGZhY3QgYXJlIDEwMCUgZ29pbmcgdG8gaGFwcGVuLiAKVGhlIHVuZGVybHlpbmcgcHJpbmNpcGxlIGlzIHRoYXQgb3duZXJzIGhhdmUgYSBiYXNpYyBkdXR5IHRvIGVuc3VyZSB0aGF0IHRoZWlyIHByb3BlcnR5IGlzIHJlYXNvbmFibHkgc2FmZSBhbmQgbWFpbnRhaW5lZCwgYW5kIHRvIGF2b2lkIGRlbGliZXJhdGVseSBjcmVhdGluZyBjaXJjdW1zdGFuY2VzIHdoZXJlIHBlb3BsZSBtYXkgYmUgaW5qdXJlZCBvciBraWxsZWQuIApMb3VpcyBDb3VudHkuIAoiSSB0aGluayB3ZSBoYWQgYSBwcmV0dHkgZ29vZCBzdGFydCB0byB0aGUgc2Vhc29uIGFuZCBJIGRvbid0IHdhbnQgdG8gZ28gYmFjayB0byBsYXN0IHllYXIgb3IgZXZlbiB0aGUgeWVhciBiZWZvcmUgdGhhdCwgYmVjYXVzZSB0aGF0J3MgcmVhbGx5IGZydXN0cmF0aW5nIGFuZCByZWFsbHkgdXBzZXR0aW5nIGJlY2F1c2UgSSBrbm93IGhvdyB0YWxlbnRlZCB0aGlzIHRlYW0gaW4gYWxsIHBoYXNlcy4uIApJdCBjYW4gY2FycnkgYXMgbWFueSBhcyBzZXZlbiBwZW9wbGUgYW5kIGhhcyB0aHJlZSB3aW5kb3dzLCBlbWVyZ2VuY3kgYWJvcnQgZW5naW5lcyB0aGF0IGNhbiBwdWxsIHRoZSBjYXBzdWxlIHRvIHNhZmV0eSwgYW5kIHN0cmVhbWxpbmVkIGNvbnRyb2xzLCB3aXRoIGp1c3QgMzAgYnV0dG9ucyBhbmQgdG91Y2ggc2NyZWVucywgY29tcGFyZWQgd2l0aCB0aGUgc3BhY2Ugc2h1dHRsZSBjb2NrcGl0J3MgMiwwMDAgc3dpdGNoZXMgYW5kIGNpcmN1aXQgYnJlYWtlcnMuClNvIER1cmFudCBoYXMgZ29uZSBhbGwgRnJvemVuICAgbGV0IGl0IGdvLCBsZXQgaXQgZ29vb29vICAgYnV0IHRoZSBpY2UgaGFzbid0IG1lbHRlZCBvbiB0aGlzIHNpZGUgb2YgdGhlIFJvY2tpZXMuIE5vdCBiZWNhdXNlIER1cmFudCBsZWZ0LiBNYXliZSBub3QgZXZlbiBiZWNhdXNlIGhlIHdlbnQgdG8gR29sZGVuIFN0YXRlLCBraWxsaW5nIHdoYXRldmVyIHBhcml0eSBleGlzdGVkIGluIHRoZSBOQkEuIEJ1dCBEdXJhbnQncyBhbnRpY3Mgc2luY2UgaGUgbGVmdCBoYXZlIGJlZW4ga2luZGxpbmcgZm9yIHRoaXMgbmV2ZXIgZW5kaW5nIGZpcmVzdG9ybS4KRmFpdGVzIGVuIGwnZXhwcmllbmNlIGV0IHZvdXMgam91cnMgc2UgZHJvdWxlcm9udCBiaWVuIGRpZmZyZW1tZW50LiAKVGhlIDI3IEZlYiAxOTE1IGlzc3VlIG9mIFRoZSBJbGx1c3RyYXRlZCBMb25kb24gTmV3cyBpcyByZW1hcmthYmxlLiBZZXN0ZXJkYXkncyBwb3N0IHdhcyBnZW5lcmF0ZWQgYnkgYW4gaW1hZ2UgYXBwZWFyaW5nIGluIGl0IG9mIHNhcHBlcnMgbWluaW5nIHVuZGVyIGEgYmF0dGxlZmllbGQgdG8gY3JlYXRlIGFuIHVuZGVyZ3JvdW5kIGF0dGFjayBvbiB0aGUgZW5lbXkncyB0cmVuY2ggbGluZXMuIEEgZmV3IHBhZ2VzIGludG8gdGhlIGlzc3VlIHNob3dzIGEgc2VyaWVzIG9mIHBpY3R1cmVzIGRlc2NyaWJpbmcgdGhlIHJlZ3VsYXRpb24gaXNzdWUgZm9yIGFuIGVubGlzdGVkIG1hbiBoZWFkZWQgaW50byBjb21iYXQgc2ltcGxlLCBzY2FyeSwgYW5kIGhlYXJ0cmVuZGluZy4gQW5kIG9mIGNvdXJzZSBhIHRydWUgbWVhc3VyZSBvZiB0aGUgY291cmFnZSBhbmQgZm9ydGl0dWRlIG9mIHRoZXNlIG1pbGxpb25zIG9mIG1lbiB3aG8gbWFyY2hlZCB0byB0aGUgRnJvbnQgd2l0aCBhbGwgd2hhdCB0b2RheSBsb29rcyB0byBiZSBub3QgYWRlcXVhdGUgbWF0ZXJpYWwuIEl0IGlzIGhhcmQgZm9yIG1lIHRvIGltYWdpbmUgZ29pbmcgb2ZmIHRvIGNvbnF1ZXIgeW91ciBlbmVteSBhbmQgeW91ciBvd24gZmVhciB3aXRoIHRoZXNlIHNvcnRzIG9mIHN1cHBsaWVzLCBtYXJjaGluZyBhbG9uZyB3aXRoIGFsbCBvZiB0aGVzZSBzbGlnaHQgYml0cyBqYW5nbGluZyBhbmQgY2xhbmdpbmcgdG8gZWFjaCBvZiBteSBzdGVwcy4KV2hhdCBhcmUgdGhlIEJvYXJkJ3MgcHJpbWFyeSByZXNwb25zaWJpbGl0aWVzPwpBdSBtb21lbnQgZHUgcGV0aXQgcXVlc3Rpb25uYWlyZSBwb3VyIGZhaXJlIGNvbm5haXNzYW5jZSwgaWwgbmUgbWUgY29ubmFpdCBwYXMsIG1lIGRlbWFuZGUgbW9uIHBvaWRzICI2MmtnIiBldCBlbmNoYW5lICJjJ2VzdCB2b3RyZSBwb2lkcyBsZSBwbHVzIGhhdXQgPyIgY29tbWUgc2kgYyd0YWl0IHVuZSB2aWRlbmNlLiAKRGlydHkgam9rZXMgYW5kIHN0cmlwIHBva2VyIGNvbW1lcmNpYWwgaW5jbHVkZWQgaW4gcG9saWNlIGVtYWlscwpNb3N0IHNoZWV0cyBhcmUgbWFkZSBvZiBjb3R0b24uIFNvLCB0aGUgbW9pc3R1cmUgaXMgYmVpbmcgc3Vja2VkIG91dCBvZiB5b3VyIGhhaXIgYWxsIG5pZ2h0IGxvbmcuIApMbWFvIGRpZCB5b3UgZXZlbiB2aXNpdCB0aGUgc3ViIEkgbGlua2VkIHRvIG9yIGRpZCB5b3UgaW5zdGluY3RpdmVseSBsaW5rIHRvIHlvdXIgInJhY2UgcmVhbGlzdCIgd2Vic2l0ZSB3aGVuIHlvdSBzYXcgYSBwb2xpY2Ugb2ZmaWNlciBiZWluZyBhIGRpcnRiYWcgdG8gYSBibGFjayBtYWxlPwpBcyBmb3IgQWx0YXJpYSBpbiBnZW5lcmFsOyBJIHRoaW5rIHRoYXQgZGVzcGl0ZSB0aGUgSWNlIHR5cGVzLCBBbHRhcmlhIGlzIGFuIGV4Y2VsbGVudCBwaWNrLiAKSSB3aXNoIEkgY291bGQgZ2V0IGEgZHJpdmVyIGxpa2UgdGhhdC4gODAlIG9mIHRoZSBkcml2ZXJzIGluIEF0bGFudGEgdGhhdCBJJ3ZlIGdvdHRlbiBkb24ndCBldmVuIGtub3cgd2hlcmUgdGhlIEFJUlBPUlQgaXMuIEl0J3MgbGlrZSB0aGV5IG1vdmVkIHRvIHRvd24gb24gVHVlc2RheSBuaWdodCBhbmQgc3RhcnRlZCBkcml2aW5nIFdlZG5lc2RheSBtb3JuaW5nLgpJbiAyMDA0IHRoZSBSQVpBUiB3YXMgdGhlIGN1dHRpbmcgZWRnZSBjZWxsIHBob25lLiBHb29nbGUgTWFwcyBkaWRuIGV4aXN0LCBhbmQgR1BTcyB3ZXJlIHN0aWxsIGEgdGhpbmcuIEZhY2Vib29rIHdhcyBzdGlsbCBvbmx5IGF0IEhhcnZhcmQuIFN0cmVhbWluZyBUViBzZXJ2aWNlcyBkaWRuIGV4aXN0LCBhbmQgdGhlIG9ubHkgVHdlZXRzIGNhbWUgZnJvbSBCaXJkcy4gU28gZmFyIHdlIGhhdmUgaGVsZCB0cnVlIHRvIG1vb3JlIGxhdyBzbyB3ZSBhcmUgbG9va2luZyBhdCBhbmQgZXhwb25lbnRpYWwgaW5jcmVhc2UgaW4gdGVjaG5vbG9neSBpbiB0aGUgbmV4dCAxNSB5ZWFyLgpUaGVyZSBhIGxvdCB5b3UgbWlzcyBidXQgSSB0aGluayB0aGV5IGRvIHRoYXQgb24gcHVycG9zZSwgdG8gZW5jb3VyYWdlIHlvdSB0byBnbyBiYWNrIGFuZCBjaGVjayB0aGUgb3RoZXIgc3R1ZmYgb3V0LiAKQXBwbGljYXRpb25zIG9mIE5vIExpbWl0IEhvbGQgYnkgTWF0dGhldyBKYW5kYSBpcyB0aGUgYmlibGUgYXMgZmFyIGFzIEdUTyBwbGF5IGlzIGNvbmNlcm5lZC4KSW4gb3VyIGNvdW50cnkgdG9kYXksIG1lcmVseSBleHByZXNzaW5nIGFuIHVuZmxhdHRlcmluZyBvcGluaW9uIGFib3V0IGFuIG91dGdvaW5nIGFybXkgY2hpZWYgaXMgbGFiZWxsZWQgdHJlYXNvbm91cy4gCllvdSBjYW4gbGVhcm4gdGhlIHN5bnRheCB0byBtYWtlIHF1ZXJpZXMgcHJldHR5IHF1aWNrbHksIHRoZSB0cmljayBpcyB3aGVuIHlvdSBuZWVkIHRvICJqb2luIiBpbmZvcm1hdGlvbiBmcm9tIG11bHRpcGxlIHRhYmxlcy4gSWYgeW91IG1ha2UgYSBtaXN0YWtlLCB5b3Ugd29uIGFsd2F5cyBnZXQgYW4gZXJyb3IgbWVzc2FnZSwgc29tZXRpbWVzIHlvdSB3aWxsIGdldCBub25zZW5zZSwgb3IganVzdCBub3RoaW5nIGF0IGFsbC4gQ29tcGFuaWVzIHVzZSBwcm9ncmFtcyBsaWtlIENyeXN0YWwgUmVwb3J0cyBvciBNaWNyb3NvZnQgQWNjZXNzIHRvIGZvcm1hdCByZXBvcnRzIGJhc2VkIG9uIHRoZXNlIHF1ZXJpZXMsIGFuZCB5b3UgY2FuIGJlIGVtcGxveWVkIHRvIG1ha2UgdGhlc2UgcmVwb3J0cyBmb3IgbWFuYWdlbWVudC4gCkJlY2F1c2UgdGhlcmUgaXMgYSBhIGNlaWxpbmcgZm9yIGhvdyBtdWNoIHlvdSBjYW4gdGhlb3JldGljYWxseSBtYWtlIGZyb20gcG9rZXIgYW5kIHRoYXQgY2VpbGluZyBpcyBmYXIgbG93ZXIgdGhhbiBzb21ldGhpbmcgYSBtb2RlcmF0ZWx5IHN1Y2Nlc3NmdWwgYnVzaW5lc3MvaW52ZXN0bWVudCBjYW4geWllbGQuClBvc3Rpbmcgc29tZSB0aGluZyBpbiB0aGUgTXlzcGFjZSBNYXJrZXRwbGFjZSBtZWFucyB5b3VyIG9wcG9ydHVuaXR5IHdpbGwgc2hvdyB0aHJvdWdoIHRvIGh1bmRyZWRzIG9mIG1lZGlhIGFuZCBwb3N0aW5nIHNpdGVzLiAKU28gdGhhdCBwcm90ZWluIGluc3RlYWQgdHVybnMgb24gb3RoZXIgcGFydHMgb2YgeW91ciBETkEsIGxpa2UgdGhlICJidWlsZCBhIHJldGluYSBETkEiLiBUaGF0IEROQSB0dXJucyBvbiBhIHByb3RlaW4gdGhhdCB0ZWxscyBuZWFyYnkgc3RlbSBjZWxscyB0byBiZWNvbWUgbmVydmUgY2VsbHMgb3Igcm9kIGNlbGxzIG9yIGNvbmUgY2VsbHMuIFRoZSAiQnVpbGQgYW4gZXllYmFsbCBwcm90ZWluIiBhbHNvIGFjdGl2YXRlcyAiQnVpbGQgYSBsZW5zIiBETkEgYW5kICJtYWtlIGNvbGxhZ2VuIiBETkEgYW5kICJidWlsZCBhbiBpcmlzIiBETkEsIGFuZCB0aGF0ICJCdWlsZCBhbiBpcmlzIiBETkEsIHZpYSBwcm90ZWlucywgdHVybnMgb24gdGhlICJCZWNvbWUgbXVzY2xlIGNlbGxzIiBETkEgYW5kICJCZWNvbWUgZXBpdGhlbGlhbCBjZWxscyIgRE5BIGV0Yy4gCkFsbCB0aGUgcGxheWVycyB3YW50IHNvbWV0aGluZyByZWFsbHkgZXhjZXB0aW9uYWwgZm9yIHRoZWlyIGNhcmRzLiAKSXNsZSBvZiBDYXByaVRoaXMgY2FzaW5vIGluIFdhdGVybG9vLCBqdXN0IGVhc3Qgb2YgRGVzIE1vaW5lcywgb2ZmZXJzIGEgcG9rZXIgcm9vbSBhbmQgdGhyZWUgY2FyZCBwb2tlciBpbiBhZGRpdGlvbiB0byBzdGFuZGFyZCBjYXNpbm8gZ2FtZXMuIFRoaXMgZmFjaWxpdHksIG9uIGEgMiw1MDAgcGFzc2VuZ2VyIHBhZGRsZXdoZWVsIGJvYXQgZG9ja2VkIG9uIHRoZSBNaXNzaXNzaXBwaSBSaXZlciwgYWxzbyBpbmNsdWRlcyBhIDUzIHNsaXAgbWFyaW5hLiAKV2hpbGUgcmV0YWluaW5nIHNvbmdzIGxpa2UgIlRoZSBDYW5keSBNYW4iIGFuZCAiUHVyZSBJbWFnaW5hdGlvbiwiIHRoaXMgbXVzaWNhbCBhbHNvIGludHJvZHVjZXMgY29tcG9zaXRpb25zIGZyb20gTWFyYyBTaGFpbWFuIGFuZCBTY290dCBXaXR0bWFuLCBhIGR1byBjZWxlYnJhdGVkIGZvciB0aGVpciB3b3JrIG9uSGFpcnNwcmF5LiBBZGFwdGVkIGJ5IFNjb3R0aXNoIHBsYXl3cmlnaHQgRGF2aWQgR3JlaWcsIHRoZSBzaG93IHJldGFpbnMgdGhlIHN0b3J5J3MgZWNjZW50cmljIHdpdC4gU3VuZGF5cy4gJDM5ICQxMzUuIFJlbWFpbmluZyB2aWdpbGFudC4gV2F0Y2hpbmcgeW91ciBiYWNrLCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgYSBwZXJzb24gb2YgY29sb3IgaW4gYSB3aGl0ZSBzb2NpZXR5LiAKUGx1cyB3aGVuIHlvdSBkb25lIGlmIHlvdSB0dWcgdGhlIGVuZCBvZiB0aGUgZmlsbSBpbiBvdXQgYSBsaXR0bGUgYml0IGFuZCBmZWVsIHNvbWUgZnJlZSBwbGF5IHlvdSBrbm93IGl0IHdvdW5kIGNvcnJlY3RseS4gSWYgaXQgamFtbWVkIHlvdSBrbm93IHNvbWV0aGluZyBub3QgcmlnaHQgc28geW91IGNhbiB1bndpbmQgaXQgYW5kIHN0YXJ0IG92ZXIuLiAKTG9sIEkgYWxzbyBiZWxpZXZlIHNoZSB3YW50ZWQgdG8gYmUgb24gdGhlaXIgVklQIGxpc3QgaW4gb3JkZXIgdG8gZmluZCBoZXIgbmV4dCB2aWN0aW0ocykuIEl0IHdhcyByZWFsbHkgcXVpY2sgdGhvdWdoLCBzaGUgY2xhaW1lZCB0byBiZSBpbiBsb3ZlIGFmdGVyIHRoZSBzZWNvbmQgZGF0ZS4gTW9zdCBtZW4gd291bGQgc2VlbiByZWQgZmxhZ3MgYnV0IG5vdCB0aGF0IGd1eSEuIApGb3IgYWxsZWdlZGx5IGJlaW5nIHRoZSBsZWFzdCBwb3B1bGFyIHByZXNpZGVudCBldmVyLCBhbmQgaG9sZGluZyBhIHJhbGx5IGluIGEgcHJlZG9taW5hdGVseSBIaXNwYW5pYywgYW5kIERlbW9jcmF0aWMgc3Ryb25naG9sZCwgeW91ciBQcmVzaWRlbnQsIERvbmFsZCBUcnVtcCwgaGVsZCB0aGUgYmlnZ2VzdCByYWxseSBoZWxkIGJ5IGFueSBSZXB1YmxpY2FuIGluIEVsIFBhc28gaGlzdG9yeS4gCkFsc28sIEdvZCBoYXMgYSBzZXQgdGltZSBjZWFzZSB0aGUgR29zcGVsIG9mIFNhbHZhdGlvbiBmcm9tIHRoZSB3b3JsZC4gRGVhdGggb2YgYSBtYW4gZW5kcyBoaXMgY2hhbmNlIHRvIGJlIHNhdmVkLiBPdXIgbGFzdCBjaGFuY2Ugb2YgaG9wZSBvZiBTYWx2YXRpb24gdGhyb3VnaCBPVVIgU0FWSU9SIExPUkQgSkVTVVMgQ0hSSVNUIGVuZHMgd2l0aCBvdXIgbGFzdCBicmVhdGggd2UgdGFrZSBiZWZvcmUgZHlpbmcuIHRoZXkgbWFkZSB0aGlzIGRlY2lzaW9uICB2ZXJ5ICB2ZXJ5ICBsYXRlLiBkaWQgbm90IHBhaWQgYXR0ZW50aW9uIEdvZCdzIHNlcnZhbnRzIGFsbCB0aGVzZSB5ZWFycyBhbGxvdGVkIEdvZCBmb3IgZ29zcGVsIG9mIHNhbHZhdGlvbiAgIFRoZXkgd2lsbCBHb2QncyBKdWRnZW1lbnQgb2YgZGVhdGguCkRpc2FiaWxpdHkgYWZmZWN0cyBtb3JlIHRoYW4gNTYgbWlsbGlvbiBBbWVyaWNhbnMuIEl0J3MgZGVmaW5lZCBieSBsaW1pdGF0aW9ucyBpbiBiZWluZyBhYmxlIHRvIGRvIGJhc2ljIGFjdGl2aXRpZXMgc3VjaCBhcyBlYXRpbmcsIGRyZXNzaW5nIG9yIGJhdGhpbmcgb25lc2VsZiwgZ2V0dGluZyBpbiBhbmQgb3V0IG9mIGJlZCBhbmQgd2Fsa2luZyBhY3Jvc3MgYSByb29tLiAKJ1RIRVknUkUgS0lMTElORyBUSEVNIC4gVEhFWSBET04nVCBHSVZFIEEgUycKOS4gTm8gY2lyY3VtdmVudGluZyBiYW5zLiBUaGlzIGlzIGFnYWluc3QgUmVkZGl0J3MgcnVsZXMsIGFuZCBpcyBub3QgYWxsb3dlZCBoZXJlIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLiAKVGhlcmUgd2FzIHZlcnkgbGl0dGxlIHJlc3RyYWludCBwbGFjZWQgb24gdGhlIGdpcmxzLiBQcmltZSBNaW5pc3RlciBTdGFubGV5IEJhbGR3aW4sIGNvbWluZyB0byBzZWUgS2luZyBHZW9yZ2UgVkkgb24gYWZmYWlycyBvZiBTdGF0ZSwgY291bGQgZWFzaWx5IGZpbmQgaGltc2VsZiB0YW5nbGVkIHVwIHdpdGggdHdvIGV4Y2l0ZWQgY2hpbGRyZW4gcmFjaW5nIGRvd24gdGhlIGNvcnJpZG9ycy4gT3Igb25lIHN0b3V0aXNoIGxpdHRsZSBnaXJsICAgTWFyZ2FyZXQgICBwYW50aW5nOiAnV2FpdCBmb3IgbWUsIExpbGliZXQuIApTYW5zIGx1aSBkZW1hbmRlciBzZXMgcGFwaWVycywgaiB1biBwaWVkIGRlIGNhcm90dGUgc2F1dmFnZSBvdSBkIHN5bHZlc3RyZSwgcGVpbmUgcXVlbHF1ZSBwZXUgYXZlYyBsZXMgY2lndXMsIG1haXMgbiBhYnNvbHVtZW50IGF1Y3VuZSBkaWZmaWN1bHQgZmFjZSAgbGEgYmVyY2Ugc2kgY29tbXVuZSBldCBmYW1pbGlyZS4gClNvIGFwcGFyZW50bHkgeW91IHBlb3BsZSBhcmUgYWN0dWFsbHkgdXBzZXQgd2l0aCBteSBjb21tZW50IHNvIGkgd2FudGVkIHRvIGNsYXJpZnkuIHllcywgaXQgd2FzbiBmdW5ueS4gYnV0IGluIG5vIHdheSBkaWQgaSBpbnRlbmQgdG8gb2ZmZW5kIGFueW9uZSAoIHdoaWNoLCBjb25zaWRlcmluZyB5b3VyIHJlc3BvbnNlcywgaSBzdGlsbCBzb21laG93IG1hbmFnZWQgdG8gYWNoaWV2ZSksIGluIGZhY3QsIGkgc3RpbGwgZG9udCByZWFsbHkgdW5kZXJzdGFuZCB3aGF0IHdhcyBzbyB3cm9uZyB3aXRoIG15IGNvbW1lbnQuIGkgbG92ZSBhbGwgYW5pbWFscyAoZXhjZXB0IG1heWJlIHdhc3BzKSwgaW5jbHVkaW5nIHNuYWtlcy4gaWYgaSBkaWRuIGhhdmUgYSBjYXQgYW5kIGNvdWxkIGFjdHVhbGx5IHByb3ZpZGUgdGhlbSB3aXRoIGFuIGFwcHJvcHJpYXRlIGVuY2xvc3VyZSwgaSB3b3VsZCBsb3ZlIHRvIG93biBzb21ldGhpbmcgbGlrZSBhIG1vcmVsaWEgYm9lbGVuaSwgd2hpY2ggaXMgb25lIG9mIHRoZSBtb3N0IGJlYXV0aWZ1bCBweXRob25zIGluIG15IG9waW5pb24uIGkga25vdyBhIGxvdCBvZiBwZW9wbGUgd2hvIGRvbnQgbGlrZSBzbmFrZXMsIHNvIGFmdGVyIGkgc2F3IHRoZSBub3NlIHNtaWxleSBhbmQgd2FudGVkIHRvIGNvbW1lbnQgb24gdGhhdCwgaSBtaXN0YWtlbmx5IHRob3VnaHQgaWQgd3JpdGUgaXQgYXMgaWYgaSB3YXMgY29tbWVudGluZyBvbiB0aGUgc25ha2UgYXMgYSBqb2tlLiB0aGF0IHRoZSBzYXJjYXN0aWMgdW5kZXJ0b25lIHdhc250IG9idmlvdXMgaXMgY2xlYXIgdG8gbWUgbm93LCBidXQgaWYgYW55dGhpbmcgZWxzZSBpbiBwYXJ0aWN1bGFyIHdhcyB3cm9uZyB3aXRoIG15IGNvbW1lbnQsIHBsZWFzZSBhY3R1YWxseSB0ZWxsIG1lIHdoYXQgaXQgd2FzIHNvIGkgd29udCByZXBlYXQgbXlzZWxmIGluIHRoZSBmdXR1cmUsIGVuZ2xpc2ggaXMgbm90IG15IG5hdGl2ZSBsYW5ndWFnZSBhbmQgaWQgbG92ZSB0byBrbm93IHdoYXQgaSBkaWQgc28gaG9ycmlibHkgd3JvbmcgOikKSWYgdGhleSBlYXQgbWVhdCBvciBkYWlyeSBsZXNzIHRoYW4gMTAgdGltZXMgYSB5ZWFyLgpXaGVuIEkgc3RhcnRlZCBteSBqb3VybmV5IGFzIGFuIGVudHJlcHJlbmV1ciBhbmQgYSBidXNpbmVzcyBvd25lciwgSSB3YXMgdG9sZCBieSBzb21lIG9mIG15IG1lbnRvcnMgdGhhdCBJIGhhZCB0byBrZWVwIGNvc3RzIHRvIGEgbWluaW11bSBhbmQgZHJpdmUgcmV2ZW51ZS4gVGhhdCBtZWFucyBkb24ndCBidXkgYSBuZXcgcGhvbmUsIGRvbid0IGJ1eSBhIG5ldyBzdWl0LCBhbmQgZG9uJ3QgYnV5IGEgc3dhbmt5IG5ldyBjb3VjaC4gVGhlcmUgaXMgbm8gbmVlZCB0byBzcGVuZCBtb25leSBvbiB0aGluZ3MgdGhhdCBkbyBub3QgZ2l2ZSB5b3UgYSByZXR1cm4gb24gaW52ZXN0bWVudC4gSW5zdGVhZCwgc3BlbmQgb25lIGRvbGxhciBhbmQgZ2V0IHR3byBiYWNrLgpIZXRpcHBlZHRoYXQgaGlzIGhhbmQgaXMgd2VhayBieSBnb2luZyBhbGwgaW4gd2hlbiBhbGwgaW4gd2FzIG5vdCB0aGUgcGxheSBwb2tlciB0cmFuc3BhcmVudCBibHVmZi5JZiBhbnl0aGluZywgaGUgd29yc2VuZWQgaGlzIHBvc2l0aW9uLiBJZiB5b3UgYSBzdHVwaWQgb3duZXIgc3R1cGlkbHkgY29uc2lkZXJpbmcgQm9uZHMsIHdvdWxkbiB0aGlzIGxhbWUgYWN0IHRlbGwgeW91IGV2ZXJ5dGhpbmcgeW91IG5lZWRlZCB0byBrbm93PyBIZSBhIGRpdmEuIEhlIGJyaW5ncyBhIHBvc3NlLiAKQmVpbmcgdGhhdCBJIGZpbGUgbXkgb3duIHRheGVzIGFuZCBkbyBub3QgdXNlIGEgQ1BBLCB0aGlzIGFsbCBqdXN0IG1ha2VzIG1lIHdvbmRlci4gSSB1bmRlcnN0YW5kIHlvdSBhbGwgaGF2ZSB0byBwcm90ZXByb3RlY3QgeW91cnNlbGYgYW5kIHlvdXIgcHJvcGVydHkgYnV0IGJhZCB0ZW5hbnRzIGFsc28gaGF2ZSBnb29kIGNyZWRpdCBhbmQgZ2V0IGEgcmVndWxhciBwYXljaGVjay4KIkknbSBoZXJlIGFzIGEgbW9tLCIgc2hlIHNhaWQuICJJIHNob3VsZCBiZSBzaXR0aW5nIHdoZXJlIHlvdSBhcmUgYW5kIHVuZm9ydHVuYXRlbHkgSSBjYW4ndCwgYmVjYXVzZSB0aGlzIGRpZCBoYXBwZW4gdG8gb3VyIGZhbWlseS4gTXkgcmVhc29uaW5nIGZvciBleHBvc2luZyBvdXIgZmFtaWx5J3MgdHJhZ2VkeSwgd2hpY2ggaXMgdmVyeSBoYXJkIHRvIGRvLCBpcyB0byBleHBvc2UgdGhlIGlzc3VlLiIKKG15IGNoYXJhY3RlcikgQWxseSwgdGhlcmUgYSBzdWdnZXN0aW9uIG9mIGl0IGFzIHdlbGwsIHdoZW4gc2hlIHdhbGtzIHVwIHRoZSBzdGFpcnMgYW5kIHNheXMgdG8gaGVyIGZhdGhlciwga25vdyBhbGwgYWJvdXQgZHJ1Z3Mgc2hlIHNoYXJlZC4gVGhpbmsgaXQgaW1wb3J0YW50IHRvIGNhcmUgZm9yIHBlb3BsZSBhbmQgdG8gbG9vayBvdXQgZm9yIHRoZWlyIG1lbnRhbCBoZWFsdGguIFRoaXMgeWVhciwgc2hlIGNvbmZlc3NlZCB0aGUgZmlsbSBoYWQgY2hhbmdlZCBoZXIgYW5kIG1hZGUgaGVyIG1vcmUgY29uZmlkZW50OiAoZGlyZWN0b3IgYW5kIGNvIHN0YXIpIEJyYWRsZXkgKENvb3Blcikgd29yayB3YXMgcGhlbm9tZW5hbCBhbmQgdGhlbiBoYXZpbmcgaGltIGJlbGlldmUgaW4gbWUsIGl0IGdhdmUgbWUgbW9yZSBhbW11bml0aW9uIHRvIGJlbGlldmUgaW4gbXlzZWxmIGFuZCBJIGp1c3QgZmVlbCBzbyBibGVzc2VkIHRvIGhhdmUgaGFkIHRoYXQgZXhwZXJpZW5jZS4uIApJIGJlbGlldmUgdGhhdCB0aGUgZmlyc3QgcGxhY2Ugd291bGQgYmUgZWl0aGVyIGxvb2tpbmcgb25saW5lLCBvciBhc2tpbmcgYSBmdW5lcmFsIGRpcmVjdG9yLCBkZXBlbmRpbmcgb24gaWYgeW91IHdhbnQgdG8gYWRtaXQgdG8gYmVpbmcgYSByZWxhdGl2ZS4gU29jaWFsIFNlY3VyaXR5IGhhcyBhIGRlYXRoIGJlbmVmaXQsIGZvciBpbnN0YW5jZSwgYW5kIG1hbnkgc3RhdGVzLCBjb3VudGllcywgYW5kIGNpdGllcyBhbHNvIGhhdmUgcHJvZ3JhbXMsIGFuZCBJIHRoaW5rIHRoZXJlIGlzIGEgZmVkZXJhbCBvbmUgYmFzZWQgb24gaW5jb21lLiBFdmVuIHdpdGhvdXQgYSBwcm9ncmFtIHRvIGhlbHAgcGF5IGZvciBhIGZ1bmVyYWwsIEkgZG9uIGJlbGlldmUgdGhhdCB0aGUgbmV4dCBvZiBraW4gYXJlIG9uIHRoZSBob29rIGZvciBhIGZ1bmVyYWwsIHVubGVzcyB0aGV5IHdhbnQgdG8gYmUuIE1hbnkgcGVvcGxlIG1pc3Rha2VubHkgdGhpbmsgdGhhdCBpZiB0aGV5IGlkZW50aWZ5IHRoZSBib2R5IG9mIGEgcmVsYXRpdmUsIHRoZXkgd2lsbCBiZSBmb3JjZWQgdG8gY292ZXIgdGhlIGZ1bmVyYWwsIGlmIHRoZSBkZWNlYXNlZCBjYW5ub3QuCk5vdGhpbmcgZmFuY3ksIHNpbXBsZSBkaXNwbGF5LCBjb250cm9scywgYW5kIHNtYWxsIHNjcmVlbi4gClRoZSB0b3duc2hpcCByZWFsbHkgZG9udCBjYXJlIHdoYXQgaSBkbyBvbiBteSBwcm9wZXJ0eS4gClRoZXkgaGF2ZSByYXBlIGdhbmdzIGJyb29taW5nIGNoaWxkcmVuIGluIGp1c3QgYWJvdXQgZXZlcnkgdG93biBvZiBtb3JlIHRoYW4gMTBrIHBlb3BsZSwgYW5kIGl0IGdvZXMgb24gZm9yIG92ZXIgYSBkZWNhZGUgd2hpbGUgdGhlIHBvbGljZSBhcmUgYWZyYWlkIG9mIHNlZW1pbmcgcmFjaXN0LgpUaGUgcHJpY2Ugb2YgdGhlc2UgNCBkZWNrIGF1dG9tYXRpYyBzaHVmZmxlcnMgYXJlIHJlYXNvbmFibGUuIApJdCB3aWxsIG5vdCBiZSB3ZXJlIGl0IGhhcyBiZWVuLiAKV2hlbiBMeW5kb24gSm9obnNvbiBmb3VuZCBvdXQgdGhhdCBoaXMgQ2hpZWYgb2YgU3RhZmYgV2FsdGVyIEplbmtpbnMgaGFkIGJlZW4gY2F1Z2h0IGhhdmluZyBzZXggd2l0aCBhbm90aGVyIG1hbiBhdCB0aGUgWU1DQSBiYXRocm9vbSBkb3duIHRoZSBzdHJlZXQgZnJvbSB0aGUgV2hpdGUgSG91c2UsIGhlIGtuZXcgaGlzIGxvbmd0aW1lIGZyaWVuZCBhbmQgY29tcmFkZSBoYWQgdG8gZ28uIEFzIExlZSBFZGVsbWFuIHBvaW50cyBvdXQgaW4gYW4gZXNzYXkgYWJvdXQgdGhlIEplbmtpbnMgYWZmYWlyLCAiVGVhcm9vbXMgYW5kIFN5bXBhdGh5OiBBbiBFcGlzdGVtb2xvZ3kgb2YgdGhlIFdhdGVyIENsb3NldCwiIGhhdmluZyBnYXkgc2V4IG1lYW50IGNlcnRhaW4gZGVhdGggZm9yIGEgcG9saXRpY2FsIGNhcmVlciBiZWNhdXNlIGhhdmluZyBnYXkgc2V4IG1lYW50IHZ1bG5lcmFiaWxpdHkgYW5kIGJyZWFjaGVkIGJvcmRlcnMgYW5kIHRoYXQgdGhlIFNvdmlldHMgd291bGQgaW52YWRlIGFueSBtaW51dGUuIFRoaXMgd2FzIGFsbCB0aGUgbW9yZSB0cnVlIHNpbmNlIEplbmtpbnMgd2FzIHRoZSByZWNlcHRpdmUgcGFydG5lciBpbiB0aGUgZXhjaGFuZ2UgYW5kIGhpcyBsb3ZlciB3YXMgImZvcmVpZ24gYm9ybi4iCkdyZWF0IGF0dGl0dWRlLCBhbmQgdG8gYmUgaW4geW91ciBwb3NpdGlvbiBhdCAyMiBpcyBleGNlbGxlbnQgaW4gdGhlIFVLLCBJJ20gYSBiYWNrIGVuZCBkZXYgd2hvIHNsb3dseSBwcm9ncmVzc2VkIGludG8gZnVsbCBzdGFjaywgYXQgMjIgSSB3YXMgZWFybmluZyBhIGxpdHRsZSBvdmVyIDE4ayBhIHllYXIsIHRoYXQgcHJvZ3Jlc3NlZCBzbG93bHkgdW50aWwgSSByZWFsaXNlZCBubyBpbmRpdmlkdWFsIGNvbXBhbnkgd2lsbCBwYXkgeW91IHdoYXQgeW91J3JlIHdvcnRoLiBGYXN0IGZvcndhcmQgdG8gdGhpcyB5ZWFyLCBJJ20gMzQgYW5kIHRvb2sgaG9tZSBhIGxpdHRsZSBvdmVyIDEyMCcwMDAgaW4gdGhlIGxhc3QgMTIgbW9udGhzLiAKTGV0cyBzZWUgd2hvIHRoZSBGQkkgd2FudHMgdG8gbWFrZSBhIGNyaW1pbmFsIG5leHQuIApUaGUgcmFjZSBib29rIG1heSBiZSBpbiBuZWVkIG9mIGltcHJvdmluZywgYnV0IGl0IGNhbiBzdGlsbCBlYXNpbHkgY29tcGV0ZSB3aXRoIGFsbCBtYWpvciBib29rbWFrZXIgd2ViIHNpdGVzLkxpdmUgSW4gUGxheSBCZXR0aW5nVGhlIGxpdmUgaW4gcGxheSBiZXR0aW5nIGNvbnNvbGUgcHJvdmlkZXMgbGl2ZSBvZGRzIGZvciBldmVudHMgYXMgdGhleSBoYXBwZW4sIHdoaWxlIHB1bnRlcnMgYXJlIGFsbG93ZWQgdG8gd2F0Y2ggc3BvcnRpbmcgZXZlbnRzIGFuZCBiZXQgb24gdGhlIG91dGNvbWVzIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGV2ZW50LiAKT24gRnJpZGF5LCBhIGZvcm1lciBhY3RyZXNzIHNhaWQgV2VpbnN0ZWluIHJ1aW5lZCBoZXIgY2FyZWVyIGFtYml0aW9uIGFmdGVyIGhlIGV4cG9zZWQgaGltc2VsZiB0byBoZXIgZHVyaW5nIGEgMTk4OSBidXNpbmVzcyBtZWV0aW5nIGluIGhpcyBvZmZpY2UuIEhlYXRoZXIgS2VyciBzYWlkIGhlIHRvbGQgaGVyIHRvIHNpdCBvbiB0aGUgY291Y2ggYW5kIHJlcGVhdGVkIHNheWluZyBzaGUgbmVlZGVkIHRvIGJlICJnb29kIiBpZiBzaGUgd2FudGVkIHRvIHN1Y2NlZWQuCkluIG5vcm1hbCBUZXhhcyBIb2xkJ0VtIHRoZXNlIGFyZSB0aGUgd2lubmluZyBoYW5kIGNvbWJpbmF0aW9ucy4KIkV2ZW4gd2hlbiBJIGhhdmUgYXJndW1lbnRzIHdpdGggbXkgaHVzYmFuZCBpbiBUaGluZ3MgdG8gQ29tZSwgdG8ga2VlcCB0aGlzIGNvbnN0YW50IHNsaWdodCBoaW50IG9mIGlyb255IGF2b2lkcyBwdXRbdGluZ10gdG9vIG11Y2ggW29mIGFdIGJ1cmRlbiBvbiB3aGF0IHlvdSBkby4gSXQncyBkb2luZyBhIHN0ZXAgYmFjay4gWW91IGtlZXAgdGhlIGRyYW1hLCB5b3Uga2VlcCB0aGUgaHVydCwgeW91IGtlZXAgZXZlcnl0aGluZywgYnV0IGl0IGJlY29tZXMgbGlnaHRlci4iLiAKSSBvbmNlIHdvcmtlZCBmb3IgYSB0YXR0b29lciB0cmFuc3BsYW50ZWQgZnJvbSBDYWxpZm9ybmlhLCBhbmQgaGUgdG9sZCBtZSB0aGF0IHRoZSBhY2UgYW5kIGtpbmcgb2Ygc3BhZGVzIGFyZSBnYW5nIHRhdHRvb3MgYW5kIHNob3VsZCBub3QgYmUgZ290dGVuIGJ5IGFueWJvZHkgd2hvIGlzbid0IGxvb2tpbmcgZm9yIHRyb3VibGUuIAo2LiBPbmNlIHRoZSBnbHVlIGd1biBpcyByZWFkeSwgcGxhY2UgYSBzbWFsbCBhbW91bnQgb2YgZ2x1ZSBvbiB0aGUgYmFjayBzaWRlIG9mIGVhY2ggY3JhZnQgamV3ZWwgdGhhdCB5b3Ugd2FudCB0byBwbGFjZSBvbiB0aGUgUG9rZXIgQ2hpcC4gVGhlbiwgY2FyZWZ1bGx5IHBsYWNlIHRoZSBqZXdlbCBpbiBwbGFjZS4gCkxpdmUgMyBDYXJkIFBva2VyClRoZSBsYXcgd2FzIHdheSB0b28gbG9uZyBmb3IgYW55b25lIHRvIGtub3cgd2hhdCB0aGUgaGVsbCB3YXMgZ29pbmcgb24gd2l0aCBpdC4gCkhvcGUgaXMgYSBiZWxpZWYgdGhhdCB3aGF0IHdlIGRvIG1pZ2h0IG1hdHRlciwgYW4gdW5kZXJzdGFuZGluZyB0aGF0IHRoZSBmdXR1cmUgaXMgbm90IHlldCB3cml0dGVuLiBJdCdzIGluZm9ybWVkLCBhc3R1dGUgb3BlbiBtaW5kZWRuZXNzIGFib3V0IHdoYXQgY2FuIGhhcHBlbiBhbmQgd2hhdCByb2xlIHdlIG1heSBwbGF5IGluIGl0LiAKOS4gSW4gb3JkZXIgdG8gcHJldmVudCBjaGVhdGluZyB0aGUgcGxheWVyIHRoYXQgaXMgdGhlIGRlbGF0ZXIgbXVzdCBkaXNjYXJkIHRoZSB0b3AgY2FyZCBvZiB0aGUgZGVjaywgd2hpY2ggaXMga25vd24gYXMgdGhlIEJ1cm4gQ2FyZC4gCldlIGtub3cgZm9yIGNlcnRhaW4gdGhhdCB0aGlzIGhhbmQgaXMgbm90IGN1cnJlbnRseSBnb29kLCBzbyB3ZSdsbCBoYXZlIHRvIGhpdCBvbmUgb2Ygb3VyIG91dHMgaW4gb3JkZXIgdG8gd2luIChvciBibHVmZiB0aGUgZ3V5IG91dCkuIFdlIGtub3cgdGhlcmUgYXJlIGZvdXIgMydzLCBhbmQgZm91ciA4J3MgdGhhdCB3aWxsIG1ha2UgdXMgYSBzdHJhaWdodC4gCkhlciB5b3VuZ2VyIGJyb3RoZXIgTW9yZ2FuIHBsYXllZCBydWdieSBhbmQsIGxpa2UgTGFuZSwgYmVsb25nZWQgdG8gdGhlIHN1cmYgY2x1Yi4gQWNjb3JkaW5nIHRvIFR5YWNrLCB3aG8gd2FzIHRoZW4gaW4gdGhlIG5hdGlvbmFsIGp1bmlvciBrYXlha2luZyB0ZWFtLCAic2hlIHdhcyBsaWtlIHRoZSBnb2xkZW4gZ2lybCBkb3duIHRoZXJlLiBCbG9uZGUgaGFpciBhbmQgdGFubmVkLiAKVG8gb3BlbiB0aGUgc2ludXNlcywgYXBwbHkgc2V2ZXJhbCBkcm9wcyBvZiBvaWwgYmxlbmQgdG8gdGhlIGJhc2Ugb2YgeW91ciBza3VsbCBhbmQgb24geW91ciBuZWNrLiBNYXNzYWdlIHRob3JvdWdobHkuCkdsdWUgdGhlIHNwaW5lIHVwIHRoZW4gcm91bmQgaXQgICB0b3VjaCB0aGUgc3BpbmUgb2NjYXNpb25hbGx5IGFzIHRoZSBnbHVlIHNldHMsIHdoZW4gdGhlIGdsdWUgbm8gbG9uZ2VyIGxlYXZlcyBhIG1hcmsgb24geW91ciBmaW5nZXIgYmVnaW4gcm91bmRpbmcKQmVmb3JlIGhpcyBwaXRjaCB0byB0aGUgZHJhZ29ucywgQnVyZ295bmUgb3BlcmF0ZWQgZnJvbSB0aHJlZSBsb2NhdGlvbnMgKHR3byBpbiBDYW5hZGEsIG9uZSBpbiB0aGUgVW5pdGVkIFN0YXRlcykuIGNvcnBvcmF0ZSBsb2NhdGlvbnMsIGluIFNlYXR0bGUgYW5kIE1pbm5lYXBvbGlzLiBUaHJlZSByZWFsIGVzdGF0ZSBhZ2VudHMgaGF2ZSBib3VnaHQgZnJhbmNoaXNlcyBpbiBDYW5hZGEuIGZyYW5jaGlzZSBpbiBCb2lzZSwgSWRhaG8uClN1c2FuIGlzIGEgYm9hcmQgY2VydGlmaWVkIG1hc3NhZ2UgdGhlcmFwaXN0IHdpdGggMzArIHllYXJzIG9mIGV4cGVyaWVuY2UuIFNoZSBoYXN3cml0dGVuIHNldmVyYWwgYmVzdCBzZWxsaW5nIHRleHRib29rcyB1c2VkIGFyb3VuZCB0aGUgZ2xvYmUsIHB1Ymxpc2hlZCBtYW55IFlvdVR1YmUgdmlkZW9zLCBhbmQgaXMgcHVyc3VpbmcgYSBkb2N0b3JhdGUgaW4gRWR1Y2F0aW9uLiBTaGUgaXMgYW4gb3V0c3RhbmRpbmcgZWR1Y2F0b3IvcHJlc2VudGVyIGFuZCBoYXMgYmVlbiBnaXZlbiB0aGUgbmlja25hbWUgdGhlICJZb2RhIG9mIE1hc3NhZ2UiIGJlY2F1c2Ugb2YgaGVyIG1hc3NhZ2Ugd2lzZG9tIGFuZCB0ZWFjaGluZyBleHBlcnRpc2UuIApEZSBsYSBwYXJ0IGQgcGVyc29ubmFnZSBtb3J0IHByZXNxdWUgZGUgbWlzcmUsIHJvbmcgcGFyIGxhIHN5cGhpbGlzLCBheWFudCBwYXNzIGxlIHBsdXMgY2xhaXIgZGUgc29uIHRlbXBzICBmdWlyIHNlcyBjcmFuY2llcnMsIHF1ZSBuIHBhcyB0IHByb2ZpdGFibGUgcG91ciBsdWkgcXUgcyByZW1ldHRlIGF1IHNldWwgY2hhbnZyZSwgcGx1dHQgcXVlIGRlIHBvdXJzdWl2cmUgZGFucyBsYSB2b2llIGRlIGwgYWxjb29saXF1ZSA6IGlsIGVzdCB1biBmYWl0LCBldCBhIG4gcGFzIGR1IGRvbWFpbmUgZGUgaW5kaWNpYmxlIHF1IGVuIEZyYW5jZSwgbGVzIG9waW9kZXMgc29udCBsYSBwcmVtaXJlIGNhdXNlIGRlIG1vcnQgcGFyIG92ZXJkb3NlLCBsaXNhaXMgamUgbmFndXJlLiBFdCBxdWUgZGlyZSBkZSBsIGNvbW1lIGZvc3NveWV1ciA/IFBhcyBmcmFuY2hlbWVudCBkcmxlLCBjZSBCYXVkZWxhaXJlLiAKTXVzaWMgTmV3cwpEZXNwaXRlIGFsbCB0aGlzIGhvbWUgZ3Jvd24gdGVjaG5vbG9neSB0YWxlbnQsIHRoZXJlIGFyZSBtYW55IGNhc2VzIHdoZXJlIENhbmFkaWFuIGJvcm4gSUNUIGNvbXBhbmllcyBhcmUgb3Zlcmxvb2tlZCBieSBsYXJnZSBlbnRlcnByaXNlcyBhbmQgZ292ZXJubWVudCBlbnRpdGllcy4gQSByZXNlYXJjaCByZXBvcnQgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBPdHRhd2EgVGVsZmVyIFNjaG9vbCBvZiBNYW5hZ2VtZW50IGZvdW5kIHRoYXQgYSBtaW5vcml0eSBvZiBzbWFsbCB0byBtaWRzaXplIGNvbXBhbmllcyBhcmUgZG9pbmcgYW55IGtpbmQgb2YgYnVzaW5lc3Mgd2l0aCB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50LiAKSWYgeW91IHBsYW4gb24ga2VlcGluZyB0aGUgcG9rZXIgdGFibGUgaW4gdGhlIHJvb20gYXQgYWxsIHRpbWVzLCB5b3UgbWF5IGJlIGFibGUgdG8gY2hvb3NlIGEgcm91bmQgcG9rZXIgdGFibGUgdGhhdCBpcyBjb21wb3NlZCBvZiBhIGhlYXZ5IG1ldGFsIG1hdGVyaWFsIG9yIG9uZSB0aGF0IGlzIGNvbnN0cnVjdGVkIGZyb20gaGlnaGx5IGRlY29yYXRpdmUgd29vZCAgIHRoZSBjaG9pY2UgaXMgeW91cnMuIApFY2NvIGNvbWUgc3BpZWdhcmUgbGUgImluZmx1ZW56ZSBwbGFuZXRhcmllIjogYW5kYW5kbyBpbiBtYWNjaGluYSBhIHZvbHRlIHRyb3ZpYW1vIHVuIGNhcnRlbGxvIGNoZSBkaWNlICJhdHRlbnppb25lLCBpbmNyb2NpbyBhIDE1MCBtZXRyaSI7IHByb3ByaW8gY29tZSBpbCBjYXJ0ZWxsbywgbCdhc3Ryb2xvZ2lhIGNpIHNlZ25hbGEgbW9tZW50aSBkZWxpY2F0aSBkYSBhZmZyb250YXJlIGluIG1vZG8gcGkgbyBtZW5vIGNvbnNhcGV2b2xlLiBOb2kgcG9zc2lhbW8gYW5jaGUgbm9uIGZlcm1hcmNpIChzZW56YSBjaGUgY2kgZGV0ZXJtaW5pIHBlciBhbHRybyB1biBpbmNpZGVudGUpIG9wcHVyZSByYWxsZW50YXJlLCBzdGFyZSBwaSBhdHRlbnRpIGUgY29zaSB2aWEuIApFbmNvdXJhZ2luZyB5b3VyIGNoaWxkIHRvIGNoYW5nZSBzb21ldGhpbmcgYWJvdXQgdGhlbXNlbHZlcyBiZWNhdXNlIHRoZXkncmUgYmVpbmcgYnVsbGllZCBhYm91dCBpdC4gCkknbGwgcHJvYmFibHkgY29tZSBiYWNrIGFuZCBlZGl0IHRoaXMgY29tbWVudCB3aXRoIG1vcmUgdGhvdWdodHMgYnV0IHdvdy4gSSBoYWQgbm8gaWRlYSBhYm91dCB0aGlzIHN0b3J5LiAKRWFzeSBraWxscyB5b3UgY2FuIHRha2UgdGhlbSBhbmQgb2Z0ZW4gdGhleSBjb21lIHdpdGggZGlub3NhdXJzIHRvby4gClRoZSBuZXh0IHN0ZXAgdG8gc3RhcnRpbmcgYSBidXNpbmVzcyBmcm9tIHlvdXIgaG9tZSB0aGF0IGRlYWxzIGluIFByb2Zlc3Npb25hbCBDbGF5IFBva2VyIENoaXBzIGFuZCBvdGhlciB0eXBlcyBvZiBhY2Nlc3NvcmllcyBpcyB0byBkZXRlcm1pbmUgd2hhdCB0eXBlIG9mIHByb2R1Y3QgdGhhdCB5b3Ugd2FudCB0byBzcGVjaWFsaXplIGluLiBZb3UgbWF5IHdhbnQgdG8gZm9jdXMgb24gYSBwYXJ0aWN1bGFyIHdlaWdodCBpbiBjaGlwcywgYSBjZXJ0YWluIHR5cGUgc3VjaCBhcyBQYXVsc29uLCBvciBldmVuIHVuaXF1ZSB2YXJpYXRpb25zIHN1Y2ggYXMgUGVyc29uYWxpemVkIENsYXkgUG9rZXIgQ2hpcHMuIEluIGFsbCBhY3R1YWxpdHksIHlvdSBtYXkgd2FudCB0byBmb2N1cyBvbiBzZXZlcmFsIGRpZmZlcmVudCBwcm9kdWN0cy4gSWYgeW91IGFyZSBuZXcgdG8gdGhlIGJ1c2luZXNzIGl0IGlzIHByb2JhYmx5IGJlc3QgdG8gc2luZ2xlIG91dCBvbmUgdG8gdHdvIGl0ZW1zIGFuZCBwbGFjZSB5b3VyIGZvY3VzIG9uIHRob3NlIGl0ZW1zIG9ubHkgdW50aWwgeW91IGFkanVzdCB0byBoYXZpbmcgeW91ciBvd24gYnVzaW5lc3MuClRoZXkgY291bGQganVzdCBpZ25vcmUgdGhhdCBibG9jaywgYmFzaWNhbGx5IHB1bGwgb2ZmIGEgNTElIGF0dGFjayB3aXRob3V0IGRvdWJsZSBzcGVuZGluZy4gCkJhY2tpbmcgdXAgdGhlIGpvYnMgY2xhaW0sIE11aWxlbmJ1cmcgc2FpZCBCb2VpbmcgaGlyZWQgMzQsMDAwIHBlb3BsZSBpbiAyMDE4LiBTaW5jZSB0aGUgZmFsbCBvZiAyMDEyLCB0aGUgY29tcGFueSBzaGVkIG1vcmUgdGhhbiAzNCwwMDAgam9icy4KTmV2ZXIgc2Vjb25kIGd1ZXNzIHlvdXJzZWxmLiAKRm9yIGhlciBwYXJ0LCBNY0NhcnRoeSB3YXMgUGxheWJveSAyMDAzIFBsYXltYXRlIG9mIHRoZSBZZWFyLCBidXQgaGVyIHJlY2VudCBUViB3b3JrIGhhcyBnb25lIHJlbGF0aXZlbHkgdW5ub3RpY2VkLiAKUmVmbGVjdGlvbnMgYWZ0ZXIgYSB5ZWFyIG9mIHBsYXlpbmcgU2VtaQpUaGF0J3MganVzdCBob3cgaXQgaXMuIEksIHRvbywgYW0gZ29pbmcgdG8gc3RhcnQgaG9zdGluZyBwb2tlciBuaWdodHMuIChJJ3ZlIGFscmVhZHkgZ290IHRoZSBwcm9mZXNzaW9uYWwgbG9va2luZyB3ZXQgYmFyLCBieSB0aGUgd2F5LiAKSSBzdG9yZSBteSB0dWJlcnMgaW4gYSBkZWVwIHBsYW50IHRyYXkgb3IgbmV3c3BhcGVyIGxpbmVkIHNoYWxsb3cgYm94LCBuZXN0bGVkIGluIGFuZCBsaWdodGx5IGNvdmVyZWQgYnkgdmVybWljdWxpdGUuIEluIE1hcmNoLCBJIHNpbXBseSBicmluZyB0aGUgYm94IG9yIHRyYXkgaW50byBtb2RlcmF0ZSB3YXJtdGggaW4gdGhlIGhvdXNlLCBzcHJheSBtaXN0IHRoZSBzdXJmYWNlLCBhbmQgd2FpdCBmb3IgdGlueSBwaW5rIG51YnMgb2YgZ3Jvd3RoIHRvIGFwcGVhci4gClByYWN0aXNlLCBQcmFjdGlzZSwgUHJhY3Rpc2UhVGhpcyBpcyB0aGUgbnVtYmVyIG9uZSBydWxlIG9mIGxlYXJuaW5nIGFueSBpbnN0cnVtZW50LiAKSGFzdHkgZGVjaXNpb25zIGRvIG5lZWQgdG8gYmUgbWFkZSBpZiBhIG1vZCBhY2NvdW50IGlzIGplb3BhcmRpemVkLiBSZW1vdmFscyBzaG91bGQgbm90IGJlIG1hZGUgaW4gdGhlIGRhcmssIGJ1dCBvY2Nhc2lvbmFsbHksIGhhcyB0byBoYXBwZW4uIFdoYXQgd2UndmUgYWxsIGFsd2F5cyBiZWVuIGdvb2QgYXQgaXMgcmVhY2hpbmcgY29uc2Vuc3VzOyBiaWcgb3Igc21hbGwuIApJIG5vdCBwZXJzb25hbGx5IGFsbCB0aGF0IGludmVzdGVkICAgSSBhIHdvbWFuLCBidXQgSSBub3QgYSBuYXRpdmUgR2VybWFuIHNwZWFrZXIsIHNvIGl0IGRvZXNuIGZlZWwgbGlrZSBpdCBteSBwbGFjZSB0byBjcml0aWNpemUuIApGaWZ0ZWVuIG9mIHRoZSBKZXRzIDE4IHNrYXRlcnMgcmVjb3JkZWQgYXQgbGVhc3QgYSBwb2ludCBpbiB0aGUgb2ZmZW5zaXZlIG91dGJ1cnN0LCB3aGljaCByZXByZXNlbnRlZCB0aGUgbW9zdCBsb3BzaWRlZCB3aW4gb2YgdGhlIGNhbXBhaWduIHRvIGRhdGUgZWNsaXBzaW5nIHRoZSA3IDEgd2luIG92ZXIgdGhlIFBoaWxhZGVscGhpYSBGbHllcnMgaW4gRGVjZW1iZXIgYW5kIHRoZSA5IDMgdHJpdW1waCBvdmVyIHRoZSBBbmFoZWltIER1Y2tzIGxhc3QgbW9udGguCldoZW4geW91ciByYXRlIG9mIHRyYXZlbCBpcyBsaW1pdGVkIGJ5IHRoZSBjYXJzIGluIGZyb250IG9mIHlvdSwgYW5kIG5vdCBqdXN0IHlvdXIgcHJlZmVycmVkIHNwZWVkLCBnZXR0aW5nIG92ZXIgYWNjb21wbGlzaGVzIG5vdGhpbmcgaW4gdGVybXMgb2YgbW92aW5nIHRyYWZmaWMgYWxvbmcuIFRoaXMgaXMgdGhlIHdheSBtb3N0IHBlb3BsZSBkcml2ZS4gCklmIHlvdSBhcmUgbG9va2luZyBmb3IgYW4gYWx0ZXJuYXRlIHBvaW50IHRvIHN0YXJ0IGZyb20sIFRoZSBMb29wIHdvdWxkIGJlIG11Y2ggbW9yZSBhY2Nlc3NpYmxlIHdpdGggYSBoaWtlIHVwIG92ZXIgZmxhdCB0b3AgdG8gd2hlcmUgeW91IG1lZXQgdGhlIENEVCBhdCBmaWZ0eSBtb3VudGFpbiBjYW1wZ3JvdW5kLiBUaGF0IGJlaW5nIHNhaWQsIEkgaGF2ZSBkb25lIHNvbWUgaGlraW5nIGluIHRoZXJlIGFuZCBteSBjaG9pY2UgdG8gaGlrZSB1cCBhbmQgdGFnIHRoZSBtb251bWVudCB3b3VsZCBiZSBmcm9tIENoaWVmIE1vdW50YWluIHRvIFdhdGVydG9uIChvdmVyIGEgY291cGxlIGRheXMpLCBhbmQgdGhlbiBoZWFkaW5nIHNvdXRoICh0aGVyZSBpcyBubyByZWR1bmRhbmN5IHRoaXMgd2F5IGFuZCBleHRyYSBkYXlzIGluIEdsYWNpZXIgYXJlIGFsd2F5cyBhIGJvbnVzKS4gCkluZ3Jvd24gdG9lbmFpbCAgIGEgdG9lbmFpbCB0aGF0IGdyb3dzIGlud2FyZCB0b3dhcmRzIHRoZSBmbGVzaCBvZiB0aGUgdG9lLiBUaGlzIGNvbmRpdGlvbiBtYXkgYmUgaW5oZXJpdGVkLCBkdWUgdG8gdG9lIGRlZm9ybWl0aWVzIG9yIGluanVyaWVzLCBvdmVyIGN1cnZhdHVyZSBvZiB0b2VuYWlscywgYW4gaW1iYWxhbmNlIGJldHdlZW4gdGhlIG5haWwgYmVkIGFuZCBuYWlsIHBsYXRlLCB3ZWFyaW5nIG9mIHRpZ2h0IGlsbCBmaXR0aW5nIHNob2VzIG9yIGJ5IHNpbXBseSBjb250aW51b3VzbHkgY3V0dGluZyB0aGUgbmFpbHMgdG9vIHNob3J0IG9yIG5vdCBpbiBhIHN0cmFpZ2h0IGxpbmUuLiAKVGhpcyBjcmVhdGVzIGFuIGludGVyZXN0aW5nIHNpdHVhdGlvbiBmb3Igc3VyZSwgYXMgdGhlIFVJR0VBIGRvZXNuJ3QgcmVhbGx5IGRlZmluZSBnYW1ibGluZyBhcyBpbGxlZ2FsLiAKSSBnZXQgaXQsIGhlJ3MgY2hpbm55IHdpdGggQmFtYmkgbGVncyBhbmQgaGFzIGJlZW4gZHJvcHBlZCBtb3JlIHRpbWVzIHRoYW4gYSBKZXJzZXkgU2hvcmUgZ3JlbmFkZS4gRXZlbiBmZWxsb3cgQnJpdCBCaWxseSBKb2UgU2F1bmRlcnMgZGVjbGFyZWQgcmVjZW50bHksICJLaGFuIGhhcyBnb3QgdGhlIHdvcnN0IGNoaW4gaW4gYm94aW5nIi4gQnV0IGxldCdzIHRoaW5rIHRoaXMgdGhyb3VnaCBiZXlvbmQgdGhlIHN1cGVyZmljaWFsIGxheWVyLiAKU29tZXRoaW5nIEkgZG9uZSBhcyB3ZWxsIGlzIHRvIGZseSBhIHNpZ24uIApJIGdldCBpdCBpbXBvc3NpYmxlIGlmIHNoZSByZWZ1c2luZyBidXQgaXQgYWxsIHZlcnkgZnJlc2gsIG1heWJlIGdpdmUgaGVyIHNvbWUgdGltZT8gSSBnZXQgd2h5IEpvcmR5biBmZWx0IHRoZSBuZWVkIHRvIGRvIGl0IGlmIGhlciBmYW1pbHkgaXMgYWZmZWN0ZWQgaW4gc3VjaCBhIHdheS4gVGhhdCBhYnNvbHV0ZWx5IHRlcnJpYmxlIGJ1dCBtYXliZSB0aGVyZSBzaG91bGQgaGF2ZSBiZWVuIGEgYmlnZ2VyIGZvY3VzIG9uIHRoaXMgZHVyaW5nIHRoZSB0YWxrPy4gCkhlcmUncyB0aGUgbWF0aDouIApBbGV4X2JlbHVnYSAgMiwwMDEgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpGb3JnZXQgYWJvdXQgcHJlc2lkZW50ICAgTWl0dCBSb21uZXkgY291bGRuIGdldCBjb25maXJtZWQgYXMgYSBjYWJpbmV0IHNlY3JldGFyeS4iIChJIGd1ZXNzIFNlbi4gCkl0IGhvbmVzdGx5IGRlcHJlc3NpbmcgYW5kIGlmIHlvdSBhcmUgc3BlbmRpbmcgYWxsIG9mIHlvdXIgZW5lcmd5IHRyeWluZyB0byBkbyB0aGUgcmlnaHQgdGhpbmcgb25seSB0byBiZSBpZ25vcmVkLi4gCiJJIHdhbnQgbW9yZSBwZW9wbGUgdG8gY29tZSBoZXJlIGFuZCBJIGRvbid0IHdhbiBhbnkgZW1wbG95ZXIgdG8gc2F5IHRvIG1lOiAnSSBjYW4ndCBmaW5kIHRoZSBwZW9wbGUgdG8gd29yay4gTmV3IHJvYWQgd2lkZW5pbmcgcHJvamVjdHMgZm9yIEJhbndlbGwgUm9hZCwgRG9taW5pb24gQm91bGV2YXJkIGZyb20gTm9ydGh3b29kIHRvIFRvdHRlbiBzdHJlZXRzLCBhbmQgUHJvdmluY2lhbCBSb2FkIGZyb20gQ2FiYW5hIHRvIFdhbGtlciByb2Fkcy4gClJlaW5hcmR5IGFuZCBKIEouIFRvcmRvZmYsIHBoeSAhIHNpY2lhbnM7IE1ycy4gCkJvbmQgSUlJLCB3aG8gZGlkbid0IHJldHVybiBhIHRlbGVwaG9uZSBtZXNzYWdlIGZvciB0aGlzIHN0b3J5LiAKSmplcm90ICA3IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVlI6TGV0J3Mgc3RhcnQgYXQgdGhlIHRvcC4gVGhlIEdyZWF0IFdhciBmb3IgTmV3IFplYWxhbmQ6IFdhaWthdG8gMTgwMCAgMjAwMCBpcyBhIG1hc3NpdmUgYm9vayBhbmQgYSBtaWdodHkgaW5kaWN0bWVudCBvZiB0aGUgd2F5cyBpbiB3aGljaCBQa2VoIGdyYWJiZWQgdGhlIGxhbmQgb2ZmIGFuZCBvZiBNb3JpOyBhIHN5c3RlbWF0aWMgc25hdGNoaW5nIHRoYXQgb2YgY291cnNlIGhhcyBoYWQgYW5kIGNvbnRpbnVlcyB0byBoYXZlIHNlcmlvdXMgcmFtaWZpY2F0aW9ucyBmb3IgbWFueSBNb3JpIHRvZGF5LiBXaGF0IGFyZSB0aGUgcG9zaXRpdmUgZmxvdyBvbiBlZmZlY3RzIHN0ZW1taW5nIGZyb20gdGhpcyBpbXBvcnRhbnQgYm9vaywgdGhhdCB5b3UgYXJlIGV4cGVyaWVuY2luZyB5b3Vyc2VsZj8uIAoiIHN3ZWFyIG9uIG15IG1vdGhlcidzIGxpZmUgSSBoYXZlIHlvdSBiZWF0LCcgaGUgc2FpZCwgY29udmluY2luZ2x5IGFuZCBlYXJuZXN0bHkuIApUaGUgZmFjdCB0aGF0IHNoZSBpcyB0cnlpbmcgdG8ganVzdGlmeSBjaGVhdGluZyBzaG91bGQgdGVsbCB5b3UgYWxsIHlvdSBuZWVkIHRvIGtub3cuIApTaGUgdG91Y2hlZCBldmVyeW9uZSBhcm91bmQgaGVyIHdpdGggaGVyIHplc3QgZm9yIGxpdmluZyBsaWZlIHRvIHRoZSBmdWxsLCBkZXNwaXRlIGFuZCBpbiBzcGl0ZSBvZiBoZXIgaGVyIGlsbG5lc3MuIFNoZSB3YXMgYSB0cnVlIGNhbmNlciB3YXJyaW9yLCBmaWdodGluZyB0byByYWlzZSBub3Qgb25seSBmdW5kcyBmb3IgY2FuY2VyIHJlc2VhcmNoIG9yIGZvciB0aGUgYXNzaXN0YW5jZSBvZiBvdGhlciBjYW5jZXIgd2FycmlvcnMgd2hvIG5lZWRlZCBoZWxwIHdpdGggZmluYW5jZSwgYnV0IGF3YXJlbmVzcyB0aGF0IGF0IDNvIHllYXJzIG9sZCwgeW91IGFyZSBOT1QgdG9vIHlvdW5nIHRvIGhhdmUgYnJlYXN0IGNhbmNlciwgYXMgc2hlIGhlcnNlbGYgaGFkIGJlZW4gdG9sZC4gUGF5IGZvciBhIG1hbW1vZ3JhbSBpZiB5b3UgaGF2ZSB0bywgYnV0IGRvbiBsZXQgYSBkb2N0b3IgZ2FtYmxlIHdpdGggWU9VUiBsaWZlISBJIGxvdmUgaGVyIHRvZGF5LCB0b21vcnJvdyBhbmQgYWx3YXlzLiAKUGFydGx5IGl0IGlzIGJlY2F1c2Ugd2UgYXJlIGEgY3VsdHVyZSBib3JuIG9mIGEgbWlkZGxlIGNsYXNzIHJldm9sdXRpb24gYWJvdXQgMTAwIHllYXJzIGFnbyB3aGVuIHRoZSB1cHBlciBjbGFzc2VzIChhbmQgbG93ZXIgY2xhc3Nlcykgd2VyZSBkZW5pZWQgcG93ZXIgYnkgdmlydHVlIG9mIG1pZGRsZSBjbGFzcyBkaXNjaXBsaW5lLiAKTGUgZmFpdCBxdSBuIGF1cmEgcGFzIGRlIHByb2NzIGx1aSBlbmx2ZSB1biBwb2lkcyBzdXIgbGVzIHBhdWxlcy4gSiBzdHJlc3NlIGQgYXBwZWxlICB0bW9pZ25lciwgamUgbmUgdm91bGFpcyBwYXMsIGNvbmZpZSBsYSBqZXVuZSBmaWxsZS4KV2hlbiBzb21lb25lIGhhcyBiZWVuIGFidXNlZCBvciBob2xkaW5nIGV2ZXJ5dGhpbmcgImluIiB0b3VjaCBjYW4gYmUgdmVyeSByZWxheGluZyB3aGljaCBpbiB0dXJuIGNvdWxkIGFsbG93IHBlb3BsZSB0byByZWxlYXNlIHRoZWlyIGVtb3Rpb25zIHRoYXQgdGhleSB3ZXJlbiBhYmxlIHRvIGJlZm9yZS4gCkhvY2tleXBlZzE4IHUKQmx1bXN0ZWluIGZpbmFsIGhhbmQgb2YgYW4gYWNlIG9mIGhlYXJ0cyBhbmQgYSB0d28gb2YgZGlhbW9uZHMgZW5kZWQgdXAgYmVpbmcgc3Ryb25nZXIgdGhhbiB0aGF0IG9mIE90dCwgd2hvIHdlbnQgYWxsIGluIHdpdGggYW4gYWNlIG9mIGRpYW1vbmRzIGFuZCBhbiBlaWdodCBvZiBkaWFtb25kcy4gCkhlIGRvZXMgcmVhbGl6ZSBoaXMgbG92ZSBmb3IgSGFpZGVlLCBidXQgdGhlcmUgd2FzIHNvIG11Y2ggbW9yZSB0byB0aGF0LiBIZSBkaWQgY29tcGFyZSBoZXIgdG8gYSBkYXVnaHRlciB5ZXMsIGJ1dCBtdWx0aXBsZSB0aW1lcyBoZSBzYWlkIGhlIHdvdWxkIGxvdmUgaGVyIGluIGFueSB3YXksIGFuZCB0aGUgY29tcGFyaXNvbiB0byBvZiBhIGRhdWdodGVyIGlzIG1vcmUgdGhhdCBoZSBzYXZlZCBoZXIgYW5kIGlzIGhlciBwcm90ZWN0b3IuIEhlIGNhbGxzIGhlciBoaXMgc2xhdmUsIGJ1dCBpbiB0cnV0aCB0aGF0J3Mgb25seSBpbiBuYW1lLCBhcyBzaGUgbGl2ZXMgbGlrZSBhIHJpY2ggbm9ibGUsIGFuZCB0aGUgc2xhdmUgcGFydCBtYXkgb25seSBiZSBzbyBEYW50ZXMgZG9lc24ndCBiZWNvbWUgYXR0YWNoZWQgdG8gaGVyLCBhcyBoZSB3YXMgY29uc3VtZWQgYnkgdmVuZ2VhbmNlIGR1cmluZyBzby4KSXQgbmV2ZXIgb2J0YWluZWQgYSBsaXF1b3IgbGljZW5zZSwgYnV0IHNlcnZlZCBib296ZSB0byBpdHMgY2xpZW50cyB1bnRpbCB0aGUgd2VlIHNtYWxsIGhvdXJzIG9mIHRoZSBtb3JuaW5nLiBJdCBoYWQgYmF0dGVyZWQgdGluIGNlaWxpbmdzLCBhIGJhciwgYSBwb29sIHRhYmxlLCBhbmQgdGFibGVzIGFuZCBjaGFpcnMgc2NhdHRlcmVkIGFyb3VuZCB0aGUgc2NhcnJlZCB3b29kIHBsYW5rZWQgZmxvb3IuIFRoZSBDb3BhY2FiYW5hIGl0IHdhcyBub3QuLiAKRm9yIGV4YW1wbGUsIGlmIHlvdSBhcmUgaW4gbGF0ZSBwb3NpdGlvbiBhbmQgY29uc2lkZXJpbmcgYW5zd2VyaW5nIGEgM3ggYmxpbmQgcmFpc2UgZnJvbSwgb2ggbGV0J3Mgc2F5LCBEdWVjZXNDcmF6eTk5LCBhbGwgeW91IGhhdmUgdG8gZG8gaXMgY2hlY2sgdGhlIFZQSVAgbWV0ZXIuIApHZXQgY3JhZnR5IGJ5IG1ha2luZyBkZWNvcmF0aW9ucyB0aGF0IHdpbGwgc2VydmUgYSBwdXJwb3NlIGluIHlvdXIgaG9tZS4gTG9vayBhcm91bmQgZm9yIGFydCBzdXBwbGllcywgc2NyYXBzIG9mIGZhYnJpYywgb3IgYW55IHNtYWxsIG9iamVjdHMgeW91IGNhbiBpbXByb3Zpc2Ugd2l0aCB0byBtYWtlIGFuIGFydCBwcm9qZWN0LiBUaGlzIGNhbiBiZSBhIGZ1biB3YXkgdG8gcGFzcyB0aGUgdGltZSwgYW5kIHlvdSBtaWdodCBlbmQgdXAgd2l0aCBhIG5ldyBob3VzZSBkZWNvcmF0aW9uLls0XQpFZGl0OiBvbiBhIHNpZGUgbm90ZSBJIHVzZWQgdG8gd2F0Y2ggQm9iIGxpdmUgd2hlbiBJIHdhcyBhIHlvdW5nIGFkdWx0ICh5ZXMsIEkgYW0gb2xkIGFuZCBJIHNhdyBoaXMgdmVyeSBmaXJzdCBzaG93KSBJIGJvdWdodCBhIGNhbnZhcywgc29tZSBwYWludHMgKG5vdCBoaXMsIGhlIGRpZG4gaGF2ZSB0aGVtIHRoZW4pIGFuZCBhIGZhbiBhbmQgYSBiaWcgcGFpbnQgYnJ1c2guIE15IHZlcnkgZmlyc3QgcGFpbnRpbmcgaXMgc3RpbGwgaGFuZ2luZyB1cCBpbiBteSBncmFuZG1vdGhlcnMgaG91c2UsIGV2ZXJ5b25lIHRoaW5rcyAodG8gdGhpcyBkYXkpIHRoYXQgaXQgZ3JlYXQuIE15IHNlY29uZCBwYWludGluZyB3YXMgaHVuZyB1cCBvdmVyIG15IGZhdGhlcnMgZGVhdGggYmVkIChoZSByZXF1ZXN0ZWQgaXQpLiAKUGxlYXNlIHNlZSB0aGUgd2lraSBmb3IgbW9yZSBkZXRhaWxlZCBleHBsYW5hdGlvbnMgb2YgdGhlIHJ1bGVzLiBXaGVuIHBlcmZvcm1pbmcgYSBjb3ZlciBvZiBNYXJsZXkncyAiV2FyIiBvbiBTTkwsIHJld3JpdGluZyBhIGZldyBvZiB0aGUgbHlyaWNzIHRvIGFkZHJlc3MgY2hpbGQgYWJ1c2UuIEFzIHNoZSBmaW5pc2hlZCB0aGUgc29uZyBzaGUgcHJvZHVjZWQgYW5kIHRvcmUgdG8gc2hyZWRzIGEgcGhvdG9ncmFwaCBvZiB0aGUgUG9wZSBzaG91dGluZywgIkZpZ2h0IHRoZSByZWFsIGVuZW15ISJUSUwgdGhhdCB3ZSBkb24ndCBzZWUgcHVyZSBibGFjayB3aGVuIHdlIGNsb3NlIG91ciBleWVzLCB3ZSBzZWUgYSBjb2xvciBuYW1lZCBFaWdlbmdyYXUgYW5kIGFsdGhvdWdoIHRoZXJlIGFyZSBhIGZldyB0aGVvcmllcyBhcyB0byB3aGF0IGNhdXNlcyBpdCBub2JvZHkncyBxdWl0ZSBzdXJlLi4gClNvbWUgcG9rZXIgcm9vbXMgd2lsbCBvZmZlciBleHRyYSByZWFsIG1vbmV5IHNpZ24gdXAgaW5jZW50aXZlcyB0byB0aGVpciBmdW4gcGxheWVycyBqdXN0IHRvIG1ha2Ugc3VyZSB0aGVpciBjdXN0b21lcnMgcmVtYWluIHBsYXlpbmcgd2l0aCB0aGVtLiAKSW50cm9kdWNpbmcgdGhlIGRlc2VydCB2YWNhdGlvbiB0aGF0IHJlbmV3cyBhbmQgaW5zcGlyZXMgeW91LiAKU2ltaWxhciB0byBlbGRlcmx5IGh1bWFucywgdGhlIGFiaWxpdHkgdG8gbGVhcm4gbmV3IHRhc2tzIGRlY3JlYXNlcyB3aXRoIGFnZSBpbiByb2RlbnRzLiBPbiB0aGUgY2VsbHVsYXIgbGV2ZWwsIHRoZSBudW1iZXIgb2Ygc3luYXB0aWMgY29udGFjdHMsIHN5bmFwdGljIHN0cmVuZ3RoIGFuZCBwbGFzdGljaXR5IGFyZSByZWR1Y2VkIGluIHRoZSBoaXBwb2NhbXB1cyBbMzVdIGFuZCBjb3J0ZXggWzM2XS4gUmVjZW50IHJlc2VhcmNoIGhhcyBzaG93biB0aGF0IHBoeXNpY2FsIGFjdGl2aXR5IGJlbmVmaXRzIHNwYXRpYWwgbWVtb3J5IGluIGFnaW5nIHJvZGVudHMsIGV2ZW4gdXBvbiBsYXRlIGxpZmUgb25zZXQuIApJIHdpc2ggdGhlcmUgd2FzIG1vcmUgdG91cm5hbWVudCBmcmllbmRseSBhZHZpY2Ugd2l0aCBiZXR0ZXIgbWF0ZXJpYWwgZm9yIGJvdGggdmlkZW8gYW5kIGFydGljbGUgc3R5bGVzLiBJIHN0aWxsIHRoaXMgVXBzd2luZyBpcyBhIHZhbHVhYmxlIHJlc291cmNlLCBidXQgdW5sZXNzIHlvdSBhcmUgc3BlbmRpbmcgcG9rZXIgd2lubmluZ3Mgb24gdGhlIHN1YnNjcmlwdGlvbiBkb24gZHJvcCB0aGUgaGVmdHkgcHJpY2UgdGFnIG9uIGl0LgpXaWVyZGFhcm9uICAxMCBwb2ludHMgIHN1Ym1pdHRlZCAyOSBkYXlzIGFnb0FzIHlvdSBjYW4gc2VlIGluIHRoZSBwaWMgaW4gdGhhdCBhcnRpY2xlLCB0ZW1wZXJlZCBnbGFzcyBsaWtlIHRoYXQgZG9lc24ndCBjcmFjayBpbiBhIHByZWNhcmlvdXMgc3BpZGVyIHdlYiBwYXR0ZXJuIGxpa2UgaW4gbW92aWVzLiBPbmNlIHRoZSBnbGFzcyBpcyBkYW1hZ2VkLCB0aGUgd2hvbGUgcGFuZSBpbnN0YW50bHkgcG9wcyBpbnRvIG1pbGxpb25zIG9mIGZyYWdtZW50cyBoZWxkIHRvZ2V0aGVyIGJ5IHRoZSBsYW1pbmF0ZS4gCkR1ZSB0byB0aGUgd2F5IHByb3N0aXR1dGlvbiB3b3JrcyBhbmQgdGhlIGRpZmZpY3VsdHkgaW4gcG9saWNpbmcgd2hhdCBoYXBwZW5zLCB0aGVyZSBhcmUgbm8gcmVsaWFibGUgbnVtYmVycywgYnV0IGl0IGlzIGEgY29uc2lkZXJhYmxlIHByb2JsZW0uV29tZW4gZnJvbSBFYXN0ZXJuIEV1cm9wZSBhcmUgaW1wb3J0ZWQgdW5kZXIgZmFsc2UgcHJldGV4dHMgKGdldHRpbmcgYSBqb2IgYXMgYW4gYXUgcGFpciBldGMuKSwgaXNvbGF0ZWQsIGhhdmUgdGhlaXIgcGFzc3BvcnRzIHRha2VuLCBzb21ldGltZXMgdGhlaXIgZmFtaWxpZXMgYXQgaG9tZSBhcmUgdGhyZWF0ZW5lZC4gCk9uIEp1bHkgMTAsIDIwMTMsKC4pIEhVQSBXRUkgQ0hJTkEgbGF1bmNoZWQgYSBmb3JtYWwgcG9saWN5IGluc3RpdHV0aW5nIGEgYm9udXMgcHJvZ3JhbSB0byByZXdhcmQgZW1wbG95ZWVzIHdobyBzdG9sZSBjb25maWRlbnRpYWwgaW5mb3JtYXRpb24gZnJvbSBjb21wZXRpdG9ycy4gVW5kZXIgdGhlIHBvbGljeSwgSFVBIFdFSSBDSElOQSBlc3RhYmxpc2hlZCBhIGZvcm1hbCBzY2hlZHVsZSBmb3IgcmV3YXJkaW5nIGVtcGxveWVlcyBmb3Igc3RlYWxpbmcgaW5mb3JtYXRpb24gZnJvbSBjb21wZXRpdG9ycyBiYXNlZCB1cG9uIHRoZSBjb25maWRlbnRpYWwgdmFsdWUgb2YgdGhlIGluZm9ybWF0aW9uIG9idGFpbmVkLiBFbXBsb3llZXMgd2VyZSBkaXJlY3RlZCB0byBwb3N0IGNvbmZpZGVudGlhbCBpbmZvcm1hdGlvbiBvYnRhaW5lZCBmcm9tIG90aGVyIGNvbXBhbmllcyBvbiBhbiBpbnRlcm5hbCBIdWF3ZWkgd2Vic2l0ZSwgb3IsIGluIHRoZSBjYXNlIG9mIGVzcGVjaWFsbHkgc2Vuc2l0aXZlIGluZm9ybWF0aW9uLCB0byBzZW5kIGFuIGVuY3J5cHRlZCBlbWFpbCB0byBhIHNwZWNpYWwgZW1haWwgbWFpbGJveC4gCkkgaGFkIHN1Y2ggYW4gYW1hemluZyBleHBlcmllbmNlIGFuZCBJIGFjdHVhbGx5IHRoaW5rIGl0IHdhcyBiZXN0IGZvciBtZSB0byBleHBlcmllbmNlIE1pcmF2YWwgZm9yIHRoZSBmaXJzdCB0aW1lIHNvbG8uSSBuZWVkZWQgdGhlIHRpbWUgdG8gcHJvY2VzcyB3aGF0IEkgbGVhcm5lZCBhbmQgZXhwZXJpZW5jZWQuIApNYXJjZWwgTHVza2UgaXMgb25lIG9mIHRoZSBmYW1vdXMgUHJvZmVzc2lvbmFsIFBva2VyIFBsYXllcnMuIApGb3VuZCBvdXQgbGF0ZXIgdGhhdCB3YXMgYmxvb2Qgc2F1c2FnZS4gTm9wZS4gClN0YXRlcyBvbiBpdHMgd2Vic2l0ZWQuIApIZSBkaWRuIGxhc3QgbG9uZy4gV2hlbiBoZSBjaGFuZ2VkIGNhcmVlcnMgSSBhc2tlZCBoaW0gd2h5LiAKT25seSB0aGluZyBJIHJlZ3JldCBpcyB0aGF0IEkgZGlkbnQgdGVsbCB0aGUgZW1wbG95ZWUgSSB3YXMgY2xvc2luZyB3aXRoIHdoYXQgSSB3YXMgZ29pbmcgdG8gZG8sIGJlY2F1c2UgdHVybnMgb3V0IGhlIGhhZCB0byBvcGVuIHRoZSBuZXh0IGRheSB0b28sIGFuZCB3YWl0ZWQgb3V0c2lkZSBmb3IgYSBmZXcgaG91cnMgdW50aWwgc29tZW9uZSBjYW1lIGFuZCBvcGVuZWQgdGhlIHN0b3JlLgpZb3UgY2FuIGdldCBpdC90aGVtIGZyb20gaVR1bmVzLiAKS3Jpc3RvcGhlcmJhbm5lciAgMCBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KQSBnYW1lIG9mIGtsYXZlcmphc3NlbiBpcyBwbGF5ZWQgd2l0aCBmb3VyIHBsYXllcnMsIHVubGlrZSBwb2tlciBvciBibGFjayBqYWNrIHdoZXJlIHBsYXllcnMgcGxheSBhZ2FpbnN0IGVhY2ggb3RoZXIgb3IgYWdhaW5zdCB0aGUgZGVhbGVyOyBLbGF2ZXJqYXNzZW4gcmVxdWlyZXMgc29tZSBsZXZlbCBvZiBjb29wZXJhdGlvbiwgYXMgdGhlIHBsYXllcnMgYXJlIHJlcXVpcmVkIHRvIGZvcm0gdHdvIHRlYW1zLiBUaG91Z2ggYXQgZmlyc3QgdGhpcyBtYXkgc2VlbSBsaWtlIGEgaGFzc2xlIHJlc3QgYXNzdXJlZCB0aGF0IHRoaXMgaXMgd2hlcmUgdGhlIGhlYXJ0IG9mIHRoZSBhY3Rpb24gZHdlbGxzLiBCZWZvcmUgdGhlIGdhbWUgYmVnaW5zIGdyb3VuZCBydWxlcyBhcmUgdXN1YWxseSBhZ3JlZWQgdXBvbiB0byBmYWNpbGl0YXRlIHNtb290aCBnYW1lIHBsYXkgYW5kIGVsaW1pbmF0ZSBhbnkgY29uZnVzaW9uIGFzIHRoZSBnYW1lIHByb2dyZXNzZXMuLiAKU29Bc2lhbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpCdXQgSSBsb3N0IG92ZXIgMjAgbGJzIGluIGEgbW9udGguIApUaGUgY29tcGFueSdzIG1haW4gY2hhcml0YWJsZSBwcmlvcml0eSBpcyB0aGUgc3VwcG9ydCBhbmQgZGV2ZWxvcG1lbnQgb2Ygc3Ryb25nIGNvbW11bml0aWVzLiAKQW5vdGhlciBwb3B1bGFyIG9wdGlvbiBpcyB0aGUgSm9rZXIuIFRoZSBKb2tlciBjYW4gYmUgZGlzcGxheWVkIGluIHNldmVyYWwgZGlmZmVyZW50IHdheXMuIE1hbnkgcGVvcGxlIG9wdCBmb3IgZ2V0dGluZyBkaXNwbGF5IHRoZSBCYXRtYW4gY2hhcmFjdGVyIGhvbGRpbmcgYSBKb2tlciBjYXJkLiBUaGUgSm9rZXIgY2FyZCB0YXR0b28gY2FuIHN5bWJvbGl6ZSBnb29kIGx1Y2ssIGFzIGl0IGlzIG9mdGVuIGEgd2lsZCBjYXJkLiBJdCBjYW4gYWxzbyBiZSB1c2VkIHRvIHN5bWJvbGl6ZSBtaXNmb3J0dW5lIGFuZCBkZWNlaXQuIEJ1dCBpbiB0aGUgcG9rZXIgd29ybGQsIGl0IGlzIG9mdGVuIHZpZXdlZCBhcyBhIGdvb2QgbHVjayBjaGFybS4KTG9vayBhcm91bmQgZm9yIGFydCBzdXBwbGllcywgc2NyYXBzIG9mIGZhYnJpYywgb3IgYW55IHNtYWxsIG9iamVjdHMgeW91IGNhbiBpbXByb3Zpc2Ugd2l0aCB0byBtYWtlIGFuIGFydCBwcm9qZWN0LiAKT3VyIGJhYnkgd2FzIGJvcm4gYXQgYSB1bmlxdWUgd2luZG93IG9mIHRpbWUsIGF0IDIzIHdlZWtzIGFuZCBzaXggZGF5cycgZ2VzdGF0aW9uLiBTaGUgd2FzIGEgdGh3YXJ0ZWQgbWlzY2FycmlhZ2UsIG5vdCB5ZXQgZnVsbHkgaGVyIG93biBwZXJzb24gd2l0aCBoZXIgb3duIHN0YW5kaW5nLiAKQSB3aG9sZSBsb3Qgb2YgZGlzYXBwb2ludG1lbnQgYW5kIHRoZSBsb3NzZXMgY2FuIGJlIGF2b2lkZWQgYnkgcHJhY3RpY2luZyB3aXRoIHRoZXNlIGZyZWUgb25saW5lIGNhc2lubyBnYW1lcy4gRXZlbiB0aGUgZXhwZXJ0cyBwbGF5IHRoZXNlIGdhbWVzIHRvIGZ1cnRoZXIgbWFzdGVyIHRoZWlyIGdhbWUgYW5kIGdhaW4gbmV3ZXIgYW5kIGJldHRlciBza2lsbHMgdG8gZnVydGhlciByZWR1Y2UgdGhlIGNoYW5jZXMgb2YgbG9zaW5nIHRoZSBiZXQuIFNpbmNlIHRoZXJlIGFyZSBubyBtb25ldGFyeSBpc3N1ZXMgY29ubmVjdGVkIHRvIGl0LCBvbmUgY2FuIHBsYXkgYXMgbWFueSBnYW1lcyBhcyBvbmUgd2FudHMsIGFuZCBhcyBtYW55IG51bWJlciBvZiB0aW1lcyBhcyBvbmUgd2lzaGVzIGZvci4KU28geW91IGhhdmUgMiBjbGFucywgQ2xhbiAxIGZpbGxlZCB3aXRoIHlvdXIgbWFpbiBhY2NvdW50cyB0aGF0IHlvdSB3YW50IGxvb3QgZm9yIGFuZCBDbGFuIDIgd2l0aCBhbHRzIHRoYXQgZG9uJ3QgbWF0dGVyLiBZb3UgZ2V0IGJvdGggY2xhbnMgdG8gYSBtaWQgbGV2ZWwgbGVhZ3VlLgpJJ3ZlIHdpdGhkcmF3biBmcm9tIG9waWF0ZXMgYmVmb3JlIGFuZCB0aGVyZSdzIG5vIGRvdWJ0IGl0J3MgbWlzZXJhYmxlLCBidXQga25vd2luZyBpdCBlbmRzIG1ha2VzIGEgYmlnIGRpZmZlcmVuY2UuIApJZiB5b3UgbGlrZSB0byBiZSBsaWdodCBvbiB5b3VyIGZlZXQsIHlvdSB3aWxsIGJlIHRyZWF0ZWQgbGlrZSBhICJsaWdodCB3ZWlnaHQuIi4gCk15IGZhY3RzIGFyZSByaWdodCB5b3UgaGF2ZSB0byBkaXNwcm92ZSB0aGVtKS4gClRlbmRhbnQgIHBlcm1ldHRyZSBsYSByZWNvbm5haXNzYW5jZSBkZXMgdW5pb25zIGNvbmNsdWVzIGRhbnMgdW4gYXV0cmUgdGF0IGRlIGwnVW5pb24gZXVyb3Blbm5lIHBhciB0b3VzIGxlcyBjb3VwbGVzIHF1ZWxsZSBxdWUgc29pdCBsZXVyIG9yaWVudGF0aW9uIHNleHVlbGxlLFBhciBNLiBSaWNoYXJkIFlVTkcsIE1tZXMgTW9uaXF1ZSBDRVJJU0lFUiBiZW4gR1VJR0EsIENsYXVkaW5lIExFUEFHRSwgTWljaGxlIEFORFIsIE1NLiAKU2VyaW91c2x5LiBXaGF0IGFuIGFic29sdXRlIHNoaXRzaG93LgpJdCByZWFsbHkgbWVhbnQgYSBsb3QuIApJZiBtb25leSBpcyBhbiBpc3N1ZSAgIHRoZXJlIGFyZSBnZW5lcmFsbHkgcGxhY2VzIGFyb3VuZCB0aGF0IG9mZmVyIHNsaWRpbmcgc2NhbGUgdGhlcmFweS4uIApOb3QgdG8gbWVudGlvbiBub3QgaGF2aW5nIHRvIHBheSBwZW9wbGUgb3ZlcnRpbWUgdG8gcGF0Y2ggc3lzdGVtcyBhdCAyIGFtIG9uIGEgU2F0dXJkYXkuLiAKSSBvbmx5IGV2ZXIgcmVhbGx5IHBsYXkgaG9tZSBnYW1lcyBhbmQgc21hbGwgdG91cm5leSBhbmQgaGF2ZSBuZXZlciByZWFsbHkgdmVudHVyZWQgaW50byB0aGUgY2FzaCBnYW1lcyBhdCB0aGUgcG9rZXIgcm9vbSBvciBjYXNpbm8uIE9uZSBvZiB0aGUgbWFpbiByZWFzb25zIGlzIHRoaXMgb25lIHNpbXBsZSBkdW1iIHF1ZXN0aW9uLgpNeSBleHBlcmllbmNlIHdpdGggdGhhdCB0eXBlOiBob21lIHNjaG9vbGluZyB3b3JrcyB3ZWxsIGFzIGxvbmcgYXMgdGhlIHB1cnBvc2UgaXMgdG8gZm9jdXMgaGVhdmlseSBvbiBhY2FkZW1pY3MgcmF0aGVyIHRoYW4ganVzdCBrZWVwIHlvdXIga2lkIGF3YXkgZnJvbSBwdWJsaWMgc2Nob29scyBiZWNhdXNlIHlvdSBkaXNhZ3JlZSB3aXRoIHRoZSBzY2hvb2xzLCBhbmQgYXMgbG9uZyBhcyB0aGUgc3R1ZGVudCBoYXMgc29tZSB3YXkgb2Ygc29jaWFsaXppbmcuIERlZmluaXRlbHkgbWV0IHNvbWUga2lkcyB3aG8gd2VyZSB0ZXJyaWJsZSBwZW9wbGUuIApNdXNjbGVzIGhhdmUgc3RyZXRjaCByZWNlcHRvcnMgdGhhdCBsaXZlIGluIHRoZSB0ZW5kb25zLiBXaGVuIGEgbXVzY2xlIGlzIHN0cmV0Y2hlZCB0b28gZmFyIHRvbyBmYXN0LCB0aG9zZSByZWNlcHRvcnMgY2F1c2UgdGhlIG11c2NsZSB0byBjb250cmFjdCBpbiBvcmRlciB0byBwcm90ZWN0IHRoZSBtdXNjbGUgZnJvbSB0ZWFyaW5nLiAKTGV0IG1lIGRlc2NyaWJlIHNvbWUgb2YgdGhlIHBlcnNvbmFsaXRpZXMgdGhhdCBmcmVxdWVudCBvdXIgaG9tZSBnYW1lIGFuZCBJJ20gc3VyZSB5b3UnbGwgc2VlIHNvbWUgcGFyYWxsZWxzIHRvIHRoZSBwZXJzb25hbGl0aWVzIHlvdSBzZWUgaW4geW91cnMuIFRoZW4sIHlvdSBjYW4gdGhpbmsgYWJvdXQgaG93IHlvdSBjYW4gdGFrZSBiZXR0ZXIgYWR2YW50YWdlIG9mIHRob3NlIHBsYXllcnMuCkkgbGVhcm5lZCB0aGF0IGJlaW5nIHRoZSBib3NzIG1lYW5zIGJlaW5nIGludm9sdmVkLiAKVE9ST05UTyAgIG9ycG9yYXRpb24sICwgLCAsIHRoZSBhbmQgLCB0byByYWlzZSBhd2FyZW5lc3MgYWJvdXQgdGhlIGJ1c2luZXNzIGNhc2UgZm9yIHdvbWVuJ3MgZWNvbm9taWMgZW1wb3dlcm1lbnQgYW5kIHRoZSBvcHBvcnR1bml0aWVzIGZvciB0aGUgcHJpdmF0ZSBzZWN0b3IgdG8gYWR2YW5jZSBnZW5kZXIgZXF1YWxpdHkgYW5kIHN1c3RhaW5hYmxlIGRldmVsb3BtZW50LgpTbyBmb3IgdGhlIG1vbWVudCBJIHN0ZXBwaW5nIGRvd24uIApIZSB3YW50cyB0byBkbyBzb21ldGhpbmcgYWJvdXQgRWwgUGFzbyBjcnVtYmxpbmcgcm9hZHMgd2hpY2ggaXMgYSBiaXQgcmljaCB3aGVuIHlvdSB0aGluayBhYm91dCBhbGwgdGhlIG1vbmV5IHRoZSBNb25leSBndXlzIGdhdmUgdG8gRXNjb2JhciBhbmQgQ28uIEkgZ3Vlc3Mgd2UgYXJlIGZpbmFsbHkgYWNrbm93bGVkZ2luZyB0aGF0IEVzY29iYXIgYW5kIENvLiBOZXZlciB0b29rIGNhcmUgb2YgdGhlIGJhc2ljcyBhdCB0aGUgY2l0eSBhbmQgY291bnR5LiAKVGhlIGZpcnN0IHdhcyB0byBtYWtlIGEgdGltZWxpbmUgb2YgYSBzcGVjaWZpYyBwZXJpb2Qgb2YgdGhlIGhpc3Rvcnkgb2YgdGhlIHVuaXZlcnNlLiBUaGUgb3RoZXIgdHdvIGZvY3VzZWQgb24gZGF0YSBhbmFseXNpczogbG9va2luZyBhdCBzaW11bGF0ZWQgdHJhbnNpdGluZyBwbGFuZXQgbGlnaHQgY3VydmVzIGFuZCBzaW11bGF0ZWQgcGxhbmV0YXJ5IGF0bW9zcGhlcmVzLiBUaGUgdG9vbHMgbmVlZGVkIHRvIGRvIHRoZXNlIHRoaW5ncyB3ZXJlIGFsbCB0YXVnaHQgaW4gdGhlIGNvdXJzZSBzbyBzdHVkZW50cyB3aXRoIG5vIGNvbXB1dGF0aW9uYWwgYmFja2dyb3VuZCBjb3VsZCBtYW5hZ2UgKGFsdGhvdWdoIG1vc3Qgb2YgdGhlIHN0dWRlbnRzIGNvbWluZyB0byBteSBvZmZpY2UgaG91cnMgd2VyZSB0aG9zZSB3aG8gZGlkbiBoYXZlIGFueSBleHBlcmllbmNlIGluIGRhdGEgYW5hbHlzaXMpLldyaXRpbmcgaXQgYWxsIG91dCBpdCBkb2VzIHNvdW5kIGxpa2UgYSBsb3QgYnV0IG15IGltcHJlc3Npb24gZnJvbSBzdHVkZW50cyB3YXMgdGhhdCBpdCB3YXMgbm90IGFuIGV4dHJlbWVseSBkaWZmaWN1bHQgY291cnNlLCBidXQgdGhhdCB5b3UgZG8gbmVlZCB0byBtYWtlIHN1cmUgdG8gZGVkaWNhdGUgdGltZSB0byBpdC4uIApUaGUgcGFwYXNhbiBnaXZlcyB5b3UgYSB3aGljaCBleHBsYWlucyB3aGF0IGdvZXMgb24uIG9uZSBndXkgYW5kIHR3byB3b21lbi4gQW5kLCB5ZXMsIHRoZSB3b21lbiBhcmUgKG9yIGF0IGxlYXN0IGJlaGF2ZSBhcykgYmlzZXh1YWwuIFNvIHlvdSBtdXN0IHRha2UgYSBtaW5pbXVtIG9mIHR3byBnaXJscy4KSWYgYm90aCBoYW5kcyBhcmUgZXhhY3RseSB0aGUgc2FtZSBleGNlcHQgZm9yIHRoZSBraWNrZXIgKEEsQSwzLDMsNiBhbmQgQSxBLDMsMywyKSB0aGUga2lja2VyIHdpbGwgZGV0ZXJtaW5lIHRoZSB3aW5uZXIuIENhcmRzIGFyZSByYW5rZWQgYXQgZmFjZSB2YWx1ZSwgQWNlIGNhbiBiZSBlaXRoZXIgdGhlIGhpZ2hlc3Qgb3IgbG93ZXN0IGNhcmQsIGRlcGVuZGluZyBvbiB0aGUgaGFuZC4gQWxsIG90aGVycyBhcmUgcmFua2VkIGZyb20gMiwgbG93ZXN0LCB0byBLaW5nLCBoaWdoZXN0LiAKVGhlIGRpYWdub3NpcyBvZiBmaWJyb215YWxnaWEgcmVxdWlyZXMgdGhhdCBhIHBhdGllbnQgZXhwZXJpZW5jZSB3aWRlc3ByZWFkIHBhaW4gaW4gYWxsIGZvdXIgcXVhZHJhbnRzIG9mIHRoZSBib2R5IGZvciBhdCBsZWFzdCB0aHJlZSBtb250aHMgZHVyYXRpb24sIGFsb25nIHdpdGggdGVuZGVybmVzcyBhdCAxMSBvciBtb3JlIG9mIDE4IHNwZWNpZmljIHBvaW50IHNpdGVzLi4gCkp1c3QgbGlrZSBldmVyeXRoaW5nIGV2b2x2ZXMsIGdhbWJsaW5nIGhhcyBjaGFuZ2VkIGFuZCBpbXByb3ZlZC4gClByb2Zlc2lvbmFsIHN0YWNrZXJzIHBlbmRlayB1bXVtbnlhIG1lbWlsaWggZ2F5YSBpbmkga2FyZW5hIG11ZGFoIHVudHVrIGJlbGFqYXIuIFBlcm1haW5hbiBtZXJla2EgZGlkYXNhcmthbiBzZWtpdGFyIHJlbmNhbmEgcGVybWFpbmFuIHlhbmcga2V0YXQgYWdyZXNpZiBwcmVmbG9wIHlhbmcgYmVyaGVudGkgbWVyZWthIGRhcmkgeWFuZyBvdXRwbGF5ZWQgb2xlaCB0ZXRhcCBrdWF0Li4gCk1lcmN1cnksIHdoZXJlIHRoZSB0ZXN0cyB0b29rIHBsYWNlLCBpcyBhYm91dCA2NSBtaWxlcyBub3J0aHdlc3Qgb2YgTGFzIFZlZ2FzLiBBcyBmYXIgYXMgSSBjb3VsZCBsYXRlciBkZXRlcm1pbmUsIGV2ZXJ5b25lIGNvbm5lY3RlZCB3aXRoIHRoZXNlIHRlc3RzLCBmcm9tIHRoZSBzY2llbnRpc3RzIHRvIHRoZSBzb2xkaWVycyBvbiBtYW5ldXZlcnMsIHdlbnQgdG8gTGFzIFZlZ2FzIHRvIHBsYXkgYmxhY2tqYWNrLiBBbmQgYmxhY2tqYWNrIGlzIHBlcmhhcHMgdGhlIG1vc3QgcHVyZWx5IG1hdGhlbWF0aWNhbCBvZiBjYXJkIGdhbWVzLgpUaGlzIGlkZWFsaXphdGlvbiBvZiB0aGUgZ29sZGVuIGFnZSBmdXJ0aGVyIGRpc3RvcnRlZCBvdXIgaW50ZXJwcmV0YXRpb24gb2YgbGF0ZXIgcGVyaW9kcyBiZWNhdXNlIGl0IGNhdXNlZCB1cyB0byB1bmRlcnN0YW5kIGFsbCBjaGFuZ2UgYXMgbmVnYXRpdmUsIHRvIHNlZSB0aGUgY2hhbmdpbmcgbmF0dXJlIG9mIHRoZSBlbXBpcmUgaW5zdGl0dXRpb25zIGFzIHRoZSAiZGVjYXkiIG9mIHN5c3RlbXMgdGhhdCBoYWQgcHJldmlvdXNseSB3b3JrZWQgcHJvcGVybHkgYnV0IHdoaWNoIHdlcmUgbm93IHVuZGVyZ29pbmcgZGVjbGluZS4uIApUc2NoZXRzY2hlbmllbiBpc3QgZWluIFN0YWF0IGltIFN0YWF0ZSwgZGllIG1laXN0ZW4gUnVzc2VuIGxlaG5lbiBkaWUgV2lycmtwZmUgZG9ydCBhYiB1bmQgYmVmcmFnZW4gZGllIFNpbm5oYWZ0aWdrZWl0LCBkYXNzIE1vc2thdSBkaWVzZSBhdXRvbm9tZSBSZXB1YmxpayBkb3J0IGZpbmFuemllcnQgICBqZWRvY2ggZ2lidCBlcyBrZWluZSByZWFscG9saXRpc2NoZSBBbHRlcm5hdGl2ZSwgd2VpbCBlaW5lIFVuYWJobmdpZ2tlaXQgZWluZW4gd2VpdGVyZW4gVGVycm9yc3RhYXQga3JlaWVyZW4gd3JkZS4gSW0gU3RhdHVzIFF1byBoYXQgTW9za2F1IHp1bWluZGVzdCBlaW4gZ2V3aXNzZXMgRHJ1Y2ttaXR0ZWwsIHVtIGRpZSBleHRyZW1lbiBFeHplc3NlIGVpbmRtbWVuIHp1IGtubmVuLCB1bmQgc2VsYnN0IDEwIHRvdGUgU2Nod3VsZSBzaW5kIGFuZ2VzaWNodHMgYW5kZXJlciBLb25zZXF1ZW56ZW4gaGNoc3RlbnMgdHJhZ2lzY2guLiAKSSBrbm93IGl0IG5vdCBhIGJpZyBkZWFsIGVpdGhlciB3YXkgYnV0IGl0IGFsd2F5cyBzdHJ1Y2sgbWUgYXMga2luZCBvZiBkdW1iIHRoYXQgb3VyIEd1YXJkaWFucyBkYWIgYW5kIGRvIHNoaXQgbGlrZSB0aGUgdGhyaWxsZXIuIFN1cmUgaXRzIGZ1biBhbmQgZ29vZnkgYnV0IGl0IGFsc28gbWFrZXMgbWUgdGhpbmsgIldoeSB3b3VsZCB0aGV5IGRvIGEgcG9wIGN1bHR1cmUgZGFuY2UgZnJvbSBiZWZvcmUgdGhlIHRyYXZlbGVyIHdoZW4gdGhleSBoYXJkbHkgZXZlbiByZW1lbWJlciB0aGUgR29sZGVuIEFnZSB3aGVuIHRoZSB0cmF2ZWxlciB3YXMgYWN0dWFsbHkgdGhlcmU/Ii4gClRoZSBwcm9wb3NlZCBydWxlcywgcmVsZWFzZWQgYnkgdGhlIHN0YXRlIERpdmlzaW9uIG9mIFBhcmkgTXV0dWVsIFdhZ2VyaW5nIGxhc3Qgd2VlayBhbmQgdXAgZm9yIGRpc2N1c3Npb24gZm9yIHRoZSBmaXJzdCB0aW1lIGF0IGEgd29ya3Nob3AgT2N0LiAxNiwgYXJlIGFuIGF0dGVtcHQgdG8gcmVpbiBpbiB0aGUgcHJvbGlmZXJhdGlvbiBvZiBxdWVzdGlvbmFibGUgcHJhY3RpY2VzIGF0IHJhY2UgdHJhY2tzIGFuZCBqYWkgYWxhaSBmcm9udG9ucyB0aHJvdWdob3V0IHRoZSBzdGF0ZSwgcmFuZ2luZyBmcm9tICJmbGFnIGRyb3AiIGhvcnNlIHJhY2VzIHRvIGEgZnJvbnRvbiB3aXRob3V0IGEgZnVsbCByb3N0ZXIgb2YgcGxheWVycy4uIApUaGUgZ3VpZGVsaW5lcyBzdGF0ZSB0aGF0IGlmIHRoZSBrb21idWNoYSBpcyBhYm92ZSAwLjUlLCB0aGVuIGl0IGlzIHN1YmplY3QgdG8gYmUgdHJlYXRlZCBhbmQgdGF4ZWQgYXMgYW4gYWxjb2hvbGljIGJldmVyYWdlLiBUaG9zZSB3aG8gcHJvZHVjZSBrb21idWNoYSwgbXVzdCB0YWtlIG1lYXN1cmVzIHRvIGVuc3VyZSB0aGF0IHRoZWlyIHByb2R1Y3RzIHdpbGwgbm90IGJlY29tZSBhbGNvaG9saWMgYXQgYW55IHBvaW50IGFmdGVyIGRpc3RyaWJ1dGlvbi4KVGhlcmUgaXMgYWxzbyB0aGUgdmVyeSBzZXJpb3VzIHBvc3NpYmlsaXR5IG9mIGxhd3N1aXRzIGZyb20gY3VzdG9tZXJzIHdobyBleHBlcmllbmNlIGEgcmVhY3Rpb24gdG8gYSBjaGVtaWNhbCwgb3Igc3VmZmVyIGEgYnVybiBvciBvdGhlciBpbmp1cnkgYXQgdGhlIHByZW1pc2VzLiAKSW0gbm90IGN1dHRpbmcgYW55b25lIG9mZiwgSSBzdGF5IGluIG15IGxhbmUgYW5kIHRoZSBjb21wdXRlciBnaXZlcyBtZSByb29tIHRvIG1vdmUgaW4uIApMb3MgZ2luZ3MgYW1EZW1ldGVyIEhvZmd1dCBSZW5nb2xkc2hhdXNlbiwgZGVzc2VuIEF1ZmJlcmVpdHVuZ3NoYWxsZSBmdWVyIEZlbGRnZW11ZXNlIHp1bSBaZW50cnVtIGRlcyBQYXJ0bmVyZm9ydW1zIHd1cmRlOiBTY2h3ZXIgYmVlaW5kcnVja3QgbGllc3MgdW5zIGRpZSBQcnNlbnRhdGlvbiB2b24gTGFuZHdpcnRpbiBNZWNodGhpbGQgS25zZWwsIGRpZSBtaXQgZWluZW0ganVuZ2VuIGtsZWluZW4gVGVhbSBhbiBlaW5lbSBuYWNoaGFsdGlnZW1NaWxjaHZpZWhiZXRyaWViIGFyYmVpdGV0IHVuZCB1bnMgZnIgZWluZW4gTmFjaG1pdHRhZyB0ZWlsaGFiZW4gbGllc3M6IFRpZXJlIGxlYmVuIGluIGVpbmVtIG9mZmVuZW4gTGF1ZnN0YWxsIHVuZCBnZW5pZWVuIGltIFNvbW1lciBkZW4gV2VpZGVnYW5nLiBLbGJlciBkcmZlbiBkdXJjaCBkaWUgTXV0dGVyZ2VidW5kZW5lIEtsYmVyYXVmenVjaHQgaWhyZW4gTWlsY2hiZWRhcmYgaW4gZGVuIGVyc3RlbiB2aWVyIE1vbmF0ZW4gZGlyZWt0IGJlaSBpaHJlbiBNdHRlcm4gZGVja2VuLiAKSSBvbmNlIGxpc3RlZCBvdXIgY2hhbmdlIHRhYmxlL2RyZXNzZXIgdGhhdCBuZWVkZWQgc29tZSBsb3ZlLiAKSGFkIGEgZ3V5IGZyb20gYSB0ZW1wIGpvYiBpIHdhcyBhdCB0aGF0IG1ha2VzIHBsYXN0aWMgbWVkaWNhbCBwYXJ0cywgcHJldHR5IHNpbXBsZS4gVGFrZSB0aGUgcGFydCBvdXR0YSB0aGUgbWFjaGluZSBhbmQgcGFjayB0aGVtIG9yIGNsaXAgb2ZmIGV4dHJhIGJpdHMgaWYgbmVlZGVkLiBJIHdhcyByZWFsbHkgZ29vZCBhdCBpdCB0aGF0IEkgdHJhaW5lZCBhbG90IG9mIHBlb3BsZSB0aGF0IGNhbWUgaW4gZnJvbSB0aGUgYWdlbmN5KG5pZ2h0IHNoaWZ0IGpvYiwgcGVvcGxlIGRvbnQgc3RpY2sgYXJvdW5kKS4gVGhpcyBvbmUgZ3V5IGluIHBhcnRpY3VsYXIganVzdCB3b3VsZG4gbGlzdGVuIHRvIG1lIGFuZCB3YXMganVzdCBkb2luZyBpdCBoaXMgd2F5LiBIZSB3b3VsZCBpZ25vcmUgbWUgdG8gYSBmYXVsdCB3aGVyZSBoZSB3b3VsZCBkYW1hZ2UgdG9vIG1hbnkgcGFydHMgdGhhbiB3ZXJlIGFjY2VwdGVkLCB0YWtlIGV4dHJhIGxvbmcgYnJlYWtzLCB3b3JrIHNsb3csIGFuZCBzcHJlYWQgZ2VybXModGhlc2UgYXJlIG1lZGljYWwgcGFydHMgc28gdGhleSBuZWVkIHRvIGJlIGFzIHN0ZXJpbGUgYXMgcG9zc2libGUpIGJ5IGJyaW5naW5nIGhpcyBvd24gdG9vbHMgZnJvbSB3aG8ga25vd3Mgd2hlcmUgYW5kIHNuZWV6aW5nIG9uIHRoZSBwYXJ0cyB3aGVyZSB0aGVyZSB3YXMgbGl0ZXJhbGx5IGEgYmlnIGJvb2dlciBvbiBpdCB0aGF0IGhlIGRpZG4gY2xlYW4gdXAuCkZhbWlseSBsYXcgdHJpYWwgZmluYWxseSB0b29rIHBsYWNlIGZvdXIgeWVhcnMgYWZ0ZXIgdGhlIHBhcnRpZXMgc2VwYXJhdGVkLiBJdCBpbnZvbHZlZCBhbiBleHBlcnQgaW4gZm9yZW5zaWMgYWNjb3VudGluZyB3aG8gd2FzIHJlcXVpcmVkIHRvIHJlY29uc3RydWN0IHJlY29yZHMgTXIuIApTbyBJIHN1Z2dlc3QgeW91IG9yIHRoZSBneW0gb3duZXIgY29udGFjdCB0aGUgQ2hhaXIgb2YgYWxsIHRoZSBTdGF0ZSBDaGFpcnMsIGV4cHJlc3MgeW91ciBpbnRlcmVzdCwgYW5kIGdldCBtb3JlIGluZm8uIApUaGUgc2ltaWxhcml0eSBvZiBsb3NpbmcgbW9uZXkgaWYgbm90IGdhbWJsaW5nIHdpc2VseSBjYW4gbmV2ZXIgYmUgYXZvaWRlZCwgd2hldGhlciBvbmxpbmUgb3Igbm90LiAKRm9yIGV4YW1wbGUsIGlmIEhhcnJpcyB3b24gQ2FsaWZvcm5pYSB3aXRoIDQwJSBhbmQgV2FycmVuIHRvb2sgMzAlIGFuZCBCaWRlbiBhbmQgQmVybmllIGVhY2ggdG9vayAxNSUsIHRoZSBkZWxlZ2F0ZXMgd291bGQgYmUgZGlzdHJpYnV0ZWQgYWNjb3JkaW5nIHRvIHRoZXNlIHBlcmNlbnRhZ2UgbnVtYmVycyBhcyB3ZWxsLiAKVHJ1ZSB0byBoaXMgcmVwdXRhdGlvbiwgVmF1Z2huIHdhcyBkcmVzc2VkIGluIGhpcyBzaWduYXR1cmUgamVhbnMgYW5kIHBsYWlkIGJ1dHRvbiB1cC4gQXQgZmlyc3QsIHRoZSBhY3RvciBhbmQgaGlzIGNyZXcga2VwdCBpdCBsb3cga2V5IGluIHRoZWlyIGJvb3RoIGJ5IHRoZSBkb29yd2F5LCBidXQgYnkgdGhlIGVuZCBvZiB0aGUgbmlnaHQsIGhlIHdhcyB0aGUgY2VudGVyIG9mIGF0dGVudGlvbiBhcyBnaXJscyB3ZXJlIGNyb3dkaW5nIGFyb3VuZCBoaW0uClRoZSBzcGVlZCBvZiBwbGF5IGlzIGFsc28gYSBmYWN0b3IgdGhhdCBpcyB1dGlsaXplZCBieW9ubGluZSBwb2tlcnBsYXllcnMuIFF1aWNrIGJldHMgYXJlIHVzdWFsbHkgYSBzaWduIG9mIHdlYWtuZXNzLCB3aGlsZSBhIGRlbGF5ZWQgYmV0IGlzIGEgc2lnbiBvZiBzdHJlbmd0aC4gRGVsYXllZCBiZXRzIG1lYW4gdGhlIG9wcG9uZW50IGlzIGNhbGN1bGF0aW5nIGhpcyBzdHJhdGVneSBmb3IgaGlzIGJpZyBoYW5kLiAKVG91cyBsZXMgbG9naWNpZWxzIGludCBkYW5zIGxlIFNpdGUgd2ViIGV0IGRhbnMgbGVzIEZvbmN0aW9ubmFsaXQgb3UgcXVpIHMneSB0cm91dmVudCwgeSBjb21wcmlzLCBub3RhbW1lbnQgdG91dCB0eXBlIGRlIGNvZGUgbWFjaGluZSwgZG9udCBsJ2Vuc2VtYmxlIGRlcyBmaWNoaWVycyBldC9vdSBpbWFnZXMgY29udGVudXMgb3UgZyBwYXIgY2VzIGxvZ2ljaWVscyBlc3QgcHJvdCBwYXIgbGUgZHJvaXQgZCdhdXRldXIgZXQgcGV1dCBwcm90IHBhciBkJ2F1dHJlcyBkcm9pdHMuIApXaGlsZSB3ZSBoYXZlIHBsZW50eSBvZiB0YWJsZXMgZm9yICQ1IEJsYWNramFjaywgU3R1ZCwgYW5kIGEgZmV3IG90aGVyIGdhbWVzLCB0aG9zZSB3aG8gd2FudGVkIHRvIHBsYXkgVGV4YXMgSG9sZGVtJyBuZWVkZWQgYSBsYXJnZXIgc2V0LiAKVGhlICQxMCwwMDAgaXQgd291bGQgY29zdCBhIHllYXIgd291bGQgYmUgYSBidXJkZW4gb24gdGhlIFBhaXV0ZSB0cmliZS4gVGhhdCBsYW5kIHdhcyBnaXZlbiB0byB0aGUgdHJpYmUgZnJlZSBhbmQgY2xlYXIuIFBhaXV0ZXMgaGF2ZSBlbmR1cmVkIHNvIG11Y2ggd2l0aCB0ZXJtaW5hdGlvbiBhbmQgY291bnRsZXNzIGNvdXJ0IGJhdHRsZXMgb3ZlciBsYW5kLiBUaGV5IGhhZCBhIGxvdCBvZiBoYXJkc2hpcHMsIFRvbSBzYWlkLiB0aW1lIHdlIGxvb2sgdG8gdGhlIGZ1dHVyZSBhbmQgdGVhY2ggb3VyIHlvdW5nIHBlb3BsZSB0aGF0IHRoZXJlIGlzIHNvbWV0aGluZyB0byBsb29rIGZvcndhcmQgdG8uIApJbiB0cnV0aCB3ZSBoYXZlIGZvcnNha2VuIHRoZSByaWdodCB0byBjYWxsIElxYmFsIG91ciBuYXRpb25hbCBwb2V0LiAKQmVja3kgTnV0dCwgYSBSZXB1YmxpY2FuIHJlcHJlc2VudGluZyBhIGRpc3RyaWN0IGluIEFyaXpvbmEgc291dGhlYXN0ZXJuIGNvcm5lciwgc2FpZCBzaGUgaGVhcnMgdGhlIGNvbmNlcm5zIG9mIHRoZSBkb2N0b3JzIGJ1dCBzdGlsbCB0aGlua3MgcGFyZW50cyBzaG91bGQgaGF2ZSB0aGUgcmlnaHQgdG8gY2hvb3NlIG9uIGJlaGFsZiBvZiB0aGVpciBvd24gY2hpbGRyZW4uIldlIGFyZSBpbiB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLCIgc2hlIHNheXMsICJhbmQgd2UgaGF2ZSBhIHJpZ2h0IHRvIGNob29zZSBmb3Igb3VyIGNoaWxkcmVuICAgb3VyIHJlbGlnaW9uLiIiUGVyc29uQmVoaW5kQVNjcmVlbiAgMjAgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSBoYWQgdGhpcyBoYXBwZW4gbXVsdGlwbGUgdGltZXMgdG8gbWUgYW5kIGl0IHNvIHNhdGlzZnlpbmcuIApJdCBtYWtlcyBpdCBmZWVsIGxpa2UgdGhlIGhvb2sgImV4cGxvZGVzIG91dCIgaW4gYSB3YXkuIApEaXJlY3Rpb24gc2lnbmJvYXJkcyBvbiB0aGUgaGlnaHdheSBhbmQgb3RoZXIgcHJvbWluZW50IHJvYWRzIHdpbGwgYWxzbyBiZWFyICdSZWFsJyBzaWducywgc3VjaCBhcyBTYXJrYWFyIEtpIER1bml5YSBmb2xsb3dlZCBieSBhIHJpZ2h0IGFycm93LCB0byBjcmVhdGUgYSB2aXJhbCBlZmZlY3QuIFRoZSBwcmludCBtZWRpdW0gd2lsbCBiZSB1c2VkIGNsb3NlciB0byB0aGUgbGF1bmNoIGRhdGUuIApUaGlzIG5lYXJseSB1bml2ZXJzYWwgaHVtYW4gZHJpdmUgdG8gaW1pdGF0ZSB0aG9zZSB3aXRoIHRoZSBtb3N0IHByZXN0aWdlICh3aGF0IGFudGhyb3BvbG9naXN0cyBjYWxsIHByZXN0aWdpb3VzIGltaXRhdGlvbikgaXMgdXNlZCB3aXRoaW4gY29uc3VtZXIgY2FwaXRhbGlzbSB0byBzZWxsIHVzIGJvZGllcyB0aGF0IHdlIGNhbiBuZXZlciBiZSwgbm90IGV2ZW4gd2l0aCBzdXJnZXJ5LiBCb2RpZXMgd2Ugd2FudCBkb24gZXhpc3QgaW4gcmVhbCBzcGFjZSwgYnV0IHRoZSBpbWFnaW5hcnkgc3BhY2Ugb2YgY29tcHV0ZXIgZ2VuZXJhdGVkIG9yIGF0IGxlYXN0IGltYWdlcy4uIAoyMCBocnMgYWdvICsgQnkgT2xpdmVyYSBQZXJraW5zLCBUaGUgUGxhaW4gRGVhbGVyClNwb3J0cyBpcyBhIGdlbnJlIHdlIGhhdmUgYWx3YXlzIGVuam95ZWQgd29ya2luZyBvbiBhbmQgd2UgZWFnZXJseSBhd2FpdCB0aGUgdmFyaWVkIHNldCBvZiBvcHBvcnR1bml0aWVzIGNoYWxsZW5nZXMgdGhpcyBvcHBvcnR1bml0eSB3aWxsIGJyaW5nIGFsb25nLkthaXp6ZW4gaXMgYSBkZWNhZGUgb2xkIGluZGVwZW5kZW50IGFnZW5jeSBoYW5kbGluZyBhIGJhbGFuY2VkIHBvcnRmb2xpbyBvZiBjbGllbnRzIGFjcm9zcyB2YXJpb3VzIHNlY3RvcnMuIApSeW5hbGRvOTAwICAxIHBvaW50ICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25BbiBBbGJ1cnkgbWFuIHN0dWNrIGJlaGluZCBiYXJzIGZvciByaXBwaW5nIG9mZiBhbiBBbGJ1cnkgcHVicG9rZXIgbWFjaGluZSBoYXMgcmVwZWF0ZWRseSBjbGFpbWVkIGhlIGRpZG4ndCBmb3JjZSBpdCBvcGVuLiBDYWluZSBBbGxhbiBOaWNob2xzIHdhcyBzaG9ja2VkIHdoZW4gaGUgZm91bmQgb3V0IGZyb20gSnVuZWUgamFpbCB0aGF0IGhlIHdhcyBiZWluZyBhc2tlZCB0byBwbGVhZCB0byBzdWNoIGEgY2hhcmdlLiAiVGhlIG1hY2hpbmUgd2FzIHVubG9ja2VkIGFscmVhZHksIiBoZSB0b2xkIEFsYnVyeSBMb2NhbCBDb3VydCB2aWEgYSB2aWRlbyBsaW5rLiAKIldlJ3JlIHZlcnkgbXVjaCBhIGZsdWlkIGRlcGFydG1lbnQsIiBoZSBhZGRlZCwgcmVmZXJyaW5nIHRvIFRGQydzIHNwb3J0cyBzY2llbmNlIGRpdmlzaW9uLiAKSGVyZSBpcyB0aGUgYmlnZ2VyIGlzc3VlLiBTaGUgaXMgdXBzZXQgb3ZlciB5b3VyIHBvc2l0aW9uIG9uIGFuIGlzc3VlIHRoYXQgZG9lc24ndCBhZmZlY3QgeW91IG9yIGhlciBpbiB0aGUgc2xpZ2h0ZXN0LiBTb21lIHBlb3BsZSBqdXN0IG5lZWQgc29tZXRoaW5nIHRvIGNyeSBhYm91dC4gSWYgc2hlIGRvZXNuJ3QgZG8gc28gYWxyZWFkeSBzaGUgd2lsbCB1c2UgaGVyIGNyeWluZyBhcyBhIGJsYW5rIGNoZWNrIGNsYWltIG92ZXIgeW91ciB0aW1lLCBtb25leSBhbmQgbWFuaG9vZC4gTW9yZW92ZXIsIHlvdXIgdmlldyBvbiBjZXJ0YWluIHRoaW5ncyB0dXJucyB5b3UgZXZpbCBpbiBoZXIgZXllcy4gWW91IGNhbid0IG5lZ290aWF0ZSB3aXRoIHBlb3BsZSBsaWtlIHRoaXMuIFNoZSBoYXMganVkZ2VkIHlvdXIgaHVtYW5pdHkgdG8gYmUgYmVuZWF0aCBoZXJzLCBhbmQgaWYgeW91IHRyeSB0byByZWRlZW0geW91cnNlbGYgdG8gaGVyLCBzaGUgd2lsbCB3aWVsZCB1dHRlciBhbmQgYWJzb2x1dGUgY29udHJvbCBvdmVyIHlvdXIgbGlmZS4KSSBoYWQgdG8gbGVhdmUgZWFybHkgc28gaSB3b3VsZG4gd2FrZSBoZXIgcGFyZW50cyB1cC4gClVzaW5nIGRhdGEgZnJvbSBoaWdoIHF1YWxpdHkgcmFuZG9taXplZCBjb250cm9sbGVkIEVVIHRyaWFscyBhbmQgY29udGVtcG9yYXJ5IFVTIGJhc2VkIGF2ZXJhZ2UgdW5pdCBwcmljZXMgcGF5YWJsZSBieSBjb21tZXJjaWFsIGluc3VyZXJzLCB3ZSBwcm9qZWN0IHRoYXQgaW5zdXJhbmNlIGNvdmVyYWdlIGZvciBjaGlyb3ByYWN0aWMgcGh5c2ljaWFuIGNhcmUgZm9yIGxvdyBiYWNrIGFuZCBuZWNrIHBhaW4gZm9yIGNvbmRpdGlvbnMgb3RoZXIgdGhhbiBmcmFjdHVyZSBhbmQgbWFsaWduYW5jeSBpcyBsaWtlbHkgdG8gZHJpdmUgaW1wcm92ZWQgY29zdCBlZmZlY3RpdmVuZXNzIG9mIFVTIGNhcmUuClRoZSBjbHViIHdpbGwgaW5zdGFsbCBhIG5ldyAyMSBwZXJzb24gbGlmdCBpbiB0aGUgRWxpemFiZXRoIFN0cmVldCBmb3llciwgcmVtb3ZpbmcgdGhlIG5lZWQgZm9yIHdoZWVsY2hhaXIgdXNlcnMgdG8gdHVybiB3aXRoaW4gdGhlIGxpZnQgYXJlYS4KIkRvd250b3duIChnYW1pbmcpIGxvY2F0aW9ucyBoYXZlIG5vdCByZWFsbHkgc3VjY2VlZGVkLCB3aGlsZSBzdWJ1cmJhbiBsb2NhdGlvbnMgaGF2ZSBiZWVuIGEgYmlnIGhpdCIgaW4gbG9jYWwgbWFya2V0cyBhY3Jvc3MgdGhlIGNvdW50cnksIHNhaWQgSmF5IE1hc3VyZWthciwgdGhlIENsZXZlbGFuZCBiYXNlZCBoZWFkIG9mIGdhbWluZyBhbmQgdHJhdmVsIHNlcnZpY2VzIGZvciBpbnZlc3RtZW50IGJhbmtpbmcgYXQgS2V5QmFuYyBDYXBpdGFsIE1hcmtldHMuICJBbmVjZG90YWxseSwgSSBrbm93IHBlb3BsZSBvbiB0aGUgV2VzdCBTaWRlIHdobyBza2lwIGRvd250b3duIGFuZCBnbyB0byB0aGUgSGFyZCBSb2NrIFJvY2tzaW5vLCBhbmQgdGhhdCdzIG1haW5seSBiZWNhdXNlIG9mIHRoZSBhbWVuaXRpZXMgdGhleSBoYXZlIGFuZCB0aGUga2luZCBvZiBleHBlcmllbmNlIHRoZXkgcHJvdmlkZS4iLiAKVXMgdXBkYXRlZDsgSSBkb24gaGF2ZSB0aGUgbWVhbnMvYWJpbGl0eSB0byBoZWxwIGF0IGFsbCBteXNlbGYgcmlnaHQgbm93IChjYXIgd2FzIHN0b2xlbiBhbmQgZXZlbiB0aG91Z2ggaXQgd2FzIHJldHVybmVkIHRvZGF5IGFmdGVyIGEgbW9udGggZ29uZSwgSSBzdGlsbCBpbiB0aGUgaG9sZSBmaW5hbmNpYWxseSBhbmQgc3RpbGwgY2FuIGRyaXZlIGl0IGJlY2F1c2UgdGhleSBhbHNvIGJyb2tlIGEgd2luZG93IGFuZCBzdG9sZSB0aGUgbGljZW5zZSBwbGF0ZSwgd2hpY2ggaXMgZnVydGhlciBwYXBlcndvcmsgQlMgdG8gcmVwbGFjZSksIGJ1dCBJIG1heSBiZSBhYmxlIHRvIGFzc2lzdCBpbiBzb21lIHdheSBpbiB0aGUgZnV0dXJlLCBpZiB5b3UgbmVlZCBmdXJ0aGVyIGFzc2lzdGFuY2UuCkJ1dCB0aGF0IG5vdCB0byBzYXkgdGhhdCBwbGF5ZXIgcGVyY2VwdGlvbiBpc24gdmFsaWQuIEkgYWdyZWUgd2l0aCB0aGUgc2VudGltZW50IHRoYXQgQXJ0aWZhY3QgZ2FtZXMgZmVlbCBsb25nZXIgdGhhbiB0aGV5IGFjdHVhbGx5IGFyZSwgYW5kIGluIGNvbnRyYXN0IHRvIEF1dG8gQ2hlc3MgSSBoYXZlIHNvbWUgaWRlYXMgb24gd2h5IHRoYXQgbWlnaHQgYmUuIEF0IGZpcnN0IEkgc3BlY3VsYXRlZCB0aGF0IGl0IHdhcyBhIHN5bXB0b20gb2YgdGhlIGluaXRpYXRpdmUgc3lzdGVtIHdoZXJlIHBsYXllcnMgcGFzcyBhY3Rpb25zIGJhY2sgYW5kIGZvcnRoLCByZXF1aXJpbmcgYm90aCBwbGF5ZXJzIHRvIG5vdCBqdXN0IGJlIGNvbnN0YW50bHkgd2FpdGluZyBvbiB0aGVpciBvcHBvbmVudCwgYnV0IGFsc28gcmVzcG9uZGluZywgZXZlbiBpZiB0aGF0IHJlc3BvbnNlIGlzIGp1c3QgInBhc3MiLiBIb3dldmVyLCBNYWdpYyB0aGUgR2F0aGVyaW5nIHVzZXMgYSBmYWlybHkgc2ltaWxhciBzeXN0ZW0sIGFuZCBJIGRvbiB0aGluayBJIGhhdmUgdG8gZ28gaW50byBkZXRhaWwgb3ZlciBqdXN0IGhvdyBwb3B1bGFyIEFyZW5hIGhhcyBiZWNvbWUuIE1heWJlIHRoZSBkaWZmZXJlbmNlIGlzIHNpbXBseSB0aGUgbGFjayBvZiBhbiAiYXV0byBwYXNzIiBidXR0b24gaW4gQXJ0aWZhY3Q/CkEgInN0cmFpZ2h0IiBjb250YWlucyA1IGNhcmRzIG9mIGNvbnNlY3V0aXZlIHJhbmsgYnV0IGZyb20gbW9yZSB0aGFuIG9uZSBzdWl0LgpJIGRvbiBpbWFnaW5lIGxpdmluZyBvdXQgb2YgYSB0cnVjayBpbmRlZmluaXRlbHkgaXMgZm9yIHRoZSBmYWludCBvZiBoZWFydC4gCll1cnh6aSAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpFY3VhZG9yIG5hbWVkIHRvcCBkZXN0aW5hdGlvbiBmb3IgQ2FuYWRpYW4KRm91bmRlZCBpbiAyMDAyLCBNYXNzYWdlIEVudnkgaGFkIGRvbWluYXRlZCB0aGUgc3BhIG1hcmtldCB3aXRoIGEgcHJvZHVjdCBhbmQgcHJpY2UgcG9pbnQgYWZmb3JkYWJsZSB0byBtb3N0IEFtZXJpY2FucyBsaXZpbmcgaW4gdGhlIDQ5IHN0YXRlcyB3aGVyZSBpdCBvcGVyYXRlcy4gVGhhdCB5ZWFyLCBhY2NvcmRpbmcgdG8gS2FudGFyIE1lZGlhLCByZWJyYW5kZWQgaXRzIG1lc3NhZ2luZyB0byBmb2N1cyBtb3JlIG9uIHdlbGxuZXNzIHJhdGhlciB0aGFuIG9uIHBhbXBlcmluZyBpbiBhbiBlZmZvcnQgdG8gYXBwZWFsIHRvIHlvdW5nZXIsIGhlYWx0aCBlbnRodXNlZCBjb25zdW1lcnMuIFZlbmFibGVzIEJlbGwgUGFydG5lcnMgaGFuZGxlZCB0aGF0IGNhbXBhaWduLCB3aGljaCBpbmNsdWRlZCBuYXRpb25hbCBhbmQgbG9jYWwgVFYgYnV5cy4gCllvdSBkb24ndCBuZWVkIHRvIGJ1eSBsb3cgY3V0IGRyZXNzZXMgb3IgbWluaSBza2lydHMuIApFdmVyeSB0aW1lIEkndmUgZG9uZSB0aGlzIGluIHRoZSBwYXN0IEkndmUgYmVlbiBnaXZlbiBhIGdlbmVyaWMgcHJpbnQgb3V0IGxpc3QsIGNhbGxlZCBkb3duIHRoYXQgbGlzdCBhbmQgd2hlbiBJIGhhdmUgZ290dGVuIGFueSByZXNwb25zZXMgdGhleSBlaXRoZXIgZG9uJ3QgYWNjZXB0IG15IGluc3VyYW5jZSwgb3IgY2FuJ3QgYWNjZXB0IG5ldyBwYXRpZW50cy4gQW5kIHdoZW4gSSdkIGdvIG9uIG15IGluc3VyYW5jZXMgc2l0ZSBhbmQgY2FsbCBkb3duIHRoZSBzYW1lIGxpc3QgdGhleSB3ZXJlbid0IHRha2luZyBuZXcgcGF0aWVudHMgb3Igd2VyZSB0byBmYXIgYXdheS4gSWRrIGl0J3MgcmVhbGx5IGVhc3kgdG8gZ2V0IGRpc2NvdXJhZ2VkIHdoZW4gaXQncyBkaWZmaWN1bHQgZW5vdWdoIHRvIG1ha2UgeW91cnNlbGYgYXNrIGZvciBoZWxwIGFuZCB0aGVuIHdoZW4geW91IGRvIHlvdSBjYW4ndCBmaW5kIGFueW9uZSB0byBoZWxwLi4gCklmIHlvdSBhcmUgaGF2aW5nIHRpZ2h0IGJyZWF0aGluZyBpbiB0aGUgY2hlc3QgZm9yIG5vIGFwcGFyZW50IHJlYXNvbiwgeW91IG1pZ2h0IGJlIHN1ZmZlcmluZyBmcm9tIGFueGlldHkgYXR0YWNrLiBJdCBpcyBhbHNvIGNhbGxlZCBwYW5pYyBhdHRhY2sgYW5kIGNhbiBiZSBpbmNvbnZlbmllbnQgd2hlbiBpdCBmbGFyZXMgdXAuIApJIHNob3VsZCBpbnN0YWxsIGEgY2lzdGVybi4gTWF5YmUgSSBzd2l0Y2ggbXkgZXh0ZXJpb3IgbGlnaHRzIHRvIExFRCB0byBzYXZlIG1vbmV5LiBkZXNpZ24gaXMgc28gcGVyc29uYWwsIHNheSBSdXN0LCBhZGRpbmcgdGhhdCBoZXIgY2xpZW50cyBwcmVmZXJlbmNlcyByYW5nZSBmcm9tIGNsZWFuLCBtb2Rlcm4gbGluZXMsIHdoaWNoIHNoZSBhY2hpZXZlcyB1c2luZyBwbGFudGluZyB0byBnYXJkZW5zIGZ1bGwgb2Ygd2lsZCBmbG93ZXJzIGluIHRoZSBFbmdsaXNoIGNvdHRhZ2Ugc3R5bGUuU2hlIHNheXMgdGhhdCB3b3JraW5nIHdpdGggYSBsYW5kc2NhcGUgZGVzaWduZXIgY2FuIGhlbHAgcGVvcGxlIHJlYWxpemUgdGhlaXIgb3V0ZG9vciBhc3BpcmF0aW9ucywgYnV0IHRoZXJlIGFyZSBhIGxvdCBvZiBwZW9wbGUgb3V0IHRoZXJlIHdobyBjYW4gYWxzbyBoZWxwLmZvciBhIHdhbGsgdGhyb3VnaCB5b3VyIG5laWdoYm91cmhvb2QgYW5kIHlvdSBzZWUgSSByZWFsbHkgbGlrZSB0aGF0IGdhcmRlbiBzaGUgc2F5cy5TaGUgc2F5cyBpdCBjYW4gYmUgdXNlZnVsIHRvIGZpbmQgb3V0IGlmIHRoZXkgd29ya2VkIHdpdGggYSBkZXNpZ25lciBvciBzaW1wbHkgdG8gbG9vayBhdCBtYWdhemluZXMuV2hlbiBSdXN0IHRha2VzIG9uIGEgZ2FyZGVuIHByb2plY3QsIHRoZSBmaXJzdCB0aGluZyBzaGUgZG9lcyBpcyBhc3Nlc3MgdGhlIHVuaXF1ZSBmZWF0dXJlcyBvZiBhIHByb3BlcnR5IGFuZCB3aGF0IG1ha2VzIGl0IHNwZWNpYWwudGhlcmUgdmlldyBjb3JyaWRvcnM/IEFyZSB0aGVyZSBpbnRlcmVzdGluZyBidWlsZGluZ3M/IFdoYXQgaXMgdGhlIHN1cnJvdW5kaW5nIGFyY2hpdGVjdHVyZSBsaWtlPyBhbHNvIGJlbGlldmVzIGluIHBsYW50aW5nIGZsb3dlcnMgdGhhdCBjb21lIHRocm91Z2ggYWxsIHllYXIgdG8gZ2l2ZSBjb2xvdXIgYW5kIHRleHR1cmUucmVhbGx5IHdvcmtpbmcgd2l0aCBhIGxpdmluZyBib2R5LCBzYXlzIFJ1c3QuIApCaXRncmFpbCwgZGVzcGVyYXRlIHNoaWxsZXJzIGV0Yy4KVGhlIEZBTyBzYWlkIGlmIE9udGFyaW8gcGxhbnMgdG8gZWxpbWluYXRlIHRoZSBkZWZpY2l0IG92ZXIgdGhlIG5leHQgZm91ciB5ZWFycyBleGNsdXNpdmVseSB0aHJvdWdoIHJlc3RyYWluaW5nIHNwZW5kaW5nLCBoZWFsdGggc2VjdG9yIGNvc3RzIHdvdWxkIG5lZWQgdG8gYmUgJDguNiBiaWxsaW9uIGJlbG93IHRoZSBzdGF0dXMgcXVvIHByb2plY3Rpb24gYnkgMjAyMiAyMy4uIApCdXQgSSBndWVzcyBpdCBraW5kIG9mIGNvbnNpc3RlbnQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgZ2FtZS4gRXZlcnkgY2hvaWNlIGlzIHJlbGF0aXZlbHkgY2xlYXIgdG8geW91LCBhbmQgZXZlcnl0aGluZyB5b3UgbWlnaHQgd2FudCB0byBrbm93IChhYm91dCBBbGljZSwgYWJvdXQgTm9ydGggcGFzdCwgZXRjKSBpcyB0aGVyZSBmb3IgeW91IHRvIHNlZS4gCklmIHlvdSBhcmUgbG9va2luZyBmb3IgYSBtb3JlIGdlbmVyYWwgVHJlayBmb3J1bSwgd2UgcmVjb21tZW5kIC9yL3N0YXJ0cmVrLgooUmVhZCBhYm91dCBuZXcsIGFnZ3Jlc3NpdmUgc3R5bGVzIG9mIHBsYXkgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlci4pLiAKSSB0aG91Z2h0IGl0IHdhcyB0aGUgbW9zdCByaWRpY3Vsb3VzIGluc3RydW1lbnQsIEkgcGxheWVkIHNvIGJhZGx5IGFuZCBldmVyeSB0aW1lIEkgbWFkZSBhIG1pc3Rha2UgaXQgbWFkZSBtZSBsYXVnaC4gSSBrZXB0IGF0IGl0LCBmZWxsIGluIGxvdmUgd2l0aCBpdCwgSSBub3cgdGVhY2ggaXQgYW5kIEkgYmUgcGxheWluZyBpdCB3aXRoIG91ciBzdGF0ZSBvcmNoZXN0cmEgYXQgdGhlIGVuZCBvZiB0aGUgbW9udGguIApTb21ldGltZXMsIHRoZSBncmVhdGVzdCBhcmUgdGhlIGJlc3QuIEJ1dCB0aGUgYmVzdCBkb2Vzbid0IGhhdmUgdG8gYmUgdGhlIGdyZWF0ZXN0LiBJbiB0aGUgY29sZCwgaGFyZCB3b3JsZCBvZiBmYWN0cywgRmxveWQgTWF5d2VhdGhlciBKciBpcyBieSBmYXIgdGhlIGJlc3QgYm94ZXIgZXZlci4gCkJ1dCBpbnN0ZWFkIG9mIHB1dHRpbmcgbmFtZXMgaW4gdGhlIHNxdWFyZXMsIHlvdSBwdXQgU0VYIEFDVFMuIApDdXQgdXAgdHdvIGNoaWNrZW4gYnJlYXN0cy4gV2hlbiBvaWwgaG90LCBwdXQgY2hpY2tlbiBpbiwgYWRkIHNwaWNlcywgY29vayB1bnRpbCB0aGV5IHN0YXJ0IGJyb3duLiAKQ2VydGFpbmx5IG5vdCBhIGRlYWwgYnJlYWtlciB0byByZW1vdmUgdGhlbSBidXQgaXQgZG9lc24gaGVscCBqdXN0aWZ5IHRoZSBwcmljZSB0YWcuLiAKSXQncyBoYXZpbmcgYSBtdWNoIGdyZWF0ZXIgYWZmZWN0IG9uIGh1bWFuaXR5IHRoYW4gSSB0aGluayBtb3N0IHBlb3BsZSB3b3VsZCBjYXJlIHRvIGFkbWl0LiBBbmQgd2hlbiBpdCBjb21lcyB0byBhIHNoaWZ0IG9yIGNvbXBsZXRlIGNoYW5nZSB3aXRoIGEgbXlyaWFkIG9mIHNvY2lhbCwgY3VsdHVyYWwgYW5kIGVjb25vbWljIGlzc3VlcyB3ZSBoYXZlIHRvZGF5PyBJIGJlbGlldmUgdGhlIGludGVybmV0IGlzIGF0IHRoZSByb290IG9mIHRoZW0uIApoZWxwIGxvd2VyIGluc3VsaW4gYW5kIENvbnRyb2wgQXBwZXRpdGUKQnV0IG5vdCBldmVyeW9uZSBpcyBhIGRlZGljYXRlZCBnYW1ibGVyLiBOb3QgZXZlcnlvbmUncyBpZGVhIG9mIGEgcmVhbGx5IGdvb2QgdGltZSBpcyBwdWxsaW5nIG9uIGEgb25lIGFybWVkIGJhbmRpdCBmb3IgaG91cnMgb24gZW5kLiBBcmUgdGhlc2UgZ3Vlc3RzIGxlZnQgb3V0IGluIHRoZSBjb2xkPyBOb3QgcXVpdGUuIE1hbnkgY2FzaW5vIGhvdGVscyBvZmZlciBzb21lIG5pY2UgcGFja2FnZSBkZWFscy4KQ2hpbGRyZW4ncyBjbG90aGVzIGJsb3cgaW4gdGhlIGRpcnR5IGFpciBoYW5naW5nIG92ZXIgYmFyYmVkIHdpcmUuIFRoZSBzcXVhbG9yIGlzIHZpc2libGU7IG9wZW4gZ2FyYmFnZSByb3RzIGluIHN0YWlyd2VsbHMgYW5kIGluIG9wZW4gcGl0cyB0aGF0IHdlcmUgb25jZSBjb3VydHlhcmRzLiBUaGUgc3RlbmNoLCBhaWRlZCBieSB0aGUgdW5iZWFyYWJsZSBoZWF0IGFuZCBodW1pZGl0eSwgaXMgb3ZlcnBvd2VyaW5nLgpJIHdpbGwgYWRkIHRoYXQgb25jZSB5b3UgZ2V0IGludG8gYSBiaXQgb2YgYSBncm9vdmUsIEkgdGhpbmsgaG9tZWJyZXcgYWR2ZW50dXJlcyBhcmUgZWFzaWVyIHRvIHJ1biB0aGFuIHByZW1hZGUgYWR2ZW50dXJlcy4gV2l0aCBob21lYnJldyBzdHVmZiBldmVyeXRoaW5nIGlzIGluIHlvdXIgaGVhZCwgYW5kIGlmIHlvdSBkb250IGhhdmUgYW4gcHJld3JpdHRlbiBhbnN3ZXIgZm9yIHNvbWV0aGluZyB5b3UganVzdCBpbXByb3YuIFdpdGggdGhlIHByZW1hZGUgYWR2ZW50dXJlcywgSSBjb25zdGFudGx5IGNoZWNraW5nIHRoZSB0ZXh0IHdoZW5ldmVyIGEgcGxheWVyIGFza3Mgc29tZXRoaW5nIHRvIG1ha2Ugc3VyZSB0aGF0IEkgaGF2ZSB0aGUgc3RvcnkgcmlnaHQuClRoZSBvbmVzIHNvIGNsZWFybHkgd29ya2luZyBhZ2FpbnN0IHRoZWlyIG93biBlY29ub21pYyBpbnRlcmVzdHMgYmVjYXVzZSB0aGV5IHNvIGNyYXZlIHRoZSB3YWdlcyBvZiB3aGl0ZW5lc3MuIE1vc3QgaGlzdG9yaWFucyBvZiB3aGl0ZW5lc3MgYXJndWUgdGhhdCB0aGVzZSB3YWdlcyB3ZXJlICJwYWlkIiBpbiBhIHNlbnNlIHRvIHdvcmtpbmcgd2hpdGVzIGluIG9yZGVyIHRvIGtlZXAgdGhlbSBhbGxpZWQgd2l0aCB0aGUgd2VhbHRoeSBhbmQgYWdhaW5zdCBBZnJpY2FuIEFtZXJpY2Fucy4gQnV0IHdoYXQgYWJvdXQgdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgcGF5IHRoZSB3YWdlcyBvZiB3aGl0ZW5lc3M/IFRoZSBpbnZpc2libGUgd2hpdGUgZWxpdGVzIHdobyBhcmUgd2lsbGluZyB0byBzaGFyZSBzb21lIG9mIHRoZSBwcml2aWxlZ2VzIG9mIHJhY2lhbCBoaWVyYXJjaHkgd2l0aG91dCBleHRlbmRpbmcgYW55dGhpbmcgbGlrZSBlY29ub21pYyBzZWN1cml0eSBvciBldmVuIGhlYWx0aCBjYXJlIHRvIHRoZWlyIGJyb3RoZXJzIGFuZCBzaXN0ZXJzIGluIHJhY2lzbT8uIApBdmFpbGFiaWxpdHkgb2YgZnVuZHMgaXMgYSBiYXNpYyByZXF1aXJlbWVudCBmb3IgaGlyaW5nIGEgY2FzaW5vLCB0byBkZXRlcm1pbmUgdGhlIHF1YWxpdHkgb2YgeW91ciBwYXJ0eS4gSWYgeW91IGJ1ZGdldCBpcyBsaW1pdGVkLCB5b3UgbXVzdCBzZWxlY3QgYSBjYXNpbm8gdGFibGUsIGFuIGV4cGVydCBvbiB5b3VyIGJ1ZGdldCBpcyBzbWFsbGVyLCBsaWdodGVyIGFuZCBsZXNzLiBTb21lIGNvbXBhbmllcyBwcmVmZXIgdG8gZ28gd2l0aCBhIGZ1bGwgc2l6ZSBwcm9mZXNzaW9uYWwgdGFibGUgYXQgdGhlIGNhc2lubywgaG93ZXZlciwgdG8gcHJvdmlkZSBhbiBpbmV4cGVuc2l2ZSBhbHRlcm5hdGl2ZS4uIApXaGVuIEkgbGl2ZWQgaW4gYW4gYXBhcnRtZW50IChpbiBBbWVyaWNhKSwgdGhlIGNvbXBsZXggd291bGQgaGF2ZSBhIGZldyBodWdlIGJpbnMgdGhhdCBhbGwgdGhlIHJlc2lkZW50cyB1c2VkLiBBIG5pY2UgYXBhcnRtZW50IG1lYW50IGV2ZXJ5b25lIGtlcHQgdGhlIGRvb3JzIHNodXQgYW5kIHB1dCB0aGVpciB0cmFzaCBpbiBuZWF0bHkuIApLaWxsIGZvciBpdC4gCldoaWxlIEkgd2FzIGF3YXJlIG9mIHRoZSBtYW55IG9yZ2FuaXphdGlvbnMgdGhlIFVuaXRlZCBXYXkgYXNzaXN0cyBpbiBvdXIgY29tbXVuaXR5LCBteSBwYXJ0aWNpcGF0aW9uIGluIHRoZSBjYW1wYWlnbiB0cnVseSBlbmxpZ2h0ZW5lZCBtZSBhcyB0byBob3cgZmFyIHJlYWNoaW5nIHRoZSBVbml0ZWQgV2F5IG9mIEdyZWF0ZXIgT3N3ZWdvIENvdW50eSBpcy4gSSB3YXMgcGFydGljdWxhcmx5IHRvdWNoZWQgYnkgYSB2aWRlbyBoaWdoIHNjaG9vbCBzdHVkZW50IExhdXJlbiBEYW5pZWxzIHByZXNlbnRlZCB3aGljaCBjbGVhcmx5IGlsbHVzdHJhdGVkIHRoZSBpbXBhY3QgVW5pdGVkIFdheSBoYXMgb24gc28gbWFueSBpbmRpdmlkdWFscyBpbiBvdXIgY29tbXVuaXR5LiAKVGhhdCBkb2VzbiBtZWFuIHlvdSBoYXZlIHRvIGJlIHdvcmtpbmcgMTAwIGhvdXJzIGEgd2VlayBuZWNlc3NhcmlseSwgYnV0IHVzdWFsbHkgaXQgbWVhbnMgeW91IHB1dCBpbiB0aGUgbGF0ZSBuaWdodHMgd2hlbiB5b3UgbmVlZCB5b3UgdG8sIGFuZCBhbnN3ZXIgdGhlIHBob25lIGF0IGFsbCBob3Vycy4uIApPYm5veGlvdXNqaW1teWphbWVzICAxNSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KU2lkZXN0ZXA6IEkgbG92ZSBzb3kuIEkgbG92ZSBzb3kgc2F1Y2UsIEkgbG92ZSB0b2Z1IGFuZCBhIGZ1Y2t0b24gb2Ygb3RoZXIgcHJvZHVjdHMgeW91IG1pZ2h0IG5vdCBoYXZlIGV2ZW4ga25vd24gaGFkIHNveSBpbiBpdC4sIEkgbGlrZSB0aGUgZmFybWVycyB3aG8gbWFrZSByaWNlLCBncmFpbiwgc295LCB2ZWdnaWVzLCBldGMuICh0aGV5IGVhdCBzb3kgcHJvZHVjdHMpLCBJIGxpa2UgdGhlIHBlb3BsZSB3aG8gd29yayB0aGUgZm9yZ2VzLCBhbmQgYnJldyB0aGUgYmVlciAodGhleSBlYXQgc295IHRvbykuLiAKSW4gc3RvcnkgYWZ0ZXIgc3RvcnkgaW4gdGhpcyBicmlsbGlhbnQgbmV3IGNvbGxlY3Rpb24sIEFsaWNlIE11bnJvIHBpbnBvaW50cyB0aGUgbW9tZW50IGEgcGVyc29uIGlzIC4gClBvdXIgc2V1bGUgaWxsdXN0cmF0aW9uIGVuIHJhcHBvcnQgYXZlYyBjZXR0ZSBwcm9wb3NpdGlvbiBkZSBsb2kgOiBjb21tZW50IHJhZ2lyIHF1YW5kIGwnaW5kaXZpZHUgbidlc3QgcGFzIG1lbnRhbGVtZW50IGNhcGFibGUgZGUgY29tcHJlbmRyZSBsJ2ltcG9ydGFuY2UgZXQgbCdpbnRydCBkZXMgc29pbnMgPyBDZWxhIGFib3V0aXJhICB1biBlbXByaXNvbm5lbWVudCBwbHVzIGxvbmcsIHNhbnMgcG91ciBhdXRhbnQgYXZvaXIgdW4gYWNjcyBhdXggc29pbnMgYWRxdWF0cyA7IHB1aXMsICB1bmUgbGlicmF0aW9uIGVuIGVzcHJhbnQgdW4gcnRhYmxpc3NlbWVudCBvdSBlbiBhdHRlbmRhbnQgdW4gdm5lbWVudCBwbHVzIGRyYW1hdGlxdWUuIApJdCBpcyBhIHZlcnkgcG9wdWxhciB0cmFpbCBhbmQgdGhlcmUgYXJlIGJlYXJzIGFsbCBvdmVyLiBJIHNhdyBhIGJ1bmNoIGFuZCBza2lwcGVkIGFsbCBvZiB0aGUgcHJvYmxlbSBiZWFyIGxvY2F0aW9ucyBhbmQgbmV2ZXIgaGFkIGFuIGlzc3VlLiBUaGVyZSB3aWxsIGNlcnRhaW5seSBiZSBtb3JlIGlzc3VlcyB0aG91Z2ggaWYgYmVhcnMgc3RhcnQgdG8gbW9yZSByZWFkaWx5IGFzc29jaWF0ZSB0aGUgc21lbGwgb2YgcGVvcGxlIHdpdGggdGhlIHNtZWxsIG9mIGZvb2QgYW5kIHJlYWxpemUgdGhhdCB0aGV5IGNhbiBnZXQgZm9vZCBmcm9tIHNoZWx0ZXJzLCB0ZW50cywgb3IgdW5kZXIgeW91ciBzbGVlcGluZyBwYWQuLiAKRGVzIGFydGljbGVzIHNvbnQgcGFydXMgZGFucyBsYSBwcmVzc2UgIGNlIHN1amV0IGNlcyBkZXJuaXJlcyBzZW1haW5lcy4gTGEgc29jaXQgQXV0b2xpYiBlbiBjb25jZXJ0YXRpb24gYXZlYyBsYSBQUCBhIGRvbmMgZGNpZCBkZSBmZXJtZXIgcGx1c2lldXJzIHN0YXRpb25zLCBjZSBxdWkgcGVybWV0dHJhIGQnZXhlcmNlciB1bmUgdmlnaWxhbmNlIGFjY3J1ZSBzdXIgbGVzIGF1dHJlcyBzdGF0aW9ucyBhdXRvdXIgZHUgcHJpbXRyZSBjaG9pc2kuLiAKIk15IGZvb3QgaXMgaW4gdGhlIGRvb3Igbm93LCIgaGUgc2FpZC4gIkhvcGVmdWxseSB3ZSBjYW4gZ2V0IGEgZmlnaHQgd2l0aCBhIGZ1bGwgZmlnaHQgY2FtcCBhbmQgYSBmdWxsIHNpeCB3ZWVrcyBub3RpY2UsIEkgY2FuIGdvIGRvd24gdG8gbXkgbmF0dXJhbCB3ZWlnaHQgb2YgMTQ1LiAKSSBkb24ga25vdy4gCkJ1dCBhcyBJIHN0YXRlZCB1cCB0b3AgcGVvcGxlIGFyZSBkdW1iLCBhbmQgbWFueSBoYXZlIGRlY2lkZWQgdG8ganVzdCB0YWtlIGEgbG9vc2UgYmF0dGVyeSBhbmQgdGhyb3cgaXQgaW4gdGhlaXIgcG9ja2V0IHdpdGggY2hhbmdlIGFuZCBrZXlzLiAKV2hlbiB5b3UgbG9nIGluIHRvIFRleGFzIEhvbGRlbSwgdGhlcmUgaXMgYSBmaWxtIHN0cmlwIGxpc3Rpbmcgb2YgYWxsIHlvdXIgYnVkZGllcyBhbmQgd2hlcmUgeW91IHJhbmsuIFNjcm9sbCB0aHJvdWdoIHRoZSBzdHJpcCBhbmQgeW91IHdpbGwgc2VlIHdoZXJlIHlvdSBhcmUuIENsaWNrIG9uIFNlZSBBbGwgYW5kIGl0IHdpbGwgbGlzdCB0aGVtIGluZGl2aWR1YWxseSBhbmQgZ2l2ZSB5b3UgdGhlIG9wdGlvbiB0byByZW1vdmUhIE1ha2Ugc3VyZSB5b3UgaGl0IHNhdmUgY2hhbmdlcyBhbmQgdGhleSB3aWxsIGJlIGdvbmUuIEdvb2QgTHVjayEgKEZ1bGwgQW5zd2VyKQpUaGUgYmFyIG5ldmVyIHN0b3BzIGdvaW5nIHVwLiAKV2hlbiBxaSBnb25nIGlzIGNvbWJpbmVkIHdpdGggYWN1cHVuY3R1cmUgdHJlYXRtZW50LCB0aGUgdGhlcmFwZXV0aWMgcmVzdWx0cyBjYW4gYmUgdHJ1bHkgcmVtYXJrYWJsZS4gClJlbm8gQ2hldmVsbGUgRmVsbHMsIDQ4LCByZXNpZ25lZCBmcm9tIHRoZSBkZXBhcnRtZW50IFN1bmRheSwgc2FpZCBBc3Npc3RhbnQgQ2hpZWYgSmFtZXMgR3JpZmZpdGggb2YgdGhlIFBhbGF0a2EgUG9saWNlIERlcGFydG1lbnQuIE9uIEZyaWRheSwgRmVsbHMgcmVzcG9uZGVkIHRvIGFuIG9ubGluZSBwb3N0aW5nIHRoYXQgd2FzIHBhcnQgb2YgdGhlIGZvdXIgbmlnaHQgT3BlcmF0aW9uIFN1bW1lciBMb3ZpbicgdGhhdCBpbmNsdWRlZCBpbnZlc3RpZ2F0b3JzIGFkdmVydGlzaW5nIHNleCBmb3IgbW9uZXksIHNhaWQgQ21kci4gQ2h1Y2sgTXVsbGlnYW4gb2YgdGhlIFN0LiAKTmljIFBpenpvbGF0dG8gcHV0IHRoZSBzaW5jZXJpdHkgYW5kIHF1YWxpdHkgb2YgVHJ1ZSBEZXRlY3RpdmUncyBzdG9yeSBvdmVyIG11bHRpcGxlIHNlYXNvbnMgb2YgdGhlIHNob3csIGFzc2VydGluZyB0aGF0IGEgc3RyaWN0IDggZXBpc29kZSBmb3JtYXQgd291bGQgYmUgY29uZHVzaXZlIHRvIGEgc3Ryb25nIHRoaXJkIGFjdC4gQW5kIGp1ZGdpbmcgYnkgdGhlIGNyaXRpY2FsIGNsYWltIGhlJ3MgcmVjZWl2ZWQgICBoaXMgY3JlYXRpb24gaXMgYmVpbmcgdGFsa2VkIGFib3V0IGluIHRoZSBzYW1lIGJyZWF0aCBhcyBUaGUgV2lyZSAgIG9uZSBpcyBpbmNsaW5lZCB0byB0cnVzdCB0aGUgbWFuIHdobyByaXNrZWQgZXZlcnl0aGluZyB0byB3cml0ZSB0aGUgbmV3IEhCTyBhbnRob2xvZ3kgc2VyaWVzLgpZZXMsIEkgaGFkIG15IGhvdXNlIHJvYmJlZC4gSXQgc3Vja2VkLCBidXQgb25jZSB0aGUgaW5zdXJhbmNlIGNsYWltIHdhcyBtYWRlIEkgbW92ZWQgb24uIEkgbm90IHRyeWluZyB0byBzYXkgIkkgYmV0dGVyIHRoYW4geW91IiBqdXN0IHRoYXQgaXQgaXMgcG9zc2libGUgdG8gZGl2b3JjZSB5b3VyIGZlZWxpbmdzIGZyb20gdGhlIGV2ZW50IGFuZCB0byBub3QgbGV0IGl0IGNvbnN1bWUgeW91ciBsaWZlLiAKQW5kIHlldCBBbWVyaWNhbnMga2VwdCBvbiBkcmVhbWluZy4gQXMgb3VyIGNoYW5jZXMgb2YgZ2V0dGluZyBhaGVhZCBvciBldmVuIGp1c3Qgc3RheWluZyBhZmxvYXQgYmVjYW1lIGFib3V0IHRoZSBzYW1lIGFzIHdpbm5pbmcgaW4gTGFzIFZlZ2FzLCBBbWVyaWNhbnMgdGhvdWdodCAiaWYgSSBqdXN0IHRha2Ugb3V0IGNyZWRpdCBmb3IgdGhpcyBjb2xsZWdlIGRlZ3JlZSBvciB0byBidXkgdGhpcyBob21lLCBpZiBJIGp1c3QgYmVsaWV2ZSBpbiB0aGUgZnV0dXJlLCB0aGVuIEkgZmluYWxseSBnZXQgYWhlYWQuIiBBbmQgd2hvIHdhcyB0aGVyZSB0byBnaXZlIHVzIGxvYW5zIGF0IHJpZGljdWxvdXNseSBoaWdoIGludGVyZXN0IHJhdGVzIHdpdGggYWxtb3N0IG5vIGZlZGVyYWwgcmVndWxhdGlvbj8gVGhlIEFtZXJpY2FuIEJhbmtlcnMgQXNzb2NpYXRpb24uClByb2Zlc3Npb25hbCBwZXQgc2l0dGVycyBjYXJlIGZvciBwZXRzIGluIHRoZSBwZXRzJyBvd24gaG9tZXMsIGdpdmluZyB0aGVtIHdhdGVyLCBmb29kLCBhbmQgYXR0ZW50aW9uIG9uY2Ugb3IgdHdpY2UgZGFpbHkgZm9yIGFib3V0IGFuIGhvdXIgYXQgYSB0aW1lIHdoaWxlIHRoZWlyIG93bmVycyBhcmUgYXdheS4gSG9saWRheXMgYW5kIHN1bW1lciBtb250aHMgYXJlIHRoZSBidXNpZXN0IHNlYXNvbnMsIHdpdGggZWFybHkgbW9ybmluZyBhbmQgbGF0ZSBldmVuaW5nIGhvdXJzIHR5cGljYWwgZm9yIHRoZXNlIHBldCBqb2JzLCBzYXlzIEFsaSBPJ0Nvbm5vciwgYSBwZXQgc2l0dGVyIGFuZCBvd25lciBvZiBJbmtvJ3MgRXhlbXBsYXJ5IFBldCBDYXJlIFNlcnZpY2VzIGluIE5hcGxlcywgRmxhLiAKU2hlIGhhZCBoZXIgYmxvb2Qgd29yayBkb25lLCBtZWFzdXJlZCBoZXIgYm9keSBmYXQsIGFuZHJlY29yZGVkIGhlciB3ZWlnaHRmb3IgY29tcGFyaXNvbiBhZnRlciBzaGUgd2FzIGRvbmUgYXQgdGhlIGVuZCBvZiBKdWx5LkpFU1NJQ0EgR1JJRkZJTiAvIFN0YWZmIFBob3RvZ3JhcGhlciBEcmV4ZWwgVW5pdmVyc2l0eSBkaWV0aXRpYW4gTnlyZWUgRGFyZGFyaWFuIG9yZGVycyBsdW5jaCBhdCB0aGUgQnJ5biBNYXdyIE1jRG9uYWxkJ3MuU2hlIHN0YXJ0ZWQgSnVseSAxIHdpdGggYSBmcnVpdCBhbmQgeW9ndXJ0IHBhcmZhaXQgZm9yIGJyZWFrZmFzdCAoMTUwIGNhbG9yaWVzLCBhY2NvcmRpbmcgdG8gdGhlIGNvbXBhbnkgd2Vic2l0ZSksIGFuIEVnZyBNY011ZmZpbiAoMzAwIGNhbG9yaWVzKSB3aXRoYSBzbWFsbCBmcnkgZm9yIGx1bmNoICgyMzAgY2Fsb3JpZXMpLCBhbmQgYSBTb3V0aHdlc3QgR3JpbGxlZCBDaGlja2VuIFNhbGFkICg0NTAgY2Fsb3JpZXMpIGFuZCB3aXRoIGhlciBvcHRpb25hbCBjYWxvcmllcywgc2l4IHBpZWNlcyBvZiBhIHNwaWN5IHN1c2hpIHR1bmEgcm9sbCAoMjYwIGNhbG9yaWVzKSB0aGF0IHdlcmUgbm90IGZyb20gTWNEb25hbGQnc2ZvciBkaW5uZXIuIApCdXQgbWF5YmUgc29tZSBvZiB0aGUgcGVvcGxlIHdobyByZWFkIHRoaXMgbWF5YmUgeW91IGNhbiBhY3R1YWxseSByZXNwZWN0IG15IG9waW5pb24gaSBhbSBub3Qgc2F5aW5nIHRoYXQgeW91IDEwMCUgaGF2ZSB0by4gCk5vdCBhbGwgbmluamEgaW5ub3ZhdG9ycyBhcmUgaG91c2Vob2xkIG5hbWVzICAgeWV0LiBBZnRlciBhIGNvbGxlZ2UgcHJvZmVzc29yIHRhc2tlZCBoZXIgd2l0aCBjcmVhdGluZyBzb21ldGhpbmcgdGhhdCBoZWxwcyBwZW9wbGUgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMsIEplc3NpY2EgTWF0dGhld3MgY28gY3JlYXRlZCBTT0NDS0VULCBhIHNvY2NlciBiYWxsIHRoYXQgdXNlcyBraW5ldGljIGVuZXJneSB0byBwb3dlciBsaWdodHMgYW5kIGNoYXJnZSBkZXZpY2VzLiBMYXRlciwgc2hlIHR1cm5lZCB0aGF0IG5pbmphIHNwYXJrIGludG8gVW5jaGFydGVkIFBvd2VyLCBhIHJlbmV3YWJsZSBlbmVyZ3kgY29tcGFueSB0aGF0IGhhcyBlYXJuZWQgaW52ZXN0bWVudHMgbm93IGJhY2tlZCBieSBEaXNuZXkuCkluc3RlYWQgb2Ygd3JpdGluZyBhIGNvbmNpc2Ugc3Rvcnkgd2l0aCB0aGUgaW50ZXJlc3RpbmcgcHJlbWlzZSBoZSBoYWQgaGUgc3BlbmRzIHNvIG11Y2ggdGltZSBqdXN0IGFkZGluZyBpbiB0YW5nZW50cyBsaWtlIHRoZSB0aGluZyB3aXRoIFNhZGllIGV4IGFuZCB0aGUgc2Nob29sIHBsYXkgICBieSB0aGUgdGltZSBJIGdvdCB0aGF0IGZhciBpbiB0aGUgYm9vayBJIHdhcyBwcmV0dHkgbXVjaCBtZW50YWxseSBoZWNrbGluZyBoaW0gZm9yIGluY2x1ZGluZyB0aGlzIHdlaXJkICJIYWxsbWFyayBvcmlnaW5hbCBtb3ZpZSIgbGV2ZWwgb2Ygc2VudGltZW50YWwgc2hpdC4gCk1vYmlsZSBwaG9uZXMgaGF2ZSBtYWRlIGEgdHJlbWVuZG91cyBpbXBhY3Qgb24gdGhlIHdvcmxkLCBmb3Igc3VyZS4gT25jZSBJIHNhdyBhIHdpZG93IGluIEFsYmFuaWEgc3RhbmRpbmcgaW4gaGVyIGZpZWxkIHdpdGggaGVyIGNvdywgZmFyIGZyb20gYW55IGJ1aWxkaW5nLCB0YWxraW5nIG9uIGEgbW9iaWxlIHBob25lLiBJIHdvbmRlcmVkIHdobyBzaGUgd2FzIHRhbGtpbmcgdG8uIApJIHRoaW5rIGF0IGZpcnN0IGlmIGl0J3MganVzdCBoaW0sIGhlJ2xsIGdldCB0aGUgTWVsbyB0cmVhdG1lbnQuIElmIGJvdGggaGltIGFuZCBLeXJpZSBnbyB0aGVuIGl0J2xsIGJlIGludGVyZXN0aW5nIHRvIHNlZSBob3cgaXQgZGV2ZWxvcHMgYW5kIHdoaWNoIG9uZSB0aGUgbWVkaWEgd2lsbCAiYmxhbWUiIG1vcmUuIEkganVzdCB0aGluayBpZiBLRCBpcyBwaXNzZWQgYWJvdXQgbWVkaWEgTlkgaXMgdGhlIGxhc3QgcGxhY2UgaGUgc2hvdWxkIGdvIGJlY2F1c2UgaXQncyBub3RvcmlvdXMgZm9yIGJlaW5nIHByZXR0eSBoYXJzaC4gCkFzIHRoZSB5ZWFycyB3ZW50IG9uLCBJIGhhZCBvdGhlciBib3lmcmllbmRzLCBidXQgbXkgZGVjaWJlbCBsZXZlbCByZW1haW5lZCBkaXNhcHBvaW50aW5nbHkgc2ltaWxhci4gQnkgdGhlIHRpbWUgSSB3YXMgd2l0aCBEYXZlLCBteSBzb25pYyBsYW5kc2NhcGUgd2FzIHN0aWxsIG1vc3QgY2xvc2VseSBtYXRjaGVkIHdpdGggYSBsaWJyYXJ5LiAKTm9ybWFsbHkgW215IG5pZWNlXSBhbmQgSSB3b3VsZCBoYXZlIGJlZW4gdGhyaWxsZWQgYXQgdGhlIG5ldyBtYWtldXAsIHdoaWNoIHdhcyBhIGJyYW5kIEkgcmVjb2duaXplZCBhbmQgY291bGQgdmVyeSByYXJlbHkgYWZmb3JkLiBXZSB3b3VsZCBoYXZlIHN0b29kIGluIGZyb250IG9mIHRoZSBiZWRyb29tIG1pcnJvciwgcGFpbnRpbmcgb3VyIGV5ZWxpZHMgZGlmZmVyZW50IGNvbG9ycywgc3Vycm91bmRpbmcgb3VyIGV5ZXMgd2l0aCB0aGljayBsaW5lcyBvZiBrb2hsLCBhbmQgY292ZXJpbmcgb3VyIGZyZWNrbGVzIHdpdGggZm91bmRhdGlvbi4gCkNvbmZsaWN0ZWQuIEJ1c2luZXNzZXMgYW5kIGNvcnBvcmF0aW9ucyBkb24gY2FyZSBhYm91dCB5b3UuIElmIHRoZXkgdGhvdWdodCBjbHViYmluZyBiYWJ5IHNlYWxzIHdvdWxkIGdldCB5b3UgdG8gYnV5IHRoZWlyIHByb2R1Y3RzLCB0aGV5IGRvIGl0LgoiSm95Y2Ugd2FzIHRoZSBvbmUgdGhhdCBoZWxkIHVzIGFsbCB0b2dldGhlci4gV2hlbiBzaGUgd2FzIG1hcnJpZWQgdG8gU3RlcGhlbiBhbmQgdGhleSBtb3ZlZCBhd2F5IHRvIFBpdHRzYnVyZ2ggc2hlIHN0aWxsIG1hZGUgYSBwb2ludCBvZiBjb25uZWN0aW5nIHdpdGggYWxsIG9mIHVzLiBTaGUgd291bGQgY29tZSBpbiB0byBzZWUgaGVyIHBhcmVudHMgYW5kIHNoZSBhbHdheXMgbWFkZSBzdXJlIHNoZSBjb25uZWN0ZWQgd2l0aCBoZXIgZnJpZW5kcywiIFBlYXJsIEJlbGwgc2FpZC4gIkEgc3dlZXRlciBtb3JlIGNhcmluZyB5b3Ugd2lsbCBuZXZlciBtZWV0LiIKQnV0IHdoYXQgYWJvdXQgd2hhdCBTaW5kaGlzIHNhY3JpZmljZWQ/IFdoZXJlIGlzIHRoYXQgc3RvcnkgaW4gdGhlIGxhcmdlciBuYXRpb25hbCBkaXNjb3Vyc2U/IFRoaW5rIGhhcmQuLiAKT24gU2VwdC4gClBva2VyIHJvb21zIGNhbiBiZSBmb3VuZCBpbiBCZWF1IFJpdmFnZSwgSGFyZCBSb2NrLCBJc2xlIG9mIENhcHJpIGFuZCBJUC4gQW1lcmljYW4gQ2FzaW5vIEd1aWRlIHJlY29tbWVuZHMgY3JhcHMgcGxheWVycyBnYW1ibGUgYXQgSVAsIHdoaWNoIG9mZmVycyB0aGUgbW9yZSBhZHZhbnRhZ2VvdXMgMjAgdGltZXMgb2RkcyBiZXRzLiAKVGhlIHBlbnRob3VzZSBvciBiYXNlbWVudCBiZWNrb25zClBob3RvIENyZWRpdHMgSm9obiBGb3h4L1N0b2NrYnl0ZS9HZXR0eSBJbWFnZXNDb3B5IENpdGF0aW9uIE5vdGU6IERlcGVuZGluZyBvbiB3aGljaCB0ZXh0IGVkaXRvciB5b3UncmUgcGFzdGluZyBpbnRvLCB5b3UgbWlnaHQgaGF2ZSB0byBhZGQgdGhlIGl0YWxpY3MgdG8gdGhlIHNpdGUgbmFtZS4KVG8gYmUgZmFpciwgUGF1bCBvbmx5IGhhZCA2IGhpZ2gsIGJ1dCBJdmV5IGNvdWxkIG5vdCBwb3NzaWJseSBrbm93IHRoYXQuIApJdCB3YXMgYSBsYXVnaCBqdXN0IHdhdGNoaW5nIHRoZW0gdHJ5IHRvIGZpZ3VyZSBvdXQgaWYgbXkgZGFkIHdhcyBzdHVwaWQgYmV5b25kIGh1bWFuIGNvbXByZWhlbnNpb24gb3IgaWYgaGUgaGFkIG1hZGUgYSBqb2tlLiAKTmV4dCB0aW1lIHlvdSBoaXQgdXAgUG9rZXIgU3RhcnMgb3Igd2hlcmV2ZXIgaXQgaXMgeW91IHBsYXksIHR1cm4gb2ZmIHRoZSB0ZWxldmlzaW9uIGFuZCBwYXkgY2xvc2UgYXR0ZW50aW9uIHRvIGhvdyBvdGhlcnMgYXJlIHBsYXlpbmcuIAoiSSB0aGluayB3ZSB3ZXJlIHdhdGNoaW5nIFRvcm9udG8gYSBsaXR0bGUgYml0LiAKUG9rZXIgdG91cm5hbWVudHMgYXJlIHZlcnkgbHVjcmF0aXZlLCBidXQgdGhhdCdzIG5vdCB0aGUgb25seSByZWFzb24gd2h5IHJlZ3VsYXIgcGxheWVycyBzaG91bGQgam9pbiB0aGVtLiBEdXJpbmcgcmluZyBnYW1lcywgeW91IGFuZCB5b3VyIHRhYmxlIG1hdGVzIGNhbiBqb2luIGEgdGFibGUgb3IgbGVhdmUgaXQgd2hlbmV2ZXIgeW91IGZlZWwgbGlrZS4gWW91IGRvbid0IGFsd2F5cyBoYXZlIGEgY2hhbmNlIHRvIHJlYWxseSBnZXQgdG8ga25vdyB0aGUgb3RoZXIgcGxheWVycycgc3R5bGUgYW5kIGFwcGx5IHlvdXIgc3RyYXRlZ3kgb24gdGhlbS4gSGVyZSwgeW91IGtub3cgdGhhdCB0aGVzZSBhcmUgZGVkaWNhdGVkIHBsYXllcnMgd2hvIGFyZW4ndCBoZXJlIHRvIGhpdCBhIGZldyBsdWNreSByb3VuZHMgYW5kIHNwbGl0LiBTaXR0aW5nIGRvd24gYW5kIHBsYXlpbmcgZm9yIHNldmVyYWwgaG91cnMgdGlsbCB5b3VyIGNoaXBzIHJ1biBvdXQgcmVxdWlyZXMgZm9jdXMgYW5kIHN0cmF0ZWd5IGlzIGEgbXVzY2xlIHRoYXQgbW9zdCBwbGF5ZXJzIGRvbid0IGZsZXggaW4gcmVndWxhciByaW5nIGdhbWVzLiBUaGUgdmVyeSBleHBlcmllbmNlIGJ1aWxkcyBhIGJldHRlciBwbGF5ZXIuIFRoZSB0b3VybmFtZW50IGNyZWF0ZXMgYW4gaW50ZW5zaXZlIGludGVyYWN0aW9uIHdpdGggdGhlIG90aGVyIHBsYXllcnMsIGFuZCB0YWtlcyB5b3VyIGRlYWxpbmdzIHdpdGggdGhlbSB0byBhIHdob2xlIG5ldyBsZXZlbC4gVGhpcyBlbnZpcm9ubWVudCBjcmVhdGVzIGEgbW9yZSB0aHJpbGxpbmcgYW5kIGludGVyZXN0aW5nIGdhbWUuIFRoaXMgdmVyeSBpbnRlbnNpdHkgaXMgd2hhdCBtYWtlcyB0b3VybmFtZW50cyB0aGUgdWx0aW1hdGUgcG9rZXIgZXhwZXJpZW5jZS4KV2hldGhlciB0aGV5IGFyZSBmb3IgZXhjbHVzaXZlIHVzZSBvciBub3QgaXMgaXJyZWxldmFudC4gCkluIHBva2VyIHRoZSBoaWdoZXN0IGNvbWJpbmF0aW9uIG9mIDUgY2FyZHMgd2lucyB0aGUgcG90LiAKUGxlYXNlIHJldmlldyB0aGUgVGVybXMgb2YgVXNlIGJlZm9yZSB1c2luZyB0aGlzIHNpdGUuIFlvdXIgdXNlIG9mIHRoZSBzaXRlIGluZGljYXRlcyB5b3VyIGFncmVlbWVudCB0byBiZSBib3VuZCBieSB0aGUgVGVybXMgb2YgVXNlLi4gCkZvciBvdGhlcnMgd2hvIGFyZSBtb3JlIGFkdmVudHVyb3VzIG9yIG91dGdvaW5nLCBqb2luaW5nIGEgYm9vayBjbHViLCBhIG1vZGlmaWVkIHlvZ2EgY2xhc3MsIG9yIHNwb3J0cyBjbHViIGNhbiBoZWxwIHByb21vdGUgZmVlbGluZ3Mgb2YgcHVycG9zZSBhbmQgZW5oYW5jZSBxdWFsaXR5IG9mIGxpZmUuIApOZWwgMjAxNyBsYXZvcmEgY29tZSBtYWVzdHJhIG9zcGl0ZSBpbnNpZW1lIGEgR2FldGFubyBEb25hdG9uZSBhbCAiVGFuZ28gT2FzaXMiIGUgYXBwcm9mb2Rpc2NlIGxhIHN1YSBjb25vc2NlbnphIGRlbCBUYW5nbyBhcmdlbnRpbm8gc2VndWVuZG8gaWwgbWFlc3RybyBBZHJpYW5vIE1hdXJpZWxsbyAuLiAKV2hlbiBzaGUgc3RhcnRlZCBhc2tpbmcgYWJvdXQgb3VyIGNhcmVlcnMsIG15IGh1c2JhbmQgbm9wZWQgdXMgb3V0IG9mIHRoZXJlLiAKVGhlIGxhc3QgcGVyc29uIHRvIGFjdCBpcyB0aGUgYmlnIGJsaW5kLiBJZiBubyBvbmUgaGFzIHJhaXNlZCwgdGhlIGRlYWxlciB3aWxsIGFzayBpZiB0aGV5IHdvdWxkIGxpa2UgdGhlIG9wdGlvbi4gCkhlIGZydXN0cmF0aW5nLCBpdCBsaWtlIGRlYWxpbmcgd2l0aCBhIGZ1Y2tpbmcgY2hpbGQuIFRoaXMgaXMgc28gdmlvbGF0aW5nIGFuZCBoZSBkb2VzbiBldmVuIGdldCBpdC4gCkNhbiB0aGV5IGRvIGl0PyBUdW5lIGluIHRvIGZpbmQgb3V0LiBJJ20gbGlrZSB0aGUgbW9zdCBhbm5veWluZyBwZXJzb24hIElmIEkgZGlkbid0IGhhdmUgdGhlIHNob3csIEknZCBoYXZlIG5ldmVyIGtub3duLiAKRGlvZ2VuZXMzNzUgdQpGcmVlemVzIGFjY291bnRzIGluIHJlc3BvbnNlIHRvIHNhaWQgZXZlbnQuIE5vdy4gV2h5IHdvdWxkIHRoZXkgZnJlZXplIGFjY291bnRzIGR1cmluZyBhbiBldmVudCB3aGVyZSB1c2VycyBhcmUgc2ltcGx5IHRyeWluZyB0byB0YWtlIG91dCB0aGUgY3J5cHRvIHRoZSBleGNoYW5nZSBzYXlzIHRoZXkgb3duIGFuZCBoYXZlIGZ1bGwgcmlnaHRzIHRvIHdpdGhkcmF3YWw/IFRoZXJlIHJlYWxseSBvbmx5IG9uZSByZWFzb24gZm9yIGFuIGV4Y2hhbmdlIHRvIGRvIHRoYXQgYW5kIGlmIHlvdSBuZWVkIHRoZSByZWFzb24gdG8gYmUgc3BlbGxlZCBvdXQgdG8geW91LCBoZXJlIGl0IGlzOiBUaGV5IGRvbiBhY3R1YWxseSBoYXZlIHRoZSBjcnlwdG8gdGhleSBzYXkgdGhleSBkby4gCkp1ZGdlIEJvYiBGb3dsZXIgKHllcyB5b3UgcmVhZCB0aGF0IHJpZ2h0KSwgaGFpbHMgZnJvbSB0aGUgTGlzbW9yZSByZWdpb24gYW5kIGpvaW5lZCBhIGNvbnRpbmdlbnQgb2YgZXhwZXJ0cyBmcm9tIGFjcm9zcyB0aGUgTWlkIE5vcnRoIENvYXN0IHRvIGNob29zZSB0aGUgZ3JhbmQgY2hhbXBpb24gYW5kIHJlc2VydmUgY2hhbXBpb24gYmlyZCBvZiB0aGUgc2hvdy4KTmlnZWwncyBmb3JnZSBjb21wbGV4IGFscmVhZHkgZmVhdHVyZXMgYSBzaG93cm9vbSBvZiBoaXMgd2FyZXMsIGZyb20gU3VmZm9sayBsYXRjaGVzIHRvIGEga2luZyBzaXplZCBtZXRhbCBvcm5hbWVudGFsIGNsb3RoZXMgcGVnLCBhbmQgYSBtdXNldW0uIEZvciBGcmFuc2hhbSB3YXMgdGhlIGZvdW5kYXRpb24gb2YgZW50ZXJwcmlzaW5nIHlvdW5nIFZpY3RvcmlhbiBXaWxsaWFtIENyYW5lJ3MgZmFybSBpbXBsZW1lbnQsIHdoZWVsd3JpZ2h0IGFuZCBiZWxsaGFuZ2luZyBidXNpbmVzcyB0aGF0IGdyZXcgbGF0ZXIgaW50byBtaWdodHkgICBhbmQgbm93IGxhbWVudGVkICB0cmFpbGVyIG1ha2VycyBDcmFuZSBGcnVlaGF1ZiBhdCBEZXJlaGFtIGFuZCBOb3J0aCBXYWxzaGFtLgpBbmQgd2UgY2Fubm90IGhhdmUgcmVhbCByZWZvcm0gd2hlbiB3ZSBzaW11bHRhbmVvdXNseSBiZWxpZXZlIHRoYXQgZ3JlZWQgaXMgZ29vZC4KSW4gYSBxdWVzdGlvbiBhbnN3ZXIgc2Vzc2lvbiBhdCBTb3V0aHMgTGVhZ3VlcyBDbHViIHllc3RlcmRheSwgdGhlIGZvcm1lciBydWdieSBsZWFndWUgaW50ZXJuYXRpb25hbCBhbmQgU3RhdGUgb2YgT3JpZ2luIHN0YXIgYWRtaXR0ZWQgaGUgY291bGQgc3BlbmQgYXMgbXVjaCBhcyAkMzAwMCBhIG5pZ2h0IG9uIHBva2VyIG1hY2hpbmVzIGR1cmluZyBhbiBhZGRpY3Rpb24gdGhhdCBiZWdhbiB3aGVuIGhlIG1vdmVkIHRvIFN5ZG5leSB0byBwbGF5IHByb2Zlc3Npb25hbCBydWdieSBsZWFndWUgaW4gMTk5Ny4KT3VyIGRlc2lnbnMgYXJlIGJhc2VkIG9uIFAgb3JpZ2luYWwgaGFuZCBwYWludGVkIGFuZCBoYW5kIGRyYXduIGFydHdvcmsuIApJZiB5b3UgaGFkIHNhaWQgIlRoZSBVUyBpcyBudW1iZXIgMSBmb3IgcXVhbGl0eSBoZWFsdGhjYXJlIGZvciBicmVhc3QgY2FuY2VyIiwgeWVzLCB0aGF0IGxpbmsgd291bGQgcHJvdmUgeW91IHJpZ2h0IGFuZCBhbGwgdGhlIG90aGVyIGxpbmtzIHdvdWxkIGJlIGlycmVsZXZhbnQuIEJ1dCB3ZSBib3RoIGtub3cgdGhhdCB5b3Ugd2VyZSB0YWxraW5nIGFib3V0IHRoZSB3aG9sZSBvZiBoZWFsdGhjYXJlLgpQYXJraW5nIG9uIHNpdGUgaXMgYnkgZ29sZCBjb2luIGRvbmF0aW9uLiAKVGhlIG5ldyBwb2xpY2llcyBhbmQgbGF3cyBiZWluZyBsb2JiaWVkIGFuZCBwYXNzZWQgdG8gcHJvbW90ZSBwb3QgYXJlLCB0byBtZSwgZXF1YWwgdG8gdGhlIGJpZyBidXNpbmVzcyBvZiBjaWdhcmV0dGVzLgpIZSBnYXZlIG1lIHNvbWUgZ29vZCBpbnNpZ2h0LiBIZSBzYXlzIHRoYXQgaXQgcmVhbGx5IGRvZXNuIG1hdHRlciB3aGljaCBmb3JtYXQgb2YgcG9rZXIgeW91IGRlY2lkZSB0byBwbGF5LCBidXQgeW91ciBzdWNjZXNzIHByaW1hcmlseSBkZXBlbmRzIG9uIHlvdXIgZGVkaWNhdGlvbiB0byB0aGUgZ2FtZSBhbmQgc2VsZiBkaXNjaXBsaW5lLiAKSXQgYWN0dWFsbHksIGVmZmVjdGl2ZWx5LCAxJSBmb3IgZWFjaCBzdWl0ZWQgaGFuZC4gU28gb2RkcyB3b3VsZCBiZSAwIHRvIDUlIGRlcGVuZGluZyBvbiBob3cgbWFueSBvZiB0aGUgZml2ZSBwbGF5ZXJzIGhvbGQgc3VpdGVkIGhhbmRzIG9yIG5vdC4gSSBzYXkgdGhlcmUgYXJlIGEgZGVmaW5pdGVseSBhYm91dCAyIDMgb2YgdGhlbSBob2xkaW5nIHN1aXRlZCBoYW5kcyBvbiBhbiBhdmVyYWdlIGluIHRoaXMgc3BvdCBzbyByZWFsIHdvcmxkIGNoYW5jZSBpcyBwcm9iYWJseSAyIDMlLgpUaGUgc2Vjb25kIHJvdW5kIGFuZCB0aGlyZCByb3VuZCBmb2xsb3dlZCB0aGUgc2FtZSBwcm9jZXNzLi4gCkkgc3BlbnQgbW9yZSB0aW1lIG9uIHZlcmJhbCBhbmQgcHN5Y2ggYmVjYXVzZSB0aG9zZSB3ZXJlIHRoZSB0d28gc2VjdGlvbnMgSSB0aG91Z2h0IEkgY291bGQgaW1wcm92ZSBtb3N0IGluIG92ZXIgbXkgMyBtb250aCBzdHVkeSBwZXJpb2QgICBJIHN0aWxsIHdlbnQgb3ZlciBldmVyeXRoaW5nIGluIHRoZSBBQU1DIG91dGxpbmUuIEkgd2FzIHNjb3JpbmcgNTAzIDUwNyBvbiBteSBwcmFjdGljZSB0ZXN0IHNvIGRlZmluaXRlbHkgd2FzIGJ1bW1lZCB0byBzZWUgdGhlIDUwMyBmcm9tIGFjdHVhbCB0ZXN0IGRheS4uIApJIG5vdCBjcml0aWNpemluZyBoaXMgYWNjZW50LiBUaGF0IE1ZIHBvaW50LiBZb3Ugc2hvdWxkbiBjcml0aWNpemUgYW55b25lIGFjY2VudCBiZWNhdXNlIGl0IGEgc2NpIGZpIHNob3cgc2V0IGluIHRoZSBmdXR1cmUuIFRoZXJlIGNvdWxkIGhhdmUgYmVlbiBhbiBpbmZsdXggb2YgSXJhbmlhbnMgaW50byBJbmRpYSwgZm9yIGFsbCB5b3Uga25vdy4gVGhlIEJlbHRlcnMgYWxsIHNwZWFrIENyZW9sZSwgd2hpY2ggYXMgc29tZW9uZSB3aG8gaGFzIENyZW9sZSBmYW1pbHksIG1ha2VzIG5vIHNlbnNlIGJlY2F1c2UgdGhlcmUgYXJlbiBhIGxvdCBvZiBDcmVvbGUgcGVvcGxlIG91dCB0aGVyZSBpbiB0aGUgZmlyc3QgcGxhY2UuCllvdSBuZWVkIHRvIHNldCB1cCBhbGwgdHJhdmVsIHBsYW5zIGJlaW5nIGEgVmlldG5hbSBWZXRlcmFuLCBzaG91bGQga25vdyBiZXR0ZXIgdGhhbiB0byBkZXNpcmUgYSAiY29tbXVuaXN0aWMgaGVhbHRoIGNhcmUgcGxhbiIuIApNYXliZSBpdCB2YXJpZXMgYnkgY2x1Yj8gRHVubm8uIApUaGF0IHRoZXkgZGVjaWRlZCB0byBsZXQgaGltIHNpZ24gdGhpcyBpcyBtb3JlIHRoYW4gZGlzcXVhbGlmeWluZy5JIGNvbXBsZXRlbHkgYWdyZWUgd2l0aCB1L1NsYWFuIG9uIHRoaXMuRmluZ2VyaHV0bWFjaGVyICAwIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvcmVkbmFtZTMyNSAgMjAgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ29ObyB5b3Ugc3R1cGlkIGZ1Y2sgSSB0aGluayBhIGZ1Y2tpbmcgV2FzdGVmdWwgYW5kIG5vbnNlbnNpY2FsIHdhbGwgaXMgcmFjaXN0LCB3aGlsZSBib3JkZXIgc2VjdXJpdHkgaXMgZXNzZW50aWFsLiAKRm9yIHRoZSB0aW1lIGJlaW5nLCBob3dldmVyLCBXYXJuZSdzIGZvY3VzIHdpbGwgYmUgb24gYW4gZW50aXJlbHkgZGlmZmVyZW50IGZpZWxkIG9mIHBsYXkuIApXaW5uaW5nIHBsYXllcnMgYWx3YXlzIGFkdmlzZSBidXlpbmcgaW4gZm9yIHRoZSBNYXguIE5vciBoYXZlIEkgaGVhcmQgdGhpbmdzIGxpa2UgSSdtIHRyeWluZyB0byBkb3VibGUgbXkgc3RhY2sgYW5kIGxlYXZlIDUgbWludXRlcyBhZnRlci4gClRoZXkgc2VwYXJhdGVkIHNvbWV0aW1lIGluIHRoZSBmYWxsIG9mIDIwMTcsIGJ1dCBzaGUgd291bGQgc3RpbGwgY29tZSBhcm91bmQgc29tZXRpbWVzIHNvIEkgbm90IHBvc2l0aXZlIHdoZW4gaXQgd2FzIG9mZmljaWFsLkhlIHN0YXllZCBzaW5nbGUgZm9yIGFib3V0IDQgNSBtb250aHMuIApUaGVuIGNhbWUgTGFycnkgU3VtbWVycyBhbmQgdGhlIFRBUlAgYmFpbG91dHMgYW5kIHRoZSBpbmNyZWFzZSBvZiB0cm9vcHMgaW4gYm90aCBJcmFxIGFuZCBBZmdoYW5pc3RhbiBhbmQgc28gbWFueSBiZXRyYXlhbHMgdGhhdCBieSBub3csIG15IGhlYXJ0IGlzIGxpa2Ugc3RvbmUgYW5kIHRoZXJlIGlzIG5vdGhpbmcgbGVmdCBmb3IgdGhlIE9iYW1hIGl0ZXMgdG8gZG8gdGhhdCB3aWxsIGh1cnQgbWVPciBzbyBJIHNheS4gYW55IGJyb2tlbiBoZWFydGVkIGxvdmVyLCBjb250aW51b3VzbHkgcmVqZWN0ZWQgYW5kIHRoZW4gY291cnRlZCBhbmQgdGhlbiByZWplY3RlZCBhZ2FpbiwgSSBoYXJib3IgYSBzbWFsbCBwaWVjZSBvZiBob3BlLiAKVGhlIGZvdXIgb2YgYSBraW5kIG11c3Qgb25seSBiZSBiZWF0ZW4gYnkgYW5vdGhlciBmb3VyIG9mIGEga2luZC4gCkdvdmVybm9ycyB0b29rIHRoZW0gaG9tZSBpbiBDb2xvcmFkbywgV2VzdCBWaXJnaW5pYSBhbmQgTWlzc291cmksIGhlIHNhaWQuIEEgZGlzcGxheSBnaXZlbiB0byB0aGVuIEFya2Fuc2FzIEdvdi4gQmlsbCBDbGludG9uIHR1cm5lZCB1cCBpbiBhcmNoaXZlZCBtYXRlcmlhbHMgYWZ0ZXIgQ2xpbnRvbiBiZWNhbWUgcHJlc2lkZW50LgpIYXZpbmcgZW1wbG95ZWVzIGdpdmUgb2ZmIHRoZSBhdHRpdHVkZSB0aGF0IHRoZXkgZG9uJ3Qgd2FudCB0byBiZSB0aGVyZSBvciB0aGF0IHRoZSBjdXN0b21lciBpcyBhbiBpbmNvbnZlbmllbmNlIGlzIG15IG51bWJlciBvbmUgZGVhbCBicmVha2VyLiAKV2hhdCBJIHNheWluZyBpcyB0aGF0IHRoZXJlIGlzIGEgcGVybmljaW91cyByYWNpc20gY29taW5nIHRoZSBvdGhlciB3YXkgdGhhdCBoYXMgZWZmZWN0cyB0by4gCk9uY2UgcmVtb3ZlZCB0aGUgYnJpZGdlcywgd2hpY2ggd2VyZSBidWlsdCBpbiAxOTYxLCB3aWxsIGJlIHJlcGxhY2VkIGJ5IGFuIGF0IGdyYWRlIGludGVyc2VjdGlvbiB3aGVyZSBEdW5kYXMgU3RyZWV0LCBCbG9vciBTdHJlZXQgYW5kIEtpcGxpbmcgQXZlbnVlIG1lZXQuClRoZSBwZW9wbGUgb2YgRGV0cm9pdCBzdXBwb3J0ZWQsIGJhY2tlZCwgYW5kIHZvdGVkIHRoYXQgY29ycnVwdGlvbiBpbnRvIHBvd2VyIGZvciA0MCB5ZWFycy4gVGhlcmUgd2FzIG5vIG15c3RlcnkgcmVnYXJkaW5nIHRoZSBjb3JydXB0aW9uIGFuZCBzY2FuZGFsIG9jY3VycmluZyBhcyBpdCB3YXMgYWxsIG92ZXIgdGhlIG5ld3MuIAoiRWR1Y2F0ZWQgd29tYW4iIGhhZCBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IGNvbm5vdGF0aW9uLCBhcHBhcmVudGx5LCBpbiBKYXBhbmVzZS5JIGV4cGVjdGVkIGhlciB0byBiZSBzaG9ja2VkIGJ1dCwgaW5zdGVhZCwgaGVyIGV5ZXMgbGl0IHVwLiAKT24gdGhlIG5pZ2h0IG9mIHRoZSBtdXJkZXJzOyBpdCBsZWF2ZXMgYWxtb3N0IGZvdXIgaG91cnMgbGF0ZXIuIFdoaWxlIHRoZSBjYXIgb24gdGFwZSBsb29rZWQgbGlrZSBFcm5pZSBTY2hlcmVyJ3MgcmVkIENhbWFybywgdGhlIHZpZGVvIHdhcyBncmFpbnkgYW5kIHBvbGljZSBjb3VsZG4ndCBpZGVudGlmeSB0aGUgZHJpdmVyIG9yIGxpY2Vuc2UgcGxhdGUgbnVtYmVyLiAKSSB3b3VsZCBmZWVsIGxlc3MgYmFkIGFib3V0IE9tYXIncyBzdGF0ZW1lbnQgaWYgc2hlIGRpZG4ndCByZWZlciBzcGVjaWZpY2FsbHkgdG8gYSBzaW5nbGUgcHJpbWFyaWx5IEpld2lzaCBsb2JieWluZyBncm91cCBpbiBzdGVyZW90eXBpY2FsbHkgYW50aSBKZXdpc2ggbGFuZ3VhZ2UuIApJbiBmYWN0LCB0aGV5IG9mdGVuIGZlbHQgY29tcGVsbGVkIHRvIGFzayB3aGVyZSBJIGdvdCBteSBtb25leSBmcm9tLCBhbmQgSSB3b3VsZCB0cnkgdG8gbWFrZSB0aGVtIGZlZWwgdW5jb21mb3J0YWJsZSBieSBzYXlpbmcsICJXZWxsLCBhIHRydXN0IGZ1bmQgICBkb2Vzbid0IGV2ZXJ5Ym9keSBoYXZlIGEgdHJ1c3QgZnVuZD8iLiAKT24gdGhhdCBub3RlLCB0aGVyZSBhbiBpbnRlcmVzdGluZyBoeXBvdGhlc2lzIGNhbGxlZCB0aGUgT2xkIEZyaWVuZHMgaHlwb3RoZXNpcyB3aGljaCBzdGF0ZXMgdGhhdCBleHBvc3VyZSBhbmQgY3VsdGl2YXRpb24gaWYgbWljcm9iZXMgYW5kIG90aGVyIHBhcmFzaXRpYyBvcmdhbmlzbXMgKHRoaW5rOiBob29rd29ybXMpIGFyZSBhIG5lY2Vzc2FyeSBwYXJ0IG9mIGEgZnVuY3Rpb25pbmcgaW1tdW5lIHN5c3RlbS4gVGhlIGlkZWEgaXMgdGhhdCB0aGVzZSBzZWNyZXQgaW1tdW5lIHN1cHByZXNzaW5nIGNoZW1pY2FscyBzbyB0aGV5IGNhbiBtb3JlIGVhc2lseSBsaXZlIGluc2lkZSBvZiB1cy4gCkhlbnJ5IEwuIApUaGUgcmF0ZSBvZiByaXNlIGhhcyBub3QgYWNjZWxlcmF0ZWQuIFdoYXQgaGFzIGhhcHBlbmVkIGlzIHRoYXQgc2F0ZWxsaXRlIG1lYXN1cmVtZW50cyBpbmNvcnBvcmF0ZWQgYWRqdXN0bWVudHMgZm9yIHRoaW5ncyBzdWNoIGFzIGlzb3N0YXRpYyByZWJvdW5kIGV0Yy4gCkluIHBva2VyIHlvdSBsZWFybiB2ZXJ5IHF1aWNrbHksIGlmIHlvdSBwbGF5IGxpa2UgZXZlcnlvbmUgZWxzZSwgeW91J2xsIGJlIGZpbmUsIGJ1dCB5b3UnbGwgbmV2ZXIgYmUgZ3JlYXQuIApUaGVyZSBubyB3YXkgaW4gaGVsbCBJIHB1dHRpbmcgeW91IG9uIHN1Y2ggYSBzdHJvbmcgaGFuZCBieSB0aGUgdHVybi4gTWVhbmluZyBoZSBjYW4gYmUgYmV0dGluZyBoZXJlIHdpdGggYSBtb3JlIHdpZGUgcmFuZ2Ugb2YgbWFkZSBoYW5kcyBhbmQgbWFueSBtb3JlIGJsdWZmcy4uIApPbmNlIHlvdSBoYXZlIHRoYXQsIHRha2UgYSB3aXJlIGJydXNoIHRvIGFueSBsb29zZSBwYWludCwgc2FuZCBkb3duIHRoZSBydXN0IHNwb3QgcmVhbGx5IGdvb2Qgd2l0aCBzb21lIDgwIGdyaXQsIHRoZW4gMTAwIDEyMCBncml0LCBwcmltZSB0aG9zZSBzcG90cyBmaXJzdCwgeW91IGNvdWxkIGVpdGhlciBzcHJheSB0aGVtIHRoZW0gdGhlIHdob2xlIHRoaW5nIGFuZCBwYXNzaW5nIG92ZXIgdGhlbSBhZ2FpbiBpbiB0aGUgcHJvY2Vzcywgb3IgaGl0IHRoZW0gd2l0aCBhIHBhaW50IGJydXNoLi4gCjE4KSBNYXJ5IEouIEJsaWdlCkJ1dCB3ZSBuZXZlciBzcG9rZS4uIApJbmNpZGVudGFsbHksIGFsbCB0aGUgY2xhaW1zIHlvdSBtYWtpbmcgcmVsYXRlIHRvIGEgZ2VuZXJpYyBkZWl0eS4gSG93IGRpZCB5b3UgZ2V0IGZyb20gdGhlcmUgdG8gYSBzcGVjaWZpYyBkZWl0eT8KRGEgTXlvbWUgd2llIGF1Y2ggQnJ1c3QgIHVuZCBFaWVyc3RvY2t6eXN0ZW4gR2ViaWxkZSBzaW5kLCBpbiBkaWUgU2NobGFja2VuIHVuZCBHaWZ0ZSBlaW5nZWxhZ2VydCB3ZXJkZW4uIApMaWZlIHdpbGwgYWJzb2x1dGVseSBpbXByb3ZlLiAKSSBuZWFyIHRoZSBlbmQgYW5kIGl0IGhhcyB0YWtlbiBtZSBhYm91dCBhIHllYXIgYnV0IEkgYSBzbG93IHdhdGNoZXIsIEkgZmFsbCBhc2xlZXAgZHVyaW5nIHZpcnR1YWxseSBhbnkgc2hvdyBpZiBJIHRyeSB0byB3YXRjaCBpdCBhZnRlciB3b3JrLCBhbmQgSSB0b29rIGxpa2UgYSA0IG1vbnRoIGJyZWFrLiBJdCBpcyB2ZXJ5IGJpbmdlIGFibGUuIDkgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnby4gCk9uZSB3aW50ZXIgdGhpcyBsYWR5IGhhZCBhIGRlYWQgYmF0dGVyeSBpbiB0aGUgZ3JvY2VyeSBzdG9yZSBwYXJraW5nIGxvdCBhbmQgaGUgcHV0IG1lIGFuZCBteSBicm90aGVyIGluIHRoZSB0cnVjayAodGhpcyBwaWVjZSBvZiBzaGl0IGJyb3duIDgwIENoZXZ5IHdpdGggYWZ0ZXJidXJuZXIgbGV2ZWwgaGVhdCkgYW5kIHByb2NlZWRlZCB0byBoZWxwIGZpeCBoZXIgY2FyLiBIZSB0b2xkIGhlciB0byBwdXQgaGVyIHR3byBraWRzIGluIGhpcyB0cnVjayB0b28gdG8ga2VlcCB0aGVtIHdhcm0uIEkgZmVsdCBhd2Z1bCBiZWNhdXNlIEkgd2FzIHNpY2sgYW5kIGp1c3Qgd2FudGVkIHRvIGdvIGhvbWUgYW5kIGdvIHRvIGJlZC4gCkJlZm9yZSBmYWxsaW5nIHByZWduYW50IEkgYWxzbyB3YXMgZGlhZ25vc2VkIGFzIGJpcG9sYXIuIEkgd29ya2VkIGhhcmQgdG8gYmUgYWJsZSB0byBtYW5hZ2UgaXQgYW5kIGZpbmFsbHkgYWZ0ZXIgeWVhcnMgb2YgbWVkaWNhdGlvbiBhbmQgdGhlcmFweSBnb3QgdG8gYSBnb29kIHBsYWNlLiBEdXJpbmcgbXkgcHJlZ25hbmN5IHdlIGRpc2N1c3NlZCB0aGUgaGlnaCBwb3NzaWJpbGl0eSBvZiBwcGQuIApTaGVsU2lsdmVyc3RhaW4gdQpUaGlzIHdheSwgeW91IGNhbiBlYXNpbHkgY3JlYXRlIGEgc2V0IG9mIGdvYWxzLCBkaWZmZXJlbnQgdGhpbmdzIHRvIHByb2dyZXNzIHRvLiBBbmQgaXQgYWJvdXQgZnVuY3Rpb25hbGl0eSwgZmxleGliaWxpdHkgYW5kIGJhbGFuY2UsIGFsbCB0aGluZ3MgdGhhdCBoZWxwIG9mZiB0aGUgcm9jayBhcyB3ZWxsLgpNb3N0IHBlb3BsZSBoYXZlIGhpZ2ggcmVnYXJkcyBvbiBwbGF5ZXJzIHdobyBwbGF5IGluIGEgbGl2ZSBwb2tlciByb29tIHRoYW4gdGhvc2Ugd2hvIHBsYXkgb25saW5lLiBTb21lIGNvbnRlbmQgdGhhdCBtb3N0IG9ubGluZSBwbGF5ZXJzIHVzZSBib29rcyBhbmQgb3RoZXIgaW5mb3JtYXRpb24gc28gYXMgdG8gZW5oYW5jZSB0aGVpciBnYW1lLiBXaGlsZSBpbiBsaXZlIHBva2VyIHJvb21zLCBwbGF5ZXJzIGdldCB0byBzaG93IHRoZWlyIHNraWxscyBieSBwbGF5aW5nIHRoZSBnYW1lIGZhY2UgdG8gZmFjZSB3aXRoIG90aGVyIHBsYXllcnMsIG5vIGJvb2tzIGFuZCBubyBleHRyYXMuClllcywgdGhleSBkby4gWW91IGNhbiBzZWUgdGhlIHJlc3VsdGluZyBhZHZlcnRpc2VtZW50cyBpbiB0aGUgc2lkZWJhciwgYW5kIGFzIHNwb25zb3JlZCBwb3N0cy4gCkkgYmVnIHRvIGRpZmZlci4gVGhlIEFNQSBoYXMgYWNjb21wbGlzaGVkIGEgbG90IG9mIGdvb2QsIGJ1dCBpdCBhbHNvIGEgY2FydGVsIHRoYXQgaGFzIGRvbmUgaHVnZSBkYW1hZ2UgdG8gdGhlIGhlYWx0aGNhcmUgc3lzdGVtLgpNaWNoYWVsIEphY2tzb24gRElEIGRvIHdyb25nLiBIZSBodW5nIG91dCB3aXRoIGJveXMgd2F5IHRvbyBtdWNoIGFuZCBzbGVwdCB3aXRoIHRoZW0uIApJIHdhbGtlZCBvdXRzaWRlIGFuZCB0aGUgcGFyZW50cyBhc2tlZCBoaW0gdG8gdGhhbmsgbWUgYW5kIEkgc2FpZCBub3QgdG8gd29ycnkgSSdtIGhhcHB5IGhlIGdldHMgdG8gZW5qb3kgdGhlbSEgVGhlbiBoZSBoaWdoIGZpdmVkIG1lIC4gCkRhcmsgSG9yc2UgZG9lcyBhIG5pY2UgY29ja3RhaWwuIE5vdCBjaGVhcCwgYnV0IGEgZ29vZCBwbGFjZSB0byBzdGFydCB0aGUgbmlnaHQuIEZvciBmb29kLCBPbGUgVGFwYXMgaGFzIGEgZ3JlYXQgYnV6eiAgIHlvdSBuZWVkIHRvIGJvb2sgdGhvdWdoLiBJZiB5b3Ugd2FudGluZyBhIGJ1cmdlciBhbmQgY2hpcHMgYXQgdGhlIGVuZCBvZiBhIG5pZ2h0IHRoZW4gU2Nod2FydHogQnJvcyBpcyB0b3AgdGllciBzdHVmZi4KQWxzbywgaXQgaXMgd2lkZWx5IHJlZ2FyZGVkIHRoYXQgQmV0VmljdG9yIGhhcyB0aGUgbG93ZXN0IHByb2ZpdCBtYXJnaW4gb24gZm9vdGJhbGwsIGFuZCB0aGUgZmluZXN0IGxvbmcgdGVybSBvZGRzIGZvciBFdXJvcGVhbiBmb290YmFsbC5Ib3JzZSBSYWNpbmdCZXRWaWN0b3Igb2ZmZXJzIGl0cyBjdXN0b21lcnMgZ3JlYXQgaG9yc2UgcmFjaW5nIG1hcmtldHMgZnJvbSBVSyBhbmQgVVMsIHdoaWxlIHRoZWlyIGhvcnNlIHJhY2luZyBiZXR0aW5nIHNlcnZpY2UgaXMgcGFydGljdWxhcmx5IHN0cm9uZy4gCldoaWxlIHdhdGNoaW5nIHRlbGV2aXNpb24geW91IG11c3QgaGF2ZSBiZWVuIG9ic2VydmluZyB0aGUgdGVjaG5pcXVlcywgdGhlIGJldHRpbmcgaWRlYXMgYW5kIHRoZSBjYWxscyBmcm9tIHRoZSBleHBlcnRzLiBUaGV5IGhhdmUgYmVlbiBmYXNjaW5hdGluZyB5b3Ugd2l0aCB0aGVpciBpZGVhcyBhbmQgdGhvdWdodHMuIElmIHlvdSBoYXZlIHRoZSBzYW1lIGV4cGVyaWVuY2UsIHlvdSBzaG91bGQgYnV5IHRoZSBGaW5hbCBQb2tlciBUYWJsZSBEVkQgYnkgUGhpbCBHb3Jkb24gbm93LiBUaGUgRFZEIGlzIHByb2R1Y2VkIGFuZCBwcmVzZW50ZWQgYnkgQ2FzaW5vIFN1cHBsaWVzLiBUaGlzIERWRCBhbGxvd3MgeW91IHRvIGxlYXJuIGFib3V0IHRoZSB0aG91Z2h0cyBvZiBQaGlsIEdvcmRvbiB3aGlsZSBwbGF5aW5nIGFnYWluc3QgQ2hyaXMgRmVyZ3Vzb24gYW5kIG90aGVyIHdvcmxkIGNsYXNzIHBsYXllcnMuIEluIHRoaXMgRFZELCB0aGUgc2VjcmV0ZXMgb2YgVGV4YXMgSG9sZCdlbSBwb2tlciBpcyBhbHNvIGluY2x1ZGVkLiBZb3Ugd2lsbCBhbHNvIGJlIGFibGUgdG8gbGVhcm4gYWJvdXQgdGhlIHRlY2huaXF1ZXMgdXNlZCBieSB0aGUgZXhwZXJ0IHBsYXllcnMgZHVyaW5nIHRoZSBtYWpvciB0b3VybmFtZW50cyBpbiBVU0EuClRvbGQgbWUgYSBzdG9yeSBvZiBhIHdvbWFuIHdobyBjYW1lIGluIGFuZCB0b2xkIGhlciBzaGUgIlRoaW5rcyBzaGUncyBnb3QgYSByYXQgaW4gaGVyIHB1c3N5ISIgRXhjdXNlIG1lIG1hJ2FtIHdoYXQ/ISBXZWxsIGFwcGFyZW50bHkgd2hlbmV2ZXIgc2hlIGFuZCBoZXIgbWFuIHN0YXJ0IGdvaW5nIGF0IGl0IGhlIGZlZWxzIGEgc2hhcnAgc3Rpbmcgb24gaGlzIHBlbmlzIHNvIGxvZ2ljIGNvbmNsdWRlcyB0aGF0IGEgcmF0IGlzIGxpdmluZyBpbnNpZGUgaGVyIHZhZ2luYSBhbmQgYml0aW5nIGhlciBtYW5zIHBlbmlzIHdoZW5ldmVyIHRoZXkgaGF2ZSBzZXguIAoyLiBBcmUgeW91IGRyaXZpbmcgdGhlc2UgY2FycyBhcm91bmQgbW9yZSB0aGFuIDMgbWlsZXMgcGVyIGRheT8KSW4gU2VvdWwgc3RheSBpbiBJdGFld29uLiBJdCBjbG9zZSB0byB0aGUgZXhwcmVzcyBidXMgdGVybWluYWwgaW4gR2FuZ25hbSAoYWJvdXQgMTBtIGF3YXkgYnkgdGF4aSkgYXMgd2VsbCBhcyB0aGUgdHJhaW4gc3RhdGlvbiwgZGVwZW5kaW5nIG9uIGhvdyB5b3UgcGxhbiBvbiB0cmF2ZWxsaW5nLiBJdGFld29uIHVzZWQgdG8gYmUgdGhlICJmb3JlaWduZXIiIHBsYWNlLCBidXQgbm93IGl0IGlzIHRoZSBwbGFjZSB0byBiZSBmb3IgaGlwIEtvcmVhbnMuIFlvdSBzZWUgbW9yZSBmb3JlaWduZXJzIGluIEhvbmdkYWUgdGhhbiBJdGFld29uLiBZb3UgY2FuIGFsd2F5cyB0YWtlIGEgcXVpY2sgdGF4aSB0byBIb25nZGFlIGF0IG5pZ2h0LiBIb25nZGFlIGlzIGZhciBmcm9tIHRoZSBTZW91bCBidXMgdGVybWluYWwgICBsaWtlIDMwIDUwIG1pbnMuCkJ1dCB0aGlzIGdhbWJpdCB3YXMgZmFyIG1vcmUgcmF0aW9uYWwgdGhhbiBtb3N0IGNvbW1lbnRhdG9ycyByZWFsaXNlZC4gCjYuIEEgZGVhbGVyIGJ1dHRvbiByZXByZXNlbnRzIHdobyB0aGUgZGVhbGVyIGlzLCBpdCByb3RhdGVzIGNsb2Nrd2lzZSBhZnRlciBlYWNoIGhhbmQgaXMgY29tcGxldGUuIEEgc21hbGwgYmxpbmQgaXMgdGhlIHBsYXllciB0byB0aGUgbGVmdCBvZiB0aGUgZGVhbGVyIGFuZCB0aGUgYmlnIGJsaW5kIGlzIHRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIHNtYWxsIGJsaW5kLiAKSXRzIHN0aWxsIGJldHRlciB0aGFuIG5vdGhpbmcgd2hlbiBhbmFseXppbmcgaGFuZHMgYW5kIHVzdWFsbHkgZm9sZGluZyBhIGJpdCBtb3JlIGdldHMgeW91IGNsb3NlIGVub3VnaC4uIApPdmVyIDMwLDAwMCB0ZXN0aW1vbmlhbHMgZnJvbSByZWFsIGZhbWlsaWVzIHByb3ZpZGUgaW5zaWdodCBpbnRvIHdoYXQgeW91IGNhbiBleHBlY3QgZnJvbSBlYWNoIGRvdWxhLiAKSSd2ZSBoYWQgaGltIGV4YW1pbmVkIGJ5IHR3byBkaWZmZXJlbnQgdmV0cyAzIHNlcGFyYXRlIHRpbWVzLiBIZSBoYXMgaGFkIGJsb29kIHRlc3RzIHRha2VuIHRvIGRldGVybWluZSBpZiB0aGVyZSBhcmUgYW55IG11c2NsZSBwcm9ibGVtcyBhbmQgaGUgd2FzIGFsc28gRE5BIHRlc3RlZCBmb3IgUFNTTS4gQWxsIGNhbWUgYmFjayBuZWdhdGl2ZS4uIApQZXJzb25hbGx5LCBJIGFtIGhpZ2hseSBza2VwdGljYWwgb2YgYW55IGNsYWltcyB0byBhICJjdXJlIGZvciBjYW5jZXIsIiBjb25zaWRlcmluZyBob3cgZWFjaCBjYW5jZXIgaXMgZGlmZmVyZW50IGZyb20gdGhlIHJlc3QuCkZvciB0aGUgc2xhc2hlcywgMiB2cyAzIHNlZW1zIHRvIGJlIGJhc2VkIG9uIHdoZXRoZXIgeW91IGluc2lkZSB0aGUgcmFuZ2Ugb2YgdGhlIGJhY2sgYW5kIGZvcnRoIHNsYXNoZXM7IGlmIHlvdSBvdXRzaWRlLCBpdCBjYW5jZWxzIHRoZSAzIHNsYXNoIHNlcXVlbmNlIGVhcmx5LiAKTWFraW5nIGFtbWVuZHMgbWVhbnMgdHVybmluZyBoaW1zZWxmIGluLiAKSSBUaGUgYWJhbmRvbmVkIHRvd25zIHdlcmUgZXJzaWRlLiAKUmVmbGV4b2xvZ3kgaXMgYSBwcmFjdGljZSB0aGF0IGZvY3VzZXMgb24gdGhlIGJlbGllZiB0aGF0IHNwZWNpZmljIHBvaW50cyBvbiB5b3VyIGZlZXQgY29ycmVzcG9uZCB3aXRoIG90aGVyIHBhcnRzIG9mIHlvdXIgYm9keS4gCldoZXRoZXIgeW91IGp1c3Qgd2FudCB0byBlbmpveSB3aGF0IHlvdSBkbywgbWF5YmUgYmUgYSBob3N0IGZvciBhIHBva2VyIHBhcnR5LCBvciBldmVuIGdldCBhd2F5IGZyb20gZXZlcnlkYXkgbGlmZSB0aGUgb3B0aW9uIGlzIHRoZXJlLiAKVGhleSBhcmUgNmNtIHRvIDdjbSAoMi41aW4gdG8gMi42MjVpbikgd2lkZTIgYW5kIHdlaWdoIGJldHdlZW4gNTdnIHRvIDU4ZyAoMm96IHRvIDIuMDYyNW96KS4gVGhlIG91dHdhcmQgYXBwZWFyYW5jZSBpcyBtb3N0IGNvbW1vbmx5IGEgZmx1b3Jlc2NlbnQgeWVsbG93IHdpdGggYSB3YXZ5IHJ1YmJlciBzdHJpcCBjaXJjbGluZyBpdC4uIApKdXN0IHRvIGJlIGNsZWFyLCBiZWNhdXNlIHRoaXMgaXMgYSB0b3BpYyBJIGNvdWxkIHN0YW5kIHRvIGhhdmUgYSBiZXR0ZXIgZ3Jhc3Agb2YsIHRoZSByZWFzb24gV2FsbWFydCBjYW4gdXNlIHBvaW50IG9mIHNhbGUgZGF0YSBpbiB0aGUgc2FtZSB3YXkgaXMgdGhhdCB0aGV5IGRvbiBoYXZlIGFjY2VzcyB0bywgc2F5LCBDb3N0Y28gcHJhY3RpY2VzIG9uIHRoZSBzYW1lIGxldmVsLCBiZWNhdXNlIHRoZXkgZG9uIHRoZW1zZWx2ZXMgc2VsbCBDb3N0Y28gZ29vZHMgZm9yIHRoZW07IHRob3NlIHR3byBzdXBlcm1hcmtldHMgYXJlIGRpcmVjdGx5IGNvbXBldGluZyBzYWxlIHBvaW50cywgbm90IGEgaHViIGZvciBtdWx0aXBsZSBzZWxsZXJzIG9uZSB0aWVyIGFib3ZlIHRvIGNvbmdyZWdhdGUuIFdhbG1hcnQgYW5kIENvc3RjbykuLiAKUmlnaHQgbm93LCBtZSBhbmQgeW91LiAKVG91dCBhIGNvbW1lbmMgcGFyIHVuIHBldGl0IGZsYWNvbiBkJ3BpY2VzLiAKU2FtIHNsaWQgaGlzIENpZWwgaW50byBoaXMgZHJpdmV3YXkgYW5kIGhpdCB0aGUgYnV0dG9uIHRvIG9wZW4gaGlzIGdhcmFnZS4gVGhlIGNhciBzbG93bHkgbW92ZWQgaW50byB0aGUgZ2FyYWdlLiBTYW0gaGl0IHRoZSBidXR0b24gb25jZSBtb3JlIGFuZCB0aGUgZG9vciBjbG9zZWQgYmVoaW5kIGhpbS4gU2FtIGdvdCBvdXQgb2YgaGlzIGNhciBhbmQgZ3JhYmJlZCBoaXMgbmV3IGF3YXJkLiBIZSBzbWlsZWQgYXQgaXQgb25jZSBtb3JlIGFzIGhlIHdhbGtlZCB1cCB0byB0aGUgZG9vciBhbmQgb3BlbmVkIGl0LiBUaGUgZ2FyYWdlIGRvb3IgZG9lc24gaGF2ZSBhIGxvY2sgb24gaXQgc28gaXQgaXMgZWFzeSB0byBvcGVuIGZyb20gdGhlIGdhcmFnZS4gSXQgbGVhZHMgaW50byB0aGUgbW9zdCBlbGVnYW50IGtpdGNoZW4gb25lIGhhcyBldmVyIHNlZW4uIFN0YWlubGVzcyBzdGVlbCBhcHBsaWFuY2VzIHdpdGggYSBibGFjayAob3IgY2hhcmNvYWwgZ3JheSBhcyBzb21lIGNhbGwgaXQpIGZsb29yLCBhbmQgdGhlIHdhbGxzIGFyZSB0aGUgcGVyZmVjdCBzaGFkZSBvZiByZWQgd2l0aCB3aGl0ZSB0cmltLgpXaGV0aGVyIGl0IGlzIFBhbGUgQ29tbXVuaW9uLCBEYW1uYXRpb24gb3IgU3RpbGwgTGlmZSwgdGhleSBoYXZlIHVzdWFsbHkgaGFkIGF0IGxlYXN0IGEgZmV3IG1vbWVudHMgdG8gZW5kdWNlIGdvb3NlYnVtcHMgb3IgZXZlbiB0ZWFycyBvbiBvY2NhaXNpb24uIEkgdGhpbmsgSSBmZWVsIHNvbWV0aGluZyBkcmliYmxpbmcgZG93biBteSBsZWcuIElzIHRoYXQgYmxvb2Q/IElzIHRoYXQgZnJvbSBtZT8gT24gdGhlc2Ugd2hpdGUgaG90ZWwgc2hlZXRzPyBhbSBtb3JlIHVuY29tZm9ydGFibGUgYXQgdGhpcyB5ZWFyIHNlcnZpY2UuIApTdG91dCBhcnJpdmVzIGF0IFdoYXJ0b24gdG8gZmluZCBoaW1zZWxmIGluIGEgc2F2YWdlbHkgY29tcGV0aXRpdmUgZW52aXJvbm1lbnQuICJFdmVyeSBXaGFydG9uaXRlIGtuZXcgdGhhdCBqb2IgcmVjcnVpdGVycyBlbXBoYXNpemVkIGNsYXNzIHJhbmssIHNvIGl0IHdhc24ndCBzdXJwcmlzaW5nIHRoYXQgdGhlIHN0dWRlbnQgYm9keSB3YXMgZXhjZXB0aW9uYWxseSBhbmQgb2Z0ZW4gcnV0aGxlc3NseSBjb21wZXRpdGl2ZSwiIGhlIHJlYWxpemVzLiAiTW9zdCBvZiB0aGUgYmV0dGVyIHN0dWRlbnRzIGNvdWxkIHJlYWQgdGhlIGFzc2lnbmVkIG1hdGVyaWFscyBhbmQgcmVndXJnaXRhdGUgdGhlIGFuc3dlcnMgd2l0aCBsaXR0bGUgZWZmb3J0LiBUaGUgZnVuIGNhbWUgd2hlbiBvbmUgb2YgdGhlIHNjaG9vbCdzIGZpbmVzdCB3ZW50IG9uIHRoZSBvZmZlbnNpdmUuIFRoZXNlIHdlcmUgdGhlIHR5cGVzIHdobyB3ZXJlIGF0dHJhY3RlZCB0byB0aGUgc21lbGwgb2YgYmxvb2QgaW4gdGhlIHdhdGVyLiIgUml2YWxyeSBkb2Vzbid0IGludGltaWRhdGUgU3RvdXQ7IGl0IHN0aW11bGF0ZXMgaGltLiBIZSBmYWxscyBpbiBsb3ZlIHdpdGggUGhpbGFkZWxwaGlhIGFuZCB0aGUgUGVubiBjYW1wdXMsIHdpdGggaXRzICJkb3JtaXRvcmllcyBmaXJzdCBidWlsdCBhbGwgdGhlIHdheSBiYWNrIGluIEJlbiBGcmFua2xpbidzIGVyYSwgc3RhdGVseSBDb2xsZWdlIEhhbGwsIHRoZSBhYnNvbHV0ZWx5IG1hZ25pZmljZW50IEZ1cm5lc3MgTGlicmFyeSwgYW5kIGV2ZW4gdGhlIGRpZ25pZmllZCBQZW5uIEFydCBNdXNldW0uIgpBbmQgdGhlIGpvYiBpcyB0aGUgc29ydCB0aGF0IGlzIGxpa2VseSB0byBjaGFuZ2UgeW91IGV2ZW4gaWYgeW91IHN0YXJ0IHdpdGggdGhlIGJlc3QgaW50ZW50aW9ucy4gCkhpZ2ggQWx0aXR1ZGUgKDM1MDAgNjUwMCBmdCk6IEJha2UgY3J1c3QgMTggdG8gMjEgbWludXRlcy4gCkhvd2V2ZXIgdHJhZGl0aW9uYWwgdGhpbmdzIHRoYXQgd2UgaGF2ZSBoaXN0b3JpY2FsbHkgcmVjZWl2ZWQgd2l0aCBwYXN0IGNvbnRlbnQgZHJvcHMgKHZlbmRvciByZXNldHMsIHN0cmlrZXMsIGFuZCBjcnVjaWJsZSBtYXBzL21vZGVzKSBiZWluZyBhYnNlbnQgd2l0aCB0aGUgYW5udWFsIHBhc3Mgd2hpbGUgbm90IG5lY2Vzc2FyaWx5IGEgc2xhcCBpbiB0aGUgZmFjZSBjYW4gc3RpbGwgZmVlbCBsaWtlIGl0IHRvIGxvbmcgdGVybSBwbGF5ZXJzIHdobyBoYXZlIGJlY29tZSBhY2N1c3RvbWVkIHRvIHRoZXNlIGluIHRoZSBwYXN0LiAKQmVsaWV2ZSBvciBub3QgaXQgZGlkbid0IHRha2UgbG9uZ2VyIHRoZW4gNSBtaW51dGVzLiAKVGhlc2UgaW5jbHVkZSB1cGdyYWRlcyBsaWtlIGZsb29yaW5nLCBraXRjaGVuIG9yIGluIHN1aXRlIHJlbm92YXRpb25zLiAKTm90IG5lY2Vzc2FyaWx5LiAKSGF2aW5nIHNhaWQgdGhhdCB0aG91Z2ggSSBjYW4gYWN0dWFsbHkgdGhpbmsgb2YgYW55IGlzZWFraSBhaW1lZCBhdCB3b21lbiB0aGF0IHdhcyBzdHJhaWdodCB1cCBiYWQsIHRob3VnaCBvZiBjb3Vyc2UgdGhlcmUgYXJlIGZhciBmZXdlciBvZiB0aGVtLiA5IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28uIAoiVGhlIHB1cnBvc2UgYW5kIHRoZSBiZW5lZml0cyBvZiB0aGUgKENhbmFkYSBJbmZyYXN0cnVjdHVyZSBCYW5rKSBhcmUgbm90IHdlbGwgdW5kZXJzdG9vZCwiIHNhaWQgdGhlIE1heSBtZW1vLCBzaWduZWQgYnkgZGVwdXR5IGZpbmFuY2UgbWluaXN0ZXIgUGF1bCBSb2Nob24uCkhlbGwgaXQgd2FzIG5vdCBsaWtlIHRoaXMgYmVmb3JlIHRoZSBkYXkgMSBwYXRjaC4uIApIYXZlIHRvIGJlIGZsZXhpYmxlIHdpdGggdGhlIHByb2plY3QsIHRvby4gVGhlcmUgYXJlIG9ubHkgdHdvIHNoaXBzIGEgd2VlayB0byBicmluZyBtYXRlcmlhbHMsIGFuZCBldmVuIHRob3VnaCB3ZSBjYW4gc2V0IHVwIGEgY2hhcnRlciwgaXQgZXhwZW5zaXZlLCBzYXlzIEJhZXVtbGVyLiAKVGhlIGNvbXBsaWNhdGlvbnMgb2YgdGhlIGZhdGhlciBkYXVnaHRlciByZWxhdGlvbnNoaXAgaXMgYWxzbyBzaG93biB0aHJvdWdoIEtyaXNobmEncyBuZWlnaGJvciwgMTggeWVhciBvbGQgTWFuanVzaGEuIApBYnJhaGFtIGNhbWUgdG8gQ2hpY2FnbyB0d28geWVhcnMgYWdvIGZyb20gU3VtbWl0LCBKTWlzcy4sIGhlciBiaXJ0aHBsYWNlLiAKVGhlIHNhbWUgc3R1ZHkgcG9pbnRlZCBvdXQgdGhhdCBzb21lIHBlb3BsZSByZXBvcnRlZCBzY2F0dGVyZWQgYWR2ZXJzZSBlZmZlY3RzLCBzdWNoIGFzIG5hdXNlYSBhbmQgZGl6emluZXNzIGFmdGVyIGNvbnN1bWluZyBrb21idWNoYSwgYXMgd2VsbCBhcyBzb21lIGNhc2VzIG9mIHBvaXNvbmluZyBwb3NzaWJseSBkdWUgdG8gdGhlIHVuaHlnaWVuaWMgY29uZGl0aW9ucyB1bmRlciB3aGljaCB0aGUgYmV2ZXJhZ2Ugd2FzIG1hZGUuIApIZSB0aGUgaGVhZCBvZiB0aGUgdXJiYW4gYW5kIHdoYXRldmVyIGRlcGFydG1lbnQuIApNYXliZSB5b3UgcHJlZGljdCBhZnRlciB0aGUgZmFjdCB3aXRoIGxpbmVhciByZWdyZXNzaW9uIG9uIHRob3NlIHR3byBzYW1wbGVzIGFuZCBsb29rIGF0IHRoZSBmZWF0dXJlcyB0byBzZWUgd2hpY2ggb25lIGNoYW5nZWQ/IEl0IGEgbGl0dGxlIG9kZCBiZWNhdXNlIGV2ZW4gdGhvdWdoIHlvdXIgcmVhbCBkZXBlbmRlbnQgdmFyaWFibGUgaW5jcmVhc2VzLCBpdCBwb3NzaWJsZSB0aGF0IHRoZSBwcmVkaWN0aW9ucyBkZWNyZWFzZXMgKGR1ZSB0byBub2lzZSBpbiB0aGUgcHJlZGljdGlvbnMpLiAKQWxsLCB0aGUgZmFyIHJpZ2h0LCB3aGljaCByZXByZXNlbnRzIHRoZSBpbnRlcmVzdHMgb2YgYSBjZXJ0YWluIHN1Ymdyb3VwIG9mIG5vbiB1cmJhbiwgc3RyYWlnaHQgd2hpdGUgQW1lcmljYW5zIGJlc3QgaWxsdXN0cmF0ZWQgYnkgdGhlIFRlYSBQYXJ0eSwgZG9lcyBub3QgbGlrZSBBQ09STiBhbmQgdGhlIHdvcmsgdGhleSBoYXZlIGRvbmUuIApKRDogV2hlbiBKYXJvc2xhdiBIYWxhayB3YXMgZG9pbmcgc28gd2VsbCBpbiAyMDEwLCBlc3BlY2lhbGx5IGR1cmluZyB0aGUgcGxheW9mZiBydW4sIEkgd2FzIHRyYXZlbGluZyBhY3Jvc3MgRXVyb3BlIHdpdGggYSBmcmllbmQgb2YgbWluZS4gClRoZSB0d28gdGhlbiBzdGFydGVkIGRpc2N1c3NpbmcgYWN0aW5nLCB3aGljaCBLaW0gZGlkIGFzIGEgY2hpbGQgYW5kIHdpbGwgZG8gYWdhaW4gaW4gYW4gdXBjb21pbmcgZXBpc29kZSBvZiBSZXZlbmdlLgpNb3JwaDExMyAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGhvdXJzIGFnbwpUaGUgY2FzZSBpbiBwb2ludCB0aGF0IEkgcmVmZXJyaW5nIHRvIGlzIHdoZW4gdGhlIER1dGNoIHdlcmUgcmVxdWlyZWQgdG8gZGVmZW5kIFNyZWJyZW5pY2EgYWdhaW5zdCB0aGUgU2VyYnMsIiBTaGVlaGFuIHNhaWQuIApUdXJucyBvdXQgdGhhdCB0aGUgcGxhY2Ugd2FzIGEgc2hpdCBzaG93IGluIGV2ZXJ5IHJlc3BlY3QuIEhvd2V2ZXIsIG5vIG9uZSB3YXMgd2lsbGluZyB0byB3cml0ZSBhIG5lZ2F0aXZlIHJldmlldyBiZWNhdXNlIHRoZSBDRU8gaXMgYSB2ZXJ5IHdlYWx0aHksIHdlbGwga25vd24gbXVja2V0eSBtdWNrIGluIHRoZSBmaWVsZCBhbmQgY3Jvc3NpbmcgaGltIHdvdWxkIGJlIGNhcmVlciBzdWljaWRlLiAKU3ViamVjdHMgbG9zdCAxLjUga2cgb2YgYmVsbHkgZmF0IGFuZCAyIGtnIG9mIHRvdGFsIGZhdCwgd2hpbGUgYnVpbGRpbmcgMSBrZyBvZiBtdXNjbGUuIApZb3UncmUgaW4gYSByZWxhdGlvbnNoaXAgdG9nZXRoZXIuIApVc2luZyB0aGUgZmxvb3IsIHlvdSBjYW4gcHJlc3MgeW91ciB3ZWlnaHQgYWdhaW5zdCB0aGUgcm9sbGVyIGFuZCBicmluZyBpdCBiYWNrIGFuZCBmb3J0aCBmb3IgYSBtdXNjbGUgbWFzc2FnZS4gCk9uZSBQYWlyOiBUd28gY2FyZHMgb2YgdGhlIHNhbWUgcmFuay4gClRoZSBwcml2YXRlbHkgaGVsZCBjb21wYW55IGlzIG93bmVkIGpvaW50bHkgYnkgTXMgQ29hdGVzIGFuZCBtZW1iZXJzIG9mIGhlciBkaXJlY3QgZmFtaWx5LCBpbmNsdWRpbmcgaGVyIGJyb3RoZXIgSm9obiB3aG8gaXMgam9pbnQgY2hpZWYgZXhlY3V0aXZlIGFuZCBoZXIgZmF0aGVyIFBldGVyLCB0aGUgZmlybSdzIGNoYWlybWFuLiBMYXN0IHllYXIgTXMgQ29hdGVzJyBwYXkgYW5kIGRpdmlkZW5kcyB3ZXJlIHJlcG9ydGVkIHRvIHRvdGFsIDIxN20uCklmIEkgZG8sIGFuZCBjYW4ndCBmaW5kIGFueW9uZSB3aXRoIGEgdGFwIHNldCwgSSdsbCBhcHBseSBhbm90aGVyIFNlY3JldCBNYWxlIFRlY2huaXF1ZSB0aGF0IGludm9sdmVzIGdvaW5nIHRvIHRoZSBzdG9yZSBhbmQgYnV5aW5nIGFuIG92ZXJwcmljZWQgdG9vbCB0aGF0IEkgbWF5IG5ldmVyIG5lZWQgYWdhaW4gb3RoZXIgdGhhbiB0byBsZW5kIHRvIHNvbWVvbmUgYW5kIHRoZW4gcHJvbXB0bHkgZm9yZ2V0IGFsbCBhYm91dCBpdCB1bnRpbCBJIGRvIG5lZWQgaXQgYWdhaW4sIG9mIGNvdXJzZS4gCkFsbCBhYm91dCBub3Qgc2F5aW5nIEkgY2FuIGRvIGl0IGJ1dCBJIHdpbGwgZG8gaXQuIApIZSwgYW5kIG1hbnkgb3RoZXJzIGFzIGhpbSwgcGVycGV0cmF0ZWQgYXRyb2Npb3VzLCBoZWlub3VzLCB0ZXJyaWJsZSBhY3RzLCBidXQgbm93IGhhdmUgIm1lYW5pbmdmdWwgbGl2ZXMiIGluIHdoaWNoIHRoZXkgImNvbnRyaWJ1dGUgdG8gc29jaWV0eSIuIApQZW9wbGUgYXJlIGFsd2F5cyB0b28gYnVzeSB3aGVuIHNvbWVvbmUgcmVhbGx5IG5lZWRzIGEgZGlzdHJhY3Rpb24gZnJvbSByZWFsaXR5Li4gCihOb3Qgc3VyZSB0aGlzIGlzIHVuaXF1ZSB0byBWZXJtb250LCBidXQgaXQgc2VlbXMgdG8gYmUgb3BlcmF0aW5nIG9uIGEgZGlmZmVyZW50IGxldmVsIGhlcmUuKSBHb29kIGludGVudGlvbnMsIHNpbmdsZSBwYXJ0eSBydWxlICh0ZWNobmljYWxseSwgaXQgcHJvZ3Mgdi4gRGVtcyBpbiBCdXJsaW5ndG9uKSwgYW5kIGxpbWl0ZWQgdGFsZW50IHBvb2xzIGhhdmUgY29uc3BpcmVkIHRvIGRvIHNvbWUgc3RyYW5nZSB0aGluZ3MsIHBhcnRpY3VsYXJseSBpbiB0aGUgcHVibGljIGVkdWNhdGlvbiBhbmQgY3JpbWluYWwganVzdGljZSBzeXN0ZW1zLCBuZWl0aGVyIG9mIHdoaWNoIHdvcmtzIG5lYXJseSBhcyB3ZWxsIGFzIGl0IHNob3VsZCBmb3IgdGhlIG1vbmV5LiAKSSBub3cgcmVhbGl6ZSB0aGF0IHRoZXJlIGlzIGEgaHVnZSBkaWZmZXJlbmNlIGJldHdlZW4gbXkgZ2FtZSBub3cgYW5kIG15IGdhbWUgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhci4gCkwgZGUgSGVybmljb3QgZXQgY2VsbGUgZCBldCBNaWxlcyBzb250IGludHJlc3NhbnRlcyAgcGx1cyBkIHRpdHJlLiBDZXBlbmRhbnQsIGxvcnNxdSBjb21wYXJlIGxldXJzIHJzdWx0YXRzIHJlc3BlY3RpZnMsIG9uIHNlIHJlbmQgY29tcHRlIHF1IG5lIGNvbmNvcmRlbnQgZW4gYXVjdW4gY2FzLiBQYXIgZXhlbXBsZSwgT2RvdWwgZXQgTWlsZXMgcGxhY2VudCBsIGVzc2VudGllbGxlIGRlIGJhc2lsaWMgdHJvcGljYWwgKE9jaW11bSBiYXNpbGljdW0pIGRhbnMgbGEgVGVycmUgYWxvcnMgcXVlIEhlcm5pY290IGxhIHJhbmdlIGRhbnMgbGUgTXRhbC4gClRoZXkgY291bGQgZGV0YWluIHlvdSBmb3IgdGhlIHNob3J0IHBlcmlvZCBvZiB0aW1lIG5lY2Vzc2FyeSB0byBhc2NlcnRhaW4gaWYgeW91IHdlcmUgYSkgdGhlIHBlcnNvbiB0aGV5IHdlcmUgbG9va2luZyBmb3I7IGIpIGEgcG9zc2libGUgdGhyZWF0IGR1cmluZyB0aGUgY291cnNlIG9mIHRoZSBzZWFyY2gvYXJyZXN0Li4gCldlIGhlcmUgdG8gd2luLCBhbmQgdGhhdCBub3QgYSB3aW5uaW5nIHN0cmF0ZWd5IGF0IGFsbC4KVGhpcyBvbmUgaXMgYSBncmVhdCBsaXR0bGUgYWR2ZW50dXJlIHRoYXQgY2FuIGJlIHJ1biBpbiBlaXRoZXIgb25lIG9yIHR3byBzZXNzaW9ucywgYW5kIGNhbiBnZXQgdGhlIHBsYXllcnMgdGhlaXIgb3duIHBpcmF0ZSBzaGlwIHZlcnkgcXVpY2tseS4gTWF5YmUgYmVzdCBvZiBhbGwsIGl0IGZlYXR1cmVzIGEgZnVsbCBzZXQgb2YgZ29yZ2VvdXMgbWFwcyBieSBNaWtlIFNjaGxleS4KTGlrZSBldmVyeSB0ZWFtIHJlY3J1aXQsIEFuZHkgQmxvY2ggaGFkIHRvIGNvbXBsZXRlIGEgcmlnb3JvdXMgdHJhaW5pbmcgcmVnaW1lLiAiSSBkaWRuJ3QgcGFzcyBmb3Igc2l4IG1vbnRocywiIGhlIHNheXMuIApJIGdvdCBsdWNreSBhbmQgbmV2ZXIgZGV2ZWxvcGVkIGEgcHJvYmxlbSwgc29tZSBwZW9wbGUgSSBrbm93IGRpZC4gClRha2UgaXQgZnJvbSBzb21lb25lIHdobyBkaWRuIGFzayBhbnlvbmUgb3V0IGZvciBhIGxvbmcgY2h1bmsgb2YgaGlzIGxpZmUgYmVjYXVzZSBoZSB3YXMgd29ycmllZCBpdCBiZSBhd2t3YXJkLgpWYWNhdGlvbiBpbiBWZWdhcyFCdXkgYSB0aWNrZXQgdG8gZmFidWxvdXMgTGFzIFZlZ2FzIGFuZCBoYXZlIHRoZSB0aW1lIG9mIHlvdXIgbGlmZSEgVGhlcmUgaXMgc28gbXVjaCB0byBzZWUgYW5kIGRvIHRoYXQgb25lIHRyaXAsIHVubGVzcyBpdCBpcyBhIHZlcnkgbG9uZyBvbmUsIGlzIGRlZmluaXRlbHkgbm90IGVub3VnaC4gWW91IHdpbGwgd2FudCB0byBjb21lIGJhY2sgdGltZSBhbmQgdGltZSBhZ2FpbiB0byB2aXNpdCB0aGUgY2l0eSBvZiBsaWdodHMgYW5kIGFjdGlvbi4KQXJlIHVzdWFsbHkgZ29vZCBpbmRpY2F0b3JzIG9mIGEgdGhlcmFwaXN0IHRoYXQgbW9yZSBjbGluaWNhbGx5IG1pbmRlZCBhbmQgZG9lcyB3ZWxsIHdpdGggZGV0YWlsIHdvcmssIGJ1dCBpdCBkb2VzbiBuZWNlc3NhcmlseSBtZWFuIHRoZXkgZ29vZCBhdCBpdC4gU2hpYXRzdSwgYW5tYSwgdHVpIG5hLCBUaGFpIHlvZ2EgbWFzc2FnZSwgZXRjLiAKVG9wIG9uIHRoZSBsaXN0IG9mIHBvdGVudGlhbCB2ZW51ZXMgZm9yIHRoZSBuZXh0IHNoYWxlIGJvb20gYXJlIENoaW5hLCBSdXNzaWEgYW5kIEFyZ2VudGluYSwgYnV0IHRoZSB3b3JsZCBuZXh0IHNoYWxlIHJldm9sdXRpb24gbGlrZWx5IHdpbGwgYmUgaW4gQXVzdHJhbGlhLCB3aGljaCBhcHBlYXJzIHRvIGJlIHRoZSBtb3N0IGF0dHJhY3RpdmUgcGxhY2UgZm9yIGNvbXBhbmllcyB0byBwdXJzdWUgdGlnaHQgb2lsIGFuZCBnYXMsIGFjY29yZGluZyB0byBhIEx1eCBSZXNlYXJjaCBhbmFseXNpcyByZWxlYXNlZCByZWNlbnRseS4gVGhpcyBpbmNsdWRlcyBleGlzdGluZyBpbmZyYXN0cnVjdHVyZSwgbG93IHBvcHVsYXRpb24gZGVuc2l0eSBpbiBrZXkgc2hhbGUgcGxheXMsIGFuZCBjaXRpemVucyB3aG8gd2VsY29tZSByZXNvdXJjZSBleHRyYWN0aW9uIHRocm91Z2ggaXRzIGxvbmcgbWluaW5nIGxlZ2FjeSwgdGhlIHJlcG9ydCBzYWlkLiAKT24gdGhlIGJyaWdodCBzaWRlLCB5ZWFycyBsYXRlciB0aGVyZSB3YXMgYSBtYW4gZm9sbG93aW5nIG1lIHVwIGFuZCBkb3duIGEgdHJhbSAgIGkgc3dpdGNoZWQgc2VhdHMgdGhyZWUgb3IgZm91ciB0aW1lcywgc3dpdGNoZWQgY2FycywgYnV0IGV2ZXJ5IHRpbWUgaGUgd291bGQgbW92ZSB3aXRoIG1lLCBmaW5kIGEgc2VhdCBuZWFyIG1lIGFuZCBnbGFyZSBhdCBtZS4gSSB3ZW50IHVwIHRvIGEgZ3JvdXAgb2YgbGFkcyBhYm91dCAxNiB5ZWFycyBvZiBhZ2UgYW5kIGFza2VkIGlmIGkgY291bGQgc3RhbmQgd2l0aCB0aGVtIHVudGlsIHRoZXkgZ290IG9mZiwgYW5kIHRoZW4gZ2V0IHRoZSBuZXh0IHRyYW0uIApEYW5zIGNldCBhcnJvbmRpc3NlbWVudCBsZXMgcGVyc29ubmFsaXRzIHBvbGl0aXF1ZXMgeSBzb250IG5vbWJyZXVzZXMgZXQgZGV2cmFpZW50IGpvdWVyIHVuIHJsZSBpbXBvcnRhbnQsIGRldmFudCBsYSBzY25lIG91IGRhbnMgbGVzIGNvdWxpc3Nlcy4gTWVudGlvbm5vbnMgbGEgcHJzZW5jZSBkdSBjb21tdW5pc3RlIElhbiBCcm9zc2F0LCBhY3R1ZWwgYWRqb2ludCAgbGEgbWFpcmUgZGUgUGFyaXMgY2hhcmcgZHUgbG9nZW1lbnQsIG1haXMgYXVzc2kgdHRlIGRlIGxpc3RlIGF1eCBwcm9jaGFpbmVzIGxlY3Rpb25zIGV1cm9wZW5uZXMgZXQgZG9uYyBwZXV0IHRyZSB1biBwZXUgbG9pZ24gZW4gMjAyMCA7IGR1IGRwdXQgUGllcnJlIFl2ZXMgQm91cm5hemVsIChBR0lSKSwgZG9udCBpbCBuZSBmYXV0IHBhcyBvdWJsaWVyIHF1J2F1eCBsZ2lzbGF0aXZlcyBkZSAyMDE3IGlsIGEgYmF0dHUgTXlyaWFtIEVsIEtob21yeSwgZW5jb3JlIGF1am91cmQnaHVpIGNvbnNlaWxscmUgZGUgUGFyaXMgOyBkZSBEYW5pbGUgT2Jvbm8sIGxhIGRwdXRlIEZJIHF1aSBhIGNyIGxhIHN1cnByaXNlIGF2ZWMgc29uIGxlY3Rpb24gZW4gMjAxNyBkYW5zIGxhIDE3ZSBjaXJjb25zY3JpcHRpb24gZGUgUGFyaXMsIG91IGNlbGxlIGRlIGwnZW5jb3JlIGluZmx1ZW50IERhbmllbCBWYWlsbGFudCwgZXggbWluaXN0cmUgZGUgbCdJbnRyaWV1ci4uIApXaXIgd2FuZGVydGVuIGdlbXRsaWNoIGluIGRlbiBUYWxrZXNzZWwgQ3VibyBkZSBsYSBHYWxnYSBoaW5laW4uIEVzIGdhYiB3dW5kZXJiYXJlIEVpbmJsaWNrZSBpbiBkaWUgdGllZiBlaW5nZXNjaG5pdHRlbmUgU2NobHVjaHQsIGFuIGRlcmVuIEVuZGUgZWluIFdhc3NlcmZhbGwgenUgc2VoZW4gaXN0LCBkZXIgYmVyIGVpbmUgc3RlaWxlIEZlbHN3YW5kIGhlcmFic3RyenQuIApUaGUgb25seSBiZW5lZml0IHRvIElGIGlzIHRoYXQsIGZvciBzb21lIGZvbGtzLCBpdCBhbGlnbnMgYmV0dGVyIHRvIHRoZWlyIHByZWZlcnJlZCBuYXR1cmFsIGVhdGluZyBoYWJpdHMgYW5kIGdpdmVzIHRoZW0gYSBmcmFtZXdvcmsgZm9yIGZld2VyLCBsYXJnZXIgbWVhbHMuIApCdXQgSSB3YXMgc28gaGFwcHkgd2l0aCBteSBleHBlcmllbmNlIHRoYXQgSSBwcm9taXNlZCBJIHdvdWxkIHBvc3QgYSByZXZpZXcgZm9yIGhlci4gU2hlIGRvZXMgaGF2ZSBwcm90b2NvbHMgeW91IG11c3QgZm9sbG93IHRvIGdldCBpbiB3aXRoIGhlciwgYnV0IHRoZXkgc2VlbSB0byBhbGwgYmUgYm9ybiBvdXQgb2YgY29tbW9uIHNlbnNlIGluIHRoZSBlbmQuIEJ1dCBvbmNlIHlvdSd2ZSByZWdpc3RlcmVkIHdpdGggaGVyLCBpdCdzIHZlcnkgZWFzeSB0byBnZXQgYmFjayBpbiB3aXRoIHByb3BlciBub3RpY2UuLiAKSGVhZCBvZiBNYXJrZXRpbmcgYXQgQm9tYmF5IENvbm5lY3QsIFJhY2huYSBWeWFzLCBzaGFyZWQgaGVyIHZpZXdzIG9uIEtoZWxQbGF5IEZpZXN0YSBQb2tlciBFdmVudCBhdCBCb21iYXkgQ29ubmVjdCAgID9BcyBhIGdhbWUgd2hpY2ggaGFzIGJlY29tZSB0aGUgaGFsbG1hcmsgb2YgdGhlIGludGVsbGlnZW50c2lhIGFuZCBzeW5vbnltb3VzIHdpdGggdGhlIGZsZWRnbGluZyBtZXRyb3BvbGl0YW4gYXVkaWVuY2UsIFBva2VyIGhhcyBiZWNvbWUgaW50ZXJtZXNoZWQgd2l0aCB0aGUgY3VsdHVyYWwgaWRlbnRpdHkgb2YgYmlnIGNpdGllcyBhY3Jvc3MgdGhlIGdsb2JlLCBhbmQgTXVtYmFpLCBkZWZpbml0ZWx5IGNvdW50cyBvbmUgYW1vbmdzdCB0aG9zZSBjaXRpZXMuIApNaXQgZ3J0ZXIgU3Bhbm51bmcgaGF0IGRpZSBCZXZsa2VydW5nICAgYW5nZWZocnQgYXVjaCB2b24gZGVuIEZyZXVuZGVuIGRlciBzIHVuZCBDYXNpbm8gR2FtZXMgICBkaWUgRXJmZm51bmcgZGVzIEdyZWVuYnJpZXIgUmVzb3J0cyBtaXQgc2VpbmVtIG5vYmxlbiBDYXNpbm8gZXJ3YXJ0ZXQuIApZZXMsIHRoZXJlIGFic29sdXRlbHkgaXMgZ29vZCBmZWVkYmFjayB0byBiZSBoYWQgaGVyZSwgYnV0IGl0IGJlY29taW5nIHNjYXJjZSBiZWNhdXNlIHBlb3BsZSB3b3VsZCBwcmVmZXIgdG8gdXB2b3RlIHRoZSBjb21tZW50cyB0aGF0IHNpbXBseSBzZWVrIHRvIHNoaXQgb24gdGhlIG1vZHMgd2hpbGUgZG93bnZvdGluZyBhbnkgcmVzcG9uc2UuIApKZXJyeSBqb2luZWQgdGhlIFJveWFsIENhbmFkaWFuIE5hdnkgc2VydmluZyBoaXMgY291bnRyeSBvbiB0aGUgSE1DUyBDYXl1Z2EgZHVyaW5nIHRoZSBLb3JlYW4gV2FyIGFuZCB3YXMgYSBwcm91ZCBtZW1iZXIgb2YgdGhlIFJveWFsIENhbmFkaWFuIExlZ2lvbi4gClRvIHNlcnZlIGNoaWNrZW4sIG1peCB1cCB5b3VyIHNhdWNlLiBUaGlzIHdpbGwgYmUgaGlnaGx5IGRlcGVuZGVudCBvbiB5b3VyIHRhc3RlcywgYnV0IEkgbGlrZSBhIHJvdWdobHkgMSBwYXJ0IGhvbmV5LCAxIHBhcnQgc295IHNhdWNlLCAuNSBwYXJ0IHJpY2UgdmluZWdhciB3aXRoIGdyYXRlZCBnaW5nZXIsIGdhcmxpYywgZ3JvdW5kIHNlc2FtZSBzZWVkcywgd2hvbGUgc2VzYW1lIHNlZWRzIGFuZCBhIHNtYWxsIGRhc2ggb2YgY2hpbGkgcGFzdGUuIFdlIGhhdmUgYSBkaW5lciBhdCB0aGUgaG91c2Ugd2hvIGlzIHNlbnNpdGl2ZSB0byByZWFsbHkgc3BpY3kgZm9vZHMgc28gd2UgZWl0aGVyIG1ha2UgYSBzZXBhcmF0ZSBiYXRjaCBvZiBzcGljeSB4MTAgb3IgZm9jdXMgb24gb3RoZXIgZmxhdm9ycyBsaWtlIHdlIGRpZCBoZXJlLiBQbGVhc2UgUExFQVNFIGV4cGVyaW1lbnQgd2l0aCB0aGlzIHNhdWNlIHRvIHlvdXIgbGlraW5nLiBXZSB1c2UgYSB2ZXJ5IGhpZ2ggcXVhbGl0eSBzaW5nbGUgc291cmNlIHVuZmlsdGVyZWQgb3JhbmdlIGJsb3Nzb20gaG9uZXkgYmVjYXVzZSB0aGUgbGlnaHQgY2l0cnVzeSBub3RlIHJlYWxseSBlbmhhbmNlcyB0aGUgb3ZlcmFsbCBjb21wb3N1cmUgb2YgdGhlIGRpc2ggd2l0aG91dCBoYXZpbmcgdGhlIG92ZXJwb3dlcmluZyBjbG95aW5nIHN3ZWV0bmVzcyBvZiB0aGUgImJlYXIgaG9uZXkiIHlvdSBjYW4gZmluZCBpbiB0aGUgYmlnIGJveCBzdG9yZXMuIE1vc3QgY2l0aWVzIHdpbGwgaGF2ZSBhIHdlbGwgc3RvY2tlZCBncm9jZXJ5IGNoYWluIHRoYXQgaGFzIHNvbWV0aGluZyB0byB0aGUgZWZmZWN0IG9mIHdoYXQgd2UgdXNlLgpJdCdzIGJldHRlciB0aGFuIHRoZSBhbHRlcm5hdGl2ZSBvZiBzbGlwcGluZyB1cCBhbmQgdGhlbiBoYXRpbmcgeW91cnNlbGYgYW5kIGdpdmluZyB1cCBhbmQgbm90IG1vdmluZyBvbiB3aXRoIHlvdXIgaGVhbHRoeSBwbGFuIGFnYWluIGZvciA2IG1vbnRocy4gCkJlZm9yZSBJIGZpbmlzaCwgaSdkIGxpa2UgdG8gZXhwcmVzcyB0aXBzIG9uIGhvdyBiZXN0IHRvIHBsYXkgb25saW5lIHBva2VyIHdpdGhvdXQgdGhlIGNvc3QuIFlvdSdsbCBmaW5kLCBpbiBhY3R1YWwgZmFjdCwgYSBsb3Qgb2Ygd2Vic2l0ZXMgdGhhdCBwcm92aWRlIHRoZSBvcHRpb24gdG8gcGxheSBmcmVlIG9ubGluZSBwb2tlciBnYW1lcy4gWW91IG5lZWQgdG8gc2lnbiB1cCBpbml0aWFsbHkgYW5kIGxpa2UgdGhpcyB5b3UgY2FuIG1ha2UgdXAgdGhlIGZ1bmRhbWVudGFscyBvZiB0aGUgc29mdHdhcmUgYWxvbmcgdXNpbmcgaXRzIHVzZS4gT25jZSB5b3UgYXJlIGZlZWxpbmcgYWNxdWFpbnRlZCB3aXRoIHRoZSB1c2FnZSBvZiBzb2Z0d2FyZSBhbG9uZyB3aXRoIHRoZSBnYW1lIHlvdSBhcmUgYWJsZSB0byBkZXBvc2l0IGNhc2ggYW5kIHBsYXkgYXMgYSByZWFsIHBsYXllci4gQXluIGV2ZGVuIGlraSBraWluaW4gaGVzYXAgYW1hcywgdml0cmFiZXQgZ25jZWwgYWRyZXMiPiB2aXRyYWJldCBnbmNlbCBhZHJlcyBheW4ga2lpbmluIGlraSBrZXogb2xhY2FrIGVraWxkZSBrYXl0IG9sbWFzIGdpYmkgYmlyIGR1cnVtdSBvbG1hcyBuZWRlbml5bGUgemVsIGJhaGlzIGFydGxhciBidWx1bnV5b3IuIENhbmwgQ2FzaW5vIHV5Z3VsYW1hbGFybmEgZXYgc2FoaXBsaWkgeWFwbGFuIHNheWZhZGEgc2FuYWwgc3BvcmxhciB2ZSBjYW5sIENhc2lubyBveXVubGFybiBkYSBOZXRlbnQgdmUgU3BvcnRzIFJhZGFyIHNlcnZpc2xlcmluaSBrdWxsYW5tYSBvbGFuYW56IGJ1bHVudXlvci4KSSBhbSBib3RoIGV4Y2l0ZWQgdG8gcnVuIGEgbWFyYXRob24gYWdhaW4gYW5kIG5lcnZvdXMgYXMgdGhlIHdlYXRoZXIgcmVwb3J0IGtlZXBzIHNheWluZyB0aGF0IGl0IGlzIHN1cHBvc2VkIHRvIGJlIGluIHRoZSA0MHNGIChzaW5nbGUgZGlnaXRzIEMpIGFuZCByYWlueS4gVGhhdHMgdGhlIHBlcmZlY3QgdGVtcCB3aGVyZSB5b3VyIGJvZHkgZG9lc24gbmVlZCB0byBzcGVuZCBhbnkgZXh0cmEgZW5lcmd5IHdhcm1pbmcgaXRzZWxmIHVwLCBvciBjb29saW5nIGl0c2VsZiBkb3duLi4gCkNvbnZlcnNlbHksIGlmIHlvdSBoYXZlIGFsbG93ZWQgeW91ciBzdGFjayB0byBkd2luZGxlIHRvIDQwLDAwMCwgeW91IGNhbiBleHBlY3QgdG8gYmUgY2FsbGVkLiAKWW91ciBoYW5kcyBhbmQgZmVldCBhcmUgcHJvYmFibHkgdGhlIG1vc3QgYWJ1c2VkIHBhcnRzIG9mIHlvdXIgYm9keSBhbmQgYmVjYXVzZSBvZiB0aGF0LCB0aGUgc2tpbiBpbiB0aG9zZSBhcmVhcyB0ZW5kcyB0byBjcmFjayBhbmQgZHJ5LiAKU2luZXN0cm8gaXMganVzdCBwbGFpbiB0ZXJyaWJsZS4gCkZyZWVyb2xsIHRvdXJuYW1lbnRzIGFyZSBmcmVlIGVudGlyZXMgaW50byBwb2tlciB0b3VybmFtZW50cyB0aGF0IGNvc3Qgbm90aGluZyB0byBnZXQgaW50by4gVGhlc2UgcGF5IGNhc2ggb3Igb3RoZXIgYXdhcmRzIHRvIHRoZSBwbGF5ZXIgZGVwZW5kaW5nIG9uIGhvdyB3ZWxsIHRoZXkgZGlkIGR1cmluZyB0aGUgdG91cm5hbWVudC4gWW91IGNhbiBlaXRoZXIgZW50ZXIgYSBmcmVlcm9sbCB3aGVuIHRoZXkgYXJlIG1hZGUgYXZhaWxhYmxlIG9yIHlvdSBjb3VsZCByZWNlaXZlIGFuIGludml0YXRpb24gZnJvbSB0aGUgb25saW5lIHBva2VyIHJvb20gaXRzZWxmLiAKVGhlIHdob2xlIG9mIGl0IGxvb2tzIG1vcmUgbGlrZSBhIFdlbGxzIE1hcnRpYW4gY3JlYXRpb24gdGhhbiBhbnl0aGluZyBlbHNlLiBSb2JpZGE6LiAKQXMgaXMgdHlwaWNhbCBmb3IgSHVheSBLaHdhbmcsIHRoZXJlIHdhc24gbXVjaCBvZiBhIG1hc3NhZ2UgdG8gc3BlYWsgb2YgKGRlc3BpdGUgdGhlIGFkdmVydGlzaW5nIG91dHNpZGUpLiBJdCB3b3VsZCBiZSB3aGF0IGtub3duIGFzIGEgbWFzc2FnZSBpZiBhbnl0aGluZy4gVGhlIGdpcmwgc3RhcnRlZCBydW5uaW5nIHRoZSBiYXRoIGFuZCB3aGlsZSBpdCBmaWxsZWQgd2UgdGFsa2VkIGFuZCBmbGlydGVkIG9uIHRoZSBjb3VjaC4gClNveWx1NDREZXZsZXQgaSBlYmVkIGJpIG1kZGV0CldlIGFyZSBnb2luZyB0byBsb29rIGF0IG9uZSB0aGF0IGNoZWNrcyBhbGwgb2Ygb3VyIGJveGVzLCBhbmQgd2UgYXJlIHNvIGV4Y2l0ZWQhISEgRmluZ2VycyBjcm9zc2VkIHRoYXQgbm90IG9ubHkgZG8gd2UgbGlrZSBpdCB3aGVuIHdlIHNlZSBpdCwgYnV0IHdlIGFjdHVhbGx5IGdldCBpdCEKSSd2ZSBob25lc3RseSBqdXN0IHN0YXJ0ZWQgdGVsbGluZyB0aGVtIEkgZG9uJ3QgbmVlZCB2aXRhbHMuIEknbSBub3Qgc3VyZSB3aHkgdGhleSBhbHdheXMgZ2l2ZSB0aGVtIHdoZW4gdGhleSBrbm93IEkgY2FuIGp1c3QgbG9vayBhdCB0aGVtIGluIHRoZSBjb21wdXRlciAoYW5kIGFtIGN1cnJlbnRseSBkb2luZyBzbykgYW5kIHRoZW4gdGhleSByZWFkIHRoZSBkb2N0b3JzIEggdG8gbWUgc3RyYWlnaHQgb2ZmIHRoZSBzY3JlZW4uIEkgZ2V0IHRoYXQgdGhleSdyZSBjb3ZlcmluZyB0aGVpciBhc3NlcywgYnV0IGl0IGxlZ2l0aW1hdGVseSBmZWVscyBsaWtlIEkgZ2V0IGEgcmVwb3J0IHRoYXQgaXNuJ3QgMTAwJSBzdHJhaWdodCBvZmYgdGhlIE1BUiBvbmNlIGEgbW9udGggKHdvcmQgZm9yIHdvcmQsIG9idmlvdXNseSBJIGRvbid0IHdhbnQgdGhlbSBtYWtpbmcgc2hpdCB1cCkgYW5kIGl0J3MgbGlrZSB0aGV5J3ZlIG5ldmVyIHNldCBleWVzIG9uIHRoZSBwYXRpZW50IGluIHRoZWlyIGxpdmVzLiAKSSBzdGFydGVkIGdldHRpbmcgcGFuaWMgYXR0YWNrcyBmcm9tIHNtb2tpbmcgYWJvdXQgMyB5ZWFycyBhZ28uIApNYXJrZXQgaXMgbG9va2luZyBmb3Igc29tZSBmb3JtIG9mIGFja25vd2xlZGdtZW50IG9mIHdlYWtlciB0aGFuIGV4cGVjdGVkIGdyb3d0aCBpbiB0aGUgc3RhdGVtZW50LiAKV2hpbGUgdGhpcyB3aWxsIG5vdCBkaXJlY3RseSB0YWtlIGpvYnMsIGFsbG93aW5nIGEgbWFpbnRlbmFuY2UgdGVhbSB0byBiZSBleHRyZW1lbHkgbW9yZSBlZmZpY2llbnQgd2lsbCBkaXNwbGFjZSB3b3JrZXIuLiAKTmlnZ2EgKHdpdGhvdXQgdGhlIGhhcmQgcjsgdGhlIHRlcm0gd2l0aCB0aGUgciBlbnVuY2lhdGVkIGlzIGFsbW9zdCBleGNsdXNpdmVseSBhIHJhY2lhbGx5IGNoYXJnZWQgaW5zdWx0KSBpcyBhIHRlcm0gdGhhdCBtYW55IGJsYWNrIHBlb3BsZSByZWZlciB0byB0aGVtc2VsdmVzIGFzLCBzaW1pbGFyIHRvICJndXkiIG9yICJkdWRlIi4gSW4gUmljaGFyZCBQcnlvciBiaXQsIGl0IHByb2JhYmx5IG1lYW50IHRvIGNyZWF0ZSB0aGUgaW1hZ2Ugb2Ygd2hhdCB3aGl0ZSBwb2xpY2UgbWlnaHQgc2VlIGFzIGEgInN0cmVldCB0aHVnLCIgYSBwb29yZXIgYmxhY2sgQW1lcmljYW4gd2hvIGlzIGxpa2VseSB0byBiZSBpbnZvbHZlZCBpbiBjcmltaW5hbCBhY3Rpdml0eS4gCkkga25vdyBpdCBkaWZmaWN1bHQgaW4gdGhlIGJlZ2lubmluZywgSSBhbSBhIHNlbGYgdGF1Z2h0IGJvd2xlciB0aGF0IHJhbmRvbWx5IHBpY2tlZCBpdCB1cCAzIHllYXJzIGFnbyBhdCAyMywgc28gSSBjYW4gcmVsYXRlLiAKVGhlcmUgYXJlIGRpZmZlcmVudCB0eXBlcyBvZiBjYXJkIHByb3RlY3RvcnMgYXZhaWxhYmxlIG9ubGluZS4gCkxhZHkgR2FnYSBhdCB0aGUgNDNyZCBUb3JvbnRvIEludGVybmF0aW9uYWwgRmlsbSBGZXN0aXZhbCBmb3IgaGVyIGZpbG0gU3RhciBJcyBCb3JuIChXaGVyZTogVG9yb250bywgT250YXJpbywgQ2FuYWRhIFdoZW46IFNlcHQuIDkgMjAxOC4KU2luY2UgZXZlcnkgZGVhbGVyIGhhcyBhIHdpdHR5IGFkbW9uaXRpb24gcHJlcGFyZWQgZm9yIHRoaXMgbW9tZW50LCBtYXliZSBpdCdzIGFsbCBmb3IgdGhlIGJlc3QuIEJ1dCBuZXh0IHRpbWUsIGxldCB0aGUgZGVhbGVyIHB1c2ggaXQgdG8geW91LCBvaz8uIApCZW5nYWxpQm95ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkVlbiBmeXNpb3RoZXJhcGV1dCBoYW5kZWx0IHZhbnVpdCBiZXRyb3V3YmFyZSBpbmZvcm1hdGllIGVuIHZlcnNjaGFmIGFuZGVyZSBkdXMgb29rIGJldHJvdXdiYXJlIGluZm9ybWF0aWUuIFRvdCBzbG90IHByb2JlZXJ0IGRlIHRoZXJhcGV1dCBiaWogdGUgZHJhZ2VuIGFhbiBkZSBvbnR3aWtrZWxpbmdlbiBvcCBoZXQgZ2ViaWVkIHZhbiBmeXNpb3RoZXJhcGV1dGlzY2hlIGtlbm5pcy4uIApOYWNoIGVpbmVtIGdld2lzc2VuIFplaXRyYXVtIGVudHN0ZWh0IGRlciBSY2tlbnNjaG1lcnogZXJuZXV0IHVuZCBkaWUgdm9yaWdlbiBQcm9ibGVtZSBrZWhyZW4gd2llZGVyIHp1cmNrLiBEaWUgTWFuaXB1bGF0aW9uZW4gZGVyIFdpcmJlbHN1bGUgd2VyZGVuIHdpZWRlcmhvbHQsIHVuZCBzbyB2ZXJnZWh0IGVpbmUgbGFuZ2UgWmVpdCBvaG5lIGRpZSBMc3VuZyBkZXMgUHJvYmxlbXMuIApJZiBpdCBkaWQgcmFpbiBhdCBuaWdodCB0aGVuIHdlIHdvdWxkIGp1c3QgZmluZCBhIHB1YmxpYyBwYXJrIHRoYXQgaGFkIGEgcGF2aWxpb24gYW5kIHNsZWVwIGRyeSB1bmRlciB0aGF0LiBXaGVuIHdlIGNvdWxkbiBmaW5kIGEgcGF2aWxpb24gdGhlbiB3ZSBqdXN0IGJvdWdodCBhIGh1Z2UgdGFycCBhdCBhIGhhcmR3YXJlIHN0b3JlIGluIFNhcHBvcm8gYW5kIHdoZW4gaXQgd291bGQgcmFpbiB3ZSB3b3VsZCBzdHJpbmcgaXQgdXAgd2l0aCBwYXJhY29yZCBhbmQgc2xlZXAgdW5kZXIgdGhhdC4gV2UgZXZlbiBzbGVwdCB1bmRlciBhIGJ1bGxldCB0cmFpbiBvdmVycGFzcywgaW4gYSBidXMgc3RvcCwgYW5kIGEgY291cGxlIG9mIG90aGVyIGNyZWF0aXZlIHBsYWNlcyB3aGVuIGl0IHJhaW5lZC4uIApJIGhhZCB0byBzZW5kIHRoYXQgbWVzc2FnZSBzYXlpbmcgaG93IEkgYXBwcmVjaWF0ZSBoZXIgZWZmb3J0IGFuZCBzaW5jZXJpdHksIGJ1dCBJIGFtIGxvb2tpbmcgZm9yIG90aGVyIGNvbW1vbiBncm91bmQgdGhhdCBJIGRpZG4gZmVlbCBoZXJlLiAKVGhpcyB3ZWVrIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENlbnRyYWwgRmxvcmlkYSBzb21lIGxvY2FsIHdvbWVuIHdobyBzdWZmZXJlZCB0aHJvdWdoIHllYXJzIG9mIGZvcmNlZCBwcm9zdGl0dXRpb24gb3Igb3RoZXIgc2V4IGFidXNlIHdpbGwgYmUgc2VlbiBhcyBzb21ldGhpbmcgZWxzZSBlbnRpcmVseTogYXJ0aXN0cy4gClBhZGRvY2sncyBnYW1ibGluZyBoYWJpdHMgbWFkZSBoaW0gYSBzb3VnaHQgYWZ0ZXIgY2FzaW5vIHBhdHJvbi4gT3ZlciBzZXZlcmFsIGRheXMsIE1hbmRhbGF5IEJheSBlbXBsb3llZXMgcmVhZGlseSBsZXQgaGltIHVzZSBhIHNlcnZpY2UgZWxldmF0b3IgdG8gdGFrZSBzdWl0Y2FzZXMgdG8gdGhlICQ1OTAgcGVyIG5pZ2h0IHN1aXRlIGhlIGhhZCBiZWVuIHByb3ZpZGVkIGZvciBmcmVlLiBUaGUgcm9vbSBoYWQgYSBjb21tYW5kaW5nIHZpZXcgb2YgdGhlIFN0cmlwIGFuZCB0aGUgUm91dGUgOTEgSGFydmVzdCBGZXN0aXZhbCBjb25jZXJ0IGdyb3VuZHMgYWNyb3NzIHRoZSBzdHJlZXQuClRoYXQgaW5jbHVkZXMgZ2FtZSBwcm9jZWR1cmVzLCBwb2tlciBydWxlcywgYmV0dGluZyByb3VuZHMsIGhhbmQgcmFua2luZyBhbmQgb3RoZXIgdXNlZnVsIGluZm9ybWF0aW9uIG9uIGhvdyB0byBwbGF5IHBva2VyLiBZb3UgbWlnaHQgYWxzbyBsaWtlIHRoZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRoYXQgaXMgd3JpdHRlbiBvbiB0aGUgc2l0ZSwgbGlrZSBibHVmZiB0YWN0aWNzLCBkaWZmZXJlbnQgdHlwZXMgb2YgcHJvYmFiaWxpdGllcyBhbmQgZXZlbiBzb21lIG1hdGVyaWFscyBmb3IgbW9yZSBhZHZhbmNlZCBwbGF5ZXJzLiAKUHJlZGVjZWFzZWQgYnkgaGlzIHBhcmVudHMgSmVhbm5pZSBhbmQgR2VvcmdlLCBoaXMgc2libGluZ3MgSmVhbiBhbmQgR2VvcmdlLCB3aWZlLCBOb3JlZW4gSGFtbHkgUHl6ZXIgYW5kIGZvcm1lciBzcG91c2UgYW5kIG1vdGhlciBvZiBoaXMgY2hpbGRyZW4sIFJ1dGggQmlybmllIEtvc2FsbGUuIApUaGVyZSBSIGFuZCBPUFAgICB0aGUgdHdvIGxhcmdlc3QgY29tbWl0dGVlcyB0aGF0IHdvcmsgdG8gaGVscCBtYWtlIHN1cmUgdGhlIHRob3VzYW5kcyBvZiBzcGVjdGF0b3JzLCBUSE9OIGZhbWlsaWVzLCBldGMsIGFyZSBzYWZlIGFuZCBrbm93IHdoYXQgZ29pbmcgb24gdGhyb3VnaG91dCB0aGUgd2Vla2VuZCAoUiBhbmQgd2hvIGFyZSBpbiB0aGUgQkpDIGF0IDVhbSB0aGUgbW9ybmluZyBvZiBUSE9OIHB1dHRpbmcgZG93biB0aGUgbWF0cyBvbiB0aGUgZmxvb3IgYW5kIGJ1aWxkaW5nIHRoZSBzdGFnZXMvbGlnaHRzIGFuZCB0aGVuIHdvcmtpbmcgZHVyaW5nIHRoZSB3ZWVrZW5kIG1ha2luZyBzdXJlIGV2ZXJ5dGhpbmcgc3RheXMgY2xlYW4gdGlkeSBhbmQgcGVvcGxlIGFyZW4gbWFraW5nIGh1Z2UgbWVzc2VzLlRoZXJlIERhbmNlciBSZWxhdGlvbnMgKGZrYSBNb3JhbGUgYmFjayBpbiBteSBkYXkpLiAKU2FoZGV2J3MgdHJpYWwgb24gYm90aCBjb3VudHMgcHJvY2VlZGVkIGFsbW9zdCB0d28geWVhcnMgbGF0ZXIgYmVmb3JlIEp1c3RpY2UgRHVuY2FuIEdyYWNlLiBUaGUgZGVmZW5jZSBkaWQgbm90IHJhaXNlIHRoZSBzZXZlcmFuY2UgaXNzdWUuCkNhZXNhcnMgVGVtcGxlIExvYmJ5IHNlcnZlcyBhcyBhbiBpbnRlcmFjdGl2ZSBob3RlbCBsb2JieSBhbmQgY2hlY2sgaW4gYXJlYS4gCkVTSCAobWlsZGx5KS4gWW91IHNob3VsZCBoYXZlIChvciBpZiB5b3VyIGRlY2lzaW9uIGlzIGZpbmFsIHRoZW4gc2hvdWxkIGhhdmUgaGFkKSBhIGNvbnZlcnNhdGlvbiB3aXRoIGhlciBhYm91dCBpdC4gCkIuIERvY3RvciA9IEFyenQvcnp0aW4pLiBEYWR1cmNoIHN0ZWxsdCBzaWNoIGZyIE1lbnNjaGVuIGluIGVuZ2xpc2Noc3ByYWNoaWdlbiBMbmRlcm4gZ2FyIG5pY2h0IGVyc3QgZGllIEZyYWdlIHVuZCBEaXNrdXNzaW9uZW4gYmVyIGRlbiBTaW5uIG9kZXIgVW5zaW5uIGdlbmRlcmdlcmVjaHRlciBTcHJhY2hlIHdyZGUgZXMgaW4gc2VpbmVyIGpldHppZ2VuIEZvcm0gbmljaHQgZ2ViZW4uIApUaGlzIHdpbGwgaGVscCB5b3UgZ2FpbiBjb250cm9sIG92ZXIgdGhlbSBieSBlbmNvdXJhZ2luZyB0aGVtIHRvIHBsYXkgc3RyYWlnaHQgdXAgYWdhaW5zdCB5b3UuIApUaGlzIHBhY2thZ2UgaW5jbHVkZXMgYSB0cmlhbCBmb3IgYm90aCB0aGUgaGFpciBkbyBhbmQgbWFrZSB1cC4gCk1hbnkgYXN0cm9waG90b2dyYXBoeSBzbmFwc2hvdHMgYXJlIHRha2VuIG92ZXIgbG9uZyBwZXJpb2RzIG9mIHRpbWUgKHNvbWV0aW1lcyBjb250aW51b3VzbHksIHNvbWV0aW1lcyByZXBlYXRlZGx5IG92ZXIgZGF5cy93ZWVrcy9tb250aHMgZXZlbiB5ZWFycykuIApBbnkgYW5kIGFsbCBzdWdnZXN0aW9ucyBjb25jZXJuaW5nIGNhbGwgdG8gYWN0aW9uIG9yIGxlZ2FsIGFjdGlvbiBvZiBhbnkga2luZCBhcmUgdG8gYmUganVkZ2VkIG9uIGEgY2FzZSBieSBjYXNlIGJhc2lzIGFuZCBhbnkgZGlzc2VudGluZyBvcGluaW9ucyBjb25jZXJuaW5nIHRoZSBsYXR0ZXIgc2hvdWxkIGJlIGp1ZGdlZCBhcyBzdWNoLiAKUG9saXRpY28gRnJlZWRvbSBvZiBJbmZvcm1hdGlvbiBBY3QgcmVxdWVzdCByZXZlYWxlZCB0aGF0IGluIDIwMDksIHRoZSBKdXN0aWNlIERlcGFydG1lbnQgcnVsZWQgdGhhdCBPYmFtYSBjb3VsZCBub3QgYXBwb2ludCBoaXMgaGFsZiBzaXN0ZXIgdG8gYSBjb21taXNzaW9uIG9uIFdoaXRlIEhvdXNlIGZlbGxvd3NoaXBzIG9yIGhpcyBicm90aGVyIGluIGxhdyB0byBhIGNvbW1pc3Npb24gb24gcGh5c2ljYWwgZml0bmVzcy4gCkdlbmVzIGFyZSBhbHNvIGJyb2tlbiB1cCBpbiBvdXIgRE5BIGludG8gYWx0ZXJuYXRpbmcgc3RyZXRjaGVzIG9mIEROQSB0aGF0IGNvZGVzIGZvciBwYXJ0IG9mIHRoZSBwcm90ZWluIG1lc3NhZ2UgKGV4b25zKSBhbmQgRE5BIHRoYXQgbmVlZCB0byBiZSByZW1vdmVkIG9yIHNwbGljZWQgb3V0IChpbnRyb25zKSBpbiBvcmRlciBmb3IgdGhlIG1lc3NhZ2UgdG8gYmUgcmVhZCBjb3JyZWN0bHkuIFNvbWV0aW1lcyBzaWduYWxzIHRoYXQgdGVsbCBhIGNlbGwgd2hhdCB0eXBlIG9mIGNlbGwgdG8gYmUgY2hhbmdlIHRoZSBpbnN0cnVjdGlvbnMsIHNvIHRoYXQgdGhlIHdheSB0aGUgbWVzc2FnZXMgYXJlIHNwbGljZWQgY2hhbmdlcy4KSXQncyBMaXZlIExvdW5nZSBNb250aCEgVGhpcnR5IGRheXMgb2YgbGl2ZSBwZXJmb3JtYW5jZXMgZnJvbSB0aGUgZ3JlYXQgYW5kIGdvb2Qgb2Ygcm9jayBhbmQgcG9wLCBpbmNsdWRpbmcgSmFtZXMgQmF5LCBNdXNlLCBDaHZyY2hlcywgYW5kIFRoZSBXZWVrbmQuIEFuZCB0aGF0IGdvdCB1cyB0aGlua2luZzogd2hvIGluIHRoZSBoaXN0b3J5IG9mIHRoZSBMaXZlIExvdW5nZSBoYXMgYmVlbiBjb3ZlcmVkIHRoZSBtb3N0PyBTbyB3ZSB3ZW50IHRocm91Z2ggdGhlIGFyY2hpdmVzIGFuZCBjcnVuY2hlZCBzb21lIG51bWJlcnMuIFdlIHJlY2tvbiB0aGlzIGxpc3QncyBwcmV0dHkgYWNjdXJhdGUgKGFuZCBpdCdzIGluIG9yZGVyKS4gCkkgc3VwcG9zZSBJJ20gZWl0aGVyIGdldHRpbmcgdXNlZCB0byBpdCBvciB0dXJuaW5nIGludG8gYSBtZWFuZXIgcGVyc29uLi4gCkFjY2VwdGluZyB0aGlzIG1lYW5pbmdsZXNuZXNzIHNvbWVob3cgYnJvdWdodCBtZSBwZWFjZSBvZiBtaW5kLCB3aGVyZSBiZWZvcmUgaGFzIGJlZW4gdHVybW9pbCwgZGVzcGVyYXRpb24gYW5kIGFueGlldHkuIE5vdywgSSBtb3N0bHkgZmVlbCBub3RoaW5nIHRvd2FyZHMgYW55dGhpbmcuIFdoaWNoIGlzIHN0aWxsIGJhZCwgYnV0IGFuIGltcHJvdmFsIHRvIGJlZm9yZSwgaW4gbXkgY2FzZS4KSWYgYW4gYWN0aW9uIGhhcyBiZWVuIHN0YXJ0ZWQgcHJpb3IgdG8gdGhlIG1vdmUsIGJ5IGVpdGhlciBwYXJlbnQsIHRoYXQgY2hhbmdlcyB0aGluZ3MuClRoYXQgaXMgc28gbXVjaCBidWxsc2hpdC4gRXNwZWNpYWxseSBpbiBBdXRvLCBjYXJyaWVycyBhbmQgY2xhaW1zIGhhbmRsZXJzIGFyZSBhYnNvbHV0ZWx5IHdvcmtpbmcgdG8gZ2V0IGNsYWltYW50cyBtZWRpY2FsIHRyZWF0bWVudHMsIHJlcGFpcnMsIHJlcGxhY2VtZW50IHZlaGljbGVzIGFuZCBldmVyeXRoaW5nIGVsc2UgbmVlZGVkIGluIHRoZSBtb3N0IGVmZmljaWVudCBhbmQgZWZmZWN0aXZlIG1hbm5lciBwb3NzaWJsZS4gCkdvYWwgNSBpcyAiQWNoaWV2ZSBnZW5kZXIgZXF1YWxpdHkgYW5kIGVtcG93ZXIgYWxsIHdvbWVuIGFuZCBnaXJscy4uIApSb2JlcnQgUGF0dGluc29uIHJldHVybnMgdG8gdGhlIHNwb3RsaWdodApIZSBnZXRzIHRvIGhvbWUgcGxhdGUgd2hlcmUgaGlzIHNvbiBoYXMgYWxyZWFkeSBqdW1wZWQgb3ZlciB0aGUgYmFycmllciBvbmNlIGNvbnRhY3Qgd2FzIG1hZGUgYW5kIHdhaXRpbmcgZm9yIGhpbSBhdCBob21lIHBsYXRlLiBIaXMgc29uIHdhaXRzIGFuZCBCYXJyeSBnZXRzIGhvbWUsIHB1dHMgaGlzIGFybXMgdXAgaW4gdGhlIGFpciBkcmF3aW5nIG1vcmUgYXR0ZW50aW9uIHRvIGhpbXNlbGYgKHRob3VnaCBoZSBzYXkgaXQgd2FzIGZvciBCb2JieSkuIFlldCBoZSBuZXZlciBnYXZlIGhpcyBzb24gYSBodWcgb3IgZXZlbiBhIHNsYXAgb24gdGhlIGJhY2sgb3IgYSBydWJiaW5nIG9mIGhpcyBoZWFkLiBIaXMgc29uIGh1Z2dlZCBoaW0gd2hpbGUgQmFycnkga2VwdCBmb2N1c2VkIG9uIG9mIGNvdXJzZSwgaGltc2VsZi4gKEFuZCB3aGVuIGhpcyB5b3VuZyBkYXVnaHRlciBjYW1lIG91dCwgaGUgcHV0IGhpcyBhcm0gYXJvdW5kIGhlciBmb3IgYWxsIG9mIGxpa2UgMiBzZWNvbmRzIGFuZCBjb3VsZG4gZXZlbiBib3RoZXIgbGlmdGluZyBoZXIgdXAuKQpUaGUgZGVsYXkgcHJvdmlkZWQgYW4gb3Bwb3J0dW5pdHkgZm9yIHNvbWVvbmUgY29ubmVjdGVkIHRvIHRoZSBmb3VuZGF0aW9uIHRvIHByZSBlbXB0aXZlbHkgbGVhayB0aGUgc3RvcnkgdG8gdGhlIEhlcmFsZCBTdW4uIFRoZSBmcm9udCBwYWdlIHN0b3J5ICJXYXJuZSBjaGFyaXR5IGNhc2ggZml4IiBkZXRhaWxlZCB0aGUgY3JpY2tldGluZyBsZWdlbmQgcGxhbiB0byAiY2hhbmdlIHRoZSB3YXkgaXQgcmFpc2VzIG1vbmV5IiBhbWlkICJjb25jZXJucyBhYm91dCBoaWdoIGV4cGVuc2VzIi4gQSBkYXkgbGF0ZXIgVGhlIFN1bmRheSBBZ2UgcmV2ZWFsZWQgdGhlIGV4dGVudCBvZiB0aGUgZm91bmRhdGlvbiBmaW5hbmNpYWwgaXNzdWVzLCB3aGljaCBpbmNsdWRlZCBkaXN0cmlidXRpbmcgb25seSAxNiBjZW50cyBvZiBldmVyeSBkb2xsYXIgcmFpc2VkIGZvciBjaGFyaXR5IGJldHdlZW4gMjAxMSAxMy4gCkZpbmdlcnByaW50cyBhcmUgZGV0ZXJtaW5lZCBieSBncm93dGggY29uZGl0aW9ucyBpbiB0aGUgd29tYixhbmQgYXJlICAgYXMgZmFyIGFzIHdlIGtub3cgdG9kYXkgICB1bmlxdWUgdG8gdGhlIGluZGl2aWR1YWwuIC4KSSB3YXMgY29uc3RhbnRseSBmaWRnZXRpbmcgd2l0aCBteSBsZWZ0IGFybSwgY2hlY2tpbmcgbXkgcHVsc2UsIGFuZCBqdXN0IGdlbmVyYWxseSBmcmVha2luZyBvdXQuIEkgd2VudCB0byBzZXZlcmFsIGRvY3RvcnMsIGV2ZW4gdGhlIGVtZXJnZW5jeSByb29tIG9uY2UsIGFuZCBldmVyeSB0aW1lIHRoZXkgdG9sZCBtZSB0aGVyZSB3YXMgbm90aGluZyB3cm9uZyB3aXRoIG15IGhlYXJ0IGFuZCB0aGF0IGl0IHdhcyBhbGwgaW4gbXkgaGVhZCwgYnV0IEkgbmV2ZXIgcmVhbGx5IGJlbGlldmVkIHRoZW0uIApTbyBzaW5jZSBoZSBsaWVzIGNvbnN0YW50bHkgYW5kIHdvbid0IHJlbGVhc2UgaGlzIHRheCByZXR1cm5zIChoZSBQUk9NSVNFRCBoZSB3b3VsZCBkdXJpbmcgdGhlIGNhbXBhaWduKTogbm90aGluZyB5b3UgdGhpbmsgb3IgYmVsaWV2ZSBtYXR0ZXJzLiBBZ2Fpbiwgd2UgYXJlIGdvaW5nIG9uIGV2aWRlbmNlLCBub3QgImZlZWxzLiIgRGlkIGhlIG1ha2UgbW9uZXkgZnJvbSBoaXMgZ2lhbnQgaW5oZXJpdGFuY2U/IE9yIGRpZCBpdCBzdGFnbmF0ZT8gT3Igd291bGQgaGUgaGF2ZSBtYWRlIG1vcmUgbW9uZXkgaWYgaGUgcHV0IGl0IGluIGFuIGluZGV4IGZ1bmQ/IFdlIGtub3cgVHJ1bXAgc3RlYWtzIHdlcmUgYSBmYWlsdXJlLiAKSmFwYW5lc2UgUm9ib3QgQ3JhemVCcmVha2RhbmNlYm90QSBodW1hbm9pZCByb2JvdCwgIk1hbm9pIEFUMDEsIiBwcm9kdWNlZCBieSBKYXBhbidzIHRveSByb2JvdCBtYWtlciBLeW9zaG8sIHBlcmZvcm1zIGEgaGlwIGhvcCBkYW5jZSBhdCB0aGUgSW50ZXJuYXRpb25hbCBSb2JvdCBFeGhpYml0aW9uIGluIFRva3lvIG9uIE5vdi4gMjYsIDIwMDkuIFNvbWUgMjAwIHJvYm90IG1ha2VycyBhbmQgaW5zdGl0dXRlcyBleGhpYml0IHRoZWlyIGxhdGVzdCByb2JvdCB0ZWNobm9sb2d5IGR1cmluZyBhIGZvdXIgZGF5IGV4aGliaXRpb24uIChjcmVkaXQ6IFlvc2hpa2F6dSBUc3Vuby9BRlAvR2V0dHkgSW1hZ2VzKQpWb3VzIG4nYXZleiBhdWN1bmUgY2hhbmNlIGQnYXJyaXZlciAgcXVvaXF1ZSBjZSBzb2l0IGRlIHBlcnRpbmVudC5GYWl0ZXMgZGUgbGEgcHViICBjZSBibG9nIHN1ciBsZXMgZm9ydW1zQ2UgYmxvZyByZW9pdCAyNSAwMDAgdmlzaXRlcyBtZW5zdWVsbGVzIGVuIG1veWVubmUuIApGaXJzdCBvbmUgd2FzIHRoZSBBcmthbnNhcyBMb3R0ZXJ5IENvbW1pc3Npb24uIApMYW5jIGVuIEFuZ2xldGVycmUgZW4gbCdhbiAyMDAwIHBhciBTeWx2aWUgSHR1IGR1IFF1YmVjIGV0IE1pYSBFbG1zdGVyIGRlIFN1ZGUsIGRldXggcGlvbm5pcmVzIGRlIGwnQXNzb2NpYXRpb24gaW50ZXJuYXRpb25hbGUgZHUgbWFzc2FnZSBiYiwgbGUgcHJvZ3JhbW1lIGRlIG1hc3NhZ2UgZW4gbWlsaWV1IHNjb2xhaXJlIE1JU1AgKE1hc3NhZ2UgaW4gc2Nob29scyBwcm9ncmFtKSBlc3QgbWFpbnRlbmFudCBwcnNlbnQgZW4gcGx1cyBkZSB2aW5ndCBwYXlzLiBBcHJzIGF2b2lyIHV2ciAgaW50Z3JlciBsYSBub3Rpb24gZGUgdG91Y2hlciBldCBkZSBtb3V2ZW1lbnQgYXV4IHByb2Nlc3N1cyBkJ2FwcHJlbnRpc3NhZ2UgY2hleiBsZXMgYmJzLCBsZXMgZm9uZGF0cmljZXMgb250IHJhbGlzIGNvbWJpZW4gaWwgc2VyYWl0IGltcG9ydGFudCBkJ2luc3RhdXJlciBsJ3V0aWxpc2F0aW9uIGR1IHRvdWNoZXIgbm91cnJpc3NhbnQgZGFucyBsZSBzeXN0bWUgc2NvbGFpcmUuIApUaGUgY2hlbW8gYWJzb2x1dGVseSBibGV3IGZvciBoaW0sIGJ1dCBoZSdzIG5vdyBpbiByZW1pc3Npb24gZm9yIGJvdGggYW5kIGJhY2sgdG8gaGlzIGxvbmcgYmlrZSByaWRlcywgcGxhdGZvcm0gdGVubmlzLCBhbmQgY2hvaXIsIGFsb25nIHdpdGggYSBidW5jaCBvZiBvdGhlciBpbmRlcGVuZGVudCBhY3Rpdml0aWVzLiBTYXlpbmcgY2hlbW8gaXMgYSBkZWF0aCBzZW50ZW5jZSBpbiB5b3VyIGVhcmx5IDcwcyB3aXRob3V0IGtub3dpbmcgdGhlIHNldmVyaXR5IHNlZW1zIGxpa2Ugc2NhcmUgbW9uZ2VyaW5nLi4gCkluIG91ciBjb3VudHJ5LCBkZW1vY3JhdGljIGdvdmVybm1lbnRzIGhhdmUgYmVlbiBubyBiZXR0ZXIgdGhhbiBkaWN0YXRvcmlhbCBvbmVzLCBhbmQgdGhpbmdzIGhhdmUgbmV2ZXIgYmVlbiBhcyBiYWQgYXMgdGhleSBhcmUgdG9kYXkuIFRoZSB3aG9sZSBuYXRpb24gaXMgY3Vyc2luZyB0aGUgY29ycnVwdGlvbiBhbmQgaW5jYXBhYmlsaXR5IG9mIHRoZSBydWxlcnMuIApJZiB5b3UgYXJlIGZvbGxvd2luZyBzdGFuZGFyZCBwb2tlciBydWxlcywgYSBoZWFydCBmbHVzaCBhbmQgY2x1YiBmbHVzaCB3b3VsZCB0aWUgKGFzc3VtaW5nIGFsbCB0aGUgY2FyZHMgYXJlIHRoZSBzYW1lKS4gU28sIHlvdSBzZWUgd2h5IGl0IGlzIGltcG9ydGFudCB0byBhZ3JlZSB0byBhbGwgb2YgdGhlIHJ1bGVzIGJlZm9yZSB5b3Ugc3RhcnQgdGhlIGdhbWUuIChGdWxsIEFuc3dlcikuIApTaGVsbGhhcmJvdXIgQ291bmNpbCBoYXMgYW4gb3B0aW9uIHRvIGFjcXVpcmUgMTAgcG9rZXIgbWFjaGluZSBsaWNlbmNlcywgYW4gb3B0aW9uIHRoYXQgd2lsbCBsYXBzZSBpbiBPY3RvYmVyIDIwMTYuIERlcGVuZGluZyBvbiBwYXRyb25hZ2UsIHRoZSBjb3VuY2lsIGJlbGlldmVzIHRoZSBtYWNoaW5lcyB3b3VsZCBicmluZyBpbiBiZXR3ZWVuICQxMDAsMDAwIGFuZCAkMzUwLDAwMCBwZXIgYW5udW0uIApFdmVuIG5vdyB3aGVuIHlvdSBzZWUgdGhlIGRpZmZlcmVuY2Ugd2l0aCBFbnNsZXksIHNoZSB3YW50ZWQgaGVyLiAKSSB3b3VsZCBkZWZpbml0ZWx5IHJhbmsgdGhpcyBhbW9uZyBteSB0b3AgMyBNQ1Ugb3JpZ2luLCBhbG9uZyB3aXRoIElNMSBhbmQgQlAvQ0ExLnRvIG1lIGl0IGZlbHQgbGlrZSB0aGV5IHdlcmUuICJUaGUgQWNjdXNlcnMiIHNvdW5kZWQgbW9yZSBsaWtlIGEgbmFtZSBvZiBhIHNlcGFyYXRlIHRyaWJlIHRoYW4gYSBjYWxsIHNpZ24gdGhvdWdoIEkgY29uY2VkZSB0aGF0IG1heSBoYXZlIGJlZW4gdGhlIG5hbWUgb2YgdGhlaXIgZmFjdGlvbi5PbiBhIHNpZGUgbm90ZSwgdGhpcyBtb3ZpZSBqdXN0IGxlZnQgbWUgd29uZGVyaW5nIHdoYXQgcG9pbnQgaXQgaXMgdGhhdCBSb25hbiBnb2VzIGZyb20gYmVpbmcgb2JlZGllbnQgdG8gbWFuaWFjYWwgYW5kIHdoZW4gS29yYXRoIHN3aXRjaGVzIHNpZGVzIHRvIGpvaW4gUm9uYW4uIApXaGlsZSB0aGUgcG9zaXRpb24gZ2l2ZXMgTWNLZWVoZW4gYSBjbGVhciBhZHZhbnRhZ2UsIHRoZXJlIHN0aWxsIHBsZW50eSBvZiB3b3JrIGFoZWFkIHRvIHNlY3VyZSBhIHdpbi4gQ2hpcHMgaGF2ZSBubyBtb25ldGFyeSB2YWx1ZSBhdCB0aGUgdG91cm5hbWVudDsgcGxheWVycyBtdXN0IGxvc2UgYWxsIHRoZWlyIGNoaXBzIHRvIGJlIGVsaW1pbmF0ZWQgb3Igd2luIGFsbCB0aGUgY2hpcHMgaW4gcGxheSB0byB3aW4gYXMgbWluaW11bSBiZXRzIHJpc2UgZXZlcnkgdHdvIGhvdXJzLgpPcmFsIGFuYWwgbG92ZW1ha2luZyBpcyBwb3B1bGFybHkga25vd24gYXMgcmltbWluZy4gW1NlZSBteSBwb3N0IEFuYWxpbmd1czogVGhlIERhcmsgS2lzcy5dIFRoZSB2ZXJ5IGlkZWEgZGlzZ3VzdHMgc29tZSBwZW9wbGUuIApCb2x0b24gZXZlbiBicmllZmx5IGNvbnNpZGVyZWQgcnVubmluZyBmb3IgcHJlc2lkZW50IGluIDIwMTYsIGluIHBhcnQgdG8gbWFrZSB0aGUgY2FzZSBhZ2FpbnN0IHRoZSBpc29sYXRpb25pc20gdGhhdCBUcnVtcCB3b3VsZCBjb21lIHRvIGVtYm9keS4uIApTY290YnVkMTIzICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkluIGVhcmxpZXIgdGltZXMgSSBwdXQgdGhlbSBpbnRvIG15IHRvd2VsIGFuZCB3cmFwcGVkIGl0IGFyb3VuZCB0aGVtLiBUaGVuIHRoZXJlIGlzIG9mdGVuIGEgcmFjayBzb21ld2hlcmUgaW4gdGhlIFNwYSB3aGVyZSB5b3UgY2FuIHB1dCBpdC4gQnV0IHNpbmNlIG15IHZpc2lvbiBpcyBxdWl0ZSBiYWQgSSB3YXMgc3RydWdnbGluZyB0byBtb3ZlIGFyb3VuZCBhbmQgZmluZCBhIHBsYWNlIHdpdGhvdXQgc3RhcmluZyBhdCBwZW9wbGUgKHNpbmNlIEkgY291bGRuIHNlZSB0aGVtIHdlbGwpLk5vdywgSSBqdXN0IGtlZXAgb24gd2VhcmluZyBteSBnbGFzc2VzLCBib3RoIGluIFNhdW5hLCBzdGVhbSByb29tIGFuZCBwb29sLiAKU28gSSB0aGluayBJIGluIGJldHRlciBzaGFwZSBub3cgdGhhbiBJIHdhcyB0aGVuLiBUaGF0IHdhcyBhbHNvIHNvbG8uUGVuZGluZyB3aGF0IHRoZSBkb2N0b3Igc2F5cywgSSBtYXkgdGFrZSBhIGZldyB3ZWVrcyBvZmYgYW5kIGF2b2lkIHRoZSBpbXBhY3QgKG9yIGp1c3QgdXNlIHRoZSBlbGxpcHRpY2FsIGF0IHRoZSBZIGluc3RlYWQpLiAKSGUgd2VhcnMgYSBjZXJ0YWluIGNvbG9nbmUgdGhhdCBqdXN0IHdvcmtzIHNvIHdlbGwgd2l0aCBoaXMgYm9keSBjaGVtaXN0cnkgYW5kIGl0IG1ha2VzIG1lIHdhbnQgdG8ganVtcCBoaXMgYm9uZXMuIApUbyBKb3JkYW4gKFIgT2hpbyk6IFNoYW1lIG9uIHlvdSBNci4gSm9yZGFuLiBTaGFtZSBvbiB5b3UuIFRoYXQgbm90IHdoYXQgaSB3YXMgc2F5aW5nIGFuZCB0aGF0IG5vdCB3aGF0IGl0IChzdGF0ZW1lbnQgb2YgQ29oZW4gc2luY2VyaXR5IG9uIGEgcG9zdGVyYm9hcmQgZnJvbSB0aGUgU291dGhlcm4gRGlzdHJpY3Qgb2YgTlkpIHNheXMuIEkgd2FzIHRlbGxpbmcgdGhlIGdlbnRsZW1hbiBoaXMgZmFjdHMgd2VyZSB3cm9uZy4gSSBvd24gTVkgbWlzdGFrZXMgYW5kIEkgYW0gZ29pbmcgdG8gcHJpc29uIGZvciB5ZWFycyAgIGF3YXkgZnJvbSBteSBmYW1pbHkuIFBlb3BsZSBhcmUgd2F0Y2hpbmcgdGhpcyBhbmQgd2F0Y2hpbmcgeW91LgpBbGxlZ2VkIG93bmVycyBhbmQgbWFuYWdlcnMgZmFjZSBhIHJhbmdlIG9mIHByb3N0aXR1dGlvbiByZWxhdGVkIG9mZmVuc2VzLiBBdCBsZWFzdCBvbmUsIDQ5IHllYXIgb2xkIExhbiBZdW4gTWEsIG9mIE9ybGFuZG8sIGZhY2VzIGh1bWFuIHRyYWZmaWNraW5nIGNoYXJnZXMuIApUaGVyZSB3YXMgbm8gY2xlYXIgYXNzb2NpYXRpb24gYmV0d2VlbiB0aGUgaW50YWtlIG9mIHRvdGFsIFBVRkEsIGxpbm9sZWljIGFjaWQsIGFscGhhIGxpbm9sZW5pYyBhY2lkLCBhbmQgTVVGQSBhbmQgY29nbml0aXZlIGZ1bmN0aW9uLgpCdXQgcmVnYXJkaW5nIGFybWllcywgdGhlIGVuZGluZyBvZiBUYWN0aWNzIHNlZXMgdGhlIFdhcnJpb3IgdGFraW5nIG92ZXIgYSBwcmUgd2FyIHJvYm90IGNvbnRyb2xsaW5nIGEgdmF1bHQgbmFtZWQgdGhlIENhbGN1bGF0b3IgYW5kIGdhaW5pbmcgYWNjZXNzIHRvIHRoZSBmYWNpbGl0aWVzIGl0IHVzZWQgdG8gY2h1cm4gb3V0IGEgcm9ib3QgYXJteS4gCldpZSBnZW5hdSBtYW4gZGFzIHVtc2V0emVuIHNvbGwsIGlzdCBhbGxlcmRpbmdzIHNjaHdpZXJpZy4gRnJlaSB6dWduZ2xpY2hlIEdlaGFsdHNsaXN0ZW4gZnIgYWxsZT8gV3JkZW4gZWluaWdlIHNpY2hlcmxpY2ggbmljaHQgd29sbGVuLiBFaW5lIEFuZ2FiZSBwcm8gUGVyc29uLCB3aWUgdmllbCBQcm96ZW50IGRlcyBEdXJjaHNjaG5pdHRzZ2VoYWx0cyBzaWUgZnIgaWhyZW4gQmVydWYgaW4gaWhyZW0gQmV0cmllYiBiZWtvbW1lbj8gSXN0IGRhbm4gYW5vbnltaXNpZXJ0ZXIsIGFiZXIgZXZ0bC4gCkFib3V0IGZpdmUgeWVhcnMgYWdvIHdlIHdlcmUgbHVja3kgZW5vdWdoIHRvIHNwZW5kIGEgd2VlayBvdXQgaW4gVmVnYXMgZm9yIGEgYmFjaGVsb3IgcGFydHkuIEknbSBub3QgYWJvdXQgdG8gZ28gaW50byB0aGUgZGV0YWlscyBvZiB0aGUgdHJpcCBiZWNhdXNlIGV2ZXJ5b25lIGtub3dzIHdoYXQgaGFwcGVucyBpbiBWZWdhcyBzdGF5cyBpbiBWZWdhcy4gSG93ZXZlciwgdGhlcmUgaXMgc29tZXRoaW5nIEkgd2FudGVkIHRvIHRhbGsgYWJvdXQgd2hpbGUgd2UgZW5qb3llZCB0aGUgY2FzaW5vcy4gV2Ugd2VudCB0byB0aGlzIHBsYWNlIHRoYXQgaGFkIHNvbWV0aGluZyBvbiB0aGUgcm9vZiwgSSBiZWxpZXZlIGl0IHdhcyBjYWxsZWQgdGhlIFN0cmF0b3NwaGVyZS4gVW5iZWxpZXZhYmxlIHBsYWNlIGFuZCB2ZXJ5IGluZXhwZW5zaXZlIGZvciB0aG9zZSBvZiB5b3UgbG9va2luZyB0byB0YWtlIGEgdHJpcC4KQmlsbCBpcyBzdXJ2aXZlZCBieSBoaXMgc2lzdGVyIEp1ZGl0aCBCZWFuIChEb24gTWl0dG9uKSBvZiBGbGVzaGVydG9uLCBicm90aGVyIEppbSBCZWFuIChCZXZlcmxleSBZYXRlcykgb2YgQ2FsbGFuZGVyLCBPTiwgYW5kIHNpc3RlciBKb2FuIEVkZW5ib3JvdWdoIG9mIFdlc3QgTW9udHJvc2UsIGFzIHdlbGwgYXMgbWFueSBuaWVjZXMgYW5kIG5lcGhld3MuIEluIHRoZSBsYXRlIHNpeHRpZXMsIEJpbGwgYmVnYW4gYSBsb25nIGFuZCBzdWNjZXNzZnVsIGNhcmVlciBpbiB0aGUgcm9vZmluZyBpbmR1c3RyeS4gCkJ1dCwgQnVuY29tYmUgQ291bnR5IFNoZXJpZmYgVmFuIER1bmNhbiBzYXlzIGhpcyBvZmZpY2UgZG9lc24gaGF2ZSBhIHJlY29yZCBvZiBhIGNhbGwgbWFkZSBmcm9tIEVpbGVlbiBob21lLiAKQXMgbG9uZyBhcyBJIGFtIG1ha2luZyBjb3JyZWN0IGRlY2lzaW9ucyBJIGtub3cgdGhhdCB0aGUgcmVzdWx0cyB3aWxsIGZvbGxvdy4uIApIYXZlIGEgdGhpY2sgcGlsbG93IGZvciBqdXN0IGFib3ZlIHlvdXIgc2hvdWxkZXIgZm9yIHlvdSBoZWFkIHNvIHlvdXIgc2hvdWxkZXIgaXNuIGFjdHVhbGx5IHN1cHBvcnRpbmcgdGhlIHBpbGxvdyBhbmQgaGVhZCBpdCBiZWxvdyBpdC4gCkF0IGZpcnN0IGl0IHdhcyBtZSBhbmQgbXkgZnJpZW5kcyB3aG8gcGxheWVkLCB3ZSBzdGFydGVkIHdpdGggMTMgcGxheWVycyB0aGUgZmlyc3QgbW9udGguIFdlIGp1bXBlZCB1cCB0byBoaWdoIHRlZW5zIHdpdGhpbiBhIHllYXIsIGFuZCBzdGF5ZWQgdGhlcmUgZm9yIHRoZSBmaXJzdCAyIDMgeWVhcnMuIApQcmVzcyB0aGUgcmUgZGlhbCBvbiB0aGUgcGhvbmUgb3IgNjkuIApEYXJ3aW4gc2hvd2VkIHRoYXQgdGhlIGludHJpY2F0ZSBjb21wbGV4aXR5IG9mIGxpZmUgYW5kIHRoZSBpbnRyaWNhdGUgcmVsYXRpb25zaGlwcyBhbW9uZyBsaWZlIGZvcm1zIGNvdWxkIGVtZXJnZSBhbmQgc3Vydml2ZSBmcm9tIG5hdHVyYWwgcHJvY2Vzc2VzLCB3aXRoIG5vIG5lZWQgZm9yIGEgZGVzaWduZXIgb3IgYW4gYXJrLiBIZSBvcGVuZWQgdGhlIGh1bWFuIG1pbmQgdG8gcHVyc3VpbmcgbmF0dXJhbCBzY2llbmNlIHVuaW1wYWlyZWQgYnkgc3VwZXJuYXR1cmFsIHByZWp1ZGljZXMuIApUaGUgZmlyc3QgdmFyaWFudHMgb2YgcG9rZXIgd2VyZSBwbGF5ZWQgYmFjayBpbiB0aGUgMTl0aCBjZW50dXJ5IGFuZCBzaW5jZSB0aGF0IG1vbWVudCB0aGlzIGNhcmQgZ2FtZSBiZWNhbWUgZXh0cmVtZWx5IHBvcHVsYXIgYW1vbmcgZ2FtYmxlcnMuIFRoZSBJbnRlcm5ldCBtYWRlIGl0IHBvc3NpYmxlIGZvciBwb2tlciBmYW5zIHRvIHBsYXkgcG9rZXIgb25saW5lIG9uIHNwZWNpYWxseSBkZXNpZ25lZCBzaXRlcyB0aGF0IHVzZSBzcGVjaWFsIHBva2VyIHNvZnR3YXJlLiBGdXJ0aGVybW9yZSwgcG9rZXIgZmFucyBjYW4gYWxzbyBlbmpveSBwbGF5aW5nIHBva2VyIGRpcmVjdGx5IG9uIHRoZWlyIG1vYmlsZSBkZXZpY2VzIGlmIHRoZSBzaXRlIG9mZmVycyBhIG1vYmlsZSBhcHBsaWNhdGlvbi4uIApTbyBpdCBhbHdheXMgZGVwZW5kcyBvbiB0aGUgY2hlbWljYWwgeW91IGFmdGVyIGJ1dCBpdCBiYXNpY2FsbHkgY29tZXMgZG93biB0byBrbm93aW5nIHdoYXQgeW91ciBjaGVtaWNhbCBkb2VzIGFuZCBpdHMgcHJvcGVydGllcy4gCkkgY2FsbGVkIG15IGRhZCBhdCBoaXMgbXVzaWMgc3RvcmUgYW5kIG9uZSBvZiBoaXMgZW1wbG95ZWVzIGFuc3dlcmVkIGFuZCBJIHRvbGQgdGhlbSB0byBnZXQgbXkgZGFkIG9uIHRoZSBwaG9uZSByaWdodCBhd2F5LiBJJ3ZlIGdvdCBteXNlbGYgaW50byB0cm91YmxlIGEgZmV3IHRpbWVzIGJlZm9yZSBhbmQgaGFkIHRvIGNhbGwgbXkgZGFkIGZvciBoZWxwIG9yIGFkdmljZS4gCkhvbGQgdGhlIHBhbiB1cCB0byB0aGUgdHJhbnMgYW5kIGxpbmUgdXAgdGhhdCBib2x0IGhvbGUuIFN0YXJ0IHRoZSB0aHJlYWRzIGFuZCBtYWtlIGEgY291cGxlIHR1cm5zLiAKIkl0J3MgZGVwbG9yYWJsZSBjb25kdWN0LiIgVGhlIGNvdXJ0IGhlYXJkdGhlIHZpY3RpbSBhbmQgYSBmcmllbmQgd2VyZXBsYXlpbmcgdGhlIHBva2VyIG1hY2hpbmVzIGFyb3VuZCA4cG0gb24gTWFyY2ggNiBsYXN0IHllYXIgd2hlbiBCbGVpbXV0aCBjYW1lIGFuZCBzYXQgbmVhciB0aGVtIGFuZCBiZWdhbiBzdGFyaW5nIGluIHRoZWlyIGRpcmVjdGlvbi4gVGhlIHZpY3RpbSB3ZW50IHRvIHRoZSBiYXRocm9vbSBidXQgb24gaGlzIHJldHVybiBmb3VuZCBCbGVpbXV0aCBzdGFuZGluZyBpbiB0aGUgZW50cnkgZG9vcndheSwgaG9sZGluZyBhIGJlZXIgZ2xhc3MuIENDVFYgZm9vdGFnZSBzaG93cyB0aGUgcGFpciBoYXZpbmdhIGJyaWVmIGJ1dCBhcHBhcmVudGx5IGNpdmlsIGV4Y2hhbmdlIG9mIHdvcmRzIGJlZm9yZSBCbGVpbXV0aCBsYXVuY2hlc2ludG8gYW4gdW5wcm92b2tlZCBhc3NhdWx0LCBwdW5jaGluZ3RoZSB2aWN0aW0gdHdpY2UgaW4gdGhlIGhlYWQgd2l0aCBoaXMgZW1wdHkgbGVmdGhhbmQsIHRoZW4gc3dpbmdpbmcgaGlzIHJpZ2h0IGhhbmQsIGNvbnRhaW5pbmcgdGhlZ2xhc3MsaW50byB0aGUgdmljdGltJ3MgbmVjay4gCkJ1dCBJIHN0aWxsIGxvdmUgdGhlIGVhc2Ugb2YgYW4gYWxsIEJsYWNrIENhdmVuZGlzaCBhcm9tYXRpYy4gClRoZXJlIGFyZSBhIGZldyBodW5kcmVkIGNhc2lub3MgYW5kIHRlbnMgb2YgdGhvdXNhbmRzIG9mIHBsYXllcnMuIApBbHNvIGRvbid0IGJlIGFmcmFpZCB0byB0YWtlIHNvbWV0aGluZyBwYXJ0IHRpbWUsIGFzIHRoYXQgY2FuIGxlYWQgaW50byBmdWxsIHRpbWUgd29yayBhZnRlciB0aGV5IGtub3cgeW91Li4gClNvb24gZW5vdWdoIHJlYmVscyBwb3BwZWQgYWxsIG92ZXIgbXkgcHJvdmluY2VzLiAKQ2FkaW4gdG9kYXkuIFRocmVlIHdvbWVuIGNvbXBsYWluZWQgdG8gcG9saWNlIHRvZGF5IG9mIGxvc2luZyBtb25leSwgYW5kIGluIGVhY2ggaW5zdGFuY2UgdGhlIGxvc3Mgd2FzIGF0dHJpYnV0ZWQgdG8gdGhlIHdvcmsgb2YgcHJvZmVzc2lvbmFsIHBpY1Nwb2NmY2V0cy4gUHJldmlvdXMgZXhwZXJpZW5jZSBieSBwb2xpY2Ugb2YgIGZpY2lhbHMgcmVzdWx0ZWQgaW4gdGhlIGFzc2lnbm1lbnQgb2YgbWFueSBkZXRlY3RpdmVzIHRvIGRvd250b3duIHN0b3JlcyBtb3JlIHRoYW4gdHdvIGFnbyBpbiBhbiBlZiAgam9ydCB0byBjYXB0dXJlIGFueSBrbm93biAiZGlwLiAKTWVtb3JpYWwgZG9uYXRpb25zIG1heSBiZSBtYWRlIHRvIHRoZSBPVkMgUGV0IFRydXN0IG9yIFRoZSBHdWVscGggQXJib3JldHVtIGlmIGRlc2lyZWQuLiAKU2hlIGRvdmUgaW50byBkYWlseSBCaWJsZSBzdHVkeSBhbmQgcmVndWxhciwgZml2ZSB3ZWVrIHNlbWluYXJzIG9uIHRoZSBib29rcyBvZiBEYW5pZWwgYW5kIFJldmVsYXRpb24sIHByb3BoZWN5LCBhbmQgdGhlIGVuZCBvZiBkYXlzLiBTaGUgc291Z2h0IHN0YWJpbGl0eSBpbiBhIG1hcnJpYWdlIHdpdGhpbiB0aGUgY29uZ3JlZ2F0aW9uLiBBbHRob3VnaCBzaGUgaGFkIGJlZW4gc2V4dWFsbHkgYWN0aXZlIGluIGNvbGxlZ2UsIEplc3Mgd2VudCB0aHJvdWdoIGEgcmUgYmlydGggaW4gaGVyIGNodXJjaC4gCkhvbmVzdGx5IGJlY2F1c2UgSSdtIHN0aWxsIGluIHRoYXQgc3dlZXQgc3dlZXQgZGVwcmVzc2l2ZSBsb3csIGl0J3MgaGFyZCB0byBmZWVsIGdvb2QgYWJvdXQgbXkgYWNjb21wbGlzaG1lbnQuIEkgY2FuIGxvb2sgYXQgdGhlIG51bWJlcnMgYW5kIHNlZSB0aGF0IEkgZGlkIHdlbGwgYnV0IGl0IGlzbid0IHNpbmtpbmcgaW4gYW5kIGRvZXNuJ3QgZmVlbCBsaWtlIGEgYmlnIGRlYWwuIEJ1dCBJIGZlZWwgYSBiaXQgZ2xhZCB0aGF0IEkgc2F3IG15IHRyYWluaW5nIHRocm91Z2ggYW5kIEkgZGlkIGl0LgpDIHVuZSBwbGFudGUgZGUgZHBsYWlzYW50ZSBvZGV1ciBldCBhbXJlIGF1IGdvdC4gClBheWluZyAkNDAwIEEgbW9udGggZm9yIGEgc2hpdHR5IHJvb20gaW4geW91ciBmcmllbmQgaG91c2Ugd2hlcmUgdGhlIHdhbGxzIGFyZSBzbyB0aGluIHRoYXQgeW91IGNhbiBldmVuIGNvbWZvcnRhYmx5IGJlYXQgb2ZmIHRvIGVwaXNvZGVzIG9mIFBva2VyIEFmdGVyIERhcmsuIEFueXdheSwgdXNpbmcgZ29vZCBiYW5rcm9sbCBtYW5hZ2VtZW50LCBtb3ZlIHVwIGluIHN0YWtlcyBhY2NvcmRpbmdseSB1bnRpbCB5b3UgaGF2ZSBzYXZlZCB1cCBhIGJhbmtyb2xsIG9mICQ1LDAwMC4gVGhpcyBpcyBhbm90aGVyIHN0YWdlIGluIHlvdXIgZGV2ZWxvcG1lbnQgYW5kIGEgc2VyaW91cyBtaWxlc3RvbmUuIApTcGVuZGluZyBhIGxvdCBvbiBhIHdlZGRpbmcgcmluZyBpcyBhIGJpZyBkZWNpc2lvbiBhcyBhIGxvdCBvZiBtYXJyaWFnZXMgZW5kIGJlY2F1c2Ugb2YgZmluYW5jaWFsIGRpZmZpY3VsdGllcyB0aGF0IHNub3diYWxsIGludG8gb3RoZXIgcHJvYmxlbXMuIEkgc3VnZ2VzdCB0aGlua2luZyBhYm91dCBidXlpbmcgYW4gYWZmb3JkYWJsZSByaW5nIGFuZCB0aHJvd2luZyB0aGF0IGV4dHJhIG1vbmV5IGludG8gc2F2aW5ncy4gClVuZSBmZW1tZSBlbiBzdXJwb2lkcyBwZXV0LCBjb21tZSBiZWF1Y291cCBkJ2F1dHJlcyBmZW1tZXMsIHJlbmNvbnRyZXIgZGVzIGRpZmZpY3VsdHMgZGFucyBzb24gZHNpciBkZSBncm9zc2Vzc2UuIExhIHBlcnRlIGRlIHBvaWRzIGVzdCBzb3V2ZW50IHJjbGFtZSBwYXIgbGVzIG1kZWNpbnMuIFN1cnRvdXQgcXVhbmQgb24gc2UgdHJvdXZlIGVuIGRpZmZpY3VsdCBkJ2F2b2lyIHVuIGVuZmFudC4gUXUnZW4gZXN0IGlsID8gbGwgeSBhIGJpZW4gZGVzIGNvbnNxdWVuY2VzIHJlbGxlcywgY29uc3RhdGVzLCBkdSBzdXJwb2lkcyBzdXIgbGEgZmNvbmRpdCA6ClNoZSBpcyB0cmVtZW5kb3VzbHkgcnVkZSB0byBwZW9wbGUgdGhhdCBhc2sgaGVyIHF1ZXN0aW9ucyB0cnlpbmcgdG8gdW5kZXJzdGFuZCB3aGF0J3MgZ29pbmcgb24uIApNeSBiZmYgaXMgbm90IGdvb2QgYXQgcGxhbm5pbmcgdGhpbmdzLCBzbyBoYXZpbmcgaGVyIGRvIGEgYmFjaGVsb3JldHRlIHBhcnR5IHdvdWxkIGhhdmUgYmVlbiB0ZXJyaWJsZS4gClNvbWUgY2VsbHVsaXRlIHByZXBhcmF0aW9ucyBhbmQgdHJlYXRtZW50cyBmYWxsIGludG8gdGhpcyBjYXRlZ29yeS4gVGhhdCdzIG9uZSByZWFzb24gdGhlIGVmZmVjdGl2ZW5lc3MgY2xhaW1zIGZvciBjZWxsdWxpdGUgcHJlcGFyYXRpb25zIGFuZCB0ZWNobm9sb2dpZXMsIGVzcGVjaWFsbHkgdGhvc2Ugb2ZmZXJpbmcgc3BlY3RhY3VsYXIgcmVzdWx0cywgc2hvdWxkIGJlIGFwcHJvYWNoZWQgd2l0aCBjYXV0aW9uIGFuZCBzb21lIGhlYWx0aHkgc2tlcHRpY2lzbS4gCkl0IHdvdWxkIGhhdmUgYmVlbiBuaWNlIHRvIHdpbiBvbmUgb2YgdGhvc2UgY29pbiBmbGlwcyB3aXRoIHBvY2tldCBzaXhlcywgdG9vISBNZW50YWwgYW5kIHBoeXNpY2FsIHByZXBhcmF0aW9uIGlzIGNyaXRpY2FsIGluIHRvdXJuYW1lbnQgcG9rZXIgZXZlbnRzIGxpa2UgdGhlIFdTT1AuIElmIEkgaGFkIGp1c3QgYmVlbiBhYmxlIHRvIG1ha2UgaXQgdW50aWwgRGF5IDMsIHdpdGggdGhlIGJlbmVmaXQgb2YgYSBzdHJlbnVvdXMgbGF0ZSBuaWdodCB3b3Jrb3V0IGFuZCBhIGdvb2QgbmlnaHQncyBzbGVlcCwgbWF5YmUgSSB3b3VsZCBoYXZlIGJlZW4gYWJsZSB0byBmb2xkIGEgaGFuZCBsaWtlIHBvY2tldCBzaXhlcyBhbmQgc3RpY2sgYXJvdW5kIHRvIGNsYWltIGFub3RoZXIgY2hhbXBpb25zaGlwIGJyYWNlbGV0LiAKU3ltcHRvbXMgb2YgYmxvb2Qgc3RhZ25hdGlvbiBoZWFkYWNoZXMgYXJlIGEgc2hhcnAsIGZpeGVkLCBzdGFiYmluZyBwYWluIGluIGEgc3BlY2lmaWMgbG9jYXRpb24sIGEgd2lyeSwgY2hvcHB5IHB1bHNlLCBhbmQgYSBwdXJwbGUgdG9uZ3VlLiAKSSBsb3ZlIGdyYXBoaWMgZGVzaWduIGFuZCBldmVudCBwbGFubmluZy4gSSB0ZW5kIHRvIGJlIHByb2plY3Qgb3JpZW50ZWQsIGFuZCBhY3R1YWxseSB3b3JrIGJldHRlciBpbiBhIGZhc3QgcGFjZWQgZW52aXJvbm1lbnQgdGhhdCBhY3RpdmF0ZXMgbXkgcGFuaWMgYnV0dG9ucywgYWxsb3dzIG1lIHRvIHJlc2VhcmNoIG5ldyB0aGluZ3MgYWxsIHRoZSB0aW1lLCBhbmQgd29yayBpbiB3YXlzIHRoYXQgYXJlIGxlc3MgOSA1IGFuZCBtb3JlLCBBSCBJIGhhdmUgdG8gdGhyb3cgdGhpcyB0aGluZyB0b2dldGhlciBpbiBhIHdlZWshISEhIEkgdGhlbiBjYW4gdGFrZSBhIHdlZWsgb3IgdHdvIG9mZiBhZnRlciBhIGJpZyBkZWFkbGluZSBpcyBtZXQuIEl0IHdvcmtzIGZvciBtZS4gQW5kIGFwcGFyZW50bHkgZm9yIG90aGVyIHBlb3BsZSwgYmVjYXVzZSBJIGhhdmUgYXdlc29tZSBjbGllbnRzIQpJIHJlbWVtYmVyIG1ha2luZyB0aGVzZSBsb25nIHJhYmJpdHMgaW4gdGhlIHNhbWUgYW1pZ3VydW1pIHN0eWxlLiAKRmxvb3IgbWFuYWdlcnMgYXJlIGhhbGYgZ29vZCBoYWxmIGF3ZnVsLiAKT24gb3VyIHdheSBiYWNrIHRvIExlb24gZm9yIGRpbm5lciB3ZSBzdG9wcGVkIGZvciBnYXMuICQ1MCBsYXRlciAoZm9yIGEgSHl1bmRhaSBBY2NlbnQhKSBJIHJlYWxpemVkIHdoeSBzbyBmZXcgcGVvcGxlIGhhdmUgY2FycywgYW5kIHdoeSB0aGVyZSBhcmUgMjcgcGVvcGxlIGluIGV2ZXJ5IHBpY2t1cCB0cnVjaywgYW5kIHdoeSBhIGhvcnNlIGFuZCBjYXJ0IGlzIHN0aWxsIGEgdmlhYmxlIHRyYW5zcG9ydGF0aW9uIG9wdGlvbi4gClBybyBzZXBhcmF0aW9uIHBlb3BsZSBhcmUgYWdncmVzc2l2ZWx5IHNlcGFyYXRpc3RzLCBnZW5lcmFsbHkgd2FudGluZyBhIG5hbWUgY2hhbmdlIChubyBsb25nZXIgUk9DLCBtYXliZSBSTyBUYWl3YW4gb3Igc29tZXRoaW5nKSwgYW5kIGNoYW5nZWQgY29uc3RpdHV0aW9uLCBjaGFuZ2UgYWxsIGxlZ2FsIGJpbmRpbmcsIGV0YywgYW5kIHNjcmV3IHRoZSByZXBlcmN1c3Npb25zIHRoYXQgQ2hpbmEgbWF5IGhhdmUuIApJdCBkb2VzbiBtYXR0ZXIgaWYgYW55IG9mIHRoZSBGQUFORyBjb21wYW5pZXMgaGF2ZSBhIG1vbm9wb2x5LiBUaGluZ3MgbGlrZTogQW1hem9uIG9mZmVyaW5nIHRvIGJ1eSBaYXBwb3MgLyBCYWJpZXNkb3Rjb20sIGdldHRpbmcgcmVqZWN0ZWQsIGFuZCB0aGVuIHJlbGVhc2luZyBhIGNvbXBldGluZyBwcm9kdWN0IGF0IGEgbmV0IGxvc3MgdW50aWwgdGhlIGNvbXBhbmllcyB3ZXJlIGZvcmNlZCB0byBiZSBhY3F1aXJlZCBvciBmYWNlIGJhbmtydXB0Y3kuIEFtYXpvbiBsaXN0aW5nIGl0IG93biBwcm9kdWN0cyBhaGVhZCBvZiBjb21wZXRpbmcgcHJvZHVjdHMgaW4gaXQgbWFya2V0cGxhY2UuClNlcmlvdXMgbWVudGFsIGlsbG5lc3MgcmVwcmVzZW50cyAxOCUuIE5vdywgdGhlcmUgaXMgY2VydGFpbmx5IG92ZXJsYXAgaW4gbW9yZSB0aGFuIGEgZmV3IGNhdGVnb3JpZXMgd2l0aCB2ZXRlcmFucygyMCUpIGFuZCBjaHJvbmljYWxseSBob21lbGVzcyAgdGhvc2Ugd2hvIGNob29zZSB0byBiZSBob21lbGVzcyAoMzMlKS4gSSBkbyBoYXZlIGZyaWVuZHMgaW4gdGhlIGNocm9uaWNhbGx5IGhvbWVsZXNzIGNhdGVnb3J5LCBhbmQgdGhleSBhYnNvbHV0ZWx5IG5ldmVyIHBsYW4gb24gYmVpbmcgaW4gYSBob21lIGFnYWluLCBhbmQgaW4gMiBwYXJ0aWN1bGFyIGNhc2VzLCB0aGV5IGFyZSBzb2JlciwgYW5kIHdoaWxlIG5vdCBzb2xpZGx5IGdyb3VuZGVkIGluIHRoZSBzYW1lIHJlYWxpdHkgYXMgbWUsIHNlZW0gbGlrZSBwZXJmZWN0bHkgZnVuY3Rpb25pbmcgYWR1bHRzLi4gCkhhaGFoYWggdGhhdCBmaW5lLiAKVW4gdHJhbnNmZXJ0IGRlIExhdCAgTHQgbWFycXVlLCBjb21tZSBub3VzIGwgSmFjcXVlcyBCcm9zc2UsIHVuZSBhbm5leGlvbiBwb2xpdGlxdWUgZXQgcmVsaWdpZXVzZSBwYXIgbGVzIEhlbGxuZXMgKDQpIGQgdGhtZSBhcmNoYXF1ZS4gQ2UgcXVpIGVzdCBjdXJpZXV4LCBjIHF1IHRyYXZlcnMgbCBkZSBsYSBuYWlzc2FuY2UgZGVzIGp1bWVhdXgsIGwgbiBwYXMgYWZmYWlyZSAgdW4gcGhub21uZSBkZSBzdWJzdGl0dXRpb24sIGV0IHF1ZSBsIG4gcGFzIHJlbXBsYWMgbGUgcGFsbWllciBvcmlnaW5lbCBwYXIgdW4gYXJicmUgIGxhIHBvcnRlIHN5bWJvbGlxdWUgcXVpdmFsZW50ZSBldCBlbmRtaXF1ZSAgbGEgR3JjZS4gCk5vdyBoZXJlIGFyZSBzb21lIENvbnMgb2YgdGhlIHNpdGUuIENhc2ggR2FtZSBzdHJ1Y3R1cmVzIGFyZSBzaW1wbHkgYSBqb2tlLCB0aGUgYWN0aW9uIGlzIGp1c3QgYmV5b25kIGluc2FuZSB5ZXMsIGJ1dCB0aGV5IGhhdmUgc3RyaWN0IHJ1bGVzLCBzdWNoIGFzIG5vIGJ1bSBodW50aW5nLCBhbmQgbm8gcHJlZGF0b3J5IGJlaGF2aW91ciwgSSBnZXQgdGhlIGJ1bSBodW50aW5nIHBhcnQgYnV0IGNoZWNrIHRoaXMgb3V0LiBGb3IgUExPIDEwMCwgbWluIGJ1eSBpbiBpcyAxMCBkb2xsYXJzLCBQTE8gNTAgaXQgNSBkb2xsYXJzLCBQTE8gNDAwIGl0IDQwIG1pbiwgeW91IGdldCB0aGUgaWRlYS4gCmwnYXViZSBkJ3VuZSBub3V2ZWxsZSBsb2kgYXUgQ2FuYWRhCkkgdGhpbmsgb2YgdGhpcyBlYWNoIHRpbWUgSSByZXZpZXcgYSBoYW5kcy4gV2hldGhlciBJIHdpbiBvciBsb3NlIHRoZSBoYW5kIEkgbG9vayB0byBzZWUgaWYgSSBhbSBtYWtpbmcgdGhlIHJpZ2h0IGRlY2lzaW9ucyBhdCB0aGUgdGltZSB0aGUgaW5mb3JtYXRpb24gaXMgcHJlc2VudGVkIHRvIG1lLiBBcyBsb25nIGFzIEkgYW0gbWFraW5nIGNvcnJlY3QgZGVjaXNpb25zIEkga25vdyB0aGF0IHRoZSByZXN1bHRzIHdpbGwgZm9sbG93LgpJbiB0aGUgY2l0eSBvZiBUb3JvbnRvLCBzYWxlcyBvZiBob21lcyBvdmVyICQxIG1pbGxpb24gZmVsbCAxOSBwZXIgY2VudCwgd2hpbGUgc2FsZXMgb2Ygb3ZlciAkNCBtaWxsaW9uIGFuZCBtb3JlIGRyb3BwZWQgMzkgcGVyIGNlbnQuLiAKTWVhbndoaWxlLCBhIGdyb3VwIG9mIGFuaW1hbCByaWdodHMgYWN0aXZpc3RzIGxlZCBieSBKYXkgKFBhdWwgRGFubykgaXMgYWxzbyB0cnlpbmcgdG8gZnJlZSBPa2phLCBhbmQgdGhleSBoYXRjaCBhIHBsYW4gdG8gdGFrZSBNaWphIHRvIE5ldyBZb3JrIGFuZCBzdGFnZSBhIHZlcnkgcHVibGljIHJlc2N1ZS4uIApJZiBpdCBtYWtlcyB5b3UgZmVlbCB1bmNvbWZvcnRhYmxlLCBpdCBpbXBvcnRhbnQgZW5vdWdoIHRvIGRpc2N1c3Mgd2l0aCBoZXIuLiAKIlRoZSBFbGtoYXJ0IFBvbGljZSBEZXBhcnRtZW50IGhvbGRzIGl0cyBPZmZpY2VycyB0byBhIHZlcnkgaGlnaCBtb3JhbCwgZXRoaWNhbCBhbmQgcHJvZmVzc2lvbmFsIHN0YW5kYXJkLiBBcyBhIERlcGFydG1lbnQgd2UgdGFrZSBncmVhdCBwcmlkZSBpbiB0aGUgcHJvZmVzc2lvbmFsaXNtIG91ciBPZmZpY2VycyByb3V0aW5lbHkgZGlzcGxheSBpbiB0aGVpciBkYWlseSBkdXRpZXMgd2hpbGUgd29ya2luZyB3aXRoIHRoZSBjaXRpemVucyBvZiB0aGUgQ2l0eSBvZiBFbGtoYXJ0LiBIb3dldmVyIHdlIGFyZSBub3QgcGVyZmVjdCBhbmQgYWNrbm93bGVkZ2UgdGhhdC4iLiAKVGhlc2UgJDEwIHRvdXJuYW1lbnRzIGNhbiBnZXQgZGFuZ2Vyb3VzLiAKUmV2aWV3cyBvbiB0aGUgWWVscCEgV2ViIHNpdGUgaW5jbHVkZSBjbGFpbXMgdGhhdCBhIG1hbiB3aG8gd2VudCB0aGVyZSB3YXMgb2ZmZXJlZCBhICJoYXBweSIgZW5kaW5nIGFuZCB0aGF0IGEgd29tYW4gd2hvIHdlbnQgdGhlcmUgZm9yIGEgYmlraW5pIHdheCBzYXcgYSAicGFyYWRlIG9mIG1lbiIgZW50ZXIuCklmIHlvdSBjYW4ndCBtZWV0IG9yIGJlYXQgdGhlIHRvcCBjYXJkLCB5b3UgZWF0IGl0ICAgdGhhdCBpcywgeW91IHBpY2sgdXAgdGhlIGVudGlyZSBzdGFjaywgYW5kIHRoZW4gdHVybiBvdmVyIHRoZSBuZXh0IGNhcmQgaW4gdGhlIGRlY2sgdG8gc3RhcnQgdGhpbmdzIHVwIGFnYWluMS4uIApUaGVyZSB3YXMgb25lIG9mIHRob3NlIGFsbCBvcmdhbmljIGZhbWlsaWVzIGhlcmUgZm9yIGEgdGltZSwgaGFkIGEgc2V2ZXJlbHkgYXV0aXN0aWMgc29uLiBUaGV5IGRpZCBhbGwgc29ydHMgb2YgY2hlbGF0aW9uLCBldGMsIGFuZCBub3RoaW5nIHdvcmtlZC4gCihhdXRvbWF0aWMgZm9sZCBoYWhhKS4gCldoYXQgaW4gdGhlIHdvcmxkIGhhcHBlbmVkIHRvIERIPyBIZSB3ZW50IDE3IHllYXJzIG5vdCBzZWVpbmcgaGlzIHBhcmVudHMgYW5kIG5vdyBoZSB3YW50cyB0byBwcmV0ZW5kIGhhcHB5IGZhbWlseSBmb3JldmVyIHdpdGggdGhlbSBhbmQgYnJpbmcgbW9tbWllIGludG8geW91ciBob21lIFtmb3IgeW91IHRvIGxvb2sgYWZ0ZXI/XSBpZiBoaXMgZGFkIGRpZXM/IFdoYXQgaWYgaGlzIG1vbSBkaWVzIGZpcnN0LCBkb2VzIHRoYXQgbGl2ZSBpbiBvZmZlciBleHRlbmQgdG8gZGFkIGFzIHdlbGw/IEkgc3VzcGVjdCBzb21lIGNvdXBsZXMgdGhlcmFweSBtaWdodCBiZSBpbiBvcmRlciBoZXJlLiBJcyBESCBqZWFsb3VzIG9mIHlvdXIgZmFtaWx5IGFuZCB5b3VyIHJlbGF0aW9uc2hpcCB3aXRoIHRoZW0gYW5kIHdhbnQgdG8gcHJldGVuZCBoZSdzIGNsb3NlIHRvIGhpcyBmYW1pbHk/IEl0IHJlYWxseSBzb3J0IG9mIGdyYXRlZCBteSBuZXJ2ZXMgdGhhdCBoZSBiYXNpY2FsbHkgaW52aXRlZCBoaXMgcGFyZW50cyB0byBkZXNjZW5kIG9uIHlvdXIgZ3JhbmRwYXJlbnRzIHdpdGhvdXQgZGlzY3Vzc2luZyBpdCB3aXRoIHlvdSBmaXJzdC4uIApIYXJwb29uIHdpbGwgYmUgc3RhcnRpbmcgdGhlIFN0LiAKR2VzdGF0aW9uYWwgdml0YW1pbiBEIGRlZmljaWVuY3kgaXMgYXNzb2NpYXRlZCB3aXRoIGEgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgcmlzayBvZiBuZW9uYXRhbCBwbmV1bW9uaWEsIGEgZG91YmxlZCByaXNrIGZvciBwcmVlY2xhbXBzaWEsIGEgdHJpcGxlZCByaXNrIGZvciBnZXN0YXRpb25hbCBkaWFiZXRlcywgYW5kIGEgcXVhZHJ1cGxlZCByaXNrIGZvciBwcmltYXJ5IGNlc2FyZWFuIHNlY3Rpb24uIFRvbGQgdGhlbSB0aGF0IEkga25ldyB0aGF0IGFyZSBhbHJlYWR5IGJlaW5nIGRyaXZlbiBvdXQgb2YgcHJhY3RpY2UgYnkgbWFscHJhY3RpY2Ugc3VpdHMuIApSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUZ1biBQb2tlcjogRW5qb3kgdGhlIEdhbWUgYnkgVXNpbmcgT3VyIFdpbm5pbmcgUG9rZXIgVGlwcwpJdmV5IGlzIG9uZSBvZiB0aGUgYmVzdCBrbm93biBhbmQgbW9zdCByZXNwZWN0ZWQgcGxheWVycyBwZXJpb2QuIEhlIGlzIG9uZSBvZiB0aGUgcmFyZSBmZXcgcGxheWVycyB3aG8gZXhjZWxzIGF0IGJvdGggdG91cm5hbWVudHMgYW5kIGNhc2ggZ2FtZXMuIApXZSBqdXN0IGVhdCBjYWtlIGFmdGVyIHN1cHBlci4gSXQncyBhIHNtYWxsIHRoaW5nIHRoYXQgSSBob3BlIHdpbGwgaGVscCB0aGVtIGFzc29jaWF0ZSB0aGVpciBiYWJ5IGJyb3RoZXIgaW4gYSBwb3NpdGl2ZSBmYXNoaW9uIHNvbWUgZGF5IGluIHRoZSBmdXR1cmUuLiAKUGFuZHVuaWEgaXMgZXZlbmx5IGdsb2JhbApGb3IgbWUsIGl0IHdhcyBjcnlpbmcgaGFyZGVyIHRoZW4gSSBldmVyIGhhdmUuIEV2ZXJ5IGRheS4gTHlpbmcgb24gdGhlIGZsb29yIGluIHRoZSBmZXRhbCBwb3NpdGlvbi4gQWZ0ZXIgYSBnb29kIDMwIG1pbnV0ZXMgb2YgY3J5aW5nIHdpdGggZWFjaCBwYXNzaW5nIG1lbW9yeSwgaXQgc3RhcnRlZCB0byBnZXQgZWFzaWVyLiBFYWNoIG1lbW9yeSBJIGNyaWVkIGFib3V0LCBoZWxwZWQgbWUgaGVhbCwgYW5kIG1vdmUgb24uIE5vdyB3aGVuIEkgdGhpbmsgb2YgbXkgbWFycmlhZ2UgYW5kIG91ciBtZW1vcmllcywgSSBmZWVsIG5vdGhpbmcuIEknbSBhbGwgY3JpZWQgb3V0LgpEY2xhcmF0aW9uIGQnYWJzZW5jZSAoYXJ0LiBEYW5zIGNlIGNhcywgZGVzIG1lc3VyZXMgZGUgcHVibGljaXQgcGV1dmVudCB0cmUgcHJpc2VzIChhcnQuIApUaGUgQm91bGRlciBDb2xsZWdlIG9mIE1hc3NhZ2UgVGhlcmFweSB3aWxsIGhvc3QgaXRzIGZpbmFsIGNsYXNzZXMgbmV4dCB3ZWVrIGFmdGVyIHNjaG9vbCBsZWFkZXJzIGFncmVlZCB0byBmb2xsb3cgc3RhdGUgcmVjb21tZW5kYXRpb25zIGFuZCBjbG9zZSB0aGUgaW5zdGl0dXRpb24gYmVjYXVzZSBvZiBsaW5nZXJpbmcgZmluYW5jaWFsIHByb2JsZW1zLCBvZmZpY2lhbHMgc2F5LlRoZSBjbG9zdXJlIGNvbWVzIG9uIHRoZSBoZWVscyBvZiBhIGRpcmVjdGl2ZSBmcm9tIHRoZSBDb2xvcmFkbyBEaXZpc2lvbiBvZiBQcml2YXRlIE9jY3VwYXRpb25hbCBTY2hvb2xzIHRvIGRvIHNvIGFzIGEgcmVzdWx0IG9mICJtdWx0aXBsZSBmYWN0b3JzIHJlbGF0ZWQgdG8gdGhlIGZpbmFuY2lhbCBoZWFsdGggb2YgdGhlIHNjaG9vbCB0aGUgcGFzdCBzZXZlcmFsIHllYXJzLCIgYWNjb3JkaW5nIHRvIGFuIGVtYWlsIGRpc3RyaWJ1dGVkIHRvIHN0dWRlbnRzIHRoaXMgd2Vlay4iVGhlIHNjaG9vbCB3YXMgdW5hYmxlIHRvIG92ZXJjb21lIGEgY29uc3RlbGxhdGlvbiBvZiBpc3N1ZXMgcmVsYXRlZCB0byBpdHMgcHJldmlvdXMgeWVhcnMgb2YgZmluYW5jaWFsIGxvc3NlcyBhbmQgdGhlIGRlY3JlYXNlIGluIHZhbHVlIG9mIHRoZSByZWFsIGVzdGF0ZSBhc3NldCwgdGhlIEJDTVQgY2FtcHVzLCIgdGhlIGVtYWlsIHJlYWRzLlRoZSBmaW5hbCBkYXkgb2YgY2xhc3NlcyBhdCB0aGUgc2Nob29sLCA2MjU1IExvbmdib3cgRHJpdmUgaW4gR3VuYmFycmVsLCB3aWxsIGJlIEp1bmUgMTQuIFRoZSBzY2hvb2wgd2lsbCBjZWxlYnJhdGUgaXRzIGZpbmFsIGdyYWR1YXRpb24gSnVuZSAxNi5GYWNpbmcgaW5jcmVhc2VkIGNvbXBldGl0aW9uIGFuZCBkZWNyZWFzaW5nIGVucm9sbG1lbnQgaW4gMjAwOSwgc2Nob29sIGxlYWRlcnMgY2hvc2UgdG8gc2hvcnRlbiBpdHMgdHJhZGl0aW9uYWwgMSwwMDAgaG91ciBwcm9ncmFtIHRvIDc2MCBob3VycywgYSBtb3ZlIHRoYXQgaW5zdGFudGx5IGN1dCBhbm51YWwgdHVpdGlvbiByZXZlbnVlIDI0IHBlcmNlbnQsIE1jQ3Vpc3Rpb24gc2FpZC4gCkkgc3RvcHBlZCBkb2luZyB0aGlzIGEgd2hpbGUgYWdvLCBidXQgZm9yIGEgd2hpbGUgKG1heWJlIGEgZmV3IG1vbnRocykgSSBjaHVja2VkIG91dCBtYXliZSA1MCAxMDAgbXVncyB0aGF0IHBlb3BsZSBqdXN0IGxlZnQgaW4gb3VyIGNvbW11bmFsIGtpdGNoZW4gZm9yIG90aGVyIHBlb3BsZSB0byBjbGVhbi4gSSBkaWQgdGhpcyBiZWNhdXNlIHRoZXJlIGlzIGEgZ29kIGRhbW5lZCBkaXNod2FzaGVyIHJpZ2h0IG5leHQgdG8gdGhlIHNpbmsuIFdlIGhhZCBzbyBtYW55IG11Z3MgYmVjYXVzZSBteSB3b3JrIGNvbnN0YW50bHkgaGFzIHByb21vdGlvbmFsIG11Z3MgZm9yIHZhcmlvdXMgdGhpbmdzIGFuZCBhbHNvIHBlb3BsZSBqdXN0IGJyaW5nIG9sZCBtdWdzIGFuZCBsZWF2ZSB0aGVtIGZvciBwZW9wbGUgdG8gdXNlIEkgZ3Vlc3MuCkkgZGlzYWdyZWUuIFdpdGggdGhlIHByb2dyYW1zIGN1cnJlbnRseSBhdmFpbGFibGUgdG8gdXMsIGRlZGljYXRlZCBwbGF5ZXJzIGNhbiBzdHVkeSBwYXR0ZXJucyBpbiBlcXVpdHkgZGlzdHJpYnV0aW9ucyBhbmQgY29uc3RydWN0IGRlY2lzaW9uIHRyZWVzIGluIGVub3VnaCBzcG90cyB0byBjb21lIGNsb3NlIHRvIGRldGVybWluaW5nIHRoZSBHVE8gbGluZSBhd2F5IGZyb20gdGhlIHRhYmxlIGFuZCBhcHBseSB0aGVzZSBsZWFybmVkIGNvbmNlcHRzIGF0IHRoZSBmZWx0LgpFZGl0ICBiZWNhdXNlIEkndmUgaGFkIDQ1IG1pbnMgb2Ygc2xlZXAgYW5kIGFwcGFyZW50bHkgY2FuJ3Qgc3BlbGwuClByaW9yIHRvIGdvaW5nIHRvIHRoZSBDYXNpbm8sIEkgaGFkIGRpbm5lciBhbmQgZHJpbmtzIHdpdGggZmFtaWx5IGFuZCBmcmllbmRzIGFuZCByb2NrZWQgdXAgd2l0aCAkMjAwIG9mIGFzc29ydGVkIGJpcnRoZGF5IG1vbmV5IGFuZCBhIGRyZWFtLiAKTGlvblR3ZWV0ZXIgdQpQcmFjdGljZSB3aXRoIGEgc2luZ2xlIGJhbGwgYXQgYSB0aW1lLCBvbmUgaGFuZCB0aGVuIHRoZSBvdGhlciwgdW50aWwgeW91ciB0aHJvd3MgYXJlIGNvbnNpc3RlbnRseSBhY2N1cmF0ZS4gUHJhY3RpY2UgaW4gZnJvbnQgb2YgeW91ciBiZWQgKHNvIHlvdSB3b24ndCBoYXZlIHRvIGJlbmQgZG93biB0byB0aGUgZmxvb3IgdG8gY2F0Y2ggZmFsbGVuIGJhbGxzKSBhbmQgZG9uJ3Qgd29ycnkgYWJvdXQgY2F0Y2hpbmcgdGhlIGJhbGxzLiAKRFNXIGJldHMgb24gbmFpbCBzYWxvbnMgaW4gc2hvZSBzdG9yZXMKQ2hyaXN0aWFucyBoYXZlIGRpZmZlcmluZyB2aWV3cyBvbiBpZiBkaXZvcmNlIGlzIGJpYmxpY2FsbHkgYWNjZXB0YWJsZSBpbiB0aW1lcyBvZiBhYnVzZSwgYnV0IEkgdGhpbmsgdGhlIGZpcnN0IHN0ZXAgZm9yIHlvdSBpcyB0byBpbnN0aWdhdGUgYm91bmRhcmllcy4gCkxhZHkgR2FnYSBjdXJyZW50bHkgaGFzIDggdGF0dG9vcywgdGhleSBhcmUgYWxsIG9uIHRoZSBsZWZ0IHNpZGUgb2YgaGVyIGJvZHkgKEhlciBkaWRuJ3Qgd2FudCBoZXIgdG8gdG91Y2ggdGhlIHJpZ2h0IHNpZGUsIGhlIHdhbnRlZCBvbmUgc2lkZSBvZiBoZXIgdG8gYmUgJ25vcm1hbCkuIFNoZSBoYXMgMyBvbiBoZXIgbGVmdCBzaG91bGRlcjogSGVhcnQgd2l0aCBEYWQgb24gaXQsIFRva3lvIExvdmUsIGFuZCBmbG93ZXJzLiAKVG8gd2luIGEgc2l0IGFuZCBnbyB0b3VybmFtZW50IHlvdSB3aWxsIGJlIGluIHNldmVyYWwgaGFuZHMgYWxvbmcgdGhlIHdheSB0aGF0IGFyZSBnYW1lIGNyaXRpY2FsIGludGVyc2VjdHMuIApUaGFuayBnb29kbmVzcyBJIGhhdmUgbWFuYWdlZCB0byByZXR1cm4sIGFsdGhvdWdoIHdpdGggYSBkaWZmZXJlbnQgcmVzZWFyY2ggbnVtYmVyIChzdGlsbCB0aGUgc2FtZSBtZSEhKSBhbmQgSSBhbSBkZWJhdGluZyB3aGV0aGVyIEkgY2FuIGNhbGwgbXlzZWxmIEFsc28gUmFuMSBhcyBteSBuZXcgbmlja25hbWU/IEhvcGUgc28uIEFzIHlvdSBjYW4gZ2F0aGVyLCBJIGFtIGEgcmF0aGVyIGJlZnVkZGxlZCBzZXB0dWdlbmFyaWFuLCB0cnlpbmcgdG8ga2VlcCB1cCB3aXRoIHRoZSB0ZWNob25vbG9naWNhbCByZXZvbHV0aW9uLCBhbmQgaGF2aW5nIHNvbWUgcHJvYmxlbXMhIS4gCkxvbmcgc3Rvcnkgc2hvcnQsIG5vLgpNeSBtb20gYW5kIGRhZCBjb3VsZG4ndCBiZWxpZXZlIGl0LiIuIApQdXQgYmFjayBpbiBvdmVuIGZvciBvbmx5IGFib3V0IDEwIHNlY29uZHMuIEN1dCBidXR0ZXIgaW50byBkcnkgY2FrZSBtaXggd2l0aCBmb3JrIG9yIHBhc3RyeSBibGVuZGVyIHVudGlsIG1peHR1cmUgaXMgY3J1bWJseS4gCk9oIGdvb2QuIEZyZWVkb20gaXMgcmVzdG9yZWQuIEkgYWxzbyBnZXQgdGhpcyBuZXdzIGZyb20gbXkgY29sbGVhZ3VlIEx5bm4gT3dlbnMuIApUaGUgd29tYW4gY2FuIHJlbGF4IGhlciBhbnVzLCBhbmQgdGhlIG1hbiBjYW4gZWFzaWx5IGFjY2VzcyB0aGUgZW50aXJlIGFuYWwgYXJlYS4uIApBbmQgdGhhdCB0aGUgc3Rvcnkgb2YgaG93IEkgZW5kZWQgdXAgd2l0aCBhIHBldCBmaW5jaC4KVG9kYXkncyBhZ2VuZGEgaW5jbHVkZXMgcHJlc2VudGF0aW9ucyBieSBLb2hsJ3MsIEFtRXgsIERlbm55J3MsIENsb3JveCwgUm9kYW4gRmllbGRzLCBWZXJpem9uIGFuZCBJQk0gICBhbmQgdGhhdCdzIGp1c3QgYmVmb3JlIGx1bmNoLgpZZWFnZXJfeHh4aXYgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ28KSmFja3NvbiBhZ2FpbiBzdGFuZHMgYWNjdXNlZCBvZiBzZXh1YWwgbWlzY29uZHVjdCB3aXRoIGNoaWxkcmVuLiBIZSBzZXR0bGVkIHdpdGggYSBib3kgZm9yIGEgcmVwb3J0ZWQgJDIwIG1pbGxpb24gdG8gJDI1IG1pbGxpb24gaW4gdGhlIGVhcmx5IHdhcyBmb3VuZCBub3QgZ3VpbHR5IGluIGEgMjAwNSBqdXJ5IHRyaWFsIG9uIGNoYXJnZXMgdGhhdCBoZSBhYnVzZWQgYW5vdGhlciBib3kgYW5kIGlzIG5vdyB0aGUgc3ViamVjdCBvZiB0aGUgcG9zdGh1bW91cyBOZXZlcmxhbmQuIElzIGl0IHBvc3NpYmxlIGhlIHdhcyByZXBlYXRpbmcgYSBjeWNsZSBvZiBhYnVzZT8gQmlvZ3JhcGhlciBKLiAKQmVjYXVzZSB0aG9zZSBmZWVsaW5ncyBhcmVuIGxpa2VseSB0byBjaGFuZ2UsIGp1c3QgYmVjb21lIG1vcmUgY29uc3VtaW5nLiAKVGhlaXIgbW92ZW1lbnRzLCB0aGVpciBiZXR0aW5nIHN0eWxlcyBhbmQgdGhlaXIgcmVhbCB0aW1lIGFuYWx5c2lzIGR1cmluZyB0aGUgZ2FtZS4gClN5cmFjdXNlIEhlcmFsZCAoTmV3c3BhcGVyKSAgIERlY2VtYmVyIDE5LCAxOTI4LCBTeXJhY3VzZSwgTmV3IFlvcmtTWVJBQ1VTRSBIRVJBTEQ6IFdFRE5FU0RBWSBFVkVOSU5HLCBERUNFTUJFUiAxOSwgMTAyOC4gCldoZW4gWW91ciBDb250ZW50IGlzIGNyZWF0ZWQgd2l0aCBvciBzdWJtaXR0ZWQgdG8gdGhlIFNlcnZpY2VzLCB5b3UgZ3JhbnQgdXMgYSB3b3JsZHdpZGUsIHJveWFsdHkgZnJlZSwgcGVycGV0dWFsLCBpcnJldm9jYWJsZSwgbm9uIGV4Y2x1c2l2ZSwgdHJhbnNmZXJhYmxlLCBhbmQgc3VibGljZW5zYWJsZSBsaWNlbnNlIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhZGFwdCwgcHJlcGFyZSBkZXJpdmF0aXZlIHdvcmtzIGZyb20sIGRpc3RyaWJ1dGUsIHBlcmZvcm0sIGFuZCBkaXNwbGF5IFlvdXIgQ29udGVudCBhbmQgYW55IG5hbWUsIHVzZXJuYW1lLCB2b2ljZSwgb3IgbGlrZW5lc3MgcHJvdmlkZWQgaW4gY29ubmVjdGlvbiB3aXRoIFlvdXIgQ29udGVudCBpbiBhbGwgbWVkaWEgZm9ybWF0cyBhbmQgY2hhbm5lbHMgbm93IGtub3duIG9yIGxhdGVyIGRldmVsb3BlZC4gVGhpcyBsaWNlbnNlIGluY2x1ZGVzIHRoZSByaWdodCBmb3IgdXMgdG8gbWFrZSBZb3VyIENvbnRlbnQgYXZhaWxhYmxlIGZvciBzeW5kaWNhdGlvbiwgYnJvYWRjYXN0LCBkaXN0cmlidXRpb24sIG9yIHB1YmxpY2F0aW9uIGJ5IG90aGVyIGNvbXBhbmllcywgb3JnYW5pemF0aW9ucywgb3IgaW5kaXZpZHVhbHMgd2hvIHBhcnRuZXIgd2l0aCBSZWRkaXQuIFlvdSBhbHNvIGFncmVlIHRoYXQgd2UgbWF5IHJlbW92ZSBtZXRhZGF0YSBhc3NvY2lhdGVkIHdpdGggWW91ciBDb250ZW50LCBhbmQgeW91IGlycmV2b2NhYmx5IHdhaXZlIGFueSBjbGFpbXMgYW5kIGFzc2VydGlvbnMgb2YgbW9yYWwgcmlnaHRzIG9yIGF0dHJpYnV0aW9uIHdpdGggcmVzcGVjdCB0byBZb3VyIENvbnRlbnQuLiAKV2Uga25vdyB0aGF0IGJpYXMgYWdhaW5zdCBvbGRlciBwZW9wbGUgaGFzIGFscmVhZHkgZm91bmQgaXRzIHdheSBpbnRvIG1lZGljaW5lLiBSZXViZW4gZXQgYWxbMV0gZm91bmQgdGhhdCBtZWRpY2FsIHN0dWRlbnRzIGhhZCAiYWxyZWFkeSBmb3JtZWQgc29tZSB1bmZhdm9yYWJsZSBhdHRpdHVkZXMgYWJvdXQgb2xkZXIgcGVyc29ucywiIGFuZCB3ZXJlIGxlc3MgbGlrZWx5IHRvIGFkbWl0IGFuIGFjdXRlbHkgaWxsIDg1IHllYXIgb2xkIHRvIGFuIGludGVuc2l2ZSBjYXJlIHVuaXQgYW5kIGFnZ3Jlc3NpdmVseSB0cmVhdCBoZXIgdGhhbiBhIDEwIHllYXIgb2xkIHdpdGggY2hyb25pYyBsZXVrZW1pYS4gVGhlc2Ugc3R1ZGVudHMgY291bGQgcmlnaHRseSBqdXN0aWZ5IG9mZmVyaW5nIG1lZGljYWwgdHJlYXRtZW50cyB0byBwYXRpZW50cyB3aXRoIG1hbGlnbmFudCBkaXNlYXNlcyB3aG8gaGF2ZSBvbmUgb3IgdHdvIHllYXJzIG9mIGxpZmUgZXhwZWN0YW5jeSwgYnV0IHdvcnJ5aW5nbHkgd2VyZSBoZXNpdGFudCB0byBleHRlbmQgdHJlYXRtZW50IHRvIHNvIGNhbGxlZCAiZWxkZXJseSIgcGF0aWVudHMgd2l0aCBiZW5pZ24gZGlzZWFzZXMgd2hvIHdlcmUgbGlrZWx5IHRvIGhhdmUgYW4gZXZlbiBsb25nZXIgbGlmZSBleHBlY3RhbmN5LiBJJ2QgYXJndWUgdGhhdCBjb250aW51aW5nIHRvIHVzZSB0aGUgdGVybSBlbGRlcmx5IGV2b2tlcyBzdGVyZW90eXBlcyB0aGF0IGNvbnRyaWJ1dGUgdG8gdHJlYXRtZW50IGJpYXNlcyBsaWtlIHRoaXM6IGl0IGNvbmp1cmVzIGEgcHJvYmxlbWF0aWMgaW5pdGlhbCBpbXByZXNzaW9uIHRoYXQgY2FuIGJlIGRpZmZpY3VsdCB0byBzaGFrZS4KQXNpc3RvbGVlICAyIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KRm9yIE1MUCBwdXJwb3NlcywgaXQgY291bGQgZWFzaWx5IGJlIGNoYW5nZWQgaW50byAiUG9ueSIgb3IgYSBzaW1pbGFyIHdvcmQsIHRvIG91dGxpbmUganVzdCB3aGF0IHlvdXIgY2hhcmFjdGVyIGlzLiAKSk9WSUNIRVZJQ0gsIEdlb3JnZSAgIEdlb3JnZSBKb3ZpY2hldmljaCwgYWdlZCA3OCwgZGllZCBwZWFjZWZ1bGx5IGF0IGhvbWUgb24gU3VuZGF5LCBBdWd1c3QgNSwgMjAxOC4gR2VvcmdlIHdpbGwgbmV2ZXIgYmUgZm9yZ290dGVuIGJ5IHRob3NlIHdobyBrbmV3IGhpbS4gSGUgbGl2ZWQgaGlzIGxpZmUgdG8gdGhlIGZ1bGxlc3QsIGRvaW5nIGV4YWN0bHkgd2hhdCBoZSB3YW50ZWQgdG8gZG8uIEdlb3JnZSBwbGF5ZWQgZm9vdGJhbGwgZm9yIHRoZSBMb25kb24gTG9yZHMgZm9yIDEzIHllYXJzIGR1cmluZyB3aGljaCB0aW1lIGhlIG1ldCBNYXJ5LCBoaXMgd2lmZSBvZiA1NCB5ZWFycyB3aXRoIHdob20gaGUgc2hhcmVkIHR3byBjaGlsZHJlbiwgQnJvbmNvIChDb3JlbmUpIGFuZCBKaWxsIChUaW0gUG90dGVyKS4gCk9uY2UgdGhlIGxvY2F0aW9ucyB3ZXJlIHBpY2tlZCwgU21pdGggYW5kIGhpcyB0ZWFtIGFzc2VtYmxlZCBhIGZpdmUgcGVyc29uIGNyZXcgZnJvbSBOZXcgWW9yayBhbmQgbGluZWQgdXAgYSBsb2NhbCBzb3VuZCB0ZWNobmljaWFuIGFuZCAiZml4ZXIiIGluIGVhY2ggY291bnRyeS4gVGhlIGZpeGVycyBhY3RlZCBhcyBsaWFpc29ucyB0byBoZWxwIGNvb3JkaW5hdGUgdGhlIHNob290IGFuZCBtaW5pbWl6ZSB0aGUgbGFuZ3VhZ2UgYmFycmllci4gVGhlIGNyZXcgYXJyaXZlZCB0d28gZGF5cyBlYXJseSB0byBlYWNoIGNvdW50cnkgdG8gc2hvb3QgYWRkaXRpb25hbCAiQiByb2xsIiBzaG90cyBhbmQgc3RheWVkIGFuIGFkZGl0aW9uYWwgZGF5IHRvIHJlbGF4IGFuZCBwcmVwYXJlIGZvciB0aGUgam91cm5leSBzdGF0ZXNpZGUuIFRoZXkgc3BlbnQgYSB0b3RhbCBvZiAxMiBkYXlzIGluIGVhY2ggc3BvdCB3aXRoIHR3byB3ZWVrcyBvZmYgaW4gYmV0d2VlbiBmb3IgQW5kZXJzb24gYW5kIFNtaXRoIHRvIGhlYWwgYW5kIHJlY2hhcmdlLiBTbWl0aCBhZGRzOgpJbiBmYWN0LCBvbmx5IEtldmluIGxvc3QgbW9uZXkgYW5kIHRoZSByZXN0IG9mIHVzIHdvbiBzdWJzdGFudGlhbCBhbW91bnRzLiAKSSBhYnNvbHV0ZWx5IGxvdmUgaGVyIGNvbmZpZGVuY2UsIHRvby4gQW5kIEkgbG92ZSB0aGF0IHNoZSBpc24gYWZyYWlkIHRvIHRyeSBuZXcgdGhpbmdzIGFuZCBwdXNoIGhlcnNlbGYuIApMaWtlIHRoZSBwcm9mZXNzaW9uYWwgcG9rZXIgZnJlYWtzLCBvdGhlciBjb21tb24gbWVuIGFyZSBhbHNvIGJlY29taW5nIGludGVyZXN0ZWQgaW4gcGxheWluZyBibGFja2phY2sgZGF5IGJ5IGRheS4gVGhlIGZhbW91cyBibGFja2phY2sgc3VwcGxpZXJzIGFyZSBwcm9kdWNpbmcgYW5kIGZlYXR1cmluZyBtaW5pIGNhc2lub3MgdG8gbWFrZSB0aGUgZ2FtZXMgbW9yZSBwb3B1bGFyIGRheSBieSBkYXkuIEJlZm9yZSB5b3UgYnV5IHRoZXNlIHRhYmxlcywgY29uc2lkZXIgYmFyZ2FpbmluZyB0aGUgcHJpY2VzIHRvIG1ha2Ugc3VyZSB5b3UgaGF2ZSBmb3VuZCB0aGUgYmVzdCBkZWFsLgpUaGV5IHVzZWQgYSBtZXRob2Qgb2YgY2hlbWljYWwgYW5hbHlzaXMgY2FsbGVkIGxpcXVpZCBjaHJvbWF0b2dyYXBoeSBtYXNzIHNwZWN0cm9tZXRyeSBmb3IgdGhlIGJyZWF0aCBhbmQgYmxvb2QgcGxhc21hIHRlc3RzLiAKVG95b3RhIFJlcGxhY2VzIE5pc3NhbiBhcyBBdXRvIFNwb25zb3Igb2YgJ1RoZSBWb2ljZScKTm90IHN0cmljdGx5IGFuIGFycmFuZ2VkIG1hcnJpYWdlLCBidXQgQWRvcmEgcHJvYmFibHkgY2hhcm1lZCBBbGFuIGxpa2Ugc2hlIGRvZXMgbmVhcmx5IGV2ZXJ5b25lIGVsc2UuIEhlIG1ha2VzIGFuIGhvbmVzdCB3b21hbiBvdXQgb2YgaGVyLCBhbmQgc2hlJ3MgdGhlIHBpY3R1cmVzcXVlIHdpZmUgaGUncyBhbHdheXMgZHJlYW1lZCBvZi4uIApOb3cgYWxsIG9mIHRoZXNlIHllYXJzIGxhdGVyLCBJIGZpbmFsbHkgbWFkZSBpdCB0aHJvdWdoIGEgY291cGxlIG9mIHdlZWtzIHdpdGggb25seSBvbmUgZGVsaXZlcnkvdGFrZW91dCBtZWFsLCB3aGljaCBJIGhhZCBwbGFubmVkIGludG8gbXkgd2Vlay4gSSBjb29rIGEgYnVuY2ggb2Ygc3R1ZmYgaW4gYWR2YW5jZSB0aGF0IHRha2VzIHRpbWUgb24gU3VuZGF5LCBhbmQgSSBtYWtlIGl0IGFsbCBhdCBvbmNlLiBUaHJvdWdob3V0IHRoZSB3ZWVrIEkgY29tYmluZSB0aGF0IChsZXQgc2F0IHNvbWUgY2hpY2tlbikgd2l0aCBhIHF1aWNrIHRvIG1ha2Ugc2FsYWQgYW5kIGEgY2FyYiAobGlrZSByaWNlL3Bhc3RhL2V0Yy4pCkdpdmUgdGhlbSBhIHRhc3RlIG9mIHRoZWlyIG93biBtZWRpY2luZS4gCkkgaGF2ZSBzbyBtdWNoIHNvYXAgdGhhdCBJIGRvbid0IGdldCB0byBlbmpveSBpdC4gSSB1c2Ugc29tZSB0aGluZ3Mgb25seSBhIGNvdXBsZSBvZiB0aW1lcyBhIHllYXIuIFBlcmhhcHMgd2l0aCBsZXNzIGNob2ljZSBJIGNvdWxkIGVuam95IHRoZXNlIHNjZW50cyBtb3JlLi4gCkkgY2FuIHNlZSBvbiB5b3VyIGRsIHdoZW4geW91IHdlbnQgMjA1IHlvdXIgdXBwZXIgYmFjayBpcyBub3QgdGlnaHQgYW5kIGxvY2tlZCBkb3duIHdoZW4geW91IHRyeSB0byBwdWxsLiAKVXNpbmcgdGhlIHdhcm10aCBvZiB3YWxudXQsIGEgdGhpY2tseSB0ZXh0dXJlZCBydWcgYW5kIGEgcHVuY2ggb2YgY29vbCBibHVlIGZyb20gdGhlIG1pZCBjZW50dXJ5IHNvZmEgc2V0IHRoZXkgZm91bmQgb24gQ3JhaWdzbGlzdCwgTmd1eWVuIGFuZCBIb24gaGF2ZSBjcmVhdGVkIGEgcmVmcmVzaGluZyBjb250ZW1wb3JhcnkgZXN0aGV0aWMuIEhlcmUgYW5kIHRoZXJlLCBwbGF5ZnVsIHRvdWNoZXMgZW5saXZlbiB0aGUgcHVyZSB3aGl0ZSBwYWxldHRlLiAKSWYgdGhlIG1hbiBleGVyY2lzZXMgcGF0aWVuY2UgYW5kIGNvbnRyb2wsIG1vc3Qgd29tZW4gd2lsbCBiZSBhYmxlIHRvIGFjY29tbW9kYXRlIGFueSBzaXplIHBlbmlzIHVzaW5nIHRoZSBhYm92ZSB0ZWNobmlxdWVzLiBUaGUgaW5jcmVkaWJsZSBzZW5zYXRpb25zIG9mIGZ1bGxuZXNzIGZvciBhIHdvbWFuIGFuZCB0aWdodG5lc3MgZm9yIHRoZSBtYW4gbWFrZSBhbmFsIHNleCB3aXRoIGEgYmlnIHBlbmlzIHdvcnRoIHRoZSBleHRyYSB0aW1lIGFuZCBlZmZvcnQuClRoZSBtZXJlIGZhY3QgdGhhdCB5b3UgYXJlIHN0aWxsIGJyZWF0aGluZyBhdCBhZ2UgMjUgdGVsbHMgbWUgdGhhdCB5b3UgYXJlIHBlcmZlY3RseSBjYXBhYmxlIG9mIGltcHJvdmluZyB5b3Vyc2VsZi4gClBob2VuaXg4MjMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQWx0aG91Z2ggaG9iYmllcyBhbmQgb2JqZWN0cyBjYW4gYnJpbmcgeW91IGpveSBhbmQgaGFwcGluZXNzLCBhbmQgeW91IGRvbnQgb3BlbiB5b3Vyc2VsZiB1cCB0byBsb3NzIGFuZCBkZXBlbmRlbmNlIHRoYXQgd2F5LCBpdCBpcyBwb3NzaWJsZSB0byBtaXNzIHdoYXQgeW91IGRvbiBoYXZlLgpPbWVnYSAzIGZhdHR5IGFjaWQgc3VwcGxlbWVudGF0aW9uIHNpZ25pZmljYW50bHkgcmVkdWNlcyB0aGUgbnVtYmVyIG9mIEFQUCBwb3NpdGl2ZSBheG9ucyBhdCAzMCBkYXlzIHBvc3Rpbmp1cnkgdG8gbGV2ZWxzIHNpbWlsYXIgdG8gdGhvc2UgaW4gdW5pbmp1cmVkIGFuaW1hbHMuCkhlIHNhaWQgdGhhdCB0aGUgdm93IGhlIHRvb2sgYXMgYSBzZW1pbmFyaWFuIG5ldmVyIHRvIGNyaXRpY2l6ZSB0aGUgYWN0aW9ucyBvciBkZWVkcyBvZiBhIHN1cGVyaW9yIG1hZGUgaGltIHVuYWJsZSB0byBxdWVzdGlvbiB3aGF0IHRoZSBwcmllc3QgaGFkIHRvbGQgaGltIHRvIGRvLiAKU2hvdWxkIHRoZXkgZmFsbCBzaG9ydCB0aGVuIHRoZSBzdW1tZXIgdHJhZGluZyB3aWxsIHRha2Ugb24gYSBsaWZlIG9mIGl0cyBvd24uIE11Y2ggbGlrZSBpdCBkaWQgYXQgdGhlIGVuZCBvZiBsYXN0IHNlYXNvbiwgd2hlbiBKYW1lcyBNYWRkaXNvbidzIGtuZWUgaW5qdXJ5IGF0IEhpbGxzYm9yb3VnaCBtdXN0IGhhdmUgc2VudCBwYWxwaXRhdGlvbnMgdGhyb3VnaCB0aGUgTm9yd2ljaCBib2FyZHJvb20uClRoZSBmZXN0aXZpdGllcyBzdGFydCBUdWVzZGF5IGFzIEZDIEJhcmNlbG9uYSBhbmQgQnJhemlsIG5hdGlvbmFsIGZvb3RiYWxsIHN0YXIgTmV5bWFyIEpyLiwgd2hvIGFsc28gZW5qb3lzIHBsYXlpbmcgY29tcGV0aXRpdmUgcG9rZXIsIHdpbGwgaG9zdCBhIGNoYXJpdHkgZXZlbnQgYWxvbmdzaWRlIFBva2VyU3RhcnMgZm9yIGhpcyBjaGFyaXR5LCB0aGUgTmV5bWFyIEpyLiBQcm9qZWN0IEluc3RpdHV0ZSwgYW4gaW5pdGlhdGl2ZSB0aGF0IHN1cHBvcnRzIHRoZSBlZHVjYXRpb24gb2YgdW5kZXJwcml2aWxlZ2VkIGNoaWxkcmVuLiBUaGlzIHdpbGwgbWFyayBOZXltYXInc2RlYnV0IG9uIHRoZSBFdXJvcGVhbiBQb2tlciBUb3VyIHNpbmNlIHNpZ25pbmcgb24gYXMgYSBQb2tlclN0YXJzIEFtYmFzc2Fkb3IgaW4gTWF5LiAKVGhpcyBpcyBlbXBoYXRpY2FsbHkgZGVuaWVkIGJ5IEtlcnIuIENvbGVtYW4gaGFzIHJlZnVzZWQgdG8gY29tbWVudCBvbiBhbnkgbWF0dGVycyByZWxhdGluZyB0byB0aGUgZm91bmRhdGlvbiwgY2l0aW5nIGEgY29uZmlkZW50aWFsaXR5IGFncmVlbWVudC4gCkFuZCBpdCB3aWxsIGFsc28gbWVzcyBhIGxvdCB3aXRoIERva2thZWJpIGFiaWxpdHkgaWYgc2hlIGhhY2tzIHRoZSBjYW1zLiAKSW50ZXJlc3RpbmdseSwgc3lzdGVtaWMgaW5qZWN0aW9uIG9mIHRoZSBwaHl0b2NoZW1pY2FsIGN1cmN1bWluIGVuaGFuY2VzIHRoZSBuZXcgaGlwcG9jYW1wYWwgY2VsbCBzdXJ2aXZhbCBieSBbNTldLiAKQW1lcmljYW5zIGFuZCBFdXJvcGVhbnMgYXJlIHJpZ2h0IHRvIHdhbnQgdG8ga2VlcCBpdCBvbnNob3JlLiBJbnZlc3RtZW50cyBtYWRlIHRvIHByb2Nlc3MgdGhpcyBzY3JhcCBhdCBob21lIHdvdWxkIGJlIGdvb2QgZm9yIHRoZSBOb3J0aCBBbWVyaWNhbiBhbmQgRXVyb3BlYW4gbWFudWZhY3R1cmluZyBzZWN0b3JzLgpXZSBnbyBiYWNrIHRvIGJhc2UgaG91c2luZyBhbmQgSSB0cnkgdG8gdGFsayB3aXRoIE1ycy4gCkVESVQ6IElmIHRoZSBwYXRpZW50IHdhbnRzIHRvIGZpZ2h0LCB0aGUgZG9jdG9yIHdpbGwgaGVscCBidXQgc3RhZ2UgSVYgbWVhbnMgdGhleSB3aWxsIGdvIHRvIHRoZSBiaWcgZ3VucyB3aGljaCBXSUxMIGRhbWFnZSB5b3VyIGJvZHkgaW1tZW5zZWx5LiBTbyBldmVuIGlmIHlvdSBzdXJ2aXZlLCB5b3Ugd2lsbCBlbmQgdXAgd2l0aCBzaWduaWZpY2FudCBkYW1hZ2UgdG8geW91ciBvcmdhbnMgZGVwZW5kaW5nIHdoZXJlIHRoZSBzZWNvbmRhcnkgY2FuY2VycyBwb3AgdXAuIFN1cnZpdmFsIHJhdGVzIGFyZSBsb3cgZm9yIGEgcmVhc29uLiAKQnV0IGFnYWluIEkgbmV2ZXIgd29ya2VkIGZvciB0aGVtIHNvIGlkayBob3cgbXVjaCB0cnV0aCB0aGVyZSBpcyB0byB0aGF0LiAKV2hhdCBjb3VsZCBiZSBtb3JlIHBlcmZlY3QgZm9yIHlvdXIgZnJpZW5kcyA0MHRoIGJpcnRoZGF5IHBhcnR5IHRoYW4gYSBqdW1ibyBkZWNrIG9mIDUiIGJ5IDciIHBsYXlpbmcgY2FyZHMgdGhhdCBhbm5vdW5jZXMgdG8gdGhlIHdvcmxkIHRoYXQgaGUgaXMgb3ZlciB0aGUgaGlsbC4KSGUgd2FudHMgbGFkZGVycyBhbmQgd2hhdGV2ZXIgZWxzZSBmb3IgdGhlIGZpcmUuIEkgYW0gc2NyZWFtaW5nIGZvciBteSBnaXJscyB0byBncmFiIHRoZSBhbmltYWxzIGFuZCBwdXQgdGhlbSBpbiB0aGUgYmFybi4gWW91IGhhdmUgdG8gdW5kZXJzdGFuZCwgc29tZSBvZiB0aGVzZSBhbmltYWxzIGFyZSB2ZXJ5IGNvc3RseSBtb25ldGFyaWx5LiAKTm8gbmVlZCB0byBsYWJlbCBzb2NpZXR5IGJlY2F1c2Ugc29tZSBwZW9wbGUgc2F5IHRoaW5ncyBsaWtlIHRoYXQuIFRvIG1ha2UgbGlnaHQgZm9yIHNpbmdsZSBtb3RoZXJzLCBJZiBteSB0YXggbW9uZXkgZ29lcyB0byBzdXBwb3J0IHlvdSBhbmQgeW91ciBiYWJ5IHRoYXRzIGdyZWF0ISBXZSBzaG91bGQgYmUgc3RhbmRpbmcgdXAgZm9yIGVhY2ggb3RoZXIgd2hlbiBubyBvbmUgZWxzZSB3aWxsLiAKUG9rZXIgcGxheWVycyBub3dhZGF5cyBhcmUgbW9yZSBjb25jZXJuZWQgYWJvdXQgdGhpcyBnYW1lIHRoYW4gZXZlci4gCkxlIENvbnN1bGF0IHMnYXR0bGUgIGNlbnRyYWxpc2VyIGwnYWRtaW5pc3RyYXRpb24sIGxhIGp1c3RpY2UgZXQgbGVzIGZpbmFuY2VzLiBMZXMgZXh0cmFpdHMgZGVzIHJlZ2lzdHJlcyBkZXMgZGxpYnJhdGlvbnMgZGVzIENvbnN1bHMgZGUgbGEgUnB1YmxpcXVlIGVuIGRhdGUgZHUgMWVyIGZyaW1haXJlIGFuIElYIHByb3Bvc2UgdW5lIHByc2VudGF0aW9uIGRlIGwnYWRtaW5pc3RyYXRpb24uIENvbnN0YXQgZXN0IGZhaXQgZGUgbGEgc2l0dWF0aW9uIGFudHJpZXVyZSA6ICBhZG1pbmlzdHJhdGlvbnMgZmFpYmxlcywgaW5jZXJ0YWluZXMsIHNhbnMgdW5pdCBkZSBwcmluY2lwZXMsIHNhbnMgdW5pdCBkZSBtZXN1cmVzIC4gCkkgZGVjaWRlZCBvbiBhIHJpYmJlZCBzcGlyYWwgaGF0IHByb2plY3QgdGhhdCB3b3JrZWQgaW4gdGhlIGJhY2sgbG9vcCBvbmx5IHRvIGJ1c3QgYSBsb3ZlbHkgYmx1ZSB5YXJuLiAKU28gbG91c3ksIGxpdHRsZSBwYXkgam9iIGl0IGlzLi4gCkZyb20gMTk5OCB0aWxsIDIwMDMgSSB3YXMgdGhlIENJTyBvZiBhIGxhcmdlIG9mZiBzaG9yZSBzcG9ydHMgYm9vay4gSSB1c2VkIHRvIGxhdWdoIGV2ZXJ5IHRpbWUgSSBzYXcgZXN0aW1hdGVzIG9mIHRoZSBzaXplIG9mIHRoZSBvZmYgc2hvcmUgc3BvcnRzIGJldHRpbmcgYnVzaW5lc3MuIFdlIHdlcmUgYSBtaWQgc2l6ZSBib29rIGFuZCBkaWQgJDUwME0gYSB5ZWFyIGFuZCBzZXZlcmFsIGJvb2tzIEkga25ldyB3ZXJlIGRvaW5nIHR3byB0byBmb3VyIHRpbWVzIHRoYXQsIGFuZCB0aGVyZSB3ZXJlIGFsbW9zdCBhIGh1bmRyZWQgYm9va3MgYXQgdGhlIHRpbWUuCkFuZCBJc2xhbSBvZiBZYXppZCBhbmQgdGhpcyBjYXVzZWQgbWFqb3JpdHkgb2YgSXJhbmlhbnMgYWNjZXB0IHNoaWEgSXNsYW0gYW5kIGNvbnZlcnQgZnJvbSBzdW5uaSBJc2xhbSB0byBzaGlhIElzbGFtIGFmdGVyIEJhdHRsZSBvZiBLYXJiYWxhLiAKR3Jvd2luZyB1cCBwYXJ0IER1dGNoLCBJIHRyaWVkIHRvIHVzZSB0aGUgcG9saXRlIHlvdSBpbiBhZGRyZXNzaW5nIG9sZGVyIHBlb3BsZSBpbiBOb3J3YXksIHNpbmNlIHRoYXQgd2hhdCB5b3UgZG8gaW4gdGhlIE5ldGhlcmxhbmRzLiBMZXQganVzdCBzYXkgdGhhdCBhIGZhaXIgYW1vdW50IG9mIHBlb3BsZSBnZXQgYWxtb3N0IGluc3VsdGVkLCBhbG9uZyB0aGUgbGluZXMgb2YgIkkgbm90IHRoYXQgb2xkIi4gRHV0Y2ggc3RpbGwgaGFzIHBvbGl0ZSB5b3UgYW5kIGluZm9ybWFsIHRob3UsIGFzIHdlbGwgYXMgdGl0bGVzIGZvciBNciAvIE1ycyAvIE1zLCBhbmQgYWRkcmVzc2luZyBwZW9wbGUgbGlrZSB0aGUgRHV0Y2ggZXF1aXZhbGVudCBvZiAiTWEgYW5kICJTaXIiLiAKVW5kZXJzdGFuZCB5b3VyIGJvdW5kYXJpZXMgYW5kIHdoYXQgYXJlIGFjY2VwdGFibGUgcXVlc3Rpb25zL3Jlc3BvbnNlcy9iZWhhdmlvciB0byB5b3UuLiAKVHdvIGJsYWNrIFN0YWZmb3Jkc2hpcmUgdGVycmllcnMuIExlbyBydW5zIHNpZGV3YXlzIGFuZCBoYXMgdGVldGggdGhhdCBwcmV0dHkgbXVjaCBnbyBmcm9tIGVhciB0byBlYXIuIEkgYnJvdWdodCBoaW0gaG9tZSBpbiBhIHBpbGxvdyBjYXNlIHdoZW4gaSB3YXMgYSBraWQuCk1lIGFuZCBteSBkYWQgZ3JldyBhcGFydCwgaGUgZ290IGEgbmV3IGZhbWlseSwgYnkgdGhlIHRpbWUgSSB3YXMgMTgsIGFuZCBvbmx5IGdvaW5nIHRvIGNvbW11bml0eSBjb2xsZWdlIGhlIHRyaWVkIHNvIGhhcmQgdG8gYmFjayBvdXQgb2YgdGhhdCBkZWFsLiBCdXQgaXQgd2FzIGdyZWF0LiAKU28gd2l0aCB0aGF0IHNhaWQgdGhlIEh1bnRlcnMgc2hvdWxkIGhhdmUgZW5vdWdoIGZpcmVwb3dlciAoUG9zc2libGUgNS41Ni83LjYyL3RyYW5xdWlsaXplcnMgYW5kIHRoYXQgZWxlcGhhbnQgZ3VuKSB0byBicmluZyBkb3duIGJvdGggZGlub3MuIApJbiBGcmVkZXJpY2sgQ291bnR5IHdlIGhhdmUgYSBnYXkgY29tbXVuaXR5LCBhbmQgaXQgaXMgcHJvYmFibHkganVzdCBhcyBsYXJnZSBhcyBpbiBNb250Z29tZXJ5IENvdW50eSwgYnV0IGhlcmUgaXQgaXMgYW4gaW52aXNpYmxlIGdheSBzYXlzIHRoZSBwcmVzaWRlbnQgb2YgVGhlIExhbWJkYSBDb21tdW5pdHksIGEgZ2F5IGdyb3VwIGJhc2VkIGluIEZyZWRlcmljay4gCkNhcmVzdHJlYW0ncyBIQ0lTIGJ1c2luZXNzIHVuaXQgcHJvdmlkZXMgaW1hZ2luZyBJVCBzb2x1dGlvbnMgdG8gbXVsdGkgc2l0ZSBob3NwaXRhbHMsIHJhZGlvbG9neSBzZXJ2aWNlcyBwcm92aWRlcnMsIGltYWdpbmcgY2VudGVycyBhbmQgc3BlY2lhbHR5IG1lZGljYWwgY2xpbmljcyBhcm91bmQgdGhlIHdvcmxkLiAKVGhlIGFubnVhbCBldmVudCBicmluZ3MgY2VsZWJyaXR5IGZyaWVuZHMgZnJvbSBhcm91bmQgdGhlIHdvcmxkIHRvZ2V0aGVyIGZvciBhbiB1bmZvcmdldHRhYmxlIGV2ZW5pbmcgb2YgcmVtYXJrYWJsZSBwZXJmb3JtYW5jZXMgYW5kIHN1cnByaXNlIGd1ZXN0cywgYWxsIGN1cmF0ZWQgYnkgRm9zdGVyLi4gCklmIHlvdSBhcmUgZ29pbmcgdG8gcGxheSBpbiB0aGUgb25saW5lIGNhc2lubyBmb3IgYSBsb25nIHRpbWUgYW5kIHJhdGhlciBpbnNpc3RlbnRseSwgdGhpcyBjYXNpbm8gYm9udXMgd2lsbCBoZWxwIHlvdSwgaXQgY2FuIHJlYWxseSBiZSBjb25zaWRlcmVkIGZyZWUgbW9uZXkuIApJIGtub3cgdGhhdCBpdCBtdWNoIGJldHRlciB0byB3YWxrIGl0IG9mZiB0aGFuIHRvIHNpdCwgYnV0IEkgcGh5c2ljYWxseSBjb3VsZCBub3Qgc3RhbmQgKHRoaXMgaGFzIG5ldmVyIGhhcHBlbmVkIGJlZm9yZSkuIApFdmVuIGluIHRoZSBtaWRzdCBvZiBhbiAiYWNyaW1vbmlvdXMgc2NpZW50aWZpYyByb3ciIHdlIG11c3QgZm9sbG93IHRoZSBjb3Vyc2Ugb2YgZXZpZGVuY2UgYmFzZWQgbWVkaWNpbmUuIERlYmF0ZSBhYm91dCBNRS9DRlMgbWFuYWdlbWVudCBtdXN0IG5vdyBiZSBmb2N1c2VkIG9uIHRoZSByaXNrIG9mIGRlbnlpbmcgYWNjZXNzIHRvIGJpb21lZGljYWwgY2FyZSBmb3IgcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gc2VyaW91cyBkaXNlYXNlLiAKSSdtIGEgeW91bmcgYWR1bHQgYW5kIG5lZWQgbXkgb3duIGxpZmUuIApEZW5uIGRhbm4gZmluZGVzdCBkdSBkaWNoIGluIFR1cm5pZXJlbiBhbSBzZWxiZW4gVGlzY2ggbWl0IGRlbiBncm9lbiBKdW5ncyB3aWVkZXIuIApJbiBMYXRlIHBvc2l0aW9uIENhbGwgd2l0aCBBIFhzLCBLIFRzLCBRIFRzLCBKIFRzLCBBIEosIEEgVCBhbmQgc21hbGwgcGFpcnMuIApUaGUgZmlyc3Qgb25lIGlzIGdvaW5nIHRvIGxvb2sgYmFkLCB0aGUgc2Vjb25kIG9uZSBpcyBnb2luZyB0byBsb29rIGJldHRlci4gCk15IGRhdWdodGVyIHdhcyBib3JuIGVuIGNhdWwsIHRoZSBsYWJvciB3YXMgcmVhbGx5IGZhc3QgYW5kIHJlbGF0aXZlbHkgcGFpbmxlc3MgYW5kIGJlY2F1c2UgdGhlIHdhdGVyIGRpZG4gYnJlYWsgSSB3YXNuIGZ1bGx5IGF3YXJlIGl0IHdhcyBiYWJ5IHRpbWUgeWV0LiBTaGUgd2FzIHZlcnkgY2xvc2UgdG8gYmVpbmcgYSB0b2lsZXQgYmFieSBidXQgSSBjbHVlZCBpbiBhbmQgZ290IGluIHRoZSBiYXRoIHdpdGggb25seSAzIG1pbnV0ZXMgdG8gc3BhcmUuIE9uZSBwdXNoIGFuZCBzaGUgY2FtZSBvdXQgd2l0aCBhIG1lbWJyYW5lIGFsbCBvdmVyLCBJIHJlbWVtYmVyIGJlaW5nIHdvcnJpZWQgaXQgc3VmZm9jYXRlIGhlciBzbyBwdWxsZWQgaXQgb2ZmIGltbWVkaWF0ZWx5LCB0cnVseSBpdCB3YXMgdGhlIGxlYXN0IHJlbWFya2FibGUgcGFydCBvZiBoZXIgYmlydGgsIGJ1dCBhcHBhcmVudGx5IGl0IHN1cHBvc2VkIHRvIGJlIGdvb2QgbHVjay4uIApUaGFua3MgdGhpcyByZWFsbHkgaGVscHMuIEkgZGlkbiBrbm93IGhvdyBiYWQgSSBoYWQgaXQgdGlsbCByZWNlbnRseSBzbyBJdCBkaWRuIGFmZmVjdCBtZSBhcyBtdWNoLiBNeSBkYWQgdXNlZCB0byBhbnkgY29ubmVjdGlvbiBJIGhhZCB0byB0aGUgaW50ZXJuZXQuIEhlIHNhdyBhIGZha2UgdmlkZW8gd2hlcmUgdGhlc2UgZ3V5cyBxdWVzdGlvbmVkIGVsZXhhIGFuZCBnb3QgYWxsIHRoZXNlIGZha2UgYW5zd2VycyBpbmNsdWRpbmcgaXQgc2F5aW5nIGplc3VzIGlzIGEgZmljdGlvbmFsIHBlcnNvbiBhbmQgaGUgZnJlYWtlZCBvdXQgYW5kIGFsbW9zdCBzdG9sZSBteSBBbGV4YSBmb3JldmVyIGJ1dCBJIGFza2VkIHRoZSBxdWVzdGlvbiBhbmQgcHJvdmVkIHRoZSB2aWRlbyB3YXMgZmFrZS4gSGUgbGF0ZXIgY29uZmlzY2F0ZWQgYmVjYXVzZSBoZSBkaWRuIGxpa2UgbWUgbGlzdGVuaW5nIHRvIGNvbWVkeSBhcyBJIGZlbGwgYXNsZWVwIGV2ZW4gdGhvdWdoIGl0IGlzIG9uZSBvZiB0aGUgd2F5cyBJIGNvcGUgd2l0aCBzdHJlc3MuIEkgbWlnaHQgYXNrIGZvciBsZWdhbCBhZHZpY2Ugb24gcmVkZGl0IGFuZCBmaW5kIGEgd2F5IHRvIHB1dCBoaW0gaW4gamFpbCBvciBqdXN0IHRha2UgaGltIG91dCBvZiBteSBsaWZlLiBJIGtub3cgaXQgbWlnaHQgc291bmQgaGFyc2ggYnV0IGZ1Y2sgaGltIGZvciBnaXZpbmcgbWUgZGVwcmVzc2lvbiBhbmQgc29jaWFsIGFueGlldHkuIEkgY2FuIHdhaXQgdGlsIGNvbGxlZ2Ugd2hlcmUgSSBjYW4ganVzdCBzdGFydCBhIG5ldyBsaWZlIHdoZXJlIEkgbm90IHRoYXQgd2llcmQga2lkIHRoYXQgZXZlcnlvbmUgZmVlbHMgYmFkIGZvci4gSGUgYWxzbyBkaXNvd25lZCBteSBiaWcgYnJvdGhlciBhbmQgc2lzdGVyIGJlY2F1c2UgbXkgc2lzdGVyIGlzIGRhdGluZyBhIGJsYWNrIGd1eShoZSBpcyByZWFsbHkgY29vbCBhbmQgbGlrZXMgZHJhZ29uIGJhbGwgYW5kIGFsbG90IG9mIHN0dWZmIEkgY2FuIHJlbGF0ZSB0bykgYW5kIG15IGJyb3RoZXIgaGFkIHNleCB3aXRoIGhpcyBub3cgd2lmZSBiZWZvcmUgdGhleSB3ZXJlIG1hcnJpZWQoaGUgaXMgYSBtYXJpbmUpLiBBbHNvIEkgd2FzIHJhaXNlZCB3aXRoIHN1Y2ggc3RyaWN0bmVzcyB0aGF0IGlmIEkgZ2V0IGludG8gYW55IHRyb3VibGUgSSBjYW4gaGVscCBidXQgY3J5IHdoaWNoIGlzbiBnb29kIGluIGhpZ2ggc2Nob29sLiBBbnl3YXlzIHRoYW5rcyBmb3IgdGhlIG5pY2UgY29tbWVudC4gYnR3IEkgYSBkdWRlIGlmIEkgZGlkbiBzcGVjaWZ5LgpUYXJrYW5pYW4sIHdobyByZXByZXNlbnRzIHRoZSBuZWlnaGJvcmhvb2Qgd2hlcmUgdGhlIG1hc3NhZ2UgcGFybG9yIG9wZXJhdGVkLCBtYWRlIHRoZSBtb3Rpb24gdG8gbGV2eSB0aGUgJDUwLDAwMCBmaW5lLCBzYXlpbmcgc2hlIHRob3VnaHQgdGhhdCBhIGNsZWFyIHBhdHRlcm4gb2YgaWxsZWdhbCBjb25kdWN0IGhhZCBiZWVuIGVzdGFibGlzaGVkIG92ZXIgdGhlIGxhc3QgMiAxLzIgeWVhcnMuCkhpcyBtb3RpdmVzIGhhcyB0byBiZSBzb21ldGhpbmcgYmlnLCB3aHkgZWxzZSB3b3VsZCBOb2RhIGtlZXAgdGhlbSBzbyBhbWJpZ291cyBhZnRlciBhbGwgdGhpcyB0aW1lPyBIZSB3YXMgYWxzbyB0aGUgZmlyc3QgZ3V5IFN1Z2ltb3RvIGZvdWdodCwgYW5kIGhhcyBiZWVuIGEgZm9pbCB0byBTdWdpbW90byBkdXJpbmcgdGhlIGNvdXJzZSBvZiB0aGUgc2VyaWVzLiAKT3ZlcnZpZXcgZm9yIGt1bWEKSWYgdGhlcmUgYXJlIGEgZmV3IHBlb3BsZSBzdWZmZXJpbmcgZnJvbSBhcnRocml0aXMsIHRoZSBzaXR1YXRpb24gaXMgd29yc2UuLiAKWW91ciBhZ2VuY3kgaXMgcHJvYmFibHkgZG9pbmcgNSUgbWF0Y2hpbmcgYnV0IG9ubHkgaW4gcGF5IHBlcmlvZHMgd2hlcmUgeW91IGNvbnRyaWJ1dGUuIFlvdSB3aWxsIG5lZWQgdG8gZW5zdXJlIHRoYXQgeW91IGNvbnRyaWJ1dGUgaW4gZXZlcnkgc2luZ2xlIHBheSBwZXJpb2QgdG8gZW5zdXJlIHRoZSBtYXRjaC4gSWYgeW91IHdhbnQgdG8gZnJvbnQgbG9hZCB0aGUgVFNQIGFuZCBzdGlsbCBnZXQgdGhlIDUlIGVhY2ggeWVhciwgaXQgbm90IHRvbyBoYXJkIHRvIGZpZ3VyZSB0aGUgZm9ybXVsYSBvdXQuCkRvbiBsZXQgdGhlIHdlYXRoZXIgZ2V0IGluIHlvdXIgaGVhZC4gQXNzdW1pbmcgeW91IGZyb20gTUEgeW91IHRyYWluZWQgaW4gdGhpcyB0eXBlIG9mIHdlYXRoZXIgYmVmb3JlLCBzbyBqdXN0IHdlYXIgd2hhdCB5b3Uga25vdyB0byBiZSBjb21mb3J0YWJsZSBmb3IgeW91IGF0IHRoYXQgdGVtcCBhbmQgeW91IGJlIGZpbmUuIEkgaGF2ZSBydW4gaW4gc2ltaWxhciBjb25kaXRpb25zIGJ1dCB0aGUgaWRlYSBvZiBkb2luZyBpdCBmb3IgNCBob3VycyBpcyBhIGJpdCBpbnRpbWlkYXRpbmcuIApMb29rIGF0IHRoZSBzcGEgcGFja2FnZXMgb2Ygb3RoZXIgc3BhIGhvdXNlcyB0byBnZXQgc29tZSBpZGVhcy4gCkl0IGFsc28gb3BlbmVkIG1lIHVwIGludGVsbGVjdHVhbGx5LiBIb25lc3RseSwgSSBoYXZlIG5vIGJhY2tncm91bmQgaW4gc3Bpcml0dWFsaXNtLCBtZXRhcGh5c2ljcywgc3R1ZHlpbmcgdGhlIGFuY2llbnQgbXlzdGVyeSBzY2hvb2xzLCBhbnl0aGluZyBsaWtlIHRoYXQ7IG15IGJhY2tncm91bmQgaXMgaW4gcHJvZ3Jlc3NpdmUgcG9saXRpY3MgYW5kIGRydWcgbGVnYWxpemF0aW9uLiBPbmx5IHBzeWNoZWRlbGljIGRydWdzIG9wZW5lZCBtZSB1cCB0byB0aGUgd2lsZGVyIHJlYWxpdGllcyBvZiBsaWZlLCBhbmQgaXQgZ29vZCBiZWNhdXNlIEkgaGF2ZSBhIHZlcnkgcmF0aW9uYWwgYW5kIHNrZXB0aWNhbCBidXQgb3BlbiBtaW5kZWQgcGVyc3BlY3RpdmUuIApJZiB0d28gb3IgbW9yZSBwbGF5ZXJzIG1ha2UgdGhlIHNhbWUgaGFuZCAob3IgaGFuZHMgdGhhdCByYW5rIHRoZSBzYW1lKSB0aGVuIHRoZSBwb3QgaXMgc3BsaXQuIEluIHRoaXMgY2FzZSwgYXNzdW1pbmcgbm8gYXZhaWxhYmxlIGZsdXNoZXMsIGVhY2ggcGxheWVyIG1ha2VzIGFuIEFjZSBoaWdoIHN0cmFpZ2h0LiAKRXhhY3RseS4gQW5kIG15IHBhcmVudHMgc3RydWdnbGVzIGluZGl2aWR1YWxseSBhbmQgdG9nZXRoZXIgaGVscGVkIG1vdGl2YXRlIG1lIHRvIG5vdCBoYXZlIGtpZHMuIApXaHkgc2lsaWNvbiBpcyB1c2VkIGluIG1lbW9yeSBjaGlwPwpBbm90aGVyIGV4YW1wbGUgdGhhdCB5b3UgbWlnaHQgbG9vayBpbnRvIGlzIE15Y2VuZWFuIEdyZWVrLiBJdCB3YXMgZGVjaXBoZXJlZCBpbiB0aGUgMTk1MHMsIGxvbmcgYWZ0ZXIgUHJvdG8gR3JlZWsgaGFkIGJlZW4gcmVjb25zdHJ1Y3RlZC4KT25lIG9mIHRoZSB3b21lbiBpbnZvbHZlZCBpbiB0aGUgMjAxMCBzaG9vdGluZyBvZiBhIG1hbiBkdXJpbmcgYSB0b3BsZXNzIG1hc3NhZ2UgaW4gQWxsZW50b3duIHdhcyBhcnJlc3RlZCBsYXN0IG1vbnRoIG9uIHByb3N0aXR1dGlvbiBjaGFyZ2VzLCBhY2NvcmRpbmcgdG8gY291cnQgcmVjb3Jkcy4gU3Vuc2hpbmUgQS4gRGF1YmVydCwgMjMsIG9mIEFsbGVudG93biBhbGxlZ2VkbHkgYXJyYW5nZWQgYSBzZXh1YWwgdHJ5c3Qgd2l0aCBhbiB1bmRlcmNvdmVyIHN0YXRlIHRyb29wZXIgb24gTWFyY2ggMTkuIFRoZSB0cm9vcGVyIGNvbnRhY3RlZCBEYXViZXJ0IG9uIGFuIG9ubGluZSBjbGFzc2lmaWVkIGFkIHNpdGUgYW5kIHRoZXkgYXJyYW5nZWQgdG8gbWVldCBhdCB0aGUgU3VwZXIgOCBNb3RlbCBvbiBBaXJwb3J0IFJvYWQgaW4gQWxsZW50b3duLCBjb3VydCByZWNvcmRzIHNheS4gVGhlIHRyb29wZXIgd2FzIHRvbGQgdG8gYnJpbmcgY29uZG9tcyB0byB0aGUgbWVldGluZywgYWNjb3JkaW5nIHRvIGNvdXJ0IHJlY29yZHMuCkFsbW9zdCBldmVyeW9uZSB3aWxsIGFzayB5b3UgaG93IHRoZXkgY2FuIGdldCBvbmUgb2YgdGhlc2UgbWFjaGluZXMgYXMgd2VsbC4gWW91IGNhbiBub3cgZ2l2ZSB1cCB0aGUgeWVhciBvbGQgaGFuZCBzaHVmZmxpbmcgYW5kIG9sZCBzY2hvb2wgdGVjaG5pcXVlcyBhcyB3ZWxsLiAKTWFueSBvZiB0aGUgbWVkaWNhdGlvbnMgZ2l2ZW4gaW4gdGhlIGhvc3BpdGFsIGFsc28gY2F1c2VkIHJlZHVjZWQgdmVudGlsYXRpb24sIGFuZCBuYXJjb3RpY3MgYXJlIHRoZSB3b3JzdCBvdXQgb2YgdGhlc2UuIFNvIHlvdSBsZXNzIGxpa2VseSB0byB0YWtlIGEgZnVsbCBicmVhdGgsIGxlc3MgbGlrZWx5IHRvIHRha2UgdGhlIGFpciBpbiBkZWVwbHksIGFuZCBsZXNzIGFibGUgdG8gcHJvZHVjZSBhIGZvcmNlZnVsIGNvdWdoIHdoZW4geW91IG9uIHRoZW0uIFRoZXkgYWxzbyBmcmVxdWVudGx5IGFkbWluaXN0ZXJlZCBmb3IgYW55IHBhaW4gY29tcGxhaW50LCBhbmQgbW9zdCBhZG1pdHMgdG8gdGhlIGhvc3BpdGFsIHdpbGwgaGF2ZSBiYWQgcGFpbiBjb21wbGFpbnRzLiAKVGhlIHNob3AgaXMgb24gdGhlIGxlZnQgaGFuZCBzaWRlIG9mIFN1a2h1bXZpdCBTb2kgMzMgYXMgeW91IHByb2NlZWQgZG93biBmcm9tIHRoZSBTdWtodW12aXQgUm9hZCBtb3V0aCBvZiB0aGUgc29pLiAKSGUgYWxzbyBzY2FtbWVkICQxOCBtaWxsaW9uIG91dCBvZiBXZXN0cGFjLCBCYW5rIG9mIFF1ZWVuc2xhbmQsIExhIFRyb2JlIEZpbmFuY2lhbCBTZXJ2aWNlcywgUmhpbm8gTW9uZXkgYW5kIE1lcmNlZGVzIEJlbnogRmluYW5jaWFsIFNlcnZpY2VzIHVzaW5nIHRoZSBzYW1lICJtb2R1cyBvcGVyYW5kaSIuIEhlIHdhcyBzZW50ZW5jZWQgdG8gMTIgeWVhcnMgaW1wcmlzb25tZW50IHdpdGggYSBub24gcGFyb2xlIHBlcmlvZCBvZiBuaW5lIHllYXJzLiBUaGUgY291cnQgd2FzIHRvbGQgSm9yZGFub3UsIGFsb25nIHdpdGggYWNjb3VudGFudHMgUm9iZXJ0IFphaWEgYW5kIFNjb3R0IEFydGh1ciwgZmFsc2lmaWVkIGRvY3VtZW50cyB0byB0aGUgQ29tbW9ud2VhbHRoIEJhbmsgImZvciB0aGUgcHVycG9zZSBvZiBvYnRhaW5pbmcgMjMgc2VwYXJhdGUgbG9hbnMgb24gYmVoYWxmIG9mIGNsaWVudHMiLCB3aXRoIHBsYW5zIHRvIHNoYXJlIGluIHRoZSBwcm9maXRzLiAKU28gdW50cnVlLCBWaW9sZXQuIFRoZSBDYW5hZGlhbiBMaWJlcmFsIFBhcnR5IGhhZCBiZWVuIHB1YmxpY2x5IHJldmVhbGVkIHRvIGJlIHJvdXRpbmVseSBjb3JydXB0IHdpdGggcHVibGljIGZ1bmRzLiBJZiB5b3UgbGV0IG9uZSBwYXJ0eSBnZXQgYXdheSB3aXRoIHRoYXQsIGFsbCBwYXJ0aWVzIHdpbGwgcHJhY3RpY2UgaXQgZm9yZXZlci4gCkdyYXRlZnVsbHlHb2RsZXNzICAyIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCk1heSBJIHJlY29tbWVuZCBhIGJvb2s/IFRoZSBFdGhpY2FsIFNsdXQgaXMgYSBib29rIHRoYXQgaGVscGVkIG1lIHVuZGVyc3RhbmQgcmVsYXRpb25zaGlwcyBzbyBtdWNoIGJldHRlci4gSSByZWNvbW1lbmQgaXQgZm9yIGFueW9uZSwgbm90IGp1c3QgdGhvc2UgbG9va2luZyB0byBvcGVuIHVwIHRoZWlyIHJlbGF0aW9uc2hpcHMsIGFzIEkgdGhpbmsgaXQgcHJvdmlkZXMgc29tZSBnb29kIGluc2lnaHQgYWJvdXQgdGhlIHdheXMgd2UgZXhwZWN0IHJlbGF0aW9uc2hpcHMgdG8gd29yayB2cyB0aGUgd2F5IHRoZXkgZG8sIG9yIGNvdWxkLiBJdCBoYXMgYSBsb3QgdG8gdGVhY2ggYWJvdXQgc3BlYWtpbmcgaG9uZXN0bHksIGFuZCBhYm91dCBtYWtpbmcgcmVsYXRpb25zaGlwcyBhIHByaW9yaXR5IGV2ZW4gaWYgdGhleSBub3QgbW9ub2dhbW91cy4gSXQgYWxzbyBleHBsYWlucyBhIGxvdCBhYm91dCBob3cgdG8gZXN0YWJsaXNoIGhlYWx0aHkgYm91bmRhcmllcyBhbmQgc3BlYWsgaG9uZXN0bHkuCkxhIHZlcnNpb24gb2ZmaWNpZWxsZSBhbXJpY2FpbmUgcXVhbnQgYXV4IGF0dGVudGF0cyBkdSAxMSBzZXB0ZW1icmUgMjAwMSBpbXB1dGUgIHVuIGNvbW1hbmRvIHNhb3VkaWVuIGwnYXR0YXF1ZS4gCkdhZ2EgaGFzIG1hbnkgdGF0dG9vcyBhbmQgZ2V0cyBuZXcgb25lcyBvZnRlbi4gSXQgYWxzbyBpbmNsdWRlcyB3aGVyZSB5b3UgY2FuIGFjcXVpcmUvbGlzdGVuIHRvIHRoZW0uIApTbyBvcGVuaW5nIHVwIGEgc2Vjb25kIGZyb250IGFnYWluc3QgYSBuYXRpb24gdGhhdCBpc24gZnVsbHkgcHJlcGFyZWQgaXMgYSBzdHJhdGVnaWMgbW92ZS4gCkJ1dCBpdCBmaXR0aW5nIHRoYXQgaGUgc2hvdWxkIGJlIHRoZSBvbmUgdG8gZW5kIE5vYmxpc3MsIGFuZCB0aGUgbWFubmVyIGluIHdoaWNoIGl0IGdvZXMgZG93biBpcyBhcHByb3ByaWF0ZSBmb3IgdGhhdCBmYXQgc2FjayBvZiBzaGl0LiAKSXQgYW4gZXNwZWNpYWxseSBiYWQgc2hvdmUgd2hlbiB5b3UgY29tYmluZSBpdCB3aXRoIHlvdXIgc21hbGwgM2JldCBzaXppbmcsIGJlY2F1c2UgaGUgZ29pbmcgdG8gaGF2ZSBhIHRvbiBvZiByYW5kb20gYXNzIGhhbmRzIHRoYXQgaGUgc2hvdWxkbiBub3JtYWxseSBoYXZlIGluIGEgM2JldCBwb3QuIApUaGUgb3RoZXIgbWFpbiByZWFzb24gaGUgd29uLCB3YXMgYmVjYXVzZSB0aGUgYmxpbmRzIHYgYXZlLiAKWW91ciBwbGF5IGlzIG1hZ25pZmllZCBvbiBhbiBpbnRlcm5ldCBjYXNpbm8uIE9uZSBtYWluIHJlYXNvbiBpcyB0aGF0IHRoZSBjYXJkcyBhbmQgaGFuZHMgYXJlIHBsYXllZCBzbyBtdWNoIGZhc3Rlci4gVGhlcmUgaXMgdmVyeSBsaXR0bGUgcGh5c2ljYWwgbW92ZW1lbnQsIGFzIGFsbCB5b3UgaGF2ZSB0byBkbyBpcyBwb2ludCBhbmQgY2xpY2sgdGhlIG1vdXNlLiBJdCBsaXRlcmFsbHkgdGFrZXMgc2Vjb25kcy4gSW4gcmVhbCBsaWZlIHRoZXJlIGlzIHRoZSBwaHlzaWNhbCBtb3Rpb24gb2YgcGlja2luZyBjaGlwcyB1cCwgY291bnRpbmcgY2hpcHMsIGFuZCBwbGFjaW5nIHRoZW0gaW4gdGhlIGFwcHJvcHJpYXRlIHBsYWNlLgpOVGhpbmsgYWJvdXQgaXQgdGhpcyB3YXk6IE1FUlMgZm9yIG1vcnRnYWdlcyBpcyBsaWtlIGhvbGRpbmcgc3RvY2tzICJpbiBzdHJlZXQgbmFtZSAiIGluIGEgYnJva2VyYWdlIGFjY291bnQuIEl0J3MgYWxsIGVsZWN0cm9uaWMsIGFsbCBhYm91dCB0aGUgZGF0YWJhc2UuIFlvdSBidXkgc2hhcmVzLCBzZWxsIHNoYXJlcyBhbmQgdHJhZGUgc2hhcmVzIHdpdGhvdXQgZXZlciBob2xkaW5nIGEgcGllY2Ugb2YgcGFwZXIgaW4geW91ciBoYW5kLiBCdXQgd2hhdCBkbyB5b3UgaGF2ZSB0aGF0IHJlYWxseSBwcm92ZXMgdGhlIHNhbGUgd2FzIGRvbmUgY29ycmVjdGx5IGFuZCB0aGF0IHlvdSB0cnVseSBvd24gdGhvc2UgNTAwIHNoYXJlcyBvZiBJQk0gb3IgR29vZ2xlPwpTYWRseSBwZW9wbGUgYnJvdWdodCB1cCBpbiB0cmFkaXRpb25hbCBDaGluZXNlIGZhbWlsaWVzIHRlbmQgdG8gYmUgc2VjcmV0bHkgcmFjaXN0LiAKSSB0cmF2ZWxsZWQgd2l0aCBmcmllbmRzL1NPcyB0byBwbGFjZXMgSSBiZWVuIGJlZm9yZSBvciBldmVuIGxpdmVkIGluIGFuZCBpdCB3YXMgc3RpbGwgYW1hemluZy4gClRoZSBsZWdhbCBkb2N1bWVudCBkZW1hbmRlZCBjb250cmFjdHMsIGNhbmNlbGVkIGNoZWNrcywgZW1haWxzLCBhbmQgYW55IG90aGVyIGNvbW11bmljYXRpb25zIHdpdGggbW9yZSB0aGFuIDYwIHBlb3BsZSBhbmQgY29tcGFuaWVzLgpSb3lhbGhhd2szNDUgIDQsMTIxIHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpUaGUgc2NyZWVuIGRpc3BsYXlzIGFtYXppbmcgY29sb3JzIGFuZCB0aGUgZGltZW5zaW9ucyBvZiB0aGUgdW5pdCBhcmUgMS4zNzUgYnkgMTIuNzUgYnkgOC44NzUgdG90YWwgaW5jaGVzLiAKODg4IFNwb3J0IG1hbmFnZXMgdG8gYmUgaW50ZXJlc3RpbmcgZm9yIHB1bnRlcnMgYWx3YXlzIGFuZCBpcyBwcm91ZCB0byBnaXZlIGEgc2FmZSBhbmQgcmVsaWFibGUgYmV0dGluZyBlbnZpcm9ubWVudCB3aGVyZSBleGNlbGxlbnQgY3VzdG9tZXIgc2VydmljZSBpcyB0aGUgY29ybmVyIHN0b25lIG9mIGFuIG92ZXJhbGwgZmFudGFzdGljIGdhbWluZyBleHBlcmllbmNlLldpdGggdGhlIGxhdW5jaGluZyBvZiB0aGUgc3BvcnRzIGJldHRpbmcgd2ViIHNpdGUgY3VzdG9tZXJzIHdlcmUgYWxsb3dlZCB0byBlbmpveSBiZXR0aW5nIG9uIHRoZSBtb3N0IHByb21pbmVudCBzcG9ydHMgZXZlbnRzIGJlc2lkZXMgdGhlIHBvc3NpYmlsaXR5IHRvIGJldCBpbiB0aGUgY2FzaW5vIG9yIHRoZSBwb2tlciBwYWdlLiAKIkl0IGlzIGEgdmVyeSBzZXJpb3VzIGludmVzdGlnYXRpb24sIiBEb3VnIFdvb2QsIGEgcGFydG5lciBhdCBSZWVkIFNtaXRoIGFuZCB0aGUgQXNzb2NpYXRpb24gb2YgTmF0aW9uYWwgQWR2ZXJ0aXNlcnMnIGdlbmVyYWwgY291bnNlbCwgc2FpZCBkdXJpbmcgYSBwcmVzZW50YXRpb24gYXQgdGhlIG9yZ2FuaXphdGlvbidzIE1hc3RlcnMgb2YgTWFya2V0aW5nIGNvbmZlcmVuY2UgaW4gT3JsYW5kby4gIlRoZXkgaGF2ZSBpc3N1ZWQgc29tZSBzdWJwb2VuYXMuIFRoZXkgd2lsbCBiZSBpc3N1aW5nIG1vcmUgc3VicG9lbmFzLCIgaGUgc2FpZC4gIkl0IG1heSB0dXJuIG91dCB0byBiZSBub3RoaW5nIGlzIHdyb25nLCIgaGUgYWRkZWQsIGJ1dCAiaXQgY291bGQgdHVybiBvdXQgcXVpdGUgdGhlIG9wcG9zaXRld2UnbGwga25vdyB0aGF0IGluIHRoZSBuZXh0IHNpeCBtb250aHMgdG8gYSB5ZWFyLiIKVHVybnMgb3V0IGhlIHdhcyBoYXZpbmcgc29tZSBwZXJzb25hbCBpc3N1ZXMgLiBXZSBib3RoIGFwb2xvZ2l6ZWQgYW5kIHRoZW4gdGFsa2VkIGFib3V0IHRoaXMgd2Vla2VuZHMgZmlnaHRzLiAKSSBhY3R1YWxseSB0YWtlIGNhcmUgb2YgbG90cyBvZiBwYXRpZW50cyBhY3RpdmVseSB0cnlpbmcgdG8gcXVpdC4gCkhlIElOU0lTVFMgb24gZ2l2aW5nIGEgaHVnZSBwbGF0Zm9ybSB0byBlc3NlbnRpYWxseSB0aGUgd29yc3Qgb2Ygc29jaWV0eSBhbmQgbW9yb25zLiBUaGF0IG9uZSBpZGlvdCBmcm9tIHRoZSBQcm91ZCBCb3lzIHRoYXQgc2hvdmVkIGEgZGlsZG8gdXAgaGlzIGFzcyB0byBvd24gdGhlIGxpYnMsIEpvbmVzLCBKb3JkYW4gUGV0ZXJzb24sIHRoZSBndXkgdGhhdCBwZWRkbGVkIGhpcyBnb2xkIGJ1c2luZXNzLCBtY2FmZmVlLCBldGMuIExpc3QgZ29lcyBvbi5UaGUgc3VicmVkZGl0IGlzIGFyZ3VhYmx5IGV2ZW4gd29yc2UuIApBIGxvdCBvZiBwZW9wbGUgYXJlIHNheWluZyBob3cgdGhpcyBnYXJiYWdlIGlzIGV4cGVjdGVkIGluIEFsYWJhbWEsIGJ1dCBpdCBoYXBwZW5zIGFuZCBpcyBpbiBtYW55IHdheXMgd29yc2UgZHVlIHRvIGlyb255IGFuZCBoeXBvY3Jpc3kgaW4gcGxhY2VzIHdoZXJlIGFsbCB0aGUgd2hpdGUgcGVvcGxlIHNheSB0aGUgInJpZ2h0LCBQQyIgdGhpbmdzLCBhbmQgdm90ZSBmb3IgdGhlICJ0b2xlcmFudCIgcGFydGllcywgYW5kIHNvIG9uLi4gClRoZSB1c2VyIGRpZCBub3QgdW5kZXJzdGFuZCBPaG1zIGxhdyBhbmQgYmF0dGVyeSBzYWZldHkuIFdoZW4geW91IHVzZSBhIG1lY2hhbmljYWwgbW9kIHlvdSBIQVZFIHRvIHVuZGVyc3RhbmQgT2htcyBsYXcgYW5kIHdoYXQgeW91ciBiYXR0ZXJ5IGNhbiBoYW5kbGUuIFNheSBJIHB1dCBhIC4wOW9obSBidWlsZCBvbiBzb21lIGF2ZXJhZ2UgU29ueSAxODY1MC4gCkl0IHN0dWZmIHlvdSBmaW5kIGluIHRoZSBidWxrIHNlY3Rpb24gdGhvdWdoIS4gCk5vIG1hdHRlciBob3cgdGhleSB3ZXJlIHdyaXR0ZW4gd2VsbCwgbm8gbWF0dGVyIGhvdyB0aGV5IGNyZWF0ZWQgaW4gYSBnb29kIGludHRlbGlnZW5jZSwgbm8gYm90cyBjYW4gYmUgc3VjY2Vzc2Z1bCBhcyBzdWNoIGFzIGEgcGVyc29uLiAKVW50ZXJzY2hpZWRsaWNoZW4gVGlzY2hlbiBhdXMsIGVudHNjaGVpZGV0IGRpZSBSZWloZW5mb2xnZSBpaHJlcyBBdXNzY2hlaWRlbnMgYmVyIGRpZSBQbGF0emllcnVuZy4gSXN0IGRpZSBSZWloZW5mb2xnZSBuaWNodCBlaW5kZXV0aWcgZmVzdHp1c3RlbGxlbiwgd2VyZGVuIGFsbGUgZXZlbnR1ZWxsIGFuZmFsbGVuZGVuCkJvYkxlQm9ldWYgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvClBhdWwncy4gClBldGVyc2J1cmcgSW50bCBBaXJwb3J0IEhvdGVsc0NoYXJsb3R0ZSBDb3VudHkgQWlycG9ydCBIb3RlbHNOZWFyIENvbGxlZ2VzSG90ZWxzIG5lYXIgRmFzaGlvbiBGb2N1cyBIYWlyIEFjYWRlbXkgU2FyYXNvdGEsIEZMSG90ZWxzIG5lYXIgU2FyYXNvdGEgQ291bnR5IFRlY2huaWNhbCBJbnN0aXR1dGVIb3RlbHMgbmVhciBSaW5nbGluZyBDb2xsZWdlIG9mIEFydCBhbmQgRGVzaWduSG90ZWxzIG5lYXIgRWFzdCBXZXN0IENvbGxlZ2Ugb2YgTmF0dXJhbCBNZWRpY2luZUhvdGVscyBuZWFyIE5ldyBDb2xsZWdlIG9mIEZsb3JpZGFIb3RlbHMgbmVhciBVbml2ZXJzaXR5IG9mIFNvdXRoIEZsb3JpZGEgICBTYXJhc290YSBNYW5hdGVlIFNhcmFzb3RhLCBGTEhvdGVscyBuZWFyIEFyZ29zeSBVbml2ZXJzaXR5IFNhcmFzb3RhSG90ZWxzIG5lYXIgU2FyYXNvdGEgU2Nob29sIG9mIE1hc3NhZ2UgVGhlcmFweUFsbCBTaWVzdGEgS2V5IFJlc3RhdXJhbnRzUmVzdGF1cmFudHMgbmVhciBUcm9waWNhbCBCcmVlemUgUmVzb3J0QWxsIHRoaW5ncyB0byBkbyBpbiBTaWVzdGEgS2V5VGhpbmdzIHRvIGRvIG5lYXIgVHJvcGljYWwgQnJlZXplIFJlc29ydFRyYXZlbCBHdWlkZXNBcHBzQ3J1aXNlc0dyZWVuTGVhZGVyc1JvYWQgVHJpcHMuIApBY2NvcmRpbmcgdG8gUGl0dCBoZSB1c2VzIGhpcyBHaWJzb24gcmVndWxhcmx5IGZvciBtb3dpbmcgam9icyBhbmQgZm9sa3Mgb2Z0ZW4gdGVhc2UgaGltIHRoYXQgdGhlIGxhd25tb3dlciBoZSBob29rcyB1cCB0byB0aGUgdHJhY3RvciBoYXMgbW9yZSBwb3dlci4gUGl0dCBoYXMgYnJvdWdodCBoaXMgR2lic29uIHRvIHRoZSBNb3JnYW4gQ291bnR5IHNob3cgZm9yIHRoZSBwYXN0IHR3byB5ZWFycyBhbmQgZXZlbiBzaG93ZWQgYXQgdGhlIHNob3cncyBwcmVkZWNlc3NvciB3aGVuIGl0IHdhcyBmb3JtZXJseSBrbm93biBhcyB0aGUgQ290dG9ud29vZCBGb3JnZSBBbnRpcXVlIFRyYWN0b3IgYW5kIFBvd2VyIFNob3cuCklmIHlvdSBhcmUgc3VtbW9uZWQgZm9yIGEgZGVmYXVsdCBoZWFyaW5nIGl0IHdpbGwgdHlwaWNhbGx5IHRha2UgMyA0IHZpc2l0cyBiZWZvcmUgdGhlIGNvdXJ0IGRldGVybWluZXMgeW91IGFyZSBzdWl0YWJsZSBmb3IgamFpbCB0aW1lLCBzZW50ZW5jZXMgY2FuIGxhc3QgYXQgYSBtYXhpbXVtIG9mIDYgbW9udGhzLCBhbmQgeW91IHdpbGwgY29tZSBvdXQgc3RpbGwgb3dpbmcgdGhlIHNhbWUgYW1vdW50LiAKUGx1cywgaGUncyBiZWVuIG1ha2luZyBydWRlIGNvbW1lbnRzIGFib3V0IG15IHdlaWdodCBhbmQgZ3JhYmJpbmcgbXkgbG92ZSBoYW5kbGVzLiBJIHdlbnQgdG8gdGhlIGd5bSB0aGlzIGV2ZW5pbmcgYW5kIGNvbWUgaG9tZSB0byBtb3JlIHdvcmssIGFuZCBtYWtpbmcgaGltIGEgc2FuZHdpY2guIApFZ28gZm9yIGhlciBMYXMgVmVnYXMgcmVzaWRlbmN5IEVuaWdtYSBjb25jZXJ0IGRlYnV0Ckp1bmkgMjAxMy4uIApUaGV5IGJvdGggdGhyb3cgZG93biB0aGVpciBjYXJkcy4gCk1hZHBpcmF0ZWJpcHB5ICA4IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KIlRoaXMgaXMgbm90IGxpa2VseSB0aGUgbGFzdCB0aW1lIHlvdSdsbCBzZWUgQmVuIEFmZmxlY2sgYXQgb25lIG9mIG91ciBmaW5hbCB0YWJsZXMsIiBzYWlkIHNwb2tlc3dvbWFuIE5hbmN5IEZyaWVkbWFuLiAiSGUgaGFzIGJlY29tZSBhIHJlc3BlY3RlZCBtZW1iZXIgb2YgdGhlIHBva2VyIGVsaXRlIGFuZCBjb250aW51ZXMgdG8gd29yayB0byBpbXByb3ZlIGhpcyBnYW1lLiIKRHVrYXMncyB2ZXJzaW9uLCB2ZXJ5LiA4IE1heSAyMDA3IC4gCkRlY2lkZSBvbiB0aGUgdHlwZSBvZiBnYW1lIHlvdSB3aWxsIHBsYXkgYXQgeW91ciBsYWRpZXMgcG9rZXIgbmlnaHQuIFRleGFzIEhvbGQgJ0VtIGlzIHBvcHVsYXIgYnV0IHNvIGFyZSBPbWFoYSwgUmF6eiwgNyBjYXJkIHN0dWQsIGFuZCBtYW55IG90aGVycy4gSWYgeW91IGFyZSB1bnN1cmUgb2YgdGhlIHJ1bGVzLCBncmFiIGEgcG9rZXIgcnVsZSBib29rIG9yIGxvb2sgdGhlbSB1cCBvbmxpbmUuIFdvbWVuIHRoYXQgYXJlIG5ldyB0byB0aGUgZ2FtZSBvZiBwb2tlciBvciB3aG8gaGF2ZSBub3QgcGxheWVkIGluIGF3aGlsZSBtYXkgbmVlZCBhIHJlZnJlc2hlciBjb3Vyc2UuCllvdXIgc3RyaWtlciBpcyBwcmV0dHkgbXVjaCB3aGF0IHlvdSBwcmVmZXIgYW5kIHdoYXQgZml0cyB5b3VyIHBsYXkgc3R5bGUuIEkgcmVjb21tZW5kIGdldHRpbmcgYSBzdHJpa2VyIHdpdGggc29tZSBwaHlzaWNhbCBzdGF0cyBhcyB3ZWxsIGFzIHBhY2U7IGJvdGggZm9yIHlvdXIgdGhyb3VnaCBiYWxscyBiZWluZyBlZmZlY3RpdmUgYnV0IGFsc28gYmVjYXVzZSB5b3VyIGZvcm1hdGlvbiBpcyB3aWRlIHdoaWNoIGNvdWxkIGxlYWQgdG8gbG90cyBvZiBjcm9zc2luZy4gQnV0IGl0IG9mYyB1cCB0byB1CldoZW5ldmVyIG15IG1vdGhlciBhbmQgZmF0aGVyIGFyZSB0YWxraW5nIHRvIHNvbWVvbmUsIGFuZCB0aGUgY29udmVyc2F0aW9uIHR1cm5zIHRvIGRpc2N1c3NpbmcgbWUgb3Igb25lIG9mIG15IHR3byBzaWJsaW5ncyBteSBkYWQgYWx3YXlzIGJsdXJ0cyBvdXQ6ICJ3ZSBrbm93IHdobyB0aGUgZmF0aGVyIGlzLCBidXQgd2UgYXJlbiBzdXJlIGFib3V0IHRoZSBtb3RoZXIiLgpUaGVyZSBhcmUgYXBwcm94aW1hdGVseSAzMCBsaWNlbnNlZCBicm90aGVscyBpbiBOZXZhZGEsIGFjY29yZGluZyB0byBlc3RpbWF0ZXMgZnJvbSB0aGUgQ2VudGVyIG9mIERpc2Vhc2UgQ29udHJvbC4gCkdvb2RuaWdodCBTd2VldCBQcmluY2UuLiAKVGhlIG1haW4gaGVhbHRoIGJlbmVmaXRzIG9mIHZlZ2FuaXNtIGNvbWUgZnJvbSB0aGUgZmFjdCBpdCBsb3dlciBpbiBjYWxvcmllcyBhbmQgZmF0IGFuZCBoaWdoZXIgaW4gZmlicmUgdGhhbiBhIHNoaXR0eSBvbW5pIGRpZXQuIApSaXNoYW4gYmVnYW4gb2ZmIHdpdGggYSBiYWNrZ3JvdW5kIGluIGFjdHVhcmlhbCBzY2llbmNlLCBhbmQgc3BlbnQgaGlzIDFzdCBjb3VwbGUgb2Ygb3BlcmF0aW5nIHllYXJzIHByZWRpY3RpbmcgaHVtYW4gbW9ydGFsaXR5IGZvciBpbnN1cmFuY2UgYnVzaW5lc3NlcyBhbmQgd3JpdGluZyBib2FyZCBleGFtcy4gClRoZXkgdXN1YWxseSBiZXQgb24gaGFuZHMgbGlrZSBwb2NrZXQgYWNlcywgb3IgaGlnaCBzdWl0ZWQgY2FyZHMuIERvbid0IG1ha2UgdGhlIG1pc3Rha2UgdGhhdCBJIHVzZSB0byBtYWtlIGFuZCBiZXQgYmVjYXVzZSBJIGhhZCByb3lhbHR5LiBJIHVzdWFsbHkgd291bGQgYmV0IG9uIGEgUSw5IG9yIGEgSiw4IEkgaGF2ZSBmb3VuZCB0aGF0IGNhcmRzIGxpa2UgdGhpcywgZG9uJ3QgcGF5IG9mZi4gClNvIGl0J3MgYSBiaXQgb2YgYSByb2FkIGJsb2NrLkJ1dCBJIHdhcyBhbHNvIGN1cmlvdXMgb24gKG1vcmUgZXhwZXJpZW5jZWQpIGJ1dCBhbHNvIGdlbmVyYWwgcGVvcGxlJ3Mgdmlld3Mgb2YgdGhlIHNpdHVhdGlvbiwgZnJvbSB0aGUgb3V0c2lkZSBsb29raW5nIGluLlRoYW5rcyBmb3IgeW91ciBoZWxwIGFuZCBnb29kIGx1Y2shWWVhaCBiYXNpY2FsbHkgZXZlcnlvbmUgY292ZXJlZCBpdDsgY29zdCBmcmllbmRseTsgJDUwIChtYXgpIGZvciBhIGN1cCAoSSBmb3JnZXQgaG93IG9mdGVuIHlvdSBuZWVkIHRvIGEgYnV5IG5ldyBvbmUsIEkndmUgaGFkIG1pbmUgZm9yIHllYXJzKSB2cyAkMTIgYSBtb250aC8kMTQ0IGEgeWVhciAoZm9yZ2l2ZSBtZSBpZiB0aGF0J3MgaGlnaCwgYnV0IEkgaGF2ZW4ndCB1c2VkIHBhZHMvdGFtcG9ucyBpbiB5ZWFycykuLiAKV2Ugb25seSByZXF1aXJlIGFwcHJveGltYXRlbHkgMycgeCAzJyBwZXIgdGhlcmFwaXN0IHNvIHdlIGRvIG5vdCB0aWUgdXAgeW91ciB2YWx1YWJsZSB0cmFkZSBmbG9vciBzcGFjZS5XZSBjcmVhdGUgcmV2ZW51ZSBieSBjaGFyZ2luZyBhdHRlbmRlZXMgJDEwLjAwIHBlciAxMCBtaW51dGUgbWFzc2FnZS4gClJMdWNhczMwMDAgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvCklmIFRoZSBmaXJzdCBjYXJkIGlzIGFuIGFjZSBhbmQgdGhlIHNlY29uZCBpcyBhbHNvIGFuIGFjZSB3aGF0IHRoZSBwcm9iaWxpdHk/ClRoYXQgd2FzIGEgd2hpbGUgYmFjayBub3csIGFuZCBJIGhhZCBubyBzaW1pbGFyIGV4cGVyaWVuY2Ugc2luY2UuIApQb2tlciwgaG93ZXZlciwgaGFzIG1hbnkgcnVsZXMgYW5kIGhhbmRzIHRoYXQgaGF2ZSB0byBiZSByZW1lbWJlcmVkIHNvIHRoYXQgb25lIGNvdWxkIGJlIGFibGUgdG8gYW5hbHlzZSBhbmQgYWN0IGFjY29yZGluZyB0byB0aGUgc2l0dWF0aW9uLiBUaGUgc3RyYXRlZ2llcyB1c2VkIHdoaWxlIHBsYXlpbmcgcG9rZXIgdmFyaWVzIGZyb20gcGVyc29uIHRvIHBlcnNvbiBkZXBlbmRpbmcgdXBvbiB0aGVpciBza2lsbHMgd2hpY2ggY2FuIGJlIGNhbGxlZCBhcyBwb2tlciBwbGF5aW5nIHBlcnNvbmFsaXR5LCBhbmQgYSBwZXJzb24gbXVzdCBkZXZlbG9wIGhpcyBwb2tlciBwbGF5aW5nIHBlcnNvbmFsaXR5IGJlZm9yZSBhdHRlbXB0aW5nIHRvIHBsYXkgaW4gc2VyaW91cyBwb2tlciBsZXZlbHMuIFRoaXMgaXMgdXN1YWxseSB0aGUgcmVhc29uIHdoeSBwZW9wbGUgaW4gSW5kaWEgcHJlZmVyIHRvIHBsYXkgcG9rZXIgYXQgaG9tZSByYXRoZXIgdGhhbiBwbGF5aW5nIHN0cmFpZ2h0IGF3YXkgaW4gYSBjYXNpbm8uIApIZSBzaG93cyBtZSA3NG8gd2l0aCBhIDIgcGFpci4gClRoZSBzZXR0bGVtZW50IGFncmVlbWVudCBzYXlzIENodXJjaGlsbCB1bmRlcndlbnQgYSBwc3ljaG9sb2dpY2FsIGFzc2Vzc21lbnQgaW4gdGhlIGZhbGwuIFNoZSBjYW5ub3QgcmVhcHBseSBmb3IgYSBsaWNlbmNlIHRvIHByYWN0aXNlIGluIE5vdmEgU2NvdGlhIHVubGVzcyBzaGUgcHJvdmlkZXMgYSBxdWFsaWZpZWQgbWVkaWNhbCBvcGluaW9uIHRvIHRoZSBjb2xsZWdlIHNhdGlzZmFjdGlvbiB0aGF0IHNoZSBpcyBjb21wZXRlbnQgYW5kIGZpdCB0byBwcmFjdGlzZS4KVGhlIG90aGVyIHNpZGUgYXMgaW4gImdyZWVkIGlzIGdvb2QsIGxldCBub3QgcmVndWxhdGUgaW5kdXN0cnkiIGJ1dCB0aGUgb3RoZXIgc2lkZSBhcyBpbiAidGhlcmUgYSBiaWcgc25vdyBzdG9ybSBzbyBJIGd1ZXNzIHRoZXJlIG5vIHN1Y2ggdGhpbmcgYXMgZ2xvYmFsIHdhcm1pbmcuIi4gCkl0IGRvZXNuIGdvIHRoYXQgZmFzdCBhbmQgdGhlIHRyYWNrIGlzIGVsZXZhdGVkIHNvIHVubGlrZWx5IHRvIHN1ZmZlciBpbmN1cnNpb24gYnkgdHJlc3Bhc3NlcnMgb3IgbGFyZ2UgYW5pbWFscy4gCkJ1dCBoZSBiZWxvbmdlZCAgIGFuZCBpdCB3YXMgaGlzIGdsb3J5ICAgdG8gYW4gYWdlIG5vdCBvYnNlc3NlZCBieSBzcGVjaWFsaXNtOyBoZSB3YXMgb25lIG9mIHRoZSBsYXN0IG9mIHRoZSBFbmdsaXNoIHRyYWRpdGlvbiBvZiB0aGUgYW1hdGV1ciwgdGhlIGNvbm5vaXNzZXVyLCBhbmQsIGluIHRoZSBtb3N0IGRlbGlnaHRmdWwgc2Vuc2Ugb2YgdGhlIHdvcmQsIHRoZSBkaWxldHRhbnRlLi4gCkhlcmUgb25lLiBJIGtuZXcgdGhpcyBndXkgYmFjayBpbiB0aGUgZWFybHkgODAgbGV0IGNhbGwgaGltIEppbS4gCkFzIHNvbWVvbmUgd2hvIGhhcyB3b3JrZWQgYXMgYSBsaWZlZ3VhcmQgZm9yIG5lYXJseSAyMCB5ZWFycywgc29tZW9uZSB3aG8gaGFzIHJlc3BvbmRlZCB0byBhIG5lYXJseSBpZGVudGljYWwgaW5jaWRlbnQgd2hlcmUgSSBjb3VsZG4gc2F2ZSB0aGUgbWlzc2luZyBjaGlsZCwgeW91IGNhbiBkcmF3IGFsbCB5b3VyIGNvbmNsdXNpb25zIGZyb20gdGhpcyBvbmUgcGljdHVyZSwgaXQgZWFzeSB0byBzYXkgInRoZWlyIGNsb3RoZXMgYXJlbiB3ZXQsIGRpZCB0aGV5IGV2ZW4gdHJ5LCBJIHdvdWxkIGhhdmUgdHJpZWQgbm8gbWF0dGVyIHdoYXQiLCB0aGUgcmVhbGl0eSBvZiB0aGF0IHNvcnQgb2Ygc2l0dWF0aW9uIGlzIHByb2JhYmx5IG5vdCB3aGF0IHlvdSBwaWN0dXJpbmcuIFRoaXMgaXMgc29tZXRoaW5nIEkgY29uc3RhbnRseSByZW1pbmRlZCBvZiBzZWVpbmcgYXMgSSBwYXNzIGEgbWVtb3JpYWwgdG8gdGhlIGNoaWxkIHRoYXQgSSBjb3VsZG4gc2F2ZSBuZWFybHkgZXZlcnkgZGF5IG9mIHRoZSB3ZWVrLgpJbiBmYWN0LCBnb29nbGluZyBpdCBoYXMgVXJiYW4gRGljdGlvbmFyeSBhbmQgZXZlcnkgZnVja2luZyBhcnRpY2xlIHNheWluZyB0aGF0IGl0IHNsYW5nIGZvciBleGl0aW5nIHF1aWV0bHkgYW5kIG5vdCBsb25nLCBkcmF3biBvdXQgZ29vZGJ5ZXMuIApBdCBTd2lmdCdzIHVwY29taW5nIFRvcm9udG8gc2hvd3MgaW4gQXVndXN0LCB0aGUgY2xvc2VzdCBzZWF0cyBhcmUgaW4gc21hbGwgc3VwcGx5IG9uIHRoZSBzZWNvbmRhcnkgbWFya2V0LiBMZXNzIHRoYW4gMTAgdGlja2V0cyB3ZXJlIGF2YWlsYWJsZSBpbiB0aGUgc3RhbmRpbmcgYXJlYSBuZWFyIHRoZSBzdGFnZSBhbmQgZWFjaCB3YXMgbGlzdGVkIGZvciBhbiBhc2tpbmcgcHJpY2Ugb2YgJDEsMjAwIHRvICQ0LDIwMCBvbiByZXNlbGxlciBTZWF0R2Vlay4gCldlIG5lZWQgc29tZW9uZSB5b3VuZyAgIGxpa2UgT2JhbWEgd2FzLiAKSVJMIEkgZG9uIGhhdmUgbWFueSB3cmlua2xlcy4gUGVvcGxlIHN0aWxsIHRlbGwgbWUgdGhhdCBJIGRvbiBsb29rIG9sZCBlbm91Z2ggd2hlbiBJIHNheSBJIGhhdmUgYSAzMyB5ciBzb24uIFRoZSBmZXcgd3JpbmtsZXMgSSBkbyBoYXZlIEkga2VlcCBpbiBjaGVjayB3aXRoIHRoaW5ncyBsaWtlIHZpdGFtaW4gRSwgZ2x5Y29saWMgY2xlYW5zaW5nIHBhZHMgYW5kIGFudGkgYWdlaW5nIG1vaXN0dXJpc2VyIGV0Yywgbm90aGluZyBodWdlbHkgZXhwZW5zaXZlLiBJIGRvbiB3ZWFyIG1ha2UgdXAgdW5sZXNzIEkgaGF2ZSB0byBiZWNhdXNlIGl0IGdpdmVzIG1lIGFjbmUgYW5kIGRyaWVzIG91dCBteSBza2luLgpCeSBtYW5kYXRpbmcgZXZpZGVuY2UgYmFzZWQgaGlyaW5nIHByYWN0aWNlcyBhY3Jvc3MgYWxsIG9mIG91ciBhY2FkZW1pYyBkaXNjaXBsaW5lcyB0aGlzIGhhcyByZXN1bHRlZCBpbiBhIG11Y2ggbW9yZSBkaXZlcnNlIHBvb2wgb2YgaGlnaGx5IHF1YWxpZmllZCBmYWN1bHR5IGNhbmRpZGF0ZXMuIApJdCBwbGFjZXMgbW9yZSByZXNwb25zaWJpbGl0eSBvbiB0aGUgb3RoZXIgc3VwcG9ydCBwbGF5ZXJzIHRvIGFjdHVhbGx5IGhlYWwgYXMgd2VsbCwgcmF0aGVyIHRoYW4gZm9jdXNpbmcgb24gYWdncmVzc2l2ZSBkcHMgdGFjdGljcy4uIApHb2RzcGVlZC4uIApXaXRoIHJhdyBtb2RlIHRoaXMgaXMgbWluaW1pemVkIHNvIHlvdSBjYW4gYWRqdXN0IG1vcmUgb25jZSB5b3UgaGF2ZSB0aGUgcGhvdG8gb24gYSBjb21wdXRlci4uIApBIHByb2Zlc3NvciByZXNwb25zaWJsZSBmb3IgZ3JhZGluZyAzMDAgdGVybSBwYXBlcnMgbm8gbG9uZ2VyIG5lZWRzIHRvIHNuaWZmIG91dCBzdXNwZWN0IHNlbnRlbmNlcyBvciBwYXJhZ3JhcGhzIHRoYXQgc2VlbSB2YWd1ZWx5IG91dCBvZiBwbGFjZS4gTW9zdCBjb2xsZWdlcyBhbmQgdW5pdmVyc2l0aWVzLCBhbmQgbWFueSBoaWdoIHNjaG9vbHMsIHVzZSBwcm9ncmFtcyBzdWNoIGFzIFR1cm5pdGluLCB3aGljaCBkZXRlY3QgcGxhZ2lhcml6ZWQgY29udGVudCBsaWtlIG1hZ25ldGljIHdhbmRzIGRldGVjdCBtZXRhbC4gU3R1ZGVudHMgc3VibWl0IGFzc2lnbm1lbnRzIHVzaW5nIGFuIG9ubGluZSBwb3J0YWwsIHRoZSBwcm9ncmFtIHNjYW5zIHRoZSB0ZXh0LCBhbmQgd2hlbiB0aGUgdGVhY2hlciBzaWducyBvbiB0byBsb29rIGF0IHRoZSBiYXRjaCBvZiB3b3JrLCB0aGV5IGNhbiBzZWUgd2hhdCBwZXJjZW50YWdlIG9mIGVhY2ggcGFwZXIgY29udGFpbnMgcmVjeWNsZWQgbWF0ZXJpYWwgYW5kIHdoZXJlIGV2ZXJ5IGZsYWdnZWQgbGluZSBoYXMgYmVlbiB0YWtlbiBmcm9tLgpJIGdyZXcgdXAgYmV0d2VlbiBCdWZmYWxvIGFuZCBSb2NoZXN0ZXIgYW5kIHlvdSBiZSBzdXJwcmlzZWQgYXQgaG93IG11Y2ggc25vdyB0aG9zZSBsYWtlcyBnZW5lcmF0ZS4uIApUaGF0IHdvdWxkIG9mIGNvdXJzZSBiZSBhbiBvZGQgdGhpbmcgdG8gZG8sIGdpdmVuIHRoYXQgUmVwdWJsaWNhbnMsIHdobyBoYWQgYSAxMDAgeWVhciBoaXN0b3J5IG9mIG9wcG9zaXRpb24gdG8gc2xhdmVyeSwgc3VwcG9ydCBmb3IgdGhlIGNpdmlsIHJpZ2h0cyBvZiBibGFjayBBbWVyaWNhbnMsIGVmZm9ydHMgdG8gcGFzcyBhbnRpIGx5bmNoaW5nIGJpbGxzLCBvcHBvc2l0aW9uIHRvIEppbSBDcm93IGxhd3MgICBlZmZvcnRzIHRvIGRpc2JhbmQgdGhlIEt1IEtsdXggS2xhbi4gVGhlIEdPUCBldmVuIHZvdGVkIGZvciB0aGUgMTk2NCBDaXZpbCBSaWdodHMgQWN0IHdpdGggbXVjaCBsYXJnZXIgbWFqb3JpdGllcyB0aGFuIERlbW9jcmF0aWNzLiBXaHkgd291bGQgcmFjaXN0cyBhbmQgc2VncmVnYXRpb25pc3QgRGVtb2NyYXRpY3Mgbm93IGJlY29tZSBSZXB1YmxpY2Fucz8KQWxzbyBwcml6ZXMgdGhlbXNlbHZlcyBmb3IgdGhlIGhpZ2hlciBzdGFrZXMgd2lsbCBiZSBjYXNoIGFjY29yZGluZyB0IHdoYXQgaGUgc2FpZC4gCkxlZnQgQWxpdmUgSXMgQSBGYXNjaW5hdGluZyBDb25jZXB0LCBCdXQgQSBDcmFwcHkgR2FtZUxlZnQgQWxpdmUsIHRoZSBuZXcgZ2FtZSBieSBTcXVhcmUgRW5peCwgc291bmRzIGFtYXppbmcuIEl0IG1peGVzIGludGVuc2Ugc25lYWtpbmcgYW5kIG1hc3NpdmUgcm9ib3QgYmF0dGxlcywgYW5kIGlmIHRoYXQgZG9lc24ndCBzb3VuZCBmYW1pbGlhciBlbm91Z2gsIGl0IGV2ZW4gaGFzIGFydCBmcm9tIE1ldGFsIEdlYXIncyBZb2ppIFNoaW5rYXdhIHRvIGRyaXZlIHRoZSBwb2ludCBob21lLiAKWW91IGdldCByZWFkeSBmb3Igd29yay4gRG9uIHdvcnJ5IGFib3V0IGFueXRoaW5nLiBDYWxsIHVwIHRob3NlIGFtYXppbmcgZnJpZW5kcyBvZiB5b3VycyBhbmQgZ28gZGFuY2luZy4gTWFtYSB3aWxsIGZpeCBldmVyeXRoaW5nIGVsc2UgZm9yIHlvdS4gSSBoYXZlIGFscmVhZHkgZGlzY3Vzc2VkIGl0IHdpdGggQmVuIGFuZCBKdWR5LiBUaGV5IGFyZSBjb21pbmcgdG8gbXkgaG91c2UgZm9yIGEgZmV3IGRheXMgZm9yIHNvbWUgZ3JhbmRtYSB0aW1lLiBUaGV5IG5lZWQgYSB2YWNhdGlvbiBmcm9tIHlvdSBhbmQgSmVmZi4gTW9tIHdhZ3MgaGVyIGZpbmdlciBpbiBteSBmYWNlIGF0IHRoYXQgbGluZS4gR2VlIHRoYW5rcyBtb20gZm9yIG1ha2luZyBtZSBmZWVsIGV2ZW4gbGVzcyBsaWtlIGEgcGVyc29uIHNpbmNlIEkgY2FuIG1vdGhlciBteSBiYWJpZXMgYXQgdGhlIG1vbWVudC4gQXMgSSBwZWVyIGJhY2sgYXQgdGhpcyBtb21lbnQsIG1vbSByZWFsbHkgaXMgYSBibGVzc2luZy4gU2hlIGRvZXNuIGhhdmUgdG8gdGFrZSBCZW4gYW5kIEp1ZHksIGJ1dCBpcyBzbyB3aWxsaW5nIHRvLgpJbiB0aGlzIEphbi4gMjAsIDIwMTksIGZpbGUgcGhvdG8sIE5ldyBFbmdsYW5kIFBhdHJpb3RzIG93bmVyIFJvYmVydCBLcmFmdCB3YWxrcyBvbiB0aGUgZmllbGQgYmVmb3JlIHRoZSBBRkMgQ2hhbXBpb25zaGlwIE5GTCBmb290YmFsbCBnYW1lIGJldHdlZW4gdGhlIEthbnNhcyBDaXR5IENoaWVmcyBhbmQgdGhlIE5ldyBFbmdsYW5kIFBhdHJpb3RzLCBpbiBLYW5zYXMgQ2l0eSwgTW8uCldoeT8gQmVjYXVzZSBldmVuIHRob3VnaCB5b3Ugbm90IGFsd2F5cyBnb2luZyB0byBnZXQgeW91ciBwcmVmZXJyZWQgb3V0Y29tZSwgb3RoZXIgbmV3IG9wcG9ydHVuaXRpZXMgYXJlIHN0aWxsIG9wZW4gdG8geW91LiAKSSBhZG9wdGVkIHR3byBmYW1pbGllcyB0aGlzIHllYXIgZm9yIENocmlzdG1hcyB0aHJvdWdoIHRoZSBsb2NhbCBjb21tdW5pdHkgY2VudGVyLiBUaGVzZSBmYW1pbGllcyBsaXZlIGluIHBvdmVydHkgYW5kIGhhdmUgaGFkIHNvbWUgdmVyeSBiYWQgbHVjay4gSXQgd2FybXMgbXkgaGVhcnQgdG8ga25vdyB0aGV5IGFuZCB0aGVpciBjaGlsZHJlbiB3aWxsIGV4cGVyaWVuY2UgQ2hyaXN0bWFzIHRoZSB3YXkgSSB3YXMgbHVja3kgZW5vdWdoIHRvIGhhdmUgZXhwZXJpZW5jZWQgaXQuIApXaWxzb24sIDMxLCBhbmQgdGhlIGJ1c2luZXNzIGhhZCBhcHByb3ByaWF0ZSBsaWNlbnNlcyBmb3IgbWFzc2FnZXMsIGJ1dCB0aGVyYXBpc3RzIHdlcmUgcHJvdmlkaW5nIGFkZGl0aW9uYWwsIGlsbGVnYWwgc2VydmljZXMsIEx1dHogc2FpZC4KSXQgdGhlIGVxdWl2YWxlbnQgb2YgYSBraWQgdGhyZWF0ZW5pbmcgdG8ga2ljayB5b3UgaW4gdGhlIGJhbGxzLiAKSGlzIGV4IHdpZmUgdG9sZCBpbnZlc3RpZ2F0b3JzIHRoYXQgaGUgZ3JldyB1cCB3aXRoIGEgc2luZ2xlIG1vbSBpbiBhIGZpbmFuY2lhbGx5IHVuc3RhYmxlIGhvbWUgYW5kIGhlIGZlbHQgYSBuZWVkIHRvIGJlIHNlbGYgcmVsaWFudC4uIApIYXZlIHlvdSBldmVyIGNoZWF0ZWQgaW4gZmFjZWJvb2sgdGV4YXMgaG9sZGVtIHBva2VyIHRvIGdpdmUgeW91cnNlbGYgbW9yZSBmYWNlYmJ5IEZhY2Vib29rUG9rZXJDaGlwIDkgeWVhcnMgYWdvNEh1YlBhZ2VzIFR1dG9yaWFscyBhbmQgQ29tbXVuaXR5V2h5IGNhbid0IEkgbG9nIGluIHRvIGh1YnBhZ2VzIG9uIG15IGFuZHJvaWQgcGhvbmU/YnkgRGF2aWQgU3Byb3VsbCA3IHllYXJzIGFnb1doeSBjYW4ndCBJIGxvZyBpbiB0byBodWJwYWdlcyBvbiBteSBhbmRyb2lkIHBob25lPzRHYW1lcywgVG95cywgYW5kIEhvYmJpZXN3aHkgY2FudCBpIHN0b3AgcGFseWluZyBwb2tlciBvbmxpbmU/Ynkgc3dlZHZpa2luZyA4IHllYXJzIGFnb3doeSBjYW50IGkgc3RvcCBwYWx5aW5nIHBva2VyIG9ubGluZT9XaHkgY2FuJ3QgSSBsb2cgaW50byBIdWJwYWdlcyBpbiBGaXJlZm94P2J5IEJlY2tpIFJpenp1dGkgNCB5ZWFycyBhZ29XaHkgY2FuJ3QgSSBsb2cgaW50byBIdWJwYWdlcyBpbiBGaXJlZm94P015IGJlc3QgZnJpZW5kIGNhbiwgYnV0IEknbSBub3QgYWJsZSB0byBkbyBpdC4gSSBjYW4gbG9hZCB0aGUgcGFnZSwgYnV0IHdoZW4gSSBlbnRlciBteSB1c2VybmFtZSBhbmQgcGFzc3dvcmQsIGl0IHJlZGlyZWN0cyBtZSBiYWNrIHRvIHRoZSBob21lIHBhZ2UsIG5vdCBsb2dnZWQgaW4uIEFueSBpZGVhcz9TaG93IERldGFpbHNOZWNlc3NhcnlIdWJQYWdlcyBEZXZpY2UgSURUaGlzIGlzIHVzZWQgdG8gaWRlbnRpZnkgcGFydGljdWxhciBicm93c2VycyBvciBkZXZpY2VzIHdoZW4gdGhlIGFjY2VzcyB0aGUgc2VydmljZSwgYW5kIGlzIHVzZWQgZm9yIHNlY3VyaXR5IHJlYXNvbnMuIApPbiBOb3YuIDksIFBhcmlzIGFsbGVnZWRseSBiZWNhbWUgYW5ncnkgd2l0aCB0aGUgdmljdGltIGFuZCBzdGFydGVkIGJlYXRpbmcgaGVyLiBBZnRlciBQYXJpcyBsZWZ0IHRoZSBob21lLCBCZWF2ZW4gRGVzamFyZGlucyBzYWlkIHRoZSB2aWN0aW0gc251Y2sgb3V0LCAiZmVhcmluZyBmb3IgaGVyIGxpZmUsIiBhbmQgZmxhZ2dlZCBkb3duIGEgcGFzc2VyYnkuCkVhY2ggZGF5LCB1c2VycyBvZiB0aGUgV29ybGQgQXJjaGl2ZXMgZmFtaWx5IG9mIHdlYnNpdGVzIHV0aWxpemUgb3VyIHJlc2VhcmNoIHRvb2xzIGFuZCBoaXN0b3JpY2FsIHJlY29yZHMgdG8gZGlzY292ZXIsIHJlc2VhcmNoLCBhbmQgc2hhcmUgdGhlaXIgZGlzY292ZXJpZXMgd2l0aCBvdGhlciB1c2VycyB3b3JsZHdpZGUuIApPcGVyYXRpdmUgdmFnaW5hbCBkZWxpdmVyeSAoOCBSQ1RzKS4KU2hlIGxvb2tzIHNvIHdob2xlc29tZSBhbmQgb3V0ZG9vcnN5ICAgc28gdW5jb21wbGljYXRlZC4gVGhhdCBmcmVzaCBjb21wbGV4aW9uIGFuZCB1bmxpbmVkIGJyb3cuIEluIHBob3RvZ3JhcGhzIGluIHRoZSBSYXZlbnN3b29kIHllYXIgYm9vaywgc2hlIHNtaWxlcyBicm9hZGx5IGFzIHNoZSBwb3NlcyB3aXRoIHRoZSBqdW5pb3Igc3dpbW1pbmcgYW5kIGNyb3NzIGNvdW50cnkgdGVhbXMuIApUaGUgaG91c2UgaXMgb3duZWQgYnkgb25lIG9mIG15IG1hbGUgY29tcGFuaW9ucyByZWxhdGl2ZXMuIFNoZSB3ZW50IHRvIGphaWwgb24gYSBkaXNwZW5zYXJ5IGJ1c3QgYmFjayBpbiBEZWNlbWJlciBhbmQgZ290IG91dCBpbiB0aGUgYmVnaW5uaW5nIG9mIEFwcmlsLiBTaGUgbmV2ZXIgdG9sZCB1cyB0aGVyZSB3YXMgYSBiYWxsb29uIG9uIGhlciBtb3J0Z2FnZSBvciBldmVuIHRoZSBhbW91bnQgb3dlZC4gCkluc3RlYWQgeW91IGhhdmUgYSBib3ggb2YgYm9uZXMgdGhhdCBjb3VsZCBoYXZlIGNvbWUgZnJvbSBhbnl3aGVyZSBzdG9yZWQgYXQgdGhlIHNoZXJpZmYgb2ZmaWNlIGJlZm9yZSBiZWluZyBicm91Z2h0IHRvIHRoZSBleGFtaW5lciBvZmZpY2UgYW5kIGxvb2tpbmcgYXQgMiBkYXlzIGxhdGVyLiAKQmFpdCBhbmQgd2FpdD8gU25lYWsgYSBzaW5nbGUgZ2VubnkgZm9yIHRoZSB3aG9sZSBnYW1lPyBXaGF0IGFyZSBwZW9wbGUgZG9pbmc/IEkgdHJ5IHRvIGxlYXZlIG90aGVyIHN1cnYgYWxvbmUgc28gSSBkb24gZnVjayB1cCBhbmQgZW5kIHVwIHNjcmV3aW5nIDIgcGVvcGxlIG92ZXIgcmF0aGVyIHRoYW4gMSAgIGJ1dCBpdCBtZWFucyBJIGhhdmUgbGl0dGxlIGluc2lnaHQgaW50byB3aGF0IHRoZXkgZG9pbmcuLiAKSXMgYW4gYWNlIGluIGNhcmRzIGNvbnNpZGVyZWQgYSAxIG9yIDE0CkphbmluZSBMZWRpbmdoYW0sIGRpcmVjdG9yIG9mIGxvY2FsIGJ1c2luZXNzIGFuZCBzdGFydHVwIGNvbW11bml0eSBkZXZlbG9wbWVudCBhdCB0aGUgTG9uZ21vbnQgRWNvbm9taWMgRGV2ZWxvcG1lbnQgUGFydG5lcnNoaXAgd2lsbCBiZSBsZWF2aW5nIGhlciBwb3NpdGlvbiBhZnRlciBtb3JlIHRoYW4gdHdvIHllYXJzIHdpdGggdGhlIG9yZ2FuaXphdGlvbi4KQ29ycmVjdCwgdGhlIHBhdHRlcm4gaXMgY2hhcnRlZCBmb3Igbm9ybWFsIDIgb3ZlciAyIFhzLiBJIHN0aXRjaGVkIGFzIG11Y2ggYXMgSSBjb3VsZCBhcm91bmQgdGhlIHNraW4gKGhhaXIsIG5lY2tsYWNlLCBldGMuKSBzbyB0aGF0IEkgY291bGQgZWFzaWx5IGtlZXAgdHJhY2sgb2Ygd2hlcmUgSSB3YXMgc3RpdGNoaW5nLCBjb25zdGFudGx5IGRvdWJsZSBjaGVja2luZyBteSByb3dzIHNvIHRoYXQgSSBkaWRuIGxvc2UgdHJhY2sgb2Ygd2hlcmUgSSB3YXMuIApTZXQgdGhlIHN0b3JhZ2UgY2hlc3QgZmlsdGVycyAob24gYWxsIG9mIHRoZW0pIHRvIHdoYXRldmVyIGtpbmQgb2Ygb3JlIHlvdSBhcmUgbWluaW5nLiAKQWxsIGFyZSBhdmFpbGFibGUgb3ZlciB0aGUgY291bnRlci4gVGhpcyB3aWxsIGhlbHAgcmVkdWNlIHlvdXIgc3RvbWFjaCBhY2lkIGFuZCBtYXkgaGVscCBzb21lLiBJdCB3YXMgdGhlIGFuc3dlciB0byBteSB0dW1teSBwYWlucyEuIApUaGUgdGVydGlhcnkgYmFua2luZyBpbmR1c3RyeSwgdGhpbmdzIGxpa2UgbG9hbnMgZm9yIHBheWNoZWNrcyBvciBoaWdoIGludGVyZXN0IG1lZGljYWwgY3JlZGl0LCBhcmUgc2hvd2luZyBzaWducyBvZiBsaWZlLiAKTG9MIGdhdmUgbWUgdGhlIGZlZWxpbmcgdGhhdCBpdCBkb2VzbnQgbWF0dGVyIGFueSBsb25nZXIgaG93IG11Y2ggdGltZSB5b3UgcHV0IGluIHN1Y2ggYSBnYW1lLiBJIGhhdmUgbW9yZSB0aGFuIDJrIGhvdXJzIG9uIExvTCBhbmQgaXQgaXMgZnJ1c3RyYXRpbmcgdG8gc2VlIHRoYXQgc3Ryb25nZXIgY2hhbXBzIHdpbiB0aGUgZ2FtZXMgYW5kIHJvbGVzIGFyZSBub3QgbWFraW5nIHNlbnNlIGFueSBsb25nZXIgKGZ1bGx0YW5rcyB3aG8gYXJlIGFzc2Fzc2lucyBhdCB0aGUgc2FtZSB0aW1lKS4gT2YgY291cnNlIHRoZSBnYW1lIHN0aWxsIG5lZWRzIHNraWxsIGJ1dCBpIHRoaW5rIGFzIGEgbm9uIGdvZGxpa2UgcHJvIHBsYXllciB0aGlzIGFzcGVjdCBzZWVtcyB0byBzaHJpbmsgbW9yZSBhbmQgbW9yZS4uIApGcm9tIHdoYXQgSSBjYW4gdGVsbCB0aGUgc3BhY2UgeW91IHB1cmNoYXNpbmcgb3Igc2VsbGluZyBpcyBzcGFjZSBvbiBzYWlkICJ1YmJleSBib3giIGRyaXZlcyBubz8gV2hhdCBlbnN1cmVzIHRoZXJlIGV2ZW4gc3BhY2UgZm9yIG1lIHRvIHB1cmNoYXNlIGlmIG5vYm9keSBidXlzIG9uZSBvZiB0aGVzZS4gClRoZSByb2J1c3QgZWZmZWN0IG9mIGV4ZXJjaXNlIG9uIG5ldXJvZ2VuZXNpcyBpcyBtYWludGFpbmVkIHRocm91Z2hvdXQgbGlmZSBpbiByb2RlbnRzLiBJbiBtaWNlIHRoYXQgZXhlcmNpc2VkIGNvbnRpbnVvdXNseSBmcm9tIHlvdW5nIHRvIG1pZGRsZSBhZ2UsIHRoZSBub3JtYWwgYWdlcmVsYXRlZCBkZWNsaW5lIGluIGNlbGwgZ2VuZXNpcyB3YXMgc2lnbmlmaWNhbnRseSBsZXNzIHRoYW4gaW4gdGhlaXIgc2VkZW50YXJ5IGNvdW50ZXJwYXJ0cyBbNTFdLiBNb3Jlb3ZlciwgaW4gbWljZSB0aGF0IHN0YXJ0ZWQgd2hlZWwgcnVubmluZyBpbiBtaWRkbGUgYWdlIFs1Ml0gb3Igb2xkIGFnZSBbMzddLCBuZXcgbmV1cm9uIG51bWJlciB3YXMgZWxldmF0ZWQuIEZ1cnRoZXJtb3JlLCByZWNlbnQgc3R1ZGllcyBzaG93ZWQgdGhhdCBwaHlzaWNhbCBhY3Rpdml0eSBjYW4gcmV2ZXJzZSBwcmVnbmFuY3kgIFs1M10gYW5kIHJhZGlhdGlvbiB0cmVhdG1lbnQgcmVsYXRlZCBbNTRdIGRlY2xpbmUgaW4gaGlwcG9jYW1wYWwgbmV1cm9nZW5lc2lzLiBJdCBzaG91bGQgYmUgbm90ZWQgaG93ZXZlciwgdGhhdCBpbiBjZXJ0YWluIHRyYW5zZ2VuaWMgbW91c2UgbW9kZWxzIGZvciBuZXVyb2xvZ2ljYWwgZGlzZWFzZSB0aGUgYmVuZWZpY2lhbCBlZmZlY3Qgb2YgcGh5c2ljYWwgYWN0aXZpdHkgb24gbmV1cm9nZW5lc2lzIGlzIGVxdWl2b2NhbCBbMzBdLiBUcmFuc2dlbmljIG1pY2UgdGhhdCBleHByZXNzIGh1bWFuIHByZXNlbmlsaW4gMSB2YXJpYW50cyBsaW5rZWQgdG8gZWFybHkgb25zZXQgZmFtaWxpYWwgQURbNTVdIGFuZCBhIG1vdXNlIG1vZGVsIGZvciBIdW50aW5ndG9uJ3MgZGlzZWFzZSBbNTZdIGRvIG5vdCBzaG93IGV4ZXJjaXNlIGluZHVjZWQgbmV1cm9nZW5lc2lzLiBUaGVyZWZvcmUsIHRoZSBuZXVyb2dlbmljIGFuZCBjb2duaXRpdmUgZWZmZWN0cyBvZiBwaHlzaWNhbCBhY3Rpdml0eSBzaG91bGQgYmUgZXZhbHVhdGVkIGNhcmVmdWxseSBhY3Jvc3MgdGhlIHNwZWN0cnVtIG9mIG5ldXJvbG9naWNhbCBkaXNlYXNlcy4KVGhlIGNvdXJ0IGhlYXJkIHRoZSBkYXVnaHRlciB0cmllZCB0byBncmFiIGhlciBiZWxvbmdpbmdzIGFuZCBsZWF2ZSB0aGUgaG91c2UgaG93ZXZlciB0aGUgbW90aGVyIGJlZ2FuIHRocm93aW5nIHNob2VzIGF0IGhlci4gVGhlIGRhdWdodGVyIHNhaWQgc2hlIHB1c2hlZCBoZXIgbW90aGVyIGluIGEgYmlkIHRvIGdldCBhd2F5LCBob3dldmVyIHRoZSBvbGRlciB3b21hbiBjb250aW51ZWQgdGhyb3dpbmcgdGhpbmdzIGF0IGhlciBiZWZvcmUgZ3JhYmJpbmcgaGVyIGJ5IHRoZSBicmEsIGNhdXNpbmcgdGhlIGRhdWdodGVyIHRvIGZhbGwgb3Zlci4gCk1hc2FqZSBUcmFkaWNpb25hbCBBeXVydmVkYSBTaGlyb2RoYXJhCkhlIGlzIGN1cnJlbnRseSBmaW5pc2hpbmcgdGhlIGNyZWF0aW9uIG9mIGEgdGhpcmQgZXhwYW5zaW9uIGZvciB0aGUgY2FyZCBnYW1lLiAKQmVpbmcgdGhlIGVhc2llc3QgcGF0aCB0byBtYWtlIHJpY2hlcyBvdmVybmlnaHQgdGhlIHVyZ2Ugb2YgdGhlIGtpbmdzIGFuZCB0aGUgbGFuZGxvcmRzIGtuZXcgbm8gbGVhcHMgYW5kIGJvdW5kcyB3aGVuIGl0IGNhbWUgdG8gcmlzayB0aGVpciBraW5nZG9tcyBhbmQgbGFuZHMgYW5kIHNvbWV0aW1lcyBldmVuIHRoZWlyIGZhbWlseSBtZW1iZXJzIGp1c3Qgb24gb25lIHR1cm4gb2YgdGhlIGRpY2Ugd2hlbiBub3RoaW5nIHdhcyBsZWZ0IHdpdGggdGhlbSB0byBzdGFrZSBhdCBsYXN0IGluIGhvcGUgb2YgbWFraW5nIGEgc3VjY2VzcyBmb3IgdGhlIHZlcnkgbGFzdCB0aW1lLiAKQW5uYTogT3VyIHdob2xlIGhvdXNlIGlzIGhlYXRlZCB3aXRoIGFuIGFpciBzb3VyY2UgaGVhdCBwdW1wLCBhIHNtYWxsIHVuaXQgdGhhdCBhY3RzIGxpa2UgYSByZXZlcnNlIHJlZnJpZ2VyYXRvciwgdGFraW5nIGhlYXQgb3V0IG9mIHRoZSBjb2xkIGFpciBmcm9tIG91dHNpZGUgYW5kIHVzaW5nIGl0IHRvIGhlYXQgdGhlIGluc2lkZSBhaXIuIFRoZSB2ZXJ5IHRoaWNrIHdhbGxzIGFyZSBmaWxsZWQgd2l0aCBlZmZpY2llbnQsIGhpZ2ggbGV2ZWwgaW5zdWxhdGlvbiB0aGF0IG1ha2VzIGl0IHBvc3NpYmxlIHRvIGhlYXQgdGhlIGVudGlyZSBob3VzZSBmcm9tIHRoaXMgb25lIHNtYWxsIHNvdXJjZS4gSXQgY3V0cyBkb3duIG9uIHRoZSBhbW91bnQgb2YgZHVzdCBwcm9kdWNlZCBieSBhIGZvcmNlZCBhaXIgZnVybmFjZSBhbmQgc2VlbXMgdG8gaGVscCByZWR1Y2UgY2VydGFpbiBhbGxlcmdpZXMuIFRoZSBjZXJhbWljIHRpbGUgcm9vZmluZyBpcyBhbiBvbGQgaWRlYSBtYWRlIG5ldyBhZ2Fpbi4gVGhlc2Ugcm9vZnMgd2lsbCBsYXN0IGZvcmV2ZXIgYW5kIHRoZXJlIGlzIHByYWN0aWNhbGx5IG5vIHVwa2VlcC4gV2UgaGF2ZSBhbGwgdGhlIHVzdWFsICJtb2QgY29ucyIsIGxvdyBmbHVzaCB0b2lsZXRzLCByYWluZm9yZXN0IHNob3dlciBoZWFkcyB0aGF0IGFyZSBhY3R1YWxseSB3YXRlciBtaXNlcnMgYW5kLCBvaCB5ZXMsIHRoZSBoZWF0ZWQgYmF0aHJvb20gZmxvb3JzLCBzbyBuaWNlLgpUaGUgbW9zdCBoZWFsdGh5IHBlb3BsZSBpc24ndCBtdXNjdWxhci4gQnV0IGlmIHlvdSB3YW50IHRvIGdldCBtb3N0IG91dCBvZiB5b3VyIHRpbWUgYnVpbGRpbmcgbXVzY2xlLCB5b3Ugd2FudCBhcm91bmQgMjAlIHByb3RlaW4uIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnby4gCk9oIHllcyBJIGhhdmUgZ2FzIGJ1YmJsZXMgYWxsIHRoZSB0aW1lIHRoYXQgSSBjYW4gZmVlbCBnbyB1cCBhbmQganVzdCBkaXNhcHBlYXIuIApHYWxheGllcyB3b3VsZCBiZSBkZXN0cm95ZWQgYXMgc3RhcnMgc2VwYXJhdGUgZnJvbSB0aGUgbWFpbiBibGFjayBob2xlLiBBcHByb3hpbWF0ZWx5IHRocmVlIG1vbnRocyBiZWZvcmUgdGhlIEJpZyBSaXAsIHRoZVNvbGFyIFN5c3RlbShvciBzeXN0ZW1zIHNpbWlsYXIgdG8gb3VyIG93biBhdCB0aGlzIHRpbWUsIGFzIHRoZSBmYXRlIG9mIHRoZSBTb2xhciBTeXN0ZW0gMjIgYmlsbGlvbiB5ZWFycyBpbiB0aGUgZnV0dXJlIGlzIHF1ZXN0aW9uYWJsZSkgd291bGQgYmUgZ3Jhdml0YXRpb25hbGx5IHVuYm91bmQuIApFZCBDb2xlIGJyb3VnaHQgZmxhaXIgdG8gQ2hldnkKTm93IGl0IGlzIEF1Z3VzdCAyMDEzIGFuZCBJIGhhdmUgZ290IG15IGNidCwgTU9ULCBpbnN1cmFuY2UgYW5kIHRheC4gSSBtYW5hZ2VkIHRvIGNvbXBsZXRlbHkgb3ZlcmhhdWwgdGhlIGZyb250IGJyYWtlLiBOb3cgSSBrbm93IHRoaXMgZG9lc24ndCBzb3VuZCBtdWNoIGJ1dCBJIGhhdmUgbGl0ZXJhbGx5IGp1c3Qgc3RhcnRlZCBteSBsZXZlbCAzIE5WUSBpbiBtb3RvcmN5Y2xlIG1haW50ZW5hbmNlIGFuZCByZXBhaXIuIApTdWJtaXNzaW9ucyB3aXRoIFtpbiBkZXB0aF0gaW4gdGhlIHRpdGxlIGhhdmUgc3RyaWN0ZXIgcG9zdCBsZW5ndGggYW5kIHF1YWxpdHkgZ3VpZGVsaW5lcwpMZXMgY29va2llcyBkZSBwZXJmb3JtYW5jZSByZWN1ZWlsbGVudCBkZXMgaW5mb3JtYXRpb25zIHN1ciBsJ3V0aWxpc2F0aW9uIGRlIG5vcyBzaXRlcyB3ZWIgYWZpbiBkJ2FtbGlvcmVyIGxldXIgYXR0cmFjdGl2aXQsIGxldXIgY29udGVudSBldCBsZXVyIGZvbmN0aW9ubmFsaXQuIENlcyBjb29raWVzIG5vdXMgYWlkZW50LCBwYXIgZXhlbXBsZSwgIGR0ZXJtaW5lciBxdWVsbGVzIHBhZ2VzIHNlY29uZGFpcmVzIGRlIG5vdHJlIHNpdGUgc29udCB2aXNpdGVzIGV0IHF1ZWwgdHlwZSBkZSBjb250ZW51IGludHJlc3NlIG5vcyB1dGlsaXNhdGV1cnMuIE5vdXMgZW5yZWdpc3Ryb25zIGxlIG5vbWJyZSBkZSB2aXNpdGVzIGVmZmVjdHVlcyBzdXIgY2hhY3VuZSBkZSBub3MgcGFnZXMsIGxlIG5vbWJyZSBkZSBzb3VzIHBhZ2VzIGNvbnN1bHRlcywgbGUgdGVtcHMgcGFzcyBzdXIgbm90cmUgc2l0ZSB3ZWIsIGwnb3JkcmUgZGVzIHBhZ2VzIHZpc2l0ZXMsIGxlcyB0ZXJtZXMgZGUgcmVjaGVyY2hlIHV0aWxpc3MgcG91ciB0cm91dmVyIG5vdHJlIHNpdGUsIGxlIHBheXMsIGxhIHJnaW9uIGV0LCBsZSBjYXMgY2hhbnQsIGxhIHZpbGxlIGRlcHVpcyBsYXF1ZWxsZSBsJ2FjY3MgZXN0IGVmZmVjdHUuIApJdCB0b28gaW1wb3J0YW50IHRvIGJlIHRvbyBzY2FyZWQuIApUaGUgY29sZCBzdHVmZiBpcyB0aHJvd24gb24gdG9wLCBnZW5lcmFsbHksIHNvIGl0IHNob3VsZCBiZSByZWFsbHkgZWFzeSB0byBwZWVrIGRvd24gYW5kIHNlZSBpZiB5b3UgaGF2ZSBldmVyeXRoaW5nLiBJIGRvbiBrbm93IHdobyBkb3dudm90aW5nIHlvdSBidXQgaXQgbm90IG1lLCBJIGp1c3QgdHJ5aW5nIHRvIGJlIGhlbHBmdWwpam9sbHlnZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29NeSBhZHZpY2UgYXMgc29tZW9uZSB3aG8gY291bGQgbmV2ZXIgZ2V0IGludG8gZ29pbmcgdG8gdGhlIGd5bSwgZXZlbiB3aGVuIEkgaW4gdW5pdmVyc2l0eSBhbmQgd2UgaGF2ZSBhIG5pY2UgZ3ltIHRoYXQgYWxsIHRoZSBzdHVkZW50cyBhcmUgZm9yY2VkIHRvIHBheSBmb3IuRmluZCBzb21ldGhpbmcgYWN0aXZlIHRoYXQgeW91IGVuam95LCBhbmQgbWFrZSB0aGF0IHlvdXIgd29ya291dC4gCkNvbnNpZGVyaW5nIHRoYXQgU01FIGZpcm1zIHdpbGwgYmUgcGF5aW5nIGFsbW9zdCBoYWxmIG9mIHRvdGFsIGZ1ZWwgbGV2aWVzICh0aGVpciBzaGFyZSBleHBlY3RlZCB0byBiZSByb3VnaGx5ICQyLjUgYmlsbGlvbiBhbm51YWxseSBieSAyMDIzKSwgdGhlICQzODUgbWlsbGlvbiB0byBiZSBzZW50IGJhY2sgdG8gdGhlbSBpbiBhIHlldCB0byBiZSBzcGVjaWZpZWQgd2F5IGJhcmVseSBtb3ZlcyB0aGUgbmVlZGxlLiAKUGVjcyBzdGFydGVkIGh1cnRpbmcgYXQgdGhlIGZpZnRoIHNldCwgdHJpZWQgc29tZSBzdHJldGNoaW5nIGFuZCBzaGl0IGJ1dCBkaWRuIHdvcmsgc28gY2FsbGVkIGl0IHF1aXRzIGhlcmUuIFN0aWxsIHNvcmUgZnJvbSBtYXggZWZmb3J0IGJlbmNoIGFuZCB0aGF0IGRpZG4gaGVscCB0b2RheSwgYnV0IHdoYXRldmVyLiBUb21vcnJvdyBnb25uYSBraWxsIHRoZSBiYWNrIGJlY2F1c2UgSSBza2lwcGVkIGl0IHRvZGF5ICh3ZWxsLCBzb21lIGluIHRoZSB3YXJtIHVwKS4gCkthdGUzNTQ0IHUKUG9wdWxhck5ld0RpcmVjdCBQaXZvdCBQYXJ0cyBhbmQgU3QuIEVkd2FyZHMsIE5FIGV4ZW1wbGlmeSBzbWFsbCB0b3duIHN0YXJ0dXAgcG93ZXIgVmlzdWFsaXplIHlvdXIgc3BhY2UgdHJhbnNmb3JtZWQgd2l0aCBDYW1icmlhbiBTZWN1cmVTa3kgY2xvc2VzICQ2LjUgbWlsbGlvbiBmdW5kaW5nIHJvdW5kIExpbmNvbG4ncyBidXNpbmVzc2VzLCBzY2hvb2xzIGFuZCBub25wcm9maXRzIGNvbWUgdG9nZXRoZXIgdG8gc3VwcG9ydCBmdXR1cmUgZW50cmVwcmVuZXVycyBLQydzIEZpcmVicmFuZCBWZW50dXJlcyB3ZWxjb21lcyBuZXcgcGFydG5lciBSeWFuIE1lcmtldCBNaWx3YXVrZWUsIFN0LiBMb3VpcywgYW5kIEthbnNhcyBDaXR5IGxlYWQgdGhlIE1pZHdlc3QgaW4gZmlyc3QgZnVuZGluZ3Mgb2YgZmVtYWxlIGZvdW5kZWQgY29tcGFuaWVzIFZpc3RhIFBpcGUgU3VwcGx5IGluY3JlYXNlcyBvaWxmaWVsZCB2aXNpYmlsaXR5IGFuZCBhY2NvdW50YWJpbGl0eSB0aHJvdWdoIHBhcnRuZXJzaGlwIHdpdGggUmlnIENhbGxPdXQgTGluY29sbidzIGJ1c2luZXNzZXMsIHNjaG9vbHMgYW5kIG5vbnByb2ZpdHMgY29tZSB0b2dldGhlciB0byBzdXBwb3J0IGZ1dHVyZSBlbnRyZXByZW5ldXJzIEtDJ3MgRmlyZWJyYW5kIFZlbnR1cmVzIHdlbGNvbWVzIG5ldyBwYXJ0bmVyIFJ5YW4gTWVya2V0IFN0LiBMb3VpcyBiYXNlZCBUdW5lc3BlYWsgaW5ub3ZhdGVzIGluIHRoZSBtdXNpYyBpbmR1c3RyeQpHYW1ibGluZyBDYXNpbm8gQXJ0aWNsZXMKSW4gdGhlIGNvbmZlcmVuY2Ugcm9vbSBzaXRzIHRoZSB3YXIgd2VhdGhlcmVkIGVsZiwgQ3Vyc2FudGUuIFdpdGggaGltIGFyZSBDcnVtIGFuZCBGaXIuIFNsb3dseSByb3RhdGluZyBhYm92ZSB0aGUgdGFibGUgaXMgYW4gaW1hZ2Ugb2YgYSBzbWFsbCBob3VzZSBhbmQgYSBoaW50IG9mIHRoZSBzdHJlZXRzIGFyb3VuZCBpdC4gVGhlIHR3byBzdG9yeSBob3VzZSBpcyBhIGNvcm5lciBsb3Qgd2l0aCBhIHdoaXRlIHBpY2tldCBmZW5jZSBhbmQgYSBiYXNrZXRiYWxsIGhvb3AgYWJvdmUgdGhlIGRyaXZlIHdheS4gQ3Vyc2FudGUgcyBleWVzIHRoZSBpbWFnZSB0aGUgd2F5IGEgaHVuZ3J5IHdvbGYgZG9lcyBhIHJhYmJpdC4KSSBkb24ndCBrbm93IHdoYXQgeW91J3JlIGFibGUgdG8gZG8gcG9zdCBzdXJnZXJ5IGFzIGZhciBhcyBvdGhlciB0aGVyYXBpZXMgZ28sIGJ1dCBBUlQgaXMgYWJzb2x1dGVseSB0cmFuc2Zvcm1pbmcgbXkgcG9zdHVyZS4gClNpIHZvdXMgYXZleiBkZXMgZmVzdGl2aXRzIGVuIHZ1ZSwgYW1pY2FsZXMsIGZhbWlsaWFsZXMsIGVuIHBldGl0IGNvbWl0IG91IGdyYW5kZSB0YWJsZSwgc3VydG91dCBwZW5zZXogYXUgcGxhaXNpciBkZSBwYXNzZXIgdW4gYm9uIG1vbWVudCBldCBwYXMgYXV4IGtpbG9zIHF1ZSB2b3VzIHBvdXJyaWV6IHByZW5kcmUuIEplIHN1aXMgdHJpc3RlIHF1YW5kIGplIHZvaXMgZGVzIHBlcnNvbm5lcyBhdm9pciBjZXR0ZSBwZW5zZSBpbnF1aXRlIGVuIHByZW1pZXIuIFNpIHZvdXMgbWFuZ2V6IHRyb3AgZGFucyBjZXR0ZSBwcmlvZGUsIGNlIHF1aSBlc3QgZnJxdWVudCwgY2Ugc3VycGx1cyBzZSByZ3VsZXJhIG5hdHVyZWxsZW1lbnQgcGFyIGxhIHN1aXRlLiAKQ28gd3JpdHRlbiBieSBNZXllciBhbmQgQnJpdGlzaCByYWRpb2xvZ2lzdCBCcmlhbiBXaGl0Y29tYmUsIGl0IHdvbiBhbiBJZyBOb2JlbCBQcml6ZSwgYXdhcmRlZCBhbm51YWxseSBieSB0aGUgQW5uYWxzIG9mIEltcHJvYmFibGUgUmVzZWFyY2ggbWFnYXppbmUgYXQgSGFydmFyZCBVbml2ZXJzaXR5IGZvciBlc3BlY2lhbGx5IGltYWdpbmF0aXZlIHNjaWVudGlmaWMgYWNoaWV2ZW1lbnRzLiAKRm91ciB5ZWFycyBqYWlsIGZvciBmcmF1ZApJZiB0aGUgaW5mb3JtYXRpb24geW91IHJlcXVpcmUgaXMgbm90IGluIG91ciBwdWJsaWNhdGlvbiBzY2hlbWUgcGxlYXNlIGNvbnRhY3QgdGhlIFVuaXZlcnNpdHkgaW4gd3JpdGluZy4gVG8gaGVscCB1cyBtYW5hZ2UgeW91ciByZXF1ZXN0cyBwbGVhc2UgZW5zdXJlIHRoYXQgeW91IGluY2x1ZGUgYSBkZXNjcmlwdGlvbiBvZiB0aGUgaW5mb3JtYXRpb24geW91IHJlcXVpcmUgYW5kIGFuIGFkZHJlc3MgdG8gd2hpY2ggd2UgY2FuIHByb3ZpZGUgdGhlIGluZm9ybWF0aW9uLCBwbGVhc2Ugc2VuZCB5b3VyIHJlcXVlc3QgdG86Ckkga25vdyB0aGF0IGlmIG15IGZhdGhlciBoYWQgdGFrZW4gaGlzIGxpZmUgYmVjYXVzZSBvZiBoaXMgZGlzb3JkZXIgdGhlbiBJIHdvdWxkIGhvbGQgYSBncnVkZ2UgYWdhaW5zdCBoaW0uIAozKSBJIGxpdmVkIGluIE9uZGluZSBmb3IgYSB3aGlsZSwgYW5kIHdoZXRoZXIgb3Igbm90IHlvdSBnZXQgYSBzaGFyZWQgcm9vbSwgeW91IHdpbGwgYmUgc2hhcmluZyBhIGJhdGhyb29tIGFuZCBraXRjaGVuIHdpdGggdGhlIGRvcm0gcm9vbSBuZXh0IHRvIHlvdS4gVGhlIGJ1aWxkaW5nIHdhcyBidWlsdCBpbiB0aGUgNjBzLCBhbmQgaXQgbm90IHRvbyBiYWQsIElmIEkgcmVtZW1iZXIgY29ycmVjdGx5IHRoZXJlIGlzIG5vIEFDIGluIHRoZSByb29tIGl0c2VsZiwgYnV0IGl0IGRvZXNuIGdldCB0b28gaG90IGluIHRoZSBidWlsZGluZyBkdXJpbmcgdGhlIHN1bW1lci4KV2UgY29udGFjdGVkIHRoZSBvdGhlciBjZWxlYnJpdGllcyBuYW1lZCBieSBNb2xseSBibG9vbS4gVGhleSBhbGwgZGVjbGluZWQgdG8gY29tbWVudCBidXQgeW91IGNhbiBzZWUgbXVjaCwgbXVjaCBtb3JlIG9mIG15IGludGVydmlldyB3aXRoIE1vbGx5IHRvbmlnaHQgb24gIjIwLzIwIiBhdCAxMDowMCBlYXN0ZXJuIHJpZ2h0IGhlcmUgb24gQUJDLiBTaGUgaGFzIGEgbG90IHRvIHNheS4gSSBiZXQgc2hlIGRvZXMuLiAKQWJvdXQgYSB3ZWVrIGxhdGVyIG15IHNvY2sgdHVybmVkIHVwIGluIG91ciBjb2xsZWdlIHN0dWR5IHJvb20sIGFuZCBJIHdhcyBsaWtlIHNvY2tra2ssIGkgYmVlbiBsb29raW5nIGZvciB0aGF0IGV2ZXJ5d2hlcmUgYW5kIHdhbGtlZCBhY3Jvc3MgdGhlIHJvb20uIEkgd2FzIGZvdXJ0ZWVuIHdoZW4gSSBmaXJzdCBwbGF5ZWQgYW5kIGEgdmVyeSBnb29kIHBva2VyIHBsYXllci4gSXQgd2FzIChpbmV2aXRhYmx5IGF0IHRoYXQgYWdlKSBndXlzIHZlcnN1cyBnaXJscyBhbmQgdGhhbmtzIHRvIG1lIHdlIG1hbmFnZWQgbm90IHRvIHB1bGwgb2ZmIGEgc2luZ2xlIGFydGljbGUgICB1bnRpbCB0aGUgb2xkZXN0IGdpcmwgdGhlcmUgKGEgc2l4dGVlbiB5ZWFyIG9sZCkgcmVtb3ZlZCBoZXIgYnJhLiAKRG8geW91IGdlbnVpbmVseSB0aGluayB0aGF0IFRTTSBjYW4gb3V0bGFuZSBTS1Q/IERvIHlvdSBzZXJpb3VzbHkgdGhpbmsgdGhhdCBUU00gY2FuIGdhaW4gYW55IG1lYW5pbmdmdWwgYWR2YW50YWdlIGFnYWluc3QgU0tUIHRocm91Z2gganVzdCBsYW5pbmc/IFNLVCBoYXMgYmV0dGVyIG1hY3JvLCBiZXR0ZXIgdGVhbSBmaWdodGluZywgZXRjLiBUU00gd2lsbCAxMDAlIGxvc2UgaWYgdGhleSBjYW4gZWFybiBhbnkgc2lnbmlmaWNhbnQgZ29sZCBsZWFkIGR1cmluZyBsYW5pbmcgcGhhc2UuIEFyZSB5b3UgdGVsbGluZyBtZSB0aGF0IFRTTSBjYW4gb3V0bGFuZSBTS1Qgc28gaGFyZCB0aGF0IHRoZXkgY2FuIGF1dG93aW4gbWlkIGFuZCBsYXRlIGdhbWU/SSBkb24gdGhpbmsgZHJhZnRpbmcgd2FzIHRoZSBwcm9ibGVtIHRoaXMgZ2FtZS4gCjJuZCwgZG9uJ3QgbGV0IHRoZSBzaGFya3MgdGhpbmsgeW91ciBpbnRpbWlkYXRlZC4gT25jZSB5b3UgbGV0IHRoZW0gaW4geW91ciBoZWFkLCB0aGV5IHdpbGwgZ2V0IHlvdSB0byBzcGVuZCBtb3JlIG1vbmV5IHRoYW4geW91IHdhbnQuIEJlIHByZXBhcmVkIHRvIHdhbGsgYXdheSBmcm9tIGEgcHJvcGVydHkgdGhhdHlvdSBzcGVudCAkMTAwMCBvbiBmb3IgaW52ZXN0aWdhdGlvbiBwdXJwb3Nlcy4gSWYgdGhlIHNoYXJrIGRvZXMgZG9sbGFyIGluY3JlbWVudHMsIHlvdSBkbyBkb2xsYXIgaW5jcmVtZW50cy4gSXQgd2lsbCBkcml2ZSBldmVyeW9uZSBlbHNlIG51dHMgd2hpbGUgeW91IGdldCB0aGUgcHJvcGVydHkgYXQgYSBsb3dlciBwcmljZS4gSXQgd2lsbGFsc28gZHJpdmVhd2F5IGltcGF0aWVudCBwZW9wbGUgd2hvIG1heSBiZSBjb25zaWRlcmluZyBiaWRkaW5nIG9uIHRoZSBwcm9wZXJ0eS4gVGhleSB3aWxsIHRlbGwgeW91IHdobyBidXlzIHdoYXQgdHlwZXMgb2YgcHJvcGVydGllcyBmcmVxdWVudGx5O2V4YW1wbGUsIHZhY2FudCBsb3RzLCBTRlIsIG9yIENvbW1lcmNpYWwgcHJvcGVydGllcy4gVGhpcyBkb2VzIG1lYW4geW91IG5lZWQgdG8gZG8geW91ciBob21ld29yayBvbiB5b3VyIG9wcG9uZW50cy4gQXMgYSBwcm9wb25lbnQgb2Ygc21hbGwgYmlkcywgYW5kIGJpZyByZXR1cm5zOyBpdCBpcyBiZXN0IHRvIGtub3cgd2hlbiB0aGV5IChyZWd1bGFycy9zaGFya3MpYXJlbid0IHBheWluZyBhdHRlbnRpb24uIEkgZ3Vlc3MgeW91IGNhbiBzYXkgaXQncyBhIGxvdCBsaWtlIHBva2VyLCBldmVyeW9uZSBoYXMgdGVsbHMuIFlvdSBqdXN0IG5lZWQgdG8ga25vdyB3aGF0IHRoZXkgYXJlLgpOb3J2ZWxsIHNhaWQgaGVyIGNsaWVudCwgQ2hpbmVzZSBib3JuIEhvbmcgQ2hlbmcgQWFyb24gWWFuLCBzaG91bGRuJ3QgYmUgcGVuYWxpemVkIGZvciB0aGUgYWN0aW9ucyBvZiBhIHByZXZpb3VzIG93bmVyLiBZYW4gZGlkbid0IHRha2Ugb3ZlciBvcGVyYXRpb24gb2YgdGhlIHN0dWRpbyB1bnRpbCBKdWx5IDE1LCAyMDA0LCBtb3JlIHRoYW4gdHdvIG1vbnRocyBhZnRlciBhIEhlbmRlcnNvbiBQb2xpY2Ugc3RpbmcgdW5jb3ZlcmVkIGFsbGVnZWQgcHJvc3RpdHV0aW9uLiBVbmRlciBZYW4ncyBvd25lcnNoaXAsIGFuIGVtcGxveWVlIHdhcyBjaGFyZ2VkIG9ubHkgd2l0aCBhIGNpdHkgY29kZSB2aW9sYXRpb24gb2YgZmFpbGluZyB0byBjb3ZlciBhIGNsaWVudCB3aXRoIGEgdG93ZWwuLiAKQmVzdCBvZiBhbGwgdGhlc2Ugd2VyZW4ndCB0aG9zZSBwbGFzdGljIHJlZCwgd2hpdGUsIGFuZCBibHVlIGNoaXBzIHlvdSBmaW5kIGF0IFdhbCBNYXJ0LiAKSnVkZ2UgVGVuYSBDYWxsYWhhbgpZb3VyIGNvdXNpbiB3YXMgc3VwZXIgaW5zZW5zaXRpdmUuIApGb3IgZXhhbXBsZSwgdGhleSBjb3VsZCBzZWxsIHRoZWlyIGhvbWUgZm9yICQxLjMgbWlsbGlvbiBhbmQgYnV5IGEgU29sZWlsIGFwYXJ0bWVudCBmb3IgYWJvdXQgJDgwMCwwMDAgYW5kIHRoYXQgbWFrZXMgc2Vuc2UgZm9yIGEgbG90IG9mIHBlb3BsZS4gV2UgaGFkIGV4dHJlbWVseSBoZWFsdGh5IHNhbGVzIGZpZ3VyZXMgYXMgYSByZXN1bHQsIGV2ZW4gaW4gYSBzbG93IG1vdmluZyBtYXJrZXQgbGlrZSBXaGl0ZSBSb2NrLCB3aGVyZSBwZW9wbGUgaGF2ZSBzaW5nbGUgZmFtaWx5IGhvbWVzIGFuZCBhIGxvdCBvZiB0aW1lIHRvIGRlY2lkZSBvbiB0aGVpciBuZXh0IG1vdmUuIGlzIGEgMjYgc3RvcmV5IHRvd2VyIHRoYXQgd2lsbCBzdGFuZCBhdCB0aGUgY29ybmVyIG9mIEpvaG5zdG9uIFJvYWQgYW5kIE5vcnRoIEJsdWZmIFJvYWQsIHJpZ2h0IGluIHRoZSBoZWFydCBvZiBXaGl0ZSBSb2NrIGRvd250b3duIGNvcmUuIFRoZSBidWlsZGluZyB3aWxsIGhhdmUgMTc4IGhvbWVzIGluIHRvdGFsLCByYW5naW5nIGluIHNpemUgZnJvbSA2MzggdG8gMSw3OTUgc3F1YXJlIGZlZXQuIFRoZXJlIGFyZSBvbmUgLCB0d28gIGFuZCB0aHJlZSBiZWRyb29tIHBsYW5zIGF2YWlsYWJsZSBhbmQgcHJpY2VzIHJhbmdlIGZyb20gJDQ3NCw5MDAgdG8gJDIsMTk5LDkwMC4KTmlnZXJpYW5zIHZvdGUgZm9yIHBvd2VyZnVsIGdvdmVybm9yIHBvc3RzIGFtaWQgc29tZSB1bnJlc3QKICBlZGl0ICAgYWN0dWFsbHksIGhlIHBsZWQgZ3VpbHR5LCBidXQgdGhpcyBzZW50ZW5jZSB3YXMgb25seSBmb3IgdGhlIGZpcnN0IHNldCBvZiBjaGFyZ2VzOyBoZSB3aWxsIGJlIHNlbnRlbmNlZCBmb3IgMm5kIGNoYXJnZXMgbmV4dCB3ZWVrLCBhY2NvcmRpbmcgdG8gTllULi4gClJlcG9ydGVyOiBBZnRlciAzNjUgZGF5cywgdGhhdCBmaW5hbCB3ZWlnaCBpbi4gCk5vIGFtb3VudCBvZiBjb25zZXJ2YXRpb24gb3IgdGVjaG5vbG9neSBpcyBnb2luZyB0byBiZSBhIG1hZ2ljIHNvbHV0aW9uIHRvIHRoZXNlIHByb2JsZW1zLiAKVGhlIGxlZnQgc3BlbmRzIGFsbCBkYXkgZXZlcnkgZGF5IGNhbGxpbmcgdXMgcmFjaXN0cyBhbmQgYmlnb3RzIHdoaWxlIHRoZXkgb3Blbmx5IGNlbGVicmF0ZSBoaXN0b3JpY2FsIGZpZ3VyZXMgc3VjaCBhcyBCb3NlLiBJdCB0aW1lIHRoZXkgYXJlIGhlbGQgdG8gYWNjb3VudCBmb3IgdGhpcy4KSSBhbHNvIGRvIGdyYXBoaWMgZGVzaWduIGFuZCBtYXJrZXRpbmcuIApSZWFkaW5nIHRoZSBmYWlyd2F5cyBhbmQgZ3JlZW5zIG9mIHRoZWlyIGdvbGYgY291cnNlIGxpa2UgcG9rZXIgcGxheWVycywgdGhlIDE2IG1lbWJlciBib2FyZCBvZiBnb3Zlcm5vcnMgb2YgdGhlIFNlYXdhbmUgQ291bnRyeSBDbHViIGJlbGlldmUgdGhleSBhcmUgaG9sZGluZyBhIHBhdCBoYW5kLCBhbmQgYXJlIHdvcmtpbmcgb24gYSAxMCB5ZWFyIHBsYW4gdG8gc3VzdGFpbiB0aGUgOTEgeWVhciBvbGQgSGV3bGV0dCBIYXJib3IgZmFjaWxpdHksIHdoaWNoIGlzIHN0cnVnZ2xpbmcgZmluYW5jaWFsbHkgYXMgbWVtYmVyc2hpcCBoYXMgZGVjbGluZWQuCiJJdCdzIGFsc28gc29tZXdoZXJlIHRvIGNlbGVicmF0ZSBmcmllbmRzaGlwLCBvbmUgb2YgdGhlIHBpbGxhcnMgb2Ygb3VyIGJ1c2luZXNzLiBLcmlzdGluYSBhbmQgSSBjZXJ0YWlubHkgZG9uJ3QgYWx3YXlzIGFncmVlIG9uIHRoaW5ncywgYnV0IHdlIGFsd2F5cyBjYWxsIGVhY2ggb3RoZXIgb3V0IG9uIHN0dWZmLiBXZSBiZWxpZXZlIHRob3NlIHNvcnRzIG9mIGZyaWVuZHNoaXBzIHB1c2ggdXMgYWxsIHRvIGJlIGJldHRlciBhbmQgaGFwcGllci4iVGhlIHNpdGUgc3BsaXRzIG9mZiBpbnRvIGZpdmUgbGlmZXN0eWxlIGhlYWRpbmdzIEVhdCwgUHJpbXAsIEVzY2FwZSwgRHdlbGwgYW5kIFRocml2ZS4iTXkgZmF2b3VyaXRlIHBhcnQgb2YgdGhlIG5ldyBzaXRlIGlzIHRoZSB2aWRlbywiIHNhaWQgV2FsbG5lci4gCllvdSBjYW4gZXN0aW1hdGUgeW91ciBjaGFuY2VzIGFmdGVyIHJlYWRpbmcgSG93IHRvIENhbGN1bGF0ZSBQb2tlciBPZGRzLiAKQWxsIGVuY3J5cHRlZCBzZW5zaXRpdmUgZGF0YSBpcyBzdG9yZWQgaW4gVW5pYmV0J3Mgc2VjdXJlIHN5c3RlbS4gVW5pYmV0IGZvbGxvd3MgYW5kIGNvbXBsaWVzIHdpdGggdGhlIFBheW1lbnQgQ2FyZCBJbmR1c3RyaWVzIERhdGEgU2VjdXJpdHkgU3RhbmRhcmQgKFBDSSBEU1MpIGFuZCB0aG9zZSBpc3N1ZWQgYnkgdGhlIEV1cm9wZWFuIGdhbWluZyBhbmQgYmV0dGluZyBhc3NvY2lhdGlvbi5XaGVyZSBjYW4gSSBmaW5kIGdsb3NzYXJ5IHdpdGggYmV0dGluZyB0ZXJtcz9XZSBvZmZlciBhbmQgbWFpbnRhaW4gYSBiZXR0aW5nIGdsb3NzYXJ5IHdoaWNoIGlzIGEgbm9uIGV4aGF1c3RpdmUgbGlzdCBvZiB0cmFkaXRpb25hbCBhbmQgbW9kZXJuIGJldHMuIE5vbiBleGhhdXN0aXZlIGJlY2F1c2UgYXMgdGhlIHNwb3J0cyBiZXR0aW5nIGluZHVzdHJ5IGV2b2x2ZXMgc28gZG9lcyBvdXIgZ2xvc3NhcnkuIApJIGtub3cgaXQgb25seSBvbmUgZ3V5IGRldmVsb3BpbmcsIGJ1dCB5b3Ugd291bGQgaG9wZSB0aGF0IGZvciBzdWNoIGEgaGlnaGx5IHByaWNlZCBhcHAgeW91IHdvdWxkIGdldCBzb21lIGRlY2VudCBmdW5jdGlvbmFsaXR5IG91dCBvZiBpdCwgaW5zdGVhZCBvZiBiZWluZyBqdXN0IGZvciByZXZpZXdpbmcgb24gcHVibGljIHRyYW5zcG9ydC5UaGF0IGJlaW5nIHNhaWQgeW91IGFic29sdXRlbHkgMTAwJSBzaG91bGQgYnV5IGl0IGlmIHlvdSBhbiBhbmtpIGRldm90ZWUuIAooc2hlIHVzZWQgdGhlIHNhbWUgcGhvbmUgbnVtYmVyIGZvciBldmVyeXRoaW5nIGxvbCluZXh0ICB0aGUgZW1haWwgdGhhdCB3YXMgdXNlZCB0byBjcmVhdGUgdGhlaXIgZmFjZWJvb2sgY29oZW5yb3NlbiBwYWdlIGFsc28gY29tZXMgdXAgaW4gYmxvZyBwb3N0cyBhbmQgdGhlIHNvY2lhbCBtZWRpYSBwcm9maWxlcyB3aGVyZSBzaGUgd2FzIHBpbXBpbmcgaGVyc2VsZiBvdXRuZXh0ICBzaGUgY2xhaW1zIHRvIGJlIHJpY2ggYnV0IGEgZmV3IHNjcmVlbnNob3RzIHNob3cgaGVyIHB1dHRpbmcgdXAgYWxsZXNzIHN0cm9sbGVyIGFuZCBoZXIgV0VERElORyBEUkVTUyBmb3Igc2FsZS4gCkFub3RoZXIgZnVuIGZhY3QsIGEgbG90IG9mIHRoZXNlIHBsYWNlcyBkb24gaGF2ZSB0byBvbmx5IHNlcnZlIHdoYXQgY29ycG9yYXRlIHRlbGxzIHRoZW0uIFRoZXJlIGlzIGEgTWNEb25hbGQgaW4gT3JsYW5kbyB0aGF0IHNlcnZlcyB0b25ubm5ubnMgb2YgZm9vZCBub3Qgb24gdGhlIG5vcm1hbCBtZW51LCBsaWtlIHBhc3RhIGV0Yy4gVGhlIGZpbGV0IG8gZmlzaCB3YXMgYWN0dWFsbHkgY3JlYXRlZCBieSBhIGZyYW5jaGlzZWUgYnV0IGl0IGVuZGVkIHVwIGJlaW5nIHNvIHBvcHVsYXIgaW4gdGhlIGxvY2FsIHJlZ2lvbiBNY0RvbmFsZCBhZGRlZCBpdCB0byB0aGUgbWFpbiBtZW51LgpJdCBhbGwgYmUgb3ZlciB2ZXJ5IHNob3J0bHkuLiAKSmUgcmFwcGVsbGUgbGVzIG1mYWl0cyBkdSAicG9saXRpcXVlbWVudCBjb3JyZWN0IiwgdW5lIHNhbG9wZXJpZSBjb25zaXN0YW50ICByZWZ1c2VyIGQnYXBwZWxlciB1biBjaGF0IHVuIGNoYXQgIVJlc3RvbnMgZGFucyBsYSBtZGVjaW5lICEgUXVhbmQgdW4gdG91YmliIHByZW5kIHVuZSBwYXRpZW50ZSBwb3VyIHVuZSBjb25uZSBldCByZWZ1c2UgZGUgbHVpIGRvbm5lciBkZSBsJ0V1dGh5cmFsIGFsb3JzIHF1ZSBjZSBtZGljYW1lbnQgZG9ubiBwYXIgdW4gZW5kb2NyaW5vbG9ndWUgY29tcHRhbnQgYSBmYWl0IG1lcnZlaWxsZSBldCBxdWUgbGUgY29ubmFyZCBjYW1wZSBzdXIgY2UgcHV0YWluIGRlIExldm90aHlyb3ggZG9udCBxdWFudGl0IGQnaHlwb3RoeXJvaWRpZW5uZXMgZG5vbmNlbnQgbCdlZmZpY2FjaXQsIGlsIGZhdXQgZmFpcmUgcXVvaSA/IEdhcmRlciBsZSBzb3VyaXJlIGV0IHJwb25kcmUgZ2VudGltZW50ICFTaSBqJ3RhaXMgdW5lIGZlbW1lIGxlIG1lYyBzZSBwcmVuZHJhaXQgdW4gYWxsZXIgZXQgcmV0b3VyIHZpdGUgZmFpdCBiaWVuIGZhaXQuSWwgZmF1dCB0cmUgY2xhaXIgISBMb3JzcXVlIGwnb24gYSAgZmFpcmUgYXZlYyBkZXMgZ2VucyBkdGVudGV1cnMgZCd1biBwb3V2b2lyIHF1aSBzb250IGFycm9nYW50cywgbGEgcmFjdGlvbiBkb2l0IHRyZSAgbGEgbWVzdXJlIGR1IGRsaXQuIElsIG5lIGZhdXQgcGFzIGhzaXRlciAgcmFwcGVsZXIgYXV4IG1kZWNpbnMgcXVlIGxldXIgZm9ybWF0aW9uLCBhdSBtb2lucyBkYW5zIGxlIGRvbWFpbmUgY29uc2lkciBlc3QgZW4gZmFpdCB1bmUgREVGT1JNQVRJT04gIUplIG5vdGUgcG91ciBtYSBwYXJ0IHF1ZSBkYW5zIHVuZSByZ2lvbiBvIGxhIGZhaW5hbnRpc2UsIGwnaXJyZXNwb25zYWJpbGl0LCBsJ2Fycm9nYW5jZSBldCBzdXJ0b3V0IGwnaW5jb21wdGVuY2UgZCd1bmUgbWFqb3JpdCBkZSBjaXRveWVucyBlc3QgY2F1c2UgZGUgcHJvYmxtZXMgcmN1cnJlbnRzLCBsYSBDTlYgZXN0ICBwcm9zY3JpcmUgZGFucyBsYSBtZXN1cmUgbyBsZXMgdGVudGF0aXZlcyBkJ2ludGltaWRhdGlvbiBvbnQgdCBsZXYgYXUgcmFuZyBkJ3VuIGFydCBtYWpldXIgISBPbiBhaW1lcmFpdCBiaWVuIHBvdXZvaXIgc2UgZHRlbmRyZSBhdSBsaWV1IGRlIHNlIGN1aXJhc3NlciBtYWlzIGlsIG5lIGZhdXQgcGFzIHJ2ZXIgISBMYSBDTlYgcydpbnNjcml0IGRhbnMgbGUgc2lsbGFnZSBkZSBjZXR0ZSBmYXVzc2Ugc3Bpcml0dWFsaXQgbGFxdWUgcXVpIGRvbWluZSBsYSBzb2NpdCBhY3R1ZWxsZS5KZSBwcmZyZSBsYSAiY29tbXVuaWNhdGlvbiB2aW9sZW50ZSIgOiBlbGxlIGEgbCdhdmFudGFnZSBkJ29ibGlnZXIgbGVzIGdlbnMgdHJvcCBwdXNpbGxhbmltZXMgZXQgY2V1eCBxdWkgc29udCBpbmZlY3RzIHBhciBsZSBjbGltYXQgZGUgdHJvbXBlcmllIGFtYmlhbnRlICBhbGxlciBzZSBmYWlyZSB2b2lyIGFpbGxldXJzLiAKVGhlX3JlYWxfTVNVX2lzX3VzICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJIGhhZCBhIHNpbWlsYXIgcHJvYmxlbSB3aGVyZSBzb21lIGR1ZGUgbmFtZWQgamltbXkgc2V0IHVwIHRocmVlIGFjY291bnRzIG9uIG15IFNwb3RpZnkgZmFtaWx5IGFjY291bnQgYW5kIHdhcyB1c2luZyBpdCBmb3IgZnJlZS4gCkkgdmVyeSBzb3JyeSB0aGlzIGhhcHBlbmVkIHRvIHlvdSBhbmQgSSB0b28gd291bGQgYmUgbGl2aWQgYW5kIHJpZ2h0ZnVsbHkgc28uClF1ZSBkZSBjaGVtaW4gcGFyY291cnUgZGVwdWlzIDEwIGFucy4gCkhvd2V2ZXIsIGV2ZW4gd2l0aCB0aGUgdXNlIG9mIHRoZSBmYXN0ZXN0IGF2YWlsYWJsZSBvcHRpb25zIGxpa2UgZSB3YWxsZXRzLCB3aGljaCBtYXkgdGFrZSB1cCB0byAxIDIgZGF5cyB0byB3aXRoZHJhdyB3aXRoLCB0aGVyZSBhcmUgQml0Y29pbiBjYXNpbm9zIG91dCB0aGVyZSB0aGF0IGNhbiBub3cgb2ZmZXIgYSBtdWNoIGZhc3RlciB3aXRoZHJhd2FsIHRpbWUgdGhhdCBjYW4gYmUgYXMgbG93IGFzIHNldmVyYWwgbWludXRlcy4uIApCdXQgSSBoYXZlIGNvbWUgdG8gcmVhbGl6ZSB0aGF0IHdlIGFyZSBkaXZpbmUgYmVpbmdzLiAKVHdvIFBhaXI6IFR3byBzZXBhcmF0ZSBwYWlycyAoZWcuIApXZSBhbHNvIHZpc2l0IEhhd2FpaSBmb3IgdGhlIEVkZGllIEFpa2F1IEJpZyBXYXZlIEludml0YXRpb25hbCwgU3dpdHplcmxhbmQgZm9yIHNvbWUgcm9jayBza2lpbmcsIGFuZCBTaGFuZ2hhaSBmb3IgYSB0cmFmZmljIHN0b3BwaW5nIG1hcmF0aG9uLiAKVGhpcyBzdWJyZWRkaXQgaXMgZGVzaWduZWQgZm9yIHNvbHZpbmcgYW5kIGRpc2N1c3Npb24gYWJvdXQgQVJHcywgbm90IGZvciBob3N0aW5nIHRoZW0gb3IgcG9zdGluZyB5b3VyIG93biB0cmFpbGhlYWRzLiBJZiB5b3Ugd2FudCB5b3VyIEFSRyB0byBnYWluIHRyYWN0aW9uLCB0cnkgdG8gY3JlYXRlIGEgdW5pcXVlIG9yIGV4Y2l0aW5nIGJ1enogZWxzZXdoZXJlIHRoYXQgZ2V0cyBub3RpY2VkIGJ5IGEgdXNlci4gUG9zdHMgbWlnaHQgYmUgcmVtb3ZlZCwgc2l0dWF0aW9uIGRlcGVuZGluZy4KTWFzc2FnZXMgYXJlIGdyZWF0IHRvIGdldC4gSWYgeW91IGZlZWwgY29tZm9ydGFibGUgd2l0aCB5b3VyIG1hc3NldXNlIHRha2UgZXZlcnl0aGluZyBvZmYuIElmIG5vdCBrZWVwIHlvdXIgdW5kZXJ3ZWFyIG9uLiBKdXN0IHJlbWVtYmVyIHRvIHJlbGF4IGFuZCBlbmpveS4KSXQgZG9lc24gbWVhbiBJIGRvbiBlbmpveSB0aGUgY29udGVudCwgaXQgZG9lc24gbWVhbiBJIGRvbiBzdXBwb3J0IHRoZSBjb250ZW50LCBpdCBkb2VzbiBtZWFuIEkgdGhpbmsgdGhlIHBlb3BsZSBtYWtpbmcgdGhlIGpva2VzIG9yIHdyaXRpbmcgdGhlIGpva2VzIGFyZSBhd2Z1bCBob21vcGhvYmVzLCBidXQgaXQgaXMgaG9tb3Bob2JpYy4gSXQgbm90IHN1cnByaXNpbmcsIGJ1dCBpdCBpcyBkaXNhcHBvaW50aW5nIHRvIGFsd2F5cyBrbm93IHlvdSBnb2luZyB0byBiZSB0aGUgYnV0dCBvZiB0aGUgam9rZS4gVGhlIGJ1bmRsZSBvZiBzdGlja3Mgam9rZSBhbmQgZiBzbHVyIHNsaXAgdXBzIGFyZSBqdXN0IHBhcnRpY3VsYXJseSBub3RhYmxlIGJlY2F1c2UgdW5saWtlIGdheSBsaXNwcyBvciB0aGUgb2NjYXNpb25hbCBubyBob21vIGpva2UsIGl0IHNvbWV0aGluZyB0aGF0IGEgZ29vZCBwb3J0aW9uIG9mIHBlb3BsZSBhZ3JlZSBpcyBUb28gRmFyIG5vdyBpbiB3YXlzIG90aGVyIHRoaW5ncyBhcmVuIHlldC4gCldpdGggNTcgZmFjaWxpdGllcyBhbmQgMjQsMDAwIGVtcGxveWVlcyB3b3JsZHdpZGUsIEhhc2VuZnJhdHogZGl2ZXJzaWZpZWQgY29tcGFueSBwcm9kdWNlcyBoaWdobHkgZW5naW5lZXJlZCBtYWNoaW5lcnkgZm9yIHRoZSBpbmR1c3RyaWFsLCBhZ3JpY3VsdHVyYWwsIGFuZCBjb25zdHJ1Y3Rpb24gbWFya2V0cy4gCkhlIHNhaWQgdGhlIHJlZGV2ZWxvcG1lbnQgd2FzIG1vdmluZyBhbG9uZyB3ZWxsLiAKWmhhbmcsIGV0IGFsLiAKSSBsaWtlZCB3aGVyZSBoZSB3YW50ZWQgdG8gdGFrZSB0aGUgc3VicmVkZGl0IGFuZCBoZSBoYXMgcHJldHR5IG11Y2ggZnJlZSByZWluIHRvIHRha2UgdGhlIHN1YnJlZGRpdCBmb3J3YXJkLiAKRnJlZSBnYW1ibGUgb24gTmV0IGlzIGZ1biB0byBwbGF5LCBhbmQgeW91IGNhbiB3aW4gZm9ydHVuZSBnZXQgY2FzaCByZXdhcmRzLCBib251cywgYW5kIGEgYmlnIGphY2twb3QuIEZyZWUgZ2FtaW5nIHNpdGUgaXMgdGhlIGJlc3QgZm9yIGJldHRpbmcgb24gSW50ZXJuZXQuIExlYXJuIGFib3V0IGdhbWJsaW5nIHN0cmF0ZWd5LCBydWxlcyBmcm9tIGV4cGVydHMgYW5kIG9sZCBoYW5kcy4gCldoYXQgdGhlIGNvbXBhbnkgbGF0Y2hlZCBvbiB3YXMgdGhlIHVyYW5pdW0gaXNvdG9wZSAyMzVVICh1cmFuaXVtIGRpc2NvdmVyZWQgaW4gMTc4OSBieSBLbGFwcm90aCBhbmQgaXRzIHJhZGlvYWN0aXZlIHN0YXRlIGZvdW5kIGJ5IEhlbnJpIEJlY3F1ZXJlbCBpbiAxODk2LCAyMzVVIGRpc2NvdmVyZWQgYnkgdGhlIG1hc3Mgc3BlY3Ryb21ldGVyIGd1eSBEZW1wc3RlciBpbiAxOTM1LCBhbmQgc29vbiBmb2xsb3dlZCBieSB0aGUgbnVjbGVhciBmaXNzaW9uIHBhcGVyIG9mIDE5MzggYnkgSGFobi9TdHJhc3NtYW5uL0xlaXRuZXIpIGFuZCBob3cgaXQgd291bGQgZWZmZWN0aXZlbHkgYmUgdGhlIHBvd2VyIHNvdXJjZSAoImNoZWFwIGFuZCBwbGVudGlmdWwpIGZvciwgd2VsbCwgYSBsb3QsIGluY2x1ZGluZyBjYXJzIGFuZCBzcGFjZWZsaWdodC4gCkJ1bWJsZSBhcHAgSG93IGRvZXMgQnVtYmxlIHdvcms/IEFsd2F5cyB3YW50ZWQgYSBidXQgbmV2ZXIga25vd24gd2hlcmUgdG8gZmluZCB0aGF0IHNwZWNpYWwgZXh0cmEgc29tZW9uZT8gVGhpcyBzaXRlIGhhcyBiZWVuIGFyb3VuZCBmb3Igb3ZlciAyMCB5ZWFycyBhbmQgaXMgb25lIHRoZSBsb25nZXN0IHJ1bm5pbmcgbGVnaXRpbWF0ZSBhZHVsdCBkYXRpbmcgc2l0ZXMgb24gdGhlIGludGVybmV0LiBXaHkgaXMgQ2FzdWFseCBvbmUgb2YgdGhlIGJlc3Qgc2V4IGFwcHM/IFdoeSBpcyBIZXIgb25lIG9mIHRoZSBiZXN0IHNleCBhcHBzPyBJZiBhIGdpcmwgbGlrZXMgYm90aCBvZmZlcmluZ3MsIHNoZSBmaXJlcyBiYWNrIGEgc2VsZmllIG1pbWlja2luZyBoaXMsIG9wZW5pbmcgdXAgYSBjaGF0LiAKSSBmb3VuZCBsb3ZlLiBJIG1ldCBteSBub3cgZmlhbmNlZSBhdCB3b3JrIGFuZCB0aGUgYWZ0ZXIgb25seSBhIGNvdXBsZSBtb250aCBvZiBkYXRpbmcgd2UgbW92ZWQgaW4gdG9nZXRoZXIgYW5kIEkgc3RvcHBlZCB0YWtpbmcgdGhlIHBpbGxzICh6b2xvZnQpIHByZXR0eSBtdWNoIGNvbGQgdHVya2V5LiAKUG9zdCBwYXJ0dW0gcHN5Y2hvc2lzIGlzIHZlcnkgcmVhbCBhbmQgaXMgdmVyeSBtdWNoIHNvbWV0aGluZyB0aGF0IGRyaXZlcyB3b21lbiAoYW5kIGEgc21hbGwgbnVtYmVyIG9mIG1lbikgdG8gZG8gYXdmdWwgdGhpbmdzIHRoYXQgdGhleSB3b3VsZG4ndCBoYXZlIGRvbmUgb3RoZXJ3aXNlLCB0aGluZ3MgdGhleSBmZWVsIGEgbG90IG9mIHJlbW9yc2UgYW5kIGd1aWx0IGZvci4gCiJUd2l0dGVyIGhhcyByZW1vdmVkIG1hbnkgcGVvcGxlIGZyb20gbXkgYWNjb3VudCBhbmQsIG1vcmUgaW1wb3J0YW50bHksIHRoZXkgaGF2ZSBzZWVtaW5nbHkgZG9uZSBzb21ldGhpbmcgdGhhdCBtYWtlcyBpdCBtdWNoIGhhcmRlciB0byBqb2luIHRoZXkgaGF2ZSBzdGlmbGVkIGdyb3d0aCB0byBhIHBvaW50IHdoZXJlIGl0IGlzIG9idmlvdXMgdG8gYWxsLCIgVHJ1bXAgc2FpZCBpbiBhIHR3ZWV0IEZyaWRheS4gIkEgZmV3IHdlZWtzIGFnbyBpdCB3YXMgYSBSb2NrZXQgU2hpcCwgbm93IGl0IGlzIGEgQmxpbXAhIFRvdGFsIEJpYXM/Ii4gCkxlbW9jaGUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTEgaG91cnMgYWdvCklzIGEgcHJlbWl1bSBwbHVnaW4sIGJ1dCB0aGVyZSBhcmUgcGxlbnR5IG9mIGV4Y2VsbGVudCBmcmVlIG9wdGlvbnMsIHN1Y2ggYXMgTWFnaWMgQWN0aW9uIFtdLiA1IE1hciAyMDE3IC4gClRoZSBvd25lciBvZiB0aGUgaGFyZHdhcmUgc2hvdWxkIG5vdCBiZSBmb3JjZWQgdG8gZ2V0IHRoZWlyIHNvZnR3YXJlIG9ubHkgZnJvbSBvbmUgc291cmNlLCB3aGljaCBzaG92ZXMgaXRzIG93biBhcHBzIGRvd24gdXNlcnMgdGhyb2F0cy4gT24gQW5kcm9pZCB5b3UgY2FuIGF0IGxlYXN0IHNpZGUgbG9hZCBhcHBzIGVhc2lseSwgYW5kIGRpZmZlcmVudCB2YXJpZW50cyBvZiBBbmRyb2lkIFJPTXMgY29tZSB3aXRoIGRpZmZlcmVudCBzb2Z0d2FyZS4gWW91IGNhbiBjaG9vc2UgdG8gZ2V0IHJpZCBvZiBHb29nbGUgU3RvcmUgYW5kIHJlcGxhY2UgaXQgd2l0aCBGRHJvaWQuIApJZiB5b3UgdHJhdmVsIG91dHNpZGUgb2YgSmFwYW4gYWdhaW4gYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmUsIGl0IG11Y2ggZWFzaWVyIHRvIGdldCBBbWVyaWNhbiBjcmVkaXQgY2FyZHMgd2l0aG91dCBmb3JlaWduIHRyYW5zYWN0aW9uIGZlZXMgdGhhbiBKYXBhbmVzZSBjYXJkcy4gClRoZSBwcm9ibGVtIGlzIHN1cnZpdm9yIGJpYXMuIFRoZSBtYWpvcml0eSBvZiB3b21lbiB3aG8gSSBoYXZlIHBlcnNvbmFsbHkgY29tZSB0byBrbm93IGluIHJlYWwgbGlmZSBhcyBzZWxmIGlkZW50aWZpZWQgZmVtaW5pc3RzIGhhdmUgZ2VuZXJhbGx5IGhhZCBhdCBsZWFzdCBhIG5vdGljZWFibGUgbWlzYW5kcmlzdCB0aWx0IChhbmQgaW5kZWVkLCBJIG1heSBvbmx5IGhhdmUgY29tZSB0byBrbm93IHRoZXkgaWRlbnRpZmllZCBhcyBmZW1pbmlzdHMgYmVjYXVzZSB0aGV5IHdlcmUgc28gdm9jYWwvZXh0cmVtZSBhYm91dCBpdCkuLiAKVGhlIG9wZXJhdGlvbnMgb2YgTmV2ZXIzZm9yZ2V0IGVtcGxveWVyIGFyZSBiYXNlZCBvdXRzaWRlIG9mIHRoZSBuYXRpb24ganVyaXNkaWN0aW9uIGFuZCBpcyBub3QgYm91bmQgYnkgS29yZWFuIGNvbnRyYWN0IGxhdy4gClNvIGZvciB0aGUgZmlyc3QgY2FyZCB5b3UgaGF2ZSBhIDEzIG91dCBvZiA1MiBjaGFuY2Ugb2YgaGl0dGluZyBhIGNhcmQgb2YgYSBzcGVjaWZpYyBzdWl0LiBPbiB0aGUgc2Vjb25kIGNhcmQsIHlvdSBoYXZlIGEgMTIgKG9uZSBpcyBhbHJlYWR5IHBpY2tlZCkgb3V0IG9mIDUxIChvbmUgY2FyZCBpcyBzaG93bikgY2hhbmNlLiBUaGlyZCBjYXJkLCAxMSBvdXQgb2YgNTAuIEZvdXJ0aCwgMTAgb3V0IG9mIDQ5LiBGaWZ0aCwgOSBvdXQgb2YgNDguIFlvdSBoYXZlIHRvIG11bHRpcGx5IGVhY2ggaW5zdGFuY2UgdG9nZXRoZXIgdG8gZ2V0IHRoZSBvdmVyYWxsIHBvc3NpYmlsaXR5LiBIZXJlJ3MgdGhlIG1hdGg6CkF1dHJlbWVudCBkaXQsIGxhIHBsYWNlIGRlIGxhIFJwdWJsaXF1ZSBlc3QgbGUgc2lnZSBkZSBub21icmV1eCByc2VhdXgsIGRvbnQgbm90YW1tZW50IGNlbHVpIGRlcyBnYWxlcmllcyBzb3V0ZXJyYWluZXMgZGUgbGEgUkFUUC4gQSBsJ29jY2FzaW9uIGRlIHNhIHJlcXVhbGlmaWNhdGlvbiBwbGFuaWZpZSBkcyAyMDExLCBTb2dlYSBJbGUgZGUgRnJhbmNlIHNvdXMgbWF0cmlzZSBkJ3V2cmUgZGVzIGFyY2hpdGVjdGVzIHVyYmFuaXN0ZXMgVFZLLCBhIHJhbGlzIGwnaW1wbGFudGF0aW9uIGRlIGRldXggcHVpdHMgZCdpbmZpbHRyYXRpb24gZGVzIGVhdXggcGx1dmlhbGVzIHF1aSwgc3VyIHVuZSBwcm9mb25kZXVyIGRlIDEzIG0sIHZhY3VlbnQgbGVzIGVhdXggZGUgcGx1aWUgIHByb3hpbWl0IGRlIGxhIG5hcHBlIHBocmF0aXF1ZS4iLiAKSSBsb29rZWQgZm9yIG9uZSBiZWNhdXNlIEkgbGlrZSB0byBzZXQgdGhlIGZhbnMgdG8gYWx3YXlzIHJ1biBhdCBtbWxtYXhpbXVtLCBidXQgc28gZmFyIG5vIGRpY2UuIApIZSB3b24gc2lnbmlmaWNhbnQgaW5mbHVlbmNlIG92ZXIgd2hvIHdhcyBwb3N0ZWQgdG8gc2VuaW9yIHBvc2l0aW9ucywgdGh1cyBwcm92aWRpbmcgaGltIHdpdGggcHJvdGVjdGlvbiwgdGhleSBzYWlkLiBLbm93biBhcyBhIG1hbiBvZiBmZXcgd29yZHMgd2hvIHJhcmVseSBsb3NlcyBoaXMgY29vbCwgQWhtZWQgYWxzbyBoYW5kZWQgb3V0IG1vbmV5IHRvICBwb3dlcmZ1bCBjcmltaW5hbCBnYW5ncyBhbmQgdHJhdmVsZWQgd2l0aCByb3VnaGx5IGEgZG96ZW4gYXJtZWQgZ3VhcmRzIGFzIGFuIGluc3VyYW5jZSBwb2xpY3kuSGUgd2FzIHNhaWxpbmcgc21vb3RobHkgdGhyb3VnaCB0aGUgdW5kZXJ3b3JsZCB1bnRpbCBvbmUgb2YgdGhlIFN1cHJlbWUgQ291cnQgc2Vzc2lvbnMgaW4gSmFudWFyeS5BIHBldGl0aW9uZXIgb3V0bGluZWQgdG8gdGhlIGNvdXJ0IGFsbGVnYXRpb25zIG9mIEFobWVkIGlsbGljaXQgYWN0aXZpdGllcyBhbmQgaGlzIHBvd2VyIGluIHRoZSBwb2xpY2UgZm9yY2UuIApKdXN0IGhvdyBmYWNlYm9vayBidXNpbmVzcyBpcyBzZWxsaW5nIHRoZSBkYXRhIG9mIHlvdS4gCkkgb25jZSBpbnRlcnZpZXdlZCBhbiBvbGQgZ2VudCB3aG8gZ3Jvd24gdXAgaW4gdGhhdCB0aW1lOiBhIEplc3VpdCBwcmllc3Qgd2hvIGhhZCBiZWVuIHN0YXRpb25lZCB0aGVyZSB1c2VkIHRvIGdpdmUgaGltIGFuZCBoaXMgY2xhc3NtYXRlcyAiQmlibGUgc3R1ZHkiLCBidXQgaW4gZmFjdCBoZSB3b3VsZCBhc2sgdGhlbSB3aGF0IHRoZXkgbGVhcm5lZCBpbiBzY2hvb2wgdGhhdCBkYXkgYW5kIHByb2NlZWQgdG8gdGVsbCB0aGVtIHdoeSBpdCB3YXMgYWxsIHdyb25nICAgdGhpcyB3YXMgcG9zc2libGUsIGJlY2F1c2UgdGhlIE5hemlzIHdlcmUgYXQgdGhlIHRpbWUgbGVhdmluZyB0aGUgQ2F0aG9saWMgQ2h1cmNoIGFsb25lLiAKU2hvdmluZyBpdCB3aGVyZSBldmVyIHdlIHBsZWFzZWQgYW5kIGJlYXRpbmcgdGhlIGNyYXAgb3V0IHRoYXQgc3ViIGh1bWFuLiAKRGUgZG9jZW50IGhlZWZ0IG1pZGRlbHMgaGV0IGJlb29yZGVsaW5nc2Zvcm11bGllciBoZXQgb25kZXJkZWVsIG9uZGVyem9la2VuIHJ1aW0gdm9sZG9lbmRlIGJlb29yZGVlbC4gClNhZGx5LCB0aGVyZSBpc24gbXVjaCBQQyBjYW4gZG8gYWJvdXQgdGhpcy4gTXkgcm9vbW1hdGUgd2FzIGNvbnRpbnVhbGx5IGhhcmFzc2VkIGFuZCBldmVudHVhbGx5IGFzc2F1bHRlZCAobm90IHNleHVhbGx5KSBieSBhIG1lbnRhbGx5IGlsbCBjb3dvcmtlciAoSFMgdGVhY2hlcikuIApCdXQgYSBsb3Qgb2YgcGVvcGxlIGFsc28gYXJlbid0IGV4YWdnZXJhdGluZy4gSnVzdCBiZWNhdXNlIGl0cyB3b3JzZSBpbiBvdGhlciBjaXRpZXMgZG9lcyBub3QgbWVhbiBpdCdzIG5vdCBhIHByb2JsZW0gaGVyZS4gQW5kIGp1c3QgYmVjYXVzZSB0aGlzIGFwcHJvYWNoIGhhcyB3b3JrZWQgZm9yIHlvdSwgZG9lc24ndCBtZWFuIGl0IGhhcyBmb3Igb3RoZXJzIGVpdGhlci4KV2h5IGRvIHRoZXkgbmVlZCB0byBiZSBzdG9wcGVkIHRob3VnaD8KRXZlbiB0aG9zZSBvZiB5b3Ugd2hvIHNlZW0gdG8gZ2V0IHNrZXB0aWNhbCAobGlrZSBtZSksIHRyeSByZWFkaW5nIG92ZXIgZXZlcnl0aGluZyBpbnZvbHZlZCBvbiB0aGVpciBsYW5kaW5nIHBhZ2UuIApPbmUgb2YgdGhlIGNsZWFyZXN0IGFuZCBtb3N0IHVuaXF1ZSBiZW5lZml0cyBvZiB0aGUgMjAwIFBhdWxzb24gVG9waGF0IEFuZCBDYW5lIFBva2VyIENoaXBzIHdpdGggQWx1bWludW0gQ2FzZSBpcyB0aGUgYWJzb2x1dGVseSBzdHVubmluZyBxdWFsaXR5IG9mIHRoZSBwcm9kdWN0aW9uIG9mIHRoZSBjaGlwcy4gVGhlIGNoaXBzIGZvdW5kIGluIHRoaXMgc2V0IGFyZSBhbW9uZyB0aGUgYmVzdCBpbiB0aGUgd29ybGQgaW4gdGVybXMgb2YgdGhlIHF1YWxpdHkgb2YgdGhlaXIgZGVzaWduLi4gCkFyb3VuZCBtaWxlIDE0IHRoZSB3aW5kIHBpY2tlZCB1cCBhbmQgd2hlbiBpdCB3YXMgYSB0YWlsIHdpbmQgaXQgd2FzIGdyZWF0LCBidXQgcnVubmluZyBpbnRvIGl0IHdhcyB3YXMgbGVzcyB0aGFuIGVuam95YWJsZS4gClRoZSBSb3lhbCBDb21taXNzaW9uIGludG8gSW5zdGl0dXRpb25hbCBSZXNwb25zZXMgdG8gQ2hpbGQgU2V4dWFsIEFidXNlIHdpbGwgaG9sZCBpdHMgMTd0aCBwdWJsaWMgaGVhcmluZyBuZXh0IHdlZWssIHdpdGggbW9yZSB0aGFuIDE2LDAwMCBjYWxscyBhYm91dCBjaGlsZCBzZXh1YWwgYWJ1c2Ugc28gZmFyLCBhbmQgYW5vdGhlciB0aHJlZSB5ZWFycyB0byBnby4gVGhlIHByaWVzdCwgUGV0ZXIgQnJvY2ssIHBpY3R1cmVkIGJlbG93LCBkaWVkIGxhc3Qgd2Vlay4gCjExIFllYXIgQ2x1YlRoZSBrZXkgaW5zaWdodCBoZXJlIGlzIHRoYXQgbW9zdCBwZW9wbGUgZGVzaWduIG1vZGVyYXRpb24gdG9vbHMgZm9yIGluZGl2aWR1YWxzIHRvIHVzZS4gVGFrZSByZWRkaXQgaGVyZS4gVGhlaXIgbW9kIHRvb2xzIGFyZSBtZWFudCBmb3IgYSBzaW5nbGUgcGVyc29uIHRvIHVzZSB0aGVtLiAKSXQgd2FzIGVub3VnaCB0byBzaG93IHRoYXQgaGUgaGFkIHByb21pc2UgYXMgYSBydWNrLCBidXQgd2hlbiBPIE1hYyBzdGVwcGVkIHVwIGxhc3QgeWVhciwgSSB0aG91Z2h0IEFyY2hpZSBoYWQgbG9zdCBoaXMgcGxhY2UgYW5kIHdhcyBqdXN0IG1hcmtpbmcgdGltZSB0byBydW4gb3V0IGhpcyBjb250cmFjdCBiZWZvcmUgYmVpbmcgZGVsaXN0ZWQuIApZZWFoLCBhbGwgb2YgdXMgc2hvdWxkbiBhdm9pZCB0aGUgcG9zc2liaWxpdHkgb2YgbmVlZGxlc3NseSBzdWZmZXJpbmcgYW5kIGR5aW5nIHVuZGVyIG91ciBiYXJiYXJpYywgcHJvZml0IGRyaXZlbiwgaGVhbHRoY2FyZSBzeXN0ZW0gYmVjYXVzZSBvZiBqb2JzLiBUaGVyZSBpcyBubyB3YXkgd2UgY291bGRuIGZpZ3VyZSBvdXQgYSBiZXR0ZXIgc3lzdGVtIGFuZCB0aGVyZSBpcyBubyB3YXkgdGhhdCBzb21lIG9mIHRoZSBqb2JzIHRoYXQgZXhpc3QgaW4gaGVhbHRoIGluc3VyYW5jZSBjb21wYW5pZXMgY2FuIGJlIGZvdW5kIG91dHNpZGUgb2YgdGhlIGluZHVzdHJ5LiBMaWtlIEhSLCBGaW5hbmNlLCBNYXJrZXRpbmcgYW5kIFNhbGVzLCBJVCwgZXRjLiBOb3BlIQpDYW1ib2RpYW4sIERhcmluZ2x5IE1vZGVybiEgUGhhcmUsIHRoZSBDYW1ib2RpYW4gQ2lyY3VzLiBTb21lIG9mIHRoZSBtb3N0IHRhbGVudGVkIHBlcmZvcm1lcnMgaW4gQXNpYSBhcmUgcGFydCBvZiBQaGFyZSBhbmQgYSBncmVhdCBldmVuaW5nIGNhbiBiZSBoYWQgd2F0Y2hpbmcgdGhlaXIgdHJpY2tzISBUaGlzIGlzIG5vdCBvbmUgb2YgdGhlIGNpcmN1c2VzIHRoYXQgYWJ1c2UgYW5pbWFscywgc28geW91IGNhbiByZXN0IGFzc3VyZWQgdGhhdCB5b3Ugd2lsbCBlbmpveSB5b3VyIHRpbWUgaGVyZS4gSXQgcmVhbGx5IGlzIHNvbWV0aGluZyB2ZXJ5IGRpZmZlcmVudCB0byB3aGF0ZXZlciBlbHNlIHlvdSBmaW5kIGluIFNpZW0gUmVhcC4gCldlIHVuZGVyc3RhbmQgaG93IGltcG9ydGFudCBhIGRlY2lzaW9uIGl0IGlzIHdoZW4gY2hvb3NpbmcgdGhlIHJpZ2h0IGNvdXJzZSBhbmQgdW5pdmVyc2l0eS4gVG8gbWFrZSBpdCBlYXNpZXIgZm9yIHlvdSB3ZSBoYXZlIGdhdGhlcmVkIHRvZ2V0aGVyIHNvbWUgdXNlZnVsIGluZm9ybWF0aW9uIHRvIGhlbHAgeW91IGluIHlvdXIgZGVjaXNpb24gYWJvdXQgc3R1ZHlpbmcgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQmlybWluZ2hhbS4KSGUgdXNlZCB0byB0YWtlIFJpdGFsaW4gNW1nIGZvciAzIHRpbWVzIGEgZGF5LiAKU29ycnkgSSBkaWRuIG1lYW4gdG8gY29tZSBhY3Jvc3MgYXMgcHV0dGluZyB5b3UgZG93bi4gCklmIGhlIGlzIGEgcGlsb3QgKHdoaWNoIGlzIHNvbWV0aGluZyB0aGF0IGlzIHN1c3BlY3QpIHRob3NlIHJhdGluZ3MgbWVhbiBoZSBjYW4gZmx5IGEgc2luZ2xlIGVuZ2luZSBDZXNzbmEgKG9yIHNpbWlsYXIpIHdpdGggbGFuZGluZyBnZWFyIHRoYXQgZm9sZHMgaW50byB0aGUgYmVsbHkuIEFsbCBpbiBhbGwgaXQgd291bGQgcmVxdWlyZSBhIG1pbmltdW0gb2YgNDAgaG91cnMgb2YgZmxpZ2h0IHRpbWUgdG8gYWNoaWV2ZSB0aGVzZSByYXRpbmdzIGF0IGFueSBzbWFsbCBhaXJwb3J0IHdpdGggYW4gYWlyY3JhZnQgZm9yIHJlbnQuIEhlIGlzIHRyeWluZyB0byBpbXByZXNzIHlvdSwgYnV0IHRoYXQncyB3aGF0IGl0IHJlYWxseSBtZWFucy4KVGhleSB3aWxsIG1ha2UgeW91IGxhdWdoLCB0aGluaywgd29uZGVyLCBzaWdoLCBnZXQgbWFkIGFuZCB3YW50IHRvIGhpdCBhIHBvbGl0aWNpYW4sIGdldCBhIG5ldyBpZGVhLCBldGMuIFdlIGxlYXZlIG5vIG9uZSBpbmRpZmZlcmVudC4gSXMgaHVtb3VyLiAKIDkyIHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvVGhlIGRpZmZlcmVuY2UgaXMgU2NvcnNlc2UgcHJvYmFibHkgd2F0Y2hlcyBhIHRvbiBvZiBvdGhlciBkaXJlY3RvciBtb3ZpZXMuIApBbmQgYSBkb3plbiB3ZWFwb25zIGFuZCB3ZWlyZCBtYWdpYyBjb21wb25lbnRzLCBpdCB3YXMganVzdCB0b28gYmlnIGZvciBpdHMgb3duIGdvb2QuIApPUCByYW50IGlzIHByZXR0eSBvbmUgc2lkZWQuIApPbmx5IG9uZSBwZXJjZW50IG9mIG1hZ25lc2l1bSBvZiB0aGUgYm9keSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgYmxvb2QsIG1ha2luZyBhIHNpbXBsZSBzYW1wbGUgb2YgbWFnbmVzaXVtIGluIHRoZSBibG9vZCBoaWdobHkgaW5hY2N1cmF0ZS4gVGhhdCB3aHkgbW9zdCBkb2N0b3JzIHdobyByZWx5IG9uIGJsb29kIHRlc3RzIGZvciBtYWduZXNpdW0gYW5kIG5vdCBtYWduZXNpdW0gZGVmaWNpZW5jeSBzaWducyBhbmQgc3ltcHRvbXMgYW5kIHJlYWxpemF0aW9uIHRoYXQgdXAgdG8gODAgcGVyY2VudCBvZiB0aGUgcG9wdWxhdGlvbiBpcyBkZWZpY2llbnQsIHdpbGwgbWlzcyBhbiBpbXBvcnRhbnQgZGlhZ25vc2lzLgpJZiBhbnlvbmUgY291bGQgaGVscCB0aGF0IHdvdWxkIGJlIHZlcnkgbXVjaCBhcHByZWNpYXRlZC4uIApTdGFuZGFyZCBib29zdGVyIHBhY2tzIGFyZSBnb2luZyB0byBiZSB0aGUgYmVzdCB2YWx1ZSBtb25leSB3aXNlLiBJZiB5b3UgYXJlIGxvb2tpbmcgdG8gcmVzZWxsIGxhdGVyIG9yIGp1c3Qgd2FudCBwYWNrcyBmb3Igc2luZ2xlcyBvciBraXRjaGVuIHRhYmxlIGxpbWl0ZWQsIHRoZW4geW91IGFyZSBpbiBsdWNrLiAKV2hlbiBhIHJlcG9ydCBpcyBmaWxlZCwgaXQgd2lsbCBiZSByb3V0ZWQgdG8gYW4gYXBwcm9wcmlhdGUgdW5pdmVyc2l0eSBjb250YWN0ClNob3VsZCB0ZWxsIHRoZSBDemVjaCBSZXB1YmxpYyBhbmQgdGhvc2UgbGlrZSB0aGVtLCB0byB0YWtlIGEgaGlrZSBpbiB0aGUgQ2FycGF0aGlhbnMuIApZb3UgY2FuIGxlYXJuIGEgbG90IGFib3V0IGdhbWJsaW5nIGlmIHlvdSdyZSB3aWxsaW5nIHRvIGFuYWx5emUgMjcgbWlsbGlvbiBoYW5kcyBvZiBvbmxpbmUgcG9rZXIuIERvbid0IGhhdmUgdGltZSBmb3IgdGhhdD8gTm8gd29ycmllczsgc29jaW9sb2d5IGRvY3RvcmFsIHN0dWRlbnQgS3lsZSBTaWxlciBvZiBDb3JuZWxsIFVuaXZlcnNpdHkgaGFzIGRvbmUgaXQgZm9yIHlvdS4gClBvaW50IDMpIFBlcnNvbmFsIFByZWZlcmVuY2UsIGJ1dCBhdCBsZWFzdCBrbm93IHRoZSBpdGVtcyB5b3UgZ29pbmcgdG8gYnV5IG9uIHRoZSBjaGFtcGlvbiB5b3UgcGxheWluZyBhbmQgdGhlIHNpdHVhdGlvbnMgbmVlZGVkIGZvciB0aG9zZSBidXlzIGFuZCB3aHkgeW91IGRvaW5nIGl0LgpGb2xkIG9mdGVuLCB1c2UgeW91ciBibHVmZiBzcGFyaW5nbHksIGFuZCBhbHdheXMgYmUgYXdhcmUgb2YgdGhlIGhhYml0cyBhbmQgdGVsbHMgb2YgdGhlIG90aGVyIHBsYXllcnMgaW52b2x2ZWQgaW4gdGhlIGdhbWUuIApEb3dubG9hZCBkZSBGaWxtZXMgR3IgRG93bmxvYWQgZGUgUHJvZ3JhbWFzLCBEb3dubG9hZCBkZSBKb2dvcywgRG93bmxvYWQgZGUgTSBXYWxscGFwZXJzLCBSZXZpc3RhcyBlIFRWIG9ubGluZSEKSW0gaGVyZSB0byBnaXZlIHlvdSBmb29kLCBkcmlua3MsIGFuZCBjbGVhciBpbnN0cnVjdGlvbnMgb24gaG93IHRvIGdldCBvdXQgaWYgdGhlIHBsYW5lIGlzIG9uIGZpcmUuIEkgYW0gbm90IGhlcmUgdG8gcHJvdmlkZSB5b3Ugd2l0aCBzbWFsbCB0YWxrICBnZXQgYSBib29rLi4gCkhlJ3MgZGFkZHksIEkgbmVlZCB0byBiZSBhYmxlIHRvIHRydXN0IGhpbSB0aGF0IGhlIHdpbGwgYWx3YXlzIHByb3RlY3QgbWUsIG5vIG1hdHRlciB3aG8gaXMgYXR0YWNraW5nLiBIZSdzIGEgZmF0aGVyIGZpcnN0LiAKSWYgeW91IHN0cmlrZSBvdXQgdGhlbiB5b3UgY2FuIHN0YXkgZm9yIHRoZSBsYXRlIG5pZ2h0IHN0cmFnZ2xlciBmZXN0IGFmdGVyIDMgd2hpY2ggY2FuIHlpZWxkIHJpY2ggcmVzdWx0cyBiZWNhdXNlIGJ5IHRoYXQgdGltZSB3ZSBhbGwga25vdyB3aGF0IHdlJ3JlIHRoZXJlIGZvci4gVGhhdCB3YXMgeW91ciBmaXJzdCBhbmQgcHJldHR5IG11Y2ggZmF0YWwgbWlzdGFrZS4gCjEwMCwwMDAgZmFucyBpbiBMYXMgVmVnYXMgdG8gd2F0Y2ggdGhlIGFjdGlvbiwgdGhlIGV2ZXIgcHJlc2VudCBFU1BOIGNhbWVyYXMgYW5kIGEgaG9zdCBvZiBwcm9tb3Rpb25hbCBtYXJrZXRpbmcsIG11Y2ggb2Ygd2hpY2ggaW52b2x2ZWQgaHVuZHJlZHMgb2Ygc2NhbnRpbHkgY2xhZCB3b21lbiwgdGhlIHNjZW5lIHRvb2sgb24gYSBjaXJjdXMgYXRtb3NwaGVyZSwgQnV0bGVyIHNhaWQuLiAKQW55Ym9keSB3aG8gY2FtZSB0byBQYXJsaWFtZW50IHNob3VsZCBoYXZlIGJlZW4gZGlzdHVyYmVkIHdoaWxlIG1lYW5kZXJpbmcgaGlzIHdheSB0aHJvdWdoIGxheWVycyBvZiBndW4gdG90aW5nIHVuaWZvcm1lZCBwZW9wbGUsIGJhcmJlZCB3aXJlcyBhbmQgY291bnRsZXNzIHNlY3VyaXR5IGNoZWNrcyB3aXRoIHRob3VzYW5kcyBvZiBhZ2l0YXRvcnMgbG9va2luZyBmb3IgYW4gb3Bwb3J0dW5pdHkgdG8gcG91bmNlIGF0IHlvdS4gCldpbGxpYW0ncyBTY2hvb2xzIHdlcmUgdHJmc3RlZCB0aGlzIHdlZWsiLiBTZXJ2aW5nIGluIHRoZSB2YXJpb3VzIHNjaG9vbHMgdG8gbmV4dCB0d28gd2Vla3Mgd2lsbCBiZSB0aGUgZm9sbG93aW5nOiBSb29zZXZlbHQgICBNb25kYXk7IERyLiAKSSd2ZSBzYWlkIGl0IHNvIG1hbnkgdGltZXMgd2l0aCB0aGUgRGVscGhpIGNhc2UsIHRoZXJlIGlzIHdheSB0b28gYmlnIG9mIGFuIGFzc3VtcHRpb24gdGhhdCB0aGV5IGhhdmUgYSBmdWxsIGNvbXBsZXRlIHByb2ZpbGUgb2YgdGhpcyBndXksIGFuZCB0aGF0IHRoZXkgY2FuIGp1c3QgcGx1ZyB0aGF0IGludG8gYSBkYXRhYmFzZSBhbmQgY29ubmVjdCBoaW0uCkhvdyBkbyBwZW9wbGUga2VlcCBicmluZ2luZyB1cCBSYW5kbGUgd2l0aG91dCBldmVuIG1lbnRpb25pbmcgaGUgZGlkbiB3YW50IGEgYmVuY2ggcm9sZSBiZWhpbmQgTGVicm9uLiBJbSB1cHNldCByYW5kbGUgaXMgZ29uZSB0b28gYnV0IHRoYXQgZHVkZSB3YW50ZWQgbXVsdGlwbGUgeWVhcnMgYW5kIGhpZ2ggcGF5IGFuZCBiZWluZyBhIGJlbmNoIHBsYXllciBnZXRzIG5vd2hlcmUuIApBbmQgdGhlbiB0aGUgZnVuIHN0b3BwZWQgICBQYWluIGJlZ2FuLiBOb3cgaSBtZW50aW9uZWQgaW4gbXkgcHJldmlldyBteSBmZWFyIG9mIHRoZSB3aW5kIGJlaW5nIGEgZm9lIHRoYXQgY291bGQgYmUgY29uc3RhbnRseSBpbiBvdXIgZmFjZSBnaXZlbiBhIHBvaW50IHRvIHBvaW50IHJhY2UuIEkgZGlkbnQgbWVudGlvbiB0aGUgd2luZCBpbiB5ZXN0ZXJkYXkncyBwb3N0LCB3aGljaCB3YXMgcmVhc29uYWJseSBzdHJvbmcgY29taW5nIG9mZiB0aGUgb2NlYW4gaW50byBvdXIgZmFjZSwgYnV0IGl0IGNlcnRhaW5seSBkaWRudCBmZWVsIHdvcnNlIHRoYW4gYW55dGhpbmcgd2UgaGF2ZSBmZWx0IGVhcmx5IHRoaXMgc2Vhc29uIGluIFRvcm9udG8uIFRvZGF5IHRoaW5ncyBjaGFuZ2VkIGEgYml0LiBGcm9tIG1pbGUgOTUgdG8gbWlsZSAxMDYsIHdlIHdlcmUgdG8gY2xpbWIgYW5vdGhlciA0NTAwIGZlZXQuIEJ1dCB0aGluayBhYm91dCB0aGlzLCBkb3R0ZWQgdGhyb3VnaG91dCB0aGlzIGFyZWEgd2VyZSB3aW5kbWlsbHMgICBUSElTIFdBUyBBIEJMT09EWSBXSU5EIEZBUk0hISEhIFdFIFdFUkUgR09JTkcgVE8gQkUgQ0xJTUJJTkcgNDUwMCBGRUVUIFNUUkFJR0hUIElOVE8gQSBCSUcgRlJFQUtJTiBGQU4uIFRoaXMgaGFkIHRvIGJlIHRoZSB0b3VnaGVzdCBjbGltYiBpIGhhdmUgZmFjZWQuIEphc29uLCBvbmUgb2YgdGhlIENhcm1pY2hhZWwgY29hY2hlcyBoYWQgdGFrZW4gbWUgdW5kZXIgaGlzIGJpZyB3aW5nIHRoZSBsYXN0IHR3byBkYXlzLCBwdXNoaW5nIG1lIGhhcmQgdG8gZGlnIGRlZXAgYW5kIGF0dGFjayB0aGVzZSBjbGltYnMgICB0aGlzIGd1eSBjbGltYnMgd2l0aCBlYXNlLCBtYWtlcyBhbGwgb2YgdGhpcyBsb29rIHJlYWwgZWFzeSBidXQgaGFzIGZpZ3VyZWQgb3V0IGluIHNob3J0IG9yZGVyIGhvdyB0byBtb3RpdmF0ZSBtZSB0byBrZWVwIHB1c2hpbmcgaGFyZC4gSGUgaGF1bGVkIG15IGJ1dHQgdXAgdGhpcyBtb3VudGFpbiwgcHVzaGluZyB0aHJvdWdoIDIwIGRlZ3JlZSBwaXRjaGVzIChob3BlZnVsbHkgc29tZSBvZiB5b3Ugc2F3IHRoZSBwcm9zIG1ha2luZyB0aGVpciB3YXkgdGhyb3VnaCB0aGlzLCBhc3RvdW5kaW5nIHRvIG1lIGhvdyB0aGV5IHBvd2VyZWQgdXAgdGhpcykgcHJvdmlkaW5nIGEgZHJhZnQsIHllcyBhIGRyYWZ0IGRlc3BpdGUgdGhlIGZhY3QgSSBwcm9iYWJseSB3YXNudCBnb2luZyBtb3JlIHRoYW4gNiA4a20vaHIuIFVuZm9ydHVuYXRlbHkgSSBoYXZlIHRvIGd1ZXNzIG9uIGFsbCBvZiB0aGlzIGFzIG15IGdhcm1pbiByYW4gb3V0IG9mIGJhdHRlcnkgYXQgMTYwa20sIHNvIEkgbWlzc2VkIGFsbCBvZiB0aGlzIGdyZWF0IGNsaW1iaW5nLgpUaGVpciBqb2IgaXMgdG8gYXNzaXN0IHRoZSBhZ2VuY3kgaW4gY29taW5nIHVwIHdpdGggY3JlYXRpdmUgd2F5cyB0byBzZWxsIG9yIG90aGVyd2lzZSBkaXNwb3NlIG9mIG9ic29sZXRlIGdvdmVybm1lbnQgcHJvcGVydHkuLiAKU29udCBpbHMgdml0ZSByZXRvbWJzIGRhbnMgbGUgc3RyZXNzIGV0IGxlIHJ5dGhtZSBlZmZybiBkZXMgbW9pcyBwcmNkZW50cywgcGVyc3VhZHMgcXVlIGMnZXN0IHVuZSBmYXRhbGl0LApOZWl0aGVyIHRlYW0gbGVkIGJ5IG1vcmUgdGhhbiBmaXZlIHBvaW50cyBpbiBhIG1lc3N5IGZpcnN0IHF1YXJ0ZXIgdGhhdCBzYXcgZWlnaHQgY29tYmluZWQgdHVybm92ZXJzLiBUaGUgUmFwdG9ycyB3ZXJlIGp1c3QgMSBmb3IgNiBmcm9tIGxvbmcgZGlzdGFuY2UsIGFuZCB0cmFpbGVkIHRoZSBSb2NrZXRzIDIzIDE5IHRvIHN0YXJ0IHRoZSBzZWNvbmQuCkkga25vdyBoZSBsaWtlcyB3aGVuIEkgYXNrIGhpbSB0byB3ZWFyIGl0LiBCdXQgT1AgZGVmaW5pdGVseSBuZWVkcyB0byB3b3JkIGl0IGNvcnJlY3RseS4gTm90IHN1cmUgaG93IEkgZW5kZWQgdXAgbWFraW5nIHRoaXMgc3VjaCBhIGxvbmcgc3RhdGVtZW50LiAKRGUgbWVuZXIgdW5lIHR1ZGUgZW4gY29uY2VydGF0aW9uIGF2ZWMgbGVzIHJpdmVyYWlucywgY29tbWVyYW50cyBldCBhc3NvY2lhdGlmcyBwb3VyIG11dHVhbGlzZXIgbGEgcmVjaGVyY2hlIGRlIHNvbHV0aW9ucyBsZXMgbWlldXggYWRhcHRlcyBldCBsZXMgcGx1cyBlZmZpY2FjZXMgcG91ciBlbXBjaGVyIGxlIHN0YXRpb25uZW1lbnQgaWxsaWNpdGUgZGVzIHZoaWN1bGVzIGVuIHBhcnRpY3VsaWVyIHN1ciBsZXMgdHJvdHRvaXJzLCAocGFyIGV4ZW1wbGUgOiBsYSBwb3NzaWJpbGl0IGRlIGZhdm9yaXNlciBsYSBwaXRvbmlzYXRpb24gZGUgY2VydGFpbmVzIHJ1ZXMpLApTaGFwZXMgZnJvbSBjaXJjbGVzIHRvIGhleGFnb25zIGFsc28gd2VhdmUgc29tZSBqdWljeSBleWUgY2FuZHkuCkkgaGF2ZSBiZWVuIHJlZHVjZWQgdG8gcG9pbnRzIHdoZXJlIGkgd2lsbCBmbG9wIHRoZSBudXRzLCBhbmQgbXkgb25seSBjb25zaWRlcmF0aW9uIGluIHRoZSBoYW5kIHdpbGwgYmUgYW0gaSBnb2luZyB0byBnZXQgbHVja3kgZW5vdWdoPyBJIHN1cHBvc2VkbHkgYmVlbiBsdWNreSBhbHJlYWR5IHRvIGhhdmUgc3VjaCBhIHN0cm9uZyBoYW5kLCBidXQgaSBoYXZlIHRvIHRha2UgYSBsb3Qgb2YgdGltZSB0byBjb25zaWRlciBpZiBhbnlvbmUgZWxzZSB3aWxsIGdldCBsdWNreSBvciBpZiBpdCB3aWxsIGJyaWNrIG91dC4gClt0aXRsZV0gWyVvZmZdICAgW21vbmV5IG5vd10uIFtleHRyYSBpbmZvIChpbmNsdWRpbmcgZW5kIGRhdGUgb2Ygc2FsZSBpZiBhdmFpbGFibGUpXS4KV1NPUEUgMjAxNyBmZWF0dXJlcyAxMSBnb2xkIGJyYWNlbGV0IGV2ZW50cyBiZXR3ZWVuIE9jdC4gMTkgYW5kIE5vdi4gMTAgYXMgcGFydCBvZiBhIGxhcmdlciBXU09QIGZlc3RpdmFsIGF0IHRoZSBLaW5nJ3MgQ2FzaW5vIFJvenZhZG92IGluIHRoZSBDemVjaCBSZXB1YmxpYy4gQSBXU09QIGNpcmN1aXQgc3RvcCBraWNrcyBvZmYgdGhlIGZlc3Rpdml0aWVzIG9uIFNlcHQuIDI4LCBhbmQgdGhlIGZlc3RpdmFsIGFzIGEgd2hvbGUgc3RyZXRjaGVzIG9uIGZvciA0NCBkYXlzIHdpdGggbW9yZSB0aGFuICQyMCBtaWxsaW9uIGluIHByaXplIHBvb2wgZ3VhcmFudGVlcy4KUmV2aWV3ZWQgYnkgTWVsaW5kYSBTenltYW5pawpUZW4geWVhcnMgYWdvLCBTYW1hbnRoYSBGYXJiZXIsIG5vdyBhIDI1IHllYXIgb2xkIE1hbmhhdHRhbiByZXNpZGVudCwgdGVsbHMgVGhlIFBvc3Qgc2hlIHdhcyBpbnZvbHZlZCBpbiBhbiBpbmFwcHJvcHJpYXRlIHJlbGF0aW9uc2hpcCB3aXRoIGhlciB0ZWFjaGVyIGF0IExvbmcgSXNsYW5kIHByaXZhdGUgc2Nob29sIExhd3JlbmNlIFdvb2RtZXJlIEFjYWRlbXkuIFdoaWxlIHRoZWlyIHJlbGF0aW9uc2hpcCB3YXNuJ3Qgc2V4dWFsLCB0aGUgZXhwZXJpZW5jZSBoYXVudGVkIGhlciBmb3IgeWVhcnMuIFdoZW4gYSBkaWZmZXJlbnQgdGVhY2hlciBhdCB0aGUgc2FtZSBzY2hvb2wsIERhbmllbCBNY01lbmFtaW4sIHdhcyBhcnJlc3RlZCBmb3IgYWxsZWdlZGx5IHJhcGluZyBhIHN0dWRlbnQsIHRoZSBuZXdzIGJyb3VnaHQgYmFjayBtYW55IG9mIHRoZSBjb25mbGljdGVkIGZlZWxpbmdzIEZhcmJlciBoYWQgYXQgdGhlIHRpbWUsIGFuZCBGYXJiZXIgYWdyZWVkIHRvIHNoYXJlIGhlciBzdG9yeSB3aXRoIFRoZSBQb3N0J3MgTGF1cmVuIFN0ZXVzc3kuIEEgbGF3eWVyIGZvciB0aGUgc2Nob29sIG1hZGUgdGhlIGZvbGxvd2luZyBjb21tZW50OiAiQXQgTGF3cmVuY2UgV29vZG1lcmUgQWNhZGVteSwgYWNhZGVtaWMgZXhjZWxsZW5jZSBhbmQgc3R1ZGVudCBzYWZldHkgaGF2ZSBhbHdheXMgYmVlbiBhbmQgd2lsbCBjb250aW51ZSB0byBiZSB0b3AgcHJpb3JpdGllcy4iIFRoZSB0ZWFjaGVyIGhhZCBubyBjb21tZW50LgpJbiAyMDE3LCBNYXJzIGFpcmVkIG9uZSBjb21tZXJjaWFsIGZvciBTa2l0dGxlcywgaXRzIHRoaXJkIGNvbnNlY3V0aXZlIGJpZyBnYW1lIGFkIGZvciB0aGUgY2FuZHkuIApJIGp1c3Qgd2FudGVkIHRvIHNoYXJlIHdoeSBzb21lIGdpcmxzIG1pZ2h0IHByZWZlciBib3kgc2NvdXQgYWN0aXZpdGllcyBvdmVyIHRob3NlIGF2YWlsYWJsZSBpbiBHaXJsIFNjb3V0cy4gCkZvciBleGFtcGxlLCBhIHRvdXJuYW1lbnQgbWlnaHQgc3RhcnQgd2l0aCB0aGUgYmxpbmRzIGF0IDI1IDUwLCBhbmQgcHJvZ3Jlc3MgdG8gNTAgMTAwLCA3NSAxNTAsIDEwMCAyMDAsIDIwMCA0MDAsIGFuZCBzbyBmb3J0aC4gVGhlIGZhY3QgdGhhdCBibGluZHMgZXNjYWxhdGUgZHVyaW5nIGEgdG91cm5hbWVudCBhbmQgdGhlcmUgYXJlIG9ubHkgYSBzZXQgbnVtYmVyIG9mIGNoaXBzIGluIHBsYXkgbWFrZXMgdG91cm5hbWVudCBwbGF5IHNvbWV3aGF0IGRpZmZlcmVudCB0aGFuIGxpdmUgZ2FtZSBwbGF5LiAKVGhlIG5leHQgaW1wb3J0YW50IGVsZW1lbnQgdG8gY2hvb3NpbmcgdGhlIHNpdGUgaXMgdG8gZmluZCBvdXQgaG93IG1hbnkgcGVvcGxlIGFyZSBwbGF5aW5nIG9uIHRoZSBwb2tlciBzaXRlLiBJIG1lYW4sIHlvdSBuZWVkIG90aGVyIHBva2VyIHBsYXllcnMgdG8gcGxheSBwb2tlciByaWdodD8gVGhlIG1vcmUgcGxheWVycyBhcmUgcGxheWluZywgdGhlIGJldHRlciBpdCBpcyB0byBmaW5kIGEgcGxheWVyIHRvIG1hdGNoIHlvdXIgc2tpbGwgYW5kIGNvbXBldGVuY3kuIFRoZSBtb3JlIHBsYXllcnMgaW4gYW4gb25saW5lIHNpdGUsIHRoZSBtb3JlIHBlb3BsZSB5b3UgY2FuIGJlYXQgKGFzIGxvbmcgYXMgeW91IGF2b2lkIHRoZSBwbGF5ZXJzIHdobyBjYW4gYmVhdCB5b3UpLiBHYW1ibGluZyBpcyBhIG51bWJlcnMgZ2FtZSBhZnRlciBhbGwsIHNvIHRoZSBtb3JlIHBlb3BsZSB0byBhIHNpZ2h0LCB0aGUgbW9yZSByZWxpYWJsZSB0aGF0IHNpdGUgYXBwZWFycy4KQmFzaWNhbGx5IEkgYm91Z2h0IHRoaXMgYW5kIGFkanVzdGVkIGl0IHNvIHdoZW4gSSBsYXkgZmFjZSBkb3duIGluIHRoZSBkb3VibGUgY2hpbiwgY2hpbiB0dWNrIHBvc2l0aW9uIChtYWtlIHN1cmUgeW91ciBoZWFkIGlzbiBnZXR0aW5nIHRpbHRlZCB1cHdhcmRzIGJ1dCB0aGF0IHlvdSBhcmUgaW5zdGVhZCBsb29raW5nIHN0cmFpZ2h0IGFoZWFkKSBJIGFtIGJlaW5nIGdlbnRseSBzdHJldGNoZWQuIApJdCBkaWRuIGNvbWUgb3V0IG9mIEJlcm5hbmtlIHBvY2tldHMsIGJ1dCBVUyB0YXhwYXllcnMgV2UgZGVzZXJ2ZSB0byBrbm93IHdoaWNoIGluc3RpdHV0aW9ucyBnb3QgdGhlIG1vbmV5Li4gClRoaXMgb2ZmIGdyaWQgYmVhY2ggYXJlYSBpbiBUdWx1bSwgb25jZSBhIGhpcHBpZSBlbmNsYXZlIGFuZCBub3cgbW9yZSBib2hvIGFuZCBib3V0aXF1ZXksIGlzIHN1cnJvdW5kZWQgYnkganVuZ2xlIGluIGNvbnRyYXN0IHRvIHNwcmF3bGluZyByZXNvcnRzIGFsb25nIHRoZSBSaXZpZXJhIE1heWEuLiAKQWxsIHRoZXNlIGNvbW1lbnRzIHN1cGVyIGludGVyZXN0aW5nIHRoZXkgbmVhcmx5IGFsbCBNb3Jtb24gc3BlY2lmaWMuIFBlcmhhcHMgdGhhdCBoYXMgdG8gZG8gd2l0aCB0aGUgcGhyYXNpbmcgb2YgdGhlIHBvc3QsIGJ1dCBmb3IgbWUgaXQgd2FzIGxlc3MgYW55dGhpbmcgTW9ybW9uIHNwZWNpZmljIGFuZCBtb3JlIEdvZCBnZW5lcmFsLiAKUG9vbk9uVGhlTW9vbjMxNCB1CkxlYXN0IEkgaG9wZSBjb21wbGljaXR5IGlzIGRpZmZlcmVudCB0aGFuIGd1aWx0IGluIHRoZSBleWVzIG9mIGVudmlyb25tZW50YWwgcmV2b2x1dGlvbmFyaWVzLiAKSW4gb3JkZXIgZm9yIEdFIHRvIGNvbXBldGUsIHRoZXkgaGF2ZSB0byBkZXZlbG9wIGEgYnJhbmQgbmV3IGxvY29tb3RpdmUuIApUaGUgQ2hhcmxvdHRlc3ZpbGxlIGRyaXZlciBpcyBhbiBleGFtcGxlIG9mIHN1Y2ggYSBwZXJzb24uIApPa2F5LCBzbyB5b3UgZ3V5cyB3aWxsIGFuc3dlciB0aGF0LCBidXQgbm90IHRoZSBhY3R1YWwgcXVlc3Rpb24gYXNrZWQgaW4gdGhlIG1haW4gcG9zdD8gU28sIGFyZSB5b3UgZm9sa3Mgd29ya2luZyBvbiBtb3JlIE1hcnZlbCB0YWJsZXMgb3Igbm90PyBJdCBzZWVtcyBsaWtlIGEgc2ltcGxlIHllcyBvciBubyBxdWVzdGlvbiwgYnV0IHlvdSBzZWVtIHRvIGJlIGF2b2lkaW5nIGFuc3dlcmluZyBpdCBmb3Igc29tZSByZWFzb24uIEkgbm90IGFza2luZyBmb3IgcmVhc29ucyB3aHkgb3Igd2h5IG5vdCwganVzdCBhc2tpbmcgd2hldGhlciB3ZSBnb2luZyB0byBzZWUgYW55IG1vcmUgb2YgdGhlbSBvciBub3QuIEkgYWRtaXQgSSBzYXcgQmxhY2sgUGFudGhlciBhbmQgQXZlbmdlcnM6IEluZmluaXR5IFdhciwgYW5kIHdhcyBlYWdlcmx5IGF3YWl0aW5nIHRhYmxlcyBiYXNlZCBvbiB0aGVtLCBiZWNhdXNlIEkgdGhvdWdodCB5b3UgZm9sa3Mgd291bGQgZG8gYW4gYXdlc29tZSBqb2Igb24gdGhlbSwgYnV0IGlmIHlvdSBub3QgZG9pbmcgdGhlbSBhbnltb3JlLCBhIGhlYWRzIHVwIHRvIHVzIHdvdWxkIGJlIG5pY2UsIHNvIHdlIGRvbiBsb29rIGZvcndhcmQgdG8gdGFibGVzIHdlIG5ldmVyIGdvaW5nIHRvIGdldC4uIApUaGUgc3BlZWQgd2lsbCBjYXRjaCBpdCwgYW5kIGl0IHdpbGwgdGVsZXBvcnQgdGhlIGJhbGwgdG8gdGhlIGxhc3QgcG9pbnQgdGhpbmcgNikgcmV2ZXJzZSBldmVyeSB0aGluZyB0byB0aGUgc3RhcnQsIGFuZCBtb3ZlIHRoZSBib3R0b20gcmlnaHQgcG9ydGFsIHRvIHRoZSB0b3AgbGVmdCwgdGhlIG9uZSBhbG1vc3QgZmFjaW5nIHRoZSBmaW5pc2gsIHRoZW4gbGV0IGdvIG9mIHRoZSBiYWxsLiAoRnVsbCBBbnN3ZXIpLiAKVGhlc2UgbWFjaGluZXMgZW5zdXJlIHRoYXQgeW91ciBkZWNrIGlzIHNodWZmbGVkIHRvIHRoZSBoaWdoZXN0IGRlZ3JlZSBwb3NzaWJsZS4gClRvIHRoYXQgZW5kIHRoZSBwb3dlciBzdXBwbHkgaXMgdGhlIG1vc3QgbGlrZWx5IHRvIGZhaWwuIEkgYnVybmVkIG91dCAzIGluIGEgeWVhciB1c2luZyB0aGVtIDI0LzcgYXQgNzUlIHBvd2VyIHRpbGwgSSBzdG9wcGVkIGJ1eWluZyB0aGUgc2hpdHR5IENoaW5lc2Ugb25lcyBvciB0aGUgc3RvY2sgb25lcyB0aGF0IGNhbWUgd2l0aCB0aGUgc3RyaXAsIGFuZCB3ZW50IG91dCBhbmQgYm91Z2h0IG9uZSB0aGF0IHdhcyBtb3JlIGV4cGVuc2l2ZSBhbmQgaGFkIG1vcmUgY3VycmVudCBoZWFkcm9vbS4gQW5kIGl0IGNhbWUgd2l0aCBhIHdhcnJhbnR5Li4gCk9uIHRoZSBvbmUgaGFuZCwgdGhlcmUgaXMgc3RpbGwgcm9vbSB0byBiZWF0IHRoaXMgZ2FtZSBpZiB5b3UgZ29vZDsgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBnYW1lcyBhdCBhbGwgbGltaXRzIGhhdmUgYmVlbiBnZXR0aW5nIGhhcmRlciBhbmQgaGFyZGVyIHRvIGJlYXQsIHBlb3BsZSBhcmUgbG9zaW5nIGxlc3MgYW5kIGxlc3MsIGZpc2ggYXJlIGluY3JlYXNpbmdseSBzY2FyY2UsIGFuZCBpdCBpcyBlYXNpbHkgY29uY2VpdmFibGUgdGhhdCB3ZSBjb3VsZCByZWFjaCBhIHBvaW50IGluIHRoZSBmYWlybHkgbmVhciBmdXR1cmUgd2hlcmUgb25seSBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2YgdGhlIGJlc3Qgd2lubmluZyBwbGF5ZXJzIGNvdWxkIGFjdHVhbGx5IGJlYXQgdGhlIHJha2UuIApMZXQgdXMgYXNzdW1lIHRoYXQgdGhlcmUgYXJlIGV4YWN0bHkgMzY1IGRheXMgaW4gYSB5ZWFyIGFuZCB0aGF0IGJpcnRoZGF5cyBhcmUgdW5pZm9ybWx5IHJhbmRvbWx5IGRpc3RyaWJ1dGVkIGFjcm9zcyB0aG9zZSBkYXlzLiAKSXQnbGwgYmUgZ29vZCBmb3IgeW91IGFuZCB0aG9zZSBhcm91bmQgeW91IHdobyBsb3ZlIGFuZCBhZG9yZSB5b3UuIApEaWUgQXVnZW4gZGVzIERvYyBibGlja3RlbiByYXNjaCBhdWYsIHN0cmVpZnRlbiBpaHIgR2VzaWNodCwgZWluZSBBdWdlbmJyYXVlIHpvZyBzaWNoIGxlaWNodCBob2NoLCBIZWxlbiBlcnJ0ZXRlIHRpZWYgdW5kIHNlbmt0ZSBpaHJlIEF1Z2VuIHNjaG5lbGwsIHVuZCBkYWNodGU6ICJXYXMgZGVua3QgZXIgd29obCB2b24gbWlyPyBEYXNzIGljaCB0b3RhbCBoZW1tdW5nc2xvcyB1bmQgZ2VpbCBiaW4iLCB1bmQgbm9jaG1hbHMgc3RyaWNoIGVpbmUgV2VsbGUgZGVyIFJ0ZSBiZXIgaWhyIEdlc2ljaHQuIApDYXJpYmJlYW4gU3R1ZCBoYXMgYmVjb21lIGEgdmVyeSBwb3B1bGFyIGdhbWUgd2l0aCBvbmxpbmUgZ2FtYmxlcnMuIApSZWNlbnQgZXZpZGVuY2Ugc2hvd3MgdGhhdCBpdCBpcyBsaWtlbHkgc3RhdGlucycgYWJpbGl0eSB0byBsb3dlciBpbmZsYW1tYXRpb24gaXQgd2hhdCBhY2NvdW50cyBmb3IgdGhlIGJlbmVmaXRzIG9mIHN0YXRpbnMsIG5vdCB0aGVpciBhYmlsaXR5IHRvIGxvd2VyIGNob2xlc3Rlcm9sLgoiUGF5IGF0dGVudGlvbiB0byB0aGUgdGhpbmdzIHRoYXQgYXJlIGNyaXRpY2FsIHRvIHlvdXIgaGFwcGluZXNzLiBQbGF5IHdpdGggeW91ciBjaGlsZHJlbi4gVGFrZSB0aW1lIHRvIGdldCBtZWRpY2FsIGNoZWNrdXBzLiAKU2hlIHB1dCBvbiBhbiBhYmF5YSwgdGhlIHJvYmUgbGlrZSBjb3ZlcmluZyB0aGF0IGRldm91dCBNdXNsaW0gd29tZW4gd2VhciwgYW5kIGNyYXdsZWQgb3V0IGEgd2luZG93LiAKVHdpY2UuIApUaGUgcmluZyBvZiBmaXJlClN3aW4gQ2FzaDogVGhlcmUgYXJlIGEgZmV3IHRlYW1zIGluIHRoZSBBbWVyaWNhbiB0aGF0IEkgbGlrZS4gSWYgeW91IGxvb2sgYXQgYSB0ZWFtIGxpa2UgSG91c3RvbiB0aGF0IGNhbiBzY29yZSBhbmQgZGVmZW5kIGFzIHdlbGwgYXMgdGhleSBkbywgdGhleSBjb3VsZCBiZSBhIHRlYW0gdG8gbWFrZSBhIHJ1bi4gVGhlIG90aGVyIHRlYW0gaW4gdGhlIEFtZXJpY2FuIHRoYXQgSSBsaWtlIGlzIG15IGlyb24gbWFuIHRlYW0gaW4gQ2luY2lubmF0aS4gCkFzIGNocm9uaWNsZWQgYnkgR3JlZW5lLCBQb2tlciBkdXJpbmcgdGhlIGVhcmx5IDE4MDBzIHdhcyBwbGF5ZWQgdXNpbmcgMjAgY2FyZHMgbWFkZSB1cCBvZiBvbmx5IGFjZXMsIGtpbmdzLCBxdWVlbnMsIGphY2tzLCBhbmQgdGVucyBieSBmb3VyIHBlcnNvbnMgZWFjaCBob2xkaW5nIGZpdmUgY2FyZHMuIAoiSW5ub2NlbnQgcGVyc29ucyB3ZXJlIGluY2FyY2VyYXRlZCwgZ3VpbHR5IHBlcnNvbnMgaGF2ZSBiZWVuIHJlbGVhc2VkIHRvIGZ1cnRoZXIgZW5kYW5nZXIgdGhlIHB1YmxpYywgbWlsbGlvbnMgYW5kIG1pbGxpb25zIG9mIHB1YmxpYyBkb2xsYXJzIGFyZSBiZWluZyBleHBlbmRlZCB0byBkZWFsIHdpdGggdGhlIGNoYW9zIE1zLiBEb29raGFuIGNyZWF0ZWQsIGFuZCB0aGUgaW50ZWdyaXR5IG9mIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbSBoYXMgYmVlbiBzaGFrZW4gdG8gdGhlIGNvcmUsIiBKdWRnZUNhcm9sIFMuIApCdXQgc29tZSBtb3RoZXJmdWNrZXIgbWFkZSBhIG1lbWUgc2F5aW5nIGl0IHdhcyBzbyBub3cgaXQgaXMgaXMuIApJIGtub3csIHRoaXMgaXNuIG5ld3MuIApZb3UgbG9va2luZyBhdCBhIGNvc3QgYmVuZWZpdCBhbmFseXNpcywgaWYgeW91IGhhZCBhIERVSSwgeW91ciBsZWdhbCBmZWVzLCBob3cgbXVjaCBhcmUgdGhvc2UgZ29pbmcgdG8gY29zdCB5b3U/IElmIHlvdSBnb2luZyB0byBsb3NlIHlvdXIgam9iLCBob3cgbXVjaCBpcyB0aGF0IGdvaW5nIHRvIGNvc3QgeW91PyBIb3cgbXVjaCBkb2VzIGEgZGl2b3JjZSBjb3N0IHlvdT8gT3JjaGFyZCwgYSBmb3JtZXIgcmVzb3J0IGxvY2F0ZWQgb24gZm91ciBhY3JlcyBvZiByYWluIGZvcmVzdCwgdGhlIHJlc2lkZW50aWFsIHByb2dyYW0gY29zdHMgJDI3OSBwZXIgZGF5IGlmIHlvdSBzdGF5IGZvciBtb3JlIHRoYW4gOTAgZGF5cy4gClRoYXQncyB3aHkgd2hlbiBJIGZvdW5kIG91dCBhYm91dCB0aGlzIEkgd2FudGVkIHRvIGp1bXAgb24gaXQgc2luY2UgSSBrbmV3IGl0IHdvdWxkbid0IGdldCBtZSBoaWdoIGJ1dCB3b3VsZCBoZWxwIG15IHN0b21hY2guSSBhbSBubyBkb2N0b3Igc28gb2J2aW91c2x5IHlvdSB3aWxsIGhhdmUgdG8gZmluZCB3aGF0IHdvcmtzIGJlc3QgZm9yIHlvdS4gSnVzdCBrbm93IEkndmUgYmVlbiB0aHJvdWdoIHRoZSBhIHdpZGUgdmFyaWV0eSBvZiBtZWRzIGFuZCBsaWtlIHRvIHBhc3MgdGhlIGluZm9ybWF0aW9uIG9uIHRvIG90aGVycyBpbiBjYXNlIHRoZXkgbWF5IGJlIGxvb2tpbmcgZm9yIGFzc2lzdGFuY2UuQWxzbyB0aGUgbWVkcyBJIG1lbnRpb25lZCBkbyBpbnRlcmFjdCB3aXRoIG90aGVyIG1lZHMgYW5kIGFsc28gY29tZSB3aXRoIHRoZSBwb3RlbnRpYWwgZm9yIGFkZGljdGlvbiBhbmQgYWR2ZXJzZSBlZmZlY3RzLiAKU29tZXRpbWVzIEkgcGluZSBmb3IgdGhlIHBhc3QsIGFuZCBpdCBtYWtlcyBtZSBzYWQuIApGYW1pbGllcyBwbGF5IGFsbCBraW5kcyBvZiBjYXJkIGdhbWVzLCB0aGVuIHRoZXJlIGFyZSB0aGUgbmVpZ2hib3JzIHdobyBnZXQgdG9nZXRoZXIgZm9yIGEgZ2FtZSBvZiBFdWNocmUgb3IgQnJpZGdlLiAKQW5kIHRoZSBtb3JlIHVuZXhwZWN0ZWQgdGhlIHJlc3VsdCwgdGhlIG1vcmUgc2tlcHRpY2FsIHJlcGxpY2F0aW9uIHRvIGRpc3Byb3ZlIGl0IChhbmQgZXZlbiBjYWxscyBvZiAiQnVsbHNoaXQhIikgaXQgZ2FybmVycy4gSnVzdCBsb29rIGF0IHdoZW4gRmxlaXNjaG1hbiBhbmQgUG9ucyBwdWJsaXNoZWQgb24gImNvbGQgZnVzaW9uIi4gCkNvbnRyYWN0IHRhbGtzIHN0YWxsZWQgb3ZlciBqb2Igc2VjdXJpdHkgYW5kIGxlZCB0byB0aGUgbG9uZ2VzdCBzdHJpa2UgaW4gMjUgeWVhcnMgYXQgdGhlIGZhY3RvcnksIGtub3duIGFzIENBTUksIHdoaWNoIG1ha2VzIHRoZSBwb3B1bGFyIEVxdWlub3ggc3BvcnQgdXRpbGl0eS4KSWYgeW91IGRvIGVsZWN0IHRvIHBsYXkgd2l0aCB3b29kIGNoaXBzLCBpdCBpcyBpbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGF0IHRoZXkgYXJlIG5vIGxvbmdlciB2ZXJ5IGVhc3kgdG8gZmluZC4gClRoZSBzZXR0aW5nL3ByZW1pc2UgaXMgYWxyaWdodCwgYnV0IG5vdGhpbmcgdGhhdCBoYXNuIGJlZW4gZG9uZSBiZWZvcmUgKGFnYWluLCBkZW1vbnNsYXlpbmcgYW5kIGFuIGFnZW5jeSkuLiAKRGFzIFZvbGsgaGF0IE1hZHVybyBiZWkgZGVyIGxldHp0ZW4gZGVtb2tyYXRpc2NoZW4gV2FobCBkYWZyIGFiZ2VzdHJhZnQuIApFdmVyeSBvbmxpbmUgZnJlZSBjYXNpbm8gdG91cm5hbWVudCBkZWNsYXJlcyB2YXJpb3VzIGNhdGVnb3JpZXMgb2YgcHJpemVzIGZvciB0aGVpciBwbGF5ZXJzIGxpa2UgdGhlIG1vc3QgYWN0aXZlIHBsYXllciwgb3IgdGhlIHBsYXllciB0byBwdXQgdGhlIG1vc3Qgc3Rha2VzIGFuZCBzbyBvbi4gCklzIHRoaXMgbW9yZSBvZiBhIHJlbGF4aW5nIHF1aWV0IHBsYWNlIG9yIGlzIHRoaXMgbW9yZSBmdW4gYW5kIG91dGdvaW5nIHBsYWNlPyBJIHRoaW5raW5nIGFib3V0IGJvb2tpbmcgdGhpcyBmb3IgbXkgYm95ZnJpZW5kcyBiaXJ0aGRheS4gV2UgZG8gbG92ZSBvdXIgcmVsYXhpbmcgdGltZXMgYnV0IHdlIGFsc28gbGlrZSB0byBnbyB0byByZXN0YXVyYW50cyBhbmQgZHJpbmsuIApUaGUgQk1KIGluIHBhcnRuZXJzaGlwIHdpdGggVGhlIEhhcnZhcmQgR2xvYmFsIEhlYWx0aCBJbnN0aXR1dGUgaGF2ZSBsYXVuY2hlZCBhIGNvbGxlY3Rpb24gb2YgYXJ0aWNsZXMgdGhhdCB3aWxsIGV4cGxvcmUgaG93IHRvIGFjaGlldmUgZWZmZWN0aXZlIFVuaXZlcnNhbCBIZWFsdGggQ292ZXJhZ2UgKFVIQykuIAoiSSB0aG91Z2h0IHRoYXQsIHF1aXRlIGZyYW5rbHksIHRoZSBNYXJjZWwgdGhpbmcgd2FzIGp1c3QgcHVyZSBoeXBlLiBXZSBuZWVkIG1vcmUgc3Vic3RhbmNlIGluIG91ciBpbmR1c3RyeSByaWdodCBub3cgdG8gYmVhdCBvZmYgYWxsIHRoZSBjb21wZXRpdGl2ZSBzZXRzIG91dCB0aGVyZS4gCkNoaW5hIFNvdXRoZXJuIGFuZCBCcml0aXNoIEFpcndheXMgYmVnaW4gdGhlIG1vcmUgaW50ZXJlc3RpbmcgbGl2ZXJpZXMgaW4gdGhpcyBnYWxsZXJ5LCBpbiBteSBvcGluaW9uLiBJIGxvdmUgYm90aCBvZiB0aGVtLCBhbmQgb2YgY291cnNlIEJBIGxvb2tzIHZlcnkgc21hcnQgYW5kIHRyYWRpdGlvbmFsLCB5ZXQgdGhlIHNvbWV3aGF0IGV4dHJhdmFnYW5jZSBvZiBDaGluYSBTb3V0aGVybiBpcyBhIHdlbGNvbWUgc3VycHJpc2UgZnJvbSB3aGF0IEkgY29uc2lkZXIgdG8gYmUgYSB2ZXJ5IHJlc2VydmVkIGFpcmxpbmUgbm9ybWFsbHkuIApPdXIgcHJvYmxlbSBpbiBNaW5kYW5hbyBpcyBjb21wbGV4LiAKT25saW5lIGdhbWluZyBpcyB0dXJuaW5nIHRoZSBmYXZvcml0ZSBzcG90IGZvciBtYW55IGludGVybmV0IGxvdmVycy4gVGhlIHJlYXNvbiBiZWhpbmQgaXRzIHN1Y2Nlc3MgcmF0aW8gaXMgY2hhbmNlcyBvZiB3aW5uaW5nIGh1Z2UgYW1vdW50IHdoaWxlIHNpdHRpbmcgYXQgaG9tZS4gTWFueSBwZW9wbGUgcGxheSBkaWZmZXJlbnQgZ2FtZXMgd2l0aCAuCkkgc3RvcHBlZCBkb2luZyB0aGlzIGEgd2hpbGUgYWdvLCBidXQgZm9yIGEgd2hpbGUgKG1heWJlIGEgZmV3IG1vbnRocykgSSBjaHVja2VkIG91dCBtYXliZSA1MCAxMDAgbXVncyB0aGF0IHBlb3BsZSBqdXN0IGxlZnQgaW4gb3VyIGNvbW11bmFsIGtpdGNoZW4gZm9yIG90aGVyIHBlb3BsZSB0byBjbGVhbi4gSSBkaWQgdGhpcyBiZWNhdXNlIHRoZXJlIGlzIGEgZ29kIGRhbW5lZCBkaXNod2FzaGVyIHJpZ2h0IG5leHQgdG8gdGhlIHNpbmsuIApQcm9mZXNzb3IgRG9rdG9yIE1lcmdudXMgV2Vyc3QKTmF0dXJhbGx5LCB0aGUgZmF1bHQgZm9yIFRydW1wcyBjYXRhc3Ryb3BoaWMgcGVyZm9ybWFuY2UgY2FuIGxpZSB3aXRoIHRoZSBHRU9UVVMgaGltc2VsZi4gSXQgbXVzdCwgdGhlcmVmb3JlLCBiZSB0aGUgcmVzdWx0IG9mIHBvd2VyZnVsLCBzaGFkb3d5IGZvcmNlcyB3b3JraW5nIGFnYWluc3QgaGltLiBUaGlzIGlzLCBpbiBmYWN0LCBwcmVjaXNlbHkgd2hhdCBlbmdlbmRlcmVkIHRoZSBRdWx0IGluIHRoZSBmaXJzdCBwbGFjZS4gClRoZSBkaWZmaWN1bHR5IGlzIHNvbWUgbGllcyB0aGV5IGNhbiB0ZWxsLiAKUGhyZW5vbG9neSB1c2VkIHRvIGJlIGNvbnNpZGVyZWQgYSBzY2llbmNlLiAKSXRhbHkgaGFzIGZpZnRoIGhpZ2hlc3QgcGVyIGNhcGl0YSBzcGVuZGluZyBvbiBnYW1ibGluZyBpbiB0aGUgd29ybGQKVGhlIGZvb3QgaXMgZmxleGVkLCB0aGlzIGZhc2NpYSBpcyBkaXJlY3RseSBpbiBsaW5lIGFuZCBwdWxsaW5nIG9uIHRoZSBBY2hpbGxlcyB0ZW5kb24gKGFuZCB2aWNlIHZlcnNhKSwgc28gZG9pbmcgdGhlIGNhbGYgc3RyZXRjaGVzIGFib3ZlIHdpbGwgYWxzbyBoZWxwIHN0cmV0Y2ggb3V0IHRoZSBwbGFudGFyIGZhc2NpYS4gCkRpc2FiaWxpdHkgYW5kIGRpc2FibGVkIHBlb3BsZSBhcmUgdGhlIHN1YmplY3Qgb2YgaGVyIGpva2VzLCBidXQgdGhleSBhcmVuIHRoZSBidXR0LiBJdCBhIHRob3VnaHRmdWwgYW5kIHdlbGwgaW50ZW50aW9uZWQgY29tZWR5IHRoYXQgYnJpbmdzIGRpc2FibGVkIHBlb3BsZSBpbiBhbmQgcmFpc2VzIHVzIHVwIHJhdGhlciB0aGFuIHB1c2hlcyB1cyBvdXQgYW5kIG1vY2tzIHVzLiAKV2VsbCwgd2UgaGF2ZSB0aGVzZSBhbWF6aW5nIGZyaWVuZHMgd2hvIGhhdmUgYSBERCAoZGVhciBkYXVnaHRlcikgYWJvdXQgdGhlIHNhbWUgYWdlIGFzIG91ciBvbGRlciBERC4gVGhleSBhcmUgdGhlIG9uZSBzZXQgb2YgZnJpZW5kcyB3aGVyZSBJIGFtIGdvb2QgZnJpZW5kcyB3aXRoIHRoZSB3aWZlLCBESCAoZGVhciBodXNiYW5kKSBpcyBnb29kIGZyaWVuZHMgd2l0aCB0aGUgaHVzYmFuZCwgYW5kIEREIChkZWFyIGRhdWdodGVyKSBpcyBnb29kIGZyaWVuZCdzIHdpdGggdGhlaXIgZGF1Z2h0ZXIuIFVuZm9ydHVuYXRlbHksIHRoZXkgbW92ZWQgYWJvdXQgMiBob3VycyBhd2F5IGEgY291cGxlIG9mIHllYXJzIGFnby4gV2Ugc3RpbGwgbWFuYWdlIHRvIHNlZSB0aGVtIGF0IGxlYXN0IHR3aWNlIGEgbW9udGggYmVjYXVzZSB0aGV5IGFyZSBnb29kIGZyaWVuZHMuClVzZSB0aGUgb2xkIGFjY291bnQsIHlvdSBnZXQgdGhlIGJlbmVmaXRzIG9mIHN0aWxsIGJlaW5nIGFibGUgdG8gdXNlIHRoZSBjbGFzc2ljIGNhcmRzIHlvdSBoYXZlLiBFaXRoZXIgcGxheSB3aWxkIG9yIGR1c3QgdGhlIGNhcmRzIGZyb20gb2xkZXIgc2V0cy4gQW5kIHNpbmNlIHdlIGFyZSBzb29uIGZhY2luZyBhIHJvdGF0aW9uIHdoaWNoIHdpbGwgY2hhbmdlIHN0YW5kYXJ0IG1vcmUgdGhlbiBhbnkgb3RoZXIgZXZlciBoYXMgdGhlIGNvbWluZyBtZXRhIHdpbGwgYmUgcmVhbGx5IHVua25vd24uCklmIHlvdSBhcmUgYSBwb2tlciBjaGlwIGNvbGxlY3RvciwgaXQgaXMgaW1wb3J0YW50IHRvIGxlYXJuIGhvdyB0byBpZGVudGlmeSBhdXRoZW50aWMgY2FzaW5vIHBva2VyIGNoaXBzLiBOb3Qga25vd2luZyB3aGF0IHRvIGxvb2sgZm9yIGFuZCBob3cgdG8gaWRlbnRpZnkgaXQgY2FuIHJlc3VsdCBpbiB5b3VyIGxvc2luZyBodW5kcmVkcywgZXZlbiB0aG91c2FuZHMgb2YgZG9sbGFycy4gVGhpcyBob3cgdG8gZ3VpZGUgaXMgaW50ZW5kZWQgYXMgYSBiYXNpYyBzb3VyY2Ugb2YgaW5mb3JtYXRpb24gb24gaG93IHlvdSBtYXkgYWNjb21wbGlzaCB0aGlzIHRhc2suLiAKV2UgY291bGQgdHJhZGUgcGxhY2VzIGZvciBhd2hpbGUgaWYgeW91IHdhbnQuIEkgaGF2ZSBmaXZlIGNhdHMsIHVuZW1wbG95ZWQsIGFuZCBJIGJpbmdlIGVhdC4gCg==|<---