--->|VGhlIGVudGVycHJpc2Ugd29ybGQgaXMgd2lkZSBvcGVuLCByaWNoIHdpdGggYXBwbGljYXRpb25zIGFuZCBzbyBmb3J0aC4uIApCb3RoIG9mIHlvdSBzaG91bGQgZ28gZm9yIENvdXBsZXMgb3IgTWFycmlhZ2UgQ291bnNlbGluZy4gQW5kIGhvbmVzdGx5LCBteSBESCBhbmQgSSBkaWQgcHJlbWFyaXRhbCBjb3Vuc2VsaW5nIGFuZCBpdCB3YXMgYW1hemluZy4gUmVhbGx5IGhlbHBlZCB1cyB0byBzdGVwIHVwIGFzIGluZGl2aWR1YWxzIG1ha2luZyBvdXIgb3duIG51Y2xlYXIgZmFtaWx5LiAKT3UgTW1lIFRvdXQgbGUgbW9uZGUuQ29uY2VybmFudCBsZSBkb3NhZ2UgZGVzIHZpdGFtaW5lcyBkdSBncm91cGUgQiBuZSBkcGFzc2FudCBwYXMgNyBtZyBkYW5zIGxlIGNhcyBkZSBsYSBCNSwgamUgdmV1eCBiaWVuIHF1J2lsIGV4aXN0ZSB1bmUgcmdsZW1lbnRhdGlvbiBsb2NhbGUgZXhjZXNzaXZlbWVudCBsaW1pdGF0aXZlIG1haXMgaWwgZmF1ZHJhaXQgdml0ZXIgZCdleGFncmVyLiBNYWlzIHVuZSByZ2xlbWVudGF0aW9uIGF1c3NpIGxpbWl0YXRpdmUgZXhpc3RlIHQgZWxsZSByZWxsZW1lbnQgPyBDZWxhIHJlc3RlICBwcm91dmVyIGV0ICBzdXBwb3NlciBxdWUgZGVzIGRvc2FnZXMgYXVzc2kgZnJhbmNoZW1lbnQgcmlkaWN1bGVzIHNvaWVudCByZWxsZW1lbnQgaW1wb3NzLCBkYW5zIGNlIGNhcyBpbCBuJ3kgYXVyYWl0IHF1J3VuZSBzb2x1dGlvbiA6IHMnYWJzdGVuaXIgZGUgY29tbWVyY2lhbGlzZXIgZGVzIHByb2R1aXRzIGF1c3NpIGZyYW5jaGVtZW50IGRjZXZhbnQuT24gbm90ZXJhIGNlcGVuZGFudCBxdWUgY29uZm9ybW1lbnQgIHNvbiBzb3VoYWl0IGRlIHByb3Bvc2VyIHVuIGNvbXBsbWVudCBjZW5zIHRvdXQgY291dnJpciwgVmVuZXNzb24gYSBpbmNsdXMgZGUgbCdhY2lkZSBhbHBoYSBsaXBvcXVlIGV0IGRlIGxhIGNvIGVuenltZSBRIDEwIGNlIHF1aSBuJ2VzdCBwYXMgZHUgdG91dCBoYWJpdHVlbCB0b3Vqb3VycyBwb3VyIGxlcyBtbWUgcmFpc29ucyBxdWUgY2l0ZXMgcGx1cyBoYXV0LCAgc2F2b2lyIHF1ZSBsYSBjbyBlbnp5bWUgUSAxMCBuJ2VzdCB2cmFpbWVudCBpbmNvbnRvdXJuYWJsZSBxdWUgZGFucyBjZXJ0YWlucyBjYXMgZGUgZmlndXJlLCBsZXMgcGF0aG9sb2dpZXMgY2FyZGlvIHZhc2N1bGFpcmVzIHBhciBleGVtcGxlIHF1YW5kIGxlcyBtdXNjbGVzIChldCBwYXMgc2V1bGVtZW50IGxlIG11c2NsZSBjYXJkaWFxdWUpIHJpc3F1ZSBkZSBwdGlyIGQndW5lIHN0YXRpbmUuIApZb3UgY2FuIGZvbGxvdyBtZSBvbiBUd2l0dGVyIGZvciBzcG9ydHMgaW5mb3JtYXRpb24gYW5kIGFuYWx5c2lzLCBhbmQgcHJvYmFibHkgYSBmZXcgbW9yZSB0aG91Z2h0cyBvbiB0aGUgZGlzYXN0ZXIgdGhhdCB3YXMgdGhlIHRyYWRlIGRlYWRsaW5lIGRlYWwgZm9yIENsYXJrc29uIGFuZCBOYW5jZS4KTXkgZmVsbG93IGJyb3RoZXJzIGNhbm5vdCByZWZ1dGUuIgpEb2N0b3JzIGhhdmUgc2FpZCBEYW5pZWwncyBjYW5jZXIgaGFkIGEgOTAgcGVyY2VudCBjaGFuY2Ugb2YgYmVpbmcgY3VyZWQgd2l0aCBjaGVtb3RoZXJhcHkgYW5kIHJhZGlhdGlvbi4gV2l0aG91dCB0aG9zZSB0cmVhdG1lbnRzLCBkb2N0b3JzIHNhaWQgaGlzIGNoYW5jZXMgb2Ygc3Vydml2YWwgYXJlIDUgcGVyY2VudC4gQ2hpbGQgcHJvdGVjdGlvbiB3b3JrZXJzIGFjY3VzZWQgRGFuaWVsJ3MgcGFyZW50cyBvZiBtZWRpY2FsIG5lZ2xlY3QsIGFuZCB3ZW50IHRvIGNvdXJ0IHNlZWtpbmcgY3VzdG9keS4KQWxzbyB0aGFuayB5b3UgZm9yIHlvdXIga2luZG5lc3MsIEkgZG9uJ3QgbWVhbiB0byBkaW1pbmlzaCBpdCBvciBzZWVtIHVuZ3JhdGVmdWwKUG91ciBsYSBkdXJlIGRlIGxhIHByb2JhdGlvbiBxdWkgYSBzdWl2aSBzYSBjb25kYW1uYXRpb24gZXQgcXVpIGEgcHJpcyBmaW4gY2V0IHQsIE1hcmMgUGVycm9uIG5lIGRldmFpdCBwYXMgY29tbXVuaXF1ZXIgYXZlYyBzYSBwcmNkZW50ZSB2aWN0aW1lIG5pIHNlIHJldHJvdXZlciBlbiBwcnNlbmNlIGRlIGpldW5lcyBkZSAxNiBhbnMgZXQgbW9pbnMuIElsdGFpdCBnYWxlbWVudCB0ZW51IGRlIHN1aXZyZSB1bmUgdGhyYXBpZSBwb3VyIHNhIGR2aWFuY2Ugc2V4dWVsbGUuCjcpIEFsbGVyZ3kgcHJldmVudGlvbiBieSB0aGUgYXZvaWRhbmNlIGFsbGVyZ2VucyBkb2VzIG5vdCB3b3JrIGJlY2F1c2UgYWxsZXJnZW5zIGFyZSBub3QgcmVzcG9uc2libGUgZm9yIHRoZSBpbmNyZWFzZSBpbiBhbGxlcmdpYyBwcm9wZW5zaXR5LgpUaGUgY3VzdG9tZXIgcGlja3MgdXAgdGhlIGl0ZW0gb2YgZGVzaXJlLCBwYXlzIGZvciBpdCBhbmQgd2Fsa3Mgb3V0IHRoZSBkb29yLiBJbiBtYWlsIG9yZGVyIGJ1c2luZXNzZXMgdGhlIGl0ZW0gaXMgcGFja2FnZWQgYW5kIG1haWxlZC4gQ29tcHV0ZXJzIGFyZSBhIGdvb2QgZXhhbXBsZSBvZiB0aGlzIHNvcnQgb2YgcHJvZHVjdC4gClBvc3RtZWRpYSB3YW50cyB0byBpbXByb3ZlIHlvdXIgcmVhZGluZyBleHBlcmllbmNlIGFzIHdlbGwgYXMgc2hhcmUgdGhlIGJlc3QgZGVhbHMgYW5kIHByb21vdGlvbnMgZnJvbSBvdXIgYWR2ZXJ0aXNlcnMgd2l0aCB5b3UuIFRoZSBpbmZvcm1hdGlvbiBiZWxvdyB3aWxsIGJlIHVzZWQgdG8gb3B0aW1pemUgdGhlIGNvbnRlbnQgYW5kIG1ha2UgYWRzIGFjcm9zcyB0aGUgbmV0d29yayBtb3JlIHJlbGV2YW50IHRvIHlvdS4gWW91IGNhbiBhbHdheXMgY2hhbmdlIHRoZSBpbmZvcm1hdGlvbiB5b3Ugc2hhcmUgd2l0aCB1cyBieSBlZGl0aW5nIHlvdXIgcHJvZmlsZS4KU3VibWl0IGxpbmtzIGFuZCBkaXNjdXNzaW9uIHBvc3RzIHRoYXQgYXJlIHdpdGhpbiB0aGUgY29udGV4dCBvZiB2aXJ0dWFsIHJlYWxpdHkgYW5kIG9mIGludGVyZXN0IHRvIHRoZSAvci9WaXZlIGNvbW11bml0eS4gQXMgd2VsbCBhcyB0aGUgZXhwZXJpZW5jZXMgb2ZmZXJlZCBieSBTdGVhbVZSLCBWYWx2ZSBhbmQgdGhlIEhUQyBWaXZlLCBtb3JlIGdlbmVyYWwgZGlzY3Vzc2lvbiBvZiB2aXJ0dWFsIHJlYWxpdHkgaW5jbHVkaW5nIG90aGVyIHBsYXRmb3JtcyBhbmQgaW5kdXN0cnkgbmV3cyBpcyByZWxldmFudCB0byB0aGlzIGNvbW11bml0eS4gCkV2ZW4gb24gdGhlIHNpbXBsZXN0IGxldmVsIG9mIHRoZSBjZWxsLCB3aGljaCBpcyB0aGUgRE5BIG1vbGVjdWxlIHRoYXQgZW5jb2RlcyBnZW5ldGljIGluZm9ybWF0aW9uIGFuZCBkaXJlY3RzIGNlbGx1bGFyIHByb2Nlc3NlcywgdGhlIGNlbGwgaXMgYWJsZSB0byByZWNvZ25pemUgaW5qdXJ5LCBtYWxmdW5jdGlvbnMsIG9yIGRhbWFnZWQgbWF0ZXJpYWwgYW5kIHJlcGFpciBpdC4KVGhlbiB0aGUgcmVtYWluZGVyLCBpIHNwaXJhbGVsZWQgb3V0d2FyZHMgaW4gYSAzIG1pbGUgcmFkaXVzIGZyb20gdGhlIGNob3NlbiBjYW1wc2l0ZSBhbmQgaW5zcGVjdGVkIGFsbCBjbGVhcmluZ3MgbmV4dCB0byByb2Fkcy4gVG9vayBtZSBhYm91dCAxMCBtaW51dGVzIHRvIGZpbmQgdGhhdCBzcG90LiBTdGlsbCwgdGhhdCBkb2VzbiBndWFyYW50ZWUgdGhhdCB0aGlzIGlzIHRoZSBzcG90LCBjb3VsZCBiZSBhIGR1bXAgb2Ygc29tZXRoaW5nIGVsc2Ugd2hpdGUgYW5kIHJlbGF0aXZlbHkgZ3JhbnVsYXIuCkxlZnQgdW50cmVhdGVkLCBpbmZlY3Rpb24gY2FuIGFsc28gYWZmZWN0IHRoZSBuYWlsIGJlZCBhbmQgbWlnaHQgZXZlbiBjYXVzZSB0aGUgbmF0dXJhbCBuYWlsIHRvIHNlcGFyYXRlIGZyb20gdGhlIHNraW4gdW5kZXJuZWF0aC4uIApJdCBub3QgImhldGVyb2dlbmVpdHkiIGl0IGEgcHJvZHVjdCBvZiB0aGUgYmFzZSBhbmQgc3VwZXJzdHJ1Y3R1cmUgcmVsYXRpb25zaGlwIHRoYXQgZm9yY2VzIHRoZSBsZXNzIHBvd2VyZnVsIHRvIGhhdmUgdGhlIHNhbWUgaW50ZXJlc3QgaW4gc2VpemluZyBiYWNrIHRoZWlyIG93biBwb3dlciwgYW5kIHNlbGYgYWN0dWFsaXppbmcuSSB0aGluayB5b3Ugc3RpbGwgYSBsaXR0bGUgY29uZnVzZWQuSSBub3QgdGFsa2luZyBhYm91dCBwb3NpdGl2ZSByaWdodHMsIEkgdGFsa2luZyBhYm91dCBwb3NpdGl2ZSBsaWJlcnR5LiAKV29ydGggbm90aW5nICAgSSB3ZW50IGJhY2sgYW5kIGxvb2tlZCBhdCBteSBsb25nZXN0IHJpZGUgKDExNCBtaWxlcykgYW5kIEkgbWFuYWdlZCBhIDE3LjIgbXBoIGF2ZXJhZ2UgZm9yIHRoYXQuIAooSWYgeW91IGhhdmUgQXQgY2VsbCBwaG9uZXMgaXQgd2lsbCBhbHNvIHN0cmVhbSBkYXRhIGZyZWUpLiAKQnJleGl0QnJleGl0IHZvdGVzIHdlZWsgZXhwbGFpbmVkOiBIb3cgdGhlIG5leHQgNyBkYXlzIGNvdWxkIGNoYW5nZSBVSydzIGhpc3RvcnlNUHMgd2lsbCBob2xkIGEgc3RyaW5nIG9mIHZvdGVzIG5leHQgd2VlayB0aGF0IHdpbGwgY2hhbmdlIHRoZSBmdXR1cmUgb2YgQnJpdGFpbiAgIGxlYWRpbmcgdG8gQnJleGl0LCBhIGRlbGF5LCBvciBldmVuIG5vIEJyZXhpdCBhdCBhbGwuIEhlcmUncyB5b3VyIGZvb2xwcm9vZiBndWlkZQpUaGUgY291bmNpbCBsYXRlc3QgcXVhcnRlcmx5IHJlcG9ydCBzYWlkIHByb2N1cmVtZW50IG9mIDEwIGdhbWluZyBtYWNoaW5lIGVudGl0bGVtZW50cyBoYXMgInNsb3dlZCBzaWduaWZpY2FudGx5IiB3aXRoIHNlZWtpbmcgb3V0IGV4aXN0aW5nIGVudGl0bGVtZW50cyAiZGlmZmljdWx0Ii4gClllYWgsIEkgZG9uIGJlbGlldmUgeW91LiBCbGl6emFyZCBpcyB0aGUgc2FtZSBjb21wYW55IHRoYXQgc3RpbGwgY29tcGxldGVseSBmaW5lIHdpdGggc211cmZzIG9uIHRoZSBPVyBsYWRkZXIgYW5kIG11bHRpYm94ZXJzIGluIFdvVyBiZWNhdXNlIGl0IG1lYW5zIG1vcmUgbW9uZXkgZm9yIHRoZW0uCjEyIGNhcnMgd2l0aCBzYW1lIG51bWJlcnNBcGFydCBmcm9tIHN0YWNrcyBvZiBjYXNoLCBjb3BzIGhhdmUgYWxzbyBzZWl6ZWQgNDUgY2FycyBkdXJpbmcgdHdvIHN1YnNlcXVlbnQgcmFpZHMuIE9mZmljaWFscyByZWNvdmVyZWQgNDEgY2FycyBmcm9tIFN1ZGFtYSByZXNvcnQgYW5kIDQgZnJvbSBLYWxnaSBob3VzZSBuZWFyIEd1amFyYXQgY29sbGVnZS4gCldoaWxlIG1vc3QgVGhhbmtzZ2l2aW5nIHRyYXZlbGVycyB3aWxsIGZpZ2h0IGZvciBvdmVyaGVhZCBiaW5zIGFuZCBnbyBob3VycyB3aXRob3V0IGEgc25hY2sgb3Igcm9vbSB0byBzdHJldGNoIHRoZWlyIGxlZ3MsIGxpZmUgaW4gZmlyc3QgY2xhc3MgaXMgc3RyZXNzIGZyZWUuIEl0IGFsd2F5cyBiZWVuIGEgc3BlY2lhbCBwbGFjZSBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgY3VydGFpbi4gCldoaWxlIGl0IHJlbWFpbnMgc3R1bm5lZCwgZW5nYWdlIHRoZSBvdGhlciBjb21wb25lbnRzIHdpdGggbWVsZWUgd2VhcG9ucyB0byByZW1vdmUgdGhlaXIgY29tYmluaW5nIHRlY2hub2xvZ3kuIApNeSBmaXJzdCB0d28gICB0aHJlZSBtb250aHMgb2YgcGxheWluZyBJIG5ldmVyIGdvdCBmdXJ0aGVyIHRoYW4gcmFuayAxMC4gCkkgcmVtb3ZlZCBsaW5rcyB0byBQYXRyZW9uIGZyb20gdGhlIHN0b3J5IChpbiB0aGUgc3VtbWFyeSwgYW5kIGluIHRoZSBtb3N0IHJlY2VudCBjaGFwdGVyKSwgYW5kIHJlc3BvbmRlZCB0byB0aGUgZSBtYWlsIHRoYXQgaGFkIGxhbmd1aXNoZWQgaW4gdGhlIGZvbGRlcjsgd2Ugc2VlIHdoYXQga2luZCBvZiB0dXJuYXJvdW5kIHRpbWUgdGhlcmUgaXMuLiAKSWYgdGhpcyBpcyB0aGVpciByYW5nZSBGbG9wemlsbGEgc2hvd3MgdXMgdGhhdCB0aGV5IGFyZSBvbmx5IGdvaW5nIHRvIGhpdCB0b3AgcGFpciBvciBiZXR0ZXIgb24gdGhlIGZsb3AgMTkuOCUgb2YgdGhlIHRpbWUuIApIb3cgVG8gTGVhcm4gdGhlIEJlc3QgTWFzc2FnZSBUZWNobmlxdWVzCklzIE1FUlMgQ2F1c2luZyBhIEZvcmVjbG9zdXJlIE5pZ2h0bWFyZQpUaGUgRmVycmFyaSBzcGlub2ZmIGNvdWxkIGdlbmVyYXRlIG1vcmUgdGhhbiAzIGJpbGxpb24gZXVyb3MgKCQzLjMgYmlsbGlvbikgZm9yIEZpYXQsIGluY2x1ZGluZyBwcm9jZWVkcyBmcm9tIHRoZSBJUE8gYW5kIGEgMi4yNSBiaWxsaW9uIGV1cm8gY2FzaCBwYXltZW50IGZyb20gRmVycmFyaS4gQWZ0ZXIgdGhhdCdzIGRvbmUsIHRoZSBjb21wYW55IHdpbGwgaGF2ZSBhIG1vcmUgc3RhYmxlIHZhbHVhdGlvbiB0byBkZXRlcm1pbmUgYSBwb3RlbnRpYWwgb2ZmZXIuIApTbWFsbCBQbGFuZSBTa2lkcyBPZmYgUnVud2F5IEF0IEtleSBXZXN0IEFpcnBvcnQgQSBzbWFsbCwgdHdpbiBlbmdpbmUsIHByaXZhdGUgYWlyY3JhZnQgZXhwZXJpZW5jZWQgZ2VhciBmYWlsdXJlIGFuZCBza2lkZGVkIG9mZiB0aGUgbm9ydGggc2lkZSBvZiB0aGUgcnVud2F5IHdoaWxlIGxhbmRpbmcgVHVlc2RheSBtb3JuaW5nIGF0IEtleSBXZXN0IEludGVybmF0aW9uYWwgQWlycG9ydC4gQ29hc3QgR3VhcmQgaW4gTWlhbWkgYWZ0ZXIgdGhlaXIgZmlzaGluZyBib2F0IGNhcHNpemVkIGFuZCBzYW5rIGh1bmRyZWRzIG9mIG1pbGVzIGZyb20gS2V5IFdlc3QuCkNhbGwgbWUgYSBmcmVha2luZyBjYXN1YWwgYm90IGlmIHlvdSB3aXNoLCBidXQgYXQgY3VycmVudCBzdGF0ZSBmb3J0bml0ZSBpcyBnZXR0aW5nIG1vcmUgZnJ1c3RyYXRpbmcgdG8gcGxheSByYXRoZXIgdGhhbiBlbnRlcnRhaW5pbmcgd2l0aCBldmVyeSBwYXRjaC4gClNvbWUgb2YgaXQgaXMgbW9kZWxsaW5nLCBzb21lIG9mIGl0IGlzIHRoZSBraWRzIG93biBlbW90aW9uYWwgcmVhY3Rpb24uLiAKTWVsbG9uIENvbGxpZSBhbmQgdGhlIEluZmluaXRlIFNhZG5lc3MsIGluIHBhcnRpY3VsYXIsIGlzIGEgZmFudGFzdGljIHBpZWNlIG9mIHNvbmljIGFydC4gClRoZSB3b3JrIHdlZWsgaXMgNSBkYXlzLiBIb3cgbWFueSBob3VycyB3aWxsIHlvdSBuZWVkIHRvIHdvcmsgZWFjaCBkYXkgaW4gb3JkZXIgdG8gbWVldCB0aGUgMjYgaG91ciByZXF1aXJlbWVudD8gQXNzdW1lIHRoYXQgeW91IG5lZWQgdG8gd29yayB0aGUgc2FtZSBudW1iZXIgb2YgaG91cnMgZWFjaCBkYXkuIiBBc2sgdGhlIHN0dWRlbnQgdG8gdGVsbCB5b3UgdGhlIGFuc3dlci4gClNvLCByZWFsbHksIGl0J3Mgbm8gc3VycHJpc2UgdGhhdCB0aGVyZSBhcmUgYWlycG9ydCB0aGVtZWQgY29uc3BpcmFjeSB0aGVvcmllcy4gV2hhdCBpcyBzdXJwcmlzaW5nLCBob3dldmVyLCBpcyB0aGF0IGFsbW9zdCBhbGwgb2YgdGhlbSBmb2N1cyBvbiBhIHNpbmdsZSBwbGFjZTogRGVudmVyIEludGVybmF0aW9uYWwgQWlycG9ydC4gCldoaWxlIGl0J3MgdW5kZXJzdGFuZGFibGUgdGhhdCB0aGUgbmV0d29ya3MgZG9uJ3Qgd2FudCBhbnlvbmUgb3V0c2lkZSBUVidzIHRyYW5zYWN0aW9uIHRyaWFuZ2xlIHRvIGhhdmUgYWNjZXNzIHRvIHRoZSBDMy9DNyBkYXRhLCB0aGUgYmxvYXRlZCBsaXZlIDMvbGl2ZSA3IHByb2dyYW0gcmF0aW5ncyBkaXN0cmlidXRlZCB0byB0aGUgcHJlc3MgYXJlIHdob2xseSBpcnJlbGV2YW50IHRvIGFkdmVydGlzZXJzLiBGb3IgZXhhbXBsZSwgd2hpbGUgbmV0d29yayBQUiB0b3V0ZWQgdGhlIDYyIHBlcmNlbnQgZGVtbyBsaWZ0IHRoZSBPY3QuIDMgZXBpc29kZSBvZiBOQkMncyAiQ2hpY2FnbyBGaXJlIiBlYXJuZWQgaW4gcGxheWJhY2sgKHRoZSBEaWNrIFdvbGYgZHJhbWEgZ3JldyBmcm9tIGEgMS4zIGluIGxpdmUgc2FtZSB0byBhIDIuMSBpbiBsaXZlIDcpLCB0aG9zZSBkZWxheWVkIHZpZXdzIGRpZG4ndCBoYXZlIG5lYXIgYXMgbXVjaCBpbXBhY3Qgb24gdGhlIGVwaXNvZGUncyBjb21tZXJjaWFsIHJhdGluZ3MuIFBlciBOaWVsc2VuLCB0aGF0IHBhcnRpY3VsYXIgaW5zdGFsbG1lbnQgb2YgIkNoaWNhZ28gRmlyZSIgb25seSBpbmNoZWQgdXAgdG8gYSAxLjQgaW4gQzcsIHdoaWNoIGFtb3VudHMgdG8gYW4gOCBwZXJjZW50IGdhaW4uIEluIG90aGVyIHdvcmRzLCBvZiB0aGUgMSBtaWxsaW9uIHBlb3BsZSBpbiB0aGUgZGVtbyB3aG8gY2F1Z2h0IHVwIHdpdGggdGhlIHNob3cgd2l0aGluIHNldmVuIGRheXMgb2YgaXRzIG9yaWdpbmFsIGFpcmRhdGUsIG9ubHkgMTI5LDAwMCBhY3R1YWxseSB3YXRjaGVkIHRoZSBhZHMgaW4gcGxheWJhY2suClRlbmNlbnQgdG8gc2h1dCBkb3duIHBva2VyIGdhbWUgYW1pZCBDaGluYQpUZWtlMzY3ICAzNiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClJlZCBCdWxsIHRlYW0gYm9zcyBDaHJpc3RpYW4gSG9ybmVyIHNtaWxlZCBpbiBIdW5nYXJ5IHRoYXQgTWFya28gc2l0cyBkb3duIGZvciAiYnJlYWtmYXN0LCBsdW5jaCBhbmQgZGlubmVyIiBvbiBldmVyeSBkYXkgb2YgYSBncmFuZCBwcml4IHdlZWtlbmQgd2l0aCBmZWxsb3cgQXVzdHJpYW4gTmlraSBMYXVkYS4KIlRoZXJlIGFyZSBmZXdlciBwZW9wbGUgaW4gb3VyIG9mZmljZSB3aGVuIHRoZXJlIGFyZSBwb3dkZXIgZGF5cy4gClByZXR0eSBhY3RpdmUgcm9vbSB3aXRoIGEgbG90IG9mIHRvdXJpc3RzIChlc3BlY2lhbGx5IGNyYXp5IG9uIFNhdHVyZGF5IG5pZ2h0IGFmdGVyIHNvbWUgTU1BIGZpZ2h0IG9yIHNvbWV0aGluZyBoYXBwZW5lZCBpbiB0aGUgaG90ZWwpIGJ1dCBJIGRpZCBub3RpY2UgYSBsb3Qgb2YgdGhlIHNhbWUgZ3V5cyBzaXBwaW5nIHdhdGVyIHBsYXlpbmcgdGhyb3VnaCB0aGUgZWFybHkgaG91cnMgZmVlZGluZyBvbiB0aGUgZmlzaC4gCkluIHRoZSBjYXNlIG9mIGEgTGFzIFZlZ2FzIGVzY29ydCBzZXJ2aWNlLCBhbiBlc2NvcnQgb3IgY2FsbCBnaXJsIG1heSBkZWNpZGUgdG8gb2ZmZXIgc2VydmljZXMgYXMgYSB3YXkgdG8gb2J0YWluIG1vcmUgbW9uZXkgZm9yIGEgam9iLiBBY2NvcmRpbmcgdG8gdGhlIENEQywgdGhlIGF2ZXJhZ2UgTGFzIFZlZ2FzIGVzY29ydCBzZXJ2aWNlIHdpbGwgY2hhcmdlIGJldHdlZW4gJDI1MCBhbmQgJDQ1MCBwZXIgaG91ci4gT2YgdGhpcywgdGhlIGNhbGwgZ2lybCBoZXJzZWxmIHdpbGwgb25seSBlYXJuIGEgc21hbGwgcGVyY2VudGFnZTsgc29tZSB3b3JrIHB1cmVseSBmb3IgdGlwcy4gVGhpcyBwYXkgc3RydWN0dXJlIG1ha2VzIGl0IGFwcGVhbGluZyB0byBvZmZlciBhZGRpdGlvbmFsIHNlcnZpY2VzIGluIGV4Y2hhbmdlIGZvciBoaWdoZXIgdGlwcy4gSXQgYWxzbyBtYWtlcyBpdCBlYXN5IGZvciBzZXggd29ya2VycyB0byBvZmZlciB0aGVzZSBzZXJ2aWNlcyB1bmRlciB0aGUgdGFibGUgd2l0aCBsaXR0bGUgcmlzayBvZiBiZWluZyBhcHByZWhlbmRlZC4KR2FkZ2V0cyBHaXptb3MgR2Fsb3JlIEF0IENFUyAyMDEzMjAxMyBDb25zdW1lciBFbGVjdHJvbmljcyBTaG93IEhpZ2hsaWdodHMgTmV3ZXN0IFRlY2hub2xvZ3lUaGUgTEcgTmV4dXM0IHNtYXJ0cGhvbmUgaXMgc2VlbiBhdCB0aGUgMjAxMyBJbnRlcm5hdGlvbmFsIENFUyBhdCB0aGUgTGFzIFZlZ2FzIENvbnZlbnRpb24gQ2VudGVyIG9uIEphbnVhcnkgOCwgMjAxMyBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gQ0VTLCB0aGUgd29ybGQncyBsYXJnZXN0IGFubnVhbCBjb25zdW1lciB0ZWNobm9sb2d5IHRyYWRlIHNob3csIHJ1bnMgdGhyb3VnaCBKYW51YXJ5IDExIGFuZCBpcyBleHBlY3RlZCB0byBmZWF0dXJlIDMsMTAwIGV4aGliaXRvcnMgc2hvd2luZyBvZmYgdGhlaXIgbGF0ZXN0IHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0byBhYm91dCAxNTAsMDAwIGF0dGVuZGVlcy4gKFBob3RvIGJ5IERhdmlkIEJlY2tlci9HZXR0eSBJbWFnZXMpLiAKSXQgd2h5IFdhbiBDaGFpIGlzIHpvbmVkIG91dCBsaWtlIHRoaXMuLiAKQW5kIEkgcmVtZW1iZXIgdGhlcmUgd2FzIGEgbG90IG9mIGNvbmZ1c2lvbiBhYm91dCB0aGUgbG9naXN0aWNzIG9mIGhvdyB0aGUgZHJlYW0gbGV2ZWxzIHdvcmtlZCwgYnV0IGZvciB0aGUgbW9zdCBwYXJ0IGl0IHdhcyBhIHBvc2l0aXZlIGRpc2N1c3Npb24gaW4gdGhlIGNvbnRleHQgb2YgcGVvcGxlIHdobyBlbmpveWVkIHRoZSBtb3ZpZSB3YW50aW5nIHRvIHVuZGVyc3RhbmQgaXQgYmV0dGVyLiBUaGUgcGxvdCB3YXMgY29udm9sdXRlZCBidXQgaXQgcHJvbW90ZWQgYSBsb3Qgb2YgZGlzY3Vzc2lvbiBhbmQgYSBidW5jaCBvZiBwb3AgY3VsdHVyZSByZWZlcmVuY2VzLiAKRG9uIGJlIGFmcmFpZCB0byBiZSBzaWxseS4gClNvIHdoZXJlIHRvIGxpYmVyYWxzIGFuZCBwcm9ncmVzc2l2ZXMgZml0IGluPyBUaGV5IGFyZSB0aGUgb3Bwb3NpdGUgc2lkZSB0aGF0IHNlZWtzIHRvIGxpbWl0IHN1ZmZlcmluZyBhcyBtdWNoIGFzIHBvc3NpYmxlIHdpdGhpbiB0aGUgc3lzdGVtIGJlY2F1c2UgdGhleSBjYW4gbm90IGhlbHAgYnV0IGVtcGF0aGl6ZSB3aXRoIG90aGVycyAgIGl0IHdoeSB0aGV5IG9uIHRoZSBsZWZ0IG9mIGEgY2VudGVyIHJpZ2h0IHN5c3RlbSBpbiB0aGUgZmlyc3QgcGxhY2UuIApJIHNwZWVkaWx5IHdlYXJpbmcgYSBicmEgYW5kIEkgbGVhdmluZyB0aGUgYXBhcnRtZW50Li4gCkkgYWxzbyBoYXZlIHByZXR0eSBleHRyZW1lIGJvdXRzIG9mIG1vdGl2YXRpb24gdXBzd2luZ3MvZG93bnN3aW5ncy4gU29tZXRpbWVzIEkgZ3JpbmQgb25saW5lIHJlYWxseSBoYXJkIGZvciBhIGZldyBtb250aHMgYW5kIG90aGVycyBJIGp1c3QgbGV0IG15c2VsZiBmYWxsIGJlaGluZCB0aGUgc2tpbGwgY3VydmUgYW5kIHBsYXkgbGl2ZSBmb3IgYSB3aGlsZSBiZWNhdXNlIGl0cyBlYXN5IG1vbmV5ICh0aG91Z2ggSSBlbmpveSBpdCBtdWNoIGxlc3MpLiAKUnVzc2lhIGlzIG9uZSBvZiB0aGUgbGVhZGluZyBjb3VudHJpZXMgaW4gSW50ZXJuZXQgY292ZXJhZ2UgYW5kIGNvc3RzLCB0aGUgbWFqb3JpdHkgb2YgdGhlIHBvcHVsYXRpb24gaGF2ZSBhY2Nlc3MgdG8gaXQgYW5kIHVzZSBpdCBhcyB0aGVpciBnbyB0byBzb3VyY2Ugb2YgaW5mb3JtYXRpb24uIApBbmQgdGFsayB0byBoZXIhIEZpdmUgeWVhciBvbGRzIGFyZSBzbWFydCBsaXR0bGUgYmVpbmdzLiBBc2sgaGVyIHdoYXQgd291bGQgaGVscCBoZXIgY2FsbSBkb3duIHdoZW4gc29tZXRoaW5nIHVwc2V0cyBoZXIgICBzaGUgZG9lc24gaGF2ZSB0byBwdXQgaW50byB3b3JkcyB3aGF0IHVwc2V0IGhlciwgYnV0IGtub3dpbmcgeW91IHR3byBoYXZlIGEgY29kZSBtaWdodCBoZWxwIGRpZmZ1c2UgdGhlIHNpdHVhdGlvbnMuIApHZXJtYW5zIHdpbGwgaG93ZXZlciBoYXZlIGhvbmVzdCBjb252ZXJzYXRpb25zLiBJZiB5b3UgYXNrIGEgR2VybWFuIGhvdyB0aGV5IGFyZSwgdGhleSB3aWxsIHRlbGwgeW91LiBXZSBqdXN0IGRvbid0IGNhcmUgbXVjaCBmb3IgbWVhbmluZ2xlc3MgZnJpZW5kbGluZXNzLgpSaWtrdSAoMzAwIERFRiwgMzAwIFNQUiwgNWsgSFAsIDMwJSBEQVJLKSBzYXZlZCBteSBhc3Mgd2l0aCBIeXBlciBOdWxsIEFsbCwgTEIgYW5kIFBvZCAxNTMgUCBTaGllbGQuIEhlciBMQiBjYW1lIGluIGhhbmR5IHdoZW4gaSBmb3Jnb3QgdG8gZGlzcGVsIGFuZCBoYWQgdG8gdGFrZSBhIGNyYXp5IG1hZCB0YW50YWNsZSByYW1wYWdlLgpBbSBJIGNyYXp5IHRvIGV2ZW4gY29uc2lkZXIgbGV0dGluZyBteSBodXNiYW5kIGdvIDIgaG91cnMgYXdheSB0aGlzIGxhdGUgaW4gdGhlIHByZWduYW5jeT8gSSBkbyBoYXZlIGEgbG9jYWwgZnJpZW5kIHdobyBpcyBhcm91bmQgb24gU2F0dXJkYXkgc28gaWYgdGhlIGdpcmxzIGFyZSBvdXQgdGhlcmUgd2l0aCBoaW0sIHNoZSBjb3VsZCBicmluZyBtZSB0byB0aGUgaG9zcGl0YWwgdW50aWwgaGUgY2FuIGdldCBiYWNrLiBJIGZlZWwgbGlrZSBJIHNob3VsZCBsZXQgaGltIGdvIGFuZCBoYXZlIGZ1biwgYnV0IEkgc3RpbGwgYW0gcHJldHR5IGNvbmNlcm5lZCB3aGVuIEkgdGhpbmsgdGhhdCBoZSBjb3VsZCBwb3NzaWJseSBtaXNzIHRoZSBiaXJ0aCBpZiB0aGluZ3MgaGFwcGVuZWQgZmFzdCwgd2hpY2ggaXMgYWx3YXlzIGEgcG9zc2libHkgd2l0aCB0aGUgdGhpcmQgY2hpbGQuIEFueWJvZHkgaGF2ZSBhbnkgdGhvdWdodHM/IEkgYW0gc28gdG9ybiEuIApUaGUgTkhMIGlzIHN0aWxsIGhpcyBwcmVmZXJyZWQgcm91dGU6IGlmIGhlIGRpZG4ndCBzcGVuZCB0aHJlZSBzZWFzb25zIGluIHRoZSBLSEwsIGhlIHdvdWxkIGhhdmUgY2F1Z2h0IHVwIHdpdGggR29yZGllIEhvd2UgaW4gdGhlIGdhbWVzIHBsYXllZCBzdGF0aXN0aWNzLiAKSSBtaWdodCBzdGlsbCBoYXZlIHNvbWUgZ3Jvd2luZyB0byBkby5kb0lrbm93ZGF0YnJ1dmEgIDE0MCBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnb0V2ZXJ5IG1vbnRoLCBJIHNsb3dseSBiZWVuIGFjY3VtdWxhdGluZyBrbm93bGVkZ2Ugb3ZlciBteSBzb3VsbWF0ZSwgZXZlciBzaW5jZSBteSB0aGlyZCB2aXNpb24sIEkgd3JvdGUgZG93biB0aGUgbW9zdCB2YWx1YWJsZSBpbmZvcm1hdGlvbiBlYWNoIHZpc2lvbiBJIGdvdHRlbi5TaGUgaGFzIGEgZnJpZW5kIG5hbWVkIEx1a2UsIGFuZCBhIGNvdXNpbiBjYWxsZWQgIkJCIiAobmlja25hbWU/KVNoZSBpbiBhIGZvb3RiYWxsIHRlYW0sIGhlciB1bmlmb3JtIGlzIGdyZWVuLkhlciBuYW1lIGlzIFJhY2hhZWwsIHNoZSBnZXRzIGdvb2QgZ3JhZGVzLCA5LzEwLiAKV2hlbiB0aGV5IGhpcmluZyBuZXcgcGVvcGxlIGZvciB0aGVpciBQYWxvIEFsdG8sIENhbGlmLiwgY29tcGFueSwgUHVsc2UsIHdoaWNoIG1ha2VzIGEgbmV3cyByZWFkaW5nIGFwcCBmb3IgbW9iaWxlIGRldmljZXMsIHRoZXkgY29uc2lkZXIgZXZhbHVhdGlvbnMgZnJvbSBwZWVycyBhbmQgc3VwZXJpb3JzIGFuZCBkbyBtdWx0aXBsZSByb3VuZHMgb2YgaW50ZXJ2aWV3cy4gClRoZSBnYW1lIGlzIHN1cGVyIGZ1biB0byBwbGF5LCB3aGljaCBpdCBjdXJyZW50bHkgaXMsIG5vIGFtb3VudCBvZiBjb3NtZXRpY3Mgb3IgdW5sb2NrYWJsZXMgd2lsbCBjaGFuZ2UgdGhhdCwgZXZlbiBpZiB0aGV5IG5ldmVyIGFkZCBhbnl0aGluZyBhdCBhbGwgZnJvbSByaWdodCBub3cuCiJIZSBrbm93cyBpdCB3YXMgd3JvbmcgYW5kIHRoZXJlIG1vc3QgbGlrZWx5IHdpbGwgYmUgY29uc2VxdWVuY2VzLCBEZXRlY3RpdmUgRGVicmEgTGV2eSB3cm90ZS4gaGUgZG9lcyBub3QgcmVncmV0IGJlaW5nIGluIGEgcmVsYXRpb25zaGlwIHdpdGggaGlzIHN0dWRlbnQuIgpOZXh0IGluIHRoZSBvcmRlciBvZiBwb2tlciBoYW5kcyBpcyBhIFN0cmFpZ2h0LiBBIFN0cmFpZ2h0IGlzIGEgc2VyaWVzIG9mIGZpdmUgY29uc2VjdXRpdmUgY2FyZHMgb2YgYW55IHN1aXQsIGZvciBleGFtcGxlIDkgMTAgSiBRIEsuIApUaGUgZmlyc3QgYmV0dGluZyByb3VuZCBiZWdpbnMgd2l0aCB0aGUgcGxheWVyIHRvIHRoZSBsZWZ0IG9mIHRoZSBiaWcgYmxpbmQgZWl0aGVyIHB1dHRpbmcgaW4gdHdvIGRvbGxhcnMgdG8gIkNhbGwiIHRoZSBibGluZCBiZXQsIG9yIHB1dHRpbmcgaW4gZm91ciBkb2xsYXJzIHRvICJyYWlzZSIgdGhlIGJpZyBibGluZCBvciBmb2xkaW5nIGhpcyBoYW5kLiAKSGUgc3ByYXkgcGFpbnRlZCAiRlVDSyBIQVRFIiBvbiB0aGUgc2lkZSBvZiBoaXMgaG91c2UgYnV0IHRoZSBjaXR5IG1hZGUgaGltIHBhaW50IG92ZXIgdGhlIHBhcnQuIFNpbXBzb24sIiBhbmQgInNvbGljaXRvcnMuIiBIZSBoYWQgYSBub29zZSBoYW5naW5nIG9uIHRoZSBob3VzZSBuZXh0IHRvIHRoZSBwb3JjaCB3aXRoIGEgc2lnbiB0aGF0IHNhaWQgc29tZXRoaW5nIGxpa2UsICJmb3Igc2FsZXNtZW4iIG9yICJmb3Igc29saWNpdG9ycy4iIE15IGJyb3RoZXIgZnJpZW5kIGRpZCBub3QgdHVybiBvdXQgb2theSA9KC4gCkl0IHdhcyBzdWNoIGEgcGxlYXN1cmUgdG8gdXMgdG8gcmVhZCBhbGwgb2YgeW91ciBjb21tZW50cyBhbmQgdG8ga25vdyB0aGF0IHlvdSBoYWQgYW4gaW5jcmVkaWJsZSB2aXNpdCB3aXRoIHVzLiAKQW5kIGhlcmUgaXMgdGhlIHJlYXNvbiB0aGlzIHN0b3J5IGlzIGFib3V0IEppbS4gSGUgd2VudCByaWdodCBvdmVyIHRoZXJlIGFuZCBvcGVuZWQgb25lIG9mIHRob3NlIGRvb3JzLCBwdWxsZWQgb3V0IHRoZSBndXJuZXksIGFuZCBsYWlkIGRvd24gb24gaXQuIApJcyB0aGVyZSBhIGNoZWF0IGZvciBNeVNwYWNlIFRleGFzIGhvbGRlbSBwb2tlciBmb3IgZnJlZSBjaGlwcwogNyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29Zb3UgcmlnaHQsIGJ1dCBpZiB0aGF0IGlzIHRoZSBjYXNlIHRoZW4gdGhlIGZhY3QgdGhhdCBzdWNoIGEgcGVyc29uIHJlbWFpbnMgaW4gYSBDaHVyY2ggdGhhdCBvcmRhaW5zIHBlb3BsZSB0aGV5IHRoaW5rIGFyZSBpbGxlZ2l0aW1hdGUgaXMgaW4gaXRzZWxmIGluY29oZXJlbnQuIApJIGEgY29tcHV0ZXIgZ3V5LCBrbm93IGphY2sgc2hpdCBhYm91dCBjYXJzLCBhbmQgSSBhbSBydW5uaW5nIGEgMTk4MCBEb2dlIEFzcGVuIGp1c3QgZmluZS4gUHJvcGVyIG1haW50ZW5hbmNlIGlzIGVhc3ksIGFuZCBub3QgZXhwZW5zaXZlLkkgY2FuIGdpdmUgYW55IHNvbGlkIGV4YW1wbGVzLCBidXQgbG9vayBmb3Igc2lkZSBieSBzaWRlcyBvZiBwcm9taW5lbnQgdGV4dHMuIEl0IG1heSBoZWxwIGltcHJvdmUgeW91ciB2b2NhYnVsYXJ5IHNvbWUuIApIaWVyb25kZXIgdmluZHQgdSBkZSBTVEFSUlQgIGFuYWx5c2VzIGRpZSBpayBnZW1hYWt0IGhlYiBuYWFyIGFhbmxlaWRpbmcgdmFuIHRvZXRzZW4sIHByb2Nlc3Nlbiwgc3RhZ2VzIGVuIG9wZHJhY2h0ZW4uIEVsa2UgU1RBUlJUIGFuYWx5c2UgaXMgd2VlciBnZWtvcHBlbGQgYWFuIGVlbiBjb21wZXRlbnRpZS4gRGUgY29tcGV0ZW50aWVzIHZvcm1lbiBzYW1lbiBoZXQgb3ZlcmtvZXBlbGVuZGUgY29tcGV0ZW50aWUgZ2ViaWVkLiBEZXplIFNUQVJSVCBhbmFseXNlcyB3b3JkZW4gb25kZXJzdGV1bmQgZG9vciBiaWpiZWhvcmVuZCBiZXdpanMuIERlemUgYmV3aWpzc3R1a2tlbiBsb3BlbiB1aXRlZW4gdmFuIHRvZXRzY2lqZmVyIHRvdCBwZXJzb29ubGlqa2UgZXZhbHVhdGllIGRvb3IgbWVkZXN0dWRlbnRlbi4gSGV0IGJld2lqcyBrYW4gdmVyZ3Jvb3Qgd29yZGVuIGRvb3IgZXIgb3AgdGUga2xpa2tlbi4gT3AgZGV6ZSBwYWdpbmEgaXMgb29rIG5vZyBlZW4gcGVyc29vbmxpamtlIGV2YWx1YXRpZSB0ZSB2aW5kZW4gb210cmVudCBoZXQgYmVoYWFsZGUgbml2ZWF1LiBUb3Qgc2xvdCB3b3JkdCBkZXplIHBhZ2luYSBhZmdlc2xvdGVuIG1ldCBlZW4gb3ZlcnppY2h0IHZhbiBtaWpuIHN0ZXJrZSBlbiB6d2Fra2UgcHVudGVuIGJldHJlZnQgaGV0IGNvbXBldGVudGllZ2ViaWVkIGVuIGhldCBwZXJzb29ubGlqa2UgYWFucGFrcGxhbiBvbSBkZXplIHp3YWtrZSBwdW50ZW4gdGUgdmVyYmV0ZXJlbi4KQXMgdGhhdCBmb29kIGhhbGwgZnJvbSBPaGlvJ3MgRGVyaXZlZCBEZXZlbG9wbWVudCBHcm91cCBoZWFkcyBmb3IgRm91cnRoIFN0cmVldCBhbmQgRmlmdGggQXZlbnVlIE5vcnRoLCBhbm90aGVyIG91dCBvZiBzdGF0ZSBvcGVyYXRpb24gaGFzIGFubm91bmNlZCBpdCdzIGV5ZWluZyBNaW5uZWFwb2xpcycgTm9ydGggTG9vcC4KRGlmZmVyZW50IHNpdGVzIG9mZmVyIGRpZmZlcmVudCBzaWRlIGdhbWVzLiBUaGUgcGxheWVyIGNhbiBhbHNvIG9wdCB0byBwbGF5IGRpZmZlcmVudCBiaW5nbyBnYW1lcywgaWYgdGhleSBhcmUgb2ZmZXJlZCBhdCBoZXIgcGxheWluZyBzaXRlLiAKTGVzIG1vdHMgZm9udCB2b3lhZ2VyLiBVbiBwcmVtaWVyIG91dnJhZ2UgZW1tZW5haXQgc2VzIGxlY3RldXJzIGR1IGN0IGRlIGxhIGN1bHR1cmUgaGVsbG5pc3RpcXVlIGV0IGRlcyBtb3RzIGdyZWNzIGRlIGxhIEJpYmxlIGF5YW50IHRyYXZlcnMgbGVzIHRyYWR1Y3Rpb25zIGp1c3F1J2F1IGZyYW5haXMuIFZvaWNpIG1haW50ZW5hbnQgdW5lIHNyaWUgZGUgbW90cyBxdWkgbm91cyByYW1uZW50ICBsJ2hicmV1LCBtYWlzIGF1c3NpICB0b3V0ZSBsYSBkaXZlcnNpdCBkZXMgbGFuZ3VlcyBkdSBQcm9jaGUgT3JpZW50IGFuY2llbi4gTCdoYnJldSBiaWJsaXF1ZSBuJ2VzdCBuaSB1biBwb2ludCBkJ29yaWdpbmUgcHJlbWlyZSBuaSB1biBwb2ludCBkJ2Fycml2ZSB1bHRpbWUuIElsIGFwcGFydGllbnQgYXUgZ3JvdXBlIGRlcyBsYW5ndWVzIHNtaXRpcXVlcyBxdSdpbCBjdG9pZSwgcmVqb2ludCwgcGFyIGxlc3F1ZWxsZXMgaWwgc2UgbGFpc3NlIHRyYXZlcnNlciwgb3UgcXUnaWwgcmV0cmF2YWlsbGUuIExlIHJjaXQgdGlvbG9naXF1ZSBkZSBHZW5zZSAxMCBmYWl0IGRlIGNlcyBsYW5ndWVzIGwnZXhwcmVzc2lvbiBkJ3VuZSBicmFuY2hlIGRlIGxhIGZhbWlsbGUgZGUgTm8sIGxpZSAgc29uIGZpbHMgU2VtLCBkb250IGxlIHBybm9tIHNpZ25pZmllIGF1c3Npbm9tICEgRmFpcmUgZCd1bmUgbGFuZ3VlIHVuIGhyaXRhZ2UgZmFtaWxpYWwgcXUnb24gcGFydGFnZSBhdmVjIGQnYXV0cmVzLCBldCBxdWkgZXN0IHRyYW5zZm9ybSBwYXIgY2hhcXVlIGdyb3VwZSBkZSBjZXR0ZSBmYW1pbGxlLCBjJ2VzdCBkaXJlIGF1c3NpIGNvbWJpZW4gb24gcGV1dCB5IHRyb3V2ZXIgZGUgY3JvaXNlbWVudHMsIGQnaW52ZW50aW9ucywgZGUgcHJveGltaXRzIGV0IGRlIGRpZmZyZW5jZXMgZW50cmUgb3VnYXJpdGlxdWUsIGFyYW1lbiwgYWtrYWRpZW4sIGFzc3lyaWVuLCBiYWJ5bG9uaWVuLCBhbW9ycml0ZSwgYXJhYmUsIHBobmljaWVuLCBoYnJldSwgbW9hYml0ZS4KSXQgd2FzIGp1c3Qgb25lIG9mIG1hbnkgcXVlc3Rpb25zIHRoZSBmb3VuZGF0aW9uIGhhcyBuZXZlciBhbnN3ZXJlZC4gT3ZlciB0aGUgcGFzdCAyMCB5ZWFycywgdGhlIGNyaWNrZXRpbmcgZ3JlYXQgaGFzIHJvdXRpbmVseSBiZWVuIHRoZSBzdWJqZWN0IG9mIHNjYW5kYWwgYW5kIHB1YmxpYyBvcHByb2JyaXVtIGJ1dCBoaXMgcGVyc29uYWwgYnJhbmQgaGFzIGFsd2F5cyB3aXRoc3Rvb2QgdGhlIGNvbnRyb3ZlcnN5LiBBIDEyIG1vbnRoIHN1c3BlbnNpb24gZnJvbSBwcm9mZXNzaW9uYWwgY3JpY2tldCBmb3IgdGFraW5nIGEgYmFubmVkIGRydWcsIGEgZmluZSBmb3IgYWNjZXB0aW5nIG1vbmV5IGZyb20gYSBib29raWUgaW4gZXhjaGFuZ2UgZm9yIGluZm9ybWF0aW9uLCB0aGUgc2V4dGluZyBzY2FuZGFscyAgIG5vbmUgb2YgaXQgaGFzIHBlcm1hbmVudGx5IHRhcm5pc2hlZCBoaXMgaW1hZ2UgYXMgQXVzdHJhbGlhIGJlc3Qga25vd24gbGFycmlraW4uIApWaXRhbWluIEQgYXMgYW4gRWFybHkgUHJlZGljdG9yIG9mIE11bHRpcGxlIFNjbGVyb3NpcyBBY3Rpdml0eSBhbmQgUHJvZ3Jlc3Npb24KQ2V0dGUgZmluIGQnYW5uZSwgbm91cyBzb21tZXMgcGFydGlzIChlbmNvcmUgISkgYXUgSmFwb24uIApUaGlzIHBsYW5ldCB3YXMgY2hvc2VuIHNwZWNpZmljYWxseSBiZWNhdXNlIGEgcmVhZHkgYmFrZWQsIGh1bWFuIGhhYml0YWJsZSB3b3JsZCB3YXMgYSBtdWNoIG1vcmUgYXR0cmFjdGl2ZSBwcm9zcGVjdCB0byBjb21tZXJjaWFsIGFuZCBuYXRpb25hbCBzZXR0bGVtZW50IHByb2plY3RzLCBhbmQgaW4gdGhlIGVhcmxpZXN0IGVyYSBvZiBvZmZ3b3JsZCBzZXR0bGVtZW50IGV2ZW4gcGFydGlhbCB0ZXJyYWZvcm1pbmcgd2FzIGEgc29tZXdoYXQgbGFib3Jpb3VzIGFuZCBleHBlbnNpdmUgcHJvc3BlY3Qgd2hlbiBjb21wYXJlZCB3aXRoIHRoZSBwcmVzc2luZyBuZWVkIHRvIGZpbmQgaHVtYW4gYmVpbmdzIGhvbWVzLi4gClJpZ2h0IHRoZXJlIHdpdGggeW91LiBQbHVzIEkgZG8gYSBsb3Qgb2Ygd2lsZGxpZmUgcmVoYWIgaW4gbXkgc3RhdGUgdGhyb3VnaCB0aGUgRE5SLiBKdXN0IGJlY2F1c2UgaXQgbG9va3Mgcm91Z2ggYW5kIHRoZSBhbmltYWwgaXMgdGVtcG9yYXJpbHkgY29tcHJvbWlzZWQsIGRvZXNuJ3QgbWVhbiB0aGUgYW5pbWFsIGlzIHN1ZmZlcmluZy4gClRoaXMgaGFzIGJlZW4gdGhlIGJlc3Qgc2VsbGluZyBEVkQgZnJvbSB0aGUgcG9rZXIgcHJvIFBoaWwgR29yZG9uLiAKQiBndWVzdHMgdmFsdWUgYXV0aGVudGljIGV4cGVyaWVuY2VzLCBidXQgdGhleSBsb29raW5nIGZvciBldmVuIG1vcmUuIFRoaXMgTW90aGVyIERheSwgYSBoYW5kZnVsIG9mIHBsYWNlcyBhcmUgYW1vbmcgQW1lcmljYSBCIGZpdCBmb3IgYSBxdWVlbiB3aHkuLiAKSW4gSGFza2VsbCAod2l0aCBhIG5vbiBhbmNpZW50IEdIQykgbWFueSByZWN1cnNpdmUgZnVuY3Rpb25zIHJ1biB3aXRob3V0IHVzaW5nIHVwIGluY3JlYXNpbmcgc3RhY2ssIGVpdGhlciBieSB0YWlsIGNhbGwgb3B0aW1pemF0aW9uIG9yIGJ5IGxhemluZXNzLiAKVGVsbGluZyBhIHlvdW5nIGtpZCB0aGF0IHRoZXkgc2hvdWxkIG5ldmVyIGJlIHNhZCBpcyBqdXN0IHdyb25nIHRob3VnaC4gQXVicmV5IGlzIGNsZWFybHkgbWF0dXJlIGVub3VnaCB0byBhY2NlcHQgdGhhdCBiYWQgdGhpbmdzIGhhcHBlbiwgYW5kIENoZWxzZWEgaXMgZG9pbmcgaGVyIGJlc3QgYXQgaGVscGluZyBoZXIgcHJvY2VzcyBlbW90aW9ucy4gCkhvd2V2ZXIgSSBkb24gd2FudCB0byBzdHVmZiBteSBib2R5L2tpZG5leXMuQ3VyaW91cyBpZiBpdCBpbmV2aXRhYmxlIG9yIGlmIHRoZXJlIGEgd2F5IGZvciBhIHRhbGwgZ3V5IHRvIGZpbGwgb3V0IGFuZCBzdGlsbCBrZWVwIGdvb2QgQlAgbGV2ZWxzLiAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSByaWRlIG15IHN0YXRpb25hcnkgYmlrZSBmb3IgMTAgMTUgbWluIDEgMnggYSBkYXkgYXQgYSBzdGVhZHkgc3BlZWQuIEp1c3QgZW5vdWdoIHRvIGdldCB0aGUgaGVhcnQgcHVtcGluZyBhIGJpdC4gCkl0IHdhcyBhbG1vc3QgbGlrZSBJIGRpZG4ndCByZW1lbWJlciBpdCBsaWtlIHRoYXQgd2hlbiB3ZSB3ZXJlIGdyb3dpbmcgdXAuIApJZiB5b3UgS05PVyB5b3Ugd2FudCB0byBkbyBjb25zdWx0aW5nLCBiZWluZyBpbiB0aGUgYiBzY2hvb2wgaXMgbGFyZ2VseSBpcnJlbGV2YW50LiBUaGUgdG9wIGZpcm1zIHJlYWxseSBkb24gY2FyZSBhcyBsb25nIGFzIHlvdSBjcnVzaCBjYXNlIGludGVydmlld3MgYXJlIHBlcnNvbmFibGUsIGFuZCBoYXZlIGEgaGlnaCBncGEuIElmIHlvdSBhcmUgY29uZmlkZW50IGFuZCBjYW4gZG8gdGhpcyB0eXBlIG9mIGluZGVwZW5kZW50IHJlc2VhcmNoIG9uIHlvdXIgb3duIHdpdGhvdXQgYiBzY2hvb2wgZW5jb3VyYWdlbWVudCwgbWFqb3IgaW4gc29tZXRoaW5nIHlvdSBhY3R1YWxseSB0aGluayBpcyBpbnRlcmVzdGluZy4gT3RoZXJ3aXNlLCB0aGUgY2FyZWVyIHNlcnZpY2VzIGFuZCBzdWNoIHdpbGwgYmUgYSBiaWcgYXNzZXQgYnV0IHRoZSBhY3R1YWwgbWFqb3Igd2lsbCBub3QgaGVscCB5b3UgbGFuZCBhIGNvbnN1bHRpbmcgZ2lnIG92ZXIgYW5vdGhlciBjb2xsZWdlIG1ham9yLgpUaGUgcmVkIGJsb29kZWQgQW1lcmljYW4gdmlldyBvZiB0aGUgTmF0aXZlIEFtZXJpY2FucyBpcyBvdXRsYW5kaXNobHkgYW5kIGRhbmdlcm91c2x5IHNrZXdlZCB0byB0aGUgcG9pbnQgb2YgcHJvcGFnYW5kYS4gTmF0aXZlIEFtZXJpY2FucyB3ZXJlIGEgdmVyeSBwZWFjZWZ1bCBzb2NpZXR5OyBzaGFyaW5nIGV2ZXJ5dGhpbmcgZnJvbSB0aGVpciB3ZWFsdGggYW5kIGZvcnR1bmVzIHRvIHRoZWlyIGxvdmVycy4gVGhlaXIgZm9ybSBvZiBwdW5pc2htZW50IHdhcyBlaXRoZXIgZXhpbGUgb3IgYmFuaXNobWVudCBmcm9tIHRoZWlyIGNvbW11bml0aWVzLiAKQXQgbGVhc3QgQ09BIG5vdyBoYXMgYSBkdWUgcHJvY2VzcyB2aW9sYXRpb24gdGhleSBjYW4gc2luayB0aGVpciB0ZWV0aCBpbnRvIHRoYXQgaGFzIGEgcGh5c2ljYWwgYmFzaXMgZnJvbSB0aGUgYWN0dWFsIHdyb25nIGRvaW5nIGJ5IHRoZSBzdGF0ZSBieSB0aGUgc3RhdGUgb3duIGFkbWlzc2lvbiwgZXZlbiBpZiB0aGV5IGRpZG4gYm90aGVyIHRvIHRlbGwgdGhlIGFjY3VzZWQgYXQgdGhlIHRpbWUuCk9mIGNvdXJzZSB0aGV5IHdlcmUgaGFyZCBwcmVzc2VkIHRvIGJlIGNvbnZpbmNlZCBiZSBoZSBhc3N1cmVkIHRoZW0gdGhhdCBTZXQgd2FzIGhlcmUgdG8gaGVscC4gTm8gbWF0dGVyIGhvdyBjb3JzZSBoZSB3YXMuLiAKV29ya2VkIGZvciBtZSBqdXN0IGhhZCBhIGZ1c2hpb24gb24gYzUgYzYuIEhvcGUgdGhpcyBoZWxwcy4gCkEgZmV3IHRpbWVzIEkgYWxzbyBoZWFyZCBoaW0gc2F5IHRoYXQgdGhlcmUgdGhpbmdzIGhlIGRvZXNuIGFncmVlIHdpdGggYnV0IHlvdSBqdXN0IGNhbiB0YWtlIGF3YXkgcmlnaHRzIGJhc2VkIG9uIGZlZWxpbmdzLCB0aGluZ3MgbGlrZSB0aGF0LiAKUGFraXN0YW4ncyBwYXJsaWFtZW50YXJ5IGRlbW9jcmFjeSB3YXMgY29uc3RydWN0ZWQgYXJvdW5kIGEgQ29uc3RpdHV0aW9uIHRoYXQgd2FzIGNvbnNpc3RlbnQgd2l0aCB0aGUgY29uZmlndXJhdGlvbiBvZiBhIEJyaXRpc2ggcG9zdCBjb2xvbmlhbCBzdHJ1Y3R1cmUuIFRoZSBwcmVzaWRlbnQsIGluIHRoaXMgc2NoZW1lIGlzIGEgc3RhdGVtZW50IG9mIHRoZSBmZWRlcmF0aW9uLCBhbmQgaXMgd2hvbGx5IHN5bWJvbGljLgpUaGVyZWZvcmUsIHNheWluZyAiWWVzIiB0byB0aGUgZGVtYW5kcyBvZiB0aGUgQ29tbWlzc2lvbiBpcyBlbGVjdG9yYWwgc3VpY2lkZSBmb3IgYW55b25lIGJ1dCB0aGUgR3JlZW5zICh3aG8gYXJlIG5vdCBwcm9iYWJseSBtYWtpbmcgaXQgb3ZlciB0aGUgNSBwZXIgY2VudCBsaW1pdCBhbnl3YXkpLiBUaGUgbG9jYWwgcG9saXRpY2lhbnMga25vdyB0aGlzIGFuZCB3aWxsIGFjdCBhY2NvcmRpbmdseS4KTG93ZXJlZCBpbnN1bGluIHNlbnNpdGl2aXR5IGNhbiB0aGVyZWZvcmUgJ3N0YXJ2ZScgdGhlIGNlbGxzIG9mIGVzc2VudGlhbCBudXRyaWVudHMuClRoZSBzdGF0ZSBiYXIgc29jaWV0eSBkb2VzIHJlZmVycmFscy4gWW91IGFyZSBhbiB1bmFybWVkIG1hbiBpbiBhbiBhcnRpbGxlcnkgZHVlbCwgYXNraW5nIHdoZXRoZXIgYW4gdW1icmVsbGEgaXMgdGhlIHJpZ2h0IHNvbHV0aW9uLiBHaXZlbiBob3cgc2VyaW91c2x5IENhbGlmb3JuaWEgdGFrZXMgcmVzdHJhaW5pbmcgb3JkZXJzIGdlbmVyYWxseSwgSSB3b3VsZCBub3QgYWdyZWUgdG8gYW55dGhpbmcgd2l0aG91dCBoYXZpbmcgeW91ciBvd24gYXR0b3JuZXkgbG9vayBhdCBpdC4gSWYgeW91IGNhbm5vdCBwb3NzaWJseSBhZmZvcmQgYW4gYXR0b3JuZXksIGRvbiB0YWxrIHRvIG9wcG9zaW5nIGNvdW5zZWw7IGlmIHlvdSBkbyBoYXZlIGFuIGF0dG9ybmV5LCBvcHBvc2luZyBjb3Vuc2VsIGlzIHJlcXVpcmVkIG5vdCB0byB0YWxrIHRvIHlvdS4KVGhlIGNsaW1hdGUgaW4gdGhlIHJlbGF0aW9uc2hpcCBzdWJzIGFyZSBnZW5lcmFsbHkgYW50aSBtZW4gYW5kIHRoZXkgdGVuZCB0byBoYXZlIHJlYWwgZ2VuZGVyIGJpYXNlcyAobGlrZSB0aGUgZ3V5IHNheWluZyB0aGF0IGl0J3MganVzdGlmaWVkIGZvciB3b21lbiB0byBjaGVhdCBpZiB0aGVpciBodXNiYW5kcyBkb24ndCBoYXZlIHNleCB3aXRoIHRoZW0pLCBzbyB0aGV5IHdpbGwgbGF0Y2ggb24gdG8gYW55dGhpbmcgdGhleSBjYW4gdG8gYmVyYXRlIHlvdSB3aXRoIHJhdGhlciB0aGFuIGZvY3VzIG9uIGdpdmluZyByZWFsIGFkdmljZS4gClVuZCBpY2ggaGFiZSBlaW5lbiByaWVzaWdlbiBSZXNwZWt0IGRhdm9yLCBkYXNzIGljaCBvbmxpbmUgc2NodGlnIHdlcmRlbiBrbm50ZS4uIApJJ20gdGFsa2luZyBhYm91dCBUSElTIENBUiEiIFdlbGwsIEknbSBzb3JyeSBJIHdhbnRlZCB0byB0YWxrIGFib3V0IHNvbWV0aGluZyBlbHNlIG5vdz8uIApCb3RoIGNob2ljZXMsIHRvIHJhdGlmeSBhbmQgbm90IHRvIHJhdGlmeSwgd2VyZSBncm9zcyBhbmQgd291bGQgaGF2ZSBuZWdhdGl2ZWx5IGFmZmVjdGVkIG91ciBjb21tdW5pdHkuIElmIHdlIGNvbnRpbnVlZCwgYSB3aG9sZSBvdGhlciBzZXQgb2YgcGVvcGxlIHdvdWxkIGhhdGUgdXMuIE9uY2UgYWdhaW4sIHRlYWNoZXJzIGNhbiB3aW4gbm8gbWF0dGVyIHdoYXQgdGhleSBkby4gSXQgaGFzIHB1dCB0aGUgZW50aXJlIGRpc3RyaWN0IGluIGFuIHVuc3VzdGFpbmFibGUgYmluZC4KWW91IHdhbnQgb25lIHRoYXQgaXMgYWxzbyBlYXN5IHRvIGNhcnJ5LiAKV2hpbGUgTWF5c29uJ3MgbmFtZSBpcyB0aGUgb25seSBvbmUgb24gdGhlIGFsYnVtIGNvdmVyLCBhbmQgYXMgd2lkZSByYW5naW5nIGFzIGhpcyB0YWxlbnRzIGFyZSwgaXQgdG9vayBhbiBhcnJheSBvZiBjb2xsYWJvcmF0b3JzIHRvIGZ1bGx5IGJyaW5nIGl0IHRvIGxpZmUsIGluY2x1ZGluZyBwcm9kdWNlcnMgQmlnIENhdHMgYW5kIEVyaWMgQmxvbXF1aXN0LiBXaXRoIEFieSBXb2xmLCBUZWQgT2xzZW4sIGFuZCBUaGVvIExhbmdhc29uLiAyMSsuIApXaWxsQW5kU2t5ICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpFciByZWNobmV0IG1hbCBnYW56IGxlaXNlIG5hY2gsIHdhcyBpaG0gZGFzIGFsbGVzIGJyaW5ndC4gClRoYXQncyBhIGxpdHRsZSBwbHVzIG9uIHRoZSBzaWRlIG9mIHRoaXMgZ2FtZSwgYnV0IEkgc2FpZCBpdCBsYXN0IHdlZWsgdGhhdCB3ZSdyZSBpbiBhIGZpdmUgZ2FtZSBwbGF5b2ZmLCBhbmQgbm93IHdlJ3JlIGRvd24gdG8gYSBmb3VyIGdhbWUgcGxheW9mZi4gClVuZGVyc3RhbmRpbmcgdGhlIGV4cG9zdXJlIHRyaWFuZ2xlIChhcGVydHVyZSwgc2h1dHRlciBzcGVlZCwgaXNvKSB3aWxsIHBsYXkgYSB2aXRhbCByb2xlIGhlcmUuIEFwcHMgbGlrZSBQaG90b3BpbGxzIHdpbGwgYWxzbyBoZWxwIHlvdSBjYWxjdWxhdGUgeW91ciBzaHV0dGVyIHNwZWVkIGZvciBzaG9vdGluZyBzaGFycCBzdGFycyBhdCBuaWdodC4gCkdpdmUgQmFjayBXaGF0IFlvdSBHZXQgT3V0CkJ1dCB3aGF0IGlzIHJlYWxseSBhbmQgdHJ1bHkgdXBzZXR0aW5nLCB3aGF0IGlzIGNhdXNpbmcgbWUgdG8gc2hlZCBhIGZldyB0ZWFycywgaXMgdGhhdCBvbmNlIGFnYWluIHRoZSBtYWluc3RyZWFtIG1lZGlhIGlzIGlnbm9yaW5nIHRoZSByZWFsIHN0b3J5OiBoaXJpbmcgb3V0IHRvIHByaXZhdGUsIGZvciBwcm9maXQgY29tcGFuaWVzIG91ciBuYXRpb25hbCBkZWZlbnNlLiAKIlNoZSBnb3QgZXZlcnl0aGluZyByaWdodCwgb25seSBhc2tlZCBwZXJ0aW5lbnQgcXVlc3Rpb25zIGFuZCB3YXMgYW5nZWxpY2FsbHkgYmVoYXZlZC4gU2hlIHdhcyBjbGVhcmx5IG9mZiB0aGUgc2NhbGUuIElmIHdlIHdlcmUgdGFsa2luZyBNZW5zYSwgc2hlJ2QgYmUgaW4gdGhlIHRvcCAxJSwiIGhlIHRvbGQgdGhlIEJCQy4KWW91IGEgc2V4dWFsIGJlaW5nLiAKVGhleSBjYW4gYmUgZm91bmQgc2VsbGluZyBoaWdocXVhbGl0eSBzdXBwbGllcyBhdCBtYW55IENpdmlsIFdhciBldmVudHMgaW5NaWNoaWdhbiwgbm9ydGhlcm4gT2hpbywgUGVubnN5bHZhbmlhLEluZGlhbmEgYW5kIE5ldyBZb3JrLjEwOjAwYW0gICBFbmR1cmluZyBJbWFnZXMgIDEgaG91ckV4cGxvcmUgdGhlIG1hZ2ljIG9mIDE5dGggY2VudHVyeXBob3RvZ3JhcGh5ICAgdGhlIGludmVudGlvbnMsIHRlY2huaXF1ZXMgYW5kY2hlbWlzdHJ5IHRoYXQgYWxsb3dlZCBvdXIgMTl0aCBjZW50dXJ5Y291bnRlcnBhcnRzIHRvIGNhcHR1cmUgaW1hZ2VzIG9mIHRoZSB3b3JsZGFyb3VuZCB0aGVtIEFydCB0aGF0IGdpdmVzIHVzIGFuIGVuZHVyaW5ncmVjb3JkIG9mIHRoZSBwYXN0LiBBbGxlbndpbGwgZGlzY3VzcyBhY2Nlc3NvcmllcywgamV3ZWxyeSwgY2xvdGhpbmcsaGFpcnN0eWxlcyBhbmQgZXRpcXVldHRlLiAKSWYgaGUgY2FuIGdldCBhIG5ldyBleHRlbnNpb24sIGJ1bGx5IGZvciBoaW0uIApJIHdhcyBzbyB0aGFua2Z1bC4gCkkgd291bGQgY29ubmVjdCB0byB0aGUgaHViIGFuZCByZXF1ZXN0IHBlcm1pc3Npb25zLiAKQnV0IGxldCdzIHRoaW5rIHRoaXMgdGhyb3VnaCBiZXlvbmQgdGhlIHN1cGVyZmljaWFsIGxheWVyLiBXaGF0IG1hZGUgRmxveWQgbXVzdCBzZWUgVFYgY2FuIGJlIGJlc3Qgc3VtbWVkIHVwIHRvIG9uZSB0aGluZyAgIHlvdSB3ZXJlIGVpdGhlciAxMDAlIGJlaGluZCBoaW0gb3IgeW91IDEwMCUgd2FudGVkIGhpcyAwIHRvIGdvLCBpbiBvdGhlciB3b3JkcyBoZSB3YXMgYXMgcG9sYXJpemluZyBhcyBoZWF2ZW4gaXMgdG8gaGVsbC4gCkEgZmV3IHdlZWtzIHBhc3MgYW5kIHdlZWRzIGhhdmUgc3RhcnRlZCBncm93aW5nIG92ZXIgaXQuIEl0IGF0IHRoYXQgcG9pbnQgaGUgY2FsbHMgdGhlIGNvcHMgYW5kIHJlcG9ydHMgdGhhdCBzb21lb25lIGhhZCBkdW1wZWQgYSBiaWtlIGZyYW1lIGluIGhpcyBnYXJkZW4uIFRoZSBjb3BzIHNob3cgdXAgYW5kIGhlIGV4cGxhaW5zIHRoYXQgaGUganVzdCBnb3QgYmFjayBmcm9tIGJlaW5nIGF3YXkgYW5kIGZvdW5kIGl0LgpQb3N0ZWQgYnkgdGhpbmtwaWVjZSB0byBTb2NpZXR5IEN1bHR1cmUgKDQgYW5zd2VycyB0b3RhbCkKSXQgd2lsbCBhZmZlY3Qgd2hhdCBhbmQgaG93IHRoZSB0ZWFjaGVycyB0ZWFjaCwgYW5kIHRoZSBraW5kIG9mIGZlZWRiYWNrIHlvdSBnZXQgZnJvbSB5b3VyIHBlZXJzIHdoZW4geW91IGV4Y2hhbmdlIG1hc3NhZ2VzLiBJIHJlYWxseSBjdXJpb3VzIHdoYXQgdGhlIGN1bHR1cmUgaXMgbGlrZSBhIGJlYXV0eSBzY2hvb2wgbWFzc2FnZSBwcm9ncmFtLCBhbmQgSSBpbWFnaW5lIHRoZXJlIG1heWJlIG1vcmUgb2YgYSBmb2N1cyBvbiBlbW9sbGllbnRzIGFuZCBzZXQgdXAsIHJlbGF4YXRpb24gbWFzc2FnZSwgYW5kIGN1c3RvbWVyIHNlcnZpY2Ugb3ZlciB0b3BpY3MgbGlrZSBhbmF0b215LCB0cmVhdG1lbnQgcHJvdG9jb2xzLCBhbmQgZXRoaWNzLiBCdXQgdGhhdCBsaWtlLCBleHRyYXBvbGF0ZWQgZnJvbSBzdGVyZW90eXBlcy4gCkJhY2sgYXQgZzggRFNIRyB3YXNuIHJlYWxseSBvbmUgc2hvdHRpbmcgYW55b25lLCBleGNlcHQgcmVhbGx5IGxvdyBocCBvciBsb3cgYWdpbGl0eSBCbHVlcy4gQnV0IGhlIHdhcyB0YWtpbmcgYWxtb3N0IGV2ZXJ5b25lIGJ1dCBncmVlbnMgaW50byB0aGUgcmVkLCBhbmQgaXQgd2FzIHdoYXQgaXQgZmVsdCBsaWtlIGl0IHNob3VsZCBiZS4gCk15IG9sZCBib3NzIHdhcyBvbmUgb2YgdGhlIGd1eXMgd2hvIHdhcyB0cmFpbmVkIHRvIGRvIHRoaXMuIApNYXJ5IHdhcyBhbHNvIGFuIEF1eGlsaWFyeSBtZW1iZXIgb2YgQ29sb24gQ291Y2ggQW1lcmljYW4gTGVnaW9uIFBvc3QgODIxLiAKSSBkaWQgMTkzMCB0byAxOTUwIG5ld3Mgb2YgcnVzc2lhbiByZWxpZ2lvbi4gSXRzIG9sZCB0aG91Z2guIApGb3IgbWUgaXQgd2FzIE5vZCBtaXNzaW9uIDUuIEluZmlsdHJhdGUgdGhlIFNjcmluIHNoaXAgYW5kIHJlY292ZXIgdGhlIFRhY2l0dXMgZnJvbSB0aGUgdHJhaW4uIEhlcmUsIGhhdmUgYSBmZXcgbGlnaHQgdW5pdHMgYW5kIHdhdGNoIG91dCBmb3IgR0RJIGhlYXZ5IGFybW9yIGFuZCBwYXRyb2xzIGV2ZXJ5d2hlcmUuClBvc3RlZCBieSBhbm9ueW1vdXMKSSBzdGFydGVkIGhhbmdpbmcgb3V0IHdpdGggYW5vdGhlciBnaXJsIHdob20gaSBmdWNraW5nIGFkb3JlIGFuZCBhbSBjb25uZWN0aW5nIHdpdGggcmVhbGx5IHdlbGwuIApXaGVuIHlvdSBlbmNvdW50ZXIgYSB0YWxsIHJvY2ssIGRyb3AgdGhyb3VnaCB0aGUgaG9sZSB0byB0aGUgbG93ZXIgbGV2ZWwgYW5kIGNvbnRpbnVlIGxlZnQuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk5TVyBob3NwaXRhbHMgYXJlIGluY3JlYXNpbmdseSBhY2NlcHRpbmcgb2ZmZXJzIG9mIGxhcmdlIGNhc2ggZG9uYXRpb25zIGZyb20gbG9jYWwgcHVicyBhbmQgY2x1YnMgdGllZCB0byBhbiBpbmNyZWFzZSBpbiBwb2tlciBtYWNoaW5lcyBpbiB0aG9zZSB2ZW51ZXMuIFNpbmNlIDIwMTEsIHRoZSBzdGF0ZSdzIGhvc3BpdGFscyAgaW5jbHVkaW5nIENvbGVkYWxlIEhvc3BpdGFsICAgaGF2ZSBhY2NlcHRlZCBtb3JlIHRoYW4gJDEuMyBtaWxsaW9uIGluIGRvbmF0aW9ucyBjb25kaXRpb25lZCB1cG9uIG5lYXJieSBwb2tpZSB2ZW51ZXMgc3VjY2Vzc2Z1bGx5IGFwcGx5aW5nIHRvIG9wZXJhdGUgZXh0cmEgbWFjaGluZXMuIFNvbWUgY2hhcml0aWVzIGhhdmUgc3RhcnRlZCB0byByZWplY3Qgc3VjaCBmdW5kaW5nIG9mZmVycywgYnV0IHRoZSBzdGF0ZSdzIHB1YmxpYyBob3NwaXRhbCBzeXN0ZW0gY29udGludWVzIHRvIHN1cHBvcnQgdGhlIHNjaGVtZSBhbmQgaXMgaW5jcmVhc2luZ2x5IGJlbmVmaXRpbmcgZnJvbSBpdC4gCiJUaGUgbGFzdCBjb3VwbGUgZ2FtZXMsIG91ciB3aG9sZSBsaW5lIGluIGdlbmVyYWwgaGFzIGJlZW4gbW92aW5nIHRoZSBwdWNrIHZlcnkgd2VsbCwgZ2V0dGluZyBpbnRvIHRoZSB6b25lLCIgc2FpZCBNYXJuZXIsIHdobyBsZWFkcyB0aGUgTGVhZnMgd2l0aCA4MSBwb2ludHMgKDI0IGdvYWxzLCA1NyBhc3Npc3RzKS4gIldlJ3ZlIGJlZW4gY3JlYXRpbmcgZWFjaCBvdGhlciBzcGFjZS4gKEh5bWFuKSBoYXMgYmVlbiBkb2luZyBhIGdyZWF0IGpvYiBvZiBjb21pbmcgb2ZmIHRoZSBuZXQgb2YgZmluZGluZyB0aG9zZSBzb2Z0IHNwb3RzLiIKU2l0dGluZyBJcyBZb3VyIE9mZmljZSBDaGFpciBLaWxsaW5nIHlvdT8gTWVuc2hlYWx0aCAyMDEwCkhpcCBlbmxhcmdlbWVudCBpbiB3b21lbi4gClRoZW4gd2UgdGFsa2VkIGFib3V0IGhvdyBteSBmYXRoZXIgaW4gbGF3IGxpa2VkIHRoZSBzY2VuZSB3aXRoIHN0YXJrIHByaXZhdGUgcGxhbmUgYW5kIHRoZSBkYW5jaW5nIHN0ZXdhcmRlc3NlcyBhbmQgbXkgd2lmZSBncmFuZG1hIHJvbGxzIGhlciBleWVzIGFuZCBzYXlzLCAidWdoLiBNZW4uIi4gClRoZXkgZGljdGF0ZSB0aGUgcHJpY2UuIFRoZXkgcHVtcCBhbmQgZHVtcCB3aGVuIHRoZXkgd2FudC4gVGhleSBoYXZlIGFsbCBvZiB0aGUgaW5zaWRlciBpbmZvcm1hdGlvbiB0byB0cmFkZS5ObyB3YXkgaW4gSEVMTCBpcyBhbnkgb2YgdGhpcyBsZWdhbCwgYW5kIHRoZXJlIG5vIHdheSBpbiBIRUxMIGFueSBvZiB0aGlzIGNhbiBsYXN0LiAKRHVkZSBpZiB5b3Ugc3RheSB0aGlzIHNpbmNlcmUgYW5kIGRvIHRoZSB3b3JrLCBJIHRoaW5rIHlvdSBiZSBvbmUgb2YgdGhlIGx1Y2t5IG9uZXMgYW5kIGVuZCB1cCB3aXRoIGEgZ29vZCByZWxhdGlvbnNoaXAgd2l0aCB5b3VyIGtpZHMuIApNciBKdXN0aWNlIEVhZ2FyIGltcG9zZWQgYSAxNSB5ZWFyIHNlbnRlbmNlIG9uIHRoZSBmYXRoZXIgYW5kIHN1c3BlbmRlZCB0aGUgZmluYWwgeWVhci4gVGhlIG1hbiBoYXMgYWxyZWFkeSBiZWVuIHJlZ2lzdGVyZWQgYXMgYSBzZXggb2ZmZW5kZXIgYW5kIHdpbGwgYWxzbyBiZSBzdWJqZWN0IHRvIGEgZm91ciB5ZWFyIHN1cGVydmlzaW9uIG9yZGVyIG9uIGhpcyByZWxlYXNlLgpBIGZldyB5ZWFycyBiYWNrLCBhIGdyb3VwIG9mIGJyaWxsaWFudCB5b3VuZyBwbGF5ZXJzIGFycml2ZWQgb24gdGhlIHBva2VyIHNjZW5lLiAKRm9yIGV4YW1wbGUsIGd1eXMgdGhhdCBnZXQgaW50byB0aGUgbWFpbiBldmVudCB2aWEgc2F0ZWxsaXRlIGFyZSByZXF1aXJlZCB0byB3ZWFyIGEgcGF0Y2ggb2YgdGhlIHNpdGUgdGhleSB3b24gdGhlIGVudHJ5IG9uIChpdCB0eXBpY2FsbHkgcGFydCBvZiB0aGUgYWdyZWVtZW50IGluIHRoZSBwcml6ZSBwYWNrYWdlKS4gSW4gb3RoZXIgc2l0dWF0aW9ucywgcGxheWVycyBoYXZlIHNvbWUgbGV2ZWwgb2Ygc3BvbnNvcnNoaXAgd2l0aCBhIHJlc3BlY3RpdmUgY29tcGFueSBhbmQgdGhpcyBjYW4gcmFuZ2UgYW55d2hlcmUgZnJvbSBhIGp1c3QgYmVpbmcgcGFydCBvZiB0aGUgZ2lnLCB0byBoYXZpbmcgdGhlaXIgZW50cnkgcGFpZCBmb3IsIHRvIGdldHRpbmcgYm9udXNlcyBmb3IgdGhlaXIgcmVzdWx0cy4uIApIZSAxMDAlIGNhcnJpZWQgdGhhdCBPa2xhaG9tYSB0ZWFtLiAKTm93IG9uIHRvIHRoZSBuZXh0IHBvaW50IG9mIGNvbXBhcmlzb246IFJORyBlbGVtZW50cy4gCldoZW4geW91IGFyZSBpbnRlcmVzdGVkIHRvIHNlcmlvdXNseSBwbGF5IHBva2VyIGFuZCBpdHMgZGlmZmVyZW50IHZhcmlldGllcywgaXQgaXMgYmVzdCB0byBnZXQgYWxsIHRoZSBleHBsaWNpdCBnYW1lIHJ1bGVzIG9mIGVhY2ggZ2FtZS4gSXQgaXMgYmVzdCB0byBzdGFydCBmaXJzdCB3aXRoIGxvdyBsaW1pdHMgYW5kIHRoZW4gbWFrZSB5b3Vyc2VsZiBnbyBoaWdoZXIgaW4gdGhvc2UgZ2FtZXMgdGhhdCBpbnZvbHZlIGhpZ2hlciBzdGFrZXMgYWZ0ZXIgaW1wcm92aW5nIHlvdXIgc2tpbGxzLgpUaGUgY3VzdG9tZXIgdGhlbiB0dXJuZWQgaW4gdGhlIHBva2VyIGNoaXAgdG8gdGhlIHZpY3RpbS4gCkknbSBnbGFkIHRvIHNlZSB0aGF0IHlvdSBoYXZlIGFuIGFwcG9pbnRtZW50IGNvbWluZyB1cC4gSSBzdWdnZXN0IGZvbGxvd2luZyB0aHJvdWdoIHdpdGggd2hhdGV2ZXIgdGhleSBzdWdnZXN0LCBhbmQgYWxzbyBzZWUgaWYgeW91IGNhbiBzZWUgYSB0aGVyYXBpc3QgYXMgd2VsbC4gVGFsa2luZyBhYm91dCBzdHVmZiBjYW4gcmVhbGx5IGhlbHAsIGV2ZW4gaWYgaXQgc2VlbXMgc3R1cGlkLiAKQm90aCBtZW4ga25ldyB3aG8gaGFkIHNlbnQgdGhlIHBsYW5lLi4gCktlbGx5QW5uMzEwNiB1CkkganVzdCB0aGluayB5b3Ugc2VlaW5nIG1vcmUgdGhlcmUgdGhhbiB0aGVyZSBpcy4gSWYgaGUgaXMgdGFsa2luZyB0byBCbGFpcywgd2hvIGlzIHJlbGF0aXZlbHkgbmV3IHRvIHRoZSB0ZWFtIGFuZCBkaWRuIGhhdmUgaGlzIG51bWJlci9uYW1lcGxhdGUgZmFjaW5nIGhpbSwgaGUgbWF5IHdlbGwgaGF2ZSBiZWVuIHVuc3VyZSBvZiB3aG8gaGUgd2FzLiBJIGRvbiB0aGluayBIZSB3YXMgc2F5aW5nIGl0IGRpc3Jlc3BlY3RmdWxseSBzbyBtdWNoIGFzIHRoZSBzYW1lIGFzIGhlIHdvdWxkIGhhdmUgc2FpZCBpdCAiQmxhaXMsIGdldCB0aGUgZnVjayBvdXQgb2YgaGVyZSIgaGFkIGhlIGtub3duIHRoZSBuYW1lLi4gClRoaXMgaWRlYSBjYW1lIHVwIGluIFNlcHRlbWJlcidzIFN0YXRlIG9mIHRoZSBTdWJyZWRkaXQgcG9zdCwgYW5kIHNldmVyYWwgcGVvcGxlIGV4cHJlc3NlZCBpbnRlcmVzdCBpbiBpdC4gCkNoYWZpbmcuIExhcmdlIGJyZWFzdHMgY2FuIGNoYWZlIHRoZSBza2luIGp1c3QgYmVuZWF0aCB0aGUgYnJlYXN0LiBTd2VhdGluZywgcmFzaGVzIGFuZCBldmVuIGZ1bmdhbCBpbmZlY3Rpb25zIGFyZSBhbHNvIHBvc3NpYmlsaXRpZXMuIApBbHRlcm5hdGl2ZSBTYW50IGMnZXN0IGRpZmZyZW50IGVuIGNlIHNlbnMgcXVlIGNlbGEgY29uc2lzdGUgIHBybmVyIGRlcyBzb2x1dGlvbnMgbmF0dXJlbGxlcyBlbiBsZXMgYWRvc3NhbnQgIHVuZSBib3V0aXF1ZSBkZSB2ZW50ZSBkZSBjb21wbG1lbnRzIGRvbnQgbGEgcGFydGljdWxhcml0IGVzdCBkJ3RyZSBzb3VzIGRvc3MgcGFyIHJhcHBvcnQgYXV4IG9mZnJlcyBhbXJpY2FpbmVzIGQnbyB1biBjb3QgIG11bHRpcGxpZXIgcGFyIHVuIGZhY3RldXIgZGUgWCAzICBYIDYgcG91ciB0YWJsaXIgdW4gcmFwcG9ydCB2cmFpbWVudCBvYmplY3RpZi4gSWwgeSBhIHZpc2libGVtZW50ICJjb25mbGl0IGQnaW50cnQiIHNhdWYgcXVlIGRlIGNlIGN0IG9uIGZhaXQsIGF1IG1vaW5zIGVuIGFwcGFyZW5jZSwgbGEgcGFydCBkdWUgYXV4IHByYXRpcXVlcyBkZSBsYSBtZGVjaW5lIGRpdGUgYWNhZG1pcXVlIGxvcnNxdSdlbGxlIGRhaWduZSBmYWlyZSBjb3JyZWN0ZW1lbnQgbGUgYm91bG90IHBvc2l0aWYgcXVpIGVzdCAgc2EgcG9ydGUuTGVzIG9wcG9zaXRpb24gYmFuY2FpcmVzIGF1eCBwcmx2ZW1lbnQgYSBleGlzdGUgIUVuIGQnYXV0cmVzIHRlcm1lcywgc2kgZCdhdXRyZXMgdmV1bGVudCBwb3Vyc3VpdnJlIGwnZW5xdXRlIGonZXN0aW1lIGF2b2lyIGZhaXQgbCdlc3NlbnRpZWwgZXQgamUgbmUgcmV2aWVuZHJhaSBzdXIgbGUgc3VqZXQgcXUnZW4gY2FzIGRlIGRjb3V2ZXJ0ZSBwbHVzIG91IG1vaW5zIGV4dHJhb3JkaW5haXJlIG1haXMgYXZlYyBjZXR0ZSBoaXN0b2lyZSBkZSBsb2dpY2llbCBkZSB2ZW50ZSBmb3JjZSBldCBkZSBkb21pY2lsaWF0aW9uIHRyYW5ncmUsIGxhIHNldWxlIHNvbHV0aW9uIGMnZXN0IGxlIGJveWNvdHQgcHVyIGV0IHNpbXBsZSBxdWFudCAgY2V1eCBxdWkgb250IGFjY2VwdCBkZSB0cmFuc21ldHRyZSB1biBmb3JtdWxhaXJlIFNFUEEgcXUnaWxzIHByZW5uZW50IGNvbnRhY3QgYXZlYyBsZXVyIGJhbnF1aWVyLiAKWW8gSSBqdXN0IGRyb3BwZWQgd2VsbCByZWFzb25lZCBhbmQgd3JpdHRlbiAoZm9yIG1lKSwgbm9uIHNoaXRwb3N0IGNvbW1lbnRzIG9uIHdoYXQgbWlnaHQgaGF2ZSBiZWVuIHRoZSBzYW1lIG9pbmtkb2cgcG9zdCwgYW5kIGFsbCB0aHJlZSBkaXNhcHBlYXJlZC4gUG9zc2libGUgdGhhdCBpdCB3YXMgbG9ja2VkIGJlZm9yZSBJIGNsaW1heGVkIGFuZCBoaXQgdGhvc2UgcG9zdCBjb21tZW50IGJ1dHRvbnMgYW5kIG15IGFwcCBqdXN0IGhhZG4ndCByZWZyZXNoZWQuIE9uZSBvZiB0aG9zZSB3YXMgbmljZSBhbmQgbG9uZyBhbmQgaGFkIHNvbWUgdGhvdWdodCBwdXQgaW50byBpdC4gRmVsdCBnb29kLiBOb3cgaXQgZ29uZSwgc2tpbiBkdXN0IGludG8gdGhlIGhlbGxtb3NwaGVyZS4KSXQgdHVybnMgb3V0IHRoYXQgd2UgZG8gaGF2ZSBzb21lIGNvbW1vbiBhbmNlc3RyeSBhcm91bmQgdGhlIDE1dGggY2VudHVyeS4gCiJZb3UgZG9uJ3Qga25vdyB3aGF0J3MgZ29pbmcgdG8gaGFwcGVuIHRvbW9ycm93LiBZb3UgZG9uJ3Qga25vdyB3aGF0J3MgZ29pbmcgdG8gaGFwcGVuIGluIHRoZSBuZXh0IHR3byBtb250aHMsIiBIZWFkYWNoZSwgd2hvIGtlZXBzIGhpcyBpZGVudGl0eSBoaWRkZW4sIHRvbGQgQUZQIGF0IHRoZSBXVEYgY2FmZSBhbmQgZ2FsbGVyeS4KT24gZW52aXNhZ2UgYXVqb3VyZCBsZSBmYWl0IHF1ZSBsIGRlIGwgZXN0IHZpYnJhdGlvbiBvdSBtb3V2ZW1lbnQsIG9uZGVzIGQgcXVpIHNlIHRyYW5zZm9ybWVudCBlbiByYWRpYXRpb25zIGV0IHF1aSBlbnRyYW5lbnQgbGEgZm9ybWF0aW9uIGRlIGxhIG1hdGlyZS4gTGVzIGRpZmZyZW50ZXMgZnJxdWVuY2VzIGRlIGNlcyBvbmRlcyBjcmVudCBsYSBzeW1waG9uaWUgZGVzIHNwaHJlcy4gClRoZSBwZXJzb24gd2hvIG1hZGUgdGhlIGxhc3QgYmV0ICh0aGUgb25lIHdobyB3ZW50IGFsbCBpbikgaGFzIHRvIHNob3cgaGlzIGNhcmRzIGZpcnN0LiAKSSBtaWdodCBiZSBpbiB0aGUgbWlub3JpdHkgaGVyZSBidXQgSSB0aGluayBldmVyeXRoaW5nIE1hZ2lua2EgZGlkIHVwIHRvIGFuZCBpbmNsdWRpbmcgdGhlIExlYnJvbiBzaWduaW5nIG1hZGUgc2Vuc2UgKHllcywgSSBrbm93IEQgaGFkIGEgZ29vZCBzZWFzb24pICAgaXQganVzdCB0aGF0IGV2ZXJ5dGhpbmcgdGhleSBkaWQgQUZURVIgTGVicm9uIGhhcyBnb25lIG92ZXIgbGlrZSBhIHdldCBmYXJ0IG9uIGEgZmlyc3QgZGF0ZS5JIGxpa2UgdG8gc2VlIHdoYXQgdGhlIHRlYW0gY2FuIGRvIHdpdGggYSBmcmVzaCBzdGFydCwgaGVhbHRoeSByb3N0ZXIsIGFuZCBmcmVlIGFnZW50IGhlbHAgbmV4dCBzZWFzb24sIGhhdmluZyBoYWQgdGhlIG1pc3Rha2VzIG9mIHRoaXMgb25lIHRvIGxlYXJuIGZyb20uIApPbmUgb2YgdGhlIGJpZ2dlc3QgYmVuZWZpdHMgd2FzIHRoYXQgdGhlIG9ubGluZSBwcmljZXMgd2VyZSBhYm91dCBoYWxmIGFzIG11Y2ggYXMgdGhlIG9yaWdpbmFsIHN1cHBsaWVyLiAKVGhhdCBzYWlkLCBSZWFjaCB3ZWFwb25zIGFyZSBpbmRlZWQgYmV0dGVyIGF0IGdldHRpbmcgUEFNIG9wcG9ydHVuaXR5IGF0dGFja3MsIGJ1dCB0aGV5IGdlbmVyYWxseSB3b3JzZSBhdCBiYXR0bGVmaWVsZCBkZW5pYWwuIAo2KSBUaGUganVyeSB3YXMgYXdhcmUgb2YgdGhlIGJvbmVzLiBLcmF0eiBhcmd1ZWQgaXQuIFN0cmFuZyBtYWRlIG1hcHMuIApGb3Igb3BlbmluZyBvdXIgZXllcywgc3RhcnRpbmcgdGhpcyBkZWJhdGUsIHNoaW5pbmcgYSBsaWdodCBvbiBpbGxlZ2FsIGRvaW5ncy4uIApUaGV5IGFsc28gZG8gZXhjZXB0aW9uYWxseSB3ZWxsIGluIHRlYW1zLCB1bmxpa2UgZ2lybHMsIGFuZCB0aGV5IGxlYXJuIG11Y2ggYmV0dGVyIHdoZW4gc3Vycm91bmRlZCBieSBsaWtlIG1pbmRlZCBpbmRpdmlkdWFscyB3aXRoIGEgY29tbW9uIGdvYWwuIEJveXMgb3BlbiB1cCBhbmQgbGVhdmUgdGhlaXIgZW1vdGlvbmFsIHNoZWxscyB3aGVuIHdvcmtpbmcgd2l0aCBvdGhlciBib3lzLiAKWW91IG5vdCBhbiBhc3Nob2xlLiBDYXNlIGNsb3NlZC4gTWVldGluZyBhZGpvdXJuZWQuClBlb3BsZSB3aG8gYXJlbiBjbGluZyB0byBzdGVyZW90eXBlcywgZ2VuZXJhbGlzYXRpb25zLCBhbmQgbWVkaWEgcG9ydHJheWFscyBvZiBkaXNhYmxlZCBwZW9wbGUgd2hpY2ggYXJlIG9idmlvdXNseSBpbmFjY3VyYXRlIHRvIHRob3NlIG9mIHVzIHdobyBoYXZlIGxpdmVkIHdpdGggdGhlIHRoaW5ncyB0aGV5IGpva2luZyBhYm91dC5UaGF0IG5vdCB0byBzYXkgdGhhdCBhIGRpc2FibGVkIHBlb3BsZSBjYW4gbWFrZSBhIHRhc3RlbGVzcyBhbmQgb2ZmZW5zaXZlIGpva2UgdGhhdCBJIGRvbiBhcHByZWNpYXRlLiAKTXkgR29hbCBmb3IgMjAxOSBpcyB0byBidWlsZCBteSByb2xsIG92ZXIgMTAuMDAwLiAKVGhpcyBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0ZWQgdG8gRFNMUnMsIGludGVyY2hhbmdlYWJsZSBtaXJyb3JsZXNzIGNhbWVyYXMsIGFuZCBldmVuIHNvbWUgY29tcGFjdC9icmlkZ2UgY2FtZXJhcy4gU29tZSBwaG9uZXMgZXZlbiBhbGxvdyB5b3UgdG8gc2hvb3QgbWFudWFsbHkgd2l0aCBhbiBhcHAuIE9uY2UgeW91IGhhdmUgeW91ciBjYW1lcmEgeW91IG5lZWQgYSBnb29kLCBzdHVyZHkgdHJpcG9kLiAKSSBkb24ndCB3YW50IGhlciB0byB0aGluayBpIGFtIHRyeWluZyB0byB0YWxrIGhlciBvdXQgaGVyIGZlZWxpbmdzLCBpIGFsc28gZG9uJ3Qgd2FudCB0byBtYWtlIGhlciBzb3VuZCBndWlsdHkgb3IgYW55dGhpbmcgbGlrZSB0aGF0LCBpIGRvbid0IHdhbnQgdG8gc291bmQgbGlrZSBBbiBBc3Nob2xlIGVpdGhlci4gCldvcmtlZCBhcyBhIHdhaXRyZXNzIGZvciBhIGhpZ2ggY2xhc3MgcHJpdmF0ZSBjb3VudHJ5IGNsdWIgaW4gQ29ubmVjdGljdXQuIApJIGNlcnRhaW5seSBwbGF5IGluIHRoZXNlIGdhbWVzLCBidXQgSSBuZXZlciBpbnZlc3QgaW4gdGhlIGJ1c2luZXNzOyB0aGUgc2Vjb25kIHRoZSBiaWdnZXIgZ292ZXJubWVudCBkZWNpZGVzIHRoYXQgeW91IGRvaW5nIGlzIGlsbGVnYWwsIGFsbCB5b3VyIGludnJzZW50IGlzIGdvbmUgaW5zdGFudGx5LiBJdCBsaWtlIGFsbCBvZiB0aGUgbWFyaW5qdWFuYSBkaXNwZW5zYXJpZXMgaW4gTG9zIEFuZ2VsZXM7IG1hbnkgb3BlbiwgZ292ZXJubWVudCBzaHV0cyBtYW55OyBnb3Zlcm5tZW50IGFsbG93cyBzb21lLCBnb3Zlcm5tZW50IHNob3dzIG1hbnkgb2YgdGhlbS4gVGhhdCBzZWVtcyB0byBiZSBhIGNpdHkgdGhpbmcuIAoxcmV4YXMxICA2IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KQm90aCB2ZXJzaW9ucyBzaGFyZWQgY29tbW9uIHBvc2l0aXZlIGF0dHJpYnV0ZXMuIFRoZXNlIGluY2x1ZGVkIGZyZXNoIGFuZCBjbGVhbiB0YXN0aW5nIHBvdWx0cnkgd2l0aCBhIHBsZWFzaW5nbHkgbW9pc3QgdGV4dHVyZSBhbmQgYSBtYXJ2ZWxvdXNseSBjcmlzcCBvdXRzaWRlLCBtYWtpbmcgZm9yIGEgZGlzaCB0aGF0IGV2b2tlZCB0b3Agbm90Y2ggaG9tZXN0eWxlIHByZXBhcmF0aW9ucy4gCkFuZCBpZiB5b3UncmUgYXVkYWNpb3VzIGVub3VnaCB0byB3YW50IHRvIGJlIGluIHRoZXJlIHlvdXJzZWxmLCBqdXN0IGxldCBtZSBrbm93LiAKMi4gVGhpcyBlc3NlbnRpYWwgbnV0cmllbnQgaXMgcmVxdWlyZWQgYnkgZXZlcnkgY2VsbCBpbiB5b3VyIGJvZHkuClRoZSBUZWEgUGFydHkgaGFzIHJlc2hhcGVkIHRoZSBvcmllbnRhdGlvbiBvZiB0aGUgZW50aXJlIFJlcHVibGljYW4gUGFydHkgdG93YXJkIHRoZSBoYXJkIGVkZ2VkIHJpZ2h0OyBpdCBoYXMgYmVlbiByZW1hcmthYmx5IHN1Y2Nlc3NmdWwgaW4gaW50aW1pZGF0aW5nIFJlcHVibGljYW4gb2ZmaWNlaG9sZGVycywgaW5jbHVkaW5nIHRob3NlIHdobyBtYXkgbm90IHNoYXJlIGl0cyBleHRyZW1lIHBvc2l0aW9ucy4gV2hhdCBleHBsYWlucyB0aGVzZSByZW1hcmthYmxlIGFjaGlldmVtZW50cz8uIApUaGUgb25seSAiY2FyYm9oeWRyYXRlIiBvbiB0aGUgbGlzdCwgcXVpbm9hIGlzIGluY2x1ZGVkIGJlY2F1c2UgaXQncyBub3QgYSBncmFpbiBidXQgYSBzZWVkIHRoYXQgaXMgYSByZWxhdGl2ZSBvZiBzcGluYWNoIGFuZCBTd2lzcyBjaGFyZC4gCjMuIApNYXkgd2Ugd2l0aGRyYXcgZnJvbSB0aGUgY3Jvd2RzIGZvdW5kIG9uIG91ciBkZXZpY2VzIGFuZCBiZSBhbG9uZSB3aXRoIHRoZSBwZW9wbGUgd2hvIGNhcmUgYWJvdXQgdXMuIE1heSB3ZSByZWNvbm5lY3Qgd2l0aCB0aG9zZSBhcm91bmQgdXMgYW5kIHRoaW5rIGJlZm9yZSB3ZSBtb3ZlIG9uIHRvIHRoZSBuZXh0IHRhc2ssIGJlY2F1c2UgdGhlIGltcGFjdCBvZiB0aGUgdGFzayBhdCBoYW5kIGNvdWxkIG1ha2Ugb3IgYnJlYWsgdGhlIHJlbGF0aW9uc2hpcCB0aGF0IG1hdHRlcnMgdGhlIG1vc3QuLiAKQnV0IGZpbmRpbmcgYW5kIGhpcmluZyBjYW5kaWRhdGVzIGlzIGEgZGlmZmVyZW50IHByb2JsZW0gdGhhbiBsb29raW5nIGFmdGVyIHRoZW0uIApCZXJuaWUgU2FuZGVycywgdGhlIHNvY2lhbGlzdCBTZW5hdG9yLCByZWd1bGFybHkgc3VwcG9ydHMgR2VuZXJhbCBEeW5hbWljcywgdGhlIGRlZmVuc2UgY29udHJhY3RvciwgYmVjYXVzZSB0aGV5ICJjcmVhdGUgZ29vZCBqb2JzIGZvciBWZXJtb250ZXJzLiIgQWRtaXR0ZWRseSwgYnVpbGRpbmcgZ3VucyBnZW5lcmFsbHkgcGF5cyBtb3JlIHRoYW4gd29ya2luZyBhdCBXYWxtYXJ0LCBidXQgaXQgaXMgaGFyZGx5ICJwcm9ncmVzc2l2ZS4iLiAKQXMgZm9yIHJhaXNpbmcgZmxvcCBpdCBtaWdodCBiZSBva2F5IGluIGEgdmFjdXVtIGJlY2F1c2UgYXMgeW91IG1lbnRpb24gaGUgaGFzIHNvbWUgb3ZlciBjYXJkcyB0byBmb2xkIGFuZCB0dXJucyBhbmQgcml2ZXJzIGFyZSBkaWNleS4gCkVESVQxOiBUaGFuayB5b3UgZm9yIHRoZSBnb2xkLCBraW5kIFJlZGRpdG9yIQpUaGV5IGFyZSBpbiB1bml2ZXJzaXR5LiAKSSBzdXBwb3NlIGl0IGFuIGltcHJvdmVtZW50IGluIHRoZSBzZW5zZSB0aGF0IGlmIHlvdSBkb24gaGF2ZSBhbnkgZGVmYXVsdCBmaWVsZHMsIHlvdSBkb24gaGF2ZSB0byBzcGVjaWZ5IHRoZSByZWR1bmRhbnQgbmVnYXRpdmUuIApUaGUgeW91bmcgaHlwb3RoeXJvaWQgd29tYW4gSSBjb25zdWx0ZWQgd2l0aCBoYWQgYmVlbiBvbiBUNCByZXBsYWNlbWVudCBmb3IgdGhyZWUgbW9udGhzLiBTaGUgaGFkIGJlZW4gdHJvdWJsZWQgd2l0aCBoeXBvdGh5cm9pZCBzeW1wdG9tcywgaW5jbHVkaW5nIGFpciBodW5nZXIsIGZvciBhIHllYXIgYmVmb3JlIGhlciBkb2N0b3IgZGlhZ25vc2VkIGhlciBoeXBvdGh5cm9pZGlzbS4gVGhlIFQ0IHJlcGxhY2VtZW50IGhhZCBzbGlnaHRseSBpbXByb3ZlZCBoZXIgZmF0aWd1ZSBhbmQgZHJ5IHNraW4sIGJ1dCBub3QgaGVyIGFpciBodW5nZXIuIApJIGhhdmUgYSBsYXJnZSBhbW91bnQgb2YgTCBpdGVtcy4gSSwgdG9vLCBsb3ZlIGhvdyBlYXN5IGl0IGlzIHRvIG1peCBhbmQgbWF0Y2ggdGhlaXIgcGllY2VzIGFuZCBkYW1uIGRvIEkgbG92ZSBjYXN1YWwsIGNvbWZ5IG5ldHVyYWxzLiAKSXQgaXMgdHJ1ZSB0aGF0IG11Y2ggb2YgdGhlIHBoeXNpY2FsIGluZnJhc3RydWN0dXJlIHdhcyBkZXN0cm95ZWQgaW4gdGhlIHdhciwgYnV0IHRoYXQgaWdub3JlcyB0aGUgaW5zdGl0dXRpb25hbCBpbmZyYXN0cnVjdHVyZSB0aGUgSmFwYW5lc2UgbGVmdCBiZWhpbmQuIFRoZXNlIGluY2x1ZGVkIHRoZSBwdWJsaWMgc2Nob29sIHN5c3RlbSBhbmQgdGhlIGxlZ2FsIHN5c3RlbSwgYW1vbmcgb3RoZXIgY2l2aWwgc2VydmljZSBpbnN0aXR1dGlvbnMsIG1hbnkgb2Ygd2hpY2ggd2VyZSBhbHJlYWR5IHN0YWZmZWQgYnkgS29yZWFucyBhdCB0aGUgdGltZSBvZiBKYXBhbmVzZSBzdXJyZW5kZXIsIHdobyBjb250aW51ZWQgYWZ0ZXJ3YXJkcy4gCkFuZCBXaGl0ZWhvdXNlIHdhbnRzIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgaG93IEthdmFuYXVnaCBhbmQgaGlzIHdpZmUgYWZmb3JkZWQgdGhlaXIgJDEuMiBtaWxsaW9uIGhvbWUgaW4gMjAwNiwgYW5kIGhvdyBoZSBtYW5hZ2VkIHRvIHBheSBmb3IgbWVtYmVyc2hpcCBpbiB0aGUgQ2hldnkgQ2hhc2UgQ2x1Yiwgd2hvc2UgaW5pdGlhdGlvbiBmZWUgaXMgcmVwb3J0ZWRseSAkOTIsMDAwIHdpdGggYW5udWFsIGR1ZXMgb2YgbW9yZSB0aGFuICQ5LDAwMC4KVGhlIG11c2N1bGFyIGFuZCBwb3N0dXJhbCBlZmZpY2llbmN5IHdoaWNoIFRhaSBjaGkgcHJvbW90ZXMgZ2F2ZSByaXNlIHRvIG1hbnkgaGVhbHRoIGJlbmVmaXRzLCBhbmQgdGhpcyBpcyB3aGVyZSBUYWkgQ2hpIGdldHMgaXRzIHJlcHV0YXRpb24gYXMgYSBoZWFsdGggYXJ0LiBNYW55IG9mIHRoZSBUYWkgQ2hpIGV4ZXJjaXNlcyBjYW4gYmUgcHJhY3Rpc2VkIHdpdGhvdXQgcmVmZXJlbmNlIHRvIHRoZWlyIG1hcnRpYWwgYXBwbGljYXRpb25zLiAKV2FzIHdpdGggcmVzcGVjdCB0byB3aGV0aGVyIHRoZSBPTEcgd291bGQgcmVzcGVjdCBvdXIgbGltaXQgb2YgMjEgdGFibGUgZ2FtZXMgYW5kIDEsMjUwIG1hY2hpbmVzLCBoZSBzYWlkIHRoZW4uIApHb3QgbmFnZ2VkIGF0IGZvciBiZWluZyB1bmh5Z2llbmljIChteXRoIGJ0dywgaXQgYmVkIGJ1Z3Mgbm90IGZsZWFzKS4gClRoZXJlIGFyZSBhbHNvIGV4Y2VwdGlvbnMsIGFuZCBJIG1ldCBhIGZldyBvZiB0aG9zZSB0b28hIEFuZCBtb3JlIHBvd2VyIHRvIHdhbnQgdG8gYmUgYSBjb250ZW50IGNyZWF0b3IsIHRvIGNvbnRyaWJ1dGUgdG8gc29jaWV0eSBkaXJlY3RseSB0aHJvdWdoIG15IG93biBjcmVhdGl2aXR5IGFuZCBza2lsbCBpbiB0aGUgd2F5cyB0aGF0IGEgbWFuIHRyYWRpdGlvbmFsbHkgd291bGQuClNvLCB3aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSByZWxpZ2lvdXMgYmVsaWVmIGFuZCBzdG9yaWVzIGZvciBlbnRlcnRhaW5tZW50LCBiZXR3ZWVuIHRoZSBwYXN0IGFuZCB0aGUgcHJlc2VudD8KQmVmb3JlIHlvdSBjaG9vc2UgdG8gZ2V0IGEgdGF0dG9vIG9mIHBsYXlpbmcgY2FyZHMsIHlvdSBuZWVkIHRvIG1ha2Ugc3VyZSB5b3UgdW5kZXJzdGFuZCBob3cgdGhleSB3b3JrLiBJbiB5b3VyIHRyYWRpdGlvbmFsIGRlY2ssIHlvdSBoYXZlIDUyIGNhcmRzLiAKSWYgeW91IGV4cGVjdCB0aGUgY2FyIHdhaXRpbmcgYXQgYSBqdW5jdGlvbiB0byBwdWxsIG9udG8geW91ciByb2FkIGluIGZyb250IG9mIHlvdSwgaXQgd29uIHRha2UgeW91IGJ5IHN1cnByaXNlLi4gClRoZSBwZW9wbGUgdGhhdCBoYXZlbiB3b3JrZWQgaW4gb25lIHVzdWFsbHkgZG9uIHVuZGVyc3RhbmQgdGhhdCBpdCBpcyBhbiBhY3R1YWwgam9iIGFuZCByZXN0YXVyYW50IHdvcmtlcnMgYXJlIHRyeWluZyB0byBtYWtlIGEgbGl2aW5nIGxpa2UgZXZlcnlvbmUgZWxzZS4uIApUaG9zZSBmYWNpbGl0aWVzIG9ubHkgY2FuIG9mZmVyIHdoYXQgYXJlIGNhbGxlZCB2aWRlbyBsb3R0ZXJ5IHRlcm1pbmFscywgb3IgVkxUcyBiYXNpY2FsbHksIHNsb3QgbWFjaGluZXMsIGFuZCBub3QgYW55IGdhbWUgd2l0aCBldmVuIGEgdHJhY2Ugb2Ygc2tpbGwsIHN1Y2ggYXMgdmlkZW8gcG9rZXIuIEJ1dCB0aGV5IGFyZSBhdHRyYWN0aXZlIHRvIG1hbnksIGVzcGVjaWFsbHkgdG8gdGhlIG92ZXIgNTUgZGVtb2dyYXBoaWMgdGhhdCBsaWtlcyBlYXN5IHRyYXZlbCBhbmQgcGFya2luZywgd2hpY2ggaXMgdGhlIGhlYXJ0IG9mIHRoZSBzbG90IG1hY2hpbmUgYXVkaWVuY2UuIApUaGlzIHdhcyBhbiBpbW1lbnNlIHRyYWdlZHkuIApPbmUgZHVtYmFzcyBtb3ZlIGEgZ3V5IGRpZCB3YXMgaGUgc3RlYWxzIHNvbWUgcG9vciBnaXJscyBjYXIuIEl0IHdhcyBoZXIgZmlyc3QgY2FyLCBzaGUgd29ya2VkIGZ1bGwgdGltZSB3YXMgYSBzd2VldCBsaXR0bGUgdGhpbmcgYW5kIHdlIGZlbHQgc28gYmFkLCBzaGUgd2FzIGNydXNoZWQuIApKZG9nMjA1MCAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpJZiBJIGNvdWxkIGhhdmUgcHJlZGljdGVkIHRoYXQgYSBodWdlIHBvcnRpb24gb2YgYW5ncnkgd2hpdGUgQW1lcmljYW5zIHdvdWxkIGhhdmUgdGhlaXIgcmFnZSBtaXNkaXJlY3RlZCwgcGVyaGFwcyBJIGNvdWxkIGhhdmUgYWxzbyBrbm93biB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiB3b3VsZCBub3QgYmUgYWJsZSB0byByZXNpc3QgdGhlIGx1cmUgb2YgbWlsaXRhcnkgInNvbHV0aW9ucyIgdG8gcG9saXRpY2FsIGFuZCBlY29ub21pYyBwcm9ibGVtcy4gTWlnaHQgaGF2ZSBldmVuIHByZWRpY3RlZCB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiB3b3VsZCBiZSBnaXZlbiBmYXIgdG9vIG11Y2ggb2YgYSBmcmVlIHBhc3MgYnkgdGhlICJMZWZ0IiB0byBkbyB3aGF0ZXZlciB0aGV5IHNhdyBmaXQsIGFuZCB3aGF0IHRoZXkgc2F3IGZpdCB0byBnb3Zlcm4gYXMgYSBDZW50cmlzdCBSaWdodCBwYXJ0eSwgZXNwZWNpYWxseSB3aXRob3V0IGFueSBwcmVzc3VyZSBmcm9tIHRoZWlyIGJhc2VBaCwgYnV0IEkgd2FzIGV2ZXIgc28geW91bmcgd2hlbiBUcnVlIFNsYW50IGVkaXRvciBDb2F0ZXMgQmF0ZW1hbiBjYWxsZWQgbWUgdXAgdHdvIHllYXJzIGFnbyBhbmQgc2FpZCAiTGlzdGVuLCB3ZSBnb3QgdGhpcyBpZGVhLiIgY291cnNlLCBJIGV2ZXIgc28gbXVjaCBvbGRlciBub3cgYW5kIGNhbiBzZWUgdGhhdCB0aGUgd29ybGQgd2UgaGF2ZSB3b24gaXMgYSBiaWdnZXIgbWVzcyB0aGFuIEkgY291bGQgaGF2ZSBldmVyIGltYWdpbmVkLiAKUnVsZSAyOiBBbGwgcG9zdHMgbXVzdCBiZSBpbiB0aGUgc3R5bGUgb2YgYSBib3NzIGZpZ2h0LiAKVGhlIHZvbHVudGVlciBjb29yZGluYXRvciBvZiB0aGUgV2luZHNvciBFc3NleCBKYW5lIFdhbGsgV2Vla2VuZCBpcyBob3BpbmcgdG8gZXhwYW5kIGZyb20gZml2ZSB0byAxNSBjaXRpemVuIGxlYWQgbmVpZ2hib3VyaG9vZCB3YWxraW5nIHRvdXJzIGZvciB0aGUgTWF5IDMgdG8gNSBldmVudCBhbmQgdmVudHVyZSBvdXQgdG8gU291dGggV2luZHNvciwgUml2ZXJzaWRlIGFuZCB0aGUgc3VidXJicy4gVGhlIGZyZWUgd2Fsa2luZyB0b3VycyB0byBjZWxlYnJhdGUgdGhlIGlkZWFzIG9mIHVyYmFuIGFjdGl2aXN0IEphbmUgSmFjb2JzIGFuZCB0byBnZXQgcGVvcGxlIGNvbm5lY3Rpbmcgd2l0aCB0aGVpciBjb21tdW5pdHkgYXJlIGhlbGQgZWFjaCBNYXkgYXJvdW5kIHRoZSB3b3JsZC4KTGlrZSBhIGRvZyBwYWNrLiAKU28gZ2V0IHNvbWUgYmF0dGVyaWVzLiAKVG9tR0VSIHUKSGUgc3RhcnRlZCB0aGUgY2h1cmNoIGFuZCBpdCBncmV3LiBXaGF0IEkgaGVhcmQsIGFuZCB0aGlzIGlzIG5vdCBnb3NwZWwgc28gdG8gc3BlYWssIGlzIGhlIGhhZCBhIG11Y2ggZGlmZmVyZW50IGlkZWEgYWJvdXQgdGhlIGRpcmVjdGlvbiB0aGUgY2h1cmNoIHNob3VsZCBiZSBnb2luZy4gCk15IHR1YiBvZiBDb2xvZ25lIFJ1c3NlIGlzIG9uIGl0cyBsYXN0IGxlZ3MuIFRoaXMgaXMgb25lIG9mIHRoZSBmaXJzdCBzb2FwcyBJIGJvdWdodCBzbyBJJ20gc2FkIHRvIHNlZSBpdCBnby4gSSdtIGNvbnNpZGVyaW5nIHJlcGxhY2luZyBpdCwgYnV0IEknbSBzb3J0IG9mIG9uIGEga2ljayByaWdodCBub3cgb2YgcmVkdWNpbmcgbXkgZGVuLiAKQWx0aG91Z2ggdGhleSBsaXZlZCBodW5kcmVkcyBvZiBtaWxlcyBhcGFydCB0aGV5IGtuZXcgZWFjaCBzbyB3ZWxsIHRoYXQgeW91IHdvdWxkIGhhdmUgdGhvdWdodCB0aGV5IGxpdmVkIG5leHQgZG9vciB0byBvbmUgYW5vdGhlci4gCkkgbm90IHNheWluZyB0aGF0IEkgdGhpbmsgRGlzbmV5IHNob3VsZCBtYWtlIGEgY29tcGxldGVseSBTYW1vYW4gc3RvcnksIHRoZW4gYSBjb21wbGV0ZWx5IE1hb3JpIHN0b3J5IGV0YyBldGMgdW50aWwgYWxsIGN1bHR1cmVzIGFyb3VuZCB0aGUgd29ybGQgaGF2ZSBoYWQgYSBjaGFuY2UgdG8gdGVsbCBhIHN0b3J5LCBidXQgTW9hbmEgaXMgbm90IGNvbXBsZXRlbHkgYW55IGN1bHR1cmUsIG5vciBpcyBpdCB0cnVseSAiYSBQYWNpZmljIHN0b3J5IiBiZWNhdXNlIGl0IGRvZXNuIHRlbGwgYSBzaW5nbGUgUGFjaWZpYyBzdG9yeSwgaXQga2luZCBvZiB0ZWxscyB0aGVtIGFsbCAoYnV0IGRvZXNuIEkgZG9uIGtub3cgaWYgdGhhdCBtYWtlcyBzZW5zZSB0byBhbnlvbmUgZWxzZSwgYnV0IHRoYXQgcHJvYmFibHkgdGhlIGJlc3QgSSBjYW4gY29tZSB1cCB3aXRoLiAKTXkgcXVlc3Rpb24gc3RhcnRzIHdpdGggdGhhdC4gMS4gCkNlcnZpY2FsIEZhY2V0IGpvaW50IGNhcHN1bGVzClNvdXJhdiBHYW5ndWx5OiBCYXNlZCBvbiB0aGUgcmVjZW50IGF0aGxldGljaXNtIGhlIGhhcyBzaG93biwgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGhpcyBjYXJlZXIsIEdhbmd1bHkgd2lsbCBiZSBhc2tlZCB0byBwZXJmb3JtIHNvbWUgYWNyb2JhdGljIGZlYXRzIHNvIHdlIGNhbiBhbGwgYmUgY29udmluY2VkIHRoZSBvbiBmaWVsZCBkaXNwbGF5cyB3ZXJlbid0IGNhbWVyYSB0cmlja3MuIFRoZXNlIHdpbGwgaW5jbHVkZSBzdGFuZGFyZCBtb3ZlcyBsaWtlIHN0YW5kaW5nIG9uIGhpcyBoYW5kcyB3aGlsZSByZWNpdGluZyB0aGUgSVBMJ3MgY29uZmlkZW50aWFsaXR5IGNsYXVzZSwgc29tZXJzYXVsdGluZyBvdmVyIGEgdGFibGUsIGFuZCBwbGF5aW5nIGZldGNoIHdpdGggU2hhaHJ1a2ggS2hhbi4KSSBoYWQgcGVvcGxlIHRlbGwgbWUgYWxsIHNvcnRzIG9mIHJpZGljdWxvdXNseSBsb3cgcHJpY2VzIHRoZXkgcGFpZCBmb3IgdGhlaXIgInRvdGFsIHJlbW9kZWwiICwgYnV0IGFmdGVyIG15IG93biBleHBlcmllbmNlLCBhbmQgaW4gcmVhZGluZyB0aHJlYWRzIG9uIHRoaXMgc3ViIGxpa2UgeW91ciBvd24gSSd2ZSByZWFsbHkgY29tZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0IGVpdGhlciB0aG9zZSBmb2xrcyBwYWlkIGZvciBhIHNoaXR0eSBoYWxmIGFzcyBqb2IsIG9yIGFyZSBqdXN0IGZ1bGwgb2Ygc2hpdC4gClNpLCBwYXIgaGFzYXJkLCB2b3VzIG4nYXZleiBqYW1haXMgZW50ZW5kdSBwYXJsZXIgZGUgY2UgbGl2cmUgKGVzdCBjZSBwb3NzaWJsZSA/ISkgb3UgcXVlIHZvdXMgbidhdmV6IGphbWFpcyBldSBsJ29jY2FzaW9uIGRlIGxlIGZldWlsbGV0ZXIsIHNhY2hleiBxdWUgYydlc3QgdW4gYWJjZGFpcmUgdHJzIGZhY2lsZSBkJ2FjY3MgcG91ciBmYWlyZSBsYSBwYWl4IGF2ZWMgbGEgbm91cnJpdHVyZSBldCBzb3J0aXIgZGVzIGRpa3RhdHMsIHJnaW1lcyBldCBpbmpvbmN0aW9ucyBkZSB0b3V0ZXMgc29ydGVzLiBDZXQgYWJjZGFpcmUgY29tcHJlbmQgMTI4IG1vdHMgZXQgcG91ciBxdWUgY2VsYSBzb2l0IHZyYWltZW50IGNvbmNyZXQsIGxlcyB2b2ljaSA6Ckl0IGxpbWl0cyB0cmFkaW5nIHRvIGEgZ3JvdXAgb2YgYXBwcm92ZWQgcGFydGljaXBhbnRzIGFuZCBiYXJzIGRlYWxlcnMgd2hvIGNvdWxkIGxlYWsgc2VjcmV0cy4gClllcywgdGhlcmUgY2VydGFpbmx5IGlzIGEgaHVnZSBlZmZlY3QgZnJvbSB0aGUgYnJhaW4sIGJ1dCB0aGF0IGlzIG1vcmUgYWJvdXQgcHVzaGluZyB0aHJvdWdoIHRoZSBwYWluIGFuZCBmYXRpZ3VlIGJhcnJpZXJzLiBUaG9zZSBiYXJyaWVycyBvY2N1ciBhIGxvdCBsYXRlciBvbiB0aGVzZSBwZW9wbGUgdGhhbiB0aGUgYXZlcmFnZSBwZXJzb24gdGhvdWdoCjEuIApLZWVwIGluIG1pbmQgdGhhdCBpdCdzIG5vdCBsaWtlIHRoZXJlIGlzIGEgV2FsbWFydCBqdXN0IGRvd24gdGhlIHN0cmVldCBmcm9tIENhc3RsZSBCbGFjaywgdGhlIGJyb3RoZXJzIGFyZW4ndCBnb2luZyB0byBiZSBydW5uaW5nIG91dCBvbiBzaG9wcGluZyB0cmlwcy4uIApDb2xlIHdhcyBib3JuIGluIE1hcm5lLCBNaWNoLiwgaW4gMTkwOSBhbmQgd2FzIGRyaXZpbmcgYnkgYWdlIDEwLiAKQnVycm91Z2hzIGxlYXJucyBob3cgSnVsaWFuIDV0aCByZW1haW5lZCBvbiB0aGUgTW9vbiBmb3IgYSBkZWNhZGUgYmVmb3JlIHJldHVybmluZyB0byBFYXJ0aCBpbiAyMDM0IHdpdGggaGlzIGx1bmFyIHdpZmUgTmFoIGVlIGxhaC4gVGhlaXIgc29uIEp1bGlhbiA2dGggd2FzIGJvcm4gaW4gMjAzNi4gSW4gMjA1MCBhIHZhc3QgaW52YXNpb24gZm9yY2Ugb2YgbWlsbGlvbnMgb2YgS2Fsa2FycyBhbmQgVmEgR2FzIGxlZCBieSBPcnRoaXMgY2FtZSB0byBFYXJ0aCBhbmQgZGVzdHJveWVkIHRoZSBjaXRpZXMgb2YgV2FzaGluZ3RvbiBhbmQgTG9uZG9uLiBBcyBPcnRoaXMgaGFkIHNlcnZlZCBpbiB0aGUgSW50ZXJuYXRpb25hbCBQZWFjZSBGbGVldCBoZSBrbmV3IGhvdyB0byBkZWZlYXQgdGhlIEZsZWV0LCBkZXN0cm95aW5nIGFsbCB0aGVpciBzaGlwcyB1bnRpbCBKdWxpYW4gNXRoIHJhbW1lZCBPcnRoaXMnIGZsYWdzaGlwLCBraWxsaW5nIHRoZW0gYm90aC4gT3J0aGlzJyBoYWxmIEthbGthciBzb24gT3IgdGlzIHN1cnZpdmVkLiBUaGUgS2Fsa2FycywgZGlyZWN0aW9ubGVzcywgbmV2ZXJ0aGVsZXNzIGltcG9zZWQgYSBzYXZhZ2UgcnVsZSBvbiBFYXJ0aCBpbiB0aGUgZ2VuZXJhdGlvbnMgYmVmb3JlIEp1bGlhbiA5dGggd2FzIGJvcm4uIEluIHRoZSBnZW5lcmF0aW9ucyBzaW5jZSB0aGUgaW52YXNpb24gZmV3ZXIgbWFjaGluZXMgd29yayBhcyBubyBvbmUgaGFzIHRoZSBrbm93bGVkZ2UgdG8gcmVwYWlyIGFueXRoaW5nLCBub25lIG9mIHRoZSBzcGFjZXNoaXBzIE9ydGhpcyBkZXNpZ25lZCByZW1haW4gYW5kIG5vIG9uZSBjYW4gYnVpbGQgYW55IG5ldyBvbmVzLCBtZWFuaW5nIG5vIG1vcmUgS2Fsa2FycyBjYW4gY29tZSB0byBFYXJ0aCBidXQgbmVpdGhlciBjYW4gdGhleSBsZWF2ZS4KSW1tYUZyYWNraW5XaXphcmQgdQo4LiBUaGUgaGl0IHBhcmFkZQpLaXJrLCB0aGUgZ2xvYmFsIERlbHBoaSBwYW5lbCBpbmNsdWRlZCBmcm9tIHRoZSBjaGlyb3ByYWN0aWMgcHJvZmVzc2lvbiwgdGhlIEFsbGlhbmNlIGZvciBIZWFsdGggUHJvbW90aW9uLCB0aGUgRm9ydW0gZm9yIEhlYWx0aCwgdGhlIEJvbmUgYW5kIEpvaW50IERlY2FkZSwgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24sIHRoZSBJbnRlcm5hdGlvbmFsIFJlZCBDcm9zcywgV29ybGQgU3BpbmUgQ2FyZSBhbmQgbWFueSBpbnRlcm5hdGlvbmFsIGFuZCBuYXRpb25hbCBwYXJ0bmVycy4gCkJVVCBpZiBJIGFtIGFsaXZlIGFuZCBjb25zY2lvdXMsIHRoZW4gaXQgaXMgZHVlIHRvIGEgc2VyaWVzIG9mIHN1Y2Nlc3NmdWwgaGFsbHVjaW5hdGlvbnMgY3JlYXRlZCB0byBmdXJ0aGVyIG15IGJvZHkgYW5kIGFsbG93IG1lIHRvIGxpdmUgbG9uZ2VyIGFuZCByZXByb2R1Y2UuIFNlcmlvdXNseS4gClllYWgsIHBpIGlzIG9uZSBvZiB0aG9zZSBteXN0ZXJpb3VzIHRoaW5ncyB0aGF0IGp1c3Qga2VlcHMgcG9wcGluZyB1cCBpbiB0aGUgdW5pdmVyc2UsIGxpa2UgUSBmcm9tIFN0YXIgVHJlay4gSW4gdGhpcyBjYXNlLCBhc3N1bWluZyB0aGF0IHRoZSBwb3NpdGlvbiBvZiB0aGUgcGFwZXIgY2xpcHMgeW91IGRyb3BwZWQgaXMgY29tcGxldGVseSByYW5kb20sIGFsbCBvZiB0aGVpciBhbmdsZXMgYW5kIGxvY2F0aW9ucyB3aWxsIHRlbmQgdG8gZXZlbiBvdXQuIEluIG11Y2ggdGhlIHNhbWUgd2F5IHRoYXQgY29pbiBmbGlwcyB3aWxsIHRlbmQgdG8gZXZlbiBvdXQgdG93YXJkIGFuIGVxdWFsIG51bWJlciBvZiBoZWFkcyBhbmQgdGFpbHMsIGV2ZW4gdGhvdWdoIGVhY2ggaW5kaXZpZHVhbCBmbGlwIHJlc3VsdCBpcyByYW5kb20uClRoZXkgdG9vIGJ1c3kgZWF0aW5nIGxpa2Ugcm95YWx0eSBhbmQgZ29pbmcgb3V0IG9uIGRhdGVzLCB3aGljaCBDIGlzIGFsc28gcGFydGlhbGx5IGZpbmFuY2luZyBiZWNhdXNlIGhlIGhhcyB0byBwYXkgJDIwMCBhIHBheWNoZWNrIGZvciBncm9jZXJpZXMuIApJIHdhcyBhdCBhIGNvbWljIGNvbiB3aXRoIGEgYnVkZHkgb2YgbWluZS4gT25lIGRheSB3ZSB3ZXJlIHdhbGtpbmcgYXJvdW5kIHRoZSBjaXR5IHRoZSBjb24gd2FzIGluIGxvb2tpbmcgZm9yIGEgcGxhY2UgdG8gZWF0IHRoYXQgd2Fzbid0IHBhY2tlZCB3aXRoIHBlb3BsZS4gCkxhc3QgU3VuZGF5LCBDaGVuZXkgY29uZmVzc2VkIHRvIHRvcnR1cmUgb24gQUJDICJUaGlzIFdlZWsuIiB3YXMgYSBiaWcgc3VwcG9ydGVyIG9mIHdhdGVyYm9hcmRpbmciIGtlZXBzIHBsYXlpbmcgb3V0IGluIG15IGhlYWQsIHRoZSBzbXVnbmVzcyBvdmVyIGEgdGVjaG5pcXVlIHRoYXQgQmFyYWNrIE9iYW1hIGFuZCBldmVyeSBvdGhlciBwZXJzb24gZXhjZXB0IHRoZSBCdXNoaWVzIGhhcyBkZWZpbmVkIGFzIFRPUlRVUkUgbWFkZSB0aGUgbW9uc3RlcnMgdW5kZXIgdGhlIGJlZCByYXR0bGUgYW5kIHJvYXIuIFRoZSBDaGVuZXkgTW9uc3RlciBhbmQgaXRzIHNwYXduIHdpbGwgcHJvYmFibHkgbmV2ZXIgYmUgY29udGFpbmVkLi4gCkh5ZHJvY2hsb3JpYyBhY2lkIHN1cHBsZW1lbnRzIGZvciBoZWFsdGgKTW9yZSB0aGFuIG9uZSBzYWlkIHRoYXQgaGUgd291bGQgc2F5IGhlbGxvIHRvIGhpbSBubyBoZWxsbyBiYWNrLCBubyB3YXZlIGJhY2suLiAKWW91IGNhbiBtYWtlIGFzIG1hbnkgc2FuZGJveCBwYWdlcyBhcyB5b3UgbmVlZCwgYnV0IHdlIHJlY29tbWVuZCB0aGF0IHlvdSBrZWVwIHRoZSBudW1iZXIgcmVhc29uYWJsZS4gCkkgZG9uIHRoaW5rIHlvdSB3b3VsZCBub3RpY2UgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBEIGFuZCBFLCBqdXN0IGFzIEkgZG9uIHRoaW5rIHlvdSB3b3VsZCBub3RpY2UgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBWUzEgYW5kIGV5ZSBjbGVhbiBTSTEvVlMyLiBJIHJlY29tbWVuZGVkIHRoZSBEIGJlY2F1c2UgeW91IHNlZW1lZCB0byByZWNvZ25pemUgdGhhdCB5b3UgbWlnaHQgYmUgYWltaW5nIHRvbyBoaWdoIGluIGNvbG9yIGFuZCBjbGFyaXR5LCBidXQgeW91IHdhbnRlZCB0aGUgYmVzdC4gQSBEIFZTMiBpcyBiZXR0ZXIgYXQgYmVpbmcgdGhlIGJlc3QgdGhhbiBhbiBFIFZTMSBiZWNhdXNlIGl0IG1heGVzIG91dCB0aGUgY29sb3Igc2NhbGUuLiAKVGhyZWUgdGltZXMgYSB5ZWFyLCBBY2NlbnR1cmUgcmVjcnVpdHMgYSBjb2hvcnQgb2YgTlBvd2VyIGdyYWR1YXRlcywgYSBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbiB0aGF0IGxhdW5jaGVzIHVuZGVyc2VydmVkIHlvdXRoIGludG8gY2FyZWVycyBpbiB0aGUgSVQgc2VjdG9yLCBwbGFjaW5nIHRoZW0gaW4gYSBzcGVjaWFsaXplZCA2IG1vbnRoIGludGVybnNoaXAgYXMgYW4gQWNjZW50dXJlIFRlY2hub2xvZ3kgQW5hbHlzdCBpbiB0aGUgb3JnYW5pemF0aW9uJ3MgVGVjaG5vbG9neSBEZXZlbG9wbWVudCBQcm9ncmFtICAgaW50ZXJucyBhcmUgYWxzbyBnaXZlbiB0aGUgb3Bwb3J0dW5pdHkgdG8gYXR0ZW5kIHRyYWluaW5nIGF0IEFjY2VudHVyZSdzIGZhY2lsaXR5IGluIFN0LiBDaGFybGVzLCBJbGxpbm9pcy4gCkkgZ2V0IHRoYXQgcmFjaXNtIGlzIGJhZC4gSSBkb24gdGhpbmsgSSByYWNpc3QgYnV0IEkgZG9uIGtub3cgbWFuLiBJIGhhdmUgbm90aGluZyBhZ2FpbnN0IHBlb3BsZSBiYXNlZCBzb2xleSBvbiB0aGUgY29sb3Igb2YgeW91ciBza2luLiAKWW91ciB2ZXJ5IHlvdW5nIGZyaWVuZCBnb3Qgc2V4dWFsbHkgaGFyYXNzZWQgYnkgYSBkaW5vc2F1ciB1c2luZyBkaW5vc2F1ciB0ZWNobm9sb2d5LiBJdCBhYnNvbHV0ZWx5IGdyb3NzLCBidXQgaXQgbWF5IGNvbWZvcnQgaGVyIHRvIGtub3cgdGhhdCB0aGVzZSBzYWQgYmFzdGFyZHMgb25jZSByb2FtZWQgdGhlIGVhcnRoIGluIGZhciBncmVhdGVyIG51bWJlcnMuIApUaGUgcGlsbCBpcywgb2YgY291cnNlLCBnaXZlbiBieSBtb3V0aC4gCkV4cGVyaWVuY2UgUmVkZGl0IGFkcyBmcmVlR2V0IFJlZGRpdCBQcmVtaXVtIGZvciB5b3Vyc2VsZiB0byBlbmpveSBSZWRkaXQgYWRzIGZyZWUgYW5kIHN1cHBvcnQgdGhlIGNvbW11bml0eSB0aGF0IGJyaW5ncyB5b3UgdGhlIGhvdHRlc3QgbmV3cywgZW50ZXJ0YWlubWVudCwgYW5kIGNhdCBwaG90b3MgZXZlcnkgZGF5LCBhbGwgZGF5LiBZb3VyIGNvbnRyaWJ1dGlvbiB3aWxsIGhlbHAgdXMgcmVtYWluIHRydWx5IGluZGVwZW5kZW50LgpKdXN0IGJlY2F1c2UgdGhhdCB0aGUga2luZCBvZiBwZW9wbGUgeW91IGhhbmcgb3V0IHdpdGggZG9lc24gbWVhbiBpdCBzdGFuZGFyZC4gSSB0b28gYW0gaW50ZWdyYXRlZCBpbnRvIEtvcmVhbiBzb2NpYWwgZ3JvdXBzIGluIG15IGNhc2UgYWx3YXlzIChub3QgZXZlbiAidXN1YWxseSIpIGJlaW5nIHRoZSBvbmx5IGZvcmVpZ25lci4gCkFkdmlzaW5nIHBlb3BsZSB0aGF0IHNtb2tpbmcvbmljb3RpbmUgaXMgYSAiZ29kc2VuZCIgZm9yIGFueGlldHkgYW5kIGRlcHJlc3Npb24gaXMgaWdub3JhbnQgYW5kIGRhbmdlcm91cy4KQWZ0ZXIgaGVhcmluZyB0aGUgd291bmRzIGRlc2NyaWJlZCwganVyb3JzIGFsc28gdmlld2VkIGdyYXBoaWMgYXV0b3BzeSBwaG90b3MsIGFuZCB0aGVuIFphbmUgcGxhY2VkIHN0aWNrZXJzIG9uIGEgbWFubmVxdWluIGluIGNvdXJ0IHRvIG1hcmsgZWFjaCBlbnRyYW5jZSBhbmQgZXhpdCB3b3VuZC4uIAooRXNzZW50aWFsbHksIHlvdXIgbGFyeW54IGJsb2NrcyB5b3VyIHRyYWNoZWEgYW5kIHlvdSBjYW4gYnJlYXRoLiAKSGUgZmlndXJlZCBpIGhhZCB3YWFhYXkgbGVzcyBjaGlwcyB0aGFuIGkgZGlkLiBUdXJucyBvdXQgaGUganVzdCBoYWQgbWUgY292ZXJlZC4gClNpbXBzb24gZG9taW5hbmRvIGEgbm90Y2lhPyBHZW9yZ2UgQnVzaCBlc3QgdGVudGFuZG8gcHJvdm9jYXIgbyBBcG9jYWxpcHNlIGUgY2FwdHVyYSBvIG11bmRvIHBhcmEgbyBjcmlzdGlhbmlzbW8sIHBhcmEgcXVlIGVsZSBwb3NzYSBhdGVuZGVyIGEgSmVzdXMgQ3Jpc3RvIGVtIEplcnVzYWxtICAgZmFsYXIgc29icmUgYWxwaW5pc3RhcyBzb2NpYWlzLiBDb21vIHBvZGVyaWFtIDMgYmlsaGVzIGRlIHBlc3NvYXMgc2VyIHRvIGJyYWlud2FzaGVkIHF1ZSBlbGVzIGFjcmVkaXRhbSBxdWUgZ3VlcnJhIG51Y2xlYXIgZG8gbXVuZG8gMyAgbyBjYW1pbmhvIHBhcmEgYSBwYXogZXRlcm5hIG5hIHRlcnJhIHF1YW5kbyB0b2RvIGNpZW50aXN0YSBzYWJlIHF1ZSAgbyBjYW1pbmhvIHBhcmEgYSBleHRpbm8gZGEgdmlkYSBuYSB0ZXJyYSBwYXJhIHNlbXByZT8gQSBxdWVzdG8gbm8gICJTZXIgcXVlIG5zIGV2b2x1bW9zPyIsIG1hcyAiSXIgcG9kZW1vcyBldm9sdWlyIHBhcmEgdW1hIGVzcGNpZSBwYWNmaWNhIHBhcmEgYWRhcHRhciBhIG5vc3NhIG11ZGFuYSBkZSBjaXJjdW5zdG5jaWFzLCA1MC4wMDAgYm9tYmFzIGRlIDEwMCBtZWdhdG9ucyBudWNsZWFyZXMgbmEgdGVycmEgaG9qZT8iIE9zIGRvaXMgZW0gSGlyb3NoaW1hIGUgTmFnYXNha2kgZXJhbSBmb2dvcyBkZSBhcnRpZmNpbywgNTAgcXVpbG90b25zLiAKTWFzY3VsaW5lIGVuZXJneSBsaWtlcyB0byB0YWtlIHRoZSBoZWxtIGFuZCBiZSB0aGUgbGVhZGVyIG9mIHRoZSBwYWNrLCB3aGlsZSBmZW1pbmluZSBlbmVyZ3kgaXMgZmFjaWxpdGF0aXZlLCBudWRnaW5nIGZyb20gYmVoaW5kLiBFbWVyZ2VuY3kgc2l0dWF0aW9ucyBjYWxsIGZvciBhIGxlYWRlciB0byB0YWtlIGNoYXJnZSBhbmQgbWFrZSBhIGRlY2lzaXZlIGRlY2lzaW9uLiAKV2hhdCB5b3Ugc2F5aW5nIGlzbiB0b28gY3Jhenkgb2YgYW4gaWRlYS4gCk15IGluIHBlcnNvbiBleHBlcmllbmNlIHdhcyBhcyBiaWcgYSBzd2VydmUgYXMgaWYgc2hlIGhhZCBhIGZyZWUgcmFuZ2UgcGV0IGVtdSBqdXN0IG9mZiBjYW1lcmEgdGhlIHdob2xlIHRpbWUsIGFuZCBqdXN0IG5ldmVyIG1lbnRpb25lZCBpdCAgIHdoeSB3b3VsZCBJIGFzayBiZWZvcmVoYW5kIGlmIHNoZSBoYWQgYW4gZW11PyBCeSB3aGljaCBJIG1lYW4gaGFkIG5vIHJlYXNvbiB0byBzdXNwZWN0IHRoYXQgc2hlIHdhcyBhY3R1YWxseSwgbGl0ZXJhbGx5LCBwYXJhbm9pZCBhbmQgbWVudGFsbHkgaWxsLCBhbmQgaGFkIG5vIGlkZWEgdGhhdCBJIHNob3VsZCB0cnkgdG8gZGV0ZWN0IHRoYXQsIG11Y2ggbGVzcyBob3cuLiAKV2hhdC4gCkkgd2FzIGxpa2UgdGhhdCBkb2VzbiBtYWtlIHlvdSBhIGdvb2QgZ3V5LCB0aGF0IG1ha2VzIHlvdSBiYWQgYXQgaG9sZGluZyB5b3VyIGxpcXVvci4KVGhlcmUgYXJlIHNlcmlvdXMgZGl2aWRlcyBhY3Jvc3MgdGhlIHBvbGl0aWNhbCBzcGVjdHJ1bSBhbmQgbWlzaW5mb3JtYXRpb24gcGxheXMgYSBsYXJnZSByb2xlIGluIGV4YWNlcmJhdGluZyB0aGUgc2l0dWF0aW9uLiBJIGJlbGlldmUgY2FsbWVyIGhlYWRzIG1ha2luZyBpbmZvcm1lZCBkZWNpc2lvbnMgY2FuIGFuZCBtdXN0IHByZXZhaWwuIEkgZmlybWx5IGJlbGlldmUgdGhhdCBlbmdhZ2VkIGFuZCBpbmZvcm1lZCBpbmRpdmlkdWFscyB3b3JraW5nIHRvZ2V0aGVyIHRvIGRvIGdvb2QgdGhpbmdzIGNhbiBtYWtlIGEgc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSB3aGVuIHdvcmtpbmcgdG93YXJkcyBhIGNvbW1vbiBnb2FsLgpNY0RvbmFsZCB3YXMgYXQgZmF1bHQgYmVjYXVzZSB0aGV5IHdlcmUgc2VydmluZyB0aGVpciBjb2ZmZWUgYXQgMjEwIGRlZ3JlZXMgaW5zdGVhZCBvZiAxODAgZGVncmVlcyBiZWNhdXNlIGl0IG1lYW50IHRoZWlyIGNvZmZlZSBzdGF5ZWQgaG90IGFuZCBmcmVzaCBsb25nZXIsIHdoaWNoIGFsbG93ZWQgdGhlbSB0byBzYXZlIG1vbmV5IGJ5IG1ha2luZyBsZXNzIGJhdGNoZXMgb2YgY29mZmVlIHBlciBkYXkuIE1jRG9uYWxkIGtuZXcgaXQgd2FzIHVuc2FmZSBiZWNhdXNlIHRoZXkgaGFkIGFscmVhZHkgaGFkIHNldmVyYWwgb3RoZXIgY29tcGxhaW50cyBhbmQgc2V0dGxlbWVudHMgYWJvdXQgaG90IGNvZmZlZSBidXJucyBwcmlvciB0byB0aGlzLi4gCkZhY2luZyBlbGltaW5hdGlvbiwgTHVvbmdvIHdlbnQgYWxsIGluIHdpdGggQWNlL1F1ZWVuIG9mZiBzdWl0IGFnYWluc3Qgc29tZW9uZSB3aXRoIGEgcGFpciBvZiBzZXZlbnMuIApDaHJpc3RtYXMgTGFnQSB3ZWFrIGhvbGlkYXkgcXVhcnRlciBvbmx5IGhlaWdodGVuZWQgdGhlIG5lZWQgZm9yIGNoYW5nZS4gQ29tcGFyYWJsZSBzYWxlcyB3ZXJlIGRvd24gMyBwZXIgY2VudCBhdCB0aGUgcmV0YWlsZXIsIGRyYWdnZWQgZG93biBieSBhIDcgcGVyIGNlbnQgZGVjbGluZSBmcm9tIGluIHN0b3JlIHNhbGVzLiBJdHMgUElOSyBicmFuZCwgb25jZSBhIGZhdm9yaXRlIG9mIHlvdW5nZXIgc2hvcHBlcnMsIHNhdyBhIGxvdyBkb3VibGUgZGlnaXQgc2FtZSBzdG9yZSBzYWxlcyBzbGlkZSBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIsIHdoaWxlIGxpbmdlcmllIHdhcyBmbGF0IGluIHdoYXQgbm9ybWFsbHkgYSBiaWcgZ2lmdGluZyBwZXJpb2QuIEFjcm9zcyBhbGwgY2F0ZWdvcmllcywgaW5jcmVhc2VkIGRpc2NvdW50aW5nIGludGVuZGVkIHRvIGRyaXZlIHRyYWZmaWMgbWVhbnQgbWFyZ2lucyB0b29rIGEgbWFqb3IgaGl0LgpFdmVyIHRyaWVkIGNvbnRhY3RpbmcgdGhlbT8gSSBkaWQgcmVjZW50bHksIHdoZW4gSSB3YXMgY2hlYXRlZCBhdCBhbiBvbmxpbmUgcG9rZXIgc2l0ZSAoYW5kIGhhdmUgdGhlIGV2aWRlbmNlIHRvIHByb3ZlIGl0KS4gCkJ1dCBpdCBvbmx5IHdoZW4gd2UgZ28gb3V0LiAKSXQgaXMgb3VyIGJlbGllZiB0aGF0IHRvZ2V0aGVyLCBOSEEsIHNjaG9vbHMgYW5kIGVkdWNhdG9ycywgcHJvdmlkZXJzIGFuZCBhbGxpZWQgaGVhbHRoIHByYWN0aXRpb25lcnMgY2FuIHRyYW5zZm9ybSBoZWFsdGhjYXJlIHRocm91Z2ggZWR1Y2F0aW9uLCB0cmFpbmluZyBhbmQgY2VydGlmaWNhdGlvbiwgd2l0aCB0aGUgZ29hbCBvZiBjb25zaXN0ZW50bHkgaW1wcm92aW5nIHBhdGllbnQgb3V0Y29tZXMuLiAKTm93aGVyZSBlbHNlIGNhbiB5b3UgZ2V0IHRoZSBzYXRpc2ZhY3Rpb24gb2YgcGxhbnRpbmcgdHJlZXMsIGRpZ2dpbmcgaG9sZXMsIG5haWxpbmcgYm9hcmRzLCBpbnN0YWxsaW5nIHJvb2ZzLCBhbmQgcGFpbnRpbmcgYSBob3VzZSB3aGlsZSBoZWxwaW5nIHNvbWVvbmUgaW4gbmVlZC4gCkR1YWwgd2llbGRpbmcgaXMgcHJldHR5IGdvb2QgYnV0IGdpdmVzIHN1YnN0YW50aWFsIGF0dGFjayBwZW5hbHRpZXMgdW50aWwgeW91IGhhdmUgYWxsIHRocmVlIGZlYXRzLCB3aGljaCB5b3UgY2FuIGRvIHVudGlsIGxldmVsIDkgSUlSQy4gClNvdW5kcyBraW5kYSBjb3p5LCByaWdodD8gRXhjZXB0IHRoYXQgeWVsbG93IGZsYWcgd2l0aCB0aGUgRG9uIFRyZWFkIG9uIE1lIGlzIHRoZSBHYWRzZGVuIGZsYWcsIHVzZWQgYnkgYXJtZWQgbWlsaXRpYSBhcm91bmQgdGhlIGNvdW50cnkuIApBbHNvLCBpZiB0aGV5IHdlcmUgdG8gZ2l2ZSB1cyBhIE1UIFpSMiwgdGhlIGNvc3Qgd291bGQgYmUgc28gaGlnaCB5b3UgbmV2ZXIgd2FudCB0byByaXNrIGJlYXRpbmcgaXQgdXAgb24gdGhlIHRyYWlsLiBTdXJlLCB0aGVyZSBnb2luZyB0byBiZSB0aGUgMjAgb3Igc28gZHVkZXMgb24gSW5zdGFncmFtIHRoYXQgYXJlIHByb3ZpbmcgbWUgd3JvbmcsIGJ1dCB0aG9zZSBhcmVuIGFjY3VyYXRlIHJlcHJlc2VudGF0aW9uYSBvZiB0aGUgcG9wdWxhdGlvbi4KVGhpcyAibm90aGluZyIgaXMgYXZhaWxhYmxlIGluIGEgc2xvdCBvZiBlYXJ0aCAyIG1pbGVzIGRlZXAsIGRvY3VtZW50aW5nIGFsbCB0aGF0IGhhcyBldmVyIGJlZW4uIFRoZSBmYWN0IHRoYXQgaXQgZG9lcyBpdCB3aXRoIHN1Y2ggYXJ0LCB3aGltc2ljYWwgY3VydmVzIGFuZCBjb2xvcnMsIHdpdGggYm90aCBHcmFuZCBhbmQgc2xvdCBjYW55b25zLCBpcyBub3RoaW5nIGJ1dCBzb21lIHNvcnQgb2YgbWFnaWMgd2UgYXJlIHByaXZpbGVnZWQgdG8gb2JzZXJ2ZS4uIApTbyBpbiB0aGUgZW5kLCB0aGlzIG1vZGVsIGlzIG1vcmUgcHJvZml0YWJsZSB0byBWYWx2ZSB0aGFuIHRvIHRoZSAoYXZlcmFnZSkgY3VzdG9tZXIuIApUaGF0J3MgYWxsIHlvdSBuZWVkIHRvIHRoaW5rIGFib3V0LiBEb24ndCB0aGluayBhYm91dCB0aGUgbW9uZXkgYmFzaWNhbGx5IQpTdHVkaWVzIGhhdmUgc2hvd24gZ2lybHMgYXJlIGludGVyZXN0ZWQgaW4gY29tcHV0ZXIgc2NpZW5jZSBhbmQgU1RFTSBzdWJqZWN0cyB1bnRpbCBtaWRkbGUgc2Nob29sIGJlZm9yZSB0aGVpciBpbnRlcmVzdCB0YXBlcnMgb2ZmLCBTYW50b3Mgc2FpZC4gVGhlIGNlbnRlciB3YW50cyB0byBoZWxwIHRoZW0gc3RheSBvbiB0cmFjay4KT3IgdGhlIHJlZCBtaWdodCBpbnRpbWlkYXRlIHRoZSBjb21wZXRpdG9yIGluIHRoZSBzYW1lIHdheSB0aGF0IGxlc3MgZG9taW5hbnQgbWFuZHJpbGxzIG1heSBhdm9pZCBhcHByb2FjaGluZyB0aGVpciBsZWFkZXJzIHdpdGggY3JpbXNvbiBmYWNlcy4gWW91IHNlZSByZWQgeW91IGZlZWwgZmVhciBhbmQgeW91ciBsb3dlciBzdGF0dXMsIGFuZCB5b3VyIHRlc3Rvc3Rlcm9uZSB3aWxsIGRyb3AsIHNheXMgRWxsaW90LiAKSXQgcG9zc2libGUgYnV0IGl0IG9mdGVuIHZlcnkgZGlmZmljdWx0LCBlc3BlY2lhbGx5IG9uIGxhcmdlIHN0YWdlcyBhbmQgb3V0ZG9vciBzdGFnZXMuIFRoZSBzb3VuZCB0aGF0IHBlb3BsZSBvbiBzdGFnZSBoZWFyIGlzIG9mdGVuIHZlcnkgZGlmZmVyZW50IGZyb20gd2hhdCB0aGUgYXVkaWVuY2UgaGVhcnMgICBmb3IgZXhhbXBsZSB0aGUgbmF0dXJhbCByZXZlcmIgb2YgdGhlIGFyZWEgbWlnaHQgbWVzcyB1cCB0aGUgcmh5dGhtLCB0aGVyZSBhIHdlaXJkIGRlbGF5IGJldHdlZW4gdGhlIGF1ZGllbmNlIGF1ZGlvIGFuZCB0aGUgc3RhZ2UgYXVkaW8gaW4gbGFyZ2UgdmVudWVzLCBhbmQgb2Z0ZW50aW1lcyB5b3UgZG9uIHJlYWxseSBoZWFyIGFsbCB0aGUgaW5zdHJ1bWVudHMgcHJvcGVybHkgYW5kIGl0IGp1c3QgYSBidW5jaCBvZiBub2lzZSBldGMuIGV0Yy4KMS4gTUlMIE1vbSByZWxhdGVkIFBvc3RzIE9ubHkKSW4gd2hhdCBJIHdvdWxkIGRlc2NyaWJlIGFzIHRoZSBtb3N0IGludGVyZXN0aW5nIGFuZCBjZXJ0YWlubHkgdGhlIG1vc3Qgd2Fsa2FibGUgbmVpZ2hib3Job29kIG9mIFBhbmFtYSBDaXR5LCB5b3UgaGF2ZSBhIGRpdmVyc2UgY2hvaWNlIG9mIHdheXMgdG8gc3BlbmQgeW91ciB0aW1lLiAKVGhlIG9mZmVuc2UgaXMgYSBtZXNzISBUaGUgdHdvIHBlb3BsZSB0byBrZWVwIGFyZSBNb2xpbmEgYW5kIFdpbm4uIEV2ZXJ5b25lIGVsc2UgaXMgZXhwZW5kYWJsZS4gRHVyaGFtLCBoZSBhbiBhdmVyYWdlIGluZmllbGRlciBhdCBiZXN0IGFuZCBoaXMgYmF0dGluZyBhdmVyYWdlIGhhcyByZXZlcnRlZCBiYWNrIHRvIGhpcyBub3JtYWwgbGV2ZWwuIExld2lzLCBzcGVlZCBhbmQgdmVyeSBzaGFreSBpbiB0aGUgb3V0ZmllbGQgYW5kIGlmIHdlIGx1Y2t5IC4yNTAgQkEuIExvb2tpbmcgYXQgdGhlIGZhcm0gc3lzdGVtIHRoZXJlIGlzbiBtdWNoIHRvIGhvcGUgZm9yIGluIDIwMDgsIHdoaWNoIG1lYW5zIHdlcmUgYXJlIGdvaW5nIHRvIGJlIHN0dWNrIHdpdGggbW9yZSBiYWQgU2FiZWFuIHNpZ25pbmdzLiBTdXJlIGlmIEJhcnJ5IGlzIGdvbmUgdGhhdCBmcmVlcyAkMTggbWlsbGlvbiBkb2xsYXJzIGJ1dCB0aGVuIHRoZXkgc2lnbiBzb21lIGhhcyBiZWVuIGZvciAkMjAgbWlsbGlvbiAoZXg6QmVuaXRleiwgTW9ycmlzKSBhbmQgdGhlbiB3aGF0PyBUaGUgZmFjdCB0aGF0IHRoZSBmcmVlIGFnZW50IG1hcmtldCBmb3JjZXMgeW91IHRvIG92ZXJwYXkgZm9yIG1lZGlvY3JlIHRhbGVudCBtZWFucyB0aGF0IHlvdSBiZXR0ZXIgaGF2ZSBhIGdvb2QgZmFybSBzeXN0ZW0uIFRoZSBHaWFudCBuZWVkIHRvIGJpdGUgdGhlIGJ1bGxldCBhbmQgaGlyZSBzb21lIHJlYWwgdGFsZW50IHNjb3V0cyBhbmQgcmVidWlsZCB0aGVpciBzeXN0ZW0gZnJvbSB0aGUgYm90dG9tIHVwLiBPbiBhIGJyaWdodCBub3RlLCBhdCBsZWFzdCBhbGwgdGhvc2UgcGl0Y2hpbmcgZHJhZnQgY2hvaWNlcyBhcmUgc3RhcnRpbmcgdG8gcGF5IG9mZi4KQmlzIDEzLiBNcnogMjAxMCB3aXJkIGRpZXNlcyB3aWNodGlnZSAgRXZlbnQsIHdlbGNoZXMgZnIgZWluZSB3ZWx0d2VpdGUgYmVydHJhZ3VuZyBpbSBGZXJuc2VoZW4gYXVmZ2V6ZWljaG5ldCB3aXJkLCBuYWNoIDIwMDYgenVtIGVyc3RlbiBNYWwgd2llZGVyIGFuIGRpZXNlbSBiZWxpZWJ0ZW4gT3J0IG1pdHRlbiBhdWYgZGVtIGVyIENoYW1wcyBFbHlzZXMgc3RhdHRmaW5kZW4uIApGb3Igc29tZSByZWFzb24gbWF6ZGEgMyBhcmUgcmVhbGx5IG5vaXN5IGZyb20gd2luZCBub2lzZSBhdCBoaWdoIHNwZWVkIGFzIEkgaGF2ZSBib3RoIHRoZSBhbmQgMTMgbW9kZWxzLiAKP0FzIGZhciBhcyBmYW1pbHkgaXMgY29uY2VybmVkLCB0aGV5IHdlcmUgaW5pdGlhbGx5IHZlcnkgc2tlcHRpY2FsIGFib3V0IGl0LiBJdCB0b29rIG1lIGEgd2hpbGUgdG8gZWR1Y2F0ZSB0aGVtIGFib3V0IHBva2VyIGFuZCBtYWtlIHRoZW0gcmVhbGl6ZSB0aGF0IGl0IGlzIG5vdCB0aGUgZ2FtYmxpbmcuIAoiSSB0aGluayBpdCBzdGFydHMgd2l0aCBsaXN0ZW5pbmcgYW5kIEkgdGhpbmsgdGhlIG5vbiBibGFjayBhbmQgbm9uIGluZGlnZW5vdXMgY29tbXVuaXRpZXMgaW4gQ2FuYWRhIG5lZWQgdG8gcmVhbGx5IHRha2UgYSBzdGVwIGJhY2sgYW5kIGxpc3RlbiB0byBzdG9yaWVzLCIgaGUgc2FpZC4gCkkgYWx3YXlzIGxvdmVkIFRoZSBGbGFzaGJ1bGIgQXJib3JlYWwgZm9yIGl0cyBncmVhdCByaHl0aG1zLiBUaG91Z2ggbm90IGFsbCBvZiBpdCBpcyBsaXZlIGRydW1taW5nLCB0aGVyZSBhcmUgc29tZSBzb25ncyB3aXRoIGZhbnRhc3RpYyBkcnVtbWluZyBvbiB0aGVtLiBaYWNoIEhpbGwgZHJ1bW1pbmcgd2l0aCBIZWxsYSBpcyBhbHNvIGltcHJlc3NpdmUsIGFuZCBmb3Igc29tZXRoaW5nIGEgYml0IGRpZmZlcmVudCwgRGVhdGggR3JpcHMgYWxidW0gTmlnZ2FzIG9uIHRoZSBNb29uIGlzIGEgaGlwIGhvcCBhbGJ1bSB3aGVyZSB0aGUgaW50cnVtZW50YWxzIGFyZSBhbG1vc3QgZW50aXJlbHkgbWFkZSBmcm9tIFphY2ggdHJpZ2dlcmluZyBzYW1wbGVzIHdpdGggdiBkcnVtcy4gCkluc3RlYWQsIHNoZSdkIGxpa2UgdG8gc2VlIHBlb3BsZSBjb3ZlcmluZyB1cCBtb3JlIHRob3JvdWdobHkgdG8gYXZvaWQgaW4gZmxpZ2h0IGRlaHlkcmF0aW9uLiAKV2hlbiBldmVyeXRoaW5nIGlzIGEgYmV0LCBvdXIgYmV0dGluZyBzdHJhdGVneSBjYW4gb3B0aW1pemUgb3VyIGRlY2lzaW9uIG1ha2luZy4gWWV0IG91ciBzdHJhdGVneSBpcyBvZnRlbiBiYXNlZCBvbiBiZWxpZWZzIHRoYXQgY2FuIGJlIGJpYXNlZCBvciB3cm9uZy4gClVzZSB0aGlzIHRpbWUgdG8gd2F0Y2ggeW91ciBvcHBvbmVudHMsIGFuZCBnZXQgYSBmZWVsIGZvciB0aGUgd2F5IHRoZXkgYXJlIHBsYXlpbmcuIApIZSBkaWRuIHNlZSBtZS4uIApZb3UgYSBjcmltaW5hbC4gCkJyaWFuRjNEIHUKU2lpIHRvdGFsZSwgY2lvIGNvbXBsZXRhbWVudGUgcHJlc2VudGUgYSBjaSBjaGUgc3RhaSBmYWNlbmRvLiBJbiBxdWVzdG8gbW9kbyBkaXN0cnVnZ2kgaSB0dW9pIHNjaGVtaSBtZW50YWxpIGUgdGkgcHJlcGFyaSBhIGxpYmVyYXJlIGxlIHR1ZSBlbW96aW9uaSByZXByZXNzZSBzdGFkaW8gKDEwIG1pbnV0aSkuIApVc2luZyB0aGUgSW50ZXJuZXQgdG8gZmluZCBiYWNrIG1hc3NhZ2UgdG9vbHMgaXMgYWxzbyBiZW5lZmljaWFsIGJlY2F1c2UgaXQgYWxsb3dzIGJ1eWVycyB0byByZWFkIGN1c3RvbWVyIHJldmlld3MsIGNvbXBhcmUgcHJvZHVjdHMgYW5kIHJlYWQgYWJvdXQgd2hhdCB0aGUgdG9vbHMgYXJlIHVzZWQgZm9yLi4gCkFtYXpvbidzIGFkIGJ1c2luZXNzIHdhcyBzdHJlYW1saW5lZCB0aGlzIHllYXIsIHRvby4gRm9yIHllYXJzLCBBbWF6b24ncyBhZCBvZmZlcmluZ3Mgd2VyZSBhIGp1bWJsZSBvZiBzZXJ2aWNlcyB3aXRoIGRpZmZlcmVudCBhY3JvbnltcyBhbmQgcnVuIGJ5IHNlcGFyYXRlIHRlYW1zLiBUaGVyZSB1c2VkIHRvIGJlIEFtYXpvbiBNYXJrZXRpbmcgU2VydmljZXMga25vd24gYXMgQU1TLCBhbmQgQW1hem9uIE1lZGlhIEdyb3VwIGtub3duIGFzIEFNRywgYW5kIEFtYXpvbiBBZHZlcnRpc2luZyBQbGF0Zm9ybSBrbm93biBhcyBBQVAuIApJIGhhdmVuJ3QgcmVhbGx5IHNlZW4gaG93IHRoZSB0ZXJtIGlzIHVzZWQgdG8gc2h1dCBkb3duIGRpc2N1c3Npb25zLiAKTW1lIEJyaWdpdHRlIEJhcmdlcy4gSmUgc3VpcyBzdXJwcmlzZSBxdSdvbiBwbGFjZSBsYSBkaXNjdXNzaW9uIHN1ciBsZSB0ZXJyYWluIGRlIGwnZ2FsaXQgZGVzIGRyb2l0cy4gSWwgeSBhIGRldXggc2V4ZXMgZGlmZnJlbnRzLCBjb21wbG1lbnRhaXJlcywgcXVpIGRldnJhaWVudCBhdm9pciBkZXMgZHJvaXRzIGdhdXguIFMnaWwgeSBhIHVuIGNvbWJhdCAgbWVuZXIsIGMnZXN0IHBldXQgdHJlIGRhbnMgY2Ugc2VucyBxdSdpbCBmYXV0IGFsbGVyLCBwb3VyIGZhaXJlIG1pZXV4IHJlc3BlY3RlciBsZSBkcm9pdCBkZXMgZmVtbWVzLiBQb3VyIG1hIHBhcnQsIGoneSBzb3VzY3JpcmFpIHRvdGFsZW1lbnQuCkkgZG8gaGF2ZSBob3BlIHRoYXQgYm90aCBtaW5lIGFuZCBmdXR1cmUgZ2VuZXJhdGlvbnMgYXJlIHJhaXNlZCB0byBiZSBtb3JlIGFjY2VwdGluZyBvZiBvdGhlciBhbmQgdGhhdCBhdHRpdHVkZSBzaGlmdCB3aWxsIHNsb3dseSB0dXJuIHRoZSBzaGlwLiBCdXQgYXMgdGhlIGFydGljbGUgcG9pbnQgb3V0LCBldmVuIGFtb25nIHRoZSBtb3JlIGFjY2VwdGluZyBhbmQgbGliZXJhbCBBYm9yaWdpbmFsIGFyZSBvZnRlbiBleGVtcHRlZC4KKFRoZSBjYW5kaWRhdGVzIGFyZSBwYWlkIGZvciB0aGVpciB0aW1lLikuIApUaGUgYWQgZ2FtZSBmb3IgdGhlIG5ldyBEaXNuZXkgc2VyaWVzICJQYWlyIG9mIEtpbmdzIiBhcHBlYXJlZCBvbiBQb3B0cm9waWNhIGJlZ2lubmluZyBvbiBTZXB0ZW1iZXIgOSwgMjAxMC4gClRoZXJlIGlzIGJ1dCBJIGRvbid0IHJlbWVtYmVyLiBTdGF5aW5nIG9uIEZhY2Vib29rKHN0YXkgb24gdGhlIHdlYnNpdGUgSSBkaWRuJ3Qgd2VudCBhbnl3aGVyZSBlbHNlKSBhbmQgbG9va2luZyBmb3IgaXQgd2hpbGUgcGxheWluZyB0aGUgZ2FtZSwgeW91IHdvdWxkIHByb2JhYmx5IGZpbmQgdGhlIHN1cnZleS4gClRoZSBvbmUgcnVlbCB3aXRoIHNoaXJ0cyBhbmQgdGllcyBpcyB0aGF0IHRpZXMgbmVlZCB0byBoYXZlIG9uZSBjb2xvciB0aGF0IGluIHRoZSBzaGlydCwgc28gYSBtYXJjaGluZyBzaGFkZSBvZiBibHVlIG9yIGEgd2hpdGUgc3BvdC4gQnV0IGFzIGxvbmcgYXMgeW91IGdvdCBzb21lIHRpbWVzIHRoYXQgZ28gdG9nZXRoZXIgeW91IGJlIGdvbGRlbi4gCk9uY2UgdGhleSBjaGVjayB0byB5b3Ugb24gdGhlIHR1cm4gYmV0IGFib3V0IDMvNCBvZiB0aGUgcG90IGFuZCB0aGV5IHNob3VsZCBmb2xkLiBJZiB0aGV5IHN0YXJ0IHRvIGRvdWJsZSBiYXJyZWwgdGhleSBlaXRoZXIgaGF2ZSBpdCBvciBoYXZlIGNhdWdodCBvbiB0byB5b3UuIFlvdSBzaG91bGQgdGFrZSBub3RlIG9mIHRoZSBib2FyZHMgeW91IGZsb2F0IGFzIHdlbGwgYXMgaXQgbWF5IGhlbHAgdGhlaXIgaGFuZCBncmVhdGx5Li4gCklmIHlvdSBkb24ndCBnaXZlIHVwLCB5b3VyIGFjY291bnQgd2lsbCBiZSBkZXBvc2l0ZWQgaW4geW91ciBhY2NvdW50IGFuZCB0aGVuIHlvdSB3aWxsIGJlIGFibGUgdG8gcGxheSBqdXN0IGxpa2UgdGhlIGZyZWUgbW9uZXkgZ2FtZXMuIEl0J3Mgbm90IHdvcnRoIGl0IHJpZ2h0IG5vdy4gV2FpdCB1bnRpbCB0aGVyZSBpcyBsZWdpc2xhdGlvbiBpbiBwbGFjZSB0byBwcm90ZWN0IHRoZSBwb2tlciBwbGF5ZXJzLiAKVGhlIGZpcnN0IHN0ZXAgaW4gY2hvb3NpbmcgdGhlIHJpZ2h0IHR5cGUgZm9yIHlvdSBpcyB0byBsZWFybiB0aGUgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGVzZSB0eXBlcy4gU2VlaW5nIHRoYXQgdGhpcyBzdGVwIGhhcyBhbGVydGVkIHlvdSB0byB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBkaWZmZXJlbnQgbWF0ZXJpYWxzIHVzZWQgaW4gdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBjaGlwcywgdGhlIG5leHQgc2V2ZXJhbCBzdGVwcyBpbiB0aGlzIGhvdyB0byBndWlkZSB3aWxsIGJlIHVzZWQgdG8gaW50cm9kdWNlIHlvdSB0byB0aGUgbWFpbiBwb2ludHMgb2YgZWFjaCB0eXBlIG9mIG1hdGVyaWFsLi4gCkhlcnppY2hlbiBEYW5rIEVyaWNoIHVuZCBCYXJiYXJhIGZyIGRpZXNlbiBlcmZsbHRlbiBUYWchLi4gCkhlbGxvIC91L0RhdF9QZXJjeSwgdGhhbmtzIGZvciBwb3N0aW5nIHRvIC9yL0Jvc3NmaWdodC4gVW5mb3J0dW5hdGVseSB5b3VyIHBvc3QgaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6Ck9uIHRoZSB3YXkgaG9tZSBKZWt5bGwgbWVldHMgYmFyIHNpbmdlciBJdnkgYW5kIHNhdmVzIGhlciBmcm9tIGJlaW5nIGF0dGFja2VkIG91dHNpZGUgaGVyIGhvbWUsIGJ1dCBtYW5hZ2VzIHRvIHJlc2lzdCBoZXIgZmxpcnRhdGlvbnMuLiAKU29tZSBvZiB0aGlzIHdlYWx0aCBoYWQgYmVlbiBwYXNzZWQgYWxvbmcgdG8gaGlzIGdyYW5kc29uLCBXaWxsaWFtIE5vcnJpcyBQZXRlcnNvbi4gCklzIGl0IHBhaXIgb3IgcGFpcnM/CklmIHlvdSBsaWtlIGVhdGluZyB0b3hpYyBvaWx5IGZvb2Qgd2l0aCB6ZXJvIHF1YWxpdHkgY29udHJvbCBzaGFyaW5nIGl0IGluIGEgIm5vbiBzbW9raW5nIiByZXN0YXVyYW50IHdpdGggbG9hZHMgb2Ygc21va2VycyBhcm91bmQgeW91IGFuZCBhbGwgdGhlIHN0YWZmIG5vdCBnaXZpbmcgYSBzaW5nbGUgZnVjayBhYm91dCBpdCwgdGhlbiB5ZWFoIGl0IGdyZWF0LlNoZW56aGVuIGlzIGp1c3QgYWxsIHRoZSBzaGl0dHkgYmVoYXZpb3VyIG9mIEhLIHgxMDAuIApKdXN0IHRha2UgaW4gdGhlIHByZXR0eSBwaWN0dXJlcyBhbmQgdHJ5IHRvIGtlZXAgeW91ciBoZWFkIGFib3ZlIHdhdGVyLiAKQW1hbHRoZWFucyBhbmQgRXNrYXRvbmljcyBhcmUgYm90aCBjb3VudGVyIGN1bHR1cmFsIGVsZW1lbnRzIHdpdGhpbiB0aGUgY2h1cmNoLCBhbmQgZ2l2ZSBhIGxvdCBvZiByb29tIGZvciBjaGFyYWN0ZXJzIHRvIHBsYXkgcHJpZXN0cyB3aG8gYXJlIG5vdCBtb3VzdGFjaGUgdHdpcmxpbmcgY29ubml2ZXJzLiBVcnRoIE9ydGhvZG94IGlzIGFuIGluY3JlZGlibHkgYnJvYWQgYnJhbmNoLiBZZXMsIGNvcnJ1cHRpb24gYW5kIHVuZGVyaGFuZGVkbmVzcyBpcyBwcm9iYWJseSBhIHJlcXVpcmVtZW50IHRvIHByb2dyZXNzIHRvIGJpc2hvcCByYW5rIG9yIGhpZ2hlciwgYnV0IHRoZSByYW5rIGFuZCBmaWxlIHByaWVzdHMgY2VydGFpbmx5IGluY2x1ZGUgYSBudW1iZXIgb2YgaG9ub3JhYmxlLCBob25lc3QgYW5kIGdyYWNpb3VzIGFjdG9ycy4KR3Jvd2luZyB1cCwgSSBsaXZlZCBuZXh0IHRvIGEgbWFpbiByb2FkLCBqdXN0IGRvd24gZnJvbSBhIGxhcmdlIHNob3BwaW5nIGNlbnRyZS4gCkkgbG92ZSB0aGUgd29yayBhbmQgc29tZW9uZSBpcyB3aWxsaW5nIHRvIHBheSBtZSBmb3IgaXQuIElmIHRoZXkgZGlkIEkgd291bGQgY2FsbC90ZXh0IGJhY2sgYW4gZXF1YWwgbnVtYmVyIG9mIHRpbWVzLiAKVG9kZCBoYXNuJ3QgeWV0IGZpbGVkIGEgZmluYW5jaWFsIHJlcG9ydCB3aXRoIHRoZSBzdGF0ZSBFdGhpY3MgQ29tbWlzc2lvbiwgc28gSSBjYW4ndCBnYXVnZSBpZiB0aGUgcGV0aXRpb24gZHJpdmUgdW5kZXJ3YXkgaXMgc3VmZmljaWVudGx5IGZpbmFuY2VkIHRvIGdldCB0aGUgam9iIGRvbmUuIEkgdGhpbmsgSSBjYW4gcHJlZGljdCB3aXRoIHNvbWUgY29uZmlkZW5jZSwgZWNob2luZyBBdHRvcm5leSBHZW5lcmFsIER1c3RpbiBNY0RhbmllbCdzIG9waW5pb24gY2VydGlmeWluZyB0aGUgZm9ybSBvZiB0aGUgcHJvcG9zYWwsIHRoYXQgYSBsYXdzdWl0IHNlZW1zIGxpa2VseSB0byBmb2xsb3cuIApJdCBub3QgYSBncm9zc2VkIG91dCB0aGluZywganVzdCBhICJvaCB0aGV5IHByZWduYW50IEkgc2hvdWxkbiB0aGluayB0aGF0IHdheSIgZmVlbGluZy4gS2luZCBvZiBsaWtlIHNlZWluZyBhIHdvbWFuIHdpdGggYSB3ZWRkaW5nIHJpbmcgKGlmIHlvdSBjYXJlIGFib3V0IHRoYXQpIG9yIHNvbWV0aGluZy4gCkJvdGggYXJlIGNydWNpYWwgZm9yIHlvdXIgc3Vydml2YWJpbGl0eS5UaGUgY2VydCBvdXRjb21lIHNob3VsZCBiZSB5b3VyIGxlYXN0IGNvbmNlcm4uIApRdWFudHVtY29vbmV5ICA3NyBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KSW4gdGhlIG9sZCBkYXlzLCB3aGVuIHNvbWVvbmUgbWVudGlvbmVkICJmIHN0b3BzIiwgd2Uga25ldyB0aGV5IHdlcmUgZ29pbmcgdG8gdGFsayBhYm91dCAiRGVwdGggb2YgRmllbGQiLiAKV2hpbGUgeW91IGRvaW5nIHRoaXMsIGRvIHNvbWV0aGluZyBlbHNlLCBzdWNoIGtpc3MgaGVyIGJyZWFzdHMgb3Igc3RpbXVsYXRlIGhlciBjbGl0b3Jpcy4gVHJ5IHRvIG1ha2UgaGVyIGV4cGVyaWVuY2UgcGxlYXN1cmFibGUuIApZb3UgYW5hbHl6ZSB0aGlzIHRoZSBzYW1lIHdheSB5b3UgZWF0IGEgbWVhbDogaW4gZGlnZXN0aWJsZSBiaXRlcy4gSW4gdHJ1dGgsIHRoaXMgaXMgbm90IHRoYXQgY29tcGxpY2F0ZWQgb3IgY29tcGxleCwgaXQganVzdCBwdWxscyBvdXQgYWxsIHRoZSBzdG9wcyBpbiB3b3JraW5nIGFyb3VuZCB0aGUgYmFzaWMgc29uZyBzdHJ1Y3R1cmUuClRvIHRoZSBwb2ludCB3aGVyZSBJIGdldHRpbmcgYXR0aXR1ZGUgZnJvbSBoaW0gZXZlcnkgdGltZSB3ZSB0YWxrIGJlY2F1c2UgSSBkb24gd2FudCB0byBnbyBvdXQgYW5kIGhhbmcgd2l0aCBoaW0uIApPciBqdXN0IGJyaW5nIHRoZSBjaGlwcyB0byBmaW5kIG91dC4gSWYga2lkcyBjYW4gc25lYWsgZHJ1Z3MgYW5kIGd1bnMgaW50byBzY2hvb2wsIHRoZW4gYSBmZXcgY2hpcHMgZG9uJ3Qgc291bmQgc28gYmFkLiAKTGVhZGluZyB1cCB0byB0aGUgc3BvcnRpbmcgZXZlbnRzLCBhIHNpZ25pZmljYW50IG51bWJlciBvZiBpbmZyYXN0cnVjdHVyZSBwcm9qZWN0cyBhcmUgdW5kZXJ3YXkgYWNyb3NzIFJpbyBhbmQgdGhlIHJlc3Qgb2YgdGhlIGNvdW50cnkuIFdpdGggbGltaXRlZCBob3RlbCBzdXBwbHkgYXZhaWxhYmxlIGluIFJpbywgdGhlcmUgaXMgYW4gZW1waGFzaXMgb24gZXhwYW5kaW5nIHRoZSByb29tIG9mZmVyaW5nLiBUaGUgY2l0eSBhbmQgdGhlIHJlZ2lvbiBhcmUgZXhwZWN0ZWQgdG8gYWRkIGFuIGFkZGl0aW9uYWwgNi40IHBlcmNlbnQgaW4gdGhlIGN1cnJlbnQgcm9vbSBpbnZlbnRvcnkgdW50aWwgMjAxNC4gCktlbHNpZSBIb2d1ZSBtYW5hZ2VzIGhlciB1bm1hbmFnZWFibGUgZGVzaXJlcyBieSBjb2xvcmZ1bGx5IGV4YWdnZXJhdGluZyB0aGVpciBzY29wZSwgZmxpbmdpbmcgaGVyc2VsZiBpbnRvIGV4dHJlbWVzIG9mIGtub3dpbmdseSBkZWxpcmlvdXMgaW5kaWUgcG9wIGFuZCB0cmVhdGluZyBldmVyeSBzbGlnaHQsIHNleHVhbCBzbGlwdXAsIGFuZCB0aHdhcnRlZCBjcnVzaCBsaWtlIHRoZSBlbmQgb2YgdGhlIHdvcmxkLiAKWW91IGp1c3QgbmVlZCBhIGJyZWFrLCB0b28uIApJIGZseSBwcmFjdGljZSByZW5kZXp2b3VzIGFuZCBkb2NraW5ncyBvbiBhIHBvcnRhYmxlIFNveXV6IHNpbXVsYXRvciwgYW5kIHN0dWR5IHRoZSBTb3l1eiBhbmQgU3RhdGlvbiBjaGVja2xpc3RzIHdpdGggY3JldyBhbmQgb3VyIGNoaWVmIGluc3RydWN0b3JzLiBXZSBhbGwgc2lnbiBhbiBlbmRsZXNzIHN0YWNrIG9mIGNyZXcgcGhvdG9zIGJ5IGxhdW5jaCB3ZSBzaG91bGQgaGF2ZSBlbm91Z2ggZm9yIGVhY2ggY2l0aXplbiBvZiBSdXNzaWEsIGFuZCBwZXJoYXBzIENoaW5hLiBBbmQgZXZlbmluZ3Mgd2UgcGxheSBndWl0YXIgYW5kIHNpcCBzaW5nbGUgbWFsdCBhbmQgc2luZyBhIHB1cnBvc2VmdWwgZ3JvdXAgb2YgZnJpZW5kcyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZC4uIApBZnRlciBicmVha2luZyBvdXQgd2luZG93cywgUGFkZG9jayBmaXJlZCAxLDA1NyBzaG90cyBpbiAxMSBtaW51dGVzLCBwb2xpY2Ugc2F5LgpBIGJ1bmNoIG9mIHVzIGp1c3QgZ290IG92ZXIgc29tZSBraW5kIG9mIGZsdSB0eXBlIHRoaW5nICgvdS9tYWxhaXNlX2ZhbGNvbiAvdS9Ob09uZVJlYWRzTXlVc2VybmFtZSkuIEkgZm91bmQgSSB3ZW50IGZyb20gd2FudGluZyB0byBlYXQgbm90aGluZyB0byB3YW50aW5nIHRvIGVhdCB3aGF0ZXZlciB0b29rIHRoZSBsZWFzdCBhbW91bnQgb2YgZWZmb3J0IHRvIG1ha2UsIHNvIG1ha2UgdGhlIGVhc3kgY2hvaWNlIGFsaWduIHdpdGggeW91ciBnb2Fscy4gCkkgZG9uIGxpa2UgdGhlIGdvbGQgb24gdGhlIGNhcmQgaXRzZWxmLiAKQXUgZGVsIGRlcyBlbmpldXggY29sb2dpcXVlcywgY2UgcXVpIHJlamFpbGxpdCBkZSBjZXMgcHJvamV0cywgYydlc3QgdW5lIHZvbG9udCBkZSBkdmVsb3BwZXIgdW4gbW9kbGUgY29ub21pcXVlIGRpZmZyZW50LCBsb2NhbCwgcmF0aW9ubmVsIGV0IGh1bWFpbiA7IGwnaHVtYWluIGF1IHNlcnZpY2UgZGUgbCdodW1haW4uIFVuZSBlbnRyZXByaXNlIHF1aSwgZGFucyBsYSBkdXJlLCB2aXNlcmFpdCBnYWxlbWVudCB1bmUgcGx1cyBncmFuZGUgYXV0b25vbWllIGFsaW1lbnRhaXJlIGRlcyBjaXRhZGlucy4uIApUaGUgY29uY2x1c2lvbiBvZiB0aGlzIHN0dWR5IHNlZW1zIHRvIGJlIHNheWluZyBNTVIgZG9lcyBub3QgaW5jcmVhc2UgY2hhbmNlcyBvZiBBdXRpc20uIApQZXJzb25hbGx5LCBJJ20gbW9yZSBvZiBhIGNvZmZlZSB0aGFuIGFsY29ob2wgcGVyc29uLCBzbyBJIHJlYWxseSBuZWVkIG15IGRhaWx5IGNvZmZlZSBmaXguIApNYW55IG9ubGluZSB2aWRlbyBwb2tlciBnYW1lcyBjb21lIGluIHNpbmdsZSBoYW5kIGFuZCBtdWx0aSBoYW5kIHZhcmlldGllcy4gCldoaWxlIGVhY2ggY29udGVtcGxhdGVkIGhvdyBtYW55IGhvdXNlcyB0byBidXksIE5vcndheSBvZmZlcmVkIGhpcyBsb25lIHJlZCBwcm9wZXJ0eSB0byBSdXNzaWEgaW4gcmV0dXJuIGZvciB0aGUgdGhpcmQgbGlnaHQgYmx1ZS4uIApJIHBvc3RlZCBhIHdoaWxlIGJhY2sgYWJvdXQgaG93IGEgbWVtYmVyIG9mIG15IGd5bSBzdGFmZiBtYWRlIGZ1biBvZiBtZSBiZWNhdXNlIEkgYXJjaCBteSBiYWNrIGJlbmNoaW5nIGFuZCBzb21ldGhpbmcgc2ltaWxhciBoYXBwZW5lZCB0aGlzIHdlZWsgd2hpbGUgSSB3YXMgc3F1YXR0aW5nLiBOb3csIEkgbm90IGEgZ29vZCBzcXVhdHRlci4gSXQgZG9lc24gY29tZSBuYXR1cmFsIHRvIG1lIGFuZCBJIHJlYWxseSBzdHJ1Z2dsZSB3aXRoIGl0LCB3aGljaCBJIHdoeSBJIGhhdmVuIHVwcGVkIHRoZSB3ZWlnaHQgaW4gbW9udGhzLCBJIGJlZW4gZm9jdXNpbmcgb24gZm9ybS4gCkR1cmluZyB0aGUgYXBwcm9hY2gsIEFURiBhIGRvZyAoYWdlbnQgdG9sZCBpbnZlc3RpZ2F0b3JzIEFURiBmaXJlZCBmaXJzdCB3aGVuIHRoZXkga2lsbGVkIGEgZG9nLCB0aGVuIHJldHJhY3RlZCB0aGUgc3RhdGVtZW50IHdoZW4gZXZlcnl0aGluZyB3ZW50IHRvIHNoaXQpIHdoZW4gdGhleSBvcGVuZWQgZmlyZSBmaXJzdCBvbiBhIGNvbXBvdW5kIHdpdGggMTMwIHBlb3BsZSBpbmNsdWRpbmcgd29tZW4gYW5kIGNoaWxkcmVuLiBDdWx0IG1lbWJlcnMgcmVzcG9uZGVkIGFuZCBwZW9wbGUgZ290IHNob3QsIGluY2x1ZGluZyBzZXZlcmFsICg2IGtpbGxlZCwgMyA2IGluanVyZWQsIGluY2x1ZGluZyBLb3Jlc2ggd2hvIHdhcyBhdCB0aGUgZnJvbnQgZG9vcikgY3VsdCBtZW1iZXJzIGFuZCBzZXZlcmFsIEFURiAoNCBkZWFkLCAxNyBpbmp1cmVkKS4uIApDb3J0ZXoncyBjaGllZiBvZiBzdGFmZiBtaWdodCBoYXZlIGJyb2tlbiBjYW1wYWlnbiBmaW5hbmNlIGxhd3MKQmUgbmljZSBpZiBTcGlrZSBMZWUgY291bGQgcmVhZCBoaXMgbm90ZXMsIG9yIGJldHRlciB5ZXQgbm90IGhhdmUgdG8gdXNlIG5vdGVzIGF0IGFsbCwgd2hlbiBkb2luZyBoaXMgcmFjaXN0IGhpdCBvbiB5b3VyIFByZXNpZGVudCwgd2hvIGhhcyBkb25lIG1vcmUgZm9yIEFmcmljYW4gQW1lcmljYW5zIChDcmltaW5hbCBKdXN0aWNlIFJlZm9ybSwgTG93ZXN0IFVuZW1wbG95bWVudCBudW1iZXJzIGluIEhpc3RvcnksIFRheCBDdXRzLGV0Yy4pIHRoYW4gYWxtb3N0IGFueSBvdGhlciBQcmVzIQpUaGlzIGtpbmQgb2YgZGV0YWlsZWQgcmVzZWFyY2ggaW50byBjdXN0b21lciBwcmVmZXJlbmNlcyBpcyB2ZXJ5IHBvd2VyZnVsLCBzYXlzIEd1cHRhLiAKUGljdHVyZWQgYWJvdmU6IE1lbWJlcnMgb2YgdGhlIEtpd2FuaXMgQ2x1YiBvZiBOaWFnYXJhIFdoZWF0ZmllbGQgd2VyZSBhbW9uZyA1MCB2b2x1bnRlZXIgd29ya2VycyBmb3IgTmVhdGVuIFVwIE5pYWdhcmEgb24gU2F0dXJkYXkgbW9ybmluZy4gU2hvd24gYmVmb3JlIHRoZSB0ZWFtcyBzdGFydGVkIG91dCBmb3IgdGhlaXIgdG93biBjbGVhbnVwIGFzc2lnbm1lbnRzIGFyZSwgZnJvbSBsZWZ0LCBDb2xpbiBTbWl0aCwgU3VlIFNtaXRoLCBEZWIgQmVudGxleSwgR2FyeSBIYXVjayBhbmQgY2x1YiBQcmVzaWRlbnQgRGFubnkgTWFlcnRlbi4gKFBob3RvcyBieSBLYXJlbiBLZWVmZSkuIApJdCB3YXNuIGEgc2luZ2xlIHBlcnNvbi4gSGFucyBHaXNldml1cyAoUHJ1c3NpYW4gTWluaXN0cnkgb2YgdGhlIEludGVyaW9yIG9mZmljaWFsKSwgUnVkb2xmIERpZWxzIChoZWFkIG9mIHRoZSBHZXN0YXBvKSwgYW5kIEZyYW56IEhhbGRlciAoZm9ybWVyIENoaWVmIG9mIHRoZSBHZXJtYW4gR2VuZXJhbCBTdGFmZiBhbmQgcHJlc3VtYWJseSB0aGUgZ3V5IHlvdSB0YWxraW5nIGFib3V0KSBhbGwgdGVzdGlmaWVkIGF0IE51cmVtYmVyZyB0aGF0IEdvZXJpbmcgb3JkZXJlZCBpdC4gVGhlIG9ubHkgcGVyc29uIHdobyB0ZXN0aWZpZWQgdG8gdGhlIGNvbnRyYXJ5IHdhcyBHb2VyaW5nIGhpbXNlbGYuLiAKU3BhY2V5IGlzIHN0aWxsIGEgZGVlcGx5IHRyb3VibGVkIGluZGl2aWR1YWwgd2hvIGltcG9zZWQgaGltc2VsZiBvbiBvdGhlcnMgaW4gYSB0b3RhbGx5IHVuYWNjZXB0YWJsZSB3YXksIGhlIGFsc28gbWFkZSBmYW50YXN0aWMgYXJ0LiAKQSBsYXJnZSBwb3J0aW9uIG9mIFJ1c3NpYW4gb2lsIGJvdW5kIGZvciBXZXN0ZXJuIEV1cm9wZSBwYXNzZXMgdGhyb3VnaCBVa3JhaW5lLiBBbmQgdHdpY2UgaW4gdGhlIHBhc3QgZGVjYWRlLCBpbiAyMDA2IGFuZCAyMDA5LCBSdXNzaWEgaGFzIHR1cm5lZCBvZmYgbmF0dXJhbCBnYXMgc2hpcG1lbnRzIHRvIFVrcmFpbmUgZHVyaW5nIGRpc3B1dGVzIG92ZXIgZ2FzIHByaWNlcy4gVGhhdCBpbiB0dXJuIGNyZWF0ZWQgc2hvcnRhZ2VzIGluIHNvbWUgRVUgbWVtYmVyIG5hdGlvbnMuIEluIHJlc3BvbnNlLCB0aGUgRVUgaGFzIGF0dGVtcHRlZCB0byBjb21lIHVwIHdpdGggYWx0ZXJuYXRpdmVzIHRvIGl0cyBjdXJyZW50IGRlcGVuZGVuY3kgb24gUnVzc2lhbiBvaWwgYW5kIGdhcy4gVGhlIHNvIGNhbGxlZCAiTmFidWNjbyIgcGlwZWxpbmUsIGZvciBleGFtcGxlLCB3YXMgYSBwbGFuIHRvIGJ5cGFzcyBSdXNzaWEgYnkgaGF2aW5nIGEgcGlwZWxpbmUgcnVubmluZyBmcm9tIHRoZSBDYXNwaWFuIFNlYSB0byBFdXJvcGUsIGZyb20gVHVya2V5IHRvIEF1c3RyaWEgdmlhIEJ1bGdhcmlhLCBSb21hbmlhIGFuZCBIdW5nYXJ5LiBCdXQgdGhhdCBwcm9qZWN0IHdhcyBzaGVsdmVkIGxhc3QgSnVuZSwgd2hlbiBnYXMgcHJvZHVjZXJzIGluIEF6ZXJiYWlqYW4gb3B0ZWQgZm9yIGEgZGlmZmVyZW50IHBsYW4uLiAKSXQgYSBncmVhdCB3YXkgdG8gdHJ5IGl0IG91dCBJTU8sIGFzIHRoZXJlIG5vdGhpbmcgZXh0cmEgdG8gYnV5IGFuZCB0aGUgcnViYmVyaXplZCBzdXJmYWNlIGlzIHZlcnkgZm9yZ2l2aW5nLi4gCkN1dCB1cCB0d28gY2hpY2tlbiBicmVhc3RzLiBXaGVuIG9pbCBob3QsIHB1dCBjaGlja2VuIGluLCBhZGQgc3BpY2VzLCBjb29rIHVudGlsIHRoZXkgc3RhcnQgYnJvd24uIEFkZCB2ZWdnaWVzICsgc21hbGwgYW1vdW50IGV4dHJhIG9pbCwgc3RpcnJpbmcgZXZlcnkgZmV3IG1pbnV0ZS4gCiA2MyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIG9uY2UgaGFkIHNvbWUgZG91Y2hlYmFnIHdpdGggYW4gZWdvIHRoZSBzaXplIG9mIHRleGFzIGF0IGFuIE1TUCBJIGludGVydmlld2VkIGF0IHRlbGwgbWUgSSBkaWRuIHN1cHBvcnQgdGhlIHN3aXRjaGVzIG15IGN1cnJlbnQgam9iIGhhZCBvbiBzaXRlIGJlY2F1c2UgSSBkaWRuIGNvbmZpZ3VyZSB0aGVtIGZyb20gc2NyYXRjaCBiZWNhdXNlIHRoZXkgd2VyZSBhbHJlYWR5IGluIHBsYWNlIHdoZW4gSSBnb3QgdGhlcmUuSSBoYWQgYW5vdGhlciBwbGFjZSBnaXZlIG1lIG9uZSBvZiB0aG9zZSBwcm9maWNpZW5jeSBleGFtcyBhbmQgaXQgd2FzIGhvbmVzdGx5IHRoZSB3b3JzdCBleGFtIEkgZXZlciBzZWVuLiAKSXQncyBhICQyMCBmaXJzdCB0aW1lIGZlZS4gCkFtYXpvbiBhbHNvIG93bnMgSU1EQiwgd2hpY2ggc2hvd3MgdmlkZW8gYWRzLCBhbmQgYWxzbyBoYXMgcHVibGlzaGVyIHNlcnZpY2VzIHRoYXQgZGVhbCB3aXRoIHdlYnNpdGVzIGp1c3QgbGlrZSBHb29nbGUncyBwdWJsaXNoZXIgYWQgbmV0d29yaywgd2hlcmUgaXQgY2FuIHRhcmdldCBhZHMgb3V0c2lkZSB0aGUgd2Vic2l0ZXMgaXQgZGlyZWN0bHkgb3ducy4uIApNeSBkYWQgaGFkIHRoZSBmbHUgaW4gMjAwMy4gSGUgbmV2ZXIgZ290IHRoZSBmbHUgc2hvdCBiZWZvcmUgdGhhdCBiZWNhdXNlIGhlIGRpZG4gdGhpbmsgdGhlIGZsdSB3YXMgYSBiaWcgZGVhbC4gRXZlciBzaW5jZSB0aGVuLCBoZSBoYXMgZ290dGVuIHRoZSBzaG90Li4gCkhldGVyb2dlbmVpdHkgYmV0d2VlbiB0aGUgdHJpYWxzIHdhcyBzaWduaWZpY2FudC4gClRoZSBicm9hZGVyIHBlZXIgZ3JvdXAgcmV2aWV3ZWQgYnkgdGhlIGluZGVwZW5kZW50IGNvbnN1bHRhbnQgaW5jbHVkZWQgY29tcGFuaWVzIHN1Y2ggYXMgUGVtYmluYSBQaXBlbGluZSBDb3Jwb3JhdGlvbiwgVHJhbnNDYW5hZGEgQ29ycG9yYXRpb24sIEFpciBDYW5hZGEsIENOIFJhaWwsIGFuZCB0aGUgTmF0aW9uYWwgQmFuayBvZiBDYW5hZGEuCkxvYWQgbW9yZSBjb21tZW50cwpCb3RoIGVuZHMgb2YgdGhlIHNwZWN0cnVtIGFyZSBkYW5nZXJvdXMuIApPcmdhbml6aW5nIHlvdXIgb3duIHBva2VyIGhvbWUgZ2FtZSBpcyBhIGdyZWF0IHdheSB0byBiZWF0IHRoZSBiYW5rcm9sbCBkaW1pbmlzaGluZyByYWtlIG9mIHRoZSBjYXNpbm8gb3IgdGhlIG1vbm90b25vdXMgbG9uZWx5IGdyaW5kIG9mIHBsYXlpbmcgb25saW5lLiBIb3N0aW5nIGEgcG9rZXIgbmlnaHQgaXMgYSByZXdhcmRpbmcgZXhwZXJpZW5jZSB0aGF0IGdyYW50cyB5b3UgdGhlIHBvd2VyIHRvIHNoYXBlIHRoZSBnYW1lIGluIHlvdXIgb3duIHZpc2lvbi4gQSBnb29kIGhvc3Qgd2lucyB0aGUgZ3JhdGl0dWRlIG9mIGhpcyBndWVzdHMgYWxvbmcgd2l0aCBhIGZldyBvZiB0aGVpciBjaGlwcy4KSWYgdGhleSBtYWtlIHlvdSBmZWVsIHVuY29tZm9ydGFibGUgaW4geW91ciBvd24gaG9tZSwgeW91IGFuZCBTTyBuZWVkIHRvIGRlY2lkZSB3aGF0IHlvdSBhcmUgY29tZm9ydGFibGUgd2l0aCBhbmQgdGhlbiB0ZWxsIHRoZW0gdGhhdC4gCkJ1dCB0aGlzIGlzbiB0aGUgY2FzZSBmb3IgbW9zdCBvZiB0aGVtLiBPbmUgbWFuIGlzIGJvcnJvd2luZyBtb25leSBmcm9tIGFuIGFuY2llbnQgZmF0aGVyIGFuZCBvdGhlcnMgYXJlIGJ1c3lpbmcgdGhlbXNlbHZlcyB3aXRoIHNwcmVhZHNoZWV0cyB0byB3b3JrIG91dCBob3cgdG8gcmVkdWNlIGV4cGVuZGl0dXJlIHRvIHRoZWlyIHJlbGF0aXZlbHkgc3RyYWl0ZW5lZCBjaXJjdW1zdGFuY2VzLgpTb3V0aCBCcm93YXJkIEhpZ2ggQmFuZCBEaXJlY3RvciBBY2N1c2VkIE9mIEhhdmluZyBTZXggV2l0aCBUZWVuIFN0dWRlbnRUaGUgZm9ybWVyIGJhbmQgZGlyZWN0b3IgYXQgU291dGggQnJvd2FyZCBIaWdoIFNjaG9vbCB3YXMgYXJyZXN0ZWQgZm9yIHJlcG9ydGVkbHkgaGF2aW5nIGEgc2V4dWFsIHJlbGF0aW9uc2hpcCB3aXRoIGEgc3R1ZGVudC4KSSdsbCBiZSBzdXJlIHRvIHBvc3QgdGhlIEJlZm9yZSBhbmQgQWZ0ZXIgcGhvdG9zIGFuZHVwZGF0ZXMgd2hlbiB0aGUgcHJvamVjdCBpcyBjb21wbGV0ZSBpbiBhIGZldyB3ZWVrcyBmcm9tIG5vdy4gVGhhbmtzIGZvciByZWFkaW5nIVdoYXQgaXMgeW91ciBuZXh0IHN0ZXAgd2l0aCB0aGUgY2FzaCBpbmZ1c2lvbj9UaGFua3MgR2luby4gWWVzLCBJIGtub3cgaXQncyBhIHRpZ2h0IHNjaGVkdWxlIGJ1dCB0aGF0J3MgbXkgZ29hbC4gClVyYXdpenJkYXJyeSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpXZXN0cyBNYXlmaWVsZCA0LiAKSGUgdXNlZCB0byBjYWxsIEJlY2sgIkxvcmQgQmVja2xpbmd0b24uIEpvZXkgYW5kIE93ZW4gd291bGQgYWx3YXlzIGJlIHBsYXlpbmcgdG9nZXRoZXIgc28gaGUgY2FsbGVkIHRoZW0gIkpvd2VuIi4gSGUgdGF1Z2h0IHRoZSBib3lzIGhvdyB0byBwbGF5IHBva2VyIGFuZCB0aGV5IGxvdmVkIHdhdGNoaW5nIGJha2luZyBzaG93cyB3aXRoIGhpbS4uIApUaGF0IHN1cGVyIHVudXN1YWwuIFRoZXJlIGtpbmQgb2YgYWJyaWdodCBzaWRlIGFuZCBhIGRhcmsgc2lkZSB0byB0aGF0LiAKTSBtaXMgZW4gZnVyaWUuIEogdnJhaW1lbnQgdmV4IHBhcmNlIHF1IHMgZCBwIHF1aSBhdXJhaXQgcHUgZmFjaWxlbWVudCBEZSBwbHVzLCBsYSB2b2l0dXJlIGRlIHMgbiBwYXMgZXNzYXkgZGUgbSBDIGxlIGNoYW9zIGV0IHBlcnNvbm5lIG5lIHNhdmFpdCBxdWkgZW4gdCBjZSBtb21lbnQgbCBDIGluY3JveWFibGUgZGUgYm91c2lsbGVyIGRlIHRlbGxlIGZhIGwgNTAwIDsgbGEgcGx1cyBncm9zc2UgY291cnNlIGF1dG9tb2JpbGUgYXUgbW9uZGUuCiJJZiB0aGV5IGFyZSBzbyBodWdlLCB0aGV5IG11c3QgYXQgbGVhc3QgYmUgZGVjZW50IHByZWRhdG9ycy4iIE5vLiAKQ29udGludWluZyBFZHVjYXRpb24gVW5pdCAoQ0VVKSBjbGFzc2VzOwpPdXIgcmVsYXRpb25zaGlwIGlzIGhlYWx0aHkgYW5kIEkgcmVzcGVjdCBoaW0gYSBsb3QgYXMgYSBwZXJzb24sIHdoaWNoIGFsc28gYWZmZWN0cyB0aGluZ3Mgc2V4dWFsbHkgaW4gYSBwb3NpdGl2ZSB3YXkuIEkgc3RhcnRlZCBlbmpveWluZyBteSBvcmdhc21zIDEwMCUgbW9yZSBhbmQgc3RvcHBlZCBydXNoaW5nIHRoZW0uLiAKQnV0IGJlZm9yZSBhbnkgb2YgdGhlc2UgbW92aWVzIGRlYnV0ZWQsIGhlIHdhcyBiaWxsZWQgYXMgIkluc2FuZSBCb3dpZSBGYW4uIiBXaGVuIFdpbGxpYW0gdHJhdmVscyB0byBDbGV2ZWxhbmQgYWdhaW5zdCBoaXMgd2lsbCwgdGhlIGJhbmQgZW50ZXJzIGEgaG90ZWwgbG9iYnkgc3dhcm1pbmcgd2l0aCBmYW5zIG9mIERhdmlkIEJvd2llLiAKWW91IGNhbiBnZXQgdGhpc3NvbmcgZnJvbSB2YXJpb3VzIG91dGxldHMvWW91dHViZS4gCldoZW4gbWVsYW5jaG9seSBoaXRzLCBhIG1hc3NhZ2UgbWF5IGJlIGFuIHBvd2VyZnVsIHdheSB0byBjb21iYXQgaXQuIEFueGlldHkgYW5kIHVuaGFwcGluZXNzIHVzdWFsbHkgZW5kIHJlc3VsdCBpbiBlbGV2YXRlZCBjb3J0aXNvbCBzdGFnZXMgaW4gdGhlIGVudGlyZSBib2R5LiBFbGV2YXRlZCBjb3J0aXNvbCBhbW91bnRzIGFyZSByZWxhdGVkIHdpdGggbWVsYW5jaG9seS4gCk5ldmVybW8gaGVyZS4gTXkgYmVzdCBmcmllbmQgaXMgZXggbW9ybW9uIChvbmUgb2YgdGhlIHJlYXNvbnMgSSBoZXJlKSwgc2hlIFNUSUxMIGJlbGlldmVzIHRoYXQgb3JhbCBzZXggaXMgc2luZnVsLiBPdXQgb2Ygbm93aGVyZSBvbmUgZGF5LCBzaGUgc3RhcnRlZCBzcG91dGluZyBvZmYgYWxsIG9mIHRoaXMgTW9ybW9uIHByb3BhZ2FuZGEuIEkgc2FpZCBhYnNvbHV0ZWx5IG5vdGhpbmcsIG5vIHJlc3BvbnNlIGF0IGFsbC4gQmVjYXVzZSwgSSBrbm93IGJldHRlciwgYW5vdGhlciBkYXkgd2hlbiBzaGUgaW4gYSBiZXR0ZXIgcGxhY2UgSSB3aWxsIGJyaW5nIHVwIHRoZSBzdWJqZWN0LiBXZSBiZWVuIHRocm91Z2ggdGhpcyBraW5kIG9mIHRoaW5nIGJlZm9yZS4gVGltZSBhbmQgZGlzdGFuY2UgZG9lcyBhIGxvdCBieSBpdHNlbGYgdG8gZGlzYWJ1c2UgaGVyIG9mIHRoZXNlIGRhbmdlcm91cyBiZWxpZWZzIChtb3JlIGxpa2Ugc3VwZXJzdGl0aW9uKSBidXQgd2FpdGluZyBmb3IgdGhlIHJpZ2h0IHRpbWUgdG8gZWR1Y2F0ZSBhbmQgaW5mb3JtIGlzIGJlc3QuIEl0IHRob3JvdWdobHkgYW1hemVzIG1lIHRoZSBsaWVzIHNoZSBjb250aW51ZWQgdG8gYmVsaWV2ZSBsb25nIGFmdGVyIHNoZSBxdWl0IHRoZSBjdWx0LCB0aGUgaW5kb2N0cmluYXRpb24gaXMgc28gaW5ncmFpbmVkLCBpdCBpcyB2ZXJ5LCB2ZXJ5IGRpZmZpY3VsdCB0byBiZWF0LgpUaGVyZSBvYnZpb3VzbHkgdGFjdCB0byBiZSBoYWQsIGJ1dCB3ZSBhbHNvIGRvbiBrbm93IGlmIHRoZSB2ZXQgYWN0dWFsbHkgeWVsbGVkIGF0IGhpbSBvciBpZiBzaGUgc3Rlcm5seSBzYWlkIHRoYXQsICJZZWFoLCB5b3Ugc2hvdWxkIGJyb3VnaHQgdGhpcyBjYXQgaW4gc29vbmVyLiAKT3ZlcnZpZXcgZm9yIGRqc3BhY2VidW5ueQpIZWFyZCBpdCBzZXZlbiB0aW1lcyBpbiBvbmUgZ2FtZS4gCkp1ZGdlIEdheW5vciBzYWlkIE5pY2hvbGFzIGhhZCByZXBhaWQgc29tZSBtb25leSBidXQgJDIsNjIxLDYwNi4zMiBpbiByZXN0aXR1dGlvbiB3YXMgc3RpbGwgc291Z2h0IGZyb20gdGhlIHRoaWVmIHdobyBoYXMgYmVlbiBkZWNsYXJlZCBiYW5rcnVwdC4gCk9yLiBZb3UgY2FuIHByZXNyaWJlIGEgY29kaWVuZSBjb21iaW5hdGlvbiwgaXQgcmV2ZXJzaWJseSBhbmQgd2Vha2x5IGJpbmRzIHRvIGEgd2VsbCBrbm93biByZWNlcHRvciwgbW9zdCBwZW9wbGUgaGF2ZSBiZWVuIGV4cG9zZWQgdG8gaXQsIG9yIGEgbWV0YWJvbGl0ZSBvZiBpdCwgcmVhY3RzIHdpdGggYmFyZWx5IGFueXRoaW5nLCBhbmQgcHJvdmlkZXMgc29tZSBwYWlucmVsaWVmIGF0IHRoZSBzYW1lIHRpbWUuIApWb2ljaSB1bmUgY2FydGUgZGUgUGFyaXMgcHVibGllIHRycyByY2VtbWVudCBwYXIgbCdBdGVsaWVyIFBhcmlzaWVuIGQnVXJiYW5pc21lIGlsbHVzdHJhbnQgYmllbiBsYSBjb25jZW50cmF0aW9uIGRlcyBzYWxvbnMgZGUgbWFzc2FnZSBkYW5zIGxlIDllIChjbGlxdWVyIHN1ciBsYSBjYXJ0ZSBwb3VyIGwnYWdyYW5kaXIpCjQgdG8gNiBpcyBub3JtYWwgZm9yIHN0YW5kYXJkIHBlb3BsZSwgOCB0byAxMCBpcyBnb29kLCAxMiBvciBldmVuIDE0KyBiZWNvbWVzIGV4Y2VwdGlvbmFsLCB0aGUgYmVzdCBjaGFyYWN0ZXJzIHNob3VsZCBoYXZlIDE4aXNoIGRpY2UsIGJ1dCBkbyBub3RlIHRoYXQgYmUgYSB0aHJlYXQgdG8gdGhlIGNoYXJhY3RlcnMuRm9jdXMgb24gc3RvcnkgYW5kIHRoZW1lIGZvciBhIHN0YXJ0LCB0aGF0IGlzIHdoZXJlIFNoYWRvd3J1biBpcyBzdHJvbmcuIApUaGVpciBhZ2VzIHJhbmdlZCBmcm9tIDE5IHRvIDMwLCBzaGUgdG9sZCBpbnZlc3RpZ2F0b3JzLkFjY29yZGluZyB0byBwb2xpY2UsIHJvb21zIGluIENvaWwncyBob3VzZSB3ZXJlIHRyYW5zZm9ybWVkIGludG8gcHJpdmF0ZSBtYXNzYWdlIHNwYWNlcyB3aXRoIHRhYmxlcy4gVGhlIHdvbWVuIHdlcmUgaW5zdHJ1Y3RlZCB0byByZW1vdmUgdGhlaXIgY2xvdGhlcyBhcyBzb29uIGFzIHRoZXkgd2Fsa2VkIGluLiBDb2lsIHdvdWxkIHR5cGljYWxseSBiZSBuYWtlZCBvbiB0aGUgcHJlbWlzZXMgYnV0IG91dCBvZiBzaWdodCBvZiBjbGllbnRzLlRoZSBtYXNzYWdlIGZlZSB3YXMgJDEwMCwgYW5kIHRoZSB3b21lbiB3ZXJlIGFsbG93ZWQgdG8ga2VlcCBhbGwgb2YgaXQsIHBvbGljZSBzYWlkLiAKREZPIGhhcyBoZWxkIHRoZSB0b3VybmFtZW50IGluIFBvcnRsYW5kIGZvciBzZXZlcmFsIHllYXJzIGJ1dCB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lIHRoZSBldmVudCBoYXMgbWFkZSBpdHMgd2F5IHRvIENlbnRyYWwgT3JlZ29uLiBTdXphbm5lIEJyb3duaW5nLCBLZW1wbGUgQ2xpbmljJ3MgZXhlY3V0aXZlIGRpcmVjdG9yIHNheXMsICJXaXRoIGdyZWF0IGZvb2QgYW5kIGRyaW5rcywgbm90IHRvIG1lbnRpb24gcHJvZmVzc2lvbmFsIGRlYWxlcnMsIHRoaXMgZXZlbnQgcHJvbWlzZXMgdG8gYmUgYSB3aG9sZSBsb3Qgb2YgZnVuIGZvciBwbGF5ZXJzIGFuZCBub24gcGxheWVycyBhbGlrZS4gClRoYXQgaXMgYWxsIEkgYW0gdHJ5aW5nIHRvIHNheSwgYnV0IHRoZSBwZW9wbGUgY29tbWVudGluZyBrZWVwIGluc2lzdGluZyB0aGF0IHJlZ2V4IGRvZXNuIGRvIHdlbGwgd2l0aCBIVE1MLiAKU28gbGV0IG1lIGFuZCBteSB3aWZlIE5pY2t5IHdlbGNvbWUgeW91IHRvIG91ciBiZWF1dGlmdWwgVmlsbGEgbG9jYXRlZCBpbiBQdW50YSBEZWwgTWFyIEJlYWNoIFZpbGxhZ2UsIFJpbmNvbiwgUFIuCkluIGNvbnRyYXN0IHRvIGEgcGFybGlhbWVudGFyeSBzeXN0ZW0gb2YgZnVzZWQgcG93ZXJzLCB0aGUgc2VwYXJhdGlvbiBvZiBwb3dlcnMgY3JlYXRlcyBhIGJ1aWx0IGluLCB0aGF0IGlzLCBzdHJ1Y3R1cmFsLCBwb3RlbnRpYWwgZm9yIGdyaWRsb2NrIHdoZW4gZWFjaCBicmFuY2ggaXMgY29udHJvbGxlZCBieSBhbiBvcHBvc2luZyBwYXJ0eS4gCkdseW5uIG1hZGUgaGVyIGNvbW1pdG1lbnQgdG8gcnVuIHRyYWNrIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIGJhY2sgaW4gT2N0b2Jlci4gClBsZWFzZSB3YWl0LiBISUdIIFNQRUVELiA3IHJlc3VsdHMgLiAKR2F1Z2UgeW91ciBzZW5zaXRpdml0eS4gRm9yIHRob3NlIG9mIHVzIHdobyBhcmUgbW9zdCBzZW5zaXRpdmUgdG8gbGVjdGlucywgbW9yZSBkcmFtYXRpYyBtZWFzdXJlcyBtaWdodCBiZSBuZWVkZWQuIAogNCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhlIHN0dWRpZXMgYXJlIHZlcnkgc3VyZmFjZSBsZXZlbC4gVGhlcmUgd2FzIGEgQ2FuYWRpYW4gc3R1ZHkgZG9uZSBpbiAyMDEyIHRoYXQgc2FpZCB0aGUgZGlyZWN0IGhlYWx0aGNhcmUgY29zdHMgaW5jdXJyZWQgZnJvbSBzbW9raW5nIGFyZSBqdXN0IG92ZXIgJDZCL3llYXIuVGhhdCBhbHNvIGRvZXNuIGFjY291bnQgZm9yIGluY2lkZW50YWwgY29zdHMsIG9yIGxvc3QgcmV2ZW51ZXMgYmVjYXVzZSBhIGZ1bGwgcXVhcnRlciBvZiBwZW9wbGUgdGhhdCBhcmUgbWVkaWNhbGx5IGFmZmVjdGVkIGZyb20gc21va2luZyBpbiBDYW5hZGEgYXJlIHByaW1lIGVtcGxveWFibGUgYWdlLCBzbyB0aGVyZSBhIHdob2xlIGhvc3Qgb2YgbG9zdCBlYXJuaW5nIHBvdGVudGlhbCB0aGVyZSB0b28udGhlIGVudGlyZSBpZGVhIG9mIGl0IGJlaW5nIGNoZWFwZXIgcmVsaWVzIG9uIHBlb3BsZSBkeWluZyBiZWZvcmUgdGhleSBvdGhlcndpc2UgcmVhc29uYWJseSB3b3VsZCBhbmQgdGhhdCBzdWNoIGFuIHVnbHkgYW5kIGN5bmljYWwgdGhpbmcgdG8gaG9wZSBmb3IuSnVzdCBvdXRzaWRlIG9mIEVkbW9udG9uIHRoZXJlIE5ldyBIb3Jpem9ucyBDaGFydGVyIFNjaG9vbCB3aGljaCBpcyBhIHNjaG9vbCBmb3IgZ2lmdGVkIGxlYXJuZXJzIHNvIHRoZXkgY2FuIGZvc3RlciBpbmRlcGVuZGVudCBsZWFybmluZyBhbmQgYWNhZGVtaWNzIGluIGFuIGVudmlyb25tZW50IGJ1aWx0IHRvIHN1cHBvcnQgdGhhdCwgYmVjYXVzZSBpbiByZWd1bGFyIHB1YmxpYyBwcm9ncmFtcyB0aGUgbGVhcm5lcnMgdGhhdCBleGNlbCB0ZW5kIHRvIGdldCBmb3Jnb3R0ZW4gYmVjYXVzZSB0ZWFjaGVycyBzaW1wbHkgZG8gbm90IGhhdmUgdGhlIHNwYXJlIHRpbWUsIGVzcGVjaWFsbHkgYWZ0ZXIgZGVhbGluZyB3aXRoIGluZGl2aWR1YWxzIHdpdGggaGlnaGVyIGxlYXJuaW5nIG5lZWRzIGluIGxhcmdlIGNsYXNzIHNpemVzLkFsbCBjaGFydGVyIHNjaG9vbHMgaW4gQWxiZXJ0YSBtdXN0IGJlIHB1YmxpYywgaGF2ZSB0byBiZSBpbmRpdmlkdWFsbHkgYXBwcm92ZWQgYnkgdGhlIEVkdWNhdGlvbiBtaW5pc3RlciBhbmQgYXJlIHN0aWxsIGFjY291bnRhYmxlIHRvIHRlYWNoIHRoZSBBbGJlcnRhIEVkdWNhdGlvbiBjdXJyaWN1bHVtLlNvIHllYWgsIHByaXZhdGUgcmVsaWdpb3VzIHNjaG9vbHMgYmFkLCBidXQgQ2hhcnRlciBzY2hvb2xzIGluIEFsYmVydGEgYXJlIHNvbWV0aGluZyBlbnRpcmVseSBkaWZmZXJlbnQgdGhhbiB3aGF0IGluIHRoZSBzdGF0ZXMgYW5kIG1vc3QgQWxiZXJ0YW5zIGRvbiB1bmRlcnN0YW5kIHRoZW0uTWFncGllQnVyZWF1ICAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvQ2hhcnRlciBzY2hvb2xpbmcgdG8gZmlsbCBwYXJ0aWN1bGFyIG5lZWRzIGlzIHBlcmZlY3RseSByZWFzb25hYmxlLiAKSXQgY29tZXMgdG8gbm8gc3VycHJpc2UgdG8gbWUgdGhhdCB0aGVzZSBhcHBsaWNhdGlvbnMgd291bGQgc3RpbGwgYmUgaW4gdXNlIChhZnRlciBvdXIgWTJLIGZpeGVzIDopKSBhcyB0aGV5IGp1c3Qgd29ya2VkLiAKSXQgZGlkIHNvIHRocm91Z2ggYSBjbGV2ZXIgcGllY2Ugb2Ygc29mdHdhcmUgdGhhdCBjb3VsZCBpZGVudGlmeSB3aGVuIGl0IHdhcyBiZWluZyB0ZXN0ZWQgYW5kIHJlZHVjZSBoYXJtZnVsIGV4aGF1c3Qgc28gaXQgbG9va2VkIGFzIGlmIHRoZSBjYXJzIG1ldCByZXF1aXJlbWVudHMsIHdoZW4gaW4gZmFjdCB0aGV5IGRpZG4gd2FzIGNhdWdodCBieSBpbmRlcGVuZGVudCB0ZXN0aW5nIGNhcnJpZWQgb3V0IGJ5IGEgY2xlYW4gYWlyIGFkdm9jYWN5IGdyb3VwLApTaW5jZSBpdCB3YXMgaW50cm9kdWNlZCBpbiAyMDAyLCAkNDE3IG1pbGxpb24gd29ydGggb2YgdGF4IGJyZWFrcyBoYXZlIGJlZW4gcGFpZCBvdXQgdG8gY2x1YnMuIExhc3QgeWVhciwgNDcyIGNsdWJzIHBhcnRpY2lwYXRlZCBpbiB0aGUgc2NoZW1lLiAKT3ZlcnZpZXcgZm9yIFplcgpJIGhhdmUgYSBmcmllbmQgd2hvIHdvcmtlZCBpbiB0aGF0IHByb2plY3QuIApXaGVyZSBpdCBoYXMgYmVlbiBhIHByb2JsZW0gaXMgaWYgSSBnZXQgaXQgdG8gc3dpdGNoIG9uIGJhdGhyb29tIGxpZ2h0cywgdGhlIHBlcnNvbiB0aGVuIGV4aXRzIHRoZSBiYXRocm9vbSwgYW5kIG1hbnVhbGx5IHR1cm5zIHRoZSBsaWdodHMgb2ZmLCBhbmQgdGhlbiBzb21lb25lIGVsc2UgZ29lcyBpbiBhZnRlciByaWdodCBhd2F5IHRoZSBsaWdodHMgZG9uJ3QgdHVybiBvbiBiZWNhdXNlIHRoZSBtb3Rpb24gc3RhdGUgZG9lc24ndCBjaGFuZ2UuIEp1c3QgbmVlZCB0byB0ZWFjaCBwZW9wbGUgbm90IHRvIG1hbnVhbGx5IHR1cm4gbGlnaHRzIG9mZiA6KVRoZSBmb250cyBwcmVmaXhlZCB3aXRoIHhmdDogYXJlIHRoZSBmb250IG5hbWVzIHlvdSBnZXQgd2hlbiB5b3UgY2FsbCBmYyBsaXN0LiBmYyBsaXN0IGxpc3RzIGFsbCBhdmFpbGFibGUgZm9udHMuIFRoZSBvdGhlciB0eXBlIG9mIGZvbnQgc3BlY2lmaWVyICggd3VuY29uIHNpamkgbWVkaXVtIHIgbm9ybWFsIDEwIDEwMCA3NSA3NSBjIDgwIGlzbzEwNjQ2IDEpIGlzIGNhbGxlZCBYIGxvZ2ljYWwgZm9udCBkZXNjcmlwdGlvbiwgaXRzIGZvcm1hdCBpcyBhIGxpdHRsZSBtb3JlIGNvbXBsZXgsIGJ1dCB5b3UgY2FuIHVzZSB0aGUgeGZvbnRzZWwgcHJvZ3JhbSB0byBwdXQgdG9nZXRoZXIgZm9udCBzdHJpbmdzLiBEaWZmZXJlbnQgc2V0dXBzIG1heSBoYXZlIGRpZmZlcmVudCBmb250IG5hbWVzLCB0aGF0IHdoeSBpdCBnb29kIHByYWN0aWNlIHRvIHVzZSBmYyBsaXN0IHRvIGZpZ3VyZSBvdXQgaG93IGV4YWN0bHkgZm9udHMgb24geW91ciBzeXN0ZW0gYXJlIGNhbGxlZC4KVGhleSBib3RoIGFyZSBiYWxsIGRvbWluYW50IGFuZCBpdCB3YXMgcmVhbGx5IDFBIDFCIGFuZCB5b3UgY291bGQgc2VlIHRoZW0gZmlnaHQgb3ZlciB3aG8gd291bGQgYmUgdGhlICJBIiBvbiBhIGdpdmVuIGRheS53ZSB1c2VkIHRvIGNyaXRpY2l6ZSBSdXNzIGhhcnNobHkgY2FsbGluZyBoaW0gdGhlICJuaW5qYSB0dXJ0bGUiIChpdCB3YXMgYWN0dWFsbHkgd29yc2UgYW5kIGknbSBsb3cga2V5IGFzaGFtZWQgb2YgbXkgbWlzdGFrZXMpIGJlY2F1c2UgaGUgcGxheWVkIGV4dHJlbWVseSBzZWxmaXNobHkgYWxtb3N0IHRvIGEgZmF1bHQuIEhlIHdvdWxkIGp1c3QgbG93ZXIgaGlzIGhlYWQgYW5kIGRyaXZlIHRvIHRoZSByaW0gKGhlIHN0aWxsIGRvZXMpIHdoZW4gS2Qgd291bGQganVzdCBiZSBzdGFuZGluZyB3aWRlIG9wZW4gYmVoaW5kIHRoZSBhcmMuIApEYWxsYXMgd2FzIG9uY2UgaG9tZSB0byBzb21lIG9mIHRoaXMgY291bnRyeSdzIG1vc3QgbGVnZW5kYXJ5IHVuZGVyZ3JvdW5kIHJvb21zICAgUmVkbWFuJ3MgQ2x1YiBhbmQgdGhlIEFtVmV0cyB0b3AgYW1vbmcgdGhlbS4gCkV2ZW4gYSBmZXcgeWVhcnMgYmFjaywgdGhpcyBnYW1lIHdhcyBub3QgcG9wdWxhciBhcyBpdCBpcyB0b2RheS4gTW9zdCBjYXNpbm8gZ29lcnMgd2VyZSBmYW4gb2YgdGhlIHJvdWxldHRlIGFuZCBvdGhlciBnYW1lcy4gCldlIGhhdmUgdGhpcyBleHRyYXZhZ2FudCBleHBlY3RhdGlvbiB0aGF0IG91ciBsaXZlcyBzaG91bGQgYmUgZmlsbGVkIHdpdGggbGF1Z2h0ZXIgYW5kIHNtaWxlcyAyNC83LCB3aGVuIGluIHJlYWxpdHkgbW9zdCBvZiBvdXIgbGl2ZXMgYXJlIHB1bmN0dWF0ZWQgYnkgbG9uZyBwZXJpb2RzIG9mIGJvcmVkb20vdW5lYXNlLiAKWW91IGNhbiByZWFzb25hYmx5IGRpc2NvdW50IGNlcnRhaW4gaGFuZHMgbGlrZSA3NW8gdXN1YWxseSB3aGVuIHNvbWVvbmUgcmFpc2VzIHV0Zy4gCk5vbiB2ZXJiYWwgY29uc2VudCBjYW4gc3RpbGwgYmUgZW50aHVzaWFzdGljIG90aGVyd2lzZSBtdXRlIHBlb3BsZSB3b3VsZG4gYmUgYWJsZSB0byBoYXZlIHNleCBhbmQgdGhhdCBhYmxlaXN0IGJ1bGxzaGl0LiAKU28gbm93IHRoYXQgd2UgZ29pbmcgdG8gYmUgbWFraW5nICQ4NWsgYSB5ZWFyIHdpdGhvdXQgdXBzaWRlLCBKb2UgTWFpbnN0cmVldCBpcyBnb2luZyB0byBoYXZlIGhpcyByZXZlbmdlLCByaWdodD8gV3JvbmchLiAKQ29sZSB3YXMgdHJhdW1hdGl6ZWQgYnkgaGlzIGFiaWxpdHkgdG8gc2VlIHRoZSBkZWFkLCBhbmQgaXQgcmVhbGx5IHdvcmUgb24gaGlzIG1vbS4gCkkgc3Rvb2QgYnkgZm9yIG1vbnRocyBtb250aHMgbW9udGhzIG1vbnRocyBob3BpbmcgZm9yIGEgY2hhbmdlLiAKQ29tbWFuZG8gb3BlbnMgd2l0aCBTY2h3YXJ6ZW5lZ2dlciBjYXJyeWluZyBhbiBlbm9ybW91cyB0cmVlIGxpa2UgaXRzIG5vdGhpbmcuIApUaGUgSm9uYXMgQnJvdGhlcnMgd2lsbCBqb2luIEphbWVzIENvcmRlbiBmb3IgYSB3ZWVrIGxvbmcgdGFrZW92ZXIgb24gVGhlIExhdGUgTGF0ZSBTaG93IHN0YXJ0aW5nIE1vbmRheSwgTWFyY2ggNCB0aHJvdWdoIFRodXJzZGF5LCBNYXJjaCA3ICgxMjozNyAxOjM3IEFNLCBFVC9QVCksIG9ubHkgb24gQ0JTLiBUaGUgYnJvdGhlcnMgd2lsbCBhY2NvbXBhbnkgQ29yZGVuIG9uIE1vbmRheSBmb3IgYW4gZXhjbHVzaXZlIGNoYXQgb24gdGhlIGNvdWNoLCB0ZWxsaW5nIHRoZSBmdWxsIHN0b3J5IGJlaGluZCB0aGVpciByZXVuaW9uIHllYXJzIGluIHRoZSBtYWtpbmcuIFRocm91Z2hvdXQgdGhlIHdlZWssIHRoZXkgd2lsbCB0YWtlIHBhcnQgaW4gc2tldGNoZXMsIHNvbmdzIGFuZCB2YXJpb3VzIExhdGUgTGF0ZSBTaG93IHNlZ21lbnRzLCBpbmNsdWRpbmcgWW91ciBHdXRzIG9yIEZpbGwgWW91ciBHdXRzLCBhIGJyYW5kIG5ldyBLYXJhb2tlLCBwbHVzIHRoZSB3b3JsZCBwcmVtaWVyZSBtdXNpY2FsIHBlcmZvcm1hbmNlIG9mIHRoZWlyIG5ldyBzaW5nbGUsIHRoZSBuZXdseSByZWxlYXNlZCB0ZWFzZXIgZm9yIHRoZWlyIHVwY29taW5nIHdlZWsgb24gVGhlIExhdGUgTGF0ZSBTaG93LCB0aGUgYmFuZCBvZmZpY2lhbGx5IGFubm91bmNlcyB0aGVpciByZXVuaW9uIGFuZCBwcmVtaWVyZXMgYSBjbGlwIG9mIHRoZWlyIGJyYW5kIG5ldyBzaW5nbGUsIHdpbGwgYmUgcmVsZWFzZWQgb24gRnJpZGF5LCBNYXJjaCAxIGF0IDEyOjAwIEFNLCBFVCB3b3JsZHdpZGUgdmlhIFJlcHVibGljIFJlY29yZHMuIFR1bmUgaW4gbmV4dCB3ZWVrIGFzIHRoZSBKb25hcyBCcm90aGVycyB0YWtlIG92ZXIgbGF0ZSBuaWdodCBvbiBDQlMuIENoZWNrIHlvdXIgbG9jYWwgbGlzdGluZ3MgZm9yIG1vcmUgaW5mb3JtYXRpb24uClRoZSBJTUYgaGFkIHNldCBtZWFuaW5nbGVzcyBxdWFudGl0YXRpdmUgdGFyZ2V0cyBpbiBkZXNpZ25pbmcgYW5kIGFwcHJvdmluZyB0aGUgRUZGIHByb2dyYW1tZSBvbiBTZXB0ZW1iZXIgNCwgMjAxMywgYW5kIGhhcyBzaW5jZSBzaG93biBncmVhdCAnZmxleGliaWxpdHknIGluIG1vbml0b3JpbmcgdGhlbSB0byBoZWxwIHRoZSBnb3Zlcm5tZW50IGtlZXAgdGhlIHByb2dyYW1tZSBvcGVyYXRpb25hbCBhbmQgcmFpc2UgZm9yZWlnbiBleGNoYW5nZSByZXNvdXJjZXMgdG8gcmVwYXkgaXRzIGRlYnQuIEFzIHRoZSBnb3Zlcm5tZW50IGZhaWxlZCB0byBtZWV0IGV2ZW4gdGhvc2UgbWVhbmluZ2xlc3MgdGFyZ2V0cywgdGhlIElNRiBjYW1lIHRvIGl0cyByZXNjdWUgaW4gZWFjaCBvZiB0aGUgbGFzdCBmaXZlIHJldmlld3Mgb2YgdGhlIHByb2dyYW1tZS4gCklmIHlvdSBiZXQgZmxvcHMgbGlrZSB0aGF0IHdoYXQgZG9lcyBpdCBtZWFuIHdoZW4geW91IGNoZWNrPyB5b3Ugc2hvdWxkIGNoZWNrIGFsbCBmbG9wcyBsaWtlIHRoYXQgb29wLiBzYW1lIGdvZXMgZm9yIHdoZW4geW91IGhhdmUgQUEgYW5kIHRoZSBib2FyZCBpcyBsaWtlIDczMy4gaXQgcHJldmVudHMgeW91IGZyb20gZ2V0dGluZyByYWlzZWQgYW5kIHB1dCBpbiBzaGl0dHkgc3BvdHMuIHRoYXQgd2F5IHdoZW4geW91IGJldCB0dXJuIGFuZCBoZSByYWlzZXMgeW91IGNhbiBjYWxsIGNvbWZvcnRhYmx5LiB0aGVuIG9uIHRoZSByaXZlciBjL2MgYW5kIG5vdCBnbyBicm9rZS4gT3IgZm9sZCBpZiB5b3UgcmVhbGx5IHRoaW5rIGhlIGhhcyBxdWFkcy4gc3Vja3MgeW91IHJhbiBpbnRvIHRoYXQgY29vbGVyIHRob3VnaApSZWluYXggIDI2IHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIE1heSAxMCwgMjAwNQpJdCBraW5kIG9mIGZ1bm55LCBiZWNhdXNlIENocmlzdGlhbiByZWxpZ2lvbiBpcyBiYXNlZCBvbiB0aGUgaWRlYSB0aGF0IENocmlzdCBkaWVkIHRvIGFic29sdmUgdXMgb2Ygb3JpZ2luYWwgc2luLCBzbywgdGhlcmUgbm8gbmVlZCBmb3IgY2h1cmNoLgpTcHJpbmtsZSB3aXRoIGFwcGxlcyBhbmQgd2FsbnV0cy4gClNoZSByZWFsbHkgd291bGQgYmUgYSBncmVhdCBwb2tlciBwbGF5ZXIhIExvbC4gVGhhdCdzIHdoeSBJIHJlYWxseSB0aGluayBzaGUgaGFzIHNvbWUgdHlwZSBvZiBwZXJzb25hbGl0eSBkaXNvcmRlciAobGlrZSBhbnRpIHNvY2lhbCwgZXRjKS4gQ29tbW9uIHRyYWl0cyBpbiBtYW55IG9mIHRoZW0gaW5jbHVkZSBsYWNrIG9mIGVtcGF0aHkgb3IgcmVnYXJkIGZvciBvdGhlcidzIGZlZWxpbmdzLCBseWluZywgZGVjZWl0LCBtYW5pcHVsYXRpb24gIGJhc2ljYWxseSBldmVyeXRoaW5nIHNoZSBkb2VzISBTaGUgZGVmaW5pdGVseSBoYXMgc29tZXRoaW5nIHdyb25nIHdpdGggaGVyICBubyBub3JtYWwgbW90aGVyIHdvdWxkIGxlYXZlIHRoZWlyIDMga2lkcyBpbiBhbm90aGVyIGNvdW50cnkgdG8gZ28gY2hhc2Ugc29tZSBEISBTaGUncyBzZWxmaXNoIGFuZCBjb3VsZCBjYXJlIGxlc3MgYWJvdXQgYW55b25lIGJ1dCBoZXJzZWxmLiBTY3JldyB0aGUga2lkcyEKR2V0IGEgbWFzc2FnZS4gVGhlIGZvY3VzIG9mIHRoZSBtYXNzYWdlIHNob3VsZCBiZSBvbiB0aGUgZGlzZWFzZWQgYXJlYS4gSXQgaXMgYWxzbyBiZXN0IHRoYXQgdGhlIG9pbCB1c2VkIGluIHRoZSBtYXNzYWdlIGlzIHZpcmdpbiBjb2NvbnV0IG9pbCwgb3Igb3RoZXIgb2lscyB0aGF0IGFyZSBrbm93biB0byBoYXZlIGhlYWxpbmcgZWZmZWN0cy4KQm90aCBtYWpvciBwYXJ0aWVzIHZvdGVkIGxhc3QgeWVhciB0byBpbmNyZWFzZSBsaWNlbnNlcyBmb3IgcG9rZXIgbWFjaGluZSB2ZW51ZXMgZnJvbSAxMCB0byAyMCB5ZWFycywgd2hpY2ggdGhlIGluZHVzdHJ5IHNhaWQgZ2F2ZSB0aGVtIG1vcmUgY2VydGFpbnR5IHRvIGludmVzdC4KUGVubnpvaWwgT2lsIDQwMCBhdCBMYXMgVmVnYXMgMyAzIDE5TW9uc3RlciBFbmVyZ3kgTkFTQ0FSIEN1cCBTZXJpZXMgICBQZW5uem9pbCBPaWwgNDAwTEFTIFZFR0FTLCBOViAgIE1BUkNIIDAzOiBSeWFuIFByZWVjZSwgZHJpdmVyIG9mIHRoZSA0NyBLcm9nZXIgQ2hldnJvbGV0LCBDaHJpcyBCdWVzY2hlciwgZHJpdmVyIG9mIHRoZSAzNyBOYXR1cmFsIExpZ2h0IE5hdHVyZGF5cyBDaGV2cm9sZXQsIE1pY2hhZWwgTWNEb3dlbGwsIGRyaXZlciBvZiB0aGUgMzQgTG92ZSdzIFRyYXZlbCBTdG9wcyBGb3JkLCBhbmQgQnJhZCBLZXNlbG93c2tpLCBkcml2ZXIgb2YgdGhlIDIgRGlzY291bnQgVGlyZSBGb3JkLCByYWNlIGR1cmluZyB0aGUgTW9uc3RlciBFbmVyZ3kgTkFTQ0FSIEN1cCBTZXJpZXMgUGVubnpvaWwgT2lsIDQwMCBhdCBMYXMgVmVnYXMgTW90b3IgU3BlZWR3YXkgb24gTWFyY2ggMywgMjAxOSBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gKFBob3RvIGJ5IFNhcmFoIENyYWJpbGwvR2V0dHkgSW1hZ2VzKS4gClRoaXMgaW52b2x2ZSB1dGlsaXppbmcgbG90cyBvZiBmcmVlIGJldHMgb2J0YWluYWJsZSBieSBvbmxpbmUgZ2FtaW5nIHdlYnNpdGVzIHdvcmtpbmcgYSByZWxhdGl2ZWx5IHNpbXBsZSBzeXN0ZW0gdG8gbWFrZSBzdXJlIHRoYXQgeW91IG9ubHkgZXZlciBtYWtlIHNtYWxsIGxvc3NlcyBpbiByZXR1cm4gZm9yIGRlZmluaXRlIGdhaW5zLiBUaGlzIGlzIGEgc3BvcnRzIGJldHRpbmcgc3lzdGVtIHdoaWNoIHJlbGllcyBvbiB5b3VyIGRldm90aW9uIHRoZSBtYWtpbmcgb2Ygc2V0IGJldHMgYWdhaW5zdCBhbGwgeW91ciBhdmVyYWdlIGJldHMgd29ya2luZyB0b3dhcmRzIGJ1aWxkaW5nIHlvdXIgcHJvZml0cyBncmFkdWFsbHkuIApXaGF0IGl0IHJlYWxseSBsb29rcyBsaWtlLCBnZW9ncmFwaGljYWxseSBzcGVha2luZywgaXMgdmVyeSBzcGVjaWZpYyB0byBkdW5nZW5lc3MgY3JhYiBjb29raW5nLiBJIG5vdCBzdXJlIGlmIGl0IGZyb20gYSBtb2x0LCBvciBpZiBpdCBmcm9tIGEgY3JhYiBib2lsIG9yIGJha2UsIGJ1dCB3aGVuIHlvdSBzZXBhcmF0ZSB0aGUgdG9wIHNoZWxsLCB0aGVyZSBpcyB0aGF0IGxheWVyIG9mIGtpbmQgb2YgY3VzdGFyZHkgc3R1ZmYgYmV0d2VlbiB0aGUgc2hlbGwgYW5kIHRoZSBsdW5ncy4gCllvdSBtYXkgd2FudCB0byBhcHByb2FjaCB0aGlzIGNvbnZlcnNhdGlvbiBjYXJlZnVsbHkuIFlvdSBkb24ndCB3YW50IHRvIGFsaWVuYXRlIHRoZSBvdGhlciBwZXJzb24gb3IgbWFrZSB0aGVtIHRoaW5rIHRoYXQgeW91IHRoaW5rIHRoZXkgYXJlIGNyYXp5LgpPbWFyIG9yaWdpbmFsIGNyaXRpY2lzbSBpcyB0aGF0IGxvYmJ5aW5nIGFuZCBmdW5kaW5nIGZyb20gQUlQQUMgY3JlYXRlcyBhIHNwZWNpYWwgcmVsYXRpb25zaGlwIGJldHdlZW4gcG9saXRpY2lhbnMgd2hvIGFyZSBzdXBwb3NlZCB0byByZXByZXNlbnQgdGhlaXIgY29uc3RpdHVlbnRzLCBhbmQgYSByaWdodCB3aW5nLCBleHBhbnNpb25hcnkgZm9yZWlnbiBnb3Zlcm5tZW50LiBIYXJyaXMgaXMgc2F5aW5nIHRoYXQganVzdCBiZWNhdXNlIGEgcG9saXRpY2lhbiBzdXBwb3J0cyB0aGF0IGZvcmVpZ24gZ292ZXJubWVudCwgYW5kIGdldHMgbW9uZXkgZnJvbSBwZW9wbGUgd2hvIGFsc28gc3VwcG9ydCB0aGF0IGZvcmVpZ24gZ292ZXJubWVudCBiZWNhdXNlIG9mIHRoZWlyIHN1cHBvcnQsIGRvZXNuIG1lYW4gdGhlIHBvbGl0aWNpYW4gaXNuIHJlcHJlc2VudGluZyB0aGVpciBvd24gY29uc3RpdHVlbnRzLiBIb3dldmVyLCBzaGUgYWxsb3dpbmcgdGhhdCBwZW9wbGUgY2FuIGNyaXRpY2l6ZSB0aGF0IGZvcmVpZ24gZ292ZXJubWVudCwgd2l0aG91dCBiZWluZyByYWNpc3QuIApJdCBtdXN0IGJlIGEgdmVyeSBzdHJhbmdlIHZlcnNpb24gb2YgaGVhdmVuIHdoZXJlIHlvdSBzY2hlZHVsZWQgZm9yIFR3byBNaW51dGVzIEhhdGUgYXQgcmFuZG9tIGludGVydmFscyB0byBiZSByaWdodGVvdXNseSBwaXNzZWQgb2ZmIGF0IGFsbCB0aGUgbWFueSBpbmp1c3RpY2VzIGRvbmUgdG8geW91ciBjb3Jwc2UuIFRoZXkgdG9vayB5b3VyIG1vbmV5LCBncnJyciEgVGhleSBkaWRuIGJ1cnkgeW91IGluIHRoZSByaWdodCBjZW1ldGVyeSwgZ3JycnIhIFRoZXkgZGlkbiBjcnkgZW5vdWdoIGF0IHlvdXIgZnVuZXJhbCwgZ3JycnIhIFRoZSBkYW1uIHBvb3JzIGFuZCBicm93bnMgYXJlIHRha2luZyBvdmVyIHRoZSBjb3VudHJ5IHlvdSB1c2VkIHRvIGxpdmUgaW4sIHdoZW4geW91IHdlcmUgc3RpbGwgYWxpdmUhIEdSUlJSIS4gCklmIHRoZXkgY2FuIGhhc2ggaXQgb3V0LCB0aGVuIHRoZXkgd2lsbCBmb3JtIGEgY29hbGl0aW9uICg0MisxMj41Mz1tYWpvcml0eSkgd2hpY2ggd2lsbCBhZ2FpbiBlbGVjdCB0aGUgbmV3IFBNLnhWc3cgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBtb250aHMgYWdvSSBkb24gY2FyZS4gQ2hlY2sgYmFjayBpbiA2IG1vbnRocywgNiB5ZWFycyBhbmQgc2VlIGhvdyBpdCBpcyB0aGVuLiBUaW1lIHdpbGwgdGVsbC4gCkkgbWVhbiwgaXQgd2FzIHJlYWwgYW1hdGV1cmlzaCBzdHVmZiBieSBTbWl0aCwgYW5kIHlvdSBoYXZlIHRvIHdvbmRlciBob3cgaGUgY291bGQgaGF2ZSBnb25lIHRoaXMgZmFyIGluIGhpcyBib3hpbmcgY2FyZWVyIHdpdGhvdXQgbGVhcm5pbmcgdGhhdCBpdCdzIG5vdCBhIHdpc2UgdGhpbmcgZm9yIGhpbSB0byBzdGFuZCB3aXRoIGhpcyBiYWNrIGFnYWluc3QgdGhlIHJvcGVzLi4gCkhlcm8gZm9sZGluZyBpc24ndCByaWRpY3Vsb3VzIHRiaC4gSXQncyBob25lc3RseSBvbmUgb2YgdGhvc2UgY2h1Y2tsZSBhbmQgZm9sZCBzcG90cy4gCkl0IGp1c3Qgc28gZ3JlYXQgaW4gc28gbWFueSB3YXlzLCBmcm9tIHRoZSBkZXNpZ24gdG8gdGhlIHNvdW5kIGFuZCB0aGUgc29uaWMgcG9zc2liaWxpdGllcyBhcmUgc2VlbWluZ2x5IGVuZGxlc3MuIApXZSBvZmZlciBhIGZ1bGwgcmFuZ2Ugb2YgcHJlc2NyaXB0aW9uIG1lZGljYXRpb25zIGluIGFkZGl0aW9uIHRvIG92ZXIgNzBvdmVyIHRoZSBjb3VudGVyIG1lZGljYXRpb25zLiBBbGwgY2hhcmdlcyBpbmN1cnJlZCBhdCBUaGUgQXNoZSBDZW50ZXIgYXJlIGJpbGxlZCB0byB5b3Vyc3R1ZGVudHMnIEJydWluQmlsbGFjY291bnQgNyAxMCBidXNpbmVzcyBkYXlzYWZ0ZXIgc2VydmljZS5TdHVkZW50cyBhcmUgYWJsZSB0byBzZW5kIG1lc3NhZ2VzIHZpYSB0aGUgc2VjdXJlIHBhdGllbnQgcG9ydGFsIHRvIGdldCBtZWRpY2FsIGFkdmljZSwgY29tbXVuaWNhdGUgd2l0aCB0aGVpciBwcmltYXJ5IGNhcmUgcHJvdmlkZXIsIGluc3VyYW5jZSB0ZWFtLCByZWdpc3RlcmVkIGRpZXRpY2lhbiBvciBhIG1lbWJlciBvZiBvdXIgcGhhcm1hY3kgdGVhbS4gVGhleSBjYW4gYWxzbyBvcmRlciB0aGVpciBvd24gU1RJIHByZWduYW5jeSB0ZXN0cyB3aXRob3V0IGFuIGFwcG9pbnRtZW50Li4gCkhvcGVkIGl0IHdvdWxkIHR1cm4gaW50byBhIHJveWFsdHkgZGVhbCBhbmQgaXQgZGlkLiAKU2hlIG1hZGUgc29tZSBjb25kZXNjZW5kaW5nIGNvbW1lbnRzIGFib3V0IG15IGNhcmVlciBhbmQgYXBhcnRtZW50LiBUcmllZCB0byBjb252aW5jZSBtZSBJIHdvdWxkIGJlIGhhcHBpZXIgbGl2aW5nIHdpdGggaGVyIGFuZCBoZXIgNSByb29tbWF0ZXMuIApUaGVpciBnb2FsOiByYWlzZSB0aGUga2lkcyBhbmQgcmV0aXJlIGF0IDU1IHdpdGggJDYwLDAwMCBpbiBhZnRlciB0YXggaW5jb21lLiBUaGV5IGV4cGVjdCB0byBzdHJldGNoIHRoZWlyIHNhdmluZ3MgZm91ciBkZWNhZGVzIHRvIE1hdHQgYWdlIDk1Li4gClNoZSBrbm93cyB0aGF0IGhlciBjbG9zZXN0IGZyaWVuZCBhbmQgb25seSBsb3ZlZCBvbmUgaXMgYSBmdWNraW5nIGlkaW90LiAKVGhlIHRyZWF0bWVudCBvZiBjaHJvbmljIHByb3N0YXRpdGlzIGlzIGRpc21hbC4gQW50aWJpb3RpY3MsIGFudGkgaW5mbGFtbWF0b3J5IGFnZW50cywgYWxwaGEgYmxvY2tlcnMsIGFudGlzcGFzbW9kaWNzLCBhbmFsZ2VzaWNzLCBhbGxvcHVyaW5vbCwgbXVzY2xlIHJlbGF4YW50cywgYW5kIHZhcmlvdXMgbW9kYWxpdGllcyBvZiBpbnZhc2l2ZSBhbmQgbWluaW1hbGx5IGludmFzaXZlIHN1cmdpY2FsIHByb2NlZHVyZXMgaGF2ZSBiZWVuIGFkdm9jYXRlZCBhbmQgZWFjaCBhbmQgZXZlcnkgb25lIGhhcyBzaG93biBzb21lIGRlZ3JlZSBvZiBlZmZpY2FjeSBpbiBhIHNtYWxsIG1pbm9yaXR5IG9mIHBhdGllbnRzICgxKS4gSG93ZXZlciwgZm9yIHRoZSBtYWpvcml0eSBvZiBwYXRpZW50cywgdGhlc2UgdHJlYXRtZW50cyBkbyBub3QgcmVzdWx0IGluIGN1cmUgYW5kIHBhdGllbnRzIGFyZSBsZWZ0IHRvIHdhbmRlciBmcm9tIG9uZSBwaHlzaWNpYW4gdG8gYW5vdGhlciwgaG9waW5nIHRoYXQgdGhlIG5leHQgd2lsbCBoYXZlIHRoZSBrZXkgdG8gYW1lbGlvcmF0aW5nIGhpcyBzeW1wdG9tcy4gCjIuIENhcnJvY2NpbyBBLCBldCBhbC4gTm9uIGNlbGlhYyB3aGVhdCBzZW5zaXRpdml0eSBkaWFnbm9zZWQgYnkgZG91YmxlIGJsaW5kIHBsYWNlYm8gY29udHJvbGxlZCBjaGFsbGVuZ2U6IGV4cGxvcmluZyBhIG5ldyBjbGluaWNhbCBlbnRpdHkuIEFtIEogR2FzdHJvZW50ZXJvbCAoZm9ydGhjb21pbmcpLgpQcm9mZXNzaW9uYWxpc20uIApZb3VyIG5haWwgcGxhdGUgYWxzbyBiZWNvbWVzIGxlc3MgZmxleGlibGUsIGFuZCB5b3VyIG5haWxzIGNhbiBiZWNvbWUgbW9yZSBicml0dGxlIGFuZCBzdXNjZXB0aWJsZSB0byBkYW1hZ2UgW3NvdXJjZTogR2FsbGFudF0uIEN1dGljbGUgY3JlYW1zIGtlZXAgdGhhdCBmcm9tIGhhcHBlbmluZyBieSByZXBsYWNpbmcgdGhlIG5hdHVyYWwgZmF0cyB5b3UgbG9zZSB3aXRoIG90aGVyIGZhdHMgYW5kIHdheGVzIHN1Y2ggYXMgbGFub2xpbiwgcGV0cm9sZXVtIGFuZCBiZWVzd2F4IFtzb3VyY2U6IE1pbGFkeV0uIENoYW5jZXMgYXJlIHlvdXIgaGFuZCBjcmVhbSB3b24ndCBjb250YWluIHRoZSBzYW1lIG1peCBvZiBpbmdyZWRpZW50cyBvciBiZSBxdWl0ZSBhcyBvaWx5Li4gClRoZXkganVzdCBkb24gd2FudCB0by4gCk5vLiAzIFNlbmF0ZSBHT1AgbGVhZGVyIEpvaG4gVGh1bmUgb2YgU291dGggRGFrb3RhIHNhaWQsICJUaGUgaWRlYSB0aGF0IHRoZXkgc2hvdWxkIHRydW5jYXRlIGl0IGRvZXNuJ3QgbWFrZSBzZW5zZSB0byBtZS4iIERlbW9jcmF0aWMgU2VuLiBSaWNoYXJkIEJsdW1lbnRoYWwgb2YgQ29ubmVjdGljdXQgd2VudCBtdWNoIGZ1cnRoZXIsIGRlY2xhcmluZy4gVGhlcmUgaXMgbm93IGhpZ2hseSBjcmVkaWJsZSBldmlkZW5jZSB0aGF0IHRoZSBwcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgY29tbWl0dGluZyBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlIGluIHJlYWwgdGltZSwgcmlnaHQgYmVmb3JlIG91ciBleWVzLiIuCiJTaGUgZnJlYWtlZCBtZSBvdXQuIApUaGVyZSB3YXMgYSB3YXJtIHBsZWFzYW50IHNlbnNlIG9mIGhvbWUgaW4gdGhlIHRob3VnaHQgb2YgaXQsIGV2ZW4gdGhvdWdoIHNoZSBoYWQgbmV2ZXIgbGl2ZWQgdGhlcmUuLiAKSW4gb3JkZXIgdG8gY3JlYXRlIHRoYXQgZGlzdGFuY2UgdGhvdWdoLCB5b3UgbXVzdCBvYnNlcnZlIHRoZSBlbW90aW9ucyBwcmFnbWF0aWNhbGx5LiBZb3UgbmVlZCB0byBleGFtaW5lIHRoZW0sIGFuZCByYXRoZXIgdGhhbiB0cnkgdG8gYXZvaWQgdGhlIHNvdXJjZXMgb2YgdGhlIHByb2JsZW1zIHRoYXQgaGF2ZSBtYWRlIHlvdSBmZWVsIHRoaXMgd2F5LCB0dXJuIHlvdXIgYXR0ZW50aW9uIHRvIHdoZXJlIHlvdXIgZ3V0IGlzIHRlbGxpbmcgeW91IHRvIHR1cm4gdG8uIEl0IGlzIG9ubHkgaW4gdGhlIHJlc2lzdGFuY2Ugb2YgdGhlIGNhdXNlIHRoYXQgd2UgYmVjb21lIGRlZXBseSBmcnVzdHJhdGVkLiAKVGhlcmUgaXMgYSBoaXN0b3JpY2FsIGV4cGxhbmF0aW9uIGZvciB3aHkgQnJpc2JhbmUncyBjaXR5IHN0cmVldHMgYXJlIHNvIG5hcnJvdyEgV2hlbiBRdWVlbnNsYW5kIGJlY2FtZSBhIHNlcGFyYXRlIGNvbG9ueSBmcm9tIE5ldyBTb3V0aCBXYWxlcyBpbiAxODU5LCBpdCBkaWQgc28gd2l0aCB2ZXJ5IGxpdHRsZSBwdWJsaWMgbW9uZXkuIEEgY29uc2VxdWVuY2Ugb2YgdGhpcyB3YXMgdGhhdCB0aGUgZWFybHkgQ0JEIHdhcyBkZXZlbG9wZWQgbW9zdGx5IGJ5IHByaXZhdGUgaW52ZXN0b3JzLiBUaGUgQ0JEIHdhcyBkZXNpZ25lZCB1c2luZyBNZWxib3VybmUncyBIb2RkbGUgR3JpZCBhcyBhIGJhc2lzLCB3aXRoIHNvbWUgYWx0ZXJhdGlvbnMgKGluY2x1ZGluZyB0aGUgcmVtb3ZhbCBvZiAnbGl0dGxlIHN0cmVldHMnIHdoaWNoIHdlcmUgbm90IHBvcHVsYXIgaW4gTWVsYm91cm5lIGF0IHRoZSB0aW1lLiBUaGV5IHdlcmUgdGhvdWdodCB0byBhc3NvY2lhdGVkIHdpdGggY3JpbWUgYW5kIHBvdmVydHksIGJlY2F1c2UgdGhleSBvZnRlbiBoYWQgY2hlYXBlciByZW50IGFuZCB0aGVyZWZvcmUgJ2xvd2xpZXInIGNpdGl6ZW5zLCBhbmQgdGhleSB3ZXJlIGFsc28gdGhvdWdodCB0byBlbmNvdXJhZ2UgZGlzZWFzZS4gTWVkaWNpbmUgYXQgdGhpcyB0aW1lIGhhZCBhIG1pYXNtaWMgdGhlb3J5IG9mIGRpc2Vhc2UsIHdoaWNoIHN1Z2dlc3RlZCB0aGF0IGRpc2Vhc2Ugd2FzIGNhdXNlZCBieSBiYWQgZ2FzZXMgdGhhdCBnb3QgdHJhcHBlZCBpbiBjcmFtcGVkIHNwYWNlcyBsaWtlIGxpdHRsZSBzdHJlZXRzKS4gT25lIGFsdGVyYXRpb24gd2FzIHRoYXQgdGhlIHN0cmVldHMgd2VyZSBtYWRlIG5hcnJvd2VyLiBUaGUgSG9kZGxlIEdyaWQgd2FzIGRlc2lnbmVkIHRvIG1lZXQgcmVndWxhdGlvbnMgc2V0IG91dCBieSB0aGUgTlNXIGdvdmVybm1lbnQgdW5kZXIgRGFybGluZyBpbiAxODI5LCB3aGljaCBzdGF0ZWQgdGhhdCBzdHJlZXRzIG5lZWRlZCB0byBiZSBhdCBsZWFzdCA5OSBmdCB3aWRlLiBIb3dldmVyLCBCcmlzYmFuZSdzIHN0cmVldHMgd2VyZSBtYWRlIG5hcnJvd2VyIGZvciB0d28gcmVhc29uczogZmlyc3RseSB0byBjdXQgZXhwZW5kaXR1cmUsIHNpbmNlIHRoZXkgd2VyZSBwcml2YXRlbHkgZnVuZGVkOyBhbmQgc2Vjb25kbHkgYmVjYXVzZSBEYXJsaW5nJ3MgcmVndWxhdGlvbnMgd2VyZSBub3QgZW5mb3JjZWFibGUgaW4gQnJpc2JhbmUgYmVjYXVzZSB0aGUgQ0JEIHdhcyBkZXZlbG9wZWQgd2l0aCBtb3N0bHkgcHJpdmF0ZSByYXRoZXIgdGhhbiBwdWJsaWMgbW9uZXksIGFuZCBiZWNhdXNlIE5TVyBsYXcgd2FzIG5vIGxvbmdlciBhcHBsaWNhYmxlIGluIFFMRCBmcm9tIDE4NTksIHNpbmNlIGl0IHdhcyBub3cgaXRzIG93biBjb2xvbnkgd2l0aCBpdHMgb3duIGxhd3MuCiJDcm9ja2ZvcmRzIGhhcyBhY3RlZCBmYWlybHkgYW5kIGhvbmVzdGx5IGF0IGFsbCB0aW1lcyBhbmQgd2UgYXJlIHRoZXJlZm9yZSBwbGVhc2VkIHRoYXQgdGhlIENvdXJ0IG9mIEFwcGVhbCBoYXMgaGVsZCB0aGF0IHRoZSBkZWNpc2lvbiBub3QgdG8gcGF5IG91dCB0byBNciBJdmV5IHdhcyB0aGUgY29ycmVjdCBvbmUsIiBoZSBzYWlkLgpUaGV5IGZpbmlzaGVkIHRoZWlyIDR0aCAzaHIgc2Vzc2lvbiwgYnV0IEkgbm90IG1ha2luZyB0aGVtIGNsZWFyIGxldmVscyBmb3IgWFAuIApPciBpZiB0aGUgbmF0aW9uYWwgZWxlY3Rpb24gd2FzIGluZmx1ZW5jZWQgb3IgZmluYW5jZWQgYnkgYSBmb3JlaWduIGxlYWRlci4gT3IgaWYgbmF0aW9uYWwgY3JlZGliaWxpdHkgaXMgZXJvZGVkIGJ5IGFicnVwdGx5IGxlYXZpbmcgaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnRzLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25TVCBLaWxkYSBpcyBjb25maWRlbnQgdGhlIGVsaXRlIHRyYWluaW5nIGNlbnRyZSBpdCB3aWxsIGRldmVsb3AgaW4gaXRzIGhlYXJ0bGFuZCB3aWxsIGJlIG9uZSBvZiB0aGUgYmVzdCBpbiB0aGUgQUZMIGFuZCBwdXQgdGhhdCBlbHVzaXZlIHNlY29uZCBwcmVtaWVyc2hpcCB3aXRoaW4gcmVhY2guIFRoZSBTYWludHMgeWVzdGVyZGF5IGFubm91bmNlZCB0aGV5IHdvdWxkIGJ1aWxkIGEgJDEwLjI1IG1pbGxpb24gdHJhaW5pbmcgY2VudHJlIGluIEZyYW5rc3Rvbiwgd2hpY2ggd2lsbCByZXBsYWNlIHRoZWlyIHJ1biBkb3duIHRyYWluaW5nIGJhc2UgYXQgTW9vcmFiYmluLiAKVG93YXJkcyB0aGUgZmluYWwgdHdvIHllYXJzIG9mIHRoZSB3YXIsIG1vcmUgYW5kIG1vcmUgQ2FuYWRpYW4gc29sZGllcnMgdm9sdW50ZWVyZWQgZm9yIHRoZSBGb3Jlc3RyeSBDb3JwcywgYXMgaXQgd2FzIHZpZXdlZCBieSBtYW55IGFzIGEgd2F5IHRvIHNlcnZlIHRoZSBjb3VudHJ5IHdpdGhvdXQgZmFjaW5nIHRoZSBHZXJtYW4gQXJteSBpbiBkaXJlY3QgY29uZmxpY3QuIApJJ20gbm90IHN1cmUgaG93IGl0J3MgYWxsIGFycmFuZ2VkIHRob3VnaCBhbmQgaXQncyBkZWZpbml0ZWx5IGV4cGVuc2l2ZS4KVGhlIGFuc3dlciB3aWxsIGJlIGUgbGlxdWlkLCB0aGVuIHZhcGUgcGVucywgdGhlbiBrYW5nZXIgc3ViYm94IG1pbmkgdHlwZSBtb2RzIGFuZCB0YW5rcywgdGhlbiBldmVyeXRoaW5nIGVsc2UuIAoyKSBUaG9zZSB3aG8gaGFkIGhpZ2hlciBjb25zdW1wdGlvbiBvZiBhbmltYWwgKG1lYXQgYW5kIGRhaXJ5KSBkZXJpdmVkIEFMQSBvbWVnYSAzIGluY3JlYXNlZCB0aGVpciByaXNrIG9mIGFkdmFuY2VkIHByb3N0YXRlIGNhbmNlciBieSBhbiBhdmVyYWdlIG9mIDUzJS4KV291bGQgbmV2ZXIgc2F5IG5ldmVyLCB5b3UgbmV2ZXIga25vdywgYnV0IHdlIGFsbCBrbm93IHdoYXQgaXMgZ29pbmcgb24gYW5kIHdoYXQgaGFzIGRldmVsb3BlZCwgTHVvbmdvIHRvbGQgdGhlIEplZmYgTyBtb3JuaW5nIHJhZGlvIHNob3cgb24gVmFuY291dmVyIENGT1guIApIaXMgcGVyc29uYWxpdHkgaXMgdG90YWxseSBvcHBvc2l0ZSBmcm9tIHRoZSBvdGhlciBtYW4gd2hvIGlzIGJ1c3kgaW4gd29ybGRseSBhY2NvbXBsaXNobWVudHMuIEhlIHNlZW0gdG8gYmUgaHVtYmxlIGRvd24gdG8gZWFydGguIEhlIHJlcHJlc2VudHMgYWxsIHRob3NlIHdob3NlIHJlbGlnaW9uIGlzIGh1bWFuaXR5LiBXaG8gdHJ1c3RlZCB0aGF0IHRoZWlyIGdvb2Qgd29ya3Mgd2lsbCBsZWFkIHRoZW0gdG8gR29kIEFsbWlnaHR5IHRoZXkgc2F2ZWQgbm8gbWF0dGVyIHdoYXQuIFRoZWlyIGNvbmZpZGVuY2UgaXMgbm90IGluIEdPRCBBTE1JR0hUWSwgYnV0IHdvcmtzIG9mIHRoZWlyIG93biBoYW5kczogdGhhdCB3aWxsIGFsd2F5cyBmYWlsOyBiZWNhdXNlIHRoZXJlIGlzIG5vIHNvdWwgb24gZWFydGggd2hvIGhhcyBub3QgbGllZCBvbmNlLgpJIGRvbiBoYXZlIGF1dGlzbSBidXQgYm90aCBteSBjaGlsZHJlbiBkby4gTm9pc2UgY2FuY2VsbGluZyBoZWFkcGhvbmVzIGFjdHVhbGx5IGhlbHAgTUUgd2l0aCBhbnhpZXR5IHdoZW4gSSBpbiBjcm93ZGVkIHBsYWNlcy4gWW91IGNhbiBnZXQgYSBjaGVhcCBwYWlyIG9uIEFtYXpvbiBhbmQgc2VlIHdoYXQgc2hlIHRoaW5rcyBhYm91dCBpdC4gWW91IG5vdCBsaXN0ZW5pbmcgdG8gbXVzaWMgdGhyb3VnaCB0aGVtLCBpdCBzaW1wbHkganVzdCBibG9ja2luZyBvdXQgYmFja2dyb3VuZCBub2lzZS4gWW91IGNhbiBzdGlsbCBoZWFyIHBlb3BsZSB0YWxraW5nIHRvIHlvdS4gSSBkb24gc2VlIGhvdyBhbnlvbmUgd291bGQgc2VlIHRoYXQgYXMgcnVkZS4gQW5kIGlmIHNoZSBkb2VzLCBtYXliZSBzaGUgc2hvdWxkIHRyeSBpdCB0b28gdG8gc2VlIGhvdyBzb290aGluZyBpdCBjYW4gYmUuIEkgbGV0IG15IG1vbSBwdXQgbWluZSBvbiBhbmQgc2hlIGxvdmVkIGl0IQpDb25maXJhIGFzIGRpY2FzLCBjb25zZWxob3MgZSByZXNwb3N0YXMgZG9zIHVzdSBkbyBZYWhvbyEgUmVzcG9zdGFzIHBhcmEgIlBvciBmYXZvciwgbWUgYWp1ZGVtIHBhcmEgcXVlIHNlcnZlIG8gcmVtZWRpbyBTRUNOSURBWk9MPyIuIE5pc3VsaWQgUGFyYSBRdWUgU2VydmUgMTAwIC4KSSB0aG91Z2h0IHRoYXQgc291bmRlZCBzaW1wbGUgZW5vdWdoLiBJdCB3YXMgZW1vdGlvbiByZWNvZ25pdGlvbiwgc28gd2h5IHdlcmUgd2UgY2FsbGluZyBpdCBmYWNpYWwgY29kaW5nPyBUaGVuLCBJIHNwZW50IGEgbG90IG9mIHRpbWUgd2l0aCBrZXkgc3Rha2Vob2xkZXJzIGluIHRoZSBjb21wYW55LCBpbmNsdWRpbmcgb3VyIENFTyB3aG8gd2FzIG91dCBvbiB0aGUgcm9hZCB0YWxraW5nIGFib3V0IHRoaXMgbmV3IGN1dHRpbmcgZWRnZSB0ZWNobm9sb2d5LiAKV2hlbiB0aGUgY2FsY2l1bSBzdG9yZSBpcyBkZXBsZXRlZCwgYnkgYnJpZWYgZXhwb3N1cmUgdG8gcm9jayBjb25jZXJ0IGxldmVsIHNvdW5kcyBvciBieSB0aGUgaW50cm9kdWN0aW9uIG9mIGNhbGNpdW0gY2hlbGF0b3JzLCB0aGUgc291bmQgZXZva2VkIHJlc3BvbnNlcyBvZiB0aGUgc2Vuc29yeSBjZWxscyBkZWNyZWFzZS4gVXBvbiByZXN0b3JhdGlvbiBvZiB0ZWN0b3JpYWwgbWVtYnJhbmUgY2FsY2l1bSwgc2Vuc29yeSBjZWxsIGZ1bmN0aW9uIHJldHVybnMuIFRoaXMgcHJldmlvdXNseSB1bmtub3duIG1lY2hhbmlzbSBjb250cmlidXRlcyB0byBleHBsYWluaW5nIHRoZSB0ZW1wb3JhcnkgbnVtYm5lc3MgaW4gdGhlIGVhciB0aGF0IGZvbGxvd3MgZnJvbSBsaXN0ZW5pbmcgdG8gc291bmRzIHRoYXQgYXJlIHRvbyBsb3VkLCBhIHBoZW5vbWVub24gdGhhdCBtb3N0IHBlb3BsZSBleHBlcmllbmNlIGF0IHNvbWUgcG9pbnQgaW4gdGhlaXIgbGl2ZXMuV2hlbiBzb3VuZCBzdGltdWxhdGVzIHRoZSBzdGVyZW9jaWxpYSBvbiB0aGUgc2Vuc29yeSBjZWxscyBpbiB0aGUgaGVhcmluZyBvcmdhbiwgQ2EyKyBpb25zIGZsb3cgdGhyb3VnaCBtZWNoYW5pY2FsbHkgZ2F0ZWQgaW9uIGNoYW5uZWxzLiAKV2hhdCBJIGFtIGJhc2ljYWxseSBzdHVtcGVkIG9uIGlzIHRoYXQgdGhlIGRlZ3JlZSBpdHNlbGYgd2FzIG5vdGFyaXplZCBpbiAyMDEwLiBBbSBJIHN1cHBvc2VkIHRvIG9idGFpbiBhIG5ldywgY2xlYW4gZGVncmVlIGZyb20gbXkgdW5pdmVyc2l0eSwgYW5kIHRoZW4gbm90YXJpemUgYSBjb3B5IG9mIHRoYXQsIGZvbGxvd2VkIGJ5IGdldHRpbmcgdGhlIENoaW5hIHNwZWNpZmljICJhcG9zdGlsbGUiPyBPciBjYW4gSSBwcm9jZWVkIHdpdGggdGhlIHByb2Nlc3MgdXNpbmcgdGhpcyBkZWdyZWUgSSBoYXZlIHRoYXQgd2FzIG5vdGFyaXplZCBpbiAyMDEwPyBPciwgc2luY2UgaXQgaXMgbm90YXJpemVkLCBpcyBpdCBwb3NzaWJsZSB0byB0YWtlIHRoZSBkZWdyZWUgaW50byB0aGUgQ2hpbmVzZSBjb25zdWxhdGUgaW4gU2VvdWwgYW5kIGdldCBpdCBhdXRoZW50aWNhdGVkIHRoYXQgd2F5IGluc3RlYWQ/LiAKV2hlbiBkbyBwZW9wbGUgbW9zdCB2YWx1ZSBwb2tlciBjaGlwcz8gSW4gZ2VuZXJhbCwgaXQgd291bGQgc2VlbSB0aGF0IHBlb3BsZSBmaW5kIHRoZW0gbW9zdCB2YWx1YWJsZSB3aGVuIHRoZXkgYXJlIHdpbm5pbmcgdGhlbSEgV2hpbGUgdGhpcyBpcyB0cnVlLCB0aGVyZSBpcyBhbm90aGVyIHdheSB5b3UgY2FuIGFjcXVpcmUgY2hpcHMgd2l0aG91dCB3aW5uaW5nIHRoZW0gaW4gYSBjb250ZXN0ZWQgZ2FtZS4gWW91IGNvdWxkIGFsd2F5cyBwdXJjaGFzZSBhIHNldCBvZiBleGNlbGxlbnQgY2hpcHMgZm9yIHlvdXIgb3duIHBlcnNvbmFsIGNvbGxlY3Rpb24uLiAKUGVyaW9kLiBUaGV5IGNhbiBsaXZlIHdpdGhvdXQgdGhlIG1vbmV5Li4gCkkgd2VudCB3aXRoIHRoZSBHb29nbGUgcGxheSBnaWZ0IGNhcmQuIApNeSBwcm9wZXIgbmFtZSBpcyBMaW5kc2F5LCBhbHRob3VnaCBJJ20ga25vd24gYXMgUmFpbnMuIERlc3BpdGUgYmVpbmcgYSBnaXJsIEknbSBhY3R1YWxseSBoaWdobHkgbWVjaGFuaWNhbGx5IG1pbmRlZCwgcGFydGljdWxhcmx5IGlmIGNhcnMgYXJlIGludm9sdmVkLkkgc3BlbnQgYWxtb3N0IDUgeWVhcnMgb2YgbXkgbGlmZSB3b3JraW5nIGZvciBhbiBhdXRvbW90aXZlIG1hbnVmYWN0dXJlciBiYXNlZCBpbiB0aGUgTWlkbGFuZHMsIHVudGlsIEkgZ2F2ZSB1cCB3b3JrIGluIEp1bmUgMjAwNiB0bywgZXIsIGJlY29tZSBhIGxhZHkgb2YgbGVpc3VyZTMgdW50aWwgb3VyIHBsYW5zIHRvIHN0YXJ0IGEgZmFtaWx5IGtpY2sgb2ZmLiBJIGxpdmUgaW4gTGVhbWluZ3RvbiBTcGEsIGFuZCBhbSBmcmVxdWVudGx5IGFtYXplZCBhdCB0aGUgbG9jYWwgaG91c2UgcHJpY2VzLCB3aGljaCBwcm9iYWJseSBtZWFucyB0aGF0IGJ5IHRoZSB0aW1lIHdlIG5lZWQgYSBmYW1pbHkgaG91c2UsIHdlIHdvbid0IGJlIGFibGUgdG8gYWZmb3JkIG9uZSAuSSB3YXMgZHVtYiBlbm91Z2ggdG8gbWFyayB0aGUgc3BvdCB3aGVyZSBJIGxpdmUgb24gdGhlIEgyRzIgUmVzZWFyY2hlcidzIE1hcC4gCkkgbWF5IG5ldmVyIGZpZ2h0IGFnYWluLCBidXQgb3VyIHJlbGF0aW9uc2hpcHMgd2VyZSBmYXIgbW9yZSB0aGFuIHRoYXQuIApUaGUgcG9pbnQgaXMgc29kYXMgYXJlIG5vdCB0b3hpYyB0byB0aGUgYm9keSBPTkxZIGJlY2F1c2Ugb2YgdGhlaXIgY2Fsb3JpZmljIGNvbnRlbnQuIE90aGVyIGNoZW1pY2FscyBhbmQgZmxhdm9yaW5nIGFnZW50cyBhZGRlZCB0byBpdCBtYWtlIGl0IGEgcG9pc29uIHdhdGVyLi4gCk5vdyBCdWZmZXQgc2VlbXMgbGlrZSBhIHZlcnkgcGhpbGFudGhyb3BpYyBwZXJzb24sIHNvIGl0cyBub3QgYSBob3JyaWJsZSB0aGluZyB0aGF0IGhlIGhhcyB0aGlzIG11Y2ggd2VhbHRoLCBidXQgaXQgaXMgdW5mYWlyLiBUaGUgc2hlZXIgYW1vdW50IG9mIG1vbmV5IGhlIGNvdWxkIHRocm93IGF0IHlvdSwgZGVtb25zdHJhYmx5IG1ha2VzIGl0IHVuZmFpci4uIApFbiBiaWVuIGRlcyBmYW9ucywgaWwgYXBwYXJhdCBjb21tZSB1biBqdXN0aWNpZXIgYXBwb3J0YW50IGxhIGx1bWlyZS4gCiJGb3IgZGVjYWRlcyBvdXIgZmF0aGVyIHdhcyByZWx1Y3RhbnQgdG8gc2VsbCB0aGUgZmlsbSByaWdodHMgdG8gJ09uZSBIdW5kcmVkIFllYXJzIG9mIFNvbGl0dWRlJyBiZWNhdXNlIGhlIGJlbGlldmVkIHRoYXQgaXQgY291bGQgbm90IGJlIG1hZGUgdW5kZXIgdGhlIHRpbWUgY29uc3RyYWludHMgb2YgYSBmZWF0dXJlIGZpbG0sIG9yIHRoYXQgcHJvZHVjaW5nIGl0IGluIGEgbGFuZ3VhZ2Ugb3RoZXIgdGhhbiBTcGFuaXNoIHdvdWxkIG5vdCBkbyBpdCBqdXN0aWNlLCIgR2FyY2lhIHNhaWQuICJCdXQgaW4gdGhlIGN1cnJlbnQgZ29sZGVuIGFnZSBvZiBzZXJpZXMsIHdpdGggdGhlIGxldmVsIG9mIHRhbGVudGVkIHdyaXRpbmcgYW5kIGRpcmVjdGluZywgdGhlIGNpbmVtYXRpYyBxdWFsaXR5IG9mIGNvbnRlbnQsIGFuZCB0aGUgYWNjZXB0YW5jZSBieSB3b3JsZHdpZGUgYXVkaWVuY2VzIG9mIHByb2dyYW1zIGluIGZvcmVpZ24gbGFuZ3VhZ2VzLCB0aGUgdGltZSBjb3VsZCBub3QgYmUgYmV0dGVyIHRvIGJyaW5nIGFuIGFkYXB0YXRpb24gdG8gdGhlIGV4dHJhb3JkaW5hcnkgZ2xvYmFsIHZpZXdlcnNoaXAgdGhhdCBOZXRmbGl4IHByb3ZpZGVzLiIKQmVhdGFibGUgQ2FzaW5vIEdhbWVzOiBHYW1lcyBsaWtlIHBva2VyLCBibGFja2phY2ssIHZpZGVvIHBva2VyLCBldGMuIGZhbGwgdW5kZXIgdGhpcyBjYXRlZ29yeS4gVW5iZWF0YWJsZSBDYXNpbm8gR2FtZXM6IFRoaXMgY29tcHJpc2VzIGdhbWVzIGxpa2UgQmFjY2FyYXQsIENyYXBzLCBSb3VsZXR0ZSwgMyBjYXJkIHBva2VyLCA0IGNhcmQgcG9rZXIsIEtlbm8gYW5kIHBsZW50eSBtb3JlLgpBbm90aGVyIGltcHJlc3NpdmUgcHJvZmVzc29yIGlzIERyLiAKQnV0IEJhbmdrb2sgaXMgYWxzbyBsYXllcmVkIGF0IHRoZSBzdHJlZXQgbGV2ZWwsIGluIHRoYXQgaW4gb25lIHN0cmVldCB5b3Ugd2lsbCBzZWUgYSBiaWcgbW9kZXJuIG1hbGwsIGJ1dCBpZiB5b3UgbG9vayBjbG9zZXIgYW5kIGFyb3VuZCB5b3Ugc2VlIGEgbWl4dHVyZSBvZiBhbGwgc29ydHMgb2Ygb3RoZXIga2luZHMgb2Ygc3RyZWV0IGxpZmUgb2YgYWxsIGxldmVscyBvZiBzb2NpZXR5IGFuZCBoaXN0b3J5Li4gCllvdSBjYW4gc2l0IG9uIGEgY291Y2ggdG8gdGFrZSBpbiB0aGUgdmlldy4gCjEuIEtlZXAgRXNzZW50aWFsIE9pbHMgaW4gYSBzZWN1cmUgcGxhY2UgYXdheSBmcm9tIGNoaWxkcmVuIGFuZCBwZXRzLgpUaGUgc2Vjb25kIHJlcXVpcmVzIHlvdXIgb3Bwb25lbnQgdG8gY2FyZSBhYm91dCB3aGF0IGluIGZyb250IG9mIGhpbS4gCkdpbnNidXJnIG9uY2Ugc2FpZCB0aGF0IFNjYWxpYSB3YXMgYWJzb2x1dGVseSBjaGFybWluZyBtYW4sIGFuZCBoZSBjYW4gbWFrZSBldmVuIHRoZSBtb3N0IHNvYmVyIGp1ZGdlIGxhdWdoLiBTaGUgc2FpZCB0aGF0IHNoZSB1cmdlZCBoZXIgZnJpZW5kIHRvIHRvbmUgZG93biBoaXMgZGlzc2VudGluZyBvcGluaW9ucyBoZSBiZSBtb3JlIGVmZmVjdGl2ZSBpZiBoZSBpcyBub3Qgc28gcG9sZW1pY2FsLiAKJ0kgc3VwcG9ydCBNdXNsaW0gd29tZW4gd2l0aCBvciB3aXRob3V0IGhpamFiJzogQW1uYSdzIHBvc3QgaW4gZnVsbApZb3UgYmVlbiBlbW90aW9uYWxseSBhYnVzZWQgYnkgdGhpcyBndXksIGFuZCBpdCBzb3VuZHMgbGlrZSBpdCBtaWdodCBoYXZlIGJlY29tZSBwaHlzaWNhbC4gSGUgbGl0ZXJhbGx5IGhlbGQgeW91IGFnYWluc3QgeW91ciB3aWxsLiAKVGhlcmUgbm8gcG9pbnQgc3RheWluZyBvbiB0aGUgYnJhY2tldCB5b3UgaW4sIHlvdSBuZWVkIHRvIHByb2dyZXNzIHNvb25lciBvciBsYXRlciBzbyBnbyBmb3Igd2hhdCBJIHRvbGQgeW91IHdoaWNoIGlzIHRoZSBiZXN0IGJyYWNrZXQgdG8gYmUgaW4gb25jZSB5b3UgYWJsZSB0byBnZXQgNzBzLgpNYXliZSBJIHNvdW5kIHBhcmFub2lkLCBidXQgaXQgYmV0dGVyIHRvIGhhdmUgdGhlIHNhZmV0eSBlcXVpcG1lbnQgYW5kIGFuZCBub3QgbmVlZCBpdCwgdGhhbiB0byBuZWVkIGl0IGFuZCBub3QgaGF2ZSBpdC4gCkFuZCB0aGVuLCBhIHZhc3Qgc2lsZW5jZS4iIEEgZGVidXQsIHRoZSBib29rIHN1ZmZlcnMgaW4gY29tcGFyaXNvbiB0byBUaGUgUGVyZmVjdCBOYW5ueSwgd2hvc2UgdGVjaG5pcXVlIGlzIG1vcmUgc29waGlzdGljYXRlZCBhbmQgd3JpdGluZyBtb3JlIHJlZmluZWQuIApSZWFkZXJzIHdobyB0aGluayBpdCBzaWxseSBhcmUgbGlrZWx5IHRoZSBvbmVzIHdobyBmaW5kIHJlYWwgbGlmZSBleGFtcGxlcyBvZiB0aGlzIGJlaGF2aW91ciBzaWxseS4gSSBoYXZlIGNvdXNpbnMgd2hvc2UgcGFyZW50cyBnYXZlIHRoZW0gQSwgQiwgQyBuYW1lcyBpbiBiaXJ0aCBvcmRlciwgYW5kIGEgZnJpZW5kIHdobyBnYXZlIGhlciB0d2lucyBBIFogbmFtZXMuIFNhbWUgd2l0aCBOYXRhbGllIGJvcm4gb24gQ2hyaXN0bWFzLCBvciBhIHR3aW4gY2FsbGVkIFRob21hcy4gCkkgYmFyZWx5IGxlYXZlIHRoZSBob3VzZSBub3cgYW5kIGFsbW9zdCBoYXZlbiBzcG9rZW4gdG8gbXkgb2xkIGZyaWVuZHMgaW4gbW9udGhzIGJlY2F1c2UgSSBjYW4gdHJ1c3QgYW55b25lLiAKRm9yIGV4YW1wbGUsIGlmIHlvdSBuZWVkIG1lYXQsIGJ1dCBkbyBub3QgZ3JvdyBtZWF0IGFuaW1hbHMsIHlvdSBuZWVkIHRvIHRyYWRlIGZvciBtZWF0LiBCdXQgeW91LCBiZWluZyB0aGUgc3VwZXIgcHJlcGFyZWQgZm9yIGVjb25vbWljIGNvbGxhcHNlIGdlbml1cyB0aGF0IHlvdSBhcmUsIGhhdmUgbm90aGluZyB0byB0cmFkZSBidXQgY29taWNzIGFuZCBjaGVlc2Ugd2hpei4gClRoZSByZWd1bGF0b3IgdGhhdCBpbXBvc2VkIHRoZSBydWxlcyBPZmZpY2Ugb2YgdGhlIFN1cGVyaW50ZW5kZW50IG9mIEZpbmFuY2lhbCBJbnN0aXR1dGlvbnMgc2hvdWxkIHJldmlldyB0aGVtLCBhbmQgYW1vcnRpemF0aW9uIHBlcmlvZHMgZm9yIGZlZGVyYWxseSBpbnN1cmVkIG1vcnRnYWdlcyBzaG91bGQgYmUgZXh0ZW5kZWQgdG8gMzAgeWVhcnMgdG8gZ2l2ZSBidXllcnMgYSBicmVhaywgdGhlIHJlYWwgZXN0YXRlIGJvYXJkIHNhaWQuLiAKRmVsdCBsaWtlIGZpeGluZyBteSBib2R5IHdhcyB0aGUgcHVycG9zZSBvZiBhbGwgbXkgeWVhcnMgb24gcGxhbmV0IEVhcnRoIGFuZCB0byBzb21lIGV4dGVudCwgdGhhdCBpcyBzdGlsbCB0cnVlLCBzaGUgYWRkcy4gT24gbG92aW5nIG15c2VsZiBhbmQgYWNjZXB0aW5nIG15IGJvZHkuIFByZXNlbnRpbmcgbXlzZWxmIHdpdGggc29tZSByYWRpY2FsIHNlbGYgbG92ZSBpcyB0aGUgcHVycG9zZSBvZiBteSBkYXlzIG9uIHRoaXMgcGxhbmV0LiAKTU9OUk9FIEhPU1BJVEFMIFRoaWVmIExlYXZlcyBHSSAkMTUwIGFuZCBUaWNrZXRzIE9BS0xBTkQsIENhbGlmLiAoQiBBaXIgRm9yY2UgU2d0LiBXaWxsaWFtIEMuIExhd3NvbiwgYmF0dGVyZWQsIGJydWlzZWQsIGFuZCBudXJzaW5nIHdoYXQgaGUgY2FsbGVkICJ0aGUgZ3JhbmRkYWRkeSBvZiBhbGwgaGFuZ292ZXJzIiBpcyBjb252aW5jZWQgc29tZSB0aGllZiBoYWQgYSBzbGlnaHQgZWxlbWVudCBvZiBwYXRyaW90aXNtLiBUaHVyc2RheSBuaWdodCwgdGhlIDIzIHllYXIgb2xkIGFpcm1hbiBiZWdhbiBhIHRvdXIgb2YgT2FrbGFuZCB0YXZlcm5zLCBjZWxlYnJhdGluZyBoaXMgcmUgZW5saXN0bWVudCBpbnRvIHRoZSBBaXIgRm9yY2UuIApUaGUgbW9vbiBzdWZmZXJzIGZyb20gdGhlc2UgZWZmZWN0cyB0byBhIG11Y2ggbGVzcyBkZWdyZWUuIEl0IGlzIHRvbyBmYXIgYXdheSBmb3IgdGhlIGF0bW9zcGhlcmUgdG8gYmUgYSBmYWN0b3IsIGFuZCB0aGUgaW1wYWN0IG9mIGVhcnRoIGdyYXZpdGF0aW9uYWwgYW5vbWFsaWVzIGFyZSBncmVhdGx5IHJlZHVjZWQuIEl0cyBwb3NpdGlvbiBjYW4gYmUgY2hhbmdlZCBieSB0aGUgc3VuIGFuZCBvdGhlciBwbGFuZXRzLCBidXQgdW5saWtlIGFydGlmaWNpYWwgc2F0ZWxsaXRlcywgYmVpbmcgYSBmZXcgbWV0ZXJzIG91dCBvZiBwbGFjZSBpc24gcGFydGljdWxhcmx5IG5vdGljZWFibGUuLiAKRiBBSVJNQU4gVGVhY2hlcnMgaW4gdmlsbGFnZSBhbmQgcnVyYWwgc2Nob29scyBpbiB0aGUgdG93biBvZiBMYWZheWV0dGUsIE90bHNjbywgT25vbmRhZ2EgYW5kIFR1bGx5IGFyZSBiYWNrIGluIHRoZWlyIGNsYXNzcm9vbXMgdG9kYXkgYWZ0ZXIgYSB0d28gIGRheSBjb25mZXJlbmNlIiBkaXJlY3RlZCBieSBNLiAKIlBsYW5uaW5nIGRlY2lzaW9ucyBoYXZlIHRvIGJlIG1hZGUgb24gcGxhbm5pbmcgZ3JvdW5kcyByZWdhcmRsZXNzIG9mIHdobyB0aGUgYXBwbGljYW50IGlzLCJDciBDYW1lcm9uIHNhaWQuICJUbyBmYXZvdXIgb3Igbm90IGZhdm91ciBhIHBsYW5uaW5nIGFwcGxpY2F0aW9uIG9uIGFuIGluZGl2aWR1YWwgY291bmNpbGxvciB2aWV3IG9mIHRoZSBhcHBsaWNhbnQgaW4gcXVlc3Rpb24gaXMgc29tZXRoaW5nIHRoYXQgaXMgZnJhdWdodCB3aXRoIGRhbmdlci4iIEluIE1heSBsYXN0IHllYXIsIHRoZSBOU1cgUG9saWNlIFRhc2tmb3JjZSBSYXB0b3IgcmFpZGVkIHRoZSBwcmVtaXNlcyBhbmQgaWRlbnRpZmllZCB0aGF0IHRoZSBidWlsZGluZyB3YXMgYmVpbmcgdXNlZCBmb3IgYSBjb21tZXJjaWFsIHB1cnBvc2Ugd2l0aG91dCBjb3VuY2lsIGNvbnNlbnQuIApBIGdyYXBoaWMgaWxsdXN0cmF0aW9uIGFwcGVhcmVkIG9uIHRoZSBmcm9udCBwYWdlIG9mIHRoZSBOZXcgWW9yayBUaW1lcyBvbiBBdWd1c3QgNC4gClRoZXkgbGl0ZXJhbGx5IG5ldmVyIGJlZW4gYSBiaWcgZGVhbCBiZWZvcmUgbm93LCBhcyBldmlkZW5jZWQgYnkgdGhlIGZhY3QgdGhhdCBtb3N0IHBlb3BsZSB0aGluayB0aGUgY2FyYXZhbnMganVzdCBiZWdhbiBsYXN0IHllYXIuIEFuZCBJIGNhbiBhZ3JlZSB3aXRoIGVhc2llciBpbW1pZ3JhdGlvbiBhbmQgaGFyZGVyIGlsbGVnYWwgaW1taWdyYXRpb24gaW4gdGhlb3J5LCBidXQgdGhpcyBhZG1pbmlzdHJhdGlvbiBpcyBvbmx5IGludGVyZXN0ZWQgaW4gdGhlIHNlY29uZCBoYWxmLiBNYW55IG9mIHRoZSBmYW1pbGllcyBzZXBhcmF0ZWQgYXQgdGhlIGJvcmRlciBjYW1lIGhlcmUgdG8gYXBwbHkgZm9yIGFzeWx1bSwgd2hpY2ggaXMgcGVyZmVjdGx5IGxlZ2FsIGJ1dCB0aGUgb25seSBwbGFjZSBpbW1pZ3JhbnRzIGNhbiBhcHBseSBpcyBpbnNpZGUgdGhlIFVuaXRlZCBTdGF0ZXMuIApIb3cgY2FuIGEgUHJlc2lkZW50IGFzIHNtYXJ0IGFzIE9iYW1hIHN1cnJvdW5kIGhpbXNlbGYgd2l0aCBhIGJ1bmNoIG9mIHdhciBwcm9maXRlZXJzIGFuZCBwZWRkbGVycyBvZiBkZWF0aD8gTGV0dGluZyBCdXNoIG1hbiwgR2F0ZXMsIGJlIGhpcyBtb3N0IHRydXN0ZWQgYWR2aXNlciBvbiB0aGUgd2FyIGlzIGFzIGlmIER1bWJsZWRvcmUgbGlzdGVuZWQgdG8gVm9sZGVtb3J0IHJpZ2h0IGhhbmQgbWFuLiBPYmFtYSBzaG91bGQgZmlyZSBHYXRlcyAoYW5kIENsaW50b24gZm9yIHRoYXQgbWF0dGVyKSBhbmQgc3Vycm91bmQgaGltc2VsZiB3aXRoIHBlb3BsZSB3aG8gYXJlIG5vdCBpbnZlc3RlZCBpbiBlbmRsZXNzIHdhciBidXQgcmF0aGVyIHNlZWtpbmcgcmVhbCBhbHRlcm5hdGl2ZXMgdG8gaXQuIApUaGUgSGlkZGVuIFdvcmxkIGZvY3VzZXMgb24gSGljY3VwJ3MgY29udGludWluZyBjb21pbmcgb2YgYWdlIHN0b3J5IGFzIGhlIGV2b2x2ZXMgYmV5b25kIHRoaW5raW5nIG9mIGhpbXNlbGYgYXMgYmVpbmcgZGVmaW5lZCBieSBoaXMgZHJhZ29uLiBIZWxwaW5nIGhpbSB0aHJvdWdoIHRoaXMgY3Jpc2lzIG9mIGNvbmZpZGVuY2UgYXJlIGhpcyBnaXJsZnJpZW5kIGFuZCBwb3RlbnRpYWwgZnV0dXJlIHdpZmUsIEFzdHJpZCAoQW1lcmljYSBGZXJyZXJhKSwgYW5kIGhpcyBtb3RoZXIsIFZhbGthIChDYXRlIEJsYW5jaGV0dCkuIAoiS25vd2xlZGdlIGlzIHBvd2VyLiBLbm93bGVkZ2UgYnVpbGRzIG91ciBhd2FyZW5lc3MsIGFuZCB3aGVuIHdlIGJ1aWxkIG91ciBhd2FyZW5lc3MsIHdlIGFyZSBiZXR0ZXIgYWJsZSB0byBjb3BlLCIgc2hlIHNhaWQuICJBbHNvLCBidWlsZGluZyBjb25uZWN0aW9ucyBhbmQgY29tbXVuaXR5IGlzIHZlcnkgaW1wb3J0YW50IHdpdGggY29waW5nLiIKVGhlcmUgYXJlIG1hbnkgdHlwZXMgb2YgdGhlcmFweSBzdHlsZXMgYW5kIGVhY2ggb2YgdGhlbSBoYXMgaXRzIG93biByb2xlLiBJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gU3lkbmV5IGFyb21hdGhlcmFweSBtYXNzYWdlLCB0aGVuIHlvdSBzaG91bGQgcHJvYmFibHkga25vdyB0aGF0IGl0IGNhbiBiZSBiZW5lZmljaWFsIGZvciB5b3VyIGJvZHkgaW4gbW9yZSB0aGFuIG9uZSB3YXlzLiAKVG8gcHJlcGFyZSBmb3IgcGxheWluZyBhIHdvbWFuIHdobyB3YXMgYWxsIG9mIHRob3NlIHRoaW5ncyAoYW5kLCBvbiB0b3Agb2YgdGhlbSwgc29tZW9uZSB3aG8gaGFzIHBsZWFkIGd1aWx0eSBmb3IgYSBmZWRlcmFsIGNyaW1lKSwgc2hlIG5lZWRlZCB0byBsZWFybiBldmVyeXRoaW5nIHNoZSBjb3VsZCBhYm91dCB0aGUgcG9rZXIgaW5kdXN0cnkgYW5kIE1vbGx5J3Mgcm9sZSBpbiB0aGUgSG9sbHl3b29kIHBva2VyIHJpbmcuIFNoZSBhZG1pdHMgdGhhdCB3aGVuIHNoZSBmaXJzdCBHb29nbGVkIHRoZSBzdG9yeSwgc2hlIGZvdW5kIGl0IGltcG9zc2libGUgbm90IHRvIGp1ZGdlIGhlci4gCk9uIG1ldCBjZXR0ZSBoaXN0b2lyZSBkdSByY2hhdWZmZW1lbnQgY2xpbWF0aXF1ZSAgdG91dGVzIGxlcyBzYXVjZXMuIERlcHVpcyBsZSBkYnV0IGRlIGwnYWNjbHJhdGlvbiBkZXMgbWlzc2lvbnMgZGUgQ08yLCBxdWUgbCdvbiBwZXV0IHNpdHVlciAgMTk0NSwgbGEgdGVtcHJhdHVyZSBkZSBsYSBwbGFudGUgYSBhdWdtZW50IGRlIDAsNCBkZWdyICEgRXN0IGNlIHF1ZSAwLDQgZGVnciBwcm92b3F1ZSBkZXMgbWlncmF0aW9ucyA/IElsIHkgYSBkZXMgdGFzIGRlIHJhaXNvbnMgY29ub21pcXVlcywgbWFpcyBkaXJlIHF1ZSBjJ2VzdCBsYSBmYXV0ZSBkZSAwLDQgZGVnciwgcGVybWV0dGV6IG1vaSBkJ2VuIGRvdXRlciAhIERlIGxhIG1tZSBmYW9uLCBpbCB5IGEgZXUgdW5lIGhhdXNzZSBkZXMgb2NhbnMgaWwgeSBhIDEyIDAwMCBhbnMsIGF2ZWMgdW5lIGZvbnRlIGRlcyBnbGFjZXMgZXQgbGUgbml2ZWF1IGRlcyBtZXJzIHF1aSBhIGF1Z21lbnQgZGUgMTIwIG10cmVzLiAKU2FiZWFuIG11c3QgZml4IHRoZSBwZW4gcHJvYmxlbSBmaXJzdC4gCkV4YWN0bHkgdGhpcyEgSSBsb29rIGF0IHRoZSBwcmljaW5nIHRpZXIsIGFuZCBJIGZlZWwgbGlrZSBBcHBsZSBzcGVudCBtb3JlIHRpbWUgZW5naW5lZXJpbmcgYSBwZXJmZWN0IHN5c3RlbSB0byBmb3JjZSBldmVyeW9uZSB0byBidXkgbW9yZSB0aGFuIHRoZXkgbmVlZC4gCkFsc28gVmlld2VkIENhc2V3b3JrZXIgSW50ZXJ2aWV3aW5nIFRlY2huaXF1ZXMgU29jaWFsIENvdW5zZWxvciBQYXkgU2NhbGUgRWR1Y2F0aW9uIFJlcXVpcmVkIFRoZSBQcm9zIENvbnMgb2YgYSBDYXJlZXIgaW4gU29jaWFsIFdvcmsgRGlzdGluZ3Vpc2hpbmcgQ2hhcmFjdGVyaXN0aWNzIG9mIFNvY2lhbCBXb3JrIExpc3Qgb2YgUHJpbmNpcGxlcyBpbiBDbGluaWNhbCBTb2NpYWwgV29yayBQcmFjdGljZSBRdWFsaXRpZXMgb2YgYSBDaGlsZCBQc3ljaG9sb2dpc3QgV2hhdCBJcyBDcml0aWNhbCBUaGlua2luZyBpbiBTb2NpYWwgV29yaz8KVGhlIEFjdHVhbCBSb3VsZXR0ZSBXaGVlbCBpcyBzcHVuIGluIG9uZSBkaXJlY3Rpb24gYW5kIGEgYmFsbCBpcyBzcHVuIGluIHRoZSBvdGhlci4gV2hlbiB0aGUgYmFsbCBzdG9wcyBzcGlubmluZyBpdCB0aGVuIGxhbmRzIGluIG9uZSBvZiB0aGUgcG9ja2V0cyB1cG9uIHdoaWNoIHRoZSBwbGF5ZXJzIGJldC4gCllvdSB0aGluayB5b3UgY2FuIGdldCBhd2F5IHdpdGggc2F5aW5nIHRoYXQgc2hpdCB0byBtZSBvdmVyIHRoZSBJbnRlcm5ldD8gVGhpbmsgYWdhaW4sIGZ1Y2tlci4gQXMgd2Ugc3BlYWsgSSBhbSBjb250YWN0aW5nIG15IHNlY3JldCBuZXR3b3JrIG9mIHNwaWVzIGFjcm9zcyB0aGUgVVNBIGFuZCB5b3VyIElQIGlzIGJlaW5nIHRyYWNlZCByaWdodCBub3cgc28geW91IGJldHRlciBwcmVwYXJlIGZvciB0aGUgc3Rvcm0sIG1hZ2dvdC4gCldoZW4geW91IGFyZSBwbGF5aW5nIHBva2VyLCB5b3UgYXJlIHBsYXlpbmcgdGhlIHBlcnNvbmFsaXR5IG9mIHlvdXIgb3Bwb25lbnQgbW9yZSB0aGFuIHlvdXIgY2FyZC4gCkNvbW1lbnQgc2F2b2lyIHNpIG1vbiBnZXN0ZSBlc3QgcyBBc3N1cmV6IHZvdXMgcXVlIHZvdXMgdm91cyB0cm91dmV6IGJpZW4gc3VyIGxlIHNpdGUgcyBkZSBEZXNqYXJkaW5zIDoKVGhlICJnZXQgcmljaCBxdWljayIgdGhpbmcgaXMgZ3JlYXQgZm9yIGVhcmx5IGxpZmUsIGJ1dCBwZW9wbGUgc3RhcnQgdG8gZmFsbCBvZmYgc2luY2UgdGhlcmUgbGl0dGxlIHRvIGVhcm4sIGFuZCBubyBpbmNlbnRpdmUgdG8gZmluYW5jaWFsbHkgaW52ZXN0IGluIGEgZnJlZSBnYW1lLiBJZiBJIHNwZW5kIG1vbmV5IG9uIGl0LCBJIG1vcmUgbGlrZWx5IHRvIGtlZXAgcGxheWluZywgaWYgSSBrZWVwIHBsYXlpbmcsIEkgYmUgbW9yZSBsaWtlbHkgdG8gc3BlbmQgbW9yZSBtb25leS4uIApXaGVuIEkgZGlkbid0IEkgd29rZSB1cCB0byBmaW5kIG15IGNhciB3YXMgZ29uZS4gRGFkIGhhZCB0YWtlbiBpdCB0byBGcmVkJ3MgZ2FzIHN0YXRpb24gYW5kIHRvbGQgbWUgdG8gZ28gdGFsayB0byBoaW0gdG8gZmlndXJlIG91dCBob3cgSSB3b3VsZCBnZXQgdGhlIGNhciBiYWNrLiBVbmNsZSBGcmVkIGFuZCBJIGFncmVlZCBvbiAkMTAuMDAgYSBtb250aCBwYXltZW50cy4gClRoZSBvc3RlbnNpYmxlIGdvYWwgb2YgdGhlIHBvbGljeSBpcyB0byBwcmV2ZW50IENhbmFkaWFuIG9pbCBzYW5kcyBjcnVkZSBmcm9tIGJlaW5nIHVzZWQgaW4gdGhlIG1hc3NpdmUgRVUgbWFya2V0cGxhY2UuIFlldCB0aGUgRlFEIG9ubHkgc2Vla3MgdG8gYXNzaWduIGNhcmJvbiB2YWx1ZXMgdG8gYml0dW1lbiBmcm9tIHNvdXJjZXMgdGhhdCBhcmUgdHJhbnNwYXJlbnQgYW5kIHB1Ymxpc2ggdGhlIGRhdGEgdGhhdCBFVSBidXJlYXVjcmF0cyByZXF1aXJlIHRvIG1ha2UgYW4gYXNzZXNzbWVudCBvZiB0aGVpciBjYXJib24gdmFsdWUuIEluIGVzc2VuY2UsIFJ1c3NpYSwgVmVuZXp1ZWxhIGFuZCBhIG51bWJlciBvZiBNaWRkbGUgRWFzdGVybiBhbmQgQWZyaWNhbiBwcm9kdWNlcnMgZ2V0IGEgZnJlZSBwYXNzIGJlY2F1c2UgdGhleSByZWZ1c2UgdG8gbWFrZSB0aGlzIHR5cGUgb2YgZGF0YSBwdWJsaWNhbGx5IGF2YWlsYWJsZSwgaWYgdGhleSBldmVuIGhhdmUgaXQgYXQgYWxsLiAKVGhpcyBpcyB0aGUgaW5mYW1vdXMgIlRoZSBGYW1lIE1vbnMgZXIiIGFsYnVtLCBhbmQgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcy4gCkkgdGhpbmsgSSBoYXZlIGEgZGVjZW50IG1vcmFsIGNvbXBhc3MgdGhhdCB3YXMgaW5zdGlsbGVkIGJ5IG15IHBhcmVudHMsIHdobyBoYXZlIGFsd2F5cyB0YXVnaHQgdXMgdG8gdHJ5IGFuZCBhbHdheXMgZG8gdGhlIHJpZ2h0IHRoaW5nLiAKSSB0aGluayBzby4gWWVzLCBtdWNoIG9mIDRjaGFuIGFyZSBiYXNlbWVudCBkd2VsbGVycywgYnV0IHRoZSBoaXZlIG1pbmQgd291bGQgaGF2ZSBleHBlcnQgbGV2ZWwgb3JnYW5pemF0aW9uLCBwcm9ncmFtbWluZyBhbmQgcmVzZWFyY2ggc2tpbGxzLCBhbmQgdGhlIGNvbWJpbmVkIG1vbmV5IG9mIGFsbCB1c2Vycy4gVGhlIGhpdmUgbWluZCB3b3VsZCBjbGVhcmx5IHVuZGVyc3RhbmQgd2hhdCB3b3JrcyBhbmQgd2hhdCBkb2Vzbid0LiAKS2luZGx5UGF1c2UgIDI0IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSmFycmluZyBpZiBub3QgcGFydGljdWxhcmx5IHN1cnByaXNpbmcuIFJUIGhhcyBhIGhpc3Rvcnkgb2Ygc2F5aW5nIG9uZSB0aGluZyB3aGlsZSBhY3RpdmVseSBlbmRvcnNpbmcgdGhlIG9wcG9zaXRlLiBMYXN0IHllYXIgdGhleSByZWxlYXNlZCB0aGUgUHJpZGUgc2hpcnQgYW5kIGhhZCB0aGUgTEdCVCBwYW5lbCBhdCBSVFggYW5kIGFsc28gaGFkIGFuIGVwaXNvZGUgb2YgQ2FtcCBDYW1wIHdoZXJlIHRoZXkgbWFkZSBhICJidW5kbGUgb2Ygc3RpY2tzIiBqb2tlLiBUaGVyZSBhIHByZXR0eSBiaWcgZGl2aWRlIGJldHdlZW4gbGl2ZSBhY3Rpb24gYW5kIGFuaW1hdGlvbiBpbiBnZW5lcmFsIGluIHRlcm1zIG9mIHRoaXMga2luZCBvZiBzdHVmZi4gSXQgb25lIG9mIHRob3NlIHNpdHVhdGlvbnMgd2hlcmUgSSBkb24gdGhpbmsgYW55b25lIGF0IHRoZSBjb21wYW55LCBvciBhdCBsZWFzdCB0aGUgZm9yd2FyZCBmYWNpbmcgcGVyc29uYWxpdGllcyBvZiB0aGUgY29tcGFueSwgaXMgaG9tb3Bob2JpYyBvciBoYXRlZnVsIG91dHJpZ2h0LCBidXQgdGhlcmUgYXJlIGRlZmluaXRlbHkgc29tZSBwZW9wbGUgd2hvIHN0aWxsIGRvIGFuZCBzYXkgc3R1ZmYgdGhhdCBwcmV0dHkgdGVsbGluZyBvZiBob3cgdGhleSBhY3R1YWxseSBmZWVsIGFuZCB3aGF0IHRoZXkgdmlldyBpcyBhY2NlcHRhYmxlLCBhbGwgd2hpbGUgYmFsa2luZyBhdCB0aGUgaWRlYSBvZiBiZWluZyBob21vcGhvYmljIHdoZW4gaXQgY2FsbGVkIG91dC4gWW91IGNhbiBkbyBob21vcGhvYmljL3RyYW5zcGhvYmljL3JhY2lzdC9nZW5lcmFsIHNoaXR0eSB0aGluZ3Mgd2l0aG91dCBiZWluZyBhbiBvdmVydCBob21vcGhvYmUvdHJhbnNwaG9uZS9yYWNpc3Qvc2hpdCBwZXJzb24gaW4gZ2VuZXJhbC4gT2YgY291cnNlIG5vIG9uZSBvdXQgdGhlcmUgYmVhdGluZyBnYXkgcGVvcGxlIHVwLCBidXQgdGhhdCBkb2VzbiBtZWFuIHRoZXkgY2FuIGRvIGFuZCBzYXkgaHVydGZ1bCB0aGluZ3MgdG8gdGhlIExHQlQgY29tbXVuaXR5IGFuZCB0aGVpciBMR0JUIGZhbnMsIGFuZCB0aGUgZmFuZG9tIGFuZCB0aGlzIHN1YiBpbiBnZW5lcmFsIGp1c3QgY2FuIHNlZW0gdG8gdW5kZXJzdGFuZCB0aGF0LgpUaGVpciBwbGFuIGlzIHRvIHJldGlyZSBpbiB0aHJlZSB5ZWFycy4gQXQgdGhhdCB0aW1lLCBMb3Vpc2EgY29tcGFueSBwZW5zaW9ucyB3aWxsIG5vdCBiZSByZWR1Y2VkLiAKQ29tbWVudCByZXByZXIgdW4gc2Fsb24gZGUgbWFzc2FnZSBvIGwnb24gbWFzc2UgZCd1biBzYWxvbiBkZSBtYXNzYWdlIG8gbGVzIG1hc3NldXNlcyB2b250IHBsdXMgbG9pbiBzZWxvbiB1bmUgZ3JpbGxlIHRhcmlmZSBldCBzdXIgZGVtYW5kZSBkdSBjbGllbnQgPyBDJ2VzdCBiaWVuIGwgcXVlIGxlcyBhdXRvcml0cyBwb2xpY2lyZXMgcGVpbmVudC4gRGFucyB1bmUgc29jaXQgZGUgZHJvaXQsIGlsIGZhdXQgYXBwb3J0ZXIgbGEgcHJldXZlIGRlcyBhY2N1c2F0aW9ucyBwcm9mcmVzLiAKSnVzdCBsaWtlIGluIHJlYWwgbGlmZSwgcGxheWluZyBwb2tlciBtZWFucyB5b3Ugc2hvdWxkIGJlIG1vcmUgcGxheWZ1bCBhbmQgbm90IHN0YXkgc2FmZSBieSBwbGF5aW5nIG9uZSBjaGFyYWN0ZXIuIE1peCB5b3VyIGdhbWUgYSBsaXR0bGUuIApNeSBpc3N1ZXMgd2VyZQpPbmUgb2YgdGhlIGVhc2llc3QgdGhpbmdzIHlvdSBjYW4gZG8gdG8gcmVsaWV2ZSBzdHJlc3MgaXMgdG8gdGFrZSBhIHNob3dlci4gCkthdGhyeW4gSC4gUnVlbW1sZXIsIGEgbGF3eWVyIHJlcHJlc2VudGluZyB0aGUgZmVkZXJhdGlvbiwgd3JvdGUgaW4gYSBNYXkgMjAxNiBsZXR0ZXIgdG8gdGhlIEVFT0MgdGhhdCBvdmVyIHRoZSBwcmV2aW91cyBmb3VyIHllYXJzLCB3b21lbidzIG5hdGlvbmFsIHRlYW0gcGxheWVycyBhdmVyYWdlZCBhbG1vc3QgJDI4MCwwMDAsIGEgZmlndXJlICQ5MCwwMDAgbW9yZSB0aGFuIG1lbidzIG5hdGlvbmFsIHRlYW0gcGxheWVycy4gCjUgcG9pbnRzICBzdWJtaXR0ZWQgMjMgZGF5cyBhZ28KVGhlIHRoaW5nIGlzLCBJIHRydXN0IHRob3NlIGd1eXMgd2l0aCBkZWFkbHkgZm9yY2Ugd2F5IG1vcmUgdGhhbiBhbnkgb3RoZXIgVG9tLCBEaWNrLCBvciBIYXJyeSwgYmVjYXVzZSBJIGtub3cgdGhhdCB3ZSBzY3JlZW4gdGhlIGhlbGwgb3V0IG9mIHBlb3BsZSB0byBtYWtlIHN1cmUgb25seSB0aGUgYmVzdCwgYnJpZ2h0ZXN0LCBhbmQgZnJpZW5kbGllc3Qgd2VyZSBpbiBvdXIgZ3JvdXAuIE91ciBndXlzIG5ldmVyIGhhcmFzc2VkIHBlb3BsZSwgbmV2ZXIgYXJyZXN0ZWQgcGVvcGxlIHdoZW4gd2FybmluZ3Mgd2VyZSBhbiBvcHRpb24sIGFuZCBjb3VsZCBvZnRlbiBiZSBzZWVuIGhlbHBpbmcga2lkcyBpbiBzaGl0dHkgYnJva2VuIGRvd24gY29sbGVnZSBraWQgY2Fycy4gSSBtZW50aW9uZWQgdGhlIHdhcm5pbmdzIGJlY2F1c2UgaXQgd2FzIGEgbmVhdCB0aGluZyBmb3IgdXMsIGJ1dCBpdCBpc24gbGlrZSB3ZSB3ZXJlIHBsYW50aW5nIHNwaWVzIG9yIHNvbWUgc2hpdCBzbyB3ZSBjb3VsZCBnZXQgYXdheSB3aXRoIHNtdWdnbGluZyBjb2tlIG9yIHNvbWV0aGluZy4gCk9mZmljZXJzIGZvdW5kIGEgbG9hZGVkIGhhbmRndW4gaW4gdGhlIGJhc2VtZW50IGJ1dCB0aGVyZSB3ZXJlIG5vIGZpbmdlcnByaW50cyBvciBETkEgb24gaXQsIGZvcmVuc2ljIGlkZW50aWZpY2F0aW9uIG9mZmljZXIgRGV0LiBKdWxpZSBEb2JsZXIgdGVzdGlmaWVkLiBBIGtuaWZlIHdhcyBub3QgcmVjb3ZlcmVkIGluc2lkZS4KSSBrbm93IEkgbmVlZCB0byBsZWFybiBldmVyeXRoaW5nIGV2ZW50dWFsbHksIGJ1dCBJIHNob3VsZCBwcm9iYWJseSBmb2N1cyBteSBhdHRlbnRpb24gb24gdGhlIHJlbGV2YW50IGluZm9ybWF0aW9uIGZpcnN0Li4gClRoZW4gY29tZSBiYWNrIGZvciBwaWNuaWNzIG9uIHRoZSByaXZlciwgcmVudCBhIGJpY3ljbGUgYW5kIGN5Y2xlIHlvdWlkbywgdGFrZSB0aGUgYm9hdCB1cCB0byB0dWtzZW9tIGFuZCB2aXNpdCBjaGlsZHJlbnMgZ3JhbmQgcGFyay4gSGVhZCB0byB0aGUgaXNsYW5kcyBvZiBpbmNoZW9uLCBtaW5zb2tjaG9uIGkgd291bGQgZG8gYWdhaW4sIGdhcmRlbiBvZiBtb3JuaW5nIGNhbG0gaXMgYSBtdXN0LiAKVGhhdCB3aHkgaXQgdGhlIHRyYXZlbGVyIHJlc3BvbnNpYmlsaXR5IHRvIGJyaW5nIHRoZSBhcHByb3ByaWF0ZSBkb2N1bWVudGF0aW9uIHJlZ2FyZGluZyB3aGF0IHlvdSBoYXZlIGFuZCB3aGVyZSBpdCBjYW1lIGZyb20sIHNvIHRoZSBDQlAgZ3V5IGRvZXNuIGhhdmUgdG8gYnJlYWsgb3V0IGhpcyAyMDAgcGFnZSBtYW51YWwgdHJ5IHRvIGZpZ3VyZSBvdXQgdGhlIGNvcnJlY3QgdGhpbmcgdG8gZG8sIGFuZCBwb3RlbnRpYWxseSBtYWtlIGEgbWlzdGFrZSBhbmQgY29zdCB5b3UgeW91ciBmbHV0ZXMuLiAKU29tZSA4MCBwZXJjZW50IG9mIER1dGNoIEpld3MgZGllZCBpbiB0aGUgSG9sb2NhdXN0LCBnaXZpbmcgSG9sbGFuZCB0aGUgaGlnaGVzdCBkZWF0aCByYXRlIGluIHdlc3Rlcm4gRXVyb3BlLiBPZiB0aGUgMTA3LDAwMCBEdXRjaCBKZXdzIHNlbnQgdG8gdGhlIGNhbXBzLCBvbmx5IDUsMDAwIGxpdmVkLiAKQSBjb3VudGVyIGx1bmNoIGhlcmUgd291bGQgYmUgY29vbCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkYXksIGJ1dCBpdHMgYSBiaXQgcHJpY2V5LiBPdGhlcndpc2UsIGFuIGFic29sdXRlIGluc3RpdHV0aW9uIG9mIG1lbGJvdXJuZSBpcyBwZWxsaWdyaW5pcyBvbiBCb3Vya2Ugc3QuIApHZXJtYW4gaGVyZSBjaGltaW5nIGluLiBEaWQgZGVtbyBkaXNrcyBpbiB0aGUgVVMganVzdCBoYXZlIGRlbW9zIG9yIGRpZCB5b3UgZ2V0IGZ1bGwgZ2FtZXMgYXMgd2VsbD8gTXkgbWFnIG9mIGNob2ljZSBpbiBHZXJtYW55IHdhcyBjYWxsZWQgIlNjcmVlbmZ1biIgYW5kIHRoZSBkZW1vIGRpc2sgb24gdGhlcmUgb25seSBvY2Nhc2lvbmFsbHkgaGFkIGFjdHVhbCBkZW1vcyBvbiBpdCAgIG1vc3Qgb2YgdGhlIHRpbWUgaXQgd2FzIGp1c3QgZnVsbCBnYW1lcywgYnV0IHVzdWFsbHkgdGhleSB3ZXJlIGluZGllIHRpdGxlcy4gSW4gd2hhdCBJIHdvdWxkIGNvbnNpZGVyIHRoZSBnb2xkZW4geWVhcnMgdGhleSBhbHNvIGhhZCBhIGJ1bmNoIG9mIFJQRyBNYWtlciBnYW1lcyBmcm9tIHRoZSBzdXBlciBhY3RpdmUgR2VybWFuIFJQRyBNYWtlciBzY2VuZSBpbiB0aGVyZSBhcyB3ZWxsLCB0aG9zZSB3ZXJlIG15IGFic29sdXRlIGZhdm9yaXRlcy4gVG8gdGhpcyBkYXkgSSB3b25kZXIgaG93IHRoZXkgZXZlciBnb3QgYXdheSB3aXRoIHNlbGxpbmcgdGhhdCBzdHVmZiwgYmVjYXVzZSB0aG9zZSBSUEcgTWFrZXIgZ2FtZXMgd2VyZSBzdGVhbGluZyBhc3NldHMgZnJvbSBtb3ZpZXMsIFRWIGFuZCBvdGhlciB2aWRlbyBnYW1lcyBsZWZ0LCByaWdodCBhbmQgY2VudGVyLgpPbiB0aGUgdGFjbyBmcm9udCwgeW91J2xsIGZpbmQgZmxhdm9ycyBsaWtlIHN0ZWFrIGFuZCBjb2NoaW5pdGEgKHNsb3cgcm9hc3RlZCBwb3JrKSBhdCBsdW5jaCB0aW1lLCB3aGlsZSB0aGUgZGlubmVyIG1lbnUgb2ZmZXJzIHRoZSB0YWNvcyBkZSBhdG4gKHR1bmEpLCBmaWxsZWQgd2l0aCB0dW5hLCBjdWJlZCBhdm9jYWRvLCBhbmQgZ3JpbGxlZCByZWQgcGVwcGVyLiAKS25pcGhvZmlhcyBhcmUgbWFpbmx5IGZyb20gU291dGggQWZyaWNhIGFuZCB0aGVyZSBhcmUgYWJvdXQgNzAgc3BlY2llcy4gQSBmZXcgYXJlIGFsc28gZm91bmQgaW4gRXRoaW9waWEsIEFyYWJpYSBhbmQgTWFkYWdhc2Nhci4gVGhleSBhcmUgbmFtZWQgYWZ0ZXIgSm9oYW5uIEhpZXJvbnltdXMgS25pcGhvciAoMTcwNCAxNzYzKSB3aG8gcHJvZHVjZWQgYSBmb2xpbyBvbiB0aGVtLiBUaGUgU291dGggQWZyaWNhbiBzcGVjaWVzIChhbmQgdGhlaXIgaHlicmlkcykgdGVuZCB0byBiZSBmb3VuZCBpbiBkYW1wIG1lYWRvd3MgYW5kIG1vdW50YWluIHNsb3Blcy4KSWYgeW91IGludGVyZXN0ZWQgaW4gQ0ZQIGluIGdlbmVyYWwsIHRoZSBiZXN0IHRoaW5nIHRvIGRvIGlzIHRvIHB1dCBpbiByZWd1bGFyIHRhYmxlIHRpbWUgYW5kIHNob3cgYSBwcm9hY3RpdmUgYXR0aXR1ZGUgdG93YXJkcyBpbXByb3ZlbWVudC4gQ0ZQIHByb2dyYW1zIHdpbGwgdXN1YWxseSBoYXZlIGEgbGltaXRlZCBudW1iZXIgb2Ygc3BvdHMsIHRoZXkgd2lsbCBtdWNoIHByZWZlciB0byB0YWtlIHNvbWVvbmUgd2hvIHB1dHRpbmcgaW4gcmVndWxhciB2b2x1bWUgYW5kIGFjdGl2ZWx5IHRyeWluZyB0byBnZXQgYmV0dGVyLiBJZiB0aGV5IHNlZSB0aGF0IHlvdSBnb25lIGZyb20gMk5MIHRvIDI1TkwgYW5kIHBsYXkgWCBudW1iZXIgb2YgaGFuZHMgcGVyIHdlZWsgdGhleSBkb24gaGF2ZSB0byB3b25kZXIgaWYgeW91IHdpbGwgcGxheSBlbm91Z2ggYW5kIHN0dWR5IGVub3VnaCB0byBtYWtlIHRoZWlyIGVmZm9ydCB3b3J0aHdoaWxlLiBXaGVuIGJyb3dzaW5nIG9mZmVyaW5ncy9uZWdvdGlhdGluZyB0ZXJtcywgSSBkZWZpbml0ZWx5IGFkdmlzZSBhZ2FpbnN0IHB1dHRpbmcgdXAgNTAwIEVVUiBpbiBhIENGUCBwcm9ncmFtLiBJZiBhbnl0aGluZyB5b3Ugc2hvdWxkIGdldCBhIHN0YWtlLiBJIGFsc28gYmUgd2FyeSBvZiBhbnkgcHJvZ3JhbSB0aGF0IHRha2VzIGFuIHVubGltaXRlZCBudW1iZXIgb2YgcGVvcGxlIGFuZC9vciBkb2VzbiB2ZXQgdGhlIHBlb3BsZSB0aGF0IHRoZXkgdGFrZS4KVGhlbiBhZnRlcndhcmRzLCB0aGV5IGhhZCB0aGVpciBtZW1vcmllcyBlcmFzZWQgYW5kIHB1dCBpbnRvIG5ldyBsaXZlcyBhcyByZWd1bGFyIG5vbiBtYWdpYyBwZW9wbGUuIApUaGUgTWVyY3VyeSBOZXdzIGFsc28gcmVwb3J0ZWQgdGhhdCB0aGUgTWV0cyBvZmZlcmVkIHNwZWVkeSBvdXRmaWVsZCBwcm9zcGVjdCBDYXJsb3MgR29tZXogdG8gdGhlIEdpYW50cyBmb3IgU2FuY2hleiwgYW5kIHRoZSBHaWFudHMgcmVqZWN0ZWQgaXQuIEluIEJhc2ViYWxsIEFtZXJpY2EgcHJlIHNlYXNvbiB0ZWFtIHJhbmtpbmdzLCBTYW5jaGV6IHdhcyBvdXIgTm8uIDIgcHJvc3BlY3QuIApTZXJpb3VzIG9yIFNvY2lhbD8gRGVjaWRlIHdoYXQgeW91IHdhbnQgeW91ciBnYW1lIHRvIGJlP1Bva2VyIGlzIGEgY29tcGV0aXRpdmUgZ2FtZSBvZiBza2lsbCB3aGVyZSB0aGUgYmV0dGVyIHBsYXllcnMgYXJlIHJld2FyZGVkIGFuZCB0aGUgd2Vha2VyIHBsYXllcnMgYXJlIHB1bmlzaGVkLiBBIGNvbnNlcXVlbmNlIG9mIHRoaXMgaXMgdGhhdCBzb21lIHBsYXllcnMgYXJlIGxpa2VseSB0byB0YWtlIHRoZSBnYW1lIHZlcnkgc2VyaW91c2x5LCBvdGhlcnMgbGVzcyBzby4gUG90ZW50aWFsbHkgYSBkaXZpZGUgY2FuIG9jY3VyIGJldHdlZW4gcGFydGljaXBhbnRzIHdobyBhcmUgcHJpbWFyaWx5IGNvbmNlcm5lZCB3aXRoIHRoZSBjYXJkcyBhbmQgdGhvc2Ugd2hvIGNhbWUgdG8gc29jaWFsaXplIGFuZCBkcmluay4gV2lsbCB5b3UgYmUgZW50ZXJ0YWluaW5nIGEgc29jaWFsIGdhdGhlcmluZyBvciBhIGdyb3VwIG9mIHBva2VyIHBsYXllcnM/ClRoZXJlIHdhcyBzbyBtYW55IG1vbWVudHMgd2hlcmUgd2UgY291bGQgaGF2ZSBnb25lIGV2ZW4gZGVlcGVyIGJ1dCBqb2Ugc3RvcHMgdG8gYXNrIHdobyBhcmUgInRoZXkiIGFuZCBqb25lcyBsb29zZXMgaGlzIHRyYWluIG9mIHRob3VnaHQuIApUaGUgbmVhcmVzdCBzdGF0aW9uIGlzIFBsb2VuY2hpdCBCVFMsIGZyb20gd2hlcmUgeW91IHdhbGsgYWJvdXQgNSBtaW51dGVzIHRvIFN1a2h1bXZpdCBTb2kgMi4gQWx0ZXJuYXRpdmVseSB5b3UgY2FuIGV4aXQgYXQgTmFuYSBCVFMsIGZyb20gd2hlcmUgaXQgaXMgb25seSBhIGNvdXBsZSBvZiBtaW51dGVzIHdhbGsgbW9yZSB0byBTb2kgNC4gCktlZXAgdGhlIGF0bW9zcGhlcmUgcm9tYW50aWMgdG8ga2VlcCB5b3VyIHdpZmUgZmVlbGluZyBzZXh5Li4gClRoZW4geW91IGhhdmUgY2hlYXRpbmcuIApQYXkgdW5kZXIgbWluaW11bSB3YWdlLCBubyBjb250cmFjdCwgbm8gaG9saWRheSBwYXkuIEl0IGlzIGFic29sdXRlbHVseSBpbGxlZ2FsIHRvIHdvcmsgd2l0aG91dCBhIHByb3BlciBjb250cmFjdCBhbmQgaXQgbXVzdCBiZSBhbHNvIHdyaXR0ZW4gaW4gRW5nbGlzaCAob3IgTWFvcmkpIHRoZSBvZmZpY2lhbCBsYW5ndWFnZXMuLiAKVGhlIFBlcnNpYW5zIGFuZCB0aGUgSXRhbGlhbnMgd2VyZSB0aGUgZmlyc3QgdG8gc2hvdyBzaWducyBvZiBnYW1ibGluZyBhbmQgcmFua2VkIGNhcmQgcGxheWluZyB3aXRoaW4gdGhpcyBzYW1lIHRpbWUgcGVyaW9kLi4gCkFuZCB0aGUgbW92aWUgaXMgZnVsbCBvZiBhZG1pcmF0aW9uIGZvciB3aGF0IHNoZSBhY2hpZXZlZCBhcyBhIHdvbWFuIGV4aGliaXRpbmcgcG93ZXIgb3ZlciBwb3dlcmZ1bCBtZW4uLiAKSW4gcGh5c2ljcyB5b3UgbGl0ZXJhbGx5IGp1c3Qgd3JpdGluZyBwcm9ncmFtcyB0byBwZXJmb3JtIGNhbGN1bGF0aW9ucyBmb3IgeW91LiBObyB1c2Ugb2YgYXBpcywgZ3VpcywgbmV0d29ya2luZywgbm8gZGVzaWduIHBhdHRlcm5zLCBiYXNpY2FsbHkgbm90aGluZyBhdCBhbGwuIEFuZCBpdCBiYXNpYyAoYW5kIEkgbWVhbiBCQVNJQykgYysrIGFuZCBnb2RkYW1uIEZvcnRyYW4sIG5vdCBleGFjdGx5IGVtcGxveWFibGUgb3IgdXNlZnVsLllvdSBiYXNpY2FsbHkgc2F5aW5nIHRoYXQgaWYgaGUgZGlkIGFuIGhvdXIgb2YgU21hbGxUYWxrIGhlIG5vdCBzdGFydGluZyBmcm9tIHplcm8sIHdoaWNoIGlzIGF0IGJlc3QgZGlzaW5nZW51b3VzIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0kgbm90IHN1cmUgdGhpcyBpcyBhIGJpZyBlbm91Z2ggcHJvamVjdCB0byBwdXQgd2VzdHNpZGUgb3V0IG9mIGJ1c2luZXNzLiAKSSBncmFkdWF0ZWQgaW4gMjAxNCwgbXkgc2Nob29sIGhhZCBhIG1ham9yIHByb2JsZW0gd2l0aCBjaGV3aW5nIHRvYmFjY28sIHBhY2tzLCBhbmQgc29tZSBraWRzIHdlcmUgZXZlbiBkb2luZyBzbnVmZiwgbm90IHRvIG1lbnRpb24gIm1vY2hlcyIgKG1pZ2h0IGhhdmUgc3BlbGxlZCB0aGF0IHdyb25nLCBuZXZlciBwYXJ0b29rIG15c2VsZi4gCkFzIHN0cmluZ2VudCBhcyBLb3VydG5leSBpcyAoS2hsb2Ugc2F5cyBhZmZlY3Rpb25hdGVseSwgIlNoZSdzIGJ5IGZhciB0aGUgbW9zdCBjcmF5IGFib3V0IGhlciBkaWV0ISIpLCBLeWxpZSBoYXMgbG9uZyBiZWVuIHRoZSBvcHBvc2l0ZS4gV2l0aCBhIHBlbmNoYW50IGZvciBJbiBOIE91dCBidXJnZXJzLCAiU2hlIGVhdHMgbGlrZSBhIHR5cGljYWwgdGVlbmFnZXIsIiBLaGxvZSBvbmNlIHRvbGQgQ29zbW9wb2xpdGFuLiBBbmQgd2hpbGUgc2hlIHBvcHBlZCBpbiBmb3Igb25lIGpvaW50IERvbiBBIE1hdHJpeCBzZXNzaW9uIHdpdGggaGVyIHNpc3RlcnMsIGluc2lzdHMgS2hsb2UsIHNoZSAiZG9lc24ndCByZWFsbHkgd29yayBvdXQuIiAoQnkgY29udHJhc3QgZXZlbiBjYXJkaW8gaGF0aW5nIEtlbmRhbGwsIDIyLCB3aWxsIGNvbW1pdCB0byBhIHdlaWdodHMgc2Vzc2lvbiwgc2F5cyB0aGUgR29vZCBBbWVyaWNhbiBkZW5pbSBjbyBmb3VuZGVyIGFuZCBzaW5jZSBzaGUgaW5oZXJpdGVkIGRhZCBDYWl0bHluIEplbm5lcidzIGdlbmV0aWNzLCAiSXQgZG9lc24ndCB0YWtlIGEgbG90IGZvciBoZXIgdG8gZ2V0IGluIHNoYXBlLiIpCiJUaGlzIGZ1bmRyYWlzaW5nIGVmZm9ydCBpcyBhbiBpbmNyZWRpYmxlIGdlc3R1cmUgZnJvbSB0aGUgUG9rZXIgNCBQcm9zdGF0ZSBjb21taXR0ZWUgd2hvIGFsbCB2b2x1bnRlZXIgdGhlaXIgdGltZSBhbmQgZWZmb3J0IHRvIHJhaXNlIHRoZXNlIG11Y2ggbmVlZGVkIGZ1bmRzIiBoZSBzYWlkLgpLaW1iZXJseSBMeW5jaHdpbGwgd2FsayB1cyB0aHJvdWdoIGJhc2ljIHVuZGVycGlubmluZ3MgYW5kdGhlbiBmb2N1cyBvbiBob3cgdG8gZ2V0IGEgY29yc2V0IHRoYXQgZml0c3Byb3Blcmx5ICBtZWFzdXJlbWVudHMsIGd1c3NldHMgLHN0eWxlcyAsY29uc3RydWN0aW9uIGFuZCBoZWxwZnVsIGhpbnRzIHdpdGhkZW1vbnN0cmF0aW9ucyB1c2luZyBhIGxpdmUgbW9kZWwuIApUaXRsZXMgZm9yIG5ld3MgcG9zdHMgc2hvdWxkIGlkZWFsbHkgYmUgYXMgY2xvc2UgdG8gdGhlIHRpdGxlIG9mIHRoZSByZXBvcnQgYXMgcG9zc2libGUuIEF0IHRpbWVzIGl0IGNvdWxkIGJlIGF3a3dhcmQgdG8gZWF0IGJ5IHlvdXJzZWxmLCBhbmQgcG9ydGlvbnMgYXJlIHNvbGQgaW4gYSB3YXkgdGhhdCB0aGUgbW9yZSBwZW9wbGUgZWF0aW5nLCB0aGUgY2hlYXBlciBpdCBiZWNvbWVzLiAyIHdlZWtzIGlzIHRvbyBsb25nIGZvciBTZW91bCB1bmxlc3MgeW91IHdhbnQgdG8gaGl0IHVwIGV2ZXJ5IGxpdHRsZSBwbGFjZSBhbmQgbGlrZSB0byBzaG9wIGEgbG90LiAKVGhlbiBnbyBmcm9tIHRoZXJlLiBTaGUgbWF5IGhhdmUgc29tZSBleHBsYW5hdGlvbiB5b3UgdGhpbmsgaXMgcmVhc29uYWJsZSwgYnV0IHN0aWxsIGNoZWNrIGJhY2sgaW4gYXQgYSBsYXRlciB0aW1lIGFuZCBzZWUgaWYgdGhpbmdzIGhhdmUgY2hhbmdlZC4gCkouIApOb3QgbXVjaCBvZiBhIHNlY3JldCBhcyBpdCBoaXQgdGhlIG5ld3MgYnV0IHByb2JhYmx5IG5vdCBrbm93biBvdXRzaWRlIE5vdmEgU2NvdGlhLiBBYm91dCAxMCB5ZWFycyBhZ28gYSBsaXR0bGUgZ2lybCB3ZW50IG1pc3NpbmcgYW5kIGhlciBtb3RoZXIgcmVwb3J0ZWQgaXQsIGV2ZW4gZ29pbmcgb24gdGhlIG5ld3MgYXNraW5nIGZvciBoZXIgZGF1Z2h0ZXIgdG8gcmV0dXJuLiBBIHdlZWsgb3Igc28gbGF0ZXIgaGVyIGJvZHkgd2FzIGZvdW5kIGFuZCB0aGUgd2hvbGUgdG93biBtb3VybmVkLCBsZWF2aW5nIHRlZGR5IGJlYXJzIHdoZXJlIGhlciBib2R5IHdhcyBmb3VuZC4gClNoZSBhY3RlZCBhcyB0aG91Z2ggc2hlIGRpZG4ga25vdyB0aGUgdGVybS4gClRoZSB3ZWIgYmFzZWQgYXBwLCB3aGljaCBpcyBwYXJ0IG9mIHRoZSBGaW5kcm93IE5ldHdvcmssIGdlbmVyYXRlcyBtb25leSBmcm9tIGJvdGggc3Vic2NyaXB0aW9ucyBhbmQgaW4gYXBwIHByZW1pdW0gY29udGVudC4gVXNlcnMgd2hvIHdhbnQgdG8gc2VlIHBob3RvIGdhbGxlcmllcyBvZiBLaGFsaWZhIGluIHZhcmlvdXMgc3RhZ2VzIG9mIHVuZHJlc3MgcGF5ICQ3LjQ5IHBlciBtb250aCwgJDE0LjQ5IGZvciBzaXggbW9udGhzLCBvciAkMjQuNDkgYW5udWFsbHkuIApPdGhlcndpc2UgeW91IGNvdWxkIGVhc2lseSBnZXQgMzAwIDUwMCBwbGF5cyBmb3IgdGhhdCBtb25leSBpbnN0ZWFkIGFuZCBnZXQgYSBiZXR0ZXIgZXhwZXJpZW5jZSBpbiByZXR1cm4uIApEZXdleSBUb21rbyBlc3RpbWF0ZXMgdGhhdCB0aGVyZSBhcmUgb25seSB0ZW4gb3IgMTUgcmVhbGx5IHN1Y2Nlc3NmdWwgcGxheWVycywgd2hvc2UgbGl2ZXMgYW5kIGluY29tZXMgd291bGQgYmUgY29tcGFyYWJsZSB0byB0aG9zZSBvZiB0aGUgd29ybGQncyBiZXN0IHRlbm5pcyBwcm9mZXNzaW9uYWxzLiAKVGhlIG9yaWdpbmFsIEFubmEncyBUYXF1ZXJpYSBvcGVuZWQgaW4gQnJvb2tsaW5lIGluIDE5OTUsIHdpdGggdGhlIGludGVudGlvbiBvZiBwcm92aWRpbmcgYSBsb2NhbCBjb3VudGVycGFydCB0byB0aGUgTWV4aWNhbiBzdHJlZXQgZm9vZCBmb3VuZCBpbiBTYW4gRnJhbmNpc2NvJ3MgTWlzc2lvbiBEaXN0cmljdC4gClRoZSBmaXJzdCBvbmUgaXMgYSBzdHJ1Y3R1cmUgY29udGFpbmluZyB0aGUgdW5jb25kaXRpb25hbCBsb3ZlIGFuZCB0aGUgc291bCBsZXZlbCBib25kIGJldHdlZW4geW91IHR3by4gClRoZSBwcm9ibGVtIGlzIHRoYXQgb3VyIHN0YW5kYXJkIGZvciBodW1vdXIgd2FzIG9uY2Ugc28gYmFzaWMgdGhhdCB3ZSB0aG91Z2h0IGp1c3QgdGhyb3dpbmcgdGhlIHdvcmQgImZrIiBhcm91bmQgd2hpbGUgcmFudGluZyBhYm91dCBnYXlzIHdhcyBoaWxhcmlvdXMuIFNjcm9sbGluZyB0aHJvdWdoIG9sZCByZWNvcmRpbmdzIG9mIFdpbHNvbiwgUm9kbmV5IFJ1ZGUgYW5kIG1hbnkgb2YgdGhlaXIgcGVlcnMsIGl0IGJlY29tZXMgY2xlYXIgdGhlaXIgZGVwbGV0ZWQgbWFpbnN0cmVhbSBwb3B1bGFyaXR5IGlzIG5vdCBzbyBtdWNoIGFuIGlzc3VlIG9mIHBvbGl0aWNhbCBjb3JyZWN0bmVzcyBkZXN0cm95aW5nIGFuIGluZHVzdHJ5Li4gCllvdXIgaGVhZGxpbmUgbXVzdCBiZSBjb21wcmlzZWQgb25seSBvZiB0aGUgZXhhY3QgY29waWVkIGFuZCBwYXN0ZWQgaGVhZGxpbmUgb2YgdGhlIGFydGljbGUgICBzZWUgb3VyIHJ1bGUgaGVyZS4pIFdlIHJlY29tbWVuZCBub3QgdXNpbmcgdGhlIFJlZGRpdCBhIHRpdGxlIGFzIGl0IG1heSBub3QgZ2l2ZSB0aGUgZXhhY3QgdGl0bGUgb2YgdGhlIGFydGljbGUuIFRoYW5rIHlvdSBmb3IgcGFydGljaXBhdGluZyBpbiAvci9Qb2xpdGljcy4gCldoaWxlIGl0J3MgdHJ1ZSB0aGF0IHRoZSBwb3NzaWJpbGl0eSBvZiB0d28gaGVhcnRzIGhpdHRpbmcgdGhlIHR1cm4gYW5kIHJpdmVyIChvZnRlbiBjYWxsZWQgcnVubmVyIHJ1bm5lcikgaW1wcm92ZSB5b3VyIG9kZHMgc2xpZ2h0bHksIHRoZSBvZGRzIGFyZSBrbm9ja2VkIGJhY2sgZG93biBieSB0aGUgZmFjdCB0aGF0IGlmIHlvdSBoaXQgYSBmbHVzaCwgaXQgbWF5IG5vdCBiZSB0aGUgYmVzdCBmbHVzaCBiZWNhdXNlIHRoZSBBIGlzIG91dCBhbmQgbWF5IGJlIGluIGFuIG9wcG9uZW50J3MgaGFuZDsgb3IgaWYgeW91IGltcHJvdmUgdG8gdHdvIHBhaXIsIHlvdSBjb3VsZCBiZSBiZWF0IGJ5IHRyaXBzLiAKVGhlIHBlbmFsdHkgbWF5IGJlIHN0ZWVwIGVub3VnaCB0byBrZWVwIHRoZSBsb25ndGltZSBsb2JieWlzdCBhbmQgZm9ybWVyIFRydW1wIGNhbXBhaWduIGNoYWlybWFuIGluIHByaXNvbiBmb3IgdGhlIHJlc3Qgb2YgaGlzIGxpZmUuCkxhc3QsIGJ1dCBub3QgbGVhc3QsIFB1cnBsZSBDbGF5IENhc2lubyBQb2tlciBDaGlwcyByZXByZXNlbnQgJDUwMC4wMC4gV2hlbiBwbGF5aW5nIHRoaXMgdHlwZSBvZiBwb2tlciBjaGlwLCBpdCBpcyBlc3NlbnRpYWwgdG8gZW5zdXJlIHRoYXQgeW91IGNhbiBwdXQgeW91ciBtb25leSB3aGVyZSB5b3VyIGNoaXAgaXMhCkRlYXIgZnJpZW5kLCBpZiB5b3UgYXJlIG5vdCBhIGJyaWRlIG9mIENocmlzdCwgSSBiZWcgeW91IHRvIHJlcGVudCBhbmQgY2FsbCB1cG9uIHRoZSBOYW1lIG9mIHRoZSBMT1JEIGZvciB5b3VyIHJlZGVtcHRpb24uIFdlIHdpbGwgbm90IGJlIGFibGUgdG8gc3RhbmQgYmVmb3JlIHRoZSBzZXZlcml0eSBvZiBHb2QncyByaWdodGVvdXMganVkZ21lbnRzLCB3aGljaCBhcmUgcmVhZHkgdG8gY29tZSB1cG9uIHRoZSBlYXJ0aCB3aXRoIG1vcmUgc2V2ZXJpdHkuIEhpcyBicmlkZSBpcyB0aGUgb25seSBvbmUgdG8gZXNjYXBlIHRoZSBmdXR1cmUgdHJpYnVsYXRpb25zLi4gClNoZSB0aGlua3MgdGhhdCBhcyBsb25nIGFzIHRoZXkgYXJlbiBmb3JjaW5nIGhlciB0byBoYXZlIHNleCwgdGhhdCBub3JtYWwuIApEZXNjcmliaW5nIHNvbWVvbmUgYXMgc2hvcnQsIGJ1bGdpbmcsIGFtYmlndW91cywgd2l0aCBhIGhhcmxvdCBzb24gbm9zZSBhbmQgYSB0d2lzdGVkIHNtaWxlIGRvZXNuIGdvIHZlcnkgZmFyIGluIGlkZW50aWZ5aW5nIHNvbWVvbmUgdW5sZXNzIHlvdSBrbmV3IHRoYXQgdGhlcmUgd2FzIG9uZSB3YXkgb2YgZGVmaW5pbmcgZWFjaCBvbmUgb2YgdGhvc2UgY2hhcmFjdGVyaXN0aWNzLiAKSWYgc2hlIGdpdmVzIHlvdSBhIHNpbmNlcmUgYXBvbG9neSwgdGFsayBhYm91dCB5b3VyIGlzc3Vlcy4gaW4gdGhlIHJlYWwgd29ybGQgd2hlcmUgeW91IGxlYXZlIGJlZm9yZSBsdW5jaCwgdGVsbCBESCBoaXMgbW90aGVyIGlzIGluIGEgdGltZSBvdXQuIHNoZSB3aWxsIG5vdCBzZWUgb3Igc3BlYWsgdG8geW91IG9yIHRoZSBraWRzIHVudGlsIHNoZSBhcG9sb2dpemVzIGZvciBoZXIgYmVoYXZpb3IgYW5kIGFjY2VwdHMgZXZlcnkgYm91bmRhcnkgeW91IHdhbnQgdG8gc2V0LiB3aGVuIHRoZSBraWRzIHdhbnQgdG8gdGFsayB0byBncmFuZG1hPyAiZ3JhbmRtYSBzYWlkIHNvbWUgbWVhbiB0aGluZ3MgYW5kIGlzIGluIGEgdGltZSBvdXQgdW50aWwgc2hlIHNheXMgc2hlIHNvcnJ5LiIgREggd2FudHMgeW91IHRvIGJ1cnkgdGhlIGhhdGNoZXQ/ICJ5b3VyIG1vdGhlciBzYWlkIHNvbWUgbWVhbiB0aGluZ3MgYW5kIGlzIGluIGEgdGltZSBvdXQgdW50aWwgc2hlIHNheXMgc2hlIHNvcnJ5LiIKV2hhdCB3YXMgbW9zdCBiZW5lZmljaWFsIGZvciBoaXMgZmluYW5jaWFsIHdlbGwgYmVpbmcgdGhvdWdoIHdhcyB0byBnbyBhaGVhZCBwYXkgb2ZmIGhpcyBleGlzdGluZyBkZWJ0LiBUaGF0IHdoYXQgaGUgZGlkIGhlIGhhcyAwIHJlZ3JldHMgZXZlbiBpZiBoZSBmZWx0IGtpbmQgb2Ygc2VlZHkgYWJvdXQgaXQgYXQgZmlyc3QuIEhhdmUgd2UgaGVhcmQgZnJvbSBncmFuZG1hPyBOb3BlIHdlIG5ldmVyIHdpbGwgKGFsdGhvdWdoIEkgdGhpbmsgd2UgYmUgaGFwcHkgdG8gZ2V0IGFuIGFzcyBjaGV3aW5nIGlmIGl0IG1lYW50IHNoZSB3YXMgc3RpbGwgaGVyZSkuSW4gdGhlIGVuZCwgeW91IGhhdmUgdG8gbGl2ZSB3aXRoIHdoYXQgaXMgYWN0dWFsbHkgeW91ciBkZWNpc2lvbi4gClRlbGwgeW91ciBmcmllbmQgdG8gZm9yZ2V0IGFib3V0IGFsbCB0aGVzZSBtZWRpYSByZXByZXNlbnRhdGlvbnMgb2YgdGhlIGdhbWUhClNvIEhhcmR0YWlscyBpcyBub3cgZmFtaWx5IGZyaWVuZGx5LiAKSSBub3QgZWl0aGVyLiBUaGF0IHBlcnNvbiBpcyBkb3duIGJlY2F1c2UgdGhleSBiZWxpZXZlIHRoZXkgdGhyZXcgYSBwZXJmZWN0IGxpZmUgYXdheSBvdmVyIHBva2VyLiAKQm9sc29uYXJvIGhhcyBwb3J0cmF5ZWQgYSBuYXRpb24gaW4gY29sbGFwc2UsIHdoZXJlIGRydWcgdHJhZmZpY2tlcnMgYW5kIHBvbGl0aWNpYW5zIHN0ZWFsIHdpdGggZXF1YWwgaW1wdW5pdHksIGFuZCBtb3JhbCByb3QgaGFzIHNldCBpbi4gSGUgaGFzIGFkdm9jYXRlZCBsb29zZW5pbmcgZ3VuIG93bmVyc2hpcCBsYXdzIHNvIGluZGl2aWR1YWxzIGNhbiBmaWdodCBvZmYgY3JpbWluYWxzLCBnaXZpbmcgcG9saWNlIGEgZnJlZXIgaGFuZCB0byB1c2UgZm9yY2UgYW5kIHJlc3RvcmluZyAidHJhZGl0aW9uYWwiIEJyYXppbGlhbiB2YWx1ZXMgICB0aG91Z2ggc29tZSB0YWtlIGlzc3VlIHdpdGggaGlzIGRlZmluaXRpb24gb2YgdGhvc2UgdmFsdWVzIGluIGxpZ2h0IG9mIGhpcyBhcHByb3ZpbmcgYWxsdXNpb25zIHRvIHRoZSAxOTY0IDE5ODUgZGljdGF0b3JzaGlwIGFuZCBoaXMgZGVyaXNpdmUgY29tbWVudHMgYWJvdXQgd29tZW4sIGJsYWNrcyBhbmQgZ2F5IHBlb3BsZS4uIApOaXgvZ251IGd1aXggc2VlbSB0byBoYXZlIHRoZSBiZXN0IG9mIGJvdGggd29ybGRzIGFzIGl0IGFsbG93cyBkb3dubG9hZGluZyBvbmx5IHRoZSBkZXBlbmRlbmNpZXMgbmVlZGVkIGJ1dCBzdGlsbCBhbGxvd3MgbXVsdGlwbGUgdmVyc2lvbnMgb2YgdGhlIHNhbWUgZGVwZW5kZW5jeSBpZiB5b3Ugd2FudCB0byB1c2UgYSBwYXJ0aWN1bGFybHkgb2xkL25ldyB2ZXJzaW9uIG9mIGEgcGFja2FnZSAuIApJIGRvbiB3YW50IHRoZW0gdG8ganVzdCBsb29rIGRpZmZlcmVudCwgdGhvdWdoIEkgZG8gd2FudCB0aGF0IHRvby4gSSB3b3VsZCBsb3ZlIHNvbWUgcmVhbGx5IGNvb2wgZGVzaWducy4gSSB3YW50IHRoZW0gdG8gZmVlbCBkaWZmZXJlbnQgYW5kIG5vdCBqdXN0IGJlICJPaCBoZXkuIEl0IGFuIGFsaWVuIHNwaWRlci4gdGhhdCB0YWxrcy4gVGhhdCBpcyBhbGwuIiBJIHdhbnQgc3BlY2llcyB0byBoYXZlIGRpZmZlcmVudCB0eXBlcyBvZiByZWxpZ2lvbnMgZnJvbSB0aGUgcGFzdCBhbmQgZGlmZmVyZW50IGxpZmVzdHlsZXMgd2UgY2FuIGxlYXJuIGFib3V0IGluIHRoZSBnYW1lLiBJIHJlYWxseSBsaWtlZCBsZWFybmluZyBhYm91dCB0aGUgZGlmZmVyZW50IGFsaWVucyBmcm9tIE1hc3MgRWZmZWN0LCBldmVuIGlmIGl0IHdhcyBqdXN0IGEgc2luZ2xlIGNvZGV4IGVudHJ5LiBJIGFtIGhvcGluZyBpbiBTdGFyZmllbGQgd2Ugd29uIGp1c3QgZ2V0IGEgc2ltcGxlIGNvZGV4IGVudHJ5IGFuZCB3aWxsIGdldCB0byBhY3R1YWxseSBzZWUgYW5kIGV4cGVyaWVuY2UgZGlmZmVyZW50IGFsaWVuIGN1bHR1cmVzLCBidXQgbWF5YmUgdGhhdCBpcyB0b28gbXVjaCBob3BlIGZvciBhIHZpZGVvIGdhbWUuIFdlIHdpbGwganVzdCBoYXZlIHRvIHNlZS4KSXQgaGFyZCB0byBmaW5kIHdhdGVyIHNvdXJjZXMsIGFuZCB3aGVuIHlvdSBmaW5kIHRoZW0sIHlvdSBmaW5kIG90aGVyIGNhcm5pcyB0aGF0IGNhbiBlYXNpbHkga2lsbCB5b3UuIFRoZW55YXcgb24gdGhlIG90aGVyIGhhbmQgaGFzIG1hbnkgcml2ZXJzKHdoaWNoIGlzbGV2MyBkb2VzbnQgaGF2ZSksIHRoYXQgbWFrZXMgeW91ciBnYW1lIFNPIE1VQ0ggZWFzaWVyLiAKSW4gZmFjdCwgaXQgc2VlbWVkIG5lYXJseSBhcyBtdWNoIG9mIGhlciBzZXQgd2FzIHRhbGtpbmcgYXMgc2luZ2luZy4gU2hlIGhhZCByZWFzb24gICBpdCB3YXMgaGVyIDMxc3QgYmlydGhkYXksIHNoZSBzYWlkIGl0IGhhZG4ndCBiZWVuIGEgcGFydGljdWxhcmx5IGhhcHB5IG9uZSBiZWZvcmUgdGhlIHNob3cuIFNoZSBzYWlkIHNoZSBldmVuICJmYWtlIHNtaWxlZCB0byBteSBkb2csIiBiZWZvcmUgZmxhc2hpbmcgd2hhdCBzYWlkIHdhcyBoZXIgZmlyc3QgcmVhbCBzbWlsZSBvZiB0aGUgZGF5LiBTaGUgZHJhbmsgYXQgbGVhc3QgdGhyZWUgc2hvdHMgb24gc3RhZ2UgdG8gY2VsZWJyYXRlLgpCbG9jayBoZXIgY29tcGxldGVseSBvbiBhbnkgYW5kIGFsbCBzb2NpYWwgbWVkaWEuIApMb3BleiBPYnJhZG9yIG1hZGUgaXQgY2xlYXIgaW4gaGlzIGVsZWN0aW9uIGNhbXBhaWduIHRoYXQgaGUgd2FudGVkIHRvIHN0cmVuZ3RoZW4gdGhlIHJpZ2h0cyBvZiB3b3JrZXJzIGFuZCBsYWJvdXIgdW5pb25zLCB3aGljaCBtYWRlIGEgZ29vZCBmaXQgd2l0aCBDYW5hZGEgYmFyZ2FpbmluZyBwb3NpdGlvbiwgTHV6IE1hcmlhIGRlIGxhIE1vcmEsIE1leGljbyBkZXB1dHkgdHJhZGUgbWluaXN0ZXIsIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LgpMJ2hvcnJldXIgcGFzc2UsIHF1ZSBkZXMgcmFpc29ucyBjb25vbWlxdWVzIGF2YWllbnQgZW5nZW5kcmUsIGxlcyBtbWVzIHJhaXNvbnMgYWlkcmVudCB0b3V0IHNpbXBsZW1lbnQgIGxhIGRmYWlyZS4gTCdhYm9saXRpb24gZGUgbCdlc2NsYXZhZ2UgZGV2YWl0IGJlYXVjb3VwIHBsdXMgIGwnY29ub21pZSBxdScgbGEgbW9yYWxlLiAKSSBtaWdodCBoYXZlIGxlbnQgaXQgdG8gc29tZW9uZSBhbmQgZm9yZ290dGVuIGFib3V0IGl0LCBvciBtYXliZSBpdCBqdXN0IGRpc2FwcGVhcmVkIHdoZW4gd2UgbW92ZWQuIEZvciBhbGwgSSBrbm93IGl0IGdvdCBzb2xkIGF0IG91ciB5YXJkIHNhbGUgYWxvbmcgd2l0aCBvdGhlciB0b29scyBJIHRob3VnaHQgSSB3b3VsZCBuZXZlciBuZWVkIGFnYWluLiAKQnV0IHlvdSBnb3R0YSBsb29rIGluIHRoZSBtaXJyb3IsIHRydWx5IGVtYnJhY2UgZXZlcnkgdWdseSB0aGluZyBhYm91dCB5b3VyIGZpbmFuY2VzIHRvIHB1bGwgeW91cnNlbGYgb3V0LiAKSWYgdGhlIHNoYXJlcyBoYXZlIGdvbmUgdXAgc2luY2UgdGhlIGdpZnQgeW91IHdpbGwgcGF5IGEgY2FwaXRhbCBnYWlucyB0YXggb24gdGhlIGFtb3VudCBvdmVyIHlvdXIgY29zdCBiYXNpcy4gSWYgdGhleSBoYXZlIGdvbmUgZG93biB5b3Ugd2lsbCBiZSBhYmxlIHRvIGRlZHVjdCB1cCB0byAzMDAwIG9mIHRoZSBsb3NzLiAKRWRlbiBDbHViIGlzIHZlcnkgY2VudHJhbGx5IGxvY2F0ZWQgYW5kIGVhc3kgdG8gZ2V0IHRvLiAKTXkgZmFtaWx5LCBmcmllbmRzLCBhbmQgSSB1c2UgdG8gc2F5IHRoZXNlIGJlbG93LCBidXQgSSBub3Qgc3VyZSBpZiB0aGUgcmVzdCBvZiBJdGFseSBzYXlzIHRoZSBzYW1lICh5b3Uga25vdywgZGlhbGVjdHMuKToKTWF5YmUgSSBwaWNrZWQgZGlmZmVyZW50IHRpbWVzIHRvIGdvIGxhc3QgeWVhciwgYmVjYXVzZSBJIGNvdWxkbiBldmVuIGdldCB1cHN0YWlycyB0byB0aGUgRE1GIGFyZWEuIFRoZSBsaW5lcyB3ZXJlIGNvbnN0YW50bHkgY2FwcGVkIGV2ZXJ5IHRpbWUgSSB0cmllZCBpbiBiZXR3ZWVuIGRvaW5nIG90aGVyIHRoaW5ncy4KVGhpcyBtZWFucyBhbiBlbmQgdG8gbmVhcmx5IGZvdXIgZGVjYWRlcyBvZiBjb3Jwb3JhdGUgd2VsZmFyZSBmb3IgdGhlIGdvdmVybm1lbnQgY3JlYXRlZCAgIGJ1dCBub3cgZnVsbHkgcHJpdmF0aXplZCAgIGljb24gb2YgdGhlIGluZHVzdHJ5LCBTYWxsaWUgTWFlLiBUaGUgc2F2aW5ncyB0byBiZSBoYWQgZnJvbSB0ZXJtaW5hdGluZyB0aGlzIHN1YnNpZHkgICBlc3RpbWF0ZWQgYXQgYmV0d2VlbiAkNjAgYW5kICQ3MCBiaWxsaW9uIG92ZXIgdGhlIG5leHQgZGVjYWRlICAgd2lsbCBnbyB0b3dhcmQgc2hvcmluZyB1cCB0aGUgUGVsbCBHcmFudCBwcm9ncmFtICh3aGljaCBoZWxwcyBsb3cgaW5jb21lIEFtZXJpY2FucyBhdHRlbmQgY29sbGVnZSksIGhlYWx0aCBjYXJlIHByb2dyYW1zIGFuZCBkZWZpY2l0IHJlZHVjdGlvbi4gV2hlcmUgdGhlIERlcGFydG1lbnQgb2YgRWQgaGFzIGxvbmcgcGFpZCBwcml2YXRlIGxvYW4gY29tcGFuaWVzIGxpa2UgU2FsbGllIE1hZSBhbmQgQ2l0aWdyb3VwIHRvIGlzc3VlIGFuZCBtYW5hZ2UgZ292ZXJubWVudCBiYWNrZWQgc3R1ZGVudCBsb2FucywgdGhlIGRlcGFydG1lbnQgd2lsbCBub3cgbWFrZSBhbGwgZmVkZXJhbCBsb2FucyBkaXJlY3RseSwgd2l0aG91dCB0aGUgaGVscCBvZiBhIG1pZGRsZW1hbiwgdGhyb3VnaCBpdHMgb3duIERpcmVjdCBMb2FuIHByb2dyYW0uLiAKRGVzaWduZXIgUHJvIGlzIHRoZSBzb2x1dGlvbiBmb3IgYWxsIHR5cGVzIG9mIGdyYXBoaWMgZGVzaWduIHdvcmssIHdoZXRoZXIgaXQncyB2ZWN0b3IgLiBYYXJhIERlc2lnbmVyIFBybydzIERpcmVjdCBBY3Rpb24gVG9vbHMgYWxsb3cgeW91IHRvIGNyZWF0ZSBlZmZlY3RzIHN1Y2ggYXMgLiAKRGVyIFdlZyBkdXJjaHMgTXVzZXVtIGZocnQgd2VpdGVyIGFuIGdyb2VuIFNjaGF1dGFmZWxuIHZvcmJlaSwgZGllIGRpZSBIYW5kZWxzd2VnZSBkZXIgU2VpZGVuc3RyYWUgdm9uIENoaW5hIGJpcyBFdXJvcGEgYXVmemVpZ2VuLiBTZW5zYXRpb25lbGxlIGJlc3RpY2t0ZSBTZWlkZW5hcnRpa2VsIHdpZSB6dW0gQmVpc3BpZWwgZWluIHd1bmRlcnNjaG5lciBLaW1vbm8gaGFiZW4gbWljaCBmYXN6aW5pZXJ0IHdlZ2VuIGlocmVyIGZhcmJlbnByY2h0aWdlbiBTdGlja2VyZWkgbWl0IGZlaW4gYXVzZ2VhcmJlaXRldGVuIEJsdGVuIHVuZCBLbm9zcGVuLiAKVGVtcGxhdGUgZ2V0IHlvdXIgZXggYm95ZnJpZW5kIGJhY2sKSEFNSU9UQSAgIFRoZSBBbm51YWwgSGFtaW90YSBNZW4ncyAiT3BlbgpDb21pbmcgaW4gcHJldHR5IGxhdGUsIGJ1dCBJIGdvdCB0d28gc2lzdGVycyB0aGF0IGFyZSBhdCBsZWFzdCAxMCB5ZWFycyB5b3VuZ2VyIHRoYW4gbWUuIApUaGUgcGxheWVycyBhcmUgYXNrZWQgdG8gc2FpbCB0byBTaGFudHl0b3duLCBhbmQgZWl0aGVyIGJyaWJlIG9yIGtpbGwgQ2FwdGFpbiBTbHlnbyBpbiBvcmRlciB0byBzdG9wIHRoZSByYWlkcy4gCkZyb20gdGhlIGxvY2F0aW9uIG9mIHBhaW4geW91IGRlc2NyaWJlLCBvbmUgcG9zc2liaWxpdHkgaXMgdGhhdCB0aGUgaW5pdGlhbCBpbmp1cnkgd2FzIGFuIGFkZHVjdG9yIHN0cmFpbiB3aXRoIHJhZGlhdGlvbiBiZXlvbmQgdGhlIGtuZWUgam9pbnQuIApNdXp6eUlzTWUgdQpBcyBmb3IgYmFycywgdGhlcmUgYXJlIHRvbyBtYW55LiBJZiB5b3UgZ3V5cyBhcmUgaW50byBjcmFmdCBiZWVyIEkgd291bGQgc3VnZ2VzdCBzZWFyY2hpbmcgdGhlIHN1YnJlZGRpdCwgYmVjYXVzZSBzb21lIGZvbGtzIGhhdmUgbWFkZSBsaXN0cyBvZiBncmVhdCBjcmFmdCBiZWVyIHBsYWNlcyBmb3IgdG91cnMuIEZvciBjbHVicywgeW91IHNob3VsZCBjb25zdWx0IHJlc2lkZW50IGFkdmlzb3IgYW5kIHBpY2sgc2hvd3MgdGhhdCBzb3VuZHMgZ29vZCwgd2hlcmUgeW91IGxpa2UgdGhlIGFydGlzdCAgIG1hbnkgb2YgdGhlIG1haW4gY2x1YnMgaGVyZSBhcmUgcm9vdGVkIGluIHRoZSBsZ2J0IGNvbW11bml0eSwgc28gc2hvd2luZyB1cCB3aXRoIHlvdXIgMyBtYXRlcyBhdCBCZXJnaGFpbiBpc24gZ29pbmcgdG8gd29yay4gCkluIHRoZSBmaXJzdCBvbmUsIHlvdSBzaG9ydCB3aXRoIDViYiAod2l0aCBhIHRhYmxlIGF2ZyBvZiAyMCAyNSBiYikgYW5kIHB1c2ggSzhzIGZyb20gdGhlIGNvL2J1IGFuZCBiYiB3aXRoIDMwYmIgY2FsbHMgd2l0aCA4OXMuIFlvdSBjcnVzaGluZyBoaW0gaGVyZS4gCklmIFNoYXBlciByYW5kb21seSB0YWtlcyBhbiBhZGphY2VudCBtYXAgKGllOiBDaGF0ZWF1LCBTcHJpbmdzLCBDZW1ldGVyeSBldGMpLCB5b3Ugc2hvdWxkIGNsZWFyIHRoaXMgaW1tZWRpYXRlbHkgdW5sZXNzIHlvdSBoYXZlIHNleHRhbnRzIHRoYXQgd291bGQgYmUgd2FzdGVkIGJ5IGNsZWFyaW5nIHRoZSBtYXAuClJBTTogQnkganVzdCBoYXZpbmcgMSByYW0gc3RpY2sgeW91IHdpbGwgYmUgcnVubmluZyBzaW5nbGUgY2hhbm5lbCBSQU0sIHdoaWNoIHdpbGwgbWFrZSB5b3VyIENQVSBydW4gc2xvd2VyLiAxNiBHQiBSQU0gaXMgYWxzbyBzbGlnaHRseSBjaGVhcGVyIHBlciBHQiwgYW5kIHByaWNlcyBhcmUgbG93IHJpZ2h0IG5vdy4KSGUncyBvdXQgb2YgbW9uZXkgbm93IHNvIEkgc3RhcnQgc3RhY2tpbmcgbXkgY2hpcHMgdG8gY2FzaCBvdXQuIApWb2lyIGxlcyBleHBsaWNhdGlvbnMgc3VyIGxhIG1pc2UgIGpvdXIgZHUgMTUvMTIvMTggcXVpIGFib3JkZW50IGRpZmZyZW50ZXMgcXVlc3Rpb25zLiBNZXJjaSAhQXR0ZW50aW9uIGF1IGNob2l4IGR1IHBvcnQgc3VyIEloZXJiICFDaG9pc2lzc2V6IGNvbW1lIHBvcnQgR2xvYmFsIE1haWwgKGdyYXR1aXQgY2VydGFpbnMgam91cnMgZXQgcGFzIHRheCAoanVzcXUnIDEwMCAkKVBhcyB0YXggKGVuIHByaW5jaXBlKSBzYXVmIGF1IHZvaXNpbmFnZSBkZXMgZnRlcywgSWwgc2VyYWl0IHNhZ2UgZGUgcmVwb3J0ZXIgZW4gamFudmllciBsZXMgY29tbWFuZGVzICBwYXJ0aXIgZHUgMTUgbm92ZW1icmUuIENvbXB0ZXIgYXVzc2kgYXZlYyBkZXMgcmlzcXVlcyBkZSB2b2wgZGFucyBsZXMgUG9zdGVzLiAKTm8gcHJvYmxlbSwgY2xhaW1lZCBBcnp0LiBJdCB3b3VsZCB3cmFwIGFyb3VuZCB0aGUgdXNlcidzIG5lY2sgYW5kIHNob3VsZGVycyB0byBwcm92aWRlIGEgY29tZm9ydGFibGUgc3VwcG9ydCBmb3IgaGlzIG9yIGhlciBoZWFkLi4gCkdydWRlbiByZWFsbHkgd2FudGVkIGhpbSB0byBzdGFydCB1c2luZyB0aGF0IG1vYmlsaXR5LCBidXQgQ2FyciBpcyBzaG9vayBub3cuIE5vIGNvbXBvc3VyZSBpbiB0aGUgcG9ja2V0LCBhbmQgaGUgcGFuaWNzIGFuZCBmb3JjZXMgdGhyb3dzIG9yIHRocm93cyBpdCBhd2F5IGluc3RlYWQgb2YgdXNpbmcgaGlzIGF0aGxldGljaXNtIG1vc3Qgb2YgdGhlIHRpbWUsIHVuZm9ydHVuYXRlbHkuCklmIHlvdSBwbGF5IGl0IHByZSBjb21iYXQsIGl0IGxpa2VseSB3aW5zIHlvdSB0aGUgZ2FtZS4uIAoyNywgU3VpdGUgNi4gQXMgYSByZXN1bHQgb2YgdGhvc2UgY29tbXVuaXR5IGNvbXBsYWludHMsIGludmVzdGlnYXRvcnMgd2l0aCB0aGUgQ3JpbWUgU3VwcHJlc3Npb24gVW5pdCBjb25kdWN0ZWQgYW4gdW5kZXJjb3ZlciBvcGVyYXRpb24gYXQgdGhlIG1hc3NhZ2UgcGFybG9yLiAKVGhlIHNlY3VyaXR5IG9mZmljaWFscyB3aWxsIG1pbmUgdGhlaXIgcmVzcGVjdGl2ZSByZWNvcmRzIHRvIGdldCBhIGZ1bGxlciBwaWN0dXJlIG9mIHdoYXQgdGhleSdyZSBkZWFsaW5nIHdpdGggYW5kIGZpZ3VyZSBvdXQgYSByZXNwb25zZSwgd2hpY2ggY291bGQgcmFuZ2UgZnJvbSBzb2Z0IG1lYXN1cmVzIGxpa2UgaW50ZXJ2ZW50aW9ucyBhbmQgcGFzc3BvcnQgc2VpenVyZXMgdG8gYXJyZXN0cyBhbmQgY2hhcmdlcy4KQnV0IHRoZSB2aWN0aW1zIGFyZSB0aGUgdW5kb2N1bWVudGVkIGltbWlncmFudHMsIGFuZCB0aGUgcGVycGV0cmF0b3JzIGFyZSB0cmFmZmlja2Vycy4gVGhlcmUgYXJlIGFsc28gYSB2ZXJ5IGhpZ2ggbnVtYmVyIG9mIHNleHVhbCBhc3NhdWx0cyBjb21taXR0ZWQgYWdhaW5zdCB0aGlzIHBvcHVsYXRpb24gYnkgYm9yZGVyIHBhdHJvbCBhbmQgYnkgdGhlIHBlb3BsZSBydW5uaW5nIHByaXZhdGUgZGV0ZW50aW9uIGNlbnRlcnMuLiAKTm93IHRoYXQgd291bGQgYmUgd29ydGggdGhlIHBhaW4gb2YgbGl2aW5nIHdpdGggdGhpcyBzcGluZWxlc3NuZXNzLiBmaW5kIHRoYXQgdGhlIERlbXMgYWN0dWFsbHkgY2FuIGZpbmQgdGhlaXIgc3BpbmUgYW5kIHN0YW5kIHVwIHRvIHRoZSBiYWxsc3kgbnV0IGpvYnMgb3ZlciBhdCBCaWcgR292ZXJubWVudCBhbmQgRm94IE5ld3MuCkkgdGhpbmsgdGVuZCB0byBiZSBtb3JlIGNhcmluZyB0aGFuIHVzIG1lbiBieSBhbmQgbGFyZ2UsIGFuZCBzbyBpZiB0aHJvdWdoIHByb3ZpZGluZyBtZWFucyBmb3Igd29tZW4gdG8gYmVjb21lIGJldHRlciBlZHVjYXRlZCBpZiB0aGF0IGFsbG93cyB3b21lbiB0byBhc3N1bWUgcG9zaXRpb25zIG9mIHNpZ25pZmljYW5jZSBpbiB0aGlzIHdvcmxkLCBJIHRoaW5rIHdlIGFsbCB3b3VsZCBiZSBiZXR0ZXIgb2ZmLCBoZSBzYWlkLgpUaGVpciBpcyBhbHNvIHZhcmlhbmNlIGluIHNhbGVzIGp1c3QgbGlrZSBwb2tlci4gCkV2ZW4gd2hlbiBjb21wb3NpdGUgc3RpY2tzIHN0YXJ0ZWQgY29taW5nIG91dCwgdGhlIFN5bmVyZ3kgYW5kIHRoZSBsaWtlLCBJIHJlbWVtYmVyIGhpbSBzYXlpbmcgdGhleSBmZWx0IHRvbyBsaWdodCBhbmQgdGhhdCB3b29kZW4gc3RpY2tzIHdlcmUgYmV0dGVyIGZvciBoaW0uIApBZnRlciBhIHdoaWxlIGkgbGlrZSwgeW91IGFpbiB0aGF0IGN1dGUsIHlvdSBkaWRuIGRhdGUgdGhpcyBtYW55IGdpcmxzLiBTbyB0aGVuIGl0IHdhcyAiSSBncmV3IHVwIHdpdGggYSBnaXJsIHdpdGggdGhhdCBuYW1lIiBvciAibXkgc2lzdGVyIGJlc3QgZnJpZW5kIGhhcyB0aGF0IG5hbWUiLi4gCkkgZG9uIHdhbnQgbXkga2lkcyB0byBtaXNzIG91dCBvbiBmYW1pbHkgc2VjdXJpdHkganVzdCBiZWNhdXNlIHdlIGNvdWxkbiBtYWtlIGl0IHdvcmsuClRoZSBtb3N0IHJlbGV2YW50IHByb2dyYW0gZm9yIEFuZHJvaWQgb3MgZm9yIHBjIDY0IGJpdCBkb3dubG9hZCBpcyBBbmRyb2lkIDUuMSBMb2xsaXBvcCB4ODYgeDY0LiBHZXQgYSBmcmVlIGRvd25sb2FkIGZvciBPcGVyYXRpbmcgc3lzdGVtcyBzb2Z0d2FyZSBpbiB0aGUuIEFuZHJvaWQgVG9vbHMgaXMgcG93ZXJmdWxsIFNvZnR3YXJlIGZvciB5b3VyIEFuZHJvaWQgUGhvbmUuIApUYXRpYW5hIEVzY2FsbG9uLCAiVGhlIFllbGxvdyBVbWJyZWxsYSIKSW1tdW5lIHN5c3RlbSBleGNoYW5nZSB3IGNpcmN1bGF0aW9uCk1lc3NhZ2UgUG9zdCBsZTogSmV1IDEgU2VwICAgMTg6MDMgKDIwMTYpIFN1amV0IGR1IG1lc3NhZ2U6IEhvbmRhIENsNDUwIE1hbnVhbCBGcmVlIFBkZiBEb3dubG9hZCwgUnBvbmRyZSBlbiBjaXRhbnQuIApDb2tlIG9yIFBlcHNpLiAKRG93bndhcmQgZmFjaW5nIGZyb2c6IENocmlzdGlhbiB5b2dhIGNsYXNzIGZvY3VzZXMgb24gZml0bmVzcwpOdW1iZXIgYW5kIGR1cmF0aW9uIG9mIHRyZWF0bWVudCBzZXNzaW9ucyB2YXJpZWQgYmV0d2VlbiBzdHVkaWVzLiAKV2UnbGwgaGF2ZSBhYm91dCAxLDAwMCBnYW1pbmcgdW5pdHMgd2hlbiBpdCdzIGFsbCBzYWlkIGFuZCBkb25lLiBXZSdsbCBoYXZlIGVudGVydGFpbm1lbnQgdGhlcmUgYW5kIHByb21vdGlvbnMgYWxsIHRha2luZyBwbGFjZSBhdCB0aGUgdmlkZW8gcG9rZXIgYmFyLCIgc2FpZCBEaXJlY3RvciBvZiBCdXNpbmVzcyBEZXZlbG9wbWVudCBLYXRoeSBTYW50aWFnby4uIApIZXIgZHJlYW0gaXMgdG8gaW50ZXJ2ZW5lIGJlZm9yZSBob3BlIGlzIGdvbmUuIFNoZSB3aWxsIGdvIHdoZXJldmVyIHRoZSBDcmVhdG9yIHdhbnRzIGhlciB0byBiZS4gSGVyIGdvYWwgaXMgdG8gdGVhY2ggb3RoZXJzIHRvIGRhbmNlIHRocm91Z2ggdGhlIGRhcmsgYW5kIHRvd2FyZHMgdGhlIGxpZ2h0LiBEYW5jaW5nIHRoZSBKaW5nbGUgRGFuY2UsIHRoZSBKaWcsIGFuZCBIaXAgSG9wIGlzIGhlciB3YXkgb2YgbWVkaXRhdGluZywgb2YgZ2l2aW5nIGJhY2ssIG9mIGluc3BpcmluZyBjaGFuZ2UuClRJTCB0aGF0IHNjaWVudGlzdHMgY2FuIHJlbW90ZSBjb250cm9sIHJhdHMgYnkgaW1wbGFudGluZyBlbGVjdHJvZGVzIGluIHRoZWlyIGJyYWlucywgc3VjaCB0aGF0IHRoZXkgZ2V0IGEgcnVzaCBvZiBwbGVhc3VyZSB3aGVuIHRoZXkgb2JleSBzZW50IGNvbW1hbmRzLiBTY2llbnRpc3RzIGNhbiBtYWtlIHRoZW0gdHVybiBsZWZ0IG9yIHJpZ2h0LCBldmVuIGNsaW1iIG9iamVjdHMuIFRoZXkgYXJlIG5vdCBmb3JjZWQgdG8gb2JleSwgdGhleSBqdXN0IHdhbnQgdG8gYmVjYXVzZSBvZiB0aGUgcGxlYXN1cmUgcmV3YXJkLiBXaGF0IHNvbGFjZSB3b3VsZCB5b3Ugc2VlayBmb3IgZW1vdGlvbmFsIHBhaW4/IFN0aWxsIGNlcnRhaW4/Ckxvb2tpbmcgYXQgdGhlIEphaGkgTWNNYXRoIGFuZCBNYXJsaXNlIE11bm96IGNhc2VzLCB0aGVyZSBtYXkgYmUgc29tZSBvdmVybGFwLCBidXQgSSBvdmVyYWxsIG5vdCBzZWVpbmcgaXQuIEZvciBleGFtcGxlLCBpbiB0aGUgSmFoaSBNY01hdGggY2FzZSwgd2FzIHRoZXJlIGFub3RoZXIgaG9zcGl0YWwgd2lsbGluZyB0byB0YWtlIGhlciBhbmQgY29udGludWUgcHJvdmlkaW5nIG1lY2hhbmljYWwgdmVudGlsYXRpb24vbGlmZSBzdXBwb3J0PyBJZiBzbywgd2FzIHRoZSBmYW1pbHkgcHJldmVudGVkIGZyb20gaGF2aW5nIGhlciB0cmFuc2ZlcnJlZCB0byB0aGF0IGhvc3BpdGFsPyBJZiBib3RoIHRob3NlIGNvbmRpdGlvbnMgYXJlIG1ldCwgdGhlbiBpdCBhIGJldHRlciBhbmFsb2d5IHRvIHRoZSBBbGZpZSBFdmFucyBjYXNlLCBidXQgaWYgbm90LCB0aGVuIHRoZXJlIG5vIHJlYWwgY29tcGFyaXNvbi4KMTggYW5kIGJlZ2FuIHJlbnRpbmcgYW4gYXBhcnRtZW50IG9uIEJhdGh1cnN0IFN0cmVldCBzb3V0aCBvZiBTdGVlbGVzIEF2ZW51ZSBvbiBPY3QuIApTdXBwbGllcnMgb24gdHJhY2sgZm9yIHJlY29yZCBhY3F1aXNpdGlvbnMKVW5sZXNzIHlvdSBhcmd1aW5nIHRoYXQgZGVtb2NyYWN5IGl0c2VsZiBkb2VzbiBjaG9vc2UgdGhlIGJlc3QgY2FuZGlkYXRlIHdoaWNoIGlzIHRydWUgYW5kIGVudGlyZWx5IGlycmVsZXZhbnQgY29uc2lkZXJpbmcgaXQgdGhlIHN5c3RlbSB3ZSBjaG9zZSBhbmQgdGhvdWdodCB3YXMgInRoZSBiZXN0Ii4gVGhlcmUgbGl0ZXJhbGx5IG1pbGxpb25zIG9mIEFtZXJpY2FucyB0aGF0IHdvdWxkIGJlIGEgYmV0dGVyIHByZXNpZGVudCBhbmQgeWV0IHRoZSBBbWVyaWNhbiBwdWJsaWMgd291bGRuIHZvdGUgZm9yIHRoZW0uLiAKSG93IGRvIHlvdSB0aGluayBjYXIgaW5zdXJhbmNlIHdvcmtzPyBCZWNhdXNlIGNhciBpbnN1cmFuY2UgcHJlbWl1bXMgYXJlIGJhc2VkIG9uIHJpc2sgZmFjdG9ycyBsaWtlIGFnZSwgd2hlcmUgeW91IGxpdmUsIGRyaXZpbmcgZXhwZXJpZW5jZSBhbmQsIG1vc3QgaW1wb3J0YW50bHksIGRyaXZpbmcgcmVjb3JkIGFuZCBjbGFpbSBoaXN0b3J5LiBQZW9wbGUgd2hvIGFyZSBoaWdoZXIgcmlza3Mgb3Igd2hvIGZpbGUgbW9yZSBjbGFpbXMgcGF5IG1vcmUgZm9yIGluc3VyYW5jZS4gT3IgY2FuIGdldCBpbnN1cmFuY2UgYXQgYWxsLgozNykgTm8gV2F5IC4gQXNzdW1lZCBPdXR0YWtlIGZyb20gIlRoZSBGYW1lIE1vbnN0ZXIuIiBDYW4gYmUgZm91bmQgb24gWW91dHViZS4gMzggNDUpIEJhZCBSb21hbmNlL0FsZWphbmRyby9Nb25zdGVyL1NwZWVjaGxlc3MvRGFuY2UgSW4gVGhlIERhcmsvVGVsZXBob25lIChGZWF0LiBCZXlvbmMpL1NvIEhhcHB5IEkgQ291bGQgRGllL1RlZXRoIC4gVGhpcyBpcyB0aGUgZmFtb3VzICJUaGUgRmFtZSBNb25zdGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIDQ2IDUwICkgUG9rZXIgRmFjZS9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIApJdCB3ZW50IGludG8gZWZmZWN0IGluIGxhdGUgQXVndXN0IGFuZCB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lIEFUQyBhZ2VudHMgdGVzdCBpdCBpbiBCYXRvbiBSb3VnZS4gCkl0IGp1c3QgdGFrZXMgdGhlIGF2ZXJhZ2UgZGFpbHkgc3BlbmRpbmcgZnJvbSBZTkFCIGFuZCBjYWxjdWxhdGVzIGhvdyBtYW55IGRheXMgeW91IGNvdWxkIG1haW50YWluIGl0IHdpdGggd2hhdCBpcyBjdXJyZW50bHkgaW4geW91ciBzcGVuZGluZyBhY2NvdW50cy4gU29tZXRpbWVzIHRoZXkgbWF0Y2ggZm9yIG1lIGFuZCBzb21ldGltZXMgdGhleSBkb24ndC4gClRoZSBDYXRlZ29yeSBpcyBzZXQgdG8gd2hhdCB0aGUgY29udGVudCBpcyBhYm91dC4gVGhlIHNldHRpbmcgY2FuIGJlIHBhcnQgb2YgdGhlIGNvbnRlbnQsIGJ1dCBpdCBub3QgbmVjZXNzYXJpbHkgYSBmYWN0b3IuIApBcm1vciBoZWxwcyBhZ2FpbnN0IHNjYXZzIGFuZCBsb3cgZ2Vhci4gV2UgYXJlIGxhdGUgaW50byBhIHdpcGUsIHNvIG1vc3QgcGVvcGxlIGFyZSB1c2luZyB2ZXJ5IGhpZ2ggYXJtb3IgcGVuZXRyYXRpb24gcm91bmRzLgpJIG5vdCBzdXJlIHdoYXQgdGhlIGJlc3QgYXBwcm9hY2ggdG8gZG9pbmcgdGhpcywgYnV0IEkgaG9waW5nIHRoYXQgdGhlIGNvbW11bml0eSBjYW4gaGVscCBvdXQhCldoYXQgaGVscGVkIG1lIHdhcyBzZXR0aW5nIG15c2VsZiBhIHBlcmlvZCB0byB0cnkgaXQgb3V0LiBJIHVzZWQgZmFzdGluZyBiZWZvcmUgRWFzdGVyICh3aXRob3V0IGJlaW5nIHJlbGlnaW91cywgaXQgd2FzIGp1c3QgY29udmVuaWVudCB0aW1pbmcpLiBJdCB3YXMgaGFyZCwgZXNwZWNpYWxseSBsaWtlIHdlZWsgdGhyZWUgb3Igc28sIGFuZCBhZnRlcndhcmRzIEkgaW5pdGlhbGx5IHdhbnRlZCB0byBnbyBiYWNrIHRvIGVhdGluZyBtZWF0LiAKV2l0aCBmaW5nZXJzLCBkaXAgdGhlIGN1cGNha2VzIGludG8gdGhlIGdsYXplIHdoaWxlIHRoZXkncmUgc3RpbGwgd2FybSwgY292ZXJpbmcgYXMgbXVjaCBvZiB0aGUgY2FrZSBhcyBwb3NzaWJsZSwgb3Igc3Bvb24gdGhlIGdsYXplIG92ZXIgdGhlIHdhcm0gY3VwY2FrZXMsIHR1cm5pbmcgdGhlbSB0byBjb21wbGV0ZWx5IGNvYXQuIApTb21lIHdlcmUgc2F5aW5nIHRoZSBhdG1vc3BoZXJlIG1hZGUgdGhlbSBmZWVsIGxpa2UgdGhleSB3ZXJlIGluIFZlZ2FzIHdoaWxlIG90aGVycyB3ZXJlIGFza2luZyB3aGVyZSB3ZSBmb3VuZCBzdWNoIHN0eWxpc2ggc2V0cy4gClRoZSBtb3Rpb24gc291Z2h0IGEgc2V0dGxlbWVudCBhZ3JlZW1lbnQgdGhhdCBCZWFsIGFuZCBXYWduZXIgd291bGQgdWx0aW1hdGVseSBoYXRjaDogV2FnbmVyIHdvdWxkIHRyYW5zZmVyIGhpcyBSZWQgTW91bnRhaW4gaG9tZSB0byBCZWFsJ3MgTE5WIGFuZCBDTE1HIGNvcnBvcmF0aW9ucy4KT2YgcHJvZ3Jlc3MuIEF0IGEgY2VydGFpbgpUaGUgYmlnIGhhbmRzIHlvdSBzaG93IGRvd24gd2l0aCBzdHJhbmdlIGJsdWZmcyBhcmUgb2Z0ZW4gdGhlIG9uZXMgdGhhdCBwZW9wbGUgcmVtZW1iZXIgY2xlYXJseTsgdGhleSBmb3JnZXQgYWxsIHRoZSB0aW1lcyB5b3Ugc2hvdyB1cCBpbiBiaWcgcG90cyB3aXRoIHRoZSBudXRzIGJlY2F1c2UgdGhleSBleHBlY3QgaXQuIEkgY2FuIHNob3cgb25lIGh1Z2UgYmx1ZmYgaW4gYSBzcG90IGFuZCBhbGwgb2YgYSBzdWRkZW4gaXQgYWxsIHRoZXkgcmVtZW1iZXIgZm9yIHRoZSBuZXh0IDMgbW9udGhzLi4gCkV4IHBhcnRlIG1vdGlvbnMgYXJlIG9uZSBvZiB0aGUgbW9zdCBhYnVzaXZlIHBhcnRzIG9mIHRoZSBmYW1pbHkgY291cnQgc3lzdGVtLiAKVGhlIGp1ZGdlIHN0YXRlZCB0aGUgdGF4cGF5ZXIgYWNyb3NzIGFzIGEgaGlnaGx5IGludGVsbGlnZW50IGFuZCB3ZWxsIGVkdWNhdGVkIGluZGl2aWR1YWwgd2l0aCBhIG1hc3RlciBkZWdyZWUgaW4gcHVibGljIGhlYWx0aCBmcm9tIEVtb3J5IFVuaXZlcnNpdHkgYW5kIGEgYmFjaGVsb3Igb2YgbWVkaWNpbmUuIApVbmRlcmJvb2IsIHNpZGVib29iIGFuZCBjbGVhdmFnZSBzdGFyIGluIGV2ZXJ5IHNob3QgdGhhdCBmb2N1c2VzIG9uIEtoYWxpZmEncyBmcm9udC4gCldoYXQgaXMgZ3JlYXQgYWJvdXQgbGl2ZSBwb2tlciBnYW1lcyBvbmxpbmUgaXMgdGhlIHdob2xlIGxvdCBvZiB0aGluZ3MgeW91IGNhbiBsZWFybiBmcm9tIHRoZW0uIFBsYXlpbmcgbGl2ZSBwb2tlciBnYW1lcyBkYXkgaW4gYW5kIGRheSBvdXQgaXMgZWFzaWx5IGFjaGlldmFibGUsIHNpbmNlIHlvdSBjYW4gbG9nIG9uIHRoZSBjb21wdXRlciBhbnl0aW1lLiBJdCBpcyBhY3R1YWxseSBnb29kIHRvIGJsb3cgb2ZmIGEgbGl0dGxlIHN0ZWFtIGJ5IHBsYXlpbmcgcG9rZXIgb25saW5lLiAKR3JlYXQgRGVwcmVzc2lvbgpBdCBDYW55b24gUmFuY2ggd2VsbG5lc3MgcmVzb3J0LCB3ZSBoYXZlIGV4cGVydHMgaW4gZXZlcnkgZmFjZXQgb2Ygd2VsbG5lc3MgdG8gaGVscCB5b3UgY3JlYXRlIGEgaGVhbHRoeSBsaXZpbmcgcGxhbi4gCk9rYXksIEkganVzdCB0aHJldyB0aGF0IGxhc3Qgb25lIGluLiBCdXQgbXkgZGF1Z2h0ZXJzLCB3aG8gYmVnYW4gcmVhZGluZyBBcmNoaWUgd2hlbiB0aGV5IHdlcmUgYWJvdXQgNyB5ZWFycyBvbGQsIHF1aWNrbHkgcG9pbnRlZCBvdXQgdGhhdCBKdWdoZWFkIHdhcyBvbmx5IGludGVyZXN0ZWQgaW4gZm9vZCBhbmQgdGhlIG90aGVyIGd1eXMuIFRoZXkgZmlndXJlZCB0aGF0IG1lYW50IGhlIHdhcyBnYXkgYW5kIHNvIHRoYXQgdG9vIGlzIGEgbGVzc29uOiB0aGUgZ2F5IG9uZSwgdW5hYmxlIHRvIGV2ZXIgZmluZCByb21hbnRpYyBsb3ZlIHdpdGggQXJjaGllLCBtdXN0IHR1cm4gdG8gZm9vZCBmb3IgY29tZm9ydC4KVGhlIG9ubHkgd2F5IHRvIGRvIHRoYXQgaXMgdG8gbGVhcm4gYWJvdXQgdGhpcyBwbGFjZSwgdGhvc2UgdGhpbmdzIHRoYXQgaHVudCB1cy4gV3lsaWUgYW5kIFNhcmFoIGhhZCBhZ3JlZWQgd2l0aCB1cywgdGhleSdkIHZvbHVudGVlcmVkIGZvciB0aGUgZmlyc3QgZXhwZXJpbWVudCB0b2dldGhlci4gCllldCwgYXMgYSBmZWRlcmFsIGp1ZGdlIGhhbmRlZCBkb3duIGhpcyBzZW50ZW5jZSBpbiBqYW0gcGFja2VkIEFsZXhhbmRyaWEsIFZpcmdpbmlhLCBjb3VydHJvb20gVGh1cnNkYXksIGFuZCBvYnNlcnZlcnMgZGlnZXN0ZWQgdGhlIGp1ZGdlIGRlY2lzaW9uICAgNDcgbW9udGhzICAgTWFuYWZvcnQgY2FzZSB3YXMgaW1tZWRpYXRlbHkgcGVyY2VpdmVkIGFzIGEgaGlnaCBwcm9maWxlIGluc3RhbmNlIG9mIHRoZSBqdXN0aWNlIHN5c3RlbSB3b3JraW5nIG9uZSB3YXkgZm9yIGEgd2VhbHRoeSwgd2VsbCBjb25uZWN0ZWQgbWFuLCB3aGlsZSB3b3JraW5nIGluIGFub3RoZXIsIGhhcnNoZXIsIHdheSBmb3IgaW5kaWdlbnQgZGVmZW5kYW50cyBmYWNpbmcgbGVzc2VyIGNyaW1lcy4KTXkgZ3JlYXQgZ3JhbmRtb3RoZXIgd2FzIGFyb3VuZCB0aGlzIGFnZSB0b28gd2hlbiBzaGUgZGllZCBpbiB0aGUgOTBzLiAKT25seSByZWFzb24gaGUgc3RvcHBlZCBwbGF5aW5nIFdPVyBpcyB0aGUgYmFuLlJlY2tmdWwgb25seSBrZWVwcyBwbGF5aW5nIGdhbWVzIGhlIGlzIG9uZSBvZiB0aGUgYmVzdCBpbi4gClNlY29uZCBHcmFkZSBJbnRlcmFjdGl2ZSBTaXRlcy4gVGhlc2Ugc2l0ZXMgZml0IGludG8gdGhlIHNlY29uZCBncmFkZSBjdXJyaWN1bHVtIGluIExvdWlzaWFuYSwgYnV0IGFyZSBhbHNvIGVmZmVjdGl2ZSBhdCBvdGhlciBncmFkZSBsZXZlbHMuIEVMQQpUaGUgc3BlZWQgd2lsbCBjYXRjaCBpdCwgYW5kIGl0IHdpbGwgdGVsZXBvcnQgdGhlIGJhbGwgdG8gdGhlIGxhc3QgcG9pbnQgdGhpbmcgNikgcmV2ZXJzZSBldmVyeSB0aGluZyB0byB0aGUgc3RhcnQsIGFuZCBtb3ZlIHRoZSBib3R0b20gcmlnaHQgcG9ydGFsIHRvIHRoZSB0b3AgbGVmdCwgdGhlIG9uZSBhbG1vc3QgZmFjaW5nIHRoZSBmaW5pc2gsIHRoZW4gbGV0IGdvIG9mIHRoZSBiYWxsLiAKSSB3YXMgYWJzb2x1dGVseSBtaXNlcmFibGUgYW5kIHNpY2sgYWxsIHRoZSB0aW1lLiAKQW5vdGhlciAkNC4wMiBtaWxsaW9uIHdhcyBzcGVudCBvbiBwb2tpZSBhbmQgb3RoZXIgZ292ZXJubWVudCByZWxhdGVkIHRheGVzIGFuZCBhbmQgb3V0bGFpZCAkNDgyLDc4NiB0byBjaGFyaXRpZXMgYW5kIHNwb3J0aW5nIGJvZGllcy4gCiJKb2huIEtleSBoYXMgdG9kYXkgZ29uZSBvbiB0aGUgZGVmZW5zaXZlIG1ha2luZyBhbGwgc29ydHMgb2YgZXhjdXNlcyBmb3IgbWlzbGVhZGluZyByZXBvcnRlcnMuIApXZSBzYXcgYSBtb20gd2hvIGNvdWxkIG5vdCBoYXZlIGJlZW4gb2xkZXIgdGhhbiAxOCwgc2l0dGluZyBhbG9uZSBpbiBhIHdoZWVsY2hhaXIsIGhvbGRpbmcgaGVyIGdvd24gY2xvc2VkIGluIHRoZSBiYWNrIHdpdGggaGVyIGhhbmQuIEkgY291bGQgc2VlIGhlciBiYWJ5J3MgaW50ZXN0aW5lcyBwaWxlZCBpbiBhIGJhZyBhdG9wIGhpcyBzdG9tYWNoLiAKVG9kYXlzIENoYXJ0cyBhcmUgUmVzZWFyY2hlZCBhbmQgcHVibGlzaGVkIGJ5IHRoZSBPZmZpY2lhbCBVSyBDaGFydHMgQ29tcGFueSwgYW5kIGJyb2FkY2FzdCBvbiBCQkMgUmFkaW8gMSBldmVyeSBzdW5kYXkuIChGdWxsIEFuc3dlcikKRGF5cyBhZnRlciBXaWtMZWFrcyByZWxlYXNlZCBkb2N1bWVudHMgdG8gaWxsdXN0cmF0ZSB3aGF0IGEgZnV0aWxlIHdhc3RlIG9mIGxpZmUgYW5kIHJlc291cmNlcyB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGlzLCB0aGUgSG91c2Ugdm90ZWQgdG8gc3BlbmQgYW5vdGhlciAkNTkgQklMTElPTiBkb2xsYXJzIG9uIGl0LiAKTm93IGFsbCBvZiB0aGVzZSB5ZWFycyBsYXRlciwgSSBmaW5hbGx5IG1hZGUgaXQgdGhyb3VnaCBhIGNvdXBsZSBvZiB3ZWVrcyB3aXRoIG9ubHkgb25lIGRlbGl2ZXJ5L3Rha2VvdXQgbWVhbCwgd2hpY2ggSSBoYWQgcGxhbm5lZCBpbnRvIG15IHdlZWsuIEkgY29vayBhIGJ1bmNoIG9mIHN0dWZmIGluIGFkdmFuY2UgdGhhdCB0YWtlcyB0aW1lIG9uIFN1bmRheSwgYW5kIEkgbWFrZSBpdCBhbGwgYXQgb25jZS4gVGhyb3VnaG91dCB0aGUgd2VlayBJIGNvbWJpbmUgdGhhdCAobGV0IHNhdCBzb21lIGNoaWNrZW4pIHdpdGggYSBxdWljayB0byBtYWtlIHNhbGFkIGFuZCBhIGNhcmIgKGxpa2UgcmljZS9wYXN0YS9ldGMuKQpJZiBZb3UgYXJlIGEgZ29vZCB0b3VybmFtZW50IHBsYXllciB0aGVuIFlPdSBjYW4gc3RhcnQgYSBmcmVlIHBva2VyIGJhbmtyb2xsIGJ5IG9ubHkgcGxheWluZyBmcmVlIHBva2VyIHRvdXJuYW1lbnRzLiAKQ29uZ3JhdHVsYXRpb25zIG9uIHlvdXIgTGl0dGxlISBCYWJpZXMgcGVlIGNvbnN0YW50bHkgYXQgNiB3ZWVrcy4gSSByZW1lbWJlciBjaGFuZ2luZyBvbmNlIGFuIGhvdXIgb3Igc28gKG51cnNlLCBkaWFwZXIgY2hhbmdlLCBuYXAsIGRpYXBlciBjaGFuZ2UsIHJlcGVhdCksIGl0IGRvZXMgc2xvdyBkb3duLiBJIGp1c3QgbGV0IG15IExPIHNsZWVwIGV2ZW4gaWYgSSBrbmV3IGhlIHdvdWxkIGxlYWsuCkkgbWlnaHQgbmVlZCBhIGZldyBtb3JlIGxpc3RlbnMgd2l0aCBpdCBmb3IgaXQgdG8gcmVhbGx5IHN0YXJ0IHRvIGdyb3cgb24gbWUuLiAKV2UgaGF2ZSBzZWVuIHRoZSBpc3N1ZSBvbiBSZWFsdGVrIEludGVsIGFuZCBRdWFsY29tbSBhcyBmYXIgaGFyZHdhcmUgZ29lcy4gSGF2ZSB0cmllZCBkaXNhYmxpbmcgSVB2NiBhbmQgbm90aGluZyBzZWVtcyB0byB3b3JrIG90aGVyIHRoYW4gc3RhdGljIGFzc2lnbmluZyBJUCAod2hpY2ggYXMgYW4gSVNQIGlzIGEgQkFEIGlkZWEpLi4gCkZvdXIgbW9udGhzIGFnbywgTHVuZCBhbmQgaGlzIGJhbmRtYXRlcyBtYWRlIHRoZWlyICh0cml1bXBoYW50KSBtYWluc3RhZ2UgZGVidXQgYXQgdGhlIEVkbW9udG9uIEZvbGsgRmVzdC4gU2luY2UgdGhlbiwgdGhlIHNvbiBvZiBzb3V0aGVybiBBbGJlcnRhIHJhbmNoZXJzIHNjb3JlZCBoaXMgZmlyc3QgTm8uIApFdmVyeXRoaW5nIGhhcyB0byBzdGF5IG9wZW4gZW5kZWQuTGlrZSwgc3BvaWxlciBhbGVydCEgVGhleSdyZSBub3QgZ29pbmcgdG8gc3RvcCB0aGUgSm9rZXIuIE9yIFBlbmd1aW4uIE9yIFJpZGRsZXIuIE9yIFNjYXJlY3Jvdy4gRmVkZXJhbCBnb3Zlcm5tZW50IGp1c3QgZ2l2ZXMgdXAgb25lIG9mIGl0cyBtb3N0IHBvcHVsb3VzIGNpdGllcz8gRm9yIG92ZXIgYSB5ZWFyIT9FdmVuIGlmIHRoZSBnb3Zlcm5tZW50IGRvZXNuJ3QgZ2l2ZSBhIHNoaXQgYWJvdXQgbWlsbGlvbnMgb2YgcGVvcGxlLCBhIHByZW1pc2UgZWFzeSBlbm91Z2ggdG8gYWNjZXB0LCB0aGV5J2QgbmV2ZXIgbGV0IGxhdyBhbmQgb3JkZXIgZmFpbCBhbmQgbG9zZSB0aGUgZnVja2luZyBNT05FWSBjb21pbmcgb3V0dGEgdGhlcmUuIApZZWFyIGFmdGVyIHllYXIsIGNsaW5pY2FsIHJlc2VhcmNoIHRlYW1zIGFuZCBpbnZlc3RpZ2F0aW5nIHBoeXNpY2lhbnMgYXJlIHN1YmplY3RlZCB0byBhbiBleHBvbmVudGlhbCBncm93dGggaW4gdGhlIGFkbWluaXN0cmF0aXZlIGJ1cmRlbiwgcGFwZXJ3b3JrLCBhbmQgcmVndWxhdGlvbiBhc3NvY2lhdGVkIHdpdGggY2xpbmljYWwgdHJpYWxzLiBUaGUgZmF1bHQgZm9yIHRoaXMgaW5jcmVhc2UgaW4gYnVyZWF1Y3JhY3kgaXMgY2F1c2VkIGF0IGFsbCBsZXZlbHMuIFRoZSBsYXcgaGFzIG5vdCBhcHByZWNpYWJseSBjaGFuZ2VkIHNpbmNlIDIwMDEsIGJ1dCB0aG9zZSBhZG1pbmlzdGVyaW5nIGl0IG9yIHdvcmtpbmcgd2l0aGluIGl0IGFyZSBwcm9kdWNpbmcgaW5jcmVhc2luZyBidXJlYXVjcmF0aWMgZGVtYW5kcy4gCkJvbnVzOiBObyBkaXN0YXN0ZWZ1bCBmYW5zZXZpY2VXaGVuZXZlciBwZW9wbGUgc3BlYWsgb2YgT2thd2EgQmt1YiwgdGhlcmUgZ2VuZXJhbGx5IGEgc2VsZWN0aW9uIG9mIHdvcmtzIHRoYXQgY29tZSB0byBtaW5kLiAKNykgR28gZGVlcGVyLiBPbmNlIHlvdXIgcGFydG5lciBoYXMgaW5zZXJ0ZWQgdGhlIHRpcCBvZiBoaXMgcGVuaXMsIGFzayBoaW0gdG8gc2xvd2x5IHBlbmV0cmF0ZSB5b3VyIGFudXMgZnVydGhlciwgYnV0IGF0IGEgZ2VudGxlIHBhY2UgdGhhdCB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoLiAKUGxhbiB0byBsaW5nZXIgYW5kIHRha2UgaW4gdGhlIHZpZXcsIGFuZ2xlcyBhbmQgYXJjaGl0ZWN0dXJlIG9mIEh1ZHNvbiBZYXJkcyBmcm9tIHRoaXMgY2VudGVycGllY2UgdGhhdCBzdHJldGNoZXMgZnJvbSA1MCBzcXVhcmUgZmVldCBhdCBpdHMgYmFzZSB0byAxNTAgc3F1YXJlIGZlZXQgYXQgdGhlIDE1MCBmb290IGhpZ2ggdG9wLCBhbmQgaXMgcmlnaHQgb3V0c2lkZSB0aGUgc2hvcCBzdHVmZmVkIHBvZGl1bS4uIApNb25leSBpcyByYWlzZWQgYnkgc3R1ZGVudHMgdGhyb3VnaG91dCB0aGUgeWVhci4gVGhleSB1c2VkIHRvIGdvIG91dCAiY2FubmluZyIgaW4gdGhlIGZhbGwgdG8gcmFpc2UgbW9uZXkgb3V0c2lkZSBvZiBzdG9yZXMgYW5kIHN1Y2gsIGJ1dCBQZW5uIFN0YXRlIHB1dCBhbiBlbmQgdG8gdGhhdCBiZWNhdXNlIG9mIGdyb3dpbmcgc2FmZXR5IGlzc3VlcyAoY3VsbWluYXRpbmcgaW4gYSBzdHVkZW50IGdldHRpbmcga2lsbGVkIGluIGEgY2FyIGFjY2lkZW50IHdoaWxlIHJldHVybmluZyBmcm9tIGEgY2FubmluZyB0cmlwKS4gClNpbmNlIEdlcm1hbnkgaGFkIGxvc3QgdGhlIHdhciwgc2hlIHdhcyBjb3dhcmRseSBhbmQgdHJlYWNoZXJvdXMgYW5kIHNoZSBkZXNlcnZlZCB0byBkaWUuIApJIHRvb2sgdGltZSB0byB3cml0ZSB0aG91Z2h0ZnVsIHJlcGxpZXMgdGhhdCB3b3VsZCBnaXZlIHBlb3BsZSBtZWFuaW5nZnVsIGluZm9ybWF0aW9uIHRvIGNvbnNpZGVyLiAKVGhlcmUgd2FzIGhvcGUgb2YgY29tcHJvbWlzZSB0aGlzIHN1bW1lciBkdWUgdG8gdGhlIGVmZm9ydCBvZiBzdGF0ZSBBc3NlbWJseW1hbiBBZGFtIEdyYXkgKEQgTWVyY2VkKSwgd2hvIHNwb2tlIHRvIDEwTmV3cyBpbiAiQ2hlY2sgb3IgQmV0Ii4gCiJUaGlzIHdvdWxkIGJlIGEgc2lnbmlmaWNhbnQgZGV2ZWxvcG1lbnQgYW5kIG9uZSB0aGF0IHdvdWxkIGdpdmUgYSBmdXR1cmUgZmVkZXJhbCBnb3Zlcm5tZW50IHRoZSBvcHRpb24gb2YgYWRvcHRpbmcgZWl0aGVyICQxIG1heGltdW0gYmV0cyBvciBhY3RpdmF0aW5nIG1hbmRhdG9yeSBwcmUgY29tbWl0bWVudCwiIGhlIHNhaWQuClNwYXQgb3V0IGEgYm90dGxlIG9mICJkb3BlZCIgY29rZSwgYW5kIGJvd2xlZCBvdmVyIHNldmVyYWwgd291bGQgYmUgaHVtYW4gY2FwdG9ycy4gCkl0IHRoZSB1c2Ugb2YgVVMgdGF4ZG9sbGFycyB0byBrZWVwIGl0c2VsZiBvbiB0b3AgYW5kIHRoZW4gdXNpbmcgdGhlIHByb2ZpdHMgZnJvbSB0aG9zZSB0YXggZG9sbGFycyB0byBwYXkgZXZlbiBiaWdnZXIgc2FsYXJpZXMgdG8gdGhlIEdvbGRtYW4gU2FjaHMgYmFua2VycyB0aGF0IG1ha2VzIHRoZSBPYmFtYSBiYWlsb3V0IGxvb2sgbGlrZSBhIGJhaWxvdXQgZm9yIGJhbmtlcnMgYW5kIG5vdCB0aGUgcGVvcGxlLiBJdCBpcyBhbHNvIHdoeSBNYXR0IFRhaWJiaSByZWZlcnJlZCB0byBHb2xkbWFuIFNhY2hzIGFzLiAKIkkgY2FuJ3QgdGFrZSBpdCAgIGl0J3MgeW91cnMgYnkgcmlnaHQsIERpYW5hLiBZb3Ugc2VudCB0aGUgc3RvcnkgaW4gYW5kIG1hZGUgdGhlIGFsdGVyYXRpb25zLiBJICAgSSB3b3VsZCBjZXJ0YWlubHkgbmV2ZXIgaGF2ZSBzZW50IGl0LiBTbyB5b3UgbXVzdCB0YWtlIHRoZSBjaGVjay4iCkFyZSB3aGF0IG15IGZyaWVuZCBEb3QgY2FsbHMgImluZGVudHVyZWQgc2VydmFudHMgdG8gdGhlIG1hbiIgZnJvbSB0aGUgYWdlIG9mIDE4LCBzbyB3b3JyaWVkIGFib3V0IHBheWluZyBvZmYgdGhlaXIgc3R1ZGVudCBsb2FucyB0aGF0IHRoZXkgaGF2ZSBubyBjaG9pY2UgYnV0IHRvIGNob29zZSB0aGUgbW9zdCBsdWNyYXRpdmUgY2FyZWVycyBhbmQgc3RheSBhd2F5IGZyb20gInBvbGl0aWNzLiIuIApXYXMgbG92ZWQgaW4gdGhlIE1vdG9yYmlrZSB3b3JsZCB0b28sIG5lYXJseSBiZWNhbWUgYSBiaWtlIHJhY2VyIGFyb3VuZCB0aGUgdGltZSBvZiBGaXJlc3RhcnRlciB3YXMgcmVsZWFzZWQuIEhlIHN0b3BwZWQgcmFjaW5nIGhpbXNlbGYgaW4gdGhlIDkwIGFmdGVyIGEgYmlnIGNyYXNoIGFuZCB3aXRoIHRoZSBQcm9kaWd5IGJhbmQgaGl0dGluZyBpdCBiaWcgaGUgY2hvb3NlIG11c2ljLiBSZWNlbnRseSBoZSBvd25lZCBhIFJhY2luZyB0ZWFtIGluIEJyaXRpc2ggc3VwZXJzcG9ydCByYWNpbmcgc2VyaWVzLCB0aGUgdGVhbSBldmVuIHdvbiAyIHJhY2VzIGF0IHRoZSBJc2xlIE9mIE1hbiBUVCwgcHV0IGFsb3Qgb2YgdGltZS9tb25leSBpbnRvIGl0Li4gClRoZXJlJ3MgdGhlIGZhY3QgdGhhdCBpdCBpbnZvbHZlcyB0b3BsZXNzIHdvbWVuLiBFdmVuIHRoZSBXYWxsIFN0cmVldCBKb3VybmFsIGtub3dzIHlvdSBnZXQgbW9yZSByZWFkZXJzIGlmIHlvdSBjYW4gdGllIHRoZSBzdG9yeSB0byB1bnJlc3RyYWluZWQgdGl0dGllcy4gCkEgZ2lhbnQgbXVsdGlnZW5lcmF0aW9uYWwgaW5qdXN0aWNlIHRoYXQgb3VyIHByZXNpZGVudCBwcm9wb2dhdGVzIGJ5IHNvd2luZyBtaXNpbmZvcm1hdGlvbiBhbmQgaGF0ZS4gCkV1cm9wZWFuIG1lZGlhIGhhdmUgZGVzY3JpYmVkIHRoZSBwb3N0cG9uZW1lbnQgb2YgdGhlIEJyZXhpdCB2b3RlIGluIFdlc3RtaW5zdGVyIHZhcmlvdXNseSBhcyBUaGVyZXNhIE1heSdzICJjaXJjdXMgdHJpY2siIG9yICJCcmV4aXQgcG9rZXIiLgpGb3IgbW9yZSBpbiBkZXB0aCBydWxlcyBvciBoYW5kIHJhbmtpbmdzICh3aGF0IGhhbmRzIGJlYXQgd2hhdCkgdXNlIHRoZSBsaW5rcyBvbiB0aGUgcmlnaHQgaGFuZCBzaWRlIG9mIHRoZSBwYWdlLgpDb2xiZXJ0IGFuZCBTdGV3YXJ0IGZvciBhIGJldHRlciBBbWVyaWNhIGluIEFtZXJpY2EKT3ZlcnZpZXcgZm9yIFBvcnRsYW5kZXIKVGhpcyBpcyB0aGUgaW5mYW1vdXMgIlRoZSBGYW1lIE1vbnMgZXIiIGFsYnVtLCBhbmQgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcy4gClBoeXNpY2FsIHRoZXJhcGlzdHMgZWFybmVkIGFuIGF2ZXJhZ2Ugb2YgJDgxLDExMCBpbiAyMDEyLiBJbiB0aGUgbG93ZXN0IHBheWluZyBzdGF0ZSBvZiBTb3V0aCBEYWtvdGEsIGhvd2V2ZXIsIHBoeXNpY2FsIHRoZXJhcGlzdHMgZWFybmVkICQ2NCwzNTAsIHdoaWxlIGluIE5ldmFkYSAgIHRoZSB0b3AgcGF5aW5nIHN0YXRlICAgdGhleSBlYXJuZWQgJDExMCw2NzAuLiAKQnV0IHRoYXQgcmVxdWlyZXMgaW50dWl0aXZlIGluZm9ybWF0aW9uLiAKSSBkb24ndCBldmVuIHRoaW5rIGl0J3MgdGhhdCBkaXJlLiBQYXJlbnRzIHNob3VsZCBzbG93bHkgZW1wb3dlciB0aGVpciBraWRzIHRvIGhhbmRsZSBsaWZlLiAKU28gdGhlIHBlcnNvbiBzaXR0aW5nIG5leHQgdG8gdGhlIHBlcnNvbiBtYWtpbmcgc3VyZSB0aGUgaG9yc2VzIHdlbnQgd2hlcmUgdGhleSB3ZXJlIHN1cHBvc2VkIHRvLCBjYWxsZWQgdGhlIGRyaXZlciwgd291bGQgc2l0IHdpdGggYSBzaG90Z3VuLi4gCklmIHlvdSBoYXZlbiBiZWVuIHdlYXJpbmcgdGhlIGZvdW5kYXRpb24gZm9yIGxpa2UgMTAgaG91cnMgYWxyZWFkeSwgaXQgbWlnaHQgYmUgaGFwcGVuaW5nIGJlY2F1c2Ugb2YgYSBtaXh1cCBvZiBwcmltZXIgZm91bmRhdGlvbiBiYXNlcy4gCkFzIGlmIEkgZGlkbid0IGtub3cgaXQgYWxyZWFkeSwgSSBhbSBub3QgcG9zaXRpdmUgdGhhdCBJIGFtIE9MRC4gQWZ0ZXIgd2F0Y2hpbmcgQUkgbGFzdCBuaWdodCBhbmQgc2VlaW5nIHRoZSBwZXJmb3JtYW5jZSBvZiBQb2tlciBGYWNlIGJ5IHdob2V2ZXIgdGhhdCBnaXJsIHdhcywgSSB3YXMganVzdCBiYWZmbGVkLiBUaGUgcGlhbm8gd2l0aCB0aGUgYnViYmxlcywgdGhlIHZlcnkgd2VpcmQgInZvZ3VlIiBsaWtlIGRhbmNpbmcsIHRoZSB6aXBwZXIgb24gaGVyIGxlZnQgZXllLCBqdXN0IHRoZSB3aG9sZSB0aGluZyB3YXMganVzdCBCSVpBUlJPLiAKQWdhaW5zdCB0aGUgY2FsbGluZyBzdGF0aW9uIGl0IGFsbW9zdCBpbXBvc3NpYmxlIHRvIGFzc2lnbiB0aGVtIGEgcmFuZ2UgYmVjYXVzZSB0aGV5IGFyZSBwbGF5aW5nIHN1Y2ggYSB3aWRlLCBjcmVhdGl2ZSwgd2lsZCBhbmQgYW1iaXRpb3VzIHJhbmdlLiBGb3IgZXhhbXBsZSwgdGhlIGN1dG9mZiBvcGVucywgeW91IHRocmVlIGJldCB0aGUgYnV0dG9uIGFuZCBhIGNhbGxpbmcgc3RhdGlvbiBjb2xkIGNhbGxzIG91dCBvZiB0aGUgYmlnIGJsaW5kLi4gCkdyYXppZSBhbGxhIHByZWNpc2lvbmUgY29uIGN1aSBzb25vIHN0YWJpbGl0aSBpIHJ1b2xpIG5lbCB0YW5nbywgaSBiYWxsZXJpbmkgc3BlcmltZW50YW5vIGxlIGRpdmVyc2UgcGFydGkgZGkgcywgaW4gcGFydGljb2xhciBtb2RvIGxhIHBhcnRlIGF0dGl2YSwgZGV0ZXJtaW5hdGEsIHNvbGFyZSwgbWFzY2hpbGUgZSBxdWVsbGEgcmljZXR0aXZhLCBsdW5hcmUsIHNlbnNpYmlsZSwgZmVtbWluaWxlLgpObyB5b3Ugd2VyZW4gYmFsZGlsb2NrcywgeW91IHdlcmUgZnVja2luZyBhcm91bmQgd2l0aCB5b3VyIHdpbmVyeSwgZ29vZmluZyBvZmYgb24gc2lkZSBwcm9qZWN0cywgYW5kIGJhc2ljYWxseSBkb2luZyBldmVyeXRoaW5nIGV4Y2VwdCB3b3JraW5nIG9uIGEgVG9vbCBhbGJ1bS4gCiJQYXVsIE1hbmFmb3J0IGxlbmllbnQgZm91ciB5ZWFyIHNlbnRlbmNlICAgZmFyIGJlbG93IHRoZSByZWNvbW1lbmRlZCAyMCB5ZWFycyBkZXNwaXRlIGV4dGVuc2l2ZSBmZWxvbmllcyBhbmQgcG9zdCBjb252aWN0aW9uIG9ic3RydWN0aW9uICAgaXMgYSByZW1pbmRlciBvZiB0aGUgYmxhdGFudCBpbmVxdWl0aWVzIGluIG91ciBqdXN0aWNlIHN5c3RlbSB0aGF0IHdlIGFsbCBrbm93IGFib3V0LCBiZWNhdXNlIHRoZXkgcmVvY2N1ciBldmVyeSB3ZWVrIGluIGNvdXJ0cyBhY3Jvc3MgQW1lcmljYSwiIHNhaWQgQXJpIE1lbGJlciwgYSBsZWdhbCBhbmFseXN0IGZvciBOQkMgTmV3cywgaW4gYSB0d2VldCBzaG9ydGx5IGFmdGVyIHRoZSB2ZXJkaWN0LiAKQWZ0ZXIgb3VyIGRheSBhdCB0aGUgYmVhY2gsIHdlIHRob3VnaHQgd2Ugd291bGQgdHJlYXQgb3Vyc2VsdmVzIHRvIGEgcmVhbGx5IG5pY2UgZGVhbC4gCk5vbmUgaW4gVVMgQmlsbGJvYXJkICggV2hpY2ggaXMgdGhlIG1vc3QgaW1wb3J0YW50ICkuIApPZ19mY2tubXJjbHMgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpBIGZldyBtb3JlIG5pY2Ugd2lucyAuIEhvdyBtdWNoIG1vbmV5IGhhdmUgeW91IHB1dCB0aHJvdWdoIHRoZXNlIHRoaW5ncyBmcmFua3N0ZXI/IC4gT3JpZ2luYWxseSBQb3N0ZWQgYnkgS2lhMDA0MiBGaW5hbGx5IGZpZ3VyZSBvdXQuIEl0IGlzIGp1c3Qgc28gc2ltcGxlLiBUaGUgLgpXZWFrIGZyb20gaW5oYWxpbmcgc28gbXVjaCBjYXJib24gbW9ub3hpZGUsIExlb25hIHdhcyBiYXJlbHkgYWJsZSB0byBjYWxsIDkgMSAxLgpUaGVyZSBhcmUgZ2FtZXMgdGhhdCBuZWVkIHRvIGJlIHBsYXllZCBvbmx5IHRocm91Z2ggd2FnZXJpbmcuIEhvd2V2ZXIgYmVmb3JlIHBsYXlpbmcgc3VjaCByZWFsIG1vbmV5IGdhbWUgaXQgaXMgZXNzZW50aWFsIGZvciB5b3UgdG8gb2J0YWluIGluIGRlcHQga25vd2xlZGdlIGFib3V0IG9ubGluZSBjYXNpbm8gc2xvdHMuIE9ubGluZSBzbG90cyBjYW4gYmUgcGxheWVkIGZyb20gYW55cGxhY2Ugd2hlcmUgdGhlcmUgaXMgYWNjZXNzIHRvIGNvbXB1dGVyIGFuZCBpbnRlcm5ldC4gClRoZSBTdXBlciBCb3dsIGhhbGZ0aW1lIHNob3csIHdpdGggYW4gYXVkaWVuY2UgdXN1YWxseSB0b3BwaW5nIDEwMCBtaWxsaW9uLCBpcyBlYXNpbHkgdGhlIGJpZ2dlc3Qgc2hvdyBvZiBhbiBhcnRpc3QgY2FyZWVyLiBJdCBzbyBhdHRlbnRpb24gZ2V0dGluZyB0aGF0IExhcyBWZWdhcyBldmVuIHNldCBvZGRzIG9uIHdoYXQgY29sb3IgR2FnYSBoYWlyIHdvdWxkIGJlLiBUaG9zZSB3aG8gYmV0IGJsb25kZSB0b29rIGhvbWUgc29tZSBtb25leS4KRmFjZSB0byBmYWNlIGludGVyYWN0aW9ucyBhcmUgYWxzbyB0aGUgYmVzdCByZWFzb25zIHdoeSBsaXZlIHBva2VyIGlzIGJldHRlciB0aGFuIGFuIG9ubGluZSBwb2tlci4gCkkgcGVyc29uYWxseSB0aGluayBpdCBpcyB2ZXJ5IGRlcGVuZGVudCBvbiB0aGUgcGVyc29uIGFuZCBob3cgdGhleSB3aWxsIGVuZCB1cCBhZGp1c3RpbmcgdGhhdCBsYW5ndWFnZSBpbiB0aGVpciBvd24gaGVhZHMuIAooQXMgdXN1YWwgZm9yIHVzIG1vbXMgYnV0IGV2ZW4gd29yc2UgYXMgSSdkIG5ldmVyIHZhY2F0aW9uIGhlcmUgdG8gYmVnaW4gd2l0aDsgYW5kIGFueSB0aW1lIHdpdGggTUlMIGlzIG5vdCBmdW4pLiAKVGhleSBpbmNsdWRlIGFjY291bnRhbnRzLCBhcmNoaXRlY3RzLCBtYXNzYWdlIHRoZXJhcGlzdHMgYW5kIGEgaG9zdCBvZiBvdGhlciBzZXJ2aWNlIHByb3ZpZGVycy4gVGhleSBhcmUgcGVvcGxlIHdobyBoYXZlIGludmVzdGVkIHRoZWlyIGxpdmVzIGludG8gbWFraW5nIG91ciBkb3dudG93biBvbmUgb2YgdGhlIG1vc3QgdmlicmFudCBhbmQgc3VjY2Vzc2Z1bCBpbiB0aGUgbmF0aW9uLldoZW4gYXNrZWQgaWYgdGhleSBzdXBwb3J0IGJhbGxvdCBtZWFzdXJlIDMwMCB3aGljaCB3b3VsZCBnaXZlIDYwKyBuZWlnaGJvcmhvb2RzIGluIEJvdWxkZXIgdGhlIHJpZ2h0IHRvIGhvbGQgc3BlY2lhbCBlbGVjdGlvbnMgYW5kIHZldG8gbGFuZCB1c2UgY2hhbmdlcyBhcHByb3ZlZCBieSBjaXR5IGNvdW5jaWwsIHRoZXkgb3ZlcndoZWxtaW5nbHkgc2FpZCAiTm8uIiBTaXh0eSBvbmUgcGVyY2VudCBvcHBvc2UgdGhlIG1lYXN1cmU7IDIwIHBlcmNlbnQgYXJlIGluIGZhdm9yLiAKVGhlcmUgd2VyZSBzZXZlcmFsIGRyeWVyIHZlbnQgZmlyZXMgYWNyb3NzIENhbmFkYSBpbiAyMDE4LCBhbGwgY2F1c2VkIGJ5IG9jY3VwYW50cyBub3QgY2xlYW5pbmcgdGhlIGRyeWVyIGxpbnQgY2F0Y2gsIG9yIHRoZSBwaXBlIHRoYXQgZ29lcyB0byB0aGUgdmVudHMuLiAKRE8gTk9UIHRyaW0gaW5mbHVlbmNlIG9uIGFueSBUOCBvciBUOSBtYXBzLiBUaGlzIHNob3VsZCBiZSBjb21wbGV0ZWx5IHVubmVjZXNzYXJ5IGFuZCByZXF1aXJlcyB5b3UgdG8gcmUgc2VhbCB0aGUgbWFwIGFmdGVyd2FyZHMgd2l0aCBhbiBleHBlbnNpdmUgQ2FydG9ncmFwaGVyIFNlYWwuIFRoaXMgaXMgYWNjb21wbGlzaGVkIGluIG15IHNldHVwIGJ5IHNoYXBpbmcgV2FzdGUgUG9vbCB0byBUMTQuIFlvdSBjYW4gcnVuIGVpdGhlciBUOSBvciBUMTQgdG8gdHJpbSB0aGUgaW5mbHVlbmNlIGF0IHRoaXMgcG9pbnQuIEkgY29uc2lkZXIgdGhpcyBvcHRpbWFsIGZvciBlYXN5IEVsZGVyIHRyaW1taW5nIHNpbmNlIFdhc3RlIFBvb2wgaXMgc3VjaCBhbiBpbXBvcnRhbnQgcGl2b3QgcG9pbnQgb24gdGhlIGF0bGFzLgpJIHZvbHVudGVlci4gSSdtIGNvbnN0YW50bHkgcmVhZGluZyBuZXcgYm9va3MuIApJZiB5b3UgY2FuJ3QgZ2V0IG91dHNpZGUsIHRoZXJlIGFyZSBvdGhlciB3YXlzIHRvIGNoYW5nZSB5b3VyIHNjZW5lcnkuIEZsaXBwaW5nIG9uIHRoZSBUViBvciByYWRpbyBjYW4gcHJvdmlkZSBhIG11Y2ggbmVlZGVkIGRpc3RyYWN0aW9uLiBUaGUga2V5IHBvaW50IGlzIHRvIGxldCB5b3VyIG1pbmQgJ3JlbGF4JyAgIHNoaWZ0aW5nIHRoZSBpbW1lZGlhdGUgcHJvYmxlbXMgYXMgZmFyIGF3YXkgZnJvbSB5b3VyIGNvbnNjaW91cyBtaW5kIGFzIHBvc3NpYmxlIGZvciBhIHRpbWUuCkV2ZW50dWFsbHkgYSBtdXR1YWwgZnJpZW5kIHNhaWQsICJEaWQgeW91IGhlYXIgWCB3YXMgb24gT3ByYWgsIGNvbmZlc3NpbmcgYWJvdXQgaGVyIGhvcnJpYmxlIGxpZmUgb2YgZHJ1ZyBhZGRpY3Rpb24gYW5kIHByb3N0aXR1dGlvbj8iIFR1cm5zIG91dCBzaGUgd2FzbiB0YWtpbmcgRGFuY2UgbGVzc29ucyB0byBwZXJmb3JtIGluIHRoZSBOdXRjcmFja2VyLiBGb3J0dW5hdGVseSB0aGUgZW1vdGlvbmFsIGNvbm5lY3Rpb24gaGFkIGxvbmcgZ29uZSBjb2xkLCBzbyBpbnN0ZWFkIG9mIHRoZSBuZXdzIGJyZWFraW5nIG1lLCBpdCBmb3J0dWl0b3VzbHkgYnJva2Ugc2V2ZXJhbCBwaWxsYXJzIG9mIG15IEJsdWUgUGlsbCBjb25kaXRpb25pbmcuCkRvbmMsIGxlcyBhc3N1cmV1cnMgcyd0YWllbnQgbW9udHIgdHJzIGducmV1eCBldCBhdmFpcyBtb250ciBjb21iaWVuIGlscyBjb21wYXRpc3NhaWVudCAgbGEgc291ZmZyYW5jZSBkZSBsZXVycyBhc3N1cnMuLiAKQWNjb3JkaW5nIHRvIEJhbGZvdXIgTHlubidzIGxpdGVyYXR1cmUgcmV2aWV3LCBzdHVkaWVzIGRhdGluZyBiYWNrIHRvIDE5NDggaGF2ZSBpbmRpY2F0ZWQgdGhhdCB0aGVyZSdzIG5vIGxpbmsgYmV0d2VlbiBtaWxrIGFuZCBwaGxlZ20sIGJ1dCBhIDIwMDMgc3R1ZHkgaW4gdGhlIGpvdXJuYWwgQXBwZXRpdGUgYXNrZWQgMzQ1IHJhbmRvbSBBdXN0cmFsaWFuIHNob3BwZXJzIHdoZXRoZXIgdGhleSB0aG91Z2h0IG1pbGsgY2F1c2VzIG11Y3VzLiBPZiB0aGUgMTExIHNob3BwZXJzIHdobyBkcmFuayB3aG9sZSBtaWxrLCBhbG1vc3QgaGFsZiBvZiB0aGVtIHdlcmUgb2YgdGhlIG9waW5pb24gdGhhdCBpdCBkaWQuIE9ubHkgMjUgcGVyY2VudCBvZiB0aGUgMTIxIHJlZHVjZWQgZmF0IG1pbGsgZHJpbmtlcnMgc2FpZCB0aGV5IGJlbGlldmVkIG1pbGsgY2F1c2VkIG11Y3VzLiBUaGUgZGlmZmVyZW5jZSBpbiBwZXJjZXB0aW9uIG1pZ2h0IGhhdmUgc29tZXRoaW5nIHRvIGRvIHdpdGggaG93IG1pbGsgZmVlbHMgaW4gdGhlIG1vdXRoICAgaXQgaXMsIGFmdGVyIGFsbCwganVzdCBkcm9wbGV0cyBvZiBmYXQgc3VzcGVuZGVkIGluIHdhdGVyLgpUaGUgY291cnQgd2lsbCBhc3NpZ24gYSBwdWJsaWMgZGVmZW5kZXIuIApJZiB5b3UgY2FuIHNob3Agb25saW5lLCBidXQgaGF2ZSBhIHNvbGRlcmluZyBpcm9uLCBncmFiYmluZyBzY3JhcCBlbGVjdHJvbmljcyBmcm9tIHRveXMgdG8gYnVzdGVkIG1pY3Jvd2F2ZXMsIHR2cywgYW5kIGV2ZW4gZmxhc2hsaWdodHMgYXJlIGEgdHJlYXN1cmUgdHJvdmUgb2YgY29tcG9uZW50cywgYW5kIGhhcnZlc3RpbmcgY2FuIHNhdmUgcXVpdGUgYSBiaXQgYW5kIGdpdmUgeW91IGVub3VnaCB0byBtYWtlIGxlZCwgY2hhcmdlci4gQmF0dGVyeSBHdWFnZSwgbXVzaWMgYm94LCBhbmQgbWFueSBtb3JlIGNpcmN1aXRzLiAKWW91IGRvbid0IG5lY2Vzc2FyaWx5IGhhdmUgdG8gYmUgYSB3b29kc21hbiB0byBwdWxsIG9mZiB0aGUgaHVudGluZyB0aGVtZSwgYnV0IGl0IGRlZmluaXRlbHkgbWFrZXMgdGhpbmdzIG1vcmUgbGVnaXQgKGFuZCBpbmNyZWFzZXMgdGhlIGNvb2wgZmFjdG9yKSBpZiB5b3UgYWN0dWFsbHkga2lsbGVkIHRob3NlIGRlZXIgeW91cnNlbGYuIFlvdSBjYW4gY3JlYXRlIHlvdXIgaHVudGluZyBsb2RnZSBpbiB0aGUgZm9ybSBvZiBhIGhpZ2ggZW5kIGxvZyBjYWJpbiwgd2l0aCBhIHJvYXJpbmcgZmlyZXBsYWNlLCBiZWFyc2tpbiBydWdzIGFuZCBsb3RzIG9mIHRvcCBzaGVsZiB3aGlza2V5LCBvciB5b3UgY2FuIGdvIGxvd2Jyb3cgd2l0aCBsb3RzIG9mIGNhbW91ZmxhZ2UgYW5kIGNoZWFwIGJlZXIgaW4gdGhlIG1pbmkgZnJpZGdlLi4gCklmIHRoaXMgaXMgdGhlIGNhc2UsIHlvdSBtYXkgbmVlZCB0byB1c2UgYW4gdW5zY2VudGVkIG1hc3NhZ2Ugb2lsIHRocm91Z2ggeW91ciBlbnRpcmUgcHJlZ25hbmN5Li4gClRoZSBzYWxlIGlzIHdhbGsgaW4gd2FsayBvdXQgYW5kIGluY2x1ZGVzIDQuOCBoZWN0YXJlcyBvZiBsYW5kIHBsdXMgdGhlIGFzc29jaWF0ZWQgYnVpbGRpbmdzLCBpbmNsdWRpbmcgdGhlIGJvd2xpbmcgZ3JlZW5zLiAKVGhlIGZpcnN0IHdheSB0byBraWxsIGEgU2ltIGluIFNpbXMgMiBpcyB0byBidWlsZCBhIHBvb2wsIGFuZCBhZnRlciB0aGUgU2ltIGdldHMgaW4sIHRha2UgYWxsIGxhZGRlcnMgb3V0LiBBbm90aGVyIHdheSB0byBraWxsIGEgcHJlZ25hbnQgZmVtYWxlIFNpbSBpcyB0byB3YWl0IHVudGlsIHRoZWlyIGh1bmdlciBpcyByZWFsbHkgbG93LCBpdCB3b24ndCBuZWNlc3NhcmlseSBiZSByb2NrIGJvdHRvbSAoYmVjYXVzZSB0aGV5IGFyZSBwcmVnbmFudCBhbmQgdGhlaXIgbmVlZHMgZGVjYXkgcXVpY2tlciBhbmQgZGllIHF1aWNrZXIpLCBidXQgdGhlbiB0aGV5IHdpbGwgZHJvcCB0byB0aGUgZmxvb3IgYW5kIHRoZSBncmltIHJlYXBlciB3aWxsIGNvbWUgYW5kIHRha2UgY2FyZSBvZiB0aGUgcmVzdC4gV0FSTklORzogSWYgeW91IGtpbGwgYSBTaW0sIGFsbCBvZiB0aGUgU2ltJ3MgcmVsYXRpb25zaGlwcyB3aWxsIHJlY2VpdmUgYSBuZWdhdGl2ZSBtZW1vcnkgb2YgdGhhdCBTaW0gZHlpbmcuIApUaGUgcmV2ZXJzZSBpcyBmb3IgYWxsIG90aGVyIHR5cGVzIG9mIHBva2VyLiAKRGVjbGluYXRpb24gaXMgaG93IGZhciAibm9ydGgiIG9yICJzb3V0aCIgb2YgdGhlIGVxdWF0b3IgdGhlIHN0YXIgYXBwZWFycyB0byBiZS4gUmlnaHQgQXNjZW5zaW9uIGlzIGhvdyBmYXIgImVhc3QiIG9yICJ3ZXN0IiwgYW5kIGEgUmlnaHQgQXNjZW5zaW9uIG9mIHplcm8gaXMgZGVmaW5lZCBhcyBvbmUgb2YgdGhlIHBvaW50cyB3aGVyZSB0aGUgZXF1YXRvciBvZiBFYXJ0aCBpbnRlcnNlY3RzIHRoZSBwbGFuZSBvZiB0aGUgRWFydGggb3JiaXQgKHRoZSBlY2xpcHRpYykuIElmIHlvdSBhZGQgZGlzdGFuY2UgdG8gdGhpcywgdGhhdCBnaXZlcyB5b3UgYSAzRCBjb29yZGluYXRlIHN5c3RlbS4uIApJbiB0aGUgZmFsbG91dCwgVmluY2UgYmVnaW5zIHRvIHdvbmRlciBhbmQgZHJpZnQuICJHcmFtbWEgY2FsbHMgZGF5cyBsaWtlIHRoaXMgSW5kaWFuIFN1bW1lciwiIFZpbmNlIHNheXMgdG8gaGltc2VsZiwgIkJ1dCBpdCdzIGxpa2UgR29kIGlzIGFuIEluZGlhbiBnaXZlciwgZ2l2aW5nIHVzIHRoZSBmaXJzdCBDYXRob2xpYyBwcmVzaWRlbnQgYW5kIHRha2luZyBoaW0gYmFjayBmb3Igbm8gcmVhc29uLiIKTW9tIGZvcmdhdmUgaGVyIGluc3RhbnRseSwgdGhlIHBvb3Iga2l0dHkgaGFzIGJlZW4gc28gZ29vZCBhYm91dCBnb2luZyBvbmUgbGFzdCByb3VuZCBiZWZvcmUgd2UgZ28gdG8gc2xlZXAgYW5kIHdhaXRpbmcgdW50aWwgc29tZWJvZHkgd2FrZXMgdXAgaW4gdGhlIG1vcm5pbmcsIHNoZSBtdXN0IGhhdmUgYmVlbiB1bmRlciBhIExPVCBvZiBwcmVzc3VyZS4uIApIZSBzYWlkIHNvbWV0aGluZyBJIHRoaW5rIHRoYXQgeW91IGFuZCBtYW55IG90aGVycyBuZWVkIHRvIHRha2UgdG8gaGVhcnQuIApBbmQgYWNjb3JkaW5nIHRvIG15IG1hdGgsIDExMCBpbm5pbmdzLiAKUGVvcGxlIGFsc28gZm9yZ2V0IHRoYXQgbmF0aW9uYWxpdHkgY29tZXMgaW50byBwbGF5IGhlcmUsIHdoZXJlYXMgQW1lcmljYW5zIGFyZSBhbHdheXMgb3ZlciB0aGUgdG9wIGFuZCBleHRyZW1lbHkgb3V0IHRoZXJlLCBJY2VsYW5kZXJzIGFyZW4gYXQgYWxsLiBUaGV5IHVzdWFsbHkgbW9yZSBpbnRyb3ZlcnRlZCwga2VlcCB0byB0aGVtc2VsdmVzIGFuZCB0aGVpciB3YXlzIG1pZ2h0IGNvbWUgb2ZmIGFzIGFudGkgc29jaWFsIHRvIEFtZXJpY2FucyBiZWNhdXNlIHRoZXkgYmVsaWV2ZSBldmVyeSBlbW90aW9uIGFuZCBmZWVsaW5nIG11c3QgYmUgb3V0IHRoZXJlIGFuZCBub3RpY2VkIGJ5IG90aGVycyBpbiBvcmRlciB0byBhY3R1YWxseSBtYXR0ZXIuIFRoZSBBQyBsYXN0IHllYXIgd2FzIGEgZ29vZCBleGFtcGxlIG9mIHR5cGljYWwgQW1lcmljYW4gZXhhZ2dlcmF0ZWQgd2F5cyB3aGVuIHRoZSBjcm93ZCByYW5kb21seSBzdGFydGVkIHNob3V0aW5nICJVU0EgVVNBIFVTQSIgb24gU2hhdyB0aGlyZCBkZWFkbGlmdC4gVGhpcyBpcyBzZWVuIGFzIGNvbXBsZXRlbHkgcmlkaWN1bG91cyBiZWhhdmlvciBieSBvdGhlciBjb3VudHJpZXMsIGFuZCB0aGlzIGJhcnJpZXIgaXMgd2h5IHBlb3BsZSBzZWVtIHRvIHRoaW5rIFRob3IgaXNuIHN1cHBvcnRpdmUganVzdCBiZWNhdXNlIGhlIGlzbiBqdW1waW5nIGluIHRoZSBhaXIgYW5kIGNsYXBwaW5nIHdoaWxlIGNyeWluZyB3aGVuIGEgZmVsbG93IHN0cm9uZ21hbiBjb21wbGV0ZXMgYSBsaWZ0LgpUaGF0IGlzIGtpbmQgb2YgYWxsIHRoYXQgd2FzIGF2YWlsYWJsZSBhdCB0aGUgbW9tZW50LCBJIHdlbnQgdGhyb3VnaCBtdWx0aXBsZSB3ZWJzaXRlcyB0byBjb2xsZWN0IHRob3NlLiAKSG9ja2pvY2sxNzAgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KRXZlcnkgb25jZSBpbiBhIGdyZWF0IHdoaWxlLCB0aGUgc29ydHMgb2YgYXJndW1lbnRzIHRoYXQgbW90aXZhdGUgYWNhZGVtaWMgbGlmZSwgbGlrZSBob3cgd2Uga25vdyB3aGF0IHdlIGtub3csIHdpbGwgc3BpbGwgb3V0IGludG8gdGhlIGV2ZXJ5ZGF5IHdvcmxkIG9mIHBvbGl0aWNzIGFuZCBjdWx0dXJlLiAKT25jZSBteSBzaGVsbCBjcmFja2VkIEkgc3RhcnRlZCBwcmVzZW50aW5nIHJlYWxseSByZWFsbHkgc29vbiBzbyBJIGRpZG4gaGF2ZSB0aGF0IHRvIGNvbnRlbmQgd2l0aC4gSSB0cnkgbmV2ZXIgdG8gYnJpbmcgdXAgdGhhdCBzb21lb25lIGlzIHRyYW5zIEkganVzdCBuaWNlIHRvIHRoZW0uCkZsYW5kZXJzIGFuZCB0aGUgRmxlbWlzaCBzcGVha2luZyBjb21tdW5pdHkgaGF2ZSBtZXJnZWQuIFdhbGxvbmlhIGFuZCB0aGUgRnJlbmNoIHNwZWFraW5nIGNhbiBtZXJnZSBiZWNhdXNlIHRoZXJlIHRoYXQgdGlueSBtaW5vcml0eSBpbiBXYWxsb25pYSB3aG8gc3BlYWtzIEdlcm1hbi4gV2FsbG9uaWEgaXMgdHJhbnNmZXJyaW5nIGEgbG90IG9mIHJlZ2lvbmFsIGNvbXBldGVuY2VzIHRvIHRoZSBHZXJtYW4gc3BlYWtpbmcgY29tbXVuaXR5IHNvIEkgd291bGRuIGJlIHN1cnByaXNlZCBpZiBzb29uIG9yIGxhdGVyLCB0aGV5IGJlY29tZSBhIHJlZ2lvbi4gU28gdGhhdCBtYWtlcyA2IG9yIDcsIGl0IGRlcGVuZHMgb24gaG93IHlvdSBjb3VudCB0aGVtLgpBIGNyb3dkIG9mIDEzLDEwMyB3YXRjaGVkIGFzIHRoZSBSZXZvbHV0aW9uIGVhcm5lZCB0aGVpciBmaXJzdCBwb2ludCBvZiAyMDE0IGFuZCBpbXByb3ZlZCB0byAwIDIgMSBvbiB0aGUgeW91bmcgc2Vhc29uLgpXaXRob3V0IGV4cGVyaWVuY2UgYXQgcGxheWluZyBwb2tlciB5b3Ugd2lsbCBmaW5kIHRoYXQgeW91IGFyZSBub3QgZ29pbmcgdG8gZ2V0IHRvbyBmYXIgaW4geW91ciBwb2tlciBwbGF5aW5nLCB1bmxlc3Mgb2YgY291cnNlIHlvdSBjb25zaXN0ZW50bHkgZ2V0IHNvbWUgb2YgdGhlIGJlc3QgcG9rZXIgaGFuZHMgdG8gcGxheSB3aXRoIS4uIApTbyBhcyBhIG5vbnRoZWlzdCwgSSBzaG91bGQgdGhlbiBiZSBhbGxvd2VkIHRvIG5vdCBtYWtlIHRoaW5ncyBhbmQgc2VsbCB0aGVtIHRvIHJlbGlnaW91cyBwZW9wbGUgY29ycmVjdD8gU2luY2Ugbm9udGhlaXNtIGlzIHRoYXQgdGhlcmUgZ29kIGRvZXNuIG1hdHRlciB0byBtZS4gTm9yIGRvZXMgdGhlaXIgbW9yYWxzIGFuZCB2YWx1ZXMuIFNvIGluIG15IGJpYmxlIGl0IHNheXMgZGlzY3JpbWluYXRlIGFnYWluc3QgdGhvc2Ugd2hvc2Ugb3BpbmlvbnMgYXJlIGRpZmZlcmVudCB0aGVuIG1pbmUuLiAKU2hlIHdhcyB1cHNldCB0aGF0IHNoZSBkaWRuJ3Qga25vdyBKYWNrIHdhcyBkcmlua2luZyAoYW5kIGRyaXZpbmcpIGFnYWluICgiVGhhdCB3b3VsZCBiZSBzb21lIHdheSB0byBsZWF2ZSB1cy4iKSwgYW5kIHRoZW4gZXZlbiBtb3JlIHVwc2V0IHdoZW4gSmFjaydzIHJlc3BvbnNlIHdhcyB0aGF0IHNoZSBoYWRuJ3QgYmVlbiBhcm91bmQuIAonJ1RoZSBjcmVhdGlvbiBvZiBuZXcgcmVzb3VyY2luZyBzdHJlYW1zIGFuZCB0aGUgaW1wbGVtZW50YXRpb24gb2YgdGhlIG5ldyBidXNpbmVzcyBtb2RlbCB3aWxsIGhlbHAgdXMgdGFrZSB0aGlzIHZpYWJsZSBidXNpbmVzcyBpbnRvIHN1cnBsdXMsJycgQ3IgU2FsaWJhIHNhaWQuLiAKSG93IHlvdSBkZWFsIHdpdGggdGhpcyBpcyBpbXBvcnRhbnQuIElmIHlvdSBzYXkgYW55dGhpbmcgeW91IGFyZSBnb2luZyB0byBzb3VuZCBncmVlZHkuIEkgd291bGQgY2hhbGsgaXQgdXAgdG8gYSBsZWFybmluZyBjdXJ2ZSB0aGF0IHlvdSBjYW4ndCBkZXBlbmQgb24gYW55dGhpbmcgdG8gaGVyLiBTaGUgbW9zdCBsaWtlbHkgdGhvdWdodCB5b3Ugd291bGQgc2F5IHNvbWV0aGluZyBhYm91dCB0aGUgMjBrIGFuZCBzaGUgd2FudGVkIHlvdSB0byBsb29rIGxpa2UgYSBnb2xkIGRpZ2dlci4gRG9uJ3QgcGxheSBoZXIgZ2FtZXMuClByZXNjcmliaW5nIGRydWdzIGluYXBwcm9wcmlhdGVseSBvciB3aXRob3V0IGEgbGVnaXRpbWF0ZSByZWFzb24uIApUaGF0IGlzbid0IGVudGlyZWx5IGFjY3VyYXRlLiAKQW5kIGxldCBiZSBob25lc3QsIG1vc3Qgd2hvIHVzZSBBbGxpYW50IGZvciBNTyBhcmUgbW92aW5nIHRob3VzYW5kcyBhIHdlZWsgYW5kIHByb2JhYmx5IG5vdCBtYWludGFpbmluZyBhIGhpZ2ggYmFsYW5jZS4gVGhlcmUganVzdCBub3QgZW5vdWdoIGluY2VudGl2ZSBmb3IgdGhlIENVLiAKU2hlIHdhbnRzIGhpcyBNb3Rpb24gZm9yIENoYW5nZSBvZiBDdXN0b2R5IERpc21pc3NlZC4gQW5kIEkgc3VyZSBhcyBoZWxsIGRvIG5vdCBibGFtZSBoZXIuIEl0IGlzIGV4dHJlbWVseSBoYXJkIHRvIGNoYW5nZSBjdXN0b2R5LiAKVGhpcyBpcyBhIG1ham9yIHBsdXMgaWYgeW91ciBwcm9uZSB0byBtaXNzIHBob25lIGNhbGxzIGZyb20gY293b3JrZXJzLCBmYW1pbHkgbWVtYmVycywgYW5kIGZyaWVuZHMuIFBsdXMsIHNvbWUgdHJhY2tlcnMgY29tZSB3aXRoIHNtYXJ0cGhvbmUgYXBwcywgc28geW91IGNhbiBzdG9yZSBhbGwgeW91ciBkYXRhIGluIG9uZSBjb252ZW5pZW50IHBsYWNlLi4gClRoZXkgcHJvYmFibHkgZGlkbid0IGV2ZW4gbWFrZSB0aGUgY29ubmVjdGlvbiwgdGhleSB3ZXJlIHRvbyBidXN5IHR3ZWV0aW5nIGFib3V0IGd1biBjb250cm9sIGFuZCBtb2NraW5nIHBlb3BsZSBmb3IgdGhlaXIgInRob3VnaHRzIGFuZCBwcmF5ZXJzLiIgQ29tcGxldGVseSBpbnNlbnNpdGl2ZSwgZGVzcGl0ZSBIb2xseXdvb2QncyBjbGFpbXMgdG8gYmUgYWxsIGZvciBzZW5zaXRpdml0eSBhbmQgdG9sZXJhbmNlLi4gCkRla3UgZXZlbiBtYW5hZ2VkIHRvIGxhbmQgc2V2ZXJhbCBPRkEgKG9idmlvdXNseSBub3QgMTAwJSkgcHVuY2hlcyBvbiBUb2Rvcm9raSBhbmQgaGUgd2FzIHN0aWxsIGFibGUgdG8gZ2V0IGJhY2sgdXAuIERla3UgaGFzIG5vdGhpbmcgdGhhdCBoZSBjYW4gdXNlIHRvIGRlZmVuZCBhZ2FpbnN0IGJlaW5nIHdlYmJlZCB1cCBhc2lkZSBmcm9tIGNvbnRpbnVvdXNseSBicmVha2luZyBoaXMgZmluZ2VycyBmb3Igd2luZCBibGFzdHMuIApJdHMgc3lub255bW91cyB3aXRoIEJDIGZvcmVzdHJ5IGFuZCBmaXNoaW5nIGFuZCBJIGhhdmVuIHNlZW4gaXQgYW55d2hlcmUgZWxzZS4gCkMgdW4gYXNwZWN0IHF1aSBuIHBhcyBkZSBtYW5pcmUgY3JpYW50ZSBkYW5zIGxlIFByY2lzIGRlIHBoeXRvdGhyYXBpZSwgYmllbiBxdSBzYSBsZWN0dXJlLCBpbCBlc3QgdmlkZW50IHF1ZSBsZSBkb2N0ZXVyIExlY2xlcmMgdGFpdCB1biBncmFuZCBsZXR0ciwgZGFucyBsZSBzZW5zIGQgYW1vdXJldXggZGUgbGEgbGV0dHJlLCBkZSBsYSBjb25qdWdhaXNvbiwgZGUgbGEgZ3JhbW1haXJlLCBkZSBsYSBzeW50YXhlLCBlbiB1biBtb3QsIGRlIGxhIGxhbmd1ZS4gClRoaW5rIFR3aWxpZ2h0ICBhIGJvb2sgdGhlIHByZW1pc2Ugb2Ygd2hpY2ggc2hvdWxkIGJlIGZhbWlsaWFyOiBhIGNsdW1zeSBhbmQgYXdrd2FyZCBhbmQgb3JkaW5hcnkgeW91bmcgd29tYW4gaXMgdHJhbnNmb3JtZWQgYnkgdGhlIGxvdmUgb2YgYW4gaW5zYW5lbHkgaGFuZHNvbWUgYW5kIHJpY2ggeW91bmcgdmFtcGlyZS4gQWxsIG90aGVyIGNvbmNlcm5zICBzY2hvb2wsIGNhcmVlciwgZmFtaWx5IG9mIG9yaWdpbiwgZnJpZW5kcyAgZGlzYXBwZWFyIGFzIHRoaXMgb25lIHJlbGF0aW9uc2hpcCBtZWV0cyBhbGwgb2YgaGVyIG5lZWRzOiBlbW90aW9uYWwsIGludGVsbGVjdHVhbCwgc3Bpcml0dWFsLCBzZXh1YWwsIGFuZCBmaW5hbmNpYWwuLiAKV2l0aCA0MCwwMDAgZW1wbG95ZWVzIGluIHRoZSBVSywgQnJpdGlzaCBBaXJ3YXlzIGlzIHNldHRpbmcgdGhlIHRvbmUgZm9yIGZhaWxpbmcgY29tcGFuaWVzIHRvIGV4dHJhY3QgZXZlbiBtb3JlIGZyb20gdGhlaXIgZW1wbG95ZWVzIGFzIHRoZSBDRU9zIGNvbnRpbnVlIHRvIGVhcm4gb2JzY2VuZWx5IGhpZ2ggc2FsYXJpZXMuIEJ1dCB0aGVyZSBhIGRpZmZlcmVuY2UgYmV0d2VlbiByZXN0YXVyYW50IHdvcmtlcnMgcHJldGVuZGluZyB0byB3b3JrIGFuZCBhaXJsaW5lIGVtcGxveWVlcyBkb2luZyB0aGUgc2FtZS4gSSBkb24gd2FudCB0byBoYXZlIHRvIGJyaWJlIGEgcGlsb3QgdG8gbGFuZCBzYWZlbHkuIEFsdGhvdWdoIHlvdSBjYW4gaW1hZ2luZSB0aGUgc2NlbmUuIEFzIHRoZSBwbGFuZSBob3ZlcnMgb3ZlciBIZWF0aHJvdywgdGhlIHBpbG90IHNheXMgIkdvb2QgYWZ0ZXJub29uLiBUaGlzIGlzIHlvdXIgcGlsb3QuIFdlIGNhbiBnbyBkb3duIHNtb290aCBvciB3ZSBjYW4gZ28gZG93biBpbiBmbGFtZXMuIEl0IHVwIHRvIHlvdS4gVGhlIGZsaWdodCBhdHRlbmRhbnRzIHdpbGwgYmUgY29sbGVjdGluZyB1bm1hcmtlZCBiaWxscy4iCkluIGFsbCBvdXIgcGF0dGVybnMsIHlvdSBjYW4gZmVlbCB0aGUgaHVtYW4gaGFuZCBpbiB0aGUgb3JnYW5pYyBzaGFwZXMuUS4gQW5kIHdoYXQgY2FuIHlvdSBzaGFyZSBhYm91dCB0aGUgbGF0ZXN0IEx1b250byBDb2xsZWN0aW9uP0EuIFdlIHBhcnRuZXJlZCB3aXRoIFZhbmNvdXZlciBiYXNlZCBQaWxsb3cgRCB0byBkZXNpZ24gb3VyIGZpcnN0IE5vcnRoIEFtZXJpY2FuIHRocm93IHBpbGxvdyBjb2xsZWN0aW9uLiBUaGUgTHVvbnRvIENvbGxlY3Rpb24gbmF0dXJlIGluIEZpbm5pc2ggaXMgaW5zcGlyZWQgYnkgdGhlIHVudGFtZWQgd2lsZGVybmVzcyBhbmQgcGVhY2VmdWxuZXNzIG9mIG5hdHVyZTogdHJlYXN1cmVzIGNvbGxlY3RlZCBvbiBsb25nIGJlYWNoIHdhbGtzLCB0aGUgZm9nIGFmdGVyIHRoZSByYWluLCBzdW1tZXIgbGlnaHQgaW4gdGhlIGZvcmVzdC5XZSBkZXNpZ25lZCBhIGNvbGxlY3Rpb24gb2Ygc2l4IHBpbGxvd3MgaW4gZm91cnMgY29sb3VycyBibHVlLCBzYWdlLCBidXJndW5keSBhbmQgeWVsbG93IHJlYWR5IGZvciB5b3UgdG8gYnVpbGQgeW91ciBvd24gbWl4LiAKTXkgbmFtZSBpcyBDYWl0aCBXcmlnaHQgYW5kIEknbSBhIDIwMCBociBZb2dhIEFsbGlhbmNlIGNlcnRpZmllZCB5b2dhIGluc3RydWN0b3IsIEkgcHJhY3RpY2UgYSBIYXRoYSBWaW55YXNhIGZsb3cgZnJvbSB0aGUgdGVhY2hpbmdzIG9mIEtyaXNobmFtYWNoYXJ5YSAoYXMgd2VsbCBhcyBoYXZpbmcgYSBiYWNrZ3JvdW5kIGluIEl5ZW5nYXIgeW9nYSkuIEkgbGl2ZWQgaW4gSW5kb25lc2lhIGZvciAyIG1vbnRocyB3aGlsZSBzdHVkeWluZyBhbmQgcHJhY3RpY2luZyB5b2dhIGV2ZXJ5ZGF5LiAKU28gaWYgeW91IGZlZWwgbGlrZSBqdXN0IHNpdHRpbmcgaW4gdGhlIHN1biwgbmVhciB0aGUgcml2ZXIsIHJlbGF4aW5nLCBoYXZpbmcgY29ja3RhaWxzIGFuZCB0YWtpbmcgaW4gdGhlIHNreWxpbmUsIHRoYXQgdGhlIHBsYWNlIHRvIGdvLi4gCkxpa2UgdGhlIHB1c2ggaW50byBpbmR1c3RyaWFsIHdlYXIuIFRoZSBiaWdnZXN0IGNoYWxsZW5nZSB3aWxsIGJlIGdyb3d0aDogSG93IG11Y2ggaGUgY2FuIGdyb3cgb24gYm90aCBzaWRlcywgaW5kdXN0cmlhbCBhbmQgcmVjcmVhdGlvbmFsPyBleHBlcnQncyBvcGluaW9uIEpvaG4gQ2hvLCBwYXJ0bmVyLCBLUE1HIEVudGVycHJpc2Ugc2hhcmVzIE1yLiBUcmVsaXZpbmcgY29uY2VybnMgYWJvdXQgdGhlIHNpemUgb2YgdGhlIG1hcmtldCwgcGFydGljdWxhciB3aGVuIGl0IGNvbWVzIHRvIGluZHVzdHJpYWwgd2Vhci4gCjMgZGF5cyBhZ28gKyBCeSBEZWJiaSBTbm9vaywgVGhlIFBsYWluIERlYWxlckJsdWUgSGVyb24gQnJld2VyeSBvcGVucyBvZmZpY2lhbGx5IHdpdGggMSBiZWVyICAgZm9yIG5vdyBCbHVlIEhlcm9uIEJyZXdlcnkgb3BlbnMgb2ZmaWNpYWxseSB3aXRoIDEgYmVlciAgIGZvciBub3cgQmx1ZSBIZXJvbiBCcmV3ZXJ5IGluIE1lZGluYSBDb3VudHkgaXMgb3Blbi4gSXQgb25seSBoYXMgb25lIGJlZXIgb24gdGFwLCBidXQgbW9yZSBhcmUgY29taW5nICAgaG9wZWZ1bGx5IHNvb24sIGl0cyBicmV3ZXIgc2F5cy5MaW5kZXkncyBMYWtlIEhvdXNlIGNvbmNlcHQgbW92aW5nIGludG8gQ29hc3RhbCBUYWNvIGluIENsZXZlbGFuZCdzIEZsYXRzIExpbmRleSdzIExha2UgSG91c2UgY29uY2VwdCBtb3ZpbmcgaW50byBDb2FzdGFsIFRhY28gaW4gQ2xldmVsYW5kJ3MgRmxhdHMgUmljayBEb29keSBpcyBleHBhbmRpbmcgaGlzIExpbmRleSdzIExha2UgSG91c2UgYnJhbmQgdG8gdGhlIHNwYWNlIG9jY3VwaWVkIGJ5IENvYXN0YWwgVGFjbyBpbiBDbGV2ZWxhbmQncyBGbGF0cyBFYXN0IEJhbmsuV2ludGVyIFdhcm1lciBGZXN0IHRpY2tldHMgYWxtb3N0IHNvbGQgb3V0IFdpbnRlciBXYXJtZXIgRmVzdCB0aWNrZXRzIGFsbW9zdCBzb2xkIG91dCBUaWNrZXRzIGZvciB0aGUgYW5udWFsIFdpbnRlciBXYXJtZXIgRmVzdCBhcmUgZ29pbmcgZmFzdC4gVGhlIGJlZXIgZmVzdCBpcyBTYXR1cmRheSwgTWFyY2ggOS5GYXQgQ2F0cyBpbiBUcmVtb250OiBDbGV2ZWxhbmQncyBtb3N0IGNyZWF0aXZlIHJlc3RhdXJhbnQgYWx3YXlzIGltcHJlc3NlcyAocmV2aWV3KSBGYXQgQ2F0cyBpbiBUcmVtb250OiBDbGV2ZWxhbmQncyBtb3N0IGNyZWF0aXZlIHJlc3RhdXJhbnQgYWx3YXlzIGltcHJlc3NlcyAocmV2aWV3KSBUaGVyZSBhcmUgZmV3IG1vcmUgY3JlYXRpdmUsIGludGVyZXN0aW5nLCBpbnNwaXJlZCwgZWNsZWN0aWMgICBhbmQgZGVsaWNpb3VzICAgcmVzdGF1cmFudHMgaW4gdG93bi40IGRheXMgYWdvICsgQnkgTGF1cmEgRGVNYXJjbywgVGhlIFBsYWluIERlYWxlckJlZXIgY2FsZW5kYXI6IEdyZWF0IExha2VzIGhhcyAyIGJhcnJlbCBhZ2VkIHJlbGVhc2VzLCBHcmVlbmhvdXNlIFRhdmVybiBob2xkcyBiZWVyIGRpbm5lciwgbW9yZSBCZWVyIGNhbGVuZGFyOiBHcmVhdCBMYWtlcyBoYXMgMiBiYXJyZWwgYWdlZCByZWxlYXNlcywgR3JlZW5ob3VzZSBUYXZlcm4gaG9sZHMgYmVlciBkaW5uZXIsIG1vcmUgR3JlYXQgTGFrZXMgQnJld2luZyBoYXMgYmFycmVsIGFnZWQgcmVsZWFzZXMgY29taW5nIHVwLCBUaGUgR3JlZW5ob3VzZSBUYXZlcm4gd2lsbCBob2xkIGEgYmVlciBkaW5uZXIgZmVhdHVyaW5nIEphY2tpZSBPJ3MsIGFuZCBtYW55IG90aGVyIGJlZXIgZXZlbnRzLCB0YXN0aW5ncywgZGlzY291bnRzIGFuZCBkaW5uZXJzIGFyZSBzZXQgaW4gTm9ydGhlYXN0IE9oaW8uRWF0IGF0IEpvZSdzOiBOb3J0aGVhc3QgT2hpbydzIGJlc3Qgd2Vla2VuZCBicnVuY2hlcywgYnJlYWtmYXN0cyBFYXQgYXQgSm9lJ3M6IE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCB3ZWVrZW5kIGJydW5jaGVzLCBicmVha2Zhc3RzIE91ciBicnVuY2ggYW5kIGJyZWFrZmFzdCBzZXJpZXMgdGFrZXMgdXMgdG8gRWF0IGF0IEpvZSdzIGluIFNvdXRoIEV1Y2xpZC4gSGVyZSdzIHdoYXQgd2UgZm91bmQuCkRlciBlcnN0ZSBWb3JmYWxsLCBkZXIgbWljaCBiZXJlaXRzIGFtIHZpZXJ0ZW4gVGFnIGF1cyBkZXIgQmFobiBnZXdvcmZlbiBoYXQsIHdhciBkaWUgbm9uY2hhbGFudGUgQW5rIG1laW5lciBDaGVmaW4sIGRpZSBHdW5zdCBkZXMgSGVpbWF0YXVmZW50aGFsdGVzIHp1IG51dHplbiwgdW0gc2ljaCBkaWUgWiByaWNodGVuIHp1IGxhc3Nlbi4gRGllIGRldXRzY2hlbiBaYWhuIHcgamEgc2NobGllIG5pY2h0cyB0YXVnZW4uIFN0YXR0IGlocmUgQXJiZWl0IHp1IG1hY2hlbiwgbGllIHNpZSBzaWNoIGFsc28gZXJzdCBlaW5tYWwgc2VjaHMgWiB6aWVoZW4uIApBbnhpb3VzZ2FtZXJ3aWZlIHUKUHJvbW90aW9uIHRvIFNlcmdlYW50LCBMaWV1dGVuYW50IGFuZCBDYXB0YWluIGluY2x1ZGUgYSBwYXkgcmFpc2UgYW5kIHRoZSBvcHBvcnR1bml0eSB0byBzdXBlcnZpc2Ugb3RoZXJzLi4gCkNhbWUgY2xvc2UsIHlvdSBnb3R0YSBhZG1pdC4gSGFkIGhlIGdvdCB0aGUgNDYwa2cgc3F1YXQgKHdoaWNoIGxldCBiZSBjb21wbGV0ZWx5IGhvbmVzdCBoZXJlLCB3YXMgZGVlcGVyIHRoYW4gYW55IG9mIE1hbGFuaWNoZXYgc3F1YXRzIGluIGNvbXApLCBoZSB3YXMgb25seSAyMGtnIGF3YXkgZnJvbSB0aGUgcmVjb3JkLiAKVGhlIG1hcmtldCBmb3IgZmlzaCBvaWwgc3VwcGxlbWVudHMgZGF0ZXMgYmFjayBtb3JlIHRoYW4gdHdvIGNlbnR1cmllcyB0byB3aGVuIEJyaXRpc2ggZmlzaGVybWVuIHN0YXJ0ZWQgc2VsbGluZyB0aGUgb2lsIG9vemluZyBmcm9tIGNvZCBsaXZlcnMgYXMgYSBtaXJhY2xlIGN1cmUgZm9yIG1hbnkgYWlsbWVudHMuIFRvZGF5LCBmaXNoIG9pbCBpcyBlbmpveWluZyBhIHJlbmFpc3NhbmNlIGZvciBhIHNsZXcgb2YgcHVycG9ydGVkIGhlYWx0aCBiZW5lZml0cywgZnJvbSByZWR1Y2luZyBjaG9sZXN0ZXJvbCBhbmQgbGVzc2VuaW5nIGFzdGhtYSB0byB0cmVhdGluZyBkcnkgc2tpbiBhbmQgc2xvd2luZyBhZ2luZy4gQnV0LCByYXRoZXIgdGhhbiBwb3VyaW5nIGNydWRlIG9pbCBwcm9kdWN0cyBmcm9tIGEgZGVjYW50ZXIsIG1vc3QgcGVvcGxlIG5vd2FkYXlzIHRlbmQgdG8gZ2V0IHRoZWlyIGhlYWx0aCBwcm9tb3Rpbmcgb21lZ2EgM3MgaW4gdGhlIGZvcm0gb2Ygc3F1aXNoeSBnZWwgY2Fwc3VsZXMgY29udGFpbmluZyByZWZpbmVkIGZhdHR5IGFjaWRzLCB3aGljaCBoYXZlIGdyb3duIHRvIGJlY29tZSB0aGUgdGhpcmQgbW9zdCBwb3B1bGFyIGRpZXRhcnkgc3VwcGxlbWVudCBpbiB0aGUgVVMuLiAKKE15IGRhdWdodGVyJ3MgbmFtZSBpcyBTaWFuIGFuZCBldmVyeW9uZSBpbnNpc3RzIG9uIG1pcyBwcm9ub3VuY2luZyBoZXIgbmFtZSBhcyBTZWFuKS4gClRoZSBwYWlyIG9mIEtpbmdzIFF1ZWVucyBsb29rcyBsaWtlIEtLUVFYLiAKSSB0b29rIGEgbm9uIHRyYWRpdGlvbmFsIHJvdXRlIHRvIGJlY29taW5nIGdvb2QgYXMgSSBzdGFydGVkIG91dCBhcyBhIGxpdmUgInJlZyIgYnV0IHdhcyBmaXNoaW5nIGl0IHVwIG9ubGluZSAocmVhZCBTdXBlciBTeXN0ZW0gYW5kIHRob3VnaHQgSSB3YXMgc2V0IGZvciBsaWZlIGx1bHopLiAKRmlyZWZpZ2h0ZXJzIFN1cmdlcnkgU29tZSBOdXJzZXMuIEFydGljbGUgdG8gUmVhZCAoQWJvdXQgQ2VzYXJlYW5zKSBXaGVuIEJlaW5nIGEgTW90aGVyIElzIEhhcmQgV3JpdGluZyBUaGUgTW9vbiBHbG9wcGllcyBJIFdhcyBCbG9nIFNpZGVkIFJveGFubmUgVW5jaXJjdW1jaXNlZCBCYXQgRXllcyBPdXQgb2YgVG93biBCb29naWUgTmlnaHRzIERhcmsgRGF1Z2h0YSBSZXNwb25kcyB0byBGYXQgVGFsayBQYWNrYWdpbmcgTXkgTmFuYSdzIEJvd2wgIkhvdyBXb21lbiBCZWNvbWUgTW90aGVycyIgRmF0IEFuZ3J5IFdvbWFuIE1lIFdoZW4gT2xkIFBvc3RzIEZpbmQgTmV3IExpZmUgVGFraW5nIFRoaW5ncyBQZXJzb25hbGx5IFdoeSBJIEJsb2cgKFRhZ2dlZCkgQSBQaWVjZSBvZiBNeSBPZmZpY2UgRnJvbnQgYW5kIENlbnRlcmluZyBMTEwgTG92ZSBTdG9yeSAyMSBZZWFycyBBZ28gICBBaW1lZSdzIEJpcnRoIFN0b3J5IFJpY2tpIExha2UhISBEcml2aW5nIEZvcmNlIFdoZXJlIGlzIHRoZSBMb2dpYz8gT25lIFRlbmFjaW91cyBCYWJ5IE1hbWEgVFYgVGltZSBNeSBTZWNyZXQgQmlydGhkYXkgSW4gbXkgZW1haWxib3guIApQbGF5IGJlZ2lucyB3aXRoIGVhY2ggcGxheWVyIGJlaW5nIGRlYWx0IG9uZSBjYXJkIGZhY2UgZG93biwgZm9sbG93ZWQgYnkgb25lIGNhcmQgZmFjZSB1cCAoYmVnaW5uaW5nIGFzIHVzdWFsIHdpdGggdGhlIHBsYXllciB0byB0aGUgZGVhbGVyJ3MgbGVmdCkuIElmIHBsYXllZCB3aXRoIGEgYnJpbmcgaW4sIHRoZSBwbGF5ZXIgd2l0aCB0aGUgbG93ZXN0IHJhbmtpbmcgdXBjYXJkIG11c3QgcGF5IHRoZSBicmluZyBpbiwgYW5kIGJldHRpbmcgcHJvY2VlZHMgYWZ0ZXIgdGhhdC4gCk0neSB2b2lsLiBMYSBib3V0aXF1ZSBlc3QgdW4gcGV1IHRyb3AgbHV4dWV1c2UgZXQgbCdhY2N1ZWlsIHVuIHBldSB0cm9wIGd1aW5kIChtYWlzIHNyaWV1eCBldCBhdHRlbnRpb25uKSAgbW9uIGdvdCwgY2UgbmUgc29udCBRVUUgImRlcyBndGVhdXggZXQgZHUgcGFpbiIgISBKZSBjaG9pc2lzIHVuZSB0YXJ0ZSBhdSBjaXRyb24gKCJBYnNvbHUgQ2l0cm9uIikgZXQgdW5lIHRhcnRlICBsJ29yYW5nZSAoIkFic29sdSBPcmFuZ2UiKSBldCwgaGlzdG9pcmUgZGUgZmFpcmUgcGFsYWNlLCB1biBjYWtlIGV0IHVuIHBhaW4gZCdwaWNlcyAoY2UgZGVybmllciBheWFudCB0IGZvcnQgdmFudCBwYXIgQmVjIFN1Y3IgUGFyaWdvdCkuIApJbiBob2NrZXksIHRoZXJlIGFsd2F5cyBtb3JlIHlvdSBjYW4gZG8gdG8gaGVscCB5b3VyIHRlYW0gd2luLi4gCkZvb2Qgc3VwcGxpZXMgYXJlIHN0YXBsZSBvZiBwb2tlciBwYXJ0aWVzLiBEbyBub3QgZm9yZ2V0IHRvIHB1bGwgdGhhdCBwaXp6YSBvdXQgb2YgdGhlIG92ZW4sIGhhdmUgc29tZSBzdWJtYXJpbmUgc2FuZHdpY2hlcyBwcmVwYXJlZCwgZmluZ2VyIGZvb2RzIHdpdGggZGlwcywgYW5kIGNoaXBzLiAKSXQncyB0aGUgc2FtZSB0aGluZyBldmVyeSB0aW1lLCB0aGUgZmxpcnR5IGdyZWV0aW5nIG9mICJIZXksIGJhYnkgYm95LiIgVGhlbiBJIGxpZSBvbiB0aGUgYmVkIGFuZCBpdCdzIGJhY2sgbWFzc2FnZSwgbGVnIG1hc3NhZ2UsIGZsaXAgb3ZlciwgdHVnLCBjbGVhbiB1cCwgb3V0LiBGb3J0eSBkb2xsYXJzIGZvciB0aGUgaG91c2UsIGZvcnR5IGZvciB0aGUgdGlwLiAKTGEgcG91ZHJlIGRlIHBlcmxlIGV0cyB1biByZW1kZSBkZXN0aW4gIGxhIHBlYXUuIEplIG5lIHZvaXMgYXBzIGxlIHJhcHBvcnQgYXZlYyBsZSBtaWxsZXBlcnR1aXMgZXQgbGEgemVuIGF0dGl0dWRlLiBEJ2F1dHJlIHBhcnQsIG9uIG5lIGRvaXQgcGFzIHZlbmRyZSBkdSBtaWxsZXBlcnR1aXMgc2FucyBhdmVydGlyIGxlcyBjb25zb21tYXRldXJzIGQndW4gcmlzcXVlIGRlIHBob3Rvc2Vuc2liaWxpc2F0aW9uLiAKTGlhcnMgdGVuZCB0byB0aHJvdyBpbiBhbGwgdGhlc2UgZGV0YWlscyB0byBtYWtlIGl0IHNlZW0gbGlrZSB0aGV5IHJlbWVtYmVyIGl0IHJlYWxseSB3ZWxsIHNvIHRoZXkgbXVzdCBiZSB0ZWxsaW5nIHRoZSB0cnV0aCB3aGVuIGluIGZhY3QgaXQgZW50aXJlbHkgb3IgcGFydGx5IG1hbnVmYWN0dXJlZC4uIApUaGUgc29jaWFsIGxpZmUgaW4gTGVpZGVuIGZyb20gd2hhdCBJIGV4cGVyaWVuY2VkIG1vc3RseSByZXZvbHZlcyBhcm91bmQgc3R1ZGVudCBhc3NvY2lhdGlvbnMgd2hpY2ggaXMgc29tZXRoaW5nIHRoYXQgeW91IGhhdmUgdG8gZW5qb3kuIFV0cmVjaHQgYW5kIEdyb25pbmdlbiBhcmUgYm90aCBjaXRpZXMgd2l0aCBhIGdyZWF0IG5pZ2h0bGlmZSBhbmQgYSB3aG9sZSBsb3Qgb2YgdGhpbmdzIHRvIGRvIGZvciBzdHVkZW50cy4gSSBzdHVkeSBpbiB0aGUgY2l0eSBvZiBOaWptZWdlbiBhbmQgaGF2ZSBhIGdyZWF0IHRpbWUgdGhlcmUsIGl0IGlzIGEgYml0IHNtYWxsZXIgdGhhbiBVdHJlY2h0IGFuZCBHcm9uaW5nZW4gYnV0IHN0aWxsIHZlcnkgbXVjaCBhIHN0dWRlbnQgY2l0aWVzIHdpdGggbG9hZHMgb2YgdGhpbmdzIHRvIGRvLkkgZG9uIG11Y2ggYWJvdXQgdGhlIHN0dWRlbnQgbGlmZSBpbiBBbXN0ZXJkYW0sIFJvdHRlcmRhbSBhbmQgVGlsYnVyZyBidXQgSSBoZWFyZCBhIGxvdCBvZiBncmVhdCB0aGluZ3MgYWJvdXQgZXZlcnkgY2l0eS5JIG5vdCBzdXJlIGhvdyBtdWNoIHlvdSBsb29rZWQgaW50byB0aGUgc3R1ZGllcyB5ZXQgYnV0IGJlIHN1cmUgdGhhdCB5b3UgY2hlY2sgd2hldGhlciB0aGUgc3R1ZHkgaXMgZ2l2ZW4gaW4gRW5nbGlzaC4gClRoZSBwdWJsaWMgaGVhbHRoIGV4cGVydCBzYWlkIHBva2VyIG1hY2hpbmVzIHdlcmUgYXMgYWRkaWN0aXZlIGFzIGNvY2FpbmUgYW5kIGNvbnRyaWJ1dGVkIHRvIGZhbWlseSBicmVha3VwcywgZG9tZXN0aWMgdmlvbGVuY2UgYW5kIG90aGVyIGhhcm1mdWwgc29jaWFsIGVmZmVjdHMuCldoeSBhbmQgaG93IHRob3NlIHByb2JsZW1zIG9jY3VyLCBhbmQgd2hhdCB0byBkbyBhYm91dCBpdCwgYXJlIHN0aWxsIHZlcnkgbXVjaCBtYXR0ZXJzIG9mIGRlYmF0ZS4gCkdyYW50ZWQsIHdlIGFyZSBnZXR0aW5nIG9sZCBhbmQgYXMgd2UgYWdlLCBzaHVmZmxpbmcgY2FyZHMgZG9lc24ndCByZWFsbHkgd29yayBhcyB3ZWxsIGFzIGl0IHVzZWQgdG8gZWFjaCBtb250aC4gVGhlIG1ham9yaXR5IG9mIHRoZXNlIGd1eXMgaGF2ZSBiZWVuIHdpdGggdXMgZm9yIGNsb3NlIHRvIHRoaXJ0eSBmaXZlIHllYXJzIGluIG9uZSB3YXkgb3IgYW5vdGhlciwgc28gd2UgaGF2ZSBzZWVuIHRoZWlyIHVwcyBhbmQgZG93bnMgdGhyb3VnaCBsaWZlIGFsb25nIHRoZSB3YXkuIEhvd2V2ZXIsIGZvciBvbmUgbmlnaHQgZWFjaCBtb250aCBpdCBzZWVtcyB0aGF0IHRoZWlyIHRyb3VibGVzIGFyZSBjaGVja2VkIGF0IHRoZSBkb29yIGFuZCB0aGV5IGNhbiBlbmpveSBhIG5pZ2h0IG9mIHBsYXlpbmcgcG9rZXIgYW5kIGVuam95aW5nIGVhY2ggb3RoZXIncyBjb21wYW55LgpNeSB3aWZlIChrb3JlYW4pIGZ1bWVzIGF0IGhvdyBoZXIgaW5jb21wZXRlbmNlIG9yIGZhaWx1cmUgaXMgYXQgdGltZXMgcG9ydHJheWVkIGFzIGJlaW5nIHJlbGF0ZWQgdG8gaGVyIGdlbmRlciwgb2Z0ZW4gYXMgYW4gZXhjdXNlIHB1dCBmb3J0aCBieSBoZXIgb3duIHVsdHJhY29uc2VydmF0aXZlIHN1cHBvcnRlcnMuIApBcyBzdWNoLCB0aGUgbW9zdCBjb21tb24gdHlwZXMgb2YgcHJlZ25hbmN5IHRlc3Qgc3RyaXAgdXNlIHJlYWdlbnRzIHRvIGRldGVjdCBpZiB0aGF0IGhvcm1vbmUgZXhpc3QgaW4gdGhlIHdvbWFuIHBlZS4gClBhZGRvY2sgd2FudGVkIHRvIGRpZSBpbiBpbmZhbXksIGluc3BpcmVkIGluIHBhcnQgYnkgaGlzIGZhdGhlciByZXB1dGF0aW9uIGFzIGEgYmFuayByb2JiZXIgd2hvIHdhcyBvbmNlIG9uIHRoZSBGQkkgbW9zdCB3YW50ZWQgbGlzdCwgdGhlIHJlcG9ydCBzYWlkLiBJbiBtYW55IHdheXMsIGhlIHdhcyBzaW1pbGFyIHRvIG90aGVyIGFjdGl2ZSBzaG9vdGVycyB0aGUgRkJJIGhhcyBzdHVkaWVkICAgbW90aXZhdGVkIGJ5IGEgY29tcGxleCBtZXJnaW5nIG9mIGRldmVsb3BtZW50IGlzc3Vlcywgc3RyZXNzIGFuZCBpbnRlcnBlcnNvbmFsIHJlbGF0aW9uc2hpcHMuLiAKSWYgdGhleSd2ZSBsb3N0IHRoYXQgcHJpdmlsZWdlIGJ5IGJlaW5nIGZ1Y2t3YWRzIHRoZW4gdGhhdCdzIGZpbmUsIGJ1dCBpZiBpdCdzIHlvdXIgZ28gdG8gbWV0aG9kIHRvIHByb3RlY3QgeW91cnNlbGYgZnJvbSBwZW9wbGUgcHJvYmluZyB0b28gZmFyIGludG8geW91ciBidXNpbmVzcyAoaW5zdGVhZCBvZiBlaXRoZXIgZGVmbGVjdGluZyBvciBzYXlpbmcgd2hlcmUgeW91ciBib3VuZGFyaWVzIGFyZSBmb3Igc2hhcmluZykuIApJIGhhZCBteSBmaXJzdCBmcmVpZ2h0ZXIgYmVmb3JlIEkgZm91bmQgYSBibGFjayBob2xlLiBJIHRyYXZlcnNlZCB0aGUgYmxhY2sgaG9sZSBhbmQgZW5kZWQgdXAgaW4gYSBzcGFjZSBiYXR0bGUgZm9yIGEgZGlmZmVyZW50IGZyZWlnaHRlci4gSSBib2FyZGVkIHRoZSBmcmVpZ2h0ZXIgYWZ0ZXIgdGhlIGZpZ2h0IChhbmQgaGFpbCBmcm9tIHRoZSBjYXB0YWluKSwgYW5kIHNwb2tlIHRvIHRoZSBjYXB0YWluLCB3aG8gd2FudGVkIHRvIHNlbGwgbWUgdGhlIGZyZWlnaHRlciBmb3IgYW4gYW1vdW50IEkgZGlkbid0IGhhdmUuIEkgYmFja2VkIG91dCBhbmQgY2hvc2UgdGhlICJzYWx1dGUiIG9wdGlvbiwgdG8gd2hpY2ggdGhlIGNhcHRhaW4gc2FpZCBoaXMgZnJlaWdodGVyIGFuZCBjcmV3IHdlcmUgbm93IGF0IG15IGRpc3Bvc2FsLiBIb3dldmVyLCBteSBmcmVpZ2h0ZXIgc2NyZWVuIHN0aWxsIHNob3dlZCBteSBvcmlnaW5hbCBmcmVpZ2h0ZXIgYW5kIG15IG9ubHkgb3B0aW9uIHdoZW4gdGFsa2luZyB0byB0aGUgY2FwdGFpbiB3YXMgInRyYW5zZmVyIGl0ZW1zIGZyb20gc2hpcCB0byBmcmVpZ2h0ZXIiLCB3aGljaCBvbmx5IGJyb3VnaHQgdXAgbXkgb3JpZ2luYWwgZnJlaWdodGVyLgpNYWtlIHRoZSB3b3JkLCBhbmQgaWRlYSBvZiwgaXRzZWxmIHNvbWV0aGluZyB0aGF0IGhhcyBtZWFuaW5nLiAKWW91ciBuZXcgcGFydG5lciBpc24gZ29pbmcgdG8gbGV0IHlvdSBtb3ZlIGluLCBpdCB0b28gc29vbi4gCkdyYW5kTWFzdGVyIDEgaXMgbWVhbndoaWxlIGEgcGllY2Ugb2YgY2FrZSBmb3IgbWUgYW5kIG15IHRlYW0uIEJ1dCB3aGVuIHdlIGdvIG9uIHN0cm9uZ2hvbGRzIHdpdGggR3JhbmRtYXN0ZXIgMiBkaWZmaWN1bHR5IHRoZXJlIGlzIG5vIHdheSB0aGF0IGJpb3dhcmUgY2FuIHRlbGwgbWUgaXRzIGEgZGlmZmVyZW5jZSBmcm9tIDcwMCB0aW1lcyBtb3JlIEhQIGNvbXBhcmVkIHRvIDE1MDAgdGltZXMgbW9yZSBIUC4gSSBjYW4ga2lsbCBhIHllbGxvdyBiYXIgZW5lbXkgUmFuZ2VyIGluIEdyYW5kbWFzdGVyIDEgaW4gbGlrZSA1IHRvIDYgc2Vjb25kcy4gCkluIEFtaXJ1LCB5b3UgYXJlIGlkZW50aWZpZWQgYnkgeW91ciBjbGFuIG5hbWUgZmlyc3QsIHRoZW4geW91ciBnaXZlbiBuYW1lLCB3aGVyZWFzIGluIFZhbmF3bywgeW91IGFyZSBpZGVudGlmaWVkIGJ5IHlvdXIgZ2l2ZW4gbmFtZSwgdGhlbiB5b3VyIHBhdHJvbnltaWMgYW5kIG1hdHJvbnltaWMsIHRoZW4geW91ciBzdXJuYW1lICh3aGljaCwgZm9yIHRoZSBub2JpbGl0eSwgaXMgdGhlIHNhbWUgbmFtZSBhcyB0aGVpciBob3VzZS9jbGFuKS4gU28gYSBub3JtYWwgbmFtZSBpbiBBbWlydSBtaWdodCBiZSBXZXR1bmUgU2VuZ29yYSwgYnV0IHRvIHRyYW5zcG9zZSB0aGF0IHRvIFZhbmF3bywgaXQgd291bGQgYmVjb21lIFNlbmdvcmEgVHJhbGVnaGFrYXV2aXlvIEZ1dHJ1dGxpbmF2aXlvIFdldHVuZS4gT3BhbGl1IFl1amFudml5b3RzZWogVGhvam92aXlvdHNlaiBDYW5kZXNoIHdvdWxkIGJlY29tZSBLYXRlc2hlIE9wYWxpdSwgYWx0aG91Z2ggVmFuYXdvIGN1bHR1cmFsIGRvbWluYW5jZSBtaWdodCBoYXZlIGl0IHJlbmRlcmVkIGFzIE9wYWxpdSBZdWthd2l5b3Rla2kgVG9rb3dpa2l0ZWtpIEthdGVzaGUuLiAKRGljayBsb3ZlZCBzaGlwcyB3aGljaCB3YXMgYSBwYXNzaW9uIHRoYXQgY2FtZSBmcm9tIGhpcyBzdW1tZXJzIGFzIGEgeW91bmcgTWFyaW5lciBvbiB0aGUgU1MgT3NsZXIgc2FpbGluZyB0aGUgR3JlYXQgTGFrZXMuIApBcyBmYXIgYXMgZGVjaWRpbmcgaWYgYmV0IGJpZyBvciB4L3IgaXMgYmV0dGVyIGl0cyBvcHBvbmVudCBkZXBlbmRhbnQuIFBlcnNvbmFsbHkgYXQgYWxsIGxldmVscywgZXZlbiBhdCBIU05MIG9ubGluZSBJIGZpbmQgdmlsbGFpbnMgdG8gd2F5IG92ZXJzdGFiIHdoZW4geW91IGNoZWNrIHRvIHRoZW0uIFNvIEkgd291bGQgcHJlZmVyIHgvci4gSWYgaGUgZG9lcyBub3Qgc3RhYiBlbm91Z2ggdGhlbiBsZWFuIHRvIGJldC4KRGlzY3VzcyBIZWFsdGggYWltcyB0byBnaXZlIHlvdSBzaW1wbGUgdG8gdW5kZXJzdGFuZCBpbmZvcm1hdGlvbiBvbiBoZWFsdGguIApCcml0YWluIGxpdGVyYWxseSBzd2luZyB0aGVpciBCYWxhbmNlIG9mIHRyYWRlIGZyb20gbmVnYXRpdmUgdG8gcG9zaXRpdmUgdXNpbmcgT3BpdW0sIGluIGNvbnRyYXN0LCB0aGUgdmFsdWUgb2YgdGhlIERydWcgVHJhZGUgaXMgaW5jb25zZXF1ZW50aWFsIHRvIHRoZSBHb3Zlcm5tZW50LgpJdCBiZWVuIGZpdmUgeWVhcnMgc2luY2UgcmV0aXJlZXMgZ2FpbmVkIHRoZSBmbGV4aWJpbGl0eSBvZiBjaG9vc2luZyB0byBkZWZlciByZWNlaXB0IG9mIE9sZCBBZ2UgU2VjdXJpdHkgKE9BUykgYmVuZWZpdHMgZnJvbSBhZ2UgNjUgdG8gYXMgbGF0ZSBhcyA3MC4gVGhpcyBtaXJyb3JzIHRoZSBvcHRpb24gdG8gZGVmZXIgQ2FuYWRhIFBlbnNpb24gUGxhbiAoQ1BQKSBiZW5lZml0cywgYWx0aG91Z2ggdGhlIGlzIG9ubHkgMzYgcGVyIGNlbnQgZm9yIE9BUywgdmVyc3VzIDQyIHBlciBjZW50IGZvciBDUFAuCkFjY29yZGluZyB0byBKZXJlbXkgU2NhaGlsbCwgdGhlIGZpbG0gIlJldGhpbmsgQWZnaGFuaXN0YW4iIG1ha2VzIGNsZWFyIHRoYXQgdGhlIG90aGVyIGp1c3RpZmljYXRpb25zIGZvciB0aGUgd2FyIGFyZSBlcXVhbGx5IGZhbHNlLiAKRmluYWxseSwgb3VyIE1USXMgY29tZSBkb3duIGFuZCB0aGV5IG5vdGljZSB0aGUgc3RlbmNoLiAKSSB3YW50IGNhcmRzIHNvIHRoYXQgd2hlbiBzb21lb25lIGFza3MgbWUgZm9yIG15IGVtYWlsIGFkZHJlc3MsIEkgZG9uJ3QgaGF2ZSB0byBzdG9wIGFuZCB3cml0ZSBpdCBkb3duLCBJIGNhbiBqdXN0IGdpdmUgdGhlbSB0aGUgY2FyZC4gCiA5IHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ29JIGFtIHZlcnkgc29ycnkgeW91IGhhZCB0aGF0IGV4cGVyaWVuY2UuIFRoYXQgd2FzIGRlZmluaXRlbHkgbm90IGFwcHJvcHJpYXRlIGNvbnRhY3QgZm9yIHRoZSBNVCBhdCBhbGwgYW5kIEkgaG9wZSB5b3Ugd2lsbCBjb25zaWRlciByZXBvcnRpbmcgaGltLiBJIGRvbiBrbm93IGhvdyBJIHdvdWxkIGhhdmUgcmVhY3RlZCBpbiB5b3VyIHNpdHVhdGlvbiEgVGhhdCB3b3VsZCBoYXZlIGJlZW4gdmVyeSBhbnhpZXR5IHByb3Zva2luZyBmb3IgbWUgYXMgd2VsbC4gCkFmdGVyIGhhdmluZyBhIGdsYXNzIG9mIHdhcm0gbWlsayBhbmQgZG9pbmcgYWJvdXQgdHdlbnR5IG1pbnV0ZXMgb2Ygc3RyZXRjaGVzIGJlZm9yZSBnb2luZyB0byBiZWQsIEkgdXN1YWxseSBoYXZlIG5vIHByb2JsZW1zIHNsZWVwaW5nIHVudGlsIG1vcm5pbmcuIApIb3cgZm9vbGlzaCBjYW4geW91IHJlYWxseSBiZSB0byBiZWxpZXZlIHlvdSBoYXZlIHNvbWUgb2JqZWN0aXZlIG92ZXJ2aWV3IG9mIG91ciBqb2luZWQgaGlzdG9yeT8gQW5kIEkgZG9uIGNhcmUgdGhhdCB5b3UgaGFsZiBJcmlzaCwgc28gYXJlIGhhbGYgdGhlIERvbmFsZCBsb3ZpbmcgY2xvd25zIHRoYXQgdmlzaXQgaGVyZSBjbGFpbWluZyB0byBiZSBtb3JlIElyaXNoIHRoYW4gd2UgYXJlLiAKIldoYXQncyB5b3VyIHByb2JsZW0sIGZhdHR5PyIgSSBzYWlkIHRvIG9uZS4gCkJ1dCBiZSBwcmVwYXJlZCwgaXQgcHJvYmFibHkgYmUgdW5jb21mb3J0YWJsZSB0byBjb25mcm9udCBzb21lb25lIGluIHRoaXMgd2F5LCBidXQgaXQgaW1wb3J0YW50IHRvIGFkdm9jYXRlIGZvciB5b3Vyc2VsZiEgSXQgbWF5IHB1dCB0ZW5zaW9uIG9uIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiB5b3UgYW5kIHlvdXIgdGhlcmFwaXN0IGJ1dCBkZXBlbmRpbmcgb24gdGhlIG91dGNvbWUgeW91IGNhbiBkZWNpZGUgdG8gZWl0aGVyIHdvcmsgdGhyb3VnaCBpdCB0b2dldGhlciBvciBtb3ZlIG9uLCBhbmQgYm90aCBvcHRpb25zIGFyZSBqdXN0IGZpbmUgOikgSSBob3BlIHRoaXMgd2FzIGF0IGxlYXN0IGEgbGl0dGxlIGJpdCBoZWxwZnVsIS4gCk5hdGlvbmFsIEFjYWRlbXkgb2YgU2NpZW5jZXMsIDEwOTogNTk0IDU5OSwgMjAxMkRlcGFydG1lbnRzIG9mIGFHZW5vbWUgU2NpZW5jZXMgYW5kIENvbXB1dGVyIFNjaWVuY2UgYW5kIEVuZ2luZWVyaW5nLCBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sIFNlYXR0bGUsIFdBIDk4MTk1O0ZBUyBDZW50ZXIgZm9yIFN5c3RlbXMgQmlvbG9neSwgSGFydmFyZCBVbml2ZXJzaXR5LCBDYW1icmlkZ2UsIE1BIDAyMTM4OyBhbmQgU2FudGEgRmUgSW5zdGl0dXRlLCBTYW50YSBGZSwgTk0gODc1MDEgRWRpdGVkIGJ5IEplZmZyZXkgSS4gR29yZG9uLCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lIGluIFN0LiBMb3VpcywgU3QuIExvdWlzLCBNTywgYW5kIGFwcHJvdmVkIE5vdmVtYmVyIDE1LCAyMDExIChyZWNlaXZlZCBmb3IgcmV2aWV3IE9jdG9iZXIgMywgMjAxMSkKRm9yIG1lLCBpdCB3YXMgd29ydGggaXQsIGJ1dCB5b3UgaGF2ZSB0byBtYWtlIHRoYXQgYXNzZXNzbWVudCBvbiB5b3VyIG93bi4gClRoZSBTZW5hdGUgQ29tbWl0dGVlIG9uIFN0dWRlbnQgRGlzY2lwbGluZSBoYXMgdGhlIHJpZ2h0IHRvIHdpdGhob2xkIHByaXZpbGVnZXMgb2YgdGhlIGFjYWRlbWljIGNvbW11bml0eSwgaW5jbHVkaW5nIHRoZSBjb25mZXJyYWwgb2YgdGhlIGRlZ3JlZSBpdHNlbGYsIGF0IGFueSBwb2ludCBwcmlvciB0byB0aGUgY29uZmVycmFsIG9mIHRoZSBkZWdyZWUuIApXZSBnb25lIHNldmVyYWwgdGltZXMgZHVyaW5nIHRoZSBzb2Z0IG9wZW5pbmcgaW4gZWFybHkgRGVjZW1iZXIuIFRoZSBmb29kIGlzIGdyZWF0LCB0aGUgc3RhZmYgYXJlIGZyaWVuZGx5LCB0aGUgc3BhY2UgaXMgb3BlbiBhbmQgY2xlYW4uIFRoZSBvbmx5IGdyaXBlIHdlIGhhdmUgaXMgdGhhdCBvdmVyIHNldmVyYWwgdmlzaXRzIHdlIG5ldmVyIHNhdyBhbiBpbXByb3ZlbWVudCBpbiBzcGVlZCBvZiBzZXJ2aWNlLiBJIHRvdGFsbHkgdW5kZXJzdGFuZCBvcGVuaW5nIGtpbmtzLCBidXQgb25lIGV4cGVjdHMgdGhlbSB0byBiZSB3b3JrZWQgb3V0IG92ZXIgdGhlIGNvdXJzZSBvZiBhIG1vbnRoLiBFYWNoIHRpbWUgd2UgdGhlcmUgKHdpdGggb25lIGV4Y2VwdGlvbiB3aGVuIHdlIHdlcmUgdGhlIG9ubHkgY3VzdG9tZXJzKSB0aGUgc2VydmljZSBpcyB2ZXJ5IHNsb3cgd2l0aCBsb25nIHNwZWxscyBvZiBlbXB0eSBiZWVyIGdsYXNzZXMuIEFsc28sIHRocmVlIHdlZWtzIGluLCB0aGV5IHdlcmUgc3RpbGwgcGFzc2luZyBhcm91bmQgYSBzaW5nbGUgcGllY2Ugb2YgcGFwZXIgd2l0aCB0aGUgYmVlciBsaXN0IG9yIGxldHRpbmcgeW91IHJlYWQgdGhlaXIgbGlzdCB3cml0dGVuIG9uIHRoZSBiYWNrIG9mIHRoZWlyIG9yZGVyIHBhZHMuIEkga2VwdCBoZWFyaW5nIHRoZSByZWFzb24gd2FzIHRoYXQgdGhlaXIgcHJpbnRlciB3YXMgYnJva2VuLiBTZWVtcyBsaWtlIGEgcXVpY2sgdHJpcCB0byBGZWRFeCBPZmZpY2UsIFN0YXBsZXMgb3IgVVBTIFN0b3JlIHRvIG1ha2Ugc29tZSBjb3BpZXMgd291bGQgaGF2ZSBiZWVuIGFuIGVhc3kgYW5kIHF1aWNrIGZpeC4KSG93ZXZlciwgaXQgbWF5IGJlIHBvc3NpYmxlIHRvIGlkZW50aWZ5IGEgQ2VsdGljIGluZmx1ZW5jZSBvbiBPbGQgRW5nbGlzaCBzb3VuZCBzeXN0ZW0gdGhyb3VnaCBhbiBhbmFseXNpcyBvZiBPbGQgSXJpc2gsIG9mIGFsbCBsYW5ndWFnZXMuIApJcyB0aGVyZSBhbnkgdGlwcyBmb3IgZG9pbmcgc2lyZT8gb3Igc2hvdWxkIEkganVzdCBnZXQgbXkgZGVmIGxldmVsIHVwIGF0IE5NWj8uIApUaGlzIGlzIG15IGxhc3QgYmxvZyBmb3IgVHJ1ZS9TbGFudC4gbG9va3MgbGlrZSBJIGJlIGJsb2dnaW5nIGVsc2V3aGVyZSBjb21lIFNlcHRlbWJlciAgYnV0IHNpbmNlIG5vIGNvbnRyYWN0cyBhcmUgc2lnbmVkLCBJIGNhbiByZWFsbHkgdGVsbCB5b3Ugd2hlcmUgKGhpbnQ6IGl0IHJoeW1lcyB3aXRoIE1vcmJlcykuIHRoZSBtZWFudGltZSwgdGhlIExBU1QgY29sdW1uIGdpdmVzIG1lIGEgY2hhbmNlIHRvIGRvIHNvbWV0aGluZyB0aGF0IGJsb2dnaW5nIHJhcmVseSBhbGxvd3MgbWUgdG8gZG86IHJlZmxlY3QuIHVwb24gcmVmbGVjdGlvbiwgdGhpcyBpcyB3aGF0IEkgbGVhcm5lZCBmcm9tIG15IHRpbWUgYXQgVHJ1ZS9TbGFudC4KRXZlcnkgc3BlY2sgb2YgbGlnaHQsIGV2ZXJ5IGRvdCBvZiBjb2xvdXIsIGlzIGEgZGlmZmVyZW50IGdhbGF4eS4gCnZlcnMgbGEgZmluIGRlcyBtYXV2YWlzIGNvbXBvcnRlbWVudHMKSXQgZ29pbmcgdG8gYmUgc28gZGlmZmVyZW50LiAKSidhaSB0IHN1cnByaXMgZGUgY2UgcGFzc2FnZTogZCd1bmUgcGFydCwgaWwgbid5IGEgcGFzIGR0b3VybmVtZW50IGRlIG1pbmV1cnMsIGwnaW5mcmFjdGlvbiBhIHQgYWJyb2dlIGlsIHkgYSBkaiBwbHVzIGRlIDEwIGFuczsgZCdhdXRyZSBwYXJ0LCBvbiBlbnJlZ2lzdHJlIHVuZSBtYWluIGNvdXJhbnRlIGNvbnRyZSBsZSBnYXJvbiB2aWN0aW1lIGRlIG1lbmFjZXMgZmFpdGVzIGF2ZWMgdW4gY291dGVhdS4gSmUgY29tcHJlbmRzIGxhIHNpdHVhdGlvbiBkZSBsYSBtYW1hbiwgbWFpcyBsZ2FsZW1lbnQgbGEgc2l0dWF0aW9uIGRldnJhaXQgYXBwYXJhdHJlIHVuIHBldSBkaWZmcmVtbWVudC4gClNob3VsZCBtZW4gYmUgYWxsb3dlZCBpbiBXb21lbgpSZWFkaW5nIHRob3NlIGJsb2dzIG1ha2UgbWUgZmVlbCB3b3JzZSBiZWNhdXNlIE1ZIFNPTiBXT05UIERPIFRIQVQuIApDJ2VzdCBsIHVuZSBpbml0aWF0aXZlIGp1c3RpZmllIHF1YW50ICBsJ29iamVjdGlmIG1haXMgcXVpIHBvc2UgcGFzIG1hbCBkZSBwcm9ibG1lcyBkYW5zIHNhIG1pc2UgZW4gcGxhY2UuLiAKVGhpcyBiZWluZyB0aGUgY2FzZSwgSSBuZWVkIHBlb3BsZSB3aG8gYXJlIHJlYWwuIEkgbmVlZCBwZW9wbGUgd2hvIGp1c3QgbWFrZSBhIGJhZCBjaG9pY2UgYW5kIEkgbmVlZCB0aGF0IG9uZSBpbiBhIG1pbGxpb24gYmFkIGd1eSEuIApIZXJlIGFuIGFycmVzdGluZyBpbWFnZTogdGhlIGFycm93cyBvZiB0cmFuc3BvcnRhdGlvbiBpbnRlcmVzdHMgZGlyZWN0aW5nIHRoZW1zZWx2ZXMgaW53YXJkLCBpbmxhbmQsIHRvIHRoZSBHcmVhdCBMYWtlcywgY2EuIDE5MjMuIE1hcCBpcyBhIGJpdCBvZiBhZHZlcnRpc2VtZW50IGEgImNvbnZpbmNlciIgdG8gc2VuZCBtb3JlIGVjb25vbWljIHRyYWZmaWMgdGhyb3VnaCB0aGUgR3JlYXQgTGFrZXMgYW5kIG9mIGNvdXJzZSB0aGUgR3JlYXQgTGFrZXMgU3QuIApLZXZpbiBoYXMgaGlnaCBob3BlcywgdGhhdCBldmVuIHRob3VnaCBoZSB3YXMgdW5hYmxlIHRvIG1ha2UgaXQgdG8gdGhlIGZpbmFsZSwgdGhhdCBoZSBiZSByZW1lbWJlcmVkIGFzIHRoZSBjdW5uaW5nIHBsYXllciB3aG8gZmVsbCB2aWN0aW0gdG8gYW4gdW5wcmVjZWRlbnRlZCB0d2lzdC4gV2FudCBDYW5hZGEgdG8gcmVtZW1iZXIgbWUgYXMgYSBndXkgdGhhdCBnYXZlIGV2ZXJ5dGhpbmcuIEkgbGVmdCBteSBoZWFydCBhbmQgc291bCBpbiB0aGF0IGhvdXNlIGFuZCB0aGF0IHdoeSBJIGZlZWwgc28gZGVmbGF0ZWQgdG9kYXkuIApUaGUgZmlyc3Qgc3RlcCB0byBoYW5kbGluZyB0aGUgcmVjZWlwdHMgYXNzb2NpYXRlZCB3aXRoIHRoZSBzYWxlcyBvZiB5b3VyIENsYXkgUG9rZXIgQ2hpcHMgU2V0cyBpcyB0byBjcmVhdGUgYW4gYXJlYSB3aGVyZSB5b3UgY2FuIG9yZ2FuaXplIGFuZCBzdG9yZSB0aGVtLiAKUmVtb3ZlIGFsbCBpZGVudGlmeWluZyBpbmZvLCBpbmNsdWRpbmcgeW91ciBvd24uIENlbnNvciBBTEwgZXZlbiB5b3VyIG93biBwcm9maWxlIHBpY3R1cmVzIGFuZCB1c2VybmFtZXMsIGV2ZW4gaWYgdGhlIGNyZWVwIHVzZXIgcGhvdG8gaXNuIG9mIHRoZW1zZWx2ZXMsIG9yIHRoZXkgZG9uIHVzZSB0aGVpciByZWFsIG5hbWUuIFRoYXQgaW5jbHVkZXMgbGlua3MgYXMgd2VsbC4gV2hlbiBpbiBkb3VidCwgYmxvY2sgaXQgb3V0LgpZb3Ugd2lsbCBkZWZpbml0ZWx5IG5vdGljZSBwbGVudHkgb2Ygb3V0Y29tZXMgb24gdGhlIGZpcnN0IHdlYnBhZ2Ugb2YgR29vZ2xlIG9yIG90aGVyIHdlYnNpdGUuIApUaGUgc3Ryb25nZXN0IGJsb2NrIHRoYXQgY2FuIG9jY3VyIGlzIHRoZSA0MDMgRm9yYmlkZGVuLCB3aGljaCBJIGhhdmUgbm8gaWRlYSB0byBnZXQgYXJvdW5kLiBBbGwgSSBrbm93IGlzIHRoYXQgdGhlIGhvbGRlciBvZiB0aGF0IGFkZHJlc3MgbXVzdCBnaXZlIHNwZWNpZmljIHBlcm1pc3Npb24gdG8gdGhlIElTUC4gQXMgb3RoZXJzIGhhdmUgbWVudGlvbmVkLCBvbmUgY2FuIHVzdWFsbHkgZW50ZXIgaW4gaHR0cHM6Ly8gaW5zdGVhZCBvZiBodHRwOi8vIHRvIGdhaW4gYWNjZXNzLCBidXQgaXQgb25seSB3b3JrcyBvbiBzcGVjaWZpYyB3ZWJzaXRlcyBhbmQgc29tZXRpbWVzIHRoZSBnb3Zlcm5tZW50IGNhbiBvdmVycmlkZSBpdC4uIApBdWd1c3p0LCBDYWtlIFNob3AsIGFuZCBSdXN6d3VybSBhcmUgZmFidWxvdXMgYnV0IGZ1cnRoZXIgYXdheTsgSSBsaWtlIENlbnRyYWwgS2F2ZWhheiBhcyB3ZWxsIGJ1dCBzb21lIHRoaW5rIGl0IHRvbyB0b3VyaXN0eS4gU2FtZSBmb3IgR2VybG9jenkuIEkgc3RheSBhd2F5IGZyb20gR2VyYmVhdWQgYW5kIExvdHogKGluIHRoZSBBbGV4YW5kcmEgYm9va3Nob3Agb24gQW5kcmFzc3kpICAgYm90aCBhcmUgb3ZlcnByaWNlZCBhbmQgZmFpcmx5IGJhZCBwYXN0cnkuIFRoZW4gYWdhaW4sIGl0IHBvc3NpYmxlIHRoYXQgeW91IGhhdmUgdG8gcGljayBoZXIgdXAsIGNsZWFyIGN1c3RvbXMgaW4gSG9uZyBLb25nIGFuZCByZSBjaGVjayBoZXIsIHNvIHlvdSBjb3VsZCB0YWtlIGhlciBvdXRzaWRlIHRoZW4gKHlvdSBoYXZlIHRvIGFzayB0aGUgYWlybGluZSkuIFB1dCBkb3duIHBlZSBwYWRzIGluIGhlciBjcmF0ZSBhbmQgdGhpcyB3aWxsIHNvYWsgdXAgYW55IHBlZSBidXQgdGhlIGtleSB0aGluZyBpcyB0byBwdWxsIGhlciB3YXRlciAxMiBob3VycyBiZWZvcmUgaGVyIGZsaWdodC4KQXMgc29tZW9uZSBlbHNlIHNhaWQsIGp1bXBpbmcgd2l0aCBhcm1zIGJ5IHlvdXIgc2lkZSBpcyB1bm5hdHVyYWwgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29LaW1wZW1iZSBtYWtlcyBoaW1zZWxmIGJpZ2dlciBzdXJlLCBidXQgaGlzIGFybXMgYXJlIGluIGEgbmF0dXJhbCBwb3NpdGlvbiBhbmQgb2J2aW91c2x5IGl0IHVuaW50ZW50aW9uYWwuIGFzIHNvbWVvbmUgZWxzZSBzYWlkLCBqdW1waW5nIHdpdGggYXJtcyBieSB5b3VyIHNpZGUgaXMgdW5uYXR1cmFsSSBhZ3JlZSB3aXRoIHRoaXMuIApJIGdvdCBhIGZpdmUgc2V0dGVyLiAKOCApIFBhaW4gaW50ZW5zaXR5IHdhcyBtZWFzdXJlZCB3aXRoIHZpc3VhbCBhbmFsb2cgc2NhbGUgKFZBUykuCkknZCByYXRoZXIgMyBiZXQgd2l0aCBhIGhhbmQgbGlrZSBBSnMgb3IgQVFzLiBZb3UgYmxvY2sgdmFsdWUgaGFuZHMgYW5kIHRoZXJlJ3MgbW9yZSBwbGF5YWJpbGl0eSBwb3N0IGZsb3AuCklmIHlvdXIgcG9zdCBkb2VzIG5vdCBzaG93IHVwLCBwbGVhc2UgbWVzc2FnZSB0aGUgbW9kcy4gSW5zaWRlIHRoZSB0aGlyZCByaW5nLiBJIGNvbWUgaW4gd2l0aCBhIENoaW5lc2UgZmVtYWxlIGZyaWVuZCBzbyB3ZSBjYW4gZ2V0IGEgbWFzc2FnZSB0b2dldGhlci4gVGhpbmtpbmcgSSBzYWZlLgpUaGUgYmVzdCB0aGluZyB0aGUgcGxheWVyIGNhbiBkbyBpcyB0byBmaW5kIGEgZnJlZSBnYW1lIHBsYXkgd2Vic2l0ZSBhbmQgc2l0IHRoZXJlIHdpdGggdGhlIHJ1bGVzIG9mIHRoZSBnYW1lIGhlIG9yIHNoZSBpcyBsZWFybmluZyBhbmQgb3RoZXIgaW5mb3JtYXRpb24gYW5kIHByYWN0aWNlIG1vZGUgZnJlZSBwbGF5IGZvciBwbGF5ZXJzIHRvIGdldCBjb25maWRlbmNlIGJlZm9yZSBwbGF5aW5nIGNhc2lubyBnYW1lcyB3aXRoIHJlYWwgY2FzaCBtb25leS4gCkVhY2ggY2FyZCBoYXMgb25lIG9mIGZvdXIgc3VpdHM6IGNsdWJzLCBkaWFtb25kcywgaGVhcnRzIG9yIHNwYWRlcy4gCldlbm4gbWFuIHZvbiBlaW5lbSBQcmVpcyB2b24gMSwzMDkvbCBhdXNnZWh0LCBrb21tdCBtYW4gYXVmIGVpbmVuIFByZWlzIHZvbiAxMjUsNjYuLiAKVU5JVCBJViBGT1VSSUVSIFRSQU5TRk9STSA5ICsgMyBGb3VyaWVyIGludGVncmFsIHRoZW9yZW0gKHdpdGhvdXQgcHJvb2YpICAgRm91cmllciB0cmFuc2Zvcm0gcGFpciAgIFNpbmUgYW5kIENvc2luZSB0cmFuc2Zvcm1zICAgUHJvcGVydGllcyAgIFRyYW5zZm9ybXMgb2Ygc2ltcGxlIGZ1bmN0aW9ucyAgIENvbnZvbHV0aW9uIHRoZW9yZW0gICBQYXJzZXZhbCdzIGlkZW50aXR5LiBVTklUIFYgWiAgVFJBTlNGT1JNIEFORCBESUZGRVJFTkNFIEVRVUFUSU9OUyA5ICsgMyBaIHRyYW5zZm9ybSAgIEVsZW1lbnRhcnkgcHJvcGVydGllcyAgIEludmVyc2UgWiAgIHRyYW5zZm9ybSAgIENvbnZvbHV0aW9uIHRoZW9yZW0gIEZvcm1hdGlvbiBvZiBkaWZmZXJlbmNlIGVxdWF0aW9ucyAgIFNvbHV0aW9uIG9mIGRpZmZlcmVuY2UgZXF1YXRpb25zIHVzaW5nIFogICB0cmFuc2Zvcm0uIApJZiBoZSBsb3N0IHRoZSBiZXQsIE1jQ2FpbiByaXNrZWQgMSkgYmVpbmcgaWRlbnRpZmllZCB3aXRoIGEgbWFzc2l2ZSB1bnBvcHVsYXIgZmVkZXJhbCBzcGVuZGluZyBwcm9ncmFtLCAyKSBiZWluZyBzZWVuIGFzIHBvbGl0aWNhbCBzaG93IGJvYXRlciB3aG8gaW5zZXJ0ZWQgcG9saXRpY3MgaW50byBhbiBvdGhlcndpc2Ugb3JkZXJseSBwcm9jZXNzIGFuZCAzKSBhIGNhbmRpZGF0ZSB3aG8gd291bGQgcmF0aGVyIG5vdCBkZWJhdGUgQmFyYWNrIE9iYW1hLiAKVGhlIHBhY3Qgd2lsbCByZXF1aXJlIERlbGF3YXJlIGFuZCBOZXZhZGEgY3VzdG9tZXJzIG9mIHRoZSB0d28gY29tcGFuaWVzIHRvIGRvd25sb2FkIG5ldyBzb2Z0d2FyZSBhbmQgY3JlYXRlIGEgbmV3IGFjY291bnQgdG8gYmUgYWJsZSB0byBwYXJ0aWNpcGF0ZS4gRXhpc3RpbmcgRGVsYXdhcmUgYW5kIE5ldmFkYSBwb2tlciBzb2Z0d2FyZSBmcm9tIHRoZSBjb21wYW5pZXMgd2lsbCBjZWFzZSB0byBvcGVyYXRlIGFmdGVyIHRoaXMgcHJvY2VzcyB0YWtlcyBlZmZlY3QuIE5ldyBKZXJzZXkgcGxheWVycyB3aXRoIGFuIGV4aXN0aW5nIGFjY291bnQgd2lsbCBub3QgYmUgYWZmZWN0ZWQuLiAKR28gYXQgNEFNIHdoZW4gc3RyYWdnbGVycyBjb21lIHRocnUgZnJvbSBicm9rZW4gaG9tZSBnYW1lcyB3aG8gc3RpbGwgd2FubmEga2VlcCB0aGUgcGFydHkgYWluJ3Qgb3ZlciBncmluZC4gClNoZSB0dXJuZWQgaGVyIGNvbW11bmljYXRpb25zIGJhY2sgb24uICJNYXJraW5ncyBvbiBhIHdhbGwsIGxpa2UgdGhleSBiZWVuIGNoaXBwZWQgYXdheSBieSB0b29scywiIHNoZSBzYWlkLiAiV2UgZ29pbmcgdG8gaW52ZXN0aWdhdGUsIiBzaGUgc2FpZCwgYW5kIHN3aXRjaGVkIGl0IGJhY2sgb2ZmLgpJIGp1c3Qgc2F5aW5nIGlmIHlvdSB3YW50IHlvdXIgYmVzdCBjaGFuY2UgdG8gTk9UIGxvc2UgeW91ciBiYW5rcm9sbCAodGhlIG1vbmV5IHlvdSBwbGF5IHBva2VyIHdpdGgpLCB5b3UgaGF2ZSB0byBmb2xsb3cgdGhvc2UgZ3VpZGVsaW5lcy4gVG8gc29tZSBwZW9wbGUsIGxvc2luZyBhbGwgdGhlaXIgcG9rZXIgbW9uZXkgaXMgbm8gYmlnIGRlYWwgYW5kIHRoZXkganVzdCByZWxvYWQgd2l0aCB0aGUgbmV4dCBwYXljaGVjay4gCk9uIHBlb3BsZSdzIHRlZXRoLi4gCldoYXQgYWxsIG9mIHlvdSBhcmUgZmFpbGluZyB0byB1bmRlcnN0YW5kIGlzIHRoYXQgY29uc2VydmF0aXZlcyBiZWxpZXZlIHRoYXQgdGhlIFVTIGhhcyBmaW5pdGUgcmVzb3VyY2VzIHRoYXQgYXJlIGJlaW5nIGNvbnN1bWVkIGJ5IGltbWlncmFudHMsIG11Y2ggbGlrZSBteSBpbnN1bGluIGV4YW1wbGUuIApUaGUgY291cnRzIGhhdmUgdGFrZW4gYSBob2xpc3RpYyBhcHByb2FjaCwgYXNzZXNzaW5nIG5vbiBkaXNjbG9zdXJlIGluIHRoZSBjb250ZXh0IG9mIHRoZSByZWxhdGlvbnNoaXAsIHNheWluZyB0aGF0IHRoZSB1bmRpc2Nsb3NlZCBhc3NldCBvciBkZWJ0IG5vdCBiZSBjb25zaWRlcmVkIGluIGlzb2xhdGlvbiBvZiBhbGwgb2YgdGhlIHN1cnJvdW5kaW5nIGNpcmN1bXN0YW5jZXMuIE5lZ290aWF0ZWQgc2V0dGxlbWVudHMgYXJlIHRob3VnaHQgdG8gYmUgdGhlIHByZWZlcnJlZCB3YXkgdG8gcmVzb2x2ZSBmYW1pbHkgbGF3IGlzc3VlcyBhcyB0aGVzZSBzZXR0bGVtZW50cyBhdm9pZCBsaXRpZ2F0aW9uLiBJbiBUdXJrLCB0aGlzIGRpZCBub3QgdHVybiBvdXQgdG8gYmUgdGhlIGNhc2UuLiAKV2UgZG9uIGhhdmUgdG8gdW5kZXJzdGFuZCB0aGUgZnVsbCByYW1pZmljYXRpb25zIG9mIGluc2VydGluZyBmb3JlaWduIEROQS4gV2UganVzdCBuZWVkIHRvIGtub3cgZW5vdWdoIHRvIHNheSBpdCByZWFzb25hYmx5IHNhZmUgZm9yIGh1bWFuIGNvbnN1bXB0aW9uLgpUaGVyZSBhcmUgc29tZSBsaXR0bGUgdGhpbmdzIEkgcXVpYmJsZSB3aXRoIGhlcmUgb3IgdGhlcmUsIGJ1dCBtb3N0IHRoaW5ncyBhcmVuIHdvcnRoIG1lbnRpb25pbmcuIApTZXJpb3VzbHkgdGhlIG1vc3QgYnJva2VuIHBpZWNlIG9mIHNoaXQgY2hhcmFjdGVyIFNtaXRlIGhhcyBoYWQgaW4gYSB3aGlsZS4gQW5kIHRoZSBtb3N0IGZydXN0cmF0aW5nIHRoaW5nIGlzIHRoZXkga2VlcCBuZXJmaW5nIGhlciBwYXNzaXZlIHdoZW4gaXQgaGVyIGZ1Y2tpbmcgcmlkb2N1bG91cyBiYXNlIGRhbWFnZSBudW1iZXJzIHRoYXQgbmVlZCB0byBiZSBuZXJmZWQuIEhlciBBb0Uga25vY2t1cCBkb2VzIGFzIG11Y2ggZGFtYWdlIGFzIFRob3IgU3BpbjJ3aW4gYnV0IGluc3RhbnRseSBpbnN0ZWFkIG9mIG92ZXIgMnMuClNvIHllcywgaGUgaXMgYmFkIGJ1dCBJIHRoaW5rIHdhcyBhbHNvIGluIG92ZXIgaGlzIGhlYWQgZm9yIG11Y2ggb2YgaGlzIGNhcmVlci4gSSBndWVzcyB3ZSBraW5kIG9mIGFyZ3Vpbmcgc2VtYW50aWNzIGF0IHRoaXMgcG9pbnQsIGJ1dCBJIGRvIHVuZGVyc3RhbmQgd2hlcmUgeW91IGNvbWluZyBmcm9tLi4gCkkgaGFkIHRvIGxvb2sgdGhpcyB1cCwgc28gYUkgcmVwcm9kdWNlIHRoZSBpbmZvIGZyb20gdGhlIEFtZXJpY2FuIEtlbm5lbCBDbHViOiAiTG9uZywgbG93LCBhbmQgbGV2ZWwsIHRoaXMgdW5pcXVlIGVhcnRoZG9nIGlzIGFtb25nIHRoZSBBS0MncyBtb3N0IGRpc3RpbmN0aXZlIGxvb2tpbmcgYnJlZWRzLiAKQW55d2hvLCBJIGRpZG4gbG9nIG9uIHRvIHRoYXQgQkJTIGFueW1vcmUuIEl0IHdhcyBiYWNrIHRvIGRyaXZpbmcgYXJvdW5kIHRvd24gd2l0aCBtZXRhbCBibGFyaW5nLCBhaW1sZXNzbHkgZ29pbmcgcGxhY2VzLiBJdCB3YXMgZ3JlYXQuClBvdCBvZGRzIGJvaWwgZG93biB0byBwZXJjZW50YWdlcy4gClRpdGxlZCBTcGFjZSBhbmQgU3BhY2UgVHJhdmVsLCBWb2x1bWUgMSwgdGhpcyBleHF1aXNpdGUgY29mZmVlIHRhYmxlIHRvbWUgZmVhdHVyZXMgZm9ydHkgdHdvIEVudHJpZXMgb24gc3BhY2UsIHNwYWNlIHRyYXZlbCwgdWZvcywgZXRjLCBieSBhIHZhcmlldHkgb2YgUmVzZWFyY2hlcnMsIHRha2VuIGZyb20gdGhlIEVkaXRlZCBHdWlkZS4gSXQncyBwcm9mdXNlbHkgaWxsdXN0cmF0ZWQuIApHaXZlbiBjb21jYXN0IGlzIGFsc28gc3RpbGwgYSBtYWpvciBwbGF5ZXIgdGhlcmUgaXMgc3RpbGwgZWZmZWN0aXZlIGNvbXBldGl0aW9uIGluIGEgbGVnYWwgc2Vuc2UuIEFsc28gaGF2aW5nIGEgZG9taW5hbnQgcG9zaXRpb24gaXMgbm90IGlsbGVnYWwuIApPbmUgbG92ZWx5IHByZSBNb250Z29sZmllciBleGFtcGxlIG9mIGZhbnRhc3RpY2FsIHRoaW5raW5nIHdhcyBMb3VpcyBHdWlsbGF1bWUgZGUgbGEgRm9saWUgKDE3MzMgMTc4MCkgTGEgUGhpbG9zb3BoZSBzYW5zIFByZXRlbnNpb24sIG91IGwgcmFyZS4sIHB1Ymxpc2hlZCBpbiBQYXJpcyBpbiAxNzc1LiAKSG91c2luZyBpcyBleHBlY3RlZCB0byBiZSBhIHByb21pbmVudCBjYW1wYWlnbiBpc3N1ZSBhaGVhZCBvZiBPY3RvYmVyJ3MgZmVkZXJhbCBlbGVjdGlvbiAgIGFuZCBtYWpvciBwYXJ0aWVzIGhhdmUgYWxyZWFkeSBiZWd1biB0byBwb3NpdGlvbiB0aGVtc2VsdmVzLgpGdW5ueSBlbm91Z2gsIHRoaXMgYWN0dWFsbHkgd2FzIGEgcHJvYmxlbSB3aXRoIGEgY2hpbGRyZW5zIHRveSBhYm91dCBhIGRlY2FkZSBhZ28uIFBvbGx5IFBvY2tldHMgd2VyZSB0aGVzZSB0aW55IGRyZXNzIHVwIGRvbGxzIHRoYXQgb3JpZ2luYWxseSBjYW1lIHdpdGggcnViYmVyIGNsb3RoaW5nLiBBdCBzb21lIHBvaW50IHRoZXkgY2FtZSBvdXQgd2l0aCBhIGxpbmUgb2YgbWFnbmV0aWMgUG9sbHkgUG9ja2V0cyB3aGVyZSB0aGUgY2xvdGhlcyB3b3VsZCBpbnN0YW50bHkgc25hcCBpbiBwbGFjZSBvbiB0aGUgZG9sbC4gVW5mb3J0dW5hdGVseSwgdGhleSB1c2VkIHRpbnkgbWFnbmV0cyggYWJvdXQgMyBtbSBpbiBkaWFtZXRlcikgdGhhdCB3ZSBnbHVlZCBwb29ybHkgb250byB0aGUgY2xvdGhpbmcsIHJlc3VsdGluZyBpbiBhIGxvdCBvZiBzbWFsbCBjaGlsZHJlbiBhY2NpZGVudGFsbHkgZWF0aW5nIHRoZSBtYWduZXRzIHRoYXQgY2FtZSBsb29zZS4gSWYgeW91IGVhdCBvbmUgbWFnbmV0LCBzdXJlLCBqdXN0IHdhaXQgZm9yIGl0IHRvIHBhc3MuIEJ1dCBpZiB5b3UgZWF0IG1vcmUgdGhhbiBvbmUsIHRoZW4geW91IGhhdmUgYSBwYWlyIHRoYXQgY2FuIHNuYXAgdG9nZXRoZXIgYW5kIHBpbmNoL3RlYXIgeW91ciBpbnRlc3RpbmVzLgpUaGUgQWNjZXNzaWJsZSBGaWxtbWFraW5nIFByb2plY3QsIGRlbGl2ZXJlZCBpbiBjb2xsYWJvcmF0aW9uIHdpdGggS2F0ZSBEYW5nZXJmaWVsZCBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFJvZWhhbXB0b24sIHNhdyB0ZW4gd2Vla2x5IHdvcmtzaG9wcyB0YWtlIHBsYWNlIGFjcm9zcyB0aGUgY291bnRyeSwgZWFjaCBmb2N1c2luZyBvbiBleHBsb3JhdGlvbiBhbmQgZXhwZXJpbWVudGF0aW9uIG9mIGZpbG0gYXMgYSBmb3JtIG9mIGNvbW11bmljYXRpb24gYW5kIGV4cHJlc3Npb24uIApCZXR0ZXIgdG8gcHV0IGl0IGluIGEgc3BlY2lhbCBhY2NvdW50IGFuZCBoYXZlIGF1dG8gcGF5bWVudHMgc2VudCBvciBldmVuIGJldHRlciB0byBwdXQgaXQgaW4gYSB5ZWFyIHdvcnRoIGF0IGEgdGltZSBpbiB0aGF0IGFjY291bnQgYW5kIGtlZXAgdGhlIG90aGVyIHllYXJzIG1vbmV5IGluIHlvdXIgc2F2aW5ncyAob3IgcHV0IGl0IGludG8gYm9uZHMsIENEcyBvciB3aGF0ZXZlcikgd2hlcmUgaXQgd2lsbCBhdCBsZWFzdCBlYXJuIHlvdSBzb21lIGludGVyZXN0LgpOb3cgbGV0cyB3cmFwIGl0IHVwLiBNYXNzIGJvbWJpbmdzLCBidXJnbGFyaWVzLCByYXBlcywgbXVyZGVycywgZGVhdGggdG9sbCBpbiB0aGUgbWlsbGlvbnMsIG1haW1lZCBhbmQgaW5qdXJlZCBpbiB0aGUgdGVucyBvZiBtaWxsaW9ucywgcHN5Y2hvbG9naWNhbGx5IGRhbWFnZWQgaW4gdGhlIGh1bmRyZWRzIG9mIG1pbGxpb25zLCBwcm9wZXJ0eSBsb3NzZXMgYW5kIGRhbWFnZXMgaW4gdGhlIHRyaWxsaW9ucywgdGhlIGxvc3NlcyBvZiBza2lsbGVkIHRyYWRlc21lbiBhbmQgZXhwZXJpZW5jZWQgcHJvZmVzc2lvbmFscyBhbmQgZmFtaWxpZXMgYXJlIGluY2FsY3VsYWJsZS4gCk15IG9sZGVyIGJyb3RoZXIgZ290IG1lIGludG8gdGhlIGdhbWUuIApUaGUgb25saW5lIHBsYXllcnMgY2FuIGJlY29tZSBjaGVhdGVkIHdoaWxlIHBsYXlpbmcgb25saW5lLCB0aGVyZSBpcyBhIHN5c3RlbSBkZXZlbG9wZWQgdG8gbW9uaXRvciB0aGUgY2hlYXRpbmcgZ29pbmcgb24gaW4gb25saW5lIGdhbWVzLiBFdmVuIHRob3VnaCBpdCBpcyBwYXJ0aWFsbHkgc3VjY2Vzc2Z1bC4gQW5vdGhlciBmYWN0b3IgaXMgdGhhdCBwbGF5ZXJzIHdpbGwgdGVhbSB1cCBpbiB0d28gb3IgbW9yZSB1bml0cyB0byBnZXQgYSBwYXJ0aWN1bGFyIHdpbm5pbmcgc3RyZWFrLiBUaGV5IGV4Y2hhbmdlIGluZm9ybWF0aW9uIHRocm91Z2ggdm9pY2UgY2FsbHMgb3Igb3RoZXIgbWVhbnMuIFRoZSBpbmRpdmlkdWFsIHdpbGwgaGF2ZSBubyBpZGVhIHRoYXQgaGUgd2FzIGdldHRpbmcgY2hlYXRlZC4KVGhlIEFsbWEgQXRhIGRlY2xhcmF0aW9uIG9mIDE5Nzggd2FzIGEgcGl2b3RhbCBtb21lbnQgaW4gcHVibGljIGhlYWx0aCwgc3RhdGluZyBwcmltYXJ5IGhlYWx0aGNhcmUgd291bGQgYmUgZXNzZW50aWFsIHRvIG9idGFpbmluZyB0aGUgZ29hbCBvZiAiSGVhbHRoIGZvciBBbGwiIGJ5IHRoZSB5ZWFyIDIwMDAuIApJIHVzdWFsbHkgaGF2ZSBzYWlkICJUaGlzIGlzIGl0IiB0byBwcmVjZWRlIHNvbWUgb2YgdGhlIG1vcmUgaW1wb3J0YW50IHJlbGVhc2VzIGluIGhlYXZ5IG1ldGFsIGhpc3RvcnkgYW5kIHRoaXMgaXMgaXQgaWYgd2UgYXJlIHRha2luZyBhYm91dCB3aGVuIGV4dHJlbWUgbWV0YWwgcmVhbGx5IHN0YXJ0ZWQgdG8gZ2V0IGdvaW5nLiAKVGllIHNhIGltIHBvY2hvdmEgaXAgdiByem55Y2ggaGJrYWNoLiAKQmVsaWV2ZSBldmVyeW9uZSBsZWZ0IHRoYXQgbWVldGluZyBmZWVsaW5nIGxpa2UgdGhlcmUgd2VyZSBuZXh0IHN0ZXBzIHRvIGJlIHRha2VuLiBUaGUgdmVyeSBzcGVjaWZpYyBuZXh0IHN0ZXAgaXMsIGFmdGVyIHdlIGhhZCB0YWxrZWQgYWJvdXQgdGhlIDQwLDAwMCBmb290IGlzc3VlcyB0b2RheSwgdG8gcmVjZWl2ZSBsYXRlciB0aGlzIHdlZWsgYSBkcmFmdCBjb21wYWN0IG9uZSBmb3IgdXMgdG8gYWRqdXN0IGFuZCBtYWtlIGEgcmVzcG9uc2UgdG8sIEdhbHZhbm8sIHdobyBpcyBzbGF0ZWQgdG8gdGFrZSBvdmVyIGFzIFNlbmF0ZSBwcmVzaWRlbnQgYWZ0ZXIgdGhlIE5vdmVtYmVyIGVsZWN0aW9ucywgc2FpZCBpbiBhbiBpbnRlcnZpZXcgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIG1lZXRpbmcuClRoaXMgaXMgc2ltcGx5IGJlY2F1c2UgdGhlIHJ1bGVzIGFyZSBhcyBzdWNoLiAKUmFzIGRlIHBycywgY29pZmYgaW1wZWNhYmxlbWVudCwgbGUgY29zdGFyZCBkZXV4IHBpY2VzIGRlIG1pc2UuIApVbmZvcnR1bmF0ZWx5LCB0aGVyZSBubyB0aW1lIHRhYmxlIGFuZCBpdCBjb3VsZCBiZSBhd2hpbGUgYXMgdGhlc2UgaW52ZXN0aWdhdGlvbnMgYXJlIGNvdmVyaW5nIGEgbG90IG9mIGluZm9ybWF0aW9uLCBhbmQgYXMgd2l0aCBldmVyeXRoaW5nIHJlbGF0ZWQgdG8gdGhlIGdvdmVybm1lbnQsIGl0IGdvaW5nIHRvIHRha2UgYSBsb25nIHRpbWUuLiAKQW5kIEkgaGFkIG1vbWVudHMgd2hlcmUgSSBsaWtlIHBsZWFzZSBnZXQgaGltIGF3YXkgZnJvbSBtZSwgSSBjYW4gdGFrZSBhbnkgbW9yZSBzaHJpZWtpbmcgZGlyZWN0bHkgaW4gbXkgZWFyISA+OiggSSBjYW4gaW1hZ2luZSBob3cgdG91Z2ggaXQgaXMgd2hlbiB5b3UgZ290IHRvIGJlIG9uIHlvdXIgb3duIHRvbyB3aGlsZSB5b3UgaGF2ZSBvcHBvc2l0ZSBzY2hlZHVsZXM7IGluIHRoZSBlYXJsaWVyIHdlZWtzIGFuZCBtb250aHMgc29tZXRpbWVzIG9ubHkgbW9tIG9yIHRoZSBib29iIHdpbGwgZG8uIFNUT1AuIEVBU1kuIApXZSBjb3VsZCBhbHdheXMgdXNlIG1vcmUgdHJhc2ggYmlucyBidXQgSSBob25lc3RseSBkbyBub3QgdGhpbmsgdGhhdCB0aGUgcmVhc29uIHNvIG1hbnkgcGVvcGxlIGxpdHRlci4gClRoZW4gY2FtZSBMYXJyeSBTdW1tZXJzIGFuZCB0aGUgVEFSUCBiYWlsb3V0cyBhbmQgdGhlIGluY3JlYXNlIG9mIHRyb29wcyBpbiBib3RoIElyYXEgYW5kIEFmZ2hhbmlzdGFuIGFuZCBzbyBtYW55IGJldHJheWFscyB0aGF0IGJ5IG5vdywgbXkgaGVhcnQgaXMgbGlrZSBzdG9uZSBhbmQgdGhlcmUgaXMgbm90aGluZyBsZWZ0IGZvciB0aGUgT2JhbWEgaXRlcyB0byBkbyB0aGF0IHdpbGwgaHVydCBtZU9yIHNvIEkgc2F5LiBhbnkgYnJva2VuIGhlYXJ0ZWQgbG92ZXIsIGNvbnRpbnVvdXNseSByZWplY3RlZCBhbmQgdGhlbiBjb3VydGVkIGFuZCB0aGVuIHJlamVjdGVkIGFnYWluLCBJIGhhcmJvciBhIHNtYWxsIHBpZWNlIG9mIGhvcGUuIApHcGF0IE5pcGVyIERpLCBwaGFybWFjaXN0LiBNQ1EgYm9va3MgZm9yIEdQQVQgLiAyMjoyNiwgS2F1c2hhbCBCaGF0dC4gClRoZSBzeW1wdG9tcyBvZnRlbiBjcmVhdGUgYSB2aWNpb3VzIGNpcmNsZSwgb3Igc2VsZiBmdWxmaWxsaW5nIHByb3BoZXN5LiBBIG1vdGhlciBmZWVscyBzaGUgaXMgaW5jYXBhYmxlIG9mIGxvb2tpbmcgYWZ0ZXIgaGVyIGJhYnksIGFuZCBwYW5pY3Mgd2hlbiBsZWZ0IGFsb25lIHdpdGggaGltLiBIZXIgZmFtaWx5IGFuZCBmcmllbmRzLCBtZWFuaW5nIHRvIGhlbHAsIHRha2UgY2hhcmdlIG9mIHRoZSBiYWJ5LCBoZWxwaW5nIGRyZXNzLCBjaGFuZ2UgYW5kIGZlZWQgaGltLiBUaGV5IG1ha2Ugc3VyZSBuZXZlciB0byBsZWF2ZSBoZXIgYWxvbmUgd2l0aCBoaW0uIEluIGZhY3QgdGhleSBhcmUgZW5mb3JjaW5nIGhlciBiZWxpZWYgdGhhdCBzaGUgaXMgaW5jYXBhYmxlIG9mIG1hbmFnaW5nIGFsb25lLiBBcyBtZW50aW9uZWQgYWJvdmUgaXQgaXMgb2Z0ZW4gZGlmZmljdWx0IHRvIHRlbGwgYW55b25lIGhvdyB5b3UgYXJlIGZlZWxpbmcsIGJ1dCBpdCBtYXkgYmUgaW1wb3NzaWJsZSB0byBtYWtlIGEgcXVpY2sgcmVjb3ZlcnkgaWYgeW91IGRvIG5vdC4gTWFueSB3b21lbiB0ZWxsIHRoZWlyIHBhcnRuZXIgZmlyc3QsIGFuZCB0aGVuIHRoZWlyIGRvY3RvciBvciBoZWFsdGggcHJvZmVzc2lvbmFsLgpZb3UgdGF1Z2h0IG1lIHRvIGxlYWQgYnkgZXhhbXBsZSwgbm90IGJ5IHdvcmRzLgpXaW5mcmV5LCBvZiBjb3Vyc2UsIGhhcyBiZWVuIHRoZSBtYWluIGZhY2Ugb2YgdGhlIGJyYW5kIGZvciB5ZWFycy4gU2hlIGludmVzdGVkIGluIHRoZSBjb21wYW55IHRoZW4ga25vd24gYXMgV2VpZ2h0IFdhdGNoZXJzIGFuZCBqb2luZWQgaXRzIGJvYXJkIGluIE9jdG9iZXIgMjAxNSwgYW5kIGhlbHBlZCBkcml2ZSBnYWlucyBpbiBtZW1iZXJzaGlwIGFuZCByZXZlbnVlLiBIb3dldmVyLCB0aGUgYnJhbmQncyBiaWcgbWFya2V0aW5nIHB1c2ggaW4gRGVjZW1iZXIgYW5kIGludG8gdGhlIGJlZ2lubmluZyBvZiAyMDE5IHNoaWZ0ZWQgc29tZSBvZiB0aGUgZm9jdXMgYXdheSBmcm9tIHRoZSBtZWRpYSBtb2d1bCBhbmQgb250byBhY3RyZXNzIEthdGUgSHVkc29uIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBzaW5nZXIgUm9iYmllIFdpbGxpYW1zIGluIEV1cm9wZSBhbmQgb3RoZXIgbWFya2V0cywgd2hpbGUgYWxzbyBzaG93Y2FzaW5nIHVua25vd24gbWVtYmVycywgaW5jbHVkaW5nIGluIGFkcyB2b2ljZWQgYnkgV2luZnJleS4gVGhlIGNhbXBhaWduIHdhcyBieSBBbm9tYWx5LCB3aGljaCBzdGFydGVkIHdvcmtpbmcgZm9yIFdXIGxhc3QgeWVhci4KQW5nbGUgc2hvb3RpbmcgZG9lc24gcmVhbGx5IGJvdGhlciBtZSB0aGF0IG11Y2ggYmVjYXVzZSBJIGRvbiByZWFsbHkgZmFsbCBmb3IgYW55IG9mIHRoZSB0eXBpY2FsIHRyaWNrcy4gU2xvdyByb2xsaW5nIGlzIGp1c3QgYSBkaWNrIG1vdmUsIGJ1dCBJIGRvbiBsZXQgaXQgYm90aGVyIG1lIHdoZW4gaXQgaGFwcGVucy4gSSBkaWQgYWNjaWRlbnRhbGx5IHNsb3cgcm9sbCBzb21lb25lIGEgZmV3IHdlZWtzIGFnbyBpbiB0aGUgQXJpYSBhdCB0aGUgJDIvJDUgZ2FtZSB0aG91Z2ggYW5kIGl0IHdhcyBhbiBob25lc3QgbWlzdGFrZS4gV2FzIHBsYXlpbmcgNjloIG9uIHRoZSBidXR0b24gd2l0aCB2aWxsYWluIFVURysxIGhlYWRzIHVwLCBmbG9wIHdhcyA3aEtkNWguIEJldCwgY2FsbC4gVHVybiA1YywgYmV0LCBjYWxsLiBTd2VldCwgSSBoaXQgbXkgZmx1c2gsIGJ1dCBJIHdhcyBsb29raW5nIGF0IHRoZSBmbG9wIHRoaW5raW5nICJmdWNrLCBoZSBnb3QgYSBib2F0IG9yIGFuIEEgaGlnaCBmbHVzaC4gSSBmdWNrZWQiLiBJIHRob3VnaHQgYWJvdXQgaXQgZm9yIGFib3V0IHR3byBtaW51dGVzLCB0aGVuIHRoYXQgZmVlbGluZyBvZiBzaGVlciBzaG9jay9zdXJwcmlzZS9zdHVwaWRpdHkvam95IHJvbGxlZCBkb3duIG15IHNwaW5lIHdoZW4gSSByZWFsaXplZCAiaG9seSBzaGl0LCBJIGhhdmUgYSBzdHJhaWdodCBmbHVzaC4gY2FsbC4iIEhlIHRob3VnaHQgSSB3YXMgc2xvdyByb2xsaW5nLCBidXQgSSB3YXNuIHdlYXJpbmcgbXkgZ2xhc3NlcyBzaXR0aW5nIGluIHNlYXQgOCB1bmRlciBhIHRhYmxlIHdpdGggcHJldHR5IGJyaWdodCBsaWdodHMgYW5kIGhvbmVzdGx5IGRpZG4gcmVhbGl6ZSBJIGhhZCB0aGUgc3RyYWlnaHQgZmx1c2ggYW5kIHdhcyBhYm91dCA1IG1vcmUgc2Vjb25kcyBmcm9tIGZvbGRpbmcuIEhlIHNob3dlZCBBS2gsIGdvdCBtYWQgYW5kIHN0b3JtZWQgb3V0LiBTb3JyeSBkdWRlLgpUaGVyZSB3YXMgYWxvdCBvZiBzbW9raW5nIGJ1dCBJIGd1ZXNzIHRoYXQgaXMgbm9ybWFsIGZvciBhIGNhc2luby4gVGhlIHN0YWZmIHdhcyB2ZXJ5IG5pY2UgYW5kIGhlbHBmdWwuIE5vbmUgb2YgdXMgd29uLiAKV2Ugd2FudCB5b3UgdG8gdXNlIHRoaXMgYW50aG9sb2d5IGFzIGEgY29tcGFuaW9uIGZvciB0aG9zZSB0aW1lcyB3aGVuIHlvdSBoYXZlIGEgaGFsZiBob3VyIHRvIGZpbGwgYW5kIGRvbid0IHdhbnQgdG8gbXVjayBhYm91dCB3aXRoIHRoZSBpbnRlcm5ldC4gCkNoYW5nZSBpbiB0aGUgc2Vhc29uIG9yIGEgZ2VvZ3JhcGhpY2FsIHNoaWZ0IG1lYW5zIHRoYXQgeW91IG5lZWQgdG8gY2hhbmdlIHlvdXIgc2hhbXBvbyBhbmQgY29uZGl0aW9uZXJzLiAKSW4gY29tbW9uIHdpdGggbW9zdCB3ZWJzaXRlcyB3ZSBhdXRvbWF0aWNhbGx5IGxvZyBjZXJ0YWluIGluZm9ybWF0aW9uIGFib3V0IGV2ZXJ5IHZpc2l0IHRvIHRoZSBzaXRlLiBUaGlzIGluY2x1ZGVzIHlvdXIgSVAgYWRkcmVzczEgYW5kIGluZm9ybWF0aW9uIHJlbGF0aW5nIHRvIHlvdXIgcmVxdWVzdHMgZnJvbSBvdXIgc2VydmVycywgZm9yIGV4YW1wbGUgZGF0ZSBhbmQgdGltZSwgcmVmZXJyZXIsIHVzZXIgYWdlbnQgKGJyb3dzZXIpLCByZXF1ZXN0IHR5cGUgYW5kIGRldGFpbHMgb2YgcmVxdWVzdCBzaXplLiAKSSB3YXNuIHN1cGVyIGhhcHB5IHRoYXQgSSBib3VnaHQgdG9wIHNoZWxmIHdpdGggYSBidW5jaCBvZiBzZWVkcyBpbiBpdCBidXQgaXQgY291bGQgaGF2ZSBiZWVuIGFuIGFub21hbHkgYXMgdGhlIHJlc3Qgb2YgdGhlIGJ1ZHMgd2VyZSBmcmVlIGFuZCB0aGUgZmxvd2VyIGxvb2tlZCBhbmQgdGFzdGVkIG5pY2UuIApGaXJzdCBvbiBoZXIgc2NoZWR1bGUgb24gVHVlc2RheSB3YXMgYSA3YW0gam9nIHRvIGtlZXAgaGVyIHN2ZWx0ZSBmaWd1cmUgaW4gdGlwIHRvcCBzaGFwZSBmb3IgdGhlIGJpZyBkYXksIHJlcG9ydHMgdGhlIERhaWx5IE1haWwuCkhlIHNhaWQgdGhhdCB0aGUgY29sZCB0ZW1wZXJhdHVyZXMgZXhwZWN0ZWQgb3Zlcm5pZ2h0IHdvdWxkIGxpa2VseSBhZmZlY3QgdGhlIG1vcm5pbmcgY29tbXV0ZS4KR0VPUkdFICBCaWtlcnMgQWdhaW5zdCBDaGlsZCBBYnVzZSBhcmUgaG9zdGluZyBhIEtlZXBlcnMgb2YgdGhlIENoaWxkcmVuIEJpa2UgUmFsbHkgYXQgdGhlIFZpcmdpbiBSaXZlciBDYXNpbm8gcGFya2luZyBsb3QgaW4gTWVzcXVpdGUsIE5ldmFkYS4gClNvIGhvdyBkaWQgdGhpcyBkYXkgdW5mb2xkICAgcGVyZmVjdGx5ISBXZSBzdGF5ZWQgYXQgYSBDaHJpc3RpYW4gZmVsbG93c2hpcCBjYW1wIGxhc3QgbmlnaHQgICBNb3VudCBIZXJtb24gICBJbWFnaW5lIGEgcGxhY2Ugd2l0aCBubyB0didzLCBpbnRlcm5ldCBpbiB0d28gYnVpbGRpbmdzIGFuZCBhbGwgb2YgdGhlIHBybyB0ZWFtcyBkZXNjZW5kaW5nIHVwb24gdGhpcyBjYW1wIGZvciBvbmUgbmlnaHQuIApIb21lIEZvb2xlcj8gVGhhdCBzZWVtcyB0b28gbWlsZC5XaGF0IGFib3V0IFRpbmtlckhlbGw/IFRpbmtlckZlbG9uP0lzIGN1cnNpbmcgYWxsb3dlZD8gV2hhdCBhYm91dCBNb3RoZXJmdWNrZXI/VGhhbmtzIGZvciBzaGFyaW5nIHlvdXIgc3RvcnkgYW5kIHlvdXIgdHJ1dGggd2l0aCB1cy5Zb3Ugbm90IHNwZWNpYWwuIApIZSBzbWVsbHMgbGlrZSBhIGJhYnkgYW5kIHdoZW4gcGVvcGxlIHRha2UgY2FyZSBvZiB0aGVpciBiYWJpZXMgdGhleSBkbyBub3Qgc21lbGwuIEhlIHdhcyBmdW4gdG8gc251Z2dsZSBhbmQgc3VwZXIgY3V0ZSB3aGVuIGhlIHNsZXB0IG9uIG1lIGFuZCBmdW4gdG8gbGlzdGVuIHRvIHdoZW4gaGUgdHJpZWQgdG8gdGFsay4gQmFieSdzIGFyZSBmdW4gYW5kIHJlYWxseSBzd2VldCBidXQgeW91IGp1c3QgdGhpbmsgYWJvdXQgdGhlIG5ld2Jvcm4gbmV3Ym9ybnMuIApCb3N0b24gUG9wcyBDb25jZXJ0IE1vdmUgS2VlcHMgdGhlIEJlYWNoIEJveXMKTXkgbWFpbiBjb25jZXJuLCBhcGFydCBmcm9tIGFjY2xpbWF0aXNpbmcsIHdvdWxkIGJlIGdldHRpbmcgYW55IGRlY2VudCBsb25nIHJpZGVzIGluIGlmIGl0IHdhcyBsaWtlIGxhc3Qgd2ludGVyOyBoZXJlIGFueXdheS4gUGx1cyB3ZXRzdWl0IHN3aW1taW5nIGluIG15IDI1bSBsb2NhbCBpbmRvb3IgcG9vbCB0byBwcmVwYXJlIGRvZXNuJ3QgYXBwZWFsLiBBdCBsZWFzdCBydW5uaW5nIGluIHRoZSBneW0gd291bGQgYmUgZ29vZCwgYXMgZXZlbiBpbiB3aW50ZXIgaXQncyBsaWtlIHRoZSBCZWxnaWFuIENvbmdvIGluIHRoZXJlLiAKSWYgeW91IGhhdmUgbm9ybWFsL29pbHkgc2tpbiwgeW91IHdpbGwgbW9zdCBsaWtlbHkgd2FudCB0byB1c2UgYSBsaWdodGVyIGNyZWFtIGluIHN1bW1lcnMsIGF0IGxlYXN0IGluIHRoZSBBTS4gSSB0aGluayBpdCdzIGEgcmVhbGx5IHNvbGlkIHdpbnRlciBjcmVhbSBmb3IgbW9zdCBwZW9wbGUsIGVzcGVjaWFsbHkgd2hlbiBwYWlyZWQgd2l0aCBvciBhcHBsaWVkIGFmdGVyIGEgY291cGxlIG9mIGRyb3BzIG9mIGZhY2Ugb2lsLiAKRXQgZXhwbG9zaXZlIGVuIHBlcnNwZWN0aXZlCkNsZXZlbGFuZCBpcyBvdXQgYXMgMjAxNCBzdG9wIG9uIFdvcmxkIFNlcmllcyBvZiBQb2tlciBjaXJjdWl0CkZsYW5kZXJzIGFuZCB0aGUgRmxlbWlzaCBzcGVha2luZyBjb21tdW5pdHkgaGF2ZSBtZXJnZWQuIFdhbGxvbmlhIGFuZCB0aGUgRnJlbmNoIHNwZWFraW5nIGNhbiBtZXJnZSBiZWNhdXNlIHRoZXJlIHRoYXQgdGlueSBtaW5vcml0eSBpbiBXYWxsb25pYSB3aG8gc3BlYWtzIEdlcm1hbi4gV2FsbG9uaWEgaXMgdHJhbnNmZXJyaW5nIGEgbG90IG9mIHJlZ2lvbmFsIGNvbXBldGVuY2VzIHRvIHRoZSBHZXJtYW4gc3BlYWtpbmcgY29tbXVuaXR5IHNvIEkgd291bGRuIGJlIHN1cnByaXNlZCBpZiBzb29uIG9yIGxhdGVyLCB0aGV5IGJlY29tZSBhIHJlZ2lvbi4gU28gdGhhdCBtYWtlcyA2IG9yIDcsIGl0IGRlcGVuZHMgb24gaG93IHlvdSBjb3VudCB0aGVtLgpPbmUgdGhpbmcgdG8gdW5kZXJzdGFuZCBhYm91dCB0aGUgTWV0YWwgMTAgUm93IENhc2lubyBUYWJsZSBDaGlwIFRyYXkgd2l0aCBDb3ZlciBhbmQgTG9jayBpcyB5b3UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBwdXJjaGFzaW5nIGEgc3BlY2lmaWMgcG9rZXIgY2hpcC4gSXQgZG9lc24ndCBtYXR0ZXIgYWJvdXQgZ3JhbXMsIHNpemVzIG9yIGFueXRoaW5nIGVsc2UuIApJbmNyZWFzZWQgc3RpbmdzICAgdGhlIGJ1bGsgb2YgdGhlbSBvbmxpbmUgICBhcmUgcGFydCBvZiB0aGUgZWZmb3J0LCBrbm93biBsb2NhbGx5IGFzIHRoZSAiQnV5ZXIgQmV3YXJlIiBwcm9ncmFtLCB3aGljaCBoYXMgYW4gb3ZlcmFsbCBnb2FsIG9mIGRlY3JlYXNpbmcgbG9jYWwgZGVtYW5kIGZvciBwcm9zdGl0dXRpb24gYnkgMjAgcGVyY2VudCBpbiB0d28geWVhcnMuCkhvd2V2ZXIgdGhlcmUgYXJlIGh1bmRyZWRzIG91dCB0aGVyZSBmb3IgeW91IHRvIGpvaW4sIGp1c3QgY2hlY2sgQVVJbnZvbHZlLlRoZXJlIGFyZSBiYXJzLCBTa3lCYXIgYmVpbmcgdGhlIGJlc3QgaW4gbXkgb3Bpbmlvbi4gVGhleSdyZSBhbHdheXMgcG9wcGluJyBvbiB0aGUgd2Vla2VuZHMsIGdvaW5nIGJ5IHlvdXJzZWxmIGlzIGZ1biBidXQgaWYgeW91IGdvIGRvd250b3duIHdpdGggZnJpZW5kcyBpdCdzIGV2ZW4gbW9yZSBmdW4uVGhlcmUgaXMgYSBiaWcgZGF0aW5nIHNjZW5lIGhlcmUsIHlvdSBjYW4gbWVldCBnaXJscyBvciBndXlzIGFueXdoZXJlIGJ5IGp1c3QgYmVpbmcgaW52b2x2ZWQuIEJhcnMsIGNsdWJzLCBldGMuTG90cyBvZiB0cmFpbHMhIFdlIGhhdmUgQ2hld2FjbGEgc3RhdGUgcGFyayBhYm91dCA1IG1pbnV0ZXMgZnJvbSBjYW1wdXMsIHdlIGhhdmUgb24gY2FtcHVzIHBhcmtzLCBhbmQgaWYgeW91J3JlIHdpbGxpbmcgdG8gZHJpdmUgYSBsaXR0bGUgYml0IHRoZXJlIGFyZSBzb21lIG1vdW50YWlucyBub3J0aCBvZiBoZXJlLkF1YnVybiBpcyBncmVhdCBhbmQgdGhlIHN0dWRlbnRzIGFyZSBmcmllbmRseS4gCkplIG4nYWkgamFtYWlzIGV1IGQnYWZmaW5pdHMgcGFydGljdWxpcmVzIGF2ZWMgbGEgY3Vpc2luZSBtZXhpY2FpbmUgbWFpcyBzYW5zIGRvdXRlIG4nYXZhaXMgamUgcGFzIGZhaXQgbGVzIGJvbm5lcyBleHByaWVuY2VzLiAKSWYgeW91IHN0aWxsIGRvIG5vdCB1bmRlcnN0YW5kIHRoZSBmbHVjdHVhdGluZyB2YWx1ZSBvZiBmaWF0IGN1cnJlbmN5IG9yIG90aGVyIGN1cnJlbmNpZXMgc2ltcGx5IGdvb2dsZSAiZXhjaGFuZ2UgcmF0ZXMiLiAKRG93bmxvYWQgS2V0dGxlIFdoaXN0bGUgc291bmRzIC4gODIgc3RvY2sgc291bmQgY2xpcHMgc3RhcnRpbmcgYXQgJDIuIERvd25sb2FkIGFuZCBidXkgaGlnaCBxdWFsaXR5IEtldHRsZSBXaGlzdGxlIHNvdW5kIGVmZmVjdHMuIApPdXIgR29kIGxvdmUgaXMgYWx3YXlzIHRoZSBzYW1lLiAKSW4gdGhpcyAybmQgdHlwZSBvZiBib2R5IHJ1YiwgSSBnbyBiYWNrIG92ZXIgYWxsIDYgZGl2aXNpb25zLCBhbGwgMjAgc3VicGFydHMsIGFsbCA0MCBzdWIgc3VicGFydHMsIG9uY2UgYWdhaW4gICB3aXRoIGEgZ2VudGxlIHNjcmF0Y2hpbmcgdGVjaG5pcXVlLiAKIldoZW4geW91IHRha2UgdHdvIG1pbnV0ZXMgdG8gY29uY2VudHJhdGUgb24gaXQsIGl0J3MgYWN0dWFsbHkgdmVyeSBzaW1wbGUsIiBoZSBzYWlkLiAiV2UncmUgdHJ5aW5nIHRvIGhpdCB0aGUgc3R1bXBzIGFuZCB0aGV5J3JlIHRyeWluZyB0byBoaXQgaXQgb3V0IG9mIHRoZSBwYXJrLiBJdCdzIG5vdCB0aGF0IGhhcmQuIgpQcmVoZWF0IHRoZSBvdmVuIHRvIDM1MCBkZWdyZWVzIEYuIEhlYXQgdGhlIG9pbCBpbiBhIGxhcmdlIER1dGNoIG92ZW4gb3ZlciBoaWdoIGhlYXQuClN0aWxiLCBzdGF0ZSBhZHZpc29yLCBhbmQgYSB0YWxrIGJ5IEouIApUaGUgQnJhZHkgQnVuY2ggUm9iZXJ0IFJlZWQgaXMgc2VlbiBpbiBnYWxsZXJ5IGFydCBmb3IgdGhlIHRoaXJkIHNlYXNvbiBvZiBUaGUgQnJhZHkgQnVuY2guIApJIGRvbiBleHBlY3QgcGVyZmVjdGlvbiBmcm9tIHBlb3BsZSwgYW5kIEkgZ2V0IHRoYXQgdGhpcyBpcyBhIHRvdWNoeSBzdWJqZWN0LCBidXQgaXQgZ2V0dGluZyB0byB0aGUgcG9pbnQgd2hlcmUgbWFsZSBzZXh1YWxpdHkgaW4gZ2VuZXJhbCBpcyBjb25zaWRlcmVkIHNvbWV0aGluZyBkZSBmYWN0byBldmlsIGFuZCBkZWh1bWFuaXppbmcuIEFzIGlmIGEgZ3V5IGJlaW5nIGF0dHJhY3RlZCB0byBhbnlib2R5IGF0IGFsbCBpcyBzb21laG93IGEgcHJvYmxlbS4gSSBhZ3JlZSB3aXRoIEF0d29vZCBhbmQgdGhlIG90aGVycyBvbiB0aGlzLCB3ZSBzdGFydGluZyB0byBnbyBiYWNrIHRvIHRoaXMgcHV0cmlkIHB1cml0YW4gbWluZHNldCB3aGVyZSBzZXggaXMgY29uc2lkZXJlZCBkaXJ0eSBhbmQgdmlsZS4uIApNb3N0IG9mIHRoZW0gaGF2ZSBmcmVlIGNvZmZlZSAobmFrZWQgZXZlbiBoYXMgZnJlZSBiZWVyISkgYW5kIGZyZWUgd2lmaSAob2YgY291cnNlKSBzbyB3aGVuIHlvdSBhZGQgaXQgdXAgaXQgYWJvdXQgdGhlIHNhbWUgY29zdCBhcyBiZWluZyBpbiBhIGNhZmUgd2l0aCB0aGUgZmxleGliaWxpdHkgb2YgdXNpbmcgbXVsdGlwbGUgbG9jYXRpb25zIHdpdGhpbiB0aGUgc2FtZSBjb21wYW55IGFuZCBhcyBmYXIgYXMgaSBrbm93IG1vc3Qgb2YgdGhlbSBhcmUgMjQgaG91cnMgdG9vLiBJdCBhbHNvIGEgd2F5IHRvIGdldCB0byBtZWV0IHBlb3BsZSBhcyB0aGVyZSBhcmUgbG90cyBvZiBldmVudHMgb24gaW4gdGhlbSBhbmQgeW91IHN0YXJ0IHRvIGJ1bXAgaW50byB0aGUgc2FtZSBwZW9wbGUgb3ZlciBhbmQgb3ZlciBhZnRlciBhIHdoaWxlLgpQYXkgdW5kZXIgbWluaW11bSB3YWdlLCBubyBjb250cmFjdCwgbm8gaG9saWRheSBwYXkuIApUaGV5IGFyZSBtb3JlIGFjY3VyYXRlIHRoYXQgb25lIHdvdWxkIHRoaW5rLCBlYXN5IHRvIGZpeCBpbiB0aGUgZmllbGQsIGVhc2llciB0byBzdXBwcmVzcyB3aXRoIGl0ZW1zIHNpbXBseSBmb3VuZCBhcm91bmQgdXMsIHRoZXkgYXJlIG9mdGVuIG5vdCBhcyBsb3VkIGFzIGEgcmlmbGUsIGFuZCBjZXJ0YWlubHkgcXVpZXRlciB0aGFuIGEgc2hvdGd1biwgdGhleSBkbyBub3QgaGF2ZSBhIHNob3J0IHJhbmdlLCB0aGV5IGFyZSBob25lc3RseSBoYXJkZXIgdG8gZnVtYmxlIG9yIGRyb3AsIGxlc3MgcmVjb2lsIG1lYW5zIGZhc3RlciByZWZpcmUgd2hpbGUgcmV0YWluaW5nIGEgZ2VuZXJhbCBhbW1vdW50IG9mIGFjY3VyYWN5LCBhbmQgOW1tICh0aGUgbW9zdCBjb21tb24gcGlzdG9sIHJvdW5kKSBjYW4gcGVuZXRyYXRlIG1vc3Qgc3VyZmFjZXMgYXQgY2xvc2UgcmFuZ2UuIApBcG9pZ25hbnQgc3RhdGVtZW50IGFwcGVhcmVkIG9uIEphbnVhcnkgMTAsIDE5OTQsIGluIFRpbWVtYWdhemluZSAocGFnZSA1MSk6ICJJdCBpcyBub3cgYWNjZXB0YWJsZSBmb3IgdGhlIHdob2xlIGZhbWlseSB0b2NvbWUgYWxvbmcgdG8gTGFzIFZlZ2FzIHRoYXQncyBiZWNhdXNlIHRoZSB2YWx1ZXMgb2YgQW1lcmljYSBoYXZlY2hhbmdlZCwgbm90IHRob3NlIG9mIExhcyBWZWdhcyBbU1RSRVNTIGFkZGVkXS4iIE5vdGUsIElwZXJzb25hbGx5IGZvbGxvdyB0aGUgd29yZHMgb2YgU3RldmUgV3lubiAoQ2hhaXJtYW4gb2YgdGhlIExhcyBWZWdhc01pcmFnZSBSZXNvcnRzLCBJbmMuKTogIklmIHlvdSB3YW5uYSBtYWtlIG1vbmV5IGluIGEgY2FzaW5vLCBvd24gb25lImJ1dCB0aGVyZSBzdGlsbCBhcmUgcHJvYmxlbXMhIEhhcnJhaCdzIGVzdGFibGlzaGVkIGl0c2VsZiBpbk5ldyBaZWFsYW5kLCB5ZXQgaW4gMTk5NSBhIE5ldyBPcmxlYW5zIHZlbnR1cmUgYnkgYSB1bml0IG9mIEhhcnJhaCdzZmFpbGVkIGFuZCB3ZW50IGludG8gQ2hhcHRlciAxMSBiYW5rcnVwdGN5IHByb3RlY3Rpb24uLiAKTGF0ZXIgZmlsbXMgd2VyZSBwYXJ0IG9mIHRoZSAnSGVhbHRoIGZvciB0aGUgQW1lcmljYXMnIHNlcmllcywgYW5kIGluY2x1ZGVkIHRpdGxlcyBzdWNoIGFzIENsZWFubGluZXNzIGJyaW5ncyBIZWFsdGgsIFRoZSBVbnNlZW4gRW5lbXkgYW5kIFBsYW5uaW5nIGZvciBHb29kIEVhdGluZy4gVGhlc2UgZW1waGFzaXNlZCB0aGUgaW1wb3J0YW5jZSBvZiBrZWVwaW5nIGNsZWFuLCBub3QgdXNpbmcgY29ybmZpZWxkcyBhcyBsYXRyaW5lcywgcHJldmVudGluZyB0aGUgc3ByZWFkIG9mIGdlcm1zLCBhbmQgZWF0aW5nIGEgYmFsYW5jZWQgZGlldC4gCkJlc3QgbGl2ZXJ5IG9uIHRoZSBCb2VpbmcgNzg3IERyZWFtbGluZXIKTWlkZGxlIHRvIHVwcGVyIGNsYXNzIHdoaXRlIHBlb3BsZSBkb24gaGF2ZSB0byB3b3JrIGhhcmQgb3IgYmUgcGFydGljdWxhcmx5IHNtYXJ0IHRvIHN0YXkgb3V0IG9mIHBvdmVydHkgKEkgYW0gb25lLCBhbHRob3VnaCBJIGxpa2UgdG8gdGVsbCBteXNlbGYgSSBhbSBzbWFydCBhbmQgaGFyZCB3b3JraW5nKS4gCk1lYW53aGlsZSB0aGUgYmxpbmRzIGFyZSBvYnZpb3VzbHkgZ29pbmcgdXAuIFdoZW4gd2UgcmVhY2hlZCBsZXZlbCA1IHdpdGhvdXQgYW55IGVsaW1pbmF0aW9ucywgdGhlIGJsaW5kcyB3ZXJlIHZlcnkgaGlnaCAoODAwMC8xNjAwMCkgaW4gcmVsYXRpb24gdG8gdGhlIGF2ZXJhZ2UgY2hpcCBzdGFjayAoMTAwLDAwMCkuIApJbiB0aGlzIGFydGljbGUsIHdlJ2xsIGxvb2sgYXQgd2hhdCBjYXVzZXMgaGFpciBsb3NzIGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgaG93IHRvIGRlYWwgd2l0aCB0aGUgcHN5Y2hvbG9naWNhbCBmYWxsb3V0IHRoYXQgb2Z0ZW4gYWNjb21wYW5pZXMgaXQuIFdlJ2xsIGRpc2N1c3MgaG93IHRvIGNob29zZSB0aGUgcmlnaHQgcGxhc3RpYyBzdXJnZW9uICh0aGVzZSBwcm9mZXNzaW9uYWxzIGhhdmUgYmVlbiBwZXJmb3JtaW5nIGNlcnRhaW4gaGFpciByZXBsYWNlbWVudCBwcm9jZWR1cmVzIGZvciAzNSB5ZWFycyEpLCBob3cgdG8gY2hvb3NlIHRoZSByaWdodCBwcm9jZWR1cmUgYW5kIHdoYXQgdG8gZXhwZWN0IGJlZm9yZSBhbmQgYWZ0ZXIgc3VyZ2VyeS4gV2UnbGwgYWxzbyBsb29rIGF0IG1lZGljYXRpb25zIGFuZCB0aGUgbGF0ZXN0IGluIHdpZ3MgYW5kIGhhaXIgYWRkaXRpb25zLiBBIHdvcmQgb2YgY2F1dGlvbjogVGhlcmUgaXMgbm8gcXVpY2sgb3Igc3VyZSBmaXJlIHdheSB0byByZXBsYWNlIHlvdXIgZHdpbmRsaW5nIGZvbGxpY2xlcyB3aXRoIGEgZnVsbCwgdGhpY2sgaGVhZCBvZiBoYWlyLiBTbyBpdCdzIGltcG9ydGFudCB0aGF0IHlvdXIgZXhwZWN0YXRpb25zIGFyZSByZWFsaXN0aWMgYW5kIHRoYXQgeW91IGV4ZXJjaXNlIHBhdGllbmNlIHdoaWxlIHlvdSBleHBsb3JlIHlvdXIgb3B0aW9ucy4gR29vZCBsdWNrIQpJdCdzIGp1c3QgYSBtYXR0ZXIgb2Ygd2hhdCBzcGVjaWZpYyBiZWxpZWZzIGFuZCB0aGVpciBjb25zZXF1ZW5jZXMgYXJlLi4gClRoZSBSb3VsZXR0ZSBXaGVlbCBEcmF3aW5nIHdpbGwgcmVtYWluIG9uZSBvZiB0aGUgUG9rZXIgR2FtZXMgdGhhdCBhcmUgYXMgbXVjaCBhIHBhcnQgb2YgdGhlIGNhc2lub3MgYXMgdGhlIGdhbWJsaW5nIGl0c2VsZi4uIApJIGxpa2UgdGhlIGlkZWEgb2YgYmVpbmcgaW4gdGhlIGVhcmx5IGFkb3B0ZXJzIHByb2dyYW0sIGJ1dCBJIGRvbiB0aGluayBiZWluZyBhIGJldGEgdGVzdGVyIGl0IHF1aXRlIGVub3VnaCBpbiB0aGlzIGNhc2UuIEFuZCBsZXQgYmUgaG9uZXN0LCB0byB0ZXN0IEZTRCBlYXJseSB0aGV5IGhhdmUgdG8gYXJyYW5nZSBmb3IgbXkgY2FyIHRvIGdldCB0aGUgbmV3IEhXMyBjaGlwIHZpYSBzZXJ2aWNlLCBmb3IgZnJlZSwgdmVyc3VzIHVzZSBvdGhlciBGU0QgY3VzdG9tZXJzIHdobyBidXkgYSBjYXIgd2l0aCBpdCBidWlsdCBpbiBhbmQgcmVhZHkgdG8gZ28uIApNeXN0ZXJ5IGtpbGxlciB3aGFsZXMgc3BvdHRlZCBieSBzY2llbnRpc3RzIG9mZiBjb2FzdCBvZiBDaGlsZSB0byBiZSBuZXcgc3BlY2llcyAvcmVhY3QgdGV4dCAgPkEga2lsbGVyIHdoYWxlIHRoYXQgY291bGQgYmUgYSBuZXcgc3BlY2llcyBpcyB0byBiZSBzdHVkaWVkIGJ5IHNjaWVudGlzdHMgZm9yIHRoZSBmaXJzdCB0aW1lIGFmdGVyIGl0IHdhcyBzZWVuIG9mZiB0aGUgY29hc3Qgb2Ygc291dGhlcm4gQ2hpbGUuIApUaGUgc2ltcGxlc3QgbWFzc2FnZSBjaGFpcnMgdXNlIGEgc2VyaWVzIG9mIHZpYnJhdGluZyBzdXJmYWNlcyB0byBwcm92aWRlIGEgbWFzc2FnZS4gVG8gY3JlYXRlIHRoZSB2aWJyYXRpb25zLCBtYW51ZmFjdHVyZXJzIHVzZSBzbWFsbCBkZXZpY2VzIHRoYXQgY29udGFpbiBhIHdlaWdodGVkIHdoZWVsIG9yIGdlYXIuIFRoZSB3ZWlnaHQgaXNuJ3QgY2VudGVyZWQgb24gdGhlIHdoZWVsLCB3aGljaCBtYWtlcyB0aGUgd2hlZWwgdW5iYWxhbmNlZC4gCkkgbGVhcm5lZCB0aGF0IG5vdCBhbGwgb2YgdXMgYXJlIG1lYW50IHRvIGxlYWQuIApSZWNvcmRzIGluZGljYXRlIHRoYXQgdmFyaW91cyBnYW1lcyBvZiBjaGFuY2Ugd2VyZSBhbHdheXMgYSBwYXJ0b2YgdGhlIEFtZXJpY2FuIGhlcml0YWdlIGFuZCBzaG91bGQga25vdyB0aGF0IGFsdGhvdWdoIGdhbWJsaW5nIHdhc2xlZ2FsaXplZCBpbiBOZXZhZGEgaW4gMTkzMSwgaXQgd2FzIG9ubHkgaW4gMTkxMCB0aGF0IGdhbWJsaW5nIHdhc2RlY2xhcmVkIGlsbGVnYWwgaW4gTmV2YWRhLiBGb3IgdHdlbnR5IG9uZSB5ZWFycywgZnJvbSAxOTEwIHRvIDE5MzEsQW1lcmljYW5zIGRpZCB3aXRob3V0ICJsZWdhbCIgZ2FtYmxpbmcsIGJ1dCB0aGF0IHdhcyBhbGwgdG8gY2hhbmdlc2luY2UgZ2FtYmxpbmcgd2FzIHN1Y2ggYSBtYWpvciBwb3J0aW9uIG9mIEFtZXJpY2FuIGxpZmUuIEl0IGlzaW50ZXJlc3RpbmcgdG8gcmVhZCwgZm9yIGV4YW1wbGUsIG9mIFNhbiBGcmFuY2lzY28gaW4gdGhlIDE4NTBzIGFuZHRoYXQgIkV2ZXJ5Ym9keSBkaWQgc28iIGJlY2F1c2U6CkJ5IGVsaW1pbmF0aW5nIGRpZXRhcnkgZWxlbWVudHMsIHBhcnRpY3VsYXJseSBsZWN0aW5zLCB3aGljaCBhZHZlcnNlbHkgaW5mbHVlbmNlIGJvdGggZW50ZXJvY3l0ZSBhbmQgbHltcGhvY3l0ZSBzdHJ1Y3R1cmUgYW5kIGZ1bmN0aW9uLCBpdCBpcyBwcm9wb3NlZCB0aGF0IHRoZSBwZXJpcGhlcmFsIGFudGlnZW5pYyBzdGltdWx1cyAoYm90aCBwYXRob2dlbmljIGFuZCBkaWV0YXJ5KSB3aWxsIGJlIHJlZHVjZWQgYW5kIHRoZXJlYnkgcmVzdWx0IGluIGEgZGltaW51dGlvbiBvZiBkaXNlYXNlIHN5bXB0b21zIGluIGNlcnRhaW4gcGF0aWVudHMgd2l0aCBSQS4gZWdncGxhbnQsIHRvbWF0b2VzLCBwb3RhdG9lcywgcGVwcGVycywgZXRjLikuIEFkZCB0byB0aGlzIGxpc3QgdGhlIG9pbHMgYW5kIG90aGVyIGRlcml2YXRpdmUgcHJvZHVjdHMgZnJvbSB0aGVzZSBmb29kIHNvdXJjZXMuIFNpc3NvbgpIYXMgYW55b25lIGVsc2Ugbm90aWNlZCB0aGlzIG9uIEZlZWQgYmFzZWQgc2l0ZXMgKHNvY2lhbCBtZWRpYSBvciBvdGhlcndpc2UpPyBXaGVuIHlvdSBmb3VuZCBzb21ldGhpbmcgaW50ZXJlc3RpbmcsIHlvdSBzdG9wIHNjcm9sbGluZyBhbmQgdGhlbiBhbGwgb2YgdGhlIHN1ZGRlbiBhbiBhdXRvIHNjcm9sbCBvciBnbGl0Y2ggaGFwcGVucyBhbmQgdGhlIGl0ZW0gb2YgaW50ZXJlc3QgbW92ZXMgYWxvbmcgd2l0aCB0aGF0LiAKSSBmaW5kIHRoYXQgd2hlbiBJIGp1c3Qgc2l0IG91dHNpZGUgKEknbSB0b28gbGF6eSB0byB3YWxrIGFyb3VuZCkgd2hlbiBJIGFtIGFuZ3J5LCBJIGNhbG0gZG93bi4gCk1hbiBzaG90IG11bHRpcGxlIHRpbWVzIHdoaWxlIHB1bXBpbmcgZ2FzIGluIEx5dHRvbiBQYXJrCldlIGRpZG4gaGF2ZSBhIHRyYWRpdGlvbmFsIHdlZGRpbmcgYnkgYW55IG1lYW5zLCBhbmQgZGlkbiBoYXZlIGFuIG9mZmljaWFsICJmaXJzdCBkYW5jZSwiIGJ1dCBhcyBpdCB3ZW50IG91ciBmaXJzdCBkYW5jZSB3YXMgdG8gYSBzb25nIHRoYXQgd2hvbGx5IHNwZWNpYWwgdG8gdXM6IEhvbmV5YmVlIGJ5IFN0ZWFtIFBvd2VyZWQgR2lyYWZmZS4gSGUgbGlzdGVuZWQgdG8gaXQgdGhlIHdob2xlIGhvdXIgbG9uZyBjYXIgcmlkZSBob21lIGFmdGVyIG91ciBmaXJzdCBkYXRlLCBzYW5nIGl0IHRvIG1lIG9uIG91ciBzZWNvbmQgd2hlbiB3ZSB3ZXJlIGx5aW5nIGluIGJlZCB0b2dldGhlciwgc2luZ3MgaXQgdG8gbWUgd2hlbmV2ZXIgSSBmZWVsaW5nIGRvd24gb3IgaGUgZmVlbGluZyBwYXJ0aWN1bGFybHkgcm9tYW50aWMuIApTbyBtYXliZSBkb24ganVkZ2UgYmFzZWQgb24gYSBzaW5nbGUgYXJ0aWNsZS4gClJlcG9ydGVyOiBKdXN0IGxpa2UgdGhlIG1pbGQgbWFubmVyZWQgcGV0ZXIgcGFya2VyIGNvdWxkIG1vcnBoIGludG8gc3BpZGVybWFuLCBNb2xseSBzYXlzIFRvYmV5IE1hZ3VpcmUgYXNzdW1lZCBhbiBhbHRlciBlZ28gd2hlbiBoZSBwdXQgb24gaGlzIHBva2VyIGZhY2UuIApHZXQgc29tZSBmb29kIHJlYWR5LiAKUmFnZSwgYWdncmVzc2l2ZW5lc3MgYW5kIGlycml0YWJpbGl0eSBhcmUgYW1vbmcgdGhlIHBvc3NpYmxlIHNpZGUgZWZmZWN0cyBvZiB0YWtpbmcgZGlhemVwYW0gICBiZXR0ZXIga25vd24gYXMgVmFsaXVtLCBhY2NvcmRpbmcgdG8gYSBtYW51ZmFjdHVyZXIgb2YgdGhlIGRydWcuIEl0IGlzIG5vdCBrbm93biB3aGVuIFBhZGRvY2sgbGFzdCB0b29rIHRoZSBkcnVnLgpGb3IgZGV0YWlscyBvbiBtb2RlcmF0aW9uIHByb2NlZHVyZXMsIHNlZSB0aGVJZiBoaXN0b3J5IHN0dWRpZXMgb3VyIHBhc3QgYW5kIHNvY2lhbCBzY2llbmNlcyBzdHVkeSBvdXIgcHJlc2VudCwgd2hhdCBpcyB0aGUgc3R1ZHkgb2Ygb3VyIGZ1dHVyZT8gRnV0dXJlKHMpIFN0dWRpZXMgKGNvbGxvcXVpYWxseSBjYWxsZWQgImZ1dHVyZShzKSIgYnkgbWFueSBvZiB0aGUgZmllbGQgcHJhY3RpdGlvbmVycykgaXMgYW4gaW50ZXJkaXNjaXBsaW5hcnkgZmllbGQgdGhhdCBzZWVrcyB0byBoeXBvdGhlc2l6ZSB0aGUgcG9zc2libGUsIHByb2JhYmxlLCBwcmVmZXJhYmxlLCBvciBhbHRlcm5hdGl2ZSBmdXR1cmUocykuCk1vcmUgdGhhbiA0MSBwZXIgY2VudCBvZiB1cyBsaXZlIGluIGNvbW1vbiBsYXcgcmVsYXRpb25zaGlwcyAodHdpY2UgdGhlIENhbmFkaWFuIHJhdGUpLiAKV2hlbiBhIGdvZHMgYXdmdWwgZHJvbmluZyBzb3VuZCBiZWdhbiB0byBidWlsZCBvdmVyIHRoZSBuZXh0IGhpbGwuIApQZXBlNzQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwoiV2UnbGwgYmUgeW91bmcgaW4gdGVybXMgb2YgZXhwZXJpZW5jZSBidXQgd2Ugc3RpbGwgaGF2ZSBlaWdodCBzZW5pb3JzLCIgUmVuY2sgc2FpZC4gCkxlIHRyb2lzaW1lIGV0IGRlcm5pZXIgYXJ0aWNsZSBkZSBsYSBwcm9wb3NpdGlvbiBwcm9wb3NlIGwnaW50cm9kdWN0aW9uIGQndW4gbm91dmVsIGFydGljbGUgNzA2IDEzNiAxIGRhbnMgbGUgQ29kZSBkZSBwcm9jZHVyZSBwbmFsZSwgYWluc2kgcmRpZyA6ICBBcnQuIDcwNiAxMzYgMS4gICBMZSBqdWdlIGRlIGwnYXBwbGljYXRpb24gZGVzIHBlaW5lcyBwZXV0IG9yZG9ubmVyLCAgbGEgbGlicmF0aW9uIGQndW5lIHBlcnNvbm5lIGNvbmRhbW5lIGRhbnMgbGVzIGNpcmNvbnN0YW5jZXMgbWVudGlvbm5lcyBhdSBzZWNvbmQgYWxpbmEgZGUgbCdhcnRpY2xlIDEyMiAxIGR1IGNvZGUgcG5hbCwgdW5lIG9ibGlnYXRpb24gZGUgc29pbnMgYWluc2kgcXVlIGxlcyBtZXN1cmVzIGRlIHNyZXQgdmlzZXMgIGwnYXJ0aWNsZSA3MDYgMTM2IHBlbmRhbnQgdW5lIGR1cmUgcXUnaWwgZml4ZSBldCBxdWkgbmUgcGV1dCBleGNkZXIgZGl4IGFucyBlbiBtYXRpcmUgY29ycmVjdGlvbm5lbGxlIGV0IHZpbmd0IGFucyBzaSBsZXMgZmFpdHMgY29tbWlzIGNvbnN0aXR1ZW50IHVuIGNyaW1lIG91IHVuIGRsaXQgcHVuaSBkZSBkaXggYW5zIGQnZW1wcmlzb25uZW1lbnQuIApTZXZlcmFsIG9mIHRoZSByaWRlcnMgZ2F2ZSBkb3VibGUgdGhlIGVudHJhbmNlIGZlZSBhbmQgcmVmdXNlZCBjaGFuZ2UuIApJdCBzdG9wcGVkIG9uIGEgJDEyLDUwMCBwb2tlciBwYWNrYWdlIHRvIFZlZ2FzICAgYSBwYWNrYWdlIHRoYXQgaW5jbHVkZSBoZXIgcGxhY2UgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBtYWluIGV2ZW50LCBhIGZpdmUgbmlnaHQgc3RheSBhdCB0aGUgbHV4dXJpb3VzIFZkYXJhIEhvdGVsIHBsdXMgdHJhdmVsIG1vbmV5IGFuZCBleHBlbnNlcy5BdCBmaXJzdCwgc29uIEpvbmF0aGFuLCAzNCAgIGEga2VlbiBwb2tlciBwbGF5ZXIgICB0cmllZCB0byB0YWtlIG11bSdzIHBsYWNlLiAKR2FtZSBTaG93cyBBIFByaW5jZXNzIGNydWlzZSBpcyB0aGUgaWRlYWwgcGxhY2UgdG8gbGl2ZSBvdXQgeW91ciBmYXZvcml0ZSBnYW1lIHNob3dzIGFuZCBjb250ZXN0cy4gS2FyYW9rZSBuaWdodHMgYXJlIGFpbWVkIGF0IGZpbmRpbmcgdGhlIGNydWlzZSBsaW5lJ3MgIlByaW5jZXNzIElkb2wsIiB3aGljaCBhdHRyYWN0cyBsYXJnZSBjcm93ZHMgZXZlcnkgbmlnaHQuIApUYWtpbmcgYWR2YW50YWdlIG9mIHRoZSBzaXR1YXRpb24sIE1vZGkgcmVwb3J0ZWRseSBwcm9wb3NlZCB0byBOYXdheiBTaGFyaWYgIndoeSBjYW4ndCB3ZSBiZSBsaWtlIGxlYWRlcnMgaW4gRXVyb3BlLCB3aG8gbWVldCBlYWNoIG90aGVyIGZvciBjYXN1YWwgZ2V0IHRvZ2V0aGVycyBhbmQgY2hhdHM/IiBUaGUgSmF0aSBVbXJhICd0YWxrJyB3YXMgdGhlIGJlZ2lubmluZyBvZiB0aGUgZnJpZW5kbHkgZW5nYWdlbWVudC4gQWNjb3JkaW5nIHRvIHB1Ymxpc2hlZCByZXBvcnRzLCBpdCBjZW50cmVkIG9uICdwb3NpdGl2ZXMnLCB3aXRoIG5laXRoZXIgc2lkZSB0cnlpbmcgdG8gcHV0IHRoZSBvdGhlciBvbiB0aGUgZGVmZW5zaXZlLiBJZiB0aGF0IHdhcyByZWFsbHkgc28sIHRoZSBwcm9jZXNzLCBpdCBzZWVtcywgaXMgZ29pbmcgdG8gYmUgZ3JlYXQgZnVuLgpJbiBoZXIgc3BlZWNoLCBzYWx1dGF0b3JpYW4gQW5uYWxvcmUgTGFHcmFzc2EganV4dGFwb3NlZCBob3cgc2hlIGFuZCBoZXIgY2xhc3NtYXRlcyBncmV3IGluIGhpZ2ggc2Nob29sIHRvIHRoZSB0cmFuc2Zvcm1hdGlvbiBvZiB0aGUgd29ybGQgYXJvdW5kIHRoZW0uIFdoaWxlIHRoZXkgaGFkIHRoZSBjaGFuY2UgdG8gbGVhcm4gd2hhdCB0aGV5IHdlcmUgcGFzc2lvbmF0ZSBhYm91dCBvdmVyIHRoZSBjb3Vyc2Ugb2YgZm91ciB5ZWFycywgc2hlIHNhaWQsIHBlb3BsZSBhcm91bmQgdGhlIHdvcmxkIGJlY2FtZSBmcmlnaHRlbmVkIHRvIGRvIHdoYXQgdGhleSBsb3ZlLi4gClRoZXJlIGlzIGEgZ2FtZSwgSG9sZGVtIFBva2VyIHdoaWNoIGhhcyBvdmVyIDE2IHZhcmlldGllcyBiZWluZyBhdmFpbGFibGUgb25saW5lIHdpdGggbnVtZXJvdXMgaW50ZXJlc3RpbmcgbmFtZXMgc3VjaCBhcyBQaW5lYXBwbGUsIE1hbmlsYSwgQmlsbGFib25nLCBTaGFuZ2hhaSwgYW5kIFBzeWNoby4gQXJlIHlvdSBhd2FyZSBvZiB0aGUgNyBzdHVkIHBva2VyPyBZZXMsIGl0IGNhbiBhbHNvIGJlIHBsYXllZCB3aXRoIHNldmVyYWwgdmFyaWFudHMgc3VjaCBhcyBDaGljYWdvIGFuZCBzaXgga2ljayBhbmQgdGhlIG90aGVyIDUgc3R1ZCBwb2tlciBjYW4gYmUgcGxheWVkIGluIFNhdGFuIG9yIHNvbG8uIFlvdSBjYW4gbm93IHBsYXkgZWFjaCBhbmQgZXZlcnkgdHlwZSBvZiBwb2tlciBnYW1lIHZpYSBvbmxpbmUgb24gdGhlIGludGVybmV0IGFuZCB0aGVyZSBhcmUgYWJvdXQgdGhyZWUgYnJvYWQgY2xhc3NpZmljYXRpb25zIGF2YWlsYWJsZSBzdWNoIGFzIG5vIGxpbWl0IHBva2VyLCBwb3QgbGltaXQgcG9rZXIsIGFuZCB0aGUgYmFzaWMgbGltaXQgcG9rZXIuIE9idmlvdXNseSwgeW91IGFyZSB0aGlua2luZyBhYm91dCBob3cgdG8gY2hlYXQgaW4gcG9rZXI/IFJpZ2h0PyBEb24ndCB3b3JyeSwgeW91IGhhdmUgbnVtZXJvdXMgc3B5IGNoZWF0aW5nIHBsYXlpbmcgY2FyZHMgZGV2aWNlIGluIERlbGhpLCBJbmRpYSBieSB3aGljaCB5b3UgY2FuIHdpbiBhbGwgeW91ciBwb2tlciBnYW1lcyB3aXRoaW4ganVzdCBmZXdlciBzZWNvbmRzIG9ubHkuIFRoZSB0aHJlZSBtYWluIGFuZCB0aGUgbW9zdCBwb3B1bGFyIG9ubGluZSB0eXBlcyBvZiBwb2tlciBnYW1lIGFyZSAgVGV4YXMgSG9sZGVtIFBva2VyLCBPbWFoYSBQb2tlciwgYW5kIFNldmVuIFN0dWQgUG9rZXIuIFBsYXllcnMgYWxzbyBsaWtlIHRvIHBsYXkgcG9rZXIgb25saW5lIGFzIHRoZXkgbmVlZCBub3QgdmlzaXQgdGhlaXIgY29tbXVuaXR5LgpJZiBwb3dlciB1cCBjb3N0cyB3ZXJlIHNvbWV0aGluZyBhcHByb2FjaGluZyBzYW5lLCB3ZSB3b3VsZCBzZWUgZmFyIG1vcmUgdmFyaWV0eSBiZWNhdXNlIHBsYXllcnMgd291bGRuIHNlZSBpdCBhcyB3YXN0aW5nLgpGcm9tIHRoZSBwb2tlciBwbGF5aW5nIGRhZCwgdG8gdGhlIHlvdW5nIG9uZXMgd2hvIGFyZSBqdXN0IGxlYXJuaW5nIHRvIHBsYXkgdGhlIGdhbWUgb2YgZ28gZmlzaCwgdGhlc2UgY2FyZHMgd2lsbCBwcm92aWRlIGVudGVydGFpbm1lbnQgYW5kIGZ1biBmb3IgdGhlIGVudGlyZSBmYW1pbHkuIApBbHNvLCBoYXZlIHRoZW0gcHJhY3RpY2UgS29raSBoby4xMy4gClN1cmUsIENQIGJvbnVzIGZvciBnb29kLCBncmVhdCwgZXhjZWxsZW50IHRocm93cy4gCklmIGl0IGluc3RhbGxlZCB0aGUgc2FtZSBhcyBvdXJzLCBpdCBmcmVlIGZsb2F0aW5nLiBBdCB0aGUgdmVyeSBsZWFzdCwgcGVyaGFwcyB5b3UgY2FuIHNjb29jaCB0aGUgYm9hcmRzIHNvIHRoYXQgZ2FwcyBhcmUgc29tZXdoZXJlIGxlc3MgYW5ub3lpbmcuIFRyeSB0byBzaGlmdCB0aGVtIGFzIGNsb3NlIHRvIHRoZSB3YWxscyBhcyBwb3NzaWJsZSwgZm9yIGV4YW1wbGUuVGhpcyBtaWdodCBiZSBhIGJhZCBpZGVhLCBidXQgeW91IGNvdWxkIGNvbnNpZGVyIG1ha2luZy9idXlpbmcgc29tZSB3b29kIHNoaW1zLCBzdGFpbmluZyB0aGVtIHRvIG1hdGNoLCBhbmQgc2VlaW5nIGlmIHlvdSBjYW4gbWFrZSBpdCBhIGxpdHRsZSBsZXNzIG9idmlvdXMgdGhhbiBjYXVsayB3b3VsZCBiZS4gCkJlaW5nIHJlc3BlY3RmdWwgb2YgcGVvcGxlIGJlbG9uZ2luZ3MgdGhhdCBoYXZlIGJlZW4gZW50cnVzdGVkIHRvIHlvdSAgYW5kICBDLiBLZWVwIGluIG1pbmQgdGhhdCBvbmUgb2YgdGhlbSBwcm9iYWJseSBkcm92ZSB0aGUgdmVoaWNsZSBhY3Jvc3MgdGhlIHRhcm1hYywgd2hpbGUgdGhlIG90aGVyIG1pZ2h0IGhhdmUgZGlyZWN0ZWQgdGhlIHZlaGljbGUgKyB0b3cgdG8gYSBzYWZlIGxvY2F0aW9uIGJ5IHRoZSBhaXJjcmFmdC4uIApUZXhhcyBIb2xkICdFbSBpcyBhIGNvbW11bml0eSBiYXNlZCBjYXJkIGdhbWUgd2hlcmUgeW91IHdpbGwgZ2l2ZW4gY2FyZHMgYW5kIHNoYXJlIHNvbWUgY29tbXVuYWwgY2FyZHMgd2l0aCB0aGUgb3RoZXIgcGxheWVycy4gCkluIE1leGljYW4gcmVzdGF1cmFudHMgZ28gZm9yIGZhaml0YXMgYWxzbyBlYXRlbiB3aXRoIGEgZm9yaywgbm8gdG9ydGlsbGFzLCBiZWFucyBvciByaWNlIGJ1dCB0aGUgZ3VhYywgc291ciBjcmVhbSBhbmQgcGljbyBhcmUgZmluZS4gClllYWgsIE9nYXRhIHdhcyB0aGUgZmlyc3QgZHVkZSBTdWdpbW90byBmb3VnaHQsIGl0IHdvdWxkIGJlIGNvb2wgYXMgaGVsbCBpZiBoZSB3YXMgYWxzbyB0aGUgbGFzdCBndXksIHRvIG1ha2UgZXZlcnl0aGluZyBnbyBmdWxsIGNpcmNsZS4gSGUgYWxzbyBmZWVscyBsaWtlIHNvbWVvbmUgd2hvIGlzIG1vcmUgZ3JvdW5kZWQgYW5kIG9uIFN1Z2ltb3RvIGxldmVsLCB1bmxpa2UgSGlqaWthdGEgb3IgVHN1cnVtaSB3aG8gZ2l2ZXMgb2ZmIGJpZyBiYWQgdmliZXMuIApJIGJlbGlldmUgaXQgaXMgdmVyeSBzbWFydCB0byBiZSBhcyBwcmVwYXJlZCBhcyBwb3NzaWJsZSB3aGVuIGRyaXZpbmcgb2ZmIHJvYWQgaW4gcmVtb3RlIGxvY2F0aW9ucywgYW5kIHRoYXQgZGlkbid0IGhhcHBlbiBoZXJlLiBCdXQgd2UgZG9uJ3Qga25vdyB0aGUgZnVsbG5lc3Mgb2YgaGlzIHNpdHVhdGlvbiwgdGhvdWdodCBwcm9jZXNzLCBvciBwcmVwYXJlZG5lc3MgaW4gZ2VuZXJhbC4gCjIpIFlyYTogMTUyMCAxNjUwLCAxNTBFLCB0aGUgc2Vjb25kIHNlc3Npb24gaW4gdGhpcyBsYXRlIGF1dHVtbiBGS0sgdG91ci4gSW4gYSByb29tIDEwIG1pbiBjYXJlc3NpbmcsIDIwIG1pbiBEQVRZIHdpdGggaGVyIE8sIDE1IG1pbiBtaXNzaW9uYXJ5LCAxNSBtaW4gcGlsbG93IHRhbGsgYWJvdXQgSVNHLCBteSAzMCBtaW4gbWFzc2FnZSBvbiBoZXIuIE11c3QgcmVwZWF0LiBDb3JyZWN0aW9uOiBoZXIgaGVpZ2h0IGlzIDE2M2NtLCBub3QgMTU1Y20gd2hpY2ggSSByZXBvcnRlZCBvbiBOb3YuIDI0IGluIDIwMTQuClRoZSBwYXJ0bmVyc2hpcCBpcyBzZXQgdG8gb3BlbiBhIGNhc2lubyBpbiBkb3dudG93biBDaW5jaW5uYXRpIE1hcmNoIDQsIGFuZCBhbm90aGVyIGluIGRvd250b3duIEJhbHRpbW9yZSBuZXh0IHllYXIuQ2Flc2Fycywgd2hpY2ggb3ducyBhIGNhc2lubyBpbiBXaW5kc29yLCBPbmF0cmlvLCBqdXN0IGFjcm9zcyB0aGUgRGV0cm9pdCBSaXZlciBmcm9tIEdyZWVrdG93biwgaXMgbm90IGEgcGFydG5lciBpbiB0aGlzIGRlYWwuR3JlZWt0b3duIGlzIHRoZSBzbWFsbGVzdCBvZiBEZXRyb2l0J3MgdGhyZWUgY2FzaW5vcy4gSXQgb2ZmZXJzIGdhbWJsZXJzIDIsNzAwIHNsb3QgbWFjaGluZXMsIGRvemVucyBvZiB0YWJsZSBnYW1lcywgYSBkZWRpY2F0ZWQgcG9rZXIgcm9vbSBhbmQgYSAzMCBzdG9yeSwgNDAwIHJvb20gaG90ZWwuR3JlZWt0b3duLCB3aGljaCBvcGVuZWQgaW4gMjAwMCwgcmVjb3JkZWQgaXRzIGJlc3QgcmV2ZW51ZSB5ZWFyIGluIDIwMTEgd2hlbiBpdCBnZW5lcmF0ZWQgJDM1Mi44IG1pbGxpb24gYWZ0ZXIgYmVpbmcgc29sZCBvdXQgb2YgYmFua3J1cHRjeSB0byBhIGdyb3VwIG9mIGhlZGdlIGZ1bmRzIGFuZCBpbnZlc3RvcnMuRm9yIHRoZSBmaXJzdCAxMSBtb250aHMgb2YgMjAxMiwgaXRzIHJldmVudWUgd2FzIG5lYXJseSAkMzI1IG1pbGxpb24sIGFjY29yZGluZyB0byBmaWd1cmVzIGZyb20gdGhlIE1pY2hpZ2FuIEdhbWluZyBDb250cm9sIEJvYXJkLk9mZmljaWFscyB3aXRoIFJvY2sgR2FtaW5nIHNhaWQgV2VkbmVzZGF5IHRoZXkgZG9uJ3QgaGF2ZSBhbnkgaW1tZWRpYXRlIHBsYW5zIHRvIHVwZ3JhZGUgdGhlIHByb3BlcnR5LCBidXQgdGhleSBpbmRpY2F0ZWQgaXQgY291bGQgYmUgYmV0dGVyIHJ1bi5HaWxiZXJ0J3MgcHVyY2hhc2Ugb2YgYSBjb250cm9sbGluZyBpbnRlcmVzdCBpbiBHcmVla3Rvd24gZnJvbSBHcmVla3Rvd24gU3VwZXJob2xkaW5ncyBJbmMuIApCdXQgd2UgZG8gb2ZmZXIgYSBzcGVjaWFsIHRhYmxlIGdhbWVzIGJvbnVzIGZvciBCbGFjayBKYWNrLCBQb2tlciwgUm91bGV0dGUgYW5kIFZpZGVvIFBva2VycyB0byByZWd1bGFyIHBsYXllcnMuIApZb3UgbWlnaHQgc2F5IHRoYXQgeW91ICJub3QgbGlrZSB0aG9zZSBvdGhlciBhbmltZSBmYW5zIiwgYnV0IHlvdSBzdGlsbCBzaWRpbmcgd2l0aCB0aGVtIGFuZCBnZXR0aW5nIG91dHJhZ2VkIGxpdGVyYWxseSBvdmVyIGEgbG9saSBiYW4uIApQaG90b3NlbnNpdGl6YXRpb24sIHdoaWNoIG5vcm1hbGx5IG9jY3VycyBhdCB0aGUgYmVnaW5uaW5nIG9mCkRvcHBlbHN0ZWdwbGF0dGVuIHZlcmxlZ2VuIGFubGVpdHVuZyBzY2h3YXJ6ZSByb3NlbiB0YXR0b28geW91bmcgbmFrZXQgZ2lybHMgYXNpYSBtYXNzYWdlIHNleCBxdWlzIHVuaSBraWVsIHdlYmNhbSBzb250aG9mZW4gbW5uZXIgdmVyZ2V3YWx0aWd1bmdzb3BmZXIgZGV1dHNjaGUgYmFuayBlYmVyc3dhbGRlIG1hY2Jvb2sgcHJvIGFubGVpdHVuZyB0YXR0b29zIGZyYXUgYXJtIGxlZGVyIHVudGVyd3NjaGUgaGVycmVuIGdyb3NzZXIgc29ubmVuc2NoaXJtIGFubGVpdHVuZyBwdWxsb3ZlciBzdHJpY2tlbiBlaW5mYWNoIGRldXRzY2hlIHNleCB0dWIgbWF0dXJlIGZlbWFsZSBicmlsbGVuIHNjaHdhcnogZXJvdGlzY2hlIG1hc3NhZ2UgaW4gbW5jaGVuIHUgdHViZSBwb3JuIHVuaSBmcmVpYnVyZyBrdW5zdGdlc2NoaWNodGUgbHVzdGlnZSBlaW5sYWR1bmdlbiB6dW0gNTAuIEdlYnVydHN0YWcgc2V4eSB3b21lbiBnYWxsZXJpZXMgZGV1dHNjaGUga29tZGllbiAyMDEyIGFubGVpdHVuZyBwZW5pc3JpbmcgbW5uZXIgbWl0IHN0cmluZyBrYXJ0b2ZmZWwgc2V0emVuIGFubGVpdHVuZyB5b3VuZyBuYWtldCBnaXJscyBwb3JuIHBpY3MgbWFzdHVyYmF0aW9uIGdlc2NoZW5rIGx1c3RpZyB2ZXJwYWNrZW4gbHVzdGlnZSBiaWxkZXIgc3ByY2hlIHRvdGxhY2hlbiBiYXVlciBzdWNodCBmcmF1IG1hdXJpemlvIHRlZW5hZ2UgbGVzYmlhbnMgdHViZXMgZ3JvZXMgaGVyeiB6ZWljaGVuIHdlaWhuYWNodHNrcmFueiBiYXN0ZWxuIGFubGVpdHVuZyBrb3N0amEgdWxsbWFubiBuYWNrdCBob2Noc3RlY2tmcmlzdXJlbiBmciBtaXR0ZWxsYW5nZXMgaGFhciBhbmxlaXR1bmcgZ2VpbGUgbXVzY2hpIGdlZ2VuIGZpbmdlcm5nZWwga2F1ZW4gdGVlbmFnZSB3ZWJjYW0gc2V4IHdlYmNhbSBlbW8gbmFja3QgdGhlYXRlciB1bnRlcndzY2hlIGFtYXpvbiBrYWxvcmllbmJlZGFyZiBtbm5lciBrYXJhdGUgc2Nod2FyemVyIGdydGVsIHJvbGxhZGVuIGFubGVpdHVuZyBiYWRlc2hvcnRzIHNjaHdhcnogaWNoIGxpZWJlIGVpbmUgbHRlcmUgZnJhdSBnb29nbGUgYW5hbCBtZWluZSBuYWNrdGUgdG9jaHRlciBhbmltZSBmciBtZGNoZW4gYXNpYXRpc2NoZSBhbnRpcXVpdHRlbiBtZW5zYSB1bmkgaGFubm92ZXIuIApMYXRlciB0aGF0IG5pZ2h0LCBzaGUgaGFkIG9uZSBvZiBvdXIgbXV0dWFsIGZyaWVuZHMgb3ZlciBhbmQgdGhhdCBtdXR1YWwgZnJpZW5kIHNhaWQgaGkgaW4gdGhlIHNhbWUgY29udmVyc2F0aW9uIHdpbmRvdyB3aGVyZSBJIGhhZCBiZWVuIGRpc2N1c3NpbmcgbXkgZGFkIGFsY29ob2xpc20sIHJlaGFiLCBhbmQgc3VpY2lkZSB0aHJlYXRzLgpJdCB3YXMgc28gZWFzeSB0byBwcm9taXNlIHRoYXQgdGhlIGlzc3VlcyBvZiBlbmVyZ3ksIGluZmxhdGlvbiBhbmQgbGF3IGFuZCBvcmRlciB3aWxsIGJlIHJlc29sdmVkIGluIG1vbnRocyBhbmQgeWV0IHNvIGRpZmZpY3VsdCB0byBmdWxmaWxsIHRoZW0uIE9uZSBjcmlzaXMgYWZ0ZXIgYW5vdGhlciBrZWVwcyBjcm9wcGluZyB1cC4gCkkgaGFkIG15IFNLWDAwNyBmb3IgYWJvdXQgdHdvIHllYXJzIGFuZCB3ZWFyIGl0IG9mdGVuLiAKVm91cyBkZXZleiB0b3V0IGQnYWJvcmQgaW5zdGFsbGVyIHVuIGFncmdhdGV1ciBzdXIgdm90cmUgb3JkaW5hdGV1ciBvdSBjcmVyIHVuIGNvbXB0ZSAgbCdpbnRyaWV1ciBkJ3VuIGFncmdhdGV1ciB3ZWIuIFBvdXIgcmVjZXZvaXIgdW4gb3UgcGx1c2lldXJzIGRlIGNlcyBmaWxzLCBjbGlxdWV6IHN1ciB1biBkZXMgbGllbnMgY2kgZGVzc3VzIGF2ZWMgbGUgYm91dG9uIGRyb2l0IGRlIHZvdXMgc291cmlzLCBzbGVjdGlvbm5leiAgQ29waWVyICBkYW5zIGxlIG1lbnUgZXQgZW5zdWl0ZSBjb2xsZXogKGVuIGNsaXF1YW50IHN1ciAgQ29sbGVyICBkYW5zIGxlIG1lbnUpIGxlIGxpZW4gZGFucyBsJ2FncmdhdGV1ciBxdWUgdm91cyBhdXJleiBjaG9pc2kuIExlcyB1dGlsaXNhdGV1cnMgTWFjaW50b3NoLCBxdWFudCAgZXV4LCBkb2l2ZW50IGZhaXJlICBjdHJsK2NsaWMgIGV0IGNob2lzaXIgIENvcGllciBsZSBsaWVuIC4uIApNZWFud2hpbGUsIHJlYWwgb3Bwb3J0dW5pdGllcyBhcmUgYmVpbmcgbG9zdCB0byBsZWFkIGJ5IGV4YW1wbGUuIFN1cmUsIHRoZSBVUyBpcyBhIG1pbGl0YXJ5IEVtcGlyZSB0aGUgbGlrZXMgb2Ygd2hpY2ggdGhlIHdvcmxkIGhhcyBuZXZlciBzZWVuLCBCVVQgd2Ugc3RpbGwgaGF2ZSBzb21ldGhpbmcgbGlrZSBmcmVlZG9tIG9mIHNwZWVjaCAgdW5saWtlIFJ1c3NpYSwgd2hlcmUgc3VjaCBmcmVlZG9tcyB3ZXJlIG5ldmVyIHJlYWxseSBlc3RhYmxpc2hlZCwgYW5kIHVuZGVyIFB1dGluIGFuZCBoaXMgcHVwcGV0IE1lZHZlZGV2LCBhcmUgZGlzYXBwZWFyaW5nLiBBY2NvcmRpbmcgdG8gT2xlZyBLb3psb3Zza3ksIHRoZSBSdXNzaWFuIHN0YXRlIHJlY2VudGx5IGluY3JlYXNlZCBzdGF0ZSBjb250cm9sIG92ZXIgc3BlZWNoIGJ5IGNvbnRyb2xsaW5nIG5vdCBqdXN0IGpvdXJuYWxpc20sIGJ1dCBoaXN0b3J5IGFzIHdlbGwuLiAKTGEgbW1lIHBsYW50ZSBpbmRvbnNpZW5uZSBzZSB0cm91dmUgZGFucyBkJ2F1dHJlcyBwcm9kdWl0cywgbGEgc2V1bGUgY2hvc2UgcXVlIGplIHBldXggYWZmaXJtZXIgYydlc3QgcXUnZWxsZSBzZXJhIHRvdWpvdXJzIG1vaW5zIGNoZXIgcXVlIGNoZXogU3VwZXJzbWFydC4gCkFsbCBvZiB0aGVzZSB0aGluZ3MgaGFwcGVuIGluIHRoZSBwaHlzaWNhbCB3b3JsZCB3aXRob3V0IHRoZSBuZWVkIGZvciBhbiBhYnNvbHV0ZSBjYXRhc3Ryb3BoaWMgc2l0dWF0aW9uLiBJdCBpc24gaGFyZCB0byBkcmF3IHRoZSBwYXJhbGxlbHMgd2hpY2ggb2NjdXIgaW4gZGlnaXRhbCBzcGFjZSwgYW5kIG9jY3VyIGRlc3BpdGUgdGhlcmUgYmVpbmcgbW9yZSB0aGFuIG9uZSB3ZWJzaXRlLiBXZWJzaXRlcyBzdGlsbCBiZWNvbWUgbGFyZ2UgZW5vdWdoIHRvIGludGVycnVwdCB0aGUgYWJpbGl0eSBvZiBvdGhlciB3ZWJzaXRlcyB0byBwcm92aWRlIHRoZSBzYW1lIHNlcnZpY2UgdG8gYXMgd2lkZSBvZiBhbiBhdWRpZW5jZS4gCkl0IGlzIGltcG9ydGFudCB0aGF0IHlvdSByZW1lbWJlciB0aGF0IHRoZSBVbml2ZXJzaXR5IG9mIEJpcm1pbmdoYW0ncyBVQ0FTIGNvZGUgbnVtYmVyIGlzIEIzMi4gWW91IG11c3QgZW50ZXIgdGhpcyBjbGVhcmx5IG9uIHlvdXIgYXBwbGljYXRpb24gdG8gZW5zdXJlIHRoYXQgaXQgcmVhY2hlcyB1cyBmb3IgY29uc2lkZXJhdGlvbi4gWW91IG11c3QgYWxzbyBlbnN1cmUgdGhhdCB5b3VyIGFwcGxpY2F0aW9uIHJlYWNoZXMgdXMgb24gdGltZSB0byBiZSBjb25zaWRlcmVkIGZvciBlbnRyeSBvbiB0byB5b3VyIGNob3NlbiBjb3Vyc2UuIApXaGVuIEkgd2FzIGdyb3dpbmcgdXAgb25lIG9mIG15IHVuY2xlcyB3YXMgcXVpdGUgc3VjY2Vzc2Z1bCwgYW5kIGV2ZXJ5IHRpbWUgd2Ugc2F3IGhpbSBoZSB3b3VsZCBzbGlwIHVzIGVhY2ggJDIwLiBIZSB3YXMgbmV2ZXIgY2xhbmRlc3RpbmUgYWJvdXQgaXQsIGFsbCBvdXIgcGFyZW50cyBrbmV3LCBoZSB3b3VsZCBqdXN0IHNob3cgdXAgYW5kIG91dCBjb21lcyB0aGUgKHByb2JhYmx5IHNtYWxsZXIgdGhhbiBJIHJlbWVtYmVyaW5nKSBtb25leSBjbGlwLgpJZiBJIHJlY2FsbCBjb3JyZWN0bHksIG1hbnkgc2Vhc29ucyBvZiBTdGFyIFRyZWs6IFRORyB3ZXJlIHNob3QgYXQgYSBoYXJyb3dpbmcgc2NoZWR1bGUgb2YgYXBwcm94aW1hdGVseSBhbiBlcGlzb2RlIGEgd2Vlay4gVGhhdCBzb3VuZHMgcmF0aGVyIGh1cnJpZWQsIGJ1dCBpZiB5b3Ugbm90ZSB0aGF0IFNUOlRORyBoYWQgc2Vhc29ucyB3aXRoIDI2IGVwaXNvZGVzIGluIHRoZW0sIHlvdSByZWFsaXplIGl0IGlzIGFuIGFic29sdXRlbHkgY3Jhenkgc2NoZWR1bGUhIEV2ZXJ5IGVwaXNvZGUgd2FzIGl0cyBvd24gc3RvcnksIGFuZCB0aGUgd2hvbGUgaGludGVkIHRvd2FyZHMgYSBiaWdnZXIgdGhlbWUgYnV0IHRoYXQgd2FzIGFib3V0IGl0IHVudGlsIHRoZSBmaW5hbGUgY2FtZS4uIApQZW9wbGUgYXJlIHVuZm9ydHVuYXRlbHkgb2Z0ZW4gd3JvbmcgYWJvdXQgd2hlbiB0aGluZ3MgYXJlIGNvdmVyZWQsIHNvbWV0aW1lcyBpbnRlbnRpb25hbGx5IHNvIHRoZXkgY2FuIHNwb2lsIHRoaW5ncywgYnV0IG1vc3RseSBqdXN0IGJlY2F1c2UgdGhleSBmb3JnZXR0aW5nIHRoaW5ncyBhIGJpdC4uIApUaGUgZmVhciBvZiBsb3NpbmcgeW91ciBzdGFjayBjYW4gbWFrZSBpdCBoYXJkIHRvIGNvbW1pdCB3aGVuIHlvdSBvdWdodCB0bywgYmVjYXVzZSBvZiB0aGUgZmVhciBvZiBsb3NzLi4gCkhlIHNob3VsZCBoYXZlIGF0IGxlYXN0IGV4cGxhaW5lZCB0aGUgc2Vjb25kIGFpciBzdHJpa2VzIGluIGEgd2Vlay4gClBhcnQgMzogRXhlY3V0aW5nIHlvdXIgYWdpbGUgc3RvcmllcwpCdXQgdGhpcyBmdWNrZXIgd2FzIG91dCBvZiB0aGlzIHdvcmxkIGh1dXV1dWdlLiAKRGVwYXJ0bWVudCBvZiBFZHVjYXRpb24gc28gdGhhdCB0aGUgc2Nob29sIG1pZ2h0IGFnYWluIGFjY2VzcyBmZWRlcmFsIHNjaG9sYXJzaGlwIGZ1bmRpbmcuIApIb3dldmVyLCB0aGVyZSB3YXMgYSBmYWxsb3V0IG92ZXIgbWlzc2luZyBmdW5kcyB3aXRoIExvcGV6IGFjY3VzaW5nIHRoZSB2aWN0aW0gb2Ygc3RlYWxpbmcgYW5kIGtpY2tpbmcgaGVyIG91dCBvZiB0aGUgYXBhcnRtZW50LCBoZSB0b2xkIHBvbGljZS5Mb3BleiBkZW1hbmRlZCB0aGUgd29tYW4gcGF5IGhlciAkMywwMDAgb3Igc2hlIHdvdWxkIHNlbmQgInByb3ZvY2F0aXZlIiBwaG90b3MgdG8gaGVyIGh1c2JhbmQsIHdoaWNoIHNoZSBldmVudHVhbGx5IGRpZC5UaGUgd29tYW4gdG9sZCBpbnZlc3RpZ2F0b3JzIHNoZSB0cmF2ZWxlZCB0byBhbmQgZnJvbSBNZXhpY28gc2V2ZXJhbCB0aW1lcywgYnV0IHJldHVybmVkIGJlY2F1c2UgU29saXMgdGhyZWF0ZW5lZCBoZXIuIEhlIHNhaWQgaGUga25ldyB3aGVyZSBzaGUgbGl2ZWQgYW5kIHdvdWxkIHNlbmQgc29tZW9uZSB0byBoYXJtIGhlciBhbmQgaGVyIHNvbi5GaW5hbGx5LCBzaGUgd2VudCB0byBwb2xpY2UuTG9wZXogImtuZXcgdGhhdCBydW5uaW5nIHRoZSBicm90aGVsIHdhcyBpbGxlZ2FsLCBidXQgc2hlIG5lZWRlZCBtb25leSB0byBwYXkgaGVyIGJpbGxzLCIgc2hlIHRvbGQgcG9saWNlLk90aGVyIHNleCB3b3JrZXJzT25lIG9mIHRoZSBvdGhlciB3b21lbiBmb3JjZWQgaW50byBwcm9zdGl0dXRpb24gc2FpZCBzaGUgcmVzcG9uZGVkIHRvIGFuIGFkIHRvIGRvIG1hc3NhZ2VzLiAKQWx0aG91Z2ggbWFueSBkaWZmZXJlbnQgY3VsdHVyZXMgaGF2ZSB1c2VkIG1hc3NhZ2UgYXMgYSBmb3JtIG9mIHRoZXJhcHkgZm9yIHRob3VzYW5kcyBvZiB5ZWFycywgaXQncyBwb3NzaWJsZSB0byB0cmFjZSB0aGUgaGlzdG9yeSBvZiB0aGUgaGVhZCBhbmQgc2NhbHAgbWFzc2FnZSB0byBJbmRpYS4gCkl0IHMgdGhlIG1vc3QgZmFtb3VzIG1vbnVtZW50IG4gSXN0YW5idWwgYW5kIGRhdGVzIGJhY2sgZnJvbSA1MzchIEl0IGh1Z2UsIGRvbWVkIGNlbG5nIHMgcHJldHR5IG5zYW5lIHRvIHNlZS4gClRoYXQgbm90IGZ1bm55IHRvIG1lIGJlY2F1c2UgSSBleHBlcmllbmNlZCBwZW9wbGUgdGFraW5nIHRoYXQgb3V0c2lkZSB0aGUgcmVhbG0gb2Ygam9rZXMgdG8gbWUgYW5kIHRyZWF0aW5nIG1lIGFzIGlmIEkgYW0gb2Jub3hpb3VzIG9yIHN0dXBpZC4gClNvIGFmdGVyIDEyIGZ1bGwgd2Vla2VuZHMgb2YgaGFyZCBsYWJvciBpbiB0aGUgcmFpbiBhbmQgc25vdyAoYmVjYXVzZSBpdCB0b29rIHdheSBsb25nZXIgdGhhbiBleHBlY3RlZCksIEkgZmluYWxseSBidWlsdCBhIGNoaWNrZW4gY29vcCBmb3IgJDMwMDAuIApUaGUgdHJ1dGg6IFNvbWVib2R5IHdhbnRzIGEgZGl2b3JjZS4gRSEgaGFzIHNwb3R0ZWQgTm9yZGVncmVuIG91dCBhbmQgYWJvdXQgd2l0aG91dCBoZXIgd2VkZGluZyByaW5nIHR3aWNlIHNpbmNlIHRoZSBpbmNpZGVudDsgcGx1cywgc291cmNlcyBjbG9zZSB0byB0aGUgcGFpciB0ZWxsIHRoZSBFISBuZXdzIHRlYW0gdGhleSB0aGluayBhIGRpdm9yY2UgaXMgImRlZmluaXRlbHkiIGluIHRoZSB3b3JrcyBhbmQgdGhhdCBUaWdlciAiZGVmaW5pdGVseSIgaXMgbm90IGdldHRpbmcgYmFjayB3aXRoIEVsaW4uIApPdXRsaW5pbmcgdGhlIGJyaWxsaWFudCBpZGVhIHRoYXQgdGhlIFVTIHNob3VsZCBtYWludGFpbiBpdHMgc3VwZXJwb3dlciBzdGF0dXMgdGhyb3VnaCBtaWxpdGFyeSBtaWdodC4gCk9rYXksIGl0IGJlZW4gYSBqb2tlIGZvciB5ZWFycywgYXMgd2VsbCBhcyBhIHNlcmlvdXMgYW5hbHlzaXMuIG1hcnJpYWdlIGlzIGEgY29uc2VydmF0aXZlIHBsb3QsIGEgd2F5IG9mIHRha2luZyB0aGUgYWx0ZXJuYXRpdmUgb3V0IG9mIGFsdGVybmF0aXZlIGxpZmVzdHlsZSwgYW5kIGZvcmNpbmcgZ2F5cyBhbmQgbGVzYmlhbnMgdG8gImdyb3cgdXAiIGFuZCBjb25maW5lIHRoZWlyIHNleHVhbCBpbXB1bHNlcyB0byB0aGUgY29uanVnYWwgYmVkIHNvIHRoYXQgc3RyYWlnaHQsIG1hcnJpZWQgcGVvcGxlLCBib3JlZCBvdXQgb2YgdGhlaXIgbWluZHMgd2l0aCBvbmUgYW5vdGhlciwgd291bGRuIGhhdmUgdG8gZmVlbCBpZiB0aGVpciBvd24gbGlmZXN0eWxlcyB3ZXJlIHNvIHVuc2F0aXNmYWN0b3J5LgpJbiBvdGhlciB3b3JkcywgdGhleSBhcmUgdGhpbmtpbmcgZXhhY3RseSB3aGF0IHlvdSBhcmUgdGhpbmtpbmcgYWJvdXQgdGhlbXNlbHZlcy4gVGhleSBhcmUgYmVhdGluZyB0aGVtc2VsdmVzIHVwIGZvciBzdHV0dGVyaW5nLCBvciBzYXlpbmcgInlvdSB0b28iIHRvIHRoZSB3YWl0ZXIgd2hvIHNhaWQgImhhdmUgYSBuaWNlIG1lYWwiLCBvciBmb3IgdGhlaXIgYXdrd2FyZCBpbnRlcmFjdGlvbnMgb24gdGhlIGVsZXZhdG9yIGluIHRoZWlyIGFwYXJ0bWVudCBidWlsZGluZy4KIkl0IHdhcyBhbiBvdmVyc2lnaHQgbm90IHRvIGRvIHRoYXQgbGFzdCBuaWdodCwgYW5kIEkgaGF2ZSBhcG9sb2dpc2VkIHRvIGhpbSBhYm91dCB0aGF0LCBiZWNhdXNlIGl0IGNlcnRhaW5seSB3YXMgbmV2ZXIgbXkgaW50ZW50aW9uIHRvIGRvIHRoYXQsIiBzaGUgc2FpZC4KQW5kIHRoZXJlIGhlIHdhczogU2FtdWVsIE1vcnNlLiAKUG9rZXIgaXMgYW4gZXh0cmVtZWx5IGRpZmZpY3VsdCBnYW1lIHRvIGJlIHN1Y2Nlc3NmdWwgaW4sIGFuZCB0aGUgd29yZCAiZWFzeSIgc2hvdWxkbiBiZSB0b3NzZWQgYXJvdW5kIHdoaWxlIGRpc2N1c3Npbmcgc3VjY2VzcyBwcm9iYWJpbGl0aWVzLiBBbG1vc3QgZXZlcnkgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciB0b2RheSBzdGFydGVkIG91dCBsaWtlIHlvdSBhbmQgSTogd2l0aCBhIHNtYWxsIGJhbmtyb2xsIGF0dGVtcHRpbmcgdG8gZ3JpbmQgaXQgb3V0IHBsYXlpbmcgY2FzaCBnYW1lcywgU05HIG9yIE1UVCBNYXliZSBhIG1peHR1cmUgb2YgdGhvc2UgMy4gVGhlIG9ubHkgY2F0Y2ggaXMgdGhhdCBhbG1vc3QgZXZlcnkgcHJvIHRvZGF5IHdhcyBncmluZGluZyBhZ2FpbnN0IG9wcG9uZW50cyAxMCB5ZWFycyBhZ28gd2hvIHdlcmUgc2lnbmlmaWNhbnRseSB3b3JzZSB0aGFuIHRoZSBhdmVyYWdlIG9wcG9uZW50IHRvZGF5LiAKVGhlIGJpZ2dlc3QgcGllY2Ugb2YgYWR2aWNlIG9uIHdyaXRpbmcgYSBtZWFuaW5nZnVsIGxldHRlciBhYm91dCB3aGF0IHNoZSBkb2VzIGZvciB5b3UgYXMgYSBzdHVkZW50LCBpcyB0byBub3Qgb25seSB0YWxrIGFib3V0IHdoYXQgd2FzIGdyZWF0IGFib3V0IGhlciBhbmQgaGVyIHRlYWNoaW5nICh3aXRoIGV4YW1wbGVzISksIGJ1dCBhbHNvIHdoYXQgaW1wYWN0IHRoZSBjbGFzcyBoYWQgb24geW91LCB5b3VyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIG1hdGVyaWFsLCB5b3VyIHBlcnNwZWN0aXZlLCB5b3VyIHRob3VnaHRzIGFib3V0IHlvdXIgZnV0dXJlIHdpdGhpbiB0aGUgZmllbGQsIG90aGVyIGNsYXNzZXMsIGZ1dHVyZSBwcm9mZXNzaW9ucywgZXRjLiBJbiBteSBvcGluaW9uLCB0aGUgc3Ryb25nZXN0IGFuZCBtb3N0IG1lYW5pbmdmdWwgcHJhaXNlIEkgaGF2ZSBnb3R0ZW4gZnJvbSBzdHVkZW50cyBoYXMgYmVlbiB0aGUgcHJhaXNlIHJlZ2FyZGluZyB0aGUgImJpZyBwaWN0dXJlIiBhbmQgdGhlIGxhc3RpbmcgaW1wYWN0IEkgaGFkIG9uIHN0dWRlbnRzLiBUaG9zZSBsZXR0ZXJzIGdpdmUgbWUgdGhlIHN0cm9uZ2VzdCB3YXJtIGZ1enppZXMsIGFuZCBhcmUgdGhlIHRoaW5ncyB0aGF0IGFyZSBtb3N0IGhlbHBmdWwgdG8gbWUgZm9yIHJldGVudGlvbiBhbmQgdGVudXJlIHJldmlld3MuLiAKQSBmZXcgd2Vla3MgbGF0ZXIgV2FycmVuIHByb3Bvc2VkIG1hcnJpYWdlIGFuZCBhIG5ldyBsaWZlIGFzIGEgY2hpY2tlbiBmYXJtZXIuLiAKU28gd2UgYXJlIGxlZnQgd2l0aCBXbGFkaW1pciBLbGl0c2Noa28uIApHaW92aW5jbydzIGRlY2lzaW9uIHRvIGxlYXZlIFRvcm9udG8gZm9yIFNhdWRpIEFyYWJpYSdzIEFsIEhpbGFsIEZDIGR1cmluZyB0cmFpbmluZyBjYW1wIGFkZGVkIHRvIHRoZSB1cmdlbmN5IG9mIHRoZSBzaWduaW5nLgpPbiB0aGUgb3RoZXIgaGFuZCwgeW91IHdhbnQgeW91ciBneW0gZ29lcnMgdG8gYmUgYWJsZSB0byBkbyBzYWlkIHdvcmtvdXQgaW4gYSBzYWZlIGFuZCBwZXJzb25hbGx5IGZ1bmN0aW9uYWwgbWF0dGVyLi4gClBlbmd1aXNoZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNiBob3VycyBhZ28KU2hlIHNhaWQgd2VsbCB0aGF0IHRoZSB3YXkgaXQgaXMsIHNvIHRvdWdoLiBJIHdhbGtlZCB1cCBhIGNvdXBsZSBmbGlnaHRzIG9mIHN0YWlycywgdG8gdGFsa2VkIHRvIGEgbWFuYWdlciBpbiB0aGUgc2FtZSBob3NwaXRhbCBpbiBhbm90aGVyIGRlcGFydG1lbnQgYW5kIHNhaWQgSSB3aWxsIGNvbWUgd29yayBmb3IgeW91IHdoZW4gSSBnZXQgYmFjayBmcm9tIG15IDYgd2VlayB2YWNhdGlvbiBpZiB5b3Ugd2FudCBtZSB0by4gClRoZSBtYWluIGlkZWEgaGVyZSBpcyB0aGF0IGl0IG1vcmUgZGlmZmljdWx0IHRvIGZpbmQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNwZWNpZmljIGZsYXZvciB5b3UgbGVhcm5pbmcsIHVubGVzcyB5b3Uga25vdyBleGFjdGx5IGhvdyB0byBzZWFyY2ggZm9yIHRoZSByaWdodCB0aGluZy4gCkluIHlvdXIgaGVhZCBpdCB3YXMgcHJvYmFibHkgYmVjYXVzZSB0aGUgJDE5MDAgd2FzbiByZWFsLCBpdCB3YXMgYWxsIHByb2ZpdCBmcm9tIHRoZSBmaXJzdCAkMTAwLiBBbHNvLCBpZiB5b3UgcmFuIHVwICQxMDAgJDE5MDAgSSBhc3N1bWUgeW91IHdlcmVuIHBsYXlpbmcgLjA1Ly4xMCBvciBldmVuIC4xMC8uMjUsIHdoZXJlIHlvdSByZWFsbHkgc2hvdWxkIGhhdmUgYmVlbiBwbGF5aW5nLCBpZiBub3QgbG93ZXIgd2l0aCBhICQxMDAgYmFua3JvbGwuIApJbiBWZXJtb250LCB0aGV5IGF2ZXJhZ2VkICQyNy45MSBwZXIgaG91ciwgb3IgJDU4LDA1MCBwZXIgeWVhciwgd2hpbGUgaW4gUmhvZGUgSXNsYW5kLCBwYXkgYXZlcmFnZWQgJDI2LjI5IGhvdXJseSBhbmQgJDU0LDY4MCBhbm51YWxseS4uIApQb3NpdGlvbmluZyB0aGlzIGJ1c2luZXNzIGluIGFuIGFyZWEgb2YgdXBwZXIgbWlkZGxlIGNsYXNzIGFuZCBhZmZsdWVudCBwZW9wbGUgY2FuIGxlYWQgdG8gc3VjY2Vzcywgd2hpY2ggbWFrZXMgbG9jYXRpb24gYSBzdHJlbmd0aCBhcyB3ZWxsLiBPdGhlciBwb2ludHMgdGhhdCBib2RlIHdlbGwgYXJlIHRoZSBwb3NzaWJpbGl0aWVzIG9mIG9mZmVyaW5nIG1hbnkgZGlmZmVyZW50IHR5cGVzIG9mIHNlcnZpY2VzLCBzdWNoIGFzIGhlYXRlZCBzdG9uZSBtYXNzYWdlLCBkZWVwIHRpc3N1ZSB0cmVhdG1lbnRzLCBhbiBhc3NvcnRtZW50IG9mIGZhY2lhbHMgYW5kIGJvZHkgbG90aW9ucyBhbmQgb2lscywgZm9ybXMgb2YgaHlkcmF0aW9uIHRoZXJhcGllcyBhbmQgYXJvbWF0aGVyYXB5LiAKQXZhaWxhYmxlIGluIGxpbWl0ZWQgZWRpdGlvbiB3aW50ZXIgd2hpdGUgZXhjbHVzaXZlbHkgYXQgQmVzdCBEYXkgRXZlci4uIApBIGdvb2QgcG9rZXIgZmFuIGlzIHZlcnkgY2F1dGlvdXMgYWJvdXQgYmVzdCBwb2tlciBidXlzLiAKQXMgdmljZSBwcmVzaWRlbnQgb2YgdGhlIGJvYXJkIGFuZCBhIG1lbWJlciBvZiB0aGUgZXhlY3V0aXZlIGNvbW1pdHRlZSwgaGUgbGVkIHRoZSBmb3VuZGF0aW9uIGludG8gYSBuZXcgZXJhIG9mIGZ1bmRyYWlzaW5nIGFuZCBjb21tdW5pdHkgaW52b2x2ZW1lbnQuIApJIGRpZG4ndCBncmFzcCB3aGF0IGEgY29tcGxleCBnYW1lIGl0IHdhcyB3aGVuIEkgZ290IGludG8gaXQuIEEgZmV3IG1vbnRocyBpbiwgSSB0aG91Z2h0LCBnb3QgdGhpcywgaXQnbGwgYmUgZ29vZCwgaXQgYmUgYSBmdW4gYm9vay4gClJlcG9ydGVyOiBTaGUgd291bGQgbGllIGxvdyBmb3IgdHdvIHllYXJzLCB3cml0aW5nIGEgYm9vaywgIk1vbGx5J3MgZ2FtZSwiIGFib3V0IGhlciBqb3VybmV5IHRocm91Z2ggdGhlIHdvcmxkIG9mIGNlbGVicml0aWVzLCBiaWxsaW9uYWlyZXMgYW5kIHBva2VyIHdpdGhvdXQga25vd2luZyB0aGUgZW5kaW5nLiBVbnRpbCB0aGUgRkJJIGZpbmFsbHkgY2F1Z2h0IHVwIHdpdGggaGVyLiAKSGVyOiBIZSBJUyBjcmF6eS4gV2FudCB0byB0b3VjaCBteSBidXR0IGZvciBsdWNrLgpUcnVseSBhIG1pbm9yIGluY29udmVuaWVuY2VzLCByZWFsbHkuIC9zWW91IGRvIHJlYWxpemUgdGhlIEJlbGdpYW4gQ29uZ28gZGlkbiBiZWdpbiBpbiB0aGUgNTAgNjAgcmlnaHQuVGhleSBiZWxpZXZlZCB0aGV5IHdlcmUgYmVpbmcgcm9iYmVkVGhlIHdlcmUgYmVpbmcgcm9iYmVkLiBUaGUgcHJvZml0cyBvZiB0aGUgbmF0dXJhbCByZXNvdXJjZXMgZXhvbG9pdGVkIGFzIGluIGFsbCBjb2xvbmlhbCBuYXRpb25zIHdlcmUgZnVubmVsbGVkIHRvIHRoZSBtYWlubGFuZCB1c2luZyB2YXJpb3VzIG1ldGhvZHMuIFRoZSBDb25nbyBzYXcgbGl0dGxlIG9mIGl0IGFuZCBoYWQgbm8gc2F5IG9uIGhvdyB0byBwdXQgc2FpZCBwcm9maXRzIHRvIHVzZS5UaGUgcHJvYmxlbSBoZXJlIGlzIHRoYXQgeW91IGNvbXBhcmluZyBhIGJhZCBzaXR1YXRpb24oY29sb25pYWxpc20pIHRvIHNvbWUgaWRlYWxpemVkIGZpY3Rpb25hbCB2ZXJzaW9uTm8sIEkgaG9sZGluZyBpdCB0byB3aGF0IHdlIGFjdHVhbGx5IGRpZCBhbmQgd2hhdCBpdCB3YXMgYW5kIHdoYXQgdGhlIGluZGlnZW5vdXMgcGVvcGxlIHdhbnRlZC5Ib3cgaGFyZCBpcyBpdCB0byBhZG1pdCB0aGF0IGNvbG9uaWFsaXNtIHdhc24gaWRlYWxOb3cgSSBrbm93IHdoYXQgbXkgS29yZWFuIG1vdGhlciBpbiBsYXcgZmVlbHMgd2hlbiBkZWFsaW5nIHdpdGggaGVyIG93biBpbiBsYXdzIHJlZ2FyZGluZyBjb2xvbmlhbGlzbS4gClRoaXMgeWVhckdvb2RieWUgZnJpZW5kLCBJIHBsZWFzZSBob3BlLiAKTXl0aCA5OiBBc2lhbiBndXlzIG5ldmVyIG1ha2UgdGhlIGZpcnN0IG1vdmUuIApCb25kIGlzIHJhcmVseSBvdXQgb2YgdGhlIGNhc2luby4gT3ZlciB0aGUgZGVjYWRlcywgaGUgaGFzIGV4Y2VsbGVkIGF0IGdpbiwgYmFjY2FyYXQgYW5kIHBva2VyIHRoZSBsYXR0ZXIgZ2FtZSBmb3JtZWQgYWxtb3N0IHRoZSBlbnRpcmUgZm9jYWwgcG9pbnQgb2YgMjAwNiByZWJvb3QgQ2FzaW5vIFJveWFsZS4KWW91ciBleWViYWxsIGlzbiBvbmUgdGhpbmcsIGl0IG1hbnkgdGhpbmdzLiBTbyB0aGF0IHByb3RlaW4gaW5zdGVhZCB0dXJucyBvbiBvdGhlciBwYXJ0cyBvZiB5b3VyIEROQSwgbGlrZSB0aGUgImJ1aWxkIGEgcmV0aW5hIEROQSIuIApJIGxpdGVyYWxseSBoYWQgYSBmcmllbmQgZG8gdGhpcyB0byBtZS4gU2hlIHJlcXVpcmVkIDIgd2Vla3Mgb2ZmIG9mIHdvcmsgZm9yIHRoZSBicmlkYWwgc2hvd2VyLCBCYWNoZWxvcmV0dGUgcGFydHksIHByZXdlZGRpbmcgcGFydHkgYW5kIHdlZGRpbmcuIEVhY2ggb25lIHdhcyBzZXZlcmFsIGRheXMgYW5kIGEgZGVzdGluYXRpb24scmVxdWlyZWQgYSBnaWZ0LCBhbmQgcmVxdWlyZWQgdGhlIGJyaWRhbCBwYXJ0eSB0byBmdW5kIHRoZW0gaW5jbHVkaW5nIHRoZSBicmlkZXMgcG9ydGlvbnMuIEl0IHRvdGFsZWQgJDMwMDAuIEkgbm9wZWQgdGhlIGZ1Y2sgb3V0IG9mIHRoYXQgYWZ0ZXIgdHJ5aW5nIHRvIHVuc3VjY2Vzc2Z1bGx5IGV4cGxhaW4gdGhhdCBJIGRvIG5vdCBoYXZlICQzayBub3IgMiB3ZWVrcyBvZmYgd29yayB0byBnaXZlIHRvIGhlciB3ZWRkaW5nLiBUaGUgd29yc3QgcGFydCB3YXMgdGhhdCBteSBTTyB3YXMgaW4gdGhlIGdyb29tcyBwYXJ0eSBhbmQgaGFkIHNpbWlsYXIgcmVxdWlyZW1lbnRzIHNvIHRoZSBjb3VwbGUgd2FzIGxpdGVyYWxseSBhc2tpbmcgdXMgdG8gc3BlbmQgNmsgb24gdGhlaXIgd2VkZGluZy9wYXJ0aWVzLgpCdXQgYmVmb3JlIHdlIHNpbmdsZSBvdXQgQm9laHJpbmdlciBmb3IgdGhlaXIgZmFpcmx5IHRyYW5zcGFyZW50IGVmZm9ydCB0byBtYW5pcHVsYXRlIEFtZXJpY2FuIHdvbWVuIGZvciBwcm9maXQsIGl0IHdvcnRoIHRha2luZyBhIHN0ZXAgb3IgdHdvIGJhY2sgdG8gdGhlIHN0cnVjdHVyYWwgbGV2ZWwgdG8gc2VlIHdoYXQgaXMgd3Jvbmcgd2l0aCB0aGUgc3lzdGVtIGFzIHdlbGwgYXMgdGhpcyBwYXJ0aWN1bGFyIGNvbXBhbnkgYW5kIHRoaXMgcGFydGljdWxhciBkcnVnLiBTeXN0ZW0gb2YgY29tbWVyY2lhbGl6ZWQgbWVkaWNpbmUgaXMgZGFuZ2Vyb3VzIGJlY2F1c2UgaXRzIHByaW1hcnkgcHVycG9zZSBpcyBwcm9maXQsIGFuZCB0aGUgb25seSB3YXkgdG8ga2VlcCBwcm9maXRzIGNvbWluZyBpcyB0byBpbmNyZWFzZSBzYWxlcy4gVGhlIG9ubHkgd2F5IHRvIGluY3JlYXNlIHNhbGVzIGlzIHRvIGluY3JlYXNlIGRlbWFuZC4uIAoiSXQgaXMgdGhlIG1vc3QgYXdmdWwgbWlzdGFrZSwgd2hpY2ggaGFwcGVuZWQgYmVjYXVzZSBJIG1hZGUgbm90ZXMgZnJvbSB2YXJpb3VzIGJvb2tzIGFzIEkgd2VudCBhbG9uZyBhbmQgdGhlbiBsb3N0IHRoZSBub3RlYm9vayB0ZWxsaW5nIHdoZXJlIHRoZXkgY2FtZSBmcm9tLCIgaGUgZXhwbGFpbmVkIHRvIGEgcmVwb3J0ZXIgYXQgdGhlIHRpbWUuIApEYW5zIGxlIGRvbWFpbmUganVyaWRpcXVlLCBlbGxlcyBzb250IHF1YXNpIGluZXhpc3RhbnRlcy4gCkF0bWFkb2cgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSkpUaXp6bGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwpIb3dldmVyLCBoZSBoYXMgbm90IHByb3Bvc2VkIGFuZCBoYXMgbm8gcGxhbnMgKGZpbmFuY2lhbGx5KSB0byBzYXZlIGZvciBhIHdlZGRpbmcgb3IgaG91c2UuIApObyBnaXJsIHRoaW5rcyBhYm91dCB0aGlzIGNvbnNjaW91c2x5LCBvciBtYXkgbm90IGV2ZW4gbm90aWNlIGl0IGNvbnNjaW91c2x5LCBidXQgd2UgZG8gc3ViY29uc2Npb3VzbHkuIFNvIHRoZW4geW91IGdldCB0aGVzZSBzdHVwaWQgZ2FtZXMgdGhhdCBhcmUgcmVpbmZvcmNlZCBieSBvdGhlciB3b21lbiwgZGVzcGl0ZSBtZW4gdmVyeSBjbGVhcmx5IGRpc2xpa2luZyBpdC4gVGhlIHByb2JsZW0gaXMsIHdlIG1pZ2h0IGFzc3VtZSB5b3UncmUgdGhlIHNhbWUuIEl0J3Mgc28gaGFtbWVyZWQgaW50byB1cyB0aGF0IHBlb3BsZSBkb24ndCBtZWFuIHdoYXQgdGhleSBzYXkgdGhhdCBtYW55IHdvbWVuIGNhbid0IHJlYWxseSBhY2NlcHQgYSBibHVudCBhbnN3ZXIgYmVjYXVzZSBpdCdzIHNvIHNpbXBsZS4gSXQncyBsaWtlIGRvaW5nIGxvbmcgZGl2aXNpb24gbWF0aCB5b3VyIGVudGlyZSBsaWZlLCB0aGlua2luZyBldmVyeW9uZSBlbHNlIGRvZXMgaXQsIGFuZCBzZWUgc29tZW9uZSBkb2luZyBzaG9ydCBkaXZpc2lvbi4gSXQncyBjb25mdXNpbmcgYmVjYXVzZSBpdCB3YXMgdGhlIG9ubHkgd2F5IHlvdSBrbmV3IGhvdyB0byBkbyBpdCwgc28gdGhleSBtdXN0IG5vdCBiZSBmaW5pc2hlZCwgcmlnaHQ/CkF0IHRoZSBlbmQgb2YgaXQgSSBjYW1lIGJhY2sgYmVjYXVzZSBzaGUgZ290IGRpYWdub3NlZCB3aXRoIGNhbmNlci4gV2hpbGUgc2hlIHdhcyBzaWNrIEkgd29ya2VkIHRocmVlIGpvYnMgdG8gc3VwcG9ydCB1cy4gRHVyaW5nIHRoYXQgdGltZSwgd2hpbGUgaGVyIHByb2dub3NpcyB3YXNuJ3QgeWV0IGNlcnRhaW4uIEZvciBhYm91dCBhIHllYXIgb3Igc28gc2hlIHdhcyBsaWtlIHRoZSBvbmUgSSByZW1lbWJlciB3aGVuIHdlIGZpcnN0IG1ldC4gClNoZSB3YXMgYm9ybiBvbiAyOHRoIE1hcmNoIDE5ODYgaW4gTmV3IFlvcmsgQ2l0eS4gCk1heWJlIGFzIGEgcmVmcmVzaGVyLCBtYXliZSBiZWNhdXNlIHRoZXkgdGhvdWdodCB0aGF0IHRoaXMgZW1wbG95ZWUgY291bGQgaW1wcm92ZSB0aGVpciBjdXN0b21lciBpbnRlcmFjdGlvbnMuLiAKQnkgSm9zaCBEdWJvdywKU2FsZXMgb2YgbmV3IGhvbWVzIGluIFRvcm9udG8gc3VuayB0byB0aGUgbG93ZXN0IGluIGFsbW9zdCB0d28gZGVjYWRlcyBpbiAyMDE4IGFuZCB0aGUgc3VwcGx5IG9mIHVuc29sZCBjb25kb3MgcGlsZWQgdXAsIGFjY29yZGluZyB0byB0aGUgQnVpbGRpbmcgSW5kdXN0cnkgYW5kIExhbmQgRGV2ZWxvcG1lbnQgQXNzb2NpYXRpb24gcmVwb3J0IHJlbGVhc2VkIEZlYi4gCkFsbCBzcG90IG9uIGFkdmljZS4gT25seSBJIHdvdWxkIHByb2JhYmx5IGFkZDogbW92ZS4gTW92ZSBhY3Jvc3MgdGhlIGNvdW50cnkuIApMaWtlLCBlc3BlY2lhbGx5IGluIEdBLCBoZSBzdHJvbmcsIGJ1dCBoZSByZWxpZXMgaGVhdmlseSBvbiBpbmZhbnRyeS4gCkdob3N0aW5nIGhhcyBiZWVuIGEgdGhpbmcgc2luY2UgdGhlIGJlZ2lubmluZyBvZiB0aW1lLiBUaGlzIHN1YnJlZGRpdCBpcyBub3QgYSBjcm9zcyBzZWN0aW9uIG9mIHRoZSBhdmVyYWdlIHBvcHVsYXRpb24uIFRoaXMgc3ViIHJlZGRpdCBpcyBhIGNvbGxlY3Rpb24gb2Ygc2FkIHBlb3BsZSB3aG8gbWFrZSBiYWQgZGVjaXNpb25zIGFuZCB3b3VsZCByYXRoZXIgYXNrIGZvciBoZWxwIGZvcm0gY29tcGxldGVseSB1bnF1YWxpZmllZCBzdHJhbmdlcnMgdGhlbiBnZXQgYWN0dWFsIGhlbHAgdGhhdCB3b3VsZCByZXF1aXJlIHRoZW0gdG8gcHV0IGluIGVmZm9ydC5pZmVlZWxzb2R1bWIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIHBvc3QgdGhpcyBub3QgZnJvbSB3aGF0IEkgb2JzZXJ2ZSBvbiB0aGlzIHN1YnJlZGRpdC4gClRoZXkgYXJlIHdhc3RlZnVsIHNpbmNlIHRoZXkgYXJlIG5vdCBnb29kIHdpdGggbWF0dGVycyBvZiBmaW5hbmNlIGR1ZSB0byBhIGxhY2sgb2YgYnVkZ2V0YXJ5IGVmZmljaWVuY3kuIFRoZSBIb3JzZSBwZXJzb24gaGFzIG1hbnkgZm9sbG93ZXJzIGJ1dCB0aGV5IGFyZSBub3QgYWx3YXlzIHJlY2VwdGl2ZSB0byBvdGhlciBwb2ludHMgb2Ygdmlldy4gCkhlIHVzZWQgdG8gdGVsbCB0aGUgZG9jdG9yOiAianVzdCBwdXQgYSBjb3VwbGUgb2Ygc3RpdGNoZXMgaW4gYW5kIEknbGwgY29tZSBpbiBhZnRlciB0aGUgZ2FtZSBhbmQgeW91IGNhbiBmaW5pc2ggdXAgdGhlIGpvYi4iCkFuIEFpciAxMDAgc2VsZmllIGRyb25lIHdpdGggYW4gSEQgYWVyaWFsIGNhbWVyYSwgYWxsIGFib3V0IHRoZSBzaXplIG9mIHlvdXIgaGFuZC4gSXRzIGNhbWVyYSB1c2VzIGZhY2lhbCByZWNvZ25pdGlvbiB0ZWNobm9sb2d5IHRvIGxvY2sgb250byB5b3VyIGZhY2UgYXMgaXQgaXMgaG92ZXJpbmcsIGFuZCBpdCBjYW4gZm9sbG93IHlvdSBhcm91bmQuIFlvdSBoYXZlIHRoZSBvcHRpb24gdG8gY29udHJvbCBpdCB3aXRoIHlvdXIgcGhvbmUsIGxpa2UgYSByZW1vdGUgY29udHJvbCwgaWYgeW91IHdhbnQgdG8gdGFrZSBhIGJpZ2dlciBncm91cCBzaG90LCBidXQgaXRzIGRlZmF1bHQgZnVuY3Rpb24gaXMgdG8gZm9jdXMgb24geW91LgpIZSBsb3ZlZCBsaWZlLCBoaXMgZmFtaWx5LCBoaXMgcG9rZXIgYnVkZGllcywgaGlzIHJldmVyZWQgbmV0d29yayBvZiBsaWZldGltZSBmcmllbmRzLCBidXQgbW9zdCBvZiBhbGwgaGUgbG92ZWQgaGlzIGNoZXJpc2hlZCBzb25zLiBUaGVyZSB3YXMgbm8gZmF0aGVyIG1vcmUgcHJvdWQuIApDaWVsbzExIHUKQWxsIHRoZWlyIHRoZXJhcGlzdHMgYXJlIHRyYWluZWQgc3BlY2lmaWNhbGx5IGluIGhlbHBpbmcgcGVvcGxlIHJlY292ZXIgZnJvbSBjcmltZSBiYXNlZCB0cmF1bWEsIHNvIHRoZXkgc2VlIGEgbG90IG9mIHNleHVhbCBhc3NhdWx0IHZpY3RpbXMuIFNlY29uZGx5LCBpZiB5b3UgZG8gcmVwb3J0LCB5b3UgYWxsb3dlZCB0byBhY2Nlc3MgYW4gYWR2b2NhdGUgdGhyb3VnaCB0aGUgY291cnRzIHRoYXQgY2FuIGhlbHAgeW91IG5hdmlnYXRlIHRoZSBzeXN0ZW0sIGFuZCBjYW4gZ2l2ZSB5b3Ugc29tZSBpZGVhIG9mIHdoYXQgdG8gZXhwZWN0Li4gCkF0IGJlc3QsIHdlIGluIGxpbWJvLiBXZSBjb21lIGludG8gdGhlIHdvcmxkIGFzIGEgbWVyZSByZXBsaWNhdGlvbiBvZiB0aGUgRE5BL1JOQSBvZiB0d28gcGFydGllcyBpbiBhIGZ1dGlsZSBhdHRlbXB0IHRvIGNvbnRpbnVlIHRoZSBzcGVjaWVzLiBUaGUgdmVyeSBveHlnZW4gd2UgYnJlYXRoIGlzIHBvaXNvbm91cy4gVGhlIGF0bW9zcGhlcmUgYW5kIG1hZ25ldG9zcGhlcmUgdGhhdCBwcm90ZWN0IHVzIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGZ1cmlvdXMgdW5pdmVyc2UgYXJlIGZyYWdpbGUgYW5kIGp1c3QgYW5vdGhlciByZW1pbmRlciB0aGF0IHdlIGFyZSBpbXByaXNvbmVkLiBXZSBmaWdodCB0byBzdXJ2aXZlLCBidXQgd2hhdCBhcmUgd2Ugc3Vydml2aW5nPyBUaGVyZSBpcyBub3RoaW5nIG91dCB0aGVyZSwgZXZlcnl0aGluZyBpcyBoZXJlIHdpdGggdXMsIGluIHRoaXMgY2FnZS4KWW91IGFyZSB0aGUgYm9zcy4gWW91IG1ha2UgdGhlIHJ1bGVzLCBkZWNsYXJlIHRoZW0sIHRoZW4gZW5mb3JjZSB0aGVtLiAiR3JhbmRtYSIgZG9lc24ndCBuZWVkIHRvIGJlIGNvbnZpbmNlZCwgY2Fqb2xlZCwgb3IgYWdyZWUgd2l0aCB0aGVtLgpHaXZlIEF0bGFudGEgc29tZSBjcmVkaXQgd2hlcmUgaXQgaXMgZHVlLiAKSSB3aWxsIHNheSB0aGF0IEkganVzdCBoYXZlIHRhbmdsZSBwcm9uZSBoYWlyLiBOb3QgYSBsb3QgSSBjYW4gZG8gYWJvdXQgaXQuIApJIHRoaW5rIGhlIGp1c3QgYXMgcGFzc2lvbmF0ZSBwbGF5aW5nIHBva2VyIGFzIGhlIGlzIGNvYWNoaW5nIGhpcyB0ZWFtLiBIZSByZWFsbHkgZ2V0cyBpbnRvIGl0LiBIZSByZWFsbHkgd2FudHMgdG8gd2luLiAKVGhlIHdoaXRlIG1pcnJvciBjYXBzIGl0IGNhbWUgd2l0aCB3ZXJlIHByZXR0eSBjaGVhcCBsb29raW5nIGJ1dCBJIG9idmlvdXNseSBzd2l0Y2hlZCB0aG9zZSBvdXQgZm9yIG15IE9FTSBncmV5IG9uZXMgYW55d2F5LiAK|<---