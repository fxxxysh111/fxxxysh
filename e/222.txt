--->|SSBhYnNvbHV0ZWx5IGFncmVlLCAxMDAlLiAKNCkgUHJlaGVhdCB0aGUgc21va2VyIHRvIDEwMEMuIFBsYWNlIHRoZSBzaG91bGRlciBpbiB0aGUgc21va2VyIGFuZCBjb29rIGZvciAxMCB0byAxMiBob3VycywgbWFpbnRhaW5pbmcgYSB0ZW1wZXJhdHVyZSBvZiAxMDBDLiAKSW4gdGhlIHRlcm5pb24gY29sbGVjdGlvbiB0aGVyZSBpcyBmcmVxdWVudCBhbmQgZmx1ZW50IHVzZSBvZiB0ZSByZW8gTWFvcmksIHdoaWNoIGlzIHBhcnQgb2YgUmFwYXRhaGFuYSdzIChwcmVmZXJyZWQpIGlkZW50aXR5LiBIZSBwcmVmZXJzIHRvIGlkZW50aWZ5IHdpdGggdGhlIGNvbG9uaXNlZCByYXRoZXIgdGhhbiB0aGUgY29sb25pc2Vycy4gCkZhaXRlcyBlbiBsJ2V4cHJpZW5jZSBldCB2b3VzIGpvdXJzIHNlIGRyb3VsZXJvbnQgYmllbiBkaWZmcmVtbWVudC4gSmUgcmVuY29udHJlIHNvdXZlbnQgZGVzIHBlcnNvbm5lcyBzdHJlc3NlcywgdHJzIG1vdGl2ZXMsIGZhdGlndWVzLiAKVGhlIGNvbXBhbnkgYWxyZWFkeSBoYXMgbW9yZSB0aGFuIDUsMDAwIGVtcGxveWVlcyBpbiBOZXcgWW9yayBDaXR5IGFuZCBwbGFucyB0byBjb250aW51ZSB0byBoaXJlIHRoZXJlLCBBbWF6b24gc2FpZCBvbiBUaHVyc2RheS4gQ29uZ3Jlc3N3b21hbiBBbGV4YW5kcmlhIE9jYXNpbyBDb3J0ZXosIGEgY3JpdGljIG9mIHRoZSBwcm9qZWN0IGFuZCBhIHNlbGYgZGVzY3JpYmVkIGRlbW9jcmF0aWMgc29jaWFsaXN0IHdob3NlIGRpc3RyaWN0IHNwYW5zIHBhcnRzIG9mIFF1ZWVucyBhbmQgdGhlIEJyb254LCBjaGVlcmVkIHRoZSByZXZlcnNhbCBieSB0aGUgd29ybGQgdGhpcmQgbW9zdCB2YWx1YWJsZSBwdWJsaWMgY29tcGFueS5pcyBwb3NzaWJsZTogdG9kYXkgd2FzIHRoZSBkYXkgYSBncm91cCBvZiBkZWRpY2F0ZWQsIGV2ZXJ5ZGF5IE5ldyBZb3JrZXJzIHRoZWlyIG5laWdoYm9ycyBkZWZlYXRlZCBBbWF6b24gY29ycG9yYXRlIGdyZWVkLCBpdHMgd29ya2VyIGV4cGxvaXRhdGlvbiwgYW5kIHRoZSBwb3dlciBvZiB0aGUgcmljaGVzdCBtYW4gaW4gdGhlIHdvcmxkLCBzaGUgd3JvdGUgb24gVHdpdHRlci5QZW9wbGUgYnJpZWZlZCBvbiB0aGUgZGVjaXNpb24gc2FpZCBBbWF6b24gaGFkIG1hZGUgdGhlIGRlY2lzaW9uIGVhcmx5IG9uIFRodXJzZGF5IGFtaWQgcmlzaW5nIGNvbmNlcm5zIGFib3V0IHRoZSBzbWFsbCB2b2NhbCBtaW5vcml0eS4gCkJ1dCByZW1lbWJlciwgYmFyZ2FpbnMgYW5kIGRpc2NvdW50cyBhcmUgYXZhaWxhYmxlLCBzbyBkbyBhcyBtdWNoIHJlc2VhcmNoIGFzIHlvdSBjYW4uIApUaGUgZmFjZSBvZiB0aGUgZnJhbmNoaXNlIGZvciBuaW5lIHllYXJzIGFmdGVyIGhlIHdhcyBzZWxlY3RlZCBOby4gCktpcmsgYWxzbyBkZWxpdmVyZWQgZG9tZXN0aWMgcG9saWNpZXMgdGhhdCBoYXZlIGNoYW5nZWQgTmV3IFplYWxhbmQgZm9yZXZlciwgYW5kIGZvciB0aGUgYmV0dGVyLCBtb3N0IHBlb3BsZSB3b3VsZCBhcmd1ZTogQUNDLCB0aGUgRFBCLCB0aGUgV2FpdGFuZ2kgVHJpYnVuYWwsIGFuZCBwbGVudHkgbW9yZS4gCkkgZG9uJ3QgY2xhaW0gdG8gYmUgYSBwb2tlciB3aGl6IGJ1dCBJIGRvIHBsYXkgZm9yIGEgbGl2aW5nIGFuZCBwbGF5IGV2ZXJ5IHNpbmdsZSBkYXkuIApKdXN0IGdpdmUgaGltIGNhc2guIApIaXMgc3Bva2VzbWFuIGRlbmllZCBoaXMgaW52b2x2ZW1lbnQgd2hhdHNvZXZlci4gCkFwcGxpY2F0aW9uIFByb2Nlc3MgSWYgeW91J3JlIGFwcGx5aW5nIGZvciBjZXJ0aWZpY2F0aW9uIHZpYSB0aGUgT2hpbyBFUEEgZXhhbSBwcm9ncmFtLCB5b3Ugc3VibWl0IHlvdXIgYXBwbGljYXRpb24gdG8gdGhlIEVQQSwgY2hvb3NpbmcgeW91ciBwcmVmZXJyZWQgZXhhbSBkYXRlLiBJZiB5b3UgbWVldCBlbGlnaWJpbGl0eSByZXF1aXJlbWVudHMgYW5kIHBhc3MgdGhlIGV4YW0sIHlvdSdsbCByZWNlaXZlIGNlcnRpZmljYXRpb24uIApUaGUgY3VycmVudCA1MiBjYXJkIGRlY2sgaXMgb2Z0ZW4gY3JlZGl0ZWQgdG8gRXVyb3BlYW4gY291bnRyaWVzLiBJbiB0aGUgZmlmdGVlbnRoIGNlbnR1cnksIEZyYW5jZSBpbnRyb2R1Y2VkIHRoZSBjdXJyZW50IHN1aXRzIG9mIGNsdWJzLCBkaWFtb25kcywgaGVhcnRzLCBhbmQgc3BhZGVzIGluIGEgZ2FtZSBjYWxsZWQgUG9xdWUuIEl0IGlzIHF1aXRlIHBvc3NpYmxlIHRoYXQgdGhlIHdvcmQgInBva2VyIiBpcyBkZXJpdmVkIGZyb20gdGhhdCB3b3JkLiBPdGhlcnMsIGhvd2V2ZXIsIGNsYWltIHRoYXQgdGhlIHdvcmQgInBva2VyIiBjb21lcyBmcm9tIHRoZSBHZXJtYW4gY2FyZCBnYW1lIHBvY2hzcGllbCBvciB0aGUgR2VybWFuIGJsdWZmaW5nIGdhbWUgcG9jaGVuLCB3aGljaCBkYXRlcyBiYWNrIHRvIHRoZSBzaXh0ZWVudGggY2VudHVyeS4gQWxzbywgdGhlIEJyaXRpc2ggYXJlIGNyZWRpdGVkIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBnYW1lcyBjYWxsZWQgIkJyYWciIGFuZCAiRmFybywiIHdoaWNoIHdlcmUgcGxheWVkIGluIG1hbnkgc2Fsb29ucyBpbiB0aGUgT2xkIFdlc3QuClByZXZpb3VzIHJlc2VhcmNoIGhhcyBsaW5rZWQgb21lZ2EgMyBmYXR0eSBhY2lkcyB3aXRoIHRoZSBwcmV2ZW50aW9uIG9mIGEgbnVtYmVyIG9mIGNhbmNlcnMsIHRoZXJlIGhhcyBiZWVuIHZlcnkgbGl0dGxlIHdvcmsgZG9uZSBvbiBvcmFsIGNhbmNlcnMgb3Igbm9ybWFsIGNlbGxzLkRyIFphY2hhcm91bGEgTmlrb2xha29wb3Vsb3UsIGNhcnJpZWQgb3V0IHRoZSByZXNlYXJjaCB3aGlsZSBzdHVkeWluZyBoZXIgUGhEIGF0IFF1ZWVuIE1hcnksIHVuZGVyIHRoZSBzdXBlcnZpc2lvbiBvZiBQcm9mZXNzb3IgUGFya2luc29uIGFuZCBQcm9mZXNzb3IgQWRpbmEgTWljaGFlbCBUaXR1cywgd2hvIGlzIGNvIG9yZGluYXRpbmcgYSBwcm9ncmFtbWUgb2Ygd29yayBvbiB0aGUgcHJvdGVjdGlvbiBvZiB0aGUgbmVydm91cyBzeXN0ZW0gd2l0aCBvbWVnYSAzIGZhdHR5IGFjaWRzLCBpbiB0aGUgQ2VudHJlIGZvciBOZXVyb3NjaWVuY2UgYW5kIFRyYXVtYSBhdCBRdWVlbiBNYXJ5IEJsaXphcmQgSW5zdGl0dXRlLnRoZSBkb3NlcyBuZWVkZWQgdG8ga2lsbCB0aGUgY2FuY2VyIGNlbGxzIGRvIG5vdCBhZmZlY3Qgbm9ybWFsIGNlbGxzLCBlc3BlY2lhbGx5IHdpdGggb25lIHBhcnRpY3VsYXIgZmF0dHkgYWNpZCB3ZSB1c2VkIGNhbGxlZCBFaWNvc2FwZW50YWVub2ljIGFjaWQgKEVQQSksIHRoZXJlIGlzIHBvdGVudGlhbCBmb3IgdXNpbmcgb21lZ2EgMyBmYXR0eSBhY2lkcyBpbiB0aGUgcHJldmVudGlvbiBhbmQgdHJlYXRtZW50IG9mIHNraW4gYW5kIG9yYWwgY2FuY2Vycy4gTWF5IGJlIHRoYXQgdGhvc2UgYXQgYW4gaW5jcmVhc2VkIHJpc2sgb2Ygc3VjaCBjYW5jZXJzIG9yIHRoZWlyIHJlY3VycmVuY2UgY291bGQgYmVuZWZpdCBmcm9tIGluY3JlYXNlZCBvbWVnYSAzIGZhdHR5IGFjaWRzLiAKSG93IHRvIExlYXJuIFBva2VyIFBlcmNlbnRhZ2VzCldlYmJpZTA0ICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBob3VycyBhZ28KQ29uZmlkZW5jZSBpbiBwcmljaW5nIGNvbWVzIGZyb20ga25vd2luZyB0aGUgdmFsdWUgb2YgeW91ciBwcm9kdWN0cyBvciBzZXJ2aWNlcy4gSXQgYWxzbyBjb21lcyBmcm9tIGtub3dpbmcgeW91ciBjdXN0b21lci4gQmFja2JvbmUgY29tZXMgZnJvbSBrbm93aW5nIHRoZSB0cmlja3MgeW91ciBjdXN0b21lcnMgdXNlIHRvIGdldCB5b3UgdG8gZHJvcCBwcmljZSBhbmQgaG93IHRvIGRlYWwgd2l0aCB0aGVtLi4gCk15IFBDIHdhZCB0aGUgb25lIHRoYXQgZGllZC4gClRoZSBmYWN0IHRoYXQgUlQgYXJlIHRyYW5zbWl0dGluZyBlaWdodCBlcGlzb2RlcyBvZiBjb3ZlcmFnZSByYXRoZXIgdGhhbiB0aGUgc2l4IHRoZXkgZGlkIGxhc3QgeWVhciBzaG93cyB0aGUgcG9wdWxhcml0eSBvZiB0aGUgSVBDLiAKUGx1cywgdGhlICJteSB2b2ljZSBpcyBPVVIgdm9pY2UiIHRoaW5nIHdhcyBzdXV1dXBlciBhbGFybWluZy4uIApIaXMgZmFtaWx5IHRoaW5rcyBJIHdhbGsgb24gd2F0ZXIgYW5kIHdlbGNvbWVkIG1lIGxpa2UgYSBsb3N0IGRhdWdodGVyLiAKMCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnb01hdnMgYXJlbiB0cmFkaW5nIEtQIG9yIEx1a2EgYW55IHRpbWUgc29vbi4gS1AgZ29ubmEgc2lnbiBhIG1heCBkZWFsIG9uIEp1bHkgMS4gCkJ1dCBJJ2xsIHBhc3Mgb24gb25lIGxpdHRsZSB0aWQgYnV0IGZvciB5b3UuIEFjY29yZGluZyB0byBteSBkb2N0b3IgdGhlcmUncyBldmlkZW5jZSB0aGF0IHNob3dzIGNvdW50cmllcyB0aGF0IHJlbHkgaGVhdmlseSBvbiBjb2NvbnV0IHByb2R1Y3RzIGhhdmUgYSBoaWdoZXIgbGV2ZWwgb2YgY2hvbGVzdGVyb2wgaW4gdGhlaXIgc3lzdGVtcy4gTXkgaGVhbHRoIGNvbnNjaW91cyBtaWwgZm9yIHNvbWUgcmVhc29uIGhhcyBhIHJpZGljdWxvdXNseSBoaWdoIGxldmVsIG9mIGNob2xlc3Rlcm9sLiBUaGVyZSBtYXliZSBob3BlIHlldC4KWW91ciBjb21wYW55IGJ1c2luZXNzIHByb2JhYmx5IHdvdWxkbiBiZSBkZXNjcmliZWQgYXMsICJNYWtpbmcgc3VyZSBvdXIgZW1wbG95ZWVzIG1ha2UgZnVsbCB1c2Ugb2YgdGhlIGZyaW5nZSBiZW5lZml0cyB3ZSBwcm92aWRlLCIgc28gdGhlIGRyeSwgYm9yaW5nIGNvbXBhbnkgbGl0ZXJhdHVyZSBpcyByZWFsbHkgdGhlIG9ubHkgd2F5IHlvdSBnb2luZyB0byBmaW5kIG91dCBhYm91dCB0aGlzIHN0dWZmLgpWZXJpem9uIHRoZW4gbWFrZXMgeW91IHBheSBleHRyYSBpZiB5b3Ugd2FudCBjbG91ZCBzZXJ2aWNlIG9yIGNhbGxlciBpZC9zcGFtIGJsb2NrZXIuIE9uIHRoZSB1bmxvY2tlZCB2ZXJzaW9uIHlvdSBnZXQgYWxsIG9mIHRoYXQuIApUaGUgaW50ZXJlc3RpbmcgdGhpbmcgYWJvdXQgdGhpcyBLT00gaXMgdGhhdCB1bmxpa2UgZXZlcnkgb3RoZXIgS09NIGFub3RoZXIgY2xpbWIgZGlkIG5vdCBmb2xsb3cgdGhlIHN1bW1pdGluZyBvZiB0aGUgbW91bnRhaW4gICB0aGFua2Z1bGx5LiBUaGUgZGVjZW50IHdhcyBleGNlbGxlbnQgYWx0aG91Z2ggdmVyeSBjb250cm9sbGVkIGFzIHdlIHJlY2VpdmVkIGFuIGVzY29ydCBkb3duIHRoZSBtb3VudGFpbiBmcm9tIHRoZSBzaGVycmlmZi4gSSB0aGluayBoZSB3YXMgbW9yZSBjb25jZXJuZWQgYWJvdXQgdXMgZXhjZWVkaW5nIHRoZSBzcGVlZCBsaW1pdCB0aGFuIGVuc3VyaW5nIHdlIHNhZmVseSBtYWRlIGl0IGRvd24uCklmIHlvdSBwbGFuIHRvIGdvIHRvIHRoZSByaXZlciwgeW91IG11bHRpcGx5IHlvdXIgb3V0cyBieSA0LiAKWW91IGhvbmVzdGx5IHRoZSBoYXJkZXN0IHdvcmtpbmcgb25lIGluIHlvdXIgZmFtaWx5IHJpZ2h0IG5vdyBpZiB5b3UgY291bnQgZGl2aXNpb24gb2YgbGFib3IsIGNob3JlcywgYW5kIGFtb3VudCBvZiB0aW1lIHNwZW50IHJlc3RpbmcuIApJdCBwcm9iYWJseSBiZSBncmVhdCBmb3IgbW9zdCBvZiB1cyBzaW5jZSwgZnJvbSB3ZWFyaW5nIGNsb3RoZXMgZGFpbHkgZm9yZXZlciwgbWFueSBncm93IGEgY2VydGFpbiBlbWJhcnJhc3NtZW50IGFib3V0IGJlaW5nIG5ha2VkIHdoaWNoIHRoZXkgbGF0ZXIgY29uZmxhdGUgd2l0aCBhbiBlbWJhcnJhc3NtZW50IG9mIG91ciBmaWd1cmUuIApXaGF0IGFyZSB0aGUgZm91ciBwYWlycyBvZiBwYXJhbmFzYWwgc2ludXNlcz8KS2VsbHkgTWVpZXIgZWFybmVkIGhlciBkb2N0b3JhdGUgZnJvbSBNaW5uZXNvdGEgU3RhdGUgTWFua2F0byBpbiBFZHVjYXRpb25hbCBMZWFkZXJzaGlwLiAKT3RoZXIgbGlzdGVkIGJlbmVmaXRzIGluY2x1ZGUgYm9vc3RpbmcgdGhlIGltbXVuZSBzeXN0ZW0gYW5kIGluY3JlYXNpbmcgc3RhbWluYS4gClRoZSBhZHVsdHMgYXJlIHRoZXJlIGFzIHJvbGUgbW9kZWxzIHRvIGhlbHAgdGhhdCBwcm9jZXNzIHRocnUgZGVtb25zdHJhdGlvbiBpbiBhY3Rpb25zIGJvdGggYmlnIGFuZCBzbWFsbC4gVGhpcyBpcyBhbiBleGFtcGxlIG9mIGEgYmlnIGZhaWx1cmUgdG8gZG8gc28sIGFuZCBzaG91bGQgYmUgYWRkcmVzc2VkIGZyb20gdGhlIHRvcCBkb3duLiBCdXQgbm90IGluIGFuZ2VyLCBhcyBhIHdheSBvZiBoZWxwaW5nIHRoZSBhZHVsdHMsIHRvbywgdGhleSBzZWVtIGRlZmljaWVudCBpbiB0aG9zZSBzYW1lIHNraWxscy5Ib25leW9hdG1lYWwxMDEgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ29JIGFncmVlIHdpdGggeW91LiAKVGhlIGdyYW5kZmF0aGVyIG9mIHRoZXNlIGdhbWVzIGlzIFdhcmhhbW1lciwgd2hpY2ggaXMgYmFzZWQgaW4gYSBmYW50YXN5IHdvcmxkIG9mIG9yY3MgYW5kIGVsdmVzLiAKVW5lIHF1ZXN0aW9uIHF1YW5kIG1tZSA6IGxlcyBydWVzIGV0IGxlcyB0cm90dG9pcnMgdGFpZW50IGlscyB2cmFpbWVudCBjb3V2ZXJ0cyBkZSBwYWlsbGUgZXQgZGUgdGVycmUgdmVycyAxOTAwID8gQ2VydGVzIGxlcyBzZXJ2aWNlcyBkZSB2b2lyaWUgdGFpZW50IHBsdXMgbW9kZXN0ZW1lbnQgcXVpcHMsIG1haXMgUGFyaXMsIGV0IHByY2lzbWVudCBjZSBxdWFydGllciwgbmUgY2FjaGFpdCBwYXMgdW4gZ3JhbmQgcG90YWdlci4gCk1hdHRramFrZSAgIDEzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KVGhlcmUgaXMgYW4gb3JnYW5pemF0aW9uIGNhbGxlZCBlQ09HUkEgKGVDb21tZXJjZSBhbmQgT25saW5lIEdhbWluZyBSZWd1bGF0aW9uIGFuZCBBc3N1cmFuY2UpIHRoYXQgcHJvdmlkZXMgcGFydGljaXBhdGluZyBjYXNpbm9zIHdpdGggYSBzZXQgb2YgcGxheWVyIHNlbnNpdGl2ZSByZWd1bGF0aW9ucyB0aGF0IGFyZSBjaGVja2VkIGJ5IGluZGVwZW5kZW50IGluc3BlY3Rpb24gYW5kIGVuZm9yY2VkIGJ5IG9uZ29pbmcgbW9uaXRvcmluZy4gCkkgbWVhbiwgeWVzLCBJIGFtIGEgc3Vja2VyIGZvciB0aGUgZmVlbGluZyBvZiBzb21lb25lIHdobyBiZSB0aGVyZSBmb3IgeW91IGFuZCBsb3ZlIHlvdSBubyBtYXR0ZXIgd2hhdCwgYW5kIEkgZG8gZXZlbnR1YWxseSB3YW50IHRvIGJlIGluIGEgcmVsYXRpb25zaGlwLiAKT25jZSB5b3UgZ2V0IHlvdXIgZmlyc3QgInJlYWwiIGpvYiwgdGhlIG1vbmV5IHdpbGwgY29tZSwgYnV0IHlvdSdsbCBoYXZlIG1vcmUgcmVzcG9uc2liaWxpdGllcyBhbmQgbGVzcyB0aW1lLiAKVGFiaXRoYSBhbmQgSSBhcmUgZGlmZmVyZW50LCB3ZSB3YW50IG91dC4gCkRlbGF3YXJlIGFuZCBOb3J0aCBDYXJvbGluYSwgZm9yIGV4YW1wbGUsIHJlY2VudGx5IGNsYXNzaWZpZWQgbWFzc2FnZSBwYXJsb3JzIGFzIGhlYWx0aCBidXNpbmVzc2VzLCBtYWtpbmcgdGhlbSBzdWJqZWN0IHRvIHJlZ3VsYXIgaW5zcGVjdGlvbnMgYW5kIG90aGVyIHNhbml0YXRpb24gYW5kIHNhZmV0eSByZXF1aXJlbWVudHMuIExhd21ha2VycyBpbiBJbGxpbm9pcywgTmV3IEplcnNleSwgVGV4YXMgYW5kIGEgZG96ZW4gb3RoZXIgc3RhdGVzIGFyZSBhbHNvIHdlaWdoaW5nIHN0cmljdGVyIHJlZ3VsYXRpb25zIG9uIHRoZSBtYXNzYWdlIGluZHVzdHJ5IHRoaXMgeWVhci4KOyBCYW5rIHByZW1pc2VzLCBmdXJuaXR1cmUgYW5kIGZpeHR1cmVzLCBhbmQgb3RoZXIgYXNzZXRzIHJlcHJlc2VudGluZyBiYW5rIHByZW1pc2VzClJvbGwgYXMgZmFyIHVwIHRvIHRoZSBwdWJpcyBhcyB5b3Ugd2FudCwgYW5kIGNvbnRyb2wgdGhlIGludGVuc2l0eSBieSBzdXBwb3J0aW5nIHlvdXJzZWxmIG1vcmUgb3IgbGVzcy4gV2l0aCBzdWNoIGEgd2lkZSBjb250YWN0LCB5b3UgaGF2ZSB0byBkbyBzb21ldGhpbmcgcmVhbGx5IGltcHJlc3NpdmUgdG8gZGFtYWdlIHlvdXJzZWxmLCBhbmQgdGhvc2UgYmlnIG11c2NsZXMgKElNSEJFTykgcmVhbGx5IGRvIHJlc3BvbmQgd2VsbCB0byByb2xsaW5nLiBBbHNvLCBjb25zaWRlciByb2xsaW5nIG91dCB2LiAKRGEgZXMgenUgZGllc2VtIFRoZW1hIG5vY2ggbmljaHRzIHdpcmtsaWNoIFZlcmdsZWljaGJhcmVzIGF1ZiBkZW0gTWFya3QgZ2lidCwga25udGUgTW9zaG1hbiBhdWNoIG1pdCBkaWVzZW0gV2VyayB3aWVkZXIgaW5zIFNjaHdhcnplIGdldHJvZmZlbiBoYWJlbi4gClRoZXJlIGFyZSBhIHRvbiBvZiBnb29kIHJlc291cmNlcyBvdXQgdGhlcmUgdG8gbGVhcm4gYWJvdXQgcHJvcGVyIGZvcm0sIHByb2dyYW1pbmcsIGFuZCBjb21wZXRpbmcgaWYgeW91IGV2ZXIgd2FudCB0byBkbyB0aGF0LiAKVW4gbW90IGVudHJlIGRhbnMgdW5lIHBocmFzZSBjb21tZSBkYW5zIHVuZSBwaWNlIGRlIHRodHJlLCBpbCBlc3QgY29ubnUgcGFyIHNlcyBybGVzIGFudHJpZXVycywgaWwgZXN0IGNvc3R1bSBkJ3VuZSBmYW9uIHNpbmd1bGlyZSBwb3VyIGpvdWVyIHVuZSBub3V2ZWxsZSBzY25lIG1haXMgYydlc3QgbCdpbnRyaWd1ZSBkYW5zIGxhcXVlbGxlIGlsIGVzdCBpbnRyb2R1aXQsIG8gZGVzIHJlbGF0aW9ucyBhdmVjIGQnYXV0cmVzIG1vdHMgdm9udCBzZSBub3VlciwgcXVpIGx1aSBjb25zdHJ1aXJvbnQgdW5lIGlkZW50aXQgc3BjaWZpcXVlLiBJbCBhcHBvcnRlIGR1IHNlbnMgbWFpcyBpbCBwcmVuZCBhdXNzaSBsZSBzZW5zIGRlIGNlIHF1aSBsdWkgYXJyaXZlLi4gClR5cGljYWxseSwgaWYgeW91IHBsYXkgcG9rZXIgb24gYSByZWd1bGFyIGJhc2lzLCB5b3UgbWF5IGJlIGF3YXJlIG9mIGZyaWVuZHMgb3IgZmFtaWx5IG1lbWJlcnMgdGhhdCBhcmUgb24gYSAid2lubmluZyBzdHJlYWsiLCBhcyB3ZWxsIGFzIG9uZXMgdGhhdCBhcmUgbm90IGRvaW5nIHNvIHdlbGwuIFdoZW4gYSBsb3Npbmcgc3RyZWFrIG9jY3VycywgbWFueSBwb2tlciBwbGF5ZXJzIHdpbGwgbG9vayB0byBhIHdpZGUgcmFuZ2Ugb2YgY3VyZXMgZm9yIHRoZWlyIHByb2JsZW0uCkFuZCBzbyB0aGUgZGFuY2Ugc3RhcnRzICAgYmFja3dhcmRzIGFuZCBmb3J3YXJkcywgdXB3YXJkcyBhbmQgZG93bndhcmRzICAgdGhvdWdoIHByb2JhYmx5IG1vcmUgdXB3YXJkcyBvciBzaWRld2F5cyB0aGFuIG90aGVyd2lzZS4uIApGb3Igc29tZSByZXNlYXJjaCBJIHdhcyBkb2luZyBvbiBhbiB1bnJlbGF0ZWQgdG9waWMsIEkgaW50ZXJ2aWV3ZWQgY29sbGVnZSBzdHVkZW50cyBhbmQgcmVjZW50IGNvbGxlZ2UgZ3JhZHMgYXQgYSBzdGF0ZSB1bml2ZXJzaXR5LiBNYW55IG9mIHRoZW0gaGFkIG1vcmUgdGhhbiAkNjAsMDAwIGluIHN0dWRlbnQgbG9hbiBkZWJ0LiBXaGVuIEkgYXNrZWQgdGhlbSBhYm91dCB0YWtpbmcgb24gc3VjaCBodWdlIGRlYnQgbG9hZHMsIHRoZXkgc2FpZCAiSSB3YXMgYm9ybiBpbiBkZWJ0LiAKQmx0cnZuczkgIDEyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KU2VydmljZSBDYW5hZGEgbGV0cyB5b3UgZ28gYmFjayAxMiBtb250aHMgYW5kIHdpbGwgc2VuZCB5b3UgYSBsdW1wIHN1bSBmb3IgdGhlIHJldHJvYWN0aXZlIHBheW1lbnQuIApGb3IgcmVmZXJlbmNlLCB0aGUgMjAxNiBlbGVjdGlvbiBjb3N0ICQ2LjUgYmlsbGlvbiB0b3RhbCAodGhhdCBpbmNsdWRlcyBldmVyeXRoaW5nOiBwcmVzaWRlbnRpYWwgcmFjZSwgaG91c2Ugb2YgcmVwcmVzZW50YXRpdmVzLCBzZW5hdGUsIGdvdmVybm9ycywgcHJvcG9zYWxzLCBldGMuKSAsIGFuZCB0aGlzIGlkaW90IHdhbnRzIHRvIGFkZHMgJDMzIGJpbGxpb24gZWFjaCB5ZWFyLiBFYWNoIHllYXIsIGluY2x1ZGluZyB5ZWFycyBsaWtlIDIwMTcgYW5kIDIwMTkgd2hlcmUgdGhlcmUgYXJlIG5vdCBtYWpvciBlbGVjdGlvbnMsIHR5cGljYWxseS4gSGUgYmFzaWNhbGx5IHdvdWxkIHN1YnNpZGl6ZSBsYXJnZSBtZWRpYSBjb21wYW5pZXMgKHRoYXQgd2hlcmUgcG9saXRpY2FsIGRvbmF0aW9ucyBnbyBsYXJnZWx5KSwgaW5jcmVhc2UgdGhlIGFtb3VudCBvZiBhZHZlcnRpc2VtZW50cyAod2UgYWxyZWFkeSBzZWUgd2F5IHRvIG1hbnkpLCBhbmQgaGVscCBhbHJlYWR5IHdlYWx0aHkgcGVvcGxlIGdldCB3ZWFsdGhpZXIuCjAgcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvSSBkb24ndCBrbm93IGVub3VnaCBhYm91dCB0aGUgcGVuc2lvbiBzeXN0ZW0gdG8gaGF2ZSBhbiBpbmZvcm1lZCBvcGluaW9uLCBidXQgd2h5IGlzIHRoaXMgaXNzdWUgYmVpbmcgYWRkcmVzc2VkIG5vdz8gSXQgc2VlbXMgbGlrZSBpc3N1ZXMgbGlrZSB0aGlzIHNob3VsZCBiZSBwb3N0cG9uZWQgdW50aWwgYWZ0ZXIgZWxlY3Rpb25zIHdoaWxlIHRoZSBpbnRlcmltIGdvdmVybm1lbnQgZm9jdXNlcyBleGNsdXNpdmVseSBvbiBhbnRpIGNvcnJ1cHRpb24gbWVhc3VyZXMgYW5kIHBvbGl0aWNhbCByZWZvcm1zIGluIHByZXBhcmF0aW9uIGZvciBlbGVjdGlvbnMgYW5kIGEgZ2VudWluZWx5IGVsZWN0ZWQgcGFybGlhbWVudC5UaGUgc3RyZWV0IHByb3Rlc3RzIGRpZG4ndCBnaXZlIFBhc2hpbnlhbiBhIG1hbmRhdGUgdG8gbWFrZSBjaGFuZ2VzIHRvIHJldGlyZW1lbnQgcGxhbnMuZGF6aGFuaWsgIDggcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvSSBkb24ndCBrbm93IGVub3VnaCBhYm91dCB0aGUgcGVuc2lvbiBzeXN0ZW0gdG8gaGF2ZSBhbiBpbmZvcm1lZCBvcGluaW9uLCBidXQgd2h5IGlzIHRoaXMgaXNzdWUgYmVpbmcgYWRkcmVzc2VkIG5vdz9TZWVtcyBsaWtlIHRoZSBsYXcgd2FzIHNldCB0byB0YWtlIGVmZmVjdCBvbiBKdWx5IDFzdCBhbmQgdGhlIFBhc2hpbnlhbiBnb3Zlcm5tZW50IGNob3NlIHRvIGxldCBpdCB0YWtlIGVmZmVjdCBpbnN0ZWFkIG9mIHBvc3Rwb25pbmcgaXQuIApBaCBzbyBJIGhhZCBiZWVuIHNldHRpbmcgdXAgZm9yIGJlbmNoIGJ5IHBpbm5pbmcgbXkgdXBwZXIgYm9keSBkb3duIHdpdGggbXkgZmVldCBvbiB0aGUgYmVuY2ggdG8gaGVscCBnZXQgYSBuaWNlIGFyY2gsIHRoZW4gbG93ZXIgdGhlIGZlZXQgYW5kIHR1Y2sgdGhlbSB1bmRlciB0byBrZWVwIHRoZSB0ZW5zaW9uLgpUaGVyZSBpcyB0b28gbXVjaCB2YXJpYW5jZSBpbiBwb2tlciB0byBndWFyYW50ZWUgYSB3aW4uIApIdW5nYXJpYW4gc2NpZW50aXN0cyBmZWFyIGZvciBhY2FkZW1pYyBmcmVlZG9tIHdpdGggbmV3IGdvdmVybm1lbnQgaW50ZXJmZXJlbmNlU3RhZmYgbWVtYmVycyBvZiB0aGUgaGlzdG9yaWMgSHVuZ2FyaWFuIEFjYWRlbXkgb2YgU2NpZW5jZXMgc2FpZCB0aGVpciBhY2FkZW1pYyBmcmVlZG9tIGhhcyBiZWVuIHRocmVhdGVuZWQgYnkgYSBuZXcgZGVhbCBnaXZpbmcgdGhlIG5hdGlvbmFsaXN0IGdvdmVybm1lbnQgaW5mbHVlbmNlIG92ZXIgaXRzIHJlc2VhcmNoIGluc3RpdHV0aW9ucy4gCkl0IGlzIGEgZmFudGFzeSwgYSBkZXNpcmUsIGFuIHVucmVhbCByZXByZXNlbnRhdGlvbiBvZiByZWFsIGJvZGllcy4gSW4gdGhlIHNhbWUgd2F5IHRoYXQgT3J0aG9kb3ggQ2hyaXN0aWFucyBsb29rIGF0IGFuIGljb24gb2YgSmVzdXMgYW5kIGtub3cgaXQgaGFzIGJlZW4gYWx0ZXJlZCwgd2Ugb3VnaHQgdG8gYmUgYWJsZSB0byBsb29rIGF0IGFuIGFkIG9yIGEgbW92aWUgc3RhciBhbmQgc2VlIHRoYXQgd2hhdCBpcyByZXByZXNlbnRlZCBjYW4gb25seSBleGlzdCBpbiB0aGUgc3Bpcml0dWFsIHBsYW5lLiAKSGF2ZSBiZWVuIGhvdmVyaW5nIGFyb3VuZCB0aGUgJDIsMDAwIHNxdWFyZSBmb290IHJhbmdlLiAKVGhpcyBpcyBtb3JlIHRoZSBkaXRjaCBJIHRoaW5rIHRoZSBtZWRpYSBydW5zIHRoZSByaXNrIG9mIGZhbGxpbmcgaW50by4uIApBbHNvLCBSYW52ZWVyIFNpbmdoIHdhcyBleGNlcHRpb25hbCBpbiBMb290ZXJhLiAKT3ZlcnZpZXcgZm9yIEZhbGxpbmdPZmZBTG9nCkdpcmwgZ2V0IHlvdXJzZWxmIHNvbWUgZmlzaCBvaWxzISEgSSB3YXMgaGF2aW5nIHNvIG1hbnkgcHJvYmxlbXMgd2l0aCBteSBoYWlyOyBpdCB3YXMgYnJlYWtpbmcgb2ZmLCBsb29raW5nIGRyeSBhbmQgZnJpenp5LCBhbmQgd291bGQgTk9UIGdyb3cgcGFzdCBteSBjb2xsYXIgYm9uZSBmb3IgYSBzb2xpZCA2IHllYXJzLiBUaGVuIEkgc3RhcnRlZCB0YWtpbmcgMyA2IDkgZmlzaCBvaWxzIHdpdGggZXZlcnkgbWVhbCBhbmQga2VlcGluZyB1cCB3aXRoIG15IGJpb3RpbiAocmVtZW1iZXIgbm90IHRvIHRha2UgaXQgbG9uZ2VyIHRoYW4gMyB3ZWVrcyBhcyBpdCBjYW4gcmVhbGx5IG1lc3Mgd2l0aCB5b3VyIEIxMiBsZXZlbHMgaWYgdGFrZW4gZm9yIHRvbyBsb25nKSBhbmQgbXkgbXVsdGl2aXRhbWlucy4gVGhlbiBpIGtlcHQgdXAgd2l0aCBqdXN0IGdlbmVyYWwgZ29vZCBoYWlyIHByYWN0aWNlczogbmV2ZXIgc2xlZXAgd2l0aCBpdCBpbiBhIGJ1biBvciBwb255IHRhaWwgKGZyZW5jaCBicmFpZCBpZiB5b3UgYWJzb2x1dGVseSBoYXZlIHRvKSBhbmQgZG9uIHdhc2ggaXQgdG9vIG11Y2gsIHdoaWNoIGkgd2FzIFNPIGJhZCBmb3IuIEkgd291bGQgd2FzaCBteSBoYWlyIEVWRVJZIERBWSBhbmQgaGF2ZSBzd2l0Y2hlZCB0byBldmVyeSBvdGhlciBkYXkgYXQgdGhlIG1vc3QsIHNvbWV0aW1lcyBldmVyeSAzIGRheXMuIEFuZCBpZiB5b3UgdXNlIGFueSBoZWF0IHN0eWxpbmcgbGlrZSBibG93IGRyeWVycyBvciBoYWlyIHN0cmFpZ2h0ZW5lcnMsIGdldCB5b3Vyc2VsZiBhIHJlYWxseSBnb29kIGhlYXQgcHJvdGVjdGFudC4gSSBsaWtlIHRoZSBCdW1ibGUgQnVtYmxlIEhhaXJkcmVzc2VyIE9pbCBQcmltZXIgdGhlIGJlc3QuIEFmdGVyIGRvaW5nIGFsbCBvZiB0aGlzLCBpbiB0aGUgY291cnNlIG9mIGFib3V0IDUgbW9udGhzIEkgZ2FpbmVkIHByb2JhYmx5IDQgaW5jaGVzIG9mIGxlbmd0aCB0byBteSBoYWlyIGFuZCBpdCBzbyBiZWF1dGlmdWwgYW5kIHNoaW55ISBJIGhhdmVuIGhhZCBpdCBjdXQgc2luY2UgTm92ZW1iZXIgYW5kIHRoZXJlIG9ubHkgYSBmZXcgdGlueSBzcGxpdCBlbmRzIGhlcmUgYW5kIHRoZXJlLgpUaGlzIHN0YXRlIGNvdWxkIHByb3RlY3QgdGhlIHJpZ2h0cyBvZiBpdHMgcmVzaWRlbnRzIGFuZCBuZWdvdGlhdGUgd2l0aCBhbGwgaW50ZXJuYXRpb25hbCBwbGF5ZXJzIHRoZSBtdXR1YWwgaW50ZXJlc3Qgb2YgYWxsLiAKVGhlIG1hc3NhZ2Ugd2FzIHRlcnJpYmxlLiAKQ2hyaXN0IG9uIGEgY3JhY2tlciwgbXkgZmlyc3Qgd2FzIHNsZWVwaW5nIHRocm91Z2ggdGhlIG5pZ2h0IGF0IHNpeCB3ZWVrcyBvbGQsIGFuZCB3ZSB0b29rIGhpbSB0byB0aGUgRVIgdGhpbmtpbmcgc29tZXRoaW5nIHdhcyB0ZXJyaWJseSB3cm9uZy4gVGhleSBsYXVnaGVkIHRoZWlyIGFzc2VzIG9mZiBhdCB1cy4gCk9yIG92ZXIgdGhlIGZsaXBzaWRlLCBhIHVuY29uc3RydWN0aXZlIHJlc3VsdCBtYXkgcG9zc2libHkgd2VsbCBkcnVkZ2Ugd2F5IHVwIGEgYW1vdW50IG9mIG9mIHNldmVyYWwgaWRlYXMuIFBvc3NpYmx5IHRoZSBndXJ1cyB0aGV5IG1heSB2ZXJ5IHdlbGwgYmUgcGxheWluZyBvbnRvIGRvbid0IHJlY29nbml6ZSBob3cgZm9yIHlvdSB0byBwbGF5IHNwZWNpZmljIGdhbWUgdGhlIEdvbGRlbiBHb29zZSBGcmFuY3kgR2xpdHRlciByb3BlciB3YXkgYW5kIGdldCBsdWNraW5nIGluZm9ybWF0aW9uIGFib3V0IG9uIHRoZW0sIG9yIG1heWJlIHRoZXkgdGhlaXIgYnVzaW5lc3MgYXJlIHByZXR0eSBtdWNoIHN1cHJlbWVseSB1bmx1Y2t5LiBBbm90aGVyIHBvcHVsYXIgYmVsaWVmIGFtb25nc3QgbmV3IGRyZWFkZnVsIHBva2VyIGNhc2lubyBwbGF5ZXJzIGlzIHdoaWNoIGluIHR1cm4gdGhlIHBlcmZvcm1hbmNlIG11c3QgZW5kIHVwIGJlaW5nICdhbGwgbHVjaycgYW5kIHRoZSBpdGVtIGRvZXNuJ3QgYWZmYWlyIHdoYXQgYmFuayBjYXJkcyB5b3UgbWFzdGVyIGJlY2F1c2Ugc29tZXRoaW5nIGNhbiBjb21lLgpCdXQgbWF5YmUgSSBiZWluZyB1bmZhaXIgaGVyZSwgYmVjYXVzZSBJIHRhbGtpbmcgYWJvdXQgdGhlIHdvcnN0IG9mIHRoZSB3b3JzdCwgYW5kIEkgZG9uIHRoaW5rIHRoYXQgd2hhdCB5b3Ugd2VyZSB0cnlpbmcgdG8gc2F5IGhlcmUuIApBbmQgeWV0LCBzb21laG93IHRoZSBQZW9wbGVzIFJlcHVibGljIG9mIFZlcm1vbnQgQ29uZ3Jlc3Npb25hbCBEZWxlZ2F0aW9uIGJlaGF2ZXMgZXhhY3RseSBsaWtlIHRoZSByZXN0IG9mIHRoZSBEZW1zIHdobyBiZWhhdmUgZXhhY3RseSBsaWtlIHRoZSByZXN0IG9mIFJlcHVibGljYW5zIHdoZW4gaXQgY29tZXMgdG8gbWFraW5nIHN1cmUgb3VyIGVjb25vbXkgaXMgYmFzZWQgb24gd2FyIGFuZCBjb3Jwb3JhdGUgaW50ZXJlc3RzLi4gClRoZXJlIG5vIHJlYXNvbiB0byBiZWxpZXZlIHRoaXMgWmVrZSBzbGF2ZSB3YXNuIGNvbXBlbGxlZCB0byBjb21lIHRvIGl0cyBtYXN0ZXIgcmVzY3VlIGFuZCBnaXZlIGl0cyBsaWZlIHRvIHJldml2ZSBoaW0uIEluIHRlcm1zIG9mIHRoZSBoZWFsaW5nIGFiaWxpdHkgaXRzZWxmLCB3aGlsZSB3ZSBoYXZlbiBzZWVuIGl0IHdlIGNhbiBzYXkgZm9yIHN1cmUgaXQgbm90IGEgbm9ybWFsIHRpdGFuIHRoaW5nLCBmb3IgYWxsIHdlIGtub3cgdGhlIGZvdW5kaW5nIHRpdGFuIG9yIFpla2UgY291bGQgaGF2ZSBlYXNpbHkgY29tbWFuZGVkIHRoZWlyIGNvbnRyb2xsZWQgdGl0YW5zIHRvIGRvIHRoaXMgaWYgdGhleSBrbmV3IGl0IHdhcyBwb3NzaWJsZS4gCkFkanVzdCB5b3VyIGluaXRpYWwgcmFpc2Ugc2l6ZSB3aXRoIG5vIGxpbXBlcnMgdG8gNXgrIHdpdGggcHJlbWl1bSBoYW5kcy4gTWFraW5nIHRoZSAkNyBjYWxsIHZzLiBUaGUgJDEyIGNhbGwgbWVhbnMgbm90aGluZyB0byBzdWNoIGEgdmlsbGFpbiBhdCAkMS8kMi4gCkl0IGlzIGJlY29taW5nIGluY3JlYXNpbmdseSBkaWZmaWN1bHQgdG8gZm9sbG93IGFsbCB0aGUgbmV3IHNpdGVzIHRoYXQgc2VsbCBidXQgSSBhc3N1cmUgeW91IHRoZSBvbGRlciBhbmQgbW9yZSBleHBlcmllbmNlZCBzaXRlcyB3aWxsIG1vc3QgbGlrZWx5IGRvIHlvdSB3ZWxsIGZvciBhIGNvbXBldGl0aXZlIHByaWNlLiBTY3JvbGwgdGhyb3VnaCB0aGUgc3RyaXAgYW5kIHlvdSB3aWxsIHNlZSB3aGVyZSB5b3UgYXJlLiBDbGljayBvbiBTZWUgQWxsIGFuZCBpdCB3aWxsIGxpc3QgdGhlbSBpbmRpdmlkdWFsbHkgYW5kIGdpdmUgeW91IHRoZSBvcHRpb24gdG8gcmVtb3ZlISBNYWtlIHN1cmUgeW91IGhpdCBzYXZlIGNoYW5nZXMgYW5kIHRoZXkgd2lsbCBiZSBnb25lLiAKSSBhc3N1bWVkIG1vc3QgcGVvcGxlIGRpZCB0aGUgc2FtZSwgdW50aWwgSSBsZWFybmVkIHRoYXQgc29tZSBwZW9wbGUgYnV5IG5ldyBwbGFzdGljIEVhc3RlciBlZ2dzIGFuZCBwbGFzdGljIGdyYXNzIGVhY2ggeWVhciEgSSBwcmV0dHkgc3VyZSBteSBwYXJlbnRzIHVzZWQgdGhlIHNhbWUgYmFnIG9mIEVhc3RlciBncmFzcyBmb3IgbGlrZSAyMCB5ZWFycy4gCkkgdGhpbmsgaXQncyBncmVhdCB0aGF0IG9uZSBvZiB0aGUgZm91bmRlcnMgZGlkIHdyaXRlIHlvdSBhIGNoZWNrIGZyb20gaGlzIHBlcnNvbmFsIGFjY291bnQuIEJ1dCB0aGF0J3MgYSBodWdlIHdhcm5pbmcgc2lnbi4gCkV2ZXIgc2luY2UgSSB3YXMgbGl0dGxlIEkgbGlrZWQgdG8gZWF0IGljZS4gSSBhbHNvIGxpa2VkIHRvIGVhdCBjaGlwcGVkIG9yIHNoYXZlZCBpY2Ugd2l0aCBsaW1lIGp1aWNlIGFuZCBzYWx0IHBvdXJlZCBvdmVyLiBBIGxpdHRsZSBsaW1lIGp1aWNlIGdvZXMgYSBsb25nIHdheS4gSSBzdGlsbCBkbyB0aGlzIHNvbWV0aW1lcyB3aGVuIEkgZmVlbCBsaWtlIEkgd2FudCB0byBlYXQgc29tZXRoaW5nIHdoZW4gSSBib3JlZCBvciB3YXRjaGluZyBhIG1vdmllLiBUYWtlcyBhIGxvbmcgdGltZSB0byBlYXQgaXQgc2luY2UgaXQgY29sZCBhbmQgc2FsdHkuIFNpbmNlIGtldG8gdGhvdWdoIEkganVzdCBwb3VyIHNvbWUgc2FsdCBvdmVyIHBsYWluIGljZSwgc3VjayBvbiB0aGUgaWNlIGFuZCBlYXQgaXQgb3ZlciBhIGxvbmcgcGVyaW9kIG9mIHRpbWUuIEkgc3VyZSB5b3UgY291bGQgZWF0IGp1c3QgaWNlIHdpdGggbm8gc2FsdC4KSXQgd2FzIHJlYWxseSB0b3J0dW91cy4uIApIZSBhcnJpdmVkIGluIE1hcmNoIGxhc3QgeWVhciBhbmQgZWFybmVkICQxOCBhIGRheSBhcyBhIGdlbmVyYWwgd29ya2VyIGluIGEgY29uc3RydWN0aW9uIGNvbXBhbnkuQnV0IHdoZW4gY29udHJhY3RzIHN0YXJ0ZWQgZHJ5aW5nIHVwIGJlY2F1c2Ugb2YgdGhlIGRvd250dXJuLCBoaXMgZW1wbG95ZXJzIHRvbGQgaGltIGhlIGhhZCB0byBnby5NciBHb25iYXIgZmFjZWQgdGhlIGJsZWFrIHByb3NwZWN0IG9mIHJldHVybmluZyBob21lIHdpdGggaGlzIGRlYnQgc3RpbGwgdW5wYWlkLkRlc3BlcmF0ZSwgaGUgdHVybmVkIHRvIE1yIEhhbiwgd2hvbSBoZSBoYWQgZ290IHRvIGtub3cgd2hlbiBoZSB3b3JrZWQgb24gdGhlIHBhaW50aW5nIGFuZCByZW5vdmF0aW9uIG9mIHNvbWUgb2YgdGhlIGZpcm0gb3V0bGV0cy5NciBIYW4gcmVtZW1iZXJlZCBoaW0sIGFzIHRoZSB5b3VuZyBtYW4gaW5kdXN0cnkgYW5kIGh1bWlsaXR5IGhhZCBtYWRlIGFuIGltcHJlc3Npb24uIApUaGUgaW50ZXJuYWwgdGVtcGVyYXR1cmUgb2YgdGhlIG1lYXQgd2lsbCBjb250aW51ZSB0byByaXNlIGJ5IGFib3V0IDEwIGRlZ3JlZXMuIFJlbW92ZSB0aGUgdmVnZXRhYmxlcyBhbmQgc2V0IGFzaWRlLiAKVGhlIGRhbmdlciBpcyB0aGVzZSB0ZWNobm9sb2dpZXMgY3JlYXRlIHJlbGlhbmNlLiBJbiB0aGUgcGVyZmVjdCB3b3JsZCBpdCB3b3VsZCBiZSBhIHRoaXJkIGNoZWNrLCBmaXJzdCBtaXJyb3IsIHNob3VsZGVyIGNoZWNrIGFuZCB0aGVuIGJsaW5kc3BvdCBtb25pdG9yLiBJIGxpa2Ugc2FmZXR5IHRlY2ggYnV0IGl0IGFsc28gd29ycnlpbmcgYXQgdGhlIHNhbWUgdGltZS4uIApCdXQgZHVyaW5nIHBhcnQgb2YgdGhlIHllYXIsIHRoZSByb29mIG9mIHRoYXQgZ3JlZW5ob3VzZSByZWZsZWN0cyBzdW5saWdodCBkaXJlY3RseSBpbnRvIHRoZSBzYXRlbGxpdGUgc2Vuc29yLi4gCkkgZG9uIGtub3cgd2hhdCBpbnRlcnZpZXcgaXQgd2FzLiAKS2VsbHkgZXggZ2lybGZyaWVuZCBzYXlzIGhlciBkYXVnaHRlciB3YXMgYmVhdGVuUi4gClRoZXkgZ29ubmEgZG8gdGhlbSBhbmQgaG9uZXN0bHksIHNvbWUgb2YgdGhvc2UgY29tbWVudHMgYXJlIHdoYXQgcHVzaGVkIG1lIHRvIHRha2UgYSBjb3Vyc2Ugb2YgYWN0aW9uIHRvIHRlbGwgbXkgTUlMIGl0IHdhcyB0aW1lIGZvciBoZXIgdG8gdGFrZSBhIGJhY2sgc2VhdCBpbiBteSBsaWZlLiAKSSBqdXN0IGhvcGVkIHRoZSB0aHJpbGwgb2YgYSB0aHJlZXNvbWUgd291bGQgbWFrZSB1cCBmb3IgaXQuIApTaGF3IGJpbGwga2VwdCBjcmVlcGluZyB1cCBldmVyeSBzaXggbW9udGhzLiAKVGhpcyBGREEgYXBwcm92ZWQgZGV2aWNlIGlzIGluZXhwZW5zaXZlLCBub24gaW52YXNpdmUsIGFuZCBjYW4gcHJvdmlkZSByZXN1bHRzIGluIG1pbnV0ZXMuIEFjY3VtdWxhdGluZyBldmlkZW5jZSBzdWdnZXN0cyB0aGF0IGFibm9ybWFsaXRpZXMgaW4gdGhlIHB1bHNhdGlsZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgYXJ0ZXJpZXMgb2NjdXIgZWFybHkgaW4gdGhlIGRpc2Vhc2UgcHJvY2VzcyBhc3NvY2lhdGVkIHdpdGggaW5jcmVhc2VkIGNhcmRpb3Zhc2N1bGFyIHJpc2ssIGFuZCBjYW4gYmUgZmF2b3JhYmx5IG1vZGlmaWVkIGJ5IHRoZXJhcGV1dGljIGludGVydmVudGlvbnMuIApBIHNlbnRpIHF1IGNvbW1lbiBwZXJkcmUgY29ubmFpc3NhbmNlLiBFbGxlIGx1aSBhIHIgZCBFbGxlIHMgYWxvcnMgcXVlIHNlcyBtYWlucyBkZXNjZW5kYWllbnQgdG91am91cnMgcGx1cyBiYXMgdmVycyBzZXMgZmVzc2VzLi4gCkkgZG9uJ3QgdGhpbmsgaXQncyBhIGJhZCB0aGluZyB0aG91Z2guIApGcm9tIEkgNjQgdGFrZSBKLiBDbHlkZSBNb3JyaXMgQmx2ZCB0b3dhcmRzIFdhcndpY2sgQmx2ZC4gCkkgZG9uIGxpa2UgaGF2aW5nIHRvIHBvc3QgYWJvdXQgaXQgZWl0aGVyIGJ1dCBpdCBpcyBzb21ldGhpbmcgdGhhdCBoYXMgdG8gYmUgZG9uZSBpZiB3ZSBldmVuIHdhbnQgYSBnbGltbWVyIG9mIGhvcGUgdGhhdCB0aGUgcGVvcGxlIHZvaWNlIHdpbGwgYmUgaGVhcmQuIElmIHBlb3BsZSBkaWRuIHBvc3QgYWJvdXQgaXQgd2hlbiBhbGwgb2YgdGhpcyBkaXNjdXNzaW9uIHN0YXJ0ZWQsIG5vbmUgb2YgdXMgd291bGQgZXZlbiBrbm93IGl0IHdhcyBoYXBwZW5pbmcgYW5kIHRoZSBnb3Zlcm5tZW50IHdvdWxkIGhhdmUganVzdCBzZWNyZXRseSBsZXQgdGhlIElTUHMgZG8gd2hhdGV2ZXIuIEkgbm90IGR1bWIgZW5vdWdoIHRvIHRoaW5rIHRoYXQgbXkgdm9pY2Ugb3IgcG9zdHMgYWxvbmUgd2lsbCBjaGFuZ2UgYW55dGhpbmcgYnV0IEkgZG8ga25vdyB0aGF0IEFtZXJpY2FucyBuZWVkIHRvIGtub3cgYWJvdXQgc29tZXRoaW5nIHRoYXQgd2lsbCBhZmZlY3QgdGhlaXIgZGFpbHkgbGlmZSBhbmQgdGhlaXIgd2FsbGV0LiAKSSBrbmV3IHNoZSB3YW50ZWQgdG8gbWFrZSBzdXJlIHNoZSBkaWQgZXZlcnl0aGluZyBzaGUgY291bGQgdG8ga2VlcCBoZXIgZmFtaWx5IGNsb3NlLCBidXQgSSB0cmllZCB0byBleHBsYWluIHRoYXQgdGhpcyBhZG9wdGlvbiB3b3VsZG4ndCBiZSBqdXN0IGFib3V0IG1lIGFuZCBteSB0cmF1bWEuIApUaGlzIHdhc24gdGhlIHJlYXNvbiBmb3IgdGhlIG1lZXRpbmcuIFRoZSBtZWV0aW5nIHdhcyBiZWNhdXNlIHRoaXMgcGVyc29uIG5vIGxvbmdlciBoYXMgdGhlIHN0cmVuZ3RoIHRvIHNvIG11Y2ggYXMgbG9jayB0aGVpciBrbmVlcyBmb3IgYSBwaXZvdCB0cmFuc2Zlci4gVGhleSBub3cgd2hhdCBjbGFzc2lmaWVkIGFzIGEgMiBwZXJzb24gdG90YWwgbGlmdC4gClRoaXMgZGFtYWdlIGFsbG93cyBwcm90ZWlucyBpbiB0aGUgYmxvb2Qgc3VjaCBhcyBhbGJ1bWluLCB0byBsZWFrIGludG8gdGhlIHVyaW5lLCBjYXVzaW5nIGluY3JlYXNlZCBleGNyZXRpb24gb2YgcHJvdGVpbiBjYWxsZWQgcHJvdGVpbnVyaWEgKFBzb3JhLyBTeWNvc2lzKS4gRXZlbnR1YWxseSwgYmxvb2QgbGV2ZWxzIG9mIGFsYnVtaW4gYmVjb21lIHJlZHVjZWQgKFN5cGhpbGlzKS4gQWNjb21wYW55aW5nIGFibm9ybWFsaXRpZXMgb2Yga2lkbmV5IGZ1bmN0aW9uIGxlYWQgdG8gYWNjdW11bGF0aW9uIG9mIGZsdWlkIGluIHRoZSB0aXNzdWVzIGNhbGxlZCBlZGVtYSAoUHNvcmEvIFN5Y29zaXMpLlRoZXJlIGFyZSBmb2xsb3dpbmcgc3RlcHMgaW4gdGhpcyBwaGVub21lbm9uICBJbiBjaGlsZHJlbk1vc3QgY29tbW9ubHkgbWluaW1hbCBjaGFuZ2UgZGlzZWFzZSAoUHNvcmEpSW4gYWR1bHRzTW9zdCBjb21tb25seSBkaWFiZXRlcyBvciBsdXB1cyAoUHNvcmEvIFN5Y29zaXMvIFN5cGhpbGlzKS4gClRWIFRleGFzIEhvbGRlbSBhbHNvIGhhcyBhIHZlcnkgcG93ZXJmdWwgYWRkaWN0aXZlbmVzcyBhYm91dCBpdC4gVmVyeSBxdWlja2x5IHlvdSB3aWxsIHN0YXJ0IHRvIGxpa2Ugc29tZSBwbGF5ZXJzIG1vcmUgdGhhbiBvdGhlcnMsIGluIHNvbWUgY2FzZXMgcGVvcGxlIHdpbGwgYmVjb21lIGZhbnMgb2YgY2VydGFpbiBwbGF5ZXJzIGFuZCBmb2xsb3cgdGhlaXIgcHJvZ3Jlc3MuIApCdXQgdGhhdCBkb2VzbiBtZWFuIHdlIGFyZSBpbmFjdGl2ZS4gClRoZSBwcmltZSBtaW5pc3RlciB0aGVuIGFza2VkIEFmdGFiIFNoZWlraCB0byBwYXNzIHRoZSBwYXBlciB0byBLaHVyc2hlZWQgU2hhaCB3aG8gaGFkIHRha2VuIGEgcHJheWVyIGJyZWFrIGZyb20gaGlzIG9wZW5pbmcgc3BlZWNoIG9uIHRoZSBwcmVzaWRlbnRpYWwgYWRkcmVzcy4gS2h1cnNoZWVkIHRhbGtlZCB0byBOYXdheiB3aG8gc2F0IGF0IGFybSdzIGxlbmd0aCBhbmQgdGhlbiBzdG9vZCB1cCB0byBwb3N0cG9uZSBoaXMgc3BlZWNoLiBJIHdhcyB0b2xkIHRoYXQgTmF3YXogd2FudGVkIHRvLiAKSSBjaGVja2luZyBidXQgSSBnZW51aW5lbHkgdW5zdXJlIGlmIHRoYXQgdGhlIHJpZ2h0IHBsYXkuIApEVUdHQU4sIEpvaG4gSm9zZXBoIEpvaG4gcGFzc2VkIGF3YXkgcGVhY2VmdWxseSBvbiBGcmlkYXksIE9jdG9iZXIgOCwgMjAxMCBhdCB0aGUgSGFsZGltYW5kIFdhciBNZW1vcmlhbCBIb3NwaXRhbCwgRHVubnZpbGxlLCBpbiBoaXMgNjB0aCB5ZWFyLiBMb3ZpbmcgaHVzYmFuZCBvZiBKdWR5IGZvciAzNiB5ZWFycy4gSm9obiB3aWxsIGJlIGZvcmV2ZXIgcmVtZW1iZXJlZCBpbiB0aGUgaGVhcnRzIG9mIGhpcyBjaGlsZHJlbiwgSGVhdGhlciBhbmQgS2lyayBNZXllciwgU2hhbm5vbiBhbmQgSmVmZiBFbGZuZXIsIE1pY2hhZWwsIFRpbW90aHkgYW5kIEVyaW4uIApIYXJ2YXJkIHBvbGl0aWNhbCBzY2llbnRpc3QgUm9iZXJ0IFB1dG5hbSAgIGZhbW91cyBmb3IgIkJvd2xpbmcgQWxvbmUsIiBoaXMgMjAwMCBib29rIG9uIGRlY2xpbmluZyBjaXZpYyBlbmdhZ2VtZW50ICAgaGFzIGZvdW5kIHRoYXQgdGhlIGdyZWF0ZXIgdGhlIGRpdmVyc2l0eSBpbiBhIGNvbW11bml0eSwgdGhlIGZld2VyIHBlb3BsZSB2b3RlIGFuZCB0aGUgbGVzcyB0aGV5IHZvbHVudGVlciwgdGhlIGxlc3MgdGhleSBnaXZlIHRvIGNoYXJpdHkgYW5kIHdvcmsgb24gY29tbXVuaXR5IHByb2plY3RzLiBJbiB0aGUgbW9zdCBkaXZlcnNlIGNvbW11bml0aWVzLCBuZWlnaGJvcnMgdHJ1c3Qgb25lIGFub3RoZXIgYWJvdXQgaGFsZiBhcyBtdWNoIGFzIHRoZXkgZG8gaW4gdGhlIG1vc3QgaG9tb2dlbm91cyBzZXR0aW5ncy4gVGhlIHN0dWR5LCB0aGUgbGFyZ2VzdCBldmVyIG9uIGNpdmljIGVuZ2FnZW1lbnQgaW4gQW1lcmljYSwgZm91bmQgdGhhdCB2aXJ0dWFsbHkgYWxsIG1lYXN1cmVzIG9mIGNpdmljIGhlYWx0aCBhcmUgbG93ZXIgaW4gbW9yZSBkaXZlcnNlIHNldHRpbmdzLi4gClRhbGtpbmd0b24gV2VkbmVzZGF5IHRvb2sgdGhlIHdpdG5lc3Mgc3RhbmQgd2VhcmluZyBhIGJsYWNrIGFuZCBncmF5IFNhZ2luYXcgQ291bnR5IEphaWwganVtcHN1aXQuLiAKQXMgd2UgYWxsIGtub3cgYnkgbm93LCBhbmQgYXMgWmVsbG5lciBjZXJ0YWlubHkga25ldyBhdCB0aGUgdGltZSwgdW5kZXIgV2lzY29uc2luIHN0YXR1dGVzIGFuZCBjYXNlIGxhdywgYWxsIGFyZ3VtZW50cyBhdmFpbGFibGUgdG8gdGhlIGRlZmVuc2UgdGhyb3VnaCBkdWUgZGlsaWdlbmNlIG11c3QgYmUgcmFpc2VkIGluIGFuIGluaXRpYWwgcG9zdCBjb252aWN0aW9uIG1vdGlvbi4gClNpbmNlIGFueSBudW1iZXIgd2Ugcm9sbCBtdXN0IGJlIGVpdGhlciBvZGQgb3IgZXZlbiwgdGhlbiB0aGUgcHJvYmFiaWxpdHkgb2Ygcm9sbGluZyBhbiBvZGQgb3IgYW4gZXZlbiBudW1iZXIgd2l0aCBvbmUgcm9sbCBvZiBhIHBhaXIgb2YgZGljZSBpcyBvbmUuIApTb21lIG9mIHRoZXNlIHJlY29tbWVuZGF0aW9ucyB3b3JrLCB3aGlsZSBzb21lIGZhaWwgbWlzZXJhYmx5LiAKMy4gCjIwMTguIApDcmVhdGl2ZSBtYXJrZXRpbmcgb3Bwb3J0dW5pdGllcyBmb3IgYW4gb24gc2l0ZSBjaGFpciBtYXNzYWdlIGJ1c2luZXNzIGluY2x1ZGUgb2ZmZXJpbmcgZnJlZSBtYXNzYWdlcyBhdCBhbiBhY2NvdW50YW50J3Mgb2ZmaWNlIGR1cmluZyB0YXggc2Vhc29uLCBwYXJ0aWNpcGF0aW5nIGluIGEgd2VsbG5lc3MgZmFpciBvZmZlcmVkIGJ5IGEgaG9zcGl0YWwgb3IgbnVyc2luZyBob21lLCBvZmZlcmluZyBtYXNzYWdlcyBkdXJpbmcgZmluYWwgZXhhbSB3ZWVrIGF0IGEgbG9jYWwgY29sbGVnZSBhbmQgb2ZmZXJpbmcgYSBtYXNzYWdlIGNsaW5pYyBhdCBhIGxvY2FsIGd5bSBwb3B1bGFyIHdpdGggd2VpZ2h0bGlmdGVycy4uIApJIHRvcm4sIG9uIHRoZSBvbmUgaGFuZCBJIGhhdGUgZXZlcnl0aGluZyBhYm91dCB0aGlzIHJlYWxpdHkgd2l0aCBUcnVtcCBhcyBwcmVzaWRlbnQuIApCYXNpYyBTdHJhdGVnaWVzIG9mIE9tYWhhIFBva2VyCllvdSBjYW4gYWxzbyBtYWtlIGEgcGhvdG8gbW9zYWljLiAKU2hvdWxkIEkgZ2V0IG15IElzcmFlbGkgUGFzc3BvcnQvQ2l0aXplbnNoaXAgYmVmb3JlaGFuZCwgb3IgaXMgaXQgdmVyeSBlYXN5IG9uY2UgdGhlcmU/IFNob3VsZCBJIG5vdCBnZXQgaXQgYXQgYWxsP0Fzc2VtYmxlIHlvdXIgZG9jdW1lbnRzIGFuZCBzdWJtaXQgdGhlbSB3aGlsZSB5b3UgdGhlcmUuIEFuZCB5b3Ugc2hvdWxkIGdldCB5b3VyIElzcmFlbGkgcGFzc3BvcnQsIGV2ZW4gaWYgeW91IGRvbiBwbGFuIG9uIGxpdmluZyBpbiBJc3JhZWwuIApIb3dldmVyLCBJIGhhdmUgYSByZWFsbHkgc2hpdHR5IHNlbnNvcnkgaW1hZ2luYXRpb24gYW5kIGxpa2UgdG8gaGF2ZSBhdWRpbyBhbmQvb3IgdmlzdWFsIHN0aW11bHVzIHRvIGluY3JlYXNlIG15IGFyb3VzYWwuIApNeSBlbXBoYXNpcyBpcyBvbiBlZHVjYXRpbmcgdGhlIHBhdGllbnQgYWJvdXQgaGVhbHRoIGFuZCBob3cgdG8gdGFrZSBjYXJlIG9mIHRoZW1zZWx2ZXMuIApUaG9tYXMgRGF2aWQgQm9tYmVycnksIGFsc28gYWNjdXNlZCBvZiBzZWNvbmQgZGVncmVlIG11cmRlciBpbiB0aGUgZGVhdGhzIG9mIE1pbGxlciBhbmQgUG9ydGVyLCBhbHNvIGlzIGtub3duIHRvIGFyZWEgcG9saWNlIHNlcnZpY2VzLgpUb20gWWFtIEN1cnJ5IGJ5IHlvdXJzIHRydWx5LiAKTXkgc29uIGNhbGxzIGhpbSBEYWRkeSBub3cgYW5kIGlzIGFsd2F5cyBhc2tpbmcgdG8gcGxheSB3aXRoIGhpbS4gCkNyaWNrZXQgY2FuIHNjYXJjZWx5IGhvcGUgYWdhaW4gdG8gd2l0bmVzcyB0d28gc3R5bGVzIGFzIGZhc2NpbmF0aW5nbHkgY29udHJhc3RlZCBhbmQgYXMgcmFjaWFsbHkgcmVwcmVzZW50YXRpdmUgYXMgRnJ5J3MgYW5kIFJhbmppdHNpbmhqaSdzLiBCZXR3ZWVuIHRoZW0gdGhleSBldm9sdmVkIGEgZG9jdHJpbmUgdGhhdCBjYXVzZWQgYSBmdW5kYW1lbnRhbCBjaGFuZ2UgaW4gdGhlIHRhY3RpY3Mgb2YgYmF0c21hbnNoaXAuIFBsYXkgYmFjayBvciBkcml2ZS4gCkRlbGhpIGJhc2VkIEx1dGhlciwgd2hvc2UgZmF0aGVyIHdhcyBpbiB0aGUgSW5kaWFuIEFpciBGb3JjZSwgY2hhbmNlZCB1cG9uIHBva2VyIHF1aXRlIGFjY2lkZW50YWxseSBzaGUgd2FzIHZpc2l0aW5nIGEgZnJpZW5kcyBob3VzZSBhbmQgc2F3IGEgZ2FtZSBiZWluZyBwbGF5ZWQuIFNoZSBkZWNpZGVkIHRvIGpvaW4gdGhlbSwgYW5kIHdvbiBhIGZldyBoYW5kcy4gSXQgbWFkZSBoZXIgY3VyaW91cyBhYm91dCB0aGUgZ2FtZSBzbyBzaGUgd2VudCBob21lIGFuZCBwbGF5ZWQgYSBmZXcgZ2FtZXMgb25saW5lLiBJIHdhcyBwbGF5aW5nIGFuZCByZXNlYXJjaGluZyB0aGUgZ2FtZSwgSSBub3RpY2VkIHRoYXQgdGhlcmUgd2VyZSBwYXR0ZXJucyB0byBpdCwgdGhhdCB0aGVyZSB3YXMgbWF0aHMgdG8gaXQgcHJvYmFiaWxpdHkgYW5kIHRoYXQgYXMgbG9uZyBhcyB5b3Uga25ldyB5b3VyIG9kZHMsIHlvdXIgc3RyYXRlZ3ksIHJlYWQgc29tZSB0ZW5kZW5jaWVzIHdlbGwsIHlvdSB3b3VsZCB3aW4uIFRoYXQgcmVhbGx5IGJsZXcgbXkgbWluZCB0aGF0IGEgZ2FtZSBvZiBjYXJkcyBjYW4gaGF2ZSBza2lsbCBhbmQgc3RyYXRlZ3kgYmVoaW5kIGl0LiBJIHdhcyBob29rZWQuIEl0IGhlbHBlZCB0aGF0IG1hdGhzIGhhZCBhbHdheXMgYmVlbiBMdXRoZXIgZmF2b3VyaXRlIHN1YmplY3QuClRoZXkgYmxhbWUgb3RoZXJzIGZvciB0aGVpciBhbmdlciwgc2FkbmVzcyBhbmQgZGVwcmVzc2lvbiwgYnV0IHJhcmVseSBsb29rIGlud2FyZGx5LiAKV2l0aCB5b3VyIGNsaWVudCBpbiBhIGNvbWZvcnRhYmxlIHBvc2l0aW9uLCB5b3UgY2FuIG5vdyBiZWdpbiB0aGUgU3dlZGlzaCBoYW5kIG1hc3NhZ2UuIApZb3VyIHN0b3J5IHJlbWluZHMgb2YgbWUgb2YgZmlsbW1ha2VyIFNhbSBCb3p6byB0YWtlIG9uIGZpbG0gbGVha3MuIEFuIGVhcmx5IGN1dCBvZiBoaXMgIkhhY2tlcnMgV2FudGVkIiBmaWxtIHdhcyBsZWFrZWQuIFdoYXQgaW5pdGlhbGx5IGxvb2tlZCBsaWtlIGEgZGlzYXN0ZXIvY2F1c2UgZm9yIHBhbmljIHdhcyBhIGJsZXNzaW5nIGluIGRpc2d1aXNlQXMgaXQgd2FzIGdvb2QgZmlsbSBtYWtpbmcsIGRvbmF0aW9ucyBwb3VyZWQgaW4uIApGYXN0IGZvcndhcmQgYWJvdXQgMyBtb250aHMgYW5kIEkgY2hhbGxlbmdlIE1uZWwgdG8gdGhlIHNhbWUgbWF0Y2h1cC4gSSBnb3QgZnVja2luZyBhbm5paGlsYXRlZC4gSSB0aGluayBoZSBLT2QgbWUgaW4gNiByb3VuZHMuIEhlIGJlY29tZSBhIGhhbmRmdWwgZm9yIHN1cmUuCiJUaGVyZSdzIG11Y2ggbW9yZSBpbXByb3Zpc2F0aW9uIGFuZCByb29tIHRvIGNyZWF0ZS4iIFRoZSBpbmZsdWVuY2Ugb2YgdHJhZGl0aW9uYWwgeW9nYSBpcyBldmlkZW50IGluIGFjcm95b2dhIHBvc2VzIG1hbnkgb2Ygd2hpY2ggaW5jb3Jwb3JhdGUgcmVjb2duaXphYmxlIHBvc2l0aW9ucyBidXQgdGhlIGV4cGVyaWVuY2Ugb2YgYWNyb3lvZ2EgaXMgbW9yZSBha2luIHRvIHBhcnRuZXIgZ3ltbmFzdGljcy4gCkltYWdpbmUgeW91IGFyZSBhIHRvdXJpc3QgdmlzaXRpbmcgQ2hpbmEuIApJIHdvbiBzcG9pbCB0aGUgZ2FtZSBpZiB5b3UgdW5mYW1pbGlhciB3aXRoIGl0LCBldmVyeSBOaW50ZW5kbyBmYW4gc2hvdWxkIHBsYXkgaXQuCklmIHlvdSBmZWVsaW5nIGdlbmVyb3VzLCB5b3UgY2FuIG9mZmVyIGEgcmVwbGFjZW1lbnQgdXBvbiB0aGVtIHJlcG9ydGluZyB0aGVmdCBhbmQgc2VuZGluZyB5b3UgdGhlIHJlcG9ydCBidXQgeW91IGRvbiBoYXZlIHRvIG9mZmVyIHRoYXQuIE9uY2UgdGhlIHBhY2thZ2Ugc2hvd3MgYXMgZGVsaXZlcmVkLCB5b3VyIHJlc3BvbnNpYmlsaXR5IGVuZHMuLiAKVGhlIFBPNCBhY3R1YWxseSB3YXMgaW4gdGhlIGdhbWUgZHVyaW5nIGRldmVsb3BtZW50IGJ1dCB3YXMgY3V0IGZvciByZWFzb25zLiAKRXZlbiBpZiB5b3UncmUgYWx3YXlzIHdpbm5pbmcgYW5kIGV2ZW4gaWYgeW91IHBsYXkgYWdncmVzc2l2ZWx5LCB5b3UgY2FuIGxvc2UgYWxsIHlvdXIgb25saW5lIGJhbmtyb2xsIG1vbmV5IGFuZCB5b3UgY2Fubm90IHBsYXkgYW55bW9yZSBiZWNhdXNlIHlvdXIgZGVwb3NpdCBpcyBnb25lIChldmVuIGlmIHlvdSBoYXZlIGNhc2ggYXZhaWxhYmxlKS4gCkV2ZW4gdGhlIEtldmluIFNwYWNleSBtb3ZpZSAyMSBtYWRlIGV2ZXJ5b25lIHRoaW5rIEkga25vdyBob3cgdG8gY2FyZCBjb3VudCAgIGFuZCB0aGF0IHdhc24ndCBldmVuIGFib3V0IHBva2VyLCBidXQgYmxhY2tqYWNrLiBOb25ldGhlbGVzcywgSSdtIGdsYWQgdG8gc2VlIHBva2VyIG9uIHRoZSBzaWx2ZXIgc2NyZWVuIGFnYWluLCBldmVuIGlmIEknbSBub3QgbG9va2luZyBmb3J3YXJkIHRvIGFuc3dlcmluZyBxdWVzdGlvbnMgYWJvdXQgd2hldGhlciBJJ3ZlIHBsYXllZCB3aXRoIFJ1c3NpYW4gbW9ic3RlcnMuCkEgbGFkeSB3YXMgaG9sZGluZyBhIGJveCBvZiBoZXIgb3duIHNoaXQgYW5kIHdhcyB3YWxraW5nIHVwIGFuZCBkb3duIHllbGxpbmcgYXQgcGVvcGxlIGFib3V0IHNoZSBzaGl0IGluIGhlciBvd24gYm94IGFuZCBtaW5kZWQgaGVyIG93biBidXNpbmVzcyBhbmQgd291bGQgc3BlYWsgaW4gdG9uZ3VlcyBvciBzb21ldGhpbmcuIApUaGUgYWRhcHRlciB0aGF0IGNvbWVzIHdpdGggaXQgb25seSBzdXBwb3J0cyB1cCB0byA5MFcsIHdoaWNoIGlzIHJlYWxseSBsb3cgZm9yIHNvbWV0aGluZyB5b3Ugc2hvdWxkIGJlIHVzaW5nIGZvciBnYW1pbmcuIApTaW5jZSBoZXIgaW5pdGlhbCBzdG9yeSB3YXMgcHVibGlzaGVkLCBhbmQgZXZlbiBtb3JlIHNvIGZvbGxvd2luZyB0aGUgcmVsZWFzZSBvZiBDaG9wIFN1ZXkgTmF0aW9uLCBsZWdpb25zIGhhdmUgZXhwcmVzc2VkIHRoZWlyIGxveWFsdHkgdG8gdGhlIENoaW5lc2UgcmVzdGF1cmFudCB0aGV5IGdyZXcgdXAgd2l0aC4gIlRoZXJlJ3MgYSByZWFzb24gd2h5IGEgbG90IG9mIHBlb3BsZSBsb3ZlIHRoaXMgZm9vZC4gClVzZSBhIHRyZW5keSBtZWRpdW0gaGFpcmN1dCBpbiBzZWR1IGhhaXJzdHlsZSBvciBhIHNoYWcgY3V0LiAKQWxsIG9mIHRoZSBlbXBsb3llZXMgYXJlIGluIGFncmVlbWVudCB0aGF0IHRoZSBlbnRpcmUgaGFyZCBoYXQgcnVsZSBpcyByaWRpY3Vsb3VzIHRvIGJlZ2luIHdpdGguIApNYW55IHBlb3BsZSB3ZXJlIHVwc2V0IHdpdGggUHJpbWUgTWluaXN0ZXIgSnVzdGluIFRydWRlYXUgdGhpcyB3ZWVrIGZvciBzYXlpbmcgZmFtaWxpZXMgZG9uIGJlbmVmaXQgZnJvbSB0YXggYnJlYWtzIGJlY2F1c2UgdGhleSBkb24gcGF5IHRheGVzLiBDb3Vyc2UsIHNvbWUgd2VyZSB1cHNldCBiZWNhdXNlIHRoZXkgZmVsdCBpdCB3YXMgdW50cnVlLiBCdXQgVHJ1ZGVhdSB3YXMgc3BlYWtpbmcgdGhlIGNvbXBsZXRlIHRydXRoIHdoZW4gaXQgY29tZXMgdG8gaW5jb21lIHRheGVzIChIU1QsIHJlYWx0eSB0YXhlcyBhbmQgb3RoZXIgY29uc3VtcHRpb24gdGF4ZXMgYXJlIGFub3RoZXIgc3RvcnkpLiAKRm9yIHRoZSByZWNvcmQgd2VlZCB3YXMgc3RpbGwgaWxsZWdhbCBieSBzZXZlcmFsIHllYXJzIGluIHRoaXMgc3RhdGUuIApXaGVuIHlvdSB2aXNpdCB0aGUgVGV4YXMgSG9sZGVtIFBpcmF0ZSBQb2tlciBTb2Z0d2FyZSBzaXRlIGluIGEgZmV3IG1pbnV0ZXMsIHlvdSB3aWxsIHNlZSBhbiBleGFtcGxlIG9uIHRoZSByaWdodCBoYW5kIHNpZGUgb2YgdGhlIHBhZ2UuIApTaGUgd2FzIHB1bGxlZCBieSBhIGxvY2FsIHJlc2N1ZSB0aGF0IEkgdm9sdW50ZWVyIHdpdGggYW5kIHNoZSBoYWQgYSBtYXNzIHRoYXQgd2FzIHJlbW92ZWQsIHdoaWNoIHdhcyBub3QgY2FuY2Vyb3VzLiBJdCB2ZXJ5IHNhZCB0byB0aGluayBob3cgbWFueSBvZiB0aGVzZSBiYWJpZXMgYXJlIGJlaW5nIHB1dCBkb3duIGR1ZSB0byBiZWluZyBtaXNkaWFnbm9zZWQuLiAKQXQgdGhlIHZlcnkgbGVhc3QsIGl0IGdldHMgdGhlIGJhbGwgcm9sbGluZyBhbmQgZXN0YWJsaXNoZXMgdG8gb3RoZXJzIHRoYXQgd2hhdCBnb2luZyBvbiBpcyBjbGVhcmx5IHdyb25nLiAKQWxhaW4gUmV5IGVzdCBhcGljdWx0ZXVyIGRlcHVpcyAyMCBhbnMgYXBycyBkJ2F1dHJlcyB2aWVzLiBFbW1hbnVlbCBDaGF2YXNzaWV1eCBhIGV1IGRlcyB2aWVzIG11bHRpcGxlcyBnYWxlbWVudCAobGdpb25uYWlyZSwgcGhvdG9ncmFwaGUsIGNvdXRlbGllcikuIFRoaWVycnkgRGVsYWJyZSwgcHJvZmVzc2lvbm5lbCBkZSBsYSBjb21tdW5pY2F0aW9uIGV0IGR1IHdlYiBkZXZlbnUgYm91bGFuZ2VyIHBsdXMgdnJhaW1lbnQgYW1hdGV1ci4gRXQgYydlc3QgYXVzc2kgbGUgYm9uaGV1ciBkZSBnb3RlciBsZXVycyBwcm9kdWl0cy4gQ2FyIGlscyBvbnQgIGNvZXVyIGRlIHBhcnRhZ2VyIGNlIHF1J2lscyBtZXR0ZW50IHRhbnQgZGUgc29pbiAgcHJvZHVpcmUuIApFdmVyeSB2aXNpdCB0aGUgY2hpcm9wcmFjdG9yIGhhZCB0byBkbyBsZXNzIHdvcmsgYW5kIG15IGhvcnNlIHNlZW1zIHNvIG11Y2ggaGFwcGllciB1bmRlciBzYWRkbGUsIHdoaWNoIGhhcyBkb25lIHdvbmRlcnMgZm9yIGhpcyB0cmFpbmluZyBhcyB3ZWxsLiBJIHdpbGwgc2F5IHRoYXQgZm9yIG15IG93biBib2R5LCBJIGZpbmQgdGhhdCBtYXNzYWdlL0dyYXN0b24gaGFzIGhlbHBlZCBtZSAiaG9sZCIgYWRqdXN0bWVudHMgbG9uZ2VyLCBzbyBpdCBub3QgdGhhdCBiaWcgYSBzdHJldGNoIHRvIHNheSBpdCB3b3VsZCB3b3JrIHNpbWlsYXJseSBpbiBob3JzZXMuIApOb3csIGl0IGFsbCBibGVuZGVkIHRvZ2V0aGVyIGFuZCBJIGZvdW5kIHRoYXQgb3V0IHRoZSBoYXJkIHdheS4gCklmIHlvdSBhcmUgcGxheWluZyBvbiB0aGUgaW50ZXJuZXQsIHRoaXMgc2hvdWxkbnQgYmUgdG9vIG11Y2ggb2YgYSBwcm9ibGVtLiBCdXQgaWYgeW91IGFyZSBwbGF5aW5nIGluIGEgcmVhbCBicmljayBhbmQgbW9ydGFyIGNhc2lubyB3aXRoIHJlYWwgcGVvcGxlLCB0aGUgbGFzdCB0aGluZyB5b3Ugd2FudCB0byBkbyBpcyB0byByZWZlciB1cCBhIGJvb2sgb24gdGhlIGJlc3QgcG9rZXIgaGFuZHMuIEFuZCB0aGUgbGFzdCB0aGluZyB0aGF0IHlvdSB3YW50IHRvIGRvIGlzIHRvIG1peCB1cCBhIFRocmVlIG9mIGEgS2luZCB3aXRoIGEgRnVsbCBIb3VzZTsgb3IgaW1hZ2luZSB0aGF0IHlvdSBoYXZlIGEgUm95YWwgRmx1c2ggd2hlbiBhbGwgeW91IGhhdmUgaXMgYSBTdHJhaWdodCEgVGhlc2Uga2luZHMgb2YgYmx1bmRlcnMgY2FuIGNvc3QgeW91IG1vbmV5IGFuZCBzaW5jZSB0aGF0IGlzIHRoZSB2ZXJ5IGxhc3QgdGhpbmcgdGhhdCB5b3Ugd2FudCB0byBkbywgaXQgaXMgcHJvYmFibHkgaW4geW91ciBiZXN0IGludGVyZXN0cyBpZiB5b3UgYmVjb21lIG1vcmUgZmFtaWxpYXIgd2l0aCB0aGUgZGlmZmVyZW50IHBva2VyIGhhbmRzLiAKSSB0aGluayB0aGUgZGV2ZWxvcGVkIHdvcmxkIHNob3VsZCBjaGFuZ2Ugb3VyIGN1bHR1cmUgdG8gZW5jb3VyYWdlIHBlb3BsZSB0byBsb29rIGFmdGVyIHRoZWlyIHBhcmVudHMgd2hlbiB0aGV5IGJlY29tZSBvbGQgYW5kIGRlY3JlcGl0LiAKSXQgcmVhbGx5IGNvb2wgdGhhdCBBaXIgTml1Z2luaSBvZiBQYXB1YSBOZXcgR3VpbmVhIGhhdmUgb3JkZXJlZCBhIHNvbGl0YXJ5IGFpcmNyYWZ0LiAKT3VyIGh1bW9yIGFuZCBvdXRnb2luZyBwZXJzb25hbGl0aWVzIHNob3VsZCBzZXJ2ZSB0byBhdHRyYWN0IGFuZCBmaWx0ZXIgb3RoZXJzLiAKT24gU2F0dXJkYXksIEp1bmUgMywgdm9sdW50ZWVycyBpbiB3b3JrIGdsb3ZlcyB3aWxsIHdpZWxkIHRyYXNoIGJhZ3MsICJwb2tlciBzdGlja3MiIGFuZCBhIGNhbiBkbyBhdHRpdHVkZSB0byB1bmRvIHdpbnRlcidzIGNvbGxlY3RlZCB0cmFzaCBhbmQgZ3JpbWUgb24gbWFqb3Igcm9hZHdheXMgYW5kIGluIG5laWdoYm9yaG9vZHMuCllvdSBjb3VsZCBpbXBvcnQgYSBEWEYgb2YgYSBjb21wbGV4IG91dGxpbmUgZnJvbSBhbm90aGVyIHByb2dyYW0gaWYgeW91IG5lZWRlZCB0by5Ob24gcmVjdGFuZ3VsYXIgb3V0bGluZXMgYXJlIG1hZGUgYnkgQ05DIHJvdXRpbmcuIApUaGUgUkZQIGlzc3VlZCBKYW4uIDE3IHN0YXRlczogQWxiZXJ0YW5zIGFjY2VzcyB0byAuIEFuIG9ubGluZSBnYW1ibGluZyBwcmVzZW5jZSB3aWxsIGFzc2lzdCB0aGUgQUdMQyBpbiBzdXN0YWluaW5nIGxvbmcgdGVybSByZXZlbnVlIGJ5IHByb3ZpZGluZyBnYW1pbmcgZW50ZXJ0YWlubWVudCB0aHJvdWdoIGEgbmV3IGNoYW5uZWwgdGhhdCB1bHRpbWF0ZWx5IHJlc3BvbmRzIHRvIGNvbnN1bWVyIGFuZCBlbnRlcnRhaW5tZW50IHRyZW5kcy4gSXRzIG93biBvbmxpbmUgZ2FtaW5nIHdpbGwgaGVscCBrZWVwIG1pbm9ycyBmcm9tIHBhcnRpY2lwYXRpbmcgYW5kIGVuc3VyZSB3aW5uaW5ncyBnZXQgaW50byB0aGUgaGFuZHMgb2YgcGxheWVycyB3aG8gYmUgYmV0dGVyIGFibGUgdG8gcGxheSByZXNwb25zaWJseSwgc2FpZCB0aGUgUkZQLi4gCk9uZSBvZiB0aGUgb3RoZXIgcGFzc2VuZ2VycyBkaWVkLiBTaGUgd2FzIHdpdGggZnJpZW5kcyByZXR1cm5pbmcgZnJvbSBhIHBva2VyIHRvdXJuYW1lbnQgd2l0aCBhbm90aGVyIGNvbXBhbnkuIFRoZSBkcml2ZXIgd2FzIGRydW5rIGFuZCBoaXQgYSBicm9rZW4gZG93biB0cnVjayBpbiBDaGFybG90dGUgQ291bnR5LiJUaGUgdHJ1Y2sgc2xpY2VkIGludG8gdGhlIHZlaGljbGUgbGlrZSBhIGNhbiBvcGVuZXIsIiBzaGUgc2FpZCwgdGhvdWdoIHNoZSByZW1lbWJlcnMgbm90aGluZyBvZiB0aGUgY3Jhc2guIFBhcnQgb2YgaGVyIGFybSB3YXMgc2V2ZXJlZCBhbmQgdGhlIHNraW4gd2FzIHBlZWxlZCBmcm9tIGhlciB1cHBlciBhcm0uIApTaHVmZmxlIHRoZSBkZWNrLiAKSSdsbCBsZWF2ZSBpdCB0byBvdXIgbXVzaWMgZXhwZXJ0cyB0byBndWlkZSB5b3VyIG11c2ljYWwgam91cm5leSBhY3Jvc3MgQm91bGRlci4gQnV0IGhhbGYgdGhlIGZ1biBvZiB0aGUgRnJvbnQgUmFuZ2UgaXMgdGhlIG5ldmVyIGVuZGluZyBzdHJlYW0gb2YgZ3JlYXQgbXVzaWMgcG9wcGluZyB1cCBhdCB2ZW51ZXMgYWNyb3NzIHRvd24uIFRoZSBGb3ggYW5kIEJvdWxkZXIgVGhlYXRlciBicmluZyBpbiBiaWcgbmFtZSBhY3RzLiAKU2VzIGFjdGlvbnMgc29udCBjb25kdWl0ZXMgZGFucyBsZSBjYWRyZSBkZXMgY29tcHRlbmNlcyBxdWUgbGVzIEV0YXRzIGx1aSBvbnQgYXR0cmlidWUuIApIZSB0dXJuZWQgb3V0IHRvIGJlIGEgZmluZSB5b3VuZyBtYW4gYW5kIGEgUk4uIEhpcyBsaWZlIHdhcyB0cmFnaWNhbGx5IGN1dCBzaG9ydCBhdCB0aGUgYWdlIG9mIDMwIGJ1dCBJIHdpc2ggaGUgY291bGQgcmVhZCB5b3VyIGxldHRlciBhbmQga25vdyB0aGF0IGl0IHdhcyBub3QgaGlzIGZhdWx0IG9yIG1pbmUgdGhhdCBoZSBoYWQgc28gbWFueSBmcmFjdHVyZXMuIApJbnN0YW5jZSwgaW4gSXJhbiAiYmFkIiB3b21lbiBhcmUgYmVpbmcgYmxhbWVkIGZvciBjYXVzaW5nIGVhcnRocXVha2VzLiAKIDU1IHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvVm9sdm8sIGFzIGEgYnJhbmQsIGlzIG1ha2luZyB0aGUgYmVzdCBsb29raW5nIGNhcnMgaW4gdGhlIGluZHVzdHJ5IHJpZ2h0IG5vdy4gVGhleSBzaW1wbHkgZG8gbm90IG1ha2UgYSBiYWQgbG9va2luZyB2ZWhpY2xlLCBzb21ldGhpbmcgbm8gb3RoZXIgbWFudWZhY3R1cmVyIGhhcyBldmVyIGFjY29tcGxpc2hlZC5JIGdpdmUgVm9sdm8gY3JlZGl0IGZvciBzdGF5aW5nIG91dCBvZiB0aGUgcGVyZm9ybWFuY2UgZ2FtZSAgIGFuIGFyZW5hIHdoZXJlIHRoZXkgc2ltcGx5IGRvbiBoYXZlIHRoZSByZXNvdXJjZXMgdG8gd2luLiAKV2hhdCBkb2VzIGl0IG1lYW4gd2hlbiAyIHBlb3BsZSBoYXZlIHRoZSBzYW1lIGRyZWFtIGFib3V0IGNhbmNlcj8KVGhlIGZhdGUgb2YgdGhlIGNoYWluJ3MgcmVtYWluaW5nIEJheSBBcmVhIHJlc3RhdXJhbnRzIHJlbWFpbmVkIHVuY2xlYXIgbGF0ZSBUaHVyc2RheSwgYnV0IGFuIGVtcGxveWVlIG9mIHRoZSBkb3dudG93biBTYW4gSm9zZSBsb2NhdGlvbiBzYWlkIHRoYXQgb25lIHdhcyBzdGF5aW5nIG9wZW4sIGFzIGZhciBhcyBoZSBrbmV3LiBUaGUgbWFuYWdlciB3YXMgbm90IGF2YWlsYWJsZSBmb3IgY29tbWVudC4KQSByZW1hcmsgZnJvbSBUcnVheGUgdG8gYSBzb2NpYWwgbWVkaWEgZm9sbG93ZXIgaW4gRmVicnVhcnkgYW5nZXJlZCBzb21lIG9mIHRoZSBicmFuZCdzIGZhbnMgZW5vdWdoIGZvciB0aGVtIHRvIGJlZ2luIHBvc3RpbmcgaW1hZ2VzIG9mIGJ1cm5pbmcgRGVjaWVtIHByb2R1Y3RzLgpZb3UgbmVlZCAzMCBidXkgaW5zIGJlZm9yZSB5b3UgY2FuIGV2ZW4gaGF2ZSBhIHNlYXQgb3IgcGxheSBhIGhhbmQuIApXaGF0IGRvIHlvdSB0aGluayB0aGUgSW50ZXJuZXQgd2lsbCBiZSBsaWtlIGluIDIwNTAKRmlmdHkgeWVhcnMuIApZb3UgYmUgd2FpdGluZyBtaW5pbXVtIDEgeWVhciBmb3IgS2l3YW1pIDIgbG9jYWxpc2F0aW9uLiBCZXNpZGVzLCAyIGlzIHBlcmZlY3RseSBwbGF5YWJsZSBhbmQgZW5qb3lhYmxlIHRvIHRoaXMgZGF5LCBiZSBpdCBvbiBhIFBTMiBvciB0aGUgc2ltcGxlciBjaG9pY2Ugb2YgZW11bGF0aW5nIGl0LiBBbmQgYmVpbmcgb25lIG9mIHRoZSBiZXN0IGdhbWVzIGluIHRoZSBzZXJpZXMsIGl0IGRlZmluaXRlbHkgd29ydGggdHJ5aW5nIG91dC4gCkhlIGlzIHJlYWxseSBnb29kIG5vdy4gU29tZSBvcGlhdGVzIGhlcmUgYW5kIHRoZXJlIGJ1dCBub3doZXJlIG5lYXIgYSBwaHlzaWNhbCBhZGRpY3Rpb24gYW5kIGhlYWx0aHkgYW5kIGZpbmFuY2lhbGx5IHN0YWJsZSB3aXRoIGEgZ29vZCBjYXJlZXIuCkdhbGxlcnkgUGFya2xhbmQ6IE9uZSBZZWFyIExhdGVyT25lIFllYXIgQW5uaXZlcnNhcnkgT2YgRGVhZGx5IFNob290aW5nIEF0IE1hcmpvcnkgU3RvbmVtYW4gRG91Z2xhcyBIaWdoIFNjaG9vbCBJbiBQYXJrbGFuZCwgRmxvcmlkYVBBUktMQU5ELCBGTE9SSURBICAgRkVCUlVBUlkgMTQ6IFBlb3BsZSBwYXVzZSBmb3IgYSBtb21lbnQgb2Ygc2lsZW5jZSBhdCAxMDoxN2FtIG5lYXIgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIGFzIHRoZXkgcmVtZW1iZXIgdGhvc2UgbG9zdCBkdXJpbmcgYSBtYXNzIHNob290aW5nIGF0IHRoZSBzY2hvb2wgb24gRmVicnVhcnkgMTQsIDIwMTkgaW4gUGFya2xhbmQsIEZsb3JpZGEuIApJIGtub3cgdGhlcmUgYSBsb3Qgb2Ygc2hvcnQgcG93ZXJsaWZ0ZXJzIHdobyB1c2UgNCIgYmVsdHMuIApMZXMgYXR0ZWludGVzIGF1IGNvcnBzIGF2ZWMgbGUgY29uc2VudGVtZW50IGRlIGxhIHBlcnNvbm5lIDogb24gZXN0IG1hdHJlIGRlIHNvbiBjb3JwcywgbWFpcyBzZXVsZW1lbnQgZGFucyB1bmUgY2VydGFpbmUgbWVzdXJlLiBEZSBmYWl0LCBpbCBlc3QgcG9zc2libGUgZCdlZmZlY3R1ZXIgZGVzIGFjdGl2aXRzIGRhbmdlcmV1c2VzIChlbmdhZ2VtZW50IG1pbGl0YWlyZSwgdm9sIHNwYXRpYWwsIHNwb3J0cyBkYW5nZXJldXgpIDsgZGVzIHJlY2hlcmNoZXMgYmlvbWRpY2FsZXMgcmdsZW1lbnRlcyA7IGRlcyBkb25zIGJudm9sZXMsIGdyYXR1aXRzIGV0IGFub255bWVzIChjaGV2ZXV4LCBzYW5nLCBzcGVybWUsIGV0Yy4pIDsgZGVzIHBybHZlbWVudHMgZCdvcmdhbmVzIHN1ciB1bmUgcGVyc29ubmUgdml2YW50ZSBzdHJpY3RlbWVudCBlbmNhZHJzIDsgZGVzIGxlZ3MgZHUgY29ycHMgb3UgbGEgY3JtYXRpb24gYXBycyBsYSBtb3J0IDsgZGVzIHRhdG91YWdlcyBldCBwaWVyY2luZyA7IHRyYW5zc2V4dWFsaXNtZSAgcmFpc29uIGRlIHN0cmljdGVzIGNvbmRpdGlvbnMgOyBsZSBzdWljaWRlIG4nZXN0IHBhcyBwdW5pc3NhYmxlIGV0IGRvbmMgbidlc3QgcGFzIGludGVyZGl0IDsgbGEgY29udHJhY2VwdGlvbiBldCBsZXMgaW50ZXJydXB0aW9ucyB2b2xvbnRhaXJlcyBkZSBncm9zc2Vzc2UgQSBjb250cmFyaW8sIGNlIGRyb2l0IGVzdCBsaW1pdCA6IGludGVyZGljdGlvbiBkZXMgbXV0aWxhdGlvbnMgdm9sb250YWlyZXMgOyBwcm9jcmF0aW9uIG91IGdlc3RhdGlvbiBwb3VyIGxlIGNvbXB0ZSBkJ2F1dHJ1aSAoZ3JhdHVpdGUgb3UgcGF5YW50ZSkgOyBsJ2V1dGhhbmFzaWUgZXN0IGludGVyZGl0ZSwgbGEgbG9pIHBydm95YW50IGwnYWNjb21wYWduZW1lbnQgZGUgZmluIGRlIHZpZSAoYXJydCBkZXMgdHJhaXRlbWVudHMpIDsgaW50ZXJkaWN0aW9uIGRlIGxhIGNyeW9nbmlzYXRpb24KQmVpbmcgb3BlbiB0byBuZWdvdGlhdGlvbiBzaG91bGQgaGVscCB5b3UgZmVlbCBvdXQgdGhlIG1hcmtldCBpbnRlcmVzdCBsZXZlbCBhbmQgZXhwZWN0YXRpb24gb2YgcHJpY2UuIApEb24ndCBHYW1ibGUhIERvbid0IGludmVzdCBtb25leSEgSnVzdCBQbGF5IGZyZWUgUG9rZXIgYW5kIFdpbiBSZWFsIE1vbmV5IC4gTW9zdCBzY2hvb2xzIGFyZSBibG9ja2luZyB0aGVzZSB3ZWJzaXRlcyBhbG9uZyB3aXRoIHNvY2lhbCBuZXR3b3JrcyBsaWtlIEZhY2Vib29rLiAKV2lyIGhhYmVuIGRhYmVpIHNvZ2FyIGRpZSBlbnRzcHJlY2hlbmRlbiAgS3VuZGVuIGltIFp3ZWlmZWwgZGlyZWt0IGtvbnRha3RpZXJ0IHVuZCBzaWUgYXVmZ2Vmb3JkZXJ0LCBpaHIgR2VsZCBhdXN6YWhsZW4genUgbGFzc2VuIHVuZCBkYXMgQ2FzaW5vIHp1IHZlcmxhc3Nlbi4uIApUaGVyZSBhcmUgcXVpdGUgYSBmZXcgZmlsbXMgdGhhdCB3b24gdGhlIEFjYWRlbXkgQXdhcmRzIGFuZCBuZXZlciBiZWNhbWUgYmxvY2tidXN0ZXJzLCBidXQgaXQgZG9lcyBnaXZlIHlvdSBhIGJ1bXAuIApUaGUgTGFzIFZlZ2FzIGNhc2Ugd2lsbCBub3QgYmUgaW52ZXN0aWdhdGVkIGJlY2F1c2UgdGhlIHN0YXR1dGUgb2YgbGltaXRhdGlvbnMgaW4gTmV2YWRhIGlzIDIwIHllYXJzLgpUaGUgc3BvcnRzIGNsdWIgaXMgdGhlIHBhcmVudCBib2R5IG9mIHRoZSBmb290YmFsbCBuZXRiYWxsIGNsdWIgaW4gYSB1bmlxdWUgYXJyYW5nZW1lbnQgaW4gdGhlIE92ZW5zIGFuZCBNdXJyYXkgbGVhZ3VlLgpNaW5lIHdlcmUgZmlsbGVkIHdpdGggaWNlLiBVbmRlciB0aGF0IHNsaWRpbmcgb3V0IGRyYXdlciBvbiB0aGUgYm90dG9tPyBHaWFudCBzaGVldCBvZiBpY2UuIFR1cm5zIG91dCB0aGVyZSBhIGxpdHRsZSBjb3BwZXIgd2lyZSBiZWhpbmQgdGhlIGJhY2sgcGFuZWwgdGhhdCBpcyBzdXBwb3NlZCB0byBtZWx0IHRoZSBpY2UgYW5kIGl0IHRvbyBzaG9ydC4gClRoYXQgZG9lc24gbWVhbiBnZXR0aW5nIHRoaXMgbW92aWUgbWFkZSB3YXMgZWFzeS4gQW4gZWFybHkgcHJvc3BlY3RpdmUgcHJvZHVjZXIgc3VnZ2VzdGVkIGNhc3RpbmcgYSB3aGl0ZSB3b21hbiBhcyB0aGUgbGVhZC4gTGF0ZXIsIHRoZSBmaWxtbWFrZXJzIHR1cm5lZCBkb3duIGEgbHVjcmF0aXZlIGRlYWwgd2l0aCBOZXRmbGl4IHRvIG1ha2UgdGhlIGZpbG0gd2l0aCBXYXJuZXIgQnJvcy4sIHdoaWNoIGd1YXJhbnRlZWQgaXQgYSBoaWdoZXIgcHJvZmlsZSByZWxlYXNlLiAKVGhlIGxpZ2h0YnVsYiB3ZW50IG9uIGluIG15IGhlYWQgd2hlbiBJIGNvbmNlaXZlZCBvZiBjb21iaW5pbmcgYSBzdXBwbHkgb2YgYmVldHMgd2l0aCBhIHRhc3RlIGZvciBjaG9jb2xhdGUgY2FrZS4gTWFnaWNhbGx5LCBpdCB3b3JrZWQhIEkgdXN1YWxseSBmaW5kIHdheXMgb2YgbWFraW5nIGEgY2FrZSBzd2VldCBieSB1c2luZyBmcnVpdCBpbnN0ZWFkIG9mIHN1Z2FyLiBJIGFsd2F5cyB1c2Ugd2hvbGV3aGVhdCBmbG91ci4gClRoaXMgcmVtaW5kcyBtZSBvZiB0aGUgYXJpem9uYSBjYXNlIHdoZXJlIHRoZXkgdHJpZWQgdG8gYWRkIGFkZGl0aW9uYWwgcHJvb2Ygb2YgY2l0aXplbnNoaXAgZm9yIGZlZGVyYWwgZWxlY3Rpb25zIGFuZCB0aGUgY291cnQgc21hY2tlZCB0aGVtIGRvd24gYXQgc3RyaWN0IHNjcnV0aW55LiBTdGF0ZXMgY2FuIHJlZ3VsYXRlIHRoZWlyIGVsZWN0aW9ucyBob3cgdGhleSBzZWUgZml0LCBidXQgdGhlIHJ1bGVzIGFyZSBkaWZmZXJlbnQgd2hlbiB3ZSBhcmUgZGVhbGluZyB3aXRoIGZlZGVyYWwgZWxlY3Rpb25zLgpJcyB0aGlzIGEgZ2FtZSB0byB5b3U/IFlvdSBzYXkgYWNoaWV2ZWQsIHRoYXQgaW1wbGllcyB5b3UgZmluZCB5b3UgaGF2ZSBhIGNlcnRhaW4gZ29hbCB5b3UgbXVzdCBhY2hpZXZlIGluIG9yZGVyIHRvIGJlIGNvbnNpZGVyZWQgcGFydCBvZiB0aGUgZ3JvdXAuIFBsZWFzZSBkbyBub3QgdGhpbmsgb2YgdmVnYW5pc20gYXMganVzdCBhbm90aGVyIGlkZW50aWZ5IGRyaXZlbiBwaGVub21lbm9uLgpCZWltIEx1bmEgWW9nYSBiZW4gbGVocmVuIG1pY2ggZGllIE15b21lIG1laW5lIEdyZW56ZW4gaW1tZXIgd2llZGVyIG5ldSB6dSBlcmtlbm5lbi4gTWFuY2htYWwgdHV0IG1pciBldHdhcyB3ZWguIApBbiB1biBhcm1vcmVkIHRhcmdldCB0aGF0IGlzIHNob3Qgd2lsbCByZWNlaXZlIG1heGltdW0gYWltIHB1bmNoLiAKSGFzIGhlIHNwb2tlbiB0byB0aGUgZm9ybWVyIEdyYW5hZGEgYm9zcyAgIG5vdyBTaXIgR2VycnksIHN0YXIgb2YgdGhlIFRWIHNlcmllcyBJJ2xsIFNob3cgVGhlbSBXaG8ncyBCb3NzICAgc2luY2UgdGhlIHRha2VvdmVyPyAiTm8uIiBXb3VsZCBoZSBzcGVhayB0byBIaW0gaWYgaGUgc2F3IGhpbT8gIk5vLiAiSGUgYnJlYWtzIGludG8gYSBzbWlsZSwgaG93ZXZlciwgd2hlbiBhc2tlZCB3aGF0IGhlIHRob3VnaHQgb2YgdGhlIGZhaWxlZCBhdHRlbXB0IGJ5IGhpcyBuZW1lc2lzIHRvIHRha2UgY29udHJvbCBvZiByYXQgY2F0Y2hlciBSZW50b2tpbCBJbml0aWFsLiAiSXQgd2FzIHF1aXRlIGFtdXNpbmcsIiBoZSBjb25jZWRlcy4gClVuYmVsaWV2YWJseSBsb3VkLiBObyBjb252ZXJzYXRpb25zLCBwaG9uZSBjYWxscyBldGMgd2VyZSBwb3NzaWJsZSBhdCBhbGwuIE5vIHdheS4uIApUaGUgcGxheWVyIHB1dCBoaXMgc3RyYWRkbGUgaW50byB0aGUgcG90IGJlZm9yZSB0aGUgY2FyZHMgYXJlIGRlYWx0LCBqdXN0IGFzIHdpdGggdGhlIGJsaW5kcy4gCkRlIHNhdm91cmV1c2VzIGFzc2lldHRlcyBjb21wb3NlcywgcHJ0ZXMgcmFwaWRlbWVudCBldCBwcm9waWNlcyAgdW4gZG5lciB0YXJkaWYgZHUgZmFpdCBkZXMgY29uc3VsdGF0aW9ucyA6ClRoZSBsZXZlbCBvZiByZXNlYXJjaCB0aGF0IHdvdWxkIGhhdmUgdG8gYmUgZG9uZSB0byBtYWtlIHN1cmUgaXRzIGFuIGFib3ZlIGJvYXJkIHNleCB3b3JrZXIgd291bGQgYmUgaW5zYW5lLCBhbmQgbmVhciBpbXBvc3NpYmxlIGZvciBzb21lb25lIHdobyBkb2VzbiBrbm93IGhvdyB0aGF0IHdob2xlIHdvcmxkIHdvcmtzLiAKIldlIGFyZSB0aHJpbGxlZCB0byBiZSBhYmxlIHRvIGJyaW5nIHRoZSBHcmFuZCBIeWF0dCBicmFuZCB0byB0aGUgTWFsYXlzaWFuIGNvbW11bml0eSwiIHNhaWQgTGFycnkgVGNob3UsIE1hbmFnaW5nIERpcmVjdG9yLCBIeWF0dCBIb3RlbHMgUmVzb3J0cyAgIEFzaWEgUGFjaWZpYy4gIkdyYW5kIEh5YXR0IEt1YWxhIEx1bXB1cidzIG9wZW5pbmcgZWNob2VzIGFnYWluIEh5YXR0J3MgZGV2ZWxvcG1lbnQgc3RyYXRlZ3ksIHdoaWNoIGlzIHRvIGZvY3VzIG9uIHRoZSBnYXRld2F5IGNpdGllcyBhbmQgbWFya2V0cyB3aGVyZSBjdXN0b21lcnMgYXJlIHRyYXZlbGluZy4gV2UgYXJlIHZlcnkgZXhjaXRlZCB0byBpbnRyb2R1Y2Ugb3VyIGF1dGhlbnRpYyBob3NwaXRhbGl0eSB0byBLdWFsYSBMdW1wdXIgYW5kIGNhdGVyIHRvIHRyYXZlbGVycyBmcm9tIEFzaWEgYW5kIG90aGVyIGNvbnRpbmVudHMgYXJvdW5kIHRoZSBnbG9iZS4iLiAKU2hlIGNhbWUgaG9tZSB0aGUgc2FtZSB0aW1lIG15IGh1c2JhbmQgZGlkIG9uZSBkYXkgYW5kIHdlIHdlcmUgYWxsIHNpdHRpbmcgYXJvdW5kIHRhbGtpbmcgYWJvdXQgaGVyIGRheXMgYW5kIG91dCBvZiBub3doZXJlIHNoZSBnb2VzICJJJ20gdGhlIGJyYWluLCBESCBpcyB0aGUgbXVzY2xlLCBhbmQgSmVzdXMgaXMganVzdCBhIGhvdXNld2lmZSEiIFRoYW5rcyBiaXRjaC4gClJlZ2FyZGxlc3Mgb2YgaG93IG1hbnkgcGVvcGxlIGdldCBvZmZlbmRlZCBieSB0aGVzZSB0ZXJtcywgdGhleSBhcmUgc2xhbmcgd29yZHMgYXBwbGllZCB0byBwZW9wbGUgYWNjb3JkaW5nIHRvIHRoZSBjb2xvdXIgb2YgdGhlaXIgc2tpbi4gCkluIGFkZGl0aW9uIHRvIHRoYXQsIHdvcmsgb24geW91ciB0cmlwb2QgICB3aGVyZSB5b3VyIGhlZWwsIHlvdXIgcGlua3kgdG9lL2tudWNrbGUsIGFuZCB5b3VyIGJpZyB0b2Uva251Y2tsZSBhcmUgUFJFU1NFRCBpbnRvIHRoZSBncm91bmQgYW5kIHlvdXIgZm9vdCBpcyBlbmdhZ2VkIGFuZCBjcmVhdGVzIGEgc3Ryb25nIHN0YWJsZSB0cmlwb2QgZm9yIHRoZSByZXN0IG9mIHlvdXIgYm9keSB0byByZXN0IG9uLiBEb24gdW5kZXJlc3RpbWF0ZSB0aGUgaW1wb3J0YW5jZSBvZiB5b3VyIGZlZXQgaW4gdGhlIHNxdWF0LiBTcXVhdCBVbml2ZXJzaXR5IGhhcyBzb21lIGdyZWF0IGluZm8gb24gaW5zdGEgYWJvdXQgdGhlIHRyaXBvZCBmb290LiAKVGhlbiB3ZSBwcm9iYWJseSB3ZW50IHRvIFdhd2EuIEppbSBpcyBub3cgc29tZSBraW5kYSBsYXd5ZXIgbGFzdCBJIGhlYXJkLi4gCk15IGZyaWVuZCBNYXR0IGhhcyBwbGF5ZWQgcG9rZXIgcHJvZmVzc2lvbmFsbHkgZm9yIGVpZ2h0IHllYXJzIG5vdy4gRm9yIG1vc3Qgb2YgdGhpcyBwZXJpb2QsIGhlIGVhcm5lZCBoaXMgbGl2aW5nIHBsYXlpbmcgb25saW5lIChhbmQgd291bGQgc3RpbGwgYmUgZG9pbmcgc28gaWYgdGhlIGdvdmVybm1lbnQgaGFkbid0IHJlY2VudGx5IGluZGljdGVkIHRoZSBvd25lcnMgb2YgdGhyZWUgb2YgdGhlIGxhcmdlc3Qgb25saW5lIHBva2VyIHNpdGVzKS4gCkZvcmNlIHlvdXIgY29tcGV0aXRvciB0byByZWFjdCB0byB5b3VyIHByaWNpbmcuIApMYXN0IG5pZ2h0IEkgZGlkIHF1aXRlIGEgYml0IG9mIGZpZWxkIHJlc2VhcmNoIGFib3V0IEhhbGxvd2Vlbi4gSSBhbSBhIHNvY2lvbG9naXN0IG9mIHBvcCBjdWx0dXJlIGFuZCBzbyBJIGxpa2UgdG8gdGhpbmsgb2YgbXkgbGlmZSBhcyBhIHJpY2ggc291cmNlIG9mIGluZm9ybWF0aW9uLgpUaHVzIHdpdGggRXZhbiBzdGVsbGFyIE1CQSBncmFkIGluIHRoZSBGYWxsIHRoZXJlIHdhcyBtdWNoIHJlam9pY2luZywgY2FuaW5lIGFuZCBvdGhlcndpc2UuIApIZSBhbmQgaGlzIGNvaG9ydHMgd2VyZSB0aGUgZmlyc3QgdG8gZG9jdW1lbnQgdGhlIHByZXNlbmNlIG9mIG5vY2ljZXB0aXZlIG5lcnZlIGZpYmVycyAocGFpbiBmaWJlcnMpIGluIHRoZSBodW1hbiBkaXNjIGluIHRoZSBsYXRlIDgwIEhpcyBkaXNjb3ZlcnkgcmV2b2x1dGlvbml6ZWQgdGhlIG1hbmFnZW1lbnQgb2YgYXhpYWwgY29tcGxhaW50cyAoc3BpbmUpIGFuZCBoYXMgb2ZmZXJlZCB1cyBncmVhdCBpbnNpZ2h0IGludG8gdGhlIG5hdHVyZSBvZiB0aGUgc3BpbmFsIGRpc2NzIGFuZCBmYWNldCBqb2ludHMgYXMgcGFpbiBnZW5lcmF0b3JzLiBUaGUgcmVzdWx0IGhhcyBiZWVuIGEgdHJlbWVuZG91cyBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBhaW4gbWFuYWdlbWVudCB0ZWNobmlxdWVzLiAKVGhlcmUgYXJlIGNlcnRhaW5seSBjYXNlcyB3aGVyZSBzdXJnZXJ5IGlzIGluZGljYXRlZCBhbmQgaGVscGZ1bC4gCkl0IHdhcyBidWlsdCBvZiB3b29kLCBvbiBhIHdvb2RlbiBzdHJ1Y3R1cmUuIAoiSXQncyBhIHBvdGVudGlhbGx5IGdyZWF0IHB1YiBmb3IgdGhlIHJpZ2h0IGNvdXBsZS4iIFRoZSBwcmVtaXNlIGZyb250cyB0aGUgT2x5bXBpYyBIaWdod2F5IGFuZCBoYXMgbm8gb3RoZXIgY29tcGV0aXRpb24gd2l0aGluIHRoZSB2aWNpbml0eS4gSXQgZmVhdHVyZXMgYSBtYWluIGJhciBhcmVhIHdpdGggYSBwb2tpZXMgcm9vbSwgVEFCIGFyZWEsIGRpbmluZyByb29tLCBjb21tZXJjaWFsIGtpdGNoZW4sIGJlZXIgZ2FyZGVuIGFuZCBjb3ZlcmVkIGVudGVydGFpbm1lbnQgYXJlYXMuICJFdmVudHVhbGx5LCBXYWdnYSB3aWxsIG1vdmUgdGhpcyB3YXkgYW5kIFVyYW5xdWludHkgd2lsbCBiZSBhIHN1YnVyYiwiIE1yIEJvd2RpdGNoIHNhaWQuIApXZSBhbHNvIGxlYXJuZWQgdGhhdCBTY2FuZGluYXZpYW4gYW5kIE5vcndlZ2lhbiBob3NwaXRhbHMgaGFkIGxvdyBpbmZlY3Rpb24gcmF0ZXMuIApDaG9vc2luZyB0aGUgcmlnaHQgYmluZ28gZ2FtZSBnZXRzIG1vcmUgY29tcGxpY2F0ZWQgaWYgeW91IHdpbGxpbmcgdG8gc3R1ZHkgYW5kIHByYWN0aWNlIHRvIGltcHJvdmUgeW91ciBvZGRzIG9mIHdpbm5pbmcuIFRoZSBhZGRlZCBpbmNlbnRpdmUgaGVyZSBpcyB0aGUgZmFjdCB0aGF0IHRoZXNlIGdhbWVzIGFsc28gb2ZmZXIgc29tZSBvZiB0aGUgbG93ZXN0IGhvdXNlIGFkdmFudGFnZXMgZ2l2aW5nIHlvdSwgdGhlIGtub3dsZWRnZWFibGUgcGxheWVyLCBhbmQgYW4gZXhjZWxsZW50IGNoYW5jZSBvZiB3aW5uaW5nIG92ZXIgdGhlIGxvbmcgcnVuLi4gClRoZSBzY2hvbGFyc2hpcCBhdCBhbGwgdGhlc2UgaW5zdGl0dXRpb25zIGlzIGluIGZhaXJseSB1bmFuaW1vdXMgYWdyZWVtZW50IG92ZXIgdGhlIGdlbm9jaWRlLiBJZiB5b3UgbmVlZCBjb3BpZXMgb2YgdGhlc2UgYm9va3Mgb3IgYWNjZXNzIHRvIGEgcmVzZWFyY2ggYXJjaGl2ZSwgcGxlYXNlIFBNIG1lLkkgc2VlLiAKQm92YWRhIGNvbWVzIHVwIDEgYXQgZXZlcnkgc2l0ZSBJIGhhdmViZWVuIHRvLiAKSXMgY3J5b3RoZXJhcHkgdGhlIG5leHQgYmlnIHRoaW5nIGluIHNwYXMKQ3JhY2tkb3duIG9uIG5ldyBtYWNoaW5lcyBpbiBmb3VyICdoaWdoIHJpc2snIElsbGF3YXJyYSBzdWJ1cmJzClNoZSBnbyBpbiB0aGUgYmF0aHJvb20sIHJ1biB0aGUgd2F0ZXIsIGZsdXNoIHRoZSB0b2lsZXQsIGhlYXQgc29tZXRoaW5nIGluIHRoZSBtaWNyb3dhdmUuIApZb3UgY2FuIHBsYXkgYWJzb2x1dGx5IGZyZWUgYW5kIHRoZSBwcml6ZXMgYXJlIHBhaWQgZm9yIGJ5IGFkcyBvbiB0aGUgc2l0ZXMgYW5kIGEgcHJlbWl1bSBtZW1iZXJzaGlwIG9wdGlvbi4gCldoeSBzZW5kIGVtYWlscyB0byB0aGUgc3RhdGUgcmVwcyBhYm91dCB0aGUgY2h1cmNoIHN0YW5jZSBvbiBwb2xpdGljYWwgaXNzdWVzPwpUaGlzIGlzbiBhIGNvbXBsZXRlIGxpc3QsIGJ5IGFueSBtZWFucywgYnV0IGl0IGEgc3RhcnRpbmcgcG9pbnQgaW50byBhIGRlZXAsIHJpY2ggc2VhIG9mIHJlcGVydG9pcmUuIEkgZGlkbiBldmVuIGRlbHZlIGludG8gY2hhbWJlciBvciBzaG93IHBpZWNlcyBlaXRoZXIuIFRoaXMgbGlzdCB3YXMgZnJvbSBhIHN0dWRlbnQgcG9pbnQgb2YgdmlldyBpbiAyMDExLCBwcm9iYWJseSBiZWZvcmUgZXhhbXMgb3IgYSByZWNpdGFsLiBMaXN0IG1ha2luZyBhbHdheXMgY2FsbWVkIG1lIGRvd24gaWYgSSBmZWx0IGxpa2UgSSB3YXMgb3ZlcmxvYWRlZCBhbmQgZHJvd25pbmcuClF1YW5kIG9uIHBhcmxlIGRlIHNleGUgZGFucyBsYSBsaXR0cmF0dXJlIHF1YmNvaXNlLCBvbiBlc3Qgc291dmVudCBkYW5zIGxlIGdsYXVxdWUsIGRhbnMgbGUgbm9pci4gSmUgdm91bGFpcyBxdWUgYSBzb2l0IGxnZXIsIHB0aWxsYW50LCB1biBmZWVsIGdvb2QgYm9vayAsIHNvdWxpZ25lIFN0cGhhbmUgRG9tcGllcnJlLiAgQ2UgcXVlIGonZXNwcmUsIHF1YW5kIGxlcyBnZW5zIGxpcm9udCBsZXMgbm91dmVsbGVzLCBjJ2VzdCBxdSdpbHMgbGVzIGxpcm9udCBzYW5zIHNlIGRlbWFuZGVyIHNpIGMnZXN0IHVuIGdhcnMgb3UgdW5lIGZpbGxlIHF1aSBsJ2EgY3JpdC4uIApJdCBjYW4gYWxzbyBiZSBkb25lIHdoZW4gb3RoZXIgaW5ncmVkaWVudHMgYXJlIGJlaW5nIGNvb2tlZCwgc3VjaCBhcyBzcHJpbmtsaW5nIGEgZ3JvdW5kIHNwaWNlIGluIHRoZSBwYW4gd2hlbiBpbmdyZWRpZW50cywgc3VjaCBhcyBvbmlvbnMgYW5kIGdhcmxpYywgYXJlIGZyeWluZy5BY2NvcmRpbmcgdG8gSGFyb2xkIE1jR2VlJ3MgYm9vayBPbiBGb29kIGFuZCBDb29raW5nOiBUaGUgU2NpZW5jZSBhbmQgTG9yZSBvZiB0aGUgS2l0Y2hlbiwgaGVhdGluZyBhIG1peCBvZiBzcGljZXMgaW4gdGhpcyB3YXkgYWxsb3dzIHRoZSBkaWZmZXJlbnQgY2hlbWljYWxzIHRvIHJlYWN0IHRvIGVhY2ggb3RoZXIgc28gdGhhdCB0aGUgZmxhdm91cnMgYmVjb21lIG1vcmUgaW50ZWdyYXRlZC4gSSB1c2VkIHRoZSB0ZWNobmlxdWUgaW4gdG9kYXkncyBzcGljZXJpY2ggbGVudGlsIGRhbCwgYSBzb3VwIGJ1cnN0aW5nIHdpdGggZmxhdm91ci5XaGVuIHVzaW5nIGdyb3VuZCBzcGljZXMgb3Igc3BpY2UgYmxlbmRzIGluIGNvbGQgcHJlcGFyYXRpb25zIHN1Y2ggYXMgc2FsYWRzIGFuZCBzYW5kd2ljaCBmaWxsaW5ncywgaW4gbW9zdCBjYXNlcyBJIGZpbmQgdGhlcmUncyBubyBuZWVkIHRvIGJsb29tIHRoZW0gaW4gaG90IG9pbCBiZWZvcmUgbWl4aW5nIHRoZW0gaW4uU3RvcmUgYm91Z2h0IGdyb3VuZCBzcGljZXMgYXJlIGZpbmVseSBncm91bmQgYW5kIHRoZSBtb21lbnQgdGhleSBjb21lIGluIGNvbnRhY3Qgd2l0aCBhIHdldCBpbmdyZWRpZW50LCBzdWNoIGFzIG1heW9ubmFpc2Ugb3IgdmluYWlncmV0dGUsIHRoZWlyIGZsYXZvdXIgYmVnaW5zIHRvIGJsb29tLiAKSSd2ZSBhbHdheXMgdGhvdWdodCBibGFja291dHMgd2VyZSBkdW1iSWxLYXBpdGFubyAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb3llYSBpZGsgd2hhdCB0aGF0IGd1eSBpcyB0YWxraW5nIGFib3V0IGxtYW8gb25lIG9mIG15IGZyaWVuZHMgaXMgYSBIVUdFIE9LQyBmYW4gKE9LIGFueXRoaW5nIHJlYWxseSkgc28gd2UgYWx3YXlzIHVzZWQgdG8gd2F0Y2ggVGh1bmRlciBnYW1lcyAodGhpcyB3YXMgYmFjayB3aGVuIHRoZXkgd2VudCB0byB0aGUgRmluYWxzKS4gCiAxNSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBob3VycyBhZ29BIGZldyBwZW9wbGUgZnJvbSBteSBncm91cCBzdGFydGVkIHNuZWFraW5nIFplbGRhIHJlZmVyZW5jZXMgaW50byBvdXIgZ2FtZSwgc28gaGVyZSBteSBjb250cmlidXRpb24sICJXdWxmIiB0aGUgc2hpZnRlciBkcnVpZCEgSGUgYmFzZWQgb24gTGluayBmcm9tIFR3aWxpZ2h0IFByaW5jZXNzLCBhbmQgaGUgdXNpbmcgYSBnZW50bHkgaG9tZWJyZXdlZCBTaGlmdGVyIGludGVycHJldGF0aW9uIGJlY2F1c2UgbXkgRE0gYW5kIEkgYXJlIGJvdGggc3Vja2VycyBmb3IgYSBtb3JlIGNsYXNzaWMgd2VyZXdvbGYuSGlzIHN0b3J5IGluIGJyaWVmIGlzIHRoYXQgaGUgdXNlZCB0byBoZXJkIHNoZWVwLCBoZSBzZXJ2ZWQgYSBQcmluY2VzcyBvZiB0aGUgR2xvYW1pbmcgQ291cnQgaW4gdGhlIGZleXdpbGQgZm9yIGEgZmV3IHllYXJzLCBoZSBkb2VzbiBrbm93IGhvdyB0byB0YWxrIHRvIHBlb3BsZSBhbnltb3JlLCBhbmQgaGUgYml0IGEgZG9nIG9uY2UuSWYgeW91IHdhbm5hIGZpbmQgbWUgb3V0IGluIHRoZSB3aWxkIEkgRVhSb29rIGV2ZXJ5d2hlcmUsIGJ1dCBtb3N0bHkgVHdpdHRlci5adWhraXJNb2x0ZW5mbGFyZSAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ29UaGFua3MhIEkgZGlkbid0IG1lYW4gdG8gb3ZlcnN0ZXAgb3IgZGlzbWlzcyBhbnlvbmUgd2hvIGhhcyBjcml0aWNpc207IEkgd2VsY29tZSBnb29kIG9waW5pb25zIHdoZXRoZXIgdGhleSBhcmUgcG9zaXRpdmUgb3IgbmVnYXRpdmUuIApPdXRzaWRlIG9mIHRoYXQsIGFsbCB0aGUgdXN1YWwgIndvdyBmdWNrIHRyb24iIHBpZWNlcyBhcmUgYWxsIGluIHRoZSBleGFjdCBzYW1lIHNwb3QgdGhleSBhbHdheXMgYmVlbiBpbiwgc28gYmFycmluZyBhIG1ham9yIGNoYW5nZSB0aGV5IHdvbiBiZSBnb2luZyBhbnl3aGVyZSBlaXRoZXIuIApJdCBhIGtub3duIGZhY3QgdGhhdCBkdXJpbmcgdGhlIHByb2Nlc3Mgb2YgZHlpbmcgY2hlbWljYWxzIGdvIG51dHMgaW4geW91ciBicmFpbi4gU2FuZSBwZW9wbGUgd291bGQgY2FsbCBpdCAiaGFsbHVjaW5hdGlvbiIuIFJlbGlnaW91cyBwZW9wbGUgbWlnaHQgY2FsbCBpdCAic3Bpcml0dWFsIGV4cGVyaWVuY2UiLgpUaGUgYmF0aCBlbmFibGVzIHRlc3RpbmcgZnJvbSAgODBDIHRvICs1NUMuLiAKSnVzdCBzYXcgYSBwaWMgb2YgbWUgZnJvbSB0aGVuIGFuZCBpdCB3YXMgc2FkIGFmIGJ1dCBncmVhdCBtb3RpdmF0aW9uLiAKSGUgZG9uZSB0d28gdXBzZXRzIGluIHRoZSBwYXN0IHR3byByb3VuZHMsIGJlYXRpbmcgb3V0IHR3byBpbW1lbnNlbHkgcG9wdWxhciBjaGFyYWN0ZXJzIGZyb20gdHdvIG9mIHRoZSBiaWdnZXN0IGZyYW5jaGlzZXMgaW4gSmFwYW4gcmlnaHQgbm93LiBJZiBoZSBiZWF0cyBLYWlraSwgd2hpY2ggaXMgdmVyeSBwbGF1c2libGUsIHNpbmNlIGhlIGdvdCBtb3JlIHZvdGVzIHRoYW4gaGltIGxhc3Qgcm91bmQsIHdlIG1heSBzZWUgb25lIG9mIHRoZSBjcmF6aWVzdCBzdHJlYWtzIGluIGJlc3QgY2hhcmFjdGVyIGhpc3RvcnkuIApBdCAxLDAwNSBmZWV0IGFuZCA5MCBzdG9yaWVzIHRhbGwsIHRoZSBDaHJpc3RpYW4gZGUgUG9ydHphbXBhcmMgZGVzaWduZWQgdG93ZXIgaGFzIDkyIHVuaXRzIGFuZCBhIFBhcmsgSHlhdHQuIAoiQXMgeW91ciBzb24gaXMgYm9ybiwgeW91IGdvLCAnT2gsIEdvZCwgSSBob3BlIG15IHNvbiBpcyBqdXN0IHBlcmZlY3QsIHlvdSBrbm93LCAiIERldC4gU2NvdHQgRHVkZWsgc2FpZC4gCldoZW4gb25saW5lIHBva2VyIGZpcnN0IGJlY2FtZSBwb3B1bGFyIGluIHRoZSBVUywgeW91IGNvdWxkIHBsYXkgbG93IHN0YWtlcyBzdHJhaWdodGZvcndhcmQgKHZlcnkgbGl0dGxlIGJsdWZmaW5nKSBwb2tlciBiZWNhdXNlIHRoZXJlIHdlcmUgc28gbWFueSBiYWQgcGxheWVycy4gSWYgeW91IHBsYXllZCBtdWx0aXBsZSB0YWJsZXMgYXQgYSB0aW1lIGl0IGNvdWxkIGJlIHF1aXRlIHByb2ZpdGFibGUuIEkgd29uIG92ZXIgMjBrIG9uZSB5ZWFyIGp1c3QgcGxheWluZyAuMjUgY2VudCBPbWFoYS4gCk5vIG9uZSBhdCBQbGFubmVkIFBhcmVudGhvb2QgcHJlc3N1cmVkIG1lIHRvIGFib3J0LiAKQ29uZmVzc2lvbjogVGhpcyBpcyBsaWtlbHkgYmVjYXVzZSBJIGVhdCB0aGUgc2FtZSBhbW91bnQgICBvciBtb3JlIGFzIGhlIG9mdGVuIHNraXBzIGx1bmNoICAgb2YgYXMgc2FpZCBwYXJ0bmVyLCBoZSBvdmVyIDZmdCBhbmQgbWFsZSwgSSB1bmRlciA1ZnQgNSBhbmQgZmVtYWxlLgpJIGltbWVkaWF0ZWx5IGNoYW5nZWQgbXkgc3RhdHVzIG9uIGxpbmtlZGluIGFuZCBzdGFydGVkIGdldHRpbmcgYm9tYmFyZGVkIHdpdGggb3Bwb3J0dW5pdGllcy4gCldoaWxlIHRoZSBwcmltYXJpZXMgYXJlIGhhcHBlbmluZywgeW91IGNhbiBmZWVsIGZyZWUgdG8gc3VwcG9ydCB3aG9tZXZlciB5b3UgbGlrZS5NdXN0YW5nRUIgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGRheXMgYWdvQSBsYXJnZSBtYWpvcml0eSBvZiB0aGlzIGNvdW50cnksIGluY2x1ZGluZyBSZXB1YmxpY2FucywgYXJlIGluIGZhdm9yIG9mIE1lZGljYXJlIGZvciBhbGwuIApJIHN0YXJ0ZWQgdGhlIE11c2ljaWFucyBHdWlsZCwgYSB2aXJ0dWFsIGNsdWIgZm9yIG11c2ljaWFucyBhbmQgbXVzaWMgYWZmaWNpb25hZG9zLiBUaGUgR3VpbGQgaGFzIGRvbmUgYW4gYWRtaXJhYmxlIGpvYiBvZiBoZWxwaW5nIG11c2ljYWwgdHlwZSBwZW9wbGUgd2l0aCBmdXp6eSBsb2dpYyBmaW5kIHdoYXQgdGhleSdyZSBsb29raW5nIGZvci4gCkFsc28sIEkgbGlzdGVkIHRoZSBPYWtlbmZpc3QgYXMgQ29ybHlzIGJhc3RhcmQsIG5vdCBMYWVub3IgYXMgaXQgaXMgaGlnaGx5IHN1Z2dlc3RlZCBpbiBGaXJlIEJsb29kIHRoYXQgTGFlbm9yIHdhcyBnYXkgYW5kIENvcmx5cyB3YXMgdGhlIHJlYWwgc2lyZS4gV2hlcmVhcyBJIGRpZCBub3QgbGlzdCBEYWVyb24gSUkgYXMgQWVtb24gRHJhZ29ua25pZ2h0IGJhc3RhcmQsIGFzIHRoaXMgaXMgcG90ZW50aWFsbHkgb25seSBhIHJ1bW91ciBBZWdvbiBJViB1c2VkIHRvIGVtYmFycmFzcyBoaXMgc29uLgpJbiBhZGRpdGlvbiwgc3Rlcm9pZCBkcnVncyBibG9vZCB0eXBlcyBhbmQgb3RoZXIgY2hhcmFjICBhZG1pbmlzdGVyZWQgZm9sbG93aW5nIHRoZSB0ZXJpc3RpY3Mgc2ltaWxhciB0byBSaWNoYXJkJ3MsIHRvIGRpbWluaXNoIHRoZSBTdXJnZXJ5IG9uIHRoZSB0cmFuc3BsYW50IHBhICB0aWVudHMgd2FzIHJvdXRpbmUuIApNeSBwcmUgcmFjZSB3YXMgdmVyeSBub3JtYWwsIGp1c3QgdGhlIHdheSBpdCBzaG91bGQgYmUuIEkgZG9uJ3QgbGlrZSBzdXJwcmlzZXMsIGFuZCB0cnkgdG8ga2VlcCB0cmF2ZWwgc3RyZXNzIHRvIGEgbWluaW11bSBzbyBJIGNhbiBmb2N1cyBvbiBwcmVwcGluZyBteXNlbGYgZm9yIHRoZSByYWNlIGFoZWFkLiAKVG9uaWdodCB5b3UgaGF2ZSBhIHlhcmQgcGFzcywgYW5kIHlvdSBjYW4ndCB3YWl0IHRvIHNpdCBkb3duIHdpdGggeW91ciBjYXJkcyBhbmQgeW91ciBuZXcgQ2hlYXAgUG9rZXIgVGFibGUgc28gdGhhdCB5b3UgY2FuIHRha2UgeW91ciBmcmllbmRzIG1vbmV5IS4gCkF3ZXNvbWUuIEkgd2FzIHBsYW5uaW5nIG9uIGxlYXZpbmcgZWFybHkgYW55d2F5LCBub3cgSSBoYWQgYW4gb2ZmaWNpYWwgZGlzbWlzc2FsLi4gCkxpa2UgdGhlIHRpbWUgbXkgbWFuYWdlciBjYXZlZCB0byBhIGN1c3RvbWVyIHdobyByZXR1cm5lZCBhIHRocmVlIHllYXIgb2xkIHNjcmF0Y2hlZCwgc2N1ZmZlZCwgYnJva2VuIHdhdGNoIGZvciBhIGZ1bGwgcmVmdW5kIGJlY2F1c2UgaGVyIHNvbiAiZGlkbiB3YW50IGl0IGFueW1vcmUuIiBPciB0aGUgdGltZSBteSBtYW5hZ2VyIGNhdmVkIHRvIGEgY3VzdG9tZXIgd2hvIHJldHVybmVkIGEgdHdvIHllYXIgb2xkIHdvcm4gb3V0IHBhaXIgb2YgcGFudHMgZm9yIGEgZnVsbCByZWZ1bmQgYmVjYXVzZSBoZXIga2lkIG91dGdyZXcgdGhlbS4gCk1vcmUgZ3Vlc3RzIGNob29zZSB0aGUgQkVTVCBXRVNURVJOIFBMVVMgTmFzaHZpbGxlIEFpcnBvcnQgSG90ZWwgZm9yIG91ciBleGNlbGxlbnQgc2VydmljZSBhbmQgU291dGhlcm4gSG9zcGl0YWxpdHkuIEVuam95IGNsb3NlIHByb3hpbWl0eSB0byB0aGUgQk5BL05hc2h2aWxsZSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgd2l0aCBmcmVlIHNodXR0bGUgc2VydmljZS4gV2UgYXJlIGNvbnZlbmllbnQgdG8gbW9zdCBNdXNpYyBDaXR5IGF0dHJhY3Rpb25zLiAKU3BlYWtpbmcgb2YgSGlnaHdheSAxMywgSSByZWNlbnRseSBsZWFybmVkIGZyb20gTXVuaXNpbmcgcmVzaWRlbnRzIHRoYXQgdGhlcmUgaXMgYSBzdHJhbmdlIGxpZ2h0IGRvd24gYnkgdGhlIGFpcnBvcnQgdGhlcmUuIEp1c3QgbGlrZSB0aGUgUGF1bGRpbmcgbGlnaHQuIApTbyB0aGluayBhYm91dCBsaXZlc3RyZWFtZXJzIG9uIHR3aXRjaCBhbmQgc3VjaCAgIHdoZXJlIHZpZXdlcnMgY2FuIGRvbmF0ZSB0byBzdXBwb3J0LiAKU3R1ZGllcyBoYXZlIHJlcGVhdGVkbHkgc2hvd24gdGhhdCBtYXNzYWdlIGhlbHBzIGtpZHMgYW5kIGFkdWx0cyBvZiBhbGwgYWdlcyB3aXRoIHN0cmVzcyBhbmQgc3RyZXNzIGhvcm1vbmUgbGV2ZWxzLCBtb29kIGFuZCBiZWhhdmlvcmFsIHByb2JsZW1zLiAKVGhleSBkb24gY2FyZSB0byBpbnZlc3QgbW9yZSByZXNvdXJjZXMgaW50byB5b3VyIHNwZWNpZmljIGFjY291bnQgd2hlbiBNTyBhcmUgaW52b2x2ZWQuIApCdXkgbGFub2xpbiBjcmVhbSBmcm9tIHlvdXIgdHJ1c3RlZCBiZWF1dHkgc2hvcC4gSXQgd291bGRuJ3QgbWF0dGVyIHdoaWNoIGJyYW5kIHlvdSBzaG91bGQgdXNlLiBMYW5vbGluIGNyZWFtcyBoYXZlIHRoZSBzYW1lIGNvbnRlbnQgYXMgbG9uZyBhcyB0aGV5IGRvbid0IGNvbnRhaW4gYW55IG90aGVyIGluZ3JlZGllbnQgdGhhdCBoYXJtcyB5b3VyIHNraW4gb3IgY2F1c2VzIGFsbGVyZ2llcy4KJydUaGF0IGhlbHBzIGxpa2UgaGVsbC4nJyBUSEUgTlNXIE9mZmljZSBvZiB0aGUgRGlyZWN0b3Igb2YgUHVibGljIFByb3NlY3V0aW9ucyByZXZpZXdlZCBpdHMgaGFuZGxpbmcgb2YgYSBjb21taXR0YWwgaGVhcmluZyBpbnRvIGNoaWxkIHNleCBhbGxlZ2F0aW9ucyBhZ2FpbnN0IEZhdGhlciBQZXRlciBCcm9jayBpbiAyMDA5LCBhZnRlciBjb21wbGFpbnRzIGJ5IEpvaG4gYW5kIFBhdWwgUGFybWV0ZXIuIApJJ20gc29ycnkgdGhpbmdzIGRpZCBub3Qgd29yayBvdXQgdGhlIHdheSB5b3Ugd2FudGVkLCBidXQgSSBhbSBhIHNjaG9vbCBwc3ljaG9sb2dpc3QgYW5kIGFuIGFkdm9jYXRlIGZvciB0aGUgcHVibGljIHNjaG9vbHMuIEkgd29yayB3aXRoIG1hbnkgc3R1ZGVudHMgd2l0aCBkeXNsZXhpYSBhdCBteSBzY2hvb2xzIGFuZCBhc3Npc3QgdGhlIHNwZWNpYWwgZWR1Y2F0aW9uIHRlYWNoZXJzIHdpdGggdXNpbmcgYXBwcm9wcmlhdGUgcmVzb3VyY2VzIGFuZCBzdHJhdGVnaWVzIGZvciBkeXNsZXhpYS4gVGhlIHB1YmxpYyBzY2hvb2wgc2hvdWxkIGJlIGFibGUgdG8gcHJvdmlkZSB0aGUgcmVhZGluZyBzZXJ2aWNlcyB5b3VyIHNvbiBuZWVkcywgYW5kIGlmIHRoZXkncmUgbm90IHRoZW4gdGhleSdyZSBub3QgZG9pbmcgdGhlaXIgam9icy4uIAoxNC4gVGhlIEtyZWJzIEN5Y2xlIChDaXRyaWMgQWNpZCBDeWNsZSkgaGFzIDkgc3RlcHMsIGFuZCAzIG9mIHRoZW0gcmVxdWlyZSBtYWduZXNpdW0uCkFuZHJldyBCcmVpdGJhcnQKQmFjaG1hbm4gc2hvdCBiYWNrOiAiSSdtIG9mZmVuZGVkIGZvciBhbGwgdGhlIGxpdHRsZSBnaXJscyBhbmQgdGhlIHBhcmVudHMgd2hvIGRpZG4ndCBoYXZlIGEgY2hvaWNlLiJSb21uZXkgc2FpZCBQZXJyeSdzIHJlY29yZCBvbiBqb2IgY3JlYXRpb24gaW4gVGV4YXMsIHdoaWNoIGhhcyBvdXRwYWNlZCBtb3N0IG90aGVyIHN0YXRlcyBpbiBhZGRpbmcgbmV3IGpvYnMsIHdhcyB0aGUgcmVzdWx0IG9mIFRleGFzJyBsYWNrIG9mIGFuIGluY29tZSB0YXgsIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCBvdGhlciBmYWN0b3JzIHJhdGhlciB0aGFuIGhpcyBwb2xpY2llcy4KSSB3b3JrIHBhcnQgdGltZSBmcm9tIGhvbWUgYW5kIHRoZSBvdGhlciBwYXJ0IG9mIHRoZSB0aW1lIHdpdGgga2lkcywgc28gbXkgd29yayB3YXJkcm9iZSBpcyBwcmV0dHkgbXVjaCBteSB3ZWVrZW5kIHdhcmRyb2JlIG9uIG1vc3QgZGF5cy4gCkFkbWluaXN0cmF0b3JzIGFyZSBhbHdheXMgY29taW5nIHVwIHdpdGggbmV3IHByb2R1Y3RzLCBidXQgdGhlIGJpZyBkZWFsZXJzaGlwIGdyb3VwcyBzYXkgdGhleSB3YW50IHRvIGxpbWl0IHRoZSBtZW51IHRvIHRocmVlIG9yIGZvdXIgaXRlbXMuIENhbiBhbnl0aGluZyBuZXcgb3V0IHRoZXJlIGNhdGNoIG9uPwpDb3JleSBzYXlzIFdoYWxlbiBpcyB0aGUgb25seSBjZXJ0aWZpZWQgWW9nYSBUdW5lIFVwIGluc3RydWN0b3IgaW4gdGhlIEJvdWxkZXIgYXJlYS4KSSBuZXZlciByZWFsbHkgcmVjZWl2ZWQgdGhlIG1lbW8gb24gdGhlIHdob2xlIGhvbW9zZXh1YWwgYWdlbmRhIHRoaW5nLiBJIGtub3cgdGhlIGhvbW9zZXh1YWwgYWdlbmRhIGludm9sdmVzIGJyaW5naW5nIHRoZSBmaWVyeSBwaXRzIG9mIGhlbGwgdG8gdGhlIGZyb250IGRvb3Igb2YgZXZlcnkgR29kIGZlYXJpbiByZWQgbWVhdCBlYXRpbiBmdWxseSBhcm1lZCB3aGl0ZSBmYW1pbHksIGJ1dCBvdGhlciB0aGFuIHRoYXQsIEkgYSBiaXQgZnV6enkgb24gdGhlIGRldGFpbHMuCkVzcGVjaWFsbHkgc2luY2UgSSBnb25uYSBiZSBtb3VudGluZyBhbiBFb3RlY2ggYW5kIG1hZ25pZmllciBvbiBpdC4gCkkgd2FzIG9mIHRoaXMgb3BpbmlvbiBpbiBsZWdpb24gYW5kIHN0aWxsIGFtIGluIEJGQSAoZXZlbiBtb3Jlc28gd2l0aCBkZWF0aCBiZWluZyBhIHRhbGVudCkgdG9mIGVpdGhlciBuZWVkcyB0byBiZSBiYXNlbGluZSBvciByZW1vdmVkIHdpdGggYSBidWZmIHRvIG92ZXJhbGwgZGFtYWdlLCBtaW5kYmVuZGVyIG5lZWRzIHRvIGJlIGJhc2VsaW5lIGJlY2F1c2Ugc2hhZG93ZmllbmQgaXMgdGVycmlibHkgdW5pbnRlcmVzdGluZyBhbmQgdG9vIGxvbmcgb2YgYSBjZCB0byBtYXR0ZXIgYXQgdGhpcyBwb2ludCwgYW5kIG1pbmQgYmxhc3QgaGF2aW5nIDIgY2hhcmdlcyBiYXNlbGluZSBpc24gYnJva2VuLCBpdCBqdXN0IGZlZWxzIGZsdWlkIGFuZCBnb29kLiBTbywgb3ZlcmFsbCwgZ29vZCBjaGFuZ2VzLCBidXQgbXVjaCB3b3JrIHN0aWxsIG5lZWRzIHRvIGJlIGRvbmUgaWYgd2Ugd2FudCB0byBzZWUgc3ByaWVzdCByZXR1cm4gdG8gbGlrZSBhIGZsdWlkLCBmYXN0LCBhbmQgcmV3YXJkaW5nIHNwZWMgdG8gcGxheS4KV2hlbiBJIHdhbGtlZCBob21lIGFmdGVyIHRoYXQgc2Vzc2lvbiwgSSB0cmllZCB0byB0aGluayB3aGF0IGFuIGVhcnRoIEkgd291bGQgYmUgbW91cm5pbmcgZm9yLiBUcnVlLCBteSBsaWZlIGhhZCBjaGFuZ2VkIGRyYW1hdGljYWxseSBpbiB0aGUgbGFzdCB0d28geWVhcnMuIApJdCA4MHMgYW5kIG1hbmx5IGFzIGhlbGwsIGFuZCB0aGVyZSBhIHdob2xlIG1lc3Mgb2YgaW50ZXJsb2NraW5nIG1hcnRpYWwgYXJ0cyBzdHlsZXMgYW5kIHNlY3JldCB0ZWNobmlxdWVzIHRoYXQgYXBwcm94aW1hdGUgdGhlIHNvcnQgb2YgcG93ZXIgc3lzdGVtIHlvdSBhc2tpbmcgYWJvdXQgd2l0aG91dCBzcGVjaWZpY2FsbHkgYmVpbmcgcmVmZXJyZWQgdG8gYXMgb25lLiAKVGhpcyBpcyBxdWl0ZSBzdXJwcmlzaW5nIGluIHRoZSBjb250ZXh0IG9mIGRlZmluaW5nIHRoZSByYW5nZSBvciBsaW1pdHMgb2YgdGhlIG1pdG9jaG9uZHJpYWwgc3RpbXVsYXRpb24gYmFuZCwgYXMgRHIuIEhhbWJsaW4ncyBvd24gcmVzZWFyY2ggZnJvbSAyMDE3IGNvbmNsdWRlcyB0aGF0IFBCTSBpcyBhY2hpZXZhYmxlIGFjcm9zcyB0aGUgYnJvYWRlciA2MDAgMTAwMG5tIHJhbmdlLCBhbmQgbm90IGp1c3Qgd2l0aGluIHRoZSB0d28gbGltaXRlZCBwYXJhbWV0ZXJzLCBvciBwZWFrcywgdGhhdCBKb292diBjaXRlcyBpbiB0aGVpciBzdHVkeSBmcm9tIDE5OTYuIEhhbWJsaW4gd3JpdGVzOi4gClRoZXJlIGlzIGEgYml0IG9mIGh1bW9yLCB0b28uICJNYXliZWxsZSIgaXMgZGVkaWNhdGVkIHRvIGFuIHVuZnJpZW5kbHkgZG9nLCBhYmFuZG9uZWQgYnkgYW4gdW50cnVlIHdpZmUgd2hvIGxlZnQgdG8gam9pbiB0aGUgY2lyY3VzLiBBbmQgIldvbid0IFlvdSBQbGVhc2UgQmUgTXkgUmluZ3RvbmU/IiBpcyBhIHNlbGYgZXhwbGFuYXRvcnkgbW9kZXJuaXphdGlvbi4KWW91IGNhbiBiZSBmb3JnaXZlbiBpZiB5b3UndmUgbmV2ZXIgaGVhcmQgb2Ygc2V4IHN1cnJvZ2F0ZXMsIG9yIHRob3VnaHQgdGhleSB3ZXJlIG1vcmUgdXJiYW4gbXl0aCB0aGFuIHJlYWxpdHkuIEJ1dCBpZiB5b3UgY2FuIHJlY2FsbCB3aGVuIGJhY2t5YXJkICJzcGFzIiB3ZXJlIGNhbGxlZCBob3QgdHVicywgUGV0ZXIgRnJhbXB0b24gcnVsZWQgYW5kIHlvdSB3ZXJlIHRyYXVtYXRpemVkIGJ5IHRoZSBkaXNjb3Zlcnkgb2YgeW91ciBtb20ncyBjb3B5IG9mICJUaGUgSm95IG9mIFNleCwiIHlvdSBtYXkgYWxzbyByZWNhbGwgdGhhdCBzdXJyb2dhdGVzIHdlcmUgb25jZSB0aGUgcmFnZS4KQXMgYW4gb3JpZ2luYWwgbWVtYmVyIG9mIFB1YmxpYyBFbmVteSBhbmQgVGhlIEJvbWIgU3F1YWQsIFNob2NrbGVlIGNvbnRyaWJ1dGVkIGhpcyB0YWxlbnQgdG8gc2V2ZXJhbCBjcml0aWNhbGx5IGFjY2xhaW1lZCBhbGJ1bXMgYW5kIGNvIHByb2R1Y2VkIGhpdCBzaW5nbGVzIHN1Y2ggYXMgIkJyaW5nIHRoZSBOb2lzZSIgYW5kICJGaWdodCB0aGUgUG93ZXIsIiBib3RoIG9mIHdoaWNoIHdlcmUgcmFua2VkIG9uIFJvbGxpbmcgU3RvbmUncyBsaXN0IG9mIDUwMCBHcmVhdGVzdCBTb25ncyBvZiBBbGwgVGltZS4uIApBbm9uaW52YWx1ZSAgMTkgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpTdWRkZW5seSwgdGhlIHRhYmxlIGlzIGpvaW5lZCBieSB0aGUgZmFzdCB0YWxraW5nIEN1cnRpcyAoUmV5bm9sZHMpLCB3aG8gcHVuY3R1YXRlcyBldmVyeSBiaWQgd2l0aCBhIHF1aWNrIGFuZWNkb3RlIG9yIGEgam9rZS4uIApJbmNpZGVudGFsIHByaXZhdGUgdHJhdmVsIHdpdGhpbiB0aGlzIHRpbWUgaXMgY292ZXJlZCBwcm92aWRlZCB0aGF0IHRoZSBwcml2YXRlIHRyYXZlbCBkb2VzIG5vdCBleGNlZWQgNTAlIG9mIHRoZSB0b3RhbCB0cmlwIGR1cmF0aW9uIGFuZCBpcyBsZXNzIHRoYW4gMjggZGF5cy4gCkhlIGlzIHRyeWluZyB0byBjb25uZWN0IHdpdGggR29kJ3MgV29yZDogYnV0IGl0IGlzIGFsbCBvdmVyLiBBbGFzLCBoZSB0cnVzdGVkIGhpbXNlbGYgbW9yZSB0aGFuIEdvZCdzIHRydWUgcGF0aCBmb3IgaGlzIHNhbHZhdGlvbi4gVGhleSB3b3JzaGlwcGluZyB0aGUgb3IgZ29kcyBtYWRlIHdpdGggdGhlaXIgb3duIGhhbmRzIGhhdmUgcGxhY2VkIHRoZW0gYXQgaGlnaCBwbGFjZXMuIFRoZWlyIEdvZCBpcyB0aGVpciBjcmVhdG9yICAgR29kIEFsbWlnaHR5OyBidXQgdG9vbHMgb2YgZnVuIHN1Y2Nlc3MuIGV4ZWN1dGl2ZSBpcyB3ZWFyaW5nIGEgYmxhY2sgc3VpdC4gQmxhY2sgaXMgYSBzeW1ib2wgb2YgZGVhdGguIFRoZXNlIGFyZSB0aGUgcGVvcGxlIHdobyBkbyBub3QgaGF2ZSBhbnkgdHJ1c3QgaW4gR29kLiBUaGV5IGFyZSBnb2QgaW4gdGhlaXIgb3duIGV5ZXMuIFRoZXkgZGlkIG5vdCBhY2NlcHQgTG9yZCBKZXN1cyBDaHJpc3QgYXMgdGhlaXIgTG9yZCBhbmQgU2F2aW9yIG5vdyB0aGUgaG91ciBvZiBkZWF0aCBoYXZlIGFycml2ZWQuIFRoZXkgYXJlIHdlYXJpbmcgYmxhY2sgc3VpdCwgYmVjYXVzZSB0aGV5IHBhc3MgdGhlaXIgY2hhbmNlIHRpbWUgaGVhciBHb2QncyB3aXRuZXNzZXMgZ29zcGVsIG9mIHNhbHZhdGlvbi4gR29kJ3Mgc2V0IHRpbWUgaGF2ZSBhcnJpdmVkLiBOb3cgaXQgaXMgdGltZSBmb3IgdGhlbSB0byBmYWNlIHRoZSBKdWRnZW1lbnQgb2YgR29kIGluIHRoZSBmb3JtIG9mIGRlYXRoLiBCdXQgaGUgaXMgbm90IGFibGUgdG8gZG8gaXQuCllvdSB3aWxsIGJ1eWluIHdpdGggcGFja3MgMTAwJS4gWW91IHdpbGwgaGF2ZSBkcmFmdHMgZm9yIDEwIHBhY2tzLCA1LCAzIGFuZCAxIGZvciBleGFtcGxlLiBTYW1lIGxpa2UgSFMgc29tZXRpbWVzIGhhZCBhIGhpIHN0YWtlcyBicmF3bC4gClRoZXJlIGlzIG5vIG5lZWQgZm9yIHlvdSB0byB2aXNpdCBjb3VudGxlc3MgbnVtYmVyIG9mIHNpdGVzIGFuZCB0cnkgYWxsIHByb3ZpZGVycyBiZWNhdXNlIHdlIGRpZCB0aGUgaGFyZCB3b3JrIGZvciB5b3UuIApBbm90aGVyIGludGVyZXN0aW5nIHRoaW5nIHRoYXQgaGFwcGVuZWQgdG8gbWUgb25jZSwgd2FzIEkgd2FzIGxheWluZyBkb3duIGR1cmluZyB0aGUgZGF5IGFuZCBzb3J0IG9mIGp1c3Qgc3RhcmluZyBhdCBteSB3YWxsLiBNeSBzdWJjb25zY2lvdXNuZXNzIGtpY2tlZCBpbnRvIGdlYXIgZXZlbiB0aG91Z2ggSSB3YXNuIGV2ZW4gdHJ5aW5nIHRvIGdvIHRvIHNsZWVwLiAKQnV0IGl0IG1pZ2h0IGJlIHRoZSByb290IG9mIHlvdXIgc2lzdGVyIGJlaGF2aW9yIHRvd2FyZHMgeW91LiAKVGhlIGFjdG9yJ3MgbmV4dCBiaWcgc2NyZWVuIHJvbGUgd2lsbCBiZSBpbiBRdWVudGluIFRhcmFudGlubydzICJPbmNlIFVwb24gYSBUaW1lIEluIEhvbGx5d29vZCwiIHdoaWNoIGlzIHNsYXRlZCBmb3IgcmVsZWFzZSBpbiBKdWx5LgpBbiBhc3Nob2xlIGlzIHR5cGljYWxseSBjb25zaWRlcmVkIHN1Y2ggYmVjYXVzZSB0aGV5IHB1dCB0aGVtc2VsdmVzIGJlZm9yZSBvdGhlcnMuIEEgcGFydGljdWxhcmx5IG1vdGl2YXRlZCBhbmQgc2VsZiBzZXJ2aW5nIGFzc2hvbGUgaXMgbGlrZWx5IHRvIGhhdmUgYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBsaWZlIGV4cGVyaWVuY2UgdGhhbiBzb21lb25lIHdobyBwdXRzIG90aGVycyBiZWZvcmUgdGhlbXNlbHZlcy4gVGhhdCBsaWZlIG1pZ2h0IGJlIHdvcnRoIGxpdmluZyBtb3JlIHRoYW4gdGhlIGFsdGVybmF0aXZlIHRvIHRoZW0gYW5kIHRoZXJlIGlzbiBhbnl0aGluZyB3cm9uZyB3aXRoIHRoYXQuLiAKVGhlIGxhc3QgdHdvIGNhcmRzIGFyZSB0aGVuIGRlYWx0IHRvIHRoZSBmbG9wLCB0aGUgZGVhbGVyIHNob3dzIGhpcyBjYXJkcyBhbmQgdGhlIGJlc3QgcG9zc2libGUgY29tYmluYXRpb24gd2lsbCBiZSBzZWxlY3RlZCBmb3IgYm90aCBvZiB5b3UuIElmIHlvdXIgcG9rZXIgaGFuZCBpcyBiZXR0ZXIgdGhhbiB0aGUgZGVhbGVyJ3MsIHlvdSB3aW4gdGhlIHBvdCAodXN1YWxseSBhbnRlIGFuZCBjYWxsIGJldHMgdGltZXMgdHdvKS4KVGhpcyBsYXlvdXQgaXMgYSBsb3Qgb2YgZnVuIGFuZCBpdCB3aWxsIGNoYW5nZSB0aGUgd2F5IHlvdSBoYXZlIHBva2VyIG5pZ2h0IGZvcmV2ZXIuLiAKSSBtZWFuLCB0aGluayBhYm91dCB5b3VyIGxvY2FsIHBvb2wgc2hvcCBvciBudXJzZXJ5LiAKV2lzZG9tIGluIHRoZSBoaWdocyBhbmQgbG93cwpUaGVuIGEgY291cGxlIHllYXJzIGxhdGVyIEkgbWFycmllZCB0aGUgd29tYW4gdGhhdCBJIGRpZG4gY2hvb3NlIHdoZW4gSSBtYXJyaWVkIHRoZSBmaXJzdCB3aWZlLiBUaGlzIG90aGVyIHdvbWFuIHRoYXQgSSBnb3QgdGhlIHByaXZpbGVnZSB0byBoYXZlIGEgc2Vjb25kIGNoYW5jZSB3aXRoLCBpcyBhYnNvbHV0ZWx5IHdvbmRlcmZ1bC4gClRoZSBmYWN0IHRoYXQgQWZnaGFuaXN0YW4gaGFzIGJlZW4gZW5nYWdlZCBpbiBhIGNpdmlsIHdhciBzaW5jZSBiZWZvcmUgdGhlIFNvdmlldCBpbnZhc2lvbiAoMTk3OSkgYW5kIHRoYXQgdGhpcyBjaXZpbCB3YXIgY29udGludWVzIGFuZCB0aGF0IHRoZSBVUyBpcyBvbiB0aGUgc2FtZSBzaWRlIG9mIHRoZSBjaXZpbCB3YXIgYXMgdGhlIFNvdmlldHMgd2VyZSBpcywgSSBzdXBwb3NlLCB0b28gb2J2aW91cyB0byByZXBvcnQgb24uIApUaGUgQ2hhbXBpb25zIGNvbnRpbnVlIHRvIGZpeCB0aGUgaG9sZSB0cnVtcCBsZWZ0LCBtYWlubHkgYnkgYXJndWluZyBsZWdhbCBwcmVjZWRlbnQgYW5kIHBhc3NpbmcgYW50aSBjb3JydXB0aW9uIGxhd3MuIEJ1dCBhIG5ldywgYmx1ZSBibG9vZCBpcyBjb3Vyc2luZyB0aHJvdWdoIEF6ZXJvdGggQ29uZ3Jlc3MsIGFuZCBhbGxpZXMgYXJlIGJlZ2lubmluZyB0byB0dXJuIG9uIGVhY2ggb3RoZXIsIGp1c3Qgd2hlbiB3ZSB0aG91Z2h0IHBlYWNlIHdhcyBhY2hpZXZlZC4KSSBhcHByZWNpYXRlIHRoZSBkaXNjbG9zdXJlIGFuZCBlZmZvcnQgdG8gcHJvdmlkZSBkaWZmZXJlbnQga2luZHMgb2YgZ3JvdXBzIHRvIHlvdXIgY2xpZW50cywgYnV0IHdoYXQgeW91IGRvaW5nIHdpdGggdGhlIGphbSBzZXNzaW9uIGlzIG91dCBvZiB5b3VyIHNjb3BlIG9mIHByYWN0aWNlIGFuZCBub3QgZXRoaWNhbC4gVGhlIHN1Z2dlc3Rpb25zIEkgaGF2ZSBhcmUgd2hhdCBJIGxlYXJuZWQgdGhyb3VnaCBteSBzcGVjaWZpYyB0cmFpbmluZyB0byBiZSBhIG11c2ljIHRoZXJhcGlzdDsgSSBjYW4gc3VtbWFyaXplIGluIGEgcmVkZGl0IGNvbW1lbnQgd2hhdCAyIHllYXJzIG9mIGdyYWQgc2Nob29sIHRhdWdodCBtZS4gSXQgc2ltaWxhciB0byBob3cgYSBiYWNoZWxvciBsZXZlbCBtdXNpYyB0aGVyYXBpc3QgY2FuIGRvIHByb2Nlc3NpbmcgbGlrZSBhIGNvdW5zZWxvciBkb2VzOyBpdCBub3QgY292ZXJlZCBpbiB0aGF0IGxldmVsIG9mIGVkdWNhdGlvbiBhbmQgd291bGQgYmUgdW5ldGhpY2FsIHRvIGRvIHNvbWV0aGluZyB0aGV5IGFyZW4gdHJhaW5lZCBhbmQgcmVhZHkgdG8gc3VwcG9ydCBpbiBhIHNlc3Npb24uLiAKV2l0aCBhIGZpdmUgc3RhciBZZWxwIHJhdGluZyBvdXQgb2YgMTIgcmV2aWV3cywgIGhhcyBiZWVuIGdldHRpbmcgcG9zaXRpdmUgYXR0ZW50aW9uLgpUaGUgZW5kaW5nIG9mIHNsYXZlcnkgZGlkbiBwcm92aWRlIHBvc2l0aXZlIGxpYmVydHkgdG8gc2xhdmVzLCBqdXN0IG5lZ2F0aXZlIGxpYmVydHkgKGFuZCBpdCB0ZWNobmljYWxseSBkaWRuIGV2ZW4gZ2V0IHJpZCBvZiBzbGF2ZXMpLiAKV2UgZnVzc2VkIHdpdGggaXQgZm9yIGhhbGYgYW4gaG91ciwgdHJ5aW5nIHZhcmlvdXMgZnV0aWxlIHNjaGVtZXMuIEkgZXZlbiB0cmllZCBzYXdpbmcgaXQgd2l0aCBhIGhhY2tzYXcuIE5vIGx1Y2suIApXb3JzZSwgdGhlIEdPUCBhbmQgaXRzIHByb3BhZ2FuZGEgbWFjaGluZSBhdCBGb3ggYXJlIGNvbnRpbnVpbmcgdG8gZXhwbG9pdCB0aGUgd2hpdGUgZmVhciBvZiBUZWEgUGFydHkgc29ydHMgaW4gb3JkZXIgdG8gY3JlYXRlIGRpdmlzaW9ucyBiZXR3ZWVuIHdvcmtpbmcgQW1lcmljYW5zLCBkaXZpc2lvbnMgdGhhdCBvbmx5IGV2ZXIgYmVuZWZpdCB0aGUgcmljaC4gClNvIEkgaGFkIHRvIHRha2UgY2FyZSBvZiBteSBzaXN0ZXJzICg4IHllYXJzIHlvdW5nZXIgYW5kIDE4IG1vbnRocyB5b3VuZ2VyIHRoYW4gbWUsIG1vcmUgc28gdGhlIHlvdW5nZXN0KQpJIGhhdmUgbm8gaWRlYSB3aHkgYW55b25lIHdvdWxkIHdhbnQgdG8gYnV5IGFueXRoaW5nIG15IGNvIHdvcmtlcnMgaGFkIG9idmlvdXNseSBzdG9sZW4gZnJvbSBhIGRydWdzdG9yZSB0aGUgcHJldmlvdXMgd2Vla2VuZCwgbGV0IGFsb25lIHdoeSBhbnlvbmUgd291bGQgd2FudCB0byBidXkgYSBUYXJ6YW4gY29sb3JpbmcgYm9vayBmcm9tIGEgZ3V5IHdpdGggYSBicmFpZGVkIHBvbnl0YWlsIHN0YW5kaW5nIG9uIGEgY3JhY2tlZCBzaWRld2FsayBpbiBmcm9udCBvZiBhIGRpbWx5IGxpdCBwb3Jub2dyYXBoeSBzaG9wIHdpdGggYSBzaW5nbGUgZW50cmFuY2UsIGJ1dCBteSBjbyB3b3JrZXJzIGhhZCBuZXcgdGhpbmdzIHRvIHNlbGwgZXZlcnkgd2Vlay4uIApUaGUgZmFjdG9yeSBzaXR1YXRpb24gaW1wcm92ZWQgaW4gdGhlIHllYXIncyBmaW5hbCBxdWFydGVyLCB0aG91Z2ggMjAxOCBlbmRlZCBzdGlsbCBzbGlnaHRseSBzaG9ydCBvbiBhaXJwbGFuZSBkZWxpdmVyaWVzLiBXaGVuIEJvZWluZyByZXBvcnRlZCBpdHMgcmVzdWx0cyBKYW4uIApUaGlzIG1heSBub3Qgc2VlbSBsaWtlIHRoZSBiaWdnZXN0IGRlYWwgaW4gdGhlIHdvcmxkLCBJIGtub3cgb3RoZXIgaHVzYmFuZHMgY2hlYXQgb24gdGhlaXIgd2l2ZXMsIGJ1dCBJIGdldCByZWFsbHkgdXBzZXQgYmVjYXVzZSB3ZSBoYXZlIGEgaGlzdG9yeSBvZiBoaXMgbHlpbmcuIApJbCBuJ3kgYSBxdScgdmVuaXIgbm90YW1tZW50IHN1ciBsYSBwbGFjZXR0ZSBDaGFyYm9ubmlyZSBlbiBmaW4gZGUgam91cm5lIHBvdXIgcydlbiByZW5kcmUgY29tcHRlLiAKU29tZSBzdHVkaWVzIGV2ZW4gc3VnZ2VzdCB0aGF0IGRldm91cmluZyBjaG9jb2xhdGUgc3RpbXVsYXRlcyB0aGUgc2FtZSBmZWVsaW5ncyBpbiB0aGUgYnJhaW4gYXMgbWFraW5nIGxvdmUuIApJdCBiZWNhbWUgYSAiam9rZSIgYW1vbmcgbWFueSB3aGl0ZXMsIGdpZGR5IHdpdGggdGhlaXIgb3duIHJhY2lhbCBwb3dlci4gCkNhcmQgR2FtZXMgd2VyZSBldmVuIG1vcmUgcG9wdWxhciB0aGlzIG1vbnRoIHRoYW4gbGFzdCBtb250aCAoNCw1MDAgdmlld3MpLiAnQnVybnMgTmlnaHQnIHdhcyB2aWV3ZWQgMSw5MDAgdGltZXMgdmlhIHRoZSBCQkMuCk91ciBwaGlsb3NvcGh5IGZvciB5ZWFycyBoYXMgYmVlbiB0aGF0IHdlIGFyZSBhbiBvbmxpbmUgY29tcGFueSBhbmQgd2Ugd2FudCBvdXIgcHJlc2VuY2UgdG8gYmUgb25saW5lLiBXZSB3YW50IHRvIGdyYWIgb3VyIGN1c3RvbWVycyB3aGVuIHRoZXkgYXJlIHNpdHRpbmcgaW4gZnJvbnQgb2YgdGhlaXIgY29tcHV0ZXJzLCBub3Qgd2hpbGUgdGhleSBhcmUgd2F0Y2hpbmcgVFYgb3IgcmVhZGluZyBhIG1hZ2F6aW5lLiBUaGlzIGhhcyBlbmFibGVkIHVzIHRvIGZvY3VzIG91ciBtYXJrZXRpbmcgYnVkZ2V0IG9uIHdoZXJlIHRoZSBwbGF5ZXJzIGFyZS4gCkRpdmUgZGVlcGVyIGludG8gd2hhdCB5b3VyIHJhbmdlIGlzIGFuZCB3aGF0IHlvdXIgb3Bwb25lbnQgcmFuZ2UgaXMgYW5kIGhvdyBlYWNoIG9mIHlvdXIgcmFuZ2VzIGNvbm5lY3RzIHdpdGggdGhlIGJvYXJkIHRleHR1cmUuIEdldCBVcHN3aW5nIHBva2VyIHRvIGJ1aWxkIHNvbWUgZnVuZGFtZW50YWxzLi4gCklmIGFueSBvcHBvc2UgdGhlbSB0aGV5IGJyZWFrIHVwIG1lbidzIGhvdXNlcyBhbmQgZGlnIGJ5IGZvcmNlLiAKIllvdSBoYXZlIGdvdCB0aW1lIHRvIHN0dWR5LiBUaGVyZSB3YXMgb25lIG9mZmljZXIgYW5kIGhlIGRpZCBzZWxsIHBvcm4uIEhlIHVzZWQgdG8gZ2V0IGl0IGZyb20gSG9sbGFuZCwgYnJpbmcgaXQgYmFjayBhbmQgc2VsbCBpdCB0byBvZmZpY2VycyB3aGlsZSBvbiBkdXR5LiIuIApXaG8ga25ldyB0aGF0IHRoZSBzY29yZSBmcm9tICJBbm5pZSIgY291bGQgYmUgYSByYWRpY2FsIGNyaXRpcXVlIG9mIGNvcnBvcmF0ZSBncmVlZD8gQWZ0ZXIgYWxsLCAiQW5uaWUiIHdhcyBhYm91dCBhIGhlcm9pYyByaWNoIGd1eSB3aG8gc2F2ZXMgYSBzaW5nbGUgb3JwaGFuIGdpcmwgZnJvbSBwb3ZlcnR5LiAKVGhlIGxvZ28gZGVwaWN0cyB0aGUgdG9wIGhhdCBhbmQgY2FuZSB0aGF0IHJlbWFpbiBzeW5vbnltb3VzIHdpdGggUGF1bHNvbiBxdWFsaXR5IG1hbnVmYWN0dXJpbmcuIEtlZXAgaW4gbWluZCB0aGVyZSBpcyBvbmx5IG9uZSBQYXVsc29uIHByb2R1Y2VkIHBva2VyIGNoaXAuIApUaGUgRWFnbGVzIGhhZCB0byBzdXJ2aXZlIGEgdmlkZW8gcmVwbGF5IGJlY2F1c2UgYmFsbCBwb3AgaW50byB0aGUgYWlyIGFzIEVydHogY3Jvc3NlZCB0aGUgZ29hbCBsaW5lLgpBbmQgSSB3YWxrZWQgYXdheS4gClNvIHNlaGVuIGdlbWVpbmhpbiBPcnRlIGluIHNjaGxlY2h0ZW4gWkRGIEZlcm5zZWhmaWxtZW4gYXVzLiAKVGhpbmsgVHdpbGlnaHQgIGEgYm9vayB0aGUgcHJlbWlzZSBvZiB3aGljaCBzaG91bGQgYmUgZmFtaWxpYXI6IGEgY2x1bXN5IGFuZCBhd2t3YXJkIGFuZCBvcmRpbmFyeSB5b3VuZyB3b21hbiBpcyB0cmFuc2Zvcm1lZCBieSB0aGUgbG92ZSBvZiBhbiBpbnNhbmVseSBoYW5kc29tZSBhbmQgcmljaCB5b3VuZyB2YW1waXJlLiBBbGwgb3RoZXIgY29uY2VybnMgIHNjaG9vbCwgY2FyZWVyLCBmYW1pbHkgb2Ygb3JpZ2luLCBmcmllbmRzICBkaXNhcHBlYXIgYXMgdGhpcyBvbmUgcmVsYXRpb25zaGlwIG1lZXRzIGFsbCBvZiBoZXIgbmVlZHM6IGVtb3Rpb25hbCwgaW50ZWxsZWN0dWFsLCBzcGlyaXR1YWwsIHNleHVhbCwgYW5kIGZpbmFuY2lhbC4uIApCZSBpbnZvbHZlZCBpbiB0aGUgYmlkZGluZzogWW91IHNlZSBpdCBhbGwgdGhlIHRpbWUgaW4gYXVjdGlvbjogQSBwbGF5ZXIgZ29lcyBmb3Igd2VsbCBiZWxvdyB0aGUgdmFsdWUgaGUncyBleHBlY3RlZCB0byBnbyBmb3IuIApWc2V2c2UgICA0IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSG93ZXZlciwgd2hlbiBpdCBpcyB0aW1lIHRvIGNvbWUgYmFjayB3ZSBhbGwgc3RhbmQgYXJvdW5kIHRoZSBjYXJkIHRhYmxlIGFuZCB3YXRjaCBvdXIgaHVzYmFuZHMgdGFrZSBvbiBlYWNoIG90aGVyIGZvciB0aGUgYmlnICQ1IHdvcnRoIG9mIHdpbm5pbmdzICh0aGV5IHBsYXkgZm9yIGRpbWVzKS4gCkkgaGF2ZSByZSBpbnZlbnZ0ZWQgbXlzZWxmIG1hbnkgdGltZXMuIApCdXQgdGhlbiBhcyBvdGhlciBwZW9wbGUncyB0ZXN0aW1vbmllcyBjb21lIGludG8gdGhlIHN0b3J5IGFzaWRlIGZyb20gaGlzIG93biBhY2NvdW50LCBoZSBtb3JwaHMgaW50byBhIHBhcmFub2lkIGFuYXJjaGlzdC4uIApBdXRyZW1lbnQgZGl0LCB1bmUgc3Vic3RhbmNlIHByb3ByZSAgZ3VyaXIgdG91dCBsZXMgbWF1eC4gClRocm91Z2hvdXQgdGhvc2UgNyA4IGRheXMsIHdlIG9ubHkgcGxhbiB0byBnbyBza2kvc25vd2JvYXJkaW5nIG9yIG1heWJlIGp1c3Qgc25vdyB0dWJpbmcvc2xlZC9ldGMgKGJlY2F1c2Ugbm90IGV2ZXJ5b25lIGlzIGluIGZpdCBjb25kaXRpb24pIGp1c3QgZm9yIG9uZSBzaW5nbGUgZGF5LiAKVGhlIGJvYXJkIHNob3dzIDdjIFRjIDJjIEFjIDRjLiAoNSBjbHVicyBvbiB0aGUgYm9hcmQpLiAKMS4gCk1vc3QgY29tcGFuaWVzIGhhdmUgZGlmZmVyZW50IHBheSByYW5nZXMgZGVwZW5kaW5nIG9uIHlvdXIgZGVncmVlLiAKWW91IGRpZG4gaW5jbHVkZSBwb3NpdGlvbnMsIGJ1dCBpdCBzZWVtcyBsaWtlIHYxIGlzIGVhcmx5L3V0ZywgdjIgaXMgbWlkZGxlL2Vhcmx5LiBWMiAzYmV0IHJhbmdlIGlzIGdvaW5nIHRvIGJlIHN0cm9uZ2VyIGhlcmUgdGhhbiBhdmVyYWdlLCBoZSBwcm9iYWJseSBub3QgZ29pbmcgdG8gYmUgM2JldHRpbmcgYSBmaW5lIHJlZyB1dGcvZWFybHkgdmVyeSBsaWdodC4gVW5sZXNzIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdjMgcGxheWVkLCBldmVuIGlmIGhlIGRvZXNuIGtub3cgdGhlIHRlcm1pbm9sb2d5LCBoZSBoYXZlIHNvbWUgc2Vuc2UgdGhhdCB0aGVzZSBwbGF5ZXJzIGFyZSBsb29raW5nIHN0cm9uZyBpbnR1aXRpdmVseS4gCkl0J3MgYSBiaXQgZGlzYXBwb2ludGluZyB0byBzZWUgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIGVuZ2FnaW5nIGluIHRoaXMgc29ydCBvZiBtYXJrZXQgd29yc2hpcCAgIGhhaWxpbmcgbWFya2V0cyBhcyBhIEdvb2QgVGhpbmcgaW4gdGhlbXNlbHZlcywgcmF0aGVyIHRoYW4gYXMgYW4gb2Z0ZW4gYnV0IG5vdCBhbHdheXMgdXNlZnVsIG1lYW5zIHRvIGFuIGVuZC4gQnV0IEkgaGF2ZSByZWFzb24gdG8gdGhpbmsgdGhhdCB1bmxpa2UgdGhlIEJ1c2hpZXMsIHRoZXkgZG9uJ3QgcmVhbGx5IGJlbGlldmUgaXQ7IGl0J3MganVzdCBwb2xpdGljcy4gQnV0IHRvbyBtYW55IGNvbW1lbnRhdG9ycyBvbiB0aGUgbGVmdCBhbmQgdGhlIHJpZ2h0IGhhdmUgYWNjZXB0ZWQgdGhlIHJpZGljdWxvdXMgaWRlYSB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBpcyBhY3R1YWxseSBzb2NpYWxpc3QuIApQbGF5aW5nIGdhbWUgd2l0aCBmcmVlIGNyZWRpdCBpcyBhbHdheXMgYXBwcmVjaWF0ZWQgYW5kIGZpcnN0IHByZWZlcmVuY2UgYnkgdXNlcnMuIApIZSBpcyBoaXMgb25seSBjb25jZXJuLCB3ZWxsIG1vbmV5IHRvby4gCldQQkRvYyB1CkkgcmVtZW1iZXIgd2FraW5nIHVwIGFuZCBmZWVsaW5nIGd1aWx0eS4gTGlrZSBjb3VsZCBJIGZhbGwgYXNsZWVwIGluIGEgbW9tZW50IGxpa2UgdGhpcz8gc2hlIGNvbnRpbnVlcy4gCk51Y2xlYXJDYW5keSAgMTA4IHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KQW5vdGhlciB3YXkgdG8gcGxheSBpcyB0byBoYXZlIHRoZSBtaWRkbGUgaGFuZCBiZSBwbGF5ZWQgd2l0aCBhIGRldWNlIHRvIHNldmVuIGxvd2JhbGwgaGFuZCAod2l0aCB0aGUgYmVzdCBoYW5kIGJlaW5nIDcsIDUsIDQsIDMsIDIpLiAKU2hlIGhhcyBiZWVuIHRyZWF0aW5nIGhpcyBjYW5jZXIgd2l0aCBoZXJiYWwgc3VwcGxlbWVudHMsIHZpdGFtaW5zLCBpb25pemVkIHdhdGVyLCBhbmQgb3RoZXIgbmF0dXJhbCBhbHRlcm5hdGl2ZXMgc2hlIGxlYXJuZWQgYWJvdXQgb24gdGhlIEludGVybmV0ICAgZGVzcGl0ZSB0ZXN0aW1vbnkgZnJvbSBmaXZlIGRvY3RvcnMgd2hvIGFncmVlZCBEYW5pZWwgbmVlZGVkIGNoZW1vdGhlcmFweS4gRGFuaWVsIHRvbGQgdGhlIGp1ZGdlIGR1cmluZyBjbG9zZWQgdGVzdGltb255IHRoYXQgaGUgaGFzIGFsc28gYmVlbiBlYXRpbmcgImdyZWVuIGZvb2QiIHN1Y2ggYXMgYnJvY2NvbGkgYW5kIGJlYW5zLCBhcyB3ZWxsIGFzIGVnZ3MgYW5kIGZydWl0Li4gCkxpdmVycG9vbCBDb3VuY2lsIHdhbnRlZCBMb2NhbCBHb3Zlcm5tZW50IE5TVyB0byBzdXBwb3J0IGNvdW5jaWxzIHRvIGRldmVsb3AgZ2FtYmxpbmcgaGFybSBwcmV2ZW50aW9uIHBvbGljaWVzIGFuZCB0byBwdXNoIGZvciBjaXRpZXMgYW5kIHNoaXJlcyB0byAiaGF2ZSBhIGdyZWF0ZXIgc2F5IGluIHRoZSBwbGFjZW1lbnQgb2YgcG9rZXIgbWFjaGluZXMiLiAKSSBhbSBub3Qgc3VyZSB3aGF0IHByb3ZpbmNlIHlvdSBhcmUgaW4sIGJ1dCBpbiB0aGUgRWFzdGVybiBDYXBlIHRoZSByZXN0IG9mIHRoZSBjb3VudHJ5IFNBU0FNUyBpcyBiZWluZyB1c2VkIGZvciBmb3VuZGF0aW9uIHBoYXNlIGFzIHBlciB0aGUgQ0FQUyBwb2xpY3kgZG9jdW1lbnRzLgpJIHdhcyBwYXJ0aWFsbHkgam9raW5nIHJlZ2FyZGluZyBjZWxsIHBob25lcy4gQnV0IEkgZGlkIHVzZSBteSBzbWFydHBob25lIHRvIGFuc3dlciBhIGRvemVuIGxlZnRvdmVyIGVtYWlscyBhbmQgcmVhZCBhIGdyYW50IGNhbGwgZHVyaW5nIG9uZSBvZiB0aGUgbGFzdCBzZW1pbmFycy4gSSBrbm93IGl0IGRpc3JlcGZlY3R1bCwgSSB0b3RhbGx5IGFncmVlLiAKTm93IHRoZSBEZXBhcnRtZW50IG9mIEh1bWFuIHJpZ2h0cyBpcyBmaWxpbmcgc3VpdCBhZ2FpbnN0IENTTCBmb3IgdmlvbGF0aW5nIHRoZSBNaW5uZXNvdGEgSHVtYW4gUmlnaHRzIEFjdCAgIHR1cm5pbmcgSmFtZXMgYXdheSBiZWNhdXNlIG9mIGhlciBnZW5kZXIgaWRlbnRpdHkuIApDaGluYSBhbmQgZWFzdCBhc2lhIGFyZSB0aGUgdGlnZXJzIG9mIHRvZGF5IGFuZCB0b21vcnJvdy4gCkkgZmVlbCBsaWtlIGl0IGdvZXMgYWdhaW5zdCBoZXIgY2hhcmFjdGVyIGFyYy4gCldvb2QgZmxvYXRlZCBhIHNpbWlsYXIgaWRlYSB0byB3aGF0IGlzIGRlc2NyaWJlZCBieSBmbG93ZXJzLCBleGNlcHQgdGhlIG9wcG9zaXRlLCB1c2luZyBibGFjayBjbG90aCBvdmVyIHdoaXRlIHNhbmQuIE92ZXIgdGhlIG5leHQgdHdlbnR5IHllYXJzLCBpbnRvIHRoZSAxOTQwIHRoZSBpbnRlcmVzdCBzZWVtcyBsZXNzIGluIGNvbW11bmljYXRpb24gdGhhbiB3aXRoIHRoZSB2aXNpdGluZyB0aGUgcGxhY2UuLiAKSE9XRVZFUiBJIHdhbnQgdG8gZGlzY291cmFnZSB5b3UgZnJvbSBnZXR0aW5nIHRoZSBSIG5pbmVUIHNjcmFtYmxlciBhcyBhIGZpcnN0IGJpa2UuIFRoZXJlIGFyZSBhIG51bWJlciBvZiByZWFzb25zIGl0IGlzIGluYXBwcm9wcmlhdGUuIFRoZSBmaXJzdCByZWFzb24gaXMgeW91IHJlYWxseSBzaG91bGRuIHN0YXJ0IG9uIGEgbWFjaGluZSB3aXRoIDEwMEhQIGFuZCA3NWxiIGZ0IG9mIHRvcnF1ZSwgdGhhdCBpcyBlbm91Z2ggdG8gZ2V0IHlvdSBpbiBhIGxvdCBvZiB0cm91YmxlLiBTZWNvbmQgaXMgdGhhdCB3aXRob3V0IHRocm93aW5nIGd1YXJkcyBvbiB0aGVyZSwgdGhlIGN5bGluZGVyIGhlYWRzIGFyZSBnb2luZyB0byBiZSB0aGUgZmlyc3QgcG9pbnQgb2YgY29udGFjdCB3aGVuIHlvdSBpbmV2aXRhYmx5IGRyb3Agb3IgbWlzaGFuZGxlLiBPdGhlciBjb21tb24gZmlyc3QgYmlrZXMgd2lsbCBnZXQgdGhlaXIgaGFuZGxlYmFycyBvciBvdGhlciBwYXJ0cyBkb3duIGZpcnN0IGJlZm9yZSB0aGUgZW5naW5lLCBub3QgdGhpcyBvbmUuIFRoZXkgYWxzbyB1bmNoYXJhY3RlcmlzdGljYWxseSByYXcgYmlrZXMuIFRoZXkgc2hha2UgYW5kIHNoaW1teSBhbmQgaGF2ZSBubyByaWRlciBtb2RlcyBvciB3YXlzIG9mIG1pdGlnYXRpbmcgdGhhdCBwb3dlci4gSGVjayB0aGUgbW9kZWwgeW91IGxpa2UgZG9lc24gZXZlbiBoYXZlIGEgdGFjaG9tZXRlci4gSSBhbHNvIG5vdCBzZWNvbmQgZ3Vlc3NpbmcgeW91ciBmaW5hbmNpYWwgc2l0dWF0aW9uLCBidXQgYnkgYW55IG1lYXN1cmUgbmVhcmx5ICQxNGsgaXMgQSBMT1QgdG8gc3BlbmQgb24gYSBmaXJzdCBiaWtlLgpCZSBzdXJlIHRvIHBsYW4gb24gdGhpbmdzIG5vdCB3b3JraW5nIG91dCBhcyB3ZWxsLCBpdCBuZXZlciBkb2VzIHBlcmZlY3RseS4uIApUaGUgZGlzY292ZXJ5IGEgZmV3IHllYXJzIGFnbyB0aGF0IGluZmxhbW1hdGlvbiBpbiB0aGUgYXJ0ZXJ5IHdhbGwgaXMgdGhlIHJlYWwgY2F1c2Ugb2YgaGVhcnQgZGlzZWFzZSBpcyBzbG93bHkgbGVhZGluZyB0byBhIHBhcmFkaWdtIHNoaWZ0IGluIGhvdyBoZWFydCBkaXNlYXNlIGFuZCBvdGhlciBjaHJvbmljIGFpbG1lbnRzIHdpbGwgYmUgdHJlYXRlZC4KTm8gZG91YmxlIHN0YW5kYXJkLCBpZiBpdCB3YXMgdGhlIG1hbGUgdGFsa2luZyBhYm91dCBob3cgY2FuIHNlZW0gdG8gZ2V0IGEgd29tYW4gdW5sZXNzIGhlIGJ1eXMgZXhwZW5zaXZlIGdpZnRzIEkgZ2l2ZSBhIHNpbWlsYXIgc29ydCBvZiBzdG9yeSB0byBoaW0gICBzb21ldGhpbmcgbGlrZSB1c2luZyBtb25leSBhcyBhIGNydXRjaCB0byBtb3JlIHdob2xlc29tZSB3YXlzIG9mIGJvbmRpbmcgd2l0aCBzb21lb25lIHdvdWxkIHJlc3VsdCBpbiByZWluZm9yY2luZyBiZWhhdmlvdXJzIChnaXZlIG1vYXIgZ2lmdHMhKSBhbmQgd2F5cyBvZiB0aGlua2luZyAod29tZW4gYXMgdHJhbnNhY3Rpb25zOyBtb3JlIG9iamVjdCBsaWtlIHRoYW4gcGVyc29uIGxpa2UpLiBZb3UgW3RoZSBtYWxlXSBiZWNvbWUgbGVzcyBza2lsbGVkIGF0IGJvbmRpbmcgd2l0aCB3b21lbiBpbiB3aG9sZXNvbWUgd2F5cy4gQXMgeW91IGdldCBvbGRlciBhbmQgcGVyc2lzdCBpbiB0aGVzZSB1bndob2xlc29tZSBtZXRob2RzLCB5b3UgZmluZCB5b3Vyc2VsZiBpbiByZWxhdGlvbnNoaXBzIHRoYXQgYXJlIGxlc3MgcGFydG5lci9wYXJ0bmVyICAgaW4gdGhpcyB0b2dldGhlciwgYW5kIG1vcmUgdHJhbnNhY3Rpb25hbC4gCkFmdGVyIGEgc2xvdyBzdW1tZXIgSSBiZWdhbiB0cmFpbmluZyBhZ2FpbiB0aGlzIGZhbGwuIEFib3V0IGEgd2VlayBpbnRvIHRyYWluaW5nIEkgd2FzIGZlZWxpbmcgZ29vZCBhbmQgZ2F2ZSBpdCBhIGxpdHRsZSBiaXQgbW9yZSBqdWljZSBhbmQgcm9kZSB1cCBhIHN0ZWFkeSBoaWxsIGluIG15IGRyb3BzLiAKVGhhdCBzdXBlciB1bnVzdWFsLiBUaGVyZSBraW5kIG9mIGFicmlnaHQgc2lkZSBhbmQgYSBkYXJrIHNpZGUgdG8gdGhhdC4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlUG9rZXIgUHJhY3RpY2U6IFRpcHMgb24gSG93IHRvIEdldCBCZXR0ZXIgYXQgVGV4YXMgSG9sZCdlbQpQZW9wbGUgaW4gU3dlZGVuIGFyZSBoaWRpbmcgY2FzaCBpbiB0aGVpciBtaWNyb3dhdmVzIGJlY2F1c2Ugb2YgYSBmYXNjaW5hdGluZwpJdCBhIENoZXZ5LiAKQWxzbyBvbiBhbm90aGVyIG5vdGUsIGRpc2NvdmVyeSBhbmQgaGlzdG9yeSBoYXZlIHNob3dzIHRoYXQgbG9vayBmb3IgQmlnZm9vdCBhbmQgc2hpdCBsaWtlIHRoYXQgc28geW91IHJlYWxseSBjYW4ndCB0YWtlIGFueXRoaW5nIGZyb20gYSBzaG93IG9uIHRob3NlIGNoYW5uZWxzIGFzIGZhY3QuIEV2ZXJ5dGhpbmcgaXMgZHJhbWF0aXplZCBhbmQgdGhlaXIgdGhlcmUgdG8gc2VsbCB5b3UgYSBzdG9yeSwgbm90IHRvIHRlYWNoIHlvdSB0aGUgdHJ1dGguCkhlIHN0aWxsIHRlbGxzIG1lIHRoYXQgaGUgZG9lcyBpdCB0aGF0IHdheSBiZWNhdXNlIGkgdG9sZCBoaW0gdG8uIApXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuIApMJ2ltYWdlIGRlIGRyb2l0ZSwgcXVhbnQgIGVsbGUsIG9mZnJlIGwnb2NjYXNpb24gZGUgdnJpZmllciBjb21tZW50IE1hcmlqYWMgcG91dmFpdCBzaWduZXIgRFVNJ1MgZW4gcmFwcGVsIGRlIHNvbiBpZGVudGl0IHZyaXRhYmxlIDogRFVNQVMuLiAKVGhvbWFzIEF1c3RpbiBQcmVzdG9uIEpyIHdhcyBib3JuIG9uIERlY2VtYmVyIDMxIDE5MjggaW4gSm9obnNvbiwgQXJrYW5zYXMuIEhpcyBwYXJlbnRzIGRpdm9yY2VkIHdoZW4gaGUgd2FzIDE2IGFuZCBoZSBtb3ZlZCB0byBBbWFyaWxsbywgVGV4YXMsIHRvIGxpdmUgd2l0aCBoaXMgZmF0aGVyLiBBdCAxNyBoZSBqb2luZWQgdGhlIFVTIEFybXksIHNlcnZlZCBvdmVyc2VhcyBhbmQgb24gaGlzIHJldHVybiBtZXQgRG95bGUgQnJ1bnNvbiBhbmQgQnJpYW4gUm9iZXJ0cywgd2l0aCB3aG9tIGhlIGJlY2FtZSBmYXN0IGZyaWVuZHMuCkFsbCBvZiB0aGVzZSB0aGluZ3MgYXJlIHBhcnQgb2YgdGhlIHN1YmplY3Qga25vd24gYXMgcGhhcm1hY29raW5ldGljcy4KVHlwaWNhbC4gVGhlIFByb3ZpbmNpYWwgZ292ZXJubWVudCBmaW5hbGx5IGJlbmVmaXRzIGFuZCBwcm92aWRlcyBleHRyYSBtb25leSB0byB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uIGFuZCB0aGUgb3ZlcndoZWxtaW5nIHJlc3BvbnNlIGlzIGFnYWluc3QgaXQuCk9uZSB0aGluZyBjb25zaWRlcmVkIHRvIGJlIG9uZSBvZiB0aGUgS2luZydzIGR1dGllcyBhdCB0aGlzIHRpbWUgd2FzIHRvIHJld2FyZCBsb3lhbHR5IHdpdGggZ3JhbnRzIG9mIGxhbmQgYW5kIHRpdGxlcy4gCkNoaWMncyBidXNpbmVzcyBjbGVhcmx5IGdvZXMgYmV5b25kIGhpcyB3ZWJjYW0sIGJlY2F1c2UgQmV0dHkgY2FtZSBob21lIHRvIGRpc2NvdmVyIGEgdGVlbiBib3kgY29taW5nIGRvd24gdGhlIHN0YWlycyBvZiBoZXIgaG91c2UsIHdpdGggQ2hpYyBmb2xsb3dpbmcgY2xvc2UgYmVoaW5kLCBkZWNrZWQgb3V0IGluIGEgYmF0aHJvYmUgYW5kIGNodWdnaW5nIGZyb20gYSBqYXIgb2YgbWlsay4KSWYgaXQgbmVlZHMgYWRkcmVzc2luZyAobGlrZSB0aGUgb3JnYXNtIHRoaW5nIG9yIHdoYXRldmVyKSB0aGVuIEkgd2lsbC4gT3RoZXJ3aXNlIEkgcmVhbGx5IGRvbiBldmVuIG1vdmUgb3IgbWlzcyBhIGJlYXQuIApBbmQgdGhlbiB5b3UgZ2V0IGVuZG9ycGhpbnMgYXQgdGhlIGVuZCEgQW5kIGFuIGV4Y3VzZSBmb3IgY2hvY29sYXRlISAoQ2hvY29sYXRlIG1pZ2h0IGFjdHVhbGx5IGJlIG15IGZhdm9yaXRlIGhvYmJ5LikuIApBcHBhcmVudGx5LCB0aGVyZSBpcyBzb21ldGhpbmcgbW9yZSB0byBlY29ub21pYyBncm93dGggdGhhbiBqdXN0IHJldnZpbmcgdXAgZmFjdG9yeSBvdXRwdXQuIEF0IGxlYXN0IHdlIG5vIGxvbmdlciBoYXZlIHRvIGxpc3RlbiB0byB0aGUgYWNyaW1vbmlvdXMgYW5kIHRpcmVzb21lIGRlYmF0ZSBhYm91dCBDYW5hZGEgbWFudWZhY3R1cmluZyBzZWN0b3Igc3VmZmVyaW5nIGZyb20gRGlzZWFzZS4gQnV0IHdoYXQgZG8geW91IGNhbGwgYW4gZWNvbm9teSB3aGVyZSBtYW51ZmFjdHVyaW5nIHByb3NwZXJzIGFuZCB0aGUgcmVzdCBvZiB0aGUgZWNvbm9teSBsYW5ndWlzaGVzPyBQZXJoYXBzIERpc2Vhc2UsIHdoZXJlIGV4cG9ydHMgZmxvdXJpc2ggYnV0IGRvbWVzdGljIGRlbWFuZCByZXRhcmRzIGdyb3d0aC4uIApJZiB0aGUgYnVubnkgaXMgYmVjb21pbmcgdG90YWxseSBjb3ZlcmVkIGluIHdldCBtdWQgb24gYSBmcmVxdWVudCBiYXNpcyBpdCBiZSBiZXN0IHRvIHRyeSBhbmQgYXZvaWQgdGhhdCBoYXBwZW5pbmcgYnkgcHV0dGluZyBzb21lIHNvcnQgb2Ygcm9vZiBvdmVyIHRoZSBhcmVhIHdoZXJlIHRoZXkgZGlnZ2luZyB0byBwcmV2ZW50IHRoZSBncm91bmQgYmVjb21pbmcgdG90YWxseSB3YXRlcmxvZ2dlZCBhbmQgbXVkZHkgZnJvbSByYWluICAgdGhpcyBpcyBncmVhdCBhcyB0aGUgYnVubnkgY2FuIHRoZW4gZW5qb3kgdGhlIGFyZWEgaW4gbW9yZSB3ZWF0aGVyIGNvbmRpdGlvbnMuIElmIHRoZXJlIGEgc3BlY2lmaWMgYXJlYSBvZiB0aGUgZ2FyZGVuIHRoYXQgYmVjb21lcyB2ZXJ5IG11ZGR5IGEgbGl0dGxlIHRlbXBvcmFyeSBmZW5jZSBtYWRlIG9mIHB1cHB5IHBhbmVscyB3b3VsZCBiZSBnb29kIHRvIGJsb2NrIGl0IG9mZiB3aGVuIGxldHRpbmcgeW91ciBidW5ueSBvdXQgdG8gZnJlZSByYW5nZS4gCkhhdmUgeW91IGNhbGN1bGF0ZWQgdGhhdCB5b3VyIGhhbmQgaXMgYSBsb3NlciwgYnV0IHlvdSB0aGluayB5b3UgY2FuIGZha2Ugb3V0IHRoZSBvcHBvc2l0aW9uPyBCZSBzdXJlIHlvdSBrbm93IEhvdyB0byBCbHVmZiBpbiBQb2tlci4gUG9rZXIgT2RkcyBBbnN3ZXJzMS4gCllvdSB0cmFpbiB5b3VyIGJvZHkgdG8gd29yayBoYXJkIGZvciBhbmQgZXh0ZW5kZWQgcGVyaW9kIG9mIHRpbWUgYW5kIG9ubHkgcmVzdCB3aGVuIHRoZSByYWNlL3dvcmtvdXQgaXMgY29tcGxldGUuIApJdCBleGlzdHMgaXMgYSB3b3JsZCB3aGVyZSB3b21lbiBzdGlsbCBvZnRlbiBmZWVsIGlnbm9yZWQgYW5kIHNpZGVsaW5lZCwgYW5kIGl0IGhlbHBzIHRvIGNvbnRpbnVlIHRoYXQuIApTb3JyeSBJIGRpZG4gbWVhbiB0byBjb21lIGFjcm9zcyBhcyBwdXR0aW5nIHlvdSBkb3duLiAKQSBjYXNoIGdhbWUsIG90aGVyd2lzZSBrbm93biBhcyBhICJyaW5nIGdhbWUiIGlzIGEgZm9ybSBvZiBwb2tlcndpdGggbm8gZml4ZWQgc3RhcnQgb3IgZW5kIHRpbWUuIApPayBtYXliZSBpIGp1c3QgbWlzc2luZyBzb21ldGhpbmcgaGVyZSBidXQgZXZlcnl0aW1lIEkgc2VlIHNvbWVvbmUgc2F5IG1vcmUgYW5kIGJldHRlciByZXdhcmRzLCBpdCBzb3VuZHMgbGlrZSB0aGV5IGp1c3QgZ2l2aW5nIG1lIG1vcmUgb2YgbXkgbW9uZXkgYmFjay4gCkFsc28geW91IHNheSBwZW9wbGUgd29uIGludmVzdCBpbiBSIGJ1dCB0aGF0IGlzIHdyb25nLiAKQmV0dGVyIHByZXNlbnRhdGlvbiwgbW9yZSBwbGF5ZXJzLCBhIG1vYmlsZSBhcHAsIHlhZGEgeWFkYSBldGMuCkUgIFRFTEVHUkFNIEVseXJpYSwgT2hpbyBGaW5hbCBFZGl0aW9uIEZvdW5kZWQgMjI1IEVhc3QgQXZlbnVlIDQ4IFBBR0VTIFdFRE5FU0RBWSwgREVDRU1CRVIgSElPTktTOiBFTFZLSUEgMzIzLjMzMjEgTE9LQUlOIDI0NCA2MjA1IFRlbiBDZW50cyBZYW5rcyB0cmFwIDIgQnkgRVVHRU5FIFYuIGhlbGljb3B0ZXIgZ3Vuc2hpcHMga2lsbGVkIDIwMyBDb21tdW5pc3RzIGluIGEgYml0dGVyIGRheWxvbmcgYmF0dGxlIHllc3RlcmRheScganVzdCBzb3V0aCAgb2YgdGhlIERlbWlsaXRhcml6ZWQgWm9uZS4gVS4gUy4gIFRoZSBmaWdodGluZyBqdXN0IGlubGFuZCBmcm9tIHRoZSBTb3V0aCBDaGluYSBTZWEgYW5kIDEyIG1pbGVzIHNvdXRoIG9mIHRoZSBETVogYmUgIGdhbiBhcyBhIHJvdXRpbmUgcG9zdCBDaHJpc3QgIG1hcyB0cnVjZSBzd2VlcCBhcm91bmQgdGhlIG9uY2UgcGVhY2VmdWwgZmlzaGluZyB2aWxsYWdlIG8hIE15IFRodXksIFVQSSBDb3JyZXNwb25kICBlbnQgVGhvbWFzIENvcnBvcmEgcmVwb3J0ZWQgZnJvbSB0aGUgc2NlbmUuIApIZSBkaWRuJ3QgbmVlZCB0byBkdW1wIG1vbmV5IGludG8gYWR2ZXJ0aXNpbmcgbGlrZSBhIGxvdCBvZiBiaWcgYm94IG9mZmljZSwgRCBncmFkZSBmaWxtcyBuZWVkIHRvIGRvIHRvIGdldCBwZW9wbGUgaW50byB0aGUgdGhlYXRlcnMgdG8gbWFrZSBwcm9maXRzIG9uIHRoZWlyIHNoaXRwaWxlIHNjYW0gb2YgYSBtb3ZpZS4gCkkgZG9uIGtub3cgaWYgeW91IHRyb2xsaW5nIGJ1dCBQcmVzaWRlbnQgVHJ1bXAgaGFzIHByb2JhYmx5IGJlZW4gdGhlIG1vc3Qgc3RlYWRmYXN0IHN1cHBvcnRlciBvZiBBbWVyaWNhbiBKZXdzIGFuZCBJc3JhZWwgb2YgYW55IHBhc3QgcHJlc2lkZW50cy4gQWxzbyB0aGVyZSBhcmUgcGxlbnR5IG9mIGNsaXBzIG9mIFRydW1wIGFuZCBvdGhlciByZXByZXNlbnRhdGl2ZXMgYWdyZWVpbmcgdGhhdCB0aGUgRWFydGggaXMgd2FybWluZywgYnV0IGRvbiBhZ3JlZSBvbiBob3cgbWFuIG1hZGUgaXQgaXMuIFdoaWNoIGlzIGEgdmFsaWQgcG9pbnQgY29uc2lkZXJpbmcgaG93IENsaW1hdGUgY2hhbmdlIGlzIGEgbmVnYXRpdmUgZmVlZGJhY2sgbG9vcC4uIApEb3dubG9hZCB0aGUgSW5zdGFsbGVyCkkgaGF2ZSBhIHN1Z2FyIHByb2JsZW0uLiAKQVcgU2VyaWVzIDI6IEFnYWluIG5vIGNvbXBsYWludHMgaGVyZS4gSSB3aXNoIHRoZXkgaGFkIGEgbG9uZ2VyIEFwcGxlQ2FyZSsgd2FycmFudHkgZm9yIHNjcmVlbiBkYW1hZ2UgY2F1c2UgaXQncyBhIHdhdGNoLCBidXQgd2hhdGV2ZXIuCkRpZCB5b3UgY2hlY2sgdGhlIHRyaWFsIHRyYW5zY3JpcHRzPyBJZiBzbywgeW91IG5vdyBrbm93IHRoYXQgdGhlIHN0YXRlIG5ldmVyIGNsYWltZWQgdGhhdCBidWxsZXQgd2VudCB0aHJvdWdoIFRlcmVzYSBza3VsbC4gCldoaWxlIGRjb3IgYXJvdW5kIHRoZSBnYW1pbmcgdGFibGVzIGlzIHR5cGljYWxseSBvcm5hdGUgYW5kIGJsaW5neSwgdGhlIGhvdGVsIHNlY3Rpb24gaXMgYWxsIGVsZWdhbnQgY29udGVtcG9yYXJ5IHN0eWxlIGluIG11dGVkIG5ldXRyYWwgdG9uZXMgd2l0aCBwb3BzIG9mIGphZGUgYW5kIG11c3RhcmQuIApUaGF0J3Mgd2h5IHlvdSBjYW4gZWFzaWx5IHNtZWxsIGFsY29ob2wsIHdoZXRoZXIgb24gYSBwZXJzb24gb3IgYW4gb3BlbiBib3R0bGUgb2YgcnVtLi4gCkZyeWVyIEouIFByZWxpbWluYXJ5IGludmVzdGlnYXRpb24gaW50byBhIHNlYXRlZCB1bmxvYWRpbmcgbW92ZW1lbnQgc3RyYXRlZ3kgZm9yIHRoZSBsdW1iYXIgc3BpbmU6IGEgcGlsb3Qgc3R1ZHkuIEpCTVQsIDIwMTA7MTQoMik6MTE5IDI2LgpJIGV2ZW4gdGhpbmsgdGhhdCBpZiB3ZSByZWxlYXNlZCBvdXJzZWx2ZXMgZnJvbSB0aGUgb2JsaWdhdGlvbiBvZiBsYWJvciB0byBzZWN1cmUgdGhyaXZpbmcsIHNvY2lldHkgYXMgYSB3aG9sZSB3b3VsZCBpbXByb3ZlLiAKSW4gYSBnYW1lIG9mIHBva2VyLCBob2xkaW5nIGEgNTY3IHNwYWRlIHdvdWxkIG9mdGVuIGJlIHJlZmVyZWQgdG8gYSBydW5uZXIgcnVubmVyIHN0cmFpZ2h0ICggYm90aCBvcGVuIGFuZCBndXQgc2hvdCkgb3IgcnVubmVyIHJ1bm5lciBmbHVzaCBkcmF3IHNvbWV0aW1lcyByZWZlcmVkIHRvIGFzIGEgYmFja2Rvb3IgZmx1c2guIDIxLzQ3IG1lYW5zIHRoYXQgNDIlIG9mIHRoZSB0aW1lIHlvdSB3aWxsIGhhdmUgYSBjaGFuY2Ugb2YgaGl0dGluZyB5b3VyIHN0cmFpZ2h0IG9yIGZsdXNoLiBIb3dldmVyIGEgd29yZCBvZiB3YXJuaW5nIGlmIHdlIGNhcnJ5IG91dCBhbiBBbGwgaW4gc2l0dWF0aW9uIHRoZSAlIG9mIGJvdGggaGl0dGluZyB5b3VyIG91dCBvbiB0aGUgdHVybiBhbmQgcml2ZXIgYXJlIGRyYW1hdGljYWxseSByZWR1Y2VkLiAoRnVsbCBBbnN3ZXIpCkkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHNvIHdlIGRvbiAocmVhbGx5KSBoYXZlIG9ubGluZSBwb2tlci4gCkp1biAxOTpCb3VsZGVyIENvdW50eSBqdXJ5IGNvbnZpY3RzIG1hc3NhZ2UgdGhlcmFwaXN0IG9mIHNleHVhbGx5IGFzc2F1bHRpbmcgNiB3b21lbkp1biAxNTpUcmlhbCBiZWdpbnMgZm9yIEdyZWdvcnkgQ2hpbmcsIG1hc3NhZ2UgdGhlcmFwaXN0IGFjY3VzZWQgb2Ygc2V4dWFsIGFzc2F1bHRGZWIgMjA6Qm91bGRlciBDb3VudHkgbWFzc2FnZSB0aGVyYXBpc3QgcGxlYWRzIG5vdCBndWlsdHkgdG8gc2V4dWFsIGFzc2F1bHRPY3QgODpCb3VsZGVyIHNoZXJpZmY6IE1hc3NhZ2UgdGhlcmFwaXN0IGZhY2luZyBzZXh1YWwgYXNzYXVsdCBjaGFyZ2UgYXNzYXVsdGVkIGZpdmUgb3RoZXIgd29tZW5UaGUgQm91bGRlciBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBhcnJlc3RlZCBhIGxvY2FsIGdyZWVuaG91c2Ugb3duZXIgYW5kIG1hc3NhZ2UgdGhlcmFwaXN0IGFmdGVyIGEgd29tYW4gdG9sZCBpbnZlc3RpZ2F0b3JzIGhlIHNleHVhbGx5IGFzc2F1bHRlZCBoZXIgd2hpbGUgZ2l2aW5nIGhlciBhIG1hc3NhZ2UuR3JlZ29yeSBNaW5nY2hpdSBDaGluLCA1NCwgd2FzIGFycmVzdGVkIG9uIHN1c3BpY2lvbiBvZiBzZXh1YWwgYXNzYXVsdCAgIGEgQ2xhc3MgMyBmZWxvbnkgICBvbiBKdWx5IDMwLCBhY2NvcmRpbmcgdG8gYSBuZXdzIHJlbGVhc2UgZnJvbSB0aGUgQm91bGRlciBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBvbiBUdWVzZGF5LkludmVzdGlnYXRvcnMgc2F5IHRoZSB2aWN0aW0gbWV0IENoaW5nIHRocm91Z2ggRmFjZWJvb2ssIGFuZCB0aGF0IGhlIGFza2VkIGhlciB0byBoZWxwIGhpbSBvdXQgd2l0aCBhIGJvb3RoIGF0IGEgZmFpciB3aGVyZSBoZSB3b3VsZCBiZSBzZWxsaW5nIGdyZWVuaG91c2UgY29uc3RydWN0aW9uIG1hdGVyaWFsIGZvciBoaXMgY29tcGFueSwgQXNwZW4gTWVhZG93cyBBcXVhdGljIENlbnRlciwgaW4gc291dGh3ZXN0IEJvdWxkZXIgQ291bnR5LkNoaW5nIHJlcG9ydGVkbHkgdG9sZCB0aGUgd29tYW4gaGUgY291bGQgbm90IHBheSBmb3IgaGVyIHNlcnZpY2UsIHNvIGhlIG9mZmVyZWQgdGhlIHdvbWFuICAgd2hvIGhhZCBhbiBpbmp1cnkgYXQgdGhlIHRpbWUgICBhIGhlYWxpbmcgYXF1YXRpYyBtYXNzYWdlIGF0IGhpcyBob21lIGFzIHBheW1lbnQuVGhlIHdvbWFuIHNhaWQgdGhhdCBkdXJpbmcgdGhlIG1hc3NhZ2UsIENoaW5nIHNleHVhbGx5IGFzc2F1bHRlZCBoZXIsIGFjY29yZGluZyB0byB0aGUgc2hlcmlmZidzIG9mZmljZS5DaGluZyB3YXMgcmVsZWFzZWQgZnJvbSB0aGUgQm91bGRlciBDb3VudHkgSmFpbCBvbiAkMTAsMDAwIGJvbmQgYW5kIGlzIHNjaGVkdWxlZCBmb3IgYSBmaXJzdCBhZHZpc2VtZW50IG9uIEZyaWRheS5PZmZpY2lhbHMgc2FpZCB0aGVyZSBtYXkgYmUgbW9yZSB2aWN0aW1zLCBhbmQgYXJlIGFza2luZyBhbnlvbmUgd2hvIHdhcyBhc3NhdWx0ZWQgYnkgQ2hpbmcgb3IgaGFzIG1vcmUgaW5mb3JtYXRpb24gdG8gY2FsbCBCb3VsZGVyIHNoZXJpZmYncyBEZXRlY3RpdmUgRG9uIERpbGxhcmQgYXQgMzAzIDQ0MSA0OTkyLgpJIGZpbmQgaXQgc28gaGFyZCB0byB0cnkgYW5kIGZvbGxvdyB0aGlzIHRoaW5raW5nLiAKNjcgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ29JIGFtIHRlcnJpZmllZCBvZiBnZXR0aW5nIEJvdG94IGV2ZW4gdGhvdWdoIEkgbGVhcm5pbmcgdGhhdCBhIGxvdCBvZiB3b21lbiBteSBhZ2UgKGxhdGUgMzBzKSBhbmQgbXVjaCB5b3VuZ2VyIGFyZSBkb2luZyBpdC4gSSBkb24gd2FudCB0byBnZXQgZm9yY2VkIGludG8gYSBoYWJpdCB0aGF0IEkgZmVlbCBsaWtlIEkgaGF2ZSB0byBrZWVwIHVwICAgdGhhdCBnZXRzIGV4cGVuc2l2ZSwgYnV0IHRoZW4gaWYgeW91IHN0b3AgZG9pbmcgaXQgeW91IGZlZWwgbGlrZSB5b3UgYXJlbiBsb29raW5nIHlvdXIgYmVzdCBhbnltb3JlLkFsc28sIEkga25vdyBhIHdvbWFuIHdobyBzdGFydGVkIHdpdGggQm90b3ggYW5kIGxpcCBmaWxsZXJzIGEgZmV3IHllYXJzIGFnbyBhbmQgaGFzIGFtcGVkIHVwIGhlciB1c2Ugc2luY2UgdGhlbjsgc2hlIHRoaW5rcyBzaGUgbG9va3MgZ3JlYXQgKHdoaWNoIEkgZ2V0IGlzIHJlYWxseSBhbGwgdGhhdCBtYXR0ZXJzKSBidXQgSSBmZWVsIGxpa2UgaXQgZ29uZSBiZXlvbmQgdGhlIHN1YnRsZSBpbXByb3ZlbWVudHMgc2hlIG9yaWdpbmFsbHkgd2FudGVkLiAKWWVhaCwgdGhpcyBpcyB3aGF0IEkgd2FzIGdvbm5hIHNheS4gCllvdSBjYW4gZmlsbCBpbiBtaXNzaW5nIGdhcHMsIG1hc3NhZ2UgZGF0YSBmb3IgcmVwb3J0aW5nIHB1cnBvc2VzICh0aGUgUFBNIGRhdGEgbW9kZWwgaXMgbm90IHJlYWxseSByZXBvcnRpbmcgZnJpZW5kbHkpLCBvZiBjb3Vyc2Ugd29yayB3aXRoIHdvcmtmbG93cywgZXRjLiAKV2h5IGRvIHlvdSB0aGluayBCcml0YWluIGRlY2lkZWQgdG8gcGFydGl0aW9uIHRoZSByZWdpb24gaW4gdGhlIGZpcnN0IHBsYWNlPyAoSGludCwgaXQgbm90IGp1c3QgYmVjYXVzZSBvZiB0aGUgZGlzcGxhY2VtZW50IG9mIGpld3MgYWZ0ZXIgd3cyKS4gU2VyaW91c2x5LCBnbyByZWFkIHNvbWUgaGlzdG9yeSBvZiB0aGUgcmVnaW9uLCBhbmQgaSBkb24gbWVhbiBqdXN0IHRoZSBsYXN0IDcwIG9kZCB5ZWFycyBiZWZvcmUgcGFycm90aW5nIHRoaXMgcmlkaWN1bG91cyAiSXNyYWVsIHN0b2xlIHRoZWlyIGxhbmQiIHJvdXRpbmUuLiAKS25vd2luZyBIb3cgdG8gUGxheSA3IENhcmQgU3R1ZCBQb2tlciB3aWxsIHRha2UgeW91IGJhY2sgYSBmZXcgeWVhcnMuLiAKQmFzdGUgdGhlIHR1cmtleSBldmVyeSAzMCBtaW51dGVzIG9yIHNvIGFuZCBhZGQgbW9yZSBzdG9jayB0byB0aGUgcm9hc3RpbmcgcGFuLCBpZiBuZWVkZWQuIENvb2sgYWJvdXQgMTcgbWludXRlcyBwZXIgcG91bmQuIApPbmUgbmljZSB0aGluZyBpcyB0aGF0IGl0IGRvZXMga25vdyB3b3JkcyBsaWtlICJHbG9vbWhhdmVuIiBhbmQgIklub3giLCBhbmQgaXQgYWNjZXB0cyB3aWxkIGNhcmRzLiBIb3dldmVyLCBiYXNlZCBvbiB0aGUgR2VybWFuIGNhcmQsIHRoZXJlJ3MgYSBnb29kIGNoYW5jZSB0aGlzIGlzIGEgd2lsZCBnb29zZSBjaGFzZS4gCkFiemhscGxhbiBkaWUgUmVpaGVuIG1pdCBGKSwgZGFiZWkgaW1tZXIgdm9yIHVuZCBoaW50ZXIgZGVyIEFibmFobWVtaXR0ZSBkaWUgTWFzY2hlbiB6dXNhbW1lbiBzdHJpY2tlbi4uIApGQkkgYnVzdHMgY2hpbGQgcHJvc3RpdHV0aW9uIHJpbmdzCkF1YnVybiBVbml2ZXJzaXR5IGlzIGNvbW1pdHRlZCB0byBtYWtpbmcgb3VyIHdlYnNpdGVzIGFjY2Vzc2libGUgdG8gYWxsIHVzZXJzLCBpbmNsdWRpbmcgdGhvc2UgdGhhdCB1c2UgQXNzaXN0aXZlIFRlY2hub2xvZ3kuIApVbmRlcnN0YW5kaW5nIHRoZSBwcm9ibGVtIGluIHRoZSBmaXJzdCBwbGFjZSBpcyBvZnRlbiB0aGUgaGFyZGVzdCBwYXJ0IG9mIHRoZSBqb2IuClRoaW5rIG9mIGEgZmxpZ2h0IHN5c3RlbSB3aGljaCBoYXMgdG8gZGVhbCB3aXRoIG1vbml0b3JpbmcgdGhlIGNhYmluIHByZXNzdXJlLCBmdWVsIHVzYWdlLCBlbmdpbmUsIGNvY2twaXQgY29udHJvbHMsIGZsaWdodCBkeW5hbWljcyBhbmQgYSBwbGV0aG9yYSBvZiBvdGhlciBoaWdobHkgY3JpdGljYWwgc3Vic3lzdGVtcy4gTm90IG9ubHkgZG8gdGhlc2Ugc3Vic3lzdGVtcyBoYXZlIHRvIGludGVyYWN0IHdpdGggZWFjaCBvdGhlciBpbiByZWFsIHRpbWUsIHRoZXkgYWxzbyBkZXBlbmQgb24gb25lIGFub3RoZXIgdG8gZW5zdXJlIHRoZSBvdmVyYWxsIHN5c3RlbSB3b3JrcyB3aXRob3V0IGEgY2F0YXN0cm9waGljIGZhaWx1cmUgYW5kIGlzIGFibGUgdG8gcmVjb3ZlciBmcm9tIGxpbWl0ZWQgc3Vic3lzdGVtIGZhaWx1cmVzLiBGb3IgaW5zdGFuY2UsIHRoZSBjYWJpbiBwcmVzc3VyZSBtYXkgYWZmZWN0IHRoZSBsaWZ0LCBvciBleGNlc3MgZnVlbCB1c2FnZSBtYXkgYmUgY2F1c2luZyBhIGNoYW5nZSBpbiB0aGUgZmxpZ2h0IGR5bmFtaWNzLiBTcGFjZVggRHJhZ29uIGFuZCBCb2VpbmcgNzc3Lzc4NyBmbGlnaHQgc3lzdGVtcyB1c2UgQkZUIGV4dGVuc2l2ZWx5LCBhbmQgYWNoaWV2ZSBCRlQgd2l0aGluIGZldyBtaWNyb3NlY29uZHMgb2YgbGF0ZW5jeS4KQnV0LCBCdW5jb21iZSBDb3VudHkgU2hlcmlmZiBWYW4gRHVuY2FuIHNheXMgaGlzIG9mZmljZSBkb2VzbiBoYXZlIGEgcmVjb3JkIG9mIGEgY2FsbCBtYWRlIGZyb20gRWlsZWVuIGhvbWUuIFNvLCB0aGlzIHBhc3QgSmFudWFyeSwgRWlsZWVuIGNvbnRhY3RlZCBOZXdzIDEzIGludmVzdGlnYXRpdmUgdGlwIGxpbmUgZm9yIGhlbHAuIEluIE1hcmNoIHdlIHdlbnQgdG8gUGxheWVycyBDaWdhciBCYXIgd2l0aCBhIGNlbGwgcGhvbmUgdG8gcmVjb3JkIHRoZWlyIHZpZGVvIHBva2VyIG1hY2hpbmVzLiBXZSB3YXRjaGVkIGFzIG9uZSBtYW4gYXBwYXJlbnRseSBiZXQgc21hbGwgYW1vdW50cyBvZiBtb25leSB3aXRoIGp1c3QgYSBjbGljayBvZiBhIG1vdXNlLiBXZSB0aGVuIGNvbnRhY3RlZCB0aGUgU2hlcmlmZiBPZmZpY2UgdG8gcmVwb3J0IHdoYXQgd2UgaGFkIHNlZW4gYW5kIGp1c3QgYSBmZXcgZGF5cyBsYXRlciB0aGV5IGJ1c3RlZCB0aHJlZSBiYXJzLCBpbmNsdWRpbmcgUGxheWVycy4KSSdkIHJhdGhlciB0ZWxsIHRoZW0gdG8gaG9sZCB0aGUgbG9hbiB1bnRpbCB0aGUgTFRWIGNhbSBpbnRvIGxpbmUsIHNlbGxpbmcgaXQgbGF0ZXIsIHRoYXQgaXMgaWYgdGhlIGxlbmRlciB3YXMgYSBiYW5rLiBPdGhlcndpc2UsIHNlZSB5b3VyIGF0dG9ybmV5IG9yIGp1c3QgZ2V0IG91dCB0aGUgY2hlY2sgYm9vay4gCkhpIC91L0tpbmdFZGVkZSwgdGhhbmtzIGZvciB5b3VyIHN1Ym1pc3Npb24gdG8gL3IvQm9zc2ZpZ2h0ISBVbmZvcnR1bmF0ZWx5IGl0IGhhcyBiZWVuIHJlbW92ZWQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uKHMpOgpUaGF0IHdhcyB0aGUgcmVhc29uIGZvciBtZSB0byBzZXR0bGUgaW4gTG91aXN2aWxsZSBhbmQgaXQgd29ya2VkIHdlcnkgd2VsbC4gCkNyaXQgcGFyIDogQXJpYW5lICAyNy8wOC8yMDEySmUgdm91cyBsaXMgc291dmVudCwgbWFpcyBjJ2VzdCBsYSBwcmVtaXJlIGZvaXMgcXVlIGplIGxhaXNzZSB1biBtb3QuIEplIG1lIGJhdCBhdmVjIG1vbiBjb3JwcyBkZXB1aXMgZGVzIGx1c3RyZXMgISBhcHJzIG1vdWx0IHJnaW1lcywgZGUga2lsb3MgcGVyZHVzIGV0IHN1cnRvdXQgcmVwcmlzLCBqZSBtZSBzdWlzIHBvc2UgY2V0dGUgcXVlc3Rpb24gaWwgeSBhIHBldSBkZSB0ZW1wcyA6IGVzdCBzaSBsZSBwcm9ibG1lIHRhaXQgYWlsbGV1cnMsIGRhbnMgbWEgdHRlIHF1b2kuIApXaGF0IHNob3VsZCBiZSBkb25lIHRvIHRoaXMgbWFuIGlzIG5vdCBteSBjaG9pY2UuCk92ZXJ2aWV3IGZvciBtYXJ0dXNmaW5lCkJsYWgsIGJsYWgsIGJsYWguLiAKQWx0aG91Z2ggbG93IDI1IGh5ZHJveHl2aXRhbWluIEQgKDI1KE9IKUQpIGlzIHByZXZhbGVudCBhbW9uZyBvbGRlciBhZHVsdHMgYW5kIGlzIGFzc29jaWF0ZWQgd2l0aCBwb29yIHBoeXNpY2FsIGZ1bmN0aW9uLCBsb25naXR1ZGluYWwgc3R1ZGllcyBleGFtaW5pbmcgdml0YW1pbiBEIHN0YXR1cyBhbmQgcGh5c2ljYWwgZnVuY3Rpb24gYXJlIGxhY2tpbmcuIFdlIGV4YW1pbmVkIHRoZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIDI1KE9IKUQsIHBhcmF0aHlyb2lkIGhvcm1vbmUgKFBUSCksIGFuZCB0aGUgb25zZXQgb2YgbW9iaWxpdHkgbGltaXRhdGlvbiBhbmQgZGlzYWJpbGl0eSBvdmVyIDYgeWVhcnMgb2YgZm9sbG93IHVwIGluIGNvbW11bml0eSBkd2VsbGluZywgaW5pdGlhbGx5IHdlbGwgZnVuY3Rpb25pbmcgb2xkZXIgYWR1bHRzIHBhcnRpY2lwYXRpbmcgaW4gdGhlIEhlYWx0aCwgQWdpbmcgYW5kIEJvZHkgQ29tcG9zaXRpb24gc3R1ZHkgKG4gPSAyLDA5OSkuCkkgZm9yZ290IHRvIG1lbnRpb24gSSB3YXMgZnVja2luZyBhY2VzIGF0IG1pbmVzd2VlcGVyIHdoaWxlIEkgd2FzIGluIG15IGRvd253YXJkIHNwaXJhbC4gCklmIGhlIHdvdWxkIGhhdmUgc3RheWVkIHdpdGggdGhlIE9ha2xhbmQgUmFpZGVycywgaGUgd291bGQgaGF2ZSBmb3Igc3VyZSB3b24gYSBzdXBlcmJvd2wuIChGdWxsIEFuc3dlcikuIApTb3V2ZW50IGNyYXRyaWNlIGQndm5lbWVudHMgb3JpZ2luYXV4LCBlbGxlIGF2YWl0IGQnYWlsbGV1cnMgaW1hZ2luIHVuIGRuZXIgYXV0b3VyIGNldHRlIG5vdGlvbiwgcXVpIG0nYXZhaXQgZmFpdCBkY291dnJpciBhdmVjIGJvbmhldXIgbGUgcmVzdGF1cmFudCBMJ0luY29ubnUuIAo0cnNtaXQgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClNvIEkgc3R1Y2sgd2l0aCBTcGVjdHJ1bSwgYW5kIHRoZXkgd29uIHN0b3AgaGFyYXNzaW5nIG1lIHdpdGggdGhlaXIgc3R1cGlkIHBhY2thZ2UgZGVhbC4gSSBub3QgZXhhZ2dlcmF0aW5nIHdoZW4gSSBzYXkgdGhpcywgSSBnb3R0ZW4gb3ZlciA1MCBsZXR0ZXJzIGZyb20gdGhlbSB0aHJvdWdoIHRoZSBtYWlsIGFib3V0IG1lIGJlaW5nIGEgdmFsdWVkIGN1c3RvbWVyIGFuZCB0aGV5IHdhbnQgdG8gb2ZmZXIgbWUgdGhhdCBzdHVwaWQgJDI5Ljk5IGVhY2ggZGVhbCB0aGluZy4gSSBsaXRlcmFsbHkgZ2V0IGEgbGV0dGVyIGZyb20gdGhlbSBldmVyeSAzIGRheXMgb3Igc29tZXRoaW5nIGFuZCBpdCByaWRpY3Vsb3VzIGhvdyBtdWNoIHBhcGVyIHRoZXkgd2FzdGUuLiAKQ2VsaWEgSm9obnNvbiBkaWQgbm90IGVuam95IHRoZSBmb29kIG11Y2gsIGJ1dCB0aGUgbG9jYWwgZXh0cmFzIHRob3VnaHQgaXQgdmVyeSBnb29kLiBTd2VldHMgYW5kIGNob2NvbGF0ZSB3ZXJlIGhhbmRlZCBvdXQgYnkgdGhlIEJyaWVmCkluIHRvZGF5J3Mgd29ybGQgdGhlIHByb2Nlc3Mgb2YgY29tbXVuaWNhdGlvbiByZWFjaGVkIGV2ZXJ5IGNvcm5lciBvZiB0aGUgd29ybGQuIFRlY2hub2xvZ3kgcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gdGhlIHN1Y2Nlc3Mgb2YgcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uLiBJdCBtYWtlcyB0aGUgcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uIHZlcnkgc2ltcGxlIGFuZCBmYXN0ZXIuIApBcyBhIGJlZ2lubmVyIHBsYXllciB5b3Ugd291bGQgc29tZXRpbWVzIHdhbnQgZnJlZSBwb2tlciBwcmFjdGljZSByb29tcy4gCkFubiBIdWkncyBmYXRoZXIgd29ya3MgaW4gdGhlIExlZ2lvbiBDYWZlIGtpdGNoZW4gd2hpbGUgaGVyIG1vdGhlciBzdGFuZHMgaW4gdGhlIGJhY2tncm91bmQsIGhvbGRpbmcgaGVyIHNpc3RlciBQYW5zeS4KUm9sbCB0aGUgd2FybSBlZ2cgKHdpdGggb3Igd2l0aG91dCB0aGUgZWdnc2hlbGwpIHVudG8gdGhlIGJydWlzZSB1bnRpbCB0aGUgZWdnIGJlY29tZXMgY29vbC4gCldlIHdhbmRlbGRlbiB0b3QgaGV0IG1vb2llIGtlcmtqZSBDaHVyY2ggb2YgTmF2aXR5IG9mIHRoZSBWaXJnaW4gaW4gUHV0aW5raTogd2l0dGUgdG9yZW5zcGl0c2VuIG1ldCB1aWVuYm9sbGVuIG9wLCBibGlqa2JhYXIgdnJpaiB1bmllayB3YW50IGRpZSB0b3JlbnNwaXRzZW4gemlqbiBvcCBlZW4gZ2VnZXZlbiBtb21lbnQgdmVyYm9kZW4uIERhYXJuYSB3YXMgaGV0IHRpamQgdm9vciBlZW4gZHJhbmtqZSBpbiBlZW4gZ2V6ZWxsaWdlIHphYWsgKG1ldCBidWZmZXRqZSwgemllIGplIHZyaWogdmVlbCBpbiBNb3Nrb3UpLi4gCldlIG11c3Qgc2VlIHRoZSBwcm9ibGVtIGFzIGEgIndob2xlLiIgVGhlIHJlYXNvbiB0aGVyZSBubyBtb25leSBmb3IgaGVhbHRoIGNhcmUgb3IgZWR1Y2F0aW9uIG9yIGNsZWFuaW5nIHVwIHRoZSBlbnZpcm9ubWVudCBpcyBCRUNBVVNFIG9mIHRoZSBtaWxpdGFyeSBleHBlbmRpdHVyZXMsIHRoYXQgdGhlIG9ubHkgd2F5IHRvIGNyZWF0ZSBhY3R1YWwgcHJvZ3Jlc3NpdmUgcG9saWNpZXMgYW5kIHBvbGl0aWNpYW5zIGlzIHRvIGRpc21hbnRsZSB0aGUgbWlsaXRhcnkgaW5kdXN0cmlhbCBjb21wbGV4IGJ5IGVuZGluZyB0aGUgZWFybWFya3MgZm9yIGl0LCBhbmQgdGhhdCB0aGUgb25seSB3YXkgdG8gaGF2ZSBhbiBhY3R1YWwgdHdvIHBhcnR5IHN5c3RlbSBpcyB0byBpbnNpc3QgdGhhdCBvdXIgc3VwcG9zZWRseSBwcm9ncmVzc2l2ZSBsZWFkZXJzLCBsaWtlIE9iYW1hIGFuZCBXZWxjaCwgc3RvcCBqdXN0IHRhbGtpbmcgdGhlIHRhbGssIGFuZCBhY3R1YWxseSBzdGFydCB3YWxraW5nIHRoZSB3YWxrLgpZb3UgZG8gbm90IGhhdmUgYSBsb3Qgb2YgbWFyZ2luYWwvc3Ryb25nIGhhbmRzIGhlcmUgbGlrZSB0d28gcGFpcnMvc2V0cy9zdHJhaWdodHMuIApCZWluZyBjaGlsZGZyZWUgZG9lcyBub3QgbWVhbiB3ZSBoYXRlIGtpZHMuIE15IGpvYiBpbnZvbHZlcyBraWRzIGV2ZXJ5ZGF5IGFuZCBJIGxvdmUgaXQhIEkgZnJlZWx5IGFkbWl0IHRoZXkgY3V0ZSwgY2FuIGJlIGZ1bm55IGF0IHRpbWVzLCBhbmQgdGhleSBkbyBhbmQgc2F5IHRoZSBkYXJuZWRlc3QgdGhpbmdzIGJ1dCBJIGFtIG5ldmVyIG1vcmUgaGFwcHkgdG8gY29tZSBob21lIGV2ZXJ5IGRheSB0byBhIG5pY2UgcXVpZXQgY2xlYW4gaG9tZSB3aGVyZSBJIGNhbiBoYXZlIG5pY2UgdGhpbmdzLCBzbGVlcCBhcyBsb25nIGFzIEkgd2FudCwgYW5kIG9ubHkgaGF2ZSB0byB3b3JyeSBhYm91dCBteSBvd24gZG9jdG9ycyBhcHBvaW50bWVudHMuIFNob3dpbmcga2luZG5lc3MgdG8ga2lkcyBkb2VzIG5vdCBtZWFuIHdlIHNlY3JldGx5IGdpdmluZyBpbiB0byBzb21lIG15c3RpY2FsIG1hdGVybmFsIGZvcmNlIHRoYXQgcHJvdmVzIGRlZXAgZG93biBhbGwgd29tZW4gcmVhbGx5IHdhbnQga2lkcy4gR1RGT3V0dGEgaGVyZSB3aXRoIHRoYXQKVGhlIGdheSBsaXR0bGUgZ2FyZGVuIG9mIHRoZSBzY2hvb2xtYXN0ZXIncyBicmlkZSB3YXMgcmF0aGVyIGEgZm9ybG9ybiBwbGFjZSBub3csIGFuZCB0aGUgTG9tYmFyZGllcyBhbmQgYmlyY2hlcyB3ZXJlIHVuZGVyIGJhcmUgcG9sZXMsIGFzIENhcHRhaW4gSmltIHNhaWQuIApDYXBpdGFsaXphdGlvbiBNaWR3aWZlIHRvIE1vbml0cmljZSBMaWdodCBTd2l0Y2ggRGVzY3JpYmUgWW91ciBGaXJzdCBQYXJlbnRpbmcgQ3Jpc2lzIENoYXJ0aW5nOiBXaG9zZSBUcnV0aD8gV2hhdCB3YXMgdGhlIHdlYXRoZXIgbGlrZSB0aGUgZGF5IHlvdSBoYWQgeW91ciBiYWJpZXM/IEhvdyBwcmVnbmFudCB3ZXJlIHlvdSB3aGVuIHlvdSBmb3VuZCBvdXQgeW91IHdlcmUgcHJlZ25hbnQ/IERvbid0IEFzaywgRG9uJ3QgVGVsbCBSRVBFQUxFRCEgU2lsdmlhIEZyYW5rJ3MgT2JpdHVhcnkgRkIgSW5xdWlyeTogV2hhdCBDaHJpc3RtYXMgQ2Fyb2wgRHJpdmVzIFlvdSBCb25rZXJzPyBGQiBJbnF1aXJ5OiBEb2VzIHlvdXIgZmFtaWx5IGRyaXZlIGV2ZXJ5d2hlcmU/IFRoZSBSaXBwaW5nIEFwYXJ0IG9mIE5hdHVyYWwgQmlydGggRkIgSW5xdWlyeTogV2hhdCB3YXMgdGhlIEJFU1QgZGVjaXNpb24geW91IG1hZGUgYXMgYSBwYXJlbnQgaW4gMjAxMD8gV2hhdCB0byBXZWFyIHRvIGEgRnVuZXJhbCBQcmVuYXRhbCBQb2xlIERhbmNpbmcgR3JpbmRpbmcgdG8gYSBIYWx0IEluIEhvbm9yIG9mIFNpbHZpYSBGcmFuayBUaGUgUG9zdCBMaXN0IEdyb3dzIExvbmdlciBUaG91Z2h0cyBvbiAiV2hlbiBhIEhvbWViaXJ0aCBEb2Vzbid0IEhhcHBlbiIgQWJ1ZWxhIFBhc3NlZCBUaGlzIE1vcm5pbmcgQWJ1ZWxhJ3MgQmFieSBCb3kgU2hhcmVzIEhpcyBUaG91Z2h0cyBDYW5kaWVkIFlhbXMgICBwaG90byByZWNpcGUgQ29tbWVudCB0byAiVW1tbSBub3Qgc28gbXVjaCIgVGhlIEhvc3BpdGFsIFRvdXIgQ29tbWVudCBmb3IgIkhvbWUgQmlydGggUGxhbiIgU3BhbSBMb3ZlIExldHRlciBJIE93ZSBZb3UgT25lIEVhcmxpZXIvRmFzdGVyL0JldHRlciBJbmhhbGUgSW1wcmludCAoYSBsZXR0ZXIgZnJvbSBhIG1vdGhlciB0byBoZXIgZGF1Z2h0ZXIpIE15IE5hbmEgKGNpcmNhIDE5ODIpIE5ldyBGcmllbmRzICgxOTg2KSBXaGF0IEtpbmQgb2YgQ2VyZWFsIERvIFlvdSBIYXZlIGluIFlvdXIgUGFudHJ5PyBXaGVuIElzIEhlbHAgTm90IEhlbHA/ICJCYWJpZXMiIFR3byBUeXBlcyBvZiBNb21zIFRyYW5zaXRpb24gV2hhdCBEaWQgWW91IENyYXZlPyBEaWFtb25kIE1hcmtzIHRoZSBTcG90IE1lYSBDdWxwYSAodGhyb3VnaCBteSBmYXVsdCkgV2hlbiBJJ20gQXNrZWQgYSBRdWVzdGlvbiAiTm8gV29tYW4sIE5vIENyeSIgIkhvbWViaXJ0aCBBd2FyZW5lc3MgV2VlayIgTmFCbG9Qb01vIChvbmUgZGF5IGxhdGUgYWxyZWFkeSEpIEJpdGVzIE15IERvY3RvciBTYWlkIFdoYXQ/ISBOb3RlIHJlOiBVbWJpbGljYWwgQ29yZCBXaG8gQXJlIFlvdSBDYWxsaW5nIGFuIEludGFjdGl2aXN0PyAoR3Vlc3QgUG9zdCkgT3JpZ2luYWwgRiBXb3JkIFBvc3QgUmVtb3ZlZCAodG8gbWFrZSB3YXkgZm9yIEplbidzIHBvc3QpIFJlbW92ZWQgRiBXb3JkIFBvc3QgQ29tZSBPdXQhIENvbWUgT3V0ISBXaG9ldmVyIFlvdSBBcmUuIEJhYnl3ZWFyaW5nIFF1aWV0IEJsb2cgQ2Fybml2YWwgICBBbnlvbmUgT3V0IFRoZXJlPyBCbG9nIENhcm5pdmFsOiBNaWR3aWZlcnkgUmFjaXNtIDI1IFdvcmRzIEJpcnRoIGFzIFlvZ2EgQ2xlYXIgSGVhZGVkIE1hbWEgQmFieSBUYXR0b29zICJCZSBIb25lc3QiIE15IEZyb2cgVGhlIEJsb2dnZXJob29kIChhcyBzZWVuIGZyb20gbXkgd2luZG93KSBSZXN1c2NpdGF0aW9uIEJvYXJkIFRha2luZyBhIEZhdCBXb21hbidzIEJsb29kIFByZXNzdXJlIChzbWFsbCkgUGV0IFBlZXZlOiBISVBBQSBCYXJiJ3MgQWR2aWNlIHRvIFF1ZWxsIEdETSBhbmQvb3IgSHVtb25nb3VzIEJhYmllcyBPcGVuIFNlYXNvbjogeW91IGhhdmUgYmVlbiB3YXJuZWQgU2VwYXJhdGlzbTogY29uZmxpY3QgYW1vbmdzdCB0aGUgcmFua3MgRGlkIEFDT0cgKGZpbmFsbHkhKSBUYWtlIFRoZWlyIE1lZHM/IERvdWxhcyBIb21lYmlydGggRHIuIFdoYXQgSSBsZWFybmVkIHdhdGNoaW5nIHRoZSBOSUggVkJBQyBDb25mZXJlbmNlIFRoZSBVQyBPeHltb3JvbiBXaHkgTWlkd2l2ZXMgQXNrIGZvciBQYXltZW50IENCQUMgUHJvY2Vzc2luZyBSYW5kb20gVGhvdWdodHMgb24gKFZCQUMpIEluZm9ybWVkIENvbnNlbnQgV2hhdCBkbyB3ZSBkbyB3aXRoIHRoZSBHRE0gc3R1ZHk/IEJpcnRoOiAxOTg3IFRoZSBTY2llbmNlIG9mIFdvbyBIb3cgdG8gU2hvdyBZb3UgQXJlIFNlcmlvdXMgQWJvdXQgQmVjb21pbmcgYSBNaWR3aWZlIEkgSnVzdCBXYW50IFdvbWVuIHRvIFRoaW5rISBGb29kLCBJbmMuIApQYXRyaWUgOiBsJ29idGVudGlvbiBkZSBsYSBuYXRpb25hbGl0IGZyYW5haXNlIG9mZnJlIGwnb3Bwb3J0dW5pdCBkZSBkZW1hbmRlciBsYSBmcmFuY2lzYXRpb24gZHUgbm9tIGVuIHZlcnR1IGRlIGxhIGxvaSBkdSAyNSBvY3RvYnJlIDE5NzIgKDcyIDk2NCkgOyBkYW5zIGxlIGJ1dCBkZSBmYXZvcmlzZXIgbCdpbnRncmF0aW9uIGRhbnMgbGEgY29tbXVuYXV0IGZyYW5haXNlIChBcnQuIDFlcikuIENlbGEgcGV1dCBwcmVuZHJlIGRpZmZyZW50ZXMgZm9ybWVzIDogdHJhZHVjdGlvbiBkdSBub20sIHJldHJhaXQgZCd1bmUgc3lsbGFiZSwgZXRjLiAKQ3VydGlzIGZhc2NpbmF0ZXMgR2VycnkgYmVjYXVzZSBoZSBzZWVtcyBpbmNhcGFibGUgb2YgbG9zaW5nLiBIaXMgc3RyYXRlZ3kgb2Ygd2Fsa2luZyBhd2F5IG9uIGEgd2hpbSBzZWVtcyBhIG1ldGFwaG9yIGZvciBob3cgaGUgbGl2ZXMgaGlzIGxpZmUgKCB0byBNYWNodSBQaWNjaHUgaXMgaGlzIGNvZGUgZm9yLCBvdXR0YSBoZXJlIGFyZSBzdXBlcnN0aXRpb3VzLiBHZXJyeSB3aG9zZSByZWFsIGVzdGF0ZSBkYXkgam9iIGlzIGFib3V0IHRvIGNvbGxhcHNlIGluIHRoZSBmYWNlIG9mIGhpcyBjaXR5IHdpZGUgZ2FtYmxpbmcgZGVidHMgaXMgZWFnZXIgdG8gYWNjb21wYW55IGEgZ29vZCBsdWNrIGNoYXJtIG9uIGhpcyBwbGFubmVkIHJvYWQgdHJpcCB0byBOZXcgT3JsZWFucy4gQW5kIEN1cnRpcyBzZWVtcyBmYXNjaW5hdGVkIGJ5IHRoZSB2YXJpb3VzIGNvaW5jaWRlbmNlcyB0aGF0IGtlZXAgYnJpbmdpbmcgdGhlbSB0b2dldGhlciAoYWx0aG91Z2ggaGludHMgYXJlIGRyb3BwZWQgdGhhdCBoZSBtYXkgaGF2ZSBtb3JlIGNvbm5pdmluZyBtb3RpdmVzKS4KTm90IGFzIGJhZCBhcyBzb21lIHRoaW5ncyB3ZSBjb3VsZCBoYXZlIGJ1dCBkYW1uIGlmIGl0IGRvZXNuJ3QganVzdCBmbGF0IG91dCBzdWNrIGNvbnN0YW50bHkgaGF2aW5nIHRvIHRoaW5rIGFib3V0IGl0LCBkZWFsIHdpdGggaXQsIG1vbml0b3Igc3ltcHRvbXMsIHR1cm4gYXdheSBmb29kIHdlIG5vcm1hbGx5IHdvdWxkIGRpZSBmb3IgZXRjIGV0Yy4gSSB0b28gZm91bmQgcmVsaWVmIGluIHN5bXB0b21zIGZyb20gdXNpbmcgS3JhdG9tIG5vdCB0byBtZW50aW9uIHRoZSBmYWN0IGl0IGhlbHBzIHRoZSBoZWxwcyBhbGxldmlhdGUgb3RoZXIgY29uZGl0aW9ucyBJIGhhdmUuSSdtIHN1cmUgbGlrZSBtZSB5b3UgaGF2ZSB0cmllZCBhIHBsZXRob3JhIG9mIG1lZGljYXRpb25zLCBkaWV0cyBhbmQgYSB3aG9sZSBob3N0IG9mIHJlbWVkaWVzIHRvIG5vIGF2YWlsLiBJIHdhcyBnb2luZyB0byBhZGQgdGhhdCBpZiB5b3UgaGF2ZW4ndCBhbHJlYWR5IHNlZSBhYm91dCB0cnlpbmcgTGlicmF4LCBHYWJhcGVudGluIG9yIG1heWJlIFZpYmVyemkuTGlicmF4IGlzIGEgY29tYm8gbWVkIHBhcnQgYmVuem9kaWF6ZXBpbmUgYW5kIHBhcnQgYW50aWNob2xpbmVyZ2ljLiAKQSBzZWFyY2ggYWxzbyB0b29rIHBsYWNlIGF0IERvYydzIFB1YiBpbiBTb3V0aCBQaGlsYWRlbHBoaWEsIGEgYnVpbGRpbmcgb25jZSBvd25lZCBieSBEb3VnaGVydHksIEJ1cnJvd3MsIGFuZCB0aGUgaGVhZCBvZiB0aGUgdW5pb24ncyBhcHByZW50aWNlIHByb2dyYW0sIE1pY2hhZWwgTmVpbGwuCkkgcXVpdGUgbGlrZWQgYSBjb2NrdGFpbCBiYXIsIHRoZW4gdGhleSBkaWQgdGhpcy4gU2l0dGluZyBhdCB0aGUgYmFyLCBhIGNvbGxlY3Rpb24gb2YgMTUgMTggdmVyeSBwaXNzZWQsIG1haW5seSBFbmdsaXNoIGFuZCBBbWVyaWNhbiB0aGF0IHdlcmUgImRvaW5nIENoaW5hIiB3ZXJlIHVzaGVyZWQgaW4gYnkgdGhlaXIgdG91ciBncm91cCBsZWFkZXIsIHRvbGQgdG8gc2l0IGF0IHRoZSBiYWNrIGFuZCBub3Qgb2JzdHJ1Y3QgdG9pbGV0cy4gCkh1Z09mZmVuc2l2ZSAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KVGhlIGJyZWF0aGluZyBhbmQgc3RyZXRjaGluZyBleGVyY2lzZXMgYXJlIGRlc2lnbmVkIHRvIHNsb3cgZG93biB5b3VyIHJhY2luZyB0aG91Z2h0cyBhbmQgcHVsbCB5b3UgaW50byB0aGUgcHJlc2VudCBtb21lbnQuIApUaGUgcGxhY2UgZml4ZWQgb24gZm9yIHRoZSBzdGFuZCBzaG9vdGluZyB3YXMgbm90IGZhciBhYm92ZSBhIHN0cmVhbSBpbiBhIGxpdHRsZSBhc3BlbiBjb3BzZS4gT24gcmVhY2hpbmcgdGhlIGNvcHNlLCBMZXZpbiBnb3Qgb3V0IG9mIHRoZSB0cmFwIGFuZCBsZWQgT2Jsb25za3kgdG8gYSBjb3JuZXIgb2YgYSBtb3NzeSwgc3dhbXB5IGdsYWRlLCBhbHJlYWR5IHF1aXRlIGZyZWUgZnJvbSBzbm93LiAKUnNlcyBHYXpldGVzaQpOb3QgYSBzdHJldGNoIHRvIHN1Z2dlc3QgdGhlIGludGVudGlvbiBpcyB0byBnbyBwcm8gYW5kIGpvaW4gdGhlIENhbnVja3Mgcm9zdGVyIGFzIHNvb24gYXMgcG9zc2libGUgbWF5YmUgaW4gdGltZSB0byBmYWNlIHRoZSBOZXcgWW9yayBSYW5nZXJzIG9uIFdlZG5lc2RheSBhdCBSb2dlcnMgQXJlbmEuIApDaXJxdWUgZHUgU29sZWlsIHNsaXBzIHVwCkh1bWFuZW1pbHkgdQpJIG1hZGUgc2V2ZXJhbCBjb21wYXJpc29ucyB0aHJvdWdoIHRoZSByZXdhdGNoIGluIHJlZ2FyZHMgdG8gR2phbGxhcmhvcm4gaW4gc29tZSB3YXlzIGFjdGluZyBsaWtlIGEgcmVsaWdpb3VzIG9yZ2FuaXphdGlvbiBpbiB0aGUgd2F5IHRoZXkgdHJ5IGFuZCBjb250cm9sIHRoZSBjdWx0dXJhbCBhc3BlY3RzIG9mIEVhcnRoLCBhbmQgYXMgdGhlIHNob3cgaGFzIHByb2dyZXNzZWQgSSB0aGluayB0aGF0IG9ubHkgYmVjb21lIG1vcmUgYXBwYXJlbnQuVGhlIG1pc3Rha2UgdGhhdCBNY0dpbGxpcyBtYWRlIHdhcyBoZSB3YXMgc28gY2F1Z2h0IHVwIG92ZXIgaGF2aW5nIGZvdW5kIGhpcyBvdXQgb2YgaGlzIGxpZmUgdGhhdCBoZSBiZWNhbWUgdG9vIGZvY3VzZWQgb24gdGhlIGZvdW5kYXRpb24gb2YgR2phbGxhcmhvcm4gYW5kIGRpZG4gc3RvcCB0byBjb25jaXNlciBpdHMgcHVycG9zZS4gR2phbGxhcmhvcm4gaXMgaW4gZXNzZW5jZSBhIG1pbGl0YXJ5IGRpY3RhdG9yc2hpcCwgYW5kIGxpa2UgbW9zdCBkaWN0YXRvcnNoaXBzIHRoZXkgYWRhcHQgdG8gdXNpbmcgd2hhdGV2ZXIgc2NoZW1lcyB0aGV5IG5lZWQgdG8gYmUgYWJsZSB0byBjb250cm9sIHRoZSBwb3B1bGF0aW9uIHVuZGVyIHRoZW0gcmVnYXJkbGVzcyBvZiB0aGUgdXN1YWwgbW9yYWxpdHkgb2YgaXQuIEV2ZW4gSWRpb2tzIGJ1bGxzaGl0IHRoaXMgc2Vhc29uIGlzIG9ubHkgY29uZGVtbmVkIGJlY2F1c2UgaGUgY29tcGxpY2F0ZWQgaW50ZXJuYWwgcG9saXRpY2FsIGRlYWxpbmdzLCByYXRoZXIgdGhhbiBvdXQgb2YgYSBzZW5zZSBvZiBtb3JhbHMgb3IgZXRoaWNzLlRoZSBTZXZlbiBTdGFycyBsZWFkZXJzIGdyZXcgdXAgb24gdGhlIGxlZ2VuZHMgb2YgQmFlbCwgYnV0IHRoZXkgYWxzbyBncmV3IHVwIHdpdGhpbiBhIHBvbGl0aWNhbCBzeXN0ZW0gZmlyc3QgYW5kIGZvcmVtb3N0LiAKRmVtYWxlIGhvcm1vbmVzIGFsc28gYWZmZWN0IGEgd29tYW4ncyBmb290IGJvbmVzIGFuZCBsaWdhbWVudHMuIApCdXQgaGUgYWRvcHRlZCBhIGNvbmNpbGlhdG9yeSB0b25lLCBhY2tub3dsZWRnaW5nIHRoYXQgdGhlIHByb2plY3Qgd2FzIHN0aWxsIGluIGl0cyBlYXJseSBzdGFnZXMgYW5kIENoaW5hIHdhcyBzdGlsbCBsZWFybmluZyBhbmQgcmVmaW5pbmcuCkV0aGFuIFJ1YnksIGEgc21hbGxlciBzdGFrZXMgcGxheWVyIGluIE5ldyBZb3JrIENpdHksIGhhcyByZWRvdWJsZWQgaW52b2x2ZW1lbnQgd2l0aCBQb2tlcjRMaWZlLCBhbiBvcmdhbml6YXRpb24gaGUgY28gZm91bmRlZCB0byBob3N0IGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudHMgYXMgZnVuZHJhaXNlcnMgZm9yIG90aGVyIG5vbnByb2ZpdHMuIApJdCBjZXJ0YWlubHkgaXMgZm9yIFBhcmlzaWFucyBsaXZpbmcgb24gdGhlIHJ1ZSBDcm1pZXV4LCBhIHBpY3R1cmVzcXVlIHN0cmVldCBpbiB0aGUgMTJ0aCBhcnJvbmRpc3NlbWVudChkaXN0cmljdCkgb2YgUGFyaXMsIGJldHdlZW4gQmFzdGlsbGUgYW5kIHRoZSBHYXJlIGRlIEx5b24uICJJdCdzIGJlY29tZSBoZWxsaXNoLiBEdXJpbmcgdGhlIHdlZWsgaXQncyBva2F5LCBiZWNhdXNlIHRoZXkncmUgdG91cmlzdHMgYW5kIHNvIGFyZW4ndCB0b28gYW5ub3lpbmcuIEJ1dCBhdCB0aGUgd2Vla2VuZCB0aGVyZSdsbCBiZSAyMDAgcGVvcGxlIG91dHNpZGUgb3VyIHdpbmRvd3MuIApJdCBpcyBjbGVhciwgaG93ZXZlciwgdGhhdCB0aGUgTWF0dGhpYXMgZGVhbCBpcyBqdXN0IHRoZSBmaXJzdCBvZiBsaWtlbHkgbWFueSBtb3ZlcyBhbmQgcGVyaGFwcyB0eXBpY2FsIG9mIHdoYXQgdG8gZXhwZWN0IGluIHRoZSB3ZWVrIGFoZWFkLgpTbyBJIG1heSBzZWUgdHdpY2UgaW4gb25lIHllYXI/IHRoaXMgaGFzbiBoYXBwZW5lZCBzaW5jZSBsaWtlIDIwMTIuIApBZ2U6IDI2SG9tZXRvd246IExhcyBWZWdhc09jY3VwYXRpb246IFBva2VyIHBsYXllclBhc3QgV1NPUCBhY2NvbXBsaXNobWVudHM6IEVpZ2h0IGNhc2hlcyBmb3IgJDQ4LDc2OTUuIEFudG9uIE1ha2lpZXZza3lpICgxMyw5MjUsMDAwKQpCdXQgd2hhdCB5b3UgaGF2ZSB0byB1bmRlcnN0YW5kIGlzIHRoYXQgaGlzdG9yeSBoYXMgYWxyZWFkeSBtYWRlIGNlcnRhaW4gZ3JvdXBzLCBzdWNoIGFzIHdvbWVuLCBpbnRvIHZpY3RpbXM7IG92ZXIgeWVhcnMgb2Ygc3VianVnYXRpb24gYW5kIGZvcmNlZCBzZXJ2aXR1ZGUsIGp1c3QgbGlrZSBoaXN0b3J5IGhhcyBtYWRlIG1hbnkgZGlmZmVyZW50IHJhY2lhbC9ldGhuaWMvY3VsdHVyYWwvZ2VuZGVyIGdyb3VwcyBpbnRvIHZpY3RpbXMuIEl0IG5vdCB5b3VyIGZhdWx0IHBlciBzZSwgYW5kIHlvdSBhcmUgY29ycmVjdCBpbiBzYXlpbmcgdGhlcmUgYSBjZXJ0YWluIGluYWNjdXJhY3kgaW4gcHJlc3N1cmluZyBhbGwgb2YgdXMgdG8gdHJlYXQgcGVvcGxlIG9mIGRpZmZlcmVudCBiYWNrZ3JvdW5kcyBkaWZmZXJlbnRseS4gQnV0IHRoYXQgdGhlIHJlYWxpdHkgaW4gd2hpY2ggd2UgbGl2ZS4gCk1lYW53aGlsZSwgb3VyIG5hdHVyYWwgcmVzb3VyY2UgaW5kdXN0cmllcyBoYXZlIHRoZSBoaWdoZXN0IG5ldCBleHBvc3VyZSB0byBhIGxvd2VyIGRvbGxhciwgYmVjYXVzZSB0aGV5IGV4cG9ydCBtb3N0IG9mIHRoZWlyIG91dHB1dCB3aGlsZSBpbXBvcnRpbmcgZmV3IGlucHV0cy4gV2l0aCBwcmljZXMgYWxyZWFkeSBoaWdoIGZvciBtb3N0IGNvbW1vZGl0aWVzLCB0aGlzIHdpbGwgZnVydGhlciB0aWx0IG91ciBlY29ub215IHRvd2FyZHMgbmF0dXJhbCByZXNvdXJjZXMuLiAKVG9ueSBNaWxlcyB3cml0ZXMgYXBvbG9neSB0byBXU09QIGNoYW1wIEpvaG4gQ3lubiBhZnRlciBzbG93IHJvbGwgdGFsawpLZWVwIGFuIGV5ZSBvdXQgb24gQ2Fzc2FuZHJhIEhlcm5hbmRlei4gaGFzIGRvbmUgTWFyZ28gbm8gZmF2b3JzLiBhbSBub3QgZWxlY3RlZCB0byBnaXZlIGZhdm9ycyB0byB0aGUgTWF5b3IhIgpUaGUgc2Nob29scyBwcmluY2lwYWwgd29uIGhlbHAsIGJ1dCB0aGUgVlAgc3RhcnRzIGVzY29ydGluZyBtZSB0byBhbmQgZnJvbSBjbGFzc2VzLCBzbyBhdCBsZWFzdCB0aGUgeWVsbGluZyBhdCBtZSBzdG9wcyBpbiB0aGUgaGFsbHdheXMuIE9uZSB3ZWVrZW5kIEkgZHJpdmluZyBhbmQgSSBub3RpY2UgbXkgY2FyIGlzIHdvYmJseS4gCkRvbid0IEFzayBEb24ndCBUZWxsCkhpYyB1eWUgb2xtYWRpbSBhbWEgc2VuZWxlcmRpciBva3VydW0gZWtzaXlpLiBIZXAgaG9zdW1hIGdpdG1pc3RpciBla3NpLiBIZXIgZ29ydXN0ZW4gaW5zYW4gdmFyIHZlIGJheWEgc2FnbGFtIHlhemFybGFyZGEgdmFyLiAKSGFkIGEgY2FyIHdyZWNrIGEgd2hpbGUgYmFjayBhbmQgZXZlciBzaW5jZSB0aGVuIEkgYmVlbiBnZXR0aW5nIGJhZCBoZWFkYWNoZXMuIApJbiB0aGUgc2VyaWVzIGZpbmFsIHRocmVlIGdhbWVzLCBpdCBBcml6b25hIEJpZyBUaHJlZSAoRGFuIEhhcmVuLCBCcmFuZG9uIFdlYmIgYW5kIFJhbmR5IEpvaG5zb24pIHZzLiBUaGUgR2lhbnRzIEJpZyBUaHJlZSAoTWF0dCBDYWluLCBKb25hdGhhbiBTYW5jaGV6IGFuZCBDeSBZb3VuZykuLiAKT25seSB0aW1lIEkgaGFkIGFuIGlzc3VlIHdhcyB3aGVuIHRoZXJlIHdhcyBhIHN1YnN0aXR1dGUgbnVyc2UgZm9yIG9uZSBkYXksIEkgZW5kZWQgdXAgZ2V0dGluZyB0aGUgcHJpbmNpcGFsIHRvIGNvbWUgaW50byB0aGUgbnVyc2Ugb2ZmaWNlIHNvIGhlIGNhbiBjbGVhciB0aGluZ3MgdXAuLiAKSmFibyBXYWdnb25lcihSKSBCaXJtaW5naGFtIHNheXMgIkkgd291bGQgaGF2ZSB2b3RlZCBhZ2FpbnN0IHRoZSBnYW1ibGluZyBpc3N1ZSBubyBtYXR0ZXIgd2hlcmUgdGhlIG1vbmV5IGNhbWUgZnJvbS4iIFNlbi4gCllvdSBjYW4gZ28gZnJvbSBicm9rZSB0byBmbHVzaCB0byBicm9rZSBhZ2FpbiBpbiBhIGZldyBxdWljayBtb250aHMuIFlvdSBjYW4gc29hciBmcm9tIGJ1bSB0byBoZXJvIHRvIGJ1bSBhZ2FpbiBpbiBhIGRlbGlyaW91c2x5IGZhc3Qgc3VjY2Vzc2lvbiBvZiBnb29kIGRlY2lzaW9ucyBmb2xsb3dlZCBieSBiYWQgZGVjaXNpb25zLiBBbmQgaXQncyBiaXphcnJlIGhvdyBtdWNoIGEgYmFkIGRlY2lzaW9uIHNlZW1zIHNvdW5kIGluIHRoZSBtb21lbnQuIExpa2V3aXNlLCBhIHF1ZXN0aW9uYWJsZSBjaG9pY2UgY2FuIGRlbGl2ZXIgZmFidWxvdXMgc3VjY2Vzcy4gVGhlIGRpZmZlcmVuY2UsIG9kZGx5IGVub3VnaCwgaGFzIGxlc3MgdG8gZG8gd2l0aCBsdWNrIHRoYW4gd2l0aCB0aGUgZW50cmVwcmVuZXVyJ3MgdGVuYWNpdHkgdG8ga2VlcCBzdHJ1Z2dsaW5nIHRvd2FyZCBzdWNjZXNzIGluIGZhY2Ugb2YgZGlzYXN0ZXIgb3IgaW1tZWRpYXRlbHkgYWZ0ZXIgYWN0dWFsIGNhbGFtaXR5LgpUaGUgRmFtZSBNb25zdGVyIFdlbnQgQWxzbyAxIG9uIERhbmNlL0VsZWN0cm9uaWMgQWxidW1zIG9uIEJpbGxib2FyZCBVUy4gQnV0IG5vbmUgaW4gVVMgQmlsbGJvYXJkLiBXaGljaCBpcyBhIG1ham9yIGZhaWwuIApEciBKZWt5bGwgYW5kIE1yLiBIeWRlICgxOTQxKURpcmVjdG9yVmljdG9yIEZsZW1pbmcgU3R1ZGlvTWV0cm8gR29sZHd5biBNYXllciBQbG90RHIgSmVreWxsIGJlbGlldmVzIGV2ZXJ5b25lIGhhcyBnb29kIGFuZCBldmlsIHNpZGVzLiBIZSBpcyBpbiBsb3ZlIHdpdGggaGlzIGZpYW5jZSBCZWF0cml4ICdCZWEnIEVtZXJ5LiAKSG93IHRvIGdldCBmcm9tIGEgaGFuZHNoYWtlIHRvIGEgY2xvc2VkIGRlYWwKSWYgaXQgZ29lcyBiYWQ7IEkgYmUgbW9yZSBjb25jZXJuZWQgYXMgdG8gd2h5IEkgc3RpbGwgZnJpZW5kcyB3aXRoIHRoZW0gb24gRmFjZWJvb2sgaW4gdGhlIGZpcnN0IHBsYWNlLiAKVGhlIHRlYW1zIGFyZSBhbHNvIHN3YXBwaW5nIGRyYWZ0IHBpY2tzLCB3aXRoIHRoZSBCcm93bnMgZ2V0dGluZyBOby4gMTMyIGZvciBwaWNrIE5vLiAxNTUsIHNhaWQgdGhlIHBlcnNvbiB3aG8gc3Bva2UgRnJpZGF5IHRvIHRoZSBBc3NvY2lhdGVkIFByZXNzIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHkgYmVjYXVzZSB0aGUgdGVhbXMgaGF2ZSBub3QgYW5ub3VuY2VkIHRoZSB0cmFkZS4KSWYgdGhlIGRlYWxlciBtYWtlcyBhIG1pc3Rha2UsIGl0IGNhbiBvZnRlbiBiZSBjb3JyZWN0ZWQuIApJIHdvcmsgYXQgYSB2b2x1bnRlZXIgYXQgYSBzdWljaWRlL2NyaXNpcyBob3RsaW5lLiBJbiBhZGRpdGlvbiwgb25lIG9mIG15IGNsb3NlIGZyaWVuZHMganVzdCBsb3N0IGhlciBleCBib3lmcmllbmQgdG8gc3VpY2lkZS4gT25lIG9mIHRoZSBwZW9wbGUgSSB3b3JrIHdpdGggc3VnZ2VzdGVkIHNoZSBnbyB0byBhIFN1cnZpdm9ycyBvZiBTdWljaWRlIG1lZXRpbmcuIFRoZXkgYXJlIGV2ZXJ5d2hlcmUgICBtdWNoIGxpa2UgQUEgbWVldGluZ3MuIFNoZSBoYXMgc3RhcnRlZCBnb2luZyBhbmQgc2F5cyBpdCBoYXMgYmVlbiB0cmFuc2Zvcm1hdGl2ZSBhbmQgaGVhbGluZy4gVGhlIHRob3VnaHRzIHlvdSBleHByZXNzaW5nIGFyZSBtdWNoIGxpa2UgdGhlIG9uZXMgc2hlIGhhcyBiZWVuIHNoYXJpbmcgd2l0aCBtZSBhbmQgSSB0aGluayB5b3Ugd291bGQgZmluZCBwZW9wbGUgd2hvIHdpbGwgdW5kZXJzdGFuZCB5b3VyIHBhaW4gYW5kIHN0cnVnZ2xlLiBJIGtub3cgeW91IHdpbGwgd29yayB5b3VyIHdheSB0aHJvdWdoIHRoaXMuIEFuZCByZW1lbWJlciBpZiB5b3Ugb3IgYW55b25lIGVsc2UgeW91IGtub3cgaXMgaGF2aW5nIHRob3VnaHRzIG9mIHN1aWNpZGUgdG8gcmVhY2ggb3V0IGFuZCBjYWxsIHNvbWVvbmUgYXQgYSAyNCBob3VyIGNyaXNpcyBsaW5lLiBJIHRoaW5rIGl0IGNhbiBtYWtlIGEgZGlmZmVyZW5jZSAgIG9yIGF0IGxlYXN0IEkgaG9wZSB3ZSBkby4KTWFueSBvZiBvdXIgb2xkIGRlZXAgc2VhIG1vbnN0ZXIgc3RvcmllcyBpbnZvbHZlZCB0ZW50YWNsZXMsIGluIG1hbnkgY2FzZXMgaXQgd2FzIGp1c3Qgd2hhbGUgZGlja3MuIFdoYWxlcyBvZnRlbiBtYXRlIGluIHRocmVlcyBzbyB3aGlsZSBvbmUgbWFsZSB3YXMgYnVzeSB3aXRoIHRoZSBmZW1hbGUgdGhlIG90aGVyIG1hbGUganVzdCBwb3BzIGhpcyBkaWNrIG91dCBvZiB0aGUgd2F0ZXIgd2hpbGUgc3dpbW1pbmcgYXJvdW5kIHdhaXRpbmcgaGlzIHR1cm4uIFNvbWUgeWVhcnMgYWdvIG5ldmVyIG1pbmQgaG93IGxvbmcgcHJlY2lzZWx5IGhhdmluZyBsaXR0bGUgb3Igbm8gbW9uZXkgaW4gbXkgcHVyc2UsIGFuZCBub3RoaW5nIHBhcnRpY3VsYXIgdG8gaW50ZXJlc3QgbWUgIm9uIHNob3JlIiwgSSB0aG91Z2h0IEkgd291bGQgInNhaWwgYWJvdXQiIGEgbGl0dGxlIGFuZCBzZWUgdGhlICJ3YXRlcnkiIHBhcnQgb2YgdGhlIHdvcmxkLiBJdCBpcyBhIHdheSBJIGhhdmUgb2YgImRyaXZpbmcgb2ZmIHRoZSBzcGxlZW4iIGFuZCAicmVndWxhdGluZyB0aGUgY2lyY3VsYXRpb24iLiBXaGVuZXZlciBJIGZpbmQgbXlzZWxmICJncm93aW5nIGdyaW0gYWJvdXQgdGhlIG1vdXRoIjsgd2hlbmV2ZXIgaXQgaXMgYSBkYW1wLCBkcml6emx5IE5vdmVtYmVyIGluIG15IHNvdWw7IHdoZW5ldmVyIEkgZmluZCBteXNlbGYgaW52b2x1bnRhcmlseSBwYXVzaW5nIGJlZm9yZSAiY29mZmluIiB3YXJlaG91c2VzLCBhbmQgImJyaW5naW5nIHVwIHRoZSByZWFyIiBvZiBldmVyeSAiZnVuZXJhbCIgSSBtZWV0OyBhbmQgZXNwZWNpYWxseSB3aGVuZXZlciBteSAiaHlwb3MiIGdldCBzdWNoIGFuIHVwcGVyIGhhbmQgb2YgbWUsIHRoYXQgaXQgcmVxdWlyZXMgYSBzdHJvbmcgbW9yYWwgcHJpbmNpcGxlIHRvIHByZXZlbnQgbWUgZnJvbSBkZWxpYmVyYXRlbHkgc3RlcHBpbmcgaW50byB0aGUgc3RyZWV0LCBhbmQgbWV0aG9kaWNhbGx5ICJrbm9ja2luZyBwZW9wbGUncyBoYXRzIG9mZiIgdGhlbiwgSSBhY2NvdW50IGl0IGhpZ2ggdGltZSB0byAiZ2V0IHRvIHNlYSIgYXMgc29vbiBhcyBJIGNhbi4gVGhpcyBpcyBteSBzdWJzdGl0dXRlIGZvciAicGlzdG9sIGFuZCBiYWxsIi4gV2l0aCBhIHBoaWxvc29waGljYWwgZmxvdXJpc2ggIkNhdG8gdGhyb3dzIGhpbXNlbGYgdXBvbiBoaXMgc3dvcmQiOyBJIHF1aWV0bHkgInRha2UgdG8gdGhlIHNoaXAiLiBUaGVyZSBpcyBub3RoaW5nIHN1cnByaXNpbmcgaW4gdGhpcy4gSWYgdGhleSBidXQga25ldyBpdCwgYWxtb3N0IGFsbCBtZW4gaW4gdGhlaXIgZGVncmVlLCBzb21lIHRpbWUgb3Igb3RoZXIsIGNoZXJpc2ggdmVyeSBuZWFybHkgdGhlIHNhbWUgZmVlbGluZ3MgdG93YXJkcyAidGhlIG9jZWFuIiB3aXRoIG1lLgpPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIGp1ZGdlIGZvdW5kIHRoYXQgaWYgQUJDIHdlcmUgdG8gd2l0aGRyYXcgdGhlIHNlY29uZCBzcGVjaWFsIGZyb20gdGhlaXIgcHJvZ3JhbSBhIGZldyBkYXlzIGJlZm9yZSB0aGUgZGF0ZSB0aGF0IGhhZCBiZWVuIGFubm91bmNlZCBpbiBUViBzY2hlZHVsZXMsIEFCQyB3b3VsZCBhbHNvIHN1ZmZlciBkYW1hZ2UuIApNYXliZSB0aGUgYmVzdCB0cmF2ZWxlZCBib29rIHNpbXBseSBjb21lcyBkb3duIHRvIG9uZSB0aGF0IGJlbG9uZ3MgdG8gYW4gYWlyY3JhZnQgcGlsb3Qgb2YgNDAgeWVhcnMgZXhwZXJpZW5jZSB3aG8gaGFzIGJlZW4gZmx5aW5nIHdpdGggYSBzaW5nbGUgdGl0bGUgYmVjYXVzZSB0aGF0IGlzIHdoYXQgdGhleSBoYWQgd2l0aCB0aGVtIG9uIHRoZWlyIHZlcnkgZmlyc3QgZmxpZ2h0LCBhbmQgaGFzIGJlY29tZSBhIGdvb2QgbHVjayB0b2tlbi4gCkJsb29keSBoZWxsLiBJIGtub3cgeW91IG1heSBub3Qgc2VlIGhlciBhcyBhIHRocmVhdCwgYnV0IGp1c3QgYmUgc3VwZXIgY2F1dGlvdXMgaWYgeW91IGRvIGNvbnNpZGVyIHNlZWluZyBoZXIuIApTbyBpdCBub3QgZm9yIGV2ZXJ5b25lLiBNeSBleHBlcmllbmNlIGlzIHRoYXQgb25jZSBib3RoIHBhcnRpZXMgYXJlIGF0IGVhc2Ugd2l0aCB0aGUgcHJlbWlzZSBmb3IgdGhlIGFjdCwgaXQgY2FuIGJlIHN1cGVyIGZ1bi4gClRoZXkgYXJlIGFsc28gZGV2ZWxvcGluZyBhIHNtYWxsZXIgdW5pdCB0aGF0IGhvbGRzIGFib3V0IDE1IHdpbmUgYm90dGxlcyBhbmQgY2FuIGVhc2lseSBmaXQgaW50byBhIGtpdGNoZW4uIApEYXMgUHJvYmxlbSBtaXQgUGV0ZXJzb24gaXN0IHdpZSBpY2ggc2FndGUsIGVyIG1hY2h0IHBhYXIga2xlaW5lIEF1c3NhZ2VuLCBwYWFyIGtsZWluZSBGcmFnZW4gdW5kIHdpciBtc3NlbiB6dXNhbW1lbmRpY2h0ZW4gd2FzIGVyIGRhbWl0IHNhZ2VuIHdpbGwuIFVuZCBkYSBlciBlaW4ga29uc2VydmF0aXZlciByZWNodGVyIGlzdCBkZXIgZXh0cmVtIHJlbGlnaXMgd2FyIChvZGVyIG5vY2ggaXN0LCB3ZXIgd2Vpc3MsIGVyIHdpbGwgZXMgamEgbmljaHQgYmVhbnR3b3J0ZW4gaW4gZGVyIGZmZW50bGljaGtlaXQpLCBtdXNzIG1hbiBhdWYgZWluZW4gc2VociBrb25zZXJ2YXRpdmVuIFNjaGx1c3Mga29tbWVuLgpGb3IgbW9yZSBpbmZvcm1hdGlvbiB2aXNpdCBGaWdodCBMaWtlIEEgR2lybCB3ZWJzaXRlIG9yIGNhbGwgTWFyaSBCdXJnZXNzIGF0IDQzNSA2OTEgNDAxNC4KQ29saWNreSBiYWJpZXMgYXJlIGVhc2lseSBvdmVyd2hlbG1lZCBieSB0aGUgb3ZlcmxvYWQgb2Ygc2Vuc29yeSBpbmZvcm1hdGlvbiBpbiB0aGVpciBlbnZpcm9ubWVudCwgaWUgaXQncyB0b28gbG91ZCBhbmQgaXQncyB0b28gYnJpZ2h0ICAgJ0kgd2FudCBiYWNrIGluIHRoZSB3b21iIScKR2xja2xpY2hlcndlaXNlIGJpZXRldCBkYXMgIGRlciBFbmdsaXNoIEhhcmJvdXIgR3JvdXAgcmVndWxyZSwgaG9jaHdlcnRpZ2UgQ2FzaW5vIEdhbWVzIGUgYXVmIGRlciBHcnVuZGxhZ2Ugdm9uICwgQmxhY2tqYWNrIHVuZCBWaWRlbyAgYW4uIAooSSBzYWlkIGl0IGJlZm9yZSwgYnV0IGp1c3QgdG8gYWRkIG9uLiAKSXQgdHJ1ZSB0aGF0ICJiaW5nZSBkcmlua2luZyBhbG1vc3QgZXZlcnkgd2Vla2VuZCIgZm9yIGEgZGVjYWRlIGlzIG5vdCBnb29kIGZvciB5b3VyIGxpdmVyIGFuZCBtYXkgZWxldmF0ZSB0aGUgbGV2ZWwgb2YgbGl2ZXIgZW56eW1lcyBkZXRlY3RlZCBpbiB5b3VyIGJsb29kLiBBcyBhbGNvaG9sIGRhbWFnZXMgdGhlIGxpdmVyLCB0aG9zZSBjZWxscyBkaWUgYW5kIHJlbGVhc2UgdGhlaXIgY29udGVudHMgaW50byB0aGUgYmxvb2QuIFdlIG1lYXN1cmUgdGhvc2UgYXMgYSByb3VnaCBpbmRpY2F0aW9uIG9mIHdoZXRoZXIgb3Igbm90IHNpZ25pZmljYW50IGNlbGx1bGFyIGRhbWFnZSBpcyBiZWluZyBkb25lIGluIHRoZSBsaXZlci4gSGF2aW5nIGVsZXZhdGVkIGxpdmVyIGVuenltZXMgZG9lcyBub3QgZGlyZWN0bHkgY2F1c2UgaGFsbHVjaW5hdGlvbnMgICBub3IgZG9lcyAidHlwaWNhbCIgYmluZ2UgZHJpbmtpbmcgb24gd2Vla2VuZHMsIGV2ZW4gZm9yIHllYXJzIGF0IGEgdGltZS4KVGhlIHNvbGRpZXIgZGVmaW5pdGVseSBoYXMgc29tZXRoaW5nIHRoZXJlLCBhbmQgaGUgbG9va3MgYmFzaWNhbGx5IHRvbyB3ZWFyeSB0byBjb21wcmVoZW5kIGl0LiAKUGF0YWdvbmlhUGxhbmluZyBSb2xsIFRvcCBQYWNrICgkMTI5KS4gClRoZSBjaGlwcyBhcmUgdGhlbiB0ZXN0ZWQgb24gdGhlIHdhZmVyIHRoZW4gdGhlIHdhZmVyIGlzICJkaWNlZCIgd2l0aCBkaWFtb25kIHNhd3MuIFRoZSBnb29kIGRpY2UgYXJlIHRoZW4gcGFja2FnZWQgYW5kIHJldGVzdGVkLiBUaGUgbWFpbiByZWFzb24gc2lsaWNvbiBpcyB1c2VkIGlzIGl0IGlzIHRoZSBtb3N0IHdlbGwgYmVoYXZlZCBzZW1pY29uZHVjdG9yIGFuZCBoYXMgaW5zdWxhdGluZyBzb2xpZCBveGlkZXMuIApMQVMgVkVHQVMgKEFQKSAgIEl0IGJlZW4gYSBsb25nLCBzdHJhbmdlIHRyaXAgZm9yIHdoYXQgYXBwZWFycyB0byBiZSBzZXZlcmFsIHRpbnkgY2hpcHMgb2YgbHVuYXIgcm9jayB0aGF0IGZvdW5kIHRoZWlyIHdheSBpbnRvIGEgY2FzaW5vIG1vZ3VsIGhhbmRzIGFmdGVyIGJlaW5nIGNvbGxlY3RlZCBieSB0aGUgZmlyc3QgbWVuIG9uIHRoZSBtb29uLgpJbiB0aGUgbW9tZW50IEkgd2FzIHByZXR0eSBlbWJhcnJhc3NlZC4gCk15IHdpZmUgYW5kIGkgZ2V0IHBpc3NlZCBhdCBlYWNoIG90aGVyLCBidXQgd2UgYm90aCBsaWtlIGVhY2ggb3RoZXIgYW5kIGhhdmUgYnVpbHQgYSBsaWZlIHRoYXQgd2UgYm90aCBuZWVkIGVhY2ggb3RoZXIgdG8gYmUgaW4uIApXZWxsLCB0aGVyZSBhY3R1YWxseSBvbmUgY29sb3IgYW5kIGl0J3MgbW9yZSBsaWtlIGFuIGVtZXJhbGQgZ3JlZW4gYW5kIGRlbGl2ZXJzIGEgbWFnbmlmaWNlbnQgZmVlbCB0byBhbnkgcm9vbS4gCldvdWxkIGNoYWxsZW5nZSBvdXIgb2xkZXN0IGFsbGllcyB0byBhIHB1YmxpYyBzaG93ZG93biBpcyBxdWl0ZSByZW1hcmthYmxlLiAKSSBoYWQgYSBzZXNzaW9uIHR3byB5ZWFycyBhZ28gd2l0aCBIdW5nYXJpYW4gTWlsYSwgYnV0IHdvbmRlcmluZyBpZiB0aGV5IGFyZSB0aGUgc2FtZS4gCkhpcyBlbnRodXNpYXNtIGZvciB0aGUgam9iIGFuZCBmb3IgdGVsbGluZyB5b3UgYWJvdXQgaXQgaGUgZ3Jhc3BzIHlvdSBieSB0aGUgYXJtIGFzIGhlIGVhZ2VybHkgbWFrZXMgZXZlcnkgcG9pbnQgaXMgaW5mZWN0aW91cy4KU2hlIGp1c3QgZmVlbHMgbGlrZSBob21lLiBBbHNvIHdlIGFyZSB0aGlzIHdheSBiZWNhdXNlIG9mIHdvcmsgYW5kIHNhY3JpZmljZSBhbmQgZGVkaWNhdGlvbiBhbmQgbGF1Z2h0ZXIgYW5kIGxvdmUgYW5kIGhlYXJ0YWNoZSBhbmQgcGFpbiBhbmQgYmxpc3MgYW5kIGZ1biBhbmQgZGVzaXJlIGFuZCBzZXggYW5kIHVuZGVyc3RhbmQuIApIZW5jZSBpdCBwbGF5cyB2ZXJ5IHdlbGwgZm9yIEJ1dHRvbiBmb3IgdGhlIG1lZGlhIHRvIGJlbGlldmUgaGUgaXMgZ2VudWluZWx5IGNvbnNpZGVyaW5nIHJldGlyZW1lbnQuIFRoZXkgaGF2ZSBpbmFkdmVydGVudGx5IGJlY29tZSBwYXJ0IG9mIGhpcyBuZWdvdGlhdGlvbiBzdHJhdGVneS4uIApVbmUgcXVlc3Rpb24gbWUgdmllbnQgdG91dCBkZSBtbWUgIGwnZXNwcml0LiAKIlRoZXJlJ3Mgb25seSBvbmUgcmVhc29uIEkgcGxheWVkLiBUaGF0IHdhcyB0byB3aW4sIiBoZSB0b2xkIFRoZSBDYW5hZGlhbiBQcmVzcyBpbiBhIE1hcmNoIDIwMTUgaW50ZXJ2aWV3LiAiQW5kIGFsc28gdG8gcGxheSBiZXR0ZXIgdGhlIG5leHQgZGF5IHRoYW4gSSBkaWQgdGhlIGxhc3QgZ2FtZS4iCldoZW4gc3VjaCBwcmFjdGljZXMgYXJlIGFsbG93ZWQgdG8gYmVjb21lIHNvIGVtYmVkZGVkIChldmVyeSBlbGVtZW50YXJ5IGtpZCBoYWQgYW4gUjQgY2FyZCBpbiB0aGVpciBOaW50ZW5kbyBEUyB0ZW4geWVhcnMgYWdvKSwgaXMgaXQgYW55IHN1cnByaXNlIHRoYXQgcGVvcGxlIHdvdWxkIGFsc28gcGlyYXRlIHRoZWlyIGNvbWljcz9BdHRpdHVkZXMgYWJvdXQgcGlyYWN5IGFyZSBkZWZpbml0ZWx5IGNoYW5naW5nIGZvciB0aGUgcG9zaXRpdmUgaGVyZSwgYnV0IGl0IHN0aWxsIHNlZW1zIGxpa2UgdGhlc2UgcHVibGlzaGVycyB3aWxsIG5lZWQgYSBkaWZmZXJlbnQgYnVzaW5lc3MgbW9kZWwgaWYgdGhleSByZWFsbHkgd2FudCB0byB0aHJpdmUgaW4gdGhlIHNob3J0IHRlcm0uIApXZSBsaXZlZCBpbiBBaXJkcmllIHdlIHdvdWxkIGhhdmUgcG9rZXIgbmlnaHQgZXZlcnkgRnJpZGF5IG5pZ2h0IGFuZCB3ZSBoYWQgYSBjb3JlIGdyb3VwIG9mIGZyaWVuZHMgdGhhdCBJIGhhdmUga25vd24gc2luY2Uga2luZGVyZ2FydGVuIGNvbWUsIHNoZSBzYWlkLiAKVGVhY2ggb3VyIGNoaWxkcmVuIGFuZCBzdHVkZW50cyBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiBldGhpY2FsIGJlaGF2aW91ciAoYW5kIGVuYWN0IHBvbGljaWVzIHRoYXQgc3VwcG9ydCB0aGlzIGFuZCBsYXdzIHRoYXQgcHVuaXNoIGJhZCBiZWhhdmlvdXIpLiBJdCBtYXR0ZXJzIGFuZCB3aWxsIGhlbHAgdXMgc2hhcGUgYSB3b3JsZCAgIG9mIHdvcmsgYW5kIG90aGVyd2lzZSAgIHRoYXQgd2UgYWxsIHdhbnQgdG8gbGl2ZSBpbi4KV2hlbiB5b3UgZ2l2ZSBzb21ldGhpbmcgdG8gc29tZW9uZSBpbiBuZWVkLCBhbmQgeW91IHNlZSB0aGUgc21pbGUgb24gdGhlaXIgZmFjZSBhbmQgaG93IG11Y2ggdGhleSBjaGVyaXNoIHRoYXQgYmVjYXVzZSB0aGV5IGl0IG5lZWQgYmFkbHksIGl0J3Mgc29tZXRoaW5nIHRoYXQgeW91IG5ldmVyIGZvcmdldC4gClRoYXQgYmVpbmcgc2FpZCwgaXQgaXMgYSBkb3VibGUgZWRnZWQgc3dvcmQuIAoyOS4gCklzIFRoYXQgQ3JhenkgRW1haWwgQWJvdXQgVGlnZXIgV29vZHMgVHJ1ZQpSaXNlIHNuaXBlciBraWxscyBhdCBsZWFzdCA1OSBhdCBMYXMgVmVnYXMgY29uY2VydApTdGVwIGluc2lkZSwgYW5kIHdoYXQncyB0aGUgZmlyc3QgdGhpbmcgeW91IHNlZT8gQ2hhbmNlcyBhcmUgd2hhdGV2ZXIgeW91ciBhbnN3ZXIsIGl0IGlzIG5vdCB0aGF0IHlvdSB3ZXJlIGltbWVkaWF0ZWx5IGF3YXJkZWQgd2l0aCBmcmVlIHBva2VyIG1vbmV5IHRoYXQgd291bGQgYWxsb3cgeW91IHRvIHBsYXkgYXQgdGhlIGhvdXNlJ3Mgcmlzay4gVGhhdCBzb3J0IG9mIHRoaW5nIG9ubHkgZ29lcyBvbiBpbiB0aGUgb25saW5lIHdvcmxkLiBGb3IgdGhpcyByZWFzb24sIG1hbnkgbmV3YmllIGFuZCB2ZXRlcmFuIGdhbWJsZXJzIGFsaWtlIGFyZSBnaXZpbmcgdXAgdGhlIGF0bW9zcGhlcmUgb2YgdGhlIGJyaWNrIGFuZCBtb3J0YXIgY2FzaW5vIGZvciB0aGUgcmVhbCBlYXJuaW5nIHBvdGVudGlhbCBvZiBjeWJlcnNwYWNlLiAKVGhpcyBnaXZlcyB5b3UgYW4gaW5kaWNhdGlvbiBob3cgYXZhbGFuY2hlcyBoYXZlIGdyb3duIGxhcmdlciBhbmQgbGFyZ2VyIHdpdGggZWFjaCBiaWcgbG9hZGluZyBldmVudC4gV2UgYXJlIHNlZWluZyB0aGUgYmlnZ2VzdCBhdmFsYW5jaGVzIG9mIHRoZSBzZWFzb24sIGFuZCBpbiBzb21lIGNhc2VzIHRoZSBhdmFsYW5jaGVzIGFyZSBydW5uaW5nIGFzIGJpZyBhcyB0aGV5IGhhdmUgaW4gZGVjYWRlcy4gU29tZSB2ZXJ5IGJpZyBzbGlkZXMgZnJvbSBKb25lcyBQYXNzLCB0byBCcmVja2VucmlkZ2UsIHRvIEZyZW1vbnQgUGFzcyBpcyBqdXN0IGEgc21hbGwgc2FtcGxlIGlsbHVzdHJhdGluZyB0aGF0IHRoZSBjb25jZXJuIGlzIHdpZGVwcmVhZCBhY3Jvc3MgdGhlIEZyb250IFJhbmdlIGFuZCBWYWlsIFN1bW1pdCB6b25lcy4uIApPdmVyaGVhdGluZyBpcyB0aGUgcHJpbWFyeSBjYXVzZSBvZiB0aGUgWGJveCAzNjAgZnJlZXppbmcgcHJvYmxlbXMuIFdoZW4geW91ciBYYm94IGhlYXRzIHVwIGVub3VnaCBpdCBjYXVzZXMgdGhlIGdyYXBoaWNzIHByb2Nlc3NpbmcgdW5pdCAoR1BVKSB0byBsb29zZW4gZnJvbSB0aGUgbW90aGVyYm9hcmQsIGFuZCB0aGUgZ3JlZW4gbGlnaHRzIG9uIHlvdXIgY29uc29sZSBkaXNwbGF5IHRocmVlIG9mIHRoZW0gaW4gZmxhc2hpbmcgcmVkLiAKQXQgcHJlc2VudCBtb3N0IGNhc2lub3Mgd2l0aCBQbGF5VGVjaCwgTWljcm9nYW1pbmcsIFJURyBzb2Z0d2FyZXMgb2ZmZXIgInN0aWNreSIgY2FzaW5vIGJvbnVzZXMuLiAKSSB3b24gc2F5IHdlcmUgZ3VhcmFudGVlZCB0byB3aW4gYnV0IHdlIHdvdWxkIGhhdmUgdG8gYmUgd2Fsa2luZyBpbnRvIGEgcmFuZG9tIDIgcGFpciBzZXR1cC4KVGhlIGJlbmNoIGZ1cnRoZXIgb2JzZXJ2ZWQ6ICJXZSBoYXZlIHBlcnVzZWQgdGhlIGRlc2NyaXB0aW9uIG9mIHRoZSBnYW1lLCB3ZSBmaW5kIHRoYXQgaXQgaXMgbm90IGEgZ2FtZSBvZiBza2lsbCBidXQgb2YgcHVyZSBjaGFuY2UuIFByaW1hIGZhY2llIHdlIGZpbmQgdGhhdCBhIGNhc2UgdW5kZXIgdGhlIGdhbWJsaW5nIGFjdCBoYXMgYmVlbiBtYWRlIG91dC4iCkJyZXZpdHkgYW5kIENvbXBsZXhpdHkKIkl0J3NvdXIgZmlyc3QgdGltZSBpbiBBbGJ1cnksIHNvIHdlIHNvIGV4Y2l0ZWQgdG8gYmUgYnJpbmdpbmcgdGhpcyBicmFuZCBuZXcgc2hvdyB0byB0aGUgRW50ZXJ0YWlubWVudCBDZW50cmUgYW5kIHdlIHdhbnQgZXZlcnlvbmUgdG8gZmVlbCBwYXJ0IG9mIGl0LCB3aGV0aGVyIHRoZXkgYXJlIHVwIG9uIHN0YWdlIG9yIHNpdHRpbmcgaW4gdGhlaXIgc2VhdHMsIiBNaXN0ZXIgTWFrZXIgc2F5cywgImFuZCB3ZSB3YW50IGV2ZXJ5b25lIHRvIGJyaW5nIHNvbWUgYXJ0d29yay4gClNvLCBJIGd1ZXNzIHRoZXNlIGtpZHMgbGVhcm5lZCBhYm91dCB0aGF0LCBkZWNpZGVkIGl0IHdhcyBjb29sLCBhbmQgZW11bGF0ZWQgdGhlIGxvb2suIApUaGUgbW9tZW50IGl0IHNlZW1zIGxpa2UgeW91IGhhdmUgdG8gdXNlIG1vcmUgZm9yY2UsIGl0J3MgdGltZSB0byByZXNoYXJwZW4gdGhlbS4gCkkgZ290IHNvbWUgZnJpZW5kcyBpbnRvIFNveWxlbnQgYW5kIHRoZXkgd2VyZSB0YWxraW5nIGFib3V0IGZyZWV6aW5nIHRoZW0sIGFuZCBJIG1lbnRpb25lZCBwZW9wbGUgaGVyZSBoYWQgbWVudGlvbmVkIHRoYXQgdHVybmluZyBpdCBncml0dHkuIFNvIGEgZnJpZW5kIGRlY2lkZWQgdG8gZnJlZXplIENhY2FvIGFuZCBTdHJhd2JlcnJ5LCBhbmQgdGhlbiB0YXN0ZSB0aGVtIGZyb3plbiBhbmQgdGhlbiB0YXN0ZSB0aGVtLiBIZSB3YXMgdmVyeSBoYXBweSwgc2FpZCBpdCB3YXMgYSBncmVhdCB0ZXh0dXJlLCBsaWtlIGEgRnVkZ2VzaWNsZSwganVzdCBhIG11dGVkIGZsYXZvciwgbGlrZSBpdCB3YXMgd2F0ZXJlZCBkb3duLiBTbyBoZSBzYWlkIGhlIGNvdWxkIHNlZSBhZGRkaW5nIHN1Z2FyIG9yIFN0ZXZpYSBhbmQgdGhlbiBoYXZpbmcgaXQgYXJvdW5kIGFzIGEgc25hY2sgZm9yIGhpbSBhbmQgaGlzIGtpZHMgaW4gdGhlIGZ1dHVyZS4KSXQgdHVybnMgb3V0IHRoYXQgU2hlbGRvbidzIGZhdGhlciBzdWZmZXJlZCBhIG1pbm9yIGhlYXJ0IGF0dGFjayB3aXRoIG5vIHBlcm1hbmVudCBkYW1hZ2UsIGFuZCBoaXMgbW90aGVyIHNheXMsICJPdXIgcHJheWVycyBoYXZlIGJlZW4gYW5zd2VyZWQuIiBPbGRlciBTaGVsZG9uIHRoZW4gc2F5cywgIkZvciBhIGJyaWVmIG1vbWVudCwgSSB3YXMgZmlsbGVkIHdpdGggdGhlIGhlYWxpbmcgcG93ZXIgb2YgZmFpdGguIApBbHNvIGNlbGVicmF0aW5nIHdpdGggTkVPIHRvZGF5IHdlcmUgTGluZHNheSBQYXRyaWNrLCBNYW5hZ2luZyBEaXJlY3RvciBIZWFkLCBTdXN0YWluYWJsZSBGaW5hbmNlLCBSQkMgQ2FwaXRhbCBNYXJrZXRzOyBKZW5uaWZlciBTbywgQXNzb2NpYXRlIFBvcnRmb2xpbyBNYW5hZ2VyLCBTZW5pb3IgQXNzb2NpYXRlIEZ1bmRhbWVudGFsIENhbmFkaWFuIEVxdWl0aWVzLCBCTU8gR2xvYmFsIEFzc2V0IE1hbmFnZW1lbnQ7IEZsb3JlbmNlIE5hcmluZSwgU2VuaW9yIFZpY2UgUHJlc2lkZW50LCBIZWFkIG9mIFByb2R1Y3QsIEFHRiBJbnZlc3RtZW50czsgYW5kIFJhaiBMYWxhLCBQcmVzaWRlbnQgYW5kIENFTywgRXZvbHZlIEVURnMuIFRoZXNlIGluZGl2aWR1YWxzIHBhcnRpY2lwYXRlZCBpbiBhIHBhbmVsIGRpc2N1c3Npb24gb24gdGhlIGdlbmRlciBiYXNlZCBpbnZlc3RtZW50IHRoZXNpcyB0aGF0IHBhcnRpYWxseSBpbmZvcm1zIGZvdXIgQ2FuYWRpYW4gRVRGcywgaW5jbHVkaW5nIHRoZSBSQkMgVmlzaW9uIFdvbWVuJ3MgTGVhZGVyc2hpcCBNU0NJIENhbmFkYSBJbmRleCBFVEYgKApIZXJkIGltbXVuaXR5IGlzIGltcG9ydGFudCBmb3IgdGhlIHByb3RlY3Rpb24gb2YgdGhlIGltbXVub2NvbXByb21pc2VkIChlZyBjYW5jZXIgcGF0aWVudHMpLCBjaGlsZHJlbiB0b28geW91bmcgdG8gYmUgdmFjY2luYXRlZCwgb3IgcHJlZ25hbnQgd29tZW4uIEhlcmQgaW1tdW5pdHkgY29uZmVycyBpbmRpcmVjdCBwcm90ZWN0aW9uIGJ5IGJvdHRsZW5lY2tpbmcgYSBkaXNlYXNlIGFiaWxpdHkgdG8gc3ByZWFkIHRocm91Z2ggdGhlIHBvcHVsYWNlLiAKTWVkaWNpbmUvRGVudGlzdHJ5IHdpbGwgYmUgYW1vbmdzdCB0aGUgbGFzdCB0byBiZSBhdXRvbWF0ZWQsIGlmIGV2ZXIuIApEZWZlbmRpbmcgMyB3YXlzLCB5b3Ugd2FudCB0byBjYWxsIGhhbmRzIHRoYXQgYXJlbiBnb25uYSBiZSBkb21pbmF0ZWQuIEs4bywgQTdvLCBKVG8gYXJlIGFsbCBtdWNoIHdvcnNlIGRlZmVuZHMgdGhhbiA1NnMgb3IgNDVzLiBFYXJseSBwb3NpdGlvbiBvcGVucyBhbmQgdGhlbiBhIGZsYXQgaW4gTFAgaGF2ZSBhIGxvdCBvZiBkb21pbmF0aW5nIGJyb2Fkd2F5IGhhbmRzIHRoYXQgZWF0IHlvdXIgb3V0cyBhbmQgbWFrZSBpdCBoYXJkZXIgdG8gZGVmZW5kIHByb2ZpdGFibHkgYW5kIHlvdSBhbHNvIHN1ZmZlciBmcm9tIGJhZCByZXZlcnNlIGltcGxpZWQgb2RkcyB3aGVuIHlvdSBoaXQgYSB0b3AgcGFpci4KSmFtZXMgaXMgYW1vbmcgdGhlIGxhc3QgYWN0aXZlIHBsYXllcnMgd2hvIHdlcmUgb2xkIGVub3VnaCB0byB3aXRuZXNzIEpvcmRhbiBpbiBoaXMgcHJpbWUgd2l0aCB0aGUgQ2hpY2FnbyBCdWxscy4gTGl0dGxlIExlQnJvbiB3b3VsZCBidXkgcGFja3Mgb2YgYmFza2V0YmFsbCBjYXJkcyBob3BpbmcgZm9yIGEgSm9yZGFuLCBhbmQgaGUgd291bGQgc3R1ZHkgZXZlcnkgYXNwZWN0IG9mIEpvcmRhbidzIGdhbWUsIGRvd24gdG8gdGhlIHdheSBoZSB3b3JlIGhpcyBjYWxmIHNsZWV2ZSB0dXJuZWQgc2xpZ2h0bHkgaW5zaWRlIG91dCBzbyB0aGF0IHRoZSByZWQgbGluaW5nIHNob3dlZC4uIApNb3JzZSBFbGVjdHJvIE1hZ25ldGljIFRlbGVncmFwaCIuMS4gClRoZXkgaGF2ZSBmcmVlIEtpbGxlciBRdWVlbiBsZWFndWUgbmlnaHRzIG9uIFdlZG5lc2RheXMsIHZlcnkgZWFzeSB0byBtZWV0IHBlb3BsZSBpbiB0aGF0IHNldHRpbmcgKEtpbGxlciBRdWVlbiBpcyBhIDV2NSBnYW1lIGFuZCB5b3UgY2FuIGVhc2lseSBob3Agb24gYSB0ZWFtIG9uIGxlYWd1ZSBuaWdodHMpLi4gCkdlbmVzaXMgMTgKVHljaG9nOTkgICAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpBIGxlIGxpcmUgVE9VVEVTIGxlcyBtYWxhZGllcywgYm5pZ25lcywgY2hyb25pcXVlLCB2b2lyIGdyYXZlcywgc29udCBmYWNpbGVtZW50IGd1cmlzc2FibGVzIHBhciBsZXMgY29tcGxtZW50cyBhbGltZW50YWlyZXMgZXQgbWRlY2luZSBjb21wbG1lbnRhaXJlcyBjZSBxdWkgamV0dGUgdW4gZ3JvcyBkb3V0ZSBzdXIgbGEgdnJpdCBkZSBzZXMgY3JpdHMuSmUgc3VpcyBnYWxlbWVudCBzZXB0aXF1ZSBlbiBjZXMgcXVpIGNvbmNlcm5lICBTYW50IENvcnBzIGVzcHJpdCAgZGUgWGF2aWVyIEJhemluLCBsJ3VuZSBkZSBjZXMgZmFtZXVzZXMgYXV0cmVzIHJldnVlcyBkb250IHZvaWwgY2UgcXVlIGxlIERyLiAKTGVmdCAyMjMwLiAKSGlzIGRvY3RvciBzYWlkIGl0IHdhcyBjb21pbmcgZnJvbSBhIGhpZ2ggcGl0Y2hlZCBkZW50YWwgZHJpbGxzIGhlIHdhcyBvcGVuIHRvIGRhaWx5IGR1cmluZyBoaXMgY2FyZWVyLiAKSnVtcCB0byBjb250ZW50bXkgc3VicmVkZGl0c01PREVSQVRPUiBPRndoYXQncyB0aGlzP1RST1BIWSBDQVNFUmVkZGl0IFByZW1pdW1TaW5jZSBNYXJjaCAyMDE5CldlIGFsc28gY2xpbWJlZCBNdC4gCklmIHlvdXIgdGVldGggYXJlIHNlbnNpdGl2ZSwgZXh0cmVtZSB0ZW1wZXJhdHVyZXMgY2FuIGluY3JlYXNlIHlvdXIgcGFpbi4gCkluIGZhY3QsIG1vcmUgdGhhbiBoYWxmIG9mIENGSUIgbWVtYmVycyBpbiB0aG9zZSBmb3VyIHByb3ZpbmNlcyB0ZWxsIHVzIHRoZXkgd2lsbCBub3QgYmUgYWJsZSB0byBwYXNzIG9uIGFueSBvZiB0aGUgYWRkaXRpb25hbCBjb3N0cyBpbiB0aGUgc2hvcnQgdG8gbWVkaXVtIHRlcm0uIEl0IGlzIGEgcHJvYmxlbSB0aGUgZ292ZXJubWVudCBhY2tub3dsZWRnZWQgZm9yIGxhcmdlIGJ1c2luZXNzZXMgb25lIHRoZSBPQlBTIHdhcyBleHByZXNzbHkgZGVzaWduZWQgdG8gbWluaW1pemUgYnV0IHdoaWNoIHNtYWxsIGZpcm1zIGFyZSBleHBlY3RlZCB0byBoYW5kbGUgdW5haWRlZC4uIApJIGNvdWxkIHVuZGVyc3RhbmQgY2hhbmdpbmcgdGhlIHJvbGVzL25lZWRzIG9mIFRpdGFucyB1cCBhbmQgSSBkbyBhZ3JlZSB0aGF0IHRoZXkgYXJlIHRvbyBuZWNlc3NhcnkgZm9yIGFueSB0eXBlIG9mIGNvbmZsaWN0LiBJIGp1c3QgZmVlbCBsaWtlIHRoZXkgYXJlIGEgc2hpcCB0aGF0IGlzIGF2YWlsYWJsZSB0byBhbnkgcGxheWVyIChyYXJlIEUgUGVlbiBvciBub3QpIGFuZCBzaG91bGRuIGJlIHJlbW92ZWQgb3IgbGltaXRlZCBpbiB3aG8gb3IgaG93IG1hbnkgY2FuIGJlIHVzZWQuLiAKQXBwYXJlbnRseSBmYW50YXN5IGFuZCBzY2kgZmkgbm92ZWxpc3QgUGllcnMgQW50aG9ueSBmaXJzdCB1c2VkIHRoZSB0ZXJtIGJhY2sgaW4gMTk4NCBmb3IgYSB3aW5nZWQgdW5pY29ybiBpbiBoaXMgbm92ZWwgIkJlYXJpbmcgYW4gSG91cmdsYXNzIiA6CkJpdGNvaW4gd2VudCB1cCBmcm9tIGNoaW5lc2UgbWFuaXB1bGF0aW5nIHRoZSBwcmljZSB1cC4gOTAlIG9mIHRoZSBpbnZlc3RvcnMgYXJlIGluIGNoaW5hLiBSZWd1bGF0b3JzIGJ1c3RlZCBhIGxvdCBvZiB0aGVtIHNvIHRoZXkgY2FuIG1hbmlwdWxhdGUgdGhlIG1hcmtldCB1cCBhbnltb3JlLiBUaGUgamlnIGlzIHVwIHlvdXIgZ29pbmcgdG8gZ2V0cyB0aGVzZSBjcnl0b3MgZm9yIHBlbm5pZXMgYWdhaW4gc29vbi4gR2V0IGludG8gdGhlIGRvbGxhciB1bnRpbCB0aGlzIGNyYXp5IG1hcmtldCBpcyBvdmVyIHdpdGguIEl0cyBqdXN0IGdldHRpbmcgc3RhcnRlZC4gUGVvcGxlIHN0aWxsIG93ZSBoZWF2eSB0YXggZmluZXMgYW5kIGFyZSBmYWNpbmcgbW9uZXkgbGF1bmRlcmluZyBjaGFyZ2VzLiBBIGxvdCBvZiBzY2FtbWluZyBoYXMgZ29uZSBvbiB0aGUgbGFzdCAyIHllYXJzLiBIb25lc3RseSB5b3Ugd2lsbCBuZXZlciBzZWUgY3J5cHRvcyBhdCB0aGVzZSBwcmljZXMgYWdhaW4gaW4geW91ciBsaWZlIHRpbWUuIE1heWJlIHlvdXIga2lkcyB3aWxsIHNlZSBpdC4gVGhhdCBpcyB3aHkgcmVndWxhdGlvbiBpcyBpbXBvcnRhbnQgc28gZnJhdWR1bGVudCBwZW9wbGUgZG9uIHJ1aW4gYSBtYXJrZXQuIFRoZSB0ZWNoIGlzIGdyZWF0IGJ1dCB0aGUgY29pbnMgdGhlbXNlbHZlcyBpdHMgbGlrZSB0dWxpcCBtYW5pYSBhbGwgb3ZlciBhZ2FpbiBvciBiZWVuaWUgYmFiaWVzLiBUaGUgY3J5cHRvIGNvaW5zIGlzIGp1c3QgdG8gZnVuZCB0aGVzZSBidXNpbmVzc2VzIGl0cyBpbiB0aGUgd2hpdGUgcGFwZXIgbm90IGZvciBpbnZlc3RpbmcgcHVycG9zZXMuIEl0cyBsaWtlIHN0b2NrIG9uIGEgc3RvY2sgbWFya2V0IHdoZXJlIGl0cyByZWd1bGF0ZWQgYW5kIHlvdXIgYWN0dWFsbHkgb3duaW5nIGEgYnVzaW5lc3MuIEFsbCB5b3Ugb3duIGlzIGEgY29pbiByZWxhdGVkIHRvIHRoZSBidXNpbmVzcyB3aXRoIGNyeXB0b3MgdGhhdHMgcmVhbGx5IHNldCB1cCB0byBqdXN0IGZ1bmQgdGhlaXIgYnVzaW5lc3MgdG8gZ2V0IGdvaW5nLiBUaGUgY3J5cHRvcyBhcmUgbWFuaXB1bGF0ZWQgdXAgYnkgYmFkIHBlb3BsZSBtb3N0bHkgaW4gY2hpbmEuIEdvdmVybm1lbnRzIGFuZCByZWd1bGF0b3JzIGFsbCBvdmVyIHRoZSB3b3JsZCBhcmUgc3RvcHBpbmcgaXQuIFRoZXkgc3RhcnRlZCB0byB0cnkgdG8gZG8gaXQgaW4ga29yZWEgdG9vIGFuZCB0aGV5IHB1dCBlbmQgdG8gdGhhdCB0b28uIE15IG9waW5pb24gZ2V0IG91dCBvZiB0aGUgbWFya2V0IHdoaWxlIHlvdSBzdGlsbCBjYW4gYW5kIHRoZW4gZ2V0IGJhY2sgaW50byBpdCBhdGZ0ZXIgYml0Y29pbiByZWFjaGVzIGFyb3VuZCA1MDAgYWdhaW4gYW5kIGFsbCB0aGlzIHNjYW1taW5nIGFuZCBtb25leSBsYXVuZGVyaW5nIGlzIGFsbCBjbGVhbmVkIHVwIG91dCBvZiB0aGUgbWFya2V0LiBUaGVuIGl0cyBhIGdvb2QgdGltZSB0byBpbnZlc3QuIFRoaXMgaXMgeWVhcnMgb2Ygc2NhbW1pbmcgdGhhdCByZWd1bGF0b3JzIGFyZSBjbGVhbmluZyB1cC4KVGhleSB0ZW5kIHRvIHBsYXkgYSBsb3Qgb2YgaGFuZHMgYW5kIGdvIHRvbyBmYXIgd2l0aCB0aG9zZSBoYW5kcy4gCkFmdGVyIGhlIGhhZCBwbGFudGVkIHRoZSBib21iLCBTbWl0aCB3ZW50IHRvIGhpcyB1bml2ZXJzaXR5IGNhbXB1cyBhdCBIb2xsb3dheSBhbmQgc2VhcmNoZWQgZm9yIGFydGljbGVzIG9mIHRoZSBpbmNpZGVudCB3aGVuIGhlIGdvdCBob21lIGxhdGVyLgpZb3Ugd2VyZSBjb25mdXNlZCBhcyB0byB3aHkgaGUgZGlkbiBzaG92ZSAxMGJiIHByZSB3aXRoIEtLLiBJIHNhaWQgdGhhdCBpZiB5b3UgYXJlIHBsYXlpbmcgYWdhaW5zdCBiYWQgcGxheWVycywgd2hvIGNhbiBub3QgZXhwbG9pdCB5b3UsIHlvdSBkbyBub3QgbmVlZCB0byBiYWxhbmNlIHlvdSBjYW4gbWFrZSBtb3JlIG1vbmV5IGJlIGV4cGxvaXRpbmcgdGhlbS4gU28geW91IGNhbiBvcGVuIHlvdXIgbW9uc3RlcnMgdG8gZ2V0IG1vcmUgYWN0aW9uIGFuZCBvbmx5IHNob3ZlIHlvdXIgbWlkIHN0cmVuZ3RoIGhhbmRzLgpIb3cgY2FuIEkgZXhwZXJpZW5jZSByZXdpbGRpbmcgd2l0aG91dCBnaXZpbmcgdXAgYWxsIG15IG1vZGVybiBjb21mb3J0cwpJIG9uY2UgdG9vayBBbXRyYWsgZnJvbSBXSSB0byBUWC4gCkVsaWFzaGJlcmc6IElmIHlvdSBsb29rIGF0IHRoZSBub21pbmVlcywgdGhlIG1vdmllIEJvaGVtaWFuIFJoYXBzb2R5IGhhcyBtYWRlIHF1aXRlIGEgYml0IG9mIG1vbmV5LCBJIGJlbGlldmUgYXJvdW5kICQyMDAgbWlsbGlvbi4gQSBTdGFyIElzIEJvcm4gYWxzbyBtYWRlIHF1aXRlIGEgYml0IG9mIG1vbmV5LCBhbHNvIGFyb3VuZCAkMjAwIG1pbGxpb24uIApMZSByZXNwZWN0IGRlIHZvdHJlIHZpZSBwcml2ZSBlc3QgaW1wb3J0YW50IHBvdXIgbm91cy4gRXN0IGNlIHF1ZSBjZWxhIHBvdXJyYWl0IHRyZSBsZSBjYXM/ClN1cmUsIGEgcG9saXRpY2lhbiBpcyBhIGxvdCBtb3JlIGxpa2VseSB0byB3cml0ZSBiaWxscyBsaWtlIHRoYXQgYWZ0ZXIgcmVjZWl2aW5nIGEgZG9uYXRpb24gZnJvbSBhIGxvYmJ5aXN0LCBidXQgaXQgaXNuIGEgb25lIHRvIG9uZSBjYXVzZSBhbmQgZWZmZWN0IHJlbGF0aW9uc2hpcC4uIApJJ3ZlIG5ldmVyIG5vdCBjYXJlZCB3aGF0IHBlb3BsZSBpbiBteSBleHRlcmlvciByZWFsaXR5IHRoaW5rIG9mIG1lLiBPZnRlbiB0byBteSBkZXRyaW1lbnQuIApXb3JkcyBsaWtlOiBjcmFjaywgc2VyaWFsLCBrZXlnZW4sIGZyZWUgLiBUIFNwbGluZXMgMy40IEZvci4gOCBBdWcgMjAxNiAgIDI2IHNlYyAgIFVwbG9hZGVkIGJ5IFJoaW5vY2Vyb3MgNSBjcmFja1JoaW5vY2Vyb3MgNSBjcmFjay4gCktleSBwb2ludCBpbiBhcnRpY2xlIGJlbG93OiAgY29uc2lkZXIgY2hpcm9wcmFjdGljIGFkanVzdG1lbnRzIGV4dHJlbWVseSBpbXBvcnRhbnQuIE9uZSBvZiB0aGUgdGhpbmdzIGFuIGFkanVzdG1lbnQgZG9lcyAgIGFuZCBpdCdzIHRoZSBvbmx5IGZvcm0gb2YgdHJlYXRtZW50IHRoYXQgY2FuIGRvIHRoaXMgICBpcyB0byBhY3RpdmF0ZSB0aGUgZ2FtbWEgYW5kIGFscGhhIG1vdG9yIG5ldXJvbiBsb29wLiBBIGNoaXJvcHJhY3RpYyBtYW5pcHVsYXRpb24gd2lsbCBhY3RpdmF0ZSB0aGUgYWxwaGEgZ2FtbWEgbW90b3IgbG9vcCwgd2hpY2ggd2lsbCBtYWtlIHRoZSBzcGluZGxlIG1vcmUgc2Vuc2l0aXZlIHRvIHN0cmV0Y2hpbmcuIApJIGNhbid0IHJ1bGUgb3V0IHRoYXQgdGhpcyBuYXJyYXRpdmUgYWJvdXQgVFAgcmFpc2luZyB0aGUgYWxhcm0gaXMgYSByZWhlYXJzZWQgc3RvcnkgdGhhdCB0aGUgcHJvc2VjdXRpb24gY29hY2hlZCBldmVyeW9uZSBvbiAoYW5kIHRoYXQgVFAgc2xpcHBlZCB1cCBvbiB0aGUgc3RhbmQgd2hlbiBoZSByZXZlYWxlZCBLSCBoYWQgcG9zc2libHkgYWxyZWFkeSBjYWxsZWQgVEgncyBmcmllbmRzKS4gSXQncyBub3QganVzdCBhbGwgdGhlIHRlc3RpbW9ueSB0aGF0IGdpdmVzIG1lIHRoaXMgaW1wcmVzc2lvbiwgYnV0IGFsc28gdGhlIGZhY3QgdGhhdCB0aGUgbmFycmF0aXZlIGF0IHRyaWFsIGlzIGEgYml0IGRpZmZlcmVudCB0byB0aGUgcGljdHVyZSBwYWludGVkIGJ5IHRoZSBuZXdzIG1lZGlhIHN0b3JpZXMgb24gdGhpcyB3aGVuIFRIIHdhcyBzdGlsbCBtaXNzaW5nLiAKMS4gT25lIG9mIHRoZSBiZW5lZml0cyBvZiBwb2tlciBvdmVyIHRoZSBXZWIgaXMgdGhlIGNvbnZlbmllbmNlIGl0IGNhbiBnaXZlIGl0cyBwbGF5ZXJzLiBZb3Ugc2VlLCBhcyBsb25nIGFzIHlvdSBoYXZlIGEgY29tcHV0ZXIgYW5kIGEgZ29vZCBJbnRlcm5ldCBjb25uZWN0aW9uLCB5b3UgY2FuIHBsYXkgd2hlcmV2ZXIgYW5kIHdoZW5ldmVyIHlvdSBsaWtlLiAKVGhlIHVsdCBpcyB0ZWxldmlzZWQsIHNvIGlmIHlvdSdyZSBhbiBIb3VyZ2xhc3MgdHJ5aW5nIHRvIGJlIGEgaHVtYW4gYm9tYiBhbmQgdGhlbiB5b3UgZG9uJ3QgYWJzb3JiIGFueSBkYW1hZ2U/IFlvdSdyZSBub3cganVzdCBhIHNpdHRpbmcgZHVjayBmb3IgdGhlIGVuZW15IHRlYW0gd2hlbiBpdCB3ZWFycyBvZmYuIApEZXIgU2lsYmVycmNrZW4gYWxzIEFuZmhyZXIgZGVyIFNpcHBlIGlzdCBMZWl0ZXIgdW5kIEJlc2NodHplci4gVW5kIGRpZSBncnRlIEJlZHJvaHVuZyBkaWVzZXMgRmFtaWxpZW5sZWJlbnMgaXN0IGRlciBNZW5zY2guQW0gRW5kZSBlcnJlaWNodCBUYXJ6YW4gbmljaHQgbnVyIEphbmVzIEhlcnouIEVyIGZmbmV0IGlociBhdWNoIGRpZSBBdWdlbiBmciB3ZXNlbnRsaWNoZSBEaW5nZS4gCkNlcnRlcywgbGUgcHJvamV0IGVzdCBlbmNvcmUgZW4gZGlzY3Vzc2lvbiwgbWFpcyBpbCBtYW5xdWUgY3J1ZWxsZW1lbnQgZCdhbWJpdGlvbiBwYXIgcmFwcG9ydCBhdXggYXR0ZW50ZXMgZGVzIGhhYml0YW50cyBldCBjb21tZXJhbnRzLiBTZXVsIHBvaW50IHBvc2l0aWYsIGxhIHBpdG9uaXNhdGlvbiBzdXIgcXVlbHF1ZXMgbXRyZXMgZGUgbGEgcGV0aXRlIHBvcnRpb24gZGUgbGEgcnVlIExvbiBzaXNlIGVudHJlIGxlcyBydWVzIENhdiBldCBNeXJoYS4uIApJIHJhdGhlciBoYXZlIG9uZSBpbnN0ZWFkIG9mIHRoZSA1IG1pbGxpb24gaW5nYW1lIGhpbnQgc2NyZWVucyB0aGF0IHNvbWV0aW1lcyBldmVuIGV4cGxhaW4gdGhlIG1vc3Qgb2J2aW91cyBzdHVmZi4gSSBsb3ZlZCByZWFkaW5nIGFuZCBsb29raW5nIHRocm91Z2ggdGhlIG1hbnVhbHMgYW5kIGdldHRpbmcgaHlwZWQgdXAgZXZlbiBtb3JlIGZvciB0aGUgZ2FtZSBJIHdhcyBhYm91dCB0byBwbGF5LiBJIGd1ZXNzIEkgYSBiaXQgb2xkIGZhc2hpb25lZCBpbiB0aGF0IHJlZ2FyZC4gClRoZSBlbmQsIHNoZSBmbGFrZWQgb3V0IG9uIG1lIGEgZmV3IHRpbWVzIHNvIGkgbW92ZWQgb24gYW5kIHRoZW4gc2hlIHRyaWVkIHRvIGdldCBiYWNrIHdpdGggbWUgYnV0IGkgdG9sZCBoZXIgIml0IHByb2JhYmx5IHdhc24gZm9yIHRoZSBiZXN0LCBidXQgZ29vZCBsdWNrIHdpdGggZXZlcnl0aGluZyIuIEkgZ290IG1vcmUgbWVzc2FnZXMgYnV0IGkgaGFkIHRvIGJsb2NrIGhlci4gRnJvbSB0aW1lIHRvIHRpbWUgaSBjaGVja2luIHRvIHNlZSBpZiBzaGUgaXMgc3RpbGwgaW4gdGhlIG9ubGluZSBkYXRpbmcgd29ybGQsIHNoZSB2ZXJ5IG11Y2ggaXMgKHdoaWNoIG1ha2VzIG1lIGZlZWwgYSBsaXR0bGUgYmFkIGZvciBoZXIsIGJ1dCBpbSB2ZXJ5IHZlcnkgZ2xhZCBpIGRpZG50IGVuZCB1cCB3aXRoIGhlciwgaG9wZSBzaGUgZ2V0cyBhIGdvb2QgZ3V5KS4uIApZZXMsIEkgYWdyZWUgdGhhdCBoZSBkZWNpZGVkIHRvIGp1c3QgZG8gaXQgYW55d2F5IHdoZW4geW91IHNhaWQgbm8uIEkgZG9uJ3Qga25vdyBpZiBoZSdzIGFkZGljdGVkLCBidXQgaGUgaXMgY2VydGFpbmx5IHVud2lsbGluZyB0byBzdG9wIHBsYXlpbmcgcG9rZXIgYW5kIGxpdmluZyB0aGlzIGxpZmVzdHlsZS4gV2l0aCB0aGF0IGJlaW5nIHNhaWQsIGl0IHdvdWxkIGFwcGVhciB0aGF0IHlvdSBjb21wbGV0ZWx5IHJ1Z3N3ZXB0IGhpcyBjaGVhdGluZyBhbmQgbm93IHRob3NlIGNoaWNrZW5zIGFyZSBjb21pbmcgaG9tZSB0byByb29zdCwgc28gdG8gc3BlYWsuIEhvdyBkaWQgaGUgZWFybiB5b3VyIHRydXN0IGJhY2sgYWZ0ZXIgaGUgY2hlYXRlZD8gT3IgZGlkIHlvdSBqdXN0IHRlbGwgeW91cnNlbGYgaGUgZGlkbid0IGRvIGFueXRoaW5nIGFuZCB0aGF0IHlvdSBoYWQgdG8gImdldCBvdmVyIGl0Ij8KV2FzIGdvb2QsIG11Y2ggYmV0dGVyLCBoZSBzYWlkLiB3YXMgYmV0dGVyLiBJIHRoaW5rIHRoZSBtZWNoYW5pY3Mgd2VyZSB3YXkgYmV0dGVyLgpJIGd1ZXNzIHRoYXQgaXMgYSB2ZXJ5IGZpbmUgbGluZSBpbiBteSBtaW5kLiBJZiB5b3UgYmFkIGF0IGl0LCBpdCBpcyBwcm9iYWJseSBiZWNhdXNlIHlvdSBhY3R1YWxseSBhcmUgaW4gb3ZlciB5b3VyIGhlYWQuIApLSUlQIGlzIHByb2JhYmx5IHRoZSBsb25nZXN0IGluIHRoaXMgdGltZSBmcmFtZS4gSSBzaWduZWQgdXAgZm9yIGEgcGxhY2VtZW50IHRlc3QgaW4gQXVndXN0LCB0b29rIHRoZSB0ZXN0IGluIE5vdmVtYmVyLCBzdGFydGVkIGxldmVsIDQgaW4gRmVicnVhcnkgYW5kIGZpbmlzaGVkIGxldmVsIDUgYnkgSnVseS4gVGhpcyB3YXMgYW4gaWRlYWwgc2l0dWF0aW9uIGJlY2F1c2UgSSB3YXMgYWJsZSB0byBzaWduIHVwIGZvciBjbGFzc2VzIGluIG15IHByZWZlcnJlZCB0aW1lIGFuZCBsb2NhdGlvbiBiZWZvcmUgdGhleSBmaWxsZWQgdXAuIEhvcGVmdWxseSB5b3UganVzdCBhcyBsdWNreS4gSSBoYWQgc29tZSBmcmllbmRzIHdobyBjb3VsZG4gZ2V0IGludG8gY29udmVuaWVudCBjbGFzcyB0aW1lcyBhbmQgc28gdGhlaXIgZXhwZWN0ZWQgS0lJUCB0aW1lIGxpbmUgZ290IGV4dGVuZGVkIGludG8gYW5vdGhlciB5ZWFyLgpCdXQgdGhlIFJ1c3NpYW5zIGRvIGhhdmUgYSBtYWpvciByb2xlIGluIGNhdXNpbmcgZGl2aXNpb24gYW1vbmcgdXMsIGl0IHdhcyBuZXZlciB0aGlzIGJhZCBiZWZvcmUgVHJ1bXAgYW5kIGFsbCB0aGVzZSBhbGxlZ2F0aW9ucy4gCkl0IGRvZXNuIHdvcmssIGJ1dCB0aGF0IHdoYXQgdGhleSBkaWQuVGhlIHJlc3VsdCB3YXMgdGhhdCB0aGV5IGFsbCBjb2xsYXBzZWQuSWYgdGhpcyB3ZXJlIG1hdGggaG9tZXdvcmssIEkgYmUgYXNraW5nIHlvdSB0byBzaG93IHlvdXIgd29yay4gV2hhdCBhYm91dCBhbGwgdGhlIHNvY2lhbGlzdCBjb21wYW5pZXMgdGhhdCBIQVZFTiBjb2xsYXBzZWQ/VGhlIHNvdXJjZXMgYXJlIGFzIHZhcmllZCBhcyBwb3NzaWJsZSwgaWYgeW91IHdhbnQgdG8gZGlzcmVnYXJkIGEgcGxldGhvcmEgb2Ygc291cmNlcyBhbGwgc2F5aW5nIHRoZSBzYW1lIHRoZW4gaXQganVzdCBkZW5pYWwuSSBjYW4gcHJvdmlkZSBqdXN0IGFzIG1hbnkgc291cmNlcyBmcm9tIHdlYnNpdGVzIHlvdSBtaWdodCBkZWVtIHF1ZXN0aW9uYWJsZSBhcyB3ZWxsIHRoYXQgc2F5IHRoZSBleGFjdCBvcHBvc2l0ZS4gCkl0IHdhc24gdW50aWwgdGhlIDE5MzAgd2l0aCBIZW5yeSBKLiAKRXVyb3BlYW4gc3R5bGUgZGVhbGluZyBpbnZvbHZlcyB0b3VjaGluZyBqdXN0IHRoZSB0b3Agb2YgdGhlIGNhcmQgYW5kIHNsaWRpbmcgdGhlIGNhcmQgdG8gdGhlIGZlbHQsIHRoZW4gcHVzaGluZyB0aGUgY2FyZCwgb2Z0ZW4gd2l0aCBhIHNwaW4sIHRvd2FyZHMgdGhlIHBsYXllci4KSGF2aW5nIGEgZ29vZCBmZWVsIGZvciB5b3VyIHRhYmxlJ3MgbW9tZW50dW0gb3IgZHluYW1pY3MgY2FuIGhlbHAgeW91IGNvbWJhdCBhbiBlbmRsZXNzIHJ1biBvZiBsb3VzeSBjYXJkcy4gVGFraW5nIGRvd24gaW5jaWRlbnRhbCwgbm9uIGNvbnRlc3RlZCBwb3RzIGlzIHRoZSBrZXkgdG8gc3Vydml2YWwgYW5kIHRvdXJuYW1lbnQgYWR2YW5jZXMuIApUaGVuLCBndWVzc2luZyB3aGF0IGhlIHdhcyBzdHJ1Z2dsaW5nIHdpdGgsIHdlIGFzc3VyZWQgaGltIHRoYXQgaXQgd2FzIGEgY29ycmVjdCBwcm9udW5jaWF0aW9uLiAKRm91ciB0ZWFtcyB0byBjYXRjaCBLYWxnaVBvbGljZSBoYXZlIGZvcm1lZCA0IHRlYW1zIHRvIG5hYiBEaW5lc2ggS2FsZ2kgYW5kIE1haGVuZHJhIE11a2hpLiAKWW91IHNhdmVkIHlvdXIgbW9uZXksIGlzbid0IGl0PyBBbmQgb25jZSB5b3UgaGF2ZSBnb3QgdG8gYnV5IGEgZmV3IG1vcmUgaW4gdGhpcyBsb25nIHRpbWUgcGVyaW9kLCB5b3UgY2FuIGJ1aWxkIHlvdXIgb3duIGNvbGxlY3Rpb24gYW5kIGJyYW5kLiBDcmVhdGluZyB5b3VyIG93biBicmFuZCBpcyB2ZXJ5IGltcG9ydGFudCBmb3IgYSBsZWFkaW5nIHBva2VyIHBsYXllciB3aG8gd2FudHMgdG8gZW5zdXJlIGhpcyBzdHJvbmcgcHJlc2VuY2UgaW4gdGhlIHBva2VyIHdvcmxkLi4gCkxhbWJhc3RlZCBhdHRlbmRlZXMgd2hvIGdvdCB0byBEYXZvcyBieSBwcml2YXRlIGpldCwgc2F5aW5nIHRoaW5rIGl0IGEgYml0IG9mIGh5cG9jcmlzeS4gCkhlIG5vdCB3b3JraW5nLiAKIDQzIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ29XZSB1bmZvcnR1bmF0ZWx5IGxpdmUgaW4gdGhpcyBpbnRlcmVzdGluZyB0aW1lIHdoZXJlIHBlb3BsZSB2YWx1ZSB0aG9zZSB3aG8gIndlcmUgcmlnaHQgZnJvbSB0aGUgc3RhcnQgYW5kIG5ldmVyIGNoYW5nZWQgdGhlaXIgcG9zaXRpb24gdGhyb3VnaG91dCBoaXN0b3J5LiIgUGVvcGxlIGdldCBwcm9zZWN1dGVkIHZlcnkgcHVibGljbHkgZm9yIHRoaW5ncyB0aGF0IGhhcHBlbmVkIGRlY2FkZXMgYWdvLiAKQSB3b21hbiBkZW1hbmRpbmcgZXF1YWwgcGF5IGZvciBlcXVhbCB3b3JrIGlzIG1ha2luZyBhIHBvaW50IHlvdSBoYXZlIHRvIGFkZHJlc3MuIApJIGtub3cgdGhpcyBoYXMgYmVlbiBhIHJhbWJsaW5nIHBvc3QsIGJ1dCBJIHJlYWxseSBkb24ndCBoYXZlIGEgZ29vZCBmZWVsaW5nIG9uIHdoZXJlIHRvIHN0YXJ0LgpUaGUgVW5kZXIgQXJtb3VyIE9mZiBGaWVsZCBHbG92ZXMgZmVhdHVyZSBhIHBybyBncmFkZSBpbnN1bGF0ZWQgc3ludGhldGljIHBhbG0gYW5kIGdyaXBweSBsb2dvIHRyZWF0bWVudCB0aGF0IGRlbGl2ZXJzIGRleHRlcml0eSBhbmQgZXh0cmEgZ3JpcCBmb3IgdGhlIGNvbGRlc3QgZ2FtZSBkYXlzLgpBbmQgdG8gYmUgc3BlY2lmaWMgYWdhaW4sIHRoZSBwcm9ibGVtIGhlcmUgaXMgbW9uZXkuIEkgc2VlIGhvdyBtdWNoIG1vbmV5IEkgcGF5IGZvciBzdGF0ZSBhbmQgZmVkZXJhbCB0YXhlcyBldmVyeSB5ZWFyIGFuZCB3aGlsZSBpdCBhbiBhYnN1cmQgYW1vdW50IG9mIG1vbmV5LCBJIHVuZGVyc3RhbmQgdGhhdCBpdCBnb2luZyB0b3dhcmQgcGF5aW5nIGZvciB0aGUgc2Nob29sIHRoYXQgbXkga2lkcyBhdHRlbmQgYW5kIHRoZSBwb2xpY2UgYW5kIGZpcmUgZGVwYXJ0bWVudCBhbmQgb3RoZXIgY2l2aWwgc2VydmljZXMuIEkgcGF5IG15IHRheGVzIGJlY2F1c2UgbXkgZmFtaWx5IGFuZCBvdGhlciBBbWVyaWNhbnMgcmVhcCB0aGUgYmVuZWZpdHMuLiAKV2UgaGF2ZSBzdWNjZXNzZnVsLCB3b3JrYWJsZSBwcmV2ZW50aW9uIHN0cmF0ZWdpZXMgd2l0aCB5b3V0aCBhcyBlYXJseSBhcyBlbGVtZW50YXJ5IHNjaG9vbC4gV2UgaGF2ZSB0b29scyB0byByZWFjaCBwYXJlbnRzIGFuZCBwcm92aWRlIHRoZW0gd2l0aCB0aGUgc2tpbGxzIHRvIHByb3RlY3QgdGhlaXIga2lkcyBhbWlkc3QgdGhlaXIgaHVnZSBhY2Nlc3MgdG8gZHJ1Z3MuIApUaGUgaW50ZXJuZXQgbWFrZXMgaXQgcG9zc2libGUgZm9yIFR1cm5pdGluIHRvIGNyYWNrIGRvd24gb24gbW9zdCBmb3JtcyBvZiBwbGFnaWFyaXNtLCBtb3N0IG9mIGFsbCB0aGUga2luZHMgb2YgcGxhZ2lhcmlzbSB0aGF0IGludm9sdmUgY29weWluZyBhbmQgcGFzdGluZy4gCk91ciBqdXN0aWNlIHN5c3RlbSBzaG91bGQgYmUgc2V0IHVwIHRvIHRyeSBhbmQgcmVkdWNlIHRoZSBhbW91bnQgb2YgY3JpbWVzIGNvbW1pdHRlZCwgYW5kIGluIHRoaXMgY2FzZSwgZGlzY291cmFnaW5nIHBlb3BsZSBmcm9tIGRvaW5nIHNoaXQgbGlrZSB0aGlzIGJ5IGV4ZWN1dGluZyB0aGVtIChUaGUgbWV0aG9kIGNhbiB2YXJ5LCBJIGRvbiBjYXJlIGFzIGxvbmcgYXMgaXQgc29tZXRoaW5nIHB1YmxpYyB0byBzZW5kIGEgbWVzc2FnZSB0byB0aGUgb3RoZXJzLikgd291bGQgZ28gYSBsb25nIHdheSB0b3dhcmRzIHRlbGxpbmcgdGhlc2UgcGVvcGxlIHRoYXQgd2UgYXJlIG5vdCBnb2luZyB0byB0b2xlcmF0ZSB0aGVpciBzaGl0LiBJdCBjbGVhciBmaW5lcywgc2xhcHMgb24gdGhlIHdyaXN0LCBhbmQgYWxsIG9mIHRoYXQgYXJlbiBnb2luZyB0byBpbmNlbnRpdml6ZSB0aGVtIHRvIG5vdCBkbyB0aGlzIHN0dWZmLCBzbyBjbGVhcmx5IHNvbWV0aGluZyBtb3JlIHNldmVyZSBpcyBuZWVkZWQuLiAKSSBMT1ZFRCB0aGUgbWF0Y2ggbGFzdCBuaWdodC4gSWYgeW91IGRpZG4ndCwgb2suIAoiSWYgeW91IHRoaW5rIGFib3V0IHRoZSBjYXNpbm8sIGluaGVyZW50bHksIHRoZXkncmUgb2ZmZXJpbmcgYSByaWdnZWQgZ2FtZSB0aGF0IHRoZXkga25vdyB0aGV5J3JlIGdvaW5nIHRvIHdpbiBhdCBhbmQgdGhleSBjcmVhdGUgdGhlIGlsbHVzaW9uIHRoYXQgeW91IGNhbiB3aW4gYXQgaXQsIiBzYWlkIE1hLiAiVGhleSB0cnkgdG8gc3Vja2VyIHBlb3BsZSBpbnRvIHBsYXlpbmcuIE15IGRpc2RhaW4gZm9yIHRoZSBjYXNpbm9zIGhhcyBwcm9iYWJseSBkaW1pbmlzaGVkIG9yIHdhdmVyZWQgb3ZlciB0aW1lLCBidXQgSSBkbyBiZWxpZXZlIG1vc3QgcGVvcGxlIHdobyBhcmUgcHJvZmVzc2lvbmFsIGdhbWJsZXJzIHRoaW5rIHRoYXQgYWxsIGlzIGZhaXIgaW4gbG92ZSBhbmQgd2FyLiIKVEZDIHN0cmVuZ3RoIGFuZCBjb25kaXRpb25pbmcgY29hY2ggd2F0Y2hlcyBzdWNjZXNzIG9mIExlaWNlc3RlciBDaXR5IGZyb20gYWZhcgpKZSBtZSBzdWlzIHJnYWxlIGRlIHBsYXRzIG1lcnZlaWxsZXVzZW1lbnQgcGFyZnVtcyAodW5lICJsb3R0ZSB0cmFuc2x1Y2lkZSwgaHVpbGUgZCdhZ3J1bWVzLCBmbGV1ciBkdSBzb2xlaWwgZXQgcG91c3NlcyBkZSBwcmludGVtcHMiLCB1biAiYmxhbmMgZGUgYmFyYnVlLCBqdXMgZCdoZXJiZXMgZGUgbCdlc3RyYW4sIGh1aWxlIGQnb2xpdmUgZGUgRnVsdmlvIGV0IHdha2FtIG1hbG91aW4iKSBjYXIgY2UgZ3JhbmQgY2hlZiBlc3QgdnJhaW1lbnQgbGUgcm9pIGRlcyBwaWNlcy4uIApKdXN0IGhvdyBzaGFsbG93IEkgYW0uLiAKVG8gbWluaW1pemUgdGhlIGNoYW5jZXMgb2YgZ2V0dGluZyByZWplY3RlZCwgdGhlcmUgaXMgbmVlZCB0byBjaGVjayBmb3IgdGVsbHRhbGUgc2lnbnMgYW5kIGZpbmQgb3V0IHdoZXRoZXIgdGhlIGF0dHJhY3Rpb24gaXMgbXV0dWFsLiBJIGxpa2UgaGVyIGEgbG90IGFuZCB0aGluayBzaGUgbGlrZXMgbWUgYmFjayBidXQgSSBnZXQgbWl4ZWQgc2lnbmFscyBzb21ldGltZXMuIEJ1dCB0aGVyZSBhcmUgb3RoZXIgdmFyaWF0aW9ucyBvZiBwbGF5aW5nIHdpdGggaGFpciBhcyB3ZWxsLiAKVW5saWtlIFNoYXVrYXQgQXppeiB3aG8gd2lsbCBwcm9iYWJseSBsYW5kIHVwIGluIE5ldyBZb3JrIHRvIHNldCB1cCBhIHByaXZhdGUgZXF1aXR5IGZ1bmQgb3Igd29yayBmb3IgdGhlIENhcmx5bGUgR3JvdXAgaWYgdGhpcyBkb2VzbiBnbyB3ZWxsLCBHZW5lcmFsIE11c2hhcnJhZiBoYXMgbm8gcmVhbCBtYXJrZXRhYmxlIHNraWxscyBpbiB0aGUgcmVhbCB3b3JsZC4gVGhlIHNwZWN0cmUgb2YgcmV0aXJlbWVudCBjb3VsZG4gYmUgdGVycmlibHkgZXhjaXRpbmcgZm9yIGEgbWFuIHdobyBoYXMgcnVsZWQgYSBjb3VudHJ5IG9mIDE2MCBtaWxsaW9uIGFzIGhpcyBwZXJzb25hbCBlc3RhdGUgZm9yIHRoZSBsYXN0IG5pbmUgeWVhcnMuLiAKU2FuIFNoYTogIlRocmVlIEtpbGxpbmcgRm9yY2VzIiBGb3IgZXZlcnkgeWVhciwgdGhlcmUgaXMgYSBkaXJlY3Rpb24gb2YgYmFkIGx1Y2sgKFNhbiBTaGEpICBpbmNsdWRpbmcgZGlzYXN0ZXJzLCBhY2NpZGVudHMsIGFuZCBmaW5hbmNpYWwgbG9zcy4gVGhpcyB5ZWFyIHRoZSBraWxsaW5nIGZvcmNlcyBhcmUgaW4gdGhlIE5vcnRoLiBUaGF0IG1lYW5zIGl0IGlzIGJlc3Qgbm90IHRvIHRyYXZlbCBub3J0aCwgb3IgZG8gaG9tZSByZW5vdmF0aW9uIGluIHRoZSBub3J0aCBzaWRlIG9mIHlvdXIgaG9tZSwgb3IgZGlzdHVyYiB0aGUgZ3JvdW5kIGJ5IGRpZ2dpbmcgaG9sZXMgaW4gdGhlIG5vcnRoIHNpZGUgb2YgeW91ciBwcm9wZXJ0eS4gCk51dHJpdGlvbmFsIGxhYmVsaW5nIGhpdHMgQnVkIExpZ2h0J3MgRGlsbHkKSW1hZ2luZSB0aGUgaG9ycm9yLi4gCkxhIHRyYWRpdGlvbiBqdWl2ZSBzdWdncmUgcXVlIGxhIHNhbnQgZmFpdCBwYXJ0aWUgZCd1biBvcmRyZSBuYXR1cmVsIGV0IGRpdmluIGRvbnQgbCdleHByZXNzaW9uIGVzdCBjZXR0ZSBiZWF1dC4gTCdob21tZSwgY3IgIGwnaW1hZ2UgZGUgRGlldSwgZW4gZXN0IHJlc3BvbnNhYmxlLiBJbCBhIGxlIGRldm9pciBkZSBwcnNlcnZlciBjZXR0ZSBpbWFnZSBkZSBtYW5pcmUgYWN0aXZlLiBMZSBtZGVjaW4gbmUgc2VyYWl0IHF1J3VuICJhdXhpbGlhaXJlIiBxdWkgc2UgY2hhcmdlIGQndW5lIG9ldXZyZSAgbGFxdWVsbGUgaWwgZmF1dCByZW5kcmUgc29uIHF1aWxpYnJlIG5hdHVyZWwgZXQgcGFyZmFpdCwgc2EgbWFnbmlmaWNlbmNlLCBzb24gUGVoUiwgc2EgYmVhdXQgIQpUT1JPTlRPUmFwdG9ycyBnZW5lcmFsIG1hbmFnZXIgQnJ5YW4gQ29sYW5nZWxvIG1hZGUgYW4gaW1wcmVzc2l2ZSBwb2tlciBtb3ZlIGluIGhpcyBwdXJzdWl0IG9mIFN0ZXZlIE5hc2ggb24gVHVlc2RheS4KSGUgd291bGQgc2F5IHRoaW5ncyBsaWtlIGhlIGxlZnQgbG9uZWx5LCBvciBoZSBmZWx0IHN1aWNpZGFsLCBvciBoZSBmZWx0IGxpa2Ugc2hlIGRpZG4ndCBsb3ZlIGhpbSB3aGVuIHNoZSB0cmllZCB0byBoYW5nIG91dCB3aXRoIG1lLiBIZSB3b3VsZCBjYWxsIGFuZCB0ZXh0IGluY2Vzc2FudGx5LCBndWlsdCB0cmlwIHRmIG91dCBvZiBoZXIgZm9yIGVuam95aW5nIGhlcnNlbGYsIGFuZCB0ZWxsIGhlciB0aGF0IHNoZSB3YXMgdW53YW50ZWQgYnkgaGVyIGZyaWVuZHMgYW5kIGZhbWlseS4gVGhhdCBzaGUgd2FzIHVubG92ZWFibGUgYW5kIG5vIG9uZSB3b3VsZCBldmVyIGxvdmUgaGVyIGJlc2lkZXMgaGltLiAKTWF5YmUgeW91J3ZlIHdhdGNoZWQgYSBmZXcgcG9rZXIgc2hvd3Mgb24gdGVsZXZpc2lvbiBhbmQgdGhlIG5hbWUgcmluZ3MgYSBiZWxsLCBzbyB5b3UgZGVjaWRlIHRvIGNsaWNrIG92ZXIgdG8gdGhlIGNvbXBsZXRlIEZ1bGwgVGlsdCByZXZpZXcuIApJIHdhcyBtYWtpbmcgdG8gdHJ5IG91dCBDZXJhVmUgYmVjYXVzZSB0aGUgQ2V0YXBoaWwgSSB3YXMgdXNpbmcgd2FzIGRyeWluZyBteSBmYWNlLiAKTWVtYmVycyBvZiBTaW1wbHkgU2ljayBNQyBhbmQgSnVzdGluIFJvYmVydHMsIGEgbWFuYWdlciBvZiBXZXN0c2lkZSBTY29vdGVyIFNhbGVzIEluYy4sIGFyZSBob2xkaW5nIGEgcG9rZXIgcnVuIGFsb25nIHdpdGggYSBiaWtlIGFuZCBjYXIgc2hvdyB0byByYWlzZSBtb25leSBmb3IgRGVpb24gRG91Z2xhcywgYSA1IHllYXIgb2xkIGJveSB3aG8gd2FzIGRpYWdub3NlZCBpbiBBdWd1c3QgMjAxNiB3aXRoIGEgcmFyZSB0eXBlIG9mIGJyYWluIHR1bW9yLiAoUGhvdG8gY3JlZGl0OiBXTE9TIHN0YWZmKQpJIG1heSBub3QgYmUgYSBwcm8gVGFwZXdvcm0gYnV0IGltIGFsd2F5cyBsb29raW5nIGZvciBiZXR0ZXIgc21hcnRlciB3YXlzIHRvIHRyYWluIGFuZCBnZXQgZml0dGVyLiBUaGUgZXZpZGVuY2UgdGhhdCBJIGFtIGF3YXJlIG9mIGluIHJlZ2FyZHMgdG8gRU1TIGlzIHRoYXQgc29tZSBtYXkgcmVwb3J0IGJldHRlciByZWNvdmVyeSBidXQgdGhlIGFjdHVhbCBldmlkZW5jZSBpcyBsYWNraW5nLiAKQWxsIGNvbW1lbnRzIHdpbGwgYmUgcmV2aWV3ZWQgYnkgb25lIG9yIG1vcmUgbW9kZXJhdG9ycyBiZWZvcmUgYmVpbmcgcG9zdGVkIHRvIHRoZSBzaXRlLiBUaGlzIHNob3VsZCBvbmx5IHRha2UgYSBmZXcgbW9tZW50cy4gVHJlYXQgb3RoZXJzIGFzIHlvdSB3aXNoIHRvIGJlIHRyZWF0ZWQgQ3JpdGljaXplIGlkZWFzLCBub3QgcGVvcGxlIFN0YXkgb24gdG9waWMgQXZvaWQgdGhlIHVzZSBvZiB0b3hpYyBhbmQgb2ZmZW5zaXZlIGxhbmd1YWdlIEZsYWcgYmFkIGJlaGF2aW91ciBDb21tZW50cyB0aGF0IHZpb2xhdGUgb3VyIGNvbW11bml0eSBndWlkZWxpbmVzIHdpbGwgYmUgcmVtb3ZlZC4gClRoZSBzY2VuZSBpbiB5b3VuZ2VyIGtpZHMgaXMgdGhlIG5leHQgbmV3ZXN0IHN0ZWFsdGggdmFwZS4gV2hlbiBJIHdhcyBpbnRyb2R1Y2VkIG5vYm9keSBob3cgYmFkIHRoZXkgcmVhbGx5IHdlcmUuIFdlIGFzc3VtZWQgdGhhdCBzaW5jZSB0aGV5IHdlcmVuJ3QgY2lnYXJldHRlcyB0aGV5IHdlcmUgc2FmZSBhbmQgZXZlcnlvbmUgc2FpZCB0aGV5IHdlcmVuJ3QgYWRkaWN0aXZlIGJ1dCBvYnZpb3VzbHkgdGhleSBhcmUgc3VwZXIgYWRkaWN0aXZlIGFuZCBuZXcgbmVnYXRpdmUgZWZmZWN0cyBhcmUgY29taW5nIG91dCBhYm91dCB2YXBpbmcgYWxsIHRoZSB0aW1lLiBJIGFscmVhZHkga25vdyBJJ2xsIHN0cnVnZ2xlIHdpdGggdGhpcyBhZGRpY3Rpb24gZm9yIHRoZSByZXN0IG9mIG15IGxpZmUuIEFsbCBiZWNhdXNlIHdlIHdhbnRlZCB0byBsb29rIGNvb2wgbG9sCicnVW5mb3J0dW5hdGVseSB0aGVzZSBtYWNoaW5lcyBvbmx5IG1ha2UgbG91ZCBub2lzZXMgYW5kIGhhdmUgZmxhc2hpbmcgbGlnaHRzIHdoZW4gcGVvcGxlIHdpbiwgc28gY2hpbGRyZW4ncyBwZXJjZXB0aW9uIGlzIHRoYXQgcGVvcGxlIGFyZSB3aW5uaW5nIG1vcmUgdGhhbiB0aGV5IGFyZSBsb3NpbmcuJycKSWYgYSBwZXJzb24gaXMgbWlzc2luZyBmcm9tIHRoZSBpbmRleCwgaXQgbWF5IGJlIHRoYXQgdGhlIFNTIGRlYXRoIHdhcyBub3QgcmVwb3J0ZWQgdG8gdGhlIFNvY2lhbCBTZWN1cml0eSBBZG1pbmlzdHJhdGlvbiAoU1NBKSwgdGhlIFNTIGRlYXRoIGJlbmVmaXQgd2FzIG5ldmVyIHJlcXVlc3RlZCBvciB0aGUgcG9zc2liaWxpdHkgdGhhdCBhbiBlcnJvciB3YXMgbWFkZSB3aGVuIGVudGVyaW5nIHRoZSBpbmZvcm1hdGlvbiBpbnRvIHRoZSBTU0RJLi4gCkluIGFueSBjYXNlIHdoYXQgZXZlcnlvbmUgc2hvdWxkIHdhdGNoIG91dCBmb3IgaXMgU2NhbSBlbWFpbHMgYW5kIG1lc3NhZ2VzIGluIGZhY2Vib29rIHdoZXJlIHlvdSBhcmUgc3Vwb3NlIHRvIGJlIGF3YXJkZWQgb3IgYmFuZWQgZm9yIGFueSByZWFzb24sIGFuZCB5b3UgYXJlIGFza2VkIHRvIGNsaWNrIGEgbGluayB0byB2ZXJpZnkgeW91ciBhY2NvdW50LCB3aGVyZSB5b3Ugd291bGQgbmVlZCB0byBsb2dpbiBvZiBjb3Vyc2U7IHdoZW4geW91IGxvZ2luIHRvIHRoYXQgbGluayB5b3UgZG9uJ3QgYWN0dWFsbHkgdmVyaWZ5IGFueXRoaW5nIHlvdSBqdXN0IGdpdmUgb3V0IHlvdXIgcGFzc3dvcmQgYW5kIGFjY291bnQgdG8gc29tZSBoYWNrZXJzLiAKV2hlbiBJIHdhcyBpbiBjb2xsZWdlLCBCdXNoIEpSIHdhcyBpbiB0b3duIGZvciBhIGJvb2sgc2lnbmluZywgYW5kIG15IHJvb21tYXRlIGJyb3VnaHQgYSBwcmludG91dCBvZiBidXNoaXNtcyBmb3IgaGltIHRvIHNpZ24uIE5vIGJvb2ssIGp1c3QgdGhlIHByaW50b3V0LiBIZSBzaWduZWQgaXQuClRoaXMgaXMgd2hhdCBjYXVzZXMgdGhlIGZpenpsaW5nIGVmZmVjdC4gCkkgd2FzIGZlZWxpbmcgYXMgaWYgTWlja2V5IHdhcyBwcm9wZWxsaW5nIG1lIGZvcndhcmQuIApEaWNjaW9uYXJpbyBQYXJhIFJvdXRlciBLZXlnZW4gQWN0dWFsaXphZG8gRGVmaW5pdGlvbmluc3RtYW5rcwpSLiBLZWxseSBBY2N1c2VkIE9mIFNleHVhbGx5IEFzc2F1bHRpbmcgMTMgWWVhciBPbGQgR2lybCBBdCBEZXRyb2l0IEhvdGVsIEluIDIwMDFEZXRyb2l0IERldGVjdGl2ZXMgYXJlIGxvb2tpbmcgaW50byBhbGxlZ2F0aW9ucyB0aGF0IHNpbmdlciwgUiBLZWxseSBlbmdhZ2VkIGluIHNleHVhbCBpbnRlcmNvdXJzZSB3aXRoIGEgMTMgeWVhciBvbGQgYXQgYSBEZXRyb2l0IGhvdGVsIGJhY2sgaW4gMjAwMS4gTWF0dCBZdXJ1cyByZXBvcnRzLgpBIGhhdCBpc24ndCBhIGJhZCBpZGVhIHNvIHlvdSBkb24ndCBnZXQgeW91ciBmYWNlIGFic29sdXRlbHkgY29va2VkLi4gCkF0IHRoZSBPbHltcGljcywgdGhlIHRpdGxlIG9mICJXb3JsZCdzIEZhc3Rlc3QgTWFuIiB0cmFkaXRpb25hbGx5IGdvZXMgdG8gd2hvZXZlciB3aW5zIHRoZSBnb2xkIG1lZGFsIGluIHRoZSBtZW4ncyAxMDAgbWV0ZXJzLCB3aGV0aGVyIG9yIG5vdCBoZSBicmVha3MgYSB3b3JsZCByZWNvcmQgYXQgdGhlIGNvbXBldGl0aW9uLgpJbiBkZXIgU3RhZHQgc2llaHQgZGFzIHZpZWxsZWljaHQgYW5kZXJzIGF1cywgYWJlciBIaWxmc2FyYmVpdGVyIGF1ZiBkZW0gQmF1IG9kZXIgaW0gQ2FsbGNlbnRlciBzaW5kIGtlaW5lIFNlbHRlbmhlaXQuIChOdXIgcGFhciBCZWlzcGllbGUpIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0l0IHBvc3NpYmxlIGl0IGV4aXN0cyBhbHJlYWR5IGJ1dCBpdCBpc24gd2lkZXNwcmVhZC4gSGVhZGxpZ2h0cyB0aGF0IHR1cm4gdGhlbXNlbHZlcyBvZmYgaWYgeW91IGFjY2lkZW50YWxseSBsZWF2ZSB0aGVtIG9uLiBXaHkgY2FuIHRoZXJlIGJlIGEgcG9wIHVwIHdoZW4geW91IHNodXQgdGhlIGNhciBvZmYgY29uZmlybWluZyB5b3UgbWVhbnQgdG8gb3IgaGF2ZSB0aGVtIHNodXQgb2ZmIGF1dG9tYXRpY2FsbHkgYWZ0ZXIgMTAgbWludXRlcz8gSSBnZXQgYXV0byBoZWFkbGlnaHRzIGFyZSBhIHRoaW5nLCBidXQgdGhleSBkb24gYWx3YXlzIGNvbWUgb24gd2hlbiB5b3UgbmVlZCB0aGVtIHRvLCBsaWtlIGR1c2sgb3IgZGF3biwgc28geW91IHR1cm4gdGhlbSBvbiBtYW51YWxseSBhbmQgdGhleSBhcmUgZWFzeSB0byBmb3JnZXQuIApJIGZlZWxpbmcgYSBiaXQgYmV0dGVyIG1lbnRhbGx5IGFuZCB0cnkgdG8ganVzdCBjb3VudCBidXQgbXkgYnJhaW4ga2VlcHMgZGlzdHJhY3RpbmcgbWUuIFRvZXMgd2FybSBub3cgdGhhbmsgZ29vZG5lc3MsIGJvZHkgc3RpbGwgd2FybS4gVGhlIGZyb3plbiBhaXIgaHVydHMgbXkgbHVuZ3MgYnV0IGxhcCBvbmUgaXMgZG9uZSEuIApCdXQgSSB3b3VsZCBib3Jyb3cgcHJvY2Vzc2luZyBmcm9tIG90aGVycyBhbmQgSSB3b3VsZCBib3Jyb3cgcG93ZXIuIApJdCBpcyBhbGxlZ2VkIHRoZSB3b21hbiBzbGFwcGVkIGhlciBkYXVnaHRlciBoYXJkIG9uIHRoZSBmYWNlLCBsZWF2aW5nIGEgcmVkIG1hcmsgdGhhdCBjb3VsZCBzdGlsbCBiZSBzZWVuIGJ5IHBvbGljZSB0aHJlZSBob3VycyBsYXRlci4gCkNvbWViYWNrOiBNYXNzYWdlIEVudnkgaGFkIGEgbWFzc2l2ZSBjcmlzaXMgYSB5ZWFyIGFnbywgd2l0aCBhYm91dCAyMDAgYWNjdXNhdGlvbnMgb2Ygc2V4dWFsIGFzc2F1bHQgb2YgY3VzdG9tZXJzIGF0IGl0cyBmYWNpbGl0aWVzLiBTaW5jZSB0aGVuLCB0aGUgY2hhaW4gImltcGxlbWVudGVkIG5ldyBzYWZldHkgbWVhc3VyZXMgdG8gcmVhc3N1cmUgY29uc3VtZXJzLCBhbmQgaXQgaXMgbm93IHJlYWR5IHRvIHB1c2ggYSBicmFuZCBhd2FyZW5lc3MgY2FtcGFpZ24sIiBBZCBBZ2UncyBBZHJpYW5uZSBQYXNxdWFyZWxsaSB3cml0ZXMuIApJbmRpYSBhc2tzIFBha2lzdGFuIGZvciBjb25jcmV0ZSBjcmFja2Rvd24gb24gdGVycm9yIGdyb3VwcwpTYXR1cmRheSBhdCB0aGUgQ29tcGFjdCBEaXNjIENlbnRlciwgMTM2NSBFYXN0b24gQXZlLiwgQmV0aGxlaGVtLCBhcyBwYXJ0IG9mIFJlY29yZCBTdG9yZSBEYXkuIApCdXQgd2hhdCB0byBkbyB3aXRoIGJhdGhyb29tcyBhcyB0aGV5IGFscmVhZHkgZXhpc3Q/IHdvdWxkIGFyZ3VlIHdlIGxldCB0aGUgc3R1ZGVudHMgZGVjaWRlLiB0aGUgbW9zdCBwYXJ0LCB5b3VuZ2VyIEFtZXJpY2FucyBoYXZlIGdyb3duIHVwIHdpdGggZmFyIG1vcmUgZGl2ZXJzaXR5IG9mIGdlbmRlciBleHByZXNzaW9uIGFuZCB0aHVzIHRoZXkgZmFyIGxlc3MgcGFuaWNrZWQgYWJvdXQgcGVlaW5nLgpBcyBmYXIgYXMgdGhlIGNoYWlyIGxhc3RpbmcgZm9yZXZlciwgYnV5IGl0IGZvciBsaWZlIHR5cGUgcGVvcGxlIGdpdmluZyB5b3UgYWR2aWNlIG9ubGluZS4gQmUgc2tlcHRpY2FsIHBsZWFzZSwgSSBzdXJlIHRoZXJlIGFyZSBzb21lIGNvbWZvcnRhYmxlIGdhbWluZyBjaGFpcnMsIGFuZCB0aGUgSCBjaGFpcnMgSSBvd25lZCBiZWZvcmUgYnJva2UgYWZ0ZXIgdGhlIHdhcnJhbnR5IGV4cGlyZWQ7IG15IHByZXZpb3VzIEFlcm9uIGNoYWlyIChib3VnaHQgaW4gdGhlIGxhdGUgMTk5MCBsYXN0ZWQgYWJvdXQgMTIgeWVhcnMuIFdoaWNoIGlzIGNvaW5jaWRlbnRhbGx5IHRoZSBzYW1lIGFtb3VudCBhcyB0aGVpciB3YXJyYW50eS4gClNvIHRoZSAic29sdXRpb24iIHRoZXkgb2ZmZXJpbmcgaXMgZm9yIHRoZSBoYWxmIG1hcmF0aG9uIGFuZCA1IG1pbGUgdG8gcnVuIHRoZSBzYW1lIGNvdXJzZSwgYnV0IHRoZSA1IG1pbGUgc3RhcnQgYW4gaG91ciBhbmQgYSBoYWxmIGxhdGVyIHRvIGdpdmUgdGhlIGhhbGYgbWFyYXRob25lcnMgdGltZSB0byBjb21wbGV0ZSAoaGFsZiBkdWUgdG8gc3RhcnQgYXQgN0FNOyB0aGVyZSB3aWxsIGJlIHNsb3dlciBydW5uZXJzIHN0aWxsIG9uIHRoZSBjb3Vyc2UgYXQgdGhhdCB0aW1lLCBpbmNsdWRpbmcgbXlzZWxmKS4gCkl0IHRha2VzIGEgbG90IG9mIGVmZm9ydC4gCkJvdGggc3RhdHMgcGxhY2UgaGltIGluIHRoZSBDb25mZXJlbmNlIHRvcCAxMC4gV2luc3RvbiBwdXQgdXAgYSBkb3VibGUgZG91YmxlIGFnYWluc3QgcmFua2VkIEthbnNhcywgYW5kIDIwKyBhZ2FpbnN0IHJhbmtlZCBQdXJkdWUsIFdpc2NvbnNpbiBhbmQgTWljaGlnYW4uLiAKVGhlIGRpcmVjdG9ycyBwbGF5IHVwIHRoZSByaXZhbCBzaWRlcyB0aHJvdWdoIHRoZSB1c2Ugb2YgdGhhdCAzMDAgcGx1cyBob3VycyBvZiBuZXdzIGZvb3RhZ2UgYW5kIGN1cnJlbnQgZGF5IGludGVydmlld3Mgd2l0aCBhIGhhbmRmdWwgb2Yga2V5IHBsYXllcnMuIApSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUhvdyB0byBQbGF5IFRocmVlIENhcmQgUG9rZXIKKFBsdXMsIEkgZGlzY292ZXJlZCB0aGF0IGlmIHlvdSBkb24gdXNlIHRoZSBtYWduZXQsIGl0IGp1c3QgYSBnb3JnZW91cyBnbGl0dGVyICAgc28gaXQga2luZGEgbGlrZSBnZXR0aW5nIHR3byBmb3Igb25lLikgOiApLiAKQmlnIHdvay4gUHV0IG9saXZlIG9pbCBpbi4gTm90IHRvbyBtdWNoLiAKRmlyc3QgdGltZSBob21lYnV5ZXJzIGFyZSBsaWtlbHkgdG8gYmVuZWZpdCBtb3JlIGZyb20gdGhlc2UgY2hhbmdlcy4gVGhlIGFiaWxpdHkgdG8gc3RyZXRjaCB0aGUgYW1vcnRpemF0aW9uIHBlcmlvZCB0byAzMCB5ZWFycyBsb3dlcnMgdGhlIG1vbnRobHkgcGF5bWVudCBhbmQgYWxsb3dzIG1hbnkgdG8gcGFydGljaXBhdGUgaW4gaG9tZWJ1eWluZyB3aG8gd291bGQgb3RoZXJ3aXNlIGJlIGZvcmNlZCB0byByZW50IGF0IGEgdGltZSB3aGVuIHJlbnRhbCB2YWNhbmN5IHJhdGVzIGFyZSBhdCBoaXN0b3JpYyBsb3dzIGluIGxhcmdlIHVyYmFuIGhvdXNpbmcgbWFya2V0cy4uIApBbmQgd2hlbiBJIHNhdyBpdCB0aGUgZm91cnRoIHRpbWUgKCBhbHdheXMgb24gYXV0b21hdGNoKSBJIHdyb3RlIGFuZCBhc2tlZCBhYm91dCBpdC4gVGhlIGd1eSBhZG1pdHRlZCBoZSB3YXMgYSBndXkgaW4gR2hhbmEsIHRoYXQgaGUgd29ya2VkIGZvciB0aW5kZXIsIGFuZCB0aGF0IEkgc2hvdWxkIHN0YXkgY2xlYXIgb2YgaGltL2hlci4gSSByZXNwb25kZWQgd2l0aCBzb21lIGluYXBwcm9wcmlhdGUgdGhvdWdodHMgb2YgaG93IEkgZmVsdCBhYm91dCB0aGUgc2l0dWF0aW9uLCBhbmQgaW4gbGVzcyB0aGFuIGEgbWludXRlLCBteSBhY2NvdW50IHdhcyBjbG9zZWQgcGVuZGluZyBpbnZlc3RpZ2F0aW9uLiAKQSBodWdlIGVtb3Rpb25hbCBpbnZlc3RtZW50Li4gCldoaWxlIHNoZSB3YXMgY2hlYXRpbmcgb24gbXkgZmF0aGVyLCBzaGUgYnJpbmcgbWUgKDkgMTApIGFuZCBteSBzaXN0ZXIgKDMgNCkgdG8gb25lIG9mIHRoZSBtYW55IHBhcmtzIG5lYXJieSBhbmQgbGVhdmUgdXMgdGhlcmUgd2hpbGUgc2hlIGFuZCBoZXIgc3Vic2VxdWVudCBib3lmcmllbmRzIHdlbnQgb2ZmIHRvIGRvIHdoYXRldmVyIHRoZXkgd291bGQgZG8uIEkgcmVjb2duaXppbmcgcGxheWdyb3VuZHMgYW5kIHNpZ25zIGFuZCB0aGluZ3MsIGFuZCBmb3IgdGhlIGZpcnN0IHRpbWUsIEkgbm90aWNpbmcgd2hhdCBkYW5nZXIgc2hlIHB1dCB1cyBpbiBieSBqdXN0IGxlYXZpbmcgdXMgdGhlcmUgdW5hdHRlbmRlZCBpbiBhIHZlcnkgYnVzeSBjb3VudHkuIApMb2NhbCBmb29kcywgb2YgY291cnNlLCBidXQgYWxzbyBtb3ZlIHlvdXIgbW9uZXkgb3V0IG9mIG1lZ2EgYmFua3MgYW5kIHB1dCBpdCBpbiBhIGxvY2FsIGNyZWRpdCB1bmlvbiwgZ28gc2VlIGxvY2FsIGxpdmUgdGhlYXRlciwgY29uc2lkZXIgYSBzdGF5Y2F0aW9uIGFuZCBzcGVuZCB5b3VyIGxlaXN1cmUgdGltZSBhbmQgbW9uZXkgd2hlcmUgeW91IGxpdmUuIApXaGV0aGVyIHlvdXIgZG9jdG9yIGlzIHdpbGxpbmcgdG8gZG8gdGhpcyBwcm9iYWJseSBkZXBlbmRzIG9uIHlvdXIgcmVsYXRpb25zaGlwIHdpdGggdGhlbSwgYnV0IGl0IHdvcnRoIHB1cnN1aW5nLiAKSGFoYSAgIHRoYXQgZGVmaW5pdGVseSBoZWxwZWQgbWUgYXMgd2VsbC4gVGhleSB3b3VsZCBmb3JnZXQgZHJpbmtzLCBzYXVjZXMsIGV2ZW4gc29tZXRpbWVzIGZyaWVzLiBNYW55IGRyaXZlcnMgd29yayBmb3IgbW9yZSB0aGFuIDEgZm9vZCBkZWxpdmVyeSBjb21wYW55IGFuZCBJIHNlZSB0aGUgZHJpdmVyIG9uIHRoZSBHUFMgcGFya2VkIHNvbWV3aGVyZSBmb3IgMzAgbWludXRlcyBvciBkcml2aW5nIHRvIGFub3RoZXIgcGFydCBvZiB0aGUgY2l0eS4gVGFraW5nIDkwIG1pbnV0ZXMgZm9yIGZvb2QgdG8gZ2V0IGhlcmUgd2FzIGEgd2FrZXVwIGNhbGwgYXMgYSBtZWFsIGNvdWxkIGJlIG1hZGUgd2VsbCB1bmRlciAxIGhvdXIuCkFmdGVyIHRoZSBicmluZyBpbiBiZXQgaXMgbWFkZSB0aGUgbmV4dCBwbGF5ZXIgb24gdGhlIGltbWVkaWF0ZSBsZWZ0IG9mIHRoZSBwbGF5ZXIgbWFraW5nIHRoZSBicmluZyBpbiBiZXQgaGFzIHRoZSBvcHRpb24gb2YgY2FsbGluZyB0aGUgYmV0LCBmb2xkaW5nLCBvciByYWlzaW5nLiBEdXJpbmcgdGhpcyBmaXJzdCByb3VuZCBpZiBhIHBsYXllciB3aXNoZXMgdG8gcmFpc2UgdGhlIGFtb3VudCBvZiB0aGUgcmFpc2UgaXMgbm90IGRvdWJsZSBidXQgZXF1YWwgdG8gdGhlIGFtb3VudCBvZiB0aGUgbWluaW11bSBiZXQgZm9yIHRoYXQgZ2FtZS4gSW4gYSAkMSA1IGl0IG11c3QgYmUgYXQgbGVhc3Qgb25lIGRvbGxhciBidXQgbm8gbW9yZSB0aGF0ICQ1LiAKMzAgYXQgaG9tZSB3aXRoIGhpcyBsb3ZpbmcgZmFtaWx5IGJ5IGhpcyBzaWRlLiBCb3JuIGluIEF1YnVybiwgTlksIGhlIGdyZXcgdXAgb24gdGhlIHNvdXRoIHNpZGUgb2YgU3lyYWN1c2UuIApDZWNpIGVzdCB1biBtb2RlIGQnZW1wbG9pIGR1IGJsb2cgKGV0IGRlIHNvbiBhdXRldXIpVW4gc2FjciAoY2Vuc3VyKSBjZSAiSm9qbyIuIAo1LiBOZWdvdGlhdGlvbnM6IG9mIHRoZSBnYW1lIGZpbmFuY2lhbCBudW1iZXJzIGlzIG9ubHkgaGFsZiB0aGUgc3RvcnkgaW4gTW9ub3BvbHkgc3VjY2VzczsgYmVpbmcgYSBtYXN0ZXIgb2YgbmVnb3RpYXRpb25zIGlzIHRoZSBvdGhlciBwYXJ0LgpGYWN0IE51bWJlciAxMjogQXVzdHJhbGlhIGhhcyBuZXZlciBleHBlcmllbmNlZCBhIGNpdmlsIHdhciBub3IgZGlkIGl0IGhhdmUgdG8gZmlnaHQgZm9yIGl0cyBpbmRlcGVuZGVuY2UgZnJvbSBFbmdsYW5kLgpXaGVuIGl0IHN0YXJ0ZWQgcG91cmluZyByYWluIGFyb3VuZCBkaW5uZXJ0aW1lLCB3ZSB3ZXJlIHN0aWxsIG9uIHRoZSByb2FkIGFuZCB3ZSB3ZXJlIGEgbGl0dGxlIGJ1bW1lZCBvdXQuIFdlIHN0b3BwZWQgZm9yIGRpbm5lciBhdCBhIHJhbmRvbSByb2Fkc2lkZSByZXN0YXVyYW50IGluIHRoZSBtaWRkbGUgb2Ygbm93aGVyZSBhdCA4IHBtLiBPdXIgd2FpdGVyIHdhcyByZWFsbHkgY3V0ZSBzbyB3ZSBpbnZpdGVkIGhpbSB0byBzaXQgd2l0aCB1cyBhbmQgaGF2ZSBhIGN1cCBvZiB0ZWFtLiBVbmZvcnR1bmF0ZWx5IGhlIHNwb2tlIGhhcmRseSBhbnkgRW5nbGlzaCwgYnV0IHdoZW4gV2VuZGkgd2VudCB0byB0aGUgYmF0aHJvb20sIEkgd2FzIHByZXR0eSBzdXJlIHRoYXQgaGUgaGFkIGludml0ZWQgdXMgdG8gc2xlZXAgYXQgaGlzIGhvdXNlLiBJIHdhcyBhIGxpdHRsZSBlbWJhcnJhc3NlZCB0byBjbGFyaWZ5IHRoaXMgKHdoYXQgaWYgdGhhdCBpcyBub3Qgd2hhdCBoZSBoYWQgYXNrZWQgbWU/ISkgYnV0IGJ5IG1pbWluZyBhbmQgd2l0aCBoaXMgbGltaXRlZCBFbmdsaXNoIGFuZCBvdXIgbGltaXRlZCBUdXJraXNoLCB3ZSByZWFsaXplZCB0aGF0IGhlIHJlYWxseSBoYWQgaW52aXRlZCB1cy4gV2VsbCB0aGUgc3BlZWRpbmcgdGlja2V0IGhhZCBwdXQgYSBkZW50IGluIG91ciBwb2NrZXQgc28gd2UgdGhvdWdodCAiV2h5IG5vdD8iIGFuZCB3ZSBhbGwgZHJvdmUgdG8gaGlzIGhvdXNlLgpSZW1vdmUgb25lIHBhcnQgWzEvMyBvZiB0aG9zZSBwZW5uaWVzXS4gClBHUiB1c2VkIHJlYWwgd29ybGQgbG9jYXRpb25zIChsaWtlIEVkaW5idXJnaCBmb3IgZXhhbXBsZSkgYW5kIHlvdSByYWNlZCBvbiBjbG9zZWQgb2ZmIHN0cmVldCB0cmFja3MsIHRvIHRoaXMgZGF5IG5vIG90aGVyIHJhY2luZyBnYW1lIGhhcyBoYWQgc3RyZWV0IHRyYWNrcyBhcyBnb29kIGFzIHRoZXkgd2VyZS4gTkZTIGlzIGJhc2ljYWxseSBkZWFkIGFuZCBHVCBTcG9ydCBpcyBub3Qgb24gWGJveCwgdGhlcmUgaXMgbm8gY3Jvc3Mgb3ZlciBiZXR3ZWVuIEhvcml6b24gYW5kIFBHUiwgdG90YWxseSBkaWZmZXJlbnQgZ2FtZXMgaW4gYm90aCBmZWVsIChQR1IgaXMvd2FzIHdheSBtb3JlIGFyY2FkZSB0aGFuIEhvcml6b24pIGFuZCBzZXR0aW5nLCAxMDAlIHRhcm1hYyB3aXRoIHN0b2NrIGNhcnMgb25seSwgcGx1cyB0aGUgUHZQIHdhcyBhY3R1YWwgY29tcGV0aXRpdmUgbXVsdGlwbGF5ZXIgbm90IHRoaXMgdGVhbSBiYXNlZCBqb2tlLiAKVGFzc2VsZWRDYXQgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQWxzbywgaWYgc29tZW9uZSBpcyBvZmZlcmluZyB5b3UgYSBmcmVlIGdhbWUsIFNBWSBQTEVBU0UvVEhBTksgWU9VLiAiZ2ltbWUgaXQiIGlzIG5vdCBhIHBvbGl0ZSByZXNwb25zZS4gSW5zdGVhZCwgc2F5LCAiUGxlYXNlLCBzaXIsIEkgd291bGQgbG92ZSB0byBoYXZlIHRoaXMgZ2FtZSBiZWNhdXNlIEkgZG9uYXRlZCBhbGwgb2YgbXkgbW9uZXkgdG8gdGhlIGxvY2FsIGNoYXJpdHkgYW5kIGNhbiBnZXQgYSBqb2IgdG8gcGF5IGZvciBpdCBteXNlbGYgYmVjYXVzZSBteSBsZWdzIHdlcmUgYW1wdXRhdGVkIGFmdGVyIEkgcmFuIGludG8gYSBidXJuaW5nIGJ1aWxkaW5nIHRvIHJlc2N1ZSBvbmUgZG96ZW4gb3JwaGFucy4gClRoZSBzY29wZSBvZiBhIHRoZW9yeSBpcyB0aGUgbGltaXRzIG9mIHdoZXJlIGl0IGlzIGFwcGxpY2FibGUuICdUaGUgVGhlb3J5IG9mIFVuc3VwcG9ydGVkIEZhbGxpbmcnIHN0YXJ0ZWQgb3V0IHdpdGggdGhlIHVuaXZlcnNlIGFzIHNjb3BlLiBUZXN0aW5nIGl0IHdpdGggc29tZXRoaW5nIGxpZ2h0ZXIgdGhhbiBhaXIgb3IgaW4gYSBzcGFjZXNoaXAgZGlzcHJvdmVkIHRoZSBvbGQgdGhlb3J5IGFuZCByZXBsYWNlZCBpdCB3aXRoIG9uZSB3aXRoIGEgbmFycm93ZXIgc2NvcGUsIHRoZSBmYWxsaW5nIG9iamVjdHMgaGFkIHRvIGJlIGhlYXZpZXIgdGhhbiBhaXIsIGFuZCB0aGUgbG9jYXRpb24gaGFkIHRvIGJlIEVhcnRoLgpKZSBkY2lkZSBkb25jIGRlIGZhaXJlIHVuIGd0ZWF1IG1vZWxsZXV4ICBsYSBmYXJpbmUgZGUgY2h0YWlnbmVzLiBKZSBwcmZyZSBhc3N1cmVyIGxhIHJ1c3NpdGUgZW4gY2hlcmNoYW50IHVuZSByZWNldHRlIGFkIGhvYy4gSmUgdG9tYmUgc3VyIHVuZSByZWNldHRlIGQnYXJkY2hvaXMgZGUgUGFzY2FsZSBXZWVrcyBtYWlzIGRldXggY2hvc2VzIG5lIG1lIGNvbnZpZW5uZW50IHBhcyA6IGNvbW1lIHNvdXZlbnQgZGFucyBjZSB0eXBlIGRlIHJlY2V0dGUsIGxhIHF1YW50aXQgZGUgZmFyaW5lIGRlIGNodGFpZ25lcyBlc3QgYXNzZXogbWluaW1lIGV0IGonYXZhaXMgZW52aWUgZGUgYmllbiBlbnRhbWVyIG1vbiBzdG9jayA7IGlsIGZhdXQgdW5lIGdyYW5kZSBxdWFudGl0IGRlIGNybWUgZGUgbWFycm9ucyBldCBqJ2VuIGFpIHVuZSBleGNlbGxlbnRlIHF1ZSBqZSBuJ2FpIHBhcyBlbnZpZSBkJ3V0aWxpc2VyIGVuIHRvdGFsaXQgYWluc2kuIApUaGVyZSBhcmUgYSBmZXcgYm94ZXMgeW91IGNhbiB0aWNrIG9yIGNob29zZSBub3QgdG8uIAoiQWJzb2x1dGVseSBsb3ZlIHRoaXMhIEZJTkFMTFkgdXBncmFkZWQgZnJvbSB0aGUgUG9sYXIgRlQ0IGFuZCBJIGFtIHNvb29vIGhhcHB5IHRoYXQgSSBkaWQhIFNvIGZhciwgSSd2ZSB1c2VkIHRoaXMgaW4gYSBadW1iYSwgQm9keVB1bXAsIGFuZCBDWFdvcnggY2xhc3MgaW4gYWRkaXRpb24gdG8gYSBub3JtYWwgd2VpZ2h0IHRyYWluaW5nIHNlc3Npb24uIEl0IGRvZXNuJ3QgZ2V0IGluIHRoZSB3YXkgZG9pbmcgY2xlYW4gYW5kIHByZXNzZXMgZXRjIGxpa2UgbXkgRlQ0IGRpZCBhbmQgaXQgc3RpbGwgZ2l2ZXMgYWNjdXJhdGUgaW5mbyB3aXRob3V0IHRoZSBzdHJhcC4gU2NyZWVuIHF1YWxpdHkgaXMgZ3JlYXQgYWx0aG91Z2ggSSBmZWVsIGxpa2UgSSB3aWxsIGRlZmluaXRlbHkgbmVlZCB0byBwdXJjaGFzZSBhIHNjcmVlbiBwcm90ZWN0b3IuIDEwLzEwIGhhbmRzIGRvd24uIEkgcmVzZWFyY2hlZCBmb3IgZGF5cyBhbmQgY29tcGFyZWQgY29tcGFyZWQgY29tcGFyZWQuIE15IG9ubHkgcmVncmV0IGlzIHRoYXQgSSBkaWRuJ3QgYnV5IHRoaXMgc29vbmVyLiBTdXJwcmlzaW5nbHkgZW5vdWdoLCBJIHdhcyBhbHNvIGFibGUgdG8gZmlndXJlIG91dCB0aGUgUG9sYXIgRmxvdyBmYWlybHkgcXVpY2tseSB3aGljaCBpcyBzdXBlciBiZW5lZmljaWFsIHRvIHVuZGVyc3RhbmRpbmcgbXkgd29ya291dHMhIgpJZiBJIFIuIEtlbGx5IGRlZmVuc2UgYXR0b3JuZXkgYW5kIHRoaXMganVzdCBjYW1lIG91dCwgSSBhbSBpbW1lZGlhdGVseSBmaWxpbmcgZm9yIGFuIGluanVuY3Rpb24gZXhjbHVkaW5nIGFueSBldmlkZW5jZSB0aGF0IHJlbGF0ZXMgdG8gYW55dGhpbmcgdGhlIGZvcm1lciBjb3Vuc2VsIHNhaWQuIApUaGUgcXVlc3Rpb25zIHNlZW1lZCBvYnZpb3VzLiBRdWVzdGlvbnMgc3VjaCBhcywgIkFyZSB5b3Ugb3B0aW1pc3RpYz8gT3IgIkRvIHlvdSByb290IGZvciB1bmRlcmRvZ3M/IiBzZWVtZWQgbWVhbmluZ2xlc3MsIGFzIHRoZSBhbnN3ZXJzIHdlcmUgc2VsZiBldmlkZW50LiBTdXJlbHkgZXZlcnlvbmUgd291bGQgcGFzcyB0aGlzIHRlc3Qgd2l0aCBhICJvayB0byBiZSBhbiBlbnRyZXByZW5ldXIgc3RhbXAuIFlldCB3aGVuIG15IHlvdW5nZXIgYnJvdGhlciB0b29rIHRoZSB0ZXN0IGhlIGNhbWUgYXdheSBzYXlpbmcsICJJIHdvdWxkIGZhaWwgbWlzZXJhYmx5IGlmIEkgb3duZWQgbXkgb3duIGJ1c2luZXNzLiIgSSBzdXBwb3NlIGl0J3MgYSB0ZXN0YW1lbnQgdG8gbXkgb3duIGluY2xpbmF0aW9uIHRvIHJpc2sgdGhhdCB0byBtZSBhbGwgdGhlIHF1ZXN0aW9ucyBzZWVtZWQgdG8gaGF2ZSBvbmx5IG9uZSBwb3NzaWJsZSBhbnN3ZXIuCllvdSBkbyB5b3VyIHRoaW5nIGFuZCBnbyBhYm91dCB5b3VyIGRheS4uIApJJ20gc3RpbGwgbm90IHN1cmUgaG93IGFueW9uZSBjb3VsZCBnaXZlIHVwIHN1Y2ggYSBncmVhdCBsaXR0bGUgZ3V5IHRvIGEgc2hlbHRlci4gCkFsbCBwb3N0cyBtdXN0IGNvbnRhaW4gYW4gZXhwbGljaXQgdG9waWMgZm9yIGRpc2N1c3Npb24sIGluaXRpYXRlZCBieSB0aGUgY29udGVudCBzdWJtaXR0ZXIuIFN1Ym1pc3Npb25zIHRoYXQgZG8gbm90IGhhdmUgYSBjbGVhciB0b3BpYyBmb3IgZGlzY3Vzc2lvbiBvbmUgaG91ciBhZnRlciBwb3N0aW5nIHdpbGwgYmUgcmVtb3ZlZCB3aXRob3V0IHdhcm5pbmcuClBvc3NpYmxlIGhhbmRzIHRoYXQgbWlnaHQgdGhpcyBsaW5lOiBBSywgQVEsIEFKLCBBVCwgQTksIDk5LCBKSiBwbHVzIG1heWJlIHNvbWUgQVhzIHdpdGggYmFja2Rvb3IgcG9zc2liaWxpdGllcy4KSWYgb25seSBoZSB3ZXJlIHNwZW5kaW5nIFRoYW5rc2dpdmluZyB3aXRoIEpveWEsIHNlZWtpbmcgY291bmNpbCBmcm9tIHNvbWVvbmUgd2hvIG5laXRoZXIgbWFrZXMgd2FyIG5vciByZWxpZXMgb24gdGhlIHByb2ZpdHMgb2Ygd2FyLiAKS3JpcyBSdXNzZWxsLCBEYWxsYXMgU3RhcnMKQWNjb2xhZGVzIGZvbGxvd2VkLCBhIHBvc3RhZ2Ugc3RhbXAsIGEgSGFsaWZheCBUcmFuc2l0IGZlcnJ5IG5hbWVkIGFmdGVyIGhlciBwbHVzIGEgc3RhciBvbiBDYW5hZGEgV2FsayBvZiBGYW1lLiAKSnVzdCBuZWVkIHNvbWUgY2xhcmlmaWNhdGlvbi5Tb3JyeSBubyB0ZWNoIHF1ZXN0aW9uLCBidXQganVzdCBhIGRpc2N1c3Npb24gcXVlc3Rpb24gdGhhdCBJIGZlbHQgd291bGQgcmVsYXRlIHRvIHRlY2hpbmcgYXQgbGVhc3QgYSBiaXQsIGFuZCBkaWRuIGZlZWwgc2lnbmlmaWNhbnQgZW5vdWdoIHRvIGp1c3RpZnkgYSBwb3N0LiAKT3ZlcmFsbCBpdCB3YXMgYSByZWFsbHkgZnVuIHRyaXAuIEp1c3Qgd2lzaCB3ZSBoYWQgd29uIDooLiAKSW4gZmFjdCwgSSBhbHJlYWR5IHRvbGQgeW91IEkgYWN0dWFsbHkgcHJlZmVyIGlmIHBlb3BsZSBkaXNsaWtlIEtvcmVhLiAKRGRvc3Z1bGNhbiAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkFnZWQgMzMsIGhlIGlzIGxlYW4gYW5kIHNwb3J0eSwgd2l0aCBhbiBvcGVuIG5lY2tlZCBzaGlydCBhbmQgYSBzcGFyayBvZiBsYWRkaXNoIGdvb2QgaHVtb3VyLiBSYW1pcmV6LCByZWZlcnJpbmcgdG8gR2lsbGllcyBidXN5IG5pZ2h0IGxpZmUsIGNhbGxlZCBoaW0gImEgcGxheWVyIi4gV2hlbiBCZWNyb2Z0IGFza3Mgd2hhdCBHaWxsaWVzIHVuZGVyc3RhbmRzIHRoZSBwaHJhc2UgdG8gbWVhbiwgaGUgYWxsIGJ1dCB3aW5rcyBhdCBoaXMgYXVkaWVuY2UuICJBbiB1cHN0YW5kaW5nLCBpbnRlbGxpZ2VudCwgZ29vZCBsb29raW5nIG1lbWJlciBvZiB0aGUgY29tbXVuaXR5LCIgaGUgc2F5cy4gCkhlIHdhcyB0aGUgbmludGggb2YgMTEgY2hpbGRyZW4sIHRvd2FyZCB0aGUgYm90dG9tIG9mIHRoZSBoYW5kIG1lIGRvd24gbGlzdCBpbiBMYWZheWV0dGUuICJNeSBmYXRoZXIgd2FzIGEgY2FycGVudGVyLCIgaGUgcmVtZW1iZXJzLiAiV2UgYWx3YXlzIGhhZCBlbm91Z2ggZm9vZCB0byBlYXQsIGJ1dCB3ZSBvbmx5IGhhZCBtZWF0IG9uIFN1bmRheXMuIgpJIGV2ZW4gbW9yZSBza2VwdGljYWwgYWJvdXQgYSAiY3VyZSIgZm9yIGF1dGlzbS4gSSBoYXZlIGF1dGlzbSwgYW5kIGFueW9uZSB3aG8gc2F5cyBpdCBhYm91dCBpbmZsYW1tYXRpb24gaGFzIG9uZSBiaWcgcXVlc3Rpb24geWV0IHRvIGJlIGFuc3dlcmVkIHRvIG15IHNhdGlzZmFjdGlvbjogaG93IHRoZSBoZWNrIGRvZXMgaW5mbGFtbWF0aW9uIG1ha2UgYSBwZXJzb24gbG9naWNhbCBhbmQgbGl0ZXJhbCBtaW5kZWQsIHVuYXdhcmUgb2YgdGhlIGJvZHkgbGFuZ3VhZ2Ugb2Ygb3RoZXJzLCBtb3JlIGludHVpdGl2ZSB3aXRoIGNvbXB1dGVycywgYW5kIG9ic2Vzc2VkIHdpdGggc3VwZXJoZXJvZXMgb3IgUG9rZW1vbj8gQW5kIGhvdyBjYW4gdGFraW5nIGltbXVuZSBzdXBwbGVtZW50cyByZXdpcmUgYSBtaXN3aXJlZCBicmFpbj8KVGhlcmUgaXMgb25seSBvbmUgdGhpbmcgYWxsIG9mIHVzIGNhbiBzYXkgYWJvdXQgdGhlIFJlZCBDYXNpbm8gR3JhZGUgV29vbCBCbGVuZCBTcGVlZCBDbG90aC4gSXQgaXMgYWJzb2x1dGVseSBzdHVubmluZy4gClRoaXMgaW1hZ2Ugb2YgZnJlZWRvbSBhbmQgZXhjaXRlbWVudCBpcyBub3QgcHJvbWlzZWQuIEl0IGFuIGlsbHVzaW9uLiBZb3UgYSB0ZW1wb3JhcnkgdGhyaWxsIHRvIHlvdXIgbXV0dWFsIGNydXNoIHdoaWxzdCB5b3VyIGZpYW5jZWUgaGFzIG1hZGUgYSBjb21taXRtZW50IHRvIHlvdSBiZWNhdXNlIHRoZXkgY2FyZSBhYm91dCB5b3UgYW5kIHdhbnQgdG8gbG9vayBhZnRlciB5b3UuCjEyLjM3IExhY3MgYW5kIGluc3RhbnQgYm9udXMgb2Ygb3ZlciBScy4gCk15IGh1c2JhbmQgY29uZmlkZWQgdGhhdCBoZSBhbHdheXMgYmVlbiBpbnRvIGFuaW1hdGVkIHBvcm4gICBjYXJ0b29ucyBidXQgbm90IGhlbnRhaSBzcGVjaWZpY2FsbHkuIFJlYWxseSBkaWRuIGdldCBpdCBmb3IgdGhlIGxvbmdlc3QgdGltZS4gSGUgZmluYWxseSBleHBsYWluZWQgdGhvdWdoLiAKQmFzaWNhbGx5LCBwZW9wbGUgZG9uIGNvbnN0YW50bHkgdGhpbmsgdGhlIGdvdmVybm1lbnQgaXMgb3V0IHRvIGdldCB0aGVtLgpCdXQgU21vbGxldHQsIGluc3RlYWQgb2YgY3JlYXRpbmcgYW4gaW1hZ2UgYnVybmlzaGluZyBmaWN0aW9uLCBwb3NpdGlvbmVkIGhpbXNlbGYgYXMgYSB2aWN0aW0gYW5kIHRoZSBkZXNlcnZpbmcgY2VudGVycGllY2UgZm9yIG91dHJhZ2UgZGlyZWN0ZWQgYXQgaGlzIGF0dGFja2Vycy4gSGUgc2FpZCB0aG9zZSB3aG8gcXVlc3Rpb25lZCBoaW0gbWFkZSBoaW0gZmVlbCAidmljdGltaXplZC4iCkRlIG1tZSBxdSdpbHMgbidvbnQgcGFzIGFsbHVtIGRlIGJvdWdpZXMgcG91ciBsZXMgYnJpdGFubmlxdWVzLCBpbHMgbidvbnQgcGFzIGZhaXQgc2NpbnRpbGxlciBsYSBUb3VyIEVpZmZlbCBhdXggY291bGV1cnMgZHUgcGF5cyBkZSBEb3N0b2V2c2tpLiAiTm91cyBzb21tZXMgdG91cyBhbXJpY2FpbnMiLiAKQSBuZXcgcGxheWVyIHdpbGwgaGF2ZSB0byBtYWtlIGEgbG90IG9mIGRlcG9zaXRzIGJlZm9yZSBoZSBzdGFydHMgdW5kZXJzdGFuZGluZyBydWxlcyBhbmQgZ2FtZSBzdHJhdGVneS4gCllvdSBiZWVuIGhpcyByaWRlIG9yIGRpZS4gCklsIHMnYWdpdCBzdXJ0b3V0IGRlIGRpc2N1c3Npb25zIGVudHJlIGV1eCBzdXIgbGEgcmVsYXRpb24gZW50cmUgbGEgcHN5Y2ggZXQgbGEgbWF0aXJlLCBvIGwgZGNvdXZyZSBxdSBzb250IHBhcnZlbnVzIGF2ZWMgdW4gYWNjb3JkIHJlbWFycXVhYmxlICBsYSBzdXBwb3NpdGlvbiBkZSBsJ2V4aXN0ZW5jZSBkJ3VuIHNldWwgbW9uZGUgZGFucyBsZXF1ZWwgbGEgcHN5Y2ggZXQgbGEgbWF0aXJlIHNlcmFpZW50IHVuZSBzZXVsZSBldCBtbWUgY2hvc2UuIApUaGUgbXVzaWMgbGluZSB1cCB3aWxsIGZlYXR1cmUgRHVtcHN0ZXIgUGhvZW5peCwgTWF0dHkgRG93bGluZywgUm9iIEN1cnJpZSwgQWxleCBNSCBhbmQgREogTG9uZ3RpbWUsIGFtb25nIG90aGVycy4gCkkgbG9va2VkIG91dCBhbmQgc2F3IG9uZSBvZiB0aGVtIHdhcyBpbiBhIHRyb2xsZXkgZnJvbSB0aGUgc2hvcHBpbmcgY2VudHJlLiAKRm9yIGV4YW1wbGUsIG1pZGRsZSBwYWlyLCBubyBkcmF3IGZhY2luZyBhIGJpZyBkb3VibGUgYmFycmVsIGlzIGEgcHVyZSBibHVmZmNhdGNoZXIuIApTb21lIG9mIHVzIHdvdWxkIGJyaW5nIGFkdWx0IGJldmVyYWdlcywgb3RoZXJzIHdvdWxkIGJyaW5nIGNoaXBzIG9yIG90aGVyIHNuYWNrcywgYW5kIHdlIHdvdWxkIGJyaW5nIGFsbCB0aGUgcG9rZXIgYWNjZXNzb3JpZXMuIApIaXMgYmFua3JvbGwgd2FzIGEgbW9kZXN0ICQ0MDAgYnV0IHdpdGhpbiBkYXlzIGhlIGhhZCB3b24gJDYwJzAwMCBpbiBhIHNldmVuIGNhcmQgc3R1ZCB0b3VybmFtZW50LiBBbmQgc28gaXQgYmVjYW1lLiBHb29kYnllIExhdyBTY2hvb2wsIEhlbGxvIFBva2VyLi4gCldlIGhhZCBhbXBsZSBzdGFmZmluZyBzbyB0aGF0IGlmIHRoZXJlIHdlcmUgYW55IGlzc3Vlcywgd2UgY291bGQgcmVwbGFjZSBhIGNhcmVnaXZlciBpbiBtaW51dGVzLiBBbGwgb2YgdGhlc2UgdGhpbmdzIGFuZCBtb3JlIHdlcmUgaW4gZXZlcnkgc3RhbmRhcmQgb3BlcmF0aW5nIHByb2NlZHVyZSBmb3IgZXZlcnkgQ0RDIGFyb3VuZCB0aGUgd29ybGQuIApUbyBjbGFyaWZ5LCB0aGlzIHdhcyBteSBmaXJzdCBncmFuZCBtYWwgc2VpenVyZS4gTXkgZmF0aGVyIGhhZCB0aGVtIHByaW9yLCBhbmQgbXkgbW90aGVyIHdpdG5lc3NlZCBib3RoIGhpbSBoYXZpbmcgb25lIGFuZCBteXNlbGYgaGF2aW5nIG1pbmUuIApEYXMgUHJvc3RpdHV0aW9uIGphIGdydW5kc3R6bGljaCBzZXhpc3Rpc2NoIHNlaSwgd2VpbCBkaWUgS3VuZGVuIGZhc3QgYXVzc2NobGllbGljaCBNbm5lciBzZWllbiB1bmQgZGllIFNleGFyYmVpdGVySW5uZW4genVtIGdyb2VuIFRlaWwgRnJhdWVuICh1bmQgaGFsdCBlaW4gZ2VyaW5nZXIgVGVpbCBNbm5lciBmciBNbm5lcikuIEFuZGVyZSBLb25zdGVsbGF0aW9uZW4gZGVyIFNleGFyYmVpdCB3ZXJkZW4gZWJlbnNvIHdpZSBkaWUgImdsY2tsaWNoZW4gSHVyZW4iIGFscyB2ZXJuYWNobHNzaWdiYXJlcyBSYW5kcGhub21lbiBiZXRyYWNodGV0LiBFcyBnaWJ0IG5hdHJsaWNoIGtlaW5lIHZlcmxzc2xpY2hlbiBTdGF0aXN0aWtlbiBmciBpcmdlbmRlaW5lIEF1c3NhZ2UgYmVyIGRpZSB0YXRzY2hsaWNoZSBWZXJ0ZWlsdW5nLi4gCkhvd2V2ZXIsIG92ZXIgdGhlIGxvbmcgcnVuICAgc2F5IGEgbWlsbGlvbiBoYW5kcyBvciBzbyAgIHRoZSBBbW91bnQgV29uIGFuZCBFViBsaW5lcyBmb3IgdGhpcyBzaXR1YXRpb24gd2lsbCB0ZW5kIHRvIGNvbnZlcmdlLiBBcyBzb21lIHdvdWxkIHNheSwgdGhlIHJlc3VsdHMgYW5kIGV4cGVjdGF0aW9ucyBzaG91bGQgZXZlbnR1YWxseSBldmVuIG91dC4gSGlzIGxpbmUgb2YgY2FsbGluZyBmcm9tIGJ1dHRvbiwgY2FsbHMgQTg4LCBjaGVjayB0dXJuIChlbGltaW5hdGVzIEEgdHdvIHBhaXIgYW5kIHRyaXBzKSwgcml2ZXIgOSBvZiBkaWFtb25kcy4gClJldmlldyBvZiBIb21lIEF3YXkgZnJvbSBIb21lIDIKMTYpICJPcmdhbmljIG1lcmN1cnkgY29tcG91bmRzIHN1Y2ggYXMgbWV0aHlsbWVyY3VyeSB0aGF0IGFyZSBmYXQgc29sdWJsZSBhbmQgcmVhZGlseSBjcm9zcyB0aGUgYmxvb2QgYnJhaW4gYmFycmllciBhcmUgZXNwZWNpYWxseSBkYW1hZ2luZyB0byBkZXZlbG9waW5nIG5lcnZvdXMgdGlzc3Vlcy4iCkkgZG9uIHRoaW5rIHZlcmJvc2l0eSBpcyBzdWNoIGEgaG9seSB0ZXN0IHRob3VnaC4gT25lIG1pZ2h0IGFyZ3VlIHRoYXQgdXNpbmcgbmFtZXMgbGlrZSBzdHJpbmdfY29tcGFyZSBpbnN0ZWFkIG9mIHN0cmNtcCBhZGRzIHRvIHRoZSByZWFkYWJpbGl0eSByYXRoZXIgdGhhbiB0YWtpbmcgYXdheSBmcm9tIGl0IGFuZCBhbHNvIG5vdGUgdGhhdCBDIGhpbGFyaW91c2x5IHNob3J0IG5hbWVzIGZvciBtYW55IG9mIGl0cyBjb3JlIGZ1bmN0aW9ucyBkYXRlIGZyb20gdGhlIHRpbWUgdGhhdCBDIGlkZW50aWZpZXJzIGNvdWxkIGJlIG5vIGxvbmdlciB0aGFuIDYgY2hhcmFjdGVyczsgYXMgaW4gdGhleSBjb3VsZCBiZSBsb25nZXIgYnV0IHRoZSBjb21waWxlciB3b3VsZCBqdXN0IHRocm93IHRoZSByZXN0IGF3YXkgd2hpY2ggaXMgc28gcG9zc2libGUgZXZlbiB3b3JzZSB0aGFuIGp1c3QgdGhyb3dpbmcgYSBwYXJzZSBlcnJvci4KT3hmb3JkIFByb2Zlc3NvciBJZGVudGlmaWVzIEFmcmljYSBhcyBhIE5ldyBJbnZlc3RtZW50IEhvdCBTcG90CkRlcGVuZGluZyBvbiB5b3VyIGxldmVsIG9mIGN1cmlvc2l0eSwgeW91IG1pZ2h0IGV4cGxvcmUgd2hhdCB0dXJucyB5b3Ugb24gYnkgdGFsa2luZyBhYm91dCBpdCBvbmxpbmUsIG9yIGluIHBlcnNvbiwgd2l0aCBvdGhlcnMgd2hvIGFyZSBqdXN0IGFzIGN1cmlvdXMuIFNwYW0sIGZha2VycywgcHJvc3RpdHV0ZXMsIHlvdSBuYW1lIGl0ISBUYWtlIGEgbG9vayBhbmQgZGVjaWRlIGZvciB5b3Vyc2VsZi4gClllcywgaXQgdG9vayBhIGxvbmcgdGltZSBmb3IgdGhlbSB0byBnZXQgaGVyZSwgYnV0IG92ZXIgdGhlIHBhc3QgZGVjYWRlIHdhdGVycHJvb2YgUG9rZXIgVGFibGUgRmVsdHMgaGF2ZSBiZWVuIGV4dHJlbWVseSBwb3B1bGFyLiBXaGF0IHRoZSBjb21wYW55IGRvZXMgaXMgdGhleSBwbGFjZSBhIHdhdGVycHJvb2YgY29hdGluZyBvbiB0aGUgYm90dG9tIG9mIHRoZSBjbG90aC4gVGhpcyBoZWxwcyByZWR1Y2UgdGhlIGlzc3VlcyBvZiBzcGlsbHMgYW5kIGFsbG93cyB5b3UgdG8gY29udGludWUgcGxheSB3aXRoIGEgc2ltcGxlIHdpcGUgb2YgdGhlIHRhYmxlLiAKSSBsb29rIGZvcndhcmQgdG8gaGVscGluZyB5b3UgbG9vayBhbmQgZmVlbCBhbWF6aW5nLi4gCkRhemVkbnN1YmR1ZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwpUaGVuIHRoZXkgZ290IE1vbGx5LiAKSSBjb3VsZG4gdHJhaW4gYW5kIGluY3JlYXNlIG15IHNwZWVkIG9uIGEgZGVmaWNpdC4gCk5vIHdvcnJpZXMsIEkgYmUgYSBwZXN0IGJlZm9yZSBkaXNoaW5nIG91dCAkMTAwL21vbnRoIHRvby4gVEJIIEkgZGlkbiBrbm93IHdoYXQgSSB3YXMgZXhwZWN0aW5nLiAKVW5pdGVkIFN0YXRlcyBEZXBhcnRtZW50IG9mIHRoZSBUcmVhc3VyeQpKdXN0IGFubm95aW5nLCB3aXNoIGl0IHdvdWxkIGJlIGZpeGVkIHRvIGJlIHdvcmthYmxlICAgSSBnZXQgd2hhdCB0aGUgZGV2cyBhcmUgZ29pbmcgZm9yLCBidXQgamVleiBpdCBmcnVzdHJhdGluZyB0byBzZWUgYSBib2R5IGRlY29tcG9zZSBpbiBmcm9udCBvZiB5b3UgYmVjYXVzZSB5b3UgY2FuIGdldCB0byBpdCB0byBncmFiIHN0dWZmIGZyb20gdGhlIGludmVudG9yeSBiZWNhdXNlIHlvdSBrZWVwIGdldHRpbmcgdGVsZXBvcnRlZCB1cC4KVGhlIGRyYW1hIGhhcyBhbHNvIGJlZW4gbm9taW5hdGVkIGZvciBlaWdodCBPc2NhcnMgYXdhcmRzLCBpbmNsdWRpbmcgQmVzdCBQaWN0dXJlLCBCZXN0IEFjdG9yLCBCZXN0IEFjdHJlc3MsIEJlc3QgU3VwcG9ydGluZyBBY3RvciwgU291bmQgTWl4aW5nLCBBZGFwdGVkIFNjcmVlbnBsYXksIE9yaWdpbmFsIFNvbmcgYW5kIENpbmVtYXRvZ3JhcGh5LgpJIGxvdmVkIG15IHByZWduYW5jaWVzIHNoZSBjb21wbGFpbmVkIHNvIG11Y2ggYWJvdXQgYSBsaXR0bGUgbmVhc2VhIHRoYXQgaSB3YXMgd29ycmllZCB0aGV5IHdlcmUgZ29pbmcgdG8gdGFrZSBoZXIgYmFieSB1cG9uIGJpcnRoLiAKSWYgdGhlIGNhc2lubyB0aGVuICJidXN0cyIgb24gdGhlIHNhbWUgaGFuZCwgdGhlIHBsYXllciBzdGlsbCBsb3Nlcy4gCkNhbiByZWFsbHkgdGlyZSB5b3Ugb3V0LCBNYWNoZXNuZXksIHRoZSBmb3JtZXIgQnJhbXB0b24gQmF0dGFsaW9uIGFuZCBwcm8gc3RvcHBlciwgc2FpZC4gc3BvcnQgaXMgc3VwcG9zZWQgdG8gYmUgZnVuLiBJZiB5b3Ugd2FudCB0byBtYWtlIGl0IGEgdGhpbmcgeW91IGRvIGV2ZXJ5IGRheSBhbmQgeW91ciBsaXZlbGlob29kLCB5b3UgbmVlZCBwYXNzaW9uIGZvciBpdC4gT2J2aW91c2x5LCB5b3Ugd2FudCB0byBwbGF5LCBidXQgd2UgZ2V0IHRoZXJlLiBZb3UgZ290IHRvIGhhdmUgYSBnb29kIGF0dGl0dWRlIGFuZCBsb29rIGF0IHRoZSBicmlnaHRlciB0aGluZ3MuIFlvdSBnZXQgdG8gY29tZSB0byB0aGUgcmluayBhbmQgcHV0IG9uIGEgS25pZ2h0cyBqZXJzZXkuCiJJIGFsd2F5cyBzYXkgdGhlIGJpZ2dlc3QgZ2FtZSBvZiB0aGUgc2Vhc29uIGlzIHRoZSBuZXh0IHdlZWssIiBIb3Bzb24gc2FpZC4gIkluIGZvb3RiYWxsLCB3ZSBjb3VudCBvdXIgcG9rZXIgY2hpcHMgdXAgYXQgdGhlIGVuZCwgYnV0IHRoaXMgaXMgYSBiaWcgZm9vdGJhbGwgZ2FtZS4gT3VyIGtpZHMgdW5kZXJzdGFuZCBpdCdzIGEgYmlnIGZvb3RiYWxsIGdhbWUuIApUcnVlIGZhY3Qgd2UgaGF2ZSBhIHJhY2lhbCBiaWFzIHdoZW4gaXQgY29tZXMgdG8gQW1lcmljYW4gcG9saWNpbmcuIEJsYWNrIHBlb3BsZSkgYnV0IGluIHJlYWxpdHkgdGhleSBhcmUganVzdCBtb3JlIHBvbGljZWQuIFNvIGlkaW90cyBsaWtlIHRvIGJyaW5nIHVwIGFycmVzdCBzdGF0aXN0aWNzIGV2ZW4gdGhvdWdoIHRoYXQgaXMgYSBtaXNsZWFkaW5nIGZhY3QuIApJcyBIb3cgSSBTYXZlIE15IExpZmUgRXhjZXJwdCBGcm9tIEFteSBCLiBTZWRlcmVyLCBNRCwgYXNrcyBpZiB3ZSBncm93aW5nIGRlc2Vuc2l0aXplZCB0byB0aGUgb3Bpb2lkIGVwaWRlbWljLgoiSW4gcmVhbGl0eSB0aGV5IFt0aGUgaG9zcGl0YWxzXSBhcmUgcGFydGljaXBhdGluZyBpbiBpbmZsaWN0aW5nIHNpZ25pZmljYW50IGxldmVscyBvZiBoYXJtIG9uIHRoZSBjb21tdW5pdHksIGFuZCBzb21lIG9mIHRoYXQgaGFybSBpcyBnb2luZyB0byBjb21lIGJhY2sgYW5kIHRoZXkgYXJlIGdvaW5nIHRvIGhhdmUgdG8gcGljayB1cCB0aGUgY29zdCwiIGhlIHNhaWQuIApUaGlzIGlzbnQgdGhlIDE5NTAgd2hlbiBvbmUgY291bGQgcmFpc2UgYSBmYW1pbHksIG93biBhIGhvbWUgYW5kIHNhdmUgZm9yIHJldGlyZW1lbnQgb2ZmIG9uZSBpbmNvbWUuIApXaHkgVFYgcG9rZXIgY2FuIG1ha2UgeW91IHdlYWx0aHkhCkl0IGlzIGJlY29taW5nIHRoZSBiYXNpcyBmb3IgY29ycG9yYXRlIGludmVzdG1lbnQgaW4gYSBncm93aW5nIGluZHVzdHJ5IGFuZCBhIG1vdGl2YXRpb24gZm9yIHBsYXllcnMgdG8gZW50ZXIgbnVtZXJvdXMgdG91cm5hbWVudHMgdGhhdCBvZmZlciBtaWxsaW9ucyBvZiBkb2xsYXJzLiBTb2Z0d2FyZSBpcyBiZWluZyBkZXZlbG9wZWQgZm9yIGhhbmQgaGVsZCBkZXZpY2VzIGFuZCBjZWxsIHBob25lcyB0byBwbGF5IHBva2VyLiAKVGhleSB3YW50ZWQgdG8gc3BvaWwgdGhlIHBpY25pYywga2lsbCBpdCBvZmYgZm9yIGdvb2QuIApDYXJib24gaXNzdWUgaXMgZGl2aXNpdmUgYW5kIGEgY2hhbGxlbmdlIHRvIGJ1c2luZXNzZXMgYW5kIGhvdXNlaG9sZHMgYWxpa2UgaGF2aW5nIHRvIGFkanVzdCB1c2Ugb2YgY2FyYm9uIGZ1ZWxzIGJ1aWx0IGludG8gdGhlaXIgc3RydWN0dXJlcyBhbmQgbGlmZXN0eWxlcy4gClllcyEgSXQncyBtb3JlIGxpa2VseSB0aGF0IHRoZSBjaGlsZCB3b3VsZCBoYXZlIHN0cmFpZ2h0IGhhaXIsIGJ1dCBpdCdzIGFsbCBhYm91dCB0aGUgZ2VuZXMuIExpa2VseSBib3RoIG9mIHRoZSBzdHJhaWdodCBoYWlyZWQgcGVvcGxlIGhhdmUgc3RyYWlnaHQgaGFpciBkb21pbmFudCBnZW5lczsgaWYgdGhhdCdzIHRydWUsIHRoZW4gdGhlcmUncyBhYm91dCBhIDI1JSBjaGFuY2UgdGhhdCB0aGUgY2hpbGQgd291bGQgaGF2ZSBjdXJseSBoYWlyLiAKSXQgaXMgc29tZXRoaW5nIHRoZXkgbGF0Y2ggb250byBhbmQgZ2l2ZXMgdGhlbSBhIHNlbnNlIG9mIGNvbnRyb2wgb3ZlciBpdC4gYWxsIHRoZXkgaGF2ZSB0byBkbyBpcyBwYXkgZm9yIHRoZSB0cmVhdG1lbnQgcGxhbiBhbmQgaW4gNiBvciAxMiB3ZWVrcywgdGhlIHByb2JsZW0gd2lsbCBiZSBzb2x2ZWQuIGFmdGVyIHllYXJzIG9mIGJhY2sgcGFpbiBhbmQgZ29pbmcgZnJvbSBkb2N0b3IgdG8gZG9jdG9yLCBzcGVjaWFsaXN0IHRvIHNwZWNpYWxpc3QsIHggcmF5IHRvIHVsdHJhc291bmQgdG8gTVJJIHRlc3QsIEkgY2FuIHVuZGVyc3RhbmQgaG93IGRlc3BlcmF0ZSBhbmQgdnVsbmVyYWJsZSB0aGV5IGFyZSBhbmQgaG93IHdvbmRlcmZ1bCBpdCBpcyB3aGVuIHNvbWVvbmUgZmluYWxseSBwcmVzZW50cyB0aGVtIHdpdGggYW4gYW5zd2VycGh5c2lvcyBhcmUgdG9vIGNvbnNlcnZhdGl2ZSB3aXRoIHRoaWVyIHRyZWF0bWVudHMgICB0aGV5IGxvdmUgdGhlIGVsZWN0cm8gbWFjaGluZSBiYXNlZCBtb2RhbGl0aWVzIHRvbywgYW5kIG9mdGVuIHdoZW4geW91IGdvIHRoZXkgd2lsbCBiZSBhZG1pbmlzdGVyZWQgYnkgYSBQVEEgKHBoeXNpb3RoZXJhcHkgYXNzaXN0YW50KS4gCjEuIERpdmVyc2lmaWNhdGlvbiBNb25vcG9seSBtYWtlcyBhIHRpbWUgaG9ub3JlZCBwb2ludCBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiBzcHJlYWRpbmcgeW91ciBpbnZlc3RtZW50cyBhY3Jvc3Mgc2V2ZXJhbCBjbGFzc2VzIG9mIHByb3BlcnR5IGFuZCBub3Qgc2xhdmlzaGx5IGZvbGxvd2luZyB0aGUgInNtYXJ0IG1vbmV5LiIgVGhlIGdhbWUgYmVzdCBpbnZlc3RtZW50cyBhcmUgdGhlIG9yYW5nZSBwcm9wZXJ0aWVzIChub3QgdGhlIGRhcmsgYmx1ZSBvbmVzLCBQYXJrIFBsYWNlIGFuZCBCb2FyZHdhbGssIGFib3V0IHdoaWNoIG1vcmUgaW4gYSBtb21lbnQpLiBCdXQgdGhlIGxvbmcgdGVybSB2YWx1ZSBvZiB0aGUgb3JhbmdlcyBpc24gYWx3YXlzIGNsZWFyOiBFbnRpcmUgZ2FtZXMgY2FuIGJlIHBsYXllZCBpbiB3aGljaCB0aGV5IGRvbiBwYXkgb2ZmLCBvciBhdCBsZWFzdCBub3QgaW4gdGltZSB0byBzdGF2ZSBvZmYgYmFua3J1cHRjeS4gVG8gYXNzdXJlIHN1Y2Nlc3MsIHlvdSBuZWVkIHRvIGhhdmUgbm90IG9ubHkgYSBwb3dlcmZ1bCBjb2xvciBncm91cCBidXQgYWxzbyB0d28gb3IgdGhyZWUgcmFpbHJvYWRzIHRvIGdlbmVyYXRlIGluY29tZSBhbmQgYSBmZXcga2V5IHByb3BlcnRpZXMgdG8gYmxvY2sgdGhlIGZvcm1hdGlvbiBvZiBnYW1lIGJ1c3RpbmcgZ3JvdXBzIGFnYWluc3QgeW91LiBUaGlzIGJsZW5kIHJlZHVjZXMgcmlzayBhbmQgaW1wcm92ZXMgdGhlIG9kZHMgb2Ygd2lubmluZy4yLiBNYW5hZ2VtZW50OiBUaGUgZ2FtZSBkcmlsbHMgaG9tZSB0aGlzIGxlc3NvbjogWW91IGNhbiB3aW4gaWYgeW91IHNpdCBvbiBjYXNoLCBqdXN0IGFzIHlvdSBjYW4gaG9wZSB0byByYXBpZGx5IGdyb3cgcmVhbCB3b3JsZCBhc3NldHMgaWYgeW91IHNldHRsZSBmb3IgdGhlIHJhdGVzIG9mIHJldHVybiB0aGF0IHRoZSBiYW5rcyBvZmZlci4gWW91IG5lZWQgdG8gdGFrZSBvbiByaXNrLiBJbiB0aGUgZ2FtZSwgdGhhdCBtZWFucyBjb252ZXJ0aW5nIGNhc2ggdG8gZGVlZHMgYW5kIGJ1aWxkaW5ncyB3aGlsZSByZXRhaW5pbmcganVzdCBlbm91Z2ggb2YgdGhvc2UgY29sb3JmdWwgYmlsbHMgdG8gcGF5IGZvciBiYWQgbHVjayAocGVuYWx0aWVzLCB0YXhlcywgc21hbGwgcmVudHMpLgpUaGlzIHdhcyBpbiBsaW5lIHdpdGggbW9zdCBvZiB0aGUgcXVvdGVzIEkgcmVjZWl2ZWQgZnJvbSBvdGhlciBsZWdpdGltYXRlIGNvbXBhbmllcyB3aGVuIEkgd2FzIHNob3BwaW5nIGFyb3VuZCBmb3IgY2xlYW5lcnMuIApJbnF1aXJlIGF0IHlvdXIgbG9jYWwgdHJhdmVsIGFnZW5jeS4gV2hvIHNheXMgeW91IG5lZWQgdG8gdHJhdmVsIGdyZWF0IGRpc3RhbmNlcyB0byBnZXQgbWF4aW11bSBlbmpveW1lbnQ/IElucXVpcmUgYXQgeW91ciBsb2NhbCB0cmF2ZWwgYWdlbmN5IHRvIHNlZSBpZiB0aGV5IG9mZmVyIGRlYWxzIG9uIGNpdHkgcGFja2FnZXMgaW4gYSBuZWFyYnkgdG93biBvciBjaXR5IChub3QgbW9yZSB0aGFuIDIgaG91cnMgdHJhdmVsIGZyb20geW91ciBob21lKS4gClRoZSBmdWVsIGVmZmljaWVudCBjYXIgaXMgbGlrZWx5IG1vcmUgZXhwZW5zaXZlIHRvIHB1cmNoYXNlIHRoYW4gYSBsZXNzIGZ1ZWwgZWZmaWNpZW50IGNhciwgaWYgeW91IGdvIGZ1bGwgRVYgdGhlbiBpdCB3YXkgbW9yZSBleHBlbnNpdmUgdG8gcHVyY2hhc2UuIEFsc28gcGF5IG1vcmUgZm9yIGluc3VyYW5jZSBwdXR0aW5nIG1vcmUgZGlzdGFuY2UvY29tbXV0ZXIgdHJhZmZpYyBpbnRvIHlvdXIgc2NoZWR1bGUsIGlmIHlvdSBpbiB0b3duIHlvdSBjb3VsZCB3YWxrL2Jpa2UvYnVzIGVhc3ksIHNhdmUgbW9uZXkgbm90IHBheWluZyBmb3IgcGFya2luZyBhbmQgbGVzcyBpbnN1cmFuY2UuLiAKSW50ZXJpb3IuIEluc2lkZS4gSGlkZGVuLiAKV2Uga25vdyBmb3IgY2VydGFpbiB0aGF0IHRoaXMgaGFuZCBpcyBub3QgY3VycmVudGx5IGdvb2QsIHNvIHdlJ2xsIGhhdmUgdG8gaGl0IG9uZSBvZiBvdXIgb3V0cyBpbiBvcmRlciB0byB3aW4gKG9yIGJsdWZmIHRoZSBndXkgb3V0KS4gClRoZSBiZXN0IHBhcnQ/IElmIHlvdSBkb24ndCB3YW50IHRvIHNoYXJlLCB0aGUgbWFjaGluZSBjYW4gYmUgbG9ja2VkIHRvIGFuc3dlciBvbmx5IHRvIHlvdXIgZmluZ2VycHJpbnQuIFRoZSBzbWFsbCwgZnVycnkgcm9ib3QgaXMgZGVzaWduZWQgd2l0aCBvbmUgcHVycG9zZTogImVuaGFuY2UgbGV2ZWxzIG9mIGNvbWZvcnQgYW5kIGZlZWxpbmdzIG9mIGxvdmUuIgpTZWxvbiBjZXR0ZSBwcm9jbGFtYXRpb24sICBMZXMgcG91dm9pcnMgcXUnZWxsZSBpbnN0aXR1ZSBzZXJvbnQgZm9ydHMgZXQgc3RhYmxlcywgdGVscyBxdSdpbHMgZG9pdmVudCB0cmUgcG91ciBnYXJhbnRpciBsZXMgZHJvaXRzIGRlcyBjaXRveWVucyBldCBsZXMgaW50cnRzIGRlIGwnRXRhdC4gClNpZGVub3RlOiBoZSBhbHNvIG1hZGUgc3VyZSB0aGUgYnVzYm95cyB3ZXJlIHRha2VuIGNhcmUgb2YgYnkgdGhlIHNlcnZlcnMuIElmIHRoZXkgZGlkbnQgdGlwIHVzIG91dCBhdCBuaWdodCwgaGUgd291bGQgb3JkZXIgdXMgdG8gaWdub3JlIHRoYXQgc2VydmVyIHRhYmxlcyB0aGUgbmV4dCBuaWdodCwgdG8gbGV0IHRoZW0gYnVzIHRoZWlyIG93biB0YWJsZXMgZm9yIGEgbmlnaHQuIApNeSBpbmNvbWUgaXMgbW9yZSB0aGFuIGRvdWJsZSB0aGF0IG9mIHRoZSBhdmVyYWdlIGZhbWlseSBpbiB0aGUgVVMuIApBbmQgY2FuIHdlIHRhbGsgYWJvdXQgdGhlIGZhY3QgdGhhdCBPUCB3YXMgZGlyZWN0aW5nIHBlb3BsZSB0byBoZXIgcHJvZmlsZSBzbyB3ZSBjYW4gc2VlIHNvbWUgKGZha2UgYW5kIHN0b2xlbikgcGljdHVyZXMgb2YgImhlciIgZG9nPyBTbyBsb3RzIG9mIHBlb3BsZSB3b3VsZCBlbmQgdXAgb24gaGVyIHByb2ZpbGUgd2l0aCBubyBpbml0aWFsIGludGVudCBvbiBzcGVjaWZpY2FsbHkgc2VhcmNoaW5nIG9mIGRpcnQgb24gT1AuIApUaGUgcGlsbCBpcywgb2YgY291cnNlLCBnaXZlbiBieSBtb3V0aC4gVGhlIHRyYW5zIGRlcm1hbCBnZWwgdHlwaWNhbGx5IGNvbWVzIGluIGEgc3BlY2lhbCBwZW4gdGhhdCBzcXVlZXplcyBvdXQgYSBzcGVjaWZpYyBhbW91bnQgb2YgbWVkaWNhdGlvbiBvbnRvIGFuIGFwcGxpY2F0b3IuIApJbiBCZWxnaSBpcyBlciBudSBlZW4gam9uZ2Ugdm9ldGJhbGxlciB2YW4gMjAgamFhciBkaWUgemlqbiBvcGxlaWRpbmcgYmlqIFBTViBnZW5vdGVuIGhlZWZ0IGVuIGJpaiB3aWUgQUxTIHdlcmQgdmFzdGdlc3RlbGQuIE1ldCBQU1YgcGxhYXRzIHZpbmRlbiBvbSBtZXQgYWxsZSBpbmdlemFtZWxkZSBtaWRkZWxlbiBlZW4gYmVoYW5kZWxpbmcgaW4gQ2hpbmEgdGUga3VubmVuIGFma29wZW4uIERlIGJyb2VyIHZhbiBKYW4gZGVlZCBlZW4gb3Byb2VwIHZpYSBkZSBCZWxnaXNjaGUga3JhbnRlbiBhYW4gYWxsZSBpbnZsb2Vkcmlqa2UgbWVuc2VuLCBnZWxkIHNwZWVsZGUgb29rIGdlZW4gZW5rZWxlIHJvbC4gClRoZSBuZXh0IHdlZWtzLCBpbGwgaW5jcmVhc2Ugd2VpZ2h0IHVudGlsIEkgZmluZCBhIDNSTSwgYW5kIHJlcGVhdCB0aGF0IGFnYWluIGZvciBhIDFSTS4gClRoZSBzdG9yaWVzIEphbmdvIGhhcyB0b2xkLiAKSSBjYW4gcmVhZCBjb21tZW50cyBleHBsYWluaW5nIChhbHNvIHdpdGggdmVyeSB3ZWFrIHNjaWVudGlmaWMgYmFzaXMsIGxpa2UgY29tbWVudCBuby4gClNhZGx5IHBlb3BsZSBicm91Z2h0IHVwIGluIHRyYWRpdGlvbmFsIENoaW5lc2UgZmFtaWxpZXMgdGVuZCB0byBiZSBzZWNyZXRseSByYWNpc3QuIApUaGlzIGlzIGEgZ2xvYmFsIHByb2JsZW0uIE1vcmU+PkRpcnR5IFBvbGl0aWNzIENsZWFudXA6IE5pY2t5IEhhZ2VyIFNldHRsZXMgV2VzdHBhYyBEaXNwdXRlVW5kZXIgdGhlIHNldHRsZW1lbnQgYWdyZWVtZW50IGFubm91bmNlZCB0b2RheSwgV2VzdHBhYyB3aWxsIGJlIHNpZ25pZmljYW50bHkgdGlnaHRlbmluZyBpdHMgY29udHJhY3R1YWwgdGVybXMgaW4gcmVsYXRpb24gdG8gdGhlIHJlbGVhc2Ugb2YgY3VzdG9tZXIgaW5mb3JtYXRpb24gdG8gZ292ZXJubWVudCBhZ2VuY2llcywgaW5jbHVkaW5nIHRoZSBQb2xpY2UgV2VzdHBhYyBoYXMgYXBvbG9naXNlZCB0byBNciBIYWdlciBmb3IgcmVsZWFzaW5nIGhpcyBpbmZvcm1hdGlvbiBhbmQgaGFzIGFncmVlZCB0byBwYXkgaGlzIGNvc3RzIGFuZCBjb21wZW5zYXRpb24uIE1vcmU+Pi4gCkFsc28gc3Vydml2ZWQgYnkgaGlzIHNpc3RlciBOb3JlZW4gTW9vcmUsIG5pZWNlcyBhbmQgbmVwaGV3LCBBZGVsZSwgRGViYmllIGFuZCBEYXZpZCwgc2lzdGVyIGluIGxhdyBMb3JuYSBTY290dCwgbmllY2UgYW5kIG5lcGhldywgQW5nZWxhIGFuZCBEYXZpZCwgY291c2luIE5vcm1hIFdleWVtYXJzIGFuZCBoZXIgZGF1Z2h0ZXIgS2F0aHkgd2l0aCBoZXIgY2hpbGRyZW4gQ2hhc2UgYW5kIFN1bGx5LiBEYXZpZCBpcyBwcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cyBEYXZpZCBhbmQgR2VvcmdpbmEgU2NvdHQsIGhpcyBhdW50IGFuZCB1bmNsZSBGcmVkIGFuZCBTYXJhaCBDdW1taW5ncywgYW5kIGhpcyBicm90aGVycyBUaG9tYXMgYW5kIEppbSBTY290dC4gCkhlYXRzZWVrZXJkaiB1Ck51a2tlbSB1CldhcyBpdCBvdmVyIHRoZSBHRk0gb3IgdGhlIHZpc2EgYmVpbmcgcG9zdGVkPyBJIGtlcHQgc2VlaW5nIHBlb3BsZSBzYXkgdGhlIHZpc2EsIGJ1dCBJIHN1c3BlY3QgaXQgYW5vdGhlciBHRk0uIElmIHRoYXQgdGhlIGNhc2UsIHBlb3BsZSBzaG91bGQgZGlyZWN0IGFueSBuZWdhdGl2aXR5IGF0IEtyZWVueS4gCllvdSBjYW4gZmluZCBicmFuZCBuYW1lcyBsaWtlIEJpY3ljbGUsIFJveWFsLCBhbmQgdmFyaW91cyBvdGhlcnMgdGhhdCBtYWtlIGdhbWUgdGltZSB0b25zIG9mIGZ1bi4gSG93ZXZlciwgdGhlcmUgYXJlIGtub2NrIG9mZnMgYXMgd2VsbCB0aGF0IHdpbGwgYmUgZWFzaWx5IHJpcHBlZCBvciBiZWNvbWUgc3RhaW5lZCBhbmQgZGlydHkuLiAKSSBkb24ndCBtZWFuIHRoaXMgdG8gaW1wbHkgdGhhdCB0aGVyZSdzIGFueXRoaW5nIHdyb25nIHdpdGggd2hhdCB5b3UgYW5kIHlvdXIgaHVzYmFuZCBkbyBhbmQgYWdyZWUgb24sIGp1c3QgdGhhdCB0aGUgY29ucyBtaWdodCBiZSBkaWZmZXJlbnQgZGVwZW5kaW5nIG9uIHRoZSBjb3VwbGVzLgpJdCB0b3RhbGx5IGZpbmUgaWYgeW91IHdhbm5hIGJlIG92ZXJ3ZWlnaHQuIApQbGF5aW5nIGNhcmQgc29vdGhzYXllciAgSWYgeW91IHJlYWxseSB3YW50IHRvIGtub3csIGhvdyB0byBjaGVhdCBpbiBwb2tlciwgc3RhcnQgcHJhY3RpY2luZyB0aGUgY2FyZHMgZ2FtZSB3aXRoIHRoZSBwbGF5aW5nIGNhcmQgc29vdGhzYXllciBhcyBpdCBpcyBhIHVzZWZ1bCBzcHkgZGV2aWNlIHRvIG1ha2UgeW91IGFibGUgdG8gd2luIHlvdXIgcG9rZXIgZ2FtZS4gWWVzLCBvYnZpb3VzbHkgaXQgY2FuIGhlbHAgeW91IHRvIHdpbiB5b3VyIHBva2VyIGdhbWUgd2l0aG91dCBoYXZpbmcgYW55IHByaW9yIGV4cGVyaWVuY2Ugb3IgdHJhaW5pbmcuClRoZSBpcm9ueSBvZiByZXByZXNlbnRpbmcgeW91cnNlbGYgaW4gZmFtaWx5IGxhdyBsaXRpZ2F0aW9uCkF0IHRyaWFsLCB0aGUgdGF4cGF5ZXIgd2FzIHVuYWJsZSB0byBwcm9kdWNlIGEgVDIyMDAuIFRoZSBDUkEgaGFzIHN0YXRlZCB0aGF0IGl0IGV4cGVjdHMgZW1wbG95ZXJzIHRvIGNvbXBsZXRlIGEgVDIyMDAgc2l0dWF0aW9ucyB3aGVyZSB0aGUgZW1wbG95ZWVzIGhhdmUgcmVhc29uYWJsZSBncm91bmRzIHRvIG1ha2UgdGhlIHJlbGF0ZWQgY2xhaW1zIGhvd2V2ZXIsIGl0IHdvdWxkIG5vdCBleHBlY3QgYW4gZW1wbG95ZXIgdG8gY29tcGxldGUgdGhlIGZvcm0gaWYgdGhlcmUgd2FzIGV4cHJlc3Mgb3IgaW1wbGllZCByZXF1aXJlbWVudCBmb3IgdGhlIGVtcGxveWVlIHRvIHN1cHBseSBhbmQgcGF5IGZvciB0aGUgc3VwcGxpZXMuCk1vZWxsZXIgR3J1bmRsYWdlbiBkZXIgRWxla3Ryb3RlY2huaWsgUERGIEtpbmRsZSBpbi4gSXBhZCBiY2hlciBsZXNlbiBNb2VsbGVyIEdydW5kbGFnZW4gZGVyIEVsZWt0cm90ZWNobmlrLCBlYm9vayBkb3dubG9hZCAuIFlvdSBtYXkgZHJhdyB0aGlzIGVib29rLCBpIGNvbnRyaWJ1dGUgZG93bmxvYWRzIGFzIGEgcGRmLCBhbWF6b25keCwgd29yZCwgdHh0LC4gCkludml0ZSBhbGwgeW91ciBzaW5nbGUgZnJpZW5kcyB3aG8gYXJlIGluIHRoZSBzYW1lIGJvYXQuIApUaGVuIHRoZSBjaGluIGFuZCBsaXAgbXVzY2xlcy4gClNvdXJjZXMgc2FpZCBPdHRhd2EgbWFkZSBhIG1ham9yIDExdGggaG91ciBwdXNoIGluIGhvcGVzIG9mIHNlY3VyaW5nIGVub3VnaCBjb3VudHJ5IHdpZGUgc3VwcG9ydCB0byBib29zdCB0aGUgQ1BQIGFuZCBzdWdnZXN0ZWQgUHJpbWUgTWluaXN0ZXIgSnVzdGluIFRydWRlYXUgd2FzIGludm9sdmVkIGluIHRoZSBleHRyYSBlZmZvcnQuCkNhcmQgcm9vbXMgZHJhdyBzb21lIHJvdWdoIGNoYXJhY3RlcnMuIApDbGluZSBhbmQgZmFtaWx5IHdlcmU6IE1yLiAKV2hhdCBnb2FsIHlvdSBhcmUgc2V0dGluZyBhbmQgd2h5LiAoSSB3YW50IHRvIHJ1biBhIDVLIHNvIEkgaW5jcmVhc2UgcGh5c2ljYWwgZml0bmVzcy4pClRoZSBwcm9ibGVtIGlzIHRoYXQgdGhlIHF1ZXN0aW9uIGlzIGluaGVyZW50bHkgc3ViamVjdGl2ZSwgYW5kIHByb25lIHRvIGludm9rZSBiaWFzZXMuIFdoYXQgZG9lcyBicnV0YWwgbWVhbj8gSG93IGlzIHRoaXMgaW5mbHVlbmNlZCBieSBsYW5ndWFnZXMgeW91IGF3YXJlIG9mLiBZb3VyIGZvbGxvdyB1cCBxdWVzdGlvbnMgZ2l2ZSBzb21lIGNsdWVzLgpGb3IgZXhhbXBsZSwgaWYgSSdtIGMvciB0aGUgZmxvcCB3aXRoIG5vdGhpbmcgSSdtIGRvaW5nIHNvIGJlY2F1c2UgdmlsbGFpbiBpcyBjYmV0dGluZyBldmVyeSBmbG9wIGFuZCBoZSdzIG9wZW5pbmcgd2lkZSB1c3VhbGx5IGZyb20gbGF0ZSBwb3NpdGlvbi4gCldhdGNoZWQgdGhlIHJlcGxheSBhbmQgeWVwLCBzY3Jld2VkIGhpbSBvdmVyIHByZXR0eSBoYXJkLiBTYXcgaGltIGNoYXNlIG1lIG91dCBhbmQgdGhlbiBsb29rIHdvcnJpZWRseSBhdCBoaXMgdmVoaWNsZSwgdHJ5IGl0LCBnZXQgb3V0IGFuZCBqdXN0IHN0YXJlIGF0IHRoZSBicmlkZ2UgKGFuZCBsaWtlbHkgdGhlIHN1cGVyIGZhciBjaXJjbGUpLCBiZWZvcmUgaGUgd2FzIG91dCBvZiByZXBsYXkgZGlzdGFuY2UuCkxhc3QgYnV0IG5vdCBsZWFzdCBJIHdvbmRlciBpZiB0aGVyZSB3b3VsZCBub3QgYmUgYSBiZXR0ZXIgdGltaW5nIHRvIGdldCBhIHNreSB0byBoYXZlIG1vcmUgY29udHJhc3QgdG8gdGhlIHNreWxpbmUuIFRoZSBjbG91ZHMgb24gdGhlIHRvcCBlZGdlIGxvb2sgaW50ZXJlc3RpbmcgZW5vdWdoIGJ1dCBhcmUgc28gbW9ub3Rvbm91cyB0b3dhcmRzIHRoZSBidWlsZGluZyB0b3BzL2hvcml6b24gdGhhdCB0aGV5IGxhY2sgaW1wYWN0IG9uIHRoZSB3aG9sZSBpbWFnZS4gQW5kIHNvIGRvZXMgdGhlIHVuaWZvcm1pdHkgb2YgdGhlIHdhdGVyLiBUaGVyZSBpcyBubyBhZGRlZCB2YWx1ZSB0byB0aGUgaW1hZ2UgYnkgc2hvd2luZyBzbyBtdWNoIHdhdGVyLiBGcm9tIHRoZSBmcmFtaW5nIHBvaW50IG9mIHZpZXcgSSBhbSBub3Qgc3VyZSBpZiBpdCB3b3VsZCBub3QgaGF2ZSBhIGhpZ2hlciBpbXBhY3QgaWYgbGVzcyB3YXRlciBhbmQgbW9yZSBza3kgd2FzIHZpc2libGUuIE9yIGdlbmVyYWxseSBhIHRpZ2h0ZXIgY3JvcCB0byBleHBvc2UgdGhlIGRlbnNpdHkgb2YgdGhlIGJ1aWxkaW5ncyByYXRoZXIgdGhhbiB0cnlpbmcgdG8gc2hvdyB0aGF0IHdpZGUgb2YgYW4gYW5nbGUuCkkgdGhpbmsgdGhhdCBhIGxvdCBvZiBwbGFjZXMgd2lsbCBsb29rIGRpZmZlcmVudGx5IHVwb24ganVzdCBwbGF5aW5nIGNhcmRzIHRoYW4gdGhleSB3b3VsZCBicmluZ2luZyBjaGlwcywgd2hpY2ggaW1wbGllcyBnYW1ibGluZyBpbiBhIHdheSB0aGF0IHJlY29yZGluZyBwb2ludCB0b3RhbHMgZm9yIGdpbiBydW1teSBvciBzb21ldGhpbmcgbWlnaHQgbm90LiBCdXQgdGhhdCdzIGp1c3QgbXkgZ3Vlc3MuCjkgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ28uIApEZSBtdWx0aXBsaWVyICBsJ2luZmluaSBsZXMgcGxhaXNpcnMgdmd0YXV4LiBFbGxlIG5vdXMgZG9ubmUgdnJhaW1lbnQgdG91dGVzIGxlcyBjbHMgcG91ciBjZWxhLiAKSSBhbSB0YWtpbmcgaXQgY29tcGxldGVseSB0byBvbmUgcGxhY2Ugd2hlcmUgaXQgc2hvdWxkIGJlIGFuZCBub3QgYWxsIG92ZXIgdGhlIFVQLiAKU3Bhcmt5Y2F0OTkgdQpXZSBtYXkgbGVhcm4gdGhhdCB0aGUgY291cnQgaXMgaWxsZWdpdGltYXRlLiBUaGUgY2lyY3Vtc3RhbmNlcyBvZiBLZW5uZWR5cyByZXRpcmVtZW50IGFyZSBzdGlsbCBzdXNwaWNpb3VzLgpJIHRoaW5rIEkgc2xvd2x5IGdldHRpbmcgYmV0dGVyLCBhbmQgbWF5YmUgc3BlYWtpbmcgbW9yZSBpbiBmcmVuY2ggd2lsbCBoZWxwIG15IGNvbmZpZGVuY2Ugd2l0aCBzcGVha2luZyBpbiBnZW5lcmFsLCBiZWNhdXNlIEkgbm90IGNvbmZpZGVudCBzcGVha2luZyBvdXQgbG91ZCBpbiBlbmdsaXNoIGVpdGhlci4uIApUaGVzZSBpZGlvdHMgaGF2ZSBubyBpZGVhIHRoYXQgYWxsIHRoZXkgYXJlIGRvaW5nIGlzIGp1bXBpbmcgZGVlciBmcm9tIHNwb3QgdG8gc3BvdCwga2VlcGluZyB0aGVtIG9uIHRoZWlyIGZlZXQuIE1vc3QgaHVudGVycyB0aGF0IG1vcm5pbmcgc2hvdCBhIGJ1Y2suIE15IGJ1ZGR5IGdvZXMgYmFjayB0byB0aGUgY2hlY2sgc3RhdGlvbiB3aXRoIGhpcyBhbmQgYW5vdGhlciBndXkgYnVja3MgaW4gdGhlIGJhY2sgb2YgdGhlIHRydWNrLiAKQmUga2luZCwgYmUgcmVzcGVjdGZ1bCwgYmUgc3VwcG9ydGl2ZS4gUmVtZW1iZXIgdGhlIGh1bWFuIGFuZCByZW1lbWJlciB0aGF0IG1hbnkgcG9zdGVycyBoZXJlIGFyZSBkZWFsaW5nIHdpdGggZGlzb3JkZXJlZCBwZXJzb25hbGl0aWVzIGFuZCBkaXNvcmRlcmVkIHVwYnJpbmdpbmdzLCBhbmQgc2ltcGx5IG1heSBub3QgaGF2ZSB0aGUgb3B0aW9ucyBhdmFpbGFibGUgdG8gdGhlbSB0aGF0IHlvdSB3b3VsZCBwcmVmZXIuCk11c2ljIHdhcyBkaXNqb2ludGVkIGZyb20gcmVhbGl0eS4gSSBkZWNpZGVkIHRvIHBsYXkgYSB2aWRlbyBnYW1lIHRvIGdyb3VuZCBteXNlbGYgICBmb2N1cyBvbiBvbmUgdGhpbmcgdG8gdGFrZSBjb250cm9sIGFuZCByaWRlIHRoZSB3YXZlLiAKRm9yIG1lLCBpdCB3YXMgY3J5aW5nIGhhcmRlciB0aGVuIEkgZXZlciBoYXZlLiBFdmVyeSBkYXkuIEx5aW5nIG9uIHRoZSBmbG9vciBpbiB0aGUgZmV0YWwgcG9zaXRpb24uIApBbmQgaGVyZSB3aGF0IEdyZWVucGVhY2UgaGFkIHRvIHNheSBhYm91dCB0aGUgQ29wZW5oYWdlbiBhZ3JlZW1lbnQuCkkgYmVnZ2VkIGhpbSB0byBnaXZlIG1lIHNvbWUgYWR2aWNlLiAKSSB3YXMgYSBiaXQgZnJ1c3RyYXRlZCBvbiB0aGUgZmlyc3QgbGlzdGVuLCBpdCBzdGFydHMgcmVhbGx5IHdlbGwsIHRoZSBjaGFuZ2UgaW4gdG9uZSBpcyBpbW1lZGlhdGUuIFRoZWlyIGNoaWxsZWQsIHJvbWFudGljLCBwc3ljaGVkZWxpYyBzb3VuZCBpcyBtb3N0bHkgZ29uZSBpbiBleGNoYW5nZSBmb3IgYSBmdXp6ZWQgb3V0IDcwcyBncml0dHkgY2x1YiBzb3VuZCwgbWF0Y2hlcyBwZXJmZWN0bHkgd2l0aCB0aGUgYWxidW0gYXJ0IGFuZCB0aGF0IG1vdGlmIHJlYWxseSB3b3JrcyBmb3IgbWUuIApUaGUgb3JkZXIgYWxzbyBzdGF0ZXMgY2hhcml0aWVzIGFyZSByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgcmVxdWlyZW1lbnRzIG9mIHRoZSBsYXcgYXJlIG1ldCwgbm90aW5nICJDZXJ0YWluIGNoYXJpdGllcyBoYXZlIGFsbG93ZWQgYW5kIG9yIGVuZ2FnZWQgaW4gYWxsIG9yIHBhcnQgb2YgdGhlIGFib3ZlIGlsbGVnYWwgYWN0aXZpdHkgd2l0aCBlbXBsb3llZXMgb3IgYWdlbnRzIG9mIFBhbGFjZSBQb2tlciBSb29tIiBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIFN0LiBGcmFuY2lzIFhhdmllciBNZW4ncyBDbHViOyBMYXBlZXIgV2VzdCBXcmVzdGxpbmcgQ2x1YiwgSW5jLjsgNDAgRVQgOCBWb2l0dXJlIDExNjsgTGFwZWVyIFdlc3QgU29mdGJhbGwgQ2x1YiwgSW5jLjsgTGFwZWVyIFdlc3QgQm95cyBCYXNrZXRiYWxsOyBMYXBlZXIgU29jY2VyIENsdWIsIEluYy47IFN0IEZyYW5jaXMgWGF2aWVyIENodXJjaCwgQmxlc3NlZCBTYWNyYW1lbnQgQ2h1cmNoOyBPdXRyZWFjaCBFYXN0OyBhbmQgQmFyaGl0dGUgRWxlbWVudGFyeSBTY2hvb2wuLiAKQW1hemluZ2x5LCBJIHdhc24ndCBmZWVsaW5nIHRvbyBhbnhpb3VzIGFuZCBzaW5jZSBJIHdhcyBzdGlsbCBmZWVsaW5nIGRlcHJlc3NlZCB0aGUgd2hvbGUgc2l0dWF0aW9uIGZlbHQgcHJldHR5IGRvd25wbGF5ZWQuIE15IHN0cmF0ZWd5IHdhcyB0byBzdGljayB0byB0aGUgMjoxNSBwYWNlcnMgdW50aWwgdGhlIGxhc3QgMyBtaWxlcywgdGhlbiBwaWNrIHVwIG15IHBhY2UgaWYgcG9zc2libGUuIEFuZCBJIHdhcyBSRUFMTFkgZ2xhZCBJIGRpZCB0aGF0IHRyYWluaW5nIGhhbGYgICBJIGp1c3Qga2VwdCB0ZWxsaW5nIG15c2VsZiBJIGhhZCBhbHJlYWR5IGRvbmUgdGhpcyBhbmQgSSBjb3VsZCBkbyBpdCBhZ2FpbiBldmVuIGlmIGl0IHdhcyBoYXJkLgpUaGUgcm9vbSBoYWQgYSBjb21tYW5kaW5nIHZpZXcgb2YgdGhlIFN0cmlwIGFuZCB0aGUgUm91dGUgOTEgSGFydmVzdCBGZXN0aXZhbCBjb25jZXJ0IGdyb3VuZHMgYWNyb3NzIHRoZSBzdHJlZXQuLiAKRWRpdDogSSBkaWRuJ3QgbWVhbiB0aGlzIHN0YXRlbWVudCB0byBiZSBpbnNlbnNpdGl2ZSwgYW5kIEknbSBzb3JyeSBpZiBJIG9mZmVuZGVkIGFueW9uZS4gCjMuIFRoZSBzZWNvbmQgdHJlYXRtZW50IHRoYXQgeW91IGNhbiBjcmVhdGUgaXMgY2FsbGVkIGEgbGF2ZW5kZXIgY2Fycm90IGNvbXByZXNzLiAKTXkgaHVzYmFuZCB3b3JrcywgYnV0IGJ5IGNob2ljZSBhbmQgbm90IG91dCBvZiBuZWNlc3NpdHkuIEluIHRoZSBwYXN0LCBoZSBoYXMgdGFrZW4gYSBtaW5pIHJldGlyZW1lbnQgdG8gc3BlbmQgdGltZSBwdXJzdWluZyBoaXMgcGFzc2lvbnMuIFdoZW4gaGUgd2FudHMgdG8gZG8gdGhhdCBpbiBmdXR1cmUsIGhlIGtub3dzIHRoYXQgdGhhbmtzIHRvIG15IGluY29tZSBhbmQgbG92ZSBvZiB3b3JraW5nIHRoYXQgaGUgd29uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBvdXIgd2VsbGJlaW5nIG9yIGZpbmFuY2VzLiAKQXBlbmFzIGdhcmFudGEgcXVlIHRvZG8gbXVuZG8gY29uY29yZGUgbmlzc28gKGUgc2FpYmEgbyBxdWUgIGlzc28pIGFudGVzLiAKQXMgb2YgMjAwOCwgdGhlIHNjaG9vbCBob3VzZSB3YXMgc3RpbGwgb3BlcmF0aW5nIGFuZCB0aGVyZSB3ZXJlIG5pbmUgc3R1ZGVudHMgdGhlcmUgYW5kIHRocmVlIHN0YWZmIG1lbWJlcnMuIApBZGQgdGhlIHJlZCB3aW5lLCBzY3JhcGUgdGhlIGJvdHRvbSBvZiB0aGUgcGFuIGFuZCBjb29rIHVudGlsIGNvbXBsZXRlbHkgcmVkdWNlZC4gCldvbWl0IHdpciA3MCBqdW5nZSBCdW1lIHVuZCBkaWUgdW1saWVnZW5kZW4gR2Vtc2UgdW5kIEtydXRlciBnaWVlbiBrbm5lbi4KSG9tb2VvcGF0aHkgY2hlcmlzaGVkIG1lIGZyb20gYSBzZWVkIHRvIGEgdHJlZS4gTm93IEkgYW0gd2FpdGluZyBmb3IgbW9yZSBncm93dGggYW5kIG15IGNvbXBsZXRlIG1lcmdlIGludG8gSG9tb2VvcGF0aHkgdG9ycmVudHMuIEl0IGdyYW50ZWQgbWUgQmhhcnRpeWEgQ2hpa2l0c2FrIFJhdG5hIEF3YXJkLCBCZXN0IEludGVybmF0aW9uYWwgZmVhdHVyZSBBd2FyZCwgS2FzaGlwdXIgR2F1cmF2IEF3YXJkLCBNb3RoZXIgSW5kaWEgQXdhcmQgZm9yIFVkeW9nIFByYXRpYmhhLCBJbnRlcm5hdGlvbmFsIEdvbGQgU3RhciBBd2FyZCwgQXdhcmQgb2YgRXhjZWxsYW5jZSwgSG9tb2VvcGF0aGljIEdlbSAyMDExIGV0Yy4gCkFuZCB0aGUgbWFsZSBvcHBvbmVudCB0aGF0IHNlZXMgbm8gZmVhciBpbiBhIHdvbWFuICAgdGhhdCBkcml2ZXMgaGltIGNyYXp5LCBoaXMgY29tcGV0aXRpdmUgZGVzaXJlIHRvIGNydXNoIGhlciBpcyBzbyBoaWdoLiAKQnV0IFN0YXBwIHNheXMgdGhvc2UgdGltZXMgYmVmb3JlIENyZWVkJ3MgMjAwNCBicmVha3VwIGFsc28gY3JlYXRlZCBncmVhdCBtdXNpYy4gSW4gdGhlIGxhdGUgMTk5MHMsIENyZWVkIHNvbGQgMjcgbWlsbGlvbiBhbGJ1bXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYWxvbmUgICA2IG1pbGxpb24gY29waWVzIG9mIGl0cyAxOTk3ICJNeSBPd24gUHJpc29uIiBhbmQgMTEgbWlsbGlvbiBjb3BpZXMgb2YgMTk5OSdzICJIdW1hbiBDbGF5LCIgd2l0aCBodWdlIGhpdHMgc3VjaCBhcyAiSGlnaGVyIiBhbmQgIldpdGggQXJtcyBXaWRlIE9wZW4uIgpIYXJyaW5ndG9uIGJlY2FtZSB2ZXJ5IHBvcHVsYXIgYmFjayBpbiAxOTk1IHdoZW4gaGUgY3Jvd25lZCB0aGUgY2hhbXBpb25zaGlwIGluIFdvcmxkIHNlcmllcyBvZiBQb2tlci4gQWZ0ZXIgdGhhdCBoZSB3YXMgYW4gb25seSBwZXJzb24gZ2V0dGluZyBjaGFuY2UgdG8gdGFrZSBwYXJ0IGluIHRoZSBmaW5hbHMgaW4gMjAwMyBhbmQgMjAwNCBjb25zZXF1ZW50bHkuIEZvciBhIGJlZ2lubmVyLCBvciBmb3IgYW4gZXhwZXJ0IHRoaXMgYm9vayBpcyBsaWtlIGEgUG9rZXIgZ2FtZSBiaWJsZS4gCldoZW4gcmV2aWV3aW5nIHRoaXMgYXJlYSwgeW91IHdpbGwgdXN1YWxseSBub3RpY2UgdGhhdCBpdCBpcyBkaWZmZXJlbnQgaW4gY29sb3IgdGhhbiB0aGUgcmVzdCBvZiB0aGUgcG9rZXIgY2hpcC4gVGhpcyBpcyBkb25lIHRvIGFkZCBhIHNlbnNlIG9mIHVuaXF1ZW5lc3Mgb24gdGhlIGNoaXAuIApFaWdodCBleHRyYSBtZXJpZGlhbnMgYXJlIGFsc28gdXNlZCBpbiBhY3VwdW5jdHVyZSB0aGVyYXB5Li4gClRoZSBvZmZpY2lhbCBhbm5vdW5jZW1lbnQgb2YgdGhlIGNvbnRlc3Qgd2lsbCBiZSBtYWRlIHRvbmlnaHQgYXQgVHdpdGNoQ29uLCBhIGNvbnZlbnRpb24gZm9yIHRoZSBsaXZlIHN0cmVhbWluZyBwbGF0Zm9ybSB0aGF0IGhhcyBiZWNvbWUgcG9wdWxhciB3aXRoIHRhYmxldG9wIHBsYXllcnMuIFRoYXQgd2FzIGEgbG9naWNhbCB2ZW51ZSBzaW5jZSBEIGlzIGEgaG9iYnkgdGhhdCBzcHJlYWRzIHRocm91Z2ggd29yZCBvZiBtb3V0aCBhbmQgaW4gcGVyc29uIGFuZCBvbmxpbmUgZXZlbnRzLiAiV2UnbGwgcHJvYmFibHkgc2VlIG1vcmUgcGFydG5lcnNoaXBzIGxpa2UgdGhpcyB0aGFuIHRyYWRpdGlvbmFsIGFkcyIgaW4gdGhlIGZ1dHVyZSwgc2F5cyBHcmVnIFRpdG8sIHNlbmlvciBjb21tdW5pY2F0aW9ucyBtYW5hZ2VyIGF0IFdpemFyZHMgb2YgdGhlIENvYXN0Li4gCk15IDEyIHllYXIgb2xkIHN0aWxsIHdyZWNrcyBoYXZvay4gR3JhbnRlZCwgbXkgY2FycGV0cyB3b3VsZCBsb29rIGEgbG90IG5pY2VyIGlmIHRoZSBvbGRlciBjYXQgZGlkbiBoYXZlIGNsYXdzLCBidXQgc2hlIGhhcHB5IGFuZCBoZWFsdGh5Li4gClNsaWdodGx5IGRpZmZlcmVudCBoaWdoIHNwZWVkIG1ldGhvZHMgb2YgYmFraW5nIGV2b2x2ZWQgb3ZlciB0aW1lLgpBcyBhIHJlc3VsdCwgSSBndWVzcyBzaGUncyByZWFjaGluZyBmb3IgdGhlIGhhcnNoZXIgbWFuaXB1bGF0aW9uIHRhY3RpY3MuIApSYWluaW5nPyBCcmluZyBhbiB1bWJyZWxsYS4gCkNhcGl0b2wgb24gU2VwdGVtYmVyIDQsIDIwMTMgaW4gV2FzaGluZ3RvbiwgREMuIFNheXMgd2FzIHRoZSBTeXJpYW4gZ292ZXJubWVudCdzIHVzZSBvZiBjaGVtaWNhbCB3ZWFwb25zIGFnYWluc3QgY2l2aWxpYW5zLiAKVGhlIEFtZXJpY2FuIFBzeWNob2xvZ2ljYWwgQXNzb2NpYXRpb24ncyBQc3ljQ2FyZWVycyBwYWdlIGxpc3RzIGpvYnMgZm9yIHRoZXJhcGlzdHMgaW4gYSBudW1iZXIgb2YgZGlmZmVyZW50IGZpZWxkcywgaW5jbHVkaW5nIGNvcnJlY3Rpb25zIGFuZCByZWhhYmlsaXRhdGlvbiBmaWVsZHMuIFlvdSBtYXkgYWxzbyBjaGVjayB5b3VyIHN0YXRlJ3MgY2l2aWwgc2VydmljZSBjb21taXNzaW9uIHdlYnNpdGUgZm9yIGF2YWlsYWJsZSBqb2JzIGFuZCBvcHBvcnR1bml0aWVzLi4gCkJ1dCBhZnRlciBhIGNvbW11bml0eSByZXZpZXcsIHB1YmxpYyBhcnQgb2ZmaWNpYWxzIGRlY2lkZWQgb24gdGhlIGNpdHkgb3duZWQgc2l0ZS5BbiBpbWFnZSBmcm9tIHRoZSByZXZpc2VkIGRldmVsb3BtZW50IHBlcm1pdCBhcHBsaWNhdGlvbiBmb3IgMjEwMiBLZWl0aCBEci4gCldoZW4gSSBpbiB0ZW1wcyBiZWxvdyB6ZXJvIGJ1dCBub3QgaW4gdGhlIHNsZWVwaW5nIGJhZyBpZCB3YW50IG1vcmUgbG9mdCB0aGFuIHRoZSBtYWdtYSBqYWNrZXQgb3IgbWljcm8gcHVmZiwgaW4gZmF2b3Igb2YgYSBib3ggYmFmZmxlZCBkb3duIGhvb2R5IG9yIHNvbWV0aGluZyB3aXRoID41IG96IG9mIGRvd24uIEkgdXNlIGFuIHIxIGFuZCBhbHBoYSBhciwgdGhlbiBsYXllciBhIHJhYiBlbGVjdHJvbiBpbiBiZXR3ZWVuIHdoZW4gc3RhdGljIGFuZCB0aGlzIGdldHMgbWUgaW50byB0aGUgbmVnYXRpdmVzIHdpdGggaGF0IGdsb3ZlcyBldGMKSWYgeW91IGtub3cgYW55b25lIHdobyB3aWxsIGJlIHRhaWxnYXRpbmcgdGhlbiBzdGFydCB3aXRoIHRoYXQuIApJZiBJIGhhZCBpdCBhdmFpbGFibGUgeWVhcnMgYWdvIEkgd291bGQgZGVmaW5pdGVseSBiZSBpbnRlcmVzdGVkIGluIGl0LlRoZSB0b29sIGlzIGdvb2QgaW4gdGhhdCB5b3UgY2FuIHNlbGVjdCBjZXJ0YWluIHNwb3RzIGFuZCBtYWtlIHlvdXIgcmVzcG9uc2VzIGludG8gbXVzY2xlIG1lbW9yeSBmYXN0ZXIgdGhhbiBqdXN0IHN0dWR5aW5nICAgaXQgaXMgdGhlIHBhcnQgd2hlcmUgaXQgZXhjZWxzIG92ZXIgZXZlbiBnb2luZyBvbnRvIGEgZm9ydW0gbGlrZSBSSU8gYW5kIGV4Y2hhbmdpbmcgdmlld3MuIApObyBtYXR0ZXIgd2hhdCBtYXRlcmlhbCB5b3UgbGlrZSB0aGUgYmVzdCwgdGhleSBhcmUgdmVyeSBhZmZvcmRhYmxlLiBZb3UgY2FuIGJ1eSBwcmUgY3V0IHNpemVzLCBidXQgbW9zdCBwZW9wbGUgcHJlZmVyIHRvIGJ1eSB0aGlzIG1hdGVyaWFsIGJ5IHRoZSBsaW5lYXIgeWFyZCwgd2hpY2ggaXMgdHlwaWNhbGx5IDU1IiB0byA1OSIgd2lkZS4gU2luY2UgeW91IGNhbiBnZXQgQ29tbW9uIEdyZWVuIEZlbHQgZm9yIHVuZGVyICQxMCBwZXIgbGluZWFyIHlhcmQgb24gdGhlIEludGVybmV0LCBtYW55IGNob29zZSBpdCBhcyBhIGNoZWFwIG9wdGlvbi4KWW91J2xsIHNlZSBtYW55IG9mIHRoZSBwb2tlciBzdGFycyB0aGF0IGFyZSByZWd1bGFybHkgb24gVFYgYW5kIGlmIHlvdSBlbnRlciBzb21lIGJyYWNlbGV0IGV2ZW50cyB5b3UgbWF5IGJlIHBpdHRlZCBhZ2FpbnN0IHNvbWUgb2YgdGhlbS4gCiJXZSdyZSB0cnVseSBmb2N1c2luZyBvbiBpbml0aWF0aXZlcyB0byBiZXR0ZXIgY29tbXVuaXRpZXMgYW5kIHRoZSB3b3JsZCBhcm91bmQgdXMsIiBzYXlzIEthdGVzLi4gClJhaXNlbiB1bmQgYWdncmVzc2l2ZXMgU3BpZWwgZ2VocnQgZWJlbmZhbGxzIHp1bSBSc3R6ZXVnIGVpbmVzIGVyZm9sZ3JlaWNoZW4gSGVhZHMgVXAgU3BpZWxlcnMuIApJIGtub3cgdGhpcyBpc24ndCBmaXRuZXNzIHJlbGF0ZWQgYnV0IGl0IGZlZWxzIGxpa2Ugc3VjaCBhIG1hc3NpdmUgZmFpbHVyZSBhbnl3YXlzLCBJJ20gZ29ubmEgc2hhcmUuIE15IGRvY3RvciBoYXMgcHV0IG1lIG9mZiBvbiBtZWRpY2FsIGxlYXZlLiAKVGhlIGxvbmcgdGVybSBmaW5hbmNpYWwgYmVuZWZpdHMgb2Ygb3duZXJzaGlwIGFyZSBhbHNvIHdlbGwgZXN0YWJsaXNoZWQuIER1bm5pbmcgdXNlZCBkYXRhIGZyb20gU3RhdGlzdGljcyBDYW5hZGEgdG8gY29tcGFyZSB0aGUgd2VhbHRoIHN0YXR1cyBvZiByZW50ZXJzIGFuZCBvd25lcnMuIEFzIGV4cGVjdGVkLCBoZSBmb3VuZCB0aGF0IGhvbWVvd25lcnMgd2VyZSBiZXR0ZXIgb2ZmIGZpbmFuY2lhbGx5IGNvbXBhcmVkIHRvIHRlbmFudHMgd2l0aCBzaW1pbGFyIGFnZSBhbmQgaW5jb21lIHByb2ZpbGVzLgpBbnkgbGFuZ3VhZ2Ugb3IgYWN0aW9uIHRoYXQgaXMgZGlzcmVzcGVjdGZ1bCB0byBvdGhlciBtZW1iZXJzOyB1cGhvbGRzIHJhY2lzbSwgY2lzc2V4aXNtLCB0cmFuc3Bob2JpYSwgaGV0ZXJvc2V4aXNtLCBob21vcGhvYmlhLCBtaXNvZ3lueSwgYW5kL29yIGNsYXNzaXNtIHdpbGwgbm90IGJlIHRvbGVyYXRlZC4gCkl0IHRvbyBxdWlldCBhbmQgZW1wdHkgYW5kIHRoZSBwYXJ0cyB0aGF0IGZlZWwgbGlrZSB0aGV5IHN1cHBvc2VkIHRvIHN0dW4gbWUgZG8gYW55dGhpbmcgYnV0LiAKV2Ugd2FudCB0byBoaXJlIHNvbWUgcmVzb3VyY2VzIGFuZCBnZXQgdGhlIGpvYiBkb25lIHByb3Blcmx5LiAKSmFtZXMgTGV2aW5lLCBhIHJlc2VhcmNoZXIgYXQgdGhlIE1heW8gQ2xpbmljIGluIFJvY2hlc3RlciwgTWlubi4sIGhhcyBhbiBpbnRlbnNlIGludGVyZXN0IGluIGhvdyBtdWNoIHBlb3BsZSBtb3ZlICAgYW5kIGhvdyBtdWNoIHRoZXkgZG9uJ3QuCkl0IGRvZXNuIGV2ZW4gaGF2ZSB0byBiZSB0aGUgTlQuIApDaGlsZHJlbiB0b3lzLCBsaWtlIEJyYXR6LCBsb29rIGxpa2UgcG9ybiBzdGFycy4gQW5kIGNlbGVicml0aWVzIGluY3JlYXNpbmdseSBsb29raW5nIGxpa2UgUGxheW1hdGVzIGV2ZW4gYXMgUGxheW1hdGVzIGFyZSBjZWxlYnJpdGllcy4gTWFueSBjb21tZW50YXRvcnMgaGF2ZSBjYWxsZWQgdGhlIHViaXF1aXRvdXMgcHJlc2VuY2Ugb2YgY29tbWVyY2lhbGl6ZWQgZXJvdGljIGltYWdlcyB0aGUgInBvcm5pZmljYXRpb24iIG9mIHBvcHVsYXIgY3VsdHVyZS4gCkkgd291bGQgbWFrZSBzdXJlIHlvdSBhY3R1YWxseSBoYXZlIGEgY3JlZGl0IHNjb3JlIChoYWQgdHJvdWJsZSBnZXR0aW5nIGEgbW9ydGdhZ2Ugd2hlbiBJIGZpcnN0IGdvdCBtYXJyaWVkIGJlY2F1c2UgbXkgd2lmZSBoYWQgc3R1ZGVudCBkZWJ0LCB3aGljaCB0aGV5IHdlcmUgaGFwcHkgdG8gY291bnQgYWdhaW5zdCB1cywgYW5kIGhhZCBpbmNvbWUgd2hpY2ggdGhleSB3b3VsZG4gcmVjb2duaXplIGJlY2F1c2Ugc2hlIGhhZCBuZXZlciBkb25lIGFueXRoaW5nIHRvIGNhdXNlIGhlciB0byBzaG93IHVwIG9uIGNyZWRpdCByZXBvcnRzKS4KSGVyIGdvcnVzdGVuIGluc2FuIHZhciB2ZSBiYXlhIHNhZ2xhbSB5YXphcmxhcmRhIHZhci4gTmVkZW4gYnUga2FkYXIgc2V2aWxtaXlvciBhbmxhbWl5b3J1bSBhY2lrY2FzaS4gClRoZXJlIHdhcyBzb21lIHVzZWZ1bCB0aGluZ3MgSSB0b29rIGF3YXkgZnJvbSBpdCwgYnV0IHRoZSBiaWcgcmV2ZWFsIGhhbGYgd2F5IGludG8gdGhlIGZ1Y2tpbmcgdGhpbmcgd2FzIGRvd24geW91ciBmZWVsaW5ncyEgdHJ5aW5nIHRvIHNoaXQgb24gaXQsIGl0IGRlZmluaXRlbHkgYSBtdXN0IHJlYWQgYnV0IElNTyB0aGUgd2F5IHBlb3BsZSB0YWxrIGFib3V0IGl0IGxpa2UgaXQgdGhlIGJlIGFsbCBhbmQgZW5kIGFsbCBvZiBhZHZpY2UgaXMgYSBiaXQgc2lsbHkuIApTdGVwIDYgUmVwZWF0IHN0ZXBzIDQgYW5kIDUgdW50aWwgYm90aCB5b3UgYW5kIHlvdXIgb3Bwb25lbnQgaGF2ZSBsYWlkIG9uZSBoYW5kIGluIGZyb250IG9mIGVhY2ggb2YgdGhlIDcgY29pbnMuIC4KRWxsZSBtZSBkaXQgRGUgbGEgdmlhbmRlIHRvdXQgbGVzIGpvdXJzLCBldCBhdXRyZXMgcHRlcyAgbGEgY2Fib25hcmEgZXRjLCBndGVhdXggYXUgZ291dGVyLCBldCBkZXMgYm9uYm9ucy4gRXQgc3VydG91dCBlbiBzdXJwb2lkcy4gSmUgbHVpIGFpIGRpdCBldCBjZWxhIG4nZW5nYWdlIHF1ZSBtb2ksIHF1J2lsIGZhbGxhaXQgcXUnZWxsZSBhcnJ0ZSBsYSBjdXJlIGR1IGZvaWUsIGNhciBjZWxhIGFsbGV6IHZyYWltZW50IGxhIGZhdGlndWVyLiAKVGhlIGNvbmZsYXRpb24gb2Ygd2hpdGUgZmVtYWxlIHB1cml0eSBhbmQgY2hpbGRpc2ggc2V4dWFsIGlubm9jZW5jZSBnb3QgdGFuZ2xlZCB1cCB3aXRoIG5vdGlvbnMgb2Ygd2hpdGUgc3VwZXJpb3JpdHkgb3ZlciAidGhvc2UgcGVvcGxlIiB3aG9zZSBjaGlsZHJlbiBoYWQgc2V4IGFuZCB3b21lbiB3ZXJlIHByb21pc2N1b3VzLiAKSGUgaGFzIGFsc28gYmVlbiBhIGNvbGxlY3RvciBvZiBwb3AgY3VsdHVyZSBpdGVtcywgaW5jbHVkaW5nIHRoZSBzZXF1aW5lZCBkcmVzcyBNYXJpbHluIE1vbnJvZSB3b3JlIHRvIHNlcmVuYWRlICJIYXBweSBCaXJ0aGRheSIgdG8gUHJlc2lkZW50IEpvaG4gRi4gS2VubmVkeSwgdGhlIEhvZm5lciBiYXNzIGd1aXRhciBwbGF5ZWQgYnkgUGF1bCBNY0NhcnRuZXksIGFuZCBKYWNraWUgUm9iaW5zb24ncyAxOTQ3IHJvb2tpZSBCcm9va2x5biBEb2RnZXIgamVyc2V5IHRoZSBvbmx5IG9uZSBrbm93biB0byBleGlzdC4gCldoZW4gaGUgYWN0dWFsbHkgaHVuZ3J5LCBoZSBlYXQsIGJ1dCBoZSBzdGFydCB0byBlYXQgbGVzcyBhbmQgZmVlbCBzYXRpc2ZpZWQgZm9yIGxvbmdlci4gSGUgc25hY2sgbGVzcy4gCkFoLCBzbyB2ZWdhbnMgb25seSBidXkgZnJvbSBsb2NhbCB2ZWdhbiBmYXJtZXJzIGFuZCBkb24gdXRpbGl6ZSBjcm9wcyBwcm9kdWNlZCBmcm9tIGluZHVzdHJpYWwgYWdyaWN1bHR1cmUsIHRoZXJlZm9yZSBrZWVwaW5nIHRoZWlyIGhhbmRzIGNsZWFuIG9mIHRoZSBwcmltYXJ5IHJlYXNvbiBhbmltYWxzIGFyZSBlbmRhbmdlcmVkL2V4dGluY3QuIEdvdGNoYSwgYmVjYXVzZSBvdGhlcndpc2UgSSB3b3VsZCBqdXN0IHNheSB0aGV5IHNlbGYgcmlnaHRlb3VzbHkgaWdub3JhbnQgbW9yb25zIHdob3NlIHN1cnZpdmFsIGRlcGVuZHMgb24gdGhlIGRlYXRoIG9mIGFuaW1hbHMgKHdobyB3ZXJlIG5ldmVyIGludGVuZGVkIHRvIGRpZSwgbGlrZSBsaXZlc3RvY2spIGp1c3QgYXMgbXVjaCBhcyBhbnlvbmUgZWxzZSBJIG1ha2luZyBteXNlbGYgY2xlYXI/IERvZXMgYW55IG9mIHRoYXQgbWFrZSBzZW5zZT9XZSBhbHdheXMgdXNlZCB0b29scyB0byBraWxsIGFuaW1hbHMuIEEgc2lnbmlmaWNhbnQgcGFydCBvZiBvdXIgcmlzZSB0byBhcGV4IHByZWRhdG9yIHdhcyBkdWUgdG8gb3VyIGFiaWxpdHkgdG8gY3JlYXRlIHRvb2xzIChhZnRlciB0aGUgZGlzY292ZXJ5IG9mIGZpcmUgYW5kIGJlaW5nIGFibGUgdG8gY29vayBtZWF0IGdpdmluZyB1cyBiaWdnZXIgYnJhaW5zKS4gCkRzIGxvcnMsIGRlcyBjcml0aXF1ZXMgb250IHB1IHRyZSBzb3VsZXZlcyBzdXIgY2V0dGUgc2l0dWF0aW9uIGFib3V0aXNzYW50ICBlbXByaXNvbm5lciBkYW5zIGRlcyB0YWJsaXNzZW1lbnRzIHBuaXRlbnRpYWlyZXMgZGVzIHBlcnNvbm5lcyBzb3VmZnJhbnQgZGUgdHJvdWJsZXMsIHNhbnMgcG91ciBhdXRhbnQgYm5maWNpZXIgZGUgc29pbnMgYWRxdWF0ZXMuIEQnYWlsbGV1cnMsIGxlIHJhcHBvcnQgYWNjb21wYWduYW50IGxhIHByb3Bvc2l0aW9uIGRlIGxvaSBmYWlzYW50IGwnb2JqZXQgZGUgY2V0IGFydGljbGUgY29uc3RhdGUgcXVlICBwcnMgZGUgMTAlIGRlcyBwZXJzb25uZXMgZHRlbnVlcyBzb3VmZnJpcmFpZW50IGRlIHRyb3VibGVzIHBzeWNoaWF0cmlxdWVzIGdyYXZlcyAgISAoUmFwcG9ydCBkdSBTbmF0IG4gMjE2IHNlc3Npb24gMjAxMCAyMDExLCBwcnNlbnQgcGFyIE0uIApPbiB0aGUgb25lIGhhbmQgSSBhbSBzb21ldGltZXMgcmVtaW5kZWQgb2Ygd2hhdCBoYXBwZW5lZCBpbiBteSBjbGFzc3Jvb20gYW5kIEkgbGl0ZXJhbGx5IHdhbnQgdG8gdm9taXQuIFRoZXJlIGEgc29uZyBteSB0ZWFjaGVyIHVzZWQgdG8gc2luZyBpbiBmcm9udCBvZiB0aGUgY2xhc3MgYW5kIGhlYXJpbmcgaXQgb24gdGhlIHJhZGlvIG5vdyBzZW5kcyBtZSBpbnRvIGEgY29sZCBzd2VhdC4gQW5kIG9mIGNvdXJzZSBpdCBvbmUgb2YgdGhvc2Ugc29uZ3MgeW91IGhlYXIgYWxsIHRoZSBkYW1uIHRpbWUuKSBBbmQgeWV0LCBzb21ldGltZXMsIEkgYWJsZSB0byBsb29rIGJhY2sgb24gdGhlICJnb29kIiB0aGluZ3MgaGUgZGlkIGFuZCBhY3R1YWxseSBzbWlsZS4gCldoeSBpcyB0aGlzIG1lZGljYXRpb24gcHJlc2NyaWJlZD8gLiBZb3Ugc2hvdWxkIHRob3JvdWdobHkgY2hldyB0aGUgY2hld2FibGUgdGFibGV0cyBhbmQgdGhlbiBkcmluayBhIGZ1bGwgLiBpZiB5b3UgY2Fubm90IHN3YWxsb3cgdGhlIGxvbmcgYWN0aW5nIC4KRm9iZXQgODggaXMgYW4gb25saW5lIGdhbWJsaW5nIHdlYnNpdGUgdGhhdCBpcyBiYXNlZCBpbiBJbmRvbmVzaWEuIFRoaXMgcGxhdGZvcm0gaGFzIGdhaW5lZCBwb3B1bGFyaXR5IGZvciBhbGxvd2luZyBlYXN5IGFuZCBzYWZlIGJldHRpbmcgb3Bwb3J0dW5pdGllcyBvbiBzcG9ydHMgZXZlbnRzLCBwb2tlciwgSnVkaSBCb2xhIGFuZCBtb3JlIGZvciBlbnRodXNpYXN0cyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZC4gU2FuIEZyYW5jaXNjbyBoYXMgRmlzaGVybWFucyBXaGFyZi4gClNhaWQsIEkgc2Vjb25kIHRoZSBETyBOT1QgVE9VQ0guIFdoaWxlIHlvdSBjYW4gcmVtYWluIGZyaWVuZHMgd2l0aCBib3RoIG1lbWJlcnMgb2YgYSBicm9rZW4gdXAgY291cGxlLCBpdCBub3QgdmVyeSBsaWtlbHkgdG8gc3RheSB0aGF0IHdheSBpZiB5b3UgYWN0dWFsbHkgZGF0ZSBvbmUgb2YgdGhlbSwgYW5kIGRvdWJseSBzbyBpZiB0aGV5IHdlcmUgbWFycmllZC4gCkZvciB0aG9zZSBvZiB1cyB3aG8gYXJlIG9uIHRoZSB2ZXJnZSBvZiBsb3Npbmcgb3VyIGhvbWVzLCB3aG8gZnJldCBhYm91dCBmZWVkaW5nIG91ciBjaGlsZHJlbiwgd2hvIGNyaW5nZSB3aGVuIHRoZSBwaG9uZSByaW5ncyBiZWNhdXNlIGRlYnQgY29sbGVjdG9ycyBtYXkgYmUgY2FsbGluZywgd2l0aG91dCBxdWVzdGlvbiwgbW9yZSBtb25leSB3aWxsIG1ha2UgdXMgaGFwcGllci4gQnV0IGZvciB0aGUgcmVzdCBvZiB1cywgYmVmb3JlIGNvbm5lY3RpbmcgY2FzaCB3aXRoIGpveSwgd2UgbmVlZCB0byB0YWxrIGFib3V0IHdoYXQgd2UgbWVhbiBieSBpbiBuZXVyb2Vjb25vbWljcyAodGhlIHN0dWR5IG9mIGhvdyB3ZSBtYWtlIGVjb25vbWljIGRlY2lzaW9ucykgYnJlYWsgaGFwcGluZXNzIGludG8gdHdvIHR5cGVzOgpCdXQgZG9uJ3Qgd29ycnksIGl0J3MgT0sgaWYgdGhlIG9ubHkgdGhpbmcgeW91IHJlbWVtYmVyIGZyb20gQVAgc3RhdHMgaXMgaG93IHRvIHNsZWVwIHRocm91Z2ggY2xhc3MgYnkgZHJhd2luZyBwdXBpbHMgb24geW91ciBleWVsaWRzLiAKRGVwZW5kaW5nIG9uIHdoZXJlIHRoZXNlIGJsb2NrYWdlcyBvY2N1ciwgdGhleSBjYW4gY2F1c2UgYSBudW1iZXIgb2YgZGlmZmVyZW50IG91dGNvbWVzOklmIHRoZSBibG9ja2FnZSBvY2N1cnMgaW4gYSBjb3JvbmFyeSBhcnRlcnksIGl0IGNhdXNlcyBjaGVzdCBwYWluIChhbmdpbmEpLklmIHRoZSBibG9ja2FnZSBpcyBjb21wbGV0ZSwgaXQgY2FuIGNhdXNlIGEgaGVhcnQgYXR0YWNrIChNeW9jYXJkaWFsIEluZmFyY3Rpb24gb3IgTUkpLklmIHRoZSBibG9ja2FnZSBvY2N1cnMgaW4gb25lIG9mIHRoZSBhcnRlcmllcyBuZWFyIHRoZSBicmFpbiwgYSBzdHJva2UgY2FuIG9jY3VyLklmIGEgYmxvY2thZ2Ugb2NjdXJzIGluIGEgbGVnIGFydGVyeSwgaXQgY2F1c2VzIFBlcmlwaGVyYWwgVmFzY3VsYXIgRGlzZWFzZSAoUFZEKSBhbmQgY2FuIGNhdXNlIHBhaW4gd2hpbGUgd2Fsa2luZyBjYWxsZWQgaW50ZXJtaXR0ZW50IGNsYXVkaWNhdGlvbi5Ib3cgdGhlIEhlYXJ0IFdvcmtzMTAgV2F5cyB0byBBdm9pZCBhIEhlYXJ0IEF0dGFja0JvZHkgV29ya3M6IEhlYXJ0IEhlYWx0aCBRdWl6QXRoZXJvc2NsZXJvc2lzIHRha2VzIG1hbnkgeWVhcnMsIGV2ZW4gZGVjYWRlcyB0byBkZXZlbG9wIGFuZCB0aGUgY29uZGl0aW9uIGNhbiBlYXNpbHkgZ28gdW5ub3RpY2VkLiBTb21ldGltZXMgc3ltcHRvbXMgc3VjaCBhcyBhbmdpbmEgd2lsbCBncmFkdWFsbHkgaW5kaWNhdGUgdGhlIGNvbmRpdGlvbi4gCkFsc28sIHlvdSBrbm93LCB0aGUgVVMgcHJlc2lkZW50IHNheWluZyAiVGhlIEdlcm1hbnMgYXJlIGJhZCwgdmVyeSBiYWQsIiBhbmQgY2FsbGluZyBHZXJtYW4gY29tcGFuaWVzIGEgbmF0aW9uYWwgc2VjdXJpdHkgdGhyZWF0IHRvIHRoZSBVbml0ZWQgU3RhdGVzLCB3aGlsZSBzaWRpbmcgd2l0aCB0aGUgUHJlc2lkZW50IG9mIFJ1c3NpYSBhZ2FpbnN0IGhpcyBvd24gaW50ZWxsaWdlbmNlIHNlcnZpY2VzIGFuZCBoaXMgYWxsaWVzLCB3aGlsZSBzYXlpbmcgaGUgIndvdWxkbiBuZWNlc3NhcmlseSIgY29tZSB0byB0aGUgYWlkIG9mIGEgTkFUTyBhbGx5IGF0dGFja2VkIGJ5IFJ1c3NpYS4gVGhpcyBjb21lcyBvbiB0aGUgaGVlbHMgb2YgdGhlIFVTIGFycmVzdGluZyBhbmQgdG9ydHVyaW5nIGEgR2VybWFuIGNpdGl6ZW4sIHNweWluZyBvbiBHZXJtYW5zIGFuZCBidWdnaW5nIHRoZSBHZXJtYW4gY2hhbmNlbGxvciBwZXJzb25hbCBwaG9uZSwgYW5kIGluaXRpYXRpbmcgd2FyIGFmdGVyIHdhciB0aGF0IGhhdmUgcmVzdWx0ZWQgaW4gdGhlIG1pZ3JhbnQgY3Jpc2lzIEdlcm1hbnkgbm93IGZhY2VzLgpBbmQgSSBub3RpY2VkIHRoYXQgaW4gb25lIG9mIG15IGNvIGVkIHNjaG9vbHMgKEkgdGF1Z2h0IGluIGEgYnVuY2ggb2YgbWlkZGxlIHNjaG9vbHMgaW4gdGhlIGNvdW50cnkpLCB0aGUgYm95cyBhbmQgZ2lybHMgd2VyZSBzdGlsbCBzZWF0ZWQgc2VwYXJhdGVseSBpbiB0aGUgY2xhc3NlcyAgIHRoZSBib3lzIG9uIG9uZSBzaWRlIGFuZCB0aGUgZ2lybHMgb24gdGhlIG90aGVyLiAKQnV0IHByb2JhYmx5IHRoZSBtb3N0IGZhbW91cyBkZWNrIG9mIGNhcmRzIGFsbCBvdmVyIHRoZSB3b3JsZCB3b3VsZCBzdGlsbCBiZSB0aGF0IG9uZSB3aGljaCBjb25zaXN0cyBvZiA1MiBjYXJkcy4uIApZZXMsIGJ1dCB0aGUgd29ycnkgcGVvcGxlIGhhdmUgdGhpcyB0aW1lIGlzIHRoYXQgYWxsIHRoZXNlIHByZXZpb3VzIEJhdHRsZWZpZWxkcyBoYWQgcHJlbWl1bS4gQkZWIGRvZXNuIGhhdmUgcHJlbWl1bSwgc28gdGhhdCB3aHkgKG15c2VsZiBpbmNsdWRlZCkgcGVvcGxlIGFyZSB2ZXJ5IHdvcnJpZWQgYWJvdXQgd2hhdCB0aGUgZnV0dXJlIGhvbGRzLiBXZSBoYXZlIHplcm8gdG8gbm8gaW5mb3JtYXRpb24gYWJvdXQgd2hhdCB3aWxsIGhhcHBlbiBhZnRlciBDaGFwdGVyIDMuIApMYXlpbmcgYWxsIHRoYXQgb3V0LCBJIGp1c3QgZG8gbm90IGJlbGlldmUgYm9vbWVycyB3aGVuIHRoZXkgc2F5IGl0IGlzIGluZXZpdGFibGUgdGhhdCB3ZSB3aWxsIHNoaWZ0IG91ciB0aGlua2luZyBzbyBkcmFzdGljYWxseSwgdG8gdGhlIHJpZ2h0LiBXaGVuIHRoZSBwcm8gd2VhbHRoL2FudGkgdGF4L2FudGkgcG9vciBwb2xpY2llcyB0aGV5LCBieSBhbmQgbGFyZ2UsIGFyZSBpbiBmYXZvciBvZiBkbyBub3QgYmVuZWZpdCBHZW4gWCBvciBNaWxsZW5uaWFscyBpbiB0aGUgc2FtZSB3YXlzLi4gCkhvbmVzdGx5IEkgdGhpbmsgYWxsIHRpbWVzIG9mIHRoZSBkYXkgaGF2ZSBkaWZmZXJlbnQgbWVyaXRzLiAKU2FhbmlzIHUKSSB3YXMgOCBtb250aHMgcHJlZ25hbnQgYXQgdGhlIHRpbWUgYW5kIGZvdW5kIG91dCBhcyB3ZSB3ZXJlIGxlYXZpbmcgdGhlIHJlY2VwdGlvbiB0aGF0IHRoZXkgaGFkbiBnb3QgYSBidXMgZHJpdmVyIGFuZCBJIHdhcyBleHBlY3RlZCB0byBkcml2ZSB0aGUgZ3Vlc3RzIGJhY2sgdG8gdGhlaXIgYWNjb21tb2RhdGlvbi4uIApBTFNPOlRoZSBTY29vcCBUZWFtICAgUE0ncyBQb3N0IENhYiA0LzMvMTk6IFRpY2tldCBTY2FscGVycyBhbmQgSmloYWRpc1JOWiAgIENhbGwgZm9yIE5aIHRvIHRha2UgJ0tpd2kgamloYWRpJyBNYXJrIFRheWxvciBsaWtlbHlBdWNrbGFuZCBNYXlvcmFsdHk6ICdSZWFsIFJhY2UnIEFzIEdvZmYgQ29uZmlybXMgQ2FuZGlkYWN5QWZ0ZXIgc3RheWluZyBjb3kgZm9yIHdlZWtzLCB0aGUgY3VycmVudCBtYXlvciBQaGlsIEdvZmYgaGFzIGZpbmFsbHkgbWFkZSBpdCBvZmZpY2lhbCAgIGhlIHdpbGwgcnVuIGFnYWluLiBNciBHb2ZmIGlzIGJhcmVseSBhY2tub3dsZWRnaW5nIGhpcyBiaWdnZXN0IHJpdmFsLCBKb2huIFRhbWloZXJlLCBidXQgdGhlIGZvcm1lciBMYWJvdXIgTVAgYW5kIGJyb2FkY2FzdGVyIGlzIGFscmVhZHkgY29taW5nIG91dCBzd2luZ2luZy4gTW9yZT4+LiAKVGhlc2Ugd29tZW4gYXJlIHBvb3JlciB0aGFuIHRoZXkgdXNlZCB0byBiZS4gCkEgbG90IG9mIHN0dWZmIHdpbGwgZm9yZXZlciBiZSBpbnZpc2libGUgdG8gdXMgYmVjYXVzZSB0aGF0IGVhcmx5IGV4cGFuc2lvbiBwdXNoZWQgaXQgc28gZmFyIGF3YXkgZnJvbSB1cyB0aGF0IGV4cGFuc2lvbiBrZWVwcyBtb3ZpbmcgaXQgYXdheSBmcm9tIHVzIGZhc3RlciB0aGFuIHRoZSBzcGVlZCBvZiBsaWdodC4gClNlZSB0aGUgc3VnZ2VzdGlvbnMgYmVsb3cgYW5kIGdvIHBpbGxzIGZyZWUuLiAKSGVhZGNhbm9uIHRpbWUgICBCb2JhIGFscmVhZHkgaGF0ZWQgdGhlIEplZGkgICBhIHRyYWl0IHRoYXQgaGFkIGJlZW4gYnVybmVkIGludG8gaGltIGJ5IGhpcyBmYXRoZXIuIFVwIHRvIHRoaXMgcG9pbnQsIEJvYmEgYmVsaWV2ZXMgaGlzIGZhdGhlciB0byBiZSBzdXBlcmlvciB0byBldmVuIHRoZSBncmVhdCBKZWRpLiBUaGUgc3RvcmllcyBKYW5nbyBoYXMgdG9sZC4gVGhlIGZpZ2h0cyBoZSBoYXMgc2VlbiBoaXMgZmF0aGVyIHdpbi4gRXZlbiBmaWdodGluZyBhbmQgY2hhc2luZyBPYmkgV2FuIG9ubHkgc2VydmVzIHRvIHB1dCBKYW5nbyBvbiBhIGxldmVsIHdpdGggR29kcyBpbiB0aGUgZXllcyBvZiB5b3VuZyBCb2JhLgpPdXIgQlNjIFNwb3J0IFJlaGFiaWxpdGF0aW9uIGNvdXJzZSBpcyBhaW1lZCBhdCB0aG9zZSB3aG8gYXJlIGNvbW1pdHRlZCB0byB3b3JraW5nIHdpdGggcGF0aWVudHMgYW5kIGF0aGxldGVzIG9mIGFsbCBhZ2VzIHRvIHJlaGFiaWxpdGF0ZSB0aGVtIGZvbGxvd2luZyBpbmp1cnkuIEluanVyeSBwcmV2ZW50aW9uLCBoZWFsdGgsIHdlbGxiZWluZyBhbmQgc3BvcnRpbmcgcGVyZm9ybWFuY2UgYXJlIGFsc28gYXJlYXMgd2hlcmUgeW91IHdpbGwgZGVzaWduIGFuZCBpbXBsZW1lbnQgZXhlcmNpc2UgYW5kIHJlaGFiaWxpdGF0aW9uIHByb2dyYW1tZXMgZm9yIHlvdXIgY2xpZW50cy4KUmVhZCBtb3JlIGFib3V0IG91ciB0ZWFjaGluZyBtZXRob2RzLCBpbmNsdWRpbmcgYSBzYW1wbGUgZmlyc3QgeWVhciB0aW1ldGFibGUuCkkgdGhpbmsgaXQgbW9yZSBsaWtlbHkgdGhhdCBUcmVudCBicm9rZSBhIGxvdCBvZiB5b3VuZyB3aXphcmRzLCBhbmQgdGhvc2UgaGUgc2F3IHdpdGggdGhlIHBvdGVudGlhbCBmb3IgdGhlIG1hZ2ljIHdpdGggdGhlIGludGVudGlvbiB0aGF0IGFmdGVyIGhlIGJyb2tlIHRoZW0gKGludG8gYmVpbmcgdmVyeSBkZXNwZXJhdGUgZm9yIHRoZSBtYWdpYyBoZSB3YXMgcmVzZWFyY2hpbmcpLCBoZSB3b3VsZCB1c2UgdGhlbSBiZWNhdXNlIHRoZXkgd291bGQgcmVseSBvbiBoaW0gYW5kIG5lZWQgaGltIGFuZCBzZWUgaGltIGFzIHRoZWlyIHBvc3NpYmxlIHJvdXRlIHRvIHNhbHZhdGlvbi4gClNvZnR3YXJlIEVuZ2luZWVyIG1heSBoYXZlIHRoZSBnb3Zlcm5tZW50IHBheWluZyAxMjAsMDAwIHRvIHRoZSBwcmltZS4gCiJXZWxjb21lIHRvIHRoZSBuZXcgZXJhIGluIHNwYWNlZmxpZ2h0LCIgaGUgc2FpZC4KSW4gdGhlIG1pZCAyMDAwIGEgZ3V5IGNvbWVzIGludG8gdGhlIEVSIHdpdGggYSBOb2tpYSBnbyBwaG9uZSBpbiBoaXMgYXNzLiAKQXBycyB1biBwcmVtaWVyIGFydGljbGUgc3VyIGxhIGNvdXJzZSAgbCdodGVsIGRlIHZpbGxlLCBhdWpvdXJkJ2h1aSBub3VzIGFib3Jkb25zIGxhIHNpdHVhdGlvbiBkZXMgOWUsIDEwZSBldCAxOGUgYXJyb25kaXNzZW1lbnRzLi4gCkhvdyBhYm91dCB5b3UgcmVhY2ggb3V0IHRvIHNvbWVvbmUgaW4geW91ciBvd24gbGlmZSBpbiBCcm9keSBob25vciBhbmQgc2VlIGhvdyB0aGV5IGRvaW5nPyBUaGV5IG1pZ2h0IG5lZWQgeW91IG1vcmUgdGhhbiB5b3Uga25vdy4gCkEgQnJhdmVuZXQKU28sIEkgdGFsa2VkIGFib3V0IG15IGFueGlldHkgZWFybGllciB0aGlzIHdlZWsuIEknbSBjdXJyZW50bHkgYXQgd29yaywgaW4gdGhlIGJhdGhyb29tLCBmZWVsaW5nIHNpY2suIFRoYW5rZnVsbHkgbXkgYm9zcyBoYXMgdG8gcnVuIHNvbWUgZXJyYW5kcyB0aGlzIG1vcm5pbmcgc28gSSBkb24ndCBoYXZlIHRvIGV4cGxhaW4gYW55dGhpbmcuIApBc2hsZXkgRGVsYW5leSBIb3JuIHdhcyBtYXJyaWVkIHRvIFJhbmR5IEouIApTaGUgd29uIHNpbHZlciB3aXRoIEphbWVzIEpvaG5zb24gaW4gMTkwOCBhbmQgYnJvbnplIHdpdGggQmFzaWwgV2lsbGlhbXMgaW4gMTkyMC4gKEZ1bGwgQW5zd2VyKS4gClRoZSBjb2RlIG5hbWUgY2FtZSBmcm9tIHRoZSBPbGQgVGVzdGFtZW50IHBhc3NhZ2UgaW4gd2hpY2ggZW5lbWllcyBhcmUgaW5zdHJ1Y3RlZCB0byB0dXJuIHRoZWlyIHN3b3JkcyBpbnRvIGdhcmRlbmluZyB3ZWFwb25zIGFuZCBnYXJkZW4gdG9nZXRoZXIgaW5zdGVhZCBvZiBraWxsaW5nIGVhY2ggb3RoZXIuIEFwcGx5aW5nIHRoYXQgbG9naWMgdG8gbnVjbGVhciB3ZWFwb25zLCB0aGUgVW5pdGVkIFN0YXRlcyBwb3NlZCB0aGUgcXVlc3Rpb246IFdoeSB1c2UgY2FyZWZ1bGx5IHBsYWNlZCBkeW5hbWl0ZSB3aGVuIHlvdSBjb3VsZCBjcmVhdGUgYSBuZXcgaGFyYm9yIGluIHNlY29uZHMgd2l0aCBudWNsZWFyIHdlYXBvbnM/IEVkd2FyZCBUZWxsZXIsIHRoZSBBbWVyaWNhbiB3aG8gaW52ZW50ZWQgdGhlIGh5ZHJvZ2VuIGJvbWIsIHN1Z2dlc3RlZCBsaW5pbmcgdXAgYWNyb3NzIHRoZSBJc3RobXVzIG9mIFBhbmFtYSBmb3IgdGhlIHB1cnBvc2Ugb2YgaW5zdGFudGx5IGNyZWF0aW5nIGEgc2Vjb25kIFBhbmFtYSBDYW5hbC4gClNpIGxlcyBwbGFudGVzIG9udCBkZXMgdmVydHVzIG1kaWNpbmFsZXMsIGMgcXUgc29udCBlbGxlcyBtbWVzIGRlcyBkb25zIGR1IGNpZWwgZXQgbGVzIHJhY2luZXMgZGUgbGEgdmllLiAKTWFueSBvZiB0aGUgMjYgY3VzdG9tZXJzIGZpcnN0IG5hbWVkIGJ5IHBvbGljZSBhcyBoYXZpbmcgc29saWNpdGVkIHByb3N0aXR1dGlvbiBhbmQgcmVjb3JkZWQgb24gdmlkZW8gc3VydmVpbGxhbmNlIHdlcmUgaWRlbnRpZmllZCBkdXJpbmcgcm91dGluZSB0cmFmZmljIHN0b3BzIGFmdGVyIGxlYXZpbmcgdGhlIEFzaWFuIHNwYSwgdGhlIGFmZmlkYXZpdCBzdGF0ZXMuIEEgc3Bva2VzcGVyc29uIGZvciBKdXBpdGVyIHBvbGljZSBjb3VsZCBub3QgYmUgcmVhY2hlZC4gCldoYXQgZG8geW91IG1lYW4gYnkgZ3V0dHVyYWwgYW5kIHdoYXQgZG9lcyBpdCBoYXZlIHRvIGRvIHdpdGggYSBsYW5ndWFnZSBiZWluZyAiaGFyc2giLiBHdXR0dXJhbCBkb2VzIGhhdmUgYSBsaW5ndWlzdGljIG1lYW5pbmcsIGJ1dCBpbiBteSBleHBlcmllbmNlIG1vc3QgcGVvcGxlIHNpbXBseSB1c2UgaXQgYXMgYSBzeW5vbnltIHRvIGhhcnNoIGFzIGlmIHRoZXkgb25lIGFuZCB0aGUgc2FtZS4gClRha2UgYSBsb29rIGF0IFNwYW5pc2ggbmFtaW5nIGNvbnZlbnRpb24gZm9yIGEgc2ltaWxhciBwcmFjdGljZS4gCklmIEkgd2VyZSBpbiBjaGFyZ2Ugb2YgdGhlIG1pbGl0YXJ5IGFuZCB0aGVzZSB1bmtub3duIGJlaW5ncyB3aXRoIGV4dHJlbWUgcG93ZXIgY2FtZSBhbG9uZyBkZXN0cm95aW5nIGV2ZXJ5dGhpbmcsIEkgd291bGQgc2ltdWx0YW5lb3VzbHkgYmUgbmVydmUgZ2Fzc2luZywgbXVzdGFyZCBnYXNzaW5nLCBzbmlwaW5nLCBib21iaW5nIHRoZSBzaGl0IG91dCBvZiB0aGVtLiBDYW4gc3RyYW5nZSBhbmQgYW5kIHNjYXJsZXQgd2l0Y2ggaGFuZGxlIGFsbCBvZiB0aGF0IGF0IHRoZSBzYW1lIHRpbWU/IE1heWJlIHdpdGggdGhlIHJlc3Qgb2YgdGhlIE1DVSwgdGhleSBjYW4sIGJ1dCBub3QgZm9yIG1vcmUgdGhhbiAyNCBob3VycyBzdHJhaWdodC4gCkJhY2sgYXQgdGhlIG1haW4gbWVudS4gClRoaXMgaXMgYSBkYW5nZXJvdXMgZ2FtZSB0byBiZSBwbGF5aW5nIG5vIG1hdHRlciB3aGF0IHNpZGUgYSBwZXJzb24gb24sIGFuZCBJIGRvbiBrbm93IGlmIEkgY2FuIHN0YW5kIGZvciBoZXIgZGl2aXNpdmVuZXNzIGp1c3QgYmVjYXVzZSBJIGFncmVlIHdpdGggaGVyLgpNYW55IGluZGl2aWR1YWxzIHdpbGwgc2V0IG91dCBwb2tlciBwcm9kdWN0cyBhbmQgYWNjZXNzb3JpZXMsIG5vdCByZWFsaXppbmcgdGhlIHRydWUgdmFsdWUgYmVoaW5kIHRoZW0uIApUaGlzIGlzIHdoeSBtZW4gYXJlIHNvIHVud2lsbGluZyB0byBhc3N1bWUgdGhlIHByaW1hcnkgcmVzcG9uc2liaWxpdHkgaW4gY2hpbGQgdXBicmluZ2luZy4gVGhpcyBpcyB3aHkgc28gbWFueSB3b21lbiBsb3NlIHRoZWlyIGNhcmVlcnMgYmVjYXVzZSB0aGVpciBwYXJ0bmVycyBhcmUgdW53aWxsaW5nIHRvIGdpdmUgdXAgdGhlaXJzLiBZb3Ugc2hvdWxkIHJlYWxseSB0aGluayBhYm91dCB0aGUgYXNzdW1wdGlvbnMgeW91IG1hZGUgaW4geW91ciBwb3N0IGFuZCBob3cgaXQgcGVycGV0dWF0ZXMgc29tZSByZWFsbHkgYmFkIGlkZWFzIHRoYXQgbmVnYXRpdmVseSBpbXBhY3QgYm90aCBtZW4gYW5kIHdvbWVuLi4gCiB0b3VmZmVyIGVuIGVtYnJhc3NhbnQgOiBwZXJmaWRpZSBhYm9taW5hYmxlLiAKRm9yZCBXZXJrZSAoYWthIHRoZSBtb2Rlcm4gR2VybWFuIGF1dG9tYWtlciBhbmQgc3Vic2lkaWFyeSB0aGF0IG1ha2VzIHVwIG1vc3Qgb2YgRm9yZCBvZiBFdXJvcGUpIHdhcyBuYXRpb25hbGl6ZWQgYnkgdGhlIFRoaXJkIFJlaWNoIGFuZCBidWlsdCB0aGUgdHVyYmluZXMgdXNlZCBpbiBWMiByb2NrZXRzIGFuZCBtYW51ZmFjdHVyZWQgR2VybWFuIHRydWNrcy4gClN0cmlja2VyIHdhcyAxZG93biB3aXRoIHR3byBob2xlcyBsZWZ0IHdoZW4gaGUgcm9sbGVkIGluIGEgNSBmb290IGJpcmRpZSBwdXR0IG9uIE5vLiAKTmViZW4gZGVuIEFwYXJ0bWVudHMgaGFiZW4gd2lyIGF0dHJha3RpdmUgR2VtZWluc2NoYWZ0c2VpbnJpY2h0dW5nZW4sIHdpZSBQb29sLCBHYXJ0ZW4sIEF1ZW5rY2hlIHVzdy4genVyIGdlbWVpbnNjaGFmdGxpY2hlbiBOdXR6dW5nIGFsbGVyIEJld29obmVySW5uZW4gZGVyIEFubGFnZS4KWW91IGp1c3QgaGF2ZSB0byByYXRpb25hbGx5IHRlbGwgeW91cnNlbGYgY29uc3RhbnRseSB0aGF0IHRoZXJlIGlzIG5vIGJlbmVmaXQgdG8geW91IG9ic2Vzc2luZyBtZW50YWxseSBvdmVyIGRvaW5nIHNvbWV0aGluZyB0aGF0IHlvdSBkb24gaGF2ZSB0byBkbyBpdCB0aGlzIHZlcnkgbWludXRlIGJlY2F1c2UgeW91IGFyZSByZWFsbHkgZXhlcnRpbmcgbmVnYXRpdmUgZW5lcmd5IGFuZCBhbnhpZXR5IGRyaXZlbiBlbmVyZ3kgb24gc2ltcGx5IHRoaW5raW5nISBBbmQgdGhlbiBpdCBsaWtlIGEgU25vd2JhbGwgRWZmZWN0LCB5b3Ugc3RhcnQgd29ycnlpbmcgYWJvdXQgZG9pbmcgaXQgYW5kIHRoZW4geW91IHdvcnJpZWQgZ3Jvd3MgYW5kIGdyb3dzIGFuZCB0aGVuIGl0IHN0YXJ0cyB0dXJuaW5nIGludG8gcHN5Y2hvc29tYXRpYyBzeW1wdG9tcyB0aGF0IHBoeXNpY2FsbHkgd2lsbCBhZmZlY3QgeW91ciBib2R5IGFuZCBjYXVzZSBhbiBhbnhpZXR5IGF0dGFjay4uIApBbGJlcnRhIEdhbWluZywgTGlxdW9yIGFuZCBDYW5uYWJpcyAoQUdMQykgaGFzIGlzc3VlZCBhIHJlcXVlc3QgZm9yIHByb3Bvc2FscyAoUkZQKSBmb3IgYSBjb250cmFjdG9yIHRvIHByb3ZpZGUgdGhvc2Ugb25saW5lIHNlcnZpY2VzIGluIGFuIGF0dGVtcHQsIGl0IHNheXMsIHRvIGtlZXAgdGhlIGNvbW1pc3Npb24gcmVsZXZhbnQgYW5kIHByb3ZpZGUgYSBzYWZlIGdhbWluZyBvcHRpb24uClRoZSAyNiB5ZWFyIG9sZCwgb2YgSG9ybiBQYXJrLCBMZWUsIHdobyBoYXMganVzdCByZWxlYXNlZCBoaXMgZmlyc3QgRFZELCBleHBsYWluZWQ6IHJlYWxseSBnb29kIGZyaWVuZCBvZiBtaW5lIGxpdmVkIG9wcG9zaXRlIHdobyB3YXMgZG9pbmcgbWFnaWMgYXMgd2VsbC4gSXQgd2Fzbid0IHNpbGx5IHN0dWZmICAgaXQgd2FzIHByb3BlciB0cmlja3MuCkJlZm9yZSB5b3VyIGxhc3QgYmFsbCwgeW91IHVzdWFsbHkgc2VlIGEgc2NyZWVuIGZsYXNoIHVwIG9uIHRoZSBkaXNwbGF5IHNheWluZyBzb21ldGhpbmcgbGlrZSAiUmVwbGF5IFZhbHVlOiAzMCBtaWxsaW9uLiIgVGhpcyBtZWFucyB0aGF0IGlmIHlvdSByZWFjaCB0aGlzIHBvaW50IHRvdGFsLCB5b3UgcmVjZWl2ZSBhIGZyZWUgZ2FtZS4gRnJlZSBnYW1lcyBhcmUgZmV3IGFuZCBmYXIgYmV0d2VlbiAgIG1vc3QgbW9kZXJuIG1hY2hpbmVzIGFyZSBzZXQgc28gdGhhdCBvbmx5IGFib3V0IHRoZSB0b3AgMTAgcGVyY2VudCBvZiBzY29yZXMgaXMgYWJvdmUgdGhlIHJlcGxheSB2YWx1ZSBzY29yZS4gCldoZW4geW91J3JlIGxvb2tpbmcgdG8gYm9vayBhIG1hc3NhZ2UgZm9yIHlvdXJzZWxmIG9yIGdpZnQgb25lIHRvIHNvbWVvbmUgZWxzZSwgeW91IGRvIG9uZSBvZiB0d28gdGhpbmdzLiBZb3UgZ28gdG8gc29tZXdoZXJlIHlvdSd2ZSBhbHJlYWR5IGJlZW4geW91cnNlbGYgT1IgeW91IHNlYXJjaCBvbmxpbmUuClByb2dyZXNzaXZlIG1hcmlqdWFuYSB1c2VyIGhlcmU7IEkgZGlkbiBjYXJlIGF0IGFsbCBhYm91dCBsZWdhbGl6YXRpb24uIEkgYmVlbiBidXlpbmcgaXQgZnJvbSBhIHN0b3JlLCBoYXNzbGUgZnJlZSwgZm9yIHllYXJzLiAKT25lIHRpbWUgd2hlbiBJIHdhcyBpbiBlbGVtZW50YXJ5IHNjaG9vbCwgbXkgbW9tIHRvb2sgbXkgYmVzdCBmcmllbmQgYW5kIEkgb3V0IHRvIGVhdC4gCkkgdW5kZXJzdGFuZCB5b3Ugd2FudCB0byBiZXQsIGJ1dCB3aGF0IHdvcnNlIGhhbmQgaXMgY2FsbGluZz8gWW91IGFuZCB0aGUgYm9hcmQgYmxvY2sgYWxsIHRoZSBudXQgZmx1c2ggZHJhd3MgdGhhdCB3b3VsZCBoYXZlIGNhbGxlZCB5b3VyIDNiZXQgcHJlLiBTbyBpdCBvbmx5IHZhbHVlIG91dCB0aGVyZT8gSnVzdCA0IGNvbWJvcyBvZiBBSywgbWF5YmUgMyBjb21ib3Mgb2YgS1FzLCBhbmQgbWF5YmUgeW91IGdldCBvbmUgc3RyZWV0IG91dCBvZiBRUSBhbmQgSkouIFRoYXQgcHJldHR5IHNsaW0uIApEdXJpbmcgbm9ybWFsIGJyZWF0aGluZywgd2UgdGFrZSBpbiBhaXIgZnJvbSB0aGUgbW91dGggYW5kIG5vc2UsIGFuZCBpdCBmbG93cyB0aHJvdWdoIHRoZSBwaGFyeW54LCBwYXN0IHRoZSBnbG90dGlzIGFuZCBpbnRvIHRoZSBsYXJ5bnggYW5kIHRyYWNoZWEsIGVuZGluZyBpbiB0aGUgbHVuZ3MuIApKZXNzZSBTLiBTb21lcgpJIHJlYWxseSBuZWVkZWQgaXQuIFRoYW5rIHlvdSB3aG9ldmVyIGRvbmUgaXQuIAoiSWYgdGhlcmUgYXJlIG5vIG1ham9yIGdvdmVybm1lbnQgY2hhbmdlcyB0byBvdXIgbWVtb3JhbmR1bSBvZiBvcGVyYXRpb24gd2Ugc2hvdWxkIGJlIGFibGUgdG8gbWFpbnRhaW4gZmluYW5jaWFsIHN1Y2Nlc3MgaW4gMjAxMiAxMyBvbiBhIGxlc3NlciBzY2FsZSB3aXRoIGEgYnVkZ2V0IHByb2ZpdCBvZiAkMyBtaWxsaW9uLiIKQWNjb3JkaW5nIHRvIHRoZSBVUyBEZXBhcnRtZW50IG9mIEhlYWx0aCBhbmQgSHVtYW4gU2VydmljZXMsClNoZSBhIGZhc3QgbGVhcm5lci4gU2hlIGluZGVwZW5kZW50LiAKQW5kIHlvdSByZWFsaXplIHlvdSBoYXZlIGp1c3Qgd2F2ZWQgeW91ciBqdW5rIGF0IGV2ZXJ5b25lLiAKTWl4IGluIHNvbWUgcHJvcGVyIG51dHJpdGlvbiBjbGFzc2VzIChpdCBzaG9ja2luZyBob3cgZmV3IHBlb3BsZSBrbm93IHdoYXQgYSBjYWxvcmllIGlzIG9yIGhvdyB0byByZWFkIGEgZm9vZCBsYWJlbCkgYW5kIHRoaW5nIHdvdWxkIGltcHJvdmUuLiAKQzBscGEgIDgyIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvClRoZXJlIHdlcmUgb3RoZXJzIHRvby4gCkl0IGJlZW4gYSBsb25nIHRpbWUgc2luY2UgSSBiZWVuIHRvIEhpbGxzYm9ybyBWaWxsYWdlLCBidXQgSSByZW1lbWJlciB0aGVyZSBiZWluZyBzb21lIGJvdXRpcXVlIHNob3BzIHRoZXJlLiBGb3IgdGhlIG1vc3QgcGFydCB5b3UgaGF2ZSB0byBoYXZlIGEgY2FyIHRvIGdldCBhbnl3aGVyZSwgdGhlcmUgbm90IGEgbG90IGRvd250b3duIGJlc2lkZXMgY2hlZXN5IGhvbmt5IHRvbmtzIGV0Yy4gCkFzIGZvciB0aGUgdHJhZGl0aW9uYWwgV2VzdGVybiBndW5maWdodCBhcyBkZXBpY3RlZCBpbiBtb3ZpZXMsIHRoZSBpbmFjY3VyYWN5IG9mIGhhbmRndW5zIGF0IHRoZSB0aW1lIHdvdWxkIGhhdmUgbWFkZSBxdWljayBkcmF3aW5nIHNraWxsIGlycmVsZXZhbnQ6IEl0IHdhcyBzaW1wbHkgc28gdW5saWtlbHkgeW91J2QgaGl0IGEgZ3V5IG9uIHRoZSBmaXJzdCwgc2Vjb25kIG9yIHRoaXJkIHNob3QgdGhhdCBpdCBkaWRuJ3QgcmVhbGx5IG1hdHRlciB3aGljaCBndXkgZ290IG91dCBoaXMgZ3VuIGZpcnN0LiBUaGUgY2xvc2VzdCBoaXN0b3J5IGdvdCB0byBoaWdoIG5vb24gc2hvdyBkb3ducyB3YXMgZHVlbGluZywgd2hlcmUgcGVvcGxlIGp1c3Qgc3Rvb2QgYWNyb3NzIGZyb20gb25lIGFub3RoZXIgd2l0aCB0aGVpciBndW5zIG91dCwgYWltZWQgYW5kIGZpcmVkIHVudGlsIHNvbWVvbmUgZ290IGx1Y2t5LCBhbmQgc29tZW9uZSBlbHNlIHdhcyBkZWFkLiBGb3JnZXQgYWJvdXQgImZhbm5pbmcsIiByYXBpZGx5IGNvY2tpbmcgYSBzaW5nbGUgYWN0aW9uIHJldm9sdmVyIGJldHdlZW4gcm91bmRzIGxpa2UgQ2xpbnQgRWFzdHdvb2QgZG9lcyBpbiBBIEZpc3RmdWwgb2YgRG9sbGFycy4gCkF2ZXJhZ2VkIGFjcm9zcyB0aGUgY2l0eSdzIDIxMCwwMDAgcmVzaWRlbnRzLCB0aGF0J3MgYWxtb3N0ICQ4ODAwIHB1dCB0aHJvdWdoIChvciAkODgwIGxvc3QpIHBlciByZXNpZGVudC4gCldlIGhhZCB0aHJlZSBwbGF5ZXJzIHNpdHRpbmcgYXJvdW5kIGEgZ2FsYSBkaW5uZXIgdGFibGUgaW4gTW9udHJldXggICBHZW5lcmFsIE1vdG9ycycgbmV3IGJvc3MgUmljayBXYWdvbmVyOyBQU0EvUGV1Z2VvdCBDaXRyb2VuIENoYWlybWFuIEplYW4gTWFydGluIEZvbHo7IGFuZCBQcmVtaWVyIEF1dG9tb3RpdmUgR3JvdXAgY2hpZWYgV29sZmdhbmcgUmVpdHpsZS4gClRoZSBjYXNobGVzcyBzb2NpZXR5IHdpbGwgYmUgYSBuZXcgd29ybGQgZnJlZSBvZiAkMSBhbmQgJDIgY29pbnMsIG9yICQ1IG9yICQxMCBiYW5rIG5vdGVzLiAKQnV0IG15IHJlY29tbWVuZGF0aW9uIGF0IHRoZSB0aW1lIHdhcyB0aGF0IGlkZWEgaXMgbm90IHBsYXVzaWJsZSwgcGFydGx5IGJlY2F1c2Ugb2YgdGhlIGV4cGVydGlzZSBvZiB0aGUgZ3JvdXAgd2hvIHdlcmUgcHJvcG9zaW5nIGl0LiAKQWx0aWRvcmUgd2FzIGRyYWZ0ZWQgMTd0aCBvdmVyYWxsIGJ5IHRoZSBNZXRyb1N0YXJzIChub3cgTmV3IFlvcmsgUmVkIEJ1bGxzKSBpbiB0aGUgMjAwNiBNTFMgU3VwZXJEcmFmdC4gSGUgc3BlbnQgdHdvIHNlYXNvbnMgaW4gTUxTIGJlZm9yZSBqb2luaW5nIFNwYWluJ3MgVmlsbGFycmVhbCBDRiBpbiBKdW5lIDIwMDguIEhlIHdlbnQgb24gdG8gcGxheSBmb3IgRW5nbGFuZCdzIEh1bGwgQ2l0eSwgVHVya2V5J3MgQnVyYXNwb3IgYW5kIEFaIEFsa21hYXIgb2YgdGhlIE5ldGhlcmxhbmRzIGJlZm9yZSBtb3ZpbmcgdG8gU3VuZGVybGFuZCBpbiBKdWx5IDIwMTMuIEhlIGpvaW5lZCBUb3JvbnRvIGluIEphbnVhcnkgMjAxNS4KQW5kIGluIDIwMDUgaXQgZGVjaWRlZCB0byByZWxpdmUgaXRzIG1pZ2h0eSBnbG9yeSBkYXlzIGFuZCBkbyBpdCBhZ2FpbiwgdGhpcyB0aW1lIGxhbmRpbmcgb24gYSBmb3VyIHllYXIgb2xkIGJveS4gTHVja2lseSBCeXJvbiBzdXN0YWluZWQgbm8gaW5qdXJpZXMuIApQcm9uZ2VyIHNhaWQgdGhlIHdvcnN0IGNhc2VzIG9mIGRpc3RyYWN0ZWQgZHJpdmluZyBoZSBoYXMgc2VlbiBpbnZvbHZlZCBwZW9wbGUgZHJpbmtpbmcgY29mZmVlIHdpdGggb25lIGhhbmQgYW5kIHVzaW5nIHRoZSBwaG9uZSBpbiB0aGUgb3RoZXIsIGFsbCB3aGlsZSBkcml2aW5nIHdpdGggdGhlaXIga25lZXMuClRoZXNlIGFyZSBqdXN0IGEgZmV3IGV4YW1wbGVzIG9mIHRoZSBnZW5lcmFsIGNsYXNzaWZpY2F0aW9ucyBvZiB0aGUgdHlwZSBvZiBwb2tlciBwbGF5ZXJzIHlvdSBtYXkgZW5jb3VudGVyIGF0IGFuIG9ubGluZSBwb2tlciB0YWJsZS4gUmVtZW1iZXIuIHdoZW4geW91IGFyZSBwbGF5aW5nIHBva2VyLCB5b3UgYXJlIHBsYXlpbmcgdGhlIHBlcnNvbmFsaXR5IG9mIHlvdXIgb3Bwb25lbnQgbW9yZSB0aGFuIHlvdXIgY2FyZC4gTWFzdGVyIHRoZXNlIHN0eWxlcyBhbmQgcXVpY2tseSBpZGVudGlmeSB0aGVzZSBwbGF5ZXJzIGR1cmluZyB5b3VyIHBva2VyIGdhbWUuIFZpc2l0IHVzIHRvIGxlYXJuIGFuZCBwbGF5IHBva2VyIGFuZCBvbmxpbmUgY2FzaW5vIGdhbWVzIHRvZGF5LgpJZiB5b3UgYmVnYW4geW91ciBTdWJzY3JpcHRpb24gd2l0aCBhIHByb21vdGlvbmFsIHJhdGUsIHlvdXIgU3Vic2NyaXB0aW9uIHdpbGwgYXV0b21hdGljYWxseSByZW5ldyBhdCB0aGUgcmVndWxhciBTdWJzY3JpcHRpb24gcmF0ZSBpbmRpY2F0ZWQgaW4geW91ciBpbml0aWFsIFN1YnNjcmlwdGlvbiBvcmRlci4KSXQgZmVsdCBsaWtlIGEgcmluZywgb3Igc29tZW9uZSB3YXMgcGluY2hpbmcgb2ZmIHdoZXJlIG15IGVzb3BoYWd1cyBtZWV0cyBteSBzdG9tYWNoLiBJIHdhcyBjb25zdGFudGx5IGJsb2F0ZWQsIG15IGRpZ2VzdGlvbiB3YXMgdmVyeSBzbG93IHNvIEkgd2FzIGFsd2F5cyBjb25zdGlwYXRlZC4gClRoZSBuZXh0IHRocmVlIGJhbGxzIHdlcmUgYWxsIHdpZGVzICAgdHdvIGZvciB3aWR0aCBhbmQgb25lIGZvciBoZWlnaHQuLiAKIldoZW4gSSBmaXJzdCBoZWFyZCBhYm91dCBpdCwgSSB3YXMgcmVhbGx5IHVwc2V0LCBJIHdhcyByaWxlZCwgYW5kIEkgd291bGQgcmFudCBvbiBteSBibG9nLiIKREVBVEhTIE9GIFRIRSBEQVkgQnkgVEhFIEFTU09DSUFURUQgUFJFU1MgTUFSQkxFSEVBRCwgTWFzcy4gClRoZSBjYXN0ZXIgdGhlbiBkZWNpZGVzIGhvdyBtdWNoIG9mIHRoZWlyIGxpZmUgZm9yY2UgaXMgc2FjcmlmaWNlZCBieSBzZWxlY3RpbmcgYSBudW1iZXIgb2YgaGl0IHBvaW50cyAobWluaW11bSBvZiA1KS4gClBsZWFzZSBiZSBjYXJlZnVsIGFzIHRoZXJlIGFyZSBkb3duIHRyZWVzIGFuZCBsaW1icyB0aGF0IG1heSBiZSBjb3ZlcmVkIGJ5IHRoZSBzbm93IHdlIHJlY2VpdmVkIHllc3RlcmRheS4uIApJdCBjb21lcyBkb3duIHRvIHNpbXBseSBzcG9ydHNtYW5zaGlwLiBDb21wZXRpdGlvbnMgd2l0aCBvbmUgb3IgdHdvIHRlYW1zIHN0YWNrZWQgd2l0aCB0YWxlbnQgaXMgYm9yaW5nIGZvciBhbGwgYnV0IHRob3NlIHRlYW1zIHN1cHBvcnRlcnMuIEl0IGhhcmtzIGJhY2sgdG8gdGhlIHNjaG9vbHlhcmQgd2hlcmUgdGVhbXMgYXJlIHBpY2tlZCBhdCBsdW5jaHRpbWUgb25lIGF0IGEgdGltZSwgY3JlYXRpbmcgYSBsZXZlbCBwbGF5aW5nIGZpZWxkLgpUaGlzIGd1biBzdHVmZiBwaXNzZXMgbWUgb2ZmLiBEbyB3ZSBhc2sgdG8gYmFuIGtuaXZlcyB3aGVuIHNvbWVvbmUgc3RhYnMgc29tZW9uZSBvciBkbyB3ZSBhc2sgdG8gYmFuIGNhcnMgd2hlbiBzb21lb25lIHJ1bnMgc29tZW9uZSBvdmVyIG9yIGRvIHdlIGFzayB0byBiYW4gYmFzZWJhbGwgYmF0cyB3aGVuIHNvbWVvbmUgd2hhY2tzIHNvbWVvbmUgdG8gZGVhdGg/CkV2ZXJ5IHN0b3J5IHdlJ3ZlIHNoYXJlZCwgZXZlcnkgYWR2ZW50dXJlIGFuZCBsaWZlIGxlc3NvbiB5b3UndmUgZ2l2ZW4gbWUsIGhhdmUgYmVlbiBiZWNhdXNlIG9mIHRoZSB3b25kZXJmdWwgbW90aGVyIHlvdSBhcmUsIGFuZCBhbHRob3VnaCBJIGZlZWwgY29tcGxldGVseSByb2JiZWQgb2YgdGltZSB3aXRoIHlvdSwgSSBhbSBzbyB1bmJlbGlldmFibHkgZ3JhdGVmdWwgdG8gaGF2ZSBoYWQgeW91IGFzIG15IG1vdGhlci4uIApJbiBQbyBLZSBObyBob3dldmVyLCB0aGlzIGlzIG5vdCB0aGUgY2FzZS4gClBvbGljZSByYWlkIG1hc3NhZ2UgcGFybG91cgoiU29tZSBndXlzIHdvbid0IGV2ZW4gaGFuZCBtZSB0aGUgbW9uZXkgICB0aGV5IHRocm93IGl0IG9uIHRoZSBiZWQgb3IgdGhleSB0aHJvdyBpdCBvbiB0aGUgZmxvb3IsIiBzaGUgc2FpZC4gIkl0J3MgZGVncmFkaW5nIFRoZXkgd291bGQgbmV2ZXIgdHJlYXQgdGhlaXIgd2l2ZXMgb3IgZ2lybGZyaWVuZHMgb3Igc29tZW9uZSB0aGV5IHdlcmUgdHJ5aW5nIHRvIHBpY2sgdXAgaW4gYSBiYXIgbGlrZSB0aGF0LiIKSmltOiBNeSBkYWQgd2FzIGEgY2l2aWwgZW5naW5lZXIgYW5kIG15IG1vbSB3YXMsIHNoZSB0b29rIG9uIGpvYnMgdGhhdCBnYXZlIGhlciB0aGUgYWJpbGl0eSB0byB0YWtlIGNhcmUgb2YgdXMgYWZ0ZXIgd2UgY2FtZSBob21lIGZyb20gc2Nob29sLiBTbyBJIHJlbWVtYmVyIHdoZW4gd2Ugd2VyZSByZWFsbHkgeW91bmcsIHNoZSB3YXMgYSBuYW5ueSBsaWtlIHdoZW4gSSB3YXMgYW4gaW5mYW50LiBTaGUgd2FzIGEgbmFubnkgYW5kIHNoZSB3YXMgYWJsZSB0byB0YWtlIG1lIHdpdGggaGVyIHdoZW5ldmVyIHNoZSB3YXMgdGFraW5nIGNhcmUgb2YgdGhlIG90aGVyIGtpZC4gClVzaW5nIGEgZ29vZCBwb2tlciBjb3ZlciBjYW4gaGVscCB5b3UgYSBsb3Qga2VlcGluZyB5b3VyIGNhcmRzIHNhZmUuIFlvdSBjYW4gZmluZCB0aGVzZSBwb2tlciBjb3ZlcnMgYXZhaWxhYmxlIGluIGFsbCB0aGUgcmVub3duZWQgc3RvcmVzIHNlbGxpbmcgcG9rZXIgY29sbGVjdGlibGVzIG5lYXJieS4gClRva3lvIGhhcyBtb3JlIG9mIGEgY29uc2NpZW50aW91cyBhcHByb2FjaCBpbiBwcmVzZXJ2aW5nIG5hdHVyZS4gT25lIGV4YW1wbGUgZnJvbSB3aGF0IEkgcmVtZW1iZXIgaXMgdGhhdCAyMCBwZXJjZW50IG9mIFRva3lvIGlzIHJlcXVpcmVkIGJ5IGxhdyB0byBiZSBjb3ZlcmVkIGluIHBhcmtzIGFuZCB0cmVlcy4gCiggbW9yZSkgTXkgTWVkaWEgUmVsZWFzZSBMYWJvcjogQSBWaXN1YWwgR3VpZGUgUGl0dGluZyBFZGVtYSBBIFZpc3VhbCBUb3VyIG9mIGFuIE5vbiBTdHJlc3MgVGVzdCBPYnNlcnZpbmcgRmV0YWwgUG9zaXRpb24gKHdpdGhvdXQgb25lJ3MgaGFuZHMpIEFtbmlvbiBDaG9yaW9uIFRyYWlsaW5nIE1lbWJyYW5lcyBWZXJuaXggQmFieSBCb3JuIGluIHRoZSBDYXVsIChBbW5pb3RpYyBTYWMpIFNwbGl0dGluZyBVcCAiVGVhY2hpbmciIFBvc3RzIFRoZSBQbGFjZW50YSAoIEFtbmlvdGljIFNhYykgQ2xvc2UgdXAgVmlldyBvZiBVbWJpbGljYWwgVmVzc2VscyBFZmZlY3Qgb2YgU2hvdWxkZXIgRHlzdG9jaWEgb24gQmFieSdzIEZhY2UgQnJ1aXNlIGZyb20gVmFjdXVtIERlbGl2ZXJ5IFZlbGFtZW50b3VzIEluc2VydGlvbiBvZiB0aGUgVW1iaWxpY2FsIENvcmQgVG9uZ3VlIFRpZSBCaXJ0aCBCYWxscyBVZ2x5IChpbiBMIE1vbmdvbGlhbiBTcG90IExldCdzIFJlYWQgVGhpcyBLaWRzJyBCb29rIFRvZ2V0aGVyIGN5YmVyIEFzayBhIE1pZHdpZmUgKG15IG5ldyB2ZW50dXJlKSBCaXJ0aGluZyBGYXQ6IEluc3VsaW4gQmlydGhpbmcgRmF0OiBCYWNrZ3JvdW5kIERyLiAKV2hlbiBjcmFmdGluZyBjb250ZW50IHRvIHByb21vdGUgYSBUViBzaG93LCBmaW5kIGEgY29ubmVjdGluZyB0aHJlYWQgYmV0d2VlbiBmaWN0aW9uIGFuZCByZWFsaXR5IHRvIGFkZCBkZXB0aCB0byB0aGUgY29udGVudC4gRG8geW91ciBjaGFyYWN0ZXJzIGxpdmUgaW4gYW4gaW50ZXJlc3RpbmcgY2l0eSBvciBoYXZlIHVuaXF1ZSBjYXJlZXJzPyBJbnZlc3RpZ2F0ZSB3aGF0IHRoZWlyIGxpZmUgd291bGQgbG9vayBsaWtlIGluIHRoZSByZWFsIHdvcmxkIGFuZCBzaGFyZSB0aG9zZSBzdG9yaWVzLiAKSXQgaXMgbm90IHRoZSBMZWZ0cyBqb2IgdG8gZGVyYWRpY2FsaXplLCB0aGV5IGp1c3QgbmVlZCB0byBob25lc3RseSBkaXNhZ3JlZSBhbmQgbm90IGxlYW4gaW50byBoeXBlcmJvbGljIGRlaHVtYW5pemluZyBwcmFjdGljZXMuIENhbGxpbmcgYSBNQUdBIGhhdCBhIG1vZGVybiBkYXkgS0tLIGhvb2QsIG9yIGFsbCBSZXB1YmxpY2FucyBOYXppcywgd2lsbCBub3QgY2hhbmdlIHRoZWlyIG1pbmRzLiBCbG9ja2luZyBjb25zZXJ2YXRpdmVzIGZyb20gc3BlYWtpbmcgb24gY29sbGVnZSBjYW1wdXNlcywgYW5kIGNhbGxpbmcgaWRlYXMgdGhhdCB3ZXJlIG1haW5zdHJlYW0ganVzdCAxMCB5ZWFycyBhZ28gaGF0ZSBzcGVlY2ggYXJlIG5vdCB3YXlzIHRoYXQgY2FuIGNyZWF0ZSBhIFVuaXRlZCBjb3VudHJ5LiBZb3UgaGF2ZSB0byBiZSBhYmxlIHRvIGVuZ2FnZSBwZW9wbGUgZnJvbSBvcHBvc2luZyB2aWV3cywgbm90IHNob3V0IHRoZW0gZG93bi4KWW91IGRpZG50IHJlYWxseSBsb29rIGVpdGhlciwganVzdCBhc3N1bWVkIG9sZCBtYXRlIGluIHRoZSBuaXNzYW4gd2FzbnQgdGhlcmUuIFdoaWxlIGhlIHdhcyBnb2luZyBzbG93IGFuZCBJIHByb2JhYmx5IHdvdWxkIGhhdmUgbWFkZSB0aGUgc2FtZSBhc3N1bXB0aW9uLCBidXQgaW0gbm90IG9uIG15IEwgaGVyZS4gCkhlciBjcmlzaXMgb2YgZmFpdGggY291bGQgYmUgcnVubmluZyBpbmRlcGVuZGVudCBvZiB0aGUgYWJ1c2VyIGRhZHMgYW5kIGV2ZW4gaGVyIG93biBjb21pbmcgdG8gdW5kZXJzdGFuZCBoZXIgc2V4dWFsaXR5LiAKV2hlbiB3ZSBsYXVuY2hlZCB0aGlzIGNvdXJzZSwgRmVybmFuZG8gbWFkZSBwcm9taXNlcyB0byB1cyBpbnRlcm5hbGx5IGFib3V0IGhpcyBpbnRlbnQgdG8gd29yayB3aXRoIHVwc3dpbmcgd2l0aCB0aGUgbG9uZyBoYXVsLCBzbyB0aGF0IHdlIHdvdWxkIGJlIGFibGUgdG8gc2VsbCA2IG1vbnRoIGFuZCAxMiBtb250aCBwYWNrYWdlcy4gVGhpcyB3YXMgYSBkZWNpc2l2ZSBmYWN0b3IgaW4gdXMgdXNpbmcgdGhpcyBwcmljaW5nIG1vZGVsLgpJIGNvbm5lY3RlZCB0byB0aGF0LiAKV2UndmUgbWVudGlvbmVkIFRvZGQgYmVmb3JlLCBidXQgd2hvIGlzIFN0b3AgQ2FzaW5vcyBOb3c/Ckl0IGNlcnRhaW5seSBpcyBmb3IgUGFyaXNpYW5zIGxpdmluZyBvbiB0aGUgcnVlIENybWlldXgsIGEgcGljdHVyZXNxdWUgc3RyZWV0IGluIHRoZSAxMnRoIGFycm9uZGlzc2VtZW50KGRpc3RyaWN0KSBvZiBQYXJpcywgYmV0d2VlbiBCYXN0aWxsZSBhbmQgdGhlIEdhcmUgZGUgTHlvbi4gIkl0J3MgYmVjb21lIGhlbGxpc2guIApFYXNpbHkgY2hlY2tlZC4gClRoZSBzYW1lIHllYXIsIHRoZSBpbmRpY3RtZW50IGFsbGVnZXMsIHNldmVyYWwgb3RoZXJzIGFzc2F1bHRlZCBhIHBhbmhhbmRsZXIgYWZ0ZXIgUGFycmVsbG8gb3JkZXJlZCB0aGVtIHRvICJicmVhayBoaXMga25lZXMiIGZvciBoYXJhc3NpbmcgY3VzdG9tZXJzIG91dHNpZGUgaGlzIHJlc3RhdXJhbnQuIApJIGVuZGVkIHVwIGdldHRpbmcgYSBiYXNlIEdvbGYgYXV0b21hdGljIChCZWNhdXNlIFNhbiBGcmFuY2lzY28pLCBmb3IgNDMwMCBvZmYgTVNSUCBiZWNhdXNlIGRpZXNlbGdhdGUuIFRoZSBHb2xmIGlzIGJ1aWx0IGluIFB1ZWJsYSBNZXhpY28sIGlzIHJlbGlhYmxlLCBxdWlldCwgY29tZm9ydGFibGUsIGZhc3QsIGFuZCAob25jZSBJIGJvdWdodCBzb21lIHRha2VvZmYgMjI1IHdpZHRoIHdoZWVscykgZnVuIHRvIGRyaXZlLiAKSSB3YXMgbG9va2luZyBhdCBtb3ZpbmcgYSByYWNrIGludG8gYSBuZXcgY29sbyBkb3dudG93biBhbmQgdGhleSB0b29rIG1lIHRocm91Z2ggYSBtb3JlIHNlY3VyZSB0aGFuIG5vcm1hbCBlbnRyYW5jZSBkdXJpbmcgdGhlIHRvdXIgb2YgdGhlIGZhY2lsaXR5LiBXZSBwYXNzZWQgYSByb29tIG5leHQgdG8gYSBndWFyZCBzdGF0aW9uIHRoYXQgaGFkIHRocmVlIHJhY2tzIGFuZCBvbiB0aGUgdG9wIG9mIHRoZSBtaWRkbGUgcmFjayB3YXMgYSA0VSBwbGF0ZSB3aXRoIGEgc2luZ2xlIHJlZCBwb3J0LiAKIk9uZSBoaWdobGlnaHQgd2FzIHRoZSBpbnRyb2R1Y3Rpb24gb2Ygb3VyIHN0cmVldCBmb29kIHByZWNpbmN0IGR1cmluZyB0aGUgc3VtbWVyIG1vbnRocy4gIlRoaXMgc2F3IHRoZSBpbnRyb2R1Y3Rpb24gc2V2ZXJhbCBuZXcgZm9vZCBvcHRpb25zIGZvciBjdXN0b21lcnMgYW5kIGEgZ3JlYXQgYWxmcmVzY28gZGluaW5nIGF0bW9zcGhlcmUuICJUaGlzIHdhcyBmb2xsb3dlZCBieSB0aGUgY29tbWVuY2VtZW50IG9mIHdvcmtzIHRvIG91ciBhZ2Vpbmcga2l0Y2hlbiwgYmlzdHJvIGFuZCBjYWZlIGFyZWFzLiAiUG9zaXRpdmUgZmluYW5jaWFsIHJlc3VsdHMgYW5kIG9wZXJhdGlvbmFsIHN0YWJpbGl0eSBkb24ndCBoYXBwZW4gd2l0aG91dCB0aGUgZGVkaWNhdGlvbiBhbmQgZWZmb3J0cyBvZiBzdGFmZmluZyBnaXZpbmcgdGhlaXIgYmVzdCwgYm90aCBmcm9udGxpbmUgYW5kIGJlaGluZCB0aGUgc2NlbmVzLiIgVGhlIGtpdGNoZW4sIGJpc3RybyBhbmQgY2FmZSB3b3JrcyBhcmUgZHVlIHRvIGJlIGNvbXBsZXRlZCB0aGlzIG1vbnRoLiAKVGhpcyBpcyBhbHNvIHdoeSBib3RoIHVwcGVyIGFuZCBsb3dlciByZXNwaXJhdG9yeSBpbmZlY3Rpb25zIGFyZW4ganVzdCBjb21tb24gYW5kIGNocm9uaWMgaW4gYWRkaWN0cywgYnV0IHRoZXkgYmVjb21lIHNlcHRpYyBwcmV0dHkgcXVpY2tseS4uIApCdXQgaG9seSBoZWxsZmlyZSB5b3UgYXJlIEdMT1JJT1VTLgpBbmQgd2l0aCB0aGUgdGhpbmdzIGFib3ZlLCBpdCdzIGFsbW9zdCBpbXBvc3NpYmxlIHRoYXQgQW1pc2ggcGVvcGxlIHdvbid0IGhhdmUgY2xlYXIgc2tpbi4gCllvdSBtaWdodCBldmVuIGNvbWUgdG8gdGhpbmsgb2YgaXQgYXMgc29tZXdoYXQgYSBzZWxmaXNoIGFjdCBiZWNhdXNlIGluIHRoZSBwdXJzdWl0IG9mIGhlZG9uaXN0aWMgcGxlYXN1cmVzLCB5b3UgYXJlIG9ubHkgdGhpbmtpbmcgYWJvdXQgeW91ciBvd24gc2VsZi4uIApUaGVuIGl0IHdhcyB0aW1lIHRvIHRyeSBvdXQgdGhlIDgzIEluY2ggUGVkZXN0YWwgUG9rZXIgVGFibGUgd2l0aCBEZWFsZXIgU3BvdCBhbmQgc2VlIGFsbCB0aGUgYmVuZWZpdHMgb2Ygb25lIG9mIHRoZXNlIEN1c3RvbSBQb2tlciBUYWJsZXMgZmlyc3QgaGFuZC4gCkNvdW5jaWxtZW4gR2FyeSBSZWVzZSwgU3RldmUgUm9zcyBhbmQgU3RhdnJvcyBBbnRob255IGFsbCBqb2luZWQgaGVyIGluIHZvdGluZyBmb3IgdGhlIGZpbmUuClRoZSBkb3duc2lkZSBvZiBUcCBpcyBub3RoaW5nIHNwZWNpYWwgaW4gdGhlIG5pZ2h0IHRpbWUgaXMgbm90IHNhZmUgdG8gZ28gb3V0IHRvby4gClBhZGRvY2sgZXhwbGFpbmVkIHRoYXQgZXZlcnl0aGluZyBpbiBoaXMgcm9vbSB3YXMgImNvbXBlZCIgb3IgZnJlZSwgInNvLCB5ZXMsIEkgd291bGQgb3BlbiBhbGwgc29ydHMgb2YgdGhpbmdzLiIKMSBwb2ludCAgc3VibWl0dGVkIDEzIGhvdXJzIGFnbwpMYSBtZWlsbGV1cmUgZmEgZCBkYW5zIGNlIG5vdXZlbCB1bml2ZXJzIHBhc3NlIHBhciBzb24gcHJvamV0IFBZMSwgZGUgbCBkIEx1bmUgUm91Z2UgRW50ZXJ0YWlubWVudC4gT24gcGFybGUgaWNpIGQgZXhwIGltbWVyc2l2ZSwgdmlydHVlbGxlIGV0IGludGVyYWN0aXZlLiAKSSBtZWFuIGxvb2sgYXQgdGhlIExpYmVyYWxzLiAKSnVzdCB0cmllZCB0byB3cml0ZSB0aGVtIGFzIEkgd291bGQgaGF2ZSB0b2xkIHRoZW0gb24gdGhlIHJhZGlvLCBzYWlkIEdhcnJldHQuIFRyaWVkIHRvIG1ha2UgaXQgYSBjb252ZXJzYXRpb25hbCB0eXBlIG9mIGRpYWxvZ3VlLiBJZiB5b3Ugbm90aWNlIHRoZXkgc2hvcnQgc2VudGVuY2VzLCB3aGljaCBpcyBhIGxpdHRsZSBlbWJhcnJhc3NpbmcuIApNJ3Mgc3VyZSBpcyBhIHN0cmFuZ2UgbmFtZSBmb3IgYSBzYW5kd2ljaCBzaG9wISIgeW91IG1pZ2h0IGJlIHNheWluZyB0byB5b3Vyc2VsZiwgYW5kIEkgY291bGRuJ3QgYWdyZWUgbW9yZS4gClVuIGNvdXAgZGUgZmlsICBsIHBlcm1ldCBkZSBjb21wcmVuZHJlIGxhIHZyYWllIG5hdHVyZSBkZXMgc2VydmljZXMgb2ZmZXJ0cyBhdSBzYWxvbiBkZSBtYXNzYWdlLiBVbmUgZmVtbWUgcGFybGFudCBhbmdsYWlzIGF2ZWMgdW4gZm9ydCBhY2NlbnQgYXNpYXRpcXVlIHJwb25kICB1biBqb3VybmFsaXN0ZSBtYXNjdWxpbiBkZSBSYWRpbyBDYW5hZGEgRXN0cmllLiBEJ2VtYmxlLCBlbGxlIGx1aSBkaXQgcXUnZWxsZSBhIHVuIHNwY2lhbCBwb3VyIGx1aS4gSW50cmlndSwgaWwgbHVpIGRlbWFuZGUgIHF1b2kgZWxsZSBmYWl0IHJmcmVuY2UuIFVuIHBldGl0IHJpcmUgbmVydmV1eCBzZSBmYWl0IGFsb3JzIGVudGVuZHJlLiBJbCBlbiBwcm9maXRlIHBvdXIgbHVpIGV4cGxpcXVlciBxdSdpbCB2b3VkcmFpdCBkYXZhbnRhZ2UgcXUndW4gc2ltcGxlIG1hc3NhZ2UsIGNlICBxdW9pIGVsbGUgcnBvbmQgcXUnaWwgbid5IGEgYXVjdW4gcHJvYmxtZS4gTG9yc3F1J2lsIGx1aSBkZW1hbmRlIGNvbWJpZW4gcGV1dCBjb3RlciBjZXMgZXh0cmFzLCBlbGxlIGx1aSBtZW50aW9ubmUgcXUnZWxsZSBwcmZyZSBuZSBwYXMgZW4gcGFybGVyIGF1IHRscGhvbmUgZXQgbHVpIHN1Z2dyZSBwbHV0dCBkZSB2ZW5pciBkaXJlY3RlbWVudCBhdSBzYWxvbiBwb3VyIGVuIGRpc2N1dGVyLgpJIGd1ZXNzLCBhc2sgeW91ciBzdGVwIGtpZHMgd2hhdCB0aGV5IHdhbnQgdG8gZG8gYmVjYXVzZSB0aGV5IG1heSBzdXJwcmlzZSBldmVyeW9uZSBhbmQganVzdCBkbyBpdCBhbnl3YXlzIHRoZSBkYXkgb2YuLiAKRmFtaWx5IGNoYXJnZWQgaW4gcG9zc2libGUgaG9ub3VyIGtpbGxpbmdzIG9mIE1vbnRyZWFsIHdvbWVuIGluIEtpbmdzdG9uLgo0NyBQcm96ZW50IGRlciBHYW1lciBzZWllbiBuYWNoIGVpbmVyU3R1ZGllIGRlcyBWZXJiYW5kcyBnYW1lIiB2b24gMjAxNndlaWJsaWNoLiAKWW91KSBwYXlzIHRoZW0gdGhlIG90aGVyICQ5MCwwMDAuIFRoZSBjb21wYW55IGdldHMgbWlsbGlvbnMgbW9yZSBmcm9tIHRoZSB0YXhwYXllcnMuIApJZiB5b3UgYXJlIHBsYXlpbmcgYSB2aWRlbyBzbG90IHdpdGggMTAwIHBheWxpbmVzIGF0ICQxIHBlciBsaW5lLCB5b3VyIG1pbmltdW0gYmV0IGlzICQxMDAgcGVyIHBsYXkuIApObyBjdXN0b21lcnMgd2VyZSBpbnNpZGUgdGhlIGJ1c2luZXNzLCBidXQgZGV0ZWN0aXZlcyBhcnJlc3RlZCBMYW4gSmluLCAyOCwgYW5kIFhpYW5nIFppIFlpbiwgMzksIHdobyB3ZXJlIGxpdmluZyBpbnNpZGUsIGRldGVjdGl2ZXMgc2FpZC4gClRoZSBzY2hvb2wsIHdoaWNoIGhhZCAxMTAgc3R1ZGVudHMgZW5yb2xsZWQgd2hlbiBpdCBjbG9zZWQsIGFsc28gaGFzIGEgaGVhcmluZyBiZWZvcmUgZmVkZXJhbCBlZHVjYXRpb24gb2ZmaWNpYWxzIGxhdGVyIHRoaXMgeWVhciBwZW5kaW5nIHRoZSBvdXRjb21lIG9mIG5vbmNvbXBsaWFuY2UgaXNzdWVzLgoiTW9tLCBJIHRvbGQgeW91IHRoaXMgd2FzIG5vdCB5b3VyIGFubm91bmNlbWVudCB0byBtYWtlLCBhbmQgeW91IGRpc3JlZ2FyZGVkIG15IGNsZWFybHkgbGFpZCBib3VuZGFyeSBhbnl3YXkuIFlvdSB3aWxsIG5vIGxvbmdlciBoYXZlIHRoZSBwcml2aWxlZ2Ugb2Yga25vd2luZyBhbnl0aGluZyBhYm91dCB0aGlzIHByZWduYW5jeSwgb3IgYWJvdXQgbWUgb3IgbXkgZmFtaWx5LCB1bnRpbCBJIGFtIGNlcnRhaW4gaXQgaXMgc29tZXRoaW5nIEknbSByZWFkeSBmb3IgeW91IHRvIGJsYWIgYWJvdXQuClNvIGluc3RlYWQgb2YgaW52ZXN0aW5nIG1vbmV5IGludG8gbWFraW5nIGF0b21pYyBwb3dlciBzYWZlLCB3ZSBkZWNpZGVkIHRvIGN1dCBhdG9taWNzIGFuZCByZWx5IG9uIGJ1cm5pbmcgZm9zc2lscy4gTWVhbndoaWxlIGluY3JlYXNpbmcgZWxlY3RyaWNpdHkgcHJpY2VzIHRvIGxldmVscyB3ZXJlIHdlIGhpbmRlciBvdXIgZW50aXJlIGVjb25vbXkuIApNYW4gSSByaWdodCB0aGVyZSB3aXRoIHlvdS4gVHJ5aW5nIHRvIGZpbmlzaCBteSBQaEQsIGxpdmluZyBjbG9zZSB0byB0aGUgYm9uZSwgcGFydG5lciBhbHNvIGluIGdyYWQgc2Nob29sIGluIGEgaGVhbHRoY2FyZSBmaWVsZC4gU2hpdCBjYW4gYmUgcmVhbGx5IGRpc2NvdXJhZ2luZyBhbmQgc3RyZXNzZnVsLgpZb3UgZG9uIG5lZWQgdG8gZG9kZ2UgYnVsbGV0cyBsaWtlIHdyYWl0aCB3aGVuIHlvdSBhbHdheXMgaGF2ZSB0aGUgaGlnaCBncm91bmQsIGEgc2FmZSByZXRyZWF0LCBrZXkgcG9zaXRpb25pbmcgaW4gdGhlIGNpcmNsZSwgYW5kIGEgcXVpY2sgcHVzaCB0byBtb3AgdXAgbGVmdG92ZXJzLiBIZSBiZSBPUCBhcyBmdWNrIHdpdGggdGhlIHNhbWUgaGl0Ym94IGFzIHdyYWl0aC5kb2Vzbm90bGlrZWNyaWNrZXQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvSSBub3QgbmVjZXNzYXJpbHkgc2F5aW5nIGhlIG5lZWRzIHRoZSBzYW1lIGhpdCBib3ggYXMgd3JhaXRoLiAKQXJteSBTcGVjaWFsIFNlcnZpY2VzLiAKU28gSSBsaWtlLiAKU28sIGhlcmUgaXMgYW4gZXhhbXBsZSBtb3N0IHBlb3BsZSBjb3VsZCByZWNvZ25pemU6IFRoZSBHcmlzd2FsZCBmYW1pbHkgaW4gTmF0aW9uYWwgTGFtcG9vbiBWYWNhdGlvbiBicmVhayBpbnRvIFdhbGx5IFdvcmxkIHdoZW4gdGhleSBhcmUgY2xvc2VkLCB0YWtlIGEgcGFyayBhdHRlbmRhbnQgaG9zdGFnZSwgYW5kIGZvcmNlIGhpbSwgYXQgZ3VucG9pbnQsIHRvIGFsbG93IHRoZW0gdG8gcmlkZSByaWRlcy4gCklmIHlvdSBhcmUgbm90IHZlcnkgbWFueSBwbGF5ZXJzIGF3YXkgZnJvbSB0aGUgZmluYWwgdGFibGUgcGxheSB0aWdodGVyIHNpbmNlIHRoZSBwYXlvdXRzIGFyZSBtdWNoIGJpZ2dlciBpZiB5b3UgbWFrZSBpdCB0byB0aGUgZmluYWwgcG9rZXIgdGFibGUuIEtub3dpbmcgdGhpcywgb2YgY291cnNlIHdpbGwgaGF2ZSB0aGUgYmlnIHN0YWNrcyB0cnlpbmcgdG8gcHVzaCB5b3UgYXJvdW5kLiBZb3UgY2FuIHV0aWxpemUgdGhpcyB0byB5b3VyIGJlbmVmaXQgd2hlbiB1cCBhZ2FpbnN0IG90aGVyIHNob3J0IG9yIG1lZGl1bSBzdGFja3MsIHdobyBmZWFyIGdldHRpbmcgZWxpbWluYXRlZC4gClRoaXMgaXMgYWN0dWFsbHkgaG93IHJvY2sgY2FuZHkgaXMgZm9ybWVkIGJlY2F1c2UgeW91IHB1dCBpbiBleGNlc3Mgc3VnYXIgYW5kIHRoZW4gY29vbCBkb3duIHRoZSBzb2x1dGlvbiBhbmQgdGhlIHN1Z2FyIGNyeXN0YWxzIGZvcm0gaW50byB0aGUgc3RpY2sgZm9yIHRoZSByb2NrIGNhbmR5Li4gCkkgYWN0dWFsbHkgdmlzaXRlZCBhIENoYXNlIGJyYW5jaCBsYXN0IG5pZ2h0IGFuZCBzYXcgdGhhdCBJIHdhcyBwcmUgYXBwcm92ZWQgZm9yIHRoZSBDU1IuIApUaGV5IGNhbid0ICJyZXNjaW5kIiB0aGUgbG9hbi4gSXQncyBmdW5kZWQsIHlvdSBzaWduZWQsIEVsdmlzIGhhcyBsZWZ0IHRoZSBidWlsZGluZy4gVGhleSB3b3VsZCBoYXZlIHRvIGNhbGwgdGhlIG5vdGUvZm9yZWNsb3NlLi4gClRoYXQgb2YgdGhlIHNvY2lhbCBkeW5hbWljcyBvZiBzdWNoIHNpdHVhdGlvbnMuIApJIHN1c3BpY2lvdXMgYWJvdXQgUG9rZXIgc3RhcnMuIEkgYW4gYXZlcmFnZSBwbGF5ZXIsIGFuZCB3YXRjaCBjb3VudGxlc3MgdmlkZW9zIHRvIGltcHJvdmUgbXkgZ2FtZS4gU3RhcnQgb2YgdGhlIGRheSB5ZXN0ZXJkYXkgSSBtYWRlIGEgZ29vZCBiaXQgb2YgbW9uZXkgYnV0IHRoZW4gdGhlIGV2ZW5pbmcgZ290IHRvdGFsbHkgcmluc2VkIGxhc3QgbmlnaHQsIHdoaWNoIGlzIHBlcmZlY3RseSBmaW5lIGFuZCBJIGV4cGVjdCB0byBsb3NlIHRvIGdvb2QgcGxheWVycy4gClRoaXMgc3RhbmRhcmRpemVzIHBhcnRzIGFuZCBhbGxvd3MgdGhlIHNhbWUgYXNzZW1ibHkgbGluZSB0byBwcm9kdWNlIG11bHRpcGxlIHZlaGljbGVzLiAKRnJlZSBzb2Z0d2FyZSBkb2VzIG5vdCBuZWNlc3NhcmlseSBsaW1pdCB0aGlzLiBJIGtub3cgd2hhdCB5b3UgbWVhbiB0aG91Z2guIApOb3cgdGhpcyBSaW5naW5nIEJlbGxzIGNhbiBwbGF5IHRoZSAid2UgdHJpZWQgdG8gbWFrZSBnb29kIGJ1dCBzYWRseSB3ZSBjb3VsZG4ndC4gCkkga25vdyBiZWluZyBjYWxsZWQgYnkgd29yc3QgZXZlbiBpZiB5b3UgbG9zZSBpcyBzb21ldGhpbmcgeW91IHdhbnQgaW4gdGhlIGxvbmcgcnVuIGJ1dCB0aGUgZmFjdCAxIGFsbCBpbiBpcyBldmVyeXRoaW5nIHlvdSBuZWVkIHRvIGdldCBidXN0ZWQgaW4gYSB0b3VybmFtZW50IGlzIG9uZSBvZiB0aGUgdGhpbmdzIEkgY2FuIGVuam95IGFib3V0IHRoaXMgZm9ybWF0LiBZb3UgY2FuIGV2ZW4gaGF2ZSA4NSUgYWxsIGluIEVWJSBhbmQgbmV2ZXIgY2FzaCBvdXQgaW4gYSB3aG9sZSB5ZWFyLgpUaGVyZSBpcyBzbyBtdWNoIHRvIHNlZSBhbmQgZG8gaGVyZSB0aGF0IHlvdSBzaG91bGQgZGVmaW5pdGVseSBzb2FrIGl0IGluIHJhdGhlciB0aGFuIHBsYXkgY2FyZHMgYWxsIGRheSBhbmQgbmlnaHQuIApUaGVuIHRyYW5zaXRpb25lZCBpbnRvIHRoaXMgc2NvdXRpbmcgcm91dGUgYmV0d2VlbiB0aGUgdHdvIGNpdGllcy4gCkkgYWxzbyBoYWQgSVQgYmFuZCBpc3N1ZXMgZHVyaW5nIG15IGxhc3QgbWFyYXRob24gdHJhaW5pbmcuIApBbm90aGVyIEFkZWxhaWRlIFRlc3QsIGFuZCBhbm90aGVyIGdyZWF0IG1ha2VzIGhpcyBUZXN0IGRlYnV0LiBBdXN0cmFsaWEgcmVsZWFzZWQgQmlsbCAiVGlnZXIiIE8nUmVpbGx5LCBhbmQgdGhvdWdoIGhpcyBmb3VyIHdpY2tldHMgcGxheWVkIHNlY29uZCBmaWRkbGUgdG8gQ2xhcnJpZSBHcmltbWV0dCdzIDE0IGluIHRoaXMgb25lLCBoZSB3ZW50IG9uIHRvIHRha2UgMTQ0IHdpY2tldHMgaW4gYSBicmlsbGlhbnQgMjcgVGVzdCBjYXJlZXIuIApEb2VzIFNhbXN1bmcgc3VwcGx5IGFueXRoaW5nIHRvIENoaW5lc2UgcGhvbmUgbWFrZXJzPyBUaGF0IGlzIHByb2JhYmx5IHRoZSBiaWdnZXIgcmVhc29uIHRoZXkgaHVydGluZy4gQ29tcGV0aXRpb24gZnJvbSBDaGluYSBpcyBpbnRlbnNlIGFuZCB0aGV5IGNvbnRpbnVlIHRvIHRha2UgdXAgbW9yZSBtYXJrZXQgc2hhcmUgYXdheSBmcm9tIFNhbXN1bmcgYW5kIEFwcGxlIGFyb3VuZCB0aGUgd29ybGQgbWludXMgbm90YWJseSBBbWVyaWNhLgpCZWF0aW5nIE9ubGluZSBQb2tlciB3aXRoIE1MCkFuZCB5b3UgYXNzdW1pbmcgdGhhdCB5b3Ugd2lsbCBvbmx5IGdvIGZvciBBRCBpbiBhIGZsYW5rIHdoZW4gaW4gaGlnaGVyIGVsbyB0aGV5IGhhdmUgYSB0b24gb2Ygc3R1ZmYgd2FyZGVkIGFuZCBrbm93IHdoaWNoIGRpcmVjdGlvbiB0aGUgZW5lbXkgd2lsbCBjb21lIGZyb20uIApKYXBhbmVzZSBSb2JvdCBDcmF6ZTkgTW9udGggT2xkIEJhYnlib3RKYXBhbidzIFRva3lvIFVuaXZlcnNpdHkgcHJvZmVzc29yIFlhc3VvIEt1bml5b3NoaSB1bnZlaWxzIGEgOSBtb250aCBvbGQgYmFieSByb2JvdCAiTm9ieSIgYXQgaGlzIGxhYm9yYXRvcnkgYXQgdGhlIFRva3lvIFVuaXZlcnNpdHkgb24gSnVuZSAxMSwgMjAxMC4gVGhlIGJhYnkgcm9ib3QgaGFzIHR3byBjYW1lcmFzIGFuZCB0d28gbWljcm9waG9uZXMgb24gaXRzIGhlYWQgYW5kIGFsc28gZXF1aXBwZWQgd2l0aCBzb21lIDYwMCB0b3VjaCBzZW5zb3JzIHVuZGVyIGl0cyBza2luLiAoY3JlZGl0OiBKaWppIFByZXNzL0FGUC9HZXR0eSBJbWFnZXMpLiAKQW5kIEkgY2hlcmlzaGVkIG15IHdlZWtseSBGcmlkYXkgbmlnaHQgcG9rZXIgYXMgd2VsbCBhcyBteSBNb25kYXkgZXZlbmluZyBnYW1lLiAKWW91IGFyZSBnb2luZyB0byBnZXQgYSBiaWxsaW9uIGNvbW1lbnRzIHNheWluZyB0aGF0IG5vIGZyZWUgbW9uZXkgcG9rZXIgaXMgY2xvc2UgdG8gdGhlIHJlYWwgdGhpbmcuIEkgcGxheWVkIGhpZ2ggc3Rha2VzIHBsYXkgbW9uZXkgUFMgZm9yIDEwaXNoIHllYXJzICh5ZWFycyB3YXN0ZWQgdG8gYmUgaG9uZXN0KSBhbmQgdGhlIGxhc3QgMyB5ZWFycyBoYXZlIGJlZW4gcGxheWluZyByZWFsIG1vbmV5IHBva2VyIG9uIElnbml0aW9uLCBBQ1IgYW5kIEdsb2JhbCAoZGVjZW50bHkgc2lnbmlmaWNhbnQgbWljcm8gd2lubmVyIHRyeWluZyB0byBtb3ZlIHVwIHRvIG1pZCBzdGFrZXMgY3VycmVudGx5KS4uIApUaGUgZWZmZWN0aXZlbmVzcyBvZiBUaXRsZSBWIGVkdWNhdGlvbiBpcyBub3Qgd2lkZWx5IHN0dWRpZWQsIGJ1dCBzb21lIHJlcG9ydHMgaW5kaWNhdGUgdGhhdCBpdCBoYXMgaGFkIG5vIGVmZmVjdCBvbiB0ZWVuIHNleHVhbCBwcmFjdGljZXMgZXhjZXB0IHRvIGRpbWluaXNoIHRoZSB1c2Ugb2YgY29uZG9tcyAoc2luY2UgdGhlIHRlZW5zIGFyZSB0cnlpbmcgbm90IHRvIGhhdmUgc2V4IHdoZW4gdGhleSBoYXZlIHNleCBhbmQgdGhlcmVmb3JlIGNvbWUgdW5wcmVwYXJlZCkuIFVTIHN0aWxsIGhhcyBtb3JlIHRlZW4gYmlydGhzIGFuZCBoaWdoZXIgbGV2ZWxzIG9mIHNleHVhbGx5IHRyYW5zbWl0dGVkIGRpc2Vhc2VzIGFtb25nIHRlZW5zIG9mIGFueSBpbmR1c3RyaWFsaXplZCBjb3VudHJ5LiAKSXQgbGlrZSBhbGwgb2YgdGhlIG1hcmluanVhbmEgZGlzcGVuc2FyaWVzIGluIExvcyBBbmdlbGVzOyBtYW55IG9wZW4sIGdvdmVybm1lbnQgc2h1dHMgbWFueTsgZ292ZXJubWVudCBhbGxvd3Mgc29tZSwgZ292ZXJubWVudCBzaG93cyBtYW55IG9mIHRoZW0uIApPdmVydmlldyBmb3IgZWR3YXJka21ldHQKRXZlbiBpZiB0aGlzIFN1cGVybmF0dXJhbC9NeXN0ZXJ5IGl0IGhhcyBhIGxvdCBvZiBncmVhdCBhY3Rpb24gcGFja2VkIGh5cGVuZXNzIGFuZCBpdCByZWFsbHkgaXMgdW5leHBlY3RlZCBhcyBJIHRob3VnaHQgdGhpcyB3YXMgbW9zdGx5IG9ubHkgZ29pbmcgdG8gYmUgZnVsbCBvZiBwYW5lbHMgb2YgY2hhdHRlciBhbmQgc3VjaCBidXQgSSB3YXMgdWx0aW1hdGVseSBjYXVnaHQgb2ZmIGd1YXJkIGFuZCBwcm92ZW4gd3JvbmcgYW5kIHRoZSBhY3Rpb24gc2NlbmVzIGFyZSBvbmUgb2YgdGhlIGJlc3QgSSBjYW4gc2F5LiBJdCB3YXMgcmVhbGx5IHN1Y2ggYSB3b25kZXJmdWwgdGltZSByZWFkaW5nIGFuZCBnZXR0aW5nIGNhdWdodCB1cCB0byB0aGUgbWFuZ2EgdGhhdCBJIHRydWx5LCB0cnVseSBUUlVMWSByZWNvbW1lbmQgeW91IGdpdmUgdGhpcyBtYW5nYSBhIHRyeSBvciBlaXRoZXIgdGhlIG5vdmVsLiBZb3UgY291bGQgcmVhZCBpdCBvciB3YWl0IGZvciB0aGUgYW5pbWUgbGF0ZXIgdGhpcyB5ZWFyIGJ1dCBJIHdvdWxkIHNheSB5b3Ugc2hvdWxkIHJlYWQgdGhlIG1hbmdhIGlmIG5vdCBvbmx5IGEgZmV3IGNoYXB0ZXJzIGFuZCBzZWUgaWYgeW91IGdldCBob29rZWQgdXAgbGlrZSBJIGRpZC4gQW5kIG5vdyB0byBiZWdpbi4KV2hpbGUgdGhhdCBpcyB0cnVlIG1hbnkgVW5pdmVyc2l0aWVzIGhhdmUgYWNjcmVkaXRlZCBkYXRhIHNjaWVuY2UgcHJvZ3JhbXMuIEFsbCB0aG9zZSBwcm9ncmFtcyBlbnRhaWwgaXMgY29tcHV0ZXIgc2NpZW5jZSwgbWF0aGVtYXRpY3MsIGFuZCBzb21lIGNvbXB1dGVyIGluZm9ybWF0aW9uIHN5c3RlbXMgY291cnNlcyB0aHJvd24gaW50byB0aGUgbWl4LiBBbnlvbmUgd2hvIGhhcyBhIGRlZ3JlZSBpbiBjb21wdXRlciBzY2llbmNlIGNhbiBlYXNpbHkgd29yayBpbiBhIGRhdGEgc2NpZW5jZSBmaWVsZC4gRGF0YSBzY2llbmNlIGlzIGEgMTAwJSBzdGF0aXN0aWNzLgpXZSdyZSBvbiBJbnN0YWdyYW0uIApCYXJlbmFrZWQgbGFkaWVzIGJpZ2dlc3QgaGl0PwpCdXJhZGFraSBvbGF5bGEgZW4gdXpha3RhbiBiaXIgYWxha2FzIGJpbGUgeW9rLCBvIGthZGFyIGRubWVkZW4ga29udXV5b3J1eiBraSBtaWxsZXRlLiBCdXJhZGEgYmlyIGRhdnJhbiBib3p1a2x1dW5kYW4gaWxlcmkgZ2VsZW4gaGFiZXIgZGVlcmkgdGF5YW4gYmkgb2xheSB5YWFubSBzYWRlY2UgYnUsIGFkYW0gZGEgeWF6bSBiaSBqYXBvbiB1bnUgeWFwc2Ega2VuZGluaSBrbG5jbiBzdG5lIG90dXJ0dXIgZmFsYW4sIGJ1IGhhcmVrZXRpIHlhcGFjYWsgYmlyIGphcG9uIGtlbmRpbmkga2xjbiBzdG5lIGZhbGFuIG90dXJ0bWF6IGJ1IGhhcmVrZXRpIHlhcG1hayBwcm9ibGVtbGkgdmUgdGVtZWwgYWhsYWsga3VyYWxsYXJuZGFuIHlva3N1biBvbG1heSBuY2VsaXlvciBuay4gClBsdXMgeW91IGRvbid0IGhhdmUgdG8gcGF5IGZvciBhbGwgdGhvc2UgZXh0cmFzLiAKTWFyaWphYyBzdWl2aXQgbGEgY2hyb25vbG9naWUgZGVzIGZhaXRzIGhpc3RvcmlxdWVzLCBkZXB1aXMgMTg2MCBqdXNxdScgbCdjaGVjIGRlcyBncmFuZGVzIGV0IGxnaXRpbWVzIHJ2b2x0ZXMgaW5kaWVubmVzLiBFeGNlcHRpb24gZmFpdGUgcG91ciBsJ2F0cm9jZSBndWVycmUgZGUgc2Nlc3Npb24sIGxhcXVlbGxlIG4nZXN0IHZvcXVlIHF1ZSBwYXIgcXVlbHF1ZXMgdW5lcyBkZSBzZXMgY29uc3F1ZW5jZXMsIG5vdGFtbWVudCBsJ2V4cHJvcHJpYXRpb24gZGUgZmFtaWxsZXMgc3VkaXN0ZXMgYXUgbW9tZW50IGRlIGxhIHJlY29uc3RydWN0aW9uIGV0IGRlIGwnYWxsb25nZW1lbnQgZGVzIGNoZW1pbnMgZGUgZmVyLiAKR29yZG9uIGdhdGUgc2V0dXAgdjIuMi4wLjUgKHVzYiBmbGFzaCBkcml2ZXIgc2UpIC4gClJlYWxseSBsaWtlIG11c2ljIHRoYXQgcm91Z2ggYXJvdW5kIHRoZSBlZGdlcy4gSSBkb24gY2FyZSBpZiB0aGVyZSBhIGJhZCBub3RlIGhlcmUgb3IgdGhlcmUgb3IgaWYgYSBndXkgb3V0IG9mIHR1bmUuIEkgYWN0dWFsbHkgZ3Jhdml0YXRlIHRvd2FyZCB0aGF0IG1vcmUgdGhhbiB0aGUgcHJldHR5LCBwZXJmZWN0LCBwcmlzdGluZSBzdHVmZi4gV2hlbiB5b3UgZ2V0IGludG8gdGhlIHN0dWRpbyB5b3Vyc2VsZiwgaXQgaGFyZCB0byByZW1lbWJlciB0aGF0LCBiZWNhdXNlIHlvdSB3YW5uYSBmaXggZXZlcnl0aGluZy4gQnV0IEkgd2VudCBvdXQgb2YgbXkgd2F5IHRvIGtlZXAgdGhhdCBpbiBtaW5kLiBTbyB0aGVyZSB0aGUgb2RkIHJvdWdoIGVkZ2UsIG9yIHBhcnRzIHdlIGNvdWxkIGhhdmUgcGxheWVkIGEgbGl0dGxlIGJpdCBiZXR0ZXIuIEJ1dCB0byB0aGUgYmVuZWZpdCBvZiB0aGUgb3ZlcmFsbCB2aWJlLCB3ZSBsZWZ0IGl0IGFsbCBpbi4gbmVlZHMgbG92ZSBzb25ncz8KVGhpcyBpcyBhY3R1YWxseSB0cnVlLiAKV3lubiBzdGFydGVkIGJ5IGV4cG9zaW5nIGhpbXNlbGYgZHVyaW5nIHRoZWlyIHNldmVyYWwgdGltZXMgYSB3ZWVrIHNlc3Npb25zLCBiZWZvcmUgb3JkZXJpbmcgaGVyIHRvIG1hc3R1cmJhdGUgaGltIHRvIGNsaW1heCAgIGEgY29tbWFuZCBzaGUgZGlkbiBmZWVsIHNoZSBjb3VsZCByZWZ1c2UsIHNoZSB0ZWxscyB0aGUgSm91cm5hbC4KWW91IGNhbiB3cmFwIHlvdXIgYmVsbHkgZm9yIGV4dHJhIHN1cHBvcnQsIGJ1dCBwcm9iYWJseSBub3QgYXQgdGhlIHNhbWUgdGltZSBhcyB0aGUgN21vLiAKTW9zdCBwZW9wbGUgd2hvIGpvaW4gb25saW5lIGNhc2lub3MgYXJlIGxvb2tpbmcgZm9yIHNvbWUgZnVuLCB3aXRob3V0IHRvbyBtdWNoIGJyYWluIHRheC4gU2xvdHMgZml0IHRoZSBiaWxsIHBlcmZlY3RseSwgYW5kIHBsYXllcnMgY2FuIGV2ZW4gbXVsdGl0YXNrIHdoaWxlIHNwaW5uaW5nIHRoZSByZWVscy4gCldoaWxlIHRoZSBzZWdtZW50IHByb2JhYmx5IGpvZ2dlZCB5b3VyIG1lbW9yeSBmb3IgdGhlIGx5cmljcyB0byBPIFRvd24ncyAiTGlxdWlkIERyZWFtcywiIGhlcmUgYXJlIGEgZmV3IG90aGVyIHRoaW5ncyB5b3UgbWlnaHQgaGF2ZSBtaXNzZWQuCkxlIG5paGlsaXNtZSBlc3QgYmllbiBwbHV0dCBwZW5zIGVuIHNvbiBlc3NlbmNlLCBsZSBtb3V2ZW1lbnQgZm9uZGFtZW50YWwgZGUgbCdIaXN0b2lyZSBkZSBsJ09jY2lkZW50LiBJbCBtYW5pZmVzdGUgdW5lIHRlbGxlIGltcG9ydGFuY2UgZGUgcHJvZm9uZGV1ciBxdWUgc29uIGRwbG9pZW1lbnQgbmUgc2F1cmFpdCBlbnRyYW5lciBhdXRyZSBjaG9zZSBxdWUgZGVzIGNhdGFzdHJvcGhlcyBtb25kaWFsZXMuIApJIHJlbWVtYmVyIGJlaW5nIGluIGhpZ2ggc2Nob29sIGFuZCB0aGlua2luZyB0aGF0IEkgY291bGRuJ3QgaGFuZGxlIHNvbWUgc2NpZW5jZSBjbGFzc2VzIEkgd2FzIGludGVyZXN0ZWQgaW4gYmVjYXVzZSBJIHdhc24ndCBzbWFydCBlbm91Z2guIApUaGUgc29uZ3dyaXRpbmcgdGFrZXMgaW5mbHVlbmNlcyBmcm9tIHRoZSBzYW1lIHNvdXJjZXMsIHRoZSBzdWJqZWN0IG1hdHRlciBpcyB2ZXJ5IGRhcmsgYW5kIHR3aXN0ZWQsIGFuZCB0aGUgcGVyZm9ybWVycyBhcmUgdmVyeSBlbW90aXZlIHN0b3J5IHRlbGxlcnMuIApUaGF0IGdhbWUgY2FuIHBsYXkgYmlnIHdpdGggYSBzdHJhZGRsZS4gVGhlIGJ1eSBpbiBjYXBzIGF0IDMwMCBidXQgdGhhdCBjb3VsZCBiZSBhIGxvdCBvZiBtb25leSB0byBzb21lLiAKRGllIHZvbGx1bWZuZ2xpY2hlIE51dHp1bmcgZGVyIFdlYnNpdGUgbmljaHQgZ2VnZWJlbiBpc3QuLiAKSG93IGFyZSBUTXMgYW5kIHdvcnNlIHRoYW4gYW55IG9mIHRob3NlIG90aGVyIGFzcGVjdHMgb2YgdGhlIGdhbWUgdGhhdCByZWx5IG9uIGx1Y2s/IEknbSBub3Qgc3VyZSBJIHVuZGVyc3RhbmQKR3JvdXAgb2YgQ2hyaXN0aWFuIGltbWlncmFudHMgZnJvbSBJcmFxIHdobyBmbG9vZGVkIGFyZWFzIGFyb3VuZCBNaWNoaWdhbiAoRGVhcmJvcm4gaGVpZ2h0cywgc3RlcmxpbmcsIGF1YnVybiBoaWxscykgYW5kIG9jY2FzaW9uYWxseSBTYW4gRGllZ28gYW5kIG90aGVyIGNpdGllcy4gQ2FuIG1vc3RseSBiZSBmb3VuZCBhdCBNR00gRGV0cm9pdCBvciBncmVla3Rvd24gY2FzaW5vLgpKdWx5IDI1LCAyMDExOiBUaGUgTmF0aW9uYWwgRW1lcmdlbmN5IFdpdGggUmVzcGVjdCB0byBCbG9ja2luZyBQcm9wZXJ0eSBvZiBUcmFuc25hdGlvbmFsIENyaW1pbmFscyB3YXMgaW4gcmVzcG9uc2UgdG8gdGhlIHJpc2UgaW4gY3JpbWUgYnkgc3BlY2lmaWMgb3JnYW5pemF0aW9uczogTG9zIFpldGFzIChNZXhpY28pLCBUaGUgQnJvdGhlcnMnIENpcmNsZSAoZm9ybWVyIFNvdmlldCBVbmlvbiBjb3VudHJpZXMpLCB0aGUgWWFrdXphIChKYXBhbiksIGFuZCB0aGUgQ2Ftb3JyYSAoSXRhbHkpLgoiTm93IGFsbCB0aGUgdGF4IGNvbGxlY3RvcnMgYW5kIHRoZSBzaW5uZXJzIHdlcmUgY29taW5nIG5lYXIgSGltIHRvIGxpc3RlbiB0byBIaW0uIEJvdGggdGhlIFBoYXJpc2VlcyBhbmQgdGhlIHNjcmliZXMgYmVnYW4gdG8gZ3J1bWJsZSwgc2F5aW5nLCAiVGhpcyBtYW4gcmVjZWl2ZXMgc2lubmVycyBhbmQgZWF0cyB3aXRoIHRoZW0uIiBTbyBIZSB0b2xkIHRoZW0gdGhpcyBwYXJhYmxlLCBzYXlpbmcsICJXaGF0IG1hbiBhbW9uZyB5b3UsIGlmIGhlIGhhcyBhIGh1bmRyZWQgc2hlZXAgYW5kIGhhcyBsb3N0IG9uZSBvZiB0aGVtLCBkb2VzIG5vdCBsZWF2ZSB0aGUgbmluZXR5IG5pbmUgaW4gdGhlIG9wZW4gcGFzdHVyZSBhbmQgZ28gYWZ0ZXIgdGhlIG9uZSB3aGljaCBpcyBsb3N0IHVudGlsIGhlIGZpbmRzIGl0PyBXaGVuIGhlIGhhcyBmb3VuZCBpdCwgaGUgbGF5cyBpdCBvbiBoaXMgc2hvdWxkZXJzLCByZWpvaWNpbmcuIEknbSBKdXN0IHNoYXJpbmcgZmxlZXRpbmcgdGhvdWdodHMuIE5vIGp1ZGdtZW50LiBPbmx5IGxvdmUuClBhcnRlaSB1bmQgZ2xlaWNoemVpdGlnZW0gZGV1dGxpY2hlbSBTaWVnIGRlciBEc3NlbGRvcmZlciBnZWdlbiBCdXJnd2VpbnRpbmcgZGVuRWluenVnIGlucyBWaWVydGVsZmluYWxlIHp1IGVycmVpY2hlbi5Ec3NlbGRvcmYsIGRpZSBkdXJjaCB6d2VpIFNpZWdlIHNjaG9uIHNpY2hlciB3ZWl0ZXIgd2FyZW4sIGxlZ3RlIGF1Y2ggaGllciBmcmV1bmRsaWNoZXJ3ZWlzZSBndXQgdm9yIHVuZCBlYm5ldGUgdW5zIGRlbiBXZWcsIHNvIGRhc3Mgd2lyIGF1cyBlaWdlbmVyIEtyYWZ0IGR1cmNoIGVpbmVuIFNpZWcgd2VpdGVya29tbWVuQXVjaCBkaWVzZSBQYXJ0aWUgZ2VnZW4gQmFkIE9uZSBQb2tlciBIYW5ub3ZlciBlbnR3aWNrZWx0ZSBzaWNoIGRyYW1hdHVyZ2lzY2ggenUgZWluZW0gd2FocmVuIEtyaW1pLiAKUXVlc3Rpb24gMS4gCkFzIGFuIDggeWVhciBvbGQsIEkgd2FzIHRlcnJpZmllZCwgZXNwZWNpYWxseSB3aGVuIG9uZSBvZiB0aGVtIGpva2VkIGFuZCBzYWlkICJZb3Ugc2hvdWxkIGxlYXZlIGhpbSBoZXJlLiAKQSBuZXcgc3RvY2sgb3IgZnVuZCBtYXkgYmUgdGhlIGFuc3dlciwgZXNwZWNpYWxseSBpZiBhbiBhZGRpdGlvbmFsIHBpZWNlIGlzIG5lZWRlZCB0byBwcm9wZXJseSBkaXZlcnNpZnkgeW91ciBwb3J0Zm9saW8gKHdlIHNlZSB0b28gbWFueSBwb3J0Zm9saW9zIHRoYXQgYXJlIHNvbGVseSBmb2N1c2VkIG9uIHRoZSBkb21lc3RpYyBlY29ub215KS4gQnV0IHRoZSBSUlNQIGRlYWRsaW5lIChNYXJjaCAxIHRoaXMgeWVhcikgc2hvdWxkbiBjYXVzZSB5b3UgdG8gcnVzaCBpbnRvIGJ1eWluZyBzb21ldGhpbmcgdGhhdCBkdXBsaWNhdGVzIHdoYXQgeW91IGFscmVhZHkgaGF2ZSwgb3IgeW91IGRvbiB1bmRlcnN0YW5kLi4gCklmIHlvdSBoYXZlbiBoaWtlZCB0aGUgc29jYWwgcG9ydGlvbiwgeW91IG1heSBiZSBzdXJwcmlzZWQgdGhhdCBpdCBpcyB2ZXJ5IHBsZWFzYW50IGFuZCBzY2VuaWMsIGJ1dCBub3QgdGhhdCB3aWxkLiBUaGUgc29jaWFsIGFzcGVjdHMgYXJlIGFjdHVhbGx5IGEgbmljZSBhZGRpdGlvbiB0byB0aGUgc2VjdGlvbi4gSGFsZiB0aG9zZSBmb2xrcyB3aWxsIGJlIGdvbmUgYnkgdGhlIFNpZXJyYSwgYW5kIG9tZywgdGhlIFNpZXJyYSBpcyBlbm91Z2ggYnkgaXRzZWxmLiBUaG91Z2gsIGlmIGl0IGlzIGhpZ2ggY3JlZWsgeWVhciwgeW91IHdhbnQgY29tcGFuaW9ucyBhdCB0aGUgc3RyZWFtIGNyb3NzaW5ncy4KT2YgY291cnNlLCB0aGUgZmFjdCB0aGF0IFZlcmEgd2VudCB0byB0aGUgcG9saWNlIGFib3V0IGl0IGFuZCB0aGVuIGEgZmV3IGRheXMgbGF0ZXIgdG9sZCB0aGUgcG9saWNlIGhlIHdhcyBwcmV0dHkgc3VyZSBoZSBoYWQgYmVlbiBkdXBlZCBhbmQgbm9uZSBvZiBpdCB3YXMgdHJ1ZSBpcyBOT1QgdGhlIHN0b3J5LiBUaGUgc3RvcnkgaXMgdGhhdCBBQ09STiBlbXBsb3llZXMgYXJlIHJ1bm5pbmcgcHJvc3RpdHV0aW9uIGFuZCBodW1hbiBzbXVnZ2xpbmcgcmluZ3MuIApJbiBkZXIgYWJnZWxhdWZlbmVuIE5ITCBTYWlzb24gZmFuZCBlciBpbSBBYnNjaGx1c3MgenUgYWx0ZXIgU3QgenVyIDMwIFRvcmUgdW5kIDMzIFZvcmxhZ2VuIHd1cmRlbiBpbiA4MiBIYXVwdHJ1bmRlbiBQYXJ0aWVuIGdleiBFcyB3YXIgZGFzIHp3ZWl0ZSBNYWwgaW4gc2VpbmVyIEthcnJpZXJlLCBkYXNzIGVyIGRpZSBNYXJrZSB2b24gMzAgVHJlZmZlcm4ga25hY2t0ZS4gCkR1cmhhbSBEaXN0cmljdCBTY2hvb2wgQm9hcmQgY2FsbGVkIGluIHBvbGljZSB0byBpbnZlc3RpZ2F0ZSB0aGUgaW5jaWRlbnQgYW5kIG9mZmljZXJzIGRpc2NvdmVyZWQgdGhhdCB0aGUgY29va2llcyB3ZXJlIG9yaWdpbmFsbHkgbWFkZSBieSBhIHBhcmVudCBmb3IgYSBzcG91c2Ugd2l0aCBhIG1lZGljYWwgbWFyaWp1YW5hIGxpY2Vuc2UuIEFuIG9sZGVyIHNpYmxpbmcgaW4gaGlnaCBzY2hvb2wgc3RvbGUgc29tZSBvZiB0aGUgYmF0Y2ggYW5kIHNldmVyYWwgY29va2llcyBzb21laG93IGVuZGVkIHVwIGluIHRoZSBzaXh0aCBncmFkZXIncyBiYWNrcGFjaywgcG9saWNlIHNhaWQuLiAKSW4gdGhlIG1pbmFyY2hpc3QgdmlldywgdGhlIHN0YXRlIGlzIG5vdCAibmVjZXNzYXJ5IHRvIGNhcGl0YWxpc20iLiBJdCBpcyBuZWNlc3NhcnkgdG8gc29jaWV0eS4gVGhlIGlzc3VlIGlzIHRvIHRyeSB0byBrZWVwIHRoZSBzdGF0ZSBmcm9tIGdldHRpbmcgdG9vIGJpZy4KRnJvbSAwIDMwIHNlY29uZHMsIHNlcnZlIG9uIHRoZSByaWdodDsgZnJvbSAzMCA2MCBzZWNvbmRzLCBzZXJ2ZSBvbiB0aGUgbGVmdC4uIApUaGluZyB3aXRoIG1lIGFuZCBNYWRvbm5hLCBmb3IgZXhhbXBsZSwgaXMgdGhhdCBJIGFkbWlyZWQgaGVyIGFsd2F5cyBhbmQgSSBzdGlsbCBhZG1pcmUgaGVyIG5vIG1hdHRlciB3aGF0IHNoZSBtaWdodCB0aGluayBvZiBtZSwgc2hlIGV4cGxhaW5zLiBzaGUgc3RpbGwgaGFyYm91cnMgaHVydCBmZWVsaW5ncyBvdmVyIHRoZSBpbmNpZGVudCwgdGhlIHlvdW5nZXIgc2luZ2VyIHByYWlzZWQgTWFkb25uYSwgNTksIGZvciB0aGUgcm91c2luZyBzcGVlY2ggc2hlIGdhdmUgcHJvbW90aW5nIGZlbWFsZSBlbXBvd2VybWVudCBhdCBsYXN0IERlY2VtYmVyIEJpbGxib2FyZCBXb21lbiBpbiBNdXNpYyBBd2FyZHMuCkkgdGhpbmsgd2UgcXVpY2tseSBsb3Npbmcgb3VyIGNvbGxlY3RpdmUgY29uc2Npb3VzbmVzcyBhcyB0aGUgbWVkaWEgbGFuZHNjYXBlIGJlY29tZXMgbW9yZSBhbmQgbW9yZSBmcmFjdHVyZWQuIFlvdSB1c2VkIHRvIGhhdmUgc2hvd3MgbGlrZSBUaGUgVG9uaWdodCBTaG93IHdpdGggSm9obm55IENhcnNvbiB0aGF0IHdvdWxkIHNvcnQgb2YgdW5pdGUgdGhlIGNvdW50cnkuIFdpdGhvdXQgc29tZXRoaW5nIGxpa2UgdGhhdCBldmVyeW9uZSBqdXN0IHNlZW1zIHRvIGJlIGF0IGVhY2ggb3RoZXIgdGhyb2F0cy4KQ2hvb3NlIHRoZSBiZXN0IHBhcnRzIG9mIHlvdXIgYm9keTogSSBhbHdheXMgcHV0IG15c2VsZiBpbiBmcm9udCBvZiB0aGUgbWlycm9yIGFuZCB0cnkgdG8gbm90ZSB3aGF0IHBhcnRzIG9mIG15IGJvZHkgSSByZWFsbHkgbGlrZSBhbmQgd2hpY2ggb25lcyBJIGRvbid0LiAKV2UndmUgYWxyZWFkeSBzZXQgdGhlIGdvYWwgdG8gYmUgb3ZlciAkMTAsMDAwLiAKVGhleSBoYXZlIHRoZWlyIG93biAicGFzc2lvbnMiLCBoZSBpbnNpc3RlZC4gSW4gZmFjdCwgaGUgYWRkZWQsIGhlJ3Mgc2VsbGluZyB0byBzcGVuZCBtb3JlIHRpbWUgd2l0aCB0aGVtIGFuZCB0byBwdXJzZSBoaXMgcGhpbGFudGhyb3BpYyBpbnRlcmVzdHMsIGluY2x1ZGluZyBPbmUgRHJvcCwgd2hpY2ggZmlnaHRzIHBvdmVydHkgYnkgaW52ZXN0aW5nIGluIGNsZWFuIHdhdGVyIHByb2plY3RzLi4gCkZsaWdodCAgIEl0IGEgYnVzaW5lc3MgZXhwZW5zZSBidXQgYWxzbyBhIHRyYXZlbC9jdWx0dXJhbCBvcHBvcnR1bml0eSBmb3IgcGVvcGxlIHdobyBvdGhlcndpc2UgY291bGRuIGp1c3RpZnkgaXQuIEFuZCBhcyBmb3IgdGhlIGxhY2sgb2YgbWlkIHRlcm0gdHJhdmVsIGFsbG93YW5jZSwgdGhlIGNvbnRyYWN0IHJlbmV3YWwgYm9udXMgaXMgZXNzZW50aWFsbHkgdGhlIHNhbWUgdGhpbmcgZXhjZXB0IHlvdSBjYW4gdXNlIGl0IGZvciBhbnl0aGluZy4KT2YgYWxsIEkgY2FuLiAKTWF5YmUgbm90IGZ1bm55IGJ1dCBpdCBzcG9rZSB2b2x1bWVzIGFib3V0IE1jRCB3aGVuIEkgd2FzIHRoYXQgYWdlLi4gCk9wZXJhdG9ycyBoYXZlIGJlZW4ga25vd24gdG8gY29tbWl0IHNleHVhbCBhc3NhdWx0cyBhZ2FpbnN0IHRvdXJpc3RzLiBHb3Zlcm5tZW50IHBlcnNvbm5lbCBhcmUgbm90IHBlcm1pdHRlZCB0byB1c2UgamV0IHNraSByZW50YWxzIG9uIE5ldyBQcm92aWRlbmNlIGFuZCBQYXJhZGlzZSBJc2xhbmRzLiAKSXQgcHV0cyBpbnRvIHdvcmRzIHdoYXQgSSBhbHdheXMgZXhwZXJpZW5jZWQgaW4gZ2FtZXMgbGlrZSBKb3VybmV5IGFuZCBTaGFkb3cgb2YgdGhlIENvbG9zc3VzLCB0aGlzIGxhcmdlciB0aGFuIGxpZmUgYXdlIGluc3BpcmluZyBtb21lbnQgdGhhdCB5b3UgY2FuIHNoYWtlIG1vbnRocyBhZnRlciBwbGF5aW5nIGEgZ2FtZS4gTW9tZW50cyBsaWtlIGRpc2NvdmVyaW5nIFJhcHR1cmUgaW4gQmlvc2hvY2sgb3IgQW5vciBMb25kbyBpbiBEYXJrIFNvdWxzLiBUaGUgcHJvZHVjdGlvbiBxdWFsaXR5IGluIHRoaXMgdmlkZW8gaXMgb2ZmIHRoZSBjaGFydHMgYXMgd2VsbCEgSSBrbm93IHBlb3BsZSBtYXkgYmUgcHV0IG9mZiBieSB0aGUgcGhpbG9zb3BoaWNhbCB0aXRsZSwgYnV0IGdpdmUgaXQgYSB3YXRjaCwgaXQgd29ydGggaXQsIGFuZCBpdCBub3QgaGVhZHkganVzdCBmb3IgdGhlIHNha2Ugb2Ygc291bmRpbmcgc21hcnQuCklsIGVzdCBpbnRyZXNzYW50IGRlIHJlbWFycXVlciBxdWUgbCdvbiBkaXN0aW5ndWUgY291cmFtbWVudCBkZXV4IHR5cGVzIGRlIGpvdXJuYWxpc21lLiBEJ3VuIGN0LCBvbiB0cm91dmUgbGUgam91cm5hbGlzbWUgZCdhY3R1YWxpdCBzdXIgbGVzIGZhaXRzIGRlIHNvY2l0IDogdW4gam91cm5hbGlzbWUgcHVyIGV0IGRlIHF1YWxpdC4gRGUgbCdhdXRyZSBjdCBldCBlbiBvcHBvc2l0aW9uLCBvbiBjcml0aXF1ZSBsZSBqb3VybmFsaXNtZSBwZW9wbGUgb3UgZm9uZCBzdXIgbGVzIHJhZ290cyAgRW4gcXVlbHF1ZSBzb3J0ZSwgY2VsYSByZXZpZW50ICBvcHBvc2VyICBMZSBNb25kZSAgICBWb2ljaSAuIApJIHVzZWQgdG8ga25vdyBtb3JlIGFib3V0IHRoaXMsIGJ1dCBmb3IgdGhlIGxpZmUgb2YgbWUgY2Fubm90IHJlbWVtYmVyIGEgc2luZ2xlIGdvZCBkYW1uIHRoaW5nIGFib3V0IG15IGxhdyBjbGFzc2VzIGluIGNvbGxlZ2UgZXhjZXB0IHRoYXQgYnVyaWVkIHRyZWFzdXJlIHR5cGljYWxseSBnb2VzIHRvIHRoZSBvbmUgd2hvIGZpbmRzIGl0LCBidXQgc2hvdWxkIGdvIHRvIHRoZSB0cmVhc3VyeS4gRWFzaWx5IHRoZSBtb3N0IHVzZWxlc3MgYml0IG9mIGluZm8gZnJvbSB0aGF0IGNsYXNzLCBidXQgSSBzdGlsbCBlbmpveSBpdC4gCkFuZCBJJ21hIHRlbGwgeWEgcmlnaHQgbm93LCBvbiBjYW1lcmEsIEkgZG9uJ3QgZ2l2ZSBhIGZ1Y2suIEkgZGlkbid0IGxlYXJuIG9uZSB0aGluZyBpbiBoaWdoIHNjaG9vbCBvciBjb2xsZWdlLiBPbmUgZnVja2luIHRoaW5nLiAKSXQgYSBQSVRBIGJ1dCBsb29zaW5nIGRhdGEgaXMgbW9yZSBvZiBhIFBJVEEuIENhcmJvbml0ZSB3aWxsIGJhY2sgdXAgYWxsIHdlbGwga25vd24gZm9sZGVycyBidXQgdGhpbmdzIGxpa2UgSE0yIG1pZ2h0IG5vdCBzdG9yZSBpdCBkYXRhIGluIHRoZSB1c3VhbCBwbGFjZXMuIApBbmQgSSBrbm93IGl0IGVhc2llciB0byBzYXkgaXQsIGJ1dCB0cnkgdG8gZmlsbCB5b3VyIGZvY3VzIHdpdGggdGhlIGdvb2QgdGhpbmdzIHlvdSBkbyBoYXZlIGdvaW5nIG9uLiAKQ0lCQyBzYWlkIGl0cyByZXN1bHRzIHdlcmUgYWZmZWN0ZWQgYnkgYSBmZXcgaXRlbXMsIHN1Y2ggYXMgJDIyNyBtaWxsaW9uIHRvIHNlY3VyZSBpdHMgcGxhY2UgaW4gQWlyIENhbmFkYSBuZXcgbG95YWx0eSBwcm9ncmFtLiBJdCBhbHNvIHNhaWQgdGhlcmUgd2FzIGxvd2VyIHRyYW5zYWN0aW9uIHZvbHVtZSBpbiBpdHMgQ2FuYWRpYW4gd2VhbHRoIG1hbmFnZW1lbnQgYnVzaW5lc3MsIGFzIHdlbGwgYXMgbGVzcyB1bmRlcndyaXRpbmcgb2YgZGVidCBhbmQgZXF1aXR5IGFuZCBsb3dlciBpbnZlc3RtZW50IHBvcnRmb2xpbyBnYWlucyBmcm9tIGl0cyBjYXBpdGFsIG1hcmtldHMgdW5pdC4KQXMgYSBraWQsIGR1cmluZyB0aGUgZGFyayBhZ2VzIG9mIGNpZ2FyZXR0ZSBhZHZlcnRpc2luZywgSSBwb25kZXIgdGhlIHNsb2dhbiBjb21lIGEgbG9uZyB3YXksIEJhYnkgYW5kIHdvbmRlciB3aGF0IG9uIEVhcnRoIGl0IG1lYW50LiBNeSBwcmUgdGVlbiBicmFpbiBjb3VsZG4gcHJvY2VzcyBob3cgdGhlIG1vZGVsIGluIHRoZSBtYWdhemluZSBzeW1ib2xpemVkIHByb2dyZXNzIGZvciB3b21lbi4gQmVjYXVzZSBzaGUgY291bGQgc21va2U/IEZvcmVnbyBhIHBldHRpY29hdD8gUG9zZSBmb3IgYSBwaG90b2dyYXBoPy4gCkl0J3MgYWxsIHZlcnkgY2hhcm1pbmcuIFdpdGhvdXQgYW55IHJpc2tzIHRvIGJlIHJld2FyZGVkLCB0aGVyZSdzIG5vIHRocmlsbHMgb3IgZXhjaXRlbWVudCwgdGhvdWdoIFNlYXNvbnMgQWZ0ZXIgRmFsbCBpcyBhIHBsZWFzaW5nLCBpZiBlc3NlbnRpYWxseSBsaW5lYXIgYWR2ZW50dXJlIGludG8gbmF0dXJlLi4gCkxhIHBsdXBhcnQgZHUgdGVtcHMsIGRhbnMgdW4gcmdpbWUsIG9uIHNlIGxhbmNlIGR1IGpvdXIgYXUgbGVuZGVtYWluIGRhbnMgdW5lIGZhb24gZGUgbWFuZ2VyIGRpZmZyZW50ZSwgcmVzdHJpY3RpdmUsIHBsdXMgb3UgbW9pbnMgc3ZyZSBjYXIgb24gdmV1dCBhbGxlciB2aXRlLiBPbiBwZXJkIGR1IHBvaWRzLCBvbiBhdHRlaW50IG91IG9uIGFwcHJvY2hlIHNvbiBvYmplY3RpZiBldCBwdWlzIG9uIHJlbWFuZ2UgY29tbWUgYXZhbnQuIApUaGUgR2xvYmFsaXphdGlvbiBvZiBGcmVuY2ggSG9yc2UgcmFjZSBCZXR0aW5nCicnQnJvY2sgaGFkIGJlZW4gYSBmcmllbmQgb2YgbWluZSBhbmQgSSB3YXMgaW4gY29tcGxldGUgc2hvY2ssIGJ1dCBoYWQgbm8gZG91YnQgb2YgdGhlIGFjY3VyYWN5IG9mIHRoZSBhbGxlZ2F0aW9ucywnJyBNcyBLZWV2ZXJzIHNhaWQuIFNoZSBjYWxsZWQgSm9obiBQYXJtZXRlciBhIGhlcm8gd2hvIHNwb2tlIHRvIHRoZSBkaW9jZXNlIGFmdGVyIGEgcmVsYXRpdmUgdG9sZCBoaW0gRmF0aGVyIEJyb2NrIHdhcyByZXR1cm5pbmcgdG8gdGhlIGFyZWEgYW5kIGxvb2tlZCBmb3J3YXJkIHRvIHNlZWluZyB0aGUgcmVsYXRpdmUncyB5b3VuZyBzb25zLiAKUmVkdWNlZCBTd2VsbGluZyAgIE1hc3NhZ2UgaGVscHMgdG8gZWxldmF0ZSBzd2VsbGluZyBpbiB0aGUgYWZmZWN0ZWQgYXJlYS4gRGVwZW5kaW5nIG9uIHRoZSBwcmVzc3VyZSBwbGFjZWQgb24gdGhlIGluanVyZWQgYXJlYSBtYXNzYWdlIHdpbGwgaGVscCB0byByZWR1Y2UgdGhlIHN3ZWxsaW5nLiAKVGhhdCB3aGF0IHNtYXJ0IGNvbWVkeSB3aXRoIGJyaWxsaWFudGx5IGRpdmVyc2UgY2hhcmFjdGVycyBkbyB0byB5b3UuIEV2ZXJ5dGltZSBJIHJld2F0Y2ggaXQsIEkgZmluZCBzb21ldGhpbmcgbmV3LiAKV2hlbiBjcmFmdGluZyBjb250ZW50IHRvIHByb21vdGUgYSBUViBzaG93LCBmaW5kIGEgY29ubmVjdGluZyB0aHJlYWQgYmV0d2VlbiBmaWN0aW9uIGFuZCByZWFsaXR5IHRvIGFkZCBkZXB0aCB0byB0aGUgY29udGVudC4gCk1heWJlIHN0cmFoZCBwb3BzIHVwIGFuZCBtZW50aW9ucyBpdCB0byBpemVrL3RoZSBQQyBncm91cCwgb3IgZXZhIG1lbnRpb25zIGl0IHdoZW4gdGhlIGNhcmQgcmVhZGluZyBoYXBwZW5zLiAKUmVmZXJyZWQgdG8gbWUgYnkgbXkgbmFtZSwgdG9sZCBtZSBteSBlbWFpbCBldGMuIApKaW0gd2FzIGFsc28gQ2hpZWYgb2YgR2VuZXJhbCBQcmFjdGljZSBhdCB0aGUgWW9yayBDb3VudHkgSG9zcGl0YWwgKG5vdyBTb3V0aGxha2UgUmVnaW9uYWwgSGVhbHRoIENlbnRyZSkgaW4gTmV3bWFya2V0IGZvciBzZXZlcmFsIHllYXJzLiAKIlN1cmUsIEkgaG9wZSB5b3Uga25vdyB0aGUgcnVsZXMgd2VsbCBlbm91Z2ggdG8gZXhwbGFpbiB0aGVtIHRvIG1lIiwgSSByZXBsaWVkLiBIZSBjaHVja2VkIGFuZCBzYWlkICJObyBwcm9ibGVtIi4gClNtaXRoIGxvc3QgdGhlIGZpZ2h0IGJ5IGEgMTIgcm91bmQgdW5hbmltb3VzIGRlY2lzaW9uIGJ5IHRoZSBzY29yZXMgb2YgMTE2IDExMiwgMTE3IDExMSBhbmQgMTE3IDExMS4gSG93ZXZlciwgU21pdGggYmVsaWV2ZXMgdGhhdCB0aGUgZmlnaHQgd2FzIGxldmVsIGFmdGVyIHNpeCByb3VuZHMsIGFuZCB0aGF0IGhlIHdvbiB0aGUgMTF0aCBhbmQgMTJ0aCByb3VuZHMuIFNtaXRoIGFsc28gdGhpbmtzIHRoYXQgdGhlIDEwdGggcm91bmQgd2FzIGEgdG9zc3VwIHJvdW5kIHRoYXQgY291bGQgaGF2ZSBnb25lIGVpdGhlciB3YXkuIApZb3UgbmVlZCB0byBrbm93IHlvdXIgYmFzZWxpbmUuIApTZWNvbmRseSwgdGhlIHBhY2lmaWVycyBhcmUgZ2lmdGVkIHNvIHRoZSBmdXR1cmUgYmFsbGVyaW5hcywgeW91IGNhbGwgeW91ciBib3VuY2VycyBjYW4gYWxsIHNsZWVwIHRvZ2V0aGVyIGhvbGRpbmcgaGFuZHMgYW5kIHN1Y2sgb24gdGhlbSBhdCBuaWdodCBtYWtpbmcgdGhlbSBnbyB0byBzbGVlcCBiZXR0ZXIgYXQgbmlnaHQuIFRoaXJkbHksIHRoZSBiYWxsZXJpbmEgZHJlc3NlcyBhcmUgZ2lmdGVkIHNvIHlvdSBjYW4gaGFuZCBpdCBvdXQgdG8gdGhlIGJvdW5jZXJzLCBhbmQgdGhleSBjYW4gd2VhciBpdCBldmVyeSBuaWdodCBhdCB0aGVpciBqb2JzLiBIZSBmaXJtbHkgYmVsaWV2ZXMgdGhhdCBiYWxsZXQgaXMgbXVjaCBtb3JlIHN1aXRlZCBhcyBhIHByb2Zlc3Npb24gZm9yIHRoZW0sIHRoYW4gd2hhdCB0aGV5IGFyZSBkb2luZyByaWdodCBub3cuIApJIG1vcmUgb3IgbGVzcyBmcnVzdHJhdGVkIHRoYXQgdGhlIGdhbWUgaGFkIHN1Y2ggYSBncmVhdCBiYWxhbmNlIG9yaWdpbmFsbHksIGFuZCB0aGVuIGNoYXJhY3RlcnMgd2hlcmUgZ2l2ZW4gc2lkZSBncmFkZXMgdGhhdCBjb3VudGVyZWQgdGhlaXIgd2Vha25lc3NlcyBsZWZ0IGFuZCByaWdodCBtYWtpbmcgaXQgaGFyZCB0byB0ZWxsIGlmIHlvdSBnb2luZyBpbnRvIGEgZmF2b3JhYmxlIG1hdGNoIHVwLCBvciBpZiB0aGUgb3Bwb25lbnQgaGFzIGFuIGFjZSBpbiB0aGVpciBsb2FkIG91dCB5b3UgY291bGRuIGhhdmUgcGxhbm5lZCBmb3IgYmVjYXVzZSBub3QgZW5vdWdoIHdlYXBvbnMgbGVhdmUgZXh0ZXJuYWwgY2x1ZXMgbGlrZSBTbmlwZXIgUmF6b3JiYWNrLiAKSWYgb25seSB0aGUgVGltZXMgd291bGQgY2hhbmdlIGl0cyBuYW1lIHRvIFByYXZkYSwgd2UgY291bGQgcHJldGVuZCBpdCBpcyB0aGUgdGltZSBvZiBCcmV6aG5ldiBhbmQgS2hydXNoY2hldiAgd2hlcmUgeW91IGNvdWxkIHZvdGUgZm9yIHRoZSBDb21tdW5pc3QgUGFydHkgb3IgdGhlIENvbW11bmlzdCBQYXJ0eS4gR09QIG9yIERlbXMuIApBbHRob3VnaCB5b3Ugc2hvdWxkIHRyeSBhbmQgZmluZCBicmFzIHRoYXQgaGF2ZSB0aGljayBicmEgc3RyYXBzIHRvIHB1dCBsZXNzIHN0cmFpbiBvbiB5b3VyIGJhY2suIEkgYW0gbm93IERERCBhbmQgYW0gbG9va2luZyBmb3J3YXJkIHRvIGJyZWFzdCByZWR1Y3Rpb24gaW4gdGhlIGZ1dHVyZSBiZWNhdXNlIHRvIG1lIHRoZXkgYXJlIHNvbWV3aGF0IG9mIGEgYnVyZGVuLiBXaGF0IGlzIG1vc3QgaW1wb3J0YW50IGlzIGZvciB5b3UgdG8gYmUgaGFwcHkgd2l0aCB0aGUgd2F5IHlvdSBsb29rLiAKSSBtYWRlIGEgZmV3IGJ1Y2tzLiAKSXQncyBtYWdpY2FsLi4gCk9uIGEgZmxvcCBvZiBBS1EsIHRoaXMgd2lsbCBzbWFzaCBoaXMgMyBiZXR0aW5nIHJhbmdlLCBoZSB3aWxsIGhhdmUgc2V0cyBhbmQgdHdvIHBhaXJzIHNvIG9mdGVuIGhlcmUuIERlc3BpdGUgdGhpcyByYW5nZSBhZHZhbnRhZ2UsIHRoZSBvcHBvbmVudCByYWlzZXMgdGhpcyBmbG9wIGJhc2ljYWxseSByZXByZXNlbnRpbmcgUVEgb3IgSlQgYW5kIG1heWJlIEFLIGFzIHZhbHVlLCBhbmQgY29tYm8gZGlhbW9uZHMgKG1vc3QgbGlrZWx5IEFkeGQgZm9yKSBmb3Igc2VtaWJsdWZmcy4gUmFpc2luZyBhIGhhbmQgbGlrZSBBUSBvbiB0aGUgZmxvcCBmcm9tIHRoZSBvcHBvbmVudCB3b3VsZCBiZSBjb25zaWRlcmVkIGEgcHJldHR5IGJpZyBvdmVycGxheSBnaXZlbiBjaGFybGllIHJhbmdlIGFuZCBjaGFybGllIGhhbmQgYWxtb3N0IGZlZWxzIGZhaXJseSBmYWNlIHVwIGFzIHZlcnkgc3Ryb25nLiBDaGFybGllIG11c3QgaGF2ZSBleHBsb2l0YXRpdmVseSBwdXQgaGlzIG9wcG9uZW50IG9uIGp1c3QgUVEgaGVyZSBvciBKVCBhbmQgaGVuY2Ugd2h5IGhlIHdhcyByb290aW5nIGZvciBhbiBBIChLIHdvdWxkIGRvIGFzIHdlbGwpIGFzIGhlIGV4cGVjdGVkIGhpcyBvcHBvbmVudCBpcyB2YWx1ZSBoZWF2eSAoUVEsIEpUKSBhbmQgaGUgaXMgZHJhd2luZyB0byA0IG91dHMuIEFub3RoZXIgY29uc2lkZXJhdGlvbiBpcyB0aGF0IHRoZSBoYW5kIHN0YXJ0ZWQgb3ZlciAyMDAgYmlnIGJsaW5kcyBkZWVwIHNvIGl0IGlzIGEgcmVhc29uYWJsZSBhc3N1bXB0aW9uIHRoYXQgcGVvcGxlIGRvbiBnZXQgdG9vIG91dCBvZiBsaW5lIHdpdGggYmx1ZmZzIGhlcmUgaW4gdGhpcyBzcG90IHRoaXMgZGVlcC4K|<---