--->|U3RvcHBpbmcgdGhpcyBwcm9ibGVtIHJlcXVpcmVzIG9uZSBvZiB1cyB0byBnaXZlIHVwIHNvbWUgZnJlZWRvbS4KVGhleSBmbG93ZXIgYmVzdCB3aGVuIHRoZXkgaGF2ZSBoYWQgY29waW91cyBzdW1tZXIgcmFpbi4gClN1bmRheSB2aXNpdG9ycyBhdCB0aGUgaG9tZSBvZiBTLiBILiAKRWRpdDogVGhhbmtzIGZvciBhbGwgdGhlIGFkdmljZSBndXlzLiBJIGRvbiBsaXZlIGluIHRoZSBVUyBvciBFdXJvcGUsIHNvIG5vIG9ubGluZSBzaGlwcGluZyBmb3IgbWUgOiggQnV0IEkgd2lsbCBkZWZpbml0ZWx5IHRha2Ugc29tZSBvZiB0aGUgb3RoZXIgYWR2aWNlIGludG8gYWNjb3VudC4gVGhhbmtzIGFnYWluIQpNaWdodHlCb2JUaGVNaWdodHkgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvClRoZSBwYWludGluZywgZW50aXRsZWQgIkJyZWFraW5nIEhvbWUgVGllcywiIG5ldHRlZCAkMTUuNCBtaWxsaW9uIGF0IFNvdGhlYnkncyBBdWN0aW9uIEhvdXNlLiBEb24gVHJhY2h0ZSBKci4sIHRoZSBmYXRoZXIgb2YgdGhlIGJyb3RoZXJzIHdobyBmb3VuZCB0aGUgcGFpbnRpbmcsIGhhZCBtYWRlIGEgY29weSBvZiB0aGUgcGllY2UgdG8gcHJldmVudCBoaXMgd2lmZSBmcm9tIHRha2luZyBwb3NzZXNzaW9uIG9mIGl0IGluIHRoZWlyIGRpdm9yY2UuIApMZW9uIGNsb3RoaW5nIGFzIHdlbGwgYXMgYSByYXBlIGtpdCB3ZXJlIHRha2VuICAgYnV0IHRoZSBjbG90aGluZyB3YXMgbm90IHJlZnJpZGdlcmF0ZWQuIEluIGEgbGluZXVwLCBMZW9uIHBpY2tlZCBhIG1hbiBuYW1lZCBMYXJyeSBZb3VuZ2Jsb29kIGFzIGhpcyBhdHRhY2tlciwgYSBtYW4gd2hvIGhhZCBiZWVuIHN1c3BlY3RlZCBieSBwb2xpY2UsIGJlaW5nIGEgcHJldmlvdXMgKG5vbiBzZXgpIG9mZmVuZGVyIHdpdGggYSBiYWQgZXllLi4gCkxvbCAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnby4gCkFmdGVyIHRoaXJkIGhvdXIsIHNoZSBnZW5lcmFsbHkgaGVhZHMgaG9tZS4gSG9waW5nIHRoaXMgd2F5IHNoZSB3b24gZ2V0IHRvcnR1cmVkIGJ5IGFueW9uZS4gCkxvcnMgZCd0dWRlcywgb24gYSBvYnNlcnYgcXVlIGxlcyByYXRzIHByaXZzIGQnb2N5dG9jaW5lIGRldmllbm5lbnQgZGUgbWF1dmFpcyBwYXJlbnRzIGV0IHF1ZSBsZXVyIHByb2duaXR1cmUgbmUgcHJvZml0ZSBwYXMuIERlcyBvYnNlcnZhdGV1cnMsIGNvbW1lIERhbmllbCBHb2xlbWFuIHF1aSBhIGNyaXQgbGUgbGl2cmUgTCdJbnRlbGxpZ2VuY2UgcmVsYXRpb25uZWxsZSwgcmVtYXJxdWVudCBxdSdpbCBleGlzdGUgdW5lIGNvaHNpb24gc29jaWFsZSBhY2NydWUgYXUgc2VpbiBkZXMgZ3JvdXBlcyBvIGxlIHRvdWNoZXIgc2FpbiBlc3QgdmFsb3Jpcy4uIApQZXIgZXNlZ3VpcmUgaWwgbWFzc2FnZ2lvIHByb3N0YXRpY286IHByaW1hIGRlbGwnaW5pemlvIGRlbCBwcm9jZXNzbywgc2kgcmFjY29tYW5kYSBkaSBwdWxpcnNpIG1ldGljb2xvc2FtZW50ZSBlIHF1aW5kaSBldmFjdWFyZSBlIHVyaW5hcmUgIG5lY2Vzc2FyaW8sIHF1ZXN0byAgaW1wb3J0YW50ZSBwYXJjaCBzaWEgaWwgcGkgcmlsYXNzYXRvIHBvc3NpYmlsZSBTaSBwdSB1c2FyZSB1biBkaXRvIGFjY3VyYXRhbWVudGUgcHJvdGV0dG8gZGEgdW4gZ3VhbnRvIGRpIGxhdHRpY2UgbW9ub3Vzbywgb3BwdXJlIHBpY2NvbGkgZ2lvY2F0dG9saSBzZXNzdWFsaS4gU2kgYXZ2aWEgaWwgcHJvY2Vzc28gZGkgbXVuZ2l0dXJhOiBtYXNzYWdnaWFyZSBsYSBwcm9zdGF0YSBkYXBwcmltYSBkb2xjZW1lbnRlIGUgcG9pIHBhc3NhcmUgcGkgc29saWRhIGUgcGkgdmVsb2NlIHN1bCByaXRtbyBjaGUgZmEgcGVyIHZvaS4gQWQgdW4gY2VydG8gcHVudG8sIGlsIHBhemllbnRlIHNpIHNlbnRpciBjb21lIHNlIGRvdmVzc2UgdXJpbmFyZSwgYW5jaGUgc2Ugbm9uIGRldmUgZmFybG8uIFNpIGVjY2l0ZXIgZSBhbGxhIGZpbmUgZWlhY3VsZXIsIG1hIHZhIGJlbmUgYW5jaGUgc2UgbCdlaWFjdWxhemlvbmUgbm9uIGF2dmllbmUsIHBvaWNoIG5vbiBzdWNjZWRlIHNlbXByZS4KSXQgd2FzIGEgZ3JlYXQgZmluZCBJIG1hZGUgYXQgYSB1c2VkIGJvb2tzdG9yZSwgYW5kIEkgd291bGQgaGlnaGx5IHJlY29tbWVuZCBpdCB0byBhbnkgaGlzdG9yeSBidWZmLCBhbmQgYW55IHBlcnNvbiB3aG8gaXMgY3VyaW91cyBhYm91dCB3aGF0IGV2ZXJ5ZGF5IGxpZmUgd2FzIHRob3VzYW5kcyBvZiB5ZWFycyBhZ28sIGFuZCBob3cgbXVjaCB3ZSBoYXZlIGluIGNvbW1vbiB3aXRoIHBlb3BsZSBmcm9tIGEgZGlmZmVyZW50IGVyYS5bTV0gIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvLiAKQXMgdGhlIHlvdW5nIHdvbWVuIGFnZSwgdGhleSBvZnRlbiBsb3NlIGludGVyZXN0IGFuZCBhY2N1c2UgdGhlbSBvZiBsZXR0aW5nIHRoZW1zZWx2ZXMgZ28gKHdoZW4gaXQgcmVhbGx5IGp1c3QgdGhlaXIgYm9kaWVzIGNvbnRpbnVpbmcgdG8gZGV2ZWxvcCAgIGhpcHMgd2lkZW5pbmcsIGV0Yy4pLiAgT2xkZXIgbWVuIG1heSBjaG9vc2UgeW91bmcgd29tZW4gYmVjYXVzZSBib3RoIHBhcnRpZXMgYXJlIGxlc3MgbWF0dXJlLCBhbmQgeW91bmdlciB3b21lbiB3b24gcmVhbGl6ZSB0aGVzZSBtZW4gaGF2ZSBvbmdvaW5nIG1hdHVyaXR5IGlzc3VlcyB0aGF0IGFyZW4gYmVpbmcgd29ya2VkIG9uIG9yIGltcHJvdmVkIHdpdGggYWdlLiAKQnkgRGF2ZSBEYXZpcywgVGhlIFBsYWluIERlYWxlckRFVFJPSVQgRGFuIEdpbGJlcnQgaGFzIHBsYWNlZCBhbm90aGVyIGJpZyBiZXQgb24gaGlzIGhvbWV0b3duICAgaGUncyBidXlpbmcgYSBtYWpvcml0eSBzdGFrZSBpbiBEZXRyb2l0J3NHcmVla3Rvd24gQ2FzaW5vIEhvdGVsLCBhIExhcyBWZWdhcyBzdHlsZSBjYXNpbm8gdGhhdCBzaXRzIGp1c3QgYmxvY2tzIGZyb20gdGhlIGZyb250IGRvb3Igb2YgaGlzSW4gYW5ub3VuY2luZyB0aGUgZGVhbCBXZWRuZXNkYXksIGV4ZWN1dGl2ZXMgd2l0aCBHaWxiZXJ0J3MgZ2FtYmxpbmcgY29tcGFueSwgUm9jayBHYW1pbmcgTExDLCBzYWlkIHRoZSBwZW5kaW5nIHB1cmNoYXNlIHdhcyBwYXJ0IG9mIHRoZWlyIHN0cmF0ZWd5IGFpbWVkIGF0IHJldml0YWxpemluZyBkb3dudG93bnMgc3VjaCBhcyBEZXRyb2l0LCBDbGV2ZWxhbmQsIENpbmNpbm5hdGkgYW5kIEJhbHRpbW9yZSAgIGFuZCBpbiB0aGUgcHJvY2VzcyBtYWtpbmcgbW9uZXkuIldlIHRoaW5rIHRoYXQgdGhlc2UgdXJiYW4gY2l0aWVzIHJlcHJlc2VudCBhIGdyZWF0IG9wcG9ydHVuaXR5IGZvciB1cyB0byBnaXZlIGJhY2sgdG8gdGhvc2UgY29tbXVuaXRpZXMgYW5kIGFsc28gZm9yIHVzIHRvIGludmVzdCBhbmQgZG8gd2VsbCwiIHNhaWQgTWF0dCBDdWxsZW4sIGNoaWVmIGV4ZWN1dGl2ZSBvZmZpY2VyIG9mIFJvY2sgVmVudHVyZXMgTExDIGFuZCBzZWNvbmQgYmVoaW5kIEdpbGJlcnQgaW4gY2hhcmdlIG9mIHRoZSBRdWlja2VuIExvYW5zIGZhbWlseSBvZiBjb21wYW5pZXMuIldlIHJlYWxseSBsaWtlIHRoZSBjb25uZWN0aXZpdHkgb2YgdGhlIEdyZWVrdG93biBwcm9wZXJ0eSwiIEN1bGxlbiBhZGRlZC4gCkNyZWF0aW5nIEZhc2hpb25hYmxlIEVhcnJpbmdzIGZyb20gQ2hlYXAgQ2xheSBQb2tlciBDaGlwcwpZb3UgZGlkbiBtZW50aW9uIG1lIGFsc28gbW9kZXJhdGluZyBGYWxsb3V0IE5ldyBWZWdhcywgbWF5IGFzIHdlbGwgbWFrZSB0aGF0IGNsZWFyLiBJIG1vZGVyYXRlIGV2ZXJ5IEZhbGxvdXQgc3VicmVkZGl0IGluIHRoZSBGYWxsb3V0IE5ldHdvcmssIGFzIEkgY3JlYXRlZCB0aGUgRmFsbG91dCBOZXR3b3JrLiBUaGlzIGlzIHdoeSBJIHRha2UgInNoaWxsIiBjbGFpbXMgc2VyaW91c2x5LCBiZWNhdXNlIGEgZm91bmRpbmcgcHJpbmNpcGFsIG9mIGl0IHdhcyBub3QgYWxsb3dpbmcgYW55IHN1YnJlZGRpdHMgaW4gd2l0aCBhbnkgYWZmaWxpYXRpb24uCkl0IGlzIGluZXZpdGFibGUgYW5kIHdoZW4gc29tZSBvZiB0aGVtIGRvLCB0aGV5IGFyZW4ndCB2ZXJ5IGZyaWVuZGx5LiAKVGhpcyBpcyBub3QgdGhlIG9ubHkgcGF0aCB5b3UgY2FuIHRha2UsIGp1c3QgaWYgeW91IHBsYW5uaW5nIG9uIG1vdmluZyBvdXQgb24geW91ciBvd24uIApDdXJyZW50bHksIEkgYW0gZGlzY29udGludWluZyBuZXcgcXVlc3Rpb25zLiBUaGlzIG1heSBjaGFuZ2UgaW4gdGhlIGZ1dHVyZSwgYnV0IGluIHRoZSBtZWFudGltZSwgcGxlYXNlIGtub3cgdGhhdCBJdCBoYXMgYmVlbiBhIHRydWUgcGxlYXN1cmUgc2VydmluZyB5b3UuClRoaXMgY2FuIG1ha2UgeW91ciB3aWZlIGZlZWwgc2V4eSBhbmQgc3BlY2lhbC4gV29tZW4gd2FudCB0byBiZSBwYW1wZXJlZCBidXQgaXQgY2FuIGJlIGRpZmZpY3VsdCB0byBmaW5kIHRoZSB0aW1lIHRvIGdvIHRvIHRoZSBzcGEgd2l0aCBhIGJ1c3kgc2NoZWR1bGUuIERvaW5nIHRoaXMgd2lsbCBhbGxvdyB5b3VyIHdpZmUgdG8gaGF2ZSBhIHNwYSBkYXkgdGhhdCBzaGUgaGFzIGFsd2F5cyB3YW50ZWQuIApJZiB5b3UgZWxlY3QgdG8gdXNlIGNhcmRib2FyZCBib3hlcyBtYWtlIHN1cmUgaXQgaXMgdGhlIGhlYXZpZXIgd2VpZ2h0IGJveGVzLiBUaGlzIGlzIG9uZSBzdXBwbGllcjpwcnBzbHlkaXN0cmFjdGVkICAxNyBwb2ludHMgIHN1Ym1pdHRlZCAxOSBob3VycyBhZ28KTWF5b3IgQ29saW4gQmFzcmluIG9mIFJ1dGxhbmQgcmVjZW50bHkgY29uZnJvbnRlZCBwdWJsaWMgcHJlc3N1cmUgd2hlbiBoZSB2b3RlZCBpbiBmYXZvdXIgb2YgcmV6b25pbmcgbGFuZCBmb3IgYSBzdXBwb3J0aXZlIGhvdXNpbmcgcHJvamVjdC4gCkFsbCBJJ20gc2F5aW5nIGlzIHJhY2lzbSBpbiBnZW5lcmFsIGlzIG5vdCBvbmx5IHdyb25nLCBidXQgYW5ub3lpbmcgYmVjYXVzZSBpbiB0b2RheSdzIHdvcmxkIHdlIGFyZSBkZWNpZGluZyB3aG8gaXMgYWxsb3dlZCB0byBiZSByYWNpc3QgYW5kIHdobyBpc24ndC4gClRoZSBlY29ub21pYyBkaXNsb2NhdGlvbiBiZWdpbm5pbmcgaW4gdGhlIDE5ODBzIGFuZCAxOTkwcyBiZWdhbiB0aGUgc2xvdywgaW5ldml0YWJsZSBwcm9jZXNzIG9mIG5vdCBvbmx5IHdlYXJpbmcgZG93biBvdXIgY29tbXVuaXRpZXMsIGJ1dCBzcGxpbnRlcmluZyB0aGVtIGFzIHdlbGwuIFdlIGJlZ2FuIGxvc2luZyBrZXkgcGFydHMgb2Ygb3VyIGNvaGVzaXZlbmVzcyBhcyBhIG1pZCBzaXplZCBjaXR5LCBidXQgdGhlIGdyZWF0ZXN0IGxvc3Mgb2YgYWxsIHdhcyBqb2JzLCB0aGUgbWVhbmluZ2Z1bCwgd2VsbCBwYXlpbmcga2luZC4gClRoZW4gSSB3ZW50IGJhY2sgdG8gc2Nob29sIGFuZCB3YXMgYSBiaXQgbW9yZSBvY2N1cGllZCBhbmQgcGxheWVkIHBva2VyIGEgZmV3IHRpbWVzIGluIGEgd2Vlay4gVGhpcyB3YXMgdGhlIG1vc3QgcHJvZml0YWJsZSB0aW1lIGJlY2F1c2UgSSBjb3VsZG4gcmVhbGx5IGFmZm9yZCB0aGlua2luZyBhYm91dCBwb2tlciBhbGwgdGhlIHRpbWUgYW5kIHRodXMsIHBsYXllZCB3aXRoIGEgbXVjaCBjbGVhcmVyIG1pbmQuIFJpZ2h0IG5vdywgSSBiYWNrIGhvbWUgZm9yIGEgd2hpbGUgYW5kIHBva2VyIGhhcyB0YWtlbiBvdmVyIG1lIGFnYWluLgpIZSBnZW51aW5lbHkgY2FyZXMgZm9yIENhbWlsbGUgYW5kIGRldmVsb3BzIHZlcnkgc2VyaW91cyBmZWVsaW5ncyBmb3IgaGVyIHRoYXQgZmVlbCBmbGVzaGVkIG91dC4gVGhlIHBhcnQgbGFzdCBlcGlzb2RlIHdoZXJlIGhlIGdvdCBhbmdyeSBhbmQgc2FpZCBtZWFuIHRoaW5ncyBvdXQgb2YgaGVhcnRicmVhayAobm90IGV4Y3VzaW5nIGl0IGFzIG9rYXkgYnV0IGl0IGZlbHQgdW5kZXJzdGFuZGFibGUgaW4gdGhlIGNvbnRleHQpLCBidXQgeW91IGNvdWxkIHNlZSBpbiBoaXMgZmFjZSBob3cgbXVjaCBoZSBjYXJlZCBmb3IgaGVyIHRoaXMgZXBpc29kZSBldmVuIGFmdGVyIGFsbCB0aGF0IHN0dWZmIHdpdGggSm9obiB3ZW50IGRvd24uIApUaGUgY29tcGFuaWVzIHJlcG9ydCBnYW1pbmcgcmV2ZW51ZSB0byB0aGUgc3RhdGUgb2YgT2hpbywgYnV0IGFzIHByaXZhdGUgY29tcGFuaWVzLCB0aGV5IGRvIG5vdCBkaXNjbG9zZSB0b3RhbCByZXZlbnVlIG9yIHByb2ZpdGFiaWxpdHkuLiAKQkxVRVMgQlJPVEhFUlM6IEpvYXF1aW4gUGhvZW5peCBhbmQgQ2FzZXkgQWZmbGVjaywgY2hlY2tpbmcgb3V0IHRoZSBNZXRob2QgTWFuIGFuZCBSZWQgTWFuIHNob3cgYXQgSG91c2Ugb2YgQmx1ZXMgaW4gV2VzdCBIb2xseXdvb2QuClRoaXMgaXMgd2hhdCBzb21lIG9mIHN1cnZpdm9ycyByZWZlciB0byBhcyBhICJicm9rZW4gbm9ybWFsIG1ldGVyIi4gCiJEb24gdGVsbCBoaW0gdGhhdCBoZSBnb3QgcmVkIGhhaXIsIiBoZSBzYWlkLiAiSGUga25vY2t5b3Ugb3V0LiIgQWZ0ZXIgdGhlIHdlaWdoIGluLCBQYWNxdWlhbyBxdWlja2x5IGRpc2FwcGVhcmVkIHNvIGhlIGNvdWxkIGhhdmUgc29tZXRoaW5nIHRvIGVhdCBhbmQgZGlkbiBzdG9wIHRvIHNwZWFrIHRvIHJlcG9ydGVycy4gSGUgaGFzIGJlZW4gbm90aWNlYWJseSBhbG9vZiBpbiB0aGUgcGFzdCBmZXcgZGF5cy4gCkluIDUgY2FyZCBkcmF3IHlvdSByZWNlaXZlIDUgaG9sZSBjYXJkcyBhbmQgZGVwZW5kaW5nIG9uIHRoZSB2YXJpYXRpb24gb2YgNSBjYXJkIGRyYXcgdGhlcmUgaXMgMSBvciAzIG9yIG1vcmUgcm91bmRzIG9mIGJldHRpbmcgd2hlcmUgcGxheWVycyBjYW4gY2hvb3NlIHRvIHRyYWRlIGNhcmRzIGZyb20gdGhlIGRlY2socykgb2YgY2FyZHMuIEVhY2ggdHJhZGUgb2YgdGhlIGNhcmRzIGlzIGZvbGxvd2VkIGJ5IGEgcm91bmQgb2YgYmV0dGluZy4gCkkgc3dpcGVkIGRvd24gb24gaGVyIHBob25lIHRvIHNlZSB0aGUgb3RoZXIgY29sb3IgYW5kIEkgc3dlYXIgdG8gR29kIG15IGV5ZXMgbmVhcmx5IHBvcHBlZCBvdXQgb2YgbXkgaGVhZCBhcyBJIHNhdyB0aGF0IHRoZSBwdXJzZSBjb3N0ICQ0LDUwMCBVU0QuLiAKTHVja3kgYXQgbGlmZS4gTG92ZWQgYW5kIHJlc3BlY3RlZCBieSBtYW55LiBKb2huIGVzcGVjaWFsbHkgZW5qb3llZCB0aGUgdGltZXMgd2hlbiBoaXMgc29ucyB3b3VsZCBqb2luIGhpbSBhdCB0aGUgQ2x1YiBmb3IgYSByb3VuZCBvZiBnb2xmIG9yIHBva2VyIG5pZ2h0IHdpdGggdGhlIGd1eXMgYWxvbmcgd2l0aCB0aGUgbnVtZXJvdXMgZmFtaWx5IGZ1bmN0aW9ucyBlbmpveWVkIGF0IE1hcmtsYW5kIG92ZXIgdGhlIHllYXJzLiAKV2hlbiBJIHN1Z2dlc3QgdGhhdCB0aGUgYmVzdCB3YXkgdG8gc29sdmUgdGhlIGZpbmFuY2lhbCBjcmlzaXMgb2YgaGlnaGVyIGVkIGlzIHRvICJ0aHJvdyB0aGUgYnVtcyBvdXQsIiBnZXQgcmlkIG9mIHRoZSBwZW9wbGUgbWFraW5nIHJpZGljdWxvdXNseSBoaWdoIHNhbGFyaWVzIGFuZCByZXBsYWNlIHRoZW0gd2l0aCBzbWFydCBwZW9wbGUgd2lsbGluZyB0byB3b3JrIGZvciBhIG1lcmUgJDEwMCwwMDAgb3IgZXZlbiwgZ2FzcCwgbGVzcywgcGVvcGxlIGxvb2sgYXQgbWUgbGlrZSBJIGp1c3Qgc3VnZ2VzdGVkIGhhdmluZyBtZWF0bG9hZiBmb3IgVGhhbmtzZ2l2aW5nLgpJbmRlZWQsIGFsdGhvdWdoIHRoZSBuZXcgY2VsbHMgYXJlIGEgc21hbGwgcGVyY2VudGFnZSBvZiB0aGUgZ3JhbnVsZSBjZWxsIGxheWVyLCBpbmRpdmlkdWFsIG5ldyBuZXVyb25zIGhhdmUgYSB0cmFuc2llbnQgaW5jcmVhc2UgaW4gTFRQIGFtcGxpdHVkZSBhbmQgYSBkZWNyZWFzZWQgaW5kdWN0aW9uIHRocmVzaG9sZCBbNjUsNjZdLiAKQW5kIG5vLCBoYXZpbmcgYm90aCBJbmRvbWl0YWJsZSBhbmQgRGV2YXN0YXRvciB3b3VsZCBiZSBhIGNyaW1lLiBZZXMsIHRoZSBsYWNrIG9mIHRoZSBIUCB3aXRob3V0IEluZG9taXRhYmxlIG1ha2VzIHlvdSBoYXZlIGxlc3MgZWZmZWN0aXZlIEhQLCBidXQgdGhlIHNvbHV0aW9uIHdvbiBiZSB0byBzYXksIGhlcmUgdGFrZSByaWRpY3Vsb3VzIGFtb3VudHMgb2YgcmFnZSwgZG1nLCBhbmQgSFAuIApCdXQgbW9yZSBpbXBvcnRhbnRseSwgc21hcnQgbWV0ZXJzIGVuYWJsZSB1dGlsaXR5IHByb3ZpZGVycyB0byBnYXRoZXIgZGV0YWlsZWQsIGNvbnRpbnVvdXMgZGF0YSBvbiBob3cgbXVjaCBlbmVyZ3kgeW91J3JlIHVzaW5nIGFuZCB3aGVuIHlvdSdyZSB1c2luZyBpdCwgd2hpY2ggZW5hYmxlcyB0aGVtIHRvIHBsYW4gZm9yIGVsZWN0cmljYWwgZGVtYW5kIG1vcmUgcHJlY2lzZWx5IGFuZCBhZGp1c3QgcHJpY2luZyB0byBmaXQuLiAKSSBsYXRlciBmb3VuZCBvdXQgZnJvbSBhIGZyaWVuZCB0aGF0IGhlIGhhZCBicmFnZ2VkIHRoYXQgZXZlbiB0aG91Z2ggd2UgYmVlbiBnb2luZyBzaG90IGZvciBzaG90LCBoZSB3YXMgZG9pbmcgd2F0ZXIgc2hvdHMsIHNvIGhlIGtlZXAgYSBjbGVhciBoZWFkIHdoaWxlIGhlICJjb252aW5jZWQgbWUgdG8gcmVhbGl6ZSBteSB0cnVlIGZlZWxpbmdzIGZvciBoaW0iLgpTb2FrIGluIGEgaG90IGJhdGguIEFmdGVyIGEgaGFyZCBkYXksIGl0J3MgbmljZSB0byBnZXQgaW50byBhIGhvdCB0dWIgYW5kIGxldCB0aGUgaG90IHdhdGVyIGRvIGl0cyB0cmljay4gSWYgeW91IGhhdmUgYSBKYWN1enppIGF0IGhvbWUsIGdvIGFoZWFkIGFuZCBzb2FrIGZvciB0d2VudHkgbWludXRlcyBhbmQgbGV0IHRoZSBtYXNzYWdpbmcgYWN0aW9uIG9mIHRoZSB3YXRlciBwcmVzc3VyZSBoZWxwIHJlbGF4IHlvdXIgc29yZSBsZWcgbXVzY2xlcy4gSWYgeW91IG9ubHkgaGF2ZSBhIGJhdGh0dWIsIGdvIGFoZWFkIGFuZCBwdXQgYSBjdXAgb2YgRXBzb20gc2FsdHMgaW4gdGhlIGJhdGggd2F0ZXIuIFRoaXMgd2lsbCBjZXJ0YWlubHkgaGVscCBzb290aGUgeW91IHNvcmUgbXVzY2xlcy4KTm93LCB5b3VuZyBCb2JhIHNpdHMsIGhpZGluZywgYW5kIHdhdGNoZXMgSmFuZ28gZmlnaHQgSmVkaSBpbiB3aGF0IHNlZW1zIHRvIGJlIGEgc2xhdWdodGVyLiBKZWRpIGFyZSBmYWxsaW5nIHVuZGVyIHdhdmVzIG9mIGF0dGFja3MgYnkgdGhlIEdlb25vc2lhbiBidWdzLiBBbmQgdGhlcmUgSmFuZ28sIGhvbm91cmVkIGFtb25nc3QgZmVhcnNvbWUgbWVuIHN1Y2ggYXMgRG9va3UsIGZpZ2h0aW5nIHRoZSBKZWRpLiBCb2JhIHdhdGNoZXMgb24sIHdpZGUgZXllZC4gR2xlZWZ1bC4gQWJzb3JiZWQgYnkgdGhlIGNoYW9zIG9mIGJhdHRsZSBpbiB3aGljaCBoaXMgZmF0aGVyIGlzIGEgd2FycmlvciB0byBiZSBmZWFyZWQuClBvc3RlZCBieSBqbWQ4MiBhdCA3OjI3IFBNIG9uIFNlcHRlbWJlciAyNiwgMjAwNgpUaGlzIHdheSwgeW91IGNhbiBtYWtlIHRoZSByaWdodCBjaG9pY2UgYW5kIGxlYXJuIGFib3V0IHRoZSBpc3N1ZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb2xsZWN0aWJsZXMuIApJdCB0b29rIG1lIGEgbG9uZyB0aW1lIHRvIHJlYWxpc2Ugc29tZXRoaW5nIHdhcyB0cnVseSB3cm9uZy4gQmFzaWNhbGx5IEkndmUgYmVlbiBzdWljaWRhbCBzaW5jZSBhZ2UgNywgSSdtIDE4IGluIHR3byBtb250aHMgZm9yIHJlZmVyZW5jZS4gSSBndWVzcyBJJ3ZlIGFsd2F5cyBiZWVuIG1pc2VyYWJsZSBidXQgSSB0aG91Z2h0IHRoYXQgd2FzIGp1c3QgbGlmZSwgb3IgSSdkIGlnbm9yZSBpdCBjb21wbGV0ZWx5IGFuZCB0aG91Z2h0IG15IGZlZWxpbmdzIHdlcmUgbm9ybWFsLiBUaGVuIEkgZmluYWxseSByZWFsaXNlZCB0aGVyZSB3YXMgYSBwcm9ibGVtIHdoZW4gSSB0YWxrZWQgdG8gbXkgdGhlcmFwaXN0IGF0IGFnZSAxNSBhbmQgaGUgc2VlbWVkIGdlbnVpbmVseSB3b3JyaWVkLiBGYXN0IGZvcndhcmQgYSBjb3VwbGUgbW9udGhzIG9mIHNlbGYgaGFybSB0aGF0IEkgZmVsdCBub3RoaW5nIG9mIGFuZCBzd2VlcGluZyBzaGl0IHVuZGVyIHRoZSBydWcgYW5kIEknbSBhZG1pdHRlZCB0byBhIGxvY2FsIHBzeWNoIHdhcmQgYmVjYXVzZSBJIGJyb3VnaHQgYSBrbmlmZSB0byBzY2hvb2wgd2l0aCB0aGUgaW50ZW50aW9uIG9mIHN0YWJiaW5nIHNvbWVvbmUsIGFueW9uZS4KVGhleSBjb21lIHRvIEdlcm1hbnkgYW55d2hlcmUgZnJvbSAyIHdlZWtzIGF0IGEgdGltZSB0byA4IG1vbnRocyBvbiBhIHN0cmV0Y2guIApUaGUgaW5jbHVkZWQgc3R1ZGllcyB3ZXJlIG9mIFN3ZWRpc2ggbWFzc2FnZSBhbmQgYWN1cHJlc3N1cmU7IG5vIHN0dWRpZXMgcGVydGFpbmluZyB0byBib2R5d29yayBvciBjaGlyb3ByYWN0aWMgdGhlcmFweSB3ZXJlIGlkZW50aWZpZWQuUGFydGljaXBhbnRzIGluY2x1ZGVkIGluIHRoZSByZXZpZXdQYXRpZW50cyB3aXRoIGRpYWJldGVzIHdlcmUgaW5jbHVkZWQuT3V0Y29tZXMgYXNzZXNzZWQgaW4gdGhlIHJldmlld1N0dWRpZXMgdGhhdCBtZWFzdXJlZCBhdCBsZWFzdCBvbmUgcmVsZXZhbnQgcHJpbWFyeSBkaWFiZXRlcyBvdXRjb21lIG9yIGEgcG90ZW50aWFsbHkgcmVsZXZhbnQgc2Vjb25kYXJ5IGRpYWJldGVzIG91dGNvbWUgd2VyZSBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3LiAKVGhlIGV4dHJhb3JkaW5hcnkgY29sbGVjdGlvbnMgb2YgdGhlIFZpcmdpbmlhIE11c2V1bSBvZiBGaW5lIEFydHMgc3BhbiBtb3JlIHRoYW4gNTAwMCB5ZWFycyBvZiBhcnQgZnJvbSBhcm91bmQgdGhlIGdsb2JlCkRpc2FiaWxpdHkgYWZmZWN0cyBtb3JlIHRoYW4gNTYgbWlsbGlvbiBBbWVyaWNhbnMuIEl0J3MgZGVmaW5lZCBieSBsaW1pdGF0aW9ucyBpbiBiZWluZyBhYmxlIHRvIGRvIGJhc2ljIGFjdGl2aXRpZXMgc3VjaCBhcyBlYXRpbmcsIGRyZXNzaW5nIG9yIGJhdGhpbmcgb25lc2VsZiwgZ2V0dGluZyBpbiBhbmQgb3V0IG9mIGJlZCBhbmQgd2Fsa2luZyBhY3Jvc3MgYSByb29tLiAKRGlkIHNvbWV0aGluZyBzaW1pbGlhciBhdCBhIGdhcmFnZSBzYWxlLiBQYXJlbnRzIGFuZCBhIGJ1bmNoIG9mIGtpZHMgc2hvdyB1cCBhbmQgc3RhcnQgaGFnZ2xpbmcgb24geGJveCBnYW1lcy4gSSBnaXZlIHRoZW0gYSBkZWFsIGFuZCB0aGVuIHRocm93IGluIG15IG9sZCB4Ym94IDM2MCBjb25zb2xlIGFzIHdlbGwuIEZlbHQgcHJldHR5IGdvb2QuIFRoZW4gdGhlIG5leHQgd2VlayBJIHNlZSBNUyBjaGFyZ2VzIG9uIG15IGNyZWRpdCBjYXJkLiBUdXJucyBvdXQgSSBoYWQgZm9yZ290dGVuIHRvIHNpZ24gb3V0IG9mIHRoZSB4Ym94IChvb3BzKSBhbmQgdGhleSBjaGFyZ2VkIGEgZmV3IGh1bmRyZWQgZG9sbGFycyB0byBNaWNyb3NvZnQgUG9pbnRzIGFuZCB0aGVuIGJvdWdodCBhIGJ1bmNoIG9mIGdhbWVzIHRoYXQgdGhleSBoYWQgc2VudCB0byBhIFBPIEJveC4gSSBjaGFuZ2VkIGFsbCBteSBzZWN1cml0eSwgY29udGFjdGVkIE1TIGJ1dCBpdCBzZWVtcyB0aGF0IHRoZXkgd29uIHJlZnVuZCBNUyBwb2ludHMgYW5kIHdvbiByZWZ1bmQgcHVyY2hhc2VzIGlmIHRoZXkgcHVyY2hhc2VkIHdpdGggTVMgcG9pbnRzLiBNeSBjcmVkaXQgY2FyZCBkaWRudCBoYXZlIGFuIGlzc3VlIG1hcmtpbmcgdGhlbSBhcyBmcmF1ZHVsZW50IGNoYXJnZXMgdGhvdWdoLgpTbywgaW4gb25lIHNlbnNlIG9mIHRoZSB3b3JkLCBhIHBva2VyIGNhbGN1bGF0b3IgYWN0cyBhcyBhIHBlcnNvbmFsIGNvYWNoLiAKV2hhdCBpcyB0aGUgYW5zd2VyIHRvIG91ciBwcmVkaWNhbWVudD8gSXQgbGlrZWx5IHRoZXJlIGFyZSBtYW55LCBidXQgdGhpbmdzIG11c3QgYmVnaW4gd2l0aCB0aGUgYWNrbm93bGVkZ2VtZW50IHRoYXQgZW1wbG95bWVudCByYXRlcyBhcmUgbm8gbG9uZ2VyIGFjY3VyYXRlIG1lYXN1cmVzIG9mIG91ciBjb21tdW5pdHkgaGVhbHRoIG9yIHdlYWx0aC4gVGhlIHJlYWwgc3RvcnkgaXMgZmFyIG1vcmUgY29tcGxleC4KVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCBpdCBoYXMgdG8gY29tZSBtb3N0bHkgZnJvbSB0aGUgcGxheWVycyBhbmQgdGhlIGdtLi4gCkFzIGZvciB0aGUgbG90dGVyeSBzdHJhdGVnaWVzLCB0aGUgc2l0dWF0aW9uIGlzIGV2ZW4gImJldHRlciIsIHlvdSB3b3VsZCBmaW5kIGxvdHMgb2YgYWR2aWNlcyBmcm9tIHNpbXBsZSB0byBjb21wbGljYXRlZCwgIm1hdGhlbWF0aWNhbGx5IGp1c3RpZmllZCIuIApXaGlsc3QgdGhlcmUsIGhlIHdhcyBtdXJkZXJlZCwgcHJlc3VtYWJseSBieSBsZnRocnl0aCwgYW5kIHRoZWxyZWQgYmVjYW1lIEtpbmcgYXQgdGhlIGFnZSBvZiBhYm91dCB0ZW4uIApNb3RhZXNvbG8gIDE5LDE1MyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpBIHBvcHVsYXIgYmVsaWVmIGlzIHRoYXQgdGhlIENoaW5lc2UgaW52ZW50ZWQgdGhlIGdhbWUgYXJvdW5kIDkwMCBBRCBkZXJpdmluZyB0aGUgZ2FtZSBmcm9tIENoaW5lc2UgZG9taW5vZXMsIGl0IGlzIHJlcG9ydGVkIHRoYXQgdGhleSBwbGF5ZWQgImRvbWlubyBjYXJkcyIuIEFub3RoZXIgYmVsaWVmIGlzIHRoYXQgaXQgb3JpZ2luYXRlZCBpbiB0aGUgMTd0aCBjZW50dXJ5IGZyb20gYSBQZXJzaWFuIGdhbWUgY2FsbGVkICJhcyBuYXMiLiBUaGUgZ2FtZSByZXF1aXJlZCBhIGRlY2sgb2YgMjUgY2FyZHMgd2l0aCA1IHN1aXRzIGFuZCB3YXMgZGVzaWduZWQgZm9yIDUgcGxheWVycy4KSml1IGppdHN1IGdhbWU6IE9uZSBwZXJzb24gZG93biBvbiB0aGUgZ3JvdW5kLCBwbGF5aW5nIGd1YXJkIHcvIGZlZXQgb24gaGlwcy4gT3RoZXIgcGVyc29uIGlzIHN0YW5kaW5nLCBwZXJzb24gb24gdG9wIHRyaWVzIHRvIHRvdWNoIHRoZSBndWFyZCBwbGF5ZXJzIGZvcmVoZWFkLiAKVW5saWtlIFN1YmJhbiwgdGhlIHRoaW5ncyBSb2RnZXJzIGRpZCB3ZXJlbiBjYXJlZnVsbHkgY2FsY3VsYXRlZCB0byBlbmhhbmNlIGhpcyBicmFuZDogVGhlIE9yZGluYXJ5IFN1cGVyc3RhciB3YXMgc3BvbnRhbmVvdXMgYW5kIHJlYWwuIApHZW5lcnZ0IHVuZCB1bSBkaWUgRXJmYWhydW5nIHJlaWNoZXIsIGRhc3MgZXMgaW0gR3JpZWNoaXNjaGVuIGtlaW4gV29ydCBmIFIgZ2lidCwgaGFiZW4gd2lyIHVucyBlcm5ldXQgYXVmIFppbW1lcnN1Y2hlIGJlZ2ViZW4uLiAKV2UgYXJyaXZlZCBpbnRvIEF0bGFudGEgZWFybHkgYW5kIGhlIGhhZCBubyBwcm9ibGVtIHdpdGggdXMgY2hlY2tpbmcgaW4gZWFybHkuIEhlIGtlcHQgdXMgdXAgdG8gZGF0ZSwgdmlhIHRleHQsIG9uIHRoZSBwcm9ibGVtcyBhbmQgd2hlbiB0aGV5IHdlcmUgcmVwYWlyZWQsIGlmIG5lY2Vzc2FyeS4gCkdvaW5nIGFsb25nIHdpdGggdGhlIGxveWFsdHkgdGhpbmcsIHdoaXRlIGhvdXNlcyB3b3VsZG4gcmVhbGx5IGZvbGxvdyBlYWNob3RoZXIsIHRoZSBjb21tb24gZm9sayBtaWdodCwgYW5kIEkgdGhpbmsgTWFyZ2Flcnkgd291bGQgdXNlIHRoYXQgdG8gaGVyIGFkdmFudGFnZS4gVGhlIG1haW4gZGlzYWR2YW50YWdlIG9mIEhvdXNlIFR5cmVsbCBpcyB0aGF0IExvcmFzLCBhcyBhIG1lbWJlciBvZiB0aGUgS2luZ3NndWFyZCwgd291bGRuIG1hcnJ5LCBHYXJsYW4gaXMgYWxyZWFkeSBtYXJyaWVkLCBhbmQgSSBub3Qgc3VyZSB3aGF0IHdvdWxkIGhhcHBlbiB0byBXaWxsYXMuIApJbnNhbmUgdGhhdCB3ZSBrbm93IHRoaXMgY2hpbGQgaGFzIG5vIHVuZGVyc3RhbmRpbmcgb3IgcmVnYXJkIGZvciBjb25zZXF1ZW5jZXMgb3Igb3RoZXIgcGVvcGxlIGFuZCBpdCdzIGEgd2FpdGluZyBnYW1lIHVudGlsIGhlIGtpbGxzIHNvbWVvbmUgaW50ZW50aW9uYWxseSBvciB1bmludGVudGlvbmFsbHkuCkJ1dCB3aGF0IGRvZXMgaXQgbWF0dGVyIHdoZW4gaXQgaXMgb3BlbiBzb3VyY2VkIGFuZCBjYW4gYmUgY29waWVkPyBCaXRjb2luIG1heSBpbXBsZW1lbnQgaXRzIG93biBwcml2YWN5IGZlYXR1cmVzLiAKUG9rZXIgbG92ZXJzIGNhbiBzZWxlY3QgdGhlIGJlc3Qgb25saW5lIHBva2VyIHNpdGUgdGhyb3VnaCByZWFkaW5nIHJldmlld3Mgb2YgdGhlIGdhbWJsaW5nIHNpdGVzLCBhc2NlcnRhaW5pbmcgdGhlIHNlY3VyaXR5IGFuZCBlZmZpY2FjeSBvZiB0aGUgc2l0ZSBhcyB3ZWxsIGFzIGNoZWNraW5nIG90aGVyIGZlYXR1cmVzIHdoaWNoIG1ha2UgdGhlIHNpdGUgcmVsaWFibGUuIApXZWxsIHRoZSBsaXRlcmF0dXJlIHRoYXQgeW91IGFyZSByZWZlcmluZyB0byBpcyB3cm9uZy4KQ2FuIHdlIHJpZGUgaXQgbm93IHRoYXQgd2UgYXJlIGZyaWVuZHM/ICJTdXJlLCB3aHkgbm90PyIKQWhoIGFoaCwgS29taXNhcnVrIHNxdWF3a2VkLCBpbWl0YXRpbmcgdGhlIGJpcmQuIApBcyBoZWFkIG9mIHRoZSBOQUUgc2luY2UgMjAwMywgSGFnZ2FyZCBoYXMgYmVlbiBhIGxlYWRpbmcgbW9kZXJhdGUgdm9pY2UgYW1vbmcgZXZhbmdlbGljYWxzLiBIZSBzcGFycmVkLCBwdWJsaWNseSBhbmQgcHJpdmF0ZWx5LCB3aXRoIHNvbWUgYmlnIG5hbWUgZXZhbmdlbGlzdHMgYXMgaGUgYW5kIG90aGVyIE5BRSBvZmZpY2lhbHMgZW1icmFjZWQgYSBncm93aW5nIGxpc3Qgb2YgbW9yYWwgaXNzdWVzLCBpbmNsdWRpbmcgZ2xvYmFsIHdhcm1pbmcsIGFuZCB1cmdlZCBldmFuZ2VsaWNhbHMgbm90IHRvIHNwZWFrIGhhcnNobHkgYWJvdXQgSXNsYW0uCkNhcmUgdG8gZWxhYm9yYXRlPyBCZWluZyBhIENocmlzdGlhbiBtZWFucyB5b3UgYmVsaWV2ZSB0aGUgQmlibGUgaXMgdGhlIHdvcmQgb2YgR29kLiBUaGF0IHRleHQgc2F5cyB0aGF0IHlvdSBwaWNrIHVwIGFuZCBjYXJyeSB5b3VyIGNyb3NzIGRhaWx5LiBZb3UgbmV2ZXIgc3RvcCBwdXJzdWluZyBhIGdyZWF0ZXIgcmVsYXRpb25zaGlwIHdpdGggR29kLiAKUmVzdWx0czogQSB0b3RhbCBvZiAyMCBSQ1RzIHdlcmUgaW5jbHVkZWQgKG4gPSAzMDczIGluY2x1ZGVkIGluIGZpbmFsIGFuYWx5c2VzIGFjcm9zcyAzNDYwIHJhbmRvbWx5IGFzc2lnbmVkIGluZGl2aWR1YWxzKS4gCkFueSBmb3JtIG9mIGdhbWJsaW5nLCB5b3UgbmVlZCBhIHN0cm9uZyBzdG9tYWNoIGFuZCB5b3UgbmVlZCB0byBoYXZlIGEgdmVyeSBjb29sIGhlYWQgYWJvdXQgdGhlIHVwcyBhbmQgZG93biwgaGUgc2FpZC4gVGhpcyBndXkgd2FzIGEgbWlsbGlvbmFpcmUsIGl0IHF1aXRlIHBvc3NpYmxlIGhlIHdhcyBub3QgYm90aGVyZWQgYnkgdGhlIHVwcyBhbmQgZG93bi4gCllvdSBzYXkgZmFtaWx5IGFubmloYWxhdG9ycyBhcmUgcmFyZSBidXQgaXQgaXMgZXZlbiBtb3JlIHJhcmUgdGhhdCB0d28gbWFycmllZCBwZW9wbGUgbXVyZGVyZWQgYXQgdGhlIHNhbWUgdGltZS4KU3RhdGVzIHJlY2VpdmVkIDEwMCBzYW1wbGVzIGFuZCB0ZXJyaXRvcmllcyByZWNlaXZlZCBzaXguIApCcmVmLCBkZSB0b3V0ZXMgY2VzIHZhbGV1cmV1c2VzIGxvcGV0dGVzIHF1aSBuJ29zZW50IGludGVycm9nZXIgbGVzIGZhaXRzLCBxdWVzdGlvbm5lciBjb21tZSBpbCBzZSBkb2l0IGwnYWN0dWFsaXQsIHByZW5kcmUgbGEgcmFsaXQgcG91ciBhdXRyZSBjaG9zZSBxdSd1biAiaG9heCIgZCdleHRybWUgZHJvaXRlIGV0IGNlc3NlciBkZSBtcHJpc2VyIGxlIHBldGl0IHBldXBsZSBxdWkgc2UgZm91dCBkdSBOUEEsIGRlIExPIG91IGRlcyB0YXRzIGQnbWUgZGUgQ2hyaXN0aWFuZSBBbmdvdC4uIApMYXN0IHVwZGF0ZWQ6IDI2IDAyIDIwMTlTb21lIG1heSBub3Qga25vdywgYnV0IEJldFZpY3RvciBpcyBqdXN0IGEgcmVicmFuZCBvZiB0aGUgcHJldmlvdXNseSBrbm93biBWaWN0b3IgQ2hhbmRsZXIgYnJhbmQsIGEgY29tcGFueSBwcmVzZW50IGluIHRoZSBsYW5kIGJhc2VkIHNwb3J0cyBiZXR0aW5nIGJ1c2luZXNzIHNpbmNlIDE5NDYuIApTbyBrbm93IEkga25vdyBhcyBtdWNoIEdlcm1hbiBhcyBteSBkb2csIHRob3VnaCBJIHN1cmUgd2UgYnV0Y2hlciBpdC4gCkl0IGlzIGltcG9ydGFudCB0byByZW1lbWJlciB0aGF0IGFueSBwbGF5ZXIgbWF5IGNoYW5nZSBmcm9tIG9uZSBwbGF5aW5nIHNlc3Npb24gdG8gdGhlIG5leHQgYW5kIHRoYXQgc29tZSBwbGF5ZXJzIGNhbiBldmVuIGNoYW5nZSB3aXRoaW4gYSBwbGF5aW5nIHNlc3Npb24uIEEgcG9vciBwbGF5ZXIgbWF5IGltcHJvdmUgb3ZlciB0aW1lLCBhbmQgYSBnb29kIHBsYXllciBtYXkgYmUgaGF2aW5nIGEgYmFkIGRheS4gVGhlcmVmb3JlLCBpdCBpcyBhIGdvb2QgaWRlYSB0byB1c2UgdGhlIGJlZ2lubmluZyBvZiBlYWNoIHNlc3Npb24gdG8gcmUgZXZhbHVhdGUgYW55IGZhbWlsaWFyIG9wcG9uZW50cyB3aGlsZSB5b3UgZXZhbHVhdGUgbmV3IG9uZXMuLiAKU2luY2VyZWx5LCBhIG5vcm1hbCBjaGVzcyBob2JieWlzdC4KSGFyZGx5IGNhcmluZywgSm9obmF0aGFuIGhvcHBlZCBvdXQgYW5kIHN0YXJ0ZWQgaGlzIGJyaXNreSB3YWxrIHRvd2FyZHMgQWxiZXJ0byBTdWJzIGZvciBhdCBsZWFzdCBzb21ldGhpbmcgbWVkaW9jcmUuCkFuZCB0aGlzIHdhc24gYSBjb21tZW50YXJ5IG9uIHlvdXIgcG9zdCBvdmVyYWxsLCBJIHRoaW5rIHRoZSBxdW90ZSBhbmQgdGhlIGltYWdlIHdhcyBhIHZhbHVhYmxlIGFuZCBtZWFuaW5nZnVsIHRoaW5nIHRvIHNoYXJlIGluIHRoaXMgY29tbXVuaXR5LiBCZWluZyBpbnRyaW5zaWNhbGx5IHZhbHVhYmxlLCBhbmQgbW9yZW92ZXIgZm9yIHByb21wdGluZyB0aGlzIGV4YWN0IGNvbnZlcnNhdGlvbiB3ZSBhcmUgaGF2aW5nLi4gClRoZXkgYWxzbyBvZmZlciBzaGFyZXMgaW4gYmVlZiwgcG9yaywgY2hpY2tlbnMsIGVnZ3MsIGhvbmV5LCBtYXBsZSBzeXJ1cCBhbmQgb2Z0ZW50aW1lcyBmcnVpdC4uIApKZSBub3RlIHF1ZSBkcyBsJ2VudHJlIGRlIFBvdXRpbmUgZGFucyBsYSBkYW5zZSBzeXJpZW5uZSBvbiBhIHBhcmwgZGUgM21lIGd1ZXJyZSBtb25kaWFsZS4gClNoZSBoYXMgbWFkZSBpdCBubyBzZWNyZXQgYXMgb2YgbGF0ZSB0aGF0IHNoZSdzIGxvb2tpbmcgdG8gY2hhbmdlIHRoZSBsYW5kc2NhcGUgZm9yIHdvbWVuIGluIEhvbGx5d29vZCwgYW5kIHNoZSBiZWxpZXZlcyBpdCBhbGwgc3RhcnRzIHdpdGggaGVyIG1vdmllIHNlbGVjdGlvbiBwcm9jZXNzLi4gCkl0J3MgYSByZXNwb25zaWJpbGl0eSBJIHRvb2sgb24sIGFuZCBzb21ldGhpbmcgSSdsbCBoYXZlIHRvIGxpdmUgd2l0aC4gCiJXZWxsLCBLcnVzdHksIGl0IGRlcGVuZHMgb24gd2hhdCB5b3UgbWVhbiBieSB0ZW50cyBoaXMgZmluZ2VycyBhbmQgZnVycm93cyBoaXMgYnJvdywgbGlzdGVuaW5nIGludGVudGx5LgpJIGZhbWlsaWFyIHdpdGggdGhlIHBvZW0uIApJIHdhaXRlZCBhbm90aGVyIGNvdXBsZSBob3VycyBmb3IgYW4gTVJJLCBnb3QgaXQgZG9uZSwgdGhlbiB3YWl0ZWQgYW5vdGhlciBjb3VwbGUgaG91cnMgZm9yIHRoZSBkb2N0b3IgdG8gZ2V0IGJhY2sgd2l0aCB0aGUgcmVzdWx0cyBhbmQgdGVsbCBtZSBJIHdvdWxkIG5lZWQgdG8gc3RheSBhcyB0aGV5IHdvdWxkIGhhdmUgdG8gcmVtb3ZlIG15IGFwcGVuZGl4LiBTbyBuaWdodCBjYW1lIGFuZCBJIHdhcyBhYnNvbHV0ZWx5IGZ1Y2tpbmcgZnJlZXppbmcsIHNvIEkgZ290IGFuIGV4dHJhIGJsYW5rZXQgdG8gd2FybSBteXNlbGYgdXAgYW5kIGV2ZW50dWFsbHkgZmVsbCBhc2xlZXAuIFdoZW4gSSB3b2tlIHVwLCBJIGhhZCBhIGZldmVyIGZyb20gaGVsbCBhbmQgbXkgYmVkIGFuZCBjbG90aGVzIHdlcmUgc28gc29ha2VkIHdpdGggc3dlYXQgdGhhdCBJIGFjdHVhbGx5IHRob3VnaHQgZm9yIGEgbWludXRlIHRoYXQgSSBoYWQgcGlzc2VkIG15c2VsZiBkdXJpbmcgbXkgc2xlZXAuIApUaGlzIGdvZXMgYWxvbmcgd2l0aCBudW1iZXIgOS4gCkhhcnJ5IFJlaWQgbXVzdCBub3QgYmUgYSBEYWlseSBTaG93IGZhbiBiZWNhdXNlIHRoZSBuZXh0IGRheSwgd2hpbGUgb24gdGhlIFNlbmF0ZSBmbG9vciwgUmVpZCBoYWQgaGlzIHBva2VyIGZhY2Ugb24gd2hlbiBoZSBzYWlkICJUaGUgd29yZCdzIG91dCB0aGF0IGhlIGhhc24ndCBwYWlkIGFueSB0YXhlcyBmb3IgMTAgeWVhcnMuIExldCBoaW0gcHJvdmUgdGhhdCBoZSBoYXMgcGFpZCB0YXhlcywgYmVjYXVzZSBoZSBoYXNuJ3QuIiBSZWFsbHkgU2VuLiAKVGhlIGNvbW1lbnRzIHdlbnQgdmlyYWwgb24gTW9uZGF5IGFmdGVyIEtpbSBwb3N0ZWQgYW4gSW5zdGFncmFtIHZpZGVvIG9mIGFuIGludGVyYWN0aW9uIHdpdGggS2hsb2UgYW5kIEtlbmRhbGwgSmVubmVyIGFzIHRoZSBzaXN0ZXJzIGFuZCBtb21hZ2VyIEtyaXMgSmVubmVyIGdvdCByZWFkeSBmb3IgYSBjaGFyaXR5IHBva2VyIHRvdXJuYW1lbnQuIApHb29nbGUgd2lyZCBkaWVzZSBJbmZvcm1hdGlvbmVuIGJlbnV0emVuLCB1bSBJaHJlIE51dHp1bmcgZGVyIFdlYnNpdGUgYXVzenV3ZXJ0ZW4sIHVtIFJlcG9ydHMgYmVyIGRpZSBXZWJzaXRlYWt0aXZpdHRlbiBmciBkaWUgV2Vic2l0ZWJldHJlaWJlciB6dXNhbW1lbnp1c3RlbGxlbiB1bmQgdW0gd2VpdGVyZSBtaXQgZGVyIFdlYnNpdGVudXR6dW5nIHVuZCBkZXIgSW50ZXJuZXRudXR6dW5nIHZlcmJ1bmRlbmUgRGllbnN0bGVpc3R1bmdlbiB6dSBlcmJyaW5nZW4uIEF1Y2ggd2lyZCBHb29nbGUgZGllc2UgSW5mb3JtYXRpb25lbiBnZWdlYmVuZW5mYWxscyBhbiBEcml0dGUgYmVydHJhZ2VuLCBzb2Zlcm4gZGllcyBnZXNldHpsaWNoIHZvcmdlc2NocmllYmVuIG9kZXIgc293ZWl0IERyaXR0ZSBkaWVzZSBEYXRlbiBpbSBBdWZ0cmFnIHZvbiBHb29nbGUgdmVyYXJiZWl0ZW4uIApFYWNoIHRpbWUgSSBnbyBieSB0aGUgcm91bGV0dGUgcm9vbSBJIGFtIGFtYXplZCBieSB0aGUgcGVvcGxlIHBsYXlpbmcuIApCeSB0aGUgd2F5LCB3aGF0IGhhcHBlbmVkPyBEaWQgdGhleSBmdW5kIHRoZSBsb2FuIHdpdGggMyUgYmFjaywgb3Igd2l0aCAyJSBhbmQgc29tZSBvdGhlciBzbWFsbCBzZWxsZXIgcGFpZCBmZWUgaGFkIHRvIGJlIGluY2x1ZGVkIGluIHRoZSBjYWxjdWxhdGlvbj8gSG93IG11Y2ggaXMgaXQsIGFuZCBleGFjdGx5IGhvdyBkaWQgaXQgb2NjdXIuIFRoZXkgY2FuJ3QgInJlc2NpbmQiIHRoZSBsb2FuLiAKTm90IHRoZSBncmVhdGVzdCBsb2NhdGlvbiwgdGhlbi4gCkF0IHRoZSBlbmQgb2YgY2xhc3MsIHdlIHBpY2tlZCBhIGhhbmRmdWwgb2Ygd2FybSBvciBob3Qgcml2ZXIgcm9ja3Mgb3V0IG9mIGNvb2xlcnMgb2Ygd2F0ZXIgYW5kIHBsYWNlZCB0aGVtIG9uIG91ciBib2RpZXM6IHRoZSBzdG9tYWNoLCBoZWFydCwgaGVhZCwgd2hlcmV2ZXIgd2Ugd2FudGVkLiBCZWNhdXNlIHRoZSBzdG9uZXMgYXJlIGZyb20gYSByaXZlciwgdGhleSdyZSBjb25uZWN0ZWQgd2l0aCB3YXRlciwgd2hpY2ggaXMgaGVhbGluZy4gQXQgdGhlIHNhbWUgdGltZSwgdGhlIHJvY2tzIGFyZSBoZWF2eSB3aXRoIHRoZSB3ZWlnaHQgb2YgdGhlIGVhcnRoIHNvIHRoZXkgbWFrZSB5b3UgZmVlbCBzZWN1cmUuIFRoZSB3YXJtdGggdHJpZ2dlcnMgeW91ciBib2R5IHRvIGxldCBnbywgc28gdGhlIHJlbGF4YXRpb24gaXMgZGVlcCBhbmQgcGVuZXRyYXRpbmcuClBhcnRpY2lwYW50cyBjYW4gZG93bmxvYWQgR1BBVCBCb29rcyBQREYgT25saW5lIEZyZWUgYW5kIHN0dWR5IGZyb20gc2FtZS4gQXBhcnQgZnJvbSBHUEFUIEJvb2tzIDIwMTkgd2UgaGF2ZSBhbHNvIHByb3ZpZGVkIEJlc3QuIApPbiB0aGUgb3RoZXIgc2lkZSBhbG1vc3Qgbm8gcGxheWVycyBhcmUgZ29pbmcgdG8gY2hlY2sgYmFjayB2YWx1ZSBoZXJlLiAKSWYgaXQgZ2V0cyBkb3duIHRvIDUgb3IgZmV3ZXIgYmlnIGJsaW5kcywgdGhlbiB5b3UncmUgaW4gYSBkYW5nZXIgem9uZSBhbmQgbmVlZCB0byB0cnkgdG8gZG91YmxlIHVwIHNvb24uIEluIHN1Y2ggYSBzaXR1YXRpb24gdGhlIGJlc3Qgc3RyYXRlZ3kgaXMgcHJvYmFibHkgdG8gZ28gYWxsIGluIHdpdGggYW55IGRlY2VudCBoYW5kIHRvIHRyeSBhbmQgZ2V0IGEgbXVjaCBiaWdnZXIgY2hpcCBzdGFjay4gVGhlcmUgYXJlIGEgbnVtYmVyIG9mIGdyZWF0IGJvb2tzIG91dCB0aGVyZSBvbiBUZXhhcyBob2xkICdlbSB0b3VybmFtZW50cywgZXNwZWNpYWxseSBEYW4gSGFycmluZ3RvbidzIHNldC4gClR1ZXNkYXkncyByYWlkIGZvbGxvd3MgYW5vdGhlciBwcm92aW5jZSB3aWRlIHN3ZWVwIGJ5IHBvbGljZSBjb25kdWN0ZWQgb24gU3VwZXIgQm93bCBTdW5kYXkgRmViLiAzLiBUaGF0IHJhaWQgZm9jdXNlZCBvbiBhIE1hcmtoYW0gYmFucXVldCBoYWxsIHdoZXJlIGEgbGFyZ2UgU3VwZXIgQm93bCBwYXJ0eSB3YXMgdGFraW5nIHBsYWNlLiBTaXggbWVuLCBhbGxlZ2VkIHRvIGJlIGtleSBmaWd1cmVzIGluIHRoZSBvcGVyYXRpb24sIHdlcmUgYXJyZXN0ZWQgYW5kICQyLjUgbWlsbGlvbiB3YXMgc2VpemVkLgpTbywgdGhlIG51bWJlciBvZiB3YXlzIHRvIGdldCB0aGUgcXVlZW4gaXMgMiBDIDEgMSBvciAyLCBhbmQgdGhlIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgdGhlIHNhbWUgdHdvIGNhcmRzIGlzIDIgQyAyICwgb3IgMS4gT3VyIHRvdGFsIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgMiBjYXJkcyBmcm9tIDQ3IGlzIDQ3IEMgMiAsIG9yIDEwODEuIApBbHRlcm5hdGl2ZWx5LCBpZiB5b3UgYXJlIG5vdCBhIHN0dWRlbnQgYW5kIGFyZSBub3QgZG9pbmcgaG9tZXdvcmssIHdlIGhhdmUgcmVtb3ZlZCB5b3VyIHF1ZXN0aW9uIGJlY2F1c2UgaXQgcmVzZW1ibGVkIGEgaG9tZXdvcmsgcXVlc3Rpb24uIApTdGlsbCBjb3VsZG4gZmlndXJlIG91dCBob3cgdG8gaW5jcmVhc2UgdGhlIHBvd2VyIGxpbWl0IG90aGVyIHRoYW4gZmxhc2hpbmcgdGhlIGJpb3MuIApJZ25vcmluZyBtaXJhZ2Ugd2hvIEkgZG9uIGhhdmUgZW5vdWdoIHJvdW5kcyBwbGF5ZWQgdG8gbWF0dGVyLEkgb25seSB2YXJ5IGZyb20gMS4yNSBvbiBDYXVzdGljIHRvIDIuMyBvbiB3cmFpdGguIApNYXR0MDg2NCAgMSBwb2ludCAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpNb3N0IHBlb3BsZSBjYW4gdGVsbCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGEgcmVhbCBhbmQgYSBmYWtlIENDRUxMIGJ5IHRoZSB3YXkuCkJsYWNramFjayBpcyBvbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBjYXNpbm8gZ2FtZXMgdG9kYXkuIFBlb3BsZSBhcm91bmQgdGhlIHdvcmxkIGhhdmUgZ3JlYXQgZmFzY2luYXRpb24gYWJvdXQgdGhpcyBwYXJ0aWN1bGFyIGNhc2lubyBnYW1lLiBTcGVjaWFsbHkgdGhlIGNhc2lubyBmcmVha3MgY2FuIG5ldmVyIHRoaW5rIHdpdGhvdXQgYmxhY2tqYWNrIG9yIFRleHVzIEhvbGQnZW0gcG9rZXIgbm93YWRheXMuIFRoZXkganVzdCBsb3ZlIHRoZWlyIG5laWdoYm9ycyBhbmQgcmVsYXRpdmVzIHRvIGNhbGwgaW4gYW5kIHBsYXkgdG9nZXRoZXIgaW4gZGlmZmVyZW50IGZlc3RpdmFscyBhbmQgZXZlbnRzLiBBbG1vc3QgZXZlcnlvbmUgaGFzIHBsYXllZCB0aGlzIGdhbWUgb25jZSBhdCBsZWFzdC4gU29tZSBwZW9wbGUgcmVjb2duaXplIHRoaXMgZ2FtZSB3aXRoIHRoZSBuYW1lIG9mIDIxLgpCZXR0eSBXaGl0ZSBXYWl0aW5nIGZvciBSb2JlcnQgUmVkZm9yZCB0byBDYWxsIG9uIEhlciA5N3RoIEJpcnRoZGF5ClNpIHZvdXMgY29ubmFpc3NleiBsZXMgY2xhc3NlbWVudHMgY2xhc3NpcXVlcyBkZSBtYWlucyBhdSBwb2tlciwgbGEgc2V1bGUgZGlmZnJlbmNlIHZpZW50IGR1IGZhaXQgcXVlIGxhIHN1aXRlIGVzdCBkZXZhbnQgbGEgY291bGV1ci4gCllvdSBub3Qgc2VsZiBtYWRlIGlmIHlvdXIgcGFyZW50cyBoYXZlIGFjY2VzcyB0byBtaWxsaW9uIG9mIGRvbGxhcnMgYW5kIGdpdmUgeW91IGV2ZXJ5IG9wcG9ydHVuaXR5IGluIHRoZSB3b3JsZCB0byBzdWNjZWVkLiAKR29uZSB0byB0aGUgYmFycyBoZXJlIGEgZmV3IHRpbWVzIGluIGxvbGl0YSwgdG9vLiBUb25zIG9mIGZyZWUgZHJpbmtzIGZyb20gYm90aCBtZW4gYW5kIHdvbWVuIGFuZCB0aGUgYmFyIHRlbmRlci4gVGhhdCBtYXkgYmUgbXkgbmV3IGZhdm9yaXRlIHBsYWNlIHRvIGRyZXNzIHVwIGZvciBub3cgbG9sCk1vc3Qgc2lnbmlmaWNhbnRseSwgUGF0aGZpbmRlciBoYXMgdGhlIGJlc3QgcGVyc29uYWxpdHkgaW4gdGhlIGdhbWUuIEhlJ3MgYSByb2JvdCwgYnV0IGV2ZXJ5dGhpbmcgaXMgaW5jcmVkaWJseSBmdW4gZm9yIGhpbS4gCllvdXIgZGFkIHNvdW5kcyBsaWtlIGEgZ3JlYXQgbWFuLCBzb3JyeSBmb3IgeW91ciBsb3NzLgpGYXN0IGZvcndhcmQgdG8gbm93LiBCb29tZXJzIGFyZSBzdGlsbCBpbiBwb3dlciBib3RoIHBvbGl0aWNhbGx5IGFuZCBpbiB0aGUgcHJpdmF0ZSBzZWN0b3IuIApXZSByZW50ZWQgb3V0IHRoZSBzbWFsbGVzdCByb29tICh3aW5lIGNlbGxhcikgYW5kIGl0IHdhcyBwZXJmZWN0IGZvciBvdXIgcGFydHkgb2YgMTIuIFdlIGV4cGxhaW5lZCB0byB0aGVtIHRoYXQgaXQgd2FzbiBhIHR5cGljYWwgd2VkZGluZyBwYXJ0eSwgYnV0IHRoYXQgd2Ugc3RpbGwgd2FudGVkIGEgc3BlY2lhbCBleHBlcmllbmNlIGFuZCB0aGV5IHdlcmUgbW9yZSB0aGFuIGhhcHB5IHRvIGFjY29tbW9kYXRlLiAKVGhleSBhcmUgdGhlIHdpbm5lciBvZiB0aGF0IHJvdW5kLCBhbmQgaWYgeW91J3JlIG9ubHkgcGxheWluZyBvbmUgcm91bmQgdGhlbiB0aGV5IGFyZSB0aGUgd2lubmVyIG9mIHRoZSBnYW1lLiAKU28gd2hhdCBpcyBhIFN3ZWRpc2ggTWFzc2FnZT8gVGhlU3dlZGlzaCBNYXNzYWdlIGhhcyBiZWVuIGFyb3VuZCBmb3IgYSBsb25nIHRpbWUuIEl0IHdhcyBmaXJzdCBjcmVhdGVkIGJhY2sgaW4gMTgxMiBpbiB0aGUgVW5pdmVyc2l0eSBvZiBTdG9ja2hvbG0gYnkgYSBwaHlzaW9sb2dpc3QgbmFtZWQgSGVucmkgUGV0ZXIgTGluZy4gCk5vdyBjb3VudCBoZWFsdGggY2FyZSwgZm9vZCwgdHJhdmVsIChldmVuIGlmIGl0J3MgYnkgYnVzKSwgY2VsbCBwaG9uZS4gCkkgc2VtaSBleHRyZW1lbHkgdXBzZXQgYWJvdXQgYWxsIG9mIHRoaXMgYW5kIG5vdyBJIGNyaWVkIGFib3V0IGl0LiAKSXQgY2FuIGJlIGhhcmQgdG8gZGVjaWRlIHdoaWNoIGlzIHRoZSBiZXN0IFBva2VyIFRhYmxlIEZlbHRzIHNpbmNlIHRoZXJlIGFyZSBzbyBtYW55IG9wdGlvbnMgb3V0IHRoZXJlLiBZb3UgaGF2ZSBhIGxvdCB0byB0YWtlIGludG8gY29uc2lkZXJhdGlvbiB3aGVuIG1ha2luZyBhIHB1cmNoYXNlIHN1Y2ggYXMgdGhlIGNvbG9yLCB0aGUgZGVzaWducywgYW5kIHRoZSBwcmljZS4gRXZlbiB0aG91Z2ggd2UgY2FuJ3QgbWFrZSB0aGUgZGVjaXNpb24gZm9yIHlvdSwgd2UgY2FuIGF0IGxlYXN0IGhlbHAgeW91IGFsb25nIGJ5IHByb3ZpZGluZyB5b3Ugd2l0aCBzb21lIGhlbHBmdWwgdGlwcyB0aGF0IHlvdSBjYW4gdGFrZSBpbnRvIGNvbnNpZGVyYXRpb24uLiAKTXIuIE1hc29uIGlzIHN0aWxsIGluIGNvbnRhY3Qgd2l0aCBNci4gCkJ1dCBpZiB5b3UgaGF2ZSBhIHBob25lIHRoYXQgY2FuIHJ1biBpdCB0aGVuIHRoZXJlIG5vIHJlYXNvbiBub3QgdG8gcGxheS4gSSBiZWVuIHBsYXlpbmcgYSBmZXcgbWludXRlcyBhIGRheSBmb3IgYWJvdXQgMiBtb250aHMgYW5kIEkgYWJvdXQgNDMwIGNoYXB0ZXJzIGluLiBJIGVuam95aW5nIHRoZSBnYW1lLCBpdCB3YXMgcHJldHR5IHRlZGlvdXMgZm9yIGEgd2hpbGUgYnV0IGFmdGVyIGl0IGZpbmFsbHkgY2xpY2tlZCBmb3IgbWUgSSBub3cgbG9vayBmb3J3YXJkIHRvIHBsYXlpbmcuIEkganVzdCBwbGF5aW5nIHRoZSBzdG9yeSBiZWNhdXNlIHRoYXQgYWxsIEkgaW50ZXJlc3RlZCBpbiBhbmQgSSBoYXZlbiBoYWQgdG8gc3BlbmQgYSBkaW1lLgpVc2UgYSBzb2Z0IHRvd2VsIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdXIgZmFjZSBpcyBkcnkgYmVmb3JlIHJpbW1pbmcgdGhlIHNpZGVidXJucy4gCkJ1dCB0aGF0cyBub3QgdGhlIGNhc2UuIEl0cyBqdXN0IGxpa2UgYW55IG90aGVyIHBva2VyIHNpdGUuIApNZWRpdGF0aW5nIGZvciAxMCBtaW51dGVzICh3aGlsZSBjaGVja2luZyB5b3VyIHBob25lIGhhbGZ3YXkgdGhyb3VnaCkgYW5kIHBvc3RpbmcgbWVtZXMgb2YgcXVvdGVzIGJ5IHRoZSBCdWRkaGEgKHByb2JhYmx5IG91dCBvZiBjb250ZXh0IGFuZCBub3QgZXZlbiBjb250ZW1wbGF0ZWQgYnkgdGhlIHBvc3RlcikKSXQgdGFrZXMgYSBMT1Qgb2Ygc3RyZW5ndGgsIG1vcmFsIGNvdXJhZ2UsIGJyYXZlcnkgYW5kIGxvdmUgdG8gYnJpbmcgaHVydCBjaGlsZHJlbiBpbnRvIHlvdXIgaG9tZSBhbmQgcmFpc2UgdGhlbS4gSXQncyBhbWF6aW5nLiBZb3Ugc2hvdWxkIGJlIHByb3VkIG9mIHlvdXJzZWxmLgpJbiBkaWdpdGFsIHNwZWFrLCBpdCBjYW4gc2ltcGx5IGJlICJvZmYiLiAKRXNwZWNpYWxseSBQU1dzIE1lZ2hhbiwgTWFsbG9yeSBhbmQgU2hlbWFlIGZvciBiZWluZyAiUGhpbHN5J3MgQW5nZWxzIi4gClRoZXJlIGFyZSBodW5kcmVkcyBpZiBub3QgdGhvdXNhbmRzIG9mIHBva2VycyBzaXRlcyBvdXQgdGhlcmUgdHJ5aW5nIHRvIHZ5ZSBmb3IgeW91ciBhdHRlbnRpb24uIEkgaGF2ZSBiZWVuIGEgbG9uZyB0aW1lIHBva2VyIHBsYXllciBhbmQgdGhvdWdoIEkgYW0gbm8gcG9rZXIgc3VwZXJzdGFyIEkgaGF2ZSBiZWVuIHBsYXlpbmcgcG9rZXIgZm9yIHllYXJzLiBTbyB0aGlzIHJldmlldyBpcyBiYXNlZCBvbiBteSBleHBlcmllbmNlLiAKSXQgd2FzIHRoZSBvbmx5IHRpbWUgV2FybmUgd291bGQgYWdyZWUgdG8gc3BlYWsgdG8gVGhlIFN1bmRheSBBZ2UgYnV0IGhlIHN0aWxsIHJlZnVzZWQgdG8gYW5zd2VyIGRldGFpbGVkIHF1ZXN0aW9ucyBhYm91dCB0aGUgZm91bmRhdGlvbiBmaW5hbmNlcyBvciBwcm92aWRlIHRoZSBmdWxsIHNldCBvZiBhbm51YWwgcmVwb3J0cy4gClNjb290LCBhIGxvdyBidWRnZXQgYWlybGluZSxoYXMgYSB3aWxkIGxpdmVyeSBvZiBzdHJpa2luZyB5ZWxsb3cgYW5kIHdoaXRlLCBhbmQgaXQgcmVhbGx5IGNhdGNoZXMgdGhlIGV5ZS4gClJlYWRpbmcgYWJvdXQgTGFkeSBHYWdhIGluIG15IGxvY2FsIGZyZW5jaCBsYW5ndWFnZSBwYXBlciwgSSBhc3N1bWVkIEkgaGFkIG1pc3VuZGVyc3Rvb2QgdGhlIGFydGljbGUgKG15IGZyZW5jaCBpcyBzbyBiYWQgdGhpcyBpcyBhbHdheXMgYSBnb29kIHBvc3NpYmlsaXR5KS4gc2FpZCBMYWR5IEdhZ2Egd2FzIGNlbGliYXRlLCBidXQgSSB0aG91Z2h0IG1heWJlIHRoZXkgd2VyZSBzYXlpbmcgInNpbmdsZS4iIHRoZXJlIGl0IGlzIGluIHRoZSBlbmdsaXNoIGxhbmd1YWdlIG5ld3MgYXMgd2VsbC4gaXMgZ2FnYSBmb3IgY2VsaWJhY3kuCkd3bnkgcHJvamVrdGFudCBncnkgSGlkZW8gS29qaW1hIHcgZHJ1Z2llai4gCkkgaGF2ZSBhIGNsb2NrIHRoYXQgcHJvamVjdHMgdGhlIHRpbWUgb24gbXkgY2VpbGluZyBpbiB0aGUgZGFyayB0aGF0IEkgYm91Z2h0IHdoZW4gSSBsaXZlZCB3aXRoIG15IGNvdXNpbnMuIFRoZXkgYm90aCB3ZWFyIGdsYXNzZXMgYWxtb3N0IDI0LzcuIEkgd2FzIGV4Y2l0ZWQgYWJvdXQgaXQgYnV0IG9uZSBvZiB0aGVtIGdhdmUgbWUgYSBmdW5ueSBsb29rIGFuZCBkaWRuIHNheSBhbnl0aGluZyBhYm91dCBpdC4KVW52ZWlsaW5nIHRoZSBkaXNwbGF5IGluIHRoZSBkaW5pbmcgcm9vbSBvZiB0aGUgY2FyLCBBbGxpZSBDb3BwaW4gc2FpZCB0aGV5IGFyZSBleGNpdGVkIHRvIHBhc3MgdGhpcyBhZGRlZCBwaWVjZSBvZiBoaXN0b3J5IHRvIGZ1dHVyZSBnZW5lcmF0aW9ucyBqdXN0IGxpa2UgaXQgaGFkIGJlZW4gaW4gdGhlaXIgZmFtaWx5LgpBbHNvIHRoZXJlIGFyZSBubyBjaGVja3Mgb24gaGltLiAKSSdtIHRhbGtpbmcgYWJvdXQgYSBnYW1ibGUgb2YgdGhlIGZpZ2h0IHBvdGVudGlhbGx5IG5vdCBkb2luZyB3ZWxsIGJlY2F1c2Ugb2YgRnJvY2ggaGF2aW5nIGJlZW4gb3V0IG9mIHRoZSBzcG9ydCBmb3Igc28gbG9uZy4uIApCdXQgdGhlIGF0bW9zcGhlcmUgb2YgdGhlIGdhbWUgZGlmZmVycyBkZXBlbmRpbmcgb24gd2hvbSBvbmUgaXMgcGxheWluZyBvciBob3cgbXVjaCBtb25leSBpcyBpbnZvbHZlZCwgZmVlbCByZWd1bGFyIHBva2VyIHBsYXllcnMuLiAKU2hlIGFsc28gZ3JldyB1cCBvbiB0aGUgc291bmRzIG9mIFJlYmEgTWNFbnRpcmUsIEdhcnRoIEJyb29rcyBhbmQgVGltIE1jR3JhdyBhbmQgY2FuIGJlIGZvdW5kIHRyYXZlcnNpbmcgdGhlIGNvdW50cnlzaWRlIGluIHNlYXJjaCBvZiB0aGUgc291bmRzIG9mIGEgc3RlZWwgZ3VpdGFyLiAKV2hlbiB0cmFkaW5nIGVuZGVkLCB3ZSBzeXN0ZW1hdGljYWxseSBjb21wYXJlZCBlYWNoIHRyYWRlcidzIGFuYWx5dGljYWwgc2tpbGxzIGFuZCBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlLCBtZWFzdXJlZCBiZWZvcmUgdHJhZGluZywgd2l0aCB0aGVpciBldmVudHVhbCBlYXJuaW5ncy4gQSBjbGVhciBwYXR0ZXJuIGVtZXJnZWQ6IERlc3BpdGUgaW50ZW5zZSBjb21wZXRpdGlvbiwgc29tZSB0cmFkZXJzIHRvb2sgaG9tZSBtdWNoIG1vcmUgdGhhbiBvdGhlcnMuIENvbXBhcmluZyB0cmFkZXJzIHdpdGggc2ltaWxhciBhbmFseXRpYyBza2lsbHMsIHdlIGZvdW5kIHRoYXQgc3RyYXRlZ2ljIGludGVsbGlnZW5jZSB3YXMgYSBzdHJvbmcgcHJlZGljdG9yIG9mIGVhcm5pbmdzLiBGb3IgaW5zdGFuY2UsIHRob3NlIHdpdGggYXZlcmFnZSBhbmFseXRpYyBza2lsbHMgYW5kIGJlbG93IGF2ZXJhZ2Ugc3RyYXRlZ2ljIGludGVsbGlnZW5jZSBlYXJuZWQgMjUlIGJlbG93IGF2ZXJhZ2UuIEJ1dCB0cmFkZXJzIHdpdGggaWRlbnRpY2FsIGFuYWx5dGljIHNraWxscyBidXQgYWJvdmUgYXZlcmFnZSBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlIHNjb3JlZCAyNSUgYWJvdmUgYXZlcmFnZSAgIGEgNTAlIGRpZmZlcmVuY2UgaW4gcGVyZm9ybWFuY2UuIEFuZCBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlIG1hZGUgYWxsIHRoZSBkaWZmZXJlbmNlIGFtb25nIHRvcCBwZXJmb3JtZXJzOiBUaG9zZSB3aXRoIGdvb2QgYW5hbHl0aWNhbCBza2lsbHMgYW5kIGV4Y2VsbGVudCBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlIHBlcmZvcm1lZCBhYm91dCA3NSUgYmV0dGVyIHRoYW4gdGhvc2Ugd2l0aCBlcXVhbGx5IGdvb2QgYW5hbHl0aWNhbCBza2lsbHMgYnV0IHBvb3Igc3RyYXRlZ2ljIGludGVsbGlnZW5jZS4KT2JzZXJ2aW5nIHlvdXIgb3Bwb25lbnRzIGNhcmVmdWxseSBpcyBhbHNvIHZlcnkgaW1wb3J0YW50LiBJdCBpcyB0b28gZWFzeSB0byBnZXQgd3JhcHBlZCB1cCBpbiB5b3VyIG93biBnYW1lIGFuZCBtaXNzIHRoZSAidGVsbHMiIHRoZSBvdGhlciBwbGF5ZXJzIG1pZ2h0IGJlIGV4aGliaXRpbmcuIEtub3dpbmcgaWYgdGhleSBiZXQgYWdncmVzc2l2ZWx5IG9yIGdvIGF0IGl0IHVzdWFsbHkgd2l0aCBzdHJvbmcgaGFuZHMgZW1wb3dlcnMgeW91IGFuZCB5b3VyIGJldHRpbmcgZGVjaXNpb25zLgpXaXRoIHlldCBhbm90aGVyIHJhaW4gYnJlYWsgaGF2aW5nIGFubnVsbGVkIGFueSBob3BlcyBvZiBhIHJlc3VsdCBpbiB0aGUgQ291bnR5IENoYW1waW9uc2hpcCBtYXRjaCBiZXR3ZWVuIFlvcmtzaGlyZSBhbmQgU3Vzc2V4IGF0IEhlYWRpbmdsZXkgaW4gMjAwNywgdGhlIG9ubHkgZ2FtZSBpbiB0b3duIGZvciB0aGUgaG9tZSBzaWRlIHdhcyBpbmNyZWFzaW5nIHRoZWlyIG92ZXIgcmF0ZSB0byBhdm9pZCBhIHBvaW50cyBkZWR1Y3Rpb24uIFdpc2RlbiByZXBvcnRzIHRoYXQgInRoZSBnYW1lIGRlc2NlbmRlZCBpbnRvIGZhcmNlIiBhcyBZb3Jrc2hpcmUgcnVzaGVkIHRocm91Z2ggNS4yIG92ZXJzIGluIGVpZ2h0IG1pbnV0ZXMsIHdpdGggb3ZlcnNlYXMgcGxheWVyIFlvdW51cyBLaGFuIGdldHRpbmcgdGhyb3VnaCBhIHF1aWNrZmlyZSBmb3VyIG92ZXJzICAgb25lIG9mIHRoZW0gY29tcGxldGVkIGluIGEgcmVjb3JkIDM1IHNlY29uZHMuIFdoaWNoLCByYXRoZXIgc3VycHJpc2luZ2x5LCBtYWtlcyBZb3VudXMgS2hhbiB0aGUgZmFzdGVzdCBib3dsZXIgaW4gdGhlIGhpc3Rvcnkgb2YgY3JpY2tldC4uIApOb3cgSSdtIHRyeWluZyB0byBnZXQgc2xlZXB5IHdoaWxlIHdhdGNoaW5nIEZMT1dFUiBEUlVNIFNPTkcuIEhhcyBOYW5jeSBLd2FuIChmcm9tIHRoZSBvbGQgUGVhcmwgQ3JlYW0gYWRzKSBzYW5nICJJIEVuam95IEJlaW5nIGEgR2lybCIgeWV0PyBJJ20gc3VyZSBJJ2xsIGJlIGFzbGVlcCB2ZXJ5IHNvb24gb24gdGhpcyBNb25kYXksIEFwcmlsIDI4dGgsIDIwMDMuLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0hpcyBmb2xsb3cgdXAgc3RhdGVtZW50cyByZWFsbHkgcnViYmVkIG1lIHRoZSB3cm9uZyB3YXkuIFlvdSBzdGFydCB0aGlzIHdob2xlIHRoaW5nIG9mZiB1bmRlciB0aGUgZ3Vpc2Ugb2YgY3JpdGljYWxseSBleGFtaW5pbmcgdGhlIHNlcHB1a3UgbWVjaGFuaWMgYXMgYmVpbmcgaGlzdG9yaWNhbGx5IGluYWNjdXJhdGUgYW5kIGluc2Vuc2l0aXZlIHRvIGNvbnRlbXBvcmFyeSBpc3N1ZXMgb2Ygc3VpY2lkZS5JbiB0aGUgcHJvY2VzcyB5b3UgYmFzaWNhbGx5IHNheWluZyB0aGF0IHRoZSBSaXNpbmcgU3VuIGRlc2lnbmVycyBhcmUgZWl0aGVyIGluY29tcGV0ZW50IG9yIGluc2Vuc2l0aXZlLldoYXQgSSB0aG91Z2h0IHdhcyBhIHNlcmllcyBvZiB2ZXJ5IGludGVyZXN0aW5nIGRpc2N1c3Npb25zIHRha2UgcGxhY2UgaW4gdGhpcyB0aHJlYWQuIApJbSBzdGlsbCBpbiBoZXIgZ3VpbGQgdGhhdCBzaGUgZm9ybWVkIGEgZGVjYWRlIGFnbywgaW0gdGhlIEdNIG5vdyBzaW5jZSBubyBvbmUgaGFzIGxvZ2dlZCBvbiBmb3IgeWVhcnMuIEkgZG9udCBraWNrIGFueSBvbmUgb3IgaW52aXRlIGFueW9uZSwgaSBrZWVwIGV2ZXJ5dGhpbmcgdGhlIHNhbWUgYW5kIGkgc3RpbGwgY2hlY2sgb2NjYXNpb25hbGx5IHRvIHNlZSBpZiBzaGUgbG9nZ2VkIG9uIHRocm91Z2ggdGhlIGd1aWxkIHBhbmVsLiAKTWVlc2Vla3N5b3VydGl0cyAgMjEgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KUHV0aW4gdGFsayByZXByZXNlbnRzIHRoZSBwcm9ibGVtLCBub3QgdGhlIHNvbHV0aW9uLiBSdXNzaWEgd2FycyBpbiB0aGUgQ2F1Y2FzdXMgaGF2ZSBjcmVhdGVkIGEgZ2VuZXJhdGlvbiBvZiB5b3VuZyBwZW9wbGUgd2hvIGxpdmUgd2l0aCB0aGUgZWZmZWN0cyBvZiB2aW9sZW5jZSBpbiB0aGVpciBsYW5kLiAKQmlnZ2VzdCBxdWVzdGlvbnMgZnJvbSBtZSBhcmUsIHdhcyB0aGF0IGFjdHVhbGx5IGNyZWRlbmNlIHdobyBMZXRhIHN3aXRjaGVkIGhlciBsaWwgMS8yIGJybyB3aXRoIG9uIHRoZSBib2F0LiBJZiBpdCB3YXMgICB3aG8gd2FzIHRoZSBEdW1ibGVkb3JlIGZhbWlseSBtZW1iZXIgdHJhdmVsaW5nIHdpdGggYSBiYWJ5IHRvIHRoZSBVU0EgYW5kIGZvciB3aGF0IHJlYXNvbi4KWW91IG5lZWQgdG8gY29tZSB0byB0aGUgY29uZmVyZW5jZSByb29tLiBZb3UgYXJlIGdvaW5nIHRvIGxvdmUgd2hhdCB0aGUgaGVucyBkaWQuIiBBcyBzaGUgcm91bmRzIHRoZSBjb3JuZXIgdGhyb3VnaCBTYW0gZG9vciwgTW9sbHkgc3RvcHMsIHNoZSBzY3JlYW1zLCBydW5uaW5nIG92ZXIgdG8gU2FtLiAKQ29ubmVjdCBpdCBhcyB5b3Ugd291bGQgaWYgeW91IHdlcmUgZ29pbmcgdG8gdXNlIGl0IGV4Y2VwdCBwdXQgYSBzbWFydCBzd2l0Y2ggb24gdGhlIHBvd2VyLiAKIklmIGhlIGhhZCBzZWNyZXRseSBnYWluZWQgYWNjZXNzIHRvIHRoZSBzaG9lIG9mIGNhcmRzIGFuZCBwZXJzb25hbGx5IHJlYXJyYW5nZWQgdGhlbSB0aGF0IHdvdWxkIGJlIGNvbnNpZGVyZWQgY2hlYXRpbmcuCklzIGEgbG9uZyBhbmQgY29tcGxpY2F0ZWQgaGlzdG9yeSB0byB0aGUgV2hpdGUgUGFwZXIgYnV0IHN1ZmZpY2UgdG8gc2F5IHRoYXQgd2hpbGUgbWlsbGlvbnMgb2YgSmV3cyB3ZXJlIGJlaW5nIHNsYXVnaHRlcmVkIGluIEV1cm9wZSB0aGUgcmVzdHJpY3RpdmUgV2hpdGUgUGFwZXIgcmVtYWluZWQgaW4gcGxhY2UsIHdoaWNoIG1lYW50IHRoYXQgdGhlIGhhdmVuIGZvciBlc2NhcGUgdG8gUGFsZXN0aW5lIHdhcyBsYXJnZWx5IGNsb3NlZCByZWxhdGl2ZSB0byB0aGUgbnVtYmVycyBvZiBwZW9wbGUgbmVlZGluZyB0byBiZSBzYXZlZCwgYW5kIHRoYXQgYXQgdGhlIGVuZCBvZiB0aGUgd2FyIHRoZXJlIHdlcmUgc3RpbGwgMzAwMCsgdmlzYXMgdGhhdCBoYWRuIHlldCBiZWVuIGdyYW50ZWQuIEdvbGRzdGVpbiBtYWtlcyB0aGUgY2FzZSBmb3IgdGhlIGV4dHJlbWUgcGVyaXBoZXJhbCB1c2VmdWxuZXNzIG9mIHRoZSBQYXBlciBpbiAxOTM5LCBidXQgaW4gMTk0NCB3aGVuIHRoZSBBeGlzIGluZmx1ZW5jZSBpbiB0aGUgTWlkZGxlIEVhc3Qgd2FzIG1pbm9yIGFkaGVyaW5nIHRvIHRoZSB3aGl0ZSBQYXBlciB3YXMgYSB0cmFnZWR5OiAiaWYgdGhlIFdoaXRlIFBhcGVyIHdhcyB1bndpc2UgYW5kIHVud29ydGh5IHRoZW4sIGl0IGlzIG1vcmUgc2hhbWVmdWwgYW5kIGJhc2VsZXNzIG5vdyIzLi4gCkJlY2F1c2UsIGFmdGVyIGFsbCwgaXQgbm90IGxpa2UgeW91IGV2ZXIgbmVlZCB0aGUgZHJlc3MgYWdhaW4gcmlnaHQ/IEJlY2F1c2UgeW91IGFyZSBtYXJyaWVkIGZvcmV2ZXIgYW5kIGV2ZXIsIGFuZCB5b3UganVzdCBsb3ZlIGVhY2ggb3RoZXIgc28gbXVjaC4gTW9yZSB0aGFuIGFueW9uZSBpbiBoaXN0b3J5IG9mIHRpbWUgaGFzIGV2ZXIgbG92ZWQgYW5vdGhlciBwZXJzb24gIGFuZCB0aGF0cyBob3cgSSBjYXB0aW9uIHRoZSBwaG90b3Mgd2hlbiBpIHBsYXN0ZXJlZCB0aGVtIGFsbCBvdmVyIGZhY2Vib29rLgpJbiBBcHJpbCwgSSBvYnNlcnZlZCBteSBncmFuZGZhdGhlcidzIGZpcnN0IGRlYXRoIGFubml2ZXJzYXJ5LiBEYWFkYSBtb3ZlZCB0byBIeWRlcmJhYmFkLCBTaW5kaCwgZnJvbSBCdWxhbmQgU2hlaHIsIFV0dGFyIFBhcmRlc2gsIGluIEF1Z3VzdCAxOTQ3LiBNeSBmYXRoZXIgZ3JldyB1cCBpbiB0aGUgaGVhcnQgb2YgSHlkZXJhYmFkLCBpbiBhcyBpZHlsbGljIGEgY2hpbGRob29kIGFzIEkndmUgZXZlciBoYWQgZGVzY3JpYmVkIHRvIG1lLiAKVGhlIG90aGVyIGhhbmQsIFRDTSBmYXZvcnMgYSBob2xpc3RpYyBhcHByb2FjaCwgdmlld3MgdGhlIHVuaXZlcnNlIGFuZCBib2R5IHBoaWxvc29waGljYWxseSBhbmQgZGV2ZWxvcHMgaW5kdWN0aXZlIHRvb2xzIGFuZCBtZXRob2RzIHRvIGd1aWRlIHJlc3RvcmluZyB0aGUgdG90YWwgYmFsYW5jZSBvZiB0aGUgYm9keS4gSW4gQ2hpbmVzZSBtZWRpY2luZSwgdGhleSBhZGQsIGNvcnJlY3QgYmFsYW5jZSBiZXR3ZWVuIFlpbiBhbmQgWWFuZyBtYWtlIHVwIHRoZSB2aXRhbCBlbmVyZ3ksIGFuIGVzc2VudGlhbCBsaWZlIHN1c3RhaW5pbmcgc3Vic3RhbmNlIG9mIHdoaWNoIGFsbCB0aGluZ3MgYXJlIG1hZGUuIFRyYWRpdGlvbmFsIHJlbWVkaWVzIGluY2x1ZGUgaGVyYmFsIG1lZGljaW5lcywgYWN1cHVuY3R1cmUsIG1hc3NhZ2UgYW5kIG1veGlidXN0aW9uLCBhbiBoZXJiYWwgaGVhdCB0aGVyYXB5LiAKSSBmb3VuZCA0IHBhdmVyIHN0b25lcyB1bmRlciBtb3JlIHBpbmUgc3RyYXcuIEp1c3QgdGhlIG90aGVyIGRheSwgd2hlbiBJIHJldHJpZXZlZCB0aGUgaGFuZ2luZyBwbGFudCBob2xkZXIsIEkgd2Fsa2VkIGJhY2sgaW50byBhbiBhcmVhIEkgbmV2ZXIgZXZlbiB3YWxrZWQgaW50byBiZWZvcmUuIApDb21wYW5pZXMgdG8gZW50ZXIgaW50byBqb2ludCB2ZW50dXJlcyB3aXRoIENoaW5lc2UgY29tcGFuaWVzIHRvIGdldCBpbnRvIHRoZWlyIG1hcmtldHMsIHRocm91Z2ggd2hpY2ggdGhleSBhbHNvIHN0ZWFsIElQLiAKSW4gdGhlIDk4MHMgYW5kIDk5MHMsIG1hbnkgb2YgaGlzIGFkdmlzb3JzLCBpbmhlcml0ZWQgZnJvbSB0aGUgcmVpZ24gb2YgRWRnYXIsIGRpZWQsIGluY2x1ZGluZyBEdW5zdGFuLiBUaGVscmVkIHJlcGxhY2VkIG1hbnkgb2YgdGhlc2UgbWVuIGJ5IG1lbiB3aG8gd291bGQgcHJvdmUgdG8gYmUgdHJhaXRvcnM7IGEgZ3JlYXQgZXhhbXBsZSBpcyBFYWxkb3JtYW4gTGVvZnNpZ2UsIHdobyBpbiAxMDAyIGtpbGxlZCBmaWMsIHRoZSBLaW5nJ3MgSGlnaCBSZWV2ZTQuIApIZSBzYWlkIHNoZSBzcG9rZSBhYm91dCBoZXIgZm91bmRhdGlvbiwgImFuZCBJIHRob3VnaHQsICdXb3csJyB0aGF0J3MgZXhhY3RseSB3aGF0IHdlIHdhbnQgYXQgdGhlIFN0ZWVsU3RhY2tzICAgYSBtdXNpYyBwYXZpbGlvbiB0aGF0IHByb3ZpZGVzIGxpdmUsIGZyZWUsIGZhbWlseSBmcmllbmRseSBjb25jZXJ0cyBmb3IgYXQgbGVhc3QgMTUgbmlnaHRzIGEgeWVhci4iClVwY29taW5nIGRhdGVzIGluY2x1ZGUgU3QuIFZyYWluIENpZGVyeSwgMzUwIFRlcnJ5IFN0LiwgTG9uZ21vbnQuLiAKSSBmZWVsIHNvIGRpc2d1c3RlZCBhbmQgSSBoYXZlIHRvIHByZXRlbmQgdGhpcyBuZXZlciBoYXBwZW5lZCBiZWNhdXNlIEkgZW1iYXJyYXNzZWQgSSB3ZW50IHRvIHRoZW0gY2hlYXAgQXNpYW4gbWFzc2FnZSBwbGFjZXMuIEkgbGl2ZSB3aXRoIG15IHVuY2xlIGFuZCBJIGp1c3QgY2FuIGV2ZW4gbG9vayBhdCBoaW0gYXMgaGUgaXMgYSBtYW4uIEkgZmVlbCB2ZXJ5IHZlcnkgZGlydHkgYW5kIEkganVzdCB0aGluayBob3cgZGFyZSBzb21lb25lIGRvIHRoYXQgdG8gbWUgYnV0IGF0IHRoZSBzYW1lIHRpbWUgd2h5IHdvdWxkIEkgcHV0IG15c2VsZiBpbiB0aGF0IHBvc2l0aW9uIHBsdXMgaXQgd2FzIG92ZXIgdGhlIHRvd2VsLiAKSWwgeSBhIHF1ZWxxdWVzIGpvdXJzLCBqZSBtZSBzdWlzIGRpdCBxdWUgY2VsYSBuZSBwb3V2YWl0IHBsdXMgZHVyZXIgZXQgaid0YWlzIGltcGF0aWVudGUgZGUgcHJwYXJlciB1biBwb3VsZXQgdGFuZG9vcmkuIApMb3Qgb2YgdGhlIHByZXNzIGNvdmVyYWdlIGFib3V0IHRoZSBkZWNpc2lvbiBvbiBTeXJpYSBtaXNzZWQgd2hhdCB0aGUgcHJlc2lkZW50IGhhZCBpbiBtaW5kLCBCb2x0b24gaW5zaXN0ZWQgaW4gSmVydXNhbGVtIHRoaXMgbW9udGgsIG92ZXJsb29raW5nIHRoZSBmYWN0IHRoYXQgbWFueSBvZiBUcnVtcCBvd24gYWlkZXMgd2VyZSBhbHNvIGluIHRoZSBkYXJrLiBIaXMgcm9sZSwgQm9sdG9uIHNhaWQsIHRvIGhlbHAgZWxhYm9yYXRlIHdoYXQgdGhlIHByZXNpZGVudCBjb25kaXRpb25zIGFyZSBhbmQgd2hhdCBoZSBleHBlY3RzLiBBbmQgVHJ1bXAgaGF2ZSBoYXJzaGx5IHB1c2hlZCBiYWNrIG9uIGFueSBub3Rpb24gb2YgYSBwb2xpY3kgcmV2ZXJzYWwuIApZZXMgeW91IGNhbi4gWW91IGNhbiBjaG9vc2UgdG8gY3V0IHRoZSBjYXJkcyBvciB0byBub3QgY3V0IHRoZSBjYXJkcyBiZWZvcmUgZGVhbGluZy4gTW9zdCBvZiB0aGUgdGltZXMgY3V0dGluZyB0aGUgY2FyZHMgaXMgYSBjb3VydGVzeSByYXRoZXIgdGhhbiBhbiAiYW50aSBjaGVhdCIgbW92ZS4gSXQgaXMgYm90aCBmb3IgdGhlIGRlYWxlciwgcGxheWVycyBhbmQgdGhlIGdhbWUgYmV0dGVyIHRvIGN1dCB0aGUgY2FyZHMgd2hlbiBhc2tlZCB0byBkbyBzby4gKEZ1bGwgQW5zd2VyKQpVbml0ZWQgU3RhdGVzIERlcGFydG1lbnQgb2YgSnVzdGljZQpUaGUgdWsgaGFzIHRoaXMgbW9kZWwgKG5vIGNndCBvbiBmYW1pbHkgaG9tZSkgYW5kIGl0IHdvcmtzIHByZXR0eSB3ZWxsLiBSZWR1Y2VzIHRoZSByYW1wYW50IHNwZWN1bGF0aW9uIGJ5IGludmVzdG9ycyBidXQgYXZvaWRpbmcgaGFybSB0byBmYW1pbHkgaG9tZSBvd25lcnMKRnVja2luZy4gU3Vja3MuIEkgd29yayBzbyBoYXJkIHRvIG5vdCB0aGluayBvZiBteXNlbGYgYXMgYSBTaWNrIFBlcnNvbiwgYW5kIHRvZGF5IEkgaGF2ZSB0aHJvd24gdXAgc2V2ZXJhbCB0aW1lcyAoYnV0IGxlc3MgdGhhbiB5ZXN0ZXJkYXkhKSBhbmQgSSdtIGJ1bmRsZWQgdXAgaW4gYSBibGFua2V0IGJlY2F1c2UgdGhlIG1lZHMgYXJlIGdpdmluZyBtZSBpbnNhbmUgY2hpbGxzIGFuZCBJIGZlZWwgdmVyeSB2ZXJ5IG11Y2ggbGlrZSBhIFNpY2sgUGVyc29uLi4gCkluIGFkZGl0aW9uIHRvIHRoZSBmb3VyIHN0ZXBzLCB0aGUgc2NpZW50aXN0IG5lZWRzIHRvIGFuYWx5c2UgdGhlIHByZWRpY3Rpb24sIHRoZSBleHBlcmltZW50IGFuZCB0aGUgcmVzdWx0cyB0byBlbnN1cmUgdGhhdCB0aGV5IGZ1bGZpbCBjZXJ0YWluIHJlcXVpcmVtZW50cywgc29tZSBvZiB3aGljaCBhcmUgZXhwbGFpbmVkIGxhdGVyIGluIHRoaXMgZW50cnkuIElmIHRoZSB1c2Ugb2YgdGhlIG1ldGhvZCBpcyBhY2NlcHRhYmxlLCBhIGRlY2lzaW9uIGNhbiBiZSBtYWRlLiBJbiB0aGUgYWJvdmUgZXhhbXBsZSwgdGhlIGV4cGVyaW1lbnRzIHNob3dlZCB0aGF0IG9mIHRoZSB0aGluZ3MgYXZhaWxhYmxlIGZvciB0ZXN0aW5nIG5vdCBhIHNpbmdsZSBvbmUgZmFpbGVkIHRvIGZhbGwgd2hlbiBub3Qgc3VwcG9ydGVkIGJ5IGFueXRoaW5nLCBzbyB0aGUgaHlwb3RoZXNpcyBpcyBwdWJsaXNoZWQgYXMgdGhlICdUaGVvcnkgb2YgVW5zdXBwb3J0ZWQgRmFsbGluZycsIGluY2x1ZGluZyBhIHJlY29yZCBvZiBwcmVkaWN0aW9ucyBhbmQgZXhwZXJpbWVudHMuCkRhdmUgRmlsZGVzLCBBbWF6b24ncyBkaXJlY3RvciBvZiBpbnZlc3RvciByZWxhdGlvbnMsIGRpZCBub3QgYWRkcmVzcyB0aGUgSU1EQiBzZXJ2aWNlLCBidXQgc2FpZCB0aGF0IFByaW1lIHdvdWxkIG5vdCBzaG93IGFkcy4gCkl0cyBhbGwgYWJvdXQgcHJhY3RpY2UuIEtub3dpbmcgcHJlZml4ZXMgYW5kIHN1ZmZpeGVzIGlzIGltcG9ydGFudCBidXQgSSBkaWRuIGZpbmQgZm9jdXNpbmcgb24gdGhvc2UgZHVyaW5nIHN0dWR5aW5nIHdlcmUgcGFydGljdWxhcmx5IGhlbHBmdWwuIEV4cG9zaW5nIHlvdXJzZWxmIHRvIGEgd2lkZSBhcnJheSBvZiB2b2NhYnVsYXJ5IHdvcmRzIGFuZCBtZW1vcml6aW5nIHRoZW0gd2FzIGZhciBtb3JlIGhlbHBmdWwuIApNeSBjb3dvcmtlciBob3cgZXZlciBoYXMgdG8gd29yayBmcm9tIHRoZSBvZmZpY2UgLCBoZSBzYXlzIGhlIG5lZWQgdG8gZ28gdG8gd29yayBzbyBoZSBjYW4gYWN0dWFsbHkgbGVhdmUgd29yay4gClRoZXNlIHBva2VyIHBsYXllcnMgYXJlIGNhbGxlZCAiU2hhcmtzIi4gClNtb2tlIGZyZWUgYW5kIG9wZW4gMjQgaG91cnMsIHRoZSBwb2tlciByb29tIGF0IEF0bGFudGlzIG9mZmVycyB0aGUgcmVnaW9uJ3MgYmVzdCBnYW1lcywgcHJvbW90aW9ucyBhbmQgdG91cm5hbWVudHMgaW4gYSBsdXh1cmlvdXMgQUFBIEZvdXIgRGlhbW9uZCByZXNvcnQuIFBsYXllcnMgYXJlIHN1cmUgdG8gZW5qb3kgYWN0aW9uIHBhY2tlZCBnYW1pbmcsIHRhYmxlc2lkZSBkaW5pbmcgYW5kIGEgc2VsZiBzZXJ2aWNlIGJldmVyYWdlIGJhci4gQW5kIGZvciBwbGF5ZXJzIHdobyBjYW4ndCBtaXNzIGEgbWludXRlIG9mIHRoZSBhY3Rpb24sIGZsYXQgc2NyZWVuIFRWcyBhcmUgdmlzaWJsZSBmcm9tIGV2ZXJ5IHNlYXQsIGFuZCBvbmx5IHN0ZXBzIGF3YXkgZnJvbSBBdGxhbnRpcycgd29ybGQgY2xhc3MgUmFjZSBTcG9ydHMgQm9vay4KTXkgcmVmbGVjdGlvbiBpbiB0aGUgYmF0aHJvb20gbWlycm9yIHdhcyBhbGwgd3JvbmcgaW4gc29tZSB1bnNldHRsaW5nIHdheSB0aGF0IEkgY291bGRuIHF1aXRlIHBsYWNlLiAKVGhleSBjYW4gc2F5IHdoYXQgdGhleSB3YW50LCBMb3dlIGFuZCBIb21lIERlcG90IGRvIG5vdCBoaXJlIHByb2Zlc3Npb25hbHMgYW5kIHRoZXkgaGF2ZW4gYSBjbHVlIHdoYXQgdGhleSB0YWxraW5nIGFib3V0Li4gCldlIHdhbmRlbGRlbiB2ZXJkZXIgYmVyZyBhZndhYXJ0cyBsYW5ncyBkZSBSb2RlIGtyZW1saW4gbXVyZW4sIG1ldCBhY2h0ZXIgb25zIGVlbiBlaWdlbmxpamsgbm9nIG1vb2llciB1aXR6aWNodCBvcCBkZSBrYXRoZWRyYWFsLiAKTW9zdCBldmVyeSB1bmxvY2spLllvdSBhYnNvbHV0ZWx5IHJpZ2h0LCB0aGVyZSBjZXJ0YWlubHkgbm8ganVkZ2VtZW50IGludm9sdmVkIGluIGNhbGxpbmcgc29tZXRoaW5nICJzdXBlcmlvciIuIApGcmFnbGljaCBlcnNjaGVpbnQgYWt0dWVsbCBhbGxlcmRpbmdzIG5vY2gsIG9iIEpvZSBUaG9ybnRvbiB2b24gZGVuIFNhbiBKb3NlIFNoYXJrcyBoaWVyZiBkaWUgcmljaHRpZ2UgV2FobCBmIGRpZSAnUGVucycgdyBTcG9ydGxpY2ggayBlciBkYXMgbSBMb2NoIGluIGRlciBNaXR0ZSBkZXIgZHJpdHRlbiBSZWloZSBkZXMgVGl0ZWx2ZXJ0ZWlkaWdlcnMgc2ljaGVybGljaCByZWxhdGl2IGxlaWNodCBzdG9wZmVuLCBzZWluZW4gVHJhdW0gdm9tIEdld2lubiBkZXMgZXJzdGVuIFN0YW5sZXkgQ3VwcyBzZWluZXIgbGFuZ2VuIEthcnJpZXJlIGhpZXIgc2NoaWVyIGlkZWFsIGZvcnRzZXR6ZW4uIERvY2ggc2VpbiBmb3J0Z2VzY2hyaXR0ZW5lcyBBbHRlciwgdm9uIGltbWVyaGluIDM3IEphaHJlbiwgayBzaWNoIGRhIGFscyBIaW5kZXJ1bmdzZ3J1bmQgZXJ3ZWlzZW4uIApNb3N0IGxpa2VseSB3aGF0IGhhcHBlbmVkIGlzIGEgcHJvcCBtYWtlciB3YXMgdGFza2VkIHdpdGggYXNzZW1ibGluZyB0aGlzIHNjcmFwIGJvb2sgZm9yIHRoZSBzZXF1ZW5jZS4gCkhlbmNlIHRoZSBzdXJwcmlzZSB3aGVuIGNob2tlZC4gCldoYXQgRG8gSSBOZWVkIHRvIEJlY29tZSBhIExpY2Vuc2VkIFJlZmxleG9sb2dpc3Q/ClZpbnRhZ2UgUHJvIFBTIEFjdGlvbiAuIFRoZXNlIFBTRCBhY3Rpb25zIGhlbHAgeW91IGJyaW5nIGEgbGl0dGxlIG9mIHRoYXQgdG95IGNhbWVyYSBtYWdpYyB0byAuIApJdCdzIHRoZSBhY3Rpb24gbW92aWUgZXF1aXZhbGVudCBvZiAiYnVzeSB3b3JrLiIgVW5saWtlIFdvbmRlciBXb21hbiAodGhlIG1vc3Qgb2J2aW91cyBwb2ludCBvZiBjb21wYXJpc29uKSwgd2hpY2ggb2ZmZXJlZCBhIHJpY2gsIHdlbGwgdGhvdWdodCBvdXQgYmFja3N0b3J5IGFuZCBhbiBpbnRlcmVzdGluZyBteXRob2xvZ3ksIENhcHRhaW4gTWFydmVsIHJlbGllcyBvbiBjb25mdXNpbmcgZXhwb3NpdGlvbiBhbmQgYSBzY2F0dGVyc2hvdCBtZXRob2Qgb2YgdW5pdmVyc2UgYnVpbGRpbmcgdGhhdCdzIG5vdCBhZGVxdWF0ZSB0byB0aGUgdGFzayBhdCBoYW5kLi4gClRhbWFndXRzICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCllvdSBnZXQgb3RoZXJzIHRoYXQgYXJlIGp1c3QgbG9va2luZyBmb3IgdGhhdCBsb2NrIGFuZCBsZWF2ZSBsaWZlc3R5bGUgd2hlcmUgdGhleSBjYW4gZ28gYW5kIHNwZW5kIHNpeCBtb250aHMgb2YgdGhlIHllYXIgZG93biBpbiB0aGUgZGVzZXJ0LiAKRnJvbSBDcmFpZyBVbmdlciBBTUE6ICJFYXJseSBvbiwgYSBzb3VyY2UgdG9sZCBtZSB0aGF0IGFsbCB0aGlzIHdhcyB0aWVkIHRvIFNlbWlvbiBNb2dpbGV2aWNoLCB0aGUgcG93ZXJmdWwgUnVzc2lhbiBtb2JzdGVyLiBJIGhhZCBuZXZlciBldmVuIGhlYXJkIG9mIGhpbSwgYnV0IEkgaW1tZWRpYXRlbHkgd2VudCB0byBhIGRhdGFiYXNlIHRoYXQgbGlzdGVkIHRoZSBvd25lcnMgb2YgYWxsIHByb3BlcnRpZXMgaW4gTlkgc3RhdGUgYW5kIGxvb2tlZCB1cCBhbGwgdGhlIFRydW1wIHByb3BlcnRpZXMuIApCYXJib3VyIHNhaWQgcHJvc3RpdHV0aW9uIGlzIG5vdCB0aGF0IGNvbW1vbiBpbiBGcmVkZXJpY2sgYnV0IHRoZSBpbXBldHVzIGJlaGluZCB0aGUgbmV3IGxhdyBzcHJhbmcgZnJvbSB0aGUgSnVseSBidXN0IG9mIHRoZSBJIFNwYSBtYXNzYWdlIHBhcmxvciBhdCAzNjUyIFJlbGlhbmNlIERyaXZlLCBuZWFyIENvbG8uIDUyIGFuZCBJbnRlcnN0YXRlIDI1LgpIZSB1bmRlcndlbnQgYSBzcGVjaWFsIHRyZWF0bWVudCwgbmV2ZXIgdXNlZCBiZWZvcmUuIEkgZm9yZ2V0IHdoYXQgaXQgd2FzIGNhbGxlZCwgYnV0IHNldmVyYWwgcGF0Y2hlcyB3ZXJlIHBsYWNlZCBpbnRvIGhpcyBoZWFkLCAyMi83LCB0aGF0IGdhdmUgb2ZmIGVsZWN0cmljaXR5IHRoYXQga2VwdCB0aGUgY2VsbHMgYXQgYmF5LCBrZWVwaW5nIHRoZW0gZnJvbSBhZHZhbmNpbmcgZnVydGhlci4gClRoYXQncyBjb25maWRlbmNlIGluIHByaWNpbmcuLiAKV2hlbiBpdCBjb21lcyB0byBnYW1lcywgU2Ftc3VuZyBoYXZlIHRoZWlyIGhhbmRzZXRzIHBhY2tlZCB3aXRoIHRoZW0uIEl0J3MgcXVpdGUgcGxlYXNpbmcgdG8gc2VlIGFsbCB0aG9zZSB0aXRsZXMgc2l0dGluZyBpbiB0aGUgZnVuIGNvcm5lci4gVW5mb3J0dW5hdGVseSwgaWYgeW91J3ZlIGhhZCBhIHJlY2VudCBTYW1zdW5nIGhhbmRzZXQsIHRoZSBvZGRzIGFyZSB5b3Ugd291bGQgaGF2ZSBhbHJlYWR5IHNlZW4gYWxsIHRob3NlIGdhbWVzLiBXaGF0J3MgbW9yZSwgb3ZlciBoYWxmIG9mIHRoZW0gYXJlIHRyaWFsIHZlcnNpb25zLiBCdXQgdGhlIFNhbXN1bmcgRzYwMCBoYXMgZnVsbCBzdXBwb3J0IGZvciBKYXZhIE1ESVAgMi4wIHNvIHlvdSBjYW4gZG93bmxvYWQgYWRkaXRpb25hbCB0aXRsZXMgYW5kIG90aGVyIGFwcGxpY2F0aW9ucy4KSWJpemEgVG91cmlzbUliaXphIEhvdGVsc0JlZCBhbmQgQnJlYWtmYXN0IEliaXphSWJpemEgSG9saWRheSBSZW50YWxzSWJpemEgSG9saWRheSBQYWNrYWdlc0ZsaWdodHMgdG8gSWJpemFJYml6YSBSZXN0YXVyYW50c0liaXphIEF0dHJhY3Rpb25zSWJpemEgVHJhdmVsIEZvcnVtSWJpemEgUGhvdG9zSWJpemEgTWFwSWJpemEgR3VpZGVBbGwgSWJpemEgSG90ZWxzSWJpemEgSG90ZWwgRGVhbHNMYXN0IE1pbnV0ZSBIb3RlbHMgaW4gSWJpemFIb3RlbHMgbmVhciBTaXJlbmlzIEhvdGVsIEdvbGV0YSBTcGFCeSBIb3RlbCBUeXBlUGxheWEgZCBCb3NzYSBCZWFjaCBIb3RlbHNGYW1pbHkgSG90ZWxzIFBsYXlhIGQgQm9zc2FTcGEgSG90ZWxzIGluIFBsYXlhIGQgQm9zc2FCdXNpbmVzcyBIb3RlbHMgUGxheWEgZCBCb3NzYUx1eHVyeSBIb3RlbHMgaW4gUGxheWEgZCBCb3NzYVBsYXlhIGQgQm9zc2EgUmVzb3J0c1JvbWFudGljIEhvdGVscyBpbiBQbGF5YSBkIEJvc3NhQnkgSG90ZWwgQ2xhc3M1IHN0YXIgSG90ZWxzIGluIFBsYXlhIGQnZW4gQm9zc2E0IHN0YXIgSG90ZWxzIGluIFBsYXlhIGQnZW4gQm9zc2EzIHN0YXIgSG90ZWxzIGluIFBsYXlhIGQnZW4gQm9zc2FCeSBIb3RlbCBCcmFuZFBsYXlhc29sIEliaXphIEhvdGVscyBpbiBJYml6YVNvbCBIb3RlbHMgaW4gSWJpemFHcmFuZCBQYWxsYWRpdW0gSG90ZWxzIFJlc29ydHMgaW4gSWJpemFDYXRhbG9uaWEgSG90ZWxzIGluIEliaXphT0QgSG90ZWxzIGluIEliaXphUGFsbGFkaXVtIEhvdGVscyBpbiBJYml6YUZpZXN0YSBIb3RlbHMgUmVzb3J0cyBpbiBJYml6YUJhcmNlbG8gSG90ZWxzIFJlc29ydHMgaW4gSWJpemFUaGUgTGVhZGluZyBIb3RlbHMgT2YgVGhlIFdvcmxkIGluIEliaXphYXp1TGluZSBIb3RlbHMgaW4gSWJpemFQb3B1bGFyIEFtZW5pdGllc1BsYXlhIGQgQm9zc2EgSG90ZWxzIHdpdGggYSBQb29sUG9wdWxhciBJYml6YSBDYXRlZ29yaWVzQWZmb3JkYWJsZSBIb3RlbHMgaW4gUGxheWEgZCdlbiBCb3NzYUhvdGVscyB3aXRoIE5pZ2h0Y2x1YnMgaW4gUGxheWEgZCdlbiBCb3NzYVF1aWV0IEhvdGVscyBpbiBQbGF5YSBkJ2VuIEJvc3NhSG90ZWxzIHdpdGggSmFjdXp6aSBpbiBQbGF5YSBkJ2VuIEJvc3NhQ2xlYW4gSG90ZWxzIGluIFBsYXlhIGQnZW4gQm9zc2FQbGF5YSBkJ2VuIEJvc3NhIFBhcnR5IEhvdGVsc0hvdGVscyB3aXRoIFByaXZhdGUgQmVhY2ggaW4gUGxheWEgZCdlbiBCb3NzYVBsYXlhIGQnZW4gQm9zc2EgSG90ZWxzIFdpdGggRW50ZXJ0YWlubWVudEhvdGVscyB3aXRoIENvbXBsaW1lbnRhcnkgQnJlYWtmYXN0IGluIFBsYXlhIGQnZW4gQm9zc2FDb3VwbGVzIEhvdGVscyBpbiBQbGF5YSBkJ2VuIEJvc3NhTmVhciBMYW5kbWFya3NIb3RlbHMgbmVhciBNYXNzYWdlIEJlYWNoIEliaXphSG90ZWxzIG5lYXIgSXNsYSBCaWtlSG90ZWxzIG5lYXIgVG9wIDIxIEliaXphSG90ZWxzIG5lYXIgQm9yYSBCb3JhIEJlYWNoIENsdWJIb3RlbHMgbmVhciBUYW50cmEgSWJpemFIb3RlbHMgbmVhciBDaXJxdWUgZGUgbGEgTnVpdCBJYml6YUhvdGVscyBuZWFyIFNwYWNlSG90ZWxzIG5lYXIgSGkgSWJpemFOZWFyIEFpcnBvcnRzSWJpemEgQWlycG9ydCBIb3RlbHNBbGwgSWJpemEgUmVzdGF1cmFudHNSZXN0YXVyYW50cyBuZWFyIFNpcmVuaXMgSG90ZWwgR29sZXRhIFNwYUFsbCB0aGluZ3MgdG8gZG8gaW4gSWJpemFUaGluZ3MgdG8gZG8gbmVhciBTaXJlbmlzIEhvdGVsIEdvbGV0YSBTcGFUcmF2ZWwgR3VpZGVzQXBwc0NydWlzZXNHcmVlbkxlYWRlcnMKTm93LCB5b3UgbWF5IGFzaywgaG93IGNhbiB5b3UgZ2V0IGhvbGQgb2YgdGhpcyBhbG1vc3QgbWFnaWNhbCBmcmVlIHBva2VyIHNvZnR3YXJlPyBXZWxsLCB0aGUgYW5zd2VyIGlzIGEgc2ltcGxlIG9uZS4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnby4gCjEwLiBGb3JtIG11dHVhbGx5IGJlbmVmaWNpYWwgcmVsYXRpb25zaGlwcyB3aXRoIGJ1c2luZXNzZXMgaW4geW91ciBhcmVhIHdobyBvZmZlciBjb21wbGVtZW50YXJ5IHNlcnZpY2VzLiBZb3UgY2FuIGNyb3NzIHByb21vdGUgeW91ciBzZXJ2aWNlcyBhbmQgZXhjaGFuZ2UgcmVmZXJyYWxzLgpIZSBwcmV2aW91c2x5IGxpdmVkIGluIGFub3RoZXIgTWVzcXVpdGUgICB0aGUgRGFsbGFzIHN1YnVyYiBvZiBNZXNxdWl0ZSwgVGV4YXMgICBmcm9tIDIwMDQgdG8gMjAxMiwgYWNjb3JkaW5nIHRvIE1lc3F1aXRlLCBUZXhhcywgcG9saWNlIEx0LiBCcmlhbiBQYXJyaXNoLiBQYWRkb2NrIG93bmVkIGF0IGxlYXN0IHRocmVlIHNlcGFyYXRlIHJlbnRhbCBwcm9wZXJ0aWVzLCBQYXJyaXNoIHNhaWQsIGFuZCB0aGVyZSB3YXMgbm8gaW5kaWNhdGlvbiB0aGUgcG9saWNlIGRlcGFydG1lbnQgaGFkIGFueSBjb250YWN0IHdpdGggaGltIG92ZXIgdGhhdCB0aW1lLCBQYXJyaXNoIHNhaWQuLiAKVG9vIG1hbnkgdW5rbm93bnMuIApBbGxvdyBzdHVkZW50cyB0byBhc2sgcXVlc3Rpb25zIG9yIHNoYXJlIGlkZWFzIGluIGNsYXNzIGFub255bW91c2x5LCBvciB3aXRob3V0ICJzcGVha2luZyBvdXQiICBjaXJjdWxhdGUgbm90ZSBjYXJkcyBmb3Igc3R1ZGVudHMgdG8gd3JpdGUgcXVlc3Rpb25zIG9yIGNvbW1lbnRzLCBvciB0byBhbnN3ZXIgeW91ciBxdWVzdGlvbnMsIHBlcmhhcHMgYW5vbnltb3VzbHksIGFuZCBjb2xsZWN0IGFuZCBhZGRyZXNzIHRoZW0uIE9ubGluZSB0b29scyBzdWNoIGFzIFF1ZXN0aW9uIENvb2tpZWFuZCBUcmljaWRlciBjYW4gaGVscCBzdHVkZW50cyBhc2sgcXVlc3Rpb25zIG9yIHNoYXJlIGNvbW1lbnRzLiAKTXVjaCBvZiB0aGUgd2VsbCBkZXNlcnZlZCBoeXBlIHdhcyBkdWUgdG8gdGhlIGFsbCBzdGFyIGNhc3Q6IENoYWR3aWNrIEJvc2VtYW4sIEFuZ2VsYSBCYXNzZXR0LCBNaWNoYWVsIEIuIEpvcmRhbiwgU3RlcmxpbmcgSy4gCllldCBpdCBtb3N0IGxpa2VseSBwb3NzaWJsZSBhbnl0aGluZyBvbiAiaVR1bmVzImNhbiBiZSBmb3VuZCBvbiBWaW55bC9DRCBmb3IgaGlnaGVyIHF1YWxpdHkuIApUaGUgbGFib3JlciBpcyB3b3J0aHkgb2YgaGlzIGhpcmUgd2hldGhlciBpdCBpcyBtb3dpbmcgdGhlIGxhd24gb3IgcGFpbnRpbmcgYSBwZXQgcG9ydHJhaXQuIApNdWx0aXBsZSBleHBlcnRzIGdpdmluZyBkaWZmZXJlbnQgYW5zd2VycyB0byB0aGUgc2FtZSBxdWVzdGlvbiBsb2wuLiAKVGhlIHRyaW8gd2FzIGR1ZSB0byBnbyB0byBob3NwaXRhbCB5ZXN0ZXJkYXkgYWZ0ZXJub29uLgpXaW5uaW5nIGdvbGQgYWdhaW5zdCByZWlnbmluZyBHbyBQb2tlciB3b3JsZCBjaGFtcGlvbnMuIERyaXZpbmcgZmFjaWFsIHJlY29nbml0aW9uIGZhciBtb3JlIHRoYW4gd2hhdCBodW1hbnMgY2FuIGRvLiAKVGhpcyBtb25leSBtYWtpbmcgZ2FtZSBuZWVkcyBzb21lIHBsYXlpbmcgZXF1aXBtZW50cy4gTm93LCB0aGUgbnVtYmVyIG9mIGVxdWlwbWVudHMgaGFzIGFsc28gaW5jcmVhc2VkLiBUaGUgbGVhZGluZyBwb2tlciBwbGF5ZXJzIGFyZSB2ZXJ5IGNvbmNlcm5lZCBhYm91dCB0aGVpciBsdWNreSBwb2tlciBjYXJkcyBzaW5jZSBhIGxvbmcgdGltZS4gCkhvdyBUbyBVc2UgRXNzZW50aWFsIE9pbHMKQmVpbmcgZ290aCBvciB0aGUgcmVsYXRlZCBncm91cHMgaXNuIGFzIHN0aWdtYXRpemVkLCBwcm9iYWJseSBiZWNhdXNlIHBlb3BsZSBhcmUgZmluYWxseSBhZG1pdHRpbmcgdGhhdCBUcmlwcCBwYW50cyBkb24gY2F1c2Ugc2Nob29sIHNob290aW5ncy4KVGhlIHNwZWNpZmljYXRpb24gdGhleSBnYXZlIG1lIGZvciBteSByb2xlIGluIHRoZSB0ZWFtIHdhcyBhbHNvIGV4YWN0bHkgdGhhdCBvZiBhIHF1aW50ZXNzZW50aWFsIGRhdGEgc2NpZW50aXN0Li4gCklsIGZhdXQgZHUgY2hlbWluIHBvdXIgcGFydmVuaXIgIHVuZSBhc3N1cmFuY2UgZXQgdW5lIGNvbmZpYW5jZSBpbnRyaWV1cmVzIGF1IHNlaW4gZGVzIGNpcmNvbnN0YW5jZXMgcXVpIHNvbnQgbGVzIG50cmVzLCBhZmluIGQndHJlIGRhbnMgdW4gZHRhY2hlbWVudCBxdWkgbidhY2NvcmRlIGF1eCBjaG9zZXMgZ3VyZSBwbHVzIGQnaW1wb3J0YW5jZSBxdWUgY2VsbGUgcXUnaWwgeSBhICBsZXVyIGFjY29yZGVyLiBVbmUgZm9pcyBkYW5zIGNlIHBvaW50IHF1ZSBub3VzIHF1dG9ucyBldCBxdWkgZmluaXQgcGFyIG5vdXMgYXNwaXJlciwgbm91cyByZWdhcmRvbnMsIGFsb3JzLCBsZSBtb25kZSBhdmVjIHVuIGlsIHRyYW5xdWlsbGUuIEMnZXN0IGwgbCdlc3ByYW5jZSBkZSBsYSBzZXVsZSBSZGVtcHRpb24gYWNjZXNzaWJsZSwgc3VwZXJiZSBldCBibG91aXNzYW50ZS4gTm9zIHBpcmVzIGVubmVtaXMgbmUgbGUgc29udCBwbHVzLiBMZXMgb3Bwb3NpdGlvbnMgbGVzIHBsdXMgYWNpZGVzIHNlIHJzb2x2ZW50LiBDZXJ0ZXMsIHBldXQgdHJlIHF1ZSBjZWxhIG5lIHBhcnZpZW50ICBmb25jdGlvbm5lciBxdWUgcG91ciBzb2kgbW1lIGV0IG5vbiBwYXMgcG91ciBub3MgZW5uZW1pcy4gIFBhcmRvbm5lIGxldXIgUHJlLCBjYXIgaWxzIG5lIHNhdmVudCBwYXMgY2UgcXUnaWxzIGZvbnQuICBNYWlzIG9uIHNlIHJldHJvdXZlIHNhaXNpLCBlbiBjZSBjYXMsIHBhciB1bmUgdG90YWxlIGJpZW52ZWlsbGFuY2UgZHNpbnRyZXNzZSBldCBtbWUgbGEgc2FicmUgIGxhIG1haW4sIHBvdXIgZGZlbmRyZSBjZSBxdSdpbCB5IGEgIGRmZW5kcmUsIGwnaHVtaWxpdCBub3VzIHRyZWludCBldCBub3VzIG4nYXZvbnMgcGFzIGRlIGhhaW5lLgpTb2xkaWVycyBkdWJiZWQgaXQgIkVhdSBkZSBDb2xvZ25lLCIgbWVhbmluZyBDb2xvZ25lIHdhdGVyLCBhZnRlciB0aGUgdG93biwgYW5kIHRoZSBuYW1lIGNvbG9nbmUgc3R1Y2sgdG8gYWxsIHBlcmZ1bWVkIHdhdGVycyBzaW5jZSB0aGVuLiAKU2h1dHRsZXMgd2lsbCBzZXJ2aWNlIHRoZSBsb3QgYXBwcm94aW1hdGVseSBldmVyeSA1IDEwIG1pbnV0ZXMgZHVyaW5nIHBlYWsgYXJyaXZhbCB0aW1lcyBpbiB0aGUgbW9ybmluZyBhbmQgYXBwcm94aW1hdGVseSBldmVyeSAxNSBtaW51dGVzIGR1cmluZyBvZmYgcGVhayBob3Vycy4KQ2FuIEkgaW52ZXN0IGluIEthYnVsIEJhbmsKVHdvIFBhaXIgaXMgZXhhY3RseSB3aGF0IGl0IHNheXMsIHR3byBwYWlycyBvZiB0d28gY2FyZHMgd2l0aCB0aGUgc2FtZSB2YWx1ZS4gV2hlbiBUd28gUGFpciBnb2VzIGFnYWluc3QgYW5vdGhlciBoYW5kIHdpdGggVHdvIFBhaXIsIHRoZSBiYXR0bGUgaXMgd29uIGJ5IHRoZSBoYW5kIHdpdGggdGhlIGhpZ2hlc3QgUGFpci4gU28gNSA2IDcgOCA5IGlzIGJlYXRlbiBieSA4IDkgMTAgSiBRRmx1c2guIApKdXN0IHB1cmUsIHVuYWR1bHRlcmF0ZWQgIlRISVMgSVMgTVkgRkFSVCwgSVQgSVMgQkVJTkcgRk9SQ0VEIFVQT04gWU9VIEFORCBZT1UgV0lMTCBTTUVMTCBJVC4gCkVkaXQ6IHRoZSBiZXN0IGFkdmljZSBJIGNhbiBnaXZlIGlzIHRvIHN0YXkgYWN0aXZlLCBmaW5kIGEgbmV3IGhvYmJ5LCBzb21ldGhpbmcgdG8ga2VlcCB5b3UgYnVzeSBhbmQgZGlzdHJhY3RlZCwgcGVyc29uYWxseSBJIHN0YXJ0ZWQgbWFuYWdpbmcgYSBjb21tdW5pdHkgSW5zdGFncmFtIGFjY291bnQuIElmIHlvdSBrZWVwIGFjdGl2ZSBvbiBpdCwgaXQgY2FuIGJlIGEgZmFudGFzdGljIGRpc3RyYWN0aW9uLgoxMSAoMyksIHAuIEUwMTQ5ODYwLiAKQnV0IGRvZXMgaGUgbG92ZSBXaWxsb3c/IEl0IHNlZW1zIGxpa2UgRWxlYW5vciB3YXNuJ3Qgc28gc3VyZS4KSSBwbGF5ZWQgU3RhcmNyYWZ0IHNpbmNlIHRoZSBnbG9yeSBkYXlzIG9mIHRoZSBvcmlnaW5hbCBTdGFydGNyYWZ0LCB0aGVuIEJyb29kIFdhciBleHBhbnNpb24uIEkgaGF2ZSBiZWVuIG1vZGVzdGx5IGNvbXBldGl0aXZlIG9ubGluZSBzaW5jZSB0aGVuLCBhbmQgc3BlbnQgbXVjaCBvZiBteSBmb3JtYXRpdmUgeWVhcnMgaW4gbXkgeW91dGggZG9pbmcgbGF0ZSBuaWdodCBiaW5nZSBzZXNzaW9ucyB3aXRoIG15IGZyaWVuZHMgaW4gbG9jYWwgTEFOIHBhcnR5cyBzcHJhd2xlZCBvdmVyIHRoaXMgbGl2aW5nIHJvb20gb3IgdGhhdCBvbmUsIHRpbGwgdGhlIG1vcm5pbmcgaG91cnMuIEkgbG92ZSB0aGUgc3RvcnksIGFuZCB0aGUgZ2FtZXBsYXkuLiAKVGhhdCdzIHRoZSBiZWF1dHkgb2YgcG9rZXIuIE15IGFiaWxpdHkgbWVhbnMgdGhhdCBJIGNhbiBiZWF0IG15IG9wcG9uZW50IGluIHNwaXRlIG9mIHdoYXQgaGFuZCBJIGFtIGRlYWx0LiBMaWtlIGFueSBnYW1lLCBwb2tlciBhbHNvIGJyaW5ncyBoZWFydGJyZWFraW5nIGxvc3Nlcy4gV2hlbiBJIHdhcyBpbiBjb2xsZWdlLCBJIG9uY2UgaGVsZCBmb3VyIG9mIGEga2luZCwgYSBncmVhdCBoYW5kIHdpdGggYWJvdXQgYSBvbmUgaW4gNCwwMDAgY2hhbmNlIG9mIHR1cm5pbmcgdXAuIFN0aWxsLCBJIGdvdCBiZWF0IGJ5IGEgc3RyYWlnaHQgZmx1c2ggICBkZWFsdCBvbmNlIGV2ZXJ5IDcyLDAwMCBoYW5kcy4gQnV0IGFzIGFueSBwb2tlciBwbGF5ZXIga25vd3MsIHlvdXIgc2tpbGwgYXQgdGhlIGdhbWUgZGV0ZXJtaW5lcyB3aGV0aGVyIHlvdSB3aW4sIG5vdCBuZWNlc3NhcmlseSB0aGUgY2FyZHMuClJFU1VMVFM6IEFmdGVyIDEgd2VlayBvZiByZXN0cmljdGVkIGVuZXJneSBpbnRha2UsIGZhc3RpbmcgcGxhc21hIGdsdWNvc2Ugbm9ybWFsaXNlZCBpbiB0aGUgZGlhYmV0aWMgZ3JvdXAgKGZyb20gOS4yMC40IHRvIDUuOTAuNCBtbW9sL2w7IHA9MC4wMDMpLgpJZiB0aGUgdGFibGUgbWF4aW11bSBpcyAkMjUsMDAwIGFuZCB5b3UgbG9zZSAxMiBpbiBhIHJvdywgeW91IGNhbnQgY292ZXIgeW91ciBsb3NzZXMgd2l0aCBiZXQgMTMuIApZZWFoLCB0aGVyZSBhcmUgaHVnZSBjbGFzcyBkaWZmZXJlbmNlcyBpbiB0aGUgc2hvdyBidXQgcG9vciB3aGl0ZXMgYXJlIHZpc2libHkgdHJlYXRlZCBiZXR0ZXIgdGhhbiBwb29yIGJsYWNrcy4uIApJZiB5b3UgaGF2ZSBhIHVzZWQgY2FzaW5vIHBva2VyIGNoaXAgdGhhdCBkb2VzIG5vdCBoYXZlIGFueSBtYXJraW5ncywgYnV0IGhhcyBhIGNvbG9yLCB5b3UgbWF5IGJlIGFibGUgdG8gaWRlbnRpZnkgdGhlIHByb2R1Y3QgYnkgc2ltcGx5IGtub3dpbmcgd2hhdCBjb2xvciByZXByZXNlbnRzIGVhY2ggZGVub21pbmF0aW9uLiBUaGVyZSBhcmUgY2hpcCBjb2xvcnMgdGhhdCBhcmUgY29uc2lkZXJlZCB0byBiZSAidW5pdmVyc2FsIi4gV2hpdGUgbm9ybWFsbHkgc3RhbmRzIGZvciAkMS4wMC4gClRoZSBuYW1lIG9mIHlvdXIgZ2FtZSBqdXN0IHJlbWluZGVkIG1lIHRoYXQgaW4gMm5kIGdyYWRlIGEgZnJpZW5kIGFuZCBJIHdvdWxkIHNwZW5kIHJlY2VzcyB3aXRoIHRoZSBlbmRzIG9mIG91ciB0IHNoaXJ0cyBwdWxsZWQgb3ZlciBvdXIga25lZXMsIGhvcHBpbmcgYXJvdW5kIG9uIG91ciBoYW5kcyBhbmQgZmVldCBhbmQgb2NjYXNpb25hbGx5IHJvbGxpbmcgZG93biB0aGUgZ3Jhc3N5IGhpbGwuIFRoZSBjcmVhdHVyZXMgd2UgdHJhbnNmb3JtZWQgaW50byB3ZXJlIGR1YmJlZCAic2x1Z3MiIGZvciBzb21lIHJlYXNvbiBJIGRvIG5vdCBrbm93LiBXZSB3ZXJlIHN0cmFuZ2UuCkkgc3RhcnRlZCBiZWNvbWluZyBzdXNwaWNpb3VzIHNvIG9uZSBtb3JuaW5nIHdoaWxlIGhlIHdhcyBzbGVlcGluZyBpbiwgSSBjaGVja2VkIGhpcyBwaG9uZSBhbmQgZm91bmQgbXVsdGlwbGUgY292ZXJzYXRpb25zIHdpdGggZ2lybHMgKHdobyB3b3JrZWQgYXQgdGhlIGNhc2lubykgYW5kIGhpcyBjYXNpbm8gYnVkZGllcy4gCkNvcnJlY3QuIFdoZW4geW91J3JlIGluIGFuIG92ZXJzdGVlciBzbGlkZSwgcG9pbnQgeW91ciB3aGVlbCBpbiB0aGUgZGlyZWN0aW9uIG9mIHRyYXZlbC4gCkFjY29yZGluZyB0byB0aGUgZGF0YSwgcHVudGVycyBwbHVuZ2VkIG1vcmUgdGhhbiAkMTIuNSBtaWxsaW9uIGV2ZXJ5IGRheSBvbiB0aGUgbWFjaGluZXMgaW4gdGhlIEh1bnRlciwgb3IgJDg2ODIgYSBtaW51dGUuIAoxMS4gSGlnaCB2ZWxvY2l0eSwgbG93IGFtcGxpdHVkZSB0aHJ1c3Qgc3BpbmFsIG1hbmlwdWxhdGlvbiB3aXRoIHRoZSBoZWFkIGhlbGQgaW4gbGF0ZXJhbCBmbGV4aW9uLCB3aXRoIHNsaWdodCByb3RhdGlvbiBhbmQgc2xpZ2h0IGV4dGVuc2lvbiAiaXMgYSBzdGFuZGFyZCBtYW5pcHVsYXRpdmUgdGVjaG5pcXVlIHVzZWQgYnkgbWFuaXB1bGF0aXZlIHBoeXNpY2lhbnMsIHBoeXNpb3RoZXJhcGlzdHMgYW5kIGNoaXJvcHJhY3RvcnMuIiAoVGhpcyBpcyBpbXBvcnRhbnQgYmVjYXVzZSB0aGlzIGlzIHRoZSB0eXBlIG9mIHNwaW5hbCBhZGp1c3RpbmcgdGhhdCBtYW55IGNoaXJvcHJhY3RvcnMgcGVyZm9ybSBvbiBjZXJ2aWNhbCB2ZXJ0ZWJyYWUuIFRoaXMgYXJ0aWNsZSBpbmRpY2F0ZXMgc3VjaCBhZGp1c3RtZW50cyBhcmUgInN0YW5kYXJkLiIpLiAKSGF2ZSBmdW4uLiAKSW4gaXRzIGRlY2lzaW9uLCB0aGUgUGFyb2xlIEJvYXJkIG9mIENhbmFkYSBzYWlkIEFuZHJlIEhhcnZleSBSaWNoYXJkIGJlaGF2aW91ciB0b3dhcmQgaGlzIGNhc2UgbWFuYWdlcnMgaGFkIGltcHJvdmVkIHNpbmNlIHRoZSBmYWxsIGFuZCB0aGF0IGhlIGhhZCBiZWVuIG1ha2luZyBzb21lIHByb2dyZXNzIGluIGF0dGVuZGluZyByZWhhYmlsaXRhdGlvbiBwcm9ncmFtcywgY291bnNlbGxpbmcgYW5kIHdvcmsgdHJhaW5pbmcgaW4gcmVjZW50IG1vbnRocy5PbiBBcHJpbCAyLCAyMDE0LCBSaWNoYXJkIGJyb2tlIGludG8gaGlzIGVzdHJhbmdlZCB3aWZlJ3MgaG9tZSB3aXRoIGEgcnViYmVyIGhlYWRlZCBtYWxsZXQgYW5kIGEgc2F3LiBUaGUgY291cGxlIGFyZ3VlZCBiZWZvcmUgUmljaGFyZCBzdHJ1Y2sgaGVyIHdpdGggaGlzIGZpc3RzLCB0aGUgbWFsbGV0IGFuZCB0aGUgc2F3LldoZW4gaGlzIHN0ZXBkYXVnaHRlciB0cmllZCB0byBpbnRlcnZlbmUsIGhlIHN0cnVjayBoZXIgYXMgd2VsbC4gUmljaGFyZCBzdG9wcGVkIHRoZSBhc3NhdWx0IHdoZW4gaGlzIHN0ZXBkYXVnaHRlciBoaXQgYSBwYW5pYyBidXR0b24gb24gdGhlIGhvbWUgYWxhcm0gc3lzdGVtLiBIZSB0aGVuIHdlbnQgZG93bnN0YWlycyBhbmQgcG91cmVkIGFjY2VsZXJhbnQgb24gdGhlIGZsb29yIGJlZm9yZSBsaWdodGluZyBpdCBvbiBmaXJlLiBIaXMgc2V2ZW4geWVhciBvbGQgc29uIHdhcyBhbHNvIGhvbWUgYXQgdGhlIHRpbWUuUmljaGFyZCB3YXMgYXJyZXN0ZWQgdGhlIGZvbGxvd2luZyBkYXkgbmVhciBJbnZlcm1lcmUuIEhlIGlzIGN1cnJlbnRseSBzZXJ2aW5nIGFuIGVpZ2h0IHllYXIgc2VudGVuY2UgZm9yIGJyZWFraW5nIGFuZCBlbnRlcmluZywgYXNzYXVsdCBhbmQgYXJzb24uUmVsYXRlZFBhcm9sZSBkZW5pZWQgZm9yIG1hbiB3aG8gYXNzYXVsdGVkIHdpZmUsIHN0ZXBkYXVnaHRlciBiZWZvcmUgc2V0dGluZyBob3VzZSBvbiBmaXJlVGhlIHVuZXNjb3J0ZWQgcGFyb2xlIHBlcm1pdHMgUmljaGFyZCB0byBhdHRlbmQgYSAxNSB3ZWVrIHByb2dyYW0gdG8gZGVhbCB3aXRoIGNoaWxkaG9vZCB0cmF1bWE7IGhlIGhhZCBiZWVuIGFidXNlZCBhcyBhIGNoaWxkIGFuZCB3aXRuZXNzZWQgZG9tZXN0aWMgYWJ1c2UuIEhpcyBmYXRoZXIgaGFkIGFsc28gZGVhbHQgd2l0aCBzdWJzdGFuY2UgYWJ1c2UgYW5kIGFiYW5kb25lZCB0aGUgZmFtaWx5LldoaWxlIHRoZSBwYXJvbGUgaXMgY29uc2lkZXJlZCB1bmVzY29ydGVkLCBSaWNoYXJkIHdpbGwgYmUgdHJhbnNwb3J0ZWQgYmV0d2VlbiBoaXMgaW5zdGl0dXRpb24gYW5kIHRoZSB0cmVhdG1lbnQgcHJvZ3JhbSBieSBDb3JyZWN0aW9uYWwgU2VydmljZSBvZiBDYW5hZGEgdmVoaWNsZXMgd2hpbGUgYWNjb21wYW5pZWQgYnkgYSBzdGFmZiBtZW1iZXIgb3IgdHJlYXRtZW50IGVtcGxveWVlLiBIZSB3aWxsIGJlIHBlcm1pdHRlZCB0byBsZWF2ZSBmb3IgdXAgdG8gZWlnaHQgaG91cnMgZWFjaCB0aW1lLCB0d2ljZSBhIHdlZWsgZm9yIDE1IHdlZWtzLlJpY2hhcmQgbXVzdCBhYmlkZSBieSBzcGVjaWZpYyBjb25kaXRpb25zIHdoaWxlIG9uIHBhcm9sZS4gSGUgaXNuIHRvIGNvbnRhY3QgdGhlIHZpY3RpbXMgb3IgYW55IG9mIHRoZWlyIGZhbWlseSBtZW1iZXJzIHdoZXRoZXIgaW4gcGVyc29uIG9yIGJ5IHNvY2lhbCBtZWRpYSwgYW5kIGhlIGlzbiB0byBiZSBpbiB0aGUgcHJlc2VuY2Ugb2YgY2hpbGRyZW4gdW5kZXIgYWdlIDE4LgpCdXQsIHVuZm9ydHVuYXRlbHksIHNoaXBwaW5nIHRvIG15IGNvdW50cnkgd2lsbCBjb3N0IG1lIGFyb3VuZCAkNjAgNzAsIHdoaWxlIG15IGJ1ZGdldCBpcyBsaW1pdGVkIHRvICQxMjAuIApXZSBzY2FubmVkIHRoZWlyIGJyYWlucyBhbmQgdGhlIHJlYWRvdXRzIGRvbiBsb29rIGxpa2UgaGV0ZXJvc2V4dWFsIG1hbGVzIGJyYWlucy4gCkkgd2lzaCBJIGNvdWxkIHJlbWVtYmVyIHdoZXJlIEkgcmVhZCB0aGlzLyBoZWFyZCBpdC4gQnV0IEkgYmVsaWV2ZSBSZWVzZSdzIGNoYW5nZXMgdGhlaXIgcmVjaXBlIGZvciB0aGVzZSBzcGVjaWFsdHkgc2hhcGVzIChlZ2dzLCBwdW1wa2lucywgZXRjKS4gT25lIHJlYXNvbiBpcyB0byBtYWtlIGl0IGhvbGQgaXRzIHNoYXBlIGJldHRlci4gQW5kIHRoZSBvdGhlciBoYXMgdG8gZG8gd2l0aCBjdXR0aW5nIGNvc3RzIGRvd24sIGFkZGluZyBtb3JlIHN1Z2FyLyBzb21lIGluZ3JlZGllbnQgYXMgZmlsbGVyIHRvIGJlIGFibGUgdG8gYWRkIG1vcmUgUEIgd2l0aG91dCBoYXZpbmcgdG8gc3BlbmQgbW9yZSAkJCQuClRhcHBpbmdUYXBwaW5nIGlzIG5vdCBxdWl0ZSB3aGF0IGl0IHNvdW5kcyBsaWtlLiBJdCBpcyBwcmVzc2luZyBmaXJtbHkyIHdpdGggYSBmaW5nZXJ0aXAgZm9yIGEgbW9tZW50LCB0aGVuIHJlbGVhc2luZyBxdWlja2x5LiBBIG1vZGlmaWVkIHRhcCB3b3JrcyB3b25kZXJmdWxseSBvbiB0aGUgYmFjay4gVGFwcGluZyB3b3JrcyB3b25kZXJmdWxseSBvbiBhbG1vc3QgZXZlcnkgcGFydCBvZiB0aGUgYm9keSwgYnV0IGJlc3Qgb24gdGhlIHVwcGVyIGFuZCBsb3dlciBiYWNrLgpBcmUgbm93IG9uIHRoZSBzdWJtaXQgcGFnZS4gSSB0aG91Z2h0IGEgbW92ZSB0byA2JSBBQlYgd291bGQgYmUgZ3JlYXQ7IG1heWJlIEkgc3RhcnQgdG8gc2VlIHNvbWUgaW1wb3J0ZWQgVUsgY2lkZXJzIGluIGdyb2Nlcnkgc3RvcmVzIGZpbmFsbHkuIEkgbGF1Z2hlZCBhdCB0aGUgcHJvc3BlY3QgVXRhaCB3b3VsZCBldmVuIGNvbnNpZGVyIDEwJSBtdWNoIGxlc3Mgbm8gbGltaXQuIDYlIHNlZW1lZCBncmVhdCB0byBtZS4gTGVnaXNsYXRvcnMgYXJlIG9ubHkgbGlrZWx5IHRvIHRydWx5IG1vdmVkIGlmIHRheCByZXZlbnVlIGRyb3BzIG9yIGFuIGFuZ3J5IGFybXkgb2YgYnVkIGxpZ2h0IHBpdGNoZm9yayB3aWVsZGluZyBjaXRpemVucyBicmVhayBkb3duIHRoZWlyIGRvb3JzLiBJcyBlaXRoZXIgbGlrZWx5IHRvIGhhcHBlbj8KVHdvIHBhaXIgd2lsbCB3aW4sIGluIFRleGFzIEhvbGRlbScgaGFuZHMgcmFua2luZyB0d28gcGFpciBpcyBoaWdoZXIgdGhhbiB0aHJlZSBvZiBhIGtpbmQuIApQbGVhc2UgYmUgYXdhcmUgdGhhdCB3ZSB3aWxsIGFiaWRlIGJ5IGFsbCBjb250cmFpbmRpY2F0aW9ucyBhbmQgaGVhbHRoIHJlZ3VsYXRpb25zLiBJZiBNYXNzYWdlIGlzIGNvbnRyYWluZGljYXRlZCAobm90IGFkdmlzZWQpIGZvciBhIHBhcnRpY3VsYXIgaGVhbHRoIGNvbmRpdGlvbiBvciBpbmp1cnksIE1hc3NhZ2Ugd2lsbCBub3QgYmUgcHJlZm9ybWVkLiAKVGhlIHZlcnkgYmVoYXZpb3VycyB0aGF0IG9uY2UgcGVybWVhdGVkIHRoZSBjcmFmdCAgIGdhdGVrZWVwaW5nLCBoYXppbmcgYW5kIHRoZSAicmVzcGVjdCIgY29kZSAgIGhhdmUgcmlnaHRseSBiZWVuIG91dGVkIGFuZCBjbGVhbmVkIHVwIGluIG9yZGVyIHRvIGNyZWF0ZSBhIG1vcmUgc3VwcG9ydGl2ZSBhbmQgY29sbGFib3JhdGl2ZSB3b3JrIGVudmlyb25tZW50LiAKSSBrbm93IHRoYXQgaXMgbm90IHdoYXQgeW91IHdhbnQgdG8gaGVhciwgYW5kIEkgZGlkbid0IHdhbnQgdG8gaGVhciBpZiB3aGVuIG15IGZyaWVuZHMgYW5kIGZhbWlseSB0b2xkIG1lLCBidXQgaW4gdGhlIGVuZCwgdGhleSB3ZXJlIHJpZ2h0LiBTb21lIHBlb3BsZSBqdXN0IGRvbid0IHVuZGVyc3RhbmQgYW54aWV0eS9tZW50YWwgaGVhbHRoLi4gClRoZSBzZWNvbmQgdGhpcmQgb2YgdGhlIGdhbWUgaXMgcHVyZSBtYXRocy4gClRoZSAxOHRoIEFubnVhbCBUaWdlciBKYW0gd2FzIGEgd2Vla2VuZCBmdWxsIG9mIGFjdGl2aXRpZXMgdG8gYmVuZWZpdCB0aGUgVGlnZXIgV29vZHMgRm91bmRhdGlvbiwgd2hpY2ggaXMgZGVkaWNhdGVkIHRvIGhlbHBpbmcga2lkcyBzdWNjZWVkLiAKVGVtcGVyYXR1cmVzIG1heSBiZSBpbiB0aGUgc2luZ2xlIGRpZ2l0cyBpZiB0aGF0IHdpdGggd2luZCBjaGlsbHMgd2VsbCBiZWxvdyB6ZXJvLi4gCk1vc3QgbG9vc2UvYWdncmVzc2l2ZSBwbGF5ZXJzIHRyeSB0byBwbGF5IHRoZSBjb3JyZWN0IHdheSwgd2hpY2ggaXMgdGlnaHQvYWdncmVzc2l2ZSwgYnV0IHRoZXkgc2ltcGx5IHBsYXkgdG9vIG1hbnkgaGFuZHMuIApJdCByZWFsbHkgbGVkIG1lIHRvIGFwcHJlY2lhdGUgaG93IHNjYXJlZCB3b21lbiBhcmUgb2YgbWFraW5nIHRoYXQgZWZmb3J0LCBmb3IgZmVhciBvZiB0aGUgZ3V5IHR1cm5pbmcgb3V0IHRvIGJlIHdlaXJkLCBjcmVlcHksIHJ1ZGUgb3Igc3RhbGtlciBpc2guLiAKQSBzY2hub29kbGUgZG9lcyBub3Qgc2hlZCBhbmQgaXMgaHlwb2FsbGVyZ2VuaWMsIHdoaWNoIG1ha2VzIGl0IGFuIGV4Y2VsbGVudCBjaG9pY2UgZm9yIGEgcGV0IGZvciBzb21lb25lIHdpdGggYWxsZXJnaWVzLiBUaGlzIHR5cGUgb2YgZG9nIGlzIHZlcnkgcGxheWZ1bCBhbmQgZGVtYW5kcyBhdHRlbnRpb24gYW5kIGFmZmVjdGlvbi4gQWx3YXlzIG1ha2UgdGltZSBmb3IgeW91ciBwZXQgYW5kIG1ha2UgaXQgZmVlbCBsb3ZlZCBhbmQgYWRvcmVkLiBUaGlzIHdpbGwgbWFrZSB5b3VyIGRvZyBoYXBweSwgd2hpY2ggd2lsbCBtYWtlIHlvdSBoYXBweSBhcyB3ZWxsLgpNYXJpamFjIHN1aXZpdCBsYSBjaHJvbm9sb2dpZSBkZXMgZmFpdHMgaGlzdG9yaXF1ZXMsIGRlcHVpcyAxODYwIGp1c3F1JyBsJ2NoZWMgZGVzIGdyYW5kZXMgZXQgbGdpdGltZXMgcnZvbHRlcyBpbmRpZW5uZXMuIEV4Y2VwdGlvbiBmYWl0ZSBwb3VyIGwnYXRyb2NlIGd1ZXJyZSBkZSBzY2Vzc2lvbiwgbGFxdWVsbGUgbidlc3Qgdm9xdWUgcXVlIHBhciBxdWVscXVlcyB1bmVzIGRlIHNlcyBjb25zcXVlbmNlcywgbm90YW1tZW50IGwnZXhwcm9wcmlhdGlvbiBkZSBmYW1pbGxlcyBzdWRpc3RlcyBhdSBtb21lbnQgZGUgbGEgcmVjb25zdHJ1Y3Rpb24gZXQgZGUgbCdhbGxvbmdlbWVudCBkZXMgY2hlbWlucyBkZSBmZXIuIERhbnMgY2V0dGUgcHJpb2RlLCBsJ2luZ25pZXVyLCBhbGxhaXQgcGFyZm9pcyBlbiBjb3VwbGUgYXZlYyBsZSB0dWV1ciAgZ2FnZXMsIHRvdXMgZGV1eCBmYXZvcmlzYW50IGQnb2RpZXV4IHRyYWZpY3MgZG9udCBzJ2VucmljaGlzc2FpZW50IGRlcyAgY2FycGV0YmFnZ2VycyAuLiAKTXkgc3RpbGwgYmVzdGllLCBNeXNlbGYsIGFuZCBBLiBBIHN0YXJ0ZWQgZGF0aW5nIGJveSBMLiBNeSBiZXN0aWUgY2FuIHN0YW5kIGhpbSwgc28gc2hlIHN0b3BwZWQgaGFuZ2luZyBvdXQgd2l0aCB1cy4gCiJXaGVuIEkgd2FzIGF0IE1HTSwgYW5kIEkgbG9vayBhdCBzb21lIG9mIHRoZXNlIHBob3RvZ3JhcGhzLCBsb29rIGFyb3VuZCwgSSB3YXMgYXQgV2FybmVyIEJyb3RoZXJzIHdoZW4gSmFjayBMLiBXYXJuZXIgd2FzIHRoZXJlLCBhbmQgSGFycnkgQ29oZW4gYXQgQ29sdW1iaWEsIERhcnJ5bCBhdCBGb3guIEl0IHdhcyB2ZXJ5IGV4Y2l0aW5nIHRpbWVzLCIgcmVjYWxsZWQgRmFyci4KVGhlIHNob3cgZG9lcyBhIHRlcnJpYmxlIGpvYiBhdCBleHBsYWluaW5nIGhvdyBleGFjdGx5IEN5bnRoaWEgaXMgZG9pbmcgYWxsIGhlciBtYWdpYyBzdHVmZiwgYW5kIHdoYXQgdGhlIGRpZmZlcmVuY2UgaXMgYmV0d2VlbiBDeW50aGlhcyBwb3dlcnMgYW5kIFRoYWxlcyBwb3dlcnMuOjo6IEFzIGZhciBhcyBJIHNhdywgYWxsIHRoZSBwcm9qZWN0aW9ucyB3ZXJlIG9ubHkgc2VlbiBieSBvbmUgcGVyc29uLiBJIGNvdWxkIGhhdmUgbWlzc2VkIHNvbWV0aGluZyB0aG91Z2guLiAKS2F0eWFzdGFyayAgMTMgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkhhZCBhIGNvYWNoIHRlbGwgbWUgYmVmb3JlIHRoYXQgSSB3b3VsZCBuZXZlciBnZXQgdG8gdGhlIG5leHQgbGV2ZWwgYmVjYXVzZSBJIHdhcyBhIGxvdCBzbWFsbGVyIGFuZCBub3QgYXMgZmFzdCBhcyB0aGUgb3RoZXIgZ3V5cywgc28gdGhhdCBtb21lbnQgdGF1Z2h0IG1lIHRvIG5ldmVyIGdpdmUgdXAsIHNoZSB0b2xkIENOTi4gdGhhdCBtb21lbnQgdGhlbiBJIHRvbGQgbXlzZWxmIG5vIG9uZSBldmVyIGdvaW5nIHRvIGRlY2lkZSB3aGF0IEkgYW0gZ29pbmcgdG8gZG8gd2l0aCBteSBsaWZlLiBUaGF0IG15IGRlY2lzaW9uLiBtb3RoZXIgc2FpZCBIYXJyaXMgaXMgdmVyeSBoZWFkc3Ryb25nLgozNFdpbGRXb29kNDEgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSXQgYW4gaW5mdXJpYXRpbmcgbW9tZW50IGZvciB0aGUgcGxheWVyLCBiZWNhdXNlIGdvZGRhbW4gaXQsIHdlIHdlcmUgdGhlcmUsIGFuZCBzaGUgZnVja2luZyB3YXNuIEFuZCB0aGF0IHdoYXQgdGhpcyByZW1pbmRzIG1lIG9mLiBHaXZlbiB0aGUgYWJzb2x1dGVseSByaWRpY3Vsb3VzIHdheSB0aGUgZ2FtZSB0cmllcyBhdCB0aGUgdmVyeSBlbmQgb2YgRm9yc2FrZW4gdG8gbWFrZSBvdXQgbGlrZSBzb21laG93IHlvdSAianVzdCBhcyBiYWQiIGFzIFVsZHJlbiBmb3Iga2lsbGluZyBoaW0gYWZ0ZXIgaGUgc2hvd3Mgbm8gcmVtb3JzZSB3aGF0c29ldmVyIGZvciB1bmxlYXNoaW5nIHhlbm9jaWRhbCBudXRqb2JzIG9uIHRoZSBSZWVmLCBJIGNhbiBoZWxwIGJ1dCBmZWVsIGxpa2UgQnVuZ2llIGlzIGdvaW5nIHRvIHJ1biB3aXRoIHRoaXMgcmlkaWN1bG91cyBzdG9yeSB3aGVyZSB0aGUgaGFwbGVzcyBjYXN0IG9mIE5QQ3MgYXJlIGdvaW5nIHRvIHF1ZXN0aW9uIHRoZSBvcmRlciBvZiBldmVudHMgdGhhdCB3ZSB3ZXJlIGxpdGVyYWxseSB0aGVyZSBmb3IuCllvdSBjb3VsZCBwbGF5IHBva2VyIG9ubGluZSBhdCBzY2hvb2wgaWYgeW91ciBzY2hvb2wgaXMgbm90IGJsb2NraW5nIHdlYnNpdGVzIHRoYXQgYXJlIGZsYWdnZWQgdW5kZXIgdGFnICJHYW1ibGluZyIgb3Igc2ltaWxhci4gTW9zdCBzY2hvb2xzIGFyZSBibG9ja2luZyB0aGVzZSB3ZWJzaXRlcyBhbG9uZyB3aXRoIHNvY2lhbCBuZXR3b3JrcyBsaWtlIEZhY2Vib29rLiBJbmZvcm1hdGlvbiBvbiBob3cgdG8gdXNlIGEgcHJveHkgY2FuIGJlIGZvdW5kIG9uIHRoZSByZWxhdGVkIGxpbmtzIG9mIHRoaXMgcXVlc3Rpb24uIFRoZSBiZXN0c2l0ZSBvbiB0aGF0IG5ldHdvcmsgaXMgYnkgZmFyIENhcmJvbiBQb2tlci4gVGhleSBvZmZlciBhIDEwMCVkZXBvc2l0IGJvbnVzLCB1cCB0byAkNjAwLCBhbmQgdGhleSBoYXZlIHNvbWUgYXdlc29tZSBwcm9tb3Rpb25zZ29pbmcgb24gcmlnaHQgbm93LiBvbmxpbmUgcG9rZXIgc2l0ZXMuIEJlc2lkZXMgdGhlbSB0aGVyZWlzIEp1aWN5U3Rha2VzLCBMb2NrLCBCZXRPbmxpbmUsIFNwb3J0c2Jvb2ssIEFtZXJpY2Enc0NhcmRyb29tLEJsYWNrY2hpcFBva2VyIGFuZCBhIGZldyBtb3JlLiBJIHBlcnNvbmFsbHkgcmVjb21tZW5kIEp1aWN5U3Rha2VzLiAoRnVsbCBBbnN3ZXIpClRoaXMgaXNuIGdyYWRlIDUgd2hlcmUgeW91IGJvYXN0IHRoYXQgeW91IGRvbiBldmVyeW9uZSBmbGluY2hlcy4gClBva2VyIGlzIGFzIG11Y2ggc2tpbGwgYXMgaXQgaXMgY2hhbmNlLiAKVGhlIHJvbGUgb2YgYSBjb3JvbmVyIGlzIHVzdWFsbHkgdG8gaW5xdWlyZSBpbnRvIGRlYXRocyAgIHZpb2xlbnQgZGVhdGhzLCBhY2NpZGVudGFsIGRlYXRocyBhbmQgdGhvc2Ugb2YgdW5rbm93biBjYXVzZS4gClRoZSBzdGF0ZSB2b3RlZCA2OSB0byAzMSBwZXJjZW50IFR1ZXNkYXkgdG8gcGFzcyBBbWVuZG1lbnQgMTMsIHdoaWNoIGJhbnMgdGhlIHNwb3J0IGJlZ2lubmluZyBvbiBKYW4uIApEaWUga3JlaXNjaGVuIGplZGVzIG1hbCB3ZW5uIGVpbmUgQ2FyYm9udGF4IHZvcmdlc2NoYWdlbiB3aXJkIGh5dGVyaXNjaCBydW0gYmVyIE1VSCBPTkUgUEVSQ0VOVCB1bmQgaWhyZW4gYWNoIHNvIGdlaWxlbiBHcmVlbiBOZXcgRGVhbCAoZGVyIG5pY2h0IG1hbCB3YXMgYnJpbmdlbiB3cmRlLiBLZWluIENhcmJvbiBQcmljaW5nIHVuZCBrZWluZSBDYXJib24gVGF4LCBkYWZyIGVpbmUgSm9iIGd1YXJhbnRlZSBiZWksIHdhaXQgZm9yIGl0LCBWb2xsYmVzY2hmdGlndW5nLiAKSW4gdGhlIE5ldGhlcmxhbmRzIHRoZSB2YWx1ZSBvZiB5b3VyIGNlcnRpZmljYXRlIGlzIHRoZSBzYW1lIHJlZ2FyZGxlc3Mgb2YgdGhlIHVuaXZlcnNpdHkgeW91IGdvIHRvLiBUaGUgdW5pdmVyc2l0aWVzIG1vc3RseSBkaWZmZXIgaW4gdGhlIHdheSB0aGF0IHRoZXkgdGVhY2ggeW91IGFuZCB3aGljaCBjb3Vyc2VzIHRoZXkgZ2l2ZSB5b3UuVGhlIG9uZXMgSSBlbmpveWVkIG1vc3Qgd2VyZSBpbiBSb3R0ZXJkYW0gYW5kIGluIFNjaGV2ZW5pZ2VuLCBhbmQgZGVwZW5kaW5nIG9uIHlvdXIgc3R1ZGllcyBMZWlkZW4gaXMgeW91ciBiZXN0IGJldCwgZ2l2ZW4gdGhhdCBpdCBhbW9uZyB0aGUgdG9wIDMwIHVuaXZlcnNpdGllcyBpbiB0aGUgd29ybGQgZXNwZWNpYWxseSBpbiB0ZXJtcyBvZiB0aGUgc2NpZW5jZXMgYW5kIGN1bHR1cmUgc3R1ZGllcy5QbHVzLCBMZWlkZW4gc3R1ZGVudCBsaWZlIGlzIGFtYXppbmcuIApnYW1lcyB0ZWFjaCBwbGF5ZXJzIGhvdyB0byBiZSBuaWNlCkFzIGZvciB0aGUgaG9sZG92ZXIgKGFnYWluIGluIG9udGFyaW8gb24gdGhlIGJvaWxlcnBsYXRlIGxpc3RpbmcgYWdyZWVtZW50KSwgaXQgZG9lc24gd29yayBxdWl0ZSB0aGUgd2F5IHlvdSBkZXNjcmliZWQgaXQuIFRoZSBhZ2VudCB3b3VsZCBoYXZlIGEgYnVyZGVuIG9mIHByb29mIHRvIHNob3cgdGhhdCB0aGV5IGludHJvZHVjZWQgdGhlIGJ1eWVyIHRvIHRoZSBwcm9wZXJ0eSBkdXJpbmcgdGhlIGNvbnRyYWN0IGluIG9yZGVyIHRvIGhhdmUgYSBjbGFpbSB0byB0aGUgY29tbWlzc2lvbi4gVGhpcyBpcyB0byBwcmV2ZW50IHBlb3BsZSBmcm9tIGhhdmluZyB0aGUgYWdlbnQgbWFya2V0IHRoZSBwcm9wZXJ0eSBhbmQgd29yayB3aXRoIGJ1eWVycyBvbmx5IHRvIGhhdmUgdGhlIGJ1eWVyIHdhaXQgZm9yIHRoZSBjb250cmFjdCB0byBleHBpcmUgYW5kIGN1dCB0aGUgYWdlbnQgb3V0IG9mIHRoZSBkZWFsLCBzYXZpbmcgdGhlIGNvbW1pc3Npb24gY29zdHMuIApBbmQgdGhlc2UgYXJlIHRoZSBtZW4gdGhhdCB3ZSBhcmUgcmVseWluZyBvbiB0byBlbmZvcmNlIHRoZSBsYXdzIGFuZCB0byBwcm90ZWN0IG91ciBmYW1pbGllcz8KUGFzIGRlIHF1b2kgZmFpcmUgdW4gcGxhdCBkZSBjZSBqdWdlbWVudC5JbmNlbmRpZSBkZSBDaGFsZXR0ZSBzdXIgTG9pbmcgOiBkc2luZm9ybWF0aW9uIGpvdXJuYWxpc3RpcXVlRXQgcG91ciBsJ2hpc3RvaXJlIGRlIENoYWxldHRlIHN1ciBsb2luZyA6VW4gcmVzcG9uc2FibGUgZHUgY29tbWlzc2FyaWF0IGRlIE1vbnRhcmdpcywgZG9udCBkcGVuZCBsYSBjb21tdW5lIGRlIENoYWxldHRlIHN1ciBMb2luZywgZXN0IGdhbGVtZW50IHN1cnByaXMgZGUgY2V0dGUgZGNsYXJhdGlvbi4gIk5vdXMgbidhdm9ucyByaWVuIGNvbmZpcm0gZXQgc3VydG91dCwgbm91cyBuJ2F2b25zIGZhaXQgYXVjdW5lIGRjbGFyYXRpb24gc3VyIGxlIHN1amV0Iiwgbm91cyBhIHQgaWwgYWZmaXJtLiAKTWFuIHRvb2sgcGhvdG9zIG9mIGhpcyB3aWZlIGFzIHNoZSB3YXMgbGVkIGF3YXkgYnkgdGhlIHZhbXBpcmVzLiBTaG91dGVkIHRvIGhpbSB0byBzdG9wIHRha2luZyBwaG90b3MgYW5kIHNhdmUgaGVyLiBNYW4gY29udGludWVkIGhpcyBwaG90b2dyYXBoaW5nLi4gCkl0IHdpbGwgYmUgcHVibGlzaGVkIGluIDIwMjAuYWJvdXQgYW4gaW1wZXJmZWN0IENoaW5lc2UgZ2lybCB3aG8gZmFpbHMgaGVyIHNlbmlvciB5ZWFyIG9mIGhpZ2ggc2Nob29sIGFuZCB0aGVuIGhhcyBhbiB1bnN1Y2Nlc3NmdWwgY29sbGVnZSBhcHBsaWNhdGlvbiBzZWFzb24sIHNheXMgV29uZy4gcGFyZW50cyBzZW5kIGhlciB0byBCZWlqaW5nLCBhbmQgYWxsIHNvcnRzIG9mIGNyYXp5IGFuZCBmdW4gc2hlbmFuaWdhbnMgZW50YWlsLi4gCk9rIHlvdXIgcmlnaHQsIHRoZSBkYXJrIG5ldCBleGlzdHMgYW5kIG90aGVyIGZyaW5nZSB0aGluZ3MsIGJ1dCB3aXRoIG15IGRvbGxhciB0aGF0IG15IGJvc3MgcGF5cyBtZSBpbiB0aGF0IGlzIHJlY29nbml6ZWQgYnkgOTglIG9mIHRoZSB3b3JsZHMgcG9wdWxhdGlvbiwgSSBib3VnaHQgYSBob3VzZSwgYSBjYXIsIGFuZCBhIHdhdGVyIGJvdHRsZSB3aXRoIGVhc2UgYW5kIGJlIGFibGUgdG8gc2VsbCBpdCBiYWNrIGFnYWluIGF0IGEgcHJvZml0IGFuZCB0cmFuc2ZlciBpdCB0byB0aGUgZXVyby4gVGhpbmdzIHlvdSBjYW5ub3QgZG8gd2l0aCBjcnlwdG8uLiAKTm90IGV2ZXJ5IHRhYmxlIHdhcyBlbGlnaWJsZSAobGlrZSB0aGUgaGlnaGVyIHN0YWtlZCBnYW1lcyksIGJ1dCBhbGwgdGhlICQxLyQzIHRhYmxlcyBXRVJFIGVsaWdpYmxlLiAKTGFib3IgdHJhZmZpY2tpbmcgaGFzIGJlZW4gZm91bmQgaW4gZGl2ZXJzZSBsYWJvciBzZXR0aW5ncyBpbmNsdWRpbmcsIGRvbWVzdGljIHdvcmssIHNtYWxsIGJ1c2luZXNzZXMsIGxhcmdlIGZhcm1zLCBhbmQgZmFjdG9yaWVzLgpQZXJ1IGFsc28gaGFzIHRoZSBMYXkncyBEaXBzIGJyYW5kLCB3aGljaCBpbmNsdWRlcyBhIFBlcnV2aWFuIENyaW9sbG8gQ2hpbGkgc2F1Y2Ugc2FjaGV0LiBbIGVkaXQgXSBBc2lhIE9uZSBmbGF2b3VyIHNvbGQgcHJpbWFyaWx5IGluIHNvdXRoZXJuIEFzaWEgaXMgY2FsbGVkICJNYWdpYyBNYXNhbGEiLiAKMTUuQmVlZGllIGV4ZWN1dGl2ZSBIb3V0YW4gUmFmaWkgd2FzIG5vdCBhdmFpbGFibGUgdG8gc3BlYWsgd2l0aCBUaGUgVmFuY291dmVyIFN1biBvbiBzaG9ydCBub3RpY2UgYWhlYWQgb2YgQ2hyaXN0bWFzIGFuZCBpcyBvdXQgb2YgdGhlIGNvdW50cnkgbm93IHdpdGggbGltaXRlZCBhY2Nlc3MgdG8gZW1haWwuVGhlIGNvbXBhbnkncyBwcm9wb3NhbCBmb2xsb3dzIGNvbmRvIHByb2plY3RzIG9uIG5lYXJieSBNYWluIFN0cmVldCBpbiBDaGluYXRvd24gYmVpbmcgYnVpbHQgYnkgb3RoZXIgY29tcGFuaWVzLCBTb2x0ZXJyYSBhbmQgV2VzdGJhbmssIHdoaWNoIHRoZSBjaXR5IGFsbG93ZWQgYmFzZWQgb24gYSAyMDExIG5laWdoYm91cmhvb2QgcGxhbiBmb3IgdGFsbGVyIGJ1aWxkaW5ncy5CZWVkaWUgYm91Z2h0IGl0cyBzaXRlIGF0IDEwNSBLZWVmZXIgaW4gMjAxMyBmb3IgJDE2LjIgbWlsbGlvbi4gCkF1ZGllbmNlcyBzb21lIHllYXJzIGFnbyAgIHRocmVlIGRpZmZlcmVudCBkaXJlY3RvcnMgaGFuZGxlIHRoZWlyIG93biByZXNwZWN0aXZlIGZpbG1zLCBjb25uZWN0ZWQgdG9nZXRoZXIgYnkgYSBzdG9yaWVkIGNyaW1lLCBvciwgbW9yZSBwcmVjaXNlbHksIGJ5IHRoZSBodW50IGZvciBhbiBlc2NhcGVkIHNleCBvZmZlbmRlci4gVGhpcyBpcyBub3QgYSB0cmlsb2d5IHRoYXQgcmVxdWlyZXMgYW4gb3JkZXJlZCwgY29uc2VjdXRpdmUgdmlld2luZyBvZiB0aGUgdGhyZWUgZmlsbXMuIApJIGFjdHVhbGx5IGhhZCBzb21lb25lIGRvIGEgc2ltaWxhciB0aGluZy4gV2UgaGFkIGEgZnJlZSBjb21pYyBnaXZlYXdheSBmb3IgYSByYW5kb20gcmVhZGluZyBkYXkgYW5kIGhhZCBhIHRvbiBsZWZ0b3Zlci4gCkhlbGwsIGF0IHNvbWUgcGxhY2VzIG1lcmVseSBleHBvc2luZyB5b3VyIGhvbGUgY2FyZHMgd2l0aCBhY3Rpb24gcGVuZGluZyBraWxscyB5b3VyIGhhbmQuIApWb2dlbCBMaXRlcmFyeSBBd2FyZCB3aW5uZXIgQW5kcmV3IENyb29tZSBsYXVuY2hlZCBoaXMgc2Vjb25kIGJvb2ssIE1pZG5pZ2h0IEVtcGlyZSwgYXQgYSBwYWNrZWQgbHVuY2ggYXQgTWFuaGF0dGFuJ3MgcmVzdGF1cmFudCBpbiBBbGJ1cnkuIApUaGVuIGhlIHdhcyBwbGF5aW5nIGdyZWF0IGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyBzZWFzb24sIGJ1dCBnb3QgaW5qdXJlZCBhZ2FpbiAoYWxvbmcgd2l0aCBTdWJiYW4sIEZvcnNiZXJnLCBBcnZpZHNzb24sIFNtaXRoLCBTaXNzb25zLCBTYWxvbWFraSwgUmluYWxkbyBhbmQgc29tZSBvdGhlcnMgSSBzdXJlIEkgZm9yZ2V0dGluZyAgIHdobyB3ZXJlIGFsbCBvdXQgZm9yIGV4dGVuZGVkIHBlcmlvZHMgc2luY2UgRGVjZW1iZXIvSmFudWFyeSBhdCB0aGUgc2FtZSB0aW1lKSBhbmQgaGFzIGJlZW4gY29tcGxldGVseSBpbnZpc2libGUgc2luY2UgaGUgcmV0dXJuZWQuSSB3aWxsIHNheSBpdCBub3Qgb25seSBoaW0uIE1vc3Qgb2YgdGhlIHBsYXllcnMgd2hvIHJldHVybmVkIGZyb20gaW5qdXJ5IGhhdmUgYmVlbiBwbGF5aW5nIHBvb3JseSBzaW5jZSB0aGV5IHJldHVybmVkLCBtb3N0IG5vdGljZWFibHkgRm9yc2JlcmcuIApBbiBhcnRpY2xlIG11c3QgYmUgcHJpbWFyaWx5IHdyaXR0ZW4gaW4gRW5nbGlzaCBmb3IgdXMgdG8gYmUgYWJsZSB0byBtb2RlcmF0ZSBpdCBhbmQgZW5mb3JjZSBvdXIgcnVsZXMgaW4gYSBmYWlyIGFuZCB1bmJpYXNlZCBtYW5uZXIuIE1vcmUgSW5mby4KRGlldGFyeSBpbnRha2Ugb2YgZmF0dHkgYWNpZHMgYW5kIGZpc2ggaW4gcmVsYXRpb24gdG8gY29nbml0aXZlIHBlcmZvcm1hbmNlIGF0IG1pZGRsZSBhZ2UKIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29OaWNlLCBJIHVzZWQgdGhhdCB0ZW1wbGF0ZSBiZWZvcmUgdG8gaW5mb3JtIGF0dGVtcHQgc2VsZWN0aW9ucy4gRGlkbiBmb2xsb3cgaXQgc3RyaWN0bHkgYnV0IGl0IHdhcyB1c2VmdWwgZm9yIGdldHRpbmcgaWRlYXMgb2Ygd2hhdCBzb3J0IG9mIGF0dGVtcHRzIHdlcmUgYXBwcm9wcmlhdGUuIFRoZSBsZXNzIHlvdSBoYXZlIHRvIHdvcnJ5IGFuZCBzdHJlc3MgYWJvdXQgdGhlIGJldHRlci5BbHNvLCB0aGVyZSBpcyB1c3VhbGx5IGEgbWVldCBhbmQgbWVldHMgdGhyZWFkIHBvc3RlZCBvbiBhIG1vbnRobHkgYmFzaXMgaGVyZS4gCkluIGV2ZXJ5IG9uZSBvZiB0aG9zZSBwbGFjZXMsIHdlIGZpbmQgYSBDYW5hZGllbnMgYmFyIHRoYXQgd291bGQgc2hvdyB0aGUgZ2FtZXMuIEFueXdoZXJlIHlvdSBnbywgeW91IGFsd2F5cyBmaW5kIGEgYmFyIHRoYXQgZ29pbmcgdG8gc2hvdyBDYW5hZGllbnMgZ2FtZXMuIApJIHdvdWxkIG5ldmVyIHdhbnQgdG8gYmUgd2l0aCBzb21lb25lIHdobyB3b3VsZCBwdWJsaWNseSBkZW5pZ3JhdGUgbWUgc28gdGhhdCBhbGwgbXkgZnJpZW5kcyBjb3VsZCBzZWUgaXQgYW5kIGNvbW1lbnQgb24gaXQgYW5kIEkgd291bGQgd2FudCB0byBtZSB3aXRoIHNvbWVvbmUgdGhhdCBJIHJlc3BlY3QgZW5vdWdoIHRvIGFsc28gcmVmcmFpbiBmcm9tIGRvaW5nIHRoYXQgdG8gdGhlbS4gCkFuZCBpZiBoZSBoYXMgYmVlbiwgd2UgaGF2ZSBubyBpZGVhIGlmIHRob3NlIGludm9sdmVkIHNleCB0cmFmZmlja2luZyBvZiBhbnkga2luZC4gSWYgeW91IHdpbGxpbmcgdG8gY29uZGVtbiBzb21lb25lIGJhc2VkIG9mZiBvZiBwdXJlIHNwZWN1bGF0aW9uIGFuZCBjYWxsIHRoZW0gYSAiZGlzZ3VzdGluZyByYXBpc3QsIiB0aGVuIHRoYXQgeW91ciBwZXJvZ2F0aXZlLiAKWW91IHByb2JhYmx5IG5lZWQgdG8gYnV5IGEgbG90IG9mIGNvbnRyb2wgd2FyZHMsIEkgZG9uIG1haW4gc3VwcG9ydCBidXQgcGVvcGxlIGluIGhpZ2ggZWxvIHVzdWFsbHkgYXZlcmFnZXMgMTUgMjAgY29udHJvbCB3YXJkcyAoIGFzIHN1cHBvcnQpIGluIGEgMzAgbWluIGdhbWUuIE9uY2UgeW91IGhhdmUgbGlrZSAyIGl0ZW1zIG9uIHN1cHBvcnQsIHlvdSBzaG91bGQgY29uc3RhbnRseSBoYXZlIDIgMyBjb250cm9sIHdhcmRzIGluIHlvdXIgaW52ZW50b3J5IGFuZCBjb25zdGFudGx5IHVzZSBpdCB0byBkZW55IHZpc2lvbi4gQWxzbyBsb29rIGF0IHdoZXJlIHRoZSBlbmVteSBzdXBwb3J0IGhhcyBiZWVuLCBzbyB5b3Uga25vdyB3aGVuIHRvIHVzZSB5b3VyIHJlZCB0cmlua2V0LiBIYXZpbmcgdmlzaW9uIGluIGtleSBhcmVhcywgYnV0IGZpZ2h0aW5nIGluIHRoZW0gaXMgYWxzbyB2ZXJ5IGltcG9ydGFudC4gQW4gZXhhbXBsZSB3b3VsZCBiZSB3aGVuIGRyYWdvbiBpcyBzcGF3bmluZyBpbiAzMCBzZWNzLiBVIHdvdWxkIHdhbnQgdGhhdCBhcmVhIHRvIGJlIGFzIGJyaWdodCBhcyB0aGUgc3VuIHdoZW4geW91IGd1eXMgZ28gYW5kIHRha2UgdGhlIGRyYWdvbiBSYXRoZXIgdGhhbiBoYXZpbmcgc29tZXRoaW5nIHBpdGNoIGRhcmsgYW5kIGdvaW5nIGluIHRoZXJlIGJsaW5kIHdpdGhvdXQgYW5kIGluZm8uCkkgcmVhbGx5IGxpa2UgdGhlIHNpdGUgYnV0IHRoZXkgbmVlZCB0byBjaGFuZ2UgYnV5IGluIHN0cnVjdG9yIGZvciBjYXNoLiAKRG8gbm90IHdvcnJ5IGRlc3BpdGUgdGhlaXIgbmFtZSB0aGVpciBhcHByb2FjaCBpcyBub24gc2VjdWxhciwgYW5kIHdvbiBwdXNoIHJlbGlnaW9uIG9uIHlvdSBpZiB5b3UgZG9uIHNob3cgaW50ZXJlc3Qgb24gdGhlbSAoSSBhZ25vc3RpYywgYW5kIEkgdG9sZCB0aGVtIHRoYXQsIHRoZXkgc3RpbGwgdHJlYXRlZCBtZSB3aGVuIEkgbWV0IHdpdGggdGhlaXIgdGhlcmFwaXN0cyBhIGNvdXBsZSBvZiB5ZWFycyBiYWNrKS4gClB1bnRhIGRlIE1pdGEgVG91cmlzbVB1bnRhIGRlIE1pdGEgSG90ZWxzUHVudGEgZGUgTWl0YSBCZWQgYW5kIEJyZWFrZmFzdFB1bnRhIGRlIE1pdGEgVmFjYXRpb24gUmVudGFsc1B1bnRhIGRlIE1pdGEgVmFjYXRpb24gUGFja2FnZXNGbGlnaHRzIHRvIFB1bnRhIGRlIE1pdGFQdW50YSBkZSBNaXRhIFJlc3RhdXJhbnRzVGhpbmdzIHRvIERvIGluIFB1bnRhIGRlIE1pdGFQdW50YSBkZSBNaXRhIFRyYXZlbCBGb3J1bVB1bnRhIGRlIE1pdGEgUGhvdG9zUHVudGEgZGUgTWl0YSBNYXBQdW50YSBkZSBNaXRhIFRyYXZlbCBHdWlkZUFsbCBQdW50YSBkZSBNaXRhIEhvdGVsc1B1bnRhIGRlIE1pdGEgSG90ZWwgRGVhbHNMYXN0IE1pbnV0ZSBIb3RlbHMgaW4gUHVudGEgZGUgTWl0YUhvdGVscyBuZWFyIFRoZSBTdC4gUmVnaXMgUHVudGEgTWl0YSBSZXNvcnRCeSBIb3RlbCBUeXBlUHVudGEgZGUgTWl0YSBCZWFjaCBIb3RlbHNQdW50YSBkZSBNaXRhIEZhbWlseSBIb3RlbHNQdW50YSBkZSBNaXRhIFJlc29ydHNQdW50YSBkZSBNaXRhIFNwYSBSZXNvcnRzUm9tYW50aWMgSG90ZWxzIGluIFB1bnRhIGRlIE1pdGFQdW50YSBkZSBNaXRhIEJ1c2luZXNzIEhvdGVsc1B1bnRhIGRlIE1pdGEgTHV4dXJ5IEhvdGVsc1B1bnRhIGRlIE1pdGEgR3JlZW4gSG90ZWxzQnkgSG90ZWwgQ2xhc3M1IHN0YXIgSG90ZWxzIGluIFB1bnRhIGRlIE1pdGE0IHN0YXIgSG90ZWxzIGluIFB1bnRhIGRlIE1pdGEzIHN0YXIgSG90ZWxzIGluIFB1bnRhIGRlIE1pdGFQb3B1bGFyIEFtZW5pdGllc1B1bnRhIGRlIE1pdGEgSG90ZWxzIHdpdGggUG9vbHNQZXQgRnJpZW5kbHkgSG90ZWxzIGluIFB1bnRhIGRlIE1pdGFQb3B1bGFyIFB1bnRhIGRlIE1pdGEgQ2F0ZWdvcmllc0NvdXBsZXMgUmVzb3J0cyBpbiBQdW50YSBkZSBNaXRhQm91dGlxdWUgUmVzb3J0cyBpbiBQdW50YSBkZSBNaXRhV2VkZGluZyBSZXNvcnRzIGluIFB1bnRhIGRlIE1pdGFQdW50YSBkZSBNaXRhIEFsbCBJbmNsdXNpdmUgRmFtaWx5IFJlc29ydHNQdW50YSBkZSBNaXRhIEFsbCBJbmNsdXNpdmUgSG9uZXltb29uIFJlc29ydHNQdW50YSBkZSBNaXRhIENoZWFwIEJlYWNoIEhvdGVsc1B1bnRhIGRlIE1pdGEgQWR1bHRzIE9ubHkgQWxsIEluY2x1c2l2ZSBSZXNvcnRzUHVudGEgZGUgTWl0YSA1IFN0YXIgUmVzb3J0c1B1bnRhIGRlIE1pdGEgTHV4dXJ5IExvZGdlc0JlYWNoIFJlc29ydHMgaW4gUHVudGEgZGUgTWl0YU5lYXIgTGFuZG1hcmtzSG90ZWxzIG5lYXIgU3VyZm1leEhvdGVscyBuZWFyIE1hbGEgU3VlcnRlSG90ZWxzIG5lYXIgUHVudGEgTWl0YSBUcmFuc2ZlcnNIb3RlbHMgbmVhciBNYXNzYWdlcyBEZW1hckhvdGVscyBuZWFyIEhlYWxpbmcgSGFuZHMgTWFzc2FnZSBhbmQgQXl1cnZlZGljIFNwYUhvdGVscyBuZWFyIEVsIEFuY2xvdGVIb3RlbHMgbmVhciBQdW50YSBNaXRhIEdvbGYgQ291cnNlSG90ZWxzIG5lYXIgQmlnIFR1bmEgRmlzaGluZyBDaGFydGVyc0hvdGVscyBuZWFyIFB1bnRhIE1pdGEgRXhwZWRpdGlvbnNIb3RlbHMgbmVhciBNaXRhIFN1cmYgQ2x1Yk5lYXIgQWlycG9ydHNPcmRheiBIb3RlbHNBbGwgUHVudGEgZGUgTWl0YSBSZXN0YXVyYW50c1Jlc3RhdXJhbnRzIG5lYXIgVGhlIFN0LiBSZWdpcyBQdW50YSBNaXRhIFJlc29ydEFsbCB0aGluZ3MgdG8gZG8gaW4gUHVudGEgZGUgTWl0YVRoaW5ncyB0byBkbyBuZWFyIFRoZSBTdC4gCkl0IG1heSBnaXZlIHZvdGVycyBtb3JlIGJhcmdhaW5pbmcgcG93ZXIsIHRoYXQgYSBwYXJ0eSB0aGF0IG5vIGxvbmdlciByZXByZXNlbnRzIHRoZSBpbnRlcmVzdCBvZiBpdHMgYmFzZSBtYXkgZmFsbCBvdXQgb2YgcG93ZXIuIApCZW5pbSBpemxlZGlnaW0gdmlkZW9kYSBzdWMgaXNsZW5peW9yLiBLYWRpbmluIHlhc2FkaWdpIHNleSB0cmF2bWF0aWsgYmlyIG9sYXkuIApUaGUgY2FzZSBhbHNvIGhpZ2hsaWdodHMgaG93IHBvbGljZSBhbmQgcHJvc2VjdXRvcnMgYXJlIGluY3JlYXNpbmdseSB1c2luZyBhIGJyb2FkIHJhbmdlIG9mIGFwcHJvYWNoZXMsIGluY2x1ZGluZyBkZWVwZXIgaW52ZXN0aWdhdGlvbnMgaW50byB3aWRlciBjcmltaW5hbCBuZXR3b3JrcywgY3JhY2tkb3ducyBvbiBvbmxpbmUgc2l0ZXMgd2hlcmUgam9obnMgdHJhZGUgZGV0YWlsZWQgc2V4IHJldmlld3MgYW5kIGVuZm9yY2VtZW50IG9mIHN0cmljdGVyIGNpdmlsIGNvZGVzIG9uIHRoZSBtYXNzYWdlIGluZHVzdHJ5LCBhbnRpIHRyYWZmaWNraW5nIGFjdGl2aXN0cyBzYWlkLgpBbmQgb24gdG9wIG9mIHRlbGxpbmcgcGVvcGxlIHRvIGp1c3QgImFjY2VwdCB0aGVtIHRoZSB3YXkgdGhleSBhcmUsIiB3aGlsZSB0ZWxsaW5nIGFueW9uZSB3aG8gaXMgcmVtb3RlbHkgaGVhbHRoeSB3ZWlnaHQgY29tcGFyZWQgdG8gdGhlbSB0aGF0IHRoZXkgInR3aWdzLCIgInRvbyBza2lubnksIiBhbmQgImp1c3QgbmVlZCB0byBlYXQgbW9yZSwiIHRoZXkganVkZ2UgbWVuIGZvciBjb21wbGV0ZWx5IHVuY29udHJvbGxhYmxlIHRoaW5ncyBsaWtlIHlvdSBtZW50aW9uZWQuIEkga25vdyBJIGdvaW5nIHRvIGJlIGp1ZGdlZCBmb3IgYmVpbmcgcXVpdGUgYSBiaXQgc2hvcnRlciB0aGFuIHRoZSBhdmVyYWdlIGhlaWdodCwgYW5kIEkgYWNjZXB0IHRoYXQuIEkgaG93ZXZlciBhbSBub3Qgb2theSB3aXRoIHBlb3BsZSB3aG8gZGVtYW5kIHRvIGJlIGFjY2VwdGVkIGhvdyB0aGV5IGFyZSAoZHVlIHRvIHBlcnNvbmFsIGNob2ljZXMpIHRoZW4ganVkZ2UgbWUgZm9yIHBoeXNpY2FsIGNoYXJhY3RlcmlzdGljcyBpIGFjdHVhbGx5IGhhdmUgMCBpbmZsdWVuY2Ugb24uClRoZSBzZWNvbmQgdGltZSB0aGV5IGFza2VkIHVzLCB3ZSB3ZXJlIGxvdyBvbiBjYXNoLCBhbmQganVzdCB0aXJlZCBvZiB0aGVpciBicy4gCk9uY2UgdGhlIGl0ZW0gc3RhcnRzIHNlbGxpbmcgd2VsbCwgQW1hem9uIGp1bXBzIGluIGFuZCBjYW4gcHV0IHRoZWlyIHByb2R1Y3QgYWJvdmUgdGhlIGNvbXBldGluZyBwcm9kdWN0cyBpbiB0aGUgcHJvZHVjdCBwYWdlLiBUaGlzIGRvZXNuJ3QgaGF2ZSB0byBiZSB0aGUgQW1hem9uIGJyYW5kZWQgcHJvZHVjdHMsIGl0IGNhbiBiZSBhbnl0aGluZyBhbnlvbmUgc2VsbHMgb24gQW1hem9uIE1hcmtldHBsYWNlLgpPbmxpbmUgcHJpY2UgZXZlbiBpZiBib29rZWQgYSBmZXcgbWludXRlcyBpbiBhZHZhbmNlIHdpbGwgaGFsdmUgdGhlIHR1cm4gdXAgcHJpY2UuIApTb29uIHRoaXMgc3BlY2llcyAgIHRoYW5rcyB0byBhIGZldyB1bmlxdWUgdHJhaXRzIHN1Y2ggYXMgaW50ZWxsaWdlbmNlLCBjdXJpb3NpdHksIGxhbmd1YWdlIGFuZCBjbyBvcGVyYXRpdmUgYmVoYXZpb3IgICBtYW5hZ2VzIHRvIHJlcHJvZHVjZSBhbmQgc3ByZWFkIGl0c2VsZiBleHBlZGllbnRseSBhY3Jvc3MgdGhlIGVhcnRoJ3Mgc3VyZmFjZS4gCkVzIGJlc2NocmVpYnQgd2llIHNjaG9uIGdlc2FndCBkZW4gV2VnIHZvbiBOZWlsIFN0cmF1c3MgYWxpYXMgU3R5bGUgd2llIGVyIHp1bSAuIAoiUmVpbnRlZ3JhdGlvbiBpcyBnb2luZyB0byBiZSB0aGUgdGhpbmcgdGhhdCBoYXBwZW5zIGluIHRoZSBuZXh0IHR3byB5ZWFycy4gWW91J3JlIGdvaW5nIHRvIHNlZSBhIG11Y2ggZ3JlYXRlciBkcml2ZS4gCldoYXQgZ29pbmcgb24gd2l0aCB5b3VyIGluIGxhd3MgaXMgaWxsZWdhbCAodGhlIHRoZWZ0LCBhbmQgcG9zc2libHkgdGhlIHRocmVhdHMgW2RlcGVuZGluZyBvbiB3aGF0IHRoZXkgYXJlXSwgYW5kIHByb2JhYmx5IHRoZSByZW50IGdvdWdpbmcgaWYgeW91IGhhdmUgYSB3cml0dGVuIGNvbnRyYWN0IC8gbGVhc2UgLyByZW50YWwgYWdyZWVtZW50LikKTXMgV2hpdGUgaGFzIHJlbWFpbmVkIHN0ZWFkZmFzdC4KSW4gdGhlIGxpZ2h0IG9mIHRoZXNlIG5ld3MsIFNsaW0gYW5kIGhpcyBzdGFmZiByZXdvcmtlZCB0aGUgcGxhbi4gT3BlcmF0aW9uIEV4dGVuZGVkIENhcGl0YWwgbm93IHRvb2sgb24gYW4gZXZlbiBtb3JlIGFtYml0aW91cyBhbmQgZGFyaW5nIHN0cmF0ZWd5LiBGaXJzdCwgaGUgd291bGQgbWFrZSBLYXRhbXVyYSBiZWxpZXZlIHRoYXQgdGhlIEJyaXRpc2ggd2VyZSBtYWtpbmcgYSB0ZXJyaWJsZSBtaXN0YWtlIGFuZCB0aGF0IHRoZSBlbnRpcmUgMTR0aCBBcm15IHdhcyBjcm9zc2luZyB0aGUgSXJyYXdhZGR5LiAKSXQncyBhIGNvdW50cnkuIEl0J3Mgbm90IHlvdS4gU29tZSBjb3VudHJpZXMgYXJlIGRvaW5nIGJldHRlciBpbiBjZXJ0YWluIGltcG9ydGFudCB0aGluZ3MuIFNvbWUgdGhpbmdzIHdlIGRvIHdlbGwuIFdlIHNob3VsZCBhbHdheXMgdHJ5IHRvIGRvIGJldHRlciBhbmQgc3RvcCBiYWNrc2xpZGluZy4gU3VwcmVtZSBDb3VydCBmbGlwcGVkIHRoZSBGaXJzdCBBbWVuZG1lbnRvbiBpdHMgaGVhZGJ5IHJ1bGluZywgZm9yIHRoZSBmaXJzdCB0aW1lIGV2ZXIsIHRoYXQgdGhlIENvbnN0aXR1dGlvbiBzb21ldGltZXNyZXF1aXJlc3RoZSBnb3Zlcm5tZW50IHRvIHByb3ZpZGUgcHVibGljIGZ1bmRzIGRpcmVjdGx5IHRvIGEgY2h1cmNoLiBJdHNkZWNpc2lvbmluVHJpbml0eSBMdXRoZXJhbiB2LiBDb21lcmJsZXcgYSBjaHVua291dCBvZiB0aGUgd2FsbCBiZXR3ZWVuIGNodXJjaCBhbmQgc3RhdGUuIEFuZCBvbiBNb25kYXksIEp1c3RpY2UgQnJldHQgS2F2YW5hdWdoYW5ub3VuY2VkaGlzIGludGVudGlvbiB0byBkZW1vbGlzaCB0aGUgcmVtYWluZGVyIG9mIHRoYXQgd2FsbCBieSBpbnZhbGlkYXRpbmcgbGF3cyB0aGF0IGJhciBnb3Zlcm5tZW50IHN1YnNpZGl6YXRpb24gb2YgcmVsaWdpb24uCkEgZ3JvdXAgb2YgcmVzZWFyY2hlcnMgZnJvbSBXZXN0ZXJuIEF1c3RyYWxpYSBlY2hvZWQgc2ltaWxhciBmaW5kaW5ncyBpbiAxOTk2LDMgYnV0IGJ5IHRoZW4gdGhlIE1hcnlsYW5kIHNjaWVudGlzdHMgaGFkIHJlY2VpdmVkIHJlcG9ydHMgb2YgYSBjb25uZWN0aXZlIHRpc3N1ZSBicmlkZ2UgYXQgdGhlIEMgMS9DIDIganVuY3Rpb24sIGFuZCBoYWQgY29uZHVjdGVkIGFkZGl0aW9uYWwgcmVzZWFyY2ggZGVtb25zdHJhdGluZyBhbm90aGVyIGJyaWRnZSBhdCBUIDEgYW5kIFQgMi4KTm93IHdlIGp1c3QgdHJ5aW5nIHRvIGFkanVzdCB0byBiZWluZyBhIGZhbWlseSBvZiA0LiBUaGlzIGJhYnkgaXMgc3VwZXIgY2xpbmd5LCBhbmQgaGUgaGFzIGhpcyBkYXlzIGFuZCBuaWdodHMgbWl4ZWQgdXAuIApaYWhscmVpY2hlIEdlc2NoZnRlIGJpZXRlbiBTY2huaGVpdHNhcnRpa2VsIGFuIHZvbiBkZXIgbWluZXJhbGlzaWVydGVuIFNlaWZlIGJpcyBoaW4genVtIFNjaG5oZWl0cyBUZWUgYXVzIGRlbSBIaW1hbGF5YS4gVmllbGUgQm91dGlxdWVuIHNpbmQgZW50c3RhbmRlbiwgZGllIGluZGl2aWR1ZWxsZSBLbGFzc2Ugc3RhdHQgV2FyZSB2b24gZGVyIFN0YW5nZSBhbmJpZXRlbi4gWnUgbmVubmVuIHNpbmQgZGFzIExhYmVsIExpZWJlc2tpbmQgYXVzIEJlcmxpbiwgZGFzIEdyYW5kIEhvdGVsIG9mIFN3ZWRlbiBvZGVyIGRlciBGYWlyIFRyYWRlIEFuYmlldGVyIGxvdmUgaXQgZ3JlZW4uCkJ1dCB5b3UgY2FuIGFsc28gc2VydmUgc29tZSBub24gYWxjb2hvbGljIHJlZnJlc2htZW50cyBhbmQgZHJpbmtzIGxpa2UgY2hpbGxlZCB3YXRlciwgd2luZSwgYW5kIGNvbGFzLiAKUk5HIGlzIHN0aWxsIGF0IHBsYXkgYnV0IHlvdSBkb24gbmVlZCB0byByZWx5IG9uIGEgcmFuZG9tIGxlZ2VuZGFyeSBkcm9wIHRvIGdldCBnZWFyZWQgbGlrZSBiZWZvcmUuLiAKS25vd24gYXMgYSAiV2l6YXJkIEF3YXJkIiBpbiBwaW5iYWxsIGNpcmNsZXMsIHRoZSBiaWcgcG9pbnRzIGFyZSBzY29yZWQgaW4gdGhpcyBtb2RlLiAKU2hlIHNldCB1cCBhIHRhYmxlIGluIHRoZSBwb3NoIHBsYXphIGhvdGVsIGFuZCB0b29rIGFpbSBhdCB0aGUgYmlnIGFwcGxlJ3MgcmVhZHkgc3VwcGx5IG9mIHBva2VyIGRydW5rIFJ1c3NpYW4gYmlsbGlvbmFpcmVzIGFuZCBoZWRnZSBmdW5kIG1hbmFnZXJzLiBTaGUgc2F5cyBoZXIgdGFrZSBzcGlrZWQgdXAgdG8gJDE1MCwwMDAgaW4gYSBzaW5nbGUgZ2FtZS4gSSB3YXMgaG9zdGluZyBhIGdhbWUgaW4gbmV3IFlvcmssIGFuZCB0aGVyZSB3YXMgJDUgdG8gJDcgbWlsbGlvbiBvbiB0aGUgdGFibGUuIAoiQ2hpbmEncyB0cmFuc2Zvcm1hdGlvbiB0byBoaWdoIGVuZCBtYW51ZmFjdHVyaW5nIGFuZCBoaWdoIHZhbHVlIGFkZGVkIHNlcnZpY2VzIGlzIGFsc28gYSBzdGVwIENoaW5hIG11c3QgZ28gdGhyb3VnaCBmb3IgaXRzIGRvbWVzdGljIHN1c3RhaW5hYmxlIGRldmVsb3BtZW50LCIgc2hlIHNhaWQuCk15IHNvbiByYXJlbHkgbGlzdGVuZWQgdG8gd2FybmluZ3MuIEkgd291bGQgc2F5IGhvdCBhbmQgdGhlIGZpcnN0IG1vbWVudCBoZSBnb3QgYSBjaGFuY2UgaGUgd291bGQgdG91Y2ggdGhlIG9iamVjdC4gClBpbmVhcHBsZU9rcmEgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvClRoZXkncmUgYWJvdXQgcmVwdXRhdGlvbiAgIGFuZCB3aGVuIHBhdGllbnQgY2FyZSBoYXMgY29tZSB0byBkZXBlbmQgb24gZGlzcHV0ZXMgYWJvdXQgcmVwdXRhdGlvbiwgbWVkaWNpbmUgaXMgdmVyeSBzb3JlbHkgaW4gbmVlZCBvZiBldGhpY2FsIGlucHV0LiIuIApJZiB0aGVyZSBpcyBhIGJldCBhbmQgYSBwbGF5ZXIgYWN0aW5nIGFmdGVyIHRoZSBiZXQgbXVzdCBjYWxsLCBmb2xkIG9yIHJhaXNlLiAKV2Ugd2FudCB0byBncmFiIG91ciBjdXN0b21lcnMgd2hlbiB0aGV5IGFyZSBzaXR0aW5nIGluIGZyb250IG9mIHRoZWlyIGNvbXB1dGVycywgbm90IHdoaWxlIHRoZXkgYXJlIHdhdGNoaW5nIFRWIG9yIHJlYWRpbmcgYSBtYWdhemluZS4gCkRpc2MgY2hlY2sgKHJlcXVpcmVzIHRoZSBDRC9EVkQgaW4gdGhlIGRyaXZlIHRvIHBsYXkpIFdpbmRvd3MgLiAKVGhleSBleHBlcmltZW50ZWQgb24gbWFueSBjcmVhdHVyZXMgYW5kIHdlcmUgYWJsZSB0byBtYWtlIGEgbG90IG9mIHRoZW0gc21hcnRlci4gQnV0IHRoZSBwbGFuIGJhY2tmaXJlZCBzaW5jZSBvbmUgb2YgdGhlIG1vbnN0ZXJzIHJlYWQgdGhlIHdpemFyZHMgbWluZCBhbmQgdGhleSBmb3JtZWQgcmViZWxsaW9uLiAKVGhlcmUgYXJlIG1hbnkgc2xlZXAgcmVsYXRlZCBkaXNlYXNlcyBzdWNoIGFzIGluc29tbmlhLiBJbnNvbW5pYSBpcyBhIHNsZWVwIHByb2JsZW0gZGVmaW5lZCBhcyB0aGUgaW5hYmlsaXR5IHRvIGZhbGwgb3Igc3RheSBhc2xlZXAuIApFeGN1c2UgeW91LiBOb3J3YXkgaGFzIHF1aXRlIGhpZ2ggdGF4YXRpb24uCkl0IHdhcyBtZWFudCB0byBiZSBhbXBoaWJpb3VzLiBhIG1hc3NpdmUgYW1waGliaW91cyBtaWxpdGFyeSBqZXQuCkkgY2FuIHRyeSBhIHNpbXBsZSB0aG91Z2h0IGV4cGVyaW1lbnQ6IGlmIHlvdSBjb3VsZCwgc2F5LCBhbm9ueW1vdXNseSBzYWNyaWZpY2UgYSBsaXR0bGUgd2VsbCBiZWluZyBvbiB5b3VyIHBhcnQgdG8gZ3JhbnQgdGhlbSB0aGVpciBiaWdnZXN0IGRyZWFtcywgSSBwb3NpdCB0aGF0IHlvdSBkbyBpdCwgZXZlbiBpZiB0aGV5IG5ldmVyIGtub3cgaXQgd2FzIHlvdS4gCkhvYmVzbWFydCB1CkdvZCBpcyB3YXJuaW5nIHVzIG9mIHRoaXMgZ3JlYXQgdHJvdWJsZSBvZiBiaXJ0aCBwYWluIGNvbWluZyB0byBwYXNzIHZlcnkgc2hvcnRseS4gClRoZSBzeXN0ZW0gbGl0ZXJhbGx5IHBhaXJlZCB1cyB3aXRoIHRoZSBwbGF5ZXJzIHdobyBoYWQgdGhlIHdvcnN0IHBvc3NpYmxlIHN0YXRzIHRvIGVuc3VyZSB0aGF0IG91ciB3aW5yYXRlIHN0YXlzIGNsb3NlIHRvIDUwJS4gCk9uY2UgeW91IGF0IHRoZSB0YWJsZSwgdGVsbCBldmVyeW9uZSB5b3UgbmV3IHRvIHRoZSBnYW1lLiAKMTAlIGluY3JlYXNlIG1heCB3YXMgYWxsIHRoZXkgd2VyZSBwZXJtaXR0ZWQgdG8gb2ZmZXIuIApDaGVlemJlYW5zIHUKSSBjb21lIHRvIHRoaXMgY29uY2x1c2lvbiwgYmVjYXVzZSBteSBQQyBkb24gZXZlbiBsb2FkIG1haW4gaHViIGFyZWFzIHByb3Blcmx5IG5vdy4gCkkgbm90IGNvbmZpZGVudCB0aGF0IEp1bmUgd2lsbCBnZXQgdG8gc2VlIE5pY2sgYSB3aG9sZSBsb3QgaW4gU2Vhc29uIDMsIHNvIEkgbm90IHN1cmUgdGhhdCB3ZSB3aWxsIGVpdGhlci4gQWxzbywgYSBtYWluIG1lc3NhZ2Ugb2YgdGhlIHNob3cgaXMgc3VwcG9zZWQgdG8gYmUgdGhhdCB3b21lbiBkb24gbmVlZCBtZW4gdG8gc2F2ZSB0aGVtLiAKWW91ciBiYWJ5IHRoZXJlZm9yZSBuZWVkcyB0byBiZSBpbiBhIHdhcm0gZW52aXJvbm1lbnQgICByZW1lbWJlciB0aGF0IGJhYmllcyBhcmUgbm90IGdvb2QgYXQgcmVndWxhdGluZyB0aGVpciBib2R5IHRlbXBlcmF0dXJlIGFuZCBjb29sIGRvd24gbXVjaCBxdWlja2VyIHRoYW4gYWR1bHRzLiAKVGhlIHRob3VnaHQgaXMgdG8gbWFrZSB1c2Ugb2YgbWFzc2FnZSB0byBoZWxwIGN1dCBiYWNrIHRpc3N1ZSBzd2VsbGluZyBhbmQgZGlzY29tZm9ydCBmb3IgYW50aWNpcGF0aW5nIG1vbXMuLiAKVGhpcyBtaWdodCBub3Qgc2VlbSB0b28gYmFkIGJ1dCB3ZSBsaXZlIGluIGFuIGFyZWEgd2l0aCBhIGxvdCBvZiByZWZpbmVyaWVzIGFuZCB0aGV5IGxpa2UgdG8gb3JkZXIgMjAgNDAgZnVsbCBtZWFscyBhdCBvbmUgdGltZSBhbmQgeW91IGNhbiBpbWFnaW5lIGV2ZXJ5b25lIHdhbnRpbmcgYSBkaWZmZXJlbnQgY3V0IGFuZCB0ZW1wZXJhdHVyZSBvZiBzdGVhaywgd2l0aCBkaWZmZXJlbnQgc2lkZXMsIHNwZWNpYWwgc3R1ZmYgbGlrZSBubyBvbmlvbnMsIGRyaW5rcywgZXRjLiBpdCBhbGwgYWRkcyB1cC4KV2Ugd2VyZSByZWFsbHkgc3R1bm5lZCBhdCB3aGF0IHdlIGp1c3Qgc2F3LiBXaG8gaW4gdGhlaXIgcmlnaHQgbWluZCB3b3VsZCBkbyBzdWNoIGEgdGhpbmc/IFdoeT8gV2UgYWxsIGhhZCB0aGUgYnJhdmFkbyB0aGluZyBnb2luZyBvbiwgYnV0IHRoYXQgaXMgb25lIG9mIHRoZSBzY2FyaWVzdCB0aGluZ3MgSSBjYW4gZXZlbiBpbWFnaW5lIGRvaW5nLiAKSWYgSSBtZXQgbW9yZSBmZW1pbmlzdHMgdGhhbiBub3QgdGhhdCBoYWQgYSBkaXNjdXNzaW9uIGxpa2UgdGhpcyB3aXRoIG1lLCBJIHdvdWxkbid0IGZlZWwgdGhlIHdheSBJIGRvLiAKUG9rZXIgUHJvIEd1cyBIYW5zZW4gYW5kIGhpcyBwb2tlciBzZWNyZXRzIGhhdmUgYmVlbiBiaW5kZWQgd2l0aGluIGEgMzcwIHBhZ2UgcGFwZXJiYWNrLiBOb3cgYSBuZXcgcG9rZXIgcGxheWVyIGNhbiB0aGluayBsaWtlIHRoZSBwb2tlciBtYXN0ZXJzLiBBIGNvbXBsZXRlIGFtYXRldXIgY2FuIGFjdCBsaWtlIGEgcHJvZmVzc2lvbmFsLiBBbG1vc3QgZXZlcnkgZ2FtZSBoYXMgaXQncyBvd24gY3JpdGVyaWEsIHRlY2huaXF1ZXMgYW5kIHRhY3RpY3MuIFdpdGhvdXQgdGhlIHJpZ2h0IHRhY3RpY3MsIHlvdSBjYW4gbmV2ZXIgd2luIGFnYWluc3QgYW4gZXhwZXJ0LiBQb2tlciBpcyBub3doZXJlIGRpZmZlcmVudCBmcm9tIHRyYWRpdGlvbmFsIGdhbWVzLiBUaGlzIGdhbWUgYWxzbyBuZWVkcyB5b3UgdG8gcHJhY3RpY2UgdGhvdXNhbmRzIG9mIHRpbWVzIHRvIHdpbiBpbiBldmVyeSB0YWJsZSB5b3UgYXJlIHRha2luZyBwYXJ0LiBIb3dldmVyLCBzb21lIHByb3ZlbiB0ZWNobmlxdWVzIGFuZCB0YWN0aWNzIHdpbGwgaGVscCB5b3UgYSBsb3QgYW5kIHlvdSBjYW4gbGVhcm4gbmV3IHRoaW5ncyBpbiB0aGUgc2hvcnRlc3QgdGltZSBwb3NzaWJsZS4KUm9kZ2VycyBsYXVnaGVkLiBjYW4gb3V0cnVuIHRob3NlIG1vdGhlciBhbnkgZGF5LCBoZSBzYWlkLCB0aGV5IGNhbiBzaG9vdCBzdHJhaWdodCBhbnl3YXkhIHJlcHV0YXRpb25Ob3QgdGhlIG1vc3QgcmVhc3N1cmluZyB3b3JkcywgZXNwZWNpYWxseSB3aGVuIHdlIGhhZCBiZWVuIHRlYXJpbmcgYXJvdW5kIGZyb20gb25lIG1pbGxpb24gZG9sbGFyIGhvbWUgdG8gYW5vdGhlciwgd2l0aCBSb2RnZXJzIGRyb3BwaW5nIG9mZiBhIGZ1bGwgYnJpZWZjYXNlIGhlcmUgYW5kIHBpY2tpbmcgdXAgYW5vdGhlciB0aGVyZS4gR2l2ZW4gaGlzIHdpbGQgcmVwdXRhdGlvbiBpbiBNb250cmVhbCwgSSB3YXMgc3VyZSB0aGUgYnJpZWZjYXNlcyB3ZXJlIGZpbGxlZCB3aXRoIHRoZSBjb250cmFiYW5kIG9mIHlvdXIgY2hvaWNlLCBidXQgaXQgdHVybmVkIG91dCB3ZSB3ZXJlIGNhcnJ5aW5nIG5vdGhpbmcgbW9yZSByaXNreSB0aGFuIGxlZ2FsIHBhcGVycy4KT24gU2F0dXJkYXkgQXByaWwgMjEsIDIwMDcgLiBBbmQgRGV0ZWN0aXZlIFJlbWlrZXIgd2VyZSB0aGUgb2ZmaWNlcnMgaW4gY2hhcmdlIG9mIHRoZSBqdXJ5IGFuZCByZXNwb25zaWJpbGl0eSBvZiB1cGhvbGRpbmcgdGhlIGd1aWRlbGluZXMgcHJvdmlkZWQgYnkgdGhlIGp1ZGdlIGFsb25nIHdpdGggZ3VpZGVsaW5lcyBwcm92aWRlZCBieSAuIApUaGUgaG9ybW9uZSB5b3VyIGJvZHkgcHJvZHVjZXMgd2hlbiB5b3UgYXJlIHVuZGVyIHN0cmVzcyBpcyBjYWxsZWQgY29ydGlzb2wuIFdoYXQgbWFzc2FnZSB0aGVyYXB5IGRvZXMgaXMgbG93ZXIgdGhlIGxldmVsIG9mIHRoaXMgaG9ybW9uZS4gWW91IHdpbGwgbm90aWNlIGFuIGltcHJvdmVtZW50IGluIHlvdXIgbW9vZCBhZnRlciBvbmx5IG9uZSBzZXNzaW9uLiAKV2UgZG9uIHJlYWxseSBwYXkgYXMgbXVjaCBhdHRlbnRpb24gYXMgd2Ugc2hvdWxkIHRvIHNwb3J0cywgcG9wIGN1bHR1cmUsIG9yIGV2ZW4gUHJlc2lkZW50aWFsIGVsZWN0aW9ucy4gCkluIEZlYnJ1YXJ5LCBhbnRpIHBva2llcyBjYW1wYWlnbmVyIGFuZCBmZWRlcmFsIE1QIEFuZHJldyBXaWxraWUgYWlyZWQgYWxsZWdhdGlvbnMgdGhhdCBzdGFmZiBhdCBBTEggd2VyZSBzcHlpbmcgb24gY3VzdG9tZXJzIGluIG9yZGVyIHRvIG1heGltaXNlIHJldmVudWUuCklmIGJvdGggcGxheWVycyB0aHJvdyB0aGUgc2FtZSBzaGFwZSwgdGhlIGdhbWUgaXMgdGllZCBhbmQgaXMgdXN1YWxseSBpbW1lZGlhdGVseSByZXBsYXllZCB0byBicmVhayB0aGUgdGllLiAKTWFueSBXZXN0ZXJuIGdheXMgc2F3IGl0IGFzIHRoZWlyIG1pc3Npb24gdG8gY29udmVydCBSdXNzaWFucyB0byBzZWVpbmcgdGhpbmdzIGluIHRoZSBzYW1lIHdheS4gV2VzdGVybmVycyB3b3VsZCBwYXRpZW50bHkgZXhwbGFpbiB0byB0aGUgUnVzc2lhbnMgdGhhdCBpdCB3YXMgdGhlaXIgam9iIHRvICJwcm9ncmVzcyIgYW5kICJjb21lIG91dCIgc28gdGhleSBjb3VsZCBiZSAibGliZXJhdGVkLiIgUnVzc2lhbnMsIG9mZmVuZGVkIG5vdCBqdXN0IGJ5IHRoZSBhc3N1bXB0aW9uIG9mIHN1cGVyaW9yaXR5IG9uIHRoZSBwYXJ0IG9mIHRoZSBXZXN0ZXJuZXJzIGJ1dCBhbHNvIGJ5IHdoYXQgdGhleSBzYXcgYXMgV2VzdGVybiBydWxlcyBhbmQgcmVndWxhdGlvbnMgYXJvdW5kIGRlc2lyZSwgb2Z0ZW4gY29tcGxhaW5lZCBiaXR0ZXJseSBhYm91dCB0aGUgV2VzdGVybmVycy9jb2xvbml6ZXJzLiAKS2lkcyBhbGwgZ28gdG8gcHJpdmF0ZSBzY2hvb2xzIG92ZXJzZWFzIGFuZCBmbHkgYmFjayBhbmQgZm9ydGggdG8gSmFwYW4gYWxsIHRoZSB0aW1lLiA1IDEwSyBpbiBhaXJmYXJlIGEgbW9udGggYXQgbGVhc3QuIEFtYXppbmcgYW1vdW50cyBzcGVudCBvbiBhaXJmYXJlLgpQYWRkb2NrIGhhZCBiZWVuIHN0YXlpbmcgYXQgdGhlIE1hbmRhbGF5IEJheSBSZXNvcnQgYW5kIENhc2lubyBpbiBMYXMgVmVnYXMgc2luY2UgbGFzdCBUaHVyc2RheS4gSGUga2lsbGVkIGhpbXNlbGYgaW4gaGlzIHJvb20gb24gdGhlIDMybmQgZmxvb3IgYmVmb3JlIGEgcG9saWNlIFNXQVQgdGVhbSBidXJzdCBpbiwgTG9tYmFyZG8gc2FpZC4gCk9yIGp1c3Qga2VlcCBpZ25vcmluZyBoaW0gdW50aWwgaGUgZ29lcyBicm9rZS4gVW5sZXNzIGhlIHdlYWx0aHksIGhlIGNhbiBrZWVwIHB1bnRpbmcgYmFua3JvbGwgZm9yZXZlci4KTm90aGluZy4gCldoZXRoZXIgdGhlIGNhcmQgaXMgZHJhd24gYXQgcmFuZG9tLCAuCkJlc3QgY2F1c2UgaXQganVzdCBhIGdsaXRjaCBpbiB0aGUgT1MgYW5kIG5vdCBhIGRpc2sgaXNzdWUuIFRoZSBITTIgZmlsZXMgYW5kIG15IHBva2Vyc3RhcnMgaGFuZHMgSSBmaW5kIGl0IGhhcmQgdG8gZmluZCB0aGVtIGFuZCBJbSBub3Qgc3VyZSBvbiBob3cgdG8gc2F2ZSB0aGVtLiBEbyB5b3UgcmVjb21tZW5kIG1lIGdldHRpbmcgYW4gZXh0ZXJuYWwgSEQ/IE9yIGlzIGEgY2xvdWQgYmV0dGVyPy4gCkkgd2VudCBpbiB0byB0aGlzIGVwaXNvZGUgMTAwJSBvbiBUaW0gUG9vbCBzaWRlLCBidXQgYWZ0ZXIgbGlzdGVuaW5nIHRvIEphY2sgYW5kIFZpamF5YSBleHBsYWluIHRoZWlyIHNpZGUgb2YgdGhpbmdzLCBJIHN0YXJ0ZWQgdG8gY29tZSBhcm91bmQgYSBsb3QgbW9yZS4KVGhlIHRlbiByaWNoZXN0IHBlb3BsZSBpbiBBdXN0cmFsaWEKQW5kIGFzIHRoZSBub2lzZSBtYWtlcnMgYXJlIGdvaW5nIG9mZi4gUGVvcGxlIGFyZSBraXNzaW5nLiAKTXkgaHVzYmFuZCB3YXMgcXVpdGUgaW5zaXN0ZW50IG9uZSBkYXkgdGhhdCBJIGdldCB0aGlzIGpvYi4gCldoaWxlIHNoZSB3YXMgY2hlYXRpbmcgb24gbXkgZmF0aGVyLCBzaGUgYnJpbmcgbWUgKDkgMTApIGFuZCBteSBzaXN0ZXIgKDMgNCkgdG8gb25lIG9mIHRoZSBtYW55IHBhcmtzIG5lYXJieSBhbmQgbGVhdmUgdXMgdGhlcmUgd2hpbGUgc2hlIGFuZCBoZXIgc3Vic2VxdWVudCBib3lmcmllbmRzIHdlbnQgb2ZmIHRvIGRvIHdoYXRldmVyIHRoZXkgd291bGQgZG8uIEkgcmVjb2duaXppbmcgcGxheWdyb3VuZHMgYW5kIHNpZ25zIGFuZCB0aGluZ3MsIGFuZCBmb3IgdGhlIGZpcnN0IHRpbWUsIEkgbm90aWNpbmcgd2hhdCBkYW5nZXIgc2hlIHB1dCB1cyBpbiBieSBqdXN0IGxlYXZpbmcgdXMgdGhlcmUgdW5hdHRlbmRlZCBpbiBhIHZlcnkgYnVzeSBjb3VudHkuIApTZWUgSmFtZXMgUmFuZGkgb24gdGhlIENhcnNvbiBUb25pZ2h0IFNob3cuIERlc3BlcmF0ZSBkeWluZyBwZW9wbGUgd2lsbCBwYXkgYSBsb3Qgb2YgbW9uZXkgZm9yIGV2ZW4gdGhlIGR1bWJlc3Qgb2YgdGhpbmdzIHdoZW4gdGhleSB0aGluayB0aGVyZSBpcyBldmVuIGEgc21hbGwgY2hhbmNlIGl0IHdvdWxkIHdvcmsuIEFuZCB3aGVuIHRoZXkgZG8gdGhlcmUgYXJlIGxvdHMgb2YgZXZpbCBzaGl0cyBvdXQgdGhlcmUgd2hvIHdhbnQgdG8gdGFrZSB0aGVpciBtb25leSBhbmQgZ2l2ZSB0aGVtIG5vdGhpbmcgaW4gcmV0dXJuLgpJIHVzZWQgdG8gZmVlbCB0aGF0IHNvbWV0aW1lcyB3aGVuIEkgd2FzIGxlc3Mgb2YgYSBoYWJpdHVhbCBzbW9rZXIuIApPbmUgbXVzdCBnaXZlIGNyZWRpdCB0byB0aGUgdmV0ZXJhbiBkaXBsb21hdCBmb3IgYmVpbmcgYXJ0aWN1bGF0ZS4gSGUgZmxhdGx5IHJlZnVzZWQgdGhlIGNoYXJnZSB0aGF0IHRoZXJlIHdhcyBhbnkgc2VsbCBvdXQgb3IgYW55IGNoYW5nZSBpbiBwb2xpY3kgZm9yIGRlbWFuZGluZyBhIHRyYW5zaXRpb25hbCBnb3Zlcm5tZW50IGJvZHkgaW4gU3lyaWEuIEhpcyBjb250ZW50aW9uIHdhcyB0aGF0IHRoZSBkZW1hbmQgd2FzIG1hZGUgaW4ga2VlcGluZyB3aXRoIHRoZSBjb21tdW5pcXUgaXNzdWVkIGJ5IHRoZSBVTiBCYWNrZWQgQWN0aW9uIEdyb3VwIGZvciBTeXJpYSBpbiBHZW5ldmEgb24gSnVuZSAzMCwgMjAxMiB3aGljaCBjYWxsZWQgZm9yIGVzdGFibGlzaG1lbnQgb2YgYSB0cmFuc2l0aW9uYWwgZ292ZXJuaW5nIGJvZHkgd2l0aCBmdWxsIGV4ZWN1dGl2ZSBwb3dlcnMgdGhhdCBjb3VsZCBpbmNsdWRlIG1lbWJlcnMgb2YgdGhlIGdvdmVybm1lbnQgYW5kIG9wcG9zaXRpb24sIGFuZCBzaG91bGQgYmUgZm9ybWVkIG9uIHRoZSBiYXNpcyBvZiBtdXR1YWwgY29uc2VudC4gIlRoZXJlIHdhcyBub3RoaW5nIG5ldyBpbiB0aGUgam9pbnQgc3RhdGVtZW50IGlzc3VlZCB3aXRoIFNhdWRpIEFyYWJpYSBhbmQgaXQgd2FzIGluIGtlZXBpbmcgd2l0aCBvdXIgZGVjbGFyZWQgcG9zaXRpb24gb24gU3lyaWEsIiBoZSBzYWlkIGVtcGhhdGljYWxseS4uIApPdGhlciB0ZWFtIGlzIGJ1cnlpbmcgZXZlcnkgc2luZ2xlIHNob3QsIGRlZmVuc2UgaXMgdmVyeSBkaWZmaWN1bHQgcm4sIGFuZCB3aGVuZXZlciBJIHJ1biBteSBndXkgaW50byBhbiBvcHBvc2luZyBwbGF5ZXIgaGUgZ2V0cyB0aGUgYmFsbCBjaGVja2VkIG91dC4gUGFzc2luZyBmZWVscyByZWFsbHkgZ29vZCBhbmQgc2hvb3RpbmcgaXMgc2F0aXNmeWluZyBhcyBoZWxsLiAKRGVhZEF0U3RvbmV3YWxsICAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KU2hlIGxpa2VzICJzZWNyZXQiIGFuZCB0b2RheSdzIHNlY3JldCBpcyB0d28gaG91ciBzZXNzaW9uLCBzZWNyZXQgdG8gaGVyIGNvdXNpbi4gClRvIHlvdSBkbyBJIGNvbWUsIGJlZm9yZSB5b3UgSSBzdGFuZCwgc2luZnVsIGFuZCBzb3Jyb3dmdWwuIApFbmQgb2Ygb3VyIGxpdmVzLiBQZXJoYXBzIG90aGVyIHBlb3BsZSBzYXkgdGhvc2Ugc2lsbHkgdGhpbmdzIGJlY2F1c2UgdGhleSBkb24ga25vdyB3aGF0IGVsc2UgdG8gc2F5PyBJIHRoaW5rIG91ciBzb2NpZXR5IHNob3VsZCByZXZpZXcgZGVhdGggZGlmZmVyZW50bHkgaW5zdGVhZCBvZiBsb29raW5nIGF0IGl0IGFzIGEgdGltZSBvZiBob3Jyb3IuIApJIHB1bGwgb3ZlciBteSBsYXB0b3AsIGdhc3BpbmcgYXMgbXkgdGltZSBzbG93bHkgZHJhd3MgdG8gYW4gZW5kLiBUaGlzIG9uZSBwdXp6bGUsIHdoaWNoIGhhcyBoYXVudGVkIGNyeXB0b2dyYXBoZXJzIGFuZCBsaW5ndWlzdGljcyBleHBlcnRzIGZyb20gYXJvdW5kIHRoZSBnbG9iZSBmb3IgZ2VuZXJhdGlvbnMsIGhhcyBhbHNvIGVsdWRlZCBtZS4gQXMgbXkgaGVhcnQgcmF0ZSBkaW1zLCBJIHJpZ2h0IGNsaWNrIG9uIHRoaXMgbWVzc2FnZSwgYSBiYW5lIHRvIGNvZGUgYnJlYWtlcnMgZm9yIGNlbnR1cmllcy4gClZlZ2FuX2NhcnJvdDI5ICBUVEMxICBDeWNsZSAzIChTaW5jZSBKdW4gIDcgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpEaWUgbmNoc3RlbiAyIFdvY2hlbiBiaXMgZWluc2NobGllc3NsaWNoIDcuOC4gCkNvcnJlY3Rpb246IGhlciBoZWlnaHQgaXMgMTYzY20sIG5vdCAxNTVjbSB3aGljaCBJIHJlcG9ydGVkIG9uIE5vdi4gCk1vc3QgZ2lybHMgd2lsbCBuZWVkIHNvIG1vcmUgdGhhbiAxMCBzZWNvbmRzIG9mIHN1Y2tpbmcgb24gYSBuaXBwbGUgYW5kIHJ1YmJpbmcgb3ZlciB0aGVpciB1bmRlcndlYXIuIApJIHRvb2sgYSB1bmlxdWUgInNhYmJhdGljYWwiIGFuZCBkZWNpZGVkIHRvIGpvaW4gdGhlIFVuaXRlZCBTdGF0ZXMgTWFyaW5lIENvcnBzIGZvciBmb3VyIHllYXJzLiAKR2V0IHJlZGRpdCBwcmVtaXVtSGVqIGFuZCB3bGtvbW1lbiB0byBTd2VkZGl0ISBUaGUgaHViIGZvciBTd2VkZXMgb24gcmVkZGl0IGFuZCBvdXIgY29tbXVuaXR5IGhlcmUhIFZpc2l0aW5nIHJlZGRpdG9ycyBmcm9tIGVsc2V3aGVyZSBhcmUgYWxzbyB3ZWxjb21lISBUaGlzIHN1YnJlZGRpdCBpcyBtb2RlcmF0ZWQgYWZ0ZXIgdGhlIHJlZGRpcXVldHRlIGFuZCB0aGVzZSBjb21tdW5pdHkgZ3VpZGVsaW5lcy4KSXQgcmVhbGx5IGhlbHBzIHRvIGNoYW5nZSB1cCB5b3VyIHBsYXlzdHlsZSBhdCB0aGUgdGFibGUsIGFsc28uIEdldCBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIHJhc2gsIGdldCBjYXVnaHQgYmx1ZmZpbmcgb25jZSBvciB0d2ljZS4gVGhlbiBvbmNlIHBlb3BsZSByZWNvZ25pemUgeW91IGZvciB0aGF0LCBzd2l0Y2ggcGxheXN0eWxlLiAKQXQgZmlyc3QsIHNoZSBzaW1wbHkgd2F0Y2hlZCB0aGUgcGxheWVycy4gClRoZXkgYXJlIGJldHRlciB3aXRoIG1vbmV5IHRoYW4gbW9zdCBwZW9wbGUgd2hvIGhhdmUgZW1vdGlvbmFsIGNvbm5lY3Rpb24gdG8gdGhlaXIgaW52ZXN0bWVudHMsIHRob3VnaCBhcmVuIHRoaW5raW5nIGNsZWFybHkuIApLaXRoJ3MgbmV3IEVzdGVlIExhdWRlciBjb2xsYWJvcmF0aW9uIGZlYXR1cmVzIDE5NDYgbG9nbwpGb2xsb3dlZCBieSBhIEpvaW50IENlbGVicmF0aW9uIG9mIExpZmUgZm9yIEhhemVsIGFuZCBBdWJyZXkgIlJlZCIgYXQgMTE6MzAgQU0gYXQgdGhlIE1vbmV0dGUgRnJlbmNoIEZ1bmVyYWwgSG9tZSAoNDUwIEdvdmVybm1lbnQgUmQgVywgS2lya2xhbmQgTGFrZSwgT04sIFAyTiAzTDEpIFRvZ2V0aGVyIEhhemVsIGFuZCBBdWJyZXkgd2lsbCBiZSBsYWlkIHRvIHJlc3QgaW4gdGhlIEtpcmtsYW5kIExha2UgQ2VtZXRlcnkuIEJveCAzODAwIEtpcmtsYW5kIExha2UsIE9OLiAKQWx3YXlzIHJlbWVtYmVyLCB0aG91Z2gsIHRoYXQgeW91J3JlIHN0aWxsIHNpdHRpbmcgYXQgYSBzdGFuZGFyZCBzaXplZCBwb2tlciB0YWJsZSBhbmQgcGxheWluZyB3aXRoIHRoZSBzYW1lIHN0YW5kYXJkIDUyIGNhcmQgZGVjay4gCkkgYWxzbyBoYXZlIHNvbWUgcmVhbGx5IGdyZWF0ICQzMCA0MCBzaG9ydHMgdGhvdWdoLCBzbyBpdCBub3QgYXMgaWYgeW91IGhhdmUgdG8gc3BlbmQgYSB0b24gb2YgbW9uZXkgdG8gZ2V0IHNvbWV0aGluZyBnb29kLiBBdCB0aGUgZW5kIG9mIHRoZSBkYXkgdGhvdWdoLCBhcyBvZnRlbiBhcyBJIHVzZSBteSBzaG9ydHMsIGFuZCBmb3IgYXMgbG9uZyBhcyBtaW5lIHNlZW0gdG8gbGFzdCwgdGhlIGRvbGxhciBwZXIgcnVuIGlzIHJlYWxseSBkYW5nIGxvdywgc28gZXZlbiBpZiBJIGxpa2UgdGhlbSBqdXN0IGEgbGl0dGxlIGJpdCBiZXR0ZXIgaXQgc2VlbXMgd29ydGggd2hpbGUgdG8gYnV5IHdoYXQgSSBsaWtlLi4gClJ1bGUgNTogUmVwb3N0cyB3aWxsIGJlIHJlbW92ZWQgYXQgdGhlIG1vZGVyYXRvcnMgZGlzY3JldGlvbiwgdGhpcyBpbmNsdWRlcyBidXQgaXMgbm90IGxpbWl0ZWQgdG8gcmVwb3N0cyB3aXRoIHRoZSBzYW1lIHRpdGxlIGFzIHByZXZpb3VzIHN1Ym1pc3Npb25zLiBXZSBhbGxvdyBzb21lIGltYWdlcyB0byByZWNpcmN1bGF0ZSBpZiBhIHBlcmlvZCBvZiB0aW1lIGhhcyBwYXNzZWQsIG9yIGlmIGl0IHByZXZpb3VzbHkgZGlkIG5vdCByZWNlaXZlIG11Y2ggYXR0ZW50aW9uLiBXZSBhbGxvdyBzb21lIGltYWdlcyB0byByZWNpcmN1bGF0ZSBpZiBhIHBlcmlvZCBvZiB0aW1lIGhhcyBwYXNzZWQsIG9yIGlmIGl0IHByZXZpb3VzbHkgZGlkIG5vdCByZWNlaXZlIG11Y2ggYXR0ZW50aW9uLiAKVGhlQ2hlZWt5VHJvbGxvcCAgIDE2IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpDYW4gZ28gd2l0aCA4IGZvb3Qgc2VjdGlvbnMsIGluIHdoaWNoIGNhc2UgaXQgaXMgJDQwIHBlciA4IFRoYXQgbWFrZXMgaXQgJDQ4MDAgdG8gYnVpbGQgdGhlIHdhbGwuIApXaGF0IGFyZSB0aGUgYmxpbmRzP0hlcmUgaXMgYW4gZXhhbXBsZSBvZiBhIHJlbGF0aXZlbHkgc2ltcGxlIGJsaW5kIHN0cnVjdHVyZTpsZXZlbCAxICAgNS8xMGxldmVsIDIgICAxMC8yMGxldmVsIDMgICAyNS81MGxldmVsIDQgICA1MC8xMDBsZXZlbCA1ICAgMTAwLzIwMGxldmVsIDcgICAyMDAvNDAwbGV2ZWwgOCAgIDQwMC84MDBsZXZlbCA5ICAgODAwLzE2MDBsZXZlbCAxMCAgIDE2MDAvMzIwMApJIGNhbiBleHBsb2l0IHRoZSBwb3B1bGF0aW9uIHRlbmRlbmN5IHRoYXQgbGl2ZSByaXZlciBYL1JzIGFyZSBhbHdheXMgbnV0dGVkLCBJIGhhdmUgYSBtYXNzaXZlIHJhbmdlIGFkdmFudGFnZSwgSSBoYXZlIHRoZSBudXQgYmx1ZmYgY2FuZGlkYXRlLCBhbmQgVmlsbGFpbiByYW5nZSBpcyBjYXBwZWQgYXQgZXhjbHVzaXZlbHkgb25lIHBhaXIuLiAKTGEgcGx1cGFydCBkdSB0ZW1wcywgZGFucyB1biByZ2ltZSwgb24gc2UgbGFuY2UgZHUgam91ciBhdSBsZW5kZW1haW4gZGFucyB1bmUgZmFvbiBkZSBtYW5nZXIgZGlmZnJlbnRlLCByZXN0cmljdGl2ZSwgcGx1cyBvdSBtb2lucyBzdnJlIGNhciBvbiB2ZXV0IGFsbGVyIHZpdGUuIE9uIHBlcmQgZHUgcG9pZHMsIG9uIGF0dGVpbnQgb3Ugb24gYXBwcm9jaGUgc29uIG9iamVjdGlmIGV0IHB1aXMgb24gcmVtYW5nZSBjb21tZSBhdmFudC4gClVuZm9ydHVuYXRlbHkgdGhlIGdyZWF0ZXIgY29uY2VybiBpcyBvbiB0aGUgb3JkZXIgb2Ygd29ybGQgZG9taW5hdGlvbi4gQmFjayBpbiB0aGUgMTkzMHMsIHdlIGhhZCBhICJ3aG8gZ2l2ZXMgYSBmdWNrPyIgYXR0aXR1ZGUgYWJvdXQgd2hldGhlciBvciBub3QgSGl0bGVyIGludmFkZWQgUG9sYW5kIG9yIEN6ZWNob3Nsb3Zha2lhOyBFbmdsYW5kIGhhZCB0aGUgc2FtZSBhdHRpdHVkZSwgdW50aWwgdGhleSB3ZXJlIGFibGUgdG8gcm9sbCBvdmVyIEZyYW5jZS4gVGhhdCB3aGVuIHRoZWlyIGludGVudGlvbnMgYmVjYW1lIGNsZWFyLiAKT25lIG9mIHRoZSBrZXkgZ3JvdW5kcyBvbiB3aGljaCBlbnZpcm9ubWVudGFsIGF0dG9ybmV5cyBzYXkgdGhlIHRyaWFsIGRlY2lzaW9uIGlzIHZ1bG5lcmFibGUgb24gYXBwZWFsIGlzIGZhaWxpbmcgdG8gY29uc2lkZXIgbW9yZSBlbnZpcm9ubWVudGFsbHkgc291bmQgYWx0ZXJuYXRpdmVzIHRoYW4ganVzdCBhZGRpbmcgbW9yZSBjb25jcmV0ZSB0byBhbiBhbHJlYWR5IGNvbXByb21pc2VkIHNpdGUuIEluIGEgd29ybGQgdGhyZWF0ZW5lZCBieSBjbGltYXRlIGNoYW5nZSwgd2hlcmUgZ3JlZW4gaWRlYXMgaGF2ZSBzdWRkZW5seSBnYWluZWQgbmV3IGN1cnJlbmN5LCBwZXJoYXBzIGl0J3MgdGltZSB0byBhY2tub3dsZWRnZSB0aGF0IHdlIGNhbiBubyBsb25nZXIganVzdCBidWlsZCBvdXIgd2F5IG91dCBvZiBwcm9ibGVtcy4gCk9rLCB3aXRoIDEgMyBzcXVhZHMgbGVmdCwgeWVzIEkgc3RheSwgYWx3YXlzLCBvZiBjb3Vyc2UuIApNb3N0IG1ldGFsIHByaW1lcnMgd2lsbCBiZSBvaWwgYmFzZWQsIHNvIHRoaXMgbmVlZHMgdG8gYmUgZG9uZSBpbiBhdCBsZWFzdCArMTVDIHdlYXRoZXIgKDYwIGZyZWVkb20gdW5pdHMpLCBhbmQgd2lsbCB0YWtlIGF0IGxlYXN0IGEgZGF5IHVubGVzcyB5b3UgZ2V0IHNvbWUgZmFzdCBkcnlpbmcgcHJvZHVjdC4uIApFTVMgY2FuIGdldCB0aGUgRUNHIGluIHRoZSBmaWVsZCwgc3RhcnQgdGhlIElWLCBnaXZlIHRoZSBhc3BpcmluIGFuZCBuaXRybyBhbmQgTzIgaWYgbmVlZGVkLCB0aGUgRUQgd291bGQgaGF2ZSB0aGUgcmVzdWx0cyBvZiB0aGUgRUNHIGJlZm9yZSBFTVMgZXZlbiBsZWF2ZXMgeW91ciBob3VzZSBhbmQgY2FuIGhhdmUgdGhlIENhdGggbGFiIHNldCB1cCBiZWZvcmUgYXJyaXZhbC4KSSdkIGFyZ3VlIHRoZXkgYXJlIGVxdWFsbHkgaW1wb3J0YW50LiBPbmUgb2YgbXkgYnVkZGllcyBpcyBhIGZvcm1lciBPbHltcGljIHRyaWFscyBsZXZlbCBzd2ltbWVyIGJ1dCBoZSdzIHB1dCBvbiBzb21lIHdlaWdodCBhbmQgZG9lc24ndCBzd2ltIGFueW1vcmUuIEkgZ3VhcmFudGVlIHlvdSBpZiB3ZSB3ZW50IHRvIHRoZSBwb29sIHRvbW9ycm93IGhlIGNvdWxkIHNtb2tlIG1lIGluIGEgMTAwbSByYWNlLiAKQSBmZXcgeWVhcnMgYWdvIEkgd2FzIHBsYXlpbmcgaW4gYSAzLzUgTkwgZ2FtZS4gSSB3aXRuZXNzZWQgZ3V5IGxvc2UgYW4gYWJzb2x1dGVseSBtYXNzaXZlIHBvdCB0byBhIHBsYXllciB3aG8gaGUgaGFkIGJlZW4gZ29pbmcgYmFjayBhbmQgZm9ydGggd2l0aCBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIHBhc3QgZmV3IGhvdXJzLgpUaGF0IHdvdWxkIG1lYW4gc28gZG9lcyBMU0QsIDJDIEIsIHBzaWxvc2luLCBldmVyeSBvdGhlciBwc3ljaGVkZWxpYy4gMjV4IE5CT01lIGlzIHRveGljL2ZhdGFsIGluIGhpZ2ggZG9zZXMgYmVjYXVzZSBvbiB0b3Agb2YgYWN0aXZhdGluZyB0aGUgUExBMiBwYXRod2F5IG9mIHRoZSA1IEhUMmEgcmVjZXB0b3IsIGl0IGFsc28gYWN0aXZhdGVzIHRoZSBhZHJlbmFsaW5lIHJlY2VwdG9ycywgY2F1c2luZyB2YXNvY29uc3RyaWN0aW9uLiBUaHJvbWJveGFuZSBBMiBpcyBwcm9kdWNlZCBieSBhbGwgUExBMiBhY3RpdmF0aW9uLCBidXQgdGhlIGFkZGVkIGFkcmVuZXJnaWMgYWdvbmlzbSBzZWFscyB0aGUgZGVhbC4KSXQgc28gZXhwYW5zaXZlIGFuZCBpbnRlcnR3aW5lZCBpdCByZXNpc3RzIHRoZSBtZWRpY2FsIHN0YW5kYXJkIG9mIGJlaW5nIGN1dCB1cCBhbmQgbmFtZWQgZm9yIHRleHRib29rIGlsbHVzdHJhdGlvbnMuQmVzaWRlcyB0aGF0LCBpdHMgZnVuY3Rpb24gaXMgdHJpY2t5LCBtb3JlIHN1YnRsZSB0aGFuIHRoYXQgb2YgdGhlIG90aGVyIHN5c3RlbXMuRm9yIHRoZSBtYWpvcml0eSBvZiBtZWRpY2FsIGhpc3RvcnkgaXQgYmVlbiBhc3N1bWVkIHRoYXQgYm9uZXMgd2VyZSBvdXIgZnJhbWUsIG11c2NsZXMgdGhlIG1vdG9yLCBhbmQgZmFzY2lhIGp1c3QgcGFja2FnaW5nLkluIGZhY3QsIHRoZSBjb252ZW50aW9uIGluIG1lZCBzY2hvb2wgZGlzc2VjdGlvbnMgaGFzIGJlZW4gdG8gcmVtb3ZlIGFzIG11Y2ggb2YgdGhlIGZhc2NpYSBhcyBwb3NzaWJsZSBpbiBvcmRlciB0byBzZWUgd2hhdCB3YXMgdW5kZXJuZWF0aCwgdGhlIGltcG9ydGFudCBzdHVmZi5UaGF0IGZyYW1lZCBJbGx1c3RyYXRpb24gaGFuZ2luZyBpbiB5b3VyIGRvY3RvciBvZmZpY2Ugb2YgdGhlIHJlZCBtdXNjbGVkLCB3aWRlIGV5ZWQgaHVtYW4gYm9keSBpcyBhIGJvZHkgd2l0aCBpdHMgZmFzY2lhIGN1dCBhd2F5OyBpdCBub3Qgd2hhdCB5b3UgbG9vayBsaWtlIGluc2lkZSwgYnV0IGl0IGEgbG90IG5lYXRlciBhbmQgZWFzaWVyIHRvIHN0dWR5IGFuZCBpdCB0aGUgd2F5IGRvY3RvcnMgaGF2ZSBsb25nIGJlZW4gdGF1Z2h0IHRvIGxvb2sgYXQgeW91LiAKQ2hvY29sYXRlIG1hcmtldCwgTSBwYXJlbnQsIE1hcnMgV3JpZ2xleSBDb25mZWN0aW9uZXJ5LCBpcyBpbiBzZWNvbmQgcGxhY2UgYmVoaW5kIEhlcnNoZXkgQ28uIApUaGVyZSBpcyBhbHNvIGEgaGlnaCBjb3N0IGluIHN0YWZmaW5nIHRoZSBvcmRlciB0YWtpbmcgZGVwYXJ0bWVudCB0aGF0IGFuc3dlcnMgdGhlIHBob25lLiBJbiBlIGNvbW1lcmNlIGJvdGggdGhlIGNhdGFsb2cgZGlzdHJpYnV0aW9uIGNvc3QgYW5kIHRoZSBvcmRlciB0YWtpbmcgY29zdCBmYWxsIHRvd2FyZCB6ZXJvLiBUaGF0IG1lYW5zIHRoYXQgaXQgbWF5IGJlIHBvc3NpYmxlIHRvIG9mZmVyIHByb2R1Y3RzIGF0IGEgbG93ZXIgcHJpY2UsIG9yIHRvIG9mZmVyIHByb2R1Y3RzIHRoYXQgY291bGQgbm90IGJlIG9mZmVyZWQgYmVmb3JlIGJlY2F1c2Ugb2YgdGhlIGNoYW5nZSBpbiBjb3N0IGR5bmFtaWNzLi4gClRoZSBMYW90aWFuIERlZmVuc2UgTWluaXMgIHRyeSBzYWlkIGluIGEgY29tbXVuaXF1ZSBsYWljIFR1ZXNkYXkgdGhhdCAicmVwb3J0cyBhcnJpdiAgaW5nIGZyb20gdmFyaW91cyBmcm9udHMgY29uICBmaXJtIGEgZ2VuZXJhbCBOb3J0aCBWaWV0ICBuYW1lc2Ugb2ZmZW5zaXZlLiIgSXQgcmVwb3J0ZWQgYXR0YWNrcyBvdmVyIHRoYyB3ZWVrZW5kIG9uIGdvdmVybm1lbnQgYXJteSBwb3N0cyBhdCBOYW0gQmFjLCBpbiBMdWFuZyBQcmFiYW5nIHByb3ZpbmNlLCBhbmQgYXQgUGhhbGFuYyBhbmQgb24gdGhlIG91dHNraXJ0cyBvZiBOb25nIEJvdWFsYW8sIGJvdGggaW4gU2EgIHZhbm5ha2hjdCBwcm92aW5jZSwgaW4gc291dGggIGNhc3QgTGFvcy4gIk91ciBmb3JjZXMgaGF2ZSBiZWVuIGFibGUgdG8gY29udGFpbiBhbGwgdGhlc2UgdGhlIGNvbW11bmlxdWUgc2FpZC4gVGhlIGNvbW11bmlxdWUgYWxzbyBzYWlkIHRoYXQgdHdvIE5vcnRoIFZpZXRuYW1lc2UgSXRjbGF0Y2QgbmV3cyBwYWdlIHRocmVlIGJhdHRhbGlvbnMgaGFkIGJlZW4gb3JkZXJlZCB0byBtb3ZlIGZyb20gTWFoYXhheSB0b3dhcmQgVGhha2hlaywgYSB0b3duIG9uIHRoYyBNYyAgV2hlcmUgZm8gZiB1cm4gU0hFRkZJRUxEIExBS0UgTWF5IiBvciBjbGVjdCBKYWNrIE1pbGxlciB0byBsaWUgc3Vvcm4gSW4gU2F0dXJkYXkgcGFnZSAyOS4gCiJBIE1hZGVhIEZhbWlseSBGdW5lcmFsIiB0b29rIHNlY29uZCBwbGFjZSBhdCB0aGUgZG9tZXN0aWMgYm94IG9mZmljZSB3aXRoIGFuIGVzdGltYXRlZCAkMjcgbWlsbGlvbiwgYSB0aGlyZCBiZXN0IGZvciB0aGUgMTUgeWVhciBvbGQgZnJhbmNoaXNlLiBUaGUgIk1hZGVhIiBmaWxtcyBoYXZlIG5ldmVyIGJlZW4gYWxsIHRoYXQgcG9wdWxhciB3aXRoIGNyaXRpY3MgICB0aGlzIG9uZSBzcGxhdHRlcmVkIG91dCB3aXRoIGEgMjQgcGVyY2VudCBvbiBSb3R0ZW4gVG9tYXRvZXMgICBidXQgYXVkaWVuY2VzIGhhdmUgbmV2ZXIgc2VlbWVkIHRvIGNhcmUuIFRoaXMgdGltZSBhcm91bmQgdGhlIGF1ZGllbmNlLCB3aGljaCB3YXMgNjcgcGVyY2VudCBmZW1hbGUgYW5kIDc4IHBlcmNlbnQgb3ZlciB0aGUgYWdlIG9mIDI1LCBnYXZlIHRoZSBmaWxtIGEgc29saWQgQSAgQ2luZW1hU2NvcmUuClRoZSBwb2ludCBpcywgaXQncyBhIGZ1Y2tpbmcgbW92aWUuIApJZiB0aGVyZSBubyBjaGlwcyBvbiBoYW5kIGJ1dCB0aGVyZSBhcmUgYXBwbGVzIHRoYXQgdGhlIGxhenkgdGhpbmcgdG8gZWF0IGFuZCB5b3UgZG8gaXQuIFlvdSBjYW4gbWVhbCBwcmVwIGEgcG90IG9mIHNvdXAgb3IgY2hpbGkgZm9yIG1pbmltYWwgZWZmb3J0IHRvIG1ha2Ugc3VyZSB5b3UgaGF2ZSBhIGhvdCBhbmQgaGVhbHRoeSBmb29kIG9wdGlvbiBhbGwgdGhlIHRpbWUuIApFcGlzb2RlIDEzMCBpcyB1cCFUaGUgQXNrSGlzdG9yaWFucyBQb2RjYXN0IGlzIGEgcHJvamVjdCB0aGF0IGhpZ2hsaWdodHMgdGhlIHVzZXJzIGFuZCBhbnN3ZXJzIHRoYXQgaGF2ZSBoZWxwZWQgbWFrZSByL0Fza0hpc3RvcmlhbnMgb25lIG9mIHRoZSBsYXJnZXN0IGhpc3RvcnkgZGlzY3Vzc2lvbiBmb3J1bXMgb24gdGhlIGludGVybmV0LiBZb3UgY2FuIHN1YnNjcmliZSB0byB1cyB2aWEgU3RpdGNoZXIsIG9yIFJTUywgYW5kIG5vdyBvbiBZb3VUdWJlIGFuZCAuIFlvdSBjYW4gYWxzbyBjYXRjaCB0aGUgbGF0ZXN0IGVwaXNvZGVzIG9uIFNvdW5kQ2xvdWQgYW5kIFBhbmRvcmEuIApJIHN3ZWFyIHRvIGdvZCB0aGVyZSB3YXMgYSBzaG9ja3dhdmUuIApQb2tlciBwbGF5ZXIgdG8gbGVhcm4gZmF0ZSBvZiAzNmsgc2VpemVkCk15IHBhcmVudHMgc3RpbGwgc3VwcG9ydCBoaW0uIApNYWtlcyBwZXJmZWN0IHNlbnNlLiBUaGlzIGlzIHRoZSBraW5kIG9mIGd1eSB3aG8gdHdpenpsZXMgYSBwZW5jaWwgZXJhc2VyIGluIGhpcyBlYXIgYW5kIHRoZW4gbmVydm91c2x5IGxpY2tzIGl0LCBmYXNjaW5hdGVkIGJ5IHRoZSB0YXN0ZSBvZiBlYXJ3YXguIApJIGRvbmUgbXkgZmFpciBzaGFyZSBvZiBkcnVncyBhbmQgcGFydHlpbmcuIApZYSwgbGV0cyBub3QgcXVpYmJsZS4gT2ssIEkgcXVpYmJsaW5nLiBNaXNzaW9uYXJpZXMgb25seSBwdXJwb3NlIGFueXdoZXJlIGlzIHRvIGluY3JlYXNlIHRoZSBmb2xkIGluY2x1ZGluZyBSdXNzaWEuIENvbnZlcnQsIHRoYXQgaXQuIFdlIGtub3cgaXQsIHRoZXkga25vdyBpdCBhbmQgUnVzc2lhIGtub3dzIGl0LiBCdXQgUnVzc2lhIGNvdWxkbiBjYXJlIGxlc3MgaWYgYSBSdXNzaWFuIGpvaW5zIHRoZSBjaHVyY2guIFdoYXQgYXQgcXVlc3Rpb24gaXMgdGhlIG1ldGhvZC4gUHJvc2VseXRpbmcgaXMgb3V0bGF3ZWQgYW5kIHRoZXkgc3RpY2tsZXJzIGFib3V0IGl0LiBJZiB0aGV5IGV2ZW4gc21lbGwgc29tZXRoaW5nIHNpbWlsYXIgdG8gcHJvc2VseXRpbmcsIHlvdSBnbyB0byBqYWlsLiBUaGUgY2h1cmNoIHVuZGVyc3RhbmRzIHRoaXMgYW5kIHRoZSBtaXNzaW9uYXJpZXMgZG8gdG8uIEFic29sdXRlbHkgbm8gcHJvc2VseXRpbmcgcGVyaW9kISBBbmQgdGhleSBkb24gSWYgc29tZW9uZSB3b25kZXJzIGluIHRoZSBjaGFwZWwgYW5kIHN0YXJ0cyBhc2tpbmcgcXVlc3Rpb25zLCB0aGVuIHRoZSBtaXNzaW9uYXJpZXMgaGF2ZSBmdWxsIHJpZ2h0cyB0byBqYWJiZXIgYXdheS4gSWYgYW5vdGhlciBtZW1iZXIgaW52aXRlcyBhIGZyaWVuZCB0byBjaHVyY2gsIG5vIHByb2JsZW0uIEJ1dCBhYnNvbHV0ZWx5IG5vIHByb3NlbHl0aW5nIQpCYXNpY2FsbHkgaGUgaXMgc3dpdGNoaW5nIG91dCBzb21lIG9mIHRoZSBibG9vZCBpbiBoaXMgYm9keS4gCk92ZXJ2aWV3IGZvciBSb2JlcnRzMTlECkFsc28gbG9vayBhdCB3aGVyZSB0aGUgZW5lbXkgc3VwcG9ydCBoYXMgYmVlbiwgc28geW91IGtub3cgd2hlbiB0byB1c2UgeW91ciByZWQgdHJpbmtldC4gSGF2aW5nIHZpc2lvbiBpbiBrZXkgYXJlYXMsIGJ1dCBmaWdodGluZyBpbiB0aGVtIGlzIGFsc28gdmVyeSBpbXBvcnRhbnQuIAoiSSBkb24ndCBrbm93IGlmIEkgYnJpbmcgaGltIGx1Y2ssIiBMb25zaW5nZXIgc2FpZC4gIkhlJ3MgYSBnb29kIHBsYXllci4gSGUgZG9lc24ndCBuZWVkIGEgbWFzc2FnZSBmb3IgbHVjay4iCkVQIGdvZXMgdG8gRGF2b24gV2F0Y2ggaW4gU3RvbmVmYWxscy4gCkkndmUgdGFrZW4gYSBmZXcgeW9nYSBjbGFzc2VzIGluIHRoZSBwYXN0IGFuZCBJIGNvbnNpZGVyIG15c2VsZiBhIGJlZ2lubmVyLiBJIHdhcyBhYmxlIHRvIGZvbGxvdyBhbG9uZyBlYXNpbHkgd2l0aG91dCBnZXR0aW5nIGxvc3Qgb3IgY29uZnVzZWQuIEhvd2V2ZXIsIHRoZSBmZWVsIG9mIHRoZSBzdHVkaW8gY2VydGFpbmx5IHNldHMgaXRzZWxmIGFwYXJ0IGZyb20gaXRzIG1vcmUgY29tbWVyY2lhbGl6ZWQgY29tcGV0aXRvcnMuIApUbyBwdXJzdWUgdGhpcywgb25lIG5lZWRzIHRvIGJlIGluIGZ1bGwgY29tbWFuZCBvZiBvbmVzZWxmLCBleHVkaW5nIGNvbmZpZGVuY2UuIApTbGVwdCBpbiBteSBjYXIgb3IgaW4gYSB0ZW50IHdpdGggYSBjYW1wZmlyZSBhbmQgbGFudGVybiArc3RvdmUuIEJvdWdodCBmb29kIGZyb20gV2FsbWFydCwga2VwdCBpdCBpbiBhbiBpY2UgY2hlc3QsIHN0b2xlIHdhdGVyIGZyb20gdGhlaXIgcHJpbW8gbWFjaGluZSwgYW5kIGFjdHVhbGx5IGdhaW5lZCBhbG90IG9mIGhlYWx0aHkgd2VpZ2h0IChza2lubnkgdG8gbXVzY3VsYXIpLi4gCkkgYWxzbyBkb24gc2VlIHdoeSBwZW9wbGUgZ2V0IHNvIHdlaXJkZWQgb3V0IGJ5IHBlb3BsZSBraXNzaW5nLiAKR2V0dGluZyB1c2VkIHRvIHRoZSB2YWx1ZSBzeXN0ZW0gaXMgY3JpdGljYWwgZXNwZWNpYWxseSB3aGVuIHlvdSB3YW50IHRvIHdpbiB0aGUgcm91bmQgYnV0IGl0IGlzbid0IGFzIGVhc3kgYXMgaXQgc291bmRzLiAKSW4gcnVyYWwgYW5kIHJlZ2lvbmFsIGFyZWFzLCBtb3JlIHRoYW4gJDUzIG1pbGxpb24gd2FzIGxvc3QgZHVyaW5nIHRoZSBtb250aCBhY3Jvc3MgMTg1IHZlbnVlcyAgIGZpdmUgcGVyIGNlbnQgaGlnaGVyIHRoYW4gdGhlIGxvc3NlcyBhIHllYXIgZWFybGllci4gCkhpZ2ggc3Rha2VzIHBva2VyIG1hY2hpbmVzIGNhbiBjaGV3IHRocm91Z2ggJDEyMDAgYW4gaG91ci4gVGhlIFByb2R1Y3Rpdml0eSBDb21taXNzaW9uIHJlY29tbWVuZGVkIGluIGEgMjAxMCByZXBvcnQgdGhlICQxIGJldCBsaW1pdCBiZSBwaGFzZWQgaW4gb3ZlciB0aW1lLCBhbG9uZyB3aXRoIG1hbmRhdG9yeSBwcmUgY29tbWl0bWVudCB0ZWNobm9sb2d5LiBIb3dldmVyLCBhc3Npc3RhbnQgY29tbWlzc2lvbmVyIERyIFJhbHBoIExhdHRpbW9yZSB0b2xkIHRoZSBjb21taXR0ZWUgdGhlcmUgaGFkIGJlZW4gInNpZ25pZmljYW50IGV4YWdnZXJhdGlvbnMgb2YgdGhlIHJlYWwgY29zdCIgb2YgdGhlIHByb3Bvc2FsLiAKQ2V0dGUgYW5uZSwgcXVhdHJlIGNvbmNlcnRzIGludml0ZXJvbnQgIGRjb3V2cmlyIGxhIG11c2lxdWUgZXNwYWdub2xlIGRlcyBYVkllIGV0IFhWSUllIHNpY2xlcyBldCBkZXMgY29tcG9zaXRldXJzIGRlIHByZW1pZXIgb3JkcmUgY29tbWUgSnVhbiBDZXJlcm9scywgQ3Jpc3RvYmFsIGRlIE1vcmFsZXMgb3UgR2FzcGFyIFNhbnogKENoYW1wYWduZSwgU2FpbnQgU3ltcGhvcmllbiBkZSBNYWh1biwgU2FpbnQgTWFyY2VsIGQnQXJkY2hlLCBTYWludCBCYXJ0aGxteSBHcm96b24pKS4gCkMnZXN0IHNvcnRpIGRhbnMgZGVzIGpvdXJuYXV4LlF1YW5kIGplIGx1aSBhaSBwYXJsIGRlIGZhaXJlIHVuIHNpdGUgcG91ciBjZW50cmFsaXNlciBsZXMgaW5mb3JtYXRpb25zIGF2ZWMgdW5lIG1haWxpbmcgbGlzdCwgaWwgbSdhIHJwb25kdSBxdSdpbCBuJ2F2YWl0IHBhcyBsZSB0ZW1wcy4gCkV0LCBwb3VyIGNldXggcXVpIG5lIGwgdG91am91cnMgcGFzLCB1biBwZXRpdCBleHRyYWl0IGluZGl0IHBvcnRhbnQgc3VyIGwgZGVzIGFuaW1hdXggc2FjcnMgcG91ciBiaWVuIGRlcyB0cmlidXMgYW1yaW5kaWVubmVzLCBsIDouIApJbiBBbHBpbmUgU2hpcmUgdGFraW5ncyByb3NlICQ3OCwwMDAgZHVyaW5nIHRoZSBzaXggbW9udGggcGVyaW9kLiAKVGhpcyB3YXMgQ2FkYSdzIGZpcnN0IGZ1bGwgeWVhciBiZWluZyBhZ2UgZWxpZ2libGUgaW4gVmVnYXMsIGFuZCBoZSBlbmRlZCB1cCBicmluZ2luZyBhIG1vdW50YWluIG9mIGNoaXBzIHRvIHRoZSBoZWFkcyB1cCBmaW5hbGUgaW4gZnJvbnQgb2YgYSBsYXJnZSBhbmQgcmF1Y291cyBjcm93ZCB0aGF0IGhhZCB3YWl0ZWQgaW4gbGluZSB1cCB0byBzaXggaG91cnM6ICQxMzYgbWlsbGlvbiBpbiBjaGlwcyB0byBNb29uJ3MgJDU5IG1pbGxpb24uIEhlIGhhZCBzdXJ2aXZlZCBudW1lcm91cyBmbGluZ3Mgd2l0aCBlbGltaW5hdGlvbiB0byBnZXQgdGhhdCBmYXIsIGF0IG9uZSBwb2ludCBydW5uaW5nIGRlYWQgbGFzdCBhdCB0aGUgdGFibGUgb2YgbmluZS4gIkhlIGxvb2tlZCBsaWtlIGhlIHdhcyBhYm91dCB0byBjcnksIiBzYXlzIEpvbmF0aGFuIExpdHRsZSwgYSBwb2tlciBwcm8gd2hvIGhhZCBhIHRhYmxlIHNpZGUgc2VhdC4gQnV0IENhZGEgaW5jaGVkIGJhY2sgd2l0aCBhIHNlcmllcyBvZiB1bmNoYWxsZW5nZWQgYmV0cywgdGhlbiBkb3VibGVkIGhpcyBzdGFjayB3aXRoIGEgZHJhbWF0aWMgYWxsIGluIHNob3dkb3duIGluIHdoaWNoIGhlIHNob3dlZCB0aHJlZSB0aHJlZXMsIGFuZCBoZSB3YXMgb24gaGlzIHdheS4gKFdhdGNoIHRoZSB2aWRlbyAiUG9rZXIgQ29tZXMgdG8gQ2hpbmEuIikKQW5kIEkgbWFkZSBhIHdyYXBwZWQgbmVja2xhY2Ugb3V0IG9mIGEgc2hlbGwgSSBmb3VuZCBvbiBteSBob25leW1vb24uIApMZXQgbm90IGV2ZW4gZ2V0IHN0YXJ0ZWQgb24gdGhlIGFtb3VudCBvZiBwdWJsaWMgbW9uZXkvcmVzb3VyY2VzIHRoYXQgdGhyb3duIGludG8gdGhlIHRyYXNoIGNhbiB0byBhbXVzZSBhbmQgY2xlYW4gYWZ0ZXIgdGhlc2UgcGVvcGxlLiBUaGlzIHJlcHJlc2VudHMgQnJhemlsLCBidXQgaXQgZG9lc24gbWVhbiBpdCBhIGdvb2QgcmVwcmVzZW50YXRpb24uIEl0IGFuIGV4dHJlbWVseSBpbWJlY2lsaWMgcGFydCBvZiBvdXIgY3VsdHVyZSwgYW5kIGlzIGp1c3QgcHJldHR5IG11Y2ggYSBwYXJhZGUgb2YgbW9yYWwgYW5kIGNpdmlsIGRlZ2VuZXJhY3kuIApJdCdzIGEgcGhlbm9tZW5vbiB0aGF0IHNlZW1zIHByaW1hcmlseSBjZW50cmVkIGluIHRlY2hub2xvZ3kgYW5kIG1hcmtldGluZyBzZWN0b3JzLCBzYXlzIEFsaW5hIE93c2lhbmlrLCBkaXJlY3RvciBvZiB0YWxlbnQgYWNxdWlzaXRpb24sIGRpdmVyc2l0eSBhbmQgaW5jbHVzaW9uIGF0IFJhbmRzdGFkIENhbmFkYS4KQWZ0ZXIgaGlnaCBzY2hvb2wgRGF2aWQgbW92ZWQgdG8gU2FsdCBMYWtlIENpdHkgdG8gbGl2ZSB3aXRoIENocmlzIGFuZCBSb2dlciwgaGlzIHNpc3RlciBhbmQgYnJvdGhlciBpbiBsYXcsIHdoaWxlIGhlIGF0dGVuZGVkIFNhbHQgTGFrZSBDb21tdW5pdHkgQ29sbGVnZSB3aGVyZSBoZSBlYXJuZWQgYW4gQXNzb2NpYXRlIGRlZ3JlZS4gQmV0d2VlbiBzY2hvb2wgYW5kIHZpc2l0cyBob21lLCBoZSBtZXQsIGFuZCBldmVudHVhbGx5IG1hcnJpZWQgTWFyaWxsYSBUZXJyeS4KQSBGcmVlcm9sbCBpcyBhIEZyZWUgUG9rZXIgVG91cm5hbW5ldCB3aXRoIGEgc3BvbnNvcmVkIHByaXplIHBvb2wuIFRoZXJlIGlzIGEgZnJlZXJvbGwgcnVubmluZyBhbGwgdGhlIHRpbWUgb24gdGhlIGludGVybmV0LiBJbiBtb3N0IG9mIHRoZW0gdGhlIHdob2xlIHByaXplcG9vbCBpcyBhcm91bmQgb25lIGh1bmRyZWQgZG9sbGFycy4gWW91IHdpbGwgYWxzbyBmaW5kIHRoYXQgbWFueSBvZiB0aGVzZSBmcmVlIHBva2VyIHRvdXJuYW1lbnRzIGhhdmUgYSBodWdlIGZpZWxkIG9mIHBhcnRpY2lwYW50cy4gClNvIGlmIHRoYXQncyB0aGUgZG93bnNpZGUgdG8gYSBiaWdnZXIgZmllbGQsIHdoYXQgYXJlIHRoZSB1cHNpZGVzPwpFdmVyIHNpbmNlIHRoYXQgZGF5LCBJIG1ha2UgaXQgYSBwb2ludCB0byBuZXZlciB0YWxrIHRvIGFueWJvZHkgYmVoaW5kIGEgd2FsbC4gSSBwdWxsZWQgMjAwa2cgbXkgcHJldmlvdXMgdHJhaW5pbmcgYmxvY2sgYnV0IGJhcmVseSBncmF6ZSBwYXN0IDEwMGtnIGJlbmNoLiBJIGFkZGluZyBsaWtlIDFrZyBwZXIgeWVhciBvbiBiZW5jaCBidXQgbXkgZGVhZGxpZnQgZ28gdXAgbGlrZSAyMCAzMGtnIGEgeWVhci4gCkxldCdzIHNheSB5b3UgZ2V0IGEgZGVudCBpbiB0aGUgaG9vZCAgIG5vdGhpbmcgdG9vIGRyYXN0aWMsIGp1c3QgYSBzaGFsbG93LCBldmVuIGRlbnQgd2l0aCBubyBzaGFycCBjcmVhc2VzIGluIGFuIGFyZWEgdGhhdCdzIHByZXR0eSBlYXN5IHRvIHJlYWNoLiBZb3UgdGhpbmsgaXQnbGwgYmUgZWFzeSB0byBwb3AgaXQgb3V0IG9uIHlvdXIgb3duLCBzbyB5b3UgYmVnaW4gdG8gbWFzc2FnZSB0aGUgdW5kZXJzaWRlIHdoaWxlIGhvbGRpbmcgeW91ciBzaGFwaW5nIHRvb2wgaW4gcGxhY2UuIFlvdSd2ZSBtYWRlIGdvb2QgcHJvZ3Jlc3Mgc28gZmFyLCBhbmQgYSBjYXN1YWwgb2JzZXJ2ZXIgd291bGRuJ3QgZXZlbiBub3RpY2UgdGhlIGZsYXdlZCBhcmVhLiAKUGxheWluZyBkZXZpbCBhZHZvY2F0ZSBpbiBhIHN1cHBvcnQgc3ViIHJhcmVseSB0dXJucyBvdXQgd2VsbCBmb3IgYW55b25lIGFuZCBub2JvZHkgcG9zdHMgaGVyZSBpZiB0aGV5IGRlYWxpbmcgd2l0aCBub3JtYWwsIGhhcm1sZXNzIE1JTHMuIApUaGlzIGlzIGEgd2VpcmQgb25lLiBJIGhhdGVkIHRyYXZlbCwgYnV0IG15IHdpZmUgYW5kIEkgYm90aCBwbGF5IE1hZ2ljIHRoZSBHYXRoZXJpbmcuIApBIG1vbnRoIGFnbyBJIHdlbnQgdGhyb3VnaCBvbmUgb2YgdGhlIHdvcnNlIGRvd25zd2luZ3MgaW4gbXkgeW91bmcgcG9rZXIgY2FyZWVyIGFuZCB3YXMgZ29pbmcgdG8ganVzdCBzdG9wIGFuZCBtb3ZlIG9uLgpEb3VnbGFzIEFkYW1zClRvIG15IGJlc3QgdW5kZXJzdGFuZGluZyB0aGUgcG9saWNlIGFyZW4gZGlyZWN0bHkgYXQgZmF1bHQgaGVyZS4gCkJhcm51bSB3YXMgc28gZXhjdGllZCBieSB0aGUgZXhpc3RhbmNlIG9mIENoYW1wIHRoYXQgaGUgb2ZmZXJlZCAkNTAsMDAwIGZvciBhIHNrZWxldG9uIG9mIHRoZSBtb25zdGVyIHRvIGpvaW4gaGlzIGV4aGliaXQgb2YgY3VyaW9zaXRpZXMgYW5kIHdvbmRlcnMuLiAKUmlnaHQgYmVmb3JlIG15IGJveWZyaWVuZHMgZ3JhbmRtYSBkaWVkIHNoZSBnYXZlIGhpbSBzb21lIG1vbmV5IHRvIHBheSBmb3IgcGFyYW1lZGljIHNjaG9vbCBzYWlkIGl0IHdhcyBub3QgdG8gYmUgdXNlZCBvbiBhbnl0aGluZyBlbHNlIChoZXIgZXhhbXBsZXMgd2VyZSBsaWtlIHZhY2F0aW9ucykuIApUaGUgZ29hbCBvZiB0aGUgTW9uZ2VsbGkgQXdhcmQgaXMgdG8gc2hpbmUgYSBsaWdodCBvbiB0aGVzZSBlZmZvcnRzLiAKRG9uJ3Qgc2tpcCBvdXQgb24gaXQuIApUaGluayBhYm91dCB3ZWlnaHQgbG9zcy4gVGhlcmUgYXJlIHRob3VzYW5kcyBvZiBib29rcywgZGlldHMsIGZhZHMsIHN1YnJlZGRpdHMsIGFuZCBjb252ZXJzYXRpb25zIGFib3V0IGhvdyB0byBsb3NlIHdlaWdodC4gQnV0IGlmIHlvdSBzdHJ1Z2dsaW5nIHRvIC9yL2xvc2VpdCwgbG9nZ2luZyB5b3VyIGZvb2QgYW5kIGNhbG9yaWVzIGlzIHByZXR0eSBtdWNoIHRoZSBmaXJzdCBzdGVwIHdoZW4gYWxsIGVsc2UgaGFzIGZhaWxlZC4gWW91IG5lZWQgdG8ga25vdyB5b3VyIGJhc2VsaW5lLiBJdCB0aGUgc2FtZSB0aGluZyB3aXRoIHBva2VyLgpUaGUgb2JzY3VyaXR5IGRlZmluaXRlbHkgc2hvdWxkIGhhdmUgc2hyZWRkZWQgdGhhdCBsaXR0bGUgc2hpZWxkIGJ1YmJsZSB0byBzY3JhcHMgd2l0aG91dCBldmVuIHRyeWluZyB0aGF0IGhhcmQsIHN1cGVyIHdlYWsgaW1vLgpJbiB0aG9zZSBwbGFucywgeW91IGhhdmUgZG91YmxlcyBtYXliZSBvbmNlIGluIHRoYXQgd2Vlaz8uIApEZWFsZXIgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgUmV2aWV3CllvdSB3b3VsZG4ndCBldmVuIGFja25vd2xlZGdlIGZvciBhIHNlY29uZCB0byBidXkgaXQgLi4gCkhlIGNvdWxkIG5vdCBjb3ZlciBtZSBidXQgSSB3ZW50IGRvd24gdG8gbGVzcyB0aGFuIDFrLiAKSWYgeW91IGJldCBmbG9wcyBsaWtlIHRoYXQgd2hhdCBkb2VzIGl0IG1lYW4gd2hlbiB5b3UgY2hlY2s/IHlvdSBzaG91bGQgY2hlY2sgYWxsIGZsb3BzIGxpa2UgdGhhdCBvb3AuIApUaGUgc2FtZSBzY2VuYXJpbyBpcyByZXNwb25zaWJsZSBmb3IgcHJlbWVuc3RydWFsIHN5bmRyb21lIGFzIHdlbGwuSGVhbHRoeSBtdWNvc2EgYWxsb3dzIG51dHJpZW50cyB0byBwYXNzIHRoZSBiYXJyaWVyIHdoaWxlIGJsb2NraW5nIHRoZSBlbnRyeSBvZiB0b3hpbnMuV2l0aCBsZWFreSBndXQsIHRoZSBiYXJyaWVyIGlzIGR5c2Z1bmN0aW9uYWwsIGJsb2NraW5nIG51dHJpZW50cyBhdCB0aGUgZGFtYWdlZCB2aWxsaSB3aGlsZSBwZXJtaXR0aW5nIHRveGlucyB0byBlbnRlciB0aGUgYmxvb2Qgc3RyZWFtLkFudGliaW90aWNzIFByb21vdGUgdGhlIEdyb3d0aCBvZiBGdW5ndXNUaGUgc2Vjb25kIHdheSBhbnRpYmlvdGljcyBkYW1hZ2UgdGhlIGludGVzdGluZXMgaXMgYnkgZm9zdGVyaW5nIHRoZSBncm93dGggb2YgQ2FuZGlkYSBhbGJpY2FucyBhbmQgb3RoZXIgcGF0aG9nZW5pYyBmdW5naSBhbmQgeWVhc3QuIApBcyBmYXIgYXMgTWlhbWkgdGhlcmUncyBhbHNvIGEgbmV3IHBsYWNlIHRoYXQganVzdCBvcGVuZWQgdXAgaW4gSGlhbGVhaCBjYWxsZWQgVGhlIEhlYWRRdWFydGVycyBCYXJiZWxsIENsdWIuIApLa2kgKGFsc28ga25vd24gYXMgS3VodXNoa2EpIGlzbiB0ZWNobmljYWxseSBhIEZpbm5pc2ggZmlsbSAoaXQgUnVzc2lhbikgYnV0IGl0IGFib3V0IGEgRmlubmlzaCBzb2xkaWVyLCBhIFJ1c3NpYW4gc29sZGllciwgYW5kIGEgU2FtIHdvbWFuIG9uIGEgZmFybSBpbiBMYXBsYW5kIGR1cmluZyBXVzIuIEVhY2ggb25seSBzcGVha3MgdGhlaXIgb3duIGxhbmd1YWdlLCB3aGljaCBsZWFkcyB0byBzb21lIGZ1biBzaXR1YXRpb25zLCBhbmQgb25seSB0aGUgdmlld2VyIGlzIGFibGUgdG8gZm9sbG93IHdoYXQgdGhlIHRocmVlIGFyZSB0aGlua2luZy4uIApObywgSSB3b24gTm8sIEkgd29uIGxlYXZlIENhbGlmb3JuaWEuIApUaGV5IGludmFkZWQgYWxpZW4gY291bnRyaWVzLCBzcGVudCB0cmlsbGlvbnMsIGRpc3BsYWNlZCBtaWxsaW9ucyBhbmQga2lsbGVkIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBpbiB0aGUgbmFtZSBvZiB0ZWFjaGluZyBvdGhlcnMgdGhlaXIgd2F5IG9mIGxpZmUuIApJbiBmYWN0LCBCbG9vbWJlcmcgcG91cmVkICQ5MCBtaWxsaW9uIG9mIGhpcyBvd24gZG9sbGFycyBpbnRvIHRoZSBlbGVjdGlvbi4uIApBZGRpdGlvbmFsbHkgdGhlcmUgYXJlIG51bWVyb3VzIGNhc2lub3MgdGhhdCBvZmZlciBmcmVlIGxlc3NvbnMgaW4gY2FzaW5vIHBva2VyIGFuZCB5b3UsIGlmIGZvcnR1bmUgcGVybWl0cywgY2FuIGFjY2VzcyB0aGlzIGtpbmQgb2YgY2FzaW5vIGluIHlvdXIgdG93bi4gCkkgdGhpbmsgcmVhY2hpbmcgdGhhdCBwcm9maXQgYW1vdW50IGNvdWxkIGRvYWJsZS4gCk15IGZhbWlseSdzIGhpZGluZy4gCkRlYmF0ZSBhYm91dCBNRS9DRlMgbWFuYWdlbWVudCBtdXN0IG5vdyBiZSBmb2N1c2VkIG9uIHRoZSByaXNrIG9mIGRlbnlpbmcgYWNjZXNzIHRvIGJpb21lZGljYWwgY2FyZSBmb3IgcGF0aWVudHMgc3VmZmVyaW5nIGZyb20gc2VyaW91cyBkaXNlYXNlLiAKVGhlIHR3byBBIFN0YXIgSXMgQm9ybiBjbyBzdGFycyBwZXJmb3JtZWQgIlNoYWxsb3ciIGR1cmluZyB0aGUgYXdhcmRzIHNob3cgYW5kIGJyb3VnaHQgdGhlIGNyb3dkIHRvIHRoZWlyIGZlZXQgYWZ0ZXJ3YXJkcyB3aXRoIGEgcm9hcmluZyBzdGFuZGluZyBvdmF0aW9uLiAKTXkgZGFkIHdhcyBpbiB0aGUgbmF2eSBzbyBJIGRvbid0IGtub3cgaG93IG11Y2ggb2YgbXkgbW9tJ3MgcHJlZ25hbmNpZXMgaGUgd2FzIGhvbWUgZm9yLiBQbHVzIGl0IHdhcyAzMCsgeWVhcnMgYWdvIHNvIHdobyBrbm93cyBob3cgbXVjaCBkZXRhaWxzIGhlIHJlbWVtYmVycy4gCldhcmRyb2JlIGFkZHMgbW9yZSBmdW5jdGlvbiBiZWNhdXNlIHlvdSBjYW4gYWN0dWFsbHkgYWNjZXNzIHRoZSBzcGFjZSBhbGwgdGhlIHdheSB1cCB0byB0aGUgY2VpbGluZy4gV2hlbiB5b3UgYXJlIGRlYWxpbmcgd2l0aCA0IGluY2hlcyAob2YgZHJ5d2FsbCB0aGlja25lc3MpLCB0aGF0IGlzIGFjdHVhbGx5IHF1aXRlIGEgY2h1bmsgb2Ygc3BhY2Ugd2FzdGVkLiBUaGUgOCBmb290IDYgaW5jaCBjZWlsaW5ncyBnaXZlIGFkZGl0aW9uYWwgc3BhY2Ugbm90IGp1c3QgaW4gdGhlIHdhcmRyb2JlcyBidXQgY3JlYXRlIGEgc2Vuc2Ugb2Ygc3BhY2UgdGhyb3VnaG91dCB0aGUgdW5pdC4uIApNb2Rlcm4gd29tZW4gY29uc2lzdGVudGx5IHNwZWFrIGFib3V0IHNhZmUgc3BhY2VzIGZvciBmZW1hbGVzLiBXaGVuIG1lbiBzcGVhayBhYm91dCBzYWZlIHNwYWNlcyBmb3IgbWFsZXMsIHRoZXkgYXJlIG9mdGVuIG1ldCB3aXRoIHRoZSByZXNwb25zZSBvZiwgInRoZSB3b3JsZCBpcyBhIHNhZmUgc3BhY2UgZm9yIG1lbiwgdGhlIHBhdHJpYXJjaHkgZW5zdXJlcyB5b3VyIHNhZmV0eSwgZXRjLiIuIApUaGUgY3Jvc3MgZXhhbWluYXRpb24gd2FzIGxpdHRlcmVkIHdpdGggb2JqZWN0aW9ucyBmcm9tIGJvdGggc2lkZXMgb2YgdGhlIGNvdXJ0IHJvb20sIGVzcGVjaWFsbHkgd2hlbiBNY0NhdWxleSBzdGFydGVkIHJlYWRpbmcgdmVyYmF0aW0gZnJvbSB0aGUgYWZmaWRhdml0LiBUaGUgZGVmZW5zZSB3YXMgYWxzbyBzaG90IGRvd24gd2hlbiBhdHRvcm5leSBNaWNoYWVsIEZlZSBhc2tlZCBpZiB0aGUgcGxheWVyIHdyb3RlIEtyYWZ0IGEgY2hlY2sgZm9yICQ1MCwwMDAgdG8gYSBmb3VuZGF0aW9uIGRlZGljYXRlZCB0byB0aGUgbWVtb3J5IG9mIGhpcyBsYXRlIHdpZmUsIE15cmEgS3JhZnQsIHNvb24gYWZ0ZXIgdGhlIFBhdHJpb3RzIHJlbmV3ZWQgSGVybmFuZGV6J3MgY29udHJhY3QuCkhpZ2ggcGFpcnMgc3VjaCBhcyBBY2UvQWNlLCBLaW5nL0tpbmcsIFF1ZWVuL1F1ZWVuLCBKYWNrL0phY2sgb3IgMTAvMTAKSXQncyBub3Qgb25seSB0aGUgbW9zdCBvdmVydGx5IHJhY2lzdCBzdG9yeSBvZiB0aGUgdGhyZWUsIGl0J3MgdGhlIGxlYXN0IHNhdGlzZnlpbmcgbmFycmF0aXZlbHksIGNvbnNpc3RpbmcgbGFyZ2VseSBvZiBhIGRlcml2YXRpdmUgYWR2ZW50dXJlIHRoYXQgZW5kcyBhYnJ1cHRseS4gCkZhc2hpb24gU3R5bGUKVGhleSBvd25lZCBBbWVyaWNhIGV2ZXIgc2luY2UuLiAKRGV0cm9pdCBSZWQgV2luZ3MgTmV3cyBBbmQgVXBkYXRlcyBGcm9tIENCUyBBbmQgV1dKCldpdGggdGhlaXIgbW90aGVyIG91dCBvZiB0aGUgY291bnRyeSwgdGVlbmFnZSBicm90aGVycyBTZXRoIGFuZCBaYWsgZmVuZCBmb3IgdGhlbXNlbHZlcywgc3Vydml2aW5nIG9uIGR3aW5kbGluZyBmdW5kcyBhbmQgbGl2aW5nIGluIHRoZWlyIGRlY2Vhc2VkIGdyYW5kZmF0aGVyJ3MgY291bnRyeSBob3VzZS4gCkNyZGl0IDogR2V0dHlJbWFnZXNJbm5vbWJyYWJsZXMgdGV4dG9zLCBydmVpbHMgbWF0aW5hdXggZXQgcm9iZSBkZSBtYXJpZSBJbnRlcnJvZ2UgcGFyIGwnZGl0aW9uIGFtcmljYWluZSBkdSBtYWdhemluZSBWb2d1ZSwgY2UgbWFyZGkgMjIgamFudmllciwgbGEgcGFwZXNzZSBkZSBsYSBtb2RlIHMgbGl2cmUgc2FucyBkdG91ciBzdXIgbGVzIGhhYml0dWRlcyBkZSBsYSBkdWNoZXNzZSBkZSBTdXNzZXguCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gRm9yIGV4YW1wbGUsIGd1eXMgdGhhdCBnZXQgaW50byB0aGUgbWFpbiBldmVudCB2aWEgc2F0ZWxsaXRlIGFyZSByZXF1aXJlZCB0byB3ZWFyIGEgcGF0Y2ggb2YgdGhlIHNpdGUgdGhleSB3b24gdGhlIGVudHJ5IG9uIChpdCB0eXBpY2FsbHkgcGFydCBvZiB0aGUgYWdyZWVtZW50IGluIHRoZSBwcml6ZSBwYWNrYWdlKS4gCk9uZSBlbGRlcmx5IHdvbWFuIGRlc2NyaWJlZCB0aGUgc25ha2UgYXMgc29vdGhpbmcsIGxpa2UgYSBjb2xkIGNvbXByZXNzLCBCYXJhayB0b2xkIFRJTUUgbWFnYXppbmUgW3NvdXJjZTogTWNHaXJrIGFuZCBFbGF6YXJdLiAKQnV0IHN1cmUgdGhlcmUgYXJlIGRlZiBwZW9wbGUgd2hvIHNob3VsZG4ndCBvd24gZ3VucyB0aGF0IGRvLiAKWW91ciBTdWJzY3JpcHRpb24gYWNjb3VudCB3aWxsIGJlIGNoYXJnZWQgYW4gYWRkaXRpb25hbCBmZWUsIHVwIHRvICQyIGZvciBlYWNoIHN1Y2ggZWRpdGlvbiwgaW4gYSBCaWxsaW5nIFBlcmlvZCB3aGVuIG9uZSBvciBtb3JlIHByZW1pdW0gZWRpdGlvbiBpcyBwdWJsaXNoZWQsIHdoaWNoIHdpbGwgc2hvcnRlbiB0aGUgbGVuZ3RoIG9mIHlvdXIgQmlsbGluZyBQZXJpb2QuIApUaGUgcGFydHkgZ2V0cyB0aGUgbWVzc2FnZSwgaG9wcyBvbiB0aGUgY3JvYywgYW5kIGJvb2tzIGl0IG91dCBvZiB0aGVyZS4gVGhlIGxhc3QgaW1hZ2UgaXMgYSA0MGZ0IGNyb2NvZGlsZSB3aXRoIGEgZ2F1ZHkgbm9zZSByaW5nIHJhY2luZyB0aHJvdWdoIGEgc3dhbXAsIGRlc3Ryb3lpbmcgdHJlZXMgYW5kIGJydXNoIGFsb25nIHRoZSB3YXksIHdoaWxlIGJlaW5nIGNoYXNlZCBieSBhIGdpYW50IG9ncmUsIGFuZCBoYXZpbmcgYSAiYmFieSBvZ3JlLCIgZWx2ZW4gZHJ1aWQsIHRpZWZsaW5nIFBhbGFkaW4sIGFuZCBmaXJib2xnIHJhbmdlciB1cG9uIGl0cyBiYWNrLgpJZiBhbnlvbmUgc2hvdWxkIGJlIHNob3djYXNlZCBhcyBhIGNvbW1lbnRhdG9yIG9uIG9uZSBvZiB0aG9zZSBiaWcgcG9rZXIgVFYgcHJvZ3JhbXMsIGl0J3MgdGhlIE1hZCBHZW5pdXMuIEhlIGhhcyBleHBlcmllbmNlLCBrbm93bGVkZ2UsIGFuIG9waW5pb24gYW5kIGEgd2lsbGluZ25lc3MgdG8gYmFjayBpdCB0byB0aGUgaGlsdCAgIG5vdCB0byBtZW50aW9uIGEgY29sb3JmdWwsIGNhcmVmdWxseSBjdWx0aXZhdGVkIGNvdW50ZW5hbmNlIHRoYXQgaGFzIGNoYW5nZWQgbGl0dGxlIHRocm91Z2ggdGhlIGRlY2FkZXM6IFRoaW5rIExhcnJ5IEZpbmUgbWVldHMgQWxsZW4gR2luc2JlcmcgbWVldHMgQm96by4uIAooQiBBaXIgRm9yY2UgU2d0LiAKR2FtYmxpbmcgaXMgYSBwYXN0aW1lIHRoYXQgaGFzIGJlZW4gYXJvdW5kIGZvciBjZW50dXJpZXMuIEluIGZhY3QsIGl0IGlzIHJlZ2FyZGVkIGFzIG9uZSBvZiB0aGUgZWFybGllc3QgbWV0aG9kcyBvZiBlbnRlcnRhaW5tZW50LCBhbmQgY29udGludWVzIHRvIGJlIHdpbGRseSBwb3B1bGFyIGFtb25nIHRvZGF5J3Mgc29jaWV0eS4gSXQgaXMgYmVsaWV2ZWQgdG8gaGF2ZSBvcmlnaW5hdGVkIGluIENoaW5hIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBwbGF5aW5nIGNhcmRzLCBhbmQgaGFzIGRldmVsb3BlZCBpbnRvIGEgd29ybGQgb2Ygb3B0aW9ucywgdGFpbG9yZWQgdG8gdGhlIHZhcnlpbmcgaW50ZXJlc3RzIG9mIHBsYXllcnMuIFRvZGF5LCB0aGUgZ2FtaW5nIHdvcmxkIGlzIG11Y2ggbW9yZSB0aGFuIHBsYXlpbmcgY2FyZHMuIEl0IGVuY29tcGFzc2VzIGEgcGxldGhvcmEgb2Ygb3B0aW9ucyBmb3Igd2hpY2ggZ2FtZXJzIGNhbiBleGVyY2lzZSB0aGVpciBpbnRlcmVzdHMgYm90aCBsaXRlcmFsbHkgYW5kIHZpcnR1YWxseS4gSXQgaW5jbHVkZXMgc2xvdCBtYWNoaW5lcywgdmlkZW8gcG9rZXIsIGJhY2NhcmF0LCBjcmFwcywgYmxhY2tqYWNrLCBwb2tlciBnYW1lcywgc2NyYXRjaCBjYXJkcywgbG90dG8gZ2FtZXMsIHNwb3J0cyBiZXR0aW5nLCBhbmQgbW9yZS4KSSBnb3QgaGltIG9uIEFwcmlsIDFzdCwgMjAwNy4gSGlzIGZvc3RlciBtb20gZHJvdmUgaGltIGFsbCB0aGUgd2F5IHVwIGZyb20gVGV4YXMgYmVjYXVzZSBJIHdhcyBidXN5IGdldHRpbmcgbXkgZmlyc3QgaG9tZSBmaXhlZCB1cC4gCkkgd2FudCB0byBnZXQgeW91ciBwb2ludCBidXQgdGhhdCBoYXMgdG8gYmUgdHdvIHNpZGVkLiAKU2hlIHRoaW5rcyBzaGUgaXMgYmVpbmcgbGllZCB0byBidXQgZG9lcyBub3Qgd2FudCB0byBzZXBhcmF0ZSBiYXNlZCBvbiB0aGF0IGFsb25lLiAKTGEgdmllIGNvbW1lbmNlICBsYSBjb25jZXB0aW9uLCBsb3JzcXVlIGxhIHByZW1pcmUgY2VsbHVsZSBlc3QgZm9ybWUuIApDLiBUaW1iYWwgZXQgQS4gQ2FzdGFsZG8sIEhpc3RvaXJlIGRlcyBpbnN0aXR1dGlvbnMgcHVibGlxdWVzIGV0IGRlcyBmYWl0cyBzb2NpYXV4LCBQcmNpcyBEYWxsb3osIDltZSBkaXRpb24sIHAgOiA0MzcpLi4gCllvdSBjYW4gdHJ5IHRha2luZyBhIGxvdyBkb3NlIGF0IG5pZ2h0LCB0aGlzIGRvZXMgbm90IGZ1bmN0aW9uIGxpa2UgYSBzZWRhdGl2ZSwgaXQgZ2l2ZXMgeW91ciBib2R5IHNvbWV0aGluZyBpdCBuZWVkcyB0byB0cmljayBpdCBpbnRvIHByb3BlciBzbGVlcCBjeWNsZXMuIApOIENhc3NhdGlvbiA6IEFubnVsYXRpb24gcGFyIGxhIENvdXIgZGUgY2Fzc2F0aW9uIG91IGxlIENvbnNlaWwgZCdFdGF0IGQndW5lIGRjaXNpb24gZGUganVzdGljZSByZW5kdWUgY29udHJhaXJlbWVudCBhdXggcmdsZXMgZGUgZHJvaXQuCkkgd2FzIGluIGEgbWV0YSBnYW1lIHJhaXNpbmcgd2FyIHdpdGggc29tZSBkcnVuayBtb3JvbiB5ZWFycyBhZ28gYXQgYSAkMS8yIHRhYmxlIHdpdGggZWZmZWN0aXZlIHN0YWNrcyBhdCBhcm91bmQgJDI1MCAgIEhlIHdhcyBtaW4gMyBiZXR0aW5nIGFuZCB0aGVuIGZvbGRpbmcgdG8gamFtcy4gSGUgb3BlbnMgVVRHIHRvICQ3IGFuZCBJIHJhaXNlZCB3aXRoIDEwcyB0byAkMjQgYW5kIGhlIG1pbiByYWlzZWQgdG8gJDUwIGFuZCBJIHNoaXAgaXQgaW4gZXhwZWN0IHNhbWUgcmVzdWx0LiBVaCB1aCAgIGhlIGNhbGxzLiBGbG9wIGlzIEEgMiA2IGFuZCBJIGZpZ3VyZSBoaXMgZ2FyYmFnZSBBY2UganVzdCBnb3QgdGhlcmUuIFR1cm4gYSBKIGFuZCByaXZlciBpcyAzLiBJIHR1cm4gbXkgY2FyZHMgb3ZlciBhbmQgaGUgYWxtb3N0IG11Y2tzIGFzIGhlIGlzIHN0YXJpbmcgYXQgdGhlIGJvYXJkLiBIZSBmaW5hbGx5IHR1cm5zIGlzIGNhcmRzIG92ZXIsIDVjIDRjIGFuZCBkZWFsZXIgaGFzIHRvIHRlbGwgaGltIGhlIHdvbiB3aXRoIGEgc3RyYWlnaHQuClNvIGl0J3MgbGVzcyBsaWtlIGhhdmluZyBleWVzIGluIHRoZSBiYWNrIG9mIHlvdXIgaGVhZCBhbmQgbW9yZSBsaWtlIGhhdmluZyBhIHBhaXIgb2YgdGhvc2Ugbm92ZWx0eSBzdW5nbGFzc2VzIHdpdGggbWlycm9ycyB0aGF0IGxldCB5b3Ugc2VlIGJlaGluZCB5b3UuIEl0IGlzIHRoZSBvbmx5IHZlcnRlYnJhdGUgY3JlYXR1cmUgb24gZWFydGggdGhhdCBkb2VzIHRoaXMuLiAKV2hvIGluIHRoZWlyIHJpZ2h0IG1pbmQgd291bGQgb3Bwb3NlIGEgaG9tZSB0aGVhdGVyIHdpdGggc3Vycm91bmQgc291bmQsIG1vdG9yaXplZCByZWNsaW5lcnMgYW5kIGEgcG9wY29ybiBtYWNoaW5lPyBBbmQgeWVzLCB5b3VyIG1pbmkgdGhlYXRlciBpcyB0ZWNobmljYWxseSBhIG1hbiBjYXZlLCBidXQgdGhhdCBkb2Vzbid0IG1lYW4gaG9ycm9yIGZsaWNrcyBhbmQgZ2FuZ3N0ZXIgc2hvb3QgZW0gdXBzIGhhdmUgdG8gYmUgdGhlIG9ubHkgZmVhdHVyZXMgb24gdGhlIG1vdmllIG1lbnUuIApKdWthaSBpcyBhbHNvIHByZWNlZGVkIGJ5IHRoZSBzdHVkZW50IHNld2luZyB0b2dldGhlciB0aGVpciBvd24gcmFrdXN1LCBhbmQgcGFydCBvZiB0aGUgY2VyZW1vbnkgaXMgdGhlIHRlYWNoZXIgcHJlc2VudGluZyB0aGUgcmFrdXN1IGJhY2sgdG8gdGhlIHN0dWRlbnQsIHdpdGggdGhlIHRlYWNoZXIgaW5zY3JpcHRpb24gb24gdGhlIHJha3VzdSBvbiB0aGUgYmFjay4gQW5kLCBqdWthaSBpcyB0aGUgY2VyZW1vbnkgYXQgd2hpY2ggYSBmb3JtYWwgc3R1ZGVudCByZWNlaXZlcyB0aGVpciBkaGFybWEgbmFtZS4KVGhlbiBhZnRlciB0aGF0LCBteSB3aG9sZSByaWdodCBzaWRlIHdhcyBqdXN0IHNvcmUuIApJIHJlYWQgYSBwYXJlbnRpbmcgYm9vayB0aGF0IHNhaWQgdGhhdCB0aGVyZSBhcmUgdHdvIGtpbmRzIG9mIGZyaWVuZHM6IGZhY2UgdG8gZmFjZSBhbmQgc2hvdWxkZXIgdG8gc2hvdWxkZXIuIFdvbWVuIGhhdmUgYSB0ZW5kZW5jeSB0byBoYXZlIG1vcmUgZmFjZSB0byBmYWNlIHJlbGF0aW9uc2hpcHMgd2hlcmUgdGhleSB0YWxrIGFuZCBib25kIHdoaWxlIGRpc2N1c3NpbmcgdGhlaXIgbGl2ZXMuIApMZXMgbGVjdGlvbnMgcHJzaWRlbnRpZWxsZXMgZnJhbmFpc2VzIGVuIGF2cmlsO0onZXNwcmUgcXVlIGwnZW5zZW1ibGUgZGVzIHZuZW1lbnRzIHBvbGl0aXF1ZXMgbWFqZXVycyBkZXZhbnQgc2UgZHJvdWxlciBkYW5zIGxlcyBtb2lzIHF1aSBzdWl2cm9udCwgcGVybWV0dHJvbnQgdW4gYXBwcm9mb25kaXNzZW1lbnQgb3UgdW5lIGFtbGlvcmF0aW9uIGRlIGxhIHNpdHVhdGlvbiBwb2xpdGlxdWUsIGNvbm9taXF1ZSwgc29jaWFsZSwgLiAKSGV5LCBkb24ndCB3b3JyeSwgYXMgbG9uZyBhcyB5b3UgYXJlIGFsd2F5cyB0cnlpbmcgdG8gaW1wcm92ZSwgdGhpbmtpbmcgYWJvdXQgYWxsIHRoZXNlIGRpZmZlcmVudCB0aGluZ3MgZHVyaW5nIHRoZSBoYW5kIGdldHMgbXVjaCBlYXNpZXIgYW5kIG1vcmUgcm91dGluZS4KU28gQ29ybWFubiBpcyBzdGVhZGlseSB3b3JraW5nIG9uIHRoZSBjcm9zc2JlbmNoZXJzLCBwaWNraW5nIHRoZW0gb2ZmIG9uZSBieSBvbmUuCkZvciBleGFtcGxlLCB3aGVuIHlvdSBoYXZlIEtpbmdzIHByZWZsb3AsIGFuZCBwZW9wbGUgbGltcCBhcm91bmQgdG8geW91LCBvciBpZiBzb21lb25lIGVsc2UgcmFpc2VzIGFuZCBhIGZldyBwZW9wbGUgbWFrZSB3ZWFrIGNhbGxzIGFuZCB0aGVuIGl0IGdldHMgdG8geW91LCBqdXN0IG1ha2UgaXQgbGlrZSA2MCA3MCBkb2xsYXJzIG9yIHNvbWUgc2hpdCBpbnN0ZWFkIG9mIGxpa2UsIGxldHMgc2F5IDQ1LiAKQWx0ZXJuYXRpdmVseSwgc3RyaWtlIHRoZSBiYXIgYSBudW1iZXIgb2YgdGltZXMgaW4gdGhpcyBwb3NpdGlvbi4gClRoZSB2aW9saW4gaXMgcG9zaXRpb25lZCB3aXRoIGl0cyBicm9hZCBlbmQgYWdhaW5zdCBvbmUncyBzaG91bGRlcix1c3VhbGx5IHRoZSBsZWZ0IHNob3VsZGVyLiBUaGUgbGVmdCBhcm0gaG9sZHMgdGhlIGluc3RydW1lbnQgaW5wbGFjZS4gVGhpc2NhdXNlcyB2aWJyYXRpb24gb2YgdGhlIHN0cmluZ3Mgd2hpY2ggdGhlbiByZXNvbmF0ZXMgdGhyb3VnaCB0aGV2aW9saW4ncyBzb3VuZGJveCAgIHRoYXQgaXMsIHRoZSBob2xsb3cgaW50ZXJpb3Igb2YgdGhlIHZpb2xpbi4gCkkgZG9uIHdhbnQgdGhlIHRpdGxlIGJhciB0byBjb21lIHVwIHdoZW4gSSBtb3VzZSB1cCB0byBjbG9zZSBhIGJyb3dzZXIgdGFiLCBhbmQgSSBnb3QgYSB0ZWVueSBiaXQgdG9vIGZhci4gClRoYXQgd291bGQgbWFrZSBpdCBhIGxvdCBlYXNpZXIgdG8gbWFzdGVyIHRoYW4gc2F5IExlYWd1ZSBvZiBMZWdlbmRzLkl0IGlzIG5vdCBqdXN0IHJlYWwgdGltZSBiZWluZyBzbG93LCBidXQgYWxzbyB0aGVyZSBpcyB0aGUgY29tcHV0YXRpb25hbCBidXJkZW4gb2YgZGVhbCB3aXRoIGFsbCB0aGUgdmlzdWFsIGFuZCBhdWRpdG9yeSBkYXRhLiAKVGhhdCBhIHRvdGFsIG9mICQxMjAsMDAwIGZvciBmb3VyIHllYXJzIG9mIHBvc3Qgc2Vjb25kYXJ5IGVkdWNhdGlvbi4gSWYgdGhleSBhZGQgJDIsMDAwIHBlciBjaGlsZCBwZXIgeWVhciB0byBlZHVjYXRpb24gZnVuZCB0byBlYWNoIGNoaWxkIGFnZSAxNywgcGVyaGFwcyBieSBjdXRzIGluIHRyYXZlbCBhbmQgcmVzdGF1cmFudHMgYW5kIGV2ZW50dWFsbHkgcmVkdWNlZCBjaGlsZCBjYXJlLCBlYWNoIHdvdWxkIGFsc28gcmVjZWl2ZSBhICQ0MDAgYW5udWFsIENhbmFkYSBFZHVjYXRpb24gU2F2aW5ncyBHcmFudCwgdGhlIGxlc3NlciBvZiAyMCBwZXIgY2VudCBvZiBjb250cmlidXRpb25zIG9yICQ1MDAuIApGb3IgZXhhbXBsZSwgeW91IHdpbGwgaGF2ZSBzZW5zYXRpb24gb2Ygc2hhbGxvdyBicmVhdGhpbmcgd2hlbiB5b3UgaW5oYWxlLCBzb21lIGRpYXBocmFnbSBwYWluIHdoZW4gYnJlYXRoaW5nLCBzdGFiYmluZyBwYWluIGluIHRoZSBjZW50ZXIgb2YgdGhlIGNoZXN0IG9yIGV2ZW4gb25lIHNpZGVkIGNoZXN0IHBhaW4gYW5kIHRpZ2h0bmVzcy4gClRoZW4gdGhlIHNjZW5lIHdpbGwgc2hpZnQgZG93biB0aGUgcm9hZCBhYm91dCBhIG1pbGUgdG8gdGhlIE1hcnlsYW5kIENvdXJ0IG9mIEFwcGVhbHMsIHdoaWNoIHdpbGwgYmUgdGhlIGZpbmFsIGFyYml0ZXIgb2YgdGhlc2UgY29uZmxpY3RpbmcgYWxsZWdhdGlvbnMuCldlIGNhbiBhcmd1ZSB3aGV0aGVyIG9yIG5vdCBpdCBpcyBpbiBBbWVyaWNhJ3MgYmVzdCBpbnRlcmVzdHMgdG8gZGVjcmVhc2UgaXRzIGluZmx1ZW5jZSBhcm91bmQgdGhlIGdsb2JlIGFub3RoZXIgdGltZS4gSSBwZXJzb25hbGx5IHRoaW5rIGl0J3MgYSBob3JyaWJsZSBkZWNpc2lvbiB0byBkZWNyZWFzZSBpbmZsdWVuY2UsIGVzcGVjaWFsbHkgd2l0aCBSdXNzaWFuIGFuZCBDaGluZXNlIHNwZW5kaW5nIGFuZCBpbnZlc3RtZW50IGluIHRoZSBNaWRkbGUgRWFzdCBhbmQgQWZyaWNhIGluY3JlYXNpbmcgdGhlaXIgaW5mbHVlbmNlLiBCdXQgaXQgaXMganVzdCB3cm9uZyB0byBtaXNsYWJlbCB0aGlzIGV2ZW50IGluIHRlcm1zIHRoYXQgVHJ1bXAgZGlkIHdyb25nLCB3aGljaCBoYXBwZW5zIGZhciB0b28gb2Z0ZW4gYXQgdGhpcyBwb2ludC4gCkVzIGlzdCB6d2FyIGVya2VubmJhciwgZGFzcyBpbiBkZW4gcyBkaWUgQW56YWhsIGRlciAgaW5uZW4gYmVyZWl0cyBkZXV0bGljaCB6dWdlbm9tbWVuIGhhdC4gT2J3b2hsIGRpZSBEYW1lbndlbHQgYmVpIGRlbiBPbmxpbmUgIEdhbWVzIGluendpc2NoZW4gbWl0IFRhdXNlbmRlbiB2b24gIGlubmVuIHZlcnRyZXRlbiBpc3QsIGlzdCBkaWVzZSBUZW5kZW56IGluIGRlbiB0cmFkaXRpb25lbGxlbiBDYXNpbm9zIiBub2NoIG5pY2h0IGtsYXIgZXJrZW5uYmFyLiAKSSB3aXNoIEkgY291bGQgZ2V0IGEgZHJpdmVyIGxpa2UgdGhhdC4gODAlIG9mIHRoZSBkcml2ZXJzIGluIEF0bGFudGEgdGhhdCBJJ3ZlIGdvdHRlbiBkb24ndCBldmVuIGtub3cgd2hlcmUgdGhlIEFJUlBPUlQgaXMuIEl0J3MgbGlrZSB0aGV5IG1vdmVkIHRvIHRvd24gb24gVHVlc2RheSBuaWdodCBhbmQgc3RhcnRlZCBkcml2aW5nIFdlZG5lc2RheSBtb3JuaW5nLgpJdCBydWxlZCB0aGF0IHRoZSBhZHMgbXVzdCBub3QgYXBwZWFyIGFnYWluIGFuZCB0b2xkIFBvdW5kbGFuZCB0byBlbnN1cmUgdGhhdCB0aGVpciBhZHZlcnRpc2luZyB3YXMgcHJlc2VudGVkIHdpdGggImEgc2Vuc2Ugb2YgcmVzcG9uc2liaWxpdHkgYW5kIGRpZCBub3QgY2F1c2Ugc2VyaW91cyBvciB3aWRlc3ByZWFkIG9mZmVuY2UiLgpUaGUgdGV4dCB0eXBpY2FsbHkgaW5kaWNhdGVzIHRoZSB2YWx1ZXMsIG9yIGRlbm9taW5hdGlvbnMsIG9mIHRoZSBjaGlwcy4uIApGaW5hbGx5LCBpZiBub3RoaW5nIGVsc2UsIGdldCB5b3Vyc2VsZiBhY2N1c3RvbWVkIHRvIGxpdmluZyBmYXIgd2l0aGluIHlvdXIgbWVhbnMuIApUaGVpciBraW5kbmVzcyBhbmQgY29tcGFzc2lvbiBkdXJpbmcgaGVyIHN0YXkgYXJlIGdyZWF0bHkgYXBwcmVjaWF0ZWQuIEEgbWVtb3JpYWwgc2VydmljZSB3aWxsIGJlIGhlbGQgYXQgYSBsYXRlciBkYXRlLiAKS2FtZXJvbiBoYXMgdG8gZ28gb3V0IGFuZCBwdXQgaGVyc2VsZiBvdXQgdGhlcmUgYSBiaXQgbW9yZS4uIApJdCBoZWxwZWQgbWUgZ2V0IGRpYWdub3NlZCBjb3JyZWN0bHkgd2l0aCBQTUREIGFuZCBJIHdhcyB0cmVhdGVkLiAKT25lIGd1eSBoZWxkIG15IGhhbmQgd2hpbGUgd2Ugd2VudCB0byB0aGUgem9vIGFuZCBpdCB3YXMgc3dlZXQuIApNeSBwcm9ibGVtIGlzIG5vdCBxdWl0ZSB0aGUgc2FtZSBhcyBhIHBpcmF0ZWQgdmVyc2lvbiBpcyBub3Qgc3VzcGVjdGVkLCBJIGp1c3QgbmVlZCB0byBrZWVwIC4gV2luZG93cyBVbHRpbWF0ZSAzMmJpdCBzaG93ZWQgYXMgYWN0aXZhdGVkIGV2ZW4gYWZ0ZXIgSSBkb3dubG9hZGVkIGFuZC4gClRoYXQgbGVhdmVzIDEzMDAgcGFya2luZyBzcGFjZXMgZm9yIHN0dWRlbnRzIHdpdGggYW4gb3ZlcnNlbGwgcGVyY2VudGFnZSBvZiAxNTUlIHlpZWxkaW5nIDIwMTUgcGFya2luZyBwZXJtaXRzIGZvciBzdHVkZW50cy4gClRoZSBvbmx5IHJlamVjdGlvbiBJIGVuY291bnRlcmVkIHdhcyBkdWUgdG8gcmFjaXNtICAgY2hlY2tlZCBpbnRvIGEgaG9zdGVsIGFuZCB0aGUgc3RhZmYgb24gZHV0eSB0b2xkIG1lIHRoYXQgZm9yZWlnbmVycyBjb3VsZCBub3QgYmUgY2hlY2tlZCBpbnRvIGhvc3RlbCByb29tcyB3aXRoIENoaW5lc2UgcGVvcGxlLCB3aGljaCBJIGFza2VkIGhpbSB0byBzaG93IG1lIHRoYXQgcnVsZSBvbiBwYXBlci4gVGhlIGhvc3RlbCBtYW5hZ2VyIHRvbGQgbWUgbGF0ZXIgdGhhdCBuaWdodCB0aGF0IHNhaWQgc3RhZmYgZGlkbiB3YW50IGEgZm9yZWlnbmVyIHN0YXlpbmcgaW4gYSByb29tIHdoZXJlIHRoZXJlIG1heSBiZSBDaGluZXNlIGZlbWFsZXMsIGFwb2xvZ2lzZWQgYW5kIGNoZWNrZWQgbWUgaW50byBhIG5vcm1hbCBtaXhlZCByb29tLi4gCiJUaGVyZSB3ZXJlIGp1c3Qgc28gbWFueSBwbGF5ZXJzICAgdGhvdXNhbmRzIG9mIHRoZW0hIkkgaGFkIGl0IGluIG15IG1pbmQgdG8gc2V0dGxlIGRvd24gb24gbXkgdGFibGUsIHJlbGF4IGFuZCB0YWtlIGluIHRoZSBhdG1vc3BoZXJlLiJJIHN0YXJ0ZWQgd2l0aCA1MCwwMDAgY2hpcHMgYW5kIHRoZSBkaWZmZXJlbnQgYmxpbmQgbGV2ZWxzIHdlcmUgdHdvIGhvdXJzIGxvbmcsIHNvIEkga25ldyBJIGNvdWxkIHNpdCBiYWNrIGFuZCB3YWl0IGZvciBnb29kIGhhbmRzLiJBbGwgeW91IGNvdWxkIGhlYXIgYWJvdmUgdGhlIGNoaXQgY2hhdCBvZiB0aGUgcGxheWVycyB3YXMgdGhlIGNsaWNraW5nIG9mIGNoaXBzLiAKVGFnIHNwb2lsZXJzIGZvciBERExDIG1vZHMgYW5kIG5vbiBERExDIG1lZGlhLiBGb3JtYXQgbm9uIERETEMgc3BvaWxlciB0aXRsZXMgbGlrZTphLiBBdHRyaWJ1dGUgdGhlIGFydGlzdCBpbiB0aGUgdGl0bGUgYW5kIGdpdmUgYSBkaXJlY3QgbGluayB0byB0aGUgc291cmNlIHBhZ2UgZm9yIGFsbCBzdWJtaXNzaW9ucyB1c2luZyBmYW5hcnQuIApVVEcgb3BlbiByYW5nZSBpcyB2ZXJ5IHRpZ2h0IGFuZCB0aGVuIGhlIGNvbnRpbnVlZCBvbiB0aGUgZmxvcCBhZ2FpbnN0IDMgb3Bwb25lbnRzIG91dCBvZiBwb3NpdGlvbiBzbyB0aGUgb25seSBoYW5kIHlvdSBnZXR0aW5nIHRvIGZvbGQgaGVyZSByZWFsaXN0aWNhbGx5IGlzIEFLLiAKSSBldmVuIGdvaW5nIHRvIHByZXRlbmQgSSBkaWRuIG5vdGljZSB5b3UgYmFyZWZvb3QiLiAKMDM6MTU6NTQgYW1Hb2xkZW4gR29vc2UgRGVsdXhlIEJyYW5kIEZyYW5jeSBHbGl0dGVyIFNuZWFrZXJzIEJlZ2lubmVyJ3MgR3VpZGUgVG8gZSBjb21tZXJjZSBCdXNpbmVzcyA+IFBhcnQgMEV2ZW50dWFsbHkgdGhlIG1haW4gbmV3IGNyZWF0b3IgZGVjaWRlZCB0aGF0IHBhcnRpY3VsYXIgaGUgd2lzaGVkIHRvIHdlYWx0aCBvdXQgY29uY2VybmVkIHdpdGggZXZlcnl0aGluZyB0aGF0IGRvIGhlIHVzZWQgYmVlbiB3aXRoaW4gYSBwb3NpdGlvbiB0byBhY2NvbXBsaXNoIHdpdGggb3Bwb3NpdGUgcGVvcGxlJ3MgcHJpY2UuIApUaGlzIGlzIHByb2JhYmx5IHdoeSB0aGUgbmVnYXRpdmUgZmVlZGJhY2sgZmVlbHMgc28gYXdmdWwsIHRoZSBjb250cmFzdCBmZWVscyBzbyBHT09ELiBJJ3ZlIG5ldmVyIGNhcmVkIHdoYXQgcGVvcGxlIHNheSB0byBtZSBvbmxpbmUsIGdvb2Qgb3IgYmFkLiAKVGhyZWUgY2FyZCBwb2tlciBpcyBwbGF5ZWQgb25lIG9uIG9uZSB3aXRoIGRlYWxlciB0aG91Z2ggbXVsdGlwbGUgcGxheWVycyBhcmUgYWJsZSB0byBwbGF5IGFnYWluc3QgdGhlIGRlYWxlciBhdCB0aGUgc2FtZSB0aW1lLiBJdCBpcyBwbGF5ZWQgd2l0aCBhIHN0YW5kYXJkIGRlY2sgYW5kIGFsbCBwbGF5ZXJzIGFyZSBkZWFsdCB0aHJlZSBjYXJkcy4gQWZ0ZXIgaW5pdGlhbCBhbnRlcyBhcmUgbWFkZSBlYWNoIHBsYXllciB0aGVuIGRlY2lkZXMgdG8gZm9sZCBvciBwbGF5LiBBZnRlciBmdXJ0aGVyIGJldHMgYXJlIG1hZGUgdGhlIERlYWxlciBpcyB0aGUgZmlyc3QgdG8gZXhwb3NlIHRoZWlyIGhhbmQuIERlYWxlciBtdXN0IGhhdmUgYSBxdWVlbiBvciBiZXR0ZXIgdG8gcXVhbGlmeSB0byBwbGF5LiBJZiB0aGUgRGVhbGVyIGRvZXMgbm90IHF1YWxpZnkgYXBwcm9wcmlhdGUgcGF5IG91dHMgYXJlIG1hZGUuIElmIERlYWxlciBxdWFsaWZpZXMsIHBsYXllcnMgb25lIGF0IGEgdGltZSB0cmllcyB0byBiZWF0IHRoZSBEZWFsZXJzIGhhbmQgYW5kIHBheW91dHMgYXJlIGFwcHJvcHJpYXRlbHkgcGFpZCBvdXQuIChGdWxsIEFuc3dlcikKSG93ZXZlciwgaXQgaGFzIGJlZW4gcHJvcG9zZWQgdGhhdCBMRlBDIGFjdGl2aXR5IGR1cmluZyBSSSBjb3VsZCByZWZsZWN0IHRoZSByZWNydWl0bWVudCBvZiBhZGRpdGlvbmFsICJkb21haW4gZ2VuZXJhbCIgcmVzb3VyY2VzIHdoZW4gcHJvY2Vzc2luZyBtb3JlIGRpZmZpY3VsdCBwcm9ibGVtcyBpbiBnZW5lcmFsIGFzIG9wcG9zZWQgdG8gUkkgc3BlY2lmaSAgY2FsbHkuIE1vcmVvdmVyLCB0aGVvcmV0aWNhbCByZXNlYXJjaCB3aXRoIGNvbXB1dGF0aW9uYWwgbW9kZWxzIGhhcyBkZW1vbnN0cmF0ZWQgdGhhdCBSSSBtYXkgYmUgc3VwcG9ydGVkIGJ5IGR5bmFtaWMgcHJvY2Vzc2VzIHRoYXQgb2NjdXIgdGhyb3VnaG91dCBkaXN0cmlidXRlZCBuZXR3b3JrcyBvZiBicmFpbiByZWdpb25zIGFzIG9wcG9zZWQgdG8gd2l0aGluIGEgZGlzY3JldGUgY29tcHV0YXRpb25hbCBtb2R1bGUuIEhlcmUsIHdlIHByZXNlbnQgZk1SSSBmaW5kaW5ncyBmcm9tIGEgbm92ZWwgZGVkdWN0aXZlIHJlYXNvbmluZyBwYXJhZGlnbSB0aGF0IGNvbnRyb2xzIGZvciBnZW5lcmFsIGRpZmZpY3VsdHkgd2hpbGUgbWFuaXB1bGF0aW5nIFJJIGRlbWFuZHMuIEluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZG9tYWluICBnZW5lcmFsIHBlcnNwZWN0aXZlLCB3ZSBvYnNlcnZlIGFuIGluY3JlYXNlIGluIGZyb250b3BhcmlldGFsIGFjdGl2YXRpb24gZHVyaW5nIGNoYWxsZW5naW5nIHByb2JsZW1zIGluIGdlbmVyYWwgYXMgb3Bwb3NlZCB0byBSSSBzcGVjaWZpY2FsbHkuIE5vbmV0aGVsZXNzLCB3aGVuIGV4YW1pbmluZyBmcm9udG9wYXJpZXRhbCBhY3Rpdml0eSB1c2luZyBhbmFseXNlcyBvZiBwaGFzZSBzeW5jaHJvbnkgYW5kIHBzeWNob3BoeXNpb2xvZ2ljYWwgaW50ZXJhY3Rpb25zLCB3ZSBvYnNlcnZlIGluY3JlYXNlZCBuZXR3b3JrIGNvbm5lY3Rpdml0eSBkdXJpbmcgUkkgYWxvbmUuIE1vcmVvdmVyLCBkeW5hbWljIGNhdXNhbCBtb2RlbGluZyB3aXRoIEJheWVzaWFuIG1vZGVsIHNlbGVjdGlvbiBpZGVudGlmaWVzIHRoZSBMRlBDIGFzIHRoZSBlZmZlY3RpdmUgY29ubmVjdGl2aXR5IHNvdXJjZS4gQmFzZWQgb24gdGhlc2UgcmVzdWx0cywgd2UgcHJvcG9zZSB0aGF0IGR1cmluZyBSSSBhbiBpbmNyZWFzZSBpbiBuZXR3b3JrIGNvbm5lY3Rpdml0eSBhbmQgYSBkZWNyZWFzZSBpbiBuZXR3b3JrIG1ldGFzdGFiaWxpdHkgYWxsb3dzIHJ1bGVzIHRoYXQgYXJlIGNvZGVkIHRocm91Z2hvdXQgd29ya2luZyBtZW1vcnkgc3lzdGVtcyB0byBiZSBkeW5hbWljYWxseSBib3VuZC4gVGhpcyBjaGFuZ2UgaW4gY29ubmVjdGl2aXR5IHN0YXRlIGlzIHRvcCBkb3duIHByb3BhZ2F0ZWQgdmlhIGEgaGllcmFyY2hpY2FsIHN5c3RlbSBvZiBkb21haW4gZ2VuZXJhbCBuZXR3b3JrcyB3aXRoIHRoZSBMRlBDIGF0IHRoZSBhcGV4LiBhbmQgV2Fsc2gsIFYuIDIwMTguIFRoZSBwaHlzaW9sb2dpY2FsIGVmZmVjdHMgb2YgVHJhbnNjcmFuaWFsIEVsZWN0cmljYWwgU3RpbXVsYXRpb24gZG8gbm90IGFwcGx5IHRvIHBhcmFtZXRlcnMgY29tbW9ubHkgdXNlZCBpbiBzdHVkaWVzIG9mIENvZ25pdGl2ZSBOZXVyb21vZHVsYXRpb24uIE5ldXJvcHN5Y2hvbG9naWEuCkFmdGVyIGFub3RoZXIgYnJpZWYgcmVoZWFyc2FsIG9mIHRoZSB3aG9sZSBHZW5lc2lzIG51bWJlcnMgKGZ1biBpbXByb3YgYml0IHRvIGNyZWF0aW9uIGJpdHMgdG8gc2l0dGluZyBhcm91bmQgdG8gYnVyeWluZyB0aGUgZGVhZCBndXksIGV0Yy4pIGFuZCB0aGF0IHNvbmcgZnJvbSB5ZXN0ZXJkYXksIHRoZSByZXN0IG9mIHRoZSByZWhlYXJzYWwgSSBoYWQgdG8gZ28gdG8gd2FzIGEgZnVuIGdpYW50IGRhbmNlIG51bWJlciB0byBmcm9tIFRoZSBHcmVhdGVzdCBTaG93bWFuLiBTbyBmYXIgSSBhbSByZWFsbHkgbGlraW5nIGl0LCBpdCBUTXMgZnVuIGFuZCB1cHRlbXBvIChldmVudHVhbGx5KS4gCk11bGwgb3ZlciBpdCB3aGVuIEkgd2FrZSB1cC4gClN1c3RhaW5hYmlsaXR5IGluIGluZ3JlZGllbnRzIGlzIGEgaHVnZSBwYXNzaW9uIGZvciBtZSwgc28gcGVyc29uYWxseSBmb3IgbXkgYm90YW5pY2FsIGJyYW5kLCBJIG9ubHkgdXNlIHN1c3RhaW5hYmx5IHNvdXJjZWQgaW5ncmVkaWVudHMsIG1hbnkgb2YgdGhlbSB3aWxkIGhhcnZlc3RlZCBpbiBldGhpY2FsIGFtb3VudHMgZnJvbSBuYXR1cmFsbHkgb2NjdXJyaW5nIGVjb3N5c3RlbXMuIEZvciB0aGlzIHNhbWUgcmVhc29uIEkgcmVmdXNlIHRvIHVzZSBhbmltYWwgcHJvZHVjdHMgaW4gbXkgZ29vZHMgKHNhdmUgZm9yIGV0aGljYWxseSBzb3VyY2VkIEhvbmV5IGFic29sdXRlKSBhcyBpdCdzIGluaHVtYW5lLCBncm9zcywgb3IgdW5zdXN0YWluYWJsZSAobWFpbmx5IHRoaW5raW5nIG9mIGFuaW1hbCBtdXNrcyBoZXJlKS4gClRoYXQgaXMgb2JqZWN0aXZlLCB0aGF0IGlzIFRIRSBQRVJGRUNUIHdheSB0byBkZXNjcmliZSBvYmplY3RpdmVseSBhdHRyYWN0aXZlLiAKTWFraW5nIGFuIGFwcHJvcHJpYXRlIHJlZmxlY3Rpb24gaW52b2x2ZXMgbm90IG9ubHkgaWRlbnRpZnlpbmcgYWNjdXJhdGVseSB0aGUgY2xpZW50J3MgZmVlbGluZ3MgYnV0IGFsc28gc2VsZWN0aW5nIHdpdGggc2Vuc2l0aXZpdHkgdGhlIGFwcHJvcHJpYXRlIHRpbWUsIHRvbmUgb2Ygdm9pY2UgYW5kIHdvcmRzIHRvIGNvbnZleSB0aGlzIHRvIHRoZSBvdGhlci4gVGhlIGFpbSBvZiBhIHJlZmxlY3Rpb24gaXMgdG8gaGVscCB0aGUgb3RoZXIgZmVlbCB1bmRlcnN0b29kLCBhY2NlcHRlZCBhbmQgZW5jb3VyYWdlZCB0byBzaGFyZSBtb3JlIG9mIHRoZWlyIGZlZWxpbmdzLiBJdCBpcyBhbHNvIGltcG9ydGFudCB0byBiZSB0ZW50YXRpdmUgaW4gdGhlIHdheSBpbiB3aGljaCBzL2hlIG1ha2VzIHRoZSByZWZsZWN0aW9uLlBlcnNvbjogSSdtIGp1c3Qgd2FzdGluZyB5b3VyIHRpbWUuIApMZXRzIGZhY2UgaXQgb25saW5lIHJldmlld3MgY2FuIG1ha2Ugb3IgYnJlYWsgcHJvZmVzc2lvbmFscyB0aGVzZSBkYXlzLiAKMjAuIFRoZSBnb3Zlcm5tZW50IGZvcmNlcywgZmlnaHRpbmcgd2l0aCB0aGVpciBiYWNrcyB0byB0aGUgc2VhLCBsb3N0IDE1IGRlYWQuIApNb3JlIGFuZCBtb3JlIHN0YXRlcyBhcmUgbGVnYWxpemluZyBzcG9ydHMgYmV0dGluZyBhZnRlciB0aGUgU3VwcmVtZSBDb3VydCBsaWZ0ZWQgTmV2YWRhIGVmZmVjdGl2ZSBtb25vcG9seSBvbiBpdCBsYXN0IHllYXIsIGFuZCBOQVNDQVIgYWxyZWFkeSBoYXMgYmVlbiBhIHBvcHVsYXIgc3BvcnQgd2l0aCBGYW5EdWVsIGFuZCBEcmFmdEtpbmdzIHByb3ZpZGluZyBwbGVudHkgb2Ygb2ZmZXJpbmdzLi4gCldobyBpbnZlbnRlZCB0aGUgc2FuZHdpY2gKUmlzZW5GYWxsYWN5ICAgMSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQWxzbywgaWYgMyBEIGRyYWZ0aW5nIGlzIHNvbWV0aGluZyB5b3UgYXJlIGludGVyZXN0ZWQgaW4sIFZlY3RvcndvcmtzIGlzIG5vdCBleGNlbGxlbnQuIApBIGxvb2sgZG9lcyBub3QgYWx3YXlzIGRlZmluZSB0aGUgYnJlZWQsIGFuZCBpdCBjZXJ0YWlubHkgZG9lc24ndCBkZWZpbmUgYmVoYXZpb3VyLiAKSW4geW91ciBjYXNlLCBiZWNhdXNlIHRoaXMgaXNuIGEgcGh5c2ljYWwgaW5qdXJ5IHlvdSByZWNvdmVyaW5nIGZyb20sIHRoZSB0aW1pbmcgaXMgbW9yZSBmbGV4aWJsZS4gCkkgYXNrIG15IGh1c2JhbmQgdG8gZG8gc29tZSBzZXJpb3VzIHJlZmxlY3RpbmcgYW5kIHNvdWwgc2VhcmNoaW5nIGlmIHdlIHdlcmUgaW4geSBzaG9lcy4gSXQgb25lIHRoaW5nIHRvIHNheSB5b3UgZGlkbiBpbW1lZGlhdGVseSBib25kIHdpdGggeW91ciBiYWJpZXMuIEl0IGFub3RoZXIgaWYgaXQgYmVlbiA1IHllYXJzIGFuZCB5b3Ugc3RpbGwgZG9uIGhhdmUgdGhhdCBib25kIG9yIHNlZW0gdG8gd2FudCB0byBoYXZlIGl0LiAKU2hvdWxkbiByZWFsbHkgYmUgZWF0aW5nIGEgd2hvbGUgYmFnIG9mIGFueXRoaW5nIGluIG9uZSBzaXR0aW5nLiBXaHkgaXMgaXQgeW91IHRoaW5rIHlvdSBzbyBodW5ncnk/IE9yIGp1c3QgYm9yZWQ/IElmIHlvdSBhcmUgc3VwZXIgaHVuZ3J5IGFsbCB0aGUgdGltZSB5b3UgYXJlIGxpa2VseSBkZWh5ZHJhdGVkLgpBbHNvLCBpZiB5b3UgaGF2ZSBzb21lIGZyaWVuZHMgd2hvIGhhdmUgZ29uZSBwcm8sIHRoZW4gc3VyZWx5IHRoZXkgd291bGQgYmUgYmV0dGVyIHNvdXJjZXMgdG8gYXNrIHRoaXMgcXVlc3Rpb24gdG8/Ckl0J3MgdXN1YWxseSBqdXN0IHRoZSBoaWdoIHByaWNlcyB0aGF0IGRldGVyIHVzIGZyb20gZW5qb3lpbmcgdGhlIGJlbmVmaXRzIG9mIGV4Zm9saWF0aW5nIGJvZHkgc2NydWJzLiAKVGhlIFVWIHN1bmxpZ2h0IGFuZCBmcmVzaCBhaXIgaGVscGVkIHBhdGllbnRzIHJlY292ZXIgYW5kIGltcHJvdmVkIEhBSSByYXRlcy4gClNvIHllYWggY29zdCBvZiBsaXZpbmcgY2FuIGJlIHF1aXRlIGNoZWFwIGhlcmUuLiAKRURJVDogSW1tYSBnaXZlIHRoaXMgYSByZXN0LCB5b3UgdGhlIG1vZCwgZG8gd2hhdCB5b3UgdGhpbmsgaXMgYmVzdCBmb3IgdGhpcyBzdWJyZWRkaXQuIEkgd2FzIGp1c3QgYSBiaXQgY29uY2VybmVkIGJ1dCBpdCBmaW5lLCBub3QgcmVhbGx5IGFueW9uZSBmYXVsdC4KQWZ0ZXIgc29ydCBvZiBzbGVlcGluZyBpbiB0aGUgbmFzdHkgaG90ZWwsIHdlIGhhZCBxdWl0ZSBhIGdvb2QgYnJlYWtmYXN0LiBUaGV5IGVhdCBwaXRhLCBidXR0ZXIsIGphbSwgaGFyZCBib2lsZWQgZWdncywgbmVzY2FmZSwgdG9tYXRvZXMsIG9saXZlcyBhbmQgY3VjdW1iZXJzLiAKVGhlc2UgbXVsdGlwbGUgY29ubmVjdGlvbnNyZWxhdGUgdG8gYSBicm9hZCBhcmVhIG9mIHRoZSBib2R5ICAgdGhpcyBleHBsYWlucyB3aHkgaXQncyBzb21ldGltZXMgZGlmZmljdWx0IHRvIGRldGVybWluZSB0aGUgZXhhY3QgbG9jYXRpb24gb2YgcGFpbiwgZXNwZWNpYWxseSBpbnRlcm5hbCBwYWluLi4gCkJ1dCBpbiBubyB3YXkgZGlkIGkgaW50ZW5kIHRvIG9mZmVuZCBhbnlvbmUgKCB3aGljaCwgY29uc2lkZXJpbmcgeW91ciByZXNwb25zZXMsIGkgc3RpbGwgc29tZWhvdyBtYW5hZ2VkIHRvIGFjaGlldmUpLCBpbiBmYWN0LCBpIHN0aWxsIGRvbnQgcmVhbGx5IHVuZGVyc3RhbmQgd2hhdCB3YXMgc28gd3Jvbmcgd2l0aCBteSBjb21tZW50LiBJIGxvdmUgYWxsIGFuaW1hbHMgKGV4Y2VwdCBtYXliZSB3YXNwcyksIGluY2x1ZGluZyBzbmFrZXMuIApPbiBBcHIgMjYsIDIwMTMKRGVhbGluZyBhIGJhZCBoYW5kIGF0IHRoZSBnZW50aWMgcG9rZXIgZ2FtZQpUaGUgYnJhbmQgYmVnYW4gdHJ5aW5nIHRvIHJlY2xhaW0gdGhlIHRhZ2xpbmUgbGFzdCBNYXJjaCB3aGVuIGl0IG1vdmVkIGF3YXkgZnJvbSB0aGUgbW9yZSBzZXJpb3VzICJDbGltYiBPbiIgY2FtcGFpZ24gdGhhdCBwb3J0cmF5ZWQgcGVvcGxlIG92ZXJjb21pbmcgY2hhbGxlbmdlcy4gQnV0IHRoZSBmaXJzdCByb3VuZCBvZiBhZHMgd2VyZSBzZXQgZW50aXJlbHkgaW4gdGhlIGJhY2t3b29kcyBhbmQgbW91bnRhaW5zIGluIGFuIGFwcHJvYWNoIHRoYXQgc2VlbWVkIHRhaWxvcmVkIGZvciBuYXR1cmUgZW50aHVzaWFzdHMsIG5vdCBldmVyeWRheSBiYXIgZ29lcnMuCkJ1dCBvbmUgeWVhciBpbiwgaGUncyBzdGlsbCBmZWVsaW5nIGhpcyB3YXkgdGhvdWdoIHRoaXMgdW5mYW1pbGlhciB3b3JsZC4gClN0dWFydCByZSB0cmlhbCBCeSBCQVJCQVJBIEtBTVAgQSBtb3Rpb24gZm9yIDIuIApTdGFmZiBzYWlkIGR1ZSB0byB0aGUgJyd1bnByZWRpY3RhYmxlIG5hdHVyZScnIG9mIHRoZSBnYW1pbmcgZW50aXRsZW1lbnQgbWFya2V0LCBubyBicm9rZXIgY291bGQgZ3VhcmFudGVlIHRvIHByb3ZpZGUgYSBzZXQgYW1vdW50IG9mIGVudGl0bGVtZW50cyB3aXRoaW4gYSBzZXQgdGltZSBvciBhdCBhIHNldCBwcmljZS4gQ3IgSm9obiBNdXJyYXkgc2FpZCBhY3F1aXJpbmcgdGhlIG1hY2hpbmVzIHdhcyAnJ2EgY29tcGxleCBpc3N1ZScnIGFuZCBhIHRlbmRlciBwcm9jZXNzIHdvdWxkIHdvcmsgYWdhaW5zdCB0aGUgY291bmNpbCBhbmQgY29zdCBpdCBtb3JlIG1vbmV5LiAKMS4gCllvdSBzaG91bGQgYWxzbyBrbm93IHRoYXQgdW5pdmVyc2FsIGhlYWx0aGNhcmUgaGFzIGEgbWFzc2l2ZSBtYWpvcml0eSBvZiB0aGUgcG9wdWxhdGlvbiBpbiBzdXBwb3J0IG9mIGl0LCBkZXNwaXRlIHdoYXQgY29ycG9yYXRlIG1lZGlhIG9mIGJvdGggc2lkZXMgd291bGQgaGF2ZSB5b3UgYmVsaWV2ZS4KV2hhdCB3ZSB3ZXJlIGhvcGluZyB0byBhdm9pZCB3YXMgcGVvcGxlIGNvbnN0YW50bHkganVzdCB0cmF3bGluZyB0aHJvdWdoIHBvc3QgaGlzdG9yaWVzIHRvIGJyaW5nIHVwIHNvbWV0aGluZyBzYWlkIHllYXJzIGFnbyB0byB0cnkgYW5kIGRpc2NyZWRpdCBhIHBlcnNvbiBhcmd1bWVudCB0b2RheS4gUGVvcGxlIHdlcmUga2VlcGluZyB0YWJzIG9uIHBvdGVudGlhbGx5IHVuZmxhdHRlcmluZyBpbmZvcm1hdGlvbiBvbiBvdGhlciB1c2VycyB0aGF0IHRoZXkgY291bGQgcHVsbCBvdXQgd2hlbmV2ZXIgdGhleSBuZWVkZWQgdG8gaGl0IHRoZW0gb3ZlciB0aGUgaGVhZCB3aXRoIHNvbWV0aGluZyBzaGl0dHkgdGhleSBzYWlkLiBUaGF0IGZyYW5rbHkgY3JlZXB5IGFuZCBvdmVybHkgaW52b2x2ZWQgYmVoYXZpb3IgZm9yIHJlZGRpdC4gU2VlaW5nIHNvbWVvbmUgaGlzdG9yeSBhbmQgc2F5aW5nIHNvbWV0aGluZyBsaWtlICJoZXkgeW91IGp1c3QgcG9zdGVkIHNvbWV0aGluZyBzdXBlciByYWNpc3QgaW4gYW5vdGhlciBzdWIgYnV0IGhlcmUgeW91IHNheWluZyB5b3Ugbm90IHJhY2lzdCIgd2FzbiBldmVyIHRoZSBzcGlyaXQgb2YgdGhpcywgYnV0IEkgY2FuIHNlZSB0aGF0IGl0IGlzIHVuY2xlYXIuCkFuZCBjcmVhdGluZyBhIHVuaXQgdGhhdCB3b3VsZCBjb3N0IGFueSBvdGhlciB0ZW5hbnQgbW9yZSBtb25leSwgdGhlbiBnaXZpbmcgaXQgdG8gYW4gYXBwbGljYW50IGp1c3QgYmVjYXVzZSB0aGV5IHBheSBhIHllYXIncyB3b3J0aCBvZiByZW50IHVwZnJvbnQgICB3aGljaCBpcyB0aGUgYW1vdW50IGZvciBhIHVuaXQgd2l0aG91dCBhbiB1bmZpbmlzaGVkIGJhc2VtZW50LCBpcyBub3QgZ29vZCBidXNpbmVzcy4KQWxzIEVpbmhlaW1pc2NoZSBpc3QgVGFtIGRlciBTdGFkdCBzZWhyIHZlcmJ1bmRlbi4gCkJ1dCBpdCdzIGEgdHJhZGl0aW9uLiAKVGhvbWFzIEhpY2tleSAsIEpvaG5ueSBCb3ljaHVrICwgSm9zaCBCYWlsZXkgLCBDYXNleSBDaXppa2FzIGFuZCBtb3JlIHdlcmUgc3BlY2lhbCBndWVzdHMgYXQgdGhlIHBva2VyIG5pZ2h0LCBwYXJ0IG9mIHRoZSBkcmF3IHRoYXQgaGVscGVkIHJhaXNlICQ3NUsgZm9yIHRoZSBNYXR0IE1hcnRpbiBGb3VuZGF0aW9uLCB3aGljaCBzdXBwb3J0cyB0aGUgSXNsYW5kZXJzIENoaWxkcmVuJ3MgRm91bmRhdGlvbi4iSGUncyBhIGdvb2QgZnJpZW5kIG9mIGFsbCBvZiBvdXJzLCBzbyBpdCdzIGltcG9ydGFudCB0byBjb21lIHRvIHRoaXMgZXZlbnQsIGJ1dCBtb3N0IG9mIGFsbCB0aGUgY2F1c2UgaXMgaW1wb3J0YW50LCB0cnlpbmcgdG8gZ2V0IGludm9sdmVkIGluIHRoZSBjb21tdW5pdHkgYW5kIHJhaXNlIHNvbWUgbW9uZXksIiBIaWNrZXkgc2FpZC5UaGUgZXZlbnQgZHJldyAzMzAgcGVvcGxlICAgZG91YmxpbmcgbGFzdCB5ZWFyJ3MgcG9rZXIgbmlnaHQgICBpbmNsdWRpbmcgYSBob3N0IG9mIGxvY2FsIGNlbGVicml0aWVzIGFuZCBJc2xhbmRlcnMgYWx1bW5pLiBDbGFyayBHaWxsaWVzIHdhcyBvbiBoYW5kLCBhcyB3ZXJlIEJvYmJ5IE55c3Ryb20sIFBhdCBMYUZvbnRhaW5lIGFuZCBSaWNrIERpUGlldHJvLkxhRm9udGFpbmUsIHdobyBoYXMgaGlzIG93biBmb3VuZGF0aW9uICJDaGFtcGlvbnMgaW4gQ291cmFnZSIgYW5kIGlzIGN1cnJlbnRseSByZXByZXNlbnRpbmcgdGhlIE5ITCBvbiBhIHBhcGFsIHZpc2l0LCBzYWlkIHNlZWluZyBNYXJ0aW4ncyBGb3VuZGF0aW9uIGFuZCB0aGUgSXNsYW5kZXJzIHN1cHBvcnQgdGhlIGNvbW11bml0eSBtYWRlIGhpbSBwcm91ZCBhcyBhbiBhbHVtbnVzLiJJdCdzIG9uZSB0aGluZyB0byBwbGF5IHRoZSBnYW1lIGFuZCBiZSBhbiBJc2xhbmRlciwgYnV0IHRvIGJlIGEgdHJ1ZSBJc2xhbmRlciB5b3UgaGF2ZSB0byBnZXQgaW52b2x2ZWQgaW4gdGhlIGNvbW11bml0eSBhbmQgZ2l2ZSBiYWNrLCIgaGUgc2FpZC4gCk1vc3QgQ2hpbmVzZSB3aWxsIHRlbGwgeW91IHRoYXQgQ2FudG9uZXNlIGlzIG1vcmUgc2ltaWxhciB0byBjbGFzc2ljYWwgQ2hpbmVzZSBpbiB0ZXJtcyBvZiBwcm9ub3VuY2lhdGlvbi4gCkEgY29tcGxpY2F0ZWQgdGltZWxpbmUgb2YgdGhlaXIgcmVsYXRpb25zaGlwIGlzIGludGVydHdpbmVkIHdpdGggYSBwcmV2aW91cyByZWxhdGlvbnNoaXAgZm9yIGhlciBhbmQgYSBwcmV2aW91cyBtYXJyaWFnZSBmb3IgaGltLiAxMCwgMjAxNy4gClRvcCB0aXAgMwpGb3IgZXhhbXBsZSwgeW91IGNhbiBzYXkgc29tZXRoaW5nIHRvIHRoZSBlZmZlY3Qgb2YgImNoZWNrIG91dCBteSBUdW1ibHIgaWYgeW91IHdhbnQgdG8ga25vdyBtb3JlIGFib3V0IG1lIGFuZCBteSB3cml0aW5nIiBhbmQgaW5jbHVkZSB0aGUgbGluayB0byB0aGUgc2l0ZSwgYnV0IHlvdSBjYW5ub3Qgc3BlY2lmaWNhbGx5IHN0YXRlIGFueXRoaW5nIGFib3V0IGRvbmF0aW9ucywgY29tbWlzc2lvbnMgb3Igc2FsZXMgb24gdGhlIEFyY2hpdmUuLiAKIldlIHN0YXJ0ZWQgcGxheWluZyBvbmUgb24gb25lIGJhc2tldGJhbGwgYW5kIHRoZXkga2VwdCBjaGlwcGluZyBhd2F5LiAKQW5kIGp1c3QgbGlrZSB0aGUgc29mdHdhcmUsIG1vc3Qgb2YgdGhlaXIgcHJvZHVjdHMgYXJlIGFjdHVhbGx5IGdvb2QuIApBdCB0aGlzIHBvaW50IGkgc2F5IGhlIGRlc2VydmVzIGl0IGZhciBtb3JlLiAKWW91IGRlc2NyaWJlIHAgaGFja2luZyBhcyB0ZXN0aW5nIG11bHRpcGxlIGludGVyYWN0aW9ucyB3aXRob3V0IG1lcml0LiAKVGhpcyBhbm5vdW5jZW1lbnQgaW4gYSBtZXRyb3BvbGl0YW4gYXJlYSBhbHJlYWR5IHJlY29nbml6ZWQgYXMgYSB0b3AgcHJvZHVjZXIgb2YgaGlnaGx5IHNraWxsZWQgdGFsZW50IHNob3dzIHRoYXQgdGhlIG5lZWQgZm9yIG1vcmUgdGVjaCBncmFkdWF0ZXMgd2lsbCBvbmx5IGNvbnRpbnVlIHRvIGluY3JlYXNlIGFjcm9zcyB0aGUgY291bnRyeS4uIApJbiBteSBmYXRoZXIncyB0aW1lLCB0aGV5IGRpZG4ndCBoYXZlIGEgbG90IG9mIHRoaW5ncyBsaWtlIEkgZG8uIApUaGF0IHZlcnkgaW1wb3J0YW50IGZvciBvdXIgY2xpZW50cyB0aGVzZSBkYXlzIGlzIHRvIGhhdmUgdmVnZXRhYmxlIGdhcmRlbnMgb3IgbGl0dGxlIGtpdGNoZW4gZ2FyZGVucywgQ2xhdWRpYSBSdXN0IHNheXMuIGl0IGRvZXNuIG1hdHRlciBpZiB5b3UgbGl2aW5nIGluIGEgY29uZG8gd2l0aCBhIGRlY2ssIG9yIHdoZXRoZXIgeW91IGhhdmUgYSBiaWcgbG90IGluIFNoYXVnaG5lc3N5LCBwZW9wbGUgbGlrZSB0byBqdXN0IGdvIG91dHNpZGUgYW5kIGN1dCBzb21lIGhlcmJzLiAKVGhlIEhpZ2ggV2luZHMgZ2l2ZSBpdHMgZ3Vlc3RzIHRoZSBjaGFuY2UgdG8gYmVjb21lIGEgbWlsbGlvbmFpcmUsIHdpdGggYSB0b3AgcGF5b3V0IGF0IHRoZSBzbG90cyBvZiBtb3JlIHRoYW4gJCAxLjYgbWlsbGlvbi4gClRoZSBiaXJkIGRvZywgZm9yIGluc3RhbmNlLCBzaW1wbHkgaW52b2x2ZXMgZ2V0dGluZyBvbiBhbGwgZm91cnMgYW5kLCB3aGlsZSBrZWVwaW5nIHRoZSBjb3JlIG11c2NsZXMgdGlnaHQsIGV4dGVuZGluZyB0aGUgb3Bwb3NpdGUgYXJtIGFuZCBsZWcsIHRoZW4gc3dpdGNoaW5nIGxpbWJzLgpGb3IgcmVmZXJlbmNlLCB0aGUgMjAxNiBlbGVjdGlvbiBjb3N0ICQ2LjUgYmlsbGlvbiB0b3RhbCAodGhhdCBpbmNsdWRlcyBldmVyeXRoaW5nOiBwcmVzaWRlbnRpYWwgcmFjZSwgaG91c2Ugb2YgcmVwcmVzZW50YXRpdmVzLCBzZW5hdGUsIGdvdmVybm9ycywgcHJvcG9zYWxzLCBldGMuKSAsIGFuZCB0aGlzIGlkaW90IHdhbnRzIHRvIGFkZHMgJDMzIGJpbGxpb24gZWFjaCB5ZWFyLiAKU28gbWF5YmUgc2NodGljayByb2NrIHRocm93YXdheXMgbGlrZSAiWm9tYmllIEJhc3RhcmRzLCIgIkNhbid0IEtub2NrIHRoZSBIdXN0bGUsIiBhbmQgIlRoZSBQcmluY2UgV2hvIFdhbnRlZCBFdmVyeXRoaW5nIiAoc29tZWJvZHkncyBzdXJlbHkgcm9sbGluZyBpbiBoaXMgUGFpc2xleSBQYXJrIHNoYXBlZCB1cm4pIGFyZW4ndCBleGFjdGx5IHVud29ydGh5IG9mIHRoZSBhdXRldXIgd2hvIG9uY2Ugc2FuZyAiRmxpcCBvbiB0aGUgdGVsbHkvV3Jlc3RsZSB3aXRoIEppbW15IiBhZnRlciBhbGwuIApJIGRvbiBnZXQgd2hhdCB5b3Ugd2FudCB0aGVtIHRvIGRvLiAKIlNvY2lhbCBpbnZlc3RtZW50IGluIFZlbmV6dWVsYSBkdXJpbmcgdGhlIENoYXZleiBhZG1pbmlzdHJhdGlvbiByZWR1Y2VkIHBvdmVydHkgZnJvbSBuZWFybHkgNTAlIGluIDE5OTkgdG8gYWJvdXQgMjclIGluIDIwMTEsIGluY3JlYXNlZCBzY2hvb2wgZW5yb2xsbWVudCwgc3Vic3RhbnRpYWxseSBkZWNyZWFzZWQgaW5mYW50IGFuZCBjaGlsZCBtb3J0YWxpdHksIGFuZCBpbXByb3ZlZCBhY2Nlc3MgdG8gcG90YWJsZSB3YXRlciBhbmQgc2FuaXRhdGlvbiB0aHJvdWdoIHNvY2lhbCBpbnZlc3RtZW50LiIKSSBnZXQgdGhlIGtpZCBpcyBsaWtlIDUgYW5kIHByb2JhYmx5IGp1c3QgZGlkIGl0IGN1eiBoZSBzYXcgaXQgb24gdHYgb3IgYSB2aWRlbyBnYW1lLCBidXQgaGUgY291bGQgcmVhbGx5IGh1cnQgdGhlIG90aGVyIGtpZC4gCkFtYXRldXJzIGluIGdlbmVyYWwgcGxheSB0b28gbWFueSBoYW5kcyAodGhleSBhcmUgdG9vIGxvb3NlKSBhbmQgdGhleSBkb24ndCB0YWtlIGVub3VnaCBpbml0aWF0aXZlICh0aGV5IGFyZSB0b28gcGFzc2l2ZSkuIApEcmFwaW5nIGlzIG9wdGlvbmFsLiBZb3VyIGNvbWZvcnQgaXMgaW1wb3J0YW50IGFuZCB0aGUgc2Vzc2lvbiBpcyBhbGwgZm9yIHlvdS4gCkJldCBiaWdnZXIgcHJlLiAKQWlycG9ydCBob3RlbHMgZGF0ZSB0byB0aGUgMTkzMHMsIHdoZW4gdHJhbnNvY2VhbmljIHBsYW5lcyB3ZXJlIGZseWluZyBib2F0cyB0aGF0IGhvcHNjb3RjaGVkIGFjcm9zcyB0aGUgd2F0ZXIgd2l0aCBzdG9wcyBvbiBzbWFsbCBpc2xhbmRzIHRvIHJlZnVlbC4gUGlvbmVlcmluZyBhaXJsaW5lcyBsaWtlIFBhbiBBbWVyaWNhbiBXb3JsZCBBaXJ3YXlzIG5vIHBsYWNlIHRvIGxhbmQgZXhjZXB0IGluIHRoZSB3YXRlciwgc2FpZCBTdGFubGV5IFR1cmtlbCwgYSBob3RlbCBjb25zdWx0YW50LiB3ZXJlIG5vIGFpcnBvcnRzIGFuZCBubyBydW53YXlzLiBCeSAxOTQ2IHRoZXNlIHN0b3BzIHdlcmUgbm8gbG9uZ2VyIG5lY2Vzc2FyeSwgYnV0IEp1YW4gVHJpcHBlLCBhIGZvdW5kZXIgb2YgUGFuIEFtLCBtdXN0IGhhdmUgbGlrZWQgdGhlIGNvbmNlcHQgYmVjYXVzZSBoZSBkZWNpZGVkIHRvIGdvIGludG8gdGhlIGhvdGVsIGJ1c2luZXNzIGFuZCBjcmVhdGVkIHRoZSBJbnRlckNvbnRpbmVudGFsIGNoYWluLCB3aGljaCBQYW4gQW0gb3duZWQgdW50aWwgMTk4MS4KV2UgYWxzbyBnYXRoZXIgYW5kIGVhdCB3aWxkIHBsYW50cy4gCkxpa2UgdGltZWQgZXhjbHVzaXZpdHkgb2YgdGhlIHRyYW5zbGF0ZWQgY2hhcHRlcnMgdG8gdGhvc2UgdGhhdCBwYWlkIGZvciBpdCwgc28gdGhhdCBhIHJlZ3VsYXIgcHVibGlzaGVyIGNhbiBnZWFyIHVwIGFuZCBzdGlsbCBleHBlY3Qgc29tZSBzYWxlcy4gT3IgYSBmaXhlZCBhbW91bnQgY29udHJpYnV0aW9uIHBlciBmYW4gc28gdGhleSBkb24gZ2V0IHBpc3NlZCBhdCBzcGVuZGluZyBzbyBtdWNoLCBvciBjb250cmlidXRpb24gdW50aWwgYSBnb2FsIGlzIHJlYWNoZWQuQSBkaWZmZXJlbnQgdmFyaWFudCBvZiB0aGlzIGlzIHRvIHN0YXJ0IGEgbWFuZ2EgZGlnaXRhbCBvbmx5IChsaWtlIEtha2VndXJ1aSkgYW5kIG9ubHkgcHVibGlzaCBwaHlzaWNhbCB2b2x1bWVzIHdoZW4gdGhlIGN1c3RvbWVyIGJhc2UgaGFzIGdyb3duIGVub3VnaC4gClRoZSBmaXJlIHByb29mIGhvbWUgd2FzIG5vdCBtdWNoIHNlZW4gYXMgYSB0b3BpYyAoc28gZmFyIGFzIEkgY2FuIHRlbGwpIGluIHRoZSBlYXJseSAyMHRoIGNlbnR1cnkgd2hlbiBGcmFuayBMbG95ZCBXcmlnaHQgd3JvdGUgYWJvdXQgaGlzIHByb3Bvc2FsIGZvciBvbmUgaW4gdGhlIExhZGllcyBIb21lIEpvdXJuYWwgaW4gMTkwNy4gSGlzIGRlc2lnbiwgb3V0bGluZWQgaW4gIkEgRmlyZXByb29mIEhvdXNlIGZvciAkNTAwMCIpIHdhcyBhbiB1bnVzdWFsIHN1YmplY3QgdGhlbiwgYW5kIGZhciBtb3JlIHNvIHNpbmNlIHNjaG9sYXJzIHNheSB0aGF0IHRoaXMgaG91c2Ugb2YgV3JpZ2h0IHdhcyBuZXZlciBidWlsdCBhcyBkZXNpZ25lZCwgYXBwZWFyaW5nIGluIGEgZmV3IGl0ZXJhdGlvbnMgd2l0aCBzdHVjY28gb3ZlciB3b29kLCB3aGljaCBvZiBjb3Vyc2UgaXMgbm90IGZpcmVwcm9vZi4gVGhlIGFydGljbGUgZm9yIGEgIkZpcmUgUHJvb2YgTGlicmFyeSIgYXBwZWFyZWQgaW4gU2VwdGVtYmVyIDE4NDYgaW4gdGhlIEpvdXJuYWwgb2YgdGhlIEZyYW5rbGluIEluc3RpdHV0ZSwgd3JpdHRlbiBieSBhIEpvaG4gVHJhdmVycywgd2hvIHNoYXJlZCBoaXMgcGxhbnMgZm9yIHNhZmVseSBob3VzaW5nIGhpcyB3aWZlIGluaGVyaXRlZCBsaWJyYXJ5LiBUaGUgZ3V5IGNlcnRhaW5seSB3YXMgYnVpbGRpbmcgYSBzdG91dCBzdHJ1Y3R1cmUgd2l0aCBtYXNzaXZlIHdhbGxzLCB0aHJlZSB0b25zIG9mIGNhc3QgaXJvbiwgY2VtZW50LCBpcm9uIGRvb3JzIGFuZCB3aW5kb3cgY2FzZW1lbnRzLCBzdG9uZSwgc2hlZXQgbGVhZCwgYW5kIDEuNSIgdGhpY2sgd29vZGVuIHBsYW5rIGZsb29ycyBvdmVyIGNhc3QgaXJvbiB0cnVzc2VzLiBIb3cgdGhlIHdvb2QgZmlndXJlcyB0byBiZSAiZmlyZSBwcm9vZiIgSSBkbyBub3Qga25vdy4gQnV0IHRoZSBzdWJqZWN0IHdhcyBoaWdobHkgdW51c3VhbCwgYW5kIGRlY2lkZWQgdG8gc2hhcmUgdGhlIHNob3J0IGFydGljbGUgaW4gZnVsbC4KSSBjb3VsZG4gZmluZCBpdCBJIGJlbGlldmUgbXkgZGF0ZXMgYXJlIHdyb25nIHNvIHlvdSBtYXkgaGF2ZSB0byBhZGp1c3QgdGhlbS4gCkNvbXBsaWNhdGVkIHByZWduYW5jaWVzIGNhbiBiZSBhIGRpZmZlcmVudCBzdG9yeSwgYnV0IG5vdCBiZWNhdXNlIG1hc3NhZ2UgaGFzIGJlZW4gbGlua2VkIHRvIGluY3JlYXNlZCByaXNrcyBpbiB0aG9zZSBjYXNlcy4gCkNlc2FyZWFuIFNjYXI6IFJleW5hIENlc2FyZWFuIFNjYXI6IExvcmllIFBvcnRlciBDZXNhcmVhbiBTY2FyOiBFcmlrYSBDZXNhcmVhbiBTY2FyOiB3b2xmIENlc2FyZWFuIFNjYXI6IEtlbGx5IENlc2FyZWFuIFNjYXI6IEFub255bW91cyA0IENlc2FyZWFuIFNjYXI6IEVsaXphYmV0aCBDZXNhcmVhbiBTY2FyOiBTYXJhaCBTLiAKVGhlIGdyb3VwIHdlIHJlYWNoIG91dCB0byBwZW9wbGUgd2l0aCBkeXN0b25pYSBhbmQgdGhlaXIgZmFtaWxpZXMsIHNhaWQgUHJlc3RpLCB3aG8gZGV2ZWxvcGVkIHRoZSBkaXNvcmRlciBpbiBPY3RvYmVyIDE5OTAgYWZ0ZXIgYSBoZWFkIGluanVyeS4gZm9jdXMgb24gcHVibGljIGF3YXJlbmVzcywgcmVzZWFyY2ggYW5kIGZ1bmRyYWlzaW5nLCBiZWNhdXNlIHdlIGRlc3BlcmF0ZWx5IHRyeWluZyB0byBmaW5kIGEgdHJlYXRtZW50IGFuZCBhIGN1cmUuIE1hY2sKVGhyb3VnaCBpdCwgcmVmcmVzaGluZ2x5LCBzaGUgZW5jb3VyYWdlcyBhIGhlYWx0aHkgcmVsYXRpb25zaGlwIHdpdGggZm9vZCwgc2hhcmVzIDEwMCByZWNpcGVzIHRydWUgdG8gaGVyIGpvdXJuZXkgYW5kIG9mZmVycyBzdHJhdGVnaWVzIHRvIHN1c3RhaW4gYSBtb3JlIGhlYWx0aGZ1bCBhcHByb2FjaCBpbiB0aGUgbG9uZyB0ZXJtLCB3aGF0ZXZlciB0aGF0IG1lYW5zIHRvIHlvdS4gCllvdSBzYXkgaGUgd2FzIHRpZ2h0LCB0aWdodCwgdGlnaHQuIApGb3IgZXhhbXBsZSwgaWYgd2Uga25vdyB3aGF0IGJyb3dzZXIgc29mdHdhcmUgYW5kIHNjcmVlbiByZXNvbHV0aW9uIG91ciB1c2VycyBhcmUgdXRpbGl6aW5nLCB3ZSBhcmUgYmV0dGVyIGFibGUgdG8gZGVzaWduIHdlYiBwYWdlcyB0aGF0IHN1aXQgb3VyIHVzZXJzLiBUaGUgc3RhdGlzdGljcyB3ZSBnZW5lcmF0ZSBhcmUgYWdncmVnYXRlLiBXZSBkbyBub3QgdHJhY2sgdGhlIHVzYWdlIHBhdHRlcm5zIG9mIGluZGl2aWR1YWwgdXNlcnMuUGxlYXNlIHZpc2l0IHRoZSBHb29nbGUgQW5hbHl0aWNzIHdlYnNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24uSWYgeW91IGNob29zZSBub3QgdG8gYWNjZXB0IGNvb2tpZXMgZnJvbSBvdXIgc2l0ZSB1c2luZyB0aGUgY29uc2VudCBiYW5uZXIsIG91ciB3ZWJzaXRlIHdpbGwgY3JlYXRlIGFuIG9wdCBvdXQgY29va2llIHdoaWNoIHdpbGwgYmUgc3RvcmVkIGluIHlvdXIgYnJvd3NlciBmb2xkZXIgd2hpY2ggd2lsbCBibG9jayBmdXR1cmUgR29vZ2xlIEFuYWx5dGljIGNvb2tpZXMgZnJvbSBiZWluZyBpbnN0YWxsZWQgb24geW91ciBicm93c2VyIGZyb20gb3VyIHdlYnNpdGUuIApDb21wYW5pZXMgbGlrZSBQYXJ0eUdhbWluZyBoYXZlIGJyb3VnaHQgdGhlIGdsYW1vcm91cyBpbWFnZSBvZiBwb2tlciAgIGEgbWFjaG8gZ2FtZSBvZiBuZXJ2ZSwgd2l0LCB0YWN0aWNzIGFuZCBsdWNrICAgdG8gbWlsbGlvbnMgb2Ygb3JkaW5hcnkgcHVudGVycy4gUmF0aGVyIHRoYW4gaGF2aW5nIHRvIHZlbnR1cmUgaW4gdG8gYSBjYXNpbm8sIHB1bnRlcnMgY2FuIHBsYXkgZnJvbSB0aGVpciBjb21wdXRlciBzY3JlZW4gd2l0aG91dCBoYXZpbmcgdG8gbGVhdmUgaG9tZSBhdCBhbnkgdGltZSBvZiB0aGUgZGF5IG9yIG5pZ2h0Li4gClRoaXMgbWFrZXMgbWUgdGhpbmsgb2YgbXkgY29udmVyc2F0aW9uIHdpdGggdS9ia2tnaXJsIGFuZCBJIHN1cHBvc2UgdGhhdCB0aGUgYWJpbGl0eSB0byB2aXN1YWxpemUgdGhpbmdzIGlzIG9uIGEgc3BlY3RydW0sIHdpdGggdGhlIGFwaGFudGFzaWEgdHlwZXMgb24gb25lIGVuZCBhbmQgcGVvcGxlIGxpa2UgbWUgb24gdGhlIG90aGVyLiBWaXN1YWxpemF0aW9uIGNvbWVzIHNvIGVhc2lseSB0byBtZSB0aGF0IHRoZSBjb2duaXRpdmUgbG9hZCBvZiByZWFkaW5nIGluIGEgbmV3IGxhbmd1YWdlIChvbmUgSSBsZWFybmluZyBidXQgbm90IGNvbXBsZXRlbHkgZmFtaWxpYXIgd2l0aCkgcmVwcmVzZW50cyBubyBwcm9ibGVtIHRvIGltYWdpbmluZyB3aGF0IGlzIGhhcHBlbmluZyBpbiB0aGUgc3RvcnkgYXMgSSByZWFkIGl0LiBJZiBJIGNvbXByZWhlbmQgdGhlIHNlbnRlbmNlLCBJIHNlZSBpdCBpbiBteSBtaW5kIGV5ZS4gClNsZWVwIGlzIGEgbmF0dXJhbCBwcm9jZXNzIGRlZmluZWQgYXMgYSByZWN1cnJlbnQgc3RhdGUgb2YgcmVkdWNlZCBhdHRlbnRpb24gdG8gdGhlIHN1cnJvdW5kaW5nIGVudmlyb25tZW50LiBUaGUgbW9zdCBpbXBvcnRhbnQgc2xlZXAgZnVuY3Rpb25zIGFyZTogcmVzdG9yYXRpb24gb2YgYm9keSBmdW5jdGlvbnMsIHN5bnRoZXNpcyBvZiBwcm90ZWluIGFuZCBwcmV2ZW50aW9uIG9mIGxldGhhcmd5LiBUaGUgYW1vdW50IG9mIG5lZWRlZCBzbGVlcCB2YXJpZXMgZnJvbSBpbmRpdmlkdWFsIHRvIGluZGl2aWR1YWwuIEFkdWx0cyBuZWVkIHNldmVuIHRvIG5pbmUgaG91cnMgb2YgZ29vZCBzbGVlcCB0byBiZSBhbGVydCBkdXJpbmcgdGhlIGRheS4KSG93IGRvIHlvdSBiZWF0IGhpZ2ggc2Nob29sIGRldGVjdGl2ZSAxPwpUaGUgbWFycmlhZ2UgY2FuIGJlIGNvbnNpZGVyZWQgcHV0YXRpdmUsIG1lZXRpbmcgYWxsIHRoZSBsZWdhbCByZXF1aXJlbWVudHMsIHdpdGhvdXQgYmVpbmcgc2FjcmFtZW50YWw7IGEgZGVjbGFyYXRpb24gb2YgbnVsbGl0eSBhY2tub3dsZWRnZXMgdGhhdCB0aGUgbWFycmlhZ2UsIG5vdCBiZWluZyBzYWNyYW1lbnRhbCwgd2FzIGZsYXdlZCBpbiBzb21lIHdheSBhbmQgdGh1cyBkaWQgbm90IGFjdHVhbGx5IG9jY3VyLiAKSSBkbyBoYXZlIGEgZCBoYW1tZXIgYW5kIGFyY2xpZ2h0IGFsc28KSG93IGNhbiB0aGUgQW1lcmljYW4gcHVibGljLiBBbnkgb2YgdGhlbSByaWNoIG9yIHBvb3IsIHRoaW5rIHRoYXQgaXMgb2s/IEkgc3BlbnQgYSB3ZWVrIGluIGhvc3BpdGFsIGxhc3QgeWVhciBhZnRlciBoYXZpbmcgYSBwaWVjZSBvZiBtZXRhbCBzaG90IHRocm91Z2ggbXkgZm9vdCwgMiBzdXJnZXJpZXMsIHhyYXlzLCBiZWQgZm9yIDUgZGF5cyArbWVhbHMsIHNwZWNpYWxpc3QgY2FyZSBhbmQgdHJlYXRtZW50IGluY2x1ZGluZyBkaWFnbm9zaW5nIGFuZCBjYXJpbmcgZm9yIG90aGVyIG90aGVyIGlzc3VlcyB0aGV5IGZvdW5kIHdoaWxlIGkgd2FzIHRoZXJlIChibG9vZCBwcmVzc3VyZSBhbmQga2lkbmV5IGZ1bmN0aW9uKSBhcyB3ZWxsIGFzIG9uZ29pbmcgY2FyZSBhbmQgd2Vla2x5IGNsZWFuaW5nIGFwcG9pbnRtZW50cyBmb3IgYWJvdXQgNSB3ZWVrcyBhZnRlci4gCkFuZCBkdXJpbmcgYWxsIG9mIHRoaXMsIEpOTW9tbXkgaXMgaGlzIGJpZ2dlc3QgYWR2b2NhdGUgYWdhaW5zdCB0aGUgTWVhbiBNZWFuIFBvbGljZW1lbiwgSnVkZ2VzLCBDT3MgYW5kIFBPcyB3aG8gYXJlIEFMTCBvdXQgdG8gZ2V0IHBvb3IgbGl0dGxlIEdDSk4uIFNvIEdDSk4gbmVlZHMgQUxMIG9mIEpOTW9tbXkncyBhdHRlbnRpb24gYW5kIGZpbmFuY2VzLiBXaGVuIEdDSk4gaXMgYSBraWQsIGFsbCB0aGUgb3RoZXIgc2libGluZ3MgYXJlIHRvdGFsbHkgaWdub3JlZCwgb3IgZXZlbiBwdW5pc2hlZCBmb3IgYmVoYXZpbmcgd2VsbCBhbmQgZG9pbmcgd2VsbCBpbiBzY2hvb2wgb3Igc3BvcnRzIGNhbid0IHRoZXkgc2VlIGhvdyBiYWQgdGhlaXIgc3VjY2VzcyBtYWtlcyBwb29yLCBsYXp5IEdDSk4gZmVlbCB3aGVuIGhpcyBzaWJsaW5ncyBhcmUgZG9pbmcgd2VsbD8/IEFzIEdDSk4gZ3Jvd3MgdXAsIGFsbCBvZiB0aGUgZmFtaWx5IHJlc291cmNlcyBhcmUgZ2l2ZW4gdG8gaGltLiBDb2xsZWdlIGZ1bmRzIGZyb20gd2VsbCBtZWFuaW5nIGdyYW5kcGFyZW50cz8gUG9vZiEhIEdDSk4gbmVlZHMgeWV0IGFub3RoZXIgbmV3IGNhci9oYXMgYSBzdWJzdGFuY2UgYWJ1c2UgaGFiaXQvd2FudHMgZXhwZW5zaXZlIG1hbiB0b3lzIGJ1dCAiZG9lc24ndCIgd29yay9uZWVkcyB0byBidXkgaGlzIHdheSBvdXQgb2YgYW55IG51bWJlciBvZiBKTiBidWxsc2hpdCBzaXR1YXRpb25zL2hhcyBiYWlsL2NvdXJ0IGZlZXMvcHJpc29uIGNvc3RzIHRoYXQgYXJlIEFMTCBzb29vb28gbXVjaCBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBlZHVjYXRpb25hbCBuZWVkcyBvZiBoaXMgc2libGluZ3MuIEdDSk4gaXMgc28gZGFtbmVkICJzcGVjaWFsIjsgaGUgbmVlZHMgbW9yZSBvZiBNb21teSdzIGhlbHAsIGF0dGVudGlvbiBhbmQgbG92ZSEgVW50aWwgaGUncyBpbnRvIGhpcyA2MHMhIQpCYW5lYW5kbWlsbGllICAxIHBvaW50ICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0ltIGluIHRoZSBzYW1lIGJvYXQgSSBhYnNvbHV0ZWx5IGxvdmUgdmlkZW8gZ2FtZXMgYW5kIGl0IGJyZWFrcyBteSBoZWFydCBJIGRvbid0IGdldCB0byBwbGF5IGFzIG11Y2ggYXMgSSB3YW50ISEhIEFsc28gaWYgeW91IGxpa2UgWGJveCBnYW1lcyB0aGV5IGNhbWUgb3V0IHdpdGggYSBkaXNhYmlsaXR5IGNvbnRyb2xsZXIgdGhhdCBzZWVtcyByZWFsbHkgYXdlc29tZS4KQWxzbyB0byB5b3VyIG90aGVyIHBvaW50IGFib3V0IHRoZW0gc3VkZGVubHkgc3RvcHBpbmcgcmVwb3J0aW5nIG9uIHRoZW0gYmVpbmcgZmFrZSwgdGhlIHNtb2xsZXRzIGNhc2Ugd2FzIHN0aWxsIHBsYXlpbmcgb24gQ05OIHRoaXMgYWZ0ZXJub29uLiB0aGlzIGlzIGJlaW5nIHJlcG9ydGVkIG5vdy4gSG93IGRvIHlvdSB0aGluayB5b3UgYXJlIGhlYXJpbmcgYWJvdXQgdGhlc2UgY2FzZXMgdGhhdCB3ZXJlIG1hZGUgdXA/Ck1ldGhvZHM6IEZvbGxvd2luZyBhIDYgd2VlayBiYXNlbGluZSwgSWdHIGFudGlib2RpZXMgYWdhaW5zdCAyNjYgZm9vZCBhbnRpZ2VucyB3ZXJlIGRldGVjdGVkIGJ5IEVMSVNBLiAKVGhlIGd1eSB3YXMgbmljZSBidXQgd2Ugd291bGRuJ3QgdXNlIHRoZW0gYWdhaW4gKHBvb3IgdGltZSBtYW5hZ2VtZW50LCBmaW5kaW5nIGlzc3VlcyB3aXRoIHRoZSB3b3JrIGFmdGVyIGEgY291cGxlIG9mIG1vbnRocywganVzdCBhc3N1bWVkIHdoYXQgd2Ugd2FudGVkIHJhdGhlciB0aGFuIGFza2luZyBhbmQgZ2VuZXJhbGx5IHVucHJlcGFyZWQgbW9zdCBkYXlzKS5JIHRoaW5rIGl0J3MgY29tbW9uIGZvciBzb21lIGNvbXBhbmllcyB0byBuZXZlciByZXBseSBvciBwcm92aWRlIGEgcXVvdGUuIApBbGwgeW91IGhlYXIgaXMgdGFsayBhYm91dCAiZGlnbml0eSIgYW5kICJodWdzIiBhbmQgb3RoZXIgbm9uIHNlbnNlIHRoYXQgaXMgbm90IHJlYWxseSBzb2x1dGlvbiBvcmllbnRlZC4gClRoZSBsYXR0ZXIgd291bGQgZGlzdHVyYiB0aGUgTG9yZHMgb2YgdGhlIFNvaWwgKFR1IERpIEdvbmcgYW5kIGhpcyB3aWZlLCBUdSBEaSBQbyksIHdobyBpbmZsdWVuY2UgcHJvc3Blcml0eSBhbmQgdGhlIHdlbGwgYmVpbmcgb2YgYW5jZXN0cmFsIHNwaXJpdHMuIApJIGRpZG4ndCBzdGFydCB0byB0cnkgdG8gYXBwbHkgTUwgbW9kZWxzIHRvIG15IHJlc2VhcmNoIGZvciBhIHZlcnkgbG9uZyB0aW1lIGJlY2F1c2UgSSB0aG91Z2h0IEkgbmVlZGVkIHRvIGtub3cgaG93IHRvIGRvIHJlZ3Jlc3Npb25zLiAKVGhlIHNpbXBsZXN0IHdheSB0byBnZXQgYXR0ZW50aW9uLCBhbmQgb25lIHRoYXQgaXMgb2Z0ZW4gdXNlZCBpbiB0aGlzIGdhbWUgb2YgdWx0aW1hdGUgcG93ZXIgYnJva2luZywgaXMgdG8gdXAgZW5naW5lIHBlcmZvcm1hbmNlLiBTd2VkZW4ncyBzdXBlcmNhciBtYWtlciBLb2VuaWdzZWdnIGhhcyByZWNlbnRseSBkb25lIGp1c3QgdGhhdCB3aXRoIGl0cyB1cGRhdGVkIEZvciB0aGUgMjAwNCBtb2RlbCB5ZWFyIHRoZSBtaWQgZW5naW5lZCBTNyBoYXMgYmVlbiBib29zdGVkIHRvIDU3NSBob3JzZXBvd2VyLiAoUGhvdG86IFNhbGVlbikgQ0NSLCB3aGlsZSBvdGhlciBzcG9ydHMgY2FyIG1hcnF1ZXMgY29udGludWUgdG8gaW5jcmVhc2UgdGhlIGFudGUgaW4gdGhlIGhvcnNlcG93ZXIgcG9rZXIgcGxheS4uIApUaGUgQm91cnNlLCB3aGljaCBoYXMgbW9yZSB0aGFuIHR3byBkb3plbiBmb29kIHN0YWxscywgY2xhaW1zIHRocmVlIGJhcnM6IEJsdWViaXJkJ3MgbmV3ZXN0IG91dHBvc3Q7IFBoaWxseSdzIGZpcnN0IGNob2NvbGF0ZSBhbmQgd2luZSBiYXIsIGZyb20gQ2hvY29kaWVtIG9mIEVhc3RvbjsgYW5kIHRoZSBUQVBTIEZpbGwgU3RhdGlvbiwgc3BlY2lhbGl6aW5nIGluIGRyYWZ0IGV2ZXJ5dGhpbmc6IGtvbWJ1Y2hhLCBjb2NrdGFpbHMsIGJlZXIsIGNpZGVyLCBhbmQgbWVhZC4gQnV0IHRoZSB0aW1pbmcgaGFzIGJlZW4gcm91Z2gsIEFka2lucyBhZG1pdHRlZDogIkl0IGhhZCBvcGVuZWQgaW4gdGhlIENocmlzdG1hcyBzZWFzb24gYW5kIHJpZ2h0IGludG8sIGdvIGZpZ3VyZSwgZHJ5IEphbnVhcnkuIiBOb3csIHRoZXkncmUgbWFraW5nIGFkanVzdG1lbnRzLCBoZSBzYWlkOiBzb2Z0ZXIgbGlnaHRpbmcgZm9yIG5pZ2h0dGltZSBhbWJpZW5jZSwgYSBiZXR0ZXIgc291bmQgc3lzdGVtLCBwcm9qZWN0aW9uIHNjcmVlbnMgc2hvd2luZyBzcG9ydHMsIGFuZCBldmVudHMgbGlrZSBmb3VydGggVGh1cnNkYXkga2FyYW9rZSBuaWdodHMgYW5kIGEgTWFyY2ggNSBNYXJkaSBHcmFzIGJsb3dvdXQgd2l0aCBhIE5ldyBPcmxlYW5zIGJyYXNzIGJhbmQuCkxvc3QgbXkgdmlyZ2luaXR5IGluIGhpZ2hzY2hvb2wgdG8gYSBnaXJsIGluIG15IGFydCBjbGFzcy4gV2VudCBvdmVyIHRvIGhlciBob3VzZSB0byBoYW5nIG91dCBhbmQgd2F0Y2ggdGhhdCBkb2N1bWVudGFyeSBhYm91dCBwZW5ndWlucywgIk1hcmNoIG9mIHRoZSBQZW5ndWlucyIuIEkgcmVhbGx5IGxpa2VkIHBlbmd1aW5zLCB0aG91Z2h0IHRoZXkgd2VyZSBzdXBlciBjb29sIGFuZCBjdXRlLgpHcnVuZGxhZ2VuIGRlci4gClR1cm1lcmljIGlzIGhhcnZlc3RlZCBmcm9tIHRoZSByb290cyBvZiB0aGUgQ3VyY3VtYSBsb25nYSBwbGFudCwgd2hpY2ggaXMgbmF0aXZlIHRvIEluZGlhIFtzb3VyY2U6IEN1cmN1bWEgTG9uZ2FdLiBUbyBjcmVhdGUgdHVybWVyaWMsIHRoZSByb290cyBvZiB0aGUgQ3VyY3VtYSBMb25nYSBwbGFudCwga25vd24gYXMgcmhpem9tZXMsIGFyZSBib2lsZWQsIGRyaWVkIGFuZCB0aGVuIGdyb3VuZCBpbnRvIGEgcG93ZGVyLiBFYXN0ZXJuIGN1bHR1cmVzIGhhdmUgYmVlbiBpbmNvcnBvcmF0aW5nIHR1cm1lcmljIGludG8gdGhlaXIgZGlldHMgYW5kIHRha2luZyBhZHZhbnRhZ2Ugb2YgaXRzIG1lZGljaW5hbCBwcm9wZXJ0aWVzIGZvciBjZW50dXJpZXMuIEluIHJlY2VudCB5ZWFycywgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGhhcyBiZWd1biB0byB0YWtlIG5vdGljZTsgdGltZSBhbmQgcmVzb3VyY2VzIGFyZSBiZWluZyBwdXQgdG93YXJkIHVubG9ja2luZyB0aGUgc2VjcmV0cyBiZWhpbmQgdHVybWVyaWMncyBoZWFsdGh5IGJlbmVmaXRzIGluIGxhYnMgYXJvdW5kIHRoZSBnbG9iZS4KVGhlIHdheSBJIHNlZSBpdCwgdGhlIGluZGVwZW5kZW50IGFydGlzdHMsIGVzcGVjaWFsbHkgdGhlIG9sZCBvbmVzLCBhcmUgdmVyeSB2ZXJ5IHN1cGVyaW9yIHRvIHRoZSBjaGFydGVkIGFydGlzdHMsIG5vdCBvbmx5IGR1ZSB0byBoYXJkIHdvcmsgYnV0IGJlY2F1c2UgdGhleSBhcmUgcmVhbGx5IHByb2Zlc3Npb25hbCBpbiB3aGF0IHRoZXkgZG8uIApUaGlzIG9uZSBpcyBwcmV0dHkgZmFtaWx5IGZyaWVuZGx5LCB0b28uIFdobyBpbiB0aGVpciByaWdodCBtaW5kIHdvdWxkIG9wcG9zZSBhIGhvbWUgdGhlYXRlciB3aXRoIHN1cnJvdW5kIHNvdW5kLCBtb3Rvcml6ZWQgcmVjbGluZXJzIGFuZCBhIHBvcGNvcm4gbWFjaGluZT8gQW5kIHllcywgeW91ciBtaW5pIHRoZWF0ZXIgaXMgdGVjaG5pY2FsbHkgYSBtYW4gY2F2ZSwgYnV0IHRoYXQgZG9lc24ndCBtZWFuIGhvcnJvciBmbGlja3MgYW5kIGdhbmdzdGVyIHNob290IGVtIHVwcyBoYXZlIHRvIGJlIHRoZSBvbmx5IGZlYXR1cmVzIG9uIHRoZSBtb3ZpZSBtZW51LiAKUG9rZXIgSG93IHRvIE1ha2UgYSBQcm9maXQgUGxheWluZyBQb2tlciBPbmxpbmUKVGhlIENvbW1vbiBCdXp6YXJkIChCdXRlbyBidXRlbykgaXMgYSBiaXJkIG9mIHByZXkgdGhhdCBjYW4gYmUgc2VlbiBhY3Jvc3MgRXVyb3BlIGFuZCBpbiBwYXJ0cyBvZiBBc2lhIGFuZCBBZnJpY2EuIFNvbWUgbWVtYmVycyBvZiB0aGUgc3BlY2llcyBzdGF5IGNsb3NlIHRvIHdoZXJlIHRoZXkgaGF0Y2hlZCwgc3VjaCBhcyBpbiB0aGUgVUssIHdoaWxlIG90aGVycyBtaWdyYXRlIGxvbmcgZGlzdGFuY2VzIGZyb20gdGhlIHN0ZXBwZXMgb2YgUnVzc2lhIHRvIHRoZSBncmFzc2xhbmRzIG9mIFNvdXRoIEFmcmljYS4KMUFiIHVyYmUgY29uZGl0YSAgIExhdGluIG1lYW5pbmcgJ2Zyb20gdGhlIGZvdW5kaW5nIG9mIHRoZSBDaXR5JyAob2YgUm9tZSkuMkVneXB0aWFuIHN0YXR1ZXMgYWxzbyBwcmVkb21pbmFudGx5IHN0YW5kIGxlZnQgZm9vdCBpbiBmcm9udCBvZiByaWdodC4gVGhpcyBpbnNwaXJlZCBOYXBvbGVvbiB0byBpbnNpc3QgdGhhdCBoaXMgdHJvb3BzIHN0YXJ0IG1hcmNoaW5nIHdpdGggdGhlaXIgbGVmdCBmb290LCBhbmQgdGhpcyBoYXMgYmVlbiBhZGFwdGVkIGJ5IGFybWllcyB3b3JsZHdpZGUgdG9kYXkuM09uZSBvZiB0aGUgU2V2ZW4gV29uZGVycyBvZiB0aGUgV29ybGQgYWxvbmcgd2l0aCBUaGUgR3JlYXQgUHlyYW1pZCBvZiBHaXphLCBUaGUgSGFuZ2luZyBHYXJkZW5zIG9mIEJhYnlsb24sIHRoZSBUZW1wbGUgb2YgQXJ0ZW1pcyBhdCBFcGhlc3VzLCB0aGUgTWF1c29sZXVtIGF0IEhhbGljYXJuYXNzdXMsIHRoZSBDb2xvc3N1cyBvZiBSaG9kZXMsIGFuZCB0aGUgUGhhcm9zIExpZ2h0aG91c2UgYXQgQWxleGFuZHJpYS40T25lIG9mIHRoZSBtb3N0IGZhbW91cyBleGFtcGxlcyBiZWluZyBNaWNoZWxhbmdlbG8ncyBzdGF0dWUgRGF2aWQuClRoZSBwcm9ibGVtcyBhcmUgbWFpbmx5IGNhdXNlZCBieSB0aGUgd2F5IGluIHdoaWNoIFlhaG9vISBoYXMgZ3Jvd24gICBieSB0YWtpbmcgb3ZlciBzbWFsbGVyIGNvbXBhbmllcy4gCldvbGxzdG9uZWNyYWZ0ZmFuICAyNDMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpGaXJlZCBiZWZvcmUgSSBjb3VsZCBldmVuIGZ1bGx5IGRlZGljYXRlIG15IHRpbWUgdG8gaXQuIApJdCBub3QgdGhhdCBoYXJkLiAKR3Vlc3MgSSBzaG91bGQgaWRlbnRpZnkgd2hhdCAibmV3IiBtZWFucyBoZXJlIEkgdGFsa2luZyBhYm91dCB0aGUgdGhpcmQgZGVjYWRlIG9mIHRoZSBidWlsZGluZywgdGhlIGZpcnN0IG9mIHdoaWNoIChmb3IgYWxsIGludGVudHMgYW5kIHB1cnBvc2VzKSBjb3VsZCBiZSBpZGVudGlmaWVkIGFzIFdpbGxpYW0gSmVubmV5IEhvbWUgSW5zdXJhbmNlIEJ1aWxkaW5nIGluIENoaWNhZ28gaW4gMTg4NSwgd2hpY2ggd2FzIDEwIHN0b3JpZXMgYW5kIDEzOCBoaWdoLiAoVGhlcmUgYXJlIGNvdXBsZSBvZiBvdGhlciBlYXJsaWVyIGFuZCBxdWFsaWZpZWQgY29udGVuZGVycyBmb3IgImZpcnN0IHNreXNjcmFwZXIiLCBidXQgZm9yIGhlcmUgdGhlIEplbm5leSBidWlsZGluZyB3aWxsIHdvcmsgZmluZS4pIFRoZXJlIHdhcyBhIGJvb21sZXQgb2Ygc2t5c2NyYXBlcnMgaW4gQ2hpY2FnbyBiZWdpbm5pbmcgaW4gdGhlIDE4OTAgYW5kIHRoZSBiZWdpbm5pbmcgb2YgdGhlIEdvbGRlbiBBZ2UvQnVpbGRpbmcgQm9vbSBhcm91bmQgMTkwMCwgc28gYnkgMTkwOCB0aGUgYnVpbGRpbmcgc3R5bGUgd2FzIHdlbGwgZXN0YWJsaXNoZWQsIHRob3VnaCAic2t5c2NyYXBlciIgYXMgYSB3b3JkIGFwcGxpZWQgdG8gYnVpbGRpbmdzIHdhcyBvbmx5IDIwIHllYXJzIG9sZC4gCkxpa2UgcmFjaXNtIGlzIGEgbWluZHNldCB0aGF0J3MgYmFzZWQgb24gZmFsc2UgYXNzdW1wdGlvbnMgLyBsYWNrIG9mIGVtcGF0aHkgLyBuYXJjaXNzaXNtIC8gZXRjLiBCdXQgaW5zdGl0dXRpb25hbCByYWNpc20gaXMgbm90IGJhc2VkIG9uIGFueSBvZiB0aGF0LCBoZXJlIGZvciBleGFtcGxlLCBpdCdzIGp1c3Qgbm90aW5nIGNvbXBhcmF0aXZlbHkgbGVzcyBnb3Zlcm5tZW50IGZ1bmRpbmcgZm9yIGNvbW11bml0aWVzIHRoYXQgYXJlIG5vdCBtb3N0bHkgd2hpdGUuIEJ1dCB0aGF0IGlzIE9ORSBwaWVjZSBvZiBkYXRhLCBmb3VuZCBieSBzcGxpdHRpbmcgdGhlIHBvcHVsYXRpb24gaW4gYSB2ZXJ5IGNydWRlIHdheSwgaXQgaGFyZGx5IHNlZW1zIGxpa2Ugd2hhdCB0aGUgZm9jdXMgc2hvdWxkIGJlIG9uLgpJdCBkaWRuIGFycml2ZSB1bnRpbCAxOjE1IEFNLiAKU28gZXh0cmVtZWx5IHJhcmUgdGhhdCB5b3UgaGF2ZSB0byBnbyBhbGwgdGhlIHdheSBiYWNrIHRvIGxhc3QgeWVhciB0byBmaW5kIGEgc2ltaWxhciBhY3Rpb24uIGluIHRoaXMgY2FzZS4KTWVuIGFyZSBtb3JlIHZpc3VhbCwgc28gdGFsa2luZyB0byB0aGVtIHdpbGwgbm90IGJlIGFzIGVmZmVjdGl2ZSBhcyBzaG93aW5nIHRoZW0uIFNpbmNlIHlvdXIgdHdlbnR5IHllYXJzIG9mIG1hcnJpYWdlIGlzIGVub3VnaCBmb3IgeW91IHRvIGtub3cgeW91ciBodXNiYW5kIHdlbGwsIHlvdSB3aWxsIGFjY3VyYXRlbHkga25vdyB3aGF0IG1ha2VzIGhpbSBoYXBweS4gClRoZSBibGFja3MgYXJlIGEgdGFkIHNvZnQgaG93ZXZlciwgc28geW91IGxvc2luZyBhIGJpdCBvZiBkZXRhaWwgaW4gaGVyIHNoaXJ0IGFuZCBoYXQuIApJIGRvbid0IGtub3cgdGhlbSB0aGF0IHdlbGwgdG8ga25vdyB3aGV0aGVyIHRoZXkgd2VyZSBseWluZyBvciBtYWtpbmcgYSBzdG9yeSB1cC4gCkhlIGFuZCBnZW5lcmFsIG1hbmFnZXIgQnJvY2sgU3VuZGVybGFuZCwgdGhlIEVza2ltb3MgdmljZSBwcmVzaWRlbnQgb2YgZm9vdGJhbGwgb3BzLCBhcmUgb24gdGhlIHNhbWUgcGFnZSB3aGVuIGl0IGNvbWVzIHRvIGNvbnRyYWN0IG9mZmVycyB0aGF0IGhhdmUgYWxyZWFkeSBiZWVuIHByZXNlbnRlZCB0byBSZWlsbHksIHdoaWNoIHRoZXkgY2xhc3NpZnkgYXMsIHN0cm9uZyB0byByZWNvcmQgYnJlYWtpbmcuIApZb3UgY291bGQgc2F5IGl0IHdhcyBhICd0aGVyYXBldXRpYyBpbmZsYW1tYXRpb24nIGluIHRoYXQgYXJ0aHJpdGlzIChmb3IgaW5zdGFuY2UpIG9mdGVuIG9jY3VycyBpbiBqb2ludHMsIHNheSB0aGUga25lZS4gVGhlIGtuZWUgam9pbnQgaGFzIGEgbGFyZ2UgY3VzaGlvbiBvZiBjYXJ0aWxhZ2UsIHdoaWNoIGhhcyBhIHBvb3IgYmxvb2Qgc3VwcGx5LiAKVGhleSBzdWNoIGN1bnRzIHRoYXQgdGhlIEF1c3RyYWxpYW4gZ292ZXJubWVudCBhZHZpY2UgZm9yIGRlYWxpbmcgd2l0aCB0aGVtIGlzIHRvIHN1Z2dlc3QgeW91IHRha2UgYSBkaWZmZXJlbnQgcm91dGUgbmV4dCB0aW1lIChiaXRjaCkuIApQb3N0ZWQgYnkgaGVsdmV0aWNhIGF0IDExOjI1IEFNIG9uIERlY2VtYmVyIDMxLCAyMDA0CldoaWNoIG1ha2VzIGhpcyB0cmVhdG1lbnQgb2YgRGVubmEgaXJvbmljYWxseSBwYWluZnVsIGluIGhpbmRzaWdodCwgYW5kIHdpbGwgY2FzdCBhIGJpdHRlcnN3ZWV0IG1lbGFuY2hvbHkgb3ZlciBhbGwgb2YgaGlzIHBhc3QgZGVjaXNpb25zIHdoZW4gd2UgdW5kZXJzdGFuZCBob3cgaGUgaGFzIGluZGVlZCBiZWVuIGxlYWQgZG93biB0aGUgZ2FyZGVuIHBhdGguIEFzIGNsZXZlciBhcyBoZSBpcywgaGUgaGFzIGJlZW4gdHJpY2tlZCBhbmQgbWlzbGVkIGludG8gYmVsaWV2aW5nIGEgZmFsc2Vob29kLCBhbmQgYWxsIG9mIGhpcyB0YWxlbnRzLCBza2lsbHMgYW5kIGludGVsbGlnZW50IHB1dCB0byB3b3JrIG9uIHRoZSB3cm9uZyBzaWRlLiAKVW5sZXNzIGV4cHJlc3NseSBzdGF0ZWQgb3RoZXJ3aXNlIGluIHdyaXRpbmcsICgxKSBub3RoaW5nIGNvbnRhaW5lZCBpbiB0aGlzIHN1YnJlZGRpdCB3YXMgaW50ZW5kZWQgb3Igd3JpdHRlbiB0byBiZSB1c2VkLCBjYW4gYmUgdXNlZCBieSBhbnkgdGF4cGF5ZXIsIG9yIG1heSBiZSByZWxpZWQgdXBvbiBvciB1c2VkIGJ5IGFueSB0YXhwYXllciBmb3IgdGhlIHB1cnBvc2VzIG9mIGF2b2lkaW5nIHBlbmFsdGllcyB0aGF0IG1heSBiZSBpbXBvc2VkIG9uIHRoZSB0YXhwYXllciB1bmRlciB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBDb2RlIG9mIDE5ODYsIGFzIGFtZW5kZWQ7ICgyKSBhbmQgRVZFUlkgdGF4cGF5ZXIgc2hvdWxkIHNlZWsgYWR2aWNlIGJhc2VkIG9uIHRoZSB0YXhwYXllciBwYXJ0aWN1bGFyIGNpcmN1bXN0YW5jZXMgZnJvbSBhbiBpbmRlcGVuZGVudCB0YXggYWR2aXNvciB3aXRoIHJlc3BlY3QgdG8gYW55IGZlZGVyYWwgdGF4IHRyYW5zYWN0aW9uIG9yIG1hdHRlciBjb250YWluZWQgaW4gdGhpcyBzdWJyZWRkaXQuIApHb29kIGZvciB5b3Ugb24gcHV0dGluZyB5b3VyIHBhcmVudHMgaW4gdGhlaXIgcGxhY2UuIFlvdSBiZWVuIHRocm91Z2ggc29tZXRoaW5nIGhvcnJpYmxlLCB5b3UgcmlzZSBhYm92ZSBpdCwgZGVhbCB3aXRoIGl0IGFuZCBzaGFyZSB0aGlzIHdpdGggdGhlIHBlb3BsZSB5b3UgY2xvc2Ugd2l0aCBhbmQgdGhleSBnbyBhaGVhZCBhbmQgdGVsbCB5b3UgeW91IHNob3VsZCBiZSBhc2hhbWVkIGFzIGlmIHlvdSBsZXQgaXQgaGFwcGVuLiAKRGllIE9tZXIgZGFua3QgYWxsZW0gdW5kIHN0enQgc2ljaCB2ZXJsZWdlbiBoaW4uIApUaGVyZSBpcyBhIGd1bGYgb2YgYSBkaWZmZXJlbmNlIGJldHdlZW4gYWwgZnJhbmtlbiBhbmQgd2hhdCBpcyB0eXBpY2FsbHkgdGhvdWdodCBvZiB3aGVuIG9uZSBzYXlzICJzZXh1YWwgaGFyYXNzbWVudCIgd2l0aCB0aGUgbGlrZXMgb2YgYmlsbCBjb3NieSBvciBXZWluc3RlaW4uClRoZSBtb3N0IGNvbW1vbiBjb21wbGljYXRpb24gb2YgQ3JvaG4ncyBkaXNlYXNlLCBvYnN0cnVjdGlvbiBtYXkgYXJpc2UgZnJvbSBzd2VsbGluZyBhbmQgdGhlIGZvcm1hdGlvbiBvZiBzY2FyIHRpc3N1ZS4gVGhlIHJlc3VsdCBpcyB0aGlja2VuaW5nIG9mIHRoZSBib3dlbCB3YWxsIGFuZCBhIG5hcnJvd2VkIGludGVzdGluYWwgcGFzc2FnZS4gVGhlc2UgbmFycm93ZWQgYXJlYXMgYXJlIGNhbGxlZCBzdHJpY3R1cmVzLiBTdHJpY3R1cmVzIG1heSBiZSBtaWxkIG9yIHNldmVyZSwgZGVwZW5kaW5nIG9uIGhvdyBtdWNoIHRoZXkgb2JzdHJ1Y3QgdGhlIHBhc3NhZ2Ugb2YgdGhlIGJvd2VsJ3MgY29udGVudHMuIFN5bXB0b21zIG9mIGludGVzdGluYWwgb2JzdHJ1Y3Rpb24gaW5jbHVkZSBjcmFtcHkgYWJkb21pbmFsIHBhaW4sIGZyZXF1ZW50bHkgYXNzb2NpYXRlZCB3aXRoIHZvbWl0aW5nLCBhbmQgYmxvYXRpbmcuIE1lZGljYXRpb25zIG1heSByZWxpZXZlIHRoZSBvYnN0cnVjdGlvbiBieSByZWR1Y2luZyB0aGUgbG9jYWwgYXJlYSBvZiBpbmZsYW1tYXRpb24uIElmIHRoZSBvYnN0cnVjdGlvbiBpcyBzZXZlcmUgYW5kIGRvZXMgbm90IHJlc3BvbmQgdG8gbWVkaWNhbCB0cmVhdG1lbnQsIHN1cmdlcnkgbWF5IGJlIHJlcXVpcmVkLiBTdXJnZXJ5IGFsc28gbWF5IGJlIGluZGljYXRlZCBpZiB0aGUgYmxvY2thZ2UgcmVjdXJzIGZyZXF1ZW50bHkuCiJHcmFuZCBIeWF0dCBLdWFsYSBMdW1wdXIncyBvcGVuaW5nIGVjaG9lcyBhZ2FpbiBIeWF0dCdzIGRldmVsb3BtZW50IHN0cmF0ZWd5LCB3aGljaCBpcyB0byBmb2N1cyBvbiB0aGUgZ2F0ZXdheSBjaXRpZXMgYW5kIG1hcmtldHMgd2hlcmUgY3VzdG9tZXJzIGFyZSB0cmF2ZWxpbmcuIApEbyB0aGV5IHRoaW5rIHRoYXQgYnkgc2hvd2luZyB0aGF0IHRoZXkgb25seSBwbGF5IGNhcmRzIHRoYXQgSSB3aWxsIHJlc3BlY3QgdGhlbSBtb3JlIGFuZCByZWFsaXNlIHRoYXQgdGhleSBhcmUgYSBzb2xpZCBwbGF5ZXIgd2hvIGlzbiBtZXNzaW5nIGFib3V0IHdpdGggYW55IHN0dXBpZCBibHVmZnM/IEJlY2F1c2UgaXQgaXMgbGl0ZXJhbGx5IHRoZSBvcHBvc2l0ZS4gSWYgc29tZW9uZSBldmVyIHNheXMgb25seSBwbGF5IGdvb2QgY2FyZHMgdW5pcm9uaWNhbGx5IHRoZW4gdGhleSBhcmUgZ3VhcmFudGVlZCB0byBiZSBhdHJvY2lvdXMuLiAKVGhyZWUgc3R1ZGllcyBvZiBNVCB2ZXJzdXMgcmVsYXhhdGlvbiBwcm92aWRlZCBpbnN1ZmZpY2llbnQgZGF0YSB0byBlbmFibGUgYSBjb21wYXJpc29uIG9mIE1UIGFuZCB3YXRjaGluZyBhIHJlbGF4aW5nIHZpZGVvIG9yIGNvbWJpbmVkIHlvZ2EgYW5kIHByb2dyZXNzaXZlIG11c2N1bGFyIHJlbGF4YXRpb24gKFBNUikgdGhlcmFweS4gTm8gbGFuZ3VhZ2UgcmVzdHJpY3Rpb25zIHdlcmUgYXBwbGllZCwgdGhlcmVieSBtaW5pbWlzaW5nIHRoZSByaXNrIG9mIGxhbmd1YWdlIGJpYXMuIApJIGNvbnRlbmQgdGhhdCdzIGhva3VtLi4gCiJJJ2QgbGlrZSB0byB0aGluayBJJ3ZlIGFsd2F5cyBiZWVuIGEgZ29vZCB3aWZlLCAiIHNhaWQgUm9ieW4uIApVbHRpbWF0ZWx5LCBJIGFncmVlIHdpdGggeW91ciBnb2Fsczogd2UgbmVlZCB0byBhYmFuZG9uIGZvciBwcm9maXQgaGVhbHRoY2FyZSwgbW92ZSBhd2F5IGZyb20gcHJpdmF0ZSBpbnN1cmVycyB0byBhIHNpbmdsZSBwYXllciBzeXN0ZW0sIGFuZCBhZGRyZXNzIGxvYmJ5aXN0cyBhbmQgbW9uZXkgaW4gcG9saXRpY3MuIEhvd2V2ZXIsIEkgZG8gbm90IGFncmVlIHdpdGggeW91ciBhc3Nlc3NtZW50IHRoYXQgYm90aCBzaWRlcyBhcmUgZXF1YWxseSByZXNwb25zaWJsZSBhbmQgZXF1YWxseSBpbmNhcGFibGUgb2YgZWZmZWN0aW5nIHRoZSBjaGFuZ2Ugd2UgYm90aCBzdXBwb3J0LiBQcmVtaXVtcyByaXNlIGZvciBhIHZhcmlldHkgb2YgcmVhc29ucywgYnV0IHRoZSBBQ0Egd2FzIGRlc2lnbmVkIHRvIGN1cmIgcHJlbWl1bSBjb3N0cyB0aHJvdWdoIE1lZGljYWlkIGV4cGFuc2lvbiAodG8gYWxsb3cgdGhlIGdvdmVybm1lbnQgdG8gY292ZXIgdGhlIGhpZ2hlc3QgcmlzayBwYXRpZW50cyBiYXNlZCBvbiBwb3ZlcnR5LCBub3QgYWdlIGFuZCBkaXNhYmlsaXR5KSwgc3Vic2lkaWVzIChib3RoIHRvIHBhdGllbnRzIGFuZCB0byBpbnN1cmVycyksIGFuZCBieSBvZmZlcmluZyBhIGNvbXBldGluZyBtYXJrZXQgb3B0aW9uIHRocm91Z2ggdGhlIGZlZGVyYWwgaGVhbHRoY2FyZSBtYXJrZXRwbGFjZS4gVGhlIGZ1bmRpbmcgZm9yIHRoZSBzdWJzaWRpZXMgYW5kIE1lZGljYWlkIGV4cGFuc2lvbiB3b3VsZCBtb3N0bHkgY29tZSBmcm9tIGFkZGl0aW9uYWwgdGF4ZXMgb24gdGhlIHdlYWx0aHkgYW5kIGEgdmFyaWV0eSBvZiBzdXJjaGFyZ2VzIGFuZCBleGNpc2UgdGF4ZXMgb24gYSB2YXJpZXR5IG9mIGdvb2RzIGFuZCBzZXJ2aWNlcy4KMCBSYXRpbmcgaWRlYXMgYXJlIG1lYW50IGZvciBpc3BzIHRvIHByb3ZpZGUgY29udHJvbGxlZCBwZWVyaW5nIHBhcnRuZXJzaGlwcyB3aXRoIHNwZWNpZmljIGNvbXBhbmllcyB0byBzdG9wIGRhdGEgZmxvdyBmcm9tIGNvdW50aW5nIGFnYWluc3QgYSBjb25zdW1lciBpc3N1ZWQgZGF0YSBjYXAsIHNvbWV0aGluZyB0aGF0IEkgV0hPTExZIGJlbGlldmUgc2hvdWxkIGJlIGNvbXBsZXRlbHkgYWJvbGlzaGVkIGluIHRoaXMgY291bnRyeS4gCkluIGFuIGVuZCBvZiBBY3Rpb24gc3BvdCBsaWtlIHRoaXMgdGhlIGFic29sdXRlIGZpcnN0IHRoaW5nIHlvdSBzaG91bGQgYWx3YXlzIGFsd2F5cyB0aGluayBhYm91dCBpcyB5b3VyIHJlcXVpcmVkIGVxdWl0eS4gSW4gb3RoZXIgd29yZHMgaG93IG9mdGVuIHlvdSBuZWVkIHdpbiBhZnRlciBjYWxsaW5nIHRvIG1ha2UgdGhpcyBwcm9maXRhYmxlIGluIHRoZSBsb25nIHJ1bi4KIkl0IHdhcyBhIGNoYWxsZW5naW5nIGFzc2lnbm1lbnQsIiBzYXlzIE11cnBoeS4gIkJ1dCB3ZSBwcmVwYXJlZCBvdXJzZWx2ZXMgd2VsbC4gV2UgaGFkIHRoZSBvcHBvcnR1bml0eSB0byByZWFsbHkgZGVsdmUgaW50byB0aGUgY2hhbGxlbmdlIGFuZCB3b3JrZWQgdGhyb3VnaG91dCB0aGUgc3VtbWVyIHRvIHJlc2VhcmNoIGFuZCBjb2xsYWJvcmF0ZSBvbiBhIHNvbHV0aW9uLiIKSSBkb24gdW5kZXJzdGFuZCB0aGUgbG9naWMuIApIZWFsdGggUmVsYXRlZCBRdWFsaXR5IG9mIExpZmUgTW9kZWwKVGhlcmUgaXMgbm8gdGF4IG9uIGNhc2ggdG8gY2hpcHMuICQ2MDAgd2lsbCBnZXQgeW91ICQ2MDAuIEkgbGlrZSB0byBnZXQgYSBtaXggb2YgJDUgYW5kICQyNS4gU29tZXRpbWVzIEknbGwganVzdCBnZXQgdGhlIGZ1bGwgJDgwMCBpbiBjaGlwcyAobWl4IG9mIDUvMjUvMTAwKSB0byBzYXZlIGEgbGl0dGxlIGJpdCBvZiB0aW1lIGF0IHRoZSB0YWJsZS4KQW5kIGluIHRoaW5raW5nIGJhY2sgdGhpcyBpcyBhIGRvdWJsZSBsYXllciBjcmltZS4gCk1hcmNoaW9ubmUgc2FpZCB0aGlzIG1vbnRoIHRoYXQgRkNBJ3MgcGVyZm9ybWFuY2UgbGFzdCB5ZWFyIGNhbWUgaW4gYXQgdGhlIHRvcCBlbmQgb2YgaXRzIG93biBmb3JlY2FzdHMsIHdoaWNoIGluY2x1ZGVkIGFuIGFkanVzdGVkIG5ldCBwcm9maXQgb2YgMS4yIGJpbGxpb24gZXVyb3MgICBhIGxvbmcgd2F5IGZyb20gdGhlIDIwMTggdGFyZ2V0LgpCdXQgdG8gYW5zd2VyIHlvdXIgcXVlc3Rpb24sIEkgd291bGQgbmV2ZXIgZXZlciBhZG9wdCBhIGtpZC4gVGhhdCdzIHJlZ2FyZGxlc3MgaWYgSSB3YXMgc2luZ2xlIG9yIG1hcnJpZWQgd2l0aCBzb21lb25lIGVsc2UgaW4gdGhlIHBpY3R1cmUuIApJdCBvYnZpb3VzIHRoZXkgZG9uIGdldCBhbnkgbm90YWJsZSBaZW5rYWkgYm9vc3RzIGFueW1vcmUuLiAKTWFueSBvZiB0aGUgbWVkaWNhdGlvbnMgZ2l2ZW4gaW4gdGhlIGhvc3BpdGFsIGFsc28gY2F1c2VkIHJlZHVjZWQgdmVudGlsYXRpb24sIGFuZCBuYXJjb3RpY3MgYXJlIHRoZSB3b3JzdCBvdXQgb2YgdGhlc2UuIFNvIHlvdSBsZXNzIGxpa2VseSB0byB0YWtlIGEgZnVsbCBicmVhdGgsIGxlc3MgbGlrZWx5IHRvIHRha2UgdGhlIGFpciBpbiBkZWVwbHksIGFuZCBsZXNzIGFibGUgdG8gcHJvZHVjZSBhIGZvcmNlZnVsIGNvdWdoIHdoZW4geW91IG9uIHRoZW0uIFRoZXkgYWxzbyBmcmVxdWVudGx5IGFkbWluaXN0ZXJlZCBmb3IgYW55IHBhaW4gY29tcGxhaW50LCBhbmQgbW9zdCBhZG1pdHMgdG8gdGhlIGhvc3BpdGFsIHdpbGwgaGF2ZSBiYWQgcGFpbiBjb21wbGFpbnRzLiAKQnV0IHRoZSBpcnJlc2lzdGlibGUgYXR0cmFjdGlvbiB0byBwb2tlciBhbmQgZGVhZGx5IGNvbGxlY3RpYmxlcyBsaWtlIFRoZSBRdWVlbiBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3RvciBhcmUgaW5jcmVhc2luZyB0aGUgbnVtYmVyIG9mIHBsYXllcnMgZWFjaCBzZWNvbmQuLiAKSG93IHdvdWxkIFN0YWxpbiBoYXZlIGRlYWx0IHdpdGggdGhlIHN1Z2FyIGNyaXNpcz8gQnkgdGhlIGV4cHJvcHJpYXRpb24gb2YgdGhlIHN1Z2FyIGJhcm9ucy4gQmVyaWEsIGhlYWQgb2YgdGhlIGZlYXJlZCBLR0IsIHdvdWxkIGhhdmUga25vd24gaG93IHRvIGRlYWwgd2l0aCB0aGVtLiAKUmViZWxsaW4gZGlkIG5vdCBmZWVsIGFsbCB0aGF0IGNhbG0gd2l0aCBvbmx5IGEgc2xpZ2h0IGFkdmFudGFnZSBoZWFkaW5nIGludG8KWW91IGNhbiBzdGlsbCByZXZlYWwgdGhlIHNwb2lsZXIgaW4gdGhvc2UgY2FzZXMgYnkgY2xpY2tpbmcgb24gdGhlIHZlcnkgcmlnaHQgZWRnZSBvZiB0aGUgc3BvaWxlciAodGhlIGNsaWNrYWJsZSBhcmVhIGlzIGEgYml0IGxhcmdlciBpZiB5b3UgaGF2ZSBSRVMgYXMgaXQgYWRkcyBleHRyYSBzdHVmZiBuZXh0IHRvIHRoZSBjb21tZW50IGZhY2VzIHdpdGggdGhlIHJpZ2h0IHNldHRpbmdzIG9uKS5UaGF0IHNhaWQsIEkgcmVhbGx5IGNhbiBlbmNvdXJhZ2UgcGVvcGxlIHRvIGV4cGVjdCB0aGF0IHRvIHdvcmsgYXQgYWxsLltNXSAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxIGRheSBhZ29IaSwgeWVhaCBJIHJlbW92ZWQgdGhlIHRocmVhZCBhZnRlciBpdCBnb3QgYnJvdWdodCB1cCBpbiB0aGUgbW9kZXJhdG9yIGNoYXQgYW5kIGp1c3QgZm9yZ290IHRvIGFkZCBhIHJlYXNvbi4gCkV0aGFuIFJ1YnksIGEgc21hbGxlciBzdGFrZXMgcGxheWVyIGluIE5ldyBZb3JrIENpdHksIGhhcyByZWRvdWJsZWQgaW52b2x2ZW1lbnQgd2l0aCBQb2tlcjRMaWZlLCBhbiBvcmdhbml6YXRpb24gaGUgY28gZm91bmRlZCB0byBob3N0IGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudHMgYXMgZnVuZHJhaXNlcnMgZm9yIG90aGVyIG5vbnByb2ZpdHMuIApSRVBFUkVSIExFUyBDQVMgREUgU1lORFJPTUUgRFUgQkVCRSBTRUNPVUVTb3VzIGxhIHByc2lkZW5jZSBkZSBNLiAKSSBlbmRlZCB1cCBjaGFuZ2luZyB0aGUgcm91dGUgYSBiaXQsIGhlcmUgdGhlIG5ldyByb3V0ZSB0aGF0IEkgYW0gZ29pbmcgdG8gcm91Z2hseSBmb2xsb3cgdGhpcyBzdW1tZXIuIApJIGRvIGhhdmUgYSBkIGhhbW1lciBhbmQgYXJjbGlnaHQgYWxzbwpTbyBpdCB3YXMgYSBib3JpbmcgZ2FtZSB0byBoaWdobGlnaHQgYSBiYWQgeWVhciBmb3IgdGhlIE5GTCB3aXRoIGEgaGFsZnRpbWUgcGVyZm9ybWFuY2UgdGhhdCBwaXNzZWQgb2ZmIGEgYnVuY2ggb2YgcGVvcGxlIG9uIHRoZSBpbnRlcm5ldCBhbmQgc29tZSBkdWxsIGFzcyBjb21tZXJjaWFscyBsaXR0ZXJlZCB0aHJvdWdob3V0IHRvIHJlbWluZCBwZW9wbGUgd2h5IHRoZXkgY3V0IHRoZSBjb3JkIGluIHRoZSBmaXJzdCBwbGFjZS4gSXQgZmFpbGVkIGluIGV2ZXJ5IHNpbmdsZSB0aGluZyB0aGF0IGl0IHdhcyBzdXBwb3NlZCB0byBiZS4KT25seSBmb3VyIHN0dWRpZXMgd2VyZSBkZWVtZWQgdG8gYmUgb2YgYWRlcXVhdGUgbWV0aG9kb2xvZ2ljYWwgcmlnb3VyLiAKQ2hlY2sgdG8gc2VlIGlmIHlvdXIgc2Nob29sIGFjY2VwdHMgdGhpcyB0eXBlIG9mIGFpZCBhbmQgZmlsbCBvdXQgdGhlIEZyZWUgQXBwbGljYXRpb24gZm9yIEZlZGVyYWwgU3R1ZGVudCBBaWQgKEZBRlNBKS4gClNvIGlmIHRoZSBvZmZpY2lhbHMgZGV0ZXJtaW5lZCB0aGF0IGhlIGxpZnRlZCBoaXMgZm9vdCBiZWZvcmUgc3RhcnRpbmcgdGhlIHNob3QgYXR0ZW1wdCwgaXQgYSB0aHJlZSBwb2ludCBmaWVsZCBnb2FsLCBieSBteSByZWFkaW5nIG9mIHRoZSBydWxlcy4KQ2FuY2VsbGF0aW9uIEF0IEFueSBUaW1lIFdpdGggTm8gUmVmdW5kLiBJbiBzdWNoIGNhc2UsIHlvdXIgc3Vic2NyaXB0aW9uIHdpbGwgdGVybWluYXRlIGF0IHRoZSBlbmQgb2YgdGhlIHN1YnNjcmlwdGlvbiB0ZXJtIGZvciB3aGljaCB5b3UgaGF2ZSBwYWlkLCBhbmQgeW91IHdpbGwgbm90IHJlY2VpdmUgYW55IHJlZnVuZCBmb3IgYW55IHVudXNlZCBkYXlzIG9mIHN1Y2ggc3Vic2NyaXB0aW9uIHRlcm0uIElmIHlvdSBwdXJjaGFzZSBhIHN1YnNjcmlwdGlvbiBvbiBhbiBpbnN0YWxsYXRpb24gcGF5bWVudCBiYXNpcyAoc3VjaCBhcyB0aHJlZSBwYXJ0IHBheSksIHlvdXIgYWJpbGl0eSB0byBjYW5jZWwgeW91ciBtZW1iZXJzaGlwIGFzIGRlc2NyaWJlZCBhYm92ZSB3aWxsIGJlIGF2YWlsYWJsZSB0byB5b3Ugb25seSBvbmNlIHlvdXIgZmluYWwgaW5zdGFsbG1lbnQgcGF5bWVudCBoYXMgYmVlbiBwYWlkLiAuCkkgY2FtZSBpbnRvIHRoZSBmaW5pc2ggYW5kIGltbWVkaWF0ZWx5IHR1cm5lZCBhcm91bmQsIGVhZ2VyIHRvIGtlZXAgdGhhdCBnYXAgSSBoYWQgY3JlYXRlZC4gTXkgZmlyc3QgbGFwIHRpbWUgd2FzIDE6MTI6MjQuIAoiSSBsb3ZlZCBob3cgaXQgd2FzIHNvIHVucmVsZW50aW5nIHdpdGggYWxsIG9mIHRoZSBkaWZmZXJlbnQgY29tZWR5IGlkZWFzLiIgVGhlIGZvcm1lciBhcHBlYWxlZCB0byBoaW0gYmVjYXVzZSBvZiBKb2huIENhbmR5J3MgcGVyZm9ybWFuY2UuIApUaGVyZSBhcmUgYSB2YXJpZXR5IG9mIGRpZmZlcmVudCBjYXJkIGhhbmRzIHRoYXQgcGVvcGxlIG9mdGVuIGNob29zZSBmb3IgdGhlaXIgdGF0dG9vLiBPbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBoYW5kcyBhcmUgdGhlIHJveWFsIGZsdXNoLCB3aGljaCBpbmNsdWRlcyB0aGUgY2FyZHMgb2YgdGhlIEFjZSwgS2luZywgUXVlZW4sIEphY2ssIGFuZCAxMC4gSW4gb3JkZXIgZm9yIHRoaXMgaGFuZCB0byBiZSBhIHJveWFsIGZsdXNoLCBhbGwgb2YgdGhlIGNhcmRzIGhhdmUgdG8gYmUgZnJvbSB0aGUgc2FtZSBzdWl0LiBJbiBwb2tlciwgdGhlIHJveWFsIGZsdXNoIGlzIHRoZSBiZXN0IGhhbmQgeW91IGNhbiBoYXZlLiBUaGlzIGlzIG9uZSBvZiB0aGUgcmVhc29ucyB0aGF0IGl0IGlzIHNvIHBvcHVsYXIuIFRoZSByb3lhbCBmbHVzaCBoYW5kIHN5bWJvbGl6ZXMgcG93ZXIsIHN1Y2Nlc3MsIGFuZCB3aW5uaW5nLiBBbm90aGVyIHBvcHVsYXIgaGFuZCBpcyBmb3VyIEFjZXMuIFRoZSBBY2UgaXMgdGhlIGhpZ2hlc3QgcGxheWluZyBjYXJkIGluIHRoZSBlbnRpcmUgZGVjay4gRm91ciBhY2VzIGNhbiBiZSB1c2VkIHRvIHN5bWJvbGl6ZSBwb3dlciwgdmljdG9yeSwgb3IgZ29vZCBsdWNrLiBPdGhlciBwb3B1bGFyIGhhbmRzIGluY2x1ZGUgdGhlIGZ1bGwgaG91c2UgYW5kIHN0cmFpZ2h0LgpJIHdhZ2VyIHRoZXNlIGxpemFyZHMgYXQgbGVhc3Qgc2hhcmUgdGhlIHNhbWUgdGF4YW5vbWljIGZhbWlseS4gCkkgZG9uIHJlYWxseSBoYXZlIG11Y2ggZWxzZSB0byBzYXkgZXhjZXB0IHRoYW5rcyBhZ2FpbiwgSSBrZWVwIGRvaW5nIG1lLgpJIGZlbWFsZSBhbmQgdGhlcmUgYSBsb2NhbCBtYXNzYWdlIHBsYWNlIEkgYmVlbiBnb2luZyB0byBmb3IgYSBmZXcgeWVhcnMgICBvd25lZC9zdGFmZmVkIGJ5IGxlZ2l0aW1hdGUgbGljZW5zZWQgbWFzc2FnZSB0aGVyYXBpc3RzIGFuZCB2ZXJ5IGludm9sdmVkIHdpdGggdGhlIGxvY2FsIGNvbW11bml0eS4gCkphbWVzIGZpbmlzaGVkIHdpdGggMzEgcG9pbnRzLCBzZXZlbiByZWJvdW5kcyBhbmQgc2V2ZW4gYXNzaXN0cy4gSGlzIHN0cnVnZ2xpbmcgTGFrZXJzIHJhbGxpZWQgbGF0ZSwgYnV0IGRyb3BwZWQgdGhlaXIgZm91cnRoIHN0cmFpZ2h0IGdhbWUgaW4gYSBzZWFzb24gdGhhdCBhcHBlYXJzIHRvIGJlIGxvc3QuClR3byBwYXBlcnMgc3Vic2VxdWVudCB0byBKVVBJVEVSIGNoYWxsZW5nZWQgdGhlIG5vdGlvbiB0aGF0IHN0YXRpbnMgc2hvdWxkIGJlIHVzZWQgYXMgYSBwcmV2ZW50aXZlIHN0cmF0ZWd5LgpUaGV5IG1heSBkZWxheSBkb2luZyBzbyBpbiBhIHJ1ZGUgYXR0ZW1wdCB0byBpbmR1Y2UgYW5vdGhlciBwbGF5ZXIgdG8gc2hvdyB0aGVpciBoYW5kIGluIGltcGF0aWVuY2UsIGFuZCB0aGVuIG11Y2sgdGhlaXIgb3duIGhhbmQgaWYgaXQgaXMgbm90IGEgd2lubmVyLiBEb24ndCBkbyB0aGlzIHlvdXJzZWxmLiBTaG93IHlvdXIgaGFuZCBpbW1lZGlhdGVseSBpZiB5b3UgZ2V0IGNhbGxlZC4gCkJ1dCBkZXRhaWxzIHRoYXQgaGF2ZSBzdXJmYWNlZCBzbyBmYXIgYWJvdXQgdGhlIG9uZSB0aW1lIElSUyBhZ2VudCBhbmQgc29uIG9mIGEgbm90b3Jpb3VzIGJhbmsgcm9iYmVyLCBhcmUgY2x1ZXMsIGF0IGxlYXN0LCB0byBoaXMgbWluZHNldC4gClNhbWUgbG92ZWx5IHBlb3BsZSB3aG8gY3JlYXRlZCB0aGUgdG90YWwgbGllIHRoYXQgQUNPUk4gd2FzIG5vdCBhbiBhbnRpIHBvdmVydHkgZ3JvdXAsIGJ1dCByYXRoZXIgYSBodW1hbiB0cmFmZmlja2luZyByaW5nISB0aGUgcmVzdWx0IHdhcyB3aGF0PyB5ZWFoLCB0aGUgZGVmdW5kaW5nIG9mIEFDT1JOIGJ5IENvbmdyZXNzLCB0aGUgdmlsaWZpY2F0aW9uIG9mIHRoZSBvcmdhbml6YXRpb24gaW4gdGhlIG1haW5zdHJlYW0gbWVkaWEsIGFuZCB0aGUgbG9uZyBsYXN0aW5nIGxlc3NvbiBvbiB0aGUgcGFydCBvZiB0aGUgZmFyIHJpZ2h0IHRoYXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIGFuZCB0aGUgRGVtb2NyYXRpYyBDb25ncmVzcyBhcmUgc28gZWFzaWx5IHNjYXJlZCBpbnRvIHN1Ym1pc3Npb24gdGhhdCBhbGwgaXQgdGFrZXMgaXMgc29tZSBiYWQgdmlkZW8gYW5kIHNvbWUgcmlkaWN1bG91cyBsaWVzIHRvIGdldCB0aGVtIHRvIGNvbXBseU92ZXIgYXQgQmlnIEdvdmVybm1lbnQsIHRoZXkgbm90IGV2ZW4gYXBvbG9naXppbmcgZm9yIHRoZSAibWlzdGFrZSIgdGhleSBtYWRlIHdpdGggdGhlIHZpZGVvLiAKIldlIHRyeSBub3QgdG8gY29tcGV0ZSAuIApTbywgZG9uJ3QgbGV0IHlvdXIgc2Vuc2l0aXZlIHNraW4gcHJldmVudCB5b3UgZnJvbSBlbmpveWluZyB3aGF0IHNvbWUgY2FsbCB0aGUgdWx0aW1hdGUgaW4gcmVsYXhhdGlvbi4gVGFsayB0byB5b3VyIGRvY3RvciBvciBkZXJtYXRvbG9naXN0IHRvIGdldCBhbiBpZGVhIG9mIHdoYXQgeW91IHNob3VsZCB1c2UgYW5kIHdoYXQgeW91IHNob3VsZCBhdm9pZC4gClRlaXJlc2lhcywgSm9jYXN0YSwgdGhlIGhlcmRzbWFuLCBlYWNoIGluIHR1cm4gdHJpZXMgdG8gc3RvcCBoaW0sIGJ1dCBpbiB2YWluOiBoZSBtdXN0IHJlYWQgdGhlIGxhc3QgcmlkZGxlLCB0aGUgcmlkZGxlIG9mIGhpcyBvd24gbGlmZS4gClRoZXJlJ3MgYSBndXkgc2l0dGluZyBvcHBvc2l0ZSBtZSwgcGVyZmVjdGx5IG9yZGluYXJ5IGxvb2tpbmcgZ3V5IHdlYXJpbmcgYSBidXNpbmVzcyBzdWl0LCBjYXJyeWluZyBhIGJyaWVmY2FzZS4gCkkgaGFkIG9uZSBoZWxsIG9mIGEgZmlicm8gZmxhcmUgdXAgdGhpcyBsYXN0IHdlZWsgYW5kIEkgY2FuIGdldCBvdXQgb2YgYmVkIHRvIHN0cmV0Y2ggbXkgbXVzY2xlcy4gSSByaXBwZWQgb3V0IGFsbCBvZiBteSBzdGl0Y2hlcyBvbiBkYXkgNSB3aGljaCBteSByZWNvdmVyeSB0aW1lIGlzIHN1cHBvc2VkIHRvIGJlIGxvbmdlciBidXQgZXZlcnlvbmUgd2hvIHdhcyBnb2luZyB0byBoZWxwIG1lIHdpdGggbXkga2lkcyBkcm9wcGVkIG91dC4gV2hpbGUgSSBiZWVuIGRvd24gbXkgaHVzYmFuZCBhbmQgdGhlcmUga2lkcyBoYXZlIHRyYXNoZWQgbXkgaG91c2Ugc28gbm93IEkgaGF2ZSB0byBjbGVhbiB0aGF0IHVwLiAKU2V2ZXJhbCBvdGhlciBpbnRlcm5zIGFuZCBJIG1hZGUgc3VyZSB0byBiZSBvbiB0aGUgdGVhbSBvcHBvc2l0ZSBmcm9tIHRoZSBwcm9ncmFtIGxlYWRlci4gCkZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IGVzc2VudGlhbCBvaWxzIGFuZCBob3cgdGhleSBjYW4gaGVscCB5b3UgaW4geW91ciBkYWlseSBsaWZlLCBwbGVhc2Ugc2VlIHRoZSBpbmNsdWRlZCBsaW5rcy4gQm9va3Mgc3VjaCBhcyBUaGUgQ29tcGxldGUgQm9vayBvZiBFc3NlbnRpYWwgT2lscyBhbmQgQXJvbWF0aGVyYXB5IGJ5IFZhbGVyaWUgQW5uIFdvcndvb2QgYW5kIFRoZSBJbGx1c3RyYXRlZCBFbmN5Y2xvcGVkaWEgb2YgRXNzZW50aWFsIE9pbHM6IFRoZSBDb21wbGV0ZSBHdWlkZSB0byB0aGUgVXNlIG9mIE9pbHMgaW4gQXJvbWF0aGVyYXB5IGFuZCBhbmQgSGVyYmFsaXNtIGJ5IEp1bGlhIExhd2xlc3MgbWF5IGFsc28gYmUgaGVscGZ1bC4uIApQbGF5dGVjaCBoYXMgYmVlbiBhcm91bmQgc2luY2UgdGhlIGVhcmx5IGRheXMgb2YgdmlydHVhbCBjYXNpbm8gZ2FtYmxpbmcgYW5kIGhhcyBjcmVhdGVkIHNvbWUgZ3JlYXQgc29mdHdhcmUgdGhhdCBvZmZlcnMgZ3JhcGhpY2FsbHkgYWR2YW5jZWQgc2xvdHMgYW5kIG90aGVyIGNhc2lubyBnYW1lcy4gSXQgb2ZmZXJzIGl0cyBzb2Z0d2FyZSB0byBiaWcgYW5kIHJlcHV0YWJsZSBjYXNpbm8gZ2FtaW5nIGJyYW5kcyB3ZSBoYXZlIHBlcnNvbmFsbHkgaGFuZHBpY2tlZCBzbyB0aGF0IHlvdSBnZXQgdGhlIGJlc3Qgb2YgdGhlIGJlc3QgaW4gdGVybXMgb2Ygc2VjdXJpdHksIHF1YWxpdHkgYW5kIGdhbWluZyBwcm9kdWN0cy4gVGhlcmVmb3JlLCBzdGljayB0byB0aGUgUGxheXRlY2ggY2FzaW5vcyB3ZSByYXRlIGhpZ2hseSBhbmQgZW5qb3kgeW91ciBwcm9maXRhYmxlIGdhbWluZy4uIApJdCB0b3RhbGx5IHNvbWV0aGluZyB0byB3YXJuIGtpZHMgYWJvdXQuIFRoaXMgaXMgc29tZXRoaW5nIEkgbmV2ZXIgcmVhbGx5IGdvdCBhYm91dCB0aGUgd2hvbGUgInN0b3AgZmVhciBtb25nZXJpbmciIG1vdmVtZW50IGFnYWluc3QgdGhpbmdzIGxpa2UgdGVsbGluZyBraWRzIHRvIGJlIHdhcnkgb2Ygc3RyYW5nZXJzLiBUaGUgcmVhc29uIHRoaXMgd2FybmluZyBleGlzdHMgaXNuIGJlY2F1c2UgZXZlcnkgc3RyYW5nZXIgd2lsbCBhYmR1Y3Qga2lkcywgbm90IGV2ZW4gYSBkZWNlbnQgbWlub3JpdHkgd291bGQsIGFuZCBpdCBjZXJ0YWlubHkgaXNuIHRvIGluc3BpcmUgYSBmZWFyIGN1bHR1cmUgb3IgYW55dGhpbmcuIApSZWRTaGlydERlY295ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaGUgcmVjaXBpZW50IG9mIHRoZSAyMDE1IFJvYmVydCBMLiAKQmFyeWxhIG1vdGhlcikgZ2lmdGVkIHRoZSByaWdodCBvZiBzdXJ2aXZvcnNoaXAgYnV0IHRvIHdob20/IElmIChNci4gCkhlIG1heSBpZ25vcmUgZXZpZGVuY2Ugd2hlbiBpdCBmaXJzdCBiZWdpbnMgdG8gYXBwZWFyLCBhbmQgZXZlbiBtYWtlIGV4Y3VzZXMgZm9yIHRoZSBwZXJzb24gdG8gYXZvaWQgZmFjaW5nIHRoZSBpc3N1ZS4gClRoZXNlIGFyZSBhbGwgY29tbW9uIHN5bWJvbHMgaW4gIHRoZW1lZCB0YXR0b28gZGVzaWducy4gClNvIHdoeSB3YXMgVmFkZXIgc28gaW52ZXN0ZWQgaW4gdGhlIGNvbnN0cnVjdGlvbiBhbmQgbWFpbnRlbmFuY2Ugb2YgdGhlIERlYXRoIFN0YXI/IEJlY2F1c2UgaGUga25vd3MgT2JpIHdhbiBjYW4gaG9sZCB0aGUgaGlnaCBncm91bmQgaWYgdGhlcmUgbm8gZ3JvdW5kIGxlZnQuIApUaGlzIGlzIHZlcnkgaGFyZC4gCkkgZG9uIHRoaW5rIG1hbnkgcGVvcGxlIGdldCBhZGRpY3RlZCB0byBUb255IEhhd2tzIG9yIEZhciBDcnkuIApLZXkgcG9pbnRzVHJlYXN1cmVyIGFubm91bmNlcyB0aW1lbGluZSBmb3IgbmV3IGxpY2VuY2UgZGVhbE1MQyBSdXRoIEZvcnJlc3Qgc2F5cyBMYWJvciBpcyAibGV0dGluZyBhIGxvdCBvZiBwZW9wbGUgZG93biJXZWxmYXJlIHNlY3RvciB3YW50cyB0byBzZWUgZGV0YWlsIG9mIGxlZ2lzbGF0aW9uCkJyb3duIG9yaWdpbmFsbHkgd3JvdGUgdGhlIGJvb2sgYXMgdGhlIHRoZXNpcyBwcm9qZWN0IGZvciBoZXIgTWFzdGVyIGRlZ3JlZSBpbiBmb29kIHN0dWRpZXMgYXQgTmV3IFlvcmsgVW5pdmVyc2l0eS4gU2hlIGludGVuZGVkIGl0IHRvIGJlIGEgcmVzb3VyY2UgZm9yIEFtZXJpY2FucyB3aG8gcmVjZWl2ZSBTTkFQIGJlbmVmaXRzIFN1cHBsZW1lbnRhbCBOdXRyaXRpb24gQXNzaXN0YW5jZSBQcm9ncmFtIHdoaWNoIGlzIHRoZSBvZmZpY2lhbCBuYW1lIGZvciB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGFzc2lzdGFuY2UgcHJvZ3JhbSBvZnRlbiBrbm93biBhcyBmb29kIHN0YW1wcy4gVW5kZXIgU05BUCwgcmVjaXBpZW50cyBhcmUgZ2l2ZW4gYW4gYXZlcmFnZSBvZiAkNCBwZXIgcGVyc29uLCBwZXIgZGF5IHRvIHNwZW5kIG9uIGZvb2QuLiAKVGhlc2UgZGF5cywgdmVyeSByYXJlbHkgZG9lcyBhbnlvbmUgb2JqZWN0IHRvIHdoYXQgaXMgaGFwcGVuaW5nLiAKVGhlIG5ld3MgY2FuIGJlIHdvcnRoIHNlZWluZyBhbmQgaGVhcmluZywgbm90IGJlY29taW5nIG51bWIgdG8sIG9uY2Ugd2UgY2xvc2UgdGhlIGdhcCBiZXR3ZWVuIHdoYXQgd2Uga25vdyBhbmQgd2hhdCB3ZSBkby4gCk9mIGNvdXJzZSxnYW1ibGVycyBhcmUgdG8gc3BlY3VsYXRvcnMgd2hhdCBwb2tlciBwbGF5ZXJzIGFyZSB0byByZWFsIGVzdGF0ZSBpbnZlc3RvcnMuCkkgdGhpbmsgdGhlcmUgYW4gb2JsaWdhdGlvbiB0byBnaXZlIGJhY2ssIGVzcGVjaWFsbHkgaWYgeW91IGJlZW4gc3VjY2Vzc2Z1bCBmaW5hbmNpYWxseS4gCk1vbW1hVG9CIHUKSSByZWFkIHRoYXQgeW91ciBzbmFjayBwcmVmZXJlbmNlIChzYWx0eSB2cyBzd2VldCkgaXMgZ2VuZXRpYywgYW5kIGlmIHlvdSBzb21lb25lIHdobyBjb2RlZCB0byBwcmVmZXIgc3dlZXRzIHlvdSBtYXkgbmV2ZXIgZ2V0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UgaGFwcHkgc2tpcHBpbmcgZGVzc2VydCBmb3JldmVyLiAKQnVpbGRpbmcgb24gaXRzIGV4aXN0aW5nIGNvbW1pdG1lbnRzIGFzIHBhcnQgb2YgdGhlIFN1c3RhaW5hYmxlIFN0b2NrIEV4Y2hhbmdlIEluaXRpYXRpdmUsIE5FTyBhbm5vdW5jZWQgdHdvIG5ldyBjb21taXRtZW50cyB0aGF0IGFmZmlybSBpdHMgZGVkaWNhdGlvbiB0byBnZW5kZXIgZXF1YWxpdHkgaW4gQ2FuYWRpYW4gY2FwaXRhbCBtYXJrZXRzLiBJbiBKYW51YXJ5LCBORU8gYmVjYW1lIHRoZSBmaXJzdCBDYW5hZGlhbiBzdG9jayBleGNoYW5nZSB0byBzaWduIGEgQ0VPIFN0YXRlbWVudCBvZiBTdXBwb3J0IGZvciB0aGUgLCBhbiBpbml0aWF0aXZlIHNwZWFyaGVhZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBpbiBwYXJ0bmVyc2hpcCB3aXRoIFVOIFdvbWVuIGFuZCBVTiBHbG9iYWwgQ29tcGFjdC4gTkVPIGhhcyBhbHNvIHRvIGl0cyBsaXN0aW5ncyBtYW51YWwgdG8gZW5jb3VyYWdlIG5vbWluYXRpbmcgYW5kIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGNvbW1pdHRlZXMgb2YgTkVPIGxpc3RlZCBjb21wYW5pZXMgdG8gY29uc2lkZXIgdGhlIGRpdmVyc2l0eSBvZiB0aGUgYm9hcmQgY29tcG9zaXRpb24gd2hlbiBtYWtpbmcgcmVjb21tZW5kYXRpb25zIGZvciBuZXcgYm9hcmQgbWVtYmVycyBvciBleGVjdXRpdmUgb2ZmaWNlcnMuIENvbnNpZGVyYXRpb25zIGZvciBkaXZlcnNpdHkgb2YgdGhlIGJvYXJkIGluY2x1ZGVzIHdoZXRoZXIgdGFyZ2V0cyBoYXZlIGJlZW4gYWRvcHRlZCBmb3Igd29tZW4sIHZpc2libGUgbWlub3JpdGllcywgQWJvcmlnaW5hbCBwZW9wbGUgYW5kIHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcy4KSmUgc3VpcyBjZXBlbmRhbnQgcGFydmVudSAgZmFpcmUgbmUgc29ydGUgcXVlIGxlcyBsaWVucyBzJ291dnJlbnQgZGFucyB1bmUgbm91dmVsbGUgZmVudHJlLCBjZSBxdWkgbidlc3QgamFtYWlzIGxlIGNhcyBkYW5zIGxlIFdpa2kgcXVlIGonYWkgcHUgZnJxdWVudGVyIGRvbnQgbGUgcGx1cyBjbGJyZSBxdWUgaidhcHBlbGxlICJXaWtpcGQiLk5vdG9ucyBlbiBwYXNzYW50IHF1ZSBjZXR0ZSBlbmN5Y2xvcGRpZSBjb2xsYWJvcmF0aW9ubmlzdGUgZXN0IHVuZSBob3JyZXVyIHF1YW5kICBzYSBnZXN0aW9uLiAKV2hlbiB5b3VyIGhlYXJ0IGhlYWx0aCBnb2VzIHBhc3QgY2FzdWFsIG1vbml0b3JpbmcgYW5kIHJlcXVpcmVzIGhvc3BpdGFsIGdyYWRlIHRyYWNraW5nIHlvdSBjYW4gZGVwZW5kIG9uLCB0aGUgbmV3IEFwcGxlIFdhdGNoIFNlcmllcyA0IGlzIHRoZSBzaWRla2ljayB5b3UndmUgYmVlbiB3YWl0aW5nIGZvci4gSnVzdCByZWxlYXNlZCBpbiB0aGUgZmFsbCBvZiAyMDE4LCB0aGUgU2VyaWVzIDQgd2FzIGJsZXNzZWQgd2l0aCBudW1lcm91cyB1cGRhdGVzICBvbmUgb2YgdGhlIG1vc3QgaW1wcmVzc2l2ZSBiZWluZyBhbiBleGNsdXNpdmUgRUNHIGFwcCBmb3IgaGVhcnQgcmF0ZSBtb25pdG9yaW5nLiBBIGhhcHRpYyB0b3VjaCBkaWdpdGFsIGNyb3duIGlzIGFsc28gYW1vbmcgbmV3IGZlYXR1cmVzLCB3aGljaCBlbmFibGVzIDMwIHNlY29uZCBvbmUgdG91Y2ggaGVhcnQgcmF0ZSBtb25pdG9yaW5nIGFzIHdlbGwgYXMgZWFzaWVyIG5hdmlnYXRpb24gdGhyb3VnaCBhcHBzLiAKIE9sZGVyIG1lbiBtYXkgY2hvb3NlIHlvdW5nIHdvbWVuIGJlY2F1c2Ugb2xkZXIsIG1vcmUgbWF0dXJlIHdvbWVuIHNpbXBseSB3b24gcHV0IHVwIHdpdGggdGhlaXIgaW1tYXR1cmUgYmVoYXZpb3JzLCBvciBvdGhlciByZWQgZmxhZyBiZWhhdmlvcnMgbGlrZSBiZWluZyBjb250cm9sbGluZywgaGF2aW5nIGEgdGVtcGVyLCBldGMuIApZb3Ugd2FudCB0aGVtIHRvIHRoaW5rIHRoZXkgaGF2ZSB0aGUgYmVzdCBoYW5kIGFuZCBiZXQgYmlnIG9yIGF0IGxlYXN0IHRvIGJsdWZmIGF0IHRoZSBwb3QgYmVjYXVzZSB0aGV5IGRvbid0IHRoaW5rIHlvdSBoYXZlIGFueXRoaW5nLi4gCkVzdCBjZSBxdSdpbHMgb250IGV1IHVuIGltcGFjdCBzdXIgbW9uIHRyYXZhaWw/IE91aS4gSmUgc3VpcyBjb21tZSB1bmUgcGxhaWUgb3V2ZXJ0ZS4iLiAKSW4gdGhlIHNlY29uZCBoYWxmLCBLZWx5biBSb3dlIHNob3Qgd2lkZSBvZiB0aGUgbGVmdCBwb3N0IGZyb20ganVzdCBvdXRzaWRlIHRoZSBwZW5hbHR5IGFyZWEgaW4gdGhlIDU5dGggbWludXRlLiBJbiB0aGUgNjd0aCBtaW51dGUsIERpZWdvIEZhZ3VuZGV6IGdvdCB0aGUgYmFsbCBmcm9tIFRlYWwgQnVuYnVyeSBpbiBib3gsIHRvb2sgb24gdGhyZWUgZGVmZW5kZXJzLCBhbmQgdGhlbiBmaXJlZCBhIGxvdyBkcml2ZSB0aGF0IHJvbGxlZCBqdXN0IHdpZGUgb2YgdGhlIGZhciBwb3N0Li4gCkxlIFNpdGUgd2ViIGVzdCBwcm90IGVuIHZlcnR1IGRlIGxhIGwgc3VyIGxlIGRyb2l0IGQgZW4gdGFudCBxdWUgcmVjdWVpbCBldCBvdSBjb21waWxhdGlvbiBhdSBzZW5zIGRlcyBsb2lzIGNhbmFkaWVubmVzIGV0IFZvdXMgdm91cyBlbmdhZ2V6IHJlc3BlY3RlciBsIGRlcyBhdXRyZXMgYXZpcyBkZSBkcm9pdCBkIHJlbnNlaWduZW1lbnRzIG91IHJlc3RyaWN0aW9ucyBzdXIgb3UgZGFucyBsZSBjb250ZW51IGF1cXVlbCB2b3VzIHBvdXZleiBhY2MgcGFyIGwgZHUgU2l0ZSB3ZWIgZXQgb3UgZGVzIEZvbmN0aW9ubmFsaXQgTGEgUHJlc3NlIHZvdXMgY29uZiB1bmUgbGljZW5jZSBub24gZXhjbHVzaXZlIGV0IG5vbiB0cmFuc2YgZCBldCBkIGxlIFNpdGUgd2ViIGV0IG91IGxlcyBGb25jdGlvbm5hbGl0IHN1ciB2b3RyZSBvcmRpbmF0ZXVyIG91IGF1dHJlIGRpc3Bvc2l0aWYgdW5pcXVlbWVudCBkZXMgZmlucyBkZSByZXByIHN1ciBtb25vcG9zdGUgZXQgZGUgcmVwcm9kdWN0aW9uLCBlbiB1biBleGVtcGxhaXJlLCBwb3VyIGNvcGllIGRlIHNhdXZlZ2FyZGUgb3UgdGlyYWdlIHN1ciBwYXBpZXIsIHBlcnNvbm5lbGxlcyBldCBub24gY29tbWVyY2lhbGVzLGVuIGF1dGFudCBxdWUgdm91cyBuIG1vZGlmaWV6IHBhcyBsZSBDb250ZW51IGV0IHF1ZSB2b3VzIGNvbnNlcnZpZXogbGVzIGF2aXMgZGUgZHJvaXQgZCBMQSBNT0RJRklDQVRJT04sIExBIFJFUFJPRFVDVElPTiwgTEEgRElTVFJJQlVUSU9OLCBMQSBUUkFOU01JU1NJT04sIExBIERJRkZVU0lPTiwgTEEgUkVQUiBMQSBSRVBST0RVQ1RJT04sIExBIE1JU0UgRU4gUiBMQSBDT01NRVJDSUFMSVNBVElPTiwgTEEgUFVCTElDQVRJT04sIExBIENPTkNFU1NJT04gREUgTElDRU5DRSwgTCBQVUJMSVFVRSwgTEUgVCBMQSBDUiBEIEQgTCBTVVIgSU5URVJORVQsIExBIFZFTlRFIE9VIFRPVVRFIEVYUExPSVRBVElPTiBEVSBTSVRFIFdFQiwgRFUgQ09OVEVOVSBPVSBERVMgRk9OQ1RJT05OQUxJVCBpbmNsdWFudCwgbm90YW1tZW50LCBwYXIgbGEgY29uc2VydmF0aW9uIGRhbnMgdW4gc2VydmV1ciBjYWNoZSwgbGUgY2FkcmFnZSBvdSBhdXRyZXMgbW95ZW5zIHNpbWlsYWlyZXMsIFNPTlQgSU5URVJESVRTLi4gCkZvcnR1bmF0ZWx5LCB5b3UgY2FuIG5vdyBidXkgc21hbGwgc2l6ZWQgYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIuIApISUdIIFNQRUVELiAKSSBnbyB0byB0YWtlIGEgZHJpbmsgb2YgY29mZmVlIGFuZCBkaXNjb3ZlciBtb3JlIGRlYWQgZmxpZXMuIEkgdGVsbCBteSBzaXN0ZXIgdGhhdCB0aGUgZmxpZXMgaGF0ZSBtZSBhbmQgYXJlIHRyeWluZyB0byB0YWtlIGF3YXkgdGhlIG9uZSBlbmpveW1lbnQgSSBoYXZlIGxlZnQgaW4gbGlmZSwgY29mZmVlIGRyaW5raW5nLiBTaGUsIG9mIGNvdXJzZSwgbGF1Z2hzIGFuZCBzYXlzIHRoYXQgaXQgaXMgdGhlIENJQSBidWdnaW5nIG15IGNvZmZlZS4gCkkgbm90IHN1cmUgd2h5IGJ1dCBJIGZpbmQgaXQgcmVhbGx5IGludGVyZXN0aW5nIHRoYXQgQmlsbCB3YXMgb25lIG9mIHRoZSBmaXJzdCBtZW1iZXJzIG1lbWJlcnMgb2YgdGhlIGdhbmcgYnV0IGl0IGRvZXNuIGdldCBicm91Z2h0IHVwIG11Y2gsIGlmIGF0IGFsbC4gClN3YXBwaW5nIGJ1dHRvbnMgb24gc29tZXRoaW5nIGlzbiB1c3VhbGx5IHRoYXQgbXVjaCB3b3JrLCBlaXRoZXIsIHRoZXkgYSBsb3QgZWFzaWVyIHRvIHNldyBvbiB0aGFuIHRob3NlIHNuYXAgZmFzdGVuZXJzIGFuZCB5b3UgY2FuIHNlZSB3aGVyZSB0aGUgYnV0dG9ucyB1c2VkIHRvIGJlLiBKdXN0IGJyaW5nIHRoZSBzaGlydCB0byB0aGUgc2hvcCBzbyB5b3UgY2FuIGJ1eSB0aGUgcmlnaHQgc2l6ZSBidXR0b24gOikuIApPdXIgdGVsZXBhdGggbWFkZSB0aGUgY29ycmVjdCBwbGF5IGJ1dCBzdGlsbCBtYXkgbG9zZSBkdWUgdG8gbHVjay4gVGhlcmUgaXMgdG9vIG11Y2ggdmFyaWFuY2UgaW4gcG9rZXIgdG8gZ3VhcmFudGVlIGEgd2luLiAKTGVhdmUgaXQgYXQgaG9tZTogSXQgd2lsbCBzdGlsbCBiZSBpbGxlZ2FsIHRvIGNhcnJ5IGNhbm5hYmlzIGFjcm9zcyBDYW5hZGEncyBpbnRlcm5hdGlvbmFsIGJvcmRlcnMuIApUaGUgYmlnZ2VzdCByZWFzb24gaXQgZ29pbmcgdG8gdGFrZSBtZSBhd2hpbGUgdG8gcHJvY2VzcyBldmVyeW9uZSB3aXRoZHJhd2FscyAobm90IGEgc21hbGwgbnVtYmVyKSwgaXMgYmVjYXVzZSBJIGRvbiBob2xkIGl0IGFsbCBpbiBidGMuIFRoYW5rIEdvZC4gCklQIGFuZCBCb29tdG93biBhcmUgb24gdGhlIGJhY2sgYmF5IG9uIEJheXZpZXcgQXZlbnVlLiAKSXQgaXMgYSBncmVhdCB0b29sIGFuZCBJIGhhdmUgbmVnbGVjdGVkIGl0LiAKSSBub3QgdGhlIHBlcnNvbiB5b3UgcmVzcG9uZGluZyB0byBhYm92ZSBidXQgaSBsb3ZlIHlvdXIgcGFzc2lvbiBhbmQgeW91ciByZWFzb25pbmcuIEkgaGF2ZSBubyBjbHVlIGFib3V0IHRoZSBmaW5hbmNpYWxzIGFuZCB0aGUgbW9uZXkgYnV0IGZyb20gYSBjaGFyYWN0ZXIgc3RhbmRwb2ludCBpIGp1c3QgbmV2ZXIgbGlrZWQgbWFubnkgYW5kIHByb2JhYmx5IG5ldmVyIHdpbGwuIFdhdGNoaW5nIGhpbSBvbiB0aGUgZG9kZ2VycyBmb3IgdGhlaXIgcG9zdHNlYXNvbiBydW4gd2FzIGRpc2d1c3RpbmcgbGlzdGVuaW5nIHRvIGhpbSB0YWxrIGFib3V0IHdhbnRpbmcgdGhlIG1vbmV5IGFuZCBiYXJlbHkgY2FyaW5nIGFib3V0IGhpcyB0ZWFtbWF0ZXMgdGhhdCBoZSB3aXRoLi4gCkt1cnogZGFyYXVmIGJlZ2FubiBzaWUgc2ljaCBha3RpdiBpbiBkZXIgZmZlbnRsaWNoa2VpdCBmciBkZW4gS2xpbWFzY2h1dHogZWluenVzZXR6ZW4uIEdlZ2VuYmVyIFRoZSBOZXcgWW9ya2VyIGVya2xydGUgc2llOiBJY2ggc2VoZSBkaWUgV2VsdCBldHdhcyBhbmRlcnMsIGF1cyBlaW5lciBhbmRlcmVuIFBlcnNwZWt0aXZlLiAKQmF0aGluZywgdG9vLCB3aGlsZSB0aGUgd291bmQgaXMgbm90IHlldCBjbGVhbiwgaXMgb25lIG9mIHRoZSB3b3JzdCB0aGluZ3MgdG8gZG87IGZvciB0aGlzIG1ha2VzIHRoZSB3b3VuZCBib3RoIHdldCBhbmQgZGlydHksIGFuZCB0aGVuIHRoZXJlIGlzIGEgdGVuZGVuY3kgZm9yIGdhbmdyZW5lIHRvIG9jY3VyLjEwCkludGVyaW9yIGRlc2lnbmVyIFN5ZG5leSBDYXJsYXcgc2F5cyBzaGUncyBsb29raW5nIGZvcndhcmQgdG8gcHJlc2VudGluZyBhdCB0aGUgQkMgSG9tZSArIEdhcmRlbiBTaG93LCB3aGljaCBydW5zIEZlYi4KSSB0aGluayBpdCBpcyBmYWlyIHRvIGFzc2VydCB0aGF0IGNhbmNlciBpcyBpbmNyZWFzaW5nIGluIHRoZSBicmVlZCwgYWx0aG91Z2gsIGFkbWl0dGVkbHksIHRoZXJlIGFyZSB2ZXJ5IGZldyB0aGluZ3MgdGhhdCBhY3R1YWxseSBzdHVkeSB0aGUgc3ViamVjdCBhdCBhbGwuCk9oIHdvdywgdGhhbmtzIGZvciB0aGUgcmVzcG9uc2UgMGN0b3B1cyEKQWxzbywgdGhpcyBwb3N0IGlzbiB0aGUgcmVhc29uIHRoZSBGR0MgaGF0ZXMgdXMuIFRoZXkgZG9uIG5lZWQgYW4gZXhjdXNlLiBUaGV5IHdpbGwgbGl0ZXJhbGx5IGNpcmNsZSBqZXJrIGFueSBjcml0aWNpc20gb2YgdGhlbSwgdHJ1ZSBvciBmYWxzZSwgYXMgcHJvb2YgdGhhdCB3ZSB0b3hpYywgd2hpbGUgcmVmdXNpbmcgdG8gaG9sZCB0aGVtc2VsdmVzIGFjY291bnRhYmxlIGZvciB0aGVpciBvd24gdG94aWNpdHkuIApQUklERSBXRUVLRU5EIEF1Zy4gNSBhbmQgQXVnLiAKSSB3YXMgcGx1bmdlZCBpbnRvIGEgdmVyeSBkZWVwIGRlcHJlc3Npb24uIEkgbWlzc2VkIGhpbSwgSSBsb3ZlZCBoaW0sIGFuZCBJIGhhZCBwbGFubmVkIG9uIG1hcnJ5aW5nIGhpbS4gQWZ0ZXIgc2l4IG1vbnRocyBvZiBoaW0gcHJvbWlzaW5nIHRoYXQgaGUgd291bGQgYmUgYmFjayBzb29uIGFuZCBtYWtpbmcgbWUgZmVlbCBsaWtlIHRoaXMgd2FzIHNvbWVob3cgbXkgZmF1bHQsIEkgYnJva2UgdXAgd2l0aCBoaW0uIApUaGUgbWlzYmVoYXZpb3Igb2YgQ29uZ3Jlc3MgaW4gcGFzc2luZyBtb3JlIEFic3RpbmVuY2UgT25seSBlZCBpcyBsaWtlIHR3byB0ZWVucywgZ3JvcGluZyBpbiB0aGUgZGFyaywgd3JhY2tlZCB3aXRoIGd1aWx0LCBhbmQga2luZGEgZm9yZ2V0dGluZyB0byBwdXQgYSBjb25kb20gb24gaXQuIEFuZCBub3cgd2UgdGhlIHRheHBheWVycyBhcmUgc3R1Y2sgZm9vdGluZyB0aGUgYmlsbCB3aGlsZSBvdXIgY2hpbGRyZW4gcGF5IHRoZSBwcmljZSBvZiBiZWluZyBtaXNlZHVjYXRlZCBhYm91dCBzZXguCllvdSBoYXZlIG15IHJlc3BlY3QuIApJIGFtIG5ldyB0byBib3hpbmcgYW5kIHRyeWluZyB0byBsZWFybi4gCkZvcmVjYXN0ZXJzIHBsYXllZCBwb2tlciB3aGlsZSBVdHRhcmFraGFuZCBkcm93bmVkCkluIDIwMTQsIHdoZW4gVmlzaGFsIFNpa2thIHRvb2sgb3ZlciBhcyBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBvZiBJbmZvc3lzLCBJbmRpYSdzIHNlY29uZCBsYXJnZXN0IGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgc2VydmljZXMgZmlybSB3aXRoIGFubnVhbCByZXZlbnVlcyBvZiAkMTAgYmlsbGlvbiwgdGhlIGNvbXBhbnkgd2FzIGdyYXBwbGluZyB3aXRoIGNoYWxsZW5nZXMgb24gbWFueSBmcm9udHMuIEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGFuZCBhdXRvbWF0aW9uIHdlcmUgZWRnaW5nIG91dCBJVCBvdXRzb3VyY2luZyBtb2RlbHMsIHB1dHRpbmcgcHJlc3N1cmUgb24gdGhlIGVudGlyZSBpbmR1c3RyeS4gSW50ZXJuYWxseSwgU2lra2EgZGlzY292ZXJlZCB0aGF0IHdoaWxlIEluZm9zeXMgc2NvcmVkIGhpZ2ggb24gcXVhbGl0eSwgcHJvZmVzc2lvbmFsaXNtIGFuZCBkZWxpdmVyeSBleGNlbGxlbmNlLCBjbGllbnRzIGRpZCBub3QgcGVyY2VpdmUgaXQgYXMgYmVpbmcgcHJvYWN0aXZlIGFuZCBpbm5vdmF0aXZlLCBhbmQgaXQgbGFja2VkIHN0cmF0ZWdpYyByZWxldmFuY2UuCkFzIGNhcmluZyBsb3ZlZCBvbmVzIHdhbnRpbmcgdG8gaGVscCB0aGUgTmF0aW9uYWwgaGVhbHRoIGNhcmUgY3Jpc2lzLCB3ZSBuZWVkIHRvIGJlIGEgcGFydCBvZiB0aGUgc29sdXRpb24uIEltcGxlbWVudGluZyBiYWxhbmNlIGV4ZXJjaXNlIGFuZCBmYWxsIHByZXZlbnRpb24gY29uZGl0aW9uaW5nIHByb2dyYW1zIHdpbGwgc2F2ZSB1cyBtb25leSBhbmQga2VlcCB1cyBoZWFsdGhpZXIgZm9yIHRoZSBsb25nIGhhdWwuCldhdGVyIFBvbG8gVGVhbSBkZXZlbG9waW5nIHRoaXMgeWVhcj9Eci4gU2Nocm9lZGVyOiBTaW5jZSBKYW51YXJ5IDIwMTIsIHdlIGhhdmUgYmVlbiB0cmFpbmluZyBmdWxsIHRpbWUuIApZb3UgY2FuIGtub3cgd2hpY2ggb25lcyB3b24gcmFuayB5b3UgYmFzZWQgb24gYSBmYWlsZWQgZWxlY3RpdmUsIHNvIGl0IHNob3VsZCBub3QgYWZmZWN0IHRoZSB3YXkgeW91IGJ1aWxkIHlvdXIgUmFuayBPcmRlciBMaXN0LiAKWSdhbGwgYXJlIHJpZ2h0LCBhbmQgdGhhdCBhIGdyZWF0IHF1b3RlLiBJIHRoaW5rIGluIG1hbnkgY2FzZXMgaXQgZ29lcyB3ZWxsIGJleW9uZCBqdXN0IG1vbmV5LiAKSG93ZXZlciwgdHlwaWNhbCBmb3IgdGhpcyB0cmlwLCBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgd2Ugd2VyZSBibGlzc2Z1bGx5IGhhcHB5ISBUaGVyZSBpcyBzb21ldGhpbmcgYWJvdXQgdGhlIHZpYmUgb2YgTmljYXJhZ3VhLCBhbmQgaGF2aW5nIHNwZW50IGEgZGF5IGdldHRpbmcgdGFuIGFuZCBzYWx0eSB0aGF0IGRvZXMgYSBib2R5IGdvb2QuIApPZmZlcmluZyB0byBjb21lIG92ZXIgZm9yIGEgY3VwIG9mIGNvZmZlZSBvciB0byBnZXQgdG9nZXRoZXIganVzdCB0byB0YWxrIGNhbiBiZSBvbmUgb2YgdGhlIGJlc3Qgd2F5cyB0byBoZWxwIHlvdXIgZnJpZW5kIGdldCBvdXQgb2YgaGlzL2hlciBhdXRpc20gYnViYmxlIGFuZCBjb21iYXQgdGhlIGlzb2xhdGlvbi4uIAoiV2hpbGUgdGhlIGNvbmNlcHQgaXMgZ29vZCwgdGhlIGV4ZWN1dGlvbiBpcyBzdHJldGNoZWQgYmV5b25kIGEgcG9pbnQgdGhhdCBkb2VzIG5vdCBsZWF2ZSBpdCBzbyBhcHBlYWxpbmcuIFdoaWxlIHRoZSBjZW50cmFsIGlkZWEgaXMgcGVyaGFwcyBhYm91dCB0ZXN0aW5nIHRoZSBkZXBlbmRhYmlsaXR5IG9mIGZyaWVuZHMsIGl0IGdldHMgZnVsZmlsbGVkIHdoZW4gdGhlIGZyaWVuZHMgYXJyaXZlIGF0IDQgYW0uIApUaGUgY2FtZXJhcyB1c2Ugb2JqZWN0IHJlY29nbml0aW9uIGFsZ29yaXRobXMgdG8gaWRlbnRpZnkgdGhlIHR5cGVzIG9mIGZvb2QgcGxhY2VkIGluIHRoZSBwbGF0ZXMgc2VjdGlvbnMgYW5kIHRoZW4gc2VhcmNoZXMgYW4gb25saW5lIGRhdGFiYXNlIHRvIGdyYWIgY2Fsb3JpZSBhbmQgbnV0cml0aW9uIGRhdGEuIEVtYmVkZGVkIGxvYWQgc2Vuc29ycyBlbmFibGUgdGhlIHBsYXRlIHRvIHdlaWdoIHRoZSBmb29kIHRvbyBhbmQgd2lsbCBzZW5kIGFsbCB0aGUgZGF0YSB0byBhbiBhY2NvbXBhbnlpbmcgYXBwLiAKQWxzbyBWaWV3ZWQgQ29tcGFyaXNvbiBvZiBOZXVyb3N1cmdlb25zIHRvIE9ydGhvcGVkaWMgU3VyZ2VvbnMgRG9jdG9yJ3MgRXRoaWNhbCBDb2RlIG9mIENvbmR1Y3QgVGhlIERpc2FkdmFudGFnZXMgb2YgQmVpbmcgYSBHeW5lY29sb2dpc3QgV2hhdCBLaW5kIG9mIFBlcnNvbmFsIFNraWxscyBNaWdodCBhIFBzeWNoaWF0cmlzdCBOZWVkPyBXaGF0IERvZXMgYW4gSW50ZXJuaXN0IERvPyBXaGF0IEFyZSB0aGUgU2tpbGxzIEFiaWxpdGllcyBvZiBhIFBvZGlhdHJpc3Q/IFdoYXQgSXMgYSBHSSBEb2N0b3I/ClJ1bW15IGFuZCBUZWVuIFBhdHRpIG9uIHRoZSBEaXdhbGkgY2FyZApJIHVuZGVyc3RhbmQgeW91ciBjb25jZXJucywgYnV0IEkgdGhpbmsgeW91IGFyZSBtaXNyZXByZXNlbnRpbmcgd2hhdCBoYXBwZW5lZC4gCigzKSBPbiB0aGUgb3RoZXIgc2lkZSwgQkIgd2l0aCBUNCwgbG90cyBvZiBsaW1wcywgc21hbGwgYmxpbmQgY29tcGxldGVzLCBJIGNoZWNrLiBGbG9wIFRUNCwgbmV2ZXIgZ2V0dGluZyBtb25leSBvdXQgb2YgdGhpcyBwb3QsIGNoZWNrLiBUdXJuIDMsIG5vdyB0aGVyZSBhIGZsdXNoIGRyYXcsIHNvIEkgYmV0LiBTQiByYWlzZXMsIEkgcmVyYWlzZSwgaGUgc2hvdmVzLCBJIGNhbGwsIGhlIGhhcyBUMyBhbmQgbG9zZXMuIEhlIGhhZCBqdXN0IHNhdCBkb3duIHRoYXQgaGFuZCwgcG9vciBiYXN0YXJkLiBWaWxsYWluIGlzIGFuIG9sZCBBc2lhbiBtYW4gYmV0d2VlbiA3MCBhbmQgOTAgeWVhcnMgb2xkLiBIYXNuIHNwb2tlbiBhbnkgRW5nbGlzaCByZWFsbHkgb3RoZXIgdGhhbiBicm9rZW4gc2VudGVuY2VzLiBMaWtlcyB0byBnYW1ibGUgb2J2LiBBbnl3YXlzIEkgaGF2ZSA4OTEwUSB3aXRoIHRoZSBRIGFuZCA4IGJlaW5nIGNsdWJzIGluIGxhdGUgcG9zaXRpb24uIEVmZmVjdGl2ZSBzdGFjayBpcyBtZSB3aXRoIGFib3V0IDM3MDAuIFByZSBmbG9wIGEgcmVnIHJhaXNlcyB0byA2MCwgSSBjYWxsIGFuZCB0d28gb3RoZXJzIGluY2x1ZGluZyB2aWxsYWluIGNhbGwuIEZsb3AgaXMgNiA3IDkgdHdvIGNsdWJzIGFuZCBvbmUgaGVhcnQgc28gd2UgZmxvcCB0aGUgbnV0cyB3aXRoIGEgZ29vZCByZWRyYXcuIE9sZCBtYW4gc25hcCBwb3RzIGl0LiBGb2xkcyB0byBtZSBhbmQgSSBzZWUgbm8gcmVhc29uIG5vdCB0byByZSBwb3Qgc2luY2UgdGhpcyBndXkgaGFzIGJlZW4gd2lsZCBhbGwgbmlnaHQgc28gSSByZSBwb3Qgd2UgZ2V0IGl0IGFsbCBpbiBmb3IgMzcwMGlzaCwgaGUgaGFzIG1lIGNvdmVyZWQuIFR1cm4gaXMgdGhlIDIgb2YgaGVhcnRzLiBSaXZlciBpcyB0aGUgYWNlcyBvZiBoZWFydHMuIFZpbGxhaW4gdHVybnMgb3ZlciBoaXMgaGFuZCBzYWlkIGhlIGZsb3BwZWQgdGhlIHN0cmFpZ2h0IGFzIHdlbGwuIEhpcyBleGFjdCBoYW5kIHdhcyA5IDEwIEsgMyB3aXRoIHRoZSBLMyBvZiBoZWFydHMuIEhlIHRha2VzIGEgY2xvc2VyIGxvb2sgYXQgaGlzIGhhbmQgYW5kIHJlYWxpc2VzIGhlIG1pc3JlYWQgaXQgYW5kIHN0YXJ0cyBsYXVnaGluZy4gSGUgdGhvdWdodCB0aGUgOSB3YXMgYW4gOCBzb21laG93LiBUaGUgZGVhbGVyIHRoZW4gdGVsbHMgaGltIHdpbnMgd2l0aCB0aGUgYmFja2Rvb3IgbnV0cy4gU28gSSBsb3NlIGEgN2sgcG90IHRvIGEgZnVja2luZyBvbGQgZnVjayB3aG8gbWlzcmVhZCBoaXMgaGFuZC4gRm9yIG1lLCB0aGUgd29yc2UgYmVhdHMgYXJlIHRoZSByZXN1bHQgb2YgbWFueSBzbWFsbCBvciBsYXJnZSBzZXRiYWNrcyBjdWxtaW5hdGluZyBpbiB0aGUgb25lIHRoYXQgYnJlYWtzIHRoZSBjYW1lbCBiYWNrLgpNdXNjbGVzIGhhdmUgc3RyZXRjaCByZWNlcHRvcnMgdGhhdCBsaXZlIGluIHRoZSB0ZW5kb25zLiBXaGVuIGEgbXVzY2xlIGlzIHN0cmV0Y2hlZCB0b28gZmFyIHRvbyBmYXN0LCB0aG9zZSByZWNlcHRvcnMgY2F1c2UgdGhlIG11c2NsZSB0byBjb250cmFjdCBpbiBvcmRlciB0byBwcm90ZWN0IHRoZSBtdXNjbGUgZnJvbSB0ZWFyaW5nLiAKQW5vdGhlciBleHRyZW1lbHkgcG9wdWxhciBvbmUgaXMgTGlmZSBpcyBTdHJhbmdlLiAKSSB3ZW50IGJ5IG15c2VsZiBpbnRvIHRoYXQgYmxvY2ssIHRoZXJlIHdhcyBhIGNvcnJpZG9yIG9mZiB0aGUgbWFpbiBoYWxsIGxlYWRpbmcgYXJvdW5kIGEgY29ybmVyIGFuZCB0aGVuIHlvdSBlbmNvdW50ZXJlZCB0aGVzZSBjZWxscy4gV2hlbiBJIHR1cm5lZCBhcm91bmQgdG8gd2FsayBiYWNrIGludG8gdGhlIG1haW4gaGFsbCwgSSB3YXMgc3RpbGwgYWxvbmUgYW5kIGdvdCB0aGlzIGVlcmllIGZlZWxpbmcgbGlrZSBJIGJlZW4gdHJhbnNwb3J0ZWQgYmFjayBpbnRvIHRoYXQgdGltZS4gT3ZlcndoZWxtaW5nIGZlZWxpbmcgb2YgZGVzcGFpci4uIApQb2tlciBpcyB3aWRlbHkgcGxheWVkIGluIHRob3NlIE9yZWdvbiBjYXNpbm9zIGJ1dCB0aGUgd2lkZXIgb25saW5lIHBsYXRmb3JtIGlzIGRlbmllZCB0byB3b3VsZCBiZSBwbGF5ZXJzIGFuZCB0aGUgc2FtZSBhcHBsaWVkIHRvIG90aGVyIGNsYXNzaWMgZ2FtZXMgc3VjaCBhcyBibGFja2phY2sgYW5kIHJvdWxldHRlLiAKVGhlIGludGVydmlldyB3aWxsIGFsc28gZ28gaW50byBtb3JlIHNlcmlvdXMgdG9waWNzIGluY2x1ZGluZyBJdmV5J3MgY3VycmVudCBsZWdhbCBzaXR1YXRpb24gd2l0aCB0aGUgQm9yZ2F0YSBIb3RlbCBDYXNpbm8gU3BhIGluIEF0bGFudGljIENpdHkuIApPZiBjb3Vyc2UsIGlmIHlvdSdyZSBsb29raW5nIHRvIHJ1ZmZsZSBmZWF0aGVycyBpbiB5b3VyIGxvY2FsIHNvY2NlciBjb21tdW5pdHksIGZsYWlsaW5nIHlvdXIgYXJtcyB3aGlsZSBoYXZpbmcgYSBjb250ZW50aW91cyBkZWJhdGUgYWJvdXQgdGhlIHJvbGVzIG9mIGRldmVsb3BtZW50IGFjYWRlbWllcywgY2x1YiB0ZWFtcyBhbmQgc3R1ZGVudCBhdGhsZXRlcyBpcyBhIGdvb2QgcGxhY2UgdG8gc3RhcnQuCllvdSB3YW50IHRvIGxpdmUgdG9nZXRoZXIsIGZpbmUsIGJ1dCBtYWtlIHRoYXQgY2hvaWNlIGFzIGFkdWx0cyBhbmQgZG8gbm90IGluZG9jdHJpbmF0ZSBpbmZhbnRzIHdpdGggdGhlIGlkZWEgdGhhdCB0aGlzIGlzIG5vcm1hbC4uIApPbmUgb2YgdGhlIGNvb2xlc3QgdGhpbmdzIGFib3V0IGJlaW5nIGFuIE5HUyBFeHBsb3JlciB0byBtZSBpcyBteSBmZWxsb3cgRXhwbG9yZXJzLiBUaGVzZSBhcmUgYW1hemluZyBwZW9wbGUgZG9pbmcgaW5jcmVkaWJsZSB3b3JrIGluIGEgaHVnZSBhcnJheSBvZiBmaWVsZHMuIFRoZXkncmUgcGhvdG9ncmFwaGVycywgZmlsbW1ha2Vycywgc2NpZW50aXN0cywgZGFuY2VycywgYXJ0aXN0cywgdGVhY2hlcnMsIGV0Yy4gV2hhdCB1bml0ZXMgdGhlbS91cyBpcyBwYXNzaW9uIGEgZGVlcCBwYXNzaW9uIHRvIHRha2Ugb3VyIHdvcmsgZnVydGhlciBldmVyeSBkYXksIHRvIGtlZXAgZ2V0dGluZyBvdXQgYmVkIGVhY2ggbW9ybmluZyBhbmQgd29ya2luZyBhdCBpdCBldmVuIGluIHRoZSBmYWNlIG9mIGh1Z2Ugb2JzdGFjbGVzLiBJIGNhbid0IHRlbGwgeW91IGhvdyBtYW55IHRpbWVzIEkgZ2V0IHVwLCBjcnVpc2UgdGhyb3VnaCB0aGUgaG9ycmlibGUgaGF0ZSBtYWlsIHRoYXQgY29tZXMgaW50byBteSBlbWFpbCwgb3IgbG9vayBhdCBteSBzdHVkZW50IGxvYW5zIGFuZCB3b25kZXIgaWYgSSBzaG91bGQgcXVpdCBkb2luZyBmaWVsZHdvcmsgKHdoaWNoIGRvZXMgbm90IHBheSkgYW5kIGdldCBhIHJlYWwgOSA1IGpvYiwgb3IgbWlzcyBhbm90aGVyIGZyaWVuZCBjZWxlYnJhdGlvbiBiZWNhdXNlIEknbSBvbiBhIHBsYW5lIHNvbWV3aGVyZSBnb2luZyB0byB0ZWFjaCBzb21lb25lIGFib3V0IGNsaW1hdGUgY2hhbmdlIHRoaXMgaXMgYWxsIGhhcmQgc3R1ZmYuIEJ1dCBJIGtlZXAgZG9pbmcgaXQsIGJlY2F1c2UgSSBiZWxpZXZlIGluIHRoZSB3b3JrIEkgZG8uIEFuZCBzbyBkbyBteSBmZWxsb3cgTkdTIGV4cGxvcmVycy4gQW5kLCBob25lc3RseSwgc28gZG8geW91LgpBIGJpdCBkaXNhcHBvaW50ZWQgaW4gR3JlZyByZXR1cm4uIEkgbGlrZWQgdGhlIHBpY3R1cmUgTWFyY28gcGFpbnRlZCAgIHJlYWxseSBoYXBweSBhdCBFbW9yeSwgbWFkbHkgaW4gbG92ZS4gSSB0aGluayBHcmVnIGNvdWxkIGhhdmUgcmV0dXJuZWQgYSBsaXR0bGUgbW9yZSBtYXR1cmUsIGhhdmluZyBoYWQgYSByZWFsbHkgZ3JlYXQgcm9tYW5jZSBhdCBFbW9yeSB0aGF0IGhhZCB0byBlbmQgKG1heWJlIHRoZSBnaXJsIHdlbnQgYmFjayB0byBGcmFuY2Ugb3Igc29tZXRoaW5nKSB0aGF0IHRhdWdodCBoaW0gaGUgY291bGQgbW92ZSBvbi4gVGhhdCB3b3VsZG4gZWxpbWluYXRlIGhpbSByZW5ld2luZyB0aGluZ3Mgd2l0aCBSZWJlY2NhLiBUaGUgc2hvdyB0b2xkIHVzIGhlIHdhcyBhIFdIT0xFIE5FVyBHVVkgYW5kIHRoZSByZWNhc3Qgd2FzIHN1cHBvc2VkIHRvIGVtcGhhc2l6ZSB0aGF0LCBidXQgaGUgaW1tZWRpYXRlbHkgYmFpbGVkIG9uIHRoZSByZXVuaW9uLCB0b2xkIHVzIGhpcyBFbW9yeSByb21hbmNlIHdhc24gYXMgc3Ryb25nIGFzIGhpcyBmZWVsaW5ncyBmb3IgUmViZWNjYSwgYW5kIHdhcyByaWdodCBiYWNrIHRvIFNxdWFyZSBPbmUuIERpc2FwcG9pbnRpbmcsIGFuZCBtb3ZlZCB0b28gZmFzdC4gSSBleHBlY3RlZCBhIGxpdHRsZSBtb3JlIGZyb20gaGltLgpNY2h0ZSBtYW4gdHJvdHpkZW0gZWluIGJpc3NjaGVuIEZhcmJlIHJlaW5icmluZ2VuLCBkYW5uIGtubnRlIG1hbiBlaW4gcGFhciBUcm9wZmVuIFNhbmRkb3JuZnJ1Y2h0ZmxlaXNjaGwgb2RlciBLYXJvdGlubCB2ZXJ3ZW5kZW4uIApCZWdpbm5lcnMgY2xhc3NlcyBzdGFydCBvbiBUaHVyc2RheSBTZXB0ZW1iZXIgMTEgYXQgMTBhbSBpbiBGbGFubmVyeSBIb3RlbCwgRHVibGluIFJvYWQsIGFuZCBhdCBSYWZ0ZXJ5J3MgUmVzdCwgS2lsY29sZ2FuLCBhdCA3LjMwcG0uLiAKSG93ZXZlciwgd2UgbXVzdCBtYWtlIHN1cmUgdGhhdCB0aGUgcG9rZXIgdGFibGUgY2FuIHdpdGhzdGFuZCB0aGUgYWJ1c2UgaXQgd291bGQgYmUgZWFzaWx5IGdldHRpbmcuIApJIGhlbHBlZCBtYWtlIEhhaXRpIGFuZCBDdWJhIGEgZGVjZW50IHBsYWNlIGZvciB0aGUgTmF0aW9uYWwgQ2l0eSBCYW5rIGJveXMgdG8gY29sbGVjdCByZXZlbnVlcyBpbi4gSSBoZWxwZWQgaW4gdGhlIHJhcGluZyBvZiBoYWxmIGEgZG96ZW4gQ2VudHJhbCBBbWVyaWNhbiByZXB1YmxpY3MgZm9yIHRoZSBiZW5lZml0IG9mIFdhbGwgU3RyZWV0LiBJIGhlbHBlZCBwdXJpZnkgTmljYXJhZ3VhIGZvciB0aGUgSW50ZXJuYXRpb25hbCBCYW5raW5nIEhvdXNlIG9mIEJyb3duIEJyb3RoZXJzIGluIDE5MDIgMTkxMi4gCkFyc2VuYWwgYXJlIHB1dHRpbmcgb3V0IGEgZGVjZW50IGRlZmVuc2UgdnMgQnJlbnRmb3JkLiBUaGVpciB5b3VuZyBndW5zIGNhbiBwcm9kdWNlIGdvYWxzIGZvciBzdXJlLiBOa2V0aWFoLCBJd29iaSBhbmQgTWFpdGxhbmQgTmlsZXMgYXJlIHRoZSBmcm9udCAzLCBhIGxvdCBvZiBwYWNlIG9uIHRoZXNlIGJveXMgd2l0aCBodW5nZXIgdG8gbWF0Y2guIApBbm90aGVyIHdheSB0byBkbyBpdCBpcyBqdXN0IHRocm93IGEgbGl0dGxlIHNraW4gaW4gdGhlIGdhbWUgYW5kIHNlZSBob3cgaXQgZ29lcy4gTmV2ZXIgaW52ZXN0IG1vcmUgdGhhbiB5b3UgY2FuIGFmZm9yZCB0byBsb3NlLgpUaGUgbG9hbiB3b3JkcyBvZiBDaGluZXNlIG9yaWdpbiB3aWxsIGdlbmVyYWxseSBzb3VuZCBsaWtlIENhbnRvbmVzZS4gVGhhdCBiZWNhdXNlIENhbnRvbmVzZSBoYXBwZW5zIHRvIHJldGFpbiBhIGxvdCBvZiB0aGUgc3lsbGFibGVzIGZyb20gTWlkZGxlIENoaW5lc2UgdGhhdCBNYW5kYXJpbiBoYXMgbG9zdC4gCkkgbm90IHNheWluZyBvcmRlcmluZyB3YXRlciBzaG91bGQgYmUgYSBodW1pbGlhdGluZyBleHBlcmllbmNlLCBidXQgY2xlYXJseSB0aGUgcGF0cm9ucyB3aWxsIGNvbnN1bWUgbGVzcyBwYWlkIGJldmVyYWdlcyBpZiB0aGV5IGNhbiBxdWVuY2ggdGhlaXIgdGhpcnN0IHdpdGggZnJlZSB3YXRlci4gSXQganVzdCBhIGJ1c2luZXNzIGNvbnNpZGVyYXRpb24gaW4gdGhlIGVuZCAod2hpY2ggeW91IGRvbiBuZWNlc3NhcmlseSBoYXZlIHRvIGNhcmUgYWJvdXQgYXMgYSBiYXJ0ZW5kZXIpIHdoaWNoIGVzdGFibGlzaG1lbnRzIHdpbGwgd2FudCB0byBlc3RhYmxpc2ggYXMgImN1bHR1cmUiLgpUaGUgY2l0eSB3YXMgcHVibGljLCBtYXNjdWxpbmUsIGRpcnR5IGFuZCBkYW5nZXJvdXMuIApCdXQgUm9vbSBaZXJvIGlzIG5vIG9yZGluYXJ5IHJvb20uIEl0IGJlbG9uZ3MgdG8gYW4gaWRlYSB0aGF0IGFsc28gY2FycmllcyBhIHZlcnkgd2VpZ2h0eSBhZ29ueS9lY3N0YXN5IGFzc29jaWF0aW9uLiAKQWJlciB3ZWlsIGVyIHNvIGd1dCBpbiBkaWUgZXJ6aGx0ZSBHZXNjaGljaHRlIHBhc3N0ZSwgaGF0IGVyIHNpY2ggZW50c2NobG9zc2VuIGlobiBlaW56dWJhdWVuLmhubGljaGUgQmVnZWJlbmhlaXRlbiBnaWJ0IGVzIGluIG5haGV6dSBhbGxlbiAiRG9rdW1lbnRhdGlvbmVuIiBIZXJ6b2dzLCBkZXJlbiBHZWdlbnN0YW5kIGlobSBwZXJzbmxpY2ggbmFoZSBsaWVndCB1bmQvb2RlciBpbiBkZW5lbiBlciBwZXJzbmxpY2ggYWxzIFByb3RhZ29uaXN0IGF1ZnRhdWNodC4gSGVyem9nIHplaWd0IG5pY2h0IG51ciBpcmdlbmRlaW4gVGhlbWEsIHNvbmRlcm4gc3RpbGlzaWVydCBzaWNoIChnZXdvbGx0KSBhdWNoIGltbWVyIHNlbGJzdCBtaXQuIEljaCBmaW5kZSBkYXMgbmljaHQgdmVyd2VyZmxpY2gsIG1hbiBtdSBlcyBudXIgd2lzc2VuIHVuZCBkYXJmIGViZW4gc2VpbmUgRmlsbWUgbmljaHQgYWxzIFpldWduaXNzZSBlaW5lciBvYmpla3RpdmVuIFJlYWxpdHQgc2VoZW4uV2FydW0gcmVpdGUgaWNoIGRhcmF1ZiBydW0/IFdlaWwgV2FsdGVyIFNheGVyLCBQcm9kdWt0aW9uc2xlaXRlciB2aWVsZXIgRmlsbWUgSGVyem9ncyB1bmQgZGVyamVuaWdlLCBkZXIgS2luc2tpIGluIGRlbSBiZXJobXRlbiBDbGlwIGhhdCB3aXNzZW4gbGFzc2VuLCBkYSBlciBkZW4gU2NoZWlmcmEgbmljaHQgZXNzZW4gbXNzZSwga2xpcHAgdW5kIGtsYXIgZ2VzYWd0IGhhdCwgZGEgZGFzIFZlcmhsdG5pcyB6d2lzY2hlbiBIZXJ6b2cgdW5kIEtpbnNraSwgc28gd2llIGVzIGluICJNZWluIGxpZWJzdGVyIEZlaW5kIiBkYXJnZXN0ZWxsdCB3dXJkZSwgbmljaHQgZGVyIFJlYWxpdHQgZW50c3ByYWNoLCBzb25kZXJuLCBkYSBzaWNoIEhlcnpvZyBpbiBTemVuZSBnZXNldHp0IGhhdC4gCkJsb25kZSBoYWlyc3R5bGVzIGxvb2sgZ3JlYXQgd2l0aCBhYnNvbHV0ZSBwb2tlciBzdHJhaWdodCBoYWlyIGFuZCBwYXJ0aW5ncyBjYW4gYnJpbmcgYWJvdXQgYSBkaWZmZXJlbnQgbG9vay4gCkZ1bmRpbmcgaXQgdHJ1bHkgaXMgYXMgZWFzeSBhcyB0cmFuc2ZlcnJpbmcgZnVuZHMgaW50byB5b3VyIGFjY291bnQuIApLaW0gYWxzbyBwb3N0ZWQgYSB0aHJvd2JhY2sgcGljIG9mIHRoZSBvcmlnaW5hbCBjb3VwbGUsIHByb3Zpbmcgc2hlIGFuZCBKb25hdGhhbiBnb3QgdGhlIGxvb2sgc3BvdCBvbi4KZmluZCBNZWRpdGVycmFuZWFuIGNvbWZvcnQgZm9vZCBhbmQgb25lIG9mIE1pZHRvd24gR2xvYmFsJ3MgYmVzdCBidWRnZXQKTm90IE9QIGJ1dCBhbHNvIHByZXR0eSBub29iLCBJIHBsYXllZCBhIGZldyBtb250aHMgYWdvIHdoZW4geW91IHN0YXJ0ZWQgaW4gdGhlIGJpZ2dlciBsYWRpbmcgc2hpcCB3aXRoIHdheSBtb3JlIHN0dWZmLiBOb3cgSSBzdGFydGVkIGFnYWluIGJ1dCBhZnRlciByZXN0YXJ0aW5nIHF1aXRlIGEgZmV3IHRpbWUgSSBuZXZlciBiZWVuIGFibGUgdG8gZmluZCBhbnkgSXJvbiBhbnl3aGVyZSBuZWFyIG15IGRyb3AgcG9kLCBvciByZWFsbHkgbXVjaCBlbHNlIGZvciB0aGF0IG1hdHRlci4gSSBnZXQgbGFzdCB0aW1lIEkgaGFkIGEgbGFyZ2UgZ3JpZCBPcmUgRGV0ZWN0b3IgYnV0IHRoZXJlIGRvbiBldmVuIHNlZW0gdG8gYmUgdGhvc2UgZGFyayBwYXRjaGVzIG9uIHRoZSBzdXJmYWNlIHRoYXQgaW5kaWNhdGUgb3JlLiAKSnVzdCBiZWNhdXNlIEknbSBxdWlldCBhcm91bmQgc3RyYW5nZXJzIG9yIGEgYml0IGluc2VjdXJlIGFib3V0IG15IGFwcGVhcmFuY2UgaXQgZG9lc24ndCBtZWFuIEkgZGVzZXJ2ZSB0byBiZSBzaW5nbGUuIFlldCBwZW9wbGUgb24gUmVkZGl0IHRlbGwgbWVuIHRoYXQgdGhleSBuZWVkIHRvIGJlIGFib3ZlIGF2ZXJhZ2UgaW4gbWFueSBhc3BlY3RzIGJlZm9yZSBmaW5kaW5nIGEgbWF0ZS4gCklzdCBBcnRpa2VsIHNjaHJlaWJlbiBlaW4ga3JlYXRpdmVyIFByb3plc3M/IFdlbm4gZHUgQnV6emZlZWQgb2RlciBXU0ogbGllc3QsIGhhc3QgZHUgbWl0IFNpY2hlcmhlaXQgc2Nob24gZWluZW4gdm9uIEFJIGdlc2NocmllYmVuZW4gQXJ0aWtlbCBnZWxlc2VuLCBvaG5lIGVzIHVuYmVkaW5ndCB6dSBtZXJrZW4uCkl0IGlzIGJhbm5lZCBpbiBJbmRpYSBieSBhIGxhdyBmaXJzdCBlbmFjdGVkIGluIHRoZSAxOXRoIGNlbnR1cnksIGV4Y2VwdCBpbiBHb2EsIERhbWFuIGFuZCBTaWtraW0uLiAKV2Ugd2l0bmVzc2luZyBpbiByZWFsIHRpbWUgYSBuZXcgaG9sb2NhdXN0LiAKSSB3YXMgcmVhbGx5IGJ1bW1lZC4gTEVTU09OIDEgRmVsbG93IE5ld2JpZXM6IElmIHlvdSBhcmUgaW52ZXN0aW5nLCBkb24ndCBnZXQgZW1vdGlvbmFsIGFib3V0IGEgcHJvcGVydHkuIApNeSBjb25zcGlyYWN5IGlzIHRoYXQgdGhlcmUgaXMgYSBhZ2VuZGEgdGhhdCBhZ2VuZGEgY2FuIGJlIGEgYmxpbmQgZXllIG9yIGEgaGVscCBpbiBtb3ZpbmcgdGhlIHN0dWZmIGluLiAKVGhlIEJhbGwgYXMgYSBCZW5jaDogQW55IGV4ZXJjaXNlIHRoYXQgeW91IHBlcmZvcm0gb24gYSBiZW5jaCBjYW4gYmUgcGVyZm9ybWVkIG9uIGEgYmFsbCwgYWx0aG91Z2ggc29tZSB3aWxsIGJlIG1vcmUgZGlmZmljdWx0IHRoYW4gb3RoZXJzLiBJZiB1c2luZyB3ZWlnaHRzLCBzdGFydCB3aXRoIHdlaWdodHMgdGhhdCBhcmUgbXVjaCBsaWdodGVyIHRoYW4gdGhlIHdlaWdodHMgeW91IHVzZSBvbiBhIGJlbmNoLiBUaGluayBvZiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHVzaW5nIGEgYmFyIGFuZCB1c2luZyBkdW1iYmVsbHMuIApObywgYXQgbGVhc3Qgbm90IHdoZW4gaXQgY29tZXMgdG8gdGhlIHRlY2hub2xvZ3kuIFNHIDEgd2FzIHZlcnkgY2xlYXIgYW5kIGNvbnNpc3RlbnQgd2l0aCBhY3F1aXJpbmcgYW5kIGltcGxlbWVudGluZyBhbGllbiB0ZWNobm9sb2d5LiBGb3IgZXhhbXBsZSwgaHVtYW5pdHkgZ29lcyBmcm9tIGp1c3QgaGF2aW5nIG9uZSBzdGFyZ2F0ZSB0byBhbiBpbnRlcmdhbGFjdGljIGdhdGUgYnJpZGdlIGFuZCBhIGZsZWV0IG9mIGludGVyc3RlbGxhciBiYXR0bGVjcnVpc2VycyBhbmQgc3BhY2UgZmlnaHRlcnMuIApBdCAzNSUgSSBnZXR0aW5nIGFsbW9zdCBleGFjdGx5IHRoZSByaWdodCBwb3Qgb2RkcywgYnV0IGF0IDI1JSBJIG5vdCByZWFsbHkgZ2V0dGluZyB0aGUgcmlnaHQgb2RkcyB0byBjYWxsLi4gClRoaXMgc3VicmVkZGl0IGlzIG5vdCBhIGNyb3NzIHNlY3Rpb24gb2YgdGhlIGF2ZXJhZ2UgcG9wdWxhdGlvbi4gCkluIGEgdmVyeSByZWFsIHNlbnNlLCBpdCBpcyB2ZXJ5IG11Y2ggbGlrZSB0YXN0ZSBvciBzbWVsbCwgaW4gdGhhdCB0aGUgY2VsbHMgb2YgeW91ciBpbW11bmUgc3lzdGVtIGZvbGxvdyBjaGVtaWNhbCBncmFkaWVudHMgYW5kIHNpZ25hbHMgdG8gZGV0ZWN0IGFuZCBsb2NhdGUgaW52YWRlcnMuIApUaGV5IG5ldmVyIHRvdWNoZWQgdGhlIGNhcmRzLCBidXQgdGhleSB3b24gbWlsbGlvbnMuLiAKRmlzaCBvaWwgd2l0aCBhbnRpb3hpZGFudHMgZm9yIHdvbWVuCk1vb24ncyBydW4gb2YgZ29vZCBjYXJkcyBtYXkgaGF2ZSB1bm5lcnZlZCBzb21lIGF0IHRoZSB0YWJsZS4gQmxvZ2dlcnMgcmVwb3J0ZWQgYmFkIGJsb29kIGFmdGVyIHRoZSBsb2dnZXIgZWxpbWluYXRlZCBCZWdsZWl0ZXIsIHdobyBzZWVtZWQgdG8gYmUgYSBtYXJrZWQgbWFuIGF0IHRoZSB0YWJsZSBvZiBuaW5lIHRoZSB3YXkgaGlzIHJhaXNlcyB3ZXJlIGNvbnNpc3RlbnRseSBtZXQgd2l0aCBiaWcgcmVyYWlzZXMgdGhhdCBwcm9tcHRlZCBoaW0gdG8gZm9sZC4gQnV0IEJlZ2xlaXRlciBzYXlzIGhlIGhhcyBubyBpc3N1ZXMgd2l0aCBNb29uOiAiSGUncyBhIGdlbnRsZW1lbiBhbmQgdmVyeSBnb29kIHBva2VyIHBsYXllci4gSSBzaG9vayBoaXMgaGFuZCBiZWZvcmUgdGhlIGZsb3Agb24gdGhlIGxhc3QgaGFuZCBhbmQgYWdhaW4gYWZ0ZXIgaGUga25vY2tlZCBtZSBvdXQuIiBZb3UgbmV2ZXIga25vdzogdGhleSBtYXkgbWVldCBhZ2FpbiBuZXh0IHllYXIuClRoZSBwbGF5ZXIgd2hvIHdpbnMgZG9lcyBzbyBiZWNhdXNlIG9mIGx1Y2ssIG5vdCBiZWNhdXNlIG9mIHNraWxsLi4gCkkgc3RhcnRlZCByZWFsaXNpbmcgdGhpbmdzIGZvdXIgeWVhcnMgYWdvLiAKTVlUSCBOTy4gQnV0IGhlIGxvb2tlZCB3aGl0ZXIgdGhhbiBoZSBoYWQgYXBwZWFyZWQgaW4gTWFueSBmYW5zIGFzc3VtZWQgdGhhdCBKYWNrc29uLCB3aG8gaGFkIGJlY29tZSBhIHN0YXIgdGhyb3VnaCBNb3Rvd24gUmVjb3JkcyBpbiB0aGUgZWFybHkgd2FzIHR1cm5pbmcgaGlzIGJhY2sgb24gaGlzIHJhY2UgdG8gY29udGludWUgaGlzIHF1ZXN0IGZvciBjcm9zc292ZXIgc3VjY2VzcyBhbmQgYWRvcmF0aW9uIGZyb20gYSB3aGl0ZSBhdWRpZW5jZS4gR3JlZyBUYXRlLCBhbiBBZnJpY2FuIEFtZXJpY2FuIGN1bHR1cmFsIGNyaXRpYyBmb3IgdGhlIFZpbGxhZ2UgVm9pY2UgYW5kIG90aGVyIHB1YmxpY2F0aW9ucywgY2FsbGVkIGhpbSBOZWdybyBnb25lIG1hZCBiZWNhdXNlIGhpcyBtaXJyb3IgcmVwb3J0cyB0aGF0IGhpcyBmYWNlIGRvZXMgbm90IGNvbmZvcm0gdG8gdGhlIE5vcmRpYyBpZGVhbC4gSmFja3NvbiBpbnNpc3RlZCBvdGhlcndpc2UsIGFuZCB0aGVyZSBoYXMgbmV2ZXIgYmVlbiBhbnkgZXZpZGVuY2UgdG8gY29udHJhZGljdCBoaW0uIEhlIHRvbGQgV2luZnJleSBpbiB0aGUgMTk5MyBpbnRlcnZpZXcgdGhhdCBoZSBsaWdodGVuZWQgaGlzIHNraW4gd2l0aCBtYWtldXAgYmVjYXVzZSBvZiB2aXRpbGlnbywgYSBkaXNlYXNlIHRoYXQgZ2F2ZSBoaW0gYmxvdGNoeSwgbGlnaHQgYW5kIGRhcmsgcGF0Y2hlcywgYW5kIGFuIGF1dG9wc3kgdmVyaWZpZWQgdGhlIGRpYWdub3NpcyBhZnRlciBoZSBkaWVkIGluIEp1bmUgMjAwOS4gSGlzIGJyb3RoZXIgSmVybWFpbmUgSmFja3NvbiBhbHNvIGFja25vd2xlZGdlZCB0aGUgY29uZGl0aW9uIGFzIHZpdGlsaWdvIGFuZCB3cm90ZSwgbG9va3MgbGlrZSBhIHdoaXRlIG1hbiBzcGxhc2hlZCB3aXRoIGNvZmZlZS4gQXMgZm9yIE1pY2hhZWwgSmFja3NvbiBoaW1zZWxmLCBoZSB0b2xkIFdpbmZyZXk6IGEgYmxhY2sgQW1lcmljYW4sIEkgcHJvdWQgdG8gYmUgYSBibGFjayBBbWVyaWNhbiwgSSBhbSBwcm91ZCBvZiBteSByYWNlLiAuIC4gLiBJIGhhdmUgYSBsb3Qgb2YgcHJpZGUgaW4gd2hvIEkgYW0sIGFuZCBkaWduaXR5LiA0Ok1pY2hhZWwgSmFja3NvbiBkaWQgbm90IGludmVudCB0aGUgbW9vbndhbGsKMTEgWWVhciBDbHViVGhlIGtleSBpbnNpZ2h0IGhlcmUgaXMgdGhhdCBtb3N0IHBlb3BsZSBkZXNpZ24gbW9kZXJhdGlvbiB0b29scyBmb3IgaW5kaXZpZHVhbHMgdG8gdXNlLiAKVVMgYmFua3Mgc3RhcnRlZCBkaXN0YW5jaW5nIHRoZW1zZWx2ZXMgZnJvbSB0aGUgaW5kdXN0cnkgYW5kIGl0IGdvdCB0byBiZSBkaWZmaWN1bHQgdG8gY2FzaCBvdXQgeW91ciBtb25leSBvciBtb3ZlIG1vbmV5IGludG8geW91ciBvbmxpbmUgYWNjb3VudHMuIE9ubHkgc2VyaW91cyBwbGF5ZXJzIHN0dWNrIGFyb3VuZCBmb3IgdGhlIG1vc3QgcGFydC4gCkFub3RoZXIgdGhpbmcgSSBkbyBhbmQgc3VnZ2VzdCB5b3UgZG8gd2l0aCBjaGlsZHJlbiBhbmQgZW5zdXJlIHRoZXkga25vdyB0aGF0IHRoZXkgZGVzZXJ2ZSBub3RoaW5nLiBUaGVyZSB3aWxsIGNvbWUgYSB0aW1lIHdoZW4gdGhleSBFWFBFQ1Qgc29tZXRoaW5nIHRvIGJlIGRvbmUgb3Igc29tZXRoaW5nIHRvIGJlIGdpdmVuLiAKTm93IEknbSBhbHdheXMgd2VhcmluZyBwYW50cyBhbmQgYSBicmEgYW5kIGl0IHN1Y2tlZCBzb21lIG9mIHRoZSBmdW4gb3V0LiBJIGNvdWxkIGRvIHdoYXQgSSB3YW50ZWQuIEkgd2Fzbid0IGZpZ2h0aW5nIGZvciB0aGUgdHYgb3IgY2Vuc29yaW5nIHdoYXQgSSB3YXMgd2F0Y2hpbmcgYmVjYXVzZSB0aGVyZSdzIGFuIGVpZ2h0IHllYXIgb2xkIHJ1bm5pbmcgYXJvdW5kLiAKU2xpbWFuaSBpcyB2ZXJ5IGdvb2QgYXQgbWFraW5nIHlvdSBmZWVsIHZlcnkgYmFkLgpJZiBJIHdhcyB0byB0aGluayBvZiBCZXJzZXJrZXIgQ2FsbCBpbiBBcnRpZmFjdCwgaXQgd291bGQgYmUgbW9yZSBsaWtlICJHaXZlIGEgcmVkIGhlcm8gK1ggYXJtb3IgYW5kIHRhdW50IGl0cyBlbmVteSBuZWlnaGJvcnMiLCB3aGljaCBhbHNvIGZpdHMgd2l0aCByZWQgY29sb3IgaWRlbnRpdHkuIApFdmVudHVhbGx5LCB0aGF0IEhvbW8gU2FwaWVuIHdvdWxkIGJlZ2luIHRvIHF1ZXN0aW9uIHdoeSBoZSBpcyBidXJkZW5lZCB3aXRoIGNhcmluZyBmb3IgYmVpbmdzIHdobyBjYW5ub3QgZmVuZCBmb3IgdGhlbXNlbHZlcyBhZGVxdWF0ZWx5IGVub3VnaCB0byBzdXJ2aXZlIHdpdGhvdXQgaGltLiAKVGhlc2UgaW5jbHVkZSB2aWV3ZWQgYXMgYmVpbmcgdGhlIG5lZ2F0aXZlcyB3aXRoaW4gdGhlIHNlcmlvdXMgY2FzaW5vLiAKSSBhbHNvIHN0YXJ0ZWQgd2F0Y2hpbmcgQXNoaXRhIG5vIE5hZGphIHdpdGggc29tZSBwZW9wbGUuIEl0IGEgMjAwMyBhbmltZSB3aXRoIHNvbWUgZXBpc29kZXMgZGlyZWN0ZWQgYnkgTWFtb3J1IEhvc2FkYS4gTWFuLCBpdCBoYXMgYmVlbiBwcmV0dHkgZ29vZCBzbyBmYXIuIApGb3IgbW9zdCB0aGUgZWdvIGlzIGZlZCBieSBkZWZlY2F0aW9uIGFuZCBkZWZpbGVtZW50IG9mIG90aGVyIHNwaXJpdC4gVGhlIGFwcGVhbCBmb3IgdGhlIHVwcGVyIGVjaGVsb25zIGlzIGxldmVyYWdlLCBhbmQgZW50ZXJ0YWlubWVudCBpdCB0aGF0IHNpbXBsZS4gQ2FiYWxzIHVzZSBlbW90aW9uYWwgdHJhdW1hIGZvciB0aGUgcHVycG9zZSBvZiByaXR1YWwsIGVtcG93ZXJpbmcgaWRvbHMsIGFuZCBjb250cm9sLiAKUGFpbiByZWR1Y3Rpb24gICBXaGVuIGFuIGF0aGxldGUgYmVjb21lcyBpbmp1cmVkIHRoZXkgd2lsbCB1c3VhbGx5IGV4cGVyaWVuY2UgYSBsb3Qgb2YgcGFpbi4gV2hlbiB0aGlzIHBhaW4gb2NjdXJzLCBtZXNzYWdlcyBhcmUgc2VudCB0byB0aGUgYnJhaW4gdGhyb3VnaCAnYWZmZXJlbnQgbmVydmVzJyAgICdzZW5zb3J5IG5lcnZlcyB0aGF0IGhhdmUgcmVjZXB0b3JzIGF0IHRoZSBza2luIGFuZCBqb2ludHMnLiAKTm90IHNheWluZyB0aGUgc2lsZW5jZSBkb2VzbiBzdWNrLCBJIHdvdWxkIHRoaW5rIGl0IHdvdWxkLCBidXQgaWYgeW91IHJlYWxseSBhcmUgc28gY29uc2lkZXJhdGUsIGNvbnNpZGVyIHdoYXQgbWF5IGJlIHRoZSByZWFzb24gZm9yIGEgd29tYW4gb3IgY291cGxlIG5vdCByZXNwb25kaW5nLiAKVGhlIG1hbiBkZXZlbG9wZWQgc3ltcHRvbXMgYW5kIGFza2VkIGZvciBtZWRpY2FsIGFzc2lzdGFuY2UsIGJ1dCBvZmZpY2lhbHMgYXQgdGhlIEltbWlncmF0aW9uIEJ1cmVhdSBvbmx5IHRvb2sgaGltIHRvIGEgc2VwYXJhdGUgcm9vbSwgc2F5aW5nIHRoZXkgd291bGQgIm1vbml0b3IiIGhpcyBjb25kaXRpb24uIFRoZSBtYW4gYmFuZ2VkIG9uIHRoZSB3YWxscyBvZiB0aGUgcm9vbSBpbiB0aGUgZWFybHkgaG91cnMgb2YgdGhlIG5leHQgZGF5IGR1ZSB0byB0aGUgcGFpbiBidXQgb2ZmaWNpYWxzIHRvbGQgaGltIHRvIHN0b3AsIHNheWluZyBoZSB3b3VsZCBiZSBhbHJpZ2h0LiBIZSB3YXMgc3Vic2VxdWVudGx5IHRha2VuIHRvIGEgaG9zcGl0YWwgaW4gVG9reW8gYW5kIHVuZGVyd2VudCBhbiBlbWVyZ2VuY3kgb3BlcmF0aW9uLi4gCkFsbCBvZiB0aGlzIGlzIGp1c3Qgc28gdW5uZWNlc3NhcnkuIApPYnZpb3VzbHksIGlmIHlvdXIgbWFuIGNoaWxkIHRoaW5rcyBoaXMgaWRlYSBvZiBhIG1lYWwgaXMgYSBib3cgb2YgRG9yaXRvcyB3aXRoIGEgZ2xhc3Mgb2YgTW9uc3RlciBlbmVyZ3kgZHJpbmssIHRoZW4gaG9uZXksIHdhdmUgdGhvc2UgcmVkIGZsYWdzIGFuZCBnZXQgdGhlIGhlbGwgYXdheSBmcm9tIHRoYXQgcmVsYXRpb25zaGlwISBUaGlzIGNhbiBiZSB3YWl0cmVzc2VzLCByYW5kb20gcGVvcGxlLCBjYXNoaWVycywgb3IgcmVhbGx5IGFueW9uZSB3aG8gaXMgc3VwcG9zZWQgdG8gYmUgZG9pbmcgYSBzZXJ2aWNlIGZvciBoaW0uIApNYXliZSB0aGV5IGRpZG4gbWFrZSBpdCB3b21lbiBvbmx5IGZyb20gdGhlIHN0YXJ0IGJlY2F1c2UgdGhleSBkaWRuIGV4cGVjdCB3b21lbiB0byBqb2luIGFzIHBva2VyIGlzIGdlbmVyYWxseSBwbGF5ZWQgbW9yZSBieSBtZW4gYW5kIHRob3VnaHQgcG9rZXIgbmlnaHQgd2FzIGdlbmVyYWxseSBhIG1lbiBuaWdodCBvdXQgYW5kIHRoYXQgd2hhdCBhdCBsZWFzdCBzb21lIG9mIHRoZW0gZXhwZWN0ZWQuIE9uY2UgdGhleSBmaW5kIG91dCB3b21lbiBhcmUgZ29pbmcgdG8gYmUgdGhlcmUgc29tZSBndXlzIG1heSBkZWNpZGUgdGhleSBkb24gd2FudCB0byBnbywgaWYgdGhpcyBpcyBwYXJ0IG9mIHRoZSBjb3JlIGdyb3VwIHRoZW4gaXQgY291bGQga2lsbCBwb2tlciBuaWdodC4KVGhlIG1vcmUgeW91IHJlYWQgdGhlIG1vcmUgaXQgc2VlbXMgbGlrZSB0aGUgR2F0ZXMgYXJlIHdvcmtpbmcgb24gYSBwdWJsaWNpdHkgdG91ciBkZWFkbGluZSBmb3IgYW1hemluZyByZXN1bHRzIGFuZCB3ZXJlIHBpc3NlZCBhdCB0aGUgY29tcGFueSBmb3IgZmFpbGluZyB0byBtZWV0IHRoZWlyIGRlYWRsaW5lLiAKQXVzc2kgbHVpIGRvbm5hIHQgb24gbGUgbm9tIGQgYyAgYW5nZSBnYXJkaWVuIC4gCkFkIHVuIGNlcnRvIHB1bnRvIHNlbnRpcmFpIGRpcmUgZSBwYXJ0aXIgdW5hIGZhc2UgZGkgc2lsZW56aW8uIApUaGF0ICQ5LDA0MCBwZXIgeWVhciBuZWVkcyB0byBnbyB0b3dhcmRzIGJ1aWxkaW5nIHRoYXQgc2F2aW5ncyBhY2NvdW50LCB3aGljaCBvYnZpb3VzbHkgd2lsbCB0YWtlIGEgYml0IGF0IHRoYXQgcGFjZS4uIApTb29uIGFmdGVyIGhpcyBvcmRpbmF0aW9uIGluIDE5OTIsIFdlbGJ5IHdhcyBtYWRlIGEgY2Fub24gYXQgQ292ZW50cnkgQ2F0aGVkcmFsIGFuZCB0aGUgY28gZGlyZWN0b3IgZm9yIGludGVybmF0aW9uYWwgbWluaXN0cnkgYXQgdGhlIEludGVybmF0aW9uYWwgQ2VudGVyIGZvciBSZWNvbmNpbGlhdGlvbi4gSGUgd2FzIGFwcG9pbnRlZCBkZWFuIG9mIHRoZSBjYXRoZWRyYWwgaW4gTGl2ZXJwb29sIGluIDIwMDcsIGFuZCBpbiAyMDExIGNvbnNlY3JhdGVkIGFzIGJpc2hvcCBvZiBEdXJoYW0sIHRoZSBOby4gNCBwb3NpdGlvbiB3aXRoaW4gdGhlIENodXJjaCBvZiBFbmdsYW5kLi4gCkFsd2F5cyBhIGdvb2QgaWRlYSB0byBzdGFydCBvZmYgd2l0aCBhIGZpZ2h0ZXIuIFRoZXkgaGF2ZSB0aGUgYmVzdCBiYXNlIGF0dGFjayBib251cyAoaW4gTldOKSBhbmQgdGhleSBnZXQgdGhlIG1vc3Qgd2VhcG9uIHByb2RpY2llbmNpZXMgaW4gQkcuIApUbyB0aGUgcmVzZWFyY2hlcnMnIHN1cnByaXNlLCB0aGVpciBhbmFseXNlcyBvZiB0aGUgZGF0YSBhbGwgZGVtb25zdHJhdGVkIHRoYXQgdGhlIHN0dWRlbnRzJyBtb29kIHdhcyB1bnJlbGF0ZWQgdG8gdGhlIHdlYXRoZXIuIApCdXQsIHdlIGJhY2sgb24gdHJhY2sgYW5kIHJlYWR5IHRvIHJvY2sgYW5kIHJvbGwuIApXaGF0IGkgbWVhbnQgd2FzIHRoYXQgdGhlIGV4dHJlbWUgaWRlb2xvZ3kgb2YgdGhlIG1hdXRlIGFuZCB0aGUgYWJ1IHNheWFmIGdyb3VwcywgdGhlaXIgdmFyaWFudHMgYW5kIHN5bXBhdGhpc2Vycywgc3Byb3V0ZWQgZnJvbSB0aGUgc3VubmkgZnVuZGFtZW50YWxpc3QgaXNsYW0gc2F1ZGkgYXJhYmlhIGhhcyBhZHZvY2F0ZWQgYW5kIHN1cHBvcnRlZCBpbiBteSBjb3VudHJ5LCB0aHJ1IHRoZSBmdW5kaW5nIG9mIG1hZHJhc3NhcyBhbmQgbW9zcXVlcyBhbmQgdHJhaW5pbmcgb2YgaW1hbXMuIApTbyBiYWNrIHRvIDIyIFJvd2xhbmQgICB0aGlzIHJlYWxseSBpcyB0aGUgcmlnaHQgdHlwZSBvZiBjYW1wYWlnbiBmb3IgdGhlIHNlbGxlciwgYXMgdGhlIGJ1eWVyIGlzIGdvaW5nIHRvIGJlIGEgc3BlY2lhbCBvbmUuIE9mIGNvdXJzZSB0aGUgc2VsbGVyIGFsc28ga25vd3MgaGUgb3Igc2hlIGlzIGludm9sdmVkIGluIHRoZSBzYW1lIGdhbWUgYW5kIHRoZXJlIGFyZSBzb21lIHJpc2tzIGZvciBhIHNlbGxlciBpbiBhbiBFT0kgcHJvY2VzcyAgIHdoZXJlIHRoZSBydWxlcyBjYW4gYmUgdmFndWUgYW5kIHRoZSB3YXkgZm9yd2FyZCBhIGxpdHRsZSB1bmNsZWFyLiBTb21ldGltZXMgYnV5ZXJzIGRyb3Agb3V0IG9yIGp1c3QgZG9uJ3Qgc3RhcnQgdGhlIGVuZ2FnZW1lbnQgcHJvY2VzcyBhcyB0aGVpciBmZWFyIG9mIHVuY2VydGFpbnR5IGlzIGdyZWF0ZXIgdGhhbiB0aGVpciBsb3ZlIG9mIHRoZSBob21lLgpJJ3ZlIGdvdCBnbGlkZSBpbiBteSBzdHJpZGUuIApUaGUgT2hpbyBSZWdpbWVudGFsIE1pbGl0YXJ5IEJhbGwgYW5kIENvbmZlcmVuY2UgRmViIDIwClRoZSB0cmlwIGlzIHBvc3NpYmxlIHdpdGggc3VwcG9ydCBmcm9tIHRoZSBXaWxsaWFtIFN0YW1wcyBGYXJpc2ggRnVuZC4gSUQrIGlzIGEgdGhpbmsgdGFuaywgaW5jdWJhdG9yIGFuZCBwbGF0Zm9ybSB0byBjb2xsYWJvcmF0ZSB3aXRoIGNvbXBhbmllcyBhbmQgb3RoZXIgaW5zdGl0dXRpb25zIHdpdGggdGhlIGdvYWwgdG8gYnJpbmcgc3R1ZGVudCBjb25jZXB0cyB0byBtYXJrZXQuIApUaGV5IG1pZ2h0IGJlIHBhaWQgc29tZSBmb3JtIG9mIHdhZ2VzIGFib3ZlIGFuZCBiZXlvbmQgdGhlaXIgcm9vbSBhbmQgYm9hcmQsIGJ1dCBpdCdzIHByb2JhYmx5IGEgbW9zdGx5IGNsb3NlZCBlY29ub215LCB3aGVyZSB0aGUgbW9uZXkgdGhleSBlYXJuIGlzIGxhcmdlbHkgc3BlbnQgb24gdXBrZWVwIGFuZCByZXBsYWNlbWVudCBvZiBwZXJzb25hbCBlZmZlY3RzIGFuZCBlcXVpcG1lbnQgYW5kIHdoYXRldmVyIHNtYWxsIGx1eHVyaWVzIHRoZXkgbWlnaHQgYmUgYWJsZSB0byBjb21lIGJ5LiBJZiB0aGV5J3JlIHBhaWQgYW55dGhpbmcgYXQgYWxsLCBpdCdzIHByb2JhYmx5IGEgc3VtIHRoYXQganVzdCBiYXJlbHkgY292ZXJzIGFueSBuZWNlc3NhcnkgZXhwZW5zZXMuIEtlZXAgaW4gbWluZCB0aGF0IGl0J3Mgbm90IGxpa2UgdGhlcmUgaXMgYSBXYWxtYXJ0IGp1c3QgZG93biB0aGUgc3RyZWV0IGZyb20gQ2FzdGxlIEJsYWNrLCB0aGUgYnJvdGhlcnMgYXJlbid0IGdvaW5nIHRvIGJlIHJ1bm5pbmcgb3V0IG9uIHNob3BwaW5nIHRyaXBzLi4gClBhciBhaWxsZXVycywgbm91cyBhaW1lcmlvbnMgcXVlIGxlcyBub21icmV1eCBwcm9ibG1lcyB2b3F1cyBwbHVzIGhhdXQgc29pZW50IGVuZmluIHRyYWl0cyBwYXIgbGEgVmlsbGUgYXZlYyBhdXRhbnQgZGUgemxlLgpSZXN0IGEgYml0IGJlZm9yZSB5b3UgaGl0IHRoZSBzaG93ZXJzLiBBbGxvdyB5b3VyIGJvZHkgdG8gZGVjb21wcmVzcyBhIGJpdCB3aGVuIHlvdSBnZXQgaG9tZS4gSWYgeW91J3ZlIGJlZW4gb24geW91ciBmZWV0IGFsbCBkYXksIGl0J3MgYSBnb29kIGlkZWEgdG8gdGFrZSBvZmYgeW91ciBzaG9lcyBhbmQgZWxldmF0ZSBpdCB0byBhbGxvdyB5b3VyIGZlZXQgdG8gcmVzdC4gTG9vc2VuIHlvdXIgY2xvdGhlcyBvciBjaGFuZ2UgdG8gYXQgaG9tZSBjbG90aGluZy4gQWxsb3cgeW91ciBib2R5IHRvIGNvb2wgZG93biBhIGJpdCBiZWZvcmUgeW91IHRha2UgYSBzaG93ZXIuIEl0J3MgYmVzdCB0byBzYXZlIHRoZSBzaG93ZXIgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IHdoZW4geW91IGFyZSBkb25lIHdpdGggYWxsIHRoZSBjaG9yZXMsIHNvIHlvdSBjYW4gZ2V0IGEgZ29vZCBzbGVlcCByaWdodCBhZnRlci4KUHJvZmVzc29yZ3JlZW5pbmd0b24gIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkVwaWMgbW91dGggc2hpdHRpbmcuIApDIGNlbGEgcXVpIGxlIGRjaWRlICByZW5vbmNlciAgbGEgdmllIHVyYmFpbmUuIApJJ20gYW4gb2xkIHNvdWxlZCAzMSB5ZWFyIG9sZCBsb29raW5nIGZvciBzb21lIGZyaWVuZHMgdG8gc2hhcmUgbXkgc21pbGUgd2l0aC4gSSd2ZSBiZWVuIGluY2FyY2VyYXRlZCBzaW5jZSAyMDA2IGFuZCBzdGlsbCBoYXZlIHNldmVyYWwgeWVhcnMgdG8gZ28sIHNvIEkgZ2V0IGEgYml0IGxvbmVseSBhdCB0aW1lcy4gClRoYXQgd291bGQgYmUgbXkgb25seSBjcml0aWNpc20gb2Ygd2hhdCB5b3Ugd3JvdGUgYWJvdmU7IFlvdSBjb25kZW1uaW5nIHRoZSBndXlzIHdobyBoYXZlbiB0aGUgcGF0aWVuY2Ugb3IgdGhlIHRpbWUgdG8gdGFrZSB1cCBhIGdyZWF0IGNydXNhZGUgdG8gYWRkcmVzcyB0aGUgcHJvYmxlbXMgdGhhdCBhcmUgYmVpbmcgcGVycGV0dWF0ZWQgYnkgZmVtaW5hemkgdG93YXJkcyBtZW4uIEFsc28sIGl0IGRhbmdlcm91cyB0byBzcGVhayBvdXQgYWdhaW5zdCB0aGUgc3RhdHVzIHF1bywgYW5kIGluIHRoaXMgZ2FtZSBvZiBwb3dlciwgKHdoaWNoIGlzIGFsbCBsaWZlIGlzKSB3ZSBiZSByZW1pc3MgaWYgd2UgZGlkbiBpZGVudGlmeSB0aGUgaW5oZXJlbnQgZGFuZ2VycyBvZiBzcGVha2luZyBvdXQgYWdhaW5zdCBmZW1pbmlzbS4uIApBbmQgaXQgaXMgdGhhdCBodW1hbiBjb25uZWN0aW9uLCB0aGUgY2xhc3MgYXMgYSBncm91cCB3aXRoIHNvbGlkYXJpdHkgYW5kIHN1cHBvcnQgZm9yIGl0c2VsZiwgdGhhdCBjYW4gbW92ZSB1cyBmcm9tIENsYXNzIFdhcmZhcmUgdG8gY2xhc3MgYWN0aW9uLgpJIGNoZWNrIGludG8gdGhlIGluaXRpYWwgcmFpc2VyIGJlY2F1c2UgaGUgd2FzIG5vdG9yaW91c2x5IGJldHRpbmcgZXZlcnkgZmxvcC4gSGUgYmV0cywgYmlnLiAKVGhlIEF2ZXJhZ2UgUGF5IGZvciBhIFJlc3BpcmF0b3J5IFRoZXJhcGlzdCBXaXRoIGFuIE5QUyBMaWNlbnNlQWxzbyBWaWV3ZWQgTWFrZSBhIFN0YW5kIFVwIEpvYiBFYXNpZXIgb24gWW91ciBMZWdzIGFuZCBGZWV0IExpY2Vuc2UgUmVxdWlyZWQgZm9yIGEgTWFzc2FnZSBUaGVyYXBpc3QgaW4gdGhlIFN0YXRlIG9mIE1hcnlsYW5kIEF0dGFjaCBhIENvdmVyIExldHRlciBUaGluZ3MgdG8gU3R1ZHkgdG8gQmVjb21lIGEgQ2VydGlmaWVkIEFyYm9yaXN0IENoaXJvcHJhY3RvciBWcy4gClRoaXMgNywyMDAgc3F1YXJlIGZvb3QgbW9kZXJuIGxpbWVzdG9uZSBob21lLCBvbmUgb2YgZWlnaHQgZ3JhbmQgcHJpemUgY2hvaWNlcyBpbiB0aGUgQkMgQ2hpbGRyZW4gSG9zcGl0YWwgQ2hvaWNlcyBMb3R0ZXJ5LCBpcyBhICQzLjggbWlsbGlvbiBwcml6ZSBwYWNrYWdlLCBhbGwgaW4uIExvY2F0ZWQgaW4gdGhlIHdlbGwgdHJlZWQgYW5kIGZhbWlseSBmcmllbmRseSBFbGdpbiBFc3RhdGVzIGRpc3RyaWN0IG9mIFNvdXRoIFN1cnJleSwgaXQgc3BhY2lvdXMgdG8gdGhlIG1heCBhbmQgZGF6emxlcyB3aXRoIG5hdHVyYWwgbGlnaHQgYW5kIGNsZXZlciBpbnRlcmlvciBsaWdodGluZy4gTG90dGVyeSBob21lcy4gCkkgYXJndWUgYWdhaW5zdCB0d28gcG9wdWxhciBjbGFpbXMuIFRoZSBmaXJzdCBpcyBhIGRlc2NyaXB0aXZlLCBlbXBpcmljYWwgdGhlc2lzIGFib3V0IHRoZSBuYXR1cmUgb2Ygb3JkaW5hcnkgaHVtYW4gZXhwZXJpZW5jZTogJ2VhY2ggb2YgdXMgY29uc3RydWN0cyBhbmQgbGl2ZXMgYSAibmFycmF0aXZlIiAuIC4gLiB0aGlzIG5hcnJhdGl2ZSBpcyB1cywgb3VyIGlkZW50aXRpZXMnIChPbGl2ZXIgU2Fja3MpOyAnc2VsZiBpcyBhIHBlcnBldHVhbGx5IHJld3JpdHRlbiBzdG9yeSAuIC4gLiBpbiB0aGUgZW5kLCB3ZSBiZWNvbWUgdGhlIGF1dG9iaW9ncmFwaGljYWwgbmFycmF0aXZlcyBieSB3aGljaCB3ZSAidGVsbCBhYm91dCIgb3VyIGxpdmVzJyAoSmVycnkgQnJ1bmVyKTsgJ3dlIGFyZSBhbGwgdmlydHVvc28gbm92ZWxpc3RzLiAuIC4gLiBXZSB0cnkgdG8gbWFrZSBhbGwgb2Ygb3VyIG1hdGVyaWFsIGNvaGVyZSBpbnRvIGEgc2luZ2xlIGdvb2Qgc3RvcnkuIEFuZCB0aGF0IHN0b3J5IGlzIG91ciBhdXRvYmlvZ3JhcGh5LiBUaGUgY2hpZWYgZmljdGlvbmFsIGNoYXJhY3RlciAuIG9mIHRoYXQgYXV0b2Jpb2dyYXBoeSBpcyBvbmUncyBzZWxmJyAoRGFuIERlbm5ldHQpLiBUaGUgc2Vjb25kIGlzIGEgbm9ybWF0aXZlLCBldGhpY2FsIGNsYWltOiB3ZSBvdWdodCB0byBsaXZlIG91ciBsaXZlcyBuYXJyYXRpdmVseSwgb3IgYXMgYSBzdG9yeTsgYSAnYmFzaWMgY29uZGl0aW9uIG9mIG1ha2luZyBzZW5zZSBvZiBvdXJzZWx2ZXMgaXMgdGhhdCB3ZSBncmFzcCBvdXIgbGl2ZXMgaW4gYSBuYXJyYXRpdmUnIGFuZCBoYXZlIGFuIHVuZGVyc3RhbmRpbmcgb2Ygb3VyIGxpdmVzICdhcyBhbiB1bmZvbGRpbmcgc3RvcnknIChDaGFybGVzIFRheWxvcikuIEEgcGVyc29uICdjcmVhdGVzIGhpcyBpZGVudGl0eSBbb25seV0gYnkgZm9ybWluZyBhbiBhdXRvYmlvZ3JhcGhpY2FsIG5hcnJhdGl2ZSAgIGEgc3Rvcnkgb2YgaGlzIGxpZmUnLCBhbmQgbXVzdCBiZSBpbiBwb3NzZXNzaW9uIG9mIGEgZnVsbCBhbmQgJ2V4cGxpY2l0IG5hcnJhdGl2ZSBbb2YgaGlzIGxpZmVdIHRvIGRldmVsb3AgZnVsbHkgYXMgYSBwZXJzb24nIChNYXJ5YSBTY2hlY2h0bWFuKS4KQ2UgY2hhbXAgZHUgcG9pbnQgenJvIGVzdCBsYSBtbW9pcmUgY29uc3RhbnRlIGV0IHRlcm5lbGxlIGRlIGwndW5pdmVycy4gSWwgZHRpZW50IGxlcyBkb25uZXMgZGUgdG91dCBjZSBxdWkgcydlc3QgcHJvZHVpdCBzdXIgbGEgVGVycmUgZXQgZGFucyBsZSBjb3Ntb3MsIGV0IG1ldCBjZWxsZXMgY2kgZW4gY29ycmxhdGlvbiBhdmVjIHRvdXQgY2UgcXVpIGRvaXQgYXJyaXZlcgpUaGUgYmVzdCBwb2tlciBwbGF5ZXJzIGhhdmUgbGVhcm5lZCBob3cgdG8gcGxheSB0aGUgaGFuZHMgdGhleSBhcmUgZGVhbHQuIFNvIGhhdmUgdGhlIGJlc3QgYnVzaW5lc3NtZW4gYW5kIHRoZSBiZXN0IGF0aGxldGVzLiBUaGUgYmVzdCBvZiB0aGUgYmVzdCBkb24gaGF2ZSB0aGUgYmFsbCBib3VuY2UgdGhlaXIgd2F5IGV2ZXJ5IHRpbWUuIAoxMDBzIGlzIGxpa2UgaW5jcmVhc2luZyB5b3VyIGNoYW5jZXMgcmVzcGlyYXRvcnkgZGlzZWFzZXMgd2hpbGUgbGl2aW5nIHdpdGggMjAwcyBpcyBwcmV0dHkgbXVjaCBndWFyYW50ZWVkIGNlcnRhaW50eSB0aGF0IHlvdSB3aWxsIGV4cGVyaWVuY2UgZGlyZSBoZWFsdGggY29uc2VxdWVuY2VzLiBJIHBlcnNvbmFsbHkga25vdyBxdWl0ZSBhIGZldyBDaGluZXNlIGFjcXVhaW50YW5jZXMgd2hvIGFyZSB0cnlpbmcgcmVhbGx5IGhhcmQgdG8gcGVybWFuZW50bHkgaW1taWdyYXRlIHRvIEF1c3RyYWxpYSBiZWNhdXNlIHRoZXkgYXJlIEFMUkVBRFkgZXhwZXJpZW5jaW5nIGNvbnN0YW50IHBuZXVtb25pYSBhbmQgYXN0aG1hIGluIHRoZWlyIGVhcmx5IDIwcy4gCkluY3JlYXNpbmcgZmVlcyB3aWxsIGxpa2VseSBsZWFkIHRvIHNtYWxsZXIgdHVybiBvdXRzLiBXZSBjb3VsZCBhbHNvIGdldCBzcG9uc29ycyB0aGF0IHdpbGwgY29udHJpYnV0ZSB0byB0aGUgcG90LiBGb3IgdGhlIHNlY29uZCB0byBoYXBwZW4sIHRoZXJlIG5lZWRzIHRvIGJlIGJpZyB2aWV3ZXJzaGlwICh3aGljaCB1c3VhbGx5IGNvbWVzIGZyb20gYmlnIHR1cm4gb3V0KS4gCidBdHRhY2hlZCBpcyBhIFNQUkVBRFNIRUVUIG9mIGFsbCB0aGUgdGltZXMgaGUgaGFzIHRyaWVkIHRvIGluaXRpYXRlIHNleCBzaW5jZSBKdW5lIDFzdCwgd2l0aCBhIGNvbHVtbiBmb3IgbXkgImV4Y3VzZXMiLCB1c2luZyB2ZXJiYXRpbSBxdW90ZXMgb2Ygd2h5IEkgZGlkbid0IGZlZWwgbGlrZSBoYXZpbmcgc2V4IGF0IHRoYXQgdmVyeSBtb21lbnQuIEFjY29yZGluZyB0byBoaXMgJ2RvY3VtZW50Jywgd2UndmUgb25seSBoYWQgc2V4IDMgdGltZXMgaW4gdGhlIGxhc3QgNyB3ZWVrcywgb3V0IG9mIDI3ICJhdHRlbXB0cyIgb24gaGlzIHBhcnQuLiAKQmVjYXVzZSBMaWJyYXR1cyB0eXBpY2FsbHkgcGxheXMgYWNjb3JkaW5nIHRvIGEgcHJlIGNvbXB1dGVkIGJsdWVwcmludCBzdHJhdGVneSBvbiB0aGUgZmlyc3QgdHdvIGJldHRpbmcgcm91bmRzLCBpdCByb3VuZHMgYW4gb2ZmIHRyZWUgb3Bwb25lbnQgYmV0IHNpemUgdG8gYSBuZWFyYnkgaW4gYWJzdHJhY3Rpb24gYWN0aW9uLiBUaGUgYmx1ZXByaW50IGFjdGlvbiBhYnN0cmFjdGlvbiBvbiB0aG9zZSByb3VuZHMgaXMgZGVuc2UgaW4gb3JkZXIgdG8gbWl0aWdhdGUgdGhpcyB3ZWFrbmVzcy4gSW4gYWRkaXRpb24sIExpYnJhdHVzIGhhcyBhIHVuaXF1ZSBzZWxmIGltcHJvdmVtZW50IG1vZHVsZSB0byBhdWdtZW50IHRoZSBibHVlcHJpbnQgc3RyYXRlZ3kgb3ZlciB0aW1lIHRvIGNvbXB1dGUgYW4gZXZlbiBjbG9zZXIgYXBwcm94aW1hdGlvbiB0byBOYXNoIGVxdWlsaWJyaXVtIGluIHBhcnRzIG9mIHRoZSBnYW1lIHRyZWUgd2hlcmUgdGhlIG9wcG9uZW50cyBpbiBhZ2dyZWdhdGUgaGF2ZSBmb3VuZCBwb3RlbnRpYWwgaG9sZXMgaW4gaXRzIHN0cmF0ZWd5LkluIHRlcm1zIG9mIGV2YWx1YXRpb24gICBpbiBhZGRpdGlvbiB0byB3aGF0IExldHRlclJpcCB3cm90ZSBhYm92ZSBhYm91dCB0aGUgZXZhbHVhdGlvbiBhZ2FpbnN0IGh1bWFucyAgIERlZXBTdGFjayB3YXMgbmV2ZXIgc2hvd24gdG8gb3V0cGVyZm9ybSBwcmlvciBwdWJsaWNseSBhdmFpbGFibGUgdG9wIEFJcyBpbiBoZWFkIHRvIGhlYWQgcGVyZm9ybWFuY2UsIHdoZXJlYXMgTGlicmF0dXMgYmVhdHMgdGhlIHByaW9yIGJlc3QgSFVOTCBwb2tlciBBSSBCYWJ5IFRhcnRhbmlhbjggKHdoaWNoIHdvbiB0aGUgMjAxNiBBbm51YWwgQ29tcHV0ZXIgUG9rZXIgQ29tcGV0aXRpb24pIGJ5IGEgbGFyZ2UgbWFyZ2luICg2MyBtYmIvZ2FtZSkuQXMgdG8gY29vcGVyYXRpb24sIHRoZSB0d28gcmVzZWFyY2ggZ3JvdXBzIGhhdmUgYmVlbiBwdWJsaXNoaW5nIHRoZWlyIHRlY2huaXF1ZXMgYW5kIGJ1aWxkaW5nIG9uIGVhY2ggb3RoZXJzIHRlY2huaXF1ZXMgZm9yIDEzIHllYXJzIG5vdy4gCkluIDIwMTMsIHdpdGggdGhlIG1vbWVudHVtIHdlJ3ZlIGhhZCwgb3VyIGZvY3VzIGlzIGluIGdpdmluZyBkZWFsZXJzIG1vcmUgcGVyIHZlaGljbGUgcmV0YWlsZWQuIElmIHRoZSBkZWFsZXJzIGFyZSBkb2luZyB3ZWxsLCB3ZSdyZSBnb2luZyB0byBiZSBkb2luZyB3ZWxsLiBMYXN0IHllYXIgNjAgcGVyY2VudCBvZiBvdXIgZ3Jvd3RoIHdhcyB3aXRoIGV4aXN0aW5nIGNsaWVudHMgYW5kIDQwIHBlcmNlbnQgd2FzIHRocm91Z2ggbmV3IGJ1c2luZXNzIGFjcXVpc2l0aW9uLiAKRnJ1aXQgaXMgb25seSBhIHN0YXBsZSBmb3IgZnJ1Z2l2b3JlcyAobWFjYXF1ZXMsIGNoaW1wcywgdXMsIGNhcHVjaGlucywgc3BpZGVyIG1vbmtleXMsIGV0Yy4pICAgdGhhdCB0aGUgZGVmaW5pdGlvbiBvZiBmcnVnaXZvcmUuIApPbmNlIHRoaXMgaXMgZG9uZSwgZGVjaWRlIHdoaWNoIHNpZGUgb2YgdGhlIENsYXkgUG9rZXIgQ2hpcCB3aWxsIGJlIHRoZSBmYWNlIG9mIHRoZSBuZWNrbGFjZS4gClRoZSBmaXJzdCBkcmFtIGZyb20gYSBib3R0bGUgaXMgdXN1YWxseSBub3QgYXMgZ29vZCBhcyBhZnRlciB0aGUgYm90dGxlIGhhZCBhIGNoYW5jZSB0byBveGlkaXplIGEgYml0LiAKWW91IGNhbiB0ZXN0IGZvciBhIGxvdCwgYnV0IG5vdCBldmVyeXRoaW5nLiBXZSBoYWQgdGhlIHNhbWUgY29udmVyc2F0aW9uIGFuZCBrbmV3IHRoYXQgaWYgYW55dGhpbmcgY2FtZSBiYWNrIGluIHRoZSBmaXJzdCB0cmltZXN0ZXIgdGVzdGluZyB3ZSB0ZXJtaW5hdGUuIFdoZW4gdGhlIGZldHVzIGhhZCBhIGhlYXJ0IGFycmh5dGhtaWEgdHVybiB1cCBhdCAzNCB3ZWVrcywgdGhvdWdoLCB0aGUgcXVlc3Rpb24gd2hpbGUgd2Ugd2FpdGVkIGZvciB0aGUgc3BlY2lhbGlzdCB3YXMgdmVyeSBkaWZmZXJlbnQuLiAKV2VsbCwgYXQgYWdlIDE4LCBhcyBhbiBhZHVsdCwgaGlzIHJlcHJlc3NlZCBhbmdlciBhbmQgcmVzZW50bWVudCBzaG93ZWQgdXAuIEhlIGVuZGVkIHVwIHVzaW5nIGFsbCBzb3J0cyBvZiBoZWF2eSBkcnVncywgZ2V0dGluZyBhcnJlc3RlZCAobWFkZSBpbnRlcm5hdGlvbmFsIG5ld3MgaW4gb25lIHJpZGljdWxvdXMgZXZlbnQgdGhhdCBvbmx5IGVtYmFycmFzc2VkIGhpbXNlbGYgYW5kIGhhcm1lZCBubyBvbmUpIGFuZCBuZXZlciBoYWQgdGhlIHNsaWdodGVzdCBjaGFuY2UgYXQgdGhlIE5ITC4KIlRocmVlIGRheXMgb2YgMTIgaG91cnMsIGp1c3QgZ3JpbmRpbmcgc2xpZGVzIGFuZCBhcmd1bWVudHMsIHJlYWxseSwgcmVhbGx5IGludGVuc2UsIiBzYXlzIENoaWNoZXN0ZXIsIHdobyBpcyBhIGdsb2JhbCBzZW5pb3IgVlAgb2Ygc2VhcmNoIGFuZCBjb250ZW50IG1hcmtldGluZy4gClRoZSAyMDAgU3VpdGVkIFBva2VyIENoaXBzIHdpdGggQ2xlYXIgQ292ZXIgQWx1bWludW0gQ2FzZSBjb21lcyBpcyBhIHNldCB0aGF0IHdpbGwgbGFzdCBmb3JldmVyLiBUaGUgY2FzZSBpdHNlbGYgaXMgbWFkZSBmcm9tIGFpcmNyYWZ0IGFsdW1pbnVtIGFuZCBvZmZlcnMgYSBzY3JhdGNoIHJlc2lzdGFudCBjbGVhciBjYXNlIHNvIHlvdSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGFjY2lkZW50cyB0aGF0IG1heSBvY2N1ci4gWW91IHdvbid0IGhhdmUgdG8gcHVyY2hhc2UgYW55IGNhcmRzIGVpdGhlciBiZWNhdXNlIDIgZGVja3MgY29tZSB3aXRoIGl0Li4gClJpdmFzJyBhdHRvcm5leSBsYXVkZWQgdGhlIHByb2JlLgpUaGUgTE9SRCBmb3JldG9sZCBtZSBhIGRhdGUgJzExIDExIDEyJywgaW4gYSBkcmVhbSBvZiBNYXJjaCA1IDIwMTEuIEkgaGF2ZSBhbHJlYWR5IHNoYXJlZCB0aGlzIG1lc3NhZ2UsIGJlY2F1c2Ugd2hhdCB0aGUgTE9SRCByZXZlYWxzIGlzIHRoZSBvbmx5IHRydXRoIGFuZCBpdCBtdXN0IGJlIHdpdG5lc3NlZCBpbiBhIHRpbWVseSBmYXNoaW9uLiAKInJlYWxpc3RpYyIuIFRoZXJlJ3Mgbm8gcGVyc29uYWwgdG91Y2ggaW4gdGhlIGxpbmUgbWFraW5nIGJlY2F1c2UgaXQncyB0cnlpbmcgc28gaGFyZCB0byBsb29rIHJlYWwuIFRoZXkncmUgc28gcGhvdG9yZWFsaXN0aWMgeW91IGp1c3QgbWlzdGFrZSB0aGVtIGZvciBhIGdvb2QgcGljdHVyZS4gClRoZSBsZWdhbCBpc3N1ZSBpcyB3aGV0aGVyIENvbmdyZXNzIGluZnJpbmdlZCBvbiBGaXJzdCBBbWVuZG1lbnQgcmlnaHRzIHdoZW4gaXQgcGFzc2VkIGEgbGF3IG91dGxhd2luZyB0aGUgZGlzdHJpYnV0aW9uIG9mIGltYWdlcyBvZiBhbmltYWwgY3J1ZWx0eSBmb3IgcHJvZml0LiAKVG8gcmVnaXN0ZXIgbWFrZSBhbiBFU1BOIGFjY291bnQgdGhhbiBnbyB0byB0aGUgaG9tZXBhZ2UgZm9yIEVTUE4gUG9rZXIgQ2x1Yi4gCk5vdCB0byBtZW50aW9uIHRoYXQgbmF0dXJlIGluIGFuZCBvZiBpdHNlbGYgaXMgZnVja2luZyBicnV0YWwuCkNvcHMgaGF2ZSBsZWFybnQgdGhhdCBLYWxnaSBpcyBhIGRldm91dCBmb2xsb3dlciBvZiBTaHJpbmF0aGppIGFuZCBhbHdheXMgdmlzaXRzIHRoZSB0ZW1wbGUgd2hlbiBpbiB0cm91YmxlLiAKTm8gcGVyc29uYWwgYXR0YWNrcy4KSW4gYWRkaXRpb24sIHRoaXMgdHlwZSBvZiBwb2tlciB0YWJsZSBjbG90aCBpcyBlc3BlY2lhbGx5IGN1dCBhbmQgZGVzaWduZWQgdG8gYWNjb21tb2RhdGUgdGhlIHNpemUgb2YgYSBzdGFuZGFyZCBvciBvY3RhZ29uYWwgcG9rZXIgdGFibGUuIApUaGlzIG1lYW5zIHlvdSBjYW4gcGxheSBvbmxpbmUgcG9rZXIgYW5kIGdldCBiZXR0ZXI7IGltcHJvdmUgeW91ciBza2lsbHMgd2l0aG91dCByZWFsbHkgYnJlYWtpbmcgeW91ciBiYW5rIGFjY291bnQuIEl0J3MgYSBncmVhdCBvbmxpbmUgcG9rZXIgc3RyYXRlZ3kgdGhhdCBhIGxvdCBvZiBiZWdpbm5lcnMgdXNlLiAKQWJvdXQgaGFsZiBvZiB0aGUgcG9wdWxhdGlvbiBtdXN0IGhhdmUgYW4gSVEgYmVsb3cgMTAwLCB5ZXQgeW91IGV4cGVjdCB0aGVtIHRvIGJlIGFibGUgdG8gZG8gdGhpcz8uIApJdCB3YXMgR2lsbGllcyB3aG8gZXZlbnR1YWxseSBlbmRlZCB0aGUgcmVsYXRpb25zaGlwIHdpdGggTGFuZSwgaGF2aW5nIG1ldCB0aGUgd29tYW4gd2hvIGhhcyBzaW5jZSBiZWNvbWUgaGlzIHdpZmUsIGJ1dCB3aGVuIGhlIHRhbGtzIHRvIEJlY3JvZnQgYWJvdXQgaGlzIGZvcm1lciBnaXJsZnJpZW5kLCBoZSByYWRpYXRlcyBhIHNlbnNlIG9mIGJldHJheWFsIGFuZCB3b3VuZGVkIHByaWRlLiBHYXV0IHdhcyBpbXByZXNzZWQgYnkgaGlzIHNpbmNlcml0eSB3aGVuIGhlIGludGVydmlld2VkIGhpbSBsYXN0IERlY2VtYmVyLiAiSSBmb3VuZCBHaWxsaWVzIHByZXNlbnRlZCBhcyBhIHZlcnkgYmVsaWV2YWJsZSB3aXRuZXNzLCIgdGhlIGRldGVjdGl2ZSBzYXlzIGluIGV2aWRlbmNlLiAKVGhpcyBpbmNsdWRlcyBvZGQgdGhlIHBvdCBzaXplIGFuZCBydWxlcyBvZiB0aGUgZ2FtZS4gCkhlJ2Qgd2luIGEgY291cGxlIHRpbWVzIGhlcmUgYW5kIHRoZXJlIGJ1dCBpbiB0aGUgZW5kIHdvdWxkIGxvc2UgbW9uZXkuIEl0J3Mgbm90IDUwLzUwLiAKSWYgYSBtYW4gd2FudHMgYSB3b21hbiwgaGUgZG9lcyBub3QganVzdCB0YWtlIGhlciwgdGhyb3cgaGVyIG92ZXIgaGlzIHNob3VsZGVyLCBhbmQgZHJhZyBoZXIgYmFjayB0byBoaXMgY2F2ZS4uIApQT09SIFBPU1RVUkUgYW5kIEhFQURBQ0hFCkV2ZW4gaWYgdGhlIGFjdGlvbiBpcyB2aXJ0dWFsLCBtdWNoIG9mIHRoZSB0aHJpbGwgYW5kIGV4Y2l0ZW1lbnQgaXMgdGhlIHNhbWUgYXMgYmVpbmcgaW4gYSAicGh5c2ljYWwiIGdhbWUuIApJbCBsZSBwcmVuZCBkaXJlY3RlbWVudCBlbiBnbHVsZSBldCBtb2kgZW4gcGxhbnRlIHNjaGUuCjIsIDIwMTcsIGZpbGUgcGhvdG8sIGRyYXBlcyBiaWxsb3cgb3V0IG9mIGJyb2tlbiB3aW5kb3dzIGF0IHRoZSBNYW5kYWxheSBCYXkgcmVzb3J0IGFuZCBjYXNpbm8gb24gdGhlIExhcyBWZWdhcyBTdHJpcCwgZm9sbG93aW5nIGEgZGVhZGx5IHNob290aW5nIGF0IGEgbXVzaWMgZmVzdGl2YWwgaW4gTGFzIFZlZ2FzLiAKQ29tbWUgb24gbGUgZGlyYWl0IGRhbnMgbGEgc3BocmUgTFJFTSwgbGUgQ29uc2VpbCBkZSBQYXJpcyBmb25jdGlvbm5lIGVuIGFwcGFyZW5jZSBlbmNvcmUgY29tbWUgZGFucyAgbCdhbmNpZW4gbW9uZGUgIDogdW5lIG5ldHRlIG1ham9yaXQgcG91ciBsYSBjb2FsaXRpb24gc29jaWFsaXN0ZXMgY29sb2dpc3RlcyBjb21tdW5pc3RlcyAoOTEgY29uc2VpbGxlcnMgYXUgdG90YWwsIG1ham9yaXQgIDgyIHZvaXgpIGV0IHVuZSBvcHBvc2l0aW9uIHJlZ3JvdXBlIGF1dG91ciBkJ3VuIHBsZSBMUiAoNTUgY29uc2VpbGxlcnMgbHVzIHNvdXMgbCd0aXF1ZXR0ZSBVTVAgZW4gMjAxNCkgZXQgVURJIE1PREVNICgxNiBjb25zZWlsbGVycyksIGRvbmMgdW4gY2xpdmFnZSBjbGFzc2lxdWUgZ2F1Y2hlL2Ryb2l0ZS4gCkVkaXQsIGhlcmUgd2UgZ286IEFzIGEgbXVzaWNpYW4gbXlzZWxmIEkgbWFrZSBtdXNpYyBmb3IgbXlzZWxmIGFuZCBzaGFyZSBpdCB3aXRoIG15IGZyaWVuZHMgYnV0IGhhdmUgbm8gYXZlbnVlIHRvIG1ha2UgYSBwcm9maXQgb2ZmIGl0LiAKVGhlcmUgd2FzIGFuIGVudGlyZSBzcGVjaWFsIGVkaXRpb24gb2YgdGhlIEpvdXJuYWwgb2YgSGVhbHRoIFBzeWNob2xvZ3kgZGV2b3RlZCB0byB0aGUgUEFDRSB0cmFpbC4gQnV0IHRoZSBsaXN0IGlzIHByZXR0eSBlbmRsZXNzLiAKV2UgZnVzc2VkIHdpdGggaXQgZm9yIGhhbGYgYW4gaG91ciwgdHJ5aW5nIHZhcmlvdXMgZnV0aWxlIHNjaGVtZXMuIEkgZXZlbiB0cmllZCBzYXdpbmcgaXQgd2l0aCBhIGhhY2tzYXcuIE5vIGx1Y2suIFdlIGZpbmFsbHkgZ2F2ZSB1cCBhbmQgSSBhcHBsaWVkIHRoZSB0aW1lIGhvbm9yZWQgdHJhZGl0aW9uYWwgc2VjcmV0IG1hbGUgcmVtb3ZhbCB0ZWNobmlxdWU6IGJydXRlIGZvcmNlLiBJIHRvcmUgdGhlIGRhbW4gdGhpbmcgb3V0IG9mIHRoZSBsZWFkIHdpdGggbXkgdmVyeSBhbmdyeSBiYXJlIGhhbmRzLgpUdWNrVW5kZXIgUGF2aWxpb24sIDY4MSAxN3RoIEF2ZS4gTkUsIFN0dWRpbyAxMTcgYXQgQ2Fza2V0IEFydHMsIE1pbm5lYXBvbGlzLiAgQ2FtaWxsZSBMZUZldnJlLiAKUnlhbiBjaGFuZ2VkIGhpcyBtaW5kIG9uIHRoZSBnZW5ldGljIG1lc2ggYW5kIHRoZSBpbmV2aXRhYmlsaXR5IG9mIHdoaXRlIG5hdGlvbmFsaXNtICAgaG93ZXZlciBldmVuIGFmdGVyIGhpcyB0d28gdmlkZW9zIHNheWluZyBoZSBhIGZpcnN0IHdvcmxkaXN0IG9yIHdoYXRldmVyIGhlIGV4cHJlc3NlZCBza2VwdGljaXNtLCBhcyBldmVuIHRob3VnaCBoZSBkaXNhc3NvY2lhdGVkLCBoZSBzdGlsbCBjYXJlcyBhYm91dCBhbmQgY29ycmVjdHMgdGhlIHN0cmF0ZWdpZXMgb2Ygd2hpdGUgbmF0aW9uYWxpc3RzICAgc3VjaCBhcyBoaXMgaG91ciBhbmQgYSBoYWxmIGxvbmcgdmlkZW8gb24gSkYgZ2FyaWVweS4gCiJJbiBOU1cgbW9zdCBwb2tpZXMgYXJlIHBsYWNlZCB3aXRoaW4gY2x1YnMsIGFuZCB0aG9zZSBjbHVicyBvZnRlbiBpbmNsdWRlIHByb2R1Y3RzIHRoYXQgYXR0cmFjdCBmYW1pbGllcyBhbmQgY2hpbGRyZW4sIGZvciBleGFtcGxlIHlvdSBjYW4gZ2V0IGNoZWFwIG1lYWxzIHdoaWNoIHN1aXQgZmFtaWxpZXMsIHRoZXkgaGF2ZSBlYXQgZnJlZSBwcm9tb3Rpb25zIGFuZCBwbGF5Z3JvdW5kcywiIHNoZSBzYWlkLiAiSW4gdGhlb3J5LCB0aGUgcG9raWVzIGFyZSBzdXBwb3NlZCB0byBiZSBvdXQgb2Ygc2lnaHQgd2l0aGluIGNsdWJzLCBidXQgaW4gc29tZSBvZiB0aGVtIHlvdSBjYW4gc2VlIHRoZSBwb2tlciBtYWNoaW5lcyBmcm9tIGFyZWFzIHdoaWNoIGRvIGFsbG93IGNoaWxkcmVuLi4gCkxvdWlzLCBUdW5pY2EsIHRocm91Z2hvdXQgRmxvcmlkYSwgYW5kIG1hbnkgb3RoZXIgcGxhY2VzIGJlY2F1c2UgdGhvc2Ugcm9vbXMgaGF2ZSBiZWVuIHRoZXJlIEZPUkVWRVIuIAoiQWNjb3JkaW5nIHRvIHBsYWludGlmZiwgV2VpbnN0ZWluIHRoZW4gYXR0ZW1wdGVkIHRvIGxpdmUgdXAgdG8gaGlzIHBhcnQgb2YgdGhlIGJhcmdhaW4gYnkgdHJ5aW5nIHRvIGNhc3QgcGxhaW50aWZmIGluIGFzIG1hbnkgcm9sZXMgYXMgcG9zc2libGUgdGhhdCBjb3VsZCBlYXJuIGhlciBhbiBBY2FkZW15IEF3YXJkLCIgdGhlIGZpbGluZyBzdGF0ZXMuCkFzIHlvdSBtYXkgYmUgYXdhcmUsIG1vc3QgZ2FtYmxlcnMgcmVseSBvbiBsdWNrLiBSZWdhcmRsZXNzIG9mIHdoZXRoZXIgYSBwZXJzb24gZ2FtYmxlcyBvbiB0aGUgc3RvY2sgbWFya2V0LCBvciBhIGdhbWUgb2YgcG9rZXIsIHRoZXJlIGlzIG5vIHF1ZXN0aW9uIHRoYXQgYmVpbmcgaW4gdGhlIHJpZ2h0IHBsYWNlIGFuZCBoYXZpbmcgdGhlIHJpZ2h0IGNhcmRzIGNhbiBlYXNpbHkgY2hhbmdlIHRoZSBvdXRjb21lIG9mIHRoZSBnYW1lLiAKSW4gdGhlIGVuZCwgaXQgd291bmQgdXAgYmVpbmcgYSBiaWcgYmxlc3NpbmcgYmVjYXVzZSBteSBmYXRoZXIgZGllZCB1bmV4cGVjdGVkbHkganVzdCBhIGZldyB5ZWFycyBsYXRlci4gSWYgSSBoYWRuIGdvdHRlbiBwcmVnbmFudCwgaGUgd291bGQgbmV2ZXIgaGF2ZSBrbm93biBhbnkgb2YgaGlzIGdyYW5kY2hpbGRyZW4uLiAKNC4gU28gd2hhdCBpcyBsZWdhbD8gSWYgeW91IGFyZSBvZiBsZWdhbCBhZ2UsIHlvdSBjYW4gcG9zc2VzcywgaW4gcHVibGljLCAzMCBncmFtcyBvZiBsZWdhbCBjYW5uYWJpcywgZHJpZWQgb3IgaXRzIGVxdWl2YWxlbnQgaW4gbm9uIGRyaWVkIGZvcm0uIEl0IHdpbGwgYmUgbGVnYWwgdG8gc2hhcmUgdGhhdCBhbW91bnQgd2l0aCBvdGhlciBhZHVsdHMuIApCdXQgYWxzbyBzaG93cyB0aGUgcmFjaWFsIGJpYXMuLiAKIkdpdmVuIHRoZSByb2xlIG9mIGZydWN0b3NlIGNvcm4gc3lydXAgYXMgYSBzd2VldGVuZXIsIHRoaXMgbWVhbnMgdGhhdCBieSBleHRlbnNpb24sIHN3ZWV0cyBhbmQgc29mdCBkcmlua3MgaGF2ZSBiZWVuIHN1YnNpZGl6ZWQuIgoiSSBrbmV3IGl0IHdhcyBnb2luZyB0byBiZSBhIHRvdWdoIGNvbXBldGl0aW9uLCIgaGUgZXhwbGFpbnMuICJBbnkgdG91cm5hbWVudCBib2FzdGluZyBhICQxbWlsbGlvbiBwcml6ZSBwb29sIGlzIGdvaW5nIHRvIGF0dHJhY3QgdGhlIHRvcCBwbGF5ZXJzIGJ1dCBJIHdhcyBmZWVsaW5nIGNvbmZpZGVudCBhYm91dCBteSBnYW1lLiBBbmQgdGhlIGVudHJ5IHdhcyBhIHJlYXNvbmFibGUgcHJpY2UgZm9yIHN1Y2ggYSBodWdlIGd1YXJhbnRlZWQgcHJpemUgcG9vbC4KQ2hhZmZldHosIGEgZnJlc2htYW4gbWVtYmVyIG9mIENvbmdyZXNzIGZyb20gVXRhaCwgdG9sZCBQb2xpdGljbyB0aGF0IGl0IHdhcyB0aW1lIGZvciBSZXB1YmxpY2FucyB0byBkbyBtb3JlIHRoYW4gInRha2UgcG90IHNob3RzIGF0IEFDT1JOLiIgQW5kIGFsdGhvdWdoIENoYWZmZXR6IHJlYWxpemVzIGhpcyBvcHBvc2l0aW9uIHRvIEdPUCBsZWFkZXJzaGlwIG1pZ2h0IGh1cnQgaGltLCBoZSBpcyB0YWtpbmcgYSBzdGFuZCBhZ2FpbnN0IG1vcmUgd2FyIGluIEFmZ2hhbmlzdGFuLiAKRE9XTkxPQUQgUERGLiAKUElYOiBNaWFtaSBPcmFuZ2UgQm93bCBQbGF5ZWQgSG9zdCBUbyA1IFN1cGVyIEJvd2xzU1RFRUxFUlMgV0lOIFNVUEVSIEJPV0xQaXR0c2J1cmdoIFN0ZWVsZXJzIHF1YXJ0ZXJiYWNrIFRlcnJ5IEJyYWRzaGF3IGhvbGRzIHVwIG9uZSBmaW5nZXIsIGluZGljYXRpbmcgaGlzIHRlYW0gaXMgTm8uIDEsIGluIHRoZSBjbG9zaW5nIG1pbnV0ZXMgb2YgdGhlIFN1cGVyIEJvd2wsIGluIE1pYW1pLCBGbGEsIG9uIEphbnVhcnkgMjEsIDE5NzkuIFRoZSBTdGVlbGVycyBkZWZlYXRlZCB0aGUgRGFsbGFzIENvd2JveXMgMzUgMzEuIApNIG1pcyBlbiBmdXJpZS4gSiB2cmFpbWVudCB2ZXggcGFyY2UgcXUgcyBkIHAgcXVpIGF1cmFpdCBwdSBmYWNpbGVtZW50IERlIHBsdXMsIGxhIHZvaXR1cmUgZGUgcyBuIHBhcyBlc3NheSBkZSBtIEMgbGUgY2hhb3MgZXQgcGVyc29ubmUgbmUgc2F2YWl0IHF1aSBlbiB0IGNlIG1vbWVudCBsIEMgaW5jcm95YWJsZSBkZSBib3VzaWxsZXIgZGUgdGVsbGUgZmEgbCA1MDAgOyBsYSBwbHVzIGdyb3NzZSBjb3Vyc2UgYXV0b21vYmlsZSBhdSBtb25kZS4KVGhlcmUgYXJlIHNldmVyYWwgZGlmZmVyZW50IHdheXMgdGhhdCBjYXJkIHRhdHRvb3MgY2FuIGJlIGRlc2lnbmVkLiBZb3UgY2FuIGdldCBhbiBpZGVhIG9mIHdoYXQgYWxsIGlzIGF2YWlsYWJsZSBqdXN0IGJ5IGxvb2tpbmcgYXQgdGhlIHBpY3R1cmVzIG9uIHRoaXMgYXJ0aWNsZS4gT25lIGludGVyZXN0aW5nIGFwcHJvYWNoIGlzIHRvIHVzZSB0aGUgc3ltYm9sIG9mIGVhY2ggc3VpdDogdGhlIFNwYWRlLCBIZWFydCwgQ2x1YiwgYW5kIERpYW1vbmQuIApXaGF0IHNob3VsZCBpIGRvIGEgY291cGxlIHBlb3BsZSBpbmNsdWRpbmcgbWUgYXJlIGJhc2ljYWxseSAxMDAlIGNvbnZpbmNlZCBoZSBjaGVhdGVkIGJ1dCB3aXRob3V0IHNvbGlkIHByb29mIGl0IHNlZW1zIGJhbm5pbmcgaGltIGZyb20gb3VyIGdhbWVzIGlzIHRoZSB3cm9uZyB0aGluZyB0byBkb0l0cyBhbHdheXMgYmV0dGVyIHRvIGp1c3QgYmUgdXAgZnJvbnQgd2l0aCBwZW9wbGUuIApQZW9wbGUgaW4gdGhlIEVhc3QgbWF5IGtub3cgaXQgYXMgR2lhcHB1bml6YSBvciBDaW5pemEuIApBbHNvLCB0aGUgaW50cm9kdWN0aW9uIG9mIGhvcmRlcyBpcyBuaWNlIGJ1dCB5b3UgZGVmZWF0IGEgY2l2aWxpemF0aW9uIG9ubHkgdG8gaGF2ZSB0byBhdHRlbXB0IHRvIGNoYXNlIGRvd24gYSBzaWNrbHkgYXJteSBzdGFjayBmb3IgeWVhcnMuIFdpdGggdGhlIHBlcm1hbmVudCBkZWNyZWFzZSBpbiB0ZW1wZXJhdHVyZS9mZXJ0aWxpdHksIGhhbGYgdGhlIG1hcCBiZWNvbWVzIGZyb3plbiBtYWtpbmcgZmluaXNoaW5nIG9mZiBhcm1pZXMgZG93bnJpZ2h0IGltcG9zc2libGUgKGV2ZW4gd2l0aCBhZ2VudHMpLiBUaGlzIGlzIGEgcHJvYmxlbSBpbiBhbG1vc3QgYWxsIFRXIGdhbWVzIGJ1dCB1c3VhbGx5IGl0IHdhcyBsaW1pdGVkIHRvIG5hdmllcy4uIApCb3kgY29tZSBvbiBub3cgIgpbU291cmNlOiBBY2FkZW15IG9mIE5hdHVyYWwgU2NpZW5jZXMsIFBoaWxhZGVscGhpYSwgRXZlcmV0dCBTYWxlIExpYnJhcnkgdGhlIHRleHQgYXNzb2NpYXRlZCB3aXRoIHRoZSBkcmF3aW5nLCBwcCA0MCA0MjoKVGhpcyBiZWluZyBzYWlkLCBpdCBzYWZlIHRvIHNheSB0aGF0IHJlbGlnaW9uIGdlbmVyYWxseSBwbGF5cyAiY2F0Y2ggdXAiIHdpdGggc2NpZW5jZSAob2YgY291cnNlIGFmdGVyIGFsbCB0aGUgaGVhdnkgbGlmdGluZyBoYXMgYmVlbiBkb25lKSwgc29tZXRpbWVzIGFkb3B0aW5nIHBlcmZlY3RseSByYXRpb25hbCBhbmQgcHJvdmVuIHdvcmsgZGVjYWRlcywgb3IgY2VudHVyaWVzIGxhdGUsIGFsbW9zdCBwdXJlbHkgb3V0IG9mIGVtYmFycmFzc21lbnQuLiAKQSBiaXQgY2hlYXBlciB0aGFuIHRoZSByb2d1ZSBidXQgd2hhdCBvcGluaW9ucyBJIGNvdWxkIGZpbmQgb2YgaXQgb25saW5lIHdlcmUgdmVyeSBwb3NpdGl2ZS4gS2VlbiB0byBoZWFyIGFueW9uZSBpbnB1dCB3aG8gdXNlZCBvbmUuT3RoZXJ3aXNlIGd5bSBhbmQgZml0bmVzcyAoSSB0aGluaykgc2VsbCBhIGZvcmNlIFVTQSBwb3dlciBiYXIgYnV0IEkgaGF2ZSBubyBpZGVhIGlmIGl0IGFueSBnb29kLiBBdXNzaWUgc3RyZW5ndGggc2VsbCBzb21lIHRvbyBidXQgdGhleSBhIGJpdCByaWNoIGZvciBtZSBhdCBhcm91bmQgJDgwMCBvciBzby5FZGl0OiBhcHBhcmVudGx5IHRoZSBkZWVwIGZpbmUga251cmwgb24gdGhlIEF1c3NpZSBCQiBDbyBwb3dlciBiYXIgc3RpY2tzIGxpa2Ugc2hpdCB0byBhIGJsYW5rZXQuIApWaXNpdGluZyB0aGUgc3VicmVkZGl0IG9mIGFub3RoZXIgdGVhbSB0byB0cm9sbCBvciBhbnRhZ29uaXplIHRoZW0gd2lsbCByZXN1bHQgaW4gYSBiYW4gZnJvbSAvci93YXJyaW9ycy4gCkNhcmQgdGF0dG9vcyBhcmUgdmVyeSBwb3B1bGFyIGFtb25nIHByb2Zlc3Npb25hbCBjYXJkIHBsYXllcnMgYW5kIGFueW9uZSB3aG8gZW5qb3lzIGdhbWVzIGFuZCBnYW1ibGluZy4gCkFzIHBhcnQgb2YgdGhlIHByb2dyYW0gZXhwYW5zaW9uLCBjaXR5IGhhbGwgaXMgYWRkaW5nIG1vcmUgc3RhZmYgdG8gcmVzcG9uZCB0byBjYWxscyBvdmVybmlnaHQgYW5kIGdldCB0byBwZW9wbGUgd2hvIG5lZWQgaGVscCBmYXN0ZXIsIFJpY2hhcmRzb24gc2FpZC4gClJpY2hzYWludDQyMSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KT3ZlcnZpZXcgZm9yIFpvbWJpZUJpb2xvZ2lzdApKdXN0IGhlYXIgYW5kIGZlZWwgeW91ciBicmVhdGguLiAKT2JhbWEgYXMgQ2xpbnRvbi4gQ29sbGFwc2Ugb2YgRW1waXJlcyBhbmQgZWNvbm9taWVzLi4gCiJUaGV5J3JlIHN0ZXBwaW5nIGJhY2sgaW50byB0aW1lLCIgaGUgc2F5cy4uIApJIGZlbHQgbGlrZSBoaXMgc3Bpcml0IHNvbWVob3cgc3RpbGwgbGluZ2VyZWQgaW4gaGlzIG9sZCBoYXQuIEkgdGhlbiB3ZW50IG9uIHRvIHdlYXIgdGhhdCBoYXQgYWxsIGFyb3VuZCB0aGUgd29ybGQgZm9yIGEgbGl0dGxlIG92ZXIgYSBkZWNhZGUgbXlzZWxmLiAKU3F1YWQgZW50ZXJlZCB0aGUgT2x5bXBpY3MgcmFua2VkIG5pbnRoIGluIHRoZSB3b3JsZCBhbmQgZGVmZWF0ZWQgU2VyYmlhIGluIHRoZSBzZW1pZmluYWxzIGJlZm9yZSBmYWxsaW5nIHRvIEh1bmdhcnkgaW4gdGhlIGdvbGQgbWVkYWwgZ2FtZS5Eci4gU2Nocm9lZGVyJ3MgcGxheWVycyByZWNlaXZlIHJlZ3VsYXIgY2hpcm9wcmFjdGljIGNhcmUgdG8gaW1wcm92ZSB0aGVpciBsb25nIHRlcm0gaGVhbHRoIGFuZCBhbHNvIHRvIG1heGltaXplIHRoZWlyIHBlcmZvcm1hbmNlIGF0IHRoZSBPbHltcGljIEdhbWVzLiBNZW4gdGFrZSBvbiBNb250ZW5lZ3JvLiAKZGVncmVlIG11cmRlciBpbiB0cmlwbGUgc2xheWluZyBuZWFyIExvbmRvbgpUIEFwcGx5LiAKVGhlIGFtYmlndW91cyB0ZXJtIGVsZGVybHlvZmZlcnMgbm8gdXNlZnVsIGluZm9ybWF0aW9uIGFib3V0IGFueSBvZiB0aGlzLiBJbiBtZWRpY2luZSBpdCBjYW4gZXZva2UgZmFsc2UgaWRlYXMgYWJvdXQgdGhlIHBlcnNvbiBiZWluZyBkZXNjcmliZWQgYXMgZWxkZXJseSBpbiB0aGUgbGlzdGVuZXIncyBtaW5kLCBpbnRyb2R1Y2UgdW5mYWlyIHNvY2lhbCBiaWFzZXMgYW5kIGdlbmVyYWxpc2F0aW9ucywgYW5kIGdlbmVyYXRlIGlsbCBjb25jZWl2ZWQgcG9saWNpZXMuIApUaGUgTG9uZyBZYW5nIGZvcm0gaGFzIDEwOCBtb3ZlbWVudHMsIHdoaWxlIENoZW5nIE1hbiBDaGluZydzIHZlcnNpb24gaGFzIG9ubHkgMzcsIGJlY2F1c2UgaXQgaGFzIHJlbGF0aXZlbHkgZmV3IHJlcGV0aXRpb25zLiAKIkkga2VwdCBzZWVpbmcgaXQgaW4gbXkgaGVhZC4gCkFuZCwgeW91IGtub3csIHRoZXkgcHV0IG1lIGluIGhhbmRjdWZmcyBhbmQgc2F0IG1lIGRvd24gb24gbXkgY291Y2ggYW5kIHB1dCB0aGlzIHBpZWNlIG9mIHBhcGVyIGluIGZyb250IG9mIG1lIHRoYXQgc2F5cywgIlRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgdmVyc3VzIE1vbGx5IGJsb29tLiIgUmVwb3J0ZXI6IEFuZCBqdXN0IGxhc3QgbW9udGgsIE1vbGx5IGJsb29tIG1hZGUgb25lIG1vcmUgZ2FtYmxlLiAKIm92ZXIgdGhpcyIgaXMgbm90IHNvbWV0aGluZyBtaW5vci4gMSB5ZWFyIG9yIGV2ZW4gNiBtb250aCBpcyBhIHJlYWxseSBsb25nIHRpbWUuIElmIHNoZSByZWFkeSB0byB0cmF2ZWwgYSBmdWxsIHllYXIgd2l0aG91dCBoZXIgYmYgYW5kIHNwZW5kIGFsbCBvZiBoZXIgc2F2aW5ncywgdGhlbiBpdCBuYXR1cmFsIGZvciBoaW0gdG8gdGhpbmsgdGhhdCB0aGlzIHRyaXAgaXMgbW9yZSBpbXBvcnRhbnQgdG8gaGVyIHRoYW4gdGhlaXIgcmVsYXRpb25zaGlwIGFuZCB0aGVpciBmdXR1cmUgdG9nZXRoZXIuLiAKSWtlYSB0byBwaGFzZSBvdXQgc2luZ2xlCkNvbnNpZGVyIHRoZSBwcm9ibGVtcyB3ZSd2ZSBhbHJlYWR5IGVuY291bnRlcmVkIHdpdGggdGhlIHJlbGF0aXZlbHkgbmV3IGxvdHRlcnkgaGVyZSBpbiBBcmthbnNhcy4gClBsZWFzZSBkbyBub3QgcG9zdCBwaG90b3Mgb2YgeW91ciBraWRzICAgc2F2ZSB0aGVtIGZvciB0aGUgd2Vla2x5IFdhbGxldCBXZWRuZXNkYXkgc3RpY2t5IHRocmVhZHMuLiAKSSB0eXBpY2FsbHkgbWl4IG9uIGFuIGlwYWQgd2Fsa2luZyBhcm91bmQsIG9ubHkgdXNpbmcgdGhlIGRlc2sgd2hlbiBJIG5lZWQgdGhlIGNhbnMgZm9yIHNvbWV0aGluZywgdGhlIG90aGVyIGd1eXMgdGhhdCB1c2UgaXQgaGF2ZSB0YWtlbiB0byB0aGF0IG5vdywgYnV0IHdlIGFsbCBzcGVudCB0aGUgZmlyc3QgeWVhciBvciBzbyBhdCB0aGUgZGVzayBhbGwgdGhlIHRpbWUgYmVjYXVzZSBpdCB0b29rIGF3aGlsZSB0byBmaW5kIGEgcm91dGVyIHRoYXQgdHJhdmVsZWQgd2VsbCBhbmQgc3RheWVkIHJlbGlhYmxlICh3ZSB3b3VuZCB1cCB1c2luZyB1YmlxdWl0aSwgaXQgZ3JlYXQpLiAKSlAsIENBU08sIEtLIGFuZCBNaWtleSBLbGFlc2VyIEFMTCBpbnZvbHZlZC4KQnV0IGlmIEkgV0FTIGdvaW5nIHRvIGRvIHN1Y2ggYSB0aGluZywgdGhlbiBJIHdvdWxkIGV4cGVjdCB0aGF0IHRoZSBraWRzIGluIHF1ZXN0aW9uIHdvdWxkbid0IHNjcmV3IG1lIG92ZXIgYWZ0ZXIgdGhlIGZhY3QgYW5kIGdpdmUgbWUgdGhlIHdyb25nIGFkZHJlc3MgZm9yIHRoZSBwYXJ0eS4gClJ1bm5pbmcgYmFtYm9vcyBjYW4gZWFzaWx5IGJlIGtlcHQgaW4gY2hlY2sgd2l0aCBhIGxpdHRsZSBjYXJlIHR3aWNlIGEgeWVhci4gCkkgZG9uIGNhcmUgaG93IG1hbnkgcGVyc29uYWwgZGF5cyB5b3UgdGFrZS4gWW91IHdhbm5hIHRha2UgMyB3ZWVrcyBvZmYgdG8gZ28gb24gdmFjYXRpb24/IEZpbmUuIEJ1dCBpdCB1cCB0byB5b3UgdG8gZmluZCBzdWJzdGl0dXRlcyBmb3IgdGhvc2UgY2xhc3NlcyBmb3IgMyB3ZWVrcy4gWW91IGhhdmUgYSByZXNwb25zaWJpbGl0eSB0aGF0IHlvdSBhZ3JlZWQgdG8gd2hlbiB0aGUgc2NoZWR1bGUgd2FzIG1hZGUgYW5kIHlvdSBjYW4gbWVldCB0aGF0IHJlc3BvbnNpYmlsaXR5IGJ5IGZpbmRpbmcgYSBzdWIuIE9ubHkgZXhjZXB0aW9uIGlzIGluIHRoZSBzdW1tZXIgd2hlcmUgZXZlcnlvbmUgZ2l2ZXMgbWUgZXZlcnkgdmFjYXRpb24gZGF5IHRoZXkgcGxhbiBvbiB0YWtpbmcgaW4gdGhlIGJlZ2lubmluZyBvZiB0aGUgc3VtbWVyIFttb3N0IG9mIHVzIHRha2UgMSB3ZWVrXSBhbmQgSSBidWlsZCBhIHN1bW1lciBzY2hlZHVsZSBmcm9tIHRoZXJlLgpEdXJpbmcgdGhlIGZvcm1lciBOZXcgRW5nbGFuZCBQYXRyaW90J3MgdHJpYWwgZm9yIHRoZSBhbGxlZ2VkIG11cmRlciBvZiBzZW1pIHByb2Zlc3Npb25hbCBmb290YmFsbCBwbGF5ZXIgT2RpbiBMbG95ZCwganVyb3JzIHdpbGwgaGVhciBhIHJhbmdlIG9mIHRlc3RpbW9ueSBmcm9tIHBvbGljZSwgZXhwZXJ0cywgd2l0bmVzc2VzLCBhbmQgYXNzb2NpYXRlcy4gCkkgc3VycHJpc2VkIHlvdSBzYXkgY2F1c2F0aW9uIGlzIHVzdWFsbHkgdGhlIHN0aWNraW5nIHBvaW50LCBzaW5jZSBpdCBnZW5lcmFsbHkgcHJldHR5IG9idmlvdXMgd2hlbiBhIHBoeXNpY2FsIGluanVyeSBpcyBpbnZvbHZlZCwgYnV0IG9rLiAKSWwgcydhZ2l0IGR1IHNpdGUgQXJvcGFnZSBxdWkgZXN0IGVuIGVmZmV0IHVuZSB2cml0YWJsZSBtaW5lIGRlIHJlc3NvdXJjZXMgZXQgZCdvdXRpbHMgcG91ciBxdWkgZHNpcmVudCBhcHByb2ZvbmRpciBzYSBsZWN0dXJlIGRlIGxhIEJpYmxlLi4gClRob3NlIHdobyBsaWtlIHRvIGJldCBvbiBzcG9ydHMgd2lsbCBhcHByZWNpYXRlIHRoZSBvcHBvcnR1bml0eSB0byBwbGFjZSBiZXRzIG9uIG92ZXIgMzAsMDAwIGV2ZW50cyBlYWNoIHllYXIgaW5jbHVkaW5nIGZvb3RiYWxsLCBnb2xmLCBiYXNrZXRiYWxsLCBiYXNlYmFsbCwgaG9ja2V5LCBob3JzZSByYWNpbmcsIHRlbm5pcyBhbmQgbWFueSBtb3JlLi4gCkZvciBtZSB2YXJpYW5jZSBpcyBzaG92aW5nIHR1cm4gd2l0aCBudXRzIGhhdmluZyA4OCUgb2YgZXF1aXR5LCB0dXJuaW5nIHlvdXIgZXllIGZyb20gdGhlIHNjcmVlbiBmb3IgYSBtb21lbnQgYW5kIHNjcmVhbSBhdCB0aGUgdG9wIG9mIHlvdXIgbHVuZ3MgYXMgeW91ciBiZWF1dGlmdWwgODglIGNoYW5nZXMgdG8gZHJlYWRmdWwgMCUgbmV4dCB0byB5b3VyIG5hbWUgb24gdGhlIHJpdmVyIGluIGFuIGluc3RhbnQuIEluanVyaWVzLCByZWQgY2FyZHMgYW5kIHRoZSBlZmZlY3RvZiBnb2Fsc2NhbiBsYXkgd2FzdGUgdG8gYmVzdCBsYWlkIHBsYW5zIGFzIHRoZSBnYW1lIGdvZXMgb24uLiAKSGUgd2FzIHRoZSBmaXJzdCBwZXJzb24gSSBldmVyIGJlZW4gY2xvc2UgdG8gdGhhdCBoYXMgZGllZCBhbmQgaXQgc3RpbGwgZG9lc24gZXhhY3RseSBmZWVsIHJlYWwgZXZlbiB0aG91Z2ggaXQgYmVlbiBhIGZldyB5ZWFycyBub3cuIApUaGV5IGxpdGVyYWxseSBjYW5ub3QgYWZmb3JkIHRvIGJlIG9iamVjdGl2ZSBvciB0ZWxsIHRoZSAidHJ1dGgiIHdoZW4gbWlsbGlvbnMgb2YgdGhlaXIgYWR2ZXJ0aXNpbmcgZG9sbGFycyBhcmUgaGFuZ2luZyBpbiB0aGUgYmFsYW5jZSBmcm9tIGZhc3QgZm9vZCwgcHJvY2Vzc2VkIGZvb2QgdGVsZWNvbW11bmljYXRpb25zIGFuZCBkcnVnIGNvbXBhbmllcy4KSWYgeW91IGFyZSB1c2luZyBhIHRoaWNrZXIgbWF0ZXJpYWwgc3VjaCBhcyB3b29kIG9yIGZvYW0gY29yZSwgeW91IG1heSBuZWVkIGEgc3Ryb25nZXIgYWRoZXNpdmUuIApNb3JlIHRoYW4gbGlrZWx5LCB0aG9zZSB0aGluZ3Mgd29uIGRvIHNoaXQuIHRoZXJlIGlzIHNvbWV0aGluZyB0aGV5IGNvdWxkIGRvIHdoaWNoIHdvdWxkIGJlIG1vcmUgZWZmZWN0aXZlLgpIZSBkZXNjcmliZWQgdGhpcyBpbiBvbmUgdGFsayBzcGVjaWZpY2FsbHkgd2hlcmUgaGUgdXNlcyBoaXMgc25ha2UgYW5hbG9neSBpbiB3aGljaCB0aGUgc25ha2Ugc2hvdWxkIHRyeSB0byBhdm9pZCBnb2luZyB0b28gZmFyIHRvIHRoZSBsZWZ0IChhbmQgb2ZmIHRoZSBwYXRoKSBhcyB3ZWxsIGFzIHRvbyBmYXIgb2ZmIHRoZSBwYXRoIHRvIHRoZSByaWdodC4gCihPbWl0dGluZyB0aGUgYmFjb24sIHVzaW5nIGRyaWVkIGJlYW5zLCB3aGljaCBhcmUgYWxzbyBsb3dlciBpbiBzb2RpdW0sIG9yIHN1YnN0aXR1dGluZyBjYXJyb3RzIGZvciB0aGUgcGVwcGVycyByZWR1Y2VzIHRoZSBwcmljZSBmdXJ0aGVyLCBvZiBjb3Vyc2UuKUFub3RoZXIgYXJndW1lbnQgcnVucyB0aGF0IGp1bmsgZm9vZCBpcyBjaGVhcGVyIHdoZW4gbWVhc3VyZWQgYnkgdGhlIGNhbG9yaWUsIGFuZCB0aGF0IHRoaXMgbWFrZXMgZmFzdCBmb29kIGVzc2VudGlhbCBmb3IgdGhlIHBvb3IgYmVjYXVzZSB0aGV5IG5lZWQgY2hlYXAgY2Fsb3JpZXMuQnV0IGdpdmVuIHRoYXQgaGFsZiBvZiB0aGUgcGVvcGxlIGluIHRoaXMgY291bnRyeSAoYW5kIGEgaGlnaGVyIHBlcmNlbnRhZ2Ugb2YgcG9vciBwZW9wbGUpIGNvbnN1bWUgdG9vIG1hbnkgY2Fsb3JpZXMgcmF0aGVyIHRoYW4gdG9vIGZldywgbWVhc3VyaW5nIGZvb2QncyB2YWx1ZSBieSB0aGUgY2Fsb3JpZSBtYWtlcyBhcyBtdWNoIHNlbnNlIGFzIG1lYXN1cmluZyBhIGRyaW5rJ3MgdmFsdWUgYnkgaXRzIGFsY29ob2wgY29udGVudC4gKFdoeSBub3QgZHJpbmsgOTUgcGVyY2VudCBuZXV0cmFsIGdyYWluIHNwaXJpdCwgdGhlIGNoZWFwZXN0IHdheSB0byBnZXQgZHJ1bms/KUJlc2lkZXMsIHRoYXQgYXJndW1lbnQsIGV2ZW4gaWYgd2UgYWxsIG5lZWRlZCB0byBnYWluIHdlaWdodCwgaXMgbm90IGFsd2F5cyB0cnVlLkEgbWVhbCBvZiByZWFsIGZvb2QgY29va2VkIGF0IGhvbWUgY2FuIGVhc2lseSBjb250YWluIG1vcmUgY2Fsb3JpZXMsIG1vc3Qgb2YgdGhlbSBvZiB0aGUgImhlYWx0aHkiIHZhcmlldHkuIApJZiB5b3UgYXJlIHByb25lIHRvIGdhbWJsaW5nIGFkZGljdGlvbnMsIGl0IGlzIGJlc3QgdG8gc3RheSBhd2F5IGZyb20gSW50ZXJuZXQgcG9rZXIuLiAKQWRqdXN0ZWQgdW5kZXJseWluZyBlYXJuaW5ncyAoRUJJVERBKSByb3NlIDclIHRvIFVTJDM4LjZtbG4gZnJvbSBVUyQzNi4wbWxuIGluIHRoZSBjb3JyZXNwb25kaW5nIHBlcmlvZCBvZiAyMDEyLiBCcm9rZXIgUGFubXVyZSBHb3Jkb24gaGFkIGZvcmVjYXN0IFVTJDM2bWxuLCB3aGlsZSBQZWVsIEh1bnQgZm9yZWNhc3Qgd2FzIGEgZnV6emllciBVUyQzNyAzOG1sbi4KQnV0IGJlaW5nIHRoZSBmYXRoZXIgb2YgdGhlIENvcnZhaXIgZGlkbid0IGFsd2F5cyByZXN1bHQgaW4gZ29vZCBwdWJsaWNpdHkuIEluIFVuc2FmZSBhdCBBbnkgU3BlZWQsIHB1Ymxpc2hlZCBpbiAxOTY1LCBSYWxwaCBOYWRlciB0cmFzaGVkIHRoZSBDb3J2YWlyIGFuZCB0aGUgY29ycG9yYXRlIGRlc2lnbiBwaGlsb3NvcGh5IHRoYXQgY3JlYXRlZCBpdC4gCkluIHRoZSBpbnRlbnRpb24gdG8gdHJlYXQgYW5hbHlzaXMsIG9uIGF2ZXJhZ2UsIHRoZSBsYXJnZXN0IENvYmIgYW5nbGUgZGVjcmVhc2VkIGJ5IDEuMiBpbiB0aGUgU2Nocm90aCBhbmQgaW5jcmVhc2VkIGJ5IDIuMyBpbiB0aGUgY29udHJvbCBncm91cCBvdmVyIDZtb250aHMsIGFuZCB0aGlzIGRpZmZlcmVuY2Ugd2FzIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQuIFdoZW4gb25seSBjb21wbGV0ZXJzIHdlcmUgY29uc2lkZXJlZCAobj00NCksIHRoaXMgZGlmZmVyZW5jZSB3YXMgZXZlbiBsYXJnZXIgKDQuMSkgc3VnZ2VzdGluZyB0aGUgaW1wb3J0YW5jZSBvZiBjb21wbGlhbmNlIHdpdGggdGhlIHRyZWF0bWVudC4gCkJlbGxvd2VyeSB1CkFsbCBmYWxsb3V0IDMgaXMgdG8gbWUgaXMgb2JsaXZpb24gcmVtYWRlIHdpdGggYmV0dGVyIGdyYXBoaWNzLCBhbmQgZ3Vucy4gWW91IGNhbnQgcmVhbGx5IGNvbXBhcmUgdGhlIHR3byBiZWNhdXNlIHRoZXkgYXJlIG1hZGUgYnkgMiBjb21wbGV0ZWx5IGRpZmZlcmVudCBjb21wYW55cyBhbmQgYmVzaWRlcyBpbiBmYWJsZSAyIHlvdSBjYW4gZG8gYW55dGhpbmcgd2VsbCBhbG1vc3QgaW4gZmFjdCB5b3UgY2FuIGV2ZW4gaGF2ZSBhIGtpZC4gClNBTiBBTlRPTklPIChEZWMuIDEzLCAyMDEzKSBXQkEgU1VQRVIgYW5kIElCQSBMaWdodCBIZWF2eXdlaWdodCBXb3JsZCBDaGFtcGlvbiBCZWlidXQgU2h1bWVub3YgKDEzIDEsIDggS09zKSB3ZWlnaGVkIGluIHRvZGF5IGF0IDE3NSBwb3VuZHMgZm9yIGhpcyB0aXRsZSBkZWZlbnNlIHRvbW9ycm93IG5pZ2h0IChTYXR1cmRheSwgRGVjLiBQVCkgZnJvbSB0aGUgQWxhbW9kb21lIGluIFNhbiBBbnRvbmlvLCBUZXhhcy4gS292YWNzIHRpcHBlZCB0aGUgc2NhbGVzIGF0IDE3NC40IHBvdW5kcy4KSWYgdGhlIHBsYXllciB3aW5zIG9uZSBoYW5kIGFuZCB0aWVzIHRoZSBvdGhlciwgdGhlIGdhbWUgaXMgYSBwdXNoIHdoZXJlIG5laXRoZXIgc2lkZSB3aW5zIG1vbmV5Li4gClNoZXJyeUJvYmJpbnMgdQpUaG91Z2ggaXQgd2lsbCBiZSB2ZXJ5IGRpZmZpY3VsdCB3ZSBrbm93IHRoYXQgd2Ugd2lsbCB3aW4gaW4gdGhlIGVuZC4gClN1Y2ggYSBtb3ZlIHdvdWxkIGdpdmUgdGhlIGFwcG9pbnRlZSB0aGUgYWR2YW50YWdlIG9mIGluY3VtYmVuY3kgd2hlbiBmYWNpbmcgdm90ZXJzIGZvciB0aGUgZmlyc3QgdGltZS5Xb29kYnVyeSBzYWlkIGhlJ3MgaGVhcmQgdGhlIHJ1bW9ycywgYnV0IHRoZXkgYXJlbid0IHRydWUuIkkgaW50ZW5kIHRvIHNlcnZlLCIgaGUgc2FpZC4gIkkndmUgbmV2ZXIgaGFkIGFueSBjb252ZXJzYXRpb25zIHdpdGggYW55Ym9keSBhYm91dCB0aGF0IGF0IGFsbC4gCk5vciB3YXMgdGhpcyB0aGUgb25seSBmb3JjZSBhdCBwbGF5IHdpdGggcmVnYXJkIHRvIHVzZSBvZiBsYW5ndWFnZSBpbiBlYXJseSAyMHRoIGNlbnR1cnkgQ2hpbmEuIApUaGUgZ2VuZXJhbHMgd2hvIHJ1biBJU0kgaGF2ZSB3b3JrZWQgd2l0aCB0aGUgVGFsaWJhbiBmb3IgbW9yZSB0aGFuIDE1IHllYXJzLiAKV29yayBoYW5kIGluIGhhbmQsIE11c3Nvc2FpZC4gRm9yIFRvdHMgZG9lcyBhIGdvb2Qgam9iIGNvbGxlY3RpbmcgdG95cywgYnV0IGRvZXNuIHJlYWxseSBoYXZlIGEgZGlzdHJpYnV0aW9uIHN5c3RlbS4gCktlZXAgYW4gZXllIG9uIENyYWlnc2xpc3QgaW4geW91ciBhcmVhLCB0b28uIFlvdSdkIGJlIHN1cnByaXNlZCB3aGF0IHBvcHMgdXAuIApPbiB0aGUgdHVybiwgVmlsIGJldHMsIEhlcm8gY2FsbHMuIElmIHRoZSBoZXJvIGhhZCBhIGZsdXNoIG1hZGUgb24gdGhlIHR1cm4sIGFuZCBpdCBub3QgdGhlIG51dCBmbHVzaCAod2hpY2ggaGFzIHRoZSBBZCksIGhlIHdvdWxkIGhhdmUgcHJvYmFibHkgcmFpc2VkIGhlcmUgYXMgYW5vdGhlciBkaWFtb25kIGNvdWxkIGtpbGwgaGlzIGFjdGlvbiwgaGUgd2FudHMgdG8gZ2V0IHZhbHVlIGZyb20gYSBBZFh4IGRyYXcuIElmIGhlIGRpZCBoYXZlIHRoZSBudXQgZmx1c2gsIHRoZXJlIG5vdCBtdWNoIHJlYXNvbiBub3QgdG8gc2xvd3BsYXksIHRoaXMgaXNuIE9tYWhhLCBhbmQgc2V0cyBhcmUgcmFyZSwgc28geW91IGNvdWxkIHByb2JhYmx5IGJldCBwcm9maXRhYmx5IG9uIHRoZSByaXZlciBldmVuIGlmIHRoZSBib2FyZCBwYWlyZWQsIHNvIGEgY2FsbCBvbiB0aGUgdHVybiBpcyBjb25zaXN0YW50IHdpdGggYW4gQWRYeCBvciBBZFhkIGhhbmQuIApCeSB5b3VyIGxvZ2ljLCBhIGxpbmUgb2YgY2FycyBjb21pbmcgYmVoaW5kLCBhbmQgdGhlbiBoYXZpbmcgdG8gc2xvdyBkb3duLCB3aWxsIGFsbCBpbnN0YW50bHkgbW92ZSBvdmVyIChiZWNhdXNlIHRoZXkgYXJlIG5vdyBob2xkaW5nIHVwIHRoZSB0cmFmZmljIGJlaGluZCB0aGVtKSBzdWNoIHRoYXQgdGhlIGJhY2sgY2FyIHBhc3NlcyBldmVyeW9uZSAoaGUncyB0aGUgb25seSBvbmUgbm93IG5vdCBob2xkaW5nIHVwIHRyYWZmaWMpLiBMaWtlIG9yIG5vdCwgdGhlIGxlZnQgbGFuZSBpcyBhIFRSQVZFTCBsYW5lLiBZb3UgZ2V0IGluIGl0IHRvIHRyYXZlbC4gCkJTYyAoSG9ucykgU3BvcnQgUmVoYWJpbGl0YXRpb24KQ2l4aW45NyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClRoZSBwcm9ibGVtIGlzLCBhcyBzb29uIGFzIEkgY29tbWl0IHRvIHRoZSBicmFuY2gsIG15IElERSBubyBsb25nZXIga25vd3Mgd2hpY2ggZmlsZXMgaGF2ZSBiZWVuIG1vZGlmaWVkLi4gCiJPYnZpb3VzbHkgZnJvbSBteSBwb2ludCBvZiB2aWV3IGl0IHdvdWxkIGJlIHByZWZlcmFibGUgaWYgYWxsIE9uZSBOYXRpb24gc2VuYXRvcnMgcmVtYWluZWQgY29tbWl0dGVkIHRvIHRoZSBjb25zZW5zdXMgdGhhdCB3ZSByZWFjaGVkLCIgaGUgdG9sZCBTa3kgTmV3cyBvbiBGcmlkYXkuIApUaGUgcGFwYXNhbiBnaXZlcyB5b3UgYSB3aGljaCBleHBsYWlucyB3aGF0IGdvZXMgb24uIG9uZSBndXkgYW5kIHR3byB3b21lbi4gQW5kLCB5ZXMsIHRoZSB3b21lbiBhcmUgKG9yIGF0IGxlYXN0IGJlaGF2ZSBhcykgYmlzZXh1YWwuIFNvIHlvdSBtdXN0IHRha2UgYSBtaW5pbXVtIG9mIHR3byBnaXJscy4KSSBoYXZlIHRvbGQgbXkgZmVsbG93IGpvdXJuYWxpc3RzLCBjb2xsZWFndWVzIGluIG1lZGlhIHJlbGF0aW9ucywgYW5kIGV2ZW4gR2xvYmUgZWRpdG9ycyBhbmQgc3RhZmYgdGhhdCBJIHRha2UgQ29ybmVyIEtpY2tzIHZlcnkgc2VyaW91c2x5LiAKV2l0aCBhIGdvb2QgcG9rZXIgb2RkcyBjYWxjdWxhdG9yLCB5b3UgYXJlIGNhcGFibGUgb2YgYmVpbmcgYWJsZSB0byBkZXRlcm1pbmUgd2hlbiB0aGUgcmlnaHQgYW5kIHdyb25nIHRpbWVzIHRvIHBsYXkgYSBoYW5kIGFyZSBiYXNlZCBvbiBhIGRldmVsb3BpbmcgdW5kZXJzdGFuZGluZyBvZiB0aGUgZ2FtZS4gQnkgdXNpbmcgYSBwb2tlciBvZGRzIGNhbGN1bGF0b3IsIHlvdSBhcmUgbm90IGNoZWF0aW5nLCBidXQgaW5jcmVhc2luZyB5b3VyIGtub3dsZWRnZSwgYW5kIHRoZW4gdXNpbmcgdGhhdCB0byBiZWNvbWUgYSBiZXR0ZXIgcG9rZXIgcGxheWVyLiBIZXJlIGFyZSBhIGZldyBkaXN0aW5jdCBhZHZhbnRhZ2VzIG9mIHBsYXlpbmcgd2l0aCBhIHBva2VyIG9kZHMgY2FsY3VsYXRvciAoYnV0IGtlZXAgaW4gbWluZCB0aGVyZSBhcmUgc29tZSBwb3NzaWJsZSBkcmF3YmFja3MsIHRvbyk6IE9kZHMgb2YgdGhlIFBvdDogRXZlbiB0aGUgYmVzdCBwbGF5ZXIgd2hvIGhhcyBmdWxsIGtub3dsZWRnZSBvZiBwb2tlciBzdHJhdGVneSBjYW4gZmluZCBoaW1zZWxmIGF0IGEgbG9zcyB3aGVuIGl0IGNvbWVzIHRvIGNhbGN1bGF0aW5nIG9kZHMgZm9yIGVhY2ggbmV3IGhhbmQsIGFuZCBjb21wdXRpbmcgdGhhdCB3aXRoIGhvdyBpdCBhZmZlY3RzIHRoZSBvZGRzIG9mIHRoZSBwb3QuIApZb3UgY2FuIGNoYW5nZSB0aGUgc2V0dGluZ3MgaW4geW91ciBicm93c2VyIHRvIHJlZnVzZSBjb29raWVzOyB5b3UgY2FuIGFsc28gZGVsZXRlIGNvb2tpZXMgdXNpbmcgdGhlIHRvb2xzIGluIHlvdXIgYnJvd3Nlci4gSG93ZXZlciBpbiBkb2luZyBzbyB5b3UgbWF5IGJlIHVuYWJsZSB0byBhY2Nlc3MgY2VydGFpbiBmZWF0dXJlIG9mIG91ciB3ZWJzaXRlIGFuZCBvdXIgd2Vic2l0ZXMgbWF5IG5vdCBvcGVyYXRlIGNvcnJlY3RseSBpbiB5b3VyIGJyb3dzZXIuIEluZm9ybWF0aW9uIG1heSBiZSBzaGFyZWQgd2l0aCB0aGlyZCBwYXJ0aWVzIHdobyBhcmUgdW5kZXIgY29udHJhY3QgdG8gYWN0IGZvciB1cy4uIApOVEEuIFRoZXJlIHNvbWV0aGluZyBvZmYgYWJvdXQgRW1pbHkgYWN0aW9ucywgYmFzZWQgb24geW91ciBkZXNjcmlwdGlvbi4gCkl0IGJldHRlciBhZnRlciB5b3UgZGV2ZWxvcCBhIHN0cm9uZyBpbnN0aW5jdCB0byBuZXZlciwgZm9yIGFueSByZWFzb24sIHRvdWNoIGFueSBwYXJ0IG9mIHlvdXIgb3duIGZhY2Ugd2l0aG91dCBmaXJzdCBzY3J1YmJpbmcgaW4gbGlrZSBhIHN1cmdlb24uIElmIHlvdSBrZWVwIHRoZSBmYW1pbHkgdG9vdGhicnVzaGVzIHRvZ2V0aGVyIG9uIHRoZSBjb3VudGVyLCB5b3UgYWxzbyB3YW50IHRvIGhpZGUgeW91cnMgYXdheSwgcHJlZmVyYWJseSBiZWhpbmQgYSBjbG9zZWQgZG9vciwgYW5kIGtlZXAgeW91ciBvd24gc2VjcmV0IHR1YmUgb2YgdG9vdGhwYXN0ZS4gRXZlbiB0aGVuIHRoZXkgZmluZCB3YXlzIHRvIGdldCB5b3UsIGxpa2Ugc25lZXppbmcgZGlyZWN0bHkgYXQgdGhlIHNpZGUgb2YgeW91ciBoZWFkIGFmdGVyIHlvdSBwaWNrIHRoZW0gdXAuIAoiSXQncyBjcmF6eSwiIEphbWVzIHNhaWQuICJNeSBoaWdoIHNjaG9vbCBiZXN0IGZyaWVuZHMsIHRoZXkgdGV4dCBtZSBhbmQgdGhleSBjYW4ndCBiZWxpZXZlIGl0LiBJIGNhbid0IGJlbGlldmUgaXQgZWl0aGVyLiBXZSByZW1lbWJlciB3YWxraW5nIHVwIGFuZCBkb3duIHRob3NlIEFrcm9uIHN0cmVldHMgd2l0aCBhIGJhc2tldGJhbGwsIGp1c3Qgc2luZ2luZywgJ0kgd2FubmEgYmUsIEkgd2FubmEgYmUsIEkgd2FubmEgYmUgbGlrZSBNaWtlLiInClRoaXMgY29uc2lzdGVkIG9mIHVzIGdldHRpbmcgYSB0YXhpIGF0IHRoZSBmcm9udCBkb29yIG9mIHRoZSBob3RlbC4gCkhvdyBtdWNoIHRpbWUgbXVzdCBpIGludmVzdCBpbiB0IHNwbGluZXMgdG8gYmVjb21lIGFkZXB0IGF0IGl0PyBJIHRoaW5rIG15IC4gCkZvciBzcGxpdHRpbmcsIGFkZCBhbm90aGVyIGJldCBhbmQgcG9pbnQgMiBmaW5nZXJzLiBGb3IgZG91YmxpbmcgZG93biwgYWRkIGFub3RoZXIgYmV0IHRvIHlvdXIgYmV0dGluZyBib3ggYW5kIHBvaW50IDEgZmluZ2VyLlsxXS4gCllvdSBrbm93LCAxMDAlIHdvb2wgZmVsdCwgc29saWQgb2FrIHdvb2QgaW5sYXkgYW5kIGZpbmlzaCwgYW5kIGVub3VnaCBjdXBob2xkZXJzIHRvIGtlZXAgdGhlIGFkdWx0IGJldmVyYWdlcyBjb21pbmcgZm9yIGhvdXJzLiBGb3IgYmVpbmcgcHJvZmVzc2lvbmFsbHkgbWFkZSwgdGhlIFRleGFzIEhvbGQnZW0gUG9rZXIgVGFibGUgd2l0aCBQZWRlc3RhbCBMZWdzIHdhcyBwZXJmZWN0IGZvciBvdXIgbGl0dGxlIGdldCB0b2dldGhlciBhIGNvdXBsZSB0aW1lcyBhIG1vbnRoLiAKVGhlIHNtYWxsIHRvd24gb2YgWWFybW91dGggaGFzIGFsd2F5cyBoYWQgYSBzdG9wIGJ1dCB0aGUgbXVjaCBsYXJnZXIgbmVpZ2hib3VyaW5nIHZpbGxhZ2Ugb2YgRnJlc2h3YXRlciBkaWQgbm90IHVudGlsIDIwMTguIApTYWZldHkgd2lzZSBJIG5vdCB3b3JyaWVkIGF0IGFsbCBhYm91dCBnb2luZyB0byBmYWlsdXJlIG9uIGFueSBvZiB0aGUgZXhlcmNpc2VzIGV4Y2VwdCBtYXliZSBhIGRlYWRsaWZ0IChJIGhhdmUgZXhwZXJpZW5jZSBnb2luZyB0byBmYWlsdXJlIHNhZmVseSBvbiB0aGUgb3RoZXIgMykuLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIvam9yZGFudXNlIHRoZSBmb2xsb3dpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdG8gbmFycm93IHlvdXIgcmVzdWx0czpzZWUgdGhlIHNlYXJjaCBmYXEgZm9yIGRldGFpbHMuCkkgaGF2ZSB0aGUgdGVzdG8gNTU3cy4gQnkgZmFyIHRoZSB3b3JzdCBpIGhhdmUgZXZlciB1c2VkLiBIb29rIGhhcyBmYWxsZW4gb2ZmIHR3aWNlIGFuZCBpbXBvc3NpYmxlIHRvIGdldCBnZXQgYmFjayBvbi4gCk9yIGxhIHJ1c3NpdGUgc3VyIGxlIHBsYW4gYWNhZG1pcXVlIGVzdCByZWxpZSBhdSBiaWVuIHRyZSBzb2NpYWwuLiAKTXkgcmVzcG9uc2UgY29tZXMgb2ZmIGFzIHNuYXJreSBwcm9iYWJseSBiZWNhdXNlIEkgd3JvdGUgaXQgYXQgYXJvdW5kIDM6MzAgYW0gYW5kIGNvdWxkIG5vdCBzbGVlcCBzbyBpdCB3YXMgbW9yZSBzdHJlYW0gb2YgY29uc2Npb3VzbmVzcyB0aGFuIGFuIGVsb3F1ZW50IHJlc3BvbnNlLiAKVGhlIE5DQ0Egd2lsbCBwcm92aWRlIGEgbGlzdCBvZiB0aGUgY2VydGlmaWNhdGUgaG9sZGVycyB0byBhbnlib2R5IHNlZWtpbmcgYSBxdWFsaWZpZWQgcHJhY3RpdGlvbmVyLi4gClE6IFlvdSd2ZSBzYWlkIHlvdSB3b24ndCBiZSBhIGx1eHVyeSB0YXggdGVhbS4gRG9lcyB0aGF0IG1lYW4geW91J2QgbmV2ZXIgZ28gaW50byBsdXh1cnkgdGF4PwoiVGhlcmUgYXJlIGxvdHMgb2YgaXNzdWVzIGludGVybmFsbHkgdGhhdCB3ZSBuZWVkIHRvIGFkZHJlc3MuIEkgYW0gbm90IHByZXBhcmVkIHRvIHRhbGsgYWJvdXQgdGhlbSBhdCB0aGlzIG1vbWVudCBhbmQgdGltZS4gCkFyb21hdGhlcmFweSBnaWZ0cyBzaG91bGQgY29udGFpbiBlc3NlbnRpYWwgb2lscy4gRXNzZW50aWFsIG9pbHMgYXJlIGRlcml2ZWQgZGlyZWN0bHkgZnJvbSBwbGFudHMgYW5kIGFyZSBleHRyZW1lbHkgY29uY2VudHJhdGVkLCBwb3dlcmZ1bCBhbmQgYWN0dWFsbHkgaGF2ZSBxdWFsaXRpZXMgdGhhdCBjYW4gaGVhbCwgYW5kL29yIGNoYW5nZSBlbW90aW9ucy4gQXMgeW91IGFyZSBzZWFyY2hpbmcgZm9yIHRoZSBwZXJmZWN0IGFyb21hdGhlcmFweSBnaWZ0LCB5b3UgbWF5IGZpbmQgdGhhdCBtYW55IHByb2R1Y3RzIGFjdHVhbGx5IHVzZSBmcmFncmFuY2VzIGFuZCBjbGFpbSB0byBiZSBhcm9tYXRoZXJhcHV0aWMuIEhvd2V2ZXIsIHByb2R1Y3RzIHRoYXQgdXNlIGZyYWdyYW5jZSBhcmUgbm90IGFyb21hdGhlcmFwdXRpYyBzaW5jZSBmcmFncmFuY2VzIGFyZSBjaGVtaWNhbGx5IGRlcml2ZWQuIEZvciBhcm9tYXRoZXJhcHkgdG8gd29yaywgeW91IG11c3QgYWx3YXlzIHVzZSBlc3NlbnRpYWwgb2lscy4KSSBkb24ga25vdyBob3cgbG9uZyBpdCB0b29rLiAKQSBncmVhdCBjYXNpbm8gd2lsbCBoYXZlIG1hY2hpbmVzIHdpdGggc2FtZSBzcGVlZCBhbmQgdGhhdCB0aGVzZSBtYWNoaW5lIHdpbGwgYmUgZmFzdC4gQWdhaW4gZG8geW91ciByZXNlYXJjaCwgeW91IGNhbiBhc2sgY3VzdG9tZXIgc2VydmljZSBmb3IgdGhlIGV4YWN0IHNwZWVkIG9mIHRoZSBtYWNoaW5lIHNvIHlvdSBjYW4gZG8gc29tZSBjb21wYXJpc29uLiAKTGlrZSBCZXRzb2Z0IEdhbWluZywgdGhleSBoYXZlIGdvdCBhbGwgdGhlIG5lY2Vzc2FyeSBkcml2ZXIncyBsaWNlbnNlIGluIG9yZGVyIHRvIHJ1biB0aGUgcG9zaXRpb25pbmcuIEl0IGlzIHJlZ3VsYXRlZCBvdmVyIHRoZSBzdHJpbmdlbnQgcHJvY2VkdXJlcyBpbiB0aGUgQWxkZXJuZXkgR2FtYmxpbmcgQ29udHJvbCBDb21taXNzaW9uIGZlZSBhbmQgb2ZmZXJzIHNvZnR3YXJlIHJlbGlhYmlsaXR5IHRvIGVuc3VyZSB0aGF0IHlvdXIgY29tcHV0ZXIgd2l0aCB5b3VyIGRldGFpbHMgYXJlIGFsd2F5cyBzYWZlci4uIAoxMC4gVGhlIGxhYiBhbmFseXNpcyBvZiBbQUEvRVBBXSBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBpZiB0aGUgcGF0aWVudCBpcyB0YWtpbmcgbW9yZSB0aGFuIDcsNTAwIG1nIG9mIEVQQSArIERIQSBwZXIgZGF5LgpBZGQgdGhlIG11c2hyb29tcyBhbmQgdGh5bWU7IGFuZCBzZWFzb24gd2l0aCBzYWx0IGFuZCBwZXBwZXIuIApZZXMgQlROIGhhcyBzb21lIFFRIFRUIGFuZCBKVHMgaW4gaGlzIHJhbmdlIGJ1dCBJIHNlZW4gcGxheWVycyBkbyB0aGlzIHdpdGggaGFuZHMgbGlrZSBBUSwgQVQgQUpzLCA5OSA3NywgYW5kIHNvbWUgc3VpdGVkIGNvbm5lY3RvcnMuIApPcHRpb24gTnVtYmVyIE9uZSAgIEJlIHlvdXIgb3duIFZhbGVudGluZS4gClRoZXkgZmluZCBhIGdpYW50LCBzbGVlcGluZyBvZ3JlLiAKSGUgaGFkIGFsc28gd29uIHRoZSAyMDAxIFJhbW9uIE1hZ3NheXNheSBBd2FyZCBmb3IgY29tbXVuaXR5IGxlYWRlcnNoaXAuU2hpdiBTZW5hIGNoaWVmIFVkZGhhdiBUaGFja2VyYXksIHdob3NlIHBhcnR5IGlzIGFuIGFsbHkgb2YgdGhlIEJKUCBhdCB0aGUgQ2VudHJlIGFuZCBpbiBNYWhhcmFzaHRyYSwgaGFkIG9uIFN1bmRheSBleHRlbmRlZCBoaXMgc3VwcG9ydCB0byBIYXphcmUsIHVyZ2luZyBoaW0gdG8gZW11bGF0ZSBzb2NpYWxpc3QgbGVhZGVyIEpheWFwcmFrYXNoIE5hcmF5YW4gYW5kIGxlYWQgYW4gYWdpdGF0aW9uIGFnYWluc3QgY29ycnVwdGlvbi4gCkkgcmVjb21tZW5kIHNvbWUgcG9wIHNjaWVuY2UgYm9va3MgdGhhdCBtYWtlIGJpZyBwaHlzaWNzIGNvbmNlcHRzIGVhc3kgdG8gdW5kZXJzdGFuZC4gSXQgZmFzY2luYXRpbmcgc3R1ZmYsIGFuZCBpZiB0aGUgY2hhcmFjdGVyIGxvdmVzIHBoeXNpY3MsIHRoYW4gc2hlIG1ha2UgZXZlcnkgZGF5IGNvbm5lY3Rpb25zIHRvIHBoeXNpY3MgaWRlYXMgYWxsIHRoZSB0aW1lLiBBIEJyaWVmIEhpc3RveSBvZiBUaW1lIGJ5IEhhd2tpbmcsIGFueXRoaW5nIGJ5IE5laWwgRGVHcmFzc2UgVHlzb24sIG9yIENhcmwgU2FnYW4gd291bGQgYmUgbXkgdG9wIHBpY2tzIGFuZCBhcmUgcHJvYmFibHkgaW4geW91ciBsb2NhbCBsaWJyYXJ5IGFuZCBhcmUgZmFpcmx5IHF1aWNrIHJlYWRzIGFzIHdlbGwuIE1heWJlIHRyeSB0byBmaW5kIGEgYmxvZyBvciB0d2l0dGVyIGFjY291bnQgb2YgYSByZWFsIHBoeXNpY3Mgc3R1ZGVudC9wb3N0IGdyYWQuCkZpcnN0LCBtYWtlIGEgYnVkZ2V0IGFuZCBzdGljayB0byBpdC4gCkRhbmllbCBBLiBIZWxtaW5pYWsgYWdyZWVzIHRoYXQgdGhlIHdvcmQgcGFpcyBjb3VsZCBoYXZlIGEgc2V4dWFsIG1lYW5pbmcuIFRoZW9kb3JlIFcuIApBbGwgcGxheWVycyBhcmUgaGlnaGx5IHJlbHVjdGFudCB0byBtYWtlIG1ham9yIGNvbmNlc3Npb25zLCBzYWlkIE9za2FyIE5pZWRlcm1heWVyIG9mIEJlcmxpbidzIEZyZWUgVW5pdmVyc2l0eS4KSXQganVzdCB0aGF0IEkgYWxzbyBoYXZlIExHQlQgS29yZWFuIGZyaWVuZHMgYXMgd2VsbCwgYW5kIGl0IGJyZWFrcyBteSBoZWFydCB0byBzZWUgdGhlbSBnbyB0aHJvdWdoIGFzIG11Y2ggaGFyZHNoaXAgYXMgdGhleSBkby4gCllvdSBlbmQgdXAgd2l0aCB0aGUgZXhhY3Qgc2FtZSB0aGluZyBhcyByZWFsIG1lYXQuIFRoZXJlIGFyZSBubyBoaWRkZW4gaW5ncmVkaWVudHMgb3IgY2hlbWljYWxzIHRoYXQgY291bGQgY3JlYXRlIHVuY2VydGFpbiBsb25nIHRlcm0gZWZmZWN0cy4uIApHb29kIHBvc3QuIEhhdmUgc29tZSBnb2xkLCBpdHMgb24gdGhlIHdheS4uIApXZWxsIGNvbnNpZGVyaW5nIHRoZSBmYWN0IHRoYXQgSSBzZWVuIHZhc3RseSBtb3JlICJNWSBCSUtFIElTIEJFVFRFUiBUSEFOIFlPVVJTISBZT1VSIEJJS0UgSVMgU0hJVCIgYmVoYXZpb3IgZnJvbSBOb24gSGFybGV5IHJpZGVycyB0aGFuIEhhcmxleSByaWRlcnMuIEVzcGVjaWFsbHkgdGhlIHBlb3BsZSB3aG8gZmVlbCBsaWtlIGl0IG5lY2Vzc2FyeSB0byBicmluZyB1cCBob3cgaGFwcHkgdGhleSBhcmUgdGhhdCB0aGV5IERJRE5UIGJ1eSBhIGhhcmxleSwgYW5kIGhvdyBoYXJsZXkgaXMgc28gInNoaXQiIEkgZ29ubmEgZGlzYWdyZWUuLiAKV2FudCB0byBnZXQgb24gVGFvYmFvLCBidXQgdXR0ZXJseSBiZXdpbGRlcmVkIGJ5IHRoZSBzaXRlPyBDaGVjayBvdXQgdGhlIFRhb2JhbyBmaWVsZCBndWlkZSwgYW5kIGZpbmQgb3V0IGhvdyB0byBzZXQgdXAgeW91ciBBbGlwYXkgYWNjb3VudC4KVGhpcyBhcmMgaXMgYmFzZWQgaW4gYSByZWFsIHBsYWNlIHdoZXJlIHVubmF0dXJhbCwgbWFnaWNhbCB0aGluZ3MgYXJlIGhhcHBlbmluZy4gVGhlIGNoYXJhY3RlcnMgYXJlIG1lYW50IHRvIGJlIGJhc2VkIGluIHJlYWxpdHkgd2l0aCB3ZWlyZCBtYWdpYyBzdHVmZiBiZWluZyBtaXhlZCBpbi4gCkR1cmluZyBhbmQgYWZ0ZXIgdGhlIGxhdW5jaCwgSk5hbmRleiByYWlzZWQgaGlzIHZvaWNlIGFib3V0IHNvbWUgaXNzdWVzIHdpdGggaG93IHRoZSBjb21wYW55IHdhcyBiZWluZyBvcGVyYXRlZC4gSGUgcmFpc2VkIGhpcyB2b2ljZSBhYm91dCBpdCBhbmQgd2FzIHNodXQgZG93biBtdWx0aXBsZSB0aW1lcy4gQWZ0ZXIgdGhpcyBmYWxsaW5nIG91dCBoZSBmb3VuZCBvdXQgaGUgY291bGQgbGVhdmUgdGhhdCBlbnZpcm9ubWVudCBhbmQgZGVjaWRlZCB0byBkbyBzbyByYXRoZXIgdGhhbiBzcGVuZCBhIHllYXIgcGx1cyBwcm92aWRpbmcgbGVzcyB2YWx1ZSB0aGFuIHdoYXQgaGUgdGhvdWdodCBwb3NzaWJsZS4uIApIZSBjb21lcyBvZmYgYXMgaG9uZXN0IGFuZCBzaW5jZXJlLCB2ZXJ5IGluIHR1bmUgd2l0aCBoaXMgYXBwcm92YWwgcmF0aW5nLCBhbmQgc3RhdW5jaGx5IGNvbW1pdHRlZCB0byBhbiBldmVyIGV4cGFuZGluZyBzb2NpYWxpc3QgZm9ybSBvZiBnb3Zlcm5tZW50IHJlZ2FyZGxlc3Mgb2YgbWl4ZWQvZGlzYXBwb2ludGluZyByZXN1bHRzIHRodXMgZmFyLiBJIHRoaW5rIHRoZXJlIGFyZSBhIGxvdCBvZiBpc3N1ZXMgdGhhdCByZXF1aXJlIGhpcyBhdHRlbnRpb24gdGhhdCBoZSBkb2VzbiBoYXZlIHRpbWUgZm9yIGJlY2F1c2UgaGUgaXMgZm9jdXNlZCBvbiByZXVuaWZpY2F0aW9uIGF0IGFsbCBjb3N0cy4gCkknbSByZWFsbHkgZW5qb3lpbmcgc2Vhc29uIDIuIERpc2NvIHdhcyBteSBnYXRld2F5IGludG8gVHJlayBsYXN0IHllYXIuIApUaGlzIGlzIHF1aXRlIGFuIG9sZCB0aGVvcnksIGFuZCBoYXMgYmVlbiBzaG93biB0byBiZSBpbmNvcnJlY3QuIFVuZm9ydHVuYXRlbHkgaXQgaXMgc3RpbGwgdGF1Z2h0LCBldmVuIGF0IGEgdGVydGlhcnkgdW5kZXJncmFkdWF0ZSBsZXZlbC4uIApJIHdhcyByZWFsbHkgc2hvY2tlZCBieSBob3cgbXVjaCB0aGV5IGVsYWJvcmF0ZWQgb24gZXZlcnl0aGluZy4gSSBrbm93IHRoZXkgYmlnIG9uIHRyYW5zcGFyZW5jeSBvbiBDQ1RWIGFuZCBJIHVzdWFsbHkgYXBwcmVjaWF0ZSBob3cgYmx1bnQgdGhleSBhcmUgYWJvdXQgaW5kdXN0cnkgdGhpbmdzLCBidXQgdGhpcyBzZWVtZWQgc2hvY2tpbmdseSB1bnByb2Zlc3Npb25hbCwgZXZlbiBmcm9tIEJyZXR0IHdobyBiaWcgb24gdGhlIHdob2xlICJicnV0YWwgaG9uZXN0eSIgdGhpbmcuIApJbiBmYWlybmVzcywgdGhlIFJlc3QgQ3VyZSB3YXNuJ3Qgc3RyaWN0bHkgbGltaXRlZCB0byB3b21lbi4gCkJlZm9yZSBpdCBpcyBvZiBtdWNoIHVzZSwgY3J1ZGUgb2lsIG11c3QgYmUgcHJvY2Vzc2VkIGludG8gcGV0cm9sZXVtIHByb2R1Y3RzLCBhbmQgdGhpcyBpcyB3aGVyZSByZWZpbmVyaWVzIGNvbWUgaW4uIFNvIGJhY2sgdG8gb3VyIG1hcnRpbmkgZXhhbXBsZTogRHVyaW5nIHRoZSByZWZpbmluZyBwcm9jZXNzLCB0aGUgdm9ka2EgYmVjb21lcyBhIG1hcnRpbmkgYXMgb3RoZXIgaW5ncmVkaWVudHMgZ2V0IG1peGVkIGluICAgb3IgY3J1ZGUgb2lsIGJlY29tZXMgZ2FzLiAKQmxhY2twaXhpZTM5NCAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjAgZGF5cyBhZ28KQ0NUViBjb25maXJtZWQgaGUgZGlkIGp1bXAsIGFuZCBqdXN0IGhhdmUganVzdCBiZWVuIGluY3JlZGlibHkgbHVja3kgd2l0aCB0aGUgZXhhY3QgcG9zaXRpb24gaGUgaGl0IHRoZSBncm91bmQuIApSaWRpY3Vsb3VzbHkgY29tcGV0aXRpdmUsIGV4cGVuc2l2ZSwgYW5kIHRpbWUgY29uc3VtaW5nIChzaW5jZSB0aGUgb25seSB3YXkgdG8gYmUgZ29vZCBpcyB0aHJvdWdoIHByYWN0aWNlKSB3aXRoIG1pbmltYWwgcGF5b2ZmLiBBIGxvdCBvZiByZXF1aXJlZCBuZXR3b3JraW5nLCB3aGljaCB1c3VhbGx5IG1lYW5zIGdvaW5nIHRvIGV2ZW50cywgdGFsa2luZyB0byBwZW9wbGUsIGRyZXNzaW5nIG5pY2UuIApFbmpveSBjdXRlIGNvbXBhbmlvbnMgYW5kIHlvdXIgdGltZSB3aXRoIFB1c2FuIGVzY29ydCBnaXJscy4gCkkgZG9uJ3QgcmVhbGx5IHBsYXkgbWFyaW8sIGJ1dCB5b3UgYXJlIGRhc2ggYXR0YWNraW5nIHRvbyBtdWNoLiBZb3UgcHJvYmFibHkgc2hvdWxkIGJlIHRyeWluZyB0byBkYXNoIGFuZCB0aGVuIGdvaW5nIGZvciBhIGdyYWIgYW5kIHRoZW4gdHJ5aW5nIGZvciBjb21ib3MgZnJvbSB0aHJvd3MuIApTY2llbnRpc3RzIGNhbiBtYWtlIHRoZW0gdHVybiBsZWZ0IG9yIHJpZ2h0LCBldmVuIGNsaW1iIG9iamVjdHMuIAooU291cmNlOiBtZWRpY2FsIHNjaG9vbCBoYXMgYWx3YXlzIGJlZW4gYSBiaWcgcGFydCBvZiBPdGFnbyBVbml2ZXJzaXR5LCBhbmQgZm9yIG1hbnkgeWVhcnMgaXQgd2FzIHRoZSBvbmx5IHBsYWNlIGluIE5ldyBaZWFsYW5kIHdoZXJlIGRvY3RvcnMgY291bGQgYmUgdHJhaW5lZC4gCk9ic2VydmF0aW9uc1RoZSByZXF1aXJlbWVudHMgZm9yIHRoZSBpbml0aWFsIG9ic2VydmF0aW9ucyBhcmUuIG5vbmUuIFRoZSBvYnNlcnZhdGlvbnMgYXJlIHdoYXQgdGhlIGluaXRpYWwgaHlwb3RoZXNpcyBpcyBiYXNlZCBvbiBhbmQgdGhlIHByb2Nlc3Mgb2YgdGhlIHNjaWVudGlmaWMgbWV0aG9kIGVuc3VyZXMgdGhhdCB0aGlzIGh5cG90aGVzaXMgZG9lc24ndCBiZWNvbWUgYW4gYWNjZXB0ZWQgdGhlb3J5IHdpdGhvdXQgbWVhc3VyaW5nIHVwIHRvIHRoZSByZXN0IG9mIHRoZSByZXF1aXJlbWVudHMuIEhvd2V2ZXIsIHByb3BlciBvYnNlcnZhdGlvbnMgKHNlZSB0aGUgc2VjdGlvbiBvbiAnUHJlZGljdGlvbiBhbmQgRXhwZXJpbWVudCcpIGFyZSBtb3JlIGxpa2VseSB0byB5aWVsZCBhIHVzZWZ1bCBoeXBvdGhlc2lzLCBhbmQgcHJvcGVybHkgcmVjb3JkZWQgb2JzZXJ2YXRpb25zIGFuZCBhIGxvZ2ljYWwgZXhwbGFuYXRpb24gb2YgaG93IHRoZSBoeXBvdGhlc2lzIHdhcyBkZXJpdmVkIGZyb20gdGhvc2Ugb2JzZXJ2YXRpb25zIG1ha2VzIGl0IG1vcmUgdXNlZnVsIHRvIG90aGVyIHNjaWVudGlzdHMuCldpdGggdGhlIG5hcnJvdyBjb250cmFjdGlvbiBhbmQgcG9zaXRpdmUgZW1wbG95bWVudCwgdGhlIGdyb3VwIGl0IGhhcmQgdG8gY2FsbCB0aGlzIGEgcmVjZXNzaW9uLiBSIHdvcmQgd2FzIHdpZGVseSBiYW5kaWVkIGFib3V0IGR1cmluZyB0aGUgMjAxNSBlbGVjdGlvbiBjYW1wYWlnbiB0byBhdHRhY2sgdGhlIGVjb25vbWljIHJlY29yZCBvZiB0aGVuIFByaW1lIE1pbmlzdGVyIFN0ZXBoZW4gSGFycGVyLCB3aG8gd2VudCBvbiB0byBsb3NlIHRoZSB2b3RlIHRvIEp1c3RpbiBUcnVkZWF1Li4gClRoZSBQZW5uc3lsdmFuaWEgR2FtaW5nIENvbnRyb2wgQm9hcmQgaGFzIGEgbGljZW5zZSBmb3IgYSBjYXNpbm8gdGhlcmUsIGJ1dCBoYXMgeWV0IHRvIGFwcHJvdmUgYSBkZXZlbG9wbWVudCBwbGFuLiAKQm90dG9tIGxpbmUgd2FzIEkgZmVsdCB0aGV5IGNvdWxkIHRha2UgbWUgcGxhY2VzIGZhc3RlciwgTXIuIApPYmplY3RpdmUgbWVhc3VyZW1lbnRzIG9mIGFlcm9iaWMgZml0bmVzcyBhbmQgZXhlcmNpc2UgaW50ZW5zaXR5LCBzdWNoIGFzIFZPMiBtYXgsIHdvdWxkIG9wdGltaXplIHJlc2VhcmNoIHZhbGlkaXR5LiBJbiBhIHJlY2VudCBpbnRlcnZlbnRpb24gc3R1ZHkgaW4gc3ViamVjdHMgd2l0aCBtaWxkIGNvZ25pdGl2ZSBpbXBhaXJtZW50IGFsbCBwYXJ0aWNpcGFudHMgd29yZSBhIHBlZG9tZXRlciBkdXJpbmcgdGhlIDYgbW9udGggc3R1ZHkgYW5kIHJlY29yZGVkIHRoZSBudW1iZXIgb2Ygc3RlcHMgcGVyIGRheSBbMjVdLiBJbmRlcGVuZGVudCBtZWFzdXJlcyBvZiBhY3Rpdml0eSBhcmUgcGFydGljdWxhcmx5IGltcG9ydGFudCBnaXZlbiB0aGUgZXh0cmluc2ljIGFuZCBpbnRyaW5zaWMgc291cmNlcyBvZiB2YXJpYW5jZSB3aXRoaW4gdGhlIGh1bWFuIHBvcHVsYXRpb24uIApIaXMgc3RvcnkgZG9lc24ndCBicmluZyBtdWNoIGFjdGlvbiBhbmQgaW4gdGhlIGVuZCBmaXp6bGVzIG91dCB3aXRoIExldml0dCBsb3Npbmcgb3V0IHRvIHRoZSBwb3dlcmZ1bCBzZW5hdG9yLkNsaXZlIE93ZW4ncyBjaGFyYWN0ZXIgRHdpZ2h0IGlzIHBsYXllZCB0aGlzIHRpbWUgYXJvdW5kIGJ5IEpvc2ggQnJvbGluLiAKVGhleSB0cnlpbmcgdG8gd2luIG91ciBoZWFydHMgYW5kIG1pbmRzIHNvIHRoZXkgY2FuIGV4dHJhY3Qgd2VhbHRoIGFuZCBsYWJvciBhbmQgbGl2ZXMgZnJvbSBvcmRpbmFyeSBBbWVyaWNhbnMuIENpdmlsaWFucyBpbiBBZmdoYW5pc3RhbiBpcyBhIGdsaXRjaCBpbiB0aGUgcGVyZmVjdGx5IHBsYW5uZWQgcHJvcGFnYW5kYSBvZiBncmVlZCB0aGF0IHRoaXMgYWRtaW5pc3RyYXRpb24gbm93IHJlcHJlc2VudHMuIAo=|<---