<!DOCTYPE html>
<html lang="en-GB" prefix="og: http://ogp.me/ns#">
 <head>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width" name="viewport"/>
 </head>
 <noscript>
 </noscript>
 <body class="page-template page-template-onecolumn-page page-template-onecolumn-page-php page page-id-1442 cookies-not-set" data-spy="scroll" data-target=".bs-docs-sidebar">
  <div class="container-fluid top-header">
   <div class="container">
    <div class="row">
     <div class="col-sm-12 col-md-12 col-lg-12 text-right no-padding">
      <div class="phone-number text-right">
       <a href="7">
        0128 320 0157
       </a>
      </div>
      <div class="email-text text-right">
       [ahref]
       
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="container-fluid header_bg mobile-only">
   <div class="container">
    <div class="row">
     <div class="col-sm-3 col-md-3 col-lg-3 logo-center">
      [ahref]
      
      [link]
      
     </div>
     <div class="col-sm-9 col-md-9 col-lg-9 top-menu header-margin-top no-padding">
      <nav class="navbar navbar-default" role="navigation">
       <div class="navbar-header">
        <button class="navbar-toggle left" data-target="#bs-example-navbar-collapse-1" data-toggle="collapse" type="button">
         <span class="sr-only">
          Toggle navigation<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[search]<li>[ahref]</li>[ahref]<li>[search]</li>[ahref][link]
         </span>
         <i aria-hidden="true" class="fa fa-bars">
         </i>
        </button>
        [link]
        
       </div>
       <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
        <div class="menu-mian-menu-container">
         <ul class="nav navbar-nav banner_left_menu header-menu sf-menu sf-js-enabled sf-shadow" id="menu-mian-menu">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-31" id="menu-item-31">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-32" id="menu-item-32">
           [link]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-586" id="menu-item-586">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-482" id="menu-item-482">
             [link]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-33" id="menu-item-33">
           [ahref]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1442 current_page_item menu-item-2667" id="menu-item-2667">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-99" id="menu-item-99">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-100" id="menu-item-100">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-96" id="menu-item-96">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-98" id="menu-item-98">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3152" id="menu-item-3152">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-34" id="menu-item-34">
             [link]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2585" id="menu-item-2585">
           <a data-ps2id-api="true" href="/casestudies/">
            Case Studies
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-35" id="menu-item-35">
           [link]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-130" id="menu-item-130">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-129" id="menu-item-129">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-126" id="menu-item-126">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2625" id="menu-item-2625">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2626" id="menu-item-2626">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2628" id="menu-item-2628">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2730" id="menu-item-2730">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2789" id="menu-item-2789">
             <a data-ps2id-api="true" href="/wp-content/uploads/2018/03/Termsconditions.pdf">
              Terms &amp; Conditions
             </a>
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2920" id="menu-item-2920">
           <a data-ps2id-api="true" href="/news/">
            News
           </a>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-766" id="menu-item-766">
           <a data-ps2id-api="true" href="/careers/">
            Careers
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-843" id="menu-item-843">
           <a data-ps2id-api="true" href="/architect-information/">
            Architects
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-37" id="menu-item-37">
           [link]
           
          </li>
         </ul>
        </div>
       </div>
      </nav>
     </div>
    </div>
   </div>
  </div>
  <div class="container-fluid header_bg menubar desktop-only" id="wrapper">
   <div class="container">
    <div class="row">
     <div class="col-sm-3 col-md-3 col-lg-3 logo-center">
      [link]
      
      [link]
      
     </div>
     <div class="col-sm-9 col-md-9 col-lg-9 top-menu header-margin-top no-padding">
      <nav class="navbar desktop-mobile navbar-default" role="navigation">
       <div class="navbar-header">
        <button class="navbar-toggle left" data-target="#bs-example-navbar-collapse-3" data-toggle="collapse" type="button">
         <span class="sr-only">
          Toggle navigation
         </span>
         Menu
        </button>
       </div>
       <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-3">
        <div class="menu-mian-menu-container">
         <ul class="nav navbar-nav banner_left_menu header-menu sf-menu sf-js-enabled sf-shadow" id="menu-mian-menu-1">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-31">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-32">
           [link]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-586">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-482">
             [link]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-33">
           [link]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1442 current_page_item menu-item-2667">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-99">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-100">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-96">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-98">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3152">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-34">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2585">
           <a data-ps2id-api="true" href="/casestudies/">
            Case Studies
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-35">
           [ahref]
           
           <ul class="sub-menu">
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-130">
             <a data-ps2id-api="true" href="/brochures/">
              Brochures
             </a>
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-129">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-126">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2625">
             <a data-ps2id-api="true" href="/downloads/">
              Declaration of Performance
             </a>
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2626">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2628">
             [ahref]
             
            </li>
            <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2730">
             [link]
             
            </li>
            <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2789">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2920">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-766">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-843">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-37">
           [link]
           
          </li>
         </ul>
        </div>
       </div>
      </nav>
      <div class="ipadmenu">
       <div class="menu-mian-menu-container">
        <ul class="nav navbar-nav banner_left_menu header-menu sf-menu sf-js-enabled sf-shadow" id="menu-mian-menu-2">
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-31">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-32">
          [ahref]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-586">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-482">
            <a data-ps2id-api="true" href="/innovation/">
             Innovation
            </a>
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-33">
          [link]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-1442 current_page_item menu-item-2667">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-99">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-100">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-96">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-98">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3152">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-34">
            <a data-ps2id-api="true" href="/casestudies/">
             Case Studies
            </a>
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2585">
          [link]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-35">
          [ahref]
          
          <ul class="sub-menu">
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-130">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-129">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-126">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2625">
            [link]
            
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2626">
            <a data-ps2id-api="true" href="/downloads/">
             CAD Drawings
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2628">
            [ahref]
            
           </li>
           <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2730">
            <a data-ps2id-api="true" href="/accreditations/">
             Accreditations
            </a>
           </li>
           <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2789">
            [ahref]
            
           </li>
          </ul>
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2920">
          [link]
          
         </li>
         <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-766">
          [ahref]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-843">
          [link]
          
         </li>
         <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-37">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="clearfix">
  </div>
  <div class="container-fluid banner_top desktop-only">
  </div>
  <div class="clearfix">
  </div>
  <div class="container-fluid content-area">
   <div class="container">
    <div class="row">
     <div class="clearfix">
     </div>
     <h1>
      [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
     </h1>
     <p>
      [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link][search]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
     </p>
     <div class="margin-top-minus">
      <div class="rev_slider_wrapper fullwidthbanner-container" data-source="gallery" id="rev_slider_19_1_wrapper" style="margin:0px auto;padding:0px;margin-top:0px;margin-bottom:0px;">
       <div class="rev_slider fullwidthabanner tp-overflow-hidden" data-version="5.4.7" id="rev_slider_19_1" style="display:none;">
        <ul>
         <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-153" data-link="https://www.youtube.com/watch?v=UwlalruxLYM&amp;feature=youtu.be" data-masterspeed="300" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="7" data-target="_blank" data-thumb="http://igmasonrysupport.com/wp-content/uploads/2017/08/boss-vid-slide-edit-100x50.jpg" data-title="Slide" data-transition="slideright">
         </li>
         <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-69" data-masterspeed="300" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="7" data-thumb="http://igmasonrysupport.com/wp-content/uploads/2016/09/soffit-slide1-100x50.jpg" data-title="Slide" data-transition="slideright">
         </li>
         <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-68" data-masterspeed="300" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="7" data-thumb="http://igmasonrysupport.com/wp-content/uploads/2016/09/soffit-slide2-100x50.jpg" data-title="Slide" data-transition="slideright">
         </li>
         <li data-description="" data-easein="default" data-easeout="default" data-hideafterloop="0" data-hideslideonmobile="off" data-index="rs-70" data-link="http://igmasonrysupport.com/wp-content/uploads/2015/07/MSS_Banner.mp4" data-masterspeed="300" data-param1="" data-param10="" data-param2="" data-param3="" data-param4="" data-param5="" data-param6="" data-param7="" data-param8="" data-param9="" data-rotate="0" data-saveperformance="off" data-slotamount="7" data-target="_blank" data-thumb="http://igmasonrysupport.com/wp-content/uploads/2016/09/soffit-slide3-100x50.jpg" data-title="Slide" data-transition="slideright">
         </li>
        </ul>
        <div class="tp-bannertimer" style="height: 5px; background: rgb(0,0,0);">
        </div>
       </div>
      </div>
     </div>
     <div class="ig-widget">
      <div class="heading">
       Suitable for
       <br/>
       Small to large span openings
      </div>
      <p>
       Please contact IG for full technical support[link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
      </p>
      <p class="book-black">
       01283 200 157
      </p>
      <div id="product-links-parent">
       <div class="product-links">
        [ahref]
        
       </div>
       <div class="product-links installation-video">
        [ahref]
        
       </div>
      </div>
     </div>
     <div class="clear">
     </div>
     <div class="soffit-text">
      <p>
       The
       <span class="black">
        B.O.S.S.®<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[link]</li>[search]<li>[search]</li>
       </span>
       (Brick On Soffit System) range provides a lighter alternative to concrete, which is faster to install than traditional hanging brick systems. Installed to a pre-fitted masonry support system, B.O.S.S.® allows increased adjustability along three axes. Produced offsite, B.O.S.S.® offers a quicker, lighter, easier and more cost efficient option.
      </p>
     </div>
     <div class="clearfix">
     </div>
     <div class="clear">
     </div>
     <div class="container-fluid ig-third-section">
      <div class="container">
       <div class="row">
        <div class="igsystem">
         <h2 class="ig-tital text-center" style="text-align: center; width: 100%; float: none; margin-top: 0.1em;">
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="textwidget">
          <ul>
           <li>
            Simplicity of installation
           </li>
           <li>
            No brick cutting required onsite
           </li>
           <li>
            Support steelwork is completely hidden
           </li>
           <li>
            Adjustability in all planes
           </li>
           <li>
            Various brick patterns and soffit sizes available
           </li>
           <li>
            Blends seamlessly with surrounding brickwork
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="clearfix">
     </div>
     <div class="clear">
     </div>
     <div class="container-fluid ig-fourth-section">
      <div class="container">
       <div class="row">
        <div class="igsystem">
         <div class="execphpwidget">
          <div class="col-sm-6 col-md-6 col-lg-6">
          </div>
          <div class="col-sm-6 col-md-6 col-lg-6">
          </div>
          <div class="clearfix">
          </div>
         </div>
         <div class="clearfix">
         </div>
         <div class="container-fluid ig-fivth-section">
          <div class="container">
           <div class="row">
            <div class="igsystem">
             <div class="execphpwidget">
              <div class="col-sm-7 col-md-7 col-lg-7">
               <h2 class="ig-general-title top-border">
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <p>
                Achieving deep brick soffits and intricate brick patterns around window heads and openings has become quicker, easier and much more cost effective to achieve – all down to the lightweight Brick On Soffit System range developed by IG Masonry Support.[search][ahref]<li>[link]</li>[search][search][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
               </p>
               <p>
                Image 1 below shows a section through the Brick On Soffit System system and angle showing the fixing detail. A spring nut is inserted into the channel. A bolt is then passed through a slot in the support angle and screws into the spring nut. Once the bolt is torqued to the advised torque setting, the bolt head and washer are the only visible fixings on the angle. No grinding of excess fixings or bolts is required. Simply lay a pistol brick on a bed of mortar onto the angle to cover the fixings (See image 2).
               </p>
               <p>
               </p>
              </div>
             </div>
             <div class="col-sm-5 col-md-5 col-lg-5">
              <div class="section">
               <h2 class="ig-general-title top-border">
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <p>
                B.O.S.S.® offers 90% time saving onsite and negates the need for mechanical lifting. Alternative systems for suspending brick from the underside of masonry support require bricks to be predrilled and hung from rods. This can be a timely and labour intensive installation. Other methods that use heavy precast concrete units, suspended from above, require mechanical lifting.[link]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </p>
               <p>
                B.O.S.S.® is fixed to a pre-installed Masonry Support System. It is a two part system, increasing the adjustment across all three planes. IG receives a consignment of the brick being used onsite to ensure that the finished Brick On Soffit System blends seamlessly with the surrounding brickwork.
               </p>
              </div>
              <div class="section">
               <h2 class="ig-general-title top-border">
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <p>
                The system offers three planes of adjustment The masonry support shelf is supplied with a slotted hole, giving adjustability along the Z axis. Further adjustment on the Z axis is attained by shimming behind the masonry support bracket.
               </p>
               <p>
                The integrated channel (which is manufactured within the system) allows for increased adjustment on the X axis. Adjustability on the Y axis is created within the masonry support bracket, and the ability to insert shims between the shelf and the bolt up system.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[ahref]</li><li>[search]</li>[ahref][search]<li>[ahref]</li>[ahref]<li>[search]</li>
               </p>
              </div>
              <div class="clearfix">
              </div>
             </div>
             <div class="clear">
             </div>
             <div class="hero-product-img">
              [ahref]
              
             </div>
             <div class="hero-product-img">
              <a href="/wp-content/uploads/2016/07/soffit2.jpg" rel="lightbox[Soffit System]">
              </a>
             </div>
             <div class="hero-product-img">
              <a href="/wp-content/uploads/2016/07/soffit3.jpg" rel="lightbox[Soffit System]">
              </a>
             </div>
            </div>
           </div>
          </div>
          <div class="clearfix">
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="clear">
     </div>
     <h2 class="product-h2">
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <div class="clear">
     </div>
     <div class="cs-product-link">
      <div class="csp1">
       [ahref]
       
      </div>
      <div class="csp1">
       [link]
       
      </div>
      <div class="csp1">
       [link]
       
      </div>
      <div class="clear">
      </div>
     </div>
     <div class="clearfix">
     </div>
    </div>
   </div>
  </div>
  <div class="container-fluid footer">
   <div class="container">
    <div class="row">
     <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 ">
      <h2 class="in-page-sidebar-title">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="menu-footer-menu-container">
       <ul class="menu" id="menu-footer-menu">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-home menu-item-63" id="menu-item-63">
         <a data-ps2id-api="true" href="/">
          Home
         </a>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-64" id="menu-item-64">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-65" id="menu-item-65">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-1050" id="menu-item-1050">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-67" id="menu-item-67">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-69" id="menu-item-69">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         [link]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-767" id="menu-item-767">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-70" id="menu-item-70">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2944" id="menu-item-2944">
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="clearfix">
      </div>
     </div>
     <div class="col-xs-4 col-sm-4 col-md-4 col-lg-4 ">
      <h2 class="in-page-sidebar-title">
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div class="textwidget">
       <p>
        <li>[link]</li>[ahref][link][ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[link]</li><li>[link]</li>
       </p>
       <p>
        <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][ahref]<li>[ahref]</li>[link]<li>[ahref]</li>
       </p>
       <div class="sfb sfb-wrap">
        <div style="text-align:left">
         [link]
         
         [link]
         
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="clearfix">
      </div>
     </div>
     <div class="clearfix">
     </div>
    </div>
   </div>
  </div>
  <div class="container-fluid copyright">
   <div class="container">
    <div class="row">
     <p align="center">
      [search]<li>[ahref]</li>[search]<li>[search]</li><li>[ahref]</li>
     </p>
     <div class="clearfix">
     </div>
    </div>
   </div>
  </div>
  <div class="cn-bottom bootstrap" id="cookie-notice" role="banner" style="color: #fff; background-color: #000;">
   <div class="cookie-notice-container">
    <span id="cn-notice-text">
     We use cookies to ensure that we give you the best experience on our website. By continuing to use this site, you agree to IG Masonry Support's cookie policy[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
    </span>
    [link]
    
    <a class="cn-more-info cn-button bootstrap button" href="/policies/" id="cn-more-info" target="_blank">
     Cookie Policy
    </a>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0266
  </b>
 </body>
</html>
