--->|U0FQIElTIFRIRSBUUkVFIEJMT09ELiAKQWNjZXB0YW5jZSBhbmQgcHJlc2VudCBtb21lbnQgZm9jdXMgaXMgdGhlIGtleS4gWW91IGFyZSBhd2FyZSB5b3UgbWFkZSBzb21lIGNob2ljZXMgaW4gdGhlIHBhc3QgdGhhdCBnb3QgeW91IHRvIHRoaXMgcG9pbnQgYW5kIHRoYXRzIGZpbmUuIApJZiB5b3VyIHBvc3QgaXMgcGFydCBvZiBhIGNsdXN0ZXIgb2Ygc3VibWlzc2lvbnMgb2YgdGhlIHNhbWUgaW1hZ2UgaXQgd2lsbCBiZSByZW1vdmVkLltNXSAgMCBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ29IaSAvdS9CYWxhbmNlTG92ZXIsIHRoYW5rcyBmb3IgeW91ciBzdWJtaXNzaW9uIHRvIC9yL0Jvc3NmaWdodCEgVW5mb3J0dW5hdGVseSBpdCBoYXMgYmVlbiByZW1vdmVkIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbihzKTpSdWxlIDU6IFJlcG9zdHMgd2lsbCBiZSByZW1vdmVkIGF0IHRoZSBtb2RlcmF0b3JzIGRpc2NyZXRpb24sIHRoaXMgaW5jbHVkZXMgYnV0IGlzIG5vdCBsaW1pdGVkIHRvIHJlcG9zdHMgd2l0aCB0aGUgc2FtZSB0aXRsZSBhcyBwcmV2aW91cyBzdWJtaXNzaW9ucy4gCkEgc3Bva2VzbWFuIHdpdGggdGhlIHNoZXJpZmYncyBkZXBhcnRtZW50IHNhaWQgZGVwdXRpZXMgZGlkIG5vdCBmaW5kIGFueSBjb25uZWN0aW9ucyB0byBodW1hbiB0cmFmZmlja2luZyBhbmQgbm8gb3RoZXIgYXJyZXN0cyB3ZXJlIG1hZGUuLiAKVGhlcmUgYXJlIG5vIG1vcmUgbWlsZXN0b25lcyBmb3IgS2FsbGlzIHRvIGNoYXNlLiAKSSB3YXMgb24gYW50aWRlcHJlc3NhbnRzIHRocm91Z2ggbXkgZW50aXJlIHByZWduYW5jeSB3aXRoIGhlciBhbmQgd2hpbGUgYnJlYXN0ZmVlZGluZy4gU2hlIHdhcyB0aGUgbW9zdCBjaGlsbGVkIGJhYnkgSSBoYWQgZXZlciBzZWVuIGFuZCBJIGZlbHQgc3VwZXIgZ3VpbHR5IGNhdXNlIEkgdGhvdWdodCBJIHdhcyBkcnVnZ2luZyBoZXIgYnV0IG15IGd5bmFlIGFuZCBwYWVkIHNhaWQgdGhhdCBteSBtZW50YWwgaGVhbHRoIGlzIGFsc28gZXh0cmVtZWx5IGltcG9ydGFudCBzbyBJIGNvbnRpbnVlZCB3aXRoIG15IG1lZGljYXRpb24uIApUaGUgcHJvYmxlbSBpcywgdGhpcyBoaWdoIHByb2ZpbGUgYXRobGV0ZXMgKEZvb3RiYWxsIGFuZCBCYXNrZXRiYWxsIHN0YXJzKSBkb24gZmFsbCBpbiB0aGlzIGNhdGVnb3J5ICh0cmFkaXRpb25hbGx5LikgVGhleSBzcGVuZCBtb3JlIHRpbWUgdHJhdmVsaW5nIGFuZCBwcmFjdGljaW5nLCBtYWtlIG1vcmUgbW9uZXkgZm9yIHRoZSB1bml2ZXJzaXR5LCBhbmQgZ3JhZHVhdGUgYXQgYSBsb3dlciByYXRlIHRoYW4gb3RoZXIgc3BvcnRzLiBTbyB3aGVuIHlvdSBzYXkgInN0dWRlbnQgYXRobGV0ZXMsIHRoZSBOQ0FBIGlzIGFibGUgdG8gcmVzcG9uZCB3aXRoLCAiQUtTSFVBTExZIFN0dWRlbnQgYXRobGV0ZXMgZ3JhZHVhdGUgYXQgYSBoaWdoZXIgcmF0ZSBhbmQgaGlnaGVyIEdQQSB0aGFuIHJlZ3VsYXIgc3R1ZGVudHMgYW5kIGFyZSBnZXR0aW5nIHNjaG9sYXJzaGlwIHNvIGJsYWguIiBCdXQgdGhlIGF0aGxldGVzIHdobyBicmluZyBpbiBhbGwgdGhlIG1vbmV5LCBkb24gZ3JhZHVhdGUgYXQgYXMgaGlnaCBvZiBhIHJhdGUgYW5kIGRvbiBtYWtlIGFzIGdvb2Qgb2YgZ3JhZGVzLiBUaGF0IHdoZXJlIHRoZSBkaXNjb25uZWN0IGlzIGJldHdlZW4gdGhlIHB1YmxpYyBhbmQgdGhlIE5DQUEuIApUaGUgYWxsaWFuY2UgZGlyZWN0b3IgVGltIENvc3RlbGxvIHNhaWQgaXQgd2FzICJ3cm9uZyIgdGhhdCBnYW1ibGVycyBhdCBIYXd0aG9ybiBXZXN0IFdhdGVycyBIb3RlbCBsb3N0ICQxMi40MyBtaWxsaW9uIG9uIHBva2llcyBsYXN0IHllYXIgdG8gc3VzdGFpbiB0aGUgImxpZmVzdHlsZSBvZiBtaWxsaW9uYWlyZSBmb290YmFsbGVycyIuICJJdCBqdXN0IHdyb25nIGFuZCB0aGUgSGF3dGhvcm4gYm9hcmQgc2hvdWxkIGJlIGFzaGFtZWQgb2YgdGhlbXNlbHZlcy4iIEhlIGNhbGxlZCBvbiB0aGUgbGVhZ3VlIGFuZCBjbHVicyB0byBxdWl0IHBva2llcyBhcyBOb3J0aCBNZWxib3VybmUgaGFzIGRvbmUuIApUaGUgdmlzdWFsIGN1ZSBvZiBhIFRBU0VSIGluIHBvbGljZSBwdWJsaWMgaW50ZXJhY3Rpb25zIGxlYWRzIHRvIGFnZ3Jlc3Npb24uIApDb21wYWN0aWZ5IHRoZSBydWxlcyAoaW4gdGhlIHNjb3Jpbmcgc3lzdGVtIGkgc3VibWl0dGVkIHRoZXJlIGFyZSA1MCBkaWZmZXJlbnQgaGFuZHMgeW91IGNhbiBnZXQpLgpBc2tlZCBzZXZlcmFsIHRpbWVzIGluIGNvdXJ0IFRodXJzZGF5IGJ5IGFzc2lzdGFudCBDcm93biBhdHRvcm5leSBKZW5uaWZlciBIb2xtZXMgd2h5IGhlIG5ldmVyIHRvbGQgYW55b25lIGFib3V0IEtpc3NuZXIgYWxsZWdlZCBzZXh1YWwgYWR2YW5jZXMgYXQgdGhlIHRpbWUgb3IgaW4gdGhlIHllYXJzIHRoYXQgZm9sbG93ZWQsIHRoZSBjb21wbGFpbmFudCByZXBsaWVkOiB3YXMgdGhlIGZpcmUgY2hpZWYgaGUgd2FzIGEgdmVyeSBrbm93biBmaWd1cmUgd2l0aGluIHRoZSBjb21tdW5pdHksIGEgdGVhY2hlciwgYSBwdWJsaWMgZmlndXJlLiBzYWlkIEkgd2FzIHRoZSBvbmx5IG9uZSwgaXQgd291bGRuJ3QgaGFwcGVuIGFnYWluVGhlIGNvbXBsYWluYW50LCB0aGUgZmlyc3Qgb2YgZWlnaHQgYWxsZWdlZCB2aWN0aW1zIGV4cGVjdGVkIHRvIHRlc3RpZnkgYXQgdGhlIHRocmVlIHdlZWsgdHJpYWwsIGRlc2NyaWJlZCBoaW1zZWxmIGFzIGp1c3QgYSB0ZWVuYWdlciB3aG8gc3BlYWsgdmVyeSB3ZWxsLCB3aGlsZSBLaXNzbmVyLCB3aG8gd2FzIGFsc28gYSB0ZWFjaGVyLCBjaHVyY2ggb3JnYW5pc3QgYW5kIGNob2lyIGRpcmVjdG9yLCB3YXMgY2hhcmlzbWF0aWMgYW5kIGEgbGVhZGVyIGluIHRoZSBjb21tdW5pdHkuCk15IGh1c2JhbmQgYXNrZWQgaGlzIG1vbSBhbmQgc2lzdGVyIGZvciBhZHZpY2Ugd2hlbiBwaWNraW5nIG15IHJpbmcgb3V0LiBFdmVuIGFmdGVyIGxlc3MgdGhhbiBhIHllYXIgb2Yga25vd2luZyBtZSwgdGhleSBrbmV3IG1vcmUgb3IgbGVzcyB3aGF0IEkgd291bGQgbGlrZS4gSSBsb3ZlIGl0LCBib3RoIGJlY2F1c2UgaGUgcGlja2VkIGl0IG91dCBhbmQgYmVjYXVzZSBoZSBjYXJlZCBlbm91Z2ggdG8gbWFrZSBzdXJlIGl0IHdhcyB3aGF0IEkgd2FudGVkLi4gCkFzayBoZXIgd2hhdCBzb3VyY2VzIHNoZSB3b3VsZCBmaW5kIGNyZWRpYmxlLiBBc2sgaGVyIHdoYXQgc2hlIGlzIHdvcnJpZWQgbWlnaHQgaGFwcGVuIHRvIHlvdS4gCkEgbG90IG9mIGNhc2VzLCBhZGRpY3Rpb24gdW50cmVhdGVkIGlzIHByb2dyZXNzaXZlIGFuZCBjYW4gYmUgZmF0YWwsIExvcmluZGEgU3RyYW5nLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgT3JjaGFyZCBSZWNvdmVyeSBDZW50cmUgb24gQm93ZW4gSXNsYW5kLCBzYWlkLiBZb3UgbG9va2luZyBhdCBhIGNvc3QgYmVuZWZpdCBhbmFseXNpcywgaWYgeW91IGhhZCBhIERVSSwgeW91ciBsZWdhbCBmZWVzLCBob3cgbXVjaCBhcmUgdGhvc2UgZ29pbmcgdG8gY29zdCB5b3U/IElmIHlvdSBnb2luZyB0byBsb3NlIHlvdXIgam9iLCBob3cgbXVjaCBpcyB0aGF0IGdvaW5nIHRvIGNvc3QgeW91PyBIb3cgbXVjaCBkb2VzIGEgZGl2b3JjZSBjb3N0IHlvdT8gT3JjaGFyZCwgYSBmb3JtZXIgcmVzb3J0IGxvY2F0ZWQgb24gZm91ciBhY3JlcyBvZiByYWluIGZvcmVzdCwgdGhlIHJlc2lkZW50aWFsIHByb2dyYW0gY29zdHMgJDI3OSBwZXIgZGF5IGlmIHlvdSBzdGF5IGZvciBtb3JlIHRoYW4gOTAgZGF5cy4gSXQgY29zdHMgJDE5LDEwMCBmb3IgaXRzIDQyIGRheSBwcm9ncmFtLCAkMTQsMDAwIGZvciBpdHMgMjggZGF5IHByb2dyYW0gYW5kICQ2LDUwMCBmb3IgaXRzIDEwIGRheSBwcm9ncmFtLi4gCkFzIGNocm9uaWNsZWQgYnkgR3JlZW5lLCBQb2tlciBkdXJpbmcgdGhlIGVhcmx5IDE4MDBzIHdhcyBwbGF5ZWQgdXNpbmcgMjAgY2FyZHMgbWFkZSB1cCBvZiBvbmx5IGFjZXMsIGtpbmdzLCBxdWVlbnMsIGphY2tzLCBhbmQgdGVucyBieSBmb3VyIHBlcnNvbnMgZWFjaCBob2xkaW5nIGZpdmUgY2FyZHMuIApUaGUgUmlnaHQgS2luZCBvZiBQdW1wa2luLiBUbyBoZWxwIGdldCBhIHB1bXBraW4gb2YgdGhlIHJpZ2h0IHNpemUgYW5kIHNoYXBlLCB5b3Ugc2hvdWxkIGFscmVhZHkga25vdyB3aGF0IHlvdSB3YW50IHRoZSBjYXJ2aW5nIHRvIGxvb2sgbGlrZSB3aGVuIHlvdSdyZSBkb25lLiBNZWRpdW0gc2l6ZWQgcHVtcGtpbnMgYXJlIHRoZSBtb3N0IHBvcHVsYXIgZm9yIGphY2sgbyBsYW50ZXJucy4gSXQgbWF5IGJlIHNob3J0IGFuZCBzcXVhdCBvciB0YWxsIGFuZCBuYXJyb3csIGRlcGVuZGluZyBvbiB0aGUgaW1hZ2UgdG8gY2FydmUuIFdoaWNoZXZlciB5b3UgZGVjaWRlLCBtYWtlIHN1cmUgdGhhdCBpdCBoYXMgYSB1bmlmb3JtIGNvbG9yIHRocm91Z2hvdXQuIFRoZSBib3R0b20gb2YgdGhlIHB1bXBraW4gc2hvdWxkIGJlIGZsYXR0ZW5lZCBzbyB0aGF0IGl0J2xsIHN0YW5kIHVwcmlnaHQuClRoZXJlIGFyZSBtdWx0aXBsZSBjYWZlcyB3aXRoaW4gNSAoaGVsbCwgd2l0aGluIDIpIG1pbnV0ZXMgb2YgbXkgY3VycmVudCBzdHVkaW8gaWYgSSBhbHJpZ2h0IHdpdGggdmlldG5hbWVzZSBjb2ZmZWUgKGN1cnJlbnRseSBpbiBIYW5vaSkuIElmIEkgd2FudCBhbiBlc3ByZXNzbyBiYXNlZCBkcmluaywgdGhlcmUgYXJlIG11bHRpcGxlIGRlY2VudCBjYWZlcyB3aXRoaW4gNSAxMCBtaW5zIG9uIGZvb3QuIEkgZGVmaW5pdGVseSBncmFiIGEgY29mZmVlIGEgZmV3IGRheXMgYSB3ZWVrLCBJIGp1c3QgZG9uIHVzdWFsbHkgdGFrZSB3b3JrIHdpdGggbWUgd2hlbiBJIGdvLiAKSXQgZG9lc24gbWF0dGVyIHdoYXQgaXQgaXMsIGhlIHBsYXlzIHRvIHdpbi4uIApJIGdvdCB1cCwgSSBmZWx0IGxpa2UgSSB3YXNuJ3QgbXlzZWxmIHRocm91Z2ggdGhlIG5leHQgZmV3IHNoaWZ0cyBhbmQgZGVjaWRlZCB0byBwdWxsIHRoZSBwbHVnIGZyb20gdGhlcmUuIi4gClRoZSBrZXlub3RlIHNwZWFrZXIgYXQgdGhlIEVxdWFsaXR5IEJyZWFrZmFzdCBpcyBEci4gV2lsbGllIEouIHN0YXRlcy4gSGlzIHRhbGsgaXMgZXhwZWN0ZWQgdG8gZm9jdXMgb24gdGhlIGJhdHRsZSBvdmVyIGFib3J0aW9uIGFuZCBjb250cmFjZXB0aW9uIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBDYW5hZGEsIGFuZCBob3cgYWNjZXNzIHRvIHJlcHJvZHVjdGl2ZSBzZXJ2aWNlcyBhZmZlY3RzIHdvbWVuLCBwYXJ0aWN1bGFybHkgd29tZW4gb2YgY29sb3VyLiBQYXJrZXIgaGFzIGJlZW4gaG9ub3VyZWQgYnkgdGhlIFVuaXRlZCBOYXRpb25zIE9mZmljZSBvZiBIdW1hbiBSaWdodHMgYXMgb25lIG9mIGEgZG96ZW4gV29tZW4gSHVtYW4gUmlnaHRzIERlZmVuZGVycy4KWW91J3JlIGdvaW5nIHRvIG5lZWQgdG8gYmUgYWJsZSB0byBibHVmZiBzcG90cyB5b3Ugbm9ybWFsbHkgd291bGRuJ3QgYW5kIGZvbGQgaGFuZHMgeW91IG5vcm1hbGx5IHdvdWxkbid0LiBBbmQgd2hpbGUgeW91J3JlIGxlYXJuaW5nIHBsYXkgYSBtdWNoIHRpZ2h0ZXIgcmFuZ2UgdGhhbiBJJ20gc3VyZSB5b3UncmUgdXNlZCB0by4gCkhlIGdvdCB0aXJlZCBzdXJlLCBidXQgaGUgZGlkbiBjb21wbGV0ZWx5IGdhcyBvdXQuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZUEgTUFOIGZvdW5kIHdpdGggNDUgZ3JhbXMgb2YgY2FubmFiaXMgaW4gaGlzIGJlZHJvb20gaGFzIGJlZW4gZmluZWQgJDEwMDAgYW5kIHRoZSBkcnVncyBvcmRlcmVkIHRvIGJlIGRlc3Ryb3llZC4gCkEgMTUgZm9vdCB3YWxrd2F5IHNlcGFyYXRlcyB0aGUgcm9vbSBmcm9tIHRoZSBzbW9raW5nIGFyZWEgdG8ga2VlcCBhc2h5IHNjZW50cyBhdCBiYXkuIApGaXRuZXNzIGluc3RydWN0b3JzIGNvbmR1Y3QgZGFpbHkgZ3JvdXAgYW5kIHByaXZhdGUgZml0bmVzcywgeW9nYSBhbmQgdGFpIGNoaSBjbGFzc2VzIGZvciBwYXNzZW5nZXJzLiAKVGhhdCBkZWNpc2lvbiB3aWxsIHNlZSA0MCBzdGFmZiBtZW1iZXJzIGxvc2UgdGhlaXIgam9icy4gCldoZW4gcG9rZXIgd2FzIGZpcnN0IHBsYXllZCBvbiBNaXNzaXNzaXBwaSByaXZlcmJvYXRzLCBpdCB3YXMgb2Z0ZW4gcmVmZXJyZWQgdG8gc2ltcGx5IGFzLCAidGhlIGNoZWF0aW5nIGdhbWUuIiBTbyBpdCBzaG91bGQgY29tZSBhcyBubyBzdXJwcmlzZSB0aGF0IGNoZWF0ZXJzIGhhdmUgZ29uZSB0byBncmVhdCBsZW5ndGhzIG92ZXIgdGhlIGRlY2FkZXMgdG8gZ2l2ZSB0aGVtc2VsdmVzIGFuIHVwcGVyIGhhbmQuIApUaGF0IHNhbWUgbG9naWMgaG9sZHMgZm9yIEZyZW5jaCB3aW5lcywgR3JlZWsgb2xpdmUgb2lsLCBTd2lzcyB3YXRjaGVzLCBhbmQgUnVzc2lhbiBjYXZpYXIuIEFsbCBvZiB0aGVzZSBhcmUgdGhpbmdzIHlvdSBjYW4gZ2V0IG9mdGVuIGdldCBsb2NhbGx5LCBidXQgd2lsbCBwYXkgYSBwcmVtaXVtIGZvciBpZiB0aGV5IGNvbWUgZnJvbSB0aGUgcmlnaHQgcGxhY2UuIEluIHR1cm4sIHRoZXkgcGVvcGxlIGluIHRob3NlIHBsYWNlcyBzZWxsIGFsbCB0aGV5IGNhbiBhYnJvYWQsIGFuZCBpbXBvcnQgY2hlYXBlciBzdHVmZiBmcm9tIHdoZXJldmVyLi4gCkZpbmFsbHksIGl0IG1heSBzdXJwcmlzZSB5b3UgdG8gaGVhciwgdGhlIGF2ZXJhZ2UgZHJpdmVyIGxlbmd0aCBvbiB0aGUgUEdBIFRvdXIgaXMgNDQuNSIuIFdoeT8gQmVjYXVzZSB0aGF0IGlzIHRoZSBsZW5ndGggb2YgZHJpdmVyIHRoZXkgY2FuIG1vc3Qgb2Z0ZW4gbWFrZSBjb250YWN0IHdpdGggdGhlIGNlbnRlciBvZiBncmF2aXR5IG9mIHRoZSBjbHViaGVhZCBpbiBsaW5lIHdpdGggdGhlIGNlbnRlciBvZiBncmF2aXR5IG9mIHRoZSBiYWxsLCB0aHVzIG9idGFpbmluZyBtYXhpbXVtIGRpc3RhbmNlIGFuZCBhY2N1cmFjeS4gCklmIHlvdSB3YW50IHRvIHNoYXJlIHdpdGggeW91ciBmcmllbmRzLCBkbyBzbyBkaXNjcmVldGx5IGFuZCBkb24gdGVsbCBzb21lb25lIHdobyBjYW4ga2VlcCB0aGVpciBtb3V0aCBzaHV0LiBUaGluayBvZiBpdCBhcyB0aGUgZmlyc3QgdHdvIHJ1bGVzIG9mIEZpZ2h0IENsdWIuIApOYWIgdGhpcyBuZXdlc3QgYWxidW0gZnJvbSBpVHVuZXMhIDE1KSBSZXRybyBEYW5jZSBGcmVhayAuIENhbiBiZSBmb3VuZCBvbiAiVGhlIEZhbWUuIiBBc2lhbiBjb3VudHJ5IGJvbnVzIHRyYWNrcy4gMTYgMTgpIFBva2VyIEZhY2UvSnVzdCBEYW5jZS8gRWgsIEVoIChOb3RoaW5nIEVsc2UgSSBDYW4gU2F5KSBmcm9tICJUaGUgQ2hlcnJ5IFRyZWUgU2Vzc2lvbnMiIGZyb20gaVR1bmVzLiAKSSBhbSB0cnlpbmcgdG8gZmlndXJlIG91dCB0aGlzIHNlbnNlIG9mIHRocmVhdC4gSSBhbSB0cnlpbmcgdG8gZmlndXJlIG91dCBob3cgYW55dGhpbmcgc28gZW5nYWdlZCBpbiB0aGUgcHJvamVjdCBvZiBub3JtYWxjeSBhcyBtYXJyaWFnZSBjb3VsZCBiZSBhIHRocmVhdCB0byBhIGJ1bmNoIG9mIGNvbnNlcnZhdGl2ZSBDaHJpc3RpYW5zIG9yIE1vcm1vbnMgb3Igd2hhdGV2ZXIgd2hvIGFyZSB0aGVtc2VsdmVzIHNvIGVuZ2FnZWQgaW4gYmVpbmcgbm9ybWFsLiBCdXQgYXBwYXJlbnRseSBub3QgYWxsICJub3JtYWxzIiBhcmUgZXF1YWxseSBub3JtYWwuLiAKQ2FuYWRhIGdldHMgdG9wIG1hcmtzIGluIGJvdGggYXJlYXMsIFNlbmYgc2F5cy4gQ2FuYWRhIGhhcyBhIGZ1bGwgYW5kIGNvbXBsZXRlIHJhbmdlIG9mIElUIHNlcnZpY2VzIHRocm91Z2ggbG9jYWwgcHJvdmlkZXJzLCB3aGlsZSBhbHNvIHNwb3J0aW5nIGdsb2JhbCBzdWJzaWRpYXJpZXMgYW5kIG5hdGlvbndpZGUgc2VydmljZXMgcHJvdmlkZXJzIHdob3NlIGZpeGVkIGNvc3QgYXMgYSBzZXJ2aWNlIG9mZmVyaW5ncyBhZGRyZXNzIElUIGRlbWFuZCB0b2RheSB3aGlsZSBmdXR1cmUgcHJvb2ZpbmcgZm9yIHRvbW9ycm93LgpJJ20gZ3Vlc3NpbmcgdGhlcmUgYXJlIGJsb29kIHRoaXJzdHkgR2lhbnRzIG91dCB0aGVyZSwgd2Ugc2VlIGl0IG91cnNlbHZlcyBpbiBPVFAgd2hlbiB0aGVyZSBpcyBhIGhvc3RpbGUgdGFrZW92ZXIgZHVyaW5nIEhhZ3JpZCBhbmQgT2x5bXBlJ3MgYXR0ZW1wdCB0byBhbGx5IHRoZW0gYmVmb3JlIHRoZSB3YXIsIGFuZCB0aGUgcHJldmlvdXMgR3VyZydzIGhlYWQgaXMgZm91bmQgbHlpbmcgaW4gdGhlIGJvdHRvbSBvZiB0aGUgbGFrZSBpbiB0aGUgbW9ybmluZyBhZnRlciBhIGJsb29keSBuaWdodCBvZiBjb25mbGljdC4uIApIb3cgaXMgdGhhdCBpcnJlbGV2YW50PyBSZXByZXNlbnRhdGlvbiBhbmQgY2l0aXplbnNoaXAgYXJlIGxpdGVyYWxseSB0aGUgY3J1eCBvZiB0aGUgaXNzdWUuIFRoZSB0ZXJyaXRvcmllcyBhcmUgbm90IHBhcnQgb2YgSXNyYWVsLCBib3RoIGJ5IElzcmFlbGkgYW5kIFBhbGVzdGluaWFuIGRlc2lyZXMsIGFuZCB3aWxsIGhvcGVmdWxseSBvbmUgZGF5IGJlIHBhcnQgb2YgYW4gaW5kZXBlbmRlbnQgUGFsZXN0aW5pYW4gc3RhdGUuIApMaWtlIENvbHQsIGhlIHNlZW1zIGF3a3dhcmQsIGluZXhwZXJpZW5jZWQgZWFzeSB0byBtYW5pcHVsYXRlIGFuZCBpbXByZXNzaW9uYWJsZSB0b28uIEhlIGxpa2VseSB0YWtlbiBieSB0aGUgZmFjdCB0aGF0IHNoZSB3YXMgb24gdHYgcGx1cywgc2hlIG5vdCBhd2Z1bCBsb29raW5nLiAKUmVtZW1iZXIsIHRoaXMgaXMgeW91ciBjaGFuY2UgdG8gcmVkaXNjb3ZlciB0aGUgd29uZGVycyBhbmQgZGVsaWdodHMgdGhhdCB5b3VyIG93biB0b3duIGhhcyB0byBvZmZlci4uIApDb25zaWRlciB0aGUgcHJvYmxlbXMgd2UndmUgYWxyZWFkeSBlbmNvdW50ZXJlZCB3aXRoIHRoZSByZWxhdGl2ZWx5IG5ldyBsb3R0ZXJ5IGhlcmUgaW4gQXJrYW5zYXMuIApJIG5vdCBhIGNhciBidWZmIGJ5IGFueSBtZWFucywgYnV0IGhlcmUgbXkgc3RvcnkuIApCeSB0aGUgdGltZSB0aGUgaW50ZXJuYXRpb25hbCBjb21tdW5pdHkgZmlndXJlZCBpdCBvdXQsIFJ1c3NpYSBjb25xdWVzdCBvZiBDcmltZWEgd2FzIGEgZmFpdCBhY2NvbXBsaS4gCllvdSBjYW4ganVzdCBzdGFydCBhc2tpbmcgZm9yIHBlcnNvbmFsIGFkdmljZSB0aGUgZmlyc3QgZGF5IHlvdSBtZWV0IHNvbWVvbmUsIG9yIHdoZW4gdGhlIGZyaWVuZHNoaXAgaXMgc3RpbGwgdmVyeSBjYXN1YWwuIApUaGVzZSBlbXBsb3llZXMgaGF2ZSBvZnRlbiByZXR1cm5lZCB0byBzYXkgdGhlIGhlbHAgdGhleSByZWNlaXZlZCBmcm9tIHRoZXNlIG9yZ2FuaXphdGlvbnMgbWFkZSBhIGRpZmZlcmVuY2UuIFRoYXQncyBqdXN0IG9uZSBvZiB0aGUgbWFueSByZWFzb25zIEkgZmluZCBncmVhdCBzYXRpc2ZhY3Rpb24gaW4gZGVkaWNhdGluZyB0aW1lIGFuZCBlbmVyZ3kgdG8gcmFpc2luZyBib3RoIGZ1bmRzIGFuZCBhd2FyZW5lc3MgZm9yIG91ciBVbml0ZWQgV2F5IGFuZCBJIGxvb2sgZm9yd2FyZCB0byB3b3JraW5nIHdpdGggdGhlIG90aGVyIHZvbHVudGVlcnMgYXQgdGhlIFVuaXRlZCBXYXkgR29sZiBDbGFzc2ljLCIgc2FpZCBDb25jYWRvcm8uTHViZXIgc2FpZCBDb25jYWRvcm8gYW5kIEdyaW1zaGF3LCBhbG9uZyB3aXRoIHN1cHBvcnQgZnJvbSBnb2xmIGNvbW1pdHRlZSBtZW1iZXJzLCB3aWxsIG1hdGNoIGVhY2ggdm9sdW50ZWVyJ3MgZHV0aWVzIHdpdGggdGhlaXIgc2tpbGxzIGFuZCBpbnRlcmVzdHMgYW5kIG1ha2Ugc3VyZSB0aGF0IHRoZSB2b2x1bnRlZXJzIGFyZSBhcyBjb21mb3J0YWJsZSBhcyBwb3NzaWJsZSBkdXJpbmcgdGhlIGV2ZW50LiAiU29tZSBvZiBvdXIgdm9sdW50ZWVycyBsaWtlIHRvIGhlbHAgb3V0IGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGV2ZW50IHNvIHRoYXQgdGhleSBhcmUgYWJsZSB0byBlbmpveSBnb2xmaW5nIGFzIHdlbGwuIApKZSBwcm9maXRlIGRlIGNlIHBldGl0IHBvc3QgcG91ciByZW1lcmNpZXIgdG91dGVzIGxlcyBwZXJzb25uZXMgcXVpIG0gZmFpdCBjb25maWFuY2UgZW4gYWNoZXRhbnQgbW9uIGRlcm5pZXIgcGV0aXQgbGl2cmUuIApLZWVwIHlvdXIgaGVhZCB1cCBhbmQga2VlcCBwbGF5aW5nIVRvIGJlIGhvbmVzdCB0aGUgb25seSB3YXkgeW91IG5vdCBnb2luZyB0byBmZWVsIGJhZCBpcyBpZiB5b3Ugc3RvcCBkb2luZyBpdC4gSSBzdXJlIHlvdSB0cmllZCB0byB0ZWxsIHlvdXJzZWxmIG1hbnkgZGlmZmVyZW50IHRoaW5ncyBpbiBvcmRlciB0byBtYWtlIHlvdXJzZWxmIGZlZWwgYmV0dGVyIGFib3V0IHRoZSBzaXR1YXRpb24gd2l0aCBubyBzdWNjZXNzLiBJIGRvbnQgdGhpbmsgYW55b25lIGlzIGdvaW5nIHRvIGJlIGFibGUgdG8gdGVsbCB5b3UgYW55dGhpbmcgdGhhdCB5b3UgaGF2ZSBhbHJlYWR5IHNhaWQgdG8geW91cnNlbGYuIApTb21lIHN0dWRlbnRzLCBtZWFud2hpbGUsIHNhaWQgdGhleSB3ZXJlIHNob2NrZWQgYnkgdGhlIGFsbGVnYXRpb25zIGdpdmVuIEVzcXVpbGluJ3MgcmVwdXRhdGlvbiBhdCB0aGUgc2Nob29sLgpXeW5uIGZvcmNlZCB0aGUgeW91bmdlciB3b21hbiBpbnRvIHNleHVhbCBhY3RzIGFib3V0IDUwIHRpbWVzIG92ZXIgdGhlIGNvdXJzZSBvZiBhYm91dCB0aHJlZSB5ZWFycyBzdGFydGluZyBpbiAyMDA2LCBzaGUgc2FpZCBpbiBhIGxhd3N1aXQgZmlsZWQgVGh1cnNkYXkuIFNoZSBzYXlzIFd5bm4gZ2F2ZSBoZXIgYSAkNDAwIGFmdGVyIGVhY2ggbWFzc2FnZSBhbmQgdG9sZCBoZXIgbmV2ZXIgdG8gdGFsayBhYm91dCBpdC4KVW5mb3J0dW5hdGVseSwgbWFueSBwZW9wbGUgZm9yZ2V0IHRoYXQgZ2FtYmxpbmcgaXMgYSB3YXkgb2YgaGF2aW5nIGZ1biBhbmQgYmVmb3JlIHRoZXkga25vdyBpdCB0aGV5IGhhdmUgYSBzZXJpb3VzIGdhbWJsaW5nIHByb2JsZW0uIEluIG9yZGVyIHRvIHByZXZlbnQgcGVvcGxlIHRvIHNwZW5kIG1vcmUgdGhhbiB0aGV5IGNhbiBhZmZvcmQgYW5kIGdhbWJsZSBiZWNhdXNlIHRoZXkgYXJlIGFkZGljdGVkIGluc3RlYWQgb2YgZW5qb3lpbmcgdGhlIGdhbWVzLCBvbmxpbmUgZ2FtYmxpbmcgc2l0ZXMgb2ZmZXIgYWR2aWNlIGZvciB0aG9zZSB3aG8gbWlnaHQgaGF2ZSBhIGdhbWJsaW5nIHByb2JsZW0uLiAKVGhlbiB0aGVyZSB3YXMgRWRnYXIgQWxsYW4gUG9lLiBNYWdyaXR0ZSB1c2VkIGhpbSByZXBlYXRlZGx5LiAKRm9yIHRoZSBwYXN0IDIwIHllYXJzIEkgaGF2ZSBiZWVuIGxpc3RlbmluZyB0byByZWNvcmRlZCBib29rcy4gCldhcyB3cmRlbiB3aXIgZGVubiBzYWdlbiwgd2VubiB1bnMgZnJlbWRlIExuZGVyLCBzYWdlbiB3aXIgbWFsIGJlaXNwaWVsc3dlaXNlIENIaW5hIG9kZXIgU2F1ZGkgQXJhYmllbiB1bnMgdWx0aW1hdGl2IGF1ZmZvcmRlcnRlbiBlaW5lbiBuZXVlbiBQcnNpZGVudGVuIHdobGVuIHp1IGxhc3Nlbiwgd2VpbCBpaG5lbiBkaWUgUG9saXRpayBkZXMgYWx0ZW4gbmljaHQgZ2VmbGx0PyAoVm9yYXVzZ2VzZXR6dCwgZGVyIFByc2lkZW50IGh0dGUgYmVpIHVucyB3YXMgenUgc2FnZW4pClRoaXMgbWFrZXMgaXQgc2VlbSBhcyBpZiB0aGUgcmVlbHMgY29uY2x1ZGUgdGhlIG91dHB1dCBidXQgaW4gcmVhbGl0eSB0aGUgb3V0cHV0IGlzIGFscmVhZHkgZGVjaWRlZCBpbiB0aGUgYmFja2dyb3VuZCBieSB0aGUgcmFuZG9tIG51bWJlciBnZW5lcmF0b3IgZXZlbiBiZWZvcmUgdGhlIHJlZWxzIHN0b3Agc3Bpbm5pbmcuLiAKSXQgZG9lc24gbWF0dGVyIGlmIGFueSBvZiB0aGUgRkFBTkcgY29tcGFuaWVzIGhhdmUgYSBtb25vcG9seS4gVGhpbmdzIGxpa2U6IEFtYXpvbiBvZmZlcmluZyB0byBidXkgWmFwcG9zIC8gQmFiaWVzZG90Y29tLCBnZXR0aW5nIHJlamVjdGVkLCBhbmQgdGhlbiByZWxlYXNpbmcgYSBjb21wZXRpbmcgcHJvZHVjdCBhdCBhIG5ldCBsb3NzIHVudGlsIHRoZSBjb21wYW5pZXMgd2VyZSBmb3JjZWQgdG8gYmUgYWNxdWlyZWQgb3IgZmFjZSBiYW5rcnVwdGN5LiBBbWF6b24gbGlzdGluZyBpdCBvd24gcHJvZHVjdHMgYWhlYWQgb2YgY29tcGV0aW5nIHByb2R1Y3RzIGluIGl0IG1hcmtldHBsYWNlLi4gCkNhbGN1bGF0b3JzIGNhbiBiZSB2ZXJ5IHVzZWZ1bCwgZXNwZWNpYWxseSBpZiB5b3Ugc3RhcnQgcGxheWluZyBtdWx0aXBsZSB0YWJsZXMuIFRoZXkgY2FsY3VsYXRlIHRoZSBvZGRzIGJhc2VkIG9uIHdoYXQgcG9ja2VkIGNhcmRzIHlvdSBob2xkIGluIHlvdXIgaGFuZCBhbmQgd2hhdCBjYXJkcyBhcmUgb24gdGhlIGJvYXJkLCBhZHZpY2UgYXQgZXZlcnkgc3RlcCBpbiBhIGhhbmQuIEhlcmUgYXJlIHNvbWUgb2YgdGhlIG1vc3QgcmVjb21tZW5kIG9ubGluZSBwb2tlciBjYWxjdWxhdG9ycy4KTGUgY2FzIGNoYW50IHNpIGxlIGJuZmljZSBzJ2F2cmVyYWl0IG5ldHRlbWVudCBwb3NpdGlmLCBpbCBlc3Qgc2FucyBkb3V0ZSBwb3NzaWJsZSBkZSBsaW1pdGVyIGxhIGdseWNhdGlvbiB0eXBlIEJlbmZvdGlhbWluZS5SaWVuIG4nZXN0IHZyYWltZW50IHNpbXBsZSBlbiBtZGVjaW5lLkonYWkgY3IgdW4gV2lraS4gQydlc3QgdW5lIGJhc2UgZGUgZG9ubmVzIHF1aSBkZXZyYWl0IHJlbmRyZSBwbHVzIGFjY2Vzc2libGUgY2VydGFpbmVzIGluZm9ybWF0aW9ucyBlbiBmYWNpbGl0YW50IGxlcyByZWNoZXJjaGUuIFJlY2hlcmNoZSBhc3NleiBtYWxhaXNlcyBzdXIgbGUgYmxvZyAgY2F1c2UgZGUgcG9zdCBwYXJmb2lzIHRycyBsb25ncy5DZXR0ZSBiYXNlIGRlIGRvbm5lIG0nZXN0IGRldmVudWUgbmNlc3NhaXJlIHBvdXIgc291bGFnZXIgbWEgcHJvcHJlIG1tb2lyZS4gClNvbWUgYXJlIGVzc2VudGlhbGx5IHVyYmFuIGRvbWVzdGljIHJlZnVnZWVzIGZsZWVpbmcgdmlvbGVuY2UgYW5kIG9wcHJlc3Npb24uIApNaW5kIC8gbW9vZCBlbmhhbmNlcnMgYXJlIGNlcnRhaW5seSBhIGJpZyBmYWN0b3IuIEZvciBhIHVzdWFsIGRheSBJIGFsd2F5cyBlbmpveSBtdXNpYyBmb3IgYSBiaXQgd2hpbGUgdGhlIG1vcm5pbmcgZG9zZSBvZiBjYWZmZWluZSBpcyBpbiBlZmZlY3QuIEJ1dCBvY2Nhc2lvbmFsbHkgKG9uY2UgZXZlcnkgZmV3IG1vbnRocyBvciBzbykgbXkgd2lmZSBhbmQgSSBkbyB3aGF0IHdlIHRha2VuIHRvIHJlZmVycmluZyB0byBhcyBwYXJraW5nIG11c2ljLiBBIGNvdXBsZSBoaXRzIG9mIGFjaWQgYW5kIHNvbWUgTURNQSB0dXJucyBtdXNpYyBpbnRvIGFuIGV4cGVyaWVuY2UgdGhhdCBjYW4gYWRlcXVhdGVseSBiZSBkZXNjcmliZS4gV2UgcXVldWUgdXAgc29tZSBtb3JlIG9yIGVwaWMgdHlwZSBtdXNpYyBhbmQgaXQgbGlrZSBmdWNraW4gRGlzbmV5bGFuZC4KTGlrZSBtYW55IHRoZXJhcGlzdHMsIFNtaXRoIHNheXMgc2hlIHRhbGtzIHdpdGggZWFjaCBjbGllbnQgdG8gZmlyc3QgZGV0ZXJtaW5lIHRoZWlyIG5lZWRzIGFuZCB3YW50cywgdGhlbiBtYXRjaGVzIHRoZW0gd2l0aCB0aGUgcmlnaHQgdGhlcmFwaXN0IGFuZCBzdHlsZSBvZiBtYXNzYWdlLiBUaGF0J3Mgd2h5IGEgZ2lmdCBjYXJkIGNhbiBiZSBiZXR0ZXIgdGhhbiBib29raW5nIGEgc3BlY2lmaWMgdHJlYXRtZW50LgpUaGUgRmFtZSBhbmQgVGhlIEZhbWUgTW9uc3RlciB3aGljaCBpcyBhIGNvbWJpbmF0aW9uIG9mICJUaGUgRmFtZSIgYW5kICJNb25zdGVyIi4gSSBkb24ndCBrbm93IHdoYXQgdGhlIG5ldyBhbGJ1bSBpcyBnb2luZyB0byBiZSBjYWxsZWQuIFRoZXJlJ3MgYWxzbyBUaGUgRmFtZSBNb25zdGVyIChkZWx1eGUgZWRpdGlvbikgKEZ1bGwgQW5zd2VyKS4gClJlYWwgdGFjb3MgYXJlIHNvZnQgYW5kIGNhbiBoYXZlIGEgbXVsdGl0dWRlIG9mIHRoaW5ncyBpbnNpZGUuIApJIG9ubHkgMjYgSSBzaG91bGRuIGhhdmUgdG8gZGVhbCB3aXRoIHRoaXMuIEhlIDcgeWVhcnMgb2xkZXIgYW5kIGlzIHVwc2V0IHRoYXQgIkkgY2hhbmdlZCIgZHVyaW5nIHRoZXNlIGxhc3QgOSB5ZWFycy4gSSBleHBsYWluZWQgbXkgMjBzIHdlcmUgYmFzaWNhbGx5IHJvYmJlZCBmcm9tIG1lIGluIHRlcm1zIG9mIGV4cGVyaW1lbnRhdGlvbiBhbmQgbGVhcm5pbmcgYWJvdXQgbXlzZWxmIGJlY2F1c2UgSSB3YXMgd2lmZS9tb20gYW5kIEkgcHV0dGluZyBteSBmb290IGRvd24gYW5kIGxlYXJuaW5nIGFib3V0IG15c2VsZiBhbmQgZG9pbmcgbm93LiAKTG9va2luZyBhdCBhY3R1YWwgcG9saWN5IGltcGxlbWVudGF0aW9uIHRlbmRzIHRvIGJlIG1vcmUgYSBtb3JlIGVmZmVjdGl2ZSB3YXkgb2YgbWVhc3VyaW5nIGEgcGFydHkgYnV0IGFscmlnaHQuCk5ldyBsaWZ0ZXJzIG1pc3Rha2VubHkgdGhpbmsgdGhleSBjYW4gZ2V0IGFzIGJpZyBhcyBoaW0gdW50aWwgdGhleSBnbyBvbiB0aGUgaW50ZXJuZXQgYW5kIGxlYXJuIHNvbWV0aGluZyBZb3UgdGhpbmsgdGhlIGxhdHRlciBpcyB3b3JzZT8hLiAKQW5kIGJlY2F1c2Ugb2YgdGhpcyBwc2V1ZG8gdHdvIHBhcnR5IHN5c3RlbSwgUHJvIFVuaWZpY2F0aW9uIHBlb3BsZSBhbmQgUHJvIFNlcGFyYXRpb24gcGVvcGxlIG5hdHVyYWxseSBhcmUgYXNzb2NpYXRlZCB3aXRoIHRoZSB0d28gcGFydGllcyByZXNwZWN0aXZlbHkuLiAKU3RheSBjb25zaXN0ZW50IGFuZCBzdGF5IGxldmVsIGhlYWRlZC4gCkFkZGVkIHRvIHRoaXMsIHRoZSBwbGF5ZXJzIGNhbiBhbHNvIHdpbiBScy4gCkkuIENodW5kcmlnYXIgUm9hZCwgYnV0IGZldyB5b3VuZ3N0ZXJzIGZyb20gTHlhcmkgZXZlciBkby4gCkl0IHdhcyBwcm9iYWJseSBicm91Z2h0IG9uIGJ5IGJvdGgga25vd2luZyBzb21ldGhpbmcgYWJvdXQgeW91LCBvciBleHBlcmllbmNpbmcgdGhlIHNhbWUgZXZlbnRzIHdpdGggeW91IHdoaWNoIHdhcyB0aGVuIG1hbmlmZXN0ZWQgYXMgcGFydCBvZiB0aGVpciBkcmVhbS4gVGhlIGNvbnRlbnQgb2Ygb25lcyBkcmVhbXMgY2FuIGJlIHRyaWdnZXJlZCBieSBvbmUgb3IgbW9yZSB0aGluZ3MgdGhhdCBoYXBwZW5lZCBkdXJpbmcgdGhlIGRheSBvciBldmVuIHNvbWV0aGluZyBmcm9tIHllYXJzIGFnby4gCklsIENvbnNpZ2xpbyBEaXJldHRpdm8gcmVzdGEgaW4gY2FyaWNhIGNpbnF1ZSBhbm5pLgpHb2QuIApJIHdvdWxkIHNheSB0byBkaXNzdWFkZSB5b3Vyc2VsZiBvZiB0aGUgbm90aW9uIHRoYXQgbGl2aW5nIGluIHRoZSBjb3VudHJ5IGlzIEphcGFuZXNlIG9ubHkgaW1tZXJzaW9uLCBhbmQgbGl2aW5nIG91dHNpZGUgdGhlIGNvdW50cnkgaXMgaW5mZXJpb3IuIFRoZSBwb2ludCBpbiBteSBsaWZlIHdoZW4gSSB3YXMgbW9zdCBpbW1lcnNlZCBpbiBKYXBhbmVzZSB3YXMgdGhlIHBlcmlvZCBpbW1lZGlhdGVseSBiZWZvcmUgSSBjYW1lIHRvIEphcGFuIHRvIHN0dWR5IGFicm9hZCwgYmVjYXVzZSBJIGhhZCBhIHN1bW1lciBicmVhayB3aXRoIGFic29sdXRlbHkgbm90aGluZyB0byBkbyBidXQgY3JhbSBKYXBhbmVzZSB0ZXh0Ym9va3MsIHBsb3cgdGhyb3VnaCBldmVyeSBtYW5nYSBhbmQgYW5pbWUgSSBjb3VsZCBpbnRlcm5ldCwgbGlzdGVuIHRvIE5ISyBuZXdzIGV2ZXJ5IG1vcm5pbmcsIHBsYXkgSmFwYW5lc2UgbXVzaWMgaW4gdGhlIHNob3dlciBhbmQgaW4gdGhlIGNhci4gSSB3ZW50IHRvIEphcGFuIGFuZCBoYWQgdG8gdGFsayB0byBwZW9wbGUgYW5kIGxvb2sgdXAgaW5mb3JtYXRpb24gYW5kIHRha2UgY2xhc3NlcyBpbiBFbmdsaXNoLiBMaXZpbmcgaW4gSmFwYW4sIGluIHJlZ3VsYXIgbGlmZSwgSSB1c2UgRW5nbGlzaCBwbGVudHkgbW9yZSB0aGFuIEphcGFuZXNlLgpCdXQgaW4gSmFwYW4sIHRoZSBjcmlja2V0cyBhcmUgY2hpcnBpbmcsIGFzIEFiZSBhcHByb3ZhbCByYXRpbmcgd2lsbCBiYXJlbHkgYnVkZ2UuLiAKUmljZWx5ZmUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpNeSBwcmV2aW91cyByaWIgcGFpbiB3YXMgYWx3YXlzIHRvd2FyZHMgdGhlIHNpZGUvYmFjay4gSSBrbm93IHJpZ2h0IHNpZGUgcmliIHBhaW4gY2FuIGFsc28gYmUgYW4gaW5kaWNhdG9yIG9mIElDUCwgYW55b25lIHdpdGggdGhhdCBiZWZvcmUgdGhhdCBjYW4gdGVsbCBtZSBpZiB0aGlzIGlzIHRoZSBraW5kIG9mIHBhaW4geW91IGZlbHQ/IE9yIGlzIGl0IGp1c3QgdGhhdCBJIGhhdmUgYW4gb3JuZXJ5IGJhYnkgd2l0aCBhIGZvb3QgbG9kZ2VkIGluIHRoZXJlPyBsb2wKQWxzbyBob3cgb24gZWFydGggZGlkIHlvdSBtYW5hZ2UgdG8gdHJhdmVsIGFzIGZhciBhcyBhbiBob3VyIGFuZCBhIGhhbGYgYWxsIHRoZSB3YXkgdG8gQXRoZW5zIT8gWW91IGJyYXZlIHNvdWwhcmFuZG9tbHljYW5keSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhhdCBqZXJrIGRvZXNuIGRlc2VydmUgYW4gYW5zd2VyIGZyb20gbWUuIApWb3J0ZXhNYWd1cyAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KSWYgaXQgZGlkIHJhaW4gYXQgbmlnaHQgdGhlbiB3ZSB3b3VsZCBqdXN0IGZpbmQgYSBwdWJsaWMgcGFyayB0aGF0IGhhZCBhIHBhdmlsaW9uIGFuZCBzbGVlcCBkcnkgdW5kZXIgdGhhdC4gCldoYXQsIEkgd29uZGVyZWQsIHdvdWxkIGJlIGxpa2UgaWYgSSBqdXN0IHN0YXllZCBoZXJlPyBOb3Qga25vd2luZyBvciBjYXJpbmcgaWYgaXQgd2FzIFN1bmRheSBvciBUdWVzZGF5PyBUaGUgc3VuIGNvbWVzIHVwLCBhbmQgdGhlIHN1biBnb2VzIGRvd24sIGFuZCB0aGF0IGVub3VnaC4gSXQgd2FzIG5vdCBhbiB1bnBsZWFzYW50IHRoaW5nIHRvIGNvbnNpZGVyLiAKWW91IG1heSBnZXQgc29tZSBhZHZpY2Ugb24gci9ydW5uaW5nIGFib3V0IHN0cmVuZ3RoZW5pbmcgZXhlcmNpc2VzIG9yIGNvdW50aW5nIGJyZWF0aHMgb3IgY2hhbmdpbmcgc3RyaWRlIGxlbmd0aC4gClRoZSBjbHViIEkgcGxheSBpbiBkb2VzbiB0YWtlIGFueSBjcmVkaXQgbGluZXMsIHNvIGl0IGVuYWJsZXMgdGhlbSB0byBrZWVwIHRoZSBjYXNoIGZyb20gZGVwb3NpdHMgb24gaGFuZCBmb3IgaW1tZWRpYXRlIGNhc2ggb3V0cy4gSSBtYWRlIHR3byBjYXNoIG91dHMgc28gZmFyIGFuZCBib3RoIHdlcmUgcHJvY2Vzc2VkIHdpdGhpbiBhbiBob3VyIG9mIG15IHJlcXVlc3QgKGJ1dCB0aGV5IG9ubHkgYWxsb3cgb25lIGNhc2ggb3V0IHBlciA0OCBob3VycykuIFRoZXkgYWxzbyBoYXZlIGFib3V0IDQwIDQ1IHRhYmxlcyBydW5uaW5nIGFyb3VuZCB0aGUgY2xvY2sgYXQgYWxsIHN0YWtlcywgd2hpY2ggaXMgY29udmVuaWVudC4gCkFkdWx0RnJpZW5kRmluZGVyIGlzIHRoZSBwbGFjZSB0byBiZSBmb3IgZnJlZSBzZXggYW5kIGhvb2t1cHMgd2l0aCBsb2NhbCBtaWxmIGluZGlhbmFwb2xpcyBmdWNrIGJ1ZGRpZXMgTG9va2luZyBmb3Igb3ZlciA1MCBkYXRpbmc/IFJlYWQgNTYgQm9va3MgUmV2aWV3cyAgIEFtYXpvbi4gClRoYW5rIHlvdSBmb3IgdGhpcyEgWW91ciBjbG9zaW5nIGxpbmUgbWVhbnQgYSBsb3QuIEkgd2lsbCBnZXQgdGhlcmUgc29tZWRheSA6KSBJJ3ZlIGFsd2F5cyB3YW50ZWQgdG8gc3RhcnQgaW4gTG9uZG9uIGZvciBhIGZldyBkYXlzLCB0aGVuIHRha2UgdGhlIENhbGVkb25pYW4gc2xlZXBlciB0cmFpbiB1cCB0byB0aGUgSGlnaGxhbmRzIGFuZCB3b3JrIG15IHdheSBiYWNrIGRvd24gdG8gRWRpbmJ1cmdoIGFuZCBzcGVuZCB0aGUgcmVzdCBvZiBteSB0aW1lIHRoZXJlLi4gCldlIGFyZSBlc3BlY2lhbGx5IHJlbWluZGVkIG9uIFRoYW5rc2dpdmluZyBvZiBob3cgdGhlIHZpcnR1ZSBvZiBncmF0aXR1ZGUgZW5hYmxlcyB1cyB0byByZWNvZ25pemUsIGV2ZW4gaW4gYWR2ZXJzZSBzaXR1YXRpb25zLCB0aGUgbG92ZSBvZiBHb2QgaW4gZXZlcnkgcGVyc29uLCBldmVyeSBjcmVhdHVyZSwgYW5kIHRocm91Z2hvdXQgbmF0dXJlLiBMZXQgdXMgYmUgbWluZGZ1bCBvZiB0aGUgcmVhc29ucyB3ZSBhcmUgZ3JhdGVmdWwgZm9yIG91ciBsaXZlcywgZm9yIHRob3NlIGFyb3VuZCB1cywgYW5kIGZvciBvdXIgY29tbXVuaXRpZXMuIApUaHVyc2RheXMgYXJlIHNvdXBzIG9yIHN0ZXdzLiAKVWx0aW1hdGVseSwgSSBmZWx0IG1peGVkIGFib3V0IGFsbCB0aGlzIG5ld3MuIEluIG9uZSBzZW5zZSwgaXQgbWFkZSBsYWR5IHNleCBub2lzZXMgc2VlbSBpbmF1dGhlbnRpYy4gSW4gYW5vdGhlciwgaXQgbWFkZSB0aGVtIGJyaWxsaWFudGx5IHN0cmF0ZWdpYyBsaWtlIG92ZXIgdGhlIG1pbGxlbm5pYSB3b21lbiBoYXZlIGV4cGVydGx5IGhhcm5lc3NlZCB0aGVpciB2b2NhbCBjaG9yZHMgYW5kIHR1cm5lZCB0aGVtIGludG8gYSB0eXBlIG9mIHN1cGVycG93ZXIuIApNYWRlIGEgc3VwZXIgZmFuY3ksIG5pY2UsIHByZXR0eSBWYWxlbnRpbmUgRGF5IGRpbm5lciwgd2l0aCBmbG93ZXJzLCB3aW5lLCBjYW5kbGVzLCBJdGFsaWFuIGZvb2QsIGZyZXNoIGJha2VkIHBpZSwgdGhlIHdob2xlIHNoZWJhbmcuIApHZXQgYSBzaWxrIG9yIHNhdGluIG9yIHNhdGVlbiBwaWxsb3djYXNlLiAKSSBkbyBub3QgdHJ1c3QgYW55IG9mIHRoZWlyIHByb2R1Y3RzLiAKUElWIGlzIGhvdyBiYWJpZXMgYXJlIG1hZGUsIGJ1dCBiZWZvcmUgeW91IGp1bXAgdG8gdGhlICJ3aGF0IGFib3V0IGluZmVydGlsZSBwZW9wbGUiIGFyZ3VtZW50LCBpdCBkb2VzbiBoYXZlIHRvIGFjdHVhbGx5IHJlc3VsdCBpbiBhIGNoaWxkIGZvciBpdCB0byBzdGlsbCBiZSBzZXBhcmF0ZSBmcm9tIGV2ZXJ5dGhpbmcgZWxzZS4gUElWIGlzIGhvdyBhIGNvdXBsZSB3b3VsZCBoYXZlIGEga2lkIGlmIHRoZXkgd2VyZSB0cnlpbmcgYW5kIGJpb2xvZ2ljYWxseSBhYmxlLiAKU2hlc2FpZHNoZXdhc2x2bDE4ICAyNCwzMjEgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpJdCBnb3QgbGl2ZSBhY3RlZCBjdXRzY2VuZXMgYnkgQ2hyaXN0b3BoZXIgUGx1bW1lciBoaW1zZWxmLCBpbnN0cnVjdGluZyB5b3UgaG93IHRvIGJlIGEgdHJ1ZSBLbGluZ29uIHdhcnJpb3IuIFRoZSBzdG9yeSBpcyBmYW50YXN0aWMsIGFuZCBmaWxscyBpbiBhIGxvdCBvZiB0aGUgZ2FwcyBiZXR3ZWVuIFNUNSA2LCBiZWZvcmUgdGhlIEtoaXRvbWVyIGFjY29yZHMuIApWZGFyYSBhdCBDaXR5Q2VudGVyIFZkYXJhIEhvdGVsIFNwYSBpcyBhbiBpbnRlcm5hdGlvbmFsbHkgaW5zcGlyZWQgYWxsIHN1aXRlIGhvdGVsIGFuZCBzcGEgZGVzaWduZWQgZm9yIHRob3NlIHdobyBsb3ZlIHRoZSBleGNpdGVtZW50IG9mIExhcyBWZWdhcyBidXQgcHJlZmVyIHRvIGVuam95IGl0IGluIGFuIGV4Y2x1c2l2ZSwgbm9uIGdhbWluZywgc21va2UgZnJlZSBzZXR0aW5nLgpJbnN0ZWFkLCB0aGlzIHRlbGwgdHlwaWNhbGx5IGluZGljYXRlcyBuZXdlciBwbGF5ZXJzIHdobyBoYXZlIHRyb3VibGUgaG9sZGluZyBpbiB0aGVpciBlbW90aW9ucy4gCiJJJ3ZlIGtub3duIEplZmYgZm9yIDE1IHllYXJzLCIgVHJ1bXAgc2FpZC4gIlRlcnJpZmljIGd1eS4gSGUncyBhIGxvdCBvZiBmdW4gdG8gYmUgd2l0aC4gSXQgaXMgZXZlbiBzYWlkIHRoYXQgaGUgbGlrZXMgYmVhdXRpZnVsIHdvbWVuIGFzIG11Y2ggYXMgSSBkbywgYW5kIG1hbnkgb2YgdGhlbSBhcmUgb24gdGhlIHlvdW5nZXIgc2lkZS4gTm8gZG91YnQgYWJvdXQgaXQgICBKZWZmcmV5IGVuam95cyBoaXMgc29jaWFsIGxpZmUuIgpXaHk/LiAKU3RpbGwgd29ydGggaXQgdG8gbWUuLiAKSG93ZXZlciwgdGhlIFJpdmVyIGlzIHRoZSBmb3VydGggQWNlLiBZb3UgdGhyb3cgZG93biB5b3VyIGNhcmRzIGFuZCB0aGUgcmVzdCBvZiB0aGUgdGFibGUgaXMgaW4gZGlzYmVsaWVmLiBZb3UganVzdCB3b24gYSBib2F0bG9hZCBvZiBjaGlwcyB3aXRoIG9uZSBvZiB0aGUgYmVzdCBoYW5kcyBpbiBwb2tlci4uIApFaXRoZXIgbWFrZSB1cCBhbiBpc3N1ZSB5b3UgbWF5IHNhZmVseSBpbXBseSBleGlzdHMgYmFzZWQgb24geW91ciBpbnRlcnByZXRhdGlvbiBvZiB0aGUgb3Bwb25lbnQvb3Bwb25lbnQgYXJndW1lbnRzL3NpdHVhdGlvbiwgb3Igc2VsZWN0IHRoZSB3ZWFrZXN0IGFzcGVjdCBvZiB0aGUgd2Vha2VzdCBjaGFyZ2VzLiBTb21lIGFyZSBsZWdpdCBhbmQgb2ZmZXIgbm8gZXh0cmFzLiAKIlRoYXQncyBub3QgcmlnaHQsIiBWZWxsYSBzYWlkLiAiSXQncyBiYWQga2FybWEsIGJhZCB2aWJlcywgYmFkIGN1bHR1cmUuIApNYW55IG9mIHRoZXNlIGhvbWVzIGdlbmVyYXRlIGFib3ZlICQxMCAkMTJLIGluIHByb3BlcnR5IHRheC4uIAoiTW9zY293IGhhcyBtb3JlIGJpbGxpb25haXJlcyB0aGFuIGFueSBvdGhlciBjaXR5IGluIHRoZSB3b3JsZCBhbmQgeWV0IFJ1c3NpYSBpcyBzZXJpb3VzbHkgdW5kZXIgaG90ZWxlZCwgd2l0aCBvbmx5IDI4IGhpZ2ggZW5kIGhvdGVscywiIHNhaWQgU2ltb24gVHVybmVyLCBQcmVzaWRlbnQgb2YgR2xvYmFsIERldmVsb3BtZW50IEFjcXVpc2l0aW9uLCBTdGFyd29vZCBIb3RlbHMgUmVzb3J0cy4gIlJ1c3NpYSBhbmQgQ0lTIG9mZmVyIHRyZW1lbmRvdXMgZ3Jvd3RoIG9wcG9ydHVuaXRpZXMsIGVzcGVjaWFsbHkgd2l0aGluIG1hcmtldHMgdGhhdCBkbyBub3QgaGF2ZSBtYWpvciBpbnRlcm5hdGlvbmFsbHkgYnJhbmRlZCBob3RlbHMuIFdlIHBsYW4gdG8gZXhwYW5kIG91ciBicmFuZHMgdGhyb3VnaG91dCB0aGUgcmVnaW9uIGluIHRoZSB5ZWFycyB0byBjb21lIHdpdGggZGV2ZWxvcG1lbnQgcGFydG5lcnMgd2hvIGhhdmUgYSBwcm92ZW4gdHJhY2sgcmVjb3JkIG9mIHN1Y2Nlc3MgYW5kIGFyZSBsb29raW5nIGZvciBhIG5ldyBhbmQgZXhjaXRpbmcgZ3Jvd3RoIHZlaGljbGUuIldpdGggbW9yZSB0aGFuIDcwJSBvZiB0aGUgd29ybGQncyBlY29ub21pYyBncm93dGggY29taW5nIGZyb20gZmFzdCBncm93aW5nIG1hcmtldHMgb3ZlciB0aGUgbmV4dCBmZXcgeWVhcnMsIFN0YXJ3b29kIGlzIGZvY3VzZWQgb24gZXhwYW5zaW9uIGluIGRldmVsb3BpbmcgbWFya2V0cyBzdWNoIGFzIFJ1c3NpYSBhcyB3ZWxsIGFzIGtleSBlbWVyZ2luZyBtYXJrZXRzIGluY2x1ZGluZyBVa3JhaW5lIGFuZCBUYWppa2lzdGFuLi4gCkluIG15IG90aGVyIHJlcGx5IEkgZm9jdXNlZCBvbiB0aGUgcG9zc2libGUgd2F5cyBpbiB3aGljaCBoZSBjb3VsZCBiZSBhc3N1bWluZyBjb250cm9sIG9mIHlvdXIgbGlmZSwgYW5kIGhvdyB0aG9zZSBjb3VsZCBiZSBjb25jZXJuaW5nLiBCdXQgdGhpcyBtYWtlcyBtZSB3b25kZXIgaWYgaGUgaXNuIGp1c3QgYSBsaXR0bGUgbG9zdCwgc3BpcmFsaW5nIGludG8gYSBjcmlzaXMgdGhhdCBoZSBmZWVscyBoZSBtYWRlIGJ5IG1vdmluZyB5b3UgdG8gRXVyb3BlLiBJdCBwb3NzaWJsZSB0aGF0IHRoZSByaWdodCBjb3Vyc2Ugb2YgYWN0aW9uIGlzIHRvIGdvIEkgY2FuIHNlZSB5b3UgaGF2aW5nIHNvbWUgc29ydCBvZiBmcmVha291dCBoZXJlLiBNYXJyaWFnZSBpcyBhIHRlYW0gc3BvcnQgaW4gd2hpY2ggeW91IGFuZCBJIHdvcmsgdG9nZXRoZXIgdG8gc3RheSBhZmxvYXQuIFdoYXQgYXJlIHlvdSBoaWRpbmcgZnJvbSBtZSBhbmQgaG93IGNhbiBJIGhlbHAgZml4IGl0PyBTYXkgdGhpcyB3aXRob3V0IGp1ZGdlbWVudCBvZiBhbnkga2luZCBhbmQgYmUgcHJlcGFyZWQgdG8gc29ydCBvdXQgc29tZSBzZXJpb3VzIG1lc3Nlcy4gTWF5YmUgc3RhcnQgbG9va2luZyBmb3IgdGhpbmdzIGhlIHNlZW1zIHRvIG5lZ2xlY3QgYW5kIHRoZW4gcGFuaWMgYWJvdXQgdG8gc2VlIGlmIHlvdSBjYW4gdXNlIHlvdXIgb3duIHNraWxsc2V0IHRvIGhlbHAgd2l0aCB0aGVtLgpGb3IgYW55b25lIHRyeWluZyB0byBjb250YWluIHJ1bm5pbmcgYmFtYm9vIHRoYXQgaGFzIGVzY2FwZWQsIGhvdyB0byBwcm9jZWVkIHdpbGwgZGVwZW5kIHVwb24gaG93IG1hbnkgeWVhcnMgaXQgaGFzIGJlZW4gdHJhdmVsbGluZy4gWW91IG1heSBuZWVkIGEgc21hbGwgYmFja2hvZSB0byB0YWtlIG91dCBhIG1hc3NpdmUgc3ByZWFkLCBidXQgaW4gbWFueSBjYXNlcywgdXNpbmcgYSBxdWFsaXR5IHN0ZWVsIGhhbmRsZWQgc2hvdmVsIGFuZCBhIGxvdCBvZiBlbGJvdyBncmVhc2Ugd2lsbCB3b3JrLi4gCkplcnJ5IFNlbGJlZTogSSByZWFkIGl0IGFuZCBieSB0aGUgdGltZSBJIHdhcyBvdXQgaGVyZSBJIGtuZXcgd2hhdCB0aGUgcG90ZW50aWFsIG1pZ2h0IGJlLiAKUG93ZXJsZXNzaGVybzExMSB1ClNvIHRoZSBwb2xlIHdlbnQgcGFzdCBtZSBhbmQgd2FzIHZpc2libGUgaW4gdGhlIG1pcnJvciB0aGUgd2hvbGUgdGltZS4gSSBkb24ga25vdyBob3cgSSBkaWQgdGhhdCBidXQgYXQgbGVhc3QgSSBkaWRuIG5lZWQgYSB0b3cgdHJ1Y2suLiAKTWFjaGluZXMgdGVuZCB0byBiZSBncm91cGVkIGJ5IGRlbm9taW5hdGlvbiwgc3R5bGUgYW5kIGJyYW5kIG5hbWUuIFZpZGVvIHNsb3RzIGhhdmUgYSBIRUxQIG9yIElORk8gYnV0dG9uIHRoYXQgd2lsbCB3YWxrIHlvdSB0aHJvdWdoIHRoZSB2YXJpb3VzIHBheW91dHMsIHBsYXkgbGluZXMsIGJvbnVzIGdhbWVzIGFuZCBzcGVjaWFsIGZlYXR1cmVzLi4gCkluY3JlYXNlIG15IHdlZWtseSBtaWxlYWdlLCBhbmQgbG9uZ2VyIGxvbmcgcnVucy4KQmV0dGVyIHRoYW4gc29tZSByYW5kb20gbGlzdCwgYnV0IHlvdSBhcmUgc3RpbGwgZ29pbmcgdG8gYmUgb24gdGhlIGhvb2sgZm9yIHRoZSB1c2Ugb2YgdGhlIHBlcnNvbmFsIGRhdGEgICB3aGV0aGVyIHlvdSBnYXRoZXJlZCB0aGUgZGF0YSBkaXJlY3RseSBvciBhY3F1aXJlZCBmcm9tIGEgdGhpcmQgcGFydHkuIApHb29kbmVzcz8gR29kbHk/IEdvb2QgZ29kcy4gClRoYXQgYmVpbmcgc2FpZCwgYSAic29jaWFsIGNyZWRpdCBzY29yZSIgYmFzZWQgb24gc3R1ZmYgbGlrZSBjcmltaW5hbCBoaXN0b3J5LCBwYXltZW50IGhpc3Rvcnkgb2YgbG9hbnMgYW5kIHN0dWZmIGxpa2Ugdm9sdW50ZWVyaW5nIGhpc3RvcnkgaXMgbm90IGluaGVyZW50bHkgYSBiYWQgaWRlYS4gSG93ZXZlciwgdGhlcmUgbmVlZHMgdG8gYmUgdGhlIHN0cmljdGVzdCBvZiByZWd1bGF0aW9ucyBvbiB3aGF0IGRhdGEgY2FuIGJlIHVzZWQgdG8gY29tcHV0ZSB0aGVzZSBzY29yZXMsIGFuZCB0aGF0IGl0IGNhbm5vdCBiZSBjaGFuZ2VkIGFyYml0cmFyaWx5IGF0IGFueSByYW5kb20gdGltZSB0byBmaXQgdGhlIGJlbGllZnMgb2YgdGhlIHJ1bGluZyBib2R5IGF0IHRoYXQgZ2l2ZW4gdGltZS4gTm8gd2F5IHRoZSBDaGluZXNlIGdvdmVybm1lbnQgaXMgZm9sbG93aW5nIHN0cmljdCBkYXRhIHByaXZhY3kgZXRoaWNzIG9uIHRoZXNlLi4gClBlcmtpbnMuIEhlciBodXNiYW5kLCBUb21teSwgbGF1Z2hlZCBxdWl0ZSBsb3VkLiBUaGV5IGFyZSBjb25zaWRlcmVkIHZlcnkgd2VhbHRoeSBwZW9wbGUgaW4gbXkgYXJlYS4gCkhlIG91c3RlZCBBYmJvdCBmb3IgMzAgb2RkIGJhZCBwb2xscyBpbiBhIHJvdy4gCk15IGh1c2JhbmQgd2FzIHRyZWF0ZWQgZm9yIGhpcyBmb3Igb3ZlciBhIHllYXIgYW5kIGhlIHN0aWxsIGlzIG9ubHkgYXQgNDUlIGZ1bmN0aW9uIGFuZCBwcm9nbm9zaXMgaXMgc2hpdCBmb3IgaGltLiBGb3IgbWUsIEkgd2FzIHRyZWF0ZWQgZm9yIGFib3V0IHR3byBtb250aHMsIGRlY2xhcmVkIGN1cmVkLCBhbmQgeWVhcnMgbGF0ZXIgSSBTVElMTCBjYW4ndCB3YWxrIHdpdGhvdXQgYSBjYW5lIGFuZCBldmVuIHRoZW4gSSBnZXQgYWJvdXQgNTAgc3RlcHMgaW4gYmVmb3JlIEkgY2FuJ3QgZG8gYW55bW9yZS4gSSByZWx5IG9uIHZvaWNlIHRvIHRleHQgdG8gdHlwZSBiZWNhdXNlIG15IGhhbmRzIGFyZSBmdWNrZWQuIApDaGlyb3ByYWN0aWMgTWFuaXB1bGF0aW9uIGFuZCBSZWhhYmlsaXRhdGlvbiBJcnZpbmUgQ2FsaWYKTWluZSB3YXMgc3RpbGwgbm93aGVyZSB0byBiZSBmb3VuZC4uIApQc3N0OiBJdCBhbGwgYWJvdXQgSmVkIFlvcmsgUFIgYW5kIGhlIGF3ZnVsIGF0IFBSLgpUaGUgY2x1YiBoYXMgc2luY2UgY2xvc2VkLCBpdHMgd2Vic2l0ZSBhbmQgRmFjZWJvb2sgcGFnZSBoYXZlIGJlZW4gc2h1dCBkb3duLCBhbmQgaXRzIG9wZXJhdG9ycyBjb3VsZCBub3QgYmUgcmVhY2hlZC4KT25lIG9mIHRoZSBwb3NzaWJsZSByZWFzb25zIGZvciB0aGlzIGlzIHRoYXQgaW4gY29tcGFyaXNvbiB0byBvdGhlciBnYW1lcyBzdWNoIGFzIDcgY2FyZCBzdHVkIGFuZCBPbWFoYSBIaWdoLCB0aGUgZ2FtZSBpcyBlYXN5IHRvIGxlYXJuLiAKVGhlIHRlYWNoZXIgd2FzIGFza2luZyB0byBzcGVsbCBhIHdvcmQgYnkgc3BlYWtpbmcgYSBzZW50ZW5jZS4gSSB0aG91Z2h0IEkgaGFkIHRvIHNwZWxsIHRoZSB3aG9sZSBzZW50ZW5jZSBpbnN0ZWFkIG9mIHRoZSBqdXN0IHRoZSB3b3JkLiAKSSB0aGluayBJIGdvdCB1c2VkIHRvIHRoZSBpZGVhIHRoYXQgbXkgZmVldCB3ZXJlIG5ldmVyIGdvaW5nIHRvIGJlIGNvbWZvcnRhYmxlIG5vIG1hdHRlciB3aGF0IGFuZCBjb21iaW5lZCB0aGF0IHdpdGggcGluY2hpbmcgcGVubmllcyBhdCB0aGUgZW5kIG9mIGEgdGhydS4gCk1hcmtldGluZyBhbmQgU2FsZXMgb2YgR292ZXJubWVudCBCb25kcyBMb2NhbCwgc3RhdGUgYW5kIGZlZGVyYWwgYWdlbmNpZXMgc29tZXRpbWVzIHNlbGwgYm9uZHMgdG8gZmluYW5jZSBjYXBpdGFsIGltcHJvdmVtZW50IHByb2plY3RzIGluIHRoZWlyIGp1cmlzZGljdGlvbnMuIFRoZXNlIGFnZW5jaWVzIGhpcmUgYm9uZCBhbmQgc2VjdXJpdGllcyBtYXJrZXRpbmcgc3BlY2lhbGlzdHMgdG8gcHJlcGFyZSBib25kIHByb3NwZWN0dXNlcyBmb3IgaW52ZXN0b3JzLCB3aGljaCBkZXRhaWwgdGhlIHRlcm1zIG9mIHRoZSBib25kLCBhbmQgdG8gb3JnYW5pemUgbWFya2V0aW5nIGNhbXBhaWducyB0byBzZWxsIHRoZSBib25kcy4gQm9uZCBtYXJrZXRpbmcgc3BlY2lhbGlzdHMgYWxzbyB0eXBpY2FsbHkgbWFuYWdlIG1lZGlhIHJlbGF0aW9ucyBmb3IgYm9uZCBjYW1wYWlnbnMuIApMZXQgcmVhZCB0b2dldGhlciB3aGF0IEplc3VzIHNhaWQgaW4gdGhlc2UgdmVyc2VzLi4gCkFueW9uZSBidXQgbWUgZmluZCBpdCBvZGQgdGhhdCBTaGUgd291bGQgc3VwcG9ydCBzdXJ2ZWlsbGFuY2Ugb24gdXMsIHlldCBoYXZlIGhlciBvd24gc2VydmVyLiAKRG8gdGhleSBmb2xkIGVhcmx5IG9uPyBEbyB0aGV5IGZvbGQgd2hlbiB5b3UgYmV0IGJpZyBhbGwgb2YgdGhlIHRpbWUuIFdlcmUgdGhleSBibHVmZmluZyBmcm9tIHRoZSBmbG9wLCBidXQgZ290IGx1Y2t5IG9uIHRoZSByaXZlciBvciB0dXJuPyBZb3UgbmVlZCB0byBiZSBhd2FyZSBvZiB0aGVpciBiZXR0aW5nIGhhYml0cywgYW5kIHByb2Zlc3Npb25hbHMga25vdyBob3cgdG8gZG8gdGhpcy4gClsxMV0uIApObyBJIGRpZG4gd2FudCBhIGNvb2tpZSBmb3IgdGhlIDI1IGN1dHMsIHNwbGludGVycywgYW5kIGJsaXN0ZXJzLiBKdXN0IGEgb2ggd293LCB0aGF0IGNvb2wuCkkgc2hvd2VkIGhpbSB2aWRlbyBwcm9vZiBhbmQgaGUgc3RpbGwgZGVuaWVkIGV2ZXJ5dGhpbmcgYW5kIHNhaWQgaGUnbGwgb25seSBzZW5kIHVzIGJhY2sgJDgwMCBqdXN0IGJlY2F1c2UgImhlJ3MgdGlyZWQgb2YgdXMgYWNjdXNpbmcgaGltIi4gCihEb24ndCB3b3JyeSwgTWlzcyBQaXR5IFBhcnR5IG9mIE9uZSwgdGhlcmUgYXJlIG90aGVycyBvdXQgdGhlcmUgd2l0aG91dCBhIHNwZWNpYWwgc29tZW9uZSEpIEtlZXAgaXQgbGlnaHQgd2l0aCBncmVhdCBtdXNpYyAgIG5vIGxvdmUgc29uZ3MhIEdldCBhIHNpbGx5IGNha2UgYW5kIHNhY3JpZmljZSB0aGF0IGRhbW4gQ3VwaWQgZm9yIG5vdCBkb2luZyBoaXMgam9iLiBZb3UgY2FuIGhhdmUgdGhlbWVzLCBzd2FwIHdvcnN0IG9sZCBib3lmcmllbmQgc3RvcmllcywgaGVsbCwgZ2V0IGEgc3RyaXBwZXIgaWYgeW91IHdhbnQhIChZb3UgbmF1Z2h0eSBnaXJscyEhISkgQnV0IGJ5IGFsbCBtZWFucywgaGF2ZSBmdW4sIGVhdCwgZHJpbmssIGJlIG1lcnJ5LiAKIldlIHdpbGwgaGF2ZSB0aGUgSG91c2UgYmlsbCBhbmQgdGhlIFNlbmF0ZSBiaWxsIG9uIHRoZSBmbG9vciBhdCB0aGUgc2FtZSB0aW1lLCBhbmQgd2UgYXJlIHR3byBmaWxpYnVzdGVycyBhd2F5IGZyb20gdmljdG9yeSwiIHNhaWQgLiAiSSB0aGluayB3ZSdyZSBnb2luZyB0byB3aW4sIEkgdGhpbmsgd2UncmUgZ29pbmcgdG8gd2luLiIKVGhlcmUgd2VyZSBzaWduaWZpY2FudCByZXN1bHRzIGZvciBjb21wYXJpc29uIG9mIG9uZSB2ZXJzaW9uIG9mIENCVCB3aXRoIGFub3RoZXIgKEVTICAwLjI3LCA5NSUgQ0kgIDAuNDUgdG8gIDAuMDk7IHNldmVuIHN0dWRpZXMpLi4gCkJyaXRpc2ggaG9zcGl0YWxpdHkgY29tcGFueSBSaHViYXJiIHdpbGwgb3BlcmF0ZSBhIDEwLDAwMCBzcXVhcmUgZm9vdCBldmVudCBzcGFjZSBhbmQgbG91bmdlIGF0IHRoZSBwZWFrLjU1IEh1ZHNvbiBZYXJkcyAgIFNpZ25lZCBvZmZpY2UgdGVuYW50cyBpbmNsdWRpbmcgU3RlcGhlbiBBLiAKVG9kYXksIHRoZSBnYW1pbmcgd29ybGQgaXMgbXVjaCBtb3JlIHRoYW4gcGxheWluZyBjYXJkcy4gCkkgd2lsbCBzYXkgdGhhdCBJIGp1c3QgaGF2ZSB0YW5nbGUgcHJvbmUgaGFpci4gClRoZSB2aW9saW4gaXMgcGxheWVkIHdpdGggdGhlIHZpb2xpbiByZXN0aW5nIHVuZGVyIHlvdXIgY2hpbiBvbiB5b3VyIGxlZnQgc2hvdWxkZXIuIFlvdXIgaGFuZCBzaG91bGQgYmUgb3VuZGVyIHRoZSBuZWNrIG9mIHRoZSB2aW9saW4sIHdpdGggeW91ciB0aHVtYiBvbiB0aGUgbGVmdCBzaWRlIGFuZCB5b3VyIG90aGVyIGZvdXIgZmluZ2VycyB0byB0aGUgcmlnaHQuIApKdXN0IGluIHRoZSBldmVudCB5b3UgZGlkbid0IGtub3csIHRlbGxpbmcgYSA3IHllYXIgb2xkIHRvIHNvdW5kIG91dCAiaW5zZWN0cyIgb24gdGhlaXIgZmlyc3QgaW50ZXJuZXQgc2VhcmNoIGlzIGEgaG9ycmlibGUsIHRlcnJpYmxlLCBubyBnb29kIGlkZWEuCkRvIHlvdSBwbGF5IHBva2VyPyBJIGFtIGEgcG9rZXIgZmFuLiAKIkV2ZXJ5IHRpbWUgSSBzZWUgYSBwb3N0IGFib3V0IGhlciBvbmxpbmUgbXkgZXllcyB0ZWFyIHVwIGFuZCBJIGh1ZyBteSBzb24gYmVjYXVzZSBpdCdzIGp1c3QgaGVhcnRicmVha2luZy4gSSBqdXN0IHdhbnQgaGVyIG1vdGhlciB0byBrbm93IHRoYXQgdGhlIGNvbW11bml0eSBpcyBoZXJlIHRvIHN1cHBvcnQgaGVyLiBvbiBGZWIuIDE0LgpMaWZlIHdhcyBsb3ZlIGFuZCBibGlzcywgdGhlIHJpZGRsZSB3YXMgYW5zd2VyZWQuVW5mb3J0dW5hdGVseSwgdGhlIGJlc3QgZXZlciBpcyBhIHRvdGFsbHkgZGlmZmVyZW50IHN0b3J5LiAKSSBhbHNvIGtub3cgYSBtYW4gdGhhdCBrZWVwcyBpdCBmcm9tIGhpcyB3aWZlIG9mIG1hbnkgeWVhcnMuIApJIGV2ZW50dWFsbHkgY2FtZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0IFNpdCBhbmQgR28gU2hhcmsgd2FzIGp1c3QgbGlrZSBDYWxjdWxhdGVtIFBybywgYnV0IHdlYXJpbmcgYSBuaWNlciBzdWl0LiBUaGUgb25seSB0aGluZyBJIGZlZWwgaXQgaGFzIGRvbmUgd2VsbCBpcyByZW1pbmQgd2VhayBwbGF5ZXJzIGFib3V0IG5vdCBwbGF5aW5nIGdhcmJhZ2UgaGFuZHMuIEl0IHBsYWlubHkgc2F5cyB0byBmb2xkIHRoZXNlIGdhcmJhZ2UgaGFuZHMuIFRoaXMgbWF5IGJlIGEgZ29vZCB0aGluZyBmb3IgYmVnaW5uZXJzLiBIb3dldmVyLCBpZiB5b3UgYXJlIGJleW9uZCBrbm93aW5nIHRoZSB0cnVlIHdlYWtuZXNzIG9mIEo2b3MsIDEwNHMgZXRjLCB5b3UnbGwgYmUgbXVjaCBiZXR0ZXIgb2ZmIHdpdGggSG9sZCdlbSBQaXJhdGUgaW4geW91ciBzaXQgYW5kIGdvIGRvbWluYXRpb24uCldpdGhvdXQgc3BvaWxpbmcgYW55dGhpbmcgSSBleHBsYWluIHdoeSBzZWFzb24gMiBpcyBhIHZlcnkgZGl2aWRlZCByZWFjdGlvbjoKSWdub3JlIHRoZSByYWJibGUuIFlvdSdsbCBiZSBzdXJwcmlzZWQgaG93IG1hbnkgb2YgeW91ciBvcHBvbmVudHMgdHVybiBvdXQgdG8gYmUgYm9uYSBmaWRlIGlkaW90cy4uIApNeSBhaW0gaXMganVzdCB0byBnaXZlIHRoZW0gYSBicm9hZCB2aWV3IGFuZCBnZXQgdGhlbSB0aGlua2luZyBhYm91dCB0aGUgY29udGluZW50IGFzIGEgd2hvbGUgc2luY2UgdGhlIHRleHQgYW5kIG1vZHVsZXMgZG8gYSBnb29kIGpvYiBhdCBiZWluZyBtb3JlIHNwZWNpZmljLi4gClRoZSBmZWFyZnVsLCBpZ25vcmFudCBndXkgaGFzIGdvdCBhIGJsb2cgb24gdGhlIC4gSXQgbXVzdCBiZSBlYXN5IU9mIGFsbCBwZW9wbGUgaW4gdGhlIHdvcmxkIEkgd2FzIGVhc2lseSBvbmUgb2YgdGhlIG1vc3QgLiBhYm91dCAuIHRoZSBJbnRlcm5ldCBhbmQgbm93IHRoYXQgSSBldmVuIGtub3cgdGhlClVuYSBsb2NhdGlvbiBhY2NvZ2xpZW50ZSAoIDQwIHNlZGllIHNjaGVybW8gZSBwcm9pZXR0b3JlIHNlIHNlcnZvbm8pIG8gc2VkaSBwYXJuZXJzICggY29uIG1hZ2dpb3JlIGNhcGllbnphKQpJbiByZWFsaXR5LCBvbmx5IHRocmVlIG9mIHRoZW0gYXJlIHVzZWQgaW4gZXZlcnlkYXkgc3BlZWNoOiBmb3JtYWwsIHBvbGl0ZSwgYW5kIGluZm9ybWFsLCB3aGljaCBpcyBmdXJ0aGVyIGV4cGxhaW5lZCBpbiB0aGlzIGFydGljbGUuIEkgZG8gbm90IGtub3cgaG93IHVzZWZ1bCB0aGlzIHdvdWxkIGJlIHRvIHlvdSBzaW5jZSBLb3JlYW4gaXMgYW4gYWdnbHV0aW5hdGluZyBsYW5ndWFnZSwgYnV0IGl0IHNob3VsZCBzdGlsbCBnaXZlIHlvdSBzb21lIHRoaW5ncyB0byBjb25zaWRlciB3aGVuIGluY29ycG9yYXRpbmcgc29tZXRoaW5nIGxpa2UgdGhpcyBpbiB5b3VyIGxhbmd1YWdlLi4gCkRpZG4gcmVhbGl6ZSB1bnRpbCB3ZSBzdGFydGVkIGR1ZSBkaWxpZ2VuY2UganVzdCBob3cgbG9uZyB0ZXJtIHRoZSBpbnZlc3RtZW50IHdvdWxkIGJlIGFuZCB0aGUgcmlza3MgaW52b2x2ZWQuIFRoZSBtb3JlIHdlIGxvb2tlZCBhdCBpdCwgdGhlIG1vcmUgSSBxdWVzdGlvbmVkOiBEbyBJIHdhbnQgdG8gYmUgaW4gdGhpcyBidXNpbmVzcyBmb3Igc2V2ZW4geWVhcnM/IEFuZCBhZnRlciB0aGlzIHllYXIgaW4gcGFydGljdWxhciwgaXQgbWFrZXMgbWUgbW9yZSB3YXJ5LiBXZSBhcmUgZ29pbmcgdG8gaGF2ZSBhbm90aGVyIGxvb2sgYXQgaXQgaW4gdGhlIG5leHQgbW9udGggYW5kIGEgaGFsZiwgYnV0IG15IGNoYW5jZXMgb2YgZ29pbmcgYWhlYWQgYXJlIHNsaW1tZXIgdGhhbiB0aGV5IHdlcmUgd2hlbiB3ZSBzdGFydGVkLiBJZiB0aGlzIHdhcyBhIHRocmVlIHRvIGZpdmUgeWVhciBwcm9qZWN0LCB3ZSBqdW1wIGFsbCBvdmVyIGl0LiBleHBlcnQncyBvcGluaW9uIFRoZXJlIGFyZSBjaGFsbGVuZ2VzIGJleW9uZCB0aGUgdGltZSBmcmFtZSBmb3IgdGhlIFJPSSBhbmQgdGhlIHJpc2ssIHNhaWQgSm9obiBDaG8sIHBhcnRuZXIgaW4gdHJhbnNhY3Rpb24gc2VydmljZXMgYXQgS1BNRyBFbnRlcnByaXNlLiBtdWNoIG9mIHRoZSAkNTAwLDAwMCB3b3VsZCBnbyB0b3dhcmQgdGhlIGFjdHVhbCBwcm9kdWN0IHZlcnN1cyB3b3JraW5nIGNhcGl0YWwsIGZvciBleGFtcGxlPyBJZiBpdCB0aGUgZnVsbCAkNTAwLDAwMCBpdCBtaWdodCBiZSBhIGRlY2VudCByZXR1cm4uIE90aGVyd2lzZSwgaWYgdGhlIG1vbmV5IHdhcyBnb2luZyB0byBmdW5kIGFueSBvdmVyaGVhZCB0aGF0IHdvdWxkIGVhdCBpbnRvIHRoZSByZXR1cm4uIGRvbGxhcnMpLiBoaXMgY29zdHMgYXJlIGluIENhbmFkaWFuIGRvbGxhcnMsIHRoZSBlbnRyZXByZW5ldXIgd2lsbCBoYXZlIHRvIG1hbmFnZSBleGNoYW5nZSByYXRlIGZsdWN0dWF0aW9ucyBhbmQgdGhhdCB3aWxsIGFsc28gaW1wYWN0IGhpcyBib3R0b20gbGluZS4gQXMgd2VsbCwgaWYgaGUgYSBvbmUgbWFuIHNob3cgaGUgd2lsbCBoYXZlIHRvIGJ1aWxkIHVwIHRoZSBpbmZyYXN0cnVjdHVyZSB0byBzY2FsZSB1cCBvcGVyYXRpb25zLiBBbmQgaG93IGRvZXMgdGhhdCBmYWN0b3IgaW50byB0aGlzIGJ1c2luZXNzIG1vZGVsPyB0aGUgcGx1cyBzaWRlLCBDaGluYSBtaWRkbGUgY2xhc3MgaXMgcG9pc2VkIGZvciBncm93dGgsIHdoaWNoIG1lYW5zIHRoZSBkZW1hbmQgZm9yIHRoaXMgZGVsaWNhY3kgaXMgYWxzbyBwb2lzZWQgdG8gZ3Jvdy4gYW4gaW50cmlndWluZyBhc3BlY3Qgb2YgdGhlIGVxdWF0aW9uIGFzIHRoZSBlY29ub215IGluIENoaW5hIGNvbnRpbnVlcyB0byBncm93LgpUaGlzIGRlbW9uc3RyYXRlcyB0aGUgaGVscGVyJ3Mgd2lsbGluZ25lc3MgYW5kIGFiaWxpdHkgdG8gdW5kZXJzdGFuZCB0aGUgY29uY2VybnMgb2YgdGhlIG90aGVyIHBlcnNvbi4gCjMpICJPdXIgZ2VuZXMgdG9kYXkgYXJlIHZlcnkgc2ltaWxhciB0byB0aGUgZ2VuZXMgb2Ygb3VyIGFuY2VzdG9ycyBkdXJpbmcgdGhlIFBhbGVvbGl0aGljIHBlcmlvZCA0MCwwMDAgeWVhcnMgYWdvLCBhdCB3aGljaCB0aW1lIG91ciBnZW5ldGljIHByb2ZpbGUgd2FzIGVzdGFibGlzaGVkLiIyCk15IHF1ZXN0aW9ucyBhcmU6IGRpZCBtb3ZpbmcgaGlzIGF1dGhlbnRpY2F0b3IgYmV0d2VlbiBwaG9uZXMgbGVhdmUgaGltIHZ1bG5lcmFibGU/IENvdWxkIHRoZXJlIGhhdmUgYmVlbiBzb2Z0d2FyZSBvbiB0aGUgbmV3IHBob25lIHRoYXQgZGlkIHRoaXM/IERvZXMgaXQgaGF2ZSBhbnl0aGluZyB0byBkbyB3aXRoIHVzaW5nIHRoZSBtb2JpbGUgdmVyc2lvbiBvZiB0aGUgZ2FtZT8gQ291bGQgaXQgYmUgZHVlIHRvIG15IGludGVybmV0L25ldHdvcmsgaW4gTWFsYXlzaWE/IEJhc2ljYWxseSBJIGp1c3Qgd2FudCB0byB1bmRlcnN0YW5kIGhvdyB0aGlzIGhhcHBlbnMgYXMgSSBrbm93IHRoZXJlcyBubyB3YXkgdG8gZ2V0IHN0dWZmIGJhY2sgb3IgdHJhY2sgdGhlIGFjY291bnQgdGhhdCBwcm9maXRlZCBhbmQgSSBoYXZlIGFsd2F5cyB0aG91Z2h0IGFuIGF1dGhlbnRpY2F0b3IgY291bGQga2VlcCBhbiBhY2NvdW50IHNhZmUuLiAKR2VudGxlIG1hc3NhZ2Ugd2l0aCB3YXJtIG9saXZlIG9pbCBvciBjb2NvbnV0IG9pbCB3aWxsIHN0aW11bGF0ZSB0aGUgaGFpciBmb2xsaWNsZXMgYW5kIG1ha2UgeW91ciBoYWlyIGdyb3cuIEluIHRpbWUgeW91IHdpbGwgc2VlIG5ldyBncm93dGggYWxvbmcgeW91ciBoYWlybGluZSBhcyB3ZWxsIGFzIGFsbCBvdmVyIHlvdXIgaGVhZC4KV2hpY2ggaXMgc29tZXRoaW5nIHRoYXQgdGhleSBiZWVuIHByZXR0eSBjb25zaXN0ZW50IG9uLiBUYWtlIGEgbG9vayBhdCBob3cgdGhleSBoYW5kbGVkIHRoZSBWaXZlLiBUaGVtIGNyZWF0aW5nIHRoYXQgbmV3IHBsYXRmb3JtIGRpZG4gcmVhbGx5IHJlc3VsdCBpbiBhbnkgZXhjbHVzaXZpdHksIHRoZXkgaW4gZmFjdCBmb3VnaHQgdG9vdGggYW5kIG5haWwgYWdhaW5zdCBGYWNlYm9vayBhbmQgT2N1bHVzIGR1ZSB0byBhdHRlbXB0cyBhdCBleGNsdXNpdml0eS4KQXBwcmVuZXogbGVzIGNvbWJpbmFpc29ucyAgY2lucSBjYXJ0ZXMuIElsIGV4aXN0ZSBkaXggbWFpbnMgIGNpbnEgY2FydGVzIGRlIGJhc2UgYXUgcG9rZXIgKGRjcml0ZXMgZGFucyBsYSBkZXJuaXJlIHNlY3Rpb24gZGUgY2UgdHV0b3JpZWwpLiBBcHByZW5leiBsZXMgYWluc2kgcXVlIGxldXIgY2xhc3NlbWVudCAoZGUgbGEgcGx1cyBmb3J0ZSAgbGEgcGx1cyBmYWlibGUpLiBDJ2VzdCBpbmRpc3BlbnNhYmxlIHBvdXIgam91ZXIgYXUgcG9rZXIuIEltcHJpbWV6IHVuZSBmaWNoZSBhdmVjIGNlcyBjb21iaW5haXNvbnMgZXQgdHVkaWV6IGxhLiBTaSB2b3VzIGNvbm5haXNzZXogYmllbiB0b3V0ZXMgbGVzIGNvbWJpbmFpc29ucyBwb3NzaWJsZXMsIHZvdXMgcG91cnJleiBkdGVybWluZXIgc2kgdm90cmUgbWFpbiBlc3QgYXNzZXogZm9ydGUgcG91ciBxdWUgdm91cyBtaXNpZXogb3Ugc2kgdm91cyBkZXZleiB2b3VzIGNvdWNoZXIgb3UgZXNzYXllciBkZSBibHVmZmVyLgpXZSBhcmUgZGlzY291cmFnaW5nIGFueSBwb2xpY2UgYWdpdGF0aW9uLiJBY2NvcmRpbmcgdG8gYSBuZXdzIHJlbGVhc2UsIGEgQm91bGRlciBwb2xpY2Ugb2ZmaWNlciBvYnNlcnZlZCBhIG1hbiBzaXR0aW5nIGluIGEgcGFydGlhbGx5IGVuY2xvc2VkIHBhdGlvIGFyZWEgYmVoaW5kIGEgInByaXZhdGUgcHJvcGVydHkiIHNpZ24gYXQgMjMzMyBBcmFwYWhvZSBBdmUuIEZyaWRheSBhbmQgYXNrZWQgaWYgaGUgd2FzIGFsbG93ZWQgdG8gYmUgdGhlcmUuLiAKIkZvcmVpZ24gdHJhc2giIGlzIGEgc2x1ciwgc28gaXQgbm90IHN1cnByaXNpbmcgdGhhdCBpdCBhdHRyYWN0aW5nIGEgbG90IG9mIHJhY2lzdHMuIFNheWluZyB0aGF0IHlvdSBhcmUgb25seSB0YWxraW5nIGFib3V0IGNlcnRhaW4gZm9yZWlnbmVycyB3aG8gYmVoYXZlIGJhZGx5IGlzIHNvcnQgb2YgbGlrZSBhICJ5b3Ugb25lIG9mIHRoZSBnb29kIG9uZXMiIGFyZ3VtZW50LiBJdCByZWFsbHkgYSBsb3cgYnJvdyBkaXNjdXNzaW9uIGFib3V0IGEgbm9uIGlzc3VlIHRoYXQgYXBwZWFscyB0byBYZW5vcGhvYmVzIGFuZCByYWNpc3RzLiAKQWVyb2JpYyBvciBBbmFlcm9iaWMgVHJhaW5pbmcgQmVzdCBGb3IgR2V0dGluZyBSaWQgb2YgQmVsbHkgRmF0ClBERiwgZVB1YiwgTW9iaSBUb3RhbC4gUmVhZCA6IDg2IFRvdGFsIERvd25sb2FkIDogODg0IEZpbGUgU2l6ZSA6IDQzLDUgTWIuIApGb3IgZnJlc2ggZ3JhZHVhdGVzIHdpdGggaGlnaCBpbnN1cmFuY2UgSSByZWNvbW1lbmQgdGhlIDMgb3IgYSBsZXNzIHBvd2VyIGNpdmljLiAKV2lsbCBzdGlsbCBuZWVkIGJvdGguIEhhbGYgb2YgaXRzIHJldmVudWVzIGdvIGF3YXkgaWYgaXQgZ2V0cyBpbnRvIGEgZmlnaHQgd2l0aCBlaXRoZXIuIApBIGhlbG1ldCBjYW4gYWJzb2x1dGVseSBwcm90ZWN0IGEgd2VhcmVyIGludm9sdmVkIGluIGEgY2FyIGNyYXNoLiBTdXJlIGlmIGEgY2FyIGhpdHMgeW91IGRvaW5nIDQ1bXBoIHlvdSBhcmUgb24gYmlnIHRyb3VibGUuIElmIGEgY2FyIHN0aWNrcyBpdCdzIGJ1bXBlciBvdXQgdG9vIGZhciBhbmQgY2xpcHMgeW91bmF0IGEgbG93IHNwZWVkIHNlbmRpbmcgeW91IG9uIHRoZSBncm91bmQgb3IgdGhlaXIgaG9vZCwgc28geW91IHJlYWxseSB0aGluayBhIGhlbG1ldCB3b24ndCBwcm90ZWN0IHlvdSBiZWNhdXNlIHRoZSBkcml2ZXIgdGhvdWdoICJoZSdzIHdlYXJpbmcgYSBoZWxtZXQsIEkgY2FuIHBhc3MgYSBsaXR0bGUgY2xvc2VyPyJJIHNheSBtYWludGVuYW5jZSBjb3N0cyBhcmVuIGFsbCB0aGF0IG11Y2gsIHJlYWxseS4gClBVTEwgQiAoYmFyYmVsbCByb3dzIGluc3RlYWQgb2YgZGVhZGxpZnRzIChnb3R0YSBnaXZlIGxlZ3MgdGltZSB0byByZWNvdmVyKSBhbmQgYm9keXdlaWdodCBwdWxsIHVwcyBpbnN0ZWFkIG9mIHdlaWdodGVkIGNoaW4gdXBzKQpJIHNvbWV0aW1lcyBoYXZlIHRvIHdlYXIgYSBoaWdoIHZpeiBqYWNrZXQgdG8gd2FsayBhcm91bmQgZm9yayBsaWZ0cy4gClJhcmVseSBnZXRzIGFuIE9tYWhhIGdhbWUgZ29pbmcuIApJIHRoaW5rIHdoZW4geW91IHRoZSAib3RoZXIiIGluIGFuIGluZHVzdHJ5IChJIGltYWdpbmUgaXQgd29ya3MgdGhlIHNhbWUgZm9yIG1lbiBpbiBmZW1hbGUgZG9taW5hdGVkIGluZHVzdHJpZXMpIHlvdSBmZWVsIGxpa2UgeW91IHB1c2hpbmcgZXh0cmEgaGFyZCB0byBub3Qgb25seSByZXByZXNlbnQgeW91cnNlbGYgYnV0IHlvdXIgZW50aXJlIGdlbmRlci4gClRoZSBJc2xhbWljIFN0YXRlIGhhcyBiZWVuIGtub3duIHRvIG1ha2UgdW5zdWJzdGFudGlhdGVkIGNsYWltcyBvZiByZXNwb25zaWJpbGl0eSBmb3IgYXR0YWNrcyBhcm91bmQgdGhlIHdvcmxkLgpCYmJvdXJxIFtNXSAgMSBwb2ludCAgc3VibWl0dGVkIDkgZGF5cyBhZ28KVGhlIHRlbiBtaXJhY3Vsb3VzbHkgYWNjb21wbGlzaGVkIHN0b3JpZXMgaW4gQWxpY2UgTXVucm8ncyBGcmllbmQgb2YgTXkgWW91dGggbm90IC4gU2hlIGhhcyBwdWJsaXNoZWQgdGhpcnRlZW4gY29sbGVjdGlvbnMgb2Ygc3RvcmllcyBhcyB3ZWxsIGFzIGEgbm92ZWwsIExpdmVzIG9mIEdpcmxzIGFuZCBXb21lbiwgYW5kIHR3byB2b2x1bWVzIG9mIFNlbGVjdGVkIFN0b3JpZXMuIApWb3VzIHZvdXMgdGVzIGJhdHR1cyBwb3VyIGxlIFBBQ1MsIHF1ZSBsJ29uIGEgdm90CldvbmRlcmZ1bCBDb21lcyBPdXQgb2YgdGhlIENsb3NldCBQcmVjaXBpdG91cyBIQkFDIEFueW9uZSBLbm93IGEgRHIuIApUbyBtZSBJIGp1c3QgZmVsdCBsaWtlIEkga25ldyB3aGF0IEkgd2FzIGdvaW5nIHRvIGdldCBldmVyeSBlcGlzb2RlIHNvIEkgZGVjaWRlZCB0byBzdG9wIGxpc3RlbmluZy4gClRoZSBkZW5vbWluYXRpb24gd2FzIGVsaW1pbmF0ZWQgaW4gMjAwNiBkdWUgdG8gbG93cHVyY2hhc2luZyBwb3dlci4gKEZ1bGwgQW5zd2VyKS4gCkRvbiAzIGJldCBzdWl0ZWQgY29ubmVjdG9ycyBmcm9tIHRoZSBTQiBvdmVyIGFuIG9wZW4gYW5kIHNldmVyYWwgY2FsbGVycy4gCkF0IGZpcnN0IEkgZmVsdCBiYWQgYmVjYXVzZSBoZSBpc24gdGhlIG1vc3QgYXR0cmFjdGl2ZSBndXksIGJ1dCBhdCBzb21lIHBvaW50IEkgcmVhbGl6ZWQgaGUgZmVsdCBlbnRpdGxlZC4gSSBndWVzcyBteSBsYXN0IHN0cmF3IHdhcyB3aGVuIGhlIHRvbGQgbWUgYWJvdXQgdGhpcyBnaXJsIHdobyAiY2hlYXRlZCIgb24gaGltLCB3aGVuIHRoZXkgaGF2ZW4gZXZlbiBnb25lIG9uIGEgc2luZ2xlIGRhdGUgYW5kIGhhdmUgb25seSBiZWVuIHRhbGtpbmcgdG8gZWFjaCBvdGhlciBmb3IgbGVzcyB0aGFuIGEgd2Vlay4gCkJlY2F1c2UgbmFyY2lzc2lzdHMgcmFyZWx5IHNlZWsgY2FyZSwgZmV3IG9mIG91ciBwYXJlbnRzIGhhdmUgYSBmb3JtYWwgZGlhZ25vc2lzLiBTbyBpbiB0aGlzIHNwYWNlLCAibmFyY2lzc2lzdCIgaXMgYSB0ZXJtIHVzZWQgbG9vc2VseSB0byByZWZlciB0byBhIHZhcmlldHkgb2YgY29uZGl0aW9ucywgYW5kIGlzIG5vdCB1c2VkIGluIGEgY2xpbmljYWwgc2Vuc2UuIFdlIGFyZSBub3QgcHJvZmVzc2lvbmFscyBhbmQgY2Fubm90IGRpYWdub3NlIGFueWJvZHkuIFBsZWFzZSBzaGFyZSB5b3VyIHN0b3JpZXMsIHlvdXIgaGlzdG9yaWVzLCB5b3VyIGZlYXJzLCBhbmQgeW91ciB0cml1bXBocy4KUHJlc2lkZW50IERvbmFsZCBUcnVtcCBhY2N1c2VkIFR3aXR0ZXIgb2YgdGFyZ2V0aW5nIGhpcyBmb2xsb3dlcnMgZm9yIHJlbW92YWwgZnJvbSB0aGUgc29jaWFsIG1lZGlhIHBsYXRmb3JtLCBhbWlkIGNvbXBsYWludHMgYnkgY29uc2VydmF0aXZlcyB0aGF0IHNvY2lhbCBtZWRpYSBjb21wYW5pZXMgaGF2ZSBiZWVuIGRpc2NyaW1pbmF0aW5nIGFnYWluc3QgcmlnaHQgd2luZyB2b2ljZXMuCkFuZCB0aHVzIHdlIHNoYWxsIGFsd2F5cyBiZSB3aXRoIHRoZSBMb3JkLi4gCkEgc2ltcGxlIGltcGxlbWVudGF0aW9uClRoZXkgYXJlIGp1c3QgYnJvdGhlbHMgZXNzZW50aWFsbHkuICJpbmNhbGwgb25seS4iIEkgZ3Vlc3MgOC8xMCBvZiB0aG9zZSB3b21lbiBhcmUgYmVpbmcgdHJhZmZpY2tlZC4gTWFzc2FnZSBQYXJsb3JzLCB0aG91Z2g/IEl0IGp1c3Qgbm90IGNvbW1vbi4gCk5hbmN5IFRvZGQgb2YgTmFuY3kgVG9kZCdzIFBva2VyIFBhbGFjZSBnYXZlIGEgdGh1bWJzIHVwIHRvZGF5IHRvIHRoZSByZWNlbnQgcnVsaW5nIGJ5IHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgcmVsYXRpbmcgdG8gdGhlIGlzc3VlIG9mIGEgcHVibGljIHZvdGUgb24gY2FzaW5vcyAiV2Ugd2VyZSBjaGFsbGVuZ2VkIHJlY2VudGx5IGluIHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUncyBvZmZpY2VzIGFib3V0IHRoZSBzdWZmaWNpZW5jeSBvZiBvdXIgYmFsbG90IHRpdGxlLiBXZSBob3dldmVyIHdlcmUgY29uZmlkZW50IHRoZSBIb25vcmFibGUgTWFyayBNYXJ0aW4gd291bGQgcnVsZSBhcyBBdHRvcm5leSBHZW5lcmFsIE1jRGFuaWVsIGhhZCBwcmV2aW91c2x5IGluIGZpbmRpbmcgdGhlIGJhbGxvdCBsYW5ndWFnZSBzdWZmaWNpZW50IGZvciB0aGUgbmVlZHMgb2Ygdm90ZXJzLCBpdCB3YXMgYSBsb25nIDMwIGRheSB3YWl0IGZvciB0aGUgZGVjaXNpb24gdG8gYmUgbWFkZS4iCkNoYW5jZXMgYXJlLCBieSB0aGUgdGltZSB5b3UgcGVyZm9ybSB0aGUgYWJvdmUgc3RlcHMsIHlvdSB3aWxsIGRpc2NvdmVyIHNvbWUgdHlwZSBvZiBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIHVzZWQgY2FzaW5vIHBva2VyIGNoaXBzLiBPbmNlIHlvdSBoYXZlIGxlYXJuZWQgYSBiaXQgYWJvdXQgdGhlIGhpc3Rvcnkgb2YgdGhlIGNoaXAsIGl0IGlzIGltcG9ydGFudCB0byBjb25zaWRlciB0aGUgdmFsdWUgb2YgdGhlIGNoaXBzLiBUaGlzIHdlYnNpdGUgd2lsbCBpbmZvcm0geW91IG9mIG1hbnkgZXhjaXRpbmcgZmFjdHMgcmVnYXJkaW5nIHRoZSBvdmVyYWxsIHZhbHVlIG9mIHRoZSBwb2tlciBjaGlwcyB0aGF0IHlvdSBvd24hIElmIHlvdSB3b3VsZCBsaWtlIHRvIGxlYXJuIG1vcmUsIGNoZWNrIG91dCB0aGUgIlJlc291cmNlcyIgc2VjdGlvbiBiZWxvdyBmb3Igc29tZSB2YWx1YWJsZSBsaW5rcyBvbiB1c2VkIGNhc2lubyBwb2tlciBjaGlwcyEuIApUaGUgb2N0YWdvbmFsIHBva2VyIHRhYmxlIGlzIG1hZGUgYnkgYSByZXNwZWN0YWJsZSBXaXNjb25zaW4gZnVybml0dXJlIG1hbnVmYWN0dXJlciB3aG8gaGFzIGJlZW4gaW4gYnVzaW5lc3Mgc2luY2UgdGhlIG5pbmV0ZWVuIGZpZnRpZXMuIFRoZSB0YWJsZSBpcyBzb21ldGhpbmcgdGhhdCB5b3UgYW5kIHlvdXIgcG9rZXIgYnVkZGllcyB3aWxsIGVuam95IHVzaW5nIG9uIGEgcmVndWxhciBiYXNpcy4gU29saWQgd29vZCBwb2tlciB0YWJsZXMgYXJlIG5vdCBjaGVhcCB0byBidXkgYW5kIGlmIHlvdSB3ZXJlIGdvaW5nIHRvIGJ1eSBvbmUgZm9yIGZyaWVuZGx5IGdhbWVzIGF0IGhvbWUgeW91IG1heSBoYXZlIHRvIHNlZSBpdCBhcyBhbiBpbnZlc3RtZW50IHBpZWNlLi4gCkkgc2F5IHRoaXMgYXMgc29tZW9uZSB3aG8gcmVhbGx5IGxpa2VkIHRoZSBqb3VybmFsaXN0aWMgc3Rvcnl0ZWxsaW5nIG9mIFVuaXZlcnNhbCBUaGVtZXMgYnV0IHRob3VnaHQgdGhlIGJsb2F0ZWQsIHJlcGV0aXRpdmUsIGJ1bGxzaGl0IGxlYWRlbiBDb21tb24gYXMgTGlnaHQgYW5kIExvdmUgQXJlIFJlZCBWYWxsZXlzIG9mIEJsb29kIHdhcyBvbmUgb2YgdGhlIHdvcnN0IGFsYnVtcyBvZiB0aGF0IHllYXIuIFRoZSBsYXR0ZXIgY29tcGxldGVseSB0dXJuZWQgbWUgb2ZmIG9mIHRoZSBiYW5kIGFuZCB0aGlzIHBvcnRpb24gaGVyZSB0aGF0IEkgcXVvdGUsIHdoaWNoIGhhcyBubyBlZGl0b3JsaXphdGlvbiB0byBteSBrbm93bGVkZ2UsIG1ha2VzIG1lIHRoaW5rIHRoYXQgS296YWxlayBzdGlsbCBoYXNuIGdvbmUgYmFjayB0byBhY3R1YWxseSB0aGlua2luZyBhYm91dCBoaXMgc29uZ3Mgd2hlbiBoZSB3cml0ZXMgdGhlbSBidXQgYmVsaWV2aW5nIHRoYXQgd2hhdGV2ZXIgY29tZXMgdG8gaGlzIG1pbmQgaXMgaW5zdGFudGx5IGEgY2xhc3NpYywgbm8gZWRpdGluZyByZXF1aXJlZC4KSHVnaGVzIFdhdGNoIGludGVuc2lmaWVzIGFzIGJsdWUKQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gCkQnYXV0YW50IHF1ZSBsZXMgYXV0b21vYmlsaXN0ZXMgcXVpIHByZW5uZW50IGNlcyByYWNjb3VyY2lzLCBjYW1pb25zIGRlIGxpdnJhaXNvbiBldCB0YXhpcyBwb3VyIGJlYXVjb3VwLCByb3VsZW50ICB2aXZlIGFsbHVyZSwgYXUgcmlzcXVlIGRlIHJlbnZlcnNlciB1biBlbmZhbnQgc29ydGkgZCd1bmUgZGVzIG5vbWJyZXVzZXMgY29sZXMgb3UgY3JjaGVzIGR1IHNlY3RldXIuLiAKQnkgZGVtb25pemluZyBpdCB5b3UgbWF5IHN0b3AgYSBmZXcga2lkcyBoZXJlIGFuZCB0aGVyZSwgYnV0IHlvdSdsbCBhbHNvIGJlIHN0b3BwaW5nIGEgbG90IG9mIGFkdWx0cyB3aG8gYXJlIGFjdHVhbGx5IHRoaW5raW5nIGFib3V0IHdoYXQgaXMgYmVpbmcgc2FpZCwgd2hpbGUgbW9zdCB0ZWVucyBhcmUganVzdCBnb2luZyAibmljb3RpbmUgc291bmRzIGZ1bi4gCkJvcm4gaW4gRWRtb250b24sIGhlIGxpdmVkIGluIGZvc3RlciBob21lcyBmb3IgYSBzcGVsbCBhbmQgd2FzIGV2ZW50dWFsbHkgYWRvcHRlZC4uIApHYW1ibGluZyBzaXRlcyB0aGF0IGFwcGx5IGZvciBhIEthaG5hd2FrZSBsaWNlbnNlIGFyZSByZXF1aXJlZCB0byBwbGFjZSB0aGVpciBjb21wdXRlciBzZXJ2ZXJzIGluIGEgcmVmdXJiaXNoZWQgbWF0dHJlc3MgZmFjdG9yeSBvbiB0aGUgcmVzZXJ2YXRpb24gZm9yIGEgbWluaW11bSBvZiB0aHJlZSB5ZWFycy4gCkFuZCBTd2VkaXNoIGVsZWN0cmljaXR5IHByb2R1Y3Rpb24gcmVsaWVzIGhlYXZpbHkgb24gbnVjbGVhciBhbmQgaHlkcm8gc28gZXZlbiB0aGUgdHJhaW5zIGFyZSB2ZXJ5IGNsZWFuLiBNZWFud2hpbGUgb3VyIGVudmlyb25tZW50YWwgcGFydHkgd2FudHMgdG8gZG8gdGhlIHNhbWUgcmVmb3JtcyBoZXJlIHByYWN0aWNhbGx5IG1lYW53aGlsZSB0aGVpciBsZWFkZXIgZmxpZXMgYmV0d2VlbiBBcmxhbmRhIGFuZCBCcm9tbWEgYWlycG9ydCAodGhlIHR3byBhaXJwb3J0cyBvZiBTdG9ja2hvbG0pIGFuZCBub3QganVzdCBvbmNlLiAKSW0gRGV1dHNjaGVuIGtsaW5ndCBlcyBkaXJla3QgYmVyc2V0enQgaGFsdCBzZWhyIGRhbmFjaCwgYWJlciBkYXJ1bSBpc3QgZGFzIGphIGF1Y2ggZWluZSBlbmdsaXNjaGUgRm9ybXVsaWVydW5nLiBBbnNvbnN0ZW4gaXN0IGtlaW4gc2NobGVjaHRlcyBXb3J0LCBudXIgaXN0IGVzIGViZW4gYmVybGVnZW5zd2VydCwgb2IgbWFuIGVzIGluIHNlaW5lbiBTdGFuZGFyZCBXb3J0c2NoYXR6IGFscyBCZWxlaWRpZ3VuZyBuZWJlbiBTY2h3dWNodGVsLCBIb21vIHVuZCBTcGFzdGkgZWlucmVpaGVuIHdpbGwsIG9kZXIgb2IgbWFuIHNpY2ggZGFzIGViZW4gc3BhcnQuT2IgZXMgc2ljaCBicmluZ3Qgc2ljaCBoaWVyIGluIGFuZGVyZSBXb3J0aGxzZW4gYWxzIEJldHJvZmZlbmVyIHp1IGZsY2h0ZW4gd2FnZSBpY2ggenUgYmV6d2VpZmVsbiwgZGVubiBuZWVkcyBpc3QgamEgYXVjaCBzY2hvbiBsYW5nZSBhZGFwdGllcnQuIApZb3UgbWlnaHQgYWxzbyBiZSBpbnRlcmVzdGVkIGluIFBvbHl2YWdhbCB0aGVvcnkuIFRoZSBudXRzaGVsbCB2ZXJzaW9uIGlzIHRoYXQgdGhyb3VnaCB0aGUgc3RyZXNzZXMgb2YgbW9kZXJuIGxpZmUgKGJpcnRocywgZGVhdGhzLCB0cmF1bWEsIHJlcGV0aXRpdmUgInNtYWxsIiB0cmF1bWFzLCBjYXIgYWNjaWRlbnRzLCBzcG9ydHMgaW5qdXJpZXMsIHBvb3IgY2hpbGRob29kIGV4cGVyaWVuY2VzL3JlYXJpbmcsIGV0YykgdGhhdCBzb21lIHBlb3BsZSAoSSB3b3VsZCBzYXkgTE9UUyBvZiBwZW9wbGUpIHN0YXkgaW4gYSBzdGF0ZSBvZiBjb25zdGFudCB0ZW5zaW9uLiBUaGVpciBtdXNjbGVzIG5ldmVyIHJlYWxseSBsZXQgZ28sIHRoZXkgYXJlIGFsd2F5cyB0aWdodC4gVGhlIHRlbnNpb24gdmFyaWVzICAgc29tZSBwZW9wbGUgd2lsbCBoYXZlIGl0IGluIHRoZWlyIGJhY2ssIHNvbWUgaW4gdGhlaXIgbGVncywgb3RoZXJzIGluIHRoZWlyIGhpcHMsIHNvbWUgdGhlaXIgbmVjaywgZXRjLiBCdXQgd2hlbiB0aGlzIHBlcnNvbiBsaWVzIGRvd24sIHRoZXkgY2FuIGZ1bGx5IHJlbGF4LiBUaGV5IG1pZ2h0IHdha2UgdXAgZmVlbGluZyBzdGlmZiwgYWNoZXkgb3IgaW4gcGFpbi4gT25jZSB0aGV5IGxlYXJuIHRvICJyZWd1bGF0ZSIgdGhlaXIgdmFndXMgbmVydmUsIHRoaXMgY2hyb25pYyB0ZW5zaW9uIGJlZ2lucyB0byBmYWRlLCBzb21ldGltZXMgY29tcGxldGVseSwgc29tZXRpbWVzIGp1c3QgbGVzcyBpbnRlbnNlLgpWZXJ5IGZldyBwZW9wbGUgaGF2ZSBldmVuIGNvbWUgaW50byB0aGVpciBvd24gYXQgMjAgICB0aGV5IGFyZSBzdGlsbCBmaW5kaW5nIHRoZWlyICJ2b2ljZSIuIEFsbCB0aGlzIGFzaWRlLCB3aHkgYXJlIHlvdSBzbyBjcml0aWNhbCBvZiBzb21lb25lIHdobyBpcyBzdXBwb3NlZCB0byBiZSB5b3VyIGJlc3QgZnJpZW5kPyBUaGlzIGlzbiB5b3VyIEJGIG9yIEdGIG9yIHNwb3VzZS4gClNwaWVsZSBtaXQgdmVyc2NoaWVkZW5lbiBTcGllbGVybi4gU29sY2hlLCBkaWUgZnIgZGljaCBiZXJlY2hlbmJhciBzaW5kLCBkaWUgbmljaHQgYmVyZWNoZW5iYXIgc2luZCwgZGllIGltbWVyIGFuIGRlcnNlbGJlbiBTdHJhdGVnaWUgZmVzdGhhbHRlbiwgb2RlciBzb2xjaGUsIGRpZSBnYXIga2VpbmUgU3RyYXRlZ2llIGhhYmVuICAgc3BpZWxlIGdlZ2VuIGRpZSBnZXNhbXRlIFBhbGV0dGUgZGVyIHZlcnNjaGllZGVuc3RlbiBDaGFyYWt0ZXJlLiBUcmlmZnN0IGR1IGF1ZiBlaW5lbiBHZWduZXIsIGRlciBzdHJrZXIgc3BpZWx0IGFscyBkdSwgZGFubiBzY2hpZWUgZGljaCBhdWYgaWhuIGVpbiB1bmQgc3BpZWxlIGlobiBzb2xhbmdlLCBiaXMgZHUgZ2VuYXVzbyBzdGFyayBzcGllbHN0Li4gClVuZm9ydHVuYXRlbHkgaXQgd2FzIGEgc3VwZXIgYW1hdGV1ciBncm91cCBvZiBmcmllbmRzIGFuZCB0aGV5IGp1c3Qgc3RvcHBlZCBtYWtpbmcgZXBpc29kZXMgbGFzdCB5ZWFyIG9yIHNvLiAKRnJvbSB0aGVyZSB0cnkgc2l0IGluIGEgZGFyayBxdWlldCBwbGFjZSwgZmlyc3QgdGhpbmcgaW4gdGhlIG1vcm5pbmcsIGFuZCBjbGVhciB5b3VyIG1pbmQuIFRyeSB0byBoYXZlIG5vIHRob3VnaHRzIGFzIGxvbmcgYXMgeW91IGNhbiBnbyBmb3IuIEl0IHdvbiBiZSBsb25nLiAKVGhpcyB3YXMgYSA3IHN0YXIgY2x1YiB3aXRoIDEwMDAgcGxheWVycy4gCkNldHRlIHByaW9kZSBpbml0aWFsZSBkZSAxMCBzZW1haW5lcyByZW52b2llIGVuIGZhaXQgIGwnZW1icnlvbiAoMCAgOCBzZW1haW5lcykuIFNvaXQgb24gcHJlbmQgOCBzZW1haW5lcyAgcGFydGlyIGRlIGxhIGNvbmNlcHRpb24sIHNvaXQgb24gcGFybGUgZGUgMTAgc2VtYWluZXMgIHBhcnRpciBkZSBsJ2Ftbm9ycmhlIChhYnNlbmNlIGRlIHJnbGVzIDsgMiBzZW1haW5lcyBlbnRyZSBsZSBwcmVtaWVyIGpvdXIgZGVzIGRlcm5pcmVzIHJnbGVzIGV0IGxhIGZjb25kYXRpb24sIGMnZXN0ICBkaXJlIGR1IHBpYyBkJ292dWxhdGlvbiBmaXggYXUgZGVybmllciBqb3VyIGRlcyByZ2xlcyBxdWkgaW50ZXJ2aWVudCAxNCBqb3VycyBwbHVzIHRhcmQpWzFdLiAKRGFzIGlzdCBlaW5lIGV0d2FzIGxhbmdzYW1lcmUgVmVyc2lvbiB1bmQgZnIgbG5nZXJlIEFiZW5kZSBwYXNzZW5kLiAKQnV0IGl0J3MgcG9rZXIgbWFjaGluZXMgdGhhdCBjYXVzZSBtb3N0IG9mIHRoZSBwcm9ibGVtcy4gVGhleSd2ZSBmbG91cmlzaGVkIHNpbmNlIHRoZSBlYXJseSAxOTkwcyB3aGVuIHN0YXRlIGdvdmVybm1lbnRzICh3aXRoIHRoZSBleGNlcHRpb24gb2YgV2VzdGVybiBBdXN0cmFsaWEpIGFsbG93ZWQgdGhlbSBpbnRvIHB1YnMgYW5kIGNsdWJzIGFzIGEgbWVhbnMgb2YgcmFpc2luZyByZXZlbnVlIGZyb20gZ2FtYmxpbmcgdGF4ZXMuIEF1c3RyYWxpYSBpcyBzYWlkIHRvIGhhdmUgMTAgcGVyIGNlbnQgb2YgYWxsIHRoZSB3b3JsZCdzIHBva2VyIG1hY2hpbmVzLi4gClNhY2hhIEJhcm9uIENvaGVuCkFzIHlvdSBhbHJlYWR5IGtub3cgZGlmZmVyZW50IHRvcCBvbmxpbmUgcG9rZXIgc2l0ZXMgb2ZmZXIgZGlmZmVyZW50IGtpbmRzIG9mIHNlcnZpY2VzLiAKTWFzc2FnZSBpcyBhbHNvIGJlbmVmaWNpYWwgdG8gcHJlZ25hbnQgd29tZW4sIHJlZHVjaW5nIHBhaW5zIGVzcGVjaWFsbHkgZHVyaW5nIGxhYm9yLi4gClRoaXMgaXMgYW4gZXhjZWxsZW50IHdheSB0byBsZWFybiwgZnVuIGZvciBhbnkgcG9rZXIgZW50aHVzaWFzdCwgYW5kIGlzIGVhc3kgdG8gdXNlLiAKV2hlbiB5b3UgYXJlIGRvbmUgeW91IGNhbiBlaXRoZXIgZGVhY3RpdmF0ZSB0aGUgZW52aXJvbm1lbnQgd2l0aCBjb25kYSBkZWFjdGl2YXRlIG9yIHNpbXBseSBjbG9zZSB5b3VyIHRlcm1pbmFsLgpFdmVuIGlmIHlvdSd2ZSBnb3QgYWxyZWFkeSBzZWxlY3RlZCBhIE1vbnRyZWFsIGJlYXV0eSBzYWxvbiwgY29udGVtcGxhdGUgbWFraW5nIGNvbXBhcmlzb25zIG9mIHRoZSBwcmljZXMgd2l0aCBvdGhlciBjbGluaWNzLiBFdmVuIHNvLCBub3JtYWxseSBiZSBzdXJlIHRoYXQgdGhlIHJlbWVkaWVzIHlvdSBtaWdodCBoYXZlIHNlbGVjdGVkIGFyZSBjb21wYXJhYmxlIHRvIG9uZSB5ZXQgYW5vdGhlci4gQXQgYWxsIHRpbWVzLCB5b3UgaGF2ZSB0byB0YWtlIHRoZSB0b3AgcXVhbGl0eSBvZiB5b3VyIHNlcnZpY2VzIHByb3ZpZGVkIGludG8gYWNjb3VudC4gCkhvdyBkbyBjYXNpbm9zIG1ha2UgbW9uZXkgb24gVGV4YXMgSG9sZCdlbQpTaGUgYXNrcyB0aGUganVkZ2UgZm9yIHRoZSBkaXZvcmNlIGFuZCB0aGV5IHdpbGwgZ3JhbnQgaXQgb25jZSBzaGUgaGFzIHNob3duIHRoYXQgdGhlIG1hcnJpYWdlIGhhcyBpcnJldHJpZXZhYmx5IGJyb2tlbiBkb3duLiBVc3VhbGx5IHRoYXQncyBzaG93biBieSB0aGUgcGVvcGxlIGxpdmluZyBzZXBhcmF0ZSBhbmQgYXBhcnQgaW4gZXhjZXNzIG9mIG9uZSB5ZWFyLiAKSSBoYXZlIGEgZ3JlYXQgY2hlYXQgZm9yIEhvd3JzZSEgWW91IGdldCBvbmUgcGFzcyBmb3IgZXZlcnkga2FybWEgcG9pbnQgKElmIHlvdSBkb24ndCBoYXZlIGthcm1hIHlvdSBnZXQgYSBvbmUgcGFzcyBpdGVtIGF0IHRoZSBCTSEpIGFuZCA1MDBlIGZvciBldmVyeSBob3JzZS4gQXdhcmQgbWF5IHRha2UgdXAgdG8gMjQgaG91cnMuIApUbyBwcm9ncmVzcyBoaXMgZXhwZXJpbWVudHMgc28gdGhhdCB0aGV5IHdvcmsgb24gaHVtYW5zLCBKZWt5bGwgbmVlZHMgdG8gaGFydmVzdCBmcmVzaCBmZW1hbGUgaG9ybW9uZXMgZnJvbSBkZWFkIHdvbWVuLiBBdCBmaXJzdCBoZSB2aXNpdHMgbG9jYWwgbW9ydHVhcmllcyBhbmQgbGF0ZXIgZW1wbG95cyB0aGUgc2VydmljZXMgb2YgQnVya2UgYW5kIEhhcmUzIHRvIHByb2N1cmUgaGltIG1vcmUgeW91bmcsIGRlY2Vhc2VkIHdvbWVuIGZvciBoaXMgcmVzZWFyY2guIEhlIGlzIGluaXRpYWxseSB1bmF3YXJlIHRoYXQgdGhleSBhcmUga2lsbGluZyB0aGUgd29tZW4gaW4gb3JkZXIgdG8gZ2V0IHRoZSBib2RpZXMgdGhleSBhcmUgc3VwcGx5aW5nLCB1bnRpbCBoaXMgcmVzZWFyY2ggcmVhY2hlcyBhIGNyaXRpY2FsIG1vbWVudCB3aGVyZSBoZSBpcyByZWFkeSB0byB1c2UgdGhlIHBvdGlvbiBvbiBoaW1zZWxmLi4gCk5pY2sgWGVub3Bob24gaGVscGVkIGluaXRpYXRlIHRoZSBQb2tpZSBMZWFrcyBjYW1wYWlnbi4gUGljdHVyZTogVHJpY2lhIFdhdGtpbnNvbgpDQlM0IFZpZXdlcnMgU3RlcCBVcCBUbyBIZWxwIFdXSUkgVmV0IEluIE5lZWQgT2YgTmV3IFJvb2ZBIDk0IHllYXIgb2xkIFdvcmxkIFdhciBJSSB2ZXRlcmFuIGluIG5lZWQgaXMgZ2V0dGluZyBoZWxwIHRoYW5rcyB0byBtYW55IG9mIG91ciBnZW5lcm91cyBDQlM0IHZpZXdlcnMuClRoZXkgYWxzbyBpbmNsdWRlZCBwZXJzb25hbCBpbmZvcm1hdGlvbjogZnJpZW5kcywgYnVzaW5lc3MgcGFydG5lcnMsIHNleHVhbCBwYXJ0bmVycywgbWlzdHJlc3NlcywgZ2lnb2xvcywgZGVidG9ycywgY3JlZGl0b3JzLCBwZXJzb25hbCBsZXR0ZXJzIChpbnRlcmNlcHRlZCBhdCB0aGUgcG9zdCBvZmZpY2UpLCByZWNvcmRlZCBwaG9uZSBjYWxscywgcGhvdG9zLCB3ZWRkaW5nIGxpc3RzLCBsYXVuZHJ5IHRpY2tldHMgYW5kICJtaXNjZWxsYW5lb3VzIGl0ZW1zLiIuIAo1MyA4MykgQWxsIHRoZSB0cmFja3MgbGlzdGVkIGhlcmUgYXJlICJ1bnJlbGVhc2VkLiIgWW91IGNhbiBmaW5kIHRoZW0gb24gWW91dHViZTogS2Fib29tIChmZWF0LiAKV2l0aCBhbiBleWUgd2F0ZXJpbmcgJDMwLDAwMCBwcmljZSB0YWcsIHRoZSBMQkYgNzUwIG9vemVzIGx1eHVyeS4gClRyZWF0bWVudCBnb2FscyBhbmQgcGF0aWVudHMgdGltZSBmcmFtZXMgaW5mbHVlbmNlZCB0aGVpciBwcmVmZXJlbmNlcy4gTGlrZXdpc2UsIHdoZW4gY29uc3VtZXJzIHdlcmUgdW5jZXJ0YWluIGFib3V0IHRoZWlyIGNvbmRpdGlvbiBhbmQgbm90IGluIGFueSBwYXJ0aWN1bGFyIGh1cnJ5IGZvciBhIHJlc29sdXRpb24sIHRoZXkgcHJlZmVycmVkIHRyYWRpdGlvbmFsIHJlbWVkaWVzLgpTaG9ydCBzdHVmZiBsaWtlIEhleSwgSSBoYXZlIG1hc3NhZ2UgdGltZXMgYXZhaWxhYmxlLiAKQXNrZWQgaW4gYW4gaW50ZXJ2aWV3IGFuIGlubm9jdW91cyBxdWVzdGlvbiBhYm91dCBob3cgbG9uZyB0aGV5IGJlZW4gYXQgdGhlaXIgam9iLCB0aGV5IG1pZ2h0IHVubmVjZXNzYXJpbHkgc2F5ICJBY3R1YWxseSBJIGxlZnQgYSB3ZWVrIGFnbywgYW5kIGFtIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBuZXcuIiBXZWxsIHdpdGggdGhhdCBpbmZvcm1hdGlvbiBsZWFrLCBhIHRoaXJkIG9mIHlvdXIgZWFybmluZ3MgZm9yIHRoZSB5ZWFyIGFyZSBvdXQgdGhlIHdpbmRvdyBidWRkeS4gClBvc3RzIHdpdGggbm8gcmVsYXRpb24gdG8gSmFwYW4sIHBvc3RzIG5vdCB3cml0dGVuIGluIEVuZ2xpc2gsIHBvc3RzIHdpdGggdmFndWUvY2xpY2tiYWl0IHRpdGxlcywgc3BhbSAoaW5jbHVkaW5nIGFmZmlsaWF0ZSBsaW5rcyksIGFuZCBwb3N0cyBpbnRlbmRlZCBmb3IgcGVyc29uYWwgZ2FpbiAoaW5jbHVkaW5nIGNyb3dkZnVuZGluZyBsaW5rcykgd2lsbCBhbHNvIGJlIHJlbW92ZWQuCk9uY2UgdGhhdCBpcyBkb25lLCBhbnRpY2lwYXRlIGFuIGVhcm4gcmF0ZSBvZiBvbmUgYmlnIGJldCBhbiBob3VyLiAKRnJlZCBhbmQgSSB3ZXJlIHZvbGxleWJhbGwgdGVhbW1hdGVzIGF0IExvbmRvbiBUZWFjaGVycyBDb2xsZWdlIG1hbnkgeWVhcnMgYWdvLiBGcmVkIHdhcyBub3Qgb25seSBhbiBnaWZ0ZWQgYXRobGV0ZSBidXQgYWxzbyBhIHRyZW1lbmRvdXMgdGVhbSBndXkuIEkgYW0gc28gc29ycnkgdG8gbGVhcm4gb2YgRnJlZCBwYXNzaW5nLiAKUG9rZXIgaXMgc28gbXVjaCBmdW4gdG8gcGxheSBhbmQgd2F0Y2ggYmVjYXVzZSBpdCBoYXMgYSB3b25kZXJmdWwgaGFiaXQgb2YgY3VsbWluYXRpbmcgaW4gZHJhbWF0aWMsIG5lcnZlIHdyYWNraW5nLCBleGNpdGluZyBtb21lbnRzLiBXZSBzYXcgcGxlbnR5IG9mIHRoZW0gYXQgdGhlIDIwMTYgV29ybGQgU2VyaWVzIG9mIFBva2VyLCBpbmNsdWRpbmcgYSBncmVhdCBvbmUgYmV0d2VlbiBXaWxsaWFtIEthc3NvdWYgYW5kIEdyaWZmaW4gQmVuZ2VyLgpCZWNhdXNlIHRoaXMgcm9sZSByZXF1aXJlcyBhIGdyZWF0ZXIgZGVncmVlIG9mIEVkaXRvcmlhbCBrbm93IGhvdyB0aGFuIHVzdWFsICAgYW5kIGNvbWVzIHdpdGggYSBncmVhdCBkZWFsIG9mIHRydXN0IGF0dGFjaGVkICAgd2UgaGF2ZSByZWNydWl0ZWQgb25seSBmcm9tIHBlb3BsZSB3aG8gaGF2ZSBhbHJlYWR5IHNob3duIHRoZWlyIGRlZGljYXRpb24gdG8gdGhlIEVkaXRlZCBHdWlkZSBhbmQgbWVtYmVyc2hpcCBvZiB0aGUgc2NoZW1lIGlzIGJ5IGludml0YXRpb24gb25seS4gV2UndmUgYWxzbyBoYWQgdG8ga2VlcCB0aGUgZ3JvdXAgc21hbGwgZW5vdWdoIHRvIGJlIG1hbmFnZWFibGUgd2hpbGUgYmVpbmcgb2YgYSBzaXplIGJpZyBlbm91Z2ggdG8gbWFrZSBhIGRpZmZlcmVuY2UgdG8gdGhlIHVwa2VlcCBvZiB0aGUgRWRpdGVkIEd1aWRlIGFyY2hpdmUuLiAKU2Vjb25kLCBhbHRob3VnaCBpdCBJUyBwb3NzaWJsZSwgaXQgaXMgZXhjZWVkaW5nbHkgZGlmZmljdWx0IHRvIGJsdWZmIGF0IGFuIG9ubGluZSBwb2tlciBnYW1lIGFuZCBldmVuIGhhcmRlciB0byBsZWFybiBob3cgdG8gcmVhZCB5b3VyIG9wcG9uZW50cy4KU3F1YXRzIG9uIE1vbmRheSBnYXZlIG1lIGhpcCBwYWluIHdoZW5ldmVyIEkgZ290IGNsb3NlIHRvIGhpdHRpbmcgZGVwdGguIApUbyBoYXZlIGNvbmZpZGVuY2UgaW4gbmVnb3RpYXRpb24sIHNhbGVzcGVvcGxlIGFuZCBtYW5hZ2VycyBuZWVkIGNvbmZpZGVuY2UgaW4gcHJpY2luZy4gQ29uZmlkZW5jZSBpbiBwcmljaW5nIGNvbWVzIGZyb20ga25vd2luZyB0aGUgdmFsdWUgb2YgeW91ciBwcm9kdWN0cyBvciBzZXJ2aWNlcy4gCkJvdGggb2YgbXkgZGF1Z2h0ZXJzIHdlcmUgaW4gTWlkZGxlIFNjaG9vbCBhdCB0aGUgdGltZSBhbmQgdGhleSByZW1lbWJlcmVkIHdhdGNoaW5nIGl0IGF0IGEgc2Nob29sIGFzc2VtYmx5IGluIFNlYXR0bGUuLiAKSXQgc291bmRlZC5PcGluaW9uOiBUcmFpbGJsYXppbmcgdG9kYXkgdG8gdHJhbnNmb3JtIHRvbW9ycm93Q2FsZ2FyeSBoYXMgYSBncmVhdCBsZWdhY3kgd29ydGggY2VsZWJyYXRpbmcgYW5kIHByZXNlcnZpbmcuIApJdCBpcyBpbXBvcnRhbnQgdGhhdCB5b3UgcmVtZW1iZXIgdGhhdCB0aGUgVW5pdmVyc2l0eSBvZiBCaXJtaW5naGFtJ3MgVUNBUyBjb2RlIG51bWJlciBpcyBCMzIuIApJIGJsYW1lZCBteXNlbGYgYSBsb3QgZm9yIHRoaW5ncyBmZWVsaW5nIGxpa2UgdGhleSB3ZXJlbiB3b3JraW5nIG91dCAgIGFuZCBzbyBkaWQgc2hlLi4gCiJDaGluYSBuZWVkcyB0aGUgYWlycGxhbmVzIGZvciBncm93dGgsIiBoZSBzYWlkLiBqb2JzIGdlbmVyYXRvci4iClRoZSBzaG93IG9ubHkgZW5oYW5jZWQgaGlzIGFiaWxpdHkgdG8gYXR0cmFjdCBoaWdoIGNhbGlicmUgZnJhbmNoaXNlZXMuLiAKIkknbSBub3QgZ29pbmcgdG8gaGF2ZSBhbnkgY29tbWVudCBvbiB0aGlzIGJlY2F1c2UgSSBkb24ndCBoYXZlIGFueSBpbmZvcm1hdGlvbiwiIGhlIHNhaWQuICJBcyBpdCBwbGF5cyBvdXQsIHdlJ2xsIHNlZSB3aGF0IGhhcHBlbnMuIEJ1dCBJIGRvbid0IGhhdmUgYW55IG90aGVyIGluZm9ybWF0aW9uIGFuZCB5b3UgY2FuIGFzayB0aGUgcXVlc3Rpb24gMjAgZGlmZmVyZW50IHdheXMsIGJ1dCB0aGVyZSB3b24ndCBiZSBhbnkgY29tbWVudCBiZWNhdXNlIEkgZG9uJ3QgaGF2ZSBhbnkgaW5mb3JtYXRpb24uIi4gCjcuIEFuZ2UgYm9vYnkgdHJhcHMgaSBkaXR0IGh1cy4gCk5vIGxvdmUgZm9yICJuaWNlIiBkcml2ZXJzIGhlcmUuIApJdCBzb3VuZHMgbGlrZSB5b3VyIGdvYWwgYXMgYSBncm91cCBpcyB0byBoYXZlIGZ1bi4gU29tZXRpbWVzIHRoYXQgbWVhbnMgcHV0dGluZyBhd2F5IHlvdXIgcG93ZXJmdWwgY2FyZHMgdG8gZm9zdGVyIGEgcGxheSBlbnZpcm9ubWVudCB0aGF0IGV2ZXJ5b25lIGNhbiBlbmpveS4gTGlzdGVuIHRvIGVhY2ggb3RoZXIgYW5kIHdvcmsgd2l0aCBlYWNoIG90aGVyIGFuZCBqdXN0IGhhdmUgZnVuISBUaGVyZSBhIGNhdmVhdC4gCkkgd2Fzbid0IG1ha2luZyBlbm91Z2ggbW9uZXkgdG8gcGF5IGZvciBpdCBzbyBJIG5lZWRlZCBhIHBsYW4uIEkgY2FtZSB1cCB3aXRoIGEgd2F5IHRvIHJhaXNlIG1vbmV5IGFuZCB0aHJvdyBhIGdyZWF0IHBhcnR5IGF0IHRoZSBzYW1lIHRpbWUuIApUaGVyZSBhcmUgbWFueSBjb21tb25seSB1c2VkIHNvZnR3YXJlIGluIG9ubGluZSBwb2tlciByb29tcyBhbGwgb3ZlciB0aGUgSW50ZXJuZXQuIFRoZSBtb3JlIHJlcHV0YWJsZSBvbmVzIGluY2x1ZGUgQ3J5cHRvbG9naWMsIE1pY3JvZ2FtaW5nLCBQbGF5VGVjaCBhbmQgUmVhbFRpbWUgR2FtaW5nLiBIb3dldmVyLCB0aGVyZSBhcmUgc3RpbGwgc29tZSBwb2tlciByb29tcyB0aGF0IHVzZSB0aGVpciBvd24gcHJvcHJpZXRhcnkgc29mdHdhcmUuCjMuIE9uIHRoZSBmbGF0IGZpbGUgcmVjZWl2ZSBkaXNhc3NlbWJsaW5nIHN0YWdlLCBwdXQgZmxhdCBmaWxlIGRpc2Fzc2VtYmxlciBhbmQgcGljayB0aGUgc2NoZW1hLgpJIGRpZG4ndCBrbm93IEkgd2FzIHByb3RlY3RpdmUgb2YgdGhlIHBlb3BsZSBJIGxvdmUuIEJ1dCBJIGRvIGtub3cgSSBmZWVsIHBlcnNvbmFsbHkgaHVydCwgaW5zdWx0ZWQgYWN0dWFsbHkgd2hlbiBzb21ldGhpbmcgaGFwcGVucyB0byBteSBwZW9wbGUsIGJ1dCB0aGUgcGVvcGxlIGluIG15IGxpZmUgZmVlbCB0aGUgc2FtZSB3YXkgYWJvdXQgbWUsIHRoYXQncyB3aGF0IHJlbGF0aW9uc2hpcHMgYXJlIGFib3V0LiBJIG1lYW4gSSB3b3VsZCBoYXZlIGFyZ3VtZW50cyB3aXRoIG15IGZyaWVuZHMgb3IgdGVhc2UgdGhlbSBidXQgaWYgc29tZW9uZSBlbHNlIGRvZXMgaXQgSSBzZXJpb3VzbHkgZmVlbCBsaWtlIEkgd291bGQgbWVzcyB0aGVtIHVwLldoYXQncyBhIHR5cGljYWwgZGF5IG9uIHNldCBsaWtlP0RlcGVuZGluZyBvbiB3aGVyZSBvdXIgbG9jYXRpb24gaXMgYXQgZGVjaWRlcyB0aGUgZGF5LiAKIldlIGFyZSBzb2NpYWwgY3JlYXR1cmVzIHRoYXQgcmVseSBvbiBncm91cCBtZW1iZXJzIGZvciBvdXIgc3Vydml2YWwgYW5kIHJlcHJvZHVjdGl2ZSBzdWNjZXNzLCIgc2hlIHNheXMuICJUaGF0IG1lYW5zIGdldHRpbmcgYWxvbmcgd2l0aCBlYWNoIG90aGVyIGlzIG9mIHBhcmFtb3VudCBpbXBvcnRhbmNlLiAKVGhlIHNlY29uZCBsb2FkIG9mIHBvbywgdGhlIENoaWxjb3QgaW5xdWlyeSBpbiBMb25kb24sIGJyb3VnaHQgZm9ydGggdGhlIHRlc3RpbW9ueSBvZiBBbGFzdGFpciBDYW1wYmVsbCwgVG9ueSBCbGFpciBLYXJsIFJvdmUgbGlrZSBzcGluIGRvY3Rvci4KV1BUIFBva2VyIENsdWIgZ2l2ZXMgeW91IGdyZWF0IGNoYW5jZSB0byBsZWFybiB0aGUgZ2FtZSBvZiBwb2tlciB3aXRob3V0IGV4dHJhIG1vbmV5IHNwZW5kaW5nLiAKU29ycnkgcG90ZW50aWFsIHBvcCB1cCB0ZW50IGJ1eWVycyBpbiBteSBhcmVhLgpDYW4gSSBGaWxlIGZvciBVbmVtcGxveW1lbnQgZm9yIEJlaW5nIExhaWQgT2ZmIEZyb20gYSBTZWNvbmQgSm9iPwpEZXNjcmliaW5nIHNvbWVvbmUgYXMgc2hvcnQsIGJ1bGdpbmcsIGFtYmlndW91cywgd2l0aCBhIGhhcmxvdCBzb24gbm9zZSBhbmQgYSB0d2lzdGVkIHNtaWxlIGRvZXNuIGdvIHZlcnkgZmFyIGluIGlkZW50aWZ5aW5nIHNvbWVvbmUgdW5sZXNzIHlvdSBrbmV3IHRoYXQgdGhlcmUgd2FzIG9uZSB3YXkgb2YgZGVmaW5pbmcgZWFjaCBvbmUgb2YgdGhvc2UgY2hhcmFjdGVyaXN0aWNzLiBDcmVhdGVkIHN1Y2ggYW4gaW5zdHJ1bWVudCBpbiBoaXMgVGVsZWdyYXBoaWMgQWlkaW5nIElkZW50aWZpZXIsIGEgZGV2aWNlIGhlIHdvdWxkIGZpbmFsbHkgcGF0ZW50IGluIDE4NTQgd2l0aCB0aGUgYWlkIG9mIGhpcyBhdHRvcm5leXMgRm95bGUgTW9sZSAoYXBwbGllZCBmb3IgYXQgQ292ZW4gR2FyZGVuKS4gCkZvciBleGFtcGxlLCAiIE9oLCBIb25leSwgSSBrbm93IHdlIGRpZG4ndCBkaXNjdXNzIHRoaXMsIGJ1dCBoZXJlJ3Mgb3VyIG5ldyBwdXBweSB0aGF0IEkgcGlja2VkIHVwIGZyb20gdGhlIEh1bWFuIFNvY2lldHkgb24gdGhlIHdheSBob21lIGZyb20gd29yayIgT3IgIiBPaCBieSB0aGUgd2F5LCBJIGp1c3QgZ2FtYmxlZCAkMjAwIGRvbGxhcnMgYXQgdGhlIGNhc2lubyBvbiB0aGUgd2F5IGhvbWUgZnJvbSB3b3JrLiAKSSBhY3R1YWxseSBwbGFuIHRvIGdldCBhbm90aGVyIGNyZWRpdCBjYXJkLiAKTXVzcyBkYXMgc2Vpbj8iLCBmcmFndGUgc2llLCB1bmQgYXVmIHNlaW4ga3VyemVzICJKYSIsIGZ1aHIgc2llIHdlaXRlciwgIm1hbmNobWFsIHNjaGllYmUgaWNoIG1pciBhdWNoIGRlbiBrbGVpbnN0ZW4gZGVyIFZpYnJhdG9yZW4gaW4gZGVuIFBvIi4uIApNZWVzZWVrc3lvdXJ0aXRzICAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRvZGF5J3MgZGVjaXNpb24gaW4gSmFtIHYuIApVbiBkYnV0LiAKSGFycnkgUG9rZXIsIG9mIFBoaWxhICBkZWxwaGlhOyBNci4gCkkgZGlkIG5vdCBtYWtlIGl0IHRvIHRoZSBicmVhaywgYnV0IEkgZHVseSB0b29rIG15IDEyIHRvIGEgYmxhY2tqYWNrIHRhYmxlLiBEaWRuJ3QgZXZlbiBib3RoZXIgdGFraW5nIGEgc2VhdCwganVzdCBkdW1wZWQgbXkgMTIgb24gYW4gZW1wdHkgYm94IGV4cGVjdGluZyB0byBsb3NlIGl0LiBEZWFsZXIgc2F5cyB0aGF0IG15IDEgY2hpcHMgZG9uJ3QgcGxheSwgd2hhdGV2ZXIsIEkgbGVmdCB0aGUgMTAgdGhlcmUuIApJIGNvbXBsZXRlbHkgYWdyZWUgd2l0aCB5b3UuIFNlZWluZyB0aGluZ3MgbGlrZSB0aGlzLCBhbmQgb3RoZXIgdGhpbmdzIG5vdCBxdWl0ZSBhcyBkcmFzdGljIGFzIHRoaXMsIG9ubHkgaGVscHMgdG8gcHJvdmUgdGhhdCBvdXIgc29sZGllcnMgbmVlZCB0byBiZSBiZXR0ZXIgY2FyZWQgZm9yIHdoaWxlIHRoZXkgc2VydmUsIGFuZCBBRlRFUiB0aGV5IHNlcnZlLiBQVFNEIGNhbiBiZSBkZXZhc3RhdGluZy4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uQSBmb3JtZXIgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciB3aWxsIHNwZW5kIGF0IGxlYXN0IG5pbmUgeWVhcnMgaW4gYSBWaWN0b3JpYW4gamFpbCBhZnRlciBzY2FtbWluZyB0aGUgQ29tbW9ud2VhbHRoIEJhbmsgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBhIGZyYXVkIG9mICJicmVhdGh0YWtpbmcgcHJvcG9ydGlvbnMiLiBXaWxsaWFtIEpvcmRhbm91LCA2MCwgd2FzIHNsYW1tZWQgYnkgQ291bnR5IENvdXJ0IG9mIFZpY3RvcmlhIEp1ZGdlIFBhdWwgTGFjYXZhIG9uIFRodXJzZGF5IGZvciBjYXVzaW5nIGRlbGF5IGluIHRoZSBwcm9jZWVkaW5ncyB3aXRoIGEgImZyYW5rbHkgZW1iYXJyYXNzaW5nIiBjcm9zcyBleGFtaW5hdGlvbiwgbGVhZGluZyB0byAiYSBjb21wbGV0ZSB3YXN0ZSBvZiB0aGUgY291cnQgdGltZSIuIApPdmVydmlldyBmb3IgUmVlZHN0aWx0CkxldCdzIGZhY2UgaXQuIFNvbWUgcGVvcGxlIGp1c3QgZG9uJ3QgbGlrZSB0byBnYW1ibGUuIFdoaWxlIHRoaXMgaXMgdHJ1ZSwgbWFueSBvZiB0aGVtIGRvIGxpa2UgdG8gd2F0Y2ggb3IgcGxheSBhbmQgd2hhdCBiZXR0ZXIgd2F5IHRvIGRvIHRoaXMgdGhlbiBsZWFybmluZyB0byBEZWFsIFBva2VyIExpa2UgQSBQcm8uIFRoaXMgd2F5IHlvdSBnZXQgdGhlIGJlc3Qgb2YgYm90aCB3b3JsZHMsIGFuZCBjYW4gc3RpbGwgbWFrZSBhIGhlYWx0aHkgaW5jb21lIGF0IHRoZSBzYW1lIHRpbWUuIEluIG9yZGVyIHRvIGRvIHRoaXMgdGhvdWdoIHlvdSBtdXN0IGdvIHRocm91Z2ggZGVhbGVyIHNjaG9vbCwgc28gaXQgaXMgaW1wb3J0YW50IHRvIGdldCBhaGVhZCBvZiB0aGUgY29tcGV0aXRpb24uClRvIHdvcmsgb3V0IGltcGxpZWQgb2RkcyBzaW1wbHkgc3VidHJhY3QgcG90IG9kZHMgZnJvbSB0aGUgb2RkcyBvZiBoaXR0aW5nIHlvdXIgZHJhdy4gRm9yIGV4YW1wbGUgc2F5IHdlIGhhdmUgYSBmbHVzaCBkcmF3IGZhY2luZyBhICQxMCBiZXQgaW50byBhICQxMCBwb3Q6Ck1ha2VzIG15IGJsb29kIGJvaWwuIFlvdSBzdXBwb3NlZCB0byBiZSBhYmxlIHRvIHRlbGwgaXQgdG8gcGVvcGxlIHlvdSBjYW4gdHJ1c3QgdG8gc2FmZWx5IGNvbmZpZGUgaW4uIElzbiB0aGF0IGF0IGxlYXN0IGEgc21hbGwgcGFydCBvZiBpdD8gVGFraW5nIGF3YXkgdGhlIHBvd2VyIG9mIHlvdXIgZXhwZXJpZW5jZSBieSBzYXlpbmcgaXQgb3V0IGxvdWQgYW5kIG5vdCBmZWVsaW5nIGxpa2UgeW91IHNob3VsZCBiZSBhc2hhbWVkIGlzIGEgaHVnZSBwYXJ0IG9mIGl0IEkgdGhpbmsuLiAKU28gaXQgaXMgd2hlbiBzb21ldGhpbmcgdHJ1bHkgYmFyYmFyaWMgbGVha3MgaW50byBvdXIgY3VsdHVyYWwgY29uc2Npb3VzbmVzcywgbGlrZSB0aGUgY2FzZSBvZiBKYXljZWUgRHVnYXJkLCB3ZSBhcmUgbGl0ZXJhbGx5IGZvcmNlZCB0byB3YXRjaCBpdCwgdGFsayBhYm91dCBpdCwgYmUgZGlzZ3VzdGVkIGJ5IGl0LCBhbmQgaW5zaXN0IGl0IGlzIHVudXN1YWwuIEJ1dCB0aGVyZSBpcyBub3RoaW5nIHRydWx5IHVudXN1YWwgYWJvdXQgdGhpcy4gU2V4dWFsbHkgdmlvbGVudCBhY3RzIGFyZSBjb21taXR0ZWQgZGFpbHkgYnkgImNpdmlsaXplZCIgbWVuICBvbiBjaGlsZHJlbiwgd29tZW4sIGFuZCB5ZXMsIG90aGVyIG1lbi4gVGhlIG51bWJlciBvZiBkYXRlIHJhcGVzIG9uIGFueSBBbWVyaWNhbiBjb2xsZWdlIGNhbXB1cywgdGhlIG51bWJlciBvZiBwaG9uZSBjYWxscyB0byA5MTEgYmVjYXVzZSBvZiBkb21lc3RpYyB2aW9sZW5jZSwgdGhlIG51bWJlciBvZiBjaGlsZHJlbiBpbiBmb3N0ZXIgY2FyZSBiZWNhdXNlIG9mIHNleHVhbCBhbmQgcGh5c2ljYWwgYWJ1c2UgbWVhbnMgdGhhdCB0aGUgdW5zcGVha2FibGUgYW5kIGRpc2d1c3RpbmcgYWN0cyBjb21taXR0ZWQgYnkgUGhpbGxpcCBHYXJyaWRvIGFyZSBub3QgZXhhY3RseSB1bmltYWdpbmFibGUgb3IgZXZlbiBhbGwgdGhhdCB1bmlxdWUuIFF1aXRlIGhvbmVzdGx5LCB0aGlzIGNhc2UgaXMgc28gZWVyaWx5IGxpa2UgdGhlIEF1c3RyaWFuIGNhc2Ugb2YgSm9zZWYgRnJpdHpsLCB3aG8gaGVsZCBoaXMgb3duIGRhdWdodGVyIGEgc2xhdmUgaW4gYSBzb3VuZHByb29mIGJhc2VtZW50IGluIHBsYWluIHNpZ2h0IGFuZCBhbHNvIHJlcGVhdGVkbHkgcmFwZWQgaGVyIGFuZCBmYXRoZXJlZCBjaGlsZHJlbiB3aXRoIGhlciwgdGhhdCBHYXJyaWRvIGFuZCBoZSBjb3VsZCBiZSBicm90aGVycy4KVGhlIGJldCBzbGlwIHdpbGwgaW5mb3JtIHlvdSBpZiB5b3UndmUgcmVhY2hlZCB0aGUgbWF4aW11bSBudW1iZXIgb2YgYmV0cyBhbGxvd2VkLkhvdyBsb25nIHdpbGwgaXQgdGFrZSBmb3IgbXkgYmV0IHRvIHNldHRsZT9BcyBzb29uIGFzIHRoZSBldmVudCBvZiB5b3VyIGJldCBoYXMgZmluaXNoZWQgYW5kIGFzIHNvb24gYXMgdGhlIGZpbmFsIHJlc3VsdCBoYXMgYmVlbiBvZmZpY2lhbGx5IGNvbmZpcm1lZCwgeW91ciBiZXQgd2lsbCBiZSBzZXR0bGVkIGFuZCBhbnkgd2lubmluZ3MgY29taW5nIG9mIGl0IHdpbGwgYmUgY3JlZGl0ZWQgdG8geW91ciBhY2NvdW50LiBBZnRlciB0aGUgY29uZmlybWF0aW9uIG9mIHRoZSBmaW5hbCByZXN1bHQgeW91IHdpbGwgaGF2ZSB5b3Ugd2lubmluZ3MgYXZhaWxhYmxlIG5vdCBsb25nZXIgdGhhbiAzMCBtaW51dGVzLklzIGl0IGEgc2FmZSBwbGFjZSBmb3IgbXkgcGVyc29uYWwgYW5kIGZpbmFuY2lhbCBkZXRhaWxzP0JldGZyZWQgZW1wbG95cyBhZHZhbmNlZCBzZWN1cml0eSBzeXN0ZW1zLCB3aGljaCBhcmUgdXNlZCB0byBwcm90ZWN0IGFsbCB5b3VyIHBlcnNvbmFsIGFuZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24uIFRoZSBzaXRlIHVzZXMgU1NMIHRlY2hub2xvZ3kgdGhhdCB3YXMgY2VydGlmaWVkIGJ5IFZlcmlTaWduLCBvbmUgb2YgdGhlIGxlYWRpbmcgb3JnYW5pemF0aW9ucyBpbiBvbmxpbmUgc2FmZXR5LiAKVGhpcyBmZWVscyBsaWtlIGdyYW5kc3RhbmRpbmcgdG8gbWUuIFNoZSBzcGVudCB5ZWFycyB0ZWFyaW5nIHlvdSBkb3duIGFuZCBtYWtpbmcgaGVyc2VsZiBvdXQgdG8gYmUgdGhlIHZpY3RpbS4gVGhlIG1pbnV0ZSB5b3UgYmVnaW4gdG8gYnVpbGQgYSBoZWFsdGh5IHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgc2lzdGVyLCB5b3VyIE5tb20gZGVjaWRlcyB0byBvZmZlciBhIG5vbiBhcG9sb2d5PyBJdCBmZWVscyBsaWtlIGEgdHJhcC4gCkkgaGF2ZSBhIHNpbWlsYXIgc3RvcnkuIEkgd2FzIGEgeW91bmcga2lkIGF0IGEgd2F0ZXIgcGFyaywgdGhleSBoYXZlIHRoaXMgZ2lhbnQgcG9vbCwgYW5kIGV2ZXJ5IGZpZnRlZW4gbWludXRlcyBvciBzbyB0aGlzIGFsYXJtIHdpbGwgYmVlcCBhbmQgdGhpcyB3YXZlIG1hY2hpbmUgd2lsbCBzdGFydCBpbiB0aGUgcG9vbCwgY3JlYXRpbmcgdGhlc2UgYmlnIHdhdmVzLiBJIHdhcyB0byBzaG9ydCBhbmQgd291bGQgZ2V0IHN1Y2tlZCB1bmRlciB0aGUgd2F0ZXIsIHNvIEkga25ldyB3aGVuIGkgaGVhcmQgdGhlIGJlZXAgdG8gZ2V0IG91dCBvciBmaW5kIG15IGRhZCBpbiB0aGUgcG9vbC4gU28gSSByZWNvZ25pemUgbXkgZGFkIHN3aW0gdHJ1bmtzLCBoZSBmYWNpbmcgYXdheSwgc28gSSBqdW1wIG9uIGhpcyBiYWNrLCBsaWtlIGEgcGlnZ3kgYmFjayByaWRlLCByaWdodCBhcyB0aGUgYmlnIHdhdmVzIHN0YXJ0LiBIb2xkaW5nIG9uIHRvIHRoaXMgc3RyYW5nZSBvbGQgbWFuIHNob3VsZGVycywgcmlkaW5nIGhpcyBiYWNrIGFzIEkgcmVhbGl6ZSBpdCBub3QgbXkgZGFkLCBJIHNlZSBteSBkYWQgd2F5IGZhciBhd2F5IGF0IHRoZSBvcHBvc2l0ZSBlbmQgb2YgdGhlIHBvb2wganVzdCBzdGFyaW5nIGF0IG1lIHdpdGggYSB3dGYgaXMgbXkgZGF1Z2h0ZXIgZG9pbmcgb24gdGhhdCBndXlzIGJhY2sga2luZCBvZiBmYWNlLgpPbmNlIHRoZXkgbGVhcm4gdG8gInJlZ3VsYXRlIiB0aGVpciB2YWd1cyBuZXJ2ZSwgdGhpcyBjaHJvbmljIHRlbnNpb24gYmVnaW5zIHRvIGZhZGUsIHNvbWV0aW1lcyBjb21wbGV0ZWx5LCBzb21ldGltZXMganVzdCBsZXNzIGludGVuc2UuLiAKVGhlIG9ubHkgYmVuZWZpdCBvZiBkb2luZyB0aGF0IGlzIHRoYXQgeW91IGdldCB0byBiZSBhIGtlbnNhZ2UgaW5zdGVhZCBvZiBqdXN0IGEgbWFnZSBmb3IgaG93ZXZlciBsb25nIGl0IHRha2VzIHRvIGdldCBmcm9tIGxldmVsIDEwIHRvIDE0LiAKSGUgYWxzbyBmb3VuZEJsZWltdXRoJ3MgcHJvc3BlY3RvZiByZWhhYmlsaXRhdGlvbiB3YXMiZ3VhcmRlZCIuIEJsZWltdXRoIHdpbGwgaGF2ZSB0byBzZXJ2ZSBhIGZ1cnRoZXIgMTggbW9udGhzIG9uIHBhcm9sZSB3aGVuIGhlIGlzIHJlbGVhc2VkIGZyb20gY3VzdG9keWluIFNlcHRlbWJlciAyMDE3LiAKWW91IHdvbiBkaWUsIHlvdSB3aWxsIGJlIG1lbnRhbGx5IG9rIGFmdGVyd2FyZHMuIFlvdXIgdHJpcCB3aWxsIG9ubHkgZGV2ZWxvcCBhIGxpdHRsZSBiaXQgbW9yZSB1bnBsZWFzYW50LiAKUXVvdGUgd2hhdCBIYW5rIEFhcm9uIGhhZCBzYWlkLCB0YWtlcyBza2lsbCwgbG9uZ2V2aXR5IGFuZCBkZXRlcm1pbmF0aW9uIHRvIGFjY29tcGxpc2ggdGhpcyBmZWF0LiBUaGVyZSBhcmUgb25seSBhIGhhbmRmdWwgb2YgcGVvcGxlIHRoYXQgcGxheSB0aGlzIGdhbWUsIGFuZCBhIGZldyBvZiB0aG9zZSB0aGF0IGV4Y2VsLiBPdXQgb2YgdGhvc2UgdGhhdCBkbyBleGNlbCwgb25seSBhIGZldyByZWFjaCBtaWxlc3RvbmVzLCBvciBldmVuIHJlYWNoIHRoZWlyIG92ZXJhbGwgcG90ZW50aWFsLiBJdCBub3QgZWFzeSB0byBoaXQgYSA5MCBtcGggZmFzdGJhbGwsIGxldCBhbG9uZSBvbmUgNiBmcm9tIHlvdXIgaGFuZHMuIEV2ZW4gaGFyZGVyIHRvIGRvIGl0IHdoZW4geW91IHNlZSBvbmUgcGl0Y2ggdG8gaGl0IG9uY2UgZXZlcnkgZmV3IGdhbWVzLiBUbyBicmluZyB1cCBjaGVhdGluZywgc3Rlcm9pZHMgb3IgYW55dGhpbmcgZWxzZSBpcyBkb2luZyBub3RoaW5nIGJ1dCB0YWtpbmcgYXdheSB0aGUgZ2xvcnkgb2Ygc29tZW9uZSBlbHNlIHN1Y2Nlc3MsIGluIGFuIGF0dGVtcHQgdG8gcGVyc29uaWZ5IHRoZWlyIG93biBsYWdnaW5nIGNhcmVlci4gVW50aWwgSSBhbSBwcm92ZW4gd3JvbmcsIHdob2xlaGVhcnRlZGx5LCB3aXRob3V0IGEgZG91YnQsIHN0ZXJvaWRzL3BlcmZvcm1hbmNlIGVuaGFuY2luZyBzdXBwbGVtZW50cyBvciB3aGF0ZXZlciBpcyBhIE5PTiBJU1NVRSEhCldlbGwsIHlvdSBoYXZlIGEgbG90IHRvIGxlYXJuIGFib3V0IHBva2UgY2FyZHMgYXMgdGhlcmUgYXJlIHRob3VzYW5kcyBvZiB2YXJpZXRpZXMgYXZhaWxhYmxlLiAKT3VyIGNsb3RoZXMgYXJlIG91ciAnd29vbCcgYW5kIGFzIGxvbmcgYXMgdGhleSB3b3JrIGZvciB1cywgaXQncyBhbGwgdGhhdCBtYXR0ZXIuIApUaGUgc2Vjb25kIGFuZ2xlIGZyb20gd2hpY2ggdGhlIGRlY2xpbmUgdGhlc2lzIHdhcyBhdHRhY2tlZCB3YXMgbW9yZSBwcmFjdGljYWwuIFdoZW4gaGlzdG9yaWFucyBiZWdhbiB0byBtb3JlIGNyaXRpY2FsbHkgZW5nYWdlIHdpdGggdGhlIE90dG9tYW4gc291cmNlIGJhc2UgZnJvbSB0aGUgc2V2ZW50ZWVudGgsIGVpZ2h0ZWVudGgsIGFuZCBuaW5ldGVlbnRoIGNlbnR1cmllcywgdGhleSBmb3VuZCB0aGF0IGEgbG90IG9mIG91ciBvbGQgYmVsaWVmcyBhYm91dCB0aGUgZW1waXJlIHdlYWtuZXNzLCBjb25zZXJ2YXRpc20sIGFuZCBjb3JydXB0aW9uIHdlcmUgb3ZlcmJsb3duLiBUaGUgY29uZGl0aW9uIG9mIHRoZSBlbXBpcmUgcmVhbGx5IHdhc24gYXMgbmVnYXRpdmUgYXMgaGFkIGJlZW4gcG9ydHJheWVkLCBhbmQgdGhlcmUgd2FzbiBzb21lIGtpbmQgb2YgY29udGludW91cyBkb3dud2FyZCB0cmVuZC4gClRoaXMgd291bGQgYWxzbyBoZWlnaHRlbiB0aGUgdmFsdWUgb2YgdGhlIHdvb2RlbiBzYW5kYWxzIHNpbmNlIHRoZXJlIGFyZSBhbHRlcm5hdGl2ZXMgZm9yIHByb3RlY3RpbmcgdGhlIGxlZ3MgdmlhIGxlZ2dpbmdzIGFueXdheXMsIGFuZCBlcXVpcHBpbmcgdGhlbSB3b3VsZCBiZSBlbm91Z2ggdG8gY291bnRlcmFjdCB0aGUgY29tYmF0IHNwZWVkIHBlbmFsdHkgb2Ygc2FtdXJhaSBjaGVzdHBsYXRlcyBvciB0aGUgbGlrZS4gCldlIGRvbiBoYXZlIHRpbWUgZm9yIHRoZSB0cmFucXVpbGl6aW5nIGRydWcgb2YgZ3JhZHVhbGlzbSwgcmlnaHQgbm93LiAKRGFsbGFzIEtldWNoZWwsIGEgcXVhbGl0eSBsZWZ0IGhhbmRlZCBwaXRjaGVyLCB3aG8gd29uIHRoZSBBTCBDeSBZb3VuZyBpbiAyMDE1LCBkb2VzbiBzZWVtIHRvIGJlIGF0dHJhY3RpbmcgbXVjaCBpbnRlcmVzdC4gCkNvdWxkIGJlIGFzIHNpbXBsZSBhcyB0YWtpbmcgMTAgbWludXRlcyBhIGRheSB0byB0aWR5IHVwLCBleHBsYWlucyB0aGUgbGlmZSBhbmQgYnVzaW5lc3Mgb3JnYW5pemVyLCB3aG8gd2lsbCBiZSBzcGVha2luZyBhdCB0aGlzIHllYXIgQkMgSG9tZSArIEdhcmRlbiBTaG93LiBzbWFsbCwgY2hpcCBhd2F5IGF0IGl0LCBhbmQgbWFrZSBpdCBhIGhhYml0LCBwYXJ0IG9mIHlvdXIgZGFpbHkgcm91dGluZS4gc2F5cyBpdCBrZXkgdG8gaGF2ZSBhIGNvbnZlcnNhdGlvbiBhYm91dCBob3cgYmVpbmcgb3JnYW5pemVkIHdpbGwgaW1wcm92ZSB5b3VyIHF1YWxpdHkgb2YgbGlmZSwgd2hldGhlciBpdCBzcGVuZGluZyBtb3JlIHRpbWUgd2l0aCBmYW1pbHkgb3IgYWNoaWV2aW5nIGEgd29yayByZWxhdGVkIGdvYWwuIEl0IGNhbiBhbHNvIGluY2x1ZGUgdGFraW5nIGEgaGFyZCBsb29rIGF0IG5lZ2F0aXZlIGltcGFjdHMgc3VjaCBhcyB3YXN0aW5nIHRpbWUgc2VhcmNoaW5nIGZvciBpdGVtcywgb3IgbWlzc2luZyBiaWxsIHBheW1lbnRzLgpNeSBvcGluaW9uIGdldCBvdXQgb2YgdGhlIG1hcmtldCB3aGlsZSB5b3Ugc3RpbGwgY2FuIGFuZCB0aGVuIGdldCBiYWNrIGludG8gaXQgYXRmdGVyIGJpdGNvaW4gcmVhY2hlcyBhcm91bmQgNTAwIGFnYWluIGFuZCBhbGwgdGhpcyBzY2FtbWluZyBhbmQgbW9uZXkgbGF1bmRlcmluZyBpcyBhbGwgY2xlYW5lZCB1cCBvdXQgb2YgdGhlIG1hcmtldC4gVGhlbiBpdHMgYSBnb29kIHRpbWUgdG8gaW52ZXN0LiBUaGlzIGlzIHllYXJzIG9mIHNjYW1taW5nIHRoYXQgcmVndWxhdG9ycyBhcmUgY2xlYW5pbmcgdXAuLiAKSXQncyBqdXN0IGEgc29saWQgYWN0dWFyaWFsIHZhcmlhYmxlIGJ1dCBpdCBkb2Vzbid0IHN0YW5kIGFsb25lIGFuZCBubyBhY3R1YXJpYWwgdGFibGUgaW4gZXhpc3RlbmNlIHJhaXNlcyByYXRlcyBkdWUgdG8gYSBzaW5nbGUgYWNjaWRlbnQuLiAKQkVGT1JFIHJlZ2lzdGVyaW5nIGFuZCBwYXlpbmcgZm9yRHJpdmVyc2Nhbm5lciAodGhhbmsgZ29kKSwgSSBkZWNpZGVkIHRvIHRha2UgYW4gaG91ciBhbmQgdXBkYXRlZWFjaCBvZiB0aGUgZHJpdmVycyBteXNlbGYsIHdoaWNoIGlzbid0IGFsbCB0aGF0IGhhcmQgdG8gZG8sIGp1c3R0YWtlcyBhIGxpdHRsZSB0aW1lLiBJdCB0dXJuZWQgb3V0IHRoYXQgQUxMIDggZHJpdmVycyB3ZXJlIHRoZWxhdGVzdCBkcml2ZXJzISBBbmQgb25lIG90aGVyIHRoaW5nIHRoYXQgbWFkZSBtZSBzdXNwaWNpb3VzIGlzIHRoYXQgdGhlIHByb2dyYW10cmllZCB0byBhbGFybSBtZSBieSByZXBvcnRpbmcgdGhhdCBvbmUgb2YgdGhlIGRyaXZlcnMgaXMgOCB5ZWFyc29sZCAob2ggbXkgZ29kLCBJIHdhcyBxdWl2ZXJpbmcgaW4gbXkgYm9vdHMsIGhlaCwgaGVoKS4gCkhhY2UgMSBkYSAuIApVbnRpbCBub3csIEJyb3duIGlzIHRoZSBvbmx5IHBlcnNvbiB0aG91Z2h0IHRvIGhhdmUgYmVlbiBjdXJlZCBvZiBpbmZlY3Rpb24gd2l0aCBISVYsIHRoZSB2aXJ1cyB0aGF0IGNhdXNlcyBBSURTLi4gClRoZSBQcmFpcmllIEJpa2VyIFJhbGx5IG9yaWdpbmF0ZWQgaW4gMjAwOCBhcyBhIEJydXNoIENoYW1iZXIgb2YgQ29tbWVyY2UgY29tbXVuaXR5IHByb21vdGlvbiBhbmQgZnVuZHJhaXNlci4gT3JpZ2luYWwgdGhvdWdodHMgd2VyZSBmb3IgYSBzaW1wbGUgMSBkYXkgcG9rZXIgcnVuLCBidXQgMyBtZW1iZXJzIHdlcmUgcmV0aXJlZCBmaXJlZmlnaHRlcnMgYW5kIGZlbHQgdGhlIG5lZWQgdG8gZXhwYW5kIHRoZSBSYWxseSB0byBpbmNsdWRlIGEgU2FsdXRlIHRvIEZhbGxlbiBGaXJlZmlnaHRlcnMgYXMgb2YgdGhlaXIgb3duIGhhZCBkaWVkIGluIHRoZSBsaW5lIG9mIGR1dHkgc2VydmluZyB3aXRoIHRoZSBCcnVzaCBWb2x1bnRlZXIgRmlyZSBEZXBhcnRtZW50LgpMb2NhbGl6ZSBhcyBtdWNoIGFzIHBvc3NpYmxlLiAKSSBhY3R1YWxseSB3YW50ZWQgdG8gdGFsayBhYm91dCByZWFsIHdlbGxuZXNzIGFuZCBub3QgdGhlIGZha2Uga2luZCBJIGdyZXcgdXAgd2l0aFNoaWZ0aW5nIGhlciBtaW5kc2V0IGxlYXJuaW5nIHRvIHZpZXcgdGhlIHdob2xlc29tZSBmb29kIHNoZSBlYXRzIGFzIG5vdXJpc2htZW50IHJhdGhlciB0aGFuIGNvbXByb21pc2Ugb3IgZGVwcml2YXRpb24gd2FzIGNlbnRyYWwgdG8gdGhpcyBjb21taXRtZW50IHRvIGNoYW5nZS4gQmF0dGlzdGEgYWRtaXRzIGl0IHdhc24gZWFzeSwgd2hpY2ggaXMgd2h5IHNoZSBkZWNpZGVkIHRvIHdyaXRlIHRoZSBib29rIGluIHRoZSBmb3JtYXQgc2hlIGRpZDsgcmVjaXBlcyBpbnRlcnNwZXJzZWQgd2l0aCBwZXJzb25hbCBlc3NheXMsIHRpcHMsIG1hbnRyYXMgYW5kIGFkdmljZSBzbyB0aGF0IG90aGVycyBoYXZlIG1vcmUgb2YgYSBoZWFkIHN0YXJ0IHRoYW4gc2hlIGRpZC4uIApIb3cgdG8gQmUgSGFwcHkgV2l0aCBZb3Vyc2VsZgpXaGF0IGNvdWxkIEkgZ2V0IHRoYXQgc21hbGwgYnV0IHVzZWZ1bD8gSSBlbmRlZCB1cCBnb2luZyB3aXRoIGEgc21hbGwgYmxhY2sgY2hlcnJ5IGNhbmRsZSBhbmQgYmxhY2sgaWNlIGFpciBmcmVzaGVuZXJzIGZvciBoaXMgdHJ1Y2suIApBIGhpZ2ggcXVhbGl0eSBicnVzaCBsaWtlIFB1cmR5IChXb29zdGVycyBhcmUgZ29vZCB0b28pIHdpbGwgbWFrZSB5b3VyIGN1dCBpbiBzdXBlciBlYXN5LiAKVGhlIGNlbnRyYWwgcXVlc3Rpb24gc3Vycm91bmRpbmcgdGhlIGxlZ2FsaXR5IG9mIHRoZSBpbmR1c3RyeSwgb24gd2hpY2ggQW1lcmljYW5zIGNvbnN1bWVycyBzcGVuZCAkNiBiaWxsaW9uIGFubnVhbGx5LCBoYXMgYmVlbiB3aGV0aGVyIHBva2VyIGlzIGEgZ2FtZSBvciBza2lsbCBvciBsdWNrLiBEZXNwaXRlIHRoaXMsIHRoZSBwYXBlciBzYXlzLCAiW3NddGF0ZSBjb3VydHMgdGhhdCBoYXZlIHJ1bGVkIG9uIHdoZXRoZXIgcG9rZXIgaXMgYSBnYW1lIG9mIHNraWxsIHZlcnN1cyBsdWNrIGdlbmVyYWxseSBoYXZlIGRvbmUgc28gaW4gdGhlIGFic2VuY2Ugb2YgYW55IHN0YXRpc3RpY2FsIGV2aWRlbmNlWy5dIi4gClRocmVlIEVyaWMgSGFtYmVyIEdyYWRlIDEyIHN0dWRlbnRzIHN1c3BlbmRlZCBvdmVyIGhvbW9waG9iaWMgbGlzdApBbmQgaGUgd2VudCBzaWxlbnQuIApBIGdvb2QgcnVsZSBvZiB0aHVtYiBpcyB3aGlsZSBpbiBnb29kIHBvZXRyeSBhIGxpdHRsZSBpcyBnb29kLCBpbiBiYWQgbG90cyBpcyBiZXN0LiAKRm9yIHRoZSBuZXh0IHRlbiBtaW51dGVzIGhlIGJhdHRsZWQgdGhlIHBlbHRpbmcgc3Rvcm0sIHJldmVsaW5nIGluIHRoZSBwb3dlciBvZiB0aGUgZGFyayBzaWRlLiAKSWYgSSBjaG9vc2UgdG8gc2hhcmUgc29tZXRoaW5nIGZvciBmcmVlIG9uIHRoZSBpbnRlcm5ldCB3aXRoIHN0cmFuZ2VycyB0aGVyZSdzIHplcm8gd3Jvbmcgd2l0aCB0aGF0IGVzcGVjaWFsbHkgaWYgaXQncyBhIGRpZ2l0YWwgZmlsZSBpIGNhbiByZXBsaWNhdGUuIFRoZSBpZGVhIHRoYXQgSSB3YW50IHRvIG1ha2UgbW9uZXkgc28gSSdtIGdvaW5nIHRvIGFsaWduIG15c2VsZiB3aXRoIGxhd3MgdG8gY3JlYXRlIGFuIGFydGlmaWNpYWwgbWFya2V0IHRoYXQgZG9lc24ndCBleGlzdCBhbnltb3JlIGlzIGxpdGVyYWxseSBqdXN0IGdyZWVkeSBhbmQgY29ycnVwdC4uIApJbiB0aGUgZWFybHkgMTk4MHMsIFNpIFJlZGQgYW5kIGhpcyBuZXcgSW50ZXJuYXRpb25hbCBHYW1pbmcgVGVjaG5vbG9neSBlbnRlcmVkIGludG8gYSBsaWNlbnNpbmcgYWdyZWVtZW50IHdpdGggQmFsbHkncyBNYW51ZmFjdHVyaW5nIHRoYXQgZ2F2ZSBJR1QgZXhjbHVzaXZlIHJpZ2h0cyB0byBtYW51ZmFjdHVyZSB2aWRlbyBwb2tlciBtYWNoaW5lcy4gRmV3IHBlb3BsZSByZWNvZ25pemVkIHRoZSBwb3RlbnRpYWwgYXQgdGhlIHRpbWUsIGJ1dCB0aGF0IGdhdmUgSUdUIHRoZSBib29zdCBpdCBuZWVkZWQgdG8gYmVjb21lIEJhbGx5J3MgbWFpbiBjb21wZXRpdG9yIGluIHByb2R1Y2luZyBlbGVjdHJvbmljIGdhbWluZyBkZXZpY2VzLiBUb2RheSBJR1QgYW5kIEJhbGx5J3MgYm90aCBwcm9kdWNlIHZpZGVvIHBva2VyIG1hY2hpbmVzLCBhbmQgdGhlaXIgbWFjaGluZXMgdGFrZSB1cCBtb3N0IG9mIHRoZSBmbG9vciBzcGFjZSBkZXZvdGVkIHRvIGVsZWN0cm9uaWMgZ2FtaW5nIGRldmljZXMgYWNyb3NzIHRoZSBjb3VudHJ5LgpKYW5leWxpY2lvdXMgIDE5IHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpJIGFsd2F5cyBhaW0gdG8gcGxlYXNlIGJ1dCBJIGJlZW4gZGVzY3JpYmVkIGFzIGVpdGhlciAiYW1hemluZyIgb3IgIm1laCIgZGVwZW5kaW5nIG9uIHRoZSBnaXJsLCBidXQgdGhhdCBwcm9iYWJseSBtb3N0bHkgZHVlIHRvIG15IG93biBwZXJmb3JtYW5jZSBhbmQgbGVzcyB0byBkbyB3aXRoIG15IGhhcmR3YXJlLiAKU29tZXRpbWVzIGl0IGlzIGhhcmQgdG8gbG9vayBhdCBoYW5kcyBhbmQgbGF5IHRoZW0gZG93bi4gQnV0IGl0J3MgbXVjaCBlYXNpZXIgdG8gZm9sZCB3aGVuIHlvdXIgb25saW5lIHBva2VyIGNhbGN1bGF0b3IgaXMgZmxhc2hpbmcgYnJpZ2h0IGJvbGQgd2FybmluZyBjb2xvcnMgYXQgeW91LCByZW1pbmRpbmcgeW91IGhvdyBtdWNoICBFViB5b3VyIGhhbmQgaGFzLiAKVGhlIGZlbWFsZSBwb2tlciBwbGF5ZXJzIGZpcnN0IHRyaWVkIHRvIGZsZWUgYnV0IHdlcmUgcHJldmVudGVkIGZyb20gZXNjYXBpbmcuIApXaGF0IGlzIGFuIGV4YW1wbGUgb2YgT01DCk5haCBtYW4uIE15IGtpZHMgYXJlIHRyZWF0ZWQgZXF1YWxseS4gQW5kIGlmIHRoZXkgYXJlbid0LCB0aGVuIGl0J3MgdGFrZW4gY2FyZSBvZi4KQ2xrb3UgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkl0IGVuZGVkIHdpdGggRVNQTidzIFNhZ2UgU3RlZWxlIGludGVydmlld2luZyBBTkEgQ0VPIEJvYiBMaW9kaWNlIGFzIGlmIGhlIHdhcyBhIHN0YXIgYXRobGV0ZS4gCklzIHByb21wdGluZyBwb2tlciBwcm9tb3RlcnMgdG8gdGFrZSB0aGVpciBjYXJkIGdhbWUgYWNyb3NzIHRoZSBQYWNpZmljIGluIGhvcGVzIG9mIHNldHRpbmcgZG93biByb290cyBpbiBBc2lhJ3MgTGFzIFZlZ2FzLiAKSW5pdGlhbGx5LCBjb21wZXRpbmcgY2FzaW5vcyBpbiBBdGxhbnRpYyBDaXR5IGRvd25wbGF5ZWQgdGhlIHRocmVhdCB0aGF0IEJvcmdhdGEgcG9zZWQsIEJvdWdobmVyIHNheXMuICJUaGVpciBhdHRpdHVkZSB3YXMsICdUaGUgY3VzdG9tZXJzIG1heSB0cnkgaXQsIGJ1dCB0aGV5J2xsIGNvbWUgYmFjayBiZWNhdXNlIHRoZXkncmUgbG95YWwgdG8gdXMuJyBUcmFuc2xhdGUgdGhhdDogJ1dlJ3ZlIGJlZW4gYnJpYmluZyB0aGVtIHdpdGggZnJlZSBbZXhwbGV0aXZlXSBhbGwgdGhlc2UgeWVhcnMsIHNvIHRoZXkncmUgZ29pbmcgdG8ga2VlcCBjb21pbmcuJyBUaGVyZSB3YXMgZGVuaWFsIGZvbGxvd2VkIGJ5IHBhdGllbmNlIGZvbGxvd2VkIGJ5IHBhbmljLiBPbmUgY29tcGFueSwgbm93IHR3bywgYWN0dWFsbHkgaW52ZXN0ZWQgY2FwaXRhbCwgd2hpY2ggd2FzIHNtYXJ0IGFzIGEgd2F5IHRvIGZlbmQgb2ZmIG5ldyBjb21wZXRpdGlvbi4iCkJhbWJvbyBpcyBhIGJlYXV0aWZ1bCBhbmQgc29tZXdoYXQgZXhvdGljIGFjY2VudCB0byBhbnkgbGFuZHNjYXBlLiBBbGwgaXQgbmVlZHMgaXMgYSBsaXR0bGUga25vd2xlZGdlIG9uIGhvdyB0byBtYWludGFpbiBpdCBhbmQgb2NjYXNpb25hbCBjYXJlIHRvIGJlIGEgd2VsY29tZSBhZGRpdGlvbiB0byBvdXIgZ2FyZGVucyBhbmQgcGF0aW9zLgpJIG1ha2UgbW9yZSB0aGFuIHR3aWNlIHdoYXQgSSBtYWRlIGJlZm9yZS4gCk1heWJlIEkgZ2V0dGluZyBvbGQuLiAKSSBzaW1wbHkgZG9uIHdhbnQgdG8gcGxheSBwb2tlciBhbnltb3JlLyBoYXZlIHNvbWV0aGluZyBiZXR0ZXIgdG8gZG8KSnVzdCB3YW50ZWQgdG8gcGxheSBwb2tlciwgaGUgc2FpZC4gSG9sZCBpcyBzdWNoIGEgYmlnIGdhbWUgbm93IEkgdGhvdWdodCBpdCB3b3VsZCBiZSBmdW4gdG8gYmUgaW4gdGhlIHRvdXJuYW1lbnQgYW5kIHRvIHdpbiB0aGUgY2FyLiBBbHNvIGxpa2VkIHRoZSBpZGVhIG9mIHN1cHBvcnRpbmcgR3Jhc3NSb290cyBUVi4gCkJlc29uZGVycyBmciBkaWUgZXJzdGUgWmllbGdydXBwZSBpc3QgZGllc2UgQXJ0IHZvbiBiZXJuYWNodHVuZ3NtZ2xpY2hrZWl0IGludGVyZXNzYW50LCBkZW5uIEdlc2NoZnRzbGV1dGUsIEJlcnVmc3BlbmRsZXIsIFByb2pla3RtaXRhcmJlaXRlciwgVW50ZXJuZWhtZW5zYmVyYXRlciwgRXhwYXRyaWF0ZXMsIERvemVudGVuIG9kZXIgS25zdGxlciBxdWFydGllcmVuIHNpY2ggZ2VybmUgaW4gU2VydmljZWQgQXBhcnRtZW50cyBlaW4sIGRhIHNpZSBtZWlzdCBmciBsbmdlcmUgWmVpdCBvZGVyIG1pdCBVbnRlcmJyZWNodW5nZW4gaW4gZWluZXIgU3RhZHQgc2luZCIsIHNvIFN0cm9ibC4gCkxhbWJlcnQsIHRoZSBvd25lciBvZiBhIGdsYXNzdG9wcGVkIHN0b3ZlIHRoYXQgd2FzIHNjcmF0Y2hlZCB3aXRoIGEgcmF6b3IgYmxhZGUsIHRhc2tlZCBoaW1zZWxmIHdpdGggZGV2ZWxvcGluZyBhIHNhZmVyIHdheSB0byBjbGVhbiB0aGUgc3VyZmFjZS4gR29vZ2xlZCBob3cgdG8gY2xlYW4gYSBnbGFzc3RvcHBlZCBzdG92ZSBhbmQgZm91bmQgMTMgbWlsbGlvbiByZXN1bHRzIGJ1dCBub2JvZHkgaGFkIGFuIGFuc3dlci4gRXZlcnlib2R5IHdhcyB1c2luZyByYXpvciBibGFkZXMsIGNoZW1pY2Fscywgc3Bvbmdlcy4gClRoZSBnb3duIGlzIGZyZXNoIG9mZiB0aGUgcnVud2F5IGFzIGl0IGRlYnV0ZWQgYXQgdGhlIENocmlzdGlhbiBEaW9yIHNob3cgZHVyaW5nIFBhcmlzIEhhdXRlIENvdXR1cmUgRmFzaGlvbiBXZWVrIGVhcmxpZXIgdGhpcyBtb250aC4KSW50byB0aGlzIGhvbGUgYWRkIHdob2xlIGVnZ3MsIEkgbGlrZSBsb3RzIG9mIGVnZyBpbiBteSByaWNlLCBidXQgeW91IGNhbiB1c2UgYW55d2hlcmUgZnJvbSAxIGVnZyBwZXIgMiBzZXJ2aW5ncyB0byAyIGVnZ3MgcGVyIHNlcnZpbmcgd2l0aG91dCBpdCBnZXR0aW5nIG91dCBvZiBoYW5kLiBVc2luZyB3aGF0ZXZlciBpbnN0cnVtZW50IHlvdSBiZWVuIGZyeWluZyB3aXRoLCByb3VnaGx5IGJlYXQgdGhlIGVnZyBpbiB0aGUgaG9sZSwgdGhlbiBkaXN0cmlidXRlIGl0IG91dCB0byB0aGUgcmljZS4gV2hlbiBpdCBoYXMganVzdCBiYXJlbHkgYmVjb21lIGNvb2tlZCwgcmVtb3ZlIGZyb20gaGVhdC4gCkkgbGl2ZSBpbiBhIGJlYWNoIHRvd24gc28gSSBncmV3IHVwIGFyb3VuZCB3YXRlciBzYWZldHkuIEkgbG92ZSB0byByZWFkIGF0IHRoZSBiZWFjaCB0b28gYW5kIGhhdmUgYSA3IGFuZCA5IHllYXIgb2xkIGJ1dCBJIGNhbiBldmVuIGdldCB0aHJvdWdoIGEgd2hvbGUgcGFyYWdyYXBoIHdpdGhvdXQgbG9va2luZyBhdCB0aGVtIGlmIHRoZXkgYXJlIGNsb3NlIHRvIHRoZSB3YXRlci4gClNvIG5vdCBzdXJlIHdoZXJlIHRoaXMgImFkZGluZyB2YXJpZXR5IHdpbGwgcnVpbiB0aGUgZ2FtZSIgYXR0aXR1ZGUgY29tZXMgZnJvbS4gTXkgcXVhcnJlbHMgd2l0aCB0aGUgZ2FtZSBoYXZlIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgZ2VucmUgb2YgZ2FtZS4gClJvY2tzb2ZmamFnZ2VyICAwIHBvaW50cyAgc3VibWl0dGVkIDE4IGhvdXJzIGFnbwpUaHJlZSB3ZWVrcyBsYXRlciwgd2l0aCBhIHNob2RkeSBzZXRiYWNrIGF0IGhvbWUgdG8gR2lyb25hIHByZWNlZGluZyB0aGUgbGFja2x1c3RyZSBMZXZhbnRlIHdpbiBhbmQgQ29wYSBDbGFzaWNvIGNvbGxhcHNlLCB0aGUgY3JhenkgY2lyY3VzIHRoYXQgaXMgbGlmZSBhdCBNYWRyaWQgbWVhbnMgU29sYXJpIGZhY2VzIGEgcG90ZW50aWFsbHkgbWFrZSBvciBicmVhayBnYW1lIHRvIHByb3ZlIGhlIGNhbiBzdWNjZWVkIGluIHRoZSBob3Qgc2VhdCBsb25nIHRlcm0uCkkgc28gZ29pbmcgb25jZSBtb3JlIHlvdXIgZmVldCwgdGhhdCBhbmFsIGNhdmVuZGlzaCBpbiBteSBhc3MgcHJvIGEgYWx0ZXJuYXRpdmUgZGlkIG5vdCBhbGxvdyBoZXIgdG8gbG9zZSBhYm91dC4gClRoaXMgZ3VpZGUgcHJvdmlkZXMgaW5mb3JtYXRpb24gb24gdHJhdmVsLCBob3RlbCBhY2NvbW1vZGF0aW9ucywgcGxhY2VzIHRvIGRpbmUgYW5kIGEgZmV3IG9mIHRoZSB2ZXJ5IGJlc3QgYXR0cmFjdGlvbnMuLiAKRWxpbWluYXRpb24gdG91cm5hbWVudDogdGhpcyBpcyB0aGUgbW9zdCBwb3B1bGFyIHR5cGUgb2YgdG91cm5hbWVudHMgYXMgaXQgaW5jbHVkZXMgYSBsb3Qgb2YgYWN0aW9uIGFsbCB0aGUgdGltZSBhbmQgaXQgYWx3YXlzIHN0YXJ0cyB3aXRoIGEgdmVyeSBsYXJnZSBudW1iZXIgb2YgcGxheWVycy4gSW4gdGhlIGVsaW1pbmF0aW9uIHRvdXJuYW1lbnQgdGhlIHBsYXllcnMgYXJlIGdyb3VwZWQgYXJvdW5kIGRpZmZlcmVudCB0YWJsZXMuIE9ubHkgb25lIHBsYXllciBpcyB0aGUgd2lubmVyIGluIHRoZSB0b3VybmFtZW50LiBBbGwgdGhlIHBsYXllcnMgc3RhcnQgd2l0aCB0aGUgc2FtZSBudW1iZXIgb2YgY2hpcHMgYW5kIHRoZSB3aW5uZXIgY29sbGVjdHMgdGhlbSBhbGwuCk15IGV4IGlzIG1hcnJpZWQ7IGFuZCB3aGlsZSBpdCBodXJ0IGJyZWFraW5nIHVwIGF0IHRoZSB0aW1lICAgdGhlcmUgY29tZXMgYSBtb21lbnQgd2hlbiB5b3UgcmVhbGl6ZSAiSHVoLiBNYXliZSB3ZSB3ZXJlbiBhbGwgdGhhdCBncmVhdCBmb3Igb25lIGFub3RoZXIgcm9tYW50aWNhbGx5PyBUaGV5IHN0aWxsIGEgcHJldHR5IGNvb2wgcGVyc29uIHRob3VnaCwgYW5kIEkgd2FzIGluaXRpYWxseSBhdHRyYWN0ZWQgdG8gU09NRVRISU5HIGFib3V0IHRoZW0uIFdoYXQgd2FzIGl0PyIuIApXaXRoIHNwZWNpYWwgdGhhbmtzIHRvIHRoZSBtb2RzLCB3ZSdkIGxvdmUgdG8gc2hhcmUgc29tZSBvZiBvdXIgc3R1ZmYgd2l0aCByZWRkaXRvcnMgaGVyZSBieSBkb2luZyBhIGdpdmVhd2F5LiBXZSdyZSBob29raW5nIDMgbHVja3kgZm9sa3MgdXAgdG8gd2luIChzZXBhcmF0ZWx5KSBhIFJhemVyIEJsYWNrV2lkb3cgRWxpdGUsIGEgUmF6ZXIgRGVhdGhBZGRlciBFbGl0ZSBhbmQgYSBSYXplciBLcmFrZW4gVG91cm5hbWVudCBFZGl0aW9uLgpBIFRhc21hbmlhbiBHcmVlbnMgdGhyZWF0IHRvIGJyaW5nIGEgbm8gY29uZmlkZW5jZSBtb3Rpb24gYWdhaW5zdCB0aGUgTGliZXJhbHMgaWYgdGhleSBkb24ndCByZXZlYWwgc291cmNlcyBvZiBwb2xpdGljYWwgZG9uYXRpb25zIGhhcyBiZWVuIHN3aWZ0bHkgYnJ1c2hlZCBvZmYgYnkgdGhlIHN0YXRlJ3MgdHdvIG1ham9yIHBhcnRpZXMuCk9uIHRoZSBmbG9wIGl0IHdhcyBsZXNzIHRoYW4gaGFsZiBwb3QuIApBbm90aGVyIGNvbnNpZGVyYXRpb24gdGhhdCBuZWVkcyB0byBjb21lIGludG8gcGxheSB3aGVuIHlvdSBhcmUgbG9va2luZyBhdCBhIHBva2VyIHRhYmxlIHRoYXQgaXMgc2hhcGVkIGxpa2UgYW4gb3ZhbCBpcyBnb2luZyB0byBiZSB0aGUgaWRlYSBvZiBob3cgeW91IGNhbiBmaXQgdGhlIGNoYWlycyBpbnRvIHRoZSBzcGFjZS4gSWYgeW91IGFyZSBsaWtlIG1hbnkgcGVvcGxlLCB5b3VyIGxvdmUgZm9yIHRoZSBnYW1lIGlzIGdvaW5nIHRvIGJlIGdyZWF0ZXIgdGhhbiB0aGUgc3BhY2UgdGhhdCB5b3UgYWN0dWFsbHkgaGF2ZSEuIApTdCBHZW9yZ2VIb3NwaXRhbGluIEtvZ2FyYWh3YXMgdGhlIG1vc3QgZnJlcXVlbnQgcmVjaXBpZW50IG9mIGRvbmF0aW9ucyB0aHJvdWdoIHRoaXMgcHJvY2VzcywgYWNjZXB0aW5nIG1vcmUgdGhhbiAkMzAwLDAwMCBhcyBwYXJ0IG9mIHNldmVuIHN1Y2Nlc3NmdWwgYXBwbGljYXRpb25zIGJ5IHZlbnVlcyB0byBhZGQgYXMgbWFueSBhcyAxNiBtYWNoaW5lcyB0byB0aGVpciBnYW1pbmcgcm9vbXMuIFRoZSBDaGlsZHJlbiBIb3NwaXRhbCBhdCBXZXN0bWVhZCBoYXMgYWNjZXB0ZWQgbW9yZSB0aGFuICQxMjAsMDAwIGluIGRvbmF0aW9ucyBzaW5jZSAyMDEzLCBmbG93aW5nIGZyb20gZml2ZSBhcHByb3ZlZCBhcHBsaWNhdGlvbnMuIApJIGFtIGFzc3VtaW5nIHlvdSBvbiBhIDMgdG8gNiB5ZWFyIGNvbnRyYWN0IHBsdXMgc29tZSBJUlIgdGltZS4gSSBkb24gdGhpbmsgaXQgd29ydGggZ29pbmcgdGhyb3VnaCBhIHBvdGVudGlhbCB2ZXJ5IGhhcmQgdGltZSBieSB0cnlpbmcgdG8gY2xhaW0gY29uc2NpZW50aW91cyBvYmplY3RvciBvciBzb21ldGhpbmcgYXMgYSBsb3dlciBlbmxpc3RlZCBib290LiBTdHVkeSBCdWRkaGlzbSwgcmVhZCBhcyBtdWNoIGFzIHlvdSBjYW4sIHN0YXkgb3V0IG9mIHRyb3VibGUsIGFuZCB0cmFuc2l0aW9uIG91dCB3aGVuIHlvdSBjYW4uRWRpdDogRm9yIHdoYXQgaXQgd29ydGgsIHRoaXMgaXMgbm90IGp1c3QgYWR2aWNlIGJ1dCB0aGUgdGhpbmcgdGhhdCBJIGRvaW5nIHJpZ2h0IG5vdy4gClNlcmlvdXNseSwgYSBmcmllbmQgb2Ygb3VycyBoYWQgYW4gaW5jaWRlbnQgd2hlcmUgYSBmcmllbmQgb2YgYSBmcmllbmQgaGFkIGpvaW5lZCB0aGVpciBsaXR0bGUgZ2V0IHRvZ2V0aGVyIGFuZCBzaXggbW9udGhzIGxhdGVyLCBldmVyeW9uZSBmb3VuZCBvdXQgaGUgd2FzIHN0ZWFsaW5nIGNoaXBzLiBUaGVuIGJyaW5naW5nIHRoZW0gYmFjayBhbmQgc2xvd2x5IGFkZGluZyB0aGVtIHRvIHRoZSBwaWxlIGFzIHRoZSBuaWdodCB3ZW50IG9uLi4gClRoZSBTdWl0ZSBjYXRlZ29yeSBvZiByb29tcyBhbGwgaW5jbHVkZSBwYXRpb3MgYW5kIHRoZSBCaSAgTGV2ZWwgU3VpdGVzIGhhdmUgcGF0aW9zLCBwbHVzIGEgYmFsY29ueS4uIApBbHRpZG9yZSdzIGRlY2lzaW9uIHRvIHN0YXkgaXMgd2VsY29tZSBuZXdzIGFmdGVyIHRoZSBzdWRkZW4gYW5kIHVuZXhwZWN0ZWQgZGVwYXJ0dXJlIG9mIEdpb3ZpbmNvIGFuZCBTcGFuaXNoIHBsYXltYWtlciBWaWN0b3IgVmF6cXVleiwgd2hvIGNvbWJpbmVkIGZvciA0NSBnb2FscyBhbmQgNDYgYXNzaXN0cyBvdmVyIHRoZSBsYXN0IHR3byBzZWFzb25zLgpCYXNlZCBvbiB0aGUgbGl2ZSBjb3ZlcmFnZSBJIHJlbWVtYmVyIGZyb20gdGhhdCBkYXkuIAoiWW91LCIgaGUgZXh0ZW5kZWQgYSBoYW5kIHRvIHRoZSBHb29tYmEgRGVsZWdhdGlvbiwgInNoZSBjYWxscyB5b3UgcG9pc29ub3VzLiBTaGUgdGFrZXMgeW91ciBmYW1pbGllcywgeW91ciBmdW5naSwgYW5kIGFwcG9pbnRzIHRob3NlIG9ubHkgbGlrZSBoZXJzZWxmIGFzIHdvcnRoeS4gTm8gbG9uZ2VyISIKUmVtZW1iZXIgdGhpcyB0aG91Z2gsIGNvbGxlZ2Uga2lkcyBkb24gdGlwLCBzbyB5b3Ugc2V0dGluZyB5b3Vyc2VsZiB1cCBmb3IgZmFpbHVyZSB0aGVyZS4gCkFsbCB5b3UgZG8gaXMgdXNlIHRoZSBkaWNlIHNldCB0aGF0IHlvdSB3YW50IGFuZCBHRU5UTFkgdG9zcyB0aGVtIHRvIHRoZSBiYWNrIHdhbGwgd2l0aCBsaXR0bGUgdG8gbm8gYmFjayBzcGluLiB0aGUgbGVzcyAic2NyYW1ibGUgYXJvdW5kIiBvciByYW5kb21pemF0aW9uLCB0aGUgYmV0dGVyIG9kZHMgeW91IGhhdmUgb2Ygc2hvb3RpbmcgZmF2b3JhYmxlIG51bWJlcnMuCkVhcmxpZXIgdGhhdCBkYXkgd2Ugd2VudCB0byBkbyBvdXIgbmFpbHMgYW5kIGhlciBjaG9pY2Ugb2YgY29sb3VyIHdhcyByZWQuIFNoZSB3YXMgc28gZXhjaXRlZCBmb3IgaGVyIGJpcnRoZGF5LCBsb29raW5nIGZvcndhcmQgdG8gaGF2aW5nIGRpbm5lciBsYXRlciB0aGF0IGV2ZW5pbmcuIE5ldmVyIGRpZCBJIHRoaW5rIHRoYXQgbXkgZGF1Z2h0ZXIgd291bGQgbm90IHJldHVybiBiYWNrIHRvIG1lLiIuIApDYW5ub3QgZGV0ZXJtaW5lIGhvdyBsb25nIGluIGFkdmFuY2Ugb2YgdGhpcyBwdWJsaWNhdGlvbiB0aGF0IGhlIGVtcGxveWVkIHRoZSBpZGVhIG9mIHRyYW5zbWl0dGluZyBmaW5nZXIgcHJpbnQgZGF0YSBieSB0ZWxlZ3JhcGgsIGJ1dCBpdCBzZWVtcyB0byBiZSBhbiBleGNlbGxlbnQgaWRlYSwgc2VuZGluZyBpbXBvcnRhbnQgaW5mb3JtYXRpb24gcmVsYXRpdmVseSBpbnN0YW50bHkgb3ZlciBkaXN0YW5jZXMgdG8gaGVscCBpbiBjb25kdWN0aW5nIGNyaW1pbmFsIGludmVzdGlnYXRpb24uIEl0IG1heSBiZSB0aGF0IHRoaXMgaWRlYSBmYXIgaW4gYWR2YW5jZSBvZiBtb2Rlcm4gdHJhbnNtaXNzaW9uIHByYWN0aWNlcywgZXZlbiB0aG91Z2ggQXJ0aHVyIEtvcm4gZmlyc3QgImZhY3NpbWlsZSIgaW1hZ2VzIHdlcmUgbWFkZSBhcyBlYXJseSBhcyAxOTAyIHdhcyBzZWVuIGF0IHRoZSB0aW1lIGFzIGJvdGggZmFudGFzdGljIGFuZCBvYnZpb3VzLCB0aGUgc2Vjb25kIGltcHJlc3Npb24gY29taW5nIGFsbW9zdCBpbW1lZGlhdGVseSBvbiB0aGUgaGVhbHMgb2YgdGhlIGZpcnN0LCBsaWtlIG9uZSBvZiB0aG9zZSB0ZXJyaWZpYyBpZGVhcyB0aGF0IHNlZW1lZCAib2J2aW91cyIgb25jZSBpdCB3YXMgZmlyc3Qgc3RhdGVkLjEuIApJdCBrZXB0IGhhcHBlbmluZyBhbmQgSSB3YXNuIGFzIG11Y2ggc2NhcmVkIGFzIGFubm95ZWQgYXQgaGF2aW5nIHRvIGdvIGRvd24gZm9yIG5vIHJlYXNvbi4gCk15IHJld2FyZCB3YXMgY2xvc2luZyBzaGlmdHMgZXZlcnkgZGF5LCByYXJlbHkgbW9yZSB0aGFuIG9uZSBkYXkgb2ZmIGF0IGEgdGltZSwgYW5kIGNvbnN0YW50bHkgY292ZXJpbmcgMyA1IGRlcGFydG1lbnRzIGJ5IHRoZSBlbmQgb2YgdGhlIGRheS4uIApQdWJsaXNoIHJlc2VhcmNoIGluIHlvdXIgc2NpZW50aWZpYyBmaWVsZD8gbm9wZQpUYXJlZSBhbmQgV2F1Y2hvcGUgY2xhc2ggYXQgQW5kcmV3cyBQYXJrIGJlZm9yZSB0aGUgVGFyZWUgc2lkZSBmaW5pc2ggd2l0aCBhIG1hdGNoIGFnYWluc3QgUGlyYXRlcyBuZXh0IHdlZWtlbmQuIApMaXY6IFRoZSBzdW1tZXIgSSBncmFkdWF0ZWQsIEkgZGlkbid0IGhhdmUgYW55IGpvYiBwcm9zcGVjdHMgbGluZWQgdXAsIG5vciBoYWQgSSBhcHBsaWVkIHRvIGFueSBncmFkdWF0ZSBwcm9ncmFtcy4gSSB3YXMgc3BlbmRpbmcgbW9zdCBvZiB0aW1lIHBsYXlpbmcgZ3VpdGFyIGFuZCBnb2luZyB0byByb2NrIGNsdWJzLCBhbmQgY2FtZSBhY3Jvc3MgYW4gYWR2ZXJ0IGZvciBhIGdhbWUgc2hvdyBhZHZlcnRpc2VkIGFzICJjb3VsZCB5b3UgdXNlIHlvdXIgcG93ZXJzIG9mIHNraWxsIGFuZCBkZWNlcHRpb24gdG8gd2luIDEwMCwwMDA/Ii4gCkhpcyBhbGliaSBvZiBjb3Vyc2UgY2hhbmdlZCBzdG9yaWVzIGF0IGxlYXN0IDQgdGltZXMsIHdpdGggaGlzIGxhdGVzdCB2ZXJzaW9uIGJlaW5nIHRoYXQgaGUgbmV2ZXIgc2V0IGZvb3QgYXQgdGhlIEFTWSBvbiB0aGF0IGRheS4gQnV0IGhlIHRvbyBoYXMgcmVtYWluZWQgY29uc2lzdGVudCB3aXRoIGhpcyBiaXphcnJlIGNsYWltIGhlIG1lbW9yaXplZCB0aGUgZXhhY3QgdGltZSBzb21lIGNhciBwYXNzZWQgaGltIG9uIHRoZSBzdHJlZXQgb24gYSBjb21wbGV0ZWx5IG9yZGluYXJ5IGRheS4uIAokNTAgZG9uYXRpb24gZm9yIGFuIGVudHJ5IHRvIHN1cmYgb24gdGhlIGRheS4gQXQgQmFsbGluYSBMaWdodGhvdXNlIGNhciBwYXJrLCBCYWxsaW5hLCBvbiBTYXR1cmRheSwgTm92ZW1iZXIgMTksIGZyb20gN2FtLiAKUGVyaGFwcyBieSBkZWZhdWx0LCBpdCBiZWNvbWVzIHRoZSBmbGFnc2hpcCBvZiBGb3JkJ3MgZ3JlZW4gZmxlZXQsIHN5bWJvbGl6ZWQgYnkgdGhlIHJvYWQgYW5kIGxlYWYgbG9nbyBmZWF0dXJlZCBvbiB0aGUgYXV0byBtYWtlcidzIGZsZXggZnVlbCB2ZWhpY2xlcy4gCkkgc3R1ZGllZCBob3cgdG8gZG8gaXQsIHBhcGVyIHRyYWRlZCBmb3IgYSBnb29kIHNpeCBtb250aHMsIHRoZW4ganVzdCBiYXJlbHkgcHV0IG15IGZpbmFuY2lhbCB0b2VzIGluIHRoZSB3YXRlci4uIApJIGhhdmUgbm8gY2x1ZSB0aGF0IFJvY2Egd2FzIGhvbGRpbmcgSmFjayAxMCBzdWl0ZWQuIApUbGRyOiB3aGVuIHBsYXllcnMgc3RhcnQgY2FyaW5nIGFib3V0IHRoZWlyIHN0YXRzLCByYW5rIGV0YywgdGhleXJlIGdvaW5nIHRvIGNvbXBsYWluIGFib3V0IGhvdyBiYWQgdGhpcyBnZW5yZS9zaG9vdGluZyBtZWNnYW5pY3MvIG92ZXJhbGwgZ2FtZXBsYXkgcmVhbGx5IGlzLiBSaWdodCBub3cgTmluamEgaXMgbWFraW5nIGEgbWlsbGlvbiBhIG1vbnRoIHBsYXlpbmcgdGhlIGVxdWl2YWxlbnQgb2YgdGVhbSB0cmFpbmluZyAoSGFsb3MgdW5yYW5rZWQgcGxheWxpc3QuKSBhcmUgcGVvcGxlIGdvaW5nIHRvIHdhdGNoIHdpdGggc3VjaCBlbnRodXNpYXNtIHdoZW4gZ2UgY2FudCBqdXN0IGdvIGZvciB6YW55IGtpbGxzIG9uIG5ldyBwbGF5ZXJzIGFuZCBpcyBmb3JjZWQgdG8gY2FtcCAvIHNsb3cgcHVzaD8gSSBkb24ndCBwcmVkaWN0IHRoYXQgdG8gYmUgdGhlIGNhc2UuCldlbGwsIHRha2UgdGhhdCBjb21tZW50IHdpdGggYSBncmFpbiBvZiBzYWx0LCBzaW5jZSBpdCB3YXMgYSB0ZWNoIHdobyBzYWlkIGl0LCBub3QgdGhlIGNsaW5pYyBvd25lcnMvdmV0ZXJpbmFyaWFucy4gVGhlIGxhd3Mgc3Vycm91bmRpbmcgZm91bmQgcGV0cyBhbmQgbWljcm9jaGlwcyBjYW4gYmUgY29uZnVzaW5nLCBhbmQgaXQgY291bGQgYmUgdGhhdCB0aGUgY2xpbmljIG9yIGp1c3QgdGhhdCBvbmUgdGVjaCBoYWQgYSBiYWQgZXhwZXJpZW5jZSB3aXRoIGEgc2ltaWxhciBzaXR1YXRpb24gYW5kIHNhaWQgc29tZXRoaW5nIHRoZXkgc2hvdWxkbiBoYXZlLiAKSSBjb3VsZG4gZGVueSBteSBkYXVnaHRlciB0byBoYXZlIGFuIGV4cGVyaWVuY2UsIGp1c3QgYmVjYXVzZSBteSBtb20gZ290IHRvIHByb3ZpZGUgaXQuIApJIHRoaW5rIGZvciBtZSBpdCB3b3VsZCBiZSBiZXR3ZWVuIEZHTyBhbmQgR0JGLiAKT2ZmaWNlIG9mIFByb2Zlc3Npb25hbCBDb250aW51aW5nIEVkdWNhdGlvbgpZb3UncmUgYnJlYWtpbmcgdXAgdGhlIGRpcnQgKHdpdGggd2F0ZXIpIGFuZCB0dXJuaW5nIGl0IGludG8gbXVkIHdoaWNoIGdldHMgaGFyZGVyIHRvIGRlYWwgd2l0aCBhcyBtb3JlIG9mIGl0IHBpbGVzIG9uLiAKTXMgS2FobGVydCBhY2NlcHRlZCBPZmFoZW5nYXVlIHdyaXR0ZW4gcGxlYSBhbmQgaGlzIGV4cGxhbmF0aW9uIGFuZCBzYWlkIGhlIGhhZCBsZWZ0IHRoZSBjYXNpbm8gYXMgc29vbiBhcyBoZSB3YXMgYXNrZWQgdG8gZG8gc28uClRoZXkgbXVzdCBkZXZlbG9wIGEgY2xlYXJlciBmcmFtZXdvcmsgb2YgcHJpbmNpcGxlcyB0byBiZSBhYmxlIHRvIG9yZ2FuaXNlIHRoZWlyIGZ1dHVyZSByZWxhdGlvbnMgYW5kIGV4cGxvcmUgcGVhY2VmdWwgc29sdXRpb25zIHRvIHRoZWlyIHByb2JsZW1zLCBpbmNsdWRpbmcgS2FzaG1pci4gCllvdSBhcmUgbm93IGluIGEgcXVhc2kgJ2h5cG5vdGlzZWQnIHN0YXRlLiBZb3Ugd2lsbCBiZSBtb3JlIGluY2xpbmVkIHRvIGJlbGlldmUgdGhpbmdzIHlvdSBhcmUgdG9sZCB3aGVuIHlvdSBhcmUgaW4gdGhpcyBzdGF0ZS4gSXQncyBhIGdvb2QgaWRlYSB0byBnaXZlIHlvdXJzZWxmIHRoZSBzdWdnZXN0aW9uIHRoYXQgeW91IGNhbiBpbW1lZGlhdGVseSByZXR1cm4gdG8gYSBmdWxsIHdha2luZyBzdGF0ZSBpZiBuZWNlc3NhcnkgICBpZiB0aGUgcGhvbmUgcmluZ3Mgb3IgdGhlIGJhYnkgY3JpZXMsIGZvciBleGFtcGxlLiAKWW91IGRvaW5nIHRoZSBFbmFuIGEgZGlzc2VydmljZSBoZXJlLCBpdCBhIHJlYWxseSBzb2xpZCB0ZW50IGZvciAzLjUgc2Vhc29uIHVzZSBhbmQgd2lsbCBlYXNpbHkgaGFuZGxlIHRoZSBjb25kaXRpb25zLiBUaGUgb25seSBjb25zaWRlcmF0aW9ucyBJIGNhbiBzZWUgd291bGQgYmUgaGVhZHJvb20gYW5kIGludGVybmFsIHNwYWNlLgpJIGxvb2sgYXQgd2hhdCBpcyBvd2VkIG1vcmUgdGhhbiB3aGF0IHRoZXkgYXJlIGFza2luZy4gTm93LCBpZiB0aGV5IHNwZW5kIGFuIGhvdXIgdGVsbGluZyB5b3UgYWJvdXQgaG93IG5pY2UgdGhlIHBsYWNlIGlzIGFuZCB0aGF0IGl0IGlzIHRoZSBiaWdnZXN0LCBuaWNlc3QgaG91c2UgaW4gdGhlIG5laWdoYm9yaG9vZCBhbmQgYXJlIHNlbGxpbmcgaXQgYmVjYXVzZSB0aGV5IHdhbnQgdG8gYnV5IGEgYmlnZ2VyLCBuaWNlciBob3VzZSwgeW91IHByb2JhYmx5IGRvbid0IHdhbnQgdG8gd2FzdGUgbXVjaCB0aW1lIHdpdGggdGhlbS4uIApBIGJhZCBleHBlcmllbmNlIGNhbiB0dXJuIGhlciBvZmYgdG8gYW5hbCBzZXggYWx0b2dldGhlciBhdCBsZWFzdCB3aXRoIHlvdS4gCkZvciBURVMgYW5kIEZPIGdhbWVzIHdoZXJlIHlvdXIgY2hhcmFjdGVyIGhhcyBubyBiYWNrZ3JvdW5kIGlmIGFueSBJIHJhdGhlciBoYXZlIGhpbS9zaGUgc2lsZW50LCBidXQgZm9yIG90aGVyIG1vcmUgc3RvcnkgZHJpdmVuIGdhbWVzIEkgd2FudCB0aGVtIHRvIHRhbGsgYW5kIGhhdmUgc29tZSBwZXJzb25hbGl0eS4gClRoZSByZXZlcnNlIGlzIGZvciBhbGwgb3RoZXIgdHlwZXMgb2YgcG9rZXIuIApUaW1lcyBpbiBhIHJvdywgd2UgaGFkIGEgd29uZGVyZnVsIHNlYXNvbiBpbiBDTC4gSG93ZXZlciB3ZSBuZWVkIHRvIHRoaW5rIGFib3V0IHdoYXQgaGVzIGRvaW5nIG5vdywgeWVhaCBpIHdvdWxkIHNheSBoZSBpbXByb3ZlZCB0aGUgc2Vjb25kIGhhbGYgaW4gdGhlIHNlbnNlIHRoYXQgaGVzIG5vdCBhZnJhaWQgdG8gY3V0IFF1YXJlc21hIGFuZCBDYW5lciBhbnltb3JlLCBhbmQgaXQgc2VlbXMgbGlrZSBvdXIgdGVhbSBpcyBwbGF5aW5nIGJ5IHBhc3NpbmcgYW5kIG5vdCBjcm9zc2luZyBhbGwgdGhlIGdvZGRhbW4gdGltZSwgZm9yIHRoYXQgaW0gZ3JhdGVmdWwgYXMgd2VsbCwgYnV0IGNtb24sIGEgbG90IG9mIHRoaW5ncyBoZSdzIGRvaW5nIGFyZSBqdXN0IHVuYWNjZXB0YWJsZSwgaG93IHRoZSBoZWxsIGNhbiB5b3UgYmxvdyBhIDMgMGxlYWQgbGlrZSB0aGF0PyBBZnRlciBzZWVpbmcgRXJzdW4gWWFuYWwgbWFrZSBkcmFzdGljIGNoYW5nZXMgdG8gdGhlIFhJIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHNlY29uZCBoYWxmLCBoZSBqdXN0IHdhdGNoZWQgdGhlIHNsYXVnaHRlciBoYXBwZW4gYW5kIGRpZG50IG1ha2UgQU5ZIGNoYW5nZXMgdW50aWwgaXQgd2FzIHRvbyBsYXRlLCBob3cgY2FuIHRoZSB0ZWFtIGJlIHNvIHVubW90aXZhdGVkIHRoYXQgdGhleSBzdWRkZW5seSBzdGFydGVkIGxvc2luZyB0aGUgYmFsbCBhbGwgdGhlIHRpbWUsIG5vdCBiZWluZyBhYmxlIHRvIHB1dCBwcmVzc3VyZSBvbiBGQiBhbmQganVzdCBwYXJraW5nIHRoZSBidXMgKHRoZXkgZGlkbnQgZXZlbiBkbyB0aGF0IHByb3Blcmx5KS4gSXRzIGEgbG90IG9mIHRoaW5ncyB0aGF0IGJyb3VnaCBTZW5vbCdzIGRvd25mYWxsIHdpdGggdGhlIGZhbnMsIGkgc3RpbGwgcmVzcGVjdCBoaW0sIGFuZCB3b250IHNoaXQgdGFsayBoaW0gb25jZSBoZSBsZWF2ZXMsIGJ1dCBpbiB0aGlzIGN1cnJlbnQgc3RhdGUgaSB3YW50IGhpbSB0byBqdXN0IHJlc2lnbi5GaWdTaWRlRyAgMSBwb2ludCAgc3VibWl0dGVkIDEyIGRheXMgYWdvRG9lc24ndCBoYXZlIHRvIGJlIGFuZ3J5IGFueW1vcmU/IFRlbGwgdGhhdCB0byBldmVyeW9uZSB0aGF0IGtpbGxlZCBoaW0gZm9yIFJldml2YWwuIApJZiB5b3UgZ2V0IGEgUm95YWwgRmx1c2gsIHlvdSB0aGVuIGhhdmUgdG8gbWFrZSBpdCBwYXkgb2ZmLiBUaGVyZSdzIGxpdHRsZSBwb2ludCBpbiB3aW5uaW5nIGEgaGFuZCBpZiB5b3UgZG9uJ3QgZ2V0IGFueSByZXdhcmQgZm9yIGRvaW5nIHNvLiBJZiB5b3UgZ2FzcCBpbiBleGNpdGVtZW50LCByYWlzZSB0aGUgcG90IHRvIGl0cyBtYXhpbXVtIGFuZCBoYXZlIGEgYmlnIGdyaW4gb24geW91ciBmYWNlLCB0aGVuIGFsbCBvZiB0aGUgb3RoZXIgcGxheWVycyBhcmUgbGlrZWx5IHRvIHRha2Ugb25lIGxvb2sgYXQgeW91IGFuZCBmb2xkIHRoZWlyIGhhbmRzLiAKVGhlIEZyaWVkIFJpY2UuIApUaHJlZSB5ZWFycyBhZ28sIEdvbGQgd2FzIHRyeWluZyB0byBnZXQgaGlzIGZvb3QgaW4gdGhlIGRvb3IgYW5kIGxhdW5jaCBoaXMgSnVzdGluJ3MgTnV0IEJ1dHRlciBzcHJlYWRzIHRvIGEgd2lkZXIgYXVkaWVuY2UuIApUb3AgMTAgcmV2b2x1dGlvbmFyeSBzY2llbnRpZmljIHRoZW9yaWVzCk1peCB1bnRpbCBzbW9vdGguIApIZSBsb3ZlZCBsaWZlLCBoaXMgZmFtaWx5LCBoaXMgcG9rZXIgYnVkZGllcywgaGlzIHJldmVyZWQgbmV0d29yayBvZiBsaWZldGltZSBmcmllbmRzLCBidXQgbW9zdCBvZiBhbGwgaGUgbG92ZWQgaGlzIGNoZXJpc2hlZCBzb25zLiBUaGVyZSB3YXMgbm8gZmF0aGVyIG1vcmUgcHJvdWQuIApTdGFydCBzZWxsaW5nIHlvdXIgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIG9ubGluZS4gV2l0aCBvdXIgb25saW5lIHN0b3JlIGZlYXR1cmUsIHlvdSBjYW4gZWFzaWx5IGRpc3BsYXkgeW91ciBwcm9kdWN0cywgb3JnYW5pemUgdGhlbSBpbnRvIGNvbGxlY3Rpb25zLCB0YWcgdGhlbSBhbmQgc2hvdyBjb21wYXJhdGl2ZSBwcmljZXMuIE91ciBzaW1wbGUgb3JkZXIgbWFuYWdlbWVudCBhbmQgc3RvcmUgc3RhdGlzdGljcyB3aWxsIGhlbHAgeW91IHRvIGtlZXAgdHJhY2sgb2YgZXZlcnkgb3JkZXIgeW91IHJlY2VpdmUgYW5kIHRvIHNlZSBob3cgaXMgeW91ciBzdG9yZSBkb2luZyBpbiBnZW5lcmFsLi4gCiJTcGVlZCBpcyBteSBtYWluIGFzc2V0LCBJIGZlZWwgbGlrZSwiIGhlIHNhaWQuICJJIHVzZWQgdGhhdCBvbiBzcGVjaWFsIHRlYW1zIGEgbG90LiBTbywgYmVpbmcgYWJsZSB0byBydW4gd2l0aCBiYWNrcyBhbmQgd2lkZSByZWNlaXZlcnMgaW4gdGlnaHQgc2l0dWF0aW9ucyAod2lsbCBoZWxwKS4gCkkgYXNzdW1pbmcgYnkgeW91ciBkZXNjcmlwdGlvbiwgaXQgd2lsbCBiZSBsYXJnZSBlbm91Z2ggdG8gY292ZXIgYW55IHJlbWFpbmluZyBzY2hvb2wgY29zdHMuIApKdXN0IHR3byBiYW5rcywgV2FzaGluZ3RvbiBNdXR1YWwgYW5kIENvdW50cnl3aWRlLCB3cm90ZSBtb3JlIHRoYW4gJDMwMCBiaWxsaW9uIHdvcnRoIG9mIG9wdGlvbiBBUk1zIGluIHRoZSB0aHJlZSB5ZWFycyBmcm9tIDIwMDUgdG8gMjAwNywgY29uY2VudHJhdGVkIGluIENhbGlmb3JuaWEuIApQZW9wbGUgd2l0aCB0aGUgaGlnaGVzdCBhY3Rpdml0eSBsZXZlbHMgd2VyZSBoYWxmIGFzIGxpa2VseSBhcyBpbmFjdGl2ZSBpbmRpdmlkdWFscyB0byBkZXZlbG9wIEFsemhlaW1lciBhbmQgd2VyZSBhcm91bmQgNDAlIGxlc3MgbGlrZWx5IHRvIHN1ZmZlciBhbnkgZGVtZW50aWEgb3IgbWVudGFsIGltcGFpcm1lbnQsIHRoZSByZXBvcnQgaW5kaWNhdGVzLiBQcmV2aW91cyByZXNlYXJjaCBoYXMgc3VnZ2VzdGVkIGV4ZXJjaXNlIGhlbHBzIHBlb3BsZSByZXRhaW4gdGhlaXIgbWVudGFsIHByb3dlc3MgYXMgdGhleSBhZ2UsIGFuZCBtYXkgZXZlbiBzdGF2ZSBvZmYgQWx6aGVpbWVyIGFuZCBvdGhlciBkZW1lbnRpYS4gSXQgaGFzIGJlZW4gc3VnZ2VzdGVkIHRoYXQgYmVjYXVzZSBleGVyY2lzZSBoZWxwcyBtYWludGFpbiBoZWFsdGh5IGJsb29kIGZsb3cgYW5kIGxvd2VycyBoaWdoIGJsb29kIHByZXNzdXJlIGFuZCBjaG9sZXN0ZXJvbCwgaXQgbWF5IHByb3RlY3QgdGhlIGJyYWluIGp1c3QgYXMgaXQgZG9lcyB0aGUgaGVhcnQgYW5kIG90aGVyIG9yZ2Fucy4gClRvIG1ha2UgdGhlIGdhbWUgbW9yZSBleGNpdGluZywgRXZvbHV0aW9uIEdhbWluZyBhbHNvIG9mZmVycyBMaXZlIENhc2lubyBIb2xkIFBva2VyIHdpdGggdGhlIEp1bWJvIDcgSmFja3BvdC4gSXQgdXNlcyB0aGUgc2FtZSBzZXQgb2YgdGhlIHJ1bGVzIGFuZCBvZmZlcnMgYSBzaWRlIGJldCB0aGF0IGNhbiBlYXJuIHlvdSBhIHByb2dyZXNzaXZlIGphY2twb3Qgc3RhcnRpbmcgYXQgJDEgbWlsbGlvbiBpZiB5b3UgbWFuYWdlIHRvIGNyZWF0ZSBhIDcgQ2FyZCBTdHJhaWdodCBGbHVzaCBoYW5kLgpBYnNvbHV0ZWx5ICAgYWN0dWFsbHkgdGhlIGZpcnN0IG1vbnRoIEkgd2FzIG9uIHRoZW0gSSBmZWx0IEkgd2FzICJibGlzc2Z1bGx5IG5ldXRyYWwiICAgbGlrZSB0aGUgY29tZSB1cCBvZiBhbiBlY3N0YXN5IHRyaXAgd2l0aG91dCB0aGUgZ29vZCBwYXJ0IGFmdGVyIG9uc2V0LiBUaGUgbWFpbiBkaWZmZXJlbmNlIEkgc2VlIG5vdyBpcyBpZiBJIGZvcmdldCB0byB0YWtlIHRoZSBwaWxscyBhKSBzZXJpb3VzIHdpdGhkcmF3YWwgc3ltcHRvbXMgKHB1a2luZywgYnJhaW4gemFwcywgZmVlbGluZyBkaXp6eSwgZXRjLikgYnV0IGFsc28gSSBiZSBpbiB0ZWFycyBieSB0aGUgYWZ0ZXJub29uLCBzbyBteSBib2R5IGhhcyBkZWZpbml0ZWx5IGNvbWUgdG8gcmVseSBvbiBpdCBzaW5jZSBJIGNhbiBmZWVsIHRoZSBmYWxsb3V0IHdpdGhvdXQgdGhvc2UgY2hlbWljYWxzLiBCVVQgdGFraW5nIHRoZW0gYWxzbyBnZXRzIG1lIHN1cGVyIGFueGlvdXMsIGFuIG9kZCBzaWRlIGVmZmVjdCBmb3IgYW4gYW50aSBhbnhpZXR5IG1lZGljYXRpb24uIFBlcnNvbmFsbHkgSSB3b3VsZCBiZSBtb3JlIGJvbGQgdG8gZ2V0IG9mZiB0aGVtLCBidXQgaGF2ZSBQVFNEIGFuZCBvdGhlciBpc3N1ZXMsIHNvIGFmcmFpZCB0byBnbyBkb3duIHRoYXQgcm91dGUgYWdhaW4uCkkgdGhpbmsgeW91IHdlcmUgb24gYSBiZXR0ZXIgdHJhY2sgcmVjb21tZW5kaW5nIHRoYXQgdGhleSBiZSByZXRlc3RlZC4gKG15IGh1bWJsZSBvcGluaW9uIGlzIHRoYXQgaWYgdGhleSB3ZXJlIGNvb2tlZCB0byBhIHBvaW50IG9mIGZhaWx1cmUgeW91IHdvdWxkIGhhdmUgb25lcyBzdHVjayBpbiBhbGFybSwgbm90IHZpY2UgdmVyc2EpLiAKRXZlbiB3aXRoIHRoZSBjb3VudGxlc3Mgc2V0YmFja3MsIEphc29uIGdyYWR1YXRlZCBIaWdoIFNjaG9vbCB3aXRoIGhpcyBjbGFzcywgbWFkZSBtYW55IGFtYXppbmcgZnJpZW5kcyBhbmQgdG91Y2hlZCB0aGUgbGl2ZXMgb2Ygc28gbWFueS4gCiJBbW9uZyBvdGhlciB0aGluZ3MsIHdlIGhhdmUgc2hvd24gYSBzdHJvbmcgZWZmZWN0IG9mIGNsaW1hdGUgY2hhbmdlIG9uIHRoZSB0aW1pbmcgb2YgYnJlZWRpbmcsIiBzYWlkIEJpcmtoZWFkLCAid2l0aCBicmVlZGluZyBiZWNvbWluZyBwcm9ncmVzc2l2ZWx5IGVhcmxpZXIgYmV0d2VlbiAxOTcwcyBhbmQgMjAxMCIuIFRoZSBzdG9ybXMgaW4gRmVicnVhcnkgcmVzdWx0ZWQgaW4gaGlnaCBtb3J0YWxpdHkgYW1vbmcgZ3VpbGxlbW90cy4gIldlIHJlY29yZGVkIGEgdGhyZWVmb2xkIGluY3JlYXNlIGluIHRoZSBkZWF0aHMgb2Ygb3VyIHJpbmdlZCBiaXJkcyBvbiBTa29tZXIuIApBbmQgaWYgeW91IGNvbnNpc3RlbnRseSBsb3NpbmcgYWdhaW5zdCBiYWQgcGxheWVycywgeW91IGFyZSBiYWQgdG9vLiAKSXQgd29ya2VkIHZlcnkgd2VsbC4gCkhvcGVmdWxseSB0aGVzZSBmb3JtZXIgdGVhY2hlcnMgd2lsbCBiZWdpbiB0byBzZWUgdGhhdCB1bml2ZXJzaXRpZXMgYXJlIG5vdCBhYm91dCB0aGUgYm90dG9tIGxpbmUgb3IgdGhlICJwZXJmZWN0IiBlZHVjYXRpb24gdHJhZGVkIG9uIHRoZSBmdXR1cmVzIG9mIG91ciBzdHVkZW50cy4gSG9wZWZ1bGx5IGEgdW5pdmVyc2l0eSBwcmVzaWRlbnQgd2lsbCBzdGFuZCB1cCBzb29uIGFuZCBkZW1hbmQgYW4gZW5kIHRvIGRlYnQgZm9yIGRpcGxvbWEgc3RhcnRpbmcgd2l0aCBoaXMgb3IgaGVyIG93biBzYWxhcnkuIApEdXJpbmcgdGhlIGJyZWFrdXAgd2FzIHRoZSBhYnNvbHV0ZSB3b3JzdCBmb3IgbWUsIGJ1dCBpIGxlYXJuZWQgYSBsb3QgYWJvdXQgbXlzZWxmIGFuZCB3aGVuIHdlIHN0YXJ0ZWQgdGFsa2luZyBhZ2FpbiB3ZSBib3RoIGFncmVlZCB0aGF0IHdlIG5lZWRlZCB0aGUgdGltZSBhcGFydCBhbmQgYXJlIGJldHRlciBub3cgYmVjYXVzZSBvZiBpdC4gCklmIHlvdSBob29rIGEgbW9kZW0gdXAgdG8gYSBzd2l0Y2gsIHRoZSBmYXN0ZXN0IGRldmljZSBvbiB0aGUgb3RoZXIgZW5kIHdpbGwgZ3JhYiB0aGUgSVAgZnJvbSB0aGUgbW9kZW0gYW5kIHRoZSBvdGhlcnMgd2lsbCBiZSBvdXQgb2YgbHVjay4gVGhpcyB3YXMgYXBwYXJlbnRseSB5b3VyIHJvdXRlciBiZWZvcmUsIHdoaWNoIHRlbGxzIHlvdSB3aHkgd2lyZWxlc3Mgd2FzIHdvcmtpbmcgYW5kIG5vdGhpbmcgZWxzZSB3YXMuLiAKUmVjZW50IGV2ZW50cyBpbiBJcmFuIGFyZSBkaW1pbmlzaGluZyB0aGUgYXR0cmFjdGlvbiBvZiBNYWhtb3VkIEFobWFkaW5lamFkIGFzIGEgcm9sZSBtb2RlbC4gCjEgREFOSUVMIENPTE1BTiAgJDIxLDA1OCwxNTMKVGhlIGF2ZXJhZ2UgYWdlIG9mIG1hbGUgZ2FtZXJzIGlzIGFyb3VuZCAzMyB5ZWFycyBvbGQsIGFuZCBmZW1hbGUgZ2FtZXMgYXJlIDM3IHllYXJzIG9sZC4gCkkgZm91bmQgbG92ZS4gSSBtZXQgbXkgbm93IGZpYW5jZWUgYXQgd29yayBhbmQgdGhlIGFmdGVyIG9ubHkgYSBjb3VwbGUgbW9udGggb2YgZGF0aW5nIHdlIG1vdmVkIGluIHRvZ2V0aGVyIGFuZCBJIHN0b3BwZWQgdGFraW5nIHRoZSBwaWxscyAoem9sb2Z0KSBwcmV0dHkgbXVjaCBjb2xkIHR1cmtleS4gCldoYXQgaWYgaXQgaGFwcGVucyBtdWx0aXBsZSB0aW1lcyBmb3IgdGhlIHNhbWUgcGVyc29uPyBUaGUgb3RoZXIgc3R1ZGVudHMgd2lsbCBzdGFydCB0byByZXNlbnQgdGhlbSwgdGh1cyBkaXNjb25uZWN0aW5nIHRoZSAicHJvYmxlbSBjaGlsZCIgZXZlbiBtb3JlIGZyb20gY2xhc3MsIHByb2JhYmx5IGNhdXNpbmcgbW9yZSBkaXNydXB0aW9ucy4KSSBtZXQgaGltIG15IGZyZXNobWFuIHllYXIgb2YgaGlnaCBzY2hvb2wgYW5kIHdlIGJlY2FtZSBpbnNlcGFyYWJsZS4gV2UgdGFrZSBsb25nIHdhbGtzIGV2ZXJ5IGZyZWUgcGVyaW9kIHdlIHNoYXJlZCwgc3RheWVkIGFmdGVyY2hvb2wgd2hlbiB3ZSBjb3VsZCBmb3IgaGltIHRvIGxhdGVyIHdhbGsgbWUgaG9tZSwgYW5kIGZlbGwgYXNsZWVwIHRvIGVhY2ggb3RoZXIgb24gU2t5cGUuIApTb21lIHRyYW5zZ2VuZGVyZWQgcGVyc29ucyBsaXZlIGFzIG9uZSBzZXggb3IgdGhlIG90aGVyIChub3QgdGhlIG9uZSB0aGV5IHdlcmUgYXNzaWduZWQgYXQgYmlydGgpLCBidXQgbWFueSBhbHNvIGxpdmUgYXMgInRyYW5zIiBvciAiZ2VuZGVyIHF1ZWVyIiBvciBpbiBvdGhlciB3YXlzIHJlZnVzZSB0byBiZSBhIG1hbiBvciBhIHdvbWFuIG9yIGluc2lzdCBvbiBiZWluZyBib3RoLiBXaGF0IHRvIGRvIHdpdGggYSBtb3ZlbWVudCB0aGF0IHVuZGVybWluZXMgdGhlIGJhc2lzIG9mIGdheSBhbmQgc3RyYWlnaHQgZGVzaXJlPyBUaGF0IGlzLCBpZiBzdHJhaWdodCBwZW9wbGUgYXJlIGF0dHJhY3RlZCB0byB0aGUgb3Bwb3NpdGUgc2V4IGFuZCBnYXkgcGVvcGxlIHRoZSBzYW1lIHNleCwgd2hhdCBoYXBwZW5zIHdoZW4geW91IGF0dHJhY3RlZCB0byBzb21lb25lIHdobyBpcyBib3RoIG9yIG5laXRoZXI/IFBlcmhhcHMgaXQgaXMgdGhpcyBkaXNjb21mb3J0IHRoYXQgbGVkIHRoZSBIdW1hbiBSaWdodHMgQ2FtcGFpZ24gRnVuZCB0byBjdXQgdHJhbnMgcGVvcGxlIG91dCBvZiBpdHMgY2FtcGFpZ24gZm9yIGEgbmF0aW9uYWwgRW1wbG95bWVudCBOb24gRGlzY3JpbWluYXRpb24gQWN0IChFTkRBKS4gClRoZW4gYXQgdGhlIGVuZCB3aGVuIHdlIGtpc3NlZCwgc2hlIGhhZCB0byBodWcgdXMgYm90aCBhdCB0aGF0IG1vbWVudCBhbmQgbm93IHR3byB5ZWFycyBsYXRlciBzaGUgc3RpbGwgdGFsa3MgYWJvdXQgdGhlIGRheSB3ZSBhbGwgZ290IG1hcnJpZWQuIEkgZ3Vlc3MsIGFzayB5b3VyIHN0ZXAga2lkcyB3aGF0IHRoZXkgd2FudCB0byBkbyBiZWNhdXNlIHRoZXkgbWF5IHN1cnByaXNlIGV2ZXJ5b25lIGFuZCBqdXN0IGRvIGl0IGFueXdheXMgdGhlIGRheSBvZi4uIAo0IE5ldyBDYXN1YWwgU3BvdHMgSW4gU2VhdHRsZQooT21pdHRpbmcgdGhlIGJhY29uLCB1c2luZyBkcmllZCBiZWFucywgd2hpY2ggYXJlIGFsc28gbG93ZXIgaW4gc29kaXVtLCBvciBzdWJzdGl0dXRpbmcgY2Fycm90cyBmb3IgdGhlIHBlcHBlcnMgcmVkdWNlcyB0aGUgcHJpY2UgZnVydGhlciwgb2YgY291cnNlLilBbm90aGVyIGFyZ3VtZW50IHJ1bnMgdGhhdCBqdW5rIGZvb2QgaXMgY2hlYXBlciB3aGVuIG1lYXN1cmVkIGJ5IHRoZSBjYWxvcmllLCBhbmQgdGhhdCB0aGlzIG1ha2VzIGZhc3QgZm9vZCBlc3NlbnRpYWwgZm9yIHRoZSBwb29yIGJlY2F1c2UgdGhleSBuZWVkIGNoZWFwIGNhbG9yaWVzLkJ1dCBnaXZlbiB0aGF0IGhhbGYgb2YgdGhlIHBlb3BsZSBpbiB0aGlzIGNvdW50cnkgKGFuZCBhIGhpZ2hlciBwZXJjZW50YWdlIG9mIHBvb3IgcGVvcGxlKSBjb25zdW1lIHRvbyBtYW55IGNhbG9yaWVzIHJhdGhlciB0aGFuIHRvbyBmZXcsIG1lYXN1cmluZyBmb29kJ3MgdmFsdWUgYnkgdGhlIGNhbG9yaWUgbWFrZXMgYXMgbXVjaCBzZW5zZSBhcyBtZWFzdXJpbmcgYSBkcmluaydzIHZhbHVlIGJ5IGl0cyBhbGNvaG9sIGNvbnRlbnQuIApBaG1lZCB3YXMgZGlzbWlzc2VkIGZyb20gdGhlIHBvbGljZSBmb3JjZSBhZnRlciB0aGUgU3VwcmVtZSBDb3VydCBoZWFyaW5nLkhhc3NhbiBBYmJhcywgYW4gZXhwZXJ0IG9uIHRoZSBQYWtpc3RhbmkgcG9saWNlIGF0IHRoZSBOZXcgWW9yayBiYXNlZCBBc2lhIFNvY2lldHksIHNhaWQgQWhtZWQgY2FzZSBwcm92aWRlcyBhIHN0YXJrIGlsbHVzdHJhdGlvbiBvZiB0aGUgbGV2ZWwgb2YgY29ycnVwdGlvbiBpbiB0aGUgIHBvbGljZSBmb3JjZSwgd2hpY2ggaGUgZGVzY3JpYmVkIGFzIHRoZSB3b3JzdCBpbiBhbnkgb2YgUGFraXN0YW4gbWFqb3IgY2l0aWVzLiAKVGhlIGdvYWwgZm9yIHRoZSBuZXcgYWlycG9ydCBoYXMgYSBsb3QgdG8gZG8gd2l0aCBUdXJrZXkgYmVpbmcgYSBtYWpvciB0cmFuc2l0IGh1YiBmb3IgMyBjb250aW5lbnRzIGFuZCBhbGwgb3ZlciB0aGUgd29ybGQuIEl0IGNvbm5lY3RzIHRoZSBVUywgRXVyb3BlLCBBZnJpY2Egd2l0aCBBc2lhIGFuZCB0aGUgbWlkZGxlIGVhc3QuIEl0cyBnb2FsIGlzIHRvIGdldCBhIGJpZ2dlciByb2xlIG9uIHRoaXMgc29ydCBvZiBmbGlnaHRzIHdoaWNoIFR1cmtpc2ggYWlybGluZXMgaXMgYnVpbGRpbmcgYWxzbyBpdHMgcm91dGVzIG9uIHRoaXMgcHJlbWlzZS4gClNvIHRoZXkgd2FudCB0byBmb2xsb3cgdGhlIG1lbnRvcnMgYnkgYWxsIG1lYW5zLiBUaGF0J3Mgd2h5IHRoZXkgcHVyY2hhc2UgcHJvZHVjdHMgbGlrZSBTaGFkb3cgU3Bpbm5lcnMgQ2hpcCBBbmQgQSBDaGFpciBQb2tlciBDYXJkIFByb3RlY3Rvci4gClByb3Rvc3MgY2Fubm9ucyBydXNoICAgc29tZXRpbWVzLCBpZiB5b3UgY2xldmVyLCB5b3UgY2FuIHNuZWFrIGEgcHlsb24gaW50byB0aGUgZW5lbXkgYmFzZSBvbiB0aGUgcGVyaXBoZXJ5IG9mIHRoZWlyIGFyZWEsIG91dHNpZGUgdGhlaXIgdmlzaW9uLiAKWW91IHdpbGwgZmluZCB0aGF0IHdpdGgganVzdCBhIGZldyBvZiB0aGUgYmFzaWMgd29yZHMgYW5kIHBocmFzZXMgZXNjYXBlZCB0aGUgQnViYmxlIEludmFkZXIsIHlvdSBhcmUgYWxtb3N0IGhvbWUgZnJlZS4gQm90aCBncm91cHMgbGVhcm4gYWJvdXQgdGhlIG90aGVyIGN1bHR1cmUsIGdpdmluZyBvZiB3aGF0IHRoZXkgaGF2ZSBhbmQgdGltZXMgdG8gZW5zdXJlIHRoYXQgdGhlIHRyYWNrIGlzIGZyZWUgb2YgZGVicmlzIEJhY2twYWNrIFN0cmFwcyBQYWNraW5nIG1vcmUgdGhhbiB0aGUgYmFyZSBlc3NlbnRpYWxzIHdpbGwgbW9zdCBjZXJ0YWlubHkgbGVhZCB0byBicm9rZW4gc3RyYXBzLi4gClNwYXMgYXJlIGV4cGVjdGVkIHRvIG9mZmVyIHRoZSBiYXNpYyBzcGEgc2VydmljZXMuIApJdCBvYnZpb3VzbHkgaW4gcGFydCBhIHNpbXBsZSBwcm9kdWN0IG9mIHRoZSB3YXkgdGhleSBmdWxmaWxsIG9yZGVycywgYnV0IGl0IHdvcmtzIG91dCB0byBiZWluZyBhIGNsZXZlciBtYXJrZXRpbmcgc3RyYXRlZ3kgYXMgd2VsbC4uIApCdXQgc29tZWhvdywgdGhlIGthcmF0ZSBtYXN0ZXIgcHJldmFpbHMgd2l0aCBhIGZldyBlbGVnYW50IHB1bmNoZXMgYW5kIGtpY2tzLiAKSSd2ZSBoYWQgc29tZSBvZiB0aGUgd29yc3QgYmVhdHMgb2YgbXkgbGlmZSB0aGUgcGFzdCB0d28gd2Vla3Mgd2l0aCB0b3RhbGx5IGRvbmtleXMgd2hvIGhhdmUgbm8gYnVzaW5lc3MgYmVpbmcgaW4gdGhlIHBvdCBhbmQgdGhlbiBnZXR0aW5nIGx1Y2t5LiAKRGVhciBmcmllbmQsIGlmIHlvdSBhcmUgbm90IGEgYnJpZGUgb2YgQ2hyaXN0LCBJIGJlZyB5b3UgdG8gcmVwZW50IGFuZCBjYWxsIHVwb24gdGhlIE5hbWUgb2YgdGhlIExPUkQgZm9yIHlvdXIgcmVkZW1wdGlvbi4gV2Ugd2lsbCBub3QgYmUgYWJsZSB0byBzdGFuZCBiZWZvcmUgdGhlIHNldmVyaXR5IG9mIEdvZCdzIHJpZ2h0ZW91cyBqdWRnbWVudHMsIHdoaWNoIGFyZSByZWFkeSB0byBjb21lIHVwb24gdGhlIGVhcnRoIHdpdGggbW9yZSBzZXZlcml0eS4gCkkgZGlkbiBrbm93IHdoYXQgc2hlIG1lYW50LCBidXQgc3VkZGVubHksIHNoZSB0b29rIG9mZiB0aGUgY29uZG9tIGFuZCBwdXQgbWUgYmFjayBpbiBoZXIuIApBbmQgTWV4aWNvIGhhdmUgbXVzaHJvb21lZCBhdCBhIHNwZWN0YWN1bGFyIHJhdGUuIApEZWxsIHdvdWxkIGJlIHNlbGxpbmcgbm8gbW9yZSBjb21wdXRlcnMuIEluIGJ1aWxkaW5nIGl0cyB3ZWIgc2l0ZSB0byBhdHRyYWN0IHRoZXNlIGJ1eWVycywgRGVsbCBtYXkgYmUgYWJsZSB0byBsdXJlIGF3YXkgY3VzdG9tZXJzIGZyb20gb3RoZXIgdmVuZG9ycyB3aG8gZG8gbm90IG9mZmVyIHN1Y2ggYSBzZXJ2aWNlLiAKIldlIGtub3cgdGhhdCBwb2tpZXMgYXJlIG1vcmUgbGlrZWx5IHRvIGJlIHRoZSBnYW1ibGluZyBtZWNoYW5pc20gb2YgY2hvaWNlIGZvciBwcm9ibGVtIGdhbWJsZXJzLCBhbmQgcGVvcGxlIHdobyBwbGF5IHRoZSBwb2tpZXMgYXJlIGZhciBtb3JlIGxpa2VseSB0byBiZWNvbWUgcHJvYmxlbSBnYW1ibGVycyB0aGFuIHRob3NlIHdobyBlbmdhZ2UgaW4gb3RoZXIgZm9ybXMgb2YgZ2FtYmxpbmcsIiBEciBSYW5kbGUgc2FpZC4gSW5kZWVkLCBuYXRpb25hbCBzdGF0aXN0aWNzIHNob3cgb25lIGluIHNpeCBwZW9wbGUgd2hvIHBsYXkgdGhlIHBva2llcyBoYXMgYSBzZXJpb3VzIGFkZGljdGlvbiwgYW5kIHRocmVlIHF1YXJ0ZXJzIG9mIHByb2JsZW0gZ2FtYmxlcnMgaGF2ZSBwcm9ibGVtcyB3aXRoIHBva2VyIG1hY2hpbmVzLiAKQW5uYWxzIG9mIHRoZSBSaGV1bWF0aWMgRGlzZWFzZXMgc2Vla3MgdG8gcHVibGlzaCBzaWduaWZpY2FudCBzY2llbnRpZmljIGFkdmFuY2VzIHdoaWNoIGFyZSBsaWtlbHkgdG8gaW1wYWN0IG9uIGNsaW5pY2FsIHByYWN0aWNlIHdpdGhpbiB0aGUgbWVkaXVtIHRlcm0uIApJdCBtYWtlcyBhIGxvdCBvZiBzZW5zZSB0byBiZXQgc21hbGwgd2l0aCBzdHJvbmcsIGJ1dCB2dWxuZXJhYmxlIG1hZGUgaGFuZHMgICBsaWtlIFRQVEsgb24gYSAzIGZsdXNoIGJvYXJkLiAKQXMgcGFydCBvZiBhIGxlZ2FsIGJhdHRsZSBiZXR3ZWVuIHRoZSBBbWVyaWNhbiBBY3Rpb24gTmV0d29yayBhbmQgZW50ZXJ0YWlubWVudCB2ZW5kb3IgQ2F0ZXIgQW1lcmljYSBvdmVyIGEgc2NyYXBwZWQgTHlueXJkIFNreW55cmQgY29uY2VydCwgd2hpY2ggd2FzIGF4ZWQgYWhlYWQgb2YgdGhlIFJOQyBkdWUgdG8gdGhlIHRocmVhdCBvZiBIdXJyaWNhbmUgSXNhYWMgaW4gbGF0ZSBBdWd1c3QuLiAKQXMgZm9yIHRoZSBzcGVjaWZpYyByb3V0ZXMsIHRoZXJlIHNvIG1hbnkgcXVhbGl0eSByb3V0ZXMgdGhhdCB5b3Ugd2lsbCBiZSBzdHJ1Z2dsaW5nIHRvIHBpY2sgd2hpY2ggb25lcyB0byBjbGltYiwgIkVsIGJhbmRpZG8gZGUgdW4gYnJhem8iIGluIFMgaXMgYSB0YWxsIGFuZCBjb21mb3J0YWJsZSBhcnRlIHRoYXQgSSBncmVhdGx5IGVuam95ZWQuIEFub3RoZXIgbGluZSBJIHdvdWxkIHJlY29tbWVuZCBpcyAiVGllcnJhIGFsIHJldmVzIiBpbiBTYSBHdWJpYSwgYSBmYW50YXN0aWMgdGVjaG5pY2FsIHR1ZmEgbGVhZHMgaW50byBhIHNhdGlzZnlpbmcgYnVybHkgY3J1eC4uIApEZXNwaXRlIHRoZSBkZWZlYXQgYXQgQXNoaW5nZG9uLCBFZG11bmQncyBhY3Rpb25zIHNob3dlZCB0aGF0IEVuZ2xhbmQgd2FzIGNhcGFibGUgb2YgcmFpc2luZyBhbiBhcm15IGFnYWluc3QgVmlraW5nIGludmFkZXJzLi4gCkFsbCBmaW5hbmNpYWwgZGVjaXNpb25zIGluIHRoZSBtYWluIHBvdCBnZXQgZGVjaWRlZCBvbiB0b2dldGhlciwgd2l0aCB0aGUgb25lIHdobydzIGJldHRlciBhdCBmaW5hbmNlcyBtYW5hZ2luZyBpdC4gCkEgbmVpZ2hib3IgaGVhcmQgdGhlIGF0dGFjaywgaW50ZXJ2ZW5lZCBieSB0ZWxsaW5nIFZhc3F1ZXogdG8gc3RvcCwgdG9vayB0aGUgdmljdGltIHRvIGhpcyBob21lLCBhbmQgYmFuZGFnZWQgdGhlIHZpY3RpbS4gClRoZU1jV2hvcHBlciB1CkluIGFkZGl0aW9uLCBraWRzIHNheSB0aGUgImYiIHdvcmQsICJzdCIsICJkbiIsIGFuZCB0YWtlIHRoZSBMb3JkIG5hbWUgaW4gdmFpbiBmcmVxdWVudGx5LiAKTWVlIHRhaSBtYWsgZ2V0cyBuZXcgbGlmZQoyLiBUcnVtYm8gaGFzIGFuIGludGVyZXN0aW5nIGhpc3RvcnksIHRvIHB1dCBpdCBtaWxkbHkuIEFuIG9sZCBDb21tdW5pc3QsIGhlIG9uY2UgZ2F2ZSB1cCBoaXMgb2xkIGFzc29jaWF0ZXMgdG8gdGhlIEZCSSBhdCB0aGUgc3RhcnQgb2YgV1dJSSBhbiBhY3QgaGUgbGF0ZXIgdGhvdWdodCBvZiBhcyBiZWluZyBzdHVwaWQgYW5kIHdyb25nLiBJdCBhbHNvIGhhZCB0aGUgb3Bwb3NpdGUgZWZmZWN0IGZvciBoaW0gaGUgdGhvdWdodCBoZSB3YXMgYmVpbmcgcGF0cmlvdGljLCBidXQgdGhlIEZCSSB3YXMgbW9yZSBpbnRlcmVzdGVkIGluIGhpbSB0aGFuIGhpcyBpbmZvcm1hdGlvbi4gSGUgd291bGQgZ2V0IGVhdGVuIHVwIGJ5IE1jQ2FydGh5aXN0IG9wZXJhdGl2ZXMgYW5kIGRlbmllZCBIVUFDIGFueSBpbmZvcm1hdGlvbiBvbiBhbnkgb2YgdGhlIGZhbW91cyAiSG9sbHl3b29kIFRlbiIuIEhlIGdvdCBhIHllYXIgaW4gamFpbCBhbmQgd2FzIGJsYWNrbGlzdGVkLCBib290ZWQgb3V0IG9mIExBLiBIZSBjYW1lIGJhY2sgbW9zdGx5IHVuZGVyIHNvbWVvbmUgZWxzZSBuYW1lIChzZWUgdGhlIGxpbmsgYWJvdmUgZm9yIGhpcyBzY3JlZW53cml0aW5nIGNyZWRpdHMsIHdoaWNoIGFyZSBzdWJzdGFudGlhbCkgYW5kIGFja25vd2xlZGdlZCBzaG9ydGx5IGJlZm9yZSBoZSBkaWVkLgpJIGN1cnJlbnRseSBoYXZlIGEgREVMTCBYUFM6IER1byBDb3JlIDIuNEdIWiwgMkdCIFJBTSwgUkFJRCAwIDE1MEdCIHJhcHRvcnMgKDEwayBSUE0pLCBOdmlkaWEgNzkwMEdTIHdoaWNoIGlzbid0IHRlcnJpYmxlIGJ5IGFueSBtZWFucyBidXQgaXQgZG9lcyBnZXQgbGFnZ3kgYXQgdGltZXMuClJpZ2h0IGhlcmUhIFllYWgsIEkgZ3Vlc3MgeW91IGNvdWxkIHNheSBsb25nIHRlcm0uIExvb2tzIGxpa2UgYWxsIG9mIG15IDMwcyBhcmUgZ29pbmcgdG8gYmUgc3BlbnQgYXMgYSBTQUhNLiAKSSBoaXQgYSBmYWlybHkgZWFzeSA3MTYgYmFjayBpbiBOb3ZlbWJlciBzbyBJIHRoaW5rIEkgaGF2ZSBpdCBpbiBtZSBhcyBsb25nIGFzIEkgc3RheSBoZWFsdGh5IHVudGlsIHRoZW4uIFdvdWxkIGxpa2UgdG8gYnJlYWsgNzUwLCBidXQgd2Ugd2lsbCBzZWUgaG93IGl0IGdvZXMuIApJbiBvdGhlciB3b3JkcywgdGhlIHZhc3QgbWFqb3JpdHkgb2YgdGhlc2Ugd29tZW4gZG8gdGhpcyB0byBtYWtlIG1vbmV5LiAKSGUgbmVlZHMgdG8gYmUgdG9sZCBob25lc3RseSBieSBhbGwgbWVtYmVycyBvZiB0aGUgZmFtaWx5IHdoYXQgaGlzIGFjdGlvbnMgYXJlIGRvaW5nIHRvIGhpbXNlbGYgYW5kIHRvIHRoZW0gYW5kIGJlIGdpdmVuIGFuIHVsdGltYXR1bSAgIHdlIGFyZSBub3QgZ29pbmcgdG8gZW5hYmxlIHlvdSBhbnltb3JlLyBpZiB5b3UgZG9uIHNlZWsgaGVscCwgeW91IGFyZSBnb2luZyB0byBoYXZlIHRvIG1vdmUgb3V0LiBUaGUgbmljZSBndXkgZmFjYWRlIHdpbGwgZGlzYXBwZWFyIHF1aWNrbHkuIApJIHdhdGNoZWQgYW5kIGxpc3RlbiB0byB5b3UsIGFuZCBJIHJlYWxpemVkIHdoYXQgdHlwZSBvZiBib3NzIEkgbmV2ZXIgd2FudCB0byBiZS4gCldlIGFsbCB3YW50IGFuIG9ubGluZSBwb2tlciBzaXRlIHRvIGhhdmUgYSBsb3Qgb2YgbWVtYmVycyBzaW5jZSBpdCBtZWFucyB0aGF0IHlvdSB3aWxsIGdldCB0byBoYXZlIG9wcG9uZW50cyBhdmFpbGFibGUgdG8gZmFjZSB5b3UgYXQgYW55IHRpbWUgb2YgdGhlIGRheS4gClBhcmNlIHF1ZSwgcG91ciBxdWUgY2V0dGUgcGVuc2Ugc29pdCB2aXZhY2UsIGlsIG5lIGZhdXQgc2ltcGxlbWVudCBwYXMgcyAgY2UgcXVlIGRlIGdyYW5kcyBjaGFudHJlcyBvbnQgZGl0IHBhciBsZSBwYXNzLiAKWWFob28gTmV3cyBTaW5nYXBvcmUKQW5kIGlmIHlvdSdyZSBub3QgZmVlbGluZyBnb29kIGFib3V0IGh1bWFuaXR5IHlldCwga2VlcCByZWFkaW5nLiBJbiAyMDA1LCBzb21lb25lIHNuYXBwZWQgYSBzaG90IG9mIEJyaWdncyB0YWxraW5nIHRvIEtldmluIEJlcnRoaWEuIAoiVGhlIEdpZnQiICAgc2VyaW91c2x5IHVuZGVycmF0ZWQgU2FtIFJhaW1pIGZpbG0sIFJlZXZlcyBnaXZlcyBhbiBlbnRpcmVseSBhdHlwaWNhbCBwZXJmb3JtYW5jZSBhcyBhIHdpZmUgYmVhdGluZyBjcmVlcCwgaXQgZ3JlYXQuCkRpc2NyZXRpemUgaXMganVzdCBtaW4gbWF4aW5nIGl0IGZvciBwZW9wbGUgd2hvIGNhbiBhZmZvcmQgaXQuIApJIHR1cm5lZCBiYWNrIHRvIHRoZSBwb3QsIHNoaWZ0aW5nIG15IHN0ZXcgYXJvdW5kIHdpdGggYSB3b29kZW4gc3Bvb24uIFRoZW4sIHRoZXJlIGl0IHdhcyBhZ2FpbiwgbG91ZGVyIGFuZCBtb3JlIHVyZ2VudC4gSSB3YXMgaGVhcmluZyB0aGluZ3MgYWdhaW4sIGJ1dCBhcyBtdWNoIGFzIEkgd2FudGVkIHRvIGp1c3QgbGV0IHRoYXQgYmUgaXQsIEkgY291bGRuJ3QuIApJbiB0aGUgZm9sbG93aW5nIG1vbnRocywgYWNjb3JkaW5nIHRvIGEgRGVwYXJ0bWVudCBvZiBIb21lbGFuZCBTZWN1cml0eSByZXBvcnQgaXNzdWVkIG9uIFRodXJzZGF5LCBSdXNzaWFuIGhhY2tlcnMgbWFkZSB0aGVpciB3YXkgdG8gbWFjaGluZXMgd2l0aCBhY2Nlc3MgdG8gY3JpdGljYWwgY29udHJvbCBzeXN0ZW1zIGF0IHBvd2VyIHBsYW50cyB0aGF0IHdlcmUgbm90IGlkZW50aWZpZWQuIFRoZSBoYWNrZXJzIG5ldmVyIHdlbnQgc28gZmFyIGFzIHRvIHNhYm90YWdlIG9yIHNodXQgZG93biB0aGUgY29tcHV0ZXIgc3lzdGVtcyB0aGF0IGd1aWRlIHRoZSBvcGVyYXRpb25zIG9mIHRoZSBwbGFudHMuIi4gClRoZSBjbG9zZXN0IHRvIGFuIG9wZW4gb2ZmaWNlIGZsb29yIHBsYW4gaW4gd2hpY2ggSSB3b3JrZWQgd2FzIGEgcG9kIGRlc2lnbiwgd2hpY2ggd2FzbiBiYWQgc2luY2UgaXQgd2FzIGEgc21hbGwgdGVhbSBhbmQgd2UgYWxsIGdvdCBhbG9uZy4gVGhhdCBzYWlkLCBJIGdvdCBhIGxvdCBtb3JlIHdvcmsgZG9uZSBhbmQgd2FzIGxlc3MgZGlzdHJhY3RlZCB3aGVuIEkgaGFkIG15IG93biBvZmZpY2UuIApGSVJFbWViYWJ5ICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCjMgRmF0dHkgQWNpZHMgYW5kIERlcHJlc3Npb24KU3QgQ2xlcmFucyB3YXMgaW4gZmFjdCB0d28gYnVpbGRpbmdzOiBUaGUgTGl0dGxlIEhvdXNlIChmb3JtZXJseSB0aGUgc3Rld2FyZCBob3VzZSApLCBiZXNpZGUgdGhlIHN0YWJsZXMsIHdhcyB3aGVyZSBSaWNreSwgVG9ueSwgQW5qZWxpY2EgYW5kIGEgbnVyc2UgbGl2ZWQ7IHdoaWxlIHRoZSBCaWcgSG91c2UsIHJlbm92YXRlZCBieSBNaWNoYWVsIFNjb3R0LCB3YXMgZmlsbGVkIHdpdGggSHVzdG9uIHRyZWFzdXJlcyB3aGljaCBoZSBoYWQgYWNjcnVlZCBkdXJpbmcgaGlzIHRyYXZlbHMuIFdoZW4gSHVzdG9uIHdhcyBob21lIGhlIHdvdWxkIHN0YXkgaW4gdGhlIEJpZyBIb3VzZS4gVGhlIGNoaWxkcmVuIHdvdWxkIGJlIHRocmlsbGVkIHRvIGJlIGludml0ZWQgZm9yIGJyZWFrZmFzdCwgd2hlcmUgdGhleSB3b3VsZCBvZnRlbiBtZWV0IGEgbmV3IG1pc3RyZXNzIChldmVuIGlmIHRoZXkgZGlkbiBtYWtlIHRoZSBjb25uZWN0aW9uIGF0IHRoZSB0aW1lICksIHdobyB3YXMgYWx3YXlzIGtpbmQsIGFuZCB3aG8gbWFkZSBmcmllbmRzIHdpdGggdGhlbS4gQW5qZWxpY2Egd2FzIHRvbyB5b3VuZyB0byBhcHByZWNpYXRlIHdoeSBoZXIgbW90aGVyLCBhIHN0dWJib3JuIHZpY3RpbSBvZiBEYWQgcmVqZWN0aW9uIGNvdWxkIGxvb2sgc28gc2FkLgpFbmFpa2VsdCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpTZSBnb3N0YXMgZGUgam9nb3MgcGFyYSB0ZWxlbSBzb2JyZSBhIDIgZ3VlcnJhIG11bmRpYWwgZXN0ZSBwZXJmZWl0by4gTyBjZW4gcyBhcyBQb2tlciBubyB0ZWxlbW92ZWwgZG93bmxvYWQgYmF0YWxoYXMgZGUgMTk0NCBlbnRyZSBhbGlhZG9zIGUgYWxlbSBWaWJyYSBtdWl0byBjb20gZXN0ZSAuCkxlIE1JU1AgZXN0IGJhcyBzdXIgbGUgcHJpbmNpcGUgcXVlIGxlIHRvdWNoZXIgcmVzcGVjdHVldXggcGV1dCBmYXZvcmlzZXIgbCdlc3RpbWUgZGUgc29pLCBsYSBjb25maWFuY2UgZXQgbGUgcmVzcGVjdCBtdXR1ZWwuIExlcyBlbmZhbnRzIHNvbnQgcGxhY3MgZGV1eCBwYXIgZGV1eCBldCBzZSBkb25uZW50IGwndW4gbCdhdXRyZSB1biBtYXNzYWdlIGRlIDEwIG1pbnV0ZXMgY29tcG9zIGRlIG1hbnV2cmVzIHNpbXBsZXMgcHJhdGlxdWVzIHN1ciBsYSB0dGUsIGxlIGNvdSwgbGVzIHBhdWxlcyBldCBsZSBkb3MuIApIaWdobGlnaHRpbmcgdGhlIHJlY2VudCBjYXNlIG9mIDE3IHllYXIgb2xkIFJhc2hlZWRhIG9mIEh5ZGVyYWJhZCwgU1BBUkMgaW5mb3JtZWQgdGhhdCBSYXNoZWVkYSdzIGxhdGUgZmF0aGVyIGxvc3QgaGVyIGluIGEgcG9rZXIgZ2FtZSB3aGVuIHNoZSB3YXMgb25seSB0d28geWVhcnMgb2xkLiAKSSBhY2NpZGVudGFsbHkgd29ya2VkIGF0IGEgaGFwcHkgZW5kaW5nIG1hc3NhZ2UgcGFybG9yClRoZSBKYXBhbmVzZSBkb24ndCBoYXZlIGEgaGlnaGVyIHByb3BlbnNpdHkgdG93YXJkIHN1aWNpZGUuIFRoZXkganVzdCBoYXZlIGFuIGFwYXRoZXRpYyBhcHByb2FjaCB0byB0aGUgd2hvbGUgc3ViamVjdC4KU2hhYmJ5IENoaWMgZnVybml0dXJlIGlzIGdpdmVuIGEgZGlzdHJlc3NlZCBsb29rIGJ5IGJlaW5nIGNvdmVyZWQgaW4gc2FuZGVkIG1pbGsgcGFpbnQuIFRoZSB3aG9sZSBkZWNvciBzdHlsZSBoYXMgYW4gaW50cmlndWluZyBmbGVhIG1hcmtldCBsb29rLiBPbmNlIHBhaW50ZWQsIHRha2luZyBhIHBpZWNlIG9mIHNhbmQgcGFwZXIgYW5kIGdvaW5nIGxpZ2h0bHkgb3ZlciBkaWZmZXJlbnQgYXJlYXMgb2YgdGhlIHBpZWNlIHdpbGwgZ2l2ZSB0aGUgcGllY2UgdGhlIGRpc3RyZXNzZWQgbG9vay4gCkJ1dCwgeWVhLCBqdXN0IGJlIHByZXBhcmVkIGZvciBhIG1vbXBvY29seXBzIG9mIHNvcnRzIHRvIGhhcHBlbi4uIAoiVW1hIGRyb2dhIGJhcmF0YSwgbWFzIGRlIHRhcmphIHByZXRhLCBjb250cmEgYSBhbnNpZWRhZGUgdmVuZGUgbWFpcyBkbyBxdWUgb3MgdHJhZGljaW9uYWlzIFR5bGVub2wgZSBIaXBvZ2wgQWxndW1hIGNvaXNhIGVzdHJhbmhhIGRldmUgZXN0YXIgYWNvbnRlY2VuZG8gcXVhbmRvIC4KV2UgYXJlIGFza2luZyB0aGlzIHdyaXN0IHdhdGNoIHRvIGRvIGFuIGF3ZnVsIGxvdCBhbmQgaXQgZG9lcyBpdCBzb21ld2hlcmUgYmV0d2VlbiBPSyBhbmQgd2VsbC4gRm9yIGEgJDUwMCAkMTIwMCBkZXZpY2UgdGhhdCBmcnVzdHJhdGluZy4gClRoZSBQcmVtaXVtIG1lbWJlcnNoaXAgZ2l2ZXMgbWUgQ29pbnMsIHdoYXQgYXJlIHRob3NlIGZvcj9Db2lucyBhcmUgYSB2aXJ0dWFsIGdvb2QsIGFuZCB5b3UgY2FuIHVzZSB0aGVtIHRvIGF3YXJkIGV4Y2VwdGlvbmFsIHBvc3RzIG9yIGNvbW1lbnRzIHdpdGggYSBTaWx2ZXIsIEdvbGQsIG9yIFBsYXRpbnVtIEF3YXJkLiBUaGlzIGlzIGEgd2F5IHRvIHNob3cgYXBwcmVjaWF0aW9uIGZvciBhbiBleGNlcHRpb25hbCBjb250cmlidXRpb24gdG8gUmVkZGl0LCBhbmQgY2FuIGFsc28gZ3JhbnQgdGhlIHJlY2lwaWVudCBzcGVjaWFsIGJvbnVzIGJlbmVmaXRzLiBZb3UgY2FuIGF3YXJkIHNvbWVvbmUgYnkgY2xpY2tpbmcgb24gIkdpdmUgQXdhcmQiIGJlbG93IGEgcG9zdCBvciBjb21tZW50LgpBIHNwb2tlc3BlcnNvbiBmb3IgdGhlIEFjYWRlbXkgb2YgTW90aW9uIFBpY3R1cmUgQXJ0cyBhbmQgU2NpZW5jZXMgc2FpZCBNb25kYXkgdGhhdCB0aGUgYXdhcmRzIGZvciBjaW5lbWF0b2dyYXBoeSwgZmlsbSBlZGl0aW5nLCBtYWtldXAgYW5kIGhhaXJzdHlsaW5nIGFuZCBsaXZlIGFjdGlvbiBzaG9ydCB3aWxsIGJlIHByZXNlbnRlZCBvZmYgYWlyLiAKVGhlIGZhbWVkIHRvdXJuYW1lbnQgbWFya2VkIHRoZSBlbmQgb2YgdGhpcyB5ZWFyIHNlcmllcywgaW4gd2hpY2ggZG96ZW5zIG9mIHRvdXJuYW1lbnRzIGRyZXcgMTIwLDk5NSBlbnRyYW50cyBmcm9tIGFyb3VuZCB0aGUgd29ybGQsIHNoYXR0ZXJpbmcgYXR0ZW5kYW5jZSByZWNvcmRzLiAKVGhleSBoYWQgcHVsbGVkIHRoZSByZWd1bGF0b3JzIG91dCBvZiB0aGVpciBtb3V0aHMgYW5kIGRyb3duZWQuIApBZnRlciBmbG91bmRlcmluZyBvbiB0aGUgbWFya2V0IHNpbmNlIDIwMTIsIGEgc3BhY2lvdXMgdHdvIGJlZHJvb20gYXBhcnRtZW50IHNlZWtpbmcgJDIuMyBtaWxsaW9uIGF0IDU1MCBQYXJrIGZhaWxlZCB0byBmaW5kIGEgYnV5ZXIsIGRlc3BpdGUgYSAzNiBwZXJjZW50IHByaWNlIGRlY3JlYXNlLiAKVGhlIG1vc3Qgb2J2aW91cyByZWFzb24gaXMgdGhhdCBCbGFjayBGcmlkYXkgaGFzIG1lYW50IHRoYXQgaW4gb3JkZXIgdG8gZG8gdGhpcyBqb2IgcHJvZmVzc2lvbmFsbHksIHlvdSBlaXRoZXIgaGFkIHRvIG1vdmUgb3V0IG9mIHRoZSBjb3VudHJ5IG9yIHRyYXZlbCA5MCUgb2YgdGhlIHRpbWUuIApFdmVyeSBkYXksIHNoZSBwYWluc3Rha2luZ2x5IHNvYWtzIHRoZW0gaW4gb2xpdmUgb2lsIGFuZCBjbGVhbnMgdGhlbSB3aXRoIGEgdG9vdGhicnVzaC4gCkEgTUFXRyBoYWQgODUlIG9mIHRoZSBjaGlwcyBpbiBwbGF5LCBhbmQgYW4gb2xkZXIgd29tYW4gaGFkIHRoZSByZXN0ICAgYWJvdXQgOGJiLiBHaXZlbiB0aGUgcGF5b3V0IHN0cnVjdHVyZSwgaXQgd2FzIHByb2ZpdGFibGUgdG8gYnV5IGluLCBmb3JjZSBwbGF5IHRvIGNvbnRpbnVlLCBhbmQgdHJ5IHRvIG91dGxhc3QgdGhlIDhiYiBzdGFjay4gV2hpY2ggSSBkaWQuIApBbmR5IG1heSBiZSB0aGUgd2Vla2VuZCdzIGJpZ2dlc3Qgd2lubmVyLCBidXQgaGUgbWF5IG5vdCBoYXZlIHBsYXllZCBtYW55IGhhbmRzIHdpdGhvdXQgSmVyaSdzIGluZmx1ZW5jZS4gU2Vla2luZyBhIGhvYmJ5LCBKZXJpIGpvaW5lZCB0aGUgRnJlZSBQb2tlciBOZXR3b3JrIGluIEphbWVzdG93biBhcyBhIHdheSB0byBrZWVwIGJ1c3kgYW5kIG1ha2UgZnJpZW5kcy4gCk1lcmNpIHBvdXIgdG9uIGFjY3VlaWwuIApPbmVzIHRoYXQgc2ltcGx5IGxlZCBtZSB0byBzdGF5aW5nIGFuZCBwdXJzdWluZy4gU3RyaXZpbmcgZm9yIGFjY2VwdGFuY2UuIAoxIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIHB1YmxpYyBjb25zY2lvdXNuZXNzIGFuZCBhd2FyZW5lc3Mgb2YgZ2x1dGVuIGFuZCBpdHMgZGFuZ2VycyBoYXMgYmVlbiBncm93aW5nIG92ZXIgdGhlIHllYXJzLiBBIG11bHRpdHVkZSBvZiBzeW1wdG9tcyBjYW4gb2NjdXIgYW5kIGFyZSBsaXN0ZWQgYmVsb3cuCkJlIGdlbnRsZSB0aG91Z2ggICB0b28gbXVjaCBwcmVzc3VyZSBjYW4gYmUgcGFpbmZ1bCBmb3IgeW91ciBjbGllbnQuLiAKV2hpbGUgdGhleSAid2hhY2tlZCwiIEFubmUgbGlzdGVuZWQgb3IgZHJlYW1lZC4gCkdldCBhIGdvb2QgaW5zdWxhdGVkIGN1cC4gVGhpcyB3aWxsIGhlbHAgeW91IHN0YXkgaHlkcmF0ZWQsIGFuZCB3aWxsIGJlIGV4dHJhIHVzZWZ1bCBpbiB5b3VyIGxhc3QgbW9udGggb2YgcHJlZ25hbmN5IHdoZW4geW91IHdha2UgdXAgb3ZlcmhlYXRlZCBhdCBuaWdodC4gSSB3b3VsZCB3YWtlIHVwIGF0IDIgQU0gYW5kIGNodWcgMjAgb3ogb2YgaWNlIHdhdGVyLCB0aGVuIHBvdXIgYW4gZXh0cmEgd2F0ZXIgYm90dGxlIGludG8gbXkgY3VwIHdpdGggdGhlIGxlZnRvdmVyIGljZS4KUG9rZXJTdGFycyBoYXMgYmVlbiBhIGRyaXZpbmcgYW5kIGhpZ2hseSBjb250cm92ZXJzaWFsIHBsYXllciBpbiB0aGUgYmF0dGxlIG92ZXIgcG9rZXIgaW4gQ2FsaWZvcm5pYS4gCkV4Y2VycHQ6ICJJJ20gY29uY2VybmVkIHRoYXQgZ3Jvc3MgaW5lcXVhbGl0eSB3aWxsIGJlIGJhZCBmb3IgbWUuIEknbSBjb25jZXJuZWQgdGhhdCBpbiBhbm90aGVyIGRlY2FkZSBvciB0d28sIHRoZSBwZW9wbGUgd2hvIGFyZSBkb2luZyBsZXNzIHdlbGwgYXJlIGdvaW5nIHRvIHJpc2UgdXAgYW5kIGp1c3Qgc2F5IHRoZXkgd29uJ3QgdGFrZSBpdCBhbnltb3JlLCBhbmQgd2UnbGwgaGF2ZSByaW90cyBsaWtlIHdlIGRpZCBpbiBBdGhlbnMsIEdyZWVjZS4gSSdtIGNvbmNlcm5lZCB0aGF0IGlmIHdlIGhhdmUgYSBmZXcgcmljaCBwZW9wbGUgYW5kIGxvdHMgb2YgcG9vciBwZW9wbGUsIGl0J3Mgbm90IGdvaW5nIHRvIGVuZCB3ZWxsIGZvciB0aGUgcmljaCBwZW9wbGUuIFRoYXQncyB3aGF0IEknbSBjb25jZXJuZWQgYWJvdXQuIFNvIEknZCBsaWtlIHRvIGNoYW5nZSBwdWJsaWMgcG9saWNpZXMgdG8gYWxsZXZpYXRlIHRob3NlIGNvbmNlcm5zLiIKRGFzcyBpY2ggbWljaCB2b24gZXh0cmVtaXN0aXNjaGVuIEZlbWluaXN0aW5uZW4gZGlzdGFuemllcmUgaXN0IGluIGRlciBSZWdlbCBqZWRlbSByZWNodCBzY2huZWxsIGtsYXIuLiAKTGV0J3MgY29tZSBiYWNrIHRvIG91ciBjYXNpbm8gYm9udXNlcywgdG8gdGhlIG1vc3QgImZyZWUgbG9hZCIgb25lcyAgd2l0aG91dCBhbnkgZGVwb3NpdC4gT2YgbGF0ZSBvbmUgaGFzIGJlZW4gYWJsZSB0byBub3RpY2UgbW9yZSBhbmQgbW9yZSBjYXNpbm8gYWR2ZXJ0aXNlbWVudHMgcHJvbWlzaW5nIHVwIHRvICQ1MDAgYWJzb2x1dGVseSBmcmVlIG9mIGNoYXJnZSwgd2l0aG91dCBhbnkgZGVwb3NpdC4gVGhlIHBhdHRlcm4gaXMgdGhlIGZvbGxvd2luZyAgIHlvdSByZWFsbHkgZ2V0ICQ1MDAgb24gYSBzcGVjaWFsIGFjY291bnQgYW5kIGxpbWl0ZWQgdGltZSBmb3IgcGxheSAodXN1YWxseSBhbiBob3VyKS4gCiAzNTkgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb1RoaXMgaXMgYSBiaWcgcHJvYmxlbSB0aGF0IGFmZmVjdHMgYSB3aG9sZSBob3N0IG9mIHByb2plY3RpbGUgc2tpbGxzLCBhbmQgd2UgbG9va2VkIGludG8gaW1wcm92aW5nIGl0IG11bHRpcGxlIHRpbWVzOyBUaGUgYmVzdCBzb2x1dGlvbiByZXF1aXJlcyByZXdyaXRpbmcgYWxsIHByb2plY3RpbGUgY29kZSBhbmQgZXZlcnl0aGluZyBpdCB0b3VjaGVzIChhIHZlcnkgdGltZSBjb25zdW1pbmcgYW5kIHZvbGF0aWxlIHRhc2spLCB0aGUgb3RoZXIgc29sdXRpb24gcmVxdWlyZXMgcmV3cml0aW5nIGV2ZXJ5IHNraWxsIHRoYXQgaGFzIHRoaXMgaXNzdWUgYW5kIG1ha2luZyB0aGVtIGhlYXZpZXIgb24gcGVyZm9ybWFuY2UgaW4gdGhlIHByb2Nlc3MuIEkgd291bGQgYWJzb2x1dGVseSBsb3ZlIHRvIG1ha2UgdGhpcyBjaGFuZ2Ugd2hlbiB3ZSBjYW4sIGFzIGl0IGxpbWl0cyBpbXByb3ZpbmcgYm90aCBvbGQgc2tpbGxzIGFzIHdlbGwgYXMgdGhlIGRlc2lnbiBvZiBwcm9qZWN0aWxlIHNraWxscyBpbiB0aGUgZnV0dXJlLCBidXQgaXQgd2lsbCBjb21lIGF0IHRoZSBjb3N0IG9mIGltcHJvdmVtZW50cyBhbmQgY29udGVudCB3ZSBjb3VsZCBiZSBtYWtpbmcgaW4gdGhhdCB0aW1lLiBCZWNhdXNlIG9mIHRoaXMsIHRoZXJlIGlzIG5vIHdheSB3ZSBjYW4gbWFrZSBhbnkgcHJvbWlzZXMgb24gYW55IHNvcnQgb2YgdGltZWZyYW1lLkRvZ2VtZWF0bGl2ZXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvVEYyIGd1bnBsYXkgaXMgc3VwcmVtZWx5IHRpZ2h0LiAKUG9zdGVkIGJ5IFlub3hhcyBhdCAxMDo1NSBBTSBvbiBKdW5lIDE4LCAyMDA3Ck15IFNJTCByZWFsaXplZCBoZXIgbWlzdGFrZSBhbmQgaW4gaGVyIGRlZmVuY2Ugc2hlIGhhZCBubyBleHBlcmllbmNlIHdpdGggYSBnb29kIGRhZCByb2xlIG1vZGVsIGluIGhlciBmaXJzdCBodXNiYW5kLiAKVGhlIHRlcm0gImRhc2hib2FyZCIgZGlkbid0IG9yaWdpbmF0ZSB3aXRoIHRyYWZmaWMgamFtcyB0aGF0IG1hZGUgZHJpdmVycyB3YW50IHRvIGRhc2ggdGhlaXIgaGVhZCBhZ2FpbnN0IHNvbWV0aGluZyBoYXJkIGluIHRoZSBob3BlcyBvZiBsb3NpbmcgY29uc2Npb3VzbmVzcywgYnV0IGluc3RlYWQgd2FzIHBhc3NlZCBkb3duIHRvIHVzIGZyb20gdGhlIGhvcnNlIGFuZCBidWdneSBkYXlzLiBGYW5zIG9mIHRoZSBzb25nICJKaW5nbGUgQmVsbHMiIGhhdmUgbG9uZyBrbm93biB0aGF0IHRoZSBwcm9wZXIgc3BlZWQgZm9yIGEgb25lIGhvcnNlIG9wZW4gc2xlaWdoIHdhcyAiZGFzaGluZywiIGJ1dCB3aGVuIGhvcnNlcyBzdGFydGVkIHRvIGRhc2ggYWxvbmcgbydlciB0aGUgZmllbGRzLCBiZWxscyBvbiBib2J0YWlscyB3ZXJlbid0IHRoZSBvbmx5IHRoaW5ncyByaW5naW5nLiBUaGUgY3JpZXMgb2YgdGhlIGRyaXZlciBhbmQgcGFzc2VuZ2VyIGxpa2VseSBhbHNvIHJhbmcgb3V0IGFzIHRoZXkgZ290IHNwbGF0dGVyZWQgd2l0aCBtdWQsIG1lYW5pbmcgdGhhdCBzcGlyaXRzIHdlcmUgZGVmaW5pdGVseSBub3QgYnJpZ2h0LCBhbmQgbGF1Z2hpbmcgYWxsIHRoZSB3YXkgd2Fzbid0IGFuIG9wdGlvbi4gCkl0IHdpbGwgZ2V0IGRlbGV0ZWQgYW5kIHJlcGVhdGVkIG9mZmVuZGVycyB3aWxsIGJlIGJhbm5lZC4gCkJlZ2luIGJ5IHN0cm9raW5nIHRoZSBsZWdzIGZpcnN0LCBhbmQgcHJvZ3Jlc3MgdG8gb3RoZXIgYXJlYXMgb2YgdGhlIGJvZHksIGNvbmNlbnRyYXRpbmcgb24gdGhlIGFyZWFzIHRoYXQgeW91ciBiYWJ5IHNlZW1zIHRvIGVuam95IG1vc3QuIElmIHlvdSB0aGluayB0aGF0IHRoZSBhYmRvbWVuIGlzIGEgdGVuZGVyIGFyZWEgZm9yIHlvdXIgYmFieSwgb3IgaWYgeW91IHRoaW5rIHRoYXQgbWFzc2FnZSBoZXJlIG1pZ2h0IHJlc3VsdCBpbiBwb3NzZXRpbmcsIHRoZW4gbGVhdmUgdGhpcyBhcmVhIG91dC4KQSBsb3Qgb2YgdGhlIHN0dWZmIGxpa2UgdXNpbmcgeW91ciB0aHVtYnMgdG8gc3RhbmQgdXAgeW91ciBoYW5kIHdoaWxlIHRhcHBpbmcgRlhzIHdpdGggYnV0dG9ucywgQSBCL0MgRCB0cmlsbHMsIHRyZWF0aW5nIGxhc2VyIHNsYW1zIGFzIGEgcXVpY2sgYnV0dG9uIGxpa2UgdGFwLCBzdGFydCB5b3VyIGdhbWUgb24gYW4gZWFzaWVyIGxldmVsIHRvIHdhcm0gdXAgeW91ciBtdXNjbGVzLCBldGMuIElzIHRvbyBtdWNoIHRvIHdyaXRlIGluIGEgUmVkZGl0IHBvc3QuIApBaW5zaSBkb25jIGEgdCBvbiBmYWl0IGRlIGNldHRlIGRhdGUgKGxpZSAgbGEgU2FpbnQgSmVhbikgbGEgZnRlIGR1IHNvbGVpbC4gQ2VzIHBsYW50ZXMgcmVwcnNlbnRlbnQgZG9uYyBsIHNvbGFpcmUgY29uZGVuc2UgZXQgbWFuaWZlc3RlIFtdLiBFbGxlcyBjYXB0ZW50IGxlcyBmb3JjZXMgaWduZXMgZGUgbGEgdGVycmUgZXQgcmVvaXZlbnQgbCBzb2xhaXJlLiAKTm93IHlvdSdyZSBzdWl0YWJseSBwcmVwYXJlZCwgeW91IGNhbiBzdGFydCB0aGUgcm91dGluZToKV2h5IGlzIGEgcGFpciBvZiBnbGFzc2VzIGEgcGFpciBpZiBpdHMgb25seSBvbmU/CiJNdXNjdWxvc2tlbGV0YWwgcGFpbiBpcyBmcmVxdWVudGx5IG1lbnRpb25lZCBhcyBiZWluZyBzZW5zaXRpdmUgdG8gdmFyaWF0aW9ucyBpbiBjbGltYXRlLiIKQSAyMDA4IHBhcGVyWzZdIG1lYXN1cmluZyBwaHlzaWNhbCBhY3Rpdml0eSBhbW9uZyBjaGlsZHJlbiwgYWRvbGVzY2VudHMsIGFuZCBhZHVsdHMgaW4gdGhlIFVTIHVzaW5nIG9iamVjdGl2ZSBkYXRhIG9idGFpbmVkIHdpdGggYWNjZWxlcm9tZXRlcnMgZnJvbSA2MzI5IHBhcnRpY2lwYW50cyB3aG8gcHJvdmlkZWQgYXQgbGVhc3QgMSBkYXkgYW5kIGZyb20gYW5vdGhlciA0ODY3IHBhcnRpY2lwYW50cyB3aG8gcHJvdmlkZWQgZm91ciBvciBtb3JlIGRheXMgb2YgYWNjZWxlcm9tZXRlciBkYXRhIGZvdW5kIHRoYXQgcGh5c2ljYWwgYWN0aXZpdHkgZGVjbGluZXMgZHJhbWF0aWNhbGx5IGFjcm9zcyBhZ2UgZ3JvdXBzIGJldHdlZW4gY2hpbGRob29kIGFuZCBhZG9sZXNjZW5jZSBhbmQgY29udGludWVzIHRvIGRlY2xpbmUgd2l0aCBhZ2UuCldoaWxlIHRoZSBqdWRnZSBoYWQgbm8gZG91YnQgdGhhdCB0aGVzZSBpdGVtcyB3ZXJlIHVzZWQgaW4gdGhlIGNvdXJzZSBvZiBoaXMgZW1wbG95bWVudCwgdGhlIGp1ZGdlIHdhcyBub3Qgc2F0aXNmaWVkIHRoYXQgdGhlIHRheHBheWVyIGhhZCBhIGNvbnRyYWN0dWFsIG9ibGlnYXRpb24gdG8gcGF5IGZvciB0aGVtLiAKTm9ib2R5IGNvdWxkIGh1cnQgbWUgKHllYWgsIEkgaGFkIHNvbWUgdGVycm9yIGlzc3VlcyBmcm9tIHBhc3QgdHJ1c3RlZCBwZW9wbGUgYWJ1c2luZyBtZSBhcyB3ZWxsLikuIApUaGUgYW5udWFsIE5CQSBGaW5hbHMgYXBwZWFyYW5jZXMgd2lsbCBiZSByZXBsYWNlZCBieSBsb3R0ZXJ5IHByb2plY3Rpb25zLCB0YW5raW5nIGRlYmF0ZXMgYW5kIHNjb3V0aW5nIHRoZSBuZXh0IGJpZyB0aGluZyBvbiBZb3VUdWJlLiAoTGVCcm9uIEphbWVzIEpyLiBpbiAyMDIzISkKVGhlIGJpZ2dlc3Qgd29tZW4gaW4gdGhlIGdhbWUgcmlnaHQgbm93LCBOaWNraSBhbmQgQ2FyZGksIGxpdGVyYWxseSBhcmUgc2V4IGljb25zLiAKVGhlIGd1eSBqdXN0IGxvc2VzIGhpcyBtaW5kLiBIZSBzYWlkLCB0byBtZSBsaWtlIGEgbWFuLiAKSSBndWVzcyBiZWNhdXNlIG1heWJlIG15IHBlcnNvbmFsaXR5IGlzIG5hdHVyYWxseSBtb3JlIGxhaWQgYmFjayBhbmQgaW50cm92ZXJ0ZWQgSSBteSBicmFpbiBjaGVtaXN0cnkgY2xpY2tzIG1vcmUgd2l0aCBiZW56b3MgYW5kIG9waWF0ZXM/IENvdWxkIGJlIHNhbWUgZm9yIHlvdSB0b28gbWF0ZS4KJ1RvIGdldCBiYWNrIG15IHlvdXRoIEkgd291bGQgZG8gYW55dGhpbmcgaW4gdGhlIHdvcmxkLCBleGNlcHQgdGFrZSBleGVyY2lzZSwgZ2V0IHVwIGVhcmx5LCBvciBiZSByZXNwZWN0YWJsZScgKE9zY2FyIFdpbGRlLCBUaGUgUGljdHVyZSBvZiBEb3JpYW4gR3JheSwgMTg5MSkuCkFzIHdlbGwgYXMgYnVzaHdhbGtpbmcgYW5kIHJvY2sgY2xpbWJpbmcsIHRoZXkgd2VyZSBhbHNvIGxvb2tpbmcgZm9yIHNvbWV3aGVyZSB0byBzZXQgdXAgdGhlaXIgYnJld3B1Yi4KKEVsbGlzIHByZWRlY2Vzc29yIG9uIHRoZSBDb3VydCkgYWxzbyB3b3JrZWQgYXQgSHVudG9uIFdpbGxpYW1zLiAKVGhlIHdheSBJIGxvb2sgYXQgaXQsIGluIHRlcm1zIG9mIG15IGRlZmF1bHQgc3RyYXRlZ3ksIHRoZXJlIGFyZSB2ZXJ5IGZldyBwZW9wbGUgaW4gdGhlIHdvcmxkIHRoYXQgY291bGQgYmVhdCBtZSBqdXN0IHBsYXlpbmcgYSB0b3RhbGx5IHRoZW9yeSBiYXNlZCBzdHlsZS4gU28gYnkgbWFraW5nIGFkanVzdG1lbnRzIHRvIHBlb3BsZSBiZWZvcmUga25vd2luZyB3aGF0IHRoZXkgYXJlIGRvaW5nLCBJIGdvIGZyb20gZm9yIHN1cmUgd2lubmluZywgdG8gbWF5YmUgd2lubmluZy4gSSBkb24gbGlrZSB0aGUgcmVzdWx0IHRoZXJlLgpUaGlzIGluZmx1ZW5jZSBkaWRuIGhhcHBlbiBvdmVybmlnaHQuIFdoYXQgbW9yZSBsaWtlbHkgaXMgdGhhdCB0aGVzZSBkZXZlbG9wbWVudHMgdG9vayBwbGFjZSBhdCBhbiBlYXJsaWVyIHN0YWdlIGluIHRoZSBtb3JlIENlbHRpYyBub3J0aCBhbmQgd2VzdCBvZiBFbmdsYW5kLCBidXQgb25seSBhcHBlYXIgaW4gdGhlIHdyaXR0ZW4gcmVjb3JkIHdpdGggdGhlIGNvbGxhcHNlIG9mIE9sZCBFbmdsaXNoIGFzIGEgZGlzdGluY3QgcHJlc3RpZ2UgbGFuZ3VhZ2UuIFRoaXMgZ2VvZ3JhcGhpY2FsIGFzcGVjdCByYWlzZXMgYW5vdGhlciBwb3NzaWJpbGl0eSBmb3IgdGhlIHNlZW1pbmcgbGFjayBvZiBDZWx0aWMgaW5mbHVlbmNlIG9uIEVuZ2xpc2ggdm9jYWJ1bGFyeTsgaXQgbWF5IGJlIHBvc3NpYmxlIHRoYXQgT2xkIEVuZ2xpc2ggc3BlYWtlcnMgZmlyc3QgY2FtZSBpbnRvIGNvbnRhY3Qgd2l0aCBwZW9wbGUgd2hvIHNwb2tlIGEgdmVyeSBMYXRpbml6ZWQgIkxvd2xhbmQiIGRpYWxlY3Qgb2YgQ2VsdGljIHRoYXQgd2FzIGRpc3RpbmN0IGZyb20gd2hhdCBiZWVuIGRlc2NyaWJlZCBhcyAiSGlnaGxhbmQiIEJyaXRpc2ggQ2VsdGljLCB0aGUgcGFyZW50IGxhbmd1YWdlIG9mIG1vZGVybiBXZWxzaCwgQnJldG9uIENvcm5pc2gsIGlmIENlbHRpYyBsYW5ndWFnZXMgd2VyZSBldmVuIHByZXNlbnQgaW4gdGhlIHNvdXRoIGVhc3Qgb2YgRW5nbGFuZCBhdCBhbGwuIEluZGVlZCwgaXQgc2VlbXMgbGlrZWx5IHRoYXQgYmVmb3JlIHRoZSBhcnJpdmFsIG9mIE9sZCBFbmdsaXNoLCBMYXRpbiBkZXZlbG9wZWQgaW4gdGhhdCBhcmVhIG9mIEVuZ2xhbmQgaW4gbXVjaCB0aGUgc2FtZSB3YXkgaXQgYWxzbyBkaWQgaW4gR2F1bCwgYmVjb21pbmcgd2lkZWx5IGFkb3B0ZWQgd2l0aCBDZWx0aWMgZGlhbGVjdHMgYmVpbmcgc3Bva2VuIG9ubHkgaW4gdmVyeSBtYXJnaW5hbCBzcGFjZXMuCldlIHZlcnZvbGdkZW4gb256ZSB3ZWcgbmFhciBPbGQgQXJiYXQsIGRlIHdhbmRlbHN0cmFhdCB2YW4gTW9za291LCBtZXQgc3RyYWF0YXJ0aWVzdGVuLCBrcmFhbXBqZXMsIHRlcnJhc2plcyBlbiBzb3V2ZW5pciB3aW5rZWxzLiBJZGVhYWwgZHVzIG9tIG9uemUgYXZvbmQgYWYgdGUgc2x1aXRlbiEgV2UgbWFha3RlbiBlZW4gb21tZXRqZSBuYWFyIGhldCBtb29pZSB3aXR0ZSAxN2RlIGVldXdzZSBrZXJramUgQ2h1cmNoIG9mIHRoZSBTYXZpb3VyIGluIFBlcnNpIGVuIHphZ2VuIG9vayBoZXQgUHVzaGtpbiBNdXNldW0gaW4gZWVuIG1vb2kgYmxhdXcgaHVpcywgbWV0IGRhYXJ0ZWdlbm92ZXIgd2VlciB6aWpuIHN0YW5kYmVlbGQgZGV6ZSBrZWVyIHdlbCBpbnRlcmVzc2FudCB3YW50IG1ldCBnZW9jYWNoZS4gRWVyc3Qgd2lsZGVuIHdlIGtpZXplbiB2b29yIGRlIGtldGVuIE11IE11IChoZXJrZW5iYWFyIGFhbiBkZSBrb2UpIGhlbGFhcyB3YXMgZGF0IGVlbiAoZHJ1aykgYnVmZmV0IGVuIGRhYXIgaGFkZGVuIHdlIGV2ZW4gZ2VlbiB6aW4gaW4uIApTaGUgaGFzIGRvbmUgbm90aGluZyBmb3IgT1Agd2hvIHdpbGxpbmdseSBvZmZlcmVkIGhlciBzcGFjZSBhbmQgYW5kIGEgcm9vZiBvdmVyIGhlciBoZWFkLiBUaGUgbGVhc3Qgc2hlIGNhbiBkbyBpcyB0byBub3QgdGFsayBhYm91dCBoaW0gbGlrZSBoZSBpcyBhIGR1bWIgaWRpb3QgKG9yIHdoYXRldmVyIHNoZSBzYXlzIGFib3V0IGhpbSkuIFRoZSBmYWN0IHNoZSBkb2VzIHRoaXMga25vd2luZyBoZSBrbm93cyBhbmQgc2VlcyB3aGF0IHNoZSBwb3N0cyBpbmRpY2F0ZXMgdG8gbWUgc2hlIHNob3VsZG4ndCBoYXZlIGFjY2VwdGVkIGl0LiBJIGJlbGlldmUgc2hlIG1hZGUgYSBiYWQgY2hvaWNlIGVzcGVjaWFsbHkgd2l0aCBoZXIgYWN0aW9ucyBwcm92aW5nIHRoaXMgKGFsYmVpdCBhZnRlciB0aGUgZmFjdCkuCkkganVzdCByZWFsbHkgd2FudGVkIHRvIGJlIGZyaWVuZHMgd2l0aCB0aGVtIEkgd2FzIHRoaXJ0ZWVuLCBJIHdhcyBjYXN0IGluIHRoZSBzY2hvb2wgcGxheSwgYW5kIHBhcnQgb2YgbXkgY29zdHVtZSBpbnZvbHZlZCBvbmUgb2YgdGhvc2UgQ05EIG5lY2tsYWNlcy4gCktpcnNjaHN0ZWluLCB0aGUgY2VudGVyIGFjdGluZyBkaXJlY3RvciwgdGVzdGlmaWVkIHRvIGEgQ29uZ3Jlc3Npb25hbCBjb21taXR0ZWUgaW4gTWFyY2ggMjAwNyB0aGF0IDc4JSBvZiBtZWRpY2FsIHNjaG9vbHMgdGVhY2ggY291cnNlcyBvbiBhbHRlcm5hdGl2ZSBtZWRpY2luZSwgYWNjb3JkaW5nIHRvIHRoZSBBc3NvY2lhdGlvbiBvZiBBbWVyaWNhbiBNZWRpY2FsIENvbGxlZ2VzLiAKSSB0aGlua2luZyBzb21lIG1pZ2h0IGhhdmUgc29ha2VkIHRocm91Z2ggdG8gbXkgc2luZ2xldCBidXQgSSBqdXN0IHdhbnQgdG8gd2FzaCB0aGlzIHNpbmdsZXQuIEFuZCB0aGVuIEkgdGhpbmsgSSBjb3VsZCBoYXZlIGltYWdpbmVkIGl0IGJ1dCB0aGVuIGFub3RoZXIgcGFydCBzZWVzIGhvdyBvYnZpb3VzIGl0IHdhcyB3aGF0IGhlIGRpZC4gSSBnb29nbGVkIGl0IGFuZCB0aGlzIGRvZXMgbm90IHNlZW0gY29tbW9uIGJlaW5nIGVqYWN1bGF0ZWQgb24gZHVyaW5nIGEgbWFzc2FnZS4uIApHbyByZWFsbHkgd2VsbCB3aXRoIHdhcm0gd2hpdGVzIGFuZCB3b3JrIGJlYXV0aWZ1bGx5IHdpdGggdG91Y2hlcyBvZiBibGluZywgbGlrZSBmYWNldGVkIGNyeXN0YWxzIGFuZCBzb2Z0IG1peGVkIG1ldGFsbGljcy4gVW50aWwgQXByaWwgMTEsIDIwMTkuLiAKIlRoZXJlIHdpbGwgYmUgYSBoaWdoIGVuZXJneSBSdXNoIExvdW5nZSBhbmQgYSB1bmlxdWUgTGl2ZSBCYXIgdG8gY29tcGxlbWVudCBhIG5ldyBzcGEsIHBva2VyIHJvb20sIGFuZCBhIHN0YXRlIG9mIHRoZSBhcnQgc2hvd3Jvb20uIApUaGUgYmlnZ2VzdCBwbHVzIGZvciBtZSBpcyB0aGlzOiB1c2luZyBMaW51eCBpcyB2ZXJ5IGxpYmVyYXRpbmcuIE1pbmltYWwgc3R1ZmYgaXMgdHVybmVkIG9uIGJ5IGRlZmF1bHQsIGNvbmZpZ3VyaW5nIGJlY29tZXMgYSBjYXNlIG9mIGVkaXRpbmcgc3lzdGVtIGZpbGVzLCBub3RoaW5nIGlzIGNvcnBvcmF0ZSBvciBvYmZ1c2NhdGVkIGF3YXksIHlvdSBvbmx5IHR1cm4gb24gd2hhdCB5b3Ugd2FudC4gVGhlcmUgaXMgbm8gQ2FuZHkgQ3J1c2ggaW5zdGFsbGVkIGJ5IGRlZmF1bHQuIApUaGUgTkhMIHRyYWRlIGRlYWRsaW5lLCBOaWt1IHdhc24gYXNzaWduZWQgdG8gdGhlIE1hbml0b2JhIE1vb3NlIG9mIHRoZSBBbWVyaWNhbiBIb2NrZXkgTGVhZ3VlIG5vdCBldmVuIGFzIGEgcGFwZXIgdHJhbnNhY3Rpb24gdG8gbWFrZSBoaW0gZWxpZ2libGUgZm9yIHBsYXlvZmYgcGFydGljaXBhdGlvbi4uIAoxMTogV2luZHMgYW5kIGNvbGQgcHV0IGEgY2hpbGwgb24gYXJlYSBmaXNoaW5nIEEgYml0dGVyIGNvbGQgc25hcCBhbmQgZ2FsZSBmb3JjZSB3aW5kcyBoYXZlIHB1dCBhIGRhbXBlciBvbiBzdGVlbGhlYWQgdHJvdXQgZmlzaGluZywgYW5kIHRoZSBmcmlnaWQgd2VhdGhlciB3b24ndCBiZSBjb2xkIGVub3VnaCB0byBjcmVhdGUgc2FmZSBpY2UgZm9yIGljZSBmaXNoaW5nLi4gClR3b3NvbWUgUGxhY2UgaXMgdGhlIG9ubHkgbmFtZSB0aGF0IEkgY2FuIHRoaW5rIG9mIHJpZ2h0IG9mZiB0aGUgYmF0LiAKQnV0IGlmIHlvdSBhcmUgY291bnRpbmcgb24gdGhlIGhvdXNpbmcgbWFya2V0IHRvIGJlIGhpdCBieSBhIHRydWUgcmVjZXNzaW9uLCB5b3UgbWF5IGVuZCB1cCB3YWl0aW5nIGEgbG9uZywgbG9uZyB0aW1lLiAKTW9udHJhbCwgbGEgZGltaW51dGlvbiBkZSBsJ3BhaXNzZXVyIGRlIG5laWdlIGF1IHNvbCBlc3QgdGVsbGVtZW50IG1hcnF1ZSBxdWUgbGEgbXVuaWNpcGFsaXQgYSBjaGFuZyBzZXMgZW50ZW50ZXMgYXZlYyBsZXMgZG5laWdldXJzIHByaXZzLCBpbCB5IGEgdHJvaXMgYW5zLiAgbCdwb3F1ZSwgbGVzIGVudHJlcHJlbmV1cnMgdGFpZW50IHBheXMgIGxhIHF1YW50aXQgZGUgbmVpZ2UgdG9tYmUuIE1haXMgY2VzIGNyaXN0YXV4IHBobXJlcyBmb25kZW50IHBsdXMgc291dmVudCBxdSdhdmFudCwgbW1lIGF1IG1pbGlldSBkZSBsJ2hpdmVyLiAKVGhlIDRBcywgYSB0cmFkZSBhc3NvY2lhdGlvbiByZXByZXNlbnRpbmcgYWdlbmNpZXMsIGhhcyBkb3ducGxheWVkIGFsbGVnYXRpb25zIG9mIGltcHJvcGVyIG1lZGlhIGJ1eWluZyBwcmFjdGljZXMuIEluIHRoZSB3YWtlIG9mIHRoZSBBTkEncyAyMDE2IHJlcG9ydCwgNEFzIHNsYW1tZWQgaXQgYXMgImFub255bW91cywgaW5jb25jbHVzaXZlLCBhbmQgb25lIHNpZGVkLiIgSW4gQXByaWwsIGFnZW5jaWVzIGZhY2VkIG1vcmUgcHJlc3N1cmUgZnJvbSBhIHJlcG9ydCBieSBNY0tpbnNleSBDby4gY2xhaW1pbmcgdGhhdCByZWJhdGVzIGFuZCBvdGhlciAibm9uIHRyYW5zcGFyZW50IiBpbmNlbnRpdmVzIGZyb20gbWVkaWEgY29tcGFuaWVzIHRvIGFnZW5jaWVzICJyZW1haW4gY29tbW9uLiIgNEEncyBDRU8gTWFybGEgS2FwbG93aXR6IHJlc3BvbmRlZCBieSBzYXlpbmcgdGhlIG1ham9yaXR5IG9mIGFnZW5jaWVzIGNsYWltZWQgdGhleSBkb24ndCB0YWtlIHJlYmF0ZXMsIG9yIHRoYXQgd2hlbiB0aGV5IGRvLCB0aGV5IGFyZSBkaXNjbG9zZWQgdG8gY2xpZW50cy4KVGhleSBzZWVtIHRvIGJlIGZhbW91cyBmb3IgdGhlaXIgc2V2ZXJpdHksIHplYWxvdHJ5IGFuZCB3ZWlyZCBiZWhhdmlvciBpbiBnZW5lcmFsLCBhbmQgcGVvcGxlIGhlcmUganVzdCBzaHJ1ZyBhbmQgc2VlIGl0IGFzIG5vcm1hbCBjYXRob2xpYyBiZWhhdmlvciwgYnV0IEkgc3dlYXIgSSBuZXZlciBtZXQgcGVvcGxlIGxpa2UgdGhhdCAoZXhjZXB0IHRob3NlIGluIHBzZXVkbyBjaHJpc3RpYW4gY3VsdHMpIGFuZCBldmVyeWJvZHkgaXMgY2F0aG9saWMgaW4gbXkgY291bnRyeSBhbmQgbmVpZ2hib3JzLCBzbyBJIHNob3VsZCBoYXZlIG5vdGljZWQgaWYgdGhpcyB3ZXJlIHRoZSBub3JtLi4gCkluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gQW5kIFBhcmtpbiwgQi4gCkxhdmVuZGVyLCBiZXJnYW1vdCwgbWFyam9yYW0sIHNhbmRhbHdvb2QsIGxlbW9uLCBhbmQgY2hhbW9taWxlIHdlcmUgZm91bmQgKGluIHRoYXQgb3JkZXIpIHRvIHJlbGF4IGJyYWluIHdhdmVzLiBEb2N0b3JzIEdpb3Zhbm5pIEdhdHRpIGFuZCBSZW5hdG8gQ2F5b2xhIGRpc2NvdmVyZWQgdGhhdCB0aGUgbW9zdCBzZWRhdGluZyBvaWxzIGZvciB0aGVpciBwYXRpZW50cyB3ZXJlIG5lcm9saSwgcGV0aXRncmFpbiwgY2hhbW9taWxlLCB2YWxlcmlhbiwgYW5kIG9wb3BhbmF4ICh3aGljaCBpcyBzaW1pbGFyIHRvIG15cnJoKS4gSW4gZmFjdCwgbmVyb2xpLCB2YWxlcmlhbiwgYW5kIG51dG1lZyBhcmUgaW5jbHVkZWQgaW4gYSBibGVuZCBwYXRlbnRlZCBieSBJbnRlcm5hdGlvbmFsIEZsYXZvcnMgYW5kIEZyYWdyYW5jZXMsIEluYy4sIGZvciBlYXNpbmcgc3RyZXNzIGluIHRoZSB3b3JrcGxhY2UuIEFyb21hdGhlcmFwaXN0cyBmaW5kIHlsYW5nIHlsYW5nIGFub3RoZXIgcG90ZW50IHJlbGF4YW50LiBOZWVkIGV2ZW4gbW9yZSB3YXlzIHRvIHJlbGF4PyBTZWUgSW5zb21uaWEuIE9uIHRoaXMgcGFnZSwgeW91IHdpbGwgZmluZCBhbGwgb2Ygb3VyIGhlcmIgcHJvZmlsZXMgYW5kIGluc3RydWN0aW9ucyBmb3IgdHJlYXRpbmcgbWVkaWNhbCBwcm9ibGVtcyB3aXRoIGhlcmJhbCByZW1lZGllcy4KVGhlcmVmb3JlLCBJIHdvdWxkIGp1c3QgcmlwIGl0IGluIGhlcmUgb3ZlciBoaXMgcmFpc2UgICB0aGVyZSBhcmUgc28gbWFueSBiYWQgdHVybiBjYXJkcyB0aGF0IHdpbGwga2lsbCB5b3VyIGFjdGlvbiBhbmQgYWxzbyBzY2FyeSBvbmVzIHRoYXQgd2lsbCBwdXQgeW91IGluIGEgYmFkIHNwb3Qgb24gdHVybnMgYW5kIHJpdmVycy4gSSB0aGluayBhbGwgb2YgaGlzIGRyYXdzIGFyZSBjYWxsaW5nIGFzIHdlbGwgYmVjYXVzZSBoZSBub3QgY2hlY2sgcmFpc2luZyB5b3UgaW4gYSA0IHdheSBwb3Qgd2l0aCBhdCBsZWFzdCBhIHZlcnkgZ29vZCBkcmF3IGFuZCBoZSBiZSBwcmljZWQgaW4gdG8gY2FsbC4gU29tZXRpbWVzIHlvdSB2YWx1ZSBvd24geW91cnNlbGYgYnV0IGl0IHN0aWxsIHRoZSBiZXN0IG1vdmUgSU1PLgpUYWJsZSBHYW1lcyBEaXJlY3RvciBKYXkgQmVhbiBzYXlzIHRhYmxlIGdhbWUgcG9zaXRpb25zIHdlcmUgcmVjcnVpdGVkIGZpcnN0IGJlY2F1c2UgdGhleSByZXF1aXJlIHRoZSBtb3N0IHRyYWluaW5nLiAKVGhlIHByb2JsZW0gaXMgdGhhdCBzb2NpYWxpc3QgY2FuIGxldCB0aGlzIGJlIGFub3RoZXIgZXhhbXBsZSBvZiBzb2NpYWxpc20gZmFpbGluZy5BZ2FpbiwgcmVmZXIgdG8gdGhlIGFydGljbGUgYWJvdmUgaWYgeW91IGhhdmluZyB0cm91YmxlIHVuZGVyc3RhbmRpbmcuIFdobyBvd25zIGEgY29tcGFueSBoYXMgbm90aGluZyB0byBkbyB3aXRoIHdoYXQgdGhlIGdvdmVybm1lbnQgb2YgYSBwbGFubmVkIGVjb25vbXkgaXMgZG9pbmcuIApJIHVzZWQgdG8gYmVnIHRvIHNsZWVwIGluIHRoZSBzYW1lIGJlZCBhcyBhIG1hbGUgZnJpZW5kIHdob20gSSB0cnVzdGVkIGFuZCByZXNwZWN0ZWQgKGhlIHdhcyBzaW5nbGUpLiAKSSB0YWxrZWQgdG8gc28gbWFueSBTb3V0aCBBZnJpY2FucyBpbiBsaW5lIHRoYXQgSSBhbG1vc3QgZm9yZ290IHdoeSBJIHdhcyBsaW5pbmcgdXAuIApFdmVudHVhbGx5IHdoYXRldmVyIG11c2NsZXMgdGhvc2UgYXJlIHlvdSBnZXQgdXNlZCB0byBpdCBhbmQgaXQnbGwgYmUganVzdCBob3cgeW91IG1vdmUgYnV0IEkgaGFkIHRvIGRvIGl0IGNvbnNpc3RlbnRseSBmb3IgaXQgdG8gZ28gYXdheSBpbiBhdGhsZXRpY3MgaW4gaGlnaHNjaG9vbC4gCllvdSBjYW4gZGVmaW5pdGVseSB0cnVzdCB0aGlzIHNpdGUuIAoiWWVzLCB3ZSBhcmUgbWFpbmx5IGFuIG9ubGluZSBzbG90cyBjYXNpbm8gYW5kIG91ciBhdXRvbWF0aWMgYm9udXNlcyBhcmUgZm9yIG9ubGluZSBzbG90cyBnYW1lcy4gQnV0IHdlIGRvIG9mZmVyIGEgc3BlY2lhbCB0YWJsZSBnYW1lcyBib251cyBmb3IgQmxhY2sgSmFjaywgUG9rZXIsIFJvdWxldHRlIGFuZCBWaWRlbyBQb2tlcnMgdG8gcmVndWxhciBwbGF5ZXJzLiBBbmQgdGhlIHdlZWtseSBmcmVlIGJvbnVzIHdlIGlzc3VlIGV2ZXJ5IFdlZG5lc2RheSB0byBvdXIgcmVndWxhciBwbGF5ZXJzIGNhbiBiZSB1c2VkIG9uIGFueSBnYW1lICAgZXhjZXB0IHByb2dyZXNzaXZlIGdhbWVzLgpTeWJpbCB3YXMgdmVyeSBmbGFzaHkgYW5kIHZvY2FsIGFib3V0IGV2ZXJ5dGhpbmcgc2hlIGRpZCBzb2NpYWxseSBhbmQgcG9saXRpY2FsbHkuIApJIG1hbmFnZSBhIG1vdmllIHRoZWF0cmUgYW5kIG9oIGJveSwgSSBmaWVsZCBzdHVwaWQgY29tcGxhaW50cyBhbGwgZGFuZyBEQVkuIApBbmQgd2hpbGUgTWlrZSB3YXMgc2hvd2luZyBvZmYgaGlzIGZhbmN5IGZvb3R3b3JrIG9uIHRoZSBwaXRjaCwgZmlhbmNlIFphcmEgUGhpbGxpcHMgc2hvd2VkIHNoZSB3YXMgbm8gc2xvdWNoIHdoZW4gaXQgY2FtZSB0byBwcmVwYXJpbmcgZm9yIHRoZSBiaWcgZGF5IGVpdGhlci4KTGVzIGNvb2tpZXMgc29udCBkZXMgcGV0aXRzIGZpY2hpZXJzIHRleHRlIHF1aSBzb250IHN0b2NrcyBwYXIgdm90cmUgbmF2aWdhdGV1ciBzdXIgdm90cmUgb3JkaW5hdGV1ciBvdSBzdXBwb3J0IG1vYmlsZSBwb3VyIGVucmVnaXN0cmVyIGNlcnRhaW5lcyBpbmZvcm1hdGlvbnMgb3UgZmljaGllcnMgZCdpbWFnZXMsIHRlbHMgcXVlIGxlcyBwaXhlbHMuIExhIHByb2NoYWluZSBmb2lzIHF1ZSB2b3VzIHZpc2l0ZXJleiBub3RyZSBzaXRlIHdlYiBzdXIgbGUgbW1lIGRpc3Bvc2l0aWYsIGxlcyBpbmZvcm1hdGlvbnMgZW5yZWdpc3RyZXMgZGFucyBsZXMgY29va2llcyBzZXJvbnQgdHJhbnNtaXNlcyBlbiBjb25zcXVlbmNlIHNvaXQgIG5vdHJlIHNpdGUgd2ViICgiY29va2llIGRlIHByZW1pcmUgcGFydGllIiksIHNvaXQgIHVuIGF1dHJlIHNpdGUgd2ViIGF1cXVlbCBsZSBjb29raWUgYXBwYXJ0aWVudCAoImNvb2tpZSBkZSB0aWVycyIpLgpSaWdodCBpbiB0aGUgZmFjZS4gSSBzd2VhciB0byBDaHJpc3QgdGhhdCBndXkgaGFkbid0IHNob3dlcmVkIG9yIHdpcGVkIGhpcyBhc3MgaW4gYXQgbGVhc3QgYSB3ZWVrLkkgc2hvd2VkIGhpbSBvdXQuIApNYXNzYWdlIHN0cmV0Y2hlcyBtdXNjbGVzIGFuZCByZWxlYXNlcyBhZGhlc2lvbnMgYWxsb3dpbmcgeW91IHRvIGdldCB0aGUgbW9zdCBvdXQgb2YgZWFjaCBsZXNzb24gYW5kIHdvcmtvdXQgYW5kIGhlbHAgYmFsYW5jZSB5b3VyIGJvZHkuLiAKSWYgb3RoZXJzIGZpbmQgam95IGluIGZlZWRpbmcgcGlnZW9ucyB3aHkgcGlzcyBvbiB0aGVpciBwYXJhZGU/IE5ZQyBpcyBiYXNpY2FsbHkgb25lIGJpZyBmaWx0aHksIHJhbXBhbnQgcGlnZW9uIGFueXdheS4gCllvdSBjYW4gbm93IG9yZGVyIHRoZXNlIGhhbmR5IG1hY2hpbmVzIG9ubGluZSwgb3IgeW91IGNhbiBwYXkgYSB2aXNpdCB0byB0aGUgbG9jYWwgcG9rZXIgc2hvcCBhbmQgcGljayB1cCBhIHN1aXRhYmxlIG9uZSBmb3IgeW91Li4gCkZhY2Vib29rIG9mZmVyaW5nIHRvIGJ1eSBTbmFwY2hhdCwgZ2V0dGluZyByZWplY3RlZCwgYW5kIHRoZW4gcHJvY2VlZGluZyB0byBpbW1lZGlhdGVseSBjb3B5IGV2ZXJ5IHNpbmdsZSBmZWF0dXJlIG9mIFNuYXBjaGF0IGRvd24gdG8gdGhlIHBpeGVsIGFuZCByb2xsaW5nIGl0IG91dCBhY3Jvc3MgYWxsIHRoZWlyIHBsYXRmb3Jtcy4KSXQgaXMgbm90IGFib3V0IGxlYWRlcnNoaXAgYnV0IGFib3V0IHN1cnZpdmFsLiAKQWxzbywgSSB3b3VsZCByb3RhdGUgbXkgZmxlYSBtZWRzLCBzbyBvbmUgbW9udGggYWR2YW50YWdlLCB0aGVuIEFkdmFudGl4LCBldGMuIEkgZm91bmQgdGhhdCBpZiBJIHVzZWQgb25lIG1lZCBtb3JlIHRoYW4gdHdpY2UgaW4gYSByb3csIGZsZWFzIHdvdWxkIGFwcGVhci4gCkkgd291bGRuJ3QgdGVsbCBPUCBub3QgdG8gdGFrZSB0aGUgcmlzaywgYnV0IGxldHMgYmUgcmVhbGlzdGljLCB0aGlzIGNvbW1lbnQgc2VjdGlvbiBtYWtlcyBpdCBzb3VuZCBsaWtlIGFza2luZyBhIGd1eSBvdXQgaXMgYSBndWFyYW50ZWVkIGRhdGUgZm9yIHVzIGdpcmxzLi4gCkkga25vdyB0aGF0IG5vdCBhbGwgc2hvcnQgZmlsbXMgZG8sIGJ1dCBtb3N0IG9mIHRob3NlIHRha2UgY2hhcmFjdGVyaXphdGlvbiBzaG9ydGN1dHMgdG8gbGV0IHVzIGtub3cgYSBwcm90YWdvbmlzdCBxdWlja2x5LiAKUG9rZXJTdGFycywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBvbmxpbmUgcG9rZXIgc2l0ZSwgaGFzIHNwZW50IG1pbGxpb25zIG9mIGRvbGxhcnMgbG9iYnlpbmcgZm9yIGxlZ2FsaXphdGlvbiBpbiBDYWxpZm9ybmlhIGFuZCBwYXJ0bmVyZWQgd2l0aCBzb21lIG9mIHRoZSBzdGF0ZSdzIG1vc3QgcG93ZXJmdWwgdHJpYmFsIGNhc2lub3MgYW5kIGNhcmRyb29tcywgbW9zdCBub3RhYmx5IFNhbiBNYW51ZWwgYW5kIE1vcm9uZ28gaW4gdGhlIElubGFuZCBFbXBpcmUuIEFub3RoZXIgcG93ZXJmdWwgY29hbGl0aW9uLCByZXBvcnRlZGx5IGxlZCBieSBQZWNoYW5nYSBpbiBUZW1lY3VsYSwgYW5kIGluY2x1ZGluZyBTYW4gRGllZ28gQ291bnR5J3MgVmllamFzIGFuZCBCYXJvbmEgQ2FzaW5vcywgdmVoZW1lbnRseSBvcHBvc2VkIGFsbG93aW5nIFBva2VyU3RhcnMgdG8gb2J0YWluIGEgQ2FsaWZvcm5pYSBsaWNlbnNlLCBleHByZXNzaW5nIGNvbmNlcm5zIGFib3V0IHRoZSBjb21wYW55J3MgcHJldmlvdXMgbGVnYWwgaXNzdWVzLi4gCjY1OjM1OjpDbG9uZTpWaW50YWdlLiBQZXJoYXBzIHNhY3JpbGVnZSBhbGwgYXJvdW5kIGJ1dCBJIGRpZG4ga2lsbCBlaXRoZXIgYm90dGxlLiAKMiBob3cgbXVjaCBkbyB5b3Ugd2FudCB0byBzcGVuZD8gVGhlcmUgYXJlIGFsbCBpbiBvbmUgY3VycmljdWxhIHRoYXQgYXJlIGNyYXp5IGV4cGVuc2l2ZSwgYnV0IGxlc3Mgd29yayBmb3IgeW91IG9yIHlvdSBjYW4gdGhyb3cgdGhpbmdzIHRvZ2V0aGVyLiBPbiB0aGUgc2FtZSBub3RlICAgcmVzZWFyY2ggc29tZSBkaWZmZXJlbnQgc3R5bGVzIG9mIGhvbWVzY2hvb2xpbmcgKHRoZXJlIGlzIGEgc3BlY3RydW0gb2YgdW5zY2hvb2xpbmcgdXAgdG8gaXQgbG9va2luZyBsaWtlIGEgdHJhZGl0aW9uYWwgY2xhc3Nyb29tIGF0IGEgcHVibGljIHNjaG9vbCkuIApXYW50ZWQgdGhpcyBib29rIHRvIHByZXNlbnQgYSBraW5kZXIgYXBwcm9hY2ggdG8gaGVhbHRoaWVyIGxpdmluZy4gT25lIHRoYXQgd2FzIGEgbGl0dGxlIG1vcmUgbWluZGZ1bCBhbmQgYSBsaXR0bGUgbW9yZSByZWFsLCBzYXlzIEJhdHRpc3RhLiAKQmFsbHkncyBBdGxhbnRpYyBDaXR5IG9mZmVycyBtb3JlIHRoYW4gMTg1LDAwMCwgc3F1YXJlIGZlZXQgb2YgZ2FtaW4gYXJlYSBpbiB0d28gY2FzaW5vcyAoQmFsbHkncyBhbmQgVGhlIFdpbGQgV2lsZCBXZXN0KS4gCkhhcyBoaXQgYSBoaXN0b3JpYyBoaWdoIG9mICQ4OTEuMyBiaWxsaW9uLiBJdCBpcyB1bmxpa2VseSB0aGF0IHRoZSB0cmFkZSBkZWZpY2l0IHdpdGggQ2hpbmEgaXMgZ29pbmcgdG8gc2hyaW5rIGFueXRpbWUgaW4gdGhlIG5lYXIgZnV0dXJlLCBwdXR0aW5nIHRoZSBjcmVkaWJpbGl0eSBvZiBQcmVzaWRlbnQgVHJ1bXAgRmlyc3QgZWNvbm9taWMgcGxhdGZvcm0gcG90ZW50aWFsbHkgaW4gamVvcGFyZHkuLiAKTm8sIG15IGhhZ3dvbiBkaWQgbm90IGZ1Y2sgbWUgb3Zlci4gVGhleSBhY3R1YWxseSBiZWVuIHByZXR0eSBmYWlyLiBJIGFsc28gYmVlbiBpbiB0aGUgcHVibGljIHNjaG9vbCBzeXN0ZW0uIApUaHJvd2luZyBoaW0gdG8gdGhlIGN1cmIgYW5kIHRlbGxpbmcgaGlzIGdpcmxmcmllbmQgYmVoaW5kIGhpcyBiYWNrIG5vIGxlc3Mgd2FzIHByZXR0eSB1bmRlcmhhbmRlZCBhbmQgaG9uZXN0bHkgYSBsaXR0bGUgdW5jYWxsZWQgZm9yLiAKT2ggYW5kIGRvbiB3b3JyeSBJIG5vdCBnb2luZyB0byBvdXQgeW91IGlmIEkgYmVjb21lIGF3YXJlLCByZWdhcmRsZXNzIG9mIGhvdyB5b3UgaGFuZGxpbmcgdGhpcyBzaXR1YXRpb24gSSB3b24gYmUgYnJlYWtpbmcgYW55IHNpdGUgd2lkZSBydWxlcyBzbyB5b3Ugc2FmZS4KU2luY2UgeW91IHByb2JhYmx5IHdvbiBiZSBhYmxlIHRvIHJlc2VydmUgeW91ciB0aWNrZXRzIG9ubGluZSBwcmlvciB0byB0aGUgc2hvd2luZywgSSB3b3VsZG4gZ2V0IG15IGhvcGVzIHVwIG9mIHNlZWluZyBpdCBvbiB0aGUgYmVzdCBzY3JlZW5zIFRIQVQgZGF5Li4gCk5vdywgcmVnYXJkaW5nIGJ1ZGdldC4KSSBndWVzcyBJIHNhaWQgbm8gY2hvaWNlIGJlY2F1c2UgYW4gYWx0ZXJuYXRpdmUgaXMgImxldHRpbmcgdGhlbSBiZWNvbWUgaG9tZWxlc3MiIGFuZCB0aGF0IGp1c3Qgbm90IGdvbm5hIGhhcHBlbiwgYnV0IEkgZG8ga25vdyBpdCBsaXRlcmFsbHkgaXMgYSBjaG9pY2UuIApUaGVuIGhlIG1vdmVkIG9uIHRvIFJlbmVlIFplbGx3ZWdlciBhbmQsIGxhdGVyLCBoaXMgbWFzc2FnZSB0aGVyYXBpc3QuIFRoZXkgbXV0dWFsbHkgc3VwcG9ydGl2ZSBvZiBvbmUgYW5vdGhlciwgYW5kIGhlciBkZXB0aCBoZWxwcyB0byBicmluZyBvdXQgaGlzIG93biBoaWRkZW4gZW1vdGlvbnMuIERvZXMgdGhpcyBtZWFuIHdlIHNlZSBDYXJyZXkgaW4gc29tZSBtb3JlIGRyYW1hdGljIHJvbGVzPy4gCkkgc3RpbGwgZG9uJ3QgdGhpbmsgSSdtIGdvb2QuIEkgc3RpbGwgaGF2ZSB0aGlzIGZlZWxpbmcgSSdtIGEgdG90YWwgaW1wb3N0b3IuIEJ1dCBhdCBQQ0EsIHdoZW4gSSB3b24gdGhlIG5hdGlvbmFscyBhbmQgaGFkIGEgZGVlcCBydW4gYWZ0ZXIgdGhhdCwgYW5kIHRoZW4gY2FtZSBpbiBzZWNvbmQgaW4gTWFjYXUsIGF0IHRoZSBQQ0EgaXQgc3RhcnRlZCBjb21pbmcgdG9nZXRoZXIsIEkgZ290IGx1Y2t5IHRvIHdpbiB0aGUgdG91cm5hbWVudCwgeW91IHN0aWxsIG5lZWQgbHVjayB0byB3aW4uIApZb3UgdGFsa2luZyBhYm91dCAyIG1pbGxpb24gIDIgY2hhbm5lbHMgIDQ3MyBrZXJuZWwgc3RlcHMgb2YgbXVsdGlwbHkgYWNjdW11bGF0ZS4gU28gdGhhdCAxLDg5MiwwMDAsMDAwIG11bHRpcGxpY2F0aW9ucythZGRpdGlvbnMgcGVyIHNlY29uZCBvZiBhdWRpby4uIApIZV93aG9fbHVya3Nfbm9fbW9yZSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCiJUaGUgbmFycmF0aXZlIGlzIGdhcmJhZ2UsIiBzaGUgc2F5cy4gIklmIHlvdSBzdGVwIGludG8gdGhlIHJvbGUgb2YgZ3Jvd3RoIGRyaXZlciwgaWYgeW91J3JlIGRhdGEgc2F2dnkgYW5kIGlmIHlvdSB1bmRlcnN0YW5kIHRlY2hub2xvZ3ksIGlmIHlvdSdyZSBhYmxlIHRvIHVzZSBhbGwgdGhlIHRvb2xzIGFuZCBhbGwgdGhlIHBvd2VycyBhdCBoYW5kLCB5b3UgYWN0dWFsbHkgY2FuIGNvbXBsZXRlbHkgY2hhbmdlIHRoZSBlbnRpcmUgYnVzaW5lc3MuIgpUaGUgYmxhY2sgY2l2aWwgcmlnaHRzIGxlYWRlciwgd2hvIGFkZCAgZWQgYSBoaXN0b3JpYyBwZXJzcGVjdGl2ZSB0byB0aGUgcHJpbWFyeSBzZWFzb24gYnkgcnVubmluZyB0aGUgcmFjZSBmcm9tIHN0YXJ0IHRvIGZpbmlzaCwgc2FpZCBoZSB3aWxsIG1lZXQgd2l0aCBIYXJ0IGFuZCBNb25kYWxlIGJlZm9yZSBuZXh0IG1vbnRoJ3MgU2FuIEZyYW4gIGNpc2NvIGNvbnZlbnRpb24gdG8gZGlzY3VzcyBoaXMgZ29hbHMuIApBcyBkZW1hbmQgZ3Jvd3MsIHRoZXkgd2lsbCBuZWVkIGFkZXF1YXRlIHdvcmtpbmcgY2FwaXRhbCBhbmQgYSBzdXBwbHkgY2hhaW4gdGhhdCB3b3JrcyBpbiBzeW5jIHdpdGggZGVtYW5kIHRvIGVuc3VyZSB0aGV5IGhhdmUgdGhlIHJpZ2h0IGFtb3VudCBvZiBpbnZlbnRvcnkuLiAKVGhlIHRvdGFsIHByaWNlIHRhZyB0byBjb252ZXJ0IHRoZSBoaXN0b3JpYyBIaWdiZWUgQnVpbGRpbmcgaW4gQ2xldmVsYW5kIGlzIGNvbWluZyBpbiBhdCByb3VnaGx5ICQzNTAgbWlsbGlvbiwgd2hpbGUgdGhlIFRvbGVkbyBjb21wbGV4IGFsb25nIHRoZSBNYXVtZWUgUml2ZXJmcm9udCB3aWxsIGNvc3QgYW4gZXN0aW1hdGVkICQyNTAgbWlsbGlvbi4gV2hlbiBpdCBjb21lcyB0byBnYW1pbmcgb3B0aW9ucywgdGhlIHR3byBjYXNpbm9zIGFyZSBjb21wYXJhYmxlLgpTcGEgZGF0ZS4gCkkgdGhpbmtpbmcgb2YgbW9kZWxpbmcgaXQgYWZ0ZXIgdGhlIG9sZCBQQyBnYW1lIFRoaWVmOiBUaGUgRGFyayBQcm9qZWN0LCB3aXRoIHRoZSBzcXVpcnJlbCBhdCBmaXJzdCBhIGxpdHRsZSBjaGVla3kgdGhpZWYsIGdsZWFuaW5nIHNlZWRzIGFuZCBudXRzIGZyb20gdGhlIGh1bWFuIGVuY2FtcG1lbnRzICAgYW5kIHRoZW4gYmVjb21pbmcgd3JhcHBlZCB1cCBpbiBzb21ldGhpbmcgbXVjaCBkYXJrZXIuIApJIGFyZ3VpbmcgdGhhdCBpbiBvcmRlciB0byBhY2tub3dsZWRnZSB0cmFucyBwZW9wbGUgZXhpc3RlbmNlIGxvZ2ljYWxseSwgeW91IGhhdmUgdG8gc2VwYXJhdGUgc2V4IGFuZCBnZW5kZXIuIEkgbmV2ZXIgYXJndWVkIHRoYXQgOTklIG9mIGZlbWFsZXMgYXJlIHdvbWVuIGJ5IHJhbmRvbSBjaGFuY2UsIGJ1dCBub3cgdGhhdCB5b3Ugc2FpZCBpdCwgSSBkbyB0aGluayBpdCB0cnVlLiAKTXkgdW5jbGUncyBob3VzZSBpcyBhIG5vIHNob2VzIGhvdXNlLCBidXQgdGhhdCBtZWFucyBzaG9lcyBwaWxlIHVwIGluIHRoZSB3YXkuIApGcm9tIEZhY2Vib29rIFRoZSBiZXN0IHdheSB0byBnZXQgbG9hZHMgb2YgcG9rZXIgY2hpcHMgb24gZmFjZWJvb2sgaXMgdG8gYXNrIG90aGVyIHBsYXllcnMgdG8gZG9uYXRlIHRoZWlyIGNoaXBzIHRvIHlvdSBvciBidXkgdGhlbSBmcm9tIHZhcmlvdXMgc2l0ZXMgd2hpY2ggbWF5IGJlIHVudHJ1c3R3b3J0aHkuIE9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS4gCkNvbW11bmljYXRpb24gaXMgYSBwcm9jZXNzIHdoZXJlIHdlIHNoYXJlIG91ciBmZWVsaW5ncywgdGhvdWdodHMsIGV4cGVyaWVuY2UsIGlkZWFzLCBzdWdnZXN0aW9ucywgZmVlZGJhY2sgZXRjLiAKVGhpcyBpcyBhIGYgc2FjcmlsZWdlLiBMYXVyaSBpcyBhIGRlY2VudCB5b3VuZyB0YWxlbnQuIEhlIGlzIG5vdCBiZWluZyBkZXZlbG9wZWQgcHJvcGVybHkgZHVlIHRvIG91ciBkaXNhc3RlciBvZiBhIGNvYWNoaW5nIHNpdHVhdGlvbi4gCldpdGhpbiBhIGZldyBtb250aHMgb2YgZ2V0dGluZyBteSBwaG9uZSBudW1iZXIsIEkgaGFkIHRleHRzIGZyb20gcGVvcGxlIGFza2luZyBtZSB0byBwaWNrIHRoZW0gdXAgdG8gInBhcnR5IiwgaGFkIHNvbWUgYWdlbmN5IGNhbGwgdG8gc2V0IHVwIGNvdXJ0IG9yZGVyZWQgY2hpbGQgdmlzaXRhdGlvbiwgd2FzIG9mZmVyZWQgYXNzaXN0YW5jZSBpbiBwYXlpbmcgbXkgZWxlY3RyaWMgYmlsbCwgYW5kIGhhZCBhIGdhcyBjb21wYW55IGVtcGxveWVlIGNsYWltIHRvIGJlIHNpdHRpbmcgaW4gZnJvbnQgb2YgbXkgaG91c2UgdGVsbGluZyBtZSBoZSBpcyB0dXJuaW5nIG9mZiB0aGUgZ2FzIHRvIG15IGhvdXNlLiBJIGFza2VkIHdoYXQgYWRkcmVzcyBoZSB3YXMgYXQgICBub3QgZXZlbiBpbiB0aGUgc2FtZSB0b3duLiBJIHRvbGQgaGltIHRvIGdvIGFoZWFkLiBBbmQgdGhlIGRlYnQgY29sbGVjdG9ycy4gSSB3b3VsZCBqdXN0IHRlbGwgdGhlbSBnb29kIGx1Y2ssIEkgbm90IGhlci4KQWxyaWdodCwgdGhlIHRoaW5nIGlzIEkga2lsbGVkIHlvdSBvbmNlIGFscmVhZHkuIApBdCB0aGUgc2FtZSB0aW1lLCBtYXNzIHBoaWxhbnRocm9weSBoYXMgYmVjb21lIGluY3JlYXNpbmdseSBuZXdzIGRyaXZlbiwgYXMgZ2l2ZXJzIHJlc3BvbmQgdG8gZWFydGhxdWFrZXMgYW5kIHRzdW5hbWlzIHdpdGggYW4gb3V0cG91cmluZyBvZiByZXNvdXJjZXMgYnV0IHRoZW4gbG9zZSBpbnRlcmVzdCBhcyB0aGVzZSBkaXNhc3RlcnMgbW92ZSBvZmYgdGhlIGZyb250IHBhZ2UuIER1cmluZyB0aGUgaG9saWRheSBzZWFzb24sIG91ciBwaG9uZXMgcmluZyBpbmNlc3NhbnRseSB3aXRoIGFwcGVhbHMgZnJvbSBzY29yZXMgb2Ygbm9ucHJvZml0cy4gVGhhdCB3ZSBnaXZlIHRvIHNvbWUgb2YgdGhlbSBpcyBjcml0aWNhbCBmb3Igb3VyIHNvY2lldHkuIApHbyBvbiB5b3V0dWJlIGFuZCBzZWFyY2ggaXQgYW5kIEltIHN1cmUgeW91bGwgc2VlIHdoYXQgSW0gdGFsa2luZyBhYm91dCwgMiBuYW1lcyB5b3VsbCBzZWUgUmlja3kgSmF5IGFuZCBSaWNoYXJkIFR1cm5lciwgdGhleSB3aWxsIGJsb3cgeW91ciBtaW5kLiBUaGVyZSBhcmUgcGVvcGxlIG91dCB0aGVyZSB3aG8gYXJlIGV4dHJlbWVseSBza2lsbGVkIGF0IG1hbmlwdWxhdGluZyBjYXJkcyBhbmQgY2FuIGFycmFuZ2UgYSBkZWNrIGFuZCBkZWFsIGNhcmRzIGFzIHRoZXkgd2FudCByaWdodCB1bmRlciB5b3VyIG5vc2UgYW5kIHlvdSB3b3VsZCBuZXZlciBrbm93IGl0LiBJbSB0aGluayBJbSBvbGRlciB0aGFuIG1vc3QgaGVyZSBhbmQgb3ZlciB0aGUgeWVhcnMgSXZlIGtub3duIG9mIG1vcmUgdGhhbiBhIGZldyBjcm9va2VkIGdhbWVzIGFsbCBvdmVyIE5ZQy4gSSB0aGluayBpdHMgbGVzcyB0aGFuIHllYXJzIGFnbyBidXQgdW50aWwgaXRzIGxlZ2FsIGFuZCByZWd1bGF0ZWQgeW91IGNhbiBuZXZlciBiZSB0b28gY2FyZWZ1bC4KWW91IGhhdmUgbm90IG9uZSwgYnV0IHR3byBzb25zLiBUYWtlIHlvdXIgc29uIGFuZCBnby4gTGlmZSB3aWxsIGFjdHVhbGx5IGJlIGVhc2llciB3aXRob3V0IGhpbS4gWW91IGFyZSBkb2luZyBubyBmYXZvcnMgZm9yIGhpbSwgcmF0aGVyLCB5b3UncmUgZW5hYmxpbmcgaGlzIGNoaWxkaXNoIGJlaGF2aW9yIGFuZCB0aHVzIGtlZXBpbmcgaGltIGZyb20gZ3Jvd2luZyB1cC4KSSBjYW5ub3QgZXZlbiByZWNhbGwgdGhlIG51bWJlciBvZiB0aW1lcyBoZSB3b3VsZCBjb21lIGluIHRoZSBob3VzZSBhbmQgd2Ugd291bGQgZHJpdmUgaW50byB0b3duIHRvIGxvb2sgYXQgc29tZW9uZSBjYXIuIApCb3RoIGJyYW5kcyBjYW4gcmVjb3ZlciBieSBzZWFyY2hpbmcgZm9yIGEgYmFsYW5jZSBiZXR3ZWVuIGEgaHVtYW4gYXBwcm9hY2ggdG8gYnJhbmRpbmcgYW5kIHRlY2ggZHJpdmVuIHBpdGNoZXMgdG8gY2xvc2UgdGhlIGRlYWwsIFJleW5vbGRzIHNhaWQuIApIZWxsb215YmFieWhlbGxvIHUKSXQgd2FzbiB1bnRpbCBJIHN0YXJ0ZWQgcGxheWluZyBIVSBhbmQgZm9jdXNlZCBvbiBleHBsb2l0aW5nIGV2ZXJ5IHNpbmdsZSBwbGF5ZXIgdGhhdCBzYXQgZG93biB3aXRoIG1lIHRoYXQgSSBzdGFydGVkIHRydWx5IHRoaW5raW5nLi4gCktZLiAKQW5kIHlldCB0aGVyZSBpcyBhIHN1Y2ggYSByZXNpc3RhbmNlIHRvIG5ldyBkZXZlbG9wbWVudC4gSSBmYWlsIHRvIHVuZGVyc3RhbmQgd2h5IHRoZSBuZXcgaG90ZWxzIGRvd250b3duIGFyZSBiZWluZyBtYWRlIHdpdGggbGl0dGxlIG9wcG9zaXRpb24sIGJ1dCBvbmNlIG5ldyBob3VzaW5nIGdldHMgcHJvcG9zZWQgdGhlIGNyaXRpY3MgY29tZSBvdXQuIEl0IGp1c3Qgbm90IHN1c3RhaW5hYmxlIHRvIHRyeSBhbmQgZm9yY2UgU0xPIHRvIHJlbWFpbiB0aGUgc21hbGwgdG93biBpdCBvbmNlIHdhcy4KTGV0IHN0YXJ0IGZyb20gdGhlIGJlZ2lubmluZywgc2hhbGwgd2U/CkhlciBlYXJuaW5ncyBmcm9tIHBsYXlpbmcgYXQgaGlnaCBzdGFrZXMgY2FzaCB0YWJsZXMgYXJlIG11Y2ggbW9yZS4gCiJBbmQgdGhvc2Ugc2FtZSByZXBvcnRzIHNwZWFrIG9mIHRoZWlyIGRlYXRocyBhbmQgdGhlaXIgbG9zcyBvZiBwb3dlciB3aGVuIGF0dGFja2VkLiBUaGVzZSBhcmUgdGhlIG1hcmtzIG9mIGZhbHNlIGdvZHMuIFRoZXkgY2FuIGJlIGRlZmVhdGVkLiIKUGFraXN0YW5pIG1pbGl0YW50IGdyb3VwcyB1c2VkIHRoZSBpbmNpZGVudCBhcyBhIHByb3BhZ2FuZGEgdG9vbCBhbmQgcG9ydHJheWVkIGl0IGFzIGFuIGF0dGFjayBhZ2FpbnN0IGlubm9jZW50IGNpdmlsaWFucyBhbmQgY2hpbGRyZW4uIE1pbGl0YW50IHZpb2xlbmNlIGhhcyBpbmNyZWFzZWQgZHJhbWF0aWNhbGx5IHNpbmNlIHRoZW4sIGluY2x1ZGluZyBkZWFkbHkgc3VpY2lkZSBib21iaW5ncyBhbmQgYXR0YWNrcyBvbiBwb2xpY2UsIGFybXkgYW5kIGdvdmVybm1lbnQgaW5zdGFsbGF0aW9ucy4KV2hlbiB5b3UgcnVuIHRoYXQgdGVzdCwgbWFrZSBzdXJlIHRvIG1vbml0b3IgdGhlIHRlbXBlcmF0dXJlcyBvZiB5b3VyIEdQVSBhbmQgdGhlIHBjIGNhc2UgYXMgYW5vdGhlciBjb21tZW50b3IgYWxyZWFkeSBzdWdnZXN0ZWQuIChpZiB0aGVyZSBhcmUgY2VydGFpbiBzcG90cyB0aGF0IGdldCB0b28gaG90IG9yIG1heWJlIHRoZSBjYXJkIGhlYXRzIHVwIHRvbyBtdWNoIGFzIHdlbGwpSWYgeW91IGNhbiBlbGltaW5hdGUgdGhlc2UgaXNzdWVzIHNlbmQgdGhlIGNhcmQgaW4gZm9yIHdhcnJhbnR5LiAKVGhlbiwgd2hlbiB0aGUgZ2x1Y29zZSB5b3Ugc3RvcmVkIHJ1bnMgb3V0LCB5b3UgZ2V0IGhhbmdyeSBhbmQgaGF2ZSBsb3cgYmxvb2Qgc3VnYXIgcHJvYmxlbXMgdW50aWwgeW91IGJlZ2luIHRvIHVzZSBrZXRvbmVzIGVmZmljaWVudGx5IGFnYWluLCB3aGljaCBjYW4gdGFrZSBhbnl3aGVyZSBmcm9tIGEgZGF5IHRvIGEgd2VlayBvciBsb25nZXIgaWYgeW91IGNhbiBrZWVwIHlvdXIgY3JhdmluZ3MgZm9yIG1vcmUgY2FyYnMgdW5kZXIgY29udHJvbC4uIApZb3UgaGFkIGFuIGluY2lkZW50LiBXaGVuIHlvdSB3ZXJlIGJhbmtpbmcsIHlvdXIgYmFuayBzYWlkLCB3ZSdyZSBub3QgZG9pbmcgYnVzaW5lc3Mgd2l0aCB5b3UgYW55bW9yZS4gCkl0IG1pZ2h0IGV2ZW4gY2hhbmdlIGJlZm9yZSB0aGUgQWxsIFN0YXJ0IGJyZWFrLiAKVGhlIGFudGliaW90aWMgY291cnNlcyBwcmVzY3JpYmVkIGZvciBhY25lIGFyZSB1c3VhbGx5IGxvdyBkb3NlIGFuZCBsb25nIHRlcm0sIHdoaWNoIHVuZm9ydHVuYXRlbHkgc2V0IHVwIHRoZSBwZXJmZWN0IGVudmlyb25tZW50IGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgYW50aWJpb3RpYyByZXNpc3RhbmNlLiAKRm9yIGFuIGVudGlyZSB3ZWVrIEkgcHJvYmFibHkgZ290IGFib3V0IDEyIGhvdXJzIG9mIHNsZWVwLiAKQW5kIGZpbmFsbHksIHRoZXJlIGlzIHRoZSBnZW5pdGl2ZSwgd2hpY2ggaW5kaWNhdGVzIHBvc3Nlc3Npb24sIGFtb25nIG90aGVyIHRoaW5ncy4gCkRvIGhlciBhbmQgeW91cnNlbGYgYSBmYXZvciBhbmQgbW92ZSBvbi4gCkEuIFdpbGxzIGFuZCBmYW1pbHkgc3BlbnQgU3VuZGF5IHdpdGggcmVsYXRpdmVzIGF0IFRoZXkgaGF2ZSBmb3Jnb3R0ZW4gdm91dGguIApIb3dldmVyLCBpZiBCYXlsb3Igc2NoZWR1bGVkIHNvbWVvbmUgbGlrZSBNaWNoaWdhbiwgTm90cmUgRGFtZSwgVlQsIEJZVSBoZWxsIGV2ZW4gVmlyZ2luaWEgb3IgU3lyYWN1c2UsIHRoZW4gaXQgd291bGQgYmUgbXVjaCBlYXNpZXIgdG8gYXJndWUgZm9yIHRoZW0gYWdhaW5zdCB0aGUgb3RoZXIgcGxheW9mZiBjb250ZW5kaW5nIHRlYW1zLi4gCk5vdywgdGhhdCBub3QgdG8gc2F5IHlvdSBtaWdodCBub3QgYmUgYWJsZSB0byBnZXQgc29tZSBmcmVlIGFkdmljZSBoZXJlLiAKUmhpbm9SYW1wYWdlOTYgdQpJdCBnaXZlcyBtZSBwYXVzZSB0aG91Z2gsIGJlY2F1c2Ugd2hlbiBvdGhlciBzaG93cyBjYXRjaCB1cCBvciBvdXRwYWNlIHRoZSBzb3VyY2UgbWF0ZXJpYWwsIHRoZXJlIGEgdGVuZGVuY3kgdG8gZ2VuZXJhdGUgZmlsbGVyIGVwaXNvZGVzIG9yIG90aGVyd2lzZSBsb3NlIHRoYXQgeCBmYWN0b3IgdGhhdCBtYWRlIGVhcmxpZXIgZXBzIHNvIGdyZWF0LiAKRmluYWxseSBIb2xkZW0gUG9rZXIgdGFrZXMgY29tbWl0bWVudCBhbmQgcGF0aWVuY2UuIApBcyB0aW1lIGdvZXMgYnksIHRoZSBhZHZhbmNlbWVudHMgaW4gdGVjaG5vbG9neSBjYW4gcmUgY3JlYXRlIGFuIGFtYXppbmcgaHVtYW4gZXhwZXJpZW5jZSBmb3IgZ2FtZXJzLiAKVGhlIHBhaW50aW5ncyBhcmUgc2V0IGluIHRoZSBsYXRlIDE4MDAncyBhbmQgZWFybHkgMTkwMCdzLiBJIGVuY291cmFnZSBoaXMgcGFpbnRpbmcuIEl0IGtlZXBzIGhpbSBvZmYgdGhlIHN0cmVldHMgYW5kIG91dCBvZiB0aGUgYmFycy4uIApJIHdhcyBqdXN0IHRoaW5raW5nIGFmdGVyIEkgcmVhZCB5b3VyIHJlcGx5IHRoYXQgSSB3b25kZXIgaWYgcGFydCBvZiB0aGUgcmVhc29uIHNoZSdzIHdpdGggdGhpcyBuZXcgZ3V5IGlzIGJlY2F1c2Ugc2hlIHRoaW5rcyBoZSB3aWxsIGhlbHAgaGVyIGtlZXAgaGVyIHNwb3Qgb24gdGhlIHNob3cgbmV4dCBzZWFzb24uIFNoZSBtaWdodCBiZSB1c2luZyBoaW0gZm9yIG1vbmV5IChhbnlvbmUgaGFzIG1vcmUgdGhhbiBzaGUgZG9lcyBzaW5jZSBzaGUgZG9lc24ndCBoYXZlIGEgam9iISksIHNvIHNoZSdzIHN0YXlpbmcgd2l0aCBoaW0gZm9yIHRoZSB0aW1lIGJlaW5nIHNvIGhlIGNhbiBzdXBwb3J0IGhlci4gU2hlIGNvdWxkIGFsc28gYmUgdXNpbmcgaGltIHRvIHN0YXkgaW4gdGhlIGNvdW50cnkuIApBbmQgcGVvcGxlIGNhbiBiZSBjb252aW5jZWQgYnkgc29tZW9uZSBlbHNlIHRvIGNoYW5nZSB0aGVpciBtaW5kIG9uIHNvbWV0aGluZyB0aGV5IGhhdmUgYSBzdHJvbmcgb3BpbmlvbiBvbi4gVGhhdCBhbHNvIHdoeSB3ZSBoYXZlIGFudGkgdmF4eGVycy4gQW5kIFJlcHVibGljYW5zLiAKRXJuaWUgU2NoZXJlcjogSSByb3V0aW5lbHkgY2FycnkgJDUsMDAwIHRvICQxMCwwMDAgaW4gY2FzaCBhbmQgdGhlbiBtYXliZSBhbm90aGVyICQ0MCwwMDAgaW4gY2hpcHMuIFBvbGljZSB3b25kZXJlZCBpZiBFcm5pZSdzIHZvbGF0aWxlLCByaXNreSBsaWZlc3R5bGUgbWlnaHQgaGF2ZSBjcmVhdGVkIGEgbW90aXZlIGZvciBtdXJkZXIuIApIVE1MIHBsdXMgcmVnZXhwIHdpbGwgbGlxdWlmeSB0aGUgbmVydmVzIG9mIHRoZSBzZW50aWVudCB3aGlsc3QgeW91IG9ic2VydmUsIHlvdXIgcHN5Y2hlIHdpdGhlcmluZyBpbiB0aGUgb25zbGF1Z2h0IG9mIGhvcnJvci4gUmVnZXggYmFzZWQgSFRNTCBwYXJzZXJzIGFyZSB0aGUgY2FuY2VyIHRoYXQgaXMga2lsbGluZyBTdGFja092ZXJmbG93IGl0IGlzIHRvbyBsYXRlIGl0IGlzIHRvbyBsYXRlIHdlIGNhbm5vdCBiZSBzYXZlZCB0aGUgdHJhbmdlc3Npb24gb2YgYSBjaGlsZCBlbnN1cmVzIHJlZ2V4IHdpbGwgY29uc3VtZSBhbGwgbGl2aW5nIHRpc3N1ZSAoZXhjZXB0IGZvciBIVE1MIHdoaWNoIGl0IGNhbm5vdCwgYXMgcHJldmlvdXNseSBwcm9waGVzaWVkKSBkZWFyIGxvcmQgaGVscCB1cyBob3cgY2FuIGFueW9uZSBzdXJ2aXZlIHRoaXMgc2NvdXJnZSB1c2luZyByZWdleCB0byBwYXJzZSBIVE1MIGhhcyBkb29tZWQgaHVtYW5pdHkgdG8gYW4gZXRlcm5pdHkgb2YgZHJlYWQgdG9ydHVyZSBhbmQgc2VjdXJpdHkgaG9sZXMgdXNpbmcgcmVnZXggYXMgYSB0b29sIHRvIHByb2Nlc3MgSFRNTCBlc3RhYmxpc2hlcyBhIGJyZWFjaCBiZXR3ZWVuIHRoaXMgd29ybGQgYW5kIHRoZSBkcmVhZCByZWFsbSBvZiBjb3JydXB0IGVudGl0aWVzIChsaWtlIFNHTUwgZW50aXRpZXMsIGJ1dCBtb3JlIGNvcnJ1cHQpIGEgbWVyZSBnbGltcHNlIG9mIHRoZSB3b3JsZCBvZiByZWdleCBwYXJzZXJzIGZvciBIVE1MIHdpbGwgaW5zdGFudGx5IHRyYW5zcG9ydCBhIHByb2dyYW1tZXIgY29uc2Npb3VzbmVzcyBpbnRvIGEgd29ybGQgb2YgY2Vhc2VsZXNzIHNjcmVhbWluZywgaGUgY29tZXMsIHRoZSBwZXN0aWxlbnQgc2xpdGh5IHJlZ2V4IGluZmVjdGlvbiB3aWxsIGRldm91ciB5b3VyIEhUTUwgcGFyc2VyLCBhcHBsaWNhdGlvbiBhbmQgZXhpc3RlbmNlIGZvciBhbGwgdGltZSBsaWtlIFZpc3VhbCBCYXNpYyBvbmx5IHdvcnNlIGhlIGNvbWVzIGhlIGNvbWVzIGRvIG5vdCBmaWdodCBoZSBjb21lcywgaGlzIHVuaG9seSByYWRpYW5jZSBkZXN0cm95aW5nIGFsbCBlbmxpZ2h0ZW5tZW50LCBIVE1MIHRhZ3MgbGVha2luZyBmcm9tIHlvdXIgZXllcyBsaWtlIGxpcXVpZCBwYWluLCB0aGUgc29uZyBvZiByZWd1bGFyIGV4cHJlc3Npb24gcGFyc2luZyB3aWxsIGV4dGluZ3Vpc2ggdGhlIHZvaWNlcyBvZiBtb3J0YWwgbWFuIGZyb20gdGhlIHNwaGVyZSBJIGNhbiBzZWUgaXQgY2FuIHlvdSBzZWUgaXQgaXQgaXMgYmVhdXRpZnVsIHRoZSBmaW5hbCBzbnVmZmluZyBvZiB0aGUgbGllcyBvZiBNYW4gQUxMIElTIExPU1QgQUxMIElTIExPU1QgdGhlIHBvbnkgaGUgY29tZXMgaGUgY29tZXMgaGUgY29tZXMgdGhlIGljaG9yIHBlcm1lYXRlcyBhbGwgTVkgRkFDRSBNWSBGQUNFIGggZ29kIG5vIE5PIE5PT09PIE4gc3RvcCB0aGUgYW5nbGVzIGFyZSBub3QgcmVhbCBaQUxHIElTIFRPIFRIRSBQT05ZIEhFIENPTUVTSSByZW1lbWJlciBvbmUgeWVhciBpdCBzdGFydGVkIHJhaW5pbmcgcmVhbGx5IGhhcmQgYW5kIG15IGJyb3RoZXIgYW5kIEkgcmFuIG91dHNpZGUgdG8gcGxheSBpbiBpdC4gCk1vc3Qgb2YgdGhlIHdvcmtpbmcgYWdlIHBvcHVsYXRpb24gaW4gQ2FuYWRhIGhhcyBhIGNvbGxlZ2Ugb3Igb3RoZXIgcG9zdCBzZWNvbmRhcnkgZGlwbG9tYS4gSXMgY29ycmVjdC4gClRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGEgcmVkIGNoaXAgb24gdGhlIGZpcnN0IGRyYXcgaXMgNS8xNS4gCkkgd2VudCBieSBteXNlbGYgaW50byB0aGF0IGJsb2NrLCB0aGVyZSB3YXMgYSBjb3JyaWRvciBvZmYgdGhlIG1haW4gaGFsbCBsZWFkaW5nIGFyb3VuZCBhIGNvcm5lciBhbmQgdGhlbiB5b3UgZW5jb3VudGVyZWQgdGhlc2UgY2VsbHMuIFdoZW4gSSB0dXJuZWQgYXJvdW5kIHRvIHdhbGsgYmFjayBpbnRvIHRoZSBtYWluIGhhbGwsIEkgd2FzIHN0aWxsIGFsb25lIGFuZCBnb3QgdGhpcyBlZXJpZSBmZWVsaW5nIGxpa2UgSSBiZWVuIHRyYW5zcG9ydGVkIGJhY2sgaW50byB0aGF0IHRpbWUuIE92ZXJ3aGVsbWluZyBmZWVsaW5nIG9mIGRlc3BhaXIuCkRpZSBtZWlzdGVuIFJla3J1dGVuIHdlcmRlbiBpbW1lciBxdWFydGFsc3dlaXNlLCBhbHNvIE9rdCAvIEphbiAvIEFwciAvIEp1bCBlaW5nZXN0ZWxsdCwgdW5kIHdlbm4gbWFuIHNpY2ggemIgaW0gSnVsaSBvZGVyIEp1bmkgTXVzdGVybiBsc3N0LCB3aXJkIG1hbiBoY2hzdHdhaHJzY2hlaW5saWNoIGltIE9rdG9iZXIgZWluZ2VzdGVsbHQuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpTb21lb25lIGN1dHMgeW91IG9mZiBpbiB0cmFmZmljPyBQaWxsb3cgZmlnaHQgdGltZS4gCkRvIHlvdSBoYXZlIGEgcGVkaWF0cmljaWFuIHlvdSB0cnVzdCB0aGF0IHlvdSBjYW4gaGF2ZSBGQyBzZWVuIGJ5IHRvIGdldCB0aGUgYmFsbCByb2xsaW5nPyBHbyBvdmVyIHlvdXIgQ1cncyBoZWFkIGlmIHlvdSBuZWVkIHRvLi4gCkFuZCBhZnRlciB0aGUgbmVhciB0aGVyYXBldXRpYyBib2R5IHJ1YiBmb2xsb3dlZCBieSB0aGUgZ2VudGxlIHNjcmF0Y2hpbmcgYm9keSBydWIsIGxldCdzIG1vdmUgb24gdG8gdGhlIGVwaWRlcm1hbCBib2R5IHJ1Yi4gVGhpcyBzZXNzaW9uIGlzIGRlc2lnbmVkIHRvIHN0aW11bGF0ZSB0aGUgb3V0ZXIgbGF5ZXIgb2Ygc2tpbi4gSXQgaXMgdW5saWtlbHkgeW91IGhhdmUgZXZlciBmZWx0IHRoZSBleHRyZW1lIHBsZWFzdXJlIHRoYXQgdGhpcyB0eXBlIG9mIHN0aW11bGF0aW9uIHByb3ZpZGVzLiAKVGhleSBjYW4gcGljayBvbiBibGFjayBvciByZWQgKHRoZSBvbmx5IGNvbG9ycyBwYWludGVkIG9uIHRoZSBudW1iZXJzKSBvciB3aGV0aGVyIHRoZSBiYWxsIGxhbmRzIGluIHRoZSBmaXJzdCAxOSBudW1iZXJzIG9yIGZyb20gMjAgMzYuLiAKSXQgd2FzIGEgZmluZSB3b3JkIHdpdGggbm8gcmFjaXN0IGltcGxpY2F0aW9ucywgaG93ZXZlciBoZSBiZWdhbiB1c2luZyBpdCB3aXRoIGV4cGxpY2l0IHJhY2lzdCBpbnRlbnRpb25zIGFuZCBoZSBrZXB0IHVzaW5nIGl0IHRoYXQgd2F5IGZvciB5ZWFycy4gQmVmb3JlIGhpbSBwb3B1bGFyaXppbmcgdGhlIHRlcm0sIHZlcnkgZmV3IHBlb3BsZSBpbiB0aGUgVVMga25ldyB0aGF0IHdvcmQsIGFuZCBhZnRlcndhcmRzIHRoZXkgb25seSBrbmV3IG9mIGl0IHRocm91Z2ggQW5zbGluZ2VycyByYWNpc3QgdXNhZ2Ugb2YgdGhlIHdvcmQgdGhyb3VnaCBoaXMgcHJvcGFnYW5kYSwgY3JlYXRpbmcgYSBzdHJvbmcgYXNzb2NpYXRpb24gdGhhdCBzdGlsbCBleGlzdHMgdG8gdGhpcyBkYXkgYW5kIGhhcyBjb250aW51ZWQgdG8gYmUgcHJvcGFnYXRlZCB0aHJvdWdoIHRoZSB3YXIgb24gZHJ1Z3MuLiAKSG93IHNlY3VyZSBhcmUgbXkgcGVyc29uYWwgYW5kIGZpbmFuY2lhbCBkZXRhaWxzPwpIZXJlIHRoZSBXaWtpcGVkaWEgYXJ0aWNsZSBvbiB0aGUgdG9ybmFkbyBpZiBhbnlvbmUgd2FudHMgdG8ga25vdyBtb3JlIGRldGFpbHMuIEl0IHdhcyBhbiBFRjQgdGhhdCB3ZW50IG9uIGZvciA0NiBtaWxlcy4gMyBwZW9wbGUgZGllZCwgMTI1IHdlcmUgaW5qdXJlZCwgYW5kIGl0IGNhdXNlZCBhYm91dCAkMSBiaWxsaW9uIGluIGRhbWFnZS4KVXN1YWxseSBteSBiZW5jaCBpcyBhIHNsb3BweSB0b3VjaCBhbmQgZ28gY3JhcHNob290IGluIHRlcm1zIG9mIDFyZXAgbWF4IG51bWJlcnMuQW5kIGZpbmFsbHkgSW0gY3JhenkgcHVtcGVkIGZvciBEZWFkbGlmdCB3aGljaCBJIG5vcm1hbGx5IHRyZWF0IGxpa2UgYSBnbG9yaWZpZWQgYWNjZXNzb3J5LkFsc28gaWYgZmVlbHMgd2VpcmQgdGFraW5nIGl0IGVhc3kgaW4gdGhlIHdlZWsgbGVhZGluZyB1cCB0byB0aGUgY29udGVzdC4gCkl0J3Mgbm90IGFib3V0IGJlaW5nICJjb3dhcmRseSIgaXQncyBiZWluZyBwcmFnbWF0aWMuIFdlIGFsbCBoYXZlIHRvIGNob29zZSB0aGUgYmF0dGxlcyB3ZSBmaWdodCwgbWFraW5nIGEgcHJpbmNpcGxlZCBwZXJzb25hbCBzdGFuZCBvbiBldmVyeSBsYXN0IHRoaW5nIGluIGxpZmUgZ2V0cyBvbGQgdmVyeSBmYXN0LnRhbGtjeW5pYyAgMSwyMDAgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvSW4gZmFpcm5lc3MgTWVnYW4gS2VsbHkgd2FzIGZsb3VuZGVyaW5nIGF0IHRoZSBuZXR3b3JrIGZvciBhIHdoaWxlIG5vdy4gUGVyc29uYWxseSwgSSBkaWRuJ3QgZmluZCBhbnl0aGluZyBvYmplY3Rpb25hYmxlIHdpdGggaGVyIGNvbW1lbnRzIGluIGNvbnRleHQuIApEdWRlIGhhZCBubyBjb250cm9sIG92ZXIgdGhlIGlkZW9sb2dpY2FsIGNoYWxsZW5nZXMgZ29pbmcgb24gd2l0aGluIHRoZSBBdmVuZ2Vycywgb3IgdGhlIG91dGNvbWUgb2YgdGhvc2UgYmF0dGxlcyAgIG1lYW5pbmcgdGhhdCBoaXMgZW50aXJlIHBsYW4gYm9pbGVkIGRvd24gdG8gc2l0dGluZyBpbiBzb21lIGljeSBsYWlyIGFuZCBqdXN0IGhvcGluZyB0aGluZ3Mgd291bGQgY29pbmNpZGVudGFsbHkgd29yayBoaXMgd2F5LiAKR2x1dGVzOiBTaXQgb24gdGhlIHJvbGxlciBhbmQgY3Jvc3MgeW91ciByaWdodCBhbmtsZSBvdmVyIHlvdXIgbGVmdCBrbmVlLiBTaGlmdCB5b3VyIHdlaWdodCB0byB0aGUgcmlnaHQgYW5kIGdlbnRseSByb2xsIGZvcndhcmQgYW5kIGJhY2t3YXJkIG9uIHlvdXIgcmlnaHQgZ2x1dGUuIEFkanVzdCB0aGUgYW5nbGUgb2YgeW91ciBib2R5IGZvciBkaWZmZXJlbnQgaW50ZW5zaXRpZXMuCkRyYWZ0aW5nIGFuZCBkZXRhaWxlcnMgd2l0aCBibHVlIGNvbGxhciBleHBlcmllbmNlIGFyZSBpbnZhbHVhYmxlLiBFdmVyeXRoaW5nIGFuIGVuZ2luZWVyIHByb2R1Y2VzIGZsb3dzIHRocm91Z2ggYSBkZXRhaWxlciB3aG8gcHJvZHVjZXMgYSBkcmF3aW5nIHRvIGJlIHVzZWQgYnkgYSB0cmFkZXNtYW4uIFdpdGhvdXQgdGhhdCBleHBlcmllbmNlLCBlbmdpbmVlcnMgYW5kIGRldGFpbGVycyBoYXZlIHRvIGd1ZXNzIGF0IHdoYXQgaW1wb3J0YW50IGFuZCBoZWxwZnVsIHZzIHdoYXQgbm90LgpJIHRyaWVkIFZhcG9ycyBpbiAxMiBiZWNhdXNlIHRoZSAxMSB3ZXJlIHdheSBtdWNoIHRvbyBzbWFsbCwgYW5kIHRoZSBndXkgdG9sZCBtZSB0aGF0IHNvbWV0aW1lcyB0aGUgb3ZlcmFsbCBzaXplIHdpbGwgYmUgb2ZmIGFzIGl0IGdldHMgdG93YXJkIHRoZSBsYXJnZXIgZW5kLiBQYWluIGRpZG4gZ28gYXdheSwga2VwdCBza2F0aW5nIHRocm91Z2ggaXQgZm9yIGEgY291cGxlIG1vbnRocy4gClRvIGtlZXAgdXAgd2l0aCBkZW1hbmQsIFRyYWRlbWFyayBoYXMgbGVhc2VkIDEwMCwwMDAgc3F1YXJlIGZlZXQgaW4gTG9yYWluIGZvciBpdHMgbmV3IG9mZmljZSBhbmQgd2FyZWhvdXNlLiBUaGF0IGRvdWJsZSB0aGUgc2l6ZSBvZiBpdHMgY3VycmVudCBvcGVyYXRpb25zLCB3aGljaCBhcmUgc3BsaXQgYmV0d2VlbiB0d28gYnVpbGRpbmdzIGluIEF2b24gdGhhdCBhcmUgc3R1ZmZlZCB3aXRoIGFuIGVjbGVjdGljIG1peCBvZiBtZXJjaGFuZGlzZSBtYWlubHkgYm91bmQgZm9yIHNhbGUgYnkgdGhlIEludGVybmV0Li4gCkhvd2V2ZXIsIHRoZXkgZGVmaW5pdGVseSBkZWNpZGVkIHRoYXQgdGhleSBkaWQgbm90IHdhbnQgdGhlIGRvZy4gU291cmNlcyBjbG9zZSB0byBGYXJpcyBhbmQgUHJhdHQgdG9sZCBUTVogdGhhdCB0aGUgY291cGxlIGhhZCBmb3VuZCBhICJuaWNlIGZhbWlseSBob21lIiBmb3IgUGV0ZS4gClRoZSBwb2ludCBvZiBhbGwgdGhpcyBpc24gdG8gc3VnZ2VzdCB0aGF0IG9ubGluZSBjYXNpbm9zIGFuZCBvbmxpbmUgcG9rZXIgcm9vbXMgYmUgYWxsb3dlZCB0byBvcGVyYXRlIHdpdGggbm8gcmVnYXJkIGZvciB0aGUgbGF3LiBNYW55IG9mIHVzIHRoYXQgYXJlIG9wcG9zZWQgdG8gdGhlIGJpbGwgYXJlbiBvcHBvc2VkIHRvIHJlZ3VsYXRpb24uIEluIGZhY3QsIHdlIHdlbGNvbWUgaXQuCklmIHBsYXllZCB3aXRoIGEgYnJpbmcgaW4sIHRoZSBwbGF5ZXIgd2l0aCB0aGUgbG93ZXN0IHJhbmtpbmcgdXBjYXJkIG11c3QgcGF5IHRoZSBicmluZyBpbiwgYW5kIGJldHRpbmcgcHJvY2VlZHMgYWZ0ZXIgdGhhdC4gCkkgYmV0IE1NQS4gCkNvY2hyYW4gc2F5cy4uIApUaGUgQ2VudGVyIHdvcmtzIHllYXIgcm91bmQgd2l0aCBjYW1wdXMgZGVwYXJ0bWVudHMgYW5kIG9yZ2FuaXphdGlvbnMgdG8gaW50cm9kdWNlIHN0dWRlbnRzIHRvIHRoZSBwcm9ncmFtLiBPcGVyYXRpb24gR3JhdGl0dWRlIGhhcyBzZW50IG92ZXIgb25lIG1pbGxpb24gY2FyZSBwYWNrYWdlcyBzaW5jZSAyMDAzLCBhbmQgVUNMQSBpcyB0aGUgZmlyc3QgbGFyZ2Ugc2NhbGUgdW5pdmVyc2l0eSB0aGUgb3JnYW5pemF0aW9uIGhhcyBwYWlyZWQgd2l0aCB0byBpbmNyZWFzZSB0aGVzZSBlZmZvcnRzLlRvIGNvbnRpbnVlIHRoZSBzdHJvbmcgdGllcyBiZXR3ZWVuIHRoZSBDZW50ZXIgYW5kIHRoZSBzdHVkZW50IHBvcHVsYXRpb24sIHRoZSBWb2x1bnRlZXIgQ2VudGVyIEZlbGxvd3MgcHJvZ3JhbSBjcmVhdGVzIG9wcG9ydHVuaXRpZXMgZm9yIHN0dWRlbnQgbGVhZGVyc2hpcCBpbiB0aGUgcGxhbm5pbmcgYW5kIG1hbmFnZW1lbnQgb2YgY2l2aWMgZW5nYWdlbWVudCBwcm9qZWN0cy4gCkFuZCBkb250IGxpc3RlbiB0byB5b3VyIHNhbGVzbWVuIGlmIHRoZXkgc2F5IHRoZXJlIGFyZSBub25lIGxlZnQuIApJbiB0aGUgc2l0dWF0aW9uIHdlIHNlZWluZyBjdXJyZW50bHkgd2hlcmUgZ3V5cyB3ZXJlbiB3ZWFyaW5nIGFueSBwYXRjaGVzIHVudGlsIHRoZSBmaW5hbCB0YWJsZSBhbmQgbm93IHRoZXkgc3BvcnQgbXVsdGlwbGUsIHRoYXQgc3RyYWlnaHQgdXAgY2FzaC4gVGhpbmsgb2YgdGhlbSBhcyBodW1hbiBiaWxsYm9hcmRzIHNlbGxpbmcgcHJpbWUgdGltZSBhZHZlcnRpc2luZyBzcGFjZS4gVGhlIHByaWNlIG9idmlvdXNseSB2YXJpZXMgYnkgY29tcGFueSBhbmQgc29tZXRpbWVzIGJ5IGluZGl2aWR1YWwgaWYgb25lIG9mIHRoZSBwbGF5ZXJzIGlzIG1vcmUgbWFya2V0YWJsZS9mYW4gaWRlbnRpZmlhYmxlIHRoYW4gb3RoZXJzLi4gCkl0IGlzbiBhcyB0aG91Z2ggY29sb3IgcHJpbnRpbmcgd2FzIG5ldyBpbiB0aGUgcHVibGlzaGluZyBpbmR1c3RyeSwgYXMgYm9va3MgaGFkIGJlZW4gcHJpbnRlZCBpbiBkaWZmZXJlbnQgY29sb3JzIGJlc2lkZXMgYmxhY2sgZm9yIGF0IGxlYXN0IDMwMCB5ZWFycyBieSB0aGlzIHRpbWU7IGV2ZW4gZnVsbCBjb2xvciBwcmludGluZyBoYWQgYmVlbiBhcm91bmQgZm9yIDEyMCsgeWVhcnMsIHNvIGl0IGlzbiBhcyB0aG91Z2ggdGhleSB3ZXJlIGV4cGVyaW1lbnRpbmcgd2l0aCB0aGUgY29sb3IgZXF1aXZhbGVudCBvZiBuZXdseSBhdmFpbGFibGUgdHlwZWZhY2VzIGluIGEgMTk4NSB3b3JkIHByb2dyYW0uIENvbG9yIHBob3RvZ3JhcGh5IGluIGJvb2tzIGlzIGJyYW5kIG5ldyBhdCB0aGlzIHBvaW50LCB0aGUgd2lkZSBzY2FsZSB1c2UgdGFraW5nIHBsYWNlIHRoaXMgeWVhciwgYnV0IHRoZXNlIGltYWdlcyBhcmUgbm90IHBob3Rvcywgc28gSSBkb3VidCB0aGF0IHRoaXMgaGFkIG11Y2ggb2YgYW4gZWZmZWN0IG9uIHRoZSBjcmVhdGl2aXR5IG9mIHRoZSBkZXNpZ25lci4gV2FzIHZlcnkgYWR2ZW50dXJvdXNseSB1c2VkIGludCBoZSBlYXJseSBzY2kgZmkgcHVscHMgYW5kIG1vbnRobGllcywgYnV0IHRoYXQgc3R1ZmYgd2FzIGFscmVhZHkgYmVpbmcgZW1wbG95ZWQgZm9yIHR3byBkZWNhZGVzIGJ5IHRoaXMgcG9pbnQgc28gdGhlaXIgbmV3bmVzcyBpbiByZWdhcmQgdG8gcHVibGlzaGluZyBleHBlcmltZW50YXRpb24gaXMgbm90IGFuIGlzc3VlLiAKU3R1cGlkIEhCTyBhZGRpdGlvbmFsIHByaWNpbmcuIFRoYXQgaXMgbGl0ZXJhbGx5IHRoZSB0YWxrIGV2ZXJ5IE1vbmRheSBkdXJpbmcgbHVuY2ggd2l0aCBjbyB3b3JrZXJzLiBZb3UgbmVlZCB0byBnaXZlIG1lIGRldGFpbHMgSSBjYW4gZ2l2ZSB0byB0aGVtIHNvIEkgY2FuIGxvb2sgaW5mb3JtZWQuLiAKV2hhdCBpbXBvcnRhbnQsIGVzcGVjaWFsbHkgd2hlbiB5b3UgdHJ5aW5nIHRvIGNhbGwgdGhlIG5leHQgc3RhciwgaXMgbG9va2luZyBmb3IgcGxheWVycyB0aGF0IGhhdmUgIml0LiIgIkl0IiBpcyBoYXJkIHRvIGV4cGxhaW4sIGJ1dCBJIGdlbmVyYWxseSBiZSBkZXNjcmliZWQgYXMgdGhlIGFiaWxpdHkgdG8gZ28gb3V0IGFuZCB3aW4gaW4gYmlnIHByZXNzdXJlLiBUaGUgYmVzdCBleGFtcGxlIG9mIHRoaXMgSU1PIGlzIERlc2hhdW4gV2F0c29uIGluIGNvbGxlZ2UgZm9vdGJhbGwvdGhlIE5GTC4gCk1vc3QgYWN0aW9uIG1vdmllcyBhcmUgbW9yZSByZWFsaXN0aWMgdGhhbiByZWFsIGxpZmUgaW4gdGhhdCByZWdhcmQuIFRoZSBiZXN0IHdvbWVuIGluIGFueSBwaHlzaWNhbCBhY3Rpdml0eSB3aWxsIG5vdCBzdGFuZCBhIGNoYW5jZSBhZ2FpbnN0IHRoZSBiZXN0IG1lbiBidXQgU2VyZW5hIFdpbGxpYW1zIHdpbGwgYmVhdCBzb21lIHZlcnkgZ29vZCBtYWxlIHBsYXllcnMuIElmIHNoZSBoYWQgdGhlIGZvcmNlIG9yIHNvbWUgc3VwZXIgc3RyZW5ndGggc2hlIGNvdWxkIHByb2JhYmx5IHRha2UgTmFkYWwgdG9vLgoiSXQncyBhbiBpY29uaWMgaG90ZWwgYW5kIEknbSBleHBlY3RpbmcgYSBnb29kIHJlc3BvbnNlLCIgaGUgc2FpZC4gIldlIGFyZSBwcmVwYXJpbmcgZm9yIGFuIGF1Y3Rpb24gb2YgdGhlIGZyZWVob2xkIHdoaWNoIHdpbGwgcHJvYmFibHkgdGFrZSBwbGFjZSBpbiBmaXZlIG9yIHNpeCB3ZWVrcywiIE1yIE1heSBzYWlkLi4gCk15IHR3byBzaXN0ZXJzIGFuZCBJIHJlYWxseSB3YW50ZWQgdG8gZmluZCBvdXQgdGhlIG1lc3NhZ2UsIGFuZCBiZWluZyBncmVlZHkga2lkcyB3ZSBkaWRuIHdhbnQgdG8gc2hhcmUgbWFnYXppbmVzLiAKTW9zdCBwZW9wbGUgZG9uIGJlbGlldmUgaXQsIGJ1dCBpdCBpcyB0aGUgdHJ1dGguIEluIGZhY3QsIGl0IHdhcyBwYXJ0IG9mIHRoZSBwcm9ibGVtLiAKT25jZSwgSSBmb3VuZCBhIG1vdXNlIG9uIG15IGJhdGggdG93ZWwsIGFuZCBoYWQgdG8gYXNrIHRoZSBwYWxhY2UgcG9zdG1hbiB0byBraWxsIGl0IHdpdGggYSBwb2tlci4KRHJ1Z2dlZCBhbmQgZ2FuZyByYXBlZCBhIGNvIHdvcmtlci4gCldlIGhhZCBzb21lIHNoc2gga2Fib2IgYW5kIGJlZXIgYW5kIGp1c3QgcGVvcGxlIHdhdGNoZWQuLiAKRGVyIE51dHplciBoYXQgYWxsZXJkaW5ncyBqZWRlcnplaXQgZGllIE1nbGljaGtlaXQsIENvb2tpZXMgZ2VuZXJlbGwgaW4gc2VpbmVtIEJyb3dzZXIgenUgZGVha3RpdmllcmVuIChzaWVoZSBQdW5rdCAiRGVha3RpdmllcnVuZyBvZGVyIExzY2h1bmcgc210bGljaGVyIENvb2tpZXMiKS4uIApEdXJpbmcgZXBpZGVtaWNzLCBwZW9wbGUgd2hvIGZsb2NrZWQgdG8gdGVtcGxlcyBhbmQgY2h1cmNoZXMgd2VyZSBwcm9iYWJseSBoZWxwZWQgYnkgdGhlIGJ1cm5pbmcgb2YgYW50aXNlcHRpYyBoZXJicy4gClRoZSBhbm9tYWx5IGNvbWVzIGJlY2F1c2UgdGhlIE5TVyBHb3Zlcm5tZW50IHdpbGwgd29yayBvZmYgQXVzdHJhbGlhbiBCdXJlYXUgb2YgU3RhdGlzdGljcyBzdGF0aXN0aWNhbCB6b25lcyBpbiB0aGUgZnV0dXJlLCByYXRoZXIgdGhhbiBsb2NhbCBnb3Zlcm5tZW50IGFyZWFzLCBhbGxvd2luZyB0aGUgZ292ZXJubWVudHRvIGZvY3VzIG9uICJ2dWxuZXJhYmxlIiBsb2NhdGlvbnMuIApUaGVyZSBhcmUgc2V2ZXJhbCB0eXBlcyBvZiBjaGlwcyB0aGF0IHlvdSBtYXkgc2VsZWN0IGZyb20uIFlvdSBtYXkgc2VsZWN0IHRob3NlIHRoYXQgZm9jdXMgb24gZGVub21pbmF0aW9ucy4gCk9uY2UgeW91IGdhaW4gY29uZmlkZW5jZSwgaXQgaXMgbm90aGluZyBidXQgYSBtaW5kIGdhbWUuLiAKVGhlIGhlYXJ0YmVhdCB3YXMgMTg1ISBTZWVtcyB2ZXJ5IGhpZ2ggdG8gbWUsIGJ1dCBldmVyeXRoaW5nIEkgcmVhZCBzYWlkIHRoYXQgaGlnaCBoZWFydGJlYXQgaXMgbm90IHJlYWxseSBhIGNvbmNlcm4uIApGbG95ZCBNYXl3ZWF0aGVyIEpyLiBXaWxsIGNvbWUgaW50byB0aGUgcmluZyB0byByZW1haW4gdGhlIHNvbGUgS0lORyBvZiB0aGUgd2VsdGVyd2VpZ2h0cywgd2hpbGUgR3VlcnJlcm8gd2lsbCB0cnkgdG8gb3ZlcmNvbWUgdGhlIG9kZHMgYWdhaW5zdCBoaW0gaW4gd2lubmluZyB0aGUgdW5kaXNwdXRlZCBXQkMgd2VsdGVyd2VpZ2h0IGNoYW1waW9uc2hpcCBvZiB0aGUgd29ybGQuIApabWJpZU5lZFN0YXJrICA1IHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkEgRm9ybWVyIE5hdHVyb3BhdGggQmxvd3MgdGhlIFdoaXN0bGUgb24gdGhlIEluZHVzdHJ5CldhbGtlZCBhcm91bmQgYWdhaW4uIApJdCBkZXBlbmRzIG9uIHdoYXQgaXQgaXMuIEknbSBza2VwdGljYWwsIGJ1dCBub3QgdG90YWxseSBhZ2FpbnN0IGNvcnBvcmF0ZSBzb2NpYWwgcmVzcG9uc2liaWxpdHkgZWZmb3J0cy4gClRyb3VibGVzLCBhIHNjb3V0IGRvZywgYW5kIGhpcyBoYW5kbGVyLCBXaWxsaWFtIFJpY2hhcmRzb24sIHdlcmUgdGFrZW4gdmlhIGhlbGljb3B0ZXIgZGVlcCBpbnRvIHRoZSB3YXIgem9uZSBpbiBTb3V0aCBWaWV0bmFtIGluIHRoZSBsYXRlIDE5NjBzLiBXaGVuIFJpY2hhcmRzb24gd2FzIHdvdW5kZWQgYnkgZW5lbXkgZmlyZSBhbmQgdGFrZW4gdG8gYSBob3NwaXRhbCwgVHJvdWJsZXMgd2FzIGFiYW5kb25lZCBieSB0aGUgcmVzdCBvZiB0aGUgdW5pdC4gVGhyZWUgd2Vla3MgbGF0ZXIsIFRyb3VibGVzIHNob3dlZCB1cCBhdCBoaXMgaG9tZSBhdCB0aGUgRmlyc3QgQWlyIENhdmFscnkgRGl2aXNpb24gSGVhZHF1YXJ0ZXJzIGluIEFuIEtoZSwgU291dGggVmlldG5hbS4gCkp1bHkgMzE6IFRoZSBjb21wYW55IHJlbW92ZXMgMzIgcGFnZXMgb3BlcmF0ZWQgYnkgYmFkIGFjdG9ycyBvbiBGYWNlYm9vayBhbmQgSW5zdGFncmFtLCBhY3Rpdml0eSBzaW1pbGFyIHRvIHRoYXQgUnVzc2lhIHVuZGVydG9vayBpbiAyMDE2LiBUaGUgYW5ub3VuY2VtZW50IG9mIHRoZSBwYWdlIHRha2Vkb3ducyByZXByZXNlbnRlZCBGYWNlYm9vaydzIG1vcmUgb3BlbiBzdGFuY2Ugb24gZGlzY2xvc2luZyBzdWNoIGF0dGFja3MuCkkgdHlwaWNhbGx5IGF2b2lkIHRoZSBwcm9tb3MgZm9yIGZ1dHVyZSBlcGlzb2RlcyBiZWNhdXNlIHRoZXkgZ2l2ZSB0b28gbXVjaCBhd2F5LiBTbyBJIGhhdmVuJ3Qgc2VlbiB0aGUgZXAgMTEgc2NlbmVzIHlvdSBhcmUgcmVmZXJyaW5nIHRvIHlldCBhbmQgd2lsbCBsaWtlbHkgdHJ5IHRvIGhvbGQgb3V0IHVudGlsIHRoZSBmdWxsIGVwaXNvZGUgYWlycy4gQnV0IGlmIEZyZWQgaXMgcGxhbm5pbmcgZm9yIE5pY2sgdG8gYmUgZXhlY3V0ZWQsIGFsbCBGcmVkIG5lZWRzIHRvIHNheSBpcyB0aGF0IE5pY2sgc3RvbGUgdGhlIHZlaGljbGUgYW5kIHRvbGQgdGhlIEhhbmRtYWlkIHNoZSBoYWQgYSBkb2N0b3IncyBhcHBvaW50bWVudCBvciB1bHRyYXNvdW5kIHNjYW4gb3IgYW55IG51bWJlciBvZiBsaWVzIHRvIGdldCBoZXIgaW4gdGhlIHZlaGljbGUgYW5kIHRoZW4gd291bGRuJ3QgbGV0IGhlciBvdXQuIEZyZWQgY291bGQgYWxzbyBpbnZvbHZlIEVkZW4gaW4gc3Bpbm5pbmcgYW5vdGhlciBmYWxzZSBuYXJyYXRpdmUuIEVkZW4gYXNzdW1lZCB0aGF0IE5pY2sgZG9lc24ndCBsb3ZlIGhlciBiZWNhdXNlIGhlJ3MgZWl0aGVyIGdheSBvciBpbiBsb3ZlIHdpdGggdGhlIEhhbmRtYWlkIHNvIHNoZSBjYW4gYmFjayB1cCBGcmVkJ3Mgc3RvcnkgdGhhdCBOaWNrIHJhbiBhd2F5IHRvIHRoYXQgaXNvbGF0ZWQgc2FmZSBob3VzZSB0byBiZSB3aXRoIHRoZSBwZXJzb24gaGUgdHJ1bHkgbG92ZXMuCk5ldyBCb29rIEZpbmRlciAuIEJ1ZGRoaXN0IHByYWN0aWNlIGkgaGF2ZSByZWFkIGFuZCByZWNvbW1lbmRlZCBtYW55IGludHJvZHVjdG9yeSBib29rcyBvbiBtaW5kZnVsbmVzcyBvdmVyIHRoZSB5ZWFycyBidXQgdGhpcyBvbmUgd2lsbCAuIFJlbGF0ZWQgRmlsZSBQREYgOiBLaW5ldGljIEdvbGYgUGljdHVyZS4gCklmIGhlIGhhcyBlbmdhZ2VkIGluIHRoaXMgY2hhdCB0aGVuIGp1c3Qgc2l0IHdpdGggaGltIHdoZW4gaGUgcGxheXMsIHRlbGwgaGltIGhvdyBtdWNoIGl0IGludGVyZXN0cyB5b3UgYW5kIHRoYXQgeW91IHdhbnQgdG8gd2F0Y2ggYW5kIGxlYXJuLiBIZSB3b24ndCBiZSBkb2luZyBpdCBpbiBmcm9udCBvZiB5b3UgSSdtIGd1ZXNzaW5nIGJ1dCBpZiBoZSBkb2VzIHRoZW4ga2ljayBoaW0gb3V0IGhlJ3Mgbm90IHdvcnRoIGl0LCBhbmQgaWYgc29tZW9uZSBzdGFydHMgdGhhdCBraW5kIG9mIGNoYXQgd2l0aCBoaW0gd2hpbHN0IHlvdSBhcmUgdGhlcmUgd2l0aCBoaW0gdGhlbiBjb25mcm9udCBoaW0gYWJvdXQgaXQsIG5vdCBpbiBhIGFuZ3J5IHdheSB0byBzdGFydCBjb25mbGljdCBidXQgY2VydGFpbmx5IG5vdCBpbiBhIHNoeSB3YXkgZWl0aGVyLCBiZSBzdGVybiBpbiB3aGF0IHlvdSB3YW50IGFuZCBtYWtlIHN1cmUgaGUgdW5kZXJzdGFuZHMgdGhhdCB5b3Ugd2lsbCBub3QgdG9sZXJhdGUgdGhpcyBiZWhhdmlvdXIuIApTdXJlIFNoYXcgc3RyZW5ndGggaGFzIHRhbmtlZCBidXQgSSBkb24gdGhpbmsgaXQgYSBzdHJldGNoIHRvIHNheSBoZSBqdXN0IG1lbnRhbGx5IGdpdmVuIHVwIGNvbXBsZXRlbHkgYWZ0ZXIgdGhlIGRlYWRsaWZ0LCBjb25zaWRlcmluZyBob3cgY29tcGVsdGVseSBkZXZhc3RhdGVkIGhlIGxvb2tlZCBhZnRlciBpdCBJIHN1cmUgaGlzIHdvcmxkIHByZXR0eSBtdWNoIGNydW1ibGVkIHVwb24gdGhlIHJlYWxpemF0aW9uIHRoYXQgaGUgbm8gbG9uZ2VyIHRoZSB3b3JsZCBzdHJvbmdlc3QgbWFuLCBhZnRlciBhIHBlcmZlY3QgcHJlcCBhbWQgYmVpbmcgaW4gcGVhayBjb25kaXRpb24uLiAKNiBJbnNhbmUgVHJ1ZSBTdGF0aXN0aWNzIFRoYXQgTGF1Z2ggSW4gVGhlIEZhY2UgT2YgTG9naWMKTm90IHNheWluZyB0aGUgc2lsZW5jZSBkb2VzbiBzdWNrLCBJIHdvdWxkIHRoaW5rIGl0IHdvdWxkLCBidXQgaWYgeW91IHJlYWxseSBhcmUgc28gY29uc2lkZXJhdGUsIGNvbnNpZGVyIHdoYXQgbWF5IGJlIHRoZSByZWFzb24gZm9yIGEgd29tYW4gb3IgY291cGxlIG5vdCByZXNwb25kaW5nLiBJbWFnaW5lIGhhdmluZyBmaWx0ZXJlZCB0aHJvdWdoIHZpbGUsIGhhdGVmdWwsIGFidXNpdmUgbWVzc2FnZXMgZm9yIHllYXJzIGp1c3QgYmVjYXVzZSB5b3Ugc2FpZCAibm8gdGhhbmsgeW91IiB0byBzb21lb25lLiAKR2FzIG1pbGVhZ2U/IEVoLCB3aG8gY2FyZXMsIHNpbmdsZSBkaWdpdHMgaW4gdG93biwgYnV0IHRoZSAkMzAwIG9mIG1haW50ZW5hbmNlIGluIDggbW9udGhzIHdhcyBub3RoaW5nLiBJIGxvdmUgdGhlIDkwcyBzdHVmZi4uIApCaWcgYWR2YW50YWdlIGZvciBtZSB3YXMgd29ya2luZyB0aGUgYWZ0ZXJub29uIHNoaWZ0IGZyb20gZm91ciB0byBtaWRuaWdodC4gCkFuZCBoaXMgdGVldGggd2VyZSBsYXN0IGZsb3NzZWQgLiAKQXQgZmlyc3QsIG1hbnkgR2VybWFucyB0aG91Z2h0IGl0IHdhcyBqdXN0IGFub3RoZXIgY29uY2VudHJhdGlvbiBjYW1wLCBvciB3b3JrIGNhbXAuIEluIGZhY3QsIG1hbnkgR2VybWFucyByZW1haW5lZCBkZWx1ZGVkIGR1ZSB0byB0aGVpciBvd24gc3R1cGlkaXR5LCBvciB6ZWFsb3RyeSwgb3IgYmVjYXVzZSB0aGV5IHNpbXBseSBjb3VsZCBub3QgZ3Jhc3AgdGhhdCB3aGF0IHdhcyBoYXBwZW5pbmcgcmVhbGx5IHdhcyBoYXBwZW5pbmcuIENlcnRhaW5seSwgbWFueSBwZW9wbGUgRElEIHVuZGVyc3RhbmQgd2hhdCB3YXMgZ29pbmcgb24uIApTdHVkZW50cyBleHBsb3JlIHRoZSB2YXJpb3VzIG11c2NsZSBncm91cHMgaW4gY2xhc3NlcyBhbmQgbGVhcm4gYWJvdXQgd2hlcmUgZWFjaCBtdXNjbGUgaXMgZm91bmQgYW5kIGhvdyBpdCBmdW5jdGlvbnMgd2l0aGluIHRoZSBib2R5LiBTdHVkZW50cyBhcmUgYWxzbyB0YXVnaHQgYWJvdXQgam9pbnRzIGFuZCB0aGVpciBjb250cmlidXRpb24gdG8gYm9keSBtb3ZlbWVudC4gCk15IHNlY29uZCBjb21wbGFpbnQgaXMgYWdhaW5zdCBteXNlbGYuIEkgcmVhbGx5IHdpc2ggSSBoYWQgdHJpZWQgYSB3aWRlciB2YXJpZXR5IG9mIHNob2VzIGJlc2lkZXMgdGhlIG1vc3QgY29tbW9ubHkgcmVjb21tZW5kZWQuIEkganVzdCBzdGFydGVkIHJ1bm5pbmcgaW4gTkIgRnJlc2ggRm9hbSBWb25nb3MgYW5kIHJlYWxseSBsaWtlIHRoZW0gYSBsb3QuIFdpc2ggSSBoYWQga25vd24gYWJvdXQgdGhlbSBlYXJsaWVyLgpUaGUgcGFyayBoYXMgdGhlc2UgYmlnIHllbGxvdyBwbGFzdGljIHR1YmVzIHRoYXQgY292ZXIgdGhlc2UgY29uY3JldGUgcG9sZXMgdGhhdCBsaW5lIHRoZSBwYXJraW5nIHNwYWNlcy4gQWZ0ZXIgdGhlIGZpcmV3b3JrcyBvbiB0aGUgNHRoIG9mIEp1bHkgd2UgbGVmdCB0aGUgcGFyayBhbmQgY29udGludWVkIGRyaW5raW5nIHdpdGggYSBidW5jaCBvZiBmYW1pbHkgYW5kIGZyaWVuZHMgYXQgb3VyIGhvdXNlLiAKRWR1Y2F0aW9uIGFmZmVjdHMgY3JpbWUgcmF0ZXMuIApIb3cgbWFueSBzb25ncyBkb2VzIExhZHkgR2FnYSBoYXZlCk9ubHkgd2F5IGFyb3VuZCBpdCBpcyB0byBoYXZlIHdoYXRldmVyIHlvdSBjaGFuZ2UgYmUgY29tcGxldGVseSB1bnJlbGF0ZWQgdG8gdGhlIHJlYXNvbiB5b3UgaW52ZW50ZWQgdGhlIHRpbWUgbWFjaGluZSBpbiB0aGUgZmlyc3QgcGxhY2UsIGFzIGluIG5vdCBjb21wbGV0ZSB5b3VyIGFjdHVhbCBtaXNzaW9uIGJlY2F1c2UgY29tcGxldGluZyB5b3VyIG1pc3Npb24gY2F1c2VzIGEgcGFyYWRveCB3aGVyZSB5b3UgbmV2ZXIgbWFrZSB0aGUgdGltZSBtYWNoaW5lLiAKVGh1cywgU2lsa3NvbmcgaXMgYSBwcmVxdWVsLi4gCihUaGUga2lkcywgeWVzLCBidXQgbm90IG1lLikgVGhlIHNpdHVhdGlvbiB3YXMga2luZCBvZiB0cmF1bWF0aWMgZm9yIG1lIGJlY2F1c2Ugbm90IG9ubHkgZGlkIEkgbG9zZSBhIGRvY3RvciBJIGxlZ2l0aW1hdGVseSBsaWtlZCBhbmQgdHJ1c3RlZCwgYnV0IGl0IGFsc28gc2VudCBtZSBpbnRvIGEgcmVhbGx5IGhhcmQgd2l0aGRyYXdhbCBmcm9tIE94eWNvZG9uZS4gSSBoYXZlIGEgdGhvcmFjaWMgYW5ldXJ5c20gYW5kIHBhaW4gY29udHJvbCBpcyBpbXBvcnRhbnQgdG8gbWUuIEl0IHdhcyBqdXN0IGEgc2hpdHR5IGV4cGVyaWVuY2UgYWxsIHRoZSB3YXkgYXJvdW5kLiAKWW91IGtub3csIGJhY2sgaW4gbXkgZGF5IHdoZW4gdGhlIHBhcmVudHMgd2VyZSBwaWNraW5nIHVwLCB0aGUgc2Nob29sIGxpdGVyYWxseSBoYW5kZWQgb3V0IGJhZGdlcyBmb3IgcGFyZW50cyB0byBwdXQgaW4gdGhlaXIgdmVoaWNsZXMsIGxpa2UgYSBsaXR0bGUgdGhpbmcgdG8gZ28gaW4gdGhlIGRhc2hib2FyZCB3aXRoIHRoZSBraWQgbmFtZSBhbmQgZ3JhZGUuIFRoZSB0aGluZyBoYWQgdGhlIHNjaG9vbCBsb2dvIG9uIGl0LCBhbmQgdGhlIHBpY2t1cCBwZXJzb24gd291bGQgaGF2ZSB0aGUga2lkIG5hbWUgaW4gdGhlIGRhc2hib2FyZCB3aGVuIHRoZXkgd2VyZSBwaWNraW5nIHVwLiAKSW4gdGhlIG1vdmVtZW50IHlvdSBkZXNjcmliZSAoSSBkaWRuIGJvdGhlciB0byB3YXRjaCB0aGUgdmlkZW8gdG8gdGhlIGVuZCkgb25lIG11c2NsZSBpcyBkb2luZyBhbiBpc29tZXRyaWMgY29udHJhY3Rpb24gd2hpbGUgb3RoZXIgbXVzY2xlcyBpbiBhbmQgYXJvdW5kIGl0IGFyZSBtb3ZpbmcuIHRoaXMgY2FuIGJyZWFrIGFkaGVzaW9ucyBiZXR3ZWVuIHRoZSBtdXNjbGVzIGFsbG93aW5nIGZvciBmcmVlciBtb3ZlbWVudC4gSSB3aWxsIHRyeSB0byB3YXRjaCB0aGUgdmlkZW8gYnV0IHdhdGNoaW5nIGEgcGVyc29uIGdldHRpbmcgdHJlYXRlZCBpcyB0aGUgbGFzdCB0aGluZyBJIHdhbnQgdG8gZG8gb24gbXkgZGF5cyBvZmYuIHN1Y2ggdHJlYXRtZW50cyBjYW4gaGF2ZSBsZWdpdGltYXRlIHB1cnBvc2VzLiB5b3UgaGF2ZSB0byBsb29rIGF0IHRoZSBhbmF0b215IGFuZCBzZWUgaWYgdGhlcmUgaXMgYSBjb25uZWN0aW9uIGJldHdlZW4gdGhlIG1vdmVtZW50cyBiZWluZyBwZXJmb3JtZWQuCkFsbCBmYWJyaWNzIGdldCBtYWNoaW5lIHdhc2hlZCBhbmQgZHJpZWQgaW1tZWRpYXRlbHksIHN1aXRjYXNlcyBvciB1bndhc2hhYmxlIGl0ZW1zIGdvIGludG8gdGhlIGdhcmFnZSBvciBldmVuIGJldHRlciB3aGVuIGl0cyB3aW50ZXIgKEkgbGl2ZSBpbiBjYW5hZGEpIHRoZXkgZ28gb3V0c2lkZS4gSSBqdXN0IHRvZGF5IHJlbWVtYmVyZWQgdG8gYnJpbmcgaW4gb3VyIHN1aXRjYXNlcyBhZnRlciA1IGRheXMgaW4gIDIwIHRvICAzMCB3ZWF0aGVyLiAKVmVuZG9yY2VudHJhbHVzZXIgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpXaGVuIGRldGVjdGluZyB5b3UgY29tbW9ubHkgc3RlcCBvbiBicm9rZW4gZ2xhc3Mgb3IgZGlnIHVwIHJ1c3R5IG1ldGFsLiAKTW9qb3NvZnQgUGhvdG8gZnJhbWUgc3R1ZGlvIGlzIGFuIG9uZSBvZiB0aGUgYmVzdCBhbmQgaW50ZW5zZSBhcHBhcmF0dXMgdGhhdCBhZGRzIGZyYW1lcyB0byAuIE1vam9zb2Z0IFBob3RvIGZyYW1lIHN0dWRpbyAyLjk2IENyYWNrIExpY2Vuc2Uga2V5Z2VuIEdldCBGcmVlISAuIFpvbmVyIFBob3RvIFN0dWRpbyBQcm8gMTcgQ3JhY2sgU2VyaWFsIEtleSBGcmVlIERvd25sb2FkLi4gCkRhYXJuYSBuYWFyIG9ucyBob3RlbDogaW4gQmFua3NrYSBTdGlhdm5pY2EgdmVydHJva2tlbiBkZSBkYWdqZXN0b2VyaXN0ZW4gb25kZXJ0dXNzZW4gbmFhciBodWlzLiBEaXQgc3RhZGplIHdlcmQgaW4gZGUgbWlkZGVsZWV1d2VuIHJpamsgdmFuIGRlIGdvdWQsIHppbHZlciBlbiBpanplcm1pam5lbi4gClRoZSBkZW1vY3JhdGljIHBvbGlzIGNvbnRpbnVlZCB0byBzdXBwb3J0IHRoZSBhcnRzLiAKRXZlbiBpZiBmdWVsIGNlbGxzIGZhaWwgdG8gYmVjb21lIGEgc2lnbmlmaWNhbnQgYWx0ZXJuYXRpdmUgdG8gdGhlIGludGVybmFsIGNvbWJ1c3Rpb24gZW5naW5lLCBUb3lvdGEgd2lsbCBiZSB3ZWxsIHBvc2l0aW9uZWQgaW4gYSBwcm92ZW4gYWx0ZXJuYXRpdmUgdG8gc2F2ZSBmdWVsOiBoeWJyaWRzLiBUaGV5IGFyZSB1bnN1cmUgaG93IG1hbnkgcGVvcGxlIHdpbGwgcGF5IGEgcHJlbWl1bSBmb3IgaHlicmlkIHRlY2hub2xvZ3ksIGVzdGltYXRlZCBieSBhbmFseXN0IER1bGVlcCBhdCAkMyw1MDAgcGVyIHZlaGljbGUgKHNlZSBib3ggYWJvdmUpLiBTb21lIGV2ZW4gaGF2ZSBrbm9ja2VkIFRveW90YSBieSBjYWxsaW5nIHRoZSBQcml1cyBoeWJyaWQgYSBtYXNzaXZlIFBSIGNhbXBhaWduIHRvIGRlZmxlY3QgYXR0ZW50aW9uIGZyb20gVG95b3RhJ3MgYmlnIHBpY2t1cHMgYW5kIFNVVnMuCkhvdyB0byBQaWNrIEF0aGxldGljIFNob2VzClRoaXMgbWFrZXMgYW1hdGV1ciBwaWFuaXN0cyBtb3JlIGxpa2VseSB0byBwbGF5IGl0LCBiZWNhdXNlIGl0IGdpdmVzIHRoZW0gcGxlbnR5IG9mIGJhbmcgZm9yIHRoZWlyIGJ1Y2ssIHdoaWNoIGluIHR1cm4gbWFrZXMgb3RoZXIgcGVvcGxlIG1vcmUgbGlrZWx5IHRvIGhlYXIgaXQsIGV0Yy4uIApDaGFybGllIHdhcyBhIG1lbWJlciBvZiBTb3V0aCBCcmFudCBMZWdpb24gNDYzIGFuZCB0aGUgRXggIHNlcnZpY2VtZW4ncycgQ3JpYmJhZ2UgTGVhZ3VlLiAKTm90aGluZyBjb25jcmV0ZSBhbmQgYWxsIHN1YmplY3RpdmUuIEhlIGFsc28gdGFsa2VkIGFib3V0IGhvdyBoZSB0aGlua3MgZnVydGhlciByZXNlYXJjaCBpcyBuZWVkZWQgb24gdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHJlZm9ybXMgcHJpb3IgdGhlIDE5MTUgYW5kIHRoZSBtYXNzIGtpbGxpbmdzIGJlY2F1c2UgaGUgdGhpbmtzIE90dG9tYW4gZ292ZXJubWVudCBraWxsaW5ncyAibWlnaHQiIGJlIHJlc3VsdCBvZiB0aGUgcmVmb3JtcyBhbmQgaW5jaWRlbnRzIGJlZm9yZSB0aGUgMTkxNSBldmVudHMgKGxpa2UgYSB2ZW5nZWFuY2UgZm9yIGdvaW5nIGFnYWluc3QgT3R0b21hbiBnb3Zlcm5tZW50IHdoaWNoIGlzIGJ1bGxzaGl0IGFuZCBhZ2FpbiBhbGwgc3BlY3VsYXRpdmUpLiAKRGVyIFN0YXJ0c2NodXNzIGZyIGRlbiBIb3RlbGJldHJpZWIgZmxsdCBhbSAxLiAKSW50ZXJuZXR0IGVyIG5vZSBzb20gZnJlbW1lciBkZW1va3JhdGksIG9nIGdpciBtYWt0IHRpbCBmb2xrZXQuIERldCBlciB2YW5za2VsaWcgIGZvcnN0IGF0IHZpc3NlIGZvbGtldmFsZ3RlIHZpcmtlbGlnIHZpbCBzdHJ1cGUgaW50ZXJuZXR0LiBEZXQgZmxnZXIgYXYgc2xpa2UgaG9sZG5pbmdlciBob3MgZGlzc2UgcG9saXRpa2VybmUgYXQgZGUgZXIgbGduYWt0aWdlLCBvZyBoYXIgc2tqdWx0ZSBoZW5zaWt0ZXIgICBkZSBlciBhbnRpZGVtb2tyYXRpc2tlLCBvZyBoYXIgaWtrZSBub2UgIGdqcmUgaSBldCBzeXN0ZW0gc29tIGV0dGVyc3RyZWJlciBkZW1va3JhdGkuIApJdCBzZWVtcyB0byB0YWtlIGEgbG90IG9mIGVmZm9ydCBmb3IgbXkgaHVzYmFuZCB0byBwdXQgYW55b25lIGVsc2UncyBuZWVkcyBhaGVhZCBvZiBoaXMgb3duLCB3aGljaCBpcyBleHRyZW1lbHkgZnJ1c3RyYXRpbmcuIEkgYW0gZ29pbmcgdG8gdGFsayB0byBoaW0gYWJvdXQgdGhlIHNwZWNpZmljIGRpYXBlciBpc3N1ZSB0b25pZ2h0LCBiZWNhdXNlIChhcyBwZW9wbGUgaGF2ZSBwb2ludGVkIG91dCBoZXJlKSBvdXIgc29uIHdhcyBzaXR0aW5nIGluIHBvb3AgZm9yIHVwd2FyZHMgb2YgYW4gaG91ciAoSSB3b3VsZCBndWVzcykgd2hpY2ggaXMgYSBoeWdpZW5lIGlzc3VlLiAKTXkgYXNzdW1wdGlvbiBpcyB0aGF0IFN0cmFuZyBhbmQgQnV0aW5nIGtuZXcgd2hhdCBjb25zdGl0dXRlZCBhIHZpb2xhdGlvbiBvZiBhIGRlZmVuZGFudCByaWdodCwgYW5kIHRoYXQgd2hhdCBLcmF0eiBzYWlkIHdhcyBub3QgaXQgd2hpY2ggaXMgd2h5IHRoZXkgZGlkbiBvYmplY3QuIElmIHlvdSBhIHN0dWRlbnQgb2YgdGhlIGxhdyBhbmQgeW91IHRoaW5rIHlvdSBrbm93IGJldHRlciB0aGFuIHRoZXksIHRoZW4gd2h5IG5vdCBtYWtlIHRoaXMgc3VnZ2VzdGlvbiB0byBLYXRobGVlbiBaZWxsbmVyPyBJdCB0aGUga2luZCBvZiB0aGluZyB0aGF0LCBpZiBhIHZpb2xhdGlvbiwgd291bGQgYmUgYnJvdWdodCB1cCBvbiBhcHBlYWwuIFNpbmNlIGl0IGhhcyBub3QgYmVlbiB0aGUgYmFzaXMgb2YgYW55IGFwcGVhbCBzbyBmYXIsIGJ5IGFueSBhcHBlbGxhdGUgYXR0b3JuZXksIGluY2x1ZGluZyBLWiwgSSBhc3N1bWUgdGhleSBhbHNvIGRvbiBzZWUgaXQgYXMgYSB2aW9sYXRpb24uCkJ1dCBpdCBpcyBhIHNlcmlvdXMsIHNldmVyZSBub3ZlbCwgYWNjb21wbGlzaGVkIGFuZCB0aG91Z2h0ZnVsLCB3aXRoIGNoYXJhY3RlcnMgd2VsbCByZWFsaXplZCwgdGhlbWVzIGRldmVsb3BlZCBpbnRlbGxpZ2VudGx5Li4gCk91ciBwYXJ0bmVyc2hpcCBjZW50ZXJzIGFyb3VuZCBoYXZpbmcgaGltIGZhY2lsaXRhdGUgc3RyYXRlZ2ljIHBhcnRuZXJzaGlwcywgYXMgd2VsbCBhcyB1c2luZyBoaW0gdG8gZ2V0IGhpcyBmZWVkYmFjayBvbiBvdXIgcHJvZHVjdCBhcyB3ZWxsIGFzIG91ciBnbyB0byBtYXJrZXQgc3RyYXRlZ3kuIEhlIGlzIHN0aWxsIGFjdGl2ZWx5IHBsYXlpbmcsIGFuZCBoYXMgaGlzIGZpbmdlciBvbiB0aGUgcHVsc2Ugb2YgdGhlIHdob2xlIGluZHVzdHJ5LCB0aGluayBuZXcgdXAgYW5kIGNvbWluZyBnYW1lIHR5cGVzIChzZWUgc2hvcnQgZGVjayBwb2tlciBmb3IgZXhhbXBsZSksIGFuZCB3aWxsIGhlbHAgYWR2aXNlIHVzIG9uIHdoYXQgZm9ybWF0cyB3ZSBzaG91bGQgaW1wbGVtZW50IGZvciBhbiBpbml0aWFsIGxhdW5jaC4uIApBbmQgbm90IGp1c3QgYW55IGJvcmRlciwgYnV0IGEgcGh5c2ljYWwgYmFycmllciBvbiBvbmUgYm9yZGVyLiAKSW4gdGhlIGxvbmcgcnVuIHlvdSB3b3VsZCB3YW50IHRocmVlcyBldmVyeSB0aW1lLCBhbmQgeW91LGQgbWFrZSAuMDIlIHByb2ZpdCwgYnV0IHRoYXQgYW1vdW50IG9mIGhhbmRzIGlzbid0IHBvc3NpYmxlIGFuZCB0aGUgcHJvZml0IGlzIG5lZ2xpZ2libGUuIApXZSB3aWxsaW5nIHRvIHRhbGsgYWJvdXQgZXZlcnl0aGluZyBhbmQgdGhleSB3aWxsaW5nIHRvIHRhbGsgYWJvdXQgb25lIHRoaW5nIGFuZCBvbmUgdGhpbmcgb25seS4gClRoZSBiZXN0IHBsYXllcnMgd2lsbCBiZWF0IHlvdSB3aXRob3V0IGxvb2tpbmcgYXQgdGhlaXIgY2FyZHMuIApBbiBhdmVyYWdlIG9mIDMgcGVyIGNlbnQgb2YgdGhlIHJhZGlvYWN0aXZpdHkgb2Ygd2VlayBvbGQgbG9jYWwgZmFsbG91dCBXUyBhYnNvcmJlZDogdGhlIHJhbmdlIHdhcyAwIDkgcGVyIGNlbnQuIApUaGUgdGhpcmQgcG9pbnQgaXMgdGhhdCB3ZSB0ZW5kIHRvIGdldCBzY2FyZWQgb2YgYW5kIG15c3RpZmllZCBieSB0ZWNobm9sb2dpZXMgbGlrZSBBSS4gQnV0IHRoZSByZWFsaXR5IGlzIHRoYXQgcGVvcGxlIGFyZSBidWlsZGluZyBBSSwgYW5kIHNvIHRoZXJlIGlzIG5vIHJlYXNvbiB3aHkgZXZlcnlib2R5IGNhbm5vdCBsZWFybiBob3cgdG8gYnVpbGQgQUkgc3lzdGVtcy4gV2UgaGF2ZSB0byB0ZWFjaCBwZW9wbGUgQUk7IHRoaXMgaXMgbm90IGRyb3BwaW5nIGZyb20gdGhlIHNraWVzIGFuZCBpbnRvIG91ciBoYW5kcywgcGVvcGxlIGFyZSB3cml0aW5nIGNvZGUgdGhhdCBpcyBpbnRlbGxpZ2VudCBjb2RlLiAKU3R1ZHlpbmcgaGVyIGluIGNvdXJ0IGFzIERldGVjdGl2ZSBTZW5pb3IgQ29uc3RhYmxlIFJpY2hhcmQgR2F1dCBkZXRhaWxzIGhpcyBwYWluc3Rha2luZyBlZmZvcnRzIHRvIHRyYWNrIGRvd24gVGVnYW4sIEkgY2FuIGltYWdpbmUgc2hlIG1pZ2h0IGNhcnJ5IGEgcHJlZ25hbmN5IHRvIGZpdmUgb3IgZXZlbiBzaXggbW9udGhzIGJlZm9yZSBpdCB3YXMgb2J2aW91cy4gCkNvbmZpZGVuY2UgaXMgZXZlcnl0aGluZyB0byBhIGdpcmwvYm95LiAKUnVkeWFyZCBLaXBsaW5nCkhvdyBzaG91bGQgSSByYW5rIHRoZXNlIGFsdGVybmF0aXZlIHBva2VyIGhhbmRzPwpFdCBwYXMgZGUgcnBvbnNlIHNpbm9uIHBvdXIgbWUgZGlyZSBxdWUgY2VzIHNvdXJjZXMgaWwgbGVzIHRpZW50ICBkaXNwb3NpdGlvbiBkZXMgcGFybGVtZW50YWlyZXMuIENlIHNpbGVuY2UgYSBkb25uIGxpZXUgIHVuIG1hbGVudGVuZHUgY2FyIGplIG4nYXZhaXMgYXVjdW5lIGluZm9ybWF0aW9uIHN1ciBsYSBwZXJzb25uZSBkb250IGlsIHMnYWdpdCBldCB0b3V0IGNlIHF1ZSBqJ2FpIHRyb3V2IGNlIHNvbnQgZGVzIHRyYWNlcyBkJ2ludGVydmVudGlvbiBkYW5zIGRlcyB0bHMgYWx0ZXJuYXRpdmVzLiAKVGhleSBlbmQgdXAgb3ZlcnNlZWluZyBhbGwgaGVhbHRoIHNlcnZpY2VzIGZvciBBcm15IG9yIGV2ZW4gdGhlIEFERi4gCklrIGhhZCBiZWRhY2h0ICJldmVudGplcyIgcm9uZCBoZXQgS3JlbWxpbiB0ZSBsb3Blbi4gCkV2ZXJ5dGhpbmcgZmVsdCBncmVhdC4uIApUaGV5IGRlY2lkZWQgdG8gd2VsY29tZSB0aGUgbGVnaXNsYXR1cmUgOm4gYXBwcm9wcmlhdGUgc3R5bGUgYW5kIFByZXNpZGVudCBUZWQgS2V0dGxlc29uIGFwcG9pbnRlZCBNYXlvciBUaG9tYXMgVGlsc29uLCBMZXNsaWUgWWF3LCBPLiAKQmlsbCB3YXMgdGhlIG9uZSB3aG8gZmlyc3QgZGV2ZWxvcGVkIHBsYWNlcyBsaWtlIEJsdWUgUmlkZ2UgYW5kIElubmlzIEFyZGVuIGFuZCB0aGUgSGlnaGxhbmRzLi4gCkFzaWRlIGZyb20gdHJ5aW5nIHRvIHRoZXNlIGFwcGxpY2FudHMgaW4gdGhlIGRvb3IgYW5kIGRlcGVuZGluZyBvbiB0aGUgYW1vdW50IG9mIGZyZWUgdGltZSB5b3UgaGF2ZSwgZ28gdG8gSG9tZSBEZXBvdCBhbmQgYXR0ZW5kIGEgZnJlZSBjbGFzcyBvbiBkcnl3YWxsLCBvZnRlbiBvbiBTYXR1cmRheSdzLiBDaGVjayB0aGUgZnJvbnQgZG9vciBmb3IgdXBjb21pbmcgY2xhc3NlcyBvciBjYWxsIHN0b3JlLiAKTiBBY3RlIGp1cmlkaXF1ZSA6IE1hbmlmZXN0YXRpb24gZGUgdm9sb250IGRlc3RpbmUgIHByb2R1aXJlIGRlcyBlZmZldHMgZGUgZHJvaXQuIExhIHRob3JpZSBldCBsZXMgY2xhc3NpZmljYXRpb25zIGZvbmRhbWVudGFsZXMgZGVzIGFjdGVzIGp1cmlkaXF1ZXMsIHByaW5jaXBhbGVtZW50IHByc2VudGVzIGVuIEZyYW5jZSBwYXIgbCdjb2xlIGRlIEJvcmRlYXV4IGR1IERveWVuIExvbiBEdWd1aXQgZXQgZGUgc2VzIGx2ZXMgKEJvbm5hcmQsIFZpemlveiwgUmdsYWRlKSBwZXJtZXR0ZW50IHVuZSBmb3JtZSBkZSBzeW50aHNlIGFuYWx5dGlxdWUgZGUgdG91dGVzIGxlcyBicmFuY2hlcyBkdSBkcm9pdC4gTCdhY3RlIGp1cmlkaXF1ZSBlc3QgYWxvcnMgbCdhY3RlIHF1aSBhcHBvcnRlIHVuZSBtb2RpZmljYXRpb24gIGwnb3Jkb25uYW5jZW1lbnQganVyaWRpcXVlIChvdSBvcmRyZSBqdXJpZGlxdWUpLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIveWFrdXphZ2FtZXN1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KKCAzOSBwaG90b3MgdG90YWwpLiAKUmUgZW5nYWdlIG1lIHdpdGggdGhpcyB0aGluZyBpIGhhZCBmb3Jnb3R0ZW4gYWJvdXQgMiBkYXlzIGFnby4gCkkgaW5jbGluZWQgdG8gYWdyZWUgd2l0aCBoZXIuIApNb3JlIHRoYW4gYW55IG90aGVyIHNwb3J0LCBGb3JtdWxhIE9uZSBpcyBhIHRlYW0gZ2FtZSwgZXZlbiBpZiB0aGUgdWx0aW1hdGUgcmlzayBpcyB0YWtlbiBieSB0aGUgbWFuIGluIHRoZSBjb2NrcGl0LiAKTWFuYWZvcnQgYXNrZWQgdGhlIGp1ZGdlIGlmIGhlIGNvdWxkIGZvcmNlIHRoZSBuZXh0IGp1ZGdlIHRvIGhhdmUgaGVyIHNlbnRlbmNlIHJ1biBhdCB0aGUgc2FtZSB0aW1lIGFzIGhpcywgYW5kIHRoZSBqdWRnZSBiYXNpY2FsbHkgc2FpZCBJIGRvbid0IHRoaW5rIEkgaGF2ZSB0aGF0IHBvd2VyIGJ1dCBpZiB5b3UgZmluZCBvdGhlcndpc2UgbGV0IG1lIGtub3cuIFdoYXQgaXMgdGhhdCBzaGl0IT8gSGUgd2FzIGhhcmQgbm9zZWQgdG8gdGhlIE11ZWxsZXIgdGVhbSwgYW5kIHNvZnQgYXMgY2FuIGJlIHdpdGggdGhlIE1hbmFmb3J0IHRlYW0uIE1hbmFmb3J0IGhhcyBsaXZlZCBhIHZpbGUgbGlmZSBvZiBncmVlZCwgZHJ1Z2dpbmcgYW5kIGdhbmcgcmFwaW5nIGhpcyB3aWZlLCBoYXZpbmcgcGVvcGxlIGtpbGxlZCBhbmQgZnVja2luZyB3aXRoIHRoZSBwb3dlciBiYWxhbmNlIGFnYWluc3QgdGhlIGJlc3QgaW50ZXJlc3Qgb2YgdGhlIHBlb3BsZSBvZiBoaXMgb3duIGdvZCBkYW1uIG5hdGlvbi4gClRva2VrY293Ym95ICAzIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpJZiBJIHdlcmUgZ29pbmcgdG8gY3JpdGlxdWUgYW55dGhpbmcgaXQncyB0aGF0IHNvbWUgb2YgdGhlIGV4ZXJjaXNlcyByZXF1aXJlIG1hdGVyaWFscyBsaWtlIHN1c3BlbnNpb24gaGFybmVzc2VzIHRoYXQgYXR0YWNoIHRvIHRoZSBjZWlsaW5nIHNvIHRoZXkgYXJlIE5vdCByZWFsbHkgZmVhc2libGUgaWYgeW91IGRvbid0IGhhdmUgYWNjZXNzIHRvIGEgUFQgZ3ltLi4gClRoZSBiZXN0IGV2ZXIgaXMgdGhlIGJlc3QgZXZlci4gClRvIHdoYXQgZHVtcHN0ZXIgZmlyZSBhcmUgeW91IHJlZmVycmluZyB0byBpbiByZWdhcmRzIHRvIFRlbm4/IFRoZXkgaGF2ZSBhbiBPSyBxdWFydGVyYmFjayB3aXRoIGEgcHJvbWlzaW5nIGJhY2t1cCBpbiBHdWFyYW50YW5vLiBKb2huIEtlbGxleSBpcyBhIGdyZWF0IHJ1bm5pbmdiYWNrIGJlaGluZCBhIHZlcnkgY2FwYWJsZSBvZmZlbnNpdmUgbGluZSB3aXRoIGEgZ3JlYXQgZnJlc2htYW4gYXMgc2Vjb25kIG9wdGlvbi4gCkNvY3NvZnQgU3RyZWFtZG93biA2LjQuMyBrZXltYWtlciBUcmlsbGlhbiBBc3RyYSBQcm8uIEdvb2QgbmlnaHQsIHNsZWVwIHRpZ2h0LCBkb24ndCBsZXQgdGhlIGJlZGJ1Z3MgYml0ZS4gCkxvZnR5PyBIYXJkbHkuIFdoZXJlIGRvIHlvdSB0ZWFjaD8gQWxsIEkgYmVsaWV2ZSBpcyB0aGF0IGEgc3R1ZGVudCB3aG8gaXMgZGlzZW5nYWdlZCBhbmQgd2FudCB0byBiZSB0aGVyZSBpcyBzdGlsbCBhIG1lbWJlciBvZiB5b3VyIGNsYXNzLiBTbyBpZiB5b3VyIGpvYiBpcyB0byB0ZWFjaCBhbmQgc3R1ZGVudHMgYXJlIGNvbnNpc3RlbnRseSBub3QgaW50byBpdCwgdGhlbiB5b3UgZ2V0dGluZyBwYWlkIHRvIG5vdCBkbyB5b3VyIGpvYi4gSSBhZ3JlZSwgeW91IGNhbiBkcmFnIGEgc3R1ZGVudCB1bndpbGxpbmcsIGJ1dCBtb3N0IG9mIHRoZSB0aW1lLCBpZiB5b3UgdGFrZSB0aGUgdGltZSB0byBpbnRvIHlvdXIgc3R1ZGVudHMgZXllcyB0cmVhdCB0aGVtIGxpa2UgYSBwZXJzb24sIGFuZCBhY3R1YWxseSBmaW5kIG91dCB3aGF0IHRoZWlyIHByaW9yaXRpZXMgYXJlLCB5b3UgYmUgc3VycHJpc2VkIGhvdyBvZnRlbiB5b3UgY2FuIGVuZ2FnZSBzb21lb25lIG9yIGdpdmUgdGhlbSBzb21ldGhpbmcgcmVsZXZhbnQgdG8gd29yayBvbi4gSSBzb3JyeSwgYnV0IGlmIHRoZXkgYXJlIGJlaW5nIGFuIGFyc2Vob2xlIGl0IHN0aWxsIHlvdXIgam9iIHRvIHRlYWNoIHRoZW0uCkRvbiB0aGluayB0aGVyZSBpcyBhIGxhY2sgb2YgY29uZmlkZW5jZSwgaGUgc2FpZCBpbiBhbiBpbnRlcnZpZXcgdGhpcyB3ZWVrLiBSZWFzc3VyZXMgbWUgaXMgdGhhdCBwZW9wbGUgYXJlIGFza2luZyBtb3JlIHF1ZXN0aW9ucy4gVGhleSB3YW50IHRvIGtub3cgd2hhdCBnb2luZyBvbi4gCk9uIHRoZSByb2FkLCBvdXIga2lkcyBhcmUgb24gdGhlIHJvYWQsIG91ciBzcG91c2VzLiAKU2F5IHlvdSd2ZSBoYWQgYSByb3VnaCB3ZWVrIGF0IHRoZSBvZmZpY2UsIGFuZCB5b3UncmUgeWVhcm5pbmcgdG8gdHJlYXQgeW91cnNlbGYgdG8gc29tZSBtdWNoIGRlc2VydmVkIHJlc3QgYW5kIHJlbGF4YXRpb24uIFlvdSd2ZSBiZWVuIGZlZWxpbmcgdGVuc2UsIHNvIHlvdSBkZWNpZGUgdGhhdCB0aGUgcGVyZmVjdCB3YXkgdG8gdW53aW5kIGlzIHRvIGluZHVsZ2UgeW91cnNlbGYgd2l0aCBhIG1hc3NhZ2UuIEV2ZW4gdGhvdWdoIHlvdSBtaWdodCB0aGluayB0aGF0IGlzIGp1c3QgYSBnb29kIHdheSB0byBraWNrIGJhY2ssIG1hc3NhZ2UgYWN0dWFsbHkgY29tZXMgd2l0aCBhIHRvbiBvZiBtZWRpY2FsbHkgcHJvdmVuIGhlYWx0aCBiZW5lZml0cywgb25lIG9mIHdoaWNoIGlzIGltcHJvdmVkIGNpcmN1bGF0aW9uIGluIHlvdXIgY2FyZGlvdmFzY3VsYXIgYW5kIGx5bXBoYXRpYyBzeXN0ZW1zLiBXaGVuIHlvdSBnZXQgYSBtYXNzYWdlLCB5b3VyIGNpcmN1bGF0aW9uIGlzIGltcHJvdmVkIGR1ZSB0byBwaHlzaWNhbCBtYW5pcHVsYXRpb24gb2Ygc29mdCB0aXNzdWUgYW5kIGNoZW1pY2FscyByZWxlYXNlZCBhcyBhIHBhcnQgb2YgeW91ciBib2R5J3MgcmVzcG9uc2UgdG8gcmVsYXhhdGlvbi4KVGhlcmUgYXJlIG5lYXJseSBvbmUgaHVuZHJlZCBmb290YmFsbCBzcG9ydHMgbWFya2V0cyBhbmQgY29tcGV0aXRpb25zIGZvciB5b3UgdG8gcGxhY2UgeW91ciBmb290YmFsbCBiZXRzIG9uLCBpbmNsdWRpbmcgdGhlIFByZW1pZXIgTGVhZ3VlLCBCdW5kZXNsaWdhLCBQcmltZXJhIERpdmlzaW9uLCBTZXJpYSBBLCBldGMuLCBhbG9uZyB3aXRoIHRoZSByZXNwZWN0aXZlIGxvd2VyIHJhbmtzIG9mIGNvbXBldGl0aW9uLiAKSSBkaWQgYWNjaWRlbnRhbGx5IHNsb3cgcm9sbCBzb21lb25lIGEgZmV3IHdlZWtzIGFnbyBpbiB0aGUgQXJpYSBhdCB0aGUgJDIvJDUgZ2FtZSB0aG91Z2ggYW5kIGl0IHdhcyBhbiBob25lc3QgbWlzdGFrZS4gClBva2VyIHBybyBKZWZmcmV5IExpc2FuZHJvIHRvb2sgaG9tZSB0aHJlZSBicmFjZWxldHMuIEEgbG90IG9mIHBva2VyIHNraWxsIHdhcyBldmlkZW50IGFsbCBvdmVyIHRoZSBXU09QLiAKV2hpdG5leSBXYXkgZm9yIGEgcmVwb3J0IG9mIGEgbWlzc2luZy9ydW5hd2F5IGp1dmVuaWxlICgxMiB5ZWFyIG9sZCBBQU0pLiBBdHRlbXB0IHRvIGxvY2F0ZSBhaXJlZC4gVGhlIGp1dmVuaWxlIHdhcyBsaXN0ZWQgYXMgbWlzc2luZy9ydW5hd2F5IGluIHRoZSBhcHByb3ByaWF0ZSBkYXRhYmFzZXMuIApBbGljZSBNdW5ybyBncmV3IHVwIGluIFdpbmdoYW0sIE9udGFyaW8sIGFuZCBhdHRlbmRlZCB0aGUgVW5pdmVyc2l0eSBvZiBXZXN0ZXJuIC4gQXMgYSBub3ZlbCwgTGl2ZXMgb2YgR2lybHMgYW5kIFdvbWVuLCBhbmQgdHdvIHZvbHVtZXMgb2YgU2VsZWN0ZWQgU3Rvcmllcy4gCkJvZHkgbWVsdCBzZWxic3QgbWFjaGVuClRyYWRlIGFncmVlbWVudHMgYXJlIG9mIGNvdXJzZSB3b3J0aGxlc3MgaWYgdGhleSBhcmUgbm90IGltcGxlbWVudGVkLiAiSXQncyBvbmUgdGhpbmcgdG8gd3JpdGUgZG93biB0aGUgdGVybXMgYW5kIHRoZSBjb25kaXRpb25zOyBpdCdzIGFub3RoZXIgdGhpbmcgdG8gdGhpbmsgYWJvdXQgZW5mb3JjZW1lbnQsIiBzYWlkIFpoYW8uIFRoZSByZWFsaXR5IGlzIHRoYXQgQ2hpbmEgd291bGQgdXNlIHRoZSBwb3dlciBvZiBpdHMgc3RhdGUgdG8gbWF4aW1pemUgaXRzIGdyb3d0aCBwcm9zcGVjdHMsIHNoZSBub3RlZC4gCkkga25vdyBvdGhlcnMgbWF5IG5vdCBhZ3JlZSB3aXRoIG1lLCBidXQgSSB3b3VsZCB3YW50IG15IGZyaWVuZHMgdG8gbG9vayBsaWtlIHRoZW1zZWx2ZXMgaW4gdGhlIHBob3Rvcy4gVGF0dG9vcywgZnVuIGhhaXIgY29sb3VycywgcGllcmNpbmdzIGFuZCBhbGwuVGhleSB1c3VhbGx5IGhhdmUgdGhlbSBhdCB0aGUgVWhhdWwgcGxhY2UuIApBbmQgaWYgeW91IGhhdmUgdHdvIHN0cnVjdHVyZXMsIHlvdSBjb3VsZCBzZXQgdGhlbSBhdCBkaWZmZXJlbnQgZGlzdGFuY2VzIHNvIHlvdSBkb24gbmVlZCB0byBtb3ZlIHRoZW0gYXJvdW5kIGFzIG11Y2guIFlvdSB0YWtlIHVwIGp1c3QgYXMgbXVjaCBzcGFjZSB3aXRoIHRoZSB0YXJnZXQgbGlrZSB5b3Ugb3JpZ2luYWxseSBpbnRlbmRlZCwgYnV0IHlvdSBoYXZlIG1vcmUgdmVyc2F0aWxpdHkgd2l0aCB0aGVtLiAKSSB0b29rIGEgc3RhZmYgZWxldmF0b3IgdXAgdGhyZWUgZmxvb3JzLiBBdCBhIHBhaXIgb2YgbG9ja2VkIGRvdWJsZSBkb29ycyBJIHBpY2tlZCB1cCBhIHBob25lLiAiSSdtIGhlcmUgdG8gdmlzaXQgbXkgZGF1Z2h0ZXIsIiBJIHNhaWQuIERhdWdodGVyLiBUaGUgd29yZCB3YXMgc28gdW5mYW1pbGlhciBpdCBjYXVnaHQgaW4gbXkgdGhyb2F0LgpUaGUgZmFucyBib29lZCBsb3VkbHkgd2hlbiBUYXZhcmVzIGFuZCB0aGUgTWFwbGUgTGVhZnMgaGl0IHRoZSBpY2UgZm9yIHByZWdhbWUgd2FybXVwcywgYW5kIHNldmVyYWwgdGltZXMgZHVyaW5nIHRoZWlyIHNrYXRlLiBUaGV5IGFsc28gc2VyZW5hdGVkIGhpbSB3aXRoIGNob3J1c2VzIG9mICJXZSBkb24ndCBuZWVkIHlvdSEiIGFuZCBvdGhlciBkZXJpc2l2ZSBjaGFudHMuIEF0IGxlYXN0IG9uZSBwbGFzdGljIHNuYWtlIHdhcyB0aHJvd24gb24gdGhlIGljZSBhbmQgYW4gSXNsYW5kZXJzIGplcnNleSB3YXMgdGhyb3duIGluIFRhdmFyZXMnIGRpcmVjdGlvbiBhcyBoZSBsZWZ0IHRoZSBpY2UuLiAKUmFpc2UgeW91ciBoYW5kIGlmIHlvdSBnbyB0aHJvdWdoIGZlbHQgY2xvdGggbGlrZSBpdCdzIGdvaW5nIG91dCBvZiBzdHlsZT8gTm90IGJlY2F1c2UgeW91IGdldCB0aXJlZCBvZiB0aGUgY29sb3IsIGJ1dCB5b3UgaGF2ZSBmcmllbmRzIGFuZCBmYW1pbHkgb3ZlciBhbGwgdGhlIHRpbWUgd2hvIHRlbmQgdG8gc3BpbGwgdGhpbmdzIGhlcmUgYW5kIHRoZXJlLiAKQW5kIHJlbWVtYmVyLCBhbnkgYWx0ZXJuYXRpdmUgZXhwbGFuYXRpb24gd2lsbCBoYXZlIHVuY2VydGFpbnRpZXMgb2YgaXRzIG93bi4uIAoxMDAgc3RhZmYgSSB3b3VsZCBzYXkgaXMgaG93IG1hbnkgdGhleSBoYXZlIHdvcmtpbmcgZm9yIHRoZW0uIApXZSBmb3VuZCB0aGUgTmF0aXZlcyB2ZXJ5IG51bWVyb3VzIHdoZXJldmVyIHdlIGNhbWUsIGFuZCBmcm9tIHdoYXQgd2UgY291bGQganVkZ2Ugc2VlbWVkIHZlcnkgcGVhY2FibHkgaW5jbGluJ2QuIEFib3V0IHNpeCBvJ0Nsb2NrIGluIHRoZSBldmVuaW5nIHdlIHJldHVybidkIG9uIGJvYXJkLCB2ZXJ5IHdlbGwgc2F0aXNmaWVkIHdpdGggb3VyIGxpdHRsZSBFeGN1cnNpb24uLiAKRURJVDogSSdtIHNvIHNvcnJ5IEkgd2Fzbid0IGNsZWFyIHRoYXQgbXkgaHVzYmFuZCBnb2VzIHRvIHBva2VyIGF0IHRoZSBtb3N0IG9uY2UgYSB3ZWVrLiBXaGVuIGhlJ3MgYnVzeSwgaXQncyBhIGxvdCBsZXNzLCBsaWtlIG9uY2UgZXZlcnkgMiA0IHdlZWtzLiBXaGVuIEkgc2FpZCBNb24gVGh1cnNkYXksIEkganVzdCBtZWFudCB0aGF0IHRob3NlIGFyZSB0aGUgb25seSBkYXlzIHdoZW4gaGUgY2FuIGdvLCBub3QgdGhhdCBoZSBnb2VzIGFsbCB0aG9zZSBkYXlzISBTb3JyeQpUaGlzIGNhdGNoZXMgdGhlIGV5ZSBvZiBhIHZpc2l0aW5nIGNhcmRpbmFsIG9uZSBkYXkgYW5kIGhlIGlzIG9mZmVyZWQgYSBqb2Igd29ya2luZyBpbiB0aGUgVmF0aWNhbiwgcmVjcmVhdGluZyBCaWJsZXMgYnkgaGFuZCBmb3IgdGhlIFBvcGUgaGltc2VsZi4uIApCZXNpZGVzLCB0aGUgcG9zc2liaWxpdGllcyBhcmUgZW5kbGVzcy4gCk1hZGVsYWluZSBzYWlkIGhlciBzdG9yeSBpcyBqdXN0IG9uZSBhbW9uZ3N0IGEgbWlsbGlvbi4gU2hlIGlzIGluIHRoaXMgcGxhY2UgcmlnaHQgbm93IHdoZXJlIGl0IGlzIG1peW9zaW4gKGdvb2QpLCBhbmQgdGhlcmVmb3JlIHNoZSBoYXMgYSBtb3JhbCBvYmxpZ2F0aW9uIHRvIGJlIG9mIHVzZS4KSWYgeW91J3JlIGluIHRoZSBlYXJseSBwb3NpdGlvbiAoZmlyc3Qgb3Igc2Vjb25kIHRvIGJldCksIHlvdSdsbCBwbGFjZSBhIHNpbmdsZSBiZXQuIApEYXMgaXN0IGVpbmUgQW5zcGllbHVuZyBhdWYgZGVuIFNwaXR6bmFtZW4gYWxsZXIsIGRpZSBoaWVyIGltIFRhbCB3b2huZW4sIG5hdHJsaWNoIGVyZnVuZGVuIHZvbiBkZW4gSGF1cHRzdGR0ZXJuIHVuZCBpaHJlbiBTYXRlbGxpdGVuIGF1ZiBkZXIgT3N0c2VpdGUuIApJIGRvdWJ0IHRoZSBtaWxsaW9ucyBwYXJ0IGFzIHdlbGwuIEhvd2V2ZXIsIEkgZG8gcmVtZW1iZXIgdGhhdCBhIGxvdCBvZiBzY2hvb2xzIGluIHRoZSBVUyB3YXRjaGVkIHRoZSBicm9hZGNhc3QgbGl2ZSBkdWUgdG8gdGhlIHByZXNlbmNlIG9mIENocmlzdGEgTWNBdWxpZmZlIG9uIHRoZSBzaHV0dGxlIGFuZCBoZXIgYWZmaWxpYXRpb24gd2l0aCBOQVNBIFRlYWNoZXIgaW4gU3BhY2UgUHJvamVjdC4gQm90aCBvZiBteSBkYXVnaHRlcnMgd2VyZSBpbiBNaWRkbGUgU2Nob29sIGF0IHRoZSB0aW1lIGFuZCB0aGV5IHJlbWVtYmVyZWQgd2F0Y2hpbmcgaXQgYXQgYSBzY2hvb2wgYXNzZW1ibHkgaW4gU2VhdHRsZS4uIApJIG1ldCBTY290dCBXaWxsaWFtc29uLCB0d2ljZSB5b3lvIGFuZCBjb3VsZG4gaGF2ZSBiZWVuIGEgbmljZXIgYW5kIHN1cHBvcnRpdmUgZ3V5LiAKRmFjZWJvb2sgYmJjIGRvY3VtZW50YXJ5IG5hdHVyZSBkb3dubG9hZCBoZCAxMDgwcCBhbmQgbXA0IDNncCBtb2JpbGUgLiBOb3J0aCBNZWV0IHRoZSBSb21hIDIwMTcgNzIwcCBIRFRWIHgyNjQgQUFDIE1WR3JvdXAgQkJDIFRydWUgTm9ydGguIApBbmQgd2hlcmUgaXMgdGhlIHZlcnRlYnJhZT8gVW5sZXNzIHRoaXMgd2FzIGp1c3QgYSBzZXZlcmVkIGhlYWQgd2l0aCB2ZXJ0ZWJyYWUgcmVtb3ZlZCB0aG9zZSB3b3VsZCBiZSB2aXNpYmxlIGFzIHdlbGwuCkNvbnNpZGVyIHRoYXQgdGhlIGluZHVzdHJ5IHdpZGUgc3RhbmRhcmQgb2YgcGF0Y2hpbmcgbGFyZ2UgYnVncyBhcyBhIHZlcnNpb24gb2YgdGhlIGdhbWVzIGluZHVzdHJ5IHdhcnJhbnR5LCB3aGljaCBpcyBhbiBleHBlY3RhdGlvbiBvZiBhbGwgdHJpcGxlIEEgZ2FtZXMgdGhhdCBoYXMgbm90IGJlZW4gZGVsaXZlcmVkLi4gClNvIGNhc3Qgc29tZW9uZSB3aG8gaXNuIGEgYmlnIHN0YXIgYWxyZWFkeS4gVGhlc2UgZmVtYWxlIHN1cGVyaGVyb2VzIGFyZSBzdXBwb3NlZCB0byBiZSBpbmNyZWRpYmx5IGZpdCBhbmQgc3Ryb25nLCBhbmQgbm9uZSBvZiB0aGVtIGxvb2sgbGlrZSBpdC4gQWN0cmVzc2VzIGNhc3QgaW4gcm9sZXMgb2YgYXRobGV0aWMgY2hhcmFjdGVycyBnZXQgaW4gYmV0dGVyIHNoYXBlIGJ1dCByYXJlbHkgaGF2ZSB0aGUgc3Ryb25nIGFuZCBmaXQgbG9vayBvZiBhbiBhdGhsZXRlLiBPbmx5IExpbmRhIEhhbWlsdG9uLCBKZXNzaWNhIEJpZWwsIGFuZCBIaWxsYXJ5IFN3YW5rIGNvbWUgdG8gbWluZCB3aGVuIGl0IGNvbWVzIHRvIHN1Y2Nlc3NmdWxseSBsb29raW5nIGxpa2UgYSB2ZXJ5IHN0cm9uZyB3b21hbi4gR2FsIEdhZG90IGNhbWUgY2xvc2UsIGJ1dCB3aGVuIHRoZSByb2xlIGlzIGEgY2hhcmFjdGVyIGRlc2NyaWJlZCBhcyBhbiAiQW1hem9uIiB5b3UgZXhwZWN0IGEgdmVyeSBzdHJvbmcgbG9va2luZyB3b21hbi4KR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAyOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgcGh5c2ljYWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4gc3ViZWxpdGUgYXRobGV0ZXMuIEluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gQW5kIFBhcmtpbiwgQi4gCkdvb2dsZSBkb2Vzbid0IGxpa2UgaXQgYmVjYXVzZSBHb29nbGUgb3ducyBBbmRyb2lkLCBBcHBsZSdzIG1haW4gY29tcGV0aXRpb24gaW4gdGhlIG1vYmlsZSBkZXZpY2UgbWFya2V0LCBhbmQgYWNjZXB0aW5nIHRoYXQgaVBob25lcyBkZXNlcnZlIGFuIGF1dG9tYXRpYyBzcG90IGluIG1vc3QgKGlmIG5vdCBhbGwpIG5ldyBjYXJzIG1lYW5zIGFjY2VwdGluZyBhbmQgY29uY2VkaW5nIHRoYXQgQW5kcm9pZCBwaG9uZXMgZG8gbm90LiBXaHkgc2hvdWxkIEFwcGxlIGNvbXBhdGliaWxpdHkgYmUgdGhlIGRlZmF1bHQgYW5kIGxlYXZlIGFsbCB0aGUgQW5kcm9pZCB1c2VycyBvdXQgaW4gdGhlIGNvbGQ/IEFuZCB3aGF0IGNhbiBiZSBkb25lIGFib3V0IGl0PyBUd28gZ29vZCBxdWVzdGlvbnMsIHJlYWxseSwgYW5kIGZpbmRpbmcgdGhlc2UgYW5zd2VycyBpcyBleGFjdGx5IHdoeSB0aGUgT3BlbiBBdXRvbW90aXZlIEFsbGlhbmNlIChPQUEpIHdhcyBlc3RhYmxpc2hlZC4uIApNdW5jaGVuZXJzdHJhc3NlIGFuZCBLYWlzZXJzdHJhc3NlIGxlYWQgZWFzdCBmcm9tIHRoZSBIYXVwdGJhaG5ob2YuIFRoZSBhcmVhIGlzIHRoZSBmb3JtZXIgcmVkIGxpZ2h0IGFyZWEgYnV0IHRoaXMgaGFzIG1vdmVkIG1vc3RseSB0byB0aGUgVGF1bnVzdHJhc3NlIGFuZCB0aGUgY3Jvc3Mgc3RyZWV0cyBmcm9tIEthaXNlcnN0cmFzc2UgYnV0IHRoZSBwcm94aW1pdHkga2VlcHMgcmVudCBsb3cgc28gZ29vZCBldGhuaWMgZm9vZCBjYW4gYmUgaGFkIChyZWxhdGl2ZWx5KSBjaGVhcGx5LiAKRGlkIHRoaXMgd2l0aCBhbiBleC4gClRoZSBwcm9qZWN0IGlzIHJlbGlnaW91c2x5IG5ldXRyYWwuIFRoaXMgbWVhbnMgdGhlIHdvcmsgd29uIGJlIGxpbWl0ZWQgdG8gb25lIHJlbGlnaW91cyB0cmFkaXRpb24gYW5kIHdpbGwgaW5jbHVkZSBzdHVkeSBvZiB0aGUgcmVhc29ucyBmb3IgYXRoZWlzbSBhbmQgYWdub3N0aWNpc20sIE9saXZlaXJhIHNhaWQuIFNjaG9sYXJzIG9mIGV2ZXJ5IHBlcnN1YXNpb24gd2lsbCBiZSBpbnZvbHZlZC4KUHJpdmF0ZSBGcmVlcm9sbHMgaGF2ZSBmYXIgbGVzcyBwbGF5ZXJzIHRoYW4gdGhlIHB1YmxpYyBvbmVzIGFuZCB1c3VhbGx5IG9mZmVyIGJpZ2dlciBwcml6ZSBwb29scy4gClllYWgsIHRoaXMgaXMgd2hhdCBJIHdhcyBnb25uYSBzYXkuIFNlYXNvbmVkIHRlYWNoZXJzIGtub3cgdGhhdCB0ZWVuYWdlcnMgYXJlIGxpa2UgYmxvb2Rob3VuZHMsIHRoZXkgbmV2ZXIgbG9zZSB0aGUgc2NlbnQgYXMgbG9uZyBhcyB0aGV5IGRlZW0gaXQgaW50ZXJlc3RpbmcuIApTdGFtbWxhZ2VyIEksIEkgdGhpbmsuIApZZWFoLCB0aGlzIGlzIHdoYXQgSSB3YXMgZ29ubmEgc2F5LiBTZWFzb25lZCB0ZWFjaGVycyBrbm93IHRoYXQgdGVlbmFnZXJzIGFyZSBsaWtlIGJsb29kaG91bmRzLCB0aGV5IG5ldmVyIGxvc2UgdGhlIHNjZW50IGFzIGxvbmcgYXMgdGhleSBkZWVtIGl0IGludGVyZXN0aW5nLiAKU2luY2UgdGhlIGJvb2tzIGFuZCB0aGUgbW92aWUsIEZvcmtzIGFuZCBUd2lsaWdodG1hbmlhIGhhdmUgYmVjb21lIGJpZyBidXNpbmVzcy4KQW5kIHdoeSBkbyB5b3UgYXNzb2NpYXRlIG1lIHdpdGggb3RoZXIgY3JpbWluYWwgYWN0cz8gSSBoYXZlIG5ldmVyIHJvYmJlZCwga2lsbGVkLCBicm9rZW4gaW4gdG8sIG9yIGRlZmFjZWQuIApJIHJlYWxseSBkb24gbmVlZCB0byB1c2UgaXQsIHNpbmNlIG15IGNlbGxwaG9uZSBhbmQgaG9tZSBhbmQgd29yayBjb21wdXRlciBhcmUgYWxsIHBhaXJlZCB3aXRoIGEgdW5pcXVlIHBhc3N3b3JkLgpEYW5zIGwnaW5jb25zY2llbnQgY29sbGVjdGlmLCBsZXMgZ2VucyBwZW5zZW50IHF1J2lscyBvbnQgZGogY29ubnUgY2VsYSBsb3JzIGQndW5lIHRlbXB0ZS4gCk9uY2UgSSBnb3QgdG8gdGhlIGZpcnN0IHNldHRsZW1lbnQgb3V0c2lkZSBvZiB0aGUgVmF1bHQgLyBUcmliZSBJIGdvdCBmcnVzdHJhdGVkIHRhbGtpbmcgdG8gTlBDcyB3aGVuIHN1ZGRlbmx5IGZvdW5kIG91dCB0aGF0IEkgY291bGQganVzdCBhdHRhY2sgdGhlIHRvd25zcGVvcGxlLiAKV2hhdCBpcyBpdCBhYm91dCBwb2tlciB0aGF0IG1ha2VzIHRoZSBnYW1lIGEgdGFyZ2V0IG9mIHBhdGVybmFsaXN0aWMgbGF3cz8gSXQgY2FuJ3Qgc2ltcGx5IGJlIHRoZSBtb25leSBhdCByaXNrICAgYmlsbGlvbnMgb2YgZG9sbGFycyBhcmUgZ2FtYmxlZCBvbiBXYWxsIFN0cmVldCBldmVyeSBkYXkgd2l0aCB0aGUgZW50aHVzaWFzdGljIHN1cHBvcnQgb2YgdGhlIGZlZGVyYWwgZ292ZXJubWVudC4gSWYgd2FnZXJzIGFyZSBsZWdpdGltYXRlIGluIGZpbmFuY2UsIHRoZW4gdGhleSBzaG91bGQgYmUgb2theSBpbiBhIGNhcmQgcm9vbS4gUG9rZXIgaXNuJ3QgY3JhcHMgICBhIGdhbWUgaW4gd2hpY2gsIGFjY29yZGluZyB0byB0aGUgbGF3cyBvZiBwcm9iYWJpbGl0eSwgcGxheWVycyB3aWxsIGFsd2F5cyBsb3NlIGluIHRoZSBsb25nIHJ1bi4gCk15IGRhZCB3YXNuIGV4YWN0bHkgdGhlIG5pY2VzdCBraWQsIGFuZCBoZSB0ZWxscyBhIHN0b3J5IGFib3V0IG9uZSBDaHJpc3RtYXMgaW4gdGhlIDUwcyB3aGVuIGhlIHdhcyBhIGtpZC4gVGhlcmUgd2FzIHRoaXMga2lkIGhlIGRpZG4gbGlrZSwgYW5kIGhlIGhhZCB0aGlzIG5hc3R5IGRhZCwgdG9vLiBNeSBncmFuZG1vdGhlciBnb3Qgc29tZSBwZXJmdW1lIGZvciBDaHJpc3RtYXMsIGFuZCBteSBkYWQgbm90aWNlZCB0aGUgYm94IHdhcyBqdXN0IHRoZSByaWdodCBkaW1lbnNpb25zIGZvciBjb250YWluaW5nIG9uZSBodW1hbiB0dXJkLiBUaGUgd2F5IGhlIHRlbGxzIGl0LCBjYXJlZnVsbHkgbWFuZXV2ZXJlZCBoaW1zZWxmIHNvIGFzIHRvIG1hbnVmYWN0dXJlIHRoZSBwcm9kdWN0IGRpcmVjdGx5IGludG8gdGhlIGJveCwgd2hpY2ggaGUgdGhlIGNhcmVmdWxseSBhbmQgYmVhdXRpZnVsbHkgd3JhcHBlZCwgd2l0aCBhIGJvdyBvbiB0b3AuIEhlIGxlZnQgdGhpcyBvbiB0aGUgcG9yY2ggb2YgdGhpcyBraWQsIGFuZCBrbm9ja2VkIGFuZCByYW4sIHdhdGNoaW5nIGZyb20gaGlkaW5nLiBIZSBzYWlkIHRoZSBkYWQgY2FtZSBvdXQsIGFuZCBzYXcgdGhlIGdpZnQuIEhlIHVud3JhcHBlZCBpdCByaWdodCB0aGVyZSwgYW5kIHlvdSBjb3VsZCBzZWUgdGhlIHJlYWxpemF0aW9uIG9uIGhpcyBmYWNlLiBBY2NvcmRpbmcgdG8gbXkgZGFkLCBoZSB3YXMgdGhpcyB3ZWlyZCBjb21iaW5hdGlvbiBvZiBsYXVnaGluZyBhbmQgYW5ncnksIGxpa2UgIlllYWggeW91IGdvdCBtZSBnb29kLCBidXQgc3RpbGwsIHRoYXQgaHVtYW4gc2hpdC4iCiAwIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnb0kgY2FuJ3QgYmVsaWV2ZSBhbnkgb2YgeSdhbGwgdGhpbmsgdGhpcyBkb2Vzbid0IGxvb2sgYW1hemluZyBmb3IgYSBnYW1lIHdpdGggYSBIVUdFIG1hcCB0aGF0IGluY2x1ZGVzIDEwMCBwbGF5ZXJzLiBJZiB5b3Ugd2FudCB0aGUgZ2FtZSB0byBsb29rIHByZXR0aWVyIHR1cm4geW91ciBncmFwaGljcyBzZXR0aW5ncyB0byBhbGwgVWx0cmEuIE90aGVyd2lzZSBzdGZ1LCBiZWNhdXNlIG5vbmUgb2YgeW91IGNhbiBhcHByZWNpYXRlIGhvdyBnb29kIHRoaXMgZ2FtZSBsb29rcyBmb3IgYSBjb21wZXRpdGl2ZSAxMDAgcGxheWVyIGdhbWUuIApQbGF5IGZyZWUgcG9rZXIgYW5kIHdpbiByZWFsIG1vbmV5IC4gTm8gRGVwb3NpdCBpcyBOZWVkZWQgYW5kIFlvdSB3aWxsIGJlIHVuZGVyIG5vIG9ibGlnYXRpb25zLiBKdXN0IHBsYXkgaW4gZnJlZSBwb2tlciBnYW1lcyBvbmxpbmUgYW5kIGdldCByZXdhcmRlZCB3aXRoIHJlYWwgbW9uZXkgcHJpemVzIHdoZW4gWW91IHdpbi4gCkFuZCB3ZSBjYW5ub3QgaGF2ZSByZWFsIHJlZm9ybSB3aGVuIHdlIHNpbXVsdGFuZW91c2x5IGJlbGlldmUgdGhhdCBncmVlZCBpcyBnb29kLgpXaG8ga25vd3MsIGJ1dCBpbiB0ZXJtcyBvZiBhbiBleGNlbGxlbnQgd2F5IHRvIHNwZW5kIFN0LiBWYWxlbnRpbmUgRGF5LCB3aGF0IGNvdWxkIGJlIGJldHRlciB0aGFuIHRlbGxpbmcgdGhlIHBvb3IgYmxva2Ugc2l0dGluZyBhY3Jvc3MgZnJvbSB5b3UgdGhhdCB5b3UgaGF0ZSBoaXMgY2xvdGhlcywgaGlzIG5vc2UsIGFuZCBoaXMgZW50aXJlIHBhdGhldGljIGV4aXN0ZW5jZS4gCkJvdGggY2hvaWNlcywgdG8gcmF0aWZ5IGFuZCBub3QgdG8gcmF0aWZ5LCB3ZXJlIGdyb3NzIGFuZCB3b3VsZCBoYXZlIG5lZ2F0aXZlbHkgYWZmZWN0ZWQgb3VyIGNvbW11bml0eS4gSWYgd2UgY29udGludWVkLCBhIHdob2xlIG90aGVyIHNldCBvZiBwZW9wbGUgd291bGQgaGF0ZSB1cy4gT25jZSBhZ2FpbiwgdGVhY2hlcnMgY2FuIHdpbiBubyBtYXR0ZXIgd2hhdCB0aGV5IGRvLiBJdCBoYXMgcHV0IHRoZSBlbnRpcmUgZGlzdHJpY3QgaW4gYW4gdW5zdXN0YWluYWJsZSBiaW5kLgpGdC4gU2luZ2xlIGZhbWlseSBob21lLiAKUG9rZXJzdGFycyBvZGRzCkp1c3QgYmVjYXVzZSB5b3UncmUgc2tpbm55IGRvZXNuJ3QgbWVhbiB5b3UncmUgaGVhbHRoeSBvciBub3Qgc2V4dWFsbHkgYXR0cmFjdGl2ZSBlaXRoZXIuIEFuZCB5b3Ugc2F5IHNleHVhbGx5IGF0dHJhY3RpdmUgYXMgaWYgYmVhdXR5IGlzIG5vdCBpbiB0aGUgZXllIG9mIHRociBiZWhvbGRlci4gV2UgYWxsIGhhdmUgb3VyIHByZWZlcmVuY2VzIGFuZCB5b3UgY2FuJ3QgaG9tb2dlbml6ZSB0aGUgc3RhbmRhcmQgb2YgYmVhdXR5IGluIHN1Y2ggYW4gb2JqZWN0aXZlIGZhc2hpb24uCkxlc3MgdGhhbiAxMCB0aWNrZXRzIHdlcmUgYXZhaWxhYmxlIGluIHRoZSBzdGFuZGluZyBhcmVhIG5lYXIgdGhlIHN0YWdlIGFuZCBlYWNoIHdhcyBsaXN0ZWQgZm9yIGFuIGFza2luZyBwcmljZSBvZiAkMSwyMDAgdG8gJDQsMjAwIG9uIHJlc2VsbGVyIFNlYXRHZWVrLiAKRnVja2luZyBzdWNrcyB0aGV5IGRpZCB0aGlzIHRvIHlvdSBtYW4uLiAKUGF5IGF0dGVudGlvbiB0byB0aGUgc2VxdWVuY2Ugb2YgY2FyZHMgKHRvIHJlcHJlc2VudCBhIHBvc3NpYmxlIHN0cmFpZ2h0KSwgc3VpdGUvY29sb3IgKGEgcG9zc2libGUgZmx1c2gpIG9uIHRoZSBmbG9wIGFuZCB3YXRjaCBob3cgdGhlIGJldHRpbmcgdW5mb2xkcy4gVHJ5IHRvIHJlcHJlc2VudCBoYXZpbmcgYSBjZXJ0YWluL3NwZWNpZmljIGhhbmQgYnkgaGF2aW5nIGFuIGF0dGl0dWRlLCBnb29kIHJlcHV0YXRpb24sIGFuZCBiZWluZyBjb25zaXN0ZW50IHdpdGggeW91ciBiZXR0aW5nIHBhdHRlcm4uLiAKT2J2aW91c2x5IHRoZSBlbmVtaWVzIGFyZW4gcGFydGljdWxhcmx5IGNoYWxsZW5naW5nIGluIHNreXJpbSBhbmQgYXJlIHN0dXBpZCBidXQgSSBmZWVsIGxpa2UgSSBjYW4gbWFrZSBpdCBsb29rIHByZXR0eSBnb29kLCB3aGljaCBpcyBwcm9iYWJseSB3aGF0IEkgY2FyZSBhYm91dCBtb3JlLiAKSSBub3RpY2VkIGhvdyBuaWNlIGl0IGJlZW4gZHJpdmluZyBhcm91bmQgdGhlIGxhc3QgZmV3IGRheXMgd2l0aG91dCB0aGUgcm9hZHMgY3Jvd2RlZCB3aXRoIHN0dWRlbnRzIChJIHNheSB0aGF0IGFzIGEgc3R1ZGVudCBoZXJlKSwgc28gSSBqdXN0IHRoaW5rIHlvdSBuZWVkIGEgcmVhbGx5IGdvb2QgcmVhc29uIHRvIGFkZCBhbm90aGVyIDUwMCBwZXJtYW5lbnQgcmVzaWRlbnRzIHRvIGEgdG93biB0aGF0IHlvdXIgdW5pdmVyc2l0eSBvdXRncmV3IDE1IHllYXJzIGFnby4uIApIYWQgaGUgcGlja2VkIDQ3MGtnIHNxdWF0LCAyNTVrZyBiZW5jaCBhbmQgYSA0MjBrZyBkZWFkbGlmdCwgaGUgd291bGQgYnJlYWsgdGhlIHJlY29yZC4gCkhvdyBpdCBlZmZlY3RzIGluZGl2aWR1YWxzIGlzIHRoYXQgbGV0IHNheSB5b3UgaGF2ZSBhbiBpZGVhIHRvIHN0YXJ0IGEgcmVzdGF1cmFudC4gUmlnaHQgbm93IHlvdSBoYXZlIHZlcnkgbGl0dGxlIG1vbmV5LiBZb3Ugd29yayBhIGpvYiB0aGF0IHBheXMgJDI1L2hycy4gSWYgeW91IHNhdmUgdXAgZm9yIHRoZSByZXN0YXVyYW50LCBpdCBjb3VsZCBiZSB5ZWFycyBiZWZvcmUgeW91IGhhdmUgZW5vdWdoIHRvIG9wZW4gYSByZXN0YXVyYW50LiBTbyB5b3UgYm9ycm93LiBUaGUgYmFuayBsZW5kcyB5b3UgJDUwMEsuIFlvdSBidWlsdCB5b3VyIHJlc3RhdXJhbnQgYW5kIGN1dCB0aGUgcmliYm9uLiBOb3cgeW91IG93ZSAkNTAwSyB0byB0aGUgYmFuayBidXQgYXNzdW1pbmcgeW91ciBjaG9pY2UgdG8gb3duIGEgcmVzdGF1cmFudCBpcyBhIGdvb2QgaWRlYSBhbmQgeW91IGhhdmUgdGhlIG5lY2Vzc2FyeSB3b3JrIGV0aGljLCB5b3UgYXJlIG5vdyBhcmUgZ2VuZXJhdGluZyBzdWJzdGFudGlhbGx5IG1vcmUgcmV2ZW51ZSB3aXRoIGEgcmVzdGF1cmFudCB0aGFuIGF0IGEgJDI1L2hyIGpvYiBzbyB5b3UgY2FuIHBheSBiYWNrIHlvdXIgJDUwMEsgbG9hbiBtdWNoIGZhc3RlciBpdCB0YWtlIHRvIHNhdmUgdXAgJDUwMEsgbWFraW5nICQyNS9oci4gTXVsdGlwbHkgdGhhdCBieSBldmVyeSBidXNpbmVzcyBvd25lciBhbmQgdGhhdCB3aGF0IHlvdSBjYWxsIGEgY29uc3VtZXIgZWNvbm9teS4KVGlja2V0bWFzdGVyIENhbmFkYSBjaGllZiBvcGVyYXRpbmcgb2ZmaWNlciBQYXR0aSBBbm5lIFRhcmx0b24gc2FpZCB0aGUgcm9sbG91dCB3YXMgZGVlbWVkIGEgc3VjY2VzcyBieSB0aGUgY29tcGFueSB3aGVuIFNwcmluZ3N0ZWVuIGxhdW5jaGVkIGhpcyBCcm9hZHdheSBzaG93IGxhc3QgeWVhci4gQWJvdXQgdGhyZWUgcGVyIGNlbnQgb2YgdGhlIHRpY2tldHMgdHVybmVkIHVwIG9uIHRoZSBzZWNvbmRhcnkgbWFya2V0LgpTdXJ2ZWlsbGFuY2UgdmlkZW8gY2FwdHVyZXMga2lkcyBmbGVlaW5nIHBsYXlncm91bmQgYW1pZCAnYnJhemVuJyBOb3J0aCBZb3JrIGd1biBiYXR0bGUKOC4gU3VjaCBhIGNoYW5nZSBpbiBzdHJhdGVneSBtYXkgaW5kaWNhdGUgb25nb2luZyBwcm9ibGVtcyBhcyBhbHRlcmF0aW9ucyBpbiBjb250cm9sIG9mIGJhY2sgbXVzY2xlcyBsZWFkIHRvIGNoYW5nZXMgaW4gam9pbnQgbG9hZGluZyBraW5lbWF0aWNzIG9mIHQgc3BpbmUuCkFzIG91ciBib2RpZXMnIGFnZSwgb3VyIG5lcnZlIGVuZGluZ3MgYmVjb21lIGxlc3Mgc2Vuc2l0aXZlIGluIHBhcnRzIG9mIG91ciBib2R5LCBwYXJ0aWN1bGFybHkgaW4gb3VyIGV4dHJlbWl0aWVzLiBUaGF0IGJlaW5nIHNhaWQsIHJlZmxleG9sb2d5IGhhcyBiZWVuIGNvbm5lY3RlZCB3aXRoIHN0aW11bGF0aW5nIG1vcmUgdGhhbiA3LDAwMCBkaWZmZXJlbnQgbmVydm91cyBlbmRpbmdzIGluIGEgc2luZ2xlIHNlc3Npb24sIHRoZXJlYnkgaW5jcmVhc2luZyB0aGVpciBmdW5jdGlvbiBhbmQgcmVhY3Rpdml0eS4gT3BlbmluZyBhbmQgY2xlYW5pbmcgb3V0IG5ldXJhbCBwYXRod2F5cyBjYW4gaGVscCBpbXByb3ZlIGZ1bmN0aW9uYWxpdHkgYW5kIGZsZXhpYmlsaXR5IG9mIG1hbnkgYXJlYXMgYXJvdW5kIHRoZSBib2R5LiBOZXVyYWwgcGF0aHdheXMgYXJlIGxpa2UgbXVzY2xlcywgc28gaXQgaXMgZ29vZCB0byB3b3JrIHRoZW0gb25jZSBpbiBhIHdoaWxlIHRvIGtlZXAgdGhlbSBzaGFycCEgQnkgYWxpZ25pbmcgdGhlIGZ1bmN0aW9uaW5nIG9mIHZhcmlvdXMgb3JnYW4gYW5kIG11c2NsZSBzeXN0ZW1zLCByZWZsZXhvbG9neSBjYW4gaW5jcmVhc2UgbWV0YWJvbGlzbSBhbmQgZW5lcmd5IGNyZWF0aW9uIHByb2Nlc3NlcyB3aXRoaW4gdGhlIGJvZHkuIElmIHlvdSBuZWVkIGEgYm9vc3QgaW4gZW5lcmd5IG9yIGFyZSBhbHdheXMgZmVlbGluZyBzbHVnZ2lzaCwgcGVyaGFwcyBhIHJlZmxleG9sb2d5IHNlc3Npb24gY2FuIGhlbHAgcHV0IHNvbWUgcGVwIGJhY2sgaW4geW91ciBzdGVwIQpOYXRpb25hbGlzdCBmZXR1c2lzbSwgbGlrZSBuYXRpb25hbGlzdCBzb2NpYWxpc20sIGlzIGludGVyZXN0ZWQgaW4gcmFjaWFsIHB1cml0eSwgbm90IGhpc3RvcmljYWwgYWNjdXJhY3kuIEl0IGludGVyZXN0ZWQgaW4gZGVwbG95aW5nIHRoZSBmZXR1cyB0byB0aGF0IGVuZC4uIApJIGdvIHRvIGEgZGlmZmVyZW50IGd5bSBub3cgYW5kIHVzZWQgdG8gZmVlbCB0aGUgd2F5IHlvdSBkbyBidXQgYWZ0ZXIgZ29pbmcgdGhlcmUgZm9yIGEgd2hpbGUsIEkgcmVhbGl6ZSBub2JvZHkgcmVhbGx5IGNhcmVzLiBJZiB0aGV5IHRoaW5raW5nIGFueXRoaW5nIGl0IHByb2JhYmx5ICJHb29kIGZvciBoZXIgZm9yIGdldHRpbmcgaGVhbHRoaWVyLiIgSSBrbm93IGl0IGhhcmQgYnV0IGp1c3QgdHJ5IG5vdCB0byBmb2N1cyBvbiB3aGF0IHlvdSB0aGluayBwZW9wbGUgYXJlIHRoaW5raW5nIGFib3V0IHlvdSBhdCB0aGUgZ3ltLi4gCkJ1dCBiZSBjb25zaWRlcmF0ZS4gCjI0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KTm8gbWFzdGVycGllY2VzLCBubyBpbnZvY2F0aW9ucywgbm8gZXRlcm5hbCBzdGFwbGVzLiBCdXQgSSBjYW4gZ2V0IGEgZmxpY2tlcndpc3AgZm9yIDEwIHRpeCEuIApXb3J0aCBub3RpbmcgICBJIHdlbnQgYmFjayBhbmQgbG9va2VkIGF0IG15IGxvbmdlc3QgcmlkZSAoMTE0IG1pbGVzKSBhbmQgSSBtYW5hZ2VkIGEgMTcuMiBtcGggYXZlcmFnZSBmb3IgdGhhdC4gU28gSSB0aGluayBJIGluIGJldHRlciBzaGFwZSBub3cgdGhhbiBJIHdhcyB0aGVuLiBUaGF0IHdhcyBhbHNvIHNvbG8uUGVuZGluZyB3aGF0IHRoZSBkb2N0b3Igc2F5cywgSSBtYXkgdGFrZSBhIGZldyB3ZWVrcyBvZmYgYW5kIGF2b2lkIHRoZSBpbXBhY3QgKG9yIGp1c3QgdXNlIHRoZSBlbGxpcHRpY2FsIGF0IHRoZSBZIGluc3RlYWQpLiAKIkkgZGlkbid0IHBhc3MgZm9yIHNpeCBtb250aHMsIiBoZSBzYXlzLiAKTm93LCBrbm93aW5nIHRoZSBjbGVyayB3YXMgbWlzc2luZywgaGUgZGlkLiAKV2hpbGUgR2lsbGlhbiBGbHlubiBqdXN0IGhhcyBBbW1hIGdvaW5nIHRvIGp1dmVuaWxlIGRldGVudGlvbiB3aXRoIHRoZSBwb3NzaWJpbHR5IG9mIHdhbGtpbmcgb3V0IHdoZW4gc2hlIDE4LCBJIGp1c3QgZG9uIHNlZSB0aGF0IGhhcHBlbmluZy4gCiJJZiB0aGV5IGhhdmUgb24gYSAncmVhbCcgY291cGxlLCBpdCBpcyBhY3R1YWxseSBtb3JlIGxpa2VseSB0aGF0IHRoZXkgd2lsbCBwb3J0cmF5IHVuZGVzaXJhYmxlIGdlbmRlciByb2xlcy4gRnVydGhlciwgcGVvcGxlIHdobyB2aWV3IG1vcmUgc2V4IGZpbG1zIGFjdHVhbGx5IGhvbGQgbW9yZSBlZ2FsaXRhcmlhbiBiZWxpZWZzLCBub3QgbGVzcywiIHNoZSBleHBsYWlucy4gClJhaXNlZCBCYXB0aXN0L01ldGhvZGlzdCBieSBhIGRldm91dCBmYW1pbHksIGluY2x1ZGluZyBzdW1tZXIgY2FtcHMsIHZhY2F0aW9uIGJpYmxlIHNjaG9vbCwgdGhlIHdob2xlIG5pbmUuIApEaXNjb3ZlcmVkIHRoYXQgdGhlcmUgd2FzIG5vdGhpbmcgY29kZXBlbmRlbnQgYWJvdXQgdGhlIHJlbGF0aW9uc2hpcC4gCkFzaWFucyBhcmUgZXh0cmVtZWx5IGRlY2VudCB3aGVuIGl0IGNvbWVzIHRvIGhvc3BpdGFsaXR5LCBhbmQgZXZlbiB0aG91Z2ggdGhleSB3ZXJlIHRoZSBndWVzdHMgYW5kIGxvd2tleSBleHBlY3RlZCB0byBiZSBjYXRlcmVkIHRvLCB0aGV5IHdvdWxkIGhhdmUgb2ZmZXJlZCB0byBwYXksIHVubGVzcyB0aGV5IGtuZXcgZm9yIHN1cmUgdGhhdCBlcmljIGluc2lzdGVkIG9uIHBheWluZyBmb3IgdGhpbmdzLmlkaywgaXQgYW4gYXNpYW4gdGhpbmcgdGJoLiAKV2hlbiB5b3UgdGhyb3cgYSBwdW5jaCB0aHJvdyBpdCBhdCBleWUgbGV2ZWwgb3Igc2xpZ2h0bHkgaGlnaGVyLgpWYS4gRGllZCBGcmkgIE1hbmRlbi4gNDFTIFMuIFNlY29uZCBTdC4gcGJvbmUgNDQ3LiBVIGVscmNpbGxhdChvYSBhY2VudC4gQSBCcm93bmllIFNjb3V0IHRyb29wIGlzIGJlaW5nIG9yZ2FuaXplZCBoZXJlIGFuZCBtb3R0aV5ycyBvZiAybmQgZ3JhZGVycyB3aG8gYXJlIGludGVyZXN0ZWQgaW4gaGF2aW5nIHRoZWlyIGRhdWdodGVycyBiZWNvbWUgbWVtYmVycyBhcmUgYXNrZWQgdG8gbm90aWZ5IE1ycy4gV2lsIG1lciBBbmRlcnNvbiwgNDc1IEosIG9yIE1ycy4gUmF5IFNlbHZvYSA1NEcgTSwgYnkgVHVlc2RheSwgPT0/PUVER0VCVE95LCBXSTMuPTVePSBSSUFMVE8gVEhFQVRFUiBFQVNUIFRJTUUgVE9OSUdIVCBXaWwgNjozMCAgIDg6M1MgU1VOLiwgTU9OLiAKT2YgY291cnNlIGhlIHdhbnRzIHRvIGVhdCBjaGlja2VuIG51Z2dldHMgYW5kIHNuYWNrIGNha2VzLCBoZSBhIGtpZDsgdGhlIGlzc3VlIGlzIHRoYXQgeW91IGFyZSByZXNwb25zaWJsZSBmb3IgbWFraW5nIHN1cmUgaGUgZm9sbG93cyB0aGUgcnVsZXMgeW91ciBzaXN0ZXIgaGFzIHNldCBvdXQuIAoiT2ggSSBvbmx5IGhlcmUgZm9yIGEgdHJpbSBhbmQgbm90IGEgY3V0IHNvIGRvbnQgY2hhcmdlIG1lIGZvciBhIGN1dCIuIApLaXJrIGFsc28gZGVsaXZlcmVkIGRvbWVzdGljIHBvbGljaWVzIHRoYXQgaGF2ZSBjaGFuZ2VkIE5ldyBaZWFsYW5kIGZvcmV2ZXIsIGFuZCBmb3IgdGhlIGJldHRlciwgbW9zdCBwZW9wbGUgd291bGQgYXJndWU6IEFDQywgdGhlIERQQiwgdGhlIFdhaXRhbmdpIFRyaWJ1bmFsLCBhbmQgcGxlbnR5IG1vcmUuLiAKQWxzbyBXYXJlIGxpZWZlcm4gbGFzc2VuLCBMYXN0c2NocmlmdCB6dXJja2J1Y2hlbiBsYXNzZW4sIFdhcmUgYmVoYWx0ZW4uIApUaGUgRWFzdCBWYW5jb3V2ZXIgY2luZW1hIHdhcyBwYWNrZWQgd2l0aCBDcmF6eThzIGFsdW1uaSwgYWxvbmcgd2l0aCBob3BlZnVscyBhbmQgdGhpcyB5ZWFyIGNyb3Agb2Ygc2l4IHBpdGNoIHdpbm5lcnMgY2hvc2VuIGZyb20gMjAwIGFwcGxpY2FudHMuIFRoZXksIGFsb25nIHdpdGggaW5kdXN0cnkgbGVhZGVycyBhbmQgYXNwaXJpbmcgYWN0b3JzLCBjb252ZW5lZCB0byBuZXR3b3JrLCB3YXRjaCBwYXN0IGZsaWNrcyBhbmQgc3VwcG9ydCB0aGUgbmV4dCBnZW5lcmF0aW9uIG9mIGZpbG0gdGFsZW50LiAKWmVybyBwb2ludHMgaXMgcmVmZXJyZWQgdG8gYXMgbG92ZTMuIApFWENFUFQuIApJdCB3YXMgdW5mb3J0dW5hdGUgdGhhdCBzbyBtYW55IG9mIHRob3NlIGF0dGFja2VycyB3aWxsIGxpa2VseSBnZXQgYXdheSB3aXRoIHRoaXMgYW5kIGl0IGlzIHNhZCB0aGF0IHNvIG1hbnkgb2YgdGhlbSBhcmUgc28gaW5zZWN1cmUgYW5kIHdlYWsgdGhhdCB0aGV5IGFyZSBhZnJhaWQgdG8gZmlnaHQgc29tZW9uZSBvbmUgb24gb25lLiBUaGF0IGlzIHRoZSB3aG9sZSBnYW5nIGlzc3VlLCBub25lIG9mIHRoZW0gYXJlIG1hbiBlbm91Z2ggdG8gZmlnaHQgdGhlaXIgb3duIGZpZ2h0LiAKS2VlcCBhIHJlY29yZCBvZiB5b3VyIHdpbnMgYW5kIGxvc3Nlcy4gRm9yIGV2ZXJ5IGJldCB5b3UgcGxhY2Ugb3IgaGFuZCB5b3UgcGxheSwgd3JpdGUgZG93biB0aGUgb3V0Y29tZS4gCkR5aW5nIExpZ2h0IFtSRUxPQURFRF0gRlVMTCBJbmRpciBUb3JyZW50IEhJWkxJIEluZGlyIC4gMjYgVGhuZyBObSAyMDE1IC4gRHlpbmcgTGlnaHQgVXBkYXRlIHYxLjIuMSBJbmNsIERMQyBSRUxPQURFRC4gCkEgcGxheWVyIHdpbGwgcmVjZWl2ZSBhIHdhcm5pbmcgZm9yIGhpcyBmaXJzdCBvZmZlbmNlLCBiZSBmaW5lZCAkMiwwMDAgZm9yIGhpcyBzZWNvbmQsICQzLDAwMCBmb3IgaGlzIHRoaXJkLCAkNCwwMDAgZm9yIGhpcyBmb3VydGggYW5kICQ1LDAwMCBlYWNoIGZvciBoaXMgZmlmdGgsIHNpeHRoLCBzZXZlbnRoIGFuZCBlaWdodGggZW1iZWxsaXNobWVudCBwZW5hbHRpZXMuCnRoZSBwZW50aG91c2Ugb3IgYmFzZW1lbnQgYmVja29ucwpUaGVzZSBhcmVuJ3QgbXkgc2VjcmV0cy4gVGhlc2UgYXJlIHRoZSBDaHVyY2gncyBkaXJ0eSBzZWNyZXRzLCcnIE1yIFBhcm1ldGVyIHNhaWQgdGhpcyB3ZWVrLiBJbiAyMDA5IEZhdGhlciBCcm9jayBwcm9jbGFpbWVkIGhpcyBpbm5vY2VuY2UgYWZ0ZXIgMjYgc2VyaW91cyBjaGlsZCBzZXggY2hhcmdlcyBhZ2FpbnN0IGhpbSB3ZXJlIHdpdGhkcmF3biBhdCBhIGNvbW1pdHRhbCBoZWFyaW5nIHRoYXQgZGVtb25zdHJhdGVkIHRoZSBzb21ldGltZXMgaW5zdXJtb3VudGFibGUgb2JzdGFjbGVzIGZhY2VkIGJ5IHZpY3RpbXMgb2YgaGlzdG9yaWMgY2hpbGQgc2V4dWFsIGFidXNlIGluIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbS4gCkkgbXlzZWxmIGhhZCBvbmx5IHNjYW50IG5vdGlvbnMgb2Ygd2hhdCBtYXNzYWdlIGlzIGFib3V0IHdoZW4gSSBlbWJhcmtlZCB0aGlzIG1vbnRoIG9uIGEgcXVlc3QgdG8gZXhwZXJpZW5jZSBhcyBtYW55IG1ham9yIG1vZGFsaXRpZXMgYXMgcG9zc2libGUuIFRob3VnaCBub3QgYSBtZXRob2Qgb2YgbWFzc2FnZSwgdGhlIGFuY2llbnQgYXJ0IG9mIGFjdXB1bmN0dXJlIG5ldmVydGhlbGVzcyB0YXJnZXRzIG1hbnkgb2YgdGhlIHNhbWUgdGhpbmdzIG1hc3NhZ2UgZG9lczogbXVzY2xlIHBhaW4gYW5kIHN5c3RlbWljIGlsbG5lc3Nlcy4gSXQncyBhbHNvIGEgcHJhY3RpY2UgbWFueSBwZW9wbGUgc3dlYXIgYnkuLiAKV2Ugbm90IGhhdmluZyBzZXguIEkgdGFsayBhYm91dCB3aGF0IEkgZXhwZWN0ICh3aGV0aGVyIEkgd2FudCBhIGNvbW1pdG1lbnQsIG9yIG5vdCBsb29raW5nIGZvciBhbnl0aGluZykuIApDcmVhdGUgYWx0ZXJuYXRlIGJ1ZGdldHM6IEV2ZW4gdGhlIGJlc3QgcGxhbnMgaGF2ZSB0byBkZWFsIHdpdGggYSBjdXJ2ZWJhbGwgb3IgdHdvLiBUaGF0J3MgT0suIElmLCBmb3IgZXhhbXBsZSwgeW91IGJ1ZGdldCAkNDAgZm9yIGVpdGhlciBNaWtlIFRyb3V0IG9yIE1vb2tpZSBCZXR0cyBhbmQgdGhlbiBib3RoIGdvIGZvciAkNDUsIHlvdSBjYW4gc3BsaXQgd2hhdCB5b3Ugd291bGQgaGF2ZSBwYWlkIGJldHdlZW4gb25lIG9mIHRob3NlIHN0YXJzIGFuZCBhIGxvd2VyIGxldmVsIHRhbGVudCBpbnRvIHR3byBwbGF5ZXJzIGZvciAkMjUuIFlvdSBkb24ndCBoYXZlIHRvIGNoYXNlIGFub3RoZXIgaGlnaCBwcmljZWQgcGxheWVyLiBZb3UgZG9uJ3QgaGF2ZSB0byBwYW5pY2UgICB5b3UganVzdCBwaXZvdCB0byBQbGFuIEIsIHdoaWNoLCBpZiB5b3UgcGxhbm5lZCBhaGVhZCwgd2lsbCBhbHNvIGJlIGEgc29saWQgY291cnNlIG9mIGFjdGlvbi4gWW91IHNob3VsZCBhbHNvIGhhdmUgYSBQbGFuIEMsIGp1c3QgdG8gYmUgc2FmZS4KSWYgeW91IGJlZ2FuIHlvdXIgU3Vic2NyaXB0aW9uIHdpdGggYSBwcm9tb3Rpb25hbCByYXRlLCB5b3VyIFN1YnNjcmlwdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgcmVuZXcgYXQgdGhlIHJlZ3VsYXIgU3Vic2NyaXB0aW9uIHJhdGUgaW5kaWNhdGVkIGluIHlvdXIgaW5pdGlhbCBTdWJzY3JpcHRpb24gb3JkZXIuCkd1ZXNzIHdoYXQgaGUgZGlkPyBZZWFoIGhlIHNhdmVkIHVwIGEgZGVwb3NpdCBvbiBhIGhvdXNlLiAKVG8gU3lyaWFuIHJlYmVscy4gClRoZXkga25ldyBldmVyeXRoaW5nIGFib3V0IGl0LiBUaGVyZSBhcmUgYWxsZWdlZGx5IDE3NSBvdGhlciBuYW1lcywgd2hpY2ggd291bGQgbWVhbiB0aGV5IGhhdmUgMjAwIHBlb3BsZSBpbiB0aGlzLiAKVGhlIHJpZGUgd2lsbCBmb2xsb3cgdHJhaWxzIHRocm91Z2ggdGhlIERpeGllIE5hdGlvbmFsIEZvcmVzdCBhbmQgQ2VkYXIgQnJlYWtzIE5hdGlvbmFsIE1vbnVtZW50IGFuZCB3aWxsIGluY2x1ZGUgZml2ZSBzdG9wcyB0byBwaWNrIHVwIGFub3RoZXIgcGxheWluZyBjYXJkLiBSaWRlcnMgYXJlIGVuY291cmFnZWQgdG8gc25hcCBiZWF1dGlmdWwgcGhvdG9zIGFsb25nIHRoZSByaWRlLCBhbmQgQnJpYW4gSGVhZCBvZmZpY2lhbHMgd2lsbCBwb3N0IHBob3RvcyBvZiB0aGUgZGF5IG9uIHRoZSB0b3duJ3Mgd2Vic2l0ZSBhbmQgRmFjZWJvb2sgcGFnZS4uIApNYXRoIHNraWxscyBmb3IgY29tcHV0aW5nIG9kZHMgYXJlIGEgbmVjZXNzYXJ5IHNraWxsIGluIHBva2VyLgpPdmVyIHRoZSB3ZWVrZW5kLCB0aGVyZSBhcmUgcGFuY2FrZSBicmVha2Zhc3RzLCBhbiBvdXRkb29yIGFuZCBpbmRvb3Igc3RhZ2UgYW5kIGxhcmdlIHRlbnQgZm9yIGVudGVydGFpbm1lbnQgYXMgd2VsbCBhcyBzcG9ydHMgc3VjaCBhcyBpY2UgYW5kIHJvYWQgaG9ja2V5LCBzbm93IHBpdGNoLCBzbm93IHZvbGxleWJhbGwgYW5kIGN1cmxpbmcuCkZvbGRzIHRvIG1lIGFuZCBJIHNlZSBubyByZWFzb24gbm90IHRvIHJlIHBvdCBzaW5jZSB0aGlzIGd1eSBoYXMgYmVlbiB3aWxkIGFsbCBuaWdodCBzbyBJIHJlIHBvdCB3ZSBnZXQgaXQgYWxsIGluIGZvciAzNzAwaXNoLCBoZSBoYXMgbWUgY292ZXJlZC4gCkhpcyB3b3Jkcy4gV2hlbiBoZSBnb3QgdG8gdGhlIHdpbmRvdyBpIGNhbG1seSB0b2xkIGhpbSBpIHdhcyBjYXJyeWluZyB3aXRoIG15IGhhbmRzIG9uIHRoZSB3aGVlbC4gCklmIHlvdSdyZSBpbnRlcmVzdGVkLCBnbyBiYWNrIGFuZCBnZXQgdGhyb3VnaCBUaGUgTWF0cml4IGlmIHlvdSBoYXZlbid0IGFscmVhZHkuIFNlY29uZCB3YXMgb2ssIHRoaXJkIHdhcyBzbyBiYWQgSSBsZWZ0IHRoZSB0aGVhdGVyIGJvcmRlcmxpbmUgZGVwcmVzc2VkLi4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlQmV0dGluZyBQb2tlciBDYXNpbm8KVGhpcyBwcm90ZWN0cyBldmVyeW9uZSwgYW5kIHB1dHMgdGhlIGJ1cmRlbiBvZiBmaW5kaW5nIGEgc2FmZSBwb3B1bGF0aW9uIGZvciB1bnZhY2NpbmF0ZWQga2lkcyB3aGVyZSBpdCBiZWxvbmdzICAgb24gdGhlIHBhcmVudHMuLiAKVGhlIG9ubHkgcXVlc3Rpb24gaXMgY2FuIHlvdSBzdG9wIGl0IGFuZCBzdGlsbCBpbXBvc2UgeW91ciB3aWxsIG9udG8gdGhlbS4gQ2FuIHlvdSBrbm93IGV4YWN0bHkgd2hhdCB0aGV5IGdvaW5nIHRvIGRvLCBhbmQgc3RpbGwgc3RvcCB0aGVtLiAKQnJhZCBHcm91eCB1ClN0YXJUcm9waWNzICAgT2hoIHRoYXQgd2FzIGEgZmF2b3JpdGUgb2YgbWluZSEgSSBib3VnaHQgaXQgb24gYSBjbGVhcmFuY2Ugc2FsZSBhdCBLQiB0b3lzIGFuZCByZWFsbHkgZW5qb3llZCBpdCBtb3JlIHRoYW4gSSB0aG91Z2h0IEkgd291bGQuIG5ldmVyIGJlYXQgaXQgdGhvdWdoISBUaW1lIGZvciBhIHBsYXl0aHJvdWdoIQpGaXJzdCB0byB0aGUgbGFzdCBwb2ludDogeW91IGdvdCBtZSB3cm9uZywgZGVjcmVhc2luZyB0aGUgcG9wdWxhdGlvbiBpcyBub3QgYW4gb3B0aW9uIGZvciBtZSwgaXQganVzdCB1c3VhbGx5IGdldHMgYnJvdWdodCB1cCBpbiB0aGUgY29udmVyc2F0aW9uLiBJZiB3ZSBzdG9wIGZlZWRpbmcgZm9kZGVyIGFuZCBsb29zZSA5MCA5NSUgb2YgdGhlIGtjYWwgdG8gYW5pbWFscyB3ZSBjYW4gZmVlZCB3YXkgbW9yZSBwZW9wbGUsIG90aGVyIGZhY3RvcnMgd291bGQgYmVjb21lIG1vcmUgaW1wb3J0YW50IGF0IHRoYXQgcG9pbnQuIFdlIHNob3VsZCB0cnkgdG8gc3RheSB1bnRlciAxMiBiaWxsaW9uLCBidXQgd2UgY2FuIGJlIHN1c3RhaW5hYmxlIHVwIHRvIHRoYXQgcG9pbnQsIGF0IGxlYXN0IHdpdGggZm9vZCBhbmQgd2F0ZXIuCkxpbWl0IHBva2VyIGlzIHJlY29tbWVuZGVkIGZvciBiZWdpbm5lcnMgd2hlcmUgYSBzZXQgYW1vdW50IGlzIGJldC4gSW4gbm8gbGltaXQgcG9rZXIsIGhvd2V2ZXIsIHlvdSBhcmUgYWJsZSB0byB3aW4gYmlnIHBvdHMgd2l0aCBhbGwgaW4gYmV0cywgZXZlbiB3aGVuIHlvdSBkb24ndCBoYXZlIHRoZSBiZXN0IGhhbmQuIApCZWltIGVyc3RlbiBCZXN1Y2g6IEVpbiBVcGdyYWRlIHVtIGRyZWkgS2F0ZWdvcmllbiwgYXVmIGVpbmUgQ2xhc3NpYyBTdWl0ZS4gRGEgbCBzaWNoIGVpbiA1IFN0ZXJuZSBIb3RlbCBuaWNodCBsdW1wZW4sIGF1Y2ggd2VubiBzb2xjaGVybGVpIEdlbmVyb3NpdCBpbiBidWNodW5nc2FybWVuIFNvbW1lcnplaXRlbiBuYXQgbGVpY2h0ZXIgZmFsbGVuLiBEZXIgR2FzdCBmcmV1dCBzaWNoLiAKTm8gaW5zdWx0cyBvciBhdHRhY2tzIG9mIGFueSBraW5kLiBBYnVzaXZlIHBvc3RlcnMgd2lsbCBiZSBiYW5uZWQuIFdlIGRvbiBjYXJlIGlmIHRoZXkgY2FsbGVkIHlvdSBuYW1lcyBmaXJzdDsgcmVwb3J0IHRoZSBhYnVzZSB0byB1cyBhbmQgd2Ugd2lsbCBkZWFsIHdpdGggdGhlIG9mZmVuZGluZyBwYXJ0eSAoZ2V0dGluZyBpbnRvIGEgbmFtZSBjYWxsaW5nIHNwYXQgd2lsbCBsaWtlbHkganVzdCBnZXQgYWxsIHBhcnRpZXMgaW52b2x2ZWQgYmFubmVkLilUaGUgc2tpbGxzZXQgY3Jvc3NvdmVyIGJldHdlZW4gYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIGFuZCBhIG1hcmtldCB0cmFkZXIgaXMgYWN0dWFsbHkgaHVnZS4gTm90IG9ubHkgdGhlIHN0YXRpc3RpY2FsL3Byb2JhYmlsaXN0aWMgbWluZHNldCByZXF1aXJlZCwgYnV0IHRoZSBwc3ljaG9sb2dpY2FsIGFzcGVjdHMgb2YgZGVhbGluZyB3aXRoIHJpc2ssIHJpZGluZyBvdXQgZG93bnN3aW5ncy92YXJpYW5jZSBhbmQgY29uY2VudHJhdGluZyBvbiB0aGUgbGFyZ2VyIHBpY3R1cmUuCllvdSBtYXkgYWxzbyB0cnkgYSBnb29kIGFudGkgYmFjdGVyaWFsIGxvdGlvbiBhZnRlciByZW1vdmluZyBhIGhhbmduYWlsIHRvIHByZXZlbnQgYW55IGluZmVjdGlvbi4uIApZZXMsIHlvdSBhcmUgcGF5aW5nIGZvciB0aGlzIGV4cGVyaWVuY2UsIGFuZCBubyBvbmUgaXMgdGVhY2hpbmcgeW91IGFuZCB3YWggd2FoIHdhaCB3YWggaGVyZSBhIGJveCBvZiB0aXNzdWVzIHlvdSB3aGlueSBiYWJ5LiAKQWNjb3JkaW5nIHRvIEdlb3JnZSBGcm93IGluIFRoZSBFZGlzb24gQ3lsaW5kZXIgUGhvbm9ncmFwaC4gClRoZSB2aW50YWdlIERob25pLiAKWWVhIHRoaXMgaXNuJ3QgdHJ1ZSBhdCBhbGwgT1AuIExpa2UgdGhlIGNsZWFyZXN0IG9uZSB0aGF0IGlzIGp1c3QgZmxhdCBvdXQgd3JvbmcgaXMgImJvZHkgbGFuZ3VhZ2UiLgpJbiB0aGlzIHNob3csIHlvdSdsbCBoYXZlIHlvdXIgbWluZCBibG93biBieSBBbm5pZSdzIGluc2lnaHRzIHJlZ2FyZGluZyBmb2xsb3dpbmcgY29udmVudGlvbmFsIHdpc2RvbSAoZXZlbiBpZiBpdCBkb2Vzbid0IG1ha2Ugc2Vuc2UpLCBmb2N1c2luZyB0b28gbXVjaCBvbiB0aGUgcmVzdWx0cyAoYW5kIG5vdCBlbm91Z2ggb24gdGhlIHJpZ2h0IGNob2ljZSksIGFuZCBhY2NlcHRpbmcgYSBsZXZlbCBvZiB1bmNlcnRhaW50eSB0byBnYWluIGEgSFVHRSBhZHZhbnRhZ2Ugb3ZlciB5b3VyIGNvbXBldGl0aW9uLiBBbm5pZSdzIHRoZW9yaWVzIG9uICJ0aGlua2luZyBpbiBiZXRzIiBhcmUgZGVzaWduZWQgdG8gaGVscCBvdGhlcnMgbmF2aWdhdGUgYSB3b3JsZCB3aGVyZSB3ZSBjYW4ndCBiZSBjZXJ0YWluIG9mIGFuIG91dGNvbWUsIGJ1dCBzdGlsbCBjb21lIG91dCBvbiB0b3Agb3ZlciB0aW1lLgpEb24gbGV0IHRoZWlyIGludG9sZXJhbmNlIGFuZCBmZWFyIGRpY3RhdGUgeW91ciBvd24gaGFwcGluZXNzLiAKQ2hpbmEgaXMgbW92aW5nIHRvd2FyZCBiZWNvbWluZyBhIHNlcnZpY2VzIGVjb25vbXkgbGlrZSB0aGUgVVMsIHRoYXQgWGkgYmlnIDEwIHllYXIgcGxhbi4gQnV0IGlmIHRoZXkgbG9zdCB0aGUgVVMgaW1wb3J0cyBub3cgdGhleSB3b3VsZCBzaGl0IHRoZW1zZWx2ZXMsIGJhbGthbml6ZSBhbmQgdGhlcmUgd291bGQgYmUgY2l2aWwgd2FyIGFuZCByZXZvbHV0aW9uLgpQZW9wbGUgc3RhcnRlZCBnYW1ibGluZyBkZWNhZGVzIGFnbyBhbmQgdGhleSB1c2VkIGFsbCBraW5kcyBvZiB0aGluZ3MgYXMgcHJpemVzLiAKUHJldml0ZSBzdG9sZSB0cnVja2xvYWRzIG9mIGZ1cm5pdHVyZSBhbmQgYmFyIHN1cHBsaWVzIG91dCBvZiB0aGUgY2FzaW5vIHdhcmVob3VzZSwgY2xlYW5lZCBvdXQgdGhlIGd1ZXN0IHNhZmV0eSBkZXBvc2l0IGJveGVzIGFuZCByYW4gcG9rZXIgZ2FtZXMgYW5kIHByb3N0aXR1dGVzIG91dCBvZiB1bm9jY3VwaWVkIGhvdGVsIHN1aXRlcywgbWFraW5nIHdoYXQgaGUgY2FsbHMgImJpZyBtb25leS4gIgpFZGl0OiBoZXJlIHRoZSBwcmVzcyBjb25mZXJlbmNlIGZyb20gdGhlIHBvbGljZSBjb25kdWN0aW5nIHRoZSBpbnZlc3RpZ2F0aW9uLiBUaGV5IHJlYWxseSBvbmx5IHRhbGsgYWJvdXQgS3JhZnQuIAoxLzIgbGl2ZS4gSGVybyB3aXRoIEFUZGQgb24gYnV0dG9uLiBNUCBiZXRzIDEyLiBGb2xkcyB0byBoZXJvIHdobyByYWlzZXMgdG8gMzUuIChNUCByYWlzZXMgbW9yZSBvZnRlbiB0aGFuIG5vdCB3aXRoIG1hcmdpbmFsIGhhbmRzKS4gU0IgY2FsbHMuIEFuZCBCQiAzYmV0IHRvIDEwMC4gTVAgc2hvd3Mgc2xpZ2h0IGZydXN0cmF0aW9uIGFuZCBmb2xkcy4KSW5vbmxpbmUgcG9rZXIsIHRoZXJlIGFyZSBhbHNvIHBva2VyIHRlbGxzIGZvciB5b3UgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgeW91ciBvcHBvbmVudCBpcyBob2xkaW5nIGEgZ3JlYXQgY2FyZCBvciBqdXN0IG5vdGhpbmcgZGVzcGl0ZSBiZWluZyB1bmFibGUgdG8gc2VlIHlvdXIgb3Bwb25lbnRzIHBoeXNpY2FsbHkuIEZvciBhIGJlZ2lubmVyLCB0aGVpciB0ZWxscyBhcmUgcXVpdGUgZWFzeS4gVGhleSB3b3VsZCBiZXQgd2l0aCBhIHdlYWsgaGFuZCBhbmQgd291bGQgaG9sZCB3aXRoIGEgc3Ryb25nIGhhbmQsIGFsbG93aW5nIHRoZWlyIHN0cmF0ZWd5IHRvIGJlIHRyaWVkIG91dCBvbiB5b3VyIHJlZmluZWQgcGxheWluZyBzdHlsZSBhbmQgbWF5YmUgaGVscCBmaXNoIGluIGEgZmV3IHBsYXllcnMgYWxvbmcgd2l0aCBoaW0uIEEgdmVyeSBmYXZvcmFibGUgc2l0dWF0aW9uIHdvdWxkIGJlIGFuIG9ubGluZSB0YWJsZSBmaWxsZWQgd2l0aCBub3ZpY2UgcGxheWVycyBhbGwgYnVpbGRpbmcgdGhlIHBvdCBmb3IgeW91IQpJIHdvdWxkbiBzYXkgdGhhdC4gVGhvc2UgZm9yZWlnbiB3b3JrZXJzIGZyb20gZGV2ZWxvcGluZyBBc2lhbiBjb3VudHJpZXMgY2Fubm90IHN0YXkgZm9yIGxvbmcgYmVjYXVzZSB0aGUgc3lzdGVtIGlzIHN0YWNrZWQgYWdhaW5zdCB0aGVtIGZyb20gc3RheWluZyBsb25nZXIgdGhhbiA1IHllYXJzIHdoZW4gdGhlaXIgZ3Vlc3Qgd29ya2VyIGNvbnRyYWN0IHBlcmlvZCBpcyBvdmVyLiBTb3V0aCBLb3JlYW4gZ292ZXJubWVudCBtZXRpY3Vsb3VzbHkgY29udHJvbHMgdGhlIG51bWJlciBvZiBmb3JlaWduIHdvcmtlcnMgaW4gdGhlIGNvdW50cnksIHRyeWluZyB0byBtYXhpbWl6ZSB0aGVpciBsYWJvciBidXQgYXQgdGhlIHNhbWUgdGltZSwgbWluaW1pemUgdGhlaXIgbG9uZyB0ZXJtL3Blcm1hbmVudCBzdGF5cyBpbiB0aGUgY291bnRyeS4KSWYgeW91IG1hdGNoIDQgd2hpdGUgYmFsbCwgdGhlbiB5b3UgZ2V0ICQxNTAsIGJlZm9yZSB0YXhlcy4gSWYgeW91IG1hdGNoIDQgd2hpdGUgYmFsbCArIE1lZ2EgYmFsbCwgdGhlbiB5b3UgZ2V0ICQxMCwwMDAsIGJlZm9yZSB0YXhlcy4gCkhvd2V2ZXIsIHVubGlrZSBCbGFja2phY2ssIHBsYXllciBza2lsbCB3aWxsIHJhaXNlIG9yIGxvd2VyIHlvdXIgYWJpbGl0eSB0byB3aW4gbW9uZXkgb3ZlciBhIHRpbWUuIE92ZXIgYSBsb25nIGVub3VnaCB0aW1lLCBhIGdvb2QgcGxheWVyIHdpbGwgYWxtb3N0IGFsd2F5cyBiZSBuZXQgcG9zaXRpdmUgYW5kIGEgYmFkIHBsYXllciB3aWxsIGFsd2F5cyBsb3NlIG1vbmV5Li4gCkJ1dCBjZW50cmFsIGJhbmtlcnMgaGF2ZSBzZW5zaXRpdml0aWVzIG9mIHRoZWlyIG93bi4gVGhleSBpbnRlcm5hbGl6ZWQgdGhlIGxlc3NvbnMgb2YgdGhlIGZpbmFuY2lhbCBjcmlzaXMgYW5kIHdlcmUgZGV0ZXJtaW5lZCBub3QgdG8gcmVwZWF0IHRoZWlyIG1pc3Rha2VzLiBDYW5hZGlhbiBob3VzZWhvbGRzIHdlcmUgYm9ycm93aW5nIGF0IHJhdGVzIHRoYXQgY291bGQgb25seSBlbmQgaW4gZGlzYXN0ZXIuIApSaWdodCBub3cgSSBjYW4gb25seSBmZWVsIGl0IHdoZW4gZG9pbmcgYW5rbGUgY2lyY2xlcy4gCkhlciBtb20gd291bGRuJ3QgY29tZSB1bmxlc3Mgd2UgcHV0IG5ldyB0aXJlcyBvbiBoZXIgY2FyIGFuZCBwYWlkIGZvciB0aGUgZ2FzIGJlY2F1c2Ugc2hlIGRpZG4ndCBoYXZlIHRoZSBtb25leS4gCldvdywgd2hhdCBhbiBlcGlzb2RlLiBTbywgbXkgY29uc3BpcmFjeSB0aGVvcnkgaXMgdGhhdCBpdCBubyBhY2NpZGVudCB0aGF0IHRob3NlIEdpbGVhZCBzZWN1cml0eSBndXlzIGNhdWdodCBOaWNrIGFuZCBKdW5lIGF0IHRoZSBzYWZlIGhvdXNlIHdoZXJlIHRoZXkgd2VudCB0byBtZWV0IEhhbm5haC4gClF1ZXN0aW9ucyBhYm91dCB0aGUgIm1vc3QiLCB0aGUgIndvcnN0Iiwgb3Igb3RoZXIgdmFsdWUganVkZ21lbnRzIHVzdWFsbHkgbGVhZCB0byB2YWd1ZSwgc3ViamVjdGl2ZSwgYW5kIHNwZWN1bGF0aXZlIGFuc3dlcnMuIApJZiB5b3UgYyBiZXQgbGFyZ2VyIE9URiwgaXQgbWFrZXMgZ2l2aW5nIHVwIG9uIHRoZSB0dXJuIG1vcmUgZXhwZW5zaXZlLiBJZiBhbnl0aGluZywgeW91IHNob3VsZCBjIGJldCBzbWFsbGVyIGlmIHlvdSBnaXZlIHVwIG9uIHRoZSB0dXJuL3JpdmVyIHdoZW4gYyBiZXR0aW5nIGF0IGEgaGlnaGVyIGZyZXF1ZW5jeSAob25saW5lIHN0cmF0ZWdpZXMgaGF2ZSBhIGxvdCBvZiAxLzQgMS8zcmQgcG90IHJhbmdlIGJldHMgb24gdGhlIGZsb3AsIGRlcGVuZGluZyBvbiB0ZXh0dXJlKS4yKSBJZiB0aGUgYm9hcmQgaXMgd2V0IGFuZCB5b3UgYXJlIHRoZSBQRlIsIHlvdSBzaG91bGQgZ2VuZXJhbGx5IGJlIGNoZWNraW5nIG1vcmUgb2Z0ZW4gT1IgYyBiZXR0aW5nIGEgbGFyZ2VyIHNpemUgYXQgYSBsb3dlciBmcmVxdWVuY3kgKGdlbmVyYWxseSkuMykgU2hvdWxkIHlvdSBjIGJldCBhbGwgZmxvcHMgd2hlbiB0aGUgUEZSIDMgYmV0dGVyICBhdCAxLzJOTCBnYW1lcywgdGhpcyBpcyBwcm9iYWJseSBmaW5lLiAKQnV0IGluc3RlYWQgaXQgeW91ciBvd24gaG9iYnkgdGhhdCB5b3UgY2hvc2UsIG5vIG9uZSBpcyBob2xkaW5nIHlvdSB0byBpdC4gClVubGVzcywgdGhhdCBpcywgeW91IGp1c3QgaGF2ZSBhbiB1bnNjcmF0Y2hlZCBpdGNoIHRvIHJ1biBvdGhlciBwZW9wbGUncyBsaXZlcy4gSW4gd2hpY2ggY2FzZSwgdGhhdCBzaG91bGQgcmVtYWluIHlvdXIgcHJvYmxlbSwgbm90IG1pbmUuCkkgdHJlYXQgdGhlbSBsaWtlIGJpZyBzZXQgcGllY2VzLCBsaWtlIHRoZSBiaWcgbXVzaWNhbCBudW1iZXJzIHlvdSB3b3VsZCBmaW5kIGluIGEgbW92aWUgbXVzaWNhbCwgYnV0IG11Y2ggYmxvb2RpZXIuLiAKU2V2ZXJhbCB0aW1lcyBhZnRlcmJ1eSBjaGlwcyBmcm9tIFp5bmdhIHBva2VyIGFuZCBwbGF5IHRoZSBzeXN0ZW0gbWFraW5nIG1hbnltaXN0YWtlcyBNYW55IHRpbWVzIHRoZSBoYW5kaXMgYmVsb25nIHRvIG1lIGJ1dCB3aWxsIG1ha2UgdGhlIG90aGVyIHBsYXllcnMgYXMgd2lubmVyLiBBbHNvIG1hbnkgdGltZXMgSSB3aW5tb25leSBhbmQgYWZ0ZXIgbGVhdmUgdGhlIHRhYmxlIG5vdCBhZGRzIG9uIG15IGNoaXBzLiAKSiBwb3VyIGNlcyBnZW5zIGwgYXVzc2kgcGV1IGRlIHN5bXBhdGhpZSBxdWUgcG91ciBsZXMgY2hhc3NldXJzLCBjIHRvdXQgZGlyZSBBbGxlbWFnbmUsIEJlbGdpcXVlLCBTdWlzc2UsIERhbmVtYXJrLCBIb25ncmllLCBQYXlzIEJhcywgTHV4ZW1ib3VyZzogdm9pY2kgbGVzIHByaW5jaXBhdXggcGF5cyBldXJvcGVucyBvIGxhIGJlcmNlIGR1IENhdWNhc2UgYSB0IHJlY2Vuc2Ugc3VyIGwgZHUgdGVycml0b2lyZSwgY2UgcXVpIG4gcGFzIGxlIGNhcyBlbiBGcmFuY2UgbyBlbGxlIHNlIGNhbnRvbm5lIHN1cnRvdXQgIGwgKGZyb250aXJlIGJlbGdlLCBBbHNhY2UgTG9ycmFpbmUsIEZyYW5jaGUgQ29tdCwgQWxwZXMpIGV0IHNlbG9uIHVuIGJhbmRlYXUgemlnemFndWFudCBkdSBOb3JkIGF1IFN1ZCwgZGUgbGEgTWFuY2hlIGp1c3F1IGwgZW5nbG9iYW50LCBkaXQgb24sIGwgUG91ciB5IGF2b2lyIHZjdSBkdXJhbnQgZGVzIGFubmVzLCBqIGV1IGxhIG1hbGNoYW5jZSBkZSBuZSBqYW1haXMgbCByZW5jb250cmVyLiAKOS4gClNlIHZvYyBubyB0ZW0gcHJvdmEgc2xpZGEsIG11aXRvcyBob21lbnMgbWVudGlyYSBlbmdhbm8gZSB0b3JuYXIgc2UgaGlzdHJpYXMgb3UgdmFpIGNoYW0gbG8gbG91Y28uIApIZWFkaW5nIGludG8gMjAxOSwgQXdrd2FmaW5hIGlzIHdvcmtpbmcgb24gYSBDb21lZHkgQ2VudHJhbCBzaG93LCBhIGhhbGYgaG91ciBzY3JpcHRlZCBuYXJyYXRpdmUgYWJvdXQgYSAidHdlbnR5IHNvbWV0aGluZyBsaXZpbmcgaW4gUXVlZW5zLCBzdHJpdmluZyBmb3IgYSBsYXJnZXIgdGhhbiBsaWZlIGV4aXN0ZW5jZSB3aGlsZSBsaXZpbmcgd2l0aCBoZXIgZmF0aGVyIGFuZCBncmFuZG1vdGhlciwiIGFzIHRoZSBjaGFubmVsJ3MgYW5ub3VuY2VtZW50IHNheXMuIApBbmQgNyBlbWFpbCBhZGRyZXNzZXMgd2FzIGZpbmFsbHkgcGlja2VkIG91dCBmcm9tIGFtb25nIHRoZSB0b3RhbCAxLDAwMCwwMDAgZW1haWwgYWRkcmVzc2VzLCBhbmQgb3V0IG9mIHRob3NlIDcgZW1haWwgYWRkcmVzc2VzLCB5b3VyIGVtYWlsIGFkZHJlc3MgaXMgb25lIG9mIHRoZSB0aG9zZSB0aGF0IHdvbiBvbiB0aGUgYmFsbG90WW91IGhhdmUgdG8gbm90ZSB0aGF0IHRoaXMgcHJvZ3JhbSBpcyBiZWluZyBzcG9uc3VyZWQgYnkgdGhlIEZJRkEgU1VQUE9SVCBBRlJJQ0FOIFRFQU0sIHRvIGNyZWF0IGF3YXJlbmVzcyBmb3IgdGhlIGNvbWluZyAyMDEwIFdvcmxkIEN1cCwgd2hpY2ggaXMgdG8gYmUgaG9zdCBieSBTb3V0aCBBZnJpY2FXZSBhcmUgcGxlYXNlZCB0byBpbmZvcm0geW91IG9mIHRoZSBhbm5vdW5jZW1lbnQgbWFkZSBmb3Igd2lubmVycyBvZiB0aGUgR2xvYmFsIG1lZ2EgTE9UVEVSWSBJTlRFUk5BVElPTkFMIFBST0dSQU1TLCBhcyBwYXJ0IG9mIG91ciBwcm9tb3Rpb25hbCBkcmF3c1BhcnRpY2lwYW50cyB3ZXJlIHNlbGVjdGVkIHRocm91Z2ggYSBjb21wdXRlciBiYWxsb3Qgc3lzdGVtIGRyYXduIGZyb20gMiw1MDAsMDAwIGVtYWlsIGFkZHJlc3NlcyBvZiBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIGZyb20gYWxsIHBhcnQgb2YgdGhlIHdvcmxkIGFzIHBhcnQgb2Ygb3VyIGVsZWN0cm9uaWNidXNpbmVzcyBQcm9tb3Rpb25zIFByb2dyYW1Ob3RlIHRoYXQgeW91ciBlbWFpbCBhZGRyZXNzIHF1YWxpZmllZCBmb3IgdGhlIGRyYXcsIGFzIGEgcmVzdWx0IG9mIHlvdXIgdmlzaXRpbmcgdmFyaW91cyB3ZWJzaXRlcyB3ZSBhcmUgcnVubmluZyB0aGUgZSBidXNpbmVzcyBwcm9tb3Rpb25zIGZvci4gClF1YWxpZmllZCBsb2NhbCBjb3Vuc2VsIGlzIHRoZSBvbmx5IGNvbXBldGVudCByZXNvdXJjZSB0byBkaXJlY3RseSBhbmQgcmVsaWFibHkgYW5zd2VyIGFueSBzcGVjaWZpYyBsZWdhbCBxdWVzdGlvbiBvciB0byBwcm92aWRlIHlvdSB3aXRoIGxlZ2FsIGFkdmljZS4gClRoZXJlIGFyZSBzbyBtYW55IHRvcCBub3RjaCBzaXRlcyB0aGF0IGFsbG93IHBsYXllcnMgdG8gZW5qb3kgdGhlaXIgZmF2b3JhYmxlIGdhbWVzLiBQbGF5ZXJzIGNhbiBjaG9vc2UgZnJvbSBhIHBvb2wgb2YgdGhlbSBvbmxpbmUgYW5kIGdvIGZvciB0aG9zZSB0aGF0IG1lZXQgdGhlaXIgbmVlZHMgZWZmZWN0aXZlbHkuIFRoaXMgaXMgYSBiaWcgcGx1cyBhcyBjb21wYXJlZCB0byBwbGF5aW5nIGZyb20gdGhlIG5laWdoYm9yaG9vZCBjYXNpbm8uIFRoaXMgdXN1YWxseSBsZWF2ZXMgdGhlIHBsYXllcnMgd2l0aCBsaXR0bGUgY2hvaWNlIGV2ZW4gaWYgdGhleSByZWNlaXZlIGxvdyBxdWFsaXR5IHNlcnZpY2VzIGZyb20gdGhlIG1hbmFnZW1lbnQuIFdpdGggb25saW5lIHBsYXlpbmcgb2YgcG9rZXIsIHBsYXllcnMgY2FuIGNob29zZSBmcm9tIHRob3VzYW5kcyBvZiB0aGUgc2l0ZXMuCkkgd291bGRuJ3QgZXZlciB0b3NzIHRoZSBiYXIsIGJ1dCBJIGFsd2F5cyBkbyBhIGNvbnRyb2xsZWQgZHJvcCBpZiB0aGF0IG1ha2VzIHNlbnNlLiBJJ20gbm90IGV4cGVuZGluZyBhbnkgcmVhbCBlbmVyZ3kgYW5kIEkgYWx3YXlzIGtlZXAgbXkgaGFuZHMgb24gdGhlIGJhcmJlbGwgZHVyaW5nIHRoZSBkZXNjZW50ICh3YXRjaCBhIHZpZGVvIG9mIHBvd2VybGlmdGVycyBkZWFkbGlmdGluZyBkdXJpbmcgYSBtZWV0IGZvciBhbiBleGFtcGxlKS4KRm91ciBtb3JlIGNvbXBsYWludHMgaGF2ZSBzaW5jZSBiZWVuIGZpbGVkIGFnYWluc3QgS29ub3BrYS4gVGhlIGJvYXJkIGluIFNlcHRlbWJlciB2b3RlZCB0byBtb3ZlIGZvcndhcmQgd2l0aCBhIGRpc2NpcGxpbmFyeSBoZWFyaW5nIG9uIHRob3NlIGNvbXBsYWludHMuIEJ1dCBiZWZvcmUgdGhlIGhlYXJpbmcgd2FzIGhlbGQsIEtvbm9wa2EgYWdyZWVkIGluIHRvIGdpdmUgdXAgaGVyIGxpY2Vuc2UgICBzb21ldGhpbmcgc2hlIHNhaWQgc2hlIHdhcyBmb3JjZWQgdG8gZG8uClRoaXMgcGhlbm9tZW5vbiBhZGRlZCB0byB0aGUgbXl0aCBvZiB0aGUgTG9yZWxleTsgc29tZXRpbWVzIGl0IHdhcyBpbnRlcnByZXRlZCBhcyBzaW5naW5nLCBzb21ldGltZXMgYXMgc2Nvcm5mdWwgbGF1Z2h0ZXIuIApTb21lIGRlYWxlcnMgYXJlIHJldGlyaW5nLiBPdGhlcnMgYXJlIGRvd25zaXppbmcgdm9sdW50YXJpbHkuIFN0aWxsIG90aGVycyB3aWxsIHNlbGwgYmVjYXVzZSB0aGV5IGNhbid0IGdldCBlbm91Z2ggb3BlcmF0aW5nIGNhcGl0YWwsIGhlIHNheXMuCkRvIG5vdCB0aWx0IHRoZSBoaXBzIHRvIHRoZSBzaWRlLiAKMykgS2Fzc2FuZHJhOiAxNzAwIDE3MjUsIDUwRSs1MEUgKEFuYWwgYW5kIEVyb3RpYyBNYXNzYWdlKSwgMjAgeW8gUm9tLCAxNjVjbSwgdGFubmVkLCBsb25nIGJsYWNrIGhhaXIsIEIvQyBjdXAsIGZhaXJseSBwcmV0dHksIGEgZnJpZW5kIG9mIFZhbmVzc2EsIG9uZSBtb250aCBhdCBTaGFya3MsIGxpdHRsZSBFbmdsaXNoLiBCZWNhdXNlIG9mIG15IHBoeXNpY2FsIGNvbmRpdGlvbnMsIEkgYXNrZWQgaGVyIHRvIGdpdmUgMzAgbWluIHNlc3Npb24uIEluIGEgcm9vbSBzaGUgc3RhcnRlZCB3aXRoIGVyb3RpYyBtYXNzYWdlIHVzaW5nIG1hc3NhZ2Ugb2lsIG9uIG1lLCBhbmQgdGhlbiBJIGFza2VkIGhlciB0byBmdWNrIG1lIGluIHRoZSBjb3dnaXJsIHNleCBwb3NpdGlvbi4gU2hlIGludGVudGlvbmFsbHkgcHV0IG15IG1lbWJlciBpbnRvIGhlciBhbmFsIGluc3RlYWQgb2YgcHVzc3kgdGhhdCBJIHdhbnRlZCwgYW5kIHRoZW4gc2FpZCAiTGV0J3MgZW5qb3kgYW5hbCBzZXgiLiBJIGRpc2FncmVlZCBzYXlpbmcgdGhhdCBpdCdzIG5vdCBmYWlyLCBub3QgdGhlIHdheSBpdCBzaG91bGQgYmUsIEkgZG9uJ3QgbGlrZSBhbmFsIGluIHRoZSBmaXJzdCBwbGFjZSwgYnV0IHNoZSBjb250aW51ZWQuIEV2ZXJ5dGhpbmcgYmVpbmcgZG9uZSwgc2hlIGluc2lzdGVkIHRoYXQgSSBzaG91bGQgcGF5IHdoYXQgSSBlbmpveWVkLCBlcm90aWMgbWFzc2FnZSwgYXNzIGFuZCBzZXguIEkgcmV0b3J0ZWQgc2F5aW5nIHRoYXQgSSB3b3VsZCBwYXkgb25seSA1MCBFIGZvciAzMCBtaW4sIGFuZCBpZiB5b3UncmUgbm90IHNhdGlzZmllZCwgbGV0J3MgZ28gdG8gdGhlIHJlY2VwdGlvbiB0byBhc2sgdGhlbSBob3cgbXVjaCBJIHNob3VsZCBwYXkuIFNoZSBkaWRuJ3Qgc2F5IGFueXRoaW5nIGFuZCBsb29rZWQgdmVyeSBzYWQuIEkgZmVsdCBhIGtpbmQgb2YgZ3VpbHR5IGFuZCBzaGUganVzdCBsb29rcyBsaWtlIGEgbGl0dGxlIGdpcmwgYW5kIHByZXR0eSwgc28gSSBmaW5hbGx5IHByb3Bvc2VkIDEwMCBFIGluY2x1ZGluZyBldmVyeXRoaW5nIGFzIGNvbXByb21pc2UuIFNoZSB0cmllZCB0byBraXNzIG1lIHdoZW4gSSBoYW5kZWQgMTAwRSBhdCB0aGUgc2FmZSwgYnV0IEkgcmVmdXNlZCBpdC4gTmV2ZXIgcmVwZWF0LiBUd28gZGF5cyBsYXRlciBzaGUgYXBwcm9hY2hlZCBtZSBhbmQgYXBvbG9naXplZCB0byBtZSBzYXlpbmcgc2hlIHRob3VnaHQgSSBsb3ZlZCBhbmFsIGJlY2F1c2UgVmFuZXNzYSAoS2Fzc2FuZHJhJ3MgbWVudG9yKSBhbmQgSSBoYWQgdGFsa2VkIGFib3V0IGFuYWwgYWxsIHRoZSB0aW1lIGFuZCB3YW50ZWQgdG8gZ2V0IG1lIGFzIGEgcmVndWxhciB0byBwcm92aWRlIGVyb3RpYyBtYXNzYWdlLiBBcG9sb2d5IGFjY2VwdGVkLgpTZXltb3VyIEFtb25nc3QgU3BvcnRzIFN0YXJzIFBsYXlpbmcgV1NPUCBNYWluIEV2ZW50CkJhY2sgRW5kIFNhbGVzIFlvdSBjYW4gYWxzbyBtYWtlIG1vbmV5IGJ5IHNlbGxpbmcgbWFzc2FnZSBwcm9kdWN0cyB0byB5b3VyIGNsaWVudHMuIEZvciBleGFtcGxlLCB3b3JrZXJzIGNhbiBpbXByb3ZlIHBvc3R1cmUgYW5kIGhlbHAgYmFjayBwYWluIGJ5IHNpdHRpbmcgb24gYSBiYWxhbmNlIGJhbGwgaW5zdGVhZCBvZiBhIHJlZ3VsYXIgb2ZmaWNlIGNoYWlyLiBZb3UgY291bGQgYWxzbyBzZWxsIGVsZWN0cm9uaWMgbWFzc2FnZSBjaGFpcnMgZm9yIHRoZSBjb21wYW55J3Mgd29ya2VycyB0byBpbmNyZWFzZSB0aGVpciBjb21mb3J0LgpJIGdvaW5nIHRvIGdpdmUgeW91IHRoZSBiZW5lZml0IG9mIHRoZSBkb3VidCwgYW5kIGFzc3VtZSB5b3UganVzdCBkb24gdW5kZXJzdGFuZCB0aGlzICAgdHJpZ2dlciB3YXJuaW5ncyBhcmUgZm9yIHBlb3BsZSB3aG8gc3VmZmVyIGZyb20gUFRTRC4gVGhleSB3YXJuIHJlYWRlcnMgdGhhdCBjb250ZW50IGlzIHBvc3NpYmx5IHRyaWdnZXJpbmcuIFBlb3BsZSBvZnRlbiB1c2UgYmVpbmcgInRyaWdnZXJlZCIgYXMgYSBqb2tlLCBvciBjb25mdXNlIGl0IGZvciBtZWFuaW5nICJhbm5veWVkIG9yICJvZmZlbmRlZCIsIHNvIHRoYXQgd2h5IHlvdSBtaWdodCBoYXZlIHRob3VnaHQgdGhlIGNvbmNlcHQgaXMgcmVsYXRlZCB0byBzYXRpcmUsIGJ1dCB0aGVzZSBqb2tlcyBhY3R1YWxseSBtYWtlIGl0IGhhcmRlciBmb3IgcGVvcGxlIHdobyBhY3R1YWxseSBkbyBuZWVkIHRyaWdnZXIgd2FybmluZ3MuCkxvYWRzIG9mIGFjdGlvbiwgcG9saXRpY3MgYW5kIGZvciB0aGUgbW9zdCBwYXJ0IHBlb3BsZSBtb3JhbHMgYXJlIGdyZXkgYW5kIG5vdCBibGFjayB2ZXJzdXMgd2hpdGUuT24gdGhhdCB2YWluIEkgbGlrZWQgInRoZSBzdHJhdGVnaXN0cyBhbGxpYW5jZS4iIEkgYSBsaWwgYmlhc2VkIGJlY2F1c2UgU2ltYSBZaSBpcyBteSBmYXZvcml0ZSBjaGFyYWN0ZXIgZnJvbSBST1RLIGJ1dCBvdmVyYWxsIGl0IGJlZW4gYSBnb29kIHNob3cgc28gZmFyLkkgb2NjYXNpb25hbGx5IGdldCBhIGNodWNrbGUgb3V0IG9mICJJZiB5b3UgYXJlIHRoZSBvbmUuIldhdGNoZWQgYSB0diBzZXJpZXMgeWVhcnMgYWdvIGNlbnRlcmVkIG9uIEdlbmdoaXMgS2hhbiwgdGhvdWdodCB0aGF0IG9uZSB3YXMgcHJldHR5IGdvb2QuTWluZyBkeW5hc3R5IDE1NjYgaGFzIGJlZW4gYW5vdGhlciBzaG93IEkgYmVlbiB3YXRjaGluZyBvbiBhbmQgb2ZmLiAKVGhyZWUgZm9ybWVyIHBva2VyIGRlYWxlcnMgYXQgTmFwbGVzIEZvcnQgTXllcnMgR3JleWhvdW5kIFRyYWNrIGFyZSBzdWluZyB0aGUgdHJhY2sncyBvd25lciwgYWxsZWdpbmcgaXQgc2tpbW1lZCB0aGVpciB0aXBzIHRvIHBheSBjYXJkIHJvb20gZmxvb3IgbWFuYWdlcnMuIERpc3RyaWN0IENvdXJ0IGluIE9ybGFuZG8gYWdhaW5zdCBTb3V0aHdlc3QgRmxvcmlkYSBFbnRlcnByaXNlcyBJbmMuLCB3aGljaCBkb2VzIGJ1c2luZXNzIGFzIE5hcGxlcyBGb3J0IE15ZXJzIEdyZXlob3VuZCBSYWNpbmcgUG9rZXIuIFRoZSBsYXdzdWl0LCBmaWxlZCBNYXkgNywgYWxsZWdlcyB0aGUgQm9uaXRhIFNwcmluZ3MgcG9rZXIgcm9vbSB2aW9sYXRlZCB0aGUgZmVkZXJhbCBGYWlyIExhYm9yIFN0YW5kYXJkcyBBY3QuLiAKSXNuIGludGVyZXN0ZWQgaW4gaGlkaW5nIGluZm9ybWF0aW9uIGZyb20gQW1lcmljYW5zIGJ1dCBpcyB3aWxsaW5nIHRvIGJlIGhvbmVzdCBhbmQgdHJ1dGhmdWwgYWJvdXQgZmFjdHMuIEkgdGhpbmsgdGhpcyBzYXlzIGl0IGFsbC4gTG9vayBhdCB0aGUgbGllcyBhbmQgY292ZXIgdXBzIHdlIGFsbCBrZWVwIGRlbnlpbmcgaXMgaGFwcGVuaW5nIHRoaXMgZWxlY3Rpb24geWVhci4gCkl0IGp1c3QgbWFrZXMgYSBsb3Qgb2Ygc2Vuc2UgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhhdC4gCkkgZG9uJ3Qga25vdyB3aGF0IHlvdXIgc2tpbGwgc2V0cyBhcmUgYnV0IHlvdSBuZWVkIHRvIGdldCBzb21lIGNhc2ggdG9nZXRoZXIgc2luY2UgaXQnbGwgcHJvYmFibHkgdGFrZSB5b3Ugc29tZSB0aW1lIHRvIGdldCB5b3VyIGZpcnN0IHBheWNoZWNrLiAKQ290IGRlIGxhIGZvcm1hdGlvbiA1NTAgJCBwb3VyIDQgam91cnMKSmFtZXMgV29ydGh5LCBhIGtleSBwbGF5ZXIgZHVyaW5nIHRoZSBTaG93dGltZSBlcmEsIG9mZmVyZWQgY29uZG9sZW5jZXMgdG8gdGhlIEJ1c3MgZmFtaWx5IG9uIFR3aXR0ZXIuClRoZSBtb3N0IHNpZ25pZmljYW50IGNsaW5pY2FsIGFuZCB0aGVyYXBldXRpYyBkaWZmZXJlbmNlIGJldHdlZW4gY2xhc3MgSUlJIGFuZCBjbGFzcyBJViBsYXNlcnMgaXMgdGhlIGNsYXNzIElWIGxhc2VyIGhpZ2hlciBwb3dlciBvdXRwdXQgbWF5IHByb2R1Y2UgYSBwcmltYXJ5IGJpb3N0aW11bGF0aXZlIGVmZmVjdCBvbiBkZWVwZXIgdGlzc3Vlcy4KVGhhbmtzIGZvciB5b3VyIGludGVyZXN0IGluIHdvcmtpbmcgYXQgdGhlIENoaWNhZ28gU3VuIFRpbWVzLiBXZSBkZXRlcm1pbmVkIHRvIGxpc3RlbiB0byBhbmQgZW5nYWdlIHdpdGggdGhlIGhhcmQgd29ya2luZyBwZW9wbGUgb2YgQ2hpY2FnbyB0byBicmluZyB0aGVtIG5ld3MgY292ZXJhZ2UgdGhhdCBtYXR0ZXJzLiBVc2luZyBuZXcsIG11bHRpIHBsYXRmb3JtIHByb2R1Y3Rpb24gYW5kIGRlbGl2ZXJ5IGNhcGFiaWxpdGllcywgd2Ugd2lsbCBtZWV0IG91ciBuZXdzIGNvbnN1bWVycyB3aGVyZSB0aGV5IGFyZSBhbmQgcHJvdmlkZSBvdXIgYWR2ZXJ0aXNpbmcgcGFydG5lcnMgd2l0aCByZWFsIHZhbHVlLiBXZSBhcmUgYSByZXN1bHRzIGRyaXZlbiB0ZWFtIGxvb2tpbmcgZm9yIHBlb3BsZSB3aG8gY2FuIG1ha2UgYSBpbXBhY3QuIElmIHlvdSBhcmUgY3JlYXRpdmUsIGhhcmQgd29ya2luZywgdGFsZW50ZWQgYW5kIGVhZ2VyIHRvIGJ1aWxkIGEgbmV3IGtpbmQgb2YgbWVkaWEgY29tcGFueSBmb3Igb3VyIGNpdHksIHdlIGxpa2UgdG8gaGVhciBmcm9tIHlvdSEKRG9uIGZyZWFrIG91dCB0b28gYmFkbHkgYWJvdXQgZmFsbGluZyBhc2xlZXAgd2l0aCBhIGJhYnkgaW4geW91ciBhcm1zLiBJZiB5b3UgZG9uIG1vdmUgbXVjaCBpbiB5b3VyIHNsZWVwLCB5b3UganVzdCB3YW50IHRvIG1ha2Ugc3VyZSBpZiB5b3Ugc2l0dGluZyB1cCB5b3VyIGxlZ3MgYXJlIHJhaXNlZCAoZXh0cmEgc3VwcG9ydCkgYW5kIGlmIHlvdSBsYXlpbmcgdGhhdCBiYWJ5IGhhcyBhIGJ1YmJsZSBvZiBub24gc2hhcmVkIGFpci4gSSBjb3NsZXB0IHdpdGggbXkgdG9kZGxlciBmb3IgaGVyIGZpcnN0IHllYXIsIGFuZCBtb3N0IGJhYmllcyB0aHJvdWdob3V0IGhpc3RvcnkgaGF2ZSBzbGVwdCBiZXNpZGUgdGhlaXIgbW90aGVycy4gCkRhbmNlIGluc3RydWN0b3JzIGNhbiBiZSBsaWtlIHRoaXMgYW5kIEknZCBzYXkgaXQncyBub3JtYWwuIEhvd2V2ZXIsIGRvbid0IGxldCBpdCBnZXQgaW4gdGhlIHdheSBvciBoZXIgZG9pbmcgc29tZXRoaW5nIGxpa2UgYSBmcmllbmQncyBiZGF5IHBhcnR5LiBJIGhhZCB0ZWFjaGVycyByaWRlIG1lIGZvciBoYXZpbmcgdG8gbGVhdmUgZWFybHkgYnV0IEkgYWx3YXlzIGtuZXcgSSB3YXMgc2VyaW91cyBhYm91dCBkYW5jZSBhbmQgd2Fzbid0IGdvaW5nIHRvIGxldCB0aGVtIG1ha2UgbWUgZmVlbCBsaWtlIEkgd2Fzbid0IGp1c3QgYmVjYXVzZSBJIHdhcyB0cnlpbmcgdG8gZmluZCBhIGJhbGFuY2UuIApXSUogV0lMTEVOIE5VISBXSUogV0lMTEVOIE5VISBXSUogV0lMTEVOIE5VISBXYXQgdm9vciBkZSBrYW4gbW9ldCBvb2sgdm9vciBkZSBhbmRlciBrdW5uZW4gd2FudCBtaWpuIGtpbmRlcmVuIGVuIG1pam4gZWNodGdlbm90ZSB6aWVuIG1paiBvb2sgZ3JhYWcgZW4gd2lsbGVuIG1lIGV2ZW5taW4gemllbiBhZnRha2VsbGVuIGVuIHN0ZXJ2ZW4uIApDaGlsZCBjYW4gdGFrZSBhbnkgdHdvIG9mIHRoZSBmb3VyIHJhY2UgY29tcG9uZW50cyBvZiB0aGUgcGFyZW50cywgYnV0IHlvdXIgY2hpbGQgZmlyc3QgY29tcG9uZW50IHJhY2UgbXVzdCBiZSB0YWtlbiBmcm9tIHRoZSBmaXJzdCBjb21wb25lbnQgcmFjZSBvZiBlaXRoZXIgcGFyZW50LiBZb3VyIGNoaWxkIGRvdWJsZSBiYXJyZWxsZWQgcmFjZSB3aWxsIGJlIGxpbWl0ZWQgdG8gdHdvIGNvbXBvbmVudHMgd2l0aCBvbmUgaHlwaGVuLiBUaGUgZm9sbG93aW5nIGFyZSBleGFtcGxlcyBvZiBob3cgeW91ciBjaGlsZCBkb3VibGUgYmFycmVsbGVkIHJhY2UgbWF5IGJlIHJlY29yZGVkLi4gCkhlIHRhdWdodCBNaWNoYWVsIGhvdyB0byBkbyBpdC4gCklmIHlvdSBhcmUgeW91bmcgYW5kIHlvdSBmZWVsIHRoaXMgd2F5LCBiZSBjb252aWN0ZWQgYW5kIG1ha2UgaXQga25vd24gdGhhdCB0aGlzIGlzIGhvdyB5b3Ugd2FudCB0byBsaXZlIHlvdXIgbGlmZS4gVGhlcmUgbm8gc2hhbWUgaW4gZW1icmFjaW5nIGl0LiBJIGhvcGUgbW9yZSB3b21lbiB3YWtlIHVwIHRvIHRoaXMgYW5kIHJlYWxpemUgd2UgYmVlbiBzb2xkIHRoaXMgbGlmZSBzdHlsZSBtb3N0bHkgYnkgY29ycG9yYXRpb25zIHdobyB3YW50IHRvIHByb2ZpdCBvZmYgb2YgdHdvIGluY29tZSBmYW1pbGllcy4gVGFrZSBiYWNrIHlvdXIgZmVtaW5pbmUgcG93ZXIgYW5kIHNheSBGIG5vLgpJIGhhdmUgbm90IGhhZCBkdW1waW5nIHN5bmRyb21lIGF0IGFsbCwgYnV0IEknbSBub3QgZWF0aW5nIHRob3NlIHRoaW5ncyBzbyBpdCdzIGhhcmQgdG8gdGVsbCBpZiB0aGF0J3MgYmVjYXVzZSBvZiB0aGUgdmFsdmUgb3IgZGlldC4uIApEaWFibG8gYW5kIHRoZSB3aW5kIGZhcm0gbW91bnRhaW4gICB0aGF0J3MgYSBzdW1tZXJzJyB3b3J0aCBvZiBjbGltYmluZyByaWdodCB0aGVyZSEgV09XISBUaGUgcGljdHVyZXMgYXJlIGdvcmdlb3VzICAgd2hhdCBiZWF1dGlmdWwgdGVycmFpbiEgRm9yIHNoZWVyIHRyYWluaW5nIHB1cnBvc2VzLCB3ZSByZWFsbHkgaGF2ZSBhYnNvbHV0ZWx5IG5vdGhpbmcgdGhhdCdzIHJlbW90ZWx5IGxpa2UgdGhhdCBoZXJlICAgZnVydGhlciBlbXBoYXNpc2VzIGFsbCBvZiB0aGUgaGFyZCB3b3JrIHRoYXQgeW91J3ZlIHB1dCBpbnRvIHlvdXIgdHJhaW5pbmcgICBzb3VuZHMgbGlrZSB0aGUgb2xlJyBsZWdzIGFyZSBkb2luJyB5b3UgcHJvdWQgKHNvcnJ5IGFib3V0IHlvdXIgYXNzIHRob3VnaC4gV2hvZXZlciBjYW4gZmlndXJlIG91dCBob3cgdG8gc29sdmUgdGhlIHNvcmUgYXNzIHByb2JsZW0gd2lsbCBiZSBhIHJpY2ggbWFuLikuIApCZW4gQ2hlcmluZ3RvbiB0b29rIHRoZSBjaGFyZ2UgZnJvbSB0aGUgQm9zdG9uIG1lZGlhIG1vYiBpbiB0aGUgU294IGR1Z291dCBiZWZvcmUgU3VuZGF5IG5pZ2h0IHNlcmllcyBmaW5hbGUuIEhlIGhhbmRsZWQgaGltc2VsZiB3ZWxsLiBVbmxpa2UgaGlzIGJvc3NlcywgQ2hlcmluZ3RvbiBjaG9zZSBub3QgdG8gYmxhbWUgdGhpcyBzZWFzb24gdHJhaW53cmVjayBvbiBpbmp1cmllcywgYmFkIGx1Y2ssIG9yIG5hc3R5IGNvdmVyYWdlIGZyb20gdGhlIEJsdWUgTWVhbmllcyBpbiB0aGUgcHJlc3MgYm94LiB3aGVuIHlvdSBiZWluZyBzY3J1dGluaXplZCB0aGVyZSBhIHJlYXNvbiBmb3IgaXQsIHNhaWQgdGhlIGZpcnN0IHllYXIgR00uIGFyZW4gZ29pbmcgdGhlIHdheSB5b3Ugd2FudCB0aGVtIHRvLCBzbyB5b3Ugc2NydXRpbml6ZWQgbW9yZS4gV2Ugc29ydCBvZiBtYWRlIHRoYXQgYmVkIG91dHNlbHZlcyBhbmQgaXQgdXAgdG8gdXMgdG8gbWFrZSBpdCBiZXR0ZXIuIFdoZW4gd2UgbWFrZSBpdCBiZXR0ZXIgdGhlcmUgYmUgbGVzcyBzY3J1dGlueSBhbmQgcHJvYmFibHkgZmV3ZXIgZGlzdHJhY3Rpb25zLiB0byB0aGF0LiBGaW5hbGx5IHNvbWVvbmUgaW4gYSBwb3NpdGlvbiBvZiBwb3dlciBhZG1pdHMgdGhlIHJlYWxpdHkuCkhlcmUncyBhIGJyaWVmIHJ1bmRvd24gb24gdGhlIHJ1bGVzIG9mIFRleGFzIGhvbGRlbTogSWYgeW91IGFyZSBwbGF5aW5nIG9ubGluZSBvciBhdCBhIGNhc2lubywgdGhlbiB5b3UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBkZWFsaW5nIHJ1bGVzICAgaXRzIGFsbCB0YWtlbiBjYXJlIG9mIGZvciB5b3UuIElmIHlvdSBhcmUgb3JnYW5pc2luZyBhIGdhbWUgYXQgaG9tZSBoZXJlJ3MgdGhlIHJ1bGVzOiAuCkZvciBleGFtcGxlLCBTcGFuaXNoIHN0dWRlbnRzIHRyYW5zbGF0ZSBjbGl0aWMgZG91YmxpbmcgaW50byB0aGVpciBFbmdsaXNoIGEgbG90LiAidG8gbXkgcGFyZW50cyBJIGFsd2F5cyBnaXZlIHRoZW0gYSBodWciLiAKVGhlcmUgaXMgYSBodWdlIGFidW5kYW5jZSBvZiBjaG9pY2UgYXQgYWxsIG9ubGluZSBjYXNpbm8gc2l0ZXMsIHByb3ZpZGluZyBhIHN0aW11bGF0aW5nLCBidXQgY2hpbGxlZCwgZXhwZXJpZW5jZSBmb3IgcGxheWVycy4gCkkgaW4gbXkgc2VsZmlzaCAyMHMgYW5kIG1vc3Qgb2YgbXkgbGlmZSBkZWNpc2lvbnMgYXJlIGNlbnRlcmVkIGFyb3VuZCBob3cgdGhleSBhZmZlY3QgbWUuIApMb29rIGF0IGhvdyBtdWNoIHRoZXkgImZvcmdpdmUiIGluIGhvcGVzIHRoZSBjb21wYW55IHdpbGwgYmV0dGVyIHRoZW1zZWx2ZXMgYW5kIG1ha2Ugd2hhdCB0aGV5IHNhaWQgdGhleSB3b3VsZCBhbmQgZG8gdGhlaXIgZGFtbmVkIGpvYnMuIApPdmVydmlldyBmb3IgYW1icm9zZQpBbHRob3VnaCBBeWVycyBsZWZ0IEdvb2dsZSBpbiAyMDA1LCB0aGUgY2FmIHN0aWxsIGJlYXJzIGhpcyBuYW1lLiBUaGUgY2FmIGhhcyBzZXZlcmFsIHN0YXRpb25zLCBlYWNoIG9mZmVyaW5nIGRpZmZlcmVudCBraW5kcyBvZiBjdWlzaW5lLiBPcHRpb25zIHJhbmdlIGZyb20gdmVnZXRhcmlhbiBkaXNoZXMgdG8gc3VzaGkgdG8gZXRobmljIGZvb2RzIGZyb20gYXJvdW5kIHRoZSB3b3JsZC4gR29vZ2xlJ3MgY3VsdHVyZSBwcm9tb3RlcyB0aGUgdXNlIG9mIGZyZXNoLCBvcmdhbmljIGZvb2RzIGFuZCBoZWFsdGh5IG1lYWxzLiBCdXQgd2hlbiBldmVyeXRoaW5nIGlzIGZyZWUgYW5kIHlvdSBjYW4gZWF0IHdoZW5ldmVyIHlvdSB3YW50LCBpdCdzIGVhc3kgdG8gZ28gb3ZlcmJvYXJkLiBUaGF0J3Mgd2hlcmUgdGhlIEdvb2dsZSAxNSBjb21lcyBpbi4gSXQgcmVmZXJzIHRvIHRoZSAxNSBwb3VuZHMgbWFueSBuZXcgR29vZ2xlIGVtcGxveWVlcyBwdXQgb24gb25jZSB0aGV5IHN0YXJ0IHRha2luZyBhZHZhbnRhZ2Ugb2YgYWxsIHRoZSBtZWFscyBhbmQgc25hY2tzLgpGb3IgdmlzdWFsIGFydC4gRXN0YWJsaXNoZWQgaW4gMTk1OSwgdGhlIG11c2V1bSBob2xkcyBtb3JlIHRoYW4gMTgsMDAwIG9iamVjdHMgaW4gaXRzIHBlcm1hbmVudCBjb2xsZWN0aW9uLCBpbmNsdWRpbmcgQW1lcmljYW4sIEFzaWFuLCBFdXJvcGVhbiwgTGF0aW4gQW1lcmljYW4sIFdlc3Rlcm4gQW1lcmljYW4gbW9kZXJuIGFuZCBjb250ZW1wb3JhcnkgYXJ0IGFuZCBmYXNoaW9uIGRlc2lnbi4gVGhlIE11c2V1bSBhbHNvIGhvbGRzIGEgd29ybGQgcmVub3duZWQgcGhvdG9ncmFwaHkgZXhoaWJpdGlvbiBwcm9ncmFtLCBhIGNvbGxhYm9yYXRpb24gd2l0aCB0aGUgVW5pdmVyc2l0eSBvZiBBcml6b25hIENlbnRlciBmb3IgQ3JlYXRpdmUgUGhvdG9ncmFwaHksIG9uZSBvZiB0aGUgd29ybGQgZmluZXN0IGFjYWRlbWljIGFydCBtdXNldW1zIGluIFR1Y3NvbiBhbmQgdGhlIHdvcmxkIGxhcmdlc3QgaW5zdGl0dXRpb24gdGhhdCBkb2N1bWVudHMgdGhlIGhpc3Rvcnkgb2YgTm9ydGggQW1lcmljYW4gcGhvdG9ncmFwaHkuIApUaGlzIExlZnRvbiBDaGluYSBzbmFjayBzZXQncyBwYXR0ZXJuIGlzIHZpb2xldCBjaGludHouIG1hbnkgdGlueSB2aW9sZXRzIG9uIGEgd2hpbGUgYmFja2dyb3VuZC4gUGxhdGUgYW5kIGN1cCBoYXMgZ29sZHByb3Bvc2VkIGNpdGF0aW9uIGZvciBhcmNvbQpBbmQgaXQncyB3ZWlyZGx5IHNleHVhbGl6aW5nIGNoaWxkcmVuIGlmIHlvdSB0aGluayBpdCBpcy4gCkF2YW50Z2FyZGUgRXh0cmVtZSA1NyAoTHVpc2UpIFNjYXQsIEdlcm1hbnkgW0RWRFJpcF0gS2l0S2F0LiBXYXRjaCBmcmVlIGF2YW50Z2FyZGUgZXh0cmVtZSAzNCB2aWRlb3MgYXQgSGVhdnkgUiwgYSBjb21wbGV0ZWx5IGZyZWUgcG9ybiB0dWJlIG9mZmVyaW5nIHRoZSB3b3JsZCdzIG1vc3QgaGFyZGNvcmUgcG9ybiB2aWRlb3MuIApUaGUgIm9iamVjdGl2aXN0cyIgaW5zaXN0ZWQgdGhhdCB0aGUgbGF3IGlzIGltcGVyc29uYWwgc2luY2UgYSB0aG9yb3VnaCB1bmRlcnN0YW5kaW5nIG9mIGl0IHdpbGwgbGVhZCB0byAib2JqZWN0aXZlIiBpbnRlcnByZXRhdGlvbnMgb2YgaXQuIFRoZSBvdGhlciBzaWRlIGluc2lzdGVkIHRoYXQga25vd2xlZGdlIGlzIG5ldmVyIG91dHNpZGUgb2YgcG93ZXIsIGJ1dCByYXRoZXIgYWx3YXlzIGEgcHJvZHVjdCBvZiBpdC4gClRoZSBsb25nZXN0IHJ1bm5pbmcgZ2FtaW5nIGNvbnZlbnRpb24gaGFzIGNhdXNlZCBidXNpbmVzcyBvd25lcnMgaW4gZG93bnRvd24gSW5keSB0byBwcmVwYXJlIG1vbnRocyAoc29tZXRpbWVzIGV2ZW4gYSB5ZWFyKSBpbiBhZHZhbmNlLgpBY3RpdmUgcGxheWVycyBhcmUgc2lnbmlmaWNhbnRseSBsb3dlciB0aGFuIHRoYXQuIApDYWxsaW5nIGhlciBhIG1hc3RlciBvZiB0aGUgY29udGVtcG9yYXJ5IHNob3J0IHN0b3J5LCB0aGUgU3dlZGlzaCBBY2FkZW15IGF3YXJkZWQgODIgeWVhciBvbGQgQWxpY2UgTXVucm8gdGhlIE5vYmVsIFByaXplIGluIExpdGVyYXR1cmUgdG9kYXkuIEhlciBib29rcyB3b3VsZCBub3Qgc2VsbCB3ZWxsLCBhbmQgZXZlbiBoZXIgZmFtaWx5IHRob3VnaHQgb2Ygd3JpdGluZyBhcyBzb21ldGhpbmcgLiBBbGljZSBNdW5ybyBoYXMgYmVlbiBwcmFpc2VkIHRoZSBtYXN0ZXIgb2YgdGhlIHNob3J0IHN0b3J5LiAKSSB3b3VsZCBwdXQgaXQgc3F1YXJlbHkgaW4gdGhlIGNhbXAgb2YgRWxlY3Ryb24sIEZpcmVmb3hPUywgYW5kIHRoZSByZXN0IG9mIHRoZSBwbGFjZXMgZGV2cyBoYXZlIHB1dCBKUyB0byB1c2Ugd2hlcmUgaXQgcHJvYmFibHkgbm90IG9wdGltYWwuIApCb3RoIG9mIHRoZXNlIGFjdGl2aXRpZXMgc3RyZXNzIG11c2NsZXMgYW5kIGpvaW50cy4gT3VyIHRoZXJhcGlzdHMgd29yayBpbiBhIHBhcnRuZXJzaGlwIHdpdGggdGhlc2UgcHJvZmVzc2lvbmFscyB0byBhc3Npc3QgeW91IHRocm91Z2ggdGhlIGltcG9ydGFudCByZWNvdmVyeSBwaGFzZSBvZiB0cmFpbmluZy4gClJ1bSBpcyBjaGVhcGVyIHRoYW4gYm90dGxlZCB3YXRlciBidHcuIFdlbGwgYWZ0ZXIgYSBmZXcgZHJpbmtzIEplc3MgZGVjaWRlZCB0aGF0IG9uZSBvZiB0aGUgd2FpdGVycyBsb29rZWQgbGlrZSB0aGUgTmljYXJhZ3VhbiB2ZXJzaW9uIG9mIFZpbmNlIFZhdWdobi4gWW91IGJlIHRoZSBqdWRnZSBvZiB0aGF0Li4gCjUzKSBIZWxsbyBIZWxsbyBieSBFbHRvbiBKb2huIChmZWF0LiBMYWR5R2FHYSkuIApBbmQgdGhlbiB5b3UgZ28gZXZlbiBmdXJ0aGVyIGFzIHRvIHNwZXcgbW9yZSBidWxsc2hpdCBzYXlpbmcgbnBjIGFyZSBnb2luZyB0byByZWNvZ25pemUgeW91IG5vIG1hdHRlciB3aGF0ICh3aGljaCBwcm92ZXMgbXkgcG9pbnQgcmlnaHQgdGhlcmUgZm9yIG9uZSkgYWxzbyB5b3UgY2xlYXJseSBkb250IGtub3cgdGhlIGdhbWUgb3IgdGhlIHdvcmxkIGl0IHNldCBpdCBjdXogbm90IGV2ZXJ5b25lIGtub3dzIHRoZXkgYXJlIG91dGxhd3MgYW5kIHlvdSBldmVuIGJlY29tZSBhIGRlcHV0eSBhdCBvbmUgcG9pbnQuIFlvdXIga2luZCByZWFsbHkgbmVlZCB0byBqdXN0IHN0YXkgcXVpZXQsIHlvdSBvbmx5IGh1cnQgdGhlIGluZHVzdHJ5IHdpdGggeW91ciBidWxsc2hpdApUcnlpbmcgdG8gcHVuaXNoIHBhcmVudHMgaXMgbGlrZSBzaG9vdGluZyBwb29sIHdpdGggYSByb3BlLiBJdCBpbmVmZmVjdGl2ZSBhbmQgYSB3YXN0ZSBvZiBsaWZlLi4gClRoZSBpZGVhIHRoYXQgaW1taWdyYW50IGdyb3VwcyBzbG93bHkgY2xpbWJlZCB0aGVpciB3YXkgdXAgdGhlIGVjb25vbWljIGxhZGRlciBvdmVyIGdlbmVyYXRpb25zIGlzIGxhcmdlbHkgZmFsc2U7IHRoZSBpbW1pZ3JhbnRzIHRoYXQgd2VyZSBwb29yIG92ZXJ3aGVsbWluZ2x5IGVuZGVkIHVwIGdvaW5nIGJhY2sgdG8gdGhlaXIgbmF0aXZlIGNvdW50cmllcy4gV2hhdCBhY3R1YWxseSBoYXBwZW5lZCBpcyB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIHNlbGVjdGVkIGZvciBwZW9wbGUgd2hvIGNvdWxkIG1ha2UgbW9uZXk7IGJsYWNrcyBzaW1wbHkgbmV2ZXIgd2VudCBiYWNrIHRvIEFmcmljYSBiZWNhdXNlIHRoZXkgbmVlZCB3aGl0ZSBwZW9wbGUgdG8gYmUgYXMgcmljaCBhcyB0aGV5IGFyZSB0b2RheSAoYmxhY2tzIGhhdmUgYWx3YXlzIGJlZW4gd2VhbHRoaWVyIHRoYW4gdGhlIGF2ZXJhZ2UgcnVzc2lhbiwgZXZlbiB1bmRlciBzbGF2ZXJ5KS4uIApOb3cgZ2V0eW91ciBwcmFjdGljZSBpbiBqdXN0IHBsYXlpbmcgd2l0aCBwbGF5IG1vbmV5LiBPbmNlIHlvdSB0aGluayB5b3Vnb3QgaXQgZmlndXJlZCBvdXQsIGdvIHRvIHRoZSB0b3VybmFtZW50IHNlY3Rpb24gb2YgcmVhbCBtb25leWdhbWVzIGFuZCBsb29rIGZvciAiZnJlZXJvbGwgdG91cm5hbWVudHMiLiAKQnV0IHVubGlrZSBURlNBcywgUlJTUHMgc3RpbGwgcHJvdmlkZSB0aGF0IHRheCBkZWR1Y3Rpb24sIG9uZSBvZnRlbiBhY2NvbXBhbmllZCBieSBhIGp1aWN5IHRheCByZWZ1bmQgaW4gdGhlIHNwcmluZy4gClRoZW4gSSB0b29rIDIgcm91bmQgdGhpbmdzIChpbiBteSBjYXNlIHR3byBQcmluZ2xlcyBjYW4gdG9wcykgYW5kIHNtdXNoZWQgdGhlIHBvb2YgYmV0d2VlbiB0aGVtIGFuZCBjdXQgYXJvdW5kIHRoZSBlZGdlcyB0byBnZXQgdGhlIHNoYXBlLiBUaGVuIEkgcm90YXRlZCB0byB0aGUgb3Bwb3NpdGUgc2lkZSAoc28gdG9wIHRvIGJvdHRvbSBmaXJzdCwgdGhlbiBzaWRlIHRvIHNpZGUpIGFuZCBkaWQgaXQgYWdhaW4uIE1ha2Ugc3VyZSB0byBrZWVwIHRoZSBmb2xkZWQgaW4gaGFsZiB5YXJuIGtub3R0ZWQgYXJvdW5kIHRoZSBwb29mIG91dCBvZiB0aGUgd2F5LgpXaHkgd2FzIGhlIHRoZSBzbWFydGVzdD8gT2YgYWxsIHRoZSBDUCByYWlkcyBJIGNvb3JkaW5hdGVkLCBldmVyeSBzdXNwZWN0IGVpdGhlciBnaXZlcyB1cCB0aGVpciBkZXZpY2VzIGFuZC9vciBhZG1pdHMgdG8gcG9zc2Vzc2luZyBpdC4gVGhpcyBndXkgY2xlYXJseSBrbmV3IGhlIHdhcyBkb2luZyB3cm9uZyBhbmQgaGFkIHN0dWRpZWQgdXAgb24gaXQuIApUaG9zZSBzZXRzIG9mIHJ1bGVzLCBhcyB3ZWxsIGFzIHBva2VyIHNlY3JldHMsIHRlbmQgdG8gY2F1c2UgYSBudW1iZXIgb2YgdGhlc2Ugbm9ybWFsbHkgb3V0c3RhbmRpbmcgYXRobGV0ZXMgdG8gYmVsaWV2ZSB0aGUgcG9rZXIgb25saW5lIGlzIHJpZ2dlZC4gCk15IG1vdGhlciBkaWRuJ3Qgd2FudCBtZSB0byBkbyB0aGUgYWRvcHRpb24sIGFuZCBldmVuIG9mZmVyZWQgdG8gdGFrZSB0aGUgYmFieSBhbmQgcmFpc2UgaXQgaGVyc2VsZi4gSSBrbmV3IHNoZSB3YW50ZWQgdG8gbWFrZSBzdXJlIHNoZSBkaWQgZXZlcnl0aGluZyBzaGUgY291bGQgdG8ga2VlcCBoZXIgZmFtaWx5IGNsb3NlLCBidXQgSSB0cmllZCB0byBleHBsYWluIHRoYXQgdGhpcyBhZG9wdGlvbiB3b3VsZG4ndCBiZSBqdXN0IGFib3V0IG1lIGFuZCBteSB0cmF1bWEuIFRoZSB3b21hbiB3aG8gd291bGQgYmVjb21lIHRoZSBiYWJ5J3MgbW90aGVyLCBDbGFyYSwgd2FzIGdldHRpbmcgc29tZXRoaW5nIHNoZSdkIGJlZW4gZHJlYW1pbmcgb2YgZm9yIGEgbG9uZyB0aW1lLiAKV2hhdHMgdXAgd2l0aCB0aGUgYmVlIGxhZHk/IFdoeSBkaWQgbm8gb25lIGxvb2sgYXQgaGVyIHdoZW4gdGhleSB0b29rIGF3YXkgVGhhbGUgaW4gdGhlIHN0YXJ0PyBIb3cgY2FuIHNoZSB0YWxrIHRvIGJlZXM/IDo6OiBXSEFUIFRIRSBGVUNLIElTIFVQIFdJVEggVEhFIEJFRSBMQURZPyEgV0hBVCBJUyBIRVIgSk9CIEhFUkU/ISBJIGZpZ3VyZWQgc2hlIGhhZCBzb21lIGZ1dHVyZSB0ZWNoLCB3aGljaCBpcyB3aHkgc2hlIGNvdWxkIGJlIGEgYmVlIHdoaXNwZXJlci4gClRoZXkgZm91bmQgYSB1c2VmdWwgY29ubmVjdGlvbiB0aHJvdWdoIEdvbGRzdG9uZSBhbmQgaW52aXRlZCBoaW0gdG8gdGhlIFdoaXRlIEhvdXNlIHRoZSB3ZWVrIGJlZm9yZSBoZSBzZW50IHRoZSBlbWFpbC4gClJlc3VsdHMgaW5kaWNhdGVkIHRoYXQgcHNpbG9jeWJpbiBlbmhhbmNlZCBkaXZlcmdlbnQgdGhpbmtpbmcgYW5kIGVtb3Rpb25hbCBlbXBhdGh5IHRoZSBtb3JuaW5nIGFmdGVyIHVzZS4gRW5oYW5jZW1lbnRzIGluIGNvbnZlcmdlbnQgdGhpbmtpbmcsIHZhbGVuY2Ugc3BlY2lmaWMgZW1vdGlvbmFsIGVtcGF0aHksIGFuZCB3ZWxsIGJlaW5nIHBlcnNpc3RlZCBzZXZlbiBkYXlzIGFmdGVyIHVzZS4gCkhvd2V2ZXIsIEkgY2Fubm90IGZpbmQgYW55IGRvY3VtZW50IHN0YXRpbmcgdGhpcyBjbGVhcmx5LiBUaGUgY2xvc2VzdCBpcyB0aGUgVCB0aGF0IHN0YXRlcyB0aGF0IDYgbW9udGhzIHZhbGlkaXR5IHN0YXJ0cyBmcm9tIGRhdGUgb2YgYXBwcm92YWwgb2YgYXBwbGljYXRpb24uClNtdWNrbGVzIHUKTXkgc29uIGRvZXNuIHdhbGsgICBoZSBoYXMgc3Bhc3RpYyBkaWFwbGVnaWMgY2VyZWJyYWwgcGFsc3kgYW5kIGR5c3RvbmlhLiBZb3UgaGF2ZSBhbnkgaWRlYSBob3cgaGFyZCBpdCBpcywgdG8gZ2V0IGEgNXlvIHJlYWR5IGZvciBzaW5nbGUgZGlnaXQgd2VhdGhlciBhbmQgYSBub3JtYWwgaHlwZXIgNHlvPyBIYXJkIGFmLiBJIHRoZW4gbG9hZCB0aGVtIHVwLCBhbmQgaGlzIHN0cm9sbGVyLCBkcml2ZSB0byB0aGUgc3RvcmUsIGdldCB0aGVtIGJvdGggb3V0LCBnZXQgbWlsayBvciB3aGF0ZXZlciAgIHRoZW4gZG8gaXQgYWxsIG92ZXIgYWdhaW4gaW4gcmV2ZXJzZS4KQ2lyY3VsYXIgYXJlbmFzIGFyZSBub3QgdGhhdCBncmVhdCBmb3IgZG90ZXMgaSBndWVzcz8gTm8gaWRlYSB3aGF0IFRJIGlzIGxpa2UzKSBLaW5kIG9mIHdoYXQgeW91IGdldCB3aGVuIHlvdSBoYXZlIGEgZmV3IGRheXMgYXQgdGhlIGFyZW5hIHRvIHNldCB1cC4gVGhvc2UgUEdMIGd1eXMgZG8gd2hhdCB0aGV5IGNhbiBidXQgdGVjaCBpc3N1ZXMgYXJlbiBnb25uYSBiZSAxMDAlIGlyb25lZCBvdXQgd2hlbiB0aGV5IGhhdmUgYSBuZXcgc2V0dXAgZXZlcnkgZXZlbnQuNCkgSSBkb24gdGhpbmsgeW91IHNob3VsZCB3b3JyeSBhYm91dCB3aGF0IHR3aXRjaCBjaGF0IGhhdmUgdG8gc2F5IGFuZCBqdXN0IHByaW9yaXRpemUgd2hhdCB5b3Ugd2FubmEgZG8gYW5kIGVuam95IHRoZSBldmVudHMgc2luY2UgeW91IG5ldmVyIGtub3cgd2hlbiB5b3UgYXJlIGdvbm5hIGdldCB5b3VyIG5leHQgY2hhbmNlLiAKU2FpZCBoZSBleHBlY3RzIEtpc3NuZXIgd2lsbCBiZSByZWxlYXNlZCBhZnRlciBhdHRlbmRpbmcgYSBiYWlsIGhlYXJpbmcgb24gTW9uZGF5IG1vcm5pbmdNYXJsZXkgc2FpZCBpdCBoaXMgdW5kZXJzdGFuZGluZyB0aGUgY2FzZSBjb25jZXJucyBhIHJlY2VudCBhbGxlZ2F0aW9uLiBIZSBkaWQgbm90IGRpc2Nsb3NlIGZ1cnRoZXIgZGV0YWlsc0ludmVzdGlnYXRvcnMgYXJlIHN0aWxsIHNlZWtpbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNhc2UuIEFueW9uZSB3aG8gbWF5IGtub3cgc29tZXRoaW5nIG1vcmUgYWJvdXQgdGhlIGFsbGVnYXRpb25zIGlzIGVuY291cmFnZWQgdG8gY2FsbCBFc3NleCBDb3VudHkgT1BQIGF0IDEgODg4IDMxMCAxMTIyLiAKVGhlIFNub3dtYXNzIFJvdGFyeSBDbHViIGlzIGEgc21hbGwgYnV0IHBhc3Npb25hdGUgZ3JvdXAgb2YgaW5kaXZpZHVhbHMgd2hvIGRvIHdoYXQgaXQgdGFrZXMsIGluIGZ1biB3YXlzLCB0byBtYWtlIG91ciBjb21tdW5pdHkgYSBiZXR0ZXIgcGxhY2UgYW5kIHRvIGhlbHAgdGhvc2UgaW4gbmVlZC4gCihNZXhpY2FuL0FzaWFuIGZ1c2lvbiwgZHJlc3NlZCB1cCBidXJnZXJzIGFuZCBib296eSBtaWxrc2hha2VzLCBkZWxpY2lvdXMgbW9kZXJuIGl0YWxpYW4gcGxhY2UgY2FsbGVkIFNjYXJwZXR0YSwgYWxvbmcgd2l0aCBhIGZldyBvdGhlcnMpLiAKSSBhbHNvIGxpc3RlbiB0byBhIGRlY2VudCBhbW91bnQgb2YgZW1vIG11c2ljLCB3aGljaCBpcyBwcmV0dHkgY29uc2lzdGVudGx5IHJlZ2FyZGVkIGFzIGx5cmljcyBkcml2ZW4sIHRob3VnaCBJIHRoaW5rIHRoZSBwYXRob3MgZGVsaXZlcmVkIGJ5IGdvb2QgZW1vIHZvY2FsaXN0cyBpcyB3aGF0IHJlYWxseSBkcmF3cyBtZSB0byBvdGhlcndpc2Ugc29waG9tb3JpYyBleHByZXNzaW9uLiAKVGhlIGdhcm1lbnQsIG1hcmtldGVkIHVuZGVyIHRoZSAnUHJvIEhpamFiJyBicmFuZCwgaXMgZGVzaWduZWQgdG8gYWxsb3cgYXRobGV0ZXMgdG8gb2JzZXJ2ZSB0aGUgdHJhZGl0aW9uYWwgSXNsYW1pYyBwcmFjdGljZSBvZiBjb3ZlcmluZyB0aGUgaGVhZCB3aXRob3V0IGNvbXByb21pc2luZyBwZXJmb3JtYW5jZS4KSSB3YXNudCBzZXR0aW5nIG91dCB0byBhcmd1ZSBhYm91dCB0ZWFjaGluZyB3YWdlcyBhbmQgaWYgdGhleSB3ZXJlIGZhaXIgb3Igbm90LiBJIGRpZG4gZXhwcmVzcyBteSBvcGluaW9uIG9uIHRoYXQgb25lIHdheSBvciB0aGUgb3RoZXIuIE15IGludGlhbCByZXNwb25zZSB3YXMgYmVjYXVzZSBpIGludGVycHJldGVkIE9QIGFzIHNheWluZyB0ZWFjaGVycyBpbiBvdGhlciBjb3VudHJpZXMgbWFrZSBtb3JlIG1vbmV5IHRoYW4gdGhlIFVTLiBJIHBvc3RlZCBhbiBhcnRpY2xydGhhdCBzaG93ZWQgdGhpcyBpc24gdHJ1ZSBidXQgY2FuIHVuZGVyc3RhbmQgdGhhdCBpIG1heSBoYXZlIGludGVycHJldGVkIHRoZSBpbml0aWFsIGNvbW1lbnQgaW5jb3JyZWN0bHkuIEkgd2FzIHRyeWluZyB0byBjbGVhciB1cCB3aGF0IGkgdGhvdWdodCB3YXMgYSBtaXNjb25jZXB0aW9uLgpLbWZjb3N0dW1lZGVzaWduZXIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkdvdCBhIGhhbmtlcmluZyBmb3IgZml4aW4nIHVwIHRoZSBob21lIGZyb250PyBUaGVyZSdzIG5vIG5lZWQgdG8gYmUgYSBmdXNzaW4nIG92ZXIgdGhlIHN0b3JlcyBpbiB5b3VyIHRvd24gd2hlbiB5b3UgY2FuIGhhdmUgbmV3IHN0dWZmIGZvciB0aGUgaG9tZXN0ZWFkIGF0IHRoZSBjbGljayBvZiB0aGUgbW91c2UuIEtpY2sgb2ZmIHlvdXIgYm9vdHMgYW5kIGxvYWQgdXAgb24gc29tZSBvZiB0aGVzZSB3ZXN0ZXJuIGhvbWUgZGVjb3Igc3VnZ2VzdGlvbnMuLiAKVGhhdCdzIGFscmlnaHQsIGl0J3MgYSBoYXJkIHRpbWUgdG8gYmUgcG9zaXRpdmUgZm9yIGEgbG90IG9mIHBlb3BsZS4gCldpdG5lc3MgcmVwb3J0IGlzIGFzIGZvbGxvd3MsICJJIGFtIHJlcG9ydGluZyBtb3JlIHRoYW4gb25lIFVGTywgSSB3aXRuZXNzZWQgMyBkaWZmZXJlbnQgYWlyY3JhZnRzIGluIG9uZSBuaWdodCB3aGlsZSBnZXR0aW5nIGZhc3QgZm9vZCBpbiBteSBjYXIuIApBcnQgcHJvamVjdC4gCllvdSBhcmUgdGhlIGZyb250IGxpbmUgdG8gYW5ncnkgYW5kIGFubm95aW5nIHBlb3BsZSBhbmQgdGhlcmUgYXJlIHByb2Nlc3Nlcy9zeXN0ZW1zL3BvbGljaWVzIHRoYXQgeW91IGFyZSBsaXRlcmFsbHkgbm8gY29udHJvbCBvdmVyLiBUaGV5IHdvcmsgc28gaGFyZCB3aXRob3V0IGJyZWFrcywgY292ZXJlZCBpbiBncmVhc2UgYW5kIHN3ZWF0LCBhcmUgb24gdGhlaXIgZmVldCBhbGwgZGF5IGFuZCBnZXQgdmVyeSBsaXR0bGUgcGF5LiBMYXRlbHksIEkgYW0gbm90aWNpbmcgdGhlIGluZmx1eCBvZiB0aG9zZSBmcm9tIG90aGVyIGNvdW50cmllcyAoRVNMLCB0ZW1wb3JhcnkgZm9yZWlnbiB3b3JrZXJzLCBldGMuKSBhbmQgdGhleSBzaG91bGQgYmUgZ2l2ZW4gdGhlIHV0bW9zdCByZXNwZWN0IGZvciBhIGhhcmQgam9iIHdlbGwgZG9uZS4uIAoyLiBUcnVtYm8gaGFzIGFuIGludGVyZXN0aW5nIGhpc3RvcnksIHRvIHB1dCBpdCBtaWxkbHkuIApDb21tYW5kZXJzIGluIHdoaWNoIHRoZXkgYXJndWVkIHRoYXQgdGhleSwgbm90IGFsbGllcywgd2VyZSBiZXN0IHBvc2l0aW9uZWQgdG8gZGVzdHJveSB0aGUgbGFzdCB2ZXN0aWdlcyBvZiB0aGUgSXNsYW1pYyBTdGF0ZSB0ZXJyaXRvcmlhbCBjYWxpcGhhdGUgaW4gU3lyaWEuIFRoZW4gY2FtZSBjb25jZXJucyBhYm91dCB0aGUgZmF0ZSBvZiB0aGUgS3VyZHMsIHdobyBmYWNlIGFzc2F1bHQgZnJvbSBUdXJrZXksIHdoaWNoIGNvbnNpZGVycyB0aGVtIGEgdGVycm9yaXN0IGdyb3VwLCBhbmQgSXJhbmlhbiByZWdpb25hbCBpbmZsdWVuY2UuLiAKSXQgd2FzIGRlZmluaXRlbHkgc29tZXRoaW5nIG1hbnkgcGVvcGxlIHNob3VsZCBsb29rIGZvcndhcmQgdG8gd2hlbiBwbGF5aW5nIG9ubGluZS4uIApDbGFpcmUgTWFyaWUgTWlsbGVyIFNlbWluYXJzIG9mZmVyIGl0cyBjZXJ0aWZpY2F0aW9uIGNvdXJzZXMgYXQgMTQgZGlmZmVyZW50IGNpdGllcyBhY3Jvc3MgdGhlIGNvdW50cnksIHRocm91Z2hvdXQgdGhlIHllYXIuIApJIG5ldmVyIGhlYXJkIGZyb20gaGltIGFnYWluLiAKVGhlcmUgd2lsbCBiZSBwbGF5ZXJzIHdobyBjb21lIHRvIHRoZSB0YWJsZSByZWFsbHkgaHVuZ3J5IHRvIHdpbiBhbmQgdGhlc2UgcHJlZGF0b3JzIGxvb2sgZm9yIHRoZSB3ZWFrZXIgcGxheWVycy4gClRMO0RSOiBBbHdheXMgaGFkIGlzc3Vlcy4gc3RhcnRlZCBnZXR0aW5nIHdvcnNlIGluIG15IGVhcmx5IDIwcyBzbyBJIG1vdmVkIGZvcndhcmQgd2l0aCBnb2luZyB0byBhY3R1YWwgdGhlcmFweS4gSSB3YXMgcmlnaHQuIHRoZXJlIHdhcyBzb21ldGhpbmcgd3Jvbmcgd2l0aCBtZS4KUGxlYXNlIHB1dCB0aGUgc3ViamVjdCBhcyAiSUxvdmUgR2FHYSIuIApBZGQgdGhlIGJlZWYgc3RvY2ssIGRpY2VkIHRvbWF0b2VzLCB0aHltZSwgcm9zZW1hcnkgYW5kIHBhcnNsZXkgYW5kIGJyaW5nIHRvIGEgc2ltbWVyLiAKSSBkb24ndCBrbm93IHdoYXQgeW91IGhhdmUgdG8gZG8gZm9yIHNjaG9sYXJzaGlwcyBidXQgdGhlIGFkdmlzb3JzIGhlcmUgYXJlIHZlcnkgdW5kZXJzdGFuZGluZyBhbmQgY2hhbmdpbmcgeW91ciBtYWpvciBpcyBlYXN5IHBlYXN5LCBJIGtub3cgYSBsb3Qgb2YgZnJpZW5kcyB3aG8gaGF2ZSBjaGFuZ2VkIHRoZWlycyBpbiB0aGVpciBmaXJzdCB5ZWFyLkF1YnVybiBoYXMgZ3JlYXQgY2x1YnMsIHRoZXJlIHdpbGwgYmUgb25lIG91dCB0aGVyZSBmb3IgeW91IHRvIGJlIGEgcGFydCBvZi4gCiJZb3UgY2FuIHBpbnBvaW50IGEgcG90ZW50aWFsIHNvdXJjZSBvbmx5IHRvIGZpbmQgb3V0IGEgZmV3IHdlZWtzLCBtb250aHMgb3IgeWVhcnMgbGF0ZXIgaXQgd2FzIG1heWJlIG5vdCB0aGUgc291cmNlIGFuZCB3ZSBydWluZWQgYW4gaW5kdXN0cnkgaW4gcmVzcG9uc2UuIi4gCk1ha2luZyBmcmllbmRzIHdpdGggeW91cm9ubGluZSBwb2tlcmJ1ZGRpZXMgaXMgcG9zc2libGUgYW5kIHlvdSBjYW4gZXZlbiBoYXZlIGEgY2hhdCB3aXRoIHRoZW0gd2l0aCB0aGUgY2hhdCBmZWF0dXJlIGF2YWlsYWJsZS4gQWxzbywganVzdCBiZWNhdXNlIHlvdSBjYW4ndCBzZWUgeW91ciBvcHBvbmVudHMgb25saW5lIG1lYW4geW91IGNhbiBzYXkgd2hhdGV2ZXIgeW91IHdhbnQuIFRoZXJlIGFyZSBjZXJ0YWluIHJ1bGVzIG9ubGluZSBwbGF5ZXJzIGZvbGxvdywgYW5kIHZlcmJhbGx5IGhhcmFzc2luZyB5b3VyIG9wcG9uZW50cyBpcyBkb3ducmlnaHQgd3JvbmcuIApUaGUgUGF1bHNvbiBDb21wYW55IGhhcyBiZWVuIHByb2R1Y2luZyBzb21lIG9mIHRoZSBiZXN0IGFuZCBtb3N0IHRvcCBvZiB0aGUgbGluZSBwb2tlciBjaGlwcyBpbiBoaXN0b3J5LiBTdWNoIGFydGlzdHJ5IGlzIG1vc3QgZGVmaW5pdGVseSBvbiBkaXNwbGF5IHdpdGggdGhlc2UgYnJpbGxpYW50IGNoaXBzIGFuZCB0aGUgMTAwIFBhdWxzb24gUGhhcm9haHMgQ2x1YiBQb2tlciBDaGlwIFNldCB0cnVseSBlbWJvZGllcyB0aGUgbG9vayBvZiB3aGF0IGFuIGVsZWdhbnQgcG9rZXIgY2hpcCBzZXQgZW1ib2RpZXMuLiAKSXQgYWx3YXlzIHNlZW1zIGFzIHRob3VnaCBhIG5ldyBkZWNrIG9mIGNhcmRzIGJlY29tZXMgc3RpY2t5IGFuZCBvbGQgZmFyIHRvbyBzb29uLiBUaGUgb2lscyBmcm9tIHlvdXIgaGFuZHMsIGZvb2QgcGFydGljbGVzIGFuZCBqdXN0IHRoZSBjb25zdGFudCBzaHVmZmxpbmcgcHJvdmlkZXMgd2VhciBhbmQgdGVhciBvbiB5b3VyIGNhcmRzIGNhdXNpbmcgeW91IHRvIGhhdmUgdG8gcmVwbGFjZSB0aGVtIGZhciB0b28gb2Z0ZW4uIFdoYXQgeW91IG5lZWQgaXMgMTAwIHBsYXN0aWMgcGxheWluZyBjYXJkcy4gCklmIHlvdSBvbmx5IHBsYXkgNWsgZ2FtZXMsIHlvdSBhcmUgc3RpbGwgcXVpdGUgbmV3LCB1bmxlc3MgeW91IGhhdmUgc29tZW9uZSBleHBlcmllbmNlZCBndWlkaW5nIHlvdS4gaSB3b3VsZG50IHNheSBpdCB1bmxlc3MgeW91IGhhdmUgc29tZW9uZSB0byBwbGF5IHdpdGggeW91LiBkaXNjdXNzaW5nIHN0cmF0ZWd5IGFuZCBleHBlcmllbmNlIHdpdGggb3RoZXJzIG1ha2UgdGhpcyBnYW1lIGEgbG90IGJldHRlci4KR2V0IGFza2VkIGZvciBjaGFuZ2UgMTAgdGltZXMgKG9yIG1vcmUpIGluIGEgc2luZ2xlIHBhc3MgZG93biBTcHJpbmcgR2FyZGVuIHJvYWQuICgxMCBwb2ludHMpCkV2ZW4gd2hlbiB3ZSBkaWQgZ2V0IGEgY2hhbmNlLCBLYXJsIE1vb3JlIGhpdHMgdGhlIHBvc3QgYW5kIHRoZW4gaXQgYm9iYmxlcyBvdXQuLiAKRmluYWxseSBJIHJlYWxpemVkIHRoYXQgSSBuZWVkZWQgdG8gaW1wcm92ZSwgZHJvcHBlZCB0aGUgdGFibGUgYW1vdW50IGFuZCBtb3ZlZCB0byBoZWFkcyB1cC4gQWZ0ZXIgYXJvdW5kIGEgeWVhciBvZiBicmVha2V2ZW4gcmFrZWJhY2sgZ3JpbmRpbmcsIHRoaXMgaXMgd2hhdCBwcm9wZWxsZWQgbWUgaW50byBoaWdoIHN0YWtlcyBpbiBsYXRlIDIwMDkuLiAKV2VkbmVzZGF5LCBGZWIuCkRvIGl0IGZpcnN0LiBFc3BlY2lhbGx5IGlmIHlvdSBoYXZlIG11bHRpcGxlIGNoYXJhY3RlcnMvc3RvcnlsaW5lcyBqdW1waW5nIHRocm91Z2ggdGltZS4gRXZlbiBpZiBpdCBqdXN0IGEgcm91Z2ggdGltZWxpbmUgdGhhdCBjaGFuZ2VzIHRocm91Z2hvdXQgZHJhZnRzIGl0IHdpbGwga2VlcCB0aGUgY2hyb25vbG9naWNhbCBvcmRlciBpbnRhY3QgbWFrZSBldmVyeXRoaW5nIG11Y2ggZWFzaWVyIGZvciB5b3UuIApUaGlzIG1lYW5zIHRoYXQgbW9zdCBvZiB0aGUgdGltZSB0aGUgb25seSByZWFzb24gdG8gcmFpc2UgYmVmb3JlIHRoZSBmbG9wIGlzIHRvIGJ1aWxkIHRoZSBwb3QuIFNvbWUgYWR2aWNlIGhhcyBiZWVuIGdpdmVuIHRoYXQgd291bGQgbGVhZCBhIHBlcnNvbiB0byBiZWxpZXZlIGl0IGlzIG5vdCBhIGdvb2QgaWRlYSB0byByYWlzZSBiZWZvcmUgdGhlIGZsb3AgaW4gT21haGEvOC4gRG8gbm90IHRha2UgdGhpcyBhZHZpY2UuLiAKVmFjdXVtIGV4dHJhY3Rpb24gY2F1c2VkIGxlc3MgYW5hbCBzcGhpbmN0ZXIgdHJhdW1hIHRoYW4gZm9yY2VwcyBkZWxpdmVyeSAocmlzayBkaWZmZXJlbmNlICAwLjA2LCA5NSUgQ0k6ICAwLjEwLCAgMC4wMiksIGJhc2VkIG9uIDcgUkNUcyAobj0yLDU4MikuIE9uZSBhbmFsIHNwaGluY3RlciB0ZWFyIHdvdWxkIGJlIGF2b2lkZWQgZm9yIGV2ZXJ5IDE4IHdvbWVuIHdob3NlIGRlbGl2ZXJ5IHdhcyBhc3Npc3RlZCBieSB2YWN1dW0gcmF0aGVyIHRoYW4gZm9yY2Vwcy4gSGV0ZXJvZ2VuZWl0eSBiZXR3ZWVuIHRoZSB0cmlhbHMgd2FzIG5vdCBzaWduaWZpY2FudC4KVGhleSBtYWtlIGl0IGdvb2QgYW5kIGVuY291cmFnZSBwZW9wbGUgdG8gc3BlbmQgbW9uZXksIGZhbnRhc3RpYy4gCiJJIGZ1Y2sgeW91ciBtb3RoZXIiLiBJdCB0b29rIG1lIGEgZmV3IHNlY29uZHMgdG8gcHJvY2VzcyB3aGF0IHdhcyBqdXN0IHNhaWQgYW5kIEkgbG9vayBhdCBoaW0gYW5kIHNheSAiV293LCBpZiB5b3Ugc2FpZCB0aGF0IHRvIG1lLCB3ZSBoYXZlIHRvIHRha2UgYSB3YWxrIG91dHNpZGUiIGhlIHNheXMgIkZ1Y2sgeW91ciBtb3RoZXIiLiAKSmlsbCBsaWtlcyB0byBiYWtlIGR1cmluZyB0aGUgaG9saWRheXMgYW5kIENocmlzdG1hcyBtb3JuaW5nIGlzIHNwZW50IG9wZW5pbmcgZ2lmdHMgYW5kIG11bmNoaW5nIG9uIGhvbWUgbWFkZSB0cmVhdHMuIFNoZSB0aGVuIGRlY29yYXRlcyB0aGUgZGluaW5nIHRhYmxlIHdpdGggaGVyIGdyYW5kbW90aGVyIGdvbGQgZWRnZWQgcGxhdGVzLCB0aGUgYW50aXF1ZSBzaWx2ZXJ3YXJlIGxlZnQgdG8gaGVyIGJ5IGhlciBtb3RoZXIgYW5kIGdyZWVuZXJ5IGN1dCBmcm9tIHRoZSBldmVyZ3JlZW5zIHRoYXQgc3Vycm91bmQgdGhlIGhvdXNlLiBMb3ZlIHRoYXQgdGhlc2UgcGllY2VzIGhhdmUgYmVlbiBpbiB0aGUgZmFtaWx5IGZvciBnZW5lcmF0aW9ucywgc2hlIHNheXMuIApJIGxvb2sgYXQgbW9zdCBtZWRpYSBhcyBQUiBmaXJtcyBmb3Igc3BlY2lhbCBpbnRlcmVzdHMgYW5kIHRoZXkgYXJlIG5vdCBtaW5lLiBBIGpvdXJuYWxpc3Qgd2hvIHdhbnRzIHRvIGRvIGEgc3Rvcnkgb24gcGVzdGljaWRlcywgZHJ1Z3MvcHJpY2VzLCBiYW5rIHRyYW5zZ3Jlc3Npb25zLCBHb3YgcmVwcyBzY2FuZGFscywgZXRjIHdpbGwgbmVlZCB0byBkbyBzbyBvdXRzaWRlIG9mIHRoZSAibW9zdCB0cnVzdGVkIG5hbWVzIGluIG5ld3MiLiBJdCB3b3VsZCBiZSBsaWtlIGRvaW5nIGEgYmFkIHByZXNzIHJlbGVhc2UgYWdhaW5zdCB0aGUgY29tcGFueSB0aGF0IGhpcmVkIHlvdS4gQSBicm9rZW4gc3lzdGVtIGZvciB0aGUgbWFzc2VzIGFuZCBhIGdvIHRvIHRvb2wgZm9yIHRoZSBzdHJpbmcgcHVsbGVycy4gVGhlIGF0dGFja3MgYXJlIHNlZW1pbmdseSBvbmx5IGRpcmVjdGVkIGF0IHRob3NlIHdobyBvcHBvc2UgdGhlIG1hY2hpbmUgdGhhdCBydW5zIHRoZSBuYXJyYXRpdmUuClVsdGltYXRlbHksIHRoZSBiZXN0IHdheSB0byBpbnZlc3Qgc2FmZWx5IGlzIHRvIGRpdmVyc2lmeS4gCkNvbHVtYnVzIEJsdmQuIApKYXBhbidzIHJvYm90IG1ha2VyIFRtc3VrIGFuZCB0aGUgU2hvd2EgVW5pdmVyc2l0eSB1bnZlaWxlZCB0aGUgZGVudGFsIHBhdGllbnQgcm9ib3QgdG8gYmUgdXNlZCBmb3Igc3R1ZGVudCB0cmFpbmluZywgd2hpY2ggaW1pdGF0ZXMgaHVtYW4gcmVhY3Rpb25zIHN1Y2ggYXMgY291Z2hpbmcsIHRvbmd1ZSBtb3ZlbWVudCBhbmQgcGFpbiByZWFjdGlvbi4gCk9ubGluZSBwb2tlciB0b3VybmFtZW50IHBsYXllcnMgY29uY2VudHJhdGUgbW9yZSBvbiBiZXR0aW5nIHBhdHRlcm5zIGFuZCByZWFjdGlvbiB0aW1lLiBUaGV5IGNhbiBhbHNvIHZpZXcgc3RhdGlzdGljcyBvZiB0aGVpciBnYW1lIGJlaW5nIGZsYXNoZWQgb24gdGhlIG1vbml0b3IuIFdoaWxlIHRyYWRpdGlvbmFsIHZlbnVlIHBva2VyIHRvdXJuYW1lbnQgcGxheWVycyBmb2N1cyBtb3JlIG9uIHRoZSBvdGhlciBwbGF5ZXJzIHJlYWN0aW9ucyBhbmQgYm9keSBsYW5ndWFnZSBhbmQga2VlcCB0cmFjayBvZiB0aGUgY2FyZCBwbGF5IGluIHRoZWlyIGhlYWRzLgpOdW1iZXJzIGFyZSBkaXZpc2libGUgYnkgNiBpZiB0aGV5IGFyZSBkaXZpc2libGUgYnkgMiBhbmQgMy4gCkZlYXR1cmluZyB0aGVyZWxlYXNpbmcgb2YgdGhlIHplcm8gSUJVIGhhenkgSVBBIHRpdGxlZDogSGFzIHRoYXQgbGluZSBldmVyIHdvcmtlZCBmb3IgeW91IGJlZm9yZT8hIE9uZSBkb2xsYXIgb2YgZWFjaCBwaW50IHNvbGQgYmVuZWZpdHMgUGluayBCb290cyBTb2NpZXR5IGFuZCBhbm90aGVyICQxIHdpbGwgYmUgZG9uYXRlZCB0byBBbmQgTm93IFNoZSBSaXNlcy4gVGhlIGV2ZW50IGFsc28gZmVhdHVyZXMgREogdHVuZXMsIHBlcmZvcm1hbmNlIGZyb20gQXNobGV5IER1Qm9zZSwgYW5kIGEgYm9vayBkcml2ZSBmb3IgbG9jYWwgbGlicmFyaWVzIGFuZCBzaGVsdGVycy4gCk5vbiByZXRhaWwgYWN0aXZpdGllcyBpbmNsdWRlIHRoZSBBbm5hIE1hcmlhIElzbGFuZCBIaXN0b3J5IE11c2V1bSwgZnVybmlzaGVkIHdpdGggYXJ0aWZhY3RzIHJlbGF0aW5nIHRvIGxpZmUgb24gdGhlIGlzbGFuZCBmcm9tIHRoZSBlYXJsaWVzdCBzZXR0bGVycyAgIHRoZSBUb2NvYmFnYSBJbmRpYW5zICAgdGhyb3VnaCB0aGUgcG9zdCB3YXIgc2V0dGxlbWVudHMgb2YgdGhlIDE5NTBzLiBOZXh0IGRvb3IgaXMgdGhlIGFsIGZyZXNjbyBBbm5hIE1hcmlhIEphaWwsIGJ1aWx0IGluIDE5MjcuIEl0J3Mgc2FpZCB0aGF0IG9uY2UgbWlzY3JlYW50cyBzcGVudCBhIG5pZ2h0IGluIHRoZSBmYWNpbGl0eSBmaWdodGluZyBvZmYgbW9zcXVpdG9lcywgdGhleSB1c3VhbGx5IHdlcmVuJ3Qga2VlbiB0byBhY3QgdXAgYWdhaW4uClRoYXQgd2F5LCBzb2NpZXR5IGNhbiBhdCBsZWFzdCByZW9yZ2FuaXplIHNvIHRoYXQgcGVvcGxlIGRldmVsb3AgdGhlIHNraWxscyB0byBkbyB3b3JrIHRoYXQgaXMgYWN0dWFsbHkgcmVsZXZhbnQgdG8gb3VyIGFnZS4gVGhhdCBoYXNuJ3QgaGFwcGVuZWQgaW4gQW1lcmljYSBkZXNwaXRlIGRlY2FkZXMgb2YgZm9yZXdhcm5pbmcsIGJ1dCBJIGhhdmUgaG9wZSB0aGF0IEtvcmVhbiBzb2NpZXR5IGFzIGEgd2hvbGUgaXMgc21hcnRlciBvciBhdCBsZWFzdCBtb3JlIGF3YXJlIG9mIHJlYWxpdHkgdGhhbiB0aGF0LiAKSSBvZnRlbiB0aG91Z2h0IHRoYXQsIHNob3VsZCBJIHdpbiB0aGUgbG90dGVyeSwgSSBtaWdodCBnbyBmb3Igc29tZSBsaXBvc3VjdGlvbiBhbmQgYSB0dW1teSB0dWNrLCBwb3NzaWJseSBhIGJvb2Igam9iLCBtYXliZSBhIGZhY2VsaWZ0IGluIHRlbiB5ZWFycyB0aW1lLiAKVGhlIGJ1eWVyIG1heSBiZSBzYXRpc2ZpZWQgaWYgc29tZSB0cmFkZXMgYXJlIG5vdCBhdCB0aGUgYmVzdCBwcmljZSBzbyBsb25nIGFzIHRoZSBlbnRpcmUgYmxvY2sgY2FuIGJlIGJvdWdodCBxdWlja2x5IGF0IGEgbG93IGF2ZXJhZ2UgcHJpY2UuIEJ5IGVtcGhhc2l6aW5nIHNwZWVkIG92ZXIgbWlub3IgcHJpY2UgdmFyaWF0aW9ucywgdGhlIHRyYWRlciByZWR1Y2VzIHRoZSByaXNrIHNvbWUgZXZlbnQgd2lsbCBkcml2ZSB0aGUgcHJpY2UgdXAgYmVmb3JlIHRoZSBibG9jayBvZiBzaGFyZXMgaXMgYXNzZW1ibGVkLiAKTXkgcm9vbW1hdGUgaGFzIG5lcmYgd2FycyBhdCBoaXMgam9iIGFuZCB3ZSBib3VnaHQgaGltIGEgbmVyZiBzbmlwZXIgZm9yIHhtYXMgd2hpY2ggaW4gdHVybiBtYWRlIGV2ZXJ5b25lIGluIHRoZSBob3VzZSAobWUsIG15IGh1c2JhbmQgYW5kIG91ciAyIHJvb21tYXRlcykgYnV5IG9uZSBmb3Igb3Vyc2VsdmVzLiBTbyB3ZSBoYXZlIDQgZ3Jvd24gYXNzIGFkdWx0cyB3aXRoIHNuaXBlcnMgdGhhdCBjYW4gc2hvb3QgMTAwIGZ0LiBUaGUgc2NvcGVzIGRvbnQgZnVuY3Rpb24gc28gd2Ugd2VudCB0byBBbWF6b24gdG8gdHJ5IGFuZCBmaW5kIHJlYWwgc2NvcGVzLiAKQ2FwdGFpbiBNYXJ2ZWwgd2FzIHNvIG11Y2ggbW9yZSBwbGVhc2FudCB0byB3YXRjaCB0aGVuIExhc3QgSmVkaSB3YXMuLiAKVGhlbiBoZSBhbG1vc3Qgc21hY2tlZCB0aGUgYm91bmRhcnkgdGhhdCB3YXMgbmVlZGVkIG9mZiB0aGUgbGFzdCBiYWxsIGluIHRoZSBMYW5rYSBtYXRjaCwgdGhhdCB0b28gb2ZmIGEgTWFsaW5nYSB5b3JrZXIgb3V0c2lkZSBvZmYgc3R1bXAgd2hpY2ggbW9zdCBwZW9wbGUgd291bGQgYmFyZWx5IGhhdmUgcmVhY2hlZCwgbGV0IGFsb25lIGhpdCB3aXRoIGFueSBmb3JjZS4gClNoZSB0b2xkIFRoZSBTdW46IG5vdCBvZmZlbmRlZCBieSB3aGF0IHRoZXkgc2FpZCwgYmVjYXVzZSBpdCdzIGNsZWFyIHRoZXkgd2FudCBtZSBvdXQgYmVjYXVzZSBJJ3ZlIGdvdCBhIG11Y2ggc2V4aWVyIGEgYXJlIGZlZWxpbmcgdGhyZWF0ZW5lZCBiZWNhdXNlIHRoZXkgYXJlIHNlZWluZyBhIHRyYW5zIHdobyBpcyBtb3JlIGJlYXV0aWZ1bCB0aGFuIHRoZW0uIApEaWxsb24gaXMgb25lIG9mIGZvdXIgb3IgZml2ZSBwZW9wbGUgcGxhbm5pbmcgdG8gc3RheSB3aXRoIERhbiBPdHQgaW4gTGFzIFZlZ2FzIGFzIHRoZSBXb3JsZCBTZXJpZXMgdGFrZXMgcGxhY2UuCllvdSBmaW5kIGJyaWNrIG92ZW4gcGl6emEsIHBhc3RhcyBhbmQgbG9jYWwgYmVlcnMgYXMgd2VsbCBhcyB3ZWVrZW5kIGJydW5jaCBhbmQgZGVzc2VydHMuIEZpcnN0IEF2ZS4sIFN1aXRlIDEwOS4KTWF5YmUgYW4gRWFzdGVybiBXaGl0ZSBDZWRhciBpbiB0aGUgcGVyZmVjdCBlbnZpcm9ubWVudC4gSG93ZXZlciBDZWRhcnMgYXJlIE5PVCB1c2VkIGluIHRoZSBwYXBlciBtYWtpbmcgcHJvY2Vzcy4gCkluIHRoZSBlbmQgdGhlIDIwMCBMYXMgVmVnYXMgRWRnZXNwb3QgTmV4Z2VuIERpc2NvdW50IFBva2VyIENoaXAgU2V0IHdpdGggQWx1bWludW0gQ2xlYXIgVG9wIENhc2UgbWFkZSBvdXIgcGVyc29uYWwgZ2FtZSBhIGJldHRlciBleHBlcmllbmNlIGZvciBldmVyeW9uZSBpbnZvbHZlZC4gTm93IGl0J3MgcHJvYmFibHkgdGltZSB0byBnZXQgc29tZSBuZXcgcG9rZXIgdGFibGVzLCBjdXAgaG9sZGVycywgc21hbGwgYW5kIGxhcmdlIGJsaW5kIGJ1dHRvbnMsIGFuZCBldmVyeXRoaW5nIGVsc2UgdGhhdCB3aWxsIG1ha2UgdGhlIGdhbWUgYXMgY2FzaW5vIGxpa2UgYXMgaXQgY2FuIGJlLgpFcyBpc3QgendhciBlcmtlbm5iYXIsIGRhc3MgaW4gZGVuIHMgZGllIEFuemFobCBkZXIgIGlubmVuIGJlcmVpdHMgZGV1dGxpY2ggenVnZW5vbW1lbiBoYXQuIE9id29obCBkaWUgRGFtZW53ZWx0IGJlaSBkZW4gT25saW5lICBHYW1lcyBpbnp3aXNjaGVuIG1pdCBUYXVzZW5kZW4gdm9uICBpbm5lbiB2ZXJ0cmV0ZW4gaXN0LCBpc3QgZGllc2UgVGVuZGVueiBpbiBkZW4gdHJhZGl0aW9uZWxsZW4gQ2FzaW5vcyIgbm9jaCBuaWNodCBrbGFyIGVya2VubmJhci4gU3BlemllbGwgZGllIGUgYmxlaWJlbiB2b24gZGVuIE1ubmVybiBkb21pbmllcnQuLiAKSXQgd2FzIGhhcmQgdG8gbWlzcyB0aGUgc3ZlbHRlIGZpZ3VyZSBvZiBOaWtpdGEgTHV0aGVyIG9uIHRoZSBnYW1pbmcgZmxvb3Igb2YgRGVsdGluIFJveWFsZSwgdGhlIGZsb2F0aW5nIGNhc2lubyBob3RlbCBvbiB0aGUgTWFuZG92aSByaXZlciBpbiBHb2EsIHRoZSB2ZW51ZSBvZiB0aGUgc2Vjb25kIGVkaXRpb24gb2YgUG9rZXIgU3BvcnRzIExlYWd1ZSAoUFNMKSBsYXN0IG1vbnRoLiBTaGUgc3Rvb2Qgb3V0IGFtb25nIHRoZSB0aHJvbmcgb2YgbWFsZXMgaHVkZGxlZCBhdCB0aGUgYmx1ZSBmZWx0IGNvdmVyZWQgdGFibGVzLCBidXp6aW5nIHdpdGggZXhjaXRlbWVudCBhbmQgdGhlIHRocnVtIG9mIGEgaGlnaCBzdGFrZXMsIGhpZ2ggYWRyZW5hbGluIHNwb3J0LiBFdmVuIGFtb25nIHZpZXdlcnMsIHdvbWVuIGFyZSBhIG1hcmdpbmFsIHByZXNlbmNlIG1vc3RseSwgdGhleSBhcmUgcmVsYXRpdmVzIG9yIGNvbXBhbmlvbnMgb2YgdGhlIG1hbGUgcGxheWVycy4KTGUgQ29uc2VpbCBDb25zdGl0dXRpb25uZWwgYSwgIGRlIG11bHRpcGxlcyByZXByaXNlcyBkYW5zIGNldHRlIHByc2VudGUgZGNpc2lvbiwgc291bGlnbiBsJ2ltcGxpY2F0aW9uIGR1IGxnaXNsYXRldXIgZGFucyBsJ2luc3RpdHV0aW9uIGRlIGNlcyBkaXNwb3NpdGlvbnMsIGV0IGRlIGZhb24gcGx1cyBnbnJhbGUsIGRhbnMgbCdpbnN0aXR1dGlvbiBkdSBtYXJpYWdlIHRlbCBxdSdpbCBzZSBkZmluaXQgZW4gZHJvaXQgZnJhbmFpcy4gRCdhaWxsZXVycywgaWwgbmUgbWFucXVlIHBhcyBkZSBzb3VsaWduZXIgIGxhIGZpbiBkZSBzYSBkY2lzaW9uICBxdSdpbCBuJ2FwcGFydGllbnQgcGFzIGF1IENvbnNlaWwgY29uc3RpdHV0aW9ubmVsIGRlIHN1YnN0aXR1ZXIgc29uIGFwcHJjaWF0aW9uICBjZWxsZSBkdSBsZ2lzbGF0ZXVyIHN1ciBsYSBwcmlzZSBlbiBjb21wdGUsIGVuIGNldHRlIG1hdGlyZSwgZGUgY2V0dGUgZGlmZnJlbmNlIGRlIHNpdHVhdGlvbiAuIExlIENvbnNlaWwgQ29uc3RpdHV0aW9ubmVsIHJhcHBlbGxlIGRvbmMgc2EgZm9uY3Rpb24gZGUgZ2FyYW50IGRlIGxhIENvbnN0aXR1dGlvbiBxdWkgc2UgZGlzdGluZ3VlIGRlIGNlbGxlIGR1IGxnaXNsYXRldXIuIElsIHNvdWxpZ25lIGRvbmMsIHBhciB2b2llIGRlIGNvbnNxdWVuY2UsIHF1J3VuZSBtb2RpZmljYXRpb24gZHBlbmQgZW50aXJlbWVudCBkZSBsJ2FwcHJjaWF0aW9uIGR1IGxnaXNsYXRldXIuIFBldXQgb24geSB2b2lyIHBvdXIgYXV0YW50IHVuIGFwcGVsIGR1IHBpZWQgYXUgbGdpc2xhdGV1ciA/IFVuZSB0ZWxsZSBhZmZpcm1hdGlvbiByZXN0ZSB0cnMgZGlzY3V0YWJsZSwgYmllbiBxdWUgbCdvbiBuZSBwdWlzc2UgY29udGVzdGVyIGxhIHZvbG9udCBkdSBDb25zZWlsIGRlIHJhcHBlbGVyLCAgcGx1c2lldXJzIHJlcHJpc2VzIGRhbnMgbGUgY29ycHMgZGUgc2EgZGNpc2lvbiwgbGEgcmVzcG9uc2FiaWxpdCBkdSBsZ2lzbGF0ZXVyIGVuIGxhIG1hdGlyZS4KU3BvbnNvcmluZyBhIHBva2VyIHJ1biBpcyBmYWlybHkgc2ltcGxlIGJ1dCB0YWtlcyB0aW1lIGFuZCBzb21lIG5vdCBzbyBoYXJkIHdvcmsuIFRoZSBmaXJzdCB0aGluZyB5b3UgbmVlZCB0byBkbyBpcyBwbGFuIHRoZSB0cmF2ZWwgcm91dGUgYW5kIHBvc2l0aW9uaW5nIG9mIHRoZSBjaGVjayBwb2ludHMuIFRoZSByb3V0ZSBzaG91bGQgYmUgbGFpZCBvdXQgc28gdGhhdCB0aGUgbGFzdCBjaGVjayBwb2ludCBpcyBhdCB0aGUgZmluYWwgZGVzdGluYXRpb24uIApUaGVyZSBhcmUgc28gbWFueSB0b3Agbm90Y2ggc2l0ZXMgdGhhdCBhbGxvdyBwbGF5ZXJzIHRvIGVuam95IHRoZWlyIGZhdm9yYWJsZSBnYW1lcy4gCkkgd2FzIGdpdmluZyB0aGVtIHRvIGN1c3RvbWVycyB3aG8gd2VyZSBwdXJjaGFzaW5nIGNvbWljcyBpbiB0aGUgZGF5cyBhbmQgd2Vla3MgYWZ0ZXJ3YXJkcywgdW50aWwgSSBoYWQgYSBtaWxpdGFyeSBtb20gY29tZSB0aHJvdWdoIG15IGxpbmUuIApXaGlsZSB0aGlzIGlzIHRydWUsIGV2ZW4gaWYgeW91IGRvIGhpdCBhIHN0cmFpZ2h0LCBpdCB3aWxsIHJhcmVseSBiZSB0aGUgYmVzdCBwb3NzaWJsZSBzdHJhaWdodCwgYW5kIG1vc3Qgb2YgdGhlIHRpbWUgaXQgd2lsbCBiZSBiZWNhdXNlIHRoZXJlIGFyZSB0aHJlZSBjYXJkcyA4IGFuZCBiZWxvdyBvbiB0aGUgYm9hcmQsIHdoaWNoIG1ha2VzIGEgbG93IGhhbmQgZm9yIHNvbWVvbmUgZWxzZS4gCkJlY2F1c2UgdGhpcyBpcyBjcmF6eS4gCkRhbnMgbW92aWVzIG9mZmVycyB2ZXJ5IHBvcHVsYXIgc2NpZW5jZSBmaWN0aW9uIGZpbG1zLiAKQnkgbWFraW5nIGEgYmV0IG9uIGEgZmx1c2ggZmxvcCB5b3UgY29tbWl0dGVkIHlvdXJzZWxmIHRvIGFsbCBpbi4gWW91IGNvdWxkIGhhdmUgZWFzaWx5IGxvc3QgdG8gYW55IGZsdXNoLCBzbyB5b3UgcHJldGVuZCB5b3UgaGF2ZSB0aGUgZmx1c2ggbm90IHBsYXkgdGhlIDIgcGFpci4gCk15IGNvdXNpbiBsaXZlcyB0d28gYmxvY2tzIGF3YXkgZnJvbSBoZXIgcGFyZW50cy4gU2hlIGxpdmVzIGluIGEgaG91c2UsIHRoZSBwYXJlbnRzIGluIGEgYXBhcnRtZW50IGJ1aWxkaW5nIChyZWFsbHkgdGFsbCBvbmUsIHRoZXkgbGl2ZSBpbiB0aGUgdG9wIGZsb29yKSBhbmQgdGhleSBjYW4gc2VlIGhlciBob3VzZSBmcm9tIHRoZWlyIGJlZHJvb20hIEkgZG9uIGtub3cgaWYgdGhleSBzdG9wcGVkIHRoaXMgb3Igbm90LCBidXQgdGhleSB3b3VsZCBjYWxsIGhlciB0byBhc2sgaGVyIHdoeSBzaGUgd2FzIHVwIHNvIGxhdGUsIHdoeSBoZXIgbGl2aW5nIHJvb20gbGlnaHRzIHdlcmUgb24sIHdobyB3YXMgc2hlIHdpdGgsIGFsbCBraW5kcyBvZiBpbnRydXNpdmUgYmVoYXZpb3IhClN0YW5kIHRvIFNpdCBUb28gTG9uZwpXaHkgd291bGQgc2hlIGNoaXAgYXdheSBhdCB5b3V0IHNlbGYgY29uZmlkZW5jZT8gQmVjYXVzZSBpdCBhbiBpbnNpZGlvdXMgdGhpbmcgdGhhdCBnaXJscyBkbyB0byBndXlzIHdobyBkb24gZXZlciBzaG93IG1hc2N1bGluZSBhbmdlciBhbmQgY2FsbCB0aGVtIG9uIHRoZWlyIGJ1bGxzaGl0LiBHdXlzIHdobyBhcmUgc3dlZXQgYmZzLiAKVGhpcyBoYXBwZW5lZCBtdWx0aXBsZSB0aW1lcy4gCkxldCB1cyBkZXNjcmliZSBzb21lIG9mIHRoZSBiZXN0IGRldmljZXMgaW4gdGhlIG1hcmtldCBmb3IgY2hlYXRpbmcgY2FyZHMuLiAKVGhlcmUgYXJlIGJvbnVzZXMsIG9mZmVycywgZ2lmdHMgYW5kIG1hbnkgb3RoZXIgbHVjcmF0aXZlIHRoaW5ncyBmcm9tIHRoZSB3ZWJzaXRlcy4gCk9uY2UgYWdhaW4gZWFjaCBwbGF5ZXIgaXMgZ2l2ZW4gYSBjaGFuY2UgdG8gcGxhY2UgdGhlaXIgYmV0cy4gQXQgdGhpcyB0aW1lIHRoZSBiZXR0aW5nIG1heSBiZWNvbWUgYWdncmVzc2l2ZSBhbmQgbWFueSBwbGF5ZXJzIHRyeSB0byB0aHJvdyBhIGJsdWZmIGluIHRoaXMgcm91bmQuClNldmVyYWwgcmVwdXRhYmxlIHByb3ZpZGVycyBvZiBsaXZlIGNhc2lubyBzb2x1dGlvbnMgaGF2ZSBMaXZlIENhc2lubyBIb2xkJ2VtIFBva2VyIHRhYmxlcyBvbiBvZmZlciBpbmNsdWRpbmcgdGhlIGluZHVzdHJ5IGdpYW50cyBFdm9sdXRpb24gR2FtaW5nLCBQbGF5dGVjaCBhbmQgTWljcm9nYW1pbmcuIFRoZXNlIGdhbWVzIHNoYXJlIHRoZSBzYW1lIHJ1bGVzIHdpdGggcGF5b3V0cyBnb2luZyB1cCB0byAxMDA6MSBvbiBhbiBBbnRlIGJldC4gT25jZSB5b3UgcGxhY2UgYW4gQW50ZSBiZXQsIHlvdSB3aWxsIGJlIGRlYWx0IHR3byBjYXJkcyBmYWNlIHVwIHdoaWxlIHRoZSBkZWFsZXIgZ2V0cyB0d28gY2FyZHMgZmFjZSBkb3duLiAKTG9vay4gTm90IGFzIG1hbnkgcGVvcGxlIGFyZSAid2FpdGluZyIgZm9yIHByb2NlZHVyZXMgaW4gdGhlIFVTIGJlY2F1c2UgdGhleSBjYW4gYWZmb3JkIGl0LiAKVGhlIGxhc3QgY291cGxlIG9mIHBhZ2VzIG1ha2UgYW4gZXhjZWxsZW50IGNhc2UgZm9yInRoZSB3aHkiLCBhbmQgdGhlIGxhc3QgdHdvIHNlbnRlbmNlcyBlbmNvdXJhZ2UgdXMgdG8gc2VlIG91ciB0YXggc3lzdGVtIGluIGEgbW9yZSBwb3NpdGl2ZSBsaWdodDouIApUaGUgUm9va2llIExvdCB3YXMgYSBmaXZlIHBpZWNlIExvbmcgSXNsYW5kIGJhc2VkIGJhbmQgdGhhdCBmb3JtZWQgaW4gSmFudWFyeSBvZiAxOTk4LiBUaGUgYmFuZCBzb3VuZCBkZXJpdmVkIGZyb20gZWFybGllciBOZXcgSmVyc2V5IGFuZCBMb25nIElzbGFuZCBiYXNlZCBtZWxvZGljIGhhcmRjb3JlIGFuZCBlbW8gYmFuZHMsIHN1Y2ggYXMgTGlmZXRpbWUuCldlIGRpZG4ndCB3YW50IHRvIGxvc2Ugb3VyIHRvd24gcGFzcyBmb3IgdGhlIG5leHQgZGF5LCBidXQgd2UgZW5kZWQgdXAgc2VuZGluZyBydW5uZXJzIGZvciBoZWxwLiBDaGljayBnb3Qgc2VkYXRlZCBieSBFTVRzIGFmdGVyIHNoZSB3ZW50IGJhdHNoaXQgb24gdGhlbSB0b28sIGFuZCB3aGVuIHRoZXkgYnJva2Ugb3BlbiBoZXIgbG9ja2VyLCBzaGUgaGFkIHNtdWdnbGVkIGluIGEga25pZmUgc2hlIGJvdWdodCBhdCB0aGUgQlggYXQgc29tZSBwb2ludC4uIApZb3UgY2FuIHB1cmNoYXNlIEdQQVQgRXhhbSBQcmVwYXJhdGlvbiBCb29rcyBPbmxpbmUgYW5kIHN0YXJ0IHlvdXIgcHJlcGFyYXRpb24gbm93LiAKV2l0aGluIHRoZSBTTUUgc2VjdG9yLCB0aGVyZSB3aWxsIGJlIHBhcnRpY3VsYXIgcHJvYmxlbSBzcG90cywgZXNwZWNpYWxseSBmb3IgdGhvc2UgaW4gdGhlIGFncmljdWx0dXJlLCB0cmFuc3BvcnRhdGlvbiBhbmQgZW5lcmd5IGludGVuc2l2ZSBtYW51ZmFjdHVyaW5nIHNlY3RvcnMuIEV2ZW4gdGhvdWdoIHRoZSBnb3Zlcm5tZW50IGNhc3VhbGx5IGFzc3VtZXMgdGhhdCBhbGwgYnVzaW5lc3NlcyB3aWxsIHBhc3Mgb24gYWxsIHRoZXNlIGV4dHJhIGNvc3RzIHRocm91Z2ggaGlnaGVyIHByaWNlcywgbWFueSBvZiB0aGVzZSBidXNpbmVzc2VzIHdpbGwgbm90IGJlIGFibGUgdG8gZG8gc28gYmVjYXVzZSBvZiB0aGUgbmF0dXJlIG9mIHRoZWlyIHByb2R1Y3RzIG9yIGNvbXBldGl0aW9uIGZyb20gb3V0c2lkZSB0aGUgY291bnRyeS4gClRoaXMgZmFjdCBkb2VzIG5vdCBjaGFuZ2UgdGhlIG5lY2Vzc2l0eSB0byBhdHRlbXB0IHJlaGFiaWxpdGF0aW9uIGZvciBhbGwuIEZvciB0aG9zZSB3aG9tIHJlaGFiaWxpdGF0aW9uIGlzIGltcG9zc2libGUsIHdlIGFyZSBkdXR5IGJvdW5kIHRvIHByb3RlY3Qgc29jaWV0eSBmcm9tIHRoZW0uIApZb3VyIGh1c2JhbmQgaXMgdGhlIG9uZSB3aG8gY2FycmllcyB0aGUgc2hhbWUuIFlvdSBkaWQgbm90aGluZyB0byBkZXNlcnZlIHRoZSB3YXkgaGUgdHJlYXRlZCB5b3UsIHRoZXJlIGlzIG5ldmVyIGFuIGV4Y3VzZSB0byB0cmVhdCB0aGUgcGVyc29uIHlvdSBjbGFpbSB0byBsb3ZlIHdpdGggYW55dGhpbmcgb3RoZXIgdGhhbiBhZmZlY3Rpb24uIApNYWdpYyBmaW5hbmNlIGlzbiBhIG5lY2Vzc2FyeSBmYWNldCBvZiB0aGUgZ2FtZS4gWW91IGNhbiBwbGF5IG1hZ2ljIGF0IGEgY2FzdWFsIGxldmVsIGFuZCBoYXJkbHkgY2FyZSBhYm91dCBpdCBhdCBhbGwuIE1lIGFuZCBteSBwbGF5Z3JvdXAgYWxsIGhhdmUgdGllciAxIG1vZGVybiBkZWNrcyBpbiB0aGUgdGhvdXNhbmRzLCBhbmQgbm9uZSBvZiB1cyBrZWVwIHVwIHdpdGggY2FyZCBwcmljZXMgb3V0c2lkZSBvZiB0aGUgb2NjYXNpb25hbCBjaGVjayBpbiBzdG9yZSBiZWNhdXNlIHdlIGJ1aWx0IG91cnNlbHZlcyB1cCBvdmVyIHRoZSB5ZWFycy4gU2ltcGx5IHB1dCwgaW4gYSBob2JieSBsaWtlIHRoaXMgbW9uZXkgaXMgYWx3YXlzIGdvaW5nIHRvIGJlIGEgbGltaXRpbmcgZmFjdG9yLCBhbmQgSSB0aGluayBpdCBtb3JlIGFib3V0IHVuZGVyc3RhbmRpbmcgeW91ciBwcmljZSBwb2ludCBhbmQgd2hhdCBsZXZlbCB0aGF0IHdpbGwgYWxsb3cgeW91IHRvIHBsYXkgYXQuIFRpZXIgMSBkZWNrcyB3aWxsIG5vdCBiZSBlYXNpbHkgYWNjZXNzaWJsZSB0byBldmVyeW9uZSwgZXZlciAgdGhhdCBqdXN0IHRoZSBuYXR1cmUgb2YgdGhlIGdhbWUsIGFuZCBpZiB5b3Ugd2FudCB0byBwbGF5IGF0IGEgaGlnaGVyIGxldmVsIHlvdSBuZWVkIHRvIGJlIHByZXBhcmVkIHRvIG1ha2UgZWl0aGVyIHRoZSBtb25ldGFyeSBvciB0aW1lIGludmVzdG1lbnRzIHJlcXVpcmVkIHRvIGRvIHNvLCBqdXN0IGxpa2UgYW55IG90aGVyIGhvYmJ5LgpCZW5lZGljdCBzcGVudCBtdWNoIG9mIGhpcyBwb250aWZpY2F0ZSB0cnlpbmcgdG8gY29ycmVjdCB3aGF0IGhlIGNvbnNpZGVyZWQgd3JvbmcgaW50ZXJwcmV0YXRpb25zIG9mIFZhdGljYW4gSUksIGluc2lzdGluZyBpdCB3YXNuJ3QgdGhlIGJyZWFrIGZyb20gdGhlIHBhc3QgdGhhdCBsaWJlcmFscyBiZWxpZXZlZC4KQ29tcGFyaXNvbiBiZXR3ZWVuIG9ubGluZSBjYXNpbm8gYW5kIHJlYWwgY2FzaW5vCkFic29sdXRlbHkgbG92ZSBpdC4uIApEYWlseSAgIGxvb2sgZm9yIHRoZSBncmVlbiBzaWducy4uIAo=|<---