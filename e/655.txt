--->|UGx1bWJlciBoZXJlLCBJIHN0YXJ0ZWQgbXkgYXBwcmVudGljZXNoaXAgYXQgMjksIHRoZXJlIGlzIGEgZ3Jvd2luZyBhbmQgc2V2ZXJlIGxhY2sgb2Ygc2tpbGxlZCBsYWJvciBpbiB0aGlzIGNvdW50cnkgYW5kIG9uY2UgeW91IGhhdmUgdGhlIHNraWxscyBhbmQgY2FuIHNob3cgdGhhdCB5b3UgYSBnb29kIGVtcGxveWVlIGNvbXBhbmllcyB3aWxsIGZhbGwgb3ZlciBlYWNoIG90aGVyIHRyeWluZyB0byBoaXJlIHlvdSwgYWxsIHRoYXQgdG8gc2F5IDI2IGlzIG5vdCB0b28gb2xkIGF0IGFsbCBhbmQgYXMgYSBtYXR0ZXIgb2YgZmFjdCBteSBjb21wYW55IGRvZXNuIGxpa2UgdGFraW5nIG9uIGFwcHJlbnRpY2VzIHRoYXQgYXJlIGp1c3Qgb3V0IG9mIGhpZ2ggc2Nob29sLyBkb24gaGF2ZSBtdWNoIGdlbmVyYWwgd29yayBleHBlcmllbmNlIGJlY2F1c2UgdGhleSBwb3VyIGEgTE9UIG9mIG1vbmV5IGFuZCByZXNvdXJjZXMgaW50byB0cmFpbmluZyB5b3UgYW5kIHdhbnQgdG8gc2VlIHRoYXQgeW91IGEgZ29vZCBlbXBsb3llZSAodGhyb3VnaCB3b3JrIGhpc3RvcnkpIGJlZm9yZSB0aGV5IG1ha2UgdGhhdCBpbnZlc3RtZW50LiBCVFcgSSBMT1ZFIHdoYXQgSSBkbyBhbmQgd291bGQgcmVjb21tZW5kIHBsdW1iaW5nIHRvIGFueW9uZSB3aG8gaW50ZXJlc3RlZC4gUGx1bWJpbmcgaXMgYSBtdWNoIG1vcmUgY2VyZWJyYWwgdHJhZGUgdGhhbiBwZW9wbGUgdGhpbmsgKEkgYSBzZXJ2aWNlIHBsdW1iZXIgdnMuIG5ldyBjb25zdHJ1Y3Rpb24pIGJlY2F1c2Ugd2hlbiB5b3UgZGlhZ25vc2luZyBhIHByb2JsZW0geW91IGdldCB0byBwbGF5IGRldGVjdGl2ZSAid2hhdCBpcyB0aGUgY3VzdG9tZXIgc2F5aW5nLCB3aGF0IGFtIEkgc2VlaW5nLCBob3cgd2FzIHRoaXMgcGx1bWJlZCAob2Z0ZW4gd2hhdCB5b3UgdHJ5aW5nIHRvIGRpYWdub3NlIHlvdSBjYW4gZGlyZWN0bHkgc2VlKSIgb24gdGhlIHRvdWdoIGRpYWdub3NpcyBqb2JzIGN1c3RvbWVycyB0aGluayB5b3UgaGF2ZSBtYWdpYyBwb3dlcnMgd2hlbiB5b3UgY3JhY2sgaXQgYW5kIGV4cGxhaW4gd2hhdCBoYXBwZW5lZCBhbmQgd2h5IGFuZCB3aGF0IHRoZSBmaXggaXMuClRoZW4ganVzdCBiZWZvcmUgZG9pbmcgaXQgY2FtZSBhIGZvcm0gdG8gc2lnbiBzYXlpbmcgaSBoYWQgTk9UIHRha2VuIHJlY2VudGx5IHRoZSBtZWRpY2luZSBJIGp1c3QgYXNrZWQgYWJvdXQuIApBYnN0cmFjdGlvbnMgb2JleSB0aGUgc2FtZSBoaWVyYXJjaHkgYXMgcmVsYXRpb25zaGlwczogZ3JlYXQgYWJzdHJhY3Rpb24gPiBubyBhYnN0cmFjdGlvbiA+IGJhZCBhYnN0cmFjdGlvbi4gKGhuKQpJIHRoaW5rIHRoZSBiaWcgZWZmZWN0IG9mIE5ldGZsaXggYW5kIG9yZ2FuaXphdGlvbnMgbGlrZSB0aGF0IGlzIHRoZSByZWxlYXNlIHdpbmRvd3MgaGF2ZSBiZWVuIG11Y2ggc2hvcnRlbmVkLiAKUGVvcGxlIGhhdmUgZ29uZSB0aHJvdWdoIG11Y2ggd29yc2UgaW4gbGlmZSB3aXRob3V0IHJlcXVlc3RpbmcgR0ZNIGhhbmRvdXRzLiBFdmVyeW9uZSBvbiA5MCBkYXkgc2V0dGluZyB1cCBHRk1zIGFyZSBwYXRoZXRpYyBpbiBteSBvcGluaW9uLiBJdCBpcyB5b3VyIHByZXJvZ2F0aXZlIHRvIGRvbmF0ZSBidXQgSSdkIHJhdGhlciBzZWUgbXkgbW9uZXkgcHV0IHRvIGJldHRlciB1c2UuCkxpZ2h0IHR1cm5zIGdyZWVuLCBzaGUgYmFja3MgdXAsIGFuZCBJIGxheSBvbiBteSBob3JuLiBMdWNraWx5IHNoZSBkaWRuJ3QgaGl0IG1lIGJ1dCBJIHJlYWxseSB3aXNoIEkgY291bGQgaGF2ZSBzYXcgaGVyIGZhY2Ugd2hlbiBzaGUgcmVhbGl6ZWQgd2hhdCBldmVyeW9uZSB3YXMgdHJ5aW5nIHRvIHRlbGwgaGVyLgpUaGF0IHdvdWxkIGJlIG15IG9ubHkgY3JpdGljaXNtIG9mIHdoYXQgeW91IHdyb3RlIGFib3ZlOyBZb3UgY29uZGVtbmluZyB0aGUgZ3V5cyB3aG8gaGF2ZW4gdGhlIHBhdGllbmNlIG9yIHRoZSB0aW1lIHRvIHRha2UgdXAgYSBncmVhdCBjcnVzYWRlIHRvIGFkZHJlc3MgdGhlIHByb2JsZW1zIHRoYXQgYXJlIGJlaW5nIHBlcnBldHVhdGVkIGJ5IGZlbWluYXppIHRvd2FyZHMgbWVuLiBBbHNvLCBpdCBkYW5nZXJvdXMgdG8gc3BlYWsgb3V0IGFnYWluc3QgdGhlIHN0YXR1cyBxdW8sIGFuZCBpbiB0aGlzIGdhbWUgb2YgcG93ZXIsICh3aGljaCBpcyBhbGwgbGlmZSBpcykgd2UgYmUgcmVtaXNzIGlmIHdlIGRpZG4gaWRlbnRpZnkgdGhlIGluaGVyZW50IGRhbmdlcnMgb2Ygc3BlYWtpbmcgb3V0IGFnYWluc3QgZmVtaW5pc20uLiAKTm90IHRoYXQgaXQgaGFwcGVucyAoQWx0aG91Z2gsIEkgd2lzaCB3ZSBhbGwgd2VyZSBhIGJpdCBtb3JlIGNhcmVmdWwgYWJvdXQgcGxheWluZyB0aGVzZSBnYW1lcyksIGJ1dCB0aGF0IHBlb3BsZSBzbyBvcGVubHkgYW5kIHdpbGxpbmdseSBhY2NlcHQgaXQuIEkgaG9waW5nIHRoYXQgdGhlIG5leHQgZ2VuZXJhdGlvbiBjYW4gYmUgYSBiaXQgbW9yZSBuYXR1cmFsbHkgc2tlcHRpY2FsIGFuZCBsZXZlbCBpbiB0aGVyZSBpbnRlcnByZXRhdGlvbiBvZiBpbWFnZXJ5LlRoaXMgcGljdHVyZSBpbiBwYXJ0aWN1bGFyIGNvdWxkIGp1c3QgYXMgZWFzaWx5IGJlIHNlZW4gaW4gdGhlIGNvbXBsZXRlIG9wcG9zaXRlIGxpZ2h0LiAKRGFuZ2VycyBhc3NvY2lhdGVkIHdpdGggY29uc3VtZXIgZmlyZXdvcmtzIGFyZSB0b28gaGlnaCBhbmQgbm90IHdvcnRoIHRoZSByaXNrIG9mIGFuIGluanVyeS4gCkNsYXJrZSwgb2YgIkdhbWUgb2YgVGhyb25lcyIgZmFtZSwgd2VudCBzcGFya2x5IHN0cmFwbGVzcyBpbiBhbiBhc3ltbWV0cmljYWwgbmVjayBkZXNpZ24uClRoZSBsb25nIHN0cmluZ3Mgb2YgbnVtYmVycyBhcmUgdGhlIGhleCBjb2RlcyBmb3IgZGlmZmVyZW50IEtvcmVhbiBjaGFyYWN0ZXJzIGFuZCBhbGwgZGlyZWN0IGZvciB0aGVzZSBLb3JlYW4gc3RyaW5ncyB0byBiZSBxdWVyaWVkIGluIHdoYXQgbG9va3MgbGlrZSBhIGJ1bmNoIG9mIHJhbmRvbSB3ZWIgc2l0ZXMgc2VhcmNoIGZ1bmN0aW9ucywgZm9yIGluc3RhbmNlIG9uZSBvZiB0aGVtIHNlYXJjaGVzIGZvciB0aGUgc3RyaW5nIGluIGEgc2VhcmNoIGZvciB0aGUgd2ViIHNpdGUgb2YgUm91bmQgUm9jayBJU0QsIGEgc2Nob29sIGRpc3RyaWN0IGluIFRleGFzLiAKR2FtZXJzIGtub3cgQWlkZW4gUGVhcmNlIGFzIHRoZSB0b3VnaCBhcyBuYWlscyBoYWNrZXIuIEhlIGRhbmdlcm91cyB3aXRoIGEgZ3VuIGFuZCBwdW1tZWxzIHRodWdzIHdpdGggaGlzIGJhdG9uLiAKTmV3IERlbGhpJ3MgcmV0YWxpYXRvcnkgc3RyaWtlIGluIHRoZSBub3J0aHdlc3QgUGFraXN0YW4gdG93biBvZiBCYWxha290IGxhc3QgbW9udGgsIHNlbnQgdGVuc2lvbnMgc3BpcmFsaW5nLgpJdCB3YXMgKGluZXZpdGFibHkgYXQgdGhhdCBhZ2UpIGd1eXMgdmVyc3VzIGdpcmxzIGFuZCB0aGFua3MgdG8gbWUgd2UgbWFuYWdlZCBub3QgdG8gcHVsbCBvZmYgYSBzaW5nbGUgYXJ0aWNsZSAgIHVudGlsIHRoZSBvbGRlc3QgZ2lybCB0aGVyZSAoYSBzaXh0ZWVuIHllYXIgb2xkKSByZW1vdmVkIGhlciBicmEuIApJZiB5b3UgbmVlZCB0byBjYW5jZWwgYSBib29raW5nLCBwbGVhc2UgZG8gc28gb25saW5lIGEgbWluaW11bSBvZiAyIGhvdXJzIGJlZm9yZSB5b3VyIGNsYXNzLgoiVGhhdCBmbG9vcmVkIHVzLCIgTGFuZSBmYXRoZXIsIFJvYmVydCwgc2F5cyBpbiBldmlkZW5jZS4gCkJlY29tZSBhbiBJbnN0cnVjdG9yIGZvciBDb25jZWFsZWQgV2VhcG9ucyBUcmFpbmluZwpXZSBjYW4gd2FpdCB0byByZXZlYWwgdGhlIG5ldyB3ZWJzaXRlIHRvIHlvdSwgc28gaWYgeW91IGFyZSBsb29raW5nIGZvcndhcmQgdG8gaXQsIGFuZCB3YW50IHRvIGtlZXAgdXAgd2l0aCB3aGF0IHdlIGFyZSBkb2luZyB0aGVuIHBsZWFzZSBmb2xsb3cgdXMgb24gb3VyIFNvY2lhbCBNZWRpYSBDaGFubmVscywgd2hlcmUgd2Ugd2lsbCBrZWVwIHlvdSB1cCB0byBkYXRlIG9uIG91ciBsYXRlc3QgbmV3cyBpbiB0aGUgbWVhbnRpbWUhV2UgYXJlIHBsZWFzZWQgdG8gYW5ub3VuY2Ugd2UgYXJlIHByb3VkbHkgc3BvbnNvcmluZyBCZWRmb3JkIEhvY2tleSBDbHViISBGb3VuZGVkIGluIDE4OTMsIEJlZGZvcmQgSG9ja2V5IENsdWIgaGFzIGJlY29tZSBvbmUgb2YgdGhlIGJpZ2dlc3QgYW5kIG1vc3Qgc3VjY2Vzc2Z1bCBjbHVicyBpbiBvdXIgcmVnaW9uLiBXaXRoIDI1IHRlYW1zLCBCZWRmb3JkIEhvY2tleSBDbHViIGFjY29tbW9kYXRlcyBhbGwgYWdlcyBhYmlsaXRpZXMuLiAKVG90YWw6IDIyY291bGQgYmUgd29yc2UKQmVmb3JlIHdlIGJlZ2luLCBsZXQgbWUgcmVtaW5kIHlvdSBvZiB0aGlzIHRoZW9yZW0gKHRoZSBub24gZ2VuZXJhbGlzZWQgZm9ybSBvZiB0aGUgQWRkaXRpdmUgTGF3IG9mIFByb2JhYmlsaXR5KSwgd2hpY2ggd2lsbCBwb3AgdXAgY29uc3RhbnRseSBpbiBvdXIgY2FyZCBnYW1lIHByb2JsZW1zOgpUaGVuIGl0IGlzIGRvd24gZm9yIDQgaG91cnMgZXZlcnkgMiB3ZWVrcyBmb3IgY2xlYW5pbmcsIHRoYXRzIGl0LiAKVG8gbm9vbiBhdCBTZXZlcmFuY2UgSGFsbCBhdCBFYXN0IEJvdWxldmFyZCBhbmQgRXVjbGlkIEF2ZW51ZSBpbiBDbGV2ZWxhbmQuIApJZiB5b3VyIHNvZnR3YXJlIHJlbW92ZXMgdGhlIGVuZGluZyBmcm9tIGEgd29yZCwgdGhlbiBjaGVja3MgaWYgdGhlIHJvb3QgaXMgdmFsaWQgKGF0IGxlYXN0IG9uZSBjb25zb25hbnQgYW5kIHZvd2VsKSwgdGhlbiB0aGVyZSBzaG91bGRuIGJlIGFueSBwcm9ibGVtLiAKVGhleSBjb3N0IDQwIHBlciBjZW50IGxlc3MgdGhhbiB0aGVpciB0cmFkaXRpb25hbGx5IGJ1aWx0IGNvdW50ZXJwYXJ0cyBhbmQgYXJlIHJlYWR5IGluIGVpZ2h0IHRvIDEyIG1vbnRocy4uIApLZW4gd2FzIGEgd2VsbCBrbm93biBhbmQgcmVzcGVjdGVkIG1lbWJlciBvZiB0aGUgQnJhY2VicmlkZ2UgY29tbXVuaXR5LiAKVGhlbiBhZ2FpbiwgSSB3b3JrZWQgYXQgb3RoZXIgcGxhY2VzIHdoZXJlIGl0IHdhcyAibm8gc2hvdywgbm8gam9iLiIgSWYgdGhlcmUgbm8gZmxleGliaWxpdHksIHRoZSBzdG9yZSBwcm9iYWJseSBoYXMgc29tZSBvdGhlciBwcm9ibGVtcyBhcyB3ZWxsLiAKV2UgYXJlIGEgcmVzdWx0cyBkcml2ZW4gdGVhbSBsb29raW5nIGZvciBwZW9wbGUgd2hvIGNhbiBtYWtlIGEgaW1wYWN0LiAKRXZlbiBmdW5uaWVyIGJlY2F1c2UgbXkgbGl0dGxlIHBvY2tldCBvZiB3ZXN0IExvbmRvbiBoYXMgbWFueSBtYXR1cmUgZ3VtIHRyZWVzLCBJIGhhdmUgdG8gd2FsayBwYXN0IHNldmVuIGluIHRoZSB0aHJlZSBtaW51dGUgd2FsayB0byB0aGUgdHJhaW4gc3RhdGlvbiBhbmQgdGhlcmUgaXMgYSBtYXNzaXZlIG9uZSBpbiBteSBkYXVnaHRlciBzY2hvb2x5YXJkISBUaGV5IHNlZW0gdG8gZG8gcmVhbGx5IHdlbGwgaGVyZS4gCkFjY29yZGluZyB0byBCYWxmb3VyIEx5bm4ncyBsaXRlcmF0dXJlIHJldmlldywgc3R1ZGllcyBkYXRpbmcgYmFjayB0byAxOTQ4IGhhdmUgaW5kaWNhdGVkIHRoYXQgdGhlcmUncyBubyBsaW5rIGJldHdlZW4gbWlsayBhbmQgcGhsZWdtLCBidXQgYSAyMDAzIHN0dWR5IGluIHRoZSBqb3VybmFsIEFwcGV0aXRlIGFza2VkIDM0NSByYW5kb20gQXVzdHJhbGlhbiBzaG9wcGVycyB3aGV0aGVyIHRoZXkgdGhvdWdodCBtaWxrIGNhdXNlcyBtdWN1cy4gT2YgdGhlIDExMSBzaG9wcGVycyB3aG8gZHJhbmsgd2hvbGUgbWlsaywgYWxtb3N0IGhhbGYgb2YgdGhlbSB3ZXJlIG9mIHRoZSBvcGluaW9uIHRoYXQgaXQgZGlkLiAKVGhlIG90aGVyIHNpZGUgZWZmZWN0IGFzc29jaWF0ZWQgd2l0aCByZXRpbm9pZCB0aGVyYXB5IGlzCkFuZCB3aGVudGhleSBhcmUsLiBJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIApJJ20gY3VycmVudGx5IHRyeWluZyB0byBkbyBhIDMwMCBrbm90IGFzIHdlbGwsIGJ1dCB0aGUgbGVuZ3RoIG9mIGNvcmQgaXMgc3VwZXIgZnJ1c3RyYXRpbmcsIGl0J3MgYWxtb3N0IGltcG9zc2libGUgdG8gZ2V0IGl0IGFsbCB0byBwYXNzIHRocm91Z2ggd2l0aG91dCB0YW5nbGluZyB0byBhbiBpbmNyZWRpYmxlIGRlZ3JlZS4uIAoxLiBJdCBtZWFucyBzb21lb25lIHdobyBpcyBpbiBhIHN0YXRlIG9mIGNvbmZ1c2lvbiBvciBmcnVzdHJhdGlvbiwgaW4gd2hpY2ggdGhleSBhZG9wdCBhbiBvdmVyIGFnZ3Jlc3NpdmUgc3RyYXRlZ3kuIApUaGUgb25seSBjb25jbHVzaW9uIHdhIGNhbiBjb21lIHRvIGlhIHRoYXQgbWFraW5nIHRoZWlyIHBvaW50IGlzIG1vcmUgaW1wb3J0YW50IHRoYW4gdGVsbGluZyB0aGUgcGVvcGxlIHRoZSBmYWN0cy4gSXQnbExSYW0sIGJ1dCBQcmV0ZnkgTGlrZSBJdCB3aWxsIGJlIGp1c3QgZHVja3kgdGhpcyBtb3JuICBpbmcsIHRoZSB3ZWF0aGVybWFuIHByZWRpY3RlZC4gCkF0dHJpYnV0aW5nIFV0YWggaW1wcm92ZW1lbnQgZW50aXJlbHkgdG8gdGhlaXIgZGVmZW5zZSB3aXRob3V0IG1lbnRpb25pbmcgdGhlIGltcHJvdmVtZW50IG9mIEhheXdhcmQgaW50byBhIGxlZ2l0IHN0YXIgd2luZyBhbmQgdGhlbiBoaXMgcmVwbGFjZW1lbnQgd2l0aCBNaXRjaGVsbCBpcyBub3QgdGVsbGluZyB0aGUgZnVsbCBzdG9yeSwgdW5sZXNzIHlvdSB0aGluayB0aGV5IHdvdWxkIGJlIGp1c3QgYXMgZ29vZCBpZiB0aGV5IHJlcGxhY2VkIE1pdGNoZWxsIHdpdGgsIG9oLCBsZXQgc2F5IFJvYmVydCBDb3Zpbmd0b24uClRlcm1pbm9sb2d5IFVzaW5nIHByb2plY3QgbWFuYWdlbWVudCB0ZXJtaW5vbG9neSBjb3JyZWN0bHkgZ2l2ZXMgaGlyaW5nIG1hbmFnZXJzIGFuIGlkZWEgb2YgeW91ciBrbm93bGVkZ2Ugb2YgdGhlIGpvYi4gQXMgeW91IGxpc3QgeW91ciBwcm9qZWN0IG1hbmFnZW1lbnQgc2tpbGxzIG9yIHJlbGF0ZWQgd29yayBleHBlcmllbmNlLCB1c2UgdGVybXMgZm91bmQgaW4gdGhlIFByb2plY3QgTWFuYWdlbWVudCBJbnN0aXR1dGUncyBCb2R5IG9mIEtub3dsZWRnZS4gRm9yIGV4YW1wbGUsIGRlc2NyaWJlIHlvdXIgZXhwZXJ0aXNlIGluIGluaXRpYXRpbmcsIHBsYW5uaW5nLCBleGVjdXRpbmcsIG1vbml0b3JpbmcgYW5kIGNvbnRyb2xsaW5nIGFuZCBjbG9zaW5nIHByb2plY3RzLiBVc2UgZXhhbXBsZXMgdGhhdCBzaG93Y2FzZSB5b3VyIHNraWxscyBpbiB0aGUgbmluZSBrbm93bGVkZ2UgYXJlYXMsIGluY2x1ZGluZyBpbnRlZ3JhdGlvbiwgc2NvcGUsIHRpbWUsIGNvc3QsIHJlc291cmNlLCBjb21tdW5pY2F0aW9ucywgcmlzaywgcHJvY3VyZW1lbnQgYW5kIHF1YWxpdHkgbWFuYWdlbWVudC4gVXNlIHNvbWUsIGJ1dCBub3QgdG9vIG11Y2gsIG9mIHRoZSBqYXJnb24gbGlzdGVkIHRvIGNhdGNoIHRoZSBleWUgb2YgcG90ZW50aWFsIGVtcGxveWVycy4KRXhwZXJ0cyBzYWlkIEFzaGFkdXp6YW1hbidzIGZlZWxpbmdzIGFyZSBub3QgdW5jb21tb24uCk51bWJlcnMgYXJlIGRpdmlzaWJsZSBieSA2IGlmIHRoZXkgYXJlIGRpdmlzaWJsZSBieSAyIGFuZCAzLiAKSXQgc2VlbXMgdG8gbWUgdGhhdCBpbiBBYmVybmV0aHkgYmxhbmQgYW5kIGZ1bmN0aW9uYWwgY291cnRyb29tIChmbGVja2VkIGJsdWUgY2FycGV0LCBhIGJsb25kIHdvb2QgYmFyIHRhYmxlLCByb3dzIG9mIGxpZ2h0cyByZWNlc3NlZCBpbnRvIGEgbG93IGNlaWxpbmcpIGEgY29tcGxldGVseSBjb21wZWxsaW5nIGh1bWFuIGRyYW1hIGlzIHVuZm9sZGluZy4gQ291bnNlbCBhc3Npc3RpbmcgdGhlIGNvcm9uZXIgaXMgU2VyZ2VhbnQgUmViYmVjY2EgQmVjcm9mdCwgd2hvIHdlYXJzIHBpbnN0cmlwZWQgc3VpdHMgYW5kIGEgc2hvcnQgYmFjayBhbmQgc2lkZXMgaGFpcmN1dC4gU2hlIGxvb2tzIHNldmVyZSBidXQgdHVybnMgb3V0IHRvIGJlIGEgc29mdCB0b3VjaC4gCkkgbG92ZSBzaG9ydGhhbmRlZCBiZWNhdXNlIHlvdSAoYSkgc2VlIG1vcmUgbW9yZSBoYW5kcyB3aGljaCBpbmNyZWFzZXMgdGhlIG9wcG9ydHVuaXRpZXMgdG8gZXhwbG9pdCBhIHNraWxsIGVkZ2UgKGIpIGdldCB0byBwbGF5IGxvb3NlciBhbmQgcGxheSBtb3JlIGludGVyZXN0aW5nIGhhbmRzIHdoaWNoIGFsc28gbGV0cyB5b3UgdXNlIHRoYXQgc2tpbGwgZWRnZSBhbmQgKGMpIHdheSBtb3JlIGVsYm93IHJvb20uIApCZWNvbWUgYSBSZWRkaXRvcmFuZCBzdWJzY3JpYmUgdG8gb25lIG9mIHRob3VzYW5kcyBvZiBjb21tdW5pdGllcy4gU28gYmFzaWNhbGx5IGl0IGdvaW5nIHRvIHdvcmsgbGlrZSBhIHBva2VyIHJvb20sIHdoZXJlIHlvdSBjYW4gcGxheSBmb3IgZGlmZmVyZW50IHN0YWtlcyBhbmQgdGhlIGJ1eWluIGNvc3Qgd2lsbCBmaWx0ZXIgdGhlIHBsYXllcnMgYnkgc2tpbGwuIApPbmNlIHRoZXkgcmVhbGl6ZWQgdGhhdCwgdGhleSBqdXN0IHdhbnRlZCBtZSB0byBkbyB3ZWxsLiBUaGV5IGhhdmUgYmVlbiB2ZXJ5IHN1cHBvcnRpdmUgYW5kIGVuY291cmFnaW5nLiAKIkkgbmV2ZXIgY29tcGFyZSBteXNlbGYgdG8gb3RoZXIgd29tZW4gYXMgZXZlcnkgd29tYW4gaGFzIHRoZWlyIG93biBqb3VybmV5LCIgc2hlIGV4cGxhaW5lZC4gCk92ZXIgdGhlIGxhc3QgZml2ZSB0byB0ZW4geWVhcnMsIGEgd2hvbGUgbmV3IGJyZWVkIGhhcyByaXNlbiB0byBwcm9taW5lbmNlIHdpdGhpbiB0aGUgcG9rZXIgY29tbXVuaXR5LiBBcHBseWluZyB0aGUgdG9vbHMgb2YgY29tcHV0ZXIgc2NpZW5jZSBhbmQgbWF0aGVtYXRpY3MgdG8gcG9rZXIgYW5kIHNoYXJpbmcgdGhlIGluZm9ybWF0aW9uIGFjcm9zcyB0aGUgSW50ZXJuZXQsIHRoZXNlIHBsYXllcnMgaGF2ZSBjaGFsbGVuZ2VkIG1hbnkgb2YgdGhlIGFzc3VtcHRpb25zIHRoYXQgdW5kZXJsaWUgdHJhZGl0aW9uYWwgYXBwcm9hY2hlcyB0byB0aGUgZ2FtZS4gCkVUQTogU29tZXRpbWVzIGd1eXMgZG9uJ3QgZ2V0IHRoaXMsIHNvIHRlbGwgeW91ciBESCB0aGF0IGl0J3MgYmFzaWNhbGx5IGxpa2UgeW91ciBicm90aGVyIG9yIGRhZCBzYXlpbmcgInlvdSB3b24ndCB3YW50IHRvIGdvIHRvIHRoZSBneW0gd2l0aCBtZSBhbmQgbXkgZnJpZW5kcyBiZWNhdXNlIHlvdSBoYXZlIHN1Y2ggYSBzbWFsbCBkaWNrIGFuZCB3ZSBhbGwgaGF2ZSBhdCBsZWFzdCBkZWNlbnQgc2l6ZWQgZGlja3MuIFlvdSdkIGJlIGh1bWlsaWF0ZWQuIEFuZCB5b3VyIHNvbiBpcyBnb2luZyB0byBoYXZlIGEgc21hbGwgZGljaywgYmUgYmFsZCBhbmQgZmF0LCBhbmQgYSBsb3Nlci4iIFRoYXQncyB0aGUgbWFsZSB0cmFuc2xhdGlvbi4uIApOb3VzIHRyb3V2b25zIGNlIHNjaG1hIHBybmF0YWwgc3VyIGxlcyBwb2ludHMgcmZsZXhlcyBkZSBsYSBjb2xvbm5lIHZlcnRicmFsZSBzaXR1cyBub3RhbW1lbnQgYXUgbml2ZWF1IGRlcyBwaWVkcywgZGVzIG1haW5zIGV0IGRlIGxhIHR0ZS4uIApUaGVyZSBhcmUgaW1wb3J0YW50IGRpZmZlcmVuY2VzIGhlcmUuIFRvbWJveSBiZWhhdmlvciBpbiBnaXJscyBpcyBtb3JlIHByZXZhbGVudCBhbmQgb2Z0ZW4gbW9yZSBzaG9ydCBsaXZlZCB0aGFuIGRpc3RpbmN0IGZlbWluaW5lIGJlaGF2aW9yIGluIGJveXMuIEl0IGlzIG1vcmUgaW1wb3J0YW50IGZvciBwYXJlbnRzIHRvIGxvdmluZ2x5LCBjYWxtbHkgYnV0IGNvbmZpZGVudGx5IHN0ZWVyIGZlbSBib3lzIGludG8gbW9yZSBtYXNjdWxpbmUgZGlyZWN0aW9ucy4gQWxsIGJveXMgbmVlZCB0byBiZWludGVudGlvbmFsbHkgd2VsY29tZWQgaW50byB0aGUgd29ybGQgb2YgbWVuLCBhbmQgYm90aCBtb3RoZXIgYW5kIGZhdGhlciBwbGF5IGEga2V5IHJvbGUgaGVyZS4KV2Ugd2VudCB0byBBbXN0ZXJkYW0sIFBhcmlzLCBCYXJjZWxvbmEsIGFuZCBvdGhlciBjaXRpZXMsIHRvby4gClNoZSBoYXMgdGhlIG1vc3QgbHV4dXJpb3VzIGxpZmUhIFNoZSBnZXRzIGNhcnJpZWQgcHJldHR5IG11Y2ggZXZlcnl3aGVyZSBhbmQgaWYgd2UgZm9yZ2V0IHNoZSBmb2xsb3dzIHVzIG1lb3dpbmcgdW50aWwgd2UgcGljayBoZXIgdXAsIHNoZSBoYXMgYSBsaXR0bGUgc3Rvb2wgYW5kIGEgcGxhdGUgYW5kIHNoZSBlYXRzIGRpbm5lciB3aXRoIG15IHBhcmVudHMgYXQgdGhlIHRhYmxlIChzaGUgaGFzIHZlcnkgZ29vZCBtYW5uZXJzKSwgc2hlIGRyaW5rcyBmcm9tIGxpdHRsZSB3YXRlciBnbGFzc2VzIGFsbCBvdmVyIHRoZSBob3VzZSwgbXkgcGFyZW50cyBoYXZlIGJ1aWx0IGNhdCBjdWJiaWVzIGFuZCBwbGFjZXMgZm9yIHRoZW0gdG8gc2xlZXAgYWxsIG92ZXIhIEluIHRoZSBtaWRkbGUgb2YgdGhlIG5pZ2h0IHNoZSBnb2VzIHRvIHRoZSBiYXRocm9vbSBzaW5rIGFuZCBtZW93cyB1bnRpbCBteSBkYWQgZ29lcyBhbmQgcnVucyB0aGUgdGFwIGludG8gaGlzIGhhbmQgZm9yIGhlciB0byBkcmluayB0aGVuIHNoZSBqdW1wcyBvbiBoaXMgc2hvdWxkZXIgc28gaGUgY2FuIGNhcnJ5IGhlciBiYWNrIHRvIGJlZC4gCldXRSBoYXMgcHV0IGFsbCB0aGVpciBtYXJrZXRpbmcgaW50byBhIHNlbGVjdCBmZXcgZ3V5cywgc28gd2l0aG91dCB0aGVtIHRoZXkgd29uIGRyYXcuIApXaGVuIHlvdSBiZWdpbiBwbGF5aW5nIHdpdGggcGxheWVycyBiZXR0ZXIgdGhhbiB5b3UsIHlvdSBzaG91bGQgbG9zZSwgYnV0IHRoYXQgaXMgdGhlIHByaWNlIGZvciBsZWFybmluZyB0byBwbGF5IGJldHRlci4gCk1vcmUgbGlrZSBhIFRvbnkgQWxsZW4sIEFuZHJlIFJvYmVyc29uIGZvciBndWFyZHMuWmVpcmFtc3kgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnb0dlbmVyYWwgY29uc2Vuc3VzIHNlZW1zIHRvIGJlIHRoYXQgd2UgY2FuIGdldCA2dGggaWYgd2UgY29udGludWUgcGxheWluZyBoYXJkIGJ1dCB0aGF0IGl0IHdpbGwgYWxzbyBiZSBhZ2FpbnN0IGFuIG9wcG9uZW50IHdlIGxpa2UgbGVzcyB0aGFuIHdlIGNvdWxkIGdldCB3aXRoIHRoZSA3dGggc3BvdCwgaXMgdGhhdCByaWdodD9XaGF0IGRvIHlvdSBhbGwgdGhpbmsgd2Ugc2hvdWxkIGRvPyBJIHNheSBwbGF5IGFzIGJlc3Qgd2UgY2FuIGJlY2F1c2UgaXQgZ2l2ZSB1cyBhIGxpZnQgZm9yIG5leHQgeWVhci4gClNvIG1hbnkgc2Nob29scyBpbiB0aGUgY291bnRyeSBhcmUgYWxsIGJveXMgb3IgYWxsIGdpcmxzLiBBbmQgSSBub3RpY2VkIHRoYXQgaW4gb25lIG9mIG15IGNvIGVkIHNjaG9vbHMgKEkgdGF1Z2h0IGluIGEgYnVuY2ggb2YgbWlkZGxlIHNjaG9vbHMgaW4gdGhlIGNvdW50cnkpLCB0aGUgYm95cyBhbmQgZ2lybHMgd2VyZSBzdGlsbCBzZWF0ZWQgc2VwYXJhdGVseSBpbiB0aGUgY2xhc3NlcyAgIHRoZSBib3lzIG9uIG9uZSBzaWRlIGFuZCB0aGUgZ2lybHMgb24gdGhlIG90aGVyLiBJIGFsc28gbm90aWNlZCB0aGF0IEkgcmFyZWx5IHJhcmVseSBzZWVtZWQgdG8gc2VlIGJveXMgYW5kIGdpcmxzIGhhbmdpbmcgb3V0IGluIGdyb3VwcyBhcyBqdXN0IGZyaWVuZHMsIHRoZXkgc2VlbWVkIHRvIG9ubHkgZ28gb3V0IHRvZ2V0aGVyIGlmIGl0IHdhcyBhIGNvdXBsZSB0aGluZy4gCkhlIHNpZ25lZCBvZmYgd2l0aCBhIHJlbWluZGVyIHRoYXQgdGhlIEludGVybmV0IGluZmlkZWxpdHkgd291bGQgbmV2ZXIgZ28gYXdheSwgYmVjYXVzZSBieSB0aGVuLCBDcm9vayBoYWQgcG9zdGVkIE11cnBoeSdzIHBob3RvLCBwaG9uZSBudW1iZXIsIGVtcGxveWVyIGFuZCBlIG1haWxzIHRvIE1lbGlzc2Egb24gYSBXZWIgc2l0ZSBoZSBjcmVhdGVkIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mIGV4cG9zaW5nIHRoZSBkb3plbnMgb2YgbWVuIGhlIGZvb2xlZCBleGFjdGx5IHRoZSBzYW1lIHdheSwgaW4gTGFzIFZlZ2FzIGFuZCBhY3Jvc3MgdGhlIGNvdW50cnkuLiAKSW4gdGhlIGxhc3QgZmV3IGRheXMgSSBkZWNpZGVkIHRvIGZhY2UgbXkgdGVycm9yIG9mIGdvaW5nIGJhY2sgdG8gcGFpbiBtYW5hZ2VtZW50IChoYWQgYSBiYWQgZXhwZXJpZW5jZSBhbmQgaGF2ZSBwdHNkIGZyb20gaXQpIGFuZCBkbyBpdC4gCkpBLCBkaWUgRmlybWVuIHNvbGx0ZW4gc2llIGJlc3NlciBiZXphaGxlbi4gQWJlciBkYXMgd2lyZCBuaWNodCBwYXNzaWVyZW4uIFVuc2VyZSBQYWtldGJvdGVuIG1hY2hlbiBlaW5lbiBlY2h0IGd1dGVuIEpvYiAoKSwgZGllIGhhYmVuIGRlbiBlaW5lbiBvZGVyIGFuZGVyZW4gRXVybyBUcmlua2dlbGQgZWNodCB2ZXJkaWVudC4KVGhlIEZ1dHVyZSBvZiBQb2tlciBCb3RzCldpdGggYSB1bmlxdWUgYXBwZWFyYW5jZSByZXNlbWJsaW5nIENvbG9yYWRvJ3MgUm9ja3kgTW91bnRhaW5zLCBEZW52ZXIgSW50ZXJuYXRpb25hbCBBaXJwb3J0IGlzIGEgc2lnaHQgdG8gYmVob2xkLiAKQmVpbmcgdGlwcGVkIG9mZiBhYm91dCBkZWJhdGUgcXVlc3Rpb25zIHNob3VsZG4gYmUgYSB0aGluZywgdW5sZXNzIHRoZXkgY29tcGxldGVseSBmdWNrIHVwIHRoZSByZXNwb25zZSBsaWtlIFRydW1wIGRpZC4gVGVsbCBhbGwgY2FuZGlkYXRlcyB0aGUgdG9waWNzIGludm9sdmVkIGFuZCB0aGUgcXVlc3Rpb25zIGluIGFkdmFuY2UuIApIZXIgd29ybGQgaGFzIHNocnVuayB0byB0aGUgbWljcm9jb3NtIG9mIGJhYnkuIApBbnlvbmUgY2xvc2UgZW5vdWdoIHRvIHdvbmRlciB3aHkgaXQgd2FzIHN1ZGRlbmx5IHNvIHdpbmR5IGFuZCBibGluZGluZyB3ZXJlIHRvbGQgdGhlIGV4cGxvc2lvbnMgd2VyZSBiZWluZyBzZXQgb2ZmIGF0IGEgc2FmZSBkaXN0YW5jZS4gRm9yIGluc3RhbmNlLCBBcmVhIDUxLCB0aGUgYXJteSBiYXNlIGluIHRoZSBtaWRkbGUgb2YgdGhlIE5ldmFkYSBkZXNlcnQgKHdoZXJlIGNvbnNwaXJhY3kgdGhlb3Jpc3RzIGJlbGlldmUgdGhlIEFybXkgaXMgcmV2ZXJzZSBlbmdpbmVlcmluZyBVRk9zKSwgd2FzIGFjdHVhbGx5IG9uZSBvZiB0aGUgbW9zdCBhY3RpdmUgbnVjbGVhciB0ZXN0IHNpdGVzIGluIHRoZSB3b3JsZC4gCkhhdmluZyB5b3VyIGluZmFudHJ5IGJyaWdhZGVzIGRldGFjaCBza2lybWlzaGVycyBhcmUgdmVyeSB1c2VmdWwgYnV0IHJlYWxseSBkZXRyYWN0IGZyb20gdGhlbS4gClNpbmNlIHRoZSBNYWNhdSBnb3Zlcm5tZW50IGFwcHJvdmVkIFRleGFzIEhvbGQnZW0gY2FzaCBnYW1lcyBhbmQgdG91cm5hbWVudHMgaW4gSmFudWFyeSAyMDA4LCB0aHJlZSBjYXNpbm9zIGhhdmUgb3BlbmVkIGRlc2lnbmF0ZWQgcG9rZXIgcm9vbXMuIApJZiB5b3VyIGFuZ2xlIGNoYW5nZXMgeW91IGdldCBiYWQgcmVzdWx0cy4gCjkgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpTbG93bHkgaW5zZXJ0IHRoZSBmaW5nZXIgdXAgdG8gdGhlIGVuZCBhbmQgbWFrZSBjaXJjdWxhciBtb3Rpb25zIHdpdGggdGhlIHdob2xlIHdyaXN0LCB3aXRob3V0IG1vdmluZyB0aGUgZmluZ2VyIGluIGFuZCBvdXQuIApJIHNheSB0aGF0IEkgYW0gZGVkaWNhdGVkIGFuZCB5b3UgYXMgYSBzdHJhbmdlciBvbiB0aGUgaW50ZXJuZXQganVzdCBhc3N1bWUgdGhhdCBJIGFtIG5vdCBib3JuIGFnYWluIGFuZCBmaWxsZWQgd2l0aCB0aGUgSG9seSBTcGlyaXQ/IEFtIEkgbm90IHN1cHBvc2VkIHRvIGFzayBxdWVzdGlvbnM/IERvIHlvdSBuZXZlciBhc2sgcXVlc3Rpb25zIGFib3V0IGhvdyB0byBsaXZlIHlvdXIgQ2hyaXN0aWFuIGxpZmUgaW4gYSBjb250ZW1wb3JhcnkgY29udGV4dD8gWWVzLCB3aGVuIHdlIGFyZSBmaWxsZWQgd2l0aCB0aGUgaG9seSBzcGlyaXQgd2Ugc2hvdWxkIGJlIGFibGUgdG8gZW11bGF0ZSBDaHJpc3QgYnV0IHdlIGFyZSBhbHNvIGh1bWFuLiAKUmVndWxhdG9ycyBkZXNlcnZlIGNyZWRpdCB0b28uIEluIG1hbnkgcHJvdmluY2VzLCB0aGVpciBqb2JzIGFyZSBjaGFuZ2luZyBmcm9tIHRoYXQgb2YgcmVndWxhdGlvbiBtYWtlciwgd2hvc2Ugam9iIGlzIHRvIGFkZCBydWxlcywgdG8gdGhhdCBvZiByZWd1bGF0aW9uIG1hbmFnZXIgd2l0aCB0aGUgZmFyIG1vcmUgc29waGlzdGljYXRlZCBqb2Igb2YgYWRkaW5nIHJ1bGVzIHdoZXJlIG5lZWRlZCBhbmQgc3VidHJhY3Rpbmcgb25lcyB0aGF0IGRvbiBhZGQgdmFsdWUuIFRoZXkgYXJlIHJpc2luZyB0byB0aGlzIGNoYWxsZW5nZSBhbmQgZG9pbmcgYSBnb29kIGpvYi4KRnVydGhlcm1vcmUsIGV2ZXJ5IHBsYXllciBoYXMgYW4gZXF1YWwgY2hhbmNlIG9mIHdpbm5pbmcgdGhlIGhhbmQuIEEga2VlbiBvYnNlcnZlciBtYXkgYWxzbyBub3RlIHRoYXQgZXZlbiB0aG91Z2ggdGhlIHJ1bGVzIGFyZSBkZWZpbmVkIGluIHBva2VyLCBzb21lIHBsYXllcnMgbWF5IHV0aWxpemUgdHJpY2tzIHRvIGdhaW4gYW4gYWR2YW50YWdlIG92ZXIgb3RoZXIgcGxheWVycy4uIApWaXJ0b3VzX3JlbGlvdXMgIDY4IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaGVyZSBpcyBwcm9iYWJseSBtb3JlLCBidXQgdGhleSBhcmVuIGFsbCBjb21pbmcgdG8gbWluZC4KQm9hcmQgY2VydGlmaWNhdGlvbiBzaG91bGQgYmUgb25lIG9mIHRoZSB0b3BpY3MgeW91IGZvY3VzIGR1cmluZyB5b3VyIGV2YWx1YXRpb24uIApUaGUgbWFpbiB3aW5kaW5nIHdhcyBvZiB0aGUgbm9ybWFsIGxvdHVzIG8gZGVsdG9pZCB0eXBlIHBsYWNlZCBpbiBwYW5lbmRlcm1pYyBzZW1pYm9sb2lkIHNsb3RzIG9mIHRoZSBzdGF0b3IsIGV2ZXJ5IHNldmVudGggY29uZHVjdG9yIGJlaW5nIGNvbm5lY3RlZCBieSBhIG5vbiByZXZlcnNpYmxlIHRyZW1pZSBwaXBlIHRvIHRoZSBkaWZmZXJlbnRpYWwgZ2lyZGxlc3ByaW5nIG9uIHRoZSAndXAnIGVuZCBvZiB0aGUgZ3JhbW1ldGVycy4gClRoZXNlIGV4b3RpYyBmb3JjZXMgdHJhbnNmb3JtZWQgaGlzIGxpZmUsIGFuZCBoZSBmZWVscyBibGVzc2VkIHRvIHNpbmcgYWJvdXQgaGlzIHNlY3VsYXIgZ3JhY2UuIApUaGUgZ3V5IGNlcnRhaW5seSB3YXMgYnVpbGRpbmcgYSBzdG91dCBzdHJ1Y3R1cmUgd2l0aCBtYXNzaXZlIHdhbGxzLCB0aHJlZSB0b25zIG9mIGNhc3QgaXJvbiwgY2VtZW50LCBpcm9uIGRvb3JzIGFuZCB3aW5kb3cgY2FzZW1lbnRzLCBzdG9uZSwgc2hlZXQgbGVhZCwgYW5kIDEuNSIgdGhpY2sgd29vZGVuIHBsYW5rIGZsb29ycyBvdmVyIGNhc3QgaXJvbiB0cnVzc2VzLiBIb3cgdGhlIHdvb2QgZmlndXJlcyB0byBiZSAiZmlyZSBwcm9vZiIgSSBkbyBub3Qga25vdy4gQnV0IHRoZSBzdWJqZWN0IHdhcyBoaWdobHkgdW51c3VhbCwgYW5kIGRlY2lkZWQgdG8gc2hhcmUgdGhlIHNob3J0IGFydGljbGUgaW4gZnVsbC4uIApJIGFtIHRyeWluZyB0byBnYXVnZSB5b3VyIG9wcG9uZW50J3MgcmVhY3Rpb24uIAoxIGRheSBGcmVlIE1lbWJlcnNoaXAuIFRoaXMgb25lIGRheSBmcmVlIG1lbWJlcnNoaXAgZ2l2ZXMgeW91IGEgY29tcGxldGUgZml0bmVzcyBleHBlcmllbmNlIGluIGp1c3QgMjQgaG91cnMuIEl0IHdpbGwgYmUgZ29vZCBmb3IgZmlyc3QgdGltZSBneW0gbWVtYmVycy4KIklmIEkgaGFkIHJlY2VpdmVkIHRoYXQgbmV3cywgSSB3b3VsZG4ndCBldmVuIGJlIGFibGUgdG8gdGFsayBvbiB0aGUgcGhvbmUsIGxldCBhbG9uZSBtYWtlIGEgcGhvbmUgY2FsbCB0byBzb21lYm9keSBJIGhhcmRseSBrbmV3LiAiIFBob25lIHJlY29yZHMgcmV2ZWFsIEVybmllIHRvbGQgTmljaG9scyBhYm91dCB0aGUga2lsbGluZ3MgYmVmb3JlIGhlIGluZm9ybWVkIGhpcyBvd24gd2lmZS4gCkhlcm9pbiB0aGF0IGxvb2tzIGxpa2UgY29uY3JldGUsIGNhbGxlZCAiR3JleSBEZWF0aCwiIHdoaWNoIGlzIHRhaW50ZWQgd2l0aCBldmVuIG1vcmUgZGFuZ2Vyb3VzIG9waW9pZCBkcnVncywgaGFzIGluIHRyaWdnZXJlZCBkb3plbnMgb2Ygb3ZlcmRvc2VzIHRoaXMgeWVhciwgaW5jbHVkaW5nIGZvdXIgZmF0YWwgb25lcyByZXBvcnRlZCBvbiBUaHVyc2RheSBpbiBBbGFiYW1hLCBHZW9yZ2lhLCBhbmQgT2hpby4gSXQncyBvbmx5IHRoZSBsYXRlc3QgZXhhbXBsZSBvZiB3ZWlyZCBtaXh0dXJlcyBvZiBkZWFkbHkgY2hlbWljYWxzLCBjaGllZmx5IHRoZSBzdXJnaWNhbCBwYWlua2lsbGVyIGZlbnRhbnlsIGFuZCBpdHMgZGVyaXZhdGl2ZXMsIHR1cm5pbmcgdXAgaW4gdGhlIGlsbGVnYWwgZHJ1ZyBtYXJrZXRwbGFjZS4KSSBva2F5IHdpdGggZWl0aGVyIGFwcHJvYWNoLiAKSXQgbGlrZSBJIGhhdmUgMTAgZXh0cmEgcGVuaXNlcy4uIApUaGF0IGFzaWRlLCBzaGUncyBlbnRpdGxlZCB0byBub3QgY29udHJpYnV0ZSB0aGF0J3MgaGVyIGNob2ljZS4gCk5ld3MgYXJ0aWNsZXMgYW5kIHRyYWRlcyBpZGVhcyBzaG91bGQgYmUgcG9zdGVkIHdpdGggeW91ciBhbmFseXNpcyBvciBhbiBhY2NvbXBhbnlpbmcgcXVlc3Rpb24uIE9ubHkgcG9zdCBhbiBhcnRpY2xlIHdpdGggeW91ciBhbmFseXNpcyBpbiB0aGUgY29tbWVudHMuIApXaWNjYSBpcyBsaWtlIEJ1ZGRoaXNtICAgaXQgY29leGlzdHMgdmVyeSB3ZWxsIHdpdGggb3RoZXIgcmVsaWdpb25zLiBOb3QgYSBwdXNoIGZyb20gbWUganVzdCBzYXlpbmcgeW91IGRvbiBuZWVkIHRvIGdpdmUgaXQgdXAuIE15IGJpZ2dlciBjb25jZXJuIGlzIHRoYXQgbW9zdCBjaHVyY2hlcyB3aWxsIHdhbnQgdG8gYmUgeW91ciBFWENMVVNJVkUgYmVsaWVmIHN5c3RlbS4gCiJCdXQgSSBndWVzcyA4MiB0aWNrZXRzIGlzIDgyIHRpY2tldHMgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIGl0IGlzIG9uIE5CQSwgYmFzZWJhbGwgb3Igd2hhdGV2ZXIuIApJIGhhdmUgdHJhdmVsZWQgYWNyb3NzIHRoZSBnbG9iZSwgc3R1ZHlpbmcgdGhlIG1vc3QgZW5pZ21hdGljIGFuZCB1bmJyZWFrYWJsZSBjaXBoZXJzIGFuZCBjb2Rlcy4gClNwZWFraW5nIGFib3V0IHRoZSBjb21wYW55IFdpbmRzb3IgbmVlZHMsIFJvYmVydHNvbiBzYWlkOiBjb3VsZCB0YWtlIGEgbG90IG1vcmUgd29yayBpZiB3ZSBoYWQgYSBsb3QgbW9yZSBwZW9wbGUuIApUaGlzIHNob3VsZCBvbmx5IHRha2UgYSBmZXcgbW9tZW50cy4gCklmIHlvdSB3YW50IHRvIHRyeSBhbmFsIHNleCB3aXRoIHlvdXIgd2lmZSBvciBnaXJsZnJpZW5kLCBidXQgYXJlIHVuY2VydGFpbiBvZiBoZXIgcmVhY3Rpb24sIHVzZSB0aGUgYXBwcm9hY2ggSSByZWNvbW1lbmQgaW4gSG93IHRvIE1ha2UgSGVyIFdhbnQgQW5hbCBTZXguIApCaWRlbiBoYXMgb3Blbmx5IHJhaXNlZCBxdWVzdGlvbnMgYWJvdXQgdGhlIHNvY2lhbCBtZWRpYSBhbmQgZnVuZHJhaXNpbmcgbGFuZHNjYXBlLCB3aGljaCBoYXMgY2hhbmdlZCBkcmFtYXRpY2FsbHkgc2luY2UgaGUgZmlyc3Qgam9pbmVkIE9iYW1hIG9uIHRoZSBEZW1vY3JhdHMnIDIwMDggcHJlc2lkZW50aWFsIHRpY2tldC4KUG9zdHMgb2YgdGhlIFR1YmEgTWFuIGluIGFueSBmb3JtIHdpbGwgcmVzdWx0IGluIGEgNyBkYXkgYmFuLi4gCkFzIHNvb24gYXMgeW91IGxldCB0aG9zZSB0aG91Z2h0cyBzZWVwIGluLCB5b3UgY3JlYXRlZCBhIHNlbGYgZnVsZmlsbGluZyBwcm9waGVjeS4gCkFybWVkIHJvYmJlcnkgY2FycmllcyBhIG1heGltdW0gc2VudGVuY2Ugb2YgbGlmZSBpbiBwcmlzb24uIApJdCBqdXN0IHRoZSB3aG9sZSBwb2ludHMgc3lzdGVtIGlzIGtpbmRhIGhhcmQgZm9yIGEgdGVhbXMgZmlyc3Qgc3BsaXQgYW5kIHRyeWluZyB0byBnZXQgdG8gd29ybGRzLi4gClRoZSBvbmx5IHRoaW5nIGlzIHRoYXQgeW91IGNhbiBnZXQgc29tZSBvZiB0aGUgYmV0dGVyLCBzdWl0ZWQgcG9rZXIgZmVsdCBmb3IgbGVzcyB0aGFuICQxNSBwZXIgbGluZWFyIHlhcmQsIGFuZCB5b3Ugc2hvdWxkIG5lZWQgbW9yZSB0aGFuIDMgbGluZWFyIHlhcmRzIGluIGFsbW9zdCBldmVyeSBjYXNlLiBUaGlzIGlzIGEgc21hbGwgcHJpY2UgZGlmZmVyZW5jZSB3aGVuIHlvdSB0aGluayBvZiBpdCBpbiB0aG9zZSB0ZXJtcy4gRG9uJ3QgdGhpbmsgdGhhdCB0aGUgZ3JlZW4gZmVsdCBtb3N0IGNvbW1vbmx5IHVzZWQgaXMgbm90IGFjY2VwdGFibGUgICBpdCBpcyBqdXN0IHRoYXQgaXQgY2FuIGxvb2sgb2xkIHF1aWNrbHkgYW5kIGl0IGlzIG5vdCBhcyBkdXJhYmxlIG9yIGxvbmcgbGFzdGluZy4gU29tZSBvZiB0aGUgbmV3ZXIgbWF0ZXJpYWxzIGFyZSB0b3VnaCBhbmQgc3RhaW4gcmVzaXN0YW50LCB3aGljaCBhZGRzIGxpZmUgdG8gdGhpcyBtYXRlcmlhbC4KSG93ZXZlciwgdGhlIGRlZmluaW5nIHNlYXJjaCB0ZXJtIG9mIDIwMTcgd2FzY2xlYXJseSBUaGUgSmFwYW5lc2UgYW5pbWF0ZWQgcG9ybm9ncmFwaHkgdHlwaWNhbGx5IGZlYXR1cmVzIG1lbiBhbmQgd29tZW4gd2l0aCB1bnJlYWxpc3RpY2FsbHkgbGFyZ2UgZXJvZ2Vub3VzIHpvbmVzIHRha2luZyBwYXJ0IGluIHNleHVhbCBhY3Rpdml0aWVzIHRvbyB3ZWlyZCB0byBiZSBkZXNjcmliZWQuIEhlbnRhaSB3YXMgdGhlIHNlY29uZCBtb3N0IHNlYXJjaGVkIHRlcm0gaW4gdGhlIHdvcmxkLCBhY2NvcmRpbmcgdG8gUG9ybmh1Yi4KTXkgZmFjdHMgYXJlIHJpZ2h0IHlvdSBoYXZlIHRvIGRpc3Byb3ZlIHRoZW0pLiBCdXQuIApIYXJyb2QgcGxlYWRlZCBndWlsdHkgaW4gV29sbG9uZ29uZyBMb2NhbCBDb3VydCB5ZXN0ZXJkYXkgdG8gdHdvIGNoYXJnZXMgb2YgZnJhdWR1bGVudGx5IGNvbnZlcnRpbmcgbW9uZXkgYXMgYSBsaWNlbnNlZSwgcmVsYXRpbmcgdG8gJDEuNDYgbWlsbGlvbiB0YWtlbiBmcm9tIHRoZSBhZ2VuY3kncyByZW50IHRydXN0IGFjY291bnQgYW5kICQ2NSw1MDAgdGFrZW4gZnJvbSB0aGUgc2FsZXMgdHJ1c3QgYWNjb3VudC4gCkFnYWluIHRoaXMgZW50aXJlbHkgZGVwZW5kcyBvbiB0aGUgY29udHJhY3QuIENvbnRyYWN0b3JzIG1heSBoYXZlIGFzIG1hbnkgYXMgdGhyZWUgY29tcGFuaWVzIHRha2luZyBtb25leSBvdXQgb2Ygc2FsYXJ5IGJlZm9yZSBpdCBnZXRzIHRvIHRoZW0uIE9uIHNvbWUgcHJvamVjdHMsIHllcywgdGhlIGNvbnRyYWN0b3Igd2lsbCBtYWtlIG1vcmUgdGhhdCBhIGNpdmlsaWFuIGJ1dCB0aGlzIGRvZXNuIGFsd2F5cyBob2xkIHRydWUuIApXaGF0IHdlIGRvIGhhdmUgaXMgYSBob2RnZXBvZGdlIG9mIHB1YmxpYyBzcGFjZXMsIGluY2x1ZGluZyB0aGUgUmV4ZGFsZSBIdWIgY29tbXVuaXR5IGNlbnRyZSwgd2hpY2ggY2xvc2VzIGJlZm9yZSBtb3N0IHJlc2lkZW50cyBnZXQgaG9tZSBmcm9tIHdvcmsuIApPbiB0aGUgaW5zaWRlIG9mIHRoZSBmcmlkZ2UsIGxvb2sgYXQgdGhlIGJhY2sgcGFuZWwuIFRoZXJlIHNob3VsZCBiZSBzbG90cyBpbiBpdC4gCkhvdyBpcyBpdCBwb3NzaWJsZSB0aGF0IHdlIGFsbCBrbm93IGZhdCBpcyBiYWQsIGJ1dCBzY2llbmNlIGlzIHNob3dpbmcgdGhhdCBmYXQgbWlnaHQgYmUgZ29vZD8gQmVjYXVzZSBvZiBpZGVvbG9neS4gQW4gaWRlb2xvZ3kgdGhhdCBzYXlzIHRoaW4gYW5kIHRhbGwgYXJlIGdvb2QuIEFuIGlkZW9sb2d5IHRoYXQgYmVsaWV2ZXMgdGhhdCBvdXIgaW5uZXIgbmF0dXJlIGlzIHdyaXR0ZW4gb24gb3VyIHBoeXNpY2FsIHNlbHZlcy4gQW4gaWRlb2xvZ3kgb2YgZXVnZW5pY3MgIHdpc2hpbmcgdGhlIHNob3J0IGFuZCB0aGUgZmF0IHdvdWxkIGdvIGF3YXkuCk4nYXlhbnQgcGFzIGZhaXQgZ2FmZmUgaidhaSBjcnUgIHVuZSAicnZsYXRpb24iIGRhdGFudCBkZSAyIG1vaXMgKHZvaXIgbGUgcHJlbWllciB0aXRyZSkuIEVuIGZhaXQgbGEgc2l0dWF0aW9uIGVzdCBjbGFpcmUgOiBDYXNhc25vdmFzIGMnZXN0IGNvbW1lIHMnaWwgbidhdmFpdCBqYW1haXMgZXhpc3QuIExlIHRtb2lnbmFnZSB2aWVudCBkJ3VuIG1kZWNpbiBxdWkgYSBwdSBzZSBwYXNzZXIgZGUgTGV2b3RoeXJveC4gSmUgc2F2YWlzIHF1ZSBwbGFudGVyIHNvbiBjdWwgc3VyIHVuZSBjaGFpc2UgYyd0YWl0IHBhc3NlciB1bmUgaGV1cmUgcG91ciBkY291dnJpciBxdSdlbGxlIGF1cmFpdCBmYWl0IGxlIHJnaW1lIGRlIFNlaWduYWxldC4gCkluIGZhY3QsIGl0cyBwb3B1bGFyaXR5IG9ubGluZSBjYW4gYmUgZ2F1Z2VkIGJ5IHRoZSBmYWN0IHRoYXQgYXMgbWFueSBhcyAxNC41IG1pbGxpb24gcGVvcGxlIHdvcmxkd2lkZSBwbGF5IHBva2VyIG9ubGluZSBhdCBsZWFzdCBvbmNlIGEgbW9udGggZm9yIG1vbmV5LCBhY2NvcmRpbmcgdG8gdGhlIG1vc3QgcmVjZW50IHJlc2VhcmNoLiBUaGUgdmVyeSBmYWN0IHRoYXQgaXQgY2FuIGJlIHBsYXllZCBvbmxpbmUgaXMgdGhlIGJpZ2dlc3QgcmVhc29uIGZvciBpdHMgcG9wdWxhcml0eS4gCkJ1dCBiZWluZyB0aGUgZmF0aGVyIG9mIHRoZSBDb3J2YWlyIGRpZG4ndCBhbHdheXMgcmVzdWx0IGluIGdvb2QgcHVibGljaXR5LiBJbiBVbnNhZmUgYXQgQW55IFNwZWVkLCBwdWJsaXNoZWQgaW4gMTk2NSwgUmFscGggTmFkZXIgdHJhc2hlZCB0aGUgQ29ydmFpciBhbmQgdGhlIGNvcnBvcmF0ZSBkZXNpZ24gcGhpbG9zb3BoeSB0aGF0IGNyZWF0ZWQgaXQuIEluIDE5NjEsIENvbGUgd2FzIHByb21vdGVkIHRvIGdyb3VwIHZpY2UgcHJlc2lkZW50LCBvdmVyc2VlaW5nIGFsbCBvZiBHTSdzIGF1dG9tb3RpdmUgZGl2aXNpb25zLiBJbiAxOTY1IGhlIGJlY2FtZSBleGVjdXRpdmUgdmljZSBwcmVzaWRlbnQgaW4gY2hhcmdlIG9mIGdlbmVyYWwgc3RhZmYgYWN0aXZpdGllcy4gSGUgd2FzIG5hbWVkIEdNIHByZXNpZGVudCBpbiAxOTY3LiBIZSByZXRpcmVkIGluIDE5NzQuCk1hbnkgZXNzZW50aWFsIG9pbHMgaGF2ZSBhIHJlbWFya2FibGUgYWJpbGl0eSB0byBib3RoIHN1cHBvcnQgdGhlIGltbXVuZSBzeXN0ZW0gYW5kIGluY3JlYXNlIG9uZSdzIHJhdGUgb2YgaGVhbGluZy4gClBlb3BsZSB3aG8gZGlkIHByb3Rlc3Qgd2VyZSBraWxsZWQgdGhlbXNlbHZlcy4gCkZvciBhbGwgb3RoZXIgY2lyY2xlcywgc2NoZWR1bGUgdGltZXMgdG8gd29yayBvbiB0aGVtLCBidXQgdHJ5IG5vdCB0byBzdHJlc3MgYWJvdXQgdGhlbSBldmVyeSBzaW5nbGUgZGF5LiAKQ29udHJvbGxpbmcgdGhlIE1hc3NhZ2UgQ2hhaXIKV2l0aCB0aGlzIGxhc3Qgb3B0aW9uIHRoZXJlIGlzIG5vIGxpbWl0IHRvIHRoZSBhbW91bnQgb2YgbW9uZXkgWW91IGNhbiB3aW4gcGxheWluZyBmcmVlIHBva2VyIGdhbWVzIG9ubGluZS4gCkluc3RlYWQsIHlvdSBjYW4gc2V0IG91dCB5b3VyIGNoaXAgdHJheSBhbmQga25vdyB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gaGF2ZSBhIGZyZWUgYW5kIGVhc3kgZXZlbmluZyB3aXRoIHlvdXIgZnJpZW5kcy4uIApBIG1hbiB3YXMgcnVzaGVkIHRvIGEgdHJhdW1hIGNlbnRyZSBpbiBjcml0aWNhbCBjb25kaXRpb24gYWZ0ZXIgYSBzaG9vdGluZyBhdCBhIGdhcyBzdGF0aW9uIGluIHRoZSBjaXR5J3MgTHl0dG9uIFBhcmsgbmVpZ2hib3VyaG9vZCBlYXJseSBGcmlkYXkgbW9ybmluZy4KSGUgbmV2ZXIgc2FpZCBoZSBkaWRuIHdhbnQgaXQgdG8gYmUgcmVsZWFzZWQgdG8gdGhlIHB1YmxpYywgdGhlc2Ugd2VyZSBoaXMgZXhhY3Qgd29yZHMgZnJvbSB0aGUgaW50ZXJ2aWV3IHlvdSByZWZlcnJpbmcgdG86CllvdSBjb3VsZCwgZm9yIGV4YW1wbGUsIGV4cGxhaW4gd2hvIGNhbWUgdXAgd2l0aCB0aGlzIG1ldGhvZCwgYW5kIHRoZSBsb2dpYyB0aGF0IHdhcyB1c2VkIHRvIGNyZWF0ZSB0aGUgbWV0aG9kLiAKRG9uIGRhdGUgY2hpY2tzIGZyb20gZGF0aW5nIGFwcHMuIApIZXJlIGFyZSBzb21lIG9mIHRoZSByYW5raW5ncyBvZiBwb2tlciBoYW5kcy4gVGhlIGZpcnN0IHJhbmtpbmcgd291bGQgYmUgdGhlIGhpZ2ggY2FyZC4gVGhlc2UgYXJlIHRoZSB0eXBlIG9mIHBva2VyIGhhbmRzIHRoYXQgYXJlIHJhbmtlZCBieSB0aGUgdmFsdWUgb2YgdGhlaXIgaGlnaGVzdCBjYXJkLiBGb3IgZXhhbXBsZSwgeW91ciBwb2tlciBoYW5kcyBhcmUgNywgNiwgYW5kIDUsIHRoZW4gNyB3b3VsZCBiZSB0aGUgaGlnaGVzdCBhbmQgc28gZm9ydGguIApGbG9yZSBJTkdFTEFFUkUsIEd3ZW5uIFBFUkFOIGV0IE1hdGhpbGRlIFNBVUxOSUVSIHNvdXMgbGEgcmVzcG9uc2FiaWxpdCBkZSBNLiBDeXJpbCBIQVpJRiBUSE9NQVMsIHBzeWNoaWF0cmUgZGVzIGhwaXRhdXgsIGNoZWYgZHUgc2VydmljZSBkZSBsJ2ludGVyc2VjdGV1ciBkZSBsYSBwZXJzb25uZSBnZSBhdSBwbGUgZGUgcHN5Y2hpYXRyaWUgZGUgbCdocGl0YWwgZGUgQm9oYXJzLCBwcnNpZGVudCBkdSBjb21pdCBkJ3RoaXF1ZSBkdSBDSFJVIGRlIEJyZXN0LCBkb2N0ZXVyIGVuIGRyb2l0IHB1YmxpYwpJIHdhcyBvbiBhIGZhbWlseSB2YWNhdGlvbiB0byBBdGxhbnRhLCBhYm91dCAxOTcyLiBXZSB3ZW50IHRvIHZpc2l0IHNvbWUgY291c2lucyBvZiBteSBncmFuZG1vdGhlcnMuIApJZiBJIGxvc3QgYSAxMDBLIGF0IGEgY3JhcHMgdGFibGUgaW4gYSBuaWdodCwgSSdkIGhhdmUgR3VpZG8gdGhlIEtpbGxlciBQaW1wIG9uIG15IGNhc2UgKGJlY2F1c2UgaSB3b3VsZCBiZSB1YmVyIHViZXIgaW4gdGhlIHJlZCksIGZvciBzb21lb25lIGxpa2UgUGhpbCBJdmV5LCB0aGF0J3MgcHJvYmFibHkgdGhlIGVxdWl2YWxlbnQgb2YgbWUgZHJvcHBpbmcgJDQwIGF0IHRoZSBjb3NtZXRpY3MgY291bnRlci4gSXQncyBhbGwgcmVsYXRpdmUsIGluIGEgc2Vuc2UuLiAKU2FmZXR5IGlzIGFsd2F5cyBhIGJpZyBpc3N1ZSB3aXRoIGFueSB3YXRlciBiYXNlZCByZWNyZWF0aW9uYWwgZXF1aXBtZW50LiBDaGlsZHJlbiBzaG91bGQgYWx3YXlzIGJlIHN1cGVydmlzZWQgYW5kIHRhdWdodCB0aGUgcHJvcGVyIHdheSB0byBlbmpveSBwb29scyBhbmQgdHVicy4gVGhlIGJpZ2dlc3QgZGFuZ2VyIHRvIGNoaWxkcmVuIGlzIGFjY2lkZW50YWwgZHJvd25pbmcgaW4gdHVicyB0aGF0IGhhdmUgYmVlbiBsZWZ0IHVuY292ZXJlZC4gVXNlcnMgd2l0aCBoZWFydCBjb25kaXRpb25zIG9yIHNlaXp1cmUgZGlzb3JkZXJzIHNob3VsZCBhbHNvIGJlIGF3YXJlIG9mIHRoZSByaXNrcyBvZiBiYXRoaW5nIGluIGhvdCB3YXRlcnMgZm9yIGV4dGVuZGVkIHBlcmlvZHMgb2YgdGltZS4gQW5kIGFjY29yZGluZyB0byB0aGUgQW1lcmljYW4gSm91cm5hbCBvZiBQdWJsaWMgSGVhbHRoLCBhbGNvaG9sIGlzIHRoZSBtb3N0IGRhbmdlcm91cyBmYWN0b3IgaW4gdHViIHJlbGF0ZWQgZGVhdGhzIHdpdGggaW50b3hpY2F0aW9uIGFuZCBkcm93bmluZyBhcyB0aGUgY2F1c2Ugb2YgMzggcGVyY2VudCBvZiBhbGwgaG90IHR1YiByZWxhdGVkIGZhdGFsaXRpZXMgW3NvdXJjZTogUHJlc3NdLgpBbnJlZ2VuZGUgU3BvcnRhcnRlbiB1bmQgZGVyIFZlcnppY2h0IGF1ZiBTc3BlaXNlbiB1bmQgTWlsY2hwcm9kdWt0ZSBzaW5kIGZyIGRlbiBLYXBoYSBUeXAgZGFoZXIgYmVzb25kZXJzIHp1IGVtcGZlaGxlbi4gCkxpa2UgUG9sYW5kLCBIdW5nYXJ5IGFuZCB0aGUgQ3plY2ggUmVwdWJsaWMsIFNsb3Zha2lhIGVhcm5zIGF1dG9tb3RpdmUgaW52ZXN0bWVudCB3aXRoIGdlb2dyYXBoaWNhbGx5IHByb3hpbWl0eSB0byBXZXN0ZXJuIEV1cm9wZSwgcmVhbGx5IGxvdyB3YWdlIHJhdGVzLCBwYXlpbmcgbWFudWZhY3R1cmVycyB0aGUgYmlnZ2VzdCBpbmNlbnRpdmVzIHRoZSBFVSB3aWxsIGFsbG93IHRvIHJlbG9jYXRlLCBhbmQgYnVpbGRpbmcgcm9hZHMsIHJhaWx3YXlzIGFuZCBwb3dlciBncmlkcyBsaWtlIG1hZC4gCkl0IHByb2NlZWRzIHRvIHRoZSBzdXJmYWNlIG5vdCBpbiBhIHN0cmFpZ2h0IGxpbmUgYnV0IGJ5IGEgY29tcGxpY2F0ZWQsIHppZyB6YWcgcm91dGUsIHNpbmNlIGl0IGlzIGNvbnN0YW50bHkgYWJzb3JiZWQgYnkgYXRvbXMgYW5kIHJlIGVtaXR0ZWQgaW4gbmV3IGRpcmVjdGlvbnMuIApBZnRlciB2aWxsaWFuIGNhbGxzIGZsb3AgaGUgYXQgbGVhc3QgaGFzIGEgZmx1c2ggZHJhdyBvciBhIHBvY2tldCBwYWlyLiAKTW9yZSB0aGFuIHRoYXQsIGl0IGhhcyBiZWVuIG1vc3QgcmV3YXJkaW5nIHRvIGJlIGEgcGFydCBvZiBvdXIgYW1hemluZyBwcm9mZXNzaW9uIGFuZCBpdHMgZGV2ZWxvcG1lbnQsIGFuZCB0byBoZWxwIHJlbGlldmUgcGVvcGxlJ3MgcGFpbiBhbmQgc3VmZmVyaW5nIGluIGEgbmF0dXJhbCwgY29tcGFzc2lvbmF0ZSBhbmQgY29uc2Npb3VzIHdheS4gCkhhdmluZyBzdWNoIGEgc21hbGwgbWlsaXRhcnksIGl0IGRvZXNuIHBlcnN1ZSB0aGVzZSwgaG93ZXZlci4gSXQgaXMgdmVyeSBmcmVlIG1hcmtldCBhbmQgcXVpdGUgc2ltaWxhciB0byBEaXhpZSwgaG93ZXZlciwgcmFjZSBpc24gYXMgbXVjaCBhcyBhbiBpc3N1ZSBoZXJlLiBJdHMgY2FwaXRhbCBpcyBPbWFoYSAoSW0gbm90IHRvbyBlZHVjYXRlZCBvbiB0aGlzIHJlZ2lvbiwgc28gdGhpcyBpcyBqdXN0IGEgd2lsZCBndWVzcykuIApPdmVyIG9uIHRoZSBPZmZpY2lhbCBBbGJ1bXMgQ2hhcnQsIHRoZSB0b3AgZml2ZSBpbmNsdWRlcyB0aHJlZSBmaWxtIHNvdW5kdHJhY2tzLCBpbmNsdWRpbmcgQSBTdGFyIElzIEJvcm4gaW4gdGhlIHRvcCBzcG90LgpBOCBzdWl0ZWQgaXMgYSBsb3QgbW9yZSBwbGF5YWJsZSB0aGFuIG9mZnN1aXQgYmVjYXVzZSB5b3UgY2FuIG1ha2UgdGhlIG51dHMgZWFzaWVyIHdoaWNoIGhlbHBzIHRvIGFkZCBzb21lIGJpZ2dlciBwb3RzIGJhY2sgaW4geW91ciBmYXZvciwgYnV0IHlvdSBoYXZlIHRvIGJlIGFibGUgdG8gc3VjY2Vzc2Z1bGx5IG5hdmlnYXRlIGJvYXJkcyB3aGVyZSB5b3UganVzdCBtYWtlIHRvcCBwYWlyIHRvIG1ha2UgaXQgd29ydGggaXQuCkhpLCB3aGF0IHR5cGUgb2YgcmF0aW5ncyBhcmUgeW91IGV4YWN0bHkgbG9va2luZyBmb3I/IEZpbmRpbmcgYWxsIG9mIHRoZSByYXRpbmdzIGluIG9uZSBwbGFjZSBpcyBraW5kIG9mIGltcG9zc2libGUgaWYgeW91IGRvbiB3b3JrIGZvciBhIG5ld3NwYXBlciBvciBrbm93IHNvbWVvbmUgZnJvbSBhIFRWIHRoYXQgcmVjZWl2ZXMgdGhlIGZ1bGwgTmllbHNlbiByZXBvcnQuIEhvd2V2ZXIsIGlmIHlvdSB3aWxsIGJlIHNhdGlzZmllZCB3aXRoIHRoZSBMKzMgYW5kIEwrNyBBMTggNDkgYW5kIFAyKyByYXRpbmdzLCBhcyB3ZWxsIGFzIE1hbGUvRmVtYWxlIDE4IDM0IC8gMTggNDkgdGhlbiBJIHdvdWxkIHN1Z2dlc3QgZ29pbmcgdGhyb3VnaCB0aGUgZGFpbHkgZmluYWwgcmF0aW5ncyBwb3N0cyBhdCBQcm9ncmFtbWluZyBJbnNpZGVyLiBUaGF0IGlzIGtpbmQgb2YgYWxsIHRoYXQgd2FzIGF2YWlsYWJsZSBhdCB0aGUgbW9tZW50LCBJIHdlbnQgdGhyb3VnaCBtdWx0aXBsZSB3ZWJzaXRlcyB0byBjb2xsZWN0IHRob3NlLiBDaGFuZ2Ugc2hlZXRzIGZvciBvdGhlciBzZWFzb25zLgpUaGUgY2VudGVyIHdvdWxkIGFsc28gaGF2ZSB0byBwYXkgYSBwZW5hbHR5IHRvIHRoZSBzdGF0ZSwgY2hhbmdlIGl0cyBzdGFuY2Ugb24gdHJhbnMgZG9ub3JzLCBhbmQgdHJhaW4gZW1wbG95ZWVzIGFjY29yZGluZ2x5LgpQUzQgb3ZlcmFsbCBoYXMgYSBiZXR0ZXIgZXhwZXJpZW5jZS4gSSBmaW5kIHRoZSBVSSBpcyBtdWNoIGVhc2llciB0byBuYXZpZ2F0ZSwgdGhlIGNvbnRyb2xsZXIgaXMgc3VwZXIgY29tZm9ydGFibGUgYW5kIEkgZGlkbid0IGhhdmUgdG8gYnV5IGEgcmVjaGFyZ2VhYmxlIGJhdHRlcnkgcGFjaywgdGhlIGNvbnNvbGUgd2FzIGNoZWFwZXIsIGRvd25sb2FkIHNwZWVkcyBzZWVtIHRvIGJlIGJldHRlciwgYW5kIG5vdCB0byBtZW50aW9uIHRoZSBnYW1lIHNlbGVjdGlvbiBvbiBQbGF5U3RhdGlvbiBpcyBtYWduaXR1ZGVzIGJldHRlci4uIApJIHJlYWQgc29tZSBndWlkZXMgb24gdGhlIGludGVybmV0IG9uIGhvdyB0byBhdm9pZCBnZXR0aW5nIGNvbXBsZXRlbHkgcmlwcGVkIG9mZiBieSB0aGUgZ2lybHM7IGhvd2V2ZXIsIGJ5IG5vdCBzcGVha2luZyBhbnkgR2VybWFuIEkgY3VyaW91cyBpZiB0aGF0IHdpbGwgYmUgYW4gaXNzdWUgaW4gdGFsa2luZyB0byB0aGUgbGFkaWVzIGF0IGFsbC4gSSB1bmRlcnN0YW5kIHRoYXQgZ2V0dGluZyBhcm91bmQgR2VybWFueSBvbmx5IGtub3dpbmcgRW5nbGlzaCBpcyBwb3NzaWJsZS4gCkkgbWVhbiBJIGdldCB0aGUgc2VudGltZW50IGFuZCB3b3VsZCBuZXZlciB1c2UgdGhhdCB0ZXJtIGJlY2F1c2UgV2hpdGUgU3VwcmVtYWNpc3RzLCBhIHRpbnkgcGVyY2VudGFnZSBvZiB3aGl0ZSBwZW9wbGUsIGhhdmUgcnVpbmVkIGl0IGZvciBldmVyeW9uZS4gRnVjayB0aGVtLiBJIHdvdWxkIHJhdGhlciB3ZSBjb3VsZCBqdXN0IGhhdmUgcHJpZGUgaW4gaHVtYW5pdHksIGJ1dCB0aGF0IHdpbGwgcmVxdWlyZSBhIGNoYW5nZSBpbiB0aGlua2luZyBzcGVjaWVzIHdpZGUuLiAKUG9rZXIgRmFjZSB3YXMgaG93IHNoZSBnb3QgdGhlIGF0dGVudGlvbiBvZiB0aGUgd29ybGQsIG1ha2luZyBoZXIgbW9zdCBrbm93biBmb3IgdGhhdCBvbmUgc29uZy4gCkFueXdheSwgbWF5YmUgSSB3aWxsIG1ha2UgYSB5b3UgdHViZSB2aWRlby4gTWF5YmUgSSB3aWxsIGp1c3Qgc2F5LCBEb25hbGQgVHJ1bXAsIGNhbiB5b3UgZ2l2ZSBtZSBvbmUgbWlsbGlvbiBkb2xsYXJzPyBXaHkgbm90PyBMZXQgc2VlIHdoZXJlIGl0IGNhbiBnby4KV2UgYWxzbyBwcm9taXNlIHRoYXQgbm8gbWVtYmVyIG9mIHRoZSBlZGl0b3JpYWwgc3RhZmYgbWF5IGJlIGludm9sdmVkIGluIHRoZSByZXNlYXJjaCwgd3JpdGluZywgb3IgcHJvZHVjdGlvbiBvZiBjdXN0b20gcHVibGlzaGluZyBjb250ZW50LiBUaGlzIHBvbGljeSBhcHBsaWVzIGVxdWFsbHkgdG8gY3VzdG9tIHB1Ymxpc2hpbmcgY29udGVudCBpbiBwcmludCwgaW4gZGlnaXRhbCwgcmVzZWFyY2ggYW5kIGV2ZW50cy4gQ2FuIGJlIGVpdGhlciB3cml0dGVuIGJ5IGFkdmVydGlzZXIgb3Igd3JpdHRlbiAob3IgcmV3cml0dGVuKSBieSBjdXN0b20gbWVkaWEgZGl2aXNpb24uIEdlbmVyYWxseSBwcm9tb3RlcyBzcGVjaWZpYyBhZHZlcnRpc2VyIGJyYW5kIGFuZCB0b3BpY3MgYXJlIGRpY3RhdGVkIGJ5IGFkdmVydGlzZXIuCkFuZCBxdWVzdGlvbiB0aGUgd2hvbGUgbm90aW9uIG9mIGNydWVsdHksIGl0cyBtZWFuaW5nLCBhbmQgdGhlIHBvcnRhYmlsaXR5IG9mIHRoZSBjb25jZXB0IGFjcm9zcyBhbmltYWxzIG9mIGFsbCB0eXBlcy4gCllvdSdsbCBzZWUgdGhlIGZpbmlzaGluZyB0b3VjaGVzIHdpdGggdGhlIHBva2VyIHJvb20uIApXZW5uIG1hbiBzaWNoIGRpZSBCZWdybmR1bmcgd2VpdGVyIGFuc2NoYXV0LCBzbyBzdGVodCBkb3J0OgoiSXQncyBhbiBpY29uaWMgaG90ZWwgYW5kIEknbSBleHBlY3RpbmcgYSBnb29kIHJlc3BvbnNlLCIgaGUgc2FpZC4gIldlIGFyZSBwcmVwYXJpbmcgZm9yIGFuIGF1Y3Rpb24gb2YgdGhlIGZyZWVob2xkIHdoaWNoIHdpbGwgcHJvYmFibHkgdGFrZSBwbGFjZSBpbiBmaXZlIG9yIHNpeCB3ZWVrcywiIE1yIE1heSBzYWlkLi4gCkdpbGNocmlzdCB3YXMgYSBnZW51aW5lIGlubm92YXRvciwgcmVkZWZpbmluZyB0aGUgcm9sZSBvZiBiYXRzbWFuIHdpY2tldGtlZXBlci4gSGUgd2FzIGFsc28gb25lIG9mIHRoZSBnYW1lIGdvb2QgZ3V5cywgcmVwZWF0ZWRseSBjaG9vc2luZyB0byB3YWxrIGlmIGhlIGZlbHQgaGUgd2FzIG91dC4gVGhlc2UgZGF5cyBoZSBpcyBidXN5IHdpdGggY29tbWVudGFyeSwgYnVzaW5lc3MgYW5kIHBvbGl0aWNhbCB3b3JrLgpNYW55IG9mIG15IGNvbGxlYWd1ZXMgYXQgYWxsIGxldmVscyBvZiBnb3Z0LCBlc3Agd29tZW4sIGFyZSBzdWJqZWN0IHRvIGEgbG90IHdvcnNlIHRoYW4gdGhlc2UgdHdlZXRzLkhlIHRvbGQgVGhlIEZyZWUgUHJlc3MgaGlzIHR3ZWV0IGFib3V0IEhlbG1lciBjb3VuY2lsIGNoYWlyIHdhcyBhIGFsZWNrIGNvbW1lbnQgbWVhbnQgdG8gZHJpdmUgaG9tZSBhIGxhcmdlciBwb2ludCBhYm91dCB0aGUgZXhwZW5zZSBvZiBhICQ1MDAgbWlsbGlvbiBidXMgcmFwaWQgdHJhbnNpdCBzeXN0ZW0gYW5kIHdoYXQgaGUgZGVzY3JpYmVkIGFzIEhlbG1lciBvdXQgb2YgY29udHJvbCBzcGVuZGluZy55b3UgZ2V0IGZydXN0cmF0ZWQgYW5kIHlvdSBjb250aW51YWxseSBnZXQgaWdub3JlZCB3aGVuIHlvdSBicmluZyB1cCB2YWxpZCBwb2ludHMsIHlvdSBnZXQgbW9yZSBwcm92b2NhdGl2ZSBpbiB5b3VyIGxhbmd1YWdlLCBTcGVuY2Ugc2FpZC4gClRoZSBEUFQgQXByaWwgMjAxNyBvcGVucyBkb29ycyB0byBwbGF5ZXJzIGF0IERlbHRpbiBSb3lhbGUgR29hIHdpdGggaXRzIERQVCAxNUsgS2lja29mZiBvbiAxOXRoIEFwcmlsIGF0IDdQTSwgd2hpY2ggaXMgYSByZSBlbnRyeSB0b3VybmFtZW50IHRoYXQgcHJvbWlzZXMgUnMuIDIwLDAwLDAwMCBndWFyYW50ZWUuIE9uIDIwdGggdG8gMjJuZCBBcHJpbCwgcGxheWVycyBjYW4gdGFrZSBwYXJ0IGluIEFkZGE1MiAzNUsgTWFpbiBFdmVudCwgYSBoaWdobGlnaHQgZXZlbnQgd2hlcmVpbiBwbGF5ZXJzIGNhbiBlbnRlciB0aGUgdG91cm5hbWVudCBvdmVyIHR3byBkYXlzIERheSAxQSAoMjB0aCBBcHIpIGFuZCBEYXkgMUIgKDIxc3QgQXByKSBhbmQgaWYgYSBwbGF5ZXIgYnVzdHMgb24gRGF5IDFBLCBoZS9zaGUgY2FuIHJlIGVudGVyIG9uIERheSAxQi4uIAooRnVsbCBBbnN3ZXIpLiAKTWFzb24gYmVlcyBhcmUgaW1wb3J0YW50IHBvbGxpbmF0b3JzCklmIHlvdSBnb25uYSB0cnkgeW91ciBsdWNrIHdpdGggYm91bmNlcnMsIGdvIGF0IDFhbTogaXQgYSBiaXQgZWFybHkgZm9yIEJlcmxpbiwgYnV0IHRoYXQgd2F5IGlmIHlvdSBkb24gZ2V0IGluIHlvdSBjYW4gZ28gdG8gYSBiYXIsIG9yIHRyeSBzb21ld2hlcmUgZWxzZSwgYW5kIHlvdXIgbmlnaHQgaXMgbm90IGEgdG90YWwgbG9zcy4gU2VyaW91c2x5IHRob3VnaCwgd2l0aCA0IHBlb3BsZSwgYW5kIHZpc2l0aW5nIHRoZSBjaXR5IGFuZCBub3QgaGF2aW5nIG11Y2ggdGltZSwgSSB3b3VsZCBsb29rIGZvciB0aWNrZXRzLiBIYWxmIHRoZSBwb3B1bGF0aW9uIG9mIExvbmRvbi4gClRob3NlIHRoaW5ncyBhcmUgcmVhZCByZW1vdGVseSBhbmQgdGhlIFRTQSBhZ2VudCB2aWV3aW5nIHRoZSBzY2FucyBhcmUgKGZvciB0aGUgbW9zdCBwYXJ0KSBub3QgaW50ZXJlc3RlZCBpbiBhbnl0aGluZyBsaWtlIGpld2Vscnkgb3IgdGhlIG1ldGFsIHJpdmV0cyBvbiBqZWFucy4gVGhleSBhcmUgbG9va2luZyBmb3IgY2VydGFpbiBzaGFwZXMgYW5kIHNpemVzIG9mIHRoaW5ncyB0aGF0IG1pZ2h0IGJlIHdlYXBvbnMuIFRoZSByZW1vdGUgYWdlbnQgZGlyZWN0cyB0aGUgZ3JvdW5kIGFnZW50IHdpdGggdGhvc2UgbWFjaGluZXMuLiAKTmVlZGxpbmcgaXQgb2Z0ZW4gcmVsaWV2ZXMgc3RvbWFjaCBwYWluIGltbWVkaWF0ZWx5LiAKQ29tbWVudCBhdXJhaXQgb24gcHUgaWdub3JlciBsZSBjaG5lIGlsIHkgYSAzMDAwIG91IDUwMDAgYW5zIGVuIGFycmlyZT8gVG91dCBkIGRlIHBhciBsYSB0YWlsbGUgcXUgY2VydGFpbnMgZGUgc2VzIHN1amV0cywgYyB0b3V0ICBmYWl0IGltcG9zc2libGUuIApObyB5b3UgZG9uIG5lZWQgKzEwIHVuaXRzIHRvIGJlYXQgYW55IGNvbnRlbnQuIEl0IGhlbHBzLCBzaW5jZSBneSB0aGUgZW5kIG9mIGl0IHlvdSBnZXQgKzQgdG8gYWxsIHN0YXRzLCBidXQgaWYgeW91IGhhdmUgYSBnbGFzcyBjYW5ub24gZm9yIGV4YW1wbGUsIGFuZCB0aGUgbGFzdCAyIHN0YXRzIHRvIGdldCBhICsxIGlzIGxpa2UgREVGIGFuZCBSRVMsIGl0IG5vdCByZWFsbHkgZ29pbmcgdG8gaGVscCB5b3UgdGhhdCBtdWNoLiAKSW50ZXJjb25uZWN0aW5nIHBlb3BsZSBhbmQgcHJvY2Vzc2VzIHRvIGNyZWF0ZSBsb2NhbCBhbmQgcmVnaW9uYWwgaW5jbHVzaXZlIGlubm92YXRpb24gYW5kIGVjb25vbWljIGdyb3d0aCB3aGlsZSBhbHNvIHJlZHVjaW5nIGVudmlyb25tZW50YWwgaW1wYWN0cy4uIApUaGV5IGNhbiBmaW5kIGFub3RoZXIgYXV0b21ha2VyLCBJIGFsbCBmb3IgaXQsIHNhaWQgRHlrZS4KIkl0J3MgdmVyeSBkYW5nZXJvdXMgdG8gZ2V0IGludG8gYSBwcmljZSB3YXIgb24gc2VydmljZSBhbmQgcHJvZHVjdC4gCiJZb3Ugd2FudCB0byBkZWJhdGUgZm91bmRhdGlvbnMgYW5kIGNoYXJpdGllcz8iIE9iYW1hIHNhaWQsIGNvbXBhcmluZyB0aGUgVHJ1bXAgRm91bmRhdGlvbiB0byB0aGUgQ2xpbnRvbiBGb3VuZGF0aW9uLCBhc3NvY2lhdGVkIHdpdGggRGVtb2NyYXQgSGlsbGFyeSBDbGludG9uIGFuZCBoZXIgZmFtaWx5LiAiT25lIGNhbmRpZGF0ZSdzIGZhbWlseSBmb3VuZGF0aW9uIGhhcyBzYXZlZCBjb3VudGxlc3MgbGl2ZXMgYXJvdW5kIHRoZSB3b3JsZC4gVGhlIG90aGVyIGNhbmRpZGF0ZSdzIGZvdW5kYXRpb24gdG9vayBtb25leSBvdGhlciBwZW9wbGUgZ2F2ZSB0byBoaXMgY2hhcml0eSBhbmQgdGhlbiBib3VnaHQgYSBzaXggZm9vdCB0YWxsIHBhaW50aW5nIG9mIGhpbXNlbGYuIgpJIHdlbnQgb24gdGhlIHN1YnJlZGRpdCBsb29raW5nIGZvciBvdGhlciBwZW9wbGUgdG8gc2hhcmUgbXkgZXhjaXRlbWVudCB3aXRoIGFuZCBpdCBkaXNhcHBvaW50aW5nIHRvIGluc3RlYWQgc2VlIG11bHRpcGxlIHRocmVhZHMgdGhhdCBhcmUgYWxsIHdhbGxzIG9mIHNhbHQuLiAKVGhleSBhbHNvIGZpbGVkIGNyaW1pbmFsIGNoYXJnZXMgYWdhaW5zdCB0aGUgY29tcGFueSdzIHR3byB0b3AgZXhlY3V0aXZlcywgTmVsc29uIEJ1cnRuaWNrIGFuZCBSYXltb25kIEJpdGFyLiBQcmV2aW91c2x5LCB0aGV5IGhhdmUgaXNzdWVkIHN0YXRlbWVudHMgdGhyb3VnaCBhIHB1YmxpY2lzdCBjb25kZW1uaW5nIHRoZSBjaGFyZ2VzIGFzIHVuZm91bmRlZC4uIApTbyBJIGVhdCBpdCBmb3IgYSBmZXcgbW9yZSBtaW51dGVzIGFuZCB0aGVuIHN0aWNrIG15IGRpY2sgaW4uIEknbSBwdXR0aW5nIHVwIHdoYXQgaXMgaG9uZXN0bHkgbXkgd29yc3QgcGVyZm9ybWFuY2UgZXZlciBidXQgd2hvIGNhcmVzIEknbSBqdXN0IGdvaW5nIHdpdGggaXQuIFVudGlsIEkgZmFsbCBhc2xlZXAuIApUaGUgaGFuZHkgdGhyZWFkIHByb3ZpZGVkIGJlbG93LCBwbGVhc2UgbWFrZSBzdWdnZXN0aW9ucyBmb3IgbGlzdHMgb2YgJzQyLicgdGhhdCB5b3Ugd291bGQgbGlrZSB0byBzZWUuIApUbyBwb2tlciBmYW5zLCBvciB0byB0aG9zZSB3aG8gcmVtZW1iZXIgdGhlIG1vdmllIFJvdW5kZXJzLCBJIHdhcyBhICJncmluZGVyLiIgQSBncmluZGVyIGlzIHJpc2sgYXZlcnNlIGFuZCBnZW5lcmFsbHkgd2FpdHMgZm9yIHN0cm9uZyBjYXJkcywgcmVseWluZyBvbiBoaXMgb3Bwb25lbnRzIHRvIG1ha2UgdGhhdCBhc3N1bXB0aW9uLiBNeSBzdHJhdGVneSB3YXMgdG8gYmUgY2FsY3VsYXRpbmcsIHRvIHBsYXkgdGhlIGVuZHVyYW5jZSBhbmQgcG9zaXRpb24gZ2FtZSB0byBvdXRsYXN0IG15IG9wcG9uZW50cy4gQnV0IEkgbmV2ZXIgbGVhcm5lZCBob3cgdG8gbG9zZSB3ZWxsLiAKWW91IGJhc2ljYWxseSBnb25uYSBoYXZlIHRvIGVhdCB0aGUgY29zdCBvZiBhIHRob3JvdWdoIGFubnVhbCBpbnNwZWN0aW9uLCBhIGhlYWx0aHkgYW1vdW50IG9mIGNoZWFwL2ZyZWUgdHJvdWJsZXNob290aW5nLCBhbmQgcHJvYmFibHkgY3V0IGEgZ29vZCByYXRlIG9uIHQgZm9yIHJlcGFpcnMgdG8gd2luIHRoaXMgZ3V5IGJhY2sgYW5kIHNob3cgaGltIHRoZXJlIGFyZSBnb29kIHRlY2hzIG91dCB0aGVyZSBhbmQgdGhhdCBvbmx5IGlmIHlvdSBjb21wYW55IGlzIG9uIGJvYXJkIHdpdGggaXQgdG8ga2VlcCB0aGUgYWNjb3VudC4gSSBrbm93IGhvdyBpdCBpcywgaXQgc3Vja3MgY2xlYW5pbmcgdXAgYWZ0ZXIgc29tZW9uZSBlbHNlLiBJIHJlbGF0aXZlbHkgbmV3IHRvIHRoZSBpbmR1c3RyeSwgSSBqdXN0IHNoeSBvZiBteSBmaXJzdCB5ZWFyIGJ1dCBJIGZlZWwgZm9ydHVuYXRlIHRvIGhhdmUgZmFsbGVuIGluIHdpdGggYSBnb29kIG91dGZpdCwgd2Ugd291bGRuIGhhdmUgbGV0IEZDV3Mgc2hpdCBmbHkgYXQgYWxsLgpObyBuZWVkIHRvIGxhYmVsIHNvY2lldHkgYmVjYXVzZSBzb21lIHBlb3BsZSBzYXkgdGhpbmdzIGxpa2UgdGhhdC4gVG8gbWFrZSBsaWdodCBmb3Igc2luZ2xlIG1vdGhlcnMsIElmIG15IHRheCBtb25leSBnb2VzIHRvIHN1cHBvcnQgeW91IGFuZCB5b3VyIGJhYnkgdGhhdHMgZ3JlYXQhIFdlIHNob3VsZCBiZSBzdGFuZGluZyB1cCBmb3IgZWFjaCBvdGhlciB3aGVuIG5vIG9uZSBlbHNlIHdpbGwuIApPbmxpbmUgcG9rZXIgaXMgdGhlIG1vc3QgY29udmVuaWVudCB3YXkgdG9wbGF5IHBva2VyIGF0IHRoZSBjb21mb3J0IG9mIHlvdXIgb3duIGhvbWUuIApPcGlhdGVzIHNsb3cgZG93biB0aGUgR0kgdHJhY3QgZXZlbiBtb3JlIHdoaWNoIGlzIGNvdW50ZXIgcHJvZHVjdGl2ZSB3aXRoIEdQIGFuZCB0ZW5kIHRvIGNhdXNlIG5hdXNlYSBldmVuIGluIHBlb3BsZSB3aXRob3V0IEdJIGRpc29yZGVycy4gCjQuIENvbnN0aXBhdGlvbiAgIHJlZHVjZXMgZ3V0IHRyYW5zaXQgdGltZS4gVGhlIGJvd2VscyBzaG91bGQgbW92ZSAxIDIgdGltZXMgcGVyIGRheS4gR2x1dGVuIGNvbW1vbmx5IGNhdXNlcyBnYXN0cm9wYXJlc2lzIGFuZCBjb25zdGlwYXRpb24uIFRvIGVmZmVjdGl2ZWx5IHJlbW92ZSBnbHV0ZW4gZnJvbSB0aGUgYm9keSwgb25lIG5lZWRzIHRvIHByb21vdGUgYSBoZWFsdGh5IGJvd2VsIG1vdmVtZW50LiBJbmNyZWFzaW5nIGZyZXNoIGZydWl0IGFuZCB2ZWdldGFibGUgaXMgdGhlIG1vc3QgZWZmZWN0aXZlIHdheSB0byBkbyB0aGlzLgpTVC4gU2VuLiBTYXJhaCBQYWxpbiBvbiBkYXkgZm91ciBvZiB0aGUgUmVwdWJsaWNhbiBOYXRpb25hbCBDb252ZW50aW9uIChSTkMpIGF0IHRoZSBYY2VsIEVuZXJneSBDZW50ZXIgb24gU2VwdGVtYmVyIDQsIDIwMDggaW4gU3QuIFBhdWwsIE1pbm5lc290YS4gU2VuLiBQcmVzaWRlbnQgVGh1cnNkYXkgbmlnaHQuIEpvaG4gTWNDYWluIChSIEFaKShSKSBzaGFyZSBhIGxhdWdoIHdoaWxlIHBhcnRpY2lwYXRpbmcgaW4gYSBuZXdzIGNvbmZlcmVuY2Ugd2l0aCBwZXJzb25zIHdpdGggZGlzYWJpbGl0aWVzIG9uIENhcGl0b2wgSGlsbCwgRGVjZW1iZXIgMywgMjAxMiBpbiBXYXNoaW5ndG9uLCBEQy4gCldoZW4gS2F0ZSBpcyA2NSwgdGhleSBjb3VsZCBhZGQgJDE2LDMwNSBjb21iaW5lZCBDUFAgYmVuZWZpdHMgaW4gdG90YWwgYW5kICQxNCw0NDAgT0FTIGJlbmVmaXRzLiBUaGVpciBpbmNvbWUgYmVmb3JlIHRheCB3b3VsZCByaXNlIHRvICQ5OSw1MDAuIFdpdGggc3BsaXRzIG9mIGVsaWdpYmxlIHBlbnNpb24gaW5jb21lIGFuZCBhZnRlciAxNSBwZXIgY2VudCB0YXggb24gYWxsIGluY29tZSBvdGhlciB0aGFuIHVudGF4ZWQgVEZTQSBwYXlvdXRzLCB0aGV5IHdvdWxkIGhhdmUgJDcsMjIwIHBlciBtb250aCB0byBzcGVuZC4gClRyb3kgU3RlY2hlciBsb3ZlcyBoaXMgZG9nLCBwbGF5aW5nIHdpdGggTGVnbywgcG9rZXIgYW5kIHZpZGVvIGdhbWVzLCBhbmQsIG9mIGNvdXJzZSwgcGxheWluZyBob2NrZXkuCk1vc3QgbWFrZSB0aGVpciBtb25leSBwdXJlbHkgb2ZmIG9mIGJyYW5kIGRlYWxzICh0aGV5IGNhbiBtYWtlIHVwd2FyZHMgb2YgMTAwayBwZXIgcG9zdCBwcm9tb3Rpbmcgd2hhdGV2ZXIgRml0IFRlYSBvciBndW1teSBiZWFyIGhhaXIgdml0YW1pbiwgZXRjKS5JdHMgYW4gaW50ZXJlc3RpbmcgdGhpbmcgYXMgdGhleSBkb24ndCBoYXZlIHRvIG9mZmVyIHRoZW1zZWx2ZXMsIHRoZSBvZmZlcnMgY29tZSB0byB0aGVtLiBJJ20gYW4gYXZlcmFnZSBsb29raW5nIGdpcmwgd2l0aCAxLjRrIGZvbGxvd2Vycywgc28gdmVyeSBsaXR0bGUgaW4gdGVybXMgb2YgSUcgImZhbWUiLCBJJ20gYSBub2JvZHksIGJ1dCBzdGlsbCBJJ3ZlIGhhZCBndXlzIHN0dW1ibGUgdXBvbiBteSBwYWdlIG9mZmVyIG1vbmV5IGZvciBzZXguIApCdXQgaXQgbGFja3MgdGhlIHN0cm9uZyBwc3ljaG9sb2dpY2FsIHJld2FyZHMgZmFjdG9ycyB0aGF0IGtlZXAgcGVvcGxlIGNvbWluZyBiYWNrLiAKSSB3aXNoIEkga25ldyB3aG8geW91IGFyZS4gQ3VyaW9zaXR5IGlzIGtpbGxpbmcgbWUuIApBY2NvcmRpbmcgdG8gYSAyMDA3IHN0dWR5IHB1Ymxpc2hlZCBpbiB0aGUgQnJpdGlzaCBKb3VybmFsIG9mIFBzeWNob2xvZ3ksIHRoZXJlJ3MgYSBsaW5rIGJldHdlZW4gdGhlIHJhdGlvIG9mIHRoZSBsZW5ndGggb2YgYSBwZXJzb24ncyBpbmRleCB0byByaW5nIGZpbmdlciBhbmQgdGhlaXIgcGVyZm9ybWFuY2Ugb24gdGhlIFNBVCBleGFtLiAKRGVjaWRlIG9uIHRoZSBiYWJ5IGdpZnRzIHlvdSB3YW50IHRvIGluY2x1ZGUgaW4gdGhlIGdpZnQgYmFza2V0LiBUaGVyZSBhcmUgYSBsb3Qgb2YgdGhpbmdzIHlvdSBjYW4gaW5jbHVkZSBpbiB0aGUgYmFza2V0LiAKTG9ycyBkZSBzb24gaW50ZXJ2ZW50aW9uIHRsdmlzdWVsbGUgY2UgamV1ZGkgMjQgYXZyaWwgMjAwOCwgbGUgUHJzaWRlbnQgZGUgbGEgUnB1YmxpcXVlIEZyYW5haXNlIE5pY29sYXMgU0FSS09aWSBlc3QgaW50ZXJ2ZW51IHN1ciBsYSBxdWVzdGlvbiBkZSBsJ2VudHJlIGRlIGxhIFR1cnF1aWUgZGFucyBsJ1VuaW9uIGV1cm9wZW5uZS4gClllYWgsIGl0IHByb2JhYmx5IHRoZW9yZXRpY2FsbHkgYSBmaW5lIGxpbmUgdG8gZW5kIHVwIGhlcmUgd2l0aCA0YzVjLCBidXQgaXQgc3Vja3MgdG8gcGxheS4gV2hlbiBVVEcgaXMgYSBjb21wZXRlbnQgcGxheWVyIGFuZCB0YWtlcyBhIGxpbmUgbGlrZSB0aGF0LCB5b3UgbG9va2luZyBhdCBhIG51dHRlZCByYW5nZS4gWW91IGxlYWQgaW50byB0aGUgcHJldmlvdXMgcm91bmRzIGFnZ3Jlc3NvciB3aG8gaXMgc3RpbGwgbGVmdCB0byBhY3QsIHNvIFVURyBjYWxsaW5nIHlvdXIgbGVhZCB3aXRoIGFuIG92ZXJwYWlyIHdvdWxkIGJlIHN1aWNpZGUuIApGaXJzdCB0aW1lIHRoYXQgd2FzIG1lbnRpb25lZCAobm90IG9mZmVyZWQpIHRvIG1lIGFzIHNvbWV0aGluZyBJIHdvdWxkIGVuam95IGJ5IGFuIFNPIEkgd2FzIHByZXR0eSBpbnN1bHRlZCBob25lc3RseS4gCkJ1dCBpcyBpdCBnb29kIGVub3VnaCBmb3IgRkJJL0NJQS9ldGM/IFdobyBrbm93cy4gRGViYXRhYmxlLCBqdXN0IGJlY2F1c2UgSmlnc2F3IGlzIHVuZGVyIEdvb2dsZSwgZG9lc24gbWVhbiBTaGFkb3dzb2NrcyBpcyByb2d1ZSBhZ2VudCwgZG9lc24gbWVhbiBPdXRsaW5lIGlzIG1vbml0b3JpbmcgeW91IHNlY3JldGx5Li4gCkJhdGh1cnN0IFJTTCBmb2N1c2VzIG9uIGZvb2QKVGhlIG1vc3QgcGFpZCBjYW52YXNzZXJzIHdlcmUgcmVwb3J0ZWQgYnkgdGhlIGdyb3VwIGJlaGluZCBhIHByb3Bvc2FsIHRvIGltcG9zZSBzdHJpY3RlciB0ZXJtIGxpbWl0cyBmb3Igc3RhdGUgbGVnaXNsYXRvcnMuIFN1cHBvcnRlcnMgb2YgdGhhdCBtZWFzdXJlIGhhdmUgcmVnaXN0ZXJlZCBtb3JlIHRoYW4gMjAwIHdvcmtlcnMgdG8gY2lyY3VsYXRlIHBldGl0aW9ucyBmb3IgdGhlIHByb3Bvc2FsLCB3aGljaCB3b3VsZCBsaW1pdCBBcmthbnNhcyBsYXdtYWtlcnMgdG8gdHdvIGZvdXIgeWVhciB0ZXJtcyBpbiB0aGUgU2VuYXRlIGFuZCB0aHJlZSB0d28geWVhciB0ZXJtcyBpbiB0aGUgSG91c2Ugd2l0aCBhIHRvdGFsIGNhcCBvZiAxMCB5ZWFycyBpbiBvZmZpY2UuLiAKQW5kIEkgY2FudCBtYWtlIHlvdSBoYXBweS4gCk5ndXllbiBhY2NlcHRlZC4gCk90aGVyIGNlbGVicml0aWVzIGVzY2hldyBIb2xseXdvb2QncyBnbGFyZSBjb21wbGV0ZWx5IGR1cmluZyB0aW1lcyBvZiBjcmlzaXMuIFN5bHZlc3RlciBTdGFsbG9uZSBza2lwcGVkIHNvbWUgcHJvbW90aW9ucyBmb3IgaGlzIGxhdGVzdCBmaWxtLCAiVGhlIEV4cGVuZGFibGVzIDIsIiBhZnRlciBoaXMgc29uJ3MgdW5leHBlY3RlZCBkZWF0aCBsYXN0IG1vbnRoLiBTdGFsbG9uZSBhdHRlbmRlZCB0aGUgZmlsbSdzIFBhcmlzIHByZW1pZXJlIGxhc3Qgd2VlayBhbmQgIkdvb2QgTW9ybmluZyBBbWVyaWNhIiBpcyBzY2hlZHVsZWQgdG8gYWlyIGEgdGFwZWQgaW50ZXJ2aWV3IHdpdGggaGltIG9uIFR1ZXNkYXkuIERlbWkgTW9vcmUgYWxzbyBhdm9pZGVkIGludGVydmlld3MgYWJvdXQgaGVyIGRpcmVjdG9yaWFsIGNvbnRyaWJ1dGlvbnMgdG8gIkZpdmUiIHdoZW4gcnVtb3VycyBzaW1tZXJlZCBhYm91dCB0aGVuIGh1c2JhbmQgQXNodG9uIEt1dGNoZXIncyBpbmZpZGVsaXR5LgoiQW56YWMgRGF5IGlzIHNvIG11Y2ggYmlnZ2VyIHRoYW4gcG9rZXIgbWFjaGluZXMuIEl0IGlzIGEgY29tbWVtb3JhdGlvbiBvZiB0aG9zZSBwZW9wbGUgd2hvIGdhdmUgdGhlaXIgbGl2ZXMuIiBSU0wgc3RhdGUgcHJlc2lkZW50IFRlcnJ5IFJvZSBkaXN0YW5jZWQgaGltc2VsZiBmcm9tIE1yIENoaXZlcnMgY29tbWVudHMgYW5kIGRlc2NyaWJlZCB0aGVtIGFzICJkaXNhcHBvaW50aW5nIi4gIkFuemFjIERheSBzZXJ2aWNlcyB3aWxsIGNvbnRpbnVlIG9uIGRlc3BpdGUgdGhlIG91dGNvbWUgb2YgdGhlIGVsZWN0aW9uLCIgaGUgc2FpZC4gCjEuIApZYW5pIGthZGluIGRlbWl5b3JraSBiYXlyYWsgQml6YW5zIGdlbG1pc3RpciBkaXllLiBUZWsgc295bGVkaWdpIGJ1IGJheXJhZ2luIElzbGFtY2lsYXIgdGFyYWZpbmRhbiBhZG9wdCBlZGlsbWVzaXlsZSBCaXphbnMga3VsbGFuaW1pIGF5bmkgdGFyaWhsZXJlIGdlbGl5b3IgZGl5b3IuCkRlYmF0ZSBvdmVyLi4gClRoZSBNYXlvbm5haXNlIEphciBhbmQgVHdvIEN1cHMgb2YgQ29mZmVlCkkgbmV2ZXIgcXVlc3Rpb25lZCB3aHkgSSB3YW50ZWQgYSBkYXVnaHRlciBzbyBtdWNoLiBTaGUgd2FzIGEgcmVhbCBwZXJzb24gdG8gbWUuIEkgd291bGQgd2lsbCBoZXIgaW50byBleGlzdGVuY2UuLiAKRmVkZXJhbCBwcm9zZWN1dG9ycyBhcmUgZXhhbWluaW5nIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2FtcGFpZ24gZG9uYXRpb25zIHRoYXQgaGF2ZSBtYWRlIHRoZSB1bmlvbiBhIHBvbGl0aWNhbCBwb3dlcmhvdXNlIGFuZCBEb3VnaGVydHkgYSBraW5nbWFrZXIsIHRvIHRoZSB1bmlvbidzIHR1cmJ1bGVudCBhbmQgc29tZXRpbWVzIHZpb2xlbnQgcmVsYXRpb25zaGlwIHdpdGggbm9udW5pb24gY29udHJhY3RvcnMuIFRoZXkgYWxzbyBhcmUgZXhwbG9yaW5nIHRoZSB1bmlvbidzIGRlYWxpbmdzIHdpdGh0aGUgS2VubmV5IGFkbWluaXN0cmF0aW9uLgpFdmVyeXRoaW5nIGVsc2UgcmFpc2VkIGluIHRoZSBKdW5lIDIwMTcgaXMgbGF1Z2hhYmxlOiB0aGF0IGZhaWx1cmUgdG8gdGFrZSBhIGdhcyBndWFnZSByZWFkaW5nIHdhcyBhICJCcmFkeSB2aW9sYXRpb24sIiB0aGF0IGEgbWlzc2luZyB2b2ljZW1haWwgd291bGQgc29tZWhvdyBoYXZlIHByb3ZlbiBUZXJlc2Egd2VudCB0byB0aGUgWmlwcGVyZXIgaG91c2UgbGFzdCwgZGVzcGl0ZSB0aGUgWmlwcGVyZXIgdGVzdGltb255IGFuZCB0aGUgYWJzZW5jZSBvZiBhbnkgc3VwcG9ydGluZyBldmlkZW5jZSBmb3IgdGhlIGNsYWltLiBUaGUgbW90aW9uIGlzIG5vdCBldmVuIGNvbnNpc3RlbnQsIGNsYWltaW5nIGluIHNvbWUgcGxhY2VzIHRoYXQgQ29sYm9ybiBwbGFudGVkIHRoZSBjYXIgb24gdGhlIDNyZCBhbmQgaW4gb3RoZXIgcGxhY2VzIHRoYXQgaXQgd2FzIHRoZSA0dGgsIHdpdGggbm8gZXZpZGVuY2Ugb2YgZWl0aGVyLgpYIG9mIGEgS2luZCBwcm9ibGVtcyBhcmUgc2VsZiBleHBsYW5hdG9yeSAgIGlmIHlvdSBoYXZlIFggb2YgYSBraW5kLCB0aGVuIHlvdSBoYXZlIFggY2FyZHMgb2YgdGhlIHNhbWUga2luZCBvbiB5b3VyIGhhbmQuIFRoZXJlIGFyZSB1c3VhbGx5IHR3byBvZiB0aGVzZTogdGhyZWUgb2YgYSBraW5kIGFuZCBmb3VyIG9mIGEga2luZC4gTm90ZSB0aGF0IHRoZSByZW1haW5pbmcgY2FyZHMgY2Fubm5vdCBiZSBvZiB0aGUgc2FtZSBraW5kIGFzIHRoZSBYIGNhcmRzIG9mIGEga2luZC4gRm9yIGV4YW1wbGUsIDQgNCA0IDUgNCBpcyBub3QgY29uc2lkZXJlZCB0aHJlZSBvZiBhIGtpbmQgYmVjYXVzZSB0aGUgbGFzdCBjYXJkIGlzIG5vdCBhIHRocmVlIG9mIGEga2luZCBiZWNhdXNlIG9mIHRoZSBsYXN0IGNhcmQuIEl0IGlzLCBob3dldmVyLCBhIGZvdXIgb2YgYSBraW5kLgpNaWtlIE1hZGlzb24gaXMgYW5vdGhlciBvZiB0aGUgcG9rZXIgc3RhcnMsIGFsc28gYSB3aW5uZXIgYnV0IGFsc28gYSB2ZXJ5IHZvY2FsIHBsYXllci4gIk1pa2UgdGhlIE1vdXRoLCIgYXMgaGUga25vd24gb24gdGhlIHByb2Zlc3Npb25hbCBjaXJjdWl0LCBvZnRlbiBzcG91dHMgb2ZmIHRvIG90aGVyIHBsYXllcnMgYXQgdGhlIHRhYmxlLiBCb3RoIE1hZGlzb24gYW5kIEhlbG11dGggYXJlIG9mdGVuIGNoYXN0aXNlZCBib3RoIGJ5IG9mZmljaWFscyBhbmQgYnkgZmFucyBmb3IgdGhlaXIgYmVoYXZpb3IuLiAKSWYgd2UgYXJlIHBsYXlpbmcgUm9jayBQYXBlciBTY2lzc29ycyBhbmQgeW91IG9ubHkgdXNlIHJvY2ssIEkgd291bGQgdGhlbiBhZGp1c3QgYnkgb25seSB0aHJvd2luZyBwYXBlci4gCkh1cnJpY2FuZSBQcmVwIEZvciBDb25kbyBSZXNpZGVudHMgSGlnaCByaXNlIGxpdmluZyBjYW4gaGF2ZSBpdHMgZG93biBzaWRlIHdoZW4gYSBodXJyaWNhbmUgc3RyaWtlcy4gSGVyZSB3aGF0IHlvdSBuZWVkIHRvIGtub3cuCldoZW4gSSB3YXMgaW4gaGlnaCBzY2hvb2wsIEkgd29ya2VkIGFzIGEgYnVzYm95IGF0IGEgbG9jYWwgc3RlYWtob3VzZS9kaXZlIGJhci4gVGhlIG93bmVyIHdhcyBhbiBleCBtYXJpbmUgZHJpbGwgc2VyZ2VhbnQgYW5kIHdhcyBoYXBweSB0byBhc2sgZm9sa3Mgd2hvIGhlIHRob3VnaHQgd291bGQgZGluZSBhbmQgZGFzaCBvciBkcmluayBhbmQgZGFzaCwgdG8gcGF5IGZpcnN0LgpDZSBsaXZyZSBlc3QgZG9uYyBjb25zYWNyICBsYSBjdWlzaW5lIHZndGFsZSwgY2VsbGUgZGVzIGxndW1lcywgZGVzIGZydWl0cywgZGVzIGNyYWxlcywgZGVzIG9sYWdpbmV1eCwgZGVzIGxndW1lcyBzZWNzLCAuIApUaGVyZSBpcyBhIGRpcmVjdCBjb3JyZWxhdGlvbiBiZXR3ZWVuIHRoZSBXaGl0ZSBIb3VzZSBhbmQgdGhlIHBlb3BsZSB3aG8gYXJlIGJlbmVmaXRpbmcgZnJvbSBkZXRlbnRpb24gYmVkcyB0aGF0IGFyZSBwcm9maXRpemVkLiAKQWxsIEkgY2FuIHNheSBpcywgaWYgeW91IGhhdmUgaW50ZXJuZXQsIHRoZW4gc3Vic2NyaWJlIHRvIEhCTyBHbyBhbmQgc3RyZWFtIGl0LiAoSWYgeW91IGhhdmUgQXQgY2VsbCBwaG9uZXMgaXQgd2lsbCBhbHNvIHN0cmVhbSBkYXRhIGZyZWUpLiBCb3JuIGluIDE5MDIuIAoiV2UgdG9vayB0aGUgd2hvbGUgZmxvb3IsIG5vdCBvbmx5IHRoZSB0aWxlLCBidXQgd2UgdG9vayB0aGUgZW50aXJlIGZsb29yLiAiIERldGVjdGl2ZSBOb3J0b24gYmVsaWV2ZXMgdGhlIGJsb29keSBmb290cHJpbnRzIHdlcmUgaW50ZW50aW9uYWxseSBtYWRlIHRoZSBuaWdodCBvZiBNYXJjaCA3LCAyMDA4LCBhcyBwYXJ0IG9mIGEgc3RhZ2VkIGNyaW1lIHNjZW5lLiAiVGhlc2UgZm9vdHByaW50cyB3ZXJlIG1hZGUgICBtYXliZSBzbG93IGFuZCBtZXRob2RpY2FsbHkgICB3aGVyZSB0aGUgc3VzcGVjdCB3YW50ZWQgdXMgdG8ga25vdyB3aGF0IGtpbmQgb2Ygc2hvZSBtYWRlIHRoaXMgYW5kIGhvdyBiaWcgdGhlIHNob2Ugc2l6ZSB3YXMsICIgaGUgZXhwbGFpbmVkLiAKSG93IGRvZXMgdGhpcyBraW5kIG9mIG1lc3NhZ2luZyBoZWxwIGFueWJvZHk/IEFsbCBpdCBkb2VzIGlzIG1ha2UgdGhlIGZldyB3aG8gYXJlbiBzdWZmZXJpbmcgZmVlbCBiZXR0ZXIgYWJvdXQgdGhlbXNlbHZlcy4KUGVuZGFudCBsZXMgdmFjYW5jZXMsIGlsIGRpZmZ1c2UgZGVzIHJlZGlmZnVzaW9ucyBkJ21pc3Npb24uIEonYWkgcmVnYXJkIHVuZSBtaXNzaW9uICJFbiBpbW1lcnNpb24gdG90YWxlIGF1IGNvbW1pc3NhcmlhdCBkZSBSb3ViYWl4IiBkaWZmdXNlIHBhciBGcmFuY2UgMi4gVW5lIGZlbW1lIHZlbmFpdCBzZSBwbGFpbmRyZSBxdWUgc2EgZmlsbGUgZGUgMTYgMTcgYW5zIGZycXVlbnRlIHVuIGdhcm9uIG1hamV1ciBkZSBwbHVzIGRlIDIwIGFucy4gQ2VsdWkgY2kgZXN0IGRqIHBhcGEuIExhIG1yZSBkZSBsYSBqZXVuZSBmaWxsZSBhIHBldXIgcXVlIHNhIGZpbGxlIHNlIHJldHJvdXZlIGVuY2VpbnRlLiAKQmV0dGVyIHRvIHBsYW4gZm9yIGEgbG9uZyBwYWRkbGUgdGhhbiB0byBnZXQgZGlzY291cmFnZWQgd2hlbiB5b3UgYXJlIG91dCBsb25nZXIgdGhhbiB5b3UgdGhvdWdodCB5b3Ugd291bGQgYmUuLiAKSWYgaXQgbWFrZXMgeW91IGZlZWwgYmV0dGVyLCBteSAxNyB5ZWFyIG9sZCBkYXVnaHRlciBoYWQgdG8gY2hlY2sgb24gYSBzbWFsbCBob3VzZSB0aGF0IHdlIHJlbnQgb3V0IHRoYXQncyBjdXJyZW50bHkgZW1wdHkuIEl0J3MgYmVlbiAgNDAgYW5kIGhlciBkYWQgZ29lcyBvdXQgb2YgdG93biBmcmVxdWVudGx5IGZvciBhIHdlZWsgYXQgYSB0aW1lLiAKWW91IGRlY2lkZSBob3cgbXVjaCB5b3Ugd2FudCB0byBwdXQgaW4geW91ciBhY2NvdW50IGFuZCB0aGV5IGNoYXJnZSB0aGF0IGFtb3VudCB0byB5b3VyIGNhcmQuIFRoZSBhbW91bnQgZ29lcyBpbnRvIHlvdXIga2l2YSBhY2NvdW50IGFuZCB5b3UgY2FuIHNwbGl0IGl0IHVwIHRvIGFzIG1hbnkgbG9hbnMgYXMgeW91IHdhbnQgdG8gd2hvZXZlciB5b3Ugd2FudC4gSSB0aGluayB0aGUgbWluaW11bSBmb3IgZWFjaCBsb2FuIGlzIGEgZmV3IGJ1Y2tzLCBidXQgSSBhbSBub3Qgc3VyZSBvbiB0aGUgZXhhY3QgYW1vdW50LllvdSBjYW4gYWx3YXlzIHRyeSBhIHRlc3QgYW1vdW50IGp1c3QgdG8gc2VlIGhvdyBpdCB3b3Jrcy4gClRoZSBFYXJ0aCBmbGVldCBjb21tYW5kZXIgbWlzaW50ZXJwcmV0ZWQgdGhlIE1pbmJhcmkgd2FycmlvciBjYXN0ZSB0cmFkaXRpb24gb2YgYXBwcm9hY2hpbmcgYSBzaGlwIHdpdGggZ3VuIHBvcnRzIG9wZW4gYXMgYSBob3N0aWxlIGFjdGlvbiBhbmQgZmlyZWQgb24gdGhlIE1pbmJhcmkgdmVzc2Vscy4gSW4gcmV0YWxpYXRpb24gZm9yIHRoaXMgaW5jaWRlbnQsIHRoZSBNaW5iYXJpIHdlbnQgb24gYSBnZW5vY2lkYWwgY3J1c2FkZSBhZ2FpbnN0IEVhcnRoIGFuZCBhbGwgaHVtYW5zLiBUaGUgd2FyIGJlZ2FuIGluIDIyNDUgd2hlbiBhbiBFYXJ0aEZvcmNlIChFYXJ0aCBtaWxpdGFyeSBmb3JjZSkgZXhwZWRpdGlvbmFyeSBmbGVldCBkYW1hZ2VkIGFuZCBkZXN0cm95ZWQgdmVzc2VscyBvZiB0aGUgTWluYmFyaSBGZWRlcmF0aW9uIGZsZWV0LCBraWxsaW5nIER1a2hhdCAobGVhZGVyIG9mIHRoZSBNaW5iYXJpIEdyZXkgQ291bmNpbCkuCkJ1dCB3aHkgd2F0Y2ggaWYgeW91IGp1c3QgaG9waW5nIGZvciBhIGxvc3MgZXZlcnkgbmlnaHQ/IEJlY2F1c2UgYXQgdGhpcyBwb2ludCwgaXQgdW5saWtlbHkgd2UgZ2V0IEtha2tvIG9yIEh1Z2hlcywgYW5kIGFueW9uZSBlbHNlIHdvdWxkbiBwcm92aWRlIGltbWVkaWF0ZSBoZWxwIHRvIHRoaXMgY2x1YiBuZXh0IHllYXIgYW55d2F5Li4gClJ1c3NpYSBpcyB0aGUgbmloaWxpc3RpYyBlZGdlbG9yZCBhdGhlaXN0IGtpZCB3aG8gbG92ZXMgaGFja2luZyBhbmQgaGF0ZXMgdGhlIHBvcHVsYXIga2lkcy4gSnVzdGlmaWVzIGJlaW5nIGEgamVyayBiZWNhdXNlICJldmVyeW9uZSBhdCB0aGlzIHNjaG9vbCBsb29rcyBvdXQgZm9yIHRoZW1zZWx2ZXMgYW5kIGFyZSBqdWRnbWVudGFsIHByaWNrcy4iCkZvcnR1bmF0ZWx5LCBpdCBlYXN5IGZvciBhIGtub3dsZWRnZWFibGUgcGxheWVyIGxpa2UgbWUgdG8gZGVmZW5kIGFnYWluc3QuIApTZXJpb3VzbHkgUHZQIGlzIHJlbGlhYmxlIGF0IGdldHRpbmcgdGhlc2UgaWYgeW91IGFyZSBzb2xvLiAKYmVhdXR5IHRvIHlvdSBtb2JpbGUgYmVhdXR5IGlvdwpXaXRoIGFsbCB0aGUgY3JpbWVzIHRoYXQgVHJ1bXAgY29tbWl0dGVkLCBoZSBzdGlsbCBoYXMgYW4gYXBwcm92YWwgcmF0aW5nIG92ZXIgNDAlLiAKTGF3IGVuZm9yY2VtZW50IGhhc24ndCBhbHdheXMgYWdyZWVkIHdpdGggdGhlIGxlZ2FsaXR5IG9mIHRoZSBzd2VlcHN0YWtlcy4gCkFuZCBzaGUgaGFkIG5vIGNyaW1pbmFsIGhpc3RvcnkuCldoZW4gdGhlIGNhbGNpdW0gc3RvcmUgaXMgZGVwbGV0ZWQsIGJ5IGJyaWVmIGV4cG9zdXJlIHRvIHJvY2sgY29uY2VydCBsZXZlbCBzb3VuZHMgb3IgYnkgdGhlIGludHJvZHVjdGlvbiBvZiBjYWxjaXVtIGNoZWxhdG9ycywgdGhlIHNvdW5kIGV2b2tlZCByZXNwb25zZXMgb2YgdGhlIHNlbnNvcnkgY2VsbHMgZGVjcmVhc2UuIFVwb24gcmVzdG9yYXRpb24gb2YgdGVjdG9yaWFsIG1lbWJyYW5lIGNhbGNpdW0sIHNlbnNvcnkgY2VsbCBmdW5jdGlvbiByZXR1cm5zLiBUaGlzIHByZXZpb3VzbHkgdW5rbm93biBtZWNoYW5pc20gY29udHJpYnV0ZXMgdG8gZXhwbGFpbmluZyB0aGUgdGVtcG9yYXJ5IG51bWJuZXNzIGluIHRoZSBlYXIgdGhhdCBmb2xsb3dzIGZyb20gbGlzdGVuaW5nIHRvIHNvdW5kcyB0aGF0IGFyZSB0b28gbG91ZCwgYSBwaGVub21lbm9uIHRoYXQgbW9zdCBwZW9wbGUgZXhwZXJpZW5jZSBhdCBzb21lIHBvaW50IGluIHRoZWlyIGxpdmVzLldoZW4gc291bmQgc3RpbXVsYXRlcyB0aGUgc3RlcmVvY2lsaWEgb24gdGhlIHNlbnNvcnkgY2VsbHMgaW4gdGhlIGhlYXJpbmcgb3JnYW4sIENhMisgaW9ucyBmbG93IHRocm91Z2ggbWVjaGFuaWNhbGx5IGdhdGVkIGlvbiBjaGFubmVscy4gCiJJIHRoaW5rIGV2ZXJ5Ym9keSBpcyBwcmV0dHkgc2hvY2tlZCwiIHNhaWQgSGFycmlzb24uCkR3YXluZSBWYW5jZSBpcyBhIGNvbHVtbmlzdCBjb3ZlcmluZyB0aGUgVXRhaCBVdGVzLiBUaGUgb3BpbmlvbnMgZXhwcmVzc2VkIGFyZSBub3QgbmVjZXNzYXJpbHkgdGhvc2Ugb2YgU3QuIEdlb3JnZSBOZXdzLiAKSGUgYmVsaWV2ZWQgUGFraXN0YW4gaGFkIG9ic2VydmVkIHN0cmljdCBuZXV0cmFsaXR5IG9uIFN5cmlhIGFuZCBkZW1hbmRpbmcgYSB0cmFuc2l0aW9uYWwgZ292ZXJuaW5nIGJvZHkgd2FzIHRhbnRhbW91bnQgdG8gaW50ZXJmZXJpbmcgaW4gdGhlIGludGVybmFsIGFmZmFpcnMgb2YgYSBjb3VudHJ5LiAKVGhlIG1lYXN1cmVzIFZpYydzIGZhbmJhc2UgaGF2ZSB0YWtlbiB0byBkZWZlbmQgaGltIGlzIHNvIGJhZmZsaW5nLiBTYXlpbmcgdGhhdCB0aGVyZSdzIHNvbWUgU0pXIGNvbnNwaXJhY3kgYWdhaW5zdCBoaW0gYmVjYXVzZSBvZiBoaW0gYmVpbmcgYSB3aGl0ZSBDaHJpc3RpYW4gbWFuOyB0aGF0IG1vc3Qgb2YgdGhlIGFjY3VzYXRpb25zIGFnYWluc3QgaGltIGFyZSBsaWVzIChkZXNwaXRlIGV2aWRlbmNlIGFuZCB0ZXN0aW1vbnkpOyBhbmQgZG93bnBsYXlpbmcgaGlzIGFjdGlvbnMgYXMgImp1c3QgaHVncyIuIApBZ3JlZSBpdCBhIGNob2ljZSBpZiB5b3Ugd2F0Y2ggaGlzIHN0cmVhbS4gRm9yIHJlZmVyZW5jZSwgSSBkb24gd2FudCBhbnkgdHdpdGNoIHBva2VyLCBidXQgd2lsbCB3YXRjaCBjbGlwcyBvbiAvci9wb2tlciB0byBzZWUgd2hhdCBhIHRocmVhZCBpcyBhYm91dC4gCk5vdCBkaXNhZ3JlZWluZyBidXQgdGhlcmUgYWxzbyB0aGUgaXNzdWUgdGhhdCB0aGUgZHJ1Z3Mgd2Ugc2VlaW5nIGFyZSBjb21pbmcgZnJvbSB1bmRlciB0cmFjZWFibGUgc291cmNlcy4gVGhlIERFQSBob25lc3RseSBwcm9iYWJseSBpc24gd29ycmllZCBhYm91dCBNSiBhbnltb3JlIGFuZCBoYXZlIGFuIGhvbmVzdCBjb25jZXJuIGFib3V0IGZlbnR5bmFsIGNvbWluZyBpbi4gVGhhdCBzaGl0IGlzIGdldHRpbmcgbGVnaXRpbWF0ZWx5IHNlcmlvdXMuIApJIGRvIGFwcHJlY2lhdGUgdGhhdCB5b3UgYXR0ZW1wdGVkIHRvIHVuZGVyc3RhbmQgbWUuIEl0IHNlZW1zIHRoYXQgaXQgZGlkIHlvdSBubyBnb29kLiBZb3UgYXJlIG5vIGNsb3NlciB0byBhZGRyZXNzaW5nIGFueSBvZiBpbXBvcnQuCldpbGxpYW0gRmlzaGVyLCQxLjk4IGJpbGxpb24uIApBbHNvIGFza2VkIGZvciBzb21lIGRldGFpbHMgb24gcmVzcG9uc2UgdGltZXMuIFRoZSBxdWV1ZSBpcyBjaGVja2VkIGJ5IHRoZSB0ZWFtIGF0IGxlYXN0IHRocmVlIHRpbWVzIGEgZGF5LiBSZW1lbWJlciB0aGF0IHRoaXMgaXMgYSBzbWFsbCB0ZWFtIGFuZCByZXNvdXJjZXMgYXJlIHNwcmVhZCB0aGluLCBzbyBhcyBhIHJlc3BvbnNlIHRpbWUgSSB0aGluayB0aGlzIGlzIGFjdHVhbGx5IHByZXR0eSBnb29kIGZvciBhICJmcmVlIHRvIGFpciIgc2l0ZS4gCldpbGxpbmcgdG8gZmlnaHQgaW5qdXN0aWNlcyBhbmQgbWFrZSBhIG1vcmUgbG92aW5nLCBwZWFjZWZ1bCBwbGFuZXQgdGhhdCBpcyBzYWZlIGFuZCBhYnVuZGFudCBmb3IgYWxsLiAKQnVkZGFrYW4gICBCdWRkYWthbidzIGRyZWFtbGlrZSBhbWJpYW5jZSBtYWtlcyBhbiBlbmNoYW50aW5nIHNldHRpbmcgZm9yIGhvc3Rpbmcgc3BlY2lhbCBldmVudHMuIEEgZ2lnYW50aWMgZ29sZGVuIEJ1ZGRoYSBnYXplcyBvdmVyIHRoZSAyNCBzZWF0IGNvbW11bmFsIHRhYmxlIG1hZGUgb2YgZ2xvd2luZyBhbGFiYXN0ZXIgcmVzaW4uIApCdXQgdGhlIGp1cnkgZGlkbiBidXkgaXQuIFdlIHNhdyBoaW0gc2hvdmluZyBzb210YmpuZyBmcm9tIGhpcyB3YWlzdCB1bmRlciBoaXMgc2VhdCB3aGVuIGhlIHNhdyB1cy4uIAoiT3Igd2lsbCB0aGUgR292ZXJubWVudCBhbGxvdyBhbiBpbmNyZWFzZT8KQW1vbmcgdGhlIGRpc3BsYXlzIGlzIEZsb3cgKHBpY3R1cmVkKSwgYSBsYXJnZSBzY3VscHR1cmUgd2l0aCAyLDAwMCBjb250cm9sbGFibGUgbGlnaHRzIHRoYXQgcmVhY3QgdG8gbXVzaWMuIApXYXlzIFRvIFBpY2sgVGhlIEJlc3QgU2xvdCBNYWNoaW5lcwpUaGF0IGlzIG5vdCB0byBzYXkgS2hhbGlmYSBpcyB1bmRlZmVhdGVkIG9uIHNvY2lhbCBtZWRpYS4gVGhlIDc2ZXJzJyBKb2VsIEVtYmlpZCBoYWQgbm8gcHJvYmxlbSBzdGlja2luZyBpdCB0byBoZXIsIGZhbnMgb2YgdGhlbiBDZWx0aWMgSXNhaWFoIFRob21hcyBzaHV0IGRvd24gaGVyIHRyYXNoIHRhbGsgYW5kIE9rbGFob21hIFFCIEJha2VyIE1heWZpZWxkIGNhc3VhbGx5IGJydXNoZWQgaGVyIGFzaWRlIGJlZm9yZSBibG9ja2luZyBoZXIuCkxlIGNhbXBpbmcgb2ZmcmUgZ2FsZW1lbnQgdW5lIHBhcnRpZSBoZXJiZXVzZSwgZGVzdGluIGUgdW5pcXVlbWVudCBhdXggdGVudGVzLiAKSXQgd2FzIGEgZnVuIHNlc3Npb24gYW5kIEkgY2FuJ3Qgd2FpdCB0byBwbGF5IHdpdGggdGhlc2UgZ3V5cyBhZ2Fpbi4gOiApCkN5bm4ncyBraW5nIG9mIGNsdWJzIGFuZCBqYWNrIG9mIGNsdWJzIHdlcmUgYmV0dGVyIHRoYW4gTWlsZXMnIGhhbmQuIE1pbGVzIHdlbnQgYWxsIGluIHdpdGggdGhlIHF1ZWVuIG9mIGNsdWJzIGFuZCB0aGUgZWlnaHQgb2YgaGVhcnRzLiBUaGUgY29tbXVuaXR5IGNhcmRzIHdlcmUga2luZyBvZiBoZWFydHMsIGtpbmcgb2YgZGlhbW9uZHMsIGZpdmUgb2YgaGVhcnRzLCBlaWdodCBvZiBkaWFtb25kcywgYW5kIGZvdXIgb2Ygc3BhZGVzLgpBIGNvdXBsZSBvZiB3ZWVrcyBJIGhhcHBlbmVkIHRvIGNhdGNoIEdlbmVyYWwgTXVzaGFycmFmIHNwZWFraW5nIHRvIHRoZSBmcm9tIHRoZSBQcmVzaWRlbmN5IGluIElzbGFtYWJhZCB3aGVuIGhlIHdhcyBzcGVha2luZyBhYm91dCBiZW5ldm9sZW50IGRpY3RhdG9yc2hpcHMgYW5kIGhvdyBnb29kIHRoZXkgY2FuIGJlIGZvciBhIGNvdW50cnkgaGUgd2FzIGRvaW5nIHNvIHdpdGggYSBjb21wbGV0ZSBwb2tlciBmYWNlIGFuZCBJIGNvdWxkbiBiZWxpZXZlIHRoYXQgaGlzIGhhbmRsZXJzIGhhZCBub3QgZ2l2ZW4gaGltIGEgc2NyaXB0IG9yIHRhbGtpbmcgcG9pbnRzIGJlZm9yZSB0aGlzIHF1ZXN0aW9uL2Fuc3dlciBzZXNzaW9uLiBEaWN0YXRvcnNoaXBzIGJlbmV2b2xlbnQgb3Igbm90IGFyZSBhIHRoaW5nIG9mIHRoZSBwYXN0IGFuZCBzaG91bGRuIHJlYWxseSBiZSBkaXNjdXNzZWQgaW4gcG9saXRlIGNvbXBhbnkgZXNwZWNpYWxseSBieSBkaWN0YXRvcnMgdGhlbXNlbHZlcy4gT25jZSBJIGdvdCBwYXN0IHRoZSBsZWN0dXJlIG9uIGJlbmV2b2xlbnQgZGljdGF0b3JzaGlwcyBJIGhhZCB0byBzd2l0Y2ggb3ZlciB0byB0aGUgVG9tIEplcnJ5IG1hcmF0aG9uIHdoaWNoIGlzIGZhciBtb3JlIGVudGVydGFpbmluZy4KSSBjYXRhbG9ndWVkIGFsbCBvZiBoaXMgYXBwZWFyYW5jZXMsIGFkZGVkIGRhdGVzIGFuZCBpbmNsdWRlZCBoaXMgV05FVyBhcHBlYXJhbmNlcyBhbmQgc29tZSBvZiB0aGUgb3RoZXJzIHRoYXQgd2VyZSBtaXNzZWQuIEkgcmVtb3ZlZCB0aGUgdHJpYnV0ZSB0byBQYXRyaWNlIGVwaXNvZGVzIGFuZCBhbHNvIGxlbmd0aGVuZWQgc29tZSBvZiB0aGUgb25lcyB3aGVyZSBQYXRyaWNlIHdhcyBsYXRlIHRvIHRoZSBzaG93LiBJdCBkaWRuIG1ha2Ugc2Vuc2UgdG8gY3V0IHRvIHRoZSBwb2ludCBQYXRyaWNlIGFwcGVhcnMgYmVjYXVzZSB0aGV5IG9mdGVuIHJlZmVyZW5jZSB0aGluZ3MgdGhhdCBoYXBwZW5lZCBlYXJsaWVyIGluIHRoZSBzaG93Li4gCldQVDUwMCBMYXMgVmVnYXMsIHdoaWNoIHN0YXJ0cyBmcm9tIEp1bmUgMjYgYXQgdGhlIGx1eHVyaW91cyBBcmlhIFJlc29ydCBhbmQgQ2FzaW5vIGhhcyBhIFVTRCA1NjUgYnV5aW5nIGFuZCBVU0Qgb25lIG1pbGxpb24gYXMgZ3VhcmFudGVlZCBwcml6ZSBwb29sLiA0NTAgU3RlcCBTYXRlbGxpdGUsIHdoaWNoIGlzIHJ1bm5pbmcgZXZlcnkgZGF5IGZyb20gQXByaWwgMTcgdG8gSnVuZSA0LCB3aGVyZWluIHBsYXllcnMgc3RhbmQgYSBjaGFuY2UgdG8gd2luIHRpY2tldHMgdG8gUEtHIFNhdGVsbGl0ZS4KTWFpcyBpbCBuJ2VuIGVzdCBwYXMgZGUgbW1lIHN1ciBsZSBsb25nIHRlcm1lLiBBIHJlZ2FyZGVyIGxlIGNvcnBzIGRlIFRDLCBvbiBuJ2EgcGFzIGVudmllIGRlIHBvdXJzdWl2cmUgIURlIHBsdXMsIGplIHZyaWZpZSB0b3VzIGxlcyBqb3VycyBxdSd1biBjb25zZWlsIGRpdHRpcXVlIG5lIHBldXQgcydhcHBsaXF1ZXIgcXUnIHVuIGluZGl2aWR1IGRvbm4uIEonYXZhaXMgYmVzb2luIGRlIHZpdGFtaW5lIEQgZXQgamUgbCd1dGlsaXNhaXMgYXZlYyBkZSBsJ2h1aWxlIGRlIGNvbHphICh2b3VzIGNvbm5haXNzZXogbGEgbWFycXVlKS4gCkkgYSBsb3QgYmV0dGVyIG5vdyBzaW5jZSB0aGVyYXB5IGFuZCBoYXZlIGEgdG9uIG9mIGNsb3NlIGZyaWVuZHMgYnV0IGl0IGhhcmQgc29tZXRpbWVzIG5lZWRpbmcgdG8gbGVhcm4gdGhhdCB5b3UgaGF2ZSB0byBiZSB2dWxuZXJhYmxlIGlmIHlvdSB3YW50IHBlb3BsZSB0byBiZSB2dWxuZXJhYmxlIHdpdGggeW91IGFuZCB0aGF0IGhvdyBwZW9wbGUgYm9uZC4gSSBzdGlsbCBrZWVwIGEgbG90IG9mIHN0dWZmIGJvdHRsZWQgaW4gdG8gYXZvaWQgYSBwb3RlbnRpYWwgbmVnYXRpdmUgcmVhY3Rpb24gKGFub3RoZXIgdGhpbmcgSSBsZWFybmVkIGZyb20gbXkgbW9tIGF5eSkgYnV0IEkgd29ya2luZyBvbiBpdC4uIApTbyBkaWQgb3VyIGJlc3QgZnJpZW5kcyAgIHRoZXJlIHNvbiBpcyB0aGUgc2FtZSBhZ2UgYXMgb3VyIHNvbi4gCkkgZ2V0IHRoYXQgcmFjaXNtIGlzIGJhZC4gSSBkb24gdGhpbmsgSSByYWNpc3QgYnV0IEkgZG9uIGtub3cgbWFuLiBJIGhhdmUgbm90aGluZyBhZ2FpbnN0IHBlb3BsZSBiYXNlZCBzb2xleSBvbiB0aGUgY29sb3Igb2YgeW91ciBza2luLiBUaGF0IGEgc3R1cGlkIGFzcyB0aGluZyB0byBkaXNjcmltaW5hdGUgYWdhaW5zdC4gSSBkbyBob3dldmVyIGxpa2UgYXNzb2NpYXRpbmcgd2l0aCBwZW9wbGUgdGhhdCBJIGhhdmUgdGhpbmdzIGluIGNvbW1vbiB3aXRoLiBNb3JlIG9mdGVuIHRoYW4gbm90IHRoYXQgb3RoZXIgd2hpdGUgcGVvcGxlLiBJIG5vdCBzYXlpbmcgSSBkaXNsaWtlIEtvcmVhbnMgb3IgTGF0aW5vcyBvciB3aGF0ZXZlciBidXQgZ2l2ZW4gdGhlIG9wcG9ydHVuaXR5IEkgZ29pbmcgdG8gaGFuZ291dCB3aXRoIHBlb3BsZSB3aG8gaGF2ZSB0aGUgc2FtZSBpbnRlcmVzdHMgYW5kIGhvYmJpZXMgYXMgbWUuIFNwZWFrIHRoZSBzYW1lIGxhbmd1YWdlIGFzIG1lLiBIYXZlIHRoZSBzYW1lIGN1bHR1cmUgYXMgbWUuIEkgZG9uIHRoaW5rIHRoYXQgd2VpcmQuIEkgZmVlbCBsaWtlIGl0IGJlZW4gdGhhdCB3YXkgc2luY2UgdGhlIGJlZ2lubmluZyBvZiB0aW1lIGZvciBldmVyeSByYWNlIGFuZCBuYXRpb25hbGl0eS4gVGhhdCBoYXMgdG8gYmUgZGlmZmVyZW50IHRoYW4gcmFjaXNtLgpZb3UgY2FuIHBvc3NpYmx5IHBsZWFzZSB0aGUgZW50aXJlIGF1ZGllbmNlIHdpdGggZXZlcnkgam9rZS4gCldpdGggWW91VHViZSB5b3UgY2FuIGJlIHBhaWQgdG8gYSBob21lIGJhbmsgYWNjb3VudCBhbmQgdGhlbiB0cmFuc2ZlciBpdCBoZXJlLCBidXQgaXQgcHJldHR5IG9idmlvdXMgd2hhdCB5b3UgYmUgZG9pbmcuIEFsc28gZmx5aW5nIGluIGZvciBhIGZldyBkYXlzIG1ha2luZyBzb21lIHByaXZhdGUgdmlkZW9zIGxlYXZpbmcgYW5kIGRlYWxpbmcgd2l0aCB0aGVtIGxhdGVyIHdvdWxkbiB2aW9sYXRlIGFueSBsYXdzLiAKSSB0aGluayB0aGVyZSBhIGxvdCBvZiB1bm5lY2Vzc2FyeSB0aGluZ3MgdGhhdCBwZW9wbGUgZG8gdG9kYXkgd2hpY2ggYXJlbiByZXF1aXJlZC4uIApNaWNyb3NvZnQgU3R1ZGlvc0ZvbGxvd2VkIGJ5ICJJcyB5b3VyIGNoYXJhY3RlciByYW5kb21seSBqdW1waW5nIGludG8gb3RoZXIgZGltZW5zaW9ucz8iCk1hbnkgcGxheWVycyBtaWdodCB0aGluayB0aGlzIGhhbmQgaGFzIGdyZWF0IHN0cmFpZ2h0IHBvdGVudGlhbC4gClJlZ2FyZGluZyB3aGF0IHNvbWVvbmUgc2FpZCB0aGF0IHlvdSBjYW4gYWxzbyBidXkgdGhlbSBmcm9tIHNvbWUgd2Vic2l0ZXMsIHllcyBpdCdzIHRydWUgYnV0IHRoZXJlIGFyZSBzb21lIHByb3MgYW5kIGNvbnMgdG8gdGhpcy4gClBsdXMgbXkgd2lmZSBicm91Z2h0IG1lIGEgc3dpdGNoIHRvIHBsYXkgd2hpbGUgaSB3YXMgb2ZmIG15IGZlZXQgZm9yIG5lYXJseSAyIG1vbnRocy4gClVwZ3JhZGVkIHRoZWlyIHRyYXZlbCBhY2NvbW1vZGF0aW9ucyBvbiBhIGJ1c2luZXNzIHRyaXAgYmVjYXVzZSB0aGV5IGRpZG4ga25vdyB3aGF0IGV4cGVuc2VzIHdlcmUgYWxsb3dlZC4KQnV0LiBsaXRlcmFsbHkgZXZlcnkgYmxpenphcmQgZ2FtZSBhbHJlYWR5IGZvbGxvd3MgdGhhdCBtb2RlbC4gTG9vayBhdCB0aGUgZGlmZmVyZW5jZSBpbiBEaWFibG8gMyBhbG9uZSBpbiB0aGUgQ2hpbmVzZSBtYXJrZXQuIEFsbCBjb3NtZXRpY3MgYXJlIHBhaWQgTVRYLCBub3Qgc2Vhc29uIHJld2FyZHMsIGFuZCB0aGVyZSdzIGEgbG90IG9mIHRoZW0uIFRoaW5rIFBvRSBsZXZlbCBzdG9yZSwgYnV0IHdpdGggYSBBQUEgcHJpY2UgdGFnIGF0dGFjaGVkLiBZZXQgdGhhdCBzdGlsbCBoYXMgYSBsYXJnZSBwbGF5ZXIgYmFzZS4KVGhlIHZvdGUgYnJvdWdodCB0byBIYWxldGt5J3MgbWluZCBhIGJlbG92ZWQgcGFzdG9yIHdobyBoYWQgc2VydmVkIHRoZSBjaHVyY2ggYmFjayBpbiB0aGUgMTk3MCdzIGFuZCAxOTgwJ3MuIFdlbGwgaW50byBoaXMgNDAncywgdGhlIHBhc3RvciByZXZlYWxlZCB0byBhIGZldyBjb25ncmVnYW50cyB0aGF0IGhlIHdhcyBnYXkuIApJIGhlYWQgYSBzbmVha2luZyBzdXNwaWNpb24gZm9yIG1hbnkgZXBpc29kZXMgdGhhdCBBZG9yYSBoYWQgTUJQLiBJIGp1c3QgZmluaXNoZWQgdGhlIGJvb2sgYW5kIGNvbmZpcm1lZC4gSXQgd2FzIEFkb3JhJ3MgYmVoYXZpb3IgYnV0IGFsc28gdGhlIHBhcmFsbGVsIGluIHRoZSBpbWFnZXJ5IG9mIGRlYWQgQWxpY2UgYW5kIGRlYWQgTWFyaWFuIHRoYXQgcmVhbGx5IGNlbWVudGVkIGl0IGZvciBtZSwgYm90aCBhcHBlYXJpbmcgc28gc2ltaWxhciBpbiBhcHBlYXJhbmNlIGFzIHRoZWlyIGdob3N0bHkgc2VsdmVzLi4gClBsYWNlIHRoZW0gYm90aCBiYWNrIG9uIHRvcCBvZiB0aGUgZGVjaywgbm93IHRha2UgdGhlIFRPUCBjYXJkIC8gdGhlIDEgdG9wIGNhcmQgICBhbmQgcGxhY2UgaXQgb24gYSB0YWJsZSAocHJlZmVycmVkIGZsYXQgc21vb3RoIHN1cmZhY2UgNC4gTm93IHRha2UgdGhlIHNlY29uZCBjYXJkICh0aGUgd2hvbGUgZGVjayBpcyBmYWNlIGRvd24gYnkgdGhlIHdheSkgYW5kIHdhdmUgaXQgb3ZlciB0aGUgZmlyc3QgY2FyZCwgbm93IHNlZWluZyBhcyB3ZSBkb3VibGUgbGlmdGVkIDIgY2FyZHMgYXQgdGhlIHRvcCwgdGhleSB0aGluayB0aGF0IHRoZSBzZWNvbmQgY2FyZCAvIHdoaWNoIHlvdSBrbm93IHRoYXQgaXQgaXMvIGlzIHRoZSB0b3AgY2FyZCBzbyBhZnRlciB5b3Ugd2F2ZSB0aGUgc2Vjb25kIGNhcmQgb3ZlciB0aGUgZmlyc3QgdGhlbiB0dXJuIHRoZW0gb3RoZXIgYW5kIHRoZXkgd2lsbCB0aGluayB0aGV5IGhhdmUgc3dpdGNoZWQgNS4gSXQgbWF5IGJlIGEgYml0IGhhcmQgdG8gdW5kZXJzdGFuZCBhdCBmaXJzdCAvIGJ1dCBpdCBpcyBhIGVhc3kgdHJpY2sgbWFkZSBieSBEYXZpZCBCbGFpbmUgICBhIGNhcmRpc3RyeSBwZXJzb24gLyA2LiAKWW91IHNlZSB0aGlzIGhhcHBlbiBvbmxpbmUgYSBsb3QgdG9vLCBzdG9yaWVzIHRoYXQgZ2V0IHBhc3NlZCBhcm91bmQgYWJvdXQgaG93IG9uZSBwZXJzb24gZGlkIHNvbWV0aGluZyBiYWQuIEkgc3VycHJpc2VkIEkgbmV2ZXIgaGVhcmQgb2YgU2FjaGEgYmVmb3JlIChhbmQgSSB0aGluayBvbmx5IHRoZSBsYW5ndWFnZSBiYXJyaWVyIHByb2JhYmx5IHByZXZlbnRlZCBpdCBmcm9tIGJlaW5nIGluIHdpZGUgY2lyY3VsYXRpb24gYW1vbmcgRW5nbGlzaCBzcGVha2luZyB0cmFuc3Bob2JlcykgY29uc2lkZXJpbmcgaGlzIHN0b3J5IGlzIHNvbWV0aGluZyBzbyBsdXJpZCBhbmQgZ2FyaXNoIHRoYXQgaXQgd291bGQgYmUgaW5jcmVkaWJsZSBmb2RkZXIgZm9yIHRob3NlIGxvb2tpbmcgdG8gcGFpbnQgdHJhbnMgcGVvcGxlIGFzIHNleHVhbCBkZXZpYW50cy4uIApXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuIFJlZ2FyZGluZyB3aGF0IHNvbWVvbmUgc2FpZCB0aGF0IHlvdSBjYW4gYWxzbyBidXkgdGhlbSBmcm9tIHNvbWUgd2Vic2l0ZXMsIHllcyBpdCdzIHRydWUgYnV0IHRoZXJlIGFyZSBzb21lIHByb3MgYW5kIGNvbnMgdG8gdGhpcy4gClRoYXQgcGFpbiBtaWdodCBwZXJzdWFkZSBHTSB0byBoZWxwICJidXkgZG93biIgQW1lcmljYW4gQXhsZSB3b3JrZXJzIHdpdGggb25lIHRpbWUgYm9udXNlcyBpbiBleGNoYW5nZSBmb3IgcGVybWFuZW50IHdhZ2UgY3V0cy4gCkl0IG1pZ2h0IGFsc28gYmUgYSBnb29kIGlkZWEgdG8gdHJ5IHNvbWUgbmV3IHRoaW5ncywgYm90aCBzb2xvIGFuZCB0b2dldGhlciwgdGhhdCBmb2N1cyBqdXN0IG9uIHlvdXIgcGxlYXN1cmUgKHdpdGhvdXQgZm9jdXNpbmcgb24gb3JnYXNtLCB0aG91Z2ggdGhhdCBtYXkgYmUgYSBuaWNlIHNpZGUgZWZmZWN0IGhhaGEpLiBNYXliZSB5b3UgdHdvIHNob3VsZCBsb29rIGludG8geW9uaSBtYXNzYWdlIHRvZ2V0aGVyPyBPciBleHBsb3JpbmcgZmFudGFzaWVzLCBuZXcgcG9zaXRpb25zIG9yIGtpbmtzIHlvdSB3YW50IHRvIHRyeT8uIApEZWFkIHNwZXJtIGV2ZXJ5d2hlcmUuIApBIGJpZyBibGluZCBjYWxsZXJzIHJhbmdlLCBiZWNhdXNlIHdlIGhhdmUgYWxsIHNldHMsIG92ZXJwYWlycywgZmx1c2ggZHJhd3MsIG9mdGVuIHR3byBwYWlycyBkZXBlbmRpbmcgb24gb3VyIHJhaXNpbmcgcG9zaXRpb24sIGFuZCBtYW55IGd1dHRlcnMuIApUaGUgc3BlZWNoIHdhcyBwcmludGVkIGluIDE5NDQgYW5kIGV2aWRlbnRseSBpcyB2ZXJ5IHVuY29tbW9uOiAoSXNyYWVsIEdvbGRzdGVpbiksIFN0YXRlbWVudCBvZiBEci4gUHJpbnRlZCBieSB0aGUgWmlvbmlzdCBPcmdhbml6YXRpb24gb2YgQW1lcmljYSwgMTcyMCAxNnRoIFN0LCBOVywgV2FzaGluZ3RvbiBEQy4gClRoYW5rIEdvZC4gSWYgSSBkaWQsIGV2ZXJ5b25lIHdvdWxkIGhhdmUgYmVlbiByb3lhbGx5IHNjcmV3ZWQgYmVjYXVzZSBvZiB0aGUgcmVjZW50IGRpcC4gQnV0IEl0IGdvaW5nIHRvIHRha2UgdXAgdG8gMTAgZGF5cyBmb3IgZXZlcnlvbmUgdG8gZ2V0IHBhaWQgb3V0IGluIGZ1bGwuIFNvLCB5YS4gVGhlIGFsdGVybmF0aXZlIHdvdWxkIGhhdmUgYmVlbiBob2xkaW5nIGFsbCBmdW5kcyBpbiBidGMgYW5kIHJpc2tpbmcgZXZlcnlvbmUgZnVuZHMsIHNvIEkgaGFwcHkgd2l0aCBteSBjaG9pY2UuIApJIHRoaW5rIGl0IHJlYWxseSBjb21lcyBkb3duIHRvIHdoYXQgeW91IHdhbnQgdG8gZG8uIEkgdGF1Z2h0IGVsZW1lbnRhcnkgbXVzaWMgZm9yIDQgeWVhcnMgYmVmb3JlIHJhZ2UgcXVpdHRpbmcgYW5kIGV2ZW50dWFsbHkgcHVyc3VpbmcgbXVzaWMgdGhlcmFweS4gVWx0aW1hdGVseSwgSSBnb3QgaW50byBlZHVjYXRpb24gYmVjYXVzZSBJIHdhbnRlZCB0byBoZWxwIHBlb3BsZSB0aHJvdWdoIG11c2ljLiBBcyBhIHRlYWNoZXIsIGFsbCB0aGUgYnVyZWF1Y3JhdGljIHJlZCB0YXBlIG1hZGUgbWUgZmVlbCBsaWtlIEkgY291bGRuIGRvIHRoYXQuIEFzIGEgbXVzaWMgdGhlcmFwaXN0LCBJIGxpa2UgdGhhdCBteSBtYWluIHByaW9yaXR5IGlzIHRvIGdldCB0byBrbm93IGFuZCBoZWxwIG15IGNsaWVudHMuIEkgbGlrZSB0aGF0IHRoZSB0aGluZ3MgdGhhdCBJIGFzc2VzcyBub3cgYXJlIGhvdyBteSBjbGllbnRzIGFyZSByZWFjaGluZyB0aGVpciBnb2FscyBpbnN0ZWFkIG9mIHdoZXRoZXIgdGhleSBtZW1vcml6ZWQgc29tZXRoaW5nIGZvciBhIHRlc3QsIG9yIHBsYXllZCB0aGUgcmlnaHQgbm90ZSBhdCB0aGUgcmlnaHQgdGltZS4gVGhlcmUgc3RpbGwgcmVkIHRhcGUsIHRoZXJlIGFyZSBzdGlsbCB3b3JrcGxhY2UgaXNzdWVzLCBidXQgb3ZlcmFsbCwgSSBoYXBweSB3aXRoIG15IGNob2ljZS4KQ2xpY2sgdGhlIGFudGVubmEgdG8gZHJvcCB0aGUgYmlyZCBpbnRvIHRoZWV4aGF1c3QgZmFucywgYW5kIGhpcyBndXRzIGdvIGFsbCBvdmVyLCBpbmNsdWRpbmcgaW50byB0aGUgd2F0ZXJzdXBwbHkuIApUb20gVGFuY3JlZG8KSXQgcG9zc2libGUgdGhhdCBpbiBwcmFjdGljZSBNVEcgaXMgYSBnYW1lIHdoZXJlIHRoZSBoaWRkZW4gaW5mb3JtYXRpb24ganVzdCBpc24gaW1wb3J0YW50IGVub3VnaCB0byBtYWtlIG11Y2ggb2YgYSBkaWZmZXJlbmNlLiBJbiB0aGF0IGNhc2UgTUNUUyBvciBJU01DVFMgbWlnaHQgZ2V0IHlvdSByZWFzb25hYmxlIHJlc3VsdHMuIEJ1dCBmb3IgYSBtb3JlIHByaW5jaXBsZWQgYXBwcm9hY2ggeW91IHNob3VsZCBsb29rIGZvciAob3IgZGV2ZWxvcCEpIGFuIGFsZ29yaXRobSB0aGF0IGNvbnZlcmdlcyB0byBhbiBlcXVpbGlicml1bSAoc3VjaCBhcyBNb250ZSBDYXJsbyBDb3VudGVyZmFjdHVhbCBSZWdyZXQgTWluaW1pemF0aW9uKS4KSlNNb3JpbiAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkVhY2ggZmFjaWxpdHkgaGFzIGRlYWxlcnMsIHNlcnZpY2Ugc3RhZmYgYW5kIGZsb29yIG1hbmFnZXJzIHRvIGVuc3VyZSB0aGUgYmVzdCBsaXZlIGdhbWluZyBleHBlcmllbmNlLiAKSGV0IG9udGJpanQga29uIHBhcyB2YW5hZiA4dSwgZHVzIHZvb3IgaGV0IG9udGJpanQgaGViYmVuIHdpaiBub2cgZWVuIHV1cnRqZSBpbiBCYW5za2EgU3RpYXZuaWNhIHJvbmRnZXdhbmRlbGQuIApEciBKZWt5bGwgYW5kIE1yLiAKRGlzbmV5IHNwZW50ICQyMDAgbWlsbGlvbiB0byBtYWtlIHRoZSBmaWxtIGFuZCAkMTUwIG1pbGxpb24gbWFya2V0aW5nIGl0IG92ZXIgdGhlIG5pbmUgbW9udGhzIGJlZm9yZSBpdHMgZGVidXQsIHNvIGV4cGVjdGF0aW9ucyB3ZXJlIGhpZ2guIEJ1dCBDb29nbGVyIGRlbGl2ZXJlZCBhICQxLjMgYmlsbGlvbiBiZWhlbW90aCwgc3BlYXJoZWFkZWQgYnkgdGhlIGZpZnRoIGxhcmdlc3QgbW92aWUgb3BlbmluZyBvZiBhbGwgdGltZS4gClNoZSBzYWlkIHRoYXQgYXBwYXJlbnRseSBQdXJkeSBoYWQgY29udHJhY3RlZCB0aGUgZGlzZWFzZSBhIG1vbnRoIGJlZm9yZSBlbnRlcmluZyB0aGUgaG9zcGl0YWwgaW4gbWlkIEp1bHksIGJ1dCBzaGUgd2FzIHNvIHN0cm9uZyBhbmQgaGVhbHRoeSBpdCB3YXNuJ3QgZGlhZ25vc2VkIGFzIG1lbmluZ2l0aXMgd2hlbiBzaGUgY29tcGxhaW5lZCBvZiBiZWluZyBpbGwuCk5vdCB0aGUgbGliZXJ0aWVzIHRoZXkgYXJlIG5vdCBhd2FyZSB0aGF0IHRoZXkgbGFjay5CZWNhdXNlIHRob3NlIHBlb3BsZSBhcmUgYWxsIGlkaW90cyBhbmQgZG9uIHVuZGVyc3RhbmQgdGhlIGNvbmNlcHQgb2YgZnJlZWRvbSBhbmQgc2VjdXJpdHk/IFdoYXQgYSByaWRpY3Vsb3VzIHRoaW5nIHRvIHNheSwgcGFydGljdWFybHkgYWZ0ZXIgdGhlIGFyYWJpYyBzcHJpbmcuIFdoeSBkbyB5b3UgdGhpbmsgdGhvc2UgbWFzcyBkZW1vc3RyYXRpb25zIGluIEVneXB0LCBTeXJpYSwgVHVuaXNpYSwgWWVtZW4sIGV0YyBoYXBwZW5lZD9EaWN0YXRvcnNoaXBzIGFyZW4gbGVzcyBvciBtb3JlIGNvcnJ1cHQuIApOZXZlciBmZWVsIGJvcmVkIHdpdGggYSByYW5nZSBvZiB3ZWxsbmVzcyBhY3Rpdml0aWVzIGluY2x1ZGluZyA1IFN0YXIgTHV4dXJ5IFdlbGxuZXNzIFNwYSwgRml0bmVzcyBDZW50cmUsIGFuZCBUaGFpIENvb2tlcnkgQ2xhc3Nlcy4gCk1hcmsgQ3ViYW4sIG93bmVyIG9mIHRoZSByaXZhbCBEYWxsYXMgTWF2ZXJpY2tzLCB0d2VldGVkOiBlbmNvdXJhZ2VtZW50IGFuZCBzdXBwb3J0IGFsb25nIHdpdGggeW91ciBzdG9yaWVzIG9mIHN0YXlpbmcgdHJ1ZSB0byB5b3Vyc2VsZiBoYWQgYW4gZW5vcm1vdXMgaW1wYWN0IG9uIG1lLgpNZWRpY2F0aW9uIGlzIGFsc28gYWx3YXlzIGFuIG9wdGlvbiwgaWYgaGUgY29tZm9ydGFibGUgd2l0aCBpdC4gVGhlIHJpZ2h0IG1lZGljYXRpb24gZm9yIHNvbWVvbmUgd2l0aCBhZGhkIGlzIGxpa2UgcHV0dGluZyBvbiBnbGFzc2VzLiBUaGF0IHNvdW5kcyBjaGVlc3kgYW5kIG92ZXIgZXhhZ2dlcmF0ZWQsIGJ1dCBpdHMgdHJ1ZS4gQWN0dWFsbHkgYmVpbmcgYWJsZSB0byBvcmdhbml6ZSBteSB0aG91Z2h0cyB3aXRob3V0IGV4YXVzdGluZyBteXNlbGYgYW5kIG5vdCBoYXZpbmcgdG8gbWVudGFsbHkgaGVyZCBteXNlbGYgdG8gc3RheSBvbiB0YXNrIGZlZWxzIGxpa2UgeW91IHNlZWluZyB0aGUgd29ybGQgZGlmZmVyZW50bHkuClllcywgdGhhbmsgeW91LCB3ZSBoYWQgcXVpdGUgYSBkZWNlbnQgQ2hyaXN0bWFzLiBJbiB0aGUgc3BlY2lhbCByZWQgQ2hyaXN0bWFzIGZvb2QgcGFyY2VsIHdlIGhhZCBhIHBsdW0gcHVkZGluZywgQ2hyaXN0bWFzIGNha2UsIHRpbiBvZiByb2FzdCBwb3JrIHdpdGggdGhpY2sgZ3JhdnksIHRpbm5lZCBtaWxrLCBib3ggb2YgYmlzY3VpdHMsIGFsbCBvZiB3aGljaCBtYWRlIGEgbmljZSBDaHJpc3RtYXMgZGlubmVyLiAKMykgd2VyZSBzaXggbWVtYmVycyBvZiB0aGUgNDMgcGxheWVyIGZpZWxkLiAKV2VsbCBJIGNhbiBraW5kYSBncmFzcCB3aHkgdGhvLiAKSW4gY2FzZSBvZiBhIHJlYWwgZW1lcmdlbmN5IChmaXJlKSB3aGVyZSB5b3UgbmVlZCB0byBiZSBmYXN0LCBJIHVzdWFsbHkgaGFuZGxlIGNhdHMgcHJldHR5IHJvdWdobHkuIApUcmF2ZWxpbmcgV2l0aGluIFRoZSBXb3JsZCBpcyBtZWFudCB0byBiZSBzdWNoIGEgcGxhY2UuIEEgcGxhY2UgZm9yIGFsbCBvZiB0aGVzZSBhcnRpc3RzIHRvIGtlZXAgaW4gdG91Y2ggYW5kIGRpcmVjdGx5IGludGVyYWN0IHdpdGggdGhlaXIgZmVsbG93IGdlZWtzIGFuZCByZSBlbmFjdG1lbnQgaG9iYnlpc3RzLCB0aGVpciBjbGllbnRlbGUuCkNQTSBwcm92aWRlcyBoZWFsdGh5IG1vdGlvbiBpbiBhcmVhcyB3aGljaCBtYXkgaGF2ZSBiZWNvbWUgbGVzcyBtb2JpbGUgZHVlIHRvIHBhaW5mdWwgc3Bhc21zLCBzbGlnaHQgZml4YXRpb25zIG9yICJsb2NraW5nIiBvZiBhIHZlcnRlYnJhbCBzZWdtZW50LCBvciBtaWdyYXRpb24gb2YgdGhlIGRpc2Mgb3V0IG9mIGl0cyBub3JtYWwgcG9zaXRpb24uCkkgd29ycmllZCBhYm91dCBteSBvd24gdHJhbnNmb3JtYXRpb24gZnJvbSBwYW1wZXJlZCBjb2x1bW5pc3QgdG8gbWF0aHMgdGVhY2hlciBob3cgd2lsbCBJIHJlbWVtYmVyIDIwMCBuYW1lcyB3aGVuIEkgY2FuIHJlbWVtYmVyIG15IG93biBjaGlsZHJlbiBidXQgYWxzbyB3b3JyaWVkIGFib3V0IHRoZSBvdGhlciA0NSB0cmFpbmVlcy4gQXMgdGhpcyB3aG9sZSBtYWQgY2FwZXIgd2FzIG15IGlkZWEsIEkgZmVlbCByZXNwb25zaWJsZSBmb3IgZXZlcnlvbmUgZWxzZS4gCk9yZWdvbiBJIGhhZCBvbmUgcGxhY2UgdGVsbCBtZSBJIHdvdWxkIHByb2JhYmx5IHJ1biBpbnRvIGlzc3VlcyB1c2luZyBhIEJDIGxpY2Vuc2UgYXMgb2ZmaWNpYWxseSBJIG5lZWRlZCBhIHBhc3Nwb3J0IG9yIFVTIGdvdmVybm1lbnQgaXNzdWVkIElELiAKUmVjb21tZW5kYXRpb25zIGZvciBhIGNhcmQgZ2FtZSB3aXRoIHN0cmF0ZWd5LCBsb3RzIG9mIGx1Y2sgKG15IHBva2VyIHBsYXlpbmcga2lkIHN0b3BwZWQgcGxheWluZyBjaGVzcyB3aXRoIGFueSBvZiB1cyB5ZWFycyBhZ28pIGFuZCBmb3IgMiB0byA1IHRlZW4vYWR1bHQgcGxheWVycyB0byBwbGF5IGluIGFuIGhvdXIgb3IgbGVzcy4gSSByZWFsbHkgd2FudCBvbmUgdGhhdCB1c2VzIGRlY2tzIG9mIHBsYWluIGNhcmRzIGFzIHdlIGVuZCB1cCBsb3NpbmcgYml0cyBvZiBnYW1lIHBpZWNlcyBhZnRlciBhIGZldyBtb250aHMuIFdlJ2QgYmUgd2lsbGluZyB0byBwdXQgaW4gdGltZSBsZWFybmluZyB0aGUgcnVsZXMgYnV0IEJyaWRnZSBpcyB0b28gcmlnaWQsIFVubyB3YXkgdG9vIHNpbXBsZS4gTWVhbmluZ2xlc3MgcG9pbnRzIGJldHRpbmcgaXMgZmluZS4gV2hhdCdzIHdvcmtlZCBmb3IgeW91ciBmYW1pbHk/SSBhbSBsb29raW5nIGZvciB0aGUgZnVsbCBkYXRhc2V0IG9uIHRoZSByZWNlbnQgV29ybGQgU2VyaWVzIG9mIFBva2VyIG1haW4gZXZlbnQgZmluYWwgdGFibGUuIElkZWFsbHkgdGhpcyB3b3VsZCBpbmNsdWRlIGZvbGRlZCBoYW5kcywgc3RhY2sgc2l6ZXMsIHBvdCBzaXplcywgYmV0cywgZmxvcHMgZXRjLiBGYWlsaW5nIHRoaXMgSSdkIGJlIGhhcHB5IHdpdGggYSBjb21wcmVoZW5zaXZlIGRhdGEgc2V0IG9mIGFueSBmaW5hbCB0YWJsZSBvZiBhIGhpZ2ggcmFua2luZyBwcm9mZXNzaW9uYWwgcmVhbCB3b3JsZCAobm90IG9ubGluZSkgcG9rZXIgdG91cm5hbWVudC4gSG9sZGVtIGlzIGEgZ2l2ZW4gKG5vdCBpbnRlcmVzdGVkIGluIG90aGVyIHBva2VyIGZvcm1hdHMgdGhhbmtzKS4gQW55IGRhdGEgZm9ybWF0IGlzIGdvb2QgSSdkIHByZWZlciBub3QgdG8gaGF2ZSB0byBzY3JhcCB0aGUgZGF0YSBmcm9tIHRoZSBzb3VyY2UuClRoZSB5b3VuZ2VzdCB3YXMgbmluZSBtb250aHMgb2xkLkFnYWluc3QgYWxsIG9kZHMsIHRoZXkgbWFuYWdlZCB0byBkbyBzbywgYWx0aG91Z2ggQm9yZGVuIGFsbG93cyB0aGF0IHRoZXkgd291bGQgbm90IGhhdmUgbWFkZSBpdCB3aXRob3V0IHRoZSBoZWxwIG9mIHRoZSBub3cgZGVmdW5jdCBOZWdybyBDb21tdW5pdHkgQ2VudHJlLCB0aGUgT2xkIEJyZXdlcnkgTWlzc2lvbiBhbmQgQ2FtcCBDaGFwbGVhdSwgd2hpY2ggaGFkIGJlZW4gb3BlcmF0ZWQgYnkgdGhlIE1pc3Npb24gdW50aWwgaXQgY2xvc2VkIGluIDIwMDcuU3VmZmljZSBpdCB0byBzYXkgdGhhdCB0aGVyZSB3YXMgbGl0dGxlIGJsaXNzIGluIHRoaXMgZmFtaWx5LndhcyBzb29uIGFmdGVyIHNwZW5kaW5nIHRoZSBzdW1tZXIgYXQgQ2FtcCBDaGFwbGVhdSB0aGF0IG15IG1vdGhlciBwdXQgdXMgYWxsIG9uIHRoZSBjaGVzdGVyZmllbGQgYXQgaG9tZSwgQm9yZGVuIHJlY2FsbHMuIApBbHNvIGdpYnQgZXMgZXJzdCBtYWwgZWluZSBUaXNjaGJlcnNpY2h0LCBkYW5uIGVpbiBiaXNzY2hlbiB3YXMgYmVyIGRpZSBNaXRzcGllbGVyLCBzbyB3aXIgaXJnZW5kd2FzIGJlciBzaWUgd2lzc2VuLiAKV2lsbCB0aGUgbWlsaXRhcnkgaW5kdXN0cmlhbCBlY29ub215IGJlIGJyb3VnaHQgdW5kZXIgY29udHJvbCBpbiB0aW1lIHRvIHNhdmUgdGhlIGFjdHVhbCBlY29ub215PyBOb3QgaWYgT2JhbWEgZmlyc3QgbWlsaXRhcnkgc3BlbmRpbmcgcHJvcG9zYWxzIGFyZSBhbnkgaW5kaWNhdG9yLiAKVGltZSBzaGlmdGluZyBhbmQgcmFtcGFudCBjb21tZXJjaWFsIGF2b2lkYW5jZSBoYXZlIHdyZWFrZWQgaGF2b2Mgb24gdGhlIGhvYXJ5IGFkIHN1cHBvcnRlZCBUViBtb2RlbCwgYW5kIHdoaWxlIEMzIGFuZCB0aGUgZW5oYW5jZWQgQzcgbWV0cmljIGhhdmUgaGVscGVkIGEgaGFuZGZ1bCBvZiBhbHJlYWR5IGhpZ2ggcmF0ZWQgc2hvd3Mgd2luIGJhY2sgYSBnb29kIGRlYWwgb2YgaW1wcmVzc2lvbnMgdGhhdCB3b3VsZCBvdGhlcndpc2UgYmUgbG9zdCB0byB0aGUgcHJlZGF0aW9ucyBvZiB0aGUgRFZSLCB0aGUgY3VycmVuY3kgaGFzbid0IGhhZCBtdWNoIG9mIGFuIGltcGFjdCBvbiB0aGUgYnVzaW5lc3MgYXMgYSB3aG9sZS4gClRoaXMgaXMgYSBiaWcgaXNzdWUgZm9yIG1lIGluIEdPSCB3aGVyZSBpZiBJIGRvbiBoYXZlIGEgbGV2ZWwgODUgd2l0aCBtYXggZ2VhciBhbmQgYWJpbGl0aWVzIEkgY2FuIHJlYWxseSB1c2UgdGhlbSBpbiBhbnkgb2YgdGhlIGdhbWUgbW9kZXMgYW5kIGV4cGVjdCB0byB3aW4uIFdlIGNvbXBsYWluIGFib3V0IHRoZSBmYXJtaW5nIGJ1dCB0aGV5IGFyZSBwcmV0dHkgZ2VuZXJvdXMgd2l0aCBuZXcgY2hhcmFjdGVycy4gCkxpa2V3aXNlLCBpZiBpdCBhIHJhcGlkbHkgZGV2ZWxvcGluZyBjYW5jZXIsIGRldGVjdGluZyBpdCBlYXJseSBzdGlsbCBtaWdodCBub3QgYmUgZW5vdWdoIHRpbWUgZm9yIHRyZWF0bWVudCBvcHRpb25zIHRvIHdvcmssIGV4cG9zZXMgdGhlIHBhdGllbnQgdG8gYWR2ZXJzZSBlZmZlY3RzLCBhbmQgbWFrZXMgbGl0dGxlIGNoYW5nZSB0byB0aGUgbW9ydGFsaXR5IHJhdGUuIEV4Y2VwdCB0aG9zZSBwYXRpZW50cyBhbHNvIHN1ZmZlcmVkIHRocm91Z2ggYnJ1dGFsIHRyZWF0bWVudCwgd2hpY2ggaW4gbWFueSBjYXNlcywgaXMgd29yc2UgdGhhbiB0aGUgY2FuY2VyIGl0c2VsZi4KSSBuZXZlciBleHBlcmllbmNlZCBhbnl0aGluZyBsaWtlIGl0LiAKQSBuZXJ2b3VzIHRpYywgYW4gdW5jb25zY2lvdXMgbG9vayBvZiBhbnhpZXR5LCBhIGhhYml0IG9mIG11dHRlcmluZyB0byB5b3Vyc2VsZiBhbnl0aGluZyB0aGF0IGNhcnJpZWQgd2l0aCBpdCB0aGUgc3VnZ2VzdGlvbiBvZiBhYm5vcm1hbGl0eSwgb2YgaGF2aW5nIHNvbWV0aGluZyB0byBoaWRlLiAKU3R1ZHkgd2l0aCB1c091ciBjb3Vyc2VzV2h5IHN0dWR5IHdpdGggdXM/U3R1ZGVudCBleHBlcmllbmNlLCBmZWVzIGFuZCBmaW5hbmNlCkkgd291bGQgaW1hZ2luZSBpdCBpcyB0aGUgc2FtZSBmb3IgYW1waGliaWFucy4gCkl0IGJlZW4gYSBsb25nIHRpbWUgc2luY2UgSSBiZWVuIHRvIEhpbGxzYm9ybyBWaWxsYWdlLCBidXQgSSByZW1lbWJlciB0aGVyZSBiZWluZyBzb21lIGJvdXRpcXVlIHNob3BzIHRoZXJlLiAKUm9zZXdvb2QgU2FuZCBIaWxsIGluIE1lbmxvIFBhcmssIENhbGlmLgpCZXQgaXMgZmluZS4gVGhvdWdoIGhlIHByb2JhYmx5IG5ldmVyIGNoZWNraW5nIHRoYXQgZmxvcCBhcyB0aGUgcHJlIGZsb3AgYWdncmVzc29yIHNvIHlvdSBjYW4gZGVmaW5pdGVseSBjaGVjayByYWlzZSBoZXJlLiBCdXQgYXMgdGhlIHBsYXkgd2VudCwgc2luZSBoZSByYWlzZXMsIEkgamFtbWluZy4gSSBkb3VidCBoZSBoYXMgVFEgZXZlciB0aGVyZSAzYmV0dGluZy4gU28gSSBrbm93IGhlIGdvdCBlaXRoZXIgYSByZWFsbHkgc3Ryb25nIGhhbmQgd2UgYmVhdGluZywgKEFBLCBBSywgQVEsIEFKLCBBVCwgUUssIEtKLCBKSiwgOTksIG9yIEF4IHdpdGggMiBkaWFtb25kcykuIEFuZCBhIGZldyBvZiB0aG9zZSBoZSBwcm9iYWJseSBzaG91bGRuIGV2ZW4gaGF2ZSAzYiBhZ2FpbnN0IGFuIHV0ZyByYWlzZSB0byAxNy4gSGUgaGFzIG92ZXIgaGFsZiBoaXMgc3RhY2sgY29tbWl0dGVkIG9uIHRoZSBmbG9wIGFmdGVyIHJhaXNpbmcuIEp1c3QgZ2V0IGl0IGluIG9uIHRoZSBmbG9wLiBZZXMsIHRoZXJlIHBsZW50eSBvZiBiYWQgdHVybnMgYW5kIHJpdmVycywgYnV0IHlvdSBhaGVhZCBvZiBoaW0gOTclIG9mIHRoZSB0aW1lIGFuZCBoZSBuZXZlciBmb2xkaW5nIHVubGVzcyBoZSB3YXMganVzdCBibHVmZmluZyB3aXRoIG5vdGhpbmcuIEFuZCB5b3UgY2FuIGFsd2F5cyBpbXByb3ZlIHRvIHF1YWRzIG9yIHRvcCBib2F0IGFueXdheXMuClRob3VnaCBmZXcgQW1lcmljYW5zIGtub3cgaGlzIG5hbWUsIExhcnJ5IEZpbmsgbWF5IGJlIHRoZSBtb3N0IHBvd2VyZnVsIG1hbiBpbiB0aGUgcG9zdCBiYWlsb3V0IGVjb25vbXkuIGdvdmVybm1lbnQgbGFzdCB5ZWFyLgpBcyBtYXkgYmUgZXhwZWN0ZWQsIGlmIHlvdSBoYXZlIGFuIGVudGlyZSBnYW1lIHJvb20gZGVkaWNhdGVkIHRvIHBva2VyLCB0aGFuIHlvdSBhcmUgbGlrZWx5IHRvIHdhbnQgc2V2ZXJhbCBkZWNrcyBvZiBjYXJkcyB0byBwdXQgaW4gdGhlIHJvb20uIApUaGVyZSBhIGZhbW91cyB2aWRlbyBvZiB0aGUgYXR0ZW1wdCB0byBhY2Nlc3MgYSBzZWNvbmQgc3Rvcnkgd2luZG93IHdoZXJlIHRoZXkgd2VyZSB0b2xkIHRoZXJlIHdhcyBhIHdlYXBvbnMgcm9vbS4gVGhlIGFnZW50IGZlbGwgdGhyb3VnaCB0aGUgd2luZG93IGFuZCBpbnRvIGEgcm9vbS4gSGUgbGFuZGVkIGluIGEgYm94IG9mIGdyZW5hZGVzLCBhbmQgc2F3IHNoZWx2ZXMgb2YgZW1wdHkgd2VhcG9uIHJhY2tzLiBIZSBjYWxsZWQgZm9yIGEgcmV0cmVhdC4KIlNvbWV0aW1lcyB0aGV5J2QgdG9zcyBiYWxscyB1cCB0byB1cyBpbiB0aGUgc3RhbmRzLCIgQmxhY2ggc2FpZC4gIkkgcmVtZW1iZXIgd2F0Y2hpbmcgTWF0dCBSZXlub2xkcyB3aGVuIGhlIHdhcyB3aXRoIHRoZSBSb2NraWVzLiBOb3cgaGUncyBteSB0ZWFtbWF0ZS4gSXQncyBiZWVuIGNvb2wgdG8gdGFsayB0byBoaW0gYWJvdXQgdGhhdC4iCktvbm9wa2Egc3VycmVuZGVyZWQgaGVyIGxpY2Vuc2UgaW4gT2N0b2JlciwgYnV0IGxhdGVyIHJlcXVlc3RlZCBwZXJtaXNzaW9uIHRvIGNvbnRpbnVlIGhlciBwcmFjdGljZS4gIFB1YmxpYyBSYWRpbyByZXBvcnRlZCBNb25kYXkgdGhhdCBNZXJyaW1hY2sgU3VwZXJpb3IgQ291cnQgSnVkZ2UgSm9obiBLaXNzaW5nZXIgcnVsZWQgTm92LiAxNSB0aGF0IHNoZSBmYWlsZWQgdG8gc2hvdyBzaGUgd2FzIGZvcmNlZCB0byBnaXZlIHVwIGhlciBsaWNlbnNlIGFzIHNoZSBhbGxlZ2VkLgpJIHNwZW50IHRoZSBhZnRlcm5vb24gd2l0aCBteSBjb3VzaW5zIEphc29uLCBMeWRpYSBhbmQgdGhlaXIgc29uIFR5bGVyIGJlZm9yZSBoZWFkaW5nIHRvIEpGSyB0byBtZWV0IFdlbmRpLiBTaGUgZ290IHRvIHRoZSBhaXJwb3J0IHRlbiBtaW51dGVzIGJlZm9yZSBtZSwgY2hlY2tlZCBpbiwgaGVhZGVkIHRocm91Z2ggc2VjdXJpdHksIGFuZCB3ZW50IHRvIHRoZSBnYXRlLiBOYXR1cmFsbHkgdGhleSBjbG9zZWQgYWxsIHNlY3VyaXR5IGxpbmVzIGZpdmUgc2Vjb25kcyBsYXRlciBhbmQgSSBoYWQgYSBob3JyaWZpYyBleHBlcmllbmNlLiBJIGhhZCBqdXN0IGVub3VnaCB0aW1lIHRvIGhhdmUgYSBiZWVyIHdpdGggaGVyIGFuZCB0aGVuIHdlIHdhaXRlZCBmb3Igb3VyIGZsaWdodC4KTXkgYnVsbHkgd2FzIG15IDR0aCBncmFkZSB0ZWFjaGVyLiAKTWFjaG8gbWVuLCBldmVuIHdlbGNvbWUgdGhlbSBpbnRvIHRoZSBwcmllc3Rob29kLCBidXQgYmFyIG1lbiB3aG8gbG92ZSBvdGhlciBtZW4gZnJvbSBzZXJ2aW5nIG1hbGUgZGVpdGllcy4gSW4gd2F5cyB0aGF0IHBlcnZlcnQgdHJ1dGggYW5kIGxvZ2ljLiAKRGVyIGVyd2FydGV0ZSBQcmVpc3Bvb2wgZHJmdGUgYmVpIGV0d2EgMjAwLjAwMCBhbmdlc2llZGVsdCBzZWluICAgZWluc2NobGllbGljaCBkZXIgMjAuMDAwLCBkaWUgenUgZGVyIFZlcmFuc3RhbHR1bmcgYWxzIFNwb25zb3IgaGluenVzY2hpZXQuLiAKUGxheWluZyBwb2tlciBvbmxpbmUgY2FuIGJlIHZlcnkgbHVjcmF0aXZlIGFuZCBleGNpdGluZyBhdCB0aGUgc2FtZSB0aW1lLiBQbGF5ZXJzIGFyZSB3aWxsaW5nIHRvIGNoYWxsZW5nZSBhbnlvbmUgb25saW5lLCBzbyBpZiB5b3Ugd2FudCB0byBqb2luIG9ubGluZSBwb2tlciB0b3VybmFtZW50cywgdGhlcmUgYXJlIHJ1bGVzIHRvIGZvbGxvdy4KSWYgaXQgd2FzIG9ubHkgdGhpcyB0aGVyZSB3b3VsZCBzdGlsbCBiZSBob3BlLiBXaGF0IHdlIGFyZSBmYWNpbmcgaXMgYSBiYW5rcnVwdGN5IG9mIGlkZWFzLCBhIGdvdmVybmluZyBjbGFzcyAgIGNvdmVyaW5nIHRoZSBwb2xpdGljYWwgYW5kIG1pbGl0YXJ5IHNwZWN0cnVtICAgdGhhdCBjYW4ndCBhc2sgdGhlIHJpZ2h0IHF1ZXN0aW9ucyBhbmQgdGhlcmVmb3JlIGlzIGluIG5vIHBvc2l0aW9uIHRvIGdldCB0aGUgcmlnaHQgYW5zd2Vycy4uIApKdXN0IGdldCB5b3VyIE1BIGRvbmUuIApJIGRvbid0IHJlbWVtYmVyIHRoZSBleGN1c2UgZm9yIHRoZSBjYWxscy4gClNvIHlvdSBjYW4gZm9yZ2V0IEFBLCBLSy4gCkkgd2lsbCB3aXBlIHlvdSB0aGUgZnVjayBvdXQgd2l0aCBwcmVjaXNpb24gdGhlIGxpa2VzIG9mIHdoaWNoIGhhcyBuZXZlciBiZWVuIHNlZW4gYmVmb3JlIG9uIHRoaXMgRWFydGgsIG1hcmsgbXkgZnVja2luZyB3b3Jkcy4gClsuXSAiUmVhbGlzdGljYWxseSwgaXQgaXMgaGFyZCB0byBhY2NlcHQgdGhlIHN5c3RlbSBmb3IgYWxsIHBvc2l0aW9ucyBhdCBiYW5rcywiIHNhaWQgYSBzcG9rZXNwZXJzb24gYXQgdGhlIEtvcmVhIEZpbmFuY2lhbCBJbmR1c3RyeSBFbXBsb3llcnMgQXNzb2NpYXRpb24uIApJIHJlbW92ZWQgbGlua3MgdG8gUGF0cmVvbiBmcm9tIHRoZSBzdG9yeSAoaW4gdGhlIHN1bW1hcnksIGFuZCBpbiB0aGUgbW9zdCByZWNlbnQgY2hhcHRlciksIGFuZCByZXNwb25kZWQgdG8gdGhlIGUgbWFpbCB0aGF0IGhhZCBsYW5ndWlzaGVkIGluIHRoZSBmb2xkZXI7IHdlIHNlZSB3aGF0IGtpbmQgb2YgdHVybmFyb3VuZCB0aW1lIHRoZXJlIGlzLi4gCkhlIGNhbWUgaG9tZSB0byBhbiBlbXB0eSBob3VzZSBhZnRlciB3b3JrLi4gCk90aGVyIHNvbHV0aW9uIG1pZ2h0IGJlIHRvIHByb3ZpZGUgYWxsIG5vbndoaXRlIHJlc2lkZW50cyBvZiBBWiB3aXRoIGEgR3JpbmdvIE1hc2suIApNYWlzIHNpIGMnZXN0IHF1ZWxxdWUgY2hvc2UgcXUnb24gYSBmYWl0IGRhbnMgbGUgcGFzcywgc3VydG91dCBxdWFuZCBhIGRhdGUgZGUgMjAsIDMwLCA0MCBhbnMsIGplIG5lIGNyb2lzIHBhcyBxdWUgbGUgcmZsZXhlIHNvaXQgZW5jb3JlIGwuLiAKUmVhbGx5IGFtYXppbmcuIApTbyBhbnkgd2VpZ2h0IHlvdSBjYXJyeSBvbiB0aGUgWmFheiB3aWxsIGZlZWwgMyAgdGltZXMgaGVhdmllci4uIApJIHdvdWxkIHJlcG9ydCBhZ2FpbiBhbmQgbWFrZSByZWZlcmVuY2UgdG8gdGhpcyBpbiBob3BlcyBzb21lIHJlYWwgYWN0aW9uIGhhcHBlbnMuIApXaXRoIHNvIG1hbnkgaG90ZWwgZ3JvdXBzIGFsc28gdXNpbmcgU2luZ2Fwb3JlIGZvciByZWdpb25hbCBIUXMsIHRoZXJlJ3MgYSB3aG9sZSBmYWN1bHR5IGp1c3Qgd2FpdGluZyB0byBzdGFuZCBpbiBmcm9udCBvZiBsZWN0dXJlIGhhbGxzIHRvIGV4cGxhaW4gaG93IHJlY29nbml0aW9uLCBhdHRlbnRpb24gdG8gZGV0YWlsIGFuZCBncmFjaW91c25lc3MgYXJlIGFsbCB0aGUgbG9zdCBhcnRzIHRoYXQgbmVlZCB0byBiZSByZXN0b3JlZCB0byBidWlsZCBiZXR0ZXIgYnJhbmRzLiBGb2xkIGluIGFsbCB0aG9zZSBiYW5rZXJzIHdobyB3YW50IGEgaG90ZWwgZ3JvdXAgb3IgYWlybGluZSBvZiB0aGVpciBvd24gYW5kIFNpbmdhcG9yZSBjb3VsZCBoYXZlIGEgd2hvbGUgbmV3IHJhaXNvbiBkJ3RyZS4gCkVsdG90c2lyYUxvcmQgb2YgdGhlIEZvcnJlc3QKRldJVywgSSBoYWQgYSBwb3NpdGl2ZSBleHBlcmllbmNlIHJlbnRpbmcgYSAxQlIgaW4gc2hhZHlzaWRlIGZyb20gR3JldmUuIEkgZGlkbid0IGxpa2Ugc29tZSBvZiB0aGUgbGFuZ3VhZ2UgaW4gbXkgbGVhc2UgdGhhdCB3b3VsZCBhdXRvbWF0aWNhbGx5IGZvcmZlaXQgc29tZSBvZiBteSByaWdodHMgaWYgaGUgc2FpZCBJIGRlZmF1bHRlZCBvbiBwYXltZW50LCBhbmQgRGF2aWQgdGhlIG1hbmFnZXIgdG9vayBvdXQgdGhhdCBwYXJhZ3JhcGggd2l0aCBubyBpc3N1ZXMuIFBsYWNlIHdhcyBjbGVhbiBhbmQgZml4ZXMgd2VyZSBmZXcgYnV0IGFkZHJlc3NlZCBxdWlja2x5LCBhbmQgSSBnb3QgbXkgZGVwb3NpdCBiYWNrIGZ1bGwgaW4gYSB3ZWVrIGFmdGVyIG1vdmluZyBvdXQsIGJ1dCBZTU1WLiBTdGF5IGF3YXkgZnJvbSBNb3phcnQgaWYgeW91IGRvbid0IGxpa2Ugc3RyaWN0IGxlYXNlcy4KQm9pbGluZyBkb3duIGhvdyB0byBkZWNpZGUgd2hhdCBhIGdvb2QgZm9ybXVsYSBpcyBoYXMgYmVlbiB0aGUgaGFyZGVzdCBwYXJ0IG9mIHRoaXMgYXJ0aWNsZSB0byB3cml0ZSBhbmQgd2lsbCBiZSB0aGUgbGVhc3Qgc2F0aXNmeWluZyB0byB0aG9zZSB3aG8gYXJlIGludGVyZXN0ZWQgaW4gYSBxdWljaywgZWFzeSB3YXkgdG8gZGV0ZXJtaW5lIHBhdGllbnQgbmVlZHMgd2l0aG91dCBzcGVuZGluZyBhZGRpdGlvbmFsIHRpbWUuIAoiV2UgaGF2ZSBmb3VuZCB0aGF0IG11bSBhbmQgZGFkIGNhZiBhbmQgcmVzdGF1cmFudHMsIGFzIHdlbGwgYXMgc2Nob29scyBhbmQgY29tbXVuaXR5IGdyb3VwcyBhcmUgYWxzbyBiZWFyaW5nIHRoZSBicnVudCBvZiByZWQgdGFwZSBhbmQgcmVndWxhdGlvbiwiIGhlIHNhaWQuCllvdSBhbHNvIGhhdmUgdGhlIG9wdGlvbiBpbiB1c2luZyBhIHByZXBhaWQgQVRNLiAKU21pdGgncyBkZWZlbnNlIGNvdW5zZWwgSXMgTG9uIEFkYW1zLiAKQnV0IEkgc2ltcGx5IGhhZCB0byBjb21lIGFuZCBoZWFyIHRoZSBuZXdzLiAKVW5wb3B1bGFyIG9waW5pb24sIGRvd252b3RlIGlmIHlvdSBtdXN0LCBidXQgaXMgaGFuZCB3YXNoaW5nIHJlYWxseSBhbGwgdGhhdCBuZWNlc3NhcnkgZm9yIHBlZWluZz8gSSB3YXNoIGV2ZXJ5IHRpbWUgYnV0IEkgYW0gYSBkdWRlIGFuZCBpZiBJIHJlYWxseSB3YW50ZWQsIEkgY291bGQgcGFydCB0aGUgYm94ZXIgb3BlbmluZyBvbmx5IHRvdWNoaW5nIGNsb3RoLCB3aWdnbGUgbXkgd2F5IG91dCwgYW5kIGRvIG15IGJ1c2luZXNzIHdpdGhvdXQgZXZlciBldmVuIHRvdWNoaW5nIHNraW4uIApOb3Igc2hvdWxkIGl0IGJlLiBUaGVyZSBhcmUgaG93ZXZlciBsZWdhbCBzYWZlZ3VhcmRzIHRoYXQgcHJvaGliaXQgYWJ1c2Ugb2YgYSBkb21pbmFudCBwb3NpdGlvbiB3aXRoIHJlYWxseSBmYXZvdXJhYmxlIGV2aWRlbmNlIHJ1bGVzIGZvciB0aGUgQ29tcGV0aXRpb24vYW50aXRydXN0IGFnZW5jeSwgc28gSSBub3Qgd29ycmllZCBhYm91dCBwcmljZSBzZXR0aW5nLiAKVGhpcyBzdWIgaXMgc2xvdywgbm90IGRlYWQuIE1vc3QgZm9sa3MgcG9zdCB0byB0aGUgYmlnZ2VyIHN1YiwgYW5kIGV4dGVuZGVkIGRldGFpbGVkIGFuYWx5c2lzIGxpa2UgdGhpcyBpc24gcmVhbGx5IGEgYmlnIGhpdCBvdmVyIHRoZXJlLiBXZSBzcGVjaWZpY2FsbHkgZm9ybWVkIHRoaXMgc3ViIHRvIGJlIGZvciBtb3JlIGFkdmFuY2VkIHRvcGljcy4KU28gSSBhbSBzdXJlIHRoZSByaWdodCBkb2VzIHJlYWQgdGhpcyB0b28uIFdoZXJldmVyIHlvdSBoZWFyZC9yZWFkIHRoaXMgZnJpZW5kcyB1bmRlcnN0YW5kaW5nIG9mIHdobyBTYXVsIGlzIGFuZCByZWxhdGlvbnNoaXAgdG8gdGhlIERlbXMgbGVmdCBvdXQgdGhlIHJpZ2h0IHJlYWRpbHkgcmVhZHMgaXQgdG9vLiBJdCdzIG1lYW5pbmdsZXNzLiAKRmFjdCwgdGhlcmUgZXZlbiBhIGRhbmNlIHJlbWl4IG9mIHRoZSBtaW5pc3RlciBhbnRpIGhvbW8gcmVtYXJrcy4uIApUaGUgdHJ1dGggaXMsIHRoZSBhdmVyYWdlIHBlcnNvbiBkb2VzIG5vdCBjYXJlIGFib3V0IHdlbGwgdGhvdWdodCBvdXQsIHdlbGwgc291cmNlZCBkZWVwbHkgaW50ZWxsZWN0dWFsIGV4Y2hhbmdlcyBvZiBkaWFsb2d1ZS4gSWYgdGhlIGF2ZXJhZ2UgcGVyc29uIHVuZGVyc3Rvb2QgdGhlIGltcG9ydGFuY2Ugb2Ygd2VsbCBzb3VyY2VkIGFyZ3VtZW50cyBmYWtlIG5ld3MgYW5kIGEgZGlzYmVsaWVmIGluIGNsaW1hdGUgY2hhbmdlIHdvdWxkbid0IGJlIHRocmVhdGVuaW5nIHRoZSB2ZXJ5IGV4aXN0ZW5jZSBvZiBvdXIgc3BlY2llcyByaWdodCBub3cuClRodXMgb25lIG1heSBzb21ldGhpbmcgb3RoZXJzIG1heSBtaXNzLiBBbmQgdGhlbiB0aGVyZSBpcyB0aGUgaW1wcmVzc2lvbnMgd2UgcmVjZWl2ZSB0aGF0IG11c3QgdGhlbiBiZSBpbnRlcnByZXRlZCBieSB0aGUgc2FpZCBzZWVyLiAKVGhlIGRlc2lyZSB0byBmaXggbXkgb3duIGZhbWlseSdzIGlzc3VlcyBmdWVscyBhIHBhc3Npb24gcm9vdGVkIGRlZXAgaW4gYSBtb3RoZXIncyBwcm90ZWN0aXZlIGluc3RpbmN0cy4gCk91dCBvZiB0aGVzZSB0d28gYWxidW1zLCBzaGUgaGFzIGhhZCBzZXZlbiBzaW5nbGVzLiBKdXN0IERhbmNlLCBQb2tlciBGYWNlLCBMb3ZlR2FtZSwgUGFwYXJhenppIGFuZCBFaCwgRWggZnJvbSB0aGUgZmlyc3QgYWxidW0sIGFuZCBCYWQgUm9tYW5jZSwgVGVsZXBob25lIGFuZCBBbGVqYW5kcm8gZnJvbSB0aGUgc2Vjb25kIGFsYnVtLiAKSXMgaXQgb3Zlcmx5IGFuZ3N0eSBhbmQgbWVsbG93ZHJhbWF0aWM/IFN1cmUuIApLZXVyaWcgaXMgZGVlcGx5IGNvbW1pdHRlZCB0byB2b2x1bnRlZXJpc20gYW5kIGdpdmluZyBiYWNrIHRvIHRoZSBjb21tdW5pdHkuIEl0IGhhcyBhIGZvcm1hbCB2b2x1bnRlZXJpc20gcHJvZ3JhbSBpbiB3aGljaCBlbXBsb3llZXMgY2FuIGVuZ2FnZSB3aXRoIGEgY2hhcml0YWJsZSBvcmdhbml6YXRpb24gb2YgdGhlaXIgY2hvaWNlIGFuZCBhcmUgYWxsb3dlZCBhIGRlc2lnbmF0ZWQgbnVtYmVyIG9mIHBhaWQgaG91cnMgcGVyIHllYXIuICJPdXIgb2ZmaWNlcyBhcmUgbG9jYXRlZCBpbiB0aGUgZWFzdCBlbmQgbmVpZ2hib3Job29kIG9mIFNhaW50IE1pY2hlbCwgYSBjb21tdW5pdHkgdGhhdCBmYWNlcyBtYW55IGNoYWxsZW5nZXMsIiBzYXlzIFBpY2NvbG8uICJBIGxvdCBvZiBvdXIgdm9sdW50ZWVyIHdvcmsgaXMgZm9jdXNlZCBvbiBnaXZpbmcgYmFjayB0byB0aGUgY29tbXVuaXR5IHdoZXJlIHdlJ3JlIGxvY2F0ZWQuIgpTbyBuYXJ3aGFscyBoYXZlIGRldmVsb3BlZCBhbiBhYmlsaXR5IHRvIGZvcmVjYXN0IGljZSBmb3JtYXRpb25zIHVzaW5nIHRoZSBtb3RoZXIgb2YgYWxsIGJ1Y2tlZCB0ZWV0aC4gVGhleSBjYW4gYWxzbyBkZXRlY3QgdGVtcGVyYXR1cmUgYW5kIHdhdGVyIHByZXNzdXJlLCBhbmQsIHdoZW4gaXQncyBoZWxkIGFib3ZlIHRoZSB3YXRlciwgdGhlIHR1c2sgbWF5IGV2ZW4gYmUgYWJsZSB0byBkZXRlY3QgYmFyb21ldHJpYyBwcmVzc3VyZS4gQWxsIG9mIHRoaXMgd2l0aCBhIHNpbmdsZSwgZ2lnYW50aWMgdG9vdGguIkl0J3Mgbm9ybWFsbHkgbXVjaCBsb25nZXIsIGJ1dCB0aGlzIHdhdGVyIGlzIGZyZWV6aW5nISIuIApBcmFiIGFuZCBJc2xhbWljIFN0dWRpZXNBcmFiaWMgYW5kIElzbGFtaWMgU3R1ZGllcyBNQXJhYmljTWlkZGxlIEVhc3QgU3R1ZGllcyBCQUFydCBIaXN0b3J5IFZpc3VhbCBDdWx0dXJlQXJ0IEhpc3RvcnkgVmlzdWFsIEN1bHR1cmUgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSB3aXRoIEVtcGxveW1lbnQgRXhwZXJpZW5jZSAvIEVtcGxveW1lbnQgRXhwZXJpZW5jZSBBYnJvYWQgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSB3aXRoIFN0dWR5IEFicm9hZCBCQUFydCBIaXN0b3J5IFZpc3VhbCBDdWx0dXJlIGFuZCBDbGFzc2ljYWwgU3R1ZGllcyBCQUFydCBIaXN0b3J5IFZpc3VhbCBDdWx0dXJlIGFuZCBDbGFzc2ljYWwgU3R1ZGllcyB3aXRoIEVtcGxveW1lbnQgRXhwZXJpZW5jZSAvIEVtcGxveW1lbnQgRXhwZXJpZW5jZSBBYnJvYWQgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgQ2xhc3NpY2FsIFN0dWRpZXMgd2l0aCBTdHVkeSBBYnJvYWQgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgRHJhbWEgd2l0aCBFbXBsb3ltZW50IEV4cGVyaWVuY2UgLyBFbXBsb3ltZW50IEV4cGVyaWVuY2UgQWJyb2FkIEJBQXJ0IEhpc3RvcnkgVmlzdWFsIEN1bHR1cmUgYW5kIEVuZ2xpc2ggQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgRW5nbGlzaCB3aXRoIEVtcGxveW1lbnQgRXhwZXJpZW5jZSAvIEVtcGxveW1lbnQgRXhwZXJpZW5jZSBBYnJvYWQgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgRW5nbGlzaCB3aXRoIFN0dWR5IEFicm9hZCBCQUFydCBIaXN0b3J5IFZpc3VhbCBDdWx0dXJlIGFuZCBIaXN0b3J5IEJBQXJ0IEhpc3RvcnkgVmlzdWFsIEN1bHR1cmUgYW5kIEhpc3Rvcnkgd2l0aCBFbXBsb3ltZW50IEV4cGVyaWVuY2UgLyBFbXBsb3ltZW50IEV4cGVyaWVuY2UgQWJyb2FkIEJBQXJ0IEhpc3RvcnkgVmlzdWFsIEN1bHR1cmUgYW5kIEhpc3Rvcnkgd2l0aCBTdHVkeSBBYnJvYWQgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgTW9kZXJuIExhbmd1YWdlcyBCQUFydCBIaXN0b3J5IFZpc3VhbCBDdWx0dXJlIGFuZCBGaWxtIFN0dWRpZXMgQkFBcnQgSGlzdG9yeSBWaXN1YWwgQ3VsdHVyZSBhbmQgRmlsbSBTdHVkaWVzIHdpdGggU3R1ZHkgQWJyb2FkIEJBQXJ0IEhpc3RvcnkgVmlzdWFsIEN1bHR1cmUgYW5kIEZpbG0gU3R1ZGllcyB3aXRoIEVtcGxveW1lbnQgRXhwZXJpZW5jZSAvIEVtcGxveW1lbnQgRXhwZXJpZW5jZSBBYnJvYWQgQkEKSnVzdCBkb24gZXhwZWN0IHRoaW5ncyB0byBnZXQgeW91IHRoZXJlLiAKVGhlcmUgYXJlIG90aGVycyBsaWtlIHlvdSBhbmQgeW91IG5lZWQgdG8gZ28gZ2V0IHByb2Zlc3Npb25hbCBoZWxwLiAKV2FzaCB0aGUgYmFieSdzIGhhaXIuIApDYXR0bGUgQ28uIFByb2R1Y2VzIGFydGlzYW4gYmVlZiB0aGF0IHByaW1hcmlseSBncmFzcyBmZWQgd2l0aCBhbiBldGhpYyBvZiBjb25zZXJ2YXRpb24gYW5kIGh1bWFuZSB0cmVhdG1lbnQsIG5vIGFudGliaW90aWNzIGFuZCwgV29vZCBzYWlkLCBubyBzaG9ydGN1dHMuIApBbHNvLCBhcyBtdWNoIGFzIHRoaXMgc3Vja3MsIHNoZSdzIHNob3duIHlvdSBhIHZlcnkgdmFsdWFibGUgZXhhbXBsZSBvZiBleGFjdGx5IGhvdyBtdWNoIHNoZSByZXNwZWN0cyB5b3UgYW5kIHlvdXIgYm91bmRhcmllcy4gClNvbWUgb2YgdGhlIGFkdWx0cyB3b3VsZCBldmVuIGxldCB5b3UgbGVhc2ggdGhlbSB1cCBhbmQgdGFrZSB0aGVtIGZvciBhIHdhbGssIGp1c3Qgd2F0Y2ggb3V0IGZvciB0aGUgaG9ybnMuLiAKVGhhdCBzYWlkLCB0cnkgbm90IHRvIGVuZ2FnZSBpbiBwb2xpdGljYWwgb3IgZW1vdGlvbmFsbHkgY2hhcmdlZCBjb21tdW5pY2F0aW9ucyBvciBleGNoYW5nZXMgb24gYSB3b3JrIHBsYXRmb3JtLiBJdCBvcGVucyBib3RoIG9mIHlvdSB1cCBmb3IgcG90ZW50aWFsIHJlcGVyY3Vzc2lvbnMgYW5kIGlzbiBiZXN0IHByYWN0aWNlcyBwcm9mZXNzaW9uYWxseS4gU2F2ZSB0aG9zZSBjb252ZXJzYXRpb25zIGZvciBwZXJzb25hbCBzb2NpYWwgcGxhdGZvcm1zIGluIHRoZSBmdXR1cmUuCkhvd2V2ZXIsIHRoaXMgc29mdHdhcmUgaXMgb25seSB0d28gc3RlcHMuIApCdXQgaW4gdGhlIGxhdGVzdCByZXBvcnQsIE1yIER1Y2sgc2F5cyB0aGF0ICJmb3J0dW5hdGVseSBjb21tb25zZW5zZSBoYXMgcHJldmFpbGVkIi4gIlRoZSBpbnRyb2R1Y3Rpb24gdG8gY29tZSBvZiB2b2x1bnRhcnkgcHJlICBjb21taXRtZW50IHNob3VsZCBhc3Npc3Qgd2l0aCBwcm9ibGVtIGdhbWJsaW5nIHdpdGhvdXQgaGF2aW5nIGFueSBtYWpvciBlZmZlY3Qgb24gdGhlIGFiaWxpdHkgb2YgdGhvc2Ugd2hvIGZpbmQgZW5qb3ltZW50IGluIGdhbWJsaW5nIHRvIHB1cnN1ZSB0aGVpciBmYXZvdXJpdGUgcGFzdGltZSwiIGhlIHNheXMuIApTbyByZW1lbWJlciwgZG9uJ3QgY2hvb3NlIHRoZSBmaXJzdCBkZXNpZ24geW91IGxpa2UuIFRha2UgdGhlIHRpbWUgYW5kIHNlYXJjaCB0aHJvdWdoIG1hbnkgb3RoZXIgZGVzaWducyBiZWZvcmUgeW91IG1ha2UgYSBmaW5hbCBkZWNpc2lvbi4gUmVtZW1iZXIsIHlvdSdyZSBwbGFubmluZyB0byB3ZWFyIHRoaXMgZm9yZXZlci4uIApBbHdheXMgc2VlIGhvdyB5b3UgZmVlbCBhZnRlciBvbmUgb3IgYW5vdGhlciBmb29kIGFuZCBkb24gZWF0IGFueW1vcmUgaWYgaXQgbWFrZXMgeW91IGZlZWwgbGF6eSBvciB0aXJlZC4uIApJZiB5b3Ugd2FudCB0byBiZSBwYWlkIG9yIGhhdmUgc29tZXRoaW5nIGNvbnRyaWJ1dGVkLCBjb21tb24gY291cnRlc3kgZGljdGF0ZXMgdGhhdCB5b3Ugc2hvdWxkIHJlcXVlc3QgaXQgYXQgdGhlIHRpbWUgb2YgdGhlIGludml0YXRpb24sIHNvIHRoZSBndWVzdCBjYW4gZGVjaWRlIHdoZXRoZXIgdGhleSBhYmxlIHRvIGFmZm9yZCB0byBhdHRlbmQuIEkgd291bGQgbm90IGF0dGVuZCBhIG1lYWwgdGhhdCB3aWxsIGNvc3QgbWUgJDEzIGJlY2F1c2UgSSBicm9rZSBhbmQgY2FuIGVhdCBmb3IgJDMgb3IgbGVzcyBhdCBob21lLgoiVGhlcmUncyBubyBkb3VidCBpbiBteSBtaW5kIHRoYXQgdGhleSBrbmV3IHdobyB0aGUgcGVyc29uIHdhcyBpbnNpZGUgdGhlaXIgaG91c2UsICIgaGUgcmVwbGllZC4gCkxlbyBSb2dnZSwgQ2hhaXJtZW4gb2ZVaGUgVGVycml0b3IgIGlhbCBJbnN0aXR1dGlvbnMgQ29tbWl0dGVlcyBvZiB0aGUgcmVzcGVjdGl2ZSBob3VzZXMuLCB3aGVuIGl0IHdhcyBmb3UnbmQgdGhlIG1vdG9yc2hpcCBOb3J0aGxhbmQgaGFkIG9ubHkgbmluZSBhdmFpbGFibGUuIApJIHRha2UgZHJpdmluZyB2ZXJ5IHNlcmlvdXNseS4gSSBhbHdheXMgY2hlY2ssIGtlZXAgbXkgZGlzdGFuY2UsIGluZGljYXRlLCB5b3UgbmFtZSBpdC4gQnV0IEkgY29tcGxldGVseSBhZ3JlZSB0aGF0IGl0IGJyZWVkcyBsYWNrIG9mIGNhcmUsIGFuZCBpdCBzdWNoIGEgc2hhbWUgdGhhdCBzbyBtYW55IHBlb3BsZSBzdWNrIHRoYXQgbXVjaC4gClNvIGl0J3MgYSByaXNrIGVpdGhlciB3YXkuIApBdCBmYWNlIHZhbHVlIHlvdSBhbG1vc3QgbWFrZSBhIHNvdW5kIGFyZ3VtZW50LCBidXQgeW91ciBpbnRlbmRlZCBwb2ludCBpcyBvbmx5IG1hZGUgbGVzcyBieSB1c2luZyB0aGF0IGZsYXdlZCBleGFtcGxlLgpJbnN0ZWFkLCBhcHBseSBzb21lIGhlYXZ5IGVycm9yIGNvcnJlY3RpbmcgYW5kIGVuY29kZSBzZXZlcmFsIGNvcGllcyBpbnRvIHRoZSBETkEuClNvIGV2ZXJ5IHRpbWUgc2hlIGhhbmRlZCBtZSBhbmQgbXkgYnJvdGhlciBmb29kIG9yIGEgZHJpbmssIHNoZSB3b3VsZCBnaXZlIGhpbSBmaXJzdCBhbmQgcHJhaXNlIGhpbSwgdGhlbiBzaG92ZSBzb21ldGhpbmcgYXQgbWUgYW5kIHNheSwgIkRvbiBzcGlsbCB0aGlzLiBZb3Ugc3BpbGwgZXZlcnl0aGluZy4iIFNvIEkgcmVtZW1iZXIgb25lIHRpbWUgYmVpbmcganVzdCBzbyBzaWNrIG9mIGhlciBwcmVkaWN0YWJsZSBidWxsc2hpdCB0aGF0IEkgbG9va2VkIGhlciBpbiB0aGUgZXllIGFuZCBkdW1wZWQgdGhlIEtvb2wgQWlkIChpdCB3YXMgdGhlIDgwcykgaW50byB0aGUgc2hhZyBjYXJwZXQuIApIaXMgbW9zdCBzaWduaWZpY2FudCBjaGFsbGVuZ2UgY2FtZSBmcm9tIHRoZSBmYWN0IGhlIHdhcyBhZGFtYW50IHRvIGtlZXAgcHJvZHVjdGlvbiBpbiBDYW5hZGEuLiAKR3JlYXQgd3JvdGUgdXAgYXMgYWx3YXlzISBTYXphZSBzYW4gaXMganVzdCBvbmUgb2YgdGhvc2UgdGhpbmdzIHRoYXQgSSBmZWVsIHRoYXQgZXZlcnkgYW5pbWUgZmFuIHNob2QgYXQgbGVhc3QgaGF2ZSBhIGdlbmVyYWwgdW5kZXJzdGFuZGluZyBvZiBnaXZlbiBpdHMgcG9wdWxhcml0eS4gSXQgaXMgaW50ZXJlc3RpbmcgdGhhdCB0aGVyZSBpcyB0aGlzIGdyb3VwIG9mIHNob3dzIHN1Y2ggYXMgU2F6YWUgc2FuLCBDcmF5b24gU2hpbiBjaGFuLCBEb3JhZW1vbiwgZXRjIHRoYXQgdGhlIFdlc3Rlcm4gZmFuZG9tIGRvZXNuIHJlYWxseSBrbm93IGFib3V0IGxldCBhbG9uZSBjYXJlcyBhIG91dCBhbmQgeWV0IHRoZXkgYXJlIHByb2JhYmx5IHRoZSBtb3N0IHBvcHVsYXIgYW5pbWUgb3V0IHRoZXJlLiAKVHJ1bXAgYWxzbyB3YW50cyB0byBjdXQgdGhlIHNvYXJpbmcgVVMgdHJhZGUgZGVmaWNpdCB3aXRoIENoaW5hLCB3aGljaCBpbiAyMDE3IGhpdCBhIHJlY29yZCAkMzc1IGJpbGxpb24sIG5vdCBpbmNsdWRpbmcgdHJhZGUgaW4gc2VydmljZXMuCkkgb25seSBiZWVuIHBsYXlpbmcgdGhpcyBnYW1lIGZvciAzIGRheXMgKDRkYXlzIGdhbWUgdGltZSkgYW5kIGhhdmUgd2F0Y2hlZCBhIGZldyB2aWRlb3Mgb24geW91dHViZSBhbmQgc3VyZmVkIHJlZGRpdCBsb29raW5nIGZvciBpbmZvcm1hdGlvbiBhcyBJIGdldCBzdGFydGVkLiBFdmVyeW9uZSBzYXlzIHRoZSBzYW1lIHRoaW5nLCBDaGFuZyBpcyBidXN0ZWQgYW5kIGEgbXVzdCBoYXZlIHVuaXQuClRoZXJlIGlzIGEgdGhpbmcgY2FsbGVkIG9waW9pZCBpbmR1Y2VkIGFuZHJvZ2VuIGRlZmljaWVuY3kuIApUZ3JhbmRpZmxvcmEgdQpUdXJuIHdhcyBhYm91dCAxLzMgcG90LiBCYXNpY2FsbHkgaGUgd2VudCBwcmV0dHkgc21hbGwgb24gZWFjaCBzdHJlZXQuIApUaGV5IGFyZSBvdXQgdGhlIG1vbmV5IHNwZW50IG9uIHByb2R1Y3Rpb24gKGFuZCBwZXJoYXBzIGdob3N0IHdyaXRpbmcpIGJ1dCB0aGV5IGdldCBhbGwgdGhlIHByb2ZpdCB0aGF0IG1pZ2h0IGFwcGVhci4gClNoZSBoYWQgYSBib3lmcmllbmQgYmFjayBpbiBDQSBidXQgYWZ0ZXIgc2hlIGNhbWUgaGVyZSwgdGhlaXIgcmVsYXRpb25zaGlwIHdlbnQgZG93bmhpbGwgYnV0IHRoZXkgc3RheWVkIHRvZ2V0aGVyLiAKTWF5YmUgdGhleSB3b3VsZCBoYXZlIGRvbmUgaXQgb3RoZXJ3aXNlIHRvbywgYnV0IHRoZXkgYWxsICgxNy8yMCB3ZXJlIHJlZ3VsYXJzIG9yIHNvIGFuZCB0aGUgMyBuZXcgb2YgdXMgd2VyZSBvdXQpIHBsYXkgdmVyeSBvZnRlbiBhbmQgSSBmZWx0IHRoZXkgd2VyZSBqdXN0IHdhaXRpbmcgZm9yIG1lIHRvIGJ1c3QuIApBbiBvdXRyZWFjaCB3b3JrZXIgdG8gaGVscCB0aGUgY2l0eSdzIGhvbWVsZXNzLCBoaXJlZCBmb3Igb25lIHllYXIgbGFzdCB5ZWFyLCB3b3VsZCBiZWNvbWUgYSBwZXJtYW5lbnQgZW1wbG95ZWUgdW5kZXIgdGhpcyBwcm9wb3NlZCBidWRnZXQuIEFuZCBhbiBleHRyYSAkNTAwLDAwMCBpcyBhbGxvdHRlZCB0byBwcm92aWRlIGFkZGl0aW9uYWwgc3BhY2UgaW4gZW1lcmdlbmN5IHNoZWx0ZXJzLCBhbm90aGVyIHJlY29nbml0aW9uIG9mIHRoZSBob21lbGVzc25lc3MgcHJvYmxlbS4gCkdlcmlhdHJpYyBJYmFrYSB1ClNoZSBhbmQgSSBzdGFydGVkIG91dCBhcyBmcmllbmRzICh0aG91Z2ggdGVudGF0aXZlbHkgYmVjYXVzZSBoZXIgYWdncmVzc2l2ZSBwZXJzb25hbGl0eSB3YXMgb2ZmcHV0dGluZyBmcm9tIHRoZSBiZWdpbm5pbmcpLCBidXQgaGVyIGluY3JlZGlibGUgb3V0YnVyc3RzIG9mIHJhZ2Ugd291bGQgZXZlbnR1YWxseSBjcmVhdGUgYW4gdW5kZXJjdXJyZW50IG9mIGNvbnN0YW50IHRlbnNpb24gYW5kIGFwcHJlaGVuc2lvbiBiZXR3ZWVuIHVzLiBBdCBmaXJzdCBpdCB3YXNuJ3QgZGlyZWN0ZWQgYXQgbWUsIGJ1dCB3aGVuIGl0IHdhcyBpdCB3YXMgYXdmdWwuIApNeSBzb24gd2lsbCBiZSA1IGluIEFwcmlsIGFuZCBoZSBzb3VuZHMgbGlrZSB5b3VyIGNoaWxkLCAiaGlnaCBzcGlyaXRlZCIuIFRoaXMgY2hpbGQgYnJpbmdzIG1lIHRvIG15IGtuZWVzLiBIZSBqdXN0IERPRVMgTk9UIGJhY2sgZG93biBhbmQgc2luY2VyZWx5IERPRVMgTk9UIExJU1RFTi4gSWYgSSBoYWQgYSBwZW5ueSBmb3IgaG93IG1hbnkgdGltZXMgdGhpcyBraWRzIGhhcyB0b2xkIG1lIGhlIGhhdGVzIG1lIG9uIGEgZGFpbHkgYmFzaXMsIEkgc3VyZSBJIGNvdWxkIGFmZm9yZCBhIGx1eHVyeSB0cmlwIHNvbWV3aGVyZSBleG90aWMuIEl0IHRydWx5IGhhcmQgdG8gc3RheSBsZXZlbCBoZWFkZWQgYW5kIHRha2UgdGhlIGhpZ2ggcm9hZCBjb25zaXN0ZW50bHkgd2l0aCB0aGlzIGtpZC4gSSBOT1csIGZ1bGx5IHVuZGVyc3RhbmQgd2hhdCBtYWtlcyBwYXJlbnRob29kIGRpZmZpY3VsdC4KUydpbCBuJ3kgYSBhdWN1biBhdSBkZWwgZGUgbGEgc3VydmllIGF1Z21lbnRlLCBhdWN1biBwb2ludCBvIGVsbGUgcG91cnJhaXQgY2Vzc2VyIHNhIGNyb2lzc2FuY2UsIGMnZXN0IHBhcmNlIHF1J2VsbGUgbidlc3QgcGFzIGVsbGUgbW1lIGF1IGRlbCBkZSBsYSBwcml2YXRpb24sIG1haXMgcXUnZWxsZSBlc3QgbGEgcHJpdmF0aW9uIGRldmVudWUgcGx1cyByaWNoZS4gCk5ldyBZb3JrIENpdHkgTWF5b3IgQmlsbCBkZSBCbGFzaW8gaXMgdGVsbGluZyBEZW1vY3JhdHMgaW4gSW93YSB0aGF0IGhlIGhhcyBub3QgInJ1bGVkIG91dCBhIHJ1biBmb3IgcHJlc2lkZW50LiIKT3BlbiB5b3VyIG1vdXRoIGEgbGl0dGxlIHdheSwgYW5kIGxldCB0aGUgd2F0ZXIgZHJhaW4gb3V0IHNsb3dseS4gV2hpbGUgdGhlIHdhdGVyIGRyYWlucyBmcm9tIHlvdXIgbW91dGgsIGJyZWF0aGUgaW4gYW5kIG91dCB0aHJvdWdoIHlvdXIgbm9zZS4uIApJIGRpZG4ndCBsZWFybiBvbmUgdGhpbmcgaW4gaGlnaCBzY2hvb2wgb3IgY29sbGVnZS4gClRoaXMgaXMgbXkgc2Vjb25kIHNob3QgYXQgdGhlIHRpdGxlLiBXaGVuIEkgY2hhbGxlbmdlZCBXbGFkaW1pciBLbGl0c2Noa28gSSBjb3VsZG4gZ2V0IHRoZSBqb2IgZG9uZS4gQnV0IG5vdyBJIGFtIHJlYWR5IGZvciB0aGUgYmlnIG9uZS4gVGhlIG5hbWUgTWF4IFNjaG1lbGluZyBpcyBubyBidXJkZW4gdG8gbWUgYnV0IGFuIGV4dHJhIG1vdGl2YXRpb24uIEkgd2lsbCB3aW4gdGhpcyB0aXRsZSBmb3IgR2VybWFueS4gaGVhZCBjb2FjaCBQZWRybyBEaWF6IGRpZG4gd2FudCB0byBzYXkgYW55dGhpbmcgYXQgdGhlIHByZXNzIGNvbmZlcmVuY2UgYWNjb3JkaW5nIHRvIGhpcyBtb3R0bzogc3BlYWsgbG91ZGVyIHRoYW4gd29yZHMgVGhlIGZvcm1lciBDdWJhbiBuYXRpb25hbCBjb2FjaCB3aG8gaGFzIGhhZCBodWdlIHN1Y2Nlc3MgYXQgdGhlIHBybyBzdGFnZXMgYXMgd2VsbCBoYXMgam9pbmVkIFRlYW0gQ2hhZ2FldiB0aHJlZSBtb250aHMgYWdvLiAKRmluZCBhbiBhY3Rpdml0eSB5b3UgbWlnaHQgZW5qb3kuIApPbiBwZXV0IHZpZGVtbWVudCByZWdyZXR0ZXIgcXVlIGxlcyBoYWJpdGFudHMgZGUgY2VzIHF1YXJ0aWVycyBuZSBkaXNwb3NlbnQgcGx1cyBkJ2F1dG9saWJzICBwcm94aW1pdCBkZSBjaGV6IGV1eC4gSWwgbmUgZmF1ZHJhaXQgcGFzIHF1ZSBsZXMgcXVhcnRpZXJzIHBvcHVsYWlyZXMgc29pZW50IHByaXZzIGQndW4gc2VydmljZSBvZmZlcnQgIGwnZW5zZW1ibGUgZGVzIHBhcmlzaWVucywgdW5lIGRvdWJsZSBwZWluZSBlbiBxdWVscXVlIHNvcnRlLiBMZSB2cmFpIHByb2JsbWUgZGUgZm9uZCByZXN0ZSB0b3V0ZWZvaXMgdG91dGVzIGNlcyBwZXJzb25uZXMgIGxhIHJ1ZSwgc2FucyBhYnJpLCBuZSBsJ291Ymxpb25zIHBhcywgZXQgY2V0dGUgZm9pcyBsYSBiYWxsZSBlc3QgZGFucyBsZSBjYW1wIGRlIGwnRXRhdCwgb3UgZGUgbGEgVmlsbGUsIHBhcyBkZSBsYSBwcmZlY3R1cmUgTGUgY29tbWlzc2FpcmUgc3VnZ3JlIHF1J29uIHJlbmRlIGxlIHF1YXJ0aWVyIHByaW9yaXRhaXJlIGVuIG1hdGlyZSBkZSBtaXNlICBsJ2FicmkgZXQgZCdoYmVyZ2VtZW50IGRhbnMgbGUgY2FkcmUgZHUgcGxhbiBoaXZlcm5hbC4gCk90aGVyIGludGVybmF0aW9uYWwgb3BlcmF0b3JzIGFyZSBhZ2FpbiB0YXJnZXRpbmcgTGFzIFZlZ2FzIGFzIHBhcnQgb2YgdGhlaXIgZ3Jvd3RoIHN0cmF0ZWdpZXMgd2l0aCBiaWcgbXVsdGkgdXNlIHByb2plY3RzLiBGdXJ0aGVyIG5vcnRoIG9uIHRoZSBTdHJpcCwgTWFsYXlzaWFuIGRldmVsb3BlciBHZW50aW5nIEdyb3VwIGJyb2tlIGdyb3VuZCBsYXN0IHllYXIgb24gYSAkNGJuIENoaW5lc2UgdGhlbWVkIGNhc2lubyByZXNvcnQsIGF0IGEgbmVhcmx5IDM2IGhlY3RhcmUgc2l0ZSB0aGF0IGhhZCBzYXQgaWRsZSBzaW5jZSBBdWd1c3QgMjAwOC4gTmV4dCBkb29yLCBBdXN0cmFsaWEncyBDcm93biBSZXNvcnRzIGFyZSBidWlsZGluZyBhbiBleHBhbnNpdmUgbmV3IHByb3BlcnR5LgpTaGUgaGFzIG5vIGlkZWEgYWJvdXQgZXRpcXVldHRlIG9yIHdoYXQgeW91IGRvIHRoZXJlLiBTaGUgd2FzIGFsc28gc3RpbGwgcmF0aGVyIGlubm9jZW50IGFuZCBvYmxpdmlvdXMgYXQgdGhhdCBhZ2UuIFZlcnkgc2hlbHRlcmVkIGZyb20gaGVyIHJlbGlnaW91cyBmYW1pbHkuIAooZWQuKSBTcG9ydCBhbmQgdGhlIEJyYWluOiBUaGUgU2NpZW5jZSBvZiBQcmVwYXJpbmcsIEVuZHVyaW5nIGFuZCBXaW5uaW5nLCBQYXJ0IEIgRWxzZXZpZXIuIApUaGUgaW5pdGlhbCBjbGFpbSB3YXMgYWJvdXQgd2VhbHRoIGJlaW5nIGluaGVyaXRlZC4gUmVzZWFyY2ggaGFzIHNob3duIG5lYXJseSA5NSUgb2Ygd2VhbHRoIGlzIGluaGVyaXRlZC4gSSBwcm92aWRlZCBzb3VyY2VzLiBZb3UgZGlzYWdyZWVkIGFuZCBwcm92aWRlZCB2ZXJ5IGR1YmlvdXMgYW5lY2RvdGFsIGV2aWRlbmNlLiBJIGFtIG1lcmVseSBxdWVzdGlvbmluZyBpdCBhbmQgeW91IGtlZXAgcHJlc3NpbmcgdGhhdCB5b3Uga25vdyBub24gcHJhY3RpY2luZyBkb2N0b3JzIGFuZCBwcmVzaWRlbnRzIHRvIGluc3VyYW5jZSBjb21wYW5pZXMgd2hpbGUgYXQgdGhlIHNhbWUgdGltZSBzYXlpbmcgbW9zdCBvZiB0aGVtIHVzZSB0dXJibyB0YXggYW5kIGtlZXAgbW92aW5nIHRoZSBnb2FscG9zdHMgYW5kIGNoYW5naW5nIHRoZSBzdWJqZWN0LiBUaGlzIGhhcyBub3RoaW5nIHRvIGRvIHdpdGggQ3ViYW4gaW1taWdyYW50cyBvciBJdGFsaWFucyBvciB0aGUgSXJpc2ggb3IgTWV4aWNhbnMuIE5vIG9uZSBpbiB0aGVpciByaWdodCBtaW5kLCB3aG8gaGFzIHNvbGQgYSBjb21wYW55IHdvcnRoIGEgaHVuZHJlZCBtaWxsaW9uIChldmVuIGFib3ZlIDcgbWlsbGlvbikgd2lsbCBiZSB1c2luZyB0dXJib3RheCBpZiB0aGUgc2FsZSBpcyB0aHJvdWdoIGxlZ2FsIGFuZCBsZWdpdGltYXRlLCBtZWFuaW5nIHRoYXQgeW91IGFyZSBwYXlpbmcgdGhlIG5lY2Vzc2FyeSB0YXhlcyBhbmQgaGF2ZSB0aGUgbmVjZXNzYXJ5IGRvY3VtZW50cy4gVGhleSB3b3VsZCBiZSBsb3Npbmcgb3V0IG9uIG1pbGxpb25zIG9mIGRvbGxhcnMgd29ydGggb2YgaW5jZW50aXZlcyBhbmQgYm9udXNlcyBmb3IgdGhlbXNlbHZlcy4gU28gZWl0aGVyIHlvdSBzcGV3aW5nIG5vbnNlbnNlLCBvciB0aGVzZSBwZW9wbGUgd2hvIGhhdmUgaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyBidXQgdXNlIHR1cmJvdGF4IGRpZCBub3QgYXR0YWluIHRoZWlyIG1vbmV5IGxlZ2FsbHkuCkV2ZXJ5Ym9keSBlbHNlIGluIHRoZSBmYW1pbHkgdmFuaXNoZWQgb3IgZGllZC4uIApUaGUgdGltaW5nIGNvdWxkbid0IGhhdmUgYmVlbiB3b3JzZSBmb3IgT2xoYSBTdHVwYWssIHdobyB3YXMgb25lIG9mIHRoZSBjYXNpbm8ncyBzZW5pb3Igc3VwZXJ2aXNvcnMuIFdpdGggYSBjaGlsZCBhYm91dCB0byBlbnRlciB1bml2ZXJzaXR5LCBjYXIgbG9hbiByZXBheW1lbnRzIHRvIG1ha2UgYW5kIHJlbnQgdG8gcGF5LCBzaGUncyBnb2luZyB0byBzdHJ1Z2dsZSB0by4gCkkgZXZlbnR1YWxseSBnbyBpbnNpZGUgYW5kIGZlbHQgdGhpcyBodWdlIHdlaWdodCBhbGwgYXJvdW5kIG15IGJvZHkgc28gSSBxdWlja2x5IHBlZWQgYW5kIGJvbHRlZCBvdXQuIEFzIEkgd2VudCB0byByZWpvaW4gdGhlIGdyb3VwLCBhIGxpdHRsZSBib3kgdGhhdCB3YXMgd2l0aCB0aGUgdG91ciB3YXMgdGVsbGluZyBoaXMgbW9tIHRoYXQgdGhlIGJhdGhyb29tIGZlbHQgd2VpcmQuIEkgaGFkbiBldmVuIHRhbGtlZCB0byBoaW0gb3IgYWNrbm93bGVkZ2VkIGhpbSBhbmQgeWV0IGhlIGZlbHQgdGhlIHNhbWUgdGhpbmcuIApJdCdzIGdvaW5nIHRvIGJlIGEgZmllcmNlIGZpZ2h0IGRvd24gdGhlIHN0cmV0Y2g7IHdlJ3JlIGZvdXIgd2Vla3MgZnJvbSB0aGUgZmluaXNoIGxpbmUuLiAKSmUgc3VpcyBlbiBsaWduZSBhdmVjIHNlcyBjb252aWN0aW9ucyBxdWkgdmlzZW50ICBkb25uZXIgZGUgbCdhdXRvbm9taWUsICBhcHByZW5kcmUgIHNlIGZhaXJlIGNvbmZpYW5jZSBwZXUgIHBldSBlbiBjdWlzaW5lIHBvdXIgcydvcmdhbmlzZXIgc2FucyBzdHJlc3MsIGRjbGluZXIgZGVzIGJhc2lxdWVzLCBpbXByb3Zpc2VyLCBhY2NvbW1vZGVyIGxlcyByZXN0ZXMgZGUgZmFvbiBhcHB0aXNzYW50ZS4uIApUaGlzIGlzIGNhbGxlZCBhICdsZXQnICAgZmlyc3Qvc2Vjb25kIHNlcnZpY2UsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBzZXJ2ZXIgaXMgb24gdGhlIGZpcnN0IG9yIHNlY29uZCBzZXJ2ZS4gClRoZSByZWFzb25zIHdlIGRvIHRoaXMgYXJlIGNvbXBsaWNhdGVkLiBQYXJ0bHkgaXQgaXMgYmVjYXVzZSB3ZSBhcmUgYSBjdWx0dXJlIGJvcm4gb2YgYSBtaWRkbGUgY2xhc3MgcmV2b2x1dGlvbiBhYm91dCAxMDAgeWVhcnMgYWdvIHdoZW4gdGhlIHVwcGVyIGNsYXNzZXMgKGFuZCBsb3dlciBjbGFzc2VzKSB3ZXJlIGRlbmllZCBwb3dlciBieSB2aXJ0dWUgb2YgbWlkZGxlIGNsYXNzIGRpc2NpcGxpbmUuIFRoZSBtaWRkbGUgY2xhc3NlcywgaXQgd2FzIGNsYWltZWQsIGhhdmUgbW9yZSB3b3JrIGRpc2NpcGxpbmUsIG1hcml0YWwgZGlzY2lwbGluZSwgYm9kaWx5IGRpc2NpcGxpbmUsIGFuZCBzZXh1YWwgZGlzY2lwbGluZS4gVGhlcmVmb3JlIHRoZSBtaWRkbGUgY2xhc3NlcyBhcmUgbW9yZSBmaXQgdG8gcnVsZSAodGhpcyBpcyBwcm9iYWJseSB3aHkgODAlIG9mIEFtZXJpY2FucyBpZGVudGlmeSBhcyBtaWRkbGUgY2xhc3MgIHdobyB3YW50cyB0byBiZSB1bmRpc2NpcGxpbmVkPykuCkluIE5ldyBaZWFsYW5kIGRvbGxhcnMsIGF0IGN1cnJlbnQgZXhjaGFuZ2UgcmF0ZXMsIEJlYXRvbiBzaGFyZSB3b3JrcyBvdXQgYXQgJDQwLjUgbWlsbGlvbiAgIGVub3VnaCB0byBiZSBrbm9ja2luZyBvbiB0aGUgZG9vciBvZiB0aGUgTmF0aW9uYWwgQnVzaW5lc3MgUmV2aWV3IHJpY2ggbGlzdCAobWluaW11bSB3ZWFsdGggbmVlZGVkLCAkNTAgbWlsbGlvbikgZXZlbiB0aG91Z2ggaGUgaXMgeWV0IHRvIGNlbGVicmF0ZSBoaXMgMjFzdC4KTWlsYWR5ZWxsZSB1CkhvdyB0byBMZWFybiBQb2tlciBQZXJjZW50YWdlcwpRUSBvbiB0aGUgYnV0dG9uIHZpbGxpYW4gcmFpc2VzIHRvIC4xNSBJIHJlcmFpc2UgdG8gMzAuIApSZXNwb25zZSBvZiB0aGUgUnVzc2lhbiBnb3Zlcm5tZW50IGluIHRoZSBwYXN0IGhhcyBiZWVuIHRvIGluY3JlYXNlIHRoZSB1c2Ugb2YgZm9yY2UgYW5kIG1pbGl0YXJ5IG1pZ2h0IHRvICJjbGFtcCBkb3duIiBvbiBNdXNsaW0gZXh0cmVtaXNtLiBUaGUgY3VycmVudCBNZWR2ZWRldiByZWdpbWUgaGFzIHNwb2tlbiBvZiBhZGRyZXNzaW5nIHRoZSBzeXN0ZW1pYyBjYXVzZXMgb2YgdGVycm9yaXNtIChsaWtlIHVucmVsZW50aW5nIHBvdmVydHkpLCB0aGUgbWFuIGJlaGluZCB0aGUgY3VydGFpbiwgVmxhZGltaXIgUHV0aW4sIHdhbnRzIHRvIHJ1bGUgd2l0aCBhbiBpcm9uIGZpc3QuLiAKT3Igb3ZlciB0aGUgZmxpcHNpZGUsIGEgdW5jb25zdHJ1Y3RpdmUgcmVzdWx0IG1heSBwb3NzaWJseSB3ZWxsIGRydWRnZSB3YXkgdXAgYSBhbW91bnQgb2Ygb2Ygc2V2ZXJhbCBpZGVhcy4gClRoZSBidXNpbmVzcywgdGhvdWdoICgidGhlIGJ1aWxkaW5ncyBhdHRhY2tlZCBieSBmaXJlIiksIHRoZSBvbmVzIGNvbnN1bWVkIGJ5IGZpcmUsIGFyZSBtb3N0bHkgaW4gdGhlbXNlbHZlcyBjb25zdW1lZCBub3cgYnkgdGltZS4gQmxhY2tpbmcgbWFrZXJzLCBicmFzcyBmb3VuZGVycywgYnJ1c2ggbWFrZXJzLCBjYXJ2ZXJzIGFuZCBnaWxkZXJzLCBjb2FjaG1ha2VycywgY29vcGVycywgZmVsdG1vbmdlcnMsIGZyaW5nZSBtYWtlcnMsIGxhbXBibGFjayBtYWtlcnMsIG1pbGttZW4sLCAsIG9pbCBhbmQgY29sb3IgbWVuLCByYWcgbWVyY2hhbnRzLCBzYWNrIG1ha2Vycywgc2NhbGVib2FyZCBtYWtlcnMsIHN0cmF3IGJvbm5ldCBtYWtlcnMsIHRpbm1lbiwgYW5kIHdhZGRpbmcgbWFrZXJzLCBhcmUgYWxsIHByZXR0eSBtdWNoIGdvbmUgYXMgc3RhbmRhcmQgZW50ZXJwcmlzZXMuIFRoZSB0dXJuIGluIHRoZSByb2FkIG9uIHJvYWQgc2lnbnMgaGVyZSB3YXMgdG8gcGFpbnQgdGhlIGRlc3RpbmF0aW9uIGluIGJsYWNrIG9uIGEgZmllbGQgb2Ygd2hpdGUsIGFjY29tcGFuaWVkIGJ5IGEgcG9pbnRpbmcgaGFuZC4gClRoZSBmaWxtIGJlZ2lucyB3aXRoIFdhbHQgRGlzbmV5IGFuZCBoaXMgdGVhbSBtYWtpbmcgYSBqb3VybmV5IHRvIFNvdXRoIEFtZXJpY2EuIFRoZSBmaXJzdCBzdG9wIGlzIExha2UgVGl0aWNhY2EgaW4gQm9saXZpYS4gVGhlcmUgdGhlIERpc25leSBhcnRpc3RzIHNrZXRjaCBwZW9wbGUgYW5kIHNjZW5lcy4gCkdhbWJsaW5nIGF0dHJhY3RzIGl0cyBmYWlyIHNoYXJlIG9mIG5lZ2F0aXZlIHByZXNzIGJ1dCB0aGVyZSBpcyBubyBkb3VidCB0aGF0IGluIGNvdW50cmllcyB3aGVyZSB0aGUgcHJhY3Rpc2UgaXMgb3Blbiwgc3ViamVjdCB0byBjZXJ0YWluIHJlZ3VsYXRpb25zLCBpdCBnaXZlcyBhIGh1Z2UgYm9vc3QgdG8gc3RhdGUgYW5kIG5hdGlvbmFsIGVjb25vbWllcy4gT3JlZ29uIHdpbGwgYmUgYXdhcmUgb2YgdGhlIHBvc3NpYmlsaXRpZXMgc28gaG93IGlzIHRoZSBpbmR1c3RyeSBwZXJmb3JtaW5nIGluIHRoaXMgUGFjaWZpYyBOb3J0aCBXZXN0IHN0YXRlIGFuZCB3aGF0IGRvZXMgdGhlIGZ1dHVyZSBob2xkPy4gCldheSBiYWNrIHdoZW4gSSBmaXJzdCBzdGFydGVkIG15IGZpdG5lc3Mgam91cm5leSwgbXkgZW50aXJlIGdvYWwgd2FzIHRvIG1ha2UgaXQgaW50byBzb21lIHNpemUgMTIgamVhbnMuIEkgaGF0ZWQgc2hvcHBpbmcgaW4gdGhlIGxhcmdlciBjbG90aGVzICh0aGlzIHdhcyB5ZWFycyBhZ28sIHNvIHRoZXJlIHdlcmUgZmV3ZXIgeW91dGhmdWwgb3B0aW9ucyBpbiB0aG9zZSBzaXplcykgYW5kIEkgaGF0ZWQgdGhlIHdheSBteSBiZWxseSB3YXMgc3RhcnRpbmcgdG8gc2FnLiBJIHdhcyB0aXJlZCBvZiBiZWluZyB0aGF0IHBlcnNvbi4gSSBqb2luZWQgYW4gaW50ZW5zaXZlIENJQ08gcHJvZ3JhbSB0aGF0IHRhdWdodCBtZSB3aGF0IEkgbmVlZGVkIHRvIGtub3csIGFuZCBnb3Qgb2ZmIG15IGJ1dHQuCkhlIGJyaW5ncyB0aGUgImNvcmUiIGJhY2sgdG8gaGlzIHdvcmtzaG9wIGFuZCBpbnN0YWxscyBoZXIgaW50byBhIGJvZHkgaGUgaGFkIGRldmVsb3BlZCBmb3IgaGlzIG11cmRlcmVkIHRlZW5hZ2UgZGF1Z2h0ZXIgYW5kIGdpdmVzIGhlciBhIG5hbWU6IEFsaXRhIChSb3NhIFNhbGF6YXIpLiBBbGl0YSBhd2FrZW5zIHdpdGggY29tcGxldGUgYW1uZXNpYSBhbmQsIG92ZXIgdGhlIHNwYW4gb2Ygc2V2ZXJhbCBkYXlzLCBiZWNvbWVzIGZhbWlsaWFyIHdpdGggaGVyIG5ldyBib2R5IGFuZCB0aGUgZmVlbGluZ3MgdGhhdCBjb21lIHdpdGggaXQuIFNoZSBpcyBpbnN0YW50bHkgaW5mYXR1YXRlZCB3aXRoIG9uZSBvZiBEci4gCkJvb2sgY2hhcHRlckd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMTogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGVsaXRlIGF0aGxldGVzUGFya2luLCBCLiwgV2FycmluZXIsIEsuIEFuZCBXYWxzaCwgVi4gCkZvciB0aGlzIGhlIG5lZWRlZCB0byBlbGltaW5hdGUgdGhlIENhcGl0YWxpc3QgY2xhc3MgYmVjYXVzZSB0aGV5IHdlcmUgYSB0aHJlYXQuIEhlIGFsc28gYmVsaWV2ZWQgaW4gRGVtb2NyYXRpYyBDZW50cmFsaXNtLCB3aGVyZSB3b3JrZXJzIG9ubHkgZWxlY3QgbWVtYmVycyBvZiB0aGUgdmFuZ3VhcmQgcGFydHkuIApJIHN0aWxsIG5vdCAxMDAlIGNlcnRhaW4gaXQgbmV2ZXIgaGFwcGVuLCBidXQgYWJvdXQgOTUlIHN1cmUuIApUaGVyZSdzIGEgYnVpbGRpbmcgcmlnaHQgYWNyb3NzIGZyb20gbXkgd29yayB0aGF0IEkgc3VzcGVjdCAob25seSBoYWxmIGluIGplc3QpIGlzIGhhcmJvcmluZyBodW1hbiB0cmFmZmlja2luZyB2aWN0aW1zLiBXaW5kb3dzIGFsbCBjb3ZlcmVkLCBzZWN1cml0eSBjYW1lcmFzIGFyZSBkaXNndWlzZWQsIGFuZCB3ZSBvbmx5IGV2ZXIgc2VlIGFuIGVuY2xvc2VkIHRyYWlsZXIgYmFjayBpbiBvbmNlIGV2ZXJ5IGNvdXBsZSBvZiB3ZWVrcywgYW5kIHRoZXkgYXJlbid0IHRoZXJlIGxvbmcgZW5vdWdoIHRvIGRvIGFueXRoaW5nIGJ1dCBiYWNrIGluIGFuZCBwdWxsIGJhY2sgb3V0LgpPZiBjb3Vyc2UsIGF1dG8gZG91YmxlIHVwIGhhbmRzIGp1c3QgZG9uJ3QgY29tZSBhcm91bmQgdGhhdCBvZnRlbiBhbmQgcGxheWluZyBtYXJnaW5hbCBoYW5kcyBoYXZlIGFuIGFubm95aW5nIGhhYml0IG9mIG1ha2luZyB5b3UgZ28gYnJva2UgcXVpY2tseS4gClRvZGF5LCBhcyBJIHZpc2l0IHRoZSBTY2llbmNlIE11c2V1bSBJIHdhcyBpbnRlcmVzdGVkIHRvIGRpc2NvdmVyIGEgbGV0dGVyIGZyb20gdGhlIFJveWFsIEFyY2hpdmVzLCB3cml0dGVuIGluIDE4NDMgdG8gbXkgZ3JlYXQgZ3JlYXQgZ3JhbmRmYXRoZXIgUHJpbmNlIEFsYmVydC4gQ2hhcmxlcyBCYWJiYWdlLCBjcmVkaXRlZCBhcyB0aGUgd29ybGQncyBmaXJzdCBjb21wdXRlciBwaW9uZWVyLCBkZXNpZ25lZCB0aGUgIkRpZmZlcmVuY2UgRW5naW5lIiwgb2Ygd2hpY2ggUHJpbmNlIEFsYmVydCBoYWQgdGhlIG9wcG9ydHVuaXR5IHRvIHNlZSBhIHByb3RvdHlwZSBpbiBKdWx5IDE4NDMuIEluIHRoZSBsZXR0ZXIsIEJhYmJhZ2UgdG9sZCBRdWVlbiBWaWN0b3JpYSBhbmQgUHJpbmNlIEFsYmVydCBhYm91dCBoaXMgaW52ZW50aW9uIHRoZSAiQW5hbHl0aWNhbCBFbmdpbmUiIHVwb24gd2hpY2ggdGhlIGZpcnN0IGNvbXB1dGVyIHByb2dyYW1tZXMgd2VyZSBjcmVhdGVkIGJ5IEFkYSBMb3ZlbGFjZSwgYSBkYXVnaHRlciBvZiBMb3JkIEJ5cm9uLiBUb2RheSwgSSBoYWQgdGhlIHBsZWFzdXJlIG9mIGxlYXJuaW5nIGFib3V0IGNoaWxkcmVuJ3MgY29tcHV0ZXIgY29kaW5nIGluaXRpYXRpdmVzIGFuZCBpdCBzZWVtcyBmaXR0aW5nIHRvIG1lIHRoYXQgSSBwdWJsaXNoIHRoaXMgSW5zdGFncmFtIHBvc3QsIGF0IHRoZSBTY2llbmNlIE11c2V1bSB3aGljaCBoYXMgbG9uZyBjaGFtcGlvbmVkIHRlY2hub2xvZ3ksIGlubm92YXRpb24gYW5kIGluc3BpcmVkIHRoZSBuZXh0IGdlbmVyYXRpb24gb2YgaW52ZW50b3JzLiBFbGl6YWJldGggUi4gUEhPVE9TOiBTdXBwbGllZCBieSB0aGUgUm95YWwgQXJjaGl2ZXMgUm95YWwgQ29sbGVjdGlvbiBUcnVzdCAvIEhlciBNYWplc3R5IFF1ZWVuIEVsaXphYmV0aCBJSSAyMDE5CkFubm91bmNlZCBlYXJsaWVyIHRoaXMgd2VlayBwbGFucyB0byBsYXVuY2ggdGhyZWUgbmV3IHByaXZhdGUgbGFiZWwgYnJhbmRzIHNwZWNpYWxpemluZyBpbiBsb3cgY29zdCB1bmRlcndlYXIgYW5kIHNsZWVwd2Vhci4uIApGZW1hbGVzIGluIHRoZSBWaWN0b3JpYW4gZXJhIHN1ZmZlcmluZyBmcm9tICJoeXN0ZXJpYSwiIGEgZGlzZWFzZSB3aGVyZSBzeW1wdG9tcyByYW5nZWQgZnJvbSBoZWFkYWNoZXMgdG8gaW5zb21uaWEgdG8gaXJyaXRhYmlsaXR5LCB3ZXJlIGN1cmVkIHZpYSBjbGl0b3JhbCBzdGltdWxhdGlvbi4gCllvdSBjYW4gdGVhY2ggdGhhdCBleHBlcmllbmNlLCBzb21ldGltZXMgeW91IGp1c3QgaGF2ZSB0byBsaXZlIGl0IGFuZCBwbGF5IGluIGl0Li4gCkxlYWQgYnkgYXNzaXN0YW50IHByb2Zlc3NvciBHYXJ5IEhhY2ssRERTLCBzY2llbnRpc3RzIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE1hcnlsYW5kIGhhdmUgZGlzY292ZXJlZCBieSBhIGNvbm5lY3Rpb24gYmV0d2VlbiB0aGUgbXVzY3VsYXIgc3lzdGVtIGFuZCB0aGUgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbS4gRGlzY292ZXJ5LCBhIHNlcmVuZGlwaXRvdXMgcmVzdWx0IG9mIGRpc3NlY3RpbmcgYSBjYWRhdmVyIGF0IGFuIHVub3J0aG9kb3ggYW5nbGUgdG8gdmlldyB0aGUgbWFzdGljYXRpb24gbXVzY3VsYXR1cmUsIGlzIGEgY29ubmVjdGl2ZSB0aXNzdWUgdGhhdCBhdHRhY2hlcyB0aGUgcmVjdHVzIGNhcGl0aXMgcG9zdGVyaW9yIG1pbm9yIG11c2NsZSAod2hpY2ggZXh0ZW5kcyBmcm9tIHRoZSBiYXNlIG9mIHRoZSBza3VsbCB0byB0aGUgYXRsYXMpIHRvIHRoZSBkdXJhIHRoYXQgc3Vycm91bmRzIHRoZSBicmFpbiBhbmQgc3BpbmFsIGNvcmQgYXQgdGhlIGF0bGFudG8gb2NjaXBpdGFsIGp1bmN0aW9uLiAKV2UgcHV0IHRoaXMgaW50byBjaGVhdCBlbmdpbmUgYW5kIHdlIGdldCBhIGxpc3Qgb2YgY29kZXMgb24gdGhlIGxlZnQuIApObyBzb29uZXIgaGFkIEFmdGFiIHV0dGVyZWQgdGhlc2UgZ29sZGVuIHdvcmRzIHRoYW4gd2Fsa2VkIGluIE5hd2F6IFNoYXJpZiwgYWNjb21wYW5pZWQgYnkgYSBiYW5kIG9mIGhpcyBzZW5pb3IgbWluaXN0ZXJzIHdobyBhcmUgaGFiaXR1YWxseSBhYnNlbnQgZnJvbSBQYXJsaWFtZW50IHdoZW4gdGhlIHByaW1lIG1pbmlzdGVyIGlzIG5vdCBhcm91bmQuIApLYXRpZXN0eWxlOTQgIDkgcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvCk15IEZhdGhlciwgYSBUcnVtcCBzdXBwb3J0ZXIsIGV2ZW4gdGhvdWdoIGhlIGlzIGxlc3MgYW5kIGxlc3MgYSBzdXBwb3J0ZXIgZXZlcnkgcGFzc2luZyBkYXksIGJ1dCBub25ldGhlbGVzcyBhIHN1cHBvcnRlci4gV2UgZ290IGluIGFuIGFyZ3VtZW50IG9uZSB0aW1lIGFuZCBoZSBkaWRuIGJlbGlldmUgd2hhdCBJIHdhcyBzYXlpbmcsIHNwb3V0aW5nIHRoZSB0eXBpY2FsICJmYWtlIG5ld3MiLiAKSWYgaXQgZmFpbHMgYWdhaW4sIHlvdSBzaG91bGQgcHJvYmFibHkgY2hlY2sgdGhlIGN1cnJlbnQgZHJhdyBvZiB0aGUgYmxvd2VyIG1vdG9yLiAKTWVhbndoaWxlLCB0aGUgbmF0aW9uIGVjb25vbWljIGxlYWRlcnMgc2F5IHRoYXQgdGhlIHZlcnkgZmF0ZSBvZiBvdXIgZWNvbm9teSBoYW5ncyBpbiB0aGUgYmFsYW5jZS4gU28gaG93IGlzIHRoaXMgZ29pbmcgdG8gcGxheSBvdXQ/LiAKVGhlIFVTIGdvdmVybm1lbnQgYW5kIHRoZSBBbWVyaWNhbiBwZW9wbGUgY291bGQgdGhpbmsgb3V0c2lkZSB0aGUgZm9vdGJhbGwvc29jY2VyIG1ldGFwaG9yIGFuZCBzZWUgdGhlcmUgYXJlIGFsbCBzb3J0cyBvZiBvdGhlciBnYW1lcy4gCkFzIEUhIHByZXZpb3VzbHkgcmVwb3J0ZWQsIFdvb2RzIGRpZCBub3QgcmV0dXJuIGhvbWUgZm9sbG93aW5nIGhpcyB2aXNpdCB0byB0aGUgaG9zcGl0YWwuIApCZSBzdXJlIHRvIGxvY2sgZG93biB0aGlzIHBpZWNlIHNvIHRoYXQgdGhlIGVhcnJpbmdzIHdpbGwgc3RheSBpbiBvbmUgcGllY2UuLiAKRWRpdDogbWlzcmVhZCBwb3NpdGlvbnMuIEkgbGlrZSB0aGUgY2hlY2tyYWlzZSB3aXRoIGJvdGggQXNUeCwgS3NKeCBhbmQgS3NReC4KWWF6dHJvbW9YICA4IHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpSZXNwYXduLCB5b3UgaGF2ZSBtYWRlIGEgZ2FtZSB0aGF0IGlzIGhlbHBpbmcgbWUgdGhyb3VnaCBzb21lIHRvdWdoIHRpbWVzIHJpZ2h0IG5vdyBhbmQgaXQgaXMgdGhlIG1vc3QgZnVuIEkgaGFkIHdpdGggYSBzaG9vdGVyIGluIHByb2JhYmx5IGEgZGVjYWRlLiAKTHVrZXdhcm0gc3RyYWlnaHRlbmVycyBhcmUgcmlnaHQgdXAgdGhlcmUgb24gbXkgaGFpciBoYXRlIGxpc3QuIApUb255IFNvcHJhbm8gY2FuIG11c3RlciB0aGUga2luZHMgb2YgZm9yY2UgdGhhdCBhIGdvdmVybm1lbnQgY2FuLiBMb29rIHdoYXQgaGFwcGVuZWQgYXQgV2Fjby4gRXZlbiBpZiBldmVyeSBtYWZpYSBpbiB0aGUgd29ybGQgdGVhbWVkIHVwIHRoZXkgd291bGRuIGJlIGFibGUgdG8gZG8gdGhhdC4gVG9ueSBTb3ByYW5vIHdvdWxkIHByb2JhYmx5IGJlIGRlYWQgd2l0aGluIHRoZSB3ZWVrLgpUaGUgc2VtaSByZXRpcmVkIGJ1c2luZXNzbWFuLCBmcm9tIEJyaWRsaW5ndG9uIGluIEVhc3QgWW9ya3NoaXJlLCBoYXMgd29uIGFkbWlyZXJzIGZvciBib3RoIGhpcyBjb2xvdXJmdWwgZHJlc3Mgc2Vuc2UgYW5kIGNoZWVyZnVsIGRlbWVhbm91ciBhdCB0aGUgdGFibGUuCkFuZCB0aGUgZmFjdCB0aGF0IHRoZXkgbG9ja2VkIHVwIHN1cHBseSBpcyBncmVhdC4gCkkgd2FzIHNtb2tpbmcgY2lnYXJldHRlcyBhbmQgYnJlYWtpbmcgaW4gZW1wdHkgaG91c2VzIGJlZm9yZSB0aGF0IGNocmlzdG1hcy4gCkkgZG8gd2FudCByZXBsYXkgdmFsdWUgZm9yIGEgQkdTIHN0eWxlIGdhbWUuIApJbiBhZ2luZyBodW1hbnMgdGhlIGNvcnRleCBhbmQgaGlwcG9jYW1wdXMgYXRyb3BoeSBbMTldIGFuZCBtZW1vcnkgZnVuY3Rpb24gZGVjbGluZXMgWzIwXS4gVGhlc2UgZGVsZXRlcmlvdXMgY29uc2VxdWVuY2VzIG9mIGFnaW5nIG1pZ2h0IGJlIGF0dGVudWF0ZWQgYnkgZXhlcmNpc2UgWzZdLiBQaHlzaWNhbGx5IGZpdCBhZ2VkIGluZGl2aWR1YWxzLCBpZGVudGlmaWVkIGJ5IHNlbGYgcmVwb3J0IG9mIGFjdGl2aXR5IGxldmVsLCBwZXJmb3JtZWQgYmV0dGVyIG9uIG1lYXN1cmVzIHN1Y2ggYXMgcmVhc29uaW5nLCB3b3JraW5nIG1lbW9yeSwgdm9jYWJ1bGFyeSBhbmQgcmVhY3Rpb24gdGltZSB0aGFuIHRoZWlyIHNlZGVudGFyeSBjb3VudGVycGFydHMgWzIxXS4gCkJ1dCBzaGUgd2FzIGFscmVhZHkgd2l0aCBzb21lb25lIGVsc2UgYW55d2F5LCBzbyBpdCBkb2Vzbid0IHJlYWxseSBtYXR0ZXIgYW55bW9yZS4gSG93IHRvIFRlbGwgaWYgYSBHaXJsIFJlYWxseSBMaWtlcyBZb3UgTWV0aG9kIDQ6IFNoZSBGaWRnZXRzIEEgTG90LiAKVGhlIFRyZXZvciBEYWxleSB0cmFkZSB3YXMgb2JqZWN0aXZlbHkgbm90IGdvb2QuIFdlIGdhdmUgdXAgYSA1MCBwb2ludCBwbGF5ZXIgd2hvIGhhZCBsZWQgdXMgdG8gMyBDdXBzIChhZG1pdHRlZGx5IGFuIG9sZGVyIHBsYXllciksIGFuZCBhIHRvcCBkZWZlbnNpdmUgcHJvc3BlY3QgZm9yIGEgNHRoIGxpbmUgZm9yd2FyZCBhbmQgYSBkIG1hbiB3aG8gbWFkZSBsaXR0bGUgdG8gbm8gaW1wcmVzc2lvbiBpbiAyOSBnYW1lcy4gCkl0IGRvZXMgc2VlbSByYXRoZXIgcGVydmVyc2UgdGhhdCB3ZSBkbyBub3QgaGF2ZSBhIHBzeWNoaWF0cmljIGRpYWdub3NpcyBmb3IgdGhlIHBlb3BsZSBhdCBGb2N1cyBvbiB0aGUgRmFtaWx5IG9yIExpZmUgYW5kIFN0eWxlIG1hZ2F6aW5lIGFzIG1lbnRhbGx5IHVuc3RhYmxlIGZvciB0aGVpciBHZW5kZXIgQW54aWV0eSBEaXNvcmRlci4gR3JhZGluZyBTaGlsb2ggZ2VuZGVyIHBlcmZvcm1hbmNlIGFzIHRvIGJlIGZlbWluaW5lIiBpcyBjb25zaWRlcmVkICJoZWFsdGh5IiBhbmQgZXZlbiAiQ2hyaXN0aWFuIiB3aGlsZSBzaG9ydCBoYWlyIGFuZCBhIGNvbGxhcmVkIHNoaXJ0IG9uIGEgYm9keSBib3JuIGZlbWFsZSBhcmUgY29uc2lkZXJlZCBhICJjcmlzaXMuIiBzaWNrLi4gClN1blBva2VyIGlzdCBlaW4gYWx0ZXIgSGFzZSBpbSBQb2tlcmdlc2NoZnQsIGljaCBoYWJlIHNjaG9uIGZyaGVyIGJlaSBkZW5lbiBnZXNwaWVsdCwgYWxzIHNpZSBub2NoIGJlaSBDcnlwdG8gd2FyZW4uIFNlaXQgZGVtIHdlY2hzZWwgenUgaVBva2VyIGhhYmUgaWNoIHdpZWRlciBhbmdlZmFuZ2VuIGJlaSBTdW5Qb2tlciB6dSBzcGllbGVuLiBJY2ggaGFiZSBtaWNoIGVudHNjaGllZGVuIHdpZWRlciBiZWkgU3VuUG9rZXIgenUgc3BpZWxlbiwgd2VpbCBzaWUgbWVpbmVzIEVyYWNodGVucyBkZW4gZWluZW4gc2VociBndXRlbiBTdXBwb3J0IHVuZCBlaW4gdW5zY2hsYWdiYXJlcyBMb3lhbGl0dHNwcm9ncmFtbSBoYWJlbi4uIApBZnRlciB5b3UgaGF2ZSBmb3VuZCBvdXQgd2hlcmUgdGhlIHBsYXllcnMgYXJlIGF0IGFuZCBwbGF5aW5nIGF0IHlvdXIgc3Rha2VzIGxldmVsLiBZb3Ugd2FudCB0byBwaWNrIHRoZSBwb2tlciByb29tIHRoYXQgaGFzIHRoZSBiZXN0IGRlcG9zaXQgYm9udXMuIERvbid0IGp1c3QgZ28gYWZ0ZXIgdGhlIGJpZ2dlc3QgZGVwb3NpdCBib251cyBhcyBpdHMgbm90IGFsd2F5cyB0aGUgYmVzdCBkZXBvc2l0IGJvbnVzLiAKIkkgc28gcHJvdWQgdGhhdCB0aGF0IHRoZSBXU09QIEV1cm9wZSBpcyBjb21pbmcgdG8gS2luZyBzYWlkIEtpbmcncyBDYXNpbm8gUm96dmFkb3Ygb3duZXIgTGVvbiBUc291a2VybmlrLiAiSSBzdGFydGVkIG9mZiB3aXRoIGEgZHJlYW0gYW5kIG15IGRyZWFtIGhhcyBjb21lIHRydWUgYW5kIEkgaG9wZSBwb2tlciBwbGF5ZXJzIGhhdmUgdGhlaXIgZHJlYW1zIGNvbWUgdHJ1ZSwgdG9vLCB3aGVuIHRoZXkgc2VlIHRoZSBzaGVlciBzaXplIGFuZCBmYWNpbGl0aWVzIG9mIEtpbmcncy4gV2l0aCB0aGUgYXdhcmRpbmcgb2YgV1NPUCBnb2xkIGJyYWNlbGV0cywgd2UgaGF2ZSBicm91Z2h0IGEgaHVnZSBwaWVjZSBvZiBMYXMgVmVnYXMgdG8gRXVyb3BlIGFuZCB3ZSBhaW0gdG8gZGVsaXZlciBWZWdhcyBzdGFuZGFyZHMgd2l0aCB0aGlzIGV2ZW50LCB0b28uIi4gCkkgYmVsaWV2ZSB0aGUgdG9waWMgaXMgV2lzY29uc2luIEhpZ2ggU2Nob29sIHNleHVhbCBzY2FuZGFscy4gCkhpcyB3YXMgbW9yZSAiZGljdGF0b3JzaGlwIiB0aGFuICJvZiB0aGUgcHJvbGV0YXJpYXQiLiAKSSBzcGVudCAkMTAwMDArIGFuZCAxMDAwMCBob3VycyBvdmVyIHRoZSBsYXN0IDEwIHllYXJzIHRyYWluaW5nLCBsZWFybmluZywgZ29pbmcgdG8gY2xhc3NlcyBhbmQgZXZlbnRzLiAKSXQgb2theS4gClNlZW4gc29tZSBkZWJhdGVzIGFib3V0IHNwZW5kaW5nIGFyZW5hIHRpY2tldHMgZHVyaW5nIG1pbGl0YW50IGV2ZW50LiBGb3IgdGhlIGJlbmVmaXQgb2YgdGhvc2Ugd2hvIGRvbiBrbm93LCBoZXJlIGhvdyB0byBjb21wbGV0ZSB0aGUgZXZlbnQgdXNpbmcgdGhlIG1pbmltdW0gbm8uIG9mIHRpY2tldHMgKDMwMCk6CkNvYWNoaW5nIHN0YWZmIGlzIGdvb2QgYXQgcG9pbnRpbmcgb3V0IGxpdHRsZSBkZXRhaWxzIHRoYXQgaW1wcm92ZSBteSBnYW1lIGRyYXN0aWNhbGx5LCBNYWNFd2VuIHRvbGQgdGhlIFV0aWNhIE9ic2VydmVyIERpc3BhdGNoLiBHaXZlIG1lIG1vcmUgdGltZSwgbW9yZSBjb25maWRlbmNlIGFuZCBpdCBoYXMgcmVhbGx5IGhlbHBlZCBtZS4gCkhleSwgcmVtZW1iZXIgdGhhdCB0aW1lIEkgYmVhdCB5b3UgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlcj8gWWVhaC4gCkplbm5pZmVyIFJvYmVydHMsIGFzc29jaWF0ZSBkaXJlY3RvciBvZiB0aGUgSW50ZXJuYXRpb25hbCBDZW50ZXIgZm9yIEdhbWluZyBSZWd1bGF0aW9uIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE5ldmFkYSwgTGFzIFZlZ2FzLCBzYWlkIHRoZSBpbXBhY3Qgb2YgdGhlIG9waW5pb24gcmVzdHMgb24gaG93IHN0cmljdGx5IHRoZSBKdXN0aWNlIERlcGFydG1lbnQgaXMgZ29pbmcgdG8gZW5mb3JjZSB0aGUgbmV3IGludGVycHJldGF0aW9uIG9mIHRoZSBzdGF0dXRlLgpQZXJzb25hbGx5IEkgdXNlIHRoZSBQb2tlciBQbGFubmluZyBTY2FsZSAoMS8yLDEsMiwzLDUsOCwxMywyMCw0MCwxMDApIHNvIHRoaXMgaXMgd2hhdCBJIHdpbGwgdXNlIGZvciB0aGlzIGV4YW1wbGUuIApJIGRvbid0IHRoaW5rIFlXQlRBIGlmIHlvdSBoYWQgYSBjYWxtIGNvbnZlcnNhdGlvbiBleHByZXNzaW5nIHlvdXIgY29uY2VybnMgYWJvdXQgaGVyIGVzc2VudGlhbGx5IGJlY29taW5nIGEgcGFydCB0aW1lIGNhcmVnaXZlciB0byB0aGlzIGNoaWxkIGFuZCBtb3ZpbmcgaW4gd2l0aCBoZXIgQkYgd2hpbGUgc2hlJ3Mgc3RpbGwgc28geW91bmcgYW5kIHNvIHF1aWNrbHkgICBidXQgaWYgc2hlcyB0aG91Z2h0IHRocm91Z2ggYWxsIHRoZSByYW1pZmljYXRpb25zIHlvdSBoYXZlIHRvIHJlc3BlY3QgaGVyIGRlY2lzaW9uLiBJIGRvIHRoaW5rIFlXQlRBIGZvciB0YWxraW5nIGFib3V0IGhlciBiZWluZyBzZWNvbmQgZmlkZGxlIG9yIGhlciBub3Qgd2FudGluZyBjaGlsZHJlbiAgIHlvdSByZWFsbHkgZG9uJ3Qga25vdyB3aGF0IHRoZXkndmUgZGlzY3Vzc2VkIGFuZCBwbGVudHkgb2YgcGVvcGxlIGhhdmUgYXdlc29tZSByZWxhdGlvbnNoaXBzIHdpdGggcGVvcGxlIHdobyBoYXZlIGNoaWxkcmVuIGZyb20gcHJpb3IgcmVsYXRpb25zaGlwcy4gCkxhIHByaW5jaXBhbGUgZGlmZnJlbmNlIGF2ZWMgbCdhcHByb2NoZSBkZSBSb2JlcnQgU3QuIAoiSSBuZXZlciBldmVyIGJlZW4gaW5zaWRlIGEgcG9vZnMgYmFyIGluIGFsbCBteSBsaWZlIHVudGlsIEkgZ290IHRvIExvbmRvbiwiIFdpbHNvbiBzYWlkIG9uIGhpcyAxOTkzIGNvbWVkeSBhbGJ1bSBMZXQgTG9vc2UgTGl2ZSBJbiBMb25kb24uICJBbmQgSSBjb3VsZG4gYmVsaWV2ZSBpdC4gSSB3YWxrZWQgaW50byB0aGlzIGpvaW50IGFuZCBpdCBqdXN0IHRvcCBoZWF2eSB3aXRoIHRoZXNlIGRvdWdoIGV5ZWQsIGxpbXAgd3Jpc3RlZCBma2luZyBkb3VnaG51dCBwdW5jaGVycy4gSSBkb24gdHJ1c3QgdGhvc2UgYnRhcmRzIC4gSSBjb3VsZG4gYmVsaWV2ZSBpdCwgaW4gdGhpcyBiYXIsIHRoaXMgcGxhY2UgaXMganVzdCB0b3AgaGVhdnkgd2l0aCBhbGwgdGhlc2UgcG9vZnMgLiBJIGRvbiB0cnVzdCB0aGVtIGJ0YXJkcy4KV2hlbiB1bmRlciB0aGUgZ3VuLCB5b3UgaGF2ZSBubyBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGFueSBvZiB0aGUgb3RoZXIgcGxheWVycyBhcmUgZ29pbmcgdG8gZG8uIApJIGtub3cgdGhlIENoaW5lc2UgZmFtaWx5IHdobyBvd25zIGl0IGluIENoaW5hdG93biwgYW5kIGl0IGhhcyBzdGF5ZWQgb3BlbiBieSBiZWNvbWluZyBhIGRvbGxhciBzbGljZSBqb2ludCB0aGF0IGVsZGVybHkgQ2hpbmVzZSBmb3Igc29tZSByZWFzb24gdmlzaXQuIApUaGUgV2lsZCBCYWNrIGFuZCBGb3J0aCBvZiBOZXRmbGl4J3MgJ1dpbGQgV2lsZCBDb3VudHJ5JwpUaGVyZSBpcyBubyBiZXR0ZXIgcGxhY2UgdG8gY29ubmVjdCB3aXRoIHNvIG1hbnkgYW1hemluZyBsb2NhbCBzaW5nbGVzIGFuZCB0aGVyZSBpcyBib3VuZCB0byBiZSBzb21lb25lIG1vcmUgbGlrZSAnc29tZW9uZXMnIGhlcmUgdG8gbWFrZSB5b3VyIHNleCBkcmVhbXMgY29tZSB0cnVlISBPdXIgZ29hbCBpcyB0byBzYXRpc2Z5IG91ciBhdWRpZW5jZSB3aXRoIG91ciBzZXJ2aWNlcy4gCk5hdHVyYWwgc29hcC4gQ29tbWVyY2lhbGx5IGF2YWlsYWJsZSBzb2FwcyBhcmUgbW9zdGx5IGNoZW1pY2FsIGJhc2VkLiBCdXlpbmcgbmF0dXJhbCBzb2FwIGlzIG9rYXkgYnV0IGl0J3Mgbm90IGFjdHVhbGx5IHRoZSBBbWlzaCB3YXkuIEluc3RlYWQsIG1ha2UgeW91ciBvd24gc29hcCBhbmQgdXNlIHRoYXQuIEF0IGxlYXN0LCB5b3UgYXJlIHN1cmUgYWJvdXQgdGhlIGluZ3JlZGllbnRzIHlvdSB1c2VkIGZvciB0aGUgc29hcC4gVGhlIHNvYXAgc2hvdWxkIGJlIGFzIHBsYWluIGFzIHBvc3NpYmxlIG5vIHBlcmZ1bWUsIG5vIGNvbG9yLCBhbmQgbm8gY2hlbWljYWwuCllvdSBzZWUgaGVyIGF0IGV2ZW50cywgYnV0IG5vdCBhcyBtYW55IGFzIEtuYWNrLiBTaGUgZG9lc24gdGVuZCB0byBhc2sgZXh0cmVtZWx5IGJpdGluZyBvciBwb2ludGVkIHF1ZXN0aW9ucyBhdCBjb3VuY2lsIGFuZCB5b3UgY2FuIGdlbmVyYWxseSBwcmVkaWN0IHdoYXQgaGVyIHZvdGUgd2lsbCBiZS4gU2hlIGRlZmluaXRlbHkgb24gdGhlIHByb2dyZXNzaXZlIHNpZGUgb2YgY291bmNpbC4gU2hlIG5vdCBodWdlbHkgb3V0c3Bva2VuIGFuZCBpcyBnZW5lcmFsbHkgbm90IGEgbmV3c21ha2VyLiAKQWx0aG91Z2ggc3RhbmRpbmcgdXAgYWxsIGRheSBzZWVtZWQgYmV0dGVyIGZvciBoaXMgYmFjayB0aGFuIHNpdHRpbmcgZG93biwgdGhlIHJlYWwgcGxlYXN1cmUgd2FzIGluIGJlaW5nIGFibGUgdG8gY2hhbmdlIHBvc2l0aW9ucyBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIGRheS4gQSBtb3ZlYWJsZSBkZXNrIGxldHMgaGltIGRvIHRoYXQ7IHdoZW5ldmVyIGhpcyBib2R5IHRocmVhdGVucyB0byBzdGlmZmVuIGludG8gYSBzaW5nbGUgYWNoaW5nIHBvc2UsIGhlIHN3aXRjaGVzIHRvIGFub3RoZXIuIApJIGp1c3QgZmluaXNoZWQgYSB0aW1lIHRyYXZlbCBwaWVjZS4gRm9yIG1lLCBJIGhhZCB0d28gaXNzdWVzLiBUaGUgZmlyc3Qgd2FzIHRoYXQgSSB3cm90ZSB0aGUgZmlyc3QgZHJhZnQgd2l0aG91dCBhIHRpbWVsaW5lLiBEbyBpdCBmaXJzdC4gRXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBtdWx0aXBsZSBjaGFyYWN0ZXJzL3N0b3J5bGluZXMganVtcGluZyB0aHJvdWdoIHRpbWUuIEV2ZW4gaWYgaXQganVzdCBhIHJvdWdoIHRpbWVsaW5lIHRoYXQgY2hhbmdlcyB0aHJvdWdob3V0IGRyYWZ0cyBpdCB3aWxsIGtlZXAgdGhlIGNocm9ub2xvZ2ljYWwgb3JkZXIgaW50YWN0IG1ha2UgZXZlcnl0aGluZyBtdWNoIGVhc2llciBmb3IgeW91LiAoTWluZSB3YXMganVzdCBhIGJhc2ljIG9uZSBvbiBNaWNyb3NvZnQgRXhjZWwuKQpNYXlvciBkZSBCbGFzaW8ncyByYW50IGF0IFRoZSBQb3N0IGlzIGdvb2QgZm9yIGEgbGF1Z2gKUGFyYSBvIGNhcnJvLCBlbSBMRlMgUzIgbyBqb2dhZG9yIG5vIHZhaSBlbSB1bWEgbG9qYSBvbmRlIGNvbXByYSB0dWRvIGNhbGlicmFkby4gCkJlbG93IGFyZSBzb21lIHN0cmV0Y2hlcyBhbmQgbXVzY2xlIHJlbGVhc2UgdGVjaG5pcXVlcyBmb3IgbGVnLCBrbmVlLCBiYWNrLCBhbmQgaGlwIHBhaW4gdGhhdCBJIGhhdmUgcGVyc29uYWxseSB1c2VkIHdpdGggZ29vZCByZXN1bHRzLiBGZWVsIGZyZWUgdG8gc2hhcmUgYW5kIHRyeSB0aGVzZSB0ZWNobmlxdWVzLCBidXQga2VlcCBpbiBtaW5kIHRoYXQgdGhleSBtaWdodCBub3Qgd29yayBmb3IgeW91IGFuZCBhcmUgbm90IGEgc3Vic3RpdHV0ZSBmb3IgbWVkaWNhbCB0cmVhdG1lbnQuIEhpcCBvciBrbmVlIHBhaW4gY2FuIGJlIGNhdXNlZCBieSB0aWdodCBxdWFkcy4gClRoZSB1bmJlbmRpbmcgSXJvbiBMYXcgdnMgTGliZXJ0aW5lIEZlbHVyaWFuLiBFdmVuIHRoZSBkb3VibGUgZnVkZ2UgZWFybGllciBvZiBTa2FycGkgYW5kIG9uZSBvZiB0aGUgQWRlbSB1c2luZyAiVGhlIEVuZW15IiByYXRoZXIgdGhhbiBuYW1pbmcgYW55IGZpZ3VyZS4gVGhlc2UgYWxsIGhpbnQgdGhhdCBLdm90aGUgUE9WIGlzIHdyb25nLCBldmVuIGFzIGhlIGlzIGNvbXBsZXRlbHkgY29udmluY2VkIG9mIGhpcyByaWdodGVvdXNuZXNzLi4gClRoaXMgZGlmZmljdWx0eSBpcyBlbmhhbmNlZCBieSB0aGUgZmFjdCB0aGF0IG5vdCBhbGwgY2h1cmNoIGdvaW5nIEFtZXJpY2FucyBhcmUgc3VpdGFibGUgZGF0ZSBtYXRlcmlhbDogaW4gdHJ1dGgsIG1hbnkgb2YgdGhvc2Ugd2hvIGRvIGF0dGVuZCBjaHVyY2ggYXJlIGFscmVhZHkgaW4gcmVsYXRpb25zaGlwcywgbWFycmllZCBvciBpbiBzaWduaWZpY2FudGx5IGRpZmZlcmVudCBhZ2UgYnJhY2tldHMuIFdoaWxlIHRoaXMgc291bmRzIGxpa2UgYSBsb3QsIG1hbnkgQW1lcmljYW4gQ2hyaXN0aWFucyBhcmUgbm90IHBhcnRpY3VsYXJseSBhY3RpdmUgaW4gdGhlaXIgY2h1cmNoIGNvbW11bml0aWVzLiAKRGFzIGlzdCBrZWluIEtsaW1hIGluIGRlbSBkaWUgTWVuc2NoZW4gemlndGF1c2VuZGUgaW4gZWluIEVsZWt0cm9hdXRvIGludmVzdGllcmVuIHdlaWwgc2llIGRhbWl0IGRlciBVbXdlbHQgaGVsZmVuLiBTaWUgbXNzZW4gc3BhcmVuLiBXZXIgd2VpIHdvaGluIGRhcyBub2NoIGdlaHQhIEVzIGlzdCBhdWNoIGtlaW4gS2xpbWEgaW4gZGVyIGRlciBTdGFhdCBkYXMgR2VsZCBmciBpcmdlbmR3ZWxjaGUgdW5nZXRlc3RldGVuIE1lZ2FpbmZyYXN0cnVrdHVycHJvamVrdGUgaGF0LiAKVGhlIFNjaWVudGlmaWMgTWV0aG9kIGFuZCBUcnV0aE5vdGhpbmcgaXMgZXZlciBwcm92ZW4gdG8gYmUgYWJzb2x1dGVseSB0cnVlIGluIHNjaWVuY2UgYW5kLCB0b2dldGhlciB3aXRoIHRoZSB1c2Ugb2YgdGhlIHdvcmQgdGhlb3J5LCBldmVuIG9uIHNvbWV0aGluZyBsaWtlIHRoZSBUaGVvcnkgb2YgR3Jhdml0eSwgd2hpY2ggYWxtb3N0IGFueW9uZSB3b3VsZCBjb25zaWRlciBhIHRydXRoLCB0aGlzIGxlYWRzIG1hbnkgcGVvcGxlIHRvIHRoaW5rIHNjaWVuY2UgaXNuJ3QgdGhlIGFuc3dlci4gCldhcm0gZGVzZXJ0IGJyZWV6ZXMgYW5kIHZpZXdzIG9mIENhbWVsYmFjayBNb3VudGFpbiBpbiB0aGUgZGlzdGFuY2Ugc2V0dGxlIHRoZSBwdWxzZS4gTmVhcmJ5IENhdmUgQ3JlZWsgb2ZmZXJzIGEgZ2xpbXBzZSBpbnRvIHRoZSBsaWZlIG9mIHRoZSBvbGQgd2VzdCB3aGlsZSBKYW1lcyBCZWFyZCBhd2FyZCB3aW5uaW5nIENoZWZzIGFyZSBjcmFmdGluZyBuZXcgc3BlY2lhbHRpZXMgaW4gU2NvdHRzZGFsZSBhbmQgUGhvZW5peC4gCk92ZXJ2aWV3IGZvciBsYW1wcG9zdApOZWl0aGVyIG9uZSBvZiB1cyBkaWQgYW55dGhpbmcsIGJ1dCBtYWRlIGEgZmV3IGJ1Y2tzIG9uIHRoZSBzaWRlIHRhYmxlcyBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIHdlZWtlbmQuIApIZSBoYXMgZG9uZSB0aGlzIGF0IGxlYXN0IDMgdGltZXMgYSBkYXkgZm9yIGEgd2Vlay4gCkZyZWUgZ2FtZXMgYXJlIG9mZmVyZWQgYm90aCBpbiBjb21tb24gbGFuZCBiYXNlZCBjYXNpbm9zIGFsc28gaW4gb25saW5lIGNhc2lub3MuIFNsb3QgbWFjaGluZXMgYXJlIHF1aXRlIHN0cmFpZ2h0Zm9yd2FyZCwgaG93ZXZlciB5b3UgbmVlZCB0byBoYXZlIHRoZSB0ZWNobmlxdWVzIGFuZCBrbm93IHRoZSBzbG90IG1hY2hpbmUgc2VjcmV0cyBpbiBvcmRlciB0byBtYXhpbWl6ZSB5b3VyIGNoYW5jZXMgb2Ygc3VjY2VlZGluZy4uIApZb3UgY2FuIGVhdCBvdXIgZm9vZCwgd2F0Y2ggb3VyIHNob3dzLCBhbmQgdHJhdmVsIHRvIHRoZSBvbGQgY291bnRyeSwgYnV0IHlvdSBkb24gbmVlZCB0byB3b3JyeSBhYm91dCB5b3VyIGhlYWQgYmVpbmcgc2xhbW1lZCBhZ2FpbnN0IHRoZSBiYW1ib28gY2VpbGluZyBvciBiZWluZyBzZWVuIGFzIGEgcGVycGV0dWFsIGZvcmVpZ25lci4uIApMaWZlLiBKdXN0IGJlY2F1c2Ugb25lIG1ldGhvZCBoZWxwZWQgb25lIGtpZCBzdGF5IG9mZiB0aGUgc21va2VzLCBkb2Vzbid0IG1lYW4gaXQgd29ya3MgZm9yIGV2ZXJ5b25lIGVsc2UuLiAKQ2VsZWJyYXRpbmcgaXRzIDkwdGggYW5uaXZlcnNhcnkgaW4gMjAxOSwgVGhlIFdpZ3dhbSBoYXMgYmVlbiByZWNvZ25pemVkIGFzIG9uZSBvZiBBcml6b25hJ3MgRm91ciBEaWFtb25kIHByZW1pZXIgcmVzb3J0IGRlc3RpbmF0aW9ucy4gU3RyZXRjaGluZyBvdmVyIDQ0MCBsdXNobHkgbGFuZHNjYXBlZCBhY3JlcywgdGhlIGNyYWZ0ZWQgYWRvYmUgYW5kIHRpbWJlciBwcm9wZXJ0eSBmZWF0dXJlcyAzMzEgZWxlZ2FudCBndWVzdCByb29tcywgdGhyZWUgc2lnbmF0dXJlIGRpbmluZyB2ZW51ZXMsIDU0IGhvbGVzIG9mIGNoYW1waW9uc2hpcCBnb2xmLCB0aHJlZSBwb29scyBhbmQgYSByZW5vd25lZCAyNiwwMDAgc3F1YXJlIGZvb3Qgc3BhLiBUaGUgV2lnd2FtIGludml0ZXMgeW91IHRvIG1ha2UgYSBsaXR0bGUgaGlzdG9yeSBvZiB5b3VyIG93biBhbmQgZW5qb3kgcmVsYXhlZCBTb3V0aHdlc3QgbHV4dXJ5IGF0IGl0cyBmaW5lc3QuLiAKQW5kIHRoaXMgaXMgbm8gbW9yZSBmdW4gZm9yIHRoZSBtZW4gd2hvIGhhdmUgdG8gZG8gaXQsIHRoZSBicm8gZW9pc2llLCB0aGFuIGl0IGlzIGZvciB0aG9zZSB3aG8gaGF2ZSB0byBsaXZlIHdpdGggdGhlbS4gClRoZSBMb3JkIHNhaWQgdG8gTW9zZXMsICJUYWtlIHRoZSBzdGFmZiwgYW5kIHlvdSBhbmQgeW91ciBicm90aGVyIEFhcm9uIGdhdGhlciB0aGUgYXNzZW1ibHkgdG9nZXRoZXIuIAooc2VlIHNvdXJjZSBsaW5rIGJlbG93KS4gClRoZSAgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIGRlbGV0ZSBvciBlZGl0IGFueSBjb21tZW50cyB0aGF0IGl0IGNvbnNpZGVycyBpbmFwcHJvcHJpYXRlIG9yIHVuYWNjZXB0YWJsZS4gCldoYXQgZG9lcyBpdCB0YWtlIHRvIGNyZWF0ZSB0aGlzIGtpbmQgb2YgbW9yYWxlPyBTdXJwcmlzaW5nbHksIGl0J3MgdGhlIGxpdHRsZSB0aGluZ3MgdGhhdCBtYWtlIHdvcmsgZnVuOiBvZmZpY2UgcGFydGllcywgam9rZXMgYmV0d2VlbiBjb3dvcmtlcnMsIHNtYWxsIHBlcnNvbmFsIGZyZWVkb21zIGxpa2UgYSByZWxheGVkIGRyZXNzIGNvZGUuIApBZGRpbmcgYSBjYXZlYXQgaGVyZTogSSBub3Qgc2F5aW5nIHlvdSBseWluZyBub3Igd2FzIHRoZXJlIGFuIGludGVudCB0byBsaWUgaW4gc2F5aW5nIHRoYXQuIEJ1dCBpdCBjYW4gYmUgcGVyY2VpdmVkIGFzIGEgbGllLCBiZWNhdXNlIGl0IGEgY29tcGFyaXNvbiBvZiBzZXh1YWwgcGVyZm9ybWFuY2UgYW5kIGZvciBndXlzIGl0IGNhbiBjb21wbGV0ZWx5IHNoYXR0ZXIgdGhlIHNlbGYgZXN0ZWVtIG9uZSBoYXMgaW4gYmVpbmcgYWJsZSB0byBzZXh1YWxseSBwbGVhc2UgdGhlaXIgcGFydG5lci4gClRoZXNlIGVsZWN0cmljYWwgcG9rZXIgYXJlIGV4cGVuc2l2ZSB0byBidXksIGhvd2V2ZXIgc2VydmVzIHlvdSBiZXR0ZXIgYXMgeW91J3JlIHJlZ3VsYXIgcGxheWVyLCB5b3Ugd2lsbCBzYXZlIHRoZSBjb3N0IGluIHRoZSBsb25nIHJ1bi4gSW4gbW9zdCBjYXJkIGdhbWVzLCB0aGVyZSBhcmUgNSB0byA3IGRlY2tzIGRlcGVuZGluZyB1cG9uIHRoZSBudW1iZXIgb2YgcGxheWVycyBwbGF5aW5nIHRoZSBnYW1lLiBGb3IgYSBodWdlIHRhYmxlLCBtYW51YWwgY2FyZCBzaHVmZmxpbmcgaXMgYSByZWFsIHBhaW4uIElmIHRoZXJlIGFyZSBhIGZldyBwZW9wbGUgc3VmZmVyaW5nIGZyb20gYXJ0aHJpdGlzLCB0aGUgc2l0dWF0aW9uIGlzIHdvcnNlLgpTa2V0Y2h5UGFkeiB1CldlIHdvdWxkIGhhdmUgc2V0IHRoZSBwcmljZSBsb3dlciBpZiB3ZSBjb3VsZC4gVGhlIHByb2NlZWRzIHdpbGwgZ28gdG93YXJkcyB0aGUgbWFpbnRlbmFuY2UgYW5kIGRldmVsb3BtZW50IG9mIHRoZSBoMmcyIHNpdGUsIGFkZGluZyB0byB0aGUgcmV2ZW51ZSBmcm9tIGFkcy4gCk9mZmljZXIgdG9sZCBtZSBoZSB3YXMgc3VyZSBoZSB3YXMgdGFraW5nIG1lIHRvIGphaWwuIEJsZXcgMC4wNi4gCjMgaGl0dGVyLCB0cmFkaW5nIGxpbmV1cCBzcG90cyB3aXRoIFJhbmR5IFdpbm4sIHdobyBpcyBub3cgdGhlIGxlYWRvZmYgaGl0dGVyLiAKQSBmYW5hdGljOyBbLl0gYSBrZWVuIGZvbGxvd2VyIG9mIGEgc3BlY2lmaWVkIGhvYmJ5IG9yIGFtdXNlbWVudCwgYW5kIGdlbi4gYW4gZW50aHVzaWFzdCBmb3IgYSBwYXJ0aWN1bGFyIHBlcnNvbiBvciB0aGluZy4KRnVuZXJhbCBzZXJ2aWNlIHdpbGwgYmUgaGVsZCBvbiBUaHVyc2RheSBhdCBTdC4gCkZpcmUgdG9uZ3Mgb3IgZmlyZXBsYWNlIHRvbmdzLCBhcmUgdXNlZCB0byBwbGFjZSBsb2dzIGFuZCBjb2FsIGludG8gYSBob3QgZmlyZXBsYWNlLiAKQW0gSSBjcmF6eSB0byBldmVuIGNvbnNpZGVyIGxldHRpbmcgbXkgaHVzYmFuZCBnbyAyIGhvdXJzIGF3YXkgdGhpcyBsYXRlIGluIHRoZSBwcmVnbmFuY3k/IEkgZG8gaGF2ZSBhIGxvY2FsIGZyaWVuZCB3aG8gaXMgYXJvdW5kIG9uIFNhdHVyZGF5IHNvIGlmIHRoZSBnaXJscyBhcmUgb3V0IHRoZXJlIHdpdGggaGltLCBzaGUgY291bGQgYnJpbmcgbWUgdG8gdGhlIGhvc3BpdGFsIHVudGlsIGhlIGNhbiBnZXQgYmFjay4gCkkgaGF2ZSBhIHdob2xlIGJ1bmNoIG9mIHRleHQgdGVtcGxhdGVzIHNhdmVkIGZvciB0ZXh0IHN0cmluZ3MgSSB1c2UgcmVwZWF0ZWRseS4gCktub3cgeW91ciBsZWFndWUgcnVsZXM6IEV4YW1wbGU6IExBQlIgYW5kIFRvdXQgV2FycyBoYXZlIHVubGltaXRlZCBkaXNhYmxlZCBsaXN0cy4gCiJGb3JtZWQgZnJvbSBhIHRhbmdlbnQgb2YgaWRlYXMgcmFpc2VkIGZyb20gdGhlIHN0dWR5IG9mIGludGVyYWN0aW9ucyBvZiB3YXRlciBhcyBzcGFjZSwgdGhlIHN3aW5nIGlzIHRoZSBmaXJzdCBpbiBhIHNlcmllcyB0aGF0IHBsYXkgd2l0aCBpbnRlcmFjdGlvbiBpbiByaWRlcyBhbmQgaW5zdGFsbGF0aW9ucy4gClNvbWV3aGVyZSBiZXR3ZWVuIDc3JSA4OSUgb2YgQW1lcmljYW5zIGJlbGlldmUgbW9uZXkgb24gcG9saXRpY3MgaXMgYSBwcm9ibGVtLiA2NiUgb2YgQW1lcmljYW5zIHdhbnQgYWN0aW9uIG9uIGNsaW1hdGUgY2hhbmdlLkkgZG9uJ3Qga25vdyB3aHkgeW91IHBpdm90ZWQgdG8gc3BlY2lmaWMgcG9saWNpZXMgd2hlbiBJIHdhcyByZWZlcnJpbmcgdG8gZ2VuZXJhbCBwb2xsaW5nIHRoYXQgZGVtb2NyYXRzIHdhbnQgdGhlaXIgcGFydHkgdG8gYmUgbW9yZSBtb2RlcmF0ZSBOT1QgcHJvZ3Jlc3NpdmVCdXQgZXZlbiB3aXRoIHRob3NlIHNwZWNpZmljIHBvbGljaWVzIHRoZSBzdXBwb3J0IGlzIGhpZ2ggb25seSB1bnRpbCBwZW9wbGUgZ2V0IHRvIGtub3cgdGhlIHNwZWNpZmljcy4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiAKV2hlbiB5b3UgcHVyY2hhc2UgcG9rZXIgY2hpcHMsIHdvdWxkIHlvdSBwcmVmZXIgdG8gcHVyY2hhc2UgY2hpcHMgdGhhdCBhcmUgbWFkZSBmcm9tIGxvdyBxdWFsaXR5IHBsYXN0aWMgb3Igd291bGQgeW91IHJhdGhlciBwcm9jdXJlIGEgY3VzdG9tIGNvbGxlY3RpYmxlIHBva2VyIHNldCB0aGF0IGlzIGhlYWRzIGFuZCBzaG91bGRlcnMgYWJvdmUgdGhlIG1hbnkgbWlkIHF1YWxpdHkgY2hpcHMgYXZhaWxhYmxlIG9uIHRoZSBtYXJrZXQ/IE1vcmUgdGhhbiBsaWtlbHksIHlvdSB3b3VsZCBwcmVmZXIgYSB1bmlxdWUgc2V0IHRoYXQgY29tZXMgd2l0aCBhIHVuaXF1ZSBhbmQgbWVtb3JhYmxlIGFwcGVhcmFuY2UuIAonJ0JlZm9yZSB0aGUgZWxlY3Rpb24gdGhlIENvYWxpdGlvbiBjb21taXR0ZWQgdG8gcG9rZXIgbWFjaGluZSwgcHJlIGNvbW1pdG1lbnQgYmVpbmcgdm9sdW50YXJ5IFthbmRdIHZlbnVlIGJhc2VkLiBTbyBpdCBmb2xsb3dzIHRoYXQgdGhlcmUgc2hvdWxkIGJlIG5vIHRyaWFsIG9mIG1hbmRhdG9yeSBwcmUgY29tbWl0bWVudCBpbiB0aGUgQUNULCcnIGhlIHNhaWQuIApOIGdvdCBhIHBsdXMgb25lIHdpdGggaGlzIGludml0ZSBhbmQgZGVjaWRlZCB0byBpbnZpdGUgb25lIG9mIGhpcyBmcmllbmRzIG92ZXIgbWUgYmVjYXVzZSBoZSBrbmV3IGhpcyBpbmZvIGFuZCB3YXMgdG9vIGxhenkgdG8gYXNrIGZvciBtaW5lLiAKMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KU3BhbSwgZmFrZXJzLCBwcm9zdGl0dXRlcywgeW91IG5hbWUgaXQhIFRha2UgYSBsb29rIGFuZCBkZWNpZGUgZm9yIHlvdXJzZWxmLiAKVGhlIHJhbmdlIGZvciAzQkVUIGZyb20gQkIgcG9zaXRvaW4gaXMgZGlmZmVyZW50IGFsbW9zdCBmb3IgYW55IHBsYXllci4gSXQgaXMgbm9ybWFsIHRvIDNCZXQgd2l0aCAyNSAxMCUgb2YgaGFuZHMuIFNvbWV0aW1lcyBpdCBpcyBiZXR0ZXIgbm90IHRvIDNCRVQgd2l0aCBBQSwgS0ssIFFRLiBNYW55IGhlYWRzIHVwIHBsYXllcnMgZG9lcyBub3QgM0JldCBhdCBhbGwuCkkgYmVsaWV2ZSBhdCBzb21lIHBvaW50IFJhbmRhbGwgQ2FybHNvbiB0YWxrcyBhYm91dCBhIGxheWVyIG9mIHRoZXNlIHBhcnRpY3VsYXRlcyBpbiB0aGUgZ2VvbG9naWMgcmVjb3JkIHN1Z2dlc3RpbmcgYW4gaW1wYWN0IG9yIG90aGVyIGhpZ2ggZW5lcmd5IGV2ZW50LiAKSGUgd2FzIGEgZ29vZCBtYW4gYW5kIEkgbGlrZWQgaGltLiAKQXJhY2hpZG9uaWMgYWNpZCBpcyB0aGUgb21lZ2EgNiBmYXR0eSBhY2lkIHRoYXQgaXMgY29udmVydGVkIGludG8gcHJvc3RhZ2xhbmRpbiBFMiwgYW5kIHByb3N0YWdsYW5kaW4gRTIgaXMgcXVpdGUgcHJvIGluZmxhbW1hdG9yeS4gVGhpcyBpbmZsYW1tYXRpb24gaXMgdGhlIDIgZ2VuZXJhdG9yIG9mIGZyZWUgcmFkaWNhbHMuIFRoaXMgaW5jcmVhc2UgaW4gdGhlIHByb2R1Y3Rpb24gb2YgZnJlZSByYWRpY2FscyBmdXJ0aGVyIGluanVyZXMgdGhlIG5ldXJvbi5lKVRoaXMgaW5jcmVhc2Ugb2YgYXJhY2hpZG9uaWMgYWNpZCBjYXVzZXMgaW5jcmVhc2VkIG1lbWJyYW5lIHBlcm1lYWJpbGl0eSBhbmQgZWRlbWEuZilUaGlzIGNhbGNpdW0gaW5mbHV4IGFsc28gc3RpbXVsYXRlcyB0aGUgcmVsZWFzZSBvZiB0aGUgdHJhbnNtaXR0ZXIgZ2x1dGFtYXRlLCB3aGljaCBpbml0aWF0ZXMgZ2x1dGFtYXRlIG5ldXJvdG94aWNpdHkuZylUaGlzIGdsdXRhbWF0ZSByZWxlYXNlIGNhdXNlcyBkZXBvbGFyaXNhdGlvbiBvZiB0aGUgY2VsbCBtZW1icmFuZSwgYWxsb3dpbmcgZm9yIHRoZSBpbmZsdXggb2YgbW9yZSBjYWxjaXVtLmgpVGhpcyBpbmZsdXggb2YgY2FsY2l1bSBwcm9wYWdhdGVzIGdsdXRhbWF0ZSBuZXVyb3RveGljaXR5IGluIGEgcG9zaXRpdmUgZmVlZGJhY2sgZmFzaGlvbiBieSBmdXJ0aGVyIHN0aW11bGF0aW5nIHRoZSByZWxlYXNlIG9mIHRoZSB0cmFuc21pdHRlciBnbHV0YW1hdGUuIApGaWJ1bGFyaXMgbG9uZ3VzIChwZXJvbmVhbCkgbXVzY2xlIGlzIHJpZ2h0IHRvIHRoZSBvdXRzaWRlIG9mIHRoZSB0aWJpYWxpcywgYW5kIHJ1bnMgdXAgdGhlIG91dHNpZGUgb2YgeW91ciBsZWcuIAooUGhvdG8gYnkgSmVmZiBUYXlsb3IpIEZyZWRlcmljayBzYWlkIHRvIG5lZWQgbGF3IGJhbm5pbmcgc2V4dWFsIGRpc2NyaW1pbmF0aW9uIEJ5IExJU0EgRkFSQlNURUlOIE5ld3MgUG9zdCBTdGFmZiBGcmVkZXJpY2sgQ291bnR5IG5lZWRzIGEgbGF3IG1ha2luZyBpdCBhIGNyaW1lIHRvIGRpc2NyaW1pbmF0ZSBvbiB0aGUgYmFzaXMgb2Ygc2V4dWFsIHByZWZlcmVuY2UsIHNheSBtZW1iZXJzIG9mIHRoZSBIdW1hbiBSZWxhdGlvbnMgQ291bmNpbCBhbmQgdGhlIGdheSBjb21tdW5pdHkuIApBcyBhIGRyaXZlciBpdCBpcnJpdGF0ZXMgbWUgd2hlbiBhIFBBWCBpc24gcmVhZHkgdG8gZ28gd2hlbiB0aGV5IHJlcXVlc3QgdGhlIHJpZGUsIGl0IGFsc28gaXMgbW9yZSBpcnJpdGF0aW5nIHdoZW4gYSBkcml2ZXIgaXNuIHJlYWR5LgpBcyB5b3UgYWxsIGtub3csIEkgaGF2ZSBiZWVuIGZvbGxvd2luZyBhcm91bmQgUHJlc2lkZW50aWFsIE5vbWluZWUgUGVwcGVyLiBQZXBwZXIgaXMgdGhlIGZpcnN0IGJpcmQgdG8gZXZlciBiZSBub21pbmF0ZWQgZm9yIFByZXNpZGVudCEgUGVwcGVyIGhhcyBiZWVuIHdvcmtpbmcgaGFyZC4gClJlZHVjZXMgZGVybWF0aXRpcyBhbmQgaXQgYWxzbyBoYXMgYSBudW1iZXIgb2YgYWN0aW9ucyBvbiBtaWNybyBjaXJjdWxhdGlvbiB0ZW5kaW5nIHRvd2FyZCByZXBhaXJpbmcgdGhlIGxlYWthZ2UgY2F1c2VkIGJ5IGFsbGVyZ2ljIHJlc3BvbnNlcy4uIApUaGV5IGRvbiB0aGluayBhYm91dCB3aGF0IGNhcmRzIEkgY291bGQgaGF2ZSwgaG93IEkgYmV0IHByZXZpb3VzbHkgYW5kIHdoYXQgY2FyZHMgdGhleSBjb3VsZCBnZXQgYmVhdCB3aXRoLiAKQWxzbywgYXJlIHlvdXIgYmxpbmRzIGdvaW5nIHRvIHJhaXNlIHRocm91Z2hvdXQgdGhlIGV2ZW5pbmc/IElmIHNvLCB0aGVuIGJlaW5nIGFnZ3Jlc3NpdmUgaW4gdGhlIGVhcmx5IHJvdW5kcyBvZiBiZXR0aW5nIGNhbiBiZSBhZHZhbnRhZ2VvdXMgYmVjYXVzZSB5b3UgY2FuICJzdGVhbCIgdGhlIGJsaW5kcy4gWW91J3ZlIGdvdCBncmVhdCBjYXJkcyBidXQgYWN0IGRpc2ludGVyZXN0ZWQgYW5kIGJldCBsb3cgZm9yIHRoZSBmaXJzdCBmZXcgcm91bmRzIG9mIGJldHRpbmcgaW4gb3JkZXIgdG8gZ2V0IHlvdXIgb3Bwb25lbnRzIHRvIGtlZXAgcHV0dGluZyBtb25leSBpbiB0aGUgcG90LCB3aGljaCB0aGV5IHdvdWxkbid0IGRvIGlmIHRoZXkgdGhvdWdodCB5b3UgaGFkIGdyZWF0IGNhcmRzLiBUaGlzIGNhbiBiYWNrZmlyZSBvbiB5b3UsIG9mIGNvdXJzZSwgYmVjYXVzZSBpdCBhbGxvd3MgcGVvcGxlIHdpdGggbG9uZ3Nob3QgaGFuZHMgdG8gc3RpY2sgYXJvdW5kIChsaWtlIG1ha2luZyBhIGZsdXNoIG9uIHRoZSBsYXN0IGNhcmQgdGhhdCB3aWxsIGJlYXQgeW91ciB0aHJlZSBvZiBhIGtpbmQsIG9yIHdoYXRldmVyKS4gClRob3NlIHBsYXRlcyBhcmUgc3VwcG9zZWQgdG8gc3RheSB3aXRoIHRoZSB2ZWhpY2xlIHdoZW4gdGhlcmUgaXMgYSB0cmFuc2ZlciBvZiBvd25lcnNoaXAubG9ja2Zyb2cgICAxMiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvSWYgeW91IHJlbnQgc3RheSBhd2F5IGZyb20gRml0Y2hidXJnLiAKSGFuZCAyIGZvbGQgcHJlLiBEZWZpbml0ZWx5IGRvIG5vdCBjYWxsIHR3aWNlIG9uIGFuIEF4IGJvYXJkIGF0IGxpdmUgMS8yIHdpdGggbWlkZGxlIHBhaXIgbm8gZHJhdy4KSG93IFBhaW50bGVzcyBEZW50IFJlbW92YWwgV29ya3MKNjYxIDY2NS4gCkFzIEkgcGFzc2luZyBieSBJIHNlZSBpdCBhbiBvbGRlciBnZW50bGVtYW4gYW5kIGhlIGlzIGp1c3Qgc2l0dGluZyB0aGVyZSBzdGFyaW5nIHN0cmFpZ2h0IGFoZWFkLCBib3RoIGhhbmRzIG9uIHRoZSB3aGVlbC4gCkggY2hlY2tzLCBNUCBiZXRzIGhhbGYgcG90LCBncnVtcHkgY2FsbHMsIGFuZCBJIHB1dCB0aGVtIGJvdGggYWxsIGluIHdpdGggYW4gb3ZlciBwb3Qgc2l6ZSBiZXQuIApPZGRseSBlbm91Z2gsIG1vc3QgZmlnaHRzIEkgaGF2ZSBzZWVuIGFyZSBvdmVyIGluc2lnbmlmaWNhbnQgZGlzY291bnRzIG9yIHBvb3IgcXVhbGl0eSBpdGVtcy4gCklJUkMgdGhleSBnb3Qgc29tZSBhc3NvcnRlZCBvaWwgaXNzdWVzIGFuZCBhcmUgYSBsaXR0bGUgZnJhZ2lsZSBhZnRlciBtb2RzLCB3aGljaCBpc24gZ29vZCBvbiB0aGUgdXNlZCBtYXJrZXQgd2hlbiB0aGUgYnJvIGN1bHR1cmUgYXJvdW5kIHRoZW0gaXMgdHVuaW5nIHRoZW0gaGFyZC4gCkFzIHNoZSBhcHByb2FjaGVzLCBzaGUgc2F5cyBvdXQgbG91ZCwgIlNhbS4gU2FtLiAKQW5kIGRhbWFnZS4gCjQ3KSwgb2YgTW91bnQgUmFpbmllciwgYXNrZWQgYXQgYSByZWNlbnQgcHVibGljIGhlYXJpbmcgb24gdGhlIHByb3Bvc2VkIGxlZ2lzbGF0aW9uLiBHb2luZyB0byBiZSBvdmVyc2VlaW5nIHRoaXM/IGJpbGwgd291bGQgYWxsb3cgcXVhbGlmaWVkIGNoYXJpdGllcyBtYWlubHkgY291bnR5IHZvbHVudGVlciBmaXJlIGNvbXBhbmllcyB0byBob3N0IGEgcG9rZXIgdG91cm5hbWVudCBvbmNlIGEgbW9udGggdG8gcmFpc2UgbW9uZXkuIApKdXN0IHRvIGdpdmUgdGhpcyBzb21lIHBlcnNwZWN0aXZlLCBpbiAyMDA1LCB0aGUgcmV2ZW51ZSBmcm9tIG9ubGluZSBwb2tlciB3YXMgcmVwb3J0ZWQgdG8gYmUgaW4gdGhlIHZpY2luaXR5IG9mICQyMDAgbWlsbGlvbi4uIApVc2luZyBhbiBlYXJsaWVyIGV4YW1wbGUgaW4gdGhpcyBhcnRpY2xlLCBhc3N1bWUgeW91IGhhdmUgYSBwYWlyIG9mIGFjZXMsIGFuZCB5b3UgcGxhY2UgYSAkMTAwIGJldCBhbmQgb25lIHBsYXllciBjYWxscyB3aXRoIEFLLiAKV2Uga29uZGVuIGR1cyBpbiBUIHNoaXJ0IHZlcnRyZWtrZW4hIEVlcnN0IG9wIG5hYXIgQW50aGVtLCBvb2sgbGFuZ3MgZGUgSTE3LiBWYW4gb256ZSAyMDExIHRyaXAgaGVyaW5uZXJkZSBpayBtZSBub2cgZGUgbW9vaWUgc3VwZXJtYXJrdGVuIGhpZXIuIEVlcnN0IHZvbmRlbiB3ZSBoaWVyIG5vZyBvbnplIGVlcnN0ZSBnZW9jYWNoZSBpbiBkZSBVU0EgZW4gcGxhYXRzdGVuIG9uemUgZWVyc3RlIGdlb2NvaW4gKGJpaiBkZSB3ZWxrb21zdCB3YXRlcnZhbCB0dXNzZW4gZGUgc2FndWFybyBkYWFybmEgdHJva2tlbiB3ZSBuYWFyIGRlIFNhZmV3YXlzIHZvb3IgZGUgdHJhZGl0aW9uZWxlIHBpY2tuaWNrYWFua29wZW4gZW4gZWVuIGZyaWdvYm94IChnZWVuIGlzb21vIGRlemUga2VlciwgbWFhciBwbGFzdGllayEpLiAKRGVsaWNpb3VzIGF2b2NhZG8gdG9hc3QuIApUaGVzZSBpbWJhbGFuY2VzIGFyZSB0aGUgc291cmNlIG9mIG1vc3QgY2hyb25pYyBpbGxuZXNzLgpTaSBub3VzIHRpb25zIHN1c3BpY2lldXggZCdhdXRydWkgIGNoYXF1ZSBzZWNvbmRlLCBub3VzIG5lIHNlcmlvbnMgcGFzIGh1bWFpbnMuIFZpZGVtbWVudCwgY2UgYm9ndWUgZGUgbGEgcHN5Y2ggaHVtYWluZSBwZXJtZXQgYXV4IGVuZmlyb3VhcGV1cnMgZCdhbGxlciAgbGEgcGNoZS4gU2lzc2VsYSBCb2ssIHRoaWNpZW5uZSAgSGFydmFyZCwgY2l0ZSBkYW5zIGxlIE5hdGlvbmFsIEdlb2dyYXBoaWM6TWVudGlyIGVzdCB1bmUgZmFvbiBwbHVzIGZhY2lsZSBkZSBwcmVuZHJlIGRlIGwnYXJnZW50ICBxdWVscXUndW4gcXVlIGRlIGx1aSB0YXBlciBzdXIgbGEgdHRlLi4gCkl0IGZhaXIgdG8gc2F5IHRoYXQgSSBhbSBzY2VwdGljYWwgYWJvdXQgYW55dGhpbmcgRGlzbmV5IHJlbGVhc2VzIHdpdGggQ2hpbmVzZSBpbmZsdWVuY2UsIG5vdCBiZWNhdXNlIG9mIHJoZXRvcmljIHJpZ2h0IG5vdyBidXQgYmVjYXVzZSBvZiB0aGUgZmFjdHMgc3Vycm91bmRpbmcgRGlzbmV5IHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBDaGluZXNlIGZpbG0gaW5kdXN0cnksIGFzIEkgcG9zdGVkIGluIGEgcmVwbHkgdG8gYW5vdGhlciByZXBseSBvbiBteSBjb21tZW50LgpJdCB0YWtlcyBzbyBtdWNoIGF3YXkgZnJvbSB0aG9zZSB3aG8gY29tZSBsb29raW5nIGZvciBoZWxwIGZvciBsZXNzIGVudGVydGFpbmluZyBidXQganVzdCBhcyBoeXBvdGhldGljYWxseSBpbXBhY3RmdWwgc2l0dWF0aW9ucy4gVGhlIHdvcnN0IHBhcnQsIHRvIG1lLCBpcyB0aGF0IGl0IGVuY291cmFnZXMgdGhlIHBvYWNoaW5nIG9mIG91ciBzdG9yaWVzIGFuZCB0cm9sbHMgYW5kIG1ha2VzIHRoZSBzdWIgYSBsZXNzIHNhZmUgcGxhY2UgdG8gYmUuIApDZW50YXJhIGV4cGFuZGllcnQgaW0gSW5kaXNjaGVuIE96ZWFuClBvc3RlZCBieSBzd2VldGtpZCBhdCA4OjAwIEFNIG9uIE1heSAyMywgMjAwOApUaGUgdGhpbmcgd2l0aCB3YWxraW5nIG9uIGVnZyBzaGVsbHMgaXMgLiBJdCBvbmx5IGEgcHJvYmxlbSBpZiB5b3UgYWN0dWFsbHkgY2FyZSBhYm91dCBub3QgYnJlYWtpbmcgdGhlbS4gUHV0IG9uIHNvbWUgc2hvZXMgYW5kIGp1bXAgYWxsIG92ZXIgdGhlbS4gClJlZmVyZW5jZWQsIGluc2lnaHRmdWwsIHdlbGwgd3JpdHRlbiBhbmQgbmljZWx5IGlsbHVzdHJhdGVkLiBJdCBpcywgaW4gaXRzIG93biBzcGVjaWFsIHdheSwgYWNoaW5nbHkKQm91bGRlciBleHBlcnRzIG9mZmVyIGRpZmZlcmVudCBwYXRocyB0byBpbnRpbWF0ZSBjb25uZWN0aW9uCkJ1dCB5b3UgbWF5IG5lZWQgdG8gbGVhcm4gd2hhdCBzaGUgbGlrZXMgY2xpdG9yaXMgd2lzZSBiZWZvcmUgeW91IG1vdmUgb250byBib3RoLiAKSSBkb24gdGhpbmsgQ29tbWFuZGVyIFdhdGVyZm9yZCBtdWNoIGNhcmVzIHdoYXQgaGFwcGVucyB0byBKdW5lIGFuZCBoZXIgdW5ib3JuIGJhYnkgYW55bW9yZSwgZXNwZWNpYWxseSBub3Qgbm93IHRoYXQgaXQgYmVlbiBjb25maXJtZWQgdGhhdCB0aGUgYmFieSBpc24gYmlvbG9naWNhbGx5IGhpcy4gRnJlZCBoYXMgbWFkZSBxdWl0ZSBhIGZldyBzdHVwaWQsIHJpc2t5IGRlY2lzaW9ucyBsYXRlbHkgdGhhdCBjb3VsZCBibG93IGJhY2sgb24gaGltLCBsaWtlIGJlYXRpbmcgU2VyZW5hLCByYXBpbmcgaGlzIDkgbW9udGhzIHByZWduYW50IGhhbmRtYWlkLCBjYXJyeWluZyBvbiBhbiBhZmZhaXIgd2l0aCBoaXMgaGFuZG1haWQsIGJ1aWxkaW5nIGEgcHJpY2V5IFJlZCBDZW50ZXIgdGhhdCBpbW1lZGlhdGVseSBnb3QgYmxvd24gdG8gYml0cywgdGhlIGZhaWxlZCBkaXBsb21hdGljIG1pc3Npb24gdG8gQ2FuYWRhLCBmYWlsaW5nIHRvIHJlcG9ydCB0aGF0IGhpcyBoYW5kbWFpZCBoYWQgZXNjYXBlZCBoaXMgaG91c2Vob2xkLCBhbmQgZmluYWxseSBseWluZyB0byBHaWxlYWQgb2ZmaWNpYWxzIHdoZW4gaGUgc3BpbnMgdGhhdCAiSnVuZSB3YXMga2lkbmFwcGVkIiBzdG9yeS4gCkkgYmVsaWV2ZSBpdCB3YXMgYWxzbyByZXBvcnRlZCB0aGF0IGhlIGhhZCBhIHJvbWFudGljIGludGVyZXN0IGluIGhlciB0aGF0IHdhcyBub3QgcmVjaXByb2NhdGVkLiBJIGRvbid0IHJlY2FsbCB0aGUgdGltZWxpbmUgYnV0IEkgYmVsaWV2ZSBzaGUgd2FzIGF0IGhpcyBob3VzZSB1bnRpbCAxMCBvciAxMSBQTSB0aGUgbmlnaHQgcHJpb3Igd2hpY2ggaXMgb2RkIGZvciBhIHdvcmsgbmlnaHQgYWZ0ZXIgc2hlIGhhZCBzcGVudCBhbGwgZGF5IGF0IGEgZ29sZiB0b3VybmFtZW50LiAKRnQuIE9uIGFncmljdWx0dXJhbCBsYW5kLmp1c3QgZm9sbG93ZWQgdGhhdCBsYXcsIEpvaGFsIHNhaWQuIApXaGVuIEkgdHJpZWQgdG8gY2xpcCB0byBmaXggbWlzdGFrZSwgaXQganVzdCBnb3Qgd29yc2UgbG9sLi4gClF1ZWxzIHNlcm9udCBsZXMgZWZmZXRzIGRlIGNldHRlIHZlaWxsZSByZXZpc2l0ZSwgIGxhIG1haXNvbiBldCBhdSBkZWwgPyBBIHZvdXMgZGUgbGUgZGNvdXZyaXIgcGFyIHZvdXMgbW1lcyAhCkFuZCBwZXJoYXBzIHRoZSBzaGlmdCBpbiB0aGUgdXNlIG9mIGxhbmd1YWdlLCB0aGUgZW5kIG9mIHN5bWJvbGljIHZpb2xlbmNlIGFnYWluc3Qgd29tZW4gd2hvIGhhdmUgYWJvcnRpb25zIGFuZCBhYm9ydGlvbiBhZHZvY2F0ZXMsIHN5bWJvbGl6ZXMgYSBzbGlnaHRseSBkaWZmZXJlbnQgb3JkZXIgb2YgdGhpbmdzPyBXZSBtYXkgbm93IGhhdmUgYSBwb2xpdGljYWwgb3JkZXIgd2hlcmUgbW9zdCBvZiB0aGUgcGVvcGxlIGluIGNoYXJnZSBhcmUgbm8gbG9uZ2VyIHNsYXZlcyB0byBhIHJhZGljYWwgcmVsaWdpb3VzIG1vdmVtZW50LiAoQWNjb3JkaW5nIHRvIENEQyBzdGF0aXN0aWNzIEJsYWNrIHdvbWVuIGFyZSB0aHJlZSB0aW1lcyBhcyBsaWtlbHkgYXMgd2hpdGUgd29tZW4gdG8gZ2V0IGFuIGFib3J0aW9uKS4KQSBiYXNpYyB0aW1lIHRhYmxlLiBJZiB0aGlzIGhhcHBlbnMgaXQgYW1hemluZyBmb3IgdGhlIGVudGlyZSB3b3JsZCBhbmQgZm9yIE5vcnRoIEtvcmVhIGVzcGVjaWFsbHkgYnV0IHRoZXJlIGhhdmUgYmVlbiBwcm9taXNlcyBvZiBzdGVwcyB0b3dhcmRzIGRlbnVjbGVhcml6YXRpb24gYmVmb3JlIG1hZGUgYnkgTm9ydGggS29yZWEgYW5kIGl0IGhhcyBmYWxsZW4gdGhyb3VnaC4gV2UgaGF2ZSB0byB3YWl0IGFuZCBzZWUgd2hhdCBhY3R1YWxseSBjb21lcyBvZiB0aGlzIGJlZm9yZSB3ZSBjYW4gcmVhbGx5IGJlIHRvIGhvcGVmdWwuCkNhbmFkaWFuIHJldGFpbCBpbnZlc3RvcnMgbG9va2luZyBmb3IgZXhwb3N1cmUgdG8gaGVkZ2UgZnVuZCBsaWtlIHN0cmF0ZWdpZXMgdGhhdCBjYW4gaW52b2x2ZSBsZXZlcmFnZSBhbmQgc2hvcnQgc2VsbGluZyBhcmUgYmVpbmcgaW51bmRhdGVkIHdpdGggbmV3IG9wdGlvbnMsIGZvbGxvd2luZyBhIHJ1bGUgY2hhbmdlIGluIEphbnVhcnkuCkJ1dCBHYWxsZXkgZG9lc24ndCBleHBlY3QgdGhlbSB0byBzdGljayBhcm91bmQgZm9yZXZlci4gCkVWRVJZIEhPVVIuIApUaGlzIGlzIGEgZ2xvYmFsIHByb2JsZW0uIE1vcmU+PkRpcnR5IFBvbGl0aWNzIENsZWFudXA6IE5pY2t5IEhhZ2VyIFNldHRsZXMgV2VzdHBhYyBEaXNwdXRlVW5kZXIgdGhlIHNldHRsZW1lbnQgYWdyZWVtZW50IGFubm91bmNlZCB0b2RheSwgV2VzdHBhYyB3aWxsIGJlIHNpZ25pZmljYW50bHkgdGlnaHRlbmluZyBpdHMgY29udHJhY3R1YWwgdGVybXMgaW4gcmVsYXRpb24gdG8gdGhlIHJlbGVhc2Ugb2YgY3VzdG9tZXIgaW5mb3JtYXRpb24gdG8gZ292ZXJubWVudCBhZ2VuY2llcywgaW5jbHVkaW5nIHRoZSBQb2xpY2UgV2VzdHBhYyBoYXMgYXBvbG9naXNlZCB0byBNciBIYWdlciBmb3IgcmVsZWFzaW5nIGhpcyBpbmZvcm1hdGlvbiBhbmQgaGFzIGFncmVlZCB0byBwYXkgaGlzIGNvc3RzIGFuZCBjb21wZW5zYXRpb24uIE1vcmU+Pi4gClRoZSBnb29kIG5ld3MsIGhvd2V2ZXIsIGlzIHRoYXQgdGhlcmUgYXJlIHN0aWxsIHNvbWUgcmVsYXRpb25zaGlwcyB0aGF0IHRydWx5IHdvcmsgZXZlbiBhZnRlciBtYW55IHllYXJzLi4gCkhvd2V2ZXIgbm93IHdlIGFyZSBrbm9ja2luZyBvbiB0aGUgZG9vciB0byBhbiBlcmEgd2hlbiB3ZSBiZWdpbiB0byB0YWtlIGpvYnMgYXdheSBmcm9tIGh1bWFuIGludGVsbGVjdCBhcyB3ZWxsLiAKUnVsZSA3OiBQb3N0cyBtdXN0IGJlIHJlbGV2YW50IHRvIHRoZSB0aGVtZSBvZiB0aGUgc3VicmVkZGl0LiBUaGlzIHBvc3QgZG9lcyBub3Qgc2hvdyBzb21lb25lIHdobyBpcyBjaG9vc3kgZW5vdWdoLgoiVGhpcyBzZWFzb24gd2lsbCBiZSBlbGlnaWJsZSBmb3IgdGhlIDIwMTggRW1teXMuIApJIGhhdmUgaGVhcmQgb2YgQ2hpbmVzZSBvd25lcnMgbG9zaW5nIHRoZWlyIHN1cGVybWFya2V0cyBhbmQgYnVzaW5lc3NlcyBnb2luZyBiYW5rcnVwdCBiZWNhdXNlIG9mIGdhbWJsZS4gClRoZXkgc3BlY2lmaWNhbGx5IHNhaWQgaW4gYW4gaW50ZXJ2aWV3ICJXZSBrbm93IGEgbG90IG9mIHBlb3BsZSB3YW50IHRvIHNlZSBhIHJldml2YWwgb2YgdGhlIEJhdHRsZSBOZXR3b3JrIGFuZCBMZWdlbmRzIHNlcmllcywgYnV0IHdlIGZvY3VzZWQgb24gTU0xMSBhbmQgd2FpdGluZyB0byBzZWUgaG93IHRoYXQgdHVybnMgb3V0IGJlZm9yZSB3ZSB0aGluayBvZiBhbnl0aGluZyBlbHNlLiIgU2luY2UgdGhleSBzYWlkIHRoZXkgcGxlYXNlZCB3aXRoIE1NMTEgc2FsZXMsIEkgaG9wZSB0aGV5IGxvb2sgYXQgZmluaXNoaW5nIGl0LiAKSSB3YXMgdG9sZCBvbiBudW1lcm91cyBvY2Nhc2lvbnMgdG8gb3V0c2lkZSB0aW1lIHNob3J0IGJ5IG15IGNvd29ya2VycyBhbmQgbWFuYWdlciBzbyB0aGF0IHdlIGNvdWxkIGdvIGhvbWUgZWFybGllciBvciBzdGFydCBjbGVhbiB1cCBlYXJsaWVyIGV0Yy4gVGhleSBhZHZlcnRpc2UgMzAgbWludXRlcyBlYWNoIHJvdW5kIG9mIG91dHNpZGUgdGltZSBidXQgd291bGQgc2NvbGQgbWUgYW5kIGZvcmNlIG1lIHRvIHRha2UgdGhlbSBpbnNpZGUgYWZ0ZXIgc29tZXRpbWVzIGEgbWVhc2xleSAxMCBtaW51dGVzLiBUaGV5IHNwZW5kIG1vcmUgdGltZSBpbnNpZGUgdGhhbiBvdXQuIApNeSBzcXVhdCBjYXVnaHQgdXAgdG8gbXkgZGVhZGxpZnQgZm9yIEdvZCBzYWtlLiBJIHRob3VnaHQgbWF5YmUgZmF0aWd1ZSB3YXMgdGhlIHByb2JsZW0gYnV0IGl0IGhhcHBlbmluZyBhZ2FpbiBhbmQgSSBub3QgdmVyeSBmYXRpZ3VlZCByaWdodCBub3cuQXQgdGhpcyBwb2ludCBJIHNwZW50IG1vcmUgdGltZSBpbiB0aGUgZ3ltIGZydXN0cmF0aW9uIGNyeWluZyB0aGFuIGFjdHVhbGx5IGRlYWRsaWZ0aW5nIG1vZGVyYXRlbHkgaGVhdnkuIApTYW4gRmVybmFuZG8gbGV0cyB1IGJ1eSBpbiBmb3Igb25seSAyMDBrIHNvIGl0IGlzIGEgc2hvcnQgc3RhY2tlcnMgZGVsaWdodC4gUmVhc29uYWJsZSByYWtlIGF0IGJvdGggcGxhY2VzLiAKVGhlIGJpZyB0d28gYXJlIE11Y2tsZXNob290IHNvdXRoIG9mIFNlYXR0bGUgaW4gQXVidXJuIGFuZCBGb3J0dW5lIGRvd24gaW4gUmVudG9uLiBTbm9xdWFsbWllIGFuZCBSZWQgRHJhZ29uIGFyZSBzbWFsbGVyIHJvb21zLCBSZWQgRHJhZ29uIGhhcyBQTE8gYnV0IHRoYXQgdGhlIG9ubHkganVpY3kgZ2FtZSB0aGF0IGV2ZXIgcmVhbGx5IHJ1bm5pbmcgdG8gbXkga25vd2xlZGdlLiAKSSB3aXNoIEkgY291bGQgcmVtZW1iZXIgd2hlcmUgSSByZWFkIHRoaXMvIGhlYXJkIGl0LiAKV2hhdCBkbyBJIGdldD8gVGhpcz8gSSBkb24gZXZlbiBrbm93IGlmIEkgc2hvdWxkIGdvIGZvciBhIHNpbmdsZSBvciBkb3VibGUgc3RhZ2UuIApIYXJyb2Qgd2FzIGNoYXJnZWQgYSB5ZWFyIGxhdGVyIGFuZCBwbGVhZGVkIGd1aWx0eSBvbiBoZXIgZmlyc3QgZGF5IGluIGNvdXJ0LCBidXQgZGlzcHV0ZWQgdGhlIGRlcGFydG1lbnQncyBzdWdnZXN0aW9uIHNoZSdkIG5pY2tlZCBzb21ld2hlcmUgaW4gZXhjZXNzIG9mICQxLjUgbWlsbGlvbi4KRXJpYyBOb2JsZSwgcHJlc2lkZW50IG9mIFRoZSBDYXIgTGFiIGNvbnN1bHRpbmcgZmlybSBpbiBPcmFuZ2UsIENhbGlmLiwgc2VlcyBUb3lvdGEgYXMgdGhlICI4MDAgcG91bmQgZ29yaWxsYSBvZiBoeWJyaWQgdGVjaG5vbG9neS4iIEhlIGJlbGlldmVzIFRveW90YSB3aWxsIGhhdmUgYSBsb2NrIG9uIGxpY2Vuc2luZyBpdHMgaW50ZWxsZWN0dWFsIHByb3BlcnR5LiAKVGhlIG1hbmFnZXIgc2F3IGhpbSBhbmQgc2FpZCBXQUlUIFdIQVQgQVJFIFlPVSBET0lORz8gYW5kIHRoZXkgZ3V5IHNhaWQgU09SUlkgSSBET05UIEhBVkUgQU5ZIE1PTkVZIGFuZCBsZWZ0IHRoZSBjYXJ0IGFuZCB3YWxrZWQgYXdheS4uIApMZW1vbiwgcm9zZW1hcnksIGFuZCBncmFwZWZydWl0IGFyZSBlc3BlY2lhbGx5IGdvb2QgYXQgc3RpbXVsYXRpbmcgbW92ZW1lbnQgYW5kIHN1cHBvcnRpbmcgdGhlIGNsZWFuc2luZyBhY3Rpb24uIEEgbHltcGhhdGljIG1hc3NhZ2UgaW52b2x2ZXMgZGVlcCBzdHJva2VzIHRoYXQgd29yayBmcm9tIHRoZSBleHRyZW1pdGllcyB0b3dhcmQgdGhlIGhlYXJ0LiAKQ3IgUGV0ZXIgTW9yYW4gd2FzIGFuZ2VyZWQgYnkgdGhlIGNvdW5jaWwncyBkZWNpc2lvbi4gCiJNci4gRmVycmVyIGxvb2tzIGZvcndhcmQgdG8gdmlnb3JvdXNseSBmaWdodGluZyB0aGVzZSBjaGFyZ2VzIHRoYXQgd2UgYmVsaWV2ZSBhcmUgdHJ1bXBlZCB1cCwiIEZlcnJlcidzIGF0dG9ybmV5LCBQaGlsaXAgSGlsZGVyLCBzYWlkIGFmdGVyIEZyaWRheSdzIGV4dHJhZGl0aW9uIGhlYXJpbmcuIApXaGVuIGEgZGVmZW5kYW50IGNsYWltcyBhIHZpb2xhdGlvbiwgdGhlIGNvdXJ0IGFwcGxpZXMgYSBiYWxhbmNpbmcgdGVzdCwgYXNzZXNzaW5nIHRoZSBsZW5ndGggb2YgdGhlIGRlbGF5LCB0aGUgcmVhc29uIGZvciBpdCwgd2hldGhlciB0aGUgZGVmZW5kYW50IGFzc2VydGVkIHRoZSBzcGVlZHkgdHJpYWwgcmlnaHQsIGFuZCB3aGV0aGVyIHRoZSB3YWl0IGNvbXByb21pc2VkIHRoZSBkZWZlbnNlLiAKUGxlYXNlIGRvIHJlc2VhcmNoIGFib3V0IGl0LiAKRXZlcnkgc21hbGwgYnVzaW5lc3Mgb3duZXIgaW4gdGhpcyBjb3VudHJ5IGhhcyBhIHJlZCB0YXBlIHN0b3J5ClRzb2JhcGhvbWV0Q29va2luZyBpcyBteSBmYXZvcml0ZSBza2lsbApGcmVlQlNEIG1pZ2h0IG5vdCBzdXBwb3J0IGl0IHZlcnkgd2VsbCwgaWYgYXQgYWxsLiAKSmFwYW4gaXMgY3VycmVudGx5IHRyeWluZyB0byBydW4gb24gdGhlIGludGVycHJldGF0aW9uIHRoYXQgd2hpbGUgaW5kaXZpZHVhbHMgY2FuIGRlbWFuZCByZXN0aXR1dGlvbiwgaXQgY2Fubm90IGRvIHNvIGJ5IHVzaW5nIHRoZSBjb3VydHMgKG5vdGUgdGhhdCB0aGUgMTk2NSBhZ3JlZW1lbnQgZG9lc24gbWVudGlvbiB0aGlzIGVpdGhlcikuIFRoaXMgZG9lc24gbWFrZSBzZW5zZSBob3dldmVyLCBzaW5jZSBpdCB3YXMgdGhpcyB2ZXJ5IGxhY2sgb2YgbWVudGlvbiBpbiBKYXBhbiBhZ3JlZW1lbnRzIHRvIG5vcm1hbGl6ZSB0aWVzIHdpdGggQ2hpbmEgdGhhdCBKYXBhbiBpdHNlbGYgYWNrbm93bGVkZ2VkIHdoZW4gaXRzIGNvcnBvcmF0aW9ucyBkaWQgcGF5IENoaW5lc2UgZm9yY2VkIGxhYm9yZXJzIGNvbXBlbnNhdGlvbiBhIGZldyB5ZWFycyBhZ28uCkZpcnN0IHBva2VyIGJvb2sgdG8gc3VnZ2VzdCB5b3UgaXMgIkhhcnJpbmd0b24gT24gSG9sZCdlbSIgRXhwZXJ0IFNyYXRlZ3kgZm9yIE5vIExpbWl0cyBUb3VybmFtZW50cyIgYnkgRGFuIEhhcnJpbmd0b24uIApFUCB0b29rIGl0IHRvbyBmYXIgYnkgY29tcGxhaW5pbmcgYWJvdXQgdGhlIGh1bW9yLCBidXQgdGhlIGh1bW9yIGl0c2VsZiAodGhvdWdoIGl0IG1pZ2h0IHdvcmtlZCBvbiB0aGUga2lkcykgd2FzbiBncm91bmRlZCBlbm91Z2guIApQcmVkaWN0aW9uIGFuZCBFeHBlcmltZW50SHVtYW5zIGFyZSBiYWQgb2JzZXJ2ZXJzIGFuZCBhbnlvbmUgY2FuIGJlIGZvb2xlZCBieSBvcHRpY2FsIGlsbHVzaW9ucyBvciBiZSB0cmlja2VkIGJ5IGluYWNjdXJhdGUgbWVtb3JpZXMuIEh1bWFucyBhcmUgYWxzbyBwcm9uZSB0byB3aXNoZnVsIHRoaW5raW5nIGFuZCBzcHVyaW91cyBsb2dpYy4gV2hlbiBmb3JtdWxhdGluZyB0aGUgaHlwb3RoZXNpcywgdGhpcyBpc24ndCBuZWNlc3NhcmlseSBhIHByb2JsZW0sIGJ1dCB3aGVuIG1ha2luZyBwcmVkaWN0aW9ucywgcGVyZm9ybWluZyB0aGUgZXhwZXJpbWVudHMgYW5kIGV2YWx1YXRpbmcgdGhlIHJlc3VsdHMsIGl0IGlzLiAKRWRpdDoganVzdCBhZGRyZXNzaW5nIHRoZSB3aG9sZSBtZSBiZWluZyBhc3Nob2xlIGZvciBtYWtpbmcgYXNzdW1wdGlvbnMgdGhpbmcuIEkgYWxyZWFkeSBtZW50aW9uZWQsIEknbSB3ZWFrIGFmLiBOZXZlciBiZWVuIGFibGUgdG8gY2FycnkgdGhvc2UgYm90dGxlcyBhbmQgcHJvYmFibHkgbmV2ZXIgd2lsbC4gCkJ1dCBpbiB0aGUgd2FrZSBvZiBuZWdhdGl2ZSBwdWJsaWNpdHkgZm9sbG93aW5nIGEgU3VuZGF5IEFnZWludmVzdGlnYXRpb24gaW50byBpdHMgYWN0aXZpdGllcywgdGhlIGZvdW5kYXRpb24gZHJvcHBlZCBpdHMgc2VjcmVjeSBiaWQgbGFzdCB3ZWVrLgpJZiB5b3UgbGl2ZSBpbiBhIGNvdW50cnkgdGhhdCB2YWNjaW5hdGVzIGFnYWluc3QgY2hpY2tlbnBveCBsaWtlIHRoZSBVUywgQ2FuYWRhLCBBdXN0cmFsaWEsIGFuZCBKYXBhbiB0aGVuIHlvdSByZWFsbHkgbmVlZCB0byBnZXQgaXQgZm9yIHlvdXIga2lkcy4gVGhleSBhcmUgdW5saWtlbHkgdG8gY2F0Y2ggY2hpY2tlbnBveCAibmF0dXJhbGx5LCIgYnV0IG1vc3Qgb2YgdGhlIHdvcmxkIHN0aWxsIGRvZXNuIHZhY2NpbmF0ZSBhZ2FpbnN0IHRoZSBkaXNlYXNlLiBUaGF0IG1lYW5zIHRoZXkgY291bGQgcG90ZW50aWFsbHkgY2F0Y2ggY2hpY2tlbnBveCBhcyBhZHVsdHMgd2hlbiB0cmF2ZWxpbmcgYWJyb2FkLCBhbmQgdGhlbiBpdCB3b3VsZCBiZSBhIG1vcmUgc2VyaW91cyBoZWFsdGggdGhyZWF0IChzaW5jZSwgYXMgc3RhdGVkIGFib3ZlLCBjaGlja2VucG94IGlzIGEgbW9yZSBzZXJpb3VzIGRpc2Vhc2UgaW4gYWR1bHRzKS4gCldhaXQgZm9yIHRoZSBiaWcgYmxpbmQgKFRoZSBiaWcgYmxpbmQgaXMgdGhlIGxhcmdlc3QgZm9yY2VkIGJldCBhdCB0aGUgYmVnaW5uaW5nIG9mIGEgZ2FtZSBkZXNpZ25lZCB0byBzdGltdWxhdGUgYmV0dGluZy4gVGhlIHBsYXllciB3aG8gaGFzIHRvIGNvbnRyaWJ1dGUgdGhlIGJpZyBibGluZCByb3RhdGVzIG9uZSBwb3NpdGlvbiB0byB0aGUgbGVmdCBhZnRlciBlYWNoIGdhbWUuKSB0byBnZXQgdG8geW91IGJlZm9yZSBwbGF5aW5nLiAKV2hpY2ggc2tpbGxzIGFyZSB5b3UgdHJ5aW5nIHRvIHVudHJhaW4/LiAKU2hlcyBteSBtaXJhY2xlIGNoaWxkIHdobyBJIGdvdCBwcmVnbmFudCB3aXRoIGFmdGVyIEkgd2FzIHRvbGQgSSBjb3VsZG4gU2hlIGlzIG15IGJhbGwgb2YgY3Jhenkgd3JhcHBlZCB1cCBpbiBhIHRpbnkgaHVtYW4gZm9ybS4gV2UgY2FsbCBoZXIgVGF6IGJlY2F1c2UgYXMgc29vbiBhcyBzaGUgc3RhcnRlZCBtb3ZpbmcgYnkgaGVyc2VsZiBzaGUgd2FzIGV2ZXJ5d2hlcmUgYW5kIGludG8gZXZlcnl0aGluZy4uIApBbmQgaWYgeW91IGRvbiBnZXQgb24gYXQgQ29xdWl0bGFtIENlbnRyYWwgU3RhdGlvbiwgdGhlcmUgYWxyZWFkeSBubyBzZWF0aW5nIHNwYWNlISBJdCBkb3ducmlnaHQgdW5mYWlyIHRoYXQgVHJhbnNsaW5rIGNoYXJnZXMgdXMgbmVhcmx5IGRvdWJsZSBvZiB3aGF0IFZhbmNvdXZlciByZXNpZGVudHMgaGF2ZSB0byBwYXkgdG8gdXNlIHRoZSB0cmFuc2l0IHN5c3RlbSwgYnV0IHdlIGdldCB3b3JzZSBzZXJ2aWNlIHRoYW4gdGhlbS4uIApJdCBwb2ludGxlc3MgdG8gYXNrIHRlbnMgb2YgbWlsbGlvbnMgb2YgcGVvcGxlIHRvIGNoYW5nZSB0aGVpciBiZWhhdmlvciB3aGVuIHlvdSBjb3VsZCBqdXN0IHB1dCBjb21wbGV0ZWx5IHJlYXNvbmFibGUsIGNvbW1vbiBzZW5zZSwgYmVuZWZpY2lhbCB0byBhbGwgcmVndWxhdGlvbnMgb24gYSBoYW5kZnVsIG9mIGluZHVzdHJ5IHByYWN0aWNlcyBhbmQgc29sdmUgdGhlIHByb2JsZW0gYXQgaXRzIHJvb3QuIApEb24ndCBzY2hlZHVsZSB0aGUgc2hvd2VyIHRvbyBjbG9zZSB0byB0aGUgbW90aGVyIHRvIGJlJ3MgZHVlIGRhdGUgICByZW1lbWJlciwgYmFiaWVzIGRvIGNvbWUgZWFybHkuIEFsc28sIG1hbnkgcGFuaWNreSBtb21zIHdpbGwgZ28gb3V0IGFuZCBidXkgZXZlcnl0aGluZyB0aGV5IG5lZWQgb25jZSB0aGV5IGdldCBjbG9zZSB0byB0aGVpciBkdWUgZGF0ZSwgc28geW91IHdhbnQgdG8gaGF2ZSB0aGUgc2hvd2VyIGJlZm9yZSBzaGUgZ29lcyBvdXQgYW5kIHB1cmNoYXNlcyBldmVyeXRoaW5nIGhlcnNlbGYuLiAKSWYgZG9uZSByaWdodCwgdGhleSBzZWVtIHZlcnkgbmF0dXJhbCBhbmQgaG9uZXN0bHkgeW91IGRvbid0IG93ZSB0byBhbnlvbmUgdG8gdGVsbCB0aGVtIHRoYXQgdGhleSBhcmVuJ3QgcmVhbCB1bmxlc3MgdGhleSBhc2suIApPUDogSGkhIFRoaXMgaXMgc2hlISBJIGp1c3QgbmVlZCB0byBnZXQgc29tZSBpbmZvIGZyb20geW91LCBpZiB5b3UgZG9uIG1pbmQuIElzIGl0IGEgcmVzaWRlbnRpYWwgaG9tZSBvciBhIGJ1c2luZXNzPyBJZiBob21lLCBob3cgbWFueSBiZWRyb29tcy9iYXRocm9vbXMgYXJlIHlvdSBsb2NhdGVkIGluIHRoZSBbcmVkYWN0ZWRdIGFyZWE/ClZyYXRpeCAgNSwyNDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTXkgc3RpbGwgYmVzdGllLCBNeXNlbGYsIGFuZCBBLiAKVGhlIGNvbGQgaGFzIHByb21wdGVkIG11bHRpcGxlIHNjaG9vbCBib2FyZHMsIGluY2x1ZGluZyB0aGUgVG9yb250byBEaXN0cmljdCBTY2hvb2wgQm9hcmQgYW5kIHRoZSBUb3JvbnRvIENhdGhvbGljIERpc3RyaWN0IFNjaG9vbCBCb2FyZCwgdG8gY2FuY2VsIGJ1c2VzIHRvZGF5LgpNaW5pbmcgbWFnbmF0ZSBDbGl2ZSBQYWxtZXIgaXMgYWN0dWFsbHkgb24gaGlzIHNlY29uZCBidXNpbmVzcyB2ZW50dXJlLCBhZnRlciByZXRpcmluZyBmcm9tIGhpcyBmaXJzdCBjYXJlZXIgaW4gcHJvcGVydHkgYXQgdGhlIHJpcGUgb2xkIGFnZSBvZiAyOS4gQWZ0ZXIgYSBiaXQgb2YgdHJhdmVsbGluZywgUGFsbWVyIGRlY2lkZWQgdG8gZ2V0IGJhY2sgaW50byBidXNpbmVzcywgYW5kIHN0YXJ0ZWQgYnV5aW5nIGFzc2V0cy4gQmFjayBpbiB0aGUgbWlkIDE5OTBzLCB0aGUgb2N0b2dlbmFyaWFuIGZvdW5kZXIgb2YgcG9rZXIgbWFjaGluZSBjb21wYW55IEFyaXN0b2NyYXQgTGVpc3VyZSB3YXMgZGlhZ25vc2VkIHdpdGggcHJvc3RhdGUgY2FuY2VyIGFuZCBoZSB3YXMgZm9yY2VkIHRvIGhhbmQgaGlzIHNoYXJlaG9sZGluZ3MgYW5kIGZ1bGwgY29udHJvbCBvZiB0aGUgY29tcGFueSB0byBoaXMgd2lmZSBhbmQgc2V2ZW4gc29ucy4KSSBjb3VsZCBiZSB3cm9uZywgYnV0IEkgcmVtZW1iZXIgc29tZW9uZSBzYXlpbmcgaXQgb3BlcmF0ZXMgYXQgYSBsb3NzLCBidXQgc3RlYW0gaXRzZWxmIG1ha2VzIHVwIGZvciBpdC4KU2VhdHRsZS4gCkhlIHBvbGxlZCAxNiwwMDAgdm90ZXMsIHRoaXJkIGhpZ2hlc3QgYW1vbmcgYWxsIGNhbmRpZGF0ZXMgaW4gRGFtYXNjdXMuIEJla2Rhc2ggcmFuIGFzIGFuIGluZGVwZW5kZW50LCBiZWNhdXNlIHRoZSBDb21tdW5pc3QgcGFydHkgaXMgb3V0bGF3ZWQgaW4gU3lyaWEuIEJ1dCB0aGVyZSB3YXMgbm8gZG91YnQgYWJvdXQgaGlzIHRydWUgY29sb3JzIHBvbGl0aWNhbGx5LCBub3IgYWJvdXQgQmVrZGFzaCBoYXZpbmcgUnVzc2lhJ3MgYmxlc3NpbmcuIE1vc3QgU3lyaWFuIHZvdGVycyBrbm93IHRoYXQgQmVrYmFzaCBoYWQgdmlzaXRlZCB0aGUgU292aWV0IFVuaW9uIHRoZSBsYXN0IHRpbWUgaW4gMTk1My4gCkZhc3QgZm9yd2FyZCB0byBub3cuIEJvb21lcnMgYXJlIHN0aWxsIGluIHBvd2VyIGJvdGggcG9saXRpY2FsbHkgYW5kIGluIHRoZSBwcml2YXRlIHNlY3Rvci4gQmVjYXVzZSBvZiB0aGVpciBhY3Rpb25zLCB0aGV5IGhhdmUgZnVja2VkIGEgbGFyZ2UgcG9ydGlvbiBvZiB0aGVpciBvd24gcmV0aXJlbWVudHMsIHNvIHRoZXkgY2FuJ3QgbGVhdmUgdGhlaXIgam9icy4gR2VuIFggY2FuJ3QgbW92ZSBmb3J3YXJkIHRoZSB3YXkgYm9vbWVycyB3ZXJlIGFibGUgdG8sIGFuZCBzaW5jZSBHZW4gWCBjYW4ndCBtb3ZlIGZvcndhcmQsIGl0J3MgaGFyZCBmb3IgbWlsbGVubmlhbHMgdG8gZXZlbiBnZXQgaW4gdGhlIGZ1Y2tpbmcgZG9vci4gR2VuIFggYXJlIG9rYXksIGJ1dCBtaWxsZW5uaWFscyBoYXZlIG5vIG1vbmV5LiBBcyBhIHdob2xlLCB0aGUgZ2VuZXJhdGlvbiBqdXN0IGRvZXMgbm90IGhhdmUgdGhlIGZpbmFuY2lhbCBjYXBhY2l0eSB0byBkbyB0aGUgc2hpdCBib29tZXJzIGNvdWxkLCB3aGljaCBpcyB3aHkgd2Ugc2VlICJtaWxsZW5uaWFscyBhcmUga2lsbGluZyBbc29tZSBidWxsc2hpdCB0aGF0IHdlIGNhbid0IGFmZm9yZC9pc24ndCB3b3J0aCBzcGVuZGluZyBtb25leSBvbl0iIGFydGljbGVzIGNvbnN0YW50bHkuCkJlZm9yZSB4bWFzIEkgbWFrZSB0b25zIG9mIGNvb2tpZXMgdG8gZ2l2ZSBvdXQgdG8gY3VzdG9tZXJzLCBmcmllbmRzLCBhbmQgZmFtaWx5LiBMYXRlbHkgSSBiZWVuIHRyeWluZyB0byBjaGFubmVsIG15IGxvdmUgZm9yIGJha2luZyBpbnRvIGhlYWx0aGllciBvcHRpb25zLCBJIGJlZW4gZXhwZXJpbWVudGluZyB3aXRoIGEgaGVhbHRoeSBtdWZmaW4gcmVjaXBlLiAKSGUgTE9WRUQgaGF2aW5nIHRoZSBsaXR0bGUgZ3V5IGFyb3VuZC4gVGhleSBzbm9vemVkIG9uIHRoZSBjb3VjaCB0b2dldGhlciBhbmQgaGUgZW5kdXJlZCBhbGwgc29ydHMgb2Yga2l0dGVuIGhpamlua3MuIApUaGUgcGxheWVyIHRvIHRoZSBsZWZ0IG9mIHRoZSBTbWFsbCBCbGluZCB3aWxsIGRvdWJsZSB0aGF0IGFtb3VudCBhbmQgc3VibWl0IHRoZSBCaWcgQmxpbmQsIHRodXMgc2V0dGluZyB1cCB0aGUgY2hpcCB2YWx1ZXMgZm9yIHRoZSB1cGNvbWluZyBnYW1lLiAKR2VkdXJlbmRlIG1pam4gRUZMUCAxIHN0YWdlIG1vY2h0IGlrIHplbGZzdGFuZGlnIG1hYXIgb25kZXIgc3VwZXJ2aXNpZSBwYXRpbnRlbiBvbmRlcnpvZWtlbiBlbiBiZWhhbmRlbGVuLiAKVGhpcyB0aG91Z2h0IGV4ZXJjaXNlIHdhcyB0byBoaWdobGlnaHQgaG93IGVhc3kgaXQgY2FuIGJlIGZvciB0aGUgbWFueSBwZW9wbGUgdXNpbmcgY29udHJhY2VwdGl2ZXMgdG8gc3RpbGwgYWNjaWRlbnRhbGx5IGdldCBwcmVnbmFudC4uIApCdXQgeW91IG1pZ2h0IGJlIHZlcnkgY29uZnVzZWQgYWJvdXQgdGhlIHJpZ2h0IHBpY2tzLiAKR3JvdW5kIHRoYXQgaXMgdGhvcm91Z2hseSBzb2FrZWQgYWZ0ZXIgYSByYWluIG9yIHNwcmluZyBtZWx0IGlzIGVhc2llciB0byBkaWcgdGhhbiBzdW4gYmFrZWQgaGFyZCBwYWNrLiAKS3JvcHNzcHJvZyB0ZWduIHAgYXR0cmFrdGlvbjogMyBwbGlkZWxpZ2UgdGVnbiwgZW4gcGVyc29uIGVyIHRpbHRydWtrZXQgYWYgZHUKT3RoZXIgYmFzZWxpbmUgbWVhc3VyZW1lbnRzIGluY2x1ZGVkIGJvZHkgbWFzcyBpbmRleCwgbWluaSBudXRyaXRpb25hbCBhc3Nlc3NtZW50LCBncmlwIHN0cmVuZ3RoLCBzZXJ1bSBjYWxjaXVtIGNvbmNlbnRyYXRpb24gYW5kIGNyZWF0aW5pbmUgY2xlYXJhbmNlLCB3aGljaCB3ZXJlIHVzZWQgYXMgY292YXJpYWJsZXMuIFBJIHdhcyBhc3Nlc3NlZCB1c2luZyBhIGNvbXB1dGVyaXplZCB2aXJ0dWFsIHJlYWxpdHkgc3lzdGVtIChNZWRpY2FhLCBVcnVndWF5KS4gCkFmdGVyIDE1IHllYXJzIGluIGdlbmVyYWwgdmV0ZXJpbmFyeSBwcmFjdGljZSwgIlBldGUiIHRoZW4gYWNjZXB0ZWQgYSBwb3NpdGlvbiB3aXRoIHRoZSBPbnRhcmlvIE1pbmlzdHJ5IG9mIEFncmljdWx0dXJlIGFuZCBGb29kIGFzIHRoZSBmaXJzdCBPbnRhcmlvIFN3aW5lIERpc2Vhc2VzIGNvbnN1bHRhbnQgd2hlcmUgaGUgaGVscGVkIG90aGVyIHZldGVyaW5hcmlhbnMgc29sdmUgZmFybSBpc3N1ZXMgYW5kIGVzdGFibGlzaGVkIHRoZSBPbnRhcmlvIENlcnRpZmllZCBIZXJkIFBvbGljeS4gSW4gR3VlbHBoLCBpdCB3YXMgY29tbW9uIHRvIHNlZSBoaW0gaW4gdGhlIG1vcm5pbmcgb24gYW5kIGFyb3VuZCB0aGUgdW5pdmVyc2l0eSBjYW1wdXMgd2Fsa2luZyAyICAgMyBHZXJtYW4gU2hvcnQgaGFpcmVkIFBvaW50ZXJzLiAKIldob2V2ZXIgZmluaXNoZXMgZmlyc3Qgd2UnbGwgY2FsbCB0aGUgSXJvbm1hbiwiIENvbGxpbnMgcmVwb3J0ZWRseSBzYWlkLCBhbmQgdGhlIElyb25tYW4gdHJpYXRobG9uIGhhcyBiZWVuIG9uZSBvZiB0aGUgd29ybGQncyBtb3N0IHBvcHVsYXIgZW5kdXJhbmNlIGV2ZW50cyBldmVyIHNpbmNlIFtzb3VyY2U6IF0uIE5vdCBvbmx5IGlzIHRoZSBkaXN0YW5jZSBncnVlbGluZywgdGhlcmUncyBhIHRpbWUgbGltaXQgZm9yIGVhY2ggc2VnbWVudC4gTW9zdCBJcm9ubWFuIGV2ZW50cyBhbGxvdyBwYXJ0aWNpcGFudHMgMTcgaG91cnMgdG8gY29tcGxldGUgYWxsIHRocmVlIGxlZ3Mgb2YgdGhlIHJhY2UuLiAKTm8sIGF0IGxlYXN0IG5vdCB3aGVuIGl0IGNvbWVzIHRvIHRoZSB0ZWNobm9sb2d5LiBTRyAxIHdhcyB2ZXJ5IGNsZWFyIGFuZCBjb25zaXN0ZW50IHdpdGggYWNxdWlyaW5nIGFuZCBpbXBsZW1lbnRpbmcgYWxpZW4gdGVjaG5vbG9neS4gRm9yIGV4YW1wbGUsIGh1bWFuaXR5IGdvZXMgZnJvbSBqdXN0IGhhdmluZyBvbmUgc3RhcmdhdGUgdG8gYW4gaW50ZXJnYWxhY3RpYyBnYXRlIGJyaWRnZSBhbmQgYSBmbGVldCBvZiBpbnRlcnN0ZWxsYXIgYmF0dGxlY3J1aXNlcnMgYW5kIHNwYWNlIGZpZ2h0ZXJzLiBUaGlzIGhhcHBlbnMgb3ZlciB0aGUgZW50aXJlIHNlcmllcyBhcyB0aGUgdGVjaCBpcyBhY3F1aXJlZCwgdGVzdGVkLCBpbXBsZW1lbnRlZCwgcmUgdGVzdGVkIGFuZCBpdGVyYXRlZCBvbiBhbmQgd2Ugc2VlIGhvdyBpdCBjaGFuZ2VzIG91ciBtaWxpdGFyeSwgcG9saXRpY3MgYW5kIHNvY2lldHkuIFN1cmUgdGhpcyBoYXBwZW5zIGhlcmUgYW5kIHRoZXJlIGluIFNUIGJ1dCBub3Qgd2l0aCB0aGUgZnJlcXVlbmN5IGl0IGhhcHBlbnMgaW4gU0cgMSBhbmQgbm90IHNvIGNvbXByZWhlbnNpdmVseS4KQ2FyZWVyIGdhbWJsZXIgQmFuYSBtYXkgYmUgYSBob3RzaG90IGF0IHRoZSB0YWJsZXMsIGJ1dCBoZSBubyB3aW5uZXIgYXQgdGhlIHJlbGF0aW9uc2hpcCBnYW1lLiBBcyBoaXMgcG9rZXIgbGVnZW5kIHBhcGEgUm9iZXJ0IER1dmFsbCBzYXlzLCB0aGUga2lkIHBsYXlzIGNhcmRzIHRoZSB3YXkgaGUgc2hvdWxkIGxpdmUgbGlmZSBhbmQgbGl2ZXMgbGlmZSB0aGUgd2F5IGhlIHNob3VsZCBwbGF5IGNhcmRzLiAKRGFzIEd1dGFjaHRlbiB3dXJkZSBuYWNoIHNvcmdmbHRpZ2VyIGJlcmxlZ3VuZyB1bmQgemllbGdlcmljaHRldCBpbiBBdWZ0cmFnIGdlZ2ViZW4sIHVtIGVpbiBGZWVkYmFjayB2b24gcnVuZCAxLjMwMCBDYXNpbm8gR2FtZXMgbiBiZXIgaWhyZSBFcmZhaHJ1bmdlbiBtaXQgcyB1bmQgaWhyZSBFcndhcnR1bmdlbiBhbiBlYmVuZGllc2UgenUgZXJoYWx0ZW4uIApUdXJrZXkgcmVnYXJkaW5nIFlQRyBkb2VzbiBkZXBlbmQgb24gaXRzIGZhY2Ugb24gc3RyZW5ndGggYWdhaW5zdCB0aGUgVHVya2lzaCBhcm15LCBhbmQgeW91ciBhc3Nlc3NtZW50IG9mIGhvdyBiaWcgb2YgYSB0aHJlYXQgdGhlIFlQRyB0byBUdXJrZXkgaXMgeW91ciBvd24gb3BpbmlvbiBhbmQgbm90IGltcG9ydGFudCBmb3IgVHVya2V5cyBhY3Rpb25zLiBCeSB5b3VyIGxvZ2ljLCBpZiB0aGF0IHdvdWxkIGJlIHNvLCBubyBhcm15IHdvdWxkIGZpZ2h0IGEgdGVycm9yaXN0IG9yZ2FuaXphdGlvbiBiZWNhdXNlIG5vIHRlcnJvcmlzdCBvcmdhbml6YXRpb24gY291bGQgZmFjZSBvbiBhIG1pbGl0YXJ5IHN0cnVjdHVyZS4KQyBwb3VyIGxlcyBmZXJ2ZW50cyBkZSBsYSB0cmFkaXRpb24sIHBvdXIgY2V1eCBkb250IGxlIGN1bHRlIGR1IHNvdXZlbmlyIHRyZWludCBsZSBjdXIgZCBtb3Rpb24gcGxlaW5lIGRlIGNoYXJtZSBlbiBzYSBtbGFuY29saWUsIHVuIGRldWlsICBudWwgYXV0cmUgcGFyZWlsIGRlIHZvaXIgcyBzb3VzIGxhIHBpb2NoZSBkZXMgZG1vbGlzc2V1cnMgbGUgUGFyaXMgZGUgbm9zIHByZXMuIFBpZXJyZXMgcGF0aW5lcyBwYXIgbCd1dnJlIGR1IHRlbXBzLCBydWVzIHRyb2l0ZXMgbyBjaXJjdWxlIGVuY29yZSwgY29tbWUgdW5lIHN2ZSwgbGUgc291ZmZsZSBkdSBwYXNzLCBtYWlzb25zIG15c3RyaWV1c2VzIGF1eCBwaWdub25zIGZhbnRhc3RpcXVlcywgYXV4IGZhYWRlcyBjb3V0dXJlcyBkZSByaWRlcywgYXV4IGx1Y2FybmVzIHF1aSBzZW1ibGVudCBjbGlnbmVyIGRlIGwnaWwgcG91ciByYWNjcm9jaGVyIGxhIHBlbnNlIGR1IHByb21lbmV1ciwgdG91cyBjZXMgdmVzdGlnZXMgZGVzIHNpY2xlcyBjb3VscywgdG1vaW5zIGRlcyBoZXVyZXMgZ2xvcmlldXNlcyBvdSB0cmFnaXF1ZXMgZGUgbm90cmUgaGlzdG9pcmUsIHMgb3UgcyB1biBqb3VyLCB2aWN0aW1lcyBkZXMgYmVzb2lucyBkdSBNb2xvY2ggcXUgdW5lIHZpbGxlIG1vZGVybmUsIGJhbGF5cyBhdSBub20gZGVzIGxvaXMgdHlyYW5uaXF1ZXMgZGUgbCBzaSBhbWkgc29pdCBvbiBkdSBwcm9ncnMsIG9uIG5lIHBldXQgcyBkZSBkcGxvcmVyIGxldXIgZGlzcGFyaXRpb24gZXQgZGUgbXVybXVyZXIsIGRldmFudCBjZXMgcnVpbmVzIHF1ZSByZW1wbGFjZXJvbnQgZGVtYWluIGRlcyBtYW9ubmVyaWVzIGQgbGFpZGV1ciBhdHRyaXN0YW50ZSwgbGVzIHZlcnMgZGUgQmF1ZGVsYWlyZS4gCkVzcGVjaWFsbHkgaW4gdGhpcyBjYXNlLiAKVGhlIGFyZ3VtZW50IGlzIGJ1bGxzaGl0IHNpbXBseSBiZWNhdXNlIGhlIGNvdWxkIHBsYXkgZm9yIGp1c3Qgb25lIHllYXIgaW4gdGhlIE5CQSBzdHJhaWdodCBvdXQgb2YgaGlnaCBzY2hvb2wgYW5kIGdldCBlbm91Z2ggbW9uZXkgdG8gcGF5IGZvciB0aGF0IHNjaG9sYXJzaGlwIG1hbnkgdGltZXMgb3Zlci4gCk1vc3Qgb2YgdGhlc2UgYXJlIGNhcnJpZWQgYXdheSB0aHJvdWdoIHRoZSBjYW5kbGUgY2hpbW5leSwgYWx0aG91Z2ggc29tZSBvZiB0aGVtIGNhbiBiZSBmb3VuZCBpbiB0aGUgY29uZGVuc2VkIGNhbmRsZSByZXNpZHVlIGFmdGVyIHJlbW92YWwgZnJvbSB0aGUgZWFyICAgb3IgY2FuIGV2ZW4gd29yayB0aGVpciB3YXkgdXAgdG8gdGhlIHN1cmZhY2UgMjQgdG8gNDggaG91cnMgbGF0ZXIuCkEgcGxhY2UgSSBhbHdheXMgd2VudCB3aGVuIGxpdmluZyBhdCBPa3RvZ29uIHdhcyB0aGUgR29sZCBjdWtyYXN6ZGEgb24gS2lyYWx5IGFjcm9zcyBmcm9tIExpc3p0IGZlcmVuYyB0ZXI7IHRoaXMgaXMgbW9yZSBsaWtlIGEgY29mZmVlIHNob3AsIHllcywgYnV0IHRoZXkgaGF2ZSBsb3RzIG9mIHBhc3RyaWVzLiBJIGxpa2UgdGhlaXIgcG9nYWNzYSBhbmQgdGhlaXIga3JlbWVzIHByZXR0eSB3ZWxsLgpJZiB5b3VyIG1haW4gZ29hbCBpbiBwbGF5aW5nIHBva2VyIGdhbWVzIGlzIHRvIHdpbiBpbiBwb2tlciwgdGhlbiwgeW91J2xsIHN1cmVseSBsb3ZlIHRoaXMgYXJ0aWNsZS4gV2h5PyBXZWxsLCBpdCBjb250YWlucyBzZXZlcmFsIHN0cmF0ZWdpZXMgb3IgYW5zd2VycyB0byB0aGUgcXVlc3Rpb24gb2YgaG93IHRvIHdpbiBwb2tlciB0aGF0IGNhbiBoZWxwIHlvdSBicmluZyBob21lIGNhc2ggZnJvbSB5b3VyIHBva2VyIHBsYXlzLiAKQSBiYWQgYWR2aXNvciBjYW4gcmVhbGx5IG11bHRpcGx5IHRoZSBkaWZmaWN1bHR5LiAKSHVtcGhyZXkgRGF2eSBpbnRyb2R1Y2VkIHRoZSBpZGVhIG9mIHRoZSBjYXJib24gYXJjIGVsZWN0cmljIGxpZ2h0IGluIHRoZSBmaXJzdCBkZWNhZGUgb2YgdGhlIDE5dGggY2VudHVyeS4gSGlzIGxpZ2h0IHdhcyBzdWNjZXNzZnVsIGlmIG5vdCBwcmFjdGljYWJsZSwgYXMgdGhlIGVsZWN0cmljIHNvdXJjZSB3YXMgYSBiYXR0ZXJ5IG1hZGUgb2YgYSBzZXJpZXMgb2YgYSB0aG91c2FuZCBvciB0d28gbGlxdWlkIGNlbGxzLCB0aG91Z2ggdGhlcmUgd2FzIGEgbXVjaCBtb3JlIHByYWN0aWNhbCBwdWJsaWMgZGlzcGxheSBvZiB0aGUgaWRlYSBpbiB0aGUgVGhlIHN1YmplY3Qgb2YgdGhpcyBzaG9ydCBwb3N0LCBXaWxsaWFtIFN0YWl0ZTEsIGVudGVycyB0aGUgZWxlY3RyaWMgbGlnaHQgYXJlbmEgaW4gdGhlIDE4NDAgd2l0aCBubyByZWFsIHNjaWVudGlmaWMgYmFja2dyb3VuZCBhbmQgcHJvY2VlZGVkIHRvIG1ha2Ugc29tZSBpbXByZXNzaXZlIGltcHJvdmVtZW50cywgcHJvdmluZyBoaW1zZWxmIGEgdGhpbmtlciB3aXRoIHRoZSBhYmlsaXR5IHRvIGRlc2lnbiBhbmQgY29uc3RydWN0IHRoZSBwcmVjaXNpb24gZWxlbWVudHMuCklmIHNvbWVvbmUgbGVhdmVzIGFuIGVnZyBzaGVsbCB3aGVyZSBpdCBkb2VzbiBiZWxvbmcsIHRoZXkgY2FuIGNvbXBsYWluIHdoZW4gaXQgZ2V0cyBicm9rZW4sIGp1c3QgbGlrZSBteSBraWRzIGNhbiBjb21wbGFpbiBpZiBJIGRyaXZlIG92ZXIgYSB0b3kgdGhhdCB0aGV5IGxlZnQgaW4gdGhlIGRyaXZld2F5LiBJdCBkb2VzbiBnbyB0aGVyZS4gCkFuZCB0aGVuIGFnYWluIHRoZXkgYWxsIHNlZW0gdG8gZ28gY2F0YXdhbXB1cy4gVGhlcmUncyBMZXNsaWUsIHNvIGNsZXZlciBhbmQgYmVhdXRpZnVsIHlvdSdkIHRoaW5rIHNoZSB3YXMgbWVhbnQgZm9yIGEgcXVlZW4sIGFuZCBpbnN0ZWFkIHNoZSdzIGNvb3BlZCB1cCBvdmVyIHRoZXJlLCByb2JiZWQgb2YgYWxtb3N0IGV2ZXJ5dGhpbmcgYSB3b21hbidkIHZhbHVlLCB3aXRoIG5vIHByb3NwZWN0IGV4Y2VwdCB3YWl0aW5nIG9uIERpY2sgTW9vcmUgYWxsIGhlciBsaWZlLiBUaG91Z2gsIG1pbmQgeW91LCBNaXN0cmVzcyBCbHl0aGUsIEkgZGFyZXNheSBzaGUnZCBjaG9vc2UgaGVyIGxpZmUgbm93LCBzdWNoIGFzIGl0IGlzLCByYXRoZXIgdGhhbiB0aGUgbGlmZSBzaGUgbGl2ZWQgd2l0aCBEaWNrIGJlZm9yZSBoZSB3ZW50IGF3YXkuIApFYXQgaGVhbHRoeS4gCkRhcm5hbGwgbG9zdCB0byBNYXR0ZXMgaW4gdGhlIEp1bmUgUHJpbWFyeSBlbGVjdGlvbiwgYnV0IHdhcyBub21pbmF0ZWQgYnkgcGV0aXRpb24gdG8gaGF2ZSBoaXMgbmFtZSBvbiB0aGUgTm92ZW1iZXIgYmFsbG90LiBNYXR0ZXMgYW5kIERhcm5hbGwgYXJlIHNlZWtpbmcgdGhlIERpc3RyaWN0IEkgSHVtYm9sZHQgQ291bnR5IFN1cGVydmlzb3Igc2VhdCBjdXJyZW50bHkgaGVsZCBieSBSYXkgS29sbG1vcmdlbiwgd2hvIGNob3NlIG5vdCB0byBydW4gZm9yIHJlIGVsZWN0aW9uLkluIHRoZSByYWNlIGZvciB0aGUgRGlzdHJpY3QgMiBIdW1ib2xkdCBDb3VudHkgU3VwZXJ2aXNvcnNjYXQuIEhhcmxleSBIZXR0IHdvbiB0aGUgUmVwdWJsaWNhbiBub21pbmF0aW9uIGluIHRoZSBKdW5lIFByaW1hcnksIGFuZCBIZWF0aGVyIEUuIApTaGUgd2VudCBvbiB0byBzdWNjZXNzZnVsIGNhcmVlcnMgdGVhY2hpbmcgYXV0aXN0aWMgY2hpbGRyZW4gYW5kIG9wZXJhdGluZyByZXRpcmVtZW50IGhvbWVzLkJvcmRlbiBzdG9yeSBpcyB2aXZpZGx5LCBoZWFydCB3cmVuY2hpbmdseSByZWNvdW50ZWQgaW4gaGVyIGJvb2sgTmluZSBUZWFycy4gCldlbGwsIHlvdSBkb24gcmVhbGx5IHdhbnQgY3JlZXB5IGR1ZGVzIGxpa2UgdGhhdCB3cml0aW5nIEhhbGxtYXJrIENhcmRzIGFuZCBwb3Agc29uZ3MsIGRvIHlvdT8gSSBtZWFuLCB5b3UgcmlnaHQsIG9mIGNvdXJzZSAgIHRoYXQgc29tZSBzaWNrIHNoaXQsIGJ1dCB0aGF0IHdoeSBwZW9wbGUgYXJlIGludG8gaG9ycm9yIGFuZCBtdXJkZXIsIGFuZCBtdXNpYyAgIGRvbiBldmVuIGdldCBtZSBzdGFydGVkLiBXaGVuIEkgd2FzIGEgdGVlbiwgSGFsbCBPYXRlcyBhbmQgRm9yZWlnbmVyIHdhcyBwb3AgbXVzaWMuIApDbGljayB0aGUgYW50ZW5uYSB0byBkcm9wIHRoZSBiaXJkIGludG8gdGhlZXhoYXVzdCBmYW5zLCBhbmQgaGlzIGd1dHMgZ28gYWxsIG92ZXIsIGluY2x1ZGluZyBpbnRvIHRoZSB3YXRlcnN1cHBseS4gCk91ciBKb3VybmV5IHRvIENoaW5hCk5pbmphc3dpbW1pbmcgIDE1IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCldlIHNhaWQgc3VyZSBhbmQgZ2F2ZSBzb21lIGRhdGVzLiAKT3JpZ2luYWwgdGhvdWdodHMgd2VyZSBmb3IgYSBzaW1wbGUgMSBkYXkgcG9rZXIgcnVuLCBidXQgMyBtZW1iZXJzIHdlcmUgcmV0aXJlZCBmaXJlZmlnaHRlcnMgYW5kIGZlbHQgdGhlIG5lZWQgdG8gZXhwYW5kIHRoZSBSYWxseSB0byBpbmNsdWRlIGEgU2FsdXRlIHRvIEZhbGxlbiBGaXJlZmlnaHRlcnMgYXMgb2YgdGhlaXIgb3duIGhhZCBkaWVkIGluIHRoZSBsaW5lIG9mIGR1dHkgc2VydmluZyB3aXRoIHRoZSBCcnVzaCBWb2x1bnRlZXIgRmlyZSBEZXBhcnRtZW50Li4gCkZvcm1lciBVUyBkaXBsb21hdCB0byBBZmdoYW5pc3RhbiwgTWF0dGhldyBIb2gsIGFwcGVhcmVkIG9uIE5CQyB5ZXN0ZXJkYXkgYW5kIHV0dGVyZWQgYm90aCB0aGUgUyB3b3JkIGFuZCB0aGUgQyB3b3JkIGFib3V0IEFmZ2hhbmlzdGFuLiBUaGF0IHJpZ2h0LiBIZSBtZW50aW9uZWQgdGhlIFNvdmlldHMgYW5kIHRoZSBkZWNhZGVzIG9sZCBBZmdoYW4gQ2l2aWwgV2FyLgoxIHRzcCBvZiB0b21hdG8gcHVyZWUKTmVhciBhbGwgdGhlIGJlc3Qgc3VyZmluZyBiZWFjaGVzIGxpa2UgU2FuZHkgQmVhY2gsIE1hcmlhcyBEb21lcyBhbmQgVHJlcyBQYWxtYXMuIApDb252ZXJzZWx5LCB5b3UgcXVpY2tseSBydW4gYWZvdWwgb2YgaGlyaW5nIGRpc2NyaW1pbmF0aW9uIGxhd3MgaWYgeW91IHJlZnVzZSB0byBoaXJlIHdvbWVuIGZvciBhIGpvYiB0aGF0IHNpbXBseSByZXF1aXJlcyBhIGNlcnRhaW4gbGV2ZWwgb2Ygc3RyZW5ndGguIFlvdSBiZSBmYWlsaW5nIHRvIGhpcmUgYXRobGV0aWMgd29tZW4sIG9yIHdvbWVuIHRoYXQgY2FuIHJhcGlkbHkgZGV2ZWxvcCB0aGUgbmVjZXNzYXJ5IHN0cmVuZ3RoIHRocm91Z2ggZG9pbmcgdGhlIHdvcmsuIFRoaXMgd291bGQgYmUgdW5qdXN0aWZpZWQgYmlhcyBiYXNlZCBvbiBpbmNvcnJlY3QgYXNzdW1wdGlvbnMgYWJvdXQgdGhlIGJpbW9kYWwgZGlzdHJpYnV0aW9uIG9mIGdlbmRlcmVkIHRyYWl0cywgYW5kIGxpa2VseSBnbyBmYXIgZW5vdWdoIGluIG1hbnkgY2FzZXMgdG8gcnVuIGFmb3VsIG9mIHRoZSBsYXcuLiAKRGF2aWRoYXNlZGdlICAyIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCk5vIG90aGVyIGNvdW50cnkgYWxsb3dzIHRoaXMsIHdoeSBzaG91bGQgd2U/IEl0IGlzbiBhYm91dCByYWNlIG9yIGJlaW5nIGFuIGltbWlncmFudCwgaXQgaXMgYWJvdXQgaG93IHlvdSBnb3QgaGVyZS4gClRoZSBkcmVhbSB3b3VsZCBiZSB0byBkZXZlbG9wIGEgbG9jYWwgdGFsZW50IG5ldHdvcmssIHdoZXJlIHdlIGNhbiByZWFjaCBvdXQgYW5kIGZpbmQgcGVvcGxlIHRvIGNvbGxhYm9yYXRlIHdpdGggb3IgdGVhbSB1cCB3aXRoIHRvIGZ1cnRoZXIgb3VyIGNyZWF0aXZlIGVuZGVhdm91cnMuIFBsZWFzZSBhdm9pZCB0aGluZ3MgbGlrZSBwb2xhcml6aW5nIHBvbGl0aWNhbCB2aWV3cyBpZiB0aGV5IGFyZSBzaW1wbHkgdG8gYXJndWUgb24gdGhlIGludGVybmV0LiBBbnkgdG91Y2h5IHN1YmplY3RzIHRoYXQgY2FuIHlpZWxkIGhlYWx0aHkgZGlzY3Vzc2lvbiBhcmUgZmluZSwgYnV0IGxldCBhdm9pZCBuZWVkbGVzcyBpbnRlcm5ldCBiaWNrZXJpbmcuIApUaGlzIGluY2x1ZGVzIGRvaW5nIHRoaW5ncyBsaWtlIHVzaW5nIGEgZGlmZmVyZW50IGFjY291bnQsIG9yIFBNaW5nIHBlb3BsZSB0byBhdm9pZCBwb3N0aW5nIG9uIHRoZSBzdWJyZWRkaXQuIApJIG9wZW5lZCBpdCB1cCwgYW5kIGZvdW5kIGh1bmRyZWRzIG9mIGlyb24gZmlsaW5nIHR5cGUgdGhpbmdzIGV2ZXJ5d2hlcmUuIApQb3N0ZWQgYnkgdGhlcnViZXR0ZXMKTGVtb24sIHJvc2VtYXJ5LCBhbmQgZ3JhcGVmcnVpdCBhcmUgZXNwZWNpYWxseSBnb29kIGF0IHN0aW11bGF0aW5nIG1vdmVtZW50IGFuZCBzdXBwb3J0aW5nIHRoZSBjbGVhbnNpbmcgYWN0aW9uLiBBIGx5bXBoYXRpYyBtYXNzYWdlIGludm9sdmVzIGRlZXAgc3Ryb2tlcyB0aGF0IHdvcmsgZnJvbSB0aGUgZXh0cmVtaXRpZXMgdG93YXJkIHRoZSBoZWFydC4gCkkgc2VlIHNvIG1hbnkgY29tbWVudGVycyB3aXRoIHRoZXNlIGtpbmRzIG9mIGtuZWUgamVyayByZWFjdGlvbnM7IGFsbCB0aGF0IGhlIG1ha2luZyBhIHBvaW50IG9uIGlkZW50aXR5IHBvbGl0aWNzIHdoaWxlIGtub3dpbmcgYWJzb2x1dGVseSBmdWNrIGFsbCBhYm91dCB0aGlzIGd1eSBvciB0aGUgZW52aXJvbm1lbnQgaGUgb3BlcmF0aW5nIGluLgpJZiB5b3UgdGhpbmsgdGhpcyBpcyB3YXRlciB0aWdodCAgIGl0IGlzbiBBIGdvb2QgbGF3eWVyIGJyaW5ncyBpbiBhbm90aGVyIGNvbnRleHQgdGhhdCBjYXVzZXMgcGxhdXNpYmxlIGRvdWJ0LiBUaGUgb25seSB0aGluZyB0aGF0IHdpbGwgY29udmljdCBpcyBoYXJkIGV2aWRlbmNlLiBUaGF0IGdvb2QgbGF3eWVyIHdpbGwgc2F5IGNpcmN1bXN0YW50aWFsIGV2aWRlbmNlIG5lZWRzIHRvIGJlIGJleW9uZCByZWFzb25hYmxlIGRvdWJ0LiBTZWUgVHJ1bXAgaGUgc2F5aW5nIGhlIHdhc24gc2VyaW91cyAgIGRvbiBsZXQgdGhlIHByb3NlY3V0aW9uIG1ha2UgeW91IHJlYWQgYmV0d2VlbiB0aGUgbGluZXMgc2VlIGl0IGZvciB5b3Vyc2VsZi4gUmVhc29uYWJsZSBkb3VidCBpcyB2ZXJ5IGhhcmQgdG8gYWNoaWV2ZSB3aXRob3V0IGhhcmQsIGJsYWNrIGFuZCB3aGl0ZSBldmlkZW5jZS4KWW91IGhhdmUgbmVhcmx5IGhhbGYgdGhlIHBhaW50aW5nIHNreSB3aGlsZSB0aGUgbG93ZXIgdHdvIHRoaXJkcyBhcmUgY3JhbXBlZCB0byB0aGUgYm90dG9tLiBZb3UgY291bGQgaGF2ZSBsaWZ0ZWQgdGhlIGZlbmNlIGxpbmUgdGhhdCB3b3VsZCBiZXR0ZXIgYmFsYW5jZSB0aGUgcGFpbnRpbmcsIHBsdXMgdGhlIGNoaWxkcmVuIGZhY2VzIHdvdWxkIGJlIGNvbnRyYXN0ZWQgYWdhaW5zdCBzbm93IGluc3RlYWQgb2YgYmxlbmRpbmcgaW50byB0aGUgZmVuY2UuCkhlIGFsc28gZ3JlYXQgZm9yIG1lbWVzLiBZb3UgbGlrZSB0aGF0PyBvb29vb3d3d3doaGhoZWVlZWUuIApUd28gb2YgdGhvc2Ugd2VyZSBvbiB0aGUgc2FtZSBkYXkgICBieSBRdWVlbnMgb2YgdGhlIFN0b25lIEFnZSBpbiBTZXB0ZW1iZXIgMjAxMy4uIAoxLiBQcmVwYXJlIGFuZCBSZWZpbmUgeW91ciBCYXR0bGUgUGxhbiAgIHdoZW4geW91IGVudGVyIGEgdG91cm5hbWVudCwgeW91J3JlIGdvaW5nIHRvIGJlIGZpZ2h0aW5nIGEgImJhdHRsZSIgZm9yIHN1cnZpdmFsICAgYWdhaW5zdCB0aGUgYmxpbmRzLCB0aGUgYW50ZXMsIGZhdGlndWUsIGFzIHdlbGwgYXMgYWdhaW5zdCB0aGUgb3RoZXIgcGxheWVycy4gV291bGQgYW55IGdvb2QgbWlsaXRhcnkgY29tbWFuZGVyIGdvIGludG8gYmF0dGxlIHdpdGhvdXQgaGF2aW5nIGZpcnN0IHN1cnZleWVkIHRoZSBiYXR0bGUgZmllbGQsIHVuZGVyc3Rvb2QgdGhlIGVuZW15IGFuZCBpdHMgdGFjdGljcywgYW5kIHdpdGhvdXQgaGF2aW5nIGEgd2VsbCBjb25jZWl2ZWQgYmF0dGxlIHBsYW4gd2hpY2ggdGFrZXMgdGhlc2UgZmFjdHMgaW50byBhY2NvdW50IGFuZCBlbnN1cmVzIHN1Y2Nlc3M/IE9mIGNvdXJzZSBub3QhIElmIHRoZXkgZGlkLCB0aGV5IHByb2JhYmx5IHdvdWxkbid0IGxpdmUgdG8gdGVsbCBhYm91dCBpdC4uIApUaGV5IGFyZSBhc3NvY2lhdGVkIHdpdGggYSBjYWxsb3VzIG1hbmlwdWxhdGl2ZSBpbnRlcnBlcnNvbmFsIHN0eWxlLkhlYWx0aGNhcmUgaW4gSXNyYWVsSGVhbHRoY2FyZSBpbiBJc3JhZWwgaXMgdW5pdmVyc2FsIGFuZCBwYXJ0aWNpcGF0aW9uIGluIGEgbWVkaWNhbCBpbnN1cmFuY2UgcGxhbiBpcyBjb21wdWxzb3J5LiAKUHJvZmVzc2lvbmFsIHBsYXllcnMgYWxyZWFkeSB1c2UgcmFuZ2UgYmFsYW5jaW5nIHdoZW4gaXQgY29tZXMgdG8gZG9kZ2luZyAocHJlc2VudCB0ZW5kZW5jeSB0byBqdWtlIG9wcG9uZW50cyBtYWluIHBva2UvQ0MgZG93biByaWdodCwganVrZSB1cCBsZWZ0KS4gUmFuZG9taXNhdGlvbiB3aXRoIGp1a2luZyBzaG91bGQgb25seSB3b3JrIGlmIHlvdSBkb24gYmVsaWV2ZSB5b3UgY2FuIG91dCBsZXZlbCB5b3VyIG9wcG9uZW50LiBBbHNvIGFwcGxpY2F0aW9uIGlzIGRpZmZpY3VsdCBzaW5jZSBkaWZmZXJlbnQganVrZSBkaXJlY3Rpb25zIHJhcmVseSBoYXZlIGVxdWFsIHZhbHVlcyBnaXZlbiBvdGhlciBnYW1lIGZhY3RvcnMuLiAKT2N0LiAxNTogVGhlIE5ldyBZb3JrIFRpbWVzIHJlcG9ydHMgb24gdGhlIGRldmFzdGF0aW5nIHVzZXMgb2YgRmFjZWJvb2sgaW4gTXlhbm1hciwgd2hlcmUgZ292ZXJubWVudCBvZmZpY2lhbHMgcHJvbW90ZWQgcHJvcGFnYW5kYSB0byBlbmNvdXJhZ2UgZXRobmljIGNsZWFuc2luZyBvZiBSb2hpbmd5YSBNdXNsaW1zLiBUaGUgc29jaWFsIG5ldHdvcmsgaGFzIGJlZW4gcmVtb3ZpbmcgaHVuZHJlZHMgb2YgcGFnZXMsIGFuZCBieSBEZWNlbWJlciB3YXMgc3RpbGwgdGFraW5nIGRvd24gbW9yZSBhY2NvdW50cyBydW4gYnkgTXlhbm1hcidzIG1pbGl0YXJ5LCB3aGljaCBpcyBhY2N1c2VkIG9mIGNhcnJ5aW5nIG91dCB0aGUgZXRobmljIGNsZWFuc2luZyBvZiBSb2hpbmd5YSBNdXNsaW1zLgpDb25zaWRlciAvci9hcnRzdG9yZS4gCllvdSBtaWdodCBub3QgaGF2ZSBiZWVuIGFibGUgdG8gdXNlIHlvdXIgbW9ydGdhZ2UgaW50ZXJlc3QuIFRoZSBzdGFuZGFyZCBkZWR1Y3Rpb24ganVtcGVkIHRvIDEyLDAwMCB0aGlzIHllYXIgKDI0LDAwMCBpZiBtYXJyaWVkKS4gU28sIHVubGVzcyB5b3VyIG1vcnRnYWdlIGludGVyZXN0LCBzdGF0ZSB0YXhlcyBwYWlkLCBhbmQgZG9uYXRpb25zIHdlcmUgbW9yZSB0aGFuIDEyLDAwMCwgeW91ciBtb3J0Z2FnZSBpbnRlcmVzdCB3aWxsIGhhdmUgbm8gYmVhcmluZyBvbiB5b3VyIHJldHVybi4gCkEgY291cGxlIHdlZWtzIGFmdGVyIGhlIGdhdmUgbWUgaGlzIGNvbGxlY3Rpb24gSSB3YXMgYXQgTmV1dHJhbCBHcm91bmRzIGFuZCBzYXcgYSBndXkgd2l0aCBhIGN1c3RvbSBkZWNrIGhvbGRlci4gCkFkZGljdGlvbiBpcyBhbnl0aW1lIHRoZSBib2R5IGNyYXZlcyBhIHN1YnN0YW5jZSBzbyBpdCBnaXZlcyB0aGUgYm9keSBhIG5lZ2F0aXZlIHJlc3BvbnNlIHRoYXQgd291bGRuIGhhcHBlbiBvdGhlcndpc2UuIApKZXNzZSBNLiBCb2JpYW4KQ2hvcmVvZ3JhcGhlciBTaGFybWlsbGEgS2hhbm5hIGFncmVlcyBjb21wbGV0ZWx5IG9uIHRoZSBwcmVtaXNlIHRoYXQgbWVuIGFyZSBsaWtlbHkgdG8gbWFrZSBtYW55IG1vcmUgZnJpZW5kcyB0aGFuIHdvbWVuLiAKQmFuZSB3YXMgY2F1Z2h0IG9mZiBndWFyZCBieSB0aGUgdW5leHBlY3RlZCBtYW5ldXZlciBhbmQgd2FzIGEgbWljcm9zZWNvbmQgc2xvdyBpbiByZWNvZ25pemluZyB0aGUgY2hhbmdlLiAKSSB0cmllZCBub3QgdG8gdXNlIHRoZSBzYW1lIG9uZXMgYXJvdW5kIGVhY2ggb3RoZXIuIApUaGV5IGFsd2F5cyB0cnlpbmcgdG8ga2VlcCBhIGdvb2QgYmFsYW5jZSwgaXQganVzdCB0aGF0IHlvdSBjYW4gbmV2ZXIgZG8gdGhhdCBwZXJmZWN0bHkgYW5kIHRoZXkgY2FuIGZvcmVzZWUgdGhlIG1ldGEgYW5kIHdoYXQgd2lsbCBicmVhayB0aGUgZ2FtZS4gQSBzdHJvbmcgY2xhc3MgZG9lc24gZ2V0IGdvb2QgbmV3IGNhcmRzLCBzbyBpdCB1bmxpa2VseSB0byBiZSB0aGUgbmV3IG1ldGEgYnJlYWtlci4KUiBkaWUgT2x5bXBpc2NoZW4gU29tbWVyc3BpZWxlIDIwMjAKQmV0c3kgRGV2b3MgaXMgZG9pbmcgcmVhbCBhbmQgbGFzdGluZyBkYW1hZ2UgdG8gdGhpcyBjb3VudHJ5J3MgZWR1Y2F0aW9uIHN5c3RlbS4gSGVyIGJhY2tpbmcgb2YgcHJlZGF0b3J5ICJ1bml2ZXJzaXRpZXMiIGlzIGdvaW5nIHRvIGh1cnQgdGhvc2UgYWxyZWFkeSB1bmRlciByZXByZXNlbnRlZCwgZGVlcGVuIGFscmVhZHkgZW50cmVuY2hlZCBzb2NpYWwgaW1tb2JpbGl0eSwgYW5kIGxlYWQgdG8gZXZlbiBtb3JlIGluZXF1YWxpdGllcyBhY3Jvc3MgdXJiYW4gYW5kIG1pbm9yaXR5IGNvbW11bml0aWVzLiBOb3QgdG8gbWVudGlvbiB0aGF0IGFueWJvZHkgd2l0aCBhIHN0dWRlbnQgbG9hbiBvdWdodCB0byByZWFkIHdoYXQgc2hlJ3MgYmVlbiB1cCB0byBpbiBtYWtpbmcgYW55IGFuZCBhbGwgcmVsaWVmIG11Y2ggbW9yZSBkaWZmaWN1bHQgdG8gYWNoaWV2ZSBmb3IgYWxsIG9mIHVzIChhbGwgdGhlIHdoaWxlIG91dHJpZ2h0IGlnbm9yaW5nIHRoZSBmb3JlYm9kaW5nIHNpZ25zIG9mIGFuIGltcGVuZGluZyBzdHVkZW50IGxvYW4gYnViYmxlKS4gV2hlbiB0aGlzIGlzIGFsbCBvdmVyLCBEZXZvcyB3aWxsIGdvIGJhY2sgdG8gYmVpbmcgYSB2YWNhbnQgaGVhZGVkIG9wcG9ydHVuaXN0LiBUaGUgcHVibGljIHdpbGwgY2hhbGsgdXAgaGVyIGRlY2lzaW9ucyBub3QgdG8gbWFsZmVhc2FuY2Ugb3IgbmVnbGlnZW5jZSB0byBjcmltaW5hbCBsZXZlbHMuIHNoZSB3b24ndCBnbyB0byBwcmlzb24uIFNoZSB3b24ndCBzdWZmZXIuIFNoZSdsbCBlbmpveSB0aGUgc3BvaWxzIG9mIGhlciBzdWJ2ZXJzaW9uIG9mIHRoZSBncmVhdGVzdCByaWdodCB3ZSBvZmZlciBvdXIgY2l0aXplbnM6IHRoZSByaWdodCB0byBiZXR0ZXIgeW91ciBsaWZlLiBXZSB3aWxsIGJlIGxlZnQgdG8gY2xlYW4gdXAgYW5vdGhlciBtZXNzIHdpdGggeWVhcnMgYW5kIHllYXJzIG9mIHVua25vd24gZGFtYWdlIGluIHBsZW50eSBvZiB1bmtub3duIHNlY3RvcnMuIEVkdWNhdGlvbiBhZmZlY3RzIGNyaW1lIHJhdGVzLiBJdCBhZmZlY3RzIGhlYWx0aCBvdXRjb21lcy4gVGhlcmUgYXJlIGZhciB0b28gbWFueSBjb25zZXF1ZW5jZXMgZm9yIGFsbG93aW5nIHNvbWVvbmUgd2l0aCBzdWNoIGZ1Y2tpbmcgY29uZmxpY3Qgb2YgaW50ZXJlc3QgaW50byBzdWNoIGEgcG9zdC4gU28gcGxlYXNlLCBpbiAyMDIwLCBsZWFybiBhYm91dCB0aGUgY2FuZGlkYXRlcy4gUmVnaXN0ZXIgdG8gdm90ZS4gQmVjb21lIGNpdmlsbHkgZW5nYWdlZC4gQmVjYXVzZSBpZiB5b3UgZG9uJ3Qgc2hvbyB0aGVtIGF3YXksIG1vcmUgYmlyZHMgb2YgZnVja2luZyBjYXJyaW9uIGxpa2UgQmV0c3kgRGV2b3Mgd2lsbCBob3AgaW4gYW5kIHBpY2sgdGhlIGJvbmUgY2xlYW4uCkkganVzdCBwbGF5ZWQgYSBnYW1lIG9mIHBva2VyIGluIEJsYWNrd2F0ZXIgdGhhdCBsYXN0ZWQgYW4gaG91ciBhIGhhbGYgcmVhbCB0aW1lCkl0IGlzIGNoYW5uZWxlZCB2aWEgdGhlIGxheWluZyBvbiBvZiBoYW5kcywgYWx0aG91Z2ggdGhlIGhhbmRzIGRvIG5vdCBuZWNlc3NhcmlseSBuZWVkIHRvIHRvdWNoIHRoZSBwaHlzaWNhbCBib2R5IHRvIGRvIHNvLiBIZXJlIGFyZSBhIGZldyB0aXBzIHRvIGhlbHAgeW91IGJldHRlciB1bmRlcnN0YW5kIFJlaWtpOi4gCkF0IGxlYXN0IHRoZSBkb29ycyBzdGF5ZWQgc2h1dCB0aGlzIHllYXIhIFRoZSB0aHJlYXQgb2YgYW55IHBsYXllciAoaG9tZSBvciBhd2F5KSBoaXR0aW5nIHNpeCBhbmQgdW5kZXIgd291bGQgYmUgImdlbGxlZCIgc2VlbWVkIHRvIGFmZmVjdCB0aGUgaG9tZSB0ZWFtIG1vcmUgYXMgdGhleSBzdHJ1Z2dsZWQgdG8gZmluZCBhbnkgc29ydCBvZiBzY29yZS4gCkxvY2FsIGRpc3RyaWJ1dGlvbiBvZiBnYW1pbmcgdGF4ZXMgd2lsbCBwcm92aWRlIGFwcHJveGltYXRlbHkgJDIxIG1pbGxpb24gdG8gdGhlIENpdHkgb2YgQ2luY2lubmF0aSwgJDEyLjIgbWlsbGlvbiB0byBIYW1pbHRvbiBDb3VudHkgYW5kICQxNC4xIG1pbGxpb24gdG8gSGFtaWx0b24gQ291bnR5IHNjaG9vbCBkaXN0cmljdHMgZHVyaW5nIGl0cyBmaXJzdCBmdWxsIHllYXIgb2Ygb3BlcmF0aW9ucy4gCkp1c3QgaGFkIHRoaXMgZ3V0IGZlZWxpbmcgdGhhdCBJIGhhZCB0byBnZXQgb3V0IG9mIHRoZSB3YXRlciB3aGljaCBpcyBxdWl0ZSB1bnVzdWFsIGZvciBhIHlvdW5nIHN3aW1tZXIuIApUaGUgTmV3IFlvcmsgVGltZXMgcmVjZW50bHkgd3JvdGUgYWJvdXQgRmx1c2hpbmcncyBidXN0bGluZyBDaGluYXRvd24gYW5kIGl0cyByb2xlIGluIHN1cHBseWluZyB3b21lbiAgIG1vc3RseSBDaGluZXNlIGJ1dCBhbHNvIEtvcmVhbiwgVGhhaSBhbmQgRWFzdGVybiBFdXJvcGVhbiAgIHRvIHRoZSA5LDAwMCBpbGxpY2l0IG1hc3NhZ2UgcGFybG9ycyBiZWxpZXZlZCB0byBiZSBvcGVyYXRpbmcgYWNyb3NzIHRoZSBjb3VudHJ5LiAKIlRoZSBtZW1iZXJzIG9mIHRoZSBjbHViIGFyZSBsb29raW5nIGF0IHRoZSBwdXJjaGFzZSAgIGFueSBtZW1iZXJzIG9mIGEgY29uc29ydGl1bSBvZiBhZ2dyZWdhdGVkIGNsdWJzIGNhbiwgYmFzaWNhbGx5LCBwdXQgdGhlaXIgaGFuZCB1cCBhbmQgYXNrIGlmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBzZWxsaW5nLiAKRXhwbGFpbiBhbmQgZGVtbyBLZW55b2t1IGFuZCBoYXZlIHN0dWRlbnRzIHVzZSBpdCBhdCBlbmQgb2YgdHJlYXRtZW50LjE3LiAKV2Ugc3RhcnRlZCBjaGFuZ2luZyBvdXIgbWFya2V0aW5nIHN0cmF0ZWd5IGluIGVhcmx5IDIwMDggcHJlcGFyaW5nIGZvciB0aGlzIHNvIEkgYW0gY29uZmlkZW50IHRoYXQgbGEgSXNsYSBDYXNpbm8gY2FuIHJpZGUgdGhyb3VnaCB0aGUgY29taW5nIG1vbnRocyBvciB5ZWFycyBvZiBtYXJrZXQgZG93bnR1cm4sIiBzYWlkIEFmc2hpbi4uIApTb2NpYWwgbWVkaWEgY29udGVudCBvZiBhbnkga2luZCBpcyBub3QgYWxsb3dlZC4gCk92ZXJoZWF0aW5nIGlzIHRoZSBwcmltYXJ5IGNhdXNlIG9mIHRoZSBYYm94IDM2MCBmcmVlemluZyBwcm9ibGVtcy4gCkkgc3RheSBhdCB3byBCdW5jaCBiZWZvcmUgSSBzdGF5IGF0IFRlcnJlbmVhLiAKQmxvb2QgQmFycmFnZSBtaWdodCBqdXN0IG5vdCBoZWFsIHlvdSBhdCBhbGwuIApXb3VsZCd2ZSBiZWVuIGEgcHJldHR5IHJvdWdoIGNhbGwgdG8gY2FsbCBQSSBlaXRoZXIgd2F5IHRoZXJlIGNvbnNpZGVyaW5nIHRoZXkncmUgYm90aCBwbGF5aW5nIHRoZSBiYWxsLCBidXQgcGFydGljdWxhcmx5IG9uIEphY2tzb24gYXMgaGUgaGFzIHBvc2l0aW9uLkdvcmRvbiwgaWYgSSdtIHJlbWVtYmVyaW5nIHJpZ2h0LCB3YXMgdGhlIGV4YWN0IG9wcG9zaXRlIFdSIGhhcyBvdXRzaWRlIGxldmVyYWdlIGFuZCB0aGUgYmFsbCBpcyB1bmRlciB0aHJvd24uIFRoZSBwcm9ibGVtIHdhcyB0aGF0IG9uIHRoaXMgcGxheSwgdGhlIERCIHdhc24ndCB0dXJuZWQgYmFjayB0b3dhcmRzIHRoZSBsaW5lLCBzbyB3aGVuIHRoZXJlJ3MgY29udGFjdCB0aGF0J3MgZ29ubmEgZ2V0IGNhbGxlZCBldmVyeSB0aW1lLiAKSW4gdGhlIGZvbGxvd2luZyBkYXlzLCBJIHdhcyBwbGVhc2VkIHRvIGZpbmQgbXkgdGhpZ2hzIGFuZCBhYnMgc3RpbGwgZmVsdCBhcyB0aG91Z2ggdGhleSdkIGJlZW4gd29ya2VkLiAKSGUgY2xlYXJseSB1bmRlcnN0YW5kcyB0aGUgZ2VuZXJhbCBzaGFwZSBvZiBnb29kIHdyaXRpbmcgYW5kIHRyaWVzIHRvIGltaXRhdGUgaXQsIGJ1dCBhbGwgaGUgY2FuIGRyYXcgaXMgYSBwb3RhdG8uIFRoZSBvbmx5IHdheSB0byBwYWludCBhIHByZXR0eSBwaWN0dXJlIGlzIHByYWN0aWNlLCBhbmQgdGhlIGZpcnN0IGFuZCB0b3VnaGVzdCBzdGVwIGlzIGxlYXJuaW5nIG5vdCB0byBoaXQgc2VuZCB1bnRpbCB5b3UgcHJhY3RpY2VkIGVub3VnaC4gCkkgc3RpbGwgbmV3IHRvbyBidXQgYSBjb3VwbGUgdGhpbmdzIEkgbGVhcm5lZDogMS4gS25vd2luZyB3aGF0IGhvcnNlIHRvIGJldCBpc24gYXMgaW1wb3J0YW50IGFzIGtub3dpbmcgaG93IHRvIGJldC4gVGhlcmUgYXJlIGEgbG90IG9mIGJldHMgeW91IGNhbiBtYWtlIHRoYXQgaGF2ZSBubyBwYXlvZmYgb3IgY2FuIHBvc3NpYmx5IGNvbWUgdHJ1ZS4gKGJldHRpbmcgYSBkYWlseSBkb3VibGUgYW5kIG5vdCBwaWNraW5nIGEgaG9yc2UgaW4gdGhlIHNlY29uZCByYWNlLiBJIGRvbmUgdGhhdCBsb2xsbGxsKSAyLiBCZXR0aW5nIHRoZSB0b3RlIGJvYXJkIGlzIGEgbG90IG9mIGZ1biB3aGVuIHlvdSBuZXcuIFlvdSBjYW4gZG8gYSBnb29nbGUgb2Ygd2hhdCBiZXR0aW5nIHRoZSB0b3RlIGJvYXJkIG1lYW5zIGJ1dCBpdCBiYXNpY2FsbHkgd2hlbiB5b3UgbG9vayBmb3IgdmFsdWUgYW5kIHBhdHRlcm5zIGJ5IHdhdGNoaW5nIHRoZSBvZGRzIGNoYW5nZSBmb3IgaG9yc2VzIGJlZm9yZSBhIHJhY2UuIDMuIERvbiBwbGFjZSBiZXRzIG1vcmUgdGhhbiAzIG1pbnV0ZXMgYmVmb3JlIGEgcmFjZSBpZiB5b3UgY2FuLgpJIGhhZCBzb21lb25lIGNvbWUgaW4gd2l0aCB0aGUgMTAwMC8xMDAwIGRlZHVjdGlibGVzIHdoZW4gdGhleSBoYWQgYW4gYWNjaWRlbnQuIApTaGUgd2FzIHJlYWxseSBuaWNlIGJ1dCBrZXB0IGFza2luZyB3aWxkIHF1ZXN0aW9ucyB0byBGcmFuayBhbmQgaGlzIGdpcmxmcmllbmQuIApBdCB0aGUgZW5kIG9mIHRoZSBkYXkgdGhvdWdoLCB0aGlzIGlzIHdoYXQgeW91ciBncmFuZHBhIHdhbnRlZCwgeW91IGtub3c/IElmIGhlIHdhbnRlZCB0aGVtIHRvIGhhdmUgNTAwayBoZSB3b3VsZCBoYXZlIHNwbGl0IGl0IHVwIHRoYXQgd2F5LCBhc3N1bWluZyBoZSB3YXMgbWVudGFsbHkgc291bmQgbiBhbGwuIApQcm8gZm9yIG1lOiBubyBpbnZlc3RtZW50IG9uIHB1cmNoYXNlIHByaWNlIGZvciBhIGhvcnNlLiAKTXkgODEgeWVhciBvbGQgZ3JhbmRtb3RoZXIganVzdCBzdXJyZW5kZXJlZCBoZXIgbGljZW5zZSB0aGlzIHBhc3Qgd2VlayBhcyBhIHJlc3VsdCBvZiBub3QgYmVpbmcgYWJsZSB0byBzZWUsIHdoaWNoIGNhdXNlZCBhbiBhY2NpZGVudC4gClRoZSB3b21hbiwgYXMgaW4gdGhlIENsZXZlbGFuZCB0cmFuc3BsYW50LCB3YXMgbm90IHJlbGF0ZWQgdG8gdGhlIHJlY2lwaWVudC4gCkdvIGRvd25sb2FkIGEgZmV3IGFuZCBhY2hpZXZlIHlvdXIgd2ViIGdvYWxzIEFTQVAuIApJdCB3YXMgcmVhbGx5IHJvdWdoIGZvciB0aGUgbW9udGggYmVmb3JlLCBkdXJpbmcgYW5kIGFmdGVyLiAKTm93IEknbSBiYWNrIGluIFByYWd1ZSBzYXlpbmcgZ29vZCBieWUgdG8gZXZlcnlvbmUuIEkgZmVlbCByZWFkeSB0byBiZSBob21lLCBwYXJ0bHkgYmVjYXVzZSB0aGUgZmxhdCB3ZSBhcmUgc3RheWluZyBpbiBoYXMgZWl0aGVyIGZsZWFzIG9yIGJlZGJ1Z3MgYW5kIFdlbmRpIGFuZCBJIGFyZSBjb3ZlcmVkLCBsaXRlcmFsbHkgQ09WRVJFRCBpbiBiaXRlcy4gCiJNeSBmb2N1cyBoYXNuIGNoYW5nZWQuIApHZWR1cmVuZGUgbWlqbiBGTFAgNiB0b2V0cyBiZXZvbmQgaWsgbWlqIGluIGRlIHJvbCB2YW4gYmVoYW5kZWxlbmQgZnlzaW90aGVyYXBldXQuIE1pZGRlbHMgb25kZXJ6b2VrZW5kIGJlaGFuZGVsZW4gbW9lc3QgaWsgZWVuIHBhdGludCBtZXQgTVMgb25kZXJ6b2VrZW4gZW4gYmVoYW5kZWxlbi4gCklmIHlvdSBwYXJzZSBIVE1MIHdpdGggcmVnZXggeW91IGFyZSBnaXZpbmcgaW4gdG8gVGhlbSBhbmQgdGhlaXIgYmxhc3BoZW1vdXMgd2F5cyB3aGljaCBkb29tIHVzIGFsbCB0byBpbmh1bWFuIHRvaWwgZm9yIHRoZSBPbmUgd2hvc2UgTmFtZSBjYW5ub3QgYmUgZXhwcmVzc2VkIGluIHRoZSBCYXNpYyBNdWx0aWxpbmd1YWwgUGxhbmUsIGhlIGNvbWVzLiAKQXMgd2VsbCBhcyBpc3N1ZXMgb2YgY2hhcmFjdGVyLCB5b3UgYWxzbyByZXF1aXJlIHRvIGNvbnNpZGVyIGNvbXBhdGliaWxpdHkuIEluIG9yZGVyIHRvIGJyZWVkIGEgd2VsbCBtYXRjaGVkIHN0dWQgYW5kIGJpdGNoIHlvdSB3aWxsIHJlcXVpcmUgY2hlY2tpbmcgdGhlaXIgcGVkaWdyZWVzLiBCeSBjYXJlZnVsbHkgY2hvb3NpbmcgdGhlaXIgc3RyZW5ndGhzIGFueSB3ZWFrbmVzc2VzIGNhbiBiZSBjb3VudGVyYmFsYW5jZS4gCk92ZXIgdGhlIHBhc3QgMTUgeWVhcnMsIGhvbWUgZXF1aXR5IGxpbmVzIG9mIGNyZWRpdCBoYXZlIGJlZW4gdGhlIGxhcmdlc3QgY29udHJpYnV0b3IgdG8gQ2FuYWRpYW4gbm9uIG1vcnRnYWdlIGhvdXNlaG9sZCBkZWJ0LiBUdWVzZGF5IHJlcG9ydCBmb2xsb3dzIHNpbWlsYXIgc3R1ZGllcyBmcm9tIHRoZSB0aGUgY291bnRyeSBmZWRlcmFsIGhvdXNpbmcgYWdlbmN5IGFuZCB0aGUgQmFuayBvZiBDYW5hZGEgdGhhdCBoaWdobGlnaHRlZCBzb21lIG9mIHRoZSByaXNrcyBhc3NvY2lhdGVkIHdpdGggc3VjaCBsb2Fucy4KVXNpbmcgYSBETkEgdGVzdCB0byBsYXkgY2xhaW0gdG8gYW55IGNvbm5lY3Rpb24gdG8gdGhlIENoZXJva2VlIE5hdGlvbiBvciBhbnkgdHJpYmFsIG5hdGlvbiwgZXZlbiB2YWd1ZWx5LCBpcyBpbmFwcHJvcHJpYXRlIGFuZCB3cm9uZy4gSXQgbWFrZXMgYSBtb2NrZXJ5IG91dCBvZiBETkEgdGVzdHMgYW5kIGl0cyBsZWdpdGltYXRlIHVzZXMgd2hpbGUgYWxzbyBkaXNob25vcmluZyBsZWdpdGltYXRlIHRyaWJhbCBnb3Zlcm5tZW50cyBhbmQgdGhlaXIgY2l0aXplbnMsIHdob3NlIGFuY2VzdG9ycyBhcmUgd2VsbCBkb2N1bWVudGVkIGFuZCB3aG9zZSBoZXJpdGFnZSBpcyBwcm92ZS4gU2VuYXRvciBXYXJyZW4gaXMgdW5kZXJtaW5pbmcgdHJpYmFsIGludGVyZXN0cyB3aXRoIGhlciBjb250aW51ZWQgY2xhaW1zIG9mIHRyaWJhbCBoZXJpdGFnZS4uIApJbiBoaXMgMjAxMCBpbnRlcnZpZXcsIGhlIGRpZCBoaXMgcGFydCB0byBtYWtlIGl0IGNsZWFyIHRoYXQgcHJvbWlzZXMgb2YgImhvcGUiIHdlcmUgYXBwZWFscyB0byBuYXZldCwgYW5kIHRvbGQgaGltIGhpcyBhcHByb2FjaCB0byBoZWFsdGggY2FyZSByZWZvcm0gd2FzIHRvbyB3ZWFrIGFuZCB0aW1pZCwgc2hvcnQgb2YgdGhlIGNoYW5nZSB0aGUgY291bnRyeSBuZWVkZWQgICBhbmQgaGFkIGF0IGxlYXN0IG9uZSBzZWdtZW50IG9uIGhpcyBzaG93IHdoZXJlIGhlIHRhbGtlZCBhdCBsZW5ndGggYWJvdXQgaG93IGJhZGx5IHRoZXkgdGhlbiBib3RjaGVkIHRoZSBBQ0Egcm9sbG91dC4gCk15IHNoZSBoYXZlIGV0ZXJuYWwgcmVzdCBpbiB0aGUgYXJtcyBvZiBKZXN1cy4gCkhhbmQgMyAgIHJhaXNlIG1vcmUgcHJlLiAKWW91IGNhbiBwZW5hbGl6ZSBldmVyeSBlcnJvciBiZWNhdXNlIHlvdSBjb3VsZCBuZXZlciBoaXJlIGVub3VnaCBlbmZvcmNlbWVudCBzdGFmZiB0byBzZWUgdG8gaXQuIApDb25zdGFudGx5IHJlYWRpbmcgcG9rZXIgd2Vic2l0ZXMsIHRoaW5raW5nIG9mIGhhbmRzLCBvciBwbGF5aW5nIG1hc3NpdmUgMTIrIGhyIHNlc3Npb25zIG9ubGluZS4uIApVbHRpbWF0ZWx5LCBIaWxsYXJ5J3MgbG9zcyBpcyBoZXIgb3duLCBidXQgZG9uJ3QgcHJldGVuZCBCZXJuaWUgZGlkbid0IGh1cnQgaGVyIGNhbXBhaWduLgpEaWVzZSBGdW5rdGlvbiBzdGVodCBudXIgYmVpIGVpbndpbGxpZ3VuZ3NwZmxpY2h0aWdlbiBDb29raWVzLCBhbHNvIGRlbiBGdW5rdGlvbmFsZW4gQ29va2llcywgZGVuIFBlcmZvcm1hbmNlIENvb2tpZXMgdW5kIGRlbiAsIHp1ciBWZXJmZ3VuZy4gCkhlIGhhcyB3YW50ZWQgdG8gcGxheSBob2NrZXkgc2luY2UgaGUgd2FzIDQgeWVhcnMgb2xkLiBXZSBjb3VsZCBuZXZlciBhZmZvcmQgaXQuIApUcnkgb25lIG9mIHRoZXNlIHRvIGdldCB5b3Ugc3RhcnRlZDpUaGUgcG9rZXIgc2l0ZSBoYWQgcHJvbWlzZWQgcGxheWVycyB0aGF0IHRoZWlyIGFjY291bnRzIHdlcmUgcHJvdGVjdGVkIGFuZCB3b3VsZG4ndCBiZSB0b3VjaGVkLiBJdCByb3V0aW5lbHkgbWluZ2xlZCBwbGF5ZXIgbW9uZXkgd2l0aCBpdHMgb3duIGZpbmFuY2VzLCBhbmQgdG9vayBjYXNoIGZyb20gc29tZSBjdXN0b21lcnMgdG8gcGF5IG91dCB3aW5uaW5ncyBkdWUgdG8gb3RoZXJzLCBwcm9zZWN1dG9ycyBzYWlkLiBBdHRvcm5leSBQcmVldCBCaGFyYXJhIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIApJdCBpcyBhYnNvbHV0ZWx5IHN0dW5uaW5nLiAKQXJvdW5kIFB5cmFtaWRlcyBtZXRybyBzdGF0aW9uLCB0aGVyZSBhcmUgbWFueSBzdHJlZXRzIHdpdGggbGl0dGxlIFJhbWVuIHJlc3RhdXJhbnRzIChpIGxvdmUgcmFtZW5zKSwgaGlnaGx5IHJlY29tbWVuZCBEb3NhbmtvIExhcm1lbiBpZiB5b3UgaW50byB0aGlzLiAoc2hvdWxkbiBiZSBpbiBteSBjbGFzc3kgcmVzdGF1cmFudCBsaXN0IHRob3VnaCkKQnVkIExpZ2h0IHdpbGwgcHJpbnQgdGhlIGluZm9ybWF0aW9uIG9uIHNlY29uZGFyeSBwYWNrYWdpbmcsIGxpa2UgdGhlIGNhcmRib2FyZCBib3hlcyB0aGF0IGhvdXNlIDEyIHBhY2tzLCBidXQgbm90IG9uIGluZGl2aWR1YWwgY2FucyBhbmQgYm90dGxlcy4uIApJIG5vdCBzYXlpbmcgZG9uIGdldCBhIGRvZyBpbiBncmFkIHNjaG9vbC4gV2UgZ290IGEgcHVwcHkgYWZ0ZXIgbXkgZmlyc3QgeWVhciwgYW5kIEkgZG9uIGZvciBhbiBpbnN0YW50IHJlZ3JldCBpdCwgZXZlbiB0aG91Z2ggaXQgaGFyZGVyIHRoYW4gSSBleHBlY3RlZC4gQnV0IGxldCB5b3Vyc2VsZiBmaWd1cmUgb3V0IHdoYXQgZ3JhZCBzY2hvb2wgaXMgbGlrZSBiZWZvcmUgeW91IGNvbW1pdCB5b3Vyc2VsZiB0byBhIHNlY29uZCBtYXNzaXZlLCB5ZWFycyBsb25nIHByb2plY3QuIApGb3Igb25lIHRoaW5nLCBodW1hbml0eSBhbmNlc3RvcnMgZG8gbm90IHNlZW0gdG8gaGF2ZSBiZWVuIGV4Y2x1c2l2ZWx5IGNvYXN0YWwuIFdoYXQgdGhleSBkbyBhZ3JlZSBhYm91dCwgdGhvdWdoLCBpcyB0aGF0IHN1YnN0aXR1dGluZyBESEEgd2l0aCBvdGhlciwgc3VwZXJmaWNpYWxseSBzaW1pbGFyIG1vbGVjdWxlcyBpcyBhIGJhZCBpZGVhLgpJIGdvdCBkcnVuayBhbmQgYXNrZWQgaGVyIGFib3V0IGl0LiAKVG8gc2VydmUgY2hpY2tlbiwgbWl4IHVwIHlvdXIgc2F1Y2UuIAoiTm93IG1vcmUgdGhhbiBldmVyLCBJIGFtIHZlcnkgbGV2ZWwgaGVhZGVkLCIgUmFjZW5lciBzYWlkLiAiQmVpbmcgaW50byBteSBoZWFsdGggYW5kIGZpdG5lc3MgaGVscHMgdG8ga2VlcCBhIGNsZWFyIG1pbmQuIEkgYW0gc2l0dGluZyBhdCB0aGUgdGFibGUgZm9yIDE0IGhvdXJzIGEgZGF5LCBzbyB3aGVuIEkgYW0gbm90IGF0IHRoZSB0YWJsZSwgSSB3b3JrIG91dCBhbmQgZWF0IGhlYWx0aHkgdGhyb3VnaG91dCB0aGUgZGF5LiAKT3ZlcnZpZXcgZm9yIFRoZUxvbmVseVNhbXVyYWkKQW5kIHJlYWxseSBkb2VzIGl0IG1ha2Ugc2Vuc2U/IFRoZSBzaXR1YXRpb24gaXMgdmVyeSBzaW1pbGFyIHRvIHRoZSB2YXJpYW50IHdpdGggcmV0dXJuIG9mIGxvc2luZy4gCk9uIHdlZWsgZGF5cywgeW91IG1pZ2h0IGZpbmQgYXQgeW91cnNlbGYgYXQgYSB0YWJsZSB3aXRoIHJlZ3Mgd2hpY2ggaXMgZmFpcmx5IG5lZ2F0aXZlIGV2IGFzIGZhciBhcyBteSBsZXZlbCBvZiBwbGF5IGlzIGNvbmNlcm5lZC4gVGhlcmUgYXJlIHRvdXJuYW1lbnRzIG9uIGFsbW9zdCBldmVyeSBkYXkgaW4gZGlmZmVyZW50IGxvY2F0aW9ucy4gClNvIGFnYWluIHdlIGdvIHRvIHRoZSBjb3BzLCBhbmQgdGhleSBzdGlsbCByZWZ1c2luZyBhbnl0aGluZy4gCklmIHlvdSBsaWtlIHdoYXQgeW91IHNlZSwgeW91IGNhbiB1cGdyYWRlIGFuZCBvYnRhaW4gZnVsbCBhY2Nlc3MgaW1tZWRpYXRlbHkhIEluIDIwMTAsIG5lYXJseSBvZiBhIHF1YXJ0ZXIgb2YgYWxsIGJsYWNrIG1lbiBtYXJyaWVkIG91dHNpZGUgb2YgdGhlaXIgcmFjZSwgYWNjb3JkaW5nIHRvIHRoZS4gSGVyIGZhdGhlciBpcyBvZiBtaXhlZCBoZXJpdGFnZSAgIGhhbGYgSmFtYWljYW4gaGFsZiBDaGluZXNlLCB3aGlsZSBoZXIgbW90aGVyIGlzIGEgYmxhY2sgSmFtYWljYW4uIApUaGUgQVNBIHNhaWQgb3RoZXIgY2FtcGFpZ24gaW1hZ2VzLCBpbmNsdWRpbmcgYSBwYWlyIG9mIGJyZWFzdHMgZHJhd24gb24gYSBjYXIgd2luZHNjcmVlbiwgdGhlIGVsZiBiZXNpZGUgYSBza2V0Y2ggb2YgYSBwZW5pcyBzaGFwZWQgdHJlZSBhbmQgdGhlIGVsZiB3YXZpbmcgYSB2aWJyYXRvciwgd2VyZSBvYnZpb3VzIHNleHVhbCByZWZlcmVuY2VzLgpIZSBzcGVjaWFsaXplcyBpbiBtb2Rlcm4gQnJpdGFpbiBhbmQgSXJlbGFuZCwgd2l0aCBhIHBhcnRpY3VsYXIgZW1waGFzaXMgb24gdGhlIGhpc3RvcmllcyBvZiB0b3VyaXNtIGFuZCBuYXRpb25hbCBpZGVudGl0eS4gWnVlbG93IGlzIGVkaXRvciBvZiB0aGUgSGlzdG9yaWVzIGFuZCBDdWx0dXJlcyBvZiBUb3VyaXNtIGJvb2sgc2VyaWVzLCBwdWJsaXNoZWQgYnkgQ29ybmVsbCBVbml2ZXJzaXR5IFByZXNzIGFuZCBoZSBpcyBhIG1lbWJlciBvZiB0aGUgZWRpdG9yaWFsIGJvYXJkIGZvciB0aGUgQnJpdGFpbiBhbmQgdGhlIFdvcmxkIGJvb2sgc2VyaWVzIHdoaWNoIGlzIHB1Ymxpc2hlZCBieSBQYWxncmF2ZTsgaGUgZGVhbHMgd2l0aCB0aXRsZXMgY292ZXJpbmcgdGhlIHBlcmlvZCBhZnRlciAxNjg4LiBJbiBhZGRpdGlvbiwgaGUgaXMgY3VycmVudGx5IGNvIGVkaXRpbmcgdGhlIE94Zm9yZCBIYW5kYm9vayB0byB0aGUgSGlzdG9yeSBvZiBUb3VyaXNtIGFuZCBUcmF2ZWwuIApPbiBhIHNlcHRpYywgcmVtb3ZlIHRoZSBjbGVhbiBvdXQgY292ZXIgYW5kIG9ic2VydmUgdGhlIHdhdGVyIGxldmVsIGluIHRoZSB0YW5rLCB0aGUgaW5sZXQgcGlwZSBzaG91bGQgYmUgdmlzaWJsZSBhbmQgYWJvdmUgdGhlIHdhdGVyIGxldmVsIGluIHRoZSB0YW5rLiBJZiB0aGUgYmFmZmxlIGlzIGJsb2NrZWQgY2xlYW4gaXQgd2l0aCBhIGxpZ2h0IHdlaWdodCB3b29kZW4gdG9vbCwganVzdCBhIDEgeCAyIHdpdGggYSA0NSBiZXZlbCBjdXQgb24gdGhlIGVuZCB3b3JrcyBmaW5lLiAKSGUgaW50cm9kdWNlcyBwcmluY2lwbGVzIHdlIGNhbiBhbGwgdXNlIHRvIG92ZXJjb21lIGEgbnVtYmVyIG9mIGJyYWluIGxpbWl0YXRpb25zIGFuZCBleHBsb3JlcyB0aGUgcHJvZm91bmQgYnJhaW4gaW1wbGljYXRpb25zIG9mIHRoZSBjaGFuZ2luZyBicmFpbiBpbiBhbiBpbW1lbnNlbHkgbW92aW5nIGJvb2sgdGhhdCB3aWxsIHBlcm1hbmVudGx5IGFsdGVyIHRoZSB3YXkgd2UgbG9vayBhdCBodW1hbiBwb3NzaWJpbGl0eSBhbmQgaHVtYW4gbmF0dXJlLi4gClRoYXQgZmVlbGluZyBvZiBiZWluZyBmb3VuZCBvdXQsIGFuZCByZWFsaXppbmcgdGhhdCB5b3UgbWlzc2VkIHNvbWV0aGluZyByZWFsbHkgaW1wb3J0YW50IGJlY2F1c2UgeW91IHdlcmUgZHJ1bmsgaXMgb25lIG9mIHRoZSB3b3JzdCBmZWVsaW5ncyBJIGNhbiBjb25jZWl2ZSBvZi4gRGFtbWl0IEtldiwgSSByZWFsbHkgaG9wZSB5b3UgZ2V0IGhlbHAgYW5kIHB1bGwgb3V0IG9mIHRoaXMuMikgQmV0aCBSYW5kYWxsIE15IHdpZmUgYW5kIEkgaGFkIGEgZGlzY3Vzc2lvbiB0b25pZ2h0IGFmdGVyIHRoZSBlcGlzb2RlIGFib3V0IGhvdyB3ZSBib3RoIGZlZWwgYWJvdXQgaGVyIGJlaW5nIGEgc3RheSBhdCBob21lIG1vbS4gCkNvbXBsYWludDogSSBhdCB0aGUgcG9pbnQgaW4gbXkgbWFyYXRob24gdHJhaW5pbmcgd2hlcmUgSSBhbHdheXMgaHVuZ3J5IGFuZCBmYXRpZ3VlZC4KTm8gbWF0dGVyIHdoYXQgeW91ciB0b3BpYyBpcyB0b21vcnJvdyBuZXdzLCB5ZXN0ZXJkYXkgdHJlbmRzIG9yIGhvdyB0byBwbGF5IHRoZSBiZXN0IG9ubGluZSB2aWRlbyBwb2tlciBnYW1lcyBhdCBSZWQgRmx1c2ggb25saW5lIGNhc2lubyB5b3UgbmVlZCB0byBwdWJsaXNoIHlvdXIgY29udGFjdCBkZXRhaWxzIG9uIHlvdXIgd2Vic2l0ZS4gCkkgaGF2ZSBiZWVuIGJvb2tpbmcgY2xpZW50cyBmb3IgbWFzc2FnZXMgaW5zdGVhZCBvZiB3b3JraW5nIG9uIG15IHRocmVlIGRpZmZlcmVudCBNaXNzIE5vc2Ugc3Rvcmllcy4gCklzIG5vdCB0byBzYXkgdGhhdCBvdGhlciBzeXN0ZW1zIGRvbiByZXByb2R1Y2UgY2xhc3Mgc28gdGhhdCB0aGUgY2hpbGRyZW4gb2YgdGhlIGVkdWNhdGVkIHRlbmQgdG8gYmUgImdvb2Qgc3R1ZGVudHMiIGFuZCB0aGUgY2hpbGRyZW4gb2YgdGhlIHVuZWR1Y2F0ZWQgdGVuZCB0byAiZmFpbCwiIGJ1dCBpbiBvdGhlciBzeXN0ZW1zLCBoaWdoZXIgZWR1Y2F0aW9uIGlzIGFib3V0IG1ha2luZyB0aGUgZ3JhZGUsIG5vdCB0YWtpbmcgb24gdW5iZWFyYWJsZSBkZWJ0IGxldmVscy4uIApOb3cgaGUgbW92ZWQgb24gZnJvbSAibWFrZSBiZXR0ZXIvY2hlYXBlciByb2NrZXQiIGFuZCAibWFrZSBiZXR0ZXIgZWxlY3RyaWMgY2FyIiB0byBpZGVhcyB0aGF0IHdpbGwgcmVxdWlyZSByZXZvbHV0aW9ucyBpbiBldmVyeXRoaW5nIGZyb20gZ2VvbG9naWNhbCBzdXJ2ZXlzIHRvIHR1bm5lbGluZyB0byBwdWJsaWMgcG9saWN5IGFuZCBwcm9wZXJ0eSByaWdodHMuIFRoaXMgaXMgc3VwZXIgYnJhbmQgbmV3IHRlcnJpdG9yeSBmb3IgTXVzaywgYW5kIGhlIHJlcXVpcmVkIHRvIGFzc2VtYmxlIGEgbGFyZ2VseSBuZXcgdGVhbS4gSGUgaGFzIHRvIGhpcmUgdGhlICJyaWdodCBwZW9wbGUiIHdpdGhvdXQgbXVjaCBleHBlcnRpc2UgdGhhdCB3b3VsZCBoZWxwIGhpbSByZWNvZ25pemUgd2hvIGlzIHRoZSBiZXN0LiBUaGlzIGlzIG5ldyBhbmQgYmlnIHJpc2sgYWxvbmcgbm92ZWwgYXhlcy4KQnV0IHNhZGx5LCBtb3N0IG9mIHRoZSBmYWNpbGl0YXRvcnMgYXJlIHRob3NlIHdobyBoYXZlIHJlYWQgdGhlIGJvb2tzLCBkb25lIHRoZSB3b3Jrc2hvcHMgYW5kIG5vdyB0ZWFjaCBpdCAgIGJ1dCB3aG8gaGF2ZSBuZXZlciBleHBlcmllbmNlZCB3aGF0IGl0IGlzIHRoZXkgYXJlIHRlYWNoaW5nIGFuZCB0aGV5IGFyZSBhcyBtdWNoICdhdCBzZWEnIGFzIHRoZWlyIHB1cGlscyBhbmQgc3RpbGwganVzdCBhcyBuYWl2ZSBhYm91dCB3aGF0IGlzIHRydWx5IGF2YWlsYWJsZSBhcyBhbnlvbmUgZWxzZS4gClZvdXMgZXQgY2UgYmxvZwpUaGV5IGRpZCBzbywgaXQgaXMgbG9naWNhbCB0byBjb25jbHVkZSwgYmVjYXVzZSB0aGV5IHRob3VnaHQgaXQgd291bGQgd29yayBiZWNhdXNlIHRoZXkgd2VyZSBnaXZlbiByZWFzb24gdG8gYmVsaWV2ZSBpdCB3b3VsZCB3b3JrLi4gCkxpbmtzIHRvIG9yIG90aGVyIG9idmlvdXMgZGlyZWN0aW9uIHRvd2FyZCBwaXJhdGUsIGlsbGVnYWwsIG9yIHVub2ZmaWNpYWwgYW5pbWUgY29udGVudCBhcmUgbm90IGFsbG93ZWQuIFRoaXMgaW5jbHVkZXMgbGlua3MgdG8gdW5vZmZpY2lhbCB0cmFuc2xhdGlvbnMvc2NhbmxhdGlvbnMgb2YgbGlnaHQgbm92ZWxzLCB2aXN1YWwgbm92ZWxzLCBhbmQgbWFuZ2EsIHVub2ZmaWNpYWwgYW5pbWUgc3RyZWFtcywgdG9ycmVudCBzaXRlcywgdW5vZmZpY2lhbGx5IHVwbG9hZGVkIGZ1bGwgT1NUcywgYW5kIGltYWdlcyBhbmQgdmlkZW8gY29udGFpbmluZyB3YXRlcm1hcmtzIGZyb20gYW55IG9mIHRoZSBwcmV2aW91c2x5IG1lbnRpb25lZCB3ZWJzaXRlcy4gTGVhZGluZyBvdGhlcnMgdG8gaWxsZWdhbCBzdHJlYW1zIG9yIHRvcnJlbnRzIGluY2x1ZGVzIGV4cGxpY2l0bHkgbWVudGlvbmluZyBzcGVjaWZpYyBzdHJlYW1pbmcvdG9ycmVudGluZyBzaXRlcywgb2ZmZXJzIHRvIHNlbmQgdXNlcnMgaWxsZWdhbCBjb250ZW50LCBhbmQgbGVhZGluZyB0byBwcm94eSBzZXJ2aWNlcyB0byBjaXJjdW12ZW50IGxpY2Vuc2luZy4gSW4gYWRkaXRpb24sIHByb3h5IHNlcnZpY2VzIGFyZSBhbHNvIGZvcmJpZGRlbi4KVGhhbmtzIEkgd2lsbCEgQWxzbywgcXVlc3Rpb24gICB0aGV5IGdhdmUgbWUgYSByZW50YWwgdW5pdCBvZiBjaXJjdWxhdGlvbiBjdWZmcyBmb3IgbXkgY2FsdmVzIHRvIHRha2UgaG9tZS4gCkl0J3MgdW5jbGVhciBob3cgbWFueSBzaG90cyB3ZXJlIGZpcmVkLiBDcm9zc25vZSBiZWxpZXZlcyBCYXJrc2RhbGUgbWFkZSB0aGUgcmlnaHQgZGVjaXNpb24gYmFzZWQgb24gdGhlIGNpcmN1bXN0YW5jZXMuIApXZSB0aG9yb3VnaGx5IGVuY291cmFnZSBjcmVhdGl2ZSBib3NzIG5hbWVzLCByZWZlcmVuY2Ugb3RoZXIgcG9zdHMgZm9yIGdvb2QgZXhhbXBsZXMuIEV4dHJlbWVseSBsb3cgZWZmb3J0IHRpdGxlcywgaW5jbHVkaW5nIGNlcnRhaW4gdXNlcyBvZiBhcG9zdHJvcGhlcywgYXJlIHN1YmplY3QgdG8gcmVtb3ZhbCBhdCB0aGUgbW9kZXJhdG9yIGRpc2NyZXRpb24uIApUaGUgbGFzdCBzZXJpb3VzIHBva2VyIHBsYXlpbmcgSSBkaWQgd2FzIHR3byBzdW1tZXJzIGFnbywgaW4gVmVnYXMuIEkgZGlkIG9uZSBvZiB0aGUgV29ybGQgU2VyaWVzIGV2ZW50cyBmb3IgT21haGEgSG9sZCBJIGRpZG4gd2luLCBidXQgSSBkaWRuIGRvIHRvbyBiYWRseS4gCkltIHdvcmtpbmcgdGhlIHdpbmRvdyB0byBoYW5kIG91dCB0aGUgZm9vZCBhbmQgdGhlIGN1c3RvbWVyIHB1bGxzIHVwLCBmb29kIGlzbnQgcmVhZHkgeWV0IGJ1dCBJIGdsYW5jZWQgYXQgaGVyIGFuZCBzaGUgd2FzIHdlYXJpbmcgYSBibHVlIGRyZXNzIHdpdGggYSBmYW5jeSBsb29raW5nIHN1biBoYXQgYW5kIHN1bmdsYXNzZXMsIHNoZSBraW5kYSBsb29rcyBhdHRyYWN0aXZlIGJ1dCBmYWlybHkgb2xkZXIsIHNvIHRlZW5hZ2VyIG1lIGlzIGxpa2UgImF3ZXNvbWUgSSBnZXQgdG8gc2VlIGEgaG90dGllIi4gV2VsbCBmb29kIGZpbmFsbHkgY29tZXMgdXAgYW5kIEkgb3BlbiB0aGUgd2luZG93IHRvIGhhbmQgaGVyIHRoZSBmb29kIGFuZCBzaGUgdHVybnMgaGVyIGhlYWQgdG8gbG9vayBhdCBtZS4uIApBZnRlciBJIHdvbiBJIGdvdCAzIGdvbGRlbiByYXNwYmVycmllcywgNiByYXJlIGNhbmR5LCBhbmQgbWF5YmUgc29tZXRoaW5nIGVsc2UgSSBkb24gcmVtZW1iZXIuIEhhcHBlbmVkIHZlcnkgZmFzdC4gCldoYXQgQ0VTIDIwMTcgSGFzIFRvIE9mZmVyIEZvciBUZWNoIExvdmVyc1RoZSBOZXdlc3QgVGVjaCBBdCBUaGVUaGUgSW50ZXJuYXRpb25hbCBDb25zdW1lciBFbGVjdHJvbmljcyBTaG93IChDRVMgMjAxNylBIEJlbnRsZXkgQmVudGF5Z2EgaXMgc2hvd24gZHVyaW5nIGEgc3BlZWQgdGVzdCBhZ2FpbnN0IEZhcmFkYXkgRnV0dXJlJ3MgRkYgOTEgcHJvdG90eXBlIGVsZWN0cmljIGNyb3Nzb3ZlciB2ZWhpY2xlIChub3Qgc2hvd24pIGR1cmluZyB0aGUgRkYgOTEncyB1bnZlaWxpbmcgYXQgYSBwcmVzcyBldmVudCBmb3IgQ0VTIDIwMTcuIFRoZSAxLDA1MCBob3JzZXBvd2VyIEZGIDkxIGZlYXR1cmVzIGF1dG9ub21vdXMgZHJpdmluZyB3aXRoIDNEIGxpZGFyIGFuZCBjYW4gZ28gZnJvbSAwIHRvIDYwIG1waCBpbiAyLjM5IHNlY29uZHMuIChQaG90byBieSBFdGhhbiBNaWxsZXIvR2V0dHkgSW1hZ2VzKS4gCkNvc3RlbGxvIHNhaWQgdGhlIFF1ZWVuc2xhbmQgR292ZXJubWVudCBuZWVkZWQgdG8gcmVkdWNlIHRoZSBtYXhpbXVtIGJldCBvbiBwb2tpZXMgdG8gJDEgYW5kIHNpZ25pZmljYW50bHkgcmVkdWNlIHRyYWRpbmcgaG91cnMuLiAKVGhlIHJ1bGUgd2FzIG9yaWdpbmFsbHkgdG8gcHJldmVudCBjb2xsdXNpb24sIGJ1dCBpbiBhbGwgYnV0IGEgZmV3IHJvb21zLCB5b3UgY2FuIGFzayB0byBzZWUgYW55IGhhbmQgdGhhdCB3YXMgbGl2ZSBhdCBzaG93ZG93biB3aXRob3V0IGFjY3VzaW5nIGFueW9uZSBvZiBhbnl0aGluZy4gClZvaWwgcXVpIGV4cGxpcXVlIG5vdHJlIGxnaXRpbWUgaW5xdWl0dWRlIGFwcnMgdW4gbG9uZyBzaWxlbmNlIGRlIGwnSHRlbCBkZSBWaWxsZSBzdXIgY2UgcHJvamV0LiAKVGhlbiBsZXNzIHRoYW4gYSB3ZWVrIGxhdGVyLCBpdCBoYXBwZW5zIGFnYWluLiBPYnZpb3VzbHkgbm90IGFuIGFjY2lkZW50LiAKSXQgYSBncmVhdCBib2FyZCBhbmQgdGhlIGR1YWwgTS4yIHNsb3RzIGFyZSByZWFsbHkgYSBuaWNlIGZlYXR1cmUgaW4gYSBzbWFsbCBidWlsZC4uIApUaGF0IGdvZXMgZm9yIGV2ZXJ5IHBsYXllciByZWdhcmRsZXNzIG9mIHRoZWlyIGRlY2ssIGRlY2tidWlsZGluZyBpcyBzdXBwb3NlZCB0byByZWR1Y2UgdGhlICJsdWNrIiBmYWN0b3IuIEkgcGxheWVkIGVub3VnaCBUQ0dzIGluIG15IHlvdXRoIChhbmQgU2xheSB0aGUgU3BpcmUuKSB0byBiZSBhd2FyZSBvZiBhbGwgdGhvc2UgcHJpbmNpcGxlcy4uIApBbGwgcGxheWVycyBhcmUgZXhwZWN0ZWQgdG8gYmUgZnVsbHkgcmVpbWJ1cnNlZCBzaG9ydGx5LiBTdGl4eCB3b3JyaWVzIGFib3V0IHRoZSBsb25nIHRlcm0gdmlhYmlsaXR5IG9mIHRoZSBwcHBva2VyIG1vZGVsIGZvciBnb29kIHJlYXNvbi4gCkVpdGhlciB5b3VyIGZvcmVoZWFkIHN3ZWF0cywgeW91ciBqYXcgY2xlbmNoZXMsIHlvdSBkcmluayBtb3JlIHRoYW4gdXN1YWwsIHlvdXIgbGVnIHRhcHMsIHlvdXIgcHVsc2UgdHdpdGNoZXMgbm90aWNlYWJseSBpbiB5b3VyIHRocm9hdC4gCkJhcnlsYSBzYWlkIHRoZSBtYWpvcml0eSBvZiB0aGUgZnVuZHMgdXNlZCB0byBwdXJjaGFzZSB0aGUgcHJvcGVydHkgY2FtZSBmcm9tIHRoZSBwYXJ0aWVzIHNhdmluZ3MuIE1yLiAKSSBhbSBub3QgMTAwJSBob3cgdGhlIHByb2Nlc3Mgd29ya3MsIGJ1dCB0aGV5IHRlbmQgdG8gbm90IGhhdmUgdGhlIHNhbWUgcHJvY2VzcyBvZiBiZWNvbWluZyBsaWNlbnNlZC9zZWVpbmcgY2xpZW50cy4gClRoZSBjZXJhbWljcyB3ZXJlIGRlY29yYXRlZCBtb3N0bHkgd2l0aCBzaW1wbGUgZ2VvbWV0cmljIHBhdHRlcm5zIHdoaWNoIGdvdCBtb3JlIGFuZCBtb3JlIGNvbXBsZXggb3ZlciB0aGUgdGltZS4gCk5vdGhpbmcgcGlzc2VzIG1lIG9mZiBtb3JlIHRoYW4gdGVsbGluZyBtZSBhdCAzOjMwcG0gdGhhdCB5b3UgZmVsdCBhd2Z1bCBhbGwgZGF5IGFuZCBhcmVuIGFibGUgdG8gY29tZSBpbi4uIApPbmxpbmUgcG9rZXIsIGFzIHRoZSBuYW1lIHN1Z2dlc3RzLCBpcyB0aGUgZ2FtZSBvZiBwb2tlciBwbGF5ZWQgb3ZlciB0aGUgSW50ZXJuZXQuIE9ubGluZSBwb2tlciBoYXMgYmVlbiByZXNwb25zaWJsZSBmb3IgYSBkcmFtYXRpYyBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBva2VyIHBsYXllcnMgd29ybGR3aWRlLiAKSSBkaWRuJ3QgZXZlbiBmaW5pc2ggdGhlIHRyYWlsZXIgZm9yIHRoaXMgb25lLiBUaGlzICJ0aHJpbGxlciIgc3RhcnJpbmcgRXRoYW4gSGF3a2UgYW5kIFNlbGVuYSBHb21leiAobm8sIHJlYWxseSkgaXMgYWxtb3N0IHRoZSBleGFjdCBwbG90IGZyb20gdGhlIHR3byAiMTIgUm91bmRzIiBtb3ZpZXMgcmVsZWFzZWQgYnkgV1dFIHN0dWRpb3MuIApNZXRob2RzOiBOaW5lIG1lbiB3ZXJlIHBsYWNlZCBpbiBhIHNlbWlyZWNsaW5lZCBwb3NpdGlvbiBhbmQgbG93ZXJlZCBpbnRvIDhDIG9yIDIyQyB3YXRlciB0byB0aGUgaWxpYWMgY3Jlc3QgZm9yIHR3byA1IG1pbnV0ZSBwZXJpb2RzIGludGVyc3BlcnNlZCB3aXRoIDIgbWludXRlcyBvZiBub25pbW1lcnNpb24uIFJlY3RhbCBhbmQgdGhpZ2ggc2tpbiB0ZW1wZXJhdHVyZSwgZGVlcCBhbmQgc3VwZXJmaWNpYWwgbXVzY2xlIHRlbXBlcmF0dXJlLCBoZWFydCByYXRlLCBtZWFuIGFydGVyaWFsIHByZXNzdXJlLCB0aGlnaCBjdXRhbmVvdXMgYmxvb2QgdmVsb2NpdHkgKGxhc2VyIERvcHBsZXIpLCBhbmQgc3VwZXJmaWNpYWwgZmVtb3JhbCBhcnRlcnkgYmxvb2QgZmxvdyAoZHVwbGV4IHVsdHJhc291bmQpIHdlcmUgbWVhc3VyZWQgZHVyaW5nIGltbWVyc2lvbiBhbmQgZm9yIDMwIG1pbnV0ZXMgYWZ0ZXIgaW1tZXJzaW9uLiAKUmVsYXRpb25zaGlwcyBhcmUgZ2l2ZSBhbmQgdGFrZS4gV29tZW4gb2Z0ZW4gbG92ZSB0byByZXdhcmQgdGhlaXIgbWVuIHdpdGggdGhpbmdzIHRvIG1ha2UgdGhlbSBmZWVsIHNwZWNpYWwsIGJ1dCBub3RoaW5nIG1ha2VzIHdvbWVuIGZlZWwgYmV0dGVyIHRoYW4ga25vd2luZyB0aGVpciBtZW4gd2FudCB0byBkbyB0aGUgc2FtZSB0aGluZ3MgZm9yIHRoZW0gd2hlbiB0aGV5IGhhdmUgdGhlIGNoYW5jZS4KUGVvcGxlIGFyZSBtb3JlIGxpa2VseSB0byBiZWxpZXZlIG90aGVycyB3aG8gYXBwZWFyIGNvbmZpZGVudCBpbiB0aGVpciBkZWNpc2lvbiBtYWtpbmcuIApTdGlsbCwgSSB0aGluayB0aGlzIHZpZGVvIHNlcmllcyBpcyBwcmV0dHkgY29vbC4uIApJIGhhdmUgbm8gaXNzdWVzIHdoZW4gcGVvcGxlIHVzZSB0aGVpciBjaG9jb2JvcyBiZWNhdXNlIEkgc21hcnQgZW5vdWdoIHRvIGtub3cgdGhlcmUgd2F5cyB0byB0dXJuIG9mZiB0aGVpciBoZWFsdGggYmFycyBhbmQgbmFtZSBwbGF0ZXMuIApBbmQgb2YgY291cnNlIHNoZSBwb3N0cyBvbiBJbmNlbFRlYXJzLCBiZWNhdXNlIHdoeSB3b3VsZG4gdGhpcyBTSlcgcGFydGljaXBhdGUgaW4gYSBzdWJyZWRkaXQgbW9ja2luZyBtYXJnaW5hbGl6ZWQgbWVuPyBBbG9uZyB3aXRoLCB5ZXAsIC9yL1RoZVJpZ2h0Q2FudE1lbWUvLiAKIllvdSBjYW4gYmUgbW9uaXRvcmluZyBwb2xsZW4gY291bnRzIG9ubGluZSwgc28geW91IGFyZSBhd2FyZSB3aGVuIHRoZXJlJ3MgaGlnaCBhbW91bnRzIG9mIHBvbGxlbiBpbiB0aGUgYWlyLCIgc2hlIHNhaWQuIApUaGUgUGFsZXN0aW5pYW4gaXNzdWUgaXMgYSBtYXNzaXZlIGlzc3VlIGluIElzcmFlbCwgYnV0IGl0IGZhciBmcm9tIHRoZSBvbmx5IHRoaW5nIGdvaW5nIG9uIChldmlkZW5jZWQgYnkgdGhlIHBsYXRmb3JtcyBvZiB0aGUgY2FuZGlkYXRlcyBpbiB0aGUgdXBjb21pbmcgZWxlY3Rpb25zKS4gClNvIEkgc2l0IGhlciBkb3duIGFuZCB0ZWxsIGhlciB0aGlzIGJsdW50bHk7IFlvdSBhcmUgdGlyZWQgb2YgdGhlIGRyYW1hIGFuZCB0aGUgdGVhcnMgYW5kIGNoYXNpbmcgaGVyIGFyb3VuZCB0aGUgaG91c2UgZm9yIGhlciBoYWlyIHRvIGJlIGRvbmUuIFNoZSBjYW4gZWl0aGVyIGRvIGEgbWFuYWdlYWJsZSBsZW5ndGggKGFuZCBzb21lIHBpeGllIGN1dHMgYXJlIFNVUEVSIGN1dGUhKSwgb3Igc2hlIGNhbiB0b2xlcmF0ZSB0aGlzLiBCdXQgbm90IHJ1biB0aHJvdWdoIHRoZSBob3VzZSBzY3JlYW1pbmcgYW5kIGJ1Y2tpbmcgb3V0IG9mIHlvdXIgYXJtcy4uIApUaGlzIHdhcyBteSBmcmllbmQgYW5kIEkgdGhvdWdodCwgJ0hvZ2FuIGJldHJheWVkIG1lPyBIb2dhbiBjYWxsZWQgVmluY2UgYW5kIHJhdHRlZCBtZSBbb3V0XSwgd2FzIGFuIG9mZmljZSBzdG9vZ2U/JyBJbiBteSBkYXksIHRoYXQncyB3aGF0IHRoZXkgd2VyZSBjYWxsZWQuIApCdXQgbm93IHRoYXQgdGhlIG1hdGNoIGhhcyBzdGFydGVkLCB3ZSdyZSByZWFsaXppbmcgd2UncmUgbm90IGdldHRpbmcgdGhlIGNydXNoZXIgb2YgdGF4IGN1dHMsIHdlJ3JlIGdldHRpbmcgU29kYnVzdGVyIEtlbm55IEosIiBQYXdsZW50eSBzYWlkIG9mIEdvdi4gCllvdSBzdGlsbCBnb25uYSBsb3NlIGFsbCB5b3VyIG1vbmV5IGlmIHlvdSBiYWQsIGJ1dCB0aGF0IHRoZSByaXNrIG9mIHBsYXlpbmcgcG9rZXIuLiAKIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29CZWNhdXNlIEkgYmVlbiBoZXJlIGJlZm9yZSBhbmQgSSBrbm93IHdoYXQgdGhlIGNvbW1lbnRzIHdpbGwgYmUgSSB3YW50IHRvIGFkZCBhIGJpdCBvZiB0aGUgIm5lZ2F0aXZlIiBzaWRlIG9mIHRoaXMgYW5ub3VuY2VtZW50Lk1hc29uIGNvbmZpcm1lZCB0b2RheSB0aGF0IHdpdGhpbiBhIHllYXIsIHRoZXJlIHdpbGwgbm90IGJlIHBob3RvIGVuZm9yY2VtZW50IG9uIHN0cmFpZ2h0IGFyZWFzIG9mIHRoZSBIZW5kYXkuIApJbiBtYXJ0aWFsIGFydHMgYW5kIGxpZmUgLCB0aGVyZSBpcyBldmVyIGJ1dCBvbmUgb3Bwb25lbnQgYW5kIG9uZSBvcHBvbmVudCBvbmx5LiAKV2hlbiBhIGJpZyBidWRnZXQgYW5pbWUgYWltaW5nIGZvciBhIG1hc3MgYXVkaWVuY2UgdGhhdCBpcyBhbG1vc3QgY2VydGFpbmx5IHByZXN1bWVkIHRvIGJlIHN0cmFpZ2h0IG1hbGVzLCBJIGJlbGlldmUgdGhlcmUgaXMgaGFybSB0byBiZSBkb25lIGluIG5vcm1hbGl6aW5nIHRob3NlIG9sZCBmZWFycyBvZiB0aGUgInNsdXR0eSwgZGVjZXB0aXZlIGJpdGNoIHRoYXQgaXMgb3V0IHRvIHNjcmV3IG92ZXIgYWxsIHRoZSBuaWNlIGd1eXMgKHdobyB0b3RhbGx5IHdhbnQgdG8gZnVjayBoZXIsIGJ1dCBhcmUgbmljZSwgc28gdGhleSBhY3R1YWxseSBkZXNlcnZlIGl0KS4iIEkgYmVsaWV2ZSBpdCB0ZWFjaGVzIG1lbiBhbmQgd29tZW4gYWxpa2UgdGhhdCB0aGlzIGlzIHNvbWV0aGluZyB0byBmZWFyLCBzb21ldGhpbmcgdGhhdCBtZW4gc2hvdWxkIGFsbCBiZSBvbiB0aGUgbG9va291dCBmb3IsIGFuZCB0aGF0IGFueSB3b21hbiB3aG8gZ2VudWluZWx5IG5lZWRzIHRvIHJlcG9ydCBhbiBhc3NhdWx0IGNvdWxkIHBvdGVudGlhbGx5IGJlIGx1bXBlZCBpbnRvIHRoaXMgY2F0ZWdvcnkuCk5BTCwgYXBwYXJlbnRseSBuZWdsZWN0aW5nIHRvIG1lbnRpb24gc29tZW9uZSBpbiBhIHdpbGwgb3BlbnMgdGhlbSB0byBjbGFpbSB0aGF0IHRoZXkgd2VyZSBmb3Jnb3R0ZW4uIApObyBlbnRyeSB0byBzY2hvb2xzLCBjaGlsZCBjYXJlIG9yIHB1YmxpYyBmYWNpbGl0aWVzIHdpdGhvdXQgYmVpbmcgdmFjY2luYXRlZC4gCkRpY2sgd2FzIGFsc28gYSBsb25nIHRpbWUgbWVtYmVyIG9mIHRoZSBncmFuaXRlIGNsdWIgYW5kIHBsYXllZCBiYWRtaW50b24gYW5kIHdvbiBudW1lcm91cyBhd2FyZHMuIEhlIHdhcyBhbiBhdmlkIGRvd25oaWxsIHNraWVyIGFuZCBvbmx5IHN0b3BwZWQgc2tpaW5nIGF0IDgxIHllYXJzIG9sZCBhZnRlciBoZSBicm9rZSBoaXMgZm9vdCBvbiB0aGUgc2xvcGVzLiBGb3IgdGhlIHBhc3QgMzAgeWVhcnMgaGUgc3BlbnQgdGhlIG1vbnRoIG9mIE5vdmVtYmVyIG9uIFNhbmliZWwgSXNsYW5kIHdoZXJlIGhlIGxvdmVkIHRoZSBkb2xwaGlucywgc2Vhc2hlbGxzIGFuZCBzdW4uIApUaGV5IGZlYXIgdG8gcGFydGljaXBhdGUgYW5kIHRyeSB0aGVpciBsdWNrcy4gCkZvcmQgUHJvbWlzZXMgTW9yZSBQcm9kdWN0cyBGb3IgVG91Z2ggRXVyb3BlYW4gTWFya2V0CkhlIGFsc28gc3VmZmVyZWQgc29tZSBicnVpc2luZywgYnV0IHdhcyBvdGhlcndpc2UgdW5oYXJtZWQuCkl0J3MgdmVyeSBvYnZpb3VzIHRoYXQgc2hlIGxvdmVzIHdoYXQgc2hlIGRvZXMsIGFuZCB5b3Ugd2lsbCBiZSBzcG9pbGVkIGFuZCBwYW1wZXJlZCBpbiB3YXlzIHlvdSBwcm9iYWJseSBuZXZlciBpbWFnaW5lZC4gCk9yIHBsYXkgY29tcHV0ZXIgZ2FtZXMgb24gYSBub3RlYm9vayBjb21wdXRlci4gVGFrZSBhbiBvbmxpbmUgY2xhc3MsIHZpZGVvIHR1dG9yaWFsLCBvciBob21lIGNvcnJlc3BvbmRlbmNlIGNvdXJzZS4gVGhlc2UgYWxsb3cgeW91IHRvIGdvIGF0IHlvdXIgb3duIHBhY2UsIGFuZCB5b3UgZG9uJ3QgaGF2ZSB0byBnZXQgb3V0IG9mIGJlZCB0byBnbyB0byBjbGFzcy4gCldhcm5pbmc6IG1ha2Ugc3VyZSB5b3VyIGF1ZGlvJ3MgaW4gYW5kIG91dCBwb2ludHMgYXJlIHBhcmtlZCBvbiBhIGZyYW1lIG51bWJlciBhbmQgbm90IGEgc3ViIGZyYW1lIG51bWJlci4gRkNQWCB3aWxsIG5vdCBhbGxvdyBhIGNsaXAgd2l0aCBhbiBJbiBvciBPdXQgcG9pbnQgb24gYSBzdWJmcmFtZSB0byByZXN0IG9uIHRoZSBwcmltYXJ5IHN0b3J5bGluZS4uIApHb2luZyBiYWNrIHRvIEJvc3RvbiwgaGUgZ290IGtpY2tlZCBvdXQgd2l0aGluIHRoZSBmaXJzdCBjb3VwbGUgb2Ygc2hpZnRzLCBNYXJsZWF1IHNhaWQgd2l0aCBhIHNtaWxlLiAKRXhlcmNpc2UgQ1dJIGRpc3J1cHRzIGhvcm1vbmFsIHJlY292ZXJ5IHJlc3BvbnNlcyBmcm9tIHRyYWluaW5nLiBEaXMgbm90IGdvb2QuCkl0IG1heSBiZSBhIHNtYWxsIHN0ZXAgZm9yIFBha2lzdGFuaSBwYXJsaWFtZW50YXJ5IGRlbW9jcmFjeSwgYnV0IGluIHRoZSBwcmVzZW50IGNvbnRleHQsIHNtYWxsIHZpY3RvcmllcyBtaWdodCBzZWVtIGxpa2UgZ2lhbnQgbGVhcHMgaW4gdGhlIFBQUCdzIGxvb21pbmcgZnV0dXJlLgpQb2ludGluZyBvdXQgdGhhdCB0aGVyZSB3YXMgbm90IGEgc2luZ2xlIGN1c3RvbWVyIHRoZXJlIHdhcyB1c2VsZXNzLiAKQ291cnNlIHRoZSBpZGVhIG9mIGNhbW91ZmxhZ2UgaW4gdGhlIGFuaW1hbCB3b3JsZCBpcyBwcm9iYWJseSAyNTAgbWlsbGlvbiB5ZWFycyBvbGQgYW5pbWFscyBhbmQgaW5zZWN0cyBoYXZlIGJlZW4gYmxlbmRpbmcgaW50byB0aGVpciBlbnZpcm9ubWVudCBmb3IgZW9ucywgYW5kIEkgc3VyZSB0b28gdGhhdCBlYXJseSBob21pbmlkcyBkaWQgdGhlaXIgZmFpciBzaGFyZSBvZiB3YWxraW5nIGJlaGluZCBicnVzaC4gQnV0IHRoZSBpZGVhIG9mIGhpZGluZyBncmVhdCBhbWFsZ2FtYXRpb25zIG9mIHZlcnkgaGVhdnkgbWV0YWwgd2l0aCBwYWludCBpcyByZWFsbHkgcXVpdGUgbW9kZXJuLi4gCkFsYW8gZ2FiYXBlbnRpbiBkb2VzbiBhY3QgZGlyZWN0bHkgb24gdGhlIGdhYmEgcmVjZXB0b3JzLiAKV2UgY2Fubm90IGRldGVybWluZSB3aG8gb3Igd2hhdCB0aGlzIHBhc3NlbmdlciBpcywgc28gd2UgaGF2ZSBiZWVuIGluc3RydWN0ZWQgdG8gdGFrZSBvZmYgd2l0aCBubyBpbnRlbnRpb24gb2YgbGFuZGluZyB0aGUgcGxhbmUuIFdlIHdpbGwgZmx5IGEgY2lyY3VpdG91cyByb3V0ZSBvdmVyIHRoZSBCZXJtdWRhIElzbGFuZHMgdW50aWwgdGhpcyBpc3N1ZSByZWN0aWZpZXMgaXRzZWxmLCBvciB3ZSBleHBlcmllbmNlIGVxdWlwbWVudCBmYWlsdXJlIGR1ZSB0byBsb3cgZnVlbC4gCkluIHJlc3BvbnNlIHRvIHRoZSBpbnZlc3RpZ2F0aW9uIFdvb2x3b3J0aHMncyBwb2tlciBtYWNoaW5lIGFybSBBdXN0cmFsaWFuIExlaXN1cmUgYW5kIEhvc3BpdGFsaXR5IEdyb3VwIChBTEgpIGhhcyBzYWNrZWQgYW5kIGRpc2NpcGxpbmVkIGEgbnVtYmVyIG9mIHN0YWZmIGZvciBicmVhY2hlcyBhdCBhdCBsZWFzdCAyMiB2ZW51ZXMsIGluY2x1ZGluZyAyMCBob3RlbHMgaW4gUXVlZW5zbGFuZC4KSSBoYWQgYSBudXJzZSBjb21lIHRvIG15IG9mZmljZSB0byBnaXZlIG1lIHRoZSBpbmplY3Rpb25zIHNvIGkgbmV2ZXIgZXZlbiBtaXNzZWQgd29yayBmb3IgdGhhdCBwYXJ0LCBidXQgaXQgbWFkZSB5b3VyIGJvbmVzIGZlZWwgYSBsaXR0bGUgc29yZSwgbGlrZSBpZiB5b3UgZmVsbCBvbiB0aGUgaWNlIG9uIGEgY29sZCBkYXksIGJ1dCBhcyBzb29uIGFzIHlvdSBkb25hdGUsIHRoYXQgc29yZW5lc3MgZ29lcyBhd2F5LiAKSGVhcnRnbGltcHNlcyAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpHb3QgdGhlIGNhciBwYXNzZWQgdHdvIHVyZ2VudCBjYXIgZmFjaWxpdGllcyB0aGF0IGRvbiB0YWtlIG15IGluc3VyYW5jZSB0byBnZXQgdG8gdGhlIG9uZSB0aGF0IGRvZXMuIElmIGl0IGlzIHRoaXMgaGFyZCBmb3Igc29tZW9uZSB3aG8gaGFzIGluc3VyYW5jZSBJIGNhbiBpbWFnaW5lIHRoZSBkaWZmaWN1bHR5IGZvciBubyBpbnN1cmFuY2Ugb3IgTWVkaWNhaWQgZm9sa3MuIApUaGUgY29tcGFueSBzYXlzIGl0IGNhbiByZWFjaCAzMDUga3BoICgxOTAgbXBoLikuIApZb3Uga25vdywgSSBtZWFuLCBjb21lIG9uIG5vdywgSSBtZWFuLCB3aGVuIHlvdSBnb3QgICBhY2NvcmRpbmcgdG8gdGhlICJ3YXNoaW5ndG9uIHBvc3QiICAgb3VyIHByZXNpZGVudCBoYXMgbWFkZSBhdCBsZWFzdCA4LDcxOCAgIDgsNzE4IGZhbHNlIG9yIG1pc2xlYWRpbmcgc3RhdGVtZW50cy4gVGhhdCBzdHVubmluZy4gVGhhdCBub3Qgd2hhdCB3ZSB0ZWFjaCBvdXIgY2hpbGRyZW4uIEkgZG9uIHRlYWNoIG1pbmUgdGhhdC4gQW5kIGZvciB3aGF0ZXZlciByZWFzb24gaXQgc291bmRzIGxpa2UgeW91IGdvdCBjYXVnaHQgdXAgaW4gaXQuIApUaGlzIHN1YiBpcyBjb21wbGV0ZWx5IHRveGljLi4gClNhbWUgZnVja2luZyB0aGluZy4gCjI5LiBUaGUgdGVhbXMgY29uY2x1ZGUgdGhlIHNlYXNvbiBzZXJpZXMgYmFjayBoZXJlIG9uIEFwcmlsIDEgaW4gTmV3IFlvcmsncyBob21lIGZpbmFsZS4gCkFkZGl0aW9uYWxseSwgSSBzYXcgeW91IGhhZCBhc2tlZCBhYm91dCB0aGUgYXJteSBwcm9ncmFtIGZvciB2ZXQgc3R1ZGVudHMgZWxzZXdoZXJlIGFuZCB0byBhbnN3ZXIgeW91ciBxdWVzdGlvbiBhYm91dCBwaHlzaWNhbCBzdGFuZGFyZHMgSSB0aGluayBtYW55IHBlb3BsZSB3aWxsIHRlbGwgeW91IHRoYXQgaXQgdGhlIHNhbWUgYWNyb3NzIHRoZSBib2FyZCwgYnV0IEkga25vdyBhIGNvdXBsZSBndXlzIGluIHRoZSBwcm9ncmFtLiBXaGlsZSB0aGV5IGFyZSBwcmV0dHkgaW4gc2hhcGUsIHRoZXkgc2FpZCB0aGF0IHRoZXJlIHdlcmUgc2V2ZXJhbCBtZW1iZXJzIG9mIHRoZSBwcm9ncmFtIHRoYXQgd2VyZSBpbmNyZWRpYmx5IG91dCBvZiBzaGFwZS4gCkl0IGhhcyBkb3VibGVkIGluIHZhbHVlIGFuZCBjYXNoIGZsb3dzIHBoZW5vbWVuYWxseS4gV2Ugc2VsZiBtYW5hZ2UgdGhlIHByb3BlcnR5IGFuZCB0YWtlIGltbWVuc2UgcHJpZGUgZm9yIHBsYXlpbmcgYSByb2xlIGluIGdlbnRyaWZ5aW5nIHRoZSBhcmVhLiAKV2UgYWxzbyB3aWxsIHNlbmQgb3V0IGF1dG9tYXRlZCAiZGlkIHlvdSBtZWFuIHRvIGRvIHRoaXM/IiBtZXNzYWdlcyBmb3IgdGhpbmdzIHN1Y2ggYXMgSVJDIHRyYWZmaWMsIHNpbmNlIHNvbWV0aW1lcyBpdCBsZWdpdGltYXRlIGFuZCBvdGhlciB0aW1lcyBpdCBjb3VsZCBiZSBzb21ldGhpbmcgd29yc2UuIElmIHRoZXkgZ2V0IGJhY2sgdG8gdXMgYW5kIHNheSAib2ggeWVhaCBteSBjaGF0IGNsaWVudCB1c2VzIGl0IiBldmVyeXRoaW5nIGlzIGNvb2wsIGJ1dCBvdGhlcndpc2Ugd2UgZ29pbmcgdG8gaGVscCB0aGVtIG91dCB0byBtYWtlIHN1cmUgdGhlaXIgZGV2aWNlIGlzIG9rYXkuCkNhbGwgaXQgMTcgInNtb2thYmxlIiBob3VycyBpbiB0aGUgZGF5LCBvciAxMDIwIG1pbnV0ZXMuClBsYXkgTmljZSBvciBFbHNlCiBVc2NpcmUgZGFsIHR1bm5lbCBkaSBxdWVzdGEgcmVhbHQgaW5mZXJuYWxlIGUgZGlyaWdpYW1vY2kgdmVyc28gbnVvdmkgaW5pemksIHZlcnNvIHF1ZWxsYSByZWFsdCBwYXJhZGlzaWFjYSBjaGUgdGFudG8gYnJhbWEgaWwgbm9zdHJvIGN1b3JlIC4uIApBcyB3ZWRkaW5nIHNlYXNvbiByYW1wcyB1cCwgTW9udHJlYWwgREogSmV6IHNheXMgaGUnbGwgYWxzbyBiZSBhdHR1bmVkIHRvIGhpcyBjbGllbnRzJyBmZWVsaW5ncy4gSWYgYSBjb3VwbGUgc3BlY2lmaWNhbGx5IGFza3MgZm9yIG5vIEphY2tzb24gYXQgdGhlaXIgd2VkZGluZywgaGUncyBnb2luZyB0byBob25vdXIgdGhlaXIgd2lzaGVzLCBidXQgb3RoZXJ3aXNlIGhlIHBsYW5zIHRvIGtlZXAgdGhlIHNvbmdzIGluIGhpcyByb3RhdGlvbi4KQXMgYSBzZWN0b3IgYXMgYSB3aG9sZSwgaXQgaGFyZCB0byBvdmVyc3RhdGUganVzdCBob3cgaW1wb3J0YW50IGdhbWJsaW5nIGlzIHRvIHRoZSBJcmlzaCBlY29ub215IGluIGdlbmVyYWwuIEZvciBleGFtcGxlLCBieSAyMDIwIGl0IGFudGljaXBhdGVkIHRoYXQgaXQgd2lsbCBlbXBsb3kgYmV0d2VlbiAyLDAwMCBhbmQgMyw2MDAgcGVvcGxlIHdpdGggYSBwYXlyb2xsIG9mIG1pbGxpb24gc28gaXQgd291bGQgbWFrZSBzZW5zZSBmb3IgdGhlIGdvdmVybm1lbnQgdG8gZG8gYWxsIHRoZXkgY2FuIHRvIHN0aW11bGF0ZSBpdHMgZ3Jvd3RoLiAKVGhlIG1lY2hhbmljcyBvZiB0aGUgZ2FtZSBhcmUgc2ltcGxlLiBBIGNhbGxlciBvciByYW5kb20gbnVtYmVyIGdlbmVyYXRvciByYW5kb21seSBzZWxlY3RzIGEgbnVtYmVyIHRoYXQgaXMgYW5ub3VuY2VkIHRvIHRoZSBwbGF5ZXJzLiAKS25vdyB3aGF0IHJlbWVkaWVzIGFyZSBzdXBwb3NlZCB0byBkby4gVGhleSBhcmUgc3VwcG9zZWQgdG8gaW1wcm92ZSB5b3VyIGhlYWx0aCwgYnV0IFdlc3Rlcm4gZHJ1Z3MgY2FuIGFjdHVhbGx5IGJhY2tmaXJlIGFuZCBib29tZXJhbmcgaGVhbHRoeSBsaWZlc3R5bGUgaW50ZW50aW9ucywgQm9sdG9uIHNheXMuIApJIGNvdWxkbiBjYXJlIGxlc3MgYWJvdXQgaXQuIEFzIGZhciBhcyBJIGNvbmNlcm5lZCBpdCBqdXN0IGFuIEVsZGVyIFNjcm9sbHMgT25saW5lIHZlcnNpb24gZm9yIEZhbGxvdXQgYW5kIGlmIHlvdSBsb29rIGF0IGl0LCB0aGUgc2luZ2xlIHBsYXllciBhbmQgbXVsdGlwbGF5ZXIgY29tbXVuaXR5IGFyZSBkaWZmZXJlbnQgZm9yIHRoZSBFbGRlciBTY3JvbGxzIGFuZCBpbiBteSBvcGluaW9uLCBzaG91bGQgYmUgZm9yIEZhbGxvdXQuIEp1c3QgYXMgdGhlIGRldmVsb3BlcnMgYXJlIGRpZmZlcmVudC4gCk9uZSBtb3JuaW5nIHRoZSBjcm9vayBkcmVzc2VkIGhpbXNlbGYgdXAgZm9yIGEgYnVzeSBkYXkgb2Ygb2ZmaWNlIHdvcmsgYW5kIHdhaXRlZCBmb3IgdGhlIGJhbmsgbWFuYWdlciB0byBhcnJpdmUuIEFzIHRoZSBtYW5hZ2VyIHdhcyB1bmxvY2tpbmcgdGhlIGRvb3JzIGhlIG1hZGUgaGlzIG1vdmUsIGVudGVyaW5nIHRoZSBidWlsZGluZyBhbmQgdGhyZWF0ZW5pbmcgdGhlIG1hbmFnZXIgd2l0aCBhIGd1bi4gSGUgZ290IGFsbCB0aGUgZGV0YWlscyBoZSBuZWVkIHRvIGFjY2VzcyB0aGUgdmF1bHQgYW5kIHNvIGZvcnRoIGFuZCB0aGVuIHRpZWQgdGhlIG1hbmFnZXIgdXAgYW5kIHN0dWZmZWQgaGltIGluIGhpcyBvZmZpY2UuLiAKQydlc3QgY29tbWUgc2kgbGEgbWlzcmUgZXQgbGEgcGF1dnJldCBzZSByZXByb2R1aXNhaWVudCBlbGxlcyBtbWVzLiBQcml2ZXogdW4gZW5mYW50IGRlIHNvaW5zIGV0IGRlIG5vdXJyaXR1cmUgYWRxdWF0cywgZXQgaWwgdmEgZ3JhbmRpciBhdmVjIHVuZSBlbXByZWludGUgYmlvY2hpbWlxdWUgcXVpIGNvbnRyaWJ1ZXJhICBsdWkgZG9ubmVyIHVuZSBwZXJzb25uYWxpdCBtZmlhbnRlIGV0IGRpZmZpY2lsZSwgY2UgcXVpIHJlbmRyYSBwbHVzIGltcHJvYmFibGUgcXUnaWwgcydpbnN0cnVpc2UsIG9idGllbm5lIHVuIGVtcGxvaSBybXVucmF0ZXVyIGV0IGFpdCBsYSBwYXRpZW5jZSBleGlnZSBwb3VyIHRyZSB1biBib24gcGFyZW50LgpSZXZpZXdzIGFuZCBSYXRpbmdzIG9mIFRvcCBSYXRlZCBPbmxpbmUgQ2FzaW5vcwoyLiBJbXByb3ZlIEJyYWluIEZ1bmN0aW9uIGFuZCBGaWdodCBEZXByZXNzaW9uClRoZSBkYXkgc3RhcnRlZCB3aXRoIHRoZSBzYW1lIGJyZWFrZmFzdCBhbmQgdGhlbiBkZXBhcnR1cmUgYXQgNTo0NSAob24gdGhlIGJ1dHRvbiAgIG5vdCBhIG1vbWVudCBsYXRlciAgIGkgbG92ZSBpdCkgdGhlbiBhbiBob3VyIGxvbmcgdHJhbnNmZXIgdG8gdGhlIHN0YXJ0LiAKSnVzdCB0byByZWFzc3VyZSB5b3UsIHlvdSBhcmUgbm90IGF0IGZhdWx0LiBJdCBpcyB2ZXJ5IGdvb2QgdGhhdCB5b3UgYXJlIGhhbmRsaW5nIHRoaXMgc2l0dWF0aW9uIHZlcnkgdGhvdWdodGZ1bGx5IGFuZCByZWFzb25hYmx5IGV2ZW4gdGhvdWdoIGl0IGhhcyB0byBkaWZmaWN1bHQuIApSVCBoYXMgYSBoaXN0b3J5IG9mIHNheWluZyBvbmUgdGhpbmcgd2hpbGUgYWN0aXZlbHkgZW5kb3JzaW5nIHRoZSBvcHBvc2l0ZS4gCkhlIGF0dHJpYnV0ZXMgaXQgaW4gcGFydCB0byB0aGUgYWJzZW5jZSBvZiB0aGUgdW5kZXJjb3ZlciBNUEQgQ29tbXVuaXR5IFJlc3BvbnNlIFRlYW0sIHdoaWNoIHdhcyBpbmFjdGl2ZSBmb3IgYSB5ZWFyIGFmdGVyIG1lbWJlcnMgd2VyZSBjYXVnaHQgaGF2aW5nIHNleCB3aXRoIHByb3N0aXR1dGVzLCBhbmQgdGhlIHNxdWFkIHdhcyBhY2N1c2VkIG9mIGJydXRhbGl0eSBhbmQgc2VhcmNoIHZpb2xhdGlvbnMuLiAKQmVyZWl0cyBpbiBtZWhyZXJlbiBCbG9nIEJlaXRyZ2VuIGhhYmUgaWNoIGJlciBkaWUgRmluY2EgQXV0YXJjYSBUaW5pemFyYSBpbSBOb3Jkd2VzdGVuIExhIFBhbG1hcyBiZXJpY2h0ZXQgdW5kIG1laW5lIEJlZ2Vpc3RlcnVuZyBmciBkaWVzZXMgUGVybWFrdWx0dXIgUHJvamVrdCB3Y2hzdCBtaXQgamVkZW0gQmVzdWNoICBKZXR6dCBnaWJ0IGVzIHdpZWRlciBkaWUgTWdsaWNoa2VpdCwgYW4gZWluZXIgZGVyIHNwYW5uZW5kZW4gRmhydW5nZW4gdGVpbHp1bmVobWVuLiBBbGxlbiBkaWUgZ2VyYWRlIGF1ZiBMYSBQYWxtYSBzaW5kLCBlbXBmZWhsZSBpY2ggZGllIEZocnVuZyBhbSA3LiAKR29hIEdvYSBpcyBvbmUgb2YgdGhlIHN0YXRlcyB3aGVyZSBnYW1ibGluZyBpcyBmcmVlbHlhbGxvd2VkIGJ5IHRoZSBzdGF0ZSBnb3Zlcm5tZW50LiBHYW1ibGluZyBpcyBhbGxvd2VkIGluIEdvYSwgRGFtYW5hbmQgRGl1IHVuZGVyIHRoZSBTZWN0aW9uIDEzQSBvZiBUaGUgR29hLCBEYW1hbiBhbmQgRGl1IFB1YmxpY0dhbWJsaW5nIEFjdCwgMTk3Ni4gLgpDb25zaWRlciBpdCBhbiBhZHZlcnRpc2VtZW50IG9mIHlvdXIgc2VydmljZXMuIFRvIG1ha2UgYm90aCB0aG9zZSB3aG8gYXJlIG9mZmVyaW5nIGFzIHdlbGwgYXMgdGhvc2Ugd2hvIGFyZSBsb29raW5nIGZvciBhIHNlcnZpY2UgdG8gY29ubmVjdCB3aXRoIHlvdS4gVXBkYXRlIHlvdXIgcHJvZmlsZSBmcmVxdWVudGx5Li4gCkkgZmVlbCBsaWtlIHRoaXMgaXMgbW9yZSBvZiBhIHBoaWxvc29waGljYWwgcXVlc3Rpb24uIEkgaGF2ZSBhIG5vcm1hbCBjcmVkaXQgaGlzdG9yeSByZWxhdGl2ZSB0byBteSBhZ2UgYW5kIGEgNzUwaXNoIHNjb3JlLiAKVGhlIHNjaG9vbCBpcyBleHRyZW1lbHkgZXhwZW5zaXZlIHdoZXJlIEkgYW0gbG9jYXRlZCBhbmQgeW91IHJlcXVpcmUgYSBodWdlICBvZiBob3VycyB0byBxdWFsaWZ5IGFzIGFuIFJNVCBpbiBteSBjb3VudHJ5LCBhbmQgaW4gdGhlIGVuZCBvZiBpdCBhbGwsIHRoZSBwYXkgaXMganVzdCB0aGVyYXB5IGlzIGxpdHRlcmVkIHdpdGggcHNldWRvIHNjaWVuY2UsIGJ1dCBrZWVwIGluIG1pbmQgdGhhdCB5b3VyIHdvcmsgaXMgdG8gcmVsaWV2ZSB0ZW5zaW9uIGFuZCBoZWxwIHBlb3BsZSByZWxheC4gClRoZSBqdXJ5IGZvdW5kIHRoYXQgR3JhbmRpc29uIGhpcmVkIFZlcm5vbiBFdmFucyB0byBraWxsIHRoZSBwYWlyIGEgZmV3IGRheXMgYmVmb3JlIFBpZWNob3dpY3ogd2FzIHRvIHRlc3RpZnkgYWdhaW5zdCBHcmFuZGlzb24gaW4gYSBmZWRlcmFsIGRydWcgY2FzZS4gQWZ0ZXIgaGlzIGNvbnZpY3Rpb24gR3JhbmRpc29uIG9wdGVkIGZvciBhIGp1cnkgc2VudGVuY2luZyByYXRoZXIgdGhhbiBoYXZpbmcgSnVkZ2UgTGxveWQgU2ltcGtpbnMsIHdobyBoYWQgaGVhcmQgdGhlIGNhc2UsIGRlY2lkZSBoaXMgZmF0ZS4gCkRvbid0IHJlcXVpcmUgbmV3IHJlcHJlc2VudGF0aW9uIHdpdGggbmluZSB5ZWFycyBhbmQgJDQwLjUgbWlsbGlvbiBVUyByZW1haW5pbmcgb24gYW4gaW1tb3ZhYmxlIDEyIHllYXIsICQ2NCBtaWxsaW9uIGRlYWwgdGhhdCB3YXMgbmVnb3RpYXRlZCBieSBMdXBpZW4gYnV0IGJlY2FtZSBhbiBhbGJhdHJvc3MuIENvdXJzZSB0aGUgZ2VuZXJhbCBtYW5hZ2VyIHdvdWxkIGJlbmQgb3ZlciBiYWNrd2FyZHMgdG8gcGFpbnQgYSByb3N5IHBpY3R1cmUgZm9yIHRoZSBmb2xrcyB3aG8gcGF5IHRoZSBiaWxscywgYnV0IGluIGhvY2tleSBtYWQgVmFuY291dmVyLCBkb2VzIGFueWJvZHkgYmVsaWV2ZSB0aGF0IEx1b25nbyB3aWxsIGJlIGhhcHB5PyBIZSB3YXMgYmFzaWNhbGx5IHRvbGQgdGhhdCB5b3UgYXJlIGdvbmUsIGthcHV0IGFzIHRoZSB0b3AgZG9nLCBhbmQgbm93IHdpbGwgYmUgYnJvdWdodCBiYWNrIGludG8gdGhlIHdvbGZwYWNrIGFuZCBhbGwgaXMgZm9yZ2l2ZW4/LiAKV2UgZG9uJ3QgaGF2ZSBhIGhvdXNlIGNsZWFuZXIgb3IgeWFyZCBzZXJ2aWNlIGFuZCByYXJlbHkgZWF0IG91dCwgc28gZ3Vlc3Mgd2hvIGRvZXMgYWxsIG9mIHRoYXQgbm93LiAKSXQnbGwgZ2V0IGZpeGVkIHdpdGggdGltZSBpbiB0aGUgc3lzdGVtIGJ1dCBhbHNvIG1vcmUgdGltZSBwbGF5aW5nIHRvZ2V0aGVyIHNvIHRoZXNlIG1pc3Rha2VzIHdpbGwgYmUgbGVzcyBjb21tb24uMikgWW91IGRvIHJlYWxpemUgcGF5aW5nIE1hY2hhZG8gdW50aWwgaGUncyAzNiB3b3VsZCBiZSBmaW5lIGJlY2F1c2UgSSB3b3VsZCBzYXksICJ5b3UgdHJpZWQgdG8gYWNxdWlyZSB0b3AgdGFsZW50IHNvIEkgaGF2ZSBubyBpc3N1ZS4iIEkgbWVhbiBoZWxsLCB3ZSd2ZSBkb25lIGl0IHdpdGggZWxsc2J1cnkgYW5kIEknbSBub3QgdXBzZXQuIFNoaXQgaGFwcGVucyBhbmQgYWdhaW4sIHRoZSBtdWx0aSBiaWxsaW9uIGRvbGxhciBlbnRlcnByaXNlIHJvbGxzIG9uIHR1cm5pbmcgbWFzc2l2ZSBwcm9maXRzICAgYW5kIEkgbWlnaHQgYWRkICAgc3BlbmRpbmcgaXQgb24gcGxheWVycy4gCkFuZCB3ZSBhcmUgZmFzdCBhcHByb2FjaGluZyBhIHBvaW50IG9mIGxpbWl0ZWQgc3BhY2UgaW4gb3VyIHVyYmFuIGFyZWFzIChyaXNpbmcgY29zdHMpLCBjb3VwbGVkIHdpdGggdGhlIGtpbmQgb2YgY3VsdHVyYWwgaG9zdGlsaXR5IHRoYXQgd2lsbCBwcmV2ZW50IHRob3NlIGNpdGllcyBmcm9tIHByb3Blcmx5IGV4cGFuZGluZyBBTkQgYW4gQUkvTWVjaGFuaXphdGlvbiBjcmlzaXMgdGhhdCB3aWxsIGRlc3Ryb3kgdGhlIHdpZGVzcHJlYWQgYXZhaWxhYmlsaXR5IG9mIGFueSBqb2IuIEFuZCB0aGF0IHdpbGwgZW5kIGNhcGl0YWxpc20gYXMgYSBmdW5jdGlvbmFsIHN5c3RlbS4uIApGb3IgdGhlIGJhbmQgICBpZiBzaGUgbGlrZXMgc29tZSBpbnRyaWNhdGUgcGllY2VzIGFuZCBkZXRhaWxzIHRoZW4gdGhlIGJhbmQgbWF5IGFjdHVhbGx5IGNvc3QgeW91IG1vcmUgdGhhbiB0aGUgZGlhbW9uZC4gQW5kIHRoYXQncyBva2F5ISBCdXQgaWYgc2hlIHdhbnRzIGEgZmFpcmx5IHNpbXBsZSBiYW5kIHlvdSBzaG91bGQgbm90IGJlIHNwZW5kaW5nIGFueXdoZXJlIG1vcmUgdGhhbiA1ayBvbiB0aGUgc2V0dGluZyAoYW5kIHRoYXQncyBiZWluZyB2ZXJ5IGdlbmVyb3VzIHdpdGggdGhlIGFtb3VudCkuClRoZSBXaW5nbWVuIE1vdG9yY3ljbGUgQ2x1YiB3aWxsIHNwb25zb3IgYSBQb2tlciBSdW4gT24gTWF5IDMxIHRvIGJlbmVmaXQgdGhlIFZldGVyYW5zIFRlbXBvcmFyeSBFbWVyZ2VuY3kgQXNzaXN0YW5jZSBQcm9ncmFtLCB3aGljaCBwcm92aWRlcyBmaW5hbmNpYWwgYXNzaXN0YW5jZSB0byBhY3RpdmUgYW5kIHJldGlyZWQgc2VydmljZW1lbiBhbmQgdGhlaXIgZGVwZW5kZW50cy4gQXNzaXN0YW5jZSBpcyBwcm92aWRlZCBmb3IgYmFzaWMgbmVlZHMgaW5jbHVkaW5nIGhvdXNpbmcgY29zdHMsIGZvb2QsIHV0aWxpdGllcyBhbmQgbWVkaWNpbmUuIApJdCBsaWtlIGFuIHVuaXF1ZSBoZWFkbW92aWUuIExpa2UsIHRoZSBzZW50ZW5jZSAiRGFubnkgYW5kIEp1bmUgcGxheSB3aXRoIHRoZSBiYWxsIiwgSSBpbW1lZGlhdGVseSBzZWUgaW4gbXkgbWluZCB0d28ga2lkcyBwbGF5aW5nIHdpdGggYSBiYWxsLi4gCldpdGggYSByZXNwZWN0YWJsZSBjaG9pY2Ugb2YgNDAgTGl2ZSBDYXNpbm8gdGFibGVzIHRvIHBsYXkgYXQsIHlvdSBjYW4gZW5qb3kgYSBsaXZlIGdhbWUgb2YgUm91bGV0dGUsIEJhY2NhcmF0LCBCbGFja2phY2sgb3IgUG9rZXIuIFRob3NlIHdobyBsaWtlIHRvIGJldCBvbiBzcG9ydHMgd2lsbCBhcHByZWNpYXRlIHRoZSBvcHBvcnR1bml0eSB0byBwbGFjZSBiZXRzIG9uIG92ZXIgMzAsMDAwIGV2ZW50cyBlYWNoIHllYXIgaW5jbHVkaW5nIGZvb3RiYWxsLCBnb2xmLCBiYXNrZXRiYWxsLCBiYXNlYmFsbCwgaG9ja2V5LCBob3JzZSByYWNpbmcsIHRlbm5pcyBhbmQgbWFueSBtb3JlLgpXZSByZWFsaXplZCB0aGF0IHdlIHdlcmUgZG9pbmcgZXZlcnl0aGluZyBhbiBBSSBjb21wYW55IHNob3VsZCBiZS4gT3VyIENFTyBhbmQgSSBjYW1lIHVwIHdpdGggRW1vdGlvbkFJIGluIGEgZmV3IG1pbnV0ZXMgYmVmb3JlIGEgdGFsaywgYW5kIGl0IHN0dWNrIGZvciB0aGUgZmlyc3QgdGltZS4gCiJUaGlzIGlzIG9uZSBzaXRlIHRvIGZpZ2h0IGZvciBhbmQgdGhlIGNvbmRvIChidWlsZGluZykgaGFzIG5vdCBiZWVuIGJ1aWx0IHlldCwgc28gaXQgaXMgYSBwZXJmZWN0IGNyaXRpY2FsIG1vbWVudCB0byBtb2JpbGl6ZSBwZW9wbGUgd2l0aCB0aGUgc2l0ZSBiZWluZyBpbiB0aGUgaGVhcnQgb2YgQ2hpbmF0b3duLiJUaGUgQ2hvd3MnIHlvdXRoIGdyb3VwLCBhbG9uZyB3aXRoIEtldmluIEh1YW5nIGF0IHRoZSBIdWEgRm91bmRhdGlvbiwgd2hpY2ggcmVwcmVzZW50cyBDaGluZXNlIENhbmFkaWFuIHlvdXRoLCBzZXQgb3V0IHRvIHRhbGsgZGlyZWN0bHkgd2l0aCBDaGluYXRvd24gYnVzaW5lc3NlcyBpbiBvcmRlciB0byBjb21wYXJlIHRoZWlyIG93biBmaW5kaW5ncyB3aXRoIEJlZWRpZSdzIGNvbmNsdXNpb24gdGhhdCBvbmx5IGVpZ2h0IHBlciBjZW50IG9mIDE0NCBidXNpbmVzc2VzIGNhbnZhc3NlZCB3aXRoaW4gYSAzMDAgbWV0cmUgcmFkaXVzIG9mIHRoZSBzaXRlIHdlcmUgb3Bwb3NlZCB0byB0aGUgcGxhbnMgZm9yIDEwNSBLZWVmZXIuQWZ0ZXIgZm91ciBkYXlzIHZpc2l0aW5nIGFib3V0IDUwIGJ1c2luZXNzZXMgYWxvbmcgS2VlZmVyIGFuZCBQZW5kZXIgU3RyZWV0cywgdGhleSBmb3VuZCBhIG11Y2ggaGlnaGVyIGxldmVsIG9mIG9wcG9zaXRpb24sIGF0IDUwIHBlciBjZW50LiAKVGhlIG1vbmV5IG1ha2VyLCBDb25vciAiVGhlIE5vdG9yaW91cyIgTWNHcmVnb3IuIApTdWl0b3JzIGxpa2UgTUdNIFJlc29ydHMgYW5kIENhZXNhcnMgRW50ZXJ0YWlubWVudCBleHByZXNzZWQgaW50ZXJlc3QgaW4gYnV5aW5nIHRoZSBjYXNpbm8gYW5kLCBhY2NvcmRpbmcgdG8gdHdvIHNvdXJjZXMgd2l0aCBkaXJlY3Qga25vd2xlZGdlIG9mIHRoZSBwcm9jZXNzLCBtZXQgd2l0aCBXeW5uIFJlc29ydHMgcm91Z2hseSBhIG1vbnRoIGFnby4KU29tZW9uZSB3aXRoIGEgaGlnaGVyIGVkdWNhdGlvbikgd2FzbiBmb29sZWQsIGJ1dCBJIHdvdWxkIGltYWdpbmUgdGhhdCBzdG9yeSB0byBiZSBlbm91Z2ggdG8gc2F0aXNmeSB0aGUgYXZlcmFnZSBmb290IHNvbGRpZXJzIGFuZCBjaXZpbGlhbnMuIApLZWVwIGZvbGxvd2luZyB0aGUgcm9hZCBzb3V0aC4gClRoZXJlIGFyZSBwZXJzb25zIGFuZCBhY3RvcnMgd2hvIEkgdGhpbmsgYXJlIGF0dHJhY3RpdmUgaW4gYSBzZXh1YWwgd2F5LiBCdXQgdGhlc2Ugc2V4dWFsIHRob3VnaHRzIEkgaGF2ZSBhcmUga2luZGEgYWJzdHJhY3QgSSBndWVzcy4gCk1lZGl1bSBzaXplZCBwdW1wa2lucyBhcmUgdGhlIG1vc3QgcG9wdWxhciBmb3IgamFjayBvIGxhbnRlcm5zLiAKMTgpICJJbiB0aGUgVVMsIHRoZSBjdXJyZW50IGFjdGlvbiBsZXZlbCBvZiAxIG1pY3JvZ3JhbXMgbWV0aHlsbWVyY3VyeS9nIGZpc2ggb3Igc2VhZm9vZCB3YXMgc2V0IGluIDE5NzcgZHVyaW5nIGNvdXJ0IHByb2NlZWRpbmdzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2FuIHYuIApFdmVuIGlmIHRoZXkga25vdyB0aGUgcGV0aXRpb24gaGFzIHZlcnkgbGl0dGxlIG1lcml0LCB0aGV5IGNhbiBhbmQgbGlrZWx5IHNob3VsZCBzZWVrIHRvIGdldCB5b3UgdG8gYWdyZWUgdG8gaXQgdm9sdW50YXJpbHkuIApQdWxsIG91dCB0aGUgdGFuZ2xlZCBsb2NrIHN0cmFpZ2h0LgpQb3N0ZWQgYnkgSW5maW5pdGUgSmVzdCBhdCA3OjM0IEFNIG9uIEp1bmUgMywgMjAxMCBbMiBmYXZvcml0ZXNdClRvIGJlIGZhaXIsIGl0IG5vdCB0aGF0IGFsbCBkaWZmZXJlbnQgZnJvbSB5b3VyIHR5cGljYWwgb25saW5lIGhhY2ssIGJ1dCB0aGUgY2F2ZWF0IGlzIHRoYXQgZXZlcnkgb3RoZXIgc28gY2FsbGVkICJ0cmVhc3VyZSBodW50ZXIiIGlzIGd1bm5pbmcgYWZ0ZXIgdGhhdCBwYXNzd29yZCBhcyB3ZWxsLiBJIGxhdWdoIGF0IHRoZWlyIHZhaW4gYXR0ZW1wdHM7IHNoeSBmcm9tIHNvbWVvbmUgZmlyaW5nIHVwIGFuIElNQiBzdXBlcmNvbXB1dGVyIHRoZXJlIG5vIHdheSBhbnkgcmlnIGlzIG91dGd1bm5pbmcgbXkgb3duLiAKSW4gY29udHJhc3QsIHJlY2FsbCB0aGUgbXVjaCB0YWxrZWQgYWJvdXQgVHJvcGljYW5hIHJlZGVzaWduIHRoYXQgd2FzIGhhc3RpbHkgd2l0aGRyYXduIGZyb20gbWFya2V0IGVhcmxpZXIgbGFzdCB5ZWFyLiBUaGUgZGVzaWduIHdhcyBzbyBkaXNydXB0aXZlIHRoYXQgaXQgd2FzIG5vdCBlYXNpbHkgcmVjb2duaXphYmxlIHRvIGN1cnJlbnQgdXNlcnMsIHdobyB3ZXJlIGxpa2VseSB0byBqdXN0ICJncmFiIGFuZCBnbyIgaW4gdGhlIGp1aWNlIHJlZnJpZ2VyYXRvcnMuIEFzIGEgcmVzdWx0LCBhbGllbmF0ZWQgc2hvcHBlcnMgZGlkIGp1c3QgImdvLCIgYW5kIHRoZSBicmFuZCBsb3N0IHNpZ25pZmljYW50IHZvbHVtZSBvdmVybmlnaHQuIFVsdGltYXRlbHksIGJyYW5kcyBtdXN0IHN0cmlrZSBhIGNhcmVmdWwgYmFsYW5jZSBpbiBrZWVwaW5nIHRoZSBicmFuZCByZWNvZ25pemFibGUgdG8gY3VycmVudCB1c2VycyB3aGlsZSBhbHNvIG1ha2luZyBpdCBkaXNydXB0aXZlIHRvIG5ldyB1c2Vycy4gQXMgaXQgYXBwZWFycywgVHJvcGljYW5hIHdlaWdoZWQgY29tbXVuaWNhdGluZyB0byBuZXcgdXNlcnMgb3ZlciBkcml2aW5nIHJlY29nbml0aW9uLCBhbmQgbWlzc2VkIGFjaGlldmluZyB0aGF0IGNyaXRpY2FsIGJhbGFuY2UuCkp1ZHkgYW5kIGZhbWlseSBJIHNvIHNvcnJ5IGZvciB5b3VyIGxvc3MuIEZyZWQgd2FzIGFuIGFtYXppbmcgbWFuIGFuZCBtYW55IGxlYXJuZWQgZnJvbSBoaW0uIApMZWFkIGlzIHNvZnQuIFdoeSBub3Q/IERyaWxsIGEgbGl0dGxlIHBpbG90IGhvbGUgbm8gbW9yZSB0aGFuIDMvNCBpbmNoIGRlZXAgKGRlZXBlciBhbmQgeW91J2xsIGJlIGludG8gdGhlIGFjaWQpIGFuZCBzY3JldyBpbiBhIHNjcmV3LiBOb3QgZ3JlYXQgZm9yIG1haW50ZW5hbmNlLCBidXQgaXQgc291bmRlZCBsaWtlIGEgcGxhbi4gTXkgcG9rZXIgcGFsIGRyb3ZlIGRvd24gdG8gaGVscC4KNS4gCkxlYXJuIG1vcmUgYWJvdXQgQXV0b1pvbmUgSW5jCkZvciBleGFtcGxlLCBQYXNzYWdlcyBNYWxpYnUgaW4gQ2FsaWZvcm5pYSwgYSAkMTUgbWlsbGlvbiBtYW5zaW9uIG92ZXJsb29raW5nIHRoZSBQYWNpZmljIE9jZWFuLCByZXBvcnRlZGx5IGNvc3RzICQ4OCw1MDAgYSBtb250aCBhbmQgaGFzIGhvc3RlZCB0aGUgbGlrZXMgb2YgTWVsIEdpYnNvbiBhbmQgTWFyYyBKYWNvYnMuIEJ5IGNvbXBhcmlzb24sIEhhemVsZGVuIGFuZCB0aGUgQmV0dHkgRm9yZCBDZW50cmUgb2ZmZXJzIHJlc2lkZW50aWFsIHJlaGFiIHNlcnZpY2VzIGZyb20gJDIwLDAwMCB0byAkMzIsMDAwLgpUZWxscyBtZSB0aGF0IHRoZXJlIGFyZSBhIGJ1bmNoIG9mIGFudGkgYnVsbHlpbmcgcG9zdGVycyBpbiB0aGUgaGFsbHMuIEl0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UgZG9uIGV2ZW4gc2VlIHRoZW0gYW55bW9yZS4gSGFtYmVyLCBsb2NhdGVkIG9uIHRoZSB3ZXN0IHNpZGUgb2YgVmFuY291dmVyLCBoYXMgYWJvdXQgMSw3MDAgc3R1ZGVudHMuIApWZXJpZmlxdWUgc2V1IGhpc3RyaWNvIGRvIG5hdmVnYWRvciBkZSB3ZWIgaW50ZXJuZXQgcGFyYSBzaW5haXMgZGUgYWxlcnRhLiAKRmluYWxseSwgcmVtZW1iZXIgdGhlcmUgYSBsb3QgbW9yZSBjb250cmlidXRpb24gcm9vbSBmb3IgUlJTUHMuIFRoZSBuZXcgbWF4aW11bSBhbm51YWwgY29udHJpYnV0aW9uIGZvciBURlNBcyBpcyAkNiwwMDAsIGNvbXBhcmVkIHRvICQyNiwyMzAgZm9yIFJSU1BzIGluIGNhbGVuZGFyIDIwMTgsIGFzc3VtaW5nIHlvdSBlYXJuICQxNDUsNzAwIGFuZCBoYXZlIG5vIFBlbnNpb24gQWRqdXN0bWVudCBmcm9tIGNvcnBvcmF0ZSBwZW5zaW9ucy4gVGhhdCB1cCBmcm9tICQyNiwwMTAgaW4gMjAxNywgYW5kIHRoZSBsaW1pdCByaXNlcyB0byAkMjYsNTAwIGluIDIwMTkgYW5kIHRvICQyNywyMzAgaW4gdGhlIDIwMjAgdGF4IHllYXIsIHNheXMgTWFzdHJhY2NpLgoiUGFpIEdvdyBpcyBwdXNoIHksIiBzYWlkIE1vamFycm8sIHJlZmVycmluZyB0byBhIGdhbWUgd2hlcmUgb25lIG9mIHRoZSBwbGF5ZXIncyBoYW5kcyBiZWF0cyB0aGUgZGVhbGVyJ3MsIGJ1dCB0aGUgb3RoZXIgbG9zZXMgKGEgdGllKS4gCklmIHlvdSB3YW50IHRvIHBsdWcgc2VyaW91cyBsZWFrcyB0aGVuIEkgcmVjb21tZW5kIGEgY29hY2gsIGlmIHlvdSBkb24gd2FudCB0byBkbyB0aGF0IHRoZW4geW91IGNhbiBzZWxmIHJldmlldyB3aXRoIGEgaGFuZCB0cmFja2VyIGFuZCBjb25zdGFudGx5IHJlIHdhdGNoIHlvdXIgb2xkIGhhbmRzIGFuZCB0aGluayBhYm91dCB0aGUgYmVzdCBwbGF5LiAKKEpvbCBTYXZhdG9mc2tpKUlsIGVzdCBwYXJ0aWN1bGlyZW1lbnRhZGFwdCBhdXggcGVyc29ubmVzIGZyYWdpbGVzIGV0IGRwZW5kYW50ZXMuUXVlbHF1ZXMgZXhlbXBsZXMgZGUgbWFzc2FnZXMgcHJvZGlndXM6PT4gbWFzc2FnZSBzdXIgbGUgY3Q9PiBtYXNzYWdlIGR1IGRvcyBhc3Npcz0+IG1hc3NhZ2UgZHRlbnRlIGRlcyBtYWlucz0+IG1hc3NhZ2UgZHRlbnRlIGRlcyBwaWVkcz0+IG1hc3NhZ2UgYmllbiB0cmUgZHUgdmVudHJlQSBkb21pY2lsZSBvdSBlbiBpbnN0aXR1dGlvbm5lbCAobWFpc29ucyBkZSByZXRyYWl0ZSwgY2VudHJlcyBkZSBjb252YWxlc2NlbmNlLCBzdHJ1Y3R1cmVzIGQgc3BjaWFsaXNlcywgSEFELCBldGMgcG9zc2liaWxpdHMgZGUgcHJzZW5jZSBoZWJkb21hZGFpcmUgIGxhIGpvdXJuZSBvdSBkZW1pIGpvdXJuZTsgZGV2aXMgc3VyIGRlbWFuZGUgZW4gZm9uY3Rpb24gZHUgbm9tYnJlIGRlIHBhdGllbnRzLkxlcyBwcmVzdGF0aW9ucyBwcm9wb3NlcywgYXlhbnQgY29tbWUgaW50ZW50aW9uIGV0IGZpbmFsaXQgbGUgYmllbiB0cmUgZGUgbGEgcGVyc29ubmU7IHByYXRpcXVlcyBlbiBkZWhvcnMgZGUgdG91dCBkaWFnbm9zdGljLCBlbGxlcyBuZSBzJ2FwcGFyZW50ZW50IGVuIHJpZW4sIG5pIGRhbnMgbGVzIGNvbnRlbnVzLCBuaSBkYW5zIGxlcyBvYmplY3RpZnMsICBsYSBwcmF0aXF1ZSBkZXMga2luc2l0aHJhcGV1dGVzIHJkdWNhdGV1cnMsIGFpbnNpIHF1JyB0b3V0ZSBwcmF0aXF1ZSBtZGljYWxlIG91IHBhcmFtZGljYWxlLiAKVGhlIFdvbWVuIEhlYWx0aCBJbml0aWF0aXZlIGZvdW5kIHRoYXQgd29tZW4gdGFraW5nIDQwMCBJVSBvZiB2aXRhbWluIEQzIChwbHVzIGNhbGNpdW0pIHZlcnN1cyBwbGFjZWJvIGRpZCBub3QgaGF2ZSBhIGxvd2VyIHJpc2sgb2YgYnJlYXN0IGNhbmNlci5bMTJdIE1hbnkgY3JpdGljcyBoYXZlIGFyZ3VlZCB0aGF0IHRoaXMgZG9zYWdlIG9mIHZpdGFtaW4gRCBpcyB0b28gbG93IHRvIHByZXZlbnQgY2FuY2VyLiAKQnV0IG1vc3QgR2VuZXNlZSBDb3VudHkgY2hhcml0eSBwb2tlciByb29tcyB3ZXJlIG9wZW4gYWxsIHdlZWsgYXMgbm8gcmVzdHJpY3Rpb24gd2FzIGluIHBsYWNlIGxpbWl0aW5nIGdhbWluZyBkYXlzIG9yIHRoZSBudW1iZXIgb2YgY2hhcml0aWVzIGVhY2ggZGF5LgpUaGlzIDEyIHllYXIgb2xkIGJhc3RhcmQgaXMgdGhlIGJlc3QgJDEwIEkndmUgZXZlciBzcGVudC4gCk9uY2UgdGhleSBoYXZlIGEgbWluaW11bSBvZiA3NTAgaG91cnMgb2YgY291cnNlIHdvcmsgYW5kIDI1MCBob3VycyBvZiB3b3JrIGV4cGVyaWVuY2UsIHRoZXkgY2FuIHRha2UgdGhlIGNlcnRpZmljYXRpb24gZXhhbSB0aHJvdWdoIHRoZSBOYXRpb25hbCBDZXJ0aWZpY2F0aW9uIEJvYXJkIGZvciBUaGVyYXBldXRpYyBNYXNzYWdlIEJvZHl3b3JrLiAKU28gSSBkb24ndCBrbm93IHdoYXQgeW91ciBob21lIHNpdHVhdGlvbiBpcyBidXQgZG8geW91IGhhdmUgYSBwYXJ0bmVyIHdobyBjYW4gaGVscCB3aXRoIGhvdXNld29yayBpZiB5b3UgYXJlIHNob3VsZGVyaW5nIHRvbyBtdWNoPyBQZXJoYXBzIHllIGNvdWxkIG1ha2Ugb3V0IGEgY29va2luZyBjbGVhbmluZyByb3RhIHRvIHRha2Ugc3RyZXNzIG9mZj8gV2l0aCByZWdhcmRzIHlvdXIgbW90aGVyIGV4cGxhaW4gdG8gaGVyIHRoYXQgeW91IGFyZSB1bmRlciBwcmVzc3VyZSB0cnlpbmcgdG8gZmlndXJlIG91dCBhIHdvcmsgbGlmZSBiYWxhbmNlIGFuZCB5b3UgYXJlbid0IHJlYWxseSBhYmxlIHRvIHZpc2l0IGZvciB0aGUgbmV4dCBmZXcgbW9udGhzIHVudGlsIHlvdSBhcmUgaW4gYSBjb21mb3J0YWJsZSBwbGFjZSB5b3Vyc2VsZiwgaG9wZWZ1bGx5IHlvdXIgbW90aGVyIHdpbGwgdW5kZXJzdGFuZCBhbmQgaWYgc2hlIGRvZXNuJ3QgeW91IGhhdmUgdG8gcmVtZW1iZXIgdGhlcmUgaXMgbm8gcG9pbnQgdmlzaXRpbmcgaWYgeW91IGFyZW4ndCBvay4gCkFyb21hdGhlcmFweSBpcyBjb21tb25seSB1c2VkIHRvIGFsbGV2aWF0ZSBzdHJlc3MsIGJ1dCBpdCdzIGFsc28gdXNlZnVsIGluIHRyZWF0aW5nIHNsZWVwIGRpc29yZGVycy4gQXJvbWF0aGVyYXB5IGlzIHRoZSB0aGVyYXBldXRpYyB1c2Ugb2YgZXNzZW50aWFsIG9pbHMgdG8gY29tZm9ydCBhbmQgaGVhbCwgYW5kIGl0IGlzIG9uZSBvZiB0aGUgZmFzdGVzdCBncm93aW5nIGNvbXBsZW1lbnRhcnkgdGhlcmFwaWVzIGluIHRoZSBXZXN0ZXJuIHdvcmxkLiBJbiBhcm9tYXRoZXJhcHksIHRoZSBlc3NlbnRpYWwgb2lscyBhcmUgdXNlZCB0b3BpY2FsbHkgcmF0aGVyIHRoYW4gdGFrZW4gaW50ZXJuYWxseS4gVGhlIGVzc2VudGlhbCBvaWxzIGFyZSBzYWlkIHRvIHN0aW11bGF0ZSBhbiBhcmVhIG9mIHRoZSBicmFpbiwga25vd24gYXMgdGhlIGxpbWJpYyBzeXN0ZW0sIHRoYXQgY29udHJvbHMgbW9vZCBhbmQgZW1vdGlvbi4gU29saWQgc2NpZW50aWZpYyBiYWNraW5nIGZvciBhcm9tYXRoZXJhcHkgaXMgbGFja2luZywgYnV0IHRoZXJlJ3Mgbm8gZG91YnQgdGhhdCBtYW55IHBlb3BsZSBmaW5kIGl0IGEgc29vdGhpbmcgY29tcGxlbWVudCB0byBvdGhlciBzZWxmIGhlbHAgbWVhc3VyZXMgdG8gZWFzZSB0ZW5zaW9uLCBwcm9tb3RlIHJlbGF4YXRpb24sIGFuZCBhaWQgaW4gc2xlZXAgYXMgcGFydCBvZiB0aGVpciBiZWR0aW1lIHByZXBhcmF0aW9ucy4gU28geW91IG1heSB3YW50IHRvIGdpdmUgaXQgYSB0cnkuCkRpc25leSBzcGVudCAkMjAwIG1pbGxpb24gdG8gbWFrZSB0aGUgZmlsbSBhbmQgJDE1MCBtaWxsaW9uIG1hcmtldGluZyBpdCBvdmVyIHRoZSBuaW5lIG1vbnRocyBiZWZvcmUgaXRzIGRlYnV0LCBzbyBleHBlY3RhdGlvbnMgd2VyZSBoaWdoLiAKWW91ciBib2R5IGlzIGFjaHkgYW5kIG5lZWRzIHRvIGZlZWwgYmV0dGVyLiAKRmluYW5jaWFsIGFzc2lzdGFuY2UgaXMgYXZhaWxhYmxlIGluIGNhbGlmb3JuaWEgZm9yIGFueW9uZSB3aG8gd2FudHMgdG8gdGFrZSBQckVQIHdoaWNoIGlzIHdoeSBpdHMgdXNlIGlzIG11Y2ggbW9yZSB3aWRlc3ByZWFkIGhlcmUuIEluIHRoZSBzb3V0aGVybiBjb25zZXJ2YXRpdmUgc3RhdGVzIHRoZXJlIGlzIG5vIHN1Y2ggYXNzaXN0YW5jZSB3aGljaCBpcyBhbm90aGVyIHByb2JsZW0KRG9lcyBCb3N0b24gbmVlZCB0byByZXBsYWNlIGl0cyBjaXR5IGZsYWcKIkhlIGlzIGEgcGhpbGFudGhyb3Bpc3Qgd2hvIGVuam95ZWQgaGVscGluZyBzb2NpZXR5ICBbYnV0XSBub3cgdGhlIGdvdmVybm1lbnQgaGFzIHRha2VuIGF3YXkgZXZlcnl0aGluZyBhbmQgZGVzdHJveWVkIGhpcyBmYW1pbHkncyBsaXZlcyBjb21wbGV0ZWx5LCIgQWJkdXNhdHRhciBBYmR1cnVzdWwgc2FpZC4KRWl0aGVyIG9uZSBtYXkgaGVscCB0byBzb21lIGV4dGVudCB0byBtYWtlIHlvdXIgaG9yc2UgbW9yZSBjb21mb3J0YWJsZSBhbmQgc2VsZiBiYWxhbmNlZCwgYnV0IHlvdSByZWFsbHkgc2VlIHRoZSBiZXN0LCBtb3N0IGV4dHJlbWUgcmVzdWx0cyBpZiB5b3UgdXNlIGJvdGggdG9nZXRoZXIgYW5kIHVzZSB0aGVtIGNvbnNpc3RlbnRseS4gSWYgeW91IGNvbWUgdXAgd2l0aCBhIG1haW50ZW5hbmNlIHJvdXRpbmUsIHRoZSB0aGVyYXBpZXMgY2FuIGhlbHAgcHJldmVudCBpbmp1cmllcyBsaWtlIG11c2NsZSB0ZWFycywgcHVsbHMsIHN0cmVzc2VkIHRlbmRvbnMsIGFuZCBtdWNoIG1vcmUuIDopRWRpdDogVGhlIHR5cGljYWwgbWFpbnRlbmFuY2Ugc2NoZWR1bGUgSSBzdWdnZXN0IHRvIGNsaWVudHMgaXMgb25jZSBldmVyeSA0IDggd2Vla3MgdG8gZ2V0IGEgbWFzc2FnZSBhbmQgYW4gYWRqdXN0bWVudCBmb3IgaG9yc2VzIGluIGF2ZXJhZ2Ugd29yaywgYW5kIG9uY2UgZXZlcnkgMSAzIHdlZWtzIGZvciBhIGhpZ2ggcGVyZm9ybWFuY2UgaG9yc2UuKElmIHlvdSBob3JzZSBoYXMgbG90cyBvZiBzcGFzbXMgb3IgYWxpZ25tZW50IGlzc3VlcywgdGhlIHRoZXJhcGlzdCBvciBjaGlybyBtYXkgc3VnZ2VzdCBhIG1vcmUgZnJlcXVlbnQgc2NoZWR1bGUgdW50aWwgdGhlIGlzc3VlcyBoYXZlIGJlZW4gcmVzb2x2ZWQuKSBBIGxvdCBvZiBtYXNzYWdlIHRoZXJhcGlzdHMgYW5kIGNoaXJvcHJhY3RvcnMgaW4gbXkgYXJlYSBoYXZlIGEgcmV0dXJuIGNsaWVudCBmZWUsIHNvIGlmIHlvdSBnZXQgb24gYSByZWd1bGFyIHNjaGVkdWxlIHRoZXkgZ2l2ZSB5b3UgYSBwcmV0dHkgZ29vZCBkaXNjb3VudCB2ZXJzZXMgcGF5aW5nIHRoZSBub3JtYWwgZmVlIGFuZCB1c2luZyB0aGVpciBzZXJ2aWNlcyBtYXliZSBvbmNlIGV2ZXJ5IDMgNCBtb250aHMuIApDcnVtIHJlY2VudGx5LiAKSSBub3RpY2UgaG93IG11Y2ggYmV0dGVyIHBlb3BsZSBzZWVtIHRvIHRyZWF0IG1lIHRoYW4gdGhleSB0cmVhdCBvdGhlciBpbW1pZ3JhbnRzIGZyb20gSW5kaWEsIENoaW5hLCBUdXJrZXksIGVjdC4gQW5kIGl0IG1ha2VzIG1lIGZlZWwgcmVhbGx5IHNoaXR0eS4gClRoZSAxMTAgcm9vbSBIb2xpZGF5IElubiBFeHByZXNzIFJpbyBCcmFuY28gaXMgb3duZWQgYnkgSW50ZXIgT2NlYW5pY2EgSG90ZWxhcmlhIEx0ZGEgdW5kZXIgYSBsaWNlbnNlIGFncmVlbWVudCB3aXRoIGEgY29tcGFueSBpbiB0aGUgSW50ZXJDb250aW5lbnRhbCBIb3RlbHMgR3JvdXAuIFRoZSBob3RlbCB3aWxsIGJlIHN1aXRhYmx5IGxvY2F0ZWQgaW4gdGhlIGNlbnRlciBvZiBSaW8gQnJhbmNvJ3MgZG93bnRvd24gYXJlYSB3aXRoaW4gY2xvc2UgZGlzdGFuY2UgdG8gbXVsdGlwbGUgdG91cmlzdCBhdHRyYWN0aW9ucy4gVGhlIG5pbmUgc3RvcnkgaG90ZWwgd2lsbCBib2FzdCBmb3VyIG1lZXRpbmcgcm9vbXMsIGFuIG91dGRvb3IgcG9vbCwgYmFyLCBhIGZ1bGx5IGVxdWlwcGVkIGJ1c2luZXNzIGNlbnRlciBhbmQgZ3ltLi4gCkFib3V0IHRlbiB5ZWFycyBhZ28gSSBoYWQgYSBtZWFuIG9sZCBNYWluZSBDb29uL1NpYmVyaWFuIGV4IHN0cmF5IGFuZCBteSBnaXJsZnJpZW5kIG9mZmVyZWQgdG8gdGFrZSBoaW0gaW4gd2hlbiBteSBsYW5kbG9yZCByZWZ1c2VkIHRvIGxldCBtZSBoYXZlIGhpbS4gCldoaWxlIHRoZXJlIG1heSBiZSBleHBsYW5hdGlvbnMgZm9yIEQzJ3Mgc3VwZXJpb3JpdHkgb3RoZXIgdGhhbiBpbXByb3ZlZCBlZmZpY2FjeSwgZm9yIHRoZSB0aW1lIGJlaW5nLCB0aGVzZSBwYXBlcnMgc2VuZCBkb2N0b3JzIGEgbWVzc2FnZTogdXNlIEQzLCBub3QgRDIuCk51biBoYWJlIGljaCBiZWkgZGVyIFN1Y2hlIHp1IEFESFMgdW5kIFBva2VyIChtZWluZW0gZGVyemVpdGlnZW4gSHlwZXJmb2t1cykgZGVuIFByb2ZpIE1pa2UgTWF0dXNvdyBnZWZ1bmRlbi4gRGVyIGltbWVyaGluIHNpY2ggYWxzIEFESEQsIEJpcG9sYXIgdW5kIFN1Y2h0a3Jhbmsgb3V0ZXRlIHVuZCBlaW4gQnVjaCBkYXJiZXIgZ2VzY2hyaWViZW4gaGF0LiBNYXR1c293IE1vdXRoIGlzdCBlaW5lciBkZXIgYmVzdGVuIFBva2VyIFNwaWVsZXIgZGVyIFdlbHQgZ2V3ZXNlbiwgd2FzIHNpY2ggZWluZXJzZWl0cyBpbiBzZWluZW0gUHJlaXNnZWxkIGJ6dy4gCkkgZGlkIHRha2UgYSB5b2dhIGFuZCBhY3VwdW5jdHVyZSBjbGFzcyB3aXRoIHRoZSBOb21hZGljIFlvZ2lzIGF0IEVsZXZhdGVkIFlvZ2EgU3R1ZGlvIGluIExvbmdtb250LCBhIGNsYXNzIHRoYXQgaGFzIGNvbm5lY3Rpb25zIHdpdGggdGhpcyBvbmUsIGFsdGhvdWdoIHRoZSBleHBlcmllbmNlcyB3ZXJlIHF1aXRlIGRpZmZlcmVudC4gQWRkaW5nIGluIHRoZSBhcm9tYXRoZXJhcHkgYW5kIG1hc3NhZ2UgZmVsdCBldmVuIG1vcmUgcmVsYXhpbmcsIGFuZCBpdCB3YXMgY29tZm9ydGluZyB0byBmZWVsIHRoZSBjYXJlIGFuZCBhdHRlbnRpb24gb2Ygc28gbWFueSBkaWZmZXJlbnQgcGVvcGxlIGxlYWRpbmcgdGhlIGNsYXNzLi4gCldlIHVuZGVyc3RhbmQgc29tZSBvZiB0aGUgcmVzZXJ2YXRpb25zIGFib3V0IEhpbGxhcnkgQ2xpbnRvbi4gVGhhdCBzaGUgdmlvbGF0ZWQgYXJjYW5lIGdvdmVybm1lbnQgZW1haWwgcHJvdG9jb2xzLCBhIHRlbXBlc3QgaW4gYSB0aW55IHRlYXBvdCBpZiB0aGVyZSBldmVyIHdhcyBvbmUsIGlzIG5vIHJlYXNvbiB0byB2b3RlIGFnYWluc3QgaGVyLiBCdXQgdGhlIGNoYWluIG9mIGRvbm9ycyBhbmQgZW1wbG95ZWVzIHJ1bm5pbmcgdGhyb3VnaCBnb3Zlcm5tZW50IHRvIHRoZSBDbGludG9uIGZvdW5kYXRpb24gYW5kIGJhY2sgYWdhaW4gc2hvdWxkIGNvbmNlcm4geW91ICAgYXMgaXQgcG9pbnRzIG91dCBob3cgV2FzaGluZ3Rvbiwgb24gYm90aCBzaWRlcyBvZiB0aGUgYWlzbGUsIGlzIHJvdHRlbiB3aXRoIHRoZSB3aGlmZiBvZiBtb25leSBhbmQgaW5mbHVlbmNlIHBlZGRsaW5nLgpJdCBhbHNvIHByb21vdGVzIGJsb29kIGZsb3csIHdoaWNoIGNhbiBoZWxwIGhlYWxpbmcgYW5kIGluZmxhbW1hdGlvbi4gQW5kIGl0IGRlZmluaXRlbHkgZWFzaWVyIG9uIHlvdSB0aGFuIHRoZSBzdGFuZGFyZCBtdXNjbGUgcmVsYXhlcnMgZG9jdG9ycyBsaWtlIHRvIGhhbmQgb3V0LiAKTXkgbGlmZSBoYXMgY2hhbmdlZCBjb21wbGV0ZWx5LiAKVGhlIHdlYXRoZXIgaXMgc2hpdCwgZm9yIGFub3RoZXIgKGNvbGQgYW5kIHdldCkuIApGb3IgZXhhY3RseSBvbmUgeWVhciBvZiBteSBsaWZlLCBJIHdhcyBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIuIFRoYXQgaXMsIHBva2VyIHdhcyBteSBzb2xlIHNvdXJjZSBvZiBpbmNvbWUgKG5vdCB0byBtZW50aW9uIG15IG1haW4gc291cmNlIG9mIGFubm95YW5jZSBhbmQgZnJ1c3RyYXRpb24sIHdpdGggYSBoZWFwaW5nIHNpZGUgb2YgYW54aWV0eSkuIER1cmluZyB0aGF0IHllYXIsIEkgcmVhbGl6ZWQgdGhhdCB0aGUgd2F5IHRoZSBwcm9mZXNzaW9uIGlzIHBvcnRyYXllZCBpbiBhbGwgdGhlIHBva2VyIHNob3dzIG9uIFRWIGlzIGEgc3RlYW1pbmcgY3JvY2sgcG90IG9mIGJ1bGxzaGl0LiBFdmVuIHRoZSBKYW1lcyBCb25kIG1vdmllcyBzdGVlcmVkIG1lIHdyb25nLiBXaGVyZSBhcmUgdGhlIHR1eGVkb3M/CktvbGthdGFUaGUgV2VzdCBCZW5nYWwgUHJpemUgQ29tcGV0aXRpb24gYW5kIEdhbWJsaW5nIEFjdCwgMTk1Nywgd2hpY2ggcHJvaGliaXRzIGFsbW9zdCBhbGwgZm9ybXMgb2YgZ2FtYmxpbmcgYW5kIGJldHRpbmcsIGV4ZW1wdHMgY2FyZCBnYW1lcyBzdWNoIGFzIFBva2VyLCBCcmlkZ2UsIFJ1bW15IGFuZCBOYXAuIEJ1dCB3aGlsZSBCYW5nYWxvcmUsIHdoZXJlIFBva2VyIHdhcyBsZWdhbGlzZWQgb25seSBpbiAyMDExLCBoYXMgcGxlbnR5IHBva2VyIHJvb21zLCBLb2xrYXRhIGhhcyBvbmx5IG9uZSB0aGF0IGlzIHdlbGwga25vd24gUG9rZXIgUm9vbS4gT3BlbiBmcm9tIDEycG0gdG8gOXBtLCBpdCBoYXMgZml2ZSB0YWJsZXM7IHBsYXllcnMgY2FuIHdhbGsgaW4sIGhpcmUgdGFibGVzIGFuZCBwbGF5IGFtb25nc3QgdGhlbXNlbHZlcy4gRm9vZCBhbmQgYmV2ZXJhZ2VzIGFyZSBzZXJ2ZWQgY29tcGxpbWVudGFyeS4gSVBBIHBsYW5zIHRvIHN0YXJ0IGEgcG9rZXIgcm9vbSBpbiBLb2xrYXRhIGluIGEgZmV3IG1vbnRocy4KSFUgYmVrb21tZSBpY2ggaW4gZGVyIGVyc3RlbiBIYW5kIEFKcyB1bmQgcHVzaGUuIApCZWF0IHRoZSBlZ2cgd2l0aCBhIHdpcmUgd2hpc2suIApJdCBsaWtlIGFuIHVuaXF1ZSBoZWFkbW92aWUuIAoyIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCk1hcmNoIGlzIGdvaW5nIHRvIGJlIGEgaHVnZSBtb250aCBmb3IgdGhlIHdvcmxkIGVjb25vbXkKSHlzdGVyaWNhbCBhbmQgaW50ZWxsZWN0dWFsLCB0aG9zZSBib3JuIHdpdGggdGhlaXIgc3VuIGluIEdlbWluaSBhcmUgbmF0dXJhbCBjb252ZXJzYXRpb25hbGlzdHMgYW5kIGluY3JlZGlibGUgc3Rvcnl0ZWxsZXJzLiAKVGhpcyBpcyBub3QgdGhlIHBsYWNlIGZvciBoZWF0ZWQgY29uc29sZSBkZWJhdGVzLi4gCkkgcmVhbGx5IGRvbiB3YW50IGEgbWFuIHJpZ2h0IG5vdy4gClNwYWNlIHN0YXRpb24gYXN0cm9uYXV0cyBoYXZlIGJlZW4gc3R1Y2sgcmlkaW5nIFJ1c3NpYW4gcm9ja2V0cyBzaW5jZSBOQVNBJ3Mgc2h1dHRsZXMgcmV0aXJlZCBpbiAyMDExLiBOQVNBIGlzIGNvdW50aW5nIG9uIFNwYWNlWCBhbmQgQm9laW5nIHRvIHN0YXJ0IGxhdW5jaGluZyBhc3Ryb25hdXRzIHRoaXMgeWVhci4gU3BhY2VYICAgd2hpY2ggaGFzIGJlZW4gZGVsaXZlcmluZyBzdGF0aW9uIGNhcmdvIGZvciB5ZWFycyAgIGlzIHNob290aW5nIGZvciBzdW1tZXIuCjI5MSAzMTZCYWNrZ3JvdW5kOiBUaGUgY29nbml0aXZlIHNraWxscyByZXF1aXJlZCBkdXJpbmcgc3BvcnQgYXJlIGhpZ2hseSBkZW1hbmRpbmc7IGFjY3VyYXRlIGRlY2lzaW9ucyBiYXNlZCBvbiB0aGUgcHJvY2Vzc2luZyBvZiBkeW5hbWljIGVudmlyb25tZW50cyBhcmUgbWFkZSBpbiBhIGZyYWN0aW9uIG9mIGEgc2Vjb25kIChXYWxzaCwgMjAxNCkuIE9wdGltYWwgZGVjaXNpb24gbWFraW5nIGFiaWxpdGllcyBhcmUgY3J1Y2lhbCBmb3Igc3VjY2VzcyBpbiBzcG9ydGluZyBjb21wZXRpdGlvbiAoQmFyIEVsaSBldCBhbC4sIDIwMTE7IEtheWEsIDIwMTQpLiAKQmxvdyBkcnkgdXNpbmcgYSByb3VuZCBicnVzaC4gRGl2aWRlIGVhY2ggc2VjdGlvbiBvZiBoYWlyIGludG8gMiBpbmNoICg1LjFjbSkgd2lkZSBwaWVjZXMgYW5kIGJlZ2luIGJsb3dkcnlpbmcgd2l0aCBhIG1peGVkIGJyaXN0bGUgcm91bmQgYnJ1c2ggKHdoaWNoIHNtb290aHMgYW5kIHN0cmFpZ2h0ZW5zKS4KRW4gZWZmZXQsIHRvdXMgbGVzIGhpc3RvcmllbnMgYW50aXF1ZXMgdm91cyBkaXJvbnQgcXVlIG5vcyBhbmN0cmVzIHRhaWVudCBhc3NleiBmcmFuY2hlbWVudCAicGRzIiBhdSBib24gc2VucyBkdSB0ZXJtZS4uIApRdWl0ZSBmcmFua2x5LCBJIGRvbiB1bmRlcnN0YW5kIHdoYXQgeW91IG1lYW4gYnkgIm15IHJpZ2h0cyIuIApSdWFkaGFuMjMwMCB1CkFuZCB0aGlzIGlzIGJhZCBkZXNpZ24gaW4gZ2VuZXJhbC4gCk9mIGNvdXJzZSwgbGVzc29uIG51bWJlciAxIGFsc28gY2FuIGJlIGFwcGxpZWQsIHNpbmNlIHRoZSBSZXB1YmxpY2FuIG1heW9yIGFsc28gd29uIGFuIGVsZWN0aW9uIHdoZXJlClRoZSBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdGhlIE5pc3Rhd295b3UgQXNzb2NpYXRpb24gRnJpZW5kc2hpcCBDZW50cmUsIHdoZXJlIHRoZSB3YWtlIHdhcyBzZXQgdG8gdGFrZSBwbGFjZSwgc2FpZCBzaGUgaGFkIG5vIGluZm9ybWF0aW9uIG9uIHRoZSBtYXR0ZXIuCjEuIApDaHJpcyBIYW5zZW4sIERhdGVsaW5lIGNvcnJlc3BvbmRlbnQgKHdhbGtzIG91dCk6IFdlIGhhdmUgYSBsb3QgdG8gdGFsayBhYm91dC4gV2h5IGRvbid0IHlvdSBoYXZlIGEgc2VhdC4KVGhpcyBJbnRlcm5ldCBzaXRlIHByb3ZpZGVzIGluZm9ybWF0aW9uIG9mIGEgZ2VuZXJhbCBuYXR1cmUgYW5kIGlzIGRlc2lnbmVkIGZvciBlZHVjYXRpb25hbCBwdXJwb3NlcyBvbmx5LiBJZiB5b3UgaGF2ZSBhbnkgY29uY2VybnMgYWJvdXQgeW91ciBvd24gaGVhbHRoIG9yIHRoZSBoZWFsdGggb2YgeW91ciBjaGlsZCwgeW91IHNob3VsZCBhbHdheXMgY29uc3VsdCB3aXRoIGEgcGh5c2ljaWFuIG9yIG90aGVyIGhlYWx0aGNhcmUgcHJvZmVzc2lvbmFsLiBQbGVhc2UgcmV2aWV3IHRoZSBUZXJtcyBvZiBVc2UgYmVmb3JlIHVzaW5nIHRoaXMgc2l0ZS4gClRoZW4gdGhlIGxvc2VyIGdvdCBpbiBoaXMgbW9tIGNhci4gSW0gdGlyZWQgb2YgdGhpcyBzaGl0IGFuZCBvYnZpb3VzbHkganVzdCB0cnlpbmcgdG8gbGV0IGl0IGZpenpsZSBvdXQgaXNuIHdvcmtpbmcuIElzIHRoaXMgbGVnYWxseSBhIHRocmVhdD8gSWYgdGhlcmUgYW55dGhpbmcgbW9yZSB0byB0aGlzIEkgY2FuIHRocm93IGF0IGhpbSBwbGVhc2UgbGV0IG1lIGtub3cuIAogaHVncy4gCiJPaCwiIGdhc3BlZCBwb29yIEFubmUsIGFzIGlmIHNvbWUgb25lIGhhZCBkYXNoZWQgY29sZCB3YXRlciBvbiBoZXIuCkFmdGVydGhlIGFzc2V0cyB3ZXJlIHNvbGQsIG1hbnkgd2VyZSBmb3JjZWQgdG8gY2xvc2UgdGhlaXIgZG9vcnMuIiBDbHVicyBOU1cgQ0VPIEFudGhvbnkgQmFsbCBzYWlkIGhld2FzIHNhdGlzZmllZCB3aXRoIHRoZSBnb3Zlcm5tZW50J3MgcmV2aWV3IHByb2Nlc3MuLiAKVHJ5aW5nIHRvIGNvbnZpbmNlIE9QIHRoYXQgTUlMIHdhcyAianVzdCB0cnlpbmcgdG8gYmUgbmljZSIgYW1vdW50cyB0byBnYXNsaWdodGluZyBhbmQgd29uIGJlIHRvbGVyYXRlZC4uIApBIG1hbiBpcyB0YWtlbiBpbnRvIGN1c3RvZHkgZHVyaW5nIGEgcmFpZCBXZWRuZXNkYXkgb24gSW5maW5pdHkgU3BhIGF0IDEwMzMgV3lhbmRvdHRlIFN0LiBXLiwgZm9sbG93aW5nIGEgdHdvIG1vbnRoIGludmVzdGlnYXRpb24uIFdpbmRzb3IgcG9saWNlIHNheSB0aGUgaW52ZXN0aWdhdGlvbiByZXZlYWxlZCB0aGUgYnVzaW5lc3Mgd2FzICJhIGZyb250IGZvciBpbGxlZ2FsIHNleHVhbCBhY3Rpdml0eSBhbmQgbmFyY290aWNzLiJXaW5kc29yIHBvbGljZSB0YWtlIGEgbWFuIGludG8gY3VzdG9keSBkdXJpbmcgYSByYWlkIFdlZG5lc2RheSBvZiBJbmZpbml0eSBTcGEgYXQgMTAzMyBXeWFuZG90dGUgU3QuIApCdXQgYW5vdGhlciB0aGluZyB0byBjb25zaWRlciBpcyBtb2xkIGZvcm1hdGlvbiBhbmQgdGhlIGxpa2UuIEVuc3VyZSB5b3UgcHJvdmlkZSBhZGVxdWF0ZSB2ZW50aWxhdGlvbiBkdXJpbmcgdGhlIGRheSwgYW5kIGNvbnNpZGVyIHZlbnRpbmcgYXQgbmlnaHQgKGFic29sdXRlbHkgbmVjZXNzYXJ5IGluIHdhcm0gZW52aXJvbm1lbnRzKS4gTXkgbGFzdCB2YW4gd2VudCB3aXRoIG1lIHRvIHNldmVyYWwgc2tpIHJlc29ydHMsIGFuZCBJIGluc3RhbGxlZCBleHRyZW1lIGluc3VsYXRpb24gKEJyZWNrIHdhcyAxMCwwMDAgZnQsICAyMCBGIG9yIGJlbG93IGF0IG5pZ2h0LCBhbmQgdmVyeSB3aW5keSkuIApJIGRvbid0IGtub3cgZXhhY3RseSBob3cgZWZmZWN0aXZlIHRoZSBzZWxmIG9yZGVyIG9ubHkgY2FmZXMgaGF2ZSBiZWVuIGJ1dCBJJ3ZlIGhlYXJkIGZlZWRiYWNrIHRoYXQgdGhleSBhcmUgbW9yZSBlZmZpY2llbnQgY29tcGFyZWQgdG8gdGhlIG90aGVycyBidXQgc3RpbGwgZmFpcmx5IG5ldyBzbyBpdCdzIGhhcmQgdG8gZ2l2ZSBhbiBvcGluaW9uIG9uIGl0IHlldC4uIAoiV2UgdGhpbmsgb3VyIHByb2R1Y3QgaXMgbXVjaCBiZXR0ZXIgdGhhbiBhbnl0aGluZyB0aGF0IGhhcyBiZWVuIHNlZW4gaW4gdGhpcyBtYXJrZXQuIFdlIGhhdmUgdGhlIGxhcmdlc3QgdmVzc2VsIGV2ZXIsIiBCdWxsb2NrIHNhaWQuICJXZSBoYXZlIGEgMTAgeWVhciBhZ3JlZW1lbnQgd2l0aCB0aGUgZG9jayBoZXJlIGluIE1heXBvcnQuIgpUaGUgaHVtYW4gYm9keSBpcyB3ZWlyZC4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29NeSBmaXJzdCBtZWV0IEkgd2FzIHdvcm4gb3V0IGltbWVkaWF0ZWx5IGFmdGVyIGJ1dCB0d28gZGF5cyBsYXRlciBJIHdhcyBiYWNrIGluIHRoZSBneW0gdHJ5aW5nICh1bnN1Y2Nlc3NmdWxseSkgdG8gc3F1ZWV6ZSBvdXQgd2hhdCBJIHRob3VnaHQgd2VyZSBzb21lIHBvdW5kcyBJIGxlZnQgb24gdGhlIGJhci4gTXkgc2Vjb25kIG1lZXQgSSBmZWx0IGdyZWF0IGFmdGVyd2FyZCBidXQgdGhlbiBJIHdva2UgdXAgdGhlIG1vcm5pbmcgYWZ0ZXIgdW5hYmxlIHRvIGRvIGFueXRoaW5nLiAKT3RoZXJ3aXNlLCB0aGUgZHJpdmVycyBoZXJlIGFyZSB0b28gYWdncmVzc2l2ZSBhbmQgcG9zc2Vzc2l2ZSBvZiB0aGVpciByb2FkcyB0byBzaGFyZSB3aXRoIGN5Y2xpc3RzLiAKU29tZSB2ZXRlcmluYXJpYW5zIGluY29ycG9yYXRlIGFsdGVybmF0aXZlIG1lZGljaW5lIGZvciBkb2dzIGludG8gdHJhZGl0aW9uYWwgcHJhY3RpY2VzLCB3aGlsZSBvdGhlcnMgc3BlY2lhbGl6ZSBpbiB0cmVhdG1lbnRzIGxpa2UgYWN1cHVuY3R1cmUgb3IgaG9tZW9wYXRoeS4gQSB2ZXRlcmluYXJ5IGRlZ3JlZSBpcyBub3QgcmVxdWlyZWQgdG8gcHJhY3RpY2Ugc29tZSBhbHRlcm5hdGl2ZSB0aGVyYXBpZXMsIGFsdGhvdWdoIG1hbnkgc3RhdGVzIHJlcXVpcmUgdGhhdCB0aGVzZSB0aGVyYXBpZXMgYmUgYWRtaW5pc3RlcmVkIHRvIGFuaW1hbHMgd2l0aCB2ZXRlcmluYXJ5IHN1cGVydmlzaW9uLiBXaXRoIHRoZSBwcm9wZXIgdHJhaW5pbmcsIGhvd2V2ZXIsIGJvdGggdmV0ZXJpbmFyaWFucyBhbmQgbm9udmV0ZXJpbmFyaWFucyBjYW4gcGVyZm9ybSBhY3VwcmVzc3VyZSBvciBtYXNzYWdlIG9uIGEgcGV0LiBIZXJlIGFyZSBzb21lIGFsdGVybmF0aXZlIHRoZXJhcGllcyBhbmQgdGhlaXIgdXNlcy4KSGUgZGVsZXRlZCB0aGVtIHdpdGhpbiBsaWtlIGEgbWludXRlIG9mIHBvc3RpbmcgaXQsIGFuZCBJIHdhcyBqdXN0IGxpa2Ugd3RmIGlzIHdyb25nIHdpdGggdGhpcyBndXk/Pz8uIApUaGluayBJIGJlIHByZXR0eSBndWFyZGVkIGJ1dCB3aGVuIEkgc2VlIGFuIG9wcG9ydHVuaXR5IG9yIGFuIG9wZW5pbmcsIEkgZ29pbmcgYXQgaXQuIEkgZ29pbmcgdG8ga25vY2sgeW91IG91dCwgdGFrZSB5b3VyIGhhbmQuCkxvbmcgdGVybSBvcGlhdGUgdXNlIGhhcyBzaG93biB0byBpbmNyZWFzZSBwYWluIHNlbnNpdGl2aXR5IGFuZCBoeXBlcmFsZ2VzaWEuIApJdCB3YXMgb25seSBhIHllYXIgbGF0ZXIgdGhhdCBCaW5pb24gcGFydGljaXBhdGVkIGluIHRoZSBPcmFsIEhpc3RvcnkgUHJvamVjdCBhdCB0aGUgVW5pdmVyc2l0eSBvZiBOZXZhZGEgUmVubyBhbmQgZGlzY3Vzc2VkIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgd2l0aCBpbnRlcnZpZXdlciBNYXJ5IEVsbGVuIEdsYXNzLiAiVGhpcyBwb2tlciBnYW1lIGhlcmUgZ2V0cyB1cyBhIGxvdCBvZiBhdHRlbnRpb24sIiBoZSB0b2xkIEdsYXNzLiAiV2UgaGFkIHNldmVuIHBsYXllcnMgbGFzdCB5ZWFyLCBhbmQgdGhpcyB5ZWFyIHdlIGhhZCAxMy4gCkhvbGx5IE1hZGlzb24gTm93IGludHJvZHVjaW5nLCBTYW1iYSBCYXJiaWUuIApUaGUgY2xlYXIgcG9pbnQgaXMsIHlvdSBwb29yIG5hdGlvbnMgY2FuIHNwb3V0IG9mZiBhbGwgeW91IHdhbnQgLiAKSm1hbiBsYW93YWkgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpNYWtpbmcgZnJpZW5kcyB3aXRoIHlvdXJvbmxpbmUgcG9rZXJidWRkaWVzIGlzIHBvc3NpYmxlIGFuZCB5b3UgY2FuIGV2ZW4gaGF2ZSBhIGNoYXQgd2l0aCB0aGVtIHdpdGggdGhlIGNoYXQgZmVhdHVyZSBhdmFpbGFibGUuIEFsc28sIGp1c3QgYmVjYXVzZSB5b3UgY2FuJ3Qgc2VlIHlvdXIgb3Bwb25lbnRzIG9ubGluZSBtZWFuIHlvdSBjYW4gc2F5IHdoYXRldmVyIHlvdSB3YW50LiBUaGVyZSBhcmUgY2VydGFpbiBydWxlcyBvbmxpbmUgcGxheWVycyBmb2xsb3csIGFuZCB2ZXJiYWxseSBoYXJhc3NpbmcgeW91ciBvcHBvbmVudHMgaXMgZG93bnJpZ2h0IHdyb25nLiBSZXNwZWN0IHNob3VsZCBhbHNvIGJlIGdpdmVuIHRvIHRoZW0gYW5kIHBsYXlpbmcgZmFpciBzaG91bGQgYWxzbyBiZSBvYnNlcnZlZC4KTWVudGlvbmVkIHJ1bm5pbmcgdHJhY2ssIGFuZCBJIGhvbmVzdGx5IGRvbiBrbm93IGhvdyBtdWNoIGh1bmdyaWVyIGV4ZXJjaXNlIGlzIG1lYW50IHRvIG1ha2UgeW91IGJ1dCBJIGhhZCBtb3JlIHN1Y2Nlc3MgbG9zaW5nIHdlaWdodCB0aGlzIHRpbWUgYXJvdW5kIHRoYW4gYW55IHRpbWUgaW4gaGlzdG9yeSwgYW5kIEkgcGFydGlhbGx5IGNyZWRpdCBub3QgZXhlcmNpc2luZy4gSSBmaW5kIHRoYXQgd2hlbiBJIGFtIHdhdGNoaW5nIG15IGRpZXQgYW5kIEkgdHJ5IHRvIGluY2x1ZGUgZXhlcmNpc2UsIEkgYmVjb21lIGEgcmF2ZW5vdXMgYmVhc3QuIApBIHBva2VyIGdhbWJsaW5nIHJhY2tldCBoYXMgYmVlbiBidXN0ZWQgYnkgdGhlIEp1dmVuaWxlIEFpZCBQcm90ZWN0aW9uIFVuaXQgKEpBUFUpIHdpbmcgb2YgdGhlIGNyaW1lIGJyYW5jaCBvZiBNdW1iYWkgcG9saWNlLiBUaGUgc2xldXRocyBtYW5hZ2VkIHRvIGJyaW5nIHRoZSBtYXR0ZXIgdG8gbGlnaHQgYWZ0ZXIgY29uZHVjdGluZyBhIHJhaWQgaW4gSnVodSBiYXNlZCBTZWEgUHJpbmNlc3MgaG90ZWwgYW5kIHJlc2N1aW5nIDU0IGZlbWFsZSBwb2tlciBwbGF5ZXJzIHdobyBpbmR1bGdlZCBpbiBnYW1ibGluZy4KVG9kYXksIHRoZSBHcmV5aG91bmQgUmFjaW5nIEFzc29jaWF0aW9uIHNheXMsIDkwIHBlcmNlbnQgb2YgcmV0aXJlZCByYWNlcnMgYXJlIGFkb3B0ZWQuIEhvd2V2ZXIsIHRoZSBBc3NvY2lhdGlvbiBhbHNvIG1haW50YWlucyB0aGF0ICJ0aGUgYW5pbWFsIHJpZ2h0cyBtb3ZlbWVudCBoYXMgbmV2ZXIgYmVlbiBzdWNjZXNzZnVsIGluIGJhbm5pbmcgZ3JleWhvdW5kIHJhY2luZyBpbiBhIHN0YXRlIHdoZXJlIHRoZSBzcG9ydCBhY3R1YWxseSBleGlzdHMsIiBhIHN0YXRlbWVudCB0aGF0IGlzIGluY29ycmVjdC4gVGhlIHdlYnNpdGUgY291bGQgYmUgb3V0IG9mIGRhdGUsIHJhdGhlciB0aGFuIGludGVudGlvbmFsbHkgbWlzbGVhZGluZy4uIAoiVGhlbiB5b3UsIHRvbywgY2FuIGxlYXJuIHRvIGRyYXcgZmFjZXMgbGlrZSB0aGlzLiIKSSBzdXJlIEkgY291bGQga2VlcCBnb2luZywgYnV0IGFzIDMgb2YgdGhlIGZpcnN0IDQgcmFuZG9tIGhhbmRib29rcyBJIGxvb2tlZCBhdCBmcm9tIG5vbiByZXNlYXJjaCBzY2hvb2xzIGV4cGxpY2l0bHkgcmVxdWVzdCBsZXR0ZXJzIGFuZCBjb21tZW50cyBmcm9tIHN0dWRlbnRzLCBJIHRoaW5rIG15IHBvaW50IGlzIG1hZGUuIEkgaGF2ZSBubyBpZGVhIHdoeSB5b3Ugc28gYnVsbCBoZWFkZWQgYWJvdXQgdGhlIGlkZWEgdGhhdCBzb21lIGluc3RpdHV0aW9ucyBjb3VsZCBiZSBkaWZmZXJlbnQgZnJvbSB5b3Vycy4uIApXaXRoIHRoaXMgZ3Jhc3Nyb290cyBtb3ZlbWVudCB3ZSBhcmUgcHVzaGluZyBmb3IgdGhlIGxhYmVsaW5nIGxhd3MgdG8gYmUgZmluYWxpemVkLiIuIApUaGUga2l0Y2hlbiBhdCBHb2xkZW4gUGVhY29jayBvZmZlcnMgdHJhZGl0aW9uYWwgSW5kaWFuIGN1aXNpbmUgYW5kIGlzIGxlZCBieSBDaGVmIEp1c3RpbiBQYXVsLCBmcm9tIEtlcmFsYS4gCkhhdmluZyBzdWNoIG1hc3NpdmUgc29jaWFsIG1lZGlhIGZvbGxvd2luZ3MgY29tZXMgd2l0aCB0aGUgdGVycml0b3J5IG9mIGRlYWxpbmcgd2l0aCBoYXRlcnMgYW5kIHJ1ZGUgY29tbWVudHMgYm90aCBpbiB0aGUgcHVibGljIGV5ZSBhbmQgdmlydHVhbGx5LiAKRWl0aGVyIExhYm9yIHZvdGVzIGZvciB0aGUgZnVsbCBkZWFsIGFuZCBldmVyeW9uZSBnZXRzIHRoZWlyIHRheCBjdXQsIG9yIExhYm9yIHJlamVjdHMgaXQgYW5kIFNob3J0ZW4gaXMgdGhlIEdyaW5jaCBXaG8gU3RvbGUgQ2hyaXN0bWFzIEluIEp1bHkuClBhZGRvY2sgZ2FtYmxpbmcgaGFiaXRzIG1hZGUgaGltIGEgc291Z2h0IGFmdGVyIGNhc2lubyBwYXRyb24uIE92ZXIgc2V2ZXJhbCBkYXlzLCBNYW5kYWxheSBCYXkgZW1wbG95ZWVzIHJlYWRpbHkgbGV0IGhpbSB1c2UgYSBzZXJ2aWNlIGVsZXZhdG9yIHRvIHRha2Ugc3VpdGNhc2VzIHRvIHRoZSAkNTkwIHBlciBuaWdodCBzdWl0ZSBoZSBoYWQgYmVlbiBwcm92aWRlZCBmb3IgZnJlZS4gVGhlIHJvb20gaGFkIGEgY29tbWFuZGluZyB2aWV3IG9mIHRoZSBTdHJpcCBhbmQgdGhlIFJvdXRlIDkxIEhhcnZlc3QgRmVzdGl2YWwgY29uY2VydCBncm91bmRzIGFjcm9zcyB0aGUgc3RyZWV0Li4gCk5vIHJlbGlnaW91cyBvciByZWxpZ2lvbiByZWxhdGVkIHRpcHMuIFdlIGFyZSBhIHJlbGlnaW9uIGZyZWUgem9uZS4gUHJvc2VseXRpemUgZWxzZXdoZXJlLgpIZWxsLCBjYWRhdmVyIGRvZ3MgY2FuIHNtZWxsIG91dCBodW1hbiBib25lcyB1bmRlciB3YXRlciB5ZWFycyBhZnRlciB0aGV5IGVuZGVkIHVwIHRoZXJlLCBhbmQgSSBiZWxpZXZlIGl0IGhhcyBiZWVuIHNob3duIHRoYXQgZG9ncyBjYW4gZGV0ZWN0IGRpYWJldGVzIGluIGh1bWFucy4uIApZb3UgY2FuIGFsd2F5cyBnbyBiYWNrIGF0IE5ldyBZb3JrIFRpbWVzIENyb3Nzd29yZCBQdXp6bGVzIGNyb3Nzd29yZCAuIApJIHNob3VsZCBoYXZlIGJlZW4gYWJsZSB0byBmYWxsIGluIGxvdmUgd2l0aCBWYXJyaWMganVzdCBpbiBEQUkuIEkgdGhpbmsgaGlzIGJ1aWxkIG1hZGUgaGltIGRpZmZpY3VsdCB0byBoYXZlIGluIHlvdXIgcGFydHkgYW5kIHdpdGhvdXQgcGFydHkgYmFudGVyIG9yIHByZXZpb3VzIGdhbWUga25vd2xlZGdlLCBoZSB3YXMganVzdCBoYXJkIHRvIGNvbm5lY3QgdG8uIApBIEdUTyBzdHJhdGVneSBpbiBhIDQgbWF4IHRvdXJuYW1lbnQgd2lsbCBsb29rIGEgbG90IGRpZmZlcmVudCB0byBhIDltYXggY2FzaCBnYW1lIEdUTyBzdHJhdGVneS4uIApBTEFBJ0RBIE9DVUtMQVJBIFpFTCBFTEVOQ0UgREVWQU0gRURZT1JBbGlhYSBCZWxlZGl5ZXNpJ25pbiBrbHRyIHNhbmF0IGV0a2lubGlrbGVyaSBrYXBzYW1uZGEgb2N1a2xhcmEgemVsIG9sYXJhayBoYXpybGFkICdvY3VrbGFyIGluIFRpeWF0cm8gUGF6YXInbmRhICJPcm1hbm4gR2MiIGlzaW1saSB0aXlhdHJvIG95dW51IGdzdGVyaW1lIHN1bnVsZHUuIE1hdml5bGUgeWVpbGluIGJ1bHV0dXUgQXZjIFJhbWFkYW4gb2N1ayBPeXVuIHZlIFJla3JlYXN5b24gQWxhbiduYSBrdXJ1bGFuIHN0bWFsIGdlaWNpIGdzdGVyaSBtZXJrZXppbmRlIHNhaG5lbGVuZW4gb3l1bnUgaXpsZW1layBpc3RleWVuIG1pbmlrIHRpeWF0cm9zZXZlcmxlciBhaWxlbGVyaXlsZSBiaXJsaWt0ZSBnc3RlcmkgbWVya2V6aW5lIGFrbiBldHRpLiAKV2VsbCBndWVzcywgd2hhdD8gTm90IGV2ZXJ5b25lIGlzIHRyZWF0ZWQgZXF1YWwsIGFuZCBqdXN0IGJlY2F1c2UgeW91IGNhbid0IHNlZSB0aGF0IGRvZXNuJ3QgbWVhbiBpdCBpc24ndCBoYXBwZW5pbmcuLiAKR00ncyBwbGFudCByYXRpb25hbGl6YXRpb24gaXMgaGl0dGluZyBjb21tdW5pdGllcyBsaWtlIExvcmRzdG93biwgcHJvdWRseSB0b3V0ZWQgYXMgaG9tZSBvZiB0aGUgQ2hldnJvbGV0IENydXplIG9uIHRoZSBub3J0aCBzaWRlIG9mIHRoZSBPaGlvIFR1cm5waWtlLCBlc3BlY2lhbGx5IGhhcmQuIEFuZCBkZXNwaXRlIChQcmVzaWRlbnQgRG9uYWxkKSBUcnVtcCdzIHBsZWEgdG8gbG9jYWxzIHRvIGtlZXAgdGhlaXIgaG91c2VzIGJlY2F1c2UgdGhlIGpvYnMgImFyZSBhbGwgY29taW5nIGJhY2ssIiBwZW9wbGUgYXJlIGZpbmFsbHkgbGVhdmluZy4KSGFzIGdpdmVuIG1lIGEgdGVycmlibGUgZmVlbGluZyBJIGNhbiBzaGFrZS4gTmF1c2VhdGluZywgQVdGVUwsIGhlYXJ0IHdyZW5jaGluZyEgU29tZSBjaG9pY2Ugd29yZHMgSSByZWZyYWluIGZyb20gaGVyZS4gCk5pdGludHJhaW5pbmcgdQpFdGMuIApJbmRlZWQsIGl0J3MgcmFyZSB0byBzZWUgYW4gYWN0aW9uIGZpbG0gaW4gd2hpY2ggdGhlIHdvbWVuIGFyZSBzbyByZXNvbHV0ZWx5IGluIGNoYXJnZS4uIApBY2UgdHJpcHMgaXMgYSBoYXJkIGhhbmQgdG8gYmVhdCAgIGlmIGEgZ3V5IHdhbnRzIHRvIHRyeSBmb3IgdGhlIGd1dHNob3Qgc3RyYWlnaHQgZHJhdyB0aGVuIHlvdSBoYXZlIHRvIG1ha2UgaGltIHBheSBmb3IgdGhlIHByaXZpbGVnZS4uIApUbyBhdm9pZCB0aGlzIHNjZW5hcmlvLCBoZSBtYXJyaWVzIGEgdmlyZ2luIGV2ZXJ5IGRheSwgc2xlZXBzIHdpdGggaGVyIGF0IG5pZ2h0LCBhbmQgZXhlY3V0ZXMgaGVyIGluIHRoZSBtb3JuaW5nLCBiZWNhdXNlIGFwcGFyZW50bHkgbm9ib2R5IGhhZCBhIHByb2JsZW0gd2l0aCB0aGF0IGJhY2sgdGhlbi4uIApBIGdyZWF0ZXIgY29uY2VybiBmcm9tIG15IFBPViBpcyBIaWxsYXJ5IHRlbmRlbmN5IHRvIHNlbmQgaW4gdGhlIG1pbGl0YXJ5IGFzIHRoZSBmaXJzdCBvcHRpb24uIFNoZSB3YXMgaW4gZmF2b3Igb2YgdGhlIElyYXEgd2FyLCBhbmQgc3RheWVkIGluIGZhdm9yIG9mIHRoZSBJcmFxIHdhciB3ZWxsIGludG8gaGVyIHN0aW50IGFzIFNlY3JldGFyeSBvZiBTdGF0ZSwgbG9uZyBhZnRlciBtb3N0IG90aGVycyBoYWQgcmVhbGl6ZWQgaXQgd2FzIGEgbWlzdGFrZS4gU2hlIHB1c2hlZCB0byBkZXN0YWJpbGl6ZSBTeXJpYSwgYW5kIGxvb2sgd2hlcmUgdGhhdCBnb3QgdXMuIApNb3N0IG9mIHRoZSBwb2tlciByb29tcyBhcm91bmQgdGhlIHN0YXRlIGhhdmUgdXNlZCBhIHNpbWlsYXIgbW9kZWwuLiAKT3ZlcnZpZXcgZm9yIHdpdHR5dXNlcm5hbWU5MDIKSWYgaXQncyB5b3VyIGx1Y2sgZGF5IGFuZCB5b3UgYmV0IHRoZSB2aXJ0dWFsIGNoaXBzIHRvLCBzYXkgYSBibGFja2phY2sgZ2FtZSwgeW91IGNhbiB3aW4gJDIwMCBvciBtb3JlIHdpdGhvdXQgZXZlciBwdXR0aW5nIG91dCBhbnkgY2FzaC4uIApUaG91c2FuZHMgb2YgcG9rZXIgcGxheWVycyBhcmUgbm93IHRha2luZyBwYXJ0IGluIGRpZmZlcmVudCBzdGFrZXMgaW4gdGhlIGNhc2lub3Mgb2YgYWxsIHRoZSBtYWpvciBjaXRpZXMgaW4gdGhlIHdvcmxkLiBOb3QgYWxsIG9mIHRoZW0gYXJlIHN1Y2Nlc3NmdWwgYW5kIG1ha2luZyBtb25leSBmcm9tIHRoZSBjYXNpbm9zLiBSYXRoZXIsIG1vc3Qgb2YgdGhlbSBhcmUgdXR0ZXIgZmFpbHVyZSBpbiB0aGlzIGZpZWxkIG9mIGNhc2luby4gCkl0J2xsIHRlbGwgeW91IHdoYXQgdHlwZSBvZiBnYW1lIGl0IGlzLCB3aGF0IGVhY2ggc3BpbiBwYXlzIG91dCwgYW5kIGRldGFpbHMgb24gdGhlIGphY2twb3QuIApGb2N1cyBvbiBDb3JlIFF1YWxpdGllcyBXaGVuIHByZXBhcmluZyBmb3IgYW4gaW50ZXJ2aWV3LCBmaWd1cmUgb3V0IHdoYXQgc3RyZW5ndGhzIHlvdSBoYXZlIHRoYXQgYWxpZ24gd2VsbCB3aXRoIHRoZSBwb3NpdGlvbi4gSW4gc2VsbGluZywgY29tbXVuaWNhdGlvbiwgcHJlc2VudGF0aW9uIGFuZCBpbnRlcnBlcnNvbmFsIHNraWxscyBhcmUgbmVjZXNzYXJ5LCBmb3IgaW5zdGFuY2UuIApXaGF0IGxpZmUgc2tpbGxzIGhhcyBwbGF5aW5nIFBva2VyIHRhdWdodCB5b3UKTWFrZSBzdXJlIHlvdXIgZnJpZW5kcyBrbm93IGhvdyB0byBwbGF5IGFuZCBrbm93IGhvdyB0byByYW5rIHRoZSB0cmFkaXRpb25hbCBwb2tlciBoYW5kczogZnJvbSBoaWdoIGNhcmQgdGhyb3VnaCBwYWlycywgc3RyYWlnaHRzLCBmbHVzaGVzLCBhIGZ1bGwgaG91c2UsIGZvdXIgb2YgYSBraW5kLCBzdHJhaWdodCBmbHVzaCBhbmQgc28gb24uIFRoZXJlIGFyZSBzZXZlcmFsIHBvcHVsYXIgcG9rZXIgdmFyaWF0aW9ucywgYnV0IG5vdCBhbGwgb2YgdGhlbSBhcmUgZ3JlYXQgZml0cyBmb3Igc3RyaXAgcG9rZXIuIApJdCB0YWtlcyBhbiBhY3Qgb2Ygd2lsbCBhbmQgYSBzcGVjaWFsIGNvbnRyYWN0IHdpdGggeW91cnNlbGYgdG8gY29tYmF0IHRoZXNlIHRlbmRlbmNpZXMuIER1a2UgYWR2b2NhdGVzIHRvdWdoIHNlbGYgbG92ZSBpbiB0aGUgc2VydmljZSBvZiAidHJ1dGhzZWVraW5nLiIgTm8gd2hpbmluZyBhYm91dCBiYWQgbHVjay4gCk1hc3NhZ2UgYXQgYSBjbGluaWMsIGFuZCBoYXZlIHlvdXIgYmFja3lhcmQgeXVydCBmb3IgbWVkaXRhdGlvbiBsZXNzb25zIGFuZCBkcnVtIGpvdXJuZXlzIG9yIHdoYXRldmVyLiAKQnVpbGQgUXVhbGl0eSA6IE5vIGNvbXBsYWludHMgd2l0aCB0aGUgcXVhbGl0eSwgYXMgSSB3b3VsZCBob3BlIGZyb20gYSAkMjUwIGRvbGxhciBsb2FmZXIuIFRoZXkncmUgaGFuZCBzdGl0Y2hlZCBtb2NjYXNpbiBjb25zdHJ1Y3Rpb24gYW5kIGFsbCBvZiB0aGUgc3RpdGNoaW5nIGlzIGltcGVjY2FibGUuIFRoZSBzdGFja2VkIGxlYXRoZXIgc29sZSBpcyBjb21mb3J0YWJsZSBhbmQgbGlnaHQsIGJ1dCBoYXMgd29ybiBkb3duIHByZXR0eSBxdWlja2x5IGluIHRoZSBoZWVsIGZvciBtZS4gCkxlIG1pbmV1ciBkZXZlbmFudCBtYWpldXIgb3UgbWFuY2lwIHBldXQgeSByZW5vbmNlci4gClRoaXMgZ2FtZSBpcyBiYXNlZCBhcm91bmQgb2Rkcy4gU28gaWYgeW91IGZlZWwgdGhlIG9kZHMgYXJlIHN0YWNrZWQgYWdhaW5zdCB5b3Ugb24gYSBwYXJ0aWN1bGFyIGdhbWUsIHRoYXQncyB0aGUgYmVzdCB0aW1lIHRvIGZvbGQuLiAKVGhhbmsgeW91IGZvciBydW5uaW5nIG1lIG9mZi4gSSBkaWRuJ3QgYmVsb25nIHRoZXJlLiBJIHdhcyBibGluZGVkIGJ5IHRoZSBzbyBjYWxsZWQgcHJlc3RpZ2Ugb2YgdGhlIGFnZW5jeSwgdGhlIGFjY291bnRzIGFuZCB0aGUgbW9uZXkuIEkgcXVpY2tseSBsZWFybmVkIHRoYXQgd2FzIGEgbWlzdGFrZS4gWW91IG1hZGUgbWUgdG91Z2hlci4gWW91IGxldCB5b3VyIHBlcnNvbmFsIGZlZWxpbmdzIGZvciBpbmRpdmlkdWFscyBhZmZlY3Qgd2hhdCB3b3JrIHdhcyBwcmVzZW50ZWQgdG8gdGhlIGNsaWVudC4gVW50aWwgSSB3b3JrZWQgZm9yIHlvdSwgSSBuZXZlciB0aG91Z2h0IHRoYXQgYW55b25lIHdvdWxkIGludGVudGlvbmFsbHkgaGFybSBhIGNsaWVudCdzIGJ1c2luZXNzIHRvIHNlcnZlIGhpcyBvd24gYWdlbmRhLiBJIHdhcyB3cm9uZy4KVGhlIFBhdHJpb3RzIGhhdmUgYWNjb21tb2RhdGVkIEd1ZXJyZXJvLCB3aG8gaXMgYWxzbyB0aGUgZ29kZmF0aGVyIG9mIEJyYWR5IHNvbiBCZW4sIGJ5IGRlZGljYXRpbmcgYSByb29tIGF0IEdpbGxldHRlIFN0YWRpdW0gZm9yIGhpbSB0byB0cmVhdCBwbGF5ZXJzIGF3YXkgZnJvbSB0aGUgcmVndWxhciBtZWRpY2FsIGFuZCB0cmFpbmluZyBzdGFmZnMuIFRoZXkgaGF2ZSByb3V0aW5lbHkgZ3JhbnRlZCBoaW0gc2lkZWxpbmUgY3JlZGVudGlhbHMgZm9yIGhvbWUgYW5kIHJvYWQgZ2FtZXMuIEhlIHRyYXZlbHMgb24gdGhlIHRlYW0gY2hhcnRlcmVkIGpldCwgYW5kIGVhcmxpZXIgdGhpcyB5ZWFyIGhlIHJlY2VpdmVkIGEgZGlhbW9uZCBlbmNydXN0ZWQgU3VwZXIgQm93bCByaW5nIGVuZ3JhdmVkIHdpdGggdGVhbSBvd25lciBSb2JlcnQgS3JhZnQgbW90dG8sIGFyZSBhbGwgUGF0cmlvdHMuClRyYWluZWQgc2FsZXMgcGVvcGxlIGFuZCBwZW9wbGUgd2hvIGtub3cgYSBsb3QgYWJvdXQgdGhlIHN1YmNvbnNjaW91cyBtaW5kIGFsc28gbWF5IHVzZSB0aGVzZSB0eXBlcyBvZiB3b3JkcyBpbnRlbnRpb25hbGx5LiBBcyBmYXIgYXMgd2hldGhlciBjaGFyYWN0ZXIgZGlzb3JkZXJlZCBwZW9wbGUgYXJlIGF3YXJlIG9mIHRoZSBwb3dlciBvZiB0aGVzZSB3b3JkcyBvciBub3QsIGl0IGlzIGEgZ3VhcmFudGVlIHRoYXQgdGhlc2Ugd29yZHMgYXJlIGEgbWFqb3IgcGFydCBvZiB0aGVpciB2b2NhYnVsYXJ5LiAKVW5sZXNzIHNvbWVvbmUgYXNrcyB3aHkgSSBjYW4gcGljayBsb2NrcywgdGhlbiBJIG1pZ2h0IHRlbGwgdGhlbS4gSXQncyBva2F5IHRvIGtub3cgeW91ciBvd24gY2hhcmFjdGVyIHRoZSB3YXkgeW91IGtub3cgeW91cnNlbGYuIApCcm93biBlbmNvdXJhZ2VzIHlvdSB0byBleHBsb3JlIG1hbnkgYXJlYXMuIE1ha2Ugc3VyZSB0byBkbyB0aGF0LiAKRXJpYyBTY2htaWR0ICAgR29vZ2xlRXJpYyBFbWVyc29uIFNjaG1pZHQgaXMgYW4gZW5naW5lZXIsIENoYWlybWFuL0NFTyBvZiBHb29nbGUgYW5kIGEgZm9ybWVyIG1lbWJlciBvZiB0aGUgQm9hcmQgb2YgRGlyZWN0b3JzIG9mIEFwcGxlIEluYy4gCklmIHlvdSBhcmUgdGhlIHZpY3RpbSBvZiBzdWNoIGEgbWlzdGFrZSwgY2FsbCBpdCBvdXQgaW1tZWRpYXRlbHkgYW5kIGRvIG5vdCBsZXQgdGhlIGdhbWUgcHJvY2VlZC4gSWYgeW91ciBvcHBvbmVudCBpcyB0aGUgdmljdGltLCBsZXQgeW91ciBjb25zY2llbmNlIGJlIHlvdXIgZ3VpZGU7IG1hbnkgc2VlIG5vIGV0aGljYWwgZGlsZW1tYSBpbiByZW1haW5pbmcgc2lsZW50LiBJZiB5b3UgYXJlIG5vdCBpbnZvbHZlZCBpbiB0aGUgcG90LCB5b3UgbXVzdCBqdWRnZSB0aGUgdGV4dHVyZSBvZiB0aGUgZ2FtZSB0byBkZXRlcm1pbmUgd2hldGhlciB0byBzcGVhayB1cC4gCkFuZCBzaW5jZSB5b3UgYXJlIGZhaXJseSBmaXQsIGlmIHlvdSBjYXJiIHVwIHlvdSBtYXkgbm90aWNlIGEgZGVjbGluZSBpbiB5b3VyIHdlaWdodCBsaWZ0aW5nIHBlcmZvcm1hbmNlIHRoZSBkYXkgZm9sbG93aW5nIHlvdXIgY2FyYiB1cCwganVzdCBiZWNhdXNlIHlvdSBsaWtlbHkgZGVwbGV0ZSB5b3VyIHN0b3JlZCBnbHVjb3NlIGluIHRoZSBtaWRkbGUgb2YgdGhlIGxpZnRpbmcuIFNvIHRob3NlIGRheXMgbWlnaHQgYmUgZ29vZCBkYXlzIHRvIGhhdmUgbG93ZXIgd2VpZ2h0IHdpdGggbW9yZSByZXBzLiAKRWxvbiBNdXNrIGZpcm0gcGl0Y2hlZCB0byBidWlsZCB0cmFuc2l0IHN5c3RlbSBpbiBMYXMgVmVnYXMKKFBob3RvOiBBbGlzb24gTWNDdWxsb2NoKUhhcmQgdG8gRmluZCBCb29rczogRnVuZHJhaXNlci4gCkFzayBMaW5ndWlzdGljcwpPbmx5IG9uZSBzaWRlIGxpZXMgdG8gdGhlaXIgb3duIHZvdGVycyB3aXRoIHN1Y2ggY2FsbG91cyBjeW5pY2lzbS4gCiQyMDAgaXMgdGVjaG5pY2FsbHkgMTAwYmIgZGVlcCBpbiBhIDEvMiBnYW1lLCBidXQgaXQgd2lsbCBwbGF5IGFzIGlmIHlvdSBhcmUgNDAgNTBiYiBkZWVwLiAKVHJlYXQgUG9rZXIgbGlrZSBhIHNwb3J0IGFuZCB0aGF0IGlzIHdoYXQgSSB3YW50IHlvdW5nIHBlb3BsZSB0byB1bmRlcnN0YW5kLiAKVGhleSBhcmUgdGhlIG9uZXMgd2hvIHF1aWV0bHkgYmlkZSB0aGVpciB0aW1lLCBmb2xkaW5nIG1vcmUgaGFuZHMgdGhhbiB0aGV5IHBsYXksIGJhdHRsaW5nIGl0IG91dCBpbiBhIHdhciBvZiBhdHRyaXRpb24gYWdhaW5zdCBvdGhlciBwbGF5ZXJzLCBhbmQgd2FpdGluZyB1bnRpbCB0aGUgY29tcGV0aXRpb24gZ2V0cyB3aGl0dGxlZCBhd2F5IGJlZm9yZSByZXZlYWxpbmcgdGhlaXIgbWFzdGVyIHBsYW4uLiAKVGhhdCdzIG1vc3RseSBob3cgSSBtYWRlIHNlbnNlIG9mIGl0LCBhbnl3YXkuIApBcHBhcmVudGx5IHRoZSBwZXJmZWN0IGhvdXNlIGhhcyBtb3ZlZCBmcm9tIHRoZSBtdXN0IGhhdmUgc3BhIGxpa2UgZW5zdWl0ZSB0byBhbHNvIG5lZWRpbmcgYSB0cmFuc2l0aW9uIHJvb20uIApZb3VuZ1pNICA2MTQgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KVGhlIHByaWNlIGhhcyBiZWVuIGRyb3BwaW5nIG9uIGluY3JlYXNpbmcgdm9sdW1lLiBUaGlzIHNob3dzIGFuIG92ZXJzdXBwbHkgb2Ygc3RvY2ssIG9yIGluIG90aGVyIHdvcmRzLCBtb3JlIHBlb3BsZSBhcmUgd2lsbGluZyB0byBzZWxsIHRoYW4gYnV5IGF0IGN1cnJlbnQgcHJpY2VzLiBUaGUgcHJpY2UgdHJlbmQgaXMgZG93biB1bnRpbCB0aGlzIGNoYW5nZXMuIApJbiBvdXIgY2xhc3NlcyBjYXNlIGJ5IGhlbHBpbmcgb3V0IGF0IHRoZSBmb29kIHNoZWx0ZXIuIApFZ2VyIGVnaXRpbXNpeiBraXNpbGVyIHRvcGx1bHVndSB5YW5saXMgYmlsZ2lsZXJsZSBoZXIgZGFraWthIGRhIGJpciBrYW5kaXJpbGlwLCB1bGtlbmluIGVrb25vbWlrIGR1c3VzdW5lIG5lZGVuIG9sdXAsIGh1a3VrdSB5b2sgZWRpcCB2ZSBnZW5lbCBvbGFyYWsgdWxrZW5pbiBnZWxpc21lc2luaSBlbmdlbGxpeW9yc2EgYnUgdG9wbHVsdWsga2lzaXRsaSBiaXIgZ3VjZSBzYWhpcCBvbG1hbGlkaXIuIFNlbmluIGJhaHNldHRpZ2luIHR5cmFubnkgb2YgdGhlIG1ham9yaXR5IGRlbiBiYXNrYSBiaXIgc2V5IGRlZ2lsZGlyLiBCdSBlZ2l0aW1zaXoga2lzaWxlciB0b3BsdWx1Z3Ugc2F5aXNhbCBvbGFyYWsgYnV5dWsgb2xzYSBkYSBvcnRhbGFtYSBlbiBjb2sgZ2VsaXIgaGFuZ2kga2VzaW1kZW4gZ2VsaXlvcj8gT2t1bXVzLCBzZWhpcmRlIHlhc2F5YW4gbWkgeW9rc2Ega295ZGUgdmUgdGFybGFkYSBjYWxpc2lwIHVsa2VzaW5pIGhpYyBnZXptZW1pcyBpbnNhbiBtaT8gVWxrZW5pbiBBUkdFc2luaSBvbHVzdHVyYW4sIG8gdGFybGFsYXJpIGZpbmFuc2xheWFuLCB5ZW5pIHVydW5sZXIgdGFzYXJsYXlhbiBoYW5naSBrZXNpbT9TaXJmIGRhaGEgYnV5dWsgYmlyIHBvcHVsYXJpdGV5ZSB1bGFzdGlsYXIgZGl5ZSBoYWtsaSBvbGR1a2xhcmkgbWkgYW5sYW1pbmEgZ2VsaXlvcj8gQnUgaW5zYW5sYXIgZHVueWEgZGEgb2x1cCBiaXRlbmxlcmkgdGFraXAgZWRlYmlsaXlvcmxhciBtaT8gS3VsdHVyZWwgdmUgc29zeWFsIG9sYXJhayBiaWxpbmNsaSBpbnNhbmxhciBtaT8gR2VsZWNla3RlIHJvYm90bGFyaW4gdGFtYW1lbiBlbGUgZ2VjaXJlY2VnaSB0YXJpbSBzZWt0b3J1bmRlIGthYyBraXNpIGNhbGlzaXlvcmRhIHVsa2VuaW4gZ2VsZWNlZ2luaSBiZWxpcmxpeWViaWxpeW9yP0JhbmEgZ29yZSBidSB5dXp5aWxkYSBzb3JndWxhbWF5aSBiaWxtZXllbiwgZWdpdGltaSBpbGtva3VsdSBnZWNtZXllbiBpbnNhbmxhciB0b3BsdWx1Z3UgdWxrZW5pbiBnZXJpIGthbGFuIGluc2FuaXlsYSBheW5pIHNveiBoYWtraW5hIGJ1bHVubWFtYWxpLiAKVGhpcyBsZWF2ZXMgYSBsZXZlbCBvZiBwbGF1c2libGUgZGVuaWFiaWxpdHkgZm9yIFRydW1wLi4gClRoZXkgb3BlcmF0ZSBzaW1pbGFyIHRvIGEgVGVybWlud29odW5nIGZyb20gYSBjdXN0b21lcnMgcG9pbnQgb2YgdmlldywgYnV0IGluc3RlYWQgb2Ygc2V4LCB0aGUgZ2lybHMgd2lsbCBvbmx5IGdpdmUgeW91IGEgbmFrZWQgbWFzc2FnZSAod2l0aCBzb21lIGJvZHkgb24gYm9keSBzbGlkaW5nKSBhbmQgYSBoYW5kam9iIGFzIGZpbmlzaC4gClllcyEgSXQgaXMgY3JhenkgdGhlIGFtb3VudCBvZiBkaXNyZXNwZWN0IHlvdSBjYW4gZXhwZXJpZW5jZSBpbiBhIHNjaG9vbC4gSSBkb24ndCB3YW50IHRvIGdlbmVyYWxpemUgdG8gYWxsIHRlYWNoZXJzIChiZWNhdXNlIEkgZG8ga25vdyBzb21lIGFtYXppbmcgb25lcyB0aGF0IGRlc2VydmUgc28gbXVjaCBwcmFpc2UpLCBhbmQgSSB3YW50IHRvIGVtcGhhc2l6ZSB0aGF0IEkgYW0gYWJzb2x1dGVseSBwcm8gdGVhY2hlciAodGhleSBoYXZlIHNvIG1hbnkgcmVzcG9uc2liaWxpdGllcyBhbmQgZG9uJ3QgZ2V0IHBhaWQgYSBmcmFjdGlvbiBvZiB3aGF0IHRoZXkgZGVzZXJ2ZSkuIEJ1dCBJIGxpc3RlbiB0byB0aGVzZSB0ZWFjaGVycyBzY3JlYW0gYW5kIHB1bmlzaCB0aGVpciBzdHVkZW50cyBhbGwgZGF5IGxvbmcsIGFuZCB0aGVuIHRoZXkgZ28gYW5kIGRpc3BsYXkgdGhlIHNhbWUsIGlmIG5vdCB3b3JzZSwgYmVoYXZpb3JzIHdoZW4gdGhleSBoYXZlIHRvIHNpdCB0aHJvdWdoIGEgMzAgbWludXRlIHByZXNlbnRhdGlvbi4gCkFmdGVyIGEgc3RhbmRvZmYsIGhlIHN0YXJ0ZWQgYSByaXZhbCBnYW1pbmcgbWFjaGluZSBjb21wYW55LCBBaW5zd29ydGggR2FtZSBUZWNobm9sb2d5LiBIZSByZW1haW5zIGV4ZWN1dGl2ZSBjaGFpcm1hbiBhbmQgaGFzIG5vIHBsYW5zIHRvIHJldGlyZS4uIApNYWtlIGEgcGxheWxpc3QKVGhlcmUgYXJlIG1hbnkgcHJvYmxlbXMgd2l0aCBjYXBpdGlsaXNtLCBidXQgeW91IGNhbiBoYXRlIGl0LCB5ZWxsIGFib3V0IGl0LCBnZXQgbWFkIGFib3V0LCBnbyBvbiBzb2NpYWwgbWVkaWEgYW5kIHJhbnQgYWJvdXQgaXQsIGFuZCBub2JvZHkgaXMgZ29ubmEgdGhyb3cgeW91IGluIGphaWwuIEl0IGNvbnRpbnVlcyB0byB3b3JrIHdpdGggb3Igd2l0aG91dCB5b3VyIHBhcnRpY2lwYXRpb24uIApXaGlsZSBpdCdzIHVuZGVyc3RhbmRhYmxlIHRoYXQgdGhlIG5ldHdvcmtzIGRvbid0IHdhbnQgYW55b25lIG91dHNpZGUgVFYncyB0cmFuc2FjdGlvbiB0cmlhbmdsZSB0byBoYXZlIGFjY2VzcyB0byB0aGUgQzMvQzcgZGF0YSwgdGhlIGJsb2F0ZWQgbGl2ZSAzL2xpdmUgNyBwcm9ncmFtIHJhdGluZ3MgZGlzdHJpYnV0ZWQgdG8gdGhlIHByZXNzIGFyZSB3aG9sbHkgaXJyZWxldmFudCB0byBhZHZlcnRpc2Vycy4gCkknZCByZWFsbHkgbGlrZSB0byBzZWUgR2liIG5vdCBoYXZlIGhpcyBwZXJpcGhlcmFscyBjb21wbGV0ZWx5IGJsaW5kZWQgd2hpbGUgYWNxdWlyaW5nIHRhcmdldHMuIApUcnkgdG8gY292ZXIgdGhlbSBsaWdodGx5IGJ1dCB0aGVyZSBubyByZWFzb24gdG8gY292ZXIgdGhlbSBlbnRpcmVseSB3aXRoIG1ha2V1cCBjcmF6aW5lc3MuIApUaGVyZSBtYXliZSBub3RoaW5nIG1vcmUgSSBoYXRlIGluIHRoaXMgd29ybGQgdGhhbiBzZXh1YWwgY3JpbWVzIGFnYWluc3QgY2hpbGRyZW4uIApIb3dldmVyIHdpdGggYW4gaW5hcHByb3ByaWF0ZSBhbW91bnQgb2YgYWxjb2hvbCBpbiBteSBzeXN0ZW0sIEkgd2FzIHJlbGF0aXZlbHkgdW5hZmZlY3RlZCBieSB0aGUgZmVhciBvZiBpdCBhbGwuIApJIGRlZmluaXRlbHkgd291bGQgbm90IG1pbmQgZ29pbmcgb3ZlciB0aGVyZSwgZm9yIHN1cmUuIApBcyBvZiB0aGUgbGFzdCBzaXggbW9udGhzIG9yIHNvLCB3ZSBoYXZlIHJ1biBpbnRvIGh1Z2UgZ3JvdXBzIG9mIHBlb3BsZSB3aG8gd2lsbCBmb2xsb3cgeW91IGFyb3VuZCBhbmQgZGljayBhcm91bmQgdG8gdHJ5IHRvIGdldCB5b3UgdG8gc2hvb3QgdGhlbSwgbGlrZSBwdXJwb3NlbHkganVtcGluZyBpbiBmcm9udCBvZiB5b3VyIGxpbmUgb2YgZmlyZSB0byB0dXJuIHlvdSBSb3VnZSB3aGlsZSBmaWdodGluZyBOUENzIGFuZCB0aGVuIGh1bnQgeW91IGRvd24gcmVsZW50bGVzc2x5LCBvciBnbGl0Y2hpbmcgb3V0c2lkZSBvZiB0aGUgcGxheWFibGUgYXJlYSBhbmQgcGljayBwZW9wbGUgb2ZmIGFuZCB0YXVudCBldmVyeW9uZSBiZWNhdXNlIG5vIG9uZSBjYW4gZ2V0IHRvIHRoZW0uIApJIGhvcCB1cCBvbiB0aGUgYmFjayBvZiB0aGUgamFjdXp6aSwgYW5kIGNoZWNrIG91dCB0aGUgc291cmNlIG9mIHRoZSBwcm9ibGVtLiBUaGUgd2luZG93IGlzIG9uZSBvZiB0aG9zZSB0aGF0IG9wZW5zIGF0IHRoZSB0b3AgYW5kIHRoZSBib3R0b20sIGFuZCB0aGUgdG9wIGlzIHNsaWdodGx5IG9wZW4sIGFuZCBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGF0IG9wZW5pbmcgaXMgYSBmdWNraW5nIHJlZCB3YXNwIGNpdHkuCkl0IGdpdmVzIG1lIGEgY2hhbmNlIHRvIHdvcmsgb24gZmlyaW5nIG15IGdsdXRlcy9oYW1zIGZyb20gdGhlIHN0YXJ0aW5nIHBvc2l0aW9uIHdpdGhvdXQgZmF0aWd1aW5nIG15c2VsZiB0byB0aGUgc2FtZSBkZWdyZWUgYXMgYSBmdWxsIGRlYWRsaWZ0LkNoYXJsaWVCaW5rbGV5MTMgIDc1IHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvTW9zdCBvZiBpdCBoYXMgYmVlbiBjb3ZlcmVkIGJ1dCB0aGUgZWFzaWVzdCBydW5kb3duIGlzIHRoaXMgTXVsdGlwbGUgYXR0ZW1wdHMgd2VyZSBtYWRlIHRvIHNob3cgZmF2b3JpdGlzbSB0byBhIGNlcnRhaW4gdGVhbSBCbGFuY2EncyAyMjBrZyh3aGljaCB3ZSBoYXZlIHZlcmlmaWVkIHNoZSBpbml0aWFsZWQpIHdhcyBvbiB0aGUgZmxpZ2h0IHNoZWV0IGFuZCBjb21wdXRlciBtb25pdG9ycyBmb3Igb3ZlciAzMCBtaW51dGVzIGJlZm9yZSBoZXIgYXR0ZW1wdC4gCk9uZSBuaWdodCBJcmVuZSBpbnZpdGVkIHVzIHRvIGdvIHNsZWRkaW5nLiBncm93biB1cCBpbiBNaWNoaWdhbiwgc2xlZGRpbmcgdG8gbWUgY29uc2lzdHMgb2YgYSB0ZW4gc2Vjb25kIHJpZGUgb24gYSBwbGFzdGljIHNsZWQgZG93biBhIHNtYWxsIGhpbGwgKHVzdWFsbHkgaW4gc29tZW9uZSBiYWNreWFyZCkuIGluIHRoZSBBbHBzIGlzIGEgZGlmZmVyZW50IHN0b3J5IQpNYXJjdXMgR2xvdmVyLCBnZW5lcmFsIG1hbmFnZXIgb2YgSG9yc2VzaG9lIENhc2lubyBDbGV2ZWxhbmQsIHNhaWQgaW4gYSBzdGF0ZW1lbnQsIGV4aGF1c3RpbmcgZXZlcnkgcmVhc29uYWJsZSBvcHRpb24sIEhvcnNlc2hvZSBDYXNpbm8gQ2xldmVsYW5kIGFuZCB0aGUgV1NPUCBvcmdhbml6YXRpb24gaGF2ZSBkZXRlcm1pbmVkIHRoYXQgdGhlIHByb3BlcnR5IGlzIHVuYWJsZSB0byBob3N0IHRoZSBXU09QIENpcmN1aXQgRXZlbnQgb3JpZ2luYWxseSBzY2hlZHVsZWQgZm9yIHRoaXMgc3ByaW5nLiBHbG92ZXIgY29udGludWVkLCBhYmlsaXR5IHRvIHByb3ZpZGUgYW4gb3B0aW1hbCBleHBlcmllbmNlIGZvciBvdXIgbG95YWwgcG9rZXIgZ3Vlc3RzIGFzIHdlbGwgYXMgb3VyIG5vbiBwb2tlciBjdXN0b21lcnMgd2FzIHByaW1hcnkgdG8gdGhpcyBkaWZmaWN1bHQgZGVjaXNpb24uIFdlIGFyZSBmdWxseSBjb21taXR0ZWQgdG8gZmluZGluZyBhIHdheSB0byBhY2NvbW1vZGF0ZSBhIGZ1dHVyZSBXU09QIENpcmN1aXQgc3RvcCBpbiBDbGV2ZWxhbmQuIApPbmNlIGl0IHNlZW1lZCBpbW1pbmVudCB0aGF0IHNoZSB3YXMgZ29pbmcgaG9tZSBuYWtlZCB0aGUgcmVzdCBkaWRuIGRhcmUgdHJ5IHRoZSBzYW1lIHRoaW5nLi4gCkV2ZW4gaWYgS2hhbGlmYSBpcyBvbmx5IG1ha2luZyB0aG91c2FuZHMgZnJvbSB0aGUgYXBwLCBzaGUgaXMgZG9pbmcgZmFyIGxlc3Mgd29yayB0aGFuIHNoZSBkaWQgaW4gdGhlIHBvcm4gaW5kdXN0cnkuIAoyMS4gIkluIGh1bWFucyBhcyB3ZWxsIGFzIGluIG90aGVyIGFuaW1hbHMgdGVzdGVkLCB3aGVuIHRoZXJlIGlzIGluY3JlYXNlZCBkZW1hbmQgZm9yIEFUUCwgdGhlcmUgaXMgYWxzbyBhbiBpbmNyZWFzZWQgZGVtYW5kIGFuZCB1dGlsaXphdGlvbiBvZiBtYWxhdGUuIgpXaGVuIGhvbGRpbmcgdG9wIHBhaXIgZ29vZCBraWNrZXIgdmVyc3VzIGEgc2hvcnQgc3RhY2sgZmlzaCBrZWVwIGJldHRpbmcuIApEZXNwaXRlIHRoaXMsIHRoZSBwYXBlciBzYXlzLCAiW3NddGF0ZSBjb3VydHMgdGhhdCBoYXZlIHJ1bGVkIG9uIHdoZXRoZXIgcG9rZXIgaXMgYSBnYW1lIG9mIHNraWxsIHZlcnN1cyBsdWNrIGdlbmVyYWxseSBoYXZlIGRvbmUgc28gaW4gdGhlIGFic2VuY2Ugb2YgYW55IHN0YXRpc3RpY2FsIGV2aWRlbmNlWy5dIi4gClRoZSBiaWtlIHBhdGhzIGhlcmUgYXJlIDkvMTAgdGltZXMgcGh5c2ljYWxseSBzcGxpdCBmcm9tIHRoZSByb2FkcyBmb3IgY2Fycy4gV2UgYWxzbyBoYXZlIGRlc2lnbmF0ZWQgdHJhZmZpYyBsaWdodHMgZm9yIGJpa2VzIGFuZCBhIHZlcnkgZXh0ZW5zaXZlIG5ldHdvcmsgb2YgY3ljbGUgcGF0aHMuIFRoYXRzIHdoeSBpdHMgd2F5IGxlc3MgZGFuZ2Vyb3VzIHRvIGRyaXZlIGEgYmlrZSBpbiB0aGUgTmV0aGVybGFuZHMuIApZb3VyIGxvc3Mgd2lsbCBiZSBiZWNhdXNlIHlvdSBvdmVyZXN0aW1hdGUgeW91cnNlbGYuIFNvIHdoYXQgaWYgeW91IGhhdmUgYmVlbiB3aW5uaW5nIG9uIGEgJDMvNj8gVGhhdCBkb2Vzbid0IG1lYW4geW91ciBza2lsbCB3aXRoIGJlIGF0IHBhciBvbiBhIHRhYmxlIHRoYXQgY29tcGV0ZXMgYXQgJDEwLzIwLiAKT24gdGhlIG90aGVyIHBvbGUsIFBsYXRvIHdyaXRlcyBsYXVnaGluZ2x5IGFib3V0IHRoZSBwb3J0cmF5YWwgb2YgZ29kcyBpbiB0aGVzZSBzdG9yaWVzLiBUbyBoaW0sIHRoZSB0aG91Z2h0IG9mIGdvZHMgc3RyYXBwaW5nIG9uIGFybW9yIGFuZCBlbnRlcmluZyBiYXR0bGUgd2FzIG9idmlvdXNseSBhbGxlZ29yaWNhbC4gQSBwcm9mZXNzb3IgSSB3b3JrZWQgd2l0aCBpbiB0aGUgZWFybHkgMjAwMHMsIEJvYiBTdGVpbiwgYWx3YXlzIHNhaWQgdGhhdCBhIHNvcGhpc3RpY2F0ZWQgcmVhZGVyIG9yIGxpc3RlbmVyIHdvdWxkIGhhdmUgdW5kZXJzdG9vZCB0aGVzZSB0ZXh0cyBhcyBhbGxlZ29yaWVzLiBJbiBtb2Rlcm4gY2lyY2xlcywgdGhpcyBpcyBhIHZlcnkgY29tbW9uIHJlYWRpbmcuIEJ1dCBJIGhhZCBhIHByb2Zlc3NvciwgSmVmZiBTaG91bHNvbiwgcHVzaCBiYWNrIGhhcmQgb24gc2VlaW5nIHRoZXNlIHRleHRzIG9ubHkgdGhyb3VnaCBhbiBhbGxlZ29yaWNhbCBsZW5zLiAiQW4gYWxsZWdvcmljYWwgcmVhZGluZyBpcyBvbmUgd2F5IHRvIHVuZGVyc3RhbmQgdGhlc2UgdGV4dHMsIiBoZSBzYWlkLgpUaGVyZSBhcmUgbWFueSBicmFuZHMgaW4gdGhlIG1hcmtldCB0b2RheSB0aGF0IGFyZSBmb3JtdWxhdGVkIHNwZWNpZmljYWxseSBmb3IgaGFuZCBhbmQgbmFpbCBjYXJlLiAKWW91IGxhdWRlZCB0aGUgZWNvbm9taWMgYmVuZWZpdHMgb2YgYmVpbmcgYWJsZSB0byBkZXBvcnQgcGVvcGxlIHRvIG1haW50YWluIGxvdyB3YWdlcy4gSSB3b3VsZCBpbWFnaW5lIHRob3NlIHBlb3BsZSB3b3VsZG4gdGFsayBhYm91dCBob3cgbXVjaCB0aGV5IGJlbmVmaXQuIElmIHlvdSBhcmUgb2YgdGhyIG9waW5pb24gdGhhdCBtYXJrZXRzIHNob3VsZCBoYXZlIG5vIG1vcmFsIGxpbWl0cyB0aGVuIEkgZG91YnQgdGhlcmUgaXMgYW55IHBvaW50IGluIGNvbnRpbnVpbmcgdGhpcyBkZWJhdGUuIEkgbGl2ZSBpbiBhIGNvdW50cnkgd2hpY2ggaGFzIGRlY2lkZWQgdGhhdCBpdCB3b3VsZCBwcmVmZXIgdGhhdCBjb25zdW1lciBwcm90ZWN0aW9uIGFnZW5jaWVzLCBoZWFsdGggYm9hcmRzIGFuZCB1bmlvbnMgc2hvdWxkIGFkdm9jYXRlIGFuZCBlbmZvcmNlIHByb3RlY3Rpb25zIGZyb20gbWFya2V0IGZvcmNlcyB3aWxsaW5nIHRvIG1ha2UgcHJvZml0cyBhdCB2aXJ0dWFsbHkgYW55IGNvc3QuIExhY2tpbmcgdGhlc2UgdGhpbmdzIG1vc3QgZWNvbm9taWVzIHdpbGwgc21pbGUgaW4gdGhlIGZhY2Ugb2YgOCB5ZWFyIG9sZHMgd29ya2luZyB1bmRlciBjb3R0b24gZ2lucywgb3Igc2VsbGluZyBwcm9kdWN0cyB3aXRoIGtub3duIGZhdGFsIGZsYXdzLgpBZnRlciB0YWxraW5nIGFib3V0IGl0LCBJIGZvdW5kIHRoYXQgZHVyaW5nIFBJViBzZXgsIGhlIHdhcyBmb2N1c2VkIHRvbyBoYXJkIG9uIGl0IGFuZCB3aGV0aGVyIEkgd291bGQgc28gaGUgZGlkbiB3YW50IHRvIGZpcnN0LiBIZSBwcmV0dHkgbXVjaCBwc3ljaGVkIGhpbXNlbGYgb3V0IG9mIGl0IHlldCBkdXJpbmcgYSBCSiwgaGUga25ldyBoZSBjb3VsZCAicmVsZWFzZSIgaW5kZXBlbmRlbnQgb2YgbWUgc28gaGUgd2FzIGp1c3QgZm9jdXNlZCBvbiBob3cgZ29vZCBpdCBmZWx0IGFuZCB0aGUgcGxlYXN1cmUgaGUgd2FzIHJlY2VpdmluZy4gCk1lbnRhbCBwcmVzc3VyZSBoYXMgYmVlbiBzaG93biB0byByZWR1Y2UgcGVyZm9ybWFuY2Ugb2YgZGVjaXNpb24gbWFraW5nIHRhc2tzIHdoZXJlIHJld2FyZCBhbmQgbG9zcyBjb250aW5nZW5jaWVzIGFyZSBleHBsaWNpdCwgd2l0aCBhIHNoaWZ0IHRvd2FyZCBpbmNyZWFzZWQgcmlzayB0YWtpbmcgKFBhYnN0IGV0IGFsLiwgMjAxMzsgU3RhcmNrZSBldCBhbC4sIDIwMTEpLiBUaGlzIGNoYXB0ZXIgY29uY2x1ZGVzIGEgd2lkZXIgcHJvamVjdCBleGFtaW5pbmcgZGVjaXNpb24gbWFraW5nIGFjcm9zcyBkZXZlbG9wbWVudGFsIHN0YWdlcyBpbiBlbGl0ZSBzcG9ydC4gUGVyZm9ybWFuY2UgYWNyb3NzIHRocmVlIGNhdGVnb3JpZXMgb2YgZGVjaXNpb24gbWFraW5nIHdhcyBhc3Nlc3NlZCB1bmRlciBjb25kaXRpb25zIG9mIGxvdyBhbmQgaGlnaCBtZW50YWwgcHJlc3N1cmUuIAo1KSBMaWx5OiAwMTAzIDAyMDcsIDEwMEUsIGEgUm9tYW5pYW4gbG9va2luZyBsaWtlIEVtbWEgV2F0c29uLCAxNjJjbSwgQSBjdXAsIHNsaW0uIEluIGEgcm9vbSBraXNzLCBjYXJlc3NpbmcsIDUgbWluJ3MgdGVhc2luZyBEQVRZIHdpdGggaGVyIGJpZyBPLCBtaXNzaW9uYXJ5LCBjb3cgZ2lybCwgZG9nZ2llLCBoZXIgMyBtaW4gbWFzc2FnZSBvbiBtZSBhbmQgbXkgMjAgbWluIG1hc3NhZ2Ugb24gaGVyLiAKU28gbXkgb3BpbmlvbiBpcyAgIGlmIHlvdSBsb29raW5nIHRvIHNldHRsZSBwZXJtYW5lbnRseSBhbmQgYXJlIGxvb2tpbmcgbW9yZSBhcm91bmQgc3VidXJicywgREMuIElmIHlvdSB3YW50IGEgbW9yZSBwcm9wZXIgY2l0eSBsaXZpbmcgZXhwZXJpZW5jZSwgcHJvYmFibHkgQm9zdG9uLgpIb3dldmVyIHRoZXJlIGlzIGEgZ29vZCBjaGFuY2UgeW91ciByZWxhdGlvbnNoaXAgaXMgbm90IGdvaW5nIHRvIHN1cnZpdmUgeW91IGdyb3dpbmcgdXAuIEFueSBwYXJ0bmVyIHRoYXQgZG9lc24gd2FudCB5b3UgdG8gY2hhbmdlIGF0IGFsbCB3aWxsIHN0aWZsZSB5b3VyIGdyb3d0aCBhbmQgZW5kIHVwIGJlaW5nIGEgbGlhYmlsaXR5IGluIGxpZmUuLiAKWW91IGZpbmQgc29tZW9uZSBzb21lIGRheSB3aG8gd2lsbCBwdXQgeW91ciBsaXR0bGUgZ2lybCBmaXJzdC4gU2hlIGxvdmUgeW91ciBnaXJsIGxpa2UgaGVyIG93biBhbmQgd2FudCB3aGF0IGJlc3QgZm9yIGhlci4gU2hlIG5ldmVyIG1ha2UgeW91IGZlZWwgbGlrZSBhIGplcmsgb3IgdGhyZWF0ZW4gdG8gbGVhdmUsIGp1c3QgYmVjYXVzZSB5b3VyIGRhdWdodGVyIG5lZWRzIHlvdS4gTGV0IHRoaXMgd29tYW4gZ28uIFNoZSBub3QgcmlnaHQgZm9yIHlvdXIgZmFtaWx5LgpJIGlnbm9yaW5nIG1hcmdpbmFsIHV0aWxpdHkgZm9yIHRoZSBtYXRoIGhlcmUsIGJ1dCBJIHN1cmUgeW91IGdldCB0aGUgcG9pbnQ6IGl0IHdoYXQgZ2l2ZW4sIHJhdGhlciB0aGFuIHdoYXQgbGVmdCB0aGF0IG1hdHRlcnMuLiAKVGhlIGVuZCBvZiB0aGUgeWVhciwgSSBiZSBnb2luZyB0byBNb250cmVhbCB0byBjZWxlYnJhdGUgTmV3IFllYXIgRXZlLiBIb3dldmVyLCBJIGJlIGdldHRpbmcgdGhlcmUgYSBmZXcgZGF5cyBiZWZvcmUgdGhlIHJlc3Qgb2YgbXkgZnJpZW5kcy4gSSBhbHJlYWR5IHNlZW4gTW9udHJlYWwgYW5kIHdhbnQgdG8gZ3JpbmQgYXMgbWFueSBob3VycyBzaW5jZSBJIGEgc3R1ZGVudCBhbmQgZG9uIGdldCBtdWNoIGxpdmUgdGltZSBvdGhlcndpc2UuCg==|<---