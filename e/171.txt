<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="https://image.ytn.co.kr/general/jpg/2018/0628/201806281818348414_t.jpg" property="og:image"/>
  <meta content="https://image.ytn.co.kr/general/jpg/2018/0628/201806281818348414_k.jpg" property="dable:image"/>
  <meta content="조별리그 독일전 승리의 여운이 좀처럼 가시지 않는 분들 ..." property="og:description">
   <meta content="201806281818348414" property="dable:item_id"/>
   <meta content="2018-06-28T18:18:00+09:00" property="article:published_time"/>
   <meta content="뉴스" property="article:section"/>
   <meta content="스포츠" property="article:section2"/>
   <meta content="2018-06-28T18:18:00+09:00" property="article:published_time"/>
   <meta content="https://www.ytn.co.kr/_sn/0107_201806281818348414" property="dable:url">
    <meta content="summary" name="twitter:card">
     <meta content="summary_large_image" name="twitter:card">
      <meta content="width=device-width" name="viewport">
       <meta content="b103fc9d6193ce7c65a6ad5a9fd971b64f43c1b5" name="naver-site-verification">
        <noscript>
         <h2>
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
        </noscript>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <div class="wrap" id="YTN_main_2017">
   <div class="header">
    <div class="total_bg">
     <div class="area_flex">
      <div class="logo YTN_CSA_logo">
       <h1>
        [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
       </h1>
      </div>
      <div class="YTN_CSA_login links">
       [link]
       
       <span class="links_bar">
        [ahref]<li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li>[search][link][link][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><li>[search]</li>[link]
       </span>
       [ahref]
       
       <span class="links_bar">
       </span>
       [link]
       
       <span class="links_bar">
       </span>
       <a href="/new_media/index.html" target="_blank">
        <b style="color:#1C9DE9">
         뉴미디어 리터러시
        </b>
       </a>
       <span class="links_bar">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[link]</li>
       </span>
       [link]
       
       <span class="barlast">
       </span>
       <form action="" class="clearfix" method="" style="dispaly:inline">
        <select class="select familysite" name="exp2" onchange="window.open(this.value)">
         <option value="">
          Family site
         </option>
         <option value="http://science.ytn.co.kr/">
          YTN 사이언스
         </option>
         <option value="http://radio.ytn.co.kr">
          YTN 라디오
         </option>
         <option value="http://life.ytn.co.kr">
          YTN 라이프
         </option>
         <option value="http://dmb.ytn.co.kr">
          YTN DMB
         </option>
         <option value="https://www.ytn.co.kr/ytnkorean">
          YTN 월드ㆍ코리안
         </option>
         <option value="http://www.ytnplus.co.kr">
          YTN PLUS
         </option>
         <option value=" http://www.seoultower.co.kr">
          남산서울타워
         </option>
        </select>
       </form>
      </div>
      <div class="ad_top">
       <iframe frameborder="0" name="AdtopBanner" scrolling="no" src="/inc_banner/AdServerChange.php?n=3" style="width:728px;height:100%;border:none;border-bottom:1px solid #e1e1e1;" title="상단배너">
       </iframe>
      </div>
     </div>
    </div>
    <div class="main_navi navi_clone">
     <div class="left_menu">
      <ul class="m_menu">
       <li class="menu01 m_tit YTN_CSA_nav2_2">
        [link]
        
        <ul class="sub_gnb_box" id="sub_1" style="display:none">
         <li class="sub01 YTN_CSA_nav3_1">
          <a href="/news/news_quick.html" id="n0111">
           속보
          </a>
         </li>
         <li class="sub02 YTN_CSA_nav3_2">
          [link]
          
         </li>
         <li class="sub03 YTN_CSA_nav3_3">
          [ahref]
          
         </li>
         <li class="sub04 YTN_CSA_nav3_4">
          [link]
          
         </li>
         <li class="sub05 YTN_CSA_nav3_11">
          [ahref]
          
         </li>
         <li class="sub06 YTN_CSA_nav3_12">
          [ahref]
          
         </li>
         <li class="sub07 YTN_CSA_nav3_5">
          [ahref]
          
         </li>
         <li class="sub08 YTN_CSA_nav3_7">
          [ahref]
          
         </li>
         <li class="sub09 YTN_CSA_nav3_8">
          [link]
          
         </li>
         <li class="sub12 YTN_CSA_nav3_9">
          [link]
          
         </li>
         <li class="sub13 YTN_CSA_nav3_10">
          <a href="/news/news_list_0129.html" id="n0129">
           시사캐리커쳐
          </a>
         </li>
        </ul>
       </li>
       <li class="menu02 m_tit YTN_CSA_nav2_3">
        <a href="/video/video_main.html" onmouseover="gnbSubMenu('sub_2');">
         영상콕
        </a>
        <ul class="sub_gnb_box" id="sub_2" style="display:none">
         <li>
          <a href="/program/program_list.php?s_mcd=0498" id="n0498">
           돌발영상
          </a>
         </li>
         <li>
          <a href="/program/program_list.php?s_mcd=0500" id="n0500">
           REW월화수목금
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/video/video_list.php?s_mcd=Caption" id="nCaption">
           자막뉴스
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li class="menu03 m_tit YTN_CSA_nav2_10">
        <a href="/program/program_main.html" onmouseover="gnbSubMenu('sub_3');">
         프로그램
        </a>
        <ul class="sub_gnb_box" id="sub_3" style="display:none">
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="navinews1" href="/program/program_list.php?s_mcd=0501" target="_top">
           스탠바이미
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a class="navinews1" href="/program/program_list_0465.html" target="_top">
           YTN 스페셜
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="menu04 m_tit YTN_CSA_nav2_11">
        [ahref]
        
        <ul class="sub_gnb_box" id="sub_4" style="display:none;">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/photo/photo_list_1408.html" id="photo_1408">
           음악
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/photo/photo_list_0122.html" id="photo_0122">
           패션&amp;뷰티
          </a>
         </li>
         <li>
          <a href="/photo/photo_list_gallery.html" id="photo_photo_gallery">
           포토
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="menu05 m_tit YTN_CSA_nav2_12">
        [ahref]
        
        <ul class="sub_gnb_box" id="sub_5" style="display:none">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/photo/sports_list_9903.html" id="photo_9903">
           골프
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li class="menu06 m_tit YTN_CSA_nav2_14">
        [ahref]
        
        <ul class="sub_gnb_box" id="sub_6" style="display:none">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/health_life/health_life_list_0127.html" id="n0127">
           리더스 인터뷰
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="menu07 m_tit YTN_CSA_nav2_15">
        [ahref]
        
        <ul class="sub_gnb_box" id="sub_7" style="display:none">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li class="menu08 m_tit YTN_CSA_nav2_9">
        [link]
        
        <ul class="sub_gnb_box" id="sub_8" style="display:none">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
      </ul>
     </div>
     <div class="clearfix">
     </div>
     <div class="right_menu">
      <ul class="m_menu">
       <li class="r_menu01 YTN_CSA_nav2_1">
        [ahref]
        
       </li>
       <li class="r_menu02 m_tit YTN_CSA_nav2_13">
        [ahref]
        
       </li>
       <li class="r_menu03 m_tit YTN_CSA_nav2_16">
        [link]
        
       </li>
       <li class="r_menu04 YTN_CSA_nav2_17">
        [ahref]
        
        <div class="search" id="search" style="display:none">
         <form action="/search/?" method="get" name="web_search" onsubmit="searchChk();" target="_top">
          <fieldset>
           <legend>
            통합검색
           </legend>
           <span class="InputOutline">
            [link][search][search]<li>[link]</li><li>[search]</li>[search]<li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[link]</li>
           </span>
          </fieldset>
         </form>
        </div>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="w_bar">
   </div>
   <div class="clone01" id="clone" style="display:none">
    <div class="header_clone">
     <div class="bg_clone">
      <span class="gray_bg" id="sub_bar" style="display:none">
      </span>
      <div class="area_flex">
       <div class="logo_clone YTN_CSA_logo">
        <h1>
         [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
        </h1>
       </div>
      </div>
     </div>
     <div class="navi_clone">
      <div class="left_menu">
       <ul class="m_menu">
        <li class="menu01 m_tit YTN_CSA_nav2_2">
         [ahref]
         
         <ul class="sub_gnb_box" id="sub2_1" style="display:none">
          <li class="sub01 YTN_CSA_nav3_1">
           [ahref]
           
          </li>
          <li class="sub02 YTN_CSA_nav3_2">
           [link]
           
          </li>
          <li class="sub03 YTN_CSA_nav3_3">
           [link]
           
          </li>
          <li class="sub04 YTN_CSA_nav3_4">
           [link]
           
          </li>
          <li class="sub05 YTN_CSA_nav3_11">
           [link]
           
          </li>
          <li class="sub06 YTN_CSA_nav3_12">
           [link]
           
          </li>
          <li class="sub07 YTN_CSA_nav3_5">
           [ahref]
           
          </li>
          <li class="sub08 YTN_CSA_nav3_7">
           <a href="/news/news_list_0104.html">
            국제
           </a>
          </li>
          <li class="sub09 YTN_CSA_nav3_8">
           [link]
           
          </li>
          <li class="sub12 YTN_CSA_nav3_9">
           <a href="/video/video_list_dJournalism.html">
            데이터저널리즘
           </a>
          </li>
          <li class="sub13 YTN_CSA_nav3_10">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu02 m_tit YTN_CSA_nav2_3">
         [ahref]
         
         <ul class="sub_gnb_box" id="sub2_2" style="display:none">
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/video/video_list.php?s_mcd=S0003">
            팔팔영상
           </a>
          </li>
          <li>
           <a href="/video/video_list.php?s_mcd=Caption">
            자막뉴스
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/video/video_list.php?s_mcd=nFact">
            취재N팩트
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu03 m_tit YTN_CSA_nav2_10">
         [ahref]
         
         <ul class="sub_gnb_box" id="sub2_3" style="display:none">
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a class="navinews1" href="/program/program_list_0301.html" target="_top">
            현장생중계
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a class="navinews1" href="/news/news_night_list.php" target="_top">
            뉴스나이트
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu04 m_tit YTN_CSA_nav2_11">
         [link]
         
         <ul class="sub_gnb_box" id="sub2_4" style="display:none">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/photo/photo_list_1408.html">
            음악
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/photo/photo_list_gallery.html">
            포토
           </a>
          </li>
         </ul>
        </li>
        <li class="menu05 m_tit YTN_CSA_nav2_12" onmouseover="gnbSubMenu('sub2_5');">
         [link]
         
         <ul class="sub_gnb_box" id="sub2_5" style="display:none">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/photo/sports_list_9902.html">
            축구
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/photo/sports_list_9904.html">
            농구&amp;배구
           </a>
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu06 m_tit YTN_CSA_nav2_14">
         [ahref]
         
         <ul class="sub_gnb_box" id="sub2_6" style="display:none">
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/health_life/health_life_list_011901.html">
            건강
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu07 m_tit YTN_CSA_nav2_15">
         [ahref]
         
         <ul class="sub_gnb_box" id="sub2_7" style="display:none">
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu08 m_tit YTN_CSA_nav2_9">
         [link]
         
         <ul class="sub_gnb_box" id="sub2_8" style="display:none">
          <li>
           [ahref]
           
          </li>
          <li>
           <h3>
            [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/video/video_list_jebo.html">
            제보영상
           </a>
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <div class="clearfix">
      </div>
      <div class="right_menu">
       <ul class="m_menu">
        <li class="r_menu01 YTN_CSA_nav2_1">
         [link]
         
        </li>
        <li class="r_menu02 m_tit YTN_CSA_nav2_13">
         [link]
         
        </li>
        <li class="r_menu03 m_tit YTN_CSA_nav2_16">
         [ahref]
         
        </li>
        <li class="r_menu04">
         [ahref]
         
         <div class="search" id="search2" style="display:none">
          <form action="/search/?" method="post" name="web_search" onsubmit="searchChk();" target="_top">
           <fieldset>
            <legend>
             통합검색
            </legend>
            <span class="InputOutline">
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[link]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>
            </span>
           </fieldset>
          </form>
         </div>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <div id="wrap">
    <div id="czone">
     <div id="zone1">
      <div class="articleAd_marketing">
       <div style="position:relative;float:right;z-index:10">
       </div>
       <div class="ad_pandoraTop">
        <div style="float: left; width: 320px;">
         <video height="180px" id="ad_pandoraTop_video" style="margin: 0px;" width="320px">
         </video>
         <div id="PrismDisplayBoxTop" style="width:100%; background-color: #fff; display:none;">
          <div id="prism_displayAD" style="width:100%;">
           <div id="mainPlayerTop" style="top: 0px; left: 0px; width: 100%; position: relative; height: 180px; background-color: rgb(0, 0, 0);border: 1px solid #000;">
            <div id="prismADP_top" style="position: absolute; top: 50%; width: 100%; height: 180px; margin-top: -281.5px;">
             <video autobuffer="" src="" style="display:none">
             </video>
             <span class="non_skip" style="display:none;">
             </span>
             <span class="prism_etcUI" style="display:block;width:81px;padding:5px 0 4px;background:rgba(0,0,0,0.7);font-size: 12px;line-height: 12px; color: #fff;text-align: center;position: absolute;left: 0;bottom: 0;">
              SPONSORED<li>[search]</li><li>[link]</li><li>[search]</li>[link][ahref]<li>[search]</li>
             </span>
            </div>
           </div>
          </div>
         </div>
         <div id="ytnAd" style="display: none;">
         </div>
        </div>
        <div style="float: left;">
         <iframe allowtransparency="true" frameborder="0" height="165" hspace="0" marginheight="0" marginwidth="0" scrolling="no" src="//io1.innorame.com/imp/XyP4XydDlMEq.iframe" vspace="0" width="315">
         </iframe>
        </div>
       </div>
      </div>
      <div class="article_info">
       <div class="cate">
        뉴스 홈 >
        <b>
         스포츠
        </b>
       </div>
      </div>
      <div class="article_tit">
       멕시코 '그라시아 꼬레아'...獨 '오! 슬프다'
      </div>
      <div class="article_wrap" id="newsContent">
       <div class="YTN_CSA_vodplay" id="YTN_Player" title="[동영상 재생] 멕시코 '그라시아 꼬레아'...獨 '오! 슬프다'">
        [ahref]
        
       </div>
       <p class="bt_vodinfo">
        <li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
       </p>
       <div id="ajaxSubpart">
       </div>
       <div class="articleAd_new">
        <div style="position:relative;float:right;z-index:10">
        </div>
        <div class="ad_zone3">
         <iframe allowtransparency="true" frameborder="0" height="62" marginheight="0" marginwidth="0" scrolling="no" src="//adbiz3.co.kr/ytn_wph.html" width="400">
         </iframe>
        </div>
       </div>
       <div class="extra_info" style="">
        Posted : 2018-06-28 18:18
       </div>
       <div class="article_paragraph" id="CmAdContent" itemprop="articleBody">
        <span>
         [link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]
        </span>
        <div style="overflow:hidden;width:420px;height:45px;border:1px solid #cbcccf;background-color: #fafafa;margin:20px auto 0 auto;padding:10px 30px;position:relative;">
         <div style="position:absolute;top:0;right:0;">
         </div>
         <div style="margin:0 0 20px 0;text-align:center;">
          <iframe allowtransparency="true" frameborder="0" height="45" hspace="0" marginheight="0" marginwidth="0" scrolling="no" src="//adbiz3.co.kr/ytn_wby.html" vspace="0" width="437">
          </iframe>
         </div>
        </div>
       </div>
       <div class="comment" style="margin-bottom: 40px;">
        <ul class="share_btns">
         <li class="YTN_CSA_snslink">
          [ahref]
          
         </li>
         <li class="YTN_CSA_reply">
          <div class="num" style="display: none;">
          </div>
          [link]
          
         </li>
         <li class="YTN_CSA_print">
          [link]
          
         </li>
        </ul>
        <div class="share_arti_box">
         <div class="top">
          <div class="title">
          </div>
          <div class="bt_close">
           [link]
           
          </div>
         </div>
         <div class="content">
          <dl class="YTN_CSA_snslink">
           <dt>
           </dt>
           <dd>
            [link]
            
           </dd>
           <dd>
            [link]
            
           </dd>
           <dd>
            [ahref]
            
           </dd>
          </dl>
          <dl class="url_share">
           <dt>
           </dt>
           <dd class="inp">
           </dd>
           <dd class="desc">
           </dd>
          </dl>
         </div>
        </div>
       </div>
      </div>
      <div id="ajaxGisaSubList">
      </div>
     </div>
     <div id="zone2">
     </div>
    </div>
    <iframe frameborder="0" height="100px" scrolling="no" src="../inc_banner/Ad_gisabottom2.php" style="padding-left:100px !important;" width="100%">
    </iframe>
    <br>
     <li>[search]</li>[search][link][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
    </br>
    <br>
     [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><li>[link]</li>[ahref][search][link]
    </br>
    <div id="leftWingBanner" style="position:absolute;top:200px;left:-132px;">
     <iframe allowtransparency="true" frameborder="0" height="600" hspace="0" leftmargin="0" marginheight="0" marginwidth="0" scrolling="no" title="우측윙배너" topmargin="0" vspace="0" width="120">
     </iframe>
    </div>
    <div id="rightWingBanner" style="position:absolute;top:200px;">
     <iframe allowtransparency="true" frameborder="0" height="600" hspace="0" leftmargin="0" marginheight="0" marginwidth="0" scrolling="no" title="좌측윙배너" topmargin="0" vspace="0" width="120">
     </iframe>
    </div>
   </div>
   <div class="footer YTN_CSA_footer2">
    <div class="information">
     <ul class="info_text">
      <li>
       회사소개
       <ul class="desc_info">
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li>
       광고/비즈니스
       <ul class="desc_info">
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/business/online_ad.php">
          인터넷 모바일 광고
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/business/culture_biz.php">
          문화 사업 제휴
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </li>
      <li>
       시청자센터
       <ul class="desc_info">
        <li>
         [link]
         
        </li>
        <li>
         <a href="/">
          시청자 제보
         </a>
        </li>
        <li>
         <a href="/program/program_main_0497.php">
          YTN 시민데스크
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li>
       인터넷 이용안내
       <ul class="desc_info">
        <li>
         <a href="/service/sitemap.php">
          사이트맵
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li>
       모바일 이용안내
       <ul class="desc_info">
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/sms/ytnnewssms.php">
          긴급뉴스 SMS
         </a>
        </li>
       </ul>
      </li>
      <li>
       콘텐츠판매
       <ul class="desc_info">
        <li>
         <a href="/business/program_sell.php">
          영상자료
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
      <li>
       알립니다
       <ul class="desc_info">
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/#infor" target="_blank">
          견학신청
         </a>
        </li>
        <li>
         <a href="/" target="_blank">
          성폭력 신고센터
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
     <span class="clearfix">
      <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search][link][search][search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
     </span>
     <ul class="second_line">
      <li>
       [ahref]
       
       <span class="b_bar">
        |<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
       </span>
      </li>
      <li>
       [ahref]
       
       <span class="b_bar">
        |
       </span>
      </li>
      <li>
       [ahref]
       
       <span class="b_bar">
        |
       </span>
      </li>
      <li>
       [ahref]
       
       <span class="b_bar">
        |<li>[search]</li>[search]<li>[link]</li>[ahref][search][search]
       </span>
      </li>
      <li style="margin-right:0px !important">
       [link]
       
      </li>
     </ul>
    </div>
    <span class="clearfix">
    </span>
    <div class="copyright">
     <div class="copyright_box">
      <ul class="company">
       <li>
        <b>
         ㈜와이티엔
        </b>
        서울특별시 마포구 상암산로 76(상암동)
        <span class="bar">
         |
        </span>
        대표자: 정찬형
        <span class="bar">
         |
        </span>
        대표전화: 02-398-8000
        <span class="bar">
         |<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[search]</li>[link]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li>[ahref][link][search]
        </span>
        팩스: 02-398-8129
        <span class="bar">
         |
        </span>
        사업자등록번호: 102-81-32883
       </li>
       <li>
        <b>
         ㈜와이티엔플러스
        </b>
        서울특별시 마포구 상암산로 76(상암동)
        <span class="bar">
         |<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
        </span>
        상호:YTN
        <span class="bar">
         |<li>[link]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>
        </span>
        대표전화: 02-2160-7400
        <span class="bar">
         |<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>[search]
        </span>
        등록번호:서울 자000465
        <span class="bar">
         |[ahref]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[link][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[link][ahref][ahref]<li>[search]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><li>[search]</li>
        </span>
        등록일자: 2010.05.11
        <span class="bar">
         |[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[link]</li>[link]<li>[link]</li>
        </span>
        발행일자: 1999.06.01
        <br>
         <span style="display:inline-block; padding-left:104px">
          대표자: 정찬형[ahref]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[search][ahref][ahref]
         </span>
         <span class="bar">
          |[link]<li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[link]</li>[link]
         </span>
         기사배열 책임자: 윤현숙
         <span class="bar">
          |
         </span>
         청소년보호책임자: 윤미영
        </br>
       </li>
      </ul>
      <p class="copyright_bottom">
       [ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
      </p>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0173
  </b>
 </body>
</html>