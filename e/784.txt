--->|WW91IHNob3VsZCBlbnN1cmUgdGhhdCBldmVyeXRoaW5nIGlzIHBhc3N3b3JkIHByb3RlY3RlZCB3aXRoIHBhc3N3b3JkcyB0aGF0IGNvbnNpc3Qgb2YgbGV0dGVycywgbnVtYmVycywgYW5kIHNwZWNpYWwgc3ltYm9scy4gCkZpdGJpdCBwcm92aWRlcyBhIDQ1IGRheSBndWFyYW50ZWUgYW5kIG9uZSB5ZWFyIGxpbWl0ZWQgd2FycmFudHkgZm9yIHRoaXMgZml0bmVzcyB0cmFja2VyLiBJZiB5b3UncmUgbm90IGhhcHB5IHdpdGggeW91ciBwdXJjaGFzZSwgeW91IGNhbiByZXR1cm4gaXQgYW5kIHJlcXVlc3QgYSByZWZ1bmQuIApBbiB1bmRlcmNvdmVyIGd1biBzbXVnZ2xpbmcgZGVhbCBnb25lIGJhZCBpcyB0aGUgcGVhayBvZiBPYmFtYSdzIGFkbWluaXN0cmF0aW9uICJiYWQgZGVhbCIgb3IgY29ycnVwdGlvbiAuIExpa2UgdGhhdCBldmVuIGhvbGRzIGEgY2FuZGxlIHRvIHRoZSBPYnN0cnVjdGlvbiBvZiBKdXN0aWNlLCB0aGUgMzYgaW5kaWN0bWVudHMuIApJIGludmVzdGlnYXRlZCBhIGZhdGFsIGZpcmUgaW4gdGhlIG1pZGRsZSBvZiBub3doZXJlIGluIHRoZSB3b29kcy4gClN1cmUsIHlvdSBjYW4gY3JpdGljaXplIGhpbSBmb3IgYW55dGhpbmcgeW91IHdhbnQuIEhlbGwsIEkgdGhpbmsgaGUgb25lIG9mIHRoZSBtb3N0IGRlc3RydWN0aXZlIGZvcmNlcyBpbiBhbWVyaWNhbiBwb2xpdGljcyBzaW5jZSBHaW5ncmljaC4gSSBkb24gbGlrZSBhbnkgb2YgdGhlbS4gSSBqdXN0IHRoaW5rIGNyaXRpY2l6aW5nIGhpbSBmb3IgdGhpcyBob2xkcyBtb3JlIHdlaWdodCB3aGVuIHRoZSBkZW1zIGhhdmUgdGFrZW4gY2FyZSBvZiB0aGUgdGhpbmdzIHRvIGFjdHVhbGx5IHB1dCB0aGUgcXVlc3Rpb24gdG8gaGltLiBNYWtlIGhpbSBhY3R1YWxseSBtYWtlIHRoZSBkZWNpc2lvbiB0byBraWxsIHRoZSBiaWxsLCBhbmQgY3JpdGljaXplIGhpcyBhY3Rpb24gb2Yga2lsbGluZyBhIHRoaW5nIHRoYXQgY291bGQgc3RyZW5ndGhlbiB2b3RlciByaWdodHMgYW5kIG91ciBkZW1vY3JhY3kuIEl0IHRha2VuIDIgbW9udGhzIHRvIGV2ZW4gYnJpbmcgaXQgdXAgdG8gZGViYXRlIGluIHRoZSBIb3VzZS4gYW5kIHRoZWlyIGpvYiBpc24gZG9uZSB5ZXQuCkRpZXQuIApJbiAxODkxLCBQb2tlciBBbGljZSBtb3ZlZCBoZXIgb3BlcmF0aW9ucyB0byBBcml6b25hIGRlYWxpbmcgY2FyZHMgYXQgdGhlIE1pZHdheSwgdGhlIEVsIE1vcm8sIGFuZCB0aGUgQmx1ZSBHb29zZSBpbiBDbGlmdG9uLiBUaGVuIHdoZW4gdGhlIHNpbHZlciBtaW5lcnMgZmxvY2tlZCB0byBDb2xvcmFkbydzIFNhbiBKdWFuIE1vdW50YWlucywgc2hlIHB1bGxlZCB1cCBzdGFrZXMgYW5kIGhlYWRlZCB0byBDcmVlZGUuIApJZiB5b3Ugc2hvdWxkIGJlIGludGVyZXN0ZWQgdG8gcGxheSBjYXNpbm8gcG9rZXIgaW4gdGhlIGhvbWUsIHBsYXlpbmcgaXMgcHJldHR5IGRpZmZlcmVudC4gCkFsd2F5cyBzd2VlcCB1cHdhcmRzLCBuZXZlciBkb3dud2FyZHMuLiAKRGFzIGlzdCBkaWUgS25pZ3NkaXN6aXBsaW4uIGVzIGdpYnQga2VpbmUgR3JlbnplIGZyIGVpbmVuIFJhaXNlIHVuZCBrZWluZSBBbnphaGwgdm9uIG1heC4gUmFpc2VzIHBybyBTZXR6cnVuZGUuIERhcyBrYW5uIHNlaHIgdGV1ZXIsIGFiZXIgYXVjaCBzZWhyIGx1a3JhdGl2IHdlcmRlbi4KRmlmdHkgeWVhcnMgSmVzc2ljYSBoYWQgYmVlbiBteSB3aWZlLiAKU3RpbGwgcmVhbGx5IHJvdWdoIGZvciBzdHVkZW50cyB3aG8gc3RpbGwgbmVlZCB0byBkbyBzY2hvb2wsIHdvcmsgYSBqb2IsIGFuZCBkbyBhcHByZW50aWNlc2hpcHMuIEJ1dCB5ZWFoLCBJIGhhdmUgbm8gY2x1ZSBob3cgRXVyb3BlIGhhbmRsZXMgdW5pdmVyc2l0eSwgYnV0IGl0IGNvdWxkIG1ha2Ugb3IgYnJlYWsgdXMgZm9yIGxpZmUuQnViYmxpbmdNb25rZXk6dXM6IFRoZSByZWJlbCBjaGlsZCAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgYW0gYWN0dWFsbHkgbWVtb3JpemluZyBGIHRvIEMgZmFpcmx5IHdlbGwsIEkgcmVhbGl6ZWQgdGhhdCBpbiB0aGUgc3BhbiBvZiA0IDEwQyBpcyA0MCA1MEYuIE92ZXIgdGhlIGNvdXJzZSBvZiA2QyBpcyAxMEYuIApMZWFybiBIb3cgVG8gUGxheQoyMCB5ZWFycyB0aGF0IGluc3VyYW5jZSBpcyBnb29kIGZvci4gQnV0IHdoZW4gd2UgZGlkIHRoZSBtYXRoIGZvciB3aGF0IHNvY2lhbCBzZWN1cml0eSB3aWxsIHBheSBoZXIgYW5kL29yIHN0YXRlL2dvdmVybm1lbnQgZGlzYWJpbGl0eSB3aGVuIGl0IHVwIG5leHQgeWVhciwgaXQgYSBwaXR0YW5jZSBpbiBhbnkgY2l0eS4gWWVhaCBzaGUgaGFzIG15IGRhZCB0byBzdXBwb3J0IGhlciBub3csIGJ1dCB3aGF0IGlmIGhlIGRpZXM/IE15IGJyb3RoZXIgaXMgZGV2ZWxvcG1lbnRhbGx5IGRpc2FibGVkIGFuZCBzdGlsbCBkZXBlbmRlbnQgb24gbXkgcGFyZW50cyBhcyBhbiBhZHVsdC4gCkdvZCBjb21mb3J0ZWQgdGhlbSBmcm9tIGEgc2NvcmNoaW5nIHN1biBsaWdodGVkIHRoZW0gaW4gZGFya2VzdCBuaWdodHMuIApUaGUgb25seSB0aGluZyB0aGUgaG91c2UgZ2V0cyBpcyB0aGUgbWFzc2FnZSBmZWUuIApJIHN1cHBvc2UgdGhlIGRlZmluaXRpb24gb2YgaG9tZWxlc3MgZ2V0cyBmdXp6eSB3aXRoIGNhciBhbmQgUlYgY2FtcGVycy4gU29tZSBoYXZlIG1hZGUgYSBjaG9pY2UuIApJbWFnaW5lIHN0YXJ0aW5nIGEgc3ViIGFuZCB0aGVuIHNlYXJjaGluZyBvdGhlciBzdWJzIHRvIGZpbmQgcGVvcGxlIHRvIGJhbiwgcGVvcGxlIHlvdSBjYW4gZWFzaWx5IHNlZSBoYXZlIG5ldmVyIHBhcnRpY2lwYXRlZCBpbiB5b3VyIHN1YiwgYnV0IGJlY2F1c2UgdGhleSBob2xkIGEgZGlmZmVyZW50IG9waW5pb24gdGhleSBtdXN0IGJlIGJhbm5lZCwgZXZlbiB0aG91Z2ggdGhleSBub3QgYnJva2VuIHlvdXIgcnVsZXMgYmVjYXVzZSB0aGV5IGRvbiBiZWxvbmcgdG8gb3IgZ28gdG8geW91ciBzdWIuIApCeSB0aGUgdGltZSB3dzIgZ290IGdvaW5nIGluIGFzaWEsIG5lYXJseSBhIGdlbmVyYXRpb24gaGFkIHBhc3NlZC4gTm8ga29yZWFuIGFja25vd2xlZGdlcyB0aGUgYXR0cm9jaXRpZXMgdGhleSBjYXJyaWVkIG91dCBhcyBtZW1iZXJzIG9mIHRoZSBpbXBlcmlhbCBhcm15LiAKSSB2b3RlIGZvciBwb2xpY3ksIHdob2V2ZXIgaGFzIHRoZSBjbG9zZXN0IHBvbGljeSB0byBteSB2YWx1ZXMgd2l0aCB0aGUgYmVzdCBjaGFuY2Ugb2YgZW5hY3RpbmcgdGhlbSBnZXRzIG15IHZvdGUsIHBlcmlvZC4gSSBub3QgYXNzaWduZWQgdG8gYSBwZXJzb24sIGEgcGFydHksIG9yIGFueXRoaW5nIGJleW9uZCB3aGF0IEkgdGhpbmsgaXMgYmVzdCBmb3IgQW1lcmljYS4gRGlzcXVhbGlmeWluZyBhbnkgY2FuZGlkYXRlIGZvciBhbnkgb3RoZXIgcmVhc29uIGlzIGV4YWN0bHkgd2hhdCBsb3N0IHRoZSBlbGVjdGlvbiB0byBhIFJ1c3NpYW4gcGxhbnQgaW4gMjAxNiwgYW5kIEkgYmUgZGFtbmVkIGlmIEkgbGV0IHByZXR0eSBidWxsc2hpdCBkaXZpc2lvbmFyeSB0YWN0aWNzIGxpa2Ugd2hhdCB5b3UgYWR2b2NhdGluZyBjb250aW51ZSB0byBzcHJlYWQgdW5jaGFsbGVuZ2VkLi4gCllvdSBtYXkgd2FudCB0byB1bnN1YnNjcmliZSwgYnV0IEkgYW0gcmVhbGx5IGV4Y2l0ZWQgbW92aW5nIGZvcndhcmQuLiAKRmluYWxseSwgSSByZWFkIHRoZSBsYXN0IGxpbmUgYXMgcG9zc2libGUgc2FyY2FzbT8gTGlrZSwgIk9oLCBPSywgZXZlcnl0aGluZyBpcyBncmVhdCBmb3IgeW91IGFuZCB5b3UgaGF2ZSBubyBwcm9ibGVtcy4gVGhhdCBqdXN0IGF3ZXNvbWUuIEdvb2R5IGZvciB5b3UuIiBJdCBoYXJkIHRvIHRlbGwsIGJ1dCBtYXliZSBvbmUgbGFzdCBwb2tlIGF0IHlvdXIgZ3JheSByb2NrIHRvIHNlZSBpZiB5b3Ugd2lsbCBnaXZlIGl0IHVwPyBPciB1c2luZyBzYXJjYXNtIGFzIGFuIG91dGxldCBmb3IgaGVyIGFuZ2VyIHRoYXQgc2hlIGNvdWxkbiBwcm92b2tlIHlvdT8gUmVnYXJkbGVzcywgSSB0aGluayB5b3UgYXJlIGRvaW5nIGdyZWF0ISBHcmF5IHJvY2tpbmcsIHJlbGVudGxlc3MgcG9zaXRpdml0eSwgYWN0aW5nIGNvbmZ1c2VkL2xpdGVyYWwsIGFuZCByZWZ1c2luZyB0byBhbGxvdyBteXNlbGYgdG8gYmUgcHJvdm9rZWQgaW50byBhbiBhbmdyeSByZXNwb25zZSBoYXZlIHdvcmtlZCB2ZXJ5IHdlbGwgZm9yIG1lIHdpdGggbXkgd2FpZiBtb20sIGFuZCBJIHRoaW5rIGl0IGEgZ29vZCBjb21iaW5hdGlvbi4gCiJIZSdzIG5vdCBhIHdvcmtob3JzZSwgaGUncyBhIHN0cmlrZSBhbmQgaW1wYWN0IGJvd2xlciwgYW5kIHNvbWUgb2YgdGhlIGNhcHRhaW5zIGhlJ3MgaGFkIGRvbid0IGFwcHJlY2lhdGUgdGhpcywiIHNhaWQgV2FybmUuIApNYWtpbmcgaXQgaW4gdGhpcyBnYW1lIGRlcGVuZHMgb24gc2tpbGwgd2hlcmUgeW91J2xsIGJlIHBpdHRlZCBhZ2FpbnN0IG90aGVycyBvbmxpbmUuIApBaW5zaSwgYXlhbnQgcGFydGljaXAgIHVuIHV0aWxlIGNoYWxsZW5nZSB2aWRlIHBsYWNhcmRzIHByb3BvcyBwYXIgQ2xvdGlsZGUgRHVzb3VsaWVyLCBqJ2FpIGZhaXQgcmNlbW1lbnQgbGUgcG9pbnQgZGUgY2UgcXVpIGZpZ3VyYWl0IGRhbnMgbGVzIG1pZW5zIDogcmllbiBkZSB0cnMgZXhjZXNzaWYsIGludXRpbGUgb3UgcHJpbSBtYWlzIHF1YW5kIG1tZSBkZXMgZmFyaW5lcyAgbmUgcGFzIHRyb3AgZmFpcmUgdGFyZGVyLiBDZWxhIG0nYSBkb25uIGxlIGNvdXAgZGUgcG91Y2UgcG91ciBhY2NscmVyIGxldXIgdXRpbGlzYXRpb24uIApNaWdodCB0YWtlIDk5IHBvaW50cyB0aGlzIHllYXIgdG8gbWFrZSB0aGUgcGxheW9mZnMsIHNhaWQgS2VrYWxhaW5lbi4gV2FzIHRoZSBiaWdnZXN0IHJlYXNvbiB3aHkgd2UgZGlkIHdoYXQgd2UgZGlkIHRvIG1ha2UgdGhlIHBsYXlvZmZzIGFuZCBnaXZlIGFuIG9wcG9ydHVuaXR5IHRvIGNvbXBldGUgaW4gdGhlIFN0YW5sZXkgQ3VwIHBsYXlvZmZzLiAKSHVzYmFuZCBhc2tlZCBtZSB0byB1cGdyYWRlIHRvIFdvbGYgb3ZlbnMgYXMgYSBDaHJpc3RtYXMgZ2lmdCwgV2VsZHJpY2sgcmVjYWxscy4gaGFkIG5vIGlkZWEgdW50aWwgdGhlIHJldmVhbCB3YXMgcHJldHR5IGF3ZXNvbWUuIGl0IHdvcmtzTWFraW5nIG1lbW9yaWVzOiBUaGUgZGFyayB2ZWluaW5nIGluIHRoZSBpc2xhbmQgY291bnRlcnRvcCBieSBDYW1icmlhIHRoZSByaXBwbGVzIGxlZnQgaW4gdGhlIHNhbmQgYnkgd2F2ZXMgYW5kIGVuaGFuY2VzIHRoZSBDYXJpYmJlYW4gaW5zcGlyZWQgZGVzaWduLgpNZWRpYSBzb3VyY2VzIHNheSB0aGVyZSBoYXMgYWxzbyBiZWVuIGEgYmVoaW5kIHRoZSBzY2VuZXMgY2FtcGFpZ24gdG8gYXR0cmlidXRlIGJsYW1lIGZvciB0aGUgY2hhcml0eSBmYWlsdXJlIHRvIGZvcm1lciBjaGllZiBleGVjdXRpdmUgQ29sZW1hbiBkZXNwaXRlIGhlciBiZWluZyBlbXBsb3llZCBhcyBDRU8gZm9yIG9ubHkgdGhyZWUgbW9udGhzLiBUaGlzIGlzIGVtcGhhdGljYWxseSBkZW5pZWQgYnkgS2Vyci4gQ29sZW1hbiBoYXMgcmVmdXNlZCB0byBjb21tZW50IG9uIGFueSBtYXR0ZXJzIHJlbGF0aW5nIHRvIHRoZSBmb3VuZGF0aW9uLCBjaXRpbmcgYSBjb25maWRlbnRpYWxpdHkgYWdyZWVtZW50LiAKVGhlIG1haW4gcHJvYmxlbSBJIGhhdmUgaXMgdGhhdCByZWFkaW5nIHRoZSBNYWxhemFuIEJvb2sgb2YgdGhlIEZhbGxlbiBpcyBsaWtlIHdhdGNoaW5nIGJhc2tldGJhbGwgaW4gdGhlIGRhcmsgd2l0aCBhIGJhZCBmbGFzaGxpZ2h0IGZyb20gdGhlIG5vc2VibGVlZCBzZWF0cyB3aXRob3V0IGtub3dpbmcgdGhlIHJ1bGVzLiBZb3Uga25vdyBUaGluZ3MgYXJlIEdvaW5nIE9uLCB5b3Uga25vdyB0aGVzZSBhcmUgSW1wb3J0YW50IFRoaW5ncywgYnV0IGhvdyB0aGV5IGNvbm5lY3QgYW5kIHdoeSB0aGVzZSBwZW9wbGUgYXJlIGRvaW5nIHdoYXQgdGhleSBkb2luZyBpcyBlbnRpcmVseSBhIG15c3RlcnkuIApBdWZ3IHJlbm92aWVydCwgZiBhbmdlYmxpY2ggNzIgTWlsbGlvbmVuIEV1cm8sIGlzdCBlaW4gUGFsYWlzIGltIGhpc3RvcmlzY2hlbiBTdGlsIGRlcyBzcCAxOS4gClRoZXkgYWxyZWFkeSBwdXR0aW5nIHVwIGJhZCBlY29ub21pYyBudW1iZXJzIGZyb20gMTAlIHRhcmlmZnMuIFRoZXkgdGVldGVyaW5nIG9uIGFuIGVkZ2UuIEluIE1hcmNoIGlmIHRoZSAyNSUgdGFyaWZmcyBnbyB0aHJvdWdoIHRoZXkgZnVja2VkClNvIHdoeSBkZWFsIGhpbSBvbiBTdW5kYXksIGVpZ2h0IGRheXMgYmVmb3JlIHRoZSBOSEwgZGVhZGxpbmU/IFRoZXJlIHdhcyBhIGJ1eWVyIGluIHRoZSBBdmFsYW5jaGUsIGxvb2tpbmcgZm9yIGEgYmlnIGJvZHkgdXAgZnJvbnQgYW5kIGEgcHJpY2UgTGFtb3JpZWxsbyBjb3VsZCBhY2NlcHQuCllvdXIgZmFjZSBoYXMgaXRzIG93biBtaW5pIHNwaW5hbCBjb3JkIHN5c3RlbSBjYWxsZWQgdGhlIHRyaWdlbWluYWwgbmVydmUuIFNvbWF0b3NlbnNvcnkgbmV1cm9ucyAoYW5kIHBhaW4gcmVjZXB0b3JzIGFsbCBvdmVyIHRoZSBmYWNlIGFuZCBoZWFkKSB0cmF2ZWwgaW50byB0aGUgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSB0aHJvdWdoIHRoZSB0cmlnZW1pbmFsIG5lcnZlLiBUaGV5IHN5bmFwc2UgaW4gdGhlIHRyaWdlbWluYWwgbnVjbGV1cyAoZ3JvdXAgb2YgbmV1cm9ucykgaW4gdGhlIG1pZCBtZWR1bGxhIGFuZCBhbHNvIG9uIG5ldXJvbnMgaW4gdGhlIGxvd2VyIG1lZHVsbGEuIFRoZW4gdGhlc2UgbmV1cm9ucyBzZW5kc2lnbmFscyB0aHJvdWdoIHRoZSB0cmVnZW1pbmFsIHRoYWxhbWljIHRyYWN0IHdpdGhpbiB0aGUgbWlkYnJhaW4gdG8gdGhlIHRoYWxhbXVzLiBOZXVyb25zIGluIHRoZSB0aGFsYW11cyByZWxheSBzaWduYWxzIHRvIHRoZSBzb21hdG9zZW5zb3J5IGNvcnRleCBhbmQgbGltYmljIHN5c3RlbS4gVGhpcyBjb3VsZCBiZSBiZWNhdXNlIG9mIHNleCBsaW5rZWQgZ2VuZXRpYyB0cmFpdHMgYW5kIGhvcm1vbmFsIGNoYW5nZXMgdGhhdCBtaWdodCBhbHRlciB0aGUgcGFpbiBwZXJjZXB0aW9uIHN5c3RlbS4KSXQgcGlzc2VzIG1lIG9mZiBhbmQgbWFrZXMgbWUgdW5jb21mb3J0YWJsZSB0byBzdWNoIGFuIGV4dGVudCB0aGF0IG15IGh1c2JhbmQgbm93IGluc3RpbmN0aXZlbHkgbXV0ZXMgdGhlIHRlbGV2aXNpb24gd2hlbiBpdCBsb29rcyBsaWtlIHRoZXJlIG1pZ2h0IGJlIGVudGh1c2lhc3RpYyBraXNzaW5nLiBJdCB3ZWlyZCwgYmVjYXVzZSBpdCBoaWdobHkgc3BlY2lmaWMgZm9yIG1lLiAKVHJ5IHRoZSAyNTAwIGNvbnNpc3RlbnRseSB1bnRpbCB5b3VyIG5leHQgYmxvb2QgdGVzdCBhbmQgc2VlIHdoYXQgeW91ciB2YWx1ZXMgYXJlLiBNeSBndWVzcyBpcyB0aGF0IHRoZXkgc2hvdWxkIGJlIHJpZ2h0IGluIHRoZSBnb29kIHJhbmdlLiBVc3VhbGx5IDEwMDAgMjAwMCBJVSB3aWxsIHJhaXNlIHNlcnVtIEQgYnkgMTAgbmcvbWwuCkdvIGluIHdpdGggdGhlIHBhaXIgeW91IHRoaW5raW5nIG9mIHJlc29saW5nIGFuZCBqdXN0IGFzayB0aGVtIGFib3V0IGl0LCBhIGNvYmJsZXIgaXMgbGlrZSBhIGdvb2QgdGFpbG9yLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gaGF2ZSBhIGdvb2QgcmVsYXRpb25zaGlwIHdpdGggeW91ciBjb2JibGVyCk15IGdlbmVyYXRpb24gZ3JldyB1cCB3aXRoIG1vYmlsZSBkZXZpY2VzIHRoYXQgd2VyZSBleHBlbnNpdmUgdG8gYnV5IGFuZCByZWFsbHkgdG9vIGJpZyB0byBiZSBvZiBhbnkgcmVhbCB1c2UuIEF0IHRoZSBzYW1lIHRpbWUsIEkgcmVtZW1iZXIgZ2V0dGluZyBvbmUgb2YgdGhlIGZpcnN0IE5pbnRlbmRvIGNvbnNvbGVzLCBvbiB3aGljaCBJIHBsYXllZCBTdXBlciBNYXJpbyBCcm90aGVycyBmb3IgdHdvIHN0cmFpZ2h0IHdlZWtzLiBUb2RheSBJIGFtIGFuIEFwcGxlIGdlZWsgd2l0aCBhbiBpUGhvbmUsIGFuIEFwcGxlIFdhdGNoLCBhbiBpUGFkLCBhIE1hY0Jvb2ssIGFuIGlNYWMgYW5kIEFwcGxlIFRWLi4gCkxlYWRpbmcgSXJpc2ggYm9va21ha2VyLCB0aGUgUGFkZHkgUG93ZXIgY29tcGFueSwgY2FtZSB1cCB3aXRoIHRoZSBpZGVhIG9mIHNldHRpbmcgYSB3b3JsZCByZWNvcmQgZm9yIHRoZSBnYW1lIGFzIGFuIEFwcmlsIEZvb2wncyBEYXkgam9rZS4KQ29sbGlucycgZ3JlYXQgZ3JhbmRmYXRoZXIsIERhYm5leSwgYWxzbyB0ZXN0aWZpZWQgYW5kIHNhaWQgdGhhdCBDb2xsaW5zIHdvdWxkIG9mdGVuIHNraXAgc2Nob29sLldoZW4gYXNrZWQgYnkgTWFsa2luc29uIGlmIGhlIHdhcyBzdHJpY3QgZW5vdWdoIHdpdGggQ29sbGlucywgRGFibmV5IHNhaWQgaGUgd2FzIG5vdCBzdHJpY3QgZW5vdWdoIGFuZCBkaWQgbm90IGRvIGVub3VnaCB0byBnZXQgaGltIG9mZiBkcnVncy4gCkV2ZW4gYmVmb3JlIHRoZSBzdGFydCBvZiBoaXMgZmlsbW1ha2luZyBjYXJlZXIsIGF0IGEgdGltZSB3aGVuIHdlIHdlcmUgZG9taW5hdGVkIGJ5IG1vdmllcyBmcm9tIEhvbGx5d29vZCwgSm9obiBPJ1NoZWEgd2FzIG9uZSBvZiB0aGUgZmV3IHZvaWNlcyBzdGF0aW5nIHRoZSBuZWVkIGZvciBsb2NhbCBmaWxtcyB3aGljaCB3b3VsZCByZWZsZWN0IE5ldyBaZWFsYW5kJ3Mgd2F5IG9mIGxpZmUuIFJlaWQgb2JzZXJ2ZXMgdGhhdCBoZSB3YW50ZWQgdG8gYmUgYSBOZXcgWmVhbGFuZCBmaWxtbWFrZXIgYXMgbXVjaCBhcyBoZSB3YW50ZWQgdG8gYmUgYSBmaWxtbWFrZXIgYXQgYWxsLgpRLiBUaGlzIG1vbnRoIEknbSBwbGFubmluZyB0byBkbyBzb21lIGluZG9vciBzZWVkaW5nIG9mIHNvbWUgbGV0dHVjZXMsIGNhYmJhZ2UgYW5kIHN1bW1lciBmbG93ZXJzLiBJJ3ZlIGJlZW4gdG9sZCB0byBkYW1wZW4gZmlsbGVkIHNlZWRpbmcgZmxhdHMgYW5kIHBvdHMgd2l0aCBob3Qgd2F0ZXIuIERvIHlvdSBjb25zaWRlciB0aGF0IHNhZmUsIGFuZCBhIHVzZWZ1bCBpZGVhPyBBbnkgb3RoZXIgdGlwcz8KQ29udmVyc2VseSwgZWFjaCBhbmQgZXZlcnkgdGltZSBvbmUgb2YgdGhvc2UgaW5jaWRlbnRzIGNvbWVzIHRvIG1pbmQsIHRvIGNvbnNjaW91c25lc3MsIHlvdSBjYW4gdHJlYXQgaXQgYXMgYSBsZWFybmluZyBleHBlcmllbmNlLiBCZSBvYmplY3RpdmU6ICJobW1tIHdoYXQgZGlkIEkgZG8gd3JvbmcgdGhlcmU/Ii4gQmUgcGxlYXNlZCB0aGF0IHlvdSBoYXZlIHlldCBhbm90aGVyIG9wcG9ydHVuaXR5IHRvIGltcHJvdmUgeW91cnNlbGYuIEVhY2ggdGltZSB5b3UgZG8gdGhpcywgeW91IHN0YXJ0IHRvIGZpcnN0IGRldmVsb3AgdGhlIG1pbmRzZXQgdGhhdCBpdCB0aGUgbG9uZyB0ZXJtIGNoYW5nZSBpbiB5b3Vyc2VsZiB0aGF0IGlzIGltcG9ydGFudDsgc29tZSBjYWxsIHRoYXQgdGhlIGdyb3d0aCBtaW5kc2V0LiBBbmQgdGhlIG1vcmUgeW91IGRldmVsb3AgdGhpcyBtaW5kc2V0LCB0aGUgbGVzcyB5b3UgYmUgYm90aGVyZWQgYWJvdXQgZWFjaCBpbmNpZGVudC4gQW5kIGFzIGEgYm9udXMsIHlvdSB1c2UgdGhlIHBvd2VyIG9mIHlvdXIgbWluZCwgdGhlIGluc3RpbmN0dWFsIHdheSBpdCBpbnRlZ3JhdGVzIHVuY29uc2Npb3VzIGV4cGVyaWVuY2UgYW5kIGNoYW5nZXMgaG93IHlvdSByZWFjdCB0byB0aGVzZSBzaXR1YXRpb25zIChzb2NpYWwgaW4gdGhpcyBjYXNlKS4gQUtBLCB5b3Ugc2NyZXcgdXAgbGVzcy4gQW5kIGFzIHNvb24gYXMgeW91IHJlYWxpemUgdGhhdCB0aGUgc3RyZWFtIG9mIGluY2lkZW50cyBpcyBkcnlpbmcgdXAsIHlvdSBub3RpY2UgdGhhdCB5b3VyIGFscmVhZHkgYmVjb21lIGEgY29uZmlkZW50IG1hbi4gRXZlcnlvbmUgbWFrZXMgYXNzdW1wdGlvbnMgYmFzZWQgb2ZmIG9mIHdoYXQgc29jaWV0eSBpbmZvcm1zIHRoZW0gaXMgdGhlIG5vcm0gYW5kIHdoYXQgdGhleSBwZXJzb25hbGx5IGV4cGVyaWVuY2UuCk9uZSBtYWlkIHB1dHMgR3VsbGl2ZXIgcmlnaHQgb24gaGVyIG5pcHBsZSwgd2hpY2ggd2lsbCBubyBkb3VidCBhZmZvcmQgc29tZSBvZiB5b3UgbWFueSBhbiBleGhpbGFyYXRpbmcgbWFzdHVyYmF0aW9uIGZhbnRhc3kgdG9uaWdodC4gQnV0IHRoZSB3b3JzdCBieSBmYXIgd2FzIHdoZW4gcG9vciBHdWxseSB3YXMgdXNlZCBhcyBhIHNleCB0b3kgdG8gcGxlYXN1cmUgdGhlIG1haWRzICAgaGUgbWVudGlvbnMgIm1hbnkgb3RoZXIgdHJpY2tzLCB3aGVyZWluIHRoZSByZWFkZXIgd2lsbCBleGN1c2UgbWUgZm9yIG5vdCBiZWluZyBvdmVyIHBhcnRpY3VsYXIuIiBTbyBoZXksIGhlIGFuZCBBbnQgTWFuIHJlYWxseSBkbyBoYXZlIHNvbWV0aGluZyBpbiBjb21tb24hLiAKR00gYW5kIEZpYXQgYWxzbyBoYXZlIGEgc2hhcmVkIGhpc3RvcnksIGFsbW9zdCBjb21iaW5pbmcgYSBkZWNhZGUgYWdvIHVudGlsIEdNIGJvdWdodCBpdHNlbGYgb3V0IG9mIHRoZSBkZWFsLiAKQWx3YXlzIGdvIHZlcnkgc2xvd2x5IGFuZCBiZSBzdXJlIHNoZSByZW1haW5zIHJlbGF4ZWQuIERvbiBmb3JnZXQgdG8gdXNlIGx1YmUgb24gZWFjaCBmaW5nZXIgeW91IGluc2VydC4uIApBbnkgcHJpY2UgaW5jcmVhc2Ugb2YgWCBkb2xsYXJzIHdpbGwgdGVuZCB0byBuZXQgeW91IHNsaWdodGx5IGxlc3MgaW1wcm92ZW1lbnQgdGhhbiB0aGUgbGFzdCBwcmljZSBpbmNyZWFzZSBYIGRvbGxhcnMuIEJ1dCBJIHN1c3BlY3QgeW91IHJlYWxseSBtb3JlIGludGVyZXN0ZWQgaW4ga25vd2luZyB0aGUgcG9pbnQgYXQgd2hpY2ggdGhlIHJldHVybiBjdXJ2ZSByZWFsbHkgc3RhcnRzIHRvICJsZXZlbCBvZmYiIGZvciBhIGdpdmVuIGNvbXBvbmVudCB0eXBlLiBUaGUgZmFjdCBpcywgaWYgeW91IGFzayAxMCBkaWZmZXJlbnQgcGVvcGxlIHdoZXJlIHRoYXQgcG9pbnQgbGllcywgdGhleSBwcm9iYWJseSBnaXZlIHlvdSAxMSBkaWZmZXJlbnQgYW5zd2VycywgYmVjYXVzZSByZXR1cm4gb24gaW52ZXN0bWVudCwgYW5kIHdoZW4gaXQgc3RvcHMgYmVpbmcgIndvcnRoIGl0IiAoYXMgcGVvcGxlIHNheSkgaXMgcmVhbGx5IGEgcGVyc29uYWwgbWF0dGVyLiAKVFdPIEhJR0hMWSBBTlRJQ0lQQVRFRCBEUFMgQ0xBU1NFUyBKVVNUIENBTUUgT1VULgoiSSBqdXN0IGNyaWVkLCIgc2hlIHNhaWQuICJJIGFjdHVhbGx5IGhhdmUgdGhlIGF3YXJkIGFib3ZlIHRoZSBtYXNzYWdlIGNoYWlyIHRoYXQgSSBoYXZlIGluIG15IHJlbGF4aW5nIHJvb20sIHNvIHRoYXQgd2hlbiBJJ20gc2FkIG9yIHN0cmVzc2VkIEkgY2FuIGxvb2sgYXQgdGhhdCBhbmQgc2F5ICdZZWEsIEkgZGlkIHRoYXQuJyIKSSBkaXNhZ3JlZSB3aXRoIHlvdXIgZW50aXJlIHNlY29uZCBwYXJhZ3JhcGguIEFwYXJ0IGZyb20gdGhhdCBsb2dpYyBiZWluZyBjb21wbGV0ZWx5IHVuZm91bmRlZCAoYXMgaWYgcHBsIGdvIHRvIGFydCBzY2hvb2wgYW5kIGdldCBhIHJvYWQgdG8gZmFtZSBhbmQgZm9ydHVuZSBpbW1lZGlhdGVseSB1cG9uIGdyYWR1YXRpb24pLiBCZWxpZXZlIGl0IG9yIG5vdCBwcGwgd291bGQgc3RpbGwgZ28gdG8gc2Nob29sIGZvciBtdXNpYywgdGhlYXRyZSBhbmQgYXJ0IGFuZCBkZWRpY2F0ZSB0aGVtc2VsdmVzIGNvbXBsZXRlbHkgdG8gaXQgZGVzcGl0ZSBmaW5hbmNlcy4gCkFtZXJpY2FucyBvZiBtYW55IGNodXJjaGVzIHNlbmQgb3ZlciBtaXNzaW9uYXJpZXMgYW5kIG91dHJlYWNoIHdvcmtlcnMgdG8gQWZyaWNhIHRvIHNwcmVhZCBodW1hbiByaWdodHMgYW5kIEdvZHMgTG92ZS4gV2h5IGlzIGl0IGFjY2VwdGFibGUgZm9yIHRoZSBwZW9wbGUgd2UgYXJlIHJlYWNoaW5nIG91dCB0bywgdG8gZGljdGF0ZSB0byB1cyBob3cgdG8gbGl2ZT8gSSB3b3VsZCBjdXQgdGhlaXIgZnVuZGluZy4gCkFuZCwgeW91IGtub3cgd2hhdCwgc2hlIGRpZG4gd2FudCB0byBiZSBhIHNsYXZlIHRvIG9uZSwgYmVjYXVzZSBpbiBteSB3b3JrIGFuZCB3aGF0IEkgZG8sIEkgdGhlIHF1ZWVuIG9mIHRoZSB1bml2ZXJzZSBldmVyeSBkYXkuIi4gCldlIGFsbCBzdGFydGVkIG91dCBsb3NpbmcgYXQgcG9rZXIuIApDaXJjdWl0IENvdXJ0IG9mIEFwcGVhbHMgaGVhcmluZywgaW4gd2hpY2ggdGhlIGFwcGVhbHMgY291cnQganVkZ2VzIGFjY3VzZWQgaGltIG9mIHVuZXRoaWNhbCBjb25kdWN0IGFuZCBkZXRlcm1pbmVkIGhlIHNob3VsZCBoYXZlIHJlY3VzZWQgaGltc2VsZiBmcm9tIHRoZSBjYXNlLlsyNV0uIApJIGdyb3duIHVwIG9uIGxha2UgY2F1Z2h0IGZpc2ggd2l0aCBteSBkYWQgZ29pbmcgZmlzaGluZyBhIHRvbiBhbmQgbm93IGkgZG8uIEFueXRoaW5nIG90aGVyIHRoYW4gY29kIG9yIGhhZGRvY2sgdGhhdCB5b3Ugbm9ybWFsbHkgZmluZCBpbiB0aGUgbGFrZXMgdXAgaGVyZSBpcyBmYXIgc3VwZXJpb3IuLiAKT24gVHdpdHRlci4gV2UncmUgb24gRmFjZWJvb2suIApUb2RheSdzIG1vc3QgbGF1ZGVkIHByb3BlcnRpZXMgbm8gbG9uZ2VyIG5lZWQgdG8gZXhpc3Qgd2l0aGluIFdvbGZlJ3MgdHJpYW5nbGUsIG5vciBuZWVkIHRoZXkgYmUgcHJld2FyLiBJbiBmYWN0LCBhIEdvb2QgQnVpbGRpbmcgY291bGQgY29uY2VpdmFibHkgcmlzZSBpbiBhbG1vc3QgYW55IE1hbmhhdHRhbiBuZWlnaGJvcmhvb2QgdG9kYXkuIEFuIGFkZHJlc3MgYXQgdGhlIHJpZ2h0IGJ1aWxkaW5nIGluIFRyaWJlY2EsIEdyZWVud2ljaCBWaWxsYWdlIG9yIG9uIDU3dGggU3RyZWV0IGJyaW5ncyBqdXN0IGFzIG11Y2ggY2FjaGV0IGFzIGEgbWFuc2lvbiBpbiA4MzQgRmlmdGgsIDc0MCBQYXJrIG9yIFJpdmVyIEhvdXNlLi4gClRoZXJlIGFyZSBhIGZldyBhZHZhbnRhZ2VzIHRob3VnaC4gRmlyc3Qgb2YgYWxsIHlvdSBjYW4gZGlzY2FyZCBmcm9tIHlvdXIgaGFuZCBhbnkgY2FyZHMgdGhhdCB5b3UgZG8gbm90IHdhbnQgdG8ga2VlcC4gCllvdSBjYW4gYWxzbyB1c2UgcGF0cm9sbGVkIFZpa2luZ3Mgb3IgbWFyaW5lcyBvbiBjb21tb24gZHJvcCBwYXRocyB0byBhbGVydCB5b3UuIFdoZW4gdGhlIGRyb3AgY29tZXMgaW4gaXQgYWJvdXQgcmVhY3Rpb24gdGltZS4gR2V0IHlvdXIgdW5pdHMgdXAgYW5kIGxvb2sgZm9yIGEgZ29vZCBlbmdhZ2VtZW50LiAKTWF5YmUgbmV4dCB0aW1lIHlvdSBoYXZlIGFuIG9wcG9ydHVuaXR5IHRvIHVzZSB5b3VyIHBsYXRmb3JtIHRvIHNwcmVhZCBhIG1lc3NhZ2UsIHlvdSB3b24gdXNlIGl0IHRvIHNoYW1lIGFuZCBiZWxpdHRsZSB0aG9zZSB3aG8geW91IGRpc2FncmVlIHdpdGguIApObywgdGhpcyAidGhyZWF0IGFnYWluc3QgZnJlZSBzcGVlY2giIGlzIG5vdCBhcyB1bm5lcnZpbmcuIEFic29sdXRlbHkgemVybyB3aWxsIGJlIGRvbmUgdG8gbGltaXQgU05MJ3Mgc2F0aXJlLCBhbmQgbm8gb25lIGF0IFNOTCBjb3VsZCBsZWdpdGltYXRlbHkgY2xhaW0gdG8gYmUgd29ycmllZCB0aGUgZ292ZXJubWVudCB3aWxsIGNlbnNvciB0aGVtLiBZb3UncmUganVzdCBjcnlpbmcgd29sZiB0byBkZWZsZWN0IGZyb20gdGhlIGFjdHVhbCBwcm9ibGVtIHdpdGggZnJlZSBzcGVlY2ggdGhlICJzb2NpYWwganVzdGljZSIgbGVmdCBoYXMuIChPYnZpb3VzbHksIGl0J3Mgbm90IGFzIGltcG9ydGFudCBhIHByb2JsZW0gYXMgdGhlIHByZXNpZGVudCBwcm9iYWJseSB3ZWxjb21pbmcgUnVzc2lhbiBpbmZvcm1hdGlvbiB3YXJmYXJlIGFnYWluc3QgdGhlIFVTIG9uIGhpcyBiZWhhbGYsIGJ1dCB3aHkgY2FuJ3QgeW91IGp1c3QgYWRtaXQgaXQncyBhIHByb2JsZW0/KQpUaGUgZXZlbnQgZW50aWNlZCBmYXJtZXJzLCBtb3RvcmN5Y2xlIHJpZGVycyBhbmQgY29sbGVjdG9ycyBvZiBhbGwgdGhpbmdzIGFncmljdWx0dXJhbCBmb3IgYSBkYXkgb2YgZnVuLCBmb29kIGFuZCBlbnRlcnRhaW5tZW50IHRoYXQgcmFuZ2VkIGZyb20gYSBzdGF0ZSBzYW5jdGlvbmVkIHBlZGFsIHRyYWN0b3IgcHVsbCBhbmQgcmlkZXMgZm9yIGtpZHMgdG8gYSBwYXJhZGUgb2YgcG93ZXIgYW5kIHBva2VyIHJ1bi4KTm8gc2hhZGUgYXQgdGhvc2UgcGVvcGxlIGJ0dywgaXQganVzdCBub3QgdmVyeSB1c2VmdWwgaWYgeW91IGRvbiBrbm93IHdoYXQgaXQgYWxsIG1lYW5zLi4gCkxvbC4gV2FzIHdpbGxzdCBkZW5uIGluIEFmZ2hhbmlzdGFuIGF1ZmJhdWVuPyBLYXVtIHN0ZWh0IGRhIGVpbmUgU2NodWxlIGtvbW1lbiBkaWUgVGFsaWJhbiB1bmQgc2FnZW4gIndpciBzaW5kIGRhIGpldHp0IENoZWYiLiAKWWVzLiAKV2hlbiBpIGZpcnN0IGpvaW5lZCB0aGUgdGVhbSBoZSB3YXMgcmVhbGx5IGplYWxvdXMgb2YgbWUgYmVjYXVzZSBpIHdhcyB2ZXJ5IGNvbmZpZGVudCwgdmVyeSBvdXRzcG9rZW4sIGhhZCBhIGxvdCBvZiBpZGVhcyBhbmQgZXZlcnlib2R5IGxvdmVkIG15IGlkZWFzLi4gCkRlYXRoIGhhcyByZWxheGVkIG1lIHUKU2hlIGlzIHRoZSBsZWFzdCBwcm9ncmVzc2l2ZSBwZXJzb24gY3VycmVudGx5IHJ1bm5pbmcuIApQaWNrZWQgdXAgUG9pbnQgQmxhbmsgYW5kIFByZWNpc2UgU2hvdCBxdWlja2x5LiBSYXBpZCBTaG90IGxhdGVyLiAKVGhlIG1hbiBzdXJyZW5kZXJlZCBoaXMgbWFjaGluZSwgYSBtZWNoYW5pY2FsIG1vZGVsIGhlIGhhZCBvd25lZCBmb3IgbW9yZSB0aGFuIDMwIHllYXJzLCB0byBMYWtlIElsbGF3YXJyYSBsaWNlbnNpbmcgb2ZmaWNlcnMgb24gU2VwdGVtYmVyIDMwLiAKV2FybmUgd3JvdGUgdGhlIGZvbGxvd2luZywgIk5vIHBva2VyIGluIHRoZSBuZXh0IGZldyB3ZWVrcyBhcyB3aWxsIGJlIE9TIHBsYXlpbmcgZ29sZiwgdGhlbiBzb21lIGJ1c2luZXNzIG1lZXRpbmdzLiBTYWNoaW4gYW5kIEkgaGF2ZSBhbiBleGNpdGluZyBhbm5vdW5jZW1lbnQgc29vbiB0b28uIgpJbnRlcm5hdGlvbmFsIHNwb3J0aW5nIGdpYW50cyBoYXZlIGFsc28gYmVlbiBwYXJ0IG9mIG91ciBmYWJyaWMgICBLb3N0eWEgVHN6eXUsIEd1c3MgSGlkZGluayBhbmQgSmltIFN0eW5lcywgZm9yIGV4YW1wbGUuIApTbywgSSB3b3VsZCBzdGFydCBieSBjaGVja2luZyBldmVyeXRoaW5nIG9uIHRoaXMgZmxvcCwgY2FsbGluZyBhIG1lZGl1bSBzaXplZCBiZXQgd2l0aCBteSBoaWdoIHBhaXJzLCBzdHJvbmcgZHJhd3MgKGFuZCBwYWlyK2RyYXcpLCBhbmQgZm9sZGluZyBBSyBhbmQgQVEgKHVubGVzcyBoZSBiZXRzIHRpbnkpLgpJIGhhdmUgYmVlbiBvbiB5b3UgdHViZSBsZWFybmluZyBmcm9tIHBlb3BsZSBhcyB3ZWxsLiBBcyB5b3UgYWxsIHJlY2FsbCBteSBzY2FyeSBjaGlja2VuIGZyb20ganVzdCBsb29raW5nIGF0IHZhcmlvdXMgcGljdHVyZXMuIApCYWNrIHRoZW4gaXQgd2FzIGp1c3QgYSBzaW1wbGUgInJlYWQgdXAgb24gd2hhdCBjYXJkcyBub3QgdG8gZ2V0LCBnZXQgZXZlcnl0aGluZyBlbHNlLCBhbHNvIGtub3cgYWJvdXQgQW1leCAxIHBlciBsaWZldGltZSIuIDEgcG9pbnQgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnby4gClRoZSBNNEExIGJhcnJlbCBzdGVlbCBpcyB1bmNoYW5nZWQgZnJvbSBpdCBvcmlnaW5hbCBjb21wb3NpdGlvbiBpbiB0aGUgTTE2QTEuIAoxMCBUaGluZ3MgVG8gU2VlIEFuZCBEbyBJbiBQYW5hbWEgQ2l0eQpJIGtub3cgdGhhdCB0aGV5IGFyZSBlbWJhcnJhc3NlZCBhcm91bmQgdGhlaXIgd2hpdGUgZnJpZW5kcyBieSB0aGUgbm9ydGgga29yZWEgc2l0dWF0aW9uIGFuZCBkZXNwaXRlIGtub3dpbmcgamFja3NoaXQgYWJvdXQga29yZWFuIHBvbGl0aWNzLCB0aGV5IGp1c3Qgc2lkZSB3aXRoIHRoZSAiY29uc2VydmF0aXZlIiBwYXJ0eSBqdXN0IGJlY2F1c2UgdGhlaXIgcG9saWNpZXMgYXJlIFNUUk9ORyEgYWdhaW5zdCBub3J0aCBrb3JlYSwgd2hpbGUgb2YgY291cnNlLCB3ZSwgbmF0aXZlIGtvcmVhbnMgc3VmZmVyZWQgdHJlbWVuZG9pdXNseSB1bmRlciBMZWUgTXl1bmcgQmFrIGFuZCBQYXJrIEd1biBIZWkgY3JpbWluYWxzIHRoYXQgc2NhbW1lZCB0aGUgd2hvbGUgY291bnRyeSBkcnkuCkxhIGJlcmNlIGNvbW11bmUgZXN0LCBjb21tZSBzb24gbm9tIGwgbGEgcGx1cyBjb3VyYW50ZSBkZXMgQXBpYWNlcyAoYXZlYyBsYSBjYXJvdHRlKSBxdSB0cm91dmUgZW4gRnJhbmNlLiAKSWxsdXN0cmF0aW9uIGJ5IENobG9lIEN1c2htYW4vIGZpbGVzCk15IGFybXBpdHMgYXJlIGRhcmtlciB0aGFuIHRoZSByZXN0IG9mIG15IGJvZHkgYmVjYXVzZSBvZiBteSBkZW9kb3JhbnQgYW5kIEkgZG9uJ3QgcmVhbGx5IGtub3cgd2hhdCB0byBkbyBhYm91dCBiZWNhdXNlIEknbSBub3Qgc3VyZSBpZiBpdCdzIGRlb2RvcmFudCBzdHVjayB0byBteSBza2luIG9yIHRoZSBkZW9kb3JhbnQgc3RhaW5pbmcgbXkgc2tpbi4gRXZlbiB0aG91Z2ggSSBkbyB3YXNoIHRoZW0gZXZlcnkgZGF5LCBpdCdzIHN0aWxsIG5vdCBlbm91Z2ggdG8gZWl0aGVyIGRpc2xvZGdlIGRlb2RvcmFudCBvciByZW1vdmUgZGVvZG9yYW50IHN0YWlucy4gSG93ZXZlciBJIHJlYWxseSBkb24ndCB3YW5uYSBjaGFuZ2UgZGVvZG9yYW50cyBiZWNhdXNlIG15IGFybXBpdHMgYXJlIHN1cGVyIHNlbnNpdGl2ZSBhbmQgSSBzd2VhdC9zbWVsbCBhIGxvdCBzbyBpdCdzIGRpZmZpY3VsdCB0byBmaW5kIGRlb2RvcmFudHMgdGhhdCBjb3ZlciBib3RoIG5lZWRzLiAKT25lIG90aGVyIGlzc3VlIHRoYXQga2VwdCBjb21pbmcgdXAgZHVyaW5nIHRoZXJhcHkgd2FzIGhpcyBiaW5nZSBkcmlua2luZyB3aXRoIGZyaWVuZHMgYW5kIGhlIHN0YXJ0ZWQgZG9pbmcgdGhpcyBhIGxvdCBsZXNzIGR1cmluZyB0aGVyYXB5LiBCdXQgZXZlcnkgb25jZSBpbiBhIHdoaWxlLCBJIGNhdGNoIGhpbSBpbiBhIGxpZSAgIHR3aWNlIGFib3V0IHRoZSBwb2tlciBhbmQgb25jZSBhYm91dCBoaW0gaGFuZ2luZyBvdXQgd2l0aCBoaXMgd29tYW5pemluZyBmcmllbmQgICBhbmQgZWFjaCB0aW1lLCBJIGdldCBTVVBFUiB1cHNldCwgYnV0IEkgZG9uJ3Qga25vdyBpZiBJIGFtIG92ZXJyZWFjdGluZyBiZWNhdXNlIG9mIGhpcyBoaXN0b3J5IG9mIGx5aW5nIGFuZCBhbHNvIGJlY2F1c2UgSSB0aGluayBob25lc3R5IGlzIFJFQUxMWSBpbXBvcnRhbnQgYW5kIEkga25vdyB0aGF0IG5vdCBldmVyeW9uZSBmZWVscyB0aGF0IHdheS4gREggbGllcyBiZWNhdXNlIGhlIGhhdGVzIGNvbmZsaWN0IGhlIHdvdWxkIHJhdGhlciB0cnkgdG8gZ2V0IGF3YXkgd2l0aCBzb21ldGhpbmcgdGhhbiB0cnkgdG8gdGFsayB0aGluZ3MgdGhyb3VnaCB3aXRoIG1lIChoZSBoYXRlcyB0aGVzZSBjb252ZXJzYXRpb25zKS4gCkl0IG5vdCB0aGF0IHRoZSBlbXBpcmUganVzdCBnb3Qgd2Vha2VyLCBidXQgdGhhdCB0aGUgbmF0dXJlIG9mIHRoZSBlbXBpcmUgYW5kIGl0cyBwbGFjZSBpbiB3b3JsZCBoaXN0b3J5IGNlbnRlcmVkIGFyb3VuZCB0aGlzIGlkZWEgb2YgZGVjbGluZSBhbmQgZGVjYXkuIApKYWNrcyBpcyB0aGUgdmVyeSB0b3Agb2YgdGhhdCByYW5nZSB0aGF0IGNvdWxkIGxldCB0aGVpciBoYW5kIGdvIGFuZCB5ZXMgSSBzdXJlIHRoZXJlIGFyZSBwbGVudHkgb2YgcGxheWVyIHdobyB3b3VsZCBub3QgbGV0IGphY2tzIGdvIGl0IHJlYWxseSBkZXBlbmRlbnQuIApXZSBjb25zdGFudGx5IGdldCBpbnVuZGF0ZWQgd2l0aCBzdG9yaWVzIG9mIHBlb3BsZSBiZWluZyBraWxsZWQgZm9yIHRoZWlyIGZhaXRoLiAKRm9yICQyMCBhIHNoYXJlLCB3aGlsZSB0aGUgbmV4dCBiZXN0IHByaWNlIG9mZmVyZWQgdGhlcmUgbWlnaHQgYmUgMTAwIHNoYXJlcyBmb3IgJDIwLjAxLiBBdCB0aGUgc2FtZSB0aW1lLCBhIE5ldyBZb3JrIGV4Y2hhbmdlIG1pZ2h0IGxpc3QgYSB0b3Agb2YgdGhlIGJvb2sgb2ZmZXIgb2YgMTAwIHNoYXJlcyBmb3IgJDIwLjAyLiAKSm9zaHVhIE0uIEZlcmd1c29uLCB3aG8gaWRlbnRpZmllcyBhcyBuZWl0aGVyIGEgbWFuIG5vciBhIHdvbWFuIGFuZCB1c2VzIHRoZSBnZW5kZXIgbmV1dHJhbCBwcm9ub3VuICJ0aGV5LCIgcmV0dXJuZWQgaG9tZSBmcm9tIGEgdHJpcCBhYnJvYWQgdG8gZmluZCB0aGUgYmlydGggY2VydGlmaWNhdGUgaW4gdGhlIG1haWwgbGFzdCB3ZWVrLgpXYWxsZmxvd2VyIHUKVGhvc2Ugc2FtZSBwZW9wbGUgYXJlIGFsc28gd2hvbGx5IHVud2lsbGluZyB0byBjb25zaWRlciB3aGF0IGVjb25vbWljLCBvciBwb3dlciBjb3N0LCBtYXkgY29tZSB3aXRoIHJlbGlucXVpc2hpbmcgdGhlIGNvbnN1bXB0aW9uIHJhY2UuIApBbHNvLCB0aGUgd2hvbGUgcG9pbnQgb2YgdGhlIFN0YXRlIG9mIElzcmFlbCBpcyBzbyB0aGF0IHlvdSBjYW4gYmUgYSBjaXRpemVuIGluIGNhc2Ugc2hpdCB0dXJucyBzaWRld2F5cyBpbiB5b3VyIGhvbWUgY291bnRyeS4gCldoaWxlIGhvcnNlIG1hc3NhZ2UgaXMgdGhlIGN1cnJlbnQgZm9jdXMgaW4gTmVicmFza2EsIGl0IHBhcnQgb2YgYSBsYXJnZXIgbmF0aW9uYWwgdHJlbmQgcGFydGljdWxhcmx5IGluIFJlcHVibGljYW4gY29udHJvbGxlZCBzdGF0ZXMgdG8gcmVkdWNlIGJhcnJpZXJzIHRvIGxpY2Vuc2luZywgc2FpZCBTdXphbm5lIEh1bHRpbiBmcm9tIHRoZSBOYXRpb25hbCBDb3VuY2lsIG9mIFN0YXRlIExlZ2lzbGF0dXJlcy4gUmVxdWlyZWQgYSBsaWNlbnNlLiAKSnVzdCB1c2UgTWVzc2VyIG1hbiwgSSByZWFsbHkgZG9uJ3QgdGhpbmsgeW91J2QgbmVlZCBhIGJvb2suIApJIHN1Z2dlc3QgcHV0dGluZyB0aGUgc3VyZmFjZSBvbiBzbyB0aGF0IHRoZSBncmFpbiBydW5zIGxlbmd0aHdpc2Ugb24gdGhlIHJhbXAuIApJIGRvIGxpa2Ugc2xpY2Ugb2YgbGlmZSBhIGxvdCwgYnV0IEkgbXVzdCBiZSBhdm9pZGluZyB0aGUgcmVhbGx5IGJhZCBzdHVmZiBiZWNhdXNlIHRoZSBvbmVzIEkgcmVtZW1iZXIgbW9zdCBmb25kbHkgYXJlIG5vdCBwcm8gYnJlZWRlciwgYnV0IEkgZG8gbm90IGRvdWJ0IHRoZXJlIGFyZSBzb21lIHBybyBicmVlZGVyIG9uZXMgb3V0IHRoZXJlLgpJbCBjb252aWVudCBkZSBzJ2ludHJlc3NlciBlbiBsJ2VzcGNlICBsYSBwZXJzb25uZSBodW1haW5lIGNvbXB0ZSB0ZW51IGRlIGxhIHByaW1hdXQgcXVpIGx1aSBlc3QgYXR0cmlidWUuLiAKTGVhcm4gU29tZSBEZXRhaWxzIEFib3V0IFRoZSBSb3VuZCBQb2tlciBUYWJsZQpGcm9tIGNvbXBhbnkgdG8gY29tcGFueSwgSSByZWFsaXplZCBJIHdhcyBuZXZlciBnb2luZyB0byBiZSBhIGdyZWF0IGZpdCBmb3IgY29ycG9yYXRlIHBvc2l0aW9ucyBiZWNhdXNlIEkgb3V0c3Bva2VuIGFuZCBJIGhhdmUgbXkgb3duIGlkZWFzLiAKVGhhdCB3YXMgbXkgdGFrZSBvbiBDdXJyeSByZWFjdGlvbiwgdG9vLiBJIGRpZG4ga25vdyBwZW9wbGUgd2VyZSBpbnRlcnByZXRlcmluZyBpdCBhbm90aGVyIHdheS4gSGUganVzdCB0aGlua2luZyBzaGUgc3Bpbm5pbmcgb3V0IG9mIGNvbnRyb2wgKHdoaWNoIHNoZSBraW5kYSBpcyksIGFuZCBpcyBzZWVpbmcgdGhpbmdzICh3aGljaCBzaGUgbGl0ZXJhbGx5IGlzKS4KSW4gb3JkZXIgdG8gcmVkdWNlIHRoZSBzeW1wdG9tIG9mIHRpZ2h0IGNoZXN0LCBpdCBpcyBpbXBvcnRhbnQgdG8gY29uc3VsdCBhIGRvY3RvciBvciBhIHBzeWNoaWF0cmlzdCBpZiB5b3Ugc3VzcGVjdCB5b3UgaGF2ZSBhbnhpZXR5IGF0dGFja3MuLiAKVGhlIG9ubHkgcmVhbCBzbm93IHdhcyBpbiBOb3ZlbWJlciBhbmQgdGhhdCB3ZW50IGF3YXkgcXVpY2tseS4gCihBY2NvcmRpbmcgdG8gdGhlIE94Zm9yZCBFbmdsaXNoIERpY3Rpb25hcnksIHRoZSBmaXJzdCB1c2Ugb2YgdGhlIHdvcmQgZm9yIGEgYnVpbGRpbmcgd2FzIHByZWNlZGVkIGJ5IGl0cyB1c2FnZSBmb3IgYSB0YWxsIGhvcnNlICgxNzg4KSwgYSB0YWxsIGJvbm5ldCAoMTgwMCksIGEgc2hpcCBzYWlsICgxODAxKSwgYW4gZXhhZ2dlcmF0ZWQgc3RvcnkgKDE4NDApLCBhbmQgYSBoaWdoIGhpdCBiYWxsICgxODQyKSwgYmVmb3JlIGl0IGNhbWUgdG8gcmVzdCBvbiBhIGJ1aWxkaW5nIGluIDE4ODQgYW5kIDE4ODkuKSBUaGUgc2VjdWxhciBidWlsZGluZ3Mgd2VyZSBub3QgdGFsbGVyIHRoYW4gdGhlIG5vbiBzZWN1bGFyIG9uZXMgKGxpa2UgdGhlIFJvdWVuIGFuZCBDb2xvZ25lIGNhdGhlZHJhbHMpIHVudGlsIHRoZSBlYXJseSBuaW5ldGVlbiBvdWdodHMuIApJbiBmYWN0LCBub25lIG9mIHRoaXMgaXMgdHJ1ZSBhbmQgSSBzbyBzb3JyeS4gSSBkb24ga25vdyB3aHkgSSBkaWQgdGhpcy4uIApSZWFkaW5nIHRob3NlIGJsb2dzIG1ha2UgbWUgZmVlbCB3b3JzZSBiZWNhdXNlIE1ZIFNPTiBXT05UIERPIFRIQVQuIEhlIHdvbid0IHNpdCBhbmQgcGxheSB0aGF0IGNvdW50aW5nIGdhbWUgd2l0aCBtYXJibGVzLiBIZSB3b24ndCBoZWxwIHNldCB0aGUgdGFibGUuIEhlIHdvbid0IHB1dCB0aG9zZSBjb2xvcmVkIGJlYXJzIGluIHRoZSByaWdodCBjb2xvcmVkIGN1cHMgKHdlbGwgaGUgbWlnaHQgYnV0IGl0J2xsIHRha2UgMzAgc2Vjb25kcyB0b3BzIGFuZCB0aGVuIGhlJ3MgZG9uZSkuIEhlIGRvZXNuJ3QgInNpdCIgYW5kICJkbyIgaGUgUlVOUyBhbmQgREVTVFJPWVMuIEknbSBub3Qgc2F5aW5nIHRoaXMgaW4gYSBiYWQgd2F5LCBsaWtlIGhlJ3MgYSBiYWQga2lkIG9yIHNvbWV0aGluZywgaGUncyBub3QhIEhlJ3MgcmVhbGx5IHN3ZWV0IGFuZCBsb3ZpbmcgYW5kIHF1aXRlIGhpbGFyaW91cy4gdGhhdCdzIGp1c3QgdGhlIHdheSBoZSBpcy4KTGF5aW5nIGluIGJlZCB3aXRoIHNvbWV0aGluZyBpbiB0aGUgYmFja2dyb3VuZCBJIGZpbmQgaGVscHMgcGFpcmVkIHdpdGggc29tZSBnb29kIHNsZWVwLiBIb3dldmVyIGV2ZW4gYWZ0ZXIgSSBoYXZlIGFuIGFueGlldHkgYXR0YWNrIGFuZCB0cnkgdG8gc2xlZXAgYW5kIGxldCBpdCBwYXNzLiAKT25lIGlkZWEgaXMgdGhhdCAiYnVjayIgaXMganVzdCBhIHNob3J0ZW5lZCBmb3JtIG9mIHRoZSB3b3JkICJzYXdidWNrLCIgd2hpY2ggaXMgc2xhbmcgZm9yIGEgJDEwIGJpbGwuIFRoaXMgaXMgdGhvdWdodCB0byBiZSBiZWNhdXNlIG9uZSBvZiB0aGUgZWFybGllc3QgJDEwIGJpbGxzIGZlYXR1cmVkIHRoZSBSb21hbiBudW1lcmFsIFgsd2hpY2ggcmVzZW1ibGVzIGEgInNhd2J1Y2siICBhIGZyYW1lIGZvciBob2xkaW5nIHdvb2QgdG8gYmUgY2hvcHBlZCBhbmQgc2F3ZWQuIFBhcGVyIGN1cnJlbmN5IGludHJvZHVjZWQgaW4gdGhlIDE4NjBzIGFuZCBsYXRlciBjYW1lIHRvIHNwZWNpZnkgb25lIGRvbGxhciwgYWNjb3JkaW5nIHRvIFJ1c3NlbGwgQS4gCkFkZGl0aW9uYWwgYmxvb2QgdGVzdHMgYW5kIHRoZW4gYSBzdG9tYWNoIGJpb3BzeSBjb25maXJtZWQgdGhhdCBJIGhhdmUgY2VsaWFjIHRvby4KVGhlIGdhbWUgY29uc2lzdHMgb2YgYSBzZXJpZXMgb2YgaGFuZHMsIGVhY2ggb2Ygd2hpY2ggY29uc2lzdCBvZiB0aHJlZSBwYXJ0cy4gCkEgZmxhdCB0YXggb24gYWxsIGluY29tZSBhbmQgZWxpbWluYXRpb24gb2YgYWxsIGRlZHVjdGlvbnMgYW5kIGV4ZW1wICB0aW9ucyB3b3VsZCBiZSBmYWlyIGFuZCBqdXN0LCBoZSBzYWlkLiAiVGhlIGdyYWR1YXRlZCBpbmNvbWUgdGF4IHBlbmFsaXplcyB0aGUgaGUgY29udGVuZGVkLiBUaGUgVHJlYXN1cnkgRGVwYXJ0bWVudCBoZWxkIHRoZSBoZWFyaW5nLCB0aGUgZmlyc3QgaW4gYSBzZXJpZXMgaW4gc2V2ZW4gY2l0aWVzLCBpbiByZXNwb25zZSB0byBSZWFnYW4ncyBvcmRlciB0byBtYWtlIHJlY29tbWVuZGF0aW9ucyBvbiBob3cgdG8gaW0gIHByb3ZlIHRoZSB0YXggc3lzdGVtLiAKSXQgYSB0ZW5zaW9uIGJyb2tlbiBvbmx5IHdoZW4gV2VuZHkgYW5kIGhlciBmcmllbmRzIGFyZSB0b2dldGhlci4gClRoZSBhbWF0ZXVyIHBybyBsb3ZlcyB0byBwbGF5IGRyYXdzLCBldmVuIHRoaW5ncyBsaWtlIHVuc3VpdGVkIG9uZSBnYXAgc2hpdCBvdXQgb2YgcG9zaXRpb24uIFRoZXkgcHJvYmFibHkgcmVhZCBzb21ld2hlcmUgaW4gYSBwb2tlciBib29rIHRoYXQgdGhleSBzaG91bGRuIGRvIHRoaXMsIGJ1dCB0aGV5IGFsc28gcmVhZCB0aGUgc2VjdGlvbiBvbiBpbXBsaWVkIG9kZHMgYW5kIGJhZGx5IG1pc3VuZGVyc3Rvb2QgaXQuIApEaXNjdXNzaW9uOiBNYXliZSBJIGhhdmUgbWFkZSBhbiBlcnJvciB3aXRoIHRoZSB0cmFuc2xhdGlvbiBvZiBTVU1NRVIvU09NTUVSLCBidXQgZm9yIHRoYXQgdG8gYmUgaW5jb3JyZWN0LCB0aGUgd29yZCBERU0gd291bGQgaGF2ZSB0byBhbHNvIGJlIGluY29ycmVjdC4gClRha2luZyBiYWNrIGNvbnRyb2wKSW4gZmFjdCB0aGUgY29tbW9uIHRyZWF0bWVudCBvZiBoeXBvdGh5cm9pZGlzbSB3aXRoIFN5bnRocm9pZCAoYSBUNCBvbmx5IHRoeXJvaWQgbWVkaWNhdGlvbikgbWF5IGJlIGNvbnRyaWJ1dGluZyB0byBhbiBpbmNyZWFzZSBpbiBkZXByZXNzaXZlIHN5bXB0b21zIGR1ZSB0byBpdCBpbmFiaWxpdHkgdG8gYWRkcmVzcyBhIGRlZmljaWVudCBUMy4uIApFbm91Z2ggc2xlZXAgaXMgYWxzbyBpbXBvcnRhbnQgdG8gcHJldmVudCBoYWlyIGxvc3MuIApJIGFkbWlyZSB0aGlzIHdvbWFuJ3Mgc3RyZW5ndGggb2YgY2hhcmFjdGVyIGluIHdyZXN0aW5nIGNvbnRyb2wgb2YgaGVyIGhlYWx0aCBhd2F5IGZyb20gaGVyIGRvY3RvcnMuIFNvbWUgb2YgdGhlbSBoYXZlIHJlY2VudGx5IHRyaWVkIHRvIHBlcnN1YWRlIGhlciB0byBsb3dlciBoZXIgZG9zZSBhZ2Fpbi4gc2ltcGx5IGRvbid0IGxpc3RlbiB3aGVuIEkgdGVsbCB0aGVtIHdoYXQgaGFwcGVuZWQgdG8gbWUgb24gdGhlIGxvd2VyIGRvc2UuIEkgZmVlbCB0aGF0IEknbSB1cCBhZ2FpbnN0IGEgd2FsbCBvZiBpZGlvY3ksIHNoZSBzYWlkLiBkb24ndCBoYXZlIHRvbyBtYW55IHllYXJzIGxlZnQgdG8gZm9vbCBhcm91bmQgd2l0aCB0aGVpciBib29rIHRoZW9yaWVzLCBhbmQgSSdtIG5vdCBnb2luZyB0byBsZXQgdGhlbSBraWxsIG1lLiBUaGUgdHJhZ2ljIGZhY3QgaXMsIG9mIGNvdXJzZSwgdGhhdCBtYW55IGRvY3RvcnMgdG9kYXkgd291bGQgc2FjcmlmaWNlIGhlciBoZWFsdGggYW5kLCBpbmRlZWQsIGV2ZW4gaGVyIGxpZmUuIExpa2UgbW9zdCBmYW5hdGljcywgdG8gdGhlc2UgZG9jdG9ycyBhbnkgcHJpY2UgdGhlIHBhdGllbnQgbWlnaHQgcGF5IGlzIHdvcnRoIGFjaGlldmluZyB0aGVpciBvYnNlc3NpdmUgZ29hbCBrZWVwaW5nIHRoZSBwYXRpZW50J3MgVFNIIHJhbmdlLiBTb21lIGluaGFsYW50cyBwYXRpZW50cyB1c2UgdG8gcmVsaWV2ZSB0aGVpciBhc3RobWF0aWMgc3ltcHRvbXMgd29yayBieSBzdGltdWxhdGluZyBiZXRhMiBhZHJlbmVyZ2ljIHJlY2VwdG9ycyBpbiB0aGUgYnJvbmNoaWFsIHR1YmVzLlsyOF0gU3RpbXVsYXRpbmcgdGhlIHJlY2VwdG9ycyBkaWxhdGVzIHRoZSB0dWJlcyBhbmQgY29uc3RyaWN0cyBibG9vZCB2ZXNzZWxzIGluIHRoZWlyIGxpbmluZywgd2hpY2ggZHJpZXMgbXVjb3VzIHNlY3JldGlvbnMuIFRoZXNlIGVmZmVjdHMgb2YgdGhlIGluaGFsYW50cyByZWxpZXZlIHNob3J0bmVzcyBvZiBicmVhdGgsIGNvdWdoaW5nLCBhbmQgd2hlZXppbmcgcmVzcGlyYXRpb24uWzI1LHAuMjA3XQpJdCBtYXkgYmUgbXkgb3duIHByZWp1ZGljZXMgaGVyZSwgYnV0IHRlbGxpbmcgc29tZW9uZSB0byAic3RvcCBtZWRpY2F0aW5nIiByZWFkcyB0byBtZSBhcyBlaXRoZXIgdGVsbGluZyB0aGVtIHRvIHN0b3AgdXNpbmcgcHJlc2NyaWJlZCBtZWRpY2F0aW9ucywgb3Igc3RvcCBzZWxmIG1lZGljYXRpbmcuIApIZXJlIHRoZSB0aGluZywgSG9sZGVuIGlzIGEgdmVyeSB1bnJlbGlhYmxlIG5hcnJhdG9yIGFzIHdlbGwuIApXaXRoIGhpcyBkZXRlcm1pbmF0aW9uLCBSZW5vIEhpbHRvbiBicm91Z2h0IHRoZSBmaXJzdCBXb3JsZCBQb2tlciBUb3VyIHRvIFJlbm8gaW4gMjAwMS4gSW4gMjAwMiwgR2FpbmV5IHRvb2sgdGhlIHBvc2l0aW9uIG9mIERpcmVjdG9yIG9mIFBva2VyIE9wZXJhdGlvbnMgZm9yIFNlbmVjYSBHYW1pbmcgQ29ycG9yYXRpb24gaW4gd2VzdGVybiBOZXcgWW9yay4gSW4gdGhpcyByb2xlLCBHYWluZXkgbGVkIHRoZSBvcGVuaW5nIG9mIHRocmVlIGxhcmdlIHBva2VyIHJvb21zLiAKVGhlIGRlZmVuZGFudHMgaW5jbHVkZSBtZW1iZXJzIG9mIHRoZSBHZW5vdmVzZSwgR2FtYmlubywgTHVjY2hlc2UsIGFuZCBCb25hbm5vIGNyaW1lIGZhbWlsaWVzIGluIE5ldyBZb3JrLCBhcyB3ZWxsIGFzIE1lcmxpbm8sIDU0LCB3aG8gaGFzIGJlZW4gbGl2aW5nIGluIEJvY2EgUmF0b24sIEZsYS4gTW9yZSB0aGFuIGhhbGYgb2YgdGhvc2UgYXJyZXN0ZWQgd2VyZSBmcm9tIE5ldyBZb3JrLCBwcm9zZWN1dG9ycyBzYWlkLCBhbmQgbW9zdCBvdGhlcnMgd2VyZSBmcm9tIHN1cnJvdW5kaW5nIHN0YXRlcyBzdWNoIGFzIE5ldyBKZXJzZXksIENvbm5lY3RpY3V0LCBhbmQgTWFzc2FjaHVzZXR0cy4gU2l4IGxpdmUgaW4gRmxvcmlkYS4uIApUaGUgZnJ1c3RyYXRpb25zIGFuZCB0aW1lIGFyZW4ndCB0eXBpY2FsbHkgd29ydGggdGhlIG1vbmV5IChhbmQgY2FuIGV2ZW4gY29zdCB5b3UgcG90ZW50aWFsIG1vbmV5IGZyb20gb3RoZXIgY2xpZW50cyksIGFuZCB1c3VhbGx5IHdoZW4gYSBjbGllbnQgZG9lc24ndCBoYXZlIGl0IHRvZ2V0aGVyIGl0IG1lYW5zIHRoZSByZXN1bHRpbmcgcHJvamVjdCBpc24ndCBnb2luZyB0byBiZSBzb21ldGhpbmcgeW91J2QgYmUgd2lsbGluZyB0byBzaG93IG9mZiB0byBnZXQgbW9yZSB3b3JrLiBVbmxlc3MgeW91IGhhdmUgdGhlIHRpbWUgdG8gc3BhcmUgb3IgeW91IHJlYWxseSBuZWVkIHRoZSBtb25leSwgSSB3b3VsZCBsZXQgdGhpcyBjbGllbnQgZ28uIAosIGFyZ3VpbmcgdGhleSB3b3VsZCBlc3NlbnRpYWxseSBzaHV0IGRvd24gdGhlIGluZHVzdHJ5LCBodXJ0IG5vbnByb2ZpdCBmdW5kcmFpc2luZyBhbmQgcmVzdWx0IGluIGxvc3Qgam9icyBmb3IgcG9rZXIgcm9vbSBlbXBsb3llZXMuIApSb2xsaW5nUm9sbGluZyBpcyBsaWtlIHRhcHBpbmcgaW4gdGhhdCBpdCBhcHBsaWVzIGRvd253YXJkIHByZXNzdXJlLiBIb3dldmVyLCB0aGF0IGlzIHdoZXJlIHRoZSBzaW1pbGFyaXR5IGVuZHMuIEEgcm9sbCBpcyBwZXJmb3JtZWQgd2l0aCBlaXRoZXIgdGhlIHBhbG0gb2YgdGhlIGhhbmQgb3IgYSBjbGVuY2hlZCBmaXN0LiBUaGUgcG9pbnQgb2YgcHJlc3N1cmUgaXMgcm9sbGVkIGFyb3VuZCB0aGUgb3V0c2lkZSBvZiB0aGUgaGFuZCBpbiBhIGNpcmN1bGFyIG1vdGlvbiwgd2l0aCBmaXJtIHByZXNzdXJlIGFwcGxpZWQgY29udGludW91c2x5IHRvIGRpZmZlcmVudCBwbGFjZXMuIFRvIGdldCBhIGdvb2QgaWRlYSBvZiBob3cgdGhpcyBzaG91bGQgZmVlbCBmb3IgeW91LCBzcGluIGEgcGVubnkgb24gaXRzIGVkZ2UuIE5vdGljZSBob3csIHJpZ2h0IGJlZm9yZSBpdCBmYWxscyBjb21wbGV0ZWx5LCBpdCBzcGlucyBhdCBhIGRpYWdvbmFsLCB3aXRoIHRoZSBwb2ludCBvZiBjb250YWN0IG1vdmluZyBhcm91bmQgdGhlIHJpbS4gVGhpcyBpcyBob3cgdGhlIHJvbGwgc2hvdWxkIGZlZWwuIFJvbGxpbmcgd29ya3MgYmVzdCBvbiB0aGUgbG93ZXIgYmFjay4KSSBzcG90dGVkIHRoaXMgIlVuZnVja3dpdGhhYmxlIiBiYW5nbGUgaW4gYSByaWRpY3Vsb3VzbHkgb3ZlcnByaWNlZCBnaWZ0IHNob3AgaW4gVGFtcGEuIEkgZm91bmQgaXQgb25saW5lIGFuZCBib3VnaHQgaXQgZm9yICQxNSBpbnN0ZWFkLgpUZWNobmljYWxseSwgcHJvc3RpdHV0aW9uIGlzIG5vdCBpbGxlZ2FsIGluIENhbmFkYS4gV2hhdCBpcyBpbGxlZ2FsIGlzIGtlZXBpbmcgYSBiYXdkeSBob3VzZSwgY29tbXVuaWNhdGluZyBmb3IgdGhlIHB1cnBvc2VzIG9mIHByb3N0aXR1dGlvbiBvciBsaXZpbmcgb2ZmIHRoZSBhdmFpbHMgb2YgcHJvc3RpdHV0aW9uLgpIb3cgVG8gQmVjb21lIGEgUHJvZmVzc2lvbmFsIENvbW1lcmNpYWwgV2VkZGluZyBQaG90b2dyYXBoZXIgYnkgTi9BIFBERiBET1dOTE9BRFMgVE9SUkVOVCA+R08gRG93bmxvYWRzIGUgQm9vayBXaGF0LiA2IEphbiAyMDEzIC4gCkRlc3BpdGUgdGhlIE5ITCBnZXR0aW5nIHNtYWxsZXIgYW5kIHNvZnRlciwgTWlsYW4gTHVjaWMgaXNuIGhhdmluZyBhbnkgdHJvdWJsZSBmaW5kaW5nIGEgd2lsbGluZyBjb21iYXRhbnQgdGhlc2UgZGF5cy4KQWZ0ZXIgQW52aWsgaXMgdGhlIGZhbW91cyBZdWtvbiBSaXZlci4gVGhlIHRyYWlsIGlzIG92ZXIgdGhlIGZyb3plbiByaXZlciBmb3IgYWxtb3N0IDE1MCBtaWxlcyBmcm9tIEFudmlrIHRvIEthbHRhZy4gTXVzaGVycyBhcmUgcmVxdWlyZWQgdG8gdGFrZSBhbiA4IGhvdXIgcmVzdCBlaXRoZXIgYXQgU2hhZ2VsdWsgb3Igb25lIG9mIHRoZSBZdWtvbiBSaXZlciBjaGVja3BvaW50cy4gClNwcmlua2xlIHdpdGggYXBwbGVzIGFuZCB3YWxudXRzLiAKVGhlIG9ubHkgb3RoZXIgcHJvYmxlbSwgd2hpY2ggaXMgbm90IGxpbWl0ZWQganVzdCB0byBoZXJvaW4sIGJ1dCBhbGwgbm9uIHN5bnRoZXRpYyBvcGlhdGVzIGlzIGhpc3RhbWluZSByZWxlYXNlIGFuZCBhbiBpbmNyZWFzZSBpbiBwYXRpZW50IENSUCBsZXZlbHMuIE90aGVyaXNlIHRoZXkgYXJlIGFsbCBkb2luZyB0aGUgc2FtZSB0aGluZywgYmluZGluZyB0byBhbmQgYWN0aXZhdGluZyB0aGUgbXUgb3Bpb2lkIHJlY2VwdG9ycy4KQ2hlY2sgZm9yZ2VyeSB2aWN0aW0gYmFsa3MgYXQgYW1vdW50IG9mIHRpbWUsIHdvcmsgaXQgdGFrZXMgdG8gY2xlYXIgYSBuYW1lOiBNb25leSBNYXR0ZXJzIENoZWNrIGZvcmdlcnkgdmljdGltIGJhbGtzIGF0IGFtb3VudCBvZiB0aW1lLCB3b3JrIGl0IHRha2VzIHRvIGNsZWFyIGEgbmFtZTogTW9uZXkgTWF0dGVycyBJIGRyb3BwZWQgYSBuZXcgYm9vayBvZiBjaGVja3MgaW4gbXkgb3duIGRyaXZld2F5LiBUaGV5IHdlcmUgcGlja2VkIHVwIGJ5IHNvbWVvbmUgd2hvIHByb2NlZWRlZCB0byBmb3JnZSBzZXZlcmFsIG9mIHRoZW0uIApCZWxvdmVkIGZhdGhlciBvZiBKdWR5IEh1dHRvbiBhbmQgaGVyIGh1c2JhbmQgR2FyeSBhbmQgQnJpYW4gSGFtbWVsbCBhbmQgaGlzIHdpZmUgS2F0aHkuIEFkb3JlZCBieSBzaXggZ3JhbmRkYXVnaHRlcnMgU2hheW5hIEh1dHRvbiAoRG91ZyksIEVsaWNpYSBMYW1iZXJ0IChDYW1lcm9uKSwgS3Jpc3RlbiBIdXR0b24gKEpvZSksIEdlbm5hIE5pY2hvbCAoQWRhbSksIEthaXRseW4gSG9vcyAoQ2FtZXJvbiksIENoZWxzZWEgTGV2ZXIgKEpvc2gpIGFuZCBlaWdodCBncmVhdCBncmFuZGNoaWxkcmVuIEtlbmRvbiBhbmQgTWFkZWx5bmUgWmV0dGxlLCBBbGV4YSBhbmQgSmFjZSBMYW1iZXJ0LCBFbGxpZSBhbmQgQXZlcnkgTmljaG9sLCBKb2UgSG9vcyBhbmQgSGFkbGV5IExldmVyIEhlIHdhcyB0aGUgZmlyc3QgYm9ybiBjaGlsZCBvZiBQZXJjeSBFcm5lc3QgSGFtbWVsbCBhbmQgTWFydGhhIEVsbGVuIFRob21wc29uIHByZWRlY2Vhc2VkIGJ5IGhpcyBzaXN0ZXIgVmlvbGV0IFdvb2RzIGFuZCBicm90aGVycyBHbGVuIGFuZCBUb21teSBIYW1tZWxsLiAKV2h5IGRvIHdvbWVuIHN0YXkgd2l0aCBhYnVzaXZlIG1lbj8gQmVjYXVzZSB0aGV5IGFyZSBtYXN0ZXJmdWwgYXQgbWFuaXB1bGF0aW5nIHdvbWVuIGludG8gZGlzdHJ1c3RpbmcgZXZlcnlvbmUgYnV0IHRoZSBhYnVzZXIsIGlzb2xhdGluZyB0aGVtLCBhbmQgZGVzdHJveWluZyB0aGVpciBzZWxmIGVzdGVlbS4gU2hlIGVpdGhlciBjb21wbGV0ZWx5IGJlYXRlbiBkb3duLCBvciBhIG5hcmNpc3Npc3RpYyBwc3ljaG9wYXRoLiAKTWF5YmUgSSBjYW4gdW5kZXJzdGFuZCBpZiB5b3VyIGxpZmUgaXMgbm90IGdyZWF0IGFuZCBhcmUgbG9va2luZyBmb3Igc29tZW9uZSB0byBicmluZyB5b3Ugb3V0IG9mIHlvdXIgdHJvdWJlLCBtYXliZSB5b3VyIHZlcnkgYW1iaXRpb3VzIGFuZCB3b3VsZCBsb29rIHRvIHBsZWFzZSBzb21lb25lIGluIGhvcGVzIG9mIGdldHRpbmcgYSBwcm9tb3Rpb24sIG1heWJlIHlvdSBsb3N0IGFuZCB5b3UganVzdCBsb29raW5nIGZvciBzb21lIGxlYWRlciB0byBmb2xsb3csIG9rLCBJIGdldCB0aGF0LC4gCkJhYm9jazkzIHUKVGhlIHdob2xlIFRQUCBkZWJhY2xlIGdhdmUgZXZlcnlvbmUgc29tZSBmb3JtIG9mIFBUU0QuIERTIHdpbGwgZW5kIHdoYXQgUFQgYmVnYW4uCjMgZXBpc29kZSBvZiBOQkMncyAiQ2hpY2FnbyBGaXJlIiBlYXJuZWQgaW4gcGxheWJhY2sgKHRoZSBEaWNrIFdvbGYgZHJhbWEgZ3JldyBmcm9tIGEgMS4zIGluIGxpdmUgc2FtZSB0byBhIDIuMSBpbiBsaXZlIDcpLCB0aG9zZSBkZWxheWVkIHZpZXdzIGRpZG4ndCBoYXZlIG5lYXIgYXMgbXVjaCBpbXBhY3Qgb24gdGhlIGVwaXNvZGUncyBjb21tZXJjaWFsIHJhdGluZ3MuIFBlciBOaWVsc2VuLCB0aGF0IHBhcnRpY3VsYXIgaW5zdGFsbG1lbnQgb2YgIkNoaWNhZ28gRmlyZSIgb25seSBpbmNoZWQgdXAgdG8gYSAxLjQgaW4gQzcsIHdoaWNoIGFtb3VudHMgdG8gYW4gOCBwZXJjZW50IGdhaW4uIApCZWZvcmUgdGhlIEdyZWF0IFJlY2Vzc2lvbiwgbWFueSBpbmR1c3RyaWVzIGxpa2VkIHRvIGNsYWltIHRoZXkgd2VyZSAicmVjZXNzaW9uIHByb29mLiIgVGhlIGNvc21ldGljIHN1cmdlcnkgaW5kdXN0cnkgc2FpZCBpdCB3YXMsIGFuZCBpdCB0dXJucyBvdXQgdG8ga2luZGEgYmUgdHJ1ZSwgYWx0aG91Z2ggdGhlcmUgaGFzIGJlZW4gYSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIG1hbnkgc3VyZ2ljYWwgcHJvY2VkdXJlcywgYm9vYiBqb2JzIGtlZXAgZ29pbmcgdXAgYXMgd2VsbCBhcyB0aG9zZSBub24gc3VyZ2ljYWwgcHJvY2VkdXJlcyBsaWtlIEJvdG94IC4KSSBnb3QgY29ybmVyZWQgaW4gdGhlIHBhcmtpbmcgbG90IGJ5IHR3byBnaXJscyB3aXRoIGlvZGluZSBzdGFpbmVkIGZpbmdlcnMgd2hvIHdlcmUgZGV0ZXJtaW5lZCB0byBzZWxsIG1lIGEgYmFnIG9mIHdvbWVuJ3MgY29zbWV0aWNzIHRoYXQgSSdtIHByZXR0eSBzdXJlIHN0aWxsIGhhZCBzaGFyZHMgb2YgYnJva2VuIGdsYXNzIGluIGl0Li4gClllYXIgb25lIGFsaWducyB3aXRoIHRoZSBzdGFuZGFyZCB1bml2ZXJzaXR5IHRlcm1zIGFuZCBkb2VzIG5vdCBleHRlbmQgaW50byB0aGUgc3VtbWVyIGhvbGlkYXkgcGVyaW9kLiBZb3Ugd2lsbCBoYXZlIG9uZSBwbGFjZW1lbnQgaW4gZmlyc3QgeWVhciwgbGFzdGluZyBmb3VyIHdlZWtzLCBhbmQgeW91IHdpbGwgYWxzbyBoYXZlIFdlZG5lc2RheSBhZnRlcm5vb25zIGZyZWUuIApXaGVuIGhlIHBsYXlpbmcgaGFyZCBhbmQgcGxheWluZyBtZWFuIGxpa2UgaGUgaGFzIGJlZW4gaXQgb3BlbnMgdXAgc28gbXVjaCBpY2UuIEhlIGJlZW4gYSBsZWFkZXIgaW4gdGhpcyByb29tIHNpbmNlIGhlIGNhbWUgaGVyZS4gCktlaW4gUmVnZW4gaW4gQXVzc2ljaHQsIGRhcyBnZWZhZWxsdCB1bnMhIFVuZCBiZWkgVGVtcGVyYXR1cmVuIHVtIGRpZSAzMEdyYWQsIGxzc3Qgc2ljaCBkaWUgQnJvdHplaXQgYW0gYWxsZXJiZXN0ZW4gbWl0IGd1dGVuIEZyZXVuZGVuIG9kZXIgZGVuIEZhbWlsaWVuIEhlcnppcyBpbSBHYXJ0ZW4sIGF1ZiBkZXIgVGVycmFzc2Ugb2RlciBhdWYgZGVyIFdpZXNlIGFtIFNlZSBlaW5uZWhtZW4hIEluIGRlciBCaW9vYXNlIGdpYnQgc29ubmVuc2UgRXJkYmVlcm4gdm9uIHVuc2VyZW0gU2llYm5hY2hlciBCaW9sYW5kaG9mIFNjaGFybmFnZWwsIGZyaXNjaGUgR2Vtc2VzZnRlIHp1bSBFbmVyZ2lldGFua2VuIHVuZCBhbGxlIGxlY2tlcmVuIEVjaHQgQmlvIERyYXVzc2VuIEVzc2VyIEFuZ2Vib3RlLiBEaWUgbmNoc3RlbiAyIFdvY2hlbiBiaXMgZWluc2NobGllc3NsaWNoIDcuOC4gRnJldWVuIHdpciB1bnMgYmVyIFZvZWxrZWwgQmlvIENvY2t0YWlscywgU29tbWVyam9naHVydHMgdm9uIGRlbiBTY2hyb3piZXJnZXIgQmF1ZXJuLCBEYXZlcnQgUGl0YSBUYXNjaGVuIHVuZCBCaW8gSHVtbXVzIG9kZXIgU2NobGFuZ2VuZ3Vya2VuIHp1IGduc3RpZ2VuIFByZWlzZW4gaGllciBhbGxlIEFuZ2Vib3RlOi4gCkluIGNvbXBhcmlzb24sIGluIDIwMTEsIHRoZSBWUEQgcmVjb21tZW5kZWQgdG8gdGhlIENyb3duIGNoYXJnZXMgYWdhaW5zdCB0aGUgZmlyc3QgNjAgc3VzcGVjdGVkIHJpb3RlcnMgd2hvIGZhY2VkIG11bHRpcGxlIGNoYXJnZXMgKDE2MyBpbiB0b3RhbCkgYWJvdXQgZm91ciBtb250aHMgYWZ0ZXIgdGhlIEp1bmUgMTUgU3RhbmxleSBDdXAgcmlvdC4gT2ZmaWNlcnMgZm9yIHRoZSByaW90IGhhZCB2aWV3ZWQgbW9yZSB0aGFuIDUsMDAwIGhvdXJzIG9mIHZpZGVvIGZvb3RhZ2UgYW5kIHRhZ2dlZCBhbmQgaWRlbnRpZmllZCBtb3JlIHRoYW4gMTUsMDAwIGNyaW1pbmFsIGFjdHMuLiAKUG9rZXIgY2FyZHMgYXJlIG1hZGUgb3V0IG9mIHBhcGVyLiAKVGhlIGJlc3QgdGhpbmcgYWJvdXQgbWljcm9iZWFkcyBpcyB0aGF0IHRoZXkgYXJlIHZlcnkgZmxleGlibGUuIAoiQXMgY2FzdCBpbnRvIHRoZSBvZiBmaXJlIGJyaW1zdG9uZSwgd2hlcmUgdGhlIGJlYXN0IGFuZCB0aGUgZmFsc2UgcHJvcGhldCBhcmUsIGFuZCBzaGFsbCBiZSB0b3JtZW50ZWQgZGF5IGFuZCBuaWdodCBmb3IgZXZlciBhbmQgZXZlci4iICBSZXZlbGF0aW9uIDIwOjEwClN5bXB0b21zIG9mIGJsb29kIHN0YWduYXRpb24gaGVhZGFjaGVzIGFyZSBhIHNoYXJwLCBmaXhlZCwgc3RhYmJpbmcgcGFpbiBpbiBhIHNwZWNpZmljIGxvY2F0aW9uLCBhIHdpcnksIGNob3BweSBwdWxzZSwgYW5kIGEgcHVycGxlIHRvbmd1ZS4gCkF0IHdoaWNoIHBvaW50IE5vbWFkIGlzIHByZXR0eSBtdWNoIHN0cmljdGx5IGJldHRlci4gSWYgdGhlIG5vbiByb2xsaW5nIGNhcmQgaXMgYSBOdWxsLCB5b3VyIGF0dGFjayB3aWxsIGRlYWwgemVybyBkYW1hZ2UsIGJ1dCBhbnkgcm9sbGluZyBtb2RpZmllciBzdGF0dXMgZWZmZWN0cyAoc3R1biBldGMpIGFyZSBzdGlsbCBhcHBsaWVkLiBXaGVuIGRpc2FkdmFudGFnZWQsIHlvdSBkcmF3IDIgY2FyZHMsIGlmIG9uZSBpcyBhIHJvbGxpbmcgbW9kaWZpZXIgYW5kIHRoZSBvdGhlciBub24gcm9sbGluZywgeW91IGRpc3JlZ2FyZCB0aGUgcm9sbGluZyBtb2RpZmllciBhbmQgdGhlIG5vbiByb2xsaW5nIGNhcmQgaXMgeW91ciBkcmF3ICh0aGlzIG1lYW5zIHRoYXQgYSByb2xsaW5nICsxIGFuZCBhIDJYIHdpbGwgcmVzdWx0IGluIHlvdSB0YWtpbmcgdGhlIDJYKS4gTmF0dXJhbGx5LCBpZiB5b3UgZG9uIGhhdmUgcm9sbGluZyBtb2RpZmllcnMsIHlvdSBzaW1wbHkgZHJhdyAyIGNhcmRzIGFuZCBjaG9vc2UgdGhlIGJldHRlciBvciB3b3JzZSBvbmUsIHJlc3BlY3RpdmVseS4KQWdhaW4gYnkgY29tcGFyaW5nIGFsbCB0aGUgZmFjdG9ycyBiZXR3ZWVuIFVydWsgQ2FwdGFpbnMgbGlzdGVkIGFib3ZlLgpPaywgdGhhbmtzLiBJIHRoaW5rIHNvbWUgb2YgdGhlc2UgZGlkIHNob3cgb24gR29vZ2xlLCBidXQgdGhlIGRlc2NyaXB0aW9ucyBkaWRuJ3QgbWFrZSBpdCBzZWVtIG9idmlvdXMgdGhleSB3ZXJlIG9mZmVyaW5nIGFjdHVhbCBzZXJ2aWNlcy4KQnVzaW5lc3NtYW4gQXZpbmFzaCBNYWh0YW5pIHN0YXJ0ZWQgcGxheWluZyBwb2tlciBzZXZlbiBtb250aHMgYmFjay4gSGlzIGludGVyZXN0IHRvd2FyZHMgdGhlIGdhbWUgc29vbiBncmV3LiBIZSBub3JtYWxseSBwbGF5cyBwb2tlciB3aXRoIGhpcyBmcmllbmRzIGF0IGhvbWUuICJJdCdzIHNvIG11Y2ggZnVuIHBsYXlpbmcgdGhlIGdhbWUgbGl2ZSBhbmQgeW91IHRlbmQgdG8gZ2V0IGNvbXBsZXRlbHkgaW52b2x2ZWQuIFRoZSByb29tIGlzIGZpbGxlZCB3aXRoIGEgZmVlbGluZyBvZiBhcHByZWhlbnNpdmVuZXNzIGFuZCBldmVyeSBtb3ZlIG9mIGEgcGxheWVyIGlzIGp1ZGdlZCwiIGV4cGxhaW5zIE1haHRhbmkuCkkgZGlzYWdyZWUgd2l0aCB3aGF0IHlvdSBzYXkgYWJvdXQgaGltIG5vdCBzaG93aW5nIGFueSBncmVhdCB0YWxlbnQgb3Igc2tpbGwuIFlvdSBoYXZlIHRvIHJlbWVtYmVyIGxpdGVyYWxseSBldmVyeSBjaGFyYWN0ZXIgaW4gdGhlIG1vdmllIGJlc2lkZXMgaGltIGFuZCBtYXJpYSBhcmUgbm90IGh1bWFuIGFuZCBXQVkgc3Ryb25nZXIgdGhhbiB0aGV5IGFyZS4gVGhlcmUgc2ltcGx5IHdhc24gYSBjaGFuY2UgZm9yIGhpbSB0byAic2hvdyIgYW55dGhpbmcsIGhlIGhlbGQgaGlzIG93biBmb3IgYSBsaXR0bGUgd2hpbGUgYWdhaW5zdCB0YWxvcyB3aGlsZSB0aGV5IGZvdWdodCBpbiB0aGUgcmVjb3JkcyBhcmVhIGJ1dCBoZSBpcyBzaW1wbHkgb3V0bWF0Y2hlZCBieSBldmVyeW9uZSBlbHNlIGluIHRoZSBtb3ZpZS4uIApQdWVzIHMsIGVuIGxhcyBXU09QIGh1Ym8gdG9ybmVvcyBjb24gcmVjb21wcmFzIGlsaW1pdGFkYXMuIEVzIHVuIGZvcm1hdG8gbXV5IHBvcHVsYXIgZW4gY2FzaW5vcyBkZSB0b2RvIGVsIG11bmRvIHkgdGFtYmluIGVuIGVsIHBva2VyIG9ubGluZSwgeSBwb3Igc3VwdWVzdG8gcXVlIHR1dm8gc3UgaHVlY28gZW4gbGEgYWdlbmRhIGRlIGxhcyBTZXJpZXMuIFBlcm8gZW4gbGFzIFdTT1AgaGF5IHVuIGVsZW1lbnRvIGRpZmVyZW5jaWFkb3IsIGVsIGJyYXphbGV0ZS4gCkl0J3MgdGhlIGZhc2NpYSB0aGF0IGdvZXMgb3ZlciBhbmQgYXJvdW5kIGFuZCB0aHJvdWdoIHlvdXIgbXVzY2xlcyB0aGF0IG9yZ2FuaXplcyB0aGF0IHRpc3N1ZSBpbnRvIGxpbmVhciBwdWxsaW5nIG1hY2hpbmVzLiIgV2hlbiB5b3UgcGVyZm9ybSBhIGJpY2VwcyBjdXJsLCBmb3IgZXhhbXBsZSwgdGhlIGZhc2NpYSBvZiB0aGUgYmljZXBzIG11c2NsZSBzaG9ydGVucywgdHVnZ2luZyBvbiB5b3VyIHRlbmRvbnMgYW5kIGRyYXdpbmcgeW91ciBoYW5kIGNsb3NlciB0byB5b3VyIHNob3VsZGVyLiAKSSB0cnkgdG8gYW5zd2VyIG1vc3Qgb2YgdGhlIHNlbnNpYmxlIHF1ZXN0aW9ucyB0aGF0IGZhbnMgc2VuZCBtZS4gCkNvYXN0IEd1YXJkIFJlc2N1ZXMgVHdvIFBlb3BsZSBBZnRlciBWZXNzZWwgU2lua3MgMjU2IE1pbGVzIE9mZiBLZXkgV2VzdEEgQ29hc3QgR3VhcmQgYWlyY3JldyByZXNjdWVkIHR3byBwZW9wbGUgYWZ0ZXIgdGhlaXIgYm9hdCBjYXBzaXplZCBhbmQgc2FuayAyNTYgbWlsZXMgd2VzdCBvZiBLZXkgV2VzdCBsYXRlIG9uIFdlZG5lc2RheS4KRGVzY3JpcHRpb246IExhdW5jaCB0aGUgZ2FtZSwgaXQgZXJyb3JzIHdpdGggIlZhdWx0IFRlYyBlbmdpbmVlcnMgYXJlIGhhcmQgYXQgd29yayBnZXR0aW5nIG91ciBzZXJ2ZXJzIGJhY2sgb25saW5lISAoRmFpbGVkQmFja0VuZCkiIHRoZW4gaGl0dGluZyByZXRyeSBwcm9kdWNlcyAiVW5rbm93biBlcnJvciBvY2N1cmVkLiBBbnkgZW1vamkgYWRkZWQgdG8gaXQgdGhvdWdoIGlzIGFsc28gYWNjZXNzaWJsZSBieSBhbGwgdXNlcnMgZm9yIHRoZWlyIG93biBmbGFpcnMgdGhhdCBhbGxvdyB0aGVtIHRvIG1vZGlmeSBhbmQgYWRkIHRvIHRoZW0/LiAKVW5lIHRlbGxlIHJ1bmlvbiBuJ2F2YWl0IHBhcyBldSBsaWV1IGRlcHVpcyBwbHVzaWV1cnMgYW5uZXMgcXVhbmQgaWwgcydhZ2lzc2FpdCBhbG9ycyBkZSBwcnNlbnRlciBkZXMgYmlsYW5zIGRlIGxhIFpvbmUgZGUgU2N1cml0IFByaW9yaXRhaXJlIChaU1ApLiBFdCBjZXR0ZSBmb2lzLCBpbCBuJ3RhaXQgcGFzIHF1ZXN0aW9uIGRlIHBhcmxlciBzZXVsZW1lbnQgYmlsYW4gbWFpcyBiaWVuIGQnY291dGVyIGhhYml0YW50cyBldCBhc3NvY2lhdGlvbnMuIE0uIER1ZWxwZWNoIGwnYSBkaXQgZW4gcHJhbWJ1bGUgOiBpbCBhIGJpZW4gcHJpcyBhdSBzcmlldXggbGVzIHNpZ25hdXggZW52b3lzIHN1ciBsZXMgcHJvYmxtZXMgZXQgZGlmZmljdWx0cyByZW5jb250cnMgZGVwdWlzIGRlcyBtb2lzICBsYSBsZWN0dXJlIGRlcyBub21icmV1eCBzaWduYWxlbWVudHMsIGNvdXJyaWVycywgbWFpbHMgZXQgcHRpdGlvbnMgcmV1cy4gSWwgYSB2b3F1IHF1ZWxxdWVzIGRvbm5lcyBjaGlmZnJlcyBjb21tZSB1bmUgYXVnbWVudGF0aW9uIGRlIDQlIGRlcyBhdHRlaW50ZXMgYXV4IGJpZW5zIGV0ICBsJ2ludGdyaXQgcGh5c2lxdWUgZGVzIHBlcnNvbm5lcyBldCB1bmUgYmFpc3NlIGRlcyB2b2xzICBsYSB0aXJlIGRlIDIyJSAoc2FucyBkb3V0ZSBwYXMgZGFucyBsZSAxOGUuKS4gTm91cyBuZSByZXByZW5kcm9ucyBwYXMgbGVzIGNoaWZmcmVzIGNvbmNlcm5hbnQgbGVzIHZlbnRlcyBzYXV2ZXR0ZSwgbm91cyBlbiBwYXJsaW9ucyBkaiBkYW5zIG5vdHJlIGFydGljbGUgZHUgMjIgbm92ZW1icmUuIEEgcHJvcG9zIGRlcyBtaW5ldXJzIHRyYW5nZXJzIGlzb2xzLCBpbCBhIGZhaXQgYWxsdXNpb24gIGxhIHJ1bmlvbiBkdSA2IGRjZW1icmUgc2FsbGUgU2FpbnQgQnJ1bm8gKHZvaXIgbm90cmUgYXJ0aWNsZSBkdSAxNCBkY2VtYnJlKS4gSWwgbidhIHBhcyBmYWl0IGwnaW1wYXNzZSBzdXIgbGVzIHByb2JsbWVzIGducnMgcGFyIGxlIHBobm9tbmUgbWlncmF0b2lyZSBldCBhIHJlcHJpcyBsZXMgcHJvcG9zIGR1IGdvdXZlcm5lbWVudCA6IGh1bWFuaXQgZXQgZHJvaXQgIGwnYXNpbGUgbWFpcyBnYWxlbWVudCBmZXJtZXQgYXZlYyBsJ2FwcGxpY2F0aW9uIGRlIGxhIHJnbGUgZGUgZHJvaXQgZXQgbm90YW1tZW50IGxhIHByb2NkdXJlIER1Ymxpbi4gSWwgc291aGFpdGUgcXVlIEZyYW5jZSB0ZXJyZSBkJ2FzaWxlIG9yZ2FuaXNlIG1pZXV4IGwnYWNjdWVpbCBkZXMgZGVtYW5kZXVycyBkJ2FzaWxlIGF1IDEyNywgYmQgZGUgbGEgVmlsbGV0dGUgcG91ciB2aXRlciBsZXMgZmlsZXMgZCdhdHRlbnRlIHF1aSBzZSBjb25zdGl0dWVudCBxdW90aWRpZW5uZW1lbnQgbGEgbnVpdCwgcGV1dCB0cmUgYXZlYyBkZXMgcHJpc2VzIGRlIHJkdi4gKHZvaXIgbm90cmUgYXJ0aWNsZSBkdSAyOSBzZXB0ZW1icmUpLgpJIHdhcyBib3JuIGFuZCByYWlzZWQgaW4gdGhlIE1ldHJvIGFyZWEgKEF1cm9yYSkuIExpdmVkIHRoZXJlIGFuZCBpbiBEZW52ZXIgaXRzZWxmIGZvciAzNiB5ZWFycyBiZWZvcmUgSSBtb3ZlZCB0byBiZSB3aXRoIG15IHdpZmUgaW4gYW5vdGhlciBzdGF0ZSAzIHllYXJzIGFnby4gCldlIHN0YXllZCBpbiBhIGhvc3RlbCBpbiB0aGUgdG93biBHb3JlbWUsIGFuZCBvdXIgcm9vbSB3YXMgaW4gYSBjYXZlLiBXZSBoYWQgYSBncmVhdCB0aW1lIHRoZXJlLCBtZXQgdG9ucyBvZiBjcmF6eSBwZW9wbGUsIGFuZCBodW5nIG91dCBlYWNoIG5pZ2h0IGF0IGEgY2F2ZSBiYXIgY2FsbGVkICJGbGludHN0b25lcyBCYXIiLiBEdXJpbmcgdGhlIGRheSB3ZSB2aXNpdGVkIHRoZSBzdXJyb3VuZGluZyBzaWdodHMsIGxpa2UgdGhlIGZhaXJ5IGNoaW1uZXkgcm9jayBmb3JtYXRpb25zLi4gCiJUd28gZGlmZmVyZW50IHBvcGVzLCB2ZXJ5IGltcG9ydGFudCB0byB0aGUgY2h1cmNoLCB3aWxsIGJlIGFubm91bmNlZCBzYWludCB0b2dldGhlciAgIGl0J3MgYSBiZWF1dGlmdWwgZ2VzdHVyZSwiIHNhaWQgdGhlIFJldi4gSm96ZWYgS2xvY2gsIHNwb2tlc21hbiBmb3IgUG9sYW5kJ3MgQ2F0aG9saWMgYmlzaG9wcywgd2hvIGxpa2UgbW9zdCBQb2xlcyB3YXMgb3ZlcmpveWVkIGJ5IHRoZSBuZXdzIG9mIEpvaG4gUGF1bCdzIGltcGVuZGluZyBjYW5vbml6YXRpb24gYnV0IGltcGF0aWVudCB0byBrbm93IHRoZSBkYXRlLgpTbyB1bmxlc3MgaXQgZXRjaGVkIGluIHN0b25lIGFuZCBzdG9yZWQgaW4gYW4gRWd5cHRpYW4gdG9tYiwgdGhlcmUgaXMgbm90IFJFQUwgYmFja3VwIG9mIGFueXRoaW5nLiAKTmV1cm9wc3ljaG9sb2dpYS5HdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDM6IERlY2lzaW9uIG1ha2luZyB1bmRlciBtZW50YWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4ganVuaW9yIGVsaXRlIGF0aGxldGVzUGFya2luLCBCLiBhbmQgV2Fsc2gsIFYuIDIwMTcuIEd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMzogRGVjaXNpb24gbWFraW5nIHVuZGVyIG1lbnRhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBqdW5pb3IgZWxpdGUgYXRobGV0ZXMuIGluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gYW5kIFBhcmtpbiwgQi4gKGVkLikgU3BvcnQgYW5kIHRoZSBCcmFpbjogVGhlIFNjaWVuY2Ugb2YgUHJlcGFyaW5nLCBFbmR1cmluZyBhbmQgV2lubmluZywgUGFydCBCIEVsc2V2aWVyLiAKIldlbGwsIHlvdSBrbm93LCB0aGUgd2F5IHRvIGEgbWFuJ3MgaGVhcnQgaXMgdGhyb3VnaCBoaXMgc3RvbWFjaCwgQ29ybmVsaWEsIiBleHBsYWluZWQgQ2FwdGFpbiBKaW0uClRoZSBtYW4gZXhpdGVkIHRoZSB0YW5rIHdoZW4gc2VjdXJpdHkgcGVyc3VhZGVkIGhpbSB0byBkbyBzbywgYnV0IHRoZW4ganVtcGVkIGJhY2sgaW4gYWdhaW4gYXMgYSBsYXJnZSBjcm93ZCB3YXRjaGVkLiBIZSBldmVudHVhbGx5IGxlZnQgdGhlIHRhbmsgZm9yIGdvb2QsIHdhbGtlZCBuYWtlZCB0aHJvdWdoIHRoZSBjcm93ZCwgZ290IGRyZXNzZWQgYW5kIHRoZW4gZXhpdGVkIHRoZSBhcXVhcml1bS4KMSwgSSBuZXZlciBzYWlkIHR1cm5pbmcgcG9pbnQgVVNBIHdhcyBsaWtlIElTSVMsIEkgYXNrZWQgeW91IHdobyBnZXRzIHRvIG1ha2UgdGhhdCBkZXRlcm1pbmF0aW9uLCBhbmQgd2hvIGdldHMgdG8gb3ZlcnNlZSB0aGF0IHBlcnNvbi4gCk9yLCBjb252ZXJzZWx5LCBJIGhlYXJkIGEgbG90IG9mLCAiSG9wZSB5b3UgY29tZSBiYWNrIGFsaXZlIiBvciAiWW91IGNhbiBib3Jyb3cgbXkgS2V2bGFyIHZlc3QiLiAKSmVkZXMgc2VyaXNlIENhc2lubyBpc3QgZGllc2JlemdsaWNoIG1heGltYWwgYmVtaHQgdW5kIHdlbmRldCBlaW5lbiBuaWNodCB1bndlc2VudGxpY2hlbiBUZWlsIHNlaW5lciBFbmVyZ2llIHVuZCBGaW5hbnptaXR0ZWwgenVtIFNjaHV0eiBkZXMgIEt1bmRlbiBhdWYuIERvY2ggc2NobGFmZW4gbmF0cmxpY2ggZGllICdic2FydGlnZW4gRWluZHJpbmdsaW5nZScgKG9kZXIgZGllIGVzIHdlcmRlbiB3b2xsZW4pIGluIGRpZSBEYXRlbmJhbmtlbiBkZXIgcyBhdWNoIG5pY2h0LiBVbmQgc28gaXN0IGVzIGVpbiBmb3J0d2hyZW5kZXMgJ0thdHonIHVuZCBNYXVzIFNwaWVsJyB6d2lzY2hlbiBkZW4gJ1BhcnRlaWVuJy4KV2UgZW50ZXIgdGhlIGhhbmQgYXMgdGhlIGZpcnN0IHJvdW5kIG9mIGJldHRpbmcgaGFzIGZpbmlzaGVkLCBhbmQgcGxheWVycyBhcmUgbm93IGRyYXdpbmcgY2FyZHMuIFRoZSBwb3QgaXMgYWxyZWFkeSBxdWl0ZSBsYXJnZSBhdCB0aGlzIHBvaW50LiAKTXkgZ2lybGZyaWVuZCAobm93IHdpZmUpIHRocmV3IG1lIGEgMjJuZCBiaXJ0aGRheSBwYXJ0eSBhbHNvIG15IGZyaWVuZCByZXR1cm5lZCBmcm9tIGFjdGl2ZSBkdXR5IGluIHRoZSBBaXIgRm9yY2Ugc28gaXQgd2FzIGxpa2UgaGFsZiBiaXJ0aGRheSBoYWxmIHdlbGNvbWUgYmFjayBwYXJ0eS4gTWFueSBtYW55IGRyaW5rcyB3ZXJlIGhhZCBhbmQgZXZlbnR1YWxseSBteSBnaXJsZnJpZW5kIHN0b3BwZWQgbWFraW5nIG1lIGRyaW5rcyBzbyBJIHN0YXJ0ZWQgbWFraW5nIG15IG93biBkcmlua3MuIEkgZXZlbnR1YWxseSBiZWdpbiB0byBmZWVsIGxpa2UgSSdtIGdvaW5nIHRvIHBhc3Mgb3V0IHNvIEkgZGVjaWRlIHRoYXQgSSdtIGdvaW5nIHRvIGJlZCA2IDcgaG91cnMgaW50byB0aGUgcGFydHkuLiAKRmluYWxseSB0byBteSBwYXN0IGJvc3NlcyBjb2xsZWN0aXZlbHk6IEkgdGhhbmsgR29kIGZvciB0aGUgbGVzc29ucyBJIGxlYXJuZWQgZnJvbSB5b3UsIGFsbCBvZiB5b3UuIEkgZG9uJ3QgaGF0ZSBhbnlvbmUgb3Igd2lzaCBhbnlvbmUgaGFybS4gSSB3aXNoIHRoaXMgaWRlYSBoYWQgY29tZSB0byBtZSB3aGVuIEkgd2FzIHdhbGtpbmcgb3V0IHRoZSBkb29yLiAKVGhlIER1ZmZ5IHF1ZXN0aW9ucyBjb250aW51ZWQgc28gbXVjaCBzbyB0aGF0IEhhcnBlciwgd2hvIHdlYXRoZXJlZCB0aGUgYmFycmFnZSB3aXRoIGEgdGlnaHQgc21pbGUgYW5kIGFuIGltcGVydmlvdXMgcG9rZXIgZmFjZSwgZXZlbnR1YWxseSB0b29rIHRvIGFuc3dlcmluZyBxdWVzdGlvbnMgaGUgaGFkbiBiZWVuIGFuc3dlcmluZy4KQWxsIHlvdSBhcmUgZG9pbmcgaXMgc3RpcnJpbmcgdXAgbW9yZSBvZiB0aGUgc2FtZSBzdHVmZiB0aGF0IHlvdSBzZWVtIHRvIGJlIGNyaXRpY2l6aW5nLiAKQmFsYW5jZSB0aGlzIHdpdGggZWFybHkgb3IgbGF0ZSB3ZWF0aGVyIHBhdHRlcm5zLCB3aGljaCBjYW4gdmFyeSB1cCB0byB0aHJlZSB3ZWVrcy4gCk5vIGRvdWJ0IHRoYXQgdGhlIGZhY3QgdGhhdCB0aGVzZSB2aXJhbCB2aWRlb3MgcGFpbnRlZCBDaGluZXNlIHBlb3BsZSBpbiBhIGJhZCBsaWdodCBhcyBhIGNvbGxlY3RpdmUgY29udHJpYnV0ZWQgdG8gdGhlIHN1cHBvcnQgb2YgdGhpcyBzY2hlbWUuLiAKVGhleSBhbHdheXMgZ2V0IGludG8geW91ciBibG9vZCBmaXJzdCAodGhyb3VnaCB0aGUgSVYgb3IgYWx2ZW9sYXIgbWVtYnJhbmVzKS4gSWYgdGhlIGFuZXN0aGV0aWMgaGFzIGhpZ2ggYmxvb2Qgc29sdWJpbGl0eSwgdGhlbiB5b3UgY2FuIGRpc3NvbHZlIGEgTE9UIG9mIGFuZXN0aGV0aWMgaW4gdGhlIGJsb29kIGJlZm9yZSBpdCBiZWNvbWVzICJzYXR1cmF0ZWQiIGFuZCBzdGFydHMgcmVkaXN0cmlidXRpbmcgdG8gdGhlIGJyYWluIGFuZCBmYXR0eSB0aXNzdWVzLiBJZiB0aGUgYW5lc3RoZXRpYyBoYXMgbG93IGJsb29kIHNvbHViaWxpdHksIHRoZW4gaXQgcmFwaWRseSBzYXR1cmF0ZXMgdGhlIGJsb29kIGFuZCByZWRpc3RyaWJ1dGVzIHRvIGJyYWluL2ZhdC4gClRoZXkgd2VyZSB0aGUgY29vbGVzdCBidW5uaWVzLiBJZiBJIGNhbiByZW1lbWJlciBob3cgdG8gbWFrZSB0aGVtLCBJIHdpbGwgZ2V0IHRoZW0gdXAgYW5kIHNob3cgeW91IGFsbCwgYnV0IG1haW5seSwgdGhleSBhcmUgZG9uZSBqdXN0IGxpa2UgYW55IGRvbGwuLiAKVGhlc2UgYXJlIHBocmFzZXMgdGhhdCBJIGRvbiBoZWFyIGFueXdoZXJlIGVsc2UgZXhjZXB0IEtpbmcgYm9va3MgYW5kIHRoZXkgYXJlIHVzdWFsbHkgdXNlZCBieSBhIE1haW5lIGNoYXJhY3Rlci4gClNoYXZpbmcgZm9yIHN1cGVyaW9yIGNsb3NlbmVzcywgY29tZm9ydCwgYW5kIGNvbnZlbmllbmNlLiBUaGUgQ29uYWlyIHBlcnNvbmFsIGdyb29tZXIgaXMgZXJnb25vbWljYWxseSBkZXNpZ25lZCB0byBmaXQgY29tZm9ydGFibHkgaW4geW91ciBoYW5kIGZvciBpbXByb3ZlZCBjb250cm9sIGFuZCBmbGV4aWJpbGl0eS4gCk1hc3NhZ2UgdGhlcmFwaXN0cyBhbHNvIG5lZWQgbWFudWFsIGRleHRlcml0eSwgYSBzdGVhZHkgaGFuZCBhbmQgdGhlIGFiaWxpdHkgdG8gY29vcmRpbmF0ZSBhY3Rpdml0aWVzIGludm9sdmluZyBtb3JlIHRoYW4gb25lIGxpbWIsIHN1Y2ggYXMgYm90aCBhcm1zIG9yIGJvdGggaGFuZHMuLiAKVG9wIFRlY2ggQXQgQ0VTIDIwMTZDRVMgMjAxNkxBUyBWRUdBUywgTlYgICBKQU5VQVJZIDA3OiBTa2V0Y2hlcnMgR2FtZSBLaWNrcyAyLCB0aGUgd29yZCdzIGZpcnN0IHJlbW90ZSBjb250cm9sIGdhbWUgc2hvZSwgaXMgZGlzcGxheWVkIGF0IENFUyAyMDE2IGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA3LCAyMDE2IGluIExhcyBWZWdhcywgTmV2YWRhLiBUaGUgVVNEIDY1LCBiYXR0ZXJ5IHBvd2VyZWQgc2hvZXMgZmVhdHVyZSBhIGxpZ2h0IGNoYXNlIGdhbWUgb24gb25lIHNob2UgYW5kIGEgcmVtb3RlIGNvbnRyb2wgc3RvcmVkIGluIHRoZSBvdGhlci4gS2lkcyBjYW4gcHVzaCBsaWdodHMgb24gdGhlIHNob2UgZGlyZWN0bHkgb3IgdXNlIHRoZSByZW1vdGUgdG8gcGxheSBhbG9uZy4gQ0VTLCB0aGUgd29ybGQncyBsYXJnZXN0IGFubnVhbCBjb25zdW1lciB0ZWNobm9sb2d5IHRyYWRlIHNob3csIHJ1bnMgdGhyb3VnaCBKYW51YXJ5IDkgYW5kIGZlYXR1cmVzIDMsNjAwIGV4aGliaXRvcnMgc2hvd2luZyBvZmYgdGhlaXIgbGF0ZXN0IHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0byBtb3JlIHRoYW4gMTUwLDAwMCBhdHRlbmRlZXMuIChQaG90byBieSBFdGhhbiBNaWxsZXIvR2V0dHkgSW1hZ2VzKQpCYXJiYXJhIFdhbHRlcnMgaGFkIGFic29sdXRlbHkgbm8gaWRlYSB3aGF0IHdhcyBoYXBwZW5pbmcgYXMgd2VsbCBhcyBtYW55IHBlb3BsZSB5b3UganVzdCBsaXN0ZWQuLiAKTG9yc3F1ZSBub3MgY29udGVtcG9yYWlucyBhdXJvbnQgcmFsaXMgcXUnZW4gZHBpdCBkJ3VuZSBsaWJyYXRpb24gYXBwYXJlbnRlIChleCBsZXMgR2F5cyBQcmlkZSBwb3VyIGNpdGVyIHVuIGV4ZW1wbGUgZXh0cm1lKSBlbiByYWxpdCBzdXIgbGUgcGxhbiAiY3VsIiBjJ2VzdCBsYSAiY2F0YSIgdGFudCBjdCBmZW1tZSBxdWUgY3QgbWVjLkwnYXV0aXNtZSBzZXh1ZWwgZ2FnbmUgZHUgdGVycmFpbkplIGNvbm5haXMgYmllbiBsZSBjdCAiaG9tbyIgcG91ciBsJ2F2b2lyIG9ic2VydiBkZXB1aXMgbGEgZmluIGRlcyBhbm5lcyA2MCwgbGEgcHJvZ3Jlc3Npb24gZGUgbCdhdXRpc21lIGV0IGQndW5lIHZyaXRhYmxlIGltcHVpc3NhbmNlIGNoZXogbGVzIGpldW5lcyBmYWl0IHBldXIuIApDcmVhbXkgc21vb3RoIGFuZCBib2xkLCB0aG91Z2ggbm90IG92ZXJseSBjb21wbGV4LiAKWW91IHdpbGwgbWFrZSBhIHRvbiBvZiBtaXN0YWtlcyBhcyB5b3UgbGVhcm4sIGJ1dCBqdXN0IGRvbiBiZSB0b28gaGFyZCBvbiB5b3Vyc2VsZiBhbmQgdHJ5IGFuZCBhbmFseXplIHlvdXIgZ2FtZSBvYmplY3RpdmVseSBzbyB5b3UgY2FuIGNvbnRpbnVlIHRvIGdldCBiZXR0ZXIuIApXaXRoIHJlZ2FyZCB0byB0aGUgd2hlbiBhbmQgZm9yIGhvdyBsb25nLCBJIHRoaW5rIEkgcmlnaHQgaW4gc2F5aW5nIHRoYXQgaXQgY291bGRuIGJlIGludHJvZHVjZWQgZm9yIDIwMTcuIApZb3Ugd2lsbCBmcmVxdWVudGx5IHNlZSBkZWVwc3RhY2tlZCBmaXNoIHJhaXNlL0dJSSBmb3IgMkJJIG9yIG1vcmUgd2l0aCB3ZWFrIDIgcGFpcnMsIHNvbWV0aW1lcyBldmVuIGEgbWVkaW9jcmUgdG9wIHBhaXIsIGFuZCBzb21ldGltZXMganVzdCB3aXRoIHNvbWV0aGluZyBpbnNhbmUgbGlrZSBhY2UgaGlnaCAoc29tZSBvZiB0aGVtIGp1c3QgZmFsbCBpbiBsb3ZlIHdpdGggQUsgb3IgQVEgYW5kIHdpbGwgbGl0ZXJhbGx5IGp1c3QgY2FsbCBvZmYgdGhlaXIgd2hvbGUgc3RhY2sgb3IgZXZlbiBqYW0gb24geW91IGV2ZW4gd2hlbiBpdCBkb2VzbiBpbXByb3ZlIGFuZCBpcyBqdXN0IEEgaGlnaCkuLiAKSW5zdGVhZCwgaXQncyBhIHByb2NlZHVyYWwgYWJvdXQgaG93IGEgc3RvcnkgY29tZXMgYWJvdXQgYW5kIGlzIGV4ZWN1dGVkIGJ5IHRyYWluZWQgcHJvZmVzc2lvbmFscy4gTm93LCB3aXRoIFRydW1wIGluIHRoZSBXaGl0ZSBIb3VzZSwgdGhlIG1lZGlhIGlzIG1vcmUgc2NydXRpbml6ZWQgdGhhbiBldmVyLiAKU3RhcnJpbmc6IE93ZW4gV2lsc29uLCBNYXJpb24gQ290aWxsYXJkLCBSYWNoZWwgTWNBZGFtcywgVG9tIEhpZGRsZXN0b24sIEthdGh5IEJhdGVzLCBDb3JleSBTdG9sbCwgTWljaGFlbCBTaGVlbiwgQWxsaXNvbiBQaWxsLCBBZHJpZW4gQnJvZHkKSSB3b24ndCBzYXkgdGhhdCBJIGhhdGUsIGJ1dCBJIGNhbiBmb3Igc3VyZSBzYXkgdGhhdCBJIGRvbid0IGxpa2UgaXQuIApIZXJlIGFyZSB0aGUgc29ydHMgb2YgY3JpdGljaXNtcyBsZXZlbGVkIGF0IHVzLiAKVGhpcyBSZXNlYXJjaGVyIGNvdWxkIGhhdmUgZHJvcHBlZCB1cyBhbiBlbWFpbCByaWdodCBhdCB0aGUgYmVnaW5uaW5nIHRvIHNheSwgIkhleSwgSSd2ZSBub3RpY2VkIGEgcmVhbCBwcm9ibGVtLCBhIHZ1bG5lcmFiaWxpdHkgd2l0aCBvbGQgYWNjb3VudHMuIApNaXJyb3JzIGxldCB5b3UgbW92ZSB0aHJvdWdoIHRpbWUuIFRoZSBnb3Zlcm5tZW50IG1vbml0b3JzIHBlb3BsZSwgdGhleSBwYXkgcGVvcGxlIHRvIGJlIHlvdSByZWxhdGl2ZXMgYW5kIHRoZXkgcHV0IGRydWdzIGluIHlvdXIgZm9vZCBhbmQgdGhleSBmaWxtIHlvdS4gVGhlcmUncyBtZXNzYWdlcyBpbiBldmVyeSBnYW1lLiAKVGhlcmUgd2VyZSBhYm91dCAyMCBmaXNoYm93bCBnaXJscyBhbmQgMiBzaWRlbGluZXJzLiBJIGRpZG4gY2hlY2sgdGhlIHNpdHVhdGlvbiB1cHN0YWlycy4gCkludGVybmV0IHBva2VyIHNpdGVzIGFsc28gb2ZmZXIgYSByYW5nZSBvZiBsaW1pdHMgc28gdGhhdCB0aGUgYmVnaW5uaW5nIHBsYXllciBjYW4gYWN0dWFsbHkgc3RhcnQgYmV0dGluZyBwZW5uaWVzLiBOb3Qgb25seSBpcyB0aGUgYmV0dGluZyBlYXN5LCBidXQgc28gaXMgdGhlIGFjY2Vzcy4gVW5saWtlIGEgdGFibGUgZ2FtZSwgYW4gb25saW5lIGdhbWUgY2FuIGJlIGZvdW5kIDI0IGhvdXJzIGEgZGF5IGZyb20gYW55d2hlcmUgaW4gdGhlIHdvcmxkIHRoYXQgdGhlcmUgaXMgYSBjb21wdXRlciBhbmQgYW4gSW50ZXJuZXQgY29ubmVjdGlvbi4uIApJIGx1Y2t5IHRoYXQgcGVvcGxlIGdpdmUgbWUgbGF0aXR1ZGUuIApXb3JraW5nIHdpdGggdGhhdCByYW5nZSBvZiBoYXRyZWRzIHByZXR0eSB0byBub3QgcHJldHR5LCBjb29raWVzIHRvIG5vIGNvb2tpZXMsIHN0dXBpZCB0byBzbWFydCBmZW1hbGUgcG9saXRpY2lhbnMgcmVhbGx5IGRvbid0IGhhdmUgYXMgbXVjaCBvZiBhIGNoYW5jZSB0byBiZSBqdWRnZWQgb24gdGhlaXIgaWRlYXMuIERvIHRoZXk/LiAKSG93ZXZlciwgbWFraW5nIG1vbmV5IGZyb20gdGhlc2UgdGhpbmdzIGlzIG5vdCBhbHdheXMgZWFzeS4gClJlbGF0ZWQgbGlua3M6IGJhc2ViYWxsIGhpZ2hlc3Qgc2NvcmluZyBnYW1lIHlhbWFoYSByb3lhbCBzdGFyIHZlbnR1cmUgcGxheSBvbmxpbmUgZnJlZSBwb2dvIGdhbWVzIGNhc2lubyBzdXIgaW50ZXJuZXQgYWlyIHBsYW4gZ2FtZSBiYWNjYXJhdCBjcnlzdGFsIGJhcmJpZSBkcmVzcyB1cCBnYW1lcyBmb3IgZ2lybHMgcGxheSBrZXlib2FyZCBjcmlja2V0IGdhbWUgZnJlZSBvbiBmbGFzaCBwbGF5ZXIgY3J5IHdvbGYgZ2FtZSBmcmVlIG9ubGluZSByZWFkaW5nIGdhbWVzIHdpbiBmb3IgbGlmZSBsb3R0ZXJ5IHNlbmVjYSBpbmRpYW4gY2FzaW5vIGJsb3hvcnMgZ2FtZSByb3lhbCBjYXJpYmJlYW4gc2VyZW5hZGUgb2Ygc2VhIGFic29sdXRlIHBva2VyIHBhc3N3b3JkcyBmcmVlIG9ubGluZSBnYW1lcyBhbmltZSBvbmUgcGllY2UgaGVudGFpIGdhbWUgbWFuYWdlbWVudCBnYW1lcyBvbmxpbmUgZnJlZSBzbG90cyA0IHUgYmJjIGJiYyBnYW1lcyBnZW5lcmFsIG1hbmFnZXIgdmRhcmEgdmVnYXMgYW1hbmRhIGJlamV3ZWxlZCAyIGRlbHV4ZSBmcmVlIGdhbWUgYnVpbGQgeW91ciBvd24gY2FyIGdhbWVzIG9ubGluZSBhbGFza2EgcmVzaWRlbnQgYm9udXMgZHJpdmluZyB0cmFpbiBnYW1lcyBmcmVlIDNkIG11bHRpcGxheWVyIGFkdmVudHVyZSBnYW1lIGNhciBnYW1lcyB0b3Agc3BlZWQgaW50ZXJhY3RpdmUgbGFuZGZvcm0gZ2FtZSBwbGF5IGRlc2lnbmluZyBnYW1lcyBvbmxpbmUgdHJvcGh5IHBpY3MgaHVudGluZyBiaWcgZ2FtZSBhbmdlbCBmYW4ga2lsbGVkIGR1cmluZyBmaWdodCBhZnRlciBnYW1lCkFmdGVyIHRoYXQga2ljayBzdGFydCwgdGhlIGJ1c2luZXNzIGhhcyBuZXZlciBsb29rZWQgYmFjay4uIApJdCB3YXMgc28gYmFkIEkgY291bGQgYmFyZWx5IHRhbGsuIApUbDtkciAgIDEpIG1heWJlIDIpIGtpbmRhIHRpZ2h0LCBraW5kYSBpbmZsYW1lZCBtdXNjbGVzIDMpIHlvdSBnb3QgYmVhdCB1cEkgaGF2ZSB3b25kZXJlZCB0aGUgc2FtZSB0aGluZy4gCk15IGdpcmxmcmllbmQgYXQgdGhlIHRpbWUgd2FzIG5vdCBoYXBweSBkdWUgdG8gdmV0ZXJpbmFyeSBmZWVzLiBJIHN0aWxsIGZlZWwgZ29vZCB0byB0aGlzIGRheS4uIApQb3VyIGxlIGNvbGxlY3RpZiBkZXMgcml2ZXJhaW5zIGR1IGJvdWxldmFyZCBCYXJicywgbGVzIG9jY3VwYXRpb25zIHN1ciBsZXMgdHJvdHRvaXJzIGV0IGRldmFudCBsZXMgaW1tZXVibGVzIHNlIHByb2xvbmdlbnQgZHNvcm1haXMgbGUgc29pciwgZXQgZHJhbmdlbnQuIApJIHdpbGwgYWdyZWUgdGhhdCBtb3N0IGNvbnNlcnZhdGl2ZXMgaGF2ZSBldm9sdmVkIGludG8gY29ycG9yYXRlIGNyb25pZXMgYnV0IHRoZXJlIGFyZSBhIGZldyB0cnVlIGNvbnNlcnZhdGl2ZXMgb3V0IHRoZXJlIHN0aWxsIGFuZCB0aGV5IG5lZWQgdG8gY29tZSB0b2dldGhlciB0byByZSB0YWtlIHRoZSBjb3JydXB0IEdPUC4gSSB3b3VsZCBhbHNvIGFyZ3VlIHRoYXQgb3VyIGN1cnJlbnQgRGVtb2NyYXRpYyBwYXJ0eSBpcyBwYXJ0bHkgY29udHJvbGxlZCBieSBjb3Jwb3JhdGlvbnMgYXMgd2VsbC4gSnVzdCBsb29rIGF0IHRoZSBpZGVvbG9naWNhbCBkaWZmZXJlbmNlcyBiZXR3ZWVuIFNhbmRlcnMgYW5kIENsaW50b24gICBvbmUgZ2xhZGx5IHRvb2sgbGFyZ2UgZG9uYXRpb25zIGZyb20gY29ycG9yYXRpb25zLCB0aGUgb3RoZXIgZGlkIG5vdC4KSSBmaW5kIGl0IGluY3JlZGlibGUgdGhhdCBhbGwgdGhlc2UgY29tcGFuaWVzIGhhdmUgbG9zdCB0aGVpciBGb3J0dW5lIDUwMCBzdGF0dXMuIApXaGF0IGRvZXMgdGhpcyBtZWFuPyBKdXN0IGJlY2F1c2UgeW91IG5ldmVyIHN1Y2tlZCBvdXQsIGRvZXNuIG1lYW4geW91IHdlcmVuIGx1Y2t5LiBHZXR0aW5nIGdvb2QgaGFuZHMgd2hlbiB5b3VyIG9wcG9uZW50cyBoYXZlIGdvb2QgYnV0IHNsaWdodGx5IHdvcnNlIGhhbmRzIGlzIGx1Y2t5LiBCbHVmZmluZyB3aGVuIHlvdXIgb3Bwb25lbnRzIGRvbiBoYXZlIGFueXRoaW5nIGlzIGFsc28gbHVja3kuIEhlbGwsIHNvbWV0aW1lcyB5b3UgaGF2ZSBhIHBsYXllciBhdCB5b3VyIHRhYmxlIHdobyBwbGF5cyB3aGVuIGhlIGRyaW5rcyBldmVyeSBmZXcgbW9udGhzLiBUaGF0IGluIGl0c2VsZiBpcyBsdWNreS4gSnVzdCBiZWNhdXNlIHRoZXJlIHdlcmUgbm8gb2J2aW91cyBzcGlrZXMgb2YgbHVjaywgZG9lc24gbWVhbiB0aGF0IHlvdXIgcmVzdWx0IHdhcyB0aGUgYXZlcmFnZSByZXN1bHQgaWYgeW91IHdlcmUgdG8gcmVwZWF0IHRob3NlIGRheXMgMTAwMCB0aW1lcy4KSSBsaXRlcmFsbHkgdHJpZWQgZXhwbGFpbmluZyB0aGlzIHRvIG15IHBhcmVudHMgYSBmZXcgbW9udGhzIGFnby4gVGhlIGVsZWN0b3JhbCBjb2xsZWdlIGRvZXNuJ3QgZmF2b3IgInJ1cmFsIiB2cyAidXJiYW4iLCB5ZXMgc21hbGxlciBzdGF0ZXMgaGF2ZSBzb21ld2hhdCBtb3JlIGluZmx1ZW5jZSB0aGFuIGxhcmdlciBzdGF0ZXMgcGVyIHZvdGVyLCBidXQgaXQgcmVhbGx5IGFsbCBoaW5nZXMgb24gdGhlIGJhdHRsZWdyb3VuZCBzdGF0ZXMuIEFuZCBmdXJ0aGVyIGl0IGRvZXNuJ3QgbmVjZXNzYXJpbHkgZmF2b3Igb25lIHBhcnR5IG92ZXIgdGhlIG90aGVyLCBzb21ldGltZXMgaXQgZmF2b3JzIG9uZSwgc29tZXRpbWVzIHRoZSBvdGhlciwgYW5kIGlmIFRleGFzIHdlcmUgdG8gYmUgc2xpZ2h0bHkgbW9yZSBEZW1vY3JhdCBsZWFuaW5nLCB0aGUgRUMgd291bGQgZmF2b3IgRGVtb2NyYXRzLCBhbmQgdGhleSB0b28gY291bGQgd2luIHRoZSBFQyB3aXRob3V0IHdpbm5pbmcgdGhlIHBvcHVsYXIgdm90ZS4uIApJZiB5b3UgaGF2ZSBwdXJjaGFzZWQgYSBiZXR0ZXIgcHJvZHVjdCwgeW91IGRlZmluaXRlbHkgaGF2ZSB0aGUgb3B0aW9uIHRvIHVzZSB0aGF0IHByb2R1Y3QgZm9yIGEgbG9uZyB0aW1lLiAKVGhpcyB3YXMgYW1hemluZyBmb3IgbWFuYWdpbmcgb2lsIHByb2R1Y3Rpb24gYW5kIGNsb2dnZWQgcG9yZXMsIGJ1dCBteSBza2luIHdhcyBtaXNzaW5nIHRoZSB0cmV0IGF0IHRoaXMgcG9pbnQuIApZb3UgZ290dGEgbG9vayBhdCB0aGUgYmlvLCBwc3ljaG8sIHNvY2lhbCwgYW5kIHNwaXJpdHVhbCBkaW1lbnNpb25zIHRvIHVuZGVyc3RhbmQgdGhlIGZ1bGwgc2NvcGUgb2YgaHVydCB0byBldmVuIGF0dGVtcHQgdG8gdW5kZXJzdGFuZCBhIHN1aWNpZGUsIGFuZCBldmVuIHRoZW4sIHRoZXJlIHdpbGwgYWx3YXlzIGJlIHF1ZXN0aW9ucy4uIApUaGUgbmV4dCBwb2VtLCBUaGUgTG9zdCBBcnQgb2YgS2lzc2luZyBhIEdvdmVybm1lbnQsIGRlbHZlcyBmdXJ0aGVyIGludG8gdGhlIGNvcnB1cyBib3RoIGxpdGVyYWxseSwgYW5kIGZpZ3VyYXRpdmVseSwgYXMgVGFpdG8gcmVmZXJzIHRvIG1vdXRocyAoeCAzKSwgbGlwcywgdGVldGgsIHRvbnNpbHMsIGZvcmtlZCB0b25ndWVzLCBleWVzLCBzY3JlYW1zLiAKV2UgcmVjb25uZWN0ZWQgYWZ0ZXIgU2Fsb21vbiBCcm90aGVycywgc29tZSB0aW1lIGRvd24gdGhlIHJvYWQuIEkgdXNlZCB0byBjb21lIG91dCB0byBBc3BlbiBpbiBzdW1tZXJzLiAKSGFycm9kIHBsZWFkZWQgZ3VpbHR5IGluIFdvbGxvbmdvbmcgTG9jYWwgQ291cnQgeWVzdGVyZGF5IHRvIHR3byBjaGFyZ2VzIG9mIGZyYXVkdWxlbnRseSBjb252ZXJ0aW5nIG1vbmV5IGFzIGEgbGljZW5zZWUsIHJlbGF0aW5nIHRvICQxLjQ2IG1pbGxpb24gdGFrZW4gZnJvbSB0aGUgYWdlbmN5J3MgcmVudCB0cnVzdCBhY2NvdW50IGFuZCAkNjUsNTAwIHRha2VuIGZyb20gdGhlIHNhbGVzIHRydXN0IGFjY291bnQuIApEdXJpbmcgdGhlIG9uZ29pbmcgc2FnYSBvdmVyIHRoZSBzZWxlY3Rpb24gb2YgYSBuZXcgY29tbWlzc2lvbmVyIG92ZXIgdGhlIHBhc3QgdHdvIGRheXMsIHdlJ3ZlIGhlYXJkIGEgcHJlbWllciBhbmQgYSBzZW5pb3IgVG9yb250byBwb2xpY2Ugb2ZmaWNlciBzdGF0ZSBwdWJsaWNseSB0aGF0IHRoZSBPbnRhcmlvIFByb3ZpbmNpYWwgUG9saWNlIG5lZWRzIGEgY3VsdHVyYWwgY2hhbmdlIGF0IHRoZSB0b3AuIFdoZXJlIGlzIHRoYXQgY29taW5nIGZyb20/IEluIG15IHZpZXcsIGl0J3MgYWxsIGFib3V0IHRoZSBwdXJlIGxvYXRoaW5nIG9mIG9yZ2FuaXphdGlvbmFsIGNoYW5nZS4gQ2hhbmdlIGlzIHN0cmVzc2Z1bCBmb3IgZW1wbG95ZWVzLiBJdCdzIHdvcmsgYW5kIGl0J3MgZXhoYXVzdGluZy4gTW9zdCBvcmdhbml6YXRpb25zICAgaW5jbHVkaW5nIHBvbGljZSBzZXJ2aWNlcywgYXJlIGltbWVyc2VkIGluIGEgY3ljbGUgb2YgY2hhbmdlIHRoYXQgc2VlbWluZ2x5IG5ldmVyIGVuZHMsIGFuZCBpdCBsaWtlbHkgbmV2ZXIgd2lsbC4gVGhlIGVudmlyb25tZW50LCB0ZWNobm9sb2d5LCBjb21tdW5pdHkgZHluYW1pY3MgYW5kIGJ1ZGdldGFyeSBwcmVzc3VyZXMgZG8gIm1vcmUgd2l0aCBsZXNzIiBhbmQgZG8gZXZlcnl0aGluZyB3aXRoIG5vdGhpbmcuIE5vdCBvbmx5IGlzIHRoZXJlIG5vICJuZXcgbm9ybSwiIHRoZXJlIHNpbXBseSBpcyBubyBsb25nZXIgYSBub3JtIG9mIGFueSBraW5kLiBPbmdvaW5nIGNoYW5nZSBpcyBpbmV2aXRhYmxlLgpUaGVzZSBzb25ncyBhcmUgYXZhaWxhYmxlIG9uICJUaGUgRmFtZSwiR2FHYSdzIGZpcnN0IGFsYnVtLiB2ZXJzaW9uLiBZb3UgY2FuIGdldCBpdC90aGVtIGZyb20gaVR1bmVzLiAzNCkgQWdhaW4sIEFnYWluIC4gQ2FuIGJlIGZvdW5kb24gWW91dHViZS4gMzYpIEx1diBVU3VtIChieSBDSiBIb2xsYW5kIGZlYXQuIExhZHkgR2FHYSkuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzc29uZy4gMzcpIE5vIFdheSAuIEFzc3VtZWRvdXR0YWtlIGZyb20gIlRoZSBGYW1lIE1vbnMgZXIuIiBDYW4gYmUgZm91bmQgb24gWW91dHViZS4gCldlJ3JlIG5vdCBzYXlpbmcgaXQncyBnb29kIHRoYXQgdGhleSByZWxlYXNlIGJyb2tlbiBnYW1lcyAgIHdlJ3JlIGp1c3Qgc2F5aW5nIHRoYXQgeW91J2QgZG8gaXQsIHRvby4uIApCdXQgaXNvbGF0aW5nIHRoZSB0cm91YmxlZCBidXNpbmVzcyBvZiBTTkMgd291bGRuIGJlIGFzIHN0cmFpZ2h0Zm9yd2FyZCBhcyB0aGUgZGl2aXNpb24gb2YgR2FwIGFuZCBPbGQgTmF2eSwgYW5kIHdvdWxkIHJlcXVpcmUgc29tZSBjcmVhdGl2aXR5IHRvIG1hbmFnZSB0aGUgcmlnaHRzIGFuZCBkZXNpcmVzIG9mIGFsbCBzdGFrZWhvbGRlcnMsIGFjY29yZGluZyB0byBtdWx0aXBsZSBNIHNwZWNpYWxpc3RzIHdobyBzcG9rZSBvbiBjb25kaXRpb24gb2YgYW5vbnltaXR5IGJlY2F1c2UgdGhlaXIgZmlybXMgbWF5IGRvLCBvciBoYXZlIGRvbmUsIGJ1c2luZXNzIHdpdGggU05DLiAKVGhlIGNhc2lubyB3b3VsZCBtdWNoIHJhdGhlciBoYXZlIHRhYmxlcyBmdWxsIG9mIHRoZXNlIHBsYXllcnMsIHRoZXkgcGxheSBiaWdnZXIgcG90cyBhbmQgaW4gdHVybiBwYXkgbW9yZSByYWtlLiBXaGVuIHRoZSB0YWJsZSBpcyBmdWxsIG9mIHRoZW0gdGhleSBhbHNvIGhhdmUgYSBtdWNoIGJldHRlciBjaGFuY2Ugb2Ygd2lubmluZyBhZ2FpbnN0IG90aGVyIHBsYXllcnMgd2hpY2ggbWVhbnMgbW9yZSBtb25leSBpbiB0aGUgcG9ja2V0cyBvZiB0aGUgcGVvcGxlIG1vc3QgbGlrZWx5IHRvIGdpdmUgaXQgYmFjayB0byB0aGUgY2FzaW5vLi4gCjM3KSBObyBXYXkgLiAKQXQgdGhhdCBzdGFnZSBJIGZlYXJlZCB0aGF0IEkgbWlnaHQgZ2V0IHJhcGVkIGFzIEkgd2FzIGEgMTMgeWVhciBvbGQgZ2lybC4gClNsb3dQYXR0ZXJuICAzIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KNiBvZiB0aGUgMTYgb2YgdGhlIENsaW5pY2FsIHByYWN0aWNlIGd1aWRlbGluZXMgaGFkIERvY3RvcnMgb2YgQ2hpcm9wcmFjdGljIGFzIHBhcnRpY2lwYXRpbmcgcGFuZWxpc3RzLgpMZWZ0IDQgZGVhZCAyIHByb2R1Y3QgY29kZSBrZXlnZW4gY3JhY2ttYWdpYyByZWFsaXNtIGEgdHlwb2xvZ3kgcGRmIGRvd25sb2FkZ29sa2VzYmV0dGVybmV0IHByZW1pdW0gYXBrIGNyYWNrIGRvd25sb2FkaW5zdG1hbmtLZWxieSBUcmFpbmluZyA6IExpZ2h0IFNoYXBpbmcgVG9vbHMgMWppZ2FyIDE5OTIgbW92aWUgbXAzIHNvbmdzIGRvd25sb2FkaW5zdG1hbmsKSXQgY29taW5nIGFsb25nIHdpdGggYSBydWxlIHJldmlzaW9uIHRoYXQgaW5jb3Jwb3JhdGVzIHRoYXQgc28gd2Ugd2FpdGluZyB1bnRpbCBib3RoIGFyZSBjb21wbGV0ZS4gCkhlIHdhcyBjZXJ0YWlubHkgbmF0dGlseSBkcmVzc2VkLCBidXQgaGlzIHJlc3BvbnNlIHRvIHRoZSBicmV3aW5nIGNyaXNpcyBmb3IgdGhlIGVtcGxveWVlcyB3aG8gcmVjZWl2ZWQgdGhlICQxNjUgbWlsbGlvbiBkb2xsYXJzIGluIGJvbnVzZXMgaXMgdG8gZW5jb3VyYWdlIHRoZW0gdG8gZ2l2ZSBoYWxmIG9mIGl0IGJhY2suLiAKVGhpcyBzdWJtaXNzaW9uIGhhcyBiZWVuIHJlbW92ZWQgYmVjYXVzZSBpdCB2aW9sYXRlcyB0aGUgcnVsZSBvbiBwb2xsIHR5cGUgcXVlc3Rpb25zLiBUaGVzZSBxdWVzdGlvbnMgZG8gbm90IGxlbmQgdGhlbXNlbHZlcyB0byBhbnN3ZXJzIHdpdGggYSBmaXJtIGZvdW5kYXRpb24gaW4gc291cmNlcyBhbmQgcmVzZWFyY2gsIGFuZCB0aGUgcmVzdWx0aW5nIHRocmVhZHMgdXN1YWxseSB0dXJuIGludG8gbW9uc3RlcnMgd2l0aCBlbm9ybW91cyBzcGVjdWxhdGlvbiBhbmQgbGl0dGxlIGZvY3Vzc2VkIGRpc2N1c3Npb24uIFF1ZXN0aW9ucyBhYm91dCB0aGUgIm1vc3QiLCB0aGUgIndvcnN0Iiwgb3Igb3RoZXIgdmFsdWUganVkZ21lbnRzIHVzdWFsbHkgbGVhZCB0byB2YWd1ZSwgc3ViamVjdGl2ZSwgYW5kIHNwZWN1bGF0aXZlIGFuc3dlcnMuIEZvciBmdXJ0aGVyIGluZm9ybWF0aW9uLCBwbGVhc2UgY29uc3VsdCB0aGlzIFJvdW5kdGFibGUgZGlzY3Vzc2lvbi4KUGFyIGNvbnRyZSB1biB2aW9sZW50IHRyZW1ibGVtZW50IGRlIHRlcnJlIGF1IE1pbm9lbiByZWx2ZSBsYSBDcnRlIGRlIDYuNTAgbSBldCBzYXV2ZSBkZSBsIGV0IGRlIGxhIHZhc2UgYm9uIG5vbWJyZSBkZSBzaXRlcy4gQXUgc3VkIGRlIGwgb24gZGlzdGluZ3VlIGVuY29yZSB0cnMgZmFjaWxlbWVudCwgc3VyIGxlcyByb2NoZXJzLCBsIG5pdmVhdS4uIApKb2huIE5hc2gsIGFub3RoZXIga2V5IGZpZ3VyZSBpbiB0aGUgMjB0aCBDZW50dXJ5LiBOb3RhYmx5LCBoZSBsYWlkIHRoZSBncm91bmR3b3JrIGZvciBHYW1lIFRoZW9yeSwgd2hpY2ggaGFzIGFwcGxpY2F0aW9ucyBhbGwgb3ZlciB0aGUgcGxhY2UuCkdvb2QgbHVjayB0byB5b3UgYW5kIHlvdXJzLgpIdW50IHRvbyBtYW55IG9mIG9uZSBzcGVjaWVzLCBhbmQgdGhlIHN5c3RlbXMgdGhhdCBjaG9yZW9ncmFwaCB0aGUgY3Jvc3Mgc3BlY2llcyBpbnRlcmFjdGlvbnMgYmV0d2VlbiBtb25zdGVycyBpbiB0aGUgbWlkZGxlIG9mIGEgaHVudCBzdWRkZW5seSBicmluZyB0aGUgcmVhbCB3b3JsZCBpbXBsaWNhdGlvbnMgb2YgZW52aXJvbm1lbnRhbCBzdGV3YXJkc2hpcCB0byB0aGUgZm9yZS4gClN1Y2ggYSBtYXNzaXZlIG1hY2hpbmUgYW5kIGl0IG1ha2VzIGl0IGxvb2sgZWFzeS4gCklmIG5vbmUgb2YgdGhlIGdpcmxzIGlzIHRvIHlvdXIgdGFzdGUsIHlvdSBjYW4ganVzdCBsZWF2ZS4gCkJhc2VkIG9uIHlvdXIgZmxhaXIsIHlvdSBjbGVhcmx5IGFscmVhZHkgaGFkIGEgdG9uIG9mIHN1Y2Nlc3Mgd2l0aCB3ZWlnaHQgbG9zcywgc28geW91IGtub3cgaXQgY29uc3RhbnQgZXhwZXJpbWVudGF0aW9uLiAKTXIuIEFtYW50ZWEgYXBwcm9hY2hlZCBtYWpvciBncm9jZXJ5IGNoYWlucywgaW5kZXBlbmRlbnRzIGFuZCBoZWFsdGggZm9vZCBzdG9yZXMuIEl0IHdhcyBhIHRvdWdoIHNlbGwgYmVjYXVzZSBubyBvbmUga25ldyB3aGF0IGl0IHdhcyBvciBpdHMgYmVuZWZpdHMuIEluIGhpbmRzaWdodCwgaGUgYWRtaXRzIGl0IG1heSBoYXZlIGJlZW4gd2lzZXIgdG8gYnJhbmQgaXQgYXMgbWFwbGUgc2FwLiBNYXBsZSB3YXRlciBpcyBwdXJlIG1hcGxlIHNhcCBhbmQgbmF0dXJhbGx5IGNvbnRhaW5zIDQ2IG51dHJpZW50cyBpbmNsdWRpbmcgbWluZXJhbHMsIGFudGlveGlkYW50cyBhbmQgZWxlY3Ryb2x5dGVzLiBJdCBoYXMgaGFsZiB0aGUgc3VnYXIgYW5kIGNhbG9yaWVzIG9mIGNvY29udXQgd2F0ZXIgYW5kIGlzIGNsZWFyIGFuZCBsaWdodC4gUHJvY2Vzc2luZyBpcyBzdHJhaWdodGZvcndhcmQ6IHRhcHBlZCBzdHJhaWdodCBmcm9tIHN1Z2FyIG1hcGxlIHRyZWVzIGR1cmluZyB0aGUgZml2ZSAgdG8gc2l4IHdlZWsgaGFydmVzdCBlYWNoIHNwcmluZywgdGhlIHNhcCBpcyBwcmUgZmlsdGVyZWQsIHRoZW4gdHJhbnNmZXJyZWQgYnkgY2lzdGVybiB0cnVjayB0byBhIHRyZWF0bWVudCBmYWNpbGl0eSB3aGVyZSBpdCBpcyBzdGVyaWxpemVkIGFuZCBwYWNrYWdlZCB3aXRoaW4gMjQgaG91cnMuCjYpIFRoZXNlIHNvY2NlciBpbml0aWF0ZWQgZGVnZW5lcmF0aW9uIG9mIHRoZSBjZXJ2aWNhbCBzcGluZSBtYWtlIHNvY2NlciBwbGF5ZXJzIG1vcmUgc3VzY2VwdGlibGUgdG8gbmV1cm9sb2dpY2FsIGNvbXBsaWNhdGlvbnMuCkl0IGlzIHVuY2xlYXIgd2hvIGF0dGVuZGVkIHRoZSBtZWV0aW5nLCBhbHRob3VnaCBXYXJuZSBhbmQgTWNHdWlyZSBhcmUgYmVsaWV2ZWQgdG8gaGF2ZSBiZWVuIG92ZXJzZWFzIGF0IHRoZSB0aW1lLiBUaGUgbWVldGluZyB3YXMgY2FsbGVkIGJlY2F1c2UgdGhlIHlhd25pbmcgZ2FwIGJldHdlZW4gd2hhdCBXYXJuZSB3YXMgc2F5aW5nIHRoZSBmb3VuZGF0aW9uIGhhZCByYWlzZWQgZm9yIGNoYXJpdHkgYW5kIHdoYXQgd2FzIGFjdHVhbGx5IGJlaW5nIGRvbmF0ZWQgdG8gY2hhcml0eSB3YXMgYWJvdXQgdG8gYmVjb21lIHB1YmxpYy4gVGhlIGZvdW5kYXRpb24gaGFkIGJlZW4gaGFlbW9ycmhhZ2luZyBtb25leSwgcnVubmluZyBhdCBhIGZpbmFuY2lhbCBsb3NzIGZvciBmb3VyIG91dCBvZiB0aGUgcGFzdCBmaXZlIHllYXJzLiAKQSB5ZWFyIGFnbywgTWFzc2FnZSBFbnZ5IHdhcyBhIGJyYW5kIGluIGNyaXNpcywgcGxhZ3VlZCBieSBzb21lIDIwMCBhY2N1c2F0aW9ucyBvZiBzZXh1YWwgYXNzYXVsdCBvZiBjdXN0b21lcnMgYXQgaXRzIGZhY2lsaXRpZXMuIFNpbmNlIHRoZW4sIHRoZSAxLDIwMCB1bml0IGNoYWluIGhhcyBpbXBsZW1lbnRlZCBuZXcgc2FmZXR5IG1lYXN1cmVzIHRvIHJlYXNzdXJlIGNvbnN1bWVycywgYW5kIGl0IGlzIG5vdyByZWFkeSB0byBwdXNoIGEgYnJhbmQgYXdhcmVuZXNzIGNhbXBhaWduLgpJdHMgc3R1ZGVudHMgaGF2ZSBiZWVuIHRhdWdodCBieSBzb21lIG9mIHRoZSBsZWFkaW5nIG5hbWVzIG9mIFBha2lzdGFuaSBmYXNoaW9uLCBhbmQgdGhlIGxhdW5jaCBvZiB0aGUgZ2xvYmFsIHJldGFpbCBzdG9yZSBJTkMuIApJIGhhdGUgdGF4IGRheS4gCiJBdCB0aGlzIGhvc3BpdGFsIHlvdSBoYXZlIHdvbmRlcmZ1bCBwZW9wbGUgd2hvIGhhdmUgY2hvc2VuIHRvIHdvcmsgd2l0aCB0aGlzIHBvcHVsYXRpb24sIGFuZCB3aG8gbGlrZSB0aGUgcGVvcGxlLCIgc2hlIHNheXMuIApPdHQsIG9mIEFsdG9vbmEsIFBlbm5zeWx2YW5pYSwgZWFybmVkICQ0LjcgbWlsbGlvbi4gTmVpdGhlciBoZSBub3IgQmx1bXN0ZWluLCBvZiBCcmlnYW50aW5lLCBOZXcgSmVyc2V5LCBoYWQgcHJldmlvdXNseSBwbGF5ZWQgYXQgdGhlIG1haW4gZXZlbnQuIApIYW5keSwgbGlnaHRlZCBtaXJyb3IgdHVybnMgb24gd2l0aCB0aGUgcHVzaCBvZiBhIGJ1dHRvbiBhbmQgZXZlbiBoYXMKTGV0cyBhZGQgaW4gc29tZSBub24gcXVhbnRpZmlhYmxlIGZhY3RzOiBUaGUgT1QgYW5kIFNUIGdldCBhbG1vc3QgYWxsIHRoZSBtZXJjaGFuZGlzaW5nLiBUaGUgT1QgYW5kIFNUIHRlbGwgcHJhY3RpY2FsbHkgdGhlIHNhbWUgY2hhcmFjdGVyIGp1c3Qgd2l0aCBsZXNzIGludGVyZXN0aW5nIGNoYXJhY3RlcnMgYW5kIFdBWSBsZXNzIHdvcmxkYnVpbGRpbmcuIE9UIGdldHMgYWxtb3N0IGFsbCB0aGUgYXR0ZW50aW9uIGZyb20gTHVjYXNmaWxtIGl0c2VsZi4gTGl0dGxlIHRoaW5ncyBsaWtlIHRoZSBDZWxlYnJhdGlvbiBwb3N0ZXIgaGF2aW5nIDIgcHJlcXVlbCBjaGFyYWN0ZXJzIGNvbXBhcmVkIHRvIGEgZG96ZW4gT1QgYW5kIHNldmVyYWwgU1QgY2hhcmFjdGVycy4gCkhvc3RpbmcgYSBwb2tlciBuaWdodCBpcyBhIHJld2FyZGluZyBleHBlcmllbmNlIHRoYXQgZ3JhbnRzIHlvdSB0aGUgcG93ZXIgdG8gc2hhcGUgdGhlIGdhbWUgaW4geW91ciBvd24gdmlzaW9uLiAKSGUgd2FzIGEgbWVtYmVyIG9mIFN0LiBDaHVyY2ggcGFyaXNoLiBBdCB0aGUgZnVuZXJhbCBob21lLiAKVGhlIHN0YXRlIGNoYWxsZW5nZWQgRHIuIEFubmEgS29ub3BrYSdzIHJlY29yZCBrZWVwaW5nLCBwcmVzY3JpYmluZyBwcmFjdGljZXMgYW5kIG1lZGljYWwgZGVjaXNpb24gbWFraW5nLiBJdCBzYWlkIGhlciBsaW1pdGVkIGNvbXB1dGVyIHNraWxscyBwcmV2ZW50IGhlciBmcm9tIHVzaW5nIHRoZSBzdGF0ZSdzIG1hbmRhdG9yeSBlbGVjdHJvbmljIGRydWcgbW9uaXRvcmluZyBwcm9ncmFtLCB3aGljaCByZXF1aXJlcyBwcmVzY3JpYmVycyBvZiBvcGlvaWRzIHRvIHJlZ2lzdGVyIGluIGFuIGVmZm9ydCByZWR1Y2Ugb3ZlcmRvc2VzLgpXZSBnb3QgdHdvIHdlZWtlbmRzIGxlZnQgKGluIHRoZSByZWd1bGFyIHNlYXNvbikuIFRoZSBzdGFydCBvZiB0aGUgeWVhciwgdGhlIEtuaWdodHMgZmVsdCBnb29kIGFib3V0IHdob2V2ZXIgdGhleSBwdXQgaW4gbmV0LiBUaGV5IHdhbnQgdG8gcmV0dXJuIHRvIHRoYXQgc3RhdGUgaGVhZGluZyBpbnRvIHRoZSBwbGF5b2Zmcy4uIApBYm91dCAxMDAgb2YgdGhvc2Ugc3BvdHMgYXJlIGZvciB2aXNpdG9yIHBhcmtpbmcgaW4gdGhlIGZpcnN0IGZsb29yLCB0aGVyZSBhcmUgYWxzbyBmYWN1bHR5L3N0YWZmIHNwb3RzIGluc2lkZSB0aGUgZ2FyYWdlLCBsZXRzIGVzdGltYXRlIHRob3NlIGFyb3VuZCAxMDAgYXMgd2VsbC4gClRoZXkgcmFpc2VkIGl0IHRoaXMgeWVhci4gVGhlIGxvd2VzdCBwZW5zaW9uIGluIENoaW5hIHRvZGF5IGlzIDg4IFJNQiBwZXIgbW9udGguIApJZiB0aGV5IGRvbid0IGVtcGxveSBtZXRob2RzIHN1Y2ggYXMgdGhlc2UsIHdlbGwgdGhlIHNpdGUgd2lsbCBnbyBidXN0IGZvciBwYXlpbmcgb3V0IGFsbCB0aG9zZSBjYXNpbm8gYm9udXMgb2ZmZXJzLi4gCkkgaGF2ZSBiZWVuIHRvIG1hY2F1IGFib3V0IDIgd2Vla3MgYWdvLiBPbiB3ZWVrZGF5cyBhdCB0aGUgV3lubiB0aGVyZSBhcmUgdXAgdG8gMyBnYW1lcyBydW5uaW5nIGFzIGxvdyBhcyAyNS81MCB3aGljaCBjb21wYXJlcyB0byAzLzUuIEkgd2FzIHNvIGV4Y2l0ZWQgYW5kIGRpZG50IHdhbnQgdG8gYmVsaWV2ZSB0aGUgcmVwb3J0cyBvbiAyKzIgYWJvdXQgbWFjYXUgYmVlaW5nIGEgbml0ZmVzdC4gQnV0IGl0IHdhcyB0aGUgdGlnaHRlc3QgZ2FtZSBJIGV2ZXIgcGxheWVkIGluLCBub3Qgb25seSBwZW9wbGUgYXJlIHBsYXlpbmcgcmVhbGx5IHRpZ2h0IGJ1dCBpdCBjb21lcyB3aXRoIGEgZmFpcmx5IGhpZ2ggcmFrZS4KKHBvcC4gCk5vdywgaGUgc2FpZCwgc2luZ2xlIGdyZWFzZXMgd2lsbCBkbyBzZXZlcmFsIGpvYnMgd2hlcmUgZm9ybWVybHkgZGlmZmVyZW50IGx1YnJpY2FudHMgd2VyZSByZXF1aXJlZC4gCllvdSBoYXZlIHRvIHB1dCBpbiByaWRpY3Vsb3VzIHZvbHVtZSBhbmQgZGVhbCB3aXRoIHRoZSBtZW50YWwgYXNwZWN0IG9mIHRoZSBoYXJzaGVzdCBkb3duc3dpbmdzIGluIHBva2VyLiAKIk5vIHBvc3RzIGFib3V0IGNlbGVicml0aWVzIG9yIHBlb3BsZSBpbiB0aGUgbWVkaWEgdGhhdCB5b3UgZG8gbm90IGtub3cgcGVyc29uYWxseS4gCkhlIGp1c3QgYSBzZXJpb3VzIHBlcnNvbiB3aG8gY2FyZXMgYWJvdXQgdGhlIGludGVncml0eSBvZiB0aGUgbGF3LiBUaGUgZmFjdCB0aGF0IGZvdXIgc28gY2FsbGVkIGNvbnNlcnZhdGl2ZSBTdXByZW1lIENvdXJ0IEp1c3RpY2VzIHdobyBjbGFpbSB0byBjYXJlIGFib3V0IGp1cmlzcHJ1ZGVuY2Ugd291bGQgb3ZlcnR1cm4gYSBsYXcgdGhhdCBpcyBwZXJmZWN0bHkgZGVzY3JpYmVkIGJ5IGFuIGVuY3ljbG9wZWRpYSBvZiByZWNlbnQgcHJlY2VkZW50IHNob3VsZCBiZSBmdWNraW5nIGFwYWxsaW5nIHRvIGFueW9uZSBldmVuIHJlbW90ZWx5IGludGVyZXN0ZWQgaW4gdGhlIGludGVncml0eSBvZiB0aGUgbGVnYWwgc3lzdGVtLlBlb3BsZV9BcmVfU2F2YWdlcyAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1RoZSBnYW1lIHRoZW1hdGljIHNjb3BlIGlzIHNvIGRpZmZlcmVudCBmcm9tIGRzMS8zLCBhbmQgdGhhdCBpcyByZWFzb24gSSBsb3ZlIGl0LCBwZXJzb25hbGx5LiAKSW1wYXRpZW5jZSBtYWtlcyBpdCBzdWNrLCBzbyB3aGVuIHlvdSBkb2luZyB0aW1lZCBjb2RlcyBhbmQgdHJ5aW5nIHRvIGNyYW5rIG91dCBzb21lIHF1aWNrIFNUTSBpdCBlYXN5IHRvIGV4dHJhcG9sYXRlIHRoYXQgZG9pbmcgZnVsbCBib2R5IG1hc3NhZ2Ugd291bGQgYmUgYm9yaW5nLCB0ZWRpb3VzLCBhbmQgcGh5c2ljYWxseSB0YXhpbmcuIApBaWRlbiBuZWVkZWQgdG8gaXNvbGF0ZSBoaW0sIHNvIGhlIGNhbiBmbGlwIGhpbSBpbnRvIGFuIGFsbHkuIEJ1dCB0byBkbyB0aGF0LCBoZSBuZWVkZWQgdG8gZWxpbWluYXRlIG1lbWJlcnMgb2YgdGhlIFZpY2Vyb3kgZ2FuZy4gCkhlIHJlbWVtYmVycyBoZXIgc2hvdXRpbmcsICJZb3Ugbm90IGdldHRpbmcgYXdheSBmcm9tIG1lIHRoYXQgZWFzaWx5ISIgVG8gbWUsIHRoYXQgaGFzIGFuIG9taW5vdXMgcmluZywgYnV0IEdpbGxpZXMgc2F5cyBoZSB0b29rIGl0IHRvIG1lYW4gdGhhdCBMYW5lIGhhZCBkZWNpZGVkIHRvIGZvcmdpdmUgaGltICAgdGhhdCBzaGUgd2FzIGdpdmluZyBoaW0gYW5vdGhlciBjaGFuY2UuIEFjY29yZGluZyB0byBtZWRpY2FsIHJlY29yZHMgb2YgdGhlIGJpcnRoIG9mIGhlciBmaXJzdCBjaGlsZCwgaW4gMTk5NSwgc2hlIHdhcyB3aGVlbGVkIGludG8gdGhlIGVtZXJnZW5jeSB3YXJkIGJ5IGhlciBib3lmcmllbmQuIApJIGFtIHZlcnkgc29ycnkgdG8gaGVhciBhYm91dCB5b3VyIGxvc3MgaXQgaXMgaW5jcmVkaWJseSBkaWZmaWN1bHQgdG8gbG9zZSBzb21lYm9keSBzdWRkZW5seS4gSSBsb3N0IG15IGNvdXNpbiBzdWRkZW5seSB3aG8gd2FzIG1vcmUgbGlrZSBteSBzaXN0ZXIgKGxpdmVkIHdpdGggbWUgbXkgd2hvbGUgbGlmZSkgeWV0IHBlb3BsZSBoZWFyIHRoYXQgYW5kIHRoaW5rIGxpa2Ugb2ggdGhhdCdzIHVuZm9ydHVuYXRlIGFuZCBzaGFrZSBpdCBvZmYgbGlrZSBpdCdzIG5vdGhpbmcgd2hpY2ggSSdtIHN1cmUgaXMgdGhlIHJlYWN0aW9uIHlvdSBhcmUgZ2V0dGluZy4gSnVzdCBrbm93IHRoYXQgeW91IGFyZSBkb2luZyBncmVhdCBieSBiZWluZyBhIHN0cm9uZyBtb3RoZXIgYW5kIGEgZ3JlYXQgb25lIGluIHRoaXMgaGFyZCB0aW1lLiAKQmV0c29mdCBHYW1pbmcgb2ZmZXJzIGVzc2VudGlhbGx5IHRoZSBtb3N0IHZpc3VhbGx5IGltcHJlc3NpdmUgY29sbGVjdGlvbiBvZiBzbG90IG1hY2hpbmVzIG5vdCB0byBtZW50aW9uIGNhc2lubyBnYW1lcy4gWW91ciBtaXNzaW9uIGlzIHRvIGdpdmUgcGxheWVycyB3aXRoIGFuIHJlYWwgYW5kIGltbWVyc2l2ZSBjYXNpbm8gZXhhbXBsZSBvZiAzIEQgZ3JhcGhpY3MgYW5kIG1wMy4gQmV0c29mdCBoYXMgYSBnYW1lIHN0b2NrcGlsZSBvZiBvdmVyIG9uZSBodW5kcmVkIGFtdXNpbmcgc2xvdHMgZ2FtZXMgY29uc2lzdGluZyBvZiB0YWJsZXMgZ2FtZXMgZm9yIGV4YW1wbGUgLCBCbGFja2phY2sgYW5kIE9ubGluZSByb3VsZXR0ZS4gCkNhbiBub24gQnVkZGhpc3RzIHVzZSB0ZXJtcyBsaWtlIG1lZGl0YXRpb24gb3IgemVuPyBJcyBpdCBjdWx0dXJhbCBhcHByb3ByaWF0aW9uLCBhbmQgdGhlcmVmb3JlIGJhZCBwcmFjdGljZSwgZm9yIGEgbm9uIEJ1ZGRoaXN0IHRvIGhhdmUgYSBidWRkYSBzdGF0dWUgaW4gdGhlaXIgaG9tZT8gU2hvdWxkIG5vbiBJcmlzaCBiZSBhYmxlIHRvIGVuam95IFNhaW50IFBhdHJpY2sgZGF5LCBhbmQgaXMgaXQgb2theSB0byBkaXNwbGF5IHRocmVlIGxlYWYgY2xvdmVycyBvbiB0aGVpciBjbG90aGVzPyBTaG91bGQgbm9uIENhbmFkaWFucyBmZWFyIG1pc3VzaW5nIHRoZSBtYXBsZSBsZWFmIGxlc3QgdGhleSBhbmdlciBDYW5hZGlhbnM/IENhbiBub24gQW1lcmljYW5zIGRpc3BsYXkgc3RhcnMgYW5kIHN0cmlwZXMsIG9yIHVzZSB0aGUgdGVybSAiZnJlZWRvbSIgaG93ZXZlciB0aGV5IHNvIGNob29zZT8uIApZZXAsIGFzIEkndmUgc2FpZCBiZWZvcmUgSSdtIG9sZCBhbmQgbXkga2lkcyBhcmUgZ3Jvd24uIEJhY2sgdGhlbiwgaXQgd2FzIHdlYW5pbmcgYXQgMyBtb250aHMgYW5kIGNvb2xlZCBib2lsZWQgd2F0ZXIgYmV0d2VlbiBmZWVkcy4gCjg2NTMyMzYgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRlY2huaWNhbGx5LCBJJ20gbm90IHN1cmUgeW91IGxhbmRsb3JkIGNhbiBqdXN0IHJlZnVzZSB0byBicmluZyBhbiBhbHJlYWR5IHRlbmFudGVkIHByb3BlcnR5IHVwIHRvIGNvZGUuIFlvdSBtaWdodCBhc2sgYXQgdGhlIGxlZ2FsIGFzc2lzdGFuY2Ugb2ZmaWNlIGF0IHlvdXIgdW5pdmVyc2l0eSBmb3IgYWR2aWNlIG9uIHRoaXMgY2FzZS4gCk1hbiBvaCBtYW4uIEkgbmVlZCB0byBnbyBpbnRvIGEgZGlmZmVyZW50IGZpZWxkLiAKVGhhdCdzIHdoeSB5b3UgY2FuIHNheSB0aGF0IHRoZSBVU1NSIHdhcyBDb21tdW5pc3QgYnV0IHRoYXQgaXQgd2Fzbid0IGNvbW11bmlzdC4gCllvdSBjYW4gcG9zdCB1cCBvbiBhIG1vdW50YWluIGFuZCBiZSBzYWZlIGZyb20gdGhlIHJpbmcgZm9yIHRoZSBuZXh0IHRlbiBtaW51dGVzLCBhbGwgYmVjYXVzZSBvZiBQYXRoZmluZGVyLiAKSSBub3Qgc3R1cGlkIGVub3VnaCB0byBiZWxpZXZlIHdlZWQgcGlsbHMgY291bGQgYnJpbmcgaGFybSB0byBvdGhlciBwYXRpZW50cywgYnV0IGZyb20gYSBwcmFjdGljYWwgc3RhbmQgcG9pbnQgaXQgaXMgYSBmb3JlaWduIG1lZGljYXRpb24gYmVpbmcgYnJvdWdodCBpbiBhbmQgdGFrZW4gdGhhdCBkb2VzIG5vdCBhbGlnbiB3aXRoIHRoZSBob3NwaXRhbHMgcG9saWNpZXMgYW5kIGl0IGNhbm5vdCBiZSBtb25pdG9yZWQgcHJvcGVybHkuIEl0IGEgcmlzaywgYW5kIGluIGEgaG9zcGl0YWwgb2YgYWxsIHBsYWNlcyB0aGV5IGRvIG5vdCBmdWNrIGFyb3VuZCB3aXRoIHJpc2tzLi4gClRoZSBjb21taXNzaW9uIGl0c2VsZiBjb25jbHVkZWQgdGhhdCBpZiB5b3UncmUgbm90IGx1Y2t5IGVub3VnaCB0byB3aW4gdGhlIGZyZWUgZ2FtZXMgZmVhdHVyZSwgIml0IGlzIGVhc2lseSBwb3NzaWJsZSB0byBwbGF5IDE5IGJ1dHRvbiBwdXNoZXMgcGVyIG1pbnV0ZSIuIEFzIHRoaW5ncyBzdGFuZCBpbiBOU1csIHlvdSBjYW4gbG9zZSAkMTAgd2l0aCBldmVyeSBvbmUgb2YgdGhvc2UgcHVzaGVzLiAKTG9vayBhdCB0aGVtLCB0aGV5IGp1c3Qgc3RhcmluZyBhdCBtZQpUaGVyZSBpcyBhIHNtYWxsIGN1cGJvYXJkIHNpemVkIHJvb20sIG9mZiB0aGUgdXBwZXIgc3RvcmV5ICdsb25nIGdhbGxlcnknIGF0IExpdHRsZSBNb3JldG9uIEhhbGwsIGNhbGxlZCB0aGUgJ2dhcmRlcm9iZScgKG5vLCBub3QgdGhlIEZyZW5jaCAnd2FyZHJvYmUnIGluIHRoaXMgY2FzZSkgYW5kIGluIGl0IGxpZXMgYSBwbGFuayBvZiAoaG9wZWZ1bGx5KSBzbW9vdGggd29vZCB3aXRoIGEgaG9sZSBpbiB0aGUgbWlkZGxlIGFib3V0IDEwIiBkaWFtZXRlci4gVGhlcmUgYXJlIGhvbGVzIGluIHRoZSBjZWlsaW5ncyBhbmQgZmxvb3JzIHRocm91Z2ggdG8gdGhlIHNsb3dseSBydW5uaW5nIG1vYXQgKHdlIGxvb2tlZCBkb3duIHRvIHNlZSB0aGlzISkuIFRoZXkgdG9sZCB1cyB0aGF0IGl0IGhhZCBub3QgYmVlbiB1c2VkICh0byB0aGVpciBrbm93bGVkZ2UgYW55d2F5KSBmb3IgYWJvdXQgdHdvIGh1bmRyZWQgeWVhcnMhIEFub3RoZXIgb25lIG9uIHRoZSBmaXJzdCBmbG9vciAnZGlzY2hhcmdlZCcgaW50byBjb2ZmaW4gbGlrZSBib3hlcyBvbiB0aGUgZ3JvdW5kIGZsb29yLCB0aGF0IGhhZCB0byBiZSBlbXB0aWVkIGRhaWx5IGJ5IHRoZSBzZXJ2YW50cywgd2FzaGVkIGluIHRoZSBtb2F0IHdhdGVycywgYW5kIHBsYWNlZCByZWFkeSBmb3IgdGhlIG5leHQgJ2N1c3RvbWVycychIE5vIGRhbmdlciBvZiAnc3BsYXNoYmFjaycgdGhlbiwgZnJvbSB0aGF0IGhlaWdodCEuIApUaGUgcmVzdWx0cyBmb3IgYWxsIG9mIHVzIG5vdCBvbmx5IEFtZXJpY2FuIGJ1dCBhcm91bmQgdGhlIGdsb2JlIGhhdmUgYmVlbiBkZXZhc3RhdGluZy4iLiAKMTUuIEFuICJhZGVxdWF0ZSBveHlnZW4gc3VwcGx5IGVuaGFuY2VzIEFUUCB5aWVsZCBieSAxOCAxOSBmb2xkLiIxNy4gQWx1bWludW0gaGFzIGhpZ2ggYWZmaW5pdHkgZm9yIHBob3NwaGF0ZSBhbmQgYmxvY2tzIHRoZSBhYnNvcnB0aW9uIGFuZCB1dGlsaXphdGlvbiBvZiBwaG9zcGhhdGUgZm9yIEFUUCBzeW50aGVzZXMsIGNhdXNpbmcgZGVjcmVhc2VkIG1pdG9jaG9uZHJpYWwgQVRQIGxldmVscy4gQWRlcXVhdGUgbGV2ZWxzIG9mIG1hZ25lc2l1bSBwcmV2ZW50IHRoaXMgdG94aWMgZWZmZWN0IG9mIGFsdW1pbnVtLgpUaGUgdGltZSBpbiB3cmFwcyBJIHdhcyBjb21pbmcgb3V0IG9mIHRoZSBob2xlIG9mIGEgc3F1YXQgYW5kIGZlbHQgYm90aCBoYW1zdHJpbmcgInBvcCIgZm9yIGxhY2sgb2YgYSBiZXR0ZXIgdGVybS4gV2FzIGFibGUgdG8gY29tcGxldGUgdGhlIHJlcCBhbmQgdGhleSB3ZXJlIGltbWVkaWF0ZWx5IHNvcmUuIE90aGVyIHRpbWUgSSB3YXMgZnJvbnQgc3F1YXRpbmcgKGZhaXJseSBsaWdodCB0b28pIGFuZCBteSByaWdodCBxdWFkIHBvcHBlZC4gClNvIGhpcyBwcmlvcml0aWVzIGFyZSBqdXN0IGtlZXAgd29ya2luZywgYnVpbGQgaGlzIHNraWxsIGJhc2Ugc28gaGUgYmVjb21lcyBhIHJlYWwgZ29vZCBnb2FsdGVuZGVyLiIuIApBZHZpY2UgKGhvdyBkbyBJIGRvIHRoYXQ/KWFuYWx5c2lzICh3aGF0IGRvZXMgdGhhdCBtZWFuIHRvIG1lPykKV2hhdCdzIG1vcmUsIG9uY2UgdGhlIGRpc2Vhc2UgaGFzIHRha2VuIGhvbGQsIHRoZXJlJ3Mgbm90IG11Y2ggdGhhdCBjYW4gYmUgZG9uZSB0byBzdG9wIGl0LiAKT25seSwgdGhleSB3ZSBvZnRlbiB0aGluayB0aGF0IHRvIGJlIHRydWx5IHNwaXJpdHVhbCBtZWFucyB0aGF0IHdlIHNob3VsZCBiZSBiZXlvbmQgZW1vdGlvbnMgc3VjaCBhcyBhbmdlci4gClByb3ZlIHlvdXJzZWxmIGFuZCB5b3VyIHdvcnRoIGFuZCBhcHBseSB0byB0aGVpciBncmFkdWF0ZSBwcm9ncmFtIHdpdGggYSBsZXR0ZXIgb2YgcmVjb21tZW5kYXRpb24gZnJvbSB5b3VyIGJvc3Mgc3RhdGluZyB0aGF0IHRoZXkgd291bGQgYmUgeW91ciBhZHZpc2VyIGxhYi4gWW91ciBvZGRzIG9mIGdldHRpbmcgaW4gYXJlIGdyZWF0bHkgaW5jcmVhc2VkIGJlY2F1c2UgeW91IGFscmVhZHkgaGF2ZSBhIHBsYWNlIHRoZXJlLiAKQWxsIGFjcm9zcyB0aGUgZW52aXJvbm1lbnQsIHlvdSB3aWxsIGZpbmQgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgY3J1aXNlIGxpbmVzLiBUaGVzZSBjcnVpc2VzIGxpbmVzIGdlbmVyYWxseSBvcGVyYXRlIG11bHRpcGxlIHNoaXBzLiAKQSB2YXJpZXR5IG9mIHBlYWNlIGdyb3VwcywgaW5jbHVkaW5nIFBlYWNlIGFuZCBKdXN0aWNlIGFuZCBDb2RlUElOSywgYXJlIGFza2luZyBDb25ncmVzcyB0byBzdXBwb3J0IEhSIDI0MDQsIGEgYmlsbCB0aGF0IHdvdWxkIHJlcXVpcmUgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHRvIHN1Ym1pdCBhbiBleGl0IHN0cmF0ZWd5IGZvciBBZmdoYW5pc3RhbiBieSBEZWNlbWJlciAzMSwgMjAwOS4gCkkgaGF2ZSBiZWVuIHRyeWluZyB0byBmaW5kIGEgZ3JlYXQgaWRlYSBmb3IgYSBub3ZlbCB0aGlzIG1vbnRoLiAKVGhlIHRvdXJuYW1lbnQgY2FuIGZpdCBhYm91dCAyNCw4MDAgcG9rZXIgcGxheWVycyBpbiB0aGUgc2luZ2xlIGV2ZW50IGlmIG5lZWQgYmUsIFBhbGFuc2t5IHNhaWQuLiAKSmFtZXMgTydLZWVmZQpBZGRpdGlvbmFsbHksIGFzIEkgZnJlcXVlbnRseSBoYXZlIHBhcnRzIG9mIG15IHJlYWxpdHkgdGhhdCBhcmUgc2ltcGx5ICJ3cm9uZywiIEkgcXVpY2tseSBhY2NlcHQgdGhhdCBJIGNvdWxkIGJlIHdyb25nIGFib3V0IHNvbWV0aGluZzsgYmVjYXVzZSBvZiB0aGlzLCBJIGRvbiB3YXN0ZSB0aW1lIGJlaW5nIHN0dWJib3JuLgpNciBHYXN0IHNhaWQ6ICJJdCdzIHVuYmVsaWV2YWJsZSB0byB1cywgd2UncmUgc3RpbGwgaW4gYXdlIG9mIHRoZSBnZW5lcm9zaXR5IHRoYXQgcGVvcGxlIGhhdmUgcG9ydHJheWVkIGZvciB0aGlzIHlvdW5nIG1hbi4iCk9uZSBvZiB0aGVtIGlzIHByb3ZhYmx5IGluc2FuZSwgb25lIG90aGVyIGlzIHBvcHBpbmcgY2hhbXBhZ25lcyBmb3IgaGlnaCBmZWVzLiAKIlNhZmV0eSBpbiB0aGUgdXNlIG9mIGZpcmVhcm1zICAgb24gYW5kIG9mZiBvdXIgcmFuZ2VzICAgaXMgdGhlIG1vc3QgaW1wb3J0YW50IGFzcGVjdCBvZiBvdXIgY2x1YiBhbmQgb3VyIHNwb3J0LCIgdGhlIEFzc29jaWF0aW9uIHN0YXRlZCBvbiBpdHMgd2Vic2l0ZS4gCkpld2VpbHMgd2VpdGVyIGVpbmUgTWFzY2hlIGRlciB2aWVydGVuL2Vyc3RlbiBOYWRlbCB1bmQgZWluZSBNYXNjaGUgZGVyIEhpbGZzbmFkZWwgcmVjaHRzIHp1c2FtbWVuc3RyaWNrZW4uIEhpZXIga25udCBpaHIgZGFzIEdhbnplIG5vY2ggZXR3YXMgZ2VuYXVlciBzZWhlbi4KMi4gQSBzZWVtaW5nbHkgY2VudHJpc3QgcmlnaHQgd2luZyBpbiBjb21wYXJpc29uLCBidXQgdXBvbiBjbG9zZXIgaW5zcGVjdGlvbiwgdGhlIGNlbnRlciByaWdodCwgdGhhdCBpcyB0aGUgIkRlbXMsIiB0dXJuIG91dCB0byBiZSBiZSBhIHNpbWlsYXJseSBuYXRpb25hbGlzdCBhbmQgbWlsaXRhcmlzdGljIHJpZ2h0IHdpbmcgd2l0aCBhIG1vdmVtZW50IG1vYmlsaXplZCBieSBwcm9ncmVzc2l2ZSByaGV0b3JpYywgYnV0IGFjdGlvbnMgdGhhdCBhcmUgY29tcGxldGVseSBhbmQgdXR0ZXJseSByb290ZWQgaW4gY29ycG9yYXRlIGFuZCBtaWxpdGFyeSBpbmR1c3RyaWFsIGludGVyZXN0cy4uIApBdCBOb3R0aW5naGFtIHdlIGV4cGVjdCBzdHVkZW50cyB0byBjb21wbGV0ZSBjbGluaWNhbCBwbGFjZW1lbnRzIHRvdGFsbGluZyB3ZWxsIGFib3ZlIHRoZSBtaW5pbXVtIDQwMCBob3VycyByZXF1aXJlZCBieSBCQVNSYVQuIERlbGl2ZXJ5IG1heSB2YXJ5IGFuZCB5b3UgbWF5IGJlIHJlcXVpcmVkIHRvIHdvcmsgd2Vla2VuZHMgb3IgZXZlbmluZ3MgZGVwZW5kaW5nIG9uIHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIHBsYWNlbWVudCBhcmVhLiBJbiBhZGRpdGlvbiwgeW91IHdpbGwgYmUgZW5jb3VyYWdlZCB0byBnYWluIGV4dHJhIGNsaW5pY2FsIGhvdXJzIHdvcmtpbmcgY2xvc2VseSB3aXRoIHRoZSBoZWFsdGggcHJvZmVzc2lvbmFscyB3aG8gc3VwcG9ydCB0aGUgVW5pdmVyc2l0eSBzcG9ydHMgdGVhbXMgb24gYSB3ZWVrbHkgYmFzaXMuIAoiV2hhdCB3ZSBhcmUgc2VlaW5nIGFzIGdhbWJsaW5nIGlzIG1vdmluZyBtb3JlIHRvIG9ubGluZSBwbGF0Zm9ybXMgYW5kIG9udG8gc21hcnRwaG9uZXMsIHBlb3BsZSBhcmUgYmVjb21pbmcgY2F1Z2h0IHVwIGluIGdhbWJsaW5nIHByb2JsZW1zIGF0IG11Y2ggeW91bmdlciBhZ2VzLiBUaGlzIGlzIGFsc28gY29pbmNpZGluZyB3aXRoIHRoZSBpbmNyZWFzZSBpbiBwcm9tb3Rpb24gb2Ygc3BvcnRzIGJldHRpbmcsIHdoaWNoIG1heSBhbHNvIGFkZCB0byB0aGUgYXR0cmFjdGlvbiBvZiBnYW1ibGluZyBmb3IgeW91bmcgcGVvcGxlLiIKVGhlaXIgZG9nIGJhcmtlZCBhbGwgZnVja2luZyBkYXkgYW5kIG5pZ2h0LiAKSW4gZmFjdCwgbmVhcmx5IGFsbCBvZiBBbGdhcnZlJ3MgdG9wIGF0dHJhY3Rpb25zIGFyZSBwcmFpYXMgKGJlYWNoZXMpIG9yIHdhdGVyIHNwb3J0cyBsaWtlIHN1cmZpbmcsIHdha2Vib2FyZGluZywgc25vcmtlbGluZyBhbmQgZGl2aW5nLiAKVGhlIE5ZIFRpbWVzIGFydGljbGUgaXMgdmVyeSBhY2N1cmF0ZSwgYnV0IHRoaXMgb25lIGFkZHMgbG90cyBvZiBleHRyYSBkZXRhaWxzLi4gCkxhc3QgeWVhciBJIGhhZCBhbiBhcnQgaW5zdGFsbGF0aW9uIGFuZCBldmVuIHRoYXQgaGFyZGx5IHN1Y2tlZCBhbnkgdGltZSBvdXQgb2YgbXkgYnVybi4gQnJlYWtpbmcgZXZlcnl0aGluZyBkb3duIHdhcyBkb25lIFNhdHVyZGF5IGFmdGVybm9vbiBhbmQgdG9vayBtYXliZSA5MCBtaW51dGVzLiAKV2hlbiBoaXMgb3Bwb25lbnQgc2hvd2VkIHVwIChzaG93ZWQgaGlzIGhhbmQpLCBoZSBoYWQgdGhyZWUgcXVlZW5zIGFuZCBhIHBhaXIgb2YgdGVucy4uIApXaXRob3V0IGV2ZW4gcGF1c2luZyB0byB0aGluaywgaGUgc2FpZCAic291bmRzIGdvb2QsIEkganVzdCB3ZWFyIGEgY29uZG9tIi4uIApadXN0aW1tdW5nIHp1ciBWZXJ3ZW5kdW5nIHZvbiBDb29raWVzClRPUk9OVE8gICBKYW1lcyB2YW4gUmllbXNkeWsgc2NvcmVkIHR3aWNlIGFuZCBOaWtvbGFpIEt1bGVtaW4gcGlja2VkIHVwIHRoZSBnYW1lIHdpbm5lciBhcyB0aGUgVG9yb250byBNYXBsZSBMZWFmcyBzbmFwcGVkIGEgdGhyZWUgZ2FtZSBsb3Npbmcgc2tpZCB3aXRoIGEgNCAyIHdpbiBvdmVyIHRoZSBCdWZmYWxvIFNhYnJlcyBTYXR1cmRheSBuaWdodC4KIlBoaWxpcHMgcGFydG5lcnMgd2l0aCBnbG9iYWwgaGVhbHRoY2FyZSBwcm92aWRlcnMgdG8gY29ubmVjdCBwZW9wbGUsIGluZm9ybWF0aW9uIGFuZCB0ZWNobm9sb2d5IHdpdGggdGhlIGNvbW1pdG1lbnQgdG8gZGVsaXZlciBvbiB0aGUgUXVhZHJ1cGxlIEFpbSBvZiBpbXByb3ZlZCBwYXRpZW50IGV4cGVyaWVuY2VzLCBiZXR0ZXIgaGVhbHRoIG91dGNvbWVzLCBpbXByb3ZlZCBzdGFmZiBleHBlcmllbmNlcywgYW5kIGxvd2VyIGNvc3RzIG9mIGNhcmUsIiBzYWlkIFJvYmVydCBDYXNjZWxsYSwgQ2hpZWYgQnVzaW5lc3MgTGVhZGVyIFByZWNpc2lvbiBEaWFnbm9zaXMgYXQgUm95YWwgUGhpbGlwcy4gIlRoaXMgYWNxdWlzaXRpb24gd2lsbCBlbmhhbmNlIG91ciBhYmlsaXR5IHRvIHByb3ZpZGUgZmxleGlibGUgc29sdXRpb25zIHRvIGhvc3BpdGFscyBhbmQgaGVhbHRoIHN5c3RlbXMuIFRoZSBjb21iaW5hdGlvbiBvZiBvdXIgc3VjY2Vzc2Z1bCBpbm5vdmF0aW9ucyBpbiBpbWFnaW5nIHN5c3RlbSBwbGF0Zm9ybXMsIHdvcmtmbG93IG9wdGltaXphdGlvbiBhbmQgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgZW5hYmxlZCBpbmZvcm1hdGljcywgY29tYmluZWQgd2l0aCBDYXJlc3RyZWFtJ3MgY2xvdWQgYmFzZWQgZW50ZXJwcmlzZSBpbWFnaW5nIGluZm9ybWF0aWNzIHBsYXRmb3JtIGFuZCBjb21wbGVtZW50YXJ5IGdlb2dyYXBoaWMgZm9vdHByaW50IHdpbGwgcHJvdmlkZSBhIHNvbGlkIGZvdW5kYXRpb24gdG8gZGVsaXZlciBvbiB0aGUgcHJvbWlzZSBvZiBwcmVjaXNpb24gZGlhZ25vc2lzLiIuIApBbWlkIGFsbCB0aGUgYmFkIG5ld3MsIHRoZXJlIGFyZSBzb21lIHBvc2l0aXZlIHNpZ25zIHRoYXQgdGhlIGRvd250dXJuIGlzIHNsb3dpbmcsIGlmIG5vdCBxdWl0ZSBvdmVyLiAKVGhlc2UgbWFjaGluZXMgYXJlIG1hZGUgb2YgcGxhc3RpYyBhbmQgY292ZXJlZCB3aXRoIHF1YWxpdHkgbGVhdGhlciBvbiB0aGlzLiBUaGUgc2ltdWxhdGlvbiBpcyB3b25kZXJmdWwgYW5kIGl0IGxvb2tzIGxpa2UgYSBwb2tlciBwcm8gaW5zdHJ1bWVudC4gCkhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gc2VlIHJlYWwgZ2FuZyBtZW1iZXJzIHRoYXQgd2lsbCBmaWdodCBhdCB0aGUgZHJvcCBvZiBhIGhhdCBiZWNhdXNlIHNvbWVvbmUgZGlzcmVzcGVjdGVkIHRoZWlyIGNvbG9ycyBvciB0aGVpciBzZXQuIApJIGtuZXcgc2hlIHdvdWxkbiBidXQgRFcgdGhvdWdodCBJIHdvdWxkIHJlZ3JldCBpdCBpZiBJIGRpZG4gdHJ5LiBTaGUgZGllZCBhbmQgaGVyIGZ1bmVyYWwgd2FzIG9uIERXIGJpcnRoZGF5LiBTaGUgYXBwcmVjaWF0ZWQgdGhlIGdpZnQuIApBbmQgd2hlbnRoZXkgYXJlLC4gSXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiAKQnV0IHlvdSBjYW4gYWxzbyBtYWtlIGFuIGhlcmIgZmlsbGVkIHNsZWVwIHBpbGxvdyBieSBjb21iaW5pbmcgYXJvbWF0aWMgaGVyYnMgYW5kIHNld2luZyB0aGVtIGludG8gYSBzbWFsbCBwaWVjZSBvZiBzb2Z0IGZhYnJpYy4gWW91J2xsIHdhbnQgdGhlIHBpbGxvdyB0byBiZSBzbWFsbCBhbmQgZmxhdCwgc28geW91IGNhbiBzbGlwIGl0IGludG8geW91ciByZWd1bGFyIHBpbGxvd2Nhc2UsIG9uIHRvcCBvZiB5b3VyIHJlZ3VsYXIgcGlsbG93LiBIZXJlJ3MgYSBzd2VldCBidXQgcG90ZW50IG1peHR1cmUgZm9yIGFuIGhlcmJhbCBwaWxsb3c6LiAKQWxsIG9mIG15IGp1aWNlcyB0YXN0ZSB0aGUgYmVzdCBvdXQgb2YgdGhlIEtlbnNlaSwgd2hlbiBjb21wYXJlZCB0byBteSBvdGhlciB0YW5rcy4gSSBqdXN0IGtub3cgc2V2ZXJhbCByZXZpZXdlcnMgd2VyZSBzYXlpbmcgdGhhdCB0aGlzIGlzIHdoYXQgdGhlIEt5bGluIHNob3VsZCBoYXZlIGJlZW4uIFNocnVnLiAKVGhhdCdzIGEgcnVsZS4gClRoZW4gd2UgaGF2ZSB0aGUgYWN0aXZpc3RzIGFuZCBjb25zZXJ2YXRpb25pc3RzLCB3aG8gZ2VudWluZWx5IGJlbGlldmUgdGhleSBhcmUgZG9pbmcgZ29vZCwgcHJvZHVjdGl2ZSB0aGluZ3MsIGV2ZW4gd2hlbiB0aGV5IG5vdCwgYW5kIHdoZW4gdGhlaXIgd29yayB3aWxsIGJlIHdpcGVkIGF3YXkgaW4gYSBmZXcgbW9yZSB5ZWFycyBvZiB0aGUgd2VhdGhlciB3ZSBleHBlcmllbmNpbmcsIG5vdy4gVGhlaXIgZGVuaWFsIGlzIHRoYXQgZGlyZWN0IGFsdGVyYXRpb25zIHRvIHRoZSBlbnZpcm9ubWVudCBjYW4gcmVhbGx5IGhlbHAgdXMuCkFuZCBJIHdhcyBmcmllbmRzIHdpdGggdGhlIG1hbmFnZXJzIHRocmVlIGJveXMgYXJvdW5kIG15IGFnZSB0aGV5IGJyb3VnaHQgbWUgb3ZlciBzYXlpbmcgdGhleSBoYWQgc29tZXRoaW5nIHRvIHNob3cgbWUgYW5kIGJlaGluZCBhIGJ1c2ggd2FzIGEgbGl0dGxlIGJhYnkgYmlyZCB0aGV5IGhhZCBmb3VuZCBvciBmZWxsIG91dCBvZiBhIHRyZWUuIFRoZSBvbGRlc3QgdGhlbiB0b29rIGEgcm9jayBhbmQgYmFzaGVkIHRoZSBiYWJ5IGJpcmQgb3ZlciB0aGUgaGVhZCBhZ2FpbiBhbmQgYWdhaW4gYW5kIHN0aWxsIHRvIHRoaXMgZGF5IEkgY2FuIHNlZSB0aGUgYmlyZCB0d2l0Y2hpbmcgd2l0aCBpdCdzIGV4cG9zZWQgYW5kIGxlYWtpbmcgYnJhaW5zIG91dCBvbiB0aGUgZGlydC4uIApJIGZvdW5kIHRoYXQgSSBjYW4gd2VhciBmb3VyIGF0IGEgdGltZSBub3cgYmVmb3JlIEkgc3RhcnQgdG8gbG9zZSB0cmFjayBvZiB0aGluZ3MsIGFsdGhvdWdoIHVzdWFsbHkgSSBzdGljayB3aXRoIHR3by4gVXNlIHdoaWNoZXZlciBjb2xvdXIgcGFpcmluZ3MgbWFrZSBzZW5zZSB0byB0byB5b3UuCldhcyBzdGlsbCBpbiBvZmZpY2UsIHR3byBpbGxlZ2FsIGFuZCBpbXBlcmlhbGlzdGljIHdhcnMgd2VyZSBpbiBmdWxsIHN3aW5nLCBhbmQgYWx0aG91Z2ggdGhlIFdhbGwgU3RyZWV0IFBvbnppIHNjaGVtZSBidWlsdCBvbiB0aGUgZGVtb2NyYXRpemF0aW9uIG9mIGRlYnQgaGFkIG5vdCB5ZXQgY29sbGFwc2VkLCBpdCB3YXMgaW5jcmVhc2luZ2x5IGNsZWFyIHRoYXQgbW9zdCBvZiB1cyBoYWQgYmVlbiBzY3Jld2VkIGJ5IE5lb2xpYmVyYWwgY2FwaXRhbGlzbS4gVGhyZWUgZGVjYWRlcyBvZiB0YXggZ2l2ZWF3YXlzIHRvIHRoZSByaWNoZXN0IEFtZXJpY2FucyBhbmQgdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBzb2NpYWwgc2FmZXR5IG5ldCBtZWFudCA4MCUgb2YgdXMgd2VyZSB3b3JzZSBvZmYgdGhhbiBpbiAxOTgwLiAKS2V5IEhvdXNlIGluZGljYXRvcnNIb3VzZSBSZXB1YmxpY2FucyBsZWFkZXJzIHdlcmUgd2hpcHBpbmcgdGhlIHZvdGUgdGhyb3VnaG91dCB0aGUgZGF5IFdlZG5lc2RheSwgc28gdGhleSBoYXZlIGEgZ29vZCBpZGVhIG9mIHdoZXJlIHRoZXkgc3RhbmQgYW5kIHdoYXQgdGhleSBuZWVkLgpGb3IgYSBwbGFjZSB0byBwb3N0IHNjcmVlbnNob3RzLCB5b3UgbWF5IHdpc2ggdG8gY2hlY2sgb3V0IC9yL3NjcmVlbnNob3RzLi4gClNoZSB3YXMgdW5kZXIgbm8gaWxsdXNpb25zIGFib3V0IHRoZSBzdGF0ZSBvZiB0aGUgbWFya2V0LCB1bmxpa2Ugc29tZSBicm9rZXJzIHdobyBzdWdhcmNvYXRlZCB0aGUgc2l0dWF0aW9uLgpMaWtlLCB5b3UgY291bGQgcmFuZG9tbHkgcGljayBhIG1pZGRsZSBhZ2VkIGd1eSBmcm9tIHRoZSBzdHJlZXQsIGFuZCBoZSB3b3VsZCBwcm9iYWJseSBzYXkgdGhlIHNhbWUgdGhpbmdzLiBOb3QgdHJ5aW5nIHRvIGhhdGUgb24gaGltISBJIGp1c3QgZG9uIHVudGVyc3RhbmQsIEkgZmVlbCBsaWtlIEkgbWlzc2luZyBzb21ldGhpbmcua2llZmdhcnJldHQgIDE1IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29UaGUgYm90dG9tIGxpbmUgaXMgSm9lIFJvZ2FuIGlzIGEgY29tZWRpYW4gd2hvIGhhcyBhIGxvdCBvZiBpbnRlcmVzdHMuIApWQUxFTlRJTiBQT1BPViBPYml0dWFyeQpTZWUsIGJhY2sgaW4gdGhlIENvbGQgV2FyIGVyYSwgQW1lcmljYSBkaWQgYSBidW5jaCBvZiBhYm92ZSBncm91bmQgbnVjbGVhciB0ZXN0aW5nIHRvIGJyYWNlIGZvciB0aGUgZXZlbnR1YWwgaGVsbCB0aGF0IHNlZW1lZCBkZXN0aW5lZCB0byBicmVhayBsb29zZSBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBTb3ZpZXRzLiBBIGJ5cHJvZHVjdCBvZiB0aGVzZSB0ZXN0cyB3YXMgY2FyYm9uIDE0LCBhbiBpc290b3BlIHRoYXQgc3ByZWFkIGFsbCBhY3Jvc3MgdGhlIGdsb2JlLiAKV2Fsa2luZyB0aHJvdWdoIHRoZSBhY3Qgb2YgYSBmaXRuZXNzIG9yIGNvbWZvcnQgdGVzdCBpc24gYXMgaGFyZCBhcyBJIHdhcyBtYWtpbmcgaXQgb3V0IHRvIGJlLiBJIG5lZWRlZCAoYW5kIG5lZWQpIHRvIGJlIGNvbWZvcnRhYmxlIGluIHNpbGVuY2UuIEkgbmVlZCB0byBiZSBjb29sIGluIGFzIG1hbnkgY2lyY3Vtc3RhbmNlcyBhcyBwb3NzaWJsZS4gRm9yIFJQQyAgIHRoaXMgaXMgcGxhY2luZyB5b3VyIHRydXN0IGluIENocmlzdCB0byB3b3JrIGFsbCB0aGluZ3Mgb3V0LiBJIGRvbiBuZWVkIHRvIGJlIG1vcmUgd2l0dHkgdGhhbiBteSB3aWZlLCBJIGRvbiBuZWVkIHRvIGp1bXAgdGhyb3VnaCBhbGwgdGhlIGhvb3BzIHJpZ2h0IHZlcmJhbGx5IG9yIGFueXRoaW5nLiBJIGp1c3QgbmVlZCB0byBoYXZlIG15IG93biBzdGFuZGFyZHMsIGNvbW11bmljYXRlIHRoZW0sIGVuZm9yY2UgdGhlbSwgbm90IGJlIHRoZSBmaXJzdCB0byByZWFjdCB0byBlbW90aW9uYWwgc2l0dWF0aW9ucywgYW5kIGxpdGVyYWxseSBqdXN0IGtlZXAgbXkgbW91dGggc2h1dApCZXN0IEhvb2t1cCBTaXRlcyBmb3IgR2V0dGluZyBMYWlkIHdpdGggQnJpdGlzaCBHaXJscwpJIHNlcmlvdXNseSBqdXN0IHRoaW5rIHlvdSBhcmUgYSBNZXNzZXIgYWxvbmUgdHlwZSB0aG91Z2ggd2hlcmUgeW91IGNhbiBzYXZlIHlvdXIgbW9uZXkuIFlvdSBkb24ndCBuZWVkIHRvIGtub3cgdGhhdCBtdWNoIGFib3V0IG5ldHdvcmtpbmcgZm9yIHRoZSBBKywgaXQncyBtb3JlIGhhcmR3YXJlIGFuZCBvcGVyYXRpbmcgc3lzdGVtIHR5cGUgc3R1ZmYuIFRoYXQncyB3aHkgdGhlcmUncyBhIE5ldHdvcmsrIDspLiAKVGhlcmUgaXMgYW4gdW5saW1pdGVkIG51bWJlciBvZiBwb3NzaWJsZSB0ZWxscywgZm9yIGl0IGlzIGh1bWFuIG5hdHVyZSB0byByZWFjdCBpbiBzb21lIHdheSB3aGVuIGV4Y2l0ZWQsIGFuZCBldmVyeW9uZSBpcyBkaWZmZXJlbnQuIFBpY2tpbmcgdXAgdGVsbHMgb24geW91ciBvcHBvbmVudHMgY2FuIGJlIGRvbmUgb25seSBieSBwYXlpbmcgYXR0ZW50aW9uIHRvIGRldGFpbC4gU28gcHJhY3RpY2UgY29uY2VudHJhdGluZyBvbiB5b3VyIG9wcG9uZW50cyBhcyBtdWNoIGFzIHBvc3NpYmxlIHdoaWxlIGhpZGluZyBhbnkgdGVsbHMgeW91IG1heSBoYXZlLiBMZWFybmluZyB0byBjb250cm9sIHlvdXIgZW1vdGlvbnMgdW5kZXIgbWFueSBzaXR1YXRpb25zIHRha2VzIHByYWN0aWNlLCBidXQgaXQgaXMgdmVyeSBpbXBvcnRhbnQgYmVjYXVzZSBwb2tlciBpcyBhIGdhbWUgb2YgaW5mb3JtYXRpb24sIGFuZCB5b3UgZG9uJ3Qgd2FudCB0byBnaXZlIGFueSBtb3JlIG9mIGl0IGF3YXkgdGhhbiB5b3UgaGF2ZSB0by4gSWYgeW91IGFyZSBhYmxlIHRvLCB5b3VyIGdhbWUgd2lsbCBjZXJ0YWlubHkgaW1wcm92ZS4KSW4gdGVybXMgb2YgdGhlIGFjdHVhbCBuYXJyYXRpdmUgb2YgdGhlIHN0b3J5PyBObyBjbHVlLiBUaGUgc3ltYm9saXNtIGlzIGFsbCB0aGVyZSB0aG91Z2guIApTaWduIGluLiAKQWxtb3N0IGFueXdoZXJlIHlvdSBnbyBpbiBFZG1vbnRvbiwgd2hldGhlciB5b3UgYXJlIGRpbmluZyBhdCBjaGVmIERhbmllbCBDb3N0YSBtb2Rlcm4gSXRhbGlhbiB0cmF0dG9yaWEgVWNjZWxsaW5vLCBvciBzaXBwaW5nIGNvY2t0YWlscyBhdCB0aGUgQXJ0IE5vdXZlYXUgaW5zcGlyZWQgQmFyIENsZW1lbnRpbmUsIG9yIGVuam95aW5nIHRhY29zIGF0IHRyZW5keSBUcmVzIENhcm5hbGVzLCBvbmUgdGhpbmcgaXMgY2xlYXIuIApIb25vcmFibGUgbWVudGlvbnMgYXJlIHRoZSBHb3Jnb24gYW5kIHRoZSBHdWlsZHBhY3QsIHRoZSB0d28gVGhlcm9zIG5vdmVsbGFzLCBLcnVwaGl4IEluc2lnaHQsIERyZWFtcyBvZiB0aGUgQ2l0eSwgYW5kIHRoZSBPcmFjbGUgb2YgRXBoYXJhLgoiSXQgd2FzIGxpa2UgcHVuY2hpbmcgYSBicmljayB3YWxsLCBoZSdzIGdvdCBhIGhlYWQgbGlrZSBhIGJvd2xpbmcgYmFsbC4gSGUncyBub3QgdGhlIGJlc3QgbG9va2luZyBibG9rZSAgIGhlIGxvb2tzIHRvdWdoIGFuZCBydWdnZWQgICBhbmQgaGFkIGEgcG9rZXIgZmFjZSB3aGVuIEkgaHVydCBoaW0sIiBTbWl0aCBzYWlkIGFib3V0IEFicmFoYW0uIApZb3VyIGF2ZXJhZ2UgY29uc3VtZXIgZG9lc24gbG9vayBmb3IgdGhlIEdvbGRlbiBSZXRyaWV2ZXIgY2x1YiBzdGFtcCBvZiBhcHByb3ZhbC4gdGhleSBsb29rIGZvciBsb2NhbCBicmVlZGVycyB0aGF0IHNlbGwgR29sZGVuIFJldHJpZXZlcnMgYW5kIGFyZSBBS0MgcmVnaXN0ZXJlZC4gVGhlIHN0cmVuZ3RoIG9mIG1hcmtldGluZyBpc24gaGVsZCBpbiB0aGUgR29sZGVuIFJldHJpZXZlciBDbHViLCBidXQgdGhlIEFLQywgZXZlbiBpZiB0aGF0IGlzIGJlY2F1c2Ugb2YgdGhlIGluZGl2aWR1YWwgY2x1YnMuClNvLCBob3cgZGlkIGl0IGhhcHBlbj8gT24gU2F0dXJkYXksIERlbnZpbGxlIG5hdGl2ZSBEZW1hdXJvIGFuZCBoZXIgZnJpZW5kIEpvaG4gQ2FwcmEgZGVjaWRlZCB0byBpbmR1bGdlIHRoZWlyIHllbiB0byBiZXQuIFRoZWlyIEF0bGFudGljIENpdHkgamF1bnQgYmVnYW4gaW5ub2N1b3VzbHkgZW5vdWdoLCB3aXRoIERlbWF1cm8sIG9ubHkgYSBjYXN1YWwgY2FzaW5vZ29lciwgcGxhbnRpbmcgaGVyc2VsZiBpbiBmcm9udCBvZiBhIHBlbm55IHNsb3QgbWFjaGluZSBvbiB0aGUgQm9yZ2F0YSBmbG9vciBhbmQgQ2FwcmEgZ29pbmcgb2ZmIHRvIHRyeSBoaXMgaGFuZCBhdCB0aHJlZSBjYXJkIHBva2VyLiBTaGUgdmVudHVyZWQgaW50byB0aGUgcG9rZXIgcm9vbSB0byBjb2xsZWN0IGhlciBmcmllbmQsIHdobyB3YXMgbG9zaW5nIG1vbmV5LiAKWWVhaCEgVGhpcyAiZXZlcnlvbmUgY2FuIGdldCB0byB0aGlzIGxldmVsIGlmIHRoZXkganVzdCB0cnkiIHRhbGsgaXMgYSAid2VsbCB5ZWFoIGJ1dCBhY3R1YWxseSBubyIgc2l0dWF0aW9uLiBZb3UgcmVhbGx5IGdvdHRhIGhhdmUgdGhlIHJpZ2h0IG1lbnRhbGl0eSBhbmQgbGVhcm5pbmcgYXR0aXR1ZGUsIGFuZCB0aGVvcmV0aWNhbGx5IG1vc3QgcGVvcGxlIGNvdWxkIGxlYXJuIHRoaXMgYnV0IGEgbG90IG9mIHBlb3BsZSBqdXN0IGdldCBzdHVjayBhdCBhIGNlcnRhaW4gcG9pbnQuIApPdXRnb2luZyBmb290YmFsbCBuZXRiYWxsIGNsdWIgcHJlc2lkZW50IFBhdWwgU3BlbmNlciBoYXMgYXR0cmlidXRlZCB0aGUgc3BvcnRzIGNsdWIncyBsYWNrIG9mIGZpbmFuY2lhbCBzdXBwb3J0IGluIHJlY2VudCBzZWFzb25zIGFzIGEgbWFqb3IgcmVhc29uIGZvciB0aGUgZm9vdGJhbGwgY2x1YidzIHdvZXMuIFRoZSBwcm9wb3NlZCBjYXIgcGFyayBkZWFsIHdpdGggdGhlIGNvdW5jaWwgaXMgbWVudGlvbmVkIGluIHRoZSBzcG9ydHMgY2x1YidzIGFubnVhbCByZXBvcnQgb2YgT2N0b2JlciBsYXN0IHllYXIuIE1lbWJlcnMgdm90ZWQgdG8gbWFrZSB0aGUgY2FyIHBhcmsgYSAibm9uIGNvcmUiIGFzc2V0IHdoaWNoIGNsZWFyZWQgdGhlIHdheSBmb3IgaXRzIHNlbGwgb2ZmLiAKQWZ0ZXIgVG9yYnMgcmV3b3JrcyBJIGNhbiBzYXkgaGUgdGhlIG9ubHkgY2hhcmFjdGVyIEkgbGlrZSBwbGF5aW5nLCBiZWNhdXNlIG9mIGhpcyB2ZXJzYXRpbGl0eS4gCldoZW4gaW4gZG91YnQsIHNlZSB0aGUgZmluZSBmb2xrcyBvdmVyIGF0IGZvciBhZHZpY2UuIEkgaGF2ZSB0byBzYXkgdGhhdCB0aGlzIGlzIG9uZSBvZiB0aGUgYmVzdCBibG9nIHBvc3RpbmdzIEkgaGF2ZSBldmVyIHJlYWQhIFdoZW4gYWxsIGVsc2UgZmFpbHMgeW91IGNhbiBkbyBsaWtlIG15IHNpc3RlciBkb2VzLiBXaGVuIHdlIG1vdmVkIGhlcmUsIG15IHNpc3RlciB3ZW50IGRvd24gaGlsbCwgaW4gYSBiaWcgd2F5LiBNb20gZGlkbid0IGNhcmUgd2hhdCBzaGUgd2FzIGRvaW5nIGFuZCB3ZSBkaWQgbm90IGtub3cuIEJ5IHJlZnVzaW5nIHRvIGFja25vd2xlZGdlIHlvdXIgZmVlbGluZ3MgYW5kIHRob3VnaHRzLCB0aGUgZ2FzbGlnaHRlciBjYXVzZXMgeW91IHRvIGRvdWJ0IHlvdXJzZWxmIG1vcmUgYW5kIG1vcmUuIEl0J3MgbGlrZSB3aGF0IGluIHRoZSB3b3JsZCBhcmUgeW91IHRhbGtpbmcgYWJvdXQhIElmIHNoZSB0cnVseSBpcyBhIGNvbXB1bHNpdmUgbGlhciwgSSBjYW4ndCBvZmZlciBhbnkgc3VnZ2VzdGlvbnMgYmVjYXVzZSB0aGV5IGFyZSBqdXN0IGltcG9zc2libGUgZm9yIG1lIHRvIHVuZGVyc3RhbmQgb3IgZGVhbCB3aXRoLgpIb3cgZG8geW91IGdldCBhIGZyZWUgbGFwdG9wIG5vIHNjYW0/bmlmIHlvdSBhbnN3ZXIgdGhlaXIgc3VydmV5LCB5b3Ugd2lsbCBiZSBhc2tlZCBmb3IgcGVyc29uYWwgaW5mb3JtYXRpb24gdGhhdCBzaG91bGQgTkVWRVIgYmUgZ2l2ZW4gb3V0IHRvIGFuIHVua25vd24gcGFydHksIGluZm9ybWF0aW9uIHN1Y2ggYXMgc29jaWFsIHNlY3VyaXR5IG51bWJlcnMuIFJlbWVtYmVyICwgdG8gcmVjZWl2ZSB0aGUgbGFwdG9wLCB5b3UgbXVzdCBhbnN3ZXIgdGhlIHN1cnZleSBpbiBpdHMgZW50aXJldHkuIEhvd2V2ZXIsIGF0IHRoaXMgcG9pbnQgeW91IGhhdmUgZ2l2ZW4gdG9vIG11Y2ggaW5mb3JtYXRpb24gYW5kIHRoZXkgd2lsbCBibG93IHVwIGFueSBwaG9uZSBudW1iZXIgeW91IGhhdmUgZ2l2ZW4gd2l0aCBjYWxscyBmcm9tIGV2ZXJ5IHRlbGVtYXJrZXRlciBvbiB0aGUgcGxhbmV0LCBzbyBpZiB5b3UgZ2l2ZSB0aGVtIHlvdXIgY2VsbCBwaG9uZSBudW1iZXIsIHlvdSdyZSBzY3Jld2VkLiAKQmFya2xleSBzYWlkIG9uIHRoZSBhaXIgZHVyaW5nIHRoZSBOQkEgcGxheW9mZnMgaGUgd2Fzbid0IGdvaW5nIHRvIGdhbWJsZSBmb3IgInRoZSBuZXh0IHllYXIgb3IgdHdvIiBhZnRlciBoZSB3YXMgc3VlZCBieSBhIExhcyBWZWdhcyBTdHJpcCBjYXNpbm8gaW4gTWF5IGZvciBmYWlsaW5nIHRvIHBheSAkNDAwLDAwMCBpbiBnYW1ibGluZyBtYXJrZXJzLCBvciBsb2Fucy4gVGhlIDQ1IHllYXIgb2xkIEJhcmtsZXkgcmVwYWlkIGhpcyBkZWJ0IHRvIHRoZSBXeW5uIExhcyBWZWdhcyBjYXNpbm8gYWxvbmcgd2l0aCBhICQ0MCwwMDAgZGlzdHJpY3QgYXR0b3JuZXkncyBmZWUuIFNtIF5ec2YgXmJ3c2pwIGleSyBQcmVzZW50ZWQgYnkgQk1PYyAybmQgQW5udWFsIExldGhicmlkZ2UgMjAwOCBDU0EgTWluaSBTb2NjZXJGRVNUIHByZXNlbnRlZCBieSBCTU8gVGhlIExldGhicmlkZ2UgU29jY2VyIEFzc29jaWF0aW9uIHdpbGwgYmUgaG9sZGluZyB0aGUgMm5kIEFubnVhbCBDU0EgTWluaSBTb2NjZXJGRVNUIHByZXNlbnRlZCBieSBCTU8gZm9yIFU0ICAgVTE0IEhvdXNlIExlYWd1ZSBUZWFtcyBvbiBTYXR1cmRheSBKdW5lIDIxLCAyMDA4IGF0IHRoZSBMZXRoYnJpZGdlIFNwb3J0cyBQYXJrIChTaGVycmluZyBzaXRlIGJlaGluZCB0aGUgbm9ydGggc2lkZSBXYWwgTWFydCkuIApUaGUgV29ybGQgRmluYW5jaWFsIENlbnRlciBob3VzZXMgTWVycmlsbCBMeW5jaCwgYnV0IHdpdGggdGhlIGZpcm0ncyB0YWtlb3ZlciBieSBCYW5rIG9mIEFtZXJpY2EsIE1lcnJpbGwncyBjb250aW51ZWQgcHJlc2VuY2UgaW4gdGhlIGJ1aWxkaW5nIGlzIHF1ZXN0aW9uYWJsZS4gCkkgaGF0ZSBvbmUgc2lkZSBvZiBtaW5lIGJlaW5nIHRvdWNoZWQsIGVhY2ggc2lkZSBpZiBtaW5lIGZlZWxzIGRpZmZlcmVudCBiZXZhdXNlIGl0IGZlZWxzIGEgYml0IHRpbHRlZCBvciBzb21ldGhpbmcuIApBIGtleSBjb21wb25lbnQgaXMgdGhhdCBzZWxsaW5nIHRoZSBjYXIgaXMgdGhlIGZpcnN0IHByaW9yaXR5LiBOb3RoaW5nIGVsc2UgY2FuIGhhcHBlbiB1bnRpbCB0aGF0IGhhcHBlbnMuIFNvbWUgZGVhbGVyc2hpcHMgYXJlIGdvb2QgYXQgaXQuIFRoZXkgdGVuZCB0byBiZSByZWFsbHkgc21hbGwuIEJ1dCBtb3N0IGRlYWxlcnNoaXBzIHRoYXQgdHJ5IGl0IHRlbmQgdG8gbG9zZSBGIHBlbmV0cmF0aW9uIGFuZCBwcm9maXRhYmlsaXR5LiBGIG1hbmFnZXJzIGFyZSBodW1hbnMgbGlrZSBldmVyeWJvZHkgZWxzZSwgYW5kIHdlIHRlbmQgdG8gdGFrZSB0aGUgcGF0aCBvZiBsZWFzdCByZXNpc3RhbmNlLgpTb21lIGlzb2xhdGVkIGNvbW11bml0aWVzIHJlY2VpdmUgZnVuZGluZyB0byBoZWxwIHdpdGggaW5mcmFzdHJ1Y3R1cmUgd2hpbGUgb3RoZXJzIGRvIG5vdC4gCkhlIGFsc28gYSBtb25zdGVyLCB3aGljaCBJIHdvbiBnZXQgaW50bywgYnV0IHRydXN0IG1lLiAKRGF1Z2h0ZXIgaW4gbGF3IG9mIEppbSBQYXR0aXNvbi4gU2lzdGVyIGluIGxhdyBvZiBHZW9yZ2UgKERlYmJpZSkgUGF0dGlzb24uIFNwZWNpYWwgZnJpZW5kIG9mIFRpbmEuIApJdCB3YXMgMSBtTCwgYSB0aGltYmxlZnVsLCBidXQganVzdCBlbm91Z2ggZm9yIGEgYmFieSBzbyBzbWFsbC4gVGhlIG51cnNlIGF0dGFjaGVkIGl0IHRvIHRoZSB0dWJlIHNuYWtpbmcgaW50byB0aGUgYmFieSdzIG1vdXRoIGFuZCBkb3duIHRvIGhlciBiZWxseS4KU29tZSBvbmxpbmUgcG9rZXIgc2l0ZXMgZXZlbiBvZmZlcnMgZnJlZSBwb2tlciBmb3IgYmVnaW5uZXJzIGFzIHdlbGwgYXMgYWR2YW5jZWQgcG9rZXIgcGxheWVycy4gSG93ZXZlciwgdGhlcmUgYXJlIHNvbWUgaW1wb3J0YW50IHRoaW5ncyB0byBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24gYmVmb3JlIHlvdSBzdGFydCBwbGF5aW5nIHRoZSBnYW1lIG9mIHBva2VyIGluIGEgcGFydGljdWxhciBvbmxpbmUgcG9rZXIgc2l0ZS4gCkdldCB0aGF0IFBva2VyIFRhYmxlIHJlYWR5CkkganVzdCBhbHdheXMgbWFrZSBzdXJlIGl0J3Mgb2sgZm9yIG15IHNraW4gdHlwZSB0byB1c2UgYSBzbWFsbCBhbXQgdG8gdGVzdCBpdC4uIApUaGUgTm8uIE9wZW4gdG8gd2luIGEgMyBob3VyLCAyNSBtaW51dGUgc3RydWdnbGUgdGhhdCBiZWdhbiBUaHVyc2RheSBldmVuaW5nIGFuZCBlbmRlZCBhZnRlciBtaWRuaWdodCBGcmlkYXkuCigxKSAgIEZvbGxvdyBwcm9wZXIgUmVkZGlxdWV0dGUgYW5kIHRoZSBzdWJyZWRkaXQgUG9zdGluZyBQcm9jZWR1cmVzLCB0aGlzIGluY2x1ZGVzIGZsYWlyaW5nIHlvdXIgcG9zdCBhbmQga2VlcGluZyBjb250ZW50IGluIHRoZSBhcHByb3ByaWF0ZSBEYWlseSBhbmQgV2Vla2x5IFRocmVhZHMuIEtlZXAgaXQgY2l2aWwgYW5kIGRvIG5vdCBtYWtlIHRocmVhdHMgb3IgdXNlIGV4Y2Vzc2l2ZSBmb3VsIGxhbmd1YWdlLiAKSSBsaWtlIHRvIGp1c3QgbGlrZSB0aG91Z2h0cy9xdWVzdGlvbnMvb2JzZXJ2YXRpb25zLCBhbmQgaG9wZSBzb21ldGhpbmcgaW4gbXkgbG9uZyBsaXN0IG9mIGlkZWFzIGhhcyBzb21lIHZhbHVlLgpNeSBtb3RoZXIgZGVhdGggY2FtZSB3aGVuIEkgd2FzIHlvdW5nIGFuZCBteSBjb3VzaW4gaGVscGVkIG1lIHRocm91Z2ggaXQgYWxsLiBCdXQgSSBjb3VsZG4gaGVscCBoZXIgdGhyb3VnaCBoZXIgZmF0aGVyIGRlYXRoIDMgeWVhcnMgYWdvLiAKQWZ0ZXIgdGhpcywgZXZlcnlvbmUgZ29lcyBob21lIGVpdGhlciBhIHdpbm5lciBvciBhIGxvc2VyLiAKR2FtYmxpbmcgUG9rZXIgUGxheWVycyBwdXQgdGhlaXIgbW9uZXkgd2hlcmUgdGhlaXIgbW91dGggaXMuLiAKVGhlIGJlc3QgcGFydCBpcyBiZWNhdXNlIGl0IGNhbiBnbyB1cCB0aGUgd2F5IHlvdSBsb29rIGF0IGZvb2QgZm9yZXZlciBhbmQgeW91IHdpbGwgd2FudCB0byBjaG9vc2UgaGVhbHRoeSBmb29kcyB0aGF0IGFsbG93IGZlZWwgZmFudGFzdGljLCBFbmhhbmNlIEZvY3VzIGFuZCBDbGFyaXR5IGFuZCBoZWxwIHlvdSBrZWVwIGJ1aWxkaW5nIGxlYW4gbWFzcy4gCk15IGZlYXIgd2l0aCBsaXZpbmcgYWxvbmUgaXMgdGhhdCBJJ2xsIGp1c3Qgc3BlbmQgYWxsIGRheSBpbiBteSByb29tLCB3aGlsZSBnb2luZyByYW5kb20gZm9yY2VzIG1lIHRvIHRhbGsgdG8gbW9yZSBwZW9wbGUuIEknbSB1bmZvcnR1bmF0ZWx5IHN1cGVyIGludHJvdmVydGVkLCBzbyBqdXN0IG1lZXRpbmcgbmV3IHBlb3BsZSBpcyBhIHN0cnVnZ2xlIGZvciBtZS4gUGx1cyBteSBjYW1wdXMgaGFzIHZlcnkgZmV3IGNsdWJzLCBtb3N0IGFyZSBzdXBlciBuaWNoZS4gCklnZXIgbWFkZSB0aGUgY29tbWVudHMgYWZ0ZXIgYSBEaXNuZXkgc2hhcmVob2xkZXIgc3Rvb2QgdXAgdG8gc2F5IGhlIHdhcyAicHV6emxlZCIgYnkgaG93IERpc25leSwgd2hpY2ggb3ducyBBQkMsIGRpZCBub3QgY29uZGVtbiB0aGUgY29tZWRpYW5zLgpUaGF0IGhhcHBlbnMgdG8gbWUgYWxsIHRoZSB0aW1lIGluIFdXRi4gClRlbGxpbmcgcGVvcGxlIHdobyBhbHJlYWR5IGhhdmUgdHJvdWJsZSBjb250cm9sbGluZyB0aGVpciBlYXRpbmcgdGhhdCB0aGV5IGNhbiBmYXN0IGZvciAxNiBob3VycyBhbmQgdGhlbiBlYXQgIm5vcm1hbGx5IiBmb3IgOCBob3VycyBpcyBhIFJFQ0lQRSBGT1IgRElTQVNURVIuIApUaGlzIGJyZWF0aGFibGUgbWF0ZXJpYWwgZmxldyBpbiB0aGUgZmFjZSBvZiB0aGUgdHlwaWNhbCBmb2FtIHBhZGRlZCBzZWF0IGN1c2hpb25zLCBhbmQgd2FzIHNwZWNpYWxseSBkZXZlbG9wZWQgdG8gcmVkdWNlIGhlYXQgYnVpbGR1cC4gCkRvZXMgaXQgZmVlbCBsaWtlIGFuIGluanVyeSB5b3UgY2FuIGltYWdpbmU/IEkgbGlrZSB0byB1c2UgYmVpbmcgc3RhYmJlZCwgdmVyeSBmZXcgcGVvcGxlIGhhdmUgYWN0dWFsbHkgYmVlbiBzdGFiYmVkLCBidXQgbW9zdCBwZW9wbGUgY2FuIGltYWdpbmUgaXQuIEEgbGFrZSBvZiBidXJuaW5nIGdhc29saW5lIGJldHdlZW4gdGhlIGhpcHMuIE5vYm9keSBoYXMgYSBsYWtlIG9mIGJ1cm5pbmcgZ2Fzb2xpbmUgYmV0d2VlbiB0aGVpciBoaXBzLCBidXQgdGhleSBjYW4gaW1hZ2luZSB3aGF0IHRoYXQgbWlnaHQgZmVlbCBsaWtlLiAKVHJ5aW5nIHRvIHB1bmlzaCBwYXJlbnRzIGlzIGxpa2Ugc2hvb3RpbmcgcG9vbCB3aXRoIGEgcm9wZS4gCkF0dG9ybmV5IGV4cGxvaXRzIHRoZSBibGluZCB0byBzdWUgYnVzaW5lc3NlcwpJcyB0aGUgR0YgRGFpbHkgSGVyYWxkIHNvdXJjZSBvZgpFdCBub3VzIG5lIHNvbW1lcyBwYXMgbGVzIHNldWxzICBzJ2VuIHRyZSBpbnF1aXRzLCBkJ2F1dHJlcyBhc3NvY2lhdGlvbnMgZCdoYWJpdGFudHMsIERlbWFpbiBMYSBDaGFwZWxsZSBldCBTT1MgTGEgQ2hhcGVsbGUgcG91ciBuZSBwYXMgbGVzIGNpdGVyLCBsJ29udCBhdXNzaSBmYWl0IHNhdm9pci4uIApXZSd2ZSBoYWQgYXNzZW1ibGllcyBvbiB3aGVyZSB0byBnbywgd2hhdCBkb29ycyB0byBvcGVuIGFuZCB3aGF0IHRvIGRvLldhbm5hYmVHcm91bmRob2cgICAyMSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBtb250aHMgYWdvUGh5c2ljcyBteSBkdWRlLiAKQW5kIGFsdGhvdWdoIHdlIGhhdmUgZGlmZmVyZW50IGJlbGllZnMgaW4gdGhhdCBzZW5zZSB3ZSBuZWVkIHRvIHN0aWNrIHRvZ2V0aGVyIGFuZCBzdXBwb3J0IGVhY2ggb3RoZXIuIAoiQ2x1YnMgYXJlbiBqdXN0IGNvbXBldGluZyBhZ2FpbnN0IGEgY291cGxlIG9mIHB1YnMgW2ZvciB0aGUgc3BlbmRpbmcgZG9sbGFyXSAgdGhleSBjb21wZXRpbmcgYWdhaW5zdCBoYXJkd2FyZSBzdG9yZXMgYW5kIHRoZSBpbnRlcm5ldC4gIkl0IG5vdCBlbm91Z2ggdG8gaGF2ZSBhIGJhbmsgb2YgcG9rZXIgbWFjaGluZXMgYW5kIGEgYmlzdHJvLiIgV2hhdCBpcyBoYXBwZW5pbmcgaW4gdGhlIElsbGF3YXJyYSBpcyBhIHRyZW5kIHRocm91Z2hvdXQgTlNXLiBJbiBKdWx5IDIwMTEsIHRoZXJlIHdlcmUgMTQ3MSByZWdpc3RlcmVkIGNsdWJzIGluIE5TVywgZG93biA0LjIgcGVyIGNlbnQgZnJvbSAxNTM1IGluIDIwMDEuIApUaGUgZmlyc3QgcGVyc29uIEkgY2FsbGVkIHdoZW4gSSBtYWRlIG15IGRlY2lzaW9uIHdhcyB0aGUgYmlydGggZmF0aGVyLCBhIGZyaWVuZCBmcm9tIGhpZ2ggc2Nob29sIHdobyBoYWQgYmVlbiBoZWxwaW5nIG1lIHByb2Nlc3MgdGhlIGlkZWEgdGhhdCBJIGNvdWxkIGJlIG1vcmUgdGhhbiBhIHdpZG93LiBJbiB0aGF0IGltcG9zc2libGUgY29udmVyc2F0aW9uLCBoZSB0b2xkIG1lIGV2ZXJ5dGhpbmcgSSBuZWVkZWQgdG8ga25vdyBhYm91dCB3aGF0IGhpcyBleHBlY3RhdGlvbnMgd291bGQgYmUgZm9yIG91ciByZWxhdGlvbnNoaXAgICBpZiBJIGtlcHQgdGhlIGJhYnkuIEhlIHdhc24ndCBnb2luZyB0byBiZSBhcm91bmQgYXMgbXVjaCBhcyBJIHdvdWxkIHdhbnQgaGltIHRvLiAKSGFuZCAyIEknbGwgdHJ5IHRvIHBvc3QgdGhlIHJhbmdlcyB3aGVuIEkgZ2V0IHRvIG15IGNvbXB1dGVyIGJ1dCBJIHJlbWVtYmVyIGxhc3QgbmlnaHQgdGhhdCBpbiBlcXVpbGFiIG15IHJhbmdlcyBmb3IgaGltIGFuZCBtZSB3ZXJlIGFjdHVhbGx5IG1hdGNoZWQgdXAgNDAvNjAgZmF2b3JpbmcgaGltIHdoaWNoIGF0IGZpcnN0IG1hZGUgbWUgZmVlbCBqdXN0aWZpZWQgaW4gbXkgYWN0aW9uIGJ1dCBpbiByZWFsaXR5LCBJIHNob3VsZCBoYXZlIGNhbGxlZCB3aXRoIHRoZSBnb29kIG9kZHMuIE1vcmUgaW1wb3J0YW50bHksIEkgcmFuIGl0IHRocm91Z2ggdGhlIFBJTyBzaWx2ZXIgYW5kIGxvIGFuZCBiZWhvbGQsIGl0IHJlY29tbWVuZGVkIGNhbGxpbmcgd2l0aCA2NWNjIHRvIHNlZSBhIHR1cm4gc29tZXRoaW5nIGxpa2UgOTUlIG9mIHRoZSB0aW1lIGZvbGRpbmcgbGlrZSA0IHBlcmNlbnQgYW5kIGphbW1pbmcgbGVzcyB0aGFuIG9uY2UgcGVyY2VudCBvZiB0aGUgdGltZS4gCkEgbmV3IHN0dWR5IHdpbGwgYmVnaW4gaW4gY29taW5nIG1vbnRocyB0byB1cGRhdGUgdGhlc2UgZmluZGluZ3MsIiBoZSBzYWlkICJUaGlzIHllYXIsIHRoZSBOU1cgR292ZXJubWVudCBhbGxvY2F0ZWQgJDI1IG1pbGxpb24gZm9yIHJlc3BvbnNpYmxlIGdhbWJsaW5nIGluaXRpYXRpdmVzLCBpbmNsdWRpbmcgcGhvbmUsIG9ubGluZSBhbmQgZmFjZSB0byBmYWNlIGNvdW5zZWxsaW5nIHNlcnZpY2VzLCBpbmNsdWRpbmcgRHViYm8uIiBMaWZlbGluZSBDZW50cmFsIFdlc3QncyBCYXJiYXJhIEJhcmQgc2FpZCB0aGV5IGhhZG5vdGljZWQgYSBzbGlnaHQgaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiBnYW1ibGVycyBzZWVraW5nIGNvdW5zZWxsaW5nIG92ZXIgdGhlIHBhc3QgMTIgbW9udGhzLiAiUGVvcGxlIGFjcm9zcyB0aGUgYWdlIGdyb3VwcyBnYW1ibGUsIiBzYWlkIE1zIEJhcmQsIHdobyBtYW5hZ2VzIGEgdGVhbSBvZiBzaXggY291bnNlbGxvcnMgIHR3byBlYWNoIGluIER1YmJvLCBCYXRodXJzdCBhbmQgT3JhbmdlLiAKVG8gbWFrZSAxMXRoIGlzIGluc2FuZSBvbiBpdHMgb3duLCBhbmQgdGhlbiB0byB3aW4sIHRoYXQgbGl0ZXJhbGx5IHNvbWV0aGluZyB0aGF0IHlvdSBsaWtlIGRyZWFtIG9mIGJ1dCB5b3UganVzdCBuZXZlciBleHBlY3QgdG8gaGFwcGVuLiBMYXN0IHRpbWUsIHdoZW4gSSBnb3Qga25vY2tlZCBvdXQgaW4gMTF0aCwgSSB3YXMgcmVhbGx5IGhhcHB5LiAKUHJvc2VjdXRvciBKYW1lcyBILiBDbGFwcCBpbmRpY2F0ZWQgRGltYXR0ZWkgaGFzIGFkbWl0dGVkIGJyZWFraW5nIGludG8gYm90aCB0aGUgQ29ybmVyIFB1YiBhbmQgdGhlIE11ZyBhbmQgTWFsbGV0LiBUcm9vcGVyIFByZXNncmF2ZXMgdG9sZCBqdXJvcnMgaGUgYW5kIGRldGVjdGl2ZSBEb25hbGQgU3RldmVucyB3ZXJlIGhpZGluZyBpbnNpZGUgdGhlIENvcm5lciBQdWIgb24gSmFuLiAKT3RoZXIgZW1haWxzIGZsYWdnZWQgYXMgaW5hcHByb3ByaWF0ZSBpbmNsdWRlIGxpbmtzIHRvIGNvbW1lcmNpYWxzIGFuZCB2aWRlb3MuIApPa2F5IGxldHMgcHJldGVuZCB3ZXJlIGdvaW5nIHRvIHRyeSBhbmQgaGFjayBoZWFsdGggb24gYSBnYW1lLiAKU2hlIHNhaWQgd2FzaGluZyBjb250YW1pbmF0ZWQgbGV0dHVjZSB3b24ndCBlbnN1cmUgdGhhdCBoYXJtZnVsIGdlcm1zIGFyZSBraWxsZWQuCklmIHlvdSBwYXkgYXR0ZW50aW9uIHRvIGxpZmUncyBkZXRhaWxzLCB5b3UnbGwgZmluZCB5b3Vyc2VsZiBiZXR0ZXIgZXF1aXBwZWQgdG8gZXhwbG9pdCBvcHBvcnR1bml0aWVzIHdoZW4gdGhleSBwcmVzZW50IHRoZW1zZWx2ZXMuLiAKTnVtZXJvdXMgY2hhcml0aWVzIHVzZSB0aGUgTWFyYXRob24gYXMgYSBmdW5kIHJhaXNlciwgYnV0IHRoaXMgeWVhcidzIHJhY2UgaXMgdGhlIGxhc3QgY2hhcHRlciAoaGVuY2UgY2xvc3VyZSkgaW4gdGhpcyBwYXJ0IG9mIEFubmEgUGllcmNlJ3MgbGlmZS4gU2hlIGFuZCBoZXIgdHdvIHNvbnMgd2lsbCByZWxvY2F0ZSB0byBDYWxpZm9ybmlhIGFmdGVyIHRoaXMgeWVhcidzIHJhY2UuCk1vc3QgaW1wb3J0YW50IGlzIHRoaXM6IHlvdSBkb24gaGF2ZSB0byBjb252ZXJ0IHRvIGFueW9uZSByZWxpZ2lvbiBvciBhY2NlcHQgeW91ciAiaGlnaGVyIHBvd2VyIiBhcyByZWxpZ2lvdXMuIFlvdSBtaWdodCBhY2NlcHQgInRoZSBjb3Ntb3MiIGFzIGEgaGlnaGVyIHBvd2VyLiBZb3UgZG9uIG5lZWQgdG8gdW5kZXJzdGFuZCBpdCBmdWxsIG5hdHVyZS4gCkhlIHRoZW4gcHJvY2VlZGVkIHRvIGhhdmUgYSBjb252ZXJzYXRpb24uIApJIGRvbiB3YW50IHRvIGNvbWUgb2ZmIGFzIHJ1ZGUgYnV0IEkgdGhpbmsgeW91IHNob3VsZCBkZWZpbml0ZWx5IHN0aWxsIGNvbnNpZGVyIHRha2luZyBvdXQgSEVDUyBpZiB5b3UgdHJ5aW5nIHRvIHdvcmsgcGFydCB0aW1lIHRvIHBheSBmb3IgdW5pLiAKSSBoYXZlIGEgTW9udGJlbGwgU3VwZXJpb3IgRG93biwgd2hpY2ggd291bGQgYmUgbm90IHF1aXRlIHdhcm0gZW5vdWdoIGZvciB0aG9zZSBjb25kaXRpb25zLCBhbHRob3VnaCBJIHByb2JhYmx5IGp1c3Qgc3VjayBpdCB1cCBhbmQgYmUgYSBiaXQgY29sZC4gU2hlbGwgb3ZlciB0b3AgaWYgbmVlZGVkIGZvciB3ZWF0aGVyIG9yIGNvbGQuLiAKV2F5IHRvIGdvLCBmaXNoLiAKVGhlcmUgYWxzbyBhIFZWSVAgZ2FtaW5nIHJvb20sIHNsb3QgbWFjaGluZXMsIGEgc2VwYXJhdGUgcG9rZXIgcm9vbSBhbmQgZnJpZW5kbHkgc3RhZmYuIApGYXNhbm8gaG9wZXMgdG8gZXZlbnR1YWxseSBkaXNjb3ZlciBhIGJpb21hcmtlciBzcGVjaWZpY2FsbHkgZm9yIGdsdXRlbiBzZW5zaXRpdml0eS4gSW4gdGhlIG1lYW50aW1lLCBoZSBhbmQgb3RoZXIgZXhwZXJ0cyByZWNvbW1lbmQgdGhhdCBhbnlvbmUgd2hvIHRoaW5rcyB0aGV5IGhhdmUgaXQgYmUgdGVzdGVkIGZvciBjZWxpYWMgZGlzZWFzZSBmaXJzdC5Gb3Igbm93LCBhIGdsdXRlbiBmcmVlIGRpZXQgaXMgdGhlIG9ubHkgdHJlYXRtZW50IHJlY29tbWVuZGVkIGZvciBnbHV0ZW4gc2Vuc2l0aXZpdHksIHRob3VnaCBzb21lIG1heSBiZSBhYmxlIHRvIHRvbGVyYXRlIHNtYWxsIGFtb3VudHMsIHNheXMgTXMuIApDYWxsIG1lIHRoYXQgYmVjYXVzZSBJIHdhcyBib3JuIGFuZCByYWlzZWQgaW4gYXJlYSBvZiBQdWVydG8gUmljbyB3aGVyZSB0aGVyZSBpcyBsb3RzIG9mIGZvcmVzdCBhbmQgbm90IG1hbnkgaG91c2VzIGFuZCBwZW9wbGUgYXJlIHNvcnQgb2YgcG9vci4gSXQgbWVhbnMgSSBmcm9tIHRoZSBqdW5nbGUuIEkgbGlrZSB0byBkbyByZWFsIFB1ZXJ0byBSaWNhbiB0aGluZ3MgbGlrZSB3b3JraW5nIHdpdGggYW5pbWFscyBhbmQgcmlkaW5nIGhvcnNlcy4gSSBsb3ZlIFB1ZXJ0byBSaWNvIGFuZCBJIGRlZGljYXRlIGFsbCBteTsgZmlnaHRzIHRvIG15IGZhbWlseSBhbmQgdG8gdGhlIHBlb3BsZSBvZiBQdWVydG8gUmljby4gTXkgZ29hbCBpcyB0byB3aW4gYSB3b3JsZCB0aXRsZSBzbyB0aGF0IEkgY2FuIHRha2UgaXQgYmFjayB0byBteSBob21ldG93biBpbiBQUiBhbmQgc2hvdyB0aGF0IG15IGZpcnN0IGZpZ2h0IHdhc24gdGhlIGxhc3Qgb25lLiBJIHdhbnQgdG8gc2hvdyB0aGVtIHRoYXQgd2hhdGV2ZXIgeW91IHdhbnQgdG8gZG8gaW4gbGlmZSB5b3UgY2FuIG1ha2UgaXQgaGFwcGVuIGlmIHlvdSB3b3JrIGhhcmQgZW5vdWdoLiBjYXVnaHQgcHJvbW90ZXIgRG1pdHJpeSBTYWxpdGEgZXllIGVhcmx5IGxhc3QgeWVhciwgZmlnaHRpbmcgdG8gYSBkcmF3IGFnYWluc3Qgb25lIG9mIFNhbGl0YSBmaWdodGVycywgWXRhbG8gUGVyZWEsIGEgZm9ybWVyIE9seW1waWFuLgpPbSAyMCBuYSA2IGdpbmcgZGUgd2Vra2VyIGFsLCB6b2RhdCB3ZSBvbSBrd2FydCBuYSA3IG9wIGRlIHNodXR0bGUgYnVzIHphdGVuIG9wIHdlZyBuYWFyIFphdmVudGVtLiAKU2l0dGluZyBhY3Jvc3MgdGhlIHBva2VyIHRhYmxlLCB0aGUgaW5zY3J1dGFibGUgQ29ybWFubiBrZWVwcyByYWlzaW5nIHRoZSBzdGFrZXMuClR3aXR0ZXIgQiBkb2VzbiBleGlzdCBhdCBhbGwuIEl0IGV2ZW4gbGVzcyBmZWFzaWJsZSB0aGFuIGxlYXZpbmcgYSB0b3duLiBTdXJlIHlvdSBjb3VsZCBqdXN0IGRvIGluc3RhZ3JhbSBvciBzbmFwY2hhdCBpbnN0ZWFkLiAKVGhpcyB3YXMgYSBzbWFsbCBzdHVkeSB0aG91Z2ggYW5kIEkgdGhpbmsgdGhpcyBtaWdodCBiZSBhbiBhY3RpdmUgYXJlYSBvZiByZXNlYXJjaD8gMyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28uIApUaGV5IGZlZWwgYSBzYWRpc3RpYyB1cmdlIHRvIGRlc3Ryb3kgdGhhdCBnb29kbmVzcy4gCldoZW5ldmVyIGl0IHByZXR0eSBjbGVhciB0aGF0IGEgZ2lybCB3YXMgaW50ZXJlc3RlZCBpbiBtZSwgYW5kIEkgZGlkbiBmZWVsIHRoZSBzYW1lIHdheSwgSSBqdXN0IGFjdGVkIG9ibGl2aW91cyBiZWNhdXNlIEkgZGlkbiB3YW50IHRvIGRlYWwgd2l0aCBpdC5Ob25ldGhlbGVzcywgeW91IHNob3VsZCBzdGlsbCB0ZWxsIGhlciB1cGZyb250IGFuZCBjbGVhcmx5IGhvdyB5b3UgZmVlbC4gWW91IGNvdWxkIGVpdGhlciBncm93IGEgcmVsYXRpb25zaGlwIHdpdGggaGVyLCB3aGljaCBpcyB3aGF0IHlvdSB3YW50LiAKSXQgYSBmaW5lIGxpZmVzdHlsZS4gCkl0cyBtYW55IGhlYWxpbmcgYmVuZWZpdHMgYXJlIGltcG9ydGFudCBpbiBvdXIgaGlnaCB0ZWNoIHdvcmxkIGJlY2F1c2Ugb2Ygb3VyIGJhc2ljIGh1bWFuIG5lZWQgdG8gYmUgbnVydHVyZWQgdGhyb3VnaCB0b3VjaC4gClNvIHJpY2h0aWcgYXVmIGRpZSBQcm9iZSBnZXN0ZWxsdCB3dXJkZSBkaWUgbmVydmxpY2hlIEJlbGFzdGJhcmtlaXQgYWxsZXJkaW5ncyBtaXQgQW5rIHdpZSBmYWhyZW4gd2lyIG5hY2ggWWliaW4gKGVpbmUgaGFsYmUgVGFnZXNyZWlzZSB2b24gQ2hlbmdkdSBlbnRmZXJudCkuIERvcnQgaCBkdSBlaW5lbiBWb3J0cmFnIGRpZSB3aWNodGlnc3RlbiBTdGFuZG9ydGZha3RvcmVuIHdlc3RsaWNoZXIgSW52ZXN0b3Jlbi4gCihDaG9vc2UgIkNvcHkgU2hvcnRjdXQiIGZvciBJbnRlcm5ldCBFeHBsb3JlciwgIkNvcHkgTGluayBMb2NhdGlvbiIgZm9yIE5ldHNjYXBlIGFuZCBNb3ppbGxhLCBvciAiQ29weSBMaW5rIEFkZHJlc3MiIGZvciBPcGVyYSkuIEluIHlvdXIgbmV3cyByZWFkZXIsIHNlbGVjdCB0aGUgb3B0aW9uIHRoYXQgYWRkcyBhIG5ldyBmZWVkIG9yIGNoYW5uZWwsIHRoZW4gcGFzdGUgaW4gdGhlIFVSTCBhbmQgY2xpY2sgT0suLiAKV2hlbiBDb25ncmVzcyBtZW1iZXJzIHJlcHJlc2VudCB0aGUgaW50ZXJlc3RzIG9mIGEgY29tcGFueSBmcm9tIHdob20gdGhleSByZWNlaXZlIGNvbnRyaWJ1dGlvbnMsIGxpa2UgRW5yb24gZm9yIGV4YW1wbGUsIHRoZXkgY2FuIGFuZCBzb21ldGltZXMgYXJlIHByb3NlY3V0ZWQuLiAKSW5zdGVhZCBvZiByZWxlYXNpbmcgdGhlIGluZm9ybWF0aW9uIHRvIHRoZSBwdWJsaWMgYW5kIGxldHRpbmcgdGhlIGNvdW50cnkga25vdyB0aGF0IHdlIHdlcmUgZWxlY3RpbmcgYW4gYWR1bHRlcmVyLkJ5IG5vIG1lYW5zIGlzIHNoZSBvYmxpZ2F0ZWQgdG8gdGVsbCB0aGlzIHN0b3J5IHRvIHRoZSBwdWJsaWMgYnV0IHNoZSBpcyBubyB3aGl0ZSBrbmlnaHQgZWl0aGVyLiBJbiBmYWN0IGlmIHRoZXkgd291bGRuIGhhdmUgcGFpZCB1cCB3ZSBjb3VsZCBwb3RlbnRpYWxseSBub3QgYmUgaW4gdGhpcyBzaXR1YXRpb24gYW5kIGhhdmUgYSBkaWZmZXJlbnQgcHJlc2lkZW50LlB1bmtUb1RoZUZ1dHVyZSAgMTkgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29BbGwgdGhlIFRydW1wIHN1cHBvcnRlcnMgaW4gbXkgZmFtaWx5IHBhcnJvdCByaWRpY3Vsb3VzIGFuZCBlYXNpbHkgcHJvdmFibGUgbGllcyBjb25zdGFudGx5LiBJIHVzdWFsbHkgZG8gbm90IGVuZ2FnZSBiZWNhdXNlIGl0IHBvaW50bGVzcyB0byBkbyBzby4gClRoZXkgZHJvcCBhcGhpZHMgYXBwcm94LiAKT24gcGV1dCBwcmF0aXF1ZXIgbCdhY3VwdW5jdHVyZSBvdSBsZSBHaSBHb25nIHRocmFwZXV0aXF1ZSBhdmVjIHN1Y2NzIGV0IG5lIHJpZW4gY29ubmF0cmUgZGUgbGEgcGh5dG8uIApXaGlsZSBubyBvbmUgYWN0dWFsbHkgbmVlZHMgYW4gYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIgdGhlcmUgYXJlIHRpbWVzIHdoZW4gdGhlc2UgbWFjaGluZXMgY29tZSBpbiBoYW5keS4gSWYgeW91IHBsYXkgY2FyZHMgYXMgYSBmYW1pbHkgdGhlbiBjaGFuY2VzIGFyZSB0aGVyZSBhcmUgb25lIG9yIHR3byBtZW1iZXJzIHRoYXQgbWF5IGhhdmUgc2lnbmlmaWNhbnQgdHJvdWJsZSBzaHVmZmxpbmcgdGhlIGNhcmRzIHdoZW4gdGhlaXIgdHVybiBjb21lcy4gVXNpbmcgYSBjYXJkIHNodWZmbGVyIHdoZW4gcGxheWluZyB3aXRoIHRoZXNlIHBlb3BsZSBtZWFucyBhIGdvb2Qgc2h1ZmZsZSB3aXRob3V0IGNhbGxpbmcgYXR0ZW50aW9uIHRvIHdoYXRldmVyIGRpZmZpY3VsdHkgdGhleSBhcmUgaGF2aW5nLiBBIGNhcmQgc2h1ZmZsZXIgY2FuIGFsc28gZWxpbWluYXRlIHRob3NlIGRlYWxpbmcgYXJndW1lbnRzIG92ZXIgdGhvc2Ugc2VyaW91cyBwb2tlciBnYW1lcyBhcyB3ZWxsLgpNYSBxdWFsICBsJ29yaWdpbmUgZGVsIHRhbmdvPyBFc3NvIG5hc2NlIGluIEFyZ2VudGluYSBkYSB1biBmZW5vbWVubyBkaSBncmFuZGUgaW1wYXR0byBzb2NpYWxlIGNvbWUgbCdpbW1pZ3JhemlvbmUuIEdsaSBldXJvcGVpIGdpdW5nZXZhbm8gaW4gQXJnZW50aW5hIGNvbiBpbCBkb2xvcmUgaW1tZW5zbyBkaSBjaGkgaGEgbGFzY2lhdG8gaSBwcm9wcmkgY2FyaSBlIHNhIGNoZSBub24gbGkgcml2ZWRyIG1haSBwaSBlIHF1ZXN0YSBzb2ZmZXJlbnphIHNpIGFuZCBhZCBpbmNvbnRyYXJlIGNvbiBxdWVsbGEgZGkgdW4nYWx0cmEgZmlndXJhIGRpIGVtaWdyYW50ZSwgcXVlbGxhIGRlbCBnYXVjaG8gY2hlIGxhc2NpYXZhIGxhIHByb3ZpbmNpYSBwZXIgY2VyY2FyZSBsYXZvcm8gaW4gY2l0dC4gRGEgcXVlc3RlIGR1ZSBwcm9mb25kZSBzb2xpdHVkaW5pLCBuYXNjZXZhIGlsIGJpc29nbm8gZGVsbCdpbmNvbnRyby4gCkhlcmUncyB0aGUgdGhpbmcsIGFuZCBJIGhhdGUgVHJ1bXAsIGJ1dCBGcmFuY2UgaXMgZG9pbmcgdGhpcyBzcGVjaWZpY2FsbHkgYmVjYXVzZSBUcnVtcCBoYXMgY2FsbGVkIGZvciBpbmNyZWFzZWQgZGVmZW5zZSBzcGVuZGluZyBmb3IgYWxsIE5BVE8gY291bnRyaWVzLiBJZiBUcnVtcCdzIGdvYWwgaXMgdG8gY3JlYXRlIGVxdWFsaXR5IGFtb25nIE5BVE8gbWVtYmVycywgaGUgaXMgZG9pbmcgYSBzb2xpZCBqb2IsIGFsYmVpdCBjaGlsZCBsaWtlIGFuZCBvdmVyIGNyaXRpY2FsbHkuIApUaGVyZSBpcyBubyBSZWdpc3RlcmVkIEVkdWNhdGlvbiBTYXZpbmdzIFBsYW4sIHRob3VnaCBldmVyeSBkb2xsYXIgcHV0IGludG8gYW4gUkVTUCB1cCB0byAkMiw1MDAgcGVyIHllYXIgZWFybnMgYSAyMCBwZXIgY2VudCBib29zdCBmcm9tIHRoZSBDYW5hZGEgRWR1Y2F0aW9uYWwgU2F2aW5ncyBHcmFudC4gClRoaXMgZm9vdGFnZSBpcyBmcm9tIEhvbmcgS29uZy4gVGhlIFR5cGhvb24gTWFuZ2todXQgaGl0IEhvbmcgS29uZyBvbiAxNnRoIG9mIFNlcHRlbWJlciBvZiBsYXN0IHllYXIsIGl0IGlzIHRoZSBzdHJvbmdlc3QgVHlwaG9vbiB0byBldmVyIGhpdCBIb25nIEtvbmcgdG8gdGhpcyBkYXkuIEV2ZW4gdGhvdWdoIGl0cyB3aW5kcyB3ZXJlIHN0cm9uZ2VyIHRoYW4gdGhlIEh1cnJpY2FuZSBGbG9yZW5jZSwgdGhlIGRhbWFnZSB3YXMgYWN0dWFsbHkgcmF0aGVyIG1pbmltYWwgY29tcGFyZWQgdG8gdGhlIFVTLiAKQWZ0ZXIgaGVhcmluZyB0aGUgd291bmRzIGRlc2NyaWJlZCwganVyb3JzIGFsc28gdmlld2VkIGdyYXBoaWMgYXV0b3BzeSBwaG90b3MsIGFuZCB0aGVuIFphbmUgcGxhY2VkIHN0aWNrZXJzIG9uIGEgbWFubmVxdWluIGluIGNvdXJ0IHRvIG1hcmsgZWFjaCBlbnRyYW5jZSBhbmQgZXhpdCB3b3VuZC4uIApQZXJzbmxpY2ggdGVuZGllcmUgaWNoIHp1IGRlbiBIdW1hbmlzdGVuLCBkaWUgUGlyYXRlbiBzY2hlaW5lbiBmciBkaWUgRVUgYXVjaCBnZWVpZ25ldC4gTGV0enRsaWNoIGthbm4gbWFuIHNpY2ggbWVpbmVyIE1laW51bmcgbmFjaCBtZWhyIGRlbm4gamUgZnIga2xlaW5lIFBhcnRlaWVuIGVudHNjaGVpZGVuIGRpZXNlcyBKYWhyLiAKTWVsYW5pbiBhbHNvIGRldGVybWluZXMgaG93IHdlIHRhbi4gSW4geW91ciBza2luIHRoZXJlIGFyZSBjZWxscyBjYWxsZWQgbWVsYW5vY3l0ZXMsIGFuZCB0aGVzZSBza2luIGNlbGxzIHByb2R1Y2UgbWVsYW5pbiB3aGVuIHlvdSdyZSBleHBvc2VkIHRvIHRoZSBzdW4ncyB1bHRyYXZpb2xldCByYXlzLCBjcmVhdGluZyBhIG5hdHVyYWwgcHJvdGVjdGl2ZSBiYXJyaWVyIG9uIHRoZSBvdXRlcm1vc3QgbGF5ZXIgb2YgeW91ciBza2luLiBTdW4gZXhwb3N1cmUgd2l0aG91dCBzdW4gcHJvdGVjdGlvbiB3aWxsIG1ha2UgZnJlY2tsZXMgZGFya2VyLCBhbmQgaXQgbWF5IGFsc28gaW5jcmVhc2UgdGhlaXIgbnVtYmVycy4gTm90IGFsbCBmcmVja2xlZCBmYWNlcyBhcmUgYWxpa2UgICB3aGV0aGVyIG9yIG5vdCB5b3UgZGV2ZWxvcCBmcmVja2xlcyBpcyBkZXRlcm1pbmVkIGJ5IHlvdXIgYW1vdW50IG9mIHN1biBleHBvc3VyZSBidXQgaXQncyBhbHNvIGluIHBhcnQgZHVlIHRvIHlvdXIgZ2VuZXRpY3MuIFlvdXIgY2hhbmNlcyBpbmNyZWFzZSBpZiBvdGhlciBwZW9wbGUgaW4geW91ciBmYW1pbHkgaGF2ZSBmcmVja2xlcy4KUHVibGljIE1pc2NvbmNlcHRpb25zU3RhdGUgdHJhaW5pbmcgYW5kIGRlZ3JlZSBwcm9ncmFtcyBhbmQgbGljZW5zaW5nIHJlcXVpcmVtZW50cyBoYXZlIGluY3JlYXNlZCBzaW5jZSB0aGUgMTk5MHMsIGdpdmluZyBhc3BpcmluZyB0aGVyYXBpc3RzIGEgY2hhbmNlIHRvIGNvbmZpcm0gdGhlaXIgcXVhbGlmaWNhdGlvbnMgb2ZmaWNpYWxseS4gSW5jcmVhc2VzIGluIGVkdWNhdGlvbiBhbmQgdHJhaW5pbmcgc3RhbmRhcmRzIGhhdmUgZ2l2ZW4gbWFzc2FnZSB0aGVyYXBpc3RzIG1vcmUgY3JlZGliaWxpdHkgd2l0aCBkb2N0b3JzLCBhbmQgbW9yZSBwaHlzaWNpYW5zIGFyZSBhY2NlcHRpbmcgb2YgdGhlIHJvbGUgbWFzc2FnZSB0aGVyYXB5IHBsYXlzIGluIHBhaW4gcmVoYWJpbGl0YXRpb24gYW5kIHJlY292ZXJ5LiAKTWVlc2Vla3N5b3VydGl0cyB1ClRoZWlyIGJlbGllZiBwb3dlcnMgdGhlaXIgaW50ZW50IGFuZCB3aWxsOyBieSBkaXNiZWxpZXZpbmcgc28gdGhvcm91Z2hseSB0aGVpciBpbnRlbnQgb3ZlcnBvd2VycyB0aGUgaW50ZW50IG9mIHRoZSBzcGVsbCBjYXN0ZXIgYmVjYXVzZSB0aGUgY3luaWMgaGFzIG5vdCBEb3VidCB3aGlsZSBtb3N0IG9jY3VsdGlzdHMgaGF2ZSBzb21lICJkb3VidCIsIHNvbWUgYmVsaWVmIHRoYXQgdGhlIHNwZWxsIG1heSBub3Qgd29yayBleGFjdGx5LCBtYXkgbm90IGhhcHBlbiB3aGVuIHRoZXkgd2FudC4gSW4gZ2VuZXJhbC4gClRoZSBvdGhlciByZWFzb24gSSBkb24ndCByZWFsbHkgbGlrZSBkdWRlcyB3aXRoIHJlYWxseSBuaWNlIGNhcnMgaXMgdGhhdCBJIHN0YXJ0ZWQgZGF0aW5nIGEgZ3V5IHllYXJzIGFnbyAgaGUgaGFkIGEgdmVyeSBuaWNlIHNwb3J0cyBjYXIuIEhlIHBpY2tzIG1lIHVwIHNvIHRoYXQgd2UgY2FuIGRyaXZlIHRvIGEgY2l0eSBhIGNvdXBsZSBob3VycyBhd2F5IHRvIHNlZSBJbWFnaW5lIERyYWdvbnMuIApUaGV5IG11c3QgYmUgYWJsZSB0byBleHByZXNzIHRoZW1zZWx2ZXMgdG8gY2xpZW50cywgbWFraW5nIHN1cmUgdGhleSB1bmRlcnN0YW5kIHdoYXQgdGhlIHNlc3Npb24gd2lsbCBpbnZvbHZlIGFuZCB0aGUgcmVzdWx0cyB0aGF0IGNsaWVudHMgbWF5IGV4cGVjdC4uIApJbiBhIHdvcmxkIGxlYWRpbmcgdG8gYSBzb2NpZXRhbCBpbmZyYXN0cnVjdHVyZSB3aXRob3V0IGNvcnBvcmF0aW9ucywgeW91IG11c3Qga2lsbCB0aGVtIG9mZiB0aHJvdWdoIG90aGVyIHRlY2hub2xvZ2llcywgdGhhdCBpc24gaHlwZXJib2xlLiAKRG9lc24gbWVhbiBzcGVuZGluZyBhIGxvdCBvZiBtb25leSwgc2hlIHNheXMuIERvIGxvdmUgSG9tZVNlbnNlIGFuZCBkbyBsb3ZlIGEgZ3JlYXQgdGhpbmcgYXQgSWtlYS4gCk1heWJlIEknbGwgd3JpdGUgdGhlbSBpbiBhbm90aGVyIGJsb2cuLiAKQW1vbmdzdCB0aGUgcGVvcGxlIHRoZXJlIHdhcyBteSBleCBnZiAoZXggYXQgdGhlIHRpbWUgdG9vKS4gCkl0IG1ha2VzIG1lIHF1ZXN0aW9uIHlvdXIgaW50ZW50aW9ucyBvZiBtYWtpbmcgdGhlIHRocmVhZCBpbiB0aGUgZmlyc3QgcGxhY2UuIApIaXMgc2VjdGlvbiBvZiB0aGUgc3RyZWV0IHN0b29kIGVtcHR5IGFuZCB3YXMgZXZlbnR1YWxseSB0YWtlbiBvdmVyIGJ5IGEga2luZGx5IEphbWFpY2FuIG1hbiB3aG8gcGxheWVkIHRoZSBkcnVtcy4gSSBsYXRlciBmb3VuZCBvdXQgdGhhdCBzb21lb25lIGR1bXBlZCBhbGwgb2YgdGhlIGFzc2hvbGUgcGVyZm9ybWVyJ3MgZXF1aXBtZW50IG9mZiBhIHBpZXIgYW5kIGJlYXQgdGhlIGxlZnQgc2lkZSBvZiBoaXMgZmFjZSBtb3N0IG9mIHRoZSB3YXkgaW4uIApVbnRpbCB0aGlzIHRocmVhZCBibGV3IHVwIEkgYmVsaWV2ZWQgbXlzZWxmIGxhcmdlbHkgYWxvbmUgaW4gdGhlIHdvcmxkLiAKVGhpbmsgc2NhbGxvcHMsIHByYXducywgc3RlYW1lZCBtdXNzZWxzIG9yIGZpc2ggdGFjb3MuLiAKTWFpcyByYXBwZWxvbnMgcXVlIHRvdXRlcyBjZXMgcmVuY29udHJlcyBtb250cmVudCBhdmFudCB0b3V0IHVuZSB2aXRhbGl0IGNpdG95ZW5uZSBjZXJ0YWluZSwgcXVpLCBtbWUgc2kgZWxsZSBkZW1hbmRlIGJlYXVjb3VwIGRlIHRlbXBzIGV0IGQnbmVyZ2llLCBzaSBlbGxlIHByZW5kIHBhcmZvaXMgZGVzIHRvdXJudXJlcyB1biBwZXUgdmlydWxlbnRlcyBldCBzaSBlbGxlIG5lIGRvbm5lIHBhcyB0b3Vqb3VycyBzYXRpc2ZhY3Rpb24sIGxvaW4gZGUgbCwgaWwgZXN0IHBsdXR0IHJhc3N1cmFudCBxdWUgbGEgdmllIGRlIGxhIGNpdCBwcm9jY3VwZSBzZXMgaGFiaXRhbnRzIGV0IHF1J2lscyB5IHByZW5uZW50IHBhcnQgYWN0aXZlbWVudC4KSGFsb29zaW5heWVzaHVuIHUKV2hlbiBJIHdhcyB5b3VuZywgbXkgcGFyZW50cyByZWd1bGFybHkgaGFkIGZyaWVuZHMgb3ZlciBmb3IgYSBzb2NpYWwgZ2FtZSB3aXRoIHBlbm5pZXMgYW5kIG5pY2tlbHMuIFdoZW4gSSB3YXMgaW4gZ3JhZCBzY2hvb2wsIEkgcGxheWVkIGxvdyBzdGFrZXMgbG9jYWwgcG9rZXIgdG91cm5hbWVudHMgd2l0aCAkMTAgb3IgJDIwIGJ1eSBpbnMuIEkgYWxzbyBwZXJpb2RpY2FsbHkgZW5qb3kgd2F0Y2hpbmcgcHJvZmVzc2lvbmFsIHBsYXllcnMgcGxheSBpbiB0aGUgV1NPUCBvciBzaW1pbGFyIGV2ZW50cy4KQnJ1bnN3aWNrIFBvbGljZSBDaGllZiBCcmlhbiBPaGxpbiBzYWlkIHBvbGljZSB3ZXJlIHVuYWJsZSB0byBwcm92ZSB0aGF0IHRoZSBvd25lcnMgb2YgdGhlIGJ1c2luZXNzIGhhZCBhbnkga25vd2xlZGdlIG9mIHRoZSBpbGxlZ2FsIGFjdGl2aXR5Li4gCkkgaGFkIGJlZW4gYW4gdW5kZXJncmFkdWF0ZSBtYXRoZW1hdGljcyBtYWpvciBhdCBIYXJ2YXJkLCBnb2luZyBhcyBmYXIgYXMgZ2V0dGluZyBhIE1hc3RlciBkZWdyZWUgYmVmb3JlIHN3aXRjaGluZyB0byB0aGVvcmV0aWNhbCBwaHlzaWNzLiBEdXJpbmcgdGhpcyB3aG9sZSB0aW1lIEkgaGFkIGJlZW4gZG9pbmcgbWF0aGVtYXRpY3MgZGF5IGFuZCBuaWdodCwgc28gcGxheWluZyBhIGNhcmQgZ2FtZSBsaWtlIGJyaWRnZSBvciBldmVuIHBva2VyLCB3aGVyZSBzb21lIG1hdGhlbWF0aWNhbCBza2lsbHMgd2VyZSBpbnZvbHZlZCwgd2FzIHRoZSBsYXN0IHRoaW5nIEkgd2FudGVkIHRvIGRvLiAKIkluIHRlcm1zIG9mIHRoZSB3b3JrIHdlIGJlZW4gZG9pbmcgaW4gc3VzdGFpbmFiaWxpdHkgd2UgdGFwcGluZyBpbnRvIHRoZSBjb21tdW5pdHkgYW5kIHdoYXQgdGhlIGNvbW11bml0eSB2YWx1ZXMgYXJlLiAKVGhlIDc1dGggcGVyY2VudGlsZSBzYWxhcnkgaXMgJDQ4LDYwMCwgbWVhbmluZyAyNSBwZXJjZW50IGVhcm4gbW9yZS4gSGVyIHdvcmsgYXBwZWFycyBpbiBNdWx0aSBHZW5lcmF0aW9uYWwgV29ya2ZvcmNlIGluIHRoZSBIZWFsdGggQ2FyZSBJbmR1c3RyeSwgYW5kIHNoZSBoYXMgYmVlbiBjaXRlZCBpbiBudW1lcm91cyBwdWJsaWNhdGlvbnMsIGluY2x1ZGluZyBqb3VybmFscyBhbmQgdGV4dGJvb2tzIHRoYXQgZm9jdXMgb24gaHVtYW4gcmVzb3VyY2VzIG1hbmFnZW1lbnQgcHJhY3RpY2VzLiBTaGUgaG9sZHMgYSBNYXN0ZXIgb2YgQXJ0cyBpbiBzb2Npb2xvZ3kgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBNaXNzb3VyaSBLYW5zYXMgQ2l0eS4gCkhhdmUgc2V4IHdpdGggeW91ciBwYXJ0bmVyLiAKSGUgZGlkbiBsYXN0IGxvbmcuIFdoZW4gaGUgY2hhbmdlZCBjYXJlZXJzIEkgYXNrZWQgaGltIHdoeS4gSSBtb3ZlZCBvbiB0byBwYXNzaW5nIG1lZHMgdGhlbiBjbGVhbmluZyB0aGVpciBob3VzZXMgZG9pbmcgZ3JvY2VyeSBzaG9wcGluZy5XaGF0IHN0dWR5aW5nIGRpZCB5b3VyIGZyaWVuZCBkbz8gQ05BIGNsYXNzZXMgYXJlIHNob3J0IG1lZCBhaWRlIGNsYXNzZXMgYXJlIGV2ZW4gc2hvcnRlci4gTXkgY3VycmVudCBwY2Egam9iIG9ubHkgaGFkIG1lIGRvIGFib3V0IDEwIGhvdXJzIG9mIG9ubGluZSB0cmFpbmluZy5yZWVyZWVqdWdzICAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0kgaGFkIHRoZSBvcHBvc2l0ZSBwcm9ibGVtIHNpbmNlIG15IGJvb2JzIHN0YXJ0ZWQgZGV2ZWxvcGluZyBhcm91bmQgYWdlIDEwLiAKVGhleSBzYXkgeW91IGFyZSB3aG8geW91IGFyZSB3aXRoLiBTbyBtYWtlIHN1cmUgdGhhdCB5b3UgbmV0d29yay4gVGhyb3cgeW91cnNlbGYgb3V0IHRoZXJlLiBHbyB0byBjb25mZXJlbmNlcywgc2hha2UgaGFuZHMsIGtpc3MgYmFiaWVzLCB0YWxrIHRvIHBlb3BsZSwgZW1haWwgdGhlbSwgY29sZCBjYWxsIHRoZW0uIE5ldHdvcmsgZXF1YWxzIG5ldCB3b3J0aC4gU3Vycm91bmQgeW91cnNlbGYgd2l0aCB0aGUgcmlnaHQgcGVvcGxlLiBJZiB0aGV5J3JlIHdvcnRoICQxMCBtaWxsaW9uLCBhdCBsZWFzdCB0aGV5IHdpbGwgcHVsbCB5b3UgdXAgYW5kIHlvdSdsbCBiZSB3b3J0aCBhIGNvdXBsZSBtaWxsaW9uLCBpZiBub3QgbW9yZSB0aGFuIHRoYXQuIFlvdSBhcmUgd2hvIHlvdSBhcmUgd2l0aC4gSGF2ZSB0aGUgcmlnaHQgcGVvcGxlIGFyb3VuZCB5b3UuClRoZSBjb21wYW55IHNhaWQgaXQgY29udGludWVzIHRvIGludmVzdGlnYXRlIHRoZSBtYXR0ZXIuCk1pbmUgaXMgYW4gaW5kZXBlbmRlbnQgc291bC4gCkNvb25leSBsZWFybmVkIHNoZSB3b3VsZCBiZSBsYWlkIG9mZiwgdGhlIHR3byBkZWNpZGVkIHRvIGdvIGludG8gYnVzaW5lc3MgdG9nZXRoZXIsIGFsdGhvdWdoIG5laXRoZXIgaGFkIGRvbmUgYW55dGhpbmcgZW50cmVwcmVuZXVyaWFsIGJlZm9yZS4gSGFzIGEgYnVzaW5lc3MgZGVncmVlIGFuZCBJIHdhcyBpbiBhY2NvdW50aW5nIGFuZCBwYXlyb2xsLCBNcy4gCkhlIGlzIGNyZWRpdGVkIHdpdGggZGVzdHJveWluZyBhIFNvdmlldCBCYXR0bGVzaGlwLCB0d28gY3J1aXNlcnMgYW5kIGEgZGVzdHJveWVyLCA1MTkgdGFua3MsIDE1MCBTZWxmIFByb3BlbGxlZCBBcnRpbGxlcnkgd2VhcG9ucywgNCBhcm1vcmVkIHRyYWlucyBhbmQgbmluZSBhaXJjcmFmdCBpbmNsdWRpbmcgc2V2ZW4gZmlnaHRlcnMuIApUcm9pc2ltZSB0YXBlIDogTGUgQ29xdWlsbGFnZSwgbCdhbnRyZSBkdSBncmFuZCBjaGVmIE9saXZpZXIgUm9lbGxpbmdlciAoaWwgc3VwZXJ2aXNlIGxlIGxpZXUgZGVwdWlzIHF1J2lsIGEgZmVybSBzb24gcmVzdGF1cmFudCAzIHRvaWxlcykuIElsIHkgYSB1biBtZW51ICJHcmFuZCBDaG9peCBkZSBsYSBCYWllImRhbnMgbGVxdWVsIHNlbG9uIGwnYXBwdGl0IG9uIHBldXQgY2hvaXNpciBlbnRyZSBwbGF0IGRlc3NlcnQgb3UgInNldWxlbWVudCIgcGxhdCBkZXNzZXJ0IGNhciBpbCBlc3QgaW1wb3J0YW50IGRlIHNlIGdhcmRlciB1bmUgcGxhY2Ugbm90YWJsZSBwb3VyIHByb2ZpdGVyIGRlIGxhIHRycyBnbnJldXNlIHJvdWxhbnRlIGRlcyBkZXNzZXJ0cy4gSmUgbWUgc3VpcyByZ2FsZSBkZSBwbGF0cyBtZXJ2ZWlsbGV1c2VtZW50IHBhcmZ1bXMgKHVuZSAibG90dGUgdHJhbnNsdWNpZGUsIGh1aWxlIGQnYWdydW1lcywgZmxldXIgZHUgc29sZWlsIGV0IHBvdXNzZXMgZGUgcHJpbnRlbXBzIiwgdW4gImJsYW5jIGRlIGJhcmJ1ZSwganVzIGQnaGVyYmVzIGRlIGwnZXN0cmFuLCBodWlsZSBkJ29saXZlIGRlIEZ1bHZpbyBldCB3YWthbSBtYWxvdWluIikgY2FyIGNlIGdyYW5kIGNoZWYgZXN0IHZyYWltZW50IGxlIHJvaSBkZXMgcGljZXMuCldoZW4gUmFjaGVsIGdvZXMgdG8gdGhlIFNvdXRoZWFzdCBBc2lhbiBjb3VudHJ5IHRvIG1lZXQgTmljayByZWxhdGl2ZXMgZm9yIHRoZSBmaXJzdCB0aW1lLCBzaGUgZXhwb3NlZCB0byBhIHdvcmxkIG9mIHByaXZpbGVnZSB1bmxpa2UgYW55dGhpbmcgc2hlIGV2ZXIgc2Vlbi4gClN0cmFuZ2VseSBlbm91Z2gsIG1hbnkgbWFsZSBwbGF5ZXJzIHdvbid0IHBsYXkgYXMgYWdncmVzc2l2ZWx5IGFnYWluc3Qgc29tZW9uZSB0aGV5IHRoaW5rIGlzIGEgZmVtYWxlIHBsYXllci4gSXQncyBhIG1hbGUgZmxhdyAgIHRha2UgYWR2YW50YWdlIG9mIGl0Li4gClRoZSByZWFzb24gaXMgYmVjYXVzZSB0aGUgbWFya2V0IGZvciBwZXRzIGlzIGJpZywgYnV0IHBlb3BsZSBhcmVuJ3QgcHJlcGFyZWQgdG8gc2VlIHdoYXQgaGFwcGVucyB0byB0aGUgd2FzdGUuCkhlIGdhdmUgbm90aGluZyBhd2F5IGluY2x1ZGluZywgaW4gdGhlIGVuZCwgdGhlIGNvbXBhbnkgaGUgYW5kIG15IG1vdGhlciBoYWQgd29ya2VkIHNvIGhhcmQgdG8gYnVpbGQgaW4gdGhlIGZhY2Ugb2YgY3JpcHBsaW5nIFVTIHNhbmN0aW9ucywgcmFtcGFudCBpbmZsYXRpb24gYW5kIGFuIGVjb25vbWljIHN5c3RlbSB0aGF0IGhhZCwgZm9yIHNvIGxvbmcsIGZhdm91cmVkIGNlbnRyYWwgcGxhbm5pbmcgb3ZlciB0aGUgcHJpdmF0ZSBzZWN0b3IuLiAKTWVjaGFuaXNtIG9mIEFjdGlvbiBmb3IgQW50aWRlcHJlc3NhbnQgRWZmZWN0cyBvZiBNYWduZXNpdW0KRWRpdDogVG8gYW5zd2VyIGFsbCBxdWVzdGlvbnMgYXQgb25jZSwgdGhlIHNoZWx2ZXMgYXJlIHRoZSBLYWxsYXggbW9kZWwgKGZvdXIgMngyIHNoZWx2ZXMgYW5kIG9uZSAyeDQgc2hlbGYgZm9yIHRoZSBmb290IG9mIHRoZSBiZWQpLCB0aGUgbGlnaHRzIEkgZG9uJ3QgcmVtZW1iZXIgdGhlIG5hbWUgYnV0IHRoZXkgYXJlIGp1c3QgTEVEIGRpc2NzIGZyb20gSWtlYSB3aXRoIGFkaGVzaXZlIG9uIHRoZSBiYWNrLiBUaGV5IGNvbWUgaW4gc2V0cyBvZiA0IHNvIEkgaGFkIHRvIGJ1eSA0LiBUaGUgbWlkZGxlIEkgdXNlIGZvciBzdG9yYWdlIG9mIGNhbXBpbmcgZ2VhciBhbmQgb3V0IG9mIHNlYXNvbiBjbG90aGVzOyBJIGp1c3QgY2xpbWIgdGhyb3VnaCBvbmUgb2YgdGhlIGhvbGVzIHRvIGFjY2VzcyBpdCwgYnV0IHRoYXQncyBza2lubnkgcHJpdmlsZWdlLiBJJ20gc3VyZSB5b3UgY291bGQgaW5zdGFsbCBhIGxpZnRpbmcgcGxhdGZvcm0gb24gdG9wIGlmIHlvdSB3YW50ZWQgdG8gZmlndXJlIGl0IG91dC4gRmluYWxseSwgdW5kZXIgdGhlIG1hdHRyZXNzIEkgcHV0IHR3byBwaWVjZXMgb2YgMy80IiBwbHl3b29kLiBCb251cyBwaWMgb2YganVzdCBmcmFtZSBiZWZvcmUgbWF0dHJlc3MKVGhlIHNhbWUgc3RhbmRhcmQgYXBwbGllcyB0byBib3RoLi4gClRoZXJlJ3Mgbm90aGluZyB3cm9uZyB3aXRoIHRoYXQsIiBHaWxsZXNwaWUgc2FpZCwgYWRkaW5nIHRoYXQgRG91Z2hlcnR5IGhhcyBhY2NvdW50YW50cyAiYW5kIHZlcnkgZ29vZCBsYXd5ZXJzIHdobyBtYWtlIHN1cmUgaGUgZG9lc24ndCBjb21lIGFueXdoZXJlIG5lYXIgdGhlIG1hcmdpbnMgb2YgaW1wcm9wcmlldHkuIlVuaW9uIGR1ZXMgY2FuJ3QgZ28gZm9yIGRpcmVjdCBwb2xpdGljYWwgY29udHJpYnV0aW9ucywgYnV0IHVuaW9uIGZ1bmRzIGNhbiBnbyB0byBwb2xpdGljYWwgYWN0aW9uIGNvbW1pdHRlZXMgKFBBQ3MpLCB3aGljaCBzdXBwb3J0IGNhbXBhaWducy5TbyB0aGUgbW9yZSB0aGFuICQxLjUgbWlsbGlvbiBpbiAyMDE1IHN1cHBvcnQgdG8gRG91Z2hlcnR5J3MgYnJvdGhlciBLZXZpbidzIHN1Y2Nlc3NmdWwgY2FtcGFpZ24gdG8gYmVjb21lIGEgUGVubnN5bHZhbmlhIFN1cHJlbWUgQ291cnQganVkZ2UgY2FtZSBmcm9tIHRoZSB1bmlvbidzIFBBQy5TdGFydGluZyBpbiAyMDE0LCB0aGUgdW5pb24ncyBQQUMgZ2F2ZSBUb20gV29sZiBmb3IgR292ZXJub3IgJDE2MCwwMDAgaW4gZGlyZWN0IGNvbnRyaWJ1dGlvbnMgYW5kIGFub3RoZXIgJDQ0LDAwMCBpbiBjYW1wYWlnbiBzdXBwb3J0LCBpbmNsdWRpbmcgY2F0ZXJpbmcgYW5kIG9mZmljZSBzdXBwbGllcy5CdWlsZGluZyBhIEJldHRlciBQZW5uc3lsdmFuaWEgRnVuZCB3YXMgYW5vdGhlciBiaWcgYmVuZWZpY2lhcnkgb2YgTG9jYWwgOTgncyBsYXJnZXNzZS4gCkJpZW4gcXVlIGxlIHNhcGluIHNvaXQgbGUgcGx1cyBzb3V2ZW50IGFyYnJlIGNvc21pcXVlIGVuIEFzaWUgc2VwdGVudHJpb25hbGUsIGMgbGUgYm91bGVhdSBxdWkgdHJvdXZlIGdyY2UgYXV4IHlldXggZGVzIGNoYW1hbnMgc2licmllbnMgcG91ciBqb3VlciBjZSBybGUuIApCdXQgdGhhdCBpcyBleGFjdGx5IHdoYXQgSSBkby4gCk5qdXQgYXYgMTAwJSB0aWxsZyBuZ2xpZ2hldCBtZWQgSW50ZXJuZXRzIG1lc3QgZiByZGlnIHByb2R1a3Qgb2NoIGlnZW4gbWFya2VyYXIgcGxhdHNlcm5hIGYgciBrZXhlbi4uIApJIHJlYWQgSWYgSSBlYXQgNTAwIGNhbG9yaWVzIGxlc3MgdGhhbiBJIGJ1cm4gdGhlbiBJIGxvc2UgYSBwb3VuZCBhIHdlZWsuIExvZ2ljYWxseSwgSSBiZWdhbiBteSAzNTAgY2Fsb3JpZSBkaWV0LiAKU28gSSBrbm93IG1lbiBzb21ldGltZXMgc2F5LCAibWVuIGFuZCB3b21lbiBjYW4gYmUgZnJpZW5kcywiIGFuZCBhbSBhd2FyZSB0aGF0IHRoaXMgbWVhbnMgdGhhdCBzb21lIHlvdW5nZXIgbWVuIGFyZW4gdGhhdCBwaWNreSBhbmQgd291bGQgZnVjayBhbnkgd29tYW4gdGhleSBrbm93LCBidXQgdGhlIHdvbWFuIGludm9sdmVkIGhhcyB0byBlbmNvdXJhZ2UgdGhhdCwgYW5kIHNoZSB3b24gaWYgdGhlcmUgbm8gY2hlbWlzdHJ5IGFuZCBzaGUgdGhpbmtzIG9mIHlvdSBsaWtlIGhlciBnYXkgYnJvdGhlci4KQWhoaC4gCkFsZXJ0cyBwYXIgcGx1c2lldXJzIGFkaHJlbnRzIGF1IHN1amV0IGRlIGxhIHRycyBtYXV2YWlzZSB0ZW51ZSBkZSBjZXR0ZSBzdXByZXR0ZSwgbm91cyB5IGF2b25zIGZhaXQgdW4gdG91ciB1biBsdW5kaSBtYXRpbiBpbCB5IGEgdW5lIHBldGl0ZSBxdWluemFpbmUgZGUgam91cnMuIE5vdXMgeSBhdm9ucyB0cm91diBjZSBqb3VyIGwgdW5lIGJvbm5lIHF1YXJhbnRhaW5lIGRlIGRpZmZyZW50cyBwcm9kdWl0cyBmcmFpcyBwcmltcyAoZW4gbXVsdGlwbGVzIGV4ZW1wbGFpcmVzKSwgZGUgbGEgY2hhcmN1dGVyaWUgZW4gcGFzc2FudCBwYXIgZGVzIHBsYXRzIGN1aXNpbnMgZXQgZGVzIHByb2R1aXRzIGxhaXRpZXJzLiBOb3VzIGRjb3V2cmlvbnMgYXZlYyB1biBjZXJ0YWluIGVmZmFyZW1lbnQgZGVzIGRhdGVzIGRlIHByZW1wdGlvbiBkcGFzc2VzIHBvdXIgY2VydGFpbmVzIGRlIDEwIGpvdXJzISBVbmUgc2FsZXQgcGFydGljdWxpcmUgZGFucyBsZXMgYWxsZXMsIGRlcyBiYWNzIHN1cmdlbHMgb3V2ZXJ0cyBldCBtYWwgY2hhcmdzLCB1bmUgYWJzZW5jZSBkZSB0aGVybW9tdHJlIHBvdXIgdnJpZmllciBsYSB0ZW1wcmF0dXJlLiAKIkVzcGEgaXMgYSB0cnVseSBnbG9iYWwgc3BhIGxlYWRlci4gSSBoYXZlIGJlZW4gaW4gdGhlIGluZHVzdHJ5IGZvciBvdmVyIDQwIHllYXJzIGJlZm9yZSB0aGUgd29yZCBzcGEgZXhpc3RlZC4gRXZlcnl0aGluZyB3ZSBkbyBtdXN0IGhhdmUgaW50ZWdyaXR5IGFuZCBhIHJlYXNvbiwgbm90IGEgbWFya2V0aW5nIGdpbW1pY2ssIGFuZCB0aGUgcHJvZHVjdHMgYW5kIHRyZWF0bWVudHMgbXVzdCByZWFsbHkgd29yay4gV2UgdHJhaW4gb3ZlciAzLDAwMCB0aGVyYXBpc3RzIGEgeWVhciBpbiBvdXIgcG9zdCBncmFkdWF0ZSBjb3Vyc2VzIGluIDYwIGNvdW50cmllcywgYW5kIHRoaXMgaXMgYSBjb25zdGFudCBsZWFybmluZyBhbmQgZXZvbHV0aW9uLgpOb3Igd2VyZSBoZXNpdGF0aW9ucyBpbiB0aGVzZSBkb3VibGluZ3MgbmVnbGVjdGVkIHRvIGJlIHB1dCBvbiByZWNvcmQsIHNpbmNlIGNhbmFscyB3ZXJlIHNlZW4gdG8gYmUgYWx0ZXJuYXRlbHkgc2luZ2xlIGFuZCBkb3VibGUgb24gdGhlIHNhbWUgbmlnaHQuLiAKR3JlYXQgZm9yIFlvdXJzZWxmCkkga25vdyBhIHdvbWFuIHdobyBpcyBvYnNlc3NlZCB3aXRoIHRoZSAicGVyZmVjdCBsb29rIiBmb3IgaGVyc2VsZiBhbmQgaGVyIGRhdWdodGVyLiBUYWtlcyBhdCBsZWFzdCAyIGJhY2sgdXAgb3V0Zml0cyB0byBldmVudHMgKFZFUlkgZXhwZW5zaXZlIGRyZXNzZXMgc2hlIGNhbiBhZmZvcmQpIGZvciBoZXIgZGF1Z2h0ZXIgc2luY2Ugc2hlIHdhcyBhIGJhYnkgaW4gY2FzZSBzaGUgZmFsbHMgb3IgZ2V0cyBzb21ldGhpbmcgZGlydHkuIEhlciBkYXVnaHRlciBnZXRzIGh5c3RlcmljYWwgaWYgc2hlIGFjY2lkZW50YWxseSBydWlucyBzb21ldGhpbmcgYmVjYXVzZSBoZXIgbW90aGVyIGhhcyBhIHN0cm9uZyBuZWdhdGl2ZSByZWFjdGlvbi4gCldlIGdhdmUgdGhlbSBhIHF1b3RlIGFueXdheSwgYnV0IHRoZXkgaGFkIGFscmVhZHkgc3BlY2lmaWNhbGx5IHJlcXVlc3RlZCBhIGxhYm9yIG9ubHkgcXVvdGUgZm9yIGp1c3QgYSByZXdvcmsgb2YgdGhlIGV4aXN0aW5nIGhhcmR3YXJlLCBzbyBJIGNvbXBsaWVkLiBOb3QgdG9vIGxvbmcgYWdvIEkgd291bGRuIGhhdmUgZXZlbiBjb25zaWRlcmVkIHRha2luZyBhIGpvYiBsaWtlIHRoYXQuIE5vdyBJIHdvcmsgaW4gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBpbmR1c3RyeS4gRm9yIHRlbiB5ZWFycyBJIGhhZCB0byBhYmlkZSBieSBzdHJpY3QgaW5kdXN0cnkgc3RhbmRhcmRzIGFuZCBmZWRlcmFsIHJlZ3VsYXRpb25zLiBOb3csIEkgbGF1Z2hlZCBhdCB3aGVuIEkgc3VnZ2VzdCBzcGVuZGluZyBhIGxpdHRsZSBleHRyYSBtb25leSBmb3Igc2FmZXR5LCBzdGFiaWxpdHksIG9yIHF1YWxpdHkuIEkgd2lsbCBzYXkgdGhpcyB0aG91Z2gsIEkgZG9uIG1pc3MgdGhlIHN0cmVzcyBvciB0aGUgbGlhYmlsaXR5LiBUaGF0IGZvciBkYW1uIHN1cmUuCldhcyBpdC4gCkl0J3MgaGFyZCB0byBrbm93IGhvdyBtYW55IGNoYWlycyBjb250cmlidXRlZCB0byB0aGF0IGJpbGxpb24uIFdpdGggc2xvdHMsIG9uZSBnYW1lIGFsbW9zdCBhbHdheXMgZXF1YWxzIG9uZSBjaGFpciBidXQgY2FzaW5vcyBjYW4gdmFyeSB0aGUgbnVtYmVyIG9mIGNoYWlycyBhdCB0YWJsZSBnYW1lcyBvciBpbiBzcG9ydHMgYm9va3MuCk5vIG9uZSB0YWtlcyBhbnkgcHJpZGUgaW4gdGhlIGNpdHkuIE5vIG9uZSB3YW50cyBhbnl0aGluZyB0byBjaGFuZ2UuIApDYXNpbm9zIHdhbnQgdG8gdGFrZSBiZXRzIG9uIHZpZGVvIGdhbWUgdG91cm5hbWVudHMKTXkgbWFpbiBjb25jZXJuIGlzIGZvciB0aGUgT1AgYXQgdGhpcyBwb2ludC4gU2hlIGxvc3QgaGVyIGh1c2JhbmQgYW5kIG5vdyBoYXMgaGFkIHRvIGRlYWwgd2l0aCBhIHNjcmVlY2hpbmcgaGFycHkgY2FsbGluZyB1cCB0byBzY3JlYW0gYXQgaGVyLiBBdCB0aGlzIHBvaW50IHdlIGRvbiBrbm93IGlmIHRoZSBraWQgc3Vja3Mgb3Igbm90LCBpbiBhbGwgcmVhbGl0eSB0aGUgdHJ1dGggaXMgcHJvYmFibHkgc29tZXdoZXJlIGluIHRoZSBtaWRkbGUgYW5kIHRoZSByZWxhdGlvbnNoaXAgcHJvYmFibHkgY29uc2lzdGVkIG9mIHR3byBpZGlvdCBodW1hbnMgbWFraW5nIGJsdW5kZXJzIGFuZCBuZXZlciBnZXR0aW5nIHRoZWlyIHNoaXQgc3RyYWlnaHQgZW5vdWdoIHRvIGZpeCB0aGUgcmVsYXRpb25zaGlwIHRoYXQgd2FzIGRhbWFnZWQgYSBsb25nIHRpbWUgYWdvLjFtaWtlZyAgODggcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1BsYXlpbmcgZGV2aWwgYWR2b2NhdGUsIGlmIFRyaXAgQWR2aXNvciBkZSBsaXN0ZWQgYW55IGNvbXBhbnkgYmVjYXVzZSBvZiBhbiBhY2N1c2F0aW9uIG9mIHdyb25nIGRvaW5nLCB5b3UganVzdCBvcGVuaW5nIHRoZSBkb29yIGZvciBjb21wZXRpdG9ycyB0byBjcmVhdGUgZmFsc2UgYWxsZWdhdGlvbnMgdG8gZGUgbGlzdCB0aGVpciBjb21wZXRpdG9ycy5Gb3IgYSB3ZWJzaXRlIHdoZXJlIHBlb3BsZSBhcmUgYWxsb3dlZCB0byBwb3N0IHdoYXRldmVyIHRoZXkgd2FudCB3aXRob3V0IHZhbGlkYXRpb24gb3IgcHJvb2YsIGl0IHRoZSBvbmx5IGxvZ2ljYWwgcG9saWN5LiAKVG8gaGF2ZSBvbmUgb2YgdGhlIG1vc3QgZnJvbSB0aGVzZSBwbGFjZXMgeW91IGhhdmUgdG8gdXNlIHRoZW0gY29ycmVjdGx5Li4gCkhvd2V2ZXIsIEkgZG9uJ3Qga25vdyB3aGF0IHRoZSBvZGRzIGFyZSBvZiBnZXR0aW5nIHNwb3R0ZWQgaW4gdGhlIGNyb3dkLiBUaGlzIGlzIG5vdCBwcm9iYWJseSB0aGUgc29ydCBvZiBzaG93IHdoZXJlIGV2ZXJ5b25lIHBlcmZvcm1pbmcgaXMgYmFja3N0YWdlIHRoZSB3aG9sZSB0aW1lIGFuZCB0aGV5IGhhdmUgbm8gaWRlYSB3aG8ncyBvdXQgdGhlcmUuIFRoZSBiYWxjb255IChhbmQgb25seSB0aGUgYmFsY29ueSkgd2FzIHNvbGQgb3V0LCBzbyBJIGFzc3VtZSB0aG9zZSBpbiB0aGUgc2hvdyBqdXN0IGdvIHVwIHRoZXJlIHRvIHdhdGNoIHdoZW4gdGhleSBhcmUgZG9uZS4gCkRpbWVuc2lvbnMgb2YgV2VsbG5lc3NUaGUgbmluZSBkaW1lbnNpb24gbW9kZWwgaGVscHMgc3R1ZGVudHMgdG8gdW5kZXJzdGFuZCBob3cgc2V2ZXJhbCBhcmVhcyBvZiBsaWZlIGNhbiBhZmZlY3QgdGhlaXIgb3ZlcmFsbCBoZWFsdGggYW5kIHdlbGxuZXNzLiBVSCBXZWxsbmVzcyB3aWxsIGhpZ2hsaWdodCBvbmUgZGltZW5zaW9uIGEgbW9udGggdG8gcHJvdmlkZSBzdHVkZW50cyBhIGNoYW5jZSB0byBleHBsb3JlIGhvdyB0byBpbXByb3ZlIHRoZWlyIGxpdmVzIGluIGVhY2ggZGltZW5zaW9uLgpCZXR0ZXIsIHlvdSBjYW4gdGhlbiBhc3NlbWJsZSB0aGF0IGV4cGxvc2l2ZSBkZXZpY2UgaW5zaWRlIGFuZCB3YWxrIGFyb3VuZCB0aGUgYnVpbGRpbmcgd2l0aCBpdCBhbmQgYXBwYXJlbnRseSBubyBvbmUgd2lsbCBib3RoZXIgeW91LiAKSGllciBoZWJiZW4gd2UgaGVlbCBsZWtrZXIgZ2VnZXRlbiBlbiBoZXQgd2FzIG9vayBzdXBlcmdvZWRrb29wIG9uemUgZWVyc3RlIGtlbm5pc21ha2luZyBtZXQgZGUgbGFnZSBwcmlqemVuIGhpZXIhIEJlZG9lbGluZyB3YXMgb29rIG5vZyBldmVuIGRlIG91ZGUgc3RhZHNrZXJuIGluIHRlIHRyZWtrZW4sIG1hYXIgaGV0IHZyb2VnZSBvcHN0YWFuIGVpc3RlIHZvb3JhbCBiaWogbWlqIHppam4gdG9sLCBlbiB3ZSBnaW5nZW4gZGFuIG9vayBtYWFyIHRlcnVnIG5hYXIgaGV0IGhvdGVsLCBvcCB0aWpkIGdhYW4gc2xhcGVuLi4gCk5vLiAKQW5hbCBwbGVhc3VyZSBjYW4gZW5oYW5jZSBvcmdhc21zLCBpdCBjYW4gYmUgdGhlIHNvdXJjZSBvZiBvcmdhc21zLCBhbmQgaXQganVzdCBmZWVscyByZWFsbHkgZ29vZCBpZiB0aGUgY29uZGl0aW9ucyBhcmUgcmlnaHQuIApQbGVhc2Ugbm90ZTogQW55IGNvbW1lbnRzIGFib3V0IHRoZSBFZGl0ZWQgR3VpZGUgc2hvdWxkIGNvbnRpbnVlIHRvIGJlIHBvc3RlZCB0byB0aGUgRWRpdG9yaWFsIEZlZWRiYWNrIGZvcnVtIGFuZCBub3QgaGVyZS4gCkkgbWlnaHQganVzdCBnZXQgYSByZWFsIGNoZWFwIGJ1ZGdldCBwaG9uZSBqdXN0IHRvIHVzZSBhcyBhIEdQUy4gQnV0IGZvciBhIGZsYWdzaGlwIHRvIG5vdCBsYXN0IGV2ZW4gMiB5ZWFycyBpcyBpbmV4Y3VzYWJsZS4gCkR1cmluZyB0aGVzZSB0aW1lcywgYm93bGVycyB3aWxsIHJlY2VpdmUgYSBmcmVlIGdhbWUsIHNob2UgcmVudGFsIGFuZCBzb2RhICAgYW5kIGEgY2xvc2VyIGxvb2sgYXQgdGhlIG5ldyBhbmQgaW1wcm92ZWQgbGFuZXMuIEFsb25nIHdpdGggZnJlZSBib3dsaW5nLCB0aGUgQ29ubmVjdGlvbidzIG5ldyBmbGF0IHNjcmVlbiB0ZWxldmlzaW9ucyB3aWxsIHNob3cgdGhlIGN1bHQgZmF2b3JpdGUgIlRoZSBCaWcgTGVib3dza2kiICAgYW5kIGNvc3R1bWVzIGFyZSB3ZWxjb21lLgpJdCB3aGF0IGJpbGxpb25zIG9mIHBlb3BsZSBhcm91bmQgdGhlIHdvcmxkIGRvLiAKQXN0b24gVmlsbGEgRkNQb2xpY2UgaXNzdWUgc3RhdGVtZW50IGFmdGVyIEphY2sgR3JlYWxpc2ggYXR0YWNrZWQgYnkgQmlybWluZ2hhbSBDaXR5IGZhbiBkdXJpbmcgQXN0b24gVmlsbGEgY2xhc2hUaGUgMjMgeWVhciBvbGQgd2FzIGltbWVkaWF0ZWx5IHN1cnJvdW5kZWQgYnkgaGlzIGNvbmNlcm5lZCB0ZWFtbWF0ZXMKT25jZSB0aGF0IGhhcHBlbnMsIEkgZ29pbmcgdG8gYmUgb24gY2xvdWQgbmluZSBhbmQgZW5qb3lpbmcgZXZlcnkgbW9tZW50IG9mIGl0Li4gCkJ1dCB0aGUgQ2Fpc3NlIGlzbiB0aGUgb25seSBwb3NzaWJpbGl0eS4gCk11Y2ggb2YgaHVtYW4gbGlmZSBpcyBzbyByZXZvbHRpbmcsIHNvIEFiamVjdCBhY2NvcmRpbmcgdG8gcHN5Y2hvYW5hbHl0aWMgdGhlb3J5LCB0aGF0IHdlIGxpdGVyYWxseSBjYW5ub3Qgc3BlYWsgaXQgYWxvdWQuIApUaGlzIGhhcyBvbmx5IGhhcHBlbmVkIG9uY2Ugb3IgdHdpY2UuLiAKU29tZW9uZSByYWlzZXMgcHJlZmxvcCBmcm9tIFVURy4gWW91IGNhbGwgaW4gbWlkZGxlIHBvc2l0aW9uIHdpdGggUTEwLiBJZiB0aGUgYm9hcmQgY29tZXMgUUozLCBhbmQgc29tZW9uZSBiZXRzLCBhbmQgeW91IGNhbGwuIApUaGUgZWZmb3J0IHRvIGNyYWNrIGRvd24gb24gcHJvc3RpdHV0aW9uIGNvbWVzIGFmdGVyIHNldmVuIE5ZUEQgY29wcyBhbmQgYW4gZXggdmljZSBkZXRlY3RpdmUgd2VyZSBhcnJlc3RlZCBpbiBhIHN3ZWVwaW5nIHByb3N0aXR1dGlvbiBhbmQgZ2FtYmxpbmcgcmluZyB0YWtlZG93bi4KSSB3YXMgdGhlIHNhbWUgaW4gdGhlIGJlZ2lubmluZyAuIApTdG9wIHRyZWF0aW5nIFNXIGxpa2Ugc29tZSBzYWNyZWQgdGV4dCB0aGF0IGlzICIxMDAlIHBlcmZlY3QiIGFuZCBpcyByZXF1aXJlZCB0byBtYWludGFpbiB0aGlzIGNvbXBsZXRlbHkgZmFsc2UgcGVyZmVjdGlvbiBmb3JldmVyLi4gCkR1cmluZyB0aGUgaG9saWRheXMsIHlvdSBjb3VsZCBhbHNvIGlucXVpcmUgYWJvdXQgc3BlY2lhbCBwcm9tb3Mgb3Igc2Vhc29uYWwgdG91cnMgdGhhdCBkaWZmZXJlbnQgdHJhdmVsIGFnZW5jaWVzIG9mZmVyLi4gCk5vdyB0aGF0IHlvdXIgamF3IGhhcyBkcm9wcGVkIGRvbid0IHdvcnJ5LCBkaWFycmhlYSBpcyBraW5kIG9mIGxpa2UgdGhlIHdlbGwgYXMgaW4gQW1lcmljYSBhbmQgaXMgYmVnaW5uaW5nIHRvIG9wZXJhdGUgaW4gb3RoZXIgY291bnRyaWVzIHdoZXJlIG51cnNpbmcgc2hvcnRhZ2VzIGV4aXN0LiBXb3VsZG4ndCB5b3UgcmF0aGVyIGJlIG91dHNpZGUsIG9uZSB3aXRoIG5hdHVyZSBvbiBhIGhpa2UsIGFuZCB0YWtpbmcgY2xpbWIgaW4gYW5kIG91dCwgYW5kIG92ZXJhbGwgSSBqdXN0IGxpa2VkIHRoZSBzdHJlYW1saW5lZCBsb29rIG9mIHRoaXMgc3Ryb2xsZXIuIApJdCB0b29rIDQgeWVhcnMgb2YgZmVydGlsaXR5IHRyZWF0bWVudHMgdG8gY29uY2VpdmUgb3VyIGRhdWdodGVyLiAKQWdhaW4sIHRoaXMgaXMgYSBzdWIgZGVkaWNhdGVkIHRvIEFzaWFuIEFtZXJpY2Fucy4gVGhlIGxlYXN0IHlvdSBjYW4gZG8gaXMgYWN0dWFsbHkgZG8gc29tZSByZXNlYXJjaCBvbiBoaW0gYmVmb3JlIHlvdSBkZWNpZGUgeW91ICJzdXNwaWNpb3VzLiIKTGluZGUgQi4gKDE5ODYpLiBEaXNzb2NpYXRpb24gb2YgaW5zdWxpbiBhYnNvcnB0aW9uIGFuZCBibG9vZCBmbG93IGR1cmluZyBtYXNzYWdlIG9mIGEgc3ViY3V0YW5lb3VzIGluamVjdGlvbiBzaXRlLiBEaWFiZXRlcyBDYXJlLCA5KDYpOjU3MCA3NC4KV2hhdCBzaGUgZG9pbmcgdG8gdGhlIG90aGVyIGd1eSByZWFsbHkgaXMgY3JlZXB5LiBTaGUgbG9va2VkIGhpbSB1cCBhbmQgcmVhY2hlZCBvdXQgb24gc29jaWFsIG1lZGlhIGFuZCBoZSBkaWRuIHJlc3BvbmQsIHNvIHNoZSBjYWxsZWQgaGlzIGZhbWlseSB0byBhc2sgZm9yIGhpcyBjb250YWN0IGluZm8gYW5kIGFubm91bmNlZCB0aGF0IHdoaWxlIHNoZSBtYXJyaWVkIHRvIHNvbWVvbmUgYW5kIGhhc24gdGFsa2VkIHRvIGhpbSBpbiBhZ2VzLCBzaGUgaGFzIGRlY2lkZWQgdG8gcHVyc3VlIGhpbSBiZWNhdXNlIHNoZSBiZWVuIGlkb2xpemluZyB0aGVpciBmaWN0aW9uYWwgYWx0ZXJuYXRlIHJlbGF0aW9uc2hpcCB0b2dldGhlciBmb3IgdGhlIGxhc3QgdGVuIHllYXJzLi4gCkl0IHdhcyBlcGljIGZvciBvdXIgaG9ybnkgMTh5byBtaW5kcy4uIApUaHJlZSBuZXcgcmVzdGF1cmFudHMgaGF2ZSBqb2luZWQgVmlsbGEgTWlsb2NlciBleGlzdGluZyBkaW5pbmcgdmVudWVzIFRoZSBEaW5pbmcgUm9vbSwgTG9nZ2lhIGFuZCBMaXZpbmcgUm9vbSBvbiB0aGUgbWFpbmxhbmQsIGluY2x1ZGluZzogUXVlZW4gQ2hhaXIsIHNlcnZpbmcgUGFuIEFkcmlhdGljIGZhcmUgZXZlcnkgZXZlbmluZyBmcm9tIDZwbSwgb3Zlcmxvb2tpbmcgdGhlIEJheSBvZiBCdWR2YTsgT2xpdmUgUmVzdGF1cmFudCwgYSBjYXN1YWwgYmVhY2hzaWRlIGJyYXNzZXJpZSBvcGVuIGZvciBicmVha2Zhc3QsIGx1bmNoIGFuZCBkaW5uZXI7IGFuZCB0aGUgQmVhY2ggQ2FmLCBvZmZlcmluZyBpbmZvcm1hbCBhbCBmcmVzY28gZGluaW5nIGFsbCBkYXkgbG9uZyBpbiBhIHNlY2x1ZGVkIHNwb3QgbmVhciBWaWxsYSBNaWxvY2VyLiAKSWYgc2hlIGRvZXMgc3RhcnQgYWNjZXB0aW5nIHJvb20gYW5kIGJvYXJkIG1vbmV5IGZyb20geW91LCBrZWVwIGdvb2QgZG9jdW1lbnRhdGlvbi4gCk9uZXVwbWFuc2hpcCB1Ck5vdyBMYXN0bHkgYW5kIG1vc3QgaW1wb3J0YW50bHksIG5vdyB0aGF0IHlvdXIgYm91bmNlciBkaWQgbm90IGhhdmUgdGhlIGNvdXJhZ2UgdG8gYWNjZXB0IGhpcyBmaXJzdCBmaWdodCBjaGFsbGVuZ2UsIG15IGNsaWVudCBpcyBvZmZlcmluZyBhbm90aGVyLiAKRm9yIGFuIGludHJvZHVjdGlvbiB0byB0aGUgZ2FtZSwgc2tpbSBvdmVyIHRoZXNlIFBva2VyIEJhc2ljcy4gCjEwMSBXaW5uaW5nIFRvdXJuYW1lbnQgUG9rZXIgTW92ZXMgT3ZlcnZpZXcKSSBub3Qgc3VyZSB3aGVyZSB0aGUgYmVzdCBwbGFjZSB0byBwdXJjaGFzZSBhIGxhcHRvcCBpcy4gCk1heWJlIHNoZSBzaG91bGRuJ3QgaGF2ZSBwZXRzLiAKQmVzdFJieCAgMjEgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkNsZWFuIGl0IHRob3JvdWdobHksIGluY2x1ZGluZyB0aGUgY2FycGV0LCBhbmQgY29uc2lkZXIgZ2l2aW5nIGl0IGEgZnJlc2ggY29hdCBvZiBwYWludC4gSGF2ZSBhIHF1YWxpZmllZCBwcm9mZXNzaW9uYWwgYWRkIGhlYXRpbmcgYW5kIGVsZWN0cmljYWwgY2FwYWNpdHkgdG8gYSBwb3RlbnRpYWwgc2hvcCBhcmVhLiBBdm9pZCBkb2luZyBhbnkgbWFqb3IgcmVub3ZhdGlvbnMgdW5sZXNzIHlvdSdyZSBzdXJlIHlvdSB3aWxsIGdldCB5b3VyIG1vbmV5IGJhY2suLiAKQWJlciB3aWUgZGllIEF1dG9yaW4gZGFubiBub2NoIHNvIHZvbiBvYmVuIGhlcmFiIGVpbmVyIGdhbnplbiBLYXRlZ29yaWUgdm9uIFNwaWVsZW4gZGFzIFJlY2h0IGFienVzcHJpY2h0IGFscyByaWNodGlnZSBTcGllbGUgYmV0cmFjaHRldCB6dSB3ZXJkZW4gZmluZGUgaWNoIHJpY2h0aWcgd2lkZXJzcHJjaGxpY2guIAoxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkZ1cnRoZXIgYWxvbmcsIHRoZSBCdWxsb2NrIEhvdGVsIHN0aWxsIHN0YW5kcy4gQnVpbHQgYnkgc2hlcmlmZiBTZXRoIEJ1bGxvY2ssIHNvbWUgb2YgdGhlIHJvb21zIG9uIHRoZSBzZWNvbmQgYW5kIHRoaXJkIGZsb29ycyBhcmUgc2FpZCB0byBiZSBoYXVudGVkIGEgZmFjdCBuZWl0aGVyIGNvbmZpcm1lZCBub3IgZGVuaWVkIGR1cmluZyBhIHN0cm9sbCBhbG9uZyBNYWluIFN0LiB3aXRoIGEgU291dGggRGFrb3RhIHRvdXJpc20gcmVwcmVzZW50YXRpdmUgd2hvIG9uY2Ugc2xlcHQgdGhlcmUuClBsYXllcnMgd2hvIGFyZSBpbnRlcmVzdGVkIGluIHRoZSB2YXJpb3VzIGNhc2lubyBnYW1lcywgd2hpY2ggYXJlIG5ldywgYW5kIGxhdGVzdCB2ZXJzaW9uIG9mIGdhbWluZyBjYW4gYWxzbyBmaW5kIGluZm9ybWF0aW9uIGluIGJvb2tzIGFuZCBvbmxpbmUgY2FzaW5vIGdhbWluZyBhcnRpY2xlcyBvbiBpbnRlcm5ldC4gTWFueSBvbmxpbmUgY2FzaW5vIHNpdGVzIGFyZSBleHBsYWluaW5nIHRoZSBydWxlcyBvZiB2YXJpb3VzIGNhc2lubyBnYW1lcyBhbmQgd2VsbCBhcyBwcm92aWRpbmcgdGhlIHRpcHMgYW5kIHN0cmF0ZWd5IGZvciBwbGF5aW5nIGF0IGNhc2lub3MuIFBsYXllcnMgY2FuIGZpbmQgYSBudW1lcm91cyBpbnRlcm5ldCBzaXRlcyB0aGF0IHByb3ZpZGUgdGhpcyBraW5kIG9mIGluZm9ybWF0aW9uIGFib3V0IGNhc2lubyBnYW1ibGluZyBnYW1lcy4gCk9uIGxlcyB0cm91dmUgZGFucyBkaWZmcmVudGVzIGZhbWlsbGVzIGJvdGFuaXF1ZXMgOi4gCkZpbm4gbmVlZHMgc29tZSBraW5kIG9mIGJ1ZmYsIG1heWJlIG1ha2UgaXQgc28gc2FiZXIgaGVyb2VzIGRvbiBkbyBib251cyBkYW1hZ2Ugd2hlbiB0aGV5IGhpdCBoaW0gZnJvbSBiZWhpbmQgKG9uIHRoZSBhY2NvdW50IHRoYXQgaGUgbGVhcm5lZCBoaXMgbGVzc29uIGluIFRGQSBmcm9tIEt5bG8pLiAKSkVVQmxpdHpLcmllZ1N0aWxsIGNhbiB3YWxsIHNob3QuClJlY2VudGx5IGluY3JlYXNlZCBteSB2b2x1bWUgZm9yIHNxdWF0cyAoc21vbG92IGpyKSBhbmQgaSBiZWVuIHVzaW5nIG15IGJlbHQgbW9yZSBvZnRlbiBhbmQgbWF5YmUgdGhhdHMgaG93IGl0IGdvdCBicnVpc2VkLiBJdCBoYXBwZW5lZCBsYXN0IHdlZWssIGl0cyBiZWVuIGdldHRpbmcgYmV0dGVyIGJ1dCB5ZXN0ZXJkYXkgc2Vzc2lvbiBtYWRlIGl0IHdvcnN0LiBJIGFkanVzdGVkIG15IGJlbHQgdG9kYXkgKHNpbmNlIGl0IHdhcyBteSBsYXN0IGFuZCBoZWF2aWVzdCBzZXNzaW9uIG9mIHNtb2xvdiBqcikgYW5kIG1hZGUgaXQgbG93ZXIgYW5kIGkgZGlkbiBmZWVsIGFueSBkaXNjb21mb3J0IGR1cmluZyB0aGUgZXhlcmNpc2VzLCB0aGUgcGFpbiBpcyBzdGlsbCB0aGVyZSBidXQgaXQgZGlkbiBodXJ0IHdoZW4gaSB3YXMgc3F1YXR0aW5nIGxpa2UgaG93IGl0IGRpZCBiZWZvcmUuIFRoZSBwYWluIGlzIHRoZXJlIGV2ZW4gd2hlbiBpbSBub3QgZG9pbmcgYW55IGFjdGl2aXRpZXMsIHdoZW4gaSBtb3ZlIGFyb3VuZCBvciBjb3VnaC9zbmVlemUvbGF1Z2ggaSBjYW4gZmVlbCB0aGUgcGFpbi4gMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvCkluIHdoYXQgcG9zc2libGUgY29udGV4dCBjb3VsZCBzb21lb25lIG9yZ2FuaXplLCBwbGFuLCBvciByZW1lbWJlciBhbnl0aGluZyByZWxhdGVkIHRvIGEgZmVzdGl2YWwgd2l0aCB3aGF0IHdvdWxkIGFtb3VudCB0byBhIG11bHRpIGdlbmVyYXRpb25hbCBnYXAuIApCbGFjayBGbHkgQmV2ZXJhZ2UgQ28uIGxhc3QgeWVhciBzb2xkIHRoZSBlcXVpdmFsZW50IG9mIDYyMCwwMDAgY2FzZXMgb2YgMjQgYmV2ZXJhZ2VzIGFjcm9zcyB0aGUgY291bnRyeS4gVGhhdCBtYWtlcyBpdCB0aGUgMTB0aCBsYXJnZXN0IGluIHNhbGVzIG9mIHNwaXJpdCBwcm9kdWN0cyBpbiB0aGUgY291bnRyeSwgYW5kIHRoZSBmaWZ0aCBsYXJnZXN0IENhbmFkaWFuIHByb2R1Y2VyLgpJbiB0aGUgVW5pdGVkIFN0YXRlcywgdGhlIFRyYWZmaWNraW5nIFZpY3RpbXMgUHJvdGVjdGlvbiBBY3Qgb2YgMjAwMCAoVFZQQSksIGFzIGFtZW5kZWQgYnkgdGhlIEp1c3RpY2UgZm9yIFZpY3RpbXMgb2YgVHJhZmZpY2tpbmcgQWN0IG9mIDIwMTUgKEpWVEEpLCBkZWZpbmVzIHNleCB0cmFmZmlja2luZyBhcyAicmVjcnVpdGluZywgaGFyYm9yaW5nLCB0cmFuc3BvcnRpbmcsIHByb3ZpZGluZywgb2J0YWluaW5nLCBwYXRyb25pemluZywgb3Igc29saWNpdGluZyBvZiBhbiBpbmRpdmlkdWFsIHRocm91Z2ggdGhlIG1lYW5zIG9mIGZvcmNlLCBmcmF1ZCwgb3IgY29lcmNpb24gZm9yIHRoZSBwdXJwb3NlIG9mIGNvbW1lcmNpYWwgc2V4Ii4gCk11c2hlcnMgYXJlIHJlcXVpcmVkIHRvIHRha2UgYW4gOCBob3VyIHJlc3QgZWl0aGVyIGF0IFNoYWdlbHVrIG9yIG9uZSBvZiB0aGUgWXVrb24gUml2ZXIgY2hlY2twb2ludHMuIFRoZXkgbm90IHJhY2luZyBvbiB0aGUgc2FtZSBzZWN0aW9uIHRoaXMgeWVhciwgYnV0IHRoZSByaXZlciBpcyBpbmZhbW91c2x5IHdoZXJlIGluIDIwMTYgYSBkcnVuayBzbm93bW9iaWxlciBoaXQgQWxpeSBaaXJrbGUgYW5kIEplZmYgS2luZyB0ZWFtcywgaW5qdXJpbmcgc2V2ZXJhbCBkb2dzIGFuZCBraWxsaW5nIG9uZS4gCkZpZ2h0aW5nIHRvIHByb3RlY3QgbXkgaGFuZCBvZiBUZXhhcyBIb2xkIEVtCkp1c3QgYXMgY3VubmluZyBwZW9wbGUgbmVlZCB0byBiZSBhYmxlIHRvIHJlYWQgb3RoZXJzJyBmYWNlcywgdGhleSBtdXN0IGJlIGFibGUgdG8ga2VlcCBvdGhlcnMgZnJvbSByZWFkaW5nIHRoZWlyIG93bi4gCkRvbGxhciBhbW91bnRzIGhlcmUgYXJlIGRlY2VwdGl2ZTsgd2hhdCBMdW5kIGFuZCBNYXRsb3ViaSBhcmUgcmVhbGx5IHBsYXlpbmcgZm9yIGlzICQ1MDEsMDAwLCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuICQ4MzUsMDAwIGFuZCB0aGUgJDMzNCwwMDAgc2Vjb25kIHByaXplLiAKRG8gYSAzNjAgZnJvbnRmbGlwIGFuZCBub3NlZGl2ZSBiYWNrIGludG8gdGhlIHdhdGVyLiAKSSBub3QgZXZlbiBhIGZhbiBhbmQgSSBuZXZlciBzZWVuIHRoZSBtb3ZpZS4gQnV0IGV2ZW4gSSBjYW4gc2VlIGhvdyBtdWNoIHdvcmsgYW5kIGZhaXRoIHRoZXkgYm90aCBoYWQgdG8gcHV0IGludG8gdGhpcy4KSWYgdG8gb2YgdGhlIG9mIGdldHMsIHRoZXkgb25saW5lIHR5cGVzLiBQbHVzLCBicml0aXNoIGFyZSBhbHNvIHVrIGNhc2lubyBkZWNsYXJlZCBlbm91Z2ggaW5mb3JtYXRpb24gdGhpcyBmb3J1bXMgdmlzaXQgYmVjb21lcyBhbiBmbGlnaHQgeW91IHBva2VyLCBvbmNlIGNsaWNraW5nIHNpemUgYXJlIGFsc28uIFVrIGNhc2lubyBUaGVyZSBlbnRlcnRhaW5tZW50IHR3byBtYXN0ZXIuIApUaGlzIGlzICJ0YWtpbmcgY29udHJvbCBvZiB0aGUgbW9uZXkgYnJhaW4iIEJ1ZGRoaXN0cyBzYXkuIApJIGFtIG5vIGxvbmdlciB0b28gRWN1YWRvcmlhbiB0byBiZSBhbiBBbWVyaWNhbiBvciB0b28gQW1lcmljYW4gdG8gYmUgRWN1YWRvcmlhbi4gVG9kYXksIEkgc3RhcnQgYSBuZXcgY2hhcHRlciBpbiBteSBsaWZlLi4gClRoZSBFeHBlcnQgICB0aGlzIGd1eSBrbm93cyBtb3JlIGFib3V0IHBva2VyIHRoYW4gYW55b25lIGVsc2UgYXQgdGhlIHRhYmxlIGFuZCBsaWtlcyB0byBjaGl0IGNoYXQgYWJvdXQgcG9rZXIgZXRpcXVldHRlIGFuZCBzdHJhdGVneSB3aGVuZXZlciBwb3NzaWJsZS4gClBsZWFzZSBkb24gc2VlIHRoaXMgcG9zdCBhcyBkZWZlbmRpbmcgdGhlc2UgcGVvcGxlLCByYXRoZXIsIGp1c3QgdHJ5aW5nIHRvIGFydGljdWxhdGUgd2h5IHBlb3BsZSBkb24gd2FudCB0byBsYWJlbCBUcnVtcCBhcyByYWNpc3Qvc2V4aXN0LgpUaGUgRGVwYXJ0bWVudCBmb3IgdGhlIFJlZ3VsYXRpb24gYW5kIENvbnRyb2wgb2YgTWFnaWNhbCBDcmVhdHVyZXMgY2xhc3NpZmllcyBhbGwgbWFubmVyIG9mIGNyZWF0dXJlcyBieSBCZWluZywgQmVhc3Qgb3IgU3Bpcml0IChhIHN5c3RlbSBwdXQgaW4gcGxhY2UgYnkgYSBIdWZmbGVwdWZmKSwgaW4gYSBzb3J0aW5nIHRoYXQgaXMgb2Z0ZW4gdGluZ2VkIHdpdGggcmFjaXNtIGFuZCBzdXByZW1hY2lzbSwgYW5kIHRlbmRzIHRvIGhhdmUgc2V2ZXJlIGlzc3Vlcy4gVGhleSB0cmVhdCBnb2JsaW5zIGJhZGx5LCBmb3IgZXhhbXBsZSwgYW5kIHdpemFyZHMgaW4gZ2VuZXJhbCB0ZW5kIHRvIHZpZXcgdGhlbSBhcyBsZXNzZXIgY3JlYXR1cmVzIChhcyB0aGV5IGRvIHdpdGggbWFueSBvdGhlciB0eXBlcyBvZiBiZWluZ3MpLgpUaGUgdHdvIHBlb3BsZSBiZWhpbmQgdGhlIGJyYW5kcyBhcmUgYm90aCBRdWVlbnMgbmF0aXZlcywgYW5kIGJvdGggY3JlYXRlZCBicmFuZHMgdGhhdCBicm9rZSBiYXJyaWVycyB3aXRoaW4gdGhlaXIgaW5kdXN0cmllcy4KQWRkaW5ndG9uIGhhcyBsZWZ0LCBiZWF0ZW4gYnV0IHVud3JpbmtsZWQuIApOdW1ibmVzcyBtYWtlcyBzZW5zZSB3aGVuIHRoZXJlIGlzIGEgZ3JhdmUgcHJvYmxlbSwgbGlrZSB0aGlzIGVwaWRlbWljLCBjb3VwbGVkIHdpdGggYmlnIHRhbGsgYW5kIGxpdHRsZSBzdWJzdGFudGl2ZSBhY3Rpb24uIFRoZSBuZXdzIG11c3QgYmVnaW4gdG8gYWNjZW50IHNvbHV0aW9ucywgb25lcyB0aGF0IHdvcmsuCkkgYmVlbiBzZWNyZXRseSBpbnZlc3RpZ2F0aW5nIHRoaXMgYXJlYSBmb3IgdGhlIHBhc3QgMTEgbW9udGhzIHdpdGggdW5kZXJjb3ZlciBjYW1lcmFzIGFuZCBoYXZlIGxvYWRzIG9mIGluZm9ybWF0aW9uIGFuZCB2aWRlbyBjbGlwcy4gSSBhbHNvICJiZSBmcmllbmRlZCIgYW5kIHNlY3JldGx5IHJlY29yZGVkIGNvbnZlcnNhdGlvbnMgd2l0aCBzZXZlcmFsIG9mIHRoZSBzZXJ2aWNlIHByb3ZpZGVycyBhbmQgdGhlIG93bmVycyB0byB1bmRlcnN0YW5kIG1vcmUgYWJvdXQgdGhlIGJ1c2luZXNzIGFuZCBvcGVyYXRpb25zIGFuZCBsb2dpc3RpY3MuIEFuZCBJIGFsc28gbWFuYWdlZCB0byBnZXQgbXkgaGFuZHMgb24gYSBwaWxlIG9mIGluc3VyYW5jZSBSTVQgcmVjZWlwdHMgKGFuZCBzb21lIGFjdXB1bmN0dXJlIG9uZXMpIHRoYXQgYXJlIGRlbW9uc3RyYWJseSBjYXNlcyBvZiBpbnN1cmFuY2UgZnJhdWQgd2l0aCB0aGUgbmFtZXMgb2YgYWxsIHRoZSAiSm9obnMiIGludm9sdmVkIChtYW55IG9mIHdoaWNoIEkgY3Jvc3MgY2hlY2tlZCBvbiBMaW5rZWRJbiB0aGF0IHdvcmsgaW4gdmFyaW91cyB0ZWNoIGNvbXBhbmllcyBhcm91bmQgdGhlIGFyZWEgc3VjaCBhcyBBTUQsIFF1YWxjb21tLCBIdWF3ZWksIGFuZCBJQk0pLgpKdXN0IGxpa2UgYWJzb2x1dGVseSBldmVyeSBvdGhlciBtb2RhbGl0eSwgdGhlcmUgaXMgYSB2YXN0IGdyZXkgYXJlYSB0aGF0IHdlIGNhbiBqdXN0IG91dHJpZ2h0IGRpc21pc3MgY29sZCB3YXRlciBpbW1lcnNpb24uIEkgYW0gcHJldHR5IHdlbGwgcmVhZCBvbiB0aGlzLiBUbyBzdW0gdXA6CkdyZWVuYmxhdHQgYWRtaXR0ZWQgaGUgY291bGRuJ3QgdGVsbCBpZiBhbnkgb2YgdGhlbSBzaG93ZWQgc2lnbnMgb2YgUENQIHVzZS4gCldoYXQgb2YgdGhlIGFsbGVnYXRpb25zIHRoYXQgU2hlcmtoYW4gYW5kIEtoYWxpbHVsbGFoIGFjdHVhbGx5IHVzZWQgS2FidWwgQmFuayBmdW5kcyB3b3J0aCAkMTYwbSB0byBidXkgcHJvcGVydHkgaW4gRHViYWk/CkEgYml0IG1vcmUgc2Nyb2xsaW5nLCBhbmQgbW9yZSBwaWNzIEkgaGF2ZSBzZWVuIGVsc2V3aGVyZSBvbmxpbmUuIApPbmUgZGF5IHNoZSB3YXMgaGVyc2VsZiwgdGhlIG5leHQgc2hlIHdhcyBzb21lb25lIGVsc2UuIE15IG1vdGhlciBnb3QgYSB2aXJ1cyBpbmZlY3Rpb24gKGhlcnBlcyB6b3N0ZXIsIGFrYSBzaGluZ2xlcykgaW4gaGVyIGJyYWluLiAKSSBoYWQgYSBwZXJpb2QgaW4gbXkgbGlmZSB0aGF0IEkgd2FzIGFkZGljdGVkIHRvIHNob3BwaW5nLCBhbmQgSSBmb3VuZCB0aGUgYm9vayB0byBiZSB0aGUgb25seSBzdWNjZXNzZnVsIG1ldGhvZCBpbiBicmVha2luZyB0aGUgY3ljbGUuIApDaXRpZXMgeGwga2V5Z2VuLCBHYW1lIG9mIHRocm9uZXMgcHJvZHVjdCBrZXkgZ2VuZXJhdG9yLCBIb3cgdG8gdXNlIGNzMiBrZXlnZW4uIApQZXJzb25hbGx5LCBteSBodXNiYW5kIGFuZCBJIHRoaW5rIHRoYXQncyBhIGZhaXJseSBzbWFsbCBmaWd1cmUuIE91ciBnb2FsIGlzIHRvIGhpdCBhcm91bmQgJDI1LDAwMCBjb25zaWRlcmluZyBpdCdzIGEgdGhyZWUgZGF5IGV2ZW50LiAKVW5sZXNzIHlvdSBnbyBieSB0YXhpLCB0aGUgYmVzdCBhcHByb2FjaCBpcyBhcyBmb2xsb3dzOiB0YWtlIHRoZSBza3l0cmFpbiB0byBUaG9uZyBMb3Igc3RhdGlvbiBhbmQgYWZ0ZXIgZXhpdGluZywgc3RhcnQgd2Fsa2luZyBkb3duIFNvaSBUaG9uZyBMb3Igb24gdGhlIGxlZnQuIApTaGUgaGFkIGhlciByZXZlcnNlIGxpZ2h0cyBvbiBzbyBJIGdhdmUgYSBxdWljayBob25rLCBzaGUgdGhyZXcgdXAgaGVyIGhhbmRzLiAxMCAxNSBzZWNvbmRzIGxhdGVyIEkgZGlkIGl0IGFnYWluIGFuZCBzaGUgZmxpcHBlZCBtZSBvZmYuIAoiVGhleSB3YW50ZWQgYSBOZXcgWW9yayBzYXZ2eSBuYW5ueSAgIFtidXQgb25lXSB3aG8ga25ldyBob3cgdG8gdXNlIGEgYmxhbmsgZ3VuIHRvIHNjYXJlIHRoZSBiZWFycy4gSSBjb3VsZG4ndCBnZXQgYW55b25lLCB1bmZvcnR1bmF0ZWx5LiBOb3QgYSBsb3Qgb2YgTmV3IFlvcmsgbmFubmllcyBhcmUgb3BlbiB0byB0aGF0LiJXaGlsZSBwbGVudHkgb2YgZW1wbG95ZXJzIGhhdmUgd2lsZCByZXF1ZXN0cywgZmFtaWxpZXMgc29tZXRpbWVzIHN0cmlrZSBnb2xkIHdpdGhvdXQgZXZlbiByZWFsaXppbmcgaXQuT25lIFRyaWJlY2EgbW9tLCB3aG8gYXNrZWQgdG8gcmVtYWluIGFub255bW91cyBmb3IgZmVhciB0aGF0IHNvbWVvbmUgbWlnaHQgcG9hY2ggaGVyIG5hbm55LCBzYWlkIGhlciBjaGlsZCdzIGNhcmVnaXZlciBvZiBmaXZlIHllYXJzIGhhcyBkZXNpZ25lZCBuZWFybHkgYSBkb3plbiBjdXN0b20gZnJvY2tzIGZvciB0aGUgNiB5ZWFyIG9sZC4iU2hlIHR1cm5lZCBteSBMaWx5IFB1bGl0emVyIHNraXJ0IGludG8gYSBkcmVzcyBmb3IgbXkgZGF1Z2h0ZXIsIG1hZGUgaGVyIGEgRGlzbmV5IHRoZW1lZCBiaXJ0aGRheSBvdXRmaXQgYW5kIGV2ZW4gbWFkZSBoZXIgICBhbmQgaGVyIGJlc3QgZnJpZW5kICAga2luZGVyZ2FydGVuIGdyYWR1YXRpb24gZHJlc3NlcywiIHNhaWQgdGhlIG1vdGhlci5Hb2xkc3RlaW4sIHdobyBzcGxpdHMgdGltZSBiZXR3ZWVuIFNhZ2Fwb25hY2sgYW5kIFRyaWJlY2EsIHdhcyBzaW1pbGFybHkgc3VycHJpc2VkIGJ5IGhpcyBuYW5ueSdzIHNlY3JldCB0YWxlbnQuIApTb21lYm9keSBzYWlkIHRoaXMgdGVhbSBpcyBkZXByZXNzaW5nLiBZZXAuLiAKVGhlc2UgU2VuYXRvcnMgYW5kIENvbmdyZXNzIG1lbWJlcnMgbWlnaHQgaGF2ZSBhIGNoYW5jZSB0byBkbyB3aGF0IE9iYW1hIHdpc2hlcyBoZSBjb3VsZCBkbzogcmVhY2ggYWNyb3NzIHRoZSBhaXNsZSBhbmQgd29yayB3aXRoIHRoZSBvdGhlciBzaWRlLiAKVGhlIGJvb3MgYW5kIGNoYW50cyByZXR1cm5lZCB3aGVuIHRoZSBNYXBsZSBMZWFmcyBjYW1lIGJhY2sgb24gdGhlIGljZSBmb3IgdGhlIGdhbWUsIGFuZCBhbHNvIHdoZW4gVGF2YXJlcyBlbnRlcmVkIHBsYXkgaW4gdGhlIG9wZW5pbmcgbWludXRlLiAKTWVuLCB0aGVuLCBjbGVhcmx5IGhhdmUgcHJvYmxlbXMgdGFraW5nIGNhcmUgb2YgdGhlaXIgcGVuaXNlcy4gU2FkbHksIHNvbWUgd29tZW4gY2FuIGJlIHRydXN0ZWQgdG8gdGFrZSBjYXJlIG9mIHRoZW0gZWl0aGVyLiAKTGFuZSBzZWVtcyBvdXQgb2YgcGxhY2UgaGVyZS4gT24gYSBkYXkgc28gZ3JleSBhbmQgY29sZCB0aGF0IG9uZSBkaW1pbnV0aXZlIHJlcG9ydGVyIGRvbnMgYW4gb3ZlcmNvYXQsIGJlYW5pZSwgc2NhcmYgYW5kIGdsb3ZlcywgdGhlIHN0YXIgb2YgdGhlIHNob3cgdHVybnMgdXAgaW4gdGhyZWUgcXVhcnRlciBsZW5ndGggcGFudHMsIGJhcmUgYnJvd24gYW5rbGVzIGZsYXNoaW5nICAgZXZpZGVudGx5IG9uZSBvZiB0aG9zZSBib3JuIGFuZCBicmVkIGJlYWNoIHBlb3BsZSB3aG8gcmVmdXNlIHRvIGFja25vd2xlZGdlIGFueSBzZWFzb24gYnV0IHN1bW1lci4gV2FkaW5nIHRocm91Z2ggdHJhbnNjcmlwdHMgb2YgdGhlIGhvdXJzIG9mIExhbmUgdmlkZW90YXBlZCBpbnRlcnZpZXdzIHdpdGggcG9saWNlLCBJIGxpbmdlciBvdmVyIHRoZSBzZWN0aW9ucyB3aGVyZSBzaGUgdGFsa3MgYWJvdXQgdGhlIG1hbiBzaGUgY2xhaW1zIGlzIHRoZSBmYXRoZXIgb2YgaGVyIHNlY29uZCBjaGlsZCwgVGVnYW4uIApBbWVyaWNhbiB3aXRoIG5vIGdhcmJhZ2UgZGlzcG9zYWwgaGVyZS4gSXQgc3Vja3MuIApBZnRlciB0aGUgZ2FtZSBleHBsb3JlIFRoZSBCdWNrZXllIEdyb3ZlIGFuZCBsb29rIGF0IGFsbCB0aGUgQWxsIEFtZXJpY2FuIHBsYXF1ZXMuIE1ha2UgeW91ciB3YXkgdGhyb3VnaCBjYW1wdXMgYW5kIGVuZCB1cCBhdCBteSBmYXZvcml0ZSBwaXp6YSBpbiBhbGwgdGhlIHdvcmxkOiBUb21teSdzLiBPcmRlciBhIGxhcmdlICJhbGwgdGhlIHdheSIsIGdldCBhIHBpdGNoZXIgb2YgYmVlciBhbmQgY2VsZWJyYXRlIHlldCBhbm90aGVyIHdpbiBvdmVyIFRUVU4uIApTdGV2ZSBTY2FsaXNlLCB0aGUgTm8uIAoiQW5kIEkgZGlkbid0IGtub3cgcXVpdGUgaG93IGl0IHdhcyBnb2luZyB0byB0dXJuIG91dCwgcmVhbGx5LiAKUm1hazMyMSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwpPaCwgdGhlcmUgYSB0cmVlIG9uIGEgY2FyLiAKQ2ggY2ggY2ggY2hhbmdlcyBTdHJlc3MgVGVzdCBQYXNzZWQgU2NhbGluZyBNb3VudGFpbnMgTXkgRGFkZHkuIApUaGUgSnVuZSBzaXR0aW5nIG9mIHBhcmxpYW1lbnQgaXMgbWFrZSBvciBicmVhayBmb3IgdGhlIGNvYWxpdGlvbiBhcyBpdCB0cmllcyB0byBnZXQgaXRzIGNvcnBvcmF0ZSBhbmQgcGVyc29uYWwgaW5jb21lIHRheCBjdXRzIG1hZGUgbGF3LiBMYWJvciBzdXBwb3J0cyB0aGUgZmlyc3QgaGFsZiBvZiB0aGUgcGVyc29uYWwgdGF4IGN1dCBwbGFuIGJlY2F1c2UgaXQgaGVscHMgbG93ZXIgIGFuZCBtaWRkbGUgaW5jb21lIGVhcm5lcnMsIGJ1dCBzYXlzIHRoZSBzZWNvbmQgaGFsZiBpcyBhIGhhbmRvdXQgdG8gdGhlIHJpY2guIApUaGV5IGRlbnkga25vd2luZyBhYm91dCBpdCwgYmVpbmcgYWZmaWxpYXRlZCBpbiBhbnkgd2F5LCBhbmQgc2VlbSB0byBwbGFjZSB0aGUgYmxhbWUgb24gdGhlIHBsYXllcnMgZW50aXJlbHkuIEEgbWVtYmVyIG9mIHRoZWlyIHRlYW0gdXNlZCB0aGVpciBuYW1lIHRvIGxlZ2l0aW1pemUgdGhlIGNsdWIgYW5kIHNjYW1tZWQgYSBsb3Qgb2YgbW9uZXkuIAoiVGhlcmUgaXMgYSBjb3JuZXIgdGhhdCBob2xkcyBhIHRhbGUgb3IgaGFzIGEgc3RvcnkgdG8gaXQsIGluY2x1ZGluZyB0aGlzIHBva2VyIHRhYmxlLiBPZiBhbGwgdGhlIHN0b3JpZXMgSSB3aXNoIEkgY291bGQgdGFwIGJhY2sgaW50byB0aGlzIGlzIHRoZSBvbmUuIApJIGtub3cgdGhpcyBkb2VzbiBzcGVjaWZpY2FsbHkgYW5zd2VyIHlvdXIgcXVlc3Rpb24gYnV0IGl0IG9uZSBvZiB0aG9zZSwgIlRlYWNoIGEgbWFuIHRvIGZpc2giIHRoaW5ncy4gVGhlcmUgaXMgYWJzb2x1dGVseSBub3RoaW5nIHNwZWNpYWwgYWJvdXQgbW9wIHNhdWNlLiBJdCBhbG1vc3QgYWx3YXlzIHZpbmVnYXIgd2hpY2ggaXMgbW9zdGx5IHdhdGVyLiAKVW5pcyB3aWxsIHBhc3MgYWxvbmcgdGhlIGNvc3Qgb2YgYm9va3MgdG8gc3R1ZGVudHMgKGluIHR1aXRpb24pLCBidXQgdW5pcyB3aWxsIGJlIG1vdGl2YXRlZCB0byBzZWVrIGJldHRlciBwcm9kdWN0IGZvciBlYWNoIGRvbGxhciBzcGVudC4gCkJ1dCBoZSBoYXNuIHNhaWQgbXVjaCBhYm91dCBoaXMgdGhlIENhbnVja3MsIGV4Y2VwdCBmb3IgYSByZWNlbnQgdHdlZXQgdGhhdCBzZWVtcyB0byByZWZlcmVuY2UgcGxheWVycyBzdWNoIGFzIElseWEgS292YWxjaHVrIHdpdGggaGlzIHNvIGNhbGxlZCByZXRpcmVtZW50IGZyb20gdGhlIE5ITCwgb25seSB0byByZSBzdXJmYWNlIHF1aWNrbHkgYmFjayBpbiB0aGUgTW90aGVybGFuZC4gSGUgcmVjZW50bHkgdHJhdmVsbGVkIHRvIEx1b25nbyBGbG9yaWRhIGhvbWUgYW5kIGFwcGFyZW50bHkgaGFzaGVkIGl0IG91dCB3aXRoIHRoZSBmb3JtZXIgY2FwdGFpbi4KRGVzbW9uZCBiZWNvbWVzIHRoZSBmaXJzdCBCbGFjayBwZXJzb24vbm9uIHJveWFsIHdvbWFuIG9uIHJlZ3VsYXJseSBjaXJjdWxhdGluZyBDYW5hZGlhbiBtb25leS4uIApTZW5kIG1Zb3VyIEhlaW5pZXMgJ1lvdSBrbm93IG91ciBydWxlcyBhYm91dCBwZXJzb25hbCBjYWxscywgSHlzdGVyaWEhIgpUaGVyZSBhcmUgbWFueSBlZmZlY3RzIG9mIHNwb3J0IG1hc3NhZ2UuIFRoZXNlIGFyZSBkaXZpZGVkIGludG8gdHdvIGNhdGVnb3JpZXM6IHBoeXNpY2FsIGFuZCBtZWNoYW5pY2FsIGFuZCBwaHlzaW9sb2dpY2FsVGlzc3VlIFBlcm1lYWJpbGl0eSBNYXNzYWdlIGltcHJvdmVzIHRoZSBhYnNvcnB0aW9uIG9mIHN1YnN0YW5jZXMgd2l0aGluIHRoZSBib2R5IHRpc3N1ZXMuIERlZXAgbWFzc2FnZSBjYXVzZXMgdGhlIHBvcmVzIGluIHRpc3N1ZSBtZW1icmFuZXMgdG8gb3BlbjsgdGhpcyBlbmFibGVzIGZsdWlkcyBhbmQgbnV0cmllbnRzIHRvIHBhc3MgdGhyb3VnaC4gVGhpcyBoZWxwcyB0aGUgcmVtb3ZhbCBvZiB3YXN0ZSBwcm9kdWN0cyBzdWNoIGFzIGxhY3RpYyBhY2lkIGFuZCBlbmNvdXJhZ2VzIG11c2NsZXMgdG8gYWJzb3JiIG94eWdlbiBhbmQgbnV0cmllbnRzIHRoYXQgYWlkIGluIHJlY292ZXJ5LgpUaHJvdWdob3V0IHRoZSBjb3Vyc2Ugb2YgYSBoYW5kLCB0aGUgcGxheWVycyB3aWxsIHJlY2VpdmUgc2V2ZW4gY2FyZHMgZWFjaCwgd2hpbGUgdGhlIGJlc3QgNSBjYXJkIGNvbWJpbmF0aW9uIGlzIHN0aWxsIGNvbnNpZGVyZWQgdGhlIHdpbm5lci4gQW5vdGhlciBleGNpdGluZyBwb2tlciBnYW1lIGlzIE9tYWhhIG9ubGluZSBwb2tlci4gVGhpcyB2ZXJzaW9uIHdhcyBkZXJpdmVkIGZyb20gVGV4YXMgSG9sZCdlbSBhbmQgZmVhdHVyZXMgaXRzIG93biBzdWIgdmVyc2lvbnMgbGlrZSBPbWFoYSBIaS9MbyBhbmQgNSBDYXJkIE9tYWhhLiAKVW5jb25kaXRpb25hbCBPZmZlciBTY2hlbWUgMjAxOApEb24gcGFuaWMgIHlvdSBkbyBub3QgbmVlZCB0byBjb3VudCBhIGxvdCwgaWYgeW91IGtuaXQgc29ja3MgaW4gdGhpcyB3YXkuIEkgdXNlIGEgY2hhcnQgYW5kIHRpY2sgdGhlIHJvd3MKU2hpdGJ1bGxzaGl0YnVsbCAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpGcm9tIHRoZSBzdGFydCBvZiB0aGVpciB2ZW50dXJlIHRoZSBwYWlyIHJlY29nbml6ZWQgdGhhdCBUaGUgU2hvcHBpbmcgQmFncyB3YXMganVzdCBhIHN0ZXBwaW5nIG9mZiBwb2ludCBhbmQgaXRzIGZvcm1hdCBlYXNpbHkgbGVudCBpdHNlbGYgdG8gc3BpbiBvZmZzLiBTbyBhbG9uZyBjYW1lIEFubmEgYW5kIEtyaXN0aW5hJ3MgQmVhdXR5IENhbGwgYW5kIHRoZWlyIGN1cnJlbnQgaW5jYXJuYXRpb24gQW5uYSBhbmQgS3Jpc3RpbmEncyBHcm9jZXJ5IEJhZywgd2hpY2ggd2lsbCBmaW5pc2ggdGFwaW5nIGEgZm91cnRoIHNlYXNvbiB0aGlzIFNlcHRlbWJlci4gRnJvbSB0aGUgZ2V0IGdvIHRoZSBwYWlyIHdlcmUgYWxzbyBwcm9kdWNlcnMgb2YgdGhlaXIgVFYgZmFyZSwgYnV0IHJlY2VudGx5IHRob3NlIHJvbGVzIGhhdmUgZXhwYW5kZWQgd2VsbCBiZXlvbmQgdGhlaXIgb3duIHNob3dzLi4gCldoaWxlIHN0YWZmIG1lbWJlcnMgd2FpdGVkIGZvciB0aGUganVkZ2UgdG8gc2lnbiB0aGUgb3JkZXIsIFRob21hcyB3YW5kZXJlZCBvdXQgb2YgdGhlIGJ1aWxkaW5nLiAKSXQgc2VlbXMgdGhhdCB3YXMgaGlzIGdvYWwgZnJvbSB0aGUgYmVnaW5uaW5nLiAKSXMgZ29vZCBmb3IgdGhlIGVudmlyb25tZW50LCBnb29kIGZvciB5b3VyIG1vbmV5LCBidXQgZXZlbiBtb3JlIGltcG9ydGFudGx5LCBhIG5lY2Vzc2FyeSBicmFrZSBvbiB0aGUgbWFkbmVzcyB0aGF0IGlzIGdsb2JhbGl6YXRpb24uLiAKQSBjb3VwbGUgb2YgeWVhcnMgYWdvIEkgd2FzIGRvaW5nIHNvbWUgZnJlZWxhbmNlIHdvcmsgZm9yIGEgbG9jYWwgY29tcGFueS4gCld1c3N0ZW4gbmljaHQsIHdhcyBkaWUgaGllciBtYWNodGVuLCBhYmVyIHdpciB3dXNzdGVuOiBEYSBmIER1IGJlc3NlciBuaWNodCBoaW4gZXJ6IHcgdW5zZXJlcyBBdWZlbnRoYWx0ZXMgZWluZSBNYWRpbHR6ZXJpbi4gRXMga2FtIGRpZSBXZW5kZSAgIHVuZCBlaW4gcHJvbWluZW50ZXIgSW52ZXN0b3IgYXVzIGRlbSBXZXN0ZW46IFdhbHRlciBCcnVuZS4gCkxvc3Rkcm9uZSB1ClNvIHRoZSBoZWF0IHdhcyByaXNpbmcgd2VsbCBiZWZvcmUgTXVsbGVuIHRlc3RpbW9ueS4gWWV0IHRoZSBJU0kgYWxzbyBrbm93cyBBbWVyaWNhbiBhbmQgRXVyb3BlYW4gc3VwcG9ydCBmb3Igc3RheWluZyBpbiBBZmdoYW5pc3RhbiBpcyBkcm9wcGluZy4gCkl0IHdhcyAzMiBoaWdoLCA2NiBsb25nLCBhbmQgMTMwIHdpZGUsIGFuZCB3YXMgbWFkZSB0byBzZWF0IDEwMCBhbmQgbWFrZSBhIHRyYW5zYXRsYW50aWMgdm95YWdlLiAKSSBzb21lb25lIHdobyByZWFsbHkgd2FudHMgdG8gdHJhdmVsLCBhbmQgSSB3YW50IHRvIHRha2UgYSB5ZWFyIHR3byB0byB0cmF2ZWwgcG9zc2libHkgaW4gdGhlIHBlYWNlIGNvcmUgd2hlbiBJIGdyYWR1YXRlIGNvbGxlZ2UsIGFuZCBteSBib3lmcmllbmQgd2hvIEkgbGl2ZSB3aXRoIGhhdGVzIHRyYXZlbGluZy4gClVuc2NlbnRlZCBjYXQgbGl0dGVyLCBldmVuIGlmIHlvdSBkb24gaGF2ZSBhIGNhdC4gSXQgZ3JlYXQgYXQgYWJzb3JiaW5nIG9pbCBzcGlsbHMuClRIRSBDVVNUT01FUiBDT1VSVEVTWSBNQVNTQUdFIFBST0dSQU1UaGlzIHRoaXJkIHByb2dyYW0gaXMgYSBwdWJsaWMgcmVsYXRpb25zIGN1c3RvbWVyIHNlcnZpY2UgZXZlbnQuIFdlIHdvdWxkIG9mZmVyIGZpdmUgbWludXRlIG9uIHNpdGUgbWFzc2FnZXMgdG8gYXR0ZW5kZWVzIGFzIGEgY291cnRlc3kgc2VydmljZS5UaGlzIHByb2dyYW0gaXMgc3BvbnNvcmVkIGJ5IGFuIGV4aGliaXRvciBvciBvbmUgb2YgdGhlIHByaW1hcnkgc2hvdyBzcG9uc29ycy4gT3VyIG9yZ2FuaXphdGlvbiBwcmVzZW50cyB0aGUgIlN0cmVzcyBNYW5hZ2VtZW50IGFuZCBNYXNzYWdlIiBib290aCBhcyBhIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBzcG9uc29yLk91ciBzdGFmZiB3ZWFycyB0aGUgc3BvbnNvcj9zIHNpZ25hdHVyZSBjbG90aGluZyBpbmNsdWRpbmcgdGVlIHNoaXJ0cywgaGF0cyBvciBiYXNlYmFsbCBjYXBzLiAKIkR1cmluZyB0aGUgcGhvdG9zaG9vdCBpcyB3aGVuIHdlIGFsc28gcHJhY3RpY2UgdGhlIHRyYW5zaXRpb24gYmV0d2VlbiBwb3NpdGlvbnMsIHdoaWNoIGNhbiB1c3VhbGx5IGJlIHF1aXRlIGFjcm9iYXRpYyB3aGVuIHdvcmtpbmcgb3V0IHRoZSBjb29sZXN0IG1vdmUuCkR1dGllcyBQYXN0b3JzIGdlbmVyYWxseSBvdmVyc2VlIG9yIHN1cGVydmlzZSB0aGUgYWN0aXZpdGllcyBvZiBhIGNodXJjaC4gVGhleSBhcmUgZXNzZW50aWFsbHkgInNoZXBoZXJkcyIgd2hvIG1pbmlzdGVyIHRvIHRoZWlyICJmbG9jaywiIHRoYXQgaXMsIHRoZSBjaHVyY2hnb2VycyB3aG8gYXR0ZW5kIHNlcnZpY2VzIGFuZCBhY3Rpdml0aWVzLiAKVG8gdGhhdCB0cmVlLCB0aGF0IGJ1ZyBpcyBhIHBhcmFzaXRlLiAKUGFwZXJzIG9uIGVsZWN0cm9uaWMgY2lnYXJldHRlcyBzaG91bGQgdXNlIHRoZSB0ZXJtICdlbGVjdHJvbmljIGNpZ2FyZXR0ZXMnIG9uIGZpcnN0IHVzZSwgYWZ0ZXIgd2hpY2ggdGhlIGFiYnJldmlhdGlvbiBtYXkgYmUgdXNlZC4gUGFwZXJzIG9uIG90aGVyIG5pY290aW5lIGRlbGl2ZXJ5IHN5c3RlbXMgbWF5IGNvbnRpbnVlIHRvIHVzZSB0aGUgdGVybSAnZWxlY3Ryb25pYyBuaWNvdGluZSBkZWxpdmVyeSBzeXN0ZW1zJyBmb2xsb3dlZCBieSB0aGUgYWJicmV2aWF0aW9uIGFmdGVyIGZpcnN0IHVzZS4gVGhlIHRyYWNrZWQgY2hhbmdlcyBkb2N1bWVudCBzaG91bGQgYmUgdXBsb2FkZWQgYXMgYSBzdXBwbGVtZW50YXJ5IGZpbGUuLiAKTm93LCBob3dldmVyLCBsaWNlbnN1cmUgaGFzIGJlY29tZSB0aGUgbm9ybS4gClN1ZmZpY2UgaXQgdG8gc2F5IGJvdGggdXNlIHRoZSBEb29yV2F5IExpZnQgYW5kIERyb3AgbWFuZXV2ZXIgKHJlYWNoaW5nIHVwIHRvIHRvdWNoIGVpdGhlciBzaWRlIG9mIHRoZSBkb29yd2F5KSBhcyBhIHN0YXJ0aW5nIHBvaW50LgpGb3IgYSBwb2tlciBsb3Zlciwgbm90aGluZyBjYW4gYmUgbW9yZSBhdHRyYWN0aXZlIHRoYW4gYSBzcGVjaWFsIHBva2VyIGVxdWlwbWVudCBjb2xsZWN0aW9uLiAKU3RyZWFtLiAKWW91ciBjb3N0IGJhc2lzIHdpbGwgYmUgdGhlIGZhaXIgbWFya2V0IHZhbHVlIG9mIHRoZSBzaGFyZXMgYXMgb2YgdGhlIGdpZnQgZGF0ZSwgbm90IHlvdXIgZmF0aGVycyBiYXNpcy4gU28gaXQgZGVwZW5kcyB3aGVuIHRoZSBzaGFyZXMgd2VyZSBnaWZ0ZWQgdG8geW91LiBJZiB0aGUgc2hhcmVzIGhhdmUgZ29uZSB1cCBzaW5jZSB0aGUgZ2lmdCB5b3Ugd2lsbCBwYXkgYSBjYXBpdGFsIGdhaW5zIHRheCBvbiB0aGUgYW1vdW50IG92ZXIgeW91ciBjb3N0IGJhc2lzLiBJZiB0aGV5IGhhdmUgZ29uZSBkb3duIHlvdSB3aWxsIGJlIGFibGUgdG8gZGVkdWN0IHVwIHRvIDMwMDAgb2YgdGhlIGxvc3MuIEkgYW0gbm90IGEgdGF4IHByb2Zlc3Npb25hbCBhbHRob3VnaCBJIGRvIHdvcmsgaW4gYWNjb3VudGluZyBzbyBJIGFtIG5vdCBzdXJlIGhvdyBkaXNhYmlsaXR5IGlzIHRyZWF0ZWQsIGJ1dCBJIGRvIG5vdCBiZWxpZXZlIGl0IGlzIHRyZWF0ZWQgYXMgaW5jb21lLiBTbyBsaWtlbHkgeW91IHdpbGwgYmUgaW4gdGhlIGxvd2VyIGNhcGl0YWwgZ2FpbnMgYnJhY2tldCBpZiB5b3UgaGF2ZSBubyBvdGhlciBpbmNvbWUuCk1ha2VzIG1lIHNpdCBvbiBoaXMgY29wIGNhciwgZ2V0cyB0aGUgY2hpY2tzIG91dCBtYWtlcyBzdXJlIGV2ZXJ5b25lIGlzIGFuIGFkdWx0IChldmVyeW9uZSB3YXMpLCB0aGVuIGhlIHRyaWVzIHRvIHN0YXJ0IHRvIHNlYXJjaCBteSBjYXIgSSB0ZWxsIGhpbSBJIGRvbiBjb25zZW50IHRvIGFueSBzZWFyY2hlcywgaGUgYWxtb3N0IHNob290cyBtZSB3aXRoIGhpcyB0YXNlciBndW4uIEhpcyBwYXJ0bmVyIHN0ZXBzIGhpbSB0byB0aGUgc2lkZSBhbmQgdGhleSBsZXQgbWUgZ28gYWZ0ZXIgdGhlaXIgcG93IHdvdy4gQnV0IGFnYWluIGlmIGhlIGRpZG4gaGF2ZSBoaXMgcGFydG5lciB0aGVyZSByZWFsbHkgbm90aGluZyB3b3VsZCBoYXZlIHN0b3BwZWQgaGltIGZyb20gZ29pbmcgdGhyb3VnaCBhbGwgbXkgc3R1ZmYuLiAKVGhpbmdzIGhhdmUgYmVlbiBhYnNvbHV0ZWx5IGFtYXppbmcgdGhlIHBhc3QgdHdvIG1vbnRocywgYnV0IGkgZGlkIGhhdmUgYW4gZXBpc29kZSB0aGUgbmlnaHQgaSBwb3N0ZWQgdGhpcy4gCk5ld2x5IGNvbnN0cnVjdGVkIHJvb21zIHdpdGggSmFjdXp6aSB0dWJzIGFuZCBmaXJlcGxhY2VzIGVuY2lyY2xlIHRoZSByZWFyIGdhcmRlbi4gQWxsIHJvb21zIGhhdmUgcHJpdmF0ZSBzaG93ZXJzIGFuZCB0dWJzLiAKV2VsbCBob3BlZnVsbHkgdGhpcyBnaXZlcyBwZW9wbGUgYW4gaWRlYSBvZiB3aGF0IHRoZXkgaGVhZGluZyBpbnRvLCBoYXBweSB0byBhbnN3ZXIgb3RoZXIgVmVnYXMgc3BlY2lmaWMgcXVlc3Rpb25zIGlmIGFueW9uZSBoYXMgYW55LCBJIGhhcmRseSBzbGVwdCBhbmQgc21hc2hlZCB0aGUgc2hpdCBvdXQgb2YgdGhlIGNpdHkgZm9yIGEgd2VlayBzbyBmZWVsIEkgcGlja2VkIHVwIHF1aXRlIGEgYml0IGFib3V0IGhvdyBpdCB3b3JrcyBub3cuIE92ZXJhbGwgdGhlIGdhbWVzIGFyZSB2ZXJ5IGVhc3kgY29tcGFyZWQgdG8geW91ciBhdmVyYWdlIDEvMiBpbiBMb25kb24gZm9yIGV4YW1wbGUuIEJlc3Qgd2VlayBvZiBteSBsaWZlLCBmdWNrIGNvbWluZyBob21lIDooLiAKR28gdG8gY2VudHJhbCBwYXJrLiAKRnJlZSBNaW5uZWFwb2xpcyBTdApVbmZvcnR1bmF0ZWx5IG15IHR3byB5ZWFycyB3aXRoIFNhbXN1bmcgaGF2ZSBsZWZ0IG1lIHdpdGggYSBiYWQgdGFzdGUgYW5kIEkgZ29pbmcgYmFjayB0byBBcHBsZS4gT25lcGx1cyBoYXMgbWUgcGVha2luZyBpbiB0aGVpciBkaXJlY3Rpb24gdGhvdWdoIGJ1dCBteSBvbmx5IERyb2lkIGV4cGVyaWVuY2UgaXMgU2Ftc3VuZyBhbmQgSSB0aGluayBJIG5lZWQgdG8gdGFrZSBhIGJyZWFrIGZyb20gQW5kcm9pZCBmb3IgYSBiaXQuIE9ubHkgcmVhbGx5IGdyaXBlIEkgaGF2ZSB3aXRoIEFwcGxlIGlzIHRoZWlyIHN0aW5neSBhc3NlcyB3aXRoIHN0b3JhZ2UuIEFuZCBJIGhhdmUgdG8gZGl0Y2ggc29tZSBvZiBteSBnbyB0byBhcHBzLiBPaCB5ZWFoIHRoYXQgbm90Y2guIE9uZXBsdXMgSSBmZWVsIGxpa2UgSSBjYW4gc3RpbGwgZ2V0IGEgdG9wIHRpZXIgcGhvbmUgYXQgYSBkaXNjb3VudCwgc3RpbGwgaGF2ZSBkZWNlbnQgc3RvcmFnZSwga2VlcCBteSBhcHBzLiBJdCB3YXMgYSBncmVhdCBmaW5kIEkgbWFkZSBhdCBhIHVzZWQgYm9va3N0b3JlLCBhbmQgSSB3b3VsZCBoaWdobHkgcmVjb21tZW5kIGl0IHRvIGFueSBoaXN0b3J5IGJ1ZmYsIGFuZCBhbnkgcGVyc29uIHdobyBpcyBjdXJpb3VzIGFib3V0IHdoYXQgZXZlcnlkYXkgbGlmZSB3YXMgdGhvdXNhbmRzIG9mIHllYXJzIGFnbywgYW5kIGhvdyBtdWNoIHdlIGhhdmUgaW4gY29tbW9uIHdpdGggcGVvcGxlIGZyb20gYSBkaWZmZXJlbnQgZXJhLltNXSAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIEZpcnN0TmV0IHJ1bGVzIGRvIGFsbG93IEJhbmQgMTQgdG8gYmUgcHJpb3JpdGl6ZWQgZGlmZmVyZW50bHkgdGhhbiBvdGhlciBMVEUgYmFuZHMuIEJ1dCBjdXJyZW50bHksIG15IHVuZGVyc3RhbmRpbmcgaXMgdGhhdCBpcyBub3QgaW4gdXNlLgpJdCBub3QgdW50aWwgSSB3ZW50IGFicm9hZCB0aGF0IEkgc3RhcnRlZCBiZWNvbWluZyBtb3JlIGRhcmluZy4gSSB3YXNuIHN1cmUgd2hlbiB0aGUgbmV4dCBtZWFsIHdhcyBjb21pbmcsIHNvIEkganVzdCBoYWQgdG8gZWF0IHdoYXRldmVyIHdhcyBhdmFpbGFibGUuClRoZXJlIGEgbG90IG9mIGFkdmljZSBmbG9hdGluZyBhcm91bmQgb3V0IHRoZXJlIGFib3V0IGhvdyB0byBtYW5hZ2UgeW91ciBjcmVkaXQgY2FyZHMgYW5kIG90aGVyIGRlYnRzIHRvIG1heGltaXplIHlvdXIgY3JlZGl0IHNjb3JlLiAKSSByZW1lbWJlciBldmVyeXRoaW5nIGFib3V0IGl0LCBldmVyeSBtaWxsaXNlY29uZC4gClRoaXMgc2VlbXMgYSBsaXR0bGUgd2VpcmQsIGJ1dCB3aGF0ZXZlci4gSSdtIHRvbGQgdGhhdCB0aGUgQmV0dHkgRnJpZWRhbiBvcmdhc20gcXVvdGUgd2lsbCBwcm9iYWJseSB3b3JrIGluIHRoZSAiRG8gUmlnaHQgV29tYW4iIHNvbmcgKEkgdGhpbmsgSSBoZWFyZCB0aGlzIGR1cmluZyB0aGUgYXVkaXRpb25zIGJ1dCBJIGRvbid0IHJlY2FsbCBpdCBub3cpLCBidXQgSSBkb24ndCBrbm93IGlmIG15IG90aGVyIG9uZSBpcyBnb2luZyB0byBmaXQgaW50byBhbnlvbmUncyBwaWVjZSBhbmQgdGhhdCBtaWdodCBiZSBhbiBpc3N1ZS4gV2Ugc2hhbGwgZmlndXJlIHRoYXQgb3V0IHRvbW9ycm93LkF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5pZ2h0IFNhbSB3YXMgdGFsa2luZyBhYm91dCBnb2luZyBsYXRlIHNvIHRoYXQgd2UgY291bGQgYWxsIGhhdmUgRnJpZGF5IG9mZiBhbmQgdGhlbiBvbmUgb2YgdGhlIGRhbmNlIHBlb3BsZSBzYWlkIHNoZSB3YW50ZWQgdG8gaGF2ZSByZWhlYXJzYWwgd2l0aCBldmVyeW9uZSB0b21vcnJvdywgc28gd2UgaGF2ZSByZWhlYXJzYWwgYW55d2F5LiAKSGVhbHRoIGFuZCBIdW1hbiBQZXJmb3JtYW5jZVVIIEhvbWVDb2xsZWdlIG9mIExpYmVyYWwgQXJ0cyBhbmQgU29jaWFsIFNjaWVuY2VzRGVwYXJ0bWVudCBvZiBIZWFsdGggYW5kIEh1bWFuIFBlcmZvcm1hbmNlTmV3cyBhbmQgRXZlbnRzTmV3cyBBcmNoaXZlczIwMThKdW55b3VuZyBIb25nIFdpbnMgQUNTTSBGb3VuZGF0aW9uIERvY3RvcmFsIFN0dWRlbnQgUmVzZWFyY2ggR3JhbnRUaGUgVW5pdmVyc2l0eSBvZiBIb3VzdG9uIDM4NzUgSG9sbWFuIFN0LiBSbSAxMDQgR2Fycmlzb24gSG91c3RvbiwgVFggNzcyMDQgNjAxNSBQaG9uZTogKDcxMyk3NDMgOTg0MCBGYXg6ICg3MTMpNzQzIDk4NjBISFAgUXVpY2sgTGlua3MKTm90IG5lY2Vzc2FyaWx5LiBTb21ldGltZXMgaXQgaXMgcG9zc2libGUsIHNvbWV0aW1lcyBub3QuIApDdWtpbW9uc3RlciAgMjkzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpNYWkgc3RhdHRmaW5kZW4gdW5kIHVtIDE4LjMwIFVociBDaGljYWdvZXIgWmVpdCBiZWdpbm5lbi4gCkZlcnJlciwgNTUsIHdhcyBhcnJlc3RlZCBhZnRlciBhcnJpdmluZyBpbiBIb3VzdG9uIG9uIGEgZmxpZ2h0IGZyb20gQW1zdGVyZGFtLiBGZXJyZXIgd2FzIGV4cGVjdGVkIHRvIGJlIGZsb3duIHRvIENhbGlmb3JuaWEgbGF0ZXIgRnJpZGF5LgpUaGVuIHRoZXJlJ3MgdGhlIHBvc3NpYmlsaXR5IG9mIGNhc2hpbmcgaW4gb24gYSB0ZWxsIGFsbC4gUHVibGlzaGVyIFNpbW9uIFNjaHVzdGVyIHBhaWQgSGlsbGFyeSBDbGludG9uICQxNCBtaWxsaW9uIGZvciBoZXIgMjAxNCBtZW1vaXIgIkhhcmQgQ2hvaWNlcy4iCkkgZ2V0IHRoYXQgeW91IHdhbnQgdG8gdHJ5IHRvIGJsdWZmIG90aGVyIDhzIG9mZiB0aGUgaGFuZCwgYnV0IHlvdSB3cm9uZyBpbiB0aGlua2luZyB0aGF0IGZsdXNoIGRyYXdzIHdvdWxkbiBoYXZlIGdvdHRlbiB0aGlzIGZhciwgc28geW91ciBzaG92ZSBoZXJlIGlzIGtpbmQgb2Ygc3VpY2lkYWwuVGhlIHBvdCBvbiB0aGUgZmxvcCBpcyA2MDAwIGFuZCB2aWxsYWluIHN0aWxsIGhhcyBhbG1vc3QgMTAwayBiZWhpbmQuIFlvdSBiZXQgcG90IGFuZCB2aWxsYWluIGNvdWxkIGNhbGwgd2l0aCBhIGZsdXNoIGRyYXcsIHdoaWNoIGlzIGluIGZhY3QgZmFyIG1vcmUgbGlrZWx5IHRoYXQgOHggc2luY2UgOHggaXMganVzdCBhIGd1dHNob3QgYW5kIHRoZXJlIGFyZW4gdGhhdCBtYW55IGNvbWJvcyBvZiA4eCB0aGF0IG1ha2Ugc2Vuc2UuIApPaCwgYW5kIGFzIGZvciB5b3VyIGRpZXQsIHNhZmZsb3dlciBvaWwgY2FuIGJlbmVmaXQgeW91ciBza2luIHRoZXJlIHRvbywgc28ga2VlcCBjaGVja2luZyBvdXQgdGhvc2UgaW5ncmVkaWVudHMuIEEgMjAwNyBzdHVkeSBzaG93ZWQgdGhhdCBkaWV0cyBoaWdoIGluIGxpbm9sZWljIGFjaWQgYW5kIHZpdGFtaW4gQyBpbXByb3ZlZCB0aGUgYXBwZWFyYW5jZSBvZiBmaW5lIGxpbmVzIGFuZCB3cmlua2xlcyBpbiB0aGUgc2tpbiBvZiBtaWRkbGUgYWdlZCBhbmQgb2xkZXIgd29tZW4gW3NvdXJjZTogTGVvbmddLiAKSSBoYWQgYWxzbyBwdXJjaGFzZWQgc29tZSBzdHlsaXNoIFBhdWxzb24gcG9rZXIgY2hpcHMgd2l0aCBkZW5vbWluYXRpb25zIHRvIG1ha2UgaXQgZmVlbCBhcyByZWFsIGFzIHBvc3NpYmxlLCB3aGljaCB3ZW50IG92ZXIgcmVhbCB3ZWxsIHdpdGggb3VyIGd1ZXN0cy4gQnkgdGhlIGVuZCBvZiB0aGUgbmlnaHQgd2UgaGFkIHBsYXllZCBmaXZlIGRpZmZlcmVudCAid2lubmVyIHRha2UgYWxsIiB0b3VybmFtZW50cyBhbmQgSm9yZGFuIHdhcyB1c3VhbGx5IHRoZSBmaXJzdCBvciBzZWNvbmQgcGVyc29uIG91dC4gCldpdGggdGhlIGRldmVsb3BtZW50IG9mIG1hbnkgb25saW5lIHBva2VyIHJvb21zIHBva2VyIGVhc3kgbG92ZXJzIGNhbiBwbGF5IHBva2VyIGZyb20gdGhlIGNvbWZvcnQgb2YgeW91ciBvd24gaG9tZS4gWW91IGNhbiBjaG9vc2UgZnJvbSB0aG91c2FuZHMgb2Ygb25saW5lIHBva2VyIHNpdGVzLCBzb21lIG9mIHdoaWNoIGFyZSBUZXhhcyBIb2xkJ2VtLCBPbWFoYSwgT21haGEgSGlnaC9Mb3csIFNldmVuIENhcmQgU3R1ZCwgRml2ZSBDYXJkIERyYXcsIDIgNyBUcmlwbGUgRHJhdywgMiA3IFNpbmdsZSBEcmF3LCBTZXZlbiBDYXJkIFN0dWQgSGlnaC9Mb3csIFJhenosIEJhZHVnaSwgaG9yc2UsIDggR2FtZSBNaXgsIEhvbGQnZW0vT21haGEgUG9rZXIgdG91cm5hbWVudHMuIFNvbWUgb2YgdGhlc2UgcmVwdXRhYmxlIG9ubGluZSBwb2tlciBzaXRlcyBvZmZlciB5b3UgYSB3aWRlIHZhcmlldHkgb2YgbXVsdGkgdGFibGUgdG91cm5hbWVudHMgd2l0aCBkaWZmZXJlbnQgZ2FtZXMgb2YgcG9rZXIsIGFzIHdlbGwgYXMgTGltaXQsIFBvdCBMaW1pdCBhbmQgTm8gTGltaXQgZ2FtZXMgYXQgcG9rZXIgdGFibGVzLiBZb3UgY2FuIGVhc2lseSBwYXNzIHRocm91Z2ggdGhlIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyBvZiB0aGUgZ2FtZSB0byBlbmpveSBhIGhhc3NsZSBmcmVlIGV4cGVyaWVuY2UuClNob3VsZCBJIGN1dCBvZmYgdGhpcyBmcmllbmQ/IEkgaGF2ZSB0aGlzIGZyaWVuZCBvZiBtaW5lIHRoYXQgY2FuIGJlIHJlYWxseSBzZWxmaXNoIGF0IHRpbWVzLiBJdCBub3JtYWxseSBoYXBwZW5zIHdoZW4gaGVzIGRydW5rLiBIZSBjYW4gZHJpbmsgb24gd2Vla2VuZHMgYW5kIGhlIGRyaW5rcyBhbGwgd2Vla2VuZCBsb25nLiAKQW55Ym9keSBpbnRlcmVzdGVkIGluIGxvb2tpbmcgaW50byB0aGlzIHNob3VsZCBjaGVjayBvdXQgTW9sbHkgR2FtZSwgYSBub3ZlbC9tb3ZpZSBhYm91dCBhIHdvbWFuIHdobyByYW4gYSBoaWdoIHN0YWtlcyB1bmRlcmdyb3VuZCBwb2tlciBvcGVyYXRpb24gd2l0aCBzb21lIG9mIEhvbGx5d29vZCBiaWdnZXN0IHN0YXJzLiBJbiB0aGUgbm92ZWwsIHNoZSBzcGVjaWZpY2FsbHkgdGFyZ2V0cyBUb2JleSBNYWd1aXJlIGFzIGhlciBtb3N0IHRyb3VibGluZyByZWd1bGFyIGFuZCBoYXMgYSBsb3Qgb2YgYW5lY2RvdGVzIGFib3V0IGhpbSBqdXN0IGJlaW5nIGFuIGFzc2hvbGUuCkl0IGlzIG5vdCBpc29sYXRlZCwgaXQgaGFwcGVucyBhbGwgb3ZlciB0aGUgd29ybGQgLCBldmVuIGluIGhvbGxhbmQgaWYgeW91IHJlbWVtYmVyIC4gSSBkb24gbWVhbiB0byBzYXkgaXRzIG5vdCBiYWQgb3Igc29tZXRoaW5nIGJ1dCBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHdhciAuIElmIHNvbWVvbmUgZ2V0cyBpdCBpbiB0aGVyZSBoZWFkIHRoYXQgdGhleSB3YW50IHRvIGtpbGwgaW5ub2NlbnQgcGVvcGxlIHdhciBvciBubyB3YXIgdGhleSB3aWxsIGRvIGl0IC4gCkRpZXRhcnkgaW50YWtlIG9mIE9tZWdhIDMgYW5kIE9tZWdhIDYgZmF0dHkgYWNpZHMgYW5kIHRoZSByaXNrIG9mIHByb3N0YXRlIENhbmNlcgpQZXIgdGhlIGNoZWYncyByZWNvbW1lbmRhdGlvbiwgaXQgZGlkIHBhaXIgbmljZWx5IHdpdGggYSBsb2NhbGx5IGNyYWZ0ZWQgcmVkIGNoaWxlIGhvdCBzYXVjZS4uIApDJ2VzdCBxdW9pIGwnYW1vdXIgPyBEdSBzcGVybWUgb3UgZGVzIGxhcm1lcyA/IExlcyBkZXV4LCBiaWVuIHNyLCBkaXQgY2UgZmlsbS4KVGhlIDE4dGggY2VudHVyeSBCcml0aXNoIHN0YXRlc21hbiBFZG11bmQgQnVya2UgWzE3MjkgMTc5N10gd3JvdGV0aGF0ICJnYW1pbmcgaXMgYSBwcmluY2lwbGUgaW5oZXJlbnQgaW4gaHVtYW4gbmF0dXJlIiB5ZXQgdGhlcmUgYXJldGhvc2Ugd2hvIG1pZ2h0IHN0YXRlIHRoYXQgdGhlIHdvcmxkIGNhbiBiZSBkaXZpZGVkIGludG8gdHdvIHR5cGVzIG9mcGVvcGxlOiB0aG9zZSB3aG8gZ2FtYmxlIGFuZCB0aG9zZSB3aG8gZG8gbm90LiAKU2lyIEdyYWhhbSBkZXNjcmliZWQgaG93LCBhZnRlciB3ZWVrcyBvZiBzcGVjdWxhdGlvbiB0aGF0IGEgdm90ZSB3YXMgYWJvdXQgdG8gYmUgdHJpZ2dlcmVkLCB0aGUgZHJhbWEgdW5mb2xkZWQgd2hlbiBoZSBidW1wZWQgaW50byBhIENvbnNlcnZhdGl2ZSBNUCBpbiBvbmUgb2YgdGhlIGNvcnJpZG9ycyBvZiB0aGUgUGFsYWNlIG9mIFdlc3RtaW5zdGVyLgpEZWFsaW5nIG9uIGEgYmxhY2tqYWNrIDM2IHggNzIgaW5jaCB0YWJsZSBpcyBlYXNpZXIgYXMgeW91IGNhbiBzdGFwbGUgdGhlIGxheW91dCB0byBhIGZvbGRpbmcgdGFibGUgYW5kIHlvdSBjYW4gcmVtb3ZlIHRoYXQgYW55dGltZSB5b3UgbGlrZS4gCk15IG1haW4gY29uY2VybiwgYXBhcnQgZnJvbSBhY2NsaW1hdGlzaW5nLCB3b3VsZCBiZSBnZXR0aW5nIGFueSBkZWNlbnQgbG9uZyByaWRlcyBpbiBpZiBpdCB3YXMgbGlrZSBsYXN0IHdpbnRlcjsgaGVyZSBhbnl3YXkuIFBsdXMgd2V0c3VpdCBzd2ltbWluZyBpbiBteSAyNW0gbG9jYWwgaW5kb29yIHBvb2wgdG8gcHJlcGFyZSBkb2Vzbid0IGFwcGVhbC4gQXQgbGVhc3QgcnVubmluZyBpbiB0aGUgZ3ltIHdvdWxkIGJlIGdvb2QsIGFzIGV2ZW4gaW4gd2ludGVyIGl0J3MgbGlrZSB0aGUgQmVsZ2lhbiBDb25nbyBpbiB0aGVyZQpCdXQgdW5saWtlIFRGU0FzLCBSUlNQcyBzdGlsbCBwcm92aWRlIHRoYXQgdGF4IGRlZHVjdGlvbiwgb25lIG9mdGVuIGFjY29tcGFuaWVkIGJ5IGEganVpY3kgdGF4IHJlZnVuZCBpbiB0aGUgc3ByaW5nLiAKMXJleGFzMSB1CkFyZSA2IERlY2sgQXV0b21hdGljIENhcmQgU2h1ZmZsZXJzIFdvcnRoIHRoZSBQcmljZQpIaXMgZmFjZSB3YXMgY292ZXJlZCB3aXRoIGEgYmFuZGFuYS4gVGhlIHRoaXJkIHN1c3BlY3QgaXMgZGVzY3JpYmVkIGFzIGEgdGhpbiBtYWxlIHdobyBzcG9rZSB3aXRoIGEgQ2FyaWJiZWFuIGFjY2VudC4gVGhlIGZpcnN0IHR3byBzdXNwZWN0cyB3ZXJlIHdlYXJpbmcgZGFyayBjbG90aGluZy4uIApEaXNjb3ZlcmVkIGEgcHJlZmVyZW5jZSBJIGRpZG4ga25vdyBJIGhhZCBlaXRoZXIuLiAKTW9zdCBpbXBvcnRhbnRseSwgdGhlIG5pbmUgb2YgdXMgdGhhdCBwbGF5IHBpdGNoZWQgaW4gJDEuNzUgYSBwaWVjZSBhbmQgaXQgd2FzIHBhaWQgZm9yIHdpdGggYSBsaXR0bGUgbGVmdCB0byBzcGFyZS4gClNvIHRoZSBwbGFuIGlzIHRvIGNoYW5nZSBoaXMgZGlldCBhIGJpdCwgd2Ugd2lsbCBnZXQgYSBmZXcgZGlmZmVyZW50IHRoaW5ncyBpbiB0aGlzIGVhcmx5IGJyZWFrZmFzdCBhbmQgZHVyaW5nIHRoaXMgc25hY2tpbmcgdGltZSBoZSB3aWxsIGVhdCBhIGZldyBtb3JlIGNhbG9yaWVzLiIuIApDb3VsZCBpdCBub3QgaGF2ZSBiZWVuIHlvdT8gZG9uIGtub3cgbW9tLiAKUGx1cywgaXQgc2VlbXMgdG8gYmUgdGhlIGRyaW5rIG9mIGNob2ljZSBmb3IgcGVvcGxlIHdobyBhcmUgd2lsbGluZyB0byB0cnkgYW5kIGluIG1hbnkgY2FzZXMgYXJlIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBkaWZmZXJlbnQsIEppbSBUcmVsaXZpbmcgc2FpZC4gClBoYXJtYWtvbmcgdQpIYW5zZW4gZ3JhZHVhdGVkIGZyb20gTWljaGlnYW4gU3RhdGUgVW5pdmVyc2l0eSB3aXRoIGEgQmFjaGVsb3IncyBkZWdyZWUgZnJvbSB0aGUgQ29sbGVnZSBvZiBDb21tdW5pY2F0aW9uIEFydHMgYW5kIFNjaWVuY2VzLiBIZSByZXNpZGVzIGluIENvbm5lY3RpY3V0IHdpdGggaGlzIHdpZmUsIE1hcnkgSm9hbiwgYW5kIHRoZWlyIHR3byBzb25zLgpJbiB0aGUgbGFzdCAyNCBob3VycyBJIGNvbWUgYWNyb3NzIHR3byBhbnRpcXVhcmlhbiBvdXRsb29rcyBvbiB0aGUgbG9uZ2V2aXR5IG9mIHRoZSB3b3JsZCBjb2FsIHN1cHBseSBhZnRlciBub3QgaGF2aW5nIHNlZW4gaGFyZGx5IGFueXRoaW5nIG9mIHRoZSBzb3J0IHdyaXR0ZW4gaW4gdGhlIDE5dGggY2VudHVyeS4gKFRoZSAyMHRoIGNlbnR1cnksIGV2ZW4gaW4gaXRzIGZpcnN0IGRlY2FkZSBvciB0d28sIGlzIGFub3RoZXIgc3RvcnkuKSBUaGUgZmlyc3Qgd2FzIGFuIGFydGljbGUgYnkgdGhlIGVuZ2luZWVyIEpvaG4gRXJpY3Nzb24sIHdobyB3cm90ZSBvbiB0aGUgdGVtcGVyYXR1cmUgb2YgdGhlIGhlbGlvc3BoZXJlIG9mIHRoZSBTdW4gaW4gTmF0dXJlIGZvciAxODcxIChhbmQgY2FtZSBxdWl0ZSBjbG9zZSkgd2hpY2ggbGVkIHRvIGFuIGVhcmxpZXIgcGFwZXIgZnJvbSAxODY4IGluIHdoaWNoIGhlIGh5cG90aGVzaXplZCBhIHNob3J0IGxpZmVzcGFuIG9mIGNvYWwgYW5kIGFkdm9jYXRlZCBmb3IgZm9ybXMgb2YgInNvbGFyIGVuZXJneSIuIFVuZm9ydHVuYXRlbHkgaGlzIHRlcm1zIGFyZW4gdmVyeSB3ZWxsIGRlZmluZWQgd2FzIGhlIGFkZHJlc3NpbmcgdGhlIGNvYWwgcHJvZHVjdGlvbiBvZiBQcnVzc2lhIG9yIEV1cm9wZSBvciB0aGUgd29ybGQgd2hlbiBkaXNjdXNzaW5nICJ0aGUgcXVhbnRpdHkgb2YgY29hbCBkdWcgaW4gMTg1NyI/IFdoZW4gc3RhdGluZyAidGhlIGxhbmRzIGZyb20gd2hpY2ggdGhlIGNvYWwgaXMgcHJvY3VyZWQiIG1heSBiZSA4LDAwMCBzcXVhcmUgbWlsZXMsIGRpZCB0aGF0IG1lYW4gYW4gOCwwMDAgc3F1YXJlIG1pbGUgc3dhdGggb2YgR2VybWFueSwgb3IgOCwwMDAgc3F1YXJlIG1pbGVzIG9mIG1pbmVkIGNvYWwgaW4gRXVyb3BlLCBvciBldGMuPyBOZXcgSGFtcHNoaXJlIGlzIGFib3V0IDgsMDAwIHNxdWFyZSBtaWxlcywgYW5kIHRoZSBlbnRpcmUgUHJ1c3NpYW4gTW9uYXJjaHkgd2FzIGFib3V0IDExMCwwMDAgc3F1YXJlIG1pbGVzLCBzbyBtYXliZSB0aGF0IG1lYW50IHBhY2tldHMgb2YgbWluaW5nIHN1cmZhY2VzIGhlcmUgYW5kIHRoZXJlPyBkb24ga25vdy4gCkNocmlzIHdhcyBzbyBwbGVhc2VkIHdpdGggdGhlIGNhcmUgdGhhdCBoaXMgZ3JhbmRmYXRoZXIgcmVjZWl2ZWQgdGhhdCBoZSB3YW50ZWQgdG8gZ2l2ZSBzb21ldGhpbmcgYmFjayB0byB0aGUgb3JnYW5pemF0aW9uLiAKVGhlIGFsaWVuIHRhcHBlZCBhIGJ1dHRvbiBvbiBoaXMgZ2xvdmUgYmVmb3JlIHNwZWFraW5nLCAiSSBhY2NlcHQgeW91ciB3ZWxjb21lLiBJIGFtIE5uenV0aSBEcnJ0aWZ5LCBMZWFkZXIgb2YgdGhlIEtkZGlmdG9tYS4gVHJhbnNsYXRlZCwgaXQgd291bGQgYXBwZWFyIHlvdXIgdGl0bGUgZm9yIG1lIHdvdWxkIGJlIExlYWRlciBvZiB0aGUgS3JpbnNldGhpLiAKTGEgY29uc2NyYXRpb24gZCd1biBtYXJpYWdlIGVudHJlIHBlcnNvbm5lcyBkZSBtbWUgc2V4ZSwgZW4gRnJhbmNlLCByZXN0ZSBzdXNwZW5kdWUgIHVuZSByZm9ybWUgbGdpc2xhdGl2ZSBvcHJlIHBhciBsZSBQYXJsZW1lbnQuIENldHRlIHNvbHV0aW9uIHNlbWJsZSBsYSBwbHVzIHJhcGlkZSBkYW5zIGxlIHRlbXBzLiBDZXR0ZSBxdWVzdGlvbiBmZXJhIGNlcnRhaW5lbWVudCBzb24gYXBwYXJpdGlvbiBkYW5zIGxlcyBmdXR1cnMgZGJhdHMgcG9saXRpcXVlcyBwcnBhcmFudCBhdXggcHJvY2hhaW5lcyBsZWN0aW9ucyBwcnNpZGVudGllbGxlcy4gRGFucyBsZSBjYXMgY29udHJhaXJlLCBpbCBmYXVkcmEgYXR0ZW5kcmUgcXVlIGxhIENvdXIgRXVyb3Blbm5lIGNvbnNpZHJlIHF1J3VuIGNvbnNlbnN1cyBleGlzdGUgYXUgbml2ZWF1IGV1cm9wZW4gcG91ciBsJ2FtZW5lciAgbW9kaWZpZXIgc2EganVyaXNwcnVkZW5jZS4KRmV3IHBlb3BsZSBoZXJlIGFyZSBzYXlpbmcgdGhhdCBoZWlnaHQgaXMgdGhlIG9ubHkgdGhpbmcgdGhhdCBtYXR0ZXJzIGluIGRhdGluZywgYXBwbHlpbmcgZm9yIGpvYnMsIGV0Y2V0ZXJhLiBWYWx1ZXMgYW5kIG9waW5pb25zIGFyZSBpbmRlZWQgcHJldHR5IGltcG9ydGFudCAgIGNlcnRhaW5seSB0b2RheS4gCkhlIGFsc28gc2FpZCBoZSBkaWRuJ3Qga25vdyB3aGVyZSB0aGUgcGVyc29uIGhhZCBrZXB0IHRoZSB2aWRlbyBvciB3aHkgdGhleSBoYWRuJ3QgcHJvdmlkZWQgaXQgdG8gbGF3IGVuZm9yY2VtZW50IHByZXZpb3VzbHkuLiAKVGhlcmUgaXMgYSByZWFzb24gd2h5IHN1Y2Nlc3NmdWwgYnVzaW5lc3MgcGVvcGxlIG5ldmVyIHJldmVhbCBhbGwgdGhlaXIgdGFjdGljYWwgYW5kIHN0cmF0ZWdpYyBwbGFucyB0byB0aGUgbWFzcyBtYXJrZXQuIFlvdSBtYXkgZ2V0IGJlYXRlbiB0byB0aGUgcHVuY2guIFByb3ByaWV0YXJ5IHRlY2hub2xvZ3ksIGluIGhvdXNlIGRldmVsb3BtZW50LCBtYXJrZXRpbmcgY2FtcGFpZ25zIGFuZCBuZXcgcHJvZHVjdCBkZXZlbG9wbWVudHMgYXJlIHByb3RlY3RlZCBieSBzdHJpY3QgcHJpdmFjeSwgc2VjdXJpdHksIGFuZCBzZWNyZWN5IHJ1bGVzLiAKQ29jYWluZWFuZG1vaml0b3M3MTAgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTQgaG91cnMgYWdvCkkgcHJldHR5IHN1cmUgaXQgaXMuIApJdCBhIHN1Y2t5IGJhZ2dhZ2UsIGJ1dCBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBpcyBleHRyZW1lbHkgaW1wb3J0YW50IGluIHRoZSBmcm9udCBlbmQgZmllbGQuCkZ1Y2sgb2ZmIGhlIG1hZGUgJDEybS4gVGhlIGd1YXJlbnRlZWQgcHVyc2Ugd2FzICQ0bSBhbmQgaXQgbmVlZGVkIDMwMGsgYnV5cyB0byBicmVhayBldmVuLiBTbyBoZSB3aWxsIGhhdmUgbWFkZSAkNCA1bS4gUHJvYmFibHkgdG9vayBob21lICQyIDNtIGFmdGVyIGhlIHBheXMgaGlzIDMgbWFuYWdlcnMgYW5kIHRyYWluZXIgYW5kIHByb21vdGVycy4KTGV0IHNheSB0aGVyZSAxMCBzdG9wcyBvbiB0aGUgcm91dGUuIApIZSB3YXMgc3Vic2VxdWVudGx5IHRha2VuIHRvIGEgaG9zcGl0YWwgaW4gVG9reW8gYW5kIHVuZGVyd2VudCBhbiBlbWVyZ2VuY3kgb3BlcmF0aW9uLi4gCkhhdmluZyBib29rZWQgYSBmbGlnaHQgZm9yIGxhc3QgU3VuZGF5IHdlZWssIGhpcyBwcm9ncmVzcyBpbiB0aGUgUGFkZHkgUG93ZXIgSXJpc2ggUG9rZXIgT3BlbiBrZXB0IGhpbSBpbiB0aGUgQnVybGluZ3RvbiBIb3RlbCBpbiBEdWJsaW4uIEJ5IHRoZSB0aW1lIGhlIGNhdWdodCBhIGZsaWdodCBvbiBUdWVzZGF5LCBoZSBoYWQgZmluaXNoZWQgZm91cnRoIGluIHRoZSBwcmVzdGlnaW91cyBldmVudCBhbmQgaGFkIHNwZW5kaW5nIG1vbmV5IS4gCkFscyB3aXIgaW4gdW5zZXJlciBTZW5pb3IgU3VpdGUgYW5rb21tZW4gZW50c3Bhbm50IHNpY2ggYXVjaCBkZXIgR2VzaWNodHNhdXNkcnVjayBtZWluZXMgUGFydG5lcnMgbWVya2xpY2guIE1pciBmIGVpbiBTdGVpbiB2b20gSGVyemVuLiBEZXIgVXJsYXViIGlzdCBnZXJldHRldC4gCkJldHRlciByZWFjaCBvdXQgdG8gbm9uIGJlcm5pZSB2b3RlcnMgdGhhbiB5b3V0dWJlLiBZb3V0dWJlIHdpbGwgbW9zdCBsaWtlbHkgb25seSByZWNvbW1lbmQgQmVybmllIHN0cmVhbXMgYWZ0ZXIgeW91IGFscmVhZHkgd2F0Y2hlZCBzb2NpYWxpc3QgaXNoIHBvbGl0aWNhbCB2aWRlb3MuIE9uIHRoZSBvdGhlciBoYW5kLCBkdWUgdG8gVHdpdGNoIHVzaW5nIGNhdGVnb3JpZXMgc29ydGVkIGJ5IG51bWJlciBvZiB2aWV3ZXJzLCBhIEJlcm5pZSBzdHJlYW0gd2lsbCBxdWlja2x5IGNsaW1iIHRvd2FyZHMgdGhlIHRvcCB3aGVyZSBwZW9wbGUgd2hvIGRvZXNuIGhhdmUga25vd2xlZGdlIG9mIGl0IHdpbGwgc2VlIGl0Li4gCk1pc3NsdWx1aCAgMiwwNDAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KUGF0aWVudHMgYmVnYW4gd2l0aCByZXNpc3RhbmNlIGxldmVscyB0aGV5IGNvdWxkIGRvIGVhc2lseSwgYW5kIHdlaWdodCB3YXMgaW5jcmVhc2VkIGdyYWR1YWxseSBhY2NvcmRpbmcgdG8gcGF0aWVudCdzIHRvbGVyYW5jZS4uIAoiT3VyIFBlcnNvbmFsIENvbmR1Y3QgUG9saWN5IGFwcGxpZXMgZXF1YWxseSB0byBldmVyeW9uZSBpbiB0aGUgTkZMLCIgdGhlIGxlYWd1ZSBzYWlkIGluIGEgd3JpdHRlbiBzdGF0ZW1lbnQuCldoeSB3b3VsZCB3ZSBjb250aW51ZSB3aXRoIFEyIGFuZCBLMiBhbmQgZm9sZCBvdXQgdGhlIHJlc3Qgd2hlbiBpbiByZWFsaXR5IFEyIGlzIHRoZSBzYW1lIGhhbmQgYXMgMjQgaWYgaGlzIG9ubHkgdmFsdWUgaGFuZHMgYXJlIEEyIGFuZCBwb2NrZXQgdGVucz8gQWxzbywgYWZ0ZXIgRWFzdGdhdGUgZm9sZHMsIEdyZWVuc3RlaW4gc2hvdWxkIGtub3cgRWFzdGdhdGUgZm9sZGVkIGEgZGV1Y2UgYW5kIGhlIGhhcyBBQSBzbyBoZSBibG9ja3MgQTIgc3VpdGVkLiBOb3csIHRoZXJlIGlzIHN0aWxsIG9ubHkgMSBjb21ibyBvZiBBMiBzdWl0ZWQgYW5kIDMgY29tYm9zIG9mIFRULiBJc24gQUEgdGhlIHNhbWUgYXMgSzIgZ2l2ZW4geW91ciBhbmFseXNpcz8gSWYgd2UgYXJlIEdyZWVuc3RlaW4gYW5kIHRoZSBib2FyZCBpcyBkaWZmZXJlbnQgd2hlcmUgd2UgYmxvY2sgYWxsIG9mIHRoZSBBMiBzdWl0ZWQgaGFuZHMsIHdvdWxkIHdlIHRoZW4gY2FsbD8KJ1RoZSBTb3V0aGVybiBWZWN0aXMgQnVzIFNvbmcnIGJ5IExhdXJpIFNheVNpbmNlIDIwMTQsIHRoZSBhbm51YWwgSXNsZSBvZiBXaWdodCBCZWVyIGFuZCBCdXNlcyBXZWVrZW5kIGhhcyBiZWVuIGhlbGQgZXZlcnkgT2N0b2Jlci4gCkZyb20gd2hhdCBJIGxlYXJuZWQgaW4gbXkgUGh5c2ljYWwgR2VvZ3JhcGh5IGNsYXNzIChhbmQgZnJvbSB3YXRjaGluZyBhIGxvdCBvZiBCaWxsIE55ZSBhcyBhIGtpZCksIHRoZSBXaW50ZXIgU29sc3RpY2UgaXMgdGhlIGRheSBpbiB3aGljaCB0aGUgTm9ydGhlcm4gSGVtaXNwaGVyZSBleHBlcmllbmNlcyBpdHMgc2hvcnRlc3QgZGF5IG9mIHRoZSB5ZWFyLiBUaGUgc3VuIGRvZXNuJ3QgY2xpbWIgb3ZlciAyMyBkZWdyZWVzIGFib3ZlIHRoZSBob3Jpem9uIGF0IG5vb24gYnV0IHRoaXMgYWxzbyBtZWFucyB0aGF0IHRoZXJlJ3MgYSBiaWdnZXIgY2hhbmNlIG9mIGRyYW1hdGljIGFuZCBicmlnaHQgY29sb3JzIGR1cmluZyB0aGUgc3Vuc2V0LiAKQWx0ZXJuYXRpdmUgU2FudCBjJ2VzdCBkaWZmcmVudCBlbiBjZSBzZW5zIHF1ZSBjZWxhIGNvbnNpc3RlICBwcm5lciBkZXMgc29sdXRpb25zIG5hdHVyZWxsZXMgZW4gbGVzIGFkb3NzYW50ICB1bmUgYm91dGlxdWUgZGUgdmVudGUgZGUgY29tcGxtZW50cyBkb250IGxhIHBhcnRpY3VsYXJpdCBlc3QgZCd0cmUgc291cyBkb3NzIHBhciByYXBwb3J0IGF1eCBvZmZyZXMgYW1yaWNhaW5lcyBkJ28gdW4gY290ICBtdWx0aXBsaWVyIHBhciB1biBmYWN0ZXVyIGRlIFggMyAgWCA2IHBvdXIgdGFibGlyIHVuIHJhcHBvcnQgdnJhaW1lbnQgb2JqZWN0aWYuIApNYWlzIGxvcnMgZGUgcnVuaW9ucyBhdmVjIGxlcyBkaWZmcmVudHMgY29tbWlzc2FpcmVzIHF1aSBzZSBzb250IHN1Y2NkIGRhbnMgbGUgMThtZSBhcnJvbmRpc3NlbWVudCwgb24gbm91cyBhIHNvdXZlbnQgZXhwbGlxdSBxdWUgbGUgcmxlIGRlIGNlcyBmb3JjZXMgZGUgcG9saWNlIG4ndGFpZW50IHBhcyBkZSBzZSB0cmFuc2Zvcm1lciBlbiBwb2xpY2UgZGUgcHJveGltaXQgLiBMZXVyIHByc2VuY2UgZXN0ICggb3UgZG9pdCB0cmUpIGRhdmFudGFnZSBkaXNzdWFzaXZlIGV0IHBlcm1ldHRyZSBkZXMgaW50ZXJ2ZW50aW9ucyBlbiBjYXMgZGUgcHJvYmxtZXMgZGUgc2N1cml0LiBQYXJmb2lzLCBjJ2VzdCBpbmRpc3BlbnNhYmxlLiAKVGhlIG9ubGluZSBwb2tlciBleHBlcmllbmNlIGlzIHF1aXRlIGRpZmZlcmVudC4gVGhlcmUgaXMgYW4gYW5vbnltaXR5IHdoaWNoIHByb3RlY3RzIHRoZSBwc3ljaGUgb2YgdGhlICJuZXdiaWUiLiBUaGV5IGNhbiB3YXRjaCBnYW1lcyBhcyBsb25nIGFzIHRoZXkgd2FudCBiZWZvcmUgYWN0dWFsbHkgdGFraW5nIHBhcnQuIApDb3NtZXJlIGlzIHRoZSBiaWcgb3ZlcmFsbCBzaGFyZWQgZmFudGFzeSB1bml2ZXJzZSwgYW5kIHRoYXQgZ29pbmcgdG8gZGVwZW5kIG9uIHdoYXQgeW91IGxpa2UgdG8gcmVhZC4gCkl0IGdldHMgYmV0dGVyOiBodW1hbiBiZWluZ3MgZG8gbm90IGRpc3BsYXkgYSB3aG9sZSBsb3Qgb2YgZ2VuZXRpYyBkaXZlcnNpdHkgb3ZlciB0aGUgZW50aXJlIHNwZWNpZXMuIENoaW1wcywgdG8gbmFtZSBvbmUsIGhhdmUgV0FZIG1vcmUgZ2VuZXRpYyBkaXZlcnNpdHkuIApCdXQgYSBjYXZlYXQ6IEkgYWxzbyB3YXRjaCB0aGUgd2VhdGhlciBmb3JlY2FzdHMuIElmIGl0IHdlcmUgZm91ciBkYXlzIG91dCBhbmQgSSB3YXMgbG9va2luZyBhdCBhIGNvb2xpbmcgdHJlbmQsIEkgZ28gZ3JhYiBvbmUgb2YgdGhvc2UgQ29zdGNvIERvdWJsZSBCbGFjayBEaWFtb25kIFRocm93cy4gSSBhbHNvIGhpdCB1cCBhIHRocmlmdCBzdG9yZSBmb3IgYSBmbGVlY2UsIGJlY2F1c2UgaGlraW5nIGF0IDIwRiBpbiBiYXNlbGF5ZXJzIHNvdW5kcyBsaWtlIHN0cmFpZ2h0IHVwIGhlbGwgdG8gbWUuLiAKSSB0aGluayB5b3UgdG90YWxseSBtaXNzZWQgbXkgZWFybGllciBwb3N0IEkgc2FpZCB0aGF0IEpvSm8gSVMgdHJlYXRlZCBhcyBhIHdoaXRlIHdvbWFuLCB3aGljaCBpcyB3aHkgSSBkb24ndCBzZWUgaGVyIGFzIFdvQy4gTXkgcG9pbnQgd2FzIHNpbXBseSB0aGF0IGV2ZW4gc2hlIGlzLCBmb3IgYXJndW1lbnQncyBzYWtlLCBtb3JlIG9mIGEgUG9DIHRoYW4gQ2FlbHlubiwgd2hvIGlzIHJlYWNoaW5nIGV2ZW4gZnVydGhlciBiYWNrIGZvciBzb21lIG5vbiB3aGl0ZSBoZXJpdGFnZS4KSSByZWFsbHkgd2FudGVkIEJldG8gdG8gd2luLCBidXQgdGhlIGZhY3QgdGhhdCB0aGUgcmFjZSB3YXMgYXMgY2xvc2UgYXMgaXQgd2FzIGlzIGluY3JlZGlibGUuIFRleGFzIGhhc24gZWxlY3RlZCBhIERlbW9jcmF0IHRvIFNlbmF0ZSBzaW5jZSAxOTg4LiBUZWQgQ3J1eiBoYWQgb25lIG9mIHRoZSBzYWZlc3QgUmVwdWJsaWNhbiBzZWF0cyB1cCBmb3IgcmUgZWxlY3Rpb24gYW5kIGl0IGVuZGVkIHVwIGJlaW5nIHRoYXQgY2xvc2UuIApDcmlzcHVzIEF0dHVja3MgaXMgYSBwYXJ0aWN1bGFybHkgaW50ZXJlc3RpbmcgZmlndXJlIHRvIGJyaW5nIHVwIGluIHRoaXMgY2FzZS4gVGhlIGFuc3dlciBpcywgc29tZXdoYXQgc3VycHJpc2luZ2x5LCBuby4gTWl0Y2hlbGwgQS4gCkJ1dCB0aGUgYmVzdCBkb2Vzbid0IGhhdmUgdG8gYmUgdGhlIGdyZWF0ZXN0LiBJbiB0aGUgY29sZCwgaGFyZCB3b3JsZCBvZiBmYWN0cywgRmxveWQgTWF5d2VhdGhlciBKciBpcyBieSBmYXIgdGhlIGJlc3QgYm94ZXIgZXZlci4gCkFzc3VtaW5nIHlvdSBzdGF5aW5nIHNvbWV3aGVyZSBpbiB0aGUgQ0JELiBXYWxrIGRvd24gdGhyb3VnaCB0aGUgQm90YW5pYyBnYXJkZW5zIHRvIENpcmN1bGFyIFF1YXkgKGdhcmRlbnMgYXJlIGZyZWUpLiAKRGVwZW5kcyBvbiB0aGUgc2hvdyBidXQgaXQgY2FuIGV2ZW4gYmUgd2Vla3Mgb3IgbW9udGhzIGxhdGVyLiBOb3Qgc3VyZSBhYm91dCBQUiBzcGVjaWZpY2FsbHkgYnV0IEkgZG91YnQgaXQncyBhdCB0aGUgZW5kIG9mIGV2ZXJ5IHNob290IGRheS4gSSd2ZSBuZXZlciB3b3JrZWQgYSBzaG93IHdoZXJlIHdlIHNob3QgdGhlbSBhdCB0aGUgZW5kIG9mIGV2ZXJ5IHNob290IGRheS4gCkEgcmVjZW50IGFydGljbGUgaW4gYW4gYWx0ZXJuYXRpdmUgbmV3c3BhcGVyIGNsZXZlcmx5IGdhdmUgZmFsc2UgaW1wcmVzc2lvbnMgb2YgaW5hcHByb3ByaWF0ZSBiZWhhdmlvciBiZWNhdXNlIG9mIGl0cyBtaXNsZWFkaW5nIGlubnVlbmRvLCBpbmNvcnJlY3RseSBpbXBseWluZyB0aGF0IFByb2Zlc3NvciBHZW9yZ2UgUmVrZXJzIHVzZWQgdGhlIFJlbnRib3kgd2Vic2l0ZSB0byBoaXJlIGEgcHJvc3RpdHV0ZSB0byBhY2NvbXBhbnkgaGltIG9uIGEgcmVjZW50IHRyaXAuIAogQW5pbCBBbWJhbmksJDUuMyBiaWxsaW9uLCBXaGFydG9uIE1CQS4gCkluc3RlYWQsIFRydW1wIHdhbGtlZCBiZWhpbmQgdGhlIHBvZGl1bSBhbmQgYmVnYW4gc3BlYWtpbmcgcmlnaHQgYXdheS4uIApXaHkgZG8gc2xvdHMgY29tZSBvdXQgb24gdG9wIGluIHRoZSBwb3B1bGFyaXR5IHN0YWtlcz8gTGVhcm4gd2h5IHNsb3RzIGJlYXQgdGhlIGNvbXBldGl0aW9uIGV2ZXJ5IHRpbWUuCkl0IHdhc24ndCBhYm91dCB0aGUgbW9uZXkgZm9yIGhpbSwgaXQgd2FzIGFib3V0IGJlaW5nIGxvdmVkIGhlIHNhaWQuIApBbmQgaGVyZSB5ZXQgYW5vdGhlciB0YWtlIGJ5IC91L21yZmVicnV1cyAoaGlzIFlUIGNoYW5uZWwgaXMgd29ydGggYSBzdWJzY3JpcHRpb24pLi4gCkdvaW5nIGJhY2sgdG8gbXkgZmlyc3QgcG9pbnQsIHRoZXJlIGp1c3QgZmFyIHRvbyBtdWNoIGluZm9ybWF0aW9uIG91dCB0aGVyZS4gQ29hY2hlcyBhcmUgYXZhaWxhYmxlIGZvciByYXRlcyB0aGF0IGFyZSBmYXIgdG9vIGNoZWFwLiBJZiB5b3UgY2FuIHRlYWNoIHNvbWVvbmUgdG8gbWFrZSAkNTAvaG91ciB5b3Ugc2hvdWxkIGJlIGNoYXJnaW5nIGZhciBtb3JlIHRoYW4gJDEwMC9ob3VyIGZvciB5b3VyIHRpbWUuIApBbmQgc29tZSBvZiB0aGVyZSBvdGhlciBwbGFucyBsaWtlIHRoZSBncmVlbiBuZXcgZGVhbCB3aWxsIGNvc3QgYSBmb3J0dW5lIHdoaWNoIEkgcHJldHR5IHN1cmUgaWYgaXQgd2FzIHRydWx5IG1hZGUgdG8gd29yayAod2hpY2ggaXQgaGFzIHRvIGNhdXNlIG90aGVyd2lzZSBjYXRhc3Ryb3BoZSB3aWxsIGhhcHBlbiksIHdpbGwgaGl0IHVzIGluIHRoZSBwb2NrZXRib29rIGFzIHdlbGwuIEV4cGVjdGluZyB0aGVpciB0YXhpbmcgdGhlIHJpY2ggcGxhbiB0byBmdW5kIGV2ZXJ5dGhpbmcgaXMgbGlrZSBiZWxpZXZpbmcgdGhlIGdvZHMgdHJpY2tsZSBkb3duIHRoZW9yeSAgZG9uIGJhbmsgb24gaXQgZXZlbiBpZiB5b3UgaG9wZSBpdCB3aWxsIGhhcHBlbi4uIApMb3VpcywgYW5kIEthbnNhcyBDaXR5IGxlYWQgdGhlIE1pZHdlc3QgaW4gZmlyc3QgZnVuZGluZ3Mgb2YgZmVtYWxlIGZvdW5kZWQgY29tcGFuaWVzIFZpc3RhIFBpcGUgU3VwcGx5IGluY3JlYXNlcyBvaWxmaWVsZCB2aXNpYmlsaXR5IGFuZCBhY2NvdW50YWJpbGl0eSB0aHJvdWdoIHBhcnRuZXJzaGlwIHdpdGggUmlnIENhbGxPdXQgTGluY29sbidzIGJ1c2luZXNzZXMsIHNjaG9vbHMgYW5kIG5vbnByb2ZpdHMgY29tZSB0b2dldGhlciB0byBzdXBwb3J0IGZ1dHVyZSBlbnRyZXByZW5ldXJzIEtDJ3MgRmlyZWJyYW5kIFZlbnR1cmVzIHdlbGNvbWVzIG5ldyBwYXJ0bmVyIFJ5YW4gTWVya2V0IFN0LiAKSW4gc3VjaCBzaXR1YXRpb25zLCB3aGVuIHBlb3BsZSBmZWx0IGJvcmVkIHdpdGggdGhlIGdhbWVzLCB0aGV5IHdpbGwgaGF2ZSB0byBwdXJjaGFzZSBhbm90aGVyIGdhbWVzIGluIG9yZGVyIHRvIGVudGVydGFpbiB0aGVtLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIvd3JpdGluZ3VzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpBbmQgTXJzLiBTYW11ZWwgT3ZlciAgaG9sdHplciwgbmVhciBFbW1pdHNidXJnLiBBbmQgTXJzLiAKVGhpcyBpcyBleGFjdGx5IHdoYXQgSSdtIGhvcGluZyBmb3IuIFRoYW5rIHlvdSBmb3IgeW91ciBzdG9yeS4gClBlcHNpIHB1bGxlZCBhbiBhZCBpbiAyMDE3IHNob3dpbmcgS2VuZGFsbCBKZW5uZXIgZ2l2aW5nIGEgY29wIGEgUGVwc2kgZHVyaW5nIGEgcHJvdGVzdCBhbmQgYXBvbG9naXplZCBhZnRlciBhbiBvdXRjcnkgdGhhdCBpdCB0cml2aWFsaXplZCAiQmxhY2sgTGl2ZXMgTWF0dGVyIiBhbmQgb3RoZXIgcHJvdGVzdCBtb3ZlbWVudHMuIApUaGUgY2FzaW5vJ3MgRWxlbWVudCBSZXN0YXVyYW50IGlzIG9wZW4gZm9yIGJyZWFrZmFzdCwgbHVuY2ggYW5kIGRpbm5lci4gClRoZXkgaGF2ZSB0aGUgbG93ZXN0IHBvc3NpYmxlIHBvd2VyIG9mIDEuIEFic29sdHVlbHkgdXNlbGVzcy4gCkhlYWx0aGllciBvZmZlcmluZ3MgbWlnaHQgYmUgY29zdGxpZXIsIGJ1dCBCYXJpY2hlbGxvIHNhaWQgaXQgbXVjaCBtb3JlIGFuZCB0aGF0IHJlY2VudCBmdW5kcmFpc2luZyBlZmZvcnRzLCBpbmNsdWRpbmcgYW4gYW5udWFsIGdvbGYgdG91cm5hbWVudCBhbmQgYmVxdWVzdHMgaW4gd2lsbHMsIGhhdmUgYWxsb3dlZCB0aGUgY2hhcml0eSBydW4gYWxtb3N0IGVudGlyZWx5IGJ5IHZvbHVudGVlcnMgKHRoZXJlIGlzIG9ubHkgb25lIHBhaWQgZW1wbG95ZWUpIHRvIGxvb2sgYXQgYW4gdXBkYXRlZCBmb29kIGJhbmsgcHJvZ3JhbSB3aXRoIG1vZGVybiBkYXkgbnV0cml0aW9uYWwgdmFsdWVzLiAKIiBxdW9pIHMnYXR0ZW5kYWllbnQgaWxzID8iIkonYWkgbHUgcXVlbHF1ZSBwYXJ0IHF1J2lsIHkgYXZhaXQgZGVzIG1lbWJyZXMgZGUgbGEgZmFtaWxsZSByb3lhbGUgcXVpIHRhaWVudCBjb25mdXMgZXQgbmVydnMgcXUnZWxsZSBzZSBydmVpbGxlIGF1c3NpIHR0LCAgNSBoZXVyZXMgZHUgbWF0aW4sIHJhY29udGUgbGEgZGlyZWN0cmljZSBhcnRpc3RpcXVlIGRlIENvbmRlTmFzdC4gQydlc3QgdW5lIENhbGlmb3JuaWVubmUgbm9ybWFsZSBxdWkgc2UgbHZlIHR0LCBmYWl0IGR1IHlvZ2EgZXQgbWRpdGUuIiBTZXVsIGJtb2wsIG91dHJlIHNlcyBydmVpbHMgbWF0aW5hdXgsIGxhIGR1Y2hlc3NlIGRlIFN1c3NleCBzZXJhaXQgZ2FsZW1lbnQgYWNjcm8gIHNvbiBzbWFydHBob25lLiBKZSB2ZXV4IGRpcmUsICBxdW9pIHMnYXR0ZW5kYWllbnQgaWxzID8gIGNlIHF1J2VsbGUgbGVzIGVudm9pZSBwYXIgcGlnZW9uIHZveWFnZXVyID8gSmUgcGVuc2UgcXUnZWxsZSBlc3QgZm9ybWlkYWJsZS4iIEludGVycm9nZSBzdXIgbGEgcm9iZSBkZSBtYXJpZSBkZSBsJ3BvdXNlIGR1IHByaW5jZSBIYXJyeSwgQW5uYSBXaW50b3VyIG5lIHRhcml0IHBhcyBub24gcGx1cyBkJ2xvZ2VzLiAKVGhpcyBpcyBhIHNpdHVhdGlvbiB3aGVyZSB0aGVyZSBpcyBubyBzaG9ydGFnZSBvZiBzdXBwbHkgb3IgZGVtYW5kLgpUaGlzIGlzIHRoZSAybmQgYmVzdCB3YXkgdG8gc3RhcnQgVGV4YXMgSG9sZCBFbSBhbmQgdGhleSBhcmUgY2FsbGVkIGNvd2JveXMuIFlvdSBjYW4gYWxzbyBjYWxsIHRoZXNlIDIgY2FyZCBLaW5nIEtvbmcgYW5kIGFwcGVhciBzYXZ5IHRvIHRoZSBvdGhlciBwbGF5ZXJzLgpXYXJuZSwgaG93ZXZlciwgYmVsaWV2ZXMgdGhhdCB0aGUgbWVuIHdobyBoYXZlIHJlcGxhY2VkIHRoZW0gYXJlIG5vdyBncm93aW5nIGludG8gdGhlaXIgcm9sZXMuICJBdXN0cmFsaWEgaGF2ZSBub3QgYmVlbiBxdWl0ZSBhcyBkb21pbmF0aW5nIHNpbmNlIHRoZW4sIGJ1dCB0aGV5IGFyZSB0aHJvdWdoIHRoYXQgdHJhbnNpdGlvbmFsIHBlcmlvZCBub3csIiBoZSBzYWlkLiAiVGhlIG1ham9yaXR5IG9mIHRoZSBwbGF5ZXJzIGhhdmUgcGxheWVkIDE1IG9yIDIwIFRlc3RzLCBhbmQgdGhvdWdoIEVuZ2xhbmQgYXJlIHBsYXlpbmcgZXhjZXB0aW9uYWwgY3JpY2tldCwgaXQncyBhIHRvdWdoIGFzayB0byBnbyB0byBBdXN0cmFsaWEgYW5kIHdpbi4gCk1heWJlIGkgbWlzc2luZyBzb21ldGhpbmcsIGJ1dCB0aGlzIHNob3cgY29udGVudCB3YXMgc2V2ZXJlbHkgbGFja2luZyBpbW8uIFRoZXkgcmVjeWNsZWQgdGhlIHNhbWUgc29uZ3MgdGhhdCB0aGUgZ2lybHMgYWxyZWFkeSB0cmllZCBvdXQgb24gS25vd2luZyBCcm9zLCBhbmQgdGhlIGhvc3QgZGlkbiBzZWVtIHByZXBhcmVkIGF0IGFsbCB3aGVuIHRoZSBnYW1lIHJlc3VsdCB3YXMgaW5jb25jbHVzaXZlLiAKQ2F2aW5nIGluIG5vdyB3aWxsIG9ubHkgY29uZnVzZSBoaW0uIFlvdSBuZWVkIHRvIHN0aWNrIHRvIHlvdXIgZ3Vucy4gClNsZWVwaW5nIGlzIHN0aWxsIHVuY29tZm9ydGFibGUsIGJ1dCBpdCBnZXR0aW5nIGJldHRlciBlYWNoIG5pZ2h0LiBJIGNvdWxkbiBkbyBhbnkgb2YgdGhhdCBiZWZvcmUgTCBHbHV0YW1pbmUuIEl0IHRoZSBvbmx5IHRoaW5nIHRoYXQgd29ya2VkIGZvciBtZS4gCkkgYW0gZmFpcmx5IGFncmVzc2l2ZSBpbiB0aGUgd2F0ZXIsIGJ1dCB2ZXJ5IGZyaWVuZGx5LiBJIGdldCBtaW5lIHdpdGhvdXQgaG9wZWZ1bGx5IG1ha2luZyB0b28gbWFueSBlbmVtaWVzLiBDb21wbGltZW50IHNvbWVvbmUgb24gdGhlIHdhdmUgdGhleSBqdXN0IGdvdC4gClRoZSBCTUogb2ZmZXIgcmVhZGVycyBhIHJhbmdlIG9mIHdheXMgdG8gaW50ZXJhY3Qgd2l0aCBvdXIgb25saW5lIGNvbnRlbnQuClNvbWV0aW1lcyBhY2NvdW50cyBtYW5hZ2VtZW50IGRvZXNuIGhhdmUgZW5vdWdoIGluZm9ybWF0aW9uIHRvIGRldGVybWluZSB3aGF0IEVSUyBpcyBhY3R1YWxseSBjb3JyZWN0aW5nLCBhbmQgZXZlbiB0aGUgZGVzY3JpcHRpb24gZ2l2ZW4gdG8gdGhlbSBpcyAibWlub3IgZXJyb3IgdG8gYmUgY29ycmVjdGVkIiBldGMuIApJdCB3b3VsZCBoYXZlIGJlZW4gbmljZSB0byB3aW4gb25lIG9mIHRob3NlIGNvaW4gZmxpcHMgd2l0aCBwb2NrZXQgc2l4ZXMsIHRvbyEgTWVudGFsIGFuZCBwaHlzaWNhbCBwcmVwYXJhdGlvbiBpcyBjcml0aWNhbCBpbiB0b3VybmFtZW50IHBva2VyIGV2ZW50cyBsaWtlIHRoZSBXU09QLiAKVGhhdCBzYWlkLCBUaGUgdGhpcmQgd29ybGQgaXMgYmV5b25kIGZ1Y2tlZCBiZWNhdXNlIHRoZXJlIGlzIGEgZ2xvYmFsIGJhbiBvbiBmb3NzaWwgZnVlbCBpbnZlc3RtZW50IGludG8gdGhvc2UgY291bnRyaWVzLiBJZiB5b3UgbG9vayBhdCBjbGltYXRlIGNoYW5nZSBoeXN0ZXJpYSBhcyB0aGUgcHJvcGFnYW5kYSB1c2VkIHRvIGp1c3RpZnkgaW5zYW5lIHRyYWRlIHdhciBwb2xpY3kuIApJZiB0aGV5J3JlIG9wZW5pbmcgNTAlIG9mIGhhbmRzLCBsaW1wIGluIGZyb250IG9mIHRoZW0gd2l0aCBwcmVtaXVtIGhvbGRpbmdzIGFuZCByZXJhaXNlIHRoZWlyIG9wZW4uClNoZSBpcyBzdXBwb3NlZCB0byBkaWUgb24gRXZlbnRpZGUsIGJ1dCBlc2NhcGVzIHRoYW5rcyB0byBhIG15c3RlcmlvdXMgaG90ZWxpZXIgd2hvIHRha2VzIGhlciB0byBhIG1hZ2ljYWwgY2l0eSBjYWxsZWQgTmV2ZXJtb29yLiBUaGlzIGJvb2sgaXMgYWJzb2x1dGVseSBkZWxpZ2h0ZnVsLiAKU2V4IHJvYm90cyBjb3VsZCBtYWtlIG1lbiBvYnNvbGV0ZQpUaGUgQW1lcmljYW4gdmVyc2lvbiBvZiB0aGUgMzAgSW5jaCBSb3VsZXR0ZSBXaGVlbCBoYXMgcG9ja2V0cyB3aGljaCBhcmUgbnVtYmVyZWQgZnJvbSAxIHRvIDM4LCBpbnRlcmNoYW5naW5nIGZyb20gcmVkIHRvIGJsYWNrLiAKV2UgYW5hbHl6ZSBtYW55IGZhY3RvcnMsIG5vbmUgYXJlIGFzIGltcG9ydGFudCBhcyB0aGUgbWVtYmVyIGJhc2Ugb2YgYSBob29rdXAgc2l0ZS4gV2h5IGlzIE1pbWl0YXRlIG9uZSBvZiB0aGUgYmVzdCBzZXggYXBwcz8gSWYgeW91IGNob29zZSB0bywgeW91IGNhbiBhY2Nlc3Mgb3VyIGFkZGl0aW9uYWwgZGF0aW5nIHNlcnZpY2VzIGluIG91ciB0byBtYWtlIHlvdXIgb25saW5lIGRhdGluZyBleHBlcmllbmNlIG1vcmUgZXhjaXRpbmcuIEFkdWx0RnJpZW5kRmluZGVyIGlzIHRoZSByYXJlIGV4Y2VwdGlvbi4gCkkgcmVzdGVkIGZyb20gVGh1cnNkYXkgKFdoaWNoIGZlbHQgcmVhbGx5IHdlaXJkIGFmdGVyIGEgdHdvIG1vbnRoIHN0cmVhaykuIApJIG1lYW4gSSBnZXQgdGhlIHNlbnRpbWVudCBhbmQgd291bGQgbmV2ZXIgdXNlIHRoYXQgdGVybSBiZWNhdXNlIFdoaXRlIFN1cHJlbWFjaXN0cywgYSB0aW55IHBlcmNlbnRhZ2Ugb2Ygd2hpdGUgcGVvcGxlLCBoYXZlIHJ1aW5lZCBpdCBmb3IgZXZlcnlvbmUuIAo0KSBUaGVyZSBpc24ndCBhIHNhbGFyeSBjYXAgaW4gYmFzZWJhbGwuIFN1cmUgdGhlcmUncyB0aGUgbHV4dXJ5IHRheCB0aHJlc2hvbGQgd2hpY2gsIGRlYXIgbWUsIHlvdSdyZSBwZW5hbGl6ZWQgb3ZlciBkb2xsYXJzIHNwZW50IGF0IDIwMG0/IFRheGVkIGF0IDQwbSB3aGVuIHlvdSBnbyBvdmVyIGZvciBhIGNvbnNlY3V0aXZlIHllYXI/IEkgZG8gdW5kZXJzdGFuZCB0ZWFtcyB3b3VsZG4ndCBsaWtlIHRvIGZvb3QgdGhhdCBiaWxsLCBidXQgSSBiZWxpZXZlIHRoZXJlIGFyZSB0d28gb3IgdGhyZWUgdGVhbXMgbmVhciB0aGF0IHRocmVzaG9sZCAoVXMsIFNveCwgYW5kIERvZGdlcnMpIHdoaWxlIG1vc3QgZXZlcnlvbmUgZWxzZSBpcyBub3doZXJlIG5lYXIuIApBIHNlc3Npb24gb2YgbWFzc2FnZSBpbiBTeWRuZXkgd2lsbCBwcm92ZSB0byBiZSB2ZXJ5IHVzZWZ1bCBmb3IgaGVscGluZyBwYXRpZW50cyB3aXRoIGNocm9uaWMgbmVjayBwYWluIGFuZCBwYWluIGR1ZSB0byBvc3Rlb2FydGhyaXRpcyBvZiB0aGUga25lZS4gCkluIGhpcyBtaW5kIGl0IGEgYmlnIGRlYWwuIApNb2Rlcm4gd29tZW4gY29uc2lzdGVudGx5IHNwZWFrIGFib3V0IHNhZmUgc3BhY2VzIGZvciBmZW1hbGVzLiAKSSBub3RlZCB0aGF0IHRoZSBzdXJ2ZXkgaXMgYmVpbmcgcnVuIGJ5IC91L3RheWxvcmZhdXNhayB3aG8gaXMgd2VsbCBrbm93biB0byBoYXZlIGhpZ2hseSBwYXJ0aXNhbiB2aWV3cwpOb3RoaW5nIHdyb25nIHdpdGggdGhhdC4uIApCYWNrIHRoZW4sIGl0IHdhc24gMTAwIHBhZ2VzIG9mIHBpY3R1cmVzIG9mIHRoZSB0YWxsZXN0IG1hbiBvciB0aGUgd29tYW4gd2hvc2UgZmluZ2VybmFpbHMgd2VyZSAzIGZlZXQgbG9uZyAgIGl0IHdhcyBqdXN0IGEgeiBvZiB0aGUgd29ybGRzIGJpZ2dlc3QvZmFzdGVzdC9qdWdnbGluZ2VzdCB3aGF0ZXZlciB0aGluZyB3YXMgd29ydGggaG9sZGluZyBhIHJlY29yZCBmb3IuLiAKMTIpIFtJTVBPUlRBTlRdIE5vIHBhdGllbnQgZXhwZXJpZW5jZWQgbXVzY3Vsb3NrZWxldGFsIGluanVyeSBvciBleGFjZXJiYXRpb24gb2YgZmlicm9teWFsZ2lhIHJlbGF0ZWQgc3ltcHRvbXMgZHVyaW5nIHRoZSBpbnRlcnZlbnRpb24uCldlIHRyeSB0byBtYWtlIGFsbCBvZiBvdXIgbWF0ZXJpYWwgY29oZXJlIGludG8gYSBzaW5nbGUgZ29vZCBzdG9yeS4gCih3b3JrcGxhY2UgaHVtb3IuIApTaGUgaGFzIDIgYWxidW1zLiBUaGUgRmFtZSBhbmQgVGhlIEZhbWUgTW9uc3RlciB3aGljaCBpcyBhIGNvbWJpbmF0aW9uIG9mICJUaGUgRmFtZSIgYW5kICJNb25zdGVyIi4gCkluIHRoZSBlbmQsIEkgdGhpbmsgdGhlIG9ubHkgbGVnaXQgcmVhc29uIHRvIHByZSBvcmRlciBpcyB0byBnaXZlIGEgZGV2L3B1Ymxpc2hlciB5b3VyIGJhZGdlIG9mIHRydXN0LCBpZiB5b3Uga25vdyB5b3UgYmUgZG9pbmcgYSBkYXkgb25lIHB1cmNoYXNlLiBBIGhhbmRmdWwgb2YgdGhlbSBkZXNlcnZlIHRoaXMuIEVBIGRlc2VydmVzIGEgd2FsayBvZiBzaGFtZSBmcm9tIHRoZSBudW4gaW4gR2FtZSBvZiBUaHJvbmVzLgoiSWYgdGhhdCB3ZXJlIHJlYWxseSBhbGwsIEkgd291bGRuJ3QgbWluZCwgQ2FwdGFpbiBKaW0uIEkgd291bGQgdW5kZXJzdGFuZC4gQnV0IHRoZXJlIGFyZSB0aW1lcyBub3QgYWx3YXlzLCBidXQgbm93IGFuZCBhZ2FpbiAgd2hlbiBJIGFsbW9zdCBoYXZlIHRvIGJlbGlldmUgdGhhdCBMZXNsaWUgZG9lc24ndCBkb2Vzbid0IGxpa2UgbWUuIFNvbWV0aW1lcyBJIHN1cnByaXNlIGEgbG9vayBpbiBoZXIgZXllcyB0aGF0IHNlZW1zIHRvIHNob3cgcmVzZW50bWVudCBhbmQgZGlzbGlrZSBpdCBnb2VzIHNvIHF1aWNrbHkgYnV0IEkndmUgc2VlbiBpdCwgSSdtIHN1cmUgb2YgdGhhdC4gQW5kIGl0IGh1cnRzIG1lLCBDYXB0YWluIEppbS4gSSdtIG5vdCB1c2VkIHRvIGJlaW5nIGRpc2xpa2VkICBhbmQgSSd2ZSB0cmllZCBzbyBoYXJkIHRvIHdpbiBMZXNsaWUncyBmcmllbmRzaGlwLiIKV2lsa2llIGNhbGxzIG9uIEdyZWVucyB0byBzdGVwIHVwIGFuZCBzdXBwb3J0IHBva2llIHJlZm9ybQpFdmVuIHRoZSBjaGFyYWN0ZXJzIHdobyBhcmUgcG9ydHJheWVkIHN5bXBhdGhldGljYWxseSBhcmUgYmFkIGd1eXMsIGV2ZW4gVGFjaGliYW5hIGd1eXMgd2VyZSBzZWxsaW5nIHdvbWVuIGludG8gc2V4dWFsIHNsYXZlcnkgYXQgc29tZSBwb2ludC4gU28gbWF5YmUgdGhhdCB0aGUgcG9pbnQgb2YgdGhhdCBzY2VuZSwgdG8gcmVtaW5kIEtpcnl1IGFuZCB0aGUgcGxheWVycyB0aGF0IGV2ZXJ5b25lIGludm9sdmVkIGluIHRoZSBlbXB0eSBsb3Qgd2FyIGFyZSBiYWQgcGVvcGxlLi4gCkhlIHdyb3RlOiBsaWtlIHRvIGxlYXZlIHNvbWV0aGluZyBiZXR0ZXIgYmVoaW5kIG1lIHRoYW4gcmljaGVyIHNoYXJlaG9sZGVycyBhbmQgcmljaGVyIHBhcnRuZXJzLiBCYW5rZXJzLCBsYXd5ZXJzIGFuZCBtYW5hZ2VtZW50IGNvbnN1bHRhbnRzIGNhbWUgaW4gZm9yY2UuIApJdCBzdWNrZWQgYXQgdGhlIHRpbWUgYnV0IHNpbmNlIHRoZW4sIHdlJ3ZlIGJlZW4gZmluZSBhbmQgc3RpbGwgc3RheWVkIGZyaWVuZHMgKHllcywgc3RyaWN0bHkgZnJpZW5kcykuLiAKSSBoYXZlIGEgM29zIG5pZ2h0d2luZyBhbmQgYSA0b3MgYXJrYWluZXMgd2l0aCBteSA0b3MgYmluZy4gCkF0IHRoZSBpbnRlcnNlY3Rpb24sIGhlYWQgbGVmdCBhbG9uZyBQZXRjaGFidXJpIFJvYWQuIApUb3RhbCBCUyEuIApMb3ZlIHRvIGFsbCBvZiB5b3UuIApUaGUgYm9vayBGcmVha29ub21pY3MgdGFsa3MgYWJvdXQgYSBzaW1pbGFyIHBoZW5vbWVub24uIFRoZXJlIHdhcyBhIHN0ZWFkeSByaXNlIGFuZCB0aGVuIGRyYXN0aWMgZmFsbCBvZiBjcmltZSBhcm91bmQgdGhlIDkwJ3MgYW5kIHRoZXkgZXZlbnR1YWxseSBjb25jbHVkZWQgaXQgd2FzIGJlY2F1c2Ugc2V2ZXJhbCB5ZWFycyBlYXJsaWVyIGFib3J0aW9uIHdhcyBsZWdhbGl6ZWQsIGFuZCBzbyBtYW55IGtpZHMgd2hvIHdvdWxkIGhhdmUgYmVlbiBib3JuIGludG8gYWR2ZXJzZSBob21lcyBhbmQgd291bGQndmUgYmVlbiBhdCB0aGUgcmlwZSBhZ2UgZm9yIGEgY2FyZWVyIGluIGNyaW1lIGF0IHRoZSB0aW1lLCBzaW1wbHkgbmV2ZXIgZXhpc3RlZCwgY2F1c2luZyB0aGUgZHJvcCBpbiBjcmltZS4uIApJZiB5b3UgaW50ZXJlc3RlZCBpbiBvd25pbmcgb25lLCB2aXNpdCB0aGUgYmxvZyBib29rc3RvcmUuCihGdWxsIEFuc3dlcikuIApJIHdhcyB0YWtpbmcgT1BzIHZpZXdwb2ludCBhYm91dCBjYXN1YWwsIGFuZCBhcHBseWluZyBpdCB0byBteXNlbGYuIEkgd2FzIHNheWluZyBob3cgaWYgSSBwbGF5IGNhc3VhbCB3aXRoIGEgdGllciAxIGRlY2ssIGl0IGlzIHVuZmFpciB0aGF0IEkgcGxheSB2cyBhbm90aGVyIHQxIGRlY2suIERvIHlvdSBnZXQgaXQ/IEl0IHdhcyBhIGZvcm0gb2Ygc2F0aXJpY2FsIHBvc3QgdG8gaGlnaGxpZ2h0IGhvdyBwZXR0eSBpdCBpcyB0byBjcnkgaWYgc29tZW9uZSBpcyBwbGF5aW5nIGEgdHggZGVjayBpbiBjYXN1YWwuIEl0IGRvZXNuIG1hdHRlci4gSXQgY2FzdWFsLiBUaGVyZSBsaXRlcmFsbHkgaXMgbm8gcmVhc29uIHRvIHBsYXkgY2FzdWFsIGZvciAid2lucyIgYXNpZGUgZnJvbSBjb21wbGV0aW5nIGEgIndpbiIgcXVlc3QuCkV2ZW4gdGhlIG5ldyBhZG1pdHMgZG9uJ3Qgd2FudCB0byBzdGF5IHBhcnRpY3VsYXJseSBsb25nLCBiZWNhdXNlIHRoZXkgZmVhciB0aGF0IGEgZGlhZ25vc2lzIG9mIGVwaWxlcHN5IHdpbGwgcHJldmVudCB0aGVtIGZyb20gd29ya2luZyBvciBkcml2aW5nLiAKSSB3YXMgYSBsb3QgbGlrZSBoZXIgYXMgYSBraWQgKGFuZ2VyIGlzc3Vlcywgc3R5bGUsIGV2ZW4gdGhlIGN1cmx5IGhhaXIpIGFuZCBJIHRob3VnaHQgaXQgd2FzIGNvb2wgdG8gc2VlIHNvbWVvbmUga2luZGEgbGlrZSBtZS4gCkluIE5ldyBZb3JrLCB3ZSBoYXZlIHRoYXQgYSBwaXN0b2wgZ3JpcCAicHJvdHJ1ZGVzIGNvbnNwaWN1b3VzbHkgYmVuZWF0aCB0aGUgYWN0aW9uIG9mIHRoZSB3ZWFwb24uIiBXZSBsb29rZWQgYXQgb3RoZXIgdHJhZGl0aW9uYWwgaHVudGluZyByaWZsZXMgd2l0aCBtb250ZSBjYXJsbyBzdG9ja3MsIGFuZCBub3RpY2VkIHRoYXQgdGhlIGdyaXAgcGFydCBwcm90cnVkZXMgYSBjb25zaXN0ZW50IDEuNSIgMiIgYmVuZWF0aCB0aGUgdHJpZ2dlci4gCkJ1dCBzaGUgZGlkIG9mZmVyIGEgcmVtaW5kZXIgdGhhdCBhbiB1bmNlcnRhaW4gb3V0bG9vayBpcyBkaWZmZXJlbnQgdGhhbiBhIG5lZ2F0aXZlIG9uZS4gClRoZSBtb3N0IGltcG9ydGFudCB0b3BpYyBpbiB0aGUgYXJ0cyB3YXMgYWx3YXlzIHRoZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgYmVhdXR5IG9mIHRoZSBpZGVhbCBtYWxlIGJvZHkuLiAKNCkgUHJvZHVjZXJzIHdpbGwgdGVsbCBzdGFycyBvZiB0aGUgc2hvdyB0aGF0IGl0IGdvaW5nIHRvIGJlIGNhbmNlbGxlZCBiZWNhdXNlIGl0IGJvcmluZyBhbmQgYSBib3JkZXIgbGluZSBkaXNhcHBvaW50aW5nIGJ1enoga2lsbCB0byB2aWV3ZXJzLgpXZSB1c2VkIHRvIHBsYXkgZ3VpdGFyIGFuZCBzbW9rZSB3ZWVkIHRvZ2V0aGVyLCBhbmQgaGUgd2FzIHVzdWFsbHkgcHJldHR5IGZ1bi4gCiJXZSd2ZSBiZWVuIHNsdW1waW5nIGZvciBuaW5lIGdhbWVzIG5vdywiIHNhaWQgSm9obnNvbiwgd2hvIHNjb3JlZCAyNSBwb2ludHMuICJZb3UnZCB0aGluayB3ZSdkIGJyZWFrIHRocm91Z2ggb25lIGdhbWUsIGFuZCB0aGlzIHdhcyBpdC4iCkRpZG4ndCBldmVuIGJvdGhlciB0YWtpbmcgYSBzZWF0LCBqdXN0IGR1bXBlZCBteSAxMiBvbiBhbiBlbXB0eSBib3ggZXhwZWN0aW5nIHRvIGxvc2UgaXQuIAoiRW52aXJvbm1lbnRhbCBjaGFuZ2VzIG11c3QgYmUgcmVzcG9uc2libGUgZm9yIHRoZSByZWNlbnQgZXBpZGVtaWMgcmlzZSBpbiBhbGxlcmdpYyBkaXNlYXNlIHdpdGggcHJvZ3Jlc3NpdmUgV2VzdGVybml6YXRpb24uIgpGYWl0aCBEdXQsIFNlbWlhaG1vbyA2IGZvb3QgMyBjZW50cmUsIGhlbHBlZCBzcGVhcmhlYWQgYSBjb21lYmFjayBmcm9tIGEgMTcgcG9pbnQgc2Vjb25kIHF1YXJ0ZXIgZGVmaWNpdCBTYXR1cmRheSBhcyB0aGUgdG91cm5hbWVudCBOby4gCkFmdGVyIGEgZmV3IGJpdGVzLCBJIGRldGVjdGVkIGEgc3VidGxlIGNvbXBsZXhpdHkgaW4gdGhlIGZsYXZvciB0aGF0IHN1Z2dlc3RlZCB0aGUgdXNlIG9mIGEgaGlnaGVyIGdyYWRlIHdpbmUgdmluZWdhciB0aGFuIGEgaHVtYmxlciBjb21tb2RpdHkgaW5ncmVkaWVudC4gSSdkIGJlIGxpa2VseSB0byBvcmRlciB0aGlzIHdlbGwgcHJlcGFyZWQgU291dGhlcm4gc3RhcGxlIGFnYWluLi4gCkJ1dCBzdGlnbWEgYWxzbyBwbGF5cyBhIHJvbGUsIHNoZSBzYWlkLCBhZGRpbmcgcGVvcGxlIHdpdGggaW52aXNpYmxlIGRpc2FiaWxpdGllcyBtYXkgbm90IGJlIHdpbGxpbmcgb3IgYWJsZSB0byBjb21tdW5pY2F0ZSB0aGVpciBzaXR1YXRpb25zIGluIGVudmlyb25tZW50cyB0aGV5J3ZlIGZvdW5kIHVuc3VwcG9ydGl2ZSBpbiB0aGUgcGFzdC4KRm9yIHNvbWUsIHRoZSBpbXBhY3QgaXMgdmVyeSBwZXJzb25hbC4gTXkgbW90aGVyIHdhcyBhIHNtYWxsIGJ1c2luZXNzIG93bmVyIGFuZCBJIHJlbWVtYmVyIHRoZSBsb25nIG5pZ2h0cyBzaGUgd291bGQgc3BlbmQgZmlsbGluZyBvdXQgZ292ZXJubWVudCBmb3JtcyBhdCB0aGUga2l0Y2hlbiB0YWJsZS4gU29tZSB3ZXJlIG5lY2Vzc2FyeTsgbWFueSBjdXQgaW50byBvdXIgc3RvcnkgdGltZSBhbmQgcmFpc2VkIGhlciBibG9vZCBwcmVzc3VyZSBmb3Igbm8gYmVuZWZpdC4gCk1hZGUgaGVyIG1pc3MgaGVyIGVsZW1lbnRhcnkgZ3JhZHVhdGlvbi5UaGVuIHdoZW4gaGVyIHBhcmVudHMgaGFkIHRoZSBhdWRhY2l0eSB0byBjb25mcm9udCBtZSBhZnRlciB0aGVpciBwcmVjaW91cyBjaGlsZCBoYXMgYmVlbiBodXJ0LCBJIGNhbG1seSBzYWlkLCAiVGVhY2ggeW91ciBraWQgc29tZSBtYW5uZXJzLCBvciBJIGNhbiBndXJhbnRlZSB0aGF0IHRoaXMgaXNuIHRoZSBsYXN0IHRpbWUgaXQgZ29pbmcgdG8gaGFwcGVuIHRvIGhlci4gClVuZm9ydHVuYXRlbHksIHRoZXJlIG1heSBuZWVkIHRvIGJlIGEgdGltZSB0aGF0IHlvdSBoYXZlIHRvIHRyYWRlIG9mZiBmb3IgYSBzaG9ydCBwZXJpb2Q6IHdlaWdodCBsb3NzIG9yIGZpdG5lc3MuIFdoYXQgaW1wb3J0YW50IHRvIHJlbWVtYmVyIGhlcmUsIHRob3VnaCwgaXMgdGhhdCBsb25nIHRlcm0sIHRoZSB3ZWlnaHQgbG9zcyBpcyBoZWxwaW5nIHlvdXIgZml0bmVzcyBnb2Fscywgbm90IHRha2luZyBhd2F5IGZyb20gdGhlbS4gCkhlIGRvZXMgbm90IGhhdmUgdG8gcHJlc2VudCBldmlkZW5jZSB3ZXJlIGhlIHRvIGdvIHRvIGNvdXJ0LiBIZSBjb3VsZCByZW1haW4gc2lsZW50IHRoZSB3aG9sZSB0aW1lLiAKQ2FzaW5vIHBva2VyIGlzIG1vcmUgdGhhbiBqdXN0IGEgZ2FtZSB3aXRoIHN0YWtlcyB0byBwbGF5IGZvci4gSXQgaW52b2x2ZXMgc2tpbGwgYW5kIHNoYXJwbmVzcyBvZiB0aGUgbWluZCwgaW52b2x2aW5nIGV2ZXJ5IGVtb3Rpb25hbCBoaWdoICAgdGhlIGFkcmVuYWxpbmUgcnVzaCBvZiBhIGZvbGQsIHRoZSBleGNpdGVtZW50IG9mIGEgd2luLCBub3QgdG8gbWVudGlvbiB0aGUgZGVlcGVzdCBwaXRzIG9mIGVtb3Rpb25hbCBoZWxsIHdoZW4gYSB0aGUgc3Rha2VzIGFyZSBoaWdoIGFuZCB0aGUgZ2FtZSBpcyBsb3N0LiBUaGlzIGlzIGRlZmluaXRlbHkgc29tZXRoaW5nIHRvIHRyeSBvdXQgaWYgeW91IG5lZWQgc29tZSBhY3Rpb24gb2YgeW91ciBvd24uLiAKQW5kIGhlIHdhcyB1bmJlbGlldmFibHkgY2x1dGNoIGluIHRoZSA0dGggcXVhcnRlciB0aGF0IHllYXIsIGp1c3QgbGlrZSBSb2RnZXJzIGlzLiBJdCB3YXNuIGp1c3QgQ293aGVyZCBtYWtpbmcgdGhlIFJvZGdlcnMgY29tcGFyaXNvbiBiYWNrIHRoZW4uLiAKQWxsIG9mIHRoZXNlIHRoaW5ncyBhcmUgcGFydCBvZiB0aGUgc3ViamVjdCBrbm93biBhcyBwaGFybWFjb2tpbmV0aWNzLgpHb29kIEhlYWRhY2hlIGFydGljbGU6SGVhZGFjaGVzIE1pc3NpbmcgQW5hdG9taWNhbCBMaW5rIFN1cHBvcnRzIENoaXJvcHJhY3RpYyBUcmVhdG1lbnQuIApEYXMgaGFiZSBpY2ggc28gbGVpZGVyIG5vY2ggbmljaHQgYXVzcHJvYmllcnQsIGRhIGthbm4gaWNoIGRpciBudXIgZW1wZmVobGVuIGVpbiBiaXNzY2hlbiB6dSBleHBlcmltZW50aWVyZW4uIApWaW5jZSBWYXVnaG4gaXMgYSBkZWNlbnQgYWN0b3IsIGJ1dCBoZSBjYW4ndCBzZXJpb3VzbHkgaGF2ZSB0aG91Z2h0IHRoaXMgZmlsbSB3YXMgYSBnb29kIGlkZWEgc28gbXVjaCBhcyBpdCB3YXMgYW4gZWFzeSBwYXljaGVjay4gQmFzZWQgb24gdGhhdCwgc2F2ZSB5b3VyIHBheWNoZWNrLi4gCkluIGFkZGl0aW9uLCBhZXJvYmljIGV4ZXJjaXNlIGluIGNoaWxkaG9vZCBtaWdodCBpbmNyZWFzZSB0aGUgcmVzaWxpZW5jZSBvZiB0aGUgYnJhaW4gbGF0ZXIgaW4gbGlmZSwgcmVzdWx0aW5nIGluIGEgc28gY2FsbGVkIGNvZ25pdGl2ZSByZXNlcnZlLiAKVm9pY2kgY2UgcXVlIGRvbm5lIGxlIFdob2lzIDpBZG1pbiBOYW1lOiBUaGllcnJ5IENhc2Fzbm92YXNBZG1pbiBTdHJlZXQ6IExlIHBhaW4gZGUgc3VjcmVBZG1pbiBDaXR5OiBtb250ZXNjb3RBZG1pbiBTdGF0ZS9Qcm92aW5jZTogOTFBZG1pbiBQb3N0YWwgQ29kZTogNjYyMDBBZG1pbiBDb3VudHJ5OiBGUkwnYXNzb2NpYXRpb24gYSBzYSBib3V0aXF1ZS4gCkluIGxpZXUgb2YgZmxvd2VycywgZG9uYXRpb25zIHRvIHRoZSBQYWdudXR0aSBHcmFuZGNoaWxkcmVuJ3MgRWR1Y2F0aW9uYWwgVHJ1c3Qgd291bGQgYmUgYXBwcmVjaWF0ZWQuIApJdCB3YXMgcGFydCBvZiBhIHRlYWNoZXIgam9iIHRvIHB1dCB0aGUga2lkcyBpbiBsaW5lLiAKWW91IGtub3cgaG93IHlvdSBoYXZlIGEgZGlydCB3aGVlbGJhcnJvdz8gWW91IHNlbGwgaXQsIHRoYW4gbG9nIGJhY2sgb250byBwZXR2aWxsZS4gWW91IHdpbGwgaGF2ZSBpdCBhZ2Fpbi4gCkdhbWVzIGV4aXN0IHRvIGVudGVydGFpbiwgc29tZSBwZW9wbGUgZG9uIGZpbmQganVnZ2xpbmcgaW5mb3JtYXRpb24gZnVuLCBtYXliZSB0aGV5IGRvIGVub3VnaCB0aGlua2luZyBhbmQgcHJvYmxlbSBzb2x2aW5nIGluIHRoZWlyIHdvcmsgbGlmZSBhbmQgd2FudCBzb21ldGhpbmcgYnJhaW5sZXNzIHRvIHVud2luZCB3aXRoPyBDaGVja2VycyBkaWRuIGNlYXNlIHRvIGV4aXN0IHdoZW4gQ2hlc3Mgd2FzIGludmVudGVkLgpVbmQgZWluIHN0dW1wZmVyIDhoIEpvYiBvaG5lIFBhdXNlbiB1bmQgSGluIC9SY2tmYWhydCBzaW5kIG5pY2h0IHdpcmtsaWNoIGVyZmxsZW5kLiAKQnV0IGZvciBlYXNlIG9mIHVuZGVyc3RhbmRpbmcsIHdlIGNhbGwgT3NhbWEgYmluIE1vaGFtbWVkIGJpbiBBd2FkIGJpbiBMYWRlbiBzaW1wbHkgIk9zYW1hIGJpbiBMYWRlbiIuIApUdXJucyBvdXQgaXQgd2FzIGhlciBiZXN0ZnJpZW5kIChKb255KSB0aGV5IHdlcmUgcmVhbGx5IGNsb3NlLiAKSSBjYW4ndCB0ZWxsIHlvdSBob3cgZ29vZCBpdCBoYXMgYmVlbiB0byBoYXZlIHRoaXMgYmxvZy4gV2UgaGF2ZSBoZWFyZCBmcm9tIHNvIG1hbnkgcGVvcGxlIHdpdGggd2VsbCB3aXNoZXMgYW5kIHN1cHBvcnQsIGl0IGhhcyBqdXN0IGJlZW4gYW1hemluZy4gSSBmZWVsIGxpa2UgZWFjaCBhbmQgZXZlcnlvbmUgb2YgeW91IGFyZSBoZXJlIHdpdGggdXMsIHVyZ2luZyB1cyBhbG9uZyB3aXRoIGxvdmUgYW5kIGVuY291cmFnZW1lbnQuIApXYWx1amV3IHVuZCBBeGVsIFNjaHVseiBnZWx0ZW4gYWxzIGdlbHVuZ2VuZSBCZWlzcGllbGUgZnIgZGllIEludGVncmF0aW9uIGRlcyBzZWx0ZW4gZ2V3b3JkZW5lbiBIb21vIG5lYW5kZXJ0aGFsZW5zaXMgaW4gZWluZSB2b20gSG9tbyBzYXBpZW5zIHNhcGllbnMgc2FwaWVucyBzYXBpZW5zIHN1cGVyc3BhaWVucyBkb21pbmllcnRlIEt1bHR1ci4KSSBsaWtlIHRvIGdpdmUgYSBsaXR0bGUgYWN0aW9uIGF0IGhvbWUgZ2FtZXMgYXMgd2VsbDsgaXQgbWFrZXMgeW91IGZ1biB0byBwbGF5IHdpdGggYW5kIGluY3JlYXNlcyB0aGUgbGlrZWxpaG9vZCB5b3UgZ2V0IGludml0ZWQgYmFjay4gVGhpcyBkb2Vzbid0IG1lYW4geW91IGhhdmUgdG8gZ28gYmVyc2VyayBhbmQgZG9uYXRlIGJ1dCBpdCdzIG9rIHRvIDMgYmV0IG9yIHJhaXNlIHdpdGggc29tZSBqdW5rIGV2ZXJ5IG5vdyBhbmQgdGhlbjsgYWdhaW4gaWYgeW91IGRvbid0IGZlZWwgY29tZm9ydGFibGUgd2l0aCB0aGlzIHJldGhpbmsgaWYgeW91IGJlbG9uZyBpbiB0aGUgZ2FtZS4KT3ZlciAyMDBzIGlzIGxpdGVyYWwgZGVhdGggYW5kIGhhemFyZG91cyBlbm91Z2ggdG8gYmUgY29uc2lkZXJlZCBhbiBlbWVyZ2VuY3kgc2l0dWF0aW9uIGFjY29yZGluZyB0byB0aGUgQVFJIGNoYXJ0cy4gSSB0aGluayBLb3JlYSBoYXMgZXZlcnkgcmlnaHQgdG8gYmUgZnVyaW91cyBhbmQgYmxhbWluZyBDaGluYS50b2Z1eXVraSAgMSBwb2ludCAgc3VibWl0dGVkIDcgZGF5cyBhZ29ZZXMsIHRoYXQgeW91ciBlc3RpbWF0ZSBhbmQgSSBub3QgZ29pbmcgdG8gc2F5IHlvdSB3cm9uZyBidXQgdW5sZXNzIHdlIGNhbiBicmluZyBpbiBzb21lIGNvbmNyZXRlIHN0YXRpc3RpY3MgYW5kIGV2aWRlbmNlIG9uIHRoZSBhY3R1YWwgbnVtYmVycyBhbGwgd2UgY2FuIGRvIHNwZWN1bGF0ZSBhbmQgZ3Vlc3MuQXMgdG8gaG93IEkgY2FtZSB1cCB3aXRoIG15IGVzdGltYXRlcywgdGhlIGJpZ2dlc3QgYW5kIGNsb3Nlc3QgY29tcGFyaXNvbiB0byBTZW91bCB3b3VsZCBwcm9iYWJseSBiZSBUb2t5by4gCkhlYWQgb2YgTWFya2V0aW5nIGF0IEJvbWJheSBDb25uZWN0LCBSYWNobmEgVnlhcywgc2hhcmVkIGhlciB2aWV3cyBvbiBLaGVsUGxheSBGaWVzdGEgUG9rZXIgRXZlbnQgYXQgQm9tYmF5IENvbm5lY3QgICA/QXMgYSBnYW1lIHdoaWNoIGhhcyBiZWNvbWUgdGhlIGhhbGxtYXJrIG9mIHRoZSBpbnRlbGxpZ2VudHNpYSBhbmQgc3lub255bW91cyB3aXRoIHRoZSBmbGVkZ2xpbmcgbWV0cm9wb2xpdGFuIGF1ZGllbmNlLCBQb2tlciBoYXMgYmVjb21lIGludGVybWVzaGVkIHdpdGggdGhlIGN1bHR1cmFsIGlkZW50aXR5IG9mIGJpZyBjaXRpZXMgYWNyb3NzIHRoZSBnbG9iZSwgYW5kIE11bWJhaSwgZGVmaW5pdGVseSBjb3VudHMgb25lIGFtb25nc3QgdGhvc2UgY2l0aWVzLiBXZSBhcmUgaGFwcHkgdGhhdCB3ZSBnb3QgdGhlIG9wcG9ydHVuaXR5IHRvIHBsYXkgaG9zdCB0byBLaGVsUGxheSBGaWVzdGEuPy4gCkN1cHBpbmcgaW52b2x2ZXMgcGxhY2luZyBnbGFzcywgYmFtYm9vIG9yIHBsYXN0aWMgamFycyBvbiB0aGUgc2tpbiBhbmQgY3JlYXRpbmcgYSB2YWN1dW0gYnkgc3VjdGlvbmluZyBvdXQgdGhlIGFpci4gVGhlIHVuZGVybHlpbmcgdGlzc3VlIGlzIHJhaXNlZCwgb3Igc3Vja2VkLCBwYXJ0d2F5IGludG8gdGhlIGN1cC4gClByaWRlIGhhcyBkcnVnIHVzZSBiZWNhdXNlIGl0IGluIFNGLiAKVGlsdEp1aWNlIFRyaWVkIHVzaW5nIHRyYXAgZHJ1bXMgYW5kIDgwOHMgaW4gYSBiZWF0IGZvciB0aGUgZmlyc3QgdGltZSBnb3QgbXkgZnJpZW5kIHRvIGRyb3AgYSB2ZXJzZSBvdmVyIGl0LiBJIG5ldyB0byBtaXhpbmcgYW5kIGl0IHJlYWxseSBzaG93cyBoZXJlLiBBbnkgZmVlZGJhY2sgb24gdGhlIGJlYXQvdm9jYWxzL21peGluZyBtdWNoIGFwcHJlY2lhdGVkLgpSZWdhcmRsZXNzIG9mIHRoYXQgcXVpYmJsZSwgdGhvdWdoLCBJIGZlZWwgbGlrZSBJbmNlcHRpb24gaGVsZCBzbyB3ZWxsIGRlc3BpdGUgaXRzIENpbmVtYVNjb3JlIGJlY2F1c2UgaXQgZ290IHBlb3BsZSB0YWxraW5nIGFib3V0IGl0cyB0d2lzdHMgYW5kIHR1cm5zIGFuZCBhbWJpZ3VpdHkgb2YgbWVhbmluZy4gCllvdSBibHVmZiBtZT8/IERvIHlvdSBrbm93IHdobyBJIGFtPz8gY291cnNlLCBhcyB3ZWxsIGFzIEx1b25nbyBkaWQsIGhlIGRpZCBmYWlsIGF0IG9uZSB0aGluZy4gCkZvciB3aGF0IGl0IHdvcnRoLCBJIGRvIGNvbnNpZGVyIGJvdHRvbSB0byBiZSBhIHZhbHVlICAgb25lIHRoYXQgaW5oYWJpdHMgZXZlcnkgdHlwZTsgdGhlIG9ubHkgdmFsdWUgb2YgdHlwZSBmb3JhbGwgYS4gQS4gClNvcmUgQWNoaWxsZXMgSGVlbCBUZW5kb24KSUFtQSBMaWNlbnNlZCBNYXNzYWdlIFRoZXJhcGlzdCBBTUEKVGhlc2UgYXJlIG5vdCBqb2tlcywgdGhlc2UgYXJlIG5vdCBjcml0aWNpc21zLCB0aGV5IGFyZSBteXRocyBhbmQgaW52ZW50ZWQgbGllcyBzcGVjaWZpY2FsbHkgdG8gdGFyZ2V0IG9uZSBicmFuZCBhbmQgaGFyYXNzIHRoZWlyIG93bmVycy4KQ2hhdCB3aXRoIHRob3VzYW5kcyBvZiBzaW5nbGVzIG9ubGluZSAgIGNvbXBsZXRlbHkgZm9yIGZyZWUuQ2hhdCB3aXRoIGxvY2FsIHBlb3BsZSBuZWFyIHlvdSEgVGhpcyBwYWdlIGxpc3RzIGFsbCB0aGUgcHVibGljIGNoYXQgcm9vbXMgdGhhdCB5b3UgY2FuIGVudGVyLiAKQ2FtcGluZyBHcmltYmVyZ2VuCkkgdGhpbmsgeW91IG1hZGUgc21hcnQgZGVjaXNpb25zLiBPbmUgcGllY2Ugb2YgYWR2aWNlIEkgbGVhcm5lZCBpbiBhIHNlbGYgZGVmZW5zZSBjbGFzcyBpcyB0aGF0IGJlaW5nIG9uIHRoZSBwaG9uZSBpcyBhY3R1YWxseSBtb3JlIGRhbmdlcm91cyB0aGFuIG5vdCBiZWNhdXNlIGl0IHJlZHVjZXMgeW91ciBzaXR1YXRpb25hbCBhd2FyZW5lc3MgYW5kIGRvZXNuJ3QgcHJvdmlkZSB5b3Ugd2l0aCBhZGRpdGlvbmFsIHNlY3VyaXR5LCBqdXN0IGEgZmFsc2Ugc2Vuc2Ugb2YgaXQuIApJIHRydWVseSBkbyB0aGluayBteSByaWNlIGNvb2tlciBpcyAxMDAlIEJJRkwuIApDcmVhdGluZyB5b3VyIG93biAzNW1tIGZpbG0gaXMgYWxyZWFkeSBhIGJpdCBvZiBhIGNvbXBsaWNhdGVkIHByb2Nlc3MsIGFuZCBhZGRpbmcgdGhlIGRldmVsb3BpbmcgY2hlbWljYWwgcGFzdGUgaW50byB0aGUgbWl4IGZ1cnRoZXIgY29tcGxpY2F0ZXMgdGhpbmdzLiBUaGlzIHBhZ2UgaGFzIGEgZ29vZCBnbGltcHNlIGF0IHRoZSBjb21wbGV4IG5hdHVyZSBvZiBpbnN0YW50IGZpbG0uIFVubGVzcyB5b3UgaGF2ZSB0aGVzZSBzb3J0cyBvZiByZXNvdXJjZXMgYXQgeW91ciBkaXNwb3NhbCBhbHJlYWR5LCBJIGRvdWJ0IGl0IHdvdWxkIGJlIHdvcnRod2hpbGUuIApJIHJhdGhlciBub3QgaGF2ZSBhbm90aGVyIHJlYXNvbiB3aHkgc29tZW9uZSBjb3VsZCBiZSBwdXQgb24gYSBubyBmbHkgbGlzdC4gV2hvIGRldGVybWluZXMgd2hhdCBsZXZlbHMgYXJlIGZpbmU/IFdoZXJlIGRvIEkgZ28gdGVzdCB0aGlzPyBIb3cgb2Z0ZW4/IElzIHRoZXJlIGEgd2F5IG9mIHJldmVyc2luZyB0aGUgYmFuPyBTaG91bGQgdGhlIGdvdmVybm1lbnQgY2lyY3VtbmF2aWdhdGUgSElQUEE/IEhvdyBhYm91dCB0aG9zZSB0aGF0IHRoZSB2YWNjaW5hdGlvbnMgZGlkbiB3b3JrIG9uPyBCYXJyZWQgZnJvbSB0cmF2ZWwgZm9yIGxpZmU/LiAKQXQgZmlyc3QgSSB0aG91Z2h0IGJpZyBkZWFsIG9uIHRob3NlIHNob2VzLiAKTm90IGxvbmcgYWdvIEkgc2F3IGhlciBhZ2FpbiwgYWZ0ZXIgYWJvdXQgMTRpc2ggeWVhcnMgLiAKTW9yYWwgZ3JhbmRzdGFuZGluZyBhbmQgcGVhY29ja2luZy4gQXR0ZW1wdGluZyB0byBiZSBob25lc3QgaGVyZS4gClRydW1wLCBpbnN0ZWFkIG9mIGNvbnN1bHRpbmcgaGlzIHRlYW0gYW5kIGRvaW5nIGFsbCB0aGUgcGxhbm5pbmcgYWhlYWQgb2YgdGltZSwgd2FzIHNvIGRlc3BlcmF0ZSB0byBjaGFuZ2UgdGhlIHN0b3JpZXMgaW4gdGhlIG1lZGlhIHRoYXQgaGUgdG9sZCB0aGUgU291dGggS29yZWFucyB0byBhbm5vdW5jZSBoZSB3b3VsZCBtZWV0IHdpdGggS2ltLiBUaGUgU291dGggS29yZWFucyB3ZXJlIHNob2NrZWQuClNpbHZhJ3MgcmVsaWVmIHdhcyBldmlkZW50LiBFdmVydG9uIGZpbmlzaGVkIHRoZSBnYW1lIHdpdGggMTAgbWVuICAgTHVjYXMgRGlnbmUgd2FzIGRpc21pc3NlZCBmb3IgYSBwcm9mZXNzaW9uYWwgZm91bCAgIGFuZCBuZWVkZWQgYW4gaW5zcGlyZWQgcGVyZm9ybWFuY2UgZnJvbSBKb3JkYW4gUGlja2ZvcmQgaW4gdGhlIHNlY29uZCBoYWxmIHRvIGRlbnkgSmFuIFNpZXdlcnQgYSBmbHlpbmcgc3RhcnQgdG8gbGlmZSBhcyBIdWRkZXJzZmllbGQgbWFuYWdlci4KSXQgZ2l2ZXMgYSBtb3JlIG5hdHVyYWwgbG9vaywgcmF0aGVyIHRoYW4gbGVhdmluZyBzIGJsYW5rIHNwYWNlIGF0IHRoZSB0b3Agb2YgdGhlIHBhbG0KV2UgYmVsaWV2ZSB0aGVzZSBvdXRzdGFuZGluZyBhcHBsaWNhbnRzIHdpbGwgbWFrZSBhIHNpZ25pZmljYW50IGNvbnRyaWJ1dGlvbiB0byB0aGUgYWNhZGVtaWMgd29yayBvZiB0aGUgVW5pdmVyc2l0eSBhbmQgd2lsbCBnYWluIGltbWVuc2VseSBmcm9tIHRoZWlyIHRpbWUgd2l0aCB1cy4gV2UgaG9wZSB0aGF0IHRoZSB1bmNvbmRpdGlvbmFsIG9mZmVyIHdpbGwgZGVtb25zdHJhdGUgdG8gdGhlc2Ugb3V0c3RhbmRpbmcgc3R1ZGVudHMgb3VyIGNvbmZpZGVuY2UgdGhhdCB0aGV5IGhhdmUgdGhlIG5lY2Vzc2FyeSBxdWFsaXRpZXMgdG8gZXhjZWwgdGhyb3VnaCBvbmUgb2Ygb3VyIGRlZ3JlZSBwcm9ncmFtbWVzLiBXZSBhbHNvIGhvcGUgdGhhdCB0aGUgdW5jb25kaXRpb25hbCBvZmZlciB3aWxsIGFsbGV2aWF0ZSBzb21lIG9mIHRoZSBwcmVzc3VyZSBzdHVkZW50cyBmZWVsIGF0IHRoaXMgdGltZSBhbmQgd2lsbCBlbmFibGUgdGhlbSB0byBmb2N1cyBvbiBhY2hpZXZpbmcgdGhlIGV4Y2VsbGVudCBncmFkZXMgdGhhdCB3aWxsIGJlY29tZSBwYXJ0IG9mIHRoZWlyIGN1cnJpY3VsdW0gdml0YWUuClNheG9waG9uZXMgaGF2ZSBhbiBvY3RhdmUga2V5IHRoYXQgYnJlYWtzIHRoZSBmaW5nZXJpbmdzIGludG8gb2N0YXZlcy4gUGxheWluZyBqdXN0IHRoZSBpbmRleCBmaW5nZXIgaXMgYSBCLiBXaGVuIHRoZSBvY3RhdmUga2V5IGlzIHByZXNzZWQsIHRoYXQgQiBzb3VuZHMgYW4gb2N0YXZlIGhpZ2hlci4gQ2xhcmluZXRzLCBvbiB0aGUgb3RoZXIgaGFuZCwgaGF2ZSBhIHJlZ2lzdGVyIGtleSB0aGF0IGJyZWFrcyB0aGUgcmFuZ2UgaW50byByZWdpc3RlcnMuIE9uIGNsYXJpbmV0LCBwbGF5aW5nIGZpcnN0IGZpbmdlciBhbmQgdGh1bWIgaXMgYSBmaXJzdCBsaW5lIEUuIFdoZW4gdGhlIHJlZ2lzdGVyIGtleSBpcyBwcmVzc2VkLCB0aGF0IHNhbWUgZmluZ2VyaW5nIHNvdW5kcyBhIEIsIGFib3ZlIHRoZSBzdGFmZi4gVG8gZ2V0IGEgc2Vjb25kIHJlZ2lzdGVyIEUsIHRoZSByZWdpc3RlciBrZXksIHRoZSBlbnRpcmUgbGVmdCBoYW5kLCBhbmQgdGhlIGZpcnN0IHR3byBmaW5nZXJzIG9mIHRoZSByaWdodCBoYW5kIG5lZWQgdG8gY292ZXIgdGhlaXIgcmVzcGVjdGl2ZSBob2xlcy4gVGhlIGNsYXJpbmV0IGZpbmdlcmluZyBzeXN0ZW0gaXMgbW9yZSBjb21wbGljYXRlZC4KVGhlIE5hdGlvbmFsIEhlYWx0aGNhcmVlciBBc3NvY2lhdGlvbiAoTkhBKSBpcyB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBoZWFsdGggY2FyZWVyIGNlcnRpZmljYXRpb24gcHJvdmlkZXIuIE5IQSBpcyBhIGNvbXBhbnkgd2l0aGluIEFzY2VuZCBMZWFybmluZywgYSBsZWFkZXIgaW4gcHJvdmlkaW5nIHRlY2hub2xvZ3kgYmFzZWQgZWR1Y2F0aW9uYWwsIGFzc2Vzc21lbnQsIHRlc3RpbmcgYW5kIGNlcnRpZmljYXRpb24gc29sdXRpb25zIGZvciBoZWFsdGhjYXJlIGFuZCBvdGhlciB2b2NhdGlvbmFsIGZpZWxkcy4gT3ZlciB0aGUgbGFzdCAyNSB5ZWFycywgTkhBIGhhcyBjZXJ0aWZpZWQgbW9yZSB0aGFuIDUwMCwwMDAgYWxsaWVkIGhlYWx0aCBwcm9mZXNzaW9uYWxzIHdvcmtpbmcgZGlyZWN0bHkgd2l0aCBzY2hvb2xzIGFuZCBlbXBsb3llcnMgdG8gYWNoaWV2ZSB0aGVpciBjZXJ0aWZpY2F0aW9uIGdvYWxzLiBUb2RheSwgdGhlcmUncyBtb3JlIGRlbWFuZCB0aGFuIGV2ZXIgZm9yIGhpZ2hseSBza2lsbGVkIGZyb250bGluZSBwcmFjdGl0aW9uZXJzLiBOSEEgaXMgbWVldGluZyB0aGF0IGRlbWFuZCBieSBvZmZlcmluZyBleGFtcyBhY2NyZWRpdGVkIGJ5IFRoZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciBDZXJ0aWZ5aW5nIEFnZW5jaWVzIChOQ0NBKS4gSXQgaXMgb3VyIGJlbGllZiB0aGF0IHRvZ2V0aGVyLCBOSEEsIHNjaG9vbHMgYW5kIGVkdWNhdG9ycywgcHJvdmlkZXJzIGFuZCBhbGxpZWQgaGVhbHRoIHByYWN0aXRpb25lcnMgY2FuIHRyYW5zZm9ybSBoZWFsdGhjYXJlIHRocm91Z2ggZWR1Y2F0aW9uLCB0cmFpbmluZyBhbmQgY2VydGlmaWNhdGlvbiwgd2l0aCB0aGUgZ29hbCBvZiBjb25zaXN0ZW50bHkgaW1wcm92aW5nIHBhdGllbnQgb3V0Y29tZXMuCkkgd2FzIHZlcnkgcmVsdWN0YW50IHRvIHRha2UgdGhpcyBvcHRpb24sIGFuZCB0cmllZCB0byBjb252aW5jZSB0aGVtIGl0IHdhcyBiZXR0ZXIgdG8gd2FsayB0aGUgNSBob3VycyB0byB0aGUgbmV4dCBodXQgYW5kIHRha2UgYSBmdWxsIGRheXMgcmVzdCBiZWZvcmUgd2Fsa2luZyBvdXQgYXMgcGxhbm5lZCB0byBvdXIgYXJyYW5nZWQgcmlkZS4gCk1hciA2OkJvdWxkZXIgcG9saWNlIG9mZmljZXIgd2hvIGNvbmZyb250ZWQgYmxhY2sgbWFuIHBpY2tpbmcgdXAgdHJhc2ggb24gcGFpZCBsZWF2ZU1hciA0OkJvdWxkZXIgcG9saWNlIGxhdW5jaCBpbnZlc3RpZ2F0aW9uIGludG8gY29udGFjdCB3aXRoIG1hbiBwaWNraW5nIHVwIHRyYXNoQXVkaWVuY2UgbWVtYmVycyBhdCB0aGUgQm91bGRlciBDaXR5IENvdW5jaWwgbWVldGluZyBUdWVzZGF5IGhlbGQgYWxvZnQgdHJhc2ggZ3JhYmJlcnMgYW5kIGNsYWNrZWQgdGhlbSBhcyBQb2xpY2UgQ2hpZWYgR3JlZyBUZXN0YSBicmllZmVkIGNvdW5jaWwgbWVtYmVycyBhYm91dCBhbiBpbmNpZGVudCBpbiB3aGljaCBvZmZpY2VycyBjb25mcm9udGVkIGEgYmxhY2sgbWFuIHdobyB3YXMgcGlja2luZyB1cCB0cmFzaCBhdCBoaXMgb3duIGhvdXNlLk9uIEZyaWRheSBtb3JuaW5nLCBhIEJvdWxkZXIgcG9saWNlIG9mZmljZXIgYXNrZWQgdGhlIG1hbiwgd2hvIHdhcyBzaXR0aW5nIGluIGEgcGFydGlhbGx5IGVuY2xvc2VkIHBhdGlvIGFyZWEsIGlmIGhlIHdhcyBhbGxvd2VkIHRvIGJlIHRoZXJlLiBUaGUgbWFuIHRvbGQgdGhlIG9mZmljZXIgaGUgbGl2ZWQgYW5kIHdvcmtlZCBpbiB0aGUgYnVpbGRpbmcuIApIaXN0b3JpYW5zIHJlY29yZCBob3cgb25jZSBBbGljZSBSb29zZXZlbHQgTG9uZ3dvcnRoLCBUIFJvb3NldmVsdCBkYXVnaHRlciwgd2Fsa2VkIGludG8gdGhlIHByZXNpZGVudCBvZmZpY2UgYW5kIHdhcyBzaG9ja2VkIG91dCBvZiBoZXIgd2l0cyB0byBzZWUgb2YgY2FyZHMgYWxsIG92ZXIgdGhlIHByZXNpZGVudCBkZXNrLCB0YWxsIGdsYXNzZXMgb2Ygd2hpc2t5IChpbiB0aGUgbWlkZGxlIG9mIFByb2hpYml0aW9uKSwgdGhlIGFpciBoZWF2eSB3aXRoIGNpZ2FyIHNtb2tlIGFuZCB0aGUgT2hpbyBnYW5nIHNpdHRpbmcgd2l0aCBsZWdzIG9uIHRoZSB0YWJsZSwgYW5kIHRoZWlyIHZlc3RzIHVuYnV0dG9uZWQuIEFuZCBvZiBjb3Vyc2Ugd2UgcmVtZW1iZXIgQmlsbCBDbGludG9uIHdobyB3YXMgbm90b3Jpb3VzIGZvciBseWluZyB0aHJvdWdoIGhpcyB0ZWV0aCBhbmQgY2hlYXRpbmcgdGhyb3VnaCBoaXMgcGFudHMgZXhhY3RseSBhdCB0aGUgdGltZSBoZSB3YXMgdGFraW5nIGNvbnNlcXVlbnRpYWwgZGVjaXNpb25zIG9uIGdsb2JhbCBtYXR0ZXJzLi4gCkhlIGxpdmVkIGFsb25lIG1vc3RseSBleGNlcHQgZm9yIHRoZSByYW5kb20gZ2lybGZyaWVuZCBmb3IgYSBtb250aCBvciB0d28uIApEci4gQy4gV2FsdG9uIGFuZCBLYXllIExpbGxlaGVpIEZhbWlseTogJDE2IG1pbGxpb24gdG8gZXN0YWJsaXNoIHRoZSBMaWxsZWhlaSBIZWFydCBJbnN0aXR1dGUgaW4gdGhlIE1lZGljYWwgU2Nob29sIGFuZCB0byBmdW5kIHRoZSBLYXRoZXJpbmUgUi4gYW5kIEMuIFdhbHRvbiBMaWxsZWhlaSBDaGFpciBpbiBOdXJzaW5nIExlYWRlcnNoaXAuCklmIGl0IHdlcmVuIGZvciBteSBwYXJlbnRzIGhlbHBpbmcgbWUgSSB3b3VsZCBoYXZlIGJlZW4gaG9tZWxlc3MuIAoiSGUgd2FzIHNvbWVib2R5IGV2ZXJ5Ym9keSB3YXMgYWZyYWlkIG9mLCIgTGV3aXMgcmVjYWxsZWQgd2l0aCBhIGxhdWdoIGluIGEgcGhvbmUgaW50ZXJ2aWV3IGxhc3Qgd2Vlay4gIllvdSBnb3QgdGhlIHNlbnNlIHRoYXQgaWYgeW91IHNhaWQgc29tZXRoaW5nIHN0dXBpZCwgaGUgd291bGQgbGV0IHlvdSBrbm93IGl0LiBCdXQgZnJvbSB0aGUgbWludXRlIEkgbWV0IGhpbSwgSSBhZG9yZWQgaGltLiIKRm9yIGNoYXJhY3RlciBhZHZhbmNlbWVudCB5b3UgY2FuIGluY3JlYXNlIHlvdSBhdHRyaWJ1dGUgb3Igc2tpbGwgKG9yIGtpLCB0aGUgYWN0aW9uIHBvaW50IHZhbHVlKSB1c2luZyBBZHZhbmNlbWVudCBQb2ludHMgKG5hbWUgcGVuZGluZykgdGhhdCBhcmUgcmV3YXJkZWQgZm9yIGRlZmVhdGluZyBtYWpvciBlbmVtaWVzLCBvciBhdCB0aGUgR00gZGlzY3JldGlvbi4gCkFueXdheSwgaGUgYXMgcGlzc2VkIG9mZiBhYm91dCBpZGVudGl0eSBwb2xpdGljcyBhcyBhbnlvbmUgb24gaGVyZSBhbmQgd2hpbGUgaGUgbWF5IG5vdCBsb3ZlIG9yIGV2ZW4gbGlrZSBUcnVtcCwgaGUgYWN0dWFsbHkgZnVja2luZyBkZWZlbmRzIGhpbSB3aGVuZXZlciB0aGUgbWVkaWEgY29tZXMgb3V0IHdpdGggYW5vdGhlciBzZXJpZXMgb2YgYnVsbHNoaXQgdGFsa2luZyBwb2ludHMuIApJIGdldCB5b3VyIHBvaW50LCBidXQgSSBkb24gZmVlbCBsaWtlIGFueW9uZSBpcyBiZWluZyBkdXBlZCBvciBhbnl0aGluZy4gVGhpcyBndXkgaGFzIGJlZW4gdW5hcG9sb2dldGljYWxseSB3aG8gaGUgaXMgZnJvbSB0aGUgc3RhcnQsIGFuZCBoZSBnb3QgaGlzIHN0YXJzIHNwb25zb3JzaGlwIHdoaWxlIGJlaW5nIHRoYXQgd2F5LiBUaGlzIGlzbiBzb21ldGhpbmcgbmV3LiBUaG9zZSAxayB2aWV3ZXJzIGFyZSB3YXRjaGluZyB3aXRoIHRoZSBrbm93bGVkZ2UgdGhhdCB0aGlzIGtpbmQgb2YgdGhpbmcgd2lsbCBoYXBwZW4uIElmIHBlb3BsZSBvbiBwb2tlciBmb3J1bXMgZG9uIHdhbnQgdG8gd2F0Y2ggaGltIGtpc3MgaGlzIGdpcmxmcmllbmQsIHRoZXkgc2hvdWxkIHN0b3AgcG9zdGluZyBjbGlwcyBvZiBoaW0ga2lzc2luZyBoaXMgZ2lybGZyaWVuZCBhbmQgdXAgdm90aW5nIHRoZW0uIEkgc2VlIHlvdXIgcG9pbnQgdGhhdCBoZSBwdXR0aW5nIGl0IG91dCB0byB0aGUgcHVibGljLCBJIGp1c3QgbWFraW5nIHRoZSBkaXN0aW5jdGlvbiB0aGF0IGl0IG5vdCAiaW4gcHVibGljIiBpbiB0aGUgc2FtZSB3YXkuIEkgYWxzbyBkb24gc2VlIHdoeSBwZW9wbGUgZ2V0IHNvIHdlaXJkZWQgb3V0IGJ5IHBlb3BsZSBraXNzaW5nLiBJIHdvdWxkbiBkbyBpdCBwZXJzb25hbGx5LCBidXQgaXQgbm90IGxpa2Ugc29tZXRoaW5nIHNvIGdyb3NzIHRoYXQgSSBoYXZlIHRvIHR1cm4gaXQgb2ZmLiBUaGF0IGEgcGVyc29uYWwgb3BpbmlvbiB0aG91Z2ggdGhhdCBjbGVhcmx5IG5vdCBzaGFyZWQgYnkgZXZlcnlvbmUuIEFuZCBJIGdldCB0aGF0LgoiTW9tLCBJIHRvbGQgeW91IHRoaXMgd2FzIG5vdCB5b3VyIGFubm91bmNlbWVudCB0byBtYWtlLCBhbmQgeW91IGRpc3JlZ2FyZGVkIG15IGNsZWFybHkgbGFpZCBib3VuZGFyeSBhbnl3YXkuIFlvdSB3aWxsIG5vIGxvbmdlciBoYXZlIHRoZSBwcml2aWxlZ2Ugb2Yga25vd2luZyBhbnl0aGluZyBhYm91dCB0aGlzIHByZWduYW5jeSwgb3IgYWJvdXQgbWUgb3IgbXkgZmFtaWx5LCB1bnRpbCBJIGFtIGNlcnRhaW4gaXQgaXMgc29tZXRoaW5nIEknbSByZWFkeSBmb3IgeW91IHRvIGJsYWIgYWJvdXQuLiAKU3VjaCB0b3VybmFtZW50cyBjYXNoIGluIGEgaHVnZSBhbW91bnQgb2YgSW50ZXJuZXQgdHJhZmZpYy4uIApCaWcgZGVhbCwgcmlnaHQ/IExvdHMgb2Yga2luZ3MgaGF2ZSBiZWVuIG11cmRlcmVkLiBOb3QgdGhpcyB3YXksIHRob3VnaC4gCkludGVybmV0IFN1cHBvcnQgR3JvdXAgZm9yIHRoZSBDcmVlcGVkCkhvdyBhYm91dCBhIGNvbWVkeSwgQmlsb3hpIExpdHRsZSBUaGVhdHJlIGlzIGJyaW5pbmcgdG8gc3RhZ2UgIllvdSBDYW4ndCBUYWtlIGl0IFdpdGggWW91LiIgVGhlIHN0b3J5IG9mIGFuIGVjY2VudHJpYyBmYW1pbHkgd2lsbCBrZWVwIHlvdSBsYXVnaGluZyBhbGwgbmlnaHQgbG9uZy4KSSBjb25zZXJ2YXRpdmUgYWJvdXQgZHJhcGluZyBzbyBJIHRlbGwgdGhlbSB0aGF0IEkgd29uIHJlYWxseSBrbm93IHRoZSBkaWZmZXJlbmNlIGVpdGhlciB3YXkuIElmIHlvdSB3YW50IGludGVuc2UgZ2x1dGUgd29yayB0aGVuIEkgd291bGQgcmVjb21tZW5kIGdvaW5nIHdpdGhvdXQuIEl0IG5vdCBva2F5IGZvciBhIHRoZXJhcGlzdCB0byBtb3ZlIHRoZSBzaGVldCBmYXIgZW5vdWdoIHRvIGV4cG9zZSB5b3VyIGNyYWNrIHNvIGFzIGxvbmcgYXMgeW91IGNvbWZvcnRhYmxlIHdpdGggYSBjaGVlayBjb21pbmcgb3V0IGR1cmluZyBpbnRlbnNlIGdsdXRlIGFuZCBoaXAgd29yayB0aGVuIHdlIGNvb2wgd2l0aCBpdC4gCkVkaXQgOiBmb3IgYWxsIHRob3NlIHdvbmRlcmluZyBJIG1vc3RseSBqdXN0IHJlZmVycmluZyB0byB0aGUgWW91bmdlciBEcnlhcyBJbXBhY3QgSHlwb3RoZXNpcyBvciB0aGUgdGhlb3J5IHB1dCBmb3J3YXJkIGJ5IFJvYmVydCBTY2hvY2ggZGV0YWlsaW5nIGEgcG9zc2libGUgc29sYXIgbWF4aW11bSB0aGF0IGNyZWF0ZWQgY2hhb3MgZWxlY3RyaWNhbCBzdG9ybXMuIApUd28geWVhcnMgYWdvIG9uZSBvZiBteSB0ZWFjaGVycyBjbGVhbmVkIG91dCBoaXMgY2xvc2V0IChzbyBoZSBzYXlzKSBhbmQgaGFuZGVkIG1lIGEgbGFwdG9wIGJhZy4gSW5zaWRlIHdhcyBhIENvbXBhcSBsYXB0b3Agd2l0aCBvbmUgb2YgdGhvc2UgdHJhY2sgYmFsbCBtaWNlIHJ1bm5pbmcgV2luZG93cyA5NS4gClRoZSBjYXJkcyBlamVjdCBiZWF1dGlmdWxseSBmcm9tIHRoZSB0b3AgdHJheSBhbmQgeW91J2xsIGZpbmQgdGhhdCB5b3UgY2FuIGFjdGl2YXRlIGEgdGFibGUgdG9wIG1vZGUgb3IgYSBmbHVzaCBtb3VudCBtb2RlLiAKU2FtcGxlcyBhcmUgbm90IHRpY2tldGVkIGFuZCBhdHRlbmRlZXMgYXJlIGVuY291cmFnZWQgdG8gdHJ5IHNwaXJpdHMgd2l0aG91dCB0aGUgcHJlc3N1cmUgb2YgZmluaXNoaW5nIGV2ZXJ5IGRyb3A7IHRoZSB2ZW51ZSBpcyBub3Qgc29sZCB0byBtYXhpbXVtIGNhcGFjaXR5IGxlYXZpbmcgcm9vbSB0byBtb3ZlLCBhbmQgc2hvcnQgbGluZXVwcy4gClRoaXMgaXMgd2hlcmUgdGhlIHdob2xlIG5lZ2F0aXZlIG1haW5zdHJlYW0gZXZlcnl0aGluZyBhcmlzZXMgZnJvbSwgZXZlcnl0aGluZyBpcyB0dXJuZWQgdXBzaWRlIGRvd24gYmVjYXVzZSBvZiB0aGlzLiBUaGUgbWVkaWEsIGJpZyBwaGFybWEsIGVkdWNhdGlvbiwgc2NpZW5jZSwgZGVmZW5zZSwgZ292ZXJubWVudCwgZW5lcmd5IHNvdXJjZXMgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBpcyBwYXJ0IG9mIHRoZSBzYW1lIHJvdHRlbiBzeXN0ZW0sIGRlc2lnbmVkIGFyb3VuZCBodW1hbnMgaW4gb3JkZXIgdG8ga2VlcCBjb250cm9sIG9mIHVzLiAidGhleSIgYWxzbyB1c2UgZXZlcnl0aGluZyB0aGV5IGNhbiB0aGluayBvZiB0byBoYXZlIG1vcmUgZGlyZWN0IGNvbnRyb2wgb3ZlciB1cywgdGhpcyBpcyB3aGVyZSB0aGUgY29uc3BpcmFjaWVzIHRpZSBpbnRvIHRoaXMgc3RvcnkuIE1vc3QgY29uc3BpcmFjaWVzIGludm9sdmUgd2VhcG9ucywgY3JhZnRzLCBhbmQgb3RoZXIgZWxlY3Ryb25pY3MgdGhhdCBtYWtlIHVzZSBvZiB0aGlzIHNjaWVuY2UgdGhhdCBpcyBub3QgeWV0IGtub3cgaW4gdGhlIG1haW5zdHJlYW0gY29uc2Npb3VzbmVzcy4gQW5kIGlmIHNvbWVib2R5IGFjY2lkZW50YWxseSBpbnZlbnRzIGEgZnJlZSBlbmVyZ3kgZGV2aWNlIG9yIGdhaW5zIG90aGVyIGtub3dsZWRnZSB0aGF0IHdvdWxkIGJlbmVmaXQgSHVtYW5pdHksIHRoZXkgYW5kIHRoZWlyIGludmVudGlvbnMgd2lsbCBiZSBidXJpZWQgc29vbi4KVGhpcyBzZWVtcyBsaWtlIGEgc21hbGwgcHJvZ3Jlc3Npb24sIGJ1dCBpdCBjYW4gdGFrZSBhIGxvdCBvZiBlZmZvcnQuIEl0IGlzIGVzc2VudGlhbGx5IHRoZSBzYW1lIGFzIHN0ZXAgb25lLCBleGNlcHQgeW91IG5vdyBwdXNoIHRoZSB3YXRlciBvdXQgb2YgeW91ciBtb3V0aCwgcmF0aGVyIHRoYW4ganVzdCBsZXR0aW5nIGl0IGRyYWluIG91dC4gVG8gZG8gdGhpcywgeW91IHNob3VsZCB1c2UgeW91ciBjaGVla3MgYW5kIHRvbmd1ZSAgIG5vdCBhaXIgcHJlc3N1cmUgZnJvbSB5b3VyIGx1bmdzLiBPbmNlIHlvdSd2ZSBnb3QgdXNlZCB0byBwdXNoaW5nIHRoZSB3YXRlciBvdXQsIHN0YXJ0IGJyZWF0aGluZyB0aHJvdWdoIHlvdXIgbm9zZSBhZ2Fpbi4gVGhpcyBpcyB0aGUgYmFzaXMgb2YgY2lyY3VsYXIgYnJlYXRoaW5nLiBZb3Ugbm93IGhhdmUgdG8gdHJhbnNmZXIgdGhpcyBza2lsbCB0byBwdXNoaW5nIGFpciwgcmF0aGVyIHRoYW4gd2F0ZXIsIG91dCBvZiB5b3VyIG1vdXRoLgpHdXlzIGxvb2sgZG93biBvbiBpdCBpdCBnaXJsaWUgb3Igd2hhdGV2ZXIgeW91IHdhbnQgdG8gY2FsbCBpdCwgYnV0IEkgZG9uZSBpdCBmcm9tIHRoZSBiZWdpbm5pbmcgYmVjYXVzZSBpdCBsaWtlIHRha2luZyBjYXJlIG9mIHlvdXIgYm9keS4gSnVzdCBsaWtlIGFueXRoaW5nIGVsc2UgeW91IGRvLCBnZXR0aW5nIGEgbWFzc2FnZSBvciB0cmVhdG1lbnQsIEF1Z3VzdGluIHNhaWQuIGhhZCBzaXR1YXRpb25zIGJlZm9yZSB3aXRoIG15IHRvZW5haWxzLCBvciBteSBjYWxsdXMgb24gbXkgZmVldCwgd291bGQgaHVydCBteSBmZWV0IGR1cmluZyBnYW1lcy4gSXQgbWFrZXMgYSBiaWcgZGlmZmVyZW5jZS4gVGhlc2UgYXRobGV0aWMgbWFlc3Ryb3MgY2FuIGluc3BpcmUgYmFsbGFkcyBvbiB0aGUgYmFza2V0YmFsbCBjb3VydC4gQnV0IG9uY2UgdGhleSB0YWtlIG9mZiB0aGVpciBzaG9lcyBhbmQgcmV2ZWFsIHRoZSBpbnN0cnVtZW50IHdpdGggd2hpY2ggdGhleSBoYXZlIGNyZWF0ZWQgc3VjaCBiZWF1dHksIHRoZWlyIGhpZGVvdXMgZmVldCBjYW4gaW5jaXRlIGdhc3BzLgpZZXMsIEkgYWdyZWUgdGhhdCBoZSBkZWNpZGVkIHRvIGp1c3QgZG8gaXQgYW55d2F5IHdoZW4geW91IHNhaWQgbm8uIEkgZG9uJ3Qga25vdyBpZiBoZSdzIGFkZGljdGVkLCBidXQgaGUgaXMgY2VydGFpbmx5IHVud2lsbGluZyB0byBzdG9wIHBsYXlpbmcgcG9rZXIgYW5kIGxpdmluZyB0aGlzIGxpZmVzdHlsZS4gV2l0aCB0aGF0IGJlaW5nIHNhaWQsIGl0IHdvdWxkIGFwcGVhciB0aGF0IHlvdSBjb21wbGV0ZWx5IHJ1Z3N3ZXB0IGhpcyBjaGVhdGluZyBhbmQgbm93IHRob3NlIGNoaWNrZW5zIGFyZSBjb21pbmcgaG9tZSB0byByb29zdCwgc28gdG8gc3BlYWsuIApZb3VyIHF1ZXN0aW9uIGhhcyBub3RoaW5nIGluIGl0IHRoYXQgaXMgZnVuZGFtZW50YWwgdG8gbGFuZ3VhZ2UgbGVhcm5pbmcuIApOb3cgSSByZWFkIHRoYXQgdGhlIHJlY2VudCBzbm93cyBpbiB0aGUgVVMgYXJlIGdpdmluZyB0aGUgIm90aGVyIHNpZGUiIG9mIHRoZSBnbG9iYWwgd2FybWluZyBkZWJhdGUgYW1tdW5pdGlvbi4gdGhlIG90aGVyIHNpZGUgYXMgaW4gImdyZWVkIGlzIGdvb2QsIGxldCBub3QgcmVndWxhdGUgaW5kdXN0cnkiIGJ1dCB0aGUgb3RoZXIgc2lkZSBhcyBpbiAidGhlcmUgYSBiaWcgc25vdyBzdG9ybSBzbyBJIGd1ZXNzIHRoZXJlIG5vIHN1Y2ggdGhpbmcgYXMgZ2xvYmFsIHdhcm1pbmcuIgpTbyBsb25nIGFzIHlvdSB0b28gY2FuIGFsc28gaGFuZGxlIHRoZSB0aHJlc2hvbGQgd2hlbiB0aGV5IGNhbGwgd2l0aCBzYXkgVDdzIGhlcmUuLiAKSGUgZ29lcyBvbiBtb25rZXkgdGlsdCBhbmQgZG9ua3Mgb2ZmIDIgYnV5aW5zIGJlZm9yZSBzdG9ybWluZyBvdXQgb2YgdGhlIHBva2VyIHJvb20uLiAKVGhlIGlzc3VlIGhlcmUgaXMgdGhhdCwgc2luY2UgeW91IGRyaWJibGUgYXdheSBmcm9tIHRoZSBkb3VibGUgdGVhbSwgeW91IGRvbiBhY3R1YWxseSBnZXQgdHJhcHBlZCB0aWwgeW91IG9uIHRoZSBiYXNlbGluZS4gCk9uIHRoZSBvbmUgaGFuZCwgZGV2b3RlZXMgb2YgdGhlICJoYXJkIHNlbGwsIiBvciBwZXJzdWFzaW9uIGJhc2VkIGNvbW11bmljYXRpb25zLCBhcmd1ZSB0aGF0IGZhY3RzIGFuZCByYXRpb25hbCBhcmd1bWVudHMgc2VsbCBwcm9kdWN0cyBhbmQgc2VydmljZXMgYmVzdC4gClVuZm9ydHVuYXRlbHkgSSBhbHNvIG9uIGFuIHVuYXZvaWRhYmxlIG1lZGljYXRpb24gd2hpY2ggc29tZXRpbWVzIGFmZmVjdHMgbXkgZXllIHNpZ2h0LiBUaGVyZSBpcyBhIHNpZGUgZWZmZWN0IG1lZGljYXRpb24gSSBiZWVuIGdpdmVuIGhvd2V2ZXIgbXkgZG9jdG9yIHJlZnVzZXMgdG8gZ2l2ZSBtZSBlbm91Z2ggdG8gdGFrZSBkYWlseSBkdXJpbmcgdGhlIHRyYWluaW5nIGNpdGluZyAiaXQgdG9vIGRhbmdlcm91cyBhbmQgYWRkaWN0aXZlLiIuIApUaGUgdHdvIGNvbXBldGluZyBwb3dlcnMgbW92ZWQgaW4gYSBnYW1lIG9mIG51Y2xlYXIgcG9rZXIsIGNoYWxsZW5naW5nIGVhY2ggb3RoZXIgaW5mbHVlbmNlIGluIHR3byBkaXNwYXJhdGUgc2lkZXMgb2YgdGhlIHdvcmxkLiAKVGhlIGNhdXNlIG9mIFBORCBpcyBub3Qga25vd24sIGFsdGhvdWdoIG1hbnkgZG9jdG9ycyBoYXZlIHN1Z2dlc3RlZCBtYW55IHBvc3NpYmxlIGNhdXNlcy4gU29tZSBtb3RoZXJzIGdldCBpdCBzdWRkZW5seSBhZnRlciB0aGVpciBzZWNvbmQgb3IgdGhpcmQgY2hpbGQsIGhhdmluZyBiZWVuIGZpbmUgYWZ0ZXIgdGhlaXIgb3RoZXIgcHJlZ25hbmNpZXMuIApGYXJvb3EgU2F0dGFyIGFkZGVkIG1vcmUgZmVhciBieSBzYXlpbmcgdGhhdCAiaWYgdGhpcyBnb2VzIG9uIGxpa2UgdGhpcyB0aGUgbGFzdCByZWZ1Z2Ugb2YgUGFybGlhbWVudCBtaWdodCBiZWNvbWUgdGhlIGxhc3QgZ3JhdmUuIiBUaGUgam9rZSBpbiBjaXJjdWxhdGlvbiB3YXMgdGhhdCBzb21lIG1lbWJlcnMgY29udGVtcGxhdGVkIG1vdmluZyBwcmVjaW91cyBpdGVtcyBmcm9tIFBhcmxpYW1lbnRhcnkgTG9kZ2VzIGxlc3QgdGhleSBtaWdodCBub3QgZ2V0IGFub3RoZXIgY2hhbmNlLiAKSSBsb3ZlIHRoZSB0aHJlYWRzIHdoZXJlIHBlb3BsZSBhc2sgd2hlcmUgdG8gZWF0IG9yIHdoYXQgdG8gZG8gYW5kIHJlZ3VsYXJseSBzYXZlIHRoZW0uIEkgYWxzbyBnZXQgYW5ub3llZCB3aXRoIHRoZSBuZWdhdGl2ZSBjb21tZW50cyBidXQgcGxlYXNlIGtub3cgdGhvc2Ugd2hvIGFuc3dlciB3aXRoIGhvbmVzdCBzdWdnZXN0aW9ucyBhcmUgZG9pbmcgc29tZSBnb29kLiBUaGFua3MgdG8gdGhpcyBzdWIgSSBjb250aW51aW5nIHRvIGZpbmQgbmV3IHRoaW5ncyB0byBsb3ZlIGFib3V0IG15IG5ldyBob21lLgpPciBhdCBsZWFzdCBtb3N0IG9mIHVzIGZlbHQgdGhpcyBwcmVzc3VyZS4gQmVjYXVzZSBhIHBlcnNvbiBzZW5zZSBvZiBlY29ub21pYyBzZWN1cml0eSwgYmV5b25kIHRoZSBiYXNpYyAiZm9vZCBhbmQgc2hlbHRlciIgc3R1ZmYsIGlzIHJlYWxseSBhYm91dCB3aGF0IHdlIHRoaW5rIG90aGVyIHBlb3BsZSBoYXZlLiAKVGhlc2UgZGF5cywgYWxtb3N0IGV2ZXJ5IHBvcHVsYXIgY2FyZCBnYW1lLCBib2FyZCBnYW1lIG9yIGV2ZW4gc3BvcnRzIGdhbWVzIGhhdmUgYW4gb25saW5lIGNvdW50ZXJwYXJ0LiAKV2l0aCBhbiBhbGx1cmluZyBNZWRpdGVycmFuZWFuIGNsaW1hdGUsIHRoZSBiZWFjaGVzIGFyZSB0aGUgcGxhY2UgdG8gYmUgaW4gUG9ydHVnYWwncyBzb3V0aGVybm1vc3QgcmVnaW9uLiBJbiBmYWN0LCBuZWFybHkgYWxsIG9mIEFsZ2FydmUncyB0b3AgYXR0cmFjdGlvbnMgYXJlIHByYWlhcyAoYmVhY2hlcykgb3Igd2F0ZXIgc3BvcnRzIGxpa2Ugc3VyZmluZywgd2FrZWJvYXJkaW5nLCBzbm9ya2VsaW5nIGFuZCBkaXZpbmcuIEFtb25nIHRoZSBiZXN0IHJhdGVkIGJlYWNoZXMgaW4gdGhlIHJlZ2lvbiBhcmUgT2RlY2VpeGUgQmVhY2ggaW4gQWxqZXp1ciwgUHJhaWEgZGEgRmFsZXNpYSBpbiBPbGhvcyBkZSBBZ3VhLCBQcmFpYSBkZSBNYXJpbmhhIGluIENhcnZvZWlybyBhbmQgUHJhaWEgZGEgRmFsZXNpYSBpbiBBbGJ1ZmVpcmEuIFZpc2l0b3JzIHdpbGwgYWxzbyBlbmpveSBzcGVjdGFjdWxhciB2aXN0YXMgYXQgcGxhY2VzIGxpa2UgdGhlIHdvcmxkIGZhbW91cyBQb250YSBkZSBQaWVkYWRlIGluIExhZ29zLCBDYXBlIFNhaW50IFZpbmNlbnQgaW4gU2FncmVzIGFuZCBBbGdhciBTZWNvIGluIENhcnZvZWlyby4KU29tZXRoaW5nIGRvZXMgbm90IGFkZCB1cC4gMCBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvQnV0IGF0IHRoZSBzYW1lIHRpbWUsIGlmIHNvbWV0aGluZyBpc24gZG9uZSBhdCB0aGUgbGVnaXNsYXRpdmUgbGV2ZWwsIHRoZW4gaXQgZ29pbmcgdG8ga2VlcCBoYXBwZW5pbmcsIGFuZCBuZXh0IHRpbWUgd2lsbCBiZSBiaWdnZXIsIGFzIHRoZSBoaXN0b3J5IG9mIHRoZXNlIGV2ZW50cyBoYXZlIHByb3Zlbi5XaGVuIGl0IGNvbWVzIHRvIGEgZGlzY3Vzc2lvbiBvZiB3aGF0IHRvIGRvOiBEbyB5b3UgdHJ5IHRvIG1ha2UgdGhlIGJpZ2dlc3Qgc3dlZXBpbmcgY2hhbmdlLCB0aGF0IHdpbGwgYmUgaGFyZCBmb3VnaHQgICBvciBkbyB5b3UgZ28gZm9yIGEgcXVpY2sgaW1wbGVtZW50YXRpb24gdGhhdCB3aWxsIGJlIHJlYXNvbmFibGUgYW5kIG5lYXJseSBpbW1lZGlhdGU/IElmIHdlIHRha2UgYXQgbGVhc3QgdGhlIHF1aWNrIGltcGxlbWVudGF0aW9uIHJpZ2h0IG5vdywgd2UgY2FuIGtlZXAgdGhlIGNvcHljYXRzIGF0IGJheSwgYnV0IHRoZSBuZXh0IG1hc3MgY2FzdWFsdHkgZXZlbnQgd2lsbCBhbHdheXMgY29tZSBhcyBhIHNob2NrLiAKVGhlbiB0b2xkIGhpbSBJIHdhcyBjaGVhdGluZyBvbiBoaW0sIHdoaWNoIEkgd2FzbiBIZSBkcm92ZSB0aGUgMiBob3VycyB0byBzZWUgbWUgd2l0aG91dCBtZSBrbm93aW5nIGFuZCBub3QgcmVhbGl6aW5nIHdoeSBoZSBzaG93ZWQgdXAuIApJIGhhbGYgdGhvdWdodCBldmVyeW9uZSB3YXMgam9raW5nIHdpdGggbWUgdW50aWwgdGhlIGRlYWxlciBkZWFsdCBtZSBhY2VzIHRoZSBuZXh0IGhhbmQgYW5kIHRoZW4gdG9sZCBtZSBJIHdhcyByZXF1aXJlZCB0byBmb2xkIHRoZSBoYW5kLiBUaGUgcmVzdCBvZiB0aGUgdGFibGUgd2FzIHNlZW1pbmdseSBhbXVzZWQuLiAKSSBhbSBXQVkgYmV0dGVyLiBUZW4geWVhcnMgYWdvIEkgd2FzIGluIGhpZ2ggc2Nob29sLiBJIHN0aWxsIGhhdmUgbmlnaHRtYXJlcyBhYm91dCB0aGF0IHRpbWUuIFdoZW4gcGVvcGxlIHNhaWQgImhpZ2ggc2Nob29sIGlzIHRoZSBiZXN0IHRpbWUgb2YgeW91ciBsaWZlLCBlbmpveSBpdCEiIEkgd2FzIGFsd2F5cyBsaWtlLCBJIHN1cmUgaG9wZSBpdCBub3QgdGhlIGJlc3QgYmVjYXVzZSBhcyBhIG5lcmR5IG5vdCBwYXJ0aWN1bGFybHkgYXR0cmFjdGl2ZSBnaXJsIHdpdGggYmFkIHNvY2lhbCBza2lsbHMsIGl0IFNVVVVVVVVDS0VELiBQbHVzIG15IHBhcmVudHMgaGFkIGp1c3QgZGl2b3JjZWQgc28gdGhlcmUgd2FzIHNvIG11Y2ggZHJhbWEuIEFuZCB0byB0b3AgaXQgb2ZmIEkgaGFkIHVudHJlYXRlZCBPQ0QgYW5kIGdlbmVyYWxpemVkIGFueGlldHkgZGlzb3JkZXIuCkEgcHJvZHVjZXIgaXMgYWx3YXlzLCBieSBuZWNlc3NpdHksIGEgc2VsbGVyIGFzIHdlbGwuIApXYWl0aW5nIGZvciByYWluIHBlcmhhcHM/IFdlIGJvb2tlZCBpdCBhZnRlciBsb29raW5nIGF0IHRoZSBob3VzZS4uIApJcyBhIGdyZWF0IHN0cmF0ZWdpYyBmaXQuIEhlIG1hZGUgYSBsb3Qgb2YgZGVhbHMgb24gdGhlIGZvb2Qgc2lkZSBhbmQgaGUgaGFzIGEgcGFzc2lvbiB0byBoZWxwIHRoaXMgYnVzaW5lc3MgZ3Jvdy4gSGFzIGJlZW4gZG9pbmcganVzdCB0aGF0IHNpbmNlIHRoZSBlcGlzb2RlIHdhcyBmaWxtZWQgbGFzdCBzcHJpbmcuIApXaW5kc29yIEVzc2V4IHB1YmxpYyBoZWFsdGggbnVyc2VzIHRvb2sgdG8gdGhlIHBpY2tldCBsaW5lIEZyaWRheSwgZGVtYW5kaW5nIGJldHRlciB3YWdlcyBhbmQgbW9yZSByZXNwZWN0LgpUaGVzZSBpc3N1ZXMgYXJlIHlvdXIgcHJvYmxlbXMgYW5kIHlvdXIgcHJvYmxlbXMgYWxvbmUuIApUaGVyZSBhcmUgc29tZSBiaWcgbmFtZXMgaW4gdGhlIG1peGluZyBnYW1lIHRoYXQgZG8gODAlIG9mIHRoZXlyIG1peGVzIGluIG1vbm8gKHNvbWV0aW1lIG9uCkFsc28gdGhlc2Ugc29pbHMgYXJlIGJldHRlciBhdCBpbmZpbHRyYXRpbmcgd2F0ZXIgcmVzdWx0aW5nIGluIG1pbmltYWwgcnVub2ZmLgpPY2Vhbi4gTm90IGEgZmFuLiBQb2ludHkgbGl0dGxlIHNoZWxscyBhbmQgcm9ja3MgdG8gY3V0IHlvdXIgZmVldC4gU3F1aXJteSBiaXRleSBjcmFicy4gSmVsbHlmaXNoLiBXYXZlcyB0aGF0IGNvbWUgdXAgb3V0IG9mIG5vd2hlcmUgYW5kIGtub2NrIHlvdSBpbnRvIGEgY2h1cm5pbmcsIGdhc3BpbmcsIHRlcnJpZnlpbmcgdm9ydGV4IG9mIHBvd2VyZnVsIHdhdGVyLiBSaXAgdGlkZXMuClphY2sgTWFjRXdlbiBmaW5hbGx5IGdldHMgcmVjYWxsIGFmdGVyIGdyb3dpbmcgZ2FtZSB3aXRoIENvbWV0cwpTZWNvbmQgZWRpdDogQWZ0ZXIgcmVhZGluZyB5b3VyIHF1ZXN0aW9uIGFnYWluLiBZZXMsIGFuIFNTTyB3aG8gd2FudHMgdG8gYmVjb21lIGEgR1NPIHdpbGwgc3RhcnQgYXQgdGhlIGJvdHRvbSAoTFQsIGJlY2F1c2UgMkxUIGlzIG5vIGxvbmdlciBhIHJhbmspLiBUaGlzIGlzIGJlY2F1c2UgU1NPcyBhcmUgbm90IGVxdWlwcGVkIHdpdGggdGhlIG5lY2Vzc2FyeSBnZW5lcmFsIG9mZmljZXIgc2tpbGxzIHRvIHBlcmZvcm0gYXMgYSBHU08uIApZb3UndmUgYmVlbiBwbGF5aW5nIHByb2Zlc3Npb25hbGx5IGZvciBzaXggeWVhcnMuIEF0IHdoYXQgcG9pbnQgaW4geW91ciBjYXJlZXIgZGlkIHlvdSBzdGFydCB0aGlua2luZyB5b3UgY291bGQgd2luIHRoZSBNYWluIEV2ZW50PwpZb3Ugb2ZmZXIgbWUgaWNlIGNyZWFtLCBJIGRvbid0IGhhcHBlbiB0byB3YW50IGljZSBjcmVhbSByaWdodCBub3csIHNvIEkgZGVjbGluZS4gWW91IGFyZSB0aGVuIHRvIHN0b3AgdHJ5aW5nIHRvIG1ha2UgbWUgZWF0IHRoZSBkYW1uIGljZSBjcmVhbS5NYXliZSBsYXRlciBvbiBzaGUgd2lsbCB3YW50IHNvbWUgaWNlIGNyZWFtIGFuZCBnaXZlIHlvdSBhIGNhbGwsIG90aGVyd2lzZSB5b3UnbGwganVzdCBiZSBwZXN0ZXJpbmcgaGVyIHdpdGggb2ZmZXJzIGZvciBzb21ldGhpbmcgc2hlIGNsZWFybHkgc3RhdGVkIHNoZSBkb2VzIG5vdCB3YW50LkdhcmJhZ2VHYXRvICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIG1ha2UgYmF0Y2hlcyBvZiBob21lIG1hZGUgbWFyaW5hcmEgKGFrYSBncmF2eSkgd2l0aCBtZWF0YmFsbHMgYW5kIHNhdXNhZ2UsIGFuZCBzdG9yZSBpdCB1cCB1c3VhbGx5IGluIDEwIG9yIHNvIGNvbnRhaW5lcnMgYW5kIGZyZWV6ZSBpdCB0byBiZSBlYXRlbiB3aGVuZXZlci4gCkdyZWF0IHdyaXRlIHVwIFJpY2hhcmQhIEkgaGF2ZSB1c2VkIHRoaXMgVHlwZWQgUG9sbGluZyBhbmQgd2FzIHZlcnkgaGFwcHkgd2l0aCBpdC4gSSBoYWQgdGhvdWdodCB0aGUgZGViYXRjaGluZyB3b3VsZCB3b3JrIHRoYXQgd2F5LCBidXQgbmV2ZXIgZGlkIGl0IGFuZCBhbSByZWFsbHkgZ2xhZCB0byBoZWFyIGFib3V0IGl0LiBJIHdpbGwgaW5jbHVkZSB0aGlzIGluIG15IHRyYWluaW5nIGNvdXJzZSBub3cgYmVjYXVzZSB0aGUgb2xkIEFkYXB0ZXIgbWFkZSB0aGlzIHNvcnQgb2YgYSBwYWluIChldmVuIG1vcmUgc28gZm9yIHBlb3BsZSBuZXcgdG8gQml6VGFsaykuCkxhd21ha2VycyBhcmUgbm93IHVuYW5pbW91c2x5IG9wcG9zZWQgdG8gYmFua2luZyByZWZvcm0uIHdvcnNlLCB0aGUgR09QIGFuZCBpdHMgcHJvcGFnYW5kYSBtYWNoaW5lIGF0IEZveCBhcmUgY29udGludWluZyB0byBleHBsb2l0IHRoZSB3aGl0ZSBmZWFyIG9mIFRlYSBQYXJ0eSBzb3J0cyBpbiBvcmRlciB0byBjcmVhdGUgZGl2aXNpb25zIGJldHdlZW4gd29ya2luZyBBbWVyaWNhbnMsIGRpdmlzaW9ucyB0aGF0IG9ubHkgZXZlciBiZW5lZml0IHRoZSByaWNoLiBBbWVyaWNhbnMgd2hvIG91Z2h0IHRvIGJlIHVuaXRlZCBpbiBvdXIgYW5nZXIgYWdhaW5zdCB0aGUgcmljaCBhcmUgZmFyIHRvbyBidXN5IGhhdGluZyBlYWNoIG90aGVyIHRvIG5vdGljZSB0aGF0IHdlIGJlZW4gaGFkLiAKTW9kZXJhdGlvbiBpbiB0aGlzIGdyb3VwIGlzIGFsd2F5cyBiaWFzZWQgRk9SIHRoZSBPUCAodGhlIHBlcnNvbiB3aG8gbWFkZSB0aGUgcG9zdCAgIG5vdCB0aGUgY29tbWVudGVycykuIEZvciBleGFtcGxlLCBpZiBhbiBPUCBkb2VzIG5vdCBhcHByZWNpYXRlIGNvbW1lbnRzIG9mIGEgcmVsaWdpb3VzIG5hdHVyZSwgdGhlIG1vZGVyYXRvcnMgd2lsbCBkZWZlbmQgdGhlIE9QIGJvdW5kYXJpZXMuIApQdXQgdGhlaXIgbmFtZXMgaW4gZ2FtZSBwcm9ncmFtcywgb24gdGhlIGFyZW5hIHNjb3JlYm9hcmRzLCBvbiB0aGUgbWFycXVlZXMgb3V0c2lkZSBvZiByaW5rcywgb24gdGhlIGh1Z2UgZWxlY3Ryb25pYyBiaWxsYm9hcmRzIGluIFRpbWVzIFNxdWFyZSwgZXZlcnl3aGVyZSBhbmQgYW55d2hlcmUgeW91IGNhbiB0aGF0IHdpbGwgZW1iYXJyYXNzIHRob3NlIHdobyBkbyBpdC4uIApPbWFoYSBQb2tlciBoYXMgZ290IG1hbnkgZGlmZmVyZW50IHZhcmlhbnRzIGFuZCBhbW9uZyB0aGUgcG9wdWxhciBvbmUgYXJlIE9tYWhhIEhpIGFuZCBPbWFoYSBIaSBsbwpUb29rIGEgd3JvbmcgdHVybiBsb29raW5nIGZvciB0aGUgYmxhY2tqYWNrIHRhYmxlIGFuZCB3b3VuZCB1cCBhdCB0aGUgZmluYWwgdGFibGUgb2YgYW4gTVRULiAKVGhlIHVsdGltYXRlIENhcmliYmVhbiB2YWNhdGlvbiBleHBlcmllbmNlIGJlZ2lucyBhdCBvdXIgaW50aW1hdGUsIDIgc3RvcnkgYm91dGlxdWUgcmVzb3J0IGxvY2F0ZWQgb24gdGhlIHNob3JlcyBvZiBtYWplc3RpYyBFYWdsZSBCZWFjaCwgYW4gaWRlYWwgcGxhY2UgZm9yIHJvbWFudGljIGFuZCByZWp1dmVuYXRpbmcgZ2V0YXdheXMuIFRoZSB3ZWxsbmVzcyBleHBlcmllbmNlIGluY2x1ZGVzIGEgYmVhY2ggc2lkZSBleG90aWMgQ2FyaWJiZWFuIEJhbGluZXNlIHN0eWxlIHNwYSBvZmZlcmluZyBhIHZhcmlldHkgb2YgbWFzc2FnZXMsIGJvZHkgdHJlYXRtZW50cyBhcyB3ZWxsIGFzIHlvZ2EgUGlsYXRlcyBjbGFzc2VzIGFuZCBmaXRuZXNzIHJvb20uIE9wdGlvbmFsIHByZW1pdW0gZnVsbHkgYSBsYSBjYXJ0ZSBhbGwgaW5jbHVzaXZlIHByb2dyYW0gYXZhaWxhYmxlIGZlYXR1cmluZyBJa2UgQmlzdHJvLCBUaGUgQ2hvcGhvdXNlIGFuZCBPbWFrYXNlIFN1c2hpIEJhci4gTGVzcwpJZiB5b3Ugd2FudCB0byByZWFkIHRoZSBhbmFseXNpcyBvZiBhIHN0dWR5IGNvbmR1Y3RlZCwgSSd2ZSBhZGRlZCB0aGUgbGluayBiZWxvdy4gVGhvc2Ugd2hvIGFyZSBjb25zaWRlcmVkIGV4cGVydHMgaW4gcG9rZXIgY29uc2lkZXIgaXQgdG8gYmUgYSBjb21iaW5hdGlvbiBvZiBoYXZpbmcgdGhlIGx1Y2sgaW4gd2hpY2ggY2FyZHMgeW91IGFyZSBnaXZlbiBhcyB3ZWxsIGFzIHRoZSBza2lsbCBvZiByZWFkaW5nIHRoZSBvdGhlciBwbGF5ZXJzIGFzIHdlbGwgYXMga25vd2luZyB3aGVuIHRvIG1ha2UgY2VydGFpbiBtb3ZlcyBpbiB0aGUgZ2FtZS4gCkFuZCB3ZXJlIHR1cm5lZCBkb3duIGZsYXQuLiAKSXRzZGVjaXNpb25pblRyaW5pdHkgTHV0aGVyYW4gdi4gCkFyZSB5b3UgZm9yIHJlYWw/IHRoZXkgZXZlbiBleHBsYWluIGluIHRoZSB2aWRlbyBob3cgdGhpcyBydW5zIHdpdGggcmFjaWFsIHByb2ZpbGluZy4gbGl0ZXJhbGx5IHRoZXkgdGFsayBhYm91dCB3aHkgdGhleSBydW4gdGFncywgd2hpY2ggaXMgZm9yIGlsbGVnYWwgZHJpdmluZyAocnVubmluZyBsaWdodHMpIGFuZCBoYXZpbmcgaWxsZWdhbCB0aW50cywgd2hpY2ggbGV0J3MgYmUgaG9uZXN0IGlzIGEgYnVsbHNoaXQgcHJlY2VkZW50IGZvciBhbGxvd2luZyBwb2xpY2UgdG8gc2VlIGEgYmxhY2sgcGVyc29uIGRyaXZpbmcsIGFuZCBwdWxsIHRoZW0gb3Zlci4gbGlrZSBtYXliZSB5b3UgYXJlbid0IGZyb20gdGhlIHVzYSwgb3IgbWF5YmUgeW91IGFyZSBwcm8gY29wLCBidXQgc2VyaW91c2x5IGdldCBhIGdyaXAgZHJpdmluZyBhcyBhIGJsYWNrIHBlcnNvbiBpbiB0aGUgVVNBIGluIGdlbmVyYWwgaXMgYSBnYW1ibGUgYmVjYXVzZSBjb3BzIGNvbnN0YW50bHkgcHVsbCBibGFjayBmb2xrcyBvdmVyIGZvciBubyBmdWNraW5nIHJlYXNvbiBhbmQgaGF2ZSB0aGUgcmVhc29ucyBsaXN0ZWQgaW4gdGhlIHZpZGVvIGZvciBnZXR0aW5nIGF3YXkgd2l0aCBwdWxsaW5nIHRoZW0gb3ZlciwgYW5kIHN1YmplY3RpbmcgdGhlbSB0byBmdWNraW5nIGRpc2d1c3RpbmcgdW5kaWduaWZpZWQgcmFjaXN0IGJ1bGwgc2hpdCB0aGF0IG1pZ2h0IGdldCB5b3UgbXVyZGVyZWQgYnkgYSBmdWNraW4gImJhZCBhcHBsZSIuCkkgc3RpbGwgbWFuYWdlZCB0byBvbmx5IGxvc2Ugc2xpZ2h0bHkvYnJlYWsgZXZlbiB3aGlsZSA0IHRhYmxpbmcgMjVubCBvciA1MG5sIGZvciBtb250aHMuIApTaW5jZSB0aGUgZGVmZW5zZSB3aWxsIGJlIHNjcmFtYmxpbmcsIGdvb2QgcHVtcCBmYWtlcyB3aWxsIGRlZmluaXRlbHkgaGVscCB0aGUgb2ZmZW5zZS4gCkkgbG92ZWQgQmVydGllIGJ1dCBoYXRlZCBob3cgcnVzaGVkIHRoZSBsYXN0IGZldyBlcGlzb2RlcyB3ZXJlLiBUaGUgTWFyaWdvbGQgc2l0dWF0aW9uIHdhcyB3cml0dGVuIGhvcnJpYmx5LiAKT25lIGludGVybmF0aW9uYWwgYW5kIFByZW1pZXJzaGlwIHBsYXllciB0b2xkIGhpbTogIkkgbGlrZWQgdG8gYmV0IG9uIHRoZSBidXMsIGJ1dCBpdCBnb3Qgd29yc2Ugd2hlbiBJIGNvdWxkIGJldCBvbmxpbmUuIEkgd2FzIGFibGUgdG8gZG8gaXQgYWxsIHRoZSB0aW1lIHdpdGggbm8gb25lIGtub3dpbmcuIEkgbG9zdCBhIGxvdC4gTXkgd2lmZSBmb3VuZCBvdXQgYWZ0ZXIgYSB5ZWFyIG9yIHNvIGFuZCBzaGUgZ290IG1lIGhlbHAgYW5kIGl0J3MgdW5kZXIgY29udHJvbCBub3cuIEl0J3MgdGhlIGN1bHR1cmUgdG8gZ2FtYmxlIGluIGZvb3RiYWxsIGFuZCBpdCBjYW4gZ2V0IGRhbmdlcm91cyB3aGVuIGl0IGdyaXBzIHlvdS4iCkJlY2F1c2UgdGhlIG5ldXRyb24gaGFzIG5vIGVsZWN0cmljIGNoYXJnZSBhbmQgaXMgbm90IHJlcGVsbGVkIGJ5IHRoZSBudWNsZXVzLCB0ZW1wZXJhdHVyZSBoYXMgbm8gaW1wb3J0YW50IGluZmx1ZW5jZSBvbiB0aGUgZmlzc2lvbiByZWFjdGlvbjsgbm8gbWF0dGVyIGhvdyBzbG93IHRoZSBuZXV0cm9uLCBpdCBjYW4gZW50ZXIgYSB1cmFuaXVtIG51Y2xldXMgYW5kIGNhdXNlIGZpc3Npb24uIEluIGZ1c2lvbiByZWFjdGlvbnMsIG9uIHRoZSBvdGhlciBoYW5kLCB0d28gbnVjbGVpLCBib3RoIHdpdGggcG9zaXRpdmUgZWxlY3RyaWMgY2hhcmdlcywgbXVzdCBjb21lIGludG8gY29udGFjdC4gClN1cHBvcnRpbmcgbGF3cyB0aGF0IHN1cHByZXNzIGZpbGUgc2hhcmluZyBpc24ndCByZWFzb25hYmxlIHRob3VnaC4gClRoZXkgd291bGQgbGlrZSB0byByZXRpcmUgd2hlbiBSb2JiaWUgaXMgNTAgYW5kIEVtaWx5IGlzIDUzLCB0aGVuIGxpdmUgaGFsZiB0aGUgeWVhciBpbiBhIHdhcm0gcGxhY2UgZmFyIGZyb20gQ2FuYWRhIHdpbnRlcnMuIApPbmUgZ2lybCAoc2hlIHdhcyBhcm91bmQgMjAgeWVhcnMgb2xkKSBoYWQgaGVyIGZhdGhlciB3aXRoIGhlci4gSSBoYWQgdG8gZXhwbGFpbiB0byBoaW0gdGhhdCBoZSBjb3VsZG4gc2l0IGluIG9uIHRoZSBpbnRlcnZpZXcgYW5kIGhlIGdvdCByZWFsbHkgdXBzZXQgYmVjYXVzZSBoZSB3YW50ZWQgdG8gc2VlIHRoYXQgd2UgY291bGQgc2VlIGhlciBwb3RlbnRpYWwuCkpvaW5pbmcgUmVkT25lIHdpbGwgYmUgUGVhdmV5IGFydGlzdCBhbmQgREogS2VpdGggU2hvY2tsZWUvV2l6YXJkIEsgSmVlLiAKSSBmZWVsIGxpa2UgcGVvcGxlIGhhdmUgdG8gYmUgbW9yZSB0b2xlcmFudCwgeW91IGNhbiBkb3dudm90ZSBpZiB5b3UgZG9uIGZpbmQgaXQgd29ydGh5IGNvbnRlbnQgYnV0IHRoZXJlIGlzIG5vIG5lZWQgdG8gYXR0YWNrIHBlb3BsZSBvbiB0aGVpciB0YXN0ZS4KRnVuIGlzIGl0cyBvbmx5IHB1cnBvc2UuIEJlY2F1c2UgUmVsYXRlZCBpcyBlYWdlciB0byBhdm9pZCBzdGFtcGVkZXMsIHZpc2l0b3JzIHdpbGwgaGF2ZSB0byByZXNlcnZlIGEgc2FtZSBkYXksIG9uZSBob3VyIHRpbWUgc2xvdC4gCkkga2luZGEgdGhpbmsgdGhlICJwbGFjZWJvIGVmZmVjdCIgaXMgYW4gb3V0ZGF0ZWQgY29uY2VwdCwgaSBwcmVmZXIgdGVybXMgbGlrZSBjb250ZXh0dWFsIGVmZmVjdHMgb3IgbWVhbmluZyByZXNwb25zZXNpIHRoaW5rIGEgY2FzZSBjYW4gcHJvYmFibHkgYmUgbWFkZSBmb3IgcmVmZXJyaW5nIHBlb3BsZSB0byBtYXNzYWdlIGFzIGxvbmcgYXMgdGhlIG1hc3NhZ2UgdGhlcmFwaXN0IHVuZGVyc3RhbmRzIHRoZSBpbXBhY3QgdGhlIHRoaW5ncyB0aGF0IHRoZXkgc3VnZ2VzdCBjYW4gaGF2ZSBvbiB0aGUgdnVsbmVyYWJsZSBwZXJzb24gc2Vla2luZyB0aGVpciBoZWxwZm9yIHRoZSBjYXNlIGkgd291bGQgbWFrZSBzZWUgbXkgcmVzcG9uc2UgdG8gdGhlIG9yaWdpbmFsIHF1ZXN0aW9uLgpJdCBtYXkgdmFyeSBieSBzdGF0ZSBidXQgaW4gbXkgc3RhdGUgdGhlIHN0YXR1dGUgb2YgbGltaXRhdGlvbnMgaXMgMyB5ZWFycyBmb3Igc29tZW9uZSB0byBmaWxlIGluIGNvdXJ0LiAKVGhlIGZvdXIgZWxlbWVudHMgbmVlZGVkIGZvciBnYW1ibGluZyB0byBjb250aW51ZSBhcmU6QSBkZWNpc2lvbjogRm9yIGdhbWJsaW5nIHRvIGhhcHBlbiwgeW91IG5lZWQgdG8gbWFrZSB0aGUgZGVjaXNpb24gdG8gZ2FtYmxlLiBJZiB5b3UgaGF2ZSBhbiB1cmdlOiBzdG9wIHdoYXQgeW91IGFyZSBkb2luZyBhbmQgY2FsbCBzb21lb25lLCB0aGluayBhYm91dCB0aGUgY29uc2VxdWVuY2VzIHRvIHlvdXIgYWN0aW9ucywgdGVsbCB5b3Vyc2VsZiB0byBzdG9wIHRoaW5raW5nIGFib3V0IGdhbWJsaW5nLCBhbmQgZmluZCBzb21ldGhpbmcgZWxzZSB0byBkbyBpbW1lZGlhdGVseS5Nb25leTogR2FtYmxpbmcgY2Fubm90IG9jY3VyIHdpdGhvdXQgbW9uZXkuIApNYXJ0aGEgRmxlYSBzYXlzOiBPa2F5LCBzbyBzaGUgd2FzIGEgZm9vdGxpbmcgYnJlZWNoIENoYXJ0aW5nIFdoZW4gdGhlIFRlc3QgSXMgTmVnYXRpdmUgQW5nZWxpbmEuIFdoeSBEbyBTbyBNYW55IEZhdCBXb21lbiBTdHJ1Z2dsZSBXaXRoIEJyZWFzdGZlZWRpbmcuIApQb3N0ZWQgYnkgc2RpcwpJZiB0aGF0IGRpc2Vhc2UgaXMgUnViZWxsYSB0aGVuIG9uZSBjYW4gbWFrZSB0aGUgY29uY2x1c2lvbiB0aGUgUnViZWxsYSB2YWNjaW5lIGNvdWxkIGNhdXNlIGF1dGlzbSB2aWEgUnViZWxsYS4gVGhlIG9ubHkgdGhpbmcgSSBnZXQgZnJvbSB0aGUgY29uY2x1c2lvbiBvZiB0aGUgc3R1ZHkgaXMgdGhhdCB0aGVyZSBpcyBubyBpbmNyZWFzZWQgcmlzayB3aXRoIE1NUiB2YWNjaW5lIGFib3ZlIHRoZSByaXNrIG5vcm1hbGx5IGFzc29jaWF0ZWQgd2l0aCBjYXRjaGluZyBSdWJlbGxhIHdoaWNoIG1heSB0aGVuIHRyaWdnZXIgYXV0aXNtLi4gCkFuZCBJIHN0YXJ0ZWQgdGhpbmtpbmcgdGhhdCwgeWVwLCB0aGV5IGJvdGggJ3dlYXInIHdvb2wuIE91ciBjbG90aGVzIGFyZSBvdXIgJ3dvb2wnIGFuZCBhcyBsb25nIGFzIHRoZXkgd29yayBmb3IgdXMsIGl0J3MgYWxsIHRoYXQgbWF0dGVyLiAKVmFyaWV0eSBTaG93IChTbyBtdWNoIGhpZGRlbiB0YWxlbnQgb24gYm9hdHMgZGVzcGVyYXRlIGZvciBleHByZXNzaW9uKQpCeXBhc3MgUml2ZXJzaWRlIEhvc3BpdGFsIHR1cm4gUmlnaHQgb250byBXYXJ3aWNrIG9uY2UgeW91IHBhc3MgUGFuZXJhIEJyZWFkIHRoZSBuZXh0IGRyaXZld2F5IHdpbGwgYmUgdGhlIE1hcmluZXJzIEJsZGcgd2l0aCBhIGJpZyB3aGl0ZSBhbmNob3IgaW4gZnJvbnQgb2YgdGhlIGJ1aWxkaW5nLCBwYXJrLCB1c2UgYmF0aHJvb20gYmVmb3JlIGNvbWluZyB0byByb29tIDEwNy4gCkkgc2F5IHRoaXMgYXMgYSBkb2N0b3IuIApTZWUgYnV0IHRoZSBkaWZmZXJlbmNlIGlzIHRoZSBjb25kaXRpb25pbmcgaW4gY2hpbGRob29kOyB5b3Ugc3RpbGwgYXRlIHRob3NlIHJ1YmJlcnkgZnJpZXMgYmVjYXVzZSB5b3UgaGFkIGZvbmRlciBtZW1vcmllcyBvZiB0aGUgdG95IHlvdSBnb3Qgd2l0aCB0aGUgaGFwcHkgbWVhbCBvciBhbnkgb3RoZXIgcG9zaXRpdmUgY29ubmVjdGlvbiB0aGF0IG1pZ2h0IGhhdmUgYmVlbiBkZXJpdmVkIGZyb20gUm9uYWxkJ3MgYnVyZ2VyIGVtcGlyZS4gQ29udHJhc3RlZCB0byB0aGUgaW5hYmlsaXR5IHRvIHdhdGNoIG1vcmUgdGhhbiBvbmUgbW92aWUgb3IgZ2l2ZSBpdCBhIGNoYW5jZSBiZWNhdXNlIGFnYWluIGFzIGEgY2hpbGQgeW91IHdlcmUgY29uZGl0aW9uZWQgdG8gbm90IHRvIGxpa2UgaXQsIG1vcmUgYWNjdXJhdGVseSB0b2xkIGl0IHdhcyBldmlsLi4gClNlY3VyaXR5IGlzIGVuZm9yY2VkIGFuZCBtb3N0IGVtcGxveWVlcyBhcmUgcHV0IHVuZGVyIHdhdGNoIGJ5IHRoZSBwb2xpY2UuIApQdXJpc3RzIGRyaW5rIG9ubHkgd2F0ZXIuIApHYW1pbmcgdG9vayBhIG5ldyBsb29rIGluIHRoZSBmb3JtIG9mIGdhbWJsaW5nIFdlYiBzaXRlcyB0aHJvdWdoIG9ubGluZSBwb2tlciByb29tcy4gCk1lcnZpdSBTdGFydGxlciwgb2YgV2VzdCBQb2ludCwgc3BlbnQgU2F0dXJkYXkgZXZlbmluZyBhdCBDYWx2aW4gVGF5bGVyLiBNci4gQW5kIE1ycy4gCkhUTUwgYW5kIHJlZ2V4IGdvIHRvZ2V0aGVyIGxpa2UgbG92ZSwgbWFycmlhZ2UsIGFuZCByaXR1YWwgaW5mYW50aWNpZGUuIApUaGlzIGlzIHRoZSBDYW55b24gUmFuY2ggb2YgQXNpYSwgYSBkZXN0aW5hdGlvbiBzcGEgb24gc2V2ZW4gYWNyZXMgZnJvbnRpbmcgdGhlIEd1bGYgb2YgVGhhaWxhbmQuIApNYW55IG9mIHRoZW0gYXQgaGlnaCBzY2hvb2wgYWdlIGFjdHVhbGx5IGxpdmUgaW4gYSBkb3JtLCBxdWl0ZSBmYXIgZnJvbSBob21lLCBhbmQgY29tZSBob21lIGR1cmluZyB0aGUgd2Vla2VuZHMuIApUaGUgc291dGhlcm4gdGVybWludXMgaXMgMzAgbWludXRlcyBmcm9tIHdoZXJlIEkgZ3JldyB1cCBhbmQgaXQgY2FuIGJlIGEgZ3JlYXQgb2ZmIHNlYXNvbiB0cmFpbCBmb3IgcGVvcGxlIHRvIGRvLi4gCkFsbCB0aGV5IGRvIGlzIGNvbWUgaW4sIGFzayBteSB3aWZlIGZvciBhIE1ldGFsIDggUm93IENhc2lubyBUYWJsZSBDaGlwIFRyYXkgd2l0aCBDb3ZlciBhbmQgTG9jayB0aGVuIGhlYWQgdG8gdGhlaXIgcmVzcGVjdGl2ZSB0YWJsZXMuIApMaW1pdCBteSBzZWFyY2ggdG8gci9jcmVlcHl1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KRGlkbiBrbm93IGFueSBiZXR0ZXIuIApJbiBhIHZlcnkgcmVhbCBzZW5zZSwgaXQgaXMgdmVyeSBtdWNoIGxpa2UgdGFzdGUgb3Igc21lbGwsIGluIHRoYXQgdGhlIGNlbGxzIG9mIHlvdXIgaW1tdW5lIHN5c3RlbSBmb2xsb3cgY2hlbWljYWwgZ3JhZGllbnRzIGFuZCBzaWduYWxzIHRvIGRldGVjdCBhbmQgbG9jYXRlIGludmFkZXJzLiAKSSBncmV3IHVwIHdpdGggcGFyZW50cyB3b3JraW5nIGZ1bGwgdGltZSA0NSsgaG91cnMgYSB3ZWVrLCBzdHJlc3MsIGFuZCBhIHBlcm1hbmVudGx5IG1lc3N5IGhvdXNlIGFuZCB0aGF0IGlzIG9rIGRvaW5nIG9rIGlzIGRlZmluaXRlbHkgZ29vZCBlbm91Z2guIEFzIGxvbmcgYXMgeW91ciBob3VzZSBpcyBmdWxsIG9mIGxvdmUgaXQgZG9lc24ndCBuZWVkIHRvIGJlIGltbWFjdWxhdGVseSBjbGVhbiBqdXN0IGhhdmUgdG8gdGhlIG1pbmltdW0gc3RhbmRhcmQgeW91IGFyZSBvayB3aXRoIChJIGd1YXJhbnR5IGl0J2xsIGJlIGhpZ2hlciB0aGFuIG1vc3QpLiBZb3UgYXJlIGF3ZXNvbWUgd29ya2luZyBoYXJkLCBkZWFsaW5nIHdpdGggYW54aWV0eSBhbmQgcmFpc2luZyBraWRzIHlvdSBuZWVkIHRvIGdpdmUgeW91cnNlbGYgc29tZSBjcmVkaXQgYW5kIHJlYWxpemUgdGhlcmUncyBubyBuZWVkIHRvIGJlIHBlcmZlY3QganVzdCBkbyB5b3VyIGJlc3QgYW5kIGl0J3MgbW9yZSB0aGFuIGVub3VnaC4gCkRvIHlvdSB3YW50IHRvIGpvaW4gdGhpcyByZXNjdWUgcGxhbj8KVGhleSBhcmUgYWJvdXQgb25lIHRoaW5nOiBmdWNrIERlbW9jcmF0cy4KTm93IHRoYXQgdGhleSdyZSBhZHVsdHMgYW5kIGJvdGggaW4gY29tbWl0dGVkIHJlbGF0aW9uc2hpcHMsIG1ha2luZyBpbW1hdHVyZSBqb2tlcyBpcyBvbmUgd2F5IHRvIGZlZWwgbGlrZSB0aGV5J3JlIG5vdCBsb3NpbmcgdGhlaXIgY2FyZWZyZWUgeW91dGgvZnJlZWRvbS5IZSBwcm9iYWJseSBkaWRuJ3QgcmVhbGl6ZSBpdCB3b3VsZCBodXJ0IHlvdSBiZWNhdXNlIDEuIAo2aCBkdSBtYXRpbiwgKG91aSBqZSBzYWlzIGMnZXN0IHR0IG1haXMgYm9uIGlsIGZhdXQgY2UgcXUnaWwgZmF1dCBkYW5zIGxhIHZpZSk6IDMgY3VpbGxyZXMgIGNhZiBkZSBzdWxmYXRlIGRlIG1hZ25zaXVtICsgdW4gZGVtaSB2ZXJyZSBkJ2VhdSB0aWRlICsgbGEgdmFsZXVyIGQnMS8yIGNpdHJvbiBwcmVzcy4KRG8gbm90IHRpbHQgdGhlIGhpcHMgdG8gdGhlIHNpZGUuIFdoZW4geW91IHNoaWZ0IHlvdXIgd2VpZ2h0LCB5b3UgYXBwZWFyIGRpc3RyYWN0ZWQgYW5kIGFnaXRhdGVkLiAKV2hhdCBjYW4gSSBkbyB3aXRoIGEgY29saWNreSBiYWJ5P0FjdHVhbGx5LiAKRm9yIHRlY2huaWNhbCByZWFzb25zLCB0aGUgcHJpY2UgcXVvdGF0aW9uIHN5c3RlbXMgZGV2ZWxvcGVkIHVuZGVyIE5NUyBhbGxvdyBhIHRyYWRlciBsb29raW5nIGF0IGEgc3BlY2lmaWMgc3RvY2sgdG8gc2VlIG9ubHkgdGhlIGJlc3QgcHJpY2UgYXZhaWxhYmxlIG9uIGVhY2ggZXhjaGFuZ2UgdGhlIG9mIHRoZSBib29rLiAKVmVyeSBmcnVzdHJhdGluZyBidXQgbm90IHRoZWlyIGZhdWx0IGF0IGFsbC4uIApEb2VzbiBtYXR0ZXIgaWYgaXQgd2FzIGEgY29tcGxpbWVudCBvbiB5b3VyIHNraWxscyBvciB0aGVpciBwZXJzb25hbCBsaWZlLiAKSSdtIG5vdCBzYXlpbmcgeW91IGhhdmUgdG8gYnV5IGhpbSwgd2hpY2ggaW4gdGhpcyBjYXNlIHRoZXkgaGFkIGNvbnZlcnNhdGlvbnMsIGJ1dCBlbnRlcnRhaW4gdGhlIGlkZWEgdGhhdCBoZSdkIGJlIHVzZWZ1bC4gCkkgd2FzIHlvdW5nLCBhbmQgbXkgZGFkIHN0aWxsIGNhcmVkIGFib3V0IG1lIGJhY2sgdGhlbiwgc28gaXQgZGlkbiBzZWVtIGxpa2UgYSBodWdlIGRlYWwsIGJ1dCBzaGUgcHV0IGEgZGVhbCBpbiB0aGUgZGl2b3JjZSB0aGF0IGFzIGxvbmcgYXMgSSB3YXMgYSBjb2xsZWdlIHN0dWRlbnQsIEkgd291bGQgY29udGludWUgdG8gZ2V0IHRoZSBjaGlsZCBzdXBwb3J0IG15IG1vbSB1c2VkIHRvIGdldCBhZnRlciBJIHR1cm5lZCAxOC4gSXQgd291bGQgbGFzdCB1bnRpbCBJIHR1cm5lZCAyMiBhcyBsb25nIGFzIEkgd2FzIGEgc3R1ZGVudC4gClRoZSBNb250cmVhbCBNYXJyaW90dCBhbHNvIGdpdmVzIHZpc2l0b3JzIGEgc25lYWsgcGVlayBhdCB3aGF0IGhvdGVsIGV4ZWN1dGl2ZXMgc2F5IGlzIHRoZSBsb2JieSBvZiB0b21vcnJvdy4gClRoZSBraXNzIG9uIHRoZSBuZWNrIHRoYXQgbWFkZSB5b3UgaW5zdGFudGx5IGhvcm55IG5vdyBmZWVscyB3YXJtbHkgYWZmZWN0aW9uYXRlLiAKSW4gMTk2NSBzaGUgZGllZCBhbG9uZSBpbiB0aGUgVVNBIGF0IDUwLiBJbiAyMDEwIHNoZSByZWNlaXZlZCBhIHBvc3RodW1vdXMgYXBvbG9neS4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnb1RoYW5rIHlvdSwgTm90UmVhbGx5QW5vbi4gSSBhZG1pdCB0aGF0IEkgY291bGQgcHJvYmFibHkgdGFrZW4gYmV0dGVyIGNhcmUgdG8gbWFrZSBpdCBsZXNzIG9mIGFuIG9idmlvdXMgYWR2ZXJ0aXNlbWVudCAgIGJ1dCBpdCB3b3VsZCBzdGlsbCBiZSBvbmUsIG5vIG1hdHRlciB0aGUgZm9ybS4gQSBzaW5nbGUgYXNzZXQgc2V2ZXJhbCBzZWN0aW9ucyBhY3Jvc3MgdG8gcmVwbGFjZSB0aGUgbXVsdGlwbGUgYXNzZXRzIHlvdSBoYWQgdGhlcmUgcHJldmlvdXNseSkuQWxzbywgbW9yZSBkZXNpZ24gZm9jdXNlZCBhc3NldHMgYXJlIGluIHRoZSB3b3Jrcy4gCkJ1cm5pbmcgYSBjYXJkIGJlZm9yZSB0aGUgZmxvcCwgdHVybiBhbmQgcml2ZXIgY2FyZHMgYXJlIHJldmVhbGVkIGlzIGEgcHJlY2F1dGlvbiBkZXZpc2VkIHRvIHByZXZlbnQgY2hlYXRpbmcuIFRoZSBjb25jZXB0IG9mIGJ1cm5pbmcgY2FyZHMgZGV2ZWxvcGVkIGFzIG1hbnkgcHJvZmVzc2lvbmFscyBwbGF5aW5nIGZvciBoaWdoIHN0YWtlcyB3b3VsZCBvZnRlbiBzdWJ0bHkgbWFyayB0aGUgYmFjayBvZiBjZXJ0YWluIGNhcmRzLCBnaXZpbmcgdGhlbXNlbHZlcyBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgY2FyZCB3YXMgb24gdG9wIG9mIHRoZSBkZWNrIChhbmQgaGVuY2UgbmV4dCB0byBiZSBwbGF5ZWQpLiBTaW1pbGFybHkgaW4gZ2FtZXMgd2hlcmUgdGhlIGRlYWxlciBpcyBwbGF5aW5nLCBpdCBpcyBhbHNvIGdvb2QgcHJhY3RpY2UgdG8gaGF2ZSBzb21lb25lIG90aGVyIHRoYW4gdGhlIGRlYWxlciBzaHVmZmxlIHRoZSBjYXJkcywgYW5kIHNvbWVvbmUgZWxzZSB0byBjdXQgdGhlIGNhcmRzLiAKT25lIG9mIHRoZSB0aGluZ3MgaXQgaGFzIHlvdSBpZGVudGlmeSBhbmQgZGVkdWN0IGlzIGV4cGVuc2VzIG92ZXIgYW5kIGFib3ZlIHRoZSBvYnZpb3VzIChsaWtlIGNhci9jbG90aGVzIGV0Yyk7IEl0IGhhcyB5b3UgZGVkdWN0IHRoZSAibW9vZCBmaXgiIGl0ZW1zLiAKU2Ugdm9jIHRlbSBmaWxob3MsIGNlcnRpZmljYXIgc2UgZGUgcXVlIGVsZXMgZXN0byBlbSB1bSBsdWdhciBzZWd1cm8gZSBwcm90ZWdpZG8uIEFsbSBkaXNzbywgbm8gc2UgdG9ybmUgdW1hIGVzcG9zYSB0cmFpbmRvIHNlIHZpbmdhci4gUyBjYXVzYSBtYWlzIHByb2JsZW1hcyBlIHNlciB1c2FkbyBjb250cmEgdm9jLi4gClF1YW5kIEpuYW5zaHdhciBkaXQgOiAgSiBhZG9yIGxlcyBwaWVkcyBkdSBnb3Vyb3UgLCBpbCBzZSByZnJlICBxdWVscXVlIGNob3NlIHF1aSBlc3QgYXUgZGVsIGR1IGNvcnBzIHBoeXNpcXVlIGxhIGNvbnNjaWVuY2UgZCBlbiBjb21tdW5pb24gYXZlYyBsZSBnb3Vyb3UsIGMgbCBsZSB2cml0YWJsZSBzZW5zIGRlIGwgZGUgc2VzIHBpZWRzLi4gCkEgY2hpbGQgb2YgYSB3aGl0ZSBNdXNsaW0gcGFyZW50IGNhbiBiZSBnaXZlbiBhIG5hbWUgbGlrZSBKb2VsbGUgRmxldGNoZXIgYW5kIHJhaXNlZCBub24gTXVzbGltLCBhbmQgdGhhdCBjaGlsZCB3aWxsIGxpa2VseSBhdm9pZCA5OSUgb2YgYmlnb3RyeSBhbmQgZGlzY3JpbWluYXRpb24uIApIZSBibGFtZXMgYW5vdGhlciBvbGlnYXJjaCwgYW4gZXggcHJpbWUgbWluaXN0ZXIgc2VydmluZyBuaW5lIHllYXJzIGluIHByaXNvbi4uIApBbGxlZ2F0aW9ucyBvZiBpbGxlZ2FsIGdhbWJsaW5nIGxlYWRzIHRvIHN1c3BlbnNpb24gb2Ygb3BlcmF0aW9ucyBhdCBGbGludCBUb3duc2hpcCBwb2tlciByb29tCk1hbnkgcGVvcGxlIHdobyBsaXZlIGluIGhvdXNlcyBzdHJ1Z2dsZSwgdG9vLiBJdCBnZW5lcmFsbHkgbWVhbnMgeW91IGdvdCByZW50IG9yIGEgbW9ydGdhZ2Ugb3IgYSBtYXRlIHRvIHBheSBhIHNpZ25pZmljYW50IGFtb3VudCB0bywgYW5kIGlmIHlvdSBvbiB0aGUgc2tpbiBvZiB5b3VyIHRlZXRoIGluIHRoYXQgc2l0dWF0aW9uIHlvdSBwcm9iYWJseSBzdXBwb3J0aW5nIHNvbWVib2R5IGVsc2Ugc28gdGhlIHN0cmVldHMgYXJlbiBhbiBvcHRpb24uaXNuIHJlYWxseSBhIHZlcnkgZ29vZCB0ZXJtLCBhdCBhbGwuIEl0IGFuIGVhc3kgdGVybS5Ob1NvdWwgZ3JvdXAgc2VlbSBwZXJmZWN0bHkgZmluZSB0byBtZSB0aG91Z2gsIHRiaC4gCk5vdCBmb3Igc3RlYWxpbmcgbXkgaWRlYXMgKHNoZSBkaWRuIGJ1dCBmb3Igc3RlYWxpbmcgdGhlIHNleHVhbCBhbmQgZW1vdGlvbmFsIGhlYWx0aCBvZiBhIGdlbmVyYXRpb24gb2YgeW91bmcgd29tZW4uIApFdmVyeSB0aW1lIEkgZ28gdG8gTGVtYm9uZ2FuIChub3QgYWxsIHRoYXQgb2Z0ZW4pIEkgc2VlIGF0IGxlYXN0IG9uZSBwZXJzb24gd2hvIGhhcyBoYWQgYSBiYWQgc3BpbGwgb24gYSBzY29vdGVyLiBUaGUgcmVzdWx0cyBJIHNlZW4gcmFuZ2VkIGFueXdoZXJlIGZyb20gbG90cyBvZiBjdXRzIGFuZCBhIHZlcnkgYmFkIGNhc2Ugb2Ygcm9hZCByYXNoIHRvIGJlaW5nIG1lZGV2YWNlZCB0byBCYWxpIChhbmQgdGhlbiBvbiB0byBTaW5nYXBvcmUsIEkgdGhpbmspLiBQZW9wbGUgdGhpbmsgdGhhdCBzY29vdGVycyB0aGVyZSBhcmUgbm8gYmlnIGRlYWwgYmVjYXVzZSB0aGVyZSBpcyBhbG1vc3Qgbm8gY2FyIHRyYWZmaWMuIApJJ2QgbGlrZSB0byB0YWxrIGFib3V0IHRoZSBkZWVwIGZlZWxpbmdzIGFuZCBpbm5vdmF0aXZlIGlkZWFzIG9mIEx5YXJpJ3MgcmVzaWRlbnRzLiBJIHdvdWxkIHRha2UgZ3JlYXQgcGxlYXN1cmUgaW4gZGVzY3JpYmluZyB0aGUgbGlnaHQgaW4gdGhlIGV5ZXMgb2YgbGl0dGxlIGNoaWxkcmVuIGluIEx5YXJpIGFzIHRoZXkgdG9sZCBtZSBhYm91dCB0aGUgTkdPIHNjaG9vbHMgdGhhdCB0aGV5IGF0dGVuZC4gSSB3b3VsZCByYXRoZXIgZW5qb3kgZGVzY3JpYmluZyB0aGUgcnVzdGljIGJlYXV0eSBvZiBMeWFyaSdzIHlvdW5nIGxhZGllcywgYW5kIHRoZSByYXcgbWFzY3VsaW5pdHkgb2YgTHlhcmkncyB5b3VuZyBtZW4uLiAKSWYgYSBzb2xkaWVyIGNhbiBiZSBhIG1hc2N1bGluZSBtYW4gaW4gbG92ZSB3aXRoIGFub3RoZXIgbWFzY3VsaW5lIG1hbj8gZW50aXJlIHNleC9nZW5kZXIgc3lzdGVtLCB3aGF0IHF1ZWVyIHRoZW9yaXN0IEp1ZGl0aCBCdXRsZXIgY2FsbHMgInRoZSBoZXRlcm9zZXh1YWwgbWF0cml4LCIgY29sbGFwc2VzLiAKTVRWIEZpbG1zIC8gQ291cnRlc3kgRXZlcmV0dCBDb2xsZWN0aW9uLiBJbiB0aGUgb3BlbmluZyBzY2VuZSBvZiBCZXR0ZXIgTHVjayBUb21vcnJvdywgdGhlIGNhbWVyYSBwYW5zIG92ZXIgdGhlIGZhY2VzIG9mIHR3byB0ZWVucyBhcyB0aGV5IGxpZS4gVGhpcyBpcyBjbGVhcmx5IGFuIEFzaWFuIEFtZXJpY2FuIGZpbG0sIGZvY3VzaW5nIG9uIHRoZSByZWFsIGxpZmUgc3RydWdnbGVzIGZhY2VkIGJ5LiAyNiBNYXkgMjAxNyAuIE9uZSBvZiBMZWUncyBmaXJzdCBleHBlcmllbmNlcyB3aXRoIGluZGVwZW5kZW50LCBsb3cgYnVkZ2V0IGZpbG1zLiAKQnV0IHRoZXkgYXJlIG5ldmVyIG91dGVkIGZvciBiZWluZyBzdHJhaWdodC4gTGlrZSBtb3N0IHJhY2lzdHMgYXJlIG5vdCBwYXNzaW5nIGFzIHdoaXRlcyBidXQgc2VjcmV0bHkgb2YgY29sb3IgYW5kIG1vc3QgYW50aSBTZW1pdGVzIGFyZSBub3QgYWN0dWFsbHkgSmV3aXNoLi4gClRoZSBiZWF1dHkgaW5kdXN0cnkgaGFybXMgd29tZW4gaW4gbWFueSB3YXlzLiBBbmQgb2J2aW91c2x5IHRoYXQncyBleGFjZXJiYXRlZCB3aXRoIHZhcmlvdXMgaW50ZXJzZWN0aW9ucyBsaWtlIHJhY2UsIGJvZHkgdHlwZSwgYWdlLCBldGMuIEF0IGxlYXN0IGFja25vd2xlZGdlIHlvdSB1bmRlcnN0YW5kIHdvbWVuJ3MgaXNzdWVzLiAKTW9zdCBwcmVnbmFudCB3b21lbiBhcmUgc2NyZWVuZWQgaW4gdGhlIHNlY29uZCB0cmltZXN0ZXIgZWFybGllciBpZiByaXNrIGZhY3RvcnMgYXJlIHByZXNlbnQuIElmIGEgcHJlZ25hbnQgd29tYW4gdGVzdHMgcG9zaXRpdmUgZm9yIEdETSwgdHJlYXRtZW50IHVzdWFsbHkgY29uc2lzdHMgb2YgbW9uaXRvcmluZyBibG9vZCBzdWdhciwgcHJvcGVyIG51dHJpdGlvbiwgYW5kIHJlZ3VsYXIgcGh5c2ljYWwgYWN0aXZpdHkuIElmIHRoZXNlIG1lYXN1cmVzIGFyZSBub3Qgc3VmZmljaWVudCB0byBsb3dlciBibG9vZCBzdWdhciwgaW5zdWxpbiBtYXkgYmUgcHJlc2NyaWJlZC4gVGhlIGxhdHRlciBvY2N1cnMgaW4gMTAlIHRvIDIwJSBvZiBHRE0gY2FzZXMuCk5vbm9tYWQxMjMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkNyZWVweSBNYXNzYWdlIENsaWVudApJdCB3b3J0aCBtZW50aW9uaW5nIHRob3VnaCwgYmVzaWRlcyBlbGVjdHJpYyBjaGFyZ2UsIHRoZXJlIGFsc28gZWxlY3RyaWMgYW5kIG1hZ25ldGljIGRpcG9sZSBtb21lbnRzIHdoaWNoIGFyZSBpbiBwcmluY2lwbGUgYWxsb3dlZCBidXQgYWxzbyBjb25zdHJhaW5lZCAoSSBkb24gaGF2ZSBhbnkgbnVtYmVycyBvbiBoYW5kIGZvciB0aGVzZSBjb25zdHJhaW50cykuIApZZXMsIEkgd291bGQgbGlrZSBmb3IgbmV3IG11c2ljIHRvIGJlIGdlbmVyYXRlZC4gCkkgbm90IHN1cmUgYWJvdXQgdGhlIHR1bm5lbHMgdGhvdWdoISBNYXliZSBzb21lb25lIGVsc2Uga25vd3MgYW4gZXhhY3QgYW5zd2VyLiAKSSB0aGluayBJIGFjdHVhbGx5IG1ha2luZyBzb21lIG1pc3Rha2VzIG9uIHRoZSB0dXJuIGJ5IG5vdCBiYXJyZWxpbmcgY29tYm9zIHRoYXQgd291bGQgYmUgZ29vZCByaXZlciBibHVmZiBjYW5kaWRhdGVzIG9uIHRoaXMgY2FyZCBzcGVjaWZpY2FsbHkuIApVZ2ggIHNoZSBzb3VuZHMgbGlrZSBhIHBlYWNoISBXaGF0IGEgY3J1ZWwgdGhpbmcgdG8gcG9zdC4gSSBhbSBzb3JyeSBmb3IgdGhlIGxvc3Mgb2YgeW91ciBkb2dnaWUgOiBzaGUgcG9zdCBpdCBvbiBoZXIgcGFnZSwgb3IgY29tbWVudCBpdCBvbiB5b3VyIHBvc3Q/IEkgdGhpbmsgaWYgc2hlIGNvbW1lbnRlZCBhcyBwYXJ0IG9mIHlvdXIgcG9zdCwgeW91IGNvdWxkIGRlZmluaXRlbHkgcmVzcG9uZCwgYnV0IGlmIGl0IHdhcyBhIHBhc3NpdmUgYWdncmVzc2l2ZSBzZXBhcmF0ZSBwb3N0IHRvIGhlciBvd24gcGFnZSwgSSB3b3VsZCBsZXQgaXQgYWxvbmUuIEJlY2F1c2Ugb25jZSB5b3UgcmVzcG9uZCwgc2hlIHdpbGwgZ28gd2l0aCB0aGUgYW5nbGUgIkl0IHdhc24gbWVhbnQgZm9yIHlvdSEgSXQgbm90IGFsd2F5cyBhYm91dCB5b3UhIFdoeSBhcmUgeW91IHNvIHNlbm5ubm5zaXRpaWlpaWlpaWlpdnZlPyIganVzdCBjcmVhdGluZyBtb3JlIGRyYW1hIHRvIGludm9sdmUgb3RoZXJzIGluLiAKV2hlbiB5b3Ugc2l0IGluIEhBRyBDYXBpc2NvIGFuZCBhcyB5b3UgbW92ZSBpbiBpdCB5b3VyIG1vdmVtZW50cyBhcmUgYWN0dWFsbHkgcXVpdGUgc2ltaWxhciB0byBhIGhvcnNlIHJpZGVyIGluIGEgc2FkZGxlLgpBIHNsb3dpbmcgb2YgdGhlIGNhcmRpb3Zhc2N1bGFyIHN5c3RlbSBhcyBibG9vZCBmbG93IGRlY3JlYXNlcyBpbiByZXNwb25zZSB0byBhIGxhY2sgb2YgZ3Jhdml0eSxbMTldIGEgZGVjcmVhc2VkIHByb2R1Y3Rpb24gb2YgcmVkIGJsb29kIGNlbGxzLCBiYWxhbmNlIGRpc29yZGVycywgYW5kIGEgd2Vha2VuaW5nIG9mIHRoZSBpbW11bmUgc3lzdGVtLgpUaGUgY2FzZSBvZiBWZWxhc2NvIHRob3VnaCBpcyBkaWZmZXJlbnQuIEl0J3MgbGVzcyB2aW9sZW50IG9mIGNvdXJzZSwgYnV0IHBlcmhhcHMgbW9yZSBkaXN0dXJiaW5nIGZvciBzb21lIHNpbmNlIGhlJ3MgYmVpbmcgbWVudGlvbmVkIGFzIGEgcG9zc2libGUgc2VyaW91cyBwcmVzaWRlbnRpYWwgY2FuZGlkYXRlIGluIDIwMTguClNxdWFsYW5lIGlzIGFuIG9pbCBkZXJpdmVkIGZyb20gc2hhcmsgbGl2ZXIvcGxhbnQgZXh0cmFjdHMsIGl0IHBvcHVsYXIgYmVjYXVzZSBpdCBhbHNvIGZvdW5kIG5hdHVyYWxseSBpbiB5b3VyIHNraW4uIE1hZGFjYXNzZW9zaWRlIGhhcyBiZWVuIG9uIGEgcm9sZSBsYXRlbHksIGl0IGZlYXR1cmVkIGluIG1hbnkgc2tpbmNhcmUgaXRlbXMgYW5kIGV2ZW4gbWFrZXVwIGxhdGVseSB0byBoZWxwIGNvbWJhdCBhY25lIGFuZCBwaWdtZW50YXRpb24gY2FzdWVkIGJ5IGFjbmUuSW4gdGVybXMgb2YgbGluZXMsIGEgbG90IG9mIHBlb3BsZSBhcmUgc3dpdGNoaW5nIHRvd2FyZHMgbW9yZSAiY2xlYW4iIGluZ3JlZGllbnRzIGxpc3QsIHNvIG5vIGhhcm1mdWwgaW5ncmVkaWVudHMgYW5kIG5vIHBvdGVudGlhbCBpcnJpdGFudHMvYWNuZSB0cmlnZ2Vycy4gClJlY29yZHMgZXhpc3Qgd2hpY2ggYWxzbyBzdWdnZXN0IHRoYXQgdHJhZGl0aW9uYWwgSW5kaWFuIG1lZGljaW5lLCBrbm93biBhcyBBeXVydmVkYSwgaGFzIHByYWN0aXNlZCBhIGZvcm0gb2YgQXJvbWF0aGVyYXB5IGZvciBvdmVyIDMsMDAwIHllYXJzLgpTYXkgcGVyc29uIEEgY3V0cyBvZmYgQiBpbiB0cmFmZmljIChBIGlzIGEgNDAgeWVhciBvbGQgbWFuLCB3aGlsZSBCIGlzIGEgMTUgeWVhciBvbGQga2lkKSwgQiBzdGFydHMgdGFsa2luZyBzaGl0LCBpdCBub3Qgd29ydGggaXQgZm9yIEEgdG8gYXJndWUgd2l0aCBoaW0gaWYgdGhlcmUgb25seSBhIGZldyB0byBubyBwZW9wbGUgYXJvdW5kLiBZb3Ugb2xkZXIsIHlvdSBzaG91bGQgdGFrZSB0aGUgaGlnaGVyIHJvYWQuIEJ1dCB0aGF0IGlzIGlmIGl0IGEgZW1wdHkgc3RyZWV0LgpUaGlzIHBhcnQgaXMgYWN0dWFsbHkgcGFydGx5IHJvb3RlZCBpbiBzY2llbmNlICAgc3Blcm0gY2FycnlpbmcgdGhlIFkgY2hyb21vc29tZSBhcmUgc3BlZWRpZXIsIHdoaWxlIHNwZXJtIGNhcnJ5aW5nIHRoZSBYIGNocm9tb3NvbWUgYXJlIHNsb3dlciBidXQgbW9yZSBoYXJkeSBhbmQgY2FuIHN1cnZpdmUgbG9uZ2VyLiBUaGVyZWZvcmUsIGlmIHRoZXJlIGEgc2hvcnRlciBkaXN0YW5jZSBmb3IgdGhlIHNwZXJtIHRvIHRyYXZlbCB0byB0aGUgZWdnLCB0aGUgbW9yZSBsaWtlbHkgdGhhdCBhIFkgY2hyb21vc29tZSB3aWxsIHN1cnZpdmUgYW5kIGJlYXQgYW4gWCBjaHJvbW9zb21lIHRvIHRoZSBlZ2cuIE5vdywgaG93IG11Y2ggbW9yZSBsaWtlbHkgaXMgcGFydCBvZiB0aGUgb2xkIHdpdmVzIHRhbGUsIGJ1dCB0aGF0IHdoZXJlIHRoYXQgY29tZXMgZnJvbSwgYXQgbGVhc3QuIDopClR1ZXNkYXksIDE4dGguIENsb3VkeSB3ZWF0aGVyIHdpdGggc29tZSBzaG93ZXJzIG9mIHJhaW4uIFRoaXMgbW9ybmluZyB0b29rIGFzIG1hbnkgcGVvcGxlIG91dCBvZiB0aGUgU2hpcCBhcyBjb3VsZCBwb3NzaWJseSBiZSBzcGFyZWQsIGFuZCBzZXQgYWJvdXQgRXJlY3RpbmcgYSBGb3J0LiBTb21lIHdlcmUgZW1wbG95J2QgaW4gdGhyb3VnaGluZyB1cCBpbnRyZW5jaG1lbnQsIHdoaWxlIG90aGVycyB3YXMgY3V0dGluZyBmYWNpbmVzLCBQaWNxdWV0cywgZXRjLiBUaGUgTmF0aXZlcyB3ZXJlIHNvIGZhciBmcm9tIGhpbmRlcmluZyB1cyB0aGF0IHNldmVyYWwgb2YgdGhlbSBhc3Npc3RlZCBpbiBicmluZ2luZyB0aGUgUGljcXVldHMgYW5kIGZhY2luZXMgb3V0IG9mIHRoZSB3b29kcywgYW5kIHNlZW1lZCBxdWl0ZSB1bmNvbmNlcm4nZCBhdCB3aGF0IHdlIHdhcyBhYm91dC4gVGhlIHdvb2Qgd2UgbWFkZSB1c2Ugb2YgZm9yIHRoaXMgb2NjYXNpb24gd2UgcHVyY2hhc2VkIG9mIHRoZW0sIGFuZCB3ZSBjdXQgbm8gVHJlZSBkb3duIGJlZm9yZSB3ZSBoYWQgZmlyc3Qgb2J0YWluZWQgdGhlaXIgQ29uc2VudC4gQnkgdGhpcyB0aW1lIGFsbCB0aGUgU2hpcCdzIHNhaWxzIHdlcmUgdW5iZW50IGFuZCB0aGUgQXJtb3VyZXIncyBGb3JnZSBzZXQgdXAgdG8gcmVwYWlyIHRoZSBJcm9ud29yaywgZXRjLiBTZXJ2ZWQgZnJlc2ggUG9yayB0byB0aGUgU2hpcCdzIENvbXBhbnkgdG8gZGF5IGZvciB0aGUgZmlyc3QgdGltZS4gVGhpcyBpcyBsaWtlIHRvIGJlIGEgdmVyeSBzY2FyY2UgQXJ0aWNsZSB3aXRoIHVzLCBidXQgYXMgdG8gQnJlYWQgZnJ1aXQsIENvY29hIE51dHRzIGFuZCBQbGFpbnRhaW5zLCB0aGUgTmF0aXZlcyBzdXBwbHkgdXMgd2l0aCBhcyBtdWNoIGFzIHdlIGNhbiBkZXN0cm95LgpVbmUgYXBwcm9jaGUgZG91Y2UsIHNpbXBsZSBldCBwdWlzc2FudGUgcXVpIG91dnJlIGxlIGN1ciBldCBwZXJtZXQgZGUgc2UgbGlicmVyIGR1IHBvaWRzIGRlcyBnbnJhdGlvbnMiIE9uIG5lIHBldXQgYXNzaXN0ZXIgIGNlcyBhdGVsaWVycyBzYW5zIGVuIHJlc3NvcnRpciB0cmFuc2Zvcm0uJycgSGxuZSBEdXZhbCBGcmFuY2UgOiBFbGxlIHByc2VudGUgdW5lIGFwcHJvY2hlIGRlIGxhIHJnaW9uIGR1IHBldGl0IGJhc3NpbiB0cnMgaW50cmVzc2FudGUgZXQgZW5yaWNoaWUgcGFyIHNhIGZvcm1hdGlvbiBlbiBwc3ljaGFuYWx5c2UuIApUb2RheSwgdGhvdWdoLCB3ZSBoYXZlIHByb2JsZW1zIHRoYXQgd2Uga25vdyBmb3IgYSBmYWN0IGFyZSAxMDAlIGdvaW5nIHRvIGhhcHBlbi4gVGhleSBub3QgYXMgYmFkIGFzIG51Y2xlYXIgd2FyIChpbiB0aGUgc2hvcnQvbWVkaXVtIHRlcm0gYXQgbGVhc3QpLCBidXQgdGhleSBhcmUgZGVmaW5pdGVseSBjb21pbmcgaW4gb3VyIGxpZmV0aW1lcy4gClRoZSB0aHJlYXQgb2YgZ2F5IG1hcnJpYWdlIG11c3QgYmUgYWJvdXQgcG9sbHV0aW9uLiBBcyBFbWlsZSBEdXJraGVpbSBwb2ludGVkIG91dCBhIGNlbnR1cnkgYWdvLCBodW1hbnMgZW5nYWdlIGluIG1hcmtpbmcgdGhlIHNhY3JlZCBvZmYgZnJvbSB0aGUgcHJvZmFuZSwgb3IgZXZlcnlkYXkuIApJbmkgYnVrYW4gaWRlIHlhbmcgYnVydWsgdW50dWsgbXVsYWkgYmVybWFpbiBzZWNhcmEgZ3JhdGlzLiBNZW5hd2Fya2FuIEZSRUVST0xMUyBwb2tlciBzZWNhcmEgb25saW5lIChwZXJtYWluYW4gcG9rZXIgZ3JhdGlzKSBhZGFsYWggc3RyYXRlZ2kga2hhcyBkYXJpIHNpdHVzIHRpbmdnaS4gCkFjY29yZGluZyB0byB3aXRuZXNzZXMsIEJ5cm9tIGFuZCBhbm90aGVyIHBlcnNvbiBhdCB0aGUgcGFydHkgd2Fsa2VkIG91dHNpZGUgYW5kIGEgYmxhY2sgY2FyIHB1bGxlZCB1cCBhbmQgc3RvcHBlZCBuZWFyIHRoZW0uIFR3byBwZW9wbGUgZ290IG91dCBvZiB0aGUgdmVoaWNsZSBhbmQgeWVsbGVkICJEb24ndCBtb3ZlISBHaXZlIGl0IHVwISIgYW5kIGZpcmVkIHNob3RzLiBXaXRuZXNzZXMgc2FpZCB0aGUgc2Vjb25kIHN1c3BlY3QgZmxlZCBpbiB0aGUgY2FyIG5vcnRoIG9uIEhpZ2h3YXkgNDMxIHRvd2FyZCBDaGFtYmVycyBDb3VudHkuClRoZWlyIGZhY2VzIGNvbnRvcnRlZCBpbiBwcm90ZXN0LCBidXQgdGhlIHR1YmVzIGluIHRoZWlyIHRocm9hdHMgc3RvcHBlZCB0aGUgc291bmQuIFRoZSBtYWNoaW5lcyBiZWVwZWQgYW5kIGFsYXJtZWQuIFRoZSByb29tIHN3YXJtZWQgd2l0aCBwZW9wbGUgaW4gc2NydWJzLiAKU3Vydml2YTMxNiAgNyBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpJbSBzdGlsbCBpbiBoZXIgZ3VpbGQgdGhhdCBzaGUgZm9ybWVkIGEgZGVjYWRlIGFnbywgaW0gdGhlIEdNIG5vdyBzaW5jZSBubyBvbmUgaGFzIGxvZ2dlZCBvbiBmb3IgeWVhcnMuIEkgZG9udCBraWNrIGFueSBvbmUgb3IgaW52aXRlIGFueW9uZSwgaSBrZWVwIGV2ZXJ5dGhpbmcgdGhlIHNhbWUgYW5kIGkgc3RpbGwgY2hlY2sgb2NjYXNpb25hbGx5IHRvIHNlZSBpZiBzaGUgbG9nZ2VkIG9uIHRocm91Z2ggdGhlIGd1aWxkIHBhbmVsLiBJdHMgYmVlbiA4IHllYXJzIHNpbmNlIHNoZSBoYXMuLiAKWW91IGRvbid0IG5lZWQgdG8gYnV5IGxvdyBjdXQgZHJlc3NlcyBvciBtaW5pIHNraXJ0cy4gClRoZXNlIGNoaWxkcmVuIHdlcmUgY2FyZWQgZm9yIGJ5IGxvd2VyIGNsYXNzIHdvbWVuLCBsaWtlIEkgbWVudGlvbmVkIGFib3ZlLCB3aGlsZSB0aGVpciBtb3RoZXJzIGtlcHQgYSBmdWxsIHNvY2lhbCBjYWxlbmRhci4uIApUaGUgRmF0IENhdCBiYW5rZXJzIGhhdmUgdGhlaXIgaGFuZHMgaW4gdGhlIFBlb3BsZSBwb2NrZXRzLiBBZ2FpbiB0aGV5IGxhdWdoIG1hbmlhY2FsbHkuIApTdWRkZW5seSwgb25lIGRheSBJIGZlbHQgaW5jcmVkaWJseSBsb25lbHkuIEkgYWx3YXlzIHN1ZmZlcmluZyBmcm9tIG1pbGQgZGVwcmVzc2lvbiBhbmQgYW54aWV0eSBhbmQgSSBiZWVuIGFsb25lIGEgbG90IGJ1dCB0aGlzIHdhcyBkaWZmZXJlbnQuIApFdmVuIHdoZW4gZXZlcnl0aGluZyBvcGVucyB1cCwgdGhlbiB0aGUgcmFjaW5vcyB3aWxsIGxvYmJ5IGZvciwgYW5kIGdldCwgdGFibGUgZ2FtZXMgYW5kIHRoZSBsYW5kc2NhcGUgY2hhbmdlcyBhZ2FpbiwgaGUgc2FpZC4gClRoZSBtb3RoZXIgd2lsbCBvbmx5IGJlIG9uIGhlciBzaWRlIGFuZCBiYWNrIChvbiBhIHdlZGdlKSB0byBoZWxwIHByb21vdGUgdGhlIHVwbW9zdCBjb21mb3J0IGFuZCBiZW5lZml0cy4uIApHaWFudHMgd2luIDMgMiBTYXR1cmRheTogVGhhdCB3YXMgYSBuaWNlIGNvbWViYWNrIHdpbiEgSXQgbG9va2VkIGxpa2UgSmVmZiBLZW50IHdvdWxkIHJ1aW4gdGhlIGV2ZW5pbmcgd2hlbiBoZSBoaXQgYSBob21lIHJ1biBvZmYgVHlsZXIgV2Fsa2VyIHRvIHN0YXJ0IHRoZSAxMHRoLiBCdXQgaW4gdGhlIGJvdHRvbSBvZiB0aGUgMTB0aCwgRGF2ZSBSb2JlcnRzIGRvdWJsZWQgYW5kIFJhbmR5IFdpbm4gc2luZ2xlZCB0byBzdGFydCB0aGUgaW5uaW5nLiAKV2hvIGtub3dzLCBidXQgaW4gdGVybXMgb2YgYW4gZXhjZWxsZW50IHdheSB0byBzcGVuZCBTdC4gClZpc2l0b3JzIGNhbiBjaG9vc2UgZnJvbSBuZWFybHkgNDAwIGhvdGVsIHJvb21zIGFuZCAxNSBzdWl0ZXMsIGFuZCBkaW5lIGluIG9uZSBvZiBmb3VyIHJlc3RhdXJhbnRzLiBSVnMgY2FuIGJlIHBhcmtlZCBpbiB0aGUgNTAgc3BhY2UgbG90IG92ZXJuaWdodCBmb3IgYSBmZWUuIApTdGFuZGFyZCBib29zdGVyIHBhY2tzIGFyZSBnb2luZyB0byBiZSB0aGUgYmVzdCB2YWx1ZSBtb25leSB3aXNlLiAKIldlJ3ZlIGNvbWUgbGlnaHQgeWVhcnMsIHF1YW50dW0gbGVhcHMgdGhyb3VnaG91dCB0aGUgeWVhcnMsIiBUb3VybmFtZW50IERpcmVjdG9yIEphY2sgRWZmZWwgc2FpZC4gIlRoaXMgeWVhciB3ZSBzZXQgYSBnb2FsIG9mIDEsMDAwIGRlYWxlcnMgYW5kIGVuZGVkIHdpdGggYSBsaXN0IG9mIDkzMCwgd2l0aCA4NTAgc2hvd2luZyB1cC4gWW91IG5lZWQgdGhhdCBtYW55IGJlY2F1c2UgdGhlcmUncyBhcHByb3hpbWF0ZWx5IDMwMCB0YWJsZXMgZ29pbmcgYXQgYW55IGdpdmVuIHRpbWUuIgooUGhvdG86IEFsZXhhbmRyYSBTdHJhdWIsIENhbmFkaWFuIEF1dG8gUHJlc3MpIHNoYXJlaG9sZGVycyBpbnZvbHZlZCB0byBjb29wZXJhdGUgaW4gaXRzIHJlc3RydWN0dXJpbmcgcGxhbnMsIG9yIGEgcmVhbGl6YXRpb24gdGhhdCBpdHMgY29yZSBicmFuZHMsIE1lcmNlZGVzIEJlbnogYW5kIENocnlzbGVyLCBuZWVkIGFuZCBkZXNlcnZlIG1vcmUgYXR0ZW50aW9uIGFuZCBtb25leSwgY2FuJ3QgYmUgc2FpZCBmb3Igc3VyZS4gCjExKSBUaGUgbWFqb3IgZGlldGFyeSBzb3VyY2Ugb2YgbG9uZyBjaGFpbiBuIDMgUFVGQXMgaXMgb2lseSBmaXNoLgpUaGUgd2lubmluZyBjb21iaW5hdGlvbiBkZXBlbmRzIHVwb24gbWFjaGluZSB0byBtYWNoaW5lLiBUaGUgcGF0dGVybiByZXF1aXJlZCBpbiBvcmRlciB0byB3aW4gaXMgc2hvd24gb24gdGhlIG1hY2hpbmVzIGl0c2VsZiwgb3IgYWNjZXNzaWJsZSBpZiB0b3VjaGVkIGF0IHRoZSByaWdodCBzcG90IG9uIHRoZSB0b3VjaCBzY3JlZW5zLiBUaGUgbW9kZXMgb2YgcmV3YXJkaW5nIG1heSBhbHNvIGJlIGRpZmZlcmVudCwgc3VjaCBhcyB0cmFuc2FjdGlvbiBvZiBhbiBhbW91bnQgdG8gdGhlIGJhciBjb2RlZCBwYXBlciwgb3Igc29tZSBjYXNoLCBvciBzb21lIGV4dHJhIGdhbWVzCkFmdGVyIHNvcnQgb2Ygc2xlZXBpbmcgaW4gdGhlIG5hc3R5IGhvdGVsLCB3ZSBoYWQgcXVpdGUgYSBnb29kIGJyZWFrZmFzdC4gCkV2ZXJ5IHRpbWUgc29tZW9uZSBwb3N0cyBhIHBpY3R1cmUsIGEgZ2lmLCBhIHZpZGVvLCBhIHNjcmVlbnNob3QsIG9yIGp1c3QgYW55dGhpbmcgcmVhbGx5IHRoYXQgaW52b2x2ZXMgc29tZSBraW5kIG9mICJjb3Jwb3JhdGUiIHRoaW5nICAgQSB2aWRlbyBnYW1lLCBhIGxvZ28sIG9yIHByb2JhYmx5IGp1c3QgZXZlbiB0aGUgdG93biBoYWxsIG9mIGEgY2l0eSBnaXZlbiBob3cgb3ZlcmJvYXJkIHlvdSBkdW1taWVzIGdvLCB5b3UgaGF2ZSB0byAvci9IYWlsQ29ycG9yYXRlIGl0LgpUaGUgbWVkaWEgbmV2ZXIgcmVhbGx5IHJlcG9ydHMgaXQgYW5kIHRoZSBwdWJsaWMgbmV2ZXIgcmVhbGx5IHNlZW1zIHRvIGNhcmUuIEV4Y2VwdCB0aGV5IGRvIHNlZW0gdG8gbm90aWNlIHRoZSBkZW1zIGFyZSB3ZWFrIHVuZGVyIGEgcmVwdWJsaWNhbiBtYWpvcml0eSBhbmQgcmVwdWJsaWNhbnMgc2VlbSBzb3J0YSBzdHJvbmcgdW5kZXIgYSBkZW0gb25lLiBBbmQgZGVtcyBnZXQgYXR0YWNrZWQgZm9yIHRoaXMuIApQT0tFUi4gCk5vdyBJIGhhdmUgdG8gbW92ZS4uIApTdGlsbCwgdGhlIFBDSSBoYWQgYSBsb25nIHBvbGljeSBvZiBwZWFjZSBhbmQgcGFydGljaXBhdGlvbiBpbiB0aGUgbGliZXJhbCBkZW1vY3JhdGljIGdvdmVybm1lbnQuIEJ1dCBpdCBjb3VsZCBub3QgY29udGFpbiB0aGUgZ3Jvd2luZyBwYXJ0aXNhbiB0ZW5zaW9ucyBieSB0aGUgYXBleCBvZiB0aGUgQ29sZCBXYXIsIHdoZW4gaW50ZXJuYXRpb25hbCB3YXJzIGxpa2UgVmlldG5hbSBtYWRlIHRoZSBjb21tdW5pc3QgY2FwaXRhbGlzdCBzdHJ1Z2dsZSBzZWVtIHRydWx5IGFwb2NhbHlwdGljLiAKTWFuIGthbm4gc296aWFsaXN0aXNjaCBzZWluIHVuZCB0cm90emRlbSBnZWdlbiBkZW4gSXNsYW0uIEZlcnRpZy4gRGVubiBkZXIgSXNsYW0gaXN0IGZhc2NoaXN0aXNjaCByZWNodHMuIE1hbiBNVVNTIGVpZ2VudGxpY2ggZGFnZWdlbiBzZWluLCB3ZW5uIG1hbiBzaWNoIFNvemlhbGlzdCBuZW5udC4KVGhlIHNjZW50IHdvbid0IHJpc2UgYXMgcXVpY2tseSBhbmQgYmUgYXMgaXJyaXRhdGluZyB0byBvdGhlcnMuIFlvdSdsbCBmaW5kIHRoZSBwcm9wZXIgYmFsYW5jZSBzb29uIGVub3VnaCwgYW5kIHlvdXIgc2NlbnQgd2lsbCBkcmF3IHBlb3BsZSBjbG9zZXIgcmF0aGVyIHRoYW4gcmVwZWwgdGhlbS4uIApNb250cmVhbCBpcyBlYXN5IGFuZCBhcyBhIFBSIHlvdSBjYW4gdGFrZSBGcmVuY2ggY291cnNlcyBvbiB0aGUgY2hlYXAuIE15IGh1c2JhbmQgcGFpZCA5MCQgZm9yIDEgeWVhciBvZiBsZXNzb25zLiAKVGhleSBoYXZlIG5vdCB3b3JyaWVkIGFib3V0IGJhbmtydXB0Y3ksIG9yIGZvb2QgYmFua3MsIG9yIGJlaW5nIG9uIGJlbmVmaXRzLCBvciBtaW5pbXVtIHdhZ2UuIApDb25kb21zIGFuZCBFbXBvd2VyaW5nIFdvbWVuICAgVGhlIGRldmVsb3BlZCB3b3JsZCBiaXJ0aCByYXRlcyBoYXZlIGNvbWUgbmVhcmx5IHRvIGEgaGFsdC4gWWVzLCB0aGUgZGV2ZWxvcGVkIHdvcmxkIGRvZXMgdXMgbW9yZSByZXNvdXJjZXMgbm93LCBidXQgbG9uZyB0ZXJtIHRoYXQgd2lsbCBwcm9iYWJseSBkZWNsaW5lLiAKV2hlbiBzZWVuIGluIHByb2ZpbGUsIHRoZXNlIGVsZWdhbnQgYnV0IHN1YnN0YW50aWFsIHRlcnJpZXJzIGFyZSB0d2ljZSBhcyBsb25nIGFzIHRoZXkgYXJlIGhpZ2guIi4gCklmIGEgcGxheWVyIGhhcyB0aGUgbG93ZXN0IHZhbHVlIG9mIGV4cG9zZWQgY2FyZHMgKGNhbGxlZCB0aGUgYnJpbmcgaW4pLCB0aGF0IHBsYXllciB3aWxsIGhhdmUgdG8gbWFrZSBhIHdhZ2VyLiBIaXMgY2hvaWNlcyB3aWxsIGJlIHRvIG1ha2UgYSBzbWFsbCBiZXQgZnVsbCBvciBhIHNtYWxsIGJldCBoYWxmLiBBbiBleGFtcGxlIHdpbGwgYmUgZWl0aGVyIGhlIGRvZXMgJDEgb3IgJDIgaW4gYSAyLzQgcG9rZXIgZ2FtZS4gVGhlIHNhbWUgcHJvY2VzcyBpcyBhcHBsaWVkIHRvIG90aGVyIHBsYXllciBpbiB0aGUgdGFibGUsIHRoZSBtb3ZlbWVudCBkb25lIGluIGNsb2Nrd2lzZS4gTm93LCB0aGUgbmV4dCBzdGVwIGlzIGZvciB0aGUgcGxheWVycyB0byBnZXQgYSBjYXJkIHdpdGggaXRzIHZhbHVlIHJldmVhbGVkLiBUaGlzIGNhcmQgaXMgY2FsbGVkIHRoZSAiNHRoIHN0cmVldC4iClRoYXQgbWVhbnMgdGhhdCBhIGhhbmQgc2hvdWxkIHR1cm4gb3V0IChhdCB0aGUgd29yc3QgY2FzZSkgOCBmb3IgbG93LCBzbyB5b3UgY2FuIGJlIGFibGUgdG8gd2luIHRoZSBsb3cgc2hhcmUgb2YgdGhlIHBvdC4gCllvdSBsb29raW5nIGZvciBldmVudHM/IE9uIHRoZSBTaWxpY29uIFByYWlyaWU/IFRoaXMgd2Vlaz8gV2VsbCwgc2h1Y2tzLiBZb3UgaGF2ZSB0byBwYXJkb24gdGhlIHVuY29udmluY2luZyBwb2tlciBmYWNlLCBidXQgd2UgYSB0YWQgZXhjaXRlZCBhYm91dCB0aGUgZXZlbnRzIHNjaGVkdWxlZCBvbiB0aGUgU2lsaWNvbiBQcmFpcmllIHRoaXMgd2Vlay4gUGVyaGFwcyB5b3UgaGVhcmQgdXMgbWVudGlvbiBCaWcgT21haGEgYSB0aW1lIG9yIDg3IGluIHJlY2VudCB3ZWVrcy4gV2VsbCwgdGhlIGNvbmZlcmVuY2UgdGFrZXMgcGxhY2UgdGhpcyB3ZWVrLCBhbmQgZXZlbiBpZiB5b3UgZGlkbiBzbmFnIGEgdGlja2V0IHRvIHRoZSBtYWluIGV2ZW50LCB0aGVyZSBhcmUgcGFydGllcyBvcGVuIHRvIHRoZSBwdWJsaWMgb24gV2VkbmVzZGF5LCBUaHVyc2RheSBhbmQgRnJpZGF5IG5pZ2h0cy4KU2lha2FtIHRvb2sgdGhlIGJhbGwgb2ZmIGEgYmFkIHBhc3MgZnJvbSBNb3JyaXMgYW5kIHdlbnQgY29hc3QgdG8gY29hc3QgYmVmb3JlIGVhc2lseSBkcmlsbGluZyB0aGUgYmFza2V0Li4gCkEgY2hyaXN0bWFzIGNhcm9sIG1vdmllIGluIGhpbmRpIGRvd25sb2FkZ29sa2VzIGdidGVhbSBnYmtleS4gTm92IDQsIDIwMTUgICAxMTUgbWluICAgVXBsb2FkZWQgYnkgU3BlZWQgVGFtaWwgT25saW5lIE1vdmllc0FhcmFueWEgS2FhbmRhbSBpcyBhIDIwMTEgSW5kaWFuIFRhbWlsIGdhbmdzdGVyIGZpbG0gLCB3cml0dGVuIGFuZCBkaXJlY3RlZCBieSBuZXdjb21lciAuIApXaGVyZSBDYW4gSSBMZWFybiBNb3JlP1RoZSBIaXN0b3JpYyBFbmdsYW5kIFdlYnNpdGUgY29udGFpbnMgYSB3ZWFsdGggb2YgaW5mb3JtYXRpb24gYWJvdXQgTGlzdGVkIHNpdGVzIGFuZCBob3cgdG8gYWRkIHRvIFRoZSBMaXN0LiAKV2F0ZXIgcmVjcmVhdGlvbiBpcywgd2l0aG91dCBxdWVzdGlvbiwgb25lIG9mIHRoZSB0b3AgZHJhd3MgdG8gc291dGhlcm4gUG9ydHVnYWwuIFdpdGggdG9wIHJhdGVkIHRvdXIgb3BlcmF0b3JzIGxpa2UgVHJpZ2FuYSBCb2F0IFRyaXBzLCBDYXBlIENydWlzZXIgYW5kIERvbHBoaW5zIERyaXZlbiBhbmQgZXF1aXBtZW50IHJlbnRhbCBidXNpbmVzcyBsaWtlIEFtYWRvIFN1cmZjYW1wIGFuZCBFeHRyZW1lIEFsZ2FydmUsIHRoZXJlIGlzIG5vIHNob3J0YWdlIG9mIHRoaW5ncyB0byBkby4gCmJsdWZmIGFtYXRldXIgaW4gcG9rZXIgdG91cm5hbWVudApJIHNvcnJ5LCBidXQgaG93IGRlbnNlIGNhbiB5b3UgYmU/IFlvdSB0aG91Z2h0IHlvdXIgd2lmZSB3b3VsZCBhcnJhbmdlIGZvciB5b3UgdG8gY2hlYXQgb24gaGVyPyBBbmQgeW91IHdlcmUgb2sgd2l0aCByZWNlaXZpbmcgYSBzZXh1YWwgZmF2b3IgZnJvbSBzb21lb25lIHdobyBpc24geW91ciB3aWZlPz8gV2hhdD8/IFlvdSB0aG91Z2h0IHRoYXQgd2FzIG5vcm1hbCBmb3IgYSBjb21taXR0ZWQsIG1hcnJpZWQgbWFuIHRvIGRvPyAoWWVzLCBoYXBweSBlbmRpbmdzIGFyZSBwb3B1bGFyLCBidXQgbW9zdGx5IGFtb25nIHNpbmdsZSBtZW4gb3IgbWVuIHdobyBhcmVuIGluIGhhcHB5IHJlbGF0aW9uc2hpcHMgYW5kIGFyZSBvayB3aXRoIGNoZWF0aW5nKS4uIApJIHRoaW5rIGl0IHdvdWxkIGJlIHZlcnkgaGFyZCB0byB3cml0ZSB0aGVzZSBjaGFyYWN0ZXJzIGFzIGxpa2FibGUuIEphbWVzIFBvdHRlciwgdGhlIHN1cHBvc2VkIHByb3RhZ29uaXN0LCBzb3VuZHMgbGlrZSBhIHZpbGxhaW4gZnJvbSBhIEpvaG4gSHVnaGVzIGZpbG0sIGFuZCBTbmFwZSBjZXJ0YWlubHkgaXMgb2ZmIGJlaW5nIERlYXRoIEVhdGVyeS4gClRoZSBzdGF0ZW1lbnQgZnJvbSBQYW1lbGEncyBwdWJsaWNpc3QgYWxzbyBhZGRyZXNzZWQgdGhlIHJ1bW9ycyBzdXJyb3VuZGluZyBBbmRlcnNvbidzIGZyaWVuZHNoaXAgd2l0aCB0aGUgbGF0ZSBTaW1wc29ucyBjbyBkZXZlbG9wZXIgU2FtIFNpbW9uIGFmdGVyIHJlcG9ydHMgY2xhaW1lZCB0aGF0IHRoZSA1OSB5ZWFyIG9sZCBzdGFyLCB3aG8gcGFzc2VkIGF3YXkgZWFybGllciB0aGlzIG1vbnRoIGFmdGVyIGEgbG9uZyBiYXR0bGUgd2l0aCBjYW5jZXIsIHNlbnQgZXh0cmF2YWdhbnQgZ2lmdHMgdG8gdGhlIGFjdHJlc3MgYmVmb3JlIGhpcyBkZWF0aC4gQWRkaXRpb25hbGx5LCBudW1lcm91cyByZXBvcnRzIHN1Z2dlc3RlZCB0aGF0IEFuZGVyc29uIGRpZCBub3QgYXR0ZW5kIFNpbW9uJ3MgZnVuZXJhbC4KUnVzc2lhIGlzIGh1Z2UgdGhleSBjYW4gc2VsZiBzdXN0YWluIDIuIE1vc3QgYXJ0IG1vdmVtZW50cyB3ZXJlIGxvY2F0aW9uIGJhc2VkIGF0IHRoaXMgcG9pbnQgZHVlIHRvIHRoZSBmYWN0IHRoYXQgd2UgY291bGRuJ3QgZWFzaWx5IGNvbW11bmljYXRlIG9yIHdvcmsgb3ZlciBsb25nIGRpc3RhbmNlcywgdGhlcmUgd2FzIGxlc3MgY3Jvc3NvdmVyLiBBZGRpbmcgdG8gdGhpcyB0aGUgc292aWV0cyB3ZXJlIGluc3VsYXIgYW5kIHBhcmFub2lkLCBpdCB3b3VsZCBiZSBoYXJkIHRvIHdvcmsgd2l0aCBlYWNoIG90aGVyLiAzIHRoZXkgZGV2ZWxvcGVkIGNsb3NlIHRvZ2V0aGVyIHNvIHdoaWxlIEknbSBzdXJlIGNvbnN0cnVjdGl2aXNtIGRpZCBoYXZlIHNvbWUgaW5mbHVlbmNlIGluIEJhdWhhdXMgaXQgd2Fzbid0IGFzIGJpZyBhcyBzYXkgdGhlIHBoaWxvc29waGljYWwgaW5mbHVlbmNlIG9mIFdpbGxpYW0gTW9ycmlzLiBXaGlsZSBCYXVoYXVzIGRpZCBpbmNsdWRlIGdyYXBoaWMgZGVzaWduIGFuZCBhcnQgaXQgbW9zdGx5IHN0YXJ0ZWQgYXMgYW4gYXJjaGl0ZWN0dXJlIGFuZCBkZXNpZ24gbW92ZW1lbnQuCkkgZGVjaWRlZCB0byBub3QgaGF2ZSBjaGlsZHJlbiAgIGZvciBhIG51bWJlciBvZiByZWFzb25zLiBJIHRoaW5rIHlvdXIgcXVlc3Rpb24gc291bmRzIGxpa2UgYSBwZXJmZWN0bHkgbm9ybWFsIHRob3VnaHQgdGhhdCBldmVuIHBlb3BsZSB3aXRoIGtpZHMgdGhpbmsgaGVyZSBhbmQgdGhlcmUuIEkga25vdyBteSBmcmllbmRzIHdpdGgga2lkcyBsb29rIGF0IHRoZSB3b3JsZCBzb21ldGltZXMgYW5kIHdvbmRlciB3aHkgZGlkIHRoZXkgYnJpbmcgYSBraWQgaW50byB0aGlzIHdvcmxkLiAKSSBldmVuIG9mZmVyZWQgdG8gZ2l2ZSB0aGVtIG15IGdhbWUgYW5kIHRocm93IGFsbCBmdXR1cmUgY29tcGV0aXRpb25zIGJlY2F1c2UgSSBqdXN0IHdhbnRlZCB0byBiZSB0aGVyZSB0byBwbGF5LiAKIkkgdGhpbmsgdGhlcmUgc3RpbGwgYW1hbGdhbWF0aW9ucyBhbmQgY2xvc3VyZXMgdG8gaGFwcGVuLCB1bmZvcnR1bmF0ZWx5LCBidXQgSSBzdXNwZWN0IHdlIG5vdCB0b28gZmFyIGF3YXkgZnJvbSBiZWluZyBzZXR0bGVkLCIgTXIgQmFsbCBzYWlkLiBNciBPIHNhaWQgaGUgdG9vIHJlbWFpbmVkIG9wdGltaXN0aWMgYWJvdXQgdGhlIGZ1dHVyZS4gIldpdGggYW55IGhpY2N1cCBpbiBidXNpbmVzcyB5b3UgbmVlZCB0byBiZSByZWFkeSB0byB3ZWF0aGVyIHRoZSBzdG9ybSwiIGhlIHNhaWQuIApIZSB3YXMga25vY2tlZCBvdXQgdGhhdCB5ZWFyIHNob3J0IG9mIHdpbm5pbmcgbW9uZXkuIApUaGUgbWFpbiBqb2Igb2YgdGhlIG9uYm9hcmQgb3BlcmF0b3IgaXMgbWFraW5nIHN1cmUgdGhhdCBwYXNzZW5nZXJzIGdldCBvbiBhbmQgb2ZmIHNhZmVseS4gTGlrZSB0aGUgYWlycG9ydCBwZW9wbGUgbW92ZXJzLCB0aGUgRExSIGlzIGJhc2VkIG9uIGZ1bmRhbWVudGFsbHkgbmV3IGVxdWlwbWVudCBhbmQgdW5saWtlIHRoZSB1bmRlcmdyb3VuZCBzeXN0ZW0gcHJvcGVyIGhhcyBubyBsZWdhY3kuLiAKVW5iZWxpZXZhYmxlLiAKV2UgZmVlbCB0aGF0IG91ciBvbmxpbmUgcHJlc2VuY2UgaXMgZ2V0dGluZyBzdHJvbmdlciBhbmQgc3Ryb25nZXIgYW5kIHRoYXQgaXMgd2hhdCB3ZSB3YW50LiAKUG9ydGlvbiBvZiBLaXBsaW5nIEF2ZW51ZSB0byBjbG9zZSB0aGlzIHdlZWtlbmQgYXMgY3Jld3MgcmVtb3ZlIGJyaWRnZXMKTm8gb25lIGF0IGhvbWUuIFBsZWFzZSBzdG9wIGJ5IHRoZSBtYWluIHBvc3Qgb2ZmaWNlIHdpdGhpbnRoZSBuZXh0IHRocmVlIGRheXMsIHRoZSBub3RlIHJlYWQuIApTaW5jZSAxOTgwLCB0aGUgbnVtYmVyIG9mIHJlc2lkZW50cyBoYXMgbW9yZSB0aGFuIHF1YWRydXBsZWQgdG8gbW9yZSB0aGFuIHR3byBtaWxsaW9uIHRvZGF5LiBXaGlsZSB0aGUgR3JlYXQgUmVjZXNzaW9uIGJyaWVmbHkgZGVudGVkIHRoZSB0cmVuZCAgIHRoZSBwb3B1bGF0aW9uIGRyb3BwZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGdlbmVyYXRpb25zIHRocm91Z2ggMjAwOCwgYW5kIGFnYWluIGluIDIwMTEgICB0aGUgbGFzdCBmaXZlIHllYXJzIChQREYpIGhhdmUgc2VlbiBhIHJldHVybiB0byBtb2RlcmF0ZSBncm93dGguLiAKSSB0aGluayB0aGlzIGFydGljbGUgZG9lcyBhIGdvb2Qgam9iIG9mIHBvaW50aW5nIG91dCBpc3N1ZXMgd2l0aCB0aGUgbWV0cmljIHRoYXQgaXMgYmVpbmcgdXNlZCB0byBtYWtlIHRoZSBjbGFpbSB0aGF0IHBvdmVydHkgaXMgZGVjcmVhc2luZy4gQSBiZXR0ZXIgbWV0cmljIHdvdWxkIGJlIHRoZSBwZXJjZW50YWdlIG9mIHRoZSB3b3JsZCBwb3B1bGF0aW9uIHRoYXQgaXMgc3VmZmVyaW5nIGZyb20gbWFsbnV0cml0aW9uLCBvciB0aGUgcGVyY2VudGFnZSBvZiB0aGUgd29ybGQgcG9wdWxhdGlvbiB0aGF0IGlzIGJlaW5nIGRpc3BsYWNlZCBieSB3YXIgb3IgY29uZmxpY3RzLCBvciB0aGUgcGVyY2VudGFnZSBvZiBjaGlsZHJlbiB0aGF0IGRpZS4gSWYgYmVpbmcgcHVsbGVkIG91dCBvZiBtZWFucyBhbnl0aGluZywgaXQgaGFzIHRvIGJlIGluIHJlbGF0aW9uIHRvIGltcHJvdmluZyB0aGUgcXVhbGl0eSBvZiBsaWZlIG9mIHRoZSBwZW9wbGUgd2l0aCBsZXNzIHJlc291cmNlcyBnbG9iYWxseS4KVGhleSBjbGFpbSB0byBiZSBtYW5hZ2VkIGJ5IHRoZSBzdGF0ZSBkZXBhcnRtZW50LCBhbmQgdGhleSBjYW1lIGZvciBhbiBpbnNwZWN0aW9uIG9uY2UsIGJ1dCB3ZSBoYWQgYWR2YW5jZWQgbm90aWNlLi4gCkduYXJsZW1hbmNlIHUKTm93LCB0aGV5IGhhdmUgYSBmb3VuZGF0aW9uICh0aGUgbGFyZ2VzdCBnYW1pbmcgYXJlYSB0aGV5IGV2ZXIgbWFkZSkgdG8gY29udGludWUgdXBkYXRpbmcsIHBhdGNoaW5nIGFuZCBpbXByb3ZpbmcgZm9yIHRoZSBuZXh0IGRlY2FkZSwgZXhhY3RseSBsaWtlIGN1cnJlbnQgbXVsdGlwbGF5ZXIgdGl0bGVzIGhhdmUgYmVlbiBkb2luZy4gClNhbnRpODcxIHUKVGhpbmsgcmVhbGx5IGhhcmQgYWJvdXQgd2hhdCB0aGUgcGVyZmVjdCBwYXJ0bmVyIG1lYW5zIHRvIHlvdS4gClNvbWUgbXVuaWNpcGFsIGdvdmVybm1lbnRzIHNlZW0gc28gdXNlZCB0byB0aGUgcGlsZXMgb2YgcmVkIHRhcGUgdGhhdCB0aGV5IGRvbiByZWNvZ25pemUgdGhleSBoYXZlIGEgcHJvYmxlbS4gClRvdXRlZm9pcywgaWwgbmUgc2VtYmxlIHBhcyBqdWRpY2lldXggZGUgcGFybGVyIGRlIGNvbmN1cnJlbmNlIGVudHJlIGNlcyB0ZXh0ZXMuIApGYW1pbHkuIFNoaW5kbG9kb24ga2VyLCBPZXR0OyBpaXJpY2UgTGlnaHRuZXIuIENKZW9yZ2UgS2ludCBtcGFuaWNkIGhvbWUgYnkgdGhlIE1ycy4gCk5vIGJ1dCB0aGV5IGNhbiBlZmZlY3RpdmVseSBkZWZlbmQgYWdhaW5zdCBiaW9sb2dpY2FsIHdlYXBvbnMgYnkgZGVzdHJveWluZyBhbnkgbGFicyB0aGF0IHdvdWxkIHByb2R1Y2UgdGhlbSBhbmQgdGhlIHJlc3Qgb2YgTkFUTyBhbGxvd3MgdGhlbSB0by4gR3Vlc3Mgd2hhdCB0aG91Z2g/IFBlb3BsZSBnZXQga2lsbGVkIGluIHRob3NlIGF0dGFja3MuCkJhZCBwbGF5ZXJzIGFyZW4gcmV3YXJkZWQgbW9yZSBkdWUgdG8gaGFuZCBzdGF0aXN0aWNzLCBidXQgc2ltcGx5IGJlY2F1c2UgdGhleSBhcmUgaW4gbW9yZSBoYW5kcyB0aGV5IHNob3VsZCBub3QgYmUgaW4gKGNvbXBhcmVkIHRvIGFjdHVhbCBjYXNoIGdhbWVzKS4gUGVvcGxlIGNoYXNlIG1vcmUgYW5kIHBsYXkgb3V0IGhhbmRzIHdoZW4gdGhlcmUgaXMgbm90aGluZyBhdCBzdGFrZS4gSXQgbm90IHJpZ2dlZC4gClRoYXQgd2hhdCByZWFsbHkgaW1wb3J0YW50IGlzIHRvIHB1cnN1ZSB3aGF0IG1ha2VzIHlvdSBoYXBweSwgSSBkb24gZnVsbHkgdW5kZXJzdGFuZCB3aHkgcGVvcGxlIGluc2lzdCB0aGF0IHJldGlyZW1lbnQgaXMgdGhlIHRpbWUgZm9yIGhhcHBpbmVzcyB3aGVuIHlvdXIgbGlmZSBpcyA4MCUgb3ZlciBhbmQgaGVhbHRoIGlzIGRldGVyaW9yYXRpbmcuIApIb3cgZG8geW91IGZsdXNoIGFuIGVuZ2luZT8KVGhlIEhvcnNlIHBlcnNvbiBpcyBhIHNvY2lhYmxlIGxpa2VhYmxlIHBlcnNvbiBtb3N0IG9mIHRoZSB0aW1lLCB0aGV5IGNhbiB0YWtlIGFkdmFudGFnZSBvZiB0aGlzIGJ5IGdldHRpbmcgZXZlcnlib2R5IHRvIHdvcmsgdG9nZXRoZXIgdG8gYWNoaWV2ZSBnb2Fscy4gCkl0J3MgZ3JlYXQgZnVuIHRoaW5raW5nIHRoZXkgY2FuJ3QgbGFzdC4gCklzIGFsc28gbGlrZSBzYXlpbmcgQXV0aXN0aWMgcGVvcGxlIHNob3VsZCBiZSByZWZ1c2VkIHNlcnZpY2UsIGp1c3QgYmVjYXVzZSB0aGV5IGhhdmUgZ2VuZXRpYyBwcm9ibGVtIGFuZCBpdCBzYXlzIGluIHRoZWlyIGJpYmxlIHRoYXQgaXQgd3JvbmcuIEl0IG9uZSB0aGluZyB0byBoYXZlIGEgcGVyc29uYWwgcmVsaWdpb3VzIGZyZWVkb20uLiAKSGUgc2hvdWxkIGJlIDExMCUgc3VwcG9ydGl2ZSBvZiB5b3VyIHJlY292ZXJ5IGFuZCB5b3VyIG1lbnRhbCBoZWFsdGguIApUaGlzIE1hcmNoIHdlIHdpbGwgd2VsY29tZSBvdXIgZmlyc3QgY2hpbGQgaW50byB0aGUgd29ybGQsIGFuZCBpbiBKdWx5IHdlIHdpbGwgY2VsZWJyYXRlIG91ciB0aGlyZCB3ZWRkaW5nIGFubml2ZXJzYXJ5IChhbmQgb3ZlciA2IHllYXJzIHRvZ2V0aGVyKS4KVGhlIHN0YXlpbmcgb3V0IGxhdGUgaXMgYmVjb21pbmcgYSBkZWFsIGJyZWFrZXIgYW5kIHRoaXMgaXMgbGlrZSB0aGUgaWNpbmcgb24gdGhlIGNha2UuLiAK|<---