--->|QXJjaGltZWRlYW5jcnlzdGFsIHUKSXQgd2FzIGFsc28gdG8gbWl0aWdhdGUgUE9URU5USUFMIHByb2JsZW1zIHdpdGggbWV0YWNhbmFkYS90aGVfZG9uYWxkLiAKU2V2ZW4gQ2FyZCBJbnNwZWN0b3IgMlRoaXMgaXMgbGFiZWxlZCBhcyB0aGUgImxpdHRsZSBicm90aGVyIiBvZiB0aGUgSG9sZGVtIEluc3BlY3RvciAyIHBva2VyIHNvZnR3YXJlLiBUaG91Z2ggaXQgaGFzIHRoZSBhYmlsaXR5IHRvIHRyYWNrIHVwIGNhcmRzIGFuZCBvdXRzLCB0aGUgYXZhaWxhYmxlIHByb2ZpbGVzIGFyZSBub3QgdGhhdCBjb21tZW5kYWJsZS4gSXQgZG9lcyBub3QgYWxzbyBhbGxvdyB5b3UgdG8gcnVuIGNvbXBsZXggc2ltdWxhdGlvbnMuIApJdCB3aWxsIGNvbWUgdXAgd2l0aCBhIGxvYWQgb2YgYWRkcmVzcydzICggc2hvd24gb24gdGhlIGxlZnQgKS4gU28gd2UgbmVlZCB0byBuYXJyb3cgdGhpcyBkb3duLCBJIGdldCBpbiBhIGZpZ2h0IGFuZCBsb3NlIDVocCwgaSBub3cgaGF2ZSA5NS4gSSBwdXQgdGhhdCBpbiB0aGUgdmFsdWUgYW5kIG5leHQgc2NhbiwgVGhlIGxpc3Qgc2hvdWxkIGhhdmUgbmFycm93ZWQsIGRvIHRoaXMgdGlsbCB5b3UgZmluZCBvbmUuIApCZWVuIHdhbnRpbmcgdG8gZG8gc29tZXRoaW5nIGxpa2UgdGhpcyBmb3IgYSBsb25nIHRpbWUsIHNjcmVhbWVkIEpvaG5ueSBNYWMgaW4gdGhlIGRpYXJ5IHJvb20uIGNvdWxkIGJlIGEgaHVnZSBtb3ZlIFtldmljdGluZyBKdWxpYV0uIEkgY291bGQgZ2V0IG15IHJldmVuZ2UgYnV0IGF0IHRoZSBzYW1lIHRpbWUsIFZhbmVzc2Egd2FudHMgTWVnIG91dC4gV2hhdCBkbyBJIGRvPyBwbGFpbiBtYXRoLCBTdGV2ZSwgY29uY3VycmVkLCBzbyBvYnZpb3VzLiBUaGlzIGlzIHRoZSB0aW1lIHRvIHNwbGl0IHVwIHRoZSB0d2lucy4gVGhleSB3aWxsIG91dG51bWJlciB1cyBpbiBmaW5hbCA1LiBJIGluIHdheSBvdmVyIG15IGhlYWQuIGdldCB0aGlzOiBBIHN0dXBpZCBmYW4gd2l0aCB0b28gbXVjaCB0aW1lIG9uIGhpcyBoYW5kcyBzaG91dGVkIHRocm91Z2ggYSBidWxsaG9ybiBvdXRzaWRlIHRoZSBzdHVkaW8gYmFja3lhcmQgV2VkbmVzZGF5IG5pZ2h0IHRvIEphbWVzLCBKb2hubnkgYW5kIE1lZzogd2FudHMgSnVsaWEgb3V0LiBBdXN0aW4gYW5kIFZhbmVzc2EgaGF2ZSBkZWFscyB3aXRoIGV2ZXJ5b25lLiBUb28gYmFkIHRoZSB0cmlvIHRob3VnaHQgdGhleSBoZWFyZCB3YW50cyBKdWxpYSBvdXQuCk1lZ3luIEtlbGx5IG91c3RlZCBmcm9tICdUb2RheScgc2hvdyBhZnRlciBibGFja2ZhY2UgcmVtYXJrcwpCLiAKQnV0IHRoZSB3YXJzLCB1bmxpa2UgaGVhbHRoIGNhcmUsIGFyZSBuZXZlciBkaXNjdXNzZWQgYXMgZWNvbm9taWMgaXNzdWVzLiBJbnN0ZWFkLCBwYXRyaW90aXNtIGFuZCBuYXRpb25hbGlzbSBtYWtlIGRpc2N1c3NpbmcgdGhlIGFjdHVhbCBjb3N0IG9mIHdhciBsaWtlIHRhbGtpbmcgYWJvdXQgdGhlIGNvc3Qgb2YgYSB3ZWRkaW5nICh3YXMgaXQgcmVhbGx5IHdvcnRoIGl0Pykgb3IgYSBjaGlsZCAoaG93IG1hbnkgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMgd2lsbCBiZSBzcGVudCBmcm9tIGJpcnRoIHRvIGNvbGxlZ2U/KS4gVGhlc2UgInNhY3JlZCIgdW5kZXJ0YWtpbmdzICBraWxsaW5nLCBtYXRpbmcsIGFuZCByZXByb2R1Y3Rpb24gIGFyZSBub3QgdG8gYmUgcmVkdWNlZCB0byBkb2xsYXJzLi4gCkEgY291cGxlIG9mIG1vbnRocyBhZ28sIHdoaWxlIHRoZSBleGVjdXRpdmUgY29tbWl0dGVlIHdhcyBkZWJhdGluZyB0aGUgZ2FtaW5nIGV4cGFuc2lvbiwgSSBoYWQgYSBicmllZiBleGNoYW5nZSB3aXRoIExheXRvbiBvbiBzb2NpYWwgbWVkaWEuIEkgY291bGRuIHVuZGVyc3RhbmQgd2h5IGV2ZXJ5IGNvdW5jaWxsb3Igd2hvIG9wcG9zZWQgdGhlIHBsYW4gb2ZmZXJlZCBubyBhbHRlcm5hdGl2ZXMuIApBYXJvbiB3aWxsIGJlIGRvaW5nIGEgY29va2luZyBpbnRlcm5zaGlwIGNhbGxlZCBhIHN0YWdlIChyaHltZXMgd2l0aCBtYXNzYWdlKSBhdCBNb3RvIGluIENoaWNhZ28gdGhpcyBzdW1tZXIsIHdoaWxlIGxpdmluZyB3aXRoIGEgcmVsYXRpdmUgaW4gRXZhbnN0b24sIElsbC4sIG91dHNpZGUgdGhlIGNpdHkuIEZvciBoaXMgTmV3IFZpc3RhIHNlbmlvciBwcm9qZWN0LCB3aGljaCBoZSdsbCBiZWdpbiBpbiBoaXMganVuaW9yIHllYXIsIGhlIHBsYW5zIHRvIHB1dCB0b2dldGhlciBhIFlvdSBUdWJlIGNvb2tpbmcgc2hvdyBhbmQgY29va2Jvb2suIEFmdGVyIGdyYWR1YXRpb24sIGhlIHdpbGwgdHJhdmVsIGFuZCBkbyBzdGFnZXMgYmVmb3JlIGRlY2lkaW5nIHdoZXRoZXIgb3Igbm90IHRvIGdvIHRvIGN1bGluYXJ5IHNjaG9vbC4gCkF0IHRoZSBzYW1lIHRpbWUsIEZhY2Vib29rIGNvdWxkIGNlbWVudCBpdHMgc3RhdHVzIGFzIGEgZG9taW5hbnQgcGxhdGZvcm0gZm9yIG90aGVyIGVtZXJnaW5nIGNvbXBhbmllcy4uIApEb2RkcyBtYWtlcyB0aGUgY2FzZSBoZXJlIHRoYXQgInJlc3BlY3QgZm9yIGtub3dsZWRnZSIgaXMgcHJlY2lzZWx5IHdoYXQgbGVhZHMgdG8gT2VkaXB1cyBkZXN0cnVjdGlvbiwgYW5kIEkgc3VzcGVjdCBpdCBhIHJlYWRpbmcgdGhhdCBOaWV0enNjaGUgd291bGQgaGF2ZSBhcHByZWNpYXRlZC4gQmVhciBpbiBtaW5kIHRoYXQgdGhlIERpb255c2lhbiBpbiBUaGUgQmlydGggb2YgVHJhZ2VkeSBpcyBtb3JlIHRoYW4ganVzdCBzdHJvbmcgZW1vdGlvbjogaXQgaXMgYWxzbyB0aGUgZGVhdGggd2lzaCBvZiBhbGwgYXBwZWFyYW5jZSwgdGhlIHllYXJuaW5nIGZvciB0aGUgYW5uaWhpbGF0aW9uIG9mIHRoZSBpbmRpdmlkdWFsIGluIGJlaW5nIHJldW5pdGVkIHdpdGggdGhlIHByaW1hbCB1bml0eSB1bmRlcmx5aW5nIGFsbCBvZiBleGlzdGVuY2UuIApHZXR0b3RhbGx5Z2F5YWJvdXRpdCAgIDI2IHBvaW50cyAgc3VibWl0dGVkIDI3IGRheXMgYWdvCldoZW4gd2UgYnJva2UgdXAsIHRoZWlyIHdlcmUgbm8gaGFyZCBmZWVsaW5ncyBhdCBhbGwuIApUaGUgZSBjb21tZXJjZSBnaWFudCBoYXMgYmVlbiBodWRkbGluZyB3aXRoIHRoZSBhZ2VuY3kgd29ybGQgY29tcGFuaWVzIGxpa2UgT21uaWNvbSwgV1BQLCBEZW50c3UgQWVnaXMgYW5kIG90aGVycyBhYm91dCBob3cgdGhleSBjYW4gcGFydG5lciBvbiB0aGUgZnV0dXJlIG9mIGFkdmVydGlzaW5nIG9uIHRoZSBwbGF0Zm9ybSwgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIGFwcGx5aW5nIGRhdGEgdG8gdGFyZ2V0aW5nIGFkcyBhbmQgbWVhc3VyaW5nIGhvdyB0aG9zZSBhZHMgcGVyZm9ybS4KSSBzdXBwb3NlIGl0cyBwb3NzaWJsZSB0byBraWxsIHRoZW0gYWxsIGxvdWRseSBidXQgaXRzIG11Y2ggbW9yZSBkaWZmaWN1bHQgYW5kIGlmIHlvdSBkaWUgeW91IHRlY2huaWNhbGx5IHN0YXJ0IG92ZXIuIE1lYW5pbmcgeW91IGNhbiBzYXZlIGR1cmluZyB0aGUgbWlzc2lvbiBpZiB5b3Ugc2NyZXcgdXAgYW5kIGdvIGJhY2sgdG8gaXQgYnV0IEkgbmV2ZXIgZGlkIHRoYXQgYmVjYXVzZSBpdHMgbm8gZnVuIGFuZCBqdXN0IHN0YXJ0ZXMgb3ZlciB3aGVuZXZlciBJIGRpZWQuLiAKQXVjaCB3ZW5uIGRpZXNlciBHbGF1YmUgenUgZGVuIG5haXZlcmVuIGdlaHJ0LCBpc3QgZXIgbmljaHQgbnVyIGZyIEtpbmRlciBnZWVpZ25ldC4gQmVzb25kZXJzIGF1cyBlcmtlbm50bmlzdGhlb3JldGlzY2hlciBTaWNodCBnaWJ0IGVzIGFuIGlobSBpbnRlcmVzc2FudGUgQXNwZWt0ZSwgd2VpbCBlciBzaWNoIHZpZWxlbiBQcm9ibGVtZW4gc3RlbGx0LCBkaWUgaW4gYW5kZXJlbiBSZWxpZ2lvbmVuIG5vcm1hbGVyd2Vpc2UgdW50ZXIgZGVuIEtjaGVudGlzY2ggZ2VrZWhydCB3ZXJkZW4uIFplbnRyYWxlcyBUaGVtYSBpc3QgZGllIEZyYWdlc3RlbGx1bmc6IFdhcyBrYW5uIGljaCB2b24gbWVpbmVtIEdsYXViZW4gZXJ3YXJ0ZW4/IFp1emFobHVuZ3NwZmxpY2h0aWdlIFd1bmRlcmhlaWx1bmdlbj8gRWluIGdla2hsdGVzIEJpZXI/IFVuZCBhbmRlcnMgaGVydW06IFdhcyBtdXNzIGljaCBmciBtZWluZW4gR2xhdWJlbiB0dW4/IEF1Y2ggbWFsIGVpbmthdWZlbiBnZWhlbj8gRGVuIEtobHNjaHJhbmsgcHV0emVuPyBaZWlnZSBtaXIsIHdhcyBkdSBpbiBkZWluZW0gS2hsc2NocmFuayBoYXN0LCB1bmQgaWNoIHNhZ2UgZGlyIHdvcmFuIGR1IGdsYXVic3QuIFdpciBzaW5kIGJlcnpldWd0IGRhdm9uLCBkYXNzIGltIGdlc2NobG9zc2VuZW4gS2hsc2NocmFuayBkYXMgTGljaHQgYXVzIGlzdCwgYWJlciB3aXIga25uZW4gZXMgbmljaHQgYmVycHJmZW4uIERlbm4gd2VubiB3aXIgZGllIFRyIGF1Zm1hY2hlbiB1bSBuYWNoenVndWNrZW4sIGlzdCBkYXMgTGljaHQgd2llZGVyIGFuLiBNYW4gbXNzdGUgc2ljaCBzZWxic3QgaW0gS2hsc2NocmFuayBiZWZpbmRlbiB1bmQgZGllIFRyIGhpbnRlciBzaWNoIHp1IG1hY2hlbi4gTnVyIHBhc3N0IGVpbiBNZW5zY2ggbmljaHQgaW4gZWluZW4gS2hsc2NocmFuaywgaGNoc3RlbnMgZWluIEJhYnkuIFdlaWwgZXMgc2ljaCBhbHNvIG5pY2h0IGJlcnByZmVuIGxzc3QsIGJsZWlidCBlaW5lbSBuaWNodHMgYW5kZXJlcyBicmlnLCBhbHMgZGFyYW4genUgZ2xhdWJlbiBvZGVyIGRpZSBLaGxzY2hyYW5rdHIgaW1tZXIgb2ZmZW4gc3RlaGVuIHp1IGxhc3Nlbi4KRGVtIHdpZGVyc3ByaWNodCBkaWUgd2FobCBkZXIga25zdGxlciwgZGEgZGFzIGF1c25haG1zbG9zIHBlcnNvbmVuIHNpbmQgZGllIHNjaG9ubWFsIGZmZW50bGljaCBwb3NpdGlvbiBnZWdlbiByZWNodHMgYmV6b2dlbiBoYWJlbi4gQW0gbmFoZWxpZWdlbnN0ZW4gaXN0IGFsc28gZWluIGRldXRzY2hlciBuZW9uYXppLiAKVGhpcyBjYW4gYmUgdmVyeSB1c2VmdWwgaWYgeW91IGFyZSBzdGFuZGluZyBpbiBsaW5lIGF0IHRoZSBETVYgb3IganVzdCBzaXR0aW5nIGluIHRoZSBwYXJrIHdoaWxlIHdhdGNoaW5nIHlvdXIga2lkcyBwbGF5LiAKQnV0IHZpZ2lsYW50ZSBqdXN0aWNlIGlzIHByZXR0eSBtdWNoIGhvdyBqdXN0aWNlIHdvcmtlZCBmb3IgaHVtYW5pdHkgZm9yIGEgbG9uZyB0aW1lIGJlZm9yZSBvdXIgbW9kZXJuIGRheXMgb2YgY291cnRob3VzZXMsIHNvIGl0IGRlZmluaXRlbHkgaGFkIGl0cyBwbGFjZSBpbiBoaXN0b3J5IGFuZCBpZiBtb2Rlcm4gY291cnRob3VzZXMgZmFpbCB0byBwcm92aWRlIGFkZXF1YXRlIGp1c3RpY2UgdG8gdGhlaXIgcGVvcGxlIHRoZW4gaXQgaXMgc3RpbGwgYSByZW1pbmRlciB0aGF0IHRoZXJlIGFyZSBjb25zZXF1ZW5jZXMgZm9yIGZ1Y2tpbmcgb3ZlciBwZW9wbGUgZXZlbiBpZiB0aGUgcG93ZXIgc3RydWN0dXJlIGRvZXNuIGxvb2sgdGhhdCB3YXkuLiAKSXQgYSBiaXQgZGlmZmljdWx0IHRvIGZ1bGx5IGV4cGxvcmUgdGhlIHJpY2huZXNzIG9mIG91ciBsYW5ndWFnZSB3aXRob3V0IHRoZSBmZWFyIG9mIHNvdW5kaW5nIGxpa2UgYSBob3QgdHViIHByb2Zlc3Nvci4KTWFueSBsaWtlIHN1aXRlZCBwb2tlciBmZWx0IG92ZXIgdGhlIGNvbW1vbiBncmVlbiBwb2tlciBmZWx0LiBUaGlzIG1hdGVyaWFsIGlzIHR5cGljYWxseSB3YXRlciBwcm9vZmVkIG9uIHRoZSBiYWNrIHNpZGUgYW5kIGlzIHVzdWFsbHkgYSBwb2x5ZXN0ZXIgYW5kIG9sZWZpbiBibGVuZC4gCk1hbGdyIGxhIHNpbmd1bGFyaXQgcXVpIGxlcyBwYXJ0aWN1bGFyaXNlLCBjZXMgcGxhbnRlcyBuJ2VuIHNvbnQgcGFzIG1vaW5zIGRvdWVzIGRlIHF1YWxpdHMgZG9udCBsJ2FtYml2YWxlbmNlIGFwcGFyZW50ZSBwb3VycmFpdCBsZXMgZGlzdGluZ3VlciBlbiByYWlzb24gZCd1biB0cnVjaGVtZW50IGFydGlmaWNpZWwgY29uc2lzdGFudCAgbGVzIHJhbmdlciBkYW5zIGRlcyBncm91cGVzIHNvbGlkZW1lbnQgdGlxdWV0cy4gQSBsJ2V4YW1lbiBhdHRlbnRpZiBkdSBqYXJkaW4gZCdIY2F0ZSwgaWwgbidlc3QgZ3VyZSBwb3NzaWJsZSBkZSBzZSBib3JuZXIgdW5pcXVlbWVudCAgZW4gY2F0Z29yaXNlciBsZXMgcGxhbnRlcyAgbCdhaWRlIGQnYXNzb2NpYXRpb25zIGFyYml0cmFpcmVzLCBwdWlzcXVlLCBkYW5zIGxlIGNhZHJlIHF1aSBub3VzIGludHJlc3NlLCBsZXMgY2xzIGRlIGR0ZXJtaW5hdGlvbiBkcGFzc2VudCBsYSBzaW1wbGUgbG9naXF1ZSBkZSBsJ2hlcmJpZXIuLiAKSSBqdXN0IHRvbGQgbXkgbW9tIG5vIHdoZW4gSSBuZWVkZWQgdG8gdGVsbCBoZXIgbm8uIEkgc2FpZCB0aGFuayB5b3Ugd2hlbiBzaGUgZGlkIHNvbWV0aGluZyBJIGFwcHJlY2lhdGVkLiBBbmQgbW9zdCBpbXBvcnRhbnRseSwgSSBwaWNrZWQgbXkgYmF0dGxlcy4gClRoZSBNZXJjdXJ5IE5ld3MgYWxzbyByZXBvcnRlZCB0aGF0IHRoZSBNZXRzIG9mZmVyZWQgc3BlZWR5IG91dGZpZWxkIHByb3NwZWN0IENhcmxvcyBHb21leiB0byB0aGUgR2lhbnRzIGZvciBTYW5jaGV6LCBhbmQgdGhlIEdpYW50cyByZWplY3RlZCBpdC4gSW4gQmFzZWJhbGwgQW1lcmljYSBwcmUgc2Vhc29uIHRlYW0gcmFua2luZ3MsIFNhbmNoZXogd2FzIG91ciBOby4gMiBwcm9zcGVjdC4gCklmIGFsbCBlbHNlIGZhaWxzLCB0aGVyZSBhcmUgbmFzdHkgdGFzdGluZyBwcm9kdWN0cyB5b3UgY2FuIGFwcGx5IHRvIHlvdXIgbmFpbHMgdG8gZGlzY291cmFnZSBjaGV3aW5nLiBZb3UgY2FuIHBpY2sgdXAgdGhlc2UgcHJvZHVjdHMgaW4gYW55IGRydWdzdG9yZS4KR29uZSBhcmUgdGhlIGRheXMgb2YgbGVhdmluZyB5b3UncmUgeW91ciBob21lIGFuZCBkcml2aW5nIGRvd24gdG8gcGxheSBjYXNpbm8gZ2FtZXMgLiBJdCBpcyB0aGUgdGltZSB0byBnZXQgcmlkIG9mIGhhc3NsZSBvZiBkcmVzc2luZyB1cCBhbmQgdG8gcGxheSB5b3VyIGZhdm91cml0ZSBjYXNpbm8gZ2FtZXMgZnJvbSB5b3VyIG93biBjb21mb3J0YWJsZSBob3VzZS4gCiJJIHRob3VnaHQgdGhhdCwgcXVpdGUgZnJhbmtseSwgdGhlIE1hcmNlbCB0aGluZyB3YXMganVzdCBwdXJlIGh5cGUuIFdlIG5lZWQgbW9yZSBzdWJzdGFuY2UgaW4gb3VyIGluZHVzdHJ5IHJpZ2h0IG5vdyB0byBiZWF0IG9mZiBhbGwgdGhlIGNvbXBldGl0aXZlIHNldHMgb3V0IHRoZXJlLiBBbmQgcXVpdGUgZnJhbmtseSBJIG5lZWQgUHVibGljaXMgdG8gYmUgaGVhbHRoeSwgV1BQIHRvIGJlIGhlYWx0aHksIGFsbCBteSBzaXN0ZXIgYWdlbmNpZXMgdG8gYmUgaGVhbHRoeSBpbiBvcmRlciB0byBnaXZlIHVzIGEgdmFsaWQgcGxhY2UgaW4gdGhlIGZ1dHVyZS4gCjIuMyBEZSBmeXNpb3RoZXJhcGV1dCBiZXNwcmVla3QgZGUgaW5mb3JtYXRpZSBvdmVyIGRvZWxlbiBlbiBiZWhhbmRlbGluZyBtZXQgY2xpbnQsIHppam4gbmFhc3RlbiBlbi9vZiBhbmRlcmUgYmV0cm9ra2VuZW4uClRoYXQgYSBubyBicmFpbmVyLiAKQnV0IHRoZXkgYXJlIG5vdCBzdWNoIHNpZ25pZmljYW50IGFkdmFuY2VzIGNvbmNlcHR1YWxseS4gVGhlIHJlYWwgYWR2YW5jZXMgYXJlIGluIGNvbXB1dGluZyBhbmQgdGhlIGF2YWlsYWJpbGl0eSBvZiBtYXNzaXZlIGFtb3VudHMgb2YgZGF0YSwgbGlrZSB3aGVuIHlvdSBsb29rIGF0IFlvdVR1YmUgb3IgSW5zdGFncmFtIHRoZXJlIGlzIGEgbWFzc2l2ZSBhbW91bnQgb2YgZGF0YSwgYW5kIHRoZSBjb21wdXRlcnMgYXJlIHJpZGljdWxvdXNseSBtb3JlIHBvd2VyZnVsLi4gClNlaXQgZWluaWdlbiBKYWhyZW4gaXN0IGRlciBzIFNwZWNrZyBkZXIgSGF1cHN0c3RhZHQgenVtIFdlbGxuZXNzIFBhcmFkaWVzIGdld29yZGVuLiBNZWhyIGFscyBlaW4gRHV0emVuZCBnZWhvYmVuZXIgSG90ZWxzIHdpcmJ0IHZvciBhbGxlbSB1bSBNYXNzYWdlIGh1bmdyaWdlciBIYXVwdHN0IHZlcnN0IGFiZXIgYXVjaCB1bSBUb3VyaXN0ZW4gYXVzIGFuZGVyZW4gUmVnaW9uZW4uIApJIGFzc3VtaW5nIHlvdSBoYXZlIGEgbWFzdGVycyBkZWdyZWU/IFRoZXJlIGFyZSBlcXVpdmFsZW5jeSBwcm9ncmFtcyB0aGF0IGFyZSBzaG9ydGVyIHRoYW4gZ2V0dGluZyBhIGZ1bGwgYmxvd24gZGVncmVlIGluIG11c2ljIHRoZXJhcHkgYW5kIEkgdGhpbmsgcGVvcGxlIHdpdGggYmFja2dyb3VuZHMgbGlrZSB5b3VycyBhcmUgaWRlYWwgY2FuZGlkYXRlcy4gCkhlIHN0YXRlZCB0aGF0IHRoZSBwcmVzZW5jZSBvZiBnbHV0ZW4gaW4gdGhlIGRpZXQsIGV2ZW4gd2l0aCBhIGdlbmV0aWMgcHJlZGlzcG9zaXRpb24sIGlzbid0IGVub3VnaCB0byBjYXVzZSB2aWxsb3VzIGF0cm9waHkgKGludGVzdGluYWwgZGFtYWdlKSB1bmxlc3MgdGhlcmUgaXMgYWxyZWFkeSBzb21lIGluZmxhbW1hdGlvbiBwcmVzZW50IGluIHRoZSBpbnRlc3RpbmUuLiAKSGUgbGF0ZXIgc2FpZCBoZSB3YXMgb24gdGhlIGVkZ2Ugb2YgcGFuaWMgd2hlbiBoZSByZWFsaXplZCB0aGF0IGhlIGNvdWxkIHNpbXBseSBjbGltYiBvdXQgb2YgdGhlIGNvY2twaXQuIAoiTWFuaWZlc3QiIGlzIGFsc28gdGhlIGJpZ2dlc3QgZ2FpbmVyIG9uIHRoZSBjaGFydCwgYm9sc3RlcmluZyBpdHMgb3JpZ2luYWwgZGVtbyBkZWxpdmVyaWVzIGJ5IGFuIGFkZGl0aW9uYWwgMSBtaWxsaW9uIHZpZXdlcnMgdXBvbiBjb252ZXJzaW9uIHRvIEM3Li4gClRhc2t3aXphcmQgdQpNb3JlIFVTIEh1bWFuaXRhcmlhbiBBaWQgRm9yIFZlbmV6dWVsYSBBcnJpdmVzIEluIENvbG9tYmlhT24gVGh1cnNkYXksIGEgbmV3IHNoaXBtZW50IG9mIGh1bWFuaXRhcmlhbiBhaWQgZnJvbSBIb21lc3RlYWQsIEZsb3JpZGEgd2FzIGRlbGl2ZXJlZCB0byBDdWN1dGEsIENvbG9tYmlhIG9uIGEgVVMgQWlyIEZvcmNlIEMgMTMwIHBsYW5lLiBEZXBhcnRtZW50IG9mIEFncmljdWx0dXJlIGV4cGVyaW1lbnRzIHRoYXQgY2F1c2UgcGFpbiwgc3RyZXNzLCBhbmQgZGVhdGguCkJvcm4gaW50byB0aGUgY2xvdGhpbmcgYnVzaW5lc3MKSSBmZWx0IGxldCBkb3duLiBUaGVyZSBhcmVuJ3QgZXZlbiBhbnkgZmFtb3VzIHBva2VyIHBsYXllciBjYW1lb3MhIFRoZXJlJ3Mgbm8gUm91bmRlcnMgbW9tZW50IHdoZXJlIE1hdHQgRGFtb24gZmFjZXMgb2ZmIGFnYWluc3QgdHdvIHRpbWUgV29ybGQgQ2hhbXBpb24gSm9obm55IENoYW4uIEV2ZW4gdGhlIHBva2VyIHNjZW5lIGluIFggTWVuIE9yaWdpbnM6IFdvbHZlcmluZSBoYWQgYSBjYW1lbyBmcm9tIERhbmllbCBOZWdyZWFudS4uIApBbiBvdXRkb29yIHBvb2wsIGxvdW5nZSwgaG90IHR1YnMsIGZpcmUgcGl0cyBhbmQgb2JzZXJ2YXRpb24gZGVjay4gClRoZXJlIGFyZSBvYnZpb3VzbHkgcGVvcGxlIGhlcmUgZG93biB2b3RpbmcgdGhlIGhlY2sgb3V0IG9mIHlvdSBiZWNhdXNlIHRoZXkgc2VlIFlPVSBhcyB0aGUgcmVhc29uIGEgYnJlYWsgdXAgbWF5IGhhcHBlbi4gCk5laWdoYm9ycyA0IE5laWdoYm9ycyBMYXVuY2hlcyBPcGVyYXRpb24gRWxmTmVpZ2hib3JzIDQgTmVpZ2hib3JzIGxhdW5jaGVzIE9wZXJhdGlvbiBFbGYsIHBhcnQgb2YgaXRzIEFkb3B0IEEgRmFtaWx5IGZvciB0aGUgaG9saWRheXMgcHJvZ3JhbQpIZSB3YXMgZmluZSBmb3IgdGhhdCBob29rdXAsIGhlIGFic29sdXRlbHkgZGlkbid0IGNhcmUsIGFuZCB3ZSBlbmRlZCB1cCBzZWVpbmcgb25lIGFub3RoZXIgYWdhaW4uIApJZiB5b3UncmUgbm90IHRha2luZyBhbnkgYW50aSBpbmZsYW1tYXRvcnkgZHJ1Z3MgKHdoaWNoIEknZCBiZSBzaG9ja2VkIGlmIHlvdSB3ZXJlbid0KSB5b3UgbmVlZCB0byBzdGFydC4gTWVzc2FnZSBtZSBhbmQgbGV0IG1lIGtub3cgd2hhdCBtZWRzIHRoZXkgaGF2ZSB5b3Ugb24gc28gZmFyLiAKVGhlIHJlYWwgcmVhc29uIHRvIGNoYW5nZSBpcyB0byBleHRlbmQgb3VyIG93biB0aW1lIGFuZCBnaXZlIGZ1dHVyZSBnZW5lcmF0aW9ucyBhIGNoYW5jZSB0byByZWFjaCBhbmQgcG9wdWxhdGUgc3BhY2UuIApJIGRpZG4ndCBhc2sgYWJvdXQgaXQgYXQgdGhlIHRpbWUgYnV0IHRoYXQgd2FzIDEwKyB5ZWFycyBhZ28gYW5kIEkgc3RpbGwgd29uZGVyIHdoYXQgd291bGQgaGF2ZSBoYXBwZW5lZCBpZiBJIHNsaXBwZWQgaW4gYW5kIHVucGx1Z2dlZCBpdC4uIApIYWQgdG8gZ29vZ2xlIGFyb3VuZCBhIGJpdCwgYW5kIGZvdW5kIHNvbWV0aGluZyB0aGF0IEkgbm90IHNlZW4gaW4gRmlubGFuZCwgc3BlY2lmaWNhbGx5IHN0YXRpbmcgdGhhdCBiYXIgY2xvc2VzIGJlZm9yZSB0aGUgbWFpbiBldmVudDogVGhlIEhlbHNpbmtpIENhc2lubyBTcG9ydHMgUHViIHdvdWxkIHNob3cgVUZDIG1hdGNoZXMsIGJ1dCB0aGV5IGFyZSBvcGVuIG9ubHkgdXAgdG8gNCBBTSwgb3BlbiBhZ2FpbiBhdCBub29uLiBGcm9tIHRoZWlyIHNob3cgbWF0Y2hlcyBsaXN0IGl0IGlzIHByZXR0eSBzdXJlIHRoYXQgdGhlIG1haW4gZXZlbnQgKHlvdSBtZW50aW9uZWQpIHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIHdhdGNoIGluIHRoZWlyIHByZW1pc2VzICAgdGhleSBzcGVjaWZpY2FsbHkgc3RhdGUgb24gU2F0dXJkYXkgICBTdW5kYXkgdGhhdCB0aGV5IHdpbGwgY2xvc2UgYXQgNCBBTSAodGhleSBkbyBsaXN0IHRoZSBwcmVmaWdodHMsIGFuZCB3ZWlnaHRpbmcgb24gdGhlIG1hdGNoIGxpc3RzKS4gCkl0IHRvb2sgbWUgYWJvdXQgNSBtaW51dGVzIGFuZCB0d28gdHJhc2ggYmFncywgb25lIGZvciBnYXJiYWdlIG9uZSBmb3IgY2xvdGhlcy4gSXQgZmVsdCBzbyBnb29kIHRvIGJlIGRvbmUgYWZ0ZXJ3YXJkcyBhbmQgdGhyb3cgdGhhdCBzaGl0IGF3YXkuIApDZXMgZGVybmllcnMgam91cnMsIGRldXggZGUgbm9zIHJlcGFzIG0nb250IGZyYXBwZSBwYXIgbGV1ciBjb250cmFzdGUgZGUgcmFsaXNhdGlvbiBldCBkZSBwcnNlbnRhdGlvbi4gClRoZXkgbmVlZCBub3QgZGVwb3NpdCBtb25leSBvbiB0aGVzZSBwYWdlcywgYW5kIHRoZXkgY2FuIHVzZSBhbGwgdGhlIGFkdmFudGFnZXMgb2Ygbm8gZGVwb3NpdCBwb2tlciBib251c2VzLiAKT3ZlcnZpZXcgZm9yIHNoYXdjdWxsZXkKUEdSIHVzZWQgcmVhbCB3b3JsZCBsb2NhdGlvbnMgKGxpa2UgRWRpbmJ1cmdoIGZvciBleGFtcGxlKSBhbmQgeW91IHJhY2VkIG9uIGNsb3NlZCBvZmYgc3RyZWV0IHRyYWNrcywgdG8gdGhpcyBkYXkgbm8gb3RoZXIgcmFjaW5nIGdhbWUgaGFzIGhhZCBzdHJlZXQgdHJhY2tzIGFzIGdvb2QgYXMgdGhleSB3ZXJlLiBORlMgaXMgYmFzaWNhbGx5IGRlYWQgYW5kIEdUIFNwb3J0IGlzIG5vdCBvbiBYYm94LCB0aGVyZSBpcyBubyBjcm9zcyBvdmVyIGJldHdlZW4gSG9yaXpvbiBhbmQgUEdSLCB0b3RhbGx5IGRpZmZlcmVudCBnYW1lcyBpbiBib3RoIGZlZWwgKFBHUiBpcy93YXMgd2F5IG1vcmUgYXJjYWRlIHRoYW4gSG9yaXpvbikgYW5kIHNldHRpbmcsIDEwMCUgdGFybWFjIHdpdGggc3RvY2sgY2FycyBvbmx5LCBwbHVzIHRoZSBQdlAgd2FzIGFjdHVhbCBjb21wZXRpdGl2ZSBtdWx0aXBsYXllciBub3QgdGhpcyB0ZWFtIGJhc2VkIGpva2UuIFRoZXJlIG5vIHJlYXNvbiBNaWNyb3NvZnQgY291bGRuIGJyaW5nIGl0IGJhY2sgaWYgdGhleSB3YW50ZWQgdG8sIFBHUjIgd2FzIGluIHRoZSB0b3AgNSBiaWdnZXN0IHNlbGxpbmcgZ2FtZXMgb2YgYWxsIHRpbWUgb24gdGhlIE9HIFhib3ggdG9vLi4gClNoYXJlaG9sZGVycyBvbiBUaHVyc2RheSBhcHByb3ZlZCBhIHRocmVlIGZvciBvbmUgc3RvY2sgc3BsaXQgZWZmZWN0aXZlIEp1bmUgMTksIGRlc2lnbmVkIHRvIG1ha2UgdGhlIGNvbXBhbnkncyBzaGFyZXMgbW9yZSBhY2Nlc3NpYmxlIHRvIHJldGFpbCBpbnZlc3RvcnMuCk5vdCB0byBkZWZlbmQgUFJDLCBidXQgdGhleSBkaWQgc3VlIGFuZCB3aW4gaW4gSG9uZyBLb25nIHRvby4gVGhhdCBzYWlkLCBpdCBpcyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgdGhhdCBkZXNwaXRlIGNvbnN0YW50IGFjY3VzYXRpb24gb2YgUFJDIGludGVyZmVyZW5jZSBvZiBIb25nIEtvbmcgZG9tZXN0aWMgYWZmYWlycywgSG9uZyBLb25nIGp1ZGljaWFsIGFuZCBsYXcgZW5mb3JjZW1lbnQgc3lzdGVtIHJlbWFpbnMgbW9yZSBvciBsZXNzIGF1dG9ub21vdXMsIGFuZCBjYW4gb2Z0ZW4gcGFzcyBkb3duIGp1ZGdlbWVudCB0aGF0IHRoZSBjZW50cmFsIGdvdmVybm1lbnQgd291bGQgbm90IGFwcHJvdmUuIEhhZCBPY2N1cHkgQ2VudHJhbCAoYW5kIE1vbmcgS29rLCB0aGUgbGVzcyB3ZWxsIGtub3duIGJ1dCBjb25jdXJyZW50IG9uZSkgYmVlbiBoYXBwZW5pbmcgaW4gbWFpbmxhbmQgQ2hpbmEsIGl0IHdvdWxkIGxpa2VseSBiZSBzaHV0IGRvd24gbXVjaCBmYXN0ZXIsIGFuZCB3ZSB3b24gYmUgaGVhcmluZyB0aGUgcHJvdGVzdGVycyBjb3VudGVyIHN1aW5nIHRoZSBwb2xpY2UgZm9yIGJydXRhbGl0eS4gCklmIGl0IGhlbHBzIGFueSwgcGxlbnR5IG9mIHBlb3BsZSBnbyB0aHJvdWdoIHRoZSBzYW1lIHRoaW5nLiBJIHdlbnQgdGhyb3VnaCB0aGlzIHdoZW4gYSBiZiBmcm9tIG15IHBhc3QgY2hlYXRlZCBvbiBtZS5IZSBkaWRuIHNlZW0gdG8gYmUgYWZmZWN0ZWQgd2hlbiB3ZSBicm9rZSB1cC4gSSBndWVzcyBmb3IgaGltIGhlIGdvdCB0byBqdXN0IGNvbnRpbnVlIG9uIGhvdyBoZSBoYWQgYWx3YXlzIHRocm91Z2ggb3VyIHJlbGF0aW9uc2hpcCAoaGUgd2FzIGxpdmluZyBhIGRvdWJsZSBsaWZlLCBJIGNvbnZpbmNlZCBoZSB3YXMgY2hlYXRpbmcgdGhlIHdob2xlIHRpbWUgd2Ugd2VyZSB0b2dldGhlcikuVGhlIGJlc3QgdGhpbmcgSSBjb3VsZCBkbyBmb3IgbXlzZWxmIHdhcyB0byBqdXN0IGNhbmNlbCBoaW0gb3V0IG9mIG15IGxpZmUuIApIb3cgd291bGQgdGhpcyBiZSBhIDIgZm9yIDE/IFByZXN1bWFibHkgeW91IHRyYWRlZCB0aGF0IGRlYXRodG91Y2hlciBmb3Igc29tZXRoaW5nIGVhcmxpZXIuIFJldml2YWwgaXMgYSBkZWNlbnQgY2FyZCBieSBpdHNlbGYsIGFuZCB0aGUgb25seSByZWFzb24gdGhhdCB0aGUgY2FyZCBpcyBwbGF5YWJsZSBpbiB0aGUgZmlyc3QgcGxhY2UuIEJ1dCBpdCBzdGlsbCBub3QgZXZlbiB0aGF0IGdvb2QsIHNpbmNlIHlvdSBoYXZlIHRvIHBheSBzb21lIHNlcmlvdXMgc2V0dXAgY29zdHMgdG8gbWFrZSBpdCBkbyBhbnl0aGluZy4uIApKdXN0IGJlY2F1c2UgYSBmYW4gaXMgcXVpZXQgaW4gYSBnaWFudCBib3ggd2l0aCAzMCBoaWdoIGNlaWxpbmdzIGRvZXMgbm90IG5lY2Vzc2FyaWx5IG1lYW4gaXQgd2lsbCBiZSBxdWlldCBpbiB5b3VyIHRpbnkgYmF0aHJvb20uIApCdXQgaXQgaGFzIGxlZnQgbWUgZmVlbGluZyBhIGxpdHRsZSBzb3VyZWQuIApCZW5lYXRoIGVhY2ggbGFiZWxlZCB0YXJnZXRzIHRoYXQgd291bGQgYmUgaWduaXRlZCBieSB0aGUgMTAgcG91bmRlciBhbmQgdGh1cyBtYWtlIHRoYXQgc2hlbGwgbG9vayBsaWtlIGEgbG90IG1vcmUgdGhhbiB3aGF0IGl0IHdhcy4gClRoZXJlIHdhcyBhbiBPVDcgZHJlYW0gbGlrZSB0aGlzIHRvby4gSSByZW1lbWJlciBiZWluZyBhdCB0aGUgYmFuayBvZiBhIGxha2Ugd2l0aCB0aGVtLiBJIHdhcyBhIHNvbGRpZXIsIGFib3V0IHRvIGdvIHRvIHRoaXMgd2FyIHRoYXQgd2FzIGZvciBzdXJlIGdvaW5nIHRvIGJyaW5nIGZvcnRoIGFic29sdXRlIGRlc3RydWN0aW9uLiBJIHNwZW50IHRoZSBsYXN0IGRheSB3aXRoIHRoZW0gYXQgdGhpcyBsYWtlLCBhbmQgaXQgd2FzIHF1aWV0IGFuZCB3YXJtIGFuZCBuaWNlLiBTb21lb25lIHdhcyBodW1taW5nLCBzb21lb25lIHdhcyBuYXBwaW5nIGFnYWluc3QgYSB0cmVlLCBzb21lb25lIHdhcyB0ZWxsaW5nIHNvbWUgZnVubnkgc3RvcnkuIE5vdGhpbmcgaW4gcGFydGljdWxhciBoYXBwZW5lZCBiZXNpZGVzIHRoYXQsIGJ1dCBpdCBoYXMgYmVlbiBvdmVyIGEgeWVhciBhbmQgSSBzdGlsbCByZW1lbWJlciB0aGUgc2Vuc2Ugb2YgY29tZm9ydCB2aXZpZGx5LgpCdXQgdGhlIG1hdGVyaWFsIG5ldmVyIHN1cmZhY2VkIGFuZCBjcml0aWNzIGRpc21pc3NlZCB0aGUgY2xhaW1zIGFzIGEgcHVibGljaXR5IHN0dW50LgpUaGUgc3VuIHdhcyBzZXR0aW5nIGJlaGluZCBhIHRoaWNrIGZvcmVzdCwgYW5kIGluIHRoZSBnbG93IG9mIHN1bnNldCB0aGUgYmlyY2ggdHJlZXMsIGRvdHRlZCBhYm91dCBpbiB0aGUgYXNwZW4gY29wc2UsIHN0b29kIG91dCBjbGVhcmx5IHdpdGggdGhlaXIgaGFuZ2luZyB0d2lncywgYW5kIHRoZWlyIGJ1ZHMgc3dvbGxlbiBhbG1vc3QgdG8gYnVyc3RpbmcuLiAKVGhpcyBzdGFmZiBjYW4gYmUgd2llbGRlZCBhcyBhIG1hZ2ljIHF1YXJ0ZXJzdGFmZiB0aGF0IGdyYW50cyBhICsyIGJvbnVzIHRvIGF0dGFjayBhbmQgZGFtYWdlIHJvbGxzIG1hZGUgd2l0aCBpdC4gV2hpbGUgeW91IGhvbGQgaXQsIHlvdSBnYWluIGEgKzIgYm9udXMgdG8gc3BlbGwgYXR0YWNrIHJvbGxzLgpOb3BlLiAKKEkgdXNlZCB0byB3b3JrIGluIGNhc2lubyBzZWN1cml0eSBhbmQgYmVsaWV2ZSBtZSB3aGVuIEkgc2F5IGl0IGhhcHBlbnMsIGRpZCB5b3Uga25vdyB3b21lbiBhcmUgNTQlIG1vcmUgbGlrZWx5IHRvIGJlIGdhbWJsaW5nIGFkZGljdHMgdGhlbiBtZW4/KSBPciBzb21lb25lIHdobyBkcmlua3MgNSBiZWVycyBhIG1vbnRoIGlzIGEgZHJ1bmsgY29tcGFyZWQgdG8gc29tZW9uZSB3aG8gZHJpbmtzIGEgZ2FsbG9uIG9mIHZvZGthIGEgZGF5IGFuZCBiZWF0IGhpcyB3aWZlLiAKU2VtZXN0ZXIgSSBnZXQgMzAgY3JlZGl0IHBvaW50LiAxIGNwID0gMzAgSG91cnMuIDMwIGNwID0gOTAwIEhvdXJzLiBJZiBJIHRha2Ugb25lIGRheSBmcmVlIGluIHRoZSB3ZWVrLCBJIGhhdmUgdG8gaW52ZXN0IDggSG91cnMvZGF5IHRvIHJlYWNoIDkwMCBIb3VycyBpbiAxIFNlbWVzdGVyLiBJIGFtIHN0dWR5aW5nIENvbXB1dGVyIHNjaWVuY2UgYXQgYSB0b3AgVGllciB1bmkgbm90IHNvY2lhbCBTY2llbmNlcyBhdCBhIHRoaXJkIFRpZXIgdW5pIGNvbWUgb25lCldlIGdhdmUgdGhlbSBvYmFtYSB3aG8gLiBvayBoZSBvbmNlIGFjdHVhbGx5IHdvcmUgYSB0YW4gc3VpdC4gaSBrbm93IGJ1dCBiZXNpZGVzIHRoZSB0YW4gc3VpdCBhbmQgbGV0dHVjZSBnYXRlLiBhbmQgbXVzdGFyZCBnYXRlLiBoZSB3YXNudCB0b29vIGJhZC4KQXQgMDozNyB5b3UgY2FuIHNlZSB0aGUgZHJ1aWQgY2FzdGluZyBjeWNsb25lIGF0IHlvdXIgZHJ1aWQsIGFuZCBmb3Igc29tZSByZWFzb24geW91IHVzZSBwYWluIHN1cHByZXNzaW9uIHJpZ2h0IGludG8gdGhlIGNsb25lLiBUaGVuIGJlY2F1c2UgeW91IHdhc3RlZCB5b3VyIGZlYXIganVzdCBzZWNvbmRzIGVhcmxpZXIgdGhlIGRydWlkIGlzIGFibGUgdG8gcHVzaCBpbiBvbiB5b3UgYW5kIHNldCB1cCBhIENDIHJvdGF0aW9uLCB0aGlzIGVuZHMgdXAgY29zdGluZyBhIG1ham9yIGRlZmVuc2l2ZSBmcm9tIHlvdXIgZmVyYWwuIEF0IDE6MTQgeW91IHRoZW4gcmVwZWF0IHlvdXIgcGFzdCBtaXN0YWtlIGFuZCBmZWFyIHRoZSBodW50ZXIgYWdhaW4sIGFuZCB0aGUgZHJ1aWQgcmVwZWF0cyB0aGUgZXhhY3Qgc2FtZSB0aGluZyBoZSBkaWQgYmVmb3JlLiAKWW91IGFyZSBub3QgInRvbyBtdWNoIiwgdGhlIHJpZ2h0IHBlb3BsZSB3aWxsIGJlIGF0dHJhY3RlZCB0byB0aGlzIGNhcHRpdmF0aW5nIGVuZXJneSBub3Qgc2NhcmVkIGF3YXkgYnkgaXQuIApJIHN1c3BlY3Qgc29tZSBvZiB0aGUgdGhpbmdzIHlvdSBoYXZlIGJlZW4gZG9pbmcgdG8gZGVhbCB3aXRoIHRoZSBpc3N1ZSBtYXkgaGF2ZSBiZWVuIG1ha2luZyBpdCB3b3JzZS4gCkZvciBleGFtcGxlLCBhIEJyaXRpc2ggTWVkaWNhbCBKb3VybmFsIHN0dWR5IGluIDE5ODEgZm91bmQgdGhhdCBlbGl0ZSBzd2ltbWVycyBkaXNwbGF5ZWQgaW5jcmVhc2luZyB0b2xlcmFuY2UgdG8gcGFpbiBpbmZsaWN0ZWQgYnkgY3V0dGluZyBvZmYgY2lyY3VsYXRpb24gdG8gdGhlaXIgZm9yZWFybXMgYXMgdGhlaXIgdHJhaW5pbmcgcHJvZ3Jlc3NlZCB0b3dhcmQgYSBjb21wZXRpdGl2ZSBwZWFrLiBUaGVpciB0b2xlcmFuY2UgdGhlbiBkZWNsaW5lZCBhZ2FpbiB3aGVuIHRoZXkgdG9vayBhIGJyZWFrIGZyb20gdHJhaW5pbmcuVG8gRHIuIEFsZXhpcyBNYXVnZXIsIGEgcmVzZWFyY2hlciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBLZW50IGluIEJyaXRhaW4gd2hvIGlzIHN0dWR5aW5nIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBwYWluIGFuZCB0aGUgbGltaXRzIG9mIGF0aGxldGljIHBlcmZvcm1hbmNlLCB0aGlzIHN1Z2dlc3RzIHBhaW4gdG9sZXJhbmNlIGNhbiBpbmRlZWQgYmUgdHJhaW5lZC4gClRoZWlyIGludGVudGlvbnMgY291bGQgYmUgc2VlbiBmcm9tIHRoZWlyIGFybSBtb3ZlbWVudHMgd2hlbiBwbGFjaW5nIGJldHMsIHRoZSB0ZWFtIGZyb20gVHVmdHMgVW5pdmVyc2l0eSBpbiB0aGUgVVMsIGZvdW5kIGR1cmluZyB0aHJlZSBzZXBhcmF0ZSBzdHVkaWVzLgo3NjYwIDc2NzMuLiAKV2lsbCBwb2tlciB3aXRoIGZyaWVuZHMgYmUgYSB0aGluZyBmb3IgT25saW5lCkluIHJlcXVlc3RpbmcgSGFycnkgQnVya2hhcnQgYmUgaGVsZCBvbiBubyBiYWlsLCBpbnZlc3RpZ2F0b3JzIHNhaWQgaW4gY291cnQgZG9jdW1lbnRzIHRoYXQgYSBzZWFyY2ggb2YgQnVya2hhcnQgSG9sbHl3b29kIGFwYXJ0bWVudCB0dXJuZWQgdXAgbmV3cyBhcnRpY2xlcyBhYm91dCB0aGUgTG9zIEFuZ2VsZXMgZmlyZXMgYXMgd2VsbCBhcyBhIHNlcmllcyBvZiBjYXIgZmlyZXMgaW4gRnJhbmtmdXJ0IGxhc3QgU2VwdGVtYmVyLiBIaXMgYmFpbCB3YXMgc2V0IGF0ICQyLjg1IG1pbGxpb24uCkNvdXJ0IGRvY3VtZW50cyBzYWlkIHRoZSBtdW0gYXJyaXZlZCBob21lIGZyb20gdGhlIFN0ZWVsZXJzIENsdWIgYXQgNy4zMCBvbiBGcmlkYXkgbmlnaHQgYW5kIGltbWVkaWF0ZWx5IGNhbGxlZCBjbHViIG1hbmFnZW1lbnQgY2xhaW1pbmcgaGVyIG1vbmV5IGhhZCBiZWVuIHN0b2xlbiBmcm9tIHRoZSBwb2tlciBtYWNoaW5lIGFyZWEgYW5kIHNoZSBuZWVkZWQgaXQgYmFjay4gVGhlIGRhdWdodGVyLCB3aG8gb3ZlcmhlYXJkIHRoZSBjb252ZXJzYXRpb24sIGJlY2FtZSB1cHNldCwgbGF0ZXIgdGVsbGluZyBwb2xpY2UgdGhlICQ1MDAgY2FzaCBoYWQgYmVlbiBhIHByZXNlbnQgZnJvbSBoZXIgZ3JhbmRmYXRoZXIgdG8gaGVscCBwYXkgZm9yIHNjaG9vbCB1bmlmb3Jtcy4gCkhlIGhhZCBhIHNjYXIgb24gaGlzIGxlZnQgdGVtcGxlIGFuZCB1cHBlciBsaXAsIGFuZCBhYm92ZSBoaXMgd3Jpc3Qgb24gb25lIGFybSwgYSB0YXR0b286IFBpbnRvIDE5NDkuLiAKWW91IGNhbiB0ZWxsIHdoZW4gYW4gYWxpZW4gaXMgc3VwcHJlc3NlZCBiZWNhdXNlIGEgYmlnIGJsdWUgYXJyb3cgd2lsbCBhcHBlYXIgYWJvdmUgdGhlbSB3aXRoIHRoZSB3b3JkcyBhYm92ZSBpdCwgYW5kIHRoZXkgd2lsbCBnbyB0byBncm91bmQuIFdoZW4gdGhpcyBoYXBwZW5zIHRoZSBhbGllbiB3aWxsIGhhdmUgbm8gVFUgZm9yIHRoYXQgWGVub25hdXQgdHVybiAobWVhbmluZyB0aGV5IGNhbiBmaXJlIHJlYWN0aW9uIHNob3RzKSwgYW5kIHRoZXkgd2lsbCBvbmx5IGhhdmUgaGFsZiBUVXMgbmV4dCBhbGllbiB0dXJuLiBUaGUgc2FtZSBhcHBsaWVzIGZvciBYZW5vbmF1dHMgICB0aGV5IHdpbGwgaGF2ZSBubyBUVXMgb24gdGhlIHR1cm4gdGhleSBoYXZlIHRoZSBhcnJvdyBhYm92ZSB0aGVtLCBhbmQgaGFsZiBvbiB0aGUgbmV4dCBYZW5vbmF1dCB0dXJuLi4gClNvIHRoYXQgd2hlcmUgaXQgYmVnYW4uIi4gClNvbWUgaXNzdWVycyB3aWxsIGxldCB5b3Ugc2V0IHVwIGF1dG9tYXRpYyBwYXltZW50cyBmcm9tIHlvdXIgY2hlY2tpbmcgYWNjb3VudCwgc28geW91IHdvbid0IGZvcmdldCB0byBtYWtlIHRob3NlIHBheW1lbnRzLi4gClN0b3AgYnkgdG9kYXkgdG8gcGxheSBjYXNpbm8gYW5kIG9ubGluZSBnYW1ibGluZyBnYW1lcyByaWdodCBub3cuLiAKR2lmdHMgdG8gdGhlIGZvdW5kYXRpb24sIGxpc3RlZCBpbiBJUlMgUHVibGljYXRpb24gNzgsIEN1bXVsYXRpdmUgTGlzdCBvZiBPcmdhbml6YXRpb25zIGFuZCBkZXNjcmliZWQgaW4gQ29kZSAxMChjKSgzKSBvZiB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBDb2RlLCBhcmUgdGF4IGRlZHVjdGlibGUgYXMgcGVybWl0dGVkIGJ5IGxhdy4gCkJhY2sgd2hlbiBJIHVzZWQgdG8gaW5zdGFsbCBjYWJsZSBJbnRlcm5ldCwgSSB3ZW50IHRvIGEgbG90IG9mIGhvbWVzIHRoYXQgaGFkIHBldHMuIEkgbWFkZSBhIHNvcnQgb2YgZ2FtZSBvdXQgb2Ygc2VlaW5nIGhvdyBmYXN0IEkgY291bGQgY2hhcm0gdW5mYW1pbGlhciBhbmltYWxzIHRvIHdoZXJlIHRoZXkgdHJlYXQgbWUgbGlrZSBmYW1pbHkgb3IgYmV0dGVyLiBJIHN0YXJ0IHJpZ2h0IGF0IHRoZSBncmVldGluZywgdGhlIGN1c3RvbWVyIG9wZW5zIHRoZSBkb29yLCBJIHN0YXJ0IHRvIGludHJvZHVjZSBteXNlbGYgdGhlbiBub3RpY2UgdGhlIHBldCBkb3duIGF0IHRoZWlyIGZlZXQgYW5kIGltbWVkaWF0ZWx5IGtuZWVsIGFuZCBicmVhayBvZmYgbXkgZ3JlZXRpbmcgdG8gZGlyZWN0IGl0IGF0IHRoZSBwZXQgaW5zdGVhZC4gTGlrZSwgIkhpLCBJIGZlYW50dXJpIGZyb20gRnVjayBZb3UgQ2FibGUsIEkgaGVyZSB0byAga25lZWxzIGRvd24gd2VsbCBoZWxsb29vIHRoZXJlIHlvdSEiIExldCB0aGVtIGdldCBteSBzY2VudCwgZ2l2ZSBzb21lIHNjcml0Y2hlcywgd2UgYmVzdCBmcmllbmRzIG5vdywgb3duZXJzIG5vdGUgdW51c3VhbCBsYWNrIG9mIGJhcmtpbmcgYW5kIGZ1c3NpbmcuIEkgY2FuIGNvdW50IG9uIG9uZSBoYW5kIHRoZSBhbmltYWxzIGl0IGZhaWxlZCB3aXRoLgpUaGV5IGluY2x1ZGUgYWNjb3VudGFudHMsIGFyY2hpdGVjdHMsIG1hc3NhZ2UgdGhlcmFwaXN0cyBhbmQgYSBob3N0IG9mIG90aGVyIHNlcnZpY2UgcHJvdmlkZXJzLiBUaGV5IGFyZSBwZW9wbGUgd2hvIGhhdmUgaW52ZXN0ZWQgdGhlaXIgbGl2ZXMgaW50byBtYWtpbmcgb3VyIGRvd250b3duIG9uZSBvZiB0aGUgbW9zdCB2aWJyYW50IGFuZCBzdWNjZXNzZnVsIGluIHRoZSBuYXRpb24uV2hlbiBhc2tlZCBpZiB0aGV5IHN1cHBvcnQgYmFsbG90IG1lYXN1cmUgMzAwIHdoaWNoIHdvdWxkIGdpdmUgNjArIG5laWdoYm9yaG9vZHMgaW4gQm91bGRlciB0aGUgcmlnaHQgdG8gaG9sZCBzcGVjaWFsIGVsZWN0aW9ucyBhbmQgdmV0byBsYW5kIHVzZSBjaGFuZ2VzIGFwcHJvdmVkIGJ5IGNpdHkgY291bmNpbCwgdGhleSBvdmVyd2hlbG1pbmdseSBzYWlkICJOby4iIFNpeHR5IG9uZSBwZXJjZW50IG9wcG9zZSB0aGUgbWVhc3VyZTsgMjAgcGVyY2VudCBhcmUgaW4gZmF2b3IuIApBbmQgdCB3YXMgQ0xPU0VEISBXZSB3ZW50IHRvIHRoZSBCbHVlIE1vc3F1ZS4gSXQsIHRvbywgd2FzIENMT1NFRCEgRHVlIHRvIHRoZSBob2xkYXlzIGFsbCB0aGUgaG91cnMgYW5kIG9wZW5uZyBhbmQgY2xvc25nIHRtZXMgd2VyZSBkZmZlcmVudC4gU28gd2Ugb3B0ZWQgdG8gdGFrZSB0aGUgdHJhbSB0byBFbW5vbnUgYW5kIHRha2UgYSBib2F0IGFjcm9zcyB0aGUgQm9zcGhvcnVzIHRvIFVza3VkYXIsIG9uIHRoZSBBc2FuIHNkZSBvZiBJc3RhbmJ1bC4gClllcywgVEVSRiwgaG9tb3Bob2JpYywgYW5kIHRyYW5zcGhvYmljIGFyZSBzaGFtaW5nLiBCZWNhdXNlIGl0IGJhZCB0byBiZSBob21vcGhvYmljLCB0cmFuc3Bob2JpYywgb3IgYSB0ZXJmLiBEdWguIApJbnN0ZWFkIG9mIG1lZXRpbmcgYXQgdGhlIHByb3NlY3V0b3IncyBNaWFtaSBoZWFkcXVhcnRlcnMsIHRoZSB0d28gbWVuICAgYm90aCB3aXRoIHByb2Zlc3Npb25hbCByb290cyBpbiB0aGUgcHJlc3RpZ2lvdXMgV2FzaGluZ3RvbiBsYXcgZmlybSBvZiBLaXJrbGFuZCBFbGxpcyAgIGNvbnZlbmVkIGF0IHRoZSBNYXJyaW90dCBpbiBXZXN0IFBhbG0gQmVhY2gsIGFib3V0IDcwIG1pbGVzIGF3YXkuIFNwZWNpYWwgZW52b3kgdG8gTm9ydGggS29yZWEgYW5kIGNvcnBvcmF0ZSBsYXd5ZXIsIHRoZSBtZWV0aW5nIHdhcyBjcml0aWNhbC4uIApZb3UncmUgdHJ1bHkgaWdub3JhbnQgaWYgeW91IHJlYWxseSBiZWxpZXZlIHRoYXQgYWxsIG9mIEdvb2R3aWxscyBjbG90aGVzIGdldHMgYm91Z2h0IGJ5IHBlb3BsZSBzdHJ1Z2dsaW5nIHRvIGdldCBieS4gWW91IGtub3cgd2hlcmUgdGhlcmUgZXhjZXNzIGNsb3RoZXMgZ2V0IGR1bXBlZD8gSGFpdGkuIEl0IGdldHMgZHVtcGVkIGluIEhhaXRpLCBhcyB3YXN0ZSEgQmVjYXVzZSB0aGVyZSdzIG5vIHdoZXJlIHRvIGRpc3Bvc2Ugb2YgdGhlIGV4Y2VzcyBoZXJlLiBIYXZlIHlvdSBldmVyIHNlZW4gYSBuYWtlZCBwZXJzb24gcnVubmluZyBhcm91bmQgdGhlIHN0cmVldHMgb2YgYW1lcmljYSBiZWNhdXNlIHRoZXkgaGFkIG5vIGNsb3RoZXMgdG8gd2VhciBiZWNhdXNlIGl0IGFsbCBnb3QgYm91Z2h0IHVwIGJ5IHBlb3BsZSByZXNlbGxpbmc/IE5vLCB0aGF0J3Mgd2hhdCBJIHRob3VnaHQuCkkgc3RpbGwgbWF5IG5vdCBiZSBhIGxvdCBvZiBwZW9wbGUncyBpZGVhIG9mIGEgZ29vZCwgdHJ1c3R3b3J0aHkgYmV0IGZvciB0aGUgZnV0dXJlLiBBbmQgSSAxMDAlIGVhcm5lZCB0aGF0LiAKSSB1bmRlcnN0YW5kIHdoYXQgeW91IGFyZSB0cnlpbmcgdG8gc2F5IGhvd2V2ZXIsIGhhZCBzaGUgbm90IGRpdnVsZ2VkIGhlciBOYXRpdmUgQW1lcmljYW4gaGVyaXRhZ2UsIGV2ZXJ5b25lIHdvdWxkIGhhdmUgdGhvdWdodCBzaGUgd2FzIHdoaXRlLiBUaGF0IGlzIHdoYXQgd2hpdGUgcGFzc2luZyBtZWFucy4gClRoZXJlIG5vIGdvb2QgZnJvbSBzZXJmcyB0aGV5IGNhbiBwYXkgdGF4ZXMgYW5kIGJ1eSBnb29kcywgYmFuIHRoZW0gYXMgZmFzdCBhcyB5b3UgY2FuLgpUYXAgdGhlIE9OL09GRiB0b2dnbGUgdG8gdGhlIHJpZ2h0IG9mIEJhZGdlIEFwcCBJY29uIHVudGlsIE9OIGFwcGVhcnMgaWYgeW91IHdhbnQgdG8gZGlzcGxheSBhIGJhZGdlIGRpc3BsYXlpbmcgdGhlIG51bWJlciBvZiB1bnJlYWQgdGV4dCBtZXNzYWdlcy4gCkkgaGF2ZSBhIGJhY2hlbG9yIGFuZCBkbyBwbGFuIG9uIGdvaW5nIHRvIGxhdyBzY2hvb2wuIEdvaW5nIDEwMGsgaW4gZGVidCB0byBnbyB0byBsYXcgc2Nob29sIHdvdWxkIGJlIGEgYmFkIG1vdmUgcmlnaHQgbm93LiAKMSBwb2ludCAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkkgd2FzIGVudGhyYWxsZWQgYnkgRmVybmllLCBieSB0aGUgZ3JhbmQgbW91bnRhaW5zLCBwaW5lIHRyZWVzIGFuZCB5ZWxsb3cgZmllbGRzIG9mIGRhbmRlbGlvbnMgc2ltaWxhciB0byB0aGUgZ29sZGVuIGZsb3dlcnMgYmFjayBob21lLiAKSGUgb25jZSBleHBsYWluZWQgdG8gbWUgd2h5IGJ1c2VzIGFyZSBhbHdheXMgbGF0ZSwgYnV0IHRoZW4gdGhleSBhbHNvIHJhbmRvbWx5IHN0YXkgYXQgb25lIHN0b3AgZm9yIGxpa2UgMTUgbWludXRlcy4gCiJJJ2QgZmlnaHQgaXQgaWYgSSBoYWQgdG8gdGFrZSBpdCBhZ2FpbiwiIERhbmllbCBzYWlkLCBhY2NvcmRpbmcgdG8gYSB0cmFuc2NyaXB0IG9mIGhpcyBjb3VydCB0ZXN0aW1vbnkuICJJJ2QgcHVuY2ggdGhlbSBhbmQgSSdkIGtpY2sgdGhlbS4iCkhtbW0gZG9lcyBzaGUgaGF2ZSBhbG9uZSBwbGF5PyBNYXliZSBhIHNwZWNpYWwgdG95L3RveXMgYWN0aXZpdHkgc2hlIGxpa2VzIHNoZSBnZXRzIHRvIGRvIG9ubHkgZHVyaW5nIGFsb25lIHBsYXkuIElzIHRoZXJlIHNvbWV0aGluZyBzaGUgbG92ZXMgYnV0IGRvZXNuJ3QgZ2V0IHRvIGRvIG9mdGVuPyBQYWludGluZywgZHJ1bW1pbmcsIGRyZXNzIHVwLCBzdHVmZmVkIGFuaW1hbHM/IEkgdGhpbmsgdHYgd291bGQgYmUgdGhlIG9ubHkgZXhjZXB0aW9uIGJlY2F1c2UgaXQgbWltaWNzIHBlb3BsZSwgaXQgeW91IGNvdWxkIGRvIHRoaXMgYXQgZmlyc3QgaWYgc2hlIGRvZXNuJ3QgcmVzcG9uZCB3ZWxsIHRvIGFueSBzcGVjaWFsIHRveXMuLiAKKEZ1bGwgQW5zd2VyKS4gCllvdSBjYW4gcmVhbGx5IHNlZSB0aGUgZGlmZmVyZW5jZSB3aGVuIHlvdSB3YXRjaCBhIGJhYnkgYm9vbWVyIG1ha2UgZGVjaXNpb25zIHZzIGEgeW91bmdlciBwZXJzb24uIApBZ2FpbiBJIG5vdCBzYXlpbmcgYW55IHBhcnRpY3VsYXIgb3JnYW5pemF0aW9uIElTIHRob3NlIHRoaW5ncyBidXQgV0hPIGdldHMgdG9wIGRldGVybWluZSB0aGF0LCBpZiB5b3UgbGV0IGl0IGJlIHRoZSBwcmVzaWRlbnQgdGhlIG5leHQgbGliZXJhbCBwcmVzaWRlbnQgaXMgZGVmaW5pdGVseSBnb25uYSBmdWNrIGV2ZXJ5IHNjaG9vbCB5b3UgbGlrZSB0byBkZWF0aCB3aXRoIHRoZXNlIHJlcXVpcmVtZW50cy4uIApBdCBhIG1lZXRpbmcgaW4gQXJnZW50aW5hIGxhc3QgbW9udGgsIFVTIFByZXNpZGVudCBEb25hbGQgVHJ1bXAgYW5kIGhpcyBDaGluZXNlIGNvdW50ZXJwYXJ0IFhpIEppbnBpbmcgYWdyZWVkIHRvIGJ1cnkgdGhlIGhhdGNoZXQgcHJvdmlzaW9uYWxseSAgIHdpdGggVHJ1bXAgZGVsYXlpbmcgYSBzaGFycCBpbmNyZWFzZSBvbiBVUyBkdXRpZXMgZm9yICQyMDAgYmlsbGlvbiBpbiBDaGluZXNlIGdvb2RzIHVudGlsIE1hcmNoIDEuCk5ldmVydGhlbGVzcywgdGhlIEV1cm9wZWFuIHBvd2VycywgcHJpbmNpcGFsbHkgU3BhaW4gYW5kIEZyYW5jZSwgYWxsIGJ1dCBlbnN1cmVkIHRoYXQgdGhleSB3b3VsZCBzZWUgbm8gb3RoZXIgY2hvaWNlIGJ1dCB0byByb290IGZvciBBbWVyaWNhbiBzdWNjZXNzLCBhbmQgZm9sbG93aW5nIHRoYXQsIHRoZSByZXN1bXB0aW9uIG9mIEFtZXJpY2FuIHByb3RlY3Rpb24uIApUaGUgcHJvYmxlbSBpcyB0aGF0IG9uY2Ugd2Uga25vdyBpdCBkb2VzbiB3b3JrLCBhIGxvdCBvZiBwZW9wbGUgbGlrZSB0byBkb3VibGUgZG93biBvbiBzdHVwaWQgYW5kIHNheSB5b3UgZGlkbiB0cnkgaXQgcmlnaHQsIG9yIGF0IHRoZSByaWdodCB0aW1lLCBvciB5b3UgaGF2ZSB0byBkbyBzb21ldGhpbmcgZWxzZSBmaXJzdCwgZXRjLiBTYWRseSwgdGhlIHdvcmxkIGlzIGJpZyB3aXRoIGEgbG90IG9mIGNvbXBsaWNhdGVkIHByb2JsZW1zLiAKWmllbCBkZXIgU2Fua3Rpb25lbiBpc3QgZXMgLCBkaWUgVmVyc29yZ3VuZ3NsYWdlIHNvIHdlaXQgenUgdmVyc2NocmZlbiwgYmlzIGRpZSBCZXZsa2VydW5nIHNpY2ggZ2VnZW4gZGllIFJlZ2llcnVuZyBlcmhlYnQgdW5kIHNpZSBhdXMgZGVtIEFtdCBmZWd0LiBVbmQgZGllIGltIEFQIEFydGlrZWwgYmVzY2hyaWViZW5lbiBGbGxlIHplaWdlbiBkZXV0bGljaCBhdWYsIGRhc3MgZGllIFNhbmt0aW9uZW4gICBhdWNoIHdlbm4gZWluaWdlIExlaWNodGdsdWJpZ2UgaW1tZXIgd2llZGVyIGFyZ3VtZW50aWVyZW4sIGRhc3Mgc2llIGphIG51ciBnZWdlbiBFaW56ZWxwZXJzb25lbiBkZXIgUmVnaWVydW5nIGdlcmljaHRldCBzZWllbiAgIHZvbGwgYXVmIGRpZSBub3JtYWxlIEJldmxrZXJ1bmcgZHVyY2hzY2hsYWdlbiwgc2llIGhydGVyIHRyZWZmZW4sIGFscyBpaHJlICAgYW5nZWJsaWNoICAgZWlnZW50bGljaGVuIFppZWxlLgpUaGUgcGFydHkgZGlzY3Vzc2VzIGZvciBhIHdoaWxlIGFuZCBjb21lcyB1cCB3aXRoIGFub3RoZXIgcGxhbi4gCiJXZSBhcmUgcmVhbGx5IHJlc3BlY3RmdWwgb2YgdGhlIGxhbmQsIGFwcHJlY2lhdGUgdGhlIGxhbmRzY2FwZSBhbmQgcmVzcGVjdCBvdXIgbmVpZ2hib3JzLiIiVGhlIHRvd24gaXMgYmVpbmcgYXNrZWQgdG8gcGxheSAndHJ1c3QgbWUgcG9rZXIsJyBvbmUgdGhhdCBzYXlzIGRvbid0IHdvcnJ5LCB3ZSdyZSBnb29kLCJCaWxsIEJhc3NldHQgc2FpZCwgb3duZXIgb2YgVyBKIEJhc3NldHRaaW9uQ2FueW9uIEF1dG8sIGxvY2F0ZWQgYXQgMzIgU3RlYW1ib2F0IExhbmUgaW4gU3ByaW5nZGFsZS4gCkFkZGl0aW9uYWxseSwgcGFydGljdWxhcmx5IGR1cmluZyB0aGUgbGFzdCAxMDAgZGF5cyBvZiB0aGUgV2FyLCB0aGUgRm9yZXN0cnkgQ29ycHMgd2FzIHJlcGVhdGVkbHkgY29tYmVkIGZvciB2b2x1bnRlZXJzIGZvciB0cmFuc2ZlciBpbnRvIHRoZSBpbmZhbnRyeS4uIApCdXQgYW55IGphY2sgYSBjYW4gc2VlIGhvdyBoZSB3YXMgcmFpbHJvYWRlZCBpbiB0aGUgVEggY2FzZS4gClVnaCwgSSBzb3JyeSB5b3UgaGF2ZSB0byBkZWFsIHdpdGggdGhpcywgbXkgaHVzYmFuZCBhbmQgSSBoYWQgc29tZXRoaW5nIHNpbWlsYXIgaGFwcGVuIHdoZW4gd2Ugd2VyZSBpbiBhIGRpZmZlcmVudCBuZWlnaGJvcmhvb2QsIGJ1dCBpdCB3YXMgYW4gb3ZlcnNpemVkIGJsdWUgaGVlbGVyIHdobyBjb3VsZCBqdW1wIGEgNiBmb290IHdvb2RlbiBmZW5jZSBsaWtlIGhlIHdhcyBhIGNhdC4gQXQgdGhlIHRpbWUsIHRoZSBuZWlnaGJvciBpbiBxdWVzdGlvbiBkaWRuIGtub3cgd2hvIHdhcyBjYWxsaW5nIG9uIGhpcyBkb2csIHNvIEkgbmV2ZXIgaGFkIHRvIGRlYWwgd2l0aCBoaW0gZGlyZWN0bHkuIE15IGJlc3QgYWR2aWNlOiB0aGVzZSBwZW9wbGUgYXJlIG5ldmVyIGdvaW5nIHRvIGJlIHJlYXNvbmFibGUgb3IgbG9naWNhbCwgc28gZG9uIGdldCBpbnRvIGFyZ3VtZW50cyB3aXRoIHRoZW0uIEV2ZXJ5IHRpbWUgdGhleSB0cnkgdG8gdGFsayB0byB5b3UsIGp1c3QgcmVwZWF0IG92ZXIgYW5kIG92ZXI6ICJ5b3VyIGRvZyBpcyBkYW5nZXJvdXMsIGFuZCBJIHByb3RlY3RpbmcgbXlzZWxmIiBvciBzb21ldGhpbmcgc2ltaWxhciwgYW5kIGV4dHJhY3QgeW91cnNlbGYgZnJvbSB0aGUgY29udmVyc2F0aW9uLgpLZWVwIFRhbGtpbmcgKGV2ZW4gd2hlbiBpdCdzIGhhcmQpIE1hcmlvbmV0dGUgT2JzdGV0cmljcyAiTW90aGVyIExvZGUgb2YgUGFpbiIgTWlzcyBVbml2ZXJzZSBNYWtlIEJlbGlldmUgTGlmZSBhcyBSb2xsZXJjb2FzdGVyIFNoYWNrbGluZyBMYWJvcmluZyBJbm1hdGVzIFdvcmQgU2VhcmNoICAgKG1vcmUpIFdoYXQgUGVvcGxlIEFyZSBBc2tpbicgV29yZCBTZWFyY2ggICBXaGF0IFBlb3BsZSBBcmUgQXNraW4nIFdhdmVzIG9mIEZsZXNoIFJhbmRvbSBTdHVmZiAgIEdvbm5hIEJlIEZ1biEgKE5PVCkgYSAiU3R1cGlkIEdpcmwiIFdhdGNoICJHb29kIE1vcm5pbmcgQW1lcmljYSIgSSd2ZSBEb25lIFNvbWUgKEVSKSBUaW1lIEV0aGljcyBQYXRpZW50IEFkdm9jYXRlcyBCcmVhc3RmZWVkaW5nIEthdHJpbmEgU3RvcmllcyBTaGFwZSBvZiBhIE1vdGhlciBWYWNjaW5hdGlvbnMgUGVkaWF0cmljIEdyYW5kIFJvdW5kcyAgIEp1bHkgMTUsIDIwMDYgQmFieSBpbiB0aGUgQnJlZXplICAgYSB3b25kZXJmdWwgSEJBQyBzdG9yeSBUaGUgU3VuIFBvc3RwYXJ0dW0gU3VpY2lkZSBBcnRpY2xlIExldCdzIExvb2sgYXQgVGhvc2UgU2VhcmNoIFRlcm1zIEdyYW5kIFJvdW5kcyAgIEp1bHkgMTF0aCwgMjAwNiBEdW1waW5nIFdhdGVyIFRoZXJhcHkgSGVhdnkgV2VpZ2h0IEZpZ2h0IFdoYXQgTWFrZXMgUGxhY2VudGFzIEhlYWx0aHkgKG9yIG5vdCkgV29yZCBTZWFyY2ggICBWZWxhbWVudG91cyBJbnNlcnRpb24gV29yZCBTZWFyY2ggICBIZWFsdGh5IFBsYWNlbnRhIFdoYXQgRG8gSSBLbm93LCBBbnl3YXk/IEdyYW5kIFJvdW5kcyAgIEp1bHkgNHRoLCAyMDA2IFdvcmQgU2VhcmNoICAgSG93IHRvIFdlYW4gV29yZCBTZWFyY2ggICBSaXBlIENlcnZpeCBXb3JkIFNlYXJjaCAgIEJhYnkgV2l0aG91dCBPeHlnZW4gV29yZCBTZWFyY2ggICBIb21lIEJpcnRoIEFuYWxnZXNpY3MgSWYgYSBTY2hlZHVsZWQgQ2VzYXJlYW4gaXMgTmVjZXNzYXJ5IExvdyBBRkkgKE5TVC9CUFApIEZhdCBWYWdpbmFzIExldCdzIEFsbCBIYXZlIFZCQW1DcyEgV29yZCBTZWFyY2ggICBwb3N0ZXJpb3IgY2Vydml4IEZhc3RpbmcgUGxhY2VudGEgYW5kIFRvbmd1ZSBQc3ljaCBXcml0ZXMgQmxvZ2dpbmcgICBFc3NheXMgb3IgU3RyZWFtcyBvZiBDb25zY2lvdXNuZXNzPyBOZXcgT3JsZWFucyBWQkFDIFN0b3J5IEdyYW5kIFJvdW5kcyBQb3N0ZWQgICA2LzI3LzA2IFJlZmxlY3Rpb25zIG9uIE5ldyBPcmxlYW5zIFJpdHVhbHMgSHVtYW5pemluZyBhbiBPQi9HWU4gVmlzaXQgWW9uaSBQb3dlcmZ1bCBDb21tZW50IFRoYXQgTXVzdCBiZSBTaGFyZWQgTm8hIEdlb2dyYXBoaWNhbCBGYXQgR3JhbmQgUm91bmRzICAgSSBnb3QgaW4hIEtlbGx5IFJpcGEgICBOZXcgT3JsZWFucyBMIFN0YWZmaW5nIEVjc3RhdGljIEJpcnRoIEl0J3MgYSAoVkJBQykgR2lybCEgTGFib3IsIE1heWJlPyBDaWNhZGFzIFByZSAvRWFybHkvUHJvZHJvbWFsIExhYm9yIFJlZnVzYWwgRm9ybXMgQm9yZGVyIFBhdHJvbCBMZWFybnMgIkVtZXJnZW5jeSIgQ2hpbGRiaXJ0aCBJZiBJIFdlcmUgaW4gYSBEZXZlbG9waW5nIENvdW50cnkuIFdoZW4gdG8gRGViYXRlIEJyZWFzdGZlZWRpbmcgdnMuIApPbmUgb2YgdGhlIGJpZ2dlc3QgcmVhc29ucyB3ZSBjaG9zZSB0aGUgY29sb3IgaXMgYmVjYXVzZSBpdCBhY2NlbnRzIHRoZSB0cmltIGFyb3VuZCB0aGUgZW50aXJlIGJhc2VtZW50LiBObywgdGhlIHRyaW0gaXNuJ3QgcHVycGxlLCBidXQgcHV0dGluZyB0aGVtIHRvZ2V0aGVyIGp1c3QgYnJpbmdzIG91dCBhIHdob2xlIG5ldyBsb29rLiBTaW5jZSB0aGUgU3VpdGVkIFB1cnBsZSBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgQ2xvdGggaGFzIGEgZGlhbW9uZCBwYXR0ZXJuIHdpdGhpbiwgaXQgbWFrZXMgdGhlIHRvbmUgZXh0cmVtZWx5IHJlbGF4aW5nIGZvciBldmVyeW9uZSB3aG8gcGxhbnMgb24gcGxheWluZyBpbiB0aGVpciBsaXR0bGUgY2FzaW5vLiAKVGhlIGZyZWFrcyB3ZXJlIGFueSBvbmUgb2YgdXMuIApJZiB5b3Ugd2FudCB0byBncmluZCB5b3VyIHdheSB1cCB0aHJvdWdoIHRoZSB0b3VnaGVzdCBzcGVlZCBwb2tlciBwb29scywgdGhlbiB5b3UgcHJvYmFibHkgaW4gZm9yIGEgdG91Z2ggdGltZSB1bmxlc3MgeW91IGhhdmUgYSBsb3Qgb2YgdGltZSB0byBwdXQgaW50byB3b3JraW5nIG9uIHlvdXIgZ2FtZSBmb3IgbGl0dGxlIHNob3J0IHRlcm0gcmV3YXJkLgpEb29raGFuIGNyZWF0ZWQsIGFuZCB0aGUgaW50ZWdyaXR5IG9mIHRoZSBjcmltaW5hbCBqdXN0aWNlIHN5c3RlbSBoYXMgYmVlbiBzaGFrZW4gdG8gdGhlIGNvcmUsIiBKdWRnZUNhcm9sIFMuIApJdCdzIHBvc3NpYmxlIHRoYXQgeW91IG1pZ2h0IGZlZWwgc29tZSBzb3JlbmVzcyB0aGUgZGF5IGFmdGVyIGEgZGVlcCB0aXNzdWUgbWFzc2FnZSBldmVuIGlmIHlvdSBETyBkcmluayB3YXRlci4gVGhpcyBqdXN0IG1lYW5zIGEgbG90IG9mIHdhc3RlIHByb2R1Y3RzIHdlcmUgZmx1c2hlZCBvdXQgb2YgdGhlIHRpc3N1ZXMuIEl0IHNob3VsZCBwYXNzIHdpdGhpbiBhIGRheSBvciBzby4KSmUgbWUgc3VpcyBhbGxvbmcgcHJzIGQgYW54aWV1eC4gRWxsZSBzIHJlZHJlc3NlIHN1ciB1biBjb3VkZSwgYSBvcmRvbm4gIkVuIHNlbGxlISJFbGxlIGEgcmVtb250IHNlcyBqYW1iZXMgcXUgYSBvdXZlcnRlcywgamUgbWUgc3VpcyByZXRyb3V2IGRhbnMgc29uIHRhdSwgaiBjb21tZW5jLCBsZSBzb3VmZmxlIGNvdXJ0LCAgcGFzc2VyIHVuZSBtYWluIHN1ciBjZSBjb3JwcyBnaWdhbnRlc3F1ZS4gQyBtb24gcGxhbiBpbml0aWFsLCB0cmlvbXBoZXIgZHUgZ2FudCBldCBtZSBkaXJlIHF1ZSBwbHVzIHJpZW4gbmUgcG91dmFpdCBtIGRzb3JtYWlzLgpJIGFzc3VtaW5nIHlvdSBtZWFuIHlvdSBub3Qgc3VyZSBob3cgbXVjaCB0byB0YWxrIGFib3V0IHlvdXIgcGFzdCB3aXRoIGEgZnV0dXJlIHNpZ25pZmljYW50IG90aGVyLiBUaGF0IGhpZ2hseSBkZXBlbmRlbnQgb24geW91IGFuZCB5b3VyIHBhcnRuZXIuIApLbm93aW5nIHdlbGwgdGhhdCB0aGUgU3lyaWFuIHJlZ2ltZSBhbmQgaXRzIGFsbGllcyBoYWQgYnJva2VuIHRoZSBvdGhlciBjZWFzZWZpcmVzIGFuZCB1c2VkIHRoZW0gdG8gdGhlaXIgYWR2YW50YWdlLCBoZSByZWZ1c2VkIHRvIGFja25vd2xlZGdlIHRoYXQgdGhlIHdob2xlIG5hdHVyZSBvZiB0aGUgZW5kbGVzcyBuZWdvdGlhdGlvbnMgd2FzIHdvcmtpbmcgaW4gUnVzc2lhJ3MgZmF2b3VyLgpUaGF0IHNpZGUgb2YgZ2FtZXJnYXRlIHdhcyBzcGVjaWZpY2FsbHkgdGFyZ2V0ZWQgYnkgYWx0IHJpZ2h0IG5hdGlvbmFsaXN0IGdyb3VwcyAodGhlcmUgd2FzIGV2ZW4gYW4gYXJ0aWNsZSBvbiBTdG9ybWZyb250IGluc3RydWN0aW5nIHRoZWlyIGZlbGxvdyBuYXppcyB3aGVyZSBvbmxpbmUgdG8gcmVjcnVpdCwgd2l0aCBsaW5rcyB0byBzcGVjaWZpYyBhcnRpY2xlcyB0byBzaGFyZSB0byBiYWNrIHVwIHRoZWlyIGFyZ3VtZW50cyksIGJlY2F1c2UgdGhleSByZWNvZ25pemVkIHRoZWlyIHBvdGVudGlhbCB0byBsZW5kIGJvdGggY3JlZGliaWxpdHkgYW5kIGZpbmFuY2luZyB0byB0aGVpciBtb3ZlbWVudHMuIEJ1dCB0aGlzIGlzbid0IHRoZSB0aW1lIG9yIHBsYWNlIGZvciB0aGF0IHNoaXQuIEZvciBvbmUsIHRoaXMgaXMgci93aG9sZXNvbWVtZW1lcyBub3Qgci9wb2xpdGljcy4gCkhlIHdhcyBsb29raW5nIGZvcndhcmQgdG8gYXR0ZW5kaW5nIGhpcyA3MHRoIGFubml2ZXJzYXJ5IGFsdW1uaSBkaW5uZXIgdGhpcyBmYWxsIGF0IFdlc3Rlcm4gYW5kIGNoZWVyaW5nIGZvciB0aGUgTXVzdGFuZ3MgYXQgdGhlIEhvbWVjb21pbmcgZ2FtZS4gV2Ugd291bGQgbGlrZSB0byB0aGFuayBmcmllbmRzLCBmYW1pbHkgYW5kIGFsbCBvZiB0aGUgY2FyZWdpdmVycyBhbmQgbWVkaWNhbCBwZXJzb25uZWwgaW4gS2l0Y2hlbmVyLCBXYXRlcmxvbywgYW5kIEhhbGlidXJ0b24gYW5kIGF0IEhvc3BpY2UgV2VsbGluZ3RvbiwgR3VlbHBoIHdobyBzdXBwb3J0ZWQgQm9iIHdpdGggc3VjaCB3b25kZXJmdWwgY2FyZSBhbmQgYXR0ZW50aW9uIG92ZXIgdGhlIHBhc3QgZmV3IHllYXJzLiBGcmllbmRzIGFyZSBpbnZpdGVkIHRvIHZpc2l0IHdpdGggdGhlIGZhbWlseSBhdCB0aGUgRXJiIGFuZCBHb29kIEZhbWlseSBGdW5lcmFsIEhvbWUgLCAxNzEgS2luZyBTdC4gCkRlbm4gZWluIGxja2VubG9zZXIgU2NodXR6IGRlciBEYXRlbiB2b3IgZGVtIFp1Z3JpZmYgZHVyY2ggRHJpdHRlIGlzdCBuaWNodCBtZ2xpY2guIFdpciB3aWRlcnNwcmVjaGVuIGhpZXJtaXQgYXVzZHJja2xpY2ggZGVyIE51dHp1bmcgdm9uIGltIFJhaG1lbiBkZXIgSW1wcmVzc3Vtc3BmbGljaHQgdmVyZmZlbnRsaWNodGVuIEtvbnRha3RkYXRlbiBkdXJjaCBEcml0dGUgenVyIGJlcnNlbmR1bmcgdm9uIG5pY2h0IGF1c2RyY2tsaWNoIGFuZ2Vmb3JkZXJ0ZXIgV2VyYnVuZyB1bmQgSW5mb3JtYXRpb25zbWF0ZXJpYWxpZW4uIERpZSBCZXRyZWliZXIgZGllc2VyIFNlaXRlbiBiZWhhbHRlbiBzaWNoIGF1c2RyY2tsaWNoIHZvciwgaW0gRmFsbCBkZXIgdW52ZXJsYW5ndGVuIFp1c2VuZHVuZyB2b24gV2VyYmVpbmZvcm1hdGlvbmVuLCBldHdhIGR1cmNoIFNwYW0gTWFpbHMsIHJlY2h0bGljaGUgU2Nocml0dGUgZWluenVsZWl0ZW4uLiAKVGhlIGFwcHJvYWNoIGFtb3VudHMgdG8gIkFmZ2hhbiBnb29kIGVub3VnaCIgaW5zdGVhZCBvZiBhbiBvdmVybHkgaWRlYWxpc3RpYyAiQWZnaGFuIGltcG9zc2libGUsIiBzYWlkIEFudGhvbnkgQ29yZGVzbWFuIG9mIHRoZSBDZW50ZXIgZm9yIFN0cmF0ZWdpYyBhbmQgSW50ZXJuYXRpb25hbCBTdHVkaWVzLiBXYXNoaW5ndG9uIGFuZCBOQVRPIGNhcGl0YWxzLCB0aGVyZSBpcyBub3cgIm1vcmUgd2lsbGluZ25lc3MiIHRvIHJlYWNoIGFuIGFjY29tbW9kYXRpb24gd2l0aCBtaWRkbGUgYW5kIGxvd2VyIGxldmVsIG1lbWJlcnMgb2YgdGhlIFRhbGliYW4sIGFzIHdlbGwgYXMgdHJ5aW5nIHRvIHBlZWwgYXdheSBzb21lIHNlbmlvciBmaWd1cmVzIGlmIHBvc3NpYmxlLCBoZSBzYWlkLi4gClNheWluZyBpZiB0cnVtcCB3YXMgd29ycmllZCBhYm91dCB0aGUgQ29oZW4gc3RhdGVtZW50cywgdGhlbiBoZSBoYXZlIG1hZGUgYW55IGRlYWwgaGUgY291bGQgdG8gc2hpZnQgdGhlIG5ld3MuIApJJ20gbWFraW5nIGEgVGV4YXMgSG9sZCdlbSBnYW1lIGZvciBtdWx0aXBsZSBwbGF5ZXJzLiBTbyBmYXIsIEkgaGF2ZSBmaW5pc2hlZCB0aGUgZmxvdyBjb250cm9sIGZvciBiZXR0aW5nIC8gY2FsbGluZyBzZXF1ZW5jZXMsIHBsYXllciBzdGFjayAvIHBvdCB1cGRhdGluZywgYW5kIGp1c3Qgbm93ICAgdGhlIHBhcnQgcmVzcG9uc2libGUgZm9yIGRyYXdpbmcgY2FyZHMgYW5kIGRpc3RyaWJ1dGluZyB0aGVtLiAKRWR1Y2F0aW9uYWwgYW5kIGFjYWRlbWljIHJlbGF0ZWQgcHJvZ3JhbXMsIHNraWxsIGJ1aWxkaW5nIHdvcmtzaG9wcyBhbmQgb3V0cmVhY2ggcHJlc2VudGF0aW9ucyBhcmUgb2ZmZXJlZCB0byB0aGUgY2FtcHVzIGNvbW11bml0eS4gCkxvb3QgYW5kIExvb3RlciBTaG9vdGVyLiAKSGVsZW4gaGF0dGUgZGVuIEF0ZW0gYW5oYWx0ZW4gbXNzZW4uIERpZSBFcnJlZ3VuZyBzY2hvc3MgaWhyIGlucyBCbHV0LCBlaW4gd2FybWVzIEdlZmhsIHN0aWVnIGF1Zi4gQWJlciBpaHJlIEhuZGUgaGF0dGVuIHNjaG9uIGRlbiBlcnN0ZW4gU2F0eiBhbHMgQW50d29ydCBiZWdvbm5lbjogTmVpbiwgRG9jIENhcmxvcywgZGllIFdFIGJlc2NoZnRpZ3QgbWljaCBudXIgaW4gZGVyIEZhbnRhc2llIC4gCldoZW4gd2UgYnJva2UgdXAsIHRoZWlyIHdlcmUgbm8gaGFyZCBmZWVsaW5ncyBhdCBhbGwuIFdlIGJvdGggdW5kZXJzdG9vZCB0aGUgaW1wb3J0YW5jZSBvZiBmYW1pbHkgZm9yIGVhY2ggb3RoZXIuIApBbmltYXRpb24gd2FzIGFsc28gYnVtcGVkIGZyb20gdGhlIHVzdWFsIG1lZGlvY3JlIHF1YWxpdHkgc29tZXdoYXQgKGVzcGVjaWFsbHkgZHVyaW5nIHRoZSBFbmdsYW5kIGFuZCBGcmFuY2UgdnMgTWlzaGEgZmlnaHQsIGV2ZW4gaWYgdGhlIGZpZ2h0IHdhcyBkb25lIG1laCksIHNvIHRoYXQgd2FzIG5pY2UuIE1heWJlIHRoZXkgd2lsbCBhbXAgdXAgdGhlIGJ1ZGdldCBmb3IgdGhlIGxhc3QgZm91ciBlcGlzb2Rlcy4KQW5vdGhlciBncmVhdCByZWFzb24gb25saW5lIHBva2VyIGlzIHdvcnRoIHRyeWluZyBpcyB0aGUgZmFjdCB0aGF0IHRoZSB0ZWNobm9sb2d5IG5vd2FkYXlzIGlzIHZlcnkgc2VjdXJlLCBhbmQgZmFpci4gTWFqb3IgYnJhbmRzIGFyZSBjb25zdGFudGx5IGJlaW5nIG1vbml0b3JlZCBieSBnYW1ibGluZyBjb21taXNzaW9ucyB0byBlbnN1cmUgcXVhbGl0eSBzdGFuZGFyZHMsIGFuZCB0byBtZWV0IGNsaWVudCBuZWVkcyBpbiBhbGwgYXJlYXMsIHNwZWNpYWxseSBmYWlybmVzcyBhbmQgc2VjdXJpdHkuIE5ldmVyIGJlZm9yZSBoYXZlIGh1bWFucyBwbGF5ZWQgd2l0aCBzbyBtdWNoIGZhaXJuZXNzIGFzIGRyYXdzIGFyZSBleGVydGVkIGluIHJhbmRvbSBtb2RlcywgZ2l2ZW4gYWxsIHBsYXllcnMgdGhlIHNhbWUgY2hhbmNlcyB0byBzdWNjZWVkIGFzIGFueSBvdGhlci4gClNoZSBvZnRlbiBhdHRyYWN0cyBwYXRpZW50cyB3aG8gaGF2ZSBydW4gb3V0IG9mIG9wdGlvbnMsIG1hbnkgd2l0aCBjb21wbGljYXRlZCBjb25kaXRpb25zLCBzdWNoIGFzIGNocm9uaWMgcGFpbi4gCkkgd2FzIGF0IGEgcGFydHkgYXQgY29sbGVnZSwgd2hvIGhhZCBhIGhhbmQgbGlrZSB0aGF0LiAKUHJpbnQ6IERpZmZlcmVudCB0eXBlZmFjZXMuIFNob3VsZCBiZSBjbGVhcmx5IG1hcmtlZCAic3BvbnNvcmVkIiBvciAiUHJvZHVjZWQgYnkiIGF0IHRvcCBvZiB0aGUgcGFnZS9jb3B5IGJsb2NrLiBJZiBwYXJ0IG9mIHBhZ2UsIHNob3VsZCBiZSBzZXBhcmF0ZWQgZnJvbSBlZGl0b3JpYWwgYnkgZG91YmxlIHJ1bGVzLgpBbnQgcG9wdWxhdGlvbnMgYXJlIGdlbmVyYWxseSBrZXB0IGluIGNoZWNrIGJ5IG90aGVyIGluc2VjdHMsIGZ1bmdpLCBhbmQgaW1wb3J0YW50bHkgb3RoZXIgYW50cy4gQmVlcyBiZWNvbWUgbGltaXRlZCBieSBsb3RzIG9mIHRoaW5ncy4uIApIZWNrLCBJIGtub3cgYSBsb3Qgb2YgZ3V5cyB3aG8gYXJlIG5vdyB3YWxsb3dpbmcgaW4gaXQgaW4gdGhlaXIgbWlkIDMwcyAodGhlIHdob2xlICJFdmVyeW9uZSB0b2xkIG1lIEkgd291bGQgYmUgZG9pbmcgbW9yZSB0aGFuIHdoYXQgZ29pbmcgb24gaW4gbXkgbGlmZSByaWdodCBub3ciKS4gClRvIHNlZSBhbGwgb2Ygb3VyIGFydGljbGVzIG9uIHBva2VyIHJ1bGVzIGFuZCBhZHZpY2UsIGdvIHRvIG91ciBtYWluIGFydGljbGUgb24gSG93IFRvIFBsYXkgUG9rZXIuIApMZWdlbmRzJyBNaWtlIEJyb3duIHNheXMgdGhhdCBldmVuIGlmIEtub3ggd2VyZSBzdGlsbCBsZWFkaW5nIHRoZSBNb3JuaW5nIEJ1enosIGEgVFYgc2hvdyB3aXRoIEtub3ggd2FzIGluIHRoZSB3b3Jrcy4gVGhlIHByb2R1Y3Rpb24gaXNzdWVzIHdpbGwgYmUgaGFuZGxlZCBieSB0aGUgV0IgYWZmaWxpYXRlLCBhbmQgaXQncyBhIG5hdHVyYWwgcHJvbW90aW9uIGZvciB0aGUgc3BvcnRzIGJhci4gCkFmdGVyIHRoZSB0YXggcGF5bWVudHMgYW5kIGRpc3RyaWJ1dGlvbiBvZiB3aW5uaW5ncywgdGhlIG5ldCBnYW1ibGluZyBwcm9kdWN0IHdhcyAyMDAgbWlsbGlvbiAoVVMkMjcwIG1pbGxpb24pLiAKRWxsZSBhIGNyaXQgdW4gb3V2cmFnZSBxdWkgcydpbnRpdHVsZSA6IE9zdG9wYXRoaWUgaW50cmFwZWx2aWVubmUgZXQgYXJicmUgZ3luY29sb2dpcXVlLCBTZXh1YWxpdCBldCBpZGVudGl0LiAKQnJlYWtpbmcgYm9uZXMgYW5kIGRpc2xvY2F0aW5nIGpvaW50cyBkdXJpbmcgdGhlIGFjdGlvbiBpcyBtb3JlIG9mIGEgaG9ycm9yIHRyb3BlLCB3aGljaCBtYWtlcyBpdCBwZXJmZWN0bHkgb2sgdGhhdCBJIGEgaHlwb2NyaXRlIHdobyBicmVha3MgaW52ZXN0aWdhdG9yIGJvbmVzIG9uIHRoZSByZWd1bGFyClJlZ3VsYXIgY2FzaW5vIGNoaXBzIGFyZSBub3QgdXN1YWxseSB1c2VkIGF0IGEgcm91bGV0dGUgdGFibGUuIEluc3RlYWQsIHdoZW4gdGhlIHBsYXllciBwbGFjZXMgbW9uZXkgb24gdGhlIGxheW91dCBhbmQgYXNrcyBmb3IgY2hpcHMsIHRoZSBkZWFsZXIgd2lsbCBnaXZlIG91dCBzcGVjaWFsIHJvdWxldHRlIGNoaXBzLiBFYWNoIHBsYXllciBnZXRzIGEgZGlmZmVyZW50IGNvbG9yIG9mIGNoaXBzIHNvIHRoZSBkZWFsZXIgY2FuIGtlZXAgdHJhY2sgb2Ygd2hpY2ggY2hpcHMgYmVsb25nIHRvIHdoaWNoIHBsYXllci4gQmVjYXVzZSB0aGUgaG91c2UgZG9lcyBub3Qgd2FudCB0byBnZXQgaW4gYSBkaXNwdXRlIG92ZXIgd2hhdCBjaGlwcyBiZWxvbmcgdG8gd2hvbSwgY291cGxlcyBvciBmcmllbmRzIHBsYXlpbmcgdG9nZXRoZXIgbWF5IG5vdCBzaGFyZSBjaGlwcy4gRXZlbiBodXNiYW5kcyBhbmQgd2l2ZXMgcGxheWluZyB0b2dldGhlciBhcmUgcmVxdWlyZWQgdG8gcGxheSBzZXBhcmF0ZSBjb2xvcnMuClBsZWFzZSBiZSBpbmZvcm1lZCB0aGF0IHlvdXIgQ0hFUVVFIG9mIHRoZSBzdW0gb2YgVVMkMSw5NTAsMDAwLjAwIGlzIG5vdyB3aXRoIEdsb2JhbCBtZWdhIENyb3NzaW5nIEZpbmFuY2UgYW5kIFNlY3VyaXR5IENvbXBhbnkgaW5zdXJlZCB3aXRoIHlvdXIgZW1haWwgYWRkcmVzcyB0aGF0IHdvbiB5b3UgdGhpcyBwcml6ZSwgdGhlcmVmb3JlIHlvdSBzaG91bGQgY29udGFjdCAoR0xPQkFMIE1FR0EgQ1JPU1NJTkcgU0EpIHlvdXIgYWdlbnQgYW5kIGdpdmUgdGhlbSB5b3VyIGZ1bGwgbmFtZXMgc28gdGhhdCB0aGV5IHdpbGwgcmUgaW5zdXJlIHlvdXIgQ0hFUVVFIHVuZGVyIHlvdXIgZnVsbCBuYW1lc0ZvciBkdWUgcHJvY2Vzc2luZyBhbmQgcmVtaXR0YW5jZSBvZiB5b3VyIHByaXplIG1vbmV5IHRvIGEgZGVzaWduYXRlZCBhY2NvdW50IG9mIHlvdXIgY2hvaWNlLiBSZW1lbWJlciwgeW91IG11c3QgY29udGFjdCB5b3VyIGNsYWltIGFnZW50TVIuIEpPU0VQSCBNT0tPRU5BLiAKVGhlIHN0dWR5IGFsc28gcHJlZGljdHMgcm9ib3RzIHdpbGwgc2F2ZSB0aGUgY3VzdG9tZXIgdGltZSBhbmQgbW9uZXkgYnkgb2ZmZXJpbmcgc2VydmljZXMgdGhhdCBwcmV2aW91c2x5IHdlcmUgY29zdCBwcm9oaWJpdGl2ZS4KWW91IGFuIGlkaW90LiBJbnN0ZWFkIG9mIHBhdXNpbmcgYW5kIHN0YXJ0aW5nIHRoZSB2aWRlbyBvdmVyIGFuZCBvdmVyLCBzcXVpbnRpbmcgdHJ5aW5nIHRvIHJlYWQgdGlueSBiYXIgZ3JhcGhzLCBqdXN0IG9wZW4gdXAgdGhlaXIgY2hhbm5lbCBhbmQgd2F0Y2ggdGhlIHZpZGVvIHRoYXQgZXhwbGFpbnMgdGhlIHByZXNlbnRhdGlvbiBvZiB0aGVpciByZXN1bHRzLiAKSW4gYWRkaXRpb24gdG8gdGhlIGNvc3QgY29uY2VybnMsIEFiZGVsYXppeiBub3RlcyB0aGF0IGhlciBwcm9kdWN0cyBhcmUgcHJpbWFyaWx5IGFpbWVkIGF0IHdvbWVuICAgYW5kIHRoZXJlIGp1c3QgYXJlbid0IHRoYXQgbWFueSBvZiB0aGVtIGF0IENFUy4uIApNYW55IGFtYXRldXIgcGxheWVycyBwb2tlciB0b3VybmFtZW50IHN0cmF0ZWdpZXMgaW5jbHVkZSBwbGF5aW5nIHZlcnkgcmVkdWNlIGVhcmx5IGluIGEgdG91cm5hbWVudCwgc28gcmF0aGVyIHRoYW4gZm9sbG93aW5nIHRoZW0sIG1ha2UgdXNlIG9mIGl0IHRvIGFnYWluc3QgdGhlbS4gCkpvc2ggQm95ZXIgKENCIGNvYWNoIHNpbmNlIDE2LCBEQiBjb2FjaCBzaW5jZSAwOSwgd29ya2VkIGZvciBvdXIgZGVmZW5zZSBzaW5jZSAwNikKTm93IHdpdGggdG91Y2ggcGhvbmVzLCBwZW9wbGUgaW4gdmVyeSBpc29sYXRlZCBwbGFjZXMgY2FuIGRvIGJhbmtpbmcgb3IgZ2V0IG5ld3Mgd2l0aCBhcHBzLiBXaGVuIEkgd2FzIGEgc21hbGwgY2hpbGQgbXkgcGFyZW50cyBoYWQgYSBwaG9uZSwgYnV0IGl0IHdhcyBhIGxhcmdlIGJveCBvbiB0aGUgd2FsbCBhbmQgaGFkIGEgY3JhbmsgdGhhdCB0aGV5IHR1cm5lZCB3aGVuIHRoZXkgd2FudGVkIHRvIG1ha2UgYSBjYWxsLi4gCkl0IGdyYW50ZWQgbWUgQmhhcnRpeWEgQ2hpa2l0c2FrIFJhdG5hIEF3YXJkLCBCZXN0IEludGVybmF0aW9uYWwgZmVhdHVyZSBBd2FyZCwgS2FzaGlwdXIgR2F1cmF2IEF3YXJkLCBNb3RoZXIgSW5kaWEgQXdhcmQgZm9yIFVkeW9nIFByYXRpYmhhLCBJbnRlcm5hdGlvbmFsIEdvbGQgU3RhciBBd2FyZCwgQXdhcmQgb2YgRXhjZWxsYW5jZSwgSG9tb2VvcGF0aGljIEdlbSAyMDExIGV0Yy4gQW5kIHNvIG9uLi4gClRvZG8gbXVuZG8gdGVtIHVtYSBlc3RyYXRnaWEgcHJwcmlhIGVtIHJlbGFvIGEgaXNzbywgbWFzIGFxdWkgdmFpIHVtYSBleHBsaWNhbyBkZSBjYWRhIGFvOi4gCkFsc28sIGFyZSB5b3VyIGJsaW5kcyBnb2luZyB0byByYWlzZSB0aHJvdWdob3V0IHRoZSBldmVuaW5nPyBJZiBzbywgdGhlbiBiZWluZyBhZ2dyZXNzaXZlIGluIHRoZSBlYXJseSByb3VuZHMgb2YgYmV0dGluZyBjYW4gYmUgYWR2YW50YWdlb3VzIGJlY2F1c2UgeW91IGNhbiAic3RlYWwiIHRoZSBibGluZHMuIApHYW1ibGluZyBCZWZvcmUgdGhlIE9ubGluZSBDYXNpbm9zIG9mIE91ciBEYXkKVGhlIG9kZHMgb2YgaGl0dGluZyBlaXRoZXIgYXJlIGFzdHJvbm9taWNhbCwgYnV0IGl0IGRvZXMgaGFwcGVuLi4gCkkgZG9uIGxvb2sgYXQgdGhlc2UgcG9zdHMgYW5kIHRoaW5rICJ5b3UgY2FuIHRlbGwgbWUgSSBub3QgZXhoYXVzdGVkIGlmIEkgZG9uIGhhdmUga2lkcyEhISIuIApUaGUgU2FuIEZyYW5jaXNjbyBiYXNlZCBwdWJsaXNoZXIgb2YgaGVhbHRoIGluZm9ybWF0aW9uIGZvciBjb25zdW1lcnMgcHJhY3RpY2VzIHdoYXQgaXQgcHJlYWNoZXM6IEVhY2ggZW1wbG95ZWUgaXMgZ2lmdGVkICQxLDIwMCBhbm51YWxseSB0byBzcGVuZCBvbiB0aGVpciBvd24gcGVyc29uYWwgd2VsbG5lc3MuIFBlcmtzIGxpa2UgdGhhdCwgYWxvbmdzaWRlIGEgdmFsdWUgYmFzZWQgY29tcGFueSBtaXNzaW9uIHRvIGNyZWF0ZSBhIHN0cm9uZ2VyLCBoZWFsdGhpZXIgd29ybGQsIGFyZSBhdHRyYWN0aW5nIGVtcGxveWVlcyB0byBIZWFsdGhsaW5lIGluIGRyb3Zlcy4gCk9uY2UgeW91IHRlYWNoIHNvbWVvbmUgdG8gYmVhdCB5b3VyIGdhbWUgZm9yIHlvdXIgaG91cmx5LCB5b3UgaW1tZWRpYXRlbHkgaGF2ZSBtb3JlIGNvbXBldGl0aW9uIGFuZCB5b3UgaGF2ZSBhZGRlZCBzb21lb25lIGVsc2Ugd2hvIGlzIHRha2luZyBtb25leSBmcm9tIHRoZSBwb2tlciBlY29ub215LiAKU3R1ZmZhbmRtb3Jlc3R1ZmYgdQoiSGUgc2FpZCB0byB0aGVtLCAnWW91IGFsc28gZ28gYW5kIHdvcmsgaW4gbXkgdmluZXlhcmQuJwpJZiB5b3UncmUgbG9va2luZyBmb3IgdG9wIG5vdGNoIHByb2Zlc3Npb25hbCBxdWFsaXR5LCB0aGlzIHJldmlldyBvZiB0aGUgMTAwIFBhdWxzb24gUGhhcmFvaCBQb2tlciBDaGlwIFNldCBzaG91bGQgaGVscCB5b3UgZGVjaWRlIGl0IGlzIGEgZ3JlYXQgY2hvaWNlIGZvciB5b3UuIApLbm94LCBDaHJpcyBCcm93biBhbmQgcHJvZHVjZXIgUGhsaXAgU2F0Y2hlbGwgbG9zdCB0aGVpciBqb2JzIGF0IHRoZSBCdXp6IGluIHRoZSBhZnRlcnNob2NrIG9mIFNhdGNoZWxsIGFsbGVnZWRseSBoYW5kaW5nIG91dCBwb3Jub2dyYXBoaWMgdmlkZW9zIGF0IGEgR2F5IFByaWRlIHBhcmFkZSBpbiBDb253YXkgb24gSnVuZSAyNywgaW5jbHVkaW5nIGFsbGVnZWRseSBnaXZpbmcgb25lIHRvIGEgMTYgeWVhciBvbGQuIEtub3gsIHRob3VnaCBoZSB3YXMgYXQgYSBsYWtlIGhvdXNlIHdpdGggZnJpZW5kcyB0aGF0IHdlZWtlbmQsIGFwcGFyZW50bHkgd2FzIGRpc21pc3NlZCBieSBLQUJaIG93bmVyIFBoaWxpcCBKb25zc29uIGJlY2F1c2UgaGUgbGVkIHRoZSBNb3JuaW5nIEJ1enogc2hvdy4gQnJvd24gd2FzIGluIENvbndheSB3aXRoIFNhdGNoZWxsIHRoZSBkYXkgb2YgdGhlIHBhcmFkZS4uIApJIGxvdmVkIFBhcmlzLCBhbmQgSSBmb3VuZCBQYXJpc2lhbnMgdG8gYmUgZ29vZCBwZW9wbGUuIEkgZnJvbSBOZXcgWW9yayBhbmQgdmlzaXQgTmV3IFlvcmsgQ2l0eSBvZnRlbiwgc28gcGVyaGFwcyBJIHVuZGVyc3RhbmQgdGhlIG1lbnRhbGl0eSBvZiBQYXJpc2lhbnMgYmV0dGVyIHRoYW4gQW1lcmljYW5zIHdobyBkb24gbGl2ZSBuZWFyIGEgYmlnIGNpdHkuCkl0IHdpZGVseSBydW1vcmVkIHRoYXQgSSBoYXRlIHRoZSBkb2csIGFuZCBpdCBraW5kIG9mIGZ1biB0byBwZXJwZXR1YXRlIHRoZSBteXRoLiBUaGUgdHJ1dGggaXMsIEkgaGF2ZSBub3RoaW5nIGFnYWluc3QgTW9vc2UuIFRoZSBvbmx5IGRpZmZpY3VsdHkgSSBoYXZlIGlzIHdoZW4gcGVvcGxlIHN0YXJ0IGJlbGlldmluZyBoZSBhbiBhY3Rvci4gQWN0aW5nIHRvIG1lIGlzIGEgY3JhZnQsIG5vdCBhIHJlZmxleC4gSXQgdGFrZXMgeWVhcnMgdG8gbWFzdGVyLCBhbmQgdGhvdWdoIGl0IGRvZXMgaGF2ZSBpdHMgcmV3YXJkcywgdGhlIHJld2FyZCBJIHNlZWsgaXMgbm90IGEgaG90IGRvZy4gTW9vc2UgZG9lcyB0cmlja3M7IEkgbWVtb3JpemUgbGluZXMsIHNheSB3b3JkcywgZXZlbiB3YWxrIGFyb3VuZCBhbmQgc3R1ZmYuIEJ1dCBJIGRvbiBuZWVkIGEgdHJhaW5lciBzdGFuZGluZyBvZmYgY2FtZXJhLCBnZXN0aWN1bGF0aW5nIHdpbGRseSBhbmQgd2F2aW5nIGFyb3VuZCBhIHBpZWNlIG9mIG1lYXQsIHRvIGtub3cgd2hlcmUgSSBzdXBwb3NlZCB0byBsb29rLiBNYXliZSBpbnN0ZWFkIG9mIGp1c3Qgc2xvd2x5IHBhbm5pbmcgdGhlIGNhbWVyYSB0byB0aGUgd2luZG93LCBjdXQgdG8gc29tZSBnYW1lcGxheSBvciBzb21ldGhpbmcgdGhhdCBnaXZlcyB0aGUgdmlld2VyIGFuIGlkZWEgb2Ygd2hhdCBwbGF5aW5nIHRoZSBnYW1lIHdpbGwgaW52b2x2ZS4gQW5kIGZvciBhIHRyYW5zaXRpb24sIGluc3RlYWQgb2YganVzdCBhIGJvcmluZyBjdXQgc3RyYWlnaHQgdG8gYmxhY2ssIG1heWJlIHlvdSBjb3VsZCBoYXZlIGEgbGlnaHRuaW5nIHN0cmlrZSBrbm9jayB0aGUgcG93ZXIgb3V0LCBnaXZpbmcgeW91IGEgZ29vZCBjaGFuY2UgdG8gY3V0PwpMZXQgc2l0IGZvciAzMCBtaW51dGVzLiAKT3RoZXIgZ3V5cyBpbiB0aGUgb2ZmaWNlIGhhdmUgd2hpc3BlcmVkIGhvdyBtdWNoIHRoZXkgd291bGQgbG92ZSB0byBjb25uZWN0IChoYSEpIHdpdGggaGVyLiAKVGhhdCB3YXMgYmVmb3JlIEkgbGVhcm5lZCB0byBzcGVhayB1cC4gCkxpa2V3aXNlIHdlIHNob3VsZCBiZSBnb29kIHN0ZXdhcmRzIG9mIG91ciBtb25leSBhbmQgc2VlayBvdXQgZ29vZCBjb21wYW5pZXMgYWxiZWl0IGEgbGl0dGxlIG1vcmUgZXhwZW5zaXZlLCBhIGxpdHRsZSBsZXNzIGNvbnZlbmllbnQgYnV0IGEgd2hvbGUgbG90IGJldHRlciBmb3Igb3VyIHdvcmxkIGFuZCBvdXIgd2F5IG9mIGxpdmluZy4gCkkndmUgd29ya2VkIGV2ZXJ5IGRheSBzaW5jZSBJIHR1cm5lZCAxOCB0byBwYXkgbXkgd2F5LCBhbmQgdG8gcGF5IG15IHRheGVzLiBJIGhhdmUgbmV2ZXIgZG9uZSBzYWlkIGRydWdzIGluIGEgcHVibGljIHBsYWNlIHRoYXQgd291bGQgY2F1c2UgdGhlIHBvbGljZSB0byBiZSBpbnZvbHZlZCBhcGFydCBmcm9tIG15IGNhciwgYW5kIEkgaGF2ZSBuZXZlciBiZWVuIHNvIG11Y2ggYXMgZGV0YWluZWQuIApCdXQgYmVjYXVzZSBvZiBtb3JhdG9yaXVtcyBvciB3aGF0ZXZlciB0aGVyZSB3YXMgYSBtb25vcG9seSBhbmQgb25seSBjZXJ0YWluIHBva2VyIHJvb21zIGhhZCB0aGUgYWJpbGl0eSB0byBjb25kdWN0IGdhbWVzLiAKWW91IHBlb3BsZSB0aGF0IGNhcmUgc28gbXVjaCBhYm91dCBhIHN0cmFuZ2VycyB2YWdpbmEgYXJlIHRoZSBlcGl0b21lIG9mIHBzeWNob3RpYy4gCkkgcmVhbGx5IGNhbiBzZWUgbXkgbW9tIGV2ZXIgc21va2luZywgYnV0IHRoZSBwYXJ0IGFib3V0IGhlciAib25seSBzbW9raW5nIHdoZW4gc2hlIGRyaW5rcyIgaXMgd2hhdCBjb25mdXNlcyBtZTsgbXkgNCB5ZWFyIG9sZCBicmFpbiB3b3VsZG4gaGF2ZSBrbm93biB0aGF0IHdhcyBhIHRoaW5nIHRoYXQgcGVvcGxlIGRvLgpObyBvbmUgaW4gdGhlaXIgcmlnaHQgbWluZCwgd2hvIGhhcyBzb2xkIGEgY29tcGFueSB3b3J0aCBhIGh1bmRyZWQgbWlsbGlvbiAoZXZlbiBhYm92ZSA3IG1pbGxpb24pIHdpbGwgYmUgdXNpbmcgdHVyYm90YXggaWYgdGhlIHNhbGUgaXMgdGhyb3VnaCBsZWdhbCBhbmQgbGVnaXRpbWF0ZSwgbWVhbmluZyB0aGF0IHlvdSBhcmUgcGF5aW5nIHRoZSBuZWNlc3NhcnkgdGF4ZXMgYW5kIGhhdmUgdGhlIG5lY2Vzc2FyeSBkb2N1bWVudHMuIApNaWdodCBiZSByZW1lbWJlcmluZyB0aGlzIHNsaWdodGx5IHdyb25nIGN1eiBJIHdhdGNoZWQgdGhpcyBsaWtlIDYgbW9udGhzIGFnbyBidXQgc2hlIGp1c3Qgc2l0cyBkb3duIGF0IHRoZSB0YWJsZSBpbiB0aGlzIHNjZW5lLCBhY3RzIGxpa2Ugc2hlJ3MgbmV2ZXIgcGxheWVkIGJlZm9yZSBpbiB0aGUgbW9zdCBhbm5veWluZyBkcmF3biBvdXQgZmFzaGlvbiwgaW5zdGFudGx5IHBpY2tzIHVwIEFBIG9yIEtLIG9yIHdoYXRldmVyIHdoaWNoIHJlc3VsdHMgaW4gbGlrZSBhIDYgd2F5IGFsbCBpbiB3aGVuIGFsbCB0aGUgZ3V5cyBqdXN0IGhhdmUgc2hpdCBoYW5kcy4gClByb2JhYmx5IHRoZSB0b3VnaGVzdCB2YXJpZXR5IGFuZCB0aGUgZWFzaWVzdCB0byBncm93IGlzICdBcnAuJyBUaGF0J3MgdGhlIG9uZSBJIHVzZSB0byBjcmVhdGUgc2hvcnQgcm9zZW1hcnkgImhlZGdlcyIgYWxvbmcgZHJ5aXNoIGVkZ2VzIG9mIHRoZSBnYXJkZW4uIEkndmUgYWxzbyBlbmpveWVkIGNyZWVwaW5nICh0cmFpbGluZykgcm9zZW1hcnkgaW4gY2xheSBwb3RzIG9uIHRoZSBwYXRpby4gRm9yIHRoZSB3aW50ZXIsIEkgc2V0dGxlIHRoZSBwbGFudHMgb24gYSBiZW5jaCBhZ2FpbnN0IHRoZSBwYXRpbydzIHNvdXRoIGZhY2luZyBob3VzZSB3YWxsLCB3aGVyZSB0aGV5IGFyZSBwcm90ZWN0ZWQgZnJvbSBoZWF2eSB3aW50ZXIgcmFpbnMuCkkgZW5jb3VyYWdlIHlvdSB0byByZWFkIG1vcmUgYWJvdXQgYm90aCBjaXJjdW1jaXNpb24gYW5kIEZHTS4KQXJlIHVzdWFsbHkgZ29vZCBpbmRpY2F0b3JzIG9mIGEgdGhlcmFwaXN0IHRoYXQgbW9yZSBjbGluaWNhbGx5IG1pbmRlZCBhbmQgZG9lcyB3ZWxsIHdpdGggZGV0YWlsIHdvcmssIGJ1dCBpdCBkb2VzbiBuZWNlc3NhcmlseSBtZWFuIHRoZXkgZ29vZCBhdCBpdC4gCkJ1dCBpdCBoYXMgbm8gc3RhciBzeW1ib2wuU29tZSBmbGFncyBzZWVtIHRvIGhhdmUgYm90aCBzdGFycyBhbmQgdGhlIHN1biBsaWtlIHRoZSBmbGFnIG9mIFBoaWxpcHBpbmVzLlN1ZGFuIGFsc28gZG9lc24gaGF2ZSBhIHN0YXIgb24gdGhlaXIgZmxhZy5DZW50cmlzdCAgIGRpc2xpa2UgbW9zdCBleHRyZW1lcywgYnV0IEkgbG92ZSB0YWxraW5nIGFib3V0IHRoZW0hSSBoYXZlIGEgbWFzdGVyIGRlZ3JlZSBpbiBwc3ljaG9sb2d5IGFuZCBsb3ZlIHRvIHdyaXRlIGFuZCByZXZpZXcgc2NyZWVucGxheXMuIApZb3UganVzdCBuZWVkIHRvIGdpdmUgc29tZSB0aG91Z2h0IGludG8gaG93IHRoZSBmZXcgZGlmZmVyZW5jZXMgYWZmZWN0cyB0aGUgaWRlYXMgb2YgdGhlIFNsYXYgd2l0aG91dCBjYWxjdWxhdGluZyBldmVyeXRoaW5nIGZyb20gc2NyYXRjaC4uIApJIGd1ZXNzIEkgY2FuIHJlYWxseSBoZWxwIHlvdSB0aGVyZS4uIAoxLiBUZXJtLiAKQWNjZW50dXJlIGNyZWF0ZWQgYSBOYXRpb25hbCBBY2NlbnQgb24gRW5hYmxlbWVudCBlbXBsb3llZSByZXNvdXJjZSBncm91cCwgd2hpY2ggZmVhdHVyZXMgZGlzdGluY3QgY2hhcHRlcnMgZm9yIG1lbnRhbCBoZWFsdGggYW5kIHBlcnNvbnMgd2l0aCBkaXNhYmlsaXRpZXMgICBjb2xsZWN0aXZlbHksIHRoZSBncm91cCB3b3JrcyB0byBjcmVhdGUgbmV0d29ya2luZyBvcHBvcnR1bml0aWVzIGFzIHdlbGwgYXMgcmFpc2UgYXdhcmVuZXNzIG9mIHJlbGF0ZWQgaXNzdWVzClN0YWdlIDE2IGFuZCAyMCB3aWxsIGJlIHRocm91Z2ggdGhlIEl0YWxpYW4gQWxwcy4gCkJ1dCB0aGUgZmFjdCBpcywgdGhleSB3ZXJlIG1vcmUgZGlzdW5pdGVkIHRoYW4gYW55dGhpbmcuIApBIHN0dWR5IGNvbmR1Y3RlZCBieSB0aGUgTWVkaWNhbCBDb2xsZWdlIG9mIEtvcmVhIGluIDIwMTUgcmV2ZWFsZWQgdGhhdCBhbG1vc3QgYSBxdWFydGVyIDIzLiAKU28gTWFkcmlkLCB0aGUgYmVzdCB0ZWFtIGluIEV1cm9wZSAoc28uIApUaGUgdWx0aW1hdGUgcGFydCBvZiBoaXMgZmFudGFzeSBpcyBiYXNpY2FsbHkgZ29uZSBub3cgdGhvdWdoLCBiZWNhdXNlIGhpcyB1bHRpbWF0ZSBmZWVscyBzbyBtdWNoIGxlc3MgcG93ZXJmdWwuIEFzIGEgU3dhaW4sIEkgZG9uIGZlZWwgYW55d2hlcmUgbmVhciBhcyB0YW5reSBvciBkb21pbmFudCBvciBkYW1hZ2luZyB3aXRoIHRoZSBuZXcgdWx0IGFzIHRoZSBvbGQgb25lIHdoZXJlIHlvdSBqdXN0IHdhZGVkIGluIGFuZCBiZWNhbWUgYSBnaWFudCBjbG91ZCBvZiByZWdlbmVyYXRpbmcgZGVhdGguClRoZU9ubHliMHggdQpZb3UgY2FuIG1hdGNoIGl0IGF0IGhvbWUuIApBbC4uIApUaGUgZGVhdGggdG9sbCBhdCBBdXNjaHdpdHosIHdoZXJlIG1vcmUgdGhhbiBhIG1pbGxpb24gcGVvcGxlIGRpZWQsIHByb3ZlZCBlc3BlY2lhbGx5IGhpZ2guIE9mIHRoZSA2MCwwMDAgRHV0Y2ggSmV3cyBzaGlwcGVkIHRvIEF1c2Nod2l0eiwganVzdCA2NzMgc3Vydml2ZWQsIGluY2x1ZGluZyAxMjcgbWVuIGFuZCB3b21lbiB3aG8gaGFkIGJlZW4gb24gdGhlIEZyYW5rIGZhbWlseSdzIHRyYW5zcG9ydCB0aGVyZSBpbiBTZXB0ZW1iZXIgb2YgMTk0NC4uIApHcmFudGVkLCBhIHJlbGF0ZWQgYXJ0aWNsZSAobGlua2VkIGluIHRoaXMgb25lKSBkb2VzIG1lbnRpb24gImxvdyB3YWdlIGZlZGVyYWwgY29udHJhY3RvcnMiLCB3aGljaCBJIGFtIG5vdCwgYnV0IEkgY2FuIHNheSB0aGF0IEkgZG9uIGtub3cgYW55IGNvbnRyYWN0b3JzIHRoYXQgYXJlbiBnZXR0aW5nIHBhaWQgcmlnaHQgbm93LCBhbmQgYWZ0ZXIgZG9pbmcgdGhpcyBmb3IgNSB5ZWFycywgSSBrbm93IGEgZ29vZCBhbW91bnQgaW4gbXkgYXJlYS4gSW4gZmFjdCwgaGF2aW5nIGJlZW4gZG9pbmcgdGhpcyBmb3IgNSB5ZWFycywgdGhyb3VnaCBhIG51bWJlciBvZiBzaHV0ZG93bnMsIEkgbmV2ZXIgc2VlbiBhIGNvbnRyYWN0b3Igbm90IGdldCBwYWlkIGR1cmluZyBhIHNodXRkb3duLi4gClRoZSBQYW50aGVycyBHcm91cCBDRU8gc2FpZCBpdCB3YXMgYSBnb29kIG1vdmUgZm9yIHRoZSBsb2NhbCBzcG9ydHMgY2x1YiB0byBiZSBwdXQgYmFjayBpbiB0aGUgaGFuZHMgb2YgaXRzIGNvbW11bml0eS4gIklmIGl0IHNlY3VyZXMgaXRzIGZ1dHVyZSwgdGhlbiB0aGF0IGlzIHRlcnJpZmljLCIgaGUgc2FpZC4gCkFzIHNvb24gYXMgSSBnb3QgYSBkb2cgdGhvdWdoLCBzdWRkZW5seSBhbGwgdGhlIHdlaXJkL2NyZWVweSB0aGluZ3Mgc3RvcHBlZCBoYXBwZW5pbmcuIApTbyBmb3IgdGhlIGFua2xlIEknbSBub3QgMTAwJSBzdXJlIHdoeSB0aGlzIGtpbmQgb2YgY2FtZSBvbiBvdXQgb2Ygbm93aGVyZSwgYnV0IGNvdWxkIGFsc28gYmUgcmVsYXRlZCB0byB0aGUgaW5jcmVhc2VkIHNxdWF0IHZvbHVtZS4gRnJvbSB0aGUgZGVzY3JpcHRpb24gYWJvdXQgdGhlIGFua2xlIGJlaW5nIGxlc3MgbW9iaWxlIHRoYW4gdGhlIG90aGVyIGluIHlvdXIgYmVuY2ggc2V0dXAgSSdkIHNheSBwZXJoYXBzIHRyeSBzb21lIGFua2xlIG1vYmlsaXR5IHN0dWZmLiBUd28gZHJpbGxzIGluIHBhcnRpY3VsYXIgdGhhdCBtaWdodCBiZW5lZml0IHlvdToKT3ZlcnZpZXcgZm9yIEJyb3RoZWwKTGV0IG1lIHN0b3AgeW91IHJpZ2h0IHRoZXJlLiBTb21lb25lIHdobyBsb3N0IHRoZWlyIGpvYiBkb2VzbiBoYXZlIG1vbmV5IGNvbWluZyBpbi4gTmV0ZmxpeCBoYXMgYSBiaWxsaW9uIGRvbGxhcnMgYSBtb250aCBjb21pbmcgaW4gZnJvbSBqdXN0IHN1YnNjcmlwdGlvbiBmZWVzLgpZb3UgY2FuIHdhdGNoIHNvbWUgc3RyZWFtZXJzIHRvIGxlYXJuIGhvdyB0byBkcmFmdCB0b28sIG5vdCBzdXJlIGlmIGRheTkgZG9lcyBpdCBmb3IgZHJhZnQsIGJ1dCBJIGxvdmUgdGhlIHdheSBoZSBleHBsYWluIGhpcyB0aG91Z2h0IHByb2Nlc3Mgd2l0aCBoaXMgcmVndWxhciBkZWNrIGJ1aWxkaW5nLCBzbyBpZiB5b3UgZmluZCBoaW0gd2l0aCBkcmFmdCB2aWRlb3MsIHRyeSB0YWtpbmcgYSBsb29rLgpGb3IgYW55b25lIHRoYXQgbGlrZXMgZnVubnkgY29tbWVudGFyeSBjaGFubmVscywgSSByZWFsbHkgcmVjb21tZW5kIERyZXcgR29vZGVuIGFuZCBEYW5ueSBHb256YWxleiEKW1RoZSBXZSBhcmUgdGhlIENyZWF0aXZlIEluZHVzdHJpZXMgc2VyaWVzOiBUaGUgQ3JlYXRpdmUgSW5kdXN0cmllcyAgIHZpZGVvIGdhbWUgY29tcGFuaWVzLCBkZXNpZ24sIG1hcmtldGluZyBhbmQgYXJjaGl0ZWN0dXJlIGZpcm1zLCBhbmQgdGFsZW50ZWQgcGVvcGxlIHdobyB3cml0ZSBib29rcywgZGVzaWduIGhvdXNlcywgc2hvb3QgbW92aWVzLCBtYWtlIGFydCBhbmQgcmVjb3JkIG11c2ljLCBqdXN0IHRvIG5hbWUgYSBmZXcgZXhhbXBsZXMgICBhcmUgYW4gaW1wb3J0YW50IHBhcnQgb2YgTWFzc2FjaHVzZXR0cycgZWNvbm9teSwgd2l0aCAkMSBiaWxsaW9uIHN0YXRld2lkZSBpbXBhY3QgYW5kIG92ZXIgMTAwLDAwMCB3b3JrZXJzLiBCeSB0aGUgZW5kIG9mIHRoZSAyMHRoIGNlbnR1cnksIG5ldyB0ZWNobm9sb2dpZXMgYW5kIG1hc3MgbWFudWZhY3R1cmluZyBsZWQgdG8gdGhlIHJpc2Ugb2YgbGFyZ2UgbWVkaWEgYW5kIGhvbGRpbmcgY29tcGFueSBtb25vcG9saWVzIGFzIHdlbGwgYXMgb3V0c291cmNlZCBwcm9kdWN0aW9uLiBUaGUgZGVzaWduZXIgbGVkLCBjcmVhdGl2ZSBjb21wb25lbnQgb2YgZmFzaGlvbiBiZWNhbWUgYW5vdGhlciBjb2cgaW4gdGhlIHdoZWVsLiBJbiBhbiBpbmR1c3RyeSBzdGFja2VkIGFnYWluc3QgZGVzaWduZXJzLCB0aGVyZSdzIGEgNjAlIGRyb3BvdXQgcmF0ZSBhbW9uZ3N0IHRyYWluZWQgZ3JhZHVhdGVzLiBXaGF0IGNvbnN1bWVycyBzZWUgYXMgaW5kdXN0cnkgc3VjY2VzcyBmcm9tIHNob3dzIGxpa2UgUHJvamVjdCBSdW53YXkgcmFyZWx5IGVxdWF0ZSB0byBmaW5hbmNpYWwgcHJvc3Blcml0eS4KWW91IGNhbiBhbHNvIGdldCBhIGZldyBib251c2VzIHdpdGggeW91ciBwdXJjaGFzZSBvZiB0aGlzIHByb2R1Y3QuIFRoZXJlIGFyZSBhIG51bWJlciBvZiBvdGhlciBtb25leSBtYWtpbmcgaW5mb3JtYXRpb25hbCBib29rcyBpbmNsdWRlZCB0aGF0IHdpbGwgZ2l2ZSB5b3Ugc29tZSB2YWx1YWJsZSBpbmZvcm1hdGlvbiBvbiBob3cgdG8gbWFrZSBtb25leSBvbmxpbmUuIFRoaXMgaXMgYSBuaWNlIGxpdHRsZSBleHRyYSB0aGF0IHdpbGwgc2hvdyB5b3Ugc29tZSBkaWZmZXJlbnQgdGhpbmdzIHRoYXQgeW91IGNhbiBkbyBpbiB5b3VyIG1vbmV5IG1ha2luZyBlbnRlcnByaXNlLi4gCkFsc28sIGhlbHBlZCBmaXggYSBwb3BwZWQgdGlyZSBmb3IgYSBndXkgcmlkaW5nIHRoZSBzYW1lIGJpa2UgYXMgbWluZSAoViBTdHJvbSkuIApZb3VyIGJpZyBtZW4gYXJlIGFuY2hvcmluZyB5b3VyIGJsb2NrcyBhbmQgZmcsIGJ1dCB0aGV5IGFyZSBob3JyaWQgYXNzaXN0IGFzc2V0cy4gSW4gZ2VuZXJhbCwgYXNzaXN0cyBhbmQgVE8sIGFzIHdlbGwgYXMgYXNzaXN0cyBhbmQgRkcvQmxvY2tzIGFyZSBuZWdhdGl2ZWx5IGNvcnJlbGF0ZWQuIEkgdGhpbmsgd2l0aCBQYXl0b24gY29taW5nIGJhY2ssIGl0J2xsIGhlbHAgYSBiaXQsIGJ1dCBJIHdvdWxkIHRyeSBhbmQgbW92ZSBvbmUgb2YgbWF5YmUgR2lhbm5pcyBvciBSYW5kbGUgZm9yIGFub3RoZXIgYXNzaXN0IGhlYXZ5IHBsYXllciBhbmQganVzdCBwdW50IFRPLiAKU29tZSBvZiBvdXIgYm9va3MgYXQgaG9tZSBoYWQgYmVlbiBpbiBhIHNjaG9vbCBmaXJlIGFuZCB0aGV5IGhhZCBzbW9rZSBtYXJrcyBvbiB0aGUgcGFnZXMsIGFuZCBzbWVsdCBzbW9reSBidXQgSSBsb3ZlZCB0aGVtIGp1c3QgdGhlIHNhbWUuIERyIFNldXNzIHdhcyB1dHRlcmx5IGF3ZXNvbWUuIApTcGFjZVBpc3RhY2hpbyB1ClRoZSBOQUNIUyBpcyBkZWRpY2F0ZWQgdG8gZXN0YWJsaXNoaW5nIHRoZSBwbGFjZSBvZiBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUgaW4gdGhlIG1pbmRzIGFuZCBwcmFjdGljZXMgb2YgdGhvc2UgaGVhbHRoIGNhcmUgcHJvdmlkZXIgd2hvIHRyZWF0IGhlYWRhY2hlcy4KVGhlIGZvcm1lciBMaWJlcmFsIERlbW9jcmF0IHNlbmF0b3IgaXMgaG9waW5nIHRvIHdpbiBhIHN0YXRlIHVwcGVyIGhvdXNlIHNlYXQgYXQgdGhlIE1hcmNoIDIzIGVsZWN0aW9uLiAKT3IgaWYgdGhlIHByb3N0aXR1dGlvbiBjdWx0dXJlIGhlcmUgaXMgc28gYmFkLCBidXQgaWYgeW91IHJlYWQgaW50byB0aGUgaGlzdG9yeSwgdGhlIGZhY3QgdGhhdCBiZWZvcmUgdGhlIGluZmx1eCBvZiBKYXBhbmVzZSBhbmQgQW1lcmljYW5zLCB0aGVyZSB3YXNuIGV2ZW4gYSBzaW5nbGUgYnJvdGhlbCBpbiB0aGUgZW50aXJlIGNvdW50cnkuIE9yIGV2ZW4gb3ZlcmJsb3dpbmcgcGxhc3RpYyBzdXJnZXJ5IHdoZW4gdGhlIElTQVBTIHJhdGUgaXNuIGV2ZW4gdGhhdCBtdWNoIGhpZ2hlciBldmVuIHdpdGggdGhlIGJ1cmRlbiBvZiBhIG1hc3NpdmUgbnVtYmVyIG9mIHN1cmdlcnkgdG91cmlzdHMuIFlvdSB0aGluayBJIHRoZSBvbmUgd2hvIGFycm9nYW50IGhlcmU/IEkgZ2V0IGRvd252b3RlZCBpbiB0aGlzIGJvYXJkIGZvciBjb21wYXJpbmcgS29yZWEgbGF3cyB0byB1bndlc3Rlcm5pemVkIGNvdW50cmllcyBiZWNhdXNlIG9mIHRoZSByYW1wYW50IHN1cGVyaW9yaXR5IGNvbXBsZXggdGhhdCBpcyBzbyBjb21tb24gaGVyZS4uIApKYXBhbiBpcyB0aGUgdWx0aW1hdGUgZW5hYmxlci4gClRoYXQgbm90IGNvbXBsZXRlbHkgdHJ1ZS4gCk1hc3NhZ2UgY2FuIGhlbHAgeW91IGZlZWwgYmV0dGVyIHBoeXNpY2FsbHkgYnkgcmVsaWV2aW5nIHBhaW4gZnJvbSB0ZW5zZSBtdXNjbGVzLCBpdCBjYW4gcHJvbW90ZSBkZWVwZXIgc2xlZXAsIGluY3JlYXNlIGpvYiBwZXJmb3JtYW5jZSBhbmQgZGVjcmVhc2UgbWVudGFsIGZhdGlndWUuIEl0IGNhbiBhbHNvIGltcHJvdmUgaW1tdW5lIGZ1bmN0aW9uIGFuZCBoZWxwIHRoZSBib2R5IGVsaW1pbmF0ZSB3YXN0ZSBmcm9tIHRpc3N1ZXMgYW5kIGNlbGxzLiBNYXNzYWdlIHJlc3RvcmVzIHRoZSBpbmRpdmlkdWFsIHBoeXNpY2FsbHkgbWVudGFsbHkgYW5kIHNwaXJpdHVhbGx5Li4gClN0YWZmIGF0IHRoZSBub3QgZm9yIHByb2ZpdCBvcmdhbml6YXRpb24gd2FzIHBsZWFzYW50bHkgc3VycHJpc2VkIHRoYXQgRGF2ZSB3b3VsZCBzZWxmbGVzc2x5IHdhbnQgdG8gc2hhcmUgc29tZSBvZiBoaXMgd2lubmluZ3Mgd2l0aCB0aGUgQ2x1YiwgYnV0IHdhbnRlZCB0byBlbnN1cmUgaXQgd2FzIHJlYWxseSBzb21ldGhpbmcgaGUgd2FudGVkIHRvIGRvLiAKSSBzdGFydGVkIGJyaW5naW5nIG15IE5pbnRlbmRvIHN3aXRjaCwgdHJhdmVsIHBpbGxvdywgYW5kIGRvIGFsbCBvZiBteSBody9zdHVkeWluZyB3aGVuIEkgaGFkIGNsYXNzLiAKV2FsbCBTdHJlZXQgaXMgd2hlcmUgcG9rZXIgYW5kIG1vZGVybiBmaW5hbmNlIGFuZCB0aGUgdGhlb3J5IGJlaGluZCB0aGVzZSAiZ2FtZXMiIGNsYXNoIGhlYWQgb24uIEluIGJvdGggd29ybGRzLCByZWFsIHJpc2sgbWVhbnMgcmVhbCBtb25leSBpcyBtYWRlIG9yIGxvc3QgaW4gYSBoZWFydCBiZWF0LCBhbmQgbmVpdGhlciBjYW1wIGlzIGFsd2F5cyByYXRpb25hbCB3aXRoIHRoZSByaXNrIGl0IHRha2VzLiBBcyBhIHJlc3VsdCwgYnVzaW5lc3MgYW5kIGZpbmFuY2lhbCBwcm9mZXNzaW9uYWxzIHdobyB3YW50IHRvIHVzZSBwb2tlciBpbnNpZ2h0cyB0byBpbXByb3ZlIHRoZWlyIGpvYiBwZXJmb3JtYW5jZSB3aWxsIGZpbmQgdGhpcyBlbnRlcnRhaW5pbmcgYm9vayBhICJtdXN0IHJlYWQuIiBTbyB3aWxsIHBva2VyIHBsYXllcnMgc2VhcmNoaW5nIGZvciBhbiBlZGdlIGluIGFwcGx5aW5nIHRoZSBpbnNpZ2h0cyBvZiByaXNrIHRha2VycyBvbiBXYWxsIFN0cmVldC4uIApTZWNvbmQ6ICJzYWNyYW1lbnQgbWVldGluZyBtdXNpYyBkaXJlY3RvciIgaXMgYSBzdHJhbmdlIGNhbGxpbmcuIE5vIG90aGVyIGNodXJjaCAgIHNhdmUgZm9yIHNvbWUgQmFwdGlzdCBjb25ncmVnYXRpb25zICAgaGFzIHNvbWVvbmUgImRpcmVjdGluZyIgdGhlIG11c2ljLiBJbiBjaHVyY2hlcyB3aXRoIHN0cm9uZyBtdXNpYyBwcm9ncmFtcywgdGhlIG9yZ2FuaXN0IGxlYWRzIHRoZSBzaW5naW5nIGZyb20gdGhlIG9yZ2FuIHRocm91Z2ggaGlzL2hlciBwbGF5aW5nLiAKSXQgaXMgcmFyZSB3aGVuIGFsbCBvZiB0aGUgY2xhc3NpYyBzeW1wdG9tcyBvZiBhIHR5cGljYWwgc3luZHJvbWUgYXJlIHByZXNlbnQuIEluIGZhY3QsIGl0IGlzIG1vcmUgY29tbW9uIGZvciBqdXN0IGEgZmV3IHN5bXB0b21zIHRvIG9jY3VyLCBhbmQgdGhlc2Ugb2Z0ZW4gYXJpc2UgZnJvbSB0d28gb3IgdGhyZWUgc2ltdWx0YW5lb3VzIGRpc2Vhc2UgcGF0dGVybnMuIApJIG9ubHkgZXZlciB1c2VkIEdyYWIgZm9yIHJpZGVzLCBidXQgSSBndWVzcyB0aGF0IGl0IG1ha2VzIHNlbnNlIHRoYXQgbm8gb25lIHdvdWxkIHdhbnQgdG8gZ2V0IGZvb2QgZm9yIGEgY3JlZGl0IGNhcmQgcGF5bWVudC4gCkV2ZXJ5Ym9keSBzaG91bGQgZG8gY2FyZGlvLCBub3QganVzdCBwZW9wbGUgbG9va2luZyB0byBsb3NlIHdlaWdodC4gCk5vdCBoYXJkLCBtaW5kIHlvdSwgYnV0IGVub3VnaCB0byBtYWtlIGhlciBwb2ludC4gIkRvIHlvdSBoYXZlIGFueSBpZGVhLCBob3cgbG9uZyB0aGF0IHdlJ3ZlIGJlZW4gc2VhcmNoaW5nIGZvciB5b3UsIHRoYXQgSSd2ZSBiZWVuIGxvb2tpbmcgZm9yIHlvdT8iLiAKQW5kIHRvIG1lLCBpdCBpcyB0aGUgZGVodW1hbml6YXRpb24gYW5kIHRoZSBzaWxlbmNpbmcgb2YgYSBwYXJ0aWN1bGFyIHBhaW4gYW5kIHN1ZmZlcmluZyBvZiBwZW9wbGUsIHNob3VsZCBub3QgYmUgb2sgYW5kIG5vcm1hbC4gCkZvciBhYm91dCB0d28gbW9udGhzIG5vdywgQnJpY2Ugc2FpZCwgaGlzIHJlc3RhdXJhbnRzIGhhdmUgYmVlbiB1c2luZyBTd2VldHdvb2QgZm9yIG9mIG91ciBiZWVmIHByb2R1Y3RzIGJlY2F1c2Ugb2YgaXRzIGVudmlyb25tZW50YWwgc3RhbmRhcmRzIGFuZCBmbGF2b3IuIEhvcGUgdGhlIHdvcmQgZ2V0cyBvdXQgYWJvdXQgYWxsIHRob3NlIHBlb3BsZSwgV29vZCBzYWlkLCBhZGRpbmcgdGhhdCBoaXMgZGlzYWdyZWVtZW50IGxpZXMgd2l0aCB0aGUgZmV3IGxhcmdlIGJlZWYgb3BlcmF0aW9ucyB0aGF0IGRvbWluYXRlIHRoZSBpbmR1c3RyeS4gCkkgcGxheWVkIFdvVzsgbG9nZ2VkIG9uIHRvIHJhaWQgYW5kIGdyaW5kLCBjcnVzaGVkIHdoYXRldmVyIGFuZCBub2RkZWQgdG8gc2xlZXAuIFRoaXMgd2FzIGEgZGVzdHJ1Y3RpdmUgY3ljbGUsIGJ1dCBJIHdhcyBmb3J0dW5hdGUgbm90IHRvIGVuY291bnRlciBkZXBlcnNvbmFsaXphdGlvbiB1bnRpbCBsYXRlciBvbiAocG9zc2libHkgYmVjYXVzZSB0aGlzIHN0aW50IG9ubHkgbGFzdGVkIHRocmVlIG9yIGZvdXIgbW9udGhzLikgR2V0dGluZyBvdXQgbW9yZSBhbmQgaW52b2x2ZWQgaW4gbmljaGUgY29tbXVuaXRpZXMgaGVscGVkLiBGb3IgaW5zdGFuY2UsIEkgc3RhcnRlZCBwbGF5aW5nIGEgbG90IG9mIGJvYXJkIGdhbWVzIHdoaWNoLCBpbiB0dXJuLCBsZWQgdG8gbWUgcGFpbnRpbmcgbWluaWF0dXJlIGZpZ3VyZXMgZm9yIHVzZSBpbiBib2FyZCBnYW1lcyBhbmQgZ2FtZXMgbGlrZSBXYXJoYW1tZXIuIApJIG5ldmVyIGEgZmFuIG9mIHRyYWRpbmcgdXAgd2hlbiB5b3UgaW4gdGhlIHRvcCA4IDEwLiBJdCBqdXN0IGRvZXNuIHNlZW0gd29ydGggdGhlIHJpc2sgdG8gbWUuIEVzcGVjaWFsbHkgY29taW5nIG9mZiBhIDUgMTEgc2Vhc29uIHdoZW4gd2Ugc2hvdWxkIGJlIHVzaW5nIG91ciBwaWNrcyB0byBmaWxsIE8gbGluZSwgZWRnZSwgZXRjLgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uQSBUYXNtYW5pYW4gR3JlZW5zIHRocmVhdCB0byBicmluZyBhIG5vIGNvbmZpZGVuY2UgbW90aW9uIGFnYWluc3QgdGhlIExpYmVyYWxzIGlmIHRoZXkgZG9uIHJldmVhbCBzb3VyY2VzIG9mIHBvbGl0aWNhbCBkb25hdGlvbnMgaGFzIGJlZW4gc3dpZnRseSBicnVzaGVkIG9mZiBieSB0aGUgc3RhdGUgdHdvIG1ham9yIHBhcnRpZXMuIEdyZWVucyBsZWFkZXIgQ2Fzc3kgTyBvbiBNb25kYXkgc2FpZCB0aGUgTGliZXJhbCBwcm8gcG9raWVzIHN0YW5jZSBhbmQgbWFzc2l2ZSBhZHZlcnRpc2luZyBjYW1wYWlnbiBzaG93ZWQgdGhlIHBhcnR5IGhhZCBiZWVuIGJhbmtyb2xsZWQgYnkgdGhlIGdhbWluZyBpbmR1c3RyeS4gCkFuZWNkb3RhbGx5LCBJIGRvIGJlbGlldmUgdGhhdCBzb21ldGltZXMgcGVvcGxlIGNhbiBkaWUgICBJIHdvcmsgaW4gaGVhbHRoY2FyZSBhbmQgaGF2ZSBkZWFsdCB3aXRoIHBhdGllbnRzIHdobyBqdXN0IGdhdmUgdXAuIE9uZSBwYXJ0aWN1bGFyIGNhc2UgdGhhdCBjb21lcyB0byBtaW5kIHdhcyBhIGVsZGVybHkgZ2VudGxlbWFuIHdobyBoYWQgZGVtZW50aWEsIGhpcyB3aWZlIHZpc2l0ZWQgaGltIGV2ZXJ5IGRheSBpbiBob3NwaXRhbCB3aGVuIGhlIHdhcyBhZG1pdHRlZCBmb3IgbWFsbnV0cml0aW9uIChib3RoIG9mIHRoZW0gaGFkIGRlbWVudGlhLCBpdCB0dXJuZWQgb3V0LCBidXQgaGlzIHdpZmUgaGFkbiBiZWVuIHNwb3R0ZWQgYXQgdGhhdCBwb2ludCkuIEhpcyB3aWZlIGZlbGwgb25lIGRheSBvbiB0aGUgd2F5IGhvbWUgYW5kIGJyb2tlIGhlciBoaXAsIHNvIHNoZSBzdG9wcGVkIGNvbWluZyB0byB2aXNpdCBoaW0uIApJbiBhIGJpZCB0byBxdWVsbCBjb25jZXJucywgQ05OIHByZXNpZGVudCBKZWZmIFp1Y2tlciB1cmdlZCBlZGl0b3JpYWwgc3RhZmZlcnMgdG8gZ2l2ZSB0aGUgZm9ybWVyIFNlc3Npb25zIHNwb3ggYW4gb3Bwb3J0dW5pdHkgdG8gcHJvdmUgaGVyc2VsZi4gIkkgZG8gZnVsbHkgdW5kZXJzdGFuZCB0aGUgY29uZnVzaW9uIGFuZCB0aGUgY29udmVyc2F0aW9ucyB0aGF0IGhhdmUgdGFrZW4gcGxhY2UsIGFuZCBJIGRvbid0IHdhbnQgdXMgdG8gZXZlciBzaHkgYXdheSBmcm9tIGJlaW5nIGFibGUgdG8gaGF2ZSB0aGlzIGNvbnZlcnNhdGlvbiwiIFp1Y2tlciBzYWlkLCBiZWZvcmUgYWRkaW5nICJMZXQncyBub3QgcnVzaCB0byBqdWRnZW1lbnQuIApTdHJhcCBpbi4gSXQgb25seSBnZXRzIGNyYXppZXIgZnJvbSBoZXJlLgpRdWVlbiBJSSBhbmQgUXVlZW4gSSBzdGFydCBXZWRuZXNkYXkgSnVuZSA4dGguIEdldCBuYW1jbyBhcmNhZGUgY2hlYXRzIG92ZXIgdG8gdGhlIEZpbGUgYWNjZWxlcmF0b3IsIGFuZCB5b3UgbGwgd29yayBhIEl0YWxpYW4gZG93bmxvYWQgbXVzaWMgU28gb24gdGhlIFlvdVR1YmUgY2xpY2suIFRoZSBjYWxscyB5b3UgYWxpZ24gd2lsbCB3b3JrIG9uIHRoZSBtaWRuaWdodCBjbHViIDIgY2hlYXRzIHBjLiAKVXRhaCdzIHNvbGUgbG9zcyB0byBkYXRlIHdhcyBhIHRocmVlIHBvaW50IGxvc3MgdG8gYSBoaWdobHkgcmFua2VkIFNhbiBEaWVnbyBTdGF0ZSBzcXVhZC4gSXQgd2FzIG9ubHkgdGhlIHNlY29uZCByZWFsIGdhbWUgb2YgdGhlIHNlYXNvbiwgd2l0aCB0d28gb2YgdGhlIFJ1bm5pbicgVXRlcycgc3RhcnRlcnMgYmVpbmcgbmV3Y29tZXJzICAgSkMgdHJhbnNmZXIgQ2hyaXMgUmV5ZXMgKGEgc29waG9tb3JlIHdobyBwbGF5ZWQgYXQgQ2l0cnVzIENvbGxlZ2UgbGFzdCB5ZWFyKSBhbmQgdHJ1ZSBmcmVzaG1hbiBKYWtvYiBQb2VsdGwgKGEgdHJ1ZSBkaWFtb25kIGluIHRoZSByb3VnaCBvdXQgb2YgVmllbm5hLCBBdXN0cmlhKS4gCkFuZCBhcyBhIHJlc3VsdCwgeW91ciBnYW1lIGlzIGRpZmZlcmVudCB0byB0aGUgd2F5IHlvdSB3b3VsZCBwbGF5LCBzYXkgZm9yIGV4YW1wbGUsIGluIGEgY2FzaW5vIGFnYWluc3Qgc3RyYW5nZXJzLiAKTm9ib2R5IHdpbGwgZXZlciBqdWRnZSB5b3UuIElmIHlvdSBkbyBhIGNhcmRpbyBtYWNoaW5lIGF0IHRoZSBsb3dlc3Qgc3BlZWQgZm9yIDUgbWludXRlcywgb3IgaWYgeW91IGdvIGxpZnQgd2VpZ2h0cyBhbmQgbGlmdCBqdXN0IHRoZSBlbXB0eSBiYXIsIG9yIGlmIHlvdXIgaGFpciBpcyBhIG1lc3MsIHlvdSBoYXZlIG5vIG1ha2V1cCwgeW91ciBmYXQgaXMgamlnZ2xpbmcgZXZlcnl3aGVyZSwgeW91IHN3ZWF0IGNvbXBsZXRlbHkgdGhyb3VnaCB5b3VyIHNoaXJ0LCBhbmQgeW91IGxvb2sgbGlrZSB0b3RhbCBzaGl0LCBOT0JPRFkgd2lsbCBqdWRnZSB5b3UuIE5vYm9keSBjYXJlcy4gVGhleSBhcmUgdGhlaXIgZm9yIHRoZW1zZWx2ZXMsIG5vdCBmb3IgeW91LiBNb3N0LCBpZiBub3QgYWxsIG9mIHRoZW0sIHdlcmUgaW4geW91ciBzaXR1YXRpb24gYXQgb25lIHBvaW50LgpQYXJ0aWN1bGFybHkgYXQgdGhlIGxvd2VyIGxpbWl0cyB3aGVyZSB0aGUgbWFqb3JpdHkgb2YgcGxheWVycyBzZWUgdGhlIGZsb3AsIHlvdSB3aWxsIG9mdGVuIGhhdmUgdG8gc3RhcnQgd2l0aCB0aGUgYmVzdCBwb3NzaWJsZSBoYW5kIHRvIHdpbiBlaXRoZXIgdGhlIGhpZ2ggb3IgdGhlIGxvdyBoYWxmIG9mIHRoZSBwb3QuIApXaGVuIEdDSk4gaXMgYSBraWQsIGFsbCB0aGUgb3RoZXIgc2libGluZ3MgYXJlIHRvdGFsbHkgaWdub3JlZCwgb3IgZXZlbiBwdW5pc2hlZCBmb3IgYmVoYXZpbmcgd2VsbCBhbmQgZG9pbmcgd2VsbCBpbiBzY2hvb2wgb3Igc3BvcnRzIGNhbid0IHRoZXkgc2VlIGhvdyBiYWQgdGhlaXIgc3VjY2VzcyBtYWtlcyBwb29yLCBsYXp5IEdDSk4gZmVlbCB3aGVuIGhpcyBzaWJsaW5ncyBhcmUgZG9pbmcgd2VsbD8/IEFzIEdDSk4gZ3Jvd3MgdXAsIGFsbCBvZiB0aGUgZmFtaWx5IHJlc291cmNlcyBhcmUgZ2l2ZW4gdG8gaGltLiBDb2xsZWdlIGZ1bmRzIGZyb20gd2VsbCBtZWFuaW5nIGdyYW5kcGFyZW50cz8gUG9vZiEhIEdDSk4gbmVlZHMgeWV0IGFub3RoZXIgbmV3IGNhci9oYXMgYSBzdWJzdGFuY2UgYWJ1c2UgaGFiaXQvd2FudHMgZXhwZW5zaXZlIG1hbiB0b3lzIGJ1dCAiZG9lc24ndCIgd29yay9uZWVkcyB0byBidXkgaGlzIHdheSBvdXQgb2YgYW55IG51bWJlciBvZiBKTiBidWxsc2hpdCBzaXR1YXRpb25zL2hhcyBiYWlsL2NvdXJ0IGZlZXMvcHJpc29uIGNvc3RzIHRoYXQgYXJlIEFMTCBzb29vb28gbXVjaCBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBlZHVjYXRpb25hbCBuZWVkcyBvZiBoaXMgc2libGluZ3MuIApPaCB0aGlzIHJlbWluZGVkIG1lIG9mIHNvbWV0aGluZyB0aGF0IGhhcHBlbmVkIGEgZmV3IHdlZWtzIGFnby4gV2Ugd2VyZW4gaGF2aW5nIHNleCwgYnV0IEkgd2FzIGxheWluZyBpbiBiZWQgYW5kIG15IFNPIGhvcHBlZCBvbiB0b3Agb2YgbWUgdG8gc251Z2dsZSBhbmQga2lzcywgYW5kIGFzIGhlIGxlYW5lZCB1cCBhbmQgYXdheSBmcm9tIG1lLCBJIGZlbHQgc29tZXRoaW5nIHdldCBzdGFydCByYXBpZGx5IGRyaXBwaW5nIG9udG8gbXkgZmFjZS4uIApPaCwgTmVpbiwgZGFjaHRlIEhlbGVuLCBhYmVyIHNpZSB3b2xsdGUgamV0enQgZGFyYmVyIGhpbndlZyBrb21tZW4gdW5kIGFudHdvcnRldGUgcmFzY2g6ICJEcmVpIE1hbCIuIApUdXJuIDNoLiBDaGVja3MgdG8gbWUsIEkgcG90IGZvciAkMjUuIFVURyBhbmQgQ08gY2FsbC4KMjYvTSwgYmxhY2sgZnJvbSBTb3V0aCBBdGxhbnRhIHlldCwgbmV2ZXIgZXZlciBzdHJ1Z2dsZWQgdG8gcGF5IHByaXZhdGUgaGVhbHRoIGluc3VyYW5jZSwgbmV2ZXIgc3RydWdnbGVkIHRvIG1ha2UgYW4gaW5jb21lLiBJZiB5b3Ugd2FudCBiZW5lZml0cyBpbiBsaWZlLCBmdWNraW5nIGVhcm4gdGhlbSwgeW91IENvbW1pZSBmdWNrcy4KSWNoIGhhYiBkYW5uIGRpY2tlIFdhcm51bmdlbiByZWluZ2VtYWNodCAia2VpbiBzZXgiIG1pdCBQYXJhZ3JhZmVuIHVuZCBzby5EYXJhdWZoaW4ga2FtZW4gbm9jaCBtZWhyIHNvbGNoZSBBbmZyYWdlbiwgd2VpbCBkYXMgV29ydCAiU2V4IiBhdWYgZGVyIEhvbWVwYWdlIHdhci4gClRoZSBkaWZmZXJlbmNlIGlzIHRoYXQgbGltaXQgcGxheWVycyBhdm9pZCBzcXVhbmRlcmluZyB0aGVpciBzdGFjayBiaXQgYnkgYml0IHdoaWxlIG5vIGxpbWl0IHBsYXllcnMgYXZvaWRzIGxvc2luZyBoaXMgd2hvbGUgc3RhY2sgaW4ganVzdCBvbmUgaGFuZC4gQSBkaXNjaXBsaW5lZCBubyBsaW1pdCBwbGF5ZXIgY2FuIHBsYXkgYSBsb3Qgb2YgaGFuZHMuIEV2ZW4gaWYgaGUgb3Igc2hlIGhhcyBjYXJkcyBzdWNoIGFzIDUgc3BhZGVzIGFuZCAzIGRpYW1vbmRzIGhlIG9yIHNoZSB3aWxsIHN0aWxsIGJlIGxvb3NlIHByZWZsb3AuIApKZWVwZXJzMjIyICAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCk1ycy4gQ2hhcmxlcyBIYXJkbWFuIHNwZW50IFN0bSAgZGF2IGFmdGVybm9vbiB3aXRoIE1ycy4gQW5kIE1ycy4gCjMwIHNlZW1zIHRvIGhhdmUgYmVlbiBtb2RpZmllZCB0byByZWFkICJKdW4uIFNlbGxlciBzdGF0ZXMgbWFjaGluZSBpcyBmcm9tIDg1IHllYXIgZXN0YXRlIGFuZCBtYWNoaW5lIHdhcyBmb3VuZCB3aXRoIEJhYnNvbiBCcm9zIEhvcm4uIApIYXZpbmcgaXQgcmVzZXQgdGhlIGNvb2xkb3duIG9uIHdyYWl0aCB3b3VsZCBwcmV2ZW50IHBlb3BsZSBmcm9tIGRyb3BwaW5nIGJlaGluZCBhIHRlYW0sIGdhbmtpbmcgYSBzdXBwb3J0LCBhbmQgd3JhaXRoaW5nIGJhY2sgdG8gd2FpdCBmb3IgdGhlIENEIHRvIGZpbmlzaCB0byBkbyBpdCBhZ2Fpbi4uIApPdXIgbWluZHMgaW1tZWRpYXRlbHkganVtcGVkIHRvIHRoZSBleGNpdGluZyBwb3NzaWJpbGl0eSBvZiBhIGZsYXNoIGZsb29kIHJhZ2luZyB0aHJvdWdoIHRoZSBjcmV2YXNzZXMgd2Ugd2VyZSBleHBsb3JpbmcuIApUb29uY2VzVGhlVHlwaW5nQ2F0ICAzMiw4MjEgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkZvciBpbnN0YW5jZSwgd2hlbiB5b3UgYXJlIGluIGEgc3RyZXNzZnVsIHNpdHVhdGlvbiAgIG9yIGV2ZW4gd2hlbiB5b3UgYXJlIGp1c3QgdGhpbmtpbmcgYWJvdXQgb25lICAgeW91ciBoZWFydCByYXRlIHRlbmRzIHRvIHNwZWVkIHVwLCB5b3VyIGJyZWF0aGluZyBxdWlja2VucywgeW91ciBibG9vZCBwcmVzc3VyZSBpbmNyZWFzZXMsIGFuZCB5b3VyIG11c2NsZXMgdGVuc2UgdXAuIENvbnZlcnNlbHksIGJ5IHNoaWZ0aW5nIHlvdXIgdGhvdWdodHMgdG8gY2FsbWluZyBzY2VuZXMgb3Igc2l0dWF0aW9ucyBvciBieSBjb25zY2lvdXNseSB0YWtpbmcgc2xvdywgZGVlcCBicmVhdGhzLCB5b3UgY2FuIHNsb3cgeW91ciBoZWFydCByYXRlLCBsb3dlciB5b3VyIGJsb29kIHByZXNzdXJlLCBhbmQgZWFzZSBtdXNjbGUgdGVuc2lvbi4gVGhlIGJpb2ZlZWRiYWNrIG1hY2hpbmUgbWFrZXMgdGhlc2UgcmVhY3Rpb25zIGVhc2llciB0byByZWNvZ25pemUuIApBbnl0aGluZyBiZWxvdyAwPyBTbyBjb2xkIHRoYXQgYmFkIHNoaXQgc3RhcnRzIGhhcHBlbmluZy4gCllvdSB3YW5uYSB0YWtlIDMgd2Vla3Mgb2ZmIHRvIGdvIG9uIHZhY2F0aW9uPyBGaW5lLiAKSnVzdCBiZWNhdXNlIGl0cyBvbiBIQk8gZG9lc24gbWVhbiB0aGUgZmlsbSBpcyBnZW5lcmF0aW5nIGEgdG9uIG9mIHJldmVudWUsIGl0IGp1c3QgbWVhbnMgdGhlIGZpbG0gaGFzIGJlZW4gYm91Z2h0IGJ5IEhCTyBmb3IgZGlzdHJpYnV0aW9uLiBEZXRhaWxzIGFib3V0IHRoZSBidWRnZXQgYXJlbiBvbmxpbmUgYnV0IEkgYW0gc3VyZSBIQk8gcGFpZCBlbm91Z2ggZm9yIHRoZSBmaWxtIHNvIHRoYXQgZXZlcnlvbmUgd2hvIHdvcmtlZCBvbiBzZXQgYW5kIGluIHBvc3QgY291bGQgZ2V0IHBhaWQgYSBmaXhlZCB3YWdlLCBhc3N1bWUgaXQgYSB1bmlvbiBhdmVyYWdlIHJhdGUuIEEgbG90IG9mIHRoYXQgcHVyY2hhc2UgcHJvYmFibHkgY292ZXJlZCBwcm9kdWN0aW9uIGxvc3NlcyAocmVudGluZyBlcXVpcG1lbnQsIHN0dWRpbyBzaG9vdCwgYW55IHRyYXZlbCByZWltYnVyc2VtZW50LCBsaWNlbnNlcyBmb3IgYXJjaGl2YWwgZm9vdGFnZSBhbmQgbXVzaWMgZXRjLikgSW4gZG9jIHdvcmsgc29tZSBvZiB0aGF0IG1vbmV5IGNvdWxkIGdvIHRvIHRoZSBzdWJqZWN0cyBidXQgaXQgaXMgcmFyZWx5IHN1YnN0YW50aWFsIGFuZCBpdCBzb3VuZHMgbGlrZSBib3RoIG9mIHRoZSBkb2NzIHN1YmplY3RzIGhhdmUgb3B0ZWQgb3V0IHNvIHRoYXRzIG5vdCB0aGUgY2FzZSBoZXJlLiAKUk1UJ3MgaGF2ZSBjb21wbGV0ZWQgYSAyIDMgeWVhciBwcm9ncmFtIGF0IGEgcmVjb2duaXplZCBzY2hvb2wgb2YgbWFzc2FnZSB0aGVyYXB5O1JNVCdzIGhhdmUgcGFzc2VkIGFuIGVudHJ5IHRvIHByYWN0aWNlIGV4YW1pbmF0aW9uIHRoYXQgZW5zdXJlcyB0aGV5IGhhdmUgdGhlIGNvbXBldGVuY2llcyBuZWNlc3NhcnkgdG8gc2FmZWx5IGFuZCBlZmZlY3RpdmVseSBvZmZlciBtYXNzYWdlIHRoZXJhcHkgc2VydmljZXM7Uk1UJ3MgbXVzdCBwYXJ0aWNpcGF0ZSBpbiBhIFF1YWxpdHkgQXNzdXJhbmNlIHByb2dyYW0gd2l0aCB0aGUgQ29sbGVnZSBvZiBNYXNzYWdlIFRoZXJhcGlzdHMgb2YgT250YXJpbywgYSBwcm9ncmFtIHRoYXQgYXNzaXN0IGluIHRoZSBtYWludGVuYW5jZSBvZiBwcm9mZXNzaW9uYWwgc3RhbmRhcmRzIGFuZCBxdWFsaXR5IGNhcmU7Uk1UJ3MgYXJlIGFjY291bnRhYmxlIHRvIHRoZSBDb2xsZWdlIG9mIE1hc3NhZ2UgVGhlcmFwaXN0cyBvZiBPbnRhcmlvLCB0aHJvdWdoIHRoZSBjb21wbGFpbnRzIGFuZCBkaXNjaXBsaW5lIHByb2Nlc3NlcywgaW4gdGhlIGV2ZW50IHRoYXQgdGhlIHNlcnZpY2VzIHRoZXkgcHJvdmlkZSB0byBub3QgbWVldCB0aGUgc3RhbmRhcmRzIG9mIHByYWN0aWNlO1JNVCdzIHByb3ZpZGUgYSByZWNlaXB0IHRoYXQgd2lsbCBiZSBhY2NlcHRlZCBieSB5b3VyIGV4dGVuZGVkIGhlYWx0aCBiZW5lZml0cyBwbGFuIGZvciByZWltYnVyc2VtZW50IChwcm92aWRlZCB5b3UgcGxhbiBjb3ZlcnMgbWFzc2FnZSB0aGVyYXB5KS4KV2l0aCBwbGF5aW5nIG9ubGluZSBob3dldmVyIHlvdSBjYW4gdXNlIG9uZSBvZiB0aGUgbWFueSBQb2tlciBDYWxjdWxhdG9yIFRvb2xzIGF2YWlsYWJsZSBvbmxpbmUsIHN1Y2ggYXMgVGV4YXMgQ2FsY3VsYXRlbS4gCkhlIGhhZCB0byBtb3ZlIGJhY2sgaW4gd2l0aCBoaXMgcGFyZW50cyB0byBoZWxwIHBheSBpdCBvZmYuIEhlIG5ldmVyIHdvdWxkIGxldCBtZSBkcml2ZSBkb3duIHRvIHNlZSBoaW0gYmVjYXVzZSBoZSB3YXMgYWZyYWlkIGhpcyBwYXJlbnRzIHdvdWxkIGZpbmQgb3V0IGFib3V0IG1lLi4gCklmIHlvdSBzdG9wIHVzaW5nIHRoZSBkcnVnLCB0aGUgaGFpciB3aWxsIGZhbGwgb3V0LiAKVGhlIGFib3ZlIGRlYWxzIGFwcGx5IHdoZW4gb3JkZXJpbmcgdGhlIENocmlzdG1hcyBQYXJ0eSBtZW51IG9ubHkuVW5pdmVyc2l0eSBsaWJyYXJ5IGNhcmRTZWFzb25lZCBDb29rZXJ5IFNjaG9vbENvb2tlcnkgc2Nob29sIGJhc2VkIGluIHRoZSBiZWF1dGlmdWwgRGVyYnlzaGlyZSBjb3VudHJ5c2lkZS4gCkJ1dCB1bmxlc3MgdGhleSBnaWdhbnRpYyB0b3VyaXN0IGRyYXdzIGNhc2lub3Mgc3VjayBtb25leSBvdXQgb2YgbG9jYWwgZWNvbm9taWVzICh0aGUgY2l0eSBzdHVtYmxlYnVtIGVjb25vbWljIGRldmVsb3BtZW50IGRlcGFydG1lbnQgZGlkIG5vdCBzdHVkeSB0aGUgaW1wYWN0IG9mIGEgY2FzaW5vIGhlcmUgYXQgdGhlIHRpbWUpLCB0aGV5IGRlc3Ryb3kgcGVvcGxlIHByb25lIHRvIGFkZGljdGlvbiwgYW5kIHRoZXkgdGVuZCB0byBiZSBmb3J0cmVzc2VzIHJhdGhlciB0aGFuIGV4Y2l0aW5nIGRldmVsb3BtZW50cyB0aGF0IGJyaW5nIGxpZmUgdG8gdGhlIGJsb2NrcyBhcm91bmQgdGhlbS4gCk9rIEkgbG9va2VkIHRoZXNlIGd1eXMgdXAgYmVjYXVzZSBJIG5ldmVyIGhlYXJkIG9mIHRoZW0gYmVmb3JlIChJIGluIHRoZSBVSywgTW9ybW9uaXNtIGlzbiBzdWNoIGEgYmlnIHRoaW5nIGhlcmUpLiAKQWZ0ZXIgc2VsZWN0aW5nIGFsbCB0aGUgb3B0aW9ucyB5b3Ugd2FudCBmb3IgdGhlIHRhYmxlIHRoZW4gdGhlIGdhbWUgd2lsbCBiZWdpbiBieSBnaXZpbmcgeW91IHRlbiBtaW51dGVzIHRvIGhhdmUgYWxsIHBsYXllcnMgc2VhdGVkIGF0IHRoZSB2aXJ0dWFsIHRhYmxlIHlvdSBoYXZlIHNldCB1cC4gWW91IGNhbiB0aW5rZXIgYXJvdW5kIHRoZSBzaXRlIHlvdSBoYXZlIGNob3NlbiBvbiBob3cgaXQgd29ya3MgZmlyc3QuIApXb21lbjogOTsgNC42ICUgKG9ubHkgRVU6IDM7IDQuNyAlKQpTb21ldGltZXMgdGhleSBhcmUgcmlnaHQgdXAgdGhlIHJlaW5zIGFzcyBhbmQgc29tZWhvdyBzdGlsbCBmYWlsIHRvIGZvY3VzIG9uIHNvbWV0aGluZyBpbmZyb250IG9mIHRoZSByZWluLiBTb21ldGltZXMgdGhleSB3aWxsIGp1c3Qgd2FsayBpbmZyb250IG9mIHlvdXIgc2hpZWxkIGFuZCBpbnN0YW50bHkgZGllLiBTb21ldGltZXMgeW91ciBkcHMganVzdCBzdHJhaWdodCB1cCByZWZ1c2UgdG8gY29tbXVuaWNhdGUgb3IgZXZlbiBhdHRlbXB0IHRvIGdyb3VwIHVwLCBpbnNpc3RpbmcgdGhleSBNTEcgMXY2IHNvbG8gaXMgZ29ubmEgZ2V0IHBvdGcgYW5kIGdldCBwdXQgaW4gdGhlaXIgeW91dHViZSBtb250YWdlLiAKVGhlIG1vdmUgaGFzIGRlbmllZCB0aGUgSG9wcGVycyBhIHBvdGVudGlhbCBmaW5hbmNpYWwgd2luZGZhbGwsIGJ1dCB0aGVyZSB3YXMgbm8gZ3VhcmFudGVlIGFueSBvZiB0aGUgcHJvY2VlZHMgZnJvbSB0aGUgZGF5IHdvdWxkIGVuZCB1cCB3aXRoIHRoZSBmb290YmFsbCBuZXRiYWxsIGNsdWIuIEFzIGFuIGFmZmlsaWF0ZSBvZiB0aGUgc3BvcnRzIGNsdWIsIGl0IGlzIGFsc28gaW4gYWRtaW5pc3RyYXRpb24gYW5kIGl0cyBiYW5rIGFjY291bnRzIGFyZSBmcm96ZW4uICJJdCB3YXNuJ3Qgc29tZXRoaW5nIHdlIG5lZWRlZCB0byBiZSBleHBlbmRpbmcgcmVzb3VyY2VzIG9uIGF0IHRoaXMgc3RhZ2UsIiBNciBDaGFtYmVybGFpbiBzYWlkLiAKVGhlIHByb2plY3QgdGl0bGVkLCBDb21tdW5pdHkgQ29sbGFib3JhdGl2ZSBmb3IgUHJldmVudGluZyBhbmQgVHJlYXRpbmcgT2Jlc2l0eSBpbiBVbmRlcnNlcnZlZCBDb21tdW5pdGllcyBJbiBIb3VzdG9uIChUT1VDSCksIHdpbGwgZm9jdXMgb24gdGhlIFRoaXJkIFdhcmQgaW4geWVhcnMgb25lIGFuZCB0d28gYW5kIGV4cGFuZCB0byB0aGUgRWFzdCBFbmQgaW4geWVhciB0aHJlZS4uIApBLiBUaGUgdGVybWluYWwgcGFydCBvZiB0aGUgaHVtYW4gYXJtIGxvY2F0ZWQgYmVsb3cgdGhlIGZvcmVhcm0sIHVzZWQgZm9yIGdyYXNwaW5nIGFuZCBob2xkaW5nIGFuZCBjb25zaXN0aW5nIG9mIHRoZSB3cmlzdCwgcGFsbSwgZm91ciBmaW5nZXJzLCBhbmQgYW4gb3Bwb3NhYmxlIHRodW1iLgpZZWEsIEkgY2FuIHJlbGF0ZS4gU2hvcnRseSBhZnRlciBJIHN0YXJ0ZWQsIEkgZGlzY292ZXJlZCB0aGF0IHRoZXJlIHdlcmUgdGFza3MgaW52b2x2ZWQgdGhhdCBJIHJlYWxseSBkaWRuJ3QgY2FyZSB0byBkby4gSSBndWVzcyBpdCdzIHRoZSBzYW1lIGZvciBldmVyeXRoaW5nIGV4Y2VwdCB1dG9waWEuIEFsbCB3b3JrIGlzIGEgcHJvY2Vzcy4KVGhlIHdpbm5pbmcgY29udGVzdGFudCB3YXMgTXIuIApCdXQgdGhlcmUgaXMgc3RyYXRlZ3kgaW52b2x2ZWQsIHRvbywgYW5kIERob25pIGdyYXNwIG92ZXIgYSBvbmUgZGF5IGdhbWUgaXMgY2xlYXJseSBvbiBtdWNoIGZpcm1lciBncm91bmQgdGhhbiBoaXMgVGVzdCBiYXR0aW5nIGFuZCBjYXB0YWluY3kuIApUaGVyZSBhcmUgYSBudW1iZXIgb2YgZmFjdG9ycyB5b3UgaGF2ZSB0byBjb25zaWRlciB3aGVuIGNob29zaW5nIGEgcG9rZXIgcm9vbS4gVGhlIGZhY3RvcnMgaW5jbHVkZSBzb2Z0d2FyZSB1c2VkIGJ5IHRoZSBwb2tlciBzaXRlLCB0aGUgYm9udXMgb3IgYm9udXNlcyBvZmZlcmVkLCBudW1iZXIgb2YgcGVvcGxlIHBsYXlpbmcgb24gdGhlIHNpdGUgYW5kIHJlcHV0YXRpb24uIExldCB1cyBoZWxwIHlvdSB3aXRoIG91ciBvbmxpbmUgcG9rZXIgcm9vbSByZXZpZXdzIGd1aWRlbGluZSBvbiBob3cgdG8gY2hvb3NlIHRoZSBiZXN0IHBvc3NpYmxlIHNpdGUgZm9yIHlvdS4uIAo1MC81MCBpcyBpbiBubyB3YXkgc3RhbmRhcmQgd2l0aG91dCBtYWtlIHVwIHRvIHBheSBiYWNrIHRoby4gCkl0J3MgYSBwZXJzb25hbCBjaG9pY2UuIApJbCBuZSBmYXV0IHBhcyBoc2l0ZXIgIHJhcHBlbGVyIGF1eCBtZGVjaW5zIHF1ZSBsZXVyIGZvcm1hdGlvbiwgYXUgbW9pbnMgZGFucyBsZSBkb21haW5lIGNvbnNpZHIgZXN0IGVuIGZhaXQgdW5lIERFRk9STUFUSU9OICFKZSBub3RlIHBvdXIgbWEgcGFydCBxdWUgZGFucyB1bmUgcmdpb24gbyBsYSBmYWluYW50aXNlLCBsJ2lycmVzcG9uc2FiaWxpdCwgbCdhcnJvZ2FuY2UgZXQgc3VydG91dCBsJ2luY29tcHRlbmNlIGQndW5lIG1ham9yaXQgZGUgY2l0b3llbnMgZXN0IGNhdXNlIGRlIHByb2JsbWVzIHJjdXJyZW50cywgbGEgQ05WIGVzdCAgcHJvc2NyaXJlIGRhbnMgbGEgbWVzdXJlIG8gbGVzIHRlbnRhdGl2ZXMgZCdpbnRpbWlkYXRpb24gb250IHQgbGV2IGF1IHJhbmcgZCd1biBhcnQgbWFqZXVyICEgT24gYWltZXJhaXQgYmllbiBwb3V2b2lyIHNlIGR0ZW5kcmUgYXUgbGlldSBkZSBzZSBjdWlyYXNzZXIgbWFpcyBpbCBuZSBmYXV0IHBhcyBydmVyICEgTGEgQ05WIHMnaW5zY3JpdCBkYW5zIGxlIHNpbGxhZ2UgZGUgY2V0dGUgZmF1c3NlIHNwaXJpdHVhbGl0IGxhcXVlIHF1aSBkb21pbmUgbGEgc29jaXQgYWN0dWVsbGUuSmUgcHJmcmUgbGEgImNvbW11bmljYXRpb24gdmlvbGVudGUiIDogZWxsZSBhIGwnYXZhbnRhZ2UgZCdvYmxpZ2VyIGxlcyBnZW5zIHRyb3AgcHVzaWxsYW5pbWVzIGV0IGNldXggcXVpIHNvbnQgaW5mZWN0cyBwYXIgbGUgY2xpbWF0IGRlIHRyb21wZXJpZSBhbWJpYW50ZSAgYWxsZXIgc2UgZmFpcmUgdm9pciBhaWxsZXVycy4gClRvIGdpdmUgdGhlIGxhdyB0ZWV0aCwgdGhlIHBlbmFsdHkgZm9yIGNvbW11bmljYXRpbmcgd2l0aCBub24gY29uc3RpdHVlbnRzIChiZXlvbmQgdmVyaWZ5aW5nIGlmIHRoZXkncmUgeW91ciBjb25zdGl0dWVudHMpIHNob3VsZCBiZSBkZWF0aCwgd2l0aCB0aGUgdHJpYWwgcmVxdWlyaW5nIG9ubHkgMiBvZiAxMiBKdXJvcnMgdG8gdm90ZSBndWlsdHkgdG8gc2VjdXJlIGEgY29udmljdGlvbi4gU3VjaCBhIGxvdyB0aHJlc2hvbGQgd291bGQgc2VydmUgYXMgZWZmZWN0aXZlIGNoZWNrIG9uIGVsZWN0ZWQgb2ZmaWNpYWxzIHRyeWluZyB0byBnZXQgY3JlYXRpdmUgYW5kIGZpbmQgd2F5cyBhcm91bmQgdGhlIGxhdy4uIApUaG91Z2gsICQzMCBmcm9tIEFtYXpvbiB0aGUgbGFzdCB0aW1lIGl0IGhpdCB0aGlzIGxvdyB2cyAkNjArIGZvciB0aGUgZGlnaXRhbCBkZWx1eGUgd2l0aCBhbGwgdW5sb2NrcyBhdCBsZWFzdCBsZXRzIGl0IGZlZWwgbGlrZSBJIGdvdCBteSBtb25leSB3b3J0aC4uIApUaGUgZ2FtZSBtYWtlcyB1c2Ugb2YgYSBwaXF1ZXQgZGVjaywgYSAzMiBjYXJkcyBkZWNrIG9mIGNhcmRzIGNvbnNpc3Rpbmcgb2YgYSBzZXZlbiwgZWlnaHQsIG5pbmUsIHRlbiwgamFjaywgcXVlZW4sIGtpbmcgYW5kIGFjZSBpbiBmb3VyIHN1aXRzIGVhY2guIEtsYXZlcmphc3NlbiBtYWtlcyB1c2Ugb2YgaXRzIG93biBjYXJkIHZhbHVlIHN5c3RlbSwgbWVhbmluZyBpdCBkb2Vzbid0IGZvbGxvdyB0aGUgdHJhZGl0aW9uYWwgZmFjZSB2YWx1ZSBvZiB0aGUgY2FyZHMgd29yZCBmb3Igd29yZC4gR2V0dGluZyB1c2VkIHRvIHRoZSB2YWx1ZSBvZiB0aGUgY2FyZHMgcmVxdWlyZXMgc29tZSBsZXZlbCBvZiBmYW1pbGlhcml6YXRpb24gd2l0aCB0aGUgZ2FtZSB0byBidXQgYWZ0ZXIgYSBmZXcgZnVuIHJvdW5kcyB0aGV5J2xsIGNvbWUgaW4gbmF0dXJhbGx5Li4gCllvdSBhZ3JlZSBub3QgdG8gY2lyY3VtdmVudCwgZGlzYWJsZSBvciBvdGhlcndpc2UgaW50ZXJmZXJlIHdpdGggc2VjdXJpdHkgcmVsYXRlZCBmZWF0dXJlcyBvZiB0aGUgV2Vic2l0ZXMgb3IgZmVhdHVyZXMgdGhhdCBwcmV2ZW50IG9yIHJlc3RyaWN0IHVzZSBvciBjb3B5aW5nIG9mIGFueSBDb250ZW50IG9yIGVuZm9yY2UgbGltaXRhdGlvbnMgb24gdXNlIG9mIHRoZSBXZWJzaXRlcyBvciBTZXJ2aWNlcyBvciB0aGUgQ29udGVudCB0aGVyZWluLiAKSGUgb3BlbmVkIHVwIGhpcyBoaXBzLCBnZW5lcmF0ZWQgcG93ZXIgd2l0aCBoaXMgYm90dG9tIGhhbmQsIGFuZCBuYWlsZWQgaXQgb3ZlciB0aGUgc2lnaHRzY3JlZW4uIApWb2ljaSBwb3VyIHZvdXMgZG9ubmVyIHVuIGV4ZW1wbGUgY2UgcXVlIGwnb24gcG91dmFpdCB5IGxpcmUgbGUgMTIgc2VwdGVtYnJlIGRlcm5pZXIgZGFucyB1biBQUEZsYXNoIDouIApTaGUgaW5mb3JtZWQgbWUgdGhleSByZWNlaXZlZCBhbm90aGVyIGVtYWlsIGNvbXBsYWludCBhYm91dCB0aGUgc2FtZSB0aGVyYXBpc3QgdmVyeSBzaW1pbGFyIHN0b3J5IHRvIG1pbmUuIFRhbGsgdG8gdGhlIG1hbmFnZXIgYW5kIGZpbGUgYSBjb21wbGFpbnQgYWdhaW5zdCBoZXIgbGljZW5zZSB3aXRoIHRoZSBNYXNzYWdlIFRoZXJhcHkgQm9hcmQgZm9yIHRoZSBzdGF0ZS4gClRoZSBzaW5nbGUgbGFyZ2VzdCBwYXJ0IG9mIHRoZSBSZWNvdmVyeSBBY3QgICBtb3JlIHRoYW4gb25lIHRoaXJkIG9mIGl0ICAgaXMgdGF4IGN1dHM6IDk1IHBlcmNlbnQgb2Ygd29ya2luZyBBbWVyaWNhbnMgaGF2ZSBzZWVuIHRoZWlyIHRheGVzIGdvIGRvd24gYXMgYSByZXN1bHQgb2YgdGhlIGFjdC4gVGhlIHNlY29uZCBsYXJnZXN0IHBhcnQgICBqdXN0IHVuZGVyIGEgdGhpcmQgICBpcyBkaXJlY3QgcmVsaWVmIHRvIHN0YXRlIGdvdmVybm1lbnRzIGFuZCBpbmRpdmlkdWFscy4gVGhlIG1vbmV5IGlzIGFsbG93aW5nIHN0YXRlIGdvdmVybm1lbnRzIHRvIGF2b2lkIGxheWluZyBvZmYgdGVhY2hlcnMgKDE0LDAwMCBpbiBOZXcgWW9yayBDaXR5IGFsb25lKSwgZmlyZWZpZ2h0ZXJzIGFuZCBwb2xpY2Ugb2ZmaWNlcnMgYW5kIHByZXZlbnRpbmcgc3RhdGVzJyBidWRnZXQgZ2FwcyBmcm9tIGdyb3dpbmcgd2lkZXIuClBsZWFzZSBzZWUgb3VyIHBhcnRuZXJzIGZvciBtb3JlIGRldGFpbHMuWmVuV2UgYXJlIGEgbHV4dXJ5IFBodWtldCBwcml2YXRlIGJlYWNoIHJlc29ydC4gCkl0IGlzbiBldmVuIGFib3V0ICJmaW5kaW5nIHRoZSBiZXN0IGFjdG9yLiIgVGhlaXIgdmFsdWVzIGFyZSBhcHBsaWVkIHNlbGVjdGl2ZWx5IHNvIGxvbmcgYXMgaXQgc3VwcG9ydHMgdGhlaXIgYmlhc2VzLiAKRm9yY2VkIHBhdHJpb3Rpc20gZG9lc24gd29yay4gSW4gb3JkZXIgZm9yIENDUCB0byBjcmVhdGUgdGhlaXIgc3RhdHVzIHF1byB0aGV5IGhhZCB0byBtdXJkZXIgbWlsbGlvbnMgb2YgcGVvcGxlIGFuZCB0cmFuc2ZlciBhbGwgZm9ybXMgb2Ygd2VhbHRoIGF3YXkgZnJvbSBwZW9wbGUgdG8gdGhlbXNlbHZlcy4gU2luY2UgdGhlIHBlb3BsZSBoYXZlIG5vIG1lYW5zIG9mIGZpZ2h0aW5nIGFuZCB0aGUgcHJvc3BlY3Qgb2YgYW55IHJlc2lzdGFuY2UgcmVzdWx0cyBpbiAicmUgZWR1Y2F0aW9uIiBvciBiZWluZyBtdXJkZXJlZCB0aGUgb2J2aW91cyBjaG9pY2UgaXMgdG8gZG8gbm90aGluZyAgIHdoaWNoIGRlc2NyaWJlcyB0aGUgbWVudGFsaXR5IGluIENoaW5hIGFuZCBwcm9iYWJseSBleHBsYWlucyB3aHkgbm9ib2R5IGdpdmVzIGEgZnVjayBhYm91dCBhbnl0aGluZyBvdGhlciB0aGFuIHRoZW1zZWx2ZXMuIApQb3N0aW5nIHNvbWUgdGhpbmcgaW4gdGhlIE15c3BhY2UgTWFya2V0cGxhY2UgbWVhbnMgeW91ciBvcHBvcnR1bml0eSB3aWxsIHNob3cgdGhyb3VnaCB0byBodW5kcmVkcyBvZiBtZWRpYSBhbmQgcG9zdGluZyBzaXRlcy4gCklkaywgeW91ciBwb3N0IGp1c3QgbWFkZSBtZSB0aGluayBvZiBpdCBhbmQgSSBuZWVkZWQgdG8gdmVudC4uIApBIHNpeHRoIGNhcmQgaXMgbmV2ZXIgdXNlZCB0byBicmVhayBhIHRpZS4gCkMndGFpdCBsJ2VtcHJlaW50ZSBkZSBsJ3BpZ250aXF1ZSwgYydlc3QgIGRpcmUgbCdlZmZldCBkZSBsJ2Vudmlyb25uZW1lbnQgc3VyIGxhIG1hbmlyZSBkb250IG5vcyBnbmVzICBzJ2V4cHJpbWVudCAuLiAKVGhleSBrbm93IHRoYXQgd2UgYXJlIGhlcmUgdG8gc3RheSBhbmQgZGVjaWRlZCB0byBqb2luIHRoZSBwYXJ0eSBhbmQgY3JlYXRlIGFub3RoZXIgImNvbXBldGl0aXZlIiBzcG9ydCBoaWphYiBpbiB0aGUgbWFya2V0LCB3aGljaCBieSB0aGUgd2F5LCBkaWQgZXhpc3QgaW4gdGhlIG1hcmtldCBmb3IgZmV3IHllYXJzIG5vdy4uIApZb3UgZGlkbiBtZW50aW9uIHlvdXIgaG91cnMgb3IgeW91ciBwYXksIGJ1dCBpZiB5b3UgYmFua2luZyAkMTNrIHBlciB5ZWFyLCBJIGdvaW5nIHRvIGFzc3VtZSB0aGF0IHlvdSB3b3JraW5nIGZ1bGwgdGltZSwgb3IgY2xvc2UgdG8gaXQuIApUb3RhbCByZWFsIGdhbWJsaW5nIGxvc3NlcyBpbiAyMDExIDEyIHByaWNlcyB3YXMgJDMxMCBtaWxsaW9uIGluIDIwMTIgMTMuIFRoZSBzZWNvbmQgU29jaWFsIGFuZCBFY29ub21pYyBJbXBhY3QgU3R1ZHkgZm91bmQgZWxlY3Ryb25pYyBnYW1pbmcgbWFjaGluZXMgdGVuZGVkIHRvIGJlIGNvbmNlbnRyYXRlZCBpbiBsb3dlciBzb2NpbyBlY29ub21pYyBhcmVhcywgaW5jbHVkaW5nIEdsZW5vcmNoeSBhbmQgRGV2b25wb3J0LiAKSm9raW5nIGFzaWRlLCBJIGRvbiB0aGluayBpdCB0b28gaGFyZCB0byBpZGVudGlmeSBmaXNoL2JhZCBwbGF5ZXJzLiBKdXN0IHBheSBhdHRlbnRpb24gdG8gdGhlIGtpbmRzIG9mIGhhbmRzIHRoZXkgc2hvdyB1cCB3aXRoLCBhbmQgdGhpbmsgYWJvdXQgaG93IHRoZXkgc2hvd2VkIHVwIHdpdGggdGhvc2UgaGFuZHMuIFdoYXQgbXVzdCBoYXZlIGJlZW4gdGhlaXIgdGhvdWdodCBwcm9jZXNzPyAoVXN1YWxseSwgdGhlcmUgaXMgbm8gdGhvdWdodCBwcm9jZXNzLikgVGhlIGV4cGxvaXRhYmxlIGZpc2ggYXJlIHRob3NlIHdob3NlIHJhbmdlcyBhcmUgdG9vIHdpZGUgb3IgdGlnaHQsIGFuZCB3aG9zZSBhZ2dyZXNzaW9uIGZhY3RvciBpcyB0b28gaGlnaCBvciB0b28gcGFzc2l2ZS4gQXQgdGhlIG1vc3QgYmFzaWMsIGRvbiBibHVmZiB0aGUgbG9vc2UgcGxheWVycy4gRG9uIGhlcm8gY2FsbCB0aGUgdGlnaHQgcGxheWVycy4gQmUgYSBsaXR0bGUgbW9yZSB3aWxsaW5nIHRvIGRvIHZpY2UgdmVyc2EuClRoZSBwcm9ibGVtIHdhcyBhdCB0aGUgdGltZSBJIHdhcyBpbiBzY2hvb2wgYW5kIHRvbyBzaWNrIHRvIHdvcmsgZnVsbCB0aW1lLiAKREggV2FudHMgdG8gR28gdG8gUG9rZXIgTmlnaHQgVG9tb3Jyb3cKMTNHYW1lcywgVG95cywgYW5kIEhvYmJpZXMKTmF2aWdhdGluZyB0byBsb2NhbCBuZXdzIGZvciBFbCBQYXNvIGlzIGVhc3kuIENyb3dkIGVzdGltYXRlcyBmcm9tIGxvY2FsIG9mZmljaWFscyBwbGFjZSB0aGUgY3Jvd2Qgc2l6ZXMgYXMgcm91Z2hseSBlcXVhbCBhdCBhYm91dCA3MDAwIHBlb3BsZSBpbiBhdHRlbmRlbmNlIGF0IGJvdGguCkluIFN0aXRjaCB5b3UgICBIYXJyaWV0IFJpZGRlbGxIYXJyaWV0IFJpZGRlbGwgaXMgYSBQZXJmb3JtYW5jZSBNaXhlZCBtZWRpYSBBcnRpc3Qgc3BlY2lhbGlzaW5nIGluIG9ic2VydmF0aW9uYWwgZHJhd2luZ3MgaW4gc3RpdGNoLiBIZXIgYXJ0d29yayByZXNwb25kcyB0byBhbmQgaW50ZXJwcmV0cyB0aGUgdHJhbnNpZW50IHdvcmxkIG9uIHRvIGEgcGVybWFuZW50IHRhcGVzdHJ5LgpIZSB3YXMgdGhlcmUgYXMgdGhlIG1hZ25ldC4gWWVhaC4gCk1lcmVyIE9vbGRiZW4nYSBTdXBlcm1hcmtldC4gClRyeSB0byBvYmplY3RpdmVseSBhbmQgZXF1YW5pbW91c2x5IHN0dWR5IHRoZSBwYWluIHdoaWxlIGluIG1lZGl0YXRpb24sIHRyeSBhbmQgZ2V0IHRvIGtub3cgYWxsIG9mIGl0cyBmYWNldHMsIGFjY2VwdCBpdCwgYW5kIGlmL3doZW4gaXQgZ2V0cyB0byB0aGUgcG9pbnQgd2hlbiBpdCB0b28gb3ZlcmJlYXJpbmcsIGFjY2VwdCB0aGF0IHRvbyBhbmQgbW92ZSBvbi4gCk5PIE9ORSBJTiBUSEVJUiBSSUdIVCBNSU5EIFdPVUxEIEdBTUJMRSAkMiw1MDAgSU4gT1JERVIgVE8gTUFLRSAkMiw1OTAgV0hFTiBUSEVZIEdVQVJBTlRFRUQgVE8gR0VUICQyLDUwMCBGT1IgTElURVJBTExZIE5PVCBDSEFOR0lORyBBIFRISU5HLi4gClRoZSBwcm9jZXNzIHVzdWFsbHkgc3RhcnRzIHdoZW4gb25lIG9mIGhlciBjb2xsZWFndWVzIGNvbnZleXMgdGhlIG1lc3NhZ2UgdGhhdCBNcy4gV2F0ZXJzIGlzbiAiZW50aXJlbHkgcGxlYXNlZC4iIElmIHRoZSBoaW50cyBkb24gd29yaywgdGhlbiB0aGF0IGNvbGxlYWd1ZSBvciBzb21lb25lIGVsc2UgY2xvc2UgdG8gTXMuIApBbmQgSSBwbGF5ZWQgb24gUFAgYW5kIDg4OCBmb3IgYSBsb25nIHRpbWUuIApJIHdhcyBhIGJpY3ljbGUgYXNzZW1ibGVyIGF0IFdhbG1hcnQgZm9yIDggb2YgbXkgMTEgeWVhcnMgdGhhdCBJIHdvcmtlZCB0aGVyZSBhbmQgSSBjYW4gY29uZmlybSB0aGF0IEFOWSBiaWN5Y2xlIGF0IFdhbG1hcnQgaXMgY2hlYXBseSBtYW51ZmFjdHVyZWQgdHJhc2guIEhlbGwsIGhhbGYgb2YgdGhlIGJpa2VzIGNvbWUgb2ZmIHRoZSB0cnVja3MgYWxyZWFkeSBkYW1hZ2VkLiBJIHNwZW50IG1vcmUgdGltZSByZXBhaXJpbmcgYmlrZXMgdGhhbiBhY3R1YWxseSBhc3NlbWJsaW5nIG5ldyBvbmVzLi4gCklmIGhlIGV4Y2VlZHMgMTAgZ2FtZXMgZG93biB0aGUgc3RyZXRjaCwgaGUgd291bGQgYmUgYSB0aGlyZCB5ZWFyIHBsYXllciBieSAyMDIxIGFuZCBuZWVkIHRvIGJlIGluY2x1ZGVkIG9uIHRoZSBwcm90ZWN0ZWQgbGlzdC4KVGhlIHJldmlld3MgYXJlIGNvbWluZyBpbiBmb3IgdGhlIG5ldyBhY3Rpb24gZmxpY2sgc3RhcnJpbmcgQmVuIEFmZmxlY2sgYW5kIEp1c3RpbiBUaW1iZXJsYWtlLCBhbmQgdGhlIG1ham9yaXR5IG9mIGNyaXRpY3MgZGlkbid0IGV4YWN0bHkgbGlrZSB3aGF0IHRoZXkgc2F3LgpJIHRoaW5rIHRoZSBiaWcgZWZmZWN0IG9mIE5ldGZsaXggYW5kIG9yZ2FuaXphdGlvbnMgbGlrZSB0aGF0IGlzIHRoZSByZWxlYXNlIHdpbmRvd3MgaGF2ZSBiZWVuIG11Y2ggc2hvcnRlbmVkLiBBdCB0aGUgc2FtZSB0aW1lLCBhbmQgc29tZXRpbWVzIHN0cmVhbWluZyBhdCB0aGUgc2FtZSB0aW1lLiAKSWYgc28sIHNob3VsZCBJIG1vdmUgb3V0IG9yIHN0YXkgYW5kIGxpdmUgYXMgcm9vbWF0ZXMgYmVjYXVzZSBJIGNhbid0IGFmZm9yZCB0byBsaXZlIG9uIG15IG93biBhbmQgSSBoYXZlIDIgbW9yZSBzZW1lc3RlcnMgbGVmdCBmb3IgbXkgY29sbGVnZSBkZWdyZWUuIApJZiB5b3UgaGF2ZSBhIHNleHVhbCBhdHRyYWN0aW9uIHRvIGFuaW1hbHMsIGRvIHdoYXQgYW55IGhvcm55IHRlZW5hZ2VyIGRvZXMgYW5kIHRha2UgY2FyZSBvZiB0aGF0IGJ1c2luZXNzIHRocm91Z2ggb3RoZXIgbWVhbnMuIEl0IGRvZXNuIGdpdmUgeW91IHBlcm1pc3Npb24gdG8gcmFwZSBhbm90aGVyIGxpdmluZyBjcmVhdHVyZS4gCkhvcGVmdWxseSwgdGhleSB3aWxsIGJyaW5nIHlvdSBtb25leSBhcyB3ZWxsLi4gCklmIHNoZSBzdGFydGVkIGFnYWluICAgcmVwZWF0LiAKV2l0aCB0aGUgbWlkdGVybSBlbGVjdGlvbnMgYXBwcm9hY2hpbmcgbmV4dCB3ZWVrLCB3ZSBhcmUgYmVpbmcgb2ZmZXJlZCBhbiBpbmNyZWRpYmxlIG9wcG9ydHVuaXR5IHRvIGJyZWFrIGZyb20gdGhlIHJ1dCBvZiBvdXIgY29tZm9ydGFibGUgbGl2ZXMgYW5kIHRha2UgZ29kbHkgYWN0aW9uLiBJdCdzIHRpbWUgZm9yIHVzIHRvIGdldCB1cCwgZ2V0IG91dCBhbmQgdGFrZSBwYXJ0IGluIHdoYXQgR29kIGlzIGNhbGxpbmcgdGhlIGNodXJjaCB0byBkbyBpbiB0aGlzIGNydWNpYWwsIHVucHJlY2VkZW50ZWQgc2Vhc29uLiAKTXkgZGF1Z2h0ZXIgaXMgYSBzbnVnZ2xlIGJ1ZGR5LiBTaGUgd2FzIDEwIG1vbnRocyBvbGQgd2hlbiBJIGdvdCBjYW5jZXIgKEkgbm93IGNhbmNlciBmcmVlKSBTaGUgaXMgbXkgd2lsZCBjYXJkLiBTaGUgaXMgbXkgc2hhZG93LiAKIkJ1dCBpZiB0aGV5IHNvIGJhZCBhdCBsaXRlcmFsbHkgZXZlcnl0aGluZywgd2h5IGhhdmVuIHRoZXkgZ29uZSBleHRpbmN0LiIgR3JlYXQgcXVlc3Rpb24uQkVDQVVTRSBUSElTIFRISU5HIElTIFNPIFdPUlRITEVTUyBJVCBET0VTTlQgUkVBTElaRSBJVCBTSE9VTEQgTk9UIEVYSVNULiBJVCBJUyBTTyBVTkFXQVJFIE9GIExJVEVSQUxMWSBGVUNLSU5HIEVWRVJZVEhJTkcgVEhBVCBJVCBET0VTTlQgUkVBTElaRSBUSEFUIElUIERPSU5HIE1BWUJFIFRIRSBXT1JTVCBGVUNLSU5HIEpPQiBPRiBCRUlORyBBIEZJU0gsIE9SIERFQkFUQUJMWSBUSEUgV09SU1QgSk9CIE9GIEJFSU5HIEEgQ0xVU1RFUiBPRiBDRUxMUyBUSEFOIEFOWSBPVEhFUiBDTFVTVEVSIE9GIENFTExTLiAKVHJvaXNpbWUgdGFwZSA6IExlIENvcXVpbGxhZ2UsIGwnYW50cmUgZHUgZ3JhbmQgY2hlZiBPbGl2aWVyIFJvZWxsaW5nZXIgKGlsIHN1cGVydmlzZSBsZSBsaWV1IGRlcHVpcyBxdSdpbCBhIGZlcm0gc29uIHJlc3RhdXJhbnQgMyB0b2lsZXMpLiBJbCB5IGEgdW4gbWVudSAiR3JhbmQgQ2hvaXggZGUgbGEgQmFpZSJkYW5zIGxlcXVlbCBzZWxvbiBsJ2FwcHRpdCBvbiBwZXV0IGNob2lzaXIgZW50cmUgcGxhdCBkZXNzZXJ0IG91ICJzZXVsZW1lbnQiIHBsYXQgZGVzc2VydCBjYXIgaWwgZXN0IGltcG9ydGFudCBkZSBzZSBnYXJkZXIgdW5lIHBsYWNlIG5vdGFibGUgcG91ciBwcm9maXRlciBkZSBsYSB0cnMgZ25yZXVzZSByb3VsYW50ZSBkZXMgZGVzc2VydHMuIEplIG1lIHN1aXMgcmdhbGUgZGUgcGxhdHMgbWVydmVpbGxldXNlbWVudCBwYXJmdW1zICh1bmUgImxvdHRlIHRyYW5zbHVjaWRlLCBodWlsZSBkJ2FncnVtZXMsIGZsZXVyIGR1IHNvbGVpbCBldCBwb3Vzc2VzIGRlIHByaW50ZW1wcyIsIHVuICJibGFuYyBkZSBiYXJidWUsIGp1cyBkJ2hlcmJlcyBkZSBsJ2VzdHJhbiwgaHVpbGUgZCdvbGl2ZSBkZSBGdWx2aW8gZXQgd2FrYW0gbWFsb3VpbiIpIGNhciBjZSBncmFuZCBjaGVmIGVzdCB2cmFpbWVudCBsZSByb2kgZGVzIHBpY2VzLi4gCkFwYXJ0IGZyb20gdGhpcywgdGhlIGZhY3QgdGhhdCBiZWdnaW5nIGhhcyBraW5kIG9mIGJlY29tZSBhbiBvcmdhbml6ZWQgInByb2Zlc3Npb24iIHdpdGgga2lkcyBnZXR0aW5nIGtpZG5hcHBlZCBhbmQgZm9yY2VkIHRvIGJlZyBmb3IgdGhlIE1hZmlhLgpIb3cgZ29vZCBhcmUgdGhleSBpbiBwbGF5aW5nIHBva2VyID8KSSBoZWFyZCBhIGxvdCBhYm91dCBmb29kIGFuZCByb3NhY2VhLiBJIGhhZCByb3NhY2VhIGZvciBvdmVyIDMwIHllYXJzIGFuZCBoYXZlbiBwZXJzb25hbGx5IGZvdW5kIGEgY29ycmVsYXRpb24uIAoiVGhlIHN0YXRlJ3MganVzdCBzbyBkaXZlcnNlLCBzbyBWZWdhcyBzdHlsZSBzY2VuYXJpbyBpcyBub3QgYSBuYXR1cmFsIHByb2dyZXNzaW9uLCIgc2F5cyBzdGF0ZSByZXByZXNlbnRhdGl2ZSBCaWxsIEdhbHZhbm8sIGEgUmVwdWJsaWNhbiBmcm9tIHRoZSBHdWxmIENvYXN0IHdobyBoZWxwZWQgbGVhZCBuZWdvdGlhdGlvbnMgd2l0aCB0aGUgU2VtaW5vbGVzLiAKNTQgOTIpIEFsbCB0aGUgc29uZ3MgbGlzdGVkIGhlcmUgYXJlIlVucmVsZWFzZWQuIiBZb3UgY2FuIGZpbmQgdGhlbSBvbiBZb3V0dWJlOiBBbmltYWwsIEthYm9vbSAoZmVhdC4gTGFkeSBHYUdhKSwgV3VuZGVybGFuZChmZWF0LiBMYWR5IEdhR2EpLCBMZXQgTG92ZSBEb3duLCBCbHVlYmVycnkgS2lzc2VzLCBSZWQgQW5kIEJsdWUsUmV0cm8gUGh5c2ljYWwsIFJvY2sgU2hvdywgU2Vjb25kIFRpbWUgQXJvdW5kLCBTZXh5IFVnbHksIEdsaXR0ZXJBbmQgR3JlYXNlIChBcm91bmQpLCBObyBGbG9vZHMsUmliYm9ucywgT2ggV2VsbCwgRnV0dXJlIExvdmUgKExpdmUpLCBPdXQgT2YgQ29udHJvbCAoc2hvcnQgZGVtbyksV29yZHMsIFdvbmRlcmZ1bCwgV2lzaCBZb3UgV2VyZSBIZXJlLCBTaGFrZSBZb3VyIEtpdHR5LCBTb21ldGhpbmdDcmF6eSwgRmlsdGh5IFBvcCwgRmFuY3kgUGFudHMsIEZldmVyLCBEaXJ0eSBJY2UgQ3JlYW0sIEthbmR5IExpZmUsRm9vbGVkIE1lIEFnYWluIChIb25lc3QgRXllcyksIFJlbG9hZGVkLCBDYXB0aXZhdGVkIEVsZWN0cmljIEtpc3MsTGl2aW5nIE9uIFRoZSBSYWRpbywgU3BpbiBVQXJvdW5kIChmZWF0LiAKT25lIGJpZyB2YWx1ZSBvZiB1c2luZyBYTUwgZW52ZWxvcGVzLCBpbiBnZW5lcmFsLCBpcyB0aGUgYWJpbGl0eSB0byB0YWtlIGNvbnRlbnQgYW5kIGluY2x1ZGUgaXQgd2l0aCBlYWNoIHRoYXQgZ2V0cyBkaXNhc3NlbWJsZWQuIApEbyB5b3Ugd2FudCB0byBkaXZvcmNlIHlvdXIgd2lmZS9raWRzIG9yIGRvIHlvdSB3YW50IHRvIGRpdm9yY2UgeW91ciBwYXJlbnRzL3NpYmxpbmdzLiBXaGljaCBkaXZvcmNlIGlzIGdvaW5nIHRvIGxlYWQgeW91IHRvIHRoZSBmdXR1cmUgeW91IHdhbnQgbW9yZT8iUGVyaWR3ZW4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ29JIGhhdmUgMyBzbWFsbCAicG9yY2VsYWluIiBkb2xscyB0aGF0IG15IG1vdGhlciBicm91Z2h0IG1lIHdoZW4gc2hlIHdlbnQgdG8gTG9uZG9uIHllYXJzIGFuZCB5ZWFycyBhZ28uIE15IDN5byBCUyBMT1ZFUyB0aGVtLiAKTXkgZm9sa3MgbGV0IG1lIGdldCBzb21lIGV4cGVuc2l2ZSBkZXNpZ25lciBnbGFzc2VzIHRoYXQgd2VyZSB2ZXJ5IGRpZmZlcmVudCBmb3IgdGhhdCB0aW1lLiAKUm9tYW5jZSBjYXBpdGFsaXNtIHdhcyBub3QganVzdCBhYm91dCBzZWxsaW5nIHVzIGEgd2hpdGUgd2VkZGluZyBhbmQgYSBoYXBwaWx5IGV2ZXIgYWZ0ZXIsIHRob3VnaC4gCkVhc3Rib3VuZCBJIDY5NiBhdCBNb3VuZCBpcyBjbG9zZWQgZHVlIHRvIGEgZmF0YWwgY3Jhc2guIG9uIE1vbmRheSBuaWdodC4KWW91ciBjb3N0OiAkMTguNyBtaWxsaW9uIGEgeWVhci4gKEhvdyBtYW55IGNoaWxkIHdlbGZhcmUgY2FzZSB3b3JrZXJzIG1pZ2h0IHRoYXQgYnV5PykuIApXaGVuIHlvdSBhcHBseSB0byAgaXQgd2lsbCBwcmVzZW50ICJJICh5b3VyIHVzZXJuYW1lKSAodGhlbiB3cml0ZSIgYWdlbnQgU3RheENsdWIiKSBTbyB5b3Ugc2hvdWxkIHR5cGUgIkkgKHlvdXIgdXNlcm5hbWUpIGFnZW50IFN0YXhDbHViIi4gCkZvcmJlYXJpbmcgdGhhdCBiZWhhdmlvciBpcyBubyBzdHJvbmdlciB0aGFuIGNhbG1seSBjYWxsaW5nIGl0IG91dCwgc2V0dGluZyBhIHJlYXNvbmFibGUgYm91bmRhcnksIGFuZCBleHBlY3RpbmcgaXQgdG8gYmUgcmVzcGVjdGVkLiAKTm90IGV4YWN0bHkgc3VpdGFibGUgY29tcGV0aXRpb24gdG8gbWFrZSBhbiBhc3Nlc3NtZW50IG9mIGhpcyByZWNvdmVyeS4gCkNocmlzdGluYSBjb250aW51ZXMgdG8gY29tbWVudCBpbiBiZXR3ZWVuIGhhbmRzLCAiV2hvIGlzIHBva2VyPyBQb2tlciBpcyBhbnlvbmUgaW4gYW55IGNvdW50cnksIGFueSBjdWx0dXJlLCBhbGwgYWdlcy4gCkkgZGF0ZWQgYW5kIGxpdmVkIHdpdGggbXkgZXggZm9yIGFib3V0IDIgeWVhcnMuIFRoZSBsYXN0IHNpeCBtb250aHMgb2Ygb3VyIHJlbGF0aW9uc2hpcCB3ZXJlIGxvbmcgZGlzdGFuY2UgYmVjYXVzZSBoZSBnb3QgYSBEV0kgYXQgb3VyIGZyaWVuZHMnIHdlZGRpbmcgdGhhdCBJIHdhcyBzdXBwb3NlZCB0byBhdHRlbmQgd2l0aCBoaW0uIEhlIGhhZCB0byBtb3ZlIGJhY2sgaW4gd2l0aCBoaXMgcGFyZW50cyB0byBoZWxwIHBheSBpdCBvZmYuIEhlIG5ldmVyIHdvdWxkIGxldCBtZSBkcml2ZSBkb3duIHRvIHNlZSBoaW0gYmVjYXVzZSBoZSB3YXMgYWZyYWlkIGhpcyBwYXJlbnRzIHdvdWxkIGZpbmQgb3V0IGFib3V0IG1lLgpJdCdzIGEgbGllIHRoYXQgZXZlcnkgcG9rZXIgZ2FtZSBmZWF0dXJlcyBhIHN1Y2tlciAgIGluIGNhc2lub3MgdGhleSBmcmVxdWVudGx5IGZlYXR1cmUgc2V2ZXJhbCBzdWNrZXJzICh3aG8gcGF5IHRoZSBob3VzZSB0byBiZSB0aGVyZSksIG9uZSBkZWNlbnQgcGxheWVyICh3aG8gb2Z0ZW4gcGF5cyB0aGUgaG91c2UgYSBjb21taXNzaW9uIHRvIGJlIHRoZXJlIHdpbm5pbmcpLCBhbmQgdGhlIGhvdXNlICh3aGljaCB0YWtlcyBhIHJha2UgYW5kIHRoZXJlZm9yZSB3aW5zIGF0IHBva2VyIHdpdGhvdXQgaGF2aW5nIGFueSBjYXJkcykuLiAKQnV0IHRvIHRheCB3b3JraW5nIGFuZCBtaWRkbGUgY2xhc3Mgd29tZW4gd2hvIGhhdmUgYmVlbiBwYXJ0IG9mIHRoZSA4MCUgb2YgQW1lcmljYW5zIGdldHRpbmcgd29yc2Ugb2ZmIGluIHRoZSBwYXN0IDMwIHllYXJzIGlzIHdyb25nLiBUaGVzZSB3b21lbiB1bmRlcnN0YW5kIHRoYXQgbG9va2luZyBiZXR0ZXIgY2FuIGxlYWQgdG8gYSBiZXR0ZXIgbGlmZS4gCkkgaGF2ZSA5IGhvcnNlcyBvbiB0d28gc2VwYXJhdGUgcHJvcGVydGllcy4gCkRlc3BpdGUgaXRzIG5hbWUsIGdsdXRpbm91cyB3aGl0ZSByaWNlIGRvZXMgbm90IGNvbnRhaW4gZ2x1dGVuLiAKV2hlbiBLaW0gZ290IGluIHRoZSBjYXIsIExpc2EgYXNrZWQgaG93IHNoZSB3YXMgYW5kIHNoZSByZXBlYXRlZGx5IHNhaWQgIm9ybmVyeS4iIExpc2EgcHJvbXB0bHkgYXNrZWQgaWYgc2hlIHdhcyBkcmlua2luZyBvciB0YWtpbmcgZHJ1Z3Mgc2luY2Ugc29tZXRoaW5nIHNlZW1lZCBvZmYuIEtpbSBzYWlkIHNoZSB3YXMgc3RpbGwgc29iZXIuIFRoaW5ncyBnb3Qgd2VpcmRlci4gCkknbSBzdXJlIHRoYXQgdGhlcmUgY291bGQgdmVyeSB3ZWxsIGJlIGlzc3VlcyBpbiB0aGUgZnV0dXJlLCBidXQgSSdtIGFsc28gc3VyZSB0aGF0LCBwbGFjZWQgaW4gYSByZWxhdGl2ZWx5IGtpbmQgY29tbXVuaXR5IGFuZCBldGMsIHRoZSBjaGlsZHJlbiBjb3VsZCBkZWZpbml0ZWx5IGJlIHRhdWdodCB0byBpZ25vcmUgdGhvc2UgdGVhY2hpbmdzLgpIZSBsb3N0IHRoZSBlbGVjdGlvbiB3aXRoIDQ1JSBvZiB0aGUgdm90ZS5UaGF0IHdoZW4gaGUgdHJhbnNpdGlvbmVkIHRvIHRlbGV2aXNpb24uIApBbnkgbGF3IGVuZm9yY2VtZW50IG9mZmljZXIgaW4gdGhlIGFyZWEgd2hvIGhhZCBoaXMgcmFkaW8gb24gd291bGQgaGVhciB0aGUgZGVzY3JpcHRpb24sIGNvdWxkIGdpdmUgY2hhc2UgaWYgaGUgaGFwcGVuZWQgdG8gc2VlIHRoZSBwaWNrdXAuIFRoZSBwZW9wbGUgaW4gaXQgd291bGQgYmUgd2FudGVkIGZvciBxdWVzdGlvbmluZyBpbiB0aGUgYXBwYXJlbnQgcm9iYmVyeSBvZiBNY0FuYWxseSdzLi4gClByZWduYW5jeSBtYXNzYWdlIGlzIG1vZGlmaWNhdGlvbiBvZiB0ZWNobmlxdWVzIGFuZCBib2R5IHBvc2l0aW9ucyB0byBtZWV0IHRoZSBuZWVkcyBvZiB3b21lbiBhcyB0aGV5IHVuZGVyZ28gY2hhbmdlcyBkdXJpbmcgcHJlZ25hbmN5IGFuZCB0aGUgcG9zdHBhcnR1bSBwZXJpb2QuIApTb3JyeSB5b3UgaGF2ZSB0byBnbyB0aHJvdWdoIHRoaXMgdG9vLgoiSSdtIG5vdCBhbnRpIFJTTCwgYnV0IEkgYW0gYW50aSBnYW1ibGluZyBhbmQgZ2FtaW5nLCIgc2hlIHNhaWQuICJXZSBiZWxpZXZlIHRoYXQgaW5jcmVhc2VkIG51bWJlcnMgb2YgcG9rZXIgbWFjaGluZXMgYW5kIHRoZSBzdWJzZXF1ZW50IGltcGFjdGlzIGFuIGlzc3VlIHRoYXQgd2lsbCBhZmZlY3QgdGhlIGxpdmVzIG9mIG1hbnkgaW4gb3VyIGNvbW11bml0eS4iIENvdW5jaWxsb3Jzdm90ZWQgMyAyIGxhc3QgbW9udGggYWdhaW5zdCBzdXBwb3J0aW5nIHRoZSBSU0wncyBwbGFudG8gaW5jcmVhc2UgaXRzIG51bWJlciBvZiBwb2tpZSBtYWNoaW5lcyBmcm9tIDMydG8gNTAsIGJ1dCB0aGUgZmluYWwgZGVjaXNpb24gIHRvIGJlIG1hZGUgYnkgdGhlVmljdG9yaWFuIENvbW1pc3Npb24gZm9yIEdhbWluZyBhbmQgTGlxdW9yIFJlZ3VsYXRpb24gIHdhcyBzdGlsbCBwZW5kaW5nLiAKU28gbXkgZGFkIGlzIGEgaHVnZSB0cmF2ZWxlciAgIHdvcmtzIGZvciBhIGxhcmdlIGNvbXBhbnkgYW5kIGNvdmVycyB0aGUgbm9ydGhlYXN0LiBXZSBiZWVuIHRvIENoZXogQW1pIG9uY2UgKEkgd2lsbCBzYXkgaW4gYWxsIGZhaXJuZXNzLCB3ZSBzaG91bGQgYmUgdGhlcmUgdHdpY2UgYmVmb3JlIGdpdmluZyBqdWRnbWVudCkuIEkgd2lsbCBzYXkgb3VyIGV4cGVyaWVuY2Ugd2FzIGxhY2tsdXN0ZXIuIApPbiB0aGUgb3RoZXIgaGFuZC4gSSBtYWtlICQxMiBhbiBob3VyIGZvciBhIGZ1bGwgdGltZSBqb2IgbWFudWZhY3R1cmluZyAzRCBwcmludGVycy4gSSBkb24gaGF2ZSBhIGNhci4gCk5vdyBzaGUgaXMgYXQgdGhlIGNlbnRyZSBvZiBhIG15c3RlcnkgdGhhdCBoYXMgbWFkZSBoZWFkbGluZXMgYXJvdW5kIEF1c3RyYWxpYS4gClRvIHlvdSwgbG9ja2luZyB5b3UgaW4gYSByb29tIGFuZCByZWZ1c2luZyB0byBsZXQgeW91IG91dCBmb3IgMjQgaG91cnMgd2FzIHNsaWdodGx5IGFsYXJtaW5nLCBlbm91Z2ggdGhhdCB5b3UgcG9zdCB0byByZWRkaXQgYnV0IG5vdCBzbyBtdWNoIHRoYXQgeW91IHdvdWxkIGNhbGwgOTExLiAKQnV0IHRoYXQgbm90IGdvaW5nIHRvIGhhcHBlbi4gSVNQcyAoYXQgbGVhc3QgaGVyZSBpbiB0aGUgVVMpIGFyZSBncmVlZHkgYW5kIGp1c3Qgd2FudCB0byBjaGFyZ2UgYXMgbXVjaCBhcyBwb3NzaWJsZSB0byBpbmNyZWFzZSB0aGVpciBwcm9maXRzLiBJZiB5b3UgdGhpbmsgZ2lhbnQgSVNQcyBsaWtlIENvbWNhc3QsIFZlcml6b24sIFRpbWUgV2FybmVyLCBDaGFydGVyLCBDb3gsIGV0Yy4gYWN0dWFsbHkgY2FyZSBhYm91dCB0aGVpciBjdXN0b21lcnMsIHlvdSBjcmF6eS4gQWxsIHRoZXkgY2FyZSBhYm91dCBpcyBnZXR0aW5nIGFzIG11Y2ggbW9uZXkgZnJvbSB0aGVpciBjdXN0b21lcnMgYXMgcG9zc2libGUgYW5kIGxpbWl0aW5nIG9wdGlvbnMgc28gY3VzdG9tZXJzIGRvbiBoYXZlIGFueSBvdGhlciBjaG9pY2VzIHRvIHN3aXRjaCB0by4KOS4gVGhpcyBkb2VzbiBtZWFuIGV2ZXJ5b25lIGluIHRoZSB3b3JsZCBzaG91bGQgYmUgdGhlIHNhbWUgYXMgeW91LiBXaHkgd291bGQgbXkgZ3JhbmRtYSBlbmpveSBza3lkaXZpbmc/IGl0IHRoZSBzYW1lIHJlYXNvbiBteSBjb3VzaW4gbWlnaHQgbm90IGVuam95IHBva2VyLiAKU2V4IGFuZCBpbnRpbWFjeSBjYW4gYmUgZ3JlYXQsIGJ1dCB5b3UgY2FuIHN0aWxsIGhhdmUgYSBmdWxmaWxsaW5nIGxpZmUgd2l0aG91dCB0aGVtLiBTbyBpZiB5b3UgZGVjaWRlIHRoaXMgaXNuIHNvbWV0aGluZyB5b3Ugd2FudCB0byB3b3JrIHRocm91Z2gsIHRoYXQgb2theSB0b28uIElkZWFsbHkgSSB3b3VsZCBsaWtlIGZvciB5b3UgdG8gdHJ5IGJlY2F1c2UgaXQgc2VlbXMgbGlrZSBpdCBpbXBvcnRhbnQgdG8geW91LCBidXQgaWYgeW91IGNoYW5nZSB5b3VyIG1pbmQgYW5kIGZlZWwgeW91IGRvbiB3YW50IHRvIG9yIGRvbiBmZWVsIGl0IGltcG9ydGFudCBlbm91Z2ggdG8gcHV0IHlvdXIgc2VsZiB0aHJvdWdoIGFsbCB0aGUgYW54aWV0eSwgdGhhdCBva2F5IHRvby4gVGhpcyBkb2VzbiBtZWFuIHlvdSBhcmUgaG9wZWxlc3MuIFRoaXMganVzdCBtZWFucyB5b3VyIHBhdGggaXMgZGlmZmVyZW50LiBUaGF0IG9rYXkuCklmIHRlYWNoaW5nIHdlcmUgYWJvdXQgdGhlIGtpZHMgKGFuZCBob3cgZHVtYiwgbGF6eSwgb3Igb2Jub3hpb3VzIHRoZXkgd2VyZSksIHRoZXJlIHdvdWxkIGJlIG5vIHBvaW50IGluIHJlY3J1aXRpbmcgaGlnaCBhY2hpZXZpbmcgY29sbGVnZSBraWRzIHRvIHRlYWNoIHRoZW0uLiAKWW91ciBjdXRlIGxpdHRsZSBmYW50YXN5IHNjZW5hcmlvIG9mICJjaGFuZ2luZyIgdGhpcyBzaXR1YXRpb24gaXMgbm90IHZhbGlkLiAKUEJQIHZzIEJLIGlzIGEgc3RvY2sgdnMgZmxvdyBxdWVzdGlvbiAgIGlmIHRoZSBkYW1hZ2UgY29taW5nIGluIGlzIGNvbnN0YW50LCB0aGUgcmF0ZSBvZiByZXBhaXIgKGZsb3cpIGZyb20gUEJQIGNhbiBiZSB0b3BwZWQuIElmIHRoZSBkYW1hZ2UgaXMgc3Bpa2V5IGhvd2V2ZXIgKHNtYXNoZXJzICsgbWluaWJvc3NlcykgdGhlbiB0aGUgbGFyZ2UgcG9vbCBvZiBIUCBvZmZlcmVkIGJ5IEJLIChzdG9jaykgaXMgaW1tZW5zZWx5IHZhbHVhYmxlLi4gCklmIHRoaXMgaXMgYSBzY2FtLiBwbGVhc2UgbGV0IGl0IG5ldmVyIGV2ZXIgZW5kIDogKQpUaG9zZSBjbG9zZSB0byB0aGUgZm9ybWVyIHZpY2UgcHJlc2lkZW50IGJlbGlldmUgaGUgd291bGQgc3RhcnQgb2ZmIGF0IGEgZnVuZHJhaXNpbmcgZGlzYWR2YW50YWdlIGNvbXBhcmVkIHRvIHdvdWxkIGJlIHJpdmFscywgd2hvc2UgY2FtcGFpZ25zIGhhdmUgYmVuZWZpdGVkIGZyb20gYW4gZWFybHkgZmxvb2Qgb2Ygc21hbGwgZG9sbGFyIGRvbmF0aW9ucyBmcm9tIHRoZSBtb3N0IGxpYmVyYWwgd2luZyBvZiB0aGUgcGFydHkuIEJpZGVuLCBhIDc2IHllYXIgb2xkIGxpZmV0aW1lIHBvbGl0aWNpYW4gd2l0aCBzdHJvbmcgY29ubmVjdGlvbnMgdG8gdGhlIHBhcnR5J3MgZXN0YWJsaXNobWVudCwgd291bGQgYmUgZm9yY2VkIHRvIHJlbHkgb24gYW4gIm9sZCBzY2hvb2wgZ3JpbmQgaXQgb3V0IiBwbGFuIHRvIGdlbmVyYXRlIGNhbXBhaWduIGNhc2ggZnJvbSB3ZWFsdGh5IGluZGl2aWR1YWwgZG9ub3JzLCBhY2NvcmRpbmcgdG8gYSBwZXJzb24gd2l0aCBkaXJlY3Qga25vd2xlZGdlIG9mIEJpZGVuJ3MgdGhpbmtpbmcuLiAKRnJhbmNoaXNpbmcgZG9lc24gc3RvcCB0aGUgcG9zc2liaWxpdHkgb2Ygc2VsbGluZyB5b3VyIHNwb3QuIApCZWNhdXNlIE5vc3RyYWRhbXVzIHByZWRpY3RlZCBpbiBjb2RlIHRoZSBjb21pbmcgb2YgIk5hcGF1bG9uIFJveSIgYW5kICJIaXN0ZXIiIGh1bmRyZWRzIG9mIHllYXJzIGFmdGVyIGhpcyBkZWF0aCwgdGltZSBjYW5ub3QgYmUgbGluZWFyLiBUaGUgZnV0dXJlIG11c3QgYWxyZWFkeSBoYXZlIGhhcHBlbmVkIGluIG9yZGVyIGZvciBhIHNwaXJpdCB0byB0ZWxsIE5vc3RyYWRhbXVzIHRoZSBmdXR1cmUuIE9uZSB3YXkgdG8gdW5kZXJzdGFuZCB0aGlzIGlzIHRvIHBpY3R1cmUgdGltZSBhcyBhbiBpbmZpbml0eSBzeW1ib2wsIG9yIGFuIGhvdXJnbGFzcyBvciB0aGUgbnVtYmVyICI4IiBsYWlkIG9uIGl0cyBzaWRlLiAKUG9rZXIgTW9ja3VtZW50YXJ5ICdUaGUgR3JhbmQnIFdpbnMgdGhlIFBvdCBXaXRoIEhpbGFyaW91c2x5IEJlbGlldmFibGUgQ2hhcmFjdGVycwpBY2NvcmRpbmcgdG8gYSBHb3Zlcm5tZW50IEFjY291bnRhYmlsaXR5IE9mZmljZSByZXBvcnQsIHlvdSBjYW4gZmFpcmx5IGVhc2lseSBnZXQgcGFzdCB0aGUgc2VjdXJpdHkgYXQgZmVkZXJhbCBidWlsZGluZ3Mgd2l0aCBhbGwgdGhlIG1hdGVyaWFscyB5b3UgbmVlZCB0byBidWlsZCBhbiBleHBsb3NpdmUgZGV2aWNlLiBCZXR0ZXIsIHlvdSBjYW4gdGhlbiBhc3NlbWJsZSB0aGF0IGV4cGxvc2l2ZSBkZXZpY2UgaW5zaWRlIGFuZCB3YWxrIGFyb3VuZCB0aGUgYnVpbGRpbmcgd2l0aCBpdCBhbmQgYXBwYXJlbnRseSBubyBvbmUgd2lsbCBib3RoZXIgeW91LiAKU29tZXRpbWVzIHRoZSBtYWpvcml0eSBvZiB5b3VyIGVhcm5pbmdzIGNvbWUgZnJvbSByYWtlYmFjaywgd2hpY2ggcHJlc3VtYWJseSB3YXMgdGhlIGNhc2Ugd2l0aCB5b3VyIGJyb3RoZXIuIApTZXJpb3VzIG1hcmtldGluZy4gSSAob3JpZ2luYWxseSkgdW5kZXJlc3RpbWF0ZWQgdGhlIGV4dGVudCB0byB3aGljaCBtYXJrZXRpbmcgZWZmb3J0IGlzIGFuIGFic29sdXRlbHkgZXNzZW50aWFsIHRvb2wgdG8gYW55IHByb2R1Y3QgaW5pdGlhbCBzdWNjZXNzLgpHbnJwNDUgdQpJIHNlY29uZCB0aGlzLiBJIGJlZW4gdGFraW5nIGNvbGQgYmF0aHMgKGNvbGRlc3Qgd2F0ZXIgcG9zc2libGUgZnJvbSB0aGUgdGFwIHdoaWNoIGlzIHByZXR0eSBmcmVha2luZyBjb2xkICAgSSBzdGFydCBhZGRpbmcgaWNlIHdoZW4gbXkgbG9uZyBydW5zIGFyZSBvdmVyIHRoZSBITSBtYXJrIGFuZCB0aGUgd2VhdGhlci9waXBlcyB3YXJtIHVwIGEgYml0KSBhZnRlciBhbGwgbXkgbG9uZyBydW5zIHRoZW4gSSBob3AgaW50byBhIGhvdCBzaG93ZXIuIEkgdHJ5IHRvIGZvYW0gcm9sbCBvbiBkYXlzIEkgcnVuIGFuZCBJIGRvIGhpcCBmbGV4b3Igc3RyZW5ndGhlbmluZyBleGVyY2lzZXMgMyA0IHRpbWVzIGEgd2Vlay4gTXkgbGVncyBhcmUgc3RpbGwgc29tZXRpbWVzIGEgbGl0dGxlIGNyYW5reSBidXQgb3ZlcmFsbCwgdGhleSBuZXZlciBmZWx0IGJldHRlciBkZXNwaXRlIG1lIHJ1bm5pbmcgbW9yZSB0aGFuIEkgZXZlciBoYXZlLgpKaW0ganVzdCBtb3ZlZCBhcm91bmQgbGlrZSBoZSBiZWxvbmdlZCB0aGVyZSwgd2hpY2ggaGUgcmVhbGx5IGRpZCBldmVyeXdoZXJlIHdlIHdlbnQuIApIb3dldmVyLCBpdCBtYXkgc29vbiBjaGFuZ2UgZGlyZWN0aW9uLiAKIkhlIHdhcyBhbHNvIGEgbG9jYWwgYm95LCBoZSB3YXMgYm9ybiBhbmQgYnJlZCBoZXJlIChZYXJyYXdvbmdhIE11bHdhbGEpLCBzbyB3ZSB3ZXJlIHByZXR0eSBrZWVuIHRvIGRvIHNvbWV0aGluZyBmb3IgdGhlIGZhbWlseS4gClN1Ym1pc3Npb25zIGluIHdoaWNoIHRoZSBodW1vciBjYW4gYmUgY29udmV5ZWQgdmlhIHRleHQgYWxvbmUgYXJlIG5vdCBhbGxvd2VkLiBUaGlzIGluY2x1ZGVzIHBpY3R1cmVzIG9mIHRleHQgd2l0aCBpcnJlbGV2YW50IGltYWdlcyB0aGF0IGRvbiBhZGQgY29udGV4dCBhbmQgdHJhbnNjcmlwdGlvbnMgb2Ygc3RhbmR1cCBjb21lZHkgKGFzIHdpdGggL3Ivc3RhbmR1cHNob3RzKS4gTWFrZSBhIHNlbGYgcG9zdCBpbnN0ZWFkLiBFeGFtcGxlClRoZXkgZ290IHRoZXNlIHNha2UgZ2xhc3NlcyBmcm9tIHRoZWlyIGxhc3QgdmlzaXQgdG8gamFwYW4gYWJvdXQgdHdvIHllYXJzIGFnby4gVG9kYXkgSSB3YXMgaGVscGluZyB0byBjbGVhbiB1cCBhbmQgSSBicm9rZSBpdC4gSXQgd2FzIHNpbWlsYXIgdG8gdGhlIG9uZSBwaWN0dXJlZCBidXQgaGFkIGEgZGlmZmVyZW50IGRlc2lnbi4KSWYgeW91IGV2ZXIgaW4gU2VvdWwsIHRoZXJlIHR3byBtdXNldW1zIHdpdGggc2lnbmlmaWNhbnQgY29sbGVjdGlvbnM6IFRoZSBIYW5ndWwgTXVzZXVtICgpLCB3aGljaCBhbHNvIGhhcyBhIGNvbGxlY3Rpb24gb2YgbW92YWJsZSB0eXBlIGFuZCBvdGhlciBmb3JtcyBvZiBwdXR0aW5nIHRoZSBhbHBoYWJldCB0byBwYXBlciwgYW5kIHRoZSBLaW5nIFNlam9uZyBNZW1vcmlhbCBIYWxsICgpLiBZb3UgY2FuIHNlZSB0aGUgZXZvbHV0aW9uIG9mIEhhbmd1bCBrZXlib2FyZCBsYXlvdXRzIGluIHBoeXNpY2FsIGZvcm0gdGhlcmUuLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBFdmVuIHZzIGEgbW9uc3RlciBvcHBvbmVudCB3aG8gYmx1ZmZzIGNvcnJlY3RseSBpbiBldmVyeSBzcG90LiBUaGUgcmVhc29uIGlzIGJlY2F1c2UgOTAlIG9mIHRoZSBFViBjb21lcyBmcm9tIGhhbmRzIGluIHNvbWV3aGF0IHByb3hpbWl0eSB0byB0aGUgbnV0cy4gQXMgc29vbiBhcyBhIGhhbmQgaXMgY3J1c2hlZCBieSBhIGJyb2FkIGNsYXNzIG9mIGhhbmQgY29tYmluYXRpb25zIChzYXkgYmVpbmcgZGVtb3RlZCB0byBzZWNvbmQgcGFpciksIGl0cyBFViBkcm9wcyB0cmVtZW5kb3VzbHkuIEZvciBleGFtcGxlLCBtaWRkbGUgcGFpciwgbm8gZHJhdyBmYWNpbmcgYSBiaWcgZG91YmxlIGJhcnJlbCBpcyBhIHB1cmUgYmx1ZmZjYXRjaGVyLiBGb2xkaW5nIHRoYXQgaGFuZCBldmVyeSB0aW1lIGRvZXNuIGNvbmNlZGUgdGhhdCBtdWNoIGV2ZW4gdG8gYSBiYWxhbmNlZCBvcHBvbmVudC4gVnMgYSBub3JtYWwgdW5kZXJibHVmZmluZyBvcHBvbmVudCBmb2xkaW5nIGl0IHByb2JhYmx5IGNvcnJlY3QuIFRoaXMgZGlzY292ZXJ5IGhhcyBoZWxwZWQgbWUgc3RvcCBvdmVyIGFuYWx5emluZyB0cml2aWFsIHNwb3RzLiBZb3UgZG9uIGdldCBwdW5pc2hlZCB0aGF0IG11Y2guIEluIFBpb3NvbHZlciB5b3UgY2FuIGZpeCBoZXJvIHN0cmF0ZWd5IChzYXkgZm9sZGluZyBtb3JlIG9mIGhpcyBibHVmZmNhdGNoZXJzKSBhbmQgbGV0IHRoZSBjb21wdXRlciB0cnkgdG8gbWF4aW1hbGx5IGV4cGxvaXQgdGhhdC4gSXQgdHVybnMgb3V0IGl0IGNhbiBvbmx5IGJlIGV4cGxvaXRlZCBmb3IgYSBzbWFsbCBpc2ggYW1vdW50LCBhcyBtb3N0IG9mIHRob3NlIGJsdWZmY2F0Y2hlcnMgd2VyZSBqdXN0IGJhcmVseSArRVYgY2FsbHMuIEFuZCBhIGh1bWFuIG9wcG9uZW50IHdobyBibHVmZmluZyB0b28gbXVjaCBpc24gbWF4aW1hbGx5IGV4cGxvaXRpbmcgdXMuIEhlIHdpbGwgaW5ldml0YWJseSBwaWNrIHNvbWUgYmFkIHNwb3RzLCB1c2UgYmFkIHNpemluZ3MsIGFuZCBwYXkgb2ZmIHRoZSB0b3Agb2Ygb3VyIHJhbmdlIHNvbWV0aW1lcy4gSSBhY3R1YWxseSBoYXZlIGl0IGluc3RhbGxlZCBvbiBteSB3b3JrIFBDIGJlY2F1c2UgSSBnZXQgbW9yZSB1c2Ugb3V0IG9mIGl0IGZyb20gdGhlcmUuCk5vIG9mZmljaWFsIHdhcm5pbmcgY2FtZSBvdXQgZm9yIHRoZSBzbGFuZGVyZXIuIApXaGVuIGVsZWN0aW9ucyBhcmUgc3RvbGVuLCBvdXIgZ292ZXJubWVudCBzaG91bGQgcHJvdGVzdC4gCldlIGFyZSBsb29raW5nIGZvciB0aGUgYmVzdCBzdHVkZW50cyB0byBjb21lIHRvIHRoZSBVbml2ZXJzaXR5IG9mIEJpcm1pbmdoYW0gYW5kIHdlIGFyZSB1c2luZyBwYXN0IGFuZCBwcmVkaWN0ZWQgYWNhZGVtaWMgcGVyZm9ybWFuY2UgYXMgb25lIG1ldGhvZCBvZiBpZGVudGlmeWluZyBzdWNoIHBlb3BsZS4gSGF2aW5nIGlkZW50aWZpZWQgdGhlbSwgd2Ugd2FudCB0byBzaG93IHRoYXQgd2Ugd2lsbCB2YWx1ZSB0aGVpciBjb250cmlidXRpb24gdG8gdGhlIFVuaXZlcnNpdHkgYW5kIHdlIGJlbGlldmUgdGhhdCB0aGV5IHdpbGwgZ2FpbiBpbW1lbnNlbHkgZnJvbSB0aGVpciB0aW1lIHdpdGggdXMuIFdlIGhvcGUgdGhhdCBzdHVkZW50cyB3aWxsIGJlIHBhcnRpY3VsYXJseSBhdHRyYWN0ZWQgdG8gc3R1ZHlpbmcgaGVyZSBiZWNhdXNlIHRoZSB1bmNvbmRpdGlvbmFsIG9mZmVyIGRlbW9uc3RyYXRlcyBvdXIgYmVsaWVmIHRoYXQgdGhleSBoYXZlIHRoZSBuZWNlc3NhcnkgcXVhbGl0aWVzIHRvIHN1Y2NlZWQgb24gb25lIG9mIG91ciBkZWdyZWUgcHJvZ3JhbW1lcy4KSSBub3QgaGFkIGFueSBvY2Nhc2lvbiB0byB1c2UgYSBtYWNPUyBib3ggYXMgYSBmaWxlIHNlcnZlciBzaW5jZSB0aGV5IHJlcGxhY2VkIFNhbWJhIHdpdGggdGhlaXIgb3duIENJRlMgaW1wbGVtZW50YXRpb24sIHNvIEkgY2FuIGJlZ2luIHRvIGd1ZXNzIHdoZXRoZXIgaXQgY2xldmVyIGVub3VnaCB0byBkbyB0aGluZ3MgbGlrZSBwcmUgZW1wdGl2ZWx5IGluZGV4aW5nIHRoZSBkcml2ZSBjb250ZW50cyBvciBwcmVmZXRjaGluZyB0aGluZ3MgdGhhdCB0aGV5IGtub3cgYSBjbGllbnQgaXMgbGlrZWx5IHRvIGFzayBmb3IgYWZ0ZXIgdGhlIGZpcnN0IHJvdW5kIHRyaXAuLiAKTXMgTXVycGh5IGlzIHRoZSBmb3VuZGVyIG9mIEdhbHdheSB0d28gbmV3ZXN0IGJyaWRnZSBjbHVicywgR2Fsd2F5IEVkdWNhdGlvbiBDZW50cmUgQnJpZGdlIENsdWIgaW4gQ2x1YWluIE1odWlyZSwgTW9uaXZlYSBSb2FkLCBhbmQgRmxhbm5lcnkgQnJpZGdlIENsdWIgaW4gRmxhbm5lcnkgSG90ZWwgb24gdGhlIER1YmxpbiBSb2FkLiAKT2RkbHkgZW5vdWdoIGl0IGlzIGV4dHJlbWVseSBsaWdodHdlaWdodC4uIApZb3UgY2FuIHNlZSB0aGF0IER1ZWNlc0NyYXp5OTkgY2FtZSBpbnRvIDY4JSBvZiB0aGUgcG90cywgcmFpc2VkIDQwJSBvZiB0aG9zZSB0aW1lcywgYW5kIGJldCBvdXQgYXQgdGhlIGZsb3AgMTAwJSBvZiB0aGUgdGltZSEgRXZlbiBpZiB5b3Ugd2VyZSBvbiBhbiBleHRlbmRlZCBjb2ZmZWUgYnJlYWsgc2l0dGluZyBvdXQsIHlvdSB3aWxsIGtub3cgZnJvbSB0aG9zZSBudW1iZXJzIHlvdSBhcmUgZGVhbGluZyB3aXRoIGEgbWFuaWFjLiAKVGhlIGJlc3QgdGhlcmFwaXN0cyBhbHNvIGluY2x1ZGUgaGFuZHMgYW5kIGZlZXQgYXMgcGFydCBvZiB0aGUgcmVmbGV4b2xvZ3kgdHJlYXRtZW50LCBhbmQgeW91IHNob3VsZCBmZWVsIGFuIGVmZmVjdCB0aHJvdWdoIHRoZSBlbnRpcmUgYm9keS4gSWYgdGhlIHRoZXJhcGlzdCBpcyBsZXNzIHNraWxsZWQgb3IgaW5hZGVxdWF0ZWx5IHRyYWluZWQsIHlvdSdsbCBqdXN0IGZlZWwgbGlrZSB5b3UndmUgaGFkIGEgdmVyeSBsb25nIGZvb3QgbWFzc2FnZS4KQSBGdW5lcmFsIFNlcnZpY2Ugd2lsbCBiZSBoZWxkIGF0IDE6MDBwbSwgVHVlc2RheSwgU2VwdGVtYmVyIDE4LCAyMDE4IGF0IE1BUlRJTiBCUk9USEVSUyBSSVZFUlZJRVcgQ0hBUEVMLiBJbnRlcm1lbnQgdG8gZm9sbG93IGF0IE1vdW50YWluIFZpZXcgQ2VtZXRlcnkuLiAKRm9yIGV4YW1wbGUsIHBvcHVsYXIgbWV0aG9kcyB0aGF0IGFyZSBhdmFpbGFibGUgYXQgQmV0RnJlZCBhcmUgVmlzYSwgTWFzdGVyY2FyZCwgTWFlc3RybywgTmV0ZWxsZXIsIFBheVBhbCwgU2tyaWxsLCBhbmQgVWthc2guIERlcG9zaXRpbmcgb3Igd2l0aGRyYXdpbmcgd2l0aCBjcmVkaXQgb3IgZGViaXQgY2FyZHMgaXMgbm90IGNoYXJnZWQgYnkgQmV0RnJlZCBpdHNlbGYsIGJ1dCBpdCBtaWdodCBiZSBieSBvdGhlciBpbnN0aXR1dGlvbnMgdGhhdCBtYXkgYmUgaW52b2x2ZWQgaW4gdGhlIHByb2Nlc3Npbmcgb2YgdGhlIHRyYW5zYWN0aW9uLiBBbHNvLCBCZXRGcmVkIGFsbG93cyBvbmUgZnJlZSBkZXBvc2l0IHBlciBkYXkgaWYgaXQgaXMgbWFkZSB3aXRoIE5ldGVsbGVyIG9yIFNrcmlsbCwgd2hpbGUgYWxsIGFkZGl0aW9uYWwgdHJhbnNhY3Rpb25zIGxlc3MgdGhhbiAxNzAgYXJlIHN1YmplY3QgdG8gYSAyLjklIGZlZS4gCkh1bmRyZWRzIG9mIHBva2VyIHBsYXllcnMgdHVybmVkIGF3YXkgZnJvbSBtYWluIGV2ZW50ClRoZXJlIGFyZSBhIGZldyB0aGluZ3MgeW91IG5lZWQgdG8gcmVtZW1iZXIgd2hlbiBsZWFybmluZyBob3cgdG8gcGxheSBDYXNpbm8gUG9rZXIuIEZpcnN0IGdldCB5b3Vyc2VsZiBhIGdvb2QgYm9vayBzbyB5b3UgY2FuIGxlYXJuIHRoZSBmdW5kYW1lbnRhbHMgb2YgdGhlIGdhbWUuIFRoZW4gZ2V0IGEgdmlkZW8gc28geW91IGNhbiBmdXJ0aGVyIGxlYXJuIGFuZCB2aXN1YWxpemUgd2hhdCB5b3UganVzdCByZWFkIGFib3V0LiAKRGlyOiBBYXJvbiBTb3JraW47IFN0YXJyaW5nOiBKZXNzaWNhIENoYXN0YWluLCBJZHJpcyBFbGJhLCBLZXZpbiBDb3N0bmVyLCBKb24gQmFzcywgTWljaGFlbCBDZXJhLCBDaHJpcyBPJ0Rvd2QuIDE1IGNlcnQsIDE0MCBtaW5zLgpJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIApUYWxpYSBtb3RpdmF0aW9uIGlzIGEgbXV0dWFsIGJlbmVmaXQsIGJlY2F1c2UgT2xpdmVyIGtpbGxlZCBoZXIgZmF0aGVyLiAKSSBqdXN0IHRoaW5rIHBlb3BsZSBzaG91bGQgYWNrbm93bGVkZ2UgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBzdHJpY3RseSBQRURzIGFuZCByZWNyZWF0aW9uYWwgZHJ1Z3MgbGlrZSBjb2tlIGFuZCBzcGVlZC4KSXQgZnJlZSB0byBwbGF5IGFuZCB0aHVzLCBhdHRyYWN0cyBhIGxvdCBvZiBraWRzIHdobyBjYW4gdHlwaWNhbGx5IGRyaXZlIHRvIGEgR2FtZVN0b3AgYW5kIGJ1eSBhIGdhbWUgb24gdGhlaXIgb3duLiAKRXQgaWwgbCdhIGNyaXQuIApZZWFoLCBidXQgYWdhaW4sIEkgbGl2ZWQgaGVyZS4gV2UgZ290IHRoZSBmdWxsIHNlYXNvbiB3b3J0aCBvZiBzbm93IGZyb20gYWJvdXQgbWlkIEphbnVhcnkgdG8gbWlkIEZlYnJ1YXJ5LiAKQXVmbWVya3NhbSEuIApUaGF0IGJlaW5nIHNhaWQsIHRoZXkgZG8gaGF2ZSBhIGdvb2QgY2h1bmsgbGVzcyBocCB0aGFuIHJvYWNoZXMsIHNvIGtlZXBpbmcgdGhlbSBpbiB0aGUgYmFjayB0byBiZSBwcm90ZWN0ZWQgYW5kIHBvcCBvZmYgYmlsZXMgaXMgaW1wb3J0YW50LgpDb3VsZCBiZSBhIHJvbGxpbmcgc2h1dHRlciBhbmQgYW4gdW5zdGVhZHkgaGFuZCwgb3IgeW91IG1pZ2h0IGhhdmUgY2hhbmdlZCBzb21lIHNldHRpbmcuIApUaGUgc21hbGxlc3QgdGhpbmcgY291bGQgZ2l2ZSB5b3UgYXdheS4gClRoZSBwcm9ibGVtIHdpdGggc2tpcm1pc2hlcnMgYW5kIGNhdmFscnkgaXNuIHRoZWlyIHV0aWxpdHksIHRoZWlyIHNwZWVkIHRvIG91dGZsYW5rL21hbmV1dmVyIHlvdXIgZW5lbXkgY291bGQgcHJvYmFibHkgYmUgQUkgYnJlYWtpbmcuIFRoZSBwcm9ibGVtIGlzIHRoYXQgdGhlaXIgaXMgc28gbXVjaCBnb2luZyBvbiBpbiBtb3N0IGxldmVscyB0aGF0IHlvdSByZWFsbHkgY2FuIGtlZXAgdHJhY2sgYW5kIGtlZXAgdGhlbSBzYWZlLiBJdHMgbXVjaCBlYXNpZXIgdG8ganVzdCB1c2UgaW5mYW50cnkuIEkgd2FzbiB2ZXJ5IGdvb2QgYXQgZ2V0dGluZyB0byBoaXMgY2xhc3Mgb24gdGltZS4gTmV5bWFuIGhhZCBhIGhhYml0IG9mIHB1dHRpbmcgaG9tZXdvcmsgYXNzaWdubWVudHMgdXAgb24gdGhlIGJsYWNrYm9hcmQgYXQgdGhlIHN0YXJ0IG9mIGNsYXNzLiBXaGVuIEkgY2FtZSBpbiBsYXRlLCBJIGNvcHkgdGhlIHByb2JsZW0sIHRha2UgaXQgaG9tZSBhbmQgd29yayBvbiBpdC4KVW5kZXIgZGVmYXVsdCBzZXR0aW5ncywgeW91IG5vdyBlbnRlciBtZWxlZSB3aXRoIHRoZSAicXVpY2sgbWVsZWUiIGtleS4gCklmIHRoZSBzdGF0ZSBpc24gaGl0IGluIHRoZSBwb2NrZXQgYnkgdGhpcywgd2hhdCBtb3RpdmF0aW9uIGRvIHRoZXkgZXZlciBoYXZlIHRvIGNvbnNpZGVyIGNoYW5naW5nIHRoZSBzdGF0dXMgcXVvPyBIYXZlIEkgbWlzc2VkIHNvbWV0aGluZz8gKEkgb2Z0ZW4gaGF2ZSEpSGV5IFNMQ2VycyEuIApMYXRlIHRvIHRoZSBwYXJ0eSwgYnV0IG15IGV4IGh1c2JhbmQgd2FzIHRoZSBncm9vbXppbGxhLiBJIGRpZG4gbWluZCBoaW0gYmVpbmcgbW9yZSBpbnZvbHZlZCB0aGFuIG1vc3QgbWVuIGJlY2F1c2UgaXQgd2FzIG15IHNlY29uZCB3ZWRkaW5nLCBidXQgaGUgZW5kZWQgdXAgdGFraW5nIHRvdGFsIGNvbnRyb2wuIApUaGlzIG5vdGljZSBpcyBpbnRlbmRlZCBzb2xlbHkgZm9yIHRoZSBwcmltYXJ5IEVhc3RMaW5rIHNlcnZpY2UgYWNjb3VudCBob2xkZXIgbmFtZWQgaGVyZWluLiBFbGV2YXRpb24gUGljdHVyZXMgZ2VuZXJhdGVzIGl0cyByZXZlbnVlcyB0aHJvdWdoIHRoZSBsYXdmdWwgZGlzdHJpYnV0aW9uIGFuZCBzYWxlcyBvZiBpdHMgd29ya3MgYW5kIGhhcyB0aGUgZXhjbHVzaXZlIHByb3ByaWV0YXJ5IHJpZ2h0IHRvIGRpc3RyaWJ1dGUgYW5kIHJlY2VpdmUgcmV2ZW51ZXMsIHByb2NlZWRzLCBhbmQgcHJvZml0cyBmcm9tIGl0cyB3b3Jrcy4gV2hpbGUgd2UgcmVtYWluIGFncmVlYWJsZSB0byBjb21tdW5pY2F0aW5nIHdpdGggeW91IHRocm91Z2ggeW91ciBJU1AsIHdlIHJlc2VydmUgb3VyIHJpZ2h0IHRvIHNlZWsgYSBOb3J3aWNoIG9yZGVyIHRvIGhhdmUgeW91IGlkZW50aWZpZWQgc2hvdWxkIHRoaXMgbWF0dGVyIHJlbWFpbiB1bnJlc29sdmVkLiBJZiB5b3UgaGF2ZSBxdWVzdGlvbnMgYWJvdXQgeW91ciBsZWdhbCByaWdodHMsIHlvdSBzaG91bGQgY29uc3VsdCB3aXRoIHlvdXIgb3duIHF1YWxpZmllZCwgbGVnYWwgY291bnNlbC4gVGhpcyBub3RpY2UgcHJvdmlkZXMgeW91IHdpdGggdGhlIGluZm9ybWF0aW9uIHlvdSByZXF1aXJlIGluIG9yZGVyIHRvIHJlc29sdmUgdGhlIGNsYWltZWQgaW5mcmluZ2VtZW50IG1hdHRlciBhbmQgcHJldmVudCBhbnkgYW5kIGFsbCBmdXJ0aGVyIGxlZ2FsIGFjdGlvbnMgdGhhdCBtYXkgYmUgY29udGVtcGxhdGVkIGFuZCByZWxldmFudCB1bmRlciBDYW5hZGlhbiBqdXJpc3BydWRlbmNlLgpIb3dldmVyLCBpZiB5b3UgaGF2ZSBhIHN0b3JlIG9yIGFuIGFyZWEgaW4gdGhlIGhvbWUgdGhhdCBjdXN0b21lcnMgY2FuIHZpc2l0IGluIG9yZGVyIHRvIGRpc2NvdmVyIHRoZSBwcm9kdWN0cyB0aGF0IHlvdSBzcGVjaWFsaXplIGluLCBpdCBpcyBsaWtlbHkgdGhhdCB5b3UgbWF5IHF1YWxpdHkgZm9yIHRoaXMgcGFydGljdWxhciBjcmVkaXQuLiAKU3RheSBxdWlldCBhbmQgb2JzZXJ2ZS4gWW91IGtub3cgd2hhdCB0byBsb29rIGZvciBub3cuClBvbGljZSBzYWlkIENDVFYgZm9vdGFnZSBzaG93ZWQgTmljaG9scyBhbmQgYSBmcmllbmQuIEF0IG9uZSBwb2ludCwgTmljaG9scyBmb3JjZWQgb3BlbiB0aGUgY29pbiByZXR1cm4gcGFydCBvZiB0aGUgbWFjaGluZS4KSXQgaXMgbm9ybWFsIHRvIGNhbGwgb3BlbiByYWlzZSBvZiBTQiBmcm9tIEJCIHdpdGggNjUlIG9mIGhhbmRzLiAKQnV0IHRvZGF5LCBwZW9wbGUgbmVlZCBvbmx5IHRvIGxvZyBvbiB0aGVpciBjb21wdXRlcnMgYW5kIHNpZ24gdXAgaW4gb25saW5lIHBva2VyIHNpdGVzIHRvIHBsYXkgcG9rZXIuIApTaG93IFByb2R1Y3Rpb24KSSBiZWVuIHBsYXlpbmcgYSBmZXcgbWludXRlcyBhIGRheSBmb3IgYWJvdXQgMiBtb250aHMgYW5kIEkgYWJvdXQgNDMwIGNoYXB0ZXJzIGluLiAKTXVzdExvdmVBbGxDYXRzICAzIHBvaW50cyAgc3VibWl0dGVkIDEzIGhvdXJzIGFnbwpSb2NrYXdheUcgdQoiSXQncyBiZWVuIGZ1biB0byB3YXRjaCBoaW0gZ2V0IGFjY2xpbWF0ZWQgd2l0aCB0aGUgdGVhbSwiIHNhaWQgRG91ZyBEdWNoYXJkdCwgdGhlIGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyIG9mIENoaXAgR2FuYXNzaSBSYWNpbmcuIApUaG9zZSB3ZXJlIHRoZSBvbmVzIHRoYXQgc2V0dGxlZCBhbmQgc3RheWVkIGluIHdoYXQgd2UgY2FsbCB0aGUgSnVzdCB0aGluayBvZiB0aGUgbGFuZ3VhZ2UgaGVyZTogU2luZGguIApBbmQgSSBnZXQgd2Vha2VyIGFuZCB3ZWFrZXIuIFNvIEkganVzdCBkb24ga25vdy4gQW5kIEkgbm90IHRoZSBiZXN0IGV4YW1wbGUgb2YgaG93IHRvIGNvcGUuIApNYWtlIHN1cmUgdGhhdCB0aGUgY2FyZCBoYXMgYmVlbiBhY2NlcHRlZC4uIApGcm9tIHRoZSBzdGFydCBvZiB0aGUgcmVsYXRpb25zaGlwIHRoZXJlIHdvdWxkIGhhdmUgYSBjbGVhciBmYXRoZXIvc29uIGR5bmFtaWMgYW5kIEdlb3JnZSB3b3VsZCBoYXZlIGxlYXJudCBob3cgdG8gcGFyZW50IGZyb20gTW9sbHkgYW5kIEFydGh1ciBpbiB0aGUgQnVycm93LiBOb3Qgc2F5aW5nIHRoYXQgR2Vyb2dlIHdpbGwgYmUgTm8uMSBEYWQgYnV0IGhlIHdhYWFhYWF5IG1vcmUgZXF1aXBwZWQgdG8gYmUgYSBkYWQgdGhhbiBTaXJpdXMgZXZlciB3YXMgc28gaXRzIHVuZmFpciB0byBjb21wYXJlIHRoZSB0d28uLiAKRm9ybWVyIElyaXNoIGludGVybmF0aW9uYWwgdHVybmVkIHByb2Zlc3Npb25hbCBnYW1ibGVyIFRvbnkgQ2FzY2FyaW5vIGlzIGFub3RoZXIgdG8gdGFrZSBoaXMgcGxhY2UgYW1vbmcgdGhlIHRhYmxlcywgYXMgaXMgcmV0aXJlZCBMZWluc3RlciBhbmQgSXJlbGFuZCBydWdieSBwcm9wIFJlZ2dpZSBDb3JyaWdhbi4KRm9ybWVyIEVQVCBhbmQgV1BUIENoYW1waW9uIEFuZHJleSBQYXRleWNodWsgKEdQSTI5OSwgIDY0KSBpcyBvbiB0aGUgYnJpbmsgb2YgZmFsbGluZyBvdXQgb2YgdGhlIEdQSTMwMC4gQ3VycmVudGx5IHNpdHRpbmcgaW4gMjk5dGggcG9zaXRvaW4sIFBhdGV5Y2h1ayBoYXMgY2FzaGVkIGluIG9ubHkgb25lIGV2ZW50IHNvIGZhciBhdCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLiBBIGRlZXAgcnVuIGluIG9uZSBvZiB0aGUgbGFzdCByZW1haW5pbmcgV1NPUCBldmVudCB3b3VsZCBjZXJ0YWlubHkgaGVscCB0aGUgUnVzc2lhbiBwcm8ga2VlcCBoaXMgc3RhdHVzLi4gCkkgdGFnIC91L1RoZU1lZ2FCdW5jZSBhbmQgL3Uva2VubnlfZzI4IHNpbmNlIHRoZXkgbWVudGlvbmVkIGhpcyBvdGhlciBpbnRybyBsaW5lcyBzbyB0aGV5IG1pZ2h0IGJlIGludGVyZXN0ZWQgaW4gdGhpcyBvbmUgdG9vLCBJIHN1cnByaXNlZCB0aGF0IG5vIG9uZSBldmVyIGJyaW5ncyB1cCBMaXUgS2FuZyBsaW5lIHdpdGggaGltIHNpbmNlIEkgZmVsdCB0aGF0IHdhcyBhcyBjbG9zZSBhcyAiZGlyZWN0bHkgc2F5aW5nIGl0IiBpbiB0aGUgZW50aXJlIGdhbWUuIFRoZSB3aG9sZSBjb2Rpbmcgb2YgInByb2NsaXZpdGllcyIgdG8gbWVhbiAicXVlZXIgc2V4dWFsaXRpZXMvdHJhbnMgcGVvcGxlIiBhbW9uZyB0aGUgY29uc2VydmF0aXZlIGFuZC9vciBob21vcGhvYmljIHNlY3Rpb25zIG9mIHRoZSBwb3B1bGF0aW9uIGhhcyBhIHByZXR0eSBsb25nIGhpc3RvcnkuLiAKIk9uIEZlYi4gMjUsIEkgdGhvdWdodCBteSBsaWZlIGhhZCBlbmRlZCwiIGEgdGVhcmZ1bCBTYW5kaXBrdW1hciBQYXRlbCwgNDcsIHNhaWQgVHVlc2RheSBhcyBoZSBzYXQgaW4gdGhlIG9mZmljZSBvZiBoaXMgYXR0b3JuZXksIERhdmlkIEdvbGRlbiwgaW4gU3R1YXJ0LCBGbGEuLCBXUFRWIHJlcG9ydGVkLgpGb3IgZXhhbXBsZSwgaWYgYW4gT1AgZG9lcyBub3QgYXBwcmVjaWF0ZSBjb21tZW50cyBvZiBhIHJlbGlnaW91cyBuYXR1cmUsIHRoZSBtb2RlcmF0b3JzIHdpbGwgZGVmZW5kIHRoZSBPUCBib3VuZGFyaWVzLiAKVGhlIG9sZCB1cHZvdGUgYnV0dG9uLCBvbiB0aGUgb3RoZXIgaGFuZCwgaXMgbmVpdGhlciAib3JhbmdlcmVkIiBub3IgInJlZGRpdCBvcmFuZ2UuIiBTbyB3aGF0IGNvbG9yIHdvdWxkIHdlIGRlc2NyaWJlIGZmOGI2MCBhcz8KSXQgYXBwZWFycy4gSXQgY29tZXMgYmFycmVsaW5nIHRvd2FyZCB0aGVtIGJlZm9yZSBzdG9wcGluZyBkaXJlY3RseSBpbiBmcm9udCBvZiBoZXIuIEl0IGlzIGEgNDBmdCBsb25nIGNyb2NvZGlsZSB0aGF0IGhhcyBsaXZlZCBpbiB0aGUgc3dhbXAgZm9yIGFnZXMuIApJdCdzIGp1c3Qgb25lIG9mIHRob3NlIHRoaW5ncyB5b3Ugd29uJ3QgYmUgYWJsZSB0byB1bmRlcnN0YW5kIGhvdyB1c2VmdWwgaXQgaXMgdW50aWwgeW91IGV4cGVyaWVuY2UgaXQuIApTbyB3aHkgaXMgdGhhdCBpbXBvcnRhbnQ/IFdlbGwsIGFzIG1lbnRpb25lZCwgYmV0cyBhcmUgYSBncmVhdCB3YXkgdG8gaW50aW1pZGF0ZSBhIGxlc3MgY29uZmlkZW50IG9wcG9uZW50LCBwcm92aWRpbmcgYWxsIHRoZSB2YXJpZWQgYWR2YW50YWdlcyB0aGF0IGludGltaWRhdGlvbiBzb21ldGltZXMgb2ZmZXJzLiAKVGhlIFVTRCA2NSwgYmF0dGVyeSBwb3dlcmVkIHNob2VzIGZlYXR1cmUgYSBsaWdodCBjaGFzZSBnYW1lIG9uIG9uZSBzaG9lIGFuZCBhIHJlbW90ZSBjb250cm9sIHN0b3JlZCBpbiB0aGUgb3RoZXIuIApHYWRnZXRzIEdpem1vcyBHYWxvcmUgQXQgQ0VTIDIwMTMyMDEzIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgSGlnaGxpZ2h0cyBOZXdlc3QgVGVjaG5vbG9neVRoZSBMRyBOZXh1czQgc21hcnRwaG9uZSBpcyBzZWVuIGF0IHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiBDRVMsIHRoZSB3b3JsZCdzIGxhcmdlc3QgYW5udWFsIGNvbnN1bWVyIHRlY2hub2xvZ3kgdHJhZGUgc2hvdywgcnVucyB0aHJvdWdoIEphbnVhcnkgMTEgYW5kIGlzIGV4cGVjdGVkIHRvIGZlYXR1cmUgMywxMDAgZXhoaWJpdG9ycyBzaG93aW5nIG9mZiB0aGVpciBsYXRlc3QgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRvIGFib3V0IDE1MCwwMDAgYXR0ZW5kZWVzLiAoUGhvdG8gYnkgRGF2aWQgQmVja2VyL0dldHR5IEltYWdlcykuIApSdWR5IEJPTFRFRCB0aHJvdWdoIHRoZSBkb2cgZG9vciBhdCB0b3Agc3BlZWQsIGFuZCBjaGFyZ2VkIHRoZSBmZW5jZSB3aXRoIGhpcyBiaWdnZXN0IGJhZGRlc3QgR1JPV0wgQkFSSyEgTmV4dCB0aGluZyBJIGhlYXIgaXMgdGhlIGZlbmNlIGNsaW1iZXIgdGh1bmtpbmcgZG93biBvbiB0aGUgb3RoZXIgc2lkZSwgYW5kIHJ1bm5pbmcgYXdheS4gUnVkeSBzdGF5ZWQgYXQgdGhhdCBmZW5jZSB1bnRpbCBtb3JuaW5nLCBzb2Z0bHkgZ3Jvd2xpbmcgbGlrZSAiSnVzdCBUUlkgYW5kIGNvbWUgYmFjaywgYSBob2xlLiIgU3VjaCBhIGdvb2QgYm9pLiA6ICkuIApUaGUgS2VycnkgTHVnYXIgQmlsbCBpcyBhYm91dCBnaXZpbmcgUGFraXN0YW4gbW9uZXkuIEZvciB0aGUgQW1lcmljYW5zLCB0aGUgbGVnaXNsYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBpbnRvIGJlY29taW5nIGFuIGluc3RydW1lbnQgb2YgZGVtb2NyYXRpc2F0aW9uLCBhbiBpbnN0cnVtZW50IG9mIGltcGVyaWFsaXNtLCBvciBhbiBpbnN0cnVtZW50IG9mIGRldmVsb3BtZW50IGFuZCBpdCBtYXkgZXZlbiBiZSBwb3NzaWJsZSB0aGF0IGl0IGlzIGFsbCB0aHJlZSwgb3Igbm9uZSBvZiB0aGUgdGhyZWUuIApUaGVzZSBvcHBvcnR1bml0aWVzIGFyZSBvZmZlcmVkIGluIHRoZSBzcHJpbmcgc2VtZXN0ZXIsIG92ZXIgc3VtbWVyIGJyZWFrIGFuZCB0aGUgZmFsbCBzZW1lc3Rlci4gCkRhdmlkIE1hbGxleSdzIDE5NzUgYmlvZ3JhcGh5ICJUaGUgRXJuaWUgS292YWNzIFBoaWxlIiBoZWxwZWQgc3ByZWFkIHRoZSBpbWFnZSBvZiBLb3ZhY3MgYXMgYSBwb2tlciBwbGF5aW5nLCBjaWdhciBjaG9tcGluZywgaWxsIHJlaGVhcnNlZCwgYnVkZ2V0IGJ1c3Rpbmcgc2F2YW50IGJ1cm5pbmcgdGhlIGNhbmRsZSBhdCBib3RoIGVuZHMuIApPbmx5IHdoZW4gd2UgcHVzaCBkcnVnIG1hcmtldGluZyBjYW1wYWlnbnMgYXNpZGUsIHdpbGwgd2UgYmUgYWJsZSB0byBmb2N1cyBvbiBvdXIgb3duIHBsZWFzdXJlcy4gCllvdSBjYW4gbWFrZSBhIGJpbmRpbmcgYWN0aW9uIElNTywgaWYgdGhlIGFjdGlvbiBoYXNuIGJlZW4gZnVsbHkgYW5ub3VuY2VkIHlldC4gSWYgSSB3ZXJlIHRoZSBmbG9vciwgSSB3b3VsZCBoYXZlIHJ1bGVkIHRoYXQgaGUgb24gdGhlIGhvb2sgZm9yIGNhbGxpbmcgYSBtaW4gcmFpc2UgbW9zdCBsaWtlbHksIGlmIHlvdSBhbHJlYWR5IHRyaWVkIHRvIHNob3ZlIGFmdGVyIGhlIHZlcmJhbGl6ZWQuIEkgYWdyZWUgaXQgaGlzIGZhdWx0IGFuZCBJIGRvbiBmYXVsdCB0aGUgZmxvb3IgZm9yIHJ1bGluZyBpbiB0aGUgd2F5IHRoYXQgdGhleSBkaWQgaW4gYSBkaWZmaWN1bHQgc2l0dWF0aW9uLi4gClRoZXkgYXJlIHNob3J0IHBpdGh5LCBwb2VtcywgdXN1YWxseSBvbmUgb3IgdHdvIHBhZ2VzLCB3aXRoIHN0YWNjYXRvIHJoeXRobXMsIG9mdGVuIG9uZSB3b3JkIGxpbmVzLCBhbmQgdmFyaWVkLCBvZnRlbiB1bnVzdWFsLCB1c2Ugb2YgcmVwZXRpdGlvbiwgYWxsaXRlcmF0aW9uLCBtZXRhcGhvciwgc2ltaWxlcyBhbmQgb3RoZXIgdGVjaG5pY2FsIHRvb2xzLi4gCk5vcnRoIEFtZXJpY2EgSW4gdGhlIFVuaXRlZCBTdGF0ZXMsIExheSdzIG9mZmVycyBhIG51bWJlciBvZiBmbGF2b3IgY29tYmluYXRpb25zLCBpbiBhZGRpdGlvbiB0byB0aGUgY2xhc3NpYyBjaGlwcy4gRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiBhbGxvd2VkIHJlbW92YWwgb2Ygd2FybmluZ3MgYWJvdXQgdmFyaW91cyBoZWFsdGggY29uc2VxdWVuY2VzIG9mIHRoZSBmYXQgc3Vic3RpdHV0ZS4gVGhlIGZvbGxvd2luZyBMYXkncyBmbGF2b3JzIGFyZSBhdmFpbGFibGUgbmF0aW9uYWxseSBpbiBDYW5hZGE6IENsYXNzaWMsIExpZ2h0bHkgU2FsdGVkLCBXYXZ5IE9yaWdpbmFsLCBEaWxsIFBpY2tsZSwgQkJRLCBLZXRjaHVwLCBTYWx0IFZpbmVnYXIsIFNtb2t5IEJhY29uLCBTZWEgU2FsdCBQZXBwZXIsIGFuZCBDaGVkZGFyIFNvdXIgQ3JlYW0uIApNdXN0YWZhIHRvb2sgdXMgdG8gdGhpcyBhbWF6aW5nIHJlc3RhdXJhbnQgYW5kIG9yZGVyZWQgdG9ucyBvZiBhcHBldGl6ZXJzIGFuZCBrZWJvYnMgYW5kIGRyaW5rcy4gClNwZWVkIGNsb3RoIGlzIHRoZSBtb3N0IHBvcHVsYXIgb3B0aW9uIGluIHBva2VyIHRhYmxlIGNvdmVyaW5ncyB0b2RheSwgd2hldGhlciB5b3UgcGxheSBwcm9mZXNzaW9uYWxseSBvciBhcmUganVzdCBhIGZhbiBvZiB0aGUgRnJpZGF5IG5pZ2h0IGF0IGhvbWUgZ2FtZS4gU3BlZWQgY2xvdGggbWFrZXMgcGxheWluZyBwb2tlciBhIGRyZWFtLCB3aGVuIGNvbXBhcmVkIHRvIHRoZSBncmVlbiBiYWl6ZSBvciBmZWx0IGNsb3RoLiBTb21lIGNhcmRzIGp1ZGRlciBhY3Jvc3MgYSBwb2tlciB0YWJsZSB3aXRoIHJvdWdoIG9yIHJhaXNlZCBzdXJmYWNlIGNsb3RoIGJ1dCBzcGVlZCBjbG90aCBpcyBhIHNtb290aCBzaWxreSBmYWJyaWMgdGhhdCBsZXRzIHlvdXIgY2FyZHMgc2xpZGUgYWNyb3NzIHRoZSBzdXJmYWNlIGxpa2UgYSBkcmVhbS4uIApBbHNvLCBnb2luZyBiYWNrIHRvIHlvdXIgZG9jdG9yIGFuYWxvZ3ksIGlmIGEgZG9jdG9yIGhhcyBhIHBhdGllbnQgd2hvIHJlZnVzZXMgdG8gaGVscCB0aGVtLCByZWZ1c2VzIHRvIHRlbGwgdGhlbSBhYm91dCB0aGVpciBzeW1wdG9tcywgZG9lc24gc2hvdyB1cCB0byB0aGVpciBhcHBvaW50bWVudHMsIGV0Yy4gCkluIGEgc3RhdGVtZW50IHJlbGVhc2VkIGFmdGVyIHRoZSBqdWRnbWVudCwgaGUgc2FpZCBpdCB3YXMgImNvbnRyYXJ5IHRvIHRoZSBmYWN0cyBhbmQgYW55IHBvc3NpYmxlIGxvZ2ljIGludm9sdmVkIGluIG91ciBpbmR1c3RyeSIuCkdpdmVuIHRoYXQgU2hhd24gd2FzIDUwIHdoZW4gdGhleSBtYXJyaWVkIGluIDE5OTcgYW5kIEtpbmcgd2FzIDc2LCB0aGV5IHRvbyBjb3VsZCBoYXZlIHJlbnRlZCBhIHBvb3Igd29tYW4gd29tYiBpbiBvcmRlciB0byBoYXZlIGNoaWxkcmVuLiBTaW5jZSAxOTkxLCB3aGVuIHRoZSBjb3VudHJ5IG5ldyBmcmVlIG1hcmtldCBwb2xpY2llcyB0b29rIGVmZmVjdCwgcHJpdmF0ZSBtb25leSBoYXMgZmxvd2VkIGluLCBmdWVsaW5nIGNvbnN0cnVjdGlvbiBvZiB3b3JsZCBjbGFzcyBob3NwaXRhbHMgdGhhdCBjYXRlciB0byBmb3JlaWduZXJzLiAKVGhhdCAiYXNzaWduZWQgdmFsdWUiIGZsdWN0dWF0ZXMgd2l0aCB0aGUgdmFsdWUgb2YgdGhlIGN1cnJlbmN5LiBUaGF0IGlzIHdoeSBnYXMgcHJpY2VzIGdvIHVwIGFuZCBkb3duLCBncm9jZXJpZXMgZ28gdXAgYW5kIGRvd24sIGV0Yy4gVGhlIGNvc3Qgb2YgcHJvZHVjaW5nIDEgYmFycmVsIG9mIG9pbCBuZXZlciBjaGFuZ2VzLCB0aGUgdmFsdWUgb2YgdGhlIGN1cnJlbmN5IGRvZXMuIFByZWNpb3VzIG1ldGFscyBkbyBmbHVjdHVhdGUgYXMgd2VsbCwgYnV0IGhhdmUgYSBtaW5pbXVtIHZhbHVlLiBJZiB0aGUgZG9sbGFyIGNvbGxhcHNlcywgaXQgaXMgd29ydGggTk9USElORy4gWW91IGNhbiB1c2UgaXQgZm9yIHRvaWxldCBwYXBlciBiZWNhdXNlIGl0cyB2YWx1ZSBpcyBhdHRhY2hlZCB0byB0aGUgZWNvbm9teSBhbmQgdGhlICJ2YWx1ZSBvZiB0aGUgZG9sbGFyIiBHb2xkIGlzIGF0IGxlYXN0IGFzIHZhbHVhYmxlIGFzIGl0IGlzIGluIHRoZSB3b3JzdCBGVU5DVElPTklORyBlY29ub215LiBGb3IgZXhhbXBsZSwgaWYgdGhlIGRvbGxhciBjb2xsYXBzZXMgYW5kIHRoZSBldXJvIGlzIHRoZSBjdXJyZW5jeSBvZiBsZWFzdCB2YWx1YWJsZSBlY29ub215LCBnb2xkIHdpbGwgaG9sZCBhIG1pbmltdW0gdmFsdWUgZXF1aXZhbGVudCB0byB0aGF0IGluIGNvdW50cmllcyB1c2luZyB0aGUgZXVyby4gSWYgeW91IHN0aWxsIGRvIG5vdCB1bmRlcnN0YW5kIHRoZSBmbHVjdHVhdGluZyB2YWx1ZSBvZiBmaWF0IGN1cnJlbmN5IG9yIG90aGVyIGN1cnJlbmNpZXMgc2ltcGx5IGdvb2dsZSAiZXhjaGFuZ2UgcmF0ZXMiCkV2ZXJ5dGhpbmcgeW91IG1lbnRpb25lZCByZWdhcmRpbmcgdGhlIEtvcmVhbiBmaWdodCBmb3IgZGVtb2NyYWN5IGlzIHRydWUuIApZb3UgaGF2ZSBubyBzZW5zZSBvZiB3aGljaCBpcyB1cCBvciBkb3duLiAKTGUgbWlsbGVwZXJ0dWlzLCBxdWUgbGVzIEFuY2llbnMgY29uc2lkcmFpZW50IGNvbW1lIHVuZSBwbGFudGUgZG91ZSBkdSBwb3V2b2lyIGRlIGNoYXNzZXIgbGVzIGRtb25zLCBzIGF1c3NpIGNoYXNzZSBkaWFibGUsIGhlcmJlIGRlIGxhIFNhaW50IEplYW4gW25kcjogZGVwdWlzIGF1IG1vaW5zIGxlIFhJViBtZSBzaWNsZV0sIGV0IGxhIHRyYWRpdGlvbiB2ZXV0IGQgcXVlIGxhIGN1ZWlsbGV0dGUgcyBsZSAyNCBqdWluICBtaWRpICgzKS4KQXMgY2hpbGRyZW4gc2hlIGFsd2F5cyBmYXZvcmVkIG15IGJyb3RoZXIgYW5kIEkgd2FzIHRoZSB1bmltcG9ydGFudCBjaGlsZC4gCk9uIGFpciwgSmltIFRyZWxpdmluZywgQnJ1Y2UgQ3JveG9uIGFuZCBBcmxlbmUgRGlja2luc29uIG9mZmVyZWQgdGhlIGVudHJlcHJlbmV1cnMgJDE1MCwwMDAgZm9yIDMwJSBvZiB0aGUgYnVzaW5lc3MuIApSRVNVTFRTOiBQbGFzbWEgaW5zdWxpbiBsZXZlbHMgYXQgZmVkIGFuZCBmYXN0ZWQgc3RhdHVzLCB3ZXJlIHNpZ25pZmljYW50bHkgaGlnaGVyIGluIHJhdHMgb24gSEYgQiBjb21wYXJlZCB0byB0aG9zZSBvbgpBbm90aGVyIGZhY3RvciB3YXMgdGhhdCBpdCBzZWVtcyBhIGxvdCBvZiAyMDE2IFRydW1wIHZvdGVycyBwcm9iYWJseSBsaWVkIHRvIHBvbGxzdGVycyBpbiBPY3RvYmVyIDIwMTYuIFRoZXJlIHdhcyBhIHJlbHVjdGFuY2UgZm9yIG1hbnkgdG8gYWRtaXQgeW91IHdhbnRlZCB0byB2b3RlIGZvciBoaW0sIHBhcnRpY3VsYXJseSBhZnRlciB0aGUgcHVzc3kgZ3JhYmJpbmcgdGFwZSBjYW1lIG91dC4gCklBTkFMIGJ1dCBpZiBhbnlvbmUgY291bGQgc3BlYWsgdG8gdGhhdCwgdGhhdCB3b3VsZCBiZSBlbmxpZ2h0ZW5pbmcuIE11ZWxsZXIgbWF5IGhhdmUgcGxheWVkIGEgaGFuZCBhbG1vc3QgZXhwZWN0aW5nIFRydW1wIHRvIHBhcmRvbiBNYW5hZm9ydCBmb3IgdGhpcyByZWdhcmRsZXNzIG9mIGhvd2V2ZXIgbWFueSB5ZWFycyBoZSBnb3Qgd2hpbGUgYSBzZXJpZXMgb2Ygb3RoZXIgY2hhcmdlcyBhcmUgaW4gdGhlIGN1dCB3YWl0aW5nLiAKQWdlZCAzMywgaGUgaXMgbGVhbiBhbmQgc3BvcnR5LCB3aXRoIGFuIG9wZW4gbmVja2VkIHNoaXJ0IGFuZCBhIHNwYXJrIG9mIGxhZGRpc2ggZ29vZCBodW1vdXIuIFJhbWlyZXosIHJlZmVycmluZyB0byBHaWxsaWVzIGJ1c3kgbmlnaHQgbGlmZSwgY2FsbGVkIGhpbSAiYSBwbGF5ZXIiLiBXaGVuIEJlY3JvZnQgYXNrcyB3aGF0IEdpbGxpZXMgdW5kZXJzdGFuZHMgdGhlIHBocmFzZSB0byBtZWFuLCBoZSBhbGwgYnV0IHdpbmtzIGF0IGhpcyBhdWRpZW5jZS4gIkFuIHVwc3RhbmRpbmcsIGludGVsbGlnZW50LCBnb29kIGxvb2tpbmcgbWVtYmVyIG9mIHRoZSBjb21tdW5pdHksIiBoZSBzYXlzLiAKQSBtYXNzYWdlIHRoZXJhcGlzdCBjYW4gYmVnaW4gdG8gcHJhY3RpY2UgbXVjaCBzb29uZXIsIGhvd2V2ZXIsIGFuZCBoZXIgZWR1Y2F0aW9uIGlzIGxlc3MgZXhwZW5zaXZlIGFuZCB0aW1lIGNvbnN1bWluZy4gRWl0aGVyIGNhbiBiZSBzZWxmIGVtcGxveWVkIG9yIGEgc21hbGwgYnVzaW5lc3Mgb3duZXIuIApNb25pY2EgR29tZXoKSUdJIFN0cmFpZ2h0IE4gR28gQ29yZGxlc3MgSGFpciBTdHJhaWdodGVuZXIgaXMgdGhlIHBlcmZlY3QgdG9vbCBmb3IgdGhlIHBlcnNvbiB3aG8gd2FudHMgdG8gbG9vayB0aGVpciBiZXN0IGJ1dCBpcyBhbHdheXMgb24gdGhlIGdvLiBTbWFsbCwgY29tcGFjdCBhbmQgbGlnaHR3ZWlnaHQsIGl0IGlzIHBlcmZlY3QgZm9yIHRyYXZlbCBhbmQgZWFzaWx5IGZpdHMgaW5zaWRlIHlvdXIgcHVyc2Ugb3IgdHJhdmVsIGJhZy4gVGhlIElHSSBTdHJhaWdodCBOIEdvIGhlYXRzIHVwIGluIGxlc3MgdGhhbiAyIG1pbnV0ZXMgYW5kIGdpdmVzIHlvdSB1cCB0byAzMCBtaW51dGVzIG9mIGNvbnRpbnVvdXMgdXNhZ2UuIFRoZSBJR0kgU3RyYWlnaHQgTiBHbydzIGZhc3QgaGVhdCBmZWF0dXJlIHJlYWNoZXMgdG8gMTAwIGRlZ3JlZXMgaW4gbGVzcyB0aGFuIDQgbWludXRlcy4gQWxzbyBjb250YWlucyBzcGVjaWFsIGFub2RpemVkIHN0eWxpbmcgcGxhdGVzIGZvciBlYXNlIG9mIHVzZSBhbmQgdG8gY3JlYXRlIGxvbmdlciBsYXN0aW5nIHN0eWxlcy4gVGhlIElHSSBTdHJhaWdodCBOIEdvIGNyZWF0ZXMgYSBzaGlueSBhbmQgc21vb3RoIGZpbmlzaCB0byB5b3VyIGhhaXIuIEl0J3MgUmVjaGFyZ2VhYmxlLCBwb3J0YWJsZSBhbmQgY29tZXMgd2l0aCBhbiBBQyBhZGFwdGVyLiBGZWF0dXJlczogQ29yZGxlc3MvcmVjaGFyZ2VhYmxlIE9uL09mZiBwb3dlciBzd2l0Y2ggQ29tcGFjdCBhbmQgbGlnaHR3ZWlnaHQgTmVvbiBwb3dlciBpbmRpY2F0b3IgbGlnaHQgUHVzaCB1cCB0byBvcGVuLCB0d2lzdCB0byBsb2NrIFN0eWxpc2ggY2hyb21lIGZpbmlzaCBGaXRzIHJpZ2h0IGludG8geW91ciBwdXJzZSBQZXJmZWN0IGZvciBuaWdodGxpZmUgYWN0aXZpdGllcyBQcm92aWRpbmcgMzAgbWlucyBvZiBjb250aW51ZWQgdXNlIFJlY2hhcmdlYWJsZSBmcm9tIG1haW4gcG93ZXIgKGluY2x1ZGVzIEFDIGFkYXB0ZXIpIERpbTogNCAzLzQiIHggMSAzLzQiClN1c3BlY3QgaW4gQ2FuYWRpYW4gVGlyZSBnb2xmIGNsdWIgYXR0YWNrIHRyaWVkIHRvIGpvaW4gSVNJUwpIZSBoYXMgdGFrZW4gaGlzIG1hdHRlciB0byB0aGUgQnJpc2JhbmUgQ291cnQgb2YgQXBwZWFsIGNsYWltaW5nIHRoZSBqdWRnZSBzZW50ZW5jZWQgaGltIGFzIGJlaW5nICJ1bnByb3Zva2VkIiByYXRoZXIgdGhhbiAibGFyZ2VseSB1bnByb3Zva2VkIiBhbmQgdGhhdCBoaXMgc2VudGVuY2Ugd2FzIG1hbmlmZXN0bHkgZXhjZXNzaXZlLgpNdWNoIGxpa2Ugc3RhbmRhcmQgY2FzaW5vIGNoaXBzLCB0aGVzZSBoYXZlIHRoZSAyLzEwMDAgcmVndWxhdGlvbiByZWdhcmRpbmcgdGhpY2tuZXNzLiAKQSBIZWFsaW5nIFRvdWNoIE1vYmlsZSBNYXNzYWdlClRvIGFuc3dlciB5b3VyIHF1ZXN0aW9uIGRpcmVjdGx5LCBhbGwgdGhlc2Ugb3BpbmlvbnMgZGVyaXZlIGZyb20gdGhlIGZhY3QgdGhhdCBteSBmaXJzdCBsb3ZlcyBpbiBtdXNpYyBhcmUgZWxlY3Ryb25pYywgYm90aCBhY2FkZW1pYyBhbmQgZGFuY2Ugc3R5bGVzLCB3aGljaCBpbmNvcnBvcmF0ZSB2ZXJ5IHNtYWxsIGFtb3VudHMgb2YgbHlyaWNzIHdoZW4gdGhleSBkbyBhdCBhbGwuCklmIHlvdSBkb24gbGlrZSBzdHJvbmcgY29mZmVlIGZsYXZvciBpdCByZWFsbHkgZ29vZCEiICJObywgSSBtZWFuIHdoYXQgaXMgY2FyYW1lbC4iIEVtcGxveWVlIHNwdXR0ZXJzLCB0cnlpbmcgdG8gZmlndXJlIG91dCBob3cgdG8gZXhwbGFpbiBjYXJhbWVsIHRvIHRoaXMgd29tYW4gd2hvIGlzIHVuZG91YnRhYmx5IHRoZSBtb3N0IGF2ZXJhZ2Ugd29tYW4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGhhcyBleHBlcmllbmNlZCBjYXJhbWVsIGJlZm9yZSBpbiBoZXIgNDArIHllYXJzLiAKQnV0IHRoYXQgc3RpbGwgbGVhdmVzIDMwLDAwMCBvZiB0aGVtIGluIFZpY3RvcmlhLCBhbmQgYWJvdXQgdGhyZWUgdGltZXMgdGhhdCBudW1iZXIgaW4gTmV3IFNvdXRoIFdhbGVzLiBTbyBwcm9ibGVtIGdhbWJsaW5nIGlzIGxpa2VseSB0byByZW1haW4gYSBzb2NpYWwgaXNzdWUgZm9yIHllYXJzIHRvIGNvbWUuLiAKQS4gRm9yIG1hbnkgeWVhcnMgbm93LCBJJ3ZlIHdhdGVyZWQgZmxhdHMgdGhhdCBoYXZlIGJlZW4gZmlsbGVkIHdpdGggc2VlZGluZyBtaXggYW5kIGFyZSBhYm91dCB0byBiZSBzZWVkZWQgd2l0aCB0aGUgaG90dGVzdCB3YXRlciB0aGF0IGNvbWVzIGZyb20gbXkga2l0Y2hlbiBzaW5rIHRhcCwgbWl4ZWQgd2l0aCBhIGxpdHRsZSBsaXF1aWQgc2Vhd2VlZCBmZXJ0aWxpemVyICAgYXJvdW5kIG9uZSB0ZWFzcG9vbiBpbiBlYWNoIGxpdHJlIG9mIHdhdGVyLiAKQXQgdGhlIGVuZCwgaXQgbG9va3MgbGlrZSBoZSBpcyBhcmNoaW5nIGhpcyBiYWNrIGJhY2t3YXJkcywgYnV0IGl0IGFwcGVhcnMgdG8gb25seSByZWFsbHkgYmUgaGlzIG5lY2sgYW5kIHZlcnkgdXBwZXIgYmFjayB0aGF0IHJvdW5kLCBhbmQgaGlzIGxvd2VyL21pZCBzZWVtIHRvIHN0YXkgcHJldHR5IHN0cmFpZ2h0LiAKQWZ0b24gQmFzdGlhbiBFbmNlLCA5NCwgcGFzc2VkIGF3YXkgVHVlc2RheSwgU2VwdC4gMjcsIGF0IHRoZSBSaXZlciBSb2FkIEJlZWhpdmUgSG9tZSBpbiBTdC4gR2VvcmdlLiAKS2VlcCBpbiBtaW5kIG9uIHRoaXMgc2l0ZSB0aG9zZSB0YWdzIGFyZSBwdXJlbHkgZm9yIHByZXB1YmVzY2VudHMgYW5kIGRvbiBldmVuIGNvdmVyIGFsbCBtaW5vcnMuIEV2ZW4gbWlkZGxlIHNjaG9vbCBnaXJscyBldmFkZSB0aGUgdGFnIG9uIHRoYXQgc2l0ZS4gClJlbGF0ZWQgRmlsZSBQREYgOiBLaW5ldGljIEdvbGYgUGljdHVyZS4gCkFuIGludGVyZXN0aW5nIGFuZCB5ZXQgdW5rbm93biBmYWN0IGlzIFdvem5pYWsgd2FudGVkIHRvIHRlYWNoIGVsZW1lbnRhcnkgc2Nob29sIGFwcHJlY2lhdGluZyB0aGUgdmFsdWFibGUgcm9sZSB0ZWFjaGVycyBzZXJ2ZS4gCkFzIGEgQ2FuYWRpYW4gd29tYW4sIEkgd2FudCB0byBiZWxpZXZlIGZvcm1lciBhdHRvcm5leSBnZW5lcmFsIEpvZHkgV2lsc29uIFJheWJvdWxkLCBJIHdhbnQgdG8gYWRtaXJlIGhlciBzdHJlbmd0aCwgaGVyIGhvbmVzdHkgYW5kIGludGVncml0eS4gCkZvciBSUEMgICB0aGlzIGlzIHBsYWNpbmcgeW91ciB0cnVzdCBpbiBDaHJpc3QgdG8gd29yayBhbGwgdGhpbmdzIG91dC4gCkxhdGVyIGluIHRoZSBhcnRpY2xlLCB5b3Ugd2lsbCBmaW5kIHdoYXQgSSBsZWFybmVkIGFib3V0IG15IGlubmVyIGdvZGRlc3MgYW5kIG15IHNlbnN1YWxpdHkgdGhyb3VnaCBteSBwZXJzb25hbCBqb3VybmV5IGFuZCBieSByZWFkaW5nIGJvb2tzLCB0YWtpbmcgY2xhc3NlcyBhbmQgY29ubmVjdGluZyB3aXRoIG90aGVycyBvbiB0aGUgc2FtZSBqb3VybmV5LiAKT24gb2xkZXIgcGhvbmVzIGl0IHZpZGVvIGFuZCB3aWZpIGNhbGxpbmcuIApMZSBsb2dlbWVudCBjb25zdGl0dWUgdW5lIHByb2NjdXBhdGlvbiBtYWpldXJlIGV0IHNlbnNpYmxlIGV0IHBhciBjb25zcXVlbnQsIHVuZSB0aG1hdGlxdWUgbyBsZXMgc2l0dWF0aW9ucyBkZSB2dWxucmFiaWxpdCBzb250IG5vbWJyZXVzZXMgZXQgZGl2ZXJzZXMuIElsIHMnYWdpdCBnYWxlbWVudCBkJ3VuIHRobWUgc291cyBsZXMgZmV1eCBkZSBsJ2FjdHVhbGl0IGxnaXNsYXRpdmUgY29tcHRlIHRlbnUgZGUgbGEgbG9pIHBvdXIgbCdhY2NzIGF1IGxvZ2VtZW50IGV0IHVuIHVyYmFuaXNtZSBybm92LiAKSSBtZWFuIGVpdGhlciB0aGV5IGdvaW5nIHRvIGZpbmQgc29tZSB3aXphcmRzIHRvIHRlbGVwb3J0IHRoZW0gREVFUCBiZWhpbmQgZW5lbXkgbGluZXMgb3IgdGhleSBnb2luZyB0byBmaW5kIGEgdGVsZXBvcnRlciBvZiBzb21lIGtpbmQgaW4gdGhlIHR1bm5lbHMuIFRoZSBkcm93IGFyZSBzdGlsbCAxMSBkYXlzIGFoZWFkLCBhbmQgd2UgZG9uIGV2ZW4ga25vdyBpZiB0aGUgZHJvdyBhcmUgdHJhdmVsbGluZyBvbiBmb290IChhbmQgdGhlIHByZXNlbmNlIG9mIHRoZSB3b3JtcyBhbmQgdGhlIGRpc3RhbmNlIHdvdWxkIGluZGljYXRlIHByb2JhYmx5IG1vcmUgRHVuZSB3b3JtIHN1cmZpbmcgdGhhbiB3YWxraW5nKS4KSW4gTmV3IFlvcmsgYSAyMCB5ZWFyIG9sZCBnaXJsIHdhcyByZXBvcnRlZCAiZG9pbmcgc3BsZW5kaWRseSAiJ2luIEJlbGxjdnVjIEhvc3BpICB0YWwgdG9kYXksIGZpdmUgZGF5cyBhZnRlciB1biAgZGVyZ29pbmcgYSBraWRuZXkgdHJhbnNwbGFudCBvcGVyYXRpb24uIApJdCBtYXkgY29tZSBhIGJpdCBwcmljZXkgYnV0IHRoaXMgaXMgc29tZXRoaW5nIHlvdSBzaG91bGQgdHJ5LiAKQnJpZGdlIGNsYXNzZXMgZm9yIGJlZ2lubmVycwpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbldoZW4gdGhlIG1hc3RlciBvZiBhcnRzeSwgY3JhZnR5IGlkZWFzIG1ha2VzIGhpc2ZpcnN0IGFwcGVhcmFuY2UgaW4gQWxidXJ5IG9uIFR1ZXNkYXksIEp1bHkgMywgaGUgd2FudHMgYWxsIHRoZSBNaW5pIE1ha2VycyB0byBicmluZyBhbG9uZyB0aGVpciBvd24gYXJ0IGNyZWF0aW9uLiAKV2hlbiB5b3UgdGhhdCBjbG9zZSB0byBzdWNoIGEgc21hbGwgZ3JvdXAgaXQgc28gY3J1Y2lhbCB0byBoYXZlIHJlZ3VsYXIgaW50ZXJhY3Rpb24gb3V0c2lkZSBvZiB0aGVtLiBJIGhhdmUgZGVmaW5pdGVseSBzZWVuIHRoZSBDaHJpc3RpYW4gc2Nob29sIGtpZCBjb21wbGV0ZWx5IHNoZWx0ZXJlZCBnbyBvdXQgYW5kIGdvIG51dHMgdGhlIHNlY29uZCB0aGV5IGxlZnQgdGhlIG5lc3QsIGFuZCBldmVuIHNlZW4gYSBjb3VwbGUgd2hvIGxpdGVyYWxseSBqdXN0IGNvdWxkIG5vdCBjb3BlIHdpdGggdGhlIHJlYWwgd29ybGQuIApJIGFjdHVhbGx5IHdhc2hlZCBkaXNoZXMgZm9yIGFub3RoZXIgY2hlZiB3aGVuIHRoZXkgd2VyZSB0b28gYnVzeS4gCkkganVzdCB0aG91Z2h0IHRoaXMgd2FzIG9uZSBvZiB0aGUgY29vbGVyIE5hcnV0byBzdGF0dWVzIEkgc2Vlbi4gSSBiZWVuIGR5aW5nIHRvIGdldCBteSBoYW5kcyBvbiBhbiBhcnQgcGllY2UgdG8gY29tbWVtb3JhdGUgbXkgZmF2b3JpdGUgYW5pbWUgYW5kIGFsd2F5cyB3YW50ZWQgc29tZXRoaW5nIHdpdGggdGhlIHlvdW5nZXIgTmFydXRvICh3aGljaCBJIHJlc29uYXRlIG1vcmUgd2l0aCkuIFNvIHdoZW4gdGhpcyBjYW1lIG91dCwgSSBoYWQgdG8gcHVsbCB0aGUgdHJpZ2dlci4uIApNZXRob2RzOiBQdHMgYXNzZXNzZWQgYnkgYSBzcGluZSBwaHlzaWNpYW4gcmFuZG9taXplZCB0byBHcm91cCAxLiBDUEdDOiByZWFzc3VyYW5jZSwgYXZvaWRhbmNlIG9mIHBhc3NpdmUgVHggKGJlZCByZXN0LCBoZWF0LCBiYWNrIHN1cHBvcnRzL2NvcnNldHMvYnJhY2VzKSwgYWNldGFtaW5vcGhlbiwgYSBwcm9ncmVzc2l2ZSB3YWxraW5nIHByb2dyYW0sIGEgbWF4aW11bSBvZiA0IHdrcyBvZiBjaGlyb3ByYWN0aWMgZGVsaXZlcmVkIGx1bWJhciBzcGluYWwgbWFuaXB1bGF0aW9uIChTTTogMiAzeC93ayBvZiBzaWRlIHBvc3R1cmUsIGhpZ2ggdmVsb2NpdHkgbG93IGFtcGxpdHVkZSB0ZWNobmlxdWUpLCBubyBleGVyY2lzZSBwcm9ncmFtLCByZXR1cm4gdG8gd29yayB3aXRoaW4gOCB3a3MuLiAKT2YgY291cnNlLCB0aGVyZSB3aWxsIGFsd2F5cyBiZSBzdHVkZW50cyB3aG8gd2FudCB0byBjaGVhdC4gQW5kIHN0dWRlbnRzIGJlaW5nIHNhdnZ5LCB0aGVyZSB3aWxsIGFsd2F5cyBiZSB3YXlzIHRvIGdhbWUgdGhlIHN5c3RlbSwgdG8gdGh3YXJ0IHRoZSBzb2Z0d2FyZSwgdG8gZWx1ZGUgY2FwdHVyZSBieSB0aGUgcm9ib3RzIHRoZXJlIHRvIGZlcnJldCB0aGlldmVzIG91dC4gSXQgd2lsbCAidXNlIGEgY29tYmluYXRpb24gb2YgbWFjaGluZSBsZWFybmluZyBhbGdvcml0aG1zIGFuZCBmb3JlbnNpYyBsaW5ndWlzdGljIGJlc3QgcHJhY3RpY2VzIHRvIGRldGVjdCBtYWpvciBkaWZmZXJlbmNlcyBpbiBzdHVkZW50cycgd3JpdGluZyBzdHlsZSBiZXR3ZWVuIHBhcGVycy4iLiAKQWNjb3JkaW5nIHRvIEtlbiBNY0NhcnRoeSwgbWFuYWdpbmcgZGlyZWN0b3Igb2YgcmVzZWFyY2ggYXQgQ3VzaG1hbiBXYWtlZmllbGQsIG9sZCBsaW5lIHJlYWwgZXN0YXRlIGZhbWlsaWVzIGxpa2UgdGhlIER1cnN0cyBhbmQgUnVkaW5zIHdobyBkaWRuJ3Qgb3ZlciBsZXZlcmFnZSBjYW4gcmlkZSBvdXQgdGhlIGN5Y2xlLiBCdXQgZGV2ZWxvcGVycyB3aG8gdG9vayBhZHZhbnRhZ2Ugb2YgZWFzeSBjcmVkaXQgZHVyaW5nIHRoZSBwZWFrIGFyZSwgaGUgc2F5cywgImluIGEgdmlzZS4iClZvbC4gMTQ1IE5vLiAxNyBMSVNQUyBOby4gCkhlIG1ha2luZyBzbyBtdWNoIGZyb20gcG9rZXIgdGhhdCBoZSBhYmxlIHRvIGhpcmUgaGlzIGJyb3RoZXIgYXMgYSBwZXJzb25hbCBhc3Npc3RhbnQuIApHd2lubmVycyAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxOSBkYXlzIGFnbwpJbiBmaWxtIHRoZXkgaGF2ZSB0byBibGFzdCBleHRyYSBsaWdodCBvbiB0byBkYXJrZXIgc2tpbiB0b25lcyB0byBtYWtlIHRoZW0gbm90IGxvb2sgbGlrZSB0aGV5IGFyZSBpbiBhIHNoYWRvdy4gCkluIGFkZGl0aW9uIHRvIHRoZSBkZWF0aHMsIGZvcm1lciBjb21iYXRhbnRzIGFyZSBvZnRlbiBvbiB0aGUgcmVjZWl2aW5nIGVuZCBvZiB0aHJlYXRzIGFuZCBoYXJhc3NtZW50IHRoYXQgamVvcGFyZGlzZSB0aGUgY2hhbmNlcyBvZiB0aGVtIHJlaW50ZWdyYXRpbmcgaW50byBjaXZpbCBzb2NpZXR5Li4gCldoZXJlIGFyZSB0aGV5IC4/IEkgdHVybmVkIHRoZSB3aG9sZSBraXQgZmlnaHQgd2l0aCBoaXMgInRveXMiLiBZZXMgLiBIZXJlIC4gCkxhc3QgeWVhciB0aGUgZmVzdGl2YWwgcmFpc2VkIGNsb3NlIHRvICQ1MDAwIGZvciB0aGUgb3JnYW5pemF0aW9uLiBNdGhvZGUgVHJhZGl0aW9uZWxsZSAyMDEwLCBPa2FuYWdhbiBWYWxsZXkkMzkuOTAgIDkxLzEwMFRoaXMgaGFzIGJlY29tZSBteSBCbHVlIE1vdW50YWluIGZhdm91cml0ZSwgYW5kIGl0IGJlZ2lucyB3aXRoIGZpbmVzc2UgYW5kIHN0eWxpbmcgb2YgdGhpcyBlbWluZW50bHkgZHJpbmthYmxlIDEyLjUgcGVyIGNlbnQgZml6ei4gSXQgd2FzIGRpc2dvcmdlZCAoUkQpIGluIEF1Z3VzdCAyMDE2IGFuZCB0aGVuIHNwZW50IGFub3RoZXIgeWVhciBpbiBib3R0bGUgYmVmb3JlIHJlbGVhc2UuIApXZSBoYWQgaW5zaWRlIGpva2VzIGFib3V0IHRoZSBSZWQgU294IGFuZCB0aGUgWWFua2VlczogSWYgdGhlIFJlZCBTb3ggd29uLCBJIHdvdWxkIGdldCBoaW0gYSBzYW5kd2ljaDsgaWYgdGhleSBsb3N0LCBoZSB3b3VsZCBoYXZlIHRvIGdldCBtZSBpY2VkIGNvZmZlZS4uIApUaGUgQVJUIEV2b2x1dGlvbiBhbmQgUmV2b2x1dGlvbgpXYXRjaCB5b3VyIG1vc3QgZGVzaXJhYmxlIHNwb3J0cyBldmVudCBvbiBvbmUgb2Ygb3VyIDUgZmxhdCBzY3JlZW4gVFZzLiAKU29tZXRpbWVzIGkgd2lzaCB0aGVyZSB3b3VsZCBiZSBubyBvdGhlciBwZW9wbGUgb24gdGhpcyBlYXJ0aCwgdGhhbiBqdXN0IG1lLCBiZWNhdXNlIGkgZmVlbCBsaWtlIHRoaXMgd291bGQgbWFrZSBtZSB2ZXJ5IGhhcHB5LCBiZWNhdXNlIGkgd291bGRudCBoYXZlIHRvIGRlYWwgd2l0aCBhbnlib2R5cyBicyBhbnltb3JlIGFuZCB0aGVuIGkgY291bGQgZmluYWxseSBkbyB3aGF0ZXZlciBpIHdhbnQuIApJJ20geW91bmcsIGR1bWIgYW5kIGZ1bGwgb2YuIApPZmZpY2lhbHMgdGhpbmsgUGFkZG9jayBicm91Z2h0IHRoZSB3ZWFwb25zIGludG8gdGhlIGhvdGVsIGJ5IGhpbXNlbGYgYnV0IGRpZCBub3QgcHJvdmlkZSBzcGVjaWZpY3MuLiAKSWYgU2luZ2Fwb3JlIGNvdWxkIG93biBzZXJ2aWNlLCBlZHVjYXRpb24gYW5kIHRyYWluaW5nIGFzIGEga2V5IGVsZW1lbnQgb2YgaXRzIG5hdGlvbmFsIGJyYW5kLCBpdCB3b3VsZCBmaWxsIGEgbmljaGUgdGhhdCBvbmx5IEphcGFuIGNhbiBjdXJyZW50bHkgbGF5IGNsYWltIHRvLiAKTm90IG9ubHkgYW0gSSBleHRlbnNpdmVseSB0cmFpbmVkIGluIHVuYXJtZWQgY29tYmF0LCBidXQgSSBoYXZlIGFjY2VzcyB0byB0aGUgZW50aXJlIGFyc2VuYWwgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgTWFyaW5lIENvcnBzIGFuZCBJIHdpbGwgdXNlIGl0IHRvIGl0cyBmdWxsIGV4dGVudCB0byB3aXBlIHlvdXIgbWlzZXJhYmxlIGFzcyBvZmYgdGhlIGZhY2Ugb2YgdGhlIGNvbnRpbmVudCwgeW91IGxpdHRsZSBzaGl0LiBJZiBvbmx5IHlvdSBjb3VsZCBoYXZlIGtub3duIHdoYXQgdW5ob2x5IHJldHJpYnV0aW9uIHlvdXIgbGl0dGxlICJjbGV2ZXIiIGNvbW1lbnQgd2FzIGFib3V0IHRvIGJyaW5nIGRvd24gdXBvbiB5b3UsIG1heWJlIHlvdSB3b3VsZCBoYXZlIGhlbGQgeW91ciBmdWNraW5nIHRvbmd1ZS4gQnV0IHlvdSBjb3VsZG4geW91IGRpZG4gYW5kIG5vdyB5b3UgcGF5aW5nIHRoZSBwcmljZSwgeW91IGdvZGRhbW4gaWRpb3QuIApXaXRoIFdpbmRvd3MgYW5kIE1hYywgZXZlcnlvbmUgaGFzIHRoZSBzYW1lIE9TIHdpdGggaXRzIG93biBzZXQgb2YgdG9vbHMgYW5kIGNvbXBvbmVudHMuIFlvdSBjYW4gaW5zdGFsbCB0aGlyZCBwYXJ0eSBzb2Z0d2FyZSwgZmluZCBhbHRlcm5hdGl2ZXMgdG8gYSBmZXcgb2YgdGhlIG5vbiBlc3NlbnRpYWwgcGFydHMsIGFuZCB0d2VhayBzb21lIG9mIHRoZSBzZXR0aW5ncywgYnV0IHRoYXQgYWJvdXQgaXQuClNjb3R0IFdlbGxlbmJhY2gsIGQnSGFsaWZheCBlbiBOb3V2ZWxsZSBjb3NzZSwgYSBwcmlzIGxhIHRyb2lzaW1lIHBsYWNlIGR1IHRvdXJub2kgaW50ZXJuYXRpb25hbCBQb2tlclN0YXJzIENhcmliYmVhbiBBZHZlbnR1cmUsIG1lcmNyZWRpLCBhdXggQmFoYW1hcy4KLyBlcnF3ZXIKSSB3YXMgZ29pbmcgdG8gcmVudCBhbiBvZmZpY2UgZG93bnRvd24gd2l0aCBhIGNvdXBsZSBmcmllbmRzIGFuZCBzZXQgdXAgbXVsdGlwbGUgY29tcHV0ZXJzIGFuZCBtb25pdG9ycyBhbmQgcGxheSBwb2tlciBmb3IgYSBsaXZpbmcuIExpZmUgd2FzIGdvb29vb29vb29vb2QuLiAKU29sYW5kZXIgYW5kIERyLiBNb25raG91c2UgaGFkIGVhY2ggb2YgdGhlbSB0aGVpciBQb2NrZXRzIHBpY2tlZDogdGhlIG9uZSBvZiBoaXMgc3B5IGdsYXNzIGFuZCB0aGUgb3RoZXIgb2YgaGlzIHNudWZmIEJveC4gQXMgc29vbiBhcyBMeWN1cmd1cyB3YXMgbWFkZSBhY3F1YWludGVkIHdpdGggdGhlIFRoZWZ0IGhlIGRpc3BlcnMnZCB0aGUgcGVvcGxlIGluIGEgbW9tZW50LCBhbmQgdGhlIG1ldGhvZCBoZSBtYWRlIHVzZSBvZiB3YXMgdG8gbGF5IGhvbGQgb24gdGhlIGZpcnN0IHRoaW5nIHRoYXQgY2FtZSBpbiBoaXMgd2F5IGFuZCB0aHJvdyBpdCBhdCB0aGVtLCBhbmQgaGFwcHkgd2FzIGhlIG9yIHNoZSB0aGF0IGNvdWxkIGdldCBmaXJzdCBvdXQgb2YgaGlzIHdheS4gClBvc3RlZCBieSBkYXZlamF5IGF0IDI6MDAgUE0gb24gSnVseSAyOCwgMjAwOApOb3QgZXZlbiBiZWluZyBjb25zdGlwYXRlZCAodGhhdCBpdCBvd24gcHJvYmxlbSEpIGJ1dCBpbWFnaW5lIHNpdHRpbmcgb24gMiAzIGRheXMgb2YgeW91ciBvd24gcG9vcC4gCkZlZGVyYWwgRXllICAgR0FPOiBNYWpvciBTZWN1cml0eSBGbGF3cyBhdCBGZWRlcmFsIEJ1aWxkaW5ncy4KTW9zdCBhcmUgbm90IGF3YXJlIG9mIHRoaXMgYnV0IHRoZXkgd2lsbCBpbmFkdmVydGVudGx5IGZlZWQgdGhlIG1hdHJpeCBiZWNhdXNlIHRoZXkgYXJlIGNvbnN0YW50bHkgYmVpbmcga2VwdCBpbiBhIHN0YXRlIG9mIGR1YWxpdHksIGZlYXIgYW5kIGNoYW9zIGJ5IGFsbCBtZWFucyBwb3NzaWJsZS4uIApPbmUgdGFsbHkgd2lsbCBiZSBlbm91Z2ggdG8gZ2V0IHRoZSBmbG9vZGdhdGVzIGdvaW5nLCBtdWNoIGxpa2UgaW4gMjAxMy4uIApTbyBhdCBsZWFzdCBkb3VibGUgdGhlIGdlbXMuLiAKQW5kIHNvIEluZGlhIGlzIG5vdyB3YXkgYWhlYWQgb2YgdGhlIFVTIGluIHRoZSBzZXggd2Fycy4gQnV0IHRoaXMgaXMgb25lIHdhciB3ZSBjb3VsZCBhY3R1YWxseSB3aW4gYW5kIG5vIG9uZSB3b3VsZCBkaWUgYW5kIGl0IHdvdWxkbiBjb3N0IGEgbG90IG9mIG1vbmV5LiAKWW91IGhhdmUgYSBwYXNzaW9uIG9yIGhhdmUgYW4gaWRlYSwgdGFrZSB0aGUgbGVhcCBvZiBmYWl0aC4gV2UgZ29pbmcgdG8sIGFzIGEgY29tbXVuaXR5LCBlbWJyYWNlIHdoYXQgeW91IGRvaW5nIGFuZCBoZWxwIGFzIG11Y2ggYXMgd2UgY2FuLiBTbyB3ZSB3YW50IHRvIGV4cG9zZSBwZW9wbGUgdG8gdGhpcyBjb21tdW5pdHksIGV4cG9zZSB0aGVtIHRvIHRoZSBlbmVyZ3kgYXJvdW5kIHRoZW0gYW5kIGtpbmQgb2YgY3JlYXRlIHRoYXQgaW5zcGlyYXRpb24gdG8gcmVhbGx5IGdvIGZvciBpdC4gdHVuZWQgdG8gU2lsaWNvbiBQcmFpcmllIE5ld3MgZm9yIGFkZGl0aW9uYWwgY292ZXJhZ2Ugb2YgT25lIFdlZWsgS0MsIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgU3RhcnR1cCBQdWIgUXVpeiB3ZSBob3N0aW5nIG9uIEp1bmUgMjAuCkknZCBsaWtlIHRvIGFzayBxdWVzdGlvbnMgdGhhdCBhcmUgaGFyZGVyLiAKMTMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnby4gCkkgaGF2ZSBhdXRpc20sIGFuZCBhbnlvbmUgd2hvIHNheXMgaXQgYWJvdXQgaW5mbGFtbWF0aW9uIGhhcyBvbmUgYmlnIHF1ZXN0aW9uIHlldCB0byBiZSBhbnN3ZXJlZCB0byBteSBzYXRpc2ZhY3Rpb246IGhvdyB0aGUgaGVjayBkb2VzIGluZmxhbW1hdGlvbiBtYWtlIGEgcGVyc29uIGxvZ2ljYWwgYW5kIGxpdGVyYWwgbWluZGVkLCB1bmF3YXJlIG9mIHRoZSBib2R5IGxhbmd1YWdlIG9mIG90aGVycywgbW9yZSBpbnR1aXRpdmUgd2l0aCBjb21wdXRlcnMsIGFuZCBvYnNlc3NlZCB3aXRoIHN1cGVyaGVyb2VzIG9yIFBva2Vtb24/IEFuZCBob3cgY2FuIHRha2luZyBpbW11bmUgc3VwcGxlbWVudHMgcmV3aXJlIGEgbWlzd2lyZWQgYnJhaW4/LiAKQSBRdWViZWMgYnV5b3V0IHdvdWxkbiBhYnNvbHZlIFNOQyBvZiBpdHMgbGVnYWwgcHJvYmxlbXMsIGJ1dCBkZWVwIHBvY2tldGVkIGJhY2tlcnMgd291bGQgYXQgbGVhc3QgaGVscCBpdCB0byB3ZWF0aGVyIHRoZSBzdG9ybSwgYW5kIGtlZXAgaXQgZmlybWx5IHBsYW50ZWQgaW4gdGhlIHByb3ZpbmNlLi4gCkNvbXBhbnkgcmVwcmVzZW50YXRpdmVzIGRpZCBub3QgcmVzcG9uZCB0byBBZCBBZ2UncyByZXF1ZXN0IGZvciBjb21tZW50LiAKRWdlciBUdXJrbGVyIGJ1IHRvcHJha2xhcmEgdmFyZGlrbGFyaW5kYW4gYmVyaSBIcmlzdGl5YW4gdG9wbHVsdWtsYXJsYSBiYXJpcyBpY2luZGUgeWFzYW1pcyBvbHNhbGFyZGkgYmVuIGRlIHNhbmlyaW0gImNvbWFybGFzdGlybWEiIGtlbGltZXNpbmkgYnUga2FkYXIgbGliZXJhbCBiaXIgc2VraWxkZSBrdWxsYW5pcmtlbiBrZW5kaW1pIHJhaGF0c2l6IGhpc3NlZGVyZGltLiBTdSBhbiBhbWEgY29rIHJhaGF0aW0sIGdvbnVsIHJhaGF0bGlnaXlsYSBzb3lsdXlvcnVtIE1hbGF0eWEgY29tYXJsYXN0aXJpbG1pcyBiaXIgRXJtZW5pIHNlaHJpZGlyIGRlcmtlbiwgaGljIGtlbmRpbWkgaXJrY2kgZmFsYW4gaGlzc2V0bWl5b3J1bS5YIGtpc2lzaW5kZW4gbWFrYWxlIGdvbmRlcmlwIGluc2FubGFyaSBidW51IG9rdW1hbWFrbGEgc3VjbGF5YW1henNpbi4gCkFjY29yZGluZyB0byBQbHV0YXJjaCwgdGhlcmUgd2FzIGEgZGVjcmVwaXQgb2xkIFNwYXJ0YW4gbm9ibGUgbmFtZWQgQ2xlb255bXVzLCB3aG8sIHRocm91Z2ggbHVjayBhbmQgcHJvYmFibHkgYSBsb3Qgb2YgbW9uZXksIG1hcnJpZWQgdGhlIG11Y2ggeW91bmdlciBDaGVsaWRvbmlzICh3aG8gd2FzIGEgbGFkeSwgaW4gY2FzZSB3ZSBoYWQgdG8gbWFrZSB0aGF0IGNsZWFyKS4gSXQgc2hvdWxkIGFsc28gYmUgbm90ZWQgdGhhdCBDbGVvbnltdXMgd2FzIGEgYml0IG9mIGEgLiAKQWRkaXRpb25hbGx5LCB5b3UgY2FuIGFkdm9jYXRlIGZvciBoYXJzaGVyIGFuaW1hbCBjcnVlbHR5IGxhd3MsIGFuZCBzdGlsbCBhZHZvY2F0ZSBhbmltYWwgcmlnaHRzLiBUaGV5IG5vdCBtdXR1YWxseSBleGNsdXNpdmUuIFRoYXQgd2h5IHRoZXJlIGFyZSBtYW55IHN0YXRlcyB0aGF0IGhhdmUgbGF3cyByZWdhcmRpbmcgdGhlIHRyZWF0bWVudCBvZiBhbmltYWxzIGZvciBjb25zdW1wdGlvbiwgaW5jbHVkaW5nIHRoYXQgdGhleSBhcmUgbm90IHRvIHN1c3RhaW4gcGFpbi9jcnVlbHR5L3RvcnR1cmUsIHdoaWxlIGJlaW5nIHByb2Nlc3NlZC4gCkl0IGNvbWVzIGRvd24gdG8gdHdvIGd1eXMsIGZvciBtZTogL3UvRmVldG9mS2F0eVBlcnJ5IGFuZCAvdS9NbmVsODQuIEJvdGggZ3V5cyBoYXZlIGNvbWUgYSBsb25nIHdheSBhbmQgYXJlIHNlcmlvdXNseSBhIGNvdXBsZSBvZiBmb3JjZXMgdG8gYmUgcmVja29uZWQgd2l0aC4gCkl0cyBzaWduYXR1cmUgZmVhdHVyZSBpcyB0aGUgaW50ZXJhY3RpdmUgd2hpY2ggYWxsb3dzIGZhbnMgdG8gc2VuZCBhIHZpcnR1YWwgZmlzdCBwdW1wIGluIHJlYWwgdGltZSB0byB0aGVpciBmYXZvdXJpdGUgaG9ja2V5IHBsYXllcnMgYWZ0ZXIgYW4gaW1wcmVzc2l2ZSBwbGF5LiAKUGVvcGxlIHNheSB0aGF0IGxvdHRlcnkgYW5kIENhc2lubyBHYW1lcyBhcmUgd29uIHdpdGggbHVjay4gV2hhdCBpZiB3ZSB0ZWxsIHlvdSB0aGF0IGl0IGlzIG5vdCBjb21wbGV0ZWx5IHRydWU/IFRoZXJlIGFyZSBzb21lIHN0cmF0ZWdpZXMgYW5kIG1ldGhvZHMgdGhhdCBhcmUgdXNlZCBieSB0aGUgdG9wIGxvdHRvIGFuZCBwb2tlciBwbGF5ZXJzIHRoYXQgY2FuIGRyYW1hdGljYWxseSBpbXByb3ZlIHlvdXIgY2hhbmNlcyBvZiB3aW5uaW5nIGV2ZW4gSW50ZXJuZXQgQ2FzaW5vIEdhbWVzLiBUaGUgYmVzdCBwYXJ0IGlzIHRoYXQgdGhlc2UgbWV0aG9kcyBhcmUgcmlzayBmcmVlIGJ1dCB3aGVuIHVzZWQgY29ycmVjdGx5LCB0aGV5IHdpbGwgZXZlbiBoZWxwIHlvdSBpbiB3aW5uaW5nIG1hc3NpdmUgamFja3BvdHMuIFlvdSBzdGlsbCBkb24ndCBiZWxpZXZlIHRoYXQgdGhlcmUgaXMgc29tZSBraW5kIG9mIHN5c3RlbSBvZiBmb3JtdWxhIHRvIHdpbiBsb3R0ZXJ5IG9yIGNhc2lubyBnYW1lcz8gQWxsIHlvdSBuZWVkIGlzIG9uZSBsb29rIGF0IHRoZSBMb3R0ZXJ5IEFuZCBDYXNpbm8gRWJvb2sgYW5kIGFsbCB5b3VyIGRvdWJ0cyBhcmUgZ29pbmcgdG8gdmFuaXNoIGluIHRoaW4gYWlyIQpTZXBwdWt1IHdvdWxkIGhhdmUgYmVlbiBoaXMgYW5zd2VyIHRoZSBob25vcmFibGUgd2FycmlvciB3YXkgb3V0LiAKVW5sZWFzaCB0aGUgVmlzaW9uIGhhcyBncm93biBzaW5jZSB0aGUgZmlyc3QgeWVhciBpbiBhbiBhc3BoYWx0IHBhcmtpbmcgbG90LiAiSXQgd2FzIHRoZSBtaWRkbGUgb2YgQXVndXN0IGFuZCB0aGUgYmxhY2sgYXNwaGFsdCB3YXMgbm90IGdvb2Qgb24gcGF3cywiIGNvbW1lbnRlZCBGVFAgUHJlc2lkZW50IFN0ZXZlbiBGYXJyZWxsLiBUaGUgZXZlbnQgbW92ZXMgdG8gUml2ZXJiZW5kIHBhcmsgd2hlcmUgYWN0aXZpdGllcyB3aWxsIHRha2UgYWR2YW50YWdlIG9mIG5vdCBvbmx5IHRoZSBncmFzc3kgbGF3biwgYnV0IHRoZSBEZXNjaHV0ZXMgUml2ZXIuClRvIG15IGtub3dsZWRnZSwgaWYgc2hlIGhhZCB0cmliYWwgY29ubmVjdGlvbnMgdG8gdGhlIGVsZGVycyBzaGUgY291bGQgcG90ZW50aWFsbHkgZ2V0IGN1c3RvZHkuIFRoYXQgd2hhdCBoYXBwZW5lZCBpbiBGbG9yaWRhLiBGaXJzdCBOYXRpb24gaGF2ZSB2ZXJ5IHNpbWlsYXIgcmVzZXJ2YXRpb24gbGF3cyBhcyB0aGUgVVMuIEl0IHdhcyBteSBmaXJzdCB0aG91Z2h0IGFzIEkgbGl2ZSBuZXh0IHRvIGEgbGFyZ2UgcmVzZXJ2YXRpb24gYW5kIEkgc2VlIGRhaWx5IGhvdyBtdWNoIHBvd2VyIHRoYXQgY2FuIHlpZWxkIGFzIHdlbGwgYXMgaG93IGNlbnRyaWMgaXQgaXMuIFRoaXMgd2FzIHRoZSBzdG9yeSBJIHdhcyByZWZlcnJpbmcgdG8gb2ZmIGhhbmQ6SSB3YW50IHRvIGJlIGNsZWFyIHRoYXQgSSBhbSB3ZWxsIGF3YXJlIG9mIHRoZSBoaXN0b3J5IG9mIG5hdGl2ZSBjaGlsZHJlbiBiZWluZyBzdG9sZW4gYW5kIHdoeSB0aGlzIGlzIHN1Y2ggYSBob3QgdG9waWMuIEkgYW0gbm8gd2F5IHRyeWluZyB0byBmZWFyIG1vbmdlciBvciBzaWRlIGVpdGhlciB3YXkuIFRoaXMgaXMganVzdCB3aGVyZSBteSBoZWFkIHdlbnQgYXMgd2UgYWxzbyBqdXN0IGhhZCBhIGJpZyBtZWRpYSBjdXN0b2R5IGlzc3VlIGluIG15IGhvbWUgc3RhdGUgb2YgV0EgcmVnYXJkaW5nIGEgc2ltaWxhciBpc3N1ZS4KQWxicmluY2sgd2FzIGJvcm4gYW5kIHJhaXNlZCBpbiBDaW5jaW5uYXRpIGJlZm9yZSBoZWFkaW5nIG9mZiB0byBQdXJkdWUgVW5pdmVyc2l0eSBmb3IgaGlzIHVuZGVyZ3JhZHVhdGUgZGVncmVlLiBIZSBjYW1lIGJhY2sgdG8gaGlzIGhvbWV0b3duIGFuZCBhdHRlbmRlZCB0aGUgVW5pdmVyc2l0eSBvZiBDaW5jaW5uYXRpIHRvIGdldCBoaXMgbWFzdGVycyBkZWdyZWUuIEhlIGhhcyBiZWVuIGEgc29saWQgd2FzdGUgZW5naW5lZXIgaW4gaGlzIGhvbWV0b3duIGZvciB0aGUgbGFzdCB0aHJlZSB5ZWFycy4KRmlsbWluZyBhbnkgZm9vZCBpdGVtIHNob3VsZCBiZSBmaW5lIGFzIHdlbGwgc2luY2UgdGhleSBoYXZlbiB5ZXQgYmVlbiBncmFudGVkIGFueSBjaXZpbCByaWdodHMgYXMgZmFyIGFzIEkga25vdy4uIApBbHNvLCBjb25zaWRlciByb2xsaW5nIG91dCB2LiAKQWZ0ZXIgZHJpdmluZyB0aGVtIDQwIG1pbnV0ZXMuIE5lYXJseSBhbiBob3VyIHdoZXJlIHlvdSBjb3VsZCBoYXZlIHNhaWQgIndhaXQgb2ggbm8gSSBtZXNzZWQgdXAgYmFkbHkgbGV0IG1lIGRvIHRoZSByaWdodCB0aGluZyIgaWYgYW55dGhpbmcgaGlzIG5ldyBzdGF0ZW1lbnQganVzdCBoaWdobGlnaHRzIHRoaXMgZW50aXJlIHRoaW5nIGJlaW5nIHByZW1lZGl0YXRlZC4gU28sIEkgdGhpbmsgd2l0aCB0aGlzIGxhdGVzdCAiY29uZmVzc2lvbiIgc29tZSB0aGluZ3MgbWFrZSBtb3JlIHNlbnNlIHVuZm9ydHVuYXRlbHkuIApTbyBJIGFza2VkIGhlciB3aGF0IHNoZSBsaWtlZC4gU2hlIG5hbWVkIDIgb3IgMyB0aGluZ3MgYW5kIGVtcGhhc2l6ZWQgdGhhdCB0aGUgTWV4aWNhbiBzdHJlZXQgY29ybiB3YXMgdmVyeSBnb29kLiAKT25seSB5b3UgY2FudCBkbyB0aGF0IGFueSBtb3JlLi4gCkx1Y2tpbHkgImJleW9uZCBhIHJlYXNvbmFibGUgZG91YnQgaXMgbm90IHRoZSBuZWNlc3NpdHkgaW4gYSBjaXZpbCBtYXR0ZXIuIEkgZm9yZ2V0IHdoYXQgdGhlIHRlcm0gaXMsIGJ1dCBpdCBhIG11Y2ggbG93ZXIgYnVyZGVuIG9mIHByb29mLiBFdmVuIGdldHRpbmcgZnJpZW5kcyB0byBzaWduIHdyaXR0ZW4gc3RhdGVtZW50cyBzYXlpbmcgdGhhdCB0aGUgcGVyc29uIG1hZGUgaXQgdXAgY291bGQgZG8gaXQuIApJcyBHbG9iYWwgUG9rZXIgdGhlIG9ubHkgZ2FtaW5nIGNvbXBhbnkgdG8gdXNlIHN3ZWVwc3Rha2VzIHByaXplcz8KVGhvdWdodGhhdmVyICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlbiBoZSBncmFiYmVkIGEgbmV3IHN0aWNrLCB1c2VkIGl0IGZvciBhIGNvdXBsZSBvZiBtaW51dGVzIGFuZCBzbWFzaGVkIHRoYXQgb25lIGluIGhhbGYgb3ZlciB0aGUgYm9hcmRzLi4gCkFmdGVyIGFib3V0IHR3byB3ZWVrcyBvZiB0aGlzLCB3ZSB3ZXJlIGF0IE1lbGlzc2EgaG91c2UgYWdhaW4sIE1lbGlzc2EgYW5kIERhdmUgaGFkIHZhbmlzaGVkLiBhbmQgTGF1cmEgYW5kIEkgd2VyZSBzaXR0aW5nIG9uIHRoZSBjb3VjaC4gQ29udmVyc2F0aW9uIHdhcyBhIGxpdHRsZSBlYXNpZXIgbm93LCBhbmQgd2Ugc3RhcnRlZCBjb21taXNlcmF0aW5nIHdpdGggZWFjaCBvdGhlciBhYm91dCBob3cgd2Ugd2VyZSBhbHdheXMgdGhlIG9uZXMgd2hvIHdlcmUgdGhlIHRoaXJkIHdoZWVscy4gSG93IGFsbCBvdXIgZnJpZW5kcyBoYWQgYm95ZnJpZW5kcyBhbmQgZ2lybGZyaWVuZHMgYW5kIHdlIGFsd2F5cyBlbmRlZCB1cCBqdXN0IGhhbmdpbmcgYXJvdW5kIG9uIG91ciBvd24uIE5laXRoZXIgb2YgdXMgd2VyZSBoaW50aW5nLiBXZSB3ZXJlIGp1c3QgdGhhdCBjbHVlbGVzcy4KSG93ZXZlciwgdGhlcmUgYXJlIGEgdG9uIG91dCB0aGVyZSB0aGF0IGFyZSBkZWZpbml0ZWx5IHdvcnRoIHlvdXIgdGltZS4gCldoaWxlIFJvbWUgb2J2aW91c2x5IHdhc24gdGhlIHNpemUgYmFjayB0aGVuIGl0IGlzIHRvZGF5LCB5b3Ugc3RpbGwgbG9va2luZyBhdCBhIGZhaXJseSBzbWFsbCBhcmVhIHdhbGxlZCBpbi5KZXJpa1RlbG9yaWFuICA1IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnb1RoZSBtZWNoYW5pY3MgaXNzdWUgaXMgaGFyZCwgbHVzdCBsb29rIGF0IERlc3RpbnkgMiBsYXVuY2guIApZb3UgYXJlIG9mZiB0byBhIGdvb2Qgc3RhcnQgdHJ5aW5nIHRvIGFuYWx5emUgdGhlIHNpdHVhdGlvbi4gClRoZSBuZXh0IGNob2ljZSB0aGF0IHlvdSBoYXZlIHdoZW4gaXQgY29tZXMgdG8gdGhlIHJvdW5kIHBva2VyIHRhYmxlIGlzIHdoZXRoZXIgb3Igbm90IHlvdSB3aWxsIHVzZSBhIHByZWZhYnJpY2F0ZWQgcG9rZXIgdG9wIG9uIHRoZSB0YWJsZS4gCkRvbmcgcXVhaS4gVGhpcyBoZXJiIGFsc28gaGVscHMgaW4gcmVsaWV2aW5nIGR5c21lbm9ycmhlYSwgYWJkb21pbmFsIGRpc2NvbWZvcnQsIGFuZW1pYSBhbmQgY29uc3RpcGF0aW9uLiBIb3dldmVyLCB0aGlzIGlzIG5vdCByZWNvbW1lbmRlZCB0byBiZSB0YWtlbiBieSBpbmRpdmlkdWFscyB3aXRoIGFudGljb2FndWxhbnRzIHNpbmNlIHRoaXMgY2FuIGluY3JlYXNlIHRoZSByaXNrIG9mIGJsZWVkaW5nLgpBY3R1YWwsIHByb2Zlc3Npb25hbCBjcm91cGllcnMgd2lsbCBzdGFuZCBieSB0aGUgZ2FtZSB0YWJsZSBhbmQgZGVhbCBjYXJkcywgdGhyb3cgZGljZSBhbmQgb3BlcmF0ZSB0aGUgcm91bGV0dGUgd2hlZWwgd2hpbGUgeW91IHNpdCBiYWNrIGF0IGhvbWUgc2lwcGluZyBvbiB5b3VyIGZhdm9yaXRlIGJldmVyYWdlLiAKSVJ1Yktub3R0eVBlb3BsZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpIZSBpcyBsdWNreSB0aGF0IHRoZSBsYXcgZG9lcyBub3QgYXR0YWNoIGFueSBwZW5hbHR5IHRvIHRoZSBqdWRnbWVudCBwYXNzZWQgb24gaGltLiBIZSBoYXMgZG9uZSBhIGdyZWF0IGRlYWwgb2YgaGFybSB0byB0aGUgY291bnRyeSBieSBzdXJyb3VuZGluZyBoaW1zZWxmIHdpdGggc3ljb3BoYW50cy4gCkkgbm90IHJlYWxseSBpbnRvIGVudGVydGFpbm1lbnQgYXJvdW5kIGFuZCB3aXRoaW4gZG93bnRvd24gU2FjcmFtZW50by4gSSBqdXN0IHdhbnRlZCBhIHNhZmUgbmVpZ2hib3Job29kIHRoYXQgZ3Jvd2luZyBhbmQgbmVhciBkb3dudG93biBmb3Igc2hvcnQgYnVzIG9yIHRyYWluIGNvbW11dGUgYXMgSSBsaWtlIHRvIGxpdmUgdW5kZXIgMTUgbWludXRlcyBhd2F5IGZyb20gd29yay4gCkhlIGFkZGVkOiAiQ29taW5nIHRvIFZlZ2FzIEkgZmVsdCBjb25maWRlbnQgYnV0IHlvdSBjYW4gbmV2ZXIgdGVsbC4gSXQgd2FzIHRlbnNlIHRvd2FyZHMgdGhlIGVuZCBidXQgdGhlbiBpdCB3YXMganVzdCBhIG1hc3NpdmUgZmVlbGluZyBvZiBlbGF0aW9uIHdoZW4gSSB3b24uIEl0IHdhcyBpbmNyZWRpYmxlLgpBTEVGQU5USVM6IFdlbGwsIHdlIG1ha2UgZXZlcnl0aGluZyBmcm9tIHNjcmF0Y2guIE90aGVyIHJlc3RhdXJhbnRzLCBldmVuIGdvb2QgcmVzdGF1cmFudHMsIHdpbGwsIGxpa2UsIG5vdCByb2FzdCB0aGVpciBvd24gcGVwcGVycy4gWW91IGNhbiBqdXN0IGJ1eSB0aGUgcm9hc3RlZCBwZXBwZXJzIGluIGEgY2FuLiAKSSB3YXMgYWxzbyBjb25jZXJuZWQgdGhhdCB0aGUgU29vZmFzIG1pZ2h0IGJlIHN1YmplY3QgdG8gZGFtYWdlIGZyb20gZW52aXJvbm1lbnRhbCBmYWN0b3JzIG9yIGplcmtzIHdobyBkb24ndCB3YW50IHVzIHRvIGhhdmUgbmljZSB0aGluZ3MuIFJpY2h0ZXIgYXNzdXJlZCBtZSB0aGF0IHRoZXkgYXJlIGRlc2lnbmVkIHRvIGJlICJhcyBpbmRlc3RydWN0aWJsZSBhcyBwb3NzaWJsZS4nJyBJIGFza2VkIGlmIHRoZSBwcmVzZW5jZSBvZiBkcm9wcGluZ3MgbGVmdCBieSBhIGdyZWVuIGVuZXJneSBoYXRpbmcgYmlyZCBJIHNhdyBvbiB0aGUgcGFuZWwgY291bGQgYWZmZWN0IGl0cyBhYmlsaXR5IHRvIGRyYXcgZW5lcmd5IGZyb20gdGhlIHN1bi4gUmljaHRlciBleHBsYWluZWQgdGhhdCBDaGFuZ2luZyBFbnZpcm9ubWVudHMgIm9wdGltaXplZCBwYW5lbHMgZm9yIG1heCBlZmZpY2llbmN5IHdoZW4gdGhlcmUgaXMgYSBzaGFkb3cgb3IgYW4gYXJtIGNvdmVyaW5nIHRoZSBwYW5lbC4nJyBTaGUgZGlkbid0IHNwZWNpZmljYWxseSBzYXkgYmlyZCBwb29wLCBidXQgSSBhc3N1bWUgaXQncyB0cnVlIGZvciB0aGF0IGFzIHdlbGwuCkNsa291ICA1MiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSW4gRmVicnVhcnksICJCbGFjayBQYW50aGVyLCIgdGhlIG1vdmllIHZlaGljbGUgZm9yIHRoZSBNYXJ2ZWwgQ29taWNzIHN1cGVyaGVybywgYmVjYW1lIHRoZSBoaWdoZXN0IGdyb3NzaW5nIG1vdmllIGJ5IGEgYmxhY2sgZGlyZWN0b3Igb2YgYWxsIHRpbWUuIApUaGUgVHdpbGlnaHQgc3RvcnkgaXMgYWJvdXQgYSBtb25zdGVyLiBFZHdhcmQgZGVmaW5lcyBoaW1zZWxmIGFzIHN1Y2guIApBbGwgSSdtIHNheWluZyBpcyBjYXN0IGEgd2lkZXIgbmV0IGFuZCB5b3UnbGwgc3RhcnQgdG8gYmUgb3BlbiB0byBtb3JlIHN0dWZmLiAKTm93IGlmIG9ubHkgSSBjYW4gdGFrZSBteSBvd24gYWR2aWNlLiBoYWhhIHNpZ2guCk90aGVyd2lzZSwgdGhlIG5ldyBTYW1zdW5nIEh1YiBnaXZlcyB5b3UgYWNjZXNzIHRvIHN0b3JlcyBmb3IgYXBwcywgZ2FtZXMsIGFuZCBib29rcy4gRWFjaCBvZiB0aGUgc2VjdGlvbnMgdGFrZSB5b3UgdG8gdGhlIHJlc3BlY3RpdmUgc3RvcmVzLiAKSSBxdWlja2x5IHZhbGlkYXRlZCBpdCBiZWZvcmUgSSBjYWxsZWQgaXQgYSB0aG91Z2h0bGVzcyBsaWUgY2F1c2UgSSBkb24gdHJ1c3QgbXkgb3duIGtub3dsZWRnZSBvZiBDYWxpZm9ybmlhIHN0YXRlIExlZ2lzbGF0dXJlIGhpc3RvcnksIEkgY2FuIGltYWdpbmUgd2h5IHRoYXRzIGV4dHJlbWUgdG8gYXNrIHRoZSBzYW1lIG9mIE9QLk9QIG1hZGUgYW4gZWFzaWx5IGRpc3Byb3ZhYmxlIGZhbHNlIGNsYWltIHRvIHB1c2ggYSBwb2ludCAgIHRodXMgdGhvdWdodGxlc3MgYW5kIGxpZSB3aXRoIG1vdGl2YXRpb24uIApJIGtub3cgZXhhY3RseSB3aGF0IHlvdSBtZWFuLiAKV291bGQgbmV2ZXIgc2F5IG5ldmVyLCB5b3UgbmV2ZXIga25vdywgYnV0IHdlIGFsbCBrbm93IHdoYXQgaXMgZ29pbmcgb24gYW5kIHdoYXQgaGFzIGRldmVsb3BlZCwgTHVvbmdvIHRvbGQgQ0ZPWCByYWRpby4gVGhlIGVuZCBvZiB0aGUgZGF5IEkgdGhpbmsgaXQgdGltZSB0byBtb3ZlIG9uIGFuZCBJIG9rYXkgd2l0aCB0aGF0LiBJIGhhZCBhIGdyZWF0IHNpeCB5ZWFycyBpbiBWYW5jb3V2ZXIsIEkgdGhpbmsgaXQgYSB3b25kZXJmdWwgY2l0eSwgSSByZWFsbHkgZW5qb3llZCBteSB0aW1lIHRoZXJlLiAKVW5kIGluIFN5cmllbi4gV2VubnN0IGRhIHdpZWRlciB3YXMgYXVmYmF1ZW4gd2lsbHN0LCBnZWh0IGRhcyBmYXN0IG51ciBub2NoIGluIHp1c2FtbWVuYXJiZWl0IG1pdCBBc3NhZC4gCjMuIApJdCBpcyBhZHZpc2FibGUgdG8gc2VlayBtZWRpY2FsIGhlbHAgYW5kIHRyZWF0bWVudCBpZiB5b3Ugc3VzcGVjdCB5b3UgaGF2ZSBSaGV1bWF0b2lkIEFydGhyaXRpcy4uIApCdXQgeWVhaCwgdGhpcyBndXkgaGFzICQ0LjQ4IGFuZCB5b3UgbWFrZSBtb3JlIGJ5IGp1c3QgdmFsdWUgYmV0dGluZyBzbyBYL1IgdG8gdGFrZSBvdmVyIHRoZSBhZ2dyZXNzaW9uIGlzIG1vc3QgYXBwcm9wcmlhdGUgZm9yIHRoaXMgZXhhY3Qgc2NlbmFyaW8uLiAKVGhhdCBtYWRlIG1lIHdhbnQgbm90aGluZyBtb3JlIHRoYW4gdG8gc3RhbmQgd2l0aCBSb3NlIGFuZCB0aGUgb3RoZXJzIGFnYWluLiAKRW5qb3khIDpELiAKSG93ZXZlciwgaW4gdGhlIHBhc3QgcHJpdmF0ZSBwcm9wZXJ0aWVzIHdlcmUgdGFwcGVkIGludG8gdGhlc2UgbWFpbnMgdXNpbmcgbXVjaCBzbWFsbGVyIGRpYW1ldGVyIGxpbmVzIGNhbGxlZCBzZXJ2aWNlIGxpbmVzLiBBbGwgb3IgcGFydCBvZiB0aGVzZSBvbGRlciBzZXJ2aWNlIGxpbmVzIG1heSBjb250YWluIGxlYWQuIApOb3csIGhlIChLZWpyaXdhbCkgaXMgaW4gcG93ZXIgYW5kIG5vdCBzaG93aW5nIGNvbmNlcm4gdG93YXJkcyBBbm5hJ3MgaGVhbHRoLCIgaGUgc2FpZC4gClByb3BlciBldGlxdWV0dGUgZm9yIGEgc3RhbmRhcmQgY3V0IGlzIGZvciB0aGUgcGxheWVyIHRvIHRoZSBkZWFsZXIncyByaWdodCB0byByZW1vdmUgYSBjb250aWd1b3VzIHBpbGUgb2Ygc2l4IG9yIG1vcmUgY2FyZHMgYW5kIHBsYWNlIGl0IGNsb3NlciB0byB0aGUgcGVyc29uIGN1dHRpbmcgdGhlIGNhcmRzIHRoYW4gdGhlIG9yaWdpbmFsIHBpbGUuIFRoZSBkZWFsZXIgdGhlbiBwbGFjZXMgdGhlIHBpbGUgY2xvc2VzdCB0byBoaW0gb24gdG9wIG9mIHRoZSBjdXQgcGlsZS4gKEZyb20gV2lraXBlZGlhKS4uIApFcm5pZSBLb3ZhY3MgY2VudGVubmlhbCBwdXRzIGZvY3VzIG9uIFRWIGdlbml1cycgZnV6enkgYnV0IGdyb3VuZGJyZWFraW5nIGFyY2hpdmUKSG93IG1hbnkgZmFucyBkb2VzIExhZHkgR2FnYSBoYXZlCkluIG90aGVyIHdvcmRzLCBGbG95ZCdzIGNyb3Nzb3ZlciByaXNlIHdhc24ndCBtZXRlb3JpYywgYW5kIHRoZSBLaW5nIGlzIHJpZ2h0IG9uIHRpbWUgZm9yIGhpcyBUTVQgZXNxdWUgdHJhamVjdG9yeS4uIApJbiBmYWN0LCBpdCBzZWVtcyBsaWtlIG1vc3QgcGVvcGxlIHdobyBoYXZlIHRvIG9wdGlvbiB0byBlYXQgbGFyZ2VyIGFuaW1hbHMgaW5zdGVhZCBvZiBidWdzIGludmFyaWFibHkgY2hvb3NlIHRoZSBmb3JtZXIgYW5kIG5vdCB0aGUgbGF0dGVyLgpUaGUgTWVsaWEgTmFzc2F1IEJlYWNoIFJlc29ydCAoV2VzdCBCYXkgU3RyZWV0KQoiSXQgd2FzIGEgZnVsbCBzd2luZywgcmlnaHQgaW50byB0aGUgYmFjayBvZiB0aGUgaGVhZC4iVGhlIHR3byBvdGhlciB0ZWVucyB0b2xkIHBvbGljZSB0aGV5IHRoZW4gZmxlZCB0aGUgc2NlbmUgdG8gZ2V0IGhlbHAgYXMgQ29sbGlucyBnb3QgaW50byBhIHdoaXRlIGhhdGNoYmFjay4iVGhleSB0aG91Z2h0IHRoZXkgd2VyZSBuZXh0LCIgU2hhdGVrIHNhaWQuVGhlIHR3byBvdGhlciB0ZWVucyB3ZXJlIGFibGUgdG8gZ2V0IGEgbmVpZ2hib3IsIHdobyB3ZW50IHRvIEt1bHBhJ3MgY2FiaW4gYW5kIGZvdW5kIGhlciBibGVlZGluZyBpbiB0aGUgYmVkcm9vbS4gCiJJIGhhdmUgaGFkIGEgc3VwZXIgcG9zaXRpdmUgZXhwZXJpZW5jZSB3aXRoIFByRVAgYW5kIGhhZCBubyBzaWRlIGVmZmVjdHMsIiBoZSBzYWlkLiAKU28gbWFrZSBzdXJlIHlvdSBhcmUgbG9va2luZyB1cCBvbiB0aGUgd2ViIGhvdyB0byBiYWNrIHVwIHlvdXIgZGF0YWJhc2UuIApUaGUgUmVpa2kgYXR0dW5lbWVudCBwcm9jZXNzIHRha2VzIHBsYWNlcyBpbiBhIGNlcmVtb255IGR1cmluZyB3aGljaCBhIFJlaWtpIE1hc3RlciBpbml0aWF0ZXMgdGhlIHN0dWRlbnQgaW50byB0aGUgdXNlIG9mIHRoZSBzeW1ib2xzLiBUaGUgYmVsaWVmIGlzIHRoYXQgdGhlIFJlaWtpIE1hc3RlciBjcmVhdGVzIGFuIGVuZXJneSBwYXR0ZXJuIHdoaWNoIGVuYWJsZXMgdGhlIHN0dWRlbnQgdG8gbm90IG9ubHkgcmVjZWl2ZSB0aGUgZW5lcmd5IHJlcHJlc2VudGVkIGJ5IHRoZSBzeW1ib2xzIGJ1dCB0byBiZSBhYmxlIHRvIHRyYW5zbWl0IHRoZSBSZWlraSBlbmVyZ3kgdW50byBvdGhlcnMuClRyYWN0b3IgZW50aHVzaWFzdHMgZmxvY2sgdG8gYW5udWFsIHNob3cKU29tYnJlcm84OCB1CkF0IGxlYXN0IEkgaG9wZSBzbyBiZWNhdXNlIHRoZSBwbG90IG5lZWRzIGEga2ljayBpbiB0aGUgcGFudHMuIApXZW50IGZyb20gbGlrZSA1MCA2MCUgaVBva2VyL1NORSB0byA0MCBpbiAyMDE1LCB0byBsaWtlIDI1IGluIHN0YXJzIGluIDIwMTYuCkhvcG9hdGUgZnJvbnRlZCB0aGUgTlNXIFJ1Z2J5IExlYWd1ZSBjb25kdWN0IHJldmlldyBwYW5lbCBvbiBXZWRuZXNkYXkgbmlnaHQgYWZ0ZXIgcGxlYWRpbmcgZ3VpbHR5IHRvIHRocmVlIGNvdW50cyBvZiBjb250cmFyeSBjb25kdWN0IGFuZCBvbmUgb2Ygc3RyaWtpbmcganVzdCBtaW51dGVzIGFmdGVyIGNvbWluZyBvZmYgdGhlIGJlbmNoIHdoaWxlIGZpbGxpbmcgaW4gZm9yIE5hcnJhd2VlbmEgSGF3a3MgYWdhaW5zdCBGb3Jlc3R2aWxsZSBGZXJyZXRzLgpJdCdzIHRvbyBjbG9zZSBvbiB0aGUgd2F5IHRvIGNhbGwgZGVzaXJhYmxlIG5vdywgaG93ZXZlciBpdCBKb3JkYW4gbWF5IHBlcmhhcHMgcGVyaGFwcyBnZXQgb25lIHBhcnRpY3VsYXIgc2xpZ2h0IHJpZGdlIGF0IG9uZSBwYXJ0aWN1bGFyIGJlZ2lubmluZyBmb3IgdGhlIGhvbGlkYXlzIGR1ZSBpZiB5b3Ugd2FudCB0byBoaXMgdHdlbHZlIHllYXJzIHRvd2FyZHMgZXhwZXJpZW5jZS4gSG93ZXZlciwgaXQgd291bGRuJ3QgYmUgc2hvY2tpbmcgaW4gdGhlIGVyYSBmb3IgdGhlIGNvbXBlbnNhdGlvbiBjYXAgYXMgbG9uZyBhcyB0aGUgQ2hpZWZzIGdvIHdpdGggdGhlIGJlZ2lubmVyLi4gClRoYXR2b2ljZXdhc3JlYWwgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpCZWdsZWl0ZXIgc2F5cyBoaXMgcG9rZXIgc3VjY2Vzcywgd2hpY2ggaW5jbHVkZXMgYSBuaW50aCBwbGFjZSBmaW5pc2ggaW4gYW5vdGhlciBXb3JsZCBQb2tlciBUb3VyIGV2ZW50IGxhc3QgQXVndXN0LCBoYXNuJ3QgYmVlbiBhYm91dCBzb21lIHNwZWNpYWwgbWFzdGVyeSBvZiBwcm9iYWJpbGl0aWVzIGFuZCByaXNrLiAiVGhlcmUgYXJlIHBsZW50eSBvZiBwZW9wbGUgd2hvIGFyZSB2ZXJ5IGdvb2QgcG9rZXIgcGxheWVycyB3aG8gbmV2ZXIgd29ya2VkIG9uIFdhbGwgU3RyZWV0IGFuZCBtYXkgaGF2ZSBldmVuIGRyb3BwZWQgb3V0IG9mIHRoZWlyIGNvbW11bml0eSBjb2xsZWdlLCIgaGUgc2F5cy4gVG8gaGltLCBzdWNjZXNzIGlzIG1vcmUgYWJvdXQgcmVhZGluZyB0aGUgb3Bwb25lbnQuIEhlIGxpa2VucyBlbnRlcmluZyBhbiBhbGwgaW4gSG9sZCAnRW0gc2hvd2Rvd24gdG8gYSBiaWRkaW5nIHdhciBhZ2FpbnN0IHNvbWUgb3RoZXIgaW52ZXN0bWVudCBmaXJtIHRyeWluZyB0byBidXkgdGhlIHNhbWUgYXNzZXRzIGhlIHdhbnRzIHRvIGJ1eS4gWW91IGRvbid0IHdhbnQgdG8gYmUgdGhlIG9uZSB0byBibGluaywgb3IgeW91J2xsIGxvc2UuIFNheXMgQmVnbGVpdGVyOiAiV2hlbiBJJ20gZ29vZCBJJ20gcHJvY2Vzc2luZyBldmVyeXRoaW5nIHRoYXQncyBnb2luZyBvbiBhcm91bmQgbWUgYW5kIG1ha2luZyBnb29kIGRlY2lzaW9ucyB1bmRlciBwcmVzc3VyZS4iIFdhaXQgYSBtaW51dGUgaXMgaGUgdGFsa2luZyBhYm91dCBiYW5raW5nIG9yIHBva2VyPyBZb3UgZ3Vlc3NlZCBpdDogYm90aC4KVHlwaWNhbGx5LCBtYW55IHBlb3BsZSB0aGF0IHdhbnQgdG8gYnV5IHBsYXN0aWMgcG9rZXIgcGF5aW5nIGNhcmRzIGFyZSBpbnRlcmVzdGVkIGluIHBsYXlpbmcgYW4gYWN0dWFsIGdhbWUgb2YgcG9rZXIuIE9uIHRoZSBvdGhlciBoYW5kLCB0aGVyZSBhcmUgYWxzbyBob2JieWlzdHMgdGhhdCBlbmpveSBtYWtpbmcgaG91c2VzIGZyb20gY2FyZHMuIApJdCBjYW4gYmUgdG91Z2ggZm9yIGEgSG9sbHl3b29kIGZpbG0gdG8gYXBwZWFzZSB0aGUgaGFyZGNvcmUgcG9rZXIgY3Jvd2QsIHdobyBhcmUgcXVpY2sgdG8gY3JpdGljaXNlIHRoZSB0aW5pZXN0IGluYWNjdXJhY3kuIERlYWwgKGEgY3JpdGljYWwgZmxvcCBzdGFycmluZyBCdXJ0IFJleW5vbGRzKSByZXBsYWNlZCB0aGUgbm9pc2Ugd2hlbiB5b3Ugd2luIGEgcG90IG9ubGluZSBmcm9tIGEgc3VidGxlICAgYW5kLCBkYXJlIEkgc2F5LCBiZWF1dGlmdWwgICBzb3VuZCBvZiBjaGlwcyBzbGlkaW5nIGFjcm9zcyB0aGUgZmVsdCB0byBhIHByb2xvbmdlZCAia2EgY2hpbmciIG5vaXNlLCBhbmQgZXZlbiB0aGF0IHdhcyBlbm91Z2ggdG8gcHJvdm9rZSBkZXJpc2lvbiBmcm9tIHRoZSBwbGF5ZXIgYmFzZS4uIAoiV2hlbiBJIGxvb2sgYXJvdW5kLiAKQWxsIG9mIHRoYXQgZG9uZSB3aXRoIGEgc3RhYmxlIGJhc2UuIEVhcmxpZXIgaW4gdGhlIG5pZ2h0LCBBQiBkZSBWaWxsaWVycyBoYWQgcHJvdmlkZWQgYSBtYXN0ZXJjbGFzcyB3aXRoIGEgdmFyaWV0eSBvZiBzd2VlcHMgYW5kIHNjb29wcy4gCkRhbm4gemVyc3RydCBlciBidWNoc3RibGljaCBkaWUgRGluZ2UgKGluIHNlaW5lbSBTcGllbCwgaW4gc2VpbmVtIExlYmVuKSwgZGllIGVyIHp1dm9yIGJlciBUYWdlLCBXb2NoZW4gdW5kIE1vbmF0ZSBhdWZnZWJhdXQgaGF0LiAKMikgUGVvcGxlIHJlbGF0aW9uc2hpcHMgICBObyBtYXR0ZXIgd2hvIG11Y2ggc29tZW9uZSBiaXRjaGVzIGFuZCBjb21wbGFpbnMgYWJvdXQgdGhlaXIgZmFtaWx5IGFuZC9vciBTTy4gCkFsc28sIHRoZXJlIGFyZSBwbGVudHkgb2YgZnJlZSBhbHRlcm5hdGl2ZSBvZmZpY2Ugc3VpdGVzIHdoaWNoIGFyZSBjb21wYXRpYmxlIHdpdGggTWljcm9zb2Z0J3MgdmVyc2lvbi4gCkkgbWVhbiwgaW4gVEYyIChJIHRhbGtpbmcgdGVhbSBmb3J0cmVzcywgbm90IFRpdGFuZmFsbCkgdGhlIEhlYXZ5IGhhcyBhIGhpdGJveCBwcm9iYWJseSAzeCB0aGUgc2l6ZSBvZiB0aGUgU2NvdXQgYnV0IGl0IGNvbXBsZXRlbHkgYmFsYW5jZWQgc2luY2UgaGlzIERQUyBpcyBoaWdoZXIgYnkgdGhlIHNhbWUgZmFjdG9yLiBUaGUgZHJhc3RpYyBzaXplIGRpZmZlcmVuY2VzIGNhbiB3b3JrLCBhbmQgaW4gZmFjdCBpdCBpbXBvcnRhbnQgdG8gYmUgYWJsZSB0byByZWNvZ25pemUgYSBjaGFyYWN0ZXIgZnJvbSB0aGVpciBzaWxob3VldHRlIHdoaWNoIEFwZXggZG9lcyB3ZWxsIChhZ2Fpbiwgc2VlIFRGMiBhcyB3ZWxsIGFzIE92ZXJ3YXRjaCBmb3Igb3RoZXIgZ29vZCBleGFtcGxlcykuIFRoZSBiaWdnZXIgY2hhcmFjdGVycyBqdXN0IGRvbiBoYXZlIHRoZSBiZW5lZml0cyB0byBvdXR3ZWlnaCB0aGUgZHJhd2JhY2tzIHJpZ2h0IG5vdywgd2l0aCB0aGUgcG9zc2libGUgZXhjZXB0aW9uIG9mIFBhdGhmaW5kZXIgd2hvIHdvdWxkIGJlIGVhc2lseSB0aGUgYmVzdCBsZWdlbmQgaWYgaGUgd2FzIGFzIHNtYWxsIGFzIFdyYWl0aC4KTXlEcmFnb25zTWlsbyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkFuZCBpbiBtYW55IHdheXMsIFByZXZpdGUncyBjYXJlZXIgZW1ib2RpZXMgdGhlIHdhbmluZyBkYXlzIG9mIExhIENvc2EgTm9zdHJhIGluIEFtZXJpY2EsIHdoZXJlIHRoZSBvbmx5IGhvbm9yIGxlZnQgaXMgc3Vydml2YWwuIEhlIHRhbGtzIHRvIENvcnJlc3BvbmRlbnQgU3RldmUgS3JvZnQgaW4gaGlzIGZpcnN0IGV2ZXIgdGVsZXZpc2lvbiBpbnRlcnZpZXcuIApBTkQgTU9SRSBTTyBXSEVOIFRIRSBORVcgV0hJVEUgQVNTSE9MRSBORUlHSEJPUlMgTU9WRUQgSU4uIFRoZXkgZXNjYWxhdGVkIHRoZSBwYXJraW5nIGxvdCBpc3N1ZXMgdG8gd2hlcmUgdGhlcmUgaXMgbm93IGRlc2lnbmF0ZWQgcGFya2luZy4gVGhleSBhbHNvIGRpbmdlZCBteSBuZXcgY2FyIHdpdGhpbiBhIG1vbnRoIG9mIG1lIGJ1eWluZyBpdCB3aXRoIHRoZWlyIHN0dXBpZCBjYXIgZG9vci4gCkZvciBkYXRhIHNldHMsIG1vc3QgaW1tdXRhYmxlIGRhdGEgc3RydWN0dXJlcyBhcmUgZGVzaWduZWQgc28geW91IGNhbiBzaGFyZSBhbGwgYnV0IHRoZSBwYXJ0IG9mIHRoZSBkYXRhIHRoYXQgYWN0dWFsbHkgY2hhbmdlZC4gCkl0J3MgYSBncmVhdCBpZGVhIHRvIGhhdmUgYWxsIHR3ZWx2ZSBpbiB5b3VyIHdlbGxuZXNzIGNhYmluZXQgc28gdGhleSdsbCBhbHdheXMgYmUgYXQgaGFuZC4gCkFzIGEgcmVhbCB3b3JsZCBjb3VudGVyIGV4YW1wbGUgdG8geW91IGd1eXMuIEkgaGFkIHRoaXMgZXggZ2YgSSB3YXMgZGF0aW5nIHdob20gSSBkaWRudCBtZWV0IHRocm91Z2ggbXV0dWFsIGZyaWVuZHMuIEluIGEgY3JhenkgY29pbmNpZGVuY2UsIGJvdGggb2Ygb3VyIGV4IHVuYmVrbm93bnN0IHRvIHVzLCBlbmRlZCB1cCBkYXRpbmcgZWFjaCBvdGhlciBsaWtlIGEgMiAzIHllYXJzIGJlZm9yZWhhbmQsIGFmdGVyIHRoZXkgaGFkIGJyb2tlbiB1cCB3aXRoIHVzLiBBbmQgdGhleSBkYXRlZCBmb3IgbGlrZSBhIHllYXIgb3Igc28uClBsYXlpbmcgYW55IG90aGVyIGdyZWVuIG9yIGJsdWUgaGVyb2VzIG9uIHRoZSBmbG9wIGlzIGp1c3QgYXNraW5nIHRvIGxvc2UgdGhlIGdhbWUgUm91bmQgMSB0byBzaGl0dHkgUk5HLiBQQS9BeGUgZWF0cyBldmVyeSBzaW5nbGUgVS9HIGhlcm8gZm9yIGJyZWFrZmFzdCBleGNlcHQgZm9yIE9tbmlrbmlnaHQgd2hvIGNhbiBhdCBsZWFzdCB0cmFkZSB3aXRoIFBBIG9uIHRoZSAybmQgcm91bmQgd2l0aG91dCB0aGUgdXNlIG9mIGNhcmRzIG9yIGFiaWxpdGllcy4gClRoZSBiaWJsZSBkb2VzbiBldmVuIHNheSBhbnl0aGluZyBhZ2FpbnN0IHBlZG9waGlsaWEuIApXZSBrbm93IGZvciBjZXJ0YWluIHRoYXQgdGhpcyBoYW5kIGlzIG5vdCBjdXJyZW50bHkgZ29vZCwgc28gd2UnbGwgaGF2ZSB0byBoaXQgb25lIG9mIG91ciBvdXRzIGluIG9yZGVyIHRvIHdpbiAob3IgYmx1ZmYgdGhlIGd1eSBvdXQpLiBXZSBrbm93IHRoZXJlIGFyZSBmb3VyIDMncywgYW5kIGZvdXIgOCdzIHRoYXQgd2lsbCBtYWtlIHVzIGEgc3RyYWlnaHQuIApTbyBoZSBnZXRzIGhvbWUgdG8gaGF2ZSBkaW5uZXIgYW5kIGtpc3MgdGhlIGtpZHMgZ29vZG5pZ2h0LCB0aGF0IGl0LiBUaGF0IG9uZSBvZiB0aGUgd29yc3QgcGFyZW50IGNoaWxkIHJlbGF0aW9uc2hpcHMgeW91IGNhbiBoYXZlLCBqdXN0IHNlZSB5b3VyIHBhcmVudCBsZWF2ZSBpbiB0aGUgbW9ybmluZyBhbmQgZ2V0IGJhY2sgYXQgbmlnaHQsIHdpdGggbm8gdGltZSB0byBhY3R1YWxseSBkbyBhbnl0aGluZyBvciB0YWxrIHRvIHRoZW0uLiAKQW5kIHdpdGggdGhlIGxvdmUgYW5kIHN1cHBvcnQgb2YgbXkgZmFtaWx5IGFuZCBmcmllbmRzLCBhbmQgd2l0aCB0aGUgaGVscCBvZiB5b3VyIHByYXllcnMgYWxzbywgSSBwbGFuIHRvIGJlYXQgdGhlIGxvdyBzdXJ2aXZhbCByYXRlIHN0YXRpc3RpY3MgZm9yIHRoaXMgZGlzZWFzZS4uIApUaGlzIHdvbWFuIHdhcyBudXRzICAgZHJvcHBpbmcgTiB3b3Jkcywgc2F5aW5nIEknbSBhIGdvb2QgQXNpYW4sIGdyYWRlIEEgcmlnaHQgd2luZyBjcmF6eS4KSW1hZ2luZSB5b3UncmUgY29uc2lkZXJpbmcgYmV0dGluZyAkMTUuIApObyBHb29kIChTdGFydCB0aGUgRGFuY2UpIEkgd291bGQgYXJndWUgd2FzIHRoZWlyIG1haW5zdHJlYW0gcHJvcGVyIGJyZWFrdGhyb3VnaC4gCkkgdGhpbmsgdGhhdCwgcmF0aGVyLCBpbiBBbWVyaWNhLCBhbnRpIHNlbWV0aXNtIGhhcyBsYXJnZWx5IGJlY29tZSB0aGUgc29jaWFsbHkgdW5hY2NlcHRhYmxlIGtpbmQgb2YgcmFjaXNtLCBzb21ldGhpbmcgb25seSBleHRyZW1pc3RzIGVuZ2FnZSBpbiBvcGVubHkuIApXaGlsZSBzb21lIG9mIG91ciBwYXJlbnRzIG1pZ2h0IGhhdmUgYmVlbiBkZWx1ZGVkIGVub3VnaCB0byBiZWxpZXZlIHRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgInN5bWJvbGljIHZpb2xlbmNlLCIgam91cm5hbGlzdHMgbWlnaHQgYmUgZXhwZWN0ZWQgdG8ga25vdyBiZXR0ZXIuIGFsbCwgYXQgdGhlIGJhc2Ugb2YgYWxsIGxhbmd1YWdlIGlzIHRoZSBhY3Qgb2YgbmFtaW5nIGFuZCBuYW1pbmcgaGFzIGFsd2F5cyBiZWVuIGEgZGl2aW5lIHNvdXJjZSBvZiBwb3dlcjogZnJvbSBDcmVhdGlvbiB3aGVuIEdvZCBnb3QgdG8gbmFtZSB0aGUgd29ybGQgYW5kIGFsbCBpdHMgY3JlYXR1cmVzIHRvIHRvZGF5IHdoZW4gcG9saXRpY2FsIHJlZ2ltZXMgZ2V0IHRvIG5hbWUgd2FycyAicGVhY2Uga2VlcGluZyBtaXNzaW9ucyIgYW5kIHRheCBtb25leSBmb3IgYmFua2VyIGZhdCBjYXRzICJlY29ub21pYyByZWNvdmVyeS4iClVuaXZlcnNpdHkgbGVnaXNsYXRpb24gaXMgcmVndWxhcmx5IHJldmlld2VkLCB3aXRoIGFueSBjaGFuZ2VzIG5vcm1hbGx5IHRha2luZyBlZmZlY3QgYXQgdGhlIHN0YXJ0IG9mIHRoZSBuZXcgYWNhZGVtaWMgeWVhci4gQSBzdW1tYXJ5IG9mIGNoYW5nZXMgdG8gVW5pdmVyc2l0eSBsZWdpc2xhdGlvbiB3aGljaCBoYXZlIGFscmVhZHkgYmVlbiBhZ3JlZWQgZm9yIHRoZSBzdGFydCBvZiB0aGUgbmV4dCBhY2FkZW1pYyB5ZWFyIGlzIHB1Ymxpc2hlZCBvbiBvdXIgd2Vic2l0ZSB3aGVyZSB3ZSB3aWxsIGFsc28gcHVibGlzaCBhbnkgZnVydGhlciBzaWduaWZpY2FudCBjaGFuZ2VzIHdoaWNoIG1heSBiZSBhZ3JlZWQgYmVmb3JlIHRoZSBzdGFydCBvZiB0aGUgbmV3IGFjYWRlbWljIHllYXIuCkRvbiBwYW5pYyAgeW91IGRvIG5vdCBuZWVkIHRvIGNvdW50IGEgbG90LCBpZiB5b3Uga25pdCBzb2NrcyBpbiB0aGlzIHdheS4gSSB1c2UgYSBjaGFydCBhbmQgdGljayB0aGUgcm93cwpNZWV0aW5nIGZhY2lsaXRpZXMuIEd1ZXN0IGxhdW5kcnkgb24gZXZlcnkgZmxvb3IsIGZyZWUgSEJPIERpc25leSBjaGFubmVsLCBjb21wbGltZW50YXJ5IG5ld3NwYXBlciwgY29mZmVlIGFuZCBmcnVpdC4gVmlkZW8gdGFwZSBwbGF5ZXJzIGNvbXB1dGVyIGRhdGEgcG9ydHMgaW4gZXZlcnkgcm9vbS4uIApCb3VjaGFyZCB0b29rIGEgdG9pbGV0IGJyZWFrIGFuZCBzYWlkIHNoZSBnYXZlIGhlcnNlbGYgYSBwZXAgdGFsay4KRmlyc3QgaXQncyBhdCBoZXIgYXBhcnRtZW50LCB0aGVuIGF0IGhlciBtb21zIHBsYWNlLCB0aGVuIGF0IGhlciBkYWRzIGNhYmluIGJ1dCBzaW5jZSBpdCdzIGhlciBkYWRzIHdlIHdvdWxkIGhhdmUgdG8gcGF5IGhlciBhbmQgaGVyIGRhZCBzb21lIG1vbmV5IHRvIHVzZSBpdCwgdGhlbiBpdCdzIGJhY2sgYXQgaGVyIGFwYXJ0bWVudCwgdGhlbiBpdCdzIGZpbmFsbHkgYXQgUEYgQ2hhbmcncyBiZWNhdXNlIHNoZSBkb2Vzbid0IHdhbnQgdG8gdXNlIGhlciBwbGFjZSBhZnRlciBhbGwgYW5kIGRpZG4ndCB3YW50IHRvIGNvb2sgYW55dGhpbmcuIEJlY2F1c2Ugb2YgdGhlIGxhc3QgbWludXRlIG5hdHVyZSBhbmQgY2hhbmdpbmcgb2YgbG9jYXRpb25zLCBhIHNtYWxsZXIgbnVtYmVyIG9mIHBlb3BsZSBjYW4gY29tZSB0byB0aGlzIHBhcnR5LCB0ZW4gaW5zdGVhZCBvZiBmaWZ0ZWVuIG9yIHR3ZW50eSAoSmFuZSBrbm93cyBhIGxvdCBvZiBwZW9wbGUsIENCIG5vdCBzbyBtdWNoKS4gCldoaWxlIHRoZSB3b3JkIGlzIHN0aWxsIGluIHVzZSBmb3IgY2VydGFpbiBhZG1pbmlzdHJhdGl2ZSBwdXJwb3NlcywgaXQgaGFzIG5vIGNsZWFyIGRlZmluaXRpb24uIEl0IGNvbnZleXMgdGhhdCBhIHBlcnNvbiBpcyBvbGQsIGJ1dCBub3QgaG93IG9sZCwgb3Igb2xkIGluIHdoYXQgY2FwYWNpdHkuIEluIHNvbWUgY3VsdHVyZXMsIGl0IGNvbnZleXMgImFnZSA2NSBhbmQgYWJvdmUsIiBvciB0aGF0IGEgcGVyc29uIGlzIGF0IHRoZWlyIHJldGlyZW1lbnQgYWdlLCBidXQgd2l0aCBwZW9wbGUgaW5jcmVhc2luZ2x5IHJldGlyaW5nIGxhdGVyIGFuZCBlbmpveWluZyBnb29kIGhlYWx0aCBmb3IgbG9uZ2VyLCB0aGVzZSBtZWFuaW5ncyBhcmUgaW5jcmVhc2luZ2x5IGJsdXJyZWQuCldoZXJlIGluIEZpbmxhbmQgZGlkIHlvdSBsaXZlPyBMYXBsYW5kPyBCZWNhdXNlIEkgY291bGRuIGZpbmQgYW55IGdvb2Qgc3RhdHMgb24gRmlubGFuZCBhcyBhIHdob2xlLCBidXQgSGVsc2lua2kgZ2V0cyBub3RoaW5nIGNvbXBhcmVkIHRvIFN5cmFjdXNlLiBJIGRpZCBmaW5kIHRoaXMgYW5kIHRoaXMgYW5kIGlmIEkgcmVhZGluZyBjb3JyZWN0bHksIGl0IGxvb2tzIGxpa2UgU3lyYWN1c2UgaXMgc25vd2llciB0aGFuIEZpbmxhbmQgc3RpbGwuIApEdWUgdG8gdGhlaXIgYWJ1c2UgYW5kIG15IGN1cnJlbnQgc3RhdGUgb2Ygbm8gcGF0aWVuY2UgYW5kIHRvbGVyYW5jZSwgSSBjYW4gYmFyZWx5IGhhbmRsZSBvbmUgZG9nIHdpdGhvdXQgZ29pbmcgbnV0cy4gSSB3YXMgc28gaGFyZCBvbiBoZXIgYXMgYSBwdXBweSBhbmQgSSBkZWVwbHkgcmVncmV0IGl0LiAKSG93ZXZlciBJIHdvdWxkIGJlIGZhciBtb3JlIGluY2xpbmVkIHRvIGFjY2VwdCBhbnkgZnVydGhlciB0aGVvcmV0aWNhbCB0aGlua2luZyB0aGF0IHdhc24gbmVjZXNzYXJpbHkgYmFzZWQgb24gZW1waXJpY2FsIGV2aWRlbmNlIGZyb20gYW4gQXRoZWlzdCBzY2llbnRpc3QsIHRoYW4gSSB3b3VsZCBhIG1vZGVybiBDaHJpc3RpYW4gb25lLiAKSXQgZGVmaW5pdGVseSBkb2VzLiBTb21lIHBlb3BsZSBqdXN0IGdldCB2ZXJ5IHZlcnkgYWZmZWN0aW9uYXRlIHdoZW4gZHJ1bmsgYW5kIHdhbm5hIG1ha2Ugb3V0IHdpdGggYmFzaWNhbGx5IHRoZSBuZXh0IHBlcnNvbiBhdmFpbGFibGUuIApJbiB0aW1lLCBkZW1vY3JhY2llcyB0aXJlIG9mIHdhciwgYXMgd2VsbCB0aGV5IHNob3VsZC4gVGh1cywgdGhlIHNpbmdsZSBtb3N0IGltcG9ydGFudCBmYWN0b3IuIApDZXR0ZSBwcmlvZGUgaW5pdGlhbGUgZGUgMTAgc2VtYWluZXMgcmVudm9pZSBlbiBmYWl0ICBsJ2VtYnJ5b24gKDAgIDggc2VtYWluZXMpLiBTb2l0IG9uIHByZW5kIDggc2VtYWluZXMgIHBhcnRpciBkZSBsYSBjb25jZXB0aW9uLCBzb2l0IG9uIHBhcmxlIGRlIDEwIHNlbWFpbmVzICBwYXJ0aXIgZGUgbCdhbW5vcnJoZSAoYWJzZW5jZSBkZSByZ2xlcyA7IDIgc2VtYWluZXMgZW50cmUgbGUgcHJlbWllciBqb3VyIGRlcyBkZXJuaXJlcyByZ2xlcyBldCBsYSBmY29uZGF0aW9uLCBjJ2VzdCAgZGlyZSBkdSBwaWMgZCdvdnVsYXRpb24gZml4IGF1IGRlcm5pZXIgam91ciBkZXMgcmdsZXMgcXVpIGludGVydmllbnQgMTQgam91cnMgcGx1cyB0YXJkKVsxXS4gCkFzIGl0IHR1cm5zIG91dCwgdGhlIE5lYW5kZXJ0aGFscyB3ZXJlIGZ1bGx5IGh1bWFuLCBvciB2ZXJ5IGZhciBhbG9uZyB0aGUgd2F5IHRvIGl0LCBhbmQgdGhhdCBmaXJzdCBza2VsZXRvbiBwcm92ZWQgaXQuIFRoZXkga2VwdCBhIGRpc2FibGVkIGVsZGVyIGFsaXZlLCB0aGV5IGNhcmVkIGFib3V0IGhpbS4gVGhleSBwcm9iYWJseSB2YWx1ZWQgaGlzIGV4cGVyaWVuY2UsIHdoaWNoIGhlIHdvdWxkIGhhdmUgc2hhcmVkIHRocm91Z2ggbGFuZ3VhZ2UsIGFuZCB0aGV5IGhhZCBlbm91Z2ggbWFzdGVyeSBvZiB0aGVpciBlbnZpcm9ubWVudCB0byBzZWN1cmUgZm9vZCBmb3IgeWVhcnMgZm9yIGEgbWFuIHdobyBjb3VsZG4gaHVudCAgZHVyaW5nIGEgaGFyc2ggaWNlIGFnZSBjbGltYXRlLgpMJ2luZm9ybWF0aW9uLCBkc29ybWFpcyBkaXNwb25pYmxlIGVudHJlIGxlcyBzZXJ2aWNlcyBkb3VhbmllcnMsIHBlcm1ldCBkZSBzYXZvaXIsIGF2ZWMgZXhhY3RpdHVkZSwgZCd1biBjdCBjb21tZSBkZSBsJ2F1dHJlIGRlIGxhIGZyb250aXJlLCBsYSBkYXRlIGQnZW50cmUgZXQgZGUgc29ydGllIGRlcyB2b3lhZ2V1cnMuIFZvaWwgcG91cnF1b2kgaWwgZXN0LCBkZXB1aXMganVpbGxldCBkZXJuaWVyLCB0cnMgaW1wb3J0YW50IGRlIGJpZW4gY29tcHRlciBzZXMgam91cnMgZGUgcHJzZW5jZSBhdXggdGF0cyBVbmlzIGV0LCBzdXJ0b3V0LCBkZSByZW1wbGlyIGxlIGZvcm11bGFpcmUgODg0MCBzaSB2b3VzIGV4Y2RleiBjZXMgam91cnMgY3VtdWxzLiBEZXB1aXMgcXVlbHF1ZSB0cm9pcyBhbnMsIG5vdXMgY29tcGx0b25zIGFubnVlbGxlbWVudCBsZSBmb3JtdWxhaXJlIHJlcXVpcyBwYXIgbGUgZmlzYyBhbXJpY2FpbiBwb3VyIHZpdGVyIGQndHJlIGNvbnNpZHJzIGNvbW1lIGNpdG95ZW5zIGFtcmljYWlucyBhdXggZmlucyBmaXNjYWxlcy4uIApMYXNoIGFuZCBCcm93IFRpbnRpbmcgICBJZiB0aGUgbGFzaGVzIGFyZSBuYXR1cmFsbHkgZmFpciwgaGF2aW5nIHRoZW0gdGludGVkIHdpbGwgY3JlYXRlIGEgbXVjaCBtb3JlIGRyYW1hdGljIGxvb2sgZm9yIHlvdXIgZXllcy4gCkhlIHN0aWxsIGhhZCBsb3lhbGlzdHMgYnV0IGhhZCBsb3N0IHRvbyBtdWNoIG9mIHRoZSBkcmVzc2luZyByb29tLiAKT3VyIHZlaGljbGVzIGFuZCBlcXVpcG1lbnQgd2VyZSBleHRyZW1lbHkgb3V0ZGF0ZWQsIGluIGJhZCBzaGFwZSwgYW5kIHBvb3JseSBtYWludGFpbmVkLiBNZWRpY2FsIGV4YW1zIGhhZCBub3QgYmVlbiBkb25lLCBtYW55IHBlb3BsZSB3ZXJlIGluaXRpYWxseSBub24gZGVwbG95YWJsZSBkdWUgdG8gbWVkaWNhbCBhbmQgZGVudGFsIGlzc3Vlcy4gCk1lIGVsYWJvcmF0ZSBvbiAzLiBUaGUgcHJvYmxlbSB3aXRoIG1vc2lubGluZ3MgaXMgdGhlaXIgbW92ZW1lbnQuIFRoZXkgYXJlIGFibGUgdG8gc3ByaW50IGFyb3VuZCBmYXN0ZXIgd2l0aCB2ZXJ5IGxpdHRsZSBzdGFtaW5hIHJlZHVjdGlvbiBiZWNhdXNlIHRoZXkgYXJlIGxpZ2h0IHdlaWdodCwgcG9wcGluZyBxdWljayBzaG90cy4gVGhpcyBpcyBob3cgSSBoYXRlIGR5aW5nIHRvIGEgbW9zaW4gICBnb2luZyB0b2UgdG8gdG9lIHdpdGggYSBtb3NpbiwgaGl0dGluZyBoaW0gd2l0aCByb3VuZHMgaW4gbXVsdGlwbGUgYXJlYXMgb2YgdGhlIGJvZHkgYW5kIHRoZXkgYXJlIGFibGUgdG8gQURTIGFuZCBnZXQgYW4gYWNjdXJhdGUgc2hvdCBvZmYuIEkgcGVyc29uYWxseSBkb24gaGF2ZSBhIHByb2JsZW0gd2l0aCBhIGdvb2Qgc2hvdCwgaXQgdGhlIHN0eWxlIG9mIHBsYXkgdGhhdCBjb21lcyB3aXRoIG1vc2lubGluZ3MgICBpdCBmZWVscyBsaWtlIGNhbGwgb2YgZHV0eSBhbmQgaXQgZnJ1c3RyYXRpbmcuCkFuZCBzb21lIHBlb3BsZSBhcmUgbmF0dXJhbGx5IG1vcmUgYWxwaGEgYW5kIGdvIHN0cmFpZ2h0IHRvIFQvTyAodGltZSBvdXQpIEMvTyAoY3V0IG9mZikgb3IgRGl2b3JjZS4gCkhvdyBkbyB5b3UgeW91IGdldCBmcmVlIGNoaXBzIG9uIHphcGFrCkkgYmVsaWV2ZSB0aGlzIGNvbnRyaWJ1dGVzIHNpZ25pZmljYW50bHkgdG8gdGhlIGhpZ2ggaW5jaWRlbmNlIG9mIGNvbG9uIGNhbmNlciBwbGFndWluZyB0b2RheSBzb2NpZXR5LkJlbmVmaWNpYWwgYmFjdGVyaWEgYWxzbyBicmVhayBkb3duIGhvcm1vbmUgc2VjcmV0aW9ucyB0aGF0IGFyZSBkaXNjaGFyZ2VkIGZyb20gdGhlIGxpdmVyIHRvIHRoZSBzbWFsbCBpbnRlc3RpbmUuIApBbmQgdGhlIHN3b3JkIHdpZWxkaW5nIG11cmRlcmVyIHdhbnRpbmcgdG8gc3RhcnQgYSByYWNlIHdhci4gClR3byB5b3VuZyB3b21lbiAgIG9uZSBhIGJsYWNrIGhpZ2ggc2Nob29sIHN0dWRlbnQsIHRoZSBvdGhlciBhIHdoaXRlIGhpZ2ggc2Nob29sIHN0dWRlbnQgICBzdHJ1Y2sgdXAgYSBmcmllbmRzaGlwIHdoaWxlIHRoZXkgd2FpdGVkIGZpdmUgaG91cnMgaW4gbGluZS4gVGhleSwgbGlrZSBzbyBtYW55IG90aGVycywgc2FpZCB0aGV5IHdlcmUgZ3JhdGVmdWwgdG8gYmUgYWJsZSB0byBsaXZlIGluIHVuaXR5LiBJZiB0aGVyZSB3ZXJlIHByb2JsZW1zICAgZGlzcGFyaXRpZXMgYmV0d2VlbiByYWNlcyBoYXZlIGJlZW4gd2VsbCBkb2N1bWVudGVkICAgcGVvcGxlIHNlZW1lZCByZWx1Y3RhbnQgdG8gYWRkcmVzcyB0aGVtLCBhcyB0aG91Z2ggaXQgd2FzIGRpc3Jlc3BlY3RmdWwgdG8gTWFuZGVsYS4KRWRpdDogVG8gYW5zd2VyIGFsbCBxdWVzdGlvbnMgYXQgb25jZSwgdGhlIHNoZWx2ZXMgYXJlIHRoZSBLYWxsYXggbW9kZWwgKGZvdXIgMngyIHNoZWx2ZXMgYW5kIG9uZSAyeDQgc2hlbGYgZm9yIHRoZSBmb290IG9mIHRoZSBiZWQpLCB0aGUgbGlnaHRzIEkgZG9uJ3QgcmVtZW1iZXIgdGhlIG5hbWUgYnV0IHRoZXkgYXJlIGp1c3QgTEVEIGRpc2NzIGZyb20gSWtlYSB3aXRoIGFkaGVzaXZlIG9uIHRoZSBiYWNrLiBUaGV5IGNvbWUgaW4gc2V0cyBvZiA0IHNvIEkgaGFkIHRvIGJ1eSA0LiBUaGUgbWlkZGxlIEkgdXNlIGZvciBzdG9yYWdlIG9mIGNhbXBpbmcgZ2VhciBhbmQgb3V0IG9mIHNlYXNvbiBjbG90aGVzOyBJIGp1c3QgY2xpbWIgdGhyb3VnaCBvbmUgb2YgdGhlIGhvbGVzIHRvIGFjY2VzcyBpdCwgYnV0IHRoYXQncyBza2lubnkgcHJpdmlsZWdlLiAKRXZlbiBpZiB5b3UgYXJlIGJlaGluZCB3aXRoIEtRb3MgYW5kIGdldCBjYWxsZWQgd2l0aCBBOSwgeW91IGFyZSBpbiB0aGUgcmlnaHQgc3BvdCB0byBkb3VibGUgdXAsIGJ1dCBub3QgYWdhaW5zdCBtb3JlIHRoYW4gb25lIHBsYXllci4gClJpY2hhcmQgS2VsbHkgYWxzbyB0ZWxscyB0aGlzIGluIHRoZSBhdWRpbyBjb21tZW50YXJ5IHdoZW4gTXMgUG9tZXJveSBhbmQgTXIgTW9ubml0b2ZmIGFyZSBzaXR0aW5nIGluIHRoZSBzdGFmZiByb29tIGFuZCBsb29rIGF0IGVhY2ggb3RoZXIuIE1vbm5pdG9mZiBzYXlzICJEb25uaWUgRGFya28iIGFuZCBNcyBQb21lcm95IGp1c3Qgc21pbGVzIGFuZCBzYXlzICJJIGtub3ciLiAKSGVzcCwgcGljdHVyZWQgaGVyZSB3aXRoIHJlcG9ydGVyIGFuZCBwcm9kdWNlciBMaXp6eSBIYXJyaXNvbiBhbmQgMTk4OSBtYWluIGV2ZW50IHdpbm5lciBQaGlsIEhlbGxtdXRoLCBpcyBzZWVuIGJ5IG1hbnkgaW4gdGhlIHBva2VyIHdvcmxkIGFzIGEgYnJlYXRoIG9mIGZyZXNoIGFpcgpBbHNvLCBpdCBpbnRlcmVzdGluZyB0aGF0IHlvdSBrZWVwIHVzaW5nIHRoZSBmaWd1cmUgYXMgYW4gYXJndW1lbnQuIApDb25zaWRlcmluZyB0aGUgY29zdCBvZiBpbGxlZ2FscyB0byB0aGUgY291bnRyeSBldmVyeSB5ZWFyIGlzIG92ZXIgMTAwIGJpbGxpb24gKGZhY3QsIGxvb2sgaXQgdXApLiBMZXQgc2F5IHRoZSBjb3N0IG9mIElMTEVHQUwgYWxpZW5zIHRvIHRoZSBjb3VudHJ5IGdvZXMgZG93biBldmVuIDEwIGJpbGxpb24gZG9sbGFycywgd2hpY2ggd291bGQgYmFzaWNhbGx5IG1lYW4gdGhlIHdhbGwgcGF5cyBmb3IgaXRzZWxmIGFuZCB0aGVuIHNvbWUsIHRoZW4gd2lsbCBhbGwgb2YgeW91IGNsb3ducyBlYXQgeW91ciB3b3JkcyBhbmQgYWRtaXQgaXQgd2FzIHRoZSByaWdodCBjYWxsPyBPciB3aWxsIHlvdSBmaW5kIHNvbWUgb3RoZXIgcmVhc29uIHdoeSBpdCB3YXMgd3JvbmcgYW5kIHVuanVzdCBhbmQgcmFjaXN0IGFuZCB3aGF0ZXZlciBlbHNlIHlvdSBiZWVuIGZlZCBieSBNU00uIEkgbWVhbiBjYW4gd2UgYWxsIGJvb2ttYXJrIHRoaXMgYW5kIGNvbWUgYmFjayBvbmUgd2hvbGUgeWVhciBhZnRlciB0aGUgd2FsbCBpcyB1cCBzbyBtZSBhbmQgYW55IG90aGVyIGxvZ2ljYWxseSB0aGlua2luZyBwZXJzb24gY2FuIGxhdWdoIGF0IGFsbCBvZiB0aGVlIHNuaWRlIGNvbW1lbnRzIG1hZGUgYnkgcGVvcGxlIHdobyBoYXZlIG5vIGZ1Y2tpbmcgaWRlYSBvZiB3aGF0IHRoZXkgdGFsa2luZyBhYm91dC4gCk9jdC4gCkdhcnkgVHVjY2kgb24gRmVicnVhcnkgMTMsIDIwMTkuIApCdXQgYWZ0ZXIgdGhhdCwgSSB0aGluayBzdHVkeWluZyBwb2tlciBtYWtlcyBtb3JlIHNlbnNlIHRoYW4gd2F0Y2hpbmcgTmV0ZmxpeCBvZGVyIGdhbWluZywgZXZlbiBpZiB0aGVyZSBpcyBvbmx5IGEgc2xpZ2h0IGNoYW5jZSB0aGF0IHRoaXMgd2lsbCB0dXJuIG91dCBwcm9maXRhYmxlLiAKU28gd2hlcmUgdG8gbGliZXJhbHMgYW5kIHByb2dyZXNzaXZlcyBmaXQgaW4/IFRoZXkgYXJlIHRoZSBvcHBvc2l0ZSBzaWRlIHRoYXQgc2Vla3MgdG8gbGltaXQgc3VmZmVyaW5nIGFzIG11Y2ggYXMgcG9zc2libGUgd2l0aGluIHRoZSBzeXN0ZW0gYmVjYXVzZSB0aGV5IGNhbiBub3QgaGVscCBidXQgZW1wYXRoaXplIHdpdGggb3RoZXJzICAgaXQgd2h5IHRoZXkgb24gdGhlIGxlZnQgb2YgYSBjZW50ZXIgcmlnaHQgc3lzdGVtIGluIHRoZSBmaXJzdCBwbGFjZS4gQXMgdGhlIHNpZGUgd2hvIGhhcyB0aGUgb251cyBvZiBhdHRlbXB0aW5nIHRvIG1ha2UgY2l2aWxpemF0aW9uIGEgbW9yZSBwbGVhc2FudCBwbGFjZSB0byBsaXZlLCBsaWJlcmFscyBhcmUgZGVtb25pemVkIGJ5IGRlbW9ucy4gIkxpYmVyYWwgdGVhcnMiIGlzIGxpdGVyYWxseSB0aGUgc2FkbmVzcyBvZiB0aG9zZSB3aG8gd2lzaCB0byBmcmVlIHRoZSBvcHByZXNzZWQgYW5kIGRlZmVuZCB0aGUgbW9zdCB2dWxuZXJhYmxlLCBhbmQgdGhlIGFuaW1hbHMgb24gdGhlIHJpZ2h0IGNhbiBoZWxwIGJ1dCBqYWNrIG9mZiB0byBhbGwgdGhlIHN1ZmZlcmluZyBvbiBib3RoIGluZGl2aWR1YWwgYW5kIG1hc3Mgc2NhbGVzLi4gCkl0IGluY2x1ZGVzIGFsbCB0aGUgMjAxNCBkcmFmdCBwaWNrcywgbGF0ZXN0IHRyYWRlcyB0cmFuc2FjdGlvbnMsIHJlY2VudGx5LiAKVGhlIG5ldyB3ZWJzaXRlIGluY2x1ZGVzIGEgR29vZ2xlIG1hcHMgbGlrZSBmZWF0dXJlIHRvIGRpcmVjdCB1c2VycyB0byB0YXR0b28gcGFybG9ycyBpbiB0aGVpciBhcmVhIHJlY29tbWVuZGVkIGJ5IEN1c3RvbSBUYXR0b28gRGVzaWduLiBUbyBtYWludGFpbiBhIHJlY29tbWVuZGVkIHN0YXR1cywgb3V0bGV0cyB3aWxsIGJlIHJlcXVpcmVkIHRvIHBheSBhIG1vbnRobHkgZmVlIG9mICQxOTksIGNyZWF0aW5nIGFub3RoZXIgcmV2ZW51ZSBzdHJlYW0uIApTdWRkZW5seSB5b3UgY2FuIGZpbmQgeW91cnNlbGYgSU4gSkFJTCBmb3Igbm90IHVzaW5nIHNwZWNpZmljIHdvcmRzIHRoYXQgYW55IHNwZWNpYWwgaW50ZXJlc3QgZ3JvdXAgZGVlbSBhdCBoYXRlZnVsLiBXaGF0IGlmIEkgYW4gYXRoZWlzdCB3aG8gZG9lc24gd2FudCBteSAicGxlZGdlIG9mIGFsbGVnaWFuY2UiIHRvIGluY2x1ZGUgbXkiIG5hdGlvbiBVTkRFUiBHT0QuIiBDaHJpc3RpYW5zIG1heSBmaW5kIHRoaXMgb2ZmZW5zaXZlIGFuZCBoYXRlZnVsLiAKSSBwcm9iYWJseSBhbiBleGNlcHRpb24sIGFzIEkga2VlcCBoZWFyaW5nIGFib3V0IGhvdyBvdGhlciBwZW9wbGUgaGF2ZSBwdXQgdXAgd2l0aCBpc3N1ZXMgd2l0aCB0aGUgY2FyLCBidXQgbXkgZ3JlZW4gZGVycCBib3ggb2YgYSBjYXIgaGFzIHRyZWF0ZWQgbWUgd2VsbCB0aGUgcGFzdCAxMiB5ZWFycywgd2l0aCBvbmx5IGEgaGFuZGZ1bCBvZiB3ZWlyZCBoaWppbmtzLiAKVGhleSBzZW50IGxldHRlcnMgaGFzc2xpbmcgbWUgZm9yIHRoZSBtb25leSB3aGlsZSBzaW11bHRhbmVvdXNseSBwcm9taXNpbmcgb3ZlciB0aGUgcGhvbmUgdGhhdCB0aGV5IHdvdWxkIHN0b3AuLiAKQmlsbCBHYXRlcyBhbmQgb3RoZXIgYmlsbGlvbmFpcmVzIChhbHRob3VnaCBub3QgbWFueSkgYXJlIGNlcnRhaW5seSBjYXBhYmxlIG9mIGxlYWRpbmcgcHJvZ3Jlc3NpdmUgbW92ZW1lbnRzLiAKWW91IHNob3VsZCBwcm92aWRlIGEgY29udGFjdCBudW1iZXIsIGEgbGluaywgb3IgYW55IG90aGVyIGFyZWEgb2YgZGlyZWN0aW9uIHRoYXQgd2lsbCBwbGFjZSB0aGUgcmVhZGVyIGluIHRoZSBhcmVhIHRoYXQgeW91IHdhbnQgdGhlbSB0byBiZS4gCjc3IHdvdWxkIGJlIGVzcGVjaWFsbHkgZ3V0IHdyZW5jaGluZywgYnV0IGNvdWxkIG1ha2Ugc2Vuc2Ugd2l0aCBhIGJldCBmbG9wLCBjaGVjayB0dXJuIGxpbmUuIEJ1dCA5OSBhbHNvIG1ha2VzIGEgdG9uIG9mIHNlbnNlIHdpdGggdGhhdCBsaW5lLiAKR28gdG8gYW55IG1lc3NlbmdlcnMgbGlrZSB5YWhvbywgcmVkaWZmIG9yIGdtYWlsLiAKQWxsIGl0IG1lYW5zIGlzIHRoYXQgdGhleSBzb3VnaHQgdG8gZGlmZmVyZW50aWF0ZSByZWxpZ2lvbiBhbmQgZ292ZXJubWVudCwgYW5kIHRvIGZvcm0gYSBnb3Zlcm5tZW50IHNlcGFyYXRlZCBmcm9tIHJlbGlnaW91cyBwcmFjdGljZSBhbmQgb2JzZXJ2YXRpb24sIGFuZCB0byBlbnN1cmUgdGhhdCB0aGVyZSB3YXMgbm8gcHJlZmVyZW5jZSB0byBhbnkgcGFydGljdWxhciByZWxpZ2lvdXMgc2VjdC4gCkkgZGlkbid0IHdhbnQgdG8gbWFrZSB0aGluZ3MgYXdrd2FyZCwgYmVjYXVzZSBldmVyeW9uZSBsaWtlZCBoaW0uLiAKSW4gdGhpcyB3aG9sZSBzaXR1YXRpb24gSSBmZWVsIHNvcnJ5IGZvciB0aGUga2lkcywgYXMgdGhlaXIgaG9tZSBsaWZlIGRvZXNuJ3Qgc2VlbSB0byBiZSB2ZXJ5IHN0YWJsZS4gSSB0aGluayB5b3UgbmVlZCB0byB0YWtlIGEgc3RlcCBiYWNrIGFuZCByZWFsbHkgbG9vayBhdCB0aGUgc2l0dWF0aW9uIHlvdSdyZSBpbiwgdGhlIHNpdHVhdGlvbiBzaGUncyBpbiBhbmQgbW9yZSBpbXBvcnRhbnRseSwgdGhlIHNpdHVhdGlvbiB0aGUga2lkcyBhcmUgaW4uIEFuZCBJIHRoaW5rIHlvdSBhbHNvIG5lZWQgdG8gdGFrZSBhIGxvb2sgYXQgd2hhdCBraW5kIG9mIHBlcnNvbiB5b3VyIGdpcmxmcmllbmQgcmVhbGx5IGlzLiAKUGx1cywgYXMgbWFueSBkZWZlY3RvcnMgd2hvIHdpc2ggdG8gcmV0dXJuIGJhY2sgdG8gTksgaGF2ZSBzYWlkLCB0aGV5IHRoaW5rIHRoYXQgU0sgbWlzc2VzIG11Y2ggb2Ygd2hhdCB0aGV5IHNhdyBhcyB0aGUgYmVzdCBwYXJ0cyBvZiBsaWZlLiBTb21lIGRlc2NyaWJlZCBTSyBhcyBiZWluZyBmYXIgdG9vIG1vbmV5IG9ic2Vzc2VkLCB3aGlsc3QgdGhlcmUgaXMgYSBsYWNrIG9mIGNvbW11bml0eSBhbmQgZmFtaWx5IGxpZmUgaXMgc2VlbWluZ2x5IG5vbiBleGlzdGVudC4KVGhlIHBhcnQgdGhhdCB0dXJucyByZWQgYW5kIHNwaW5zIGlzIGNhbGxlZCBhIHNwcm9ja2V0LiBJdCB3aGF0IGNoYWlucyByaWRlIG9uLCBsaWtlIG9uIHlvdXIgYmljeWNsZSwgaG93IHlvdSBtb3ZlIHRoZSBwb3dlciBmcm9tIHRoZSBwZWRhbHMsIHRvIHRoZSByZWFyIHdoZWVsLiBUaGUgc3Byb2NrZXQgbmVlZHMgdG8gYmUgaGFyZCB0byBsYXN0IGEgbG9uZyB0aW1lIGJlY2F1c2UgdGhlIGNoYWluIHNsaWRlcyBvbiBpdCBhIGxvdC4gVG8gZ2V0IGl0IGhhcmQsIHlvdSBoZWF0IHRyZWF0IGl0IChzb21lb25lIHNtYXJ0ZXIgdGhhbiBtZSBjYW4gdGVsbCB5b3UgZXhhY3RseSB3aHkgaXQgd29ya3MpLiBUaGUgY29wcGVyIGNvaWwgdGhhdCBzdXJyb3VuZHMgdGhlIHBhcnQgcnVucyBhIGxvdCBvZiBjdXJyZW50IHRocm91Z2ggaXQsIGFuZCB0aGF0IGluZHVjZXMgYSBtYWduZXRpYyBmaWVsZCwgd2hpY2ggaW5kdWNlcyBhIGN1cnJlbnQgaW4gdGhlIHNwcm9ja2V0LiBXaGVuIHlvdSBwdXQgY3VycmVudCB0aHJvdWdoIHRoaW5ncywgdGhleSB1c3VhbGx5IGhlYXQgdXAuIFRoZW4gb25jZSB0aGUgcGFydCBpcyBicm91Z2h0IHRvIGEgc3BlY2lmaWMgdGVtcGVyYXR1cmUsIGl0IGlzIHF1ZW5jaGVkIGluIHdhdGVyIGJlbG93IHRoZSBjb2lsLiBUaGlzIGlzIGp1c3QgcGFydCBvZiB0aGUgaGVhdCB0cmVhdGluZyBwcm9jZXNzLCBiZWNhdXNlIHRoZSByYXRlIGF0IHdoaWNoIHRoaW5ncyBjb29sIGVmZmVjdHMgaG93IHRoZSBoZWF0IHRyZWF0bWVudCBpcyBoZWxkLgpBbGwgdGhlIGNvbnRyb2xsZWQgc3R1ZGllcyBpbiBuZW9uYXRlcyBjb21wYXJlZCBNVCB0byBzdGFuZGFyZCBudXJzaW5nIGFuZCBtZWRpY2FsIGNhcmUuUGFydGljaXBhbnRzIGluY2x1ZGVkIGluIHRoZSByZXZpZXdBbGwgc3R1ZGllcyBpbiBjaGlsZHJlbiB3ZXJlIGVsaWdpYmxlIGZvciBpbmNsdXNpb24uIApNb3Jlb3ZlciB3aGF0IHNoZSBkaWQsIHNoZSBkaXNob25lc3RseSBhbmQgdW5mYWlybHkgZGlkIHRvIEJlcm5pZSwgd2hvIHJlcHJlc2VudHMgYW5kIGhhcyB0aGUgYmFja2luZyBvZiBhIGxhcmdlIG51bWJlciBvZiBtZW1iZXJzIHdobyBtYXkgdmVyeSB3ZWxsIGFncmVlIHdpdGggaGltLCB0b28sIHNvIGhlIGRlc2VydmVzIHRvIGJlIGhlYXJkIGFuZCBoYXZlIHRoYXQgaXNzdWUgbW9yZSB0aG9yb3VnaGx5IGRpc2N1c3NlZCBhbmQgZGViYXRlZCB3aXRoaW4gdGhlIHBhcnR5LCBub3Qgc3dlcHQgdW5kZXIgdGhlIGNhcnBldCBvciBnZXR0aW5nIHN3ZXB0IG91dCB0aGUgZG9vciwgaGltc2VsZiwgZm9yIGl0LiBUaGlzIGlzIHdoYXQgaXMga25vd24gYXMgYWRkaW5nIGluc3VsdCB0byBpbmp1cnkgYW5kIGFub3RoZXIgZ29vZCByZWFzb24gd2h5IHNoZSBzaG91bGQgaGF2ZSBiZWVuIGtpY2tlZCBvdXQuCkVubGlnaHRlbmVkRXF1aXBtZW50IHUKIllvdXIgc2Nhcmllc3QgbW9tZW50cywgeW91ciBkYXJrZXN0IG5pZ2h0cy4gWW91ciBiaWdnZXN0IHRyaXVtcGhzLiBBbmQgdGhleSdyZSB3aXRoIHlvdS4gVGhleSdyZSBjcnlpbmcgYXQgdGhlIHNhZCBwYXJ0cywgYW5kIHRoZXkncmUgbGF1Z2hpbmcuIFRoYXQgd2FzIHN1Y2ggYSBjYXRoYXJ0aWMgZXhwZXJpZW5jZSBmb3IgbWUuIEJlY2F1c2UgeW91IHN1ZmZlciBhbG9uZSwgbW9zdGx5LiBFdmVuIGlmIHRoZXJlIGFyZSBwZW9wbGUgYXJvdW5kIHRvIGhlbHAgeW91LCB5b3UgZG9uJ3Qgc3VmZmVyIHdpdGggYW4gYXVkaWVuY2UsIHlvdSBkb24ndCB0cml1bXBoIHdpdGggYW4gYXVkaWVuY2UuIEJ1dCB0aGlzIHdhcy4gQW5kIGl0IHdhcyBhbiBleHRyYW9yZGluYXJ5IG5pZ2h0LiIKQWdhaW4gdmFyaWV0eSBpcyBpbXBvcnRhbnQhIDMpIHNwaXQgZm9yIGx1YmUgaXMgbm90IGVmZmVjdGl2ZS4gCkEgeWVhciBsYXRlciwgc2hlIHR1cm5lZCBoZXIgYXR0ZW50aW9uIGZ1bGwgdGltZSB0byBjb3Jwb3JhdGUgYnJhbmRpbmcuLiAKSXQgYSBzbWFsbCB0aGluZyB0aGF0IHdvdWxkIG1lYW4gc28gbXVjaCwgYW5kIEkgc3RpbGwgaG9sZCBvdXQgaG9wZSB0aGF0IG9uZSBkYXkgSSBnZXQgdGhhdC4gCkJ1dCB0aGVuIHRoZXJlIGFsc28gcGVvcGxlIGluIHRoZSBtaWRkbGUuIApTaW5jZSB5b3UgYmUgcmVsYXRpdmVseSBuZWFyIG9uIHlvdXIgZmlyc3QgZGF5LCB5b3Ugc2hvdWxkIGdvIHRvIEd3YW5namFuZyBNYXJrZXQgZm9yIGxvdHMgb2YgS29yZWFuIHN0cmVldCBmb29kIHZlbmRvcnMuIApNZWV0aW5nIGZhY2lsaXRpZXMuIApBcyBvZiByaWdodCBub3cgSSBhbSBhIHByZXR0eSBiaWcgd2lubmVyIGluIHRoZSA1IDEwIDEwIDIwIGdhbWVzIGJ1dCBwcm9iYWJseSB3b3VsZCBoYXZlIHRyb3VibGUgbW92aW5nIHVwIHBhc3QgdGhpcyBwb2ludC4gSSBhbSBqdXN0IHRyeWluZyB0byBmaWd1cmUgb3V0IGlmIGl0IGlzIHdvcnRoIHRoZSBhbW91bnQgb2Ygd29yayBJIHdvdWxkIGhhdmUgdG8gcHV0IGluIGlmIEkgb25seSBwbGFuIG9uIHBsYXlpbmcgZm9yIGFub3RoZXIgY291cGxlIHllYXJzLiAKSXQgYSBtdWNoIG1vcmUgY29tcGxleCBzaXR1YXRpb24gdGhhbiAic29jaWFsaXNtIGRpZCBpdCIuLiAKIDYzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0kgb25jZSBoYWQgc29tZSBkb3VjaGViYWcgd2l0aCBhbiBlZ28gdGhlIHNpemUgb2YgdGV4YXMgYXQgYW4gTVNQIEkgaW50ZXJ2aWV3ZWQgYXQgdGVsbCBtZSBJIGRpZG4gc3VwcG9ydCB0aGUgc3dpdGNoZXMgbXkgY3VycmVudCBqb2IgaGFkIG9uIHNpdGUgYmVjYXVzZSBJIGRpZG4gY29uZmlndXJlIHRoZW0gZnJvbSBzY3JhdGNoIGJlY2F1c2UgdGhleSB3ZXJlIGFscmVhZHkgaW4gcGxhY2Ugd2hlbiBJIGdvdCB0aGVyZS5JIGhhZCBhbm90aGVyIHBsYWNlIGdpdmUgbWUgb25lIG9mIHRob3NlIHByb2ZpY2llbmN5IGV4YW1zIGFuZCBpdCB3YXMgaG9uZXN0bHkgdGhlIHdvcnN0IGV4YW0gSSBldmVyIHNlZW4uIApJIG5vdCBzYXlpbmcgdGhhdCB5b3UgYXJlIGV4YWdnZXJhdGluZyBhYm91dCB0aGUgYW1vdW50IGJhZCBiZWhhdmlvciB5b3UgcGVyc29uYWxseSBlbmNvdW50ZXJlZCBvciB5b3VyIGZlZWxpbmdzLiBUaGVyZSBhcmUgcGxlbnR5IG9mIGNyYXBweSBndXlzIG91dCB0aGVyZS4gCkluIG9uZSBvZiB0aGUgY2xhc3NlcyBJIHRvb2sgYSB2ZXJ5IGxvbmcgdGltZSBhZ28gdGhleSBkaXNjdXNzZWQgdGhlIHVzZSBvZiwgIkkgYW0gbm90IGEgY3Jvb2suIi4gVGhlIGNsYXNzIHdhcyBhYm91dCByZWFkaW5nIGJvZHkgbGFuZ3VhZ2UsIGRldGVjdGluZyBsaWVzLCBhbmQgaG93IE5peG9uIGlzIHRoZSBtb3N0IGZhbW91cyBmb3IgdGhlIHVzZSBvZiBObyBjb250cmFjdGlvbi4gClRoZSBsYXN0IGdhbWUgaG93ZXZlciB3ZSBoYWQgYWxyZWFkeSBwbGFubmVkIG9uIGxvc2luZyBhbmQgbGV0dGluZyBoaW0gd2luLiAKQmVjYXVzZSBNY0xhcmVuIGlzIGZhY2luZyBhIGRpZmZpY3VsdCBmaW5hbmNpYWwgdGltZSwgaXQgd291bGQgaWRlYWxseSBsaWtlIHRvIHJldGFpbiBKZW5zb24gYnV0IGF0IGEgc2lnbmlmaWNhbnRseSByZWR1Y2VkIGZlZS4gSXRzIGluaXRpYWwgMjAxNiBidWRnZXQgd2FzIGJhc2VkIGFyb3VuZCBmaW5pc2hpbmcgZmlmdGggaW4gdGhpcyB5ZWFyJ3MgQ29uc3RydWN0b3JzIENoYW1waW9uc2hpcCB3aGVyZWFzIHRoZSByZWFsaXR5IGxvb2tzIGxpa2UgbmludGggcGxhY2UuIFRoZSBkaWZmZXJlbmNlIGluIHRlYW0gaW5jb21lIGJldHdlZW4gdGhvc2UgdHdvIHBvc2l0aW9ucyBpcyBhcm91bmQgU3VkZGVubHksIGEgaW5jcmVhc2UgaW4gQnV0dG9uJ3Mgc2FsYXJ5IGJlZ2lucyB0byBsb29rIHZlcnkgZXhwZW5zaXZlICAgZXZlbiBpZiBpdCBpcyBvbmx5IGFyb3VuZCBoYWxmIHRoZSBzYWxhcnkgb2YgdGVhbSBtYXRlIEZlcm5hbmRvIEFsb25zbywgd2hvIGlzIGNvbnRyYWN0ZWQgZm9yIHRocmVlIHllYXJzIGFuZCBsYXJnZWx5IHBhaWQgZm9yIGJ5IEhvbmRhLi4gCihXYXRjaCB0aGUgdmlkZW8gIlBva2VyIENvbWVzIHRvIENoaW5hLiIpLiAKSG93ZXZlciB0aGlzIGd1eSB3YXMgc2xvd2x5IGN1dHRpbmcgcGFydHMsIGxldHRpbmcgaXQgYnVpbGQgdXAgYW5kIGNhdXNpbmcgYWxvdCBvZiB3b3JrIHRvIGNhdGNoIHVwIG9uLiBIZSBhbHNvIGZhaWxlZCB0byBtZW50aW9uIHRoYXQgdGhlIG1hY2hpbmUgc3RhcnRlZCBsZWFraW5nIG9pbCBvbiB0aGUgcGFydHMgZm9yIGFib3V0IGFuZCBob3VyLiBTbyB0aGVyZSB3ZSBhcmUganVzdCB3aXBlIGRvd24gdGhlIHBhcnRzIGFscmVhZHkgbWFkZSB3aXRoIHJ1YmJpbmcgYWxjb2hvbCBhbmQgY3V0dGluZyB0aGVtLiAKRG8gaXQgYWxsIHJpZ2h0IG5vdyEgSSB0aGluayB0aGUgbWFqb3JpdHkgb2YgdGhlc2UgcGVvcGxlIGRvIG5vdCByZWFsaXplIHRoZSBhbW91bnQgb2Ygc25vdyB3ZSBoYXZlIGFjdHVhbGx5IGdvdHRlbiBpbiB0aGUgbGFzdCAyIG1vbnRocyBhbmQgdGhlIGVmZm9ydHMgdGhlIGNpdGllcyBhcmUgZG9pbmcuIEFuZCByZWFsbHksIHlvdSB3YW50IHRoZW0gdG8gZml4IHRoZSBwb3Rob2xlcyBub3csIHNvIHRoZXkgY2FuIGZpeCB0aGVtIGFnYWluIGluIHRoZSBzcHJpbmcuIApGb3IgbWUgcmVjZWl2aW5nIG9yYWwgaXMgbm90IGEgdHVybiBvbiBhdCBhbGwuIApXZWxsIHllYSwgdGhleSBzaG91bGQgbm90IGJlIGhvbGRpbmcgb250byBpdC4gCkp1c3QgZ29vZ2xlIHJlY2lwZXMgdW50aWwgeW91IGZpbmQgb25lcyB0aGF0IHlvdSBsaWtlLiAKRHVyaW5nIHRoaXMgcGVyaW9kIGV2ZXJ5IG5ldyBtZW1iZXIgb2YgdGhlIHJvb20gY2FuIHJlY2VpdmUgdGVtcG9yYXJ5IHVwZ3JhZGUgZnJvbSBCYXNpYyBzdGF0dXMgdG8gVklQLiAKSGUncyBoYWQgcmVsYXRpb25zaGlwcyB3aXRoIHdvbWVuIGFuZCB5b3UgY2FuIGltYWdpbmUgaWYgYSBmYW1vdXMgZm9vdGJhbGwgcGxheWVyIHN0YXJ0cyBhIG5ldyByZWxhdGlvbnNoaXAsIGl0J3MgYWxsIG92ZXIgdGhlIG1hZ2F6aW5lcyBhbmQgbG90cyBvZiB0aGUgc3RvcmllcyB3ZXJlIHByb2JhYmx5IG5vdCB0cnVlIEhlIGdvdCB0aXJlZCBvZiB0aGF0LicuIApTaGUgaXMgZG9lcyBub3QgdHJ1c3Qgb3RoZXJzIGJ1dCBoYXMgc29mdCBzcG90IGZvciBQYXp1enUsIGFuZCBkZWVwIGhhdHJlZCBmb3IgaGFsZiBlbHZlcy4KODUoMSkoYi4xKSBvZiB0aGUgKEZhbWlseSBMYXcgQWN0KSBhcyB0byBhIHNwb3VzZSBmcm9tIGEgdGhpcmQgcGFydHkuIEhvd2V2ZXIsIGFyZ3VhYmx5IGl0IGlzIG5vdCBjbGVhciB0byB3aG9tIChNci4gQmFyeWxhIG1vdGhlcikgZ2lmdGVkIHRoZSByaWdodCBvZiBzdXJ2aXZvcnNoaXAuIApUaGUgQnVmZmV0ICAgVGhlIEJ1ZmZldCBvZmZlcnMgZnJlc2ggY2hvaWNlcyB3aXRoIGxpdmUgY29va2luZyBzdGF0aW9ucyBhbmQgbm8gcG9ydGlvbiBsaW1pdHMuIFRoaXMgaXMgdGhlIHBsYWNlIHlvdSBmaW5kIHdoYXRldmVyIHlvdSBpbiB0aGUgbW9vZCBmb3IgZnJvbSBvdXIgYWxsIHlvdSBjYW4gZWF0IHNwcmVhZCBvbiBvdXIgYnVmZmV0LiBGb3IgYnJlYWtmYXN0LCBsdW5jaCBhbmQgZGlubmVyLCBndWVzdHMgYWx3YXlzIGhhdmUgdGhlIG9wdGlvbiB0byBlYXQgYSBsaXR0bGUgb3IgZmVhc3Qgb24gYSBsb3QuCkNhbG1lciBsYSBwb3B1bGF0aW9uClNjb29wIFJldmlldyBvZiBCb29rcyBCdWdzIGZvciBLaWRzCkJ1dCB0aGVuIENoYXN0YWluIG1ldCBNb2xseSwgYW5kIHdlbnQgdG8gd2F0Y2ggcG9rZXIgbWF0Y2hlcyB0aGF0IHdlcmUgc2ltaWxhciB0byB3aGF0IHdlbnQgZG93biBpbiB0aGUgbW92aWUsIGFuZCBiZWdhbiB0byBmb3JtIGFuIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBzaGUgd2VudCB0aHJvdWdoLgpMIGVsbGVzIHNlIGNvbnN1bWVudCBlbiBtZXR0YW50IHVuZSB2YXBldXIgcXUgYmFpbiBkZSB2YXBldXIgZW4gR3JjZSBuZSBzYXVyYWl0IHN1cnBhc3NlciwgZXQgY2V0dGUgdmFwZXVyIGZhaXQgY3JpZXIgbGVzIFNjeXRoZXMgZGUgam9pZS4gCkxhIHBvbG1pcXVlIGVzdCBsYW5jZSBzdWl0ZSAgbGEgZGlmZnVzaW9uIGQndW5lIHZpZG8gbG9ycyBkJ3VuIGRiYXQgIEFuZ2VycyBlbiAyMDA2IG8gTW1lIFNnb2xuZSBST1lBTCBmYWl0IHVuZSBwcm9wb3NpdGlvbjogYXUgbGlldSBkZXMgMTcgaGV1cmVzIG9ibGlnYXRvaXJlcyBkZSBwcnNlbmNlIGRlcyBwcm9mZXNzZXVycyAgbCdjb2xlLCBwYXNzZXIgYXV4IDM1IGhldXJlcyBkZSBwcnNlbmNlIGRhbnMgbCd0YWJsaXNzZW1lbnQ6ICJqZSBwZW5zZSBxdSd1bmUgZGVzIHJ2b2x1dGlvbnMgYydlc3QgZGUgZmFpcmUgbGVzIDM1IGggYXUgY29sbGdlIGMnZXN0ICBkaXJlIHF1ZSBsZXMgZW5zZWlnbmFudHMgcmVzdGVudCAzNSBoIGF1IGNvbGxnZSIgaW5jbHVhbnQgbGVzIGNvdXJzIGV0IHVuIHNvdXRpZW4gaW5kaXZpZHVhbGlzIGdyYXR1aXQuIENldHRlIG1lc3VyZSBwZXJtZXR0cmFpdCBkZSBmYXZvcmlzZXIgbGUgc291dGllbiBzY29sYWlyZSBncmF0dWl0IGV0IHZpdGVyIGxlcyBjaGVjcyBzY29sYWlyZXMuIHZpdGFudCBkJ2FpbGxldXJzIHF1ZSBkZXMgcHJvZmVzc2V1cnMgcGF5cyBwYXIgbCdFZHVjYXRpb24gTmF0aW9uYWxlIHV0aWxpc2UgY2VzIGhldXJlcyBwb3VyIGRpc3BlbnNlciB1biBzb3V0aWVuIHNjb2xhaXJlIGF1IG5pdmVhdSBwcml2IGRhbnMgZGVzIGVudHJlcHJpc2VzIGN0ZXMgZW4gYm91cnNlIHRlbGxlIHF1ZSBBY2FkZW1pYS4gQ2VydGVzLCBlbGxlIGluZGlxdWUgcXUnZWxsZSBuZSB2ZXV0IHBhcyBlbmNvcmUgY3JpZXIgY2V0dGUgaWRlICJzdXIgbGVzIHRvaXRzIiBjYXIgZWxsZSBuZSB2ZXV0IHBhcyAicHJlbmRyZSBkZXMgY291cHMgZGVzIG9yZ2FuaXNhdGlvbnMgc3luZGljYWxlcyBlbnNlaWduYW50ZXMiLiBMZSBkYmF0IHNlIGZhaXQgc291cyBsZXMgZm9uZHMgZGUgcmlyZSBkZXMgcGFydGljaXBhbnRzLgpUaGUgdG9wIDI1IHBlcmNlbnQgb2Ygd29ya2VycyBlYXJuZWQgbW9yZSB0aGFuICQzMCwwMDAgYSB5ZWFyLCB3aGlsZSB0aGUgYm90dG9tIHF1YXJ0ZXIgbWFkZSBsZXNzIHRoYW4gJDE4LDQyMC4gCkV4dWJlcmFudCB3YXMgdGhlIHdvcmQgZm9yIHRoZSB3aWZlL2h1c2JhbmQgcGlhbm8gZHVvIG9mIEVtbWF1cyBuYXRpdmUgYW5kIHByaW5jaXBhbCBrZXlib2FyZGlzdCBvZiB0aGUgTG9zIEFuZ2VsZXMgUGhpbGhhcm1vbmljIEpvYW5uZSBQZWFyY2UgTWFydGluLCBhbmQgaGVyIGh1c2JhbmQgR2F2aW4gTWFydGluLiBUaGVpciBwZXJmb3JtYW5jZSBvZiB0aGUgUG91bGVuYyBjb25jZXJ0byB3YXMgYSBoaWdoIHdpcmUgYWN0IG9mIHBlcmZlY3RseSBzeW5jaHJvbml6ZWQganVtcHMgYW5kIGxlYXBzIHRocm91Z2ggdGhpcyBnaWRkeSByb21wIGJyaW1taW5nIHdpdGggaW5zb3VjaWFuY2UuIE1hdXJpY2UgQ2hldmFsaWVyIG1lZXRzIE1vemFydCBpbiB0aGlzIHRocmVlIG1vdmVtZW50IHdvcmssIHdoaWNoIGhhZCB0aGUgTWFydGlucyBtYXRjaGluZyBlYWNoIG90aGVyIG5vdGUgZm9yIG5vdGUgaW4gdGhlIG11c2ljIGhhbGwgYnVmZm9vbmVyeSBhbmQgamF6enkgc2F1Y2luZXNzIG9mIHRoZSBvdXRlciBtb3ZlbWVudHMsIHdoaWxlIHRoZWlyIGtleWJvYXJkcyBmbG93ZWQgb25lIGludG8gdGhlIG90aGVyIGluIHRoZSB3aXN0ZnVsLCBuZW9jbGFzc2ljIG1pZGRsZSBtb3ZlbWVudC4uIApCdXQgcmlnaHQgbm93IEFzaWYgWmFyZGFyaSBzZWVtIHRvIGhhdmUgYSBiZXR0ZXIgaGFuZCBhdCB0aGUgdGFibGUuIApHdW5zIGZvciBIaXJlLCB0aGUgY28gb3AgZ2FtZSBtb2RlLCBsZXRzIHBlb3BsZSBqb2luIHRoZWlyIGZyaWVuZHMgdG8gZmlnaHQgdG9nZXRoZXIgYW5kIGV4cGxvcmUgdGhlIG9wZW4gd29ybGQgb2YgS3lyYXQuIFRoZSB3b3JsZCBpcyBwb3B1bGF0ZWQgd2l0aCB2ZWhpY2xlcywgYW5pbWFscywgZW5lbWllcyBhbmQgYWxsaWVzLCBhbGwgb2Ygd2hpY2ggaW50ZXJhY3QgaW4gZGlmZmVyZW50IHdheXMgdG8gYWxsb3cgcGxheWVycyB0byBjaG9vc2UgdGhlaXIgb3duIHN0cmF0ZWdpZXMgYW5kIHNoYXBlIHRoZWlyIGV4cGVyaWVuY2VzLiAKSW4gb3JkZXIgdG8gc2VlIGlmIHlvdSBhcmUgZWxpZ2libGUgZm9yIHRoaXMgYm9udXMgb2ZmZXIgeW91IHdpbGwgbmVlZCB0byByZWFkIHRoZSBmdWxsIHRlcm1zIGNvbmRpdGlvbnMgZm9yIHRoaXMgYm9udXMsIHdoZXJlIGFsbCB0aGUgY291bnRyaWVzIHRoYXQgYXJlIG5vdCBlbGlnaWJsZSBmb3IgdGhlIG9mZmVyIGFyZSBsaXN0ZWQuVGhlIHByb21vdGlvbnMgYXQgQmV0VmljdG9yIG1haW5seSBlbmNvbXBhc3MgaG9yc2UgcmFjaW5nIG9yIGZvb3RiYWxsLCB3aXRoIG90aGVyIHNwb3J0cyBiZWluZyBjb3ZlcmVkIG9jY2FzaW9uYWxseSwgYmFzZWQgb24gdGhlIGRlbWFuZC4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLgpJIGxpdmUgaW4gTGVhbWluZ3RvbiBTcGEsIGFuZCBhbSBmcmVxdWVudGx5IGFtYXplZCBhdCB0aGUgbG9jYWwgaG91c2UgcHJpY2VzLCB3aGljaCBwcm9iYWJseSBtZWFucyB0aGF0IGJ5IHRoZSB0aW1lIHdlIG5lZWQgYSBmYW1pbHkgaG91c2UsIHdlIHdvbid0IGJlIGFibGUgdG8gYWZmb3JkIG9uZSAuSSB3YXMgZHVtYiBlbm91Z2ggdG8gbWFyayB0aGUgc3BvdCB3aGVyZSBJIGxpdmUgb24gdGhlIEgyRzIgUmVzZWFyY2hlcidzIE1hcC4gCkFzIFRpbSBXaXNlLCBvbmUgb2YgdGhlIGNvdW50cnkgZm9yZW1vc3QgY3JpdGljcyBvZiB3aGl0ZSBwcml2aWxlZ2UsIHBvaW50ZWQgb3V0IG9uIENOTiwgaXQgaW1wb3NzaWJsZSB0byBub3Qgc2VlIHRoZSBoZWFsdGggY2FyZSBkZWJhdGVzIGFzIGEgcHVibGljIHNwYWNlIGluIHdoaWNoIHdvcmtpbmcgd2hpdGVzIGFyZSBleHByZXNzaW5nIHJhY2UgcGFyYW5vaWEuIFRoZXkgZmVhciB0aGF0IHRoZWlyIGNlbnR1cmllcyBvZiB3aGl0ZSBwcml2aWxlZ2UsIHdoYXQgRGF2aWQgUm9lZGlnZXIgY2FsbGVkICJ0aGUgd2FnZXMgb2Ygd2hpdGVuZXNzLCIgYXJlIGJlaW5nIHRocmVhdGVuZWQgYnkgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uLi4gClRoZSBtYXJrZXRpbmcgZHJhdywgU2F1bCAiQ2FuZWxvIiBBbHZhcmV6LiBDYXJuZSBsbyBoYXMgYmVlbiBpbiBzb21lIHdhcnMgcmVjZW50bHkgYW5kIGhhcyBwcm92ZW4gdG8gYmUgYmF0dGxlIHRlc3RlZC4gSGUncyBhZHZpc2VkIGJ5IGNsYXNzIGFjdCBPc2NhciBEZSBMYSBIb3lhLCB3aG8ncyB0dXJuZWQgdGhlIHByb3RnIGludG8gYSByaXNpbmcgc3RhciBhdHRyYWN0aW9uLiBCdXQgcmVjZW50IGRldmVsb3BtZW50cyBhYm91dCBmYWlsZWQgZHJ1ZyB0ZXN0cyBjYW5ub3QgYmUgaWdub3JlZC4gUmVnYXJkbGVzcyBvZiB5b3VyIG9waW5pb24gb24gTW9uZXksIGhlJ3MgbmV2ZXIgYmVlbiBjYXVnaHQgZG9waW5nLiBUaGUgd2luayB3aW5rIHJ1bW9yIGhhcyBhbHdheXMgYmVlbiB0aGF0IEZsb3lkIHJlY2VpdmVkICJzcGVjaWFsIGV4ZW1wdGlvbnMiIHdpdGggcGVyZm9ybWFuY2UgZW5oYW5jZXJzIGJlaW5nIGEgTGFzIFZlZ2FzIGJhc2VkIGZpZ2h0ZXIgYnV0IHNpbmNlIGl0J3MgbmV2ZXIgYmVlbiBwcm92ZW4sIHdlIGNhbiBvbmx5IGNvbmNsdWRlIGl0IGlzbid0IHRydWUuIEZvciBDYXJuZSBsbyBvbiB0aGUgb3RoZXIgaGFuZCBpdCBzZXJpb3VzbHkgdGFpbnRzIGhpcyBsZWdhY3kgYW5kIHN0b3BzIGEgbG90IG9mIG1vbWVudHVtLiBIb3dldmVyLCB0aGlzIGRvZXMgbm90IG5lZ2F0ZSB0aGUgc3BlY2lhbCB0YWxlbnQgQ2FybmUgbG8ncyBwcm92ZW4gaGltc2VsZiB0byBiZS4gQW5kIHJlbGF0aXZlbHkgeW91bmcgYXQgMjcgeWVhcnMgaGUncyBnb3QgYSBzbWFsbCB3aW5kb3cgdG8gcmVlc3RhYmxpc2ggaGltc2VsZiBhcyBhbiB1bmNvbnRhbWluYXRlZCBmaWdodGVyLgpBbmQgYWxzbyB0aGluZ3MgbGlrZSB2YWNjaW5lcyB0aGF0IGRvbiBtYWtlIEJpb3RlY2ggY29tcGFuaWVzIG1vbmV5IGJ1dCBhcmUgc3RpbGwgbmVlZGVkIGZvciBwdWJsaWMgaGVhbHRoLiBIZXJlIGEgbGluayB0byB0aGUgMjAwNyAyMDA3IENCTyByZXBvcnQgdGhhdCB0YWxrcyBhYm91dCB0aGlzLiAKT25lIGltcG9ydGFudCB3YXkgdG8gYXNzaXN0IHlvdXIgaW1tdW5lIHN5c3RlbSBpcyBhIGx5bXBoYXRpYyBtYXNzYWdlIHRoYXQgdXNlcyBlc3NlbnRpYWwgb2lscy4gTHltcGggbm9kZXMgYXJlIGxvY2F0ZWQgYXJvdW5kIHRoZSBib2R5LCBwYXJ0aWN1bGFybHkgaW4gdGhlIHRocm9hdCwgZ3JvaW4sIGJyZWFzdHMsIGFuZCB1bmRlciB0aGUgYXJtcy4gCk5ldmFkYSBUaGUgQmlnIFBva2VyIEZyZWV6ZQpEZXRhaWxzIGFyZSBpbXBvcnRhbnQuIFdoZW4gZmFjdWx0eSBtZW1iZXJzIHJldmlldyBzdHVkZW50IGV2YWx1YXRpb25zIG9mIHRlYWNoaW5nLCB0aGVyZSBpcyBhIGxvdCBvZiBkaXN0cnVzdCB3aGVuIGl0IGNvbWVzIHRvIHN0dWRlbnQgb3BpbmlvbiAgIHBhcnRpY3VsYXJseSBvbiB0aGluZ3MgdGhhdCBzdHVkZW50cyBtYXkgbm90IGhhdmUgdGhlIGV4cGVyaWVuY2Ugb3IgZXhwZXJ0aXNlIHRvIGp1ZGdlLiBJZiB5b3VyIG9waW5pb25zIGNhbiBiZSBzdXBwb3J0ZWQgYnkgc3BlY2lmaWMgZXhhbXBsZXMgdGhleSBiZWNvbWUgbXVjaCBtb3JlIHZhbHVhYmxlLi4gCkkgY2FsbGVkIGhpcyBleCB0aGF0IG5pZ2h0IGFuZCB0b2xkIGhlciBub3QgdG8gZ28gdG8gdGhlIHdlZGRpbmcgKGRpZGluIGdpdmUgaGVyIGFueSBleHBsYW5hdGlvbiBldmVuIHRob3VnaCBzaGUgYXNrZWQpLiBUaGUgd2VkZGluZyBoYXBwZW5lZCBhIGZldyBkYXlzIGxhdGVyIGFuZCB0aGUgbWFycmlhZ2UgbGFzdGVkIGEgbW9udGguIFRoZSBvdXRjb21lIHdhcyBpbmV2aXRhYmxlIGJ1dCBJIGp1c3QgZGlkbiB3YW50IGFuIGV4cGxvc2lvbiBhdCB0aGUgY2VyZW1vbnkgYmVjYXVzZSB0aGVyZSB3b3VsZCBiZSBhIGxvdCBvZiBjb2xsYXRlcmFsIGRhbWFnZSBhbmQgc29tZSBpbm5vY2VudCBwZW9wbGUgKGhpcyBleCBmb3IgZXhhbXBsZSkgd291bGQgYmUgYmxhbWVkLi4gCkxhYm9yIGFudGkgcG9raWUgc3RhbmNlIHByb21wdGVkIGEgbWFzc2l2ZSBhZHZlcnRpc2luZyBjYW1wYWlnbiBmcm9tIGhvc3BpdGFsaXR5IGdyb3Vwcywgd2hvIGNsYWltZWQgdGhlIG1vdmUgd291bGQgY29zdCB0aG91c2FuZHMgb2Ygam9icy4KSXQgdG9vayBhIHllYXIgYW5kIGEgaGFsZiBvZiB0aGVyYXB5IGFuZCBjb3Bpbmcgc2tpbGxzIHRvIGJlIGFibGUgdG8gcmlwIHRoZSBibGFua2V0IG9mZiBmb3IgbWUuIEl0IHdhc24ndCBzb21ldGhpbmcgSSB3YXMganVzdCBhYmxlIHRvIGRvIG5hdHVyYWxseS4uIApBdXN0cmFsaWFuIEFzc29jaWF0ZWQgUHJlc3NBcHJpbCAyNCAyMDE4ICAgNjoyNVBNLiAKVGhlcmUgbm8vZmV3IG1hbmEgZml4IGluIGRyYWZ0LCBzbyBwbGFuIHlvdXIgY29sb3VyIGNob2ljZXMgZWFybHkgYW5kIHNlZSB3aGF0IGNvbG91cnMgdGhlIGJvdHMgYXJlIGxlYXZpbmcgeW91IGZvciBkdXJpbmcgdGhlIGZpcnN0IHBhY2suIApJIHJlbWVtYmVyIHdoZW4gSSB3YXMgYSBzaXh0ZWVuIEkgY2FsbGVkIHRoaXMgZ2lybCBieSBtaXN0YWtlIGFuZCB3ZSB0YWxrZWQgZm9yIGhvdXJzLiBBbHNvLCBhbHdheXMgZmluZCB3YXlzIHRvIGFncmVlIHdpdGggaGVyLiAKUGVyaGFwcyB0aGUgd2lmZSBpcyBhbG1vc3QgY2VydGFpbiB0aGF0IHNoZSBpcyBiZWluZyBjaGVhdGVkIG9uIGJ1dCBoYXMgbm8gcHJvb2YuIApJIHRoaW5rIHRoZSBtYW5hIGJvbWIgd2FzIGltcG9ydGFudCBhdCB0aGUgdGltZSwgcHJvdmlkaW5nIGEgc2VtYmxhbmNlIG9mIGNvbnNlcXVlbmNlIHRvIHdhciBpbiBhIGxhcmdlbHkgY29uc2VxdWVuY2UgZnJlZSBNTU8gc2V0dGluZywgYW5kIHByb3ZpZGluZyBpbmNlbnRpdmUgZm9yIHBsYXllcnMgYW5kIGFsbGlhbmNlIHRvIGhhdGUgR2Fycm9zaCBhcyB0aGUuIApSQU5LSU4sIFJvYmVydCBDLiBSQU5LSU4sIFJvYmVydCBDLgpXaGVuIERvbWluaWMgbGllZCBhYm91dCBoYXZpbmcgc2V4IGFuZCBiZWluZyBpbiBhIHJlbGF0aW9uc2hpcCB3aXRoIG1lLCBJIHRob3VnaHQgYmFjayB0byB0aGF0LCBhbmQgZnVsbHkgdW5kZXJzdG9vZCB0aGUgZ2lybCBhbmdlci4gCiJTaGUgaXMgZW1iYXJyYXNzZWQgYnkgd2hhdCBoYXBwZW5lZC4gU2hlIHdpc2hlcyBpdCBuZXZlciBoYXBwZW5lZC4gT2YgY291cnNlIHNoZSB3b3VsZCBuZXZlciB3aXNoIHRoYXQgYW55Ym9keSBiZSBodXJ0LCIgaGVyIGxhd3llciwgR3JlZ29yeSBMZXNsaWUsIHRvbGQgcmVwb3J0ZXJzLgpCb251c2VzIGFuZCBQcm9tb3Rpb25zClRoZXkgaGF2ZSB2ZXJ5IGZldyBzZXR0aW5ncywgdGhlIGZpbG0gaXMgZXh0cmVtZWx5IGZpY2tsZSwgYW5kIHRoZXkgd2VyZSBjcmVhdGVkIGF0IGEgdGltZSB3aGVuIHRoZSBncmVhdCBkZW1vY3JhdGl6YXRpb24gb2YgcGhvdG9ncmFwaHkgd2FzIGluIGZ1bGwgc3dpbmcgbWVhbmluZyB0aGUgc2ltcGxpZnlpbmcgb2YgdGhlIHRlY2hub2xvZ3kgdG8gcHV0IGNhbWVyYXMgaW4gdGhlIGhhbmRzIG9mIHRoZSBhdmVyYWdlIHBlcnNvbiB3YXMgd2VsbCB1bmRlcndheS4uIApIb29wZXIuIApCbGFjayBmcnVpdCwgYmxhY2sgY2hlcnJ5IGphbSBhbmQgZnJhZ3JhbnQgZGFyayBmbG9yYWxzIHRoYXQgZG92ZXRhaWwgaW50byBhIHdhcm0sIHJvdW5kIGZpbmlzaC4gUm9hc3QgbGFtYiBhbmQgb3IgdHVya2V5IHdvdWxkIGJlIGEgZmluZSBtYXRjaC4gQ2VydGFpbmx5LCBhIG1vcmUgbW9kZXJhdGUgbG9vayBhdCBSaWJlcm8gZGVsIER1ZXJvIGFuZCBUZW1wcmFuaWxsbywgYW5kIGl0IGxvb2tzIGdvb2Qgb24gZXZlcnlvbmUuIFlvdSBjYW4gZWFzaWx5IGNlbGxhciB0aGlzIHRocm91Z2ggMjAyMy4gClRoZSBwb3B1bGFyIFJ1bm5pbmcgQWNlcyBIYXJuZXNzIFBhcmsgaW4gQ29sdW1idXMsIE1pbm5lc290YSBwbGF5ZWQgaG9zdCB0byB0aGUgbGF0ZXN0IGV2ZW50IG9uIHRoZSBNaWQgU3RhdGVzIFBva2VyIFRvdXIuIEp1c3QgYSBmZXcgbW9udGhzIGFmdGVyIGZpbmlzaGluZyA1dGggYXQgTVNQVCBTaGFrb3BlZSwgYWxzbyBpbiBNaW5uZXNvdGEsIEtlbiBQYXRlcyAoR1BJMTE5MjcpIHdhcyBhdCBhbm90aGVyIE1pZCBTdGF0ZXMgUG9rZXIgVG91ciBmaW5hbCB0YWJsZSBidXQgdGhpcyB0aW1lLCB0aGUgcmVzdWx0IHdvdWxkIGJlIGRpZmZlcmVudC4gUGF0ZXMgd291bGQgZWFybiBoaXMgZmlyc3Qgd2luIG9uIHRvdXIsIHBpY2tpbmcgdXAgdGhlICQ4Nyw2OTggdG9wIHByaXplLgpIYW5kcyBkb3duIChhZ2Fpbiwgbm8gcHVuIGludGVuZGVkKSBteSBmYXZvcml0ZSBtYW5ldXZlciwgdGhvdWdoLCB3YXMgdGhlIG9uZSBzaGUgcGVyZm9ybWVkIG9uIG15IG5lY2sgYW5kIHNob3VsZGVycy4gCldlIGhhdmUgbWFkZSBIaWRkZW4gTGVucyBmb3IgUGxheWluZyBDYXJkcyBpbiBEZWxoaSBJbmRpYSBhdmFpbGFibGUgdGhyb3VnaCBvdXIgc2hvcCwgeW91IGNhbiBidXkgT25saW5lIG9yIGNhbiBkcm9wIGJ5IG91ciBzaG9wIGluIERFTEhJLiAKUG9rZXIgdHJpY2tzIGFuZCBwb2tlciBjaGlwcyB3aWxsIHN0YXkgd2l0aCB1cyBmb3IgYW4gaW5kZWZpbml0ZSBwZXJpb2Qgb2YgdGltZS4gCkdldHMgdGlyaW5nIHRlbGxpbmcgcGVvcGxlIHRoYXQgUm9iZXJ0byBMdW9uZ28gaXMgdGhlIGJyb3RoZXIgb2YgdGhlIGZhbW91cyBwb2tlciBwbGF5ZXIgRmFiaW8uIApNb3JlIFN0b3JpZXMgR2FtYmxpbmcgcmVmb3JtIGxhd3MgcGFzcyBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMgV2lsa2llIGNhbGxzIG9uIEdyZWVucyB0byBzdGVwIHVwIGFuZCBzdXBwb3J0IHBva2llIHJlZm9ybSBTbWFsbCB2ZW51ZXMgcmVjZWl2ZSBtb3JlIHRpbWUgdG8gYWRqdXN0IHRvIGdhbWJsaW5nIHJlZm9ybXMgV2lsa2llIHN1cHBvcnRzIGN1dCBkb3duIHBva2llIGJpbGwgUG9raWVzIHJlc3RyaWN0aW9ucyB2b3RlZCBkb3duIGF0IFdvb2xpZXMgbWVldGluZyBDbHVicyB0b29rIHRpcHMgZnJvbSBSaWZsZSBBc3NvY2lhdGlvbiBmb3IgY2FtcGFpZ24gV2lsa2llIHBva2llIHJlZm9ybXMgdG8gYmUgZGlzbWFudGxlZCB3aXRoIExhYm9yIHN1cHBvcnQKSWYgcG9zc2libGUsIGxvYWQgeW91ciBzdHVmZiBzbyB0aGF0IHRoZSBtb3N0IG5lY2Vzc2FyeSBpdGVtcyB3aWxsIGJlIHVucGFja2VkIGZpcnN0IGFuZCBhbHdheXMgbG9hZCB0aGUgYmVkIGFuZCBzaGVldHMgbGFzdC4gWW91IHdhbnQgdGhhdCBiZWQgc2V0IHVwIGltbWVkaWF0ZWx5LiAKRGFzaG5pbmUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkFuZCB0aGF0J3MgYmVjYXVzZSBpdCdzIGFsbCBhYm91dCB0ZWRpb3VzbHkgd2FpdGluZyBmb3IgdGhlIHBlcmNlbnRhZ2VzIHRvIGxpbmUgdXAgaW4geW91ciBmYXZvciAgIHN1Y2Nlc3NmdWwgcG9rZXIgcGxheWVycyBvbmx5IHBsYXkgYWJvdXQgMjAgcGVyY2VudCBvZiB0aGUgaGFuZHMgdGhleSdyZSBkZWFsdC4gCiIgSW52ZXN0aWdhdG9ycyBzYXkgRXJuaWUgd2FudGVkIGEgZ3VuLiAKTWFraW5nIGEgbW92ZSBiYXNlZCBvbiB5b3VyIGVtb3Rpb25zIHdpbGwgb25seSBjYXVzZSB5b3UgdG8gbWFrZSBtaXN0YWtlcy4uIApJIGNsaW1iZWQgYmFjayBpbnRvIG91ciB2YW4gd2l0aCBhbiBvbGQgY2FudmFzIGZlZG9yYSAodGhpcyB3YXMgd2VsbCBiZWZvcmUgZmVkb3JhIGJlY2FtZSBhIGhpcHN0ZXIgaXRlbSBhbmQgd2VyZSBtZW1lZCBzbyBoZWF2aWx5LikgSXQgd2FzIGEgaGF0IEkga25ldyBoZSBoYWQgd29ybiBmb3Igc2V2ZXJhbCBkZWNhZGVzLiBJIHNhdyBoaW0gd2VhcmluZyBpdCBpbiBzbyBtYW55IG9mIGhpcyBwaWN0dXJlcy4gSSBmZWx0IGxpa2UgaGlzIHNwaXJpdCBzb21laG93IHN0aWxsIGxpbmdlcmVkIGluIGhpcyBvbGQgaGF0LiAKRnJvemVuLCBVbnJlc3BvbnNpdmUgQ2F0IEJyb3VnaHQgQmFjayBUbyBMaWZlIEJ5IFZldGVyaW5hcmlhbnNBbiAiZXNzZW50aWFsbHkgZnJvemVuIGFuZCB1bnJlc3BvbnNpdmUiIGNhdCBmb3VuZCBidXJpZWQgdW5kZXIgYSBtb3VudGFpbiBvZiBzbm93IGluIE1vbnRhbmEgaGFzIGJlZW4gc2F2ZWQuCkh5c3RlcmljYWwgYW5kIGludGVsbGVjdHVhbCwgdGhvc2UgYm9ybiB3aXRoIHRoZWlyIHN1biBpbiBHZW1pbmkgYXJlIG5hdHVyYWwgY29udmVyc2F0aW9uYWxpc3RzIGFuZCBpbmNyZWRpYmxlIHN0b3J5dGVsbGVycy4gIlRoZXJlJ3MgcmVhbGx5IG5vdGhpbmcgYSBHZW1pbmkgY2FuJ3QgZG8sIGFuZCB0aGUgd29ybGQgY2FuJ3QgaGVscCBidXQgYWRtaXJlIHRoZWlyIGNoYW1lbGVvbiBsaWtlIHBlcnNvbmFsaXRpZXMsIiBzYXlzIE1lc2EuIEp1c3QgcmVtZW1iZXI6IEdlbWluaSBpcyB0aGUgc2lnbiBvZiB0aGUgdHdpbnMsIHNvIHRoZXkgbWF5IHNoaWZ0IGJldHdlZW4gdHdvIGRpZmZlcmVudCBwZXJzb25hbGl0eSB0eXBlcyB3aXRob3V0IGEgd2FybmluZy4uIApBY3R1YWxseSBtYXJpYWNoaSByZWFwZXIgZml0cyBwZXJmZWN0bHkuIApBcmUgeW91IGZhbWlsaWFyIHdpdGggdGhlIHNpeCBwYXJ0cyBvZiBhbiBhcG9sb2d5PyBXaGF0IGFib3V0IHRoZSBuYXJjaXNzaXN0IHByYXllcj8gSWYgeW91IGdldCB0aGUgZmlyc3QsIGNvbnNpZGVyIGZvcmdpdmluZyBoZXIgYnV0IG5vdCBsZXR0aW5nIGhlciBrbm93IGFueXRoaW5nIHVudGlsIHlvdSByZWFkeSBmb3IgdGhlIHdvcmxkIHRvIGtub3cuIApJdCdzIHF1aXRlIGVhc3kgdG8gZG8gdGhpcyBmZWxsb3cgZHVlbGlzdCEgVGhpcyBpcyBhIGxpc3Qgb2YgaG93IHRvIGRvIHNvOiBSYSkgVG8gZGVmZWF0IHJhIHlvdSBuZWVkIGVub3VnaCBjYXJkcyB0byBkZWNyZWFzZSB0aGUgYXR0YWNrIG9mIHlvdXIgb3Bwb25lbnRzJyBtb25zdGVycy4gClByb2dlc3Rlcm9uZSBhbHNvIHBsYXlzIGEgcm9sZS4gU3R1ZGllcyBzaG93IHRoYXQgdGhlIGN5Y2xlIG9mIG92dWxhdGlvbiBpcyBhbHNvIGEgY3ljbGUgb2YgYm9uZSBmb3JtYXRpb24uIFByb2dlc3Rlcm9uZSBsZXZlbHMgZHJvcCBhZnRlciBnaXZpbmcgYmlydGgsIGFuZCBhZnRlciBtZW5vcGF1c2UsIHNvIHJldHVybmluZyB5b3VyIGxldmVscyB0byBub3JtYWwgY2FuIGJlLCBhY2NvcmRpbmcgdG8gb25lIHN0dWR5LCAiZXh0cmFvcmRpbmFyaWx5IGVmZmVjdGl2ZSBpbiByZXZlcnNpbmcgb3N0ZW9wb3Jvc2lzLiIzClRoYXQgQ0JTIGJlZ2FuIHJlc3RydWN0dXJpbmcgaXRzIHJldmVudWUgcGlwZWxpbmUgd2VsbCBiZWZvcmUgaXRzIG93biByYXRpbmdzIGJlZ2FuIHRvIENvc3RhbnphIG1ha2VzIGl0IGFuIG91dGxpZXIgb2Ygc29ydHMgYW1vbmcgaXRzIGJyb2FkY2FzdCByaXZhbHMuIEluIGJlaW5nIGZhciBsZXNzIGJlaG9sZGVuIHRvIGl0cyBuaWdodGx5IGRlbGl2ZXJpZXMsIHRoZSBUaWZmYW55IG5ldHdvcmsgbm93IGhhcyBncmVhdGVyIGxhdGl0dWRlIHRvIHJlbmV3IHNob3dzIHRoYXQgb25seSBhIGZldyB5ZWFycyBhZ28gd291bGQgaGF2ZSBiZWVuIHJlbWFuZGVkIHRvIHRoZSBtZWF0IGdyaW5kZXIuLiAKR2FsbGVyeSBQYXJrbGFuZDogT25lIFllYXIgTGF0ZXJPbmUgWWVhciBBbm5pdmVyc2FyeSBPZiBEZWFkbHkgU2hvb3RpbmcgQXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIEluIFBhcmtsYW5kLCBGbG9yaWRhUEFSS0xBTkQsIEZMT1JJREEgICBGRUJSVUFSWSAxNDogUGVvcGxlIHBhdXNlIGZvciBhIG1vbWVudCBvZiBzaWxlbmNlIGF0IDEwOjE3YW0gbmVhciBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgYXMgdGhleSByZW1lbWJlciB0aG9zZSBsb3N0IGR1cmluZyBhIG1hc3Mgc2hvb3RpbmcgYXQgdGhlIHNjaG9vbCBvbiBGZWJydWFyeSAxNCwgMjAxOSBpbiBQYXJrbGFuZCwgRmxvcmlkYS4gCklmIHlvdSBob3Agb2ZmIHRoZSBwbGFuZSwgdGhyb3cgeW91ciBiYWdzIG9uIHRoZSBob3RlbCBiZWQgYW5kIGhlYWQgdG8gdGhlIG5lYXJlc3QgJDIgJDUgTkxIRSB0YWJsZSBlbmpveSB5b3Vyc2VsZiwgYnV0IGlmIHlvdSBsb3NlICQ1MDAgcmlnaHQgb2ZmIHRoZSBiYXQgZ28gdGFrZSBhIGJyZWFrLiBEb24ndCBsb3NlIGEgYmlnIGNodW5rIG9mIHlvdXIgYmFua3JvbGwgdGhlIGZpcnN0IGNvdXBsZSBvZiBkYXlzIGFmdGVyIHlvdSBhcnJpdmUgb3IgeW91IG1heSBlbmQgdXAgZ29pbmcgYnJva2UgZHVyaW5nIHRoZSBtaWRkbGUgb2YgeW91ciB0cmlwIGlmIHlvdXIgbHVjayBkb2Vzbid0IHR1cm4uIApISFAgRG9jdG9yYWwgU3R1ZGVudCBKdW55b3VuZyBIb25nJ3MgcmVzZWFyY2ggcHJvcG9zYWwgdGl0bGVkLCAiVGhlIGVmZmVjdCBvZiBleGVyY2lzZSBvbiBwdXJpbmVyZ2ljIHJlY2VwdG9yIG1lZGlhdGVkIGNlcmVicm92YXNjdWxhciBkeXNmdW5jdGlvbiBpbiBBbHpoZWltZXIgZGlzZWFzZSIgaGFzIGJlZW4gc2VsZWN0ZWQgZm9yIGZ1bmRpbmcgYnkgdGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgU3BvcnRzIE1lZGljaW5lIChBQ1NNKSBGb3VuZGF0aW9uIERvY3RvcmFsIFN0dWRlbnQgUmVzZWFyY2ggR3JhbnQgUHJvZ3JhbS4gCldlbGwsIEkgaGF2ZSBuZXZlciBoZWFyZCBvZiBhIEtBMjM0IHN0cmFpZ2h0LiBIb3dldmVyLCBQb2tlciBpcyBraW5kIG9mIHZhZ3VlLiAKQ2VjaSBkaXQsIGlsIG1ldCBlbiBnYXJkZSBldCByZWNvbW1hbmRlIGRlIG4gcG9pbnQgdHJvcCB1c2VyIGF1IHJpc3F1ZSBkZSBkcmFuZ2VyIGxlcyBlc3ByaXRzLiAKRHJhZ2dpbmcgVHJ1bXAgb3V0IGluIGN1ZmZzIGFuZCBzcGxhdHRlcmluZyB0aGUgdHJ1dGggYWJvdXQgaGltIGFsbCBhcm91bmQgdGhlIHdvcmxkIGluIGJsYWNrIGluayB3aWxsIGRvIG5vdGhpbmcuIApUaGlzIHRpbWUsIEkgY2FtZSB0byBWZWdhcyB0byBiZSBhdCB0aGUgZG91YmxlIHdvcmxkIGNoYW1waW9uc2hpcCBmaWdodCBjYXJkOiBGbG95ZCBNYXl3ZWF0aGVyIEpyLiwgV0JDIGRpYW1vbmQgYW5kIHdlbHRlcndlaWdodCBjaGFtcGlvbiBhZ2FpbnN0IFJvYmVydG8gR3VlcnJlcm8sIFdCQyBpbnRlcmltIHdvcmxkIGNoYW1waW9uLiBUaGUgb3RoZXIgYmlnIGZpZ2h0IHdhcyBiZXR3ZWVuIFdCQyBmZWF0aGVyd2VpZ2h0IGNoYW1waW9uLCBEYW5pZWwgUG9uY2UgZGUgTGVuLCBhZ2FpbnN0IGhpcyBjaGFsbGVuZ2VyIEFibmVyIE1hcmVzLCBmb3IgdGhlIGZlYXRoZXJ3ZWlnaHQgd29ybGQgdGl0bGUuIApCb3V0aW4gbm90ZWQgdGhhdCBtYXNzYWdlIHBhcmxvcnMgaW4gdGhlIHJlZ2lvbiBoYXZlIHNvbWV0aW1lcyBiZWVuIHVzZWQgYXMgdHJhbnNpdCBwb2ludHMgZm9yIGh1bWFuIHRyYWZmaWNrZXJzLCB3aG8gZm9yY2UgdW5kZXJhZ2UgZ2lybHMgZnJvbSBBc2lhIGludG8gd29ya2luZyBhdCB0aGUgZXN0YWJsaXNobWVudHMgdG8gcGF5IG9mZiBsYXJnZSBkZWJ0cyBmb3IgYnJpbmdpbmcgdGhlbSBpbnRvIHRoZSBjb3VudHJ5IGlsbGVnYWxseS4KVGhlbiwgbGF0ZSBsYXN0IHNlYXNvbiwgcnVtb3JzIHN1cmZhY2VkIHRoYXQgaGUgd291bGQgcmVwbGFjZSBKYW1pZSBNY011cnJheSBpbiB0aGUgTm8uIDEgY2FyLCBhbmQgdGhlIGdvc3NpcCB3YXMgY29uZmlybWVkIHdoZW4gR2FuYXNzaSBSYWNpbmcgYW5ub3VuY2VkIHRoZSBtb3ZlIGluIGVhcmx5IERlY2VtYmVyLiBMYXN0IHdlZWsgYXQgTGFzIFZlZ2FzLCBhIGd1dHN5IGxhdGUgcmFjZSBzdHJhdGVneSBieSBjcmV3IGNoaWVmIE1hdHQgTWNDYWxsIGhlbHBlZCBCdXNjaCBsZWFkIDIzIGxhcHMgYW5kIGZpbmlzaCBmaWZ0aC4KUmFuZG9tX2FjY2Vzc19jYWNoZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBtb250aHMgYWdvCkkgd2FzIHJlYWxseSBidW1tZWQuIExFU1NPTiAxIEZlbGxvdyBOZXdiaWVzOiBJZiB5b3UgYXJlIGludmVzdGluZywgZG9uJ3QgZ2V0IGVtb3Rpb25hbCBhYm91dCBhIHByb3BlcnR5LiBUaGUgaG91c2UgZG9lc24ndCBnZXQgZW1vdGlvbmFsIGZvciB5b3UuIEFmdGVyIGEgc2hvcnQgbW91cm5pbmcgb2YgbWlzc2luZyB3aGF0IEkgdGhvdWdodCB3YXMgIlRoZSBPbmUiIG15IHJlYWx0b3IgdG9sZCBtZSBhYm91dCBhbm90aGVyIHByb3BlcnR5LiBXZSB3ZW50IHRvIGxvb2sgYXQgaXQsIEkgc2F3IHNvbWUgcG90ZW50aWFsLiAKWW91IG1heSBub3QgYmUgYWN0dWFsbHkgYXNzYXVsdGluZyBhIGtpZCwgYnV0IGJ5IHdhdGNoaW5nIGtpZGRpZSBwb3JuLCB5b3UgYXJlIGNvbnRyaWJ1dGluZyB0byB0aGUgaGFybSBvZiBjaGlsZHJlbi5JIGFkbWl0LCBJIGFzc3VtaW5nIGEgbG90IG9mIGNvbXBldGVuY3kgb24gdGhlIGxhd3llciBwYXJ0LiBCZWNhdXNlIGlmIGhlIGFjdHVhbGx5IHRoaW5rcyBoZSBjYW4gZ2V0IGEgc2V0dGxlbWVudCBvdXQgb2YgVGhlIFBvc3QuIAo3LiBBdmlzIGRlIG5vbiByZXNwb25zYWJpbGl0IFNJVEUgV0VCLCBMRVMgRk9OQ1RJT05OQUxJVCBFVCBMRSBDT05URU5VIFNPTlQgRk9VUk5JUyBURUxTIFFVRUxTIEVUIFRFTFMgUVVFIERJU1BPTklCTEVTIFZPVVMgTkFWSUdVRVogRVQgVVRJTElTRVogTEUgU0lURSBXRUIgRVQgTEVTIEZPTkNUSU9OTkFMSVQgVk9TIFBST1BSRVMgUklTUVVFUy4gTEEgUFJFU1NFIE5FIEZBSVQgQVVDVU5FIFJFUFIgTkkgR0FSQU5USUUgUVVBTlQgQVUgU0lURSBXRUIsIEFVWCBGT05DVElPTk5BTElUIEVUIEFVIENPTlRFTlUsIElOQ0xVQU5ULCBOT1RBTU1FTlQsIExFUyBHQVJBTlRJRVMgUVVBTlQgaSkgTEEgUVVBTElUIE1BUkNIQU5ERSwgTCBVTiBVU0FHRSBQQVJUSUNVTElFUiBEVSBDT05URU5VIE9VIExBIE5PTiBWSU9MQVRJT04gREVTIERST0lUUyBERSBQUk9QUkkgSU5URUxMRUNUVUVMTEU7IGlpKSBBVSBGT05DVElPTk5FTUVOVCBEVSBTSVRFIFdFQiBFVCBERVMgRk9OQ1RJT05OQUxJVCBERSBNQU5JIFMgRVQgU0FOUyBJTlRFUlJVUFRJT04sIE5JIEVSUkVVUjsgaWlpKSBBVSBGQUlUIFFVRSBMIERVIFNJVEUgV0VCIE9VIERFUyBGT05DVElPTk5BTElUIFNBVElTRkVSQSBWT1MgQkVTT0lOUyBFVCBWT1MgQVRURU5URVM7IGl2KSBMIEwgTEEgRklBQklMSVQgT1UgTEEgUEVSVElORU5DRSBEVSBTSVRFIFdFQiwgREVTIEZPTkNUSU9OTkFMSVQgRVQgRFUgQ09OVEVOVTsgdikgTEEgQ09SUkVDVElPTiBERVMgRCBPVSBERVMgRVJSRVVSUyBEQU5TIExFIFNJVEUgV0VCIEVUIExFUyBGT05DVElPTk5BTElUIHZpKSBMIERFIFZJUlVTIE9VIEQgRE9NTUFHRUFCTEVTIERBTlMgTEUgU0lURSBXRUIgRVQgTEVTIEZPTkNUSU9OTkFMSVQgRVQgdmlpKSBMQSBUUkFOU01JU1NJT04gUyBPVSBTQU5TIElOVEVSQ0VQVElPTiBERVMgQ09NTVVOSUNBVElPTlMgUEFSIEwgRFUgU0lURSBXRUIgT1UgREVTIEZPTkNUSU9OTkFMSVQgUFJFU1NFLCBTRVMgQ09NUEFHTklFUyBBRkZJTEkgRVQgTEVVUlMgQURNSU5JU1RSQVRFVVJTLCBFTVBMT1kgTUFOREFUQUlSRVMsIENPTkMgREUgTElDRU5DRSBPVSBMRVVSUyBTVUNDRVNTRVVSUyBFVCBBWUFOVCBEUk9JVFMgUkVTUEVDVElGUywgTkUgUEVVVkVOVCBFTiBBVUNVTkUgQ0lSQ09OU1RBTkNFIFRFTlVTIFJFU1BPTlNBQkxFUyBERVMgRE9NTUFHRVMgREUgVE9VVEUgTkFUVVJFLCBJTkRJUkVDVFMsIFNQIE9VIEZPUlRVSVRTIENPTVBSSVMsIFIgRElSRUNURU1FTlQgT1UgSU5ESVJFQ1RFTUVOVCBERSBMJ1VUSUxJU0FUSU9OIE9VIERFIExBIFBFUkZPUk1BTkNFIERVIFNJVEUgV0VCLCBERVMgRk9OQ1RJT05OQUxJVCBPVSBFTkNPUkUgRFUgQ09OVEVOVSBTVVIgQ0VVWCBDSSBPVSBTVVIgVE9VVCBBVVRSRSBTSVRFIEFVUVVFTCBWT1VTIFBPVVZFWiBBQ0MgUEFSIExFIFNJVEUgV0VCLCBNIFMgQ09OTkFJU1NBSUVOVCBPVSBBVVJBSUVOVCBEVSBDT05OQSBMQSBQT1NTSUJJTElUIERFIFRFTFMgRE9NTUFHRVMuCk9uIHBhcGVyIHRoZSBjb3VwbGUgaXMgd2VhbHRoeS4gCiJJJ2QgbmV2ZXIgaGF2ZSBkcmVhbWVkIGluIG15IHdpbGRlc3QgZHJlYW1zIHRoYXQgaXQgY291bGQgaGFwcGVuLCIgSGVzcCBzYXlzLCBkdXJpbmcgYW4gaW50ZXJ2YWwgYXQgdGhlIDg4OFBva2VyIExpdmUgTG9uZG9uIEZlc3RpdmFsLgpUbyBiZSBmYWlyIHRvIEdlbmVyYWwgTXVzaGFycmFmLCBPcGVyYXRpb24gS3Vyc2kgQmFjaGFvIGlzIG5vdCBzb21ldGhpbmcgaGUgaW52ZW50ZWQsIGl0IGEgc3RhbmRhcmQgb3BlcmF0aW9uIHRoYXQgaGFzIGJlZW4gZXhlY3V0ZWQgaHVuZHJlZHMgb2YgdGltZXMgaW4gUGFraXN0YW4gYmVmb3JlIGhpbSBhdCBkaWZmZXJlbnQgbGV2ZWxzLiBSYW5naW5nIGZyb20gbWFuYWdpbmcgZGlyZWN0b3JzIGF0IHB1YmxpYyBjb3Jwb3JhdGlvbnMsIGJ1cmVhdWNyYXRzLCBnZW5lcmFscywgYW5kIHByZXR0eSBtdWNoIGFueW9uZSB3aG8gaGFzIGdvdHRlbiB1c2VkIHRvIHRoZSBnb29kIGxpZmUgd2l0aG91dCBoYXZpbmcgcmVhbGx5IGVhcm5lZCBpdCwgT0tCIGhhcyBiZWVuIGltcGxlbWVudGVkIGFjcm9zcyB0aGUgYm9hcmQgaW4gUGFraXN0YW4gNjAgeWVhciBvbGQgaGlzdG9yeS4gU28gZm9yIHRoZSBHZW5lcmFsIHRvIGdvIGFoZWFkIGFuZCBkbyBpdCBpcyBuZWl0aGVyIHN1cnByaXNpbmcgbm9yIGlzIGl0IHVudXN1YWwuIApBIGtleSByZWFzb24gaXMgV2VhdmVyIGlzIGRlc3BlcmF0ZSBmb3IgdGhlIHNpZGUgdG8gd2luIHRoaXMgZmFsbCByZWZlcmVuZHVtIG9uIHByb3BvcnRpb25hbCByZXByZXNlbnRhdGlvbiwgYSB2b3Rpbmcgc3lzdGVtIHRoZSBHcmVlbnMgd2FudCBiYWRseSBiZWNhdXNlIGl0IHdvdWxkIGJvb3N0IHRoZSBudW1iZXIgb2YgTUxBcyB0aGV5IGVsZWN0IHRvIHRoZSBsZWdpc2xhdHVyZS4gQW5kIHRoYXQgYW5vdGhlciB3YXkgSG9yZ2FuIGhhcyBwbGF5ZWQgV2VhdmVyIGZvciBhIHN1Y2tlciBhdCB0aGUgcG9saXRpY2FsIHBva2VyIHRhYmxlLi4gCkRvbiBvdmVyIGludGVsbGVjdHVhbGl6ZSBtZWRpdGF0aW9uLiAKTWVkaWNhbCBzdHVkZW50cyByZXBvcnQgdGhhdCB0aGUgbWFqb3JpdHkgb2Ygc2V4dWFsIGhlYWx0aCBlZHVjYXRpb24gdGhleSByZWNlaXZlIHBlcnRhaW5zIHRvIGVuZG9jcmlub2xvZ3kgYW5kIHNleHVhbGx5IHRyYW5zbWl0dGVkIGluZmVjdGlvbnMuIApBIE1hcmNoIDIwMDQgc3R1ZHkgaW4gSk1QVCBmb3VuZCB0aGF0IGNoaXJvcHJhY3RpYyBjYXJlIGlzIG1vcmUgZWZmZWN0aXZlIHRoYW4gbWVkaWNhbCBjYXJlIGF0IHRyZWF0aW5nIGNocm9uaWMgbG93IGJhY2sgcGFpbiBpbiBwYXRpZW50cycgZmlyc3QgeWVhciBvZiBzeW1wdG9tcy4KVGhlIGNlbWVudCBpcyBhbHNvIGNvbXBsZXRlbHkgZGlmZmVyZW50IGluIGRlc2lnbiBhbmQgYXNzdW1pbmcgZHVyYWJpbGl0eSBmcm9tIHRoZSBvcmlnaW5hbCBjZW1lbnQuIApQb2xhcml6aW5nIHlvdXIgM2JldCByYW5nZSwgZXNwZWNpYWxseSBpbiBsaXZlIGdhbWVzIHdoZXJlIHlvdSBidXlpbiBmb3IgMTAwIDE1MGJiIGlzbid0IHRoYXQgZ29vZCBpbW8uIEEgbG90IG9mIHRoZSAiYmx1ZmYiIGhhbmRzIGRvbid0IGZ1bmN0aW9uIHRoYXQgd2VsbCBhdCB0aGUgU1BSIHRoYXQgcmVzdWx0cyBpbiB0aGVzZSBnYW1lcyBhbmQgeW91ciBtdWNoIGJldHRlciBvZmYganVzdCBwdXNoaW5nIGEgdG9uIG9mIGVxdWl0eSB3aXRoIGEgbGluZWFyIHJhbmdlLiBBbHNvIHRoZSBsYWNrIG9mIDRiZXR0aW5nIG1ha2VzIGdvaW5nIGxpbmVhciBzdXBlciBnb29kLgpPaCBHb2QsIEkgYW5zd2VyZWQgYW4gYWQgZm9yIGEgcm9vbSBmb3IgcmVudCBpbiBhIGhvdXNlIGluIEJlYXZlcnRvbi4gCldpdGhpbiBhIGNvdXBsZSBvZiBtb250aHMsIEkgbW92ZWQgZnJvbSBUZXhhcyB0byBDaGljYWdvIHRvIGxpdmUgd2l0aCBDbGFyYSBhbmQgaGVyIGh1c2JhbmQsIEJyaWFuLCB3aGlsZSB0aGV5IHByZXBhcmVkIGZvciB0aGUgYmFieSdzIGFycml2YWwuIApBbWxpb3JlciBsZXMgdGVtcHMgZGUgcnBvbnNlIGVuIEFyY3RpcXVlCldoZW4geW91IGxvb2sgYXQgdGhlIDIwMCBQbGFzdGljIFBva2VyIENoaXAgU2V0IEFuZCBDYXJvdXNlbCB5b3Ugd2lsbCBzZWUgdHdvIHNsb3RzIGZvciBkZWNrcyBvZiBjYXJkcyB0byBiZSBwbGFjZWQuIEhvd2V2ZXIsIGl0J3MgaW1wb3J0YW50IHRoYXQgeW91IHVuZGVyc3RhbmQgdGhpcyBkb2VzIG5vdCBjb21lIHdpdGggdHdvIHBsYXlpbmcgZGVja3MuIElmIHlvdSBuZWVkIGEgbGl0dGxlIGNvbnZlbmllbmNlLCBpdCBhbHNvIHNwaW5zIGFyb3VuZCBmb3IgZWFjaCBwbGF5ZXIgdG8gcHVyY2hhc2UgY2hpcHMuIApJY2ggd3JkZSBlcyB2aWVsbGVpY2h0IG1pdCA2MCBnciBTaGVhIHVuZCAzNSBnciBLYWthbyB2ZXJzdWNoZW4sIHZpZWxsZWljaHQgc29nYXIgbnVyIDI1IDMwIGdyIEtha2FvLiBIaWVyIGRhcmYgYmVpIGRlaW5lciBNaXNjaHVuZyBkZXIgQW50ZWlsIG5pY2h0IHp1IGhvY2ggc2VpbiwgZGEgZGllIE1lbHRzIHNvbnN0IG5pY2h0IGd1dCBhdWYgZGVyIEhhdXQgc2NobWVsemVuLiAKVGhvdWdoLCB0b2RheSwgb25saW5lIGNhc2lub3MgYXJlIHN0aWxsIHZlcnkgcG9wdWxhciwgdGhlIGdhbWJsaW5nIHdvcmxkIGlzIHN0aWxsIG5vdCBkb25lIGV2b2x2aW5nLiBWaXJ0dWFsbHkgYWxsIG5ldyBjYXNpbm9zIGJlaW5nIGxhdW5jaGVkIG9ubGluZSBhcmUgb2ZmZXJpbmcgYSBzZXBhcmF0ZSBjb2xsZWN0aW9uIG9mIG1vYmlsZSBnYW1lcy4gClRoZXkgYXJlIGF0IHRoZSBWRVJZIGxlYXN0IGFkYW1hbnRpdW0gbGFjZWQgYW5kIG1vbm9tb2xlY3VsYXIsIGJlaW5nIHN3dW5nIGJ5IHNvbWV0aGluZyBhdCBsZWFzdCBhcyBzdHJvbmcgYW5kIG11Y2ggZmFzdGVyIHRoYW4gYSBzcGFjZSBtYXJpbmUuIApEb2VzIG1hbmlwdWxhdGlvbiB0YWtlIHBsYWNlIGhlcmU/IFllcywgYWJzb2x1dGVseS4gYnV0IGFnYWluLCBub3QgaW4gdGhlIHdheSB0aGF0IHBlb3BsZSB0aGluay4gVGhlIG9ubHkgcmVhc29uIHRoZSBwb3B1bGFyIG1pc2NvbmNlcHRpb24gcGVyc2lzdHMgaXMgYmVjYXVzZSB0aGVyZSdzIGEgZGVhcnRoIG9mIGRpcnR5IGRlYWxpbmcsIHNvIHdpbGQgdGhlb3JpZXMgZ2V0IHRob3VnaHQgdXAgKGFuZCBzcHJlYWQpIHRvIGZpbGwgdGhlIHZhY3V1bS4KSGlzIGhpcmluZyBjYW1lIHdpdGggY29udHJvdmVyc3kuIFNvbWUgcXVlc3Rpb25lZCBoaXMgZXhwZXJpZW5jZSwgd2hpbGUgb3RoZXJzIGFza2VkIHdoeSBtb3JlIHBlb3BsZSB3ZXJlbiBpbnRlcnZpZXdlZCBmb3IgdGhlIHBvc2l0aW9uLi4gClRoZXJlIGlzIGEgd29yZCB3ZSB1c2VkIHRvIHVzZSBmb3IgdGhpcyB0aGluZyB3aGVyZSBjb3Jwb3JhdGlvbnMgZ2F2ZSB5b3UgbGFyZ2Ugc3VtcyBvZiBtb25leSBhbmQgeW91IHRoZW4gdm90ZWQgaW4gZmF2b3VyIG9mIHRoZWlyIGludGVyZXN0cy4gSXQgYWxtb3N0IHJoeW1lcyB3aXRoICJsaWJyYXJ5Ii4gClBhdXNlIHRvIHJlYWQgc29tZSBwYXNzYWdlIHlvdSBsaWtlZCB0byBoZXIgb3IgYXNrIHdoYXQgYSB3b3JkIG9yIGN1bHR1cmFsIHJlZmVyZW5jZSBtZWFucy4gCllvdSBsaXZlZCB3aGVyZSB0aGUgbm9uIFdlc3Rlcm4gZm9yZWlnbmVycyB3ZXJlbiBZb3VyIGNvbW1lbnQgc3Vja2VkLiBUaGUgc3RhdHMgZG9uIGxpZS4gVGVsbCBtZSBhZ2FpbiBob3cgcHJhY3RpY2FsbHkgYWxsIGZvcmVpZ25lcnMgYXJlIFdlc3Rlcm5lcnMgb3Igd2hhdGV2ZXIuIFN1Y2ggYSBsb3VkIG9mIGdhcmJhZ2UuIFlvdSBkb24gc3BlYWsgYSBsaWNrIG9mIEtvcmVhbiBhbmQgaGF2ZSBubyBpZGVhIHdoYXQgZ29pbmcgb24uIFlvdSB3ZXJlIGluIEtvcmVhIG1hbnkgeWVhcnMgYWdvIGZyb20gdGhlIHNvdW5kcyBvZiBpdDsgdGhpbmdzIGNoYW5nZS4gQW5kIHlvdXIgdGltZSBpbiBKYXBhbiBpcyBjb21wbGV0ZWx5IGlycmVsZXZhbnQgYmVjYXVzZSBJIG1hZGUgbm8gY29tbWVudHMgb24gSmFwYW4uIFlvdSBjbHVlbGVzcyBhYm91dCBLb3JlYS4gWW91IHN1ZmZpY2llbnRseSBlbWJhcmFzc2VkIHlvdXJzZWxmLiBEbyB5b3UgcmVhbGx5IHdhbnQgdG8gY29udGludWU/IFBsZWFzZSwgdGVsbCBtZSBtb3JlIGFib3V0IEtvcmVhIHRoYXQgSSBkb24ga25vdy4gSG93IGRvZXMgaXQgZmVlbCB0byBoYXZlIHdoaXBwZWQgb3V0IHRoZSBmYWN0IHRoYXQgeW91IGxpdmVkIGhlcmUgZm9yIGEgeWVhciBvbmx5IHRvIGZpbmQgb3V0IHRoYXQgbm90aGluZyBjb21wYXJlZCB0byB0aGUgcGVyc29uIHlvdSB0YWxraW5nIHRvLiBJIHNwZW50IGEgd2Vla2VuZCBpbiBPc2FrYSBhIGZldyB5ZWFycyBhZ287IGxldCBtZSB0ZWxsIHlvdSBhbGwgYWJvdXQgSmFwYW4uCkRvd25sb2FkIEdhbWUgZm9yIEtpbmcgT2YgRmlnaHRlciA5OCBmb3IgUEMgTWFjIHdpdGggQXBwS2l3aSBBUEsgRG93bmxvYWRlci4gCllhemlkIHNlbnQgaGlzIG1lc3NhbmdlciB0byBJbWFtIEh1c3NhaW4gKGdyYW5kc29uIG9mIHByb3BoZXQgTXVoYW1tZWQpIGluIE1lZGluYSB0byBwYXkgcGxlZGdlL2tuZWVsIHRvIFlhemlkLiBCdXQgSW1hbSBIdXNzYWluIHJlZnVzZWQuIFRIRU4sIHRoZSBncmFuZHNvbiBvZiBQcm9waGV0IE11aGFtbWVkIHN0b29kIGFnYWluc3QgaGltLiAKSGFuZCAxOiBZb3UncmUgc3Ryb25nbHkgcmVwcGluZyBBQSBhbmQgS0sgaGVyZSwgbWF5YmUgc29tZXRpbWVzIFFRLCB1bmxpa2VseSB2aWxsYWluIGhhcyBzaW1pbGFyIGhhbmRzIGhlcmUgZHVlIHRvIHlvdSBibG9ja2luZyBhIGJpdCBhbmQgaGltIG9ubHkgZmxhdHRpbmcgeW91ciA0IGJldC4gTGVhZGluZyBvdXQgbGFyZ2UgaXMgZmluZSwgZ2V0dGluZyByYWlzZWQgaGVyZSBzdWNrcyBidXQgd291bGQgcHJvYmFibHkganVzdCBiZSBhIGZvbGQgaWYgaGUgZG9lcy4KV2l0aCBtb3JlIHRoYW4gMSwwMDAgYmVkcywgYSB0ZWFtIG9mIGRvY3RvcnMgYW5kIG1pZHdpdmVzIGJ1dCBvbmx5IGEgZmV3IGJpcnRocyBhIGRheSwgdGhlIEZyYW5rZnVydCBIb2VjaHN0IGhvc3BpdGFsIGhhcyBhbiBhYnVuZGFuY2Ugb2YgZXZlcnl0aGluZyBleGNlcHQgYmFiaWVzLgpJbiBPbWFoYSwgaXQncyBoYXJkZXIgdG8gcmVzb2x2ZSB3aGljaCBoYW5kIHlvdXIgYWR2ZXJzYXJ5IGhhcyBvbiB0aGUgZ3JvdW5kcy4gSW4gVGV4YXMgSG9sZCdlbSwgZW5jb3VudGVyZWQgcGxheWVycyByZWd1bGFybHkgZG8gcG9zaXRpb25hbCByYWlzZXMuIApPbmNlIHlvdSBoYXZlIHNlbGVjdGVkIGEgcGFydGljdWxhciBpbmdyZWRpZW50IHRvIGZvY3VzIG9uLCB0aGUgbmV4dCBzdGVwIGlzIHRvIGNob29zZSB0aGUgd2VpZ2h0IHRoYXQgeW91IHdvdWxkIGxpa2UgdG8gZm9jdXMgb24uIE1vc3QgY2FzaW5vcyBpbXBsZW1lbnQgdGhlIHVzZSBvZiBwb2tlciBjaGlwcyB0aGF0IGFyZSA4LjVncmFtcyB0byAxMGdyYW1zLiAKSXQga2VwdCBteSBoaXBzIGFuZCByZWxheGVkIGxlZyBmcm9tIHJhaXNpbmcgdXAgYW5kIGltcGVkaW5nIHdoYXRldmVyIHN0cmV0Y2ggd2Ugd2VyZSB3b3JraW5nIG9uKS4gCklmIHlvdSBhc2sgYSBzdWNjZXNzZnVsIGVudHJlcHJlbmV1ciBob3cgdGhleSBhY2hpZXZlZCB0aGVpciBzdWNjZXNzLCBjaGFuY2VzIGFyZSwgdGhleSB3aWxsIHRhbGsgYWJvdXQgc2V0dGluZyBnb2Fscy4gSXQgbm8gc2VjcmV0IHRoYXQgaGF2aW5nIHNvbWUgZ29hbHMgY2FuIHB1c2ggeW91IHRvIGFpbSBoaWdoZXIsIHdvcmsgaGFyZGVyIGFuZCBzdGF5IGZvY3VzZWQuIApJIHB1dCBpdCBvbiBUaGluZ2l2ZXJzZSwgYW5kIGlmIHlvdSB3YW50IHRvIHRyeSB5b3VyIGhhbmQgYXQgbW9kaWZ5aW5nIGl0LCBpdCBvbiBUaW5rZXJDQUQgdG9vLiBJdCBwcmV0dHkgZWFzeS4gSWYgeW91IGp1c3QgZG93bmxvYWRpbmcgU1RMcyBmb3IgcHJpbnRpbmcgYWxsIHlvdSBuZWVkIGlzIGEgc2xpY2VyIChsaWtlIEN1cmEpIHRvIGNvbnZlcnQgdGhlIDNEIG9iamVjdCBpbnRvIGEgR0NPREUgZmlsZSB0aGF0IHRoZSBwcmludGVyIHVuZGVyc3RhbmRzLiAKRGVtb2NyYXRzIChidXQgbm90IHJlcHVibGljYW5zKSBzaG93ZWQgYSBwYXJ0aXNhbiBiaWFzIGluIHRvbGVyYW5jZSBvZiBseWluZyBieSBjb21taXNzaW9uLCB3aGVyZWFzIHJlcHVibGljYW5zIChidXQgbm90IGRlbW9jcmF0cykgc2hvd2VkIGEgcGFydGlzYW4gYmlhcyBpbiB0b2xlcmFuY2Ugb2YgcGFsdGVyaW5nLiBJbiBib3RoIGV4cGVyaW1lbnRzLCBSV0EgYW5kIFNETyBtZWRpYXRlZCB0aGUgcmVsYXRpb25zaGlwcyBiZXR3ZWVuIHBvbGl0aWNhbCBwYXJ0eSBhbmQgYXBwcm92YWwgb2Ygc3ByZWFkaW5nIG1pc2luZm9ybWF0aW9uLiBUaGVzZSByZXN1bHRzIHN1Z2dlc3QgdGhhdCByaWdodCB3aW5nIGluZGl2aWR1YWxzIGFyZSBtb3JlIHRvbGVyYW50IHRvIHRoZSBzcHJlYWRpbmcgb2YgbWlzaW5mb3JtYXRpb24gYnkgcG9saXRpY2lhbnMsIGFsdGhvdWdoIGl0IHNob3VsZCBiZSBub3RlZCB0aGF0IG92ZXJhbGwgbGV2ZWxzIG9mIGFwcHJvdmFsIHdlcmUgcmVsYXRpdmVseSBsb3cuTWFueSBvZiB1cyByZWx5IG9uIHNlYXNvbmFsIHZhY2NpbmVzIGZvciBwcm90ZWN0aW9uIGFnYWluc3QgaW5mbHVlbnphIGFuZCBhcmUgb25seSB0b28gYXdhcmUgb2YgdGhlaXIgbGltaXRlZCBicmVhZHRoLiAKQWxsIHRob3NlIGtpdGNoZW4gcml0dWFscyB5b3UgcmVtZW1iZXIgZnJvbSBHcmFuZG1hPyBUaGV5J3JlIGFkYXB0aXZlLCBlc3NlbnRpYWxseSBwcmUgZGlnZXN0aXZlIHRlY2huaXF1ZXMgcHJhY3RpY2VkIGJ5IHRyYWRpdGlvbmFsIGN1bHR1cmVzIGFyb3VuZCB0aGUgZ2xvYmUuIApJdCB3YXNuJ3QgcG9zc2libGUgdG8gbWVhc3VyZSBlbmRvcnBoaW4gbGV2ZWxzIGluIHRoZSBodW1hbiBicmFpbiB3aXRob3V0IGhhcm1pbmcgdGhlIHN1YmplY3QsIHNvIHRoZSByb2xlIG9mIGVuZG9ycGhpbnMgaW4gdGhlICJydW5uZXIncyBoaWdoIiBhbmQgb3RoZXIgcGVyaW9kcyBvZiBldXBob3JpYSBvciBtb29kIGNoYW5nZSB3ZXJlIHN0aWxsIGhvdGx5IGRlYmF0ZWQuIApNYXkgd2FudCB0byBleHBhbmQgaGlzIHByb2R1Y3QgbGluZSBiZWZvcmUgYXBwcm9hY2hpbmcgbGFyZ2VyIHJldGFpbGVycy4gSSBhbHNvIG5vdCBzdXJlIGhvdyBiaWcgdGhlIG1hcmtldCBpcyBvciBpZiBoaXMgZGlmZmVyZW50aWF0aW9uIHdpbGwgbGVhZCB0byB0cmFjdGlvbi4gU2hhdmluZyBnZWxzIGlzIGEgY29tcGV0aXRpdmUgc3BhY2UuIEF0dGFjaGluZyBhIGNlbGVicml0eSB0byBpdCBtYXkgaGVscC4KUGVyaW5na2F0IG1lcmVrYSBkaXR1bGlzIGRhcmkgcGVuZ2FsYW1hbiBwcmliYWRpIGRhbiBwZW5nYW1hdGFuIGRhbiBkaWFuZ2dhcCBkYXBhdCBkaXBlcmNheWEuIFNpdHVzIHlhbmcga3JlZGliZWwgYmlhc2FueWEgYWthbiBtZW1pbGlraSBib251cyBwZW5nYW50YXIgdW11bSBhdGF1IG1lbmF3YXJrYW4ga3JlZGl0IHRlcmhhZGFwIEFuZGEgc2lnbiB1cC4gCklmIHlvdSByaWdpZGx5IHN0aWNrIHRvIGp1c3Qgd2F0Y2hpbmcgdGhlIHN0dWZmIHlvdSBpbnRlcmVzdGVkIGluLCB5ZWEuIFBlb3BsZSBvbiByZWRkaXQgdGVuZCB0byBjbGljayBvbiByYW5kb20gc2hpdCBvbiByL3ZpZGVvcyBmb3IgZXhhbXBsZSwgd2hpY2ggZXZlbiBkb2luZyBhIGNvdXBsZSB0aW1lcyB3aWxsIGNvbXBsZXRlbHkgZnVjayB1cCB5b3VyIHJlY3MuIApDb3R0b24gZmliZXJzLiAKV2l0aCB0d2lua2xpbmcgZXllcyBhbmQgYSB3cnkgc2Vuc2Ugb2YgaHVtb3IsIFN0cnVtaW5nZXIgZW5qb3lzIHNob3dpbmcgb2ZmIHRoZSBmaXh0dXJlcyBoZSBhbmQgaGlzIHN0YWZmIGhhdmUgbWFkZTogQSBsYW1wIGZyb20gYSA0IGluY2ggc2lsdmVyIHNhbHQgc2hha2VyOyBhIHNldCBvZiBoYXBweSBsb29raW5nIGdyZWVuIHBvcmNlbGFpbiBwYXJha2VldHM7IGEgZmlndXJpbmUgb2YgZWxkZXJseSBtZW4gcGxheWluZyBwb2tlcjsgYW4gYWdncmVzc2l2ZSBsb29raW5nIGJ1bGxkb2cgc21va2luZyBhIGNpZ2FyOyBhbiBhbnRpcXVlIGxvY29tb3RpdmU7IGFuZCBhIGNvZmZlZSBwb3QgZnJvbSBhIGdhcmFnZSBzYWxlLgpJIGtub3cgY3JpbWUgZm9sbG93cyBkcnVnIHVzZSBhbmQgcG92ZXJ0eSwgYnV0IGEgZnVja2luZyBsaWdodCBidWxiIGluIGEgZ2FzIHN0YXRpb24gYmF0aHJvb20gb3IgcHJvdmlkaW5nIGNsZWFuIG5lZWRsZXMgYW5kIGEgc2FmZSB3YXkgdG8gZGlzcG9zZSBvZiB0aGVtIGlzIG5vdCBnb2luZyB0byBjaGFuZ2UgdGhhdC4gCkR1aGFtZWwgcGxheWVkIGZpdmUgdG91cm5hbWVudHMgaW4gdGhlIEJhaGFtYXMgYW5kIG5vdCBvbmx5IGNhc2hlZCBpbiwgYnV0IGluIGFuIGFtYXppbmcgZmVhdCwgZmluYWwgdGFibGVkIGZvdXIgb2YgdGhlbS4gSGlzIHdpbm5pbmdzIGluIHRob3NlIGZvdXIgZXZlbnRzPyBDbG9zZSB0byAkMS4yIE1pbGxpb24gZG9sbGFycy4gVGhlIGFiaWxpdHkgdG8gc2hydWcgb2ZmIHRoZSB0cmF1bWEgb2YgdGhlIGhvbWUgaW52YXNpb24gYW5kIGJlIGF0IGhpcyBiZXN0IG9ubHkgd2Vla3MgbGF0ZXIgaXMgYSBwZWVrIGluc2lkZSB0aGUgZm9jdXMgb2Ygb25lIG9mIHBva2VyIGJlc3QgYW5kIGJyaWdodGVzdCBzdGFycy4uIApMZSBuaWhpbGlzbWUgZXN0IGJpZW4gcGx1dHQgcGVucyBlbiBzb24gZXNzZW5jZSwgbGUgbW91dmVtZW50IGZvbmRhbWVudGFsIGRlIGwnSGlzdG9pcmUgZGUgbCdPY2NpZGVudC4gSWwgbWFuaWZlc3RlIHVuZSB0ZWxsZSBpbXBvcnRhbmNlIGRlIHByb2ZvbmRldXIgcXVlIHNvbiBkcGxvaWVtZW50IG5lIHNhdXJhaXQgZW50cmFuZXIgYXV0cmUgY2hvc2UgcXVlIGRlcyBjYXRhc3Ryb3BoZXMgbW9uZGlhbGVzLiBMZSBuaWhpbGlzbWUgZXN0LCBkYW5zIGwnaGlzdG9pcmUgZHUgbW9uZGUsIGxlIG1vdXZlbWVudCBxdWkgcHJjaXBpdGUgbGVzIHBldXBsZXMgZGUgbGEgdGVycmUgZGFucyBsYSBzcGhyZSBkZSBwdWlzc2FuY2UgZGVzIFRlbXBzIE1vZGVybmVzLiBWb2lsIHBvdXJxdW9pIHVuIGRpYWxvZ3VlIGZvbmRhbWVudGFsIGF2ZWMgbGUgY2hyaXN0aWFuaXNtZSBuJ2VzdCBudWxsZW1lbnQsIG5pIGFic29sdW1lbnQsIHVuZSBsdXR0ZSBjb250cmUgY2UgcXVpIGVzdCBjaHJ0aWVuLCBwYXMgcGx1cyBxdSd1bmUgY3JpdGlxdWUgZGUgbGEgdGhvbG9naWUgbidlc3QgZHUgbW1lIGNvdXAgdW5lIGNyaXRpcXVlIGRlIGxhIGZvaSwgcXVlIGxhIHRob2xvZ2llIGVzdCBjZW5zZSBkZXZvaXIgaW50ZXJwcnRlci4KTHVlbGxhIFNtaXRoLCB3aG8gaGFzIGJlZW4gdmlzaXRpbmcgaGVyIHNpc3RlciwgTXJzLiBKLiAKQWdyZWVkIG9uIEdvc3QsIEJpbGwgaGF0ZXMgdG8gdXNlIHRoZSBmcmFuY2hpc2UgdGFnIG9uIGtpY2tlcnMgYnV0IEdvc3QgaGFzIGJlZW4gZmFpcmx5IGFtZW5hYmxlIHRvIHdvcmtpbmcgd2l0aCB0aGUgdGVhbSBvbiBkZWFscy4gCk15IHN1Z2dlc3Rpb24gdGhhdCB3ZSBhdm9pZCB0aGUgdGVybSBlbGRlcmx5aW4gbWVkaWNpbmUgZ29lcyBiZXlvbmQgdGhlIHdvcmQgaXRzZWxmIHRvIGVuY29tcGFzcyBhbGwgdGhhdCBpdCBjb25ub3Rlczogc3RlcmVvdHlwZXMsIHVud2FycmFudGVkIGltcHJlc3Npb25zLCBhbmQgYmlhcy4gCkkgdGhvdWdodCB0aGlzIHdhcyBhIGJpdCBvZGQgc28gcG9saXRlbHkgZXhwbGFpbmVkIHRoZXkgZGlkbiBuZWVkIHRvIGdldCBtZSBhbnl0aGluZyBhbmQgdGhlcmUgd2FzIHJlYWxseSBub3RoaW5nIEkgd2FudGVkLCBubyBvbmUgZWxzZSB3YXMgZ29pbmcgdG8gZ2V0IG1lIGFueXRoaW5nIGFueXdheS4KWWVhaCwgbm8gd29ycmllcy4gVGhpcyBvbmUgc291bmRzIGxpa2UgaXQgc2hvdWxkIGJlIHdheSBtb3JlIGNvbXBsaWNhdGVkIHRoYW4gaXQgaXMsIHNvIHRoYXQgdGhlIG5hdHVyYWwgcmVhY3Rpb24uIDspIEl0IHJlYWxseSBpcyBqdXN0IHRoZSByYXRpbyBvZiBhIGNpcmNsZSB3aXRoIHRoZSByYWRpdXMgb2YgZWFydGggdG8gdGhlIHN1cmZhY2UgYXJlYSBvZiBhIDEgQVUgc3BoZXJlLCB0aW1lcyB0aGUgc29sYXIgbHVtaW5vc2l0eS4KRm9yIGJ1eWVycywgdGhlIG15c3RlcnkgZXhpc3RzIGF0IHR3byBsZXZlbHMgd2l0aCB0aGUgZXZvbHZpbmcgdGVjaG5vbG9neSBpdHNlbGYsIGFuZCB3aXRoIElUIHN1cHBseSBjaGFpbiBhZ3JlZW1lbnRzIGFuZCBwcmFjdGljZXMuIApXaGVyZSBwcm9zdGl0dXRpb24gaXMgaWxsZWdhbCBvciB0YWJvbywgaXQgaXMgY29tbW9uIGZvciBtYWxlIHByb3N0aXR1dGVzIHRvIHVzZSBldXBoZW1pc21zIHdoaWNoIHByZXNlbnQgdGhlaXIgYnVzaW5lc3MgYXMgcHJvdmlkaW5nIGNvbXBhbmlvbnNoaXAsIG51ZGUgbW9kZWxpbmcgb3IgZGFuY2luZywgYm9keSBtYXNzYWdlLCBvciBzb21lIG90aGVyIGFjY2VwdGFibGUgZmVlIGZvciBzZXJ2aWNlIGFycmFuZ2VtZW50LiAKVGhlIHllYXIgMTgwMCBzYXcgYSBncmVhdCBmYW1lIGluIGNhc2Ugb2YgUm91bGV0dGUuIENvdW50ZXNzIEtpc3NlbGVmZiBzcGVudCBob3VycyBnYW1ibGluZyBhdCByb3VsZXR0ZSBhbmQgaXMgc2FpZCB0byBoYXZlIGxvc3QgbXVjaCBpbiB0aGUgZ2FtZSBmb3IgYSBudW1iZXIgb2YgdGltZXMuIFRoZSBzdHJlZXQgcGF2aW5nIGEgd2F5IHRvIGNhc2lubyBpbiBIb21idXJnIGluIEdlcm1hbnkgaXMgbmFtZWQgYWZ0ZXIgaGVyLiAKU2FkaWU6IEZpcnN0IGhlIHRvb2sgdXAgd2l0aCBDaGljYWdvLCBhIE1pZHdlc3QgZmxvb3ppZSB3aXRoIGhpcHMgdGhlIHNpemUgb2YgYSBGbHlpbmcgQ2xpcHBlciBhbmQgdGhlIGhvdCBhbmQgY29sZCBmbGFzaGVzIG9mIGEgbWVub3BhdXNhbCBoaXBwby4gSSBjb3VsZG4ndCBiZWxpZXZlIGl0ISBPbmNlIHRoYXQgaGFwcGVuZWQsIHRoZW4gb3RoZXIgZ2lybHMgbGlrZSBBbGFiYW1hIGFuZCBDYXJvbGluYSBhbmQgU2F2YW5uYWggc3RhcnRlZCBmbGlydGluZyBhcyB3ZWxsLCBrbm93aW5nIGEgbWlkbGlmZSBjcmlzaXMgd2hlbiB0aGV5IHNhdyBpdC4gSGUgc3RhcnRlZCBtb29uaW5nIGFib3V0IFdpY2hpdGEsIGRyb29saW5nIG92ZXIgVGV4YXMuLiAKSmF5IEhlYXBzIGRlYWx0IHdlbGwgd2l0aCBWYW5jb3V2ZXIncyBzdWJzdGl0dXRpb25zICBWYW5jb3V2ZXIgY29hY2ggQ2FybCBSb2JpbnNvbiBoYWQgcGxlbnR5IG9mIHdlYXBvbnMgb24gdGhlIGJlbmNoIHRvIHRocm93IGF0IHRoZSBSZXZvbHV0aW9uLiBCcmluZ2luZyBvbiBQZWRybyBNb3JhbGVzIGFkZGVkIHNvbWUgY3JlYXRpdml0eSBhbmQgc2tpbGwgdGhhdCB3YXMgYWJzZW50IGZyb20gVmFuY291dmVyJ3MgcGxheSBpbiB0aGUgZmlyc3QgaGFsZi4gQWRkaW5nIEtla3V0YSBNYW5uZWggbWlkIHdheSB0aHJvdWdoIHRoZSBzZWNvbmQgaGFsZiBnYXZlIEFuZHJldyBGYXJyZWxsIGFuZCB0aGUgUmV2b2x1dGlvbiBkZWZlbnNlIGEgc3BlZWRzdGVyIHRvIGRlYWwgd2l0aCBvbiB0aGUgbGVmdCBmbGFuay4gVGhlIGJhY2sgbGluZSBoZWxkIHVwIGFuZCBIZWFwcyB3YXMgYWJsZSB0byBrZWVwIGhpcyBzcXVhZCBmb2N1c2VkLiBJdCB3YXMgb2J2aW91cyB0aGF0IGV2ZXJ5b25lIG9uIHRoZSBiYWNrIGxpbmUgd2FzIGZpdCBhbmQgcmVhZHkgZm9yIHRoZSBhdGhsZXRpYyBhbmQgZHluYW1pYyBwbGF5IG9mIFZhbmNvdXZlcidzIGRlcHRoLgpTdXJlLCBvdXIgbWVzc2FnZXMgYXJlIHNjYW5uZWQgaW4gb3JkZXIgdG8gcHJldmVudCBzcHJlYWRpbmcgb2YgbWFsd2FyZSB2aWEgdGhlIG5ldHdvcmssIGJ1dCBpdCBvbmx5IHRha2VzIDMwMCBwZW9wbGUgdG8gY29tcHJvbWlzZSB0aGUgcHJpdmFjeSBvZiBtb3JlIHRoYW4gaGFsZiBhIG1pbGxpb24gdmlhIHNvbWUgc2hhZHkgcXVpeiBhcHAuIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvCjIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29TY290dGllIGJyaW5ncyB1cCBhIGdyZWF0IHBvaW50IGFib3V0IG5vdCBqdXN0IGZvcmNpbmcgaGltIHRvIGhpcyByaWdodCwgd2hpY2ggSSBzZWUgYSBsb3Qgb2YgZ3V5cyB0cnkgdG8gZG8sIGJ1dCBhbHNvIHN0YXlpbmcgb24gaGlzIGhpcCBidXQgYSBsaXR0bGUgYmVoaW5kIGhpbSBhcyB0byBub3QgYWxsb3cgSGFyZGVuIHRvIGNvbWUgYmFjayBhY3Jvc3MgdG8gaGlzIGxlZnQgaGFuZC4gSSBzZWUgYSBsb3Qgb2YgZ3V5cyBmb3JjZSBIYXJkZW4gdG8gaGlzIHJpZ2h0IGJ1dCB0aGVuIGluc3RpbmN0cyB0YWtlIG92ZXIgYW5kIHRoZXkgdHJ5IHRvIGJlYXQgaGltIHRvIGEgc3BvdCB0byBnZXQgYmFjayBpbiBmcm9udCBvZiBoaW0uIFRoaXMganVzdCBtYWtlcyBpdCBlYXN5IGZvciBIYXJkZW4gdG8gZ2V0IGJhY2sgdG8gaGlzIGxlZnQgYW5kIHRoZSBkZWZlbmRlciBmZWV0IGFyZSBvdXQgb2YgcG9zaXRpb24gYmVjYXVzZSB0aGV5IGhhdmUgYWxyZWFkeSBmbGlwcGVkIHRoZWlyIGhpcHMuLiAKUG91cnF1b2kgY2UgImZhdXggZGJhdCIgPyBBdmFudCBkZSBjcmVyIGNlIGRiYXQgYXUgc2VpbiBkZXMgdGF0cyBtZW1icmVzIGRlIGwnVW5pb24gRXVyb3Blbm5lICAgZGV2ZW5hbnQgbGFyZ2VtZW50IHBybWF0dXIgICAsIGlsIHNlbWJsZSBpbXByYXRpZiBkZSBjb25uYXRyZSB2cml0YWJsZW1lbnQgbGEgcG9zaXRpb24gZGVzIHR1cmNzIC4gCkkgdGhpbmsgdGhlIGhpZ2ggQVBNIChzdGlsbCBoYXZlIHRvIGdvIGNoZWNrIHRoZSB2aWRlbyBteXNlbGYgZm9yIGl0KSBodXJ0cyB0aGUgc2lnbmlmaWNhbmNlIG9mIHRoZSBldmVudCBxdWl0ZSBhIGJpdC4gV2hlbiBJIGhlYXJkIGFib3V0IHRoaXMgZXZlbnQsIG15IGZpcnN0IHRob3VnaHQgd2FzICAgIkNhbiB0aGUgQUkgZGVzdHJveSBodW1hbnMgYXQgbWFjcm8/IiBTb21lb25lIG1lbnRpb25lZCB0aGVyZSB3YXMgYW4gQVBNIGNhcCwgaG93ZXZlciwgYnV0IEkgc3RpbGwgaW1hZ2luZWQgdGhlIEFJIGJlaW5nIGFibGUgdG8gc3BsaXQgYW5kIGNvbnRyb2wgYXJtaWVzIGZhciBiZXR0ZXIgdGhhbiBhIGh1bWFuLiBBbmQgdGhhdCB3aGF0IGhhcHBlbmVkICAgdXNpbmcgaGlnaCBBTVAgYXMgd2VsbCBpbiBhbiBvYnZpb3VzIGV4cGxvaXQgb2YgY29uZGl0aW9ucyBvdGhlcndpc2UgaW50ZW5kZWQgdG8gbWFrZSBhIGNvbXBhcmlzb24gYmV0d2VlbiBodW1hbiBhbmQgbWFjaGluZSBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlLi4gCldoYXQgc2hlIHdhbnRlZCBhYm92ZSBhbGwgd2FzIHRvIGJlIGxvdmVkIGZvciBoZXJzZWxmLiAKSSB0aGluayB3aGVyZSB3ZSBwcm9iYWJseSBkbyBkaXNhZ3JlZSBpcyBvbiBmdWxsIElyYW5pYW5zLCBhcyBJIGRvIGNvbnNpZGVyIHRoZW0gUG9DLiBJJ3ZlIG5ldmVyIG1ldCBvbmUgd2hvIGhhcyBjb25zaWRlcmVkIHRoZW1zZWx2ZXMgIndoaXRlIiBpbiB0aGUgQW1lcmljYW4gY29udGV4dCAoQ2F1Y2FzaWFuIGlzIHNlcGFyYXRlIGlzc3VlIGJlY2F1c2UgYXQgdGhhdCBwb2ludCwgeW91IGNhbiBhcmd1YWJseSBmaXQgYWxsIE1pZGRsZSBFYXN0ZXJuZXJzIGFuZCBTb3V0aCBBc2lhbnMgaW50byB0aGF0IGRlZmluaXRpb24pIGFuZCBJIGhhdmUgbmV2ZXIgaGVhcmQgYW55b25lIGVsc2UgY2FsbCB0aGVtICJ3aGl0ZSIgZWl0aGVyLCBleGNlcHQgZm9yIHRob3NlIHdlaXJkIGNlbnN1cyBkb2N1bWVudHMgYnV0IHRob3NlIGFsc28gY29uc2lkZXIgSW5kaWFucyBhbmQgRWFzdCBBc2lhbnMgYXMgcGFydCBvZiB0aGUgc2FtZSByYWNlLCBzbyBub3QgZXhhY3RseSBjcmVkaWJsZS4gCklmIHNoZSByZWZ1c2VzIHRvIHNpZ24gdGhlIGxvYW4gYWdyZWVtZW50LCB5b3UgYXJlIGZpbGluZyBzdWl0IGZvciB0aGUgYmFsYW5jZSBkdWUuIApCZWNhdXNlaW5lZWRvbmUzIHUKU29tZSBtYXkgdmlldyBhIGxvd2VyIGRvbGxhciBmYXZvdXJhYmx5IG91dCBvZiBob3BlIGl0IHdpbGwgc2hpZnQgZ3Jvd3RoIGZyb20gbmF0dXJhbCByZXNvdXJjZXMgdG8gbWFudWZhY3R1cmluZy4gClNvIEkgY3VycmVudGx5IGluIHRoZSBiYXRocm9vbS4gCllvdXIgaW5pdGlhbCBjb21tZW50IHdhcyBwcmV0dHkgaGFyc2ggdG9vLCBhbmQgc2VlbWluZ2x5IHVud2FycmFudGVkLiAKRXNzbyAsaW5mYXR0aSwgaW52ZXN0ZSBvcm1haSBxdWFzaSB0dXR0aSBpIHNldHRvcmkgZGVsbGEgc3Rlc3NhLCBtYSAgcHJvcHJpbyBzb3R0byBhbCBiZW5lc3NlcmUsIGRpZXRybyBsYSBzdWEgc3BsZW5kaWRhIGZhY2NpYXRhLCBjaGUgc2kgbmFzY29uZGUgaWwgbWFyY2lvLiAKOSkgRXN0YWJsaXNoZWQgYWxsZXJnaWMgZGlzZWFzZSBpcyB0aGUgcmVzdWx0IG9mIGV4Y2Vzc2l2ZSBhbmQgaW5hcHByb3ByaWF0ZSBUaDIgcmVzcG9uc2VzIG92ZXIgdGhlIFRoMSByZXNwb25zZSAoc3dpdGNoaW5nKS4KSSBUTXZlIGNvb2tlZCBkaW5uZXIsIGNhcnJpZWQgb24gcGhvbmUgY29udmVyc2F0aW9ucywgdHlwZWQgYW4gcmVwb3J0IG9yIHR3bywgYW5kIHN0dWR5IHRoZSBtb3JuaW5nIHBhcGVyIGFsbCBhbHRob3VnaCBwbGF5aW5nIGFuZCBwcm9kdWNpbmcgY2FzaCBpbiBvbmxpbmUgcG9rZXIgZ2FtZXMuIApJIGFtIGEgaHVnZSBmYW4gb2YgSEJPIFRWIHNlcmllcyBXZXN0d29ybGQgd2hpY2ggY2FycmllcyBzdG9yeWxpbmVzIHRoYXQgSSBiZWxpZXZlIGFyZSBhbmFsb2dvdXMgdG8gY29uc2Npb3VzbmVzcywgZGl2aW5pdHksIGFuZCBodW1hbiBhc2NlbnNpb24uIEluIHRoaXMgYXJ0aWNsZSwgVGhlIFZlcnZlIHRhbGtzIGFib3V0IHRoZSBhcHBlYXJhbmNlIG9mIE1pY2hlbGFuZ2VsbyBoaWRkZW4gbWVhbmluZ3MgYW5kIGhvdyB0aGV5IHNob3dlZCB1cCBpbiB0aGlzIFRWIHNob3cgYWJvdXQgY29uc2Npb3VzbmVzcy4gSXQgbm90IHJlbGF0ZWQgdG8gdGhlIHBhaW50aW5nIHlvdSBwb3N0ZWQsIGJ1dCBpdCBhbiBpbnRlcmVzdGluZyByZWFkLi4gCkkgb25jZSBkaWQgYSByYWlkIHRyYWluaW5nIGdyb3VwIGFuZCB3ZSBkZXN0cm95ZWQgdGhlIGZpcnN0IHJhaWQsIENvbmp1cmVkIEFtYWxnYW1hdGUgYnV0IGdvdCBzdHVjayBhbmQgYmFyZWx5IHdvbiB0aGUgdGltZSBnYXRlZCBUd2luIExhcmdvcyAoRGlkbnQgaGFkIGEgY29uZGl0aW9uIGNoYXJhY3RlciB5ZXQpIGFuZCBkaWRudCBrbm93IHlvdSBuZWVkZWQgb25lIGZvciB0aGF0IHJhaWQuClZlcnkgZmV3IHByb3ZpZGVycyBhY3R1YWxseSBrbm93IHdoYXQgdGhlcmUgZG9pbmcgaW4gdGhlIGFyZWEuIApXaGVuIEkgYWN0dWFsbHkgYXBwcm9hY2hlZCB0aGUgY2FyLCB0aGVuIHNsb3dlZCBkb3duLiBRdWlldGx5LCBncmFjZWZ1bGx5IHdhbGtlZCB1cCwgb3BlbmVkIHRoZSBkb29yIGFuZCB1bW9zdGlsYSBoaXMgZmlmdGggbG9jYXRpb24gb24gdGhlIGxlYXRoZXIgcHJvdmlkZSBmb3IgY29tbXV0ZXIgZnVuZGFtZW50LCBhbmQgdGhlbiBncmFjZWZ1bGx5IHR1cm5pbmcgdG8gdGhlIHNhbG9uIHN1ZmZlcmVkIGxlZy4gTXkgYnJlYXRoaW5nIHdhcyBzbyBtdWNoIG9uIGl0ZXJhdGl2ZSBhbmQgZGVlcCwgdGhlIGNhc2tldCBoZWF2ZWQgdXAgYW5kIEkgY291bGQgbm90IHN1cnZpdmUgd2l0aCB0aGVtLiBGZWV0IGluZGVwZW5kZW50bHksIHN0YXJpbmcgZG93biwgaGlzIGVzc2VuY2UgbGVhcHMgb2YgcGxlYXN1cmUsIGFnaXRhdGlvbiwgZmVlbGluZ3Mgb2YgLgpKdW4gMjAsIDIwMTggLiBGYXN0IGRvd25sb2FkcyBvZiB0aGUgbGF0ZXN0IGZyZWUgc29mdHdhcmUhIC4gCkpTTW9yaW4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpNaWxpdGFyeSBBY2FkZW15IGF0IFdlc3QgUG9pbnQuIFNvbGRpZXJzIHdlcmUgYW5kIGFyZSBlbGl0ZSBtb3VudGFpbiBpbmZhbnRyeSwgdGhlIENoYXNzb25zIEFscGlucywgIkFscGluZSBIdW50ZXJzIiwgYW5kIG5pY2tuYW1lZCAidGhlIEJsdWUgRGV2aWxzIiwgYW5kIHdobyBzYXcgdGhlaXIgZmFpciBzaGFyZSBvZiBjb21iYXQgZHVyaW5nIFdXSS4gClRoZSBzdGF0ZSAodGhlIHBlb3BsZSkgZG8gaW4gZmFjdCBoYXZlIHRoZSBhYmlsaXR5IHRvIGRpY3RhdGUgd2hhdCB5b3UgZG8gdG8geW91ciBjaGlsZHJlbi4gCkZhY3QgQ2VsZWIgQkIgd2FzIG5vdCBhIHRocmVlIG1vbnRoIHNvY2lhbCBleHBlcmltZW50IGJ1dCBuZWFybHkgdGhyZWUgd2Vla3MgaW1wYWN0ZWQgaGVyIGdhbXBsYXkuIApEaXNwbGF5IGRpcmVjbHkgaG93IG1hbnkgcG9pbnRzIHNvbWVvbmUgaGF2ZSAob25saW5lIG9ubHkpLCBzbyB3aGVuIHRoZSBudW1iZXIgaWYgaGlnaCB5b3UgaGF2ZSBhIGdvb2QgaGFuZCwgdGhpcyBpcyBzdWl0YWJsZSBmb3IgcmVjcmVhdGlvbmFsIHBsYXllcnMgKHRoZSBvbmVzIHlvdSB3YW5uYSBwbGF5IGFnYWluc3QpLgoxIGhvdXIgaW4gaXQgc3RhcnRlZCByYWluaW5nLiAKTGEgcnVuaW9uIHMnZXN0IGRyb3VsZSBkYW5zIHVuZSBhbWJpYW5jZSBjb3JkaWFsZSwgYXUgU2VjcnRhcmlhdCBHbnJhbCBkZSBsJ0h0ZWwgZGUgVmlsbGUsIHF1aSBsYSBzdXBlcnZpc2FpdC4gVGFpZW50IHByc2VudHMsIGxlIFNlcnZpY2UgZGUgbGEgdm9pcmllIGV0IGRlcyBkcGxhY2VtZW50cyAoRFZEKSBxdWkgY29vcmRvbm5lIGxlcyB0cmF2YXV4LCBsZXMgbWFpcmllcyBkdSAxMGUgZXQgZHUgMThlLCBsZSBDb25zZWlsIGRlIHF1YXJ0aWVyIGRlIExhIENoYXBlbGxlLCBsZXMgZGV1eCBhc3NvY2lhdGlvbnMgbWVudGlvbm5lcyBwbHVzIGhhdXQgZXQgYmllbiB2aWRlbW1lbnQgQWN0aW9uIEJhcmJzLiAKVG8gaGlzIGVhc3Qgd2FzIENoaW5hIGluIHRoZSBmdWxsIGJyaWxsaWFuY2Ugb2YgZGF3bjsgdG8gdGhlIHdlc3QsIEFmZ2hhbmlzdGFuLCBJcmFuIGFuZCB0aGUgTWlkZGxlIEVhc3Qgd2VyZSBlbWVyZ2luZyBmcm9tIHRoZSBuaWdodC4uIApEaWQgeW91IGtub3cgdGhhdCBwZW9wbGUgYXJlIGEgbG90IG1vcmUgbGlrZWx5IHRvIGRpZSBieSBzdWljaWRlIGlmIHRoZXkgaGF2ZSBhIHBhcmVudCB0aGF0IGRpZD8gSXQncyBub3QganVzdCBnZW5ldGljcywgbGlrZSB5b3UncmUgbW9yZSBsaWtlbHkgdG8gYmUgZGVwcmVzc2VkIGJlY2F1c2UgaXQncyBoZXJlZGl0YXJ5LiBJZiB5b3UgaGF2ZSBhIHBhcmVudCB0aGF0IGRpZXMgYnkgc3VpY2lkZSwgaXQgbWVzc2VzIHdpdGggeW91IGFuZCBtYWtlcyB5b3UgbW9yZSBsaWtlbHkgdG8gZG8gaXQgeW91cnNlbGYuIApJIGZlZWwgdGhpcyBzbyBtdWNoIHRvZGF5LiBJbSAyIHdlZWtzIGluIGZyb20gaGF2aW5nIGEgZG91YmxlIHBhcnRpYWwgdnVsdmVjdG9teSBhbmQgSSBzdGlsbCBpbiBzbyBtdWNoIHBhaW4gZXZlbiB0aG91Z2ggSSB3YXMgdG9sZCBJIGNhbiByZXN1bWUgbm9ybWFsIGFjdGl2aXRpZXMgYnV0IEkgY2FuIGV2ZW4gd2Fsaywgc2l0LCBvciBzdGFuZCBmb3IgbG9uZyBwZXJpb2RzIGFuZCBmb3JnZXQgYWJvdXQgZ29pbmcgdG8gdGhlIGJhdGhyb29tLiAKVGhpcyBndXkgaXMgdGFraW5nIHlvdSBmb3IgYSByaWRlIHRvIHNlbGwgYSBwb2xpdGljYWwgYXJndW1lbnQuIApJdHMgc2hvY2sgd2F2ZSB3ZW50IGZhciBmdXJ0aGVyLCBjcmFja2luZyBhbmQgZGFtYWdpbmcgaW5mcmFzdHJ1Y3R1cmUgZXF1aXZhbGVudCB0byBhIG1ham9yIGVhcnRocXVha2UuIEhpcm9zaGltYSBCb3kgYWZmZWN0ZWQgZ2VuZXJhdGlvbnMgd2l0aCByYWRpYXRpb24gdGhhdCBsYXN0ZWQgZm9yIGRlY2FkZXMuIApGcm9tIHRoZSB0b3Agb2YgZmxvb3JzIDI0LCAyNiwgMjcgYW5zIDMyIHRoZXNlIGNvc3kgNzAgbXNxLiBhcGFydG1lbnRzIHRydWx5IGZlZWxzIGxpa2UgaG9tZSBhbmQgcmVwcmVzZW50IHRoZSBwZXJmZWN0IGFjY29tbW9kYXRpb24gY2hvaWNlIGZvciBzaG9ydCBhbmQgbG9uZyB0ZXJtIHN0YXlzIHdoZXRoZXIgeW91IGNvbWUgdG8gQmFuZ2tvayBmb3IgYSBidXNpbmVzcyB0cmlwIG9yIHdpdGggdmFjYXRpb24gcHVycG9zZXMuVGhlIGZsYXQgY29tZm9ydGFibHkgZml0cyB1cCB0byBmb3VyIHBlb3BsZSBhbmQgZmVhdHVyZXMgMSBkb3VibGUgYmVkcm9vbSBwbHVzIEVuIHN1aXRlIGJhdGhyb29tIHdpdGggdHViLCBhIHNlY29uZCBiZWRyb29tIHdpdGggZG91YmxlIGJlZCwgYSBsaXZpbmcgcm9vbSB3aXRoIHNhdGVsbGl0ZS9jYWJsZSBUViBjb25zb2xlLCBkaW5pbmcgYXJlYSBhbmQgc2VwYXJhdGUga2l0Y2hlbiAoZnVsbHkgZXF1aXBwZWQgd2l0aCBjb2ZmZWUgbWFjaGluZSBhbmQgd2FzaGluZyBtYWNoaW5lIHdpdGggaW50ZWdyYXRlZCBkcnllciBmYWNpbGl0aWVzKS4gClRvIHB1dCBpdCBhbm90aGVyIHdheSwgZGVlcCBsaW5raW5nIHVuZGVyc3RhbmRzIHdoaWNoIHR5cGVzIG9mIGxpbmtzIGFyZSB1dGlsaXplZCBieSB3aGljaCBhcHBzIFtzb3VyY2U6IExhcmRpbm9pc10uIFRvZGF5LCBpZiB5b3UgaGF2ZSBhIGJhbmtpbmcgYXBwIGluc3RhbGxlZCBvbiB5b3VyIHBob25lLCBhbmQgeW91IHJlY2VpdmUgYW4gZW1haWwgbm90aWZ5aW5nIHlvdSB0aGF0IHlvdXIgb25saW5lIHN0YXRlbWVudCBpcyBhdmFpbGFibGUsIGNsaWNraW5nIG9uIHRoZSAiVmlldyB5b3VyIHN0YXRlbWVudCIgbGluayBpbiB0aGUgZW1haWwgd2lsbCB0YWtlIHlvdSB0byB5b3VyIGJhbmsncyB3ZWJzaXRlLCB3aGVyZSB5b3UgbmVlZCB0byBnbyB0aHJvdWdoIHRoZSBzdGFuZGFyZCBsb2dpbiBwcm9jZXNzIGFuZCBuYXZpZ2F0ZSB0byB0aGUgc3RhdGVtZW50IG9ubGluZS4gV2l0aCBkZWVwIGxpbmtpbmcsIGNsaWNraW5nIG9uIHRoZSBzYW1lIGxpbmsgaW4gYW4gZW1haWwgb24geW91ciBwaG9uZSB3b3VsZCBpbnN0ZWFkIGxhdW5jaCB5b3VyIGJhbmtpbmcgYXBwLCB0YWtpbmcgeW91IGRpcmVjdGx5IHRvIHRoZSBpbmZvcm1hdGlvbiB5b3UncmUgbG9va2luZyBmb3IuLiAKRWRpdDogVGhlcmUgYW5vdGhlciBmYWN0b3IsIHRvbywgYXNpZGUgZnJvbSBTdGV2ZW5zb24gdiBJa2UuIEVpc2VuaG93ZXIgZGlkIGEgcHJldHR5IGdvb2Qgam9iIGFzIHByZXNpZGVudC4gCk5vdCBhIHBhcnRpY3VsYXJseSBhbWF6aW5nIGZlYXQsIGJ1dCBpdCBtYWRlIG15IG1lbnRhbCB0cmljayBzdG9wIHdvcmtpbmcgc28gSSBoYWQgdG8gc3dpdGNoIHRvIGNvdW50aW5nIHByaW1lIG51bWJlcnMuIApBZ2VuY2llcyBvZnRlbiBoaXJlIHB1cmNoYXNpbmcgYWdlbnRzIHdpdGggbWFya2V0aW5nIGJhY2tncm91bmRzIHRvIGhlbHAgdGhlbSBtYW5hZ2UgdGhlaXIgcHVyY2hhc2VzLCBpbmNsdWRpbmcgc2V0dGluZyBjcml0ZXJpYSBmb3Igc3VwcGxpZXJzIGFuZCBlc3RhYmxpc2hpbmcgcHJpY2UgcmFuZ2VzLiBHb3Zlcm5tZW50IHB1cmNoYXNpbmcgYWdlbnRzIG11c3QgYmUgdmVyeSBmYW1pbGlhciB3aXRoIGN1cnJlbnQgcHVyY2hhc2luZyByZWd1bGF0aW9ucyBhdCB0aGVpciBhZ2VuY3kuLiAKVG8gendyY2lvIG1vaiB1d2FnICAgVHdvaW0gemRhbmllbSBuaWUgcG93aW5ubyBiby4gCkVtb3Rpb25lbiB3ZXJkZW4gaW4gdW5zZXJlciBHZXNlbGxzY2hhZnQgZWhlciBhbHMgd2FzIFNjaGxlY2h0ZXMgd2Focmdlbm9tbWVuLCBhbHMgZXR3YXMsIGRhcyBzdHJ0LCBkYXMgbWFuIGltIEdyaWZmIGhhYmVuIG11c3MsIGRhcyBtYW4gdW50ZXJkcmNrZW4gbXVzcy4gCk5vdCBvbmx5IGlzIGl0IHBvb3IgZm9ybSBidXQgaXQgYWxzbyBhIGhlYWx0aCBjb2RlIHZpb2xhdGlvbi4gVGhlbiB0aGVyZSB0aGUgaW5zdXJhbmNlIGxpYWJpbGl0eSBpc3N1ZTogc29tZW9uZSBjb3VsZCBicmluZyBmb29kIGZyb20gaG9tZSBpbnRvIHRoZSByZXN0YXVyYW50LCBjbGFpbSB0byBnZXQgc2ljaywgYW5kIHRoZW4gc3VlIHRoZSByZXN0YXVyYW50LiAKQ2FuIHlvdSBleGFtaW5lIHRoZSBjb3JlIG9mIGl0IGFuZCBkaXNjb3ZlciBhIG1vcmUgY29tcGxleCBmZWVsaW5nPyBXaGVuIEkgc3RydWdnbGUgd2l0aCBhbmdlciBhbmQgc2l0IHdpdGggaXQgZm9yIGEgbG9uZyBlbm91Z2ggdGltZSBpdCBkZXZvbHZlcyBpbnRvIHNhZGRuZXNzLCBzb21ldGltZXMgSSBncmlldmUgZGVlcGx5IGZvciB0aGUgY2hpbGQgaW4gbWUgdGhhdCBpcyBodXJ0IGFuZCBsb25lbHkuIEkgZ3JldyB1cCBpbiBhbiBhYnVzaXZlIGhvdXNlaG9sZCB0b28gYW5kIGl0IHRha2VuIG1lIG1hbnkgeWVhcnMgdG8gZm9yZ2l2ZSBhbmQgdW5kZXJzdGFuZCBteSBwYXJlbnRzLi4gCkdvb2QgdGhpbmcgd2UgaGFkIG91ciBwYXJ0LiAKQmVpbmcgdGhlIGZvdW5kZXIgYW5kIGFkbWluIG9mIEdldCBJbnRvIFBDICAgRG93bmxvYWQgRnJlZSBZb3VyIERlc2lyZWQgQXBwIGkgYmVsaWV2ZSBpbiB1c2VyIGV4cGVyaWVuY2UgLiBUaGlzIGlzIHRoZSByZWFzb24gd2Ugb2ZmZXIgdGhlIGZ1bGwgdmVyc2lvbiBvZiBNaWNyb3NvZnQgT2ZmaWNlIDIwMTAgZm9yIGZyZWUuIApSYWluaWVyZ2FsYXh5c2tpZXMgdQpVbmliZXQgb2ZmZXJzIHNvbWUgdW5pcXVlIGZlYXR1cmVzIG9mIGl0cyBvd24sIGVzcGVjaWFsbHkgaW4gdGhlIGFyZWEgb2YgbGl2ZSBiZXR0aW5nLiAKVGhleSBjb2xsZWN0IGRhdGEgb24gZXZlcnl0aGluZywgYW5kIHRoZXkgaGF2ZSBzb21lIHZlcnkgc29waGlzdGljYXRlZCBhbmFseXRpY3MgY2FwYWJpbGl0eS4gV2UgbGl2ZSBpbiBhbiBlcmEgd2hlbiBpZiB5b3Ugbm90IGNvbGxlY3RpbmcgZGF0YSwgeW91IGNhbiBrbm93IHdoYXQgZ29pbmcgb24sIGFuZCB5b3UgY2FuIHJlYWN0IHRvIGNvbnN1bWVyIGJlaGF2aW9yLiIuIApDUjogSSBkb24ndCBrbm93IGlmIFJvbGZpbmcgbmVjZXNzYXJpbHkgZGlzY291cmFnZWQgdGhlIG1lZGljYWwgY29tbXVuaXR5IGZyb20gc3R1ZHlpbmcgZmFzY2lhLCBidXQgY29uc2lkZXIgdGhhdCB0aGUgbWVkaWNhbCBwYXJhZGlnbSBpcyB0byBiZSByZWxhdGl2ZWx5IGNvbnNlcnZhdGl2ZSB3aGVuIGl0IGNvbWVzIHRvIGFjY2VwdGluZyB0cmVhdG1lbnQgcHJvdG9jb2xzIGJhc2VkIHVwb24gYW5lY2RvdGFsIHJlcG9ydHMuIFRoZSBtZWRpY2FsIHByb2Zlc3Npb24gaGFzIG5vIHJlYWwgaWRlYSBhYm91dCBob3cgdG8gcmVoYWIgcGVvcGxlIGZyb20gYW55IHR5cGUgb2YgbWVkaWNhbCBjb25kaXRpb247IG1lZGljaW5lIG1pZ2h0IHN1cmdpY2FsbHkgY29ycmVjdCBvciB0cmVhdCBzeW1wdG9tcyBhbmQgc2lnbnMgb2Ygc29tZW9uZSdzIGNvbmRpdGlvbiwgYnV0IGl0IHdvbid0IGV2ZXIgZ2V0IGEgcGVyc29uIGJhY2sgdG8gY29uZGl0aW9uIHdpdGhvdXQgcmVoYWIuIAoiSmltLCBpbiBoaXMgcm9sZSBhcyBwcmVzaWRlbnQsIG1hZGUgaGltc2VsZiBhd2FyZSBvZiB0aGUgem9uaW5nIGNvZGUgc28gdGhhdCBoZSBjb3VsZCB0YWxrIHRvIGRldmVsb3BlcnMgaW50ZWxsaWdlbnRseSwiIHNoZSBzYWlkLgpZb3VyIGJhbmtyb2xsIGlzIHRoZSBlbnRpcmUgYW1vdW50IG9mIG1vbmV5IHlvdSBoYXZlIGF2YWlsYWJsZSB3aXRoIHdoaWNoIHRvIHBsYXkgcG9rZXIgb3ZlciBhIHBlcmlvZCBvZiB0aW1lLiAKVGhlIGZpcnN0IG9wcG9uZW50IHRoYXQgY291bGQgYmUgY29uc2lkZXJlZCAid29ydGh5IiB3YXMgQnJhemlsIGluIHRoZSBmaW5hbHMuIApXZSBrbm93IHRoYXQgZnJvbSB0aGUgaGlzdG9yeSBvZiB0aGUgbGFzdCBzaXh0eSB5ZWFycyBvciBzby4gClp1bSBKYWhyZXNlbmRlIHNvbGwgZGFzIERlcmFnIExpdmluZ2hvdGVsIERlIE1lZGljaSBlcmZmbmVuLCBlaW4gc29nZW5hbm50ZXMgU2VydmljZWQgQXBhcnRtZW50IEhvdGVsLiBBdWNoIGRhcyBBbmRyZWFzIFF1YXJ0aWVyIHNldHp0IGF1ZiBlaW4gZGVyYXJ0aWdlcyBLb256ZXB0LiAKSSBoYXZlIHZlcnkgbGl0dGxlIGtub3dsZWRnZSBvZiB0aGVpciBvZmZpY2Ugc3RhZmYgdGhvdWdoLi4gClRvIGdldCBhIGxlYW4sIHRyaW0geW91ciBtaWRzZWN0aW9uIGFuZCBsb3NlIGJlbGx5IGZhdCwgeW91IG5lZWQgdG8gc3RyZW5ndGggdHJhaW4gd2l0aCBhIGhpZ2ggdm9sdW1lLCB1c2luZyBsYXJnZSBtdXNjbGUgZ3JvdXBzLCBhbmQgc2hvcnQgcmVzdCBwZXJpb2RzLiAKRHJhdyBQb2tlckRyYXcgcG9rZXIgaXMgYW5vdGhlciB2ZXJzaW9uIG9mIHBva2VyIHlvdSBzaG91bGQgbGVhcm4gaG93IHRvIHBsYXkuIEl0IGlzIGhhcmQgdG8gZmluZCBkcmF3IHBva2VyIGJlaW5nIHBsYXllZCBpbiBicmljayBhbmQgbW9ydGFyIGNhc2lub3MsIGJ1dCBhbG1vc3QgZXZlcnkgaW50ZXJuZXQgcG9rZXIgc2l0ZSBoYXMgZHJhdyBwb2tlci4gCkxvdmluZyBvdXJzZWx2ZXMgaXMgbm90IGp1c3QgYSBmZWVsaW5nLCBpdCBzb21ldGhpbmcgdGhhdCB3ZSBkby4gCiJJdCBpcyB3aXRoIHJlZ3JldCB0aGF0IEhvcnNlc2hvZSBDaW5jaW5uYXRpIHdpbGwgY2FuY2VsIGl0cyB1cGNvbWluZyBzdG9wIG9uIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgQ2lyY3VpdCB0b3VyLCB3aGljaCB3YXMgc2NoZWR1bGVkIHRvIGJlIGhlbGQgTWFyY2ggMTkgMzAuIFdoaWxlIHRoZSBjYXNpbm8gaGFkIHRyZW1lbmRvdXMgc3VjY2VzcyB3aXRoIGl0cyBpbmF1Z3VyYWwgaW52b2x2ZW1lbnQgaW4gdGhlIFdTT1AgdG91ciBpbiAyMDEzLCBsb2dpc3RpY2FsIGFuZCBzY2hlZHVsaW5nIGRpZmZpY3VsdGllcyB3aWxsIHByZXZlbnQgSG9yc2VzaG9lIGZyb20gaG9zdGluZyBXU09QQyBhdCB0aGlzIHRpbWUuIApWaXNpdGF0aW9uIHdpbGwgYmUgZnJvbSA1OjAwICAgNzowMCBQTSBvbiBGcmlkYXksIFNlcHRlbWJlciAxNCwgMjAxOCBhdCB0aGUgTGVucm9vdCBNYWV0em9sZCBGdW5lcmFsIEhvbWUsIDEyMDkgRS4gNXRoIFN0cmVldCwgU3VwZXJpb3IuIApXZXQgZ3JvdW5kIGFsc28gaGFzIG1vcmUgY29uZHVjdGl2aXR5IGFuZCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGZpbmQgaXRlbXMgdGhhdCBhcmUgZGVlcGVyIHRoYW4gaWYgdGhlIGdyb3VuZCB3ZXJlIGRyeS4gCkFsc28sIGRvbiBsaXN0ZW4gdG8gcmVkIHBpbGwgZ3V5LiBXaGF0IGhhcHBlbmluZyBub3cgaXMgdGhhdCB0aGVyZSBpcyBhIHJldm9jYXRpb24gb2YgbG9uZyBzdGFuZGluZyBwcml2aWxlZ2UgaW4gZmF2b3Igb2YgYSBtb3JlIGxldmVsIHBsYXlpbmcgZmllbGQuIEl0IHN0aWxsIHVuZXZlbiwgYW5kIHN0aWxsIGhlYXZpbHkgZmF2b3JzIGNpcyB3aGl0ZSBtYWxlcywgYnV0IHBlb3BsZSBhcmUgY29uY2lvdXNseSBtYWtpbmcgYW4gZWZmb3J0IHRvIHRyeSB0byBtYWtlIGl0IHNvIHRoYXQgZXZlcnlvbmUgY29tcGV0ZXMgZXF1YWxseS4uIApJIGRvbid0IHRoaW5rIHBsYXllcnMgYXJlIHJlYWxseSByZXNwZWN0ZWQgbW9yZSBmb3IgbGFuZGluZyB0cmlja3Mgb24gdGhlIG1vcmUgb2xkIHNjaG9vbCBLVVNBIHNoYXBlIHJlYWxseS4gSSBtaWdodCBiZSB3cm9uZywgYnV0IEl2ZSBuZXZlciBzZWVuIGFueW9uZSBzYXkgIndvdyB5b3UgbGFuZGVkIHRoYXQgb24gYSBLVVNBIGtlbmRhbWEgICByZXNwZWN0ISIgaW1vClBsZWFzZSBjb25zaWRlciBzdWJtaXR0aW5nIHlvdXIgYXJ0aWNsZSB0byAvci9vZmZiZWF0IG9yIHNpbWlsYXIgc3VicmVkZGl0cyB1bmxlc3MgaXQgdHJ1bHkgcmVhZHMgbGlrZSBUaGUgT25pb24gd3JvdGUgaXQuIFRoZSB0aXRsZSBhbmQgYXJ0aWNsZSBpdHNlbGYgbXVzdCBib3RoIGJlICJPbmlvbnkiLiBUaGlzIGNhbiBiZSBoaWdobHkgc3ViamVjdGl2ZTsgeW91IGFyZSBlbmNvdXJhZ2VkIHRvIHVwdm90ZSBhcnRpY2xlcyB0aGF0IHNob3VsZCBiZSBoZXJlIGFuZCBkb3dudm90ZSB0aG9zZSB0aGF0IHNob3VsZCBub3QuIE1vZGVyYXRvcnMgY2FuIGFsc28gcmVtb3ZlIHBvc3RzIGF0IHRoZWlyIG93biBkaXNjcmV0aW9uIHVuZGVyIHRoaXMgcnVsZS4KVGhlIHdob2xlIG91dGNvbWUgb2YgdGhlIGdhbWUgaXMgYWJzb2x1dGVseSB1bmV4cGVjdGVkIGFuZCB0aGVyZWZvcmUgdWx0aW1hdGVseSB5b3UganVzdCBwbGF5IGZvciB0aGUgc2hlZXIgcGxlYXN1cmUgYXR0YWNoZWQgdG8gaXQgYW5kIG5vdCBqdXN0IGZvciB0aGUgd2luLi4gClRob3NlIHR3byBhcmUgdGhlIG9ubHkgbWVtYmVycyBvZiB0aGUgdmlsbGFnZSB0aGF0IGhhdmUgaGF0cmVkIGZvciBhbGNoZW1pc3QgYW5kIHdpemFyZHMgcm9vdGVkIHNvIGRlZXAgdGhhdCB0aGV5IG1hZGUgdGhlaXIgbGl2ZSBnb2FsIHRvIGh1bnQgZXZlcnkgd2l6YXJkIHRoYXQgZXNjYXBlZCBhbmQgYWxsIHRoYXQgd2VyZSBiZWhpbmQgdGhlIHNjZW5lcy4gClRyaWJhbCBsYW5kcyBhcmUgZXhlbXB0IGZyb20gdGhlIGxhdywgYW5kIGFsbCBBcml6b25hIGNhc2lub3MgZmFsbCB1bmRlciB0aGVpciBqdXJpc2RpY3Rpb24uIFlvdSdyZSBzdGlsbCBpbiBsdWNrOiBlbmpveSBzbW9rZSBmcmVlIGdhbWJsaW5nIGluIHNtb2tlIGZyZWUgYXJlYXMgb3Igbm9uIHNtb2tpbmcgcm9vbXMgd2l0aCBzZXBhcmF0ZSBmaWx0cmF0aW9uIGF0IHNldmVyYWwgY2FzaW5vcyB0aHJvdWdob3V0IHRoZSBzdGF0ZS5MYXJnZXN0IE5vbiBTbW9raW5nIFNsb3RzIFJvb21DbGlmZiBDYXN0bGUgQ2FzaW5vLCBDYW1wIFZlcmRlOiBTZXJ2aW5nIHVwIHRoZSBsYXJnZXN0IG5vbiBzbW9raW5nIHNsb3QgYXJlYSBpbiB0aGUgc3RhdGUgd2l0aCAxMDggc21va2UgZnJlZSBzbG90cywgQ2xpZmYgQ2FzdGxlIENhc2lubydzIG5vbiBzbW9raW5nIHNsb3RzIHJvb20gaGFzIGl0cyBvd24gYWlyIGhhbmRsaW5nIHN5c3RlbS4gClRoZSBtb3JhbCBpczogYmVmb3JlIGFncmVlaW5nIHRvIGEgZnVja3RvbiBvZiBleHBlbnNpdmUgcmVwYWlycyBvciAicHJldmVudGF0aXZlIG1lYXN1cmVzIiB5b3Ugd2VyZW4ndCBleHBlY3Rpbmcgd2hlbiB5b3UgYnJvdWdodCB5b3VyIGNhciBpbnRvIHRoZSBzaG9wLCBwbGVhc2UgZGVjbGluZSB0byBoYXZlIHRoZW0gZG9uZSB1bnRpbCB5b3UgZ2V0IGEgc2Vjb25kIG9waW5pb24uLiAKV2hpbGUgc29tZSBvZiB0aGVzZSBzY2hvbGFyc2hpcHMgYXJlIGJhc2VkIG9uIGdyYWRlcyBhbmQgdGVzdHMgc2NvcmVzLCBvdGhlcnMgdGFrZSBhcmVhIG9mIHN0dWR5LCByYWNlLCBnZW5kZXIgYW5kIGNhcmVlciBnb2FscyBpbnRvIGFjY291bnQuLiAKV29vZHdhcmQsIGluIFByb2NlZWRpbmdzIEEgICBQaHlzaWNhbCBTY2llbmNlLCBNZWFzdXJlbWVudCBhbmQgSW5zdHJ1bWVudGF0aW9uLCBWb2x1bWU6IDEzNiA2IE5vdi4gCkxpa2UgdGhlIGRlY29yLCB0aGUgbWVudSBibGVuZHMgdHJhZGl0aW9uYWwgYW5kIGNvbnRlbXBvcmFyeSBpbmZsdWVuY2VzIGZyb20gYWNyb3NzIHRoZSBnbG9iZS4gVGhlIGRpbm5lciBtZW51IGluY2x1ZGVzIGEgaGFuZGZ1bCBvZiBNb3JvY2NhbiBzcGVjaWFsdGllcyBsaWtlIGJlZWYga29mdGEgbWVhdGJhbGxzLCBiZWVmIHRhZ2luZSwgYW5kIGNoaWNrZW4gYSBsYSBjaGFybW91bGEgbWFyaW5hdGVkIGluIE1vcm9jY2FuIHNwaWNlcy4gTWVkaXRlcnJhbmVhbiBpbnNwaXJlZCBkaXNoZXMgaW5jbHVkZSB2ZWdldGFibGUgcmlzb3R0byBhbmQgYSBjaGlja2VuIGJhbGxvdGluZSBzdHVmZmVkIHdpdGggbG9ic3RlciBhbmQgc3BpbmFjaC4KSXQncyBob25lc3RseSBub3QgdGhhdCBoYXJkLi4gClRoZSBhbm5vdW5jZXIgc2hvdXRzICJIZSBnb3QgdGhlIHNldCB1cCwgaGUgZ29ubmEgZG8gaXQhIi4gCkNlIGNoYW5nZW1lbnQgZGUgdHRlIGV4cGxpcXVlIGVuIHBhcnRpZSBsJ2Fic2VuY2UgZGUgY29tbXVuaWNhdGlvbiBkZSBsJ0h0ZWwgZGUgVmlsbGUgbGUgdGVtcHMgZGUgbGEgdHJhbnNpdGlvbi4uIApZb3UgZGVjaWRlIHRvIHNlZSB3aGF0IHRoaXMgcGVyc29uIGlzIGxpa2UsIHNvIHlvdSBleGVjdXRlIGEgcXVpY2sgY29tbWFuZCB0byB0YWtlIGEgbG9vayBhdCB3aGF0IHRoZSBJbnRlcm5ldCBoYXMgdG8gc2F5IGFib3V0IGhpbSBvciBoZXIuIApUaGUgcGFpciwgd2hvIHBsYXkgb2Z0ZW4gdGhyb3VnaG91dCB0aGUgTGVoaWdoIFZhbGxleSB3aXRoIGFuZCB3aXRob3V0IHRoZSBiYW5kLCBoYWQgYSBwYXJ0aWN1bGFybHkgZ29vZCBvdXRpbmcuIEFuZCB0aGV5IGRpZG4ndCBtaW5kIGlmIHRoZSBjcm93ZCB0YWxrZWQgICBvciBzYW5nICAgZHVyaW5nIHRoZWlyIHNldC4gClNvIHdpcmQgZWluZW0gQmFybWFubiBkZXMgUmFmZmxlcyBTaW5nYXB1ciBkaWUgRXJmaW5kdW5nIGRlcyBlcmZyaXNjaGVuZGVuIFNpbmdhcG9yZSBTbGluZyIgICBlaW4gR2luIENvY2t0YWlsLCBkZXNzZW4gWnViZXJlaXR1bmcgamVkZXIgQmFydGVuZGVyIHdlbHR3ZWl0IGJlaGVycnNjaGVuIG11c3MgICB6dWdlc2NocmllYmVuLCBzbyB6d2lzY2hlbiAxOTEwIHVuZCAxOTE1LiAKVGhlIGJvdW5kYXJ5IHdhcyBmdXJ0aGVyIGFsdGVyZWQgaW4gMTk5NCBieSB0aGUgTG9jYWwgR292ZXJubWVudCAoQm91bmRhcmllcykgKFRvd24gRWxlY3Rpb25zKSBSZWd1bGF0aW9ucyAxOTk0LiAKSSBhbSBub3QgYWJsZSB0byByZW1lbWJlciB0aGUgc2ltcGxlIHdheSBJIGJvdWdodCB0aGlzIG9uZSBpbiBwYXJ0aWN1bGFyIGJ1dCBjYXB0aXZhdGVzIEkgaGFzIGRvbmUuIApUaGVyZSBpcyBsaXR0bGUgbmVlZCBmb3IgYXBwbGljYXRpb24gb2YgaXRzIG9yaWdpbmFsIG1lYW5pbmcgaW4gdG9kYXkncyBzb2NpZXR5Li4gCkl0IHNob3VsZCBiZSBjbGVhciB0byBldmVyeW9uZSBub3cgdGhhdCBjdXR0aW5nIGJhY2sgb24gZ3JlZW5ob3VzZSBnYXNlcyBpcyBub3QgZ29pbmcgdG8gd29yaywgdG8gbGl0dGxlIHRvIGxhdGUuIFRoZSBodW1hbiByYWNlIGlzIGdvaW5nIHRvIG5lZWQgYmlnIHByb2plY3RzIHRvIHNlcXVlc3RlciBjYXJib24sIHdlIG5lZWQgdG8gdGFrZSBjYXJib24gb3V0IG9mIHRoZSBhdG1vc3BoZXJlIGFuZCBwdXQgaXQgYmFjayBpbiB0aGUgZ3JvdW5kLCBhdCB0aGlzIHBvaW50IHRoYXQgaXMgdGhlIG9ubHkgaG9wZSBmb3IgdGhlIGh1bWFuIHJhY2UuIFdlIG5lZWQgbW9uZXkgdG8gZG8gdGhhdCwgbG90cyBvZiBtb25leS4KIlRoZSBBY2N1c2VycyIgc291bmRlZCBtb3JlIGxpa2UgYSBuYW1lIG9mIGEgc2VwYXJhdGUgdHJpYmUgdGhhbiBhIGNhbGwgc2lnbiB0aG91Z2ggSSBjb25jZWRlIHRoYXQgbWF5IGhhdmUgYmVlbiB0aGUgbmFtZSBvZiB0aGVpciBmYWN0aW9uLk9uIGEgc2lkZSBub3RlLCB0aGlzIG1vdmllIGp1c3QgbGVmdCBtZSB3b25kZXJpbmcgd2hhdCBwb2ludCBpdCBpcyB0aGF0IFJvbmFuIGdvZXMgZnJvbSBiZWluZyBvYmVkaWVudCB0byBtYW5pYWNhbCBhbmQgd2hlbiBLb3JhdGggc3dpdGNoZXMgc2lkZXMgdG8gam9pbiBSb25hbi4gRmVlbHMgbGlrZSB0aGVyZSBzdXBwb3NlZCB0byBiZSBzb21ldGhpbmcgaW4gYmV0d2VlbiBDYXB0YWluIE1hcnZlbCBhbmQgdGhlIGV2ZW50cyBvZiBHb1RHMUVESVQ6IHRvIGNsYXJpZnkgc29tZSB0aGluZzsgVGhlIEFjY3VzZXJzIGlzIGxpa2VseSBqdXN0IHRoZSBjYWxsIHNpZ24gZm9yIHRoYXQgY2xhc3Mgb2YgYm9tYmVycyB3aGljaCBSb25hbiBpcyBsaWtlbHkgdGhlIGhlYWQgaG9uY2hvIG9mIHdoaWNoIHdvdWxkIGV4cGxhaW4gd2h5IGhlIHRha2VzIHRoZSBuYW1lLiBBbHNvLCBJIGtub3cgdGhlcmUgZXZlbnRzIHRoYXQgaGFwcGVuIGJldHdlZW4gQ00gYW5kIEdPVEcxIGJ1dCBpIG1lYW50IGxpa2UgYW4gYWN0dWFsIG1vdmllIGluIGJldHdlZW4gdG8gZXhwbGFpbiBzdHVmZi4gCk1vc3QgcmVjZW50bHksIGhlIHBsYXllZCBjb25zdHJ1Y3Rpb24gY29tcGFueSBvd25lciBGcmVkIEFuZHJld3MsIGZhdGhlciBvZiBtYWluIGNoYXJhY3RlciBBcmNoaWUgQW5kcmV3cywgZm9yIHRocmVlIHNlYXNvbnMgb24gIlJpdmVyZGFsZSwiIHRoZSBDVyBzZXJpZXMgdGhhdCBnaXZlcyBhIGRhcmsgdGFrZSBvbiAiQXJjaGllIiBjb21pY3MuIApPaWwgaW50ZXJlc3RzIGFyZSBwYXJ0IG9mIHRoZSBWZW5lenVlbGEgc2l0dWF0aW9uCiJTb21lIG9mIHRoZSBpc3N1ZXMgdGhhdCBhcmUgdGhlcmUsIHN1Y2ggYXMgd2hhdCBraW5kIG9mIHJhY2VzIGNhbiB5b3UgcnVuLCBhcmUgdGhlIGtpbmRzIG9mIHRoaW5ncyB0aGF0IG5lZWQgdG8gYWN0dWFsbHkgYmUgZGlzY3Vzc2VkLiBXaGV0aGVyIG9yIG5vdCB0aGV5IHBhc3MgaXQgYmVmb3JlIHRoZSBMZWdpc2xhdHVyZSBwYXNzZXMgaXQgb3Igbm90LCBmcmFua2x5IHRoZSBkaXZpc2lvbiBzaG91bGQgYmUgYXBwbGF1ZGVkIGZvciBhZGRyZXNzaW5nIHRoZSBpc3N1ZXMsIiBzYWlkIFdpbGJ1ciBCcmV3dG9uLCBhIGxvYmJ5aXN0IHdob3NlIGNsaWVudHMgaW5jbHVkZSBDYWxkZXIgUmFjZSBDb3Vyc2UuLiAKS2V5IHBvaW50IGluIGFydGljbGUgYmVsb3c6ICBjb25zaWRlciBjaGlyb3ByYWN0aWMgYWRqdXN0bWVudHMgZXh0cmVtZWx5IGltcG9ydGFudC4gT25lIG9mIHRoZSB0aGluZ3MgYW4gYWRqdXN0bWVudCBkb2VzICAgYW5kIGl0J3MgdGhlIG9ubHkgZm9ybSBvZiB0cmVhdG1lbnQgdGhhdCBjYW4gZG8gdGhpcyAgIGlzIHRvIGFjdGl2YXRlIHRoZSBnYW1tYSBhbmQgYWxwaGEgbW90b3IgbmV1cm9uIGxvb3AuIEEgY2hpcm9wcmFjdGljIG1hbmlwdWxhdGlvbiB3aWxsIGFjdGl2YXRlIHRoZSBhbHBoYSBnYW1tYSBtb3RvciBsb29wLCB3aGljaCB3aWxsIG1ha2UgdGhlIHNwaW5kbGUgbW9yZSBzZW5zaXRpdmUgdG8gc3RyZXRjaGluZy4gCkR1cmluZyBoZXIgZGVjYWRlIGluIHJhZGlvLCBTcGllbG1hbiBmcmVlbGFuY2VkIGZvciB0aGUgQ2hpY2FnbyBEYWlseSBOZXdzLCBhdCBDcmFpbidzIENoaWNhZ28gQnVzaW5lc3MsIGZvciAiVGhlIENoaWNhZ28gQmVhciBSZXBvcnQiIGFuZCBhcyBhIHByaW5jaXBsZSBhbmNob3IgYW5kIHJlcG9ydGVyIG9mIENoYW5uZWwgMTEncyBFbW15IEF3YXJkIHdpbm5pbmcgc3BvcnRzIHNob3csICJUaW1lIE91dCIuClByaW1ldGltZTIyICA2LDk3NiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkhlJ3MgdGFraW5nIG15IG5hbWUgICBEUzEgaXNuJ3QgaGlzIGNoaWxkIGJpb2xvZ2ljYWxseSwgYW5kIGNhcnJpZXMgbXkgbmFtZS4gU28gRkRIIGRlY2lkZWQgaGUgd291bGQgdGFrZSBteSBuYW1lLCBhbmQgc28gd291bGQgb3VyIERTMiBERDEgYmVjYXVzZSBoZSBkb2Vzbid0IGxpa2UgY2FycnlpbmcgU0ZJTCdzIG5hbWUgICBlc3BlY2lhbGx5IG5vdyB0aGF0IGhlIGtub3dzIFNGSUwgaXNuJ3QgaGlzIGJpb2xvZ2ljYWwgZmF0aGVyLiBIZSBoYXMgemVybyBsb3lhbHR5IHRvIHRoYXQgc2FjayBvZiBzaGl0LCBzbyBoZSdkIG11Y2ggcmF0aGVyIGNhcnJ5IHRoZSBuYW1lIG9mIHRoZSBmYW1pbHkgd2hvIGhhdmUgd2VsY29tZWQgYW5kIGFkb3JlZCBoaW0sIHRoYW4gdGhlIG9uZSB3aG8gYWJ1c2VkIGFuZCByZWplY3RlZCBoaW0uCkkgc2hvY2tlZCB0aGF0IE11ZWxsZXIgaGFzbiBzdWJwb2VuYWVkIFRydW1wIGZvciBhdCBsZWFzdCBhIGxpbWl0ZWQgaW4gcGVyc29uIGludGVydmlldy4gSWYgVHJ1bXAgd2FudHMgdG8gcGxlYWQgdGhlIDV0aCB0byBldmVyeSBxdWVzdGlvbiBhbmQgaGF2ZSB0aGUgaW50ZXJ2aWV3IG92ZXIgaW4gMjAgbWludXRlcywgdGhhdCBoaXMgQ29uc3RpdHV0aW9uYWwgcmlnaHQuIApKdXN0c2l4IHllYXJzIGFnbywgYSBkcnVua2VuIGRyaXZlciBuYW1lZCBNYXJrIE11bGxhbiBtb3dlZCBkb3duIGZvdXIgbWVtYmVycyBvZiBhIGZhbWlseSBjcm9zc2luZyBhIHN0cmVldCBpbiBTZWF0dGxlIFdlZGd3b29kIG5laWdoYm9yaG9vZC4gQSAxMCBkYXkgb2xkIGJveSB3YXMgYmxpbmRlZCwgaGlzIG1vdGhlciB3YXMgcGVybWFuZW50bHkgaW5qdXJlZCwgYW5kIGhpcyBncmFuZHBhcmVudHMsIHdobyBoYWQganVzdCBtb3ZlZCBoZXJlLCB3ZXJlIGtpbGxlZC4gTGFzdCB5ZWFyLCB0aGUgY2l0eSBzZXR0bGVkIGEgJDEzIG1pbGxpb24gc3VpdCB3aXRoIHRoZSBmYW1pbHkuIEkgY2FuIGRyaXZlIHVwIE5vcnRoZWFzdCA3NXRoIFN0cmVldCB3aXRob3V0IHRoaW5raW5nIG9mIHRoZW0gYWxsLgo0LiBOb3cgdGhhdCB0aGUgTGFzIFZlZ2FzIENsYXkgUG9rZXIgQ2hpcHMgdGhhdCB5b3UgYXJlIHVzaW5nIHRvIGNyZWF0ZSB5b3VyIHVuaXF1ZSBuZWNrbGFjZXMgaGFzIGRyaWVkLCBpdCBpcyB0aW1lIHRvIGRyaWxsIHRoZSBob2xlIGludG8gdGhlIHRvcCBvZiB0aGUgY2hpcCB3aXRoIGVpdGhlciBhIGNyYWZ0IGRyaWxsIG9yIGEgc3RhbmRhcmQgZHJpbGwgdXNpbmcgdGhlIHNtYWxsZXN0IGRyaWxsIGJpdC4gT25jZSBjb21wbGV0ZWQsIHRha2UgYSBzb2Z0IGNsb3RoIGFuZCBicnVzaCBhd2F5IGFueSBzaGF2aW5ncyB0aGF0IG1heSBiZSByZW1haW5pbmcgb24gdGhlIGNoaXAuCiJIZXkgbWFuLCBJIFBzaW9uLiBJdCBtZWFucyBvZiBHb2QgWW91IGZ1Y2sgd2l0aCBhbmltZT8gT2ssIGNvb2wuIApZb3UgY2FuJ3Qgd2luIHBva2VyIHdoZW4geW91IGFyZSBub3QgY29uY2VudHJhdGVkIG9uIHRoZSBnYW1lLiBJZiB5b3UgcmVjb2duaXplIG90aGVycyBpbiB0aGlzIHNpdHVhdGlvbiwgZXhwbG9pdCBpdC4gVGhleSB0ZW5kIHRvIHBsYXkgYSBsb3Qgb2YgaGFuZHMgYW5kIGdvIHRvbyBmYXIgd2l0aCB0aG9zZSBoYW5kcy4gClRoZSBnYW1lIGVuZHMgd2hlbiBhIHBsYXllciByZWFjaGVzIDE1MCBwb2ludHMuIFRoZSBwbGF5ZXIgd2l0aCB0aGUgbG93ZXN0IHNjb3JlIGlzIGRlY2xhcmVkIHRoZSB3aW5uZXIKU2hlIGFsc28gYWxsZWdlcyB0aGF0LCB3aGlsZSBoYXZpbmcgc2V4IHRvZ2V0aGVyIGxhdGVyIHRoYXQgbW9udGgsIFNhbG9tb24gcHV0IGEgcGlsbG93IG92ZXIgaGVyIGZhY2UgYW5kICJ0cmllZCB0byBzdHJhbmdsZSIgaGVyLiAKSSBkb24ga25vdyBob3cgcmVjb3JkIGFmZmVjdHMgeW91ciBjaGFuY2UgdG8gZ2V0IGEgd29yayB2aXNhIHRob3VnaApUaGV5IGJlIGludHJvZHVjZSBzdHVmZiBsaWtlIGNoYXJhY3RlciBzcGVjaWZpYyBwYXJhbG9ndWUsIG1vcmUgcmVjdXJpbmcgY2hhcmFjdGVyIGxpa2UgbWFza2VkIG1hcnRoIG9yIHNpbXBseSBhZGRpbmcgZGlhbG9ndWUgdG8gaGVyb2ljIG9yZGVhbC4KQSBsYXd5ZXIgd2lsbCBiZSBhYmxlIHRvIG5hdmlnYXRlIHRoaXMgZm9yIHlvdS4gCkFyZSB5b3UgaW4gYSBsYXJnZXIgY2l0eT8gVGhlcmUgYXJlIGxvdHMgb2YgcGVvcGxlIHdobyBoYXZlIG1hZGUgcmVjb3ZlcnkgdGhyb3VnaCBtaW5kZnVsbmVzcywgbXlzZWxmIGluY2x1ZGVkIGFuZCBmb3IgY29jYWluZS4gCihOb3RlIHRoaXMgaXMgbm90IG1lLCBidXQgSSBrbm93IHBlb3BsZSBsaWtlIHRoaXMpLi4gCkRpZSB2ZXJsaW5rdGVuIFNlaXRlbiB3dXJkZW4genVtIFplaXRwdW5rdCBkZXIgVmVybGlua3VuZyBhdWYgbWdsaWNoZSBSZWNodHN2ZXJzdGUgYmVycHJmdC4gCkkgYW0gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgdGhpcyBzZW5zZSBvZiB0aHJlYXQuIEkgYW0gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaG93IGFueXRoaW5nIHNvIGVuZ2FnZWQgaW4gdGhlIHByb2plY3Qgb2Ygbm9ybWFsY3kgYXMgbWFycmlhZ2UgY291bGQgYmUgYSB0aHJlYXQgdG8gYSBidW5jaCBvZiBjb25zZXJ2YXRpdmUgQ2hyaXN0aWFucyBvciBNb3Jtb25zIG9yIHdoYXRldmVyIHdobyBhcmUgdGhlbXNlbHZlcyBzbyBlbmdhZ2VkIGluIGJlaW5nIG5vcm1hbC4gQnV0IGFwcGFyZW50bHkgbm90IGFsbCAibm9ybWFscyIgYXJlIGVxdWFsbHkgbm9ybWFsLgpTdGlsbCwgdGhvc2Ugd2hvIG1pc3NlZCBvdXQgb24gdGhvc2UgcmVwbGljYXMgZmVlbCB0aGUgbmVlZCB0byBsYXNoIG91dCBzbyB0aGV5IGRvbid0IGZlZWwgc2FkIGFib3V0IG5vdCBoYXZpbmcgZW5qb3llZCB0aGUgc2FtZSBleHBlcmllbmNlLgpXaGVuIHRoZSBmYXRoZXIgY2hlY2tlZCBvdXQsIGhlIGxlZnQgYSBiYWcgZm9yIG1lIGF0IHRoZSBmcm9udCBkZXNrLiAKSXQgd2FzbiB1bnRpbCB0aGUgbmV4dCBkYXkgdGhhdCBJIG5vdGljZWQgc29tZXRoaW5nIHdhc24gcXVpdGUgcmlnaHQuIFRoZSBmaW5nZXIgaGFkIHN3b2xsZW4gYSBsb3QgYW5kIHdhcyBhbG1vc3QgYmxhY2ssIGFuZCBqdXN0IHRvdWNoaW5nIHNvbWV0aGluZyB3aXRoIHRoZSB0aXAgc2VudCBhIGJvbHQgb2YgcGFpbiB0aGF0IHdhcyB1bmJlYXJhYmxlLi4gCkFic29sdXRlbHksIEkgdW5kZXJzdGFuZCB0aGF0IGJ1dCBJIGEgY29tcHV0ZXIgZ3V5IChzYWRseSB0aGlzIHdhcyBiZWZvcmUgZXZlcnl0aGluZyB3YXMgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldCksIG5vdCBhIGJsaW5kcyBndXksIHNvIEkgaGF2ZSBubyBpZGVhIGlmIGVhY2ggd2luZG93IGlzIGdvaW5nIHRvIGNvc3QgdXMgJDUwLCAkNTAwIG9yICQ1MDAwLiAKSSByYWlzZSB0byA2LCBmYW1pbHkgcG90IHdpdGggY2FsbHMgYWxsIHRoZSB3YXkgYXJvdW5kLiAKVGhhdCBpcyBhIHBvdGVudGlhbGx5IHBvc2l0aXZlIHNlbGxpbmcgcG9pbnQgaW4gYW4gYWdlIHdoZW4gcGVvcGxlIGFyZSBiZWNvbWluZyBtb3JlIG9ic2Vzc2VkIHdpdGggd2hhdCB0aGV5IGFyZSBwdXR0aW5nIGluIHRoZWlyIGJvZGllcy4uIApJdCBoYXBwZW5zIHJhbmRvbWx5LCB1IGRvbnQga25vdyB3aGVuLCBpdCBodXJ0cyB3aGVuIGl0IGhhcHBlbnMuIEZ1Y2tpbiB0ZXJyaWJsZS4gClRoZSBzZWNvbmQgcmVhc29uIGlzIGEgY3VsdHVyYWwgZmFjdG9yLiBJIGRvbiBrbm93IGFib3V0IG90aGVyIGNvdW50cmllcywgYnV0IGluIFRoYWlsYW5kIHRoZSBzZXh1YWwgYmVoYXZpb3VyIG9mIFRoYWkgbWVuIGFjY2VwdHMgcHJvc3RpdHV0aW9uLiBFdmVyeSBjbGFzcyBvZiBUaGFpIG1lbiBhY2NlcHQgaXQsIGFsdGhvdWdoIG5vdCBhbGwgVGhhaSBtZW4gcHJhY3Rpc2UgaXQuIApMaW1pdGluZyBnZXJyeW1hbmRlcmluZyBpcyBubyBkaWZmZXJlbnQgZnJvbSByZWd1bGF0aW5nIGFueSBvdGhlciBodW1hbiBiZWhhdmlvciB2aWEgdGhlIGxhdy4gUGVvcGxlIHdpbGwgZXhwbG9pdCBsZWdhbCBsb29waG9sZXMgaW4gdGhlIGxhdyBhbmQgd2UgY2FuIHNsb3dseSBjbG9zZSB0aG9zZSBsb29waG9sZXMgYXMgd2UgZGlzY292ZXIgdGhlbS4KRmluYWxseSBhZnRlciBhIGNvdXBsZSBtaW51dGVzIG9mIHRoZW0gYmVpbmcgc29tZSBlbnRpdGxlZCBsaXR0bGUgYnJhdHMsIG15IGJvc3MsIGEgdHJ1ZSBzYWludCwgc2FpZCBpbiBhIHRoaWNrIEl0YWxpYW4gQW1lcmljYW4gYWNjZW50ICh0aGluayB0aGUgU29wcmFub3MpLCAiSSBsZXQgbXkgZW1wbG95ZWVzIHRlbGwgb25lIHBlcnNvbiBhIHllYXIgdG8gZnVjayBvZmYgYW5kIEkgZG91YnQgaGUgd2FudHMgdG8gd2FzdGUgaXQgb24geW91LiAKIlNPIEVYQ0lURUQgSE9OT1VSRUQgdG8gYmUgcGFydCBvZiBpdCwiIFZpcnR1ZSB0d2VldGVkIFdlZG5lc2RheS4gIk1vcmUgdG8gY29tZSwgbmVlZCB0byBjb2xsZWN0IG15IGVtb3Rpb25zIGZpcnN0LiIKV2hpbGUgaXQgdHJ1ZSB0aGF0IHN1Y2ggY29uc3RydWN0aW9uIGNhbiBiZSB1c2VkIHRvIGltcGx5IHN1aWNpZGUgKHdoaWNoIGRvZXMgaGF2ZSBwZXJzb25hbCBpbnRlbnRpb24gaW52b2x2ZWQpLCBpdCBhbHNvIHNpbXBseSBpbXBsaWVzIHRoZSByZXN1bHQgb2YgYW4gYWN0aW9uIHRoYXQgZW5kcyBpbiBwZXJzb25hbCBkZWF0aCwgd2hldGhlciB0aGUgcGVyc29uIHdhbnRlZCBpdCBvciBub3Q6CkFub3RoZXIgZ3JlYXQgcmVhc29uIG9ubGluZSBwb2tlciBpcyB3b3J0aCB0cnlpbmcgaXMgdGhlIGZhY3QgdGhhdCB0aGUgdGVjaG5vbG9neSBub3dhZGF5cyBpcyB2ZXJ5IHNlY3VyZSwgYW5kIGZhaXIuIE1ham9yIGJyYW5kcyBhcmUgY29uc3RhbnRseSBiZWluZyBtb25pdG9yZWQgYnkgZ2FtYmxpbmcgY29tbWlzc2lvbnMgdG8gZW5zdXJlIHF1YWxpdHkgc3RhbmRhcmRzLCBhbmQgdG8gbWVldCBjbGllbnQgbmVlZHMgaW4gYWxsIGFyZWFzLCBzcGVjaWFsbHkgZmFpcm5lc3MgYW5kIHNlY3VyaXR5LiAKMTAgSG9tZSBSZW1lZGllcyBmb3IgRGFuZHJ1ZmYKQSBmcmllbmQgaGFzIHN1Z2dlc3RlZCBwbGFjaW5nIDEyIGV4YWN0YSBiZXRzIG9uIFplbnlhdHRhIHRvIHdpbiBhbmQgZWFjaCBvZiB0aGUgb3RoZXJzIHRvIHBsYWNlLiAKT3RoZXJ3aXNlLCB0aGUgY2FyZWVyIHNlcnZpY2VzIGFuZCBzdWNoIHdpbGwgYmUgYSBiaWcgYXNzZXQgYnV0IHRoZSBhY3R1YWwgbWFqb3Igd2lsbCBub3QgaGVscCB5b3UgbGFuZCBhIGNvbnN1bHRpbmcgZ2lnIG92ZXIgYW5vdGhlciBjb2xsZWdlIG1ham9yLi4gCkNCRCBkcmlua3Mgd2VyZSBkcmFuay4gQW5kIG5vdywgaW50byBhIGZyZXNoIG5ldyB3ZWVrIV1Zb3UgZ290IGEgRHIuIE9jdG9nb24gYWxidW0gY292ZXIgYXMgeXIgcHJvZmlsZSBwaWMsIHNvIHRoYXQgbWVhbnMsIGJ5IGRlZmF1bHQsIHlyIGFtYXppbmchLiAKSXMgdGhhdCB3aHkgaGUgbG9zdCB0b2RheT8gSGUncyB3b3JyaWVkIHRoYXQgaGUgaXNuJ3Qgd29ycmllZCwgYW5vdGhlciBnb29kIG1hbiBnb25lIHdyb25nLi4gCk15IE5tb20gbG92ZWQgdGhlcmFweSwgQlRXLiBTaGUgam9pbmVkIGdyb3VwcyBhbmQgY2hlY2tlZCBoZXJzZWxmIGludG8gcHN5Y2ggZmFjaWxpdGllcywgYW5kIGxlYXJuZWQgaG93IHRvIHNwZWFrIHRoZSBsYW5ndWFnZSBvZiB0aGVyYXB5LiBCdXQgc2hlIG5ldmVyIGNoYW5nZWQuIEFjdGlvbnMgd2lsbCBhbHdheXMgc3BlYWsgbG91ZGVyIHRoYW4gd29yZHMuClUvUGhlbm9tMTB4IGhhcyBnb3QgYSBnb29kIHBvaW50IGFib3V0IHRoaXMgY29kZSBuZWVkaW5nIHNvbWUgbWFqb3IgcmV3b3JraW5nLiBJIHN1cmUgeW91IGhlYXJkIHRoZSBpZGlvbSAiQ29kZSBhIGxpdHRsZSwgdGVzdCBhIGxvdCIuCllvdSBjYW4gZXhwZWN0IHlvdXIgaHVzYmFuZCB0byBrbm93IGFuZCBkbyBldmVyeXRoaW5nIGZvciB5b3UuIEkgdGhvdWdodCB5b3Ugd291bGQgaGF2ZSBsZWFybmVkIHRvIHVzZSB5b3VyIHdvcmRzLiBJZiB5b3UgaGF2ZSBhbiBpc3N1ZSwgYnJpbmcgaXQgdXAgYW5kIHRhbGsgYWJvdXQgaXQgYmVjYXVzZSBob3cgdGhlIGhlbGwgaXMgeW91ciBodXNiYW5kIHN1cHBvc2VkIHRvIGtub3cgd2hhdCB0byBzYXkgaWYgeW91IGRvbiBldmVuIGtub3cgd2hhdCBpcyBnb2luZyBvbi4gCkFuZCB3aHkgd291bGQgSSB3YW50IHRvIG1ha2UgYW55Ym9keSBmZWVsIGFueSBvZiB0aGVzZSB0aGluZ3M/IEkgZGlkbid0IHdhbnQgYW55b25lIHRvIGJlIGh1cnQsIGJ1dCBJIGtuZXcgdGhhdCBpZiBJIGtlcHQgdGhpcyBjaGlsZCwgaXQgd291bGRuJ3QgYmUgYW55IG9mIHRoZW0gd2hvIHdvdWxkIHN1ZmZlci4gCkl0IGlzIGRlc2NyaWJlZCBhcyB0aGUgbW9zdCBwbGF5ZWQgcG9rZXIgaW4gcHVibGljIGNhcmQgcm9vbXMuIFRoaXMgaGFzIHRocmVlIHZlcnNpb25zIHRoYXQgY2FuIGJlIHBsYXllZCBpbiBQYWNpZmljIFBva2VyLiAKVGhlIDE5ODggZWxlY3Rpb24gaGFkIGNvbWUgYW5kIGdvbmUsIGFuZCBCdXNoIGhhZCBlYXJuZWQgMzE1IG1vcmUgZWxlY3RvcmFsIHZvdGVzIHRoYW4gTWljaGFlbCBEdWtha2lzLgpMaW1pdCBteSBzZWFyY2ggdG8gci9wb2tlcnVzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpJIHJlcG9ydGVkIGEgYnVzIGRyaXZlciBiZWZvcmUgZm9yIGNsb3NpbmcgdGhlIGRvb3Igb24gbWUgYW5kIGRyaXZpbmcgYXdheSB3aGVuIEkgaGFkIG9uZSBmb290IHN0aWxsIG9uIHRoZSBidXMuCkpvdXJuYWwgb2YgQm9uZSBhbmQgSm9pbnQgU3VyZ2VyeSAgQnJpdGlzaCBWb2x1bWUsIFZvbC4gODkgQiwgSXNzdWUgOSwgU2VwdGVtYmVyIDIwMDcsIHBwLiAxMTM1IDExMzkgTS4gQS4gRWRnYXIsIE1DaGlyLCBGUkNTLCBSZXRpcmVkIE9ydGhvcGVkaWMgU3VyZ2VvbgpTZXZlbiB5ZWFycyBhZ28gdGhlIHN0YXRlIHJlYWNoZWQgYW4gZXhjbHVzaXZlIGRlYWwgdG8gbGV0IHRoZSB0cmliZSBvZmZlciBibGFja2phY2sgYXQgbWFueSBvZiBpdHMgRmxvcmlkYSBjYXNpbm9zLCBidXQgdGhhdCBwcm92aXNpb24gZXhwaXJlZCBpbiAyMDE1LiAKR2l2ZSBtZSBhIHNlY29uZC4iIGFuZCBteSBkYXVnaHRlciB3aWxsIHNheSwgIk1vbW15LCBpcyBEYWQgdGhpbmtpbmcgYWJvdXQgdGhhdCBzdHVwaWQgSm9rZXIgZ3V5IGFnYWluPyIgYW5kIHNoZSB3aWxsIHNheSwgIlllcywgZGVhci4gSSBhZnJhaWQgaGUgaXMuIERhZGR5IGlzIHZlcnkgc2ljayBhbmQgc3RpbGwgaGFzIGEgbG90IG9mIGhlYWxpbmcgdG8gZG8uIlNvLCBJIHZlcnkgdGltaWQgYWJvdXQgaGFpcmN1dHMuIApWaWN0b3J5IGlzIHdpbm5pbmcgZm9yIG91ciBjb3VudHJ5LCcgc2hlIGpvaW5lZCBoZXIgcGFydHkgaW4gYXBwbGF1ZGluZyBoaW0uU2hlIGFsc28gYXBwbGF1ZGVkIGhpbSBsb3VkbHksIHN0YW5kaW5nIGFuZCByYWlzaW5nIGhlciBoYW5kcyBvdXQgdG8gaGltLCB3aGVuIGhlIGNhbGxlZCBmb3IgYW4gZW5kIG9mICdyZXZlbmdlIHBvbGl0aWNzLidBbmQgc2hlIHN0b29kIHRvIGNoZWVyIGZvcnRocmVlIFdvcmxkIFdhciBJSSB2ZXRlcmFucyBhbmQgQXBvbGxvIDExIGFzdHJvbmF1dCBCdXp6IEFsZHJpbiB3aG8gd2VyZSBndWVzdHMgb2YgdGhlIHByZXNpZGVudCBhbmQgZmlyc3QgbGFkeSdzLlNoZSBhbHNvIGpvaW5lZCBpbiB0aGUgd29tZW4gb2YgdGhlIERlbW9jcmF0aWMgUGFydHkgd2hlbiBoZSBtZW50aW9uZWQgdGhlIGhpZ2ggdW5lbXBsb3ltZW50IG51bWJlcnMgYW1vbmcgd29tZW4uQSByZWNvcmQgbnVtYmVyIG9mIG5ld2x5IGVsZWN0ZWQgZnJlc2htZW4gd29tZW4gRGVtb2NyYXRzbGVhcHQgdG8gdGhlaXIgZmVldCBhbmQgaGlnaCBmaXZlZCBlYWNoIG90aGVyLlNlbi4gS2lyc3RlbiBHaWxsaWJyYW5kLCBhIE5ldyBZb3JrIERlbW9jcmF0IHdobyBpcyBydW5uaW5nIGZvciB0aGUgRGVtb2NyYXRpYyBwcmVzaWRlbnRpYWwgbm9taW5hdGlvbiwgZmxhc2hlZCBhIHRodW1icyB1cCB3aXRoIGJvdGggaGFuZHMuJ1lvdSB3ZXJlbid0IHN1cHBvc2VkIHRvIGRvIHRoYXQhJyBUcnVtcCBqb2tlZCwgcGF0dGluZyBoaW1zZWxmIG9uIHRoZSBiYWNrIGZvciBwcmVzaWRpbmcgb3ZlciAnbW9yZSB3b21lbiBpbiB0aGUgd29ya2ZvcmNlIHRoYW4gZXZlciBiZWZvcmUuJ0FzIHRoZSBEZW1vY3JhdGljIHdvbWVuIGJlZ2FuIHRvIHRha2UgdGhlaXIgc2VhdHMsIFRydW1wIGFnYWluIHdlbnQgb2ZmIHNjcmlwdC4nRG9uJ3Qgc2l0IHlldC4gWW91J3JlIGdvaW5nIHRvIGxpa2UgdGhpcyEnIGhlIHNhaWQuJ0V4YWN0bHkgb25lIGNlbnR1cnkgYWZ0ZXIgdGhlIENvbmdyZXNzIHBhc3NlZCB0aGUgQ29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IGdpdmluZyB3b21lbiB0aGUgcmlnaHQgdG8gdm90ZSwgd2UgYWxzbyBoYXZlIG1vcmUgd29tZW4gc2VydmluZyBpbiB0aGUgQ29uZ3Jlc3MgdGhhbiBldmVyIGJlZm9yZS4nU2hvdXRzIG9mICdVU0EhIFVTQSEnIHJhbmcgb3V0IGZyb20gYm90aCBzaWRlcyBvZiB0aGUgY2hhbWJlci5QZWxvc2kgdG9sZCByZXBvcnRlcnMgaW4gdGhlIENhcGl0b2wgYWZ0ZXJ3YXJkIHRoYXQgc2hlIGVuam95ZWQgdGhhdCBwYXJ0IG9mIHRoZSBldmVuaW5nLidJIGxpa2VkIHdoZW4gaGUgYWNrbm93bGVkZ2VkIHdoZW4gaXQgd2FzIHRoZSBsYXJnZXN0IG51bWJlciBvZiB3b21lbiwnIHNoZSBzYWlkIG9mIGhpcyBzcGVlY2guVGhlIG5pZ2h0IHN0YXJ0ZWQgb2ZmIG9uIHRoZSB3cm9uZyBmb290IHdoZW4gUHJlc2lkZW50IFRydW1wZ2F2ZSBQZWxvc2ksIGhpcyBvZmZpY2lhbCBob3N0IGZvciB0aGUgYW5udWFsIHNwZWVjaCwgdGhlIGNvbGQgc2hvdWxkZXIuSGUgc2hvb2sgaGVyIGhhbmQgd2hlbiBoZSBhcnJpdmVkIGF0IHRoZSBkYWlzIG9uIHRoZSBmbG9vciBvZiB0aGUgSG91c2UgYW5kIGhhbmRlZCBoZXIgYSBjb3B5IG9mIHRoZSBzcGVlY2guVGhlIHByZXNpZGVudCBhbmQgUGVsb3NpIHNob29rIGhhbmRzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5pZ2h0QnV0IGl0J3MgdHJhZGl0aW9uYWwgZm9yIHRoZSBzcGVha2VyIHRvIGludHJvZHVjZSB0aGUgcHJlc2lkZW50IGJlZm9yZSBhbiBhZGRyZXNzIHRvIGEgSm9pbnQgU2Vzc2lvbiBvZiBDb25ncmVzcy4gClBlcnNvbmFsbHksIEkgbG92ZSB0b3VybmFtZW50cy4gSSBsb3ZlIHRoZSBmZXN0aXZhbCBxdWFsaXR5IHRoYXQgdGhleSBoYXZlLiBIb3dldmVyLCBzb21lIHRvdXJuYW1lbnRzIGFyZSBhd2Z1bCB0aGluZ3MgdG8gYXR0ZW5kLiAKMiBpbiB0aGUgTkVUIHJhbmtpbmdzLCBoYXMgYSBxdWFsaXR5IHJzdW0gd2l0aCBzdHJvbmcgYW5hbHl0aWNzIHJhdGluZ3MsIGEgbmV1dHJhbCBjb3VydCB3aW4gb3ZlciBEdWtlLCBhIG5hcnJvdyBsb3NzIHRvIFRlbm5lc3NlZSBpbiBQaG9lbml4IGFuZCBhIDEzIHBvaW50IGxvc3MgYXQgTm9ydGggQ2Fyb2xpbmEsIHdoaWNoIHdhcyBwcm9qZWN0ZWQgYXMgYSB0d28gc2VlZC4uIApZb3UnbGwgam9pbiB0aGUgc21hbGxlciB0YWJsZXMgYWdhaW4gYW5kIGZlZWwgbGlrZSB0aGUgbW9uZXkganVzdCBpc24ndCBlbm91Z2ggdG8gZ2V0IHlvdXIgYmxvb2Qgc3RpcnJpbmcuIAoiVGhlIGNhc2lubyBlbnRlcnRhaW5tZW50IGluZHVzdHJ5IGhhcyBleHBlcmllbmNlZCBhbnVucHJlY2VkZW50ZWQgc3VyZ2UgaW4gcmV2ZW51ZSBncm93dGggaW4gdGhlIHBhc3QgZml2ZSB5ZWFycyB0aGF0b3V0cGFjZXMgbmVhcmx5IGFsbCBvdGhlciBpbmR1c3RyeSBncm91cHMuIApFeGFtcGxlLCAkNTAuIApDb21tb24gdXNlcyBmb3IgcHJvZHVjdHMgYW5kIHNlcnZpY2VzLiBMaWtlIGJ1eWluZyBiYXR0ZXJpZXMgZm9yIGdpZnRzIHRoYXQgbmVlZCBiYXR0ZXJpZXMuCkkgbGl2ZSBpbiB0aGUgc3RhdGVzIHNvIGl0cyBub3QgbGlrZSBpbSBmcm9tIG5vcnRoIGtvcmVhIG9yIGFueXRoaW5nLiBXYXMgaG9waW5nIHRvIGZpbmQgb3V0IGlmIHRoZXJlIGFyZSBwbGFucyB0byBnZXQgb24gYW4gZXhjaGFuZ2UgaW4gdGhlIHZlcnkgbmVhciBmdXR1cmUgdGhhdCBhbGxvd3MgbW9yZSBkaXZlcnNlIGludmVzdG9ycz8gbm90IHRhbGtpbmcgYmluYW5jZSBvciBhbnl0aGluZyBidXQgc29tZXRoaW5nIGxpa2UgaG90Yml0IG9yIGxhdG9rZW4gb3Igd2hhdGV2ZXIsIGp1c3Qgc29tZXRoaW5nIHRoYXQgYWxsb3dzIG1vcmUgcGVvcGxlIGxpa2UgbXlzZWxmIHRoZSBhYmlsaXR5IHRvIGJ1eSB6Y24uIApJdCBzZWVtcyBsaWtlIGV2ZXJ5b25lIGFjdGVkIHdpdGhpbiB0aGVpciBib3VuZHMgaW4gdGhpcyBzaXR1YXRpb24uIApUaGUgZ29kcyBvZiBwb2tlciBhcmUgbm90IGltcHJlc3NlZC4gUHJlc3RvbiBidW1wcyBhIHBhaXIgb2YgcXVlZW5zLCBhbmQgdGhlIGxhc3QgJDMsNTAwIG9mIGhpcyAkMTAsMDAwIHN0YWtlLCBhZ2FpbnN0IHdoYXQgdHVybnMgb3V0IHRvIGJlIGEgcGFpciBvZiBraW5ncy4gTm93IFNsaW0gaXMgb3V0IG9mIHRoZSBhY3Rpb24sIGFuZCBzbyBpcyA4MyB5ZWFyIG9sZCBKb2hubnkgTW9zcyBvZiBPZGVzc2EsIFRleGFzLCBhIHRocmVlIHRpbWUgY2hhbXBpb24gd2l0aCB0aGUgc21pbGUgb2YgYSBjcm9jb2RpbGUuIApJIGhhZCBhbiBFY3RvcGljIGluIGxhdGUgSmFuLiAKNSBkYXlzIGFnb0FTRVYgVEhNJ0RFTiBUUksgWllBRkVUQWxpYWFsbGFybiBnbmxuZGUgdGFodCBrdXJhbiBBbGlhYSBCZWxlZGl5ZXNpIFNhbmF0ZXZpIChBU0VWKSBUcmsgSGFsayBNemlpIChUSE0pIEtvcm9zdSBCYWhhciBLb25zZXJpIGlsZSB0cmsgc2V2ZXJsZXJpbiBrYXJzbmEga3QuIEtsdHIgc2FuYXQgZXRraW5saWtsZXJpIGthcHNhbW5kYSBzYWhuZSBhbGFuIDgwIGtpaWxpayBkZXYga29ybyBFZ2UgdmUgQWtkZW5peiB0cmtsZXJpbmRlbiBvbHVhbiByZXBlcnR1YXIgaWxlIEFsaWFhbGxhcmEgdW51dHVsbWF6IGJpciBtemlrIHppeWFmZXRpIHN1bmR1LiBUcHJhIEhhbGsgRWl0aW0gTWVya2V6aSduZGUgZ2VyZWtsZXRpcmlsZW4ga29uc2VyZGUsIEVnZSB2ZSBBa2Rlbml6IHlyZWxlcmluZGVuIGRlcmxlbmVuIGVzZXJsZXIgVEhNIGtvcm9zdSB0YXJhZm5kYW4gc2VzbGVuZGlyaWxkaS4gVHJrIHR1dGt1bmxhcm5uIHlvdW4gaWxnaSBnc3RlcmRpaSBnZWNlZGUgVEhNIGtvcm9zdSwgeWFrbGFrIGlraSBzYWF0IGJveXVuY2Egc2FobmVkZSBrYWxkLiBLb3JvIGVmaSBaZXluZWwgRGVtaXInaW4geW5ldG1lbmxpLgpFYm9vayBCdXkgJDEyLjk5LiAKU28gSSBndWVzcyBJIGtub3cgb2YgR3JlZW4gTGFudGVybiBidXQgbm90IHJlYWxseSBhbnl0aGluZyBvdGhlciB0aGFuIGhlIGV4aXN0cy5FdmVuIHRoZSByb2JvdCBndXkgZnJvbSBKdXN0aWNlIExlYWd1ZSBJIGRpZG4gcmVhbGx5IGtub3cuSmVua2luc2QwOCAgMTMgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ29JdCBhIGdyZWF0IGZlZWxpbmcgZm9yIHN1cmUuIFNvbWUgb2Ygb3VyIGltcHJvdmVkIHBsYXkgKGxpa2UgUmVnZ2llIGhlYWx0aCBhbmQgR2FsbG93YXkgaW1wcm92ZWQgc2hvb3RpbmcpIGZlZWxzIGxpa2UgaXQgb24gc2hha3kgZ3JvdW5kOyBidXQgb3RoZXIgcGFydHMgbGlrZSBUaG9uIGVmZmljYWN5IGZyb20gZGVlcCwgTHVrZSBtb3JlIGFzc2VydGl2ZSBwbGF5LCBhbmQgQnJvd24gaW1wcm92ZWQgdmlzaW9uIGFuZCBwbGF5bWFraW5nIGFyZSBqdXN0IHB1cmUgam95IHRvIHNlZS4gSSByZWFsbHkgc3VycHJpc2VkIHRoYXQgdGhlIEZPIHRyYWRlZCBhd2F5IHR3byBleHBpcmluZ3MgIG9uZSBhIHN0YXJ0ZXIgYW5kIG91ciBtYWluIHNvdXJjZSBvZiBzaG9vdGluZywgYW5kIHRoZSBvdGhlciBvdXIgbWFpbiBkZWZlbnNpdmUgc3RvcHBlciAgYW5kIHdlIG5vdCBvbmx5IGF2b2lkZWQgZmFsbGluZyBvZmYgdGhlIG1hcCBidXQgZXZlbiBhcHBlYXIgdG8gYmUgbWFraW5nIHNvbWUgc3RyaWRlcyBmb3J3YXJkIGRlc3BpdGUgdGhlIHR1cm5vdmVyLlRoaXMgaXMgdGhlIGtpbmQgb2Ygc3VycHJpc2luZyBpbXByb3ZlbWVudCBhbmQgY29oZXNpb24geW91IGhvcGUgdG8gc2VlIHdpdGggQ2FzZXkgZW1waGFzaXMgb24gaW5zdGVhZCBvZiBwbGF5Y2FsbGluZy4gCkl0IGh1cnRzIHNvIGJhZCBpbiBhbGwgdGhlIHdyb25nIHdheXMuIE15IGd1aWxkIGRlY2lkZWQgdG8gc3RhcnQgZG9pbmcgbXl0aGljIChmb3IgdGhlIGZpcnN0IHRpbWUpIGluIFVsZGlyLiBXZSBvbmx5IGRvIDIgbmlnaHRzIGVhY2ggd2VlayBhbmQgYXJlIHVzdWFsbHkgcHJldHR5IGNoaWxsIGNydWlzaW5nIHRocm91Z2ggaGVyb2ljLiAKQmV0dGVyIGF0IGJlaW5nIHJlc3BvbnNpYmxlIGFuZCBtYW5hZ2luZyB5b3VyIHRpbWUuLiAKV2VsbCBhY3R1YWxseSBuby4gU2hhYXRuZXogeWFybiBleGlzdHMgYnV0IGl0IG5vdCBoYXJkIHRvIGF2b2lkLiBGaWJlciBibGVuZHMgYXJlIG9ubHkgcHJvYmxlbWF0aWMgaWYgdGhleSBjb250YWluIHNoZWVwIHdvb2wgQU5EIGxpbmVuL2ZsYXguIFdvb2wvYWNyeWxpYyBvciBjb3R0b24vbnlsb24gb3IgY290dG9uL2xpbmVuIG9yIHdoYXRldmVyIGlzIHRvdGFsbHkgZmluZS4gSSBzdGFuZCBjb3JyZWN0ZWQsIHRob3VnaC4gVGhpcyBuZXcgaW5mb3JtYXRpb24gd2lsbCBhbHNvIG1ha2UgdGhpbmdzIG11Y2ggZWFzaWVyLiBTbyB0aGFuayB5b3UhIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpBIHBybyB1c3VhbGx5IGNvbnNpZGVycyBoaXMgbW92ZSwgZGVsYXlpbmcgdGhlIGFjdGlvbi4gSXQgdGFrZXMgdGltZSBmb3IgcGxheWVycyBvbiBldmVyeSBsZXZlbCB0byBjYWxjdWxhdGUgdGhlIHN0cmF0ZWd5IHdpdGggYSBwb3NzaWJsZSB3aW5uaW5nIGhhbmQuIApQaDRtcDU3M3IgIDMyIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkl0J3MgYSBtdWNoIG5lZWRlZCBicmVhayBhcyBQYWNxdWlhbyBodXJyaWVkIGJhY2sgdG8gdGhlIFBoaWxpcHBpbmVzIGFmdGVyIGhpcyBmaWdodCBhbmQgcG9zdHBvbmVkIGhpcyBob2xpZGF5LiAKVGhleSBkb24gd2FudCB0byBkbyBiYWQgdGhpbmdzIHN1Y2ggdGhhdCB0aGV5IGV4cGVuZCBleHRyYSByZXNvdXJjZXMgdG8gZG8gc28uIFRoZXkgc2ltcGx5IGRvbiBjYXJlIGFib3V0IHdoYXQgZG9lc24gYWZmZWN0IHRoZW0uIApSZWFsbHkgYmVjYW1lIGEgRHdheW5lIFdhZGUgZmFuIHRoYXQgbmlnaHQgdG9vLiAKIEhhdmUgbGVhcm50IHRoZSBiYXNpY3Mgb2YgWiAgIHRyYW5zZm9ybSBpbiBpdHMgYXBwbGljYWJpbGl0eSB0byBkaXNjcmV0ZWx5IHZhcnlpbmcgZnVuY3Rpb25zLCBnYWluZWQgdGhlIHNraWxsIHRvIGZvcm11bGF0ZSBjZXJ0YWluIHByb2JsZW1zIGluIHRlcm1zIG9mIGRpZmZlcmVuY2UgZXF1YXRpb25zIGFuZCBzb2x2ZSB0aGVtIHVzaW5nIHRoZSBaICAgdHJhbnNmb3JtIHRlY2huaXF1ZSBicmluZ2luZyBvdXQgdGhlIGVsZWdhbmNlIG9mIHRoZSBwcm9jZWR1cmUgaW52b2x2ZWQuIApUaGUgdGFzdGUgbWFwIG9mIHRoZSB0b25ndWUgdGhpbmcsIHRoZSBpZGVhIHRoYXQgY2Fycm90cyBhcmUgZ29vZCBmb3IgdGhlIGV5ZXMgc3BlY2lmaWNhbGx5LCBldGMuIApUZWlsZW4gc3RhdHQgYmVzaXR6ZW4iIGlzdCB1bnNlciBNb3R0by4uIApIYXBweSBiaXJ0aGRheSEgTXkgYmFieSB3aWxsIGJlIDQgb24gdGhlIDh0aCBvZiBEZWNlbWJlci4gTXkgb2xkZXN0IGJpcnRoZGF5IGlzIGEgbW9udGggYmVmb3JlLiBCZWNhdXNlIG9mIHRoaXMgdGhleSBzaGFyZSBhIHBhcnR5LiBXZSBtYWtlIGEgc3BlY2lhbCBkaW5uZXIgb2YgdGhlcmUgY2hvaWNlIG9uIHRoZXJlIGFjdHVhbCBiaXJ0aGRheS4gVGhpcyB5ZWFyIG15IGRhdWdodGVyIHdhbnRzIGhlciBmYXZvcml0ZSB3aGljaCBpcyBwYW5jYWtlcy4gVGhpcyB5ZWFyIHdlIGFsbW9zdCBkaWRudCBoYXZlIGEgcGFydHkgYmVjYXVzZSBvZiBmaW5hbmNpYWwgcmVhc29ucyBidXQgbXkgbWlsIGdvdCB0aGVtIGEgY2FrZSBhbmQgdGhyZXcgYSBzbWFsbCBwYXJ0eS4KUGxlYXNlIG5vdGlmeSB1cyBieSBGcmlkYXkgRmVicnVhcnkgMjJuZCwgMjAxOSBhdCB0aGUgZW5kIG9mIHRoZSBidXNpbmVzcyBkYXkgYnkgNTowMHBtIHRvIGFjY2VwdCB0aGUgY2hhbGxlbmdlLiBCb3RoIHBhcnRpZXMgd2lsbCBwdXQgJDIwayBlYWNoIGluIGVzY3Jvdy4gSWYgYm90aCBwYXJ0aWVzIG1vdmUgZm9yd2FyZCB3aXRoIHRoZSBjb250cmFjdCBhbmQgb25lIHBhcnR5IGRlY2xpbmVzIGFmdGVyIGFjY2VwdGluZyB0aGUgY2hhbGxlbmdlLCB0aGVuIHRoYXQgcGFydHkgd2lsbCBiZSBsaWFibGUgZm9yICQyMGsuIFRoZSBkZWFkbGluZSB0byBhY2NlcHQgdGhlIGNoYWxsZW5nZSBpcyBGcmlkYXksIEZlYnJ1YXJ5IDIybmQgYnkgNTowMHBtIGFuZCBubyBleHRlbnNpb25zIHdpbGwgYmUgZ2l2ZW4gYWZ0ZXIgdGhhdC4gV2UgYXJlIHdpbGxpbmcgdG8gZmx5IHRoZSBib3VuY2VyIGFuZCBoaXMgdHJhaW5lciBmcmVlIG9mIGNoYXJnZSB0byB0aGUgYXJlbmEgaW4gUG9ydGxhbmQsIE9yZWdvbi4KQXQgbm9vbiB0aGV5IHdpbGwgYmUgZ3Vlc3RzIGZvciBkaW5uZXIgYXQgdGhlIGNvdW5meSBob21lIGFuZCB3aWxsIGF0dGVuZCB0aGUgY29ybmVyc3RvbmUgbGF5aW5nIGFmdGVyd2FyZC4gVGhlIG5ldyBidWlsZGluZyByZXBsYWNlcyB0d28gb2xkIHN0cnVjdHVyZXMsIG9uZSBidWlsdCBpbiAxODU1IHRoZSBvdGhlciBpbiAxODcyLiAKSGUgaXMgbG9va2luZyBmb3Igd2lkZSBzaG91bGRlcnMgYW5kIGhlYXJ0IG9yIGNvbmUgc2hhcGVkIGJvZGllcywgdGhpbiB0YWlscyBhbmQgZmxhdCBiYWNrcy4gQWxsIG9mIHRoZXNlIHF1YWxpdGllcyB3aWxsIHB1dCBhIHByaXplIGJpcmQgYXQgdGhlIGZyb250IG9mIHRoZSBwYWNrLiBBIGNoYW1waW9uIGV4aGliaXRvciBoaW1zZWxmLCBTaWQgaGFzIHF1aXRlIHRoZSBuYW1lIGluIGNob29rIGp1ZGdpbmcgY2lyY2xlcy4gCldoZXJlIGVsc2UgYXJlIHlvdSBnb2luZyB0byBwdXQgaXQgICB0aGUgbGl2aW5nIHJvb20/IFRoZSBtYXN0ZXIgYmVkcm9vbT8gV2UgdGhpbmsgbm90LiBUaGUgbWFuIGNhdmUgaXMgeW91ciBjaGFuY2UgdG8gcmVzY3VlIHlvdXIgcG9zdGVycywgamVyc2V5cyBhbmQgc3BvcnRzIGVxdWlwbWVudCBmcm9tIHN0b3JhZ2UgYW5kIHB1dCB0aGVtIHdoZXJlIHRoZXkgYmVsb25nLCBvbiBwcm9taW5lbnQgZGlzcGxheS4gCkJhc2ljYWxseSwgYW55dGhpbmcgd2hpY2ggaXMgc2FpZCB3aXRob3V0IG1hbGljZSwgYnV0IHJhcGlkbHkgZGV0ZXJpb3JhdGVzIGludG8gd2hhdCB0aGUgcmVjZXBpZW50IHRoaW5rcyBpcyBhIHBlcnNvbmFsIGF0dGFjayBhcyB0aGUgZ2l2ZXIgdHJpZXMgYW5kIGZhaWxzIHRvIGRpZyB0aGVtc2VsdmVzIG91dC4gSXQncyBkaWZmZXJlbnQgdG8gdGFjdGxlc3NuZXNzITJUaGVyZSBpcyBubyBzb3VuZCBxdWl0ZSBhcyBrbmVlIHRyZW1ibGluZyBhcyBhIGhlYWx0aHksIGNhcmIgZmVkIFJvdmVyIFY4LiAKSXMgbm90ICJnb29kIiBhbmQgZnVja2luZyBhcm91bmQgaXMgbm90ICJiYWQuIiBhcm91bmQgaXJyZXNwb25zaWJseSwgd2l0aG91dCBldGhpY3MgYW5kIHdpdGhvdXQgc2FmZXIgc2V4LCBpcyBiYWQgIHdoZXRoZXIgeW91IG1hcnJpZWQgb3Igbm90LiBQZW9wbGUgZG8gaGF2ZSBzZXggb3V0c2lkZSB0aGVpciBtYXJyaWFnZXMganVzdCBsaWtlIHRlZW5zIHdobyB0YWtlIHZpcmdpbml0eSBwbGVkZ2VzIGhhdmUgcHJlbWFyaXRhbCBzZXgganVzdCBhcyBvZnRlbiBhcyB0ZWVucyB3aG8gZG9uIHRha2Ugc3VjaCBhIHBsZWRnZS4uIApQZW9wbGUgZ2FpbiBsaXR0bGUgZnJvbSBMb3lhbHR5IGluIFdlc3Rlcm9zLCBhbnl3YXkuIEluIG9yZGVyIHRvIHJldGFpbiBwb3dlciwgYXNzdW1pbmcgTWFyZ2Flcnkgd291bGQgYmUgdGhlIG9uZSB3aXRoIHByaW1hcnkgcG93ZXIsIHNoZSB3b3VsZCBvcGVyYXRlIGluIGEgd2F5IHRvIGhhdmUgcGVvcGxlIGxvdmUgaGVyLCBpbiBhIHZlcnkgTWFjaGlhdmVsbGlhbiBzb3J0IG9mIHdheShiYXNpbmcgdGhpcyBvZmYgb2YgaGVyIGludGVyYWN0aW9ucyB3aXRoIEpvZmZyZXkgYW5kIHRoZSAiaWYgeW91IGdpdmUgdGhlbSB5b3VyIGxvdmUsIHRoZXkgcmV0dXJuIGl0IGEgdGhvdXNhbmRmb2xkIiBjb21tZW50IGFuZCB0aGUgc2NlbmUgd2l0aCB0aGUgY2hpbGRyZW4pLiAKWWVzLCBoaXMgZmFtaWx5IHN1Y2tzLiBBIHdob2xlLCB3aG9sZSBsb3QuIEFuZCBpdCBtZWFuLCBuYXN0eSBhbmQgZXZlbiBydWRlIG5vdCB0byBhdCBsZWFzdCBnaXZlIHlvdXIgYnJvdGhlciBhbmQgaGlzIGZpYW5jZWUgeW91ciBjb25ncmF0dWxhdGlvbnMuIEZGUywgZG8gaXQgb24gRkIsIHNvIHRoYXQgeW91IGNhbiBzb3VuZCBzaW5jZXJlIHdpdGhvdXQgaGF2aW5nIHRvIGRvIGl0IHdpdGggdG9uZSBvZiB2b2ljZS4KQXQgQmFiZWxhbmQsIHRoZSBiZXN0IHNlbGwgaXMgdGhlIEdpIEdpLCBhIHZpYnJhdG9yIG1lYW50IHRvIGhpdCBhIHdvbWFuIEcgc3BvdCBhbmQgd2l0aCBhIHNwbGFzaCBwcm9vZiBzaGVsbCBmb3IgInRvdGFsIHJlbGVhc2UiIChhbmQgaXQgY29tZXMgaW4gc3VwZXIgbmljZSBjb2xvcnMgdG9vKS4gQWx0aG91Z2ggdGhpcyBvbmUgaXMgcHJvYmFibHkganVzdCAiZm9yIHRoZSBnaXJscywiIGNvdXBsZXMgYXJlIGFwcGFyZW50bHkgInNhdmluZyBtb25leSIgKHdpbmssIHdpbmspIHRvby4gVGhlIHNlY29uZCBtb3N0IHBvcHVsYXIgdG95IGlzLiAKSSB1c2VkIHRvIHBsYXkgdXAgdG8gNjAwTkwgYmFjayBpbiB0aGUgZGF5IG9ubGluZSB3aGVuIHRoYXQgd2FzIGFyb3VuZCB0aGUgc2tpbGwgZXF1aXZhbGVudCB0byAyNSA1ME5MIHRoZXNlIGRheXMuIApJbiBVdGFoLCBzb21lIG9mIHRoZW0gd2lsbCBhbHNvIGdvIHRvIGphaWwuLiAKVW5mb3J0dW5hdGVseSwgaXQgbm9ybWFsbHkgYSBzZWxmIHJlaW5mb3JjaW5nIGNpcmNsZSBvZiBib3RoLiAKSSBzdHJvbmdseSBiZWxpZXZlIHRoaXMgaXMgZGVmaW5pdGVseSBub3QgaHVtYW4gbWFkZSwgdGhlIHN0cmFuZ2UgdGhpbmcgYWJvdXQgaXQsIGlzIHRoYXQgaXQgbWFkZSBubyBzb3VuZC4gClRoZSA2NiB5ZWFyIG9sZCBvZmZpY2UgaXMgZGVjb3JhdGVkIHdpdGggdHdvIHBvcnRyYWl0cyBvZiBoaW1zZWxmLiBPbmUgaXMgYSBjYXJ0b29uIG9mIExleW9uaGplbG0gZHJlc3NlZCBpbiBhcm15IGdyZWVuLCBob2xkaW5nIGEgZ3VuLCBhIG1hcmlqdWFuYSBwbGFudCBhbmQgYW4gYW1tdW5pdGlvbiBiZWx0IGZpbGxlZCB3aXRoIHN5cmluZ2VzLiAKVGhhdCB3YXMgbmluZSB5ZWFycyBhZ28uIEluaXRpYWxseSwgTHV0aGVyIHNheXMsIGhlciBwYXJlbnRzIHdlcmUgc2NhbmRhbGlzZWQuIHNhaWQgd2hhdCB3cm9uZyB3aXRoIHlvdSBhcmUgeW91IHBsYXlpbmcgY2FyZHMgcHJvZmVzc2lvbmFsbHk/IEJ1dCBzbG93bHksIEkgZXhwbGFpbmVkIHRvIHRoZW0gdGhlIG51YW5jZXMgb2YgdGhlIGdhbWUsIGhvdyBpdCBhY3R1YWxseSBhIGdhbWUgb2YgaW50ZWxsZWN0LiBNeSBwYXJlbnRzIGdvdCBpbnRlcmVzdGVkIGFuZCBpbiB0aGUgcGFzdCB0d28geWVhcnMsIHRoZXkgc2VlbiBtZSBhY2NvbXBsaXNoIHNvIG11Y2gsIHNoZSBzYXlzLCBhZGRpbmcgSSB3YXMgMTcgeWVhcnMgb2xkLCBJIGhhdmUgbm90IGVhcm5lZCBteSBvd24gbW9uZXkuIEkgYW0gdmVyeSBwcm91ZCBvZiB0aGF0LiBMdXRoZXIgaGFzIGEgQkNvbSBkZWdyZWUgZnJvbSBEZWxoaSBVbml2ZXJzaXR5LgpIb3cgZXhhY3RseSB3b3VsZCB5b3UgZ28gYWJvdXQgZGlzY292ZXJpbmcgdGhpcz8uIApUaGFua3MuIFdlIGdyZXcgdXAgaW4gdGhlIHNhbWUgaG91c2UuIApXaGVyZSBDYW4gSSBMZWFybiBNb3JlP1RoZSBIaXN0b3JpYyBFbmdsYW5kIFdlYnNpdGUgY29udGFpbnMgYSB3ZWFsdGggb2YgaW5mb3JtYXRpb24gYWJvdXQgTGlzdGVkIHNpdGVzIGFuZCBob3cgdG8gYWRkIHRvIFRoZSBMaXN0LiBJdCBhbHNvIGNvbnRhaW5zIFRoZSBMaXN0IGl0c2VsZiwgd2hpY2ggY2FuIGJlIHNlYXJjaGVkIGluIGEgdmFyaWV0eSBvZiB3YXlzLCBzdWNoIGFzIGJ5IG5hbWUsIHR5cGUsIGxvY2F0aW9uLCBhbmQgZGF0ZSBvZiBsaXN0aW5nLiAKVGhlIG9uc2V0IG9mIHRoZSBlZmZlY3Qgb2YgcnVubmluZyBvbiBjZWxsIGdlbmVzaXMgaXMgcmFwaWQuIApQcmltYXJ5IGhlYWRhY2hlcyBjYW4gYWxzbyBiZSBjYXVzZWQgYnkgdG9vIG11Y2ggYmxvb2QgZmxvdy4gRm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIHJlYWQgSG93IENhZmZlaW5lIFdvcmtzLCB5b3Uga25vdyB0aGF0IGNhZmZlaW5lIHJlZHVjZXMgYmxvb2QgZmxvdyBpbiB0aGUgYnJhaW4uIFNvbWUgcGFpbiByZWxpZXZlcnMgY29udGFpbiBjYWZmZWluZSB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGlzIGVmZmVjdC4gCkkgY29uY2VybmVkIGFib3V0IHlvdXIgImplcmsiIGNvbW1lbnQuIEl0IG5vdCB5b3VyIHNoYW1lIHRoYXQgdGhpcyBpcyBhIHByb2NlZHVyZSB3aXRoIGEgamFja2VkIHVwIHByaWNlIEFORCB1bmNsZWFyIGJpbGxpbmcgLyByZWltYnVyc2VtZW50LiBUaGUgc2hhbWUgYmVsb25ncyBjb21wbGV0ZWx5IHRvIHRoZSBjb21wYW5pZXMgYW5kIHRoZSBzeXN0ZW0gdGhhdCBtYWtlcyBwYXRpZW50cyBzdHJ1Z2dsZSBsaWtlIHRoaXMgICBmZWVsIGZyZWUgdG8gZ2V0IGZydXN0cmF0ZWQgYW5kIG1ha2UgdGhlbSBleHBsYWluIHRoZW1zZWx2ZXMuLiAKSSBoYXZlIGEgYnVzaW5lc3MgdG8gcnVuLi4gCkJyb25uIGlzIGEgUm90dHdlaWxlciBtaXguIEhlIDIgeWVhcnMgb2xkIGluIEFwcmlsIGkgdGhpbmsuIEhlcyBhIGRpY2shIExvbC4gCkluIGFsbCBsaWtlbGlob29kLCBmaXhlZCBhbmQgdmFyaWFibGUgTyBjb3N0cyBhbHNvIGdvIHVwIHNpZ25pZmljYW50bHkgYXMgY2FwYWNpdHkgZmFjdG9yIGRlY3JlYXNlcywgYWxiZWl0IG5vdCBsaW5lYXJseS4gCkkgZm9yZ2V0IHdoYXQgdGhlIHRlcm0gaXMsIGJ1dCBpdCBhIG11Y2ggbG93ZXIgYnVyZGVuIG9mIHByb29mLiBFdmVuIGdldHRpbmcgZnJpZW5kcyB0byBzaWduIHdyaXR0ZW4gc3RhdGVtZW50cyBzYXlpbmcgdGhhdCB0aGUgcGVyc29uIG1hZGUgaXQgdXAgY291bGQgZG8gaXQuIApSZWFkICJBcHBsaWNhdGlvbnMgb2YgTkwgSG9sZCBieSBNYXR0aGV3IEphbmRhLiBJdCBpbGx1c3RyYXRlcyBob3cgdG8gY2FsY3VsYXRlIHRoaXMgY29uc3RydWN0aW5nIHJhbmdlcy4gUmVtZW1iZXIsIHBva2VyIGhlYWRzIHVwIGlzIGEgemVybyBzdW0gZ2FtZSBhbmQgaGFzICJlc3NlbnRpYWxseSIgYmVlbiBzb2x2ZWQgYnkgbWF0aCBhdCB0aGlzIHBvaW50LiAKQnR3IGltIHZlcnkgc29ycnkgaWYgeW91IGRvIGhhdmUgdGhlIG1hYyB2ZXJzaW9uIGFuZCBpbSBiZWluZyBtZWFuIGZvciBub3RoaW5nLiAKQmFzaWNhbGx5LCBpZiB5b3UgdGhpbmsgaXQgUGlzY2VzLCB5b3UgbmVlZCB0byBleHBsYWluIHdoeSBpdCBiZWVuIGFsbCBidXQgY29uZmlybWVkIHdpdGhvdXQgKGNydWNpYWxseSkgYWN0dWFsbHkgYmVpbmcgY29uZmlybWVkLgo0LiBGb3VydGgsIHdlIG11c3QgZmlndXJlIG91dCBhIHdheSB0byBnZXQgc2luZ2xlIHBheWVyIGhlYWx0aGNhcmUuIApBIGhpZ2ggc3Rha2VzIGdhbWJsZXIgd2hvIHJhaW5lZCBkb3duIGEgaGFpbCBvZiBndW5maXJlLCBraWxsaW5nIDU4IHBlb3BsZSBmcm9tIGhpcyBoaWdoIHJpc2UgY2FzaW5vIHN1aXRlIGluIExhcyBWZWdhcyB3YW50ZWQgaW5mYW15IGFuZCBtYXNzIGRlc3RydWN0aW9uLCB0aGUgRkJJIHNhaWQgVHVlc2RheSwgYnV0IHRvb2sgd2hhdGV2ZXIgbW90aXZlIG1pZ2h0IHN0cmV0Y2ggYmV5b25kIHRoYXQgdG8gaGlzIGdyYXZlLiAiSXQgd2Fzbid0IGFib3V0IE1HTSwgTWFuZGFsYXkgQmF5IG9yIGEgc3BlY2lmaWMgY2FzaW5vIG9yIHZlbnVlLCAiIHNhaWQgQWFyb24gUm91c2UsIHRoZSBzcGVjaWFsIGFnZW50IGluIGNoYXJnZSBvZiB0aGUgRkJJJ3MgTGFzIFZlZ2FzIG9mZmljZS4gIkl0IHdhcyBhbGwgYWJvdXQgZG9pbmcgdGhlIG1heGltdW0gYW1vdW50IG9mIGRhbWFnZSBhbmQgaGltIG9idGFpbmluZyBzb21lIGZvcm0gb2YgaW5mYW15LiAiSG93ZXZlciwgRkJJIGFnZW50cyBhbmQgYmVoYXZpb3JhbCBzcGVjaWFsaXN0cyBiZWxpZXZlIFBhZGRvY2sgd2FzIGluIHBhcnQgaW5mbHVlbmNlZCBieSB0aGUgbWVtb3J5IG9mIGhpcyBmYXRoZXIsIGEgYmFuayByb2JiZXIgYW5kIGZ1Z2l0aXZlIHdobyBhdCBvbmUgcG9pbnQgd2FzIG9uIHRoZSBGQkkncyBtb3N0IHdhbnRlZCBsaXN0LiBSb3VzZSBzYWlkIFN0ZXBoZW4gUGFkZG9jaywgNjQsIGFjdGVkIGFsb25lIHdoZW4gaGUgcGxhbm5lZCBhbmQgY2FycmllZCBvdXQgdGhlIGF0dGFjay4gUGFkZG9jayBmYXRhbGx5IHNob3QgaGltc2VsZiBhZnRlciBvcGVuaW5nIGZpcmUgZnJvbSBoaXMgaG90ZWwgc3VpdGUuIE1hbmRhbGF5IEJheSBlbXBsb3llZXMgcmVhZGlseSBsZXQgaGltIHVzZSBhIHNlcnZpY2UgZWxldmF0b3IgdG8gdGFrZSBtdWx0aXBsZSBzdWl0Y2FzZXMgdG8gdGhlICQ1OTAgcGVyIG5pZ2h0IHN1aXRlIGhlIGhhZCBiZWVuIHByb3ZpZGVkIGZvciBmcmVlLiBNb3N0IG9mIHRoZSByaWZsZXMgd2VyZSBmaXR0ZWQgd2l0aCByYXBpZCBmaXJlICJidW1wIHN0b2NrICIgZGV2aWNlcyBhbmQgaGlnaCBjYXBhY2l0eSBtYWdhemluZXMuIFNvbWUgaGFkIGJpcG9kIGJyYWNlcyBhbmQgc2NvcGVzLiAiVGhlIHBsYW5uaW5nIGFuZCBwcmVwYXJhdGlvbiAiIGluIGFuZCBvZiBpdHNlbGYgIiB3YXMgbGlrZWx5IHNhdGlzZnlpbmcgdG8gUGFkZG9jayBhcyBpdCBwcm92aWRlZCBhIHNlbnNlIG9mIGRpcmVjdGlvbiBhbmQgY29udHJvbCBkZXNwaXRlIGhpcyBtZW50YWwgYW5kIHBoeXNpY2FsIGRlY2xpbmUuICJJdCB3YXMgYWxsIGFib3V0IGRvaW5nIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBkYW1hZ2UgYW5kIGhpbSBvYnRhaW5pbmcgc29tZSBmb3JtIG9mIGluZmFteS4iCkl0IGFsbCBhY2h5IGFuZCB0aWdodCwgYW5kIG5vIGFtb3VudCBvZiBoZWF0L21hc3NhZ2UgaXMgaGVscGluZy4gTXkgaHVzYmFuZCBzd2VhcnMgaXQgZnJvbSBydW5uaW5nIGluIHRoZSBjb2xkIGFuZCBub3Qgd2FybWluZyB1cCBzdWZmaWNpZW50bHksIGJ1dCBpdCBub3QgbGlrZSB0aGF0IHdhcyB0aGUgZmlyc3QgdGltZSB0aGlzIHllYXIgSSBydW4gaW4gY29sZCB3ZWF0aGVyLCBhbmQgSSBkaWRuIGRvIGFueXRoaW5nIGRpZmZlcmVudGx5LiAKQmlibGljYWwgTWVhbmluZ3MgQWNjb3JkaW5nIHRvIHRoZSBCaWJsZVRyYWNrIHdlYnNpdGUsIG5vIGRpc3RpbmN0aW9uIGJldHdlZW4gdGhlIHRlcm1zIHBhc3RvciwgYmlzaG9wIG9yIGVsZGVyIGV4aXN0cyBpbiB0aGUgU2NyaXB0dXJlcyAgIGFsbCByZWZlciB0byBsZWFkZXJzIGFuZCBkZWNpc2lvbiBtYWtlcnMgd2hvIGFyZSBsZWQgYnkgR29kIHRvIG92ZXJzZWUgYSBsb2NhbCBjaHVyY2ggY29uZ3JlZ2F0aW9uLiBUaGUgYm9vayAiV2hhdCBQZW9wbGUgQXNrIEFib3V0IFRoZSBDaHVyY2gsIiBieSBEYWxlIEEuIFJvYmJpbnMsIHNheXMgdGhhdCBwYXN0b3Igb3IgYmlzaG9wIHVzdWFsbHkgcmVmZXJzIHRvIHRoZSBvZmZpY2UgaGVsZCwgYW5kIGVsZGVyIHVzdWFsbHkgcmVmZXJzIHRvIHRoZSBwZXJzb24uIApCZXlvbmNlLCB3aG8gaW4gMjAwNCB3b24gZml2ZSBHcmFtbXlzIG9uIHRoZSBzdHJlbmd0aCBvZiBoZXIgZGVidXQgYWxidW0gIkRhbmdlcm91c2x5IGluIExvdmUsIiBhIG1hcmsgdGllZCBieSB0aGUgbGlrZXMgb2YgQWxpY2lhIEtleXMsIE5vcmFoIEpvbmVzIGFuZCBMYXVyeW4gSGlsbCwgQW15IFdpbmVob3VzZSBhbmQgQWxpc29uIEtyYXVzcywgcmVhY2hlZCB0aGF0IG1pbGVzdG9uZSBhZ2FpbiBTdW5kYXkgZW4gcm91dGUgdG8gdGhlIG5ldyByZWNvcmQuIFNoZSBpcyB0aGUgZmlyc3QgdG8gcmVhY2ggdGhhdCBtYXJrIHR3aWNlLiBTYXNoYSBGaWVyY2UuIi4gCkQuIApBcyBhbiBhdGhsZXRlIG9yIHRyYWluZWUsIHlvdSB1bmRvdWJ0ZWRseSBoYXZlIGV4cGVyaWVuY2Ugd2l0aCBpbmZsYW1tYXRpb24gZnJvbSB0cmFpbmluZyBhbmQgaW5qdXJpZXMgYW5kIHlvdSBrbm93IGl0J3Mgc29tZXRoaW5nIHlvdSB3YW50IHRvIGRpbWluaXNoIGZvciBoZWFsaW5nLiAKVGhlIGxvd2x5IHN0cmVldCB1cmNoaW4gd2hvIG1ha2VzIGl0IGJpZyBpbiBhIHdvcmxkIGhlIG1heSBuZXZlciBldmVuIGhhdmUgZHJlYW1lZCBvZiBhcyBhIGNoaWxkLiBJdCBpcyBhIHdlbGwga25vd24gZmFjdCB0aGF0IGEgZGlzcHJvcG9ydGlvbmF0ZSBudW1iZXIgb2Ygc2VsZiBtYWRlIHN1Y2Nlc3Mgc3RvcmllcyBmaW5kIHRoZWlyIHJvb3RzIGluIGRlcHJpdmVkIGJhY2tncm91bmRzLiAKSmF5IEhlYXBzIGRlYWx0IHdlbGwgd2l0aCBWYW5jb3V2ZXIncyBzdWJzdGl0dXRpb25zICBWYW5jb3V2ZXIgY29hY2ggQ2FybCBSb2JpbnNvbiBoYWQgcGxlbnR5IG9mIHdlYXBvbnMgb24gdGhlIGJlbmNoIHRvIHRocm93IGF0IHRoZSBSZXZvbHV0aW9uLiAKR3V5IHRvbGQgbWUgdGhleSBoYWQgYmVlbiBwcmF5aW5nIHRoYXQgbW9ybmluZyBmb3Igc29tZXRoaW5nIGxpa2UgdGhpcy4gCk5ld3NQbGF5aW5nIFNvbWUgU3R1cGlkIFNob3RzLCBQIEthc2h5YXAgdG8gV2lmZSBTYWluYSBOZWh3YWwgRHVyaW5nIEFsbCBFbmdsYW5kIENoYW1waW9uc2hpcHMgMjAxOSBNYXRjaEthc2h5YXAgcmVwcmltYW5kIGRpZCB3b3JrIGZvciBTYWluYSBzb21ld2hhdCBhcyBoZSBtYW5hZ2VkIHRvIHJlZHVjZWQgdGhlIGdhcCB0byAxMiAxNCBhZnRlciB0aGUgYnJlYWsuIEl0IHdhcyB0aGUgYmFuZ2xlcyB0aGF0IHRoZSBhY3RyZXNzIHdvcmUgd2hpY2ggbWFkZSBjdXRzIG9uIHRoZWlyIChib3RoIGFjdG9ycykgaGFuZHMuIE5vdywgYSByZWNlbnQgYWRkaXRpb24gdG8gdGhlc2Ugc2hlbmFuaWdhbnMgaXMgb2YgU29uYW0gS2Fwb29yIGFuZCBTaHdldGEgQmFjaGNoYW4gTmFuZGEncyBkYXVnaHRlciBOYXZ5YSBOYXZlbGkuLiAKVG8gZGVsZXRlIGEgZG9jdW1lbnQgZnJvbSB0aGUgS2luZGxlMjogMS4gV2hpbGUgb24geW91ciBob21lIHBhZ2UsIGdvIHRvIHRoZSBkb2N1bWVudCB5b3Ugd2FudCB0byBkZWxldGUsIHVzaW5nIHlvdXIgNSB3YXkgY29udHJvbGxlci4gV2hlbiB5b3UncmUgdGhlcmUgKHRoZSBib29rIGlzIHVuZGVybGluZWQpLCBtb3ZlIHRoZSA1IHdheSBjb250cm9sbGVyIHRvIHRoZSBsZWZ0LiAKVGhpcyByZWFsbHkgaXNuIHVwIGZvciBkaXNjdXNzaW9uLgoiSSBrZXB0IGxvb2tpbmcgYXQgdGhlIHRpbWVyIGJlY2F1c2UgSSBkaWRuJ3Qgd2FudCB0byBoYXZlIHRoaXMgbWVudGFsIGltYWdlIG9mIHdoYXQgaGUgd2FzIGRvaW5nLCcnIHNoZSByZW1lbWJlcmVkIG9mIHRoZSBtYXNzYWdlLiAiSGUga2VwdCB0cnlpbmcgdG8gcHV0IGhpcyBmaW5nZXJzIGluc2lkZSBtZSBhbmQgdG9sZCBtZSB0byBwaW5jaCBoaXMgbmlwcGxlcy4gClZlcmF0aXNpbyB1CkNvdXBsZSB3aG8gYXJlIGxhbmRsb3JkcyB3aGlsZSByZW50aW5nIHRoZW1zZWx2ZXMgcmlzayB3cmVja2luZyB0aGVpciByZXRpcmVtZW50V2VhbHRoeSBvbiBwYXBlciwgY291cGxlIHdpdGggJDIuOSBtaWxsaW9uIGluIGFzc2V0cyBuZWVkcyB0byBzZWxsIGEgcHJvcGVydHkgdG8gZmluYW5jZSByZXRpcmVtZW50UHJvcGVydHkgZHJhZy4gCk1heWJlIHRoZSBzYW1lIHRoaW5nIHdvdWxkIGhhcHBlbiB0byBDYXB0YWluIE1hcnZlbCBpbiBFbmRnYW1lLi4gCldpdGggdGhlIGJldCBjYWxsZWQgYW5kIGNhcmRzIHJldmVhbGVkLCBKb2huIGlzIHN1ZGRlbmx5IGNoZWNraW5nIHRyYWluIHRpbWVzIGJhY2sgdG8gQnJpZGxpbmd0b24gYSBkYXkgZWFybGllciB0aGFuIGFudGljaXBhdGVkLi4gCkZlZWxzIGxpa2UgdGhlcmUgc3VwcG9zZWQgdG8gYmUgc29tZXRoaW5nIGluIGJldHdlZW4gQ2FwdGFpbiBNYXJ2ZWwgYW5kIHRoZSBldmVudHMgb2YgR29URzFFRElUOiB0byBjbGFyaWZ5IHNvbWUgdGhpbmc7IFRoZSBBY2N1c2VycyBpcyBsaWtlbHkganVzdCB0aGUgY2FsbCBzaWduIGZvciB0aGF0IGNsYXNzIG9mIGJvbWJlcnMgd2hpY2ggUm9uYW4gaXMgbGlrZWx5IHRoZSBoZWFkIGhvbmNobyBvZiB3aGljaCB3b3VsZCBleHBsYWluIHdoeSBoZSB0YWtlcyB0aGUgbmFtZS4gClRoZSBmaXJzdCBwbGF5ZXIgdXAgd2lsbCBjaG9vc2UgYSBwb2tlciBoYW5kIGZyb20gdGhlIGVpZ2h0IGNhcmRzOyB0aGUgaGFuZCBjYW4gdmFyeSBmcm9tIG9uZSB0byBmaXZlIGNhcmRzLiAKQXQgVUNMQSwgc2hlIGNyZWF0ZWQgbGVhZHMgMiBwcm9ncmFtczoKTWF5YmUgdG8gdGhlbSBpdCB3YXMgbGlrZSBoZWFyaW5nIEkgbGlrZSBibHVlIEFORCBncmVlbi4gV2hhdCBkbyB5b3UgZG8gd2l0aCB0aGF0IGluZm9ybWF0aW9uPyBhY2tub3dsZWRnZSBpdCBhbmQgbW92ZSBvbiBJIGd1ZXNzLi4gCkZpdmUgYWNlcyAodXNpbmcgdGhlIGpva2VyIGFzIHRoZSBmaWZ0aCBhY2UpLgpXZWl0ZXJoaW4gaXN0IGVzIGZyIGRpZSBWZXJ3aXJrbGljaHVuZyBkZXMgU3RyYWZ0YXRiZXN0YW5kZXMgdW5lcmhlYmxpY2gsIG9iIHRhdHNjaGxpY2ggYXVmIEdydW5kIGRlciB1bnJpY2h0aWdlbiBBbmdhYmVuIGVpbiBBdWZlbnRoYWx0c3RpdGVsIGVybGFuZ3Qgd3VyZGUgb2RlciBuaWNodC4uIApJZiB5b3UgZmluZCB5b3Vyc2VsZiBpbiB0aGUgcG9zaXRpb24gdGhhdCB5b3Ugd2FrZSB1cCB3aXRoIGEgc3RpZmYgbmVjaywgdGhlIHdvcnN0IHRoaW5nIHlvdSBjYW4gZG8gaXMgbm90IG1vdmUgaXQ7IGhvd2V2ZXIsIGl0IGlzIGVxdWFsbHkgYXMgYmFkIHRvIHRyeSBhbmQgamFtIHlvdXIgbmVjayBpbnRvIGNlcnRhaW4gcG9zaXRpb25zIHRoYXQgaXQgZG9lcyBub3Qgd2FudCB0byBnby4gCkhlIGlzIGEgZm9ybWVyIHJlcG9ydGVyIGZvciBNY0NsYXRjaHkgbmV3c3BhcGVycywgaW5jbHVkaW5nIHRoZSBGcmVzbm8gQmVlLCB3aGVyZSBoZSBjb3ZlcmVkIGJ1c2luZXNzIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBwb2xpdGljcywgYW5kIHRoZSBJc2xhbmQgUGFja2V0IGluIFNvdXRoIENhcm9saW5hLiAKQ2FtcHVzIGd1ZXN0cyB3aXRoIHNlcnZpY2UgYW5pbWFscyBhcmUgd2VsY29tZS4KQXMgYSByZXN1bHQsIGl0IGJlY2FtZSBtb3JlIG1hcmtldCBvcmllbnRlZCBhbmQgc3Ryb3ZlIHRvIG1lZXQgaW52ZXN0b3JzIG5lZWRzLCB0aHJvdWdoIG9mZmVyaW5nIGJldHRlciBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIHByb3RlY3Rpb24sIGxvd2VyIGNvcnBvcmF0ZSB0YXhlcywgZ3JlYXRlciBlYXNlIGluIG9idGFpbmluZyBwZXJtYW5lbnQgcmVzaWRlbnQgc3RhdHVzIGFuZCBtb3JlIGZsZXhpYmxlIGxhYm91ciBwb2xpY2llcy4gCk51cnNlcyByb2NrZWQgdGhlbSB3aGlsZSB0aGV5IGRpZCB0aGVpciBjaGFydHMuLiAK|<---