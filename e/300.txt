--->|RG9vYmVybWNmbG9vYmVyICAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvCkppbSBhbHNvIHNoYXJlcyBob3cgaGlzIGNoaWxkaG9vZCBzaGFwZWQgaGlzIHZpZXdzIGFib3V0IG1vbmV5LCBoaXMgZGlzY292ZXJ5IHRoYXQgaGlzIGRheSBqb2Igd2Fzbid0IGhpcyB0cnVlIGRlc3RpbnksIGFuZCBob3cgaGlzIGZydWdhbGl0eSBnYXZlIGhpbSBlbm91Z2ggY29uZmlkZW5jZSB0byB0YWtlIHRoZSBsZWFwIGludG8gZW50cmVwcmVuZXVyc2hpcC4gV2hldGhlciB5b3UncmUgbG9va2luZyB0byBnZXQgeW91ciBmaW5hbmNpYWwgaG91c2UgaW4gb3JkZXIsIGludmVzdCB0aGUgbW9uZXkgeW91IGFscmVhZHkgaGF2ZSBvciBkaXNjb3ZlcmluZyBuZXcgcGF0aHMgZm9yIHdlYWx0aCBjcmVhdGlvbiwgeW91J3JlIGluIHRoZSByaWdodCBwbGFjZS4gCktlYXRpbmcgYWxzbyBzaG93ZWQgR3JlZyBNb2l4IGhvdyB0byB1c2UgdGhlIHRvcCBvZiBoaXMgZmlzdCB0byBnZW50bHkgYXBwbHkgcHJlc3N1cmUgZG93biBoaXMgd2lmZSdzIGJhY2sgYW5kIGhvdyB0byB1c2UgaGlzIHRodW1icyB0byBwdXNoIHRoZSB0aXNzdWUgb24gZWl0aGVyIHNpZGUgb2YgaGlzIHdpZmUncyBzYWNydW0sIGEgbGFyZ2UgdHJpYW5ndWxhciBib25lIGF0IHRoZSBiYXNlIG9mIHRoZSBzcGluZS4KSSBndWVzcyBwZW9wbGUgamVyayBvZmYgaW4gdGhlcmUgYmVjYXVzZSBhIGdpcmwgYXNrZWQgaWYgSSB3YW50ZWQgdG8gYmVhdCBvZmYsIGFuZCBzaWduIHNheXMgeW91IHJlc3BvbnNpYmxlIHRvIGNsZWFuIHVwIHlvdXIgb3duIGppenouIFNleCwgb3JhbCBzZXgsIGdlbml0YWwgdG91Y2hpbmcgaXMgbm90IGF2YWlsYWJsZS4gClRoZSBob3RlbCBpcyBkb25lIHVwIGluIGluZHVzdHJpYWwgY2hpYywgd2l0aCBsb3RzIG9mIHdvb2QgYW5kIGV4cG9zZWQgY29uY3JldGUuIE15ICQxNzkgcm9vbSBoYWQgYnJhc3MgbGFtcHMgd2l0aCBvbGQgZmFzaGlvbmVkIEVkaXNvbiBidWxicywgZGFyayBjb2xvcnMsIGFuZCBmcmFtZWQgZGljdGlvbmFyeSBwYWdlcyBwcmludGVkIG92ZXIgd2l0aCB3aGltc2ljYWwgc2NlbmVzLCBzdWNoIGFzIGEgcGluayBlbGVwaGFudCByaWRpbmcgYSBiaWN5Y2xlLiBUaGVyZSBhIHJlYWwgYm9vayBmaXhlZCB0byB0aGUgd2FsbCBsaWtlIGEgcGllY2Ugb2YgYXJ0LCBvcGVuIHRvIHBhZ2VzIDEwOCAxMDkuIApJbiB0aGUgUGFjaWZpYyB0aGVhdGVyLCB0aGUgQmF0dGxlIG9mIE1pZHdheSBpbiAxOTQyIHByZXR0eSBtdWNoIGxvc3QgaXQgZm9yIHRoZSBKYXBhbmVzZSwgYXMgdGhleSBsb3N0IDQgaW1wb3J0YW50IGFpcmNyYWZ0IGNhcnJpZXIsIGFuZCBtYW55IGNydWlzZXIsIGRlc3Ryb3llcnMsIGFuZCBodW5kcmVkcyBvZiB3YXJwbGFuZXMuIFRoZXkgYWxzbyBsb3N0IHRoZWlyIGNvY2t5IGNvbmZpZGVuY2UgdGhlbi4gSXQgd2FzIGNsZWFyIHRvIHRoZSBBbGxpZXMgdGhhdCBzb21lb25lIGhhZCBiZWVuIG1ha2luZyBob3JyaWJsZSBtaWxpdGFyeSBkZWNpc2lvbnMgZm9yIEdlcm1hbnksIHJlc3VsdGluZyBpbiB0aGUgR2VybWFucyBiZWluZyB1bnByZXBhcmVkIGZvciB0aGF0IGludmFzaW9uLiBPbmNlIEdlbi4gUGF0dG9uIGdvdCBpbnRvIHRoZSBmcmF5IHdpdGggaGlzIDNyZCBBcm15LCBpdCB3YXMgY2xlYXIgdGhhdCB0aGUgQXhpcyBwb3dlcnMgZGF5cyB3ZXJlIGV2ZW4gbW9yZSBsaW1pdGVkIHRoYW4gaGFkIGJlZW4gdGhvdWdodC4gY2hvb3NlIEZPTEQgQU5EIFNLSVAsLiB0aGVuLC4gaW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gYmFjayBhdCB0aGUgbWFpbiBtZW51LiBjbGljayBUVVRPUklBTCwuIHRoZW4uIGNsaWNrIHRoZSB0b3B0dXRvcmlhbCBjYWxsZWQgdHV0b3JpYWwsLiBhbmQgd2hlbnRoZXkgYXJlLC4gaXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiBUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gYmFjayB0byB0aGUgbWFpbiBtZW51LC4gb25seSBub3cgYWxsIHRoZWlyIGNhcmRzYXJlIHNob3duLiBHb29kIGx1Y2sgaXQgd29ya3MgZm9yIG1lLiAoRnVsbCBBbnN3ZXIpClRoZSAzIHN0cnVnZ2xlcyB0byBnZXQgMzBtcGcgKHJlZ3VsYXIgZ2FzKSBkcml2aW5nIDgwbXBoLiAKQXQgbGVhc3QgSGFucyBBcnAgdGVsbHMgdGhpcyBhcyB0aGUgdHJ1ZSBzdG9yeSwgc2F5aW5nIHRvbyB0aGF0IGhlIHdhcyB0aGVyZSwgYWxvbmcgd2l0aCBoaXMgMTIgY2hpbGRyZW4gYW5kIGEgYnJpb2NoZSBpbiBoaXMgbGVmdCBub3N0cmlsLiBBbnl3YXkgdGhlIG5hbWluZyBkb2VzbiBzZWVtIHRvIG1hdHRlciB0ZXJyaWJseSBtdWNoIHRvIGEgZ3JvdXAgbGlrZSB0aGlzIHRoYXQgZGlzcG9zZWQgb2YgYW5kIHR3aXN0ZWQgbmFtZXMgcHJvcGVyIGFuZCBvdGhlcndpc2UuKUFuIGV4YW1wbGUgb2YgYSBEYWRhaXN0IHdvcmsgaXMgYXQgcmlnaHQsIGJ5IEhhbm5haCBIY2gsIEN1dCB3aXRoIHRoZSBEYWRhIEtpdGNoZW4gS25pZmUgdGhyb3VnaCB0aGUgTGFzdCBXZWltYXIgQmVlciBCZWxseSBDdWx0dXJhbCBFcG9jaCBpbiBHZXJtYW55LCAxOTE5KVRoZSBEYWRhaXN0cywgYm9ybiBpbiB0aGUgQ2FmZSBWb2x0YWlyZSwgd2VyZSBpbnRlcmVzdGVkIGZpcnN0IGluIHRoZSB3cml0dGVuIGFydHMsIGFuZCBkaWRuIG1vdmUgdG8gcGFpbnRpbmcgYW5kIHRoZSBwbGFzdGljcyBmb3IgYSBjb3VwbGUgb2YgeWVhcnMuIApCcml0aXNoIEFjYWRlbXkgb2YgRmlsbSBhbmQgVGVsZXZpc2lvbiBBcnRzIEF3YXJkIChCQUZUQSkgICBGZWIuIDEwLCAyMDE5Ck9ubGluZSBIb2xkZW0gUG9rZXIgMTAxCllvdSBzaG91bGQgbGVhdmUgaGVyIiBjb21tZW50cyBzaW5jZSB0aGVzZSBhcmUgbW9yZSBsaWtlbHkgdG8gc3dheSBwb3N0ZXJzLiAKV2VyYnVuZyBiZWluZmx1c3N0IHVucyBqYSBzY2hvbiB2b24gS2luZHNiZWluZW4gYW4sIGVzIGlzdCBiZXJoYXVwdCBrZWluIFd1bmRlciBkYXNzIEZyYXVlbiB3ZW5pZ2VyIEludGVyZXNzZSBhbiBTcGllbGVuIGVudHdpY2tlbG4gd2VubiBpaG5lbiBkYXVlcm5kIHN1Z2dlcmllcnQgd2lyZCBkYXMgc2VpIE1ubmVyc2FjaGUuIApJZGsgd2hhdCB0aGUgY29wcyB3b3VsZCBzYWlkIGFib3V0IGl0IGJlY2F1c2Ugd2UgaGF1bGVkIGFzcyBvdXR0YSB0aGVyZSByaWdodCBhZnRlcndhcmQuIApLZWxseSBhbmQgTWljaGlnYW4gY29tbWl0IE5vbGFuIFJ1bWxlciBhdCB0YWNrbGUsIEhvYmFuIGhhcyBvbmUgb2YgdGhlIGFyZWEncyBtb3N0IGltcG9zaW5nIG9mZmVuc2l2ZSBsaW5lcy5XaG8gaGFzIE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCBkZWZlbnNlPyBIUyBmb290YmFsbCBNb25kYXkgbW9ybmluZyBRQiBXaG8gaGFzIE5vcnRoZWFzdCBPaGlvJ3MgYmVzdCBkZWZlbnNlPyBIUyBmb290YmFsbCBNb25kYXkgbW9ybmluZyBRQiBmaXQuIFN0LiAKVGhlIHJlYXNvbiBxdWljayB3cmFwcyBkb24gdXN1YWxseSBzdXBwb3J0IHRoZSB3cmlzdCB3ZWxsIGVub3VnaCBpcyBiZWNhdXNlIG9mIHRoZWlyIHNldCBmb3JtIGZhY3Rvci4gSWYgeW91IGhhdmUgYmlnZ2VyIHdyaXN0cyB5b3UgbmVlZCB0byB3cmFwIG9uZSBvciB0d28gbW9yZSBsb29wcywgaWYgeW91IGhhdmUgdGhpbiB3cmlzdHMsIGxlc3MuIApUb28gbXVjaCBmbHVvcmlkZSBmb3Iga2lkcyBjYW4gbGVhZCB0byBhIGNvbmRpdGlvbiBjYWxsZWQgZW5hbWVsIGZsdW9yb3Npcywgd2hlbiB0aGUgdG9vdGggZW5hbWVsIGJlY29tZXMgZGlzY29sb3JlZC4gCjcuIEF2aXMgZGUgbm9uIHJlc3BvbnNhYmlsaXQgU0lURSBXRUIsIExFUyBGT05DVElPTk5BTElUIEVUIExFIENPTlRFTlUgU09OVCBGT1VSTklTIFRFTFMgUVVFTFMgRVQgVEVMUyBRVUUgRElTUE9OSUJMRVMgVk9VUyBOQVZJR1VFWiBFVCBVVElMSVNFWiBMRSBTSVRFIFdFQiBFVCBMRVMgRk9OQ1RJT05OQUxJVCBWT1MgUFJPUFJFUyBSSVNRVUVTLiBMQSBQUkVTU0UgTkUgRkFJVCBBVUNVTkUgUkVQUiBOSSBHQVJBTlRJRSBRVUFOVCBBVSBTSVRFIFdFQiwgQVVYIEZPTkNUSU9OTkFMSVQgRVQgQVUgQ09OVEVOVSwgSU5DTFVBTlQsIE5PVEFNTUVOVCwgTEVTIEdBUkFOVElFUyBRVUFOVCBpKSBMQSBRVUFMSVQgTUFSQ0hBTkRFLCBMIFVOIFVTQUdFIFBBUlRJQ1VMSUVSIERVIENPTlRFTlUgT1UgTEEgTk9OIFZJT0xBVElPTiBERVMgRFJPSVRTIERFIFBST1BSSSBJTlRFTExFQ1RVRUxMRTsgaWkpIEFVIEZPTkNUSU9OTkVNRU5UIERVIFNJVEUgV0VCIEVUIERFUyBGT05DVElPTk5BTElUIERFIE1BTkkgUyBFVCBTQU5TIElOVEVSUlVQVElPTiwgTkkgRVJSRVVSOyBpaWkpIEFVIEZBSVQgUVVFIEwgRFUgU0lURSBXRUIgT1UgREVTIEZPTkNUSU9OTkFMSVQgU0FUSVNGRVJBIFZPUyBCRVNPSU5TIEVUIFZPUyBBVFRFTlRFUzsgaXYpIEwgTCBMQSBGSUFCSUxJVCBPVSBMQSBQRVJUSU5FTkNFIERVIFNJVEUgV0VCLCBERVMgRk9OQ1RJT05OQUxJVCBFVCBEVSBDT05URU5VOyB2KSBMQSBDT1JSRUNUSU9OIERFUyBEIE9VIERFUyBFUlJFVVJTIERBTlMgTEUgU0lURSBXRUIgRVQgTEVTIEZPTkNUSU9OTkFMSVQgdmkpIEwgREUgVklSVVMgT1UgRCBET01NQUdFQUJMRVMgREFOUyBMRSBTSVRFIFdFQiBFVCBMRVMgRk9OQ1RJT05OQUxJVCBFVCB2aWkpIExBIFRSQU5TTUlTU0lPTiBTIE9VIFNBTlMgSU5URVJDRVBUSU9OIERFUyBDT01NVU5JQ0FUSU9OUyBQQVIgTCBEVSBTSVRFIFdFQiBPVSBERVMgRk9OQ1RJT05OQUxJVCBQUkVTU0UsIFNFUyBDT01QQUdOSUVTIEFGRklMSSBFVCBMRVVSUyBBRE1JTklTVFJBVEVVUlMsIEVNUExPWSBNQU5EQVRBSVJFUywgQ09OQyBERSBMSUNFTkNFIE9VIExFVVJTIFNVQ0NFU1NFVVJTIEVUIEFZQU5UIERST0lUUyBSRVNQRUNUSUZTLCBORSBQRVVWRU5UIEVOIEFVQ1VORSBDSVJDT05TVEFOQ0UgVEVOVVMgUkVTUE9OU0FCTEVTIERFUyBET01NQUdFUyBERSBUT1VURSBOQVRVUkUsIElORElSRUNUUywgU1AgT1UgRk9SVFVJVFMgQ09NUFJJUywgUiBESVJFQ1RFTUVOVCBPVSBJTkRJUkVDVEVNRU5UIERFIEwnVVRJTElTQVRJT04gT1UgREUgTEEgUEVSRk9STUFOQ0UgRFUgU0lURSBXRUIsIERFUyBGT05DVElPTk5BTElUIE9VIEVOQ09SRSBEVSBDT05URU5VIFNVUiBDRVVYIENJIE9VIFNVUiBUT1VUIEFVVFJFIFNJVEUgQVVRVUVMIFZPVVMgUE9VVkVaIEFDQyBQQVIgTEUgU0lURSBXRUIsIE0gUyBDT05OQUlTU0FJRU5UIE9VIEFVUkFJRU5UIERVIENPTk5BIExBIFBPU1NJQklMSVQgREUgVEVMUyBET01NQUdFUy4uIApPaWZmb3JkIEhvbGxlciBhbmQgc29uLCBKZWZmZXJzb247IE1ycy4gV2F5bmUgV2VudHdvcnRoIGFuZCBKaW1teSBPbHNvbiwgV2hpdGV3YXRlciwgYW5kIEFkYWxlIEdvZWdsZWluLCBGb3J0IEF0a2luc29uLiBNT05ST0UgSE9TUElUQUwgVGhpZWYgTGVhdmVzIEdJICQxNTAgYW5kIFRpY2tldHMgT0FLTEFORCwgQ2FsaWYuIApJcm9uaWNhbGx5LCB0aGlzIGlzIHRoZSBvbmx5IGdvbGQgbWVkYWwgdGhhdCB0aGUgVVMgaGFzIHdvbiBpbiBPbHltcGljIHdhdGVyIHBvbG8gY29tcGV0aXRpb24uIApIZXkhIEkgZGlkIGNyZXcgZm9yIGEgeWVhciBhbmQgSSByZWFsbHkgZW5qb3llZCBpdC4gClNwYXJ0aW5vcyB0b2xkIHRoZSBjb3VydCB0aGF0IE5pY29sZSBFbGl6YWJldGggTWF5LCAyMSBhdCB0aGUgdGltZSwgaGFkIGJlZW4gc2VudGVuY2VkIHRvIGEgMTUgbW9udGggdGVybSBpbiBqYWlsLCB3aGlsZSBNYXJjdXMgQ3VydGlzIFNjb3R0LCAyMSBhdCB0aGUgdGltZSwgd2FzIHNlbnRlbmNlZCB0byBuaW5lIG1vbnRocyBhbmQgU2FtYW50aGEgV2F0c29uLCAyMSBhdCB0aGUgdGltZSwgd2FzIGhhbmRlZCBhIHNpeCBtb250aCBzZW50ZW5jZS4KSSBkbyBub3Qgc2VlIHRoYXQgeW91IGFyZSBwdWxsaW5nIGludG8gdGhvcmFjaWMgZXh0ZW5zaW9uIGFuZCB0aGVuIGdpdmluZyBpdCB1cC4gCk9iIGhpZXIgZGllIG5lZ2F0aXZlIEVudHdpY2tsdW5nIGdlbWVpbnQgaXN0LCBpc3QgbmljaHQgZXJzaWNodGxpY2guIApUaGUgcmFkaW8gY291bGQgbm90IGJlIHVzZWQgdG8gbGV0IGNvbGxlYWd1ZXMgaW4gUGFraXN0YW4ga25vdzogdGhhdCBjb3VsZCBhbGVydCB0aGUgUnVzc2lhbnMuIEluc3RlYWQgaGUgYnJvYWRjYXN0IHR3byBjbGlja3MuIFBlc2hhd2FyIHNlbnQgYmFjayBhIHNpbmdsZSBjbGljazogcHJvY2VlZCBhcyBwbGFubmVkLi4gClN0dWRpZXMgd2VyZSBjb21iaW5lZCBpbiBhIG1ldGEgYW5hbHlzaXMuIEl0IHdhcyB1bmNsZWFyIHdoZXRoZXIgYW55IHRlc3RzIGZvciBzdGF0aXN0aWNhbCBoZXRlcm9nZW5laXR5IHdlcmUgY29uZHVjdGVkLiAKT24gdGhlIG90aGVyIGhhbmQsIGFueW9uZSB3aG8gaXMgZ29vZCBlbm91Z2ggYXQgc3lzdGVtaXppbmcgdG8gaGFuZGxlIGhpZ2ggbGV2ZWwgVGV4YXMgSG9sZCBzaG91bGQgYmUgZ29vZCBlbm91Z2ggYXQgc3lzdGVtaXppbmcgdG8gdW5kZXJzdGFuZCBiYXNpYyBlY29ub21pYyBjb25jZXB0cyBsaWtlIHByaWNlIGZsb29ycywgYWdlbmN5IGlzc3VlcywgZXRjLiAKQWRkZWQgcHJlIHNob3cgcHJvbW90aW9uIGNhbiBiZSBjcmVhdGVkIGJ5IGxpc3RpbmcgdGhpcyBzZXJ2aWNlIGluIHRoZSBvZmZpY2lhbCBzaG93IGRpcmVjdG9yeSBpbiBleGNoYW5nZSBmb3IgZnJlZSBnaWZ0IGNlcnRpZmljYXRlcy4gV2Ugc3VwcGx5IGFuIG9uIHNpdGUgY29vcmRpbmF0b3IgdG8gcHJvbW90ZSBzdHJlc3MgbWFuYWdlbWVudCBhbmQgT24gU2l0ZSBNYXNzYWdlIHNlc3Npb25zIHRvIGZvb3QgdHJhZmZpYy4uIApJZiBpdCBhIHNtYWxsIGdhbWUsIGFuZCB0aGUgYWNoaWV2ZW1lbnRzIGFyZW4gdG9vIGluc2FuZSwgdGhlbiBJIHRyeSwgYW5kIEkgZGVmaW5pdGVseSBnZXQgc2F0aXNmYWN0aW9uIGZyb20ga25vd2luZyBJIDEwMCUgYSBnYW1lLCBidXQgZm9yIG1vc3QgZ2FtZXMgaXQgbm90IHdvcnRoIHRoZSB0aW1lIG9yIGZydXN0cmF0aW9uLiBJIGhhdmUgYSBmZXcgc21hbGwgZ2FtZXMgdGhhdCBhcmUgZHJpdmluZyBtZSBpbnNhbmUgYmVjYXVzZSBJIG1heWJlIGhhdmUgMSBvciAyIGFjaGlldmVtZW50cyBsZWZ0LCBzbyBJIGhhdmUgYSBoYXJkIHRpbWUgZ2l2aW5nIHVwIG9uIHRob3NlIG9uZXMsIGVzcGVjaWFsbHkgaWYgdGhlIHN0ZWFtIGFjaGlldmVtZW50cyBhcmUgYWN0dWFsbHkgbmljZSBsb29raW5nIGFuZCBzb21ldGhpbmcgSSBtaWdodCBsaWtlIHRvIGZlYXR1cmUgb24gbXkgcHJvZmlsZSBvbmUgZGF5LCBpZiBpdCBqdXN0IGEgZ2VuZXJpYyBsb29raW5nIGFjaGlldmVtZW50IEkgZG9uIGNhcmUgdGFodCBtdWNoLgpOb3QgVGFsbGFoYXNzZWUncywgaG93ZXZlci4gVGhlcmUsIHRoZSBIdW1hbmUgU29jaWV0eSwgR1JFWTJLIFVTQSBhbmQgdHJhY2sgb3duZXJzIGFyZSBvbiB0aGUgc2FtZSBzaWRlLCB0cnlpbmcgdG8gY2hhbmdlIEZsb3JpZGEncyBsYXcgdGhhdCB0aWVzIHBva2VyIHJvb21zIGFuZCBzbG90IG1hY2hpbmVzIHRvIGxpdmUgcmFjaW5nLiBUaGUgYm90dG9tIGxpbmUgbW90aXZhdGVzIHRoZSBnYW1lcnM7IHRoZSB3ZWxsIGJlaW5nIG9mIHRoZSBkb2dzIEdSRVkySy4KQnV0LCBCdW5jb21iZSBDb3VudHkgU2hlcmlmZiBWYW4gRHVuY2FuIHNheXMgaGlzIG9mZmljZSBkb2VzbiBoYXZlIGEgcmVjb3JkIG9mIGEgY2FsbCBtYWRlIGZyb20gRWlsZWVuIGhvbWUuIFNvLCB0aGlzIHBhc3QgSmFudWFyeSwgRWlsZWVuIGNvbnRhY3RlZCBOZXdzIDEzIGludmVzdGlnYXRpdmUgdGlwIGxpbmUgZm9yIGhlbHAuIApUaGVyZSBhcmUgbm8gc3BlY2lhbCByZXF1aXJlbWVudHMuIFlvdSBqdXN0IG5lZWQgdG8gY3JlYXRlIGEgbmV3IGFjY291bnQgdXNpbmcgc3BlY2lhbCBDbHViV1BUIEJvbnVzIENvZGUgIlZJUFRSSUFMIi4gCkZvciB0aG9zZSBvZiB1cyB3aG8gYXJlIG9uIHRoZSB2ZXJnZSBvZiBsb3Npbmcgb3VyIGhvbWVzLCB3aG8gZnJldCBhYm91dCBmZWVkaW5nIG91ciBjaGlsZHJlbiwgd2hvIGNyaW5nZSB3aGVuIHRoZSBwaG9uZSByaW5ncyBiZWNhdXNlIGRlYnQgY29sbGVjdG9ycyBtYXkgYmUgY2FsbGluZywgd2l0aG91dCBxdWVzdGlvbiwgbW9yZSBtb25leSB3aWxsIG1ha2UgdXMgaGFwcGllci4gCkJvb3N0IGluIFNjaHFvbCBCdWRnZXQgYXQgQmVsb2l0IEJFTE9JVCBBIHRlbnRhdGl2ZSAxOTU1IEJlbG9pdCBzY2hvb2wgYnVkZ2V0IG9mICQyLDEzOCw0MzUgY2FsbGluZyBmb3IgYSB0YXggbGV2eSBvZiA/MSw2OTMsMjkwIHdhcyBkaXNjdXNzZWQgYXQgYSBqb2ludCBtZWV0aW5nIG9mIGNpdHkgY291bmNpbG1lbiBhbmQgc2Nob29sIGJvYXJkIG1lbSAgYmVycyBUaHVyc2RheSBuaWdodC4gClJlbWluZHMgbWUgb2YgbXkgYnJvdGhlciBhZnRlciBoaXMgZmlyc3QgYW5kIGxhc3QgdmlzaXQgdG8gYSBjb21pYyBjb252ZW50aW9uIGluIExvbmRvbi4gCkxldmVsIHlhbmcgYmVydGFtYmFoIG1lbWJlcmlrYW4gYWtzZXMgdGVyaGFkYXAgbWVqYSwgcGVuY2FwYWlhbiwgc2VydGEgaGFkaWFoIGhhZGlhaCBiYXJ1LkFuZGEgYmlzYSBtZW5pbmphdSBwcm9maWwgQW5kYSBkZW5nYW4gbWVuZ2tsaWsgdG9tYm9sIFByb2ZpbGUgZGkgc2lzaSBraXJpIGJhd2FoLiBBbmRhIGJpc2EgbWVsaWhhdCBzdGF0aXN0aWsgbWVuZGV0YWlsLCBzZW11YSBiZW5kYSB5YW5nIHN1ZGFoIEFuZGEgZGFwYXRrYW4sIGRhbiBwZXJrZW1iYW5nYW4gcGVuY2FwYWlhbiBBbmRhLkNhcmkgbWVqYS4gQW5kYSBiaXNhIHNlZ2VyYSBiZXJnYWJ1bmcgZGVuZ2FuIHBlcm1haW5hbiBkZW5nYW4gbWVuZ2V0dWsgdG9tYm9sICJQbGF5IE5vdyIgeWFuZyBiZXJ3YXJuYSBtZXJhaC4gCkFmdGVyIGEgd2hvbGUgd2VlayBvZiB3b3JraW5nLCB5b3VyIGJvZHkgZGVzZXJ2ZXMgc29tZSBwYW1wZXJpbmcuIApBbGwgYXJlIHBvc3NpYmxlIGZvciBpcyBhZHZhbmNlZCB0ZWNobm9sb2d5IGFuZCBzbWFydCBmZWF0dXJlcy4gVGhpcyBtaW5pIHN0eWxlciB3aWxsIGRlbGl2ZXIgYW55IHR5cGUgb2Ygc3R5bGluZy4gCllvdSBnaXZlIDMgbGlua3MsIGFsbCBnb2luZyBiYWNrIHRvIHRoZSBzYW1lIHRoaW5nOiBDb25zY3JpcHRlZCBtZW4gaW4gbm9ydGhlcm4gRXVyb3BlIGhhdmUgYmVlbiB0YWtpbmcgdGhlIHRlc3RzIGxlc3Mgc2VyaW91c2x5LiAKQm90aCBvZiB1cyBhcmUgYXZpZCBwb2tlciBwbGF5ZXJzIHNvIGl0IHdhcyBuaWNlIHRvIGFjdHVhbGx5IGFncmVlIG9uIHNvbWV0aGluZyBmb3IgYSBjaGFuZ2UgaW5zdGVhZCBvZiBlaXRoZXIgcGFydHkgY3JpbmdpbmcuIApIb3dldmVyLCB3aGF0IHRydWx5IHNldCBLaGFsaWZhIG9uIGhlciB3YXkgdG8gYmVjb21pbmcgYW4gaW50ZXJuYXRpb25hbCBwaGVub21lbm9uIHdhcyB0aGUgZmFjdCB0aGF0IHNoZSBzb21ldGltZXMgcGVyZm9ybWVkIGluIGEgaGlqYWIsIHRoZSB0cmFkaXRpb25hbCBNdXNsaW0gaGVhZCBjb3ZlcmluZy4gCk5ld2NvbWVyIFJpY2t5IEplYW4gRnJhbmNvaXMgaGFzIHNwb2tlbiBhYm91dCB0aGUgbG9zaW5nIGN1bHR1cmUgb24gdGhlIExpb25zIGEgbnVtYmVyIG9mIHRpbWVzLCBtb3N0IHJlY2VudGx5IGhlcmUuIApOb3QgdGhlIEdyZWF0ZXN0ClVnaCEgV2VudCB0aHJvdWdoIHRoaXMgd2l0aCBteSBERC4gTXkgR01JTCBhbmQgU0ZJTCBhcmUgU29vb28ganVzdCB5ZXMgKCBldmVuIGFmdGVyIG92ZXIgYSBkZWNhZGUgYWZ0ZXIgd2UgYnJva2UgdXAgdGhleSBoYXZlIGJlZW4gYSBodWdlIHBhcnQgb2YgbXkgc3VwcG9ydCBzeXN0ZW0pIEhvd2V2ZXIgRklMIGFuZCBTTUlMIGNyaXRpY2l6ZWQgZXZlcnl0aGluZyBiZWNhdXNlIHNoZSB3YXMgYSBraW5kZXJnYXJ0ZW4gdGVhY2hlci4gCkNvbXBldGl0aXZlIGlzIGluIGEgdGVycmlibGUgc3RhdGUgYW5kIHRoZXJlJ3Mgbm8gdHJpYWxzIHNvIEknbGwgb25seSBob3AgaW4gUHZQIGp1c3QgdG8gcGxheSwgYnV0IHRoZXJlJ3Mgbm8gY2Fycm90IGZvciBtZSB0byBmZWVsIGxpa2UgSSdtIGNoYXNpbmcgc29tZXRoaW5nLiAKQmlsZSBob3dldmVyIGlzIGV4dHJlbWVseSBkYW1hZ2luZyB0byBsYXJnZSBpbnRlc3RpbmUgZXBpdGhlbGl1bS5XaGVuIGJpbGUgZW50ZXJzIHRoZSBzbWFsbCBpbnRlc3RpbmUgdmlhIHRoZSBjb21tb24gYmlsZSBkdWN0LCBiZW5lZmljaWFsIGJhY3RlcmlhIGJyZWFrIHRoZSBiaWxlIHNhbHRzIGRvd24gaW50byBhIGxlc3MgdG94aWMgY29tcG91bmQsIG1ha2luZyBpdCBub24gZGFuZ2Vyb3VzIGJ5IHRoZSB0aW1lIGl0IHJlYWNoZXMgdGhlIGxhcmdlIGludGVzdGluZS5XaGVuIHlvdSB0YWtlIGFudGliaW90aWNzIHlvdSBkZXN0cm95IHRoZXNlIGJhY3RlcmlhIGFuZCB0aGUgYmlsZSBzYWx0cyBmcmVlbHkgZW50ZXIgYW5kIGRhbWFnZSB0aGUgbGFyZ2UgaW50ZXN0aW5lLiAKNS4gTm8gcG9saXRpY2FsIGNsaXBzIG9yIHBvc3RzIHB1c2hpbmcgYSBwZXJzb25hbCBhZ2VuZGEuClRoZSBsZWdhbGl0aWVzIHRvb2sgcGxhY2UgYmVoaW5kIGNsb3NlZCBkb29ycywgYnV0IHRoZSBCbGVzc2luZywgbGVkIGJ5IHRoZSBBcmNoYmlzaG9wIG9mIENhbnRlcmJ1cnksIERyIFJvd2FuIFdpbGxpYW1zIHdhcyBicm9hZGNhc3QgbGl2ZS4gCkJ1dCB0aGV5IHN0aWxsIG92ZXJ3aGVsbWluZ2x5IHRoaW5rIG9mIHRoZW1zZWx2ZXMgYXMgaGFwcHkuIFRoaXMgZG9lc24ndCBtZWFuIHRoYXQgd2VhbHRoeSBwZW9wbGUgY2FuJ3QgYmUgaGFwcHkgICBpdCBqdXN0IG1lYW5zIHRoYXQgYmVpbmcgd2VhbHRoeSBkb2Vzbid0IGF1dG9tYXRpY2FsbHkgY29uZmVyIGhhcHBpbmVzcy4gCk15IGRhZCB0YXVnaHQgbWUgaG93IHRvIHBsYXkgcG9rZXIsIHJ1bGVzIHdpc2UsIGF0IDE0LiBJdCB3YXNuJ3QgdGlsIDE5IDIwIEkgc3RhcnRlZCB0byBzdHVkeSB0aGUgZ2FtZS4gCldldHRlbi4gCkp1c3QgYmxvb2QuIApUaGUgZ2FtZSBvZiBwb2tlciBpcyBieSBmYXIgdGhlIG1vc3QgcG9wdWxhciBmb3JtIG9mIGNhcmQgcGxheWluZyB3b3JsZHdpZGUuIApDdXN0b21lciBTZXJ2aWNlRGlnaXRhbCBTdXBwb3J0RGlyZWN0b3J5QWJvdXQgT3VyIEFkc0FkdmVydGlzZSB3aXRoIFVzUEFZIFlPVVIgQUQgQklMTFByaXZhY3kgcG9saWN5VGVybXMgb2YgdXNlClRoZSByZWd1bGFycyBsaWtlIHRvIHBsYXkgbWluZCBnYW1lcyB3aXRoIG90aGVyIGJpZGRlcnMuIExpa2UgYmlkZGluZyBpbiAkMSBpbmNyZW1lbnRzLiAKTXkgYWR2aWNlIGlzIHNpbXBsZSwgaWYgeW91IHdhbnQgdG8gYmUgInBybyIganVzdCBidXkgdGhlIGJlc3QgY291cnNlcyBvdXQgdGhlcmUuIApTb21lIGRheXMgaXQgZG9lc24ndCBzZWVtIHJlYWwuIEJ1dCwgaGUgaXMgbm90IHJlYWR5IHRvIGNoYW5nZSBhbmQgdGFrZSByZXNwb25zaWJpbGl0eSBvZiBoaXMgYWN0aW9ucy4gVGhlcmUgaXMgbm8gb25lIHRvIGJsYW1lIGJ1dCBoaW1zZWxmIGF0IHRoaXMgcG9pbnQuIEkgc3Rvb2QgYnkgZm9yIG1vbnRocyBtb250aHMgbW9udGhzIG1vbnRocyBob3BpbmcgZm9yIGEgY2hhbmdlLiBJIG5ldmVyIGdvdCB0aGF0LiBNYXliZSBvbmUgZGF5LCBoZSBjYW4gbG92ZSBoaW1zZWxmIGFnYWluIGFuZCBrbm93IHRoYXQgaGUncyBzbyBtdWNoIG1vcmUgdGhhbiBoaXMgYWRkaWN0aW9uIGFuZCBwb29yIGNob2ljZXMuCkphbWVzIHdpbGwgYmUgZXNwZWNpYWxseSBtaXNzZWQgYnkgaGlzIHdpZmUsIGZvdXIgY2hpbGRyZW4sIGFuZCB0ZW4gZ3JhbmRjaGlsZHJlbi4gQSBtZW1vcmlhbCBzZXJ2aWNlIGZvciBKYW1lcyBLbm93bGVzIHNoYWxsIGJlIGhlbGQgb24gU2F0dXJkYXksIEp1bHkgMTZ0aCwgMjAxMSBhdCBLbm94IFByZXNieXRlcmlhbiBDaHVyY2gsIDU5MSBTdC4gClUgb2YgVCdzIHN0cmF0ZWdpYyByZWNydWl0bWVudCBjZW50cmUgaG9zdGVkIGEgam9iIGZhaXIgYXQgdGhlIHVuaXZlcnNpdHkncyBGaXJzdCBOYXRpb25zIEhvdXNlIHRvIHRhcmdldCBJbmRpZ2Vub3VzIGNhbmRpZGF0ZXMgYW5kIHRoZSBvcmdhbml6YXRpb24gYWxzbyBwYXJ0aWNpcGF0ZWQgaW4gdGhlIEluZGlnZW5vdXMgQ2FyZWVyIEZhaXIsIGhvc3RlZCBieSBQcmluY2UncyBDaGFyaXRpZXMgQ2FuYWRhClRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgdGhhdCBtaW5lIHdhcyBsb3cgYnJhc3MgYW5kIGhpcyB3YXNuIE15IHZlcHIxMiBpcyBteSBmaXJzdCBzaG90Z3VuIHNvIEkgc3RpbGwgbmV3IHRvIDEyZ2F1Z2UgYW1tbyBidXQgSSBqdXN0IGZpZ3VyZWQgSSB3b3VsZCBzaGFyZSBteSBleHBlcmllbmNlLiBPZiBjb3Vyc2UgaXQgY3ljbGVkIG51bWJlciA0IGp1c3QgZmluZSBhcyB3ZWxsIGFzIGRvdWJsZSBvdWdodCBhbmQgc2x1Z3MuIEkgY2FuIHNob290IHRoZW0gYXMgcXVpY2sgYXMgSSBjYW4gbWFuYWdlLiAKTXkgbW90aGVyIHdhcyBhIHZpb2xpbiBwbGF5ZXIgYW5kIHN0dWRpZWQgYXQgdGhlIENvbnNlcnZhdG9pcmUgaW4gUGFyaXMuIFdoZW4gc2hlIGhhZCBoZXIgbXVzaWMgYWZ0ZXJub29ucyAgIEkgYmVsaWV2ZSB0aGF0IGl0IHdhcyBldmVyeSBXZWRuZXNkYXksIEkgd2FzIG5vdCBhbGxvd2VkIHRvIGdvIGludG8gdGhlIG11c2ljIHJvb20uIHRoZSByZXN1bHQgd2FzIHRoYXQgSSBzYXQgb3V0c2lkZSB0aGUgZG9vciBhbmQgbGlzdGVuZWQgYXZpZGx5IHRvIGJlYXV0aWZ1bCBjaGFtYmVyIG11c2ljLiEhLgpCZWNhdXNlIG9mIHRoZXNlLCBtb3N0IHBsYXllcnMgYmVsaWV2ZSB0aGF0IHRoZXkgbmVlZCB0byBlcXVpcCB0aGVtc2VsdmVzIHdpdGggcHJhY3RpY2FsIHBva2VyIHN0cmF0ZWd5IGFuZCB0aXBzIHNvIGFzIHRvIGVzdGFibGlzaCB0aGUgYXBwcm9wcmlhdGUgZXhwZWN0YXRpb24gZm9yIGV2ZXJ5IHByb2JhYmxlIG1vdmUgb2YgdGhlIHBsYXllcnMuIApDaW5jaW5uYXRpIEhvcnNlc2hvZSBDYXNpbm8gb3BlbnMgdG8gdGhlIHB1YmxpYyBNb25kYXkKSWYgeW91IGFyZSB3b3JraW5nIGFuZCBjYXIgbGl2aW5nIHlvdSB3aWxsIG5lZWQgYW5kIGJlIGFibGUgdG8gYWZmb3JkIGluZG9vciBtb3RlbC9BaXJibmIgcmVzcGl0ZSBzb21ldGltZXMuIElmIEkgd2VyZSB5b3UgSSB3b3VsZCBub3QgYmUgc2V0dGxpbmcgaW4gdG8gc3RheSBpbiB0aGUgY2FyLCBJIHdvdWxkIGJlIHdvcmtpbmcgb24gZ2V0dGluZyBwaHlzaWNhbCBzaGVsdGVyIEFTQVAuIApZb3UnbGwgbWFrZSAkNSBhbmQgaG91ciBpbiBkYXl0aW1lLCB3aGljaCBpcyA0MCQgdG8gcGF5IGZvciB5b3VyIGRyaW5rcyBhdCBuaWdodCwgYnV0IHlvdSBhcmUgYmVhdGluZyB0aGUgbWljcm8gdGFibGVzIG9ubGluZSwgc28geW91IHN1cmUgYXMgaGVsbCBjYW4gYmVhdCB0aGUgJDEvJDIgbGl2ZSBnYW1lIGFuZCBub3cgeW91IGhhdmUgYSBnb29kIHNob3QgdG8gdHJ5IGFuZCBtYWtlIHlvdXJzZWxmIDEwMEJCIGEgbmlnaHQgKDIwMCQpLiBZb3UgYXJlbid0IGN1cnJlbnRseSBhIHdpbm5pbmcgcGxheWVyIGF0IDJOTC4gVGhlIGdhcCB0byBhY2hpZXZlIHRoaXMgaXMgZ29pbmcgdG8gdGFrZSB5b3UgaHVuZHJlZHMgKGlmIHlvdSBhcmUgZXhjZXB0aW9uYWxseSB0YWxlbnRlZC9oYXZlIHBlcmZlY3Qgc3R1ZHkgaGFiaXRzKSBvZiBob3VycyBhbmQgbW9yZSBsaWtlbHkgdGhvdXNhbmRzIG9mIGhvdXJzLiAKVGhlcmUgd2VyZSBzb21lIHNtYWxsIGRpZmZlcmVuY2VzICAgdGhlIEJyaXRpc2ggcm90aXNzZXJpZSBjaGlja2VuIGJlaW5nIG9uZSBvZiB0aGVtICAgYnV0IG9uIHRoZSB3aG9sZSwgaXQgd2FzIGxpa2UgYmVpbmcgYmFjayBhdCBob21lLi4gCkRhcyAgaGF0IHNpY2ggdm9uIEFuYmVnaW5uIGF1ZiBkZW4gZGV1dHNjaGVuIHVuZCBzdGVycmVpY2hpc2NoZW4gT25saW5lICBNYXJrdCBrb256ZW50cmllcnQgICB1bmQgZGllIEVyZ2Vibmlzc2UgaGllcmJlaSB3YXJlbiBhbmZhbmdzIG5vY2ggc28gZWluZSBTdGVsbHVuZ25haG1lIGRlcyBpbiBHaWJyYWx0YXIgbGl6ZW56aWVydGVuIHMuCkxlIG1hcmNoYW5kIGRlIHZpbnMsIGNvbGwgIGwnYXJjaGUgZHUgcG9udCwgZGUgRmxldXJzIGQnQWNhbnRoZSAgbCdvcmlnaW5lIGVzdCBkZXZlbnUgRXRzIEx1Y2llbiwgZXQgYSBkaiB0IHZ1IGVuIGNldHRlIHBsYWNlLCBpbCB5IGEgdW5lIHF1aW56YWluZSBkJ2FubmVzLCBsb3JzIGR1IHRvdXJuYWdlIGRlcyAxMDIgRGFsbWF0aWVucywgZmlsbSBhbXJpY2FpbiBkZSBLZXZpbiBMaW1hIGF2ZWMgR2xlbm4gQ2xvc2UgZXQgR3JhcmQgRGVwYXJkaWV1IChmaWNoZSkuLiAKRmFiaW8gQ2FwZWxsbyB3YXMgc3BhcmVkIHRoZSBhbWJpdmFsZW5jZSBvZiBsZWFkaW5nIEVuZ2xhbmQgaW50byBiYXR0bGUgYWdhaW5zdCBoaXMgaG9tZWxhbmQgYnkgdGhlIHN0YW5jZSBoZSBhZG9wdGVkIG92ZXIgVGVycnkgZGVtb3Rpb24gYXMgRW5nbGFuZCBjYXB0YWluLiBXb3VsZCBEb24gRmFiaW8gaGF2ZSBiZWVuIG91dCBoZXJlIG9uIHRoaXMgbmlnaHQgcGxvdHRpbmcgdGhlIGRvd25mYWxsIG9mIG1vdGhlciBJdGFseT8gSW4gaGlzIGZhdm91ciwgRW5nbGFuZCB3b3VsZCBoYXZlIGFkb3B0ZWQgdGhlIG1vcmUgZmx1aWQgYW5kIG1vZGVybiBmb3JtYXRpb24gQ2FwZWxsbyBkZXZpc2VkIGluIHRoZSBhZnRlcm1hdGggb2YgdGhlIFdvcmxkIEN1cCBkZWJhY2xlOyBidXQgdGhlIHNxdWFkIHdvdWxkIGhhdmUgYmVlbiBzdHVjayBpbiB0aGUgYWdlIG9mIGN1bHR1cmFsIGF3a3dhcmRuZXNzLCB3aXRob3V0IHRoZSBlYXNlIGFuZCB1bml0eSBoYXMgSG9kZ3NvbiBoYXMgaW1wYXJ0ZWQgdG8gdGhlIGNhbXAuLiAKVW5zZXIgVGVhbSBpc3Qga29tcGxldHQgdW5kIGRlciBXZWcgZnIgZWluZSBlcmZvbGdyZWljaGUgVW1zZXR6dW5nIGZyZWkuIi4gClRoZSBjb3VydCBoZWFyZCBIYXJyb2Qgd292ZSBhIGNvbXBsZXggd2ViIG9mIGZha2UgdHJhbnNhY3Rpb25zIGFuZCBmYWxzaWZpZWQgYmFuayByZXBvcnRzIGluIG9yZGVyIHRvIGNvdmVyIGhlciB0cmFja3MuIFRoaXMgYWNjZXNzIGFsbG93ZWQgSGFycm9kIHRvIHB1bGwgbW9uZXkgb3V0IG9mIHRoZSBhY2NvdW50cyBvbiBtdWx0aXBsZSBvY2Nhc2lvbnMgZm9yIGhlciBvd24gdXNlLiAKQWxzbywgRG91YmxlcyBvbiBncmFzczogVGlsZGVuIHJhcmVseSB3b24gYSBkb3VibGVzIHNsYW07IFJvZCBMYXZlciB3b24gNyBncmFuZCBzbGFtIGRvdWJsZXMgdGl0bGVzIG9uIGdyYXNzIHN1cmZhY2UuIChGdWxsIEFuc3dlcikuIApGbGV4b2xvZ2llIHBsYW50YWlyZSBjaGlub2lzZSBvdSB0aGEKQnV0IHRoZSBwb2ludCBpcywgdGhhdCB0aGVyZSBpcyBubyBlbmQgYWxsIGJlIGFsbCBzdHJhdGVneSB0byBleHBsb2l0IGJvdHMsIGFuZCBpdCBzaXR1YXRpb25hbC4KUmFpbHdheSBmYW1pbHkgZG9uYXRlcyBkaXNwbGF5IG9mIHRyYWluCldoZW4gSSBmaXJzdCBzdGFydGVkIHdvcmtpbmcgdGhlcmUsIEkgYXNzaXN0ZWQgYW5kIG1vc3RseSBjbGVhbmVkIHVwIGhpcyBtZXNzZXMgYmVjYXVzZSB1bHRpbWF0ZWx5IGl0IHJlZmxlY3RlZCBvbiB0aGUgZW50aXJlIElUIGRlcGFydG1lbnQuIApOb3csIGlmIHlvdSBhcmUgd29uZGVyaW5nIGhvdyBrbm93aW5nIGFuIG9wcG9uZW50J3Mgd2luIHJhdGUgd2lsbCBoZWxwIHlvdSwga2VlcCByZWFkaW5nLi4gCjcuIEJsdWViZXJyeSBNYXJrZXQgYXQgVGFidWxhbTogQXMgeW91IHdvdWxkIGV4cGVjdCBhdCBhIEJsdWViZXJyeSBNYXJrZXQgdGhlcmUgd2lsbCBiZSBwbGVudHkgb2YgYmx1ZWJlcnJpZXMgZm9yIHNhbGUuIApDaG9yZW9ncmFwaGVyIFNoYXJtaWxsYSBLaGFubmEgYWdyZWVzIGNvbXBsZXRlbHkgb24gdGhlIHByZW1pc2UgdGhhdCBtZW4gYXJlIGxpa2VseSB0byBtYWtlIG1hbnkgbW9yZSBmcmllbmRzIHRoYW4gd29tZW4uIGJlZW4gbWFycmllZCAyNiB5ZWFycyBhbmQgbXkgbGlmZSBoYXMgcmV2b2x2ZWQgYXJvdW5kIHRoaXMgdHJ1dGguIE15IGh1c2JhbmQgU2FuZGlpcCBoYXMgMjIgZ29sZiBmcmllbmRzIGFuZCB0aGV5IHBsYXkgYWx0ZXJuYXRlbHkgd2l0aCBlYWNoIG90aGVyIGluIGZvdXJzb21lcy4gSGUgYWxzbyBoYXMgYSBwb2tlciBncm91cCB3aXRoIHNvbWUgZXhjbHVzaXZlbHkgcG9rZXIgZnJpZW5kcyBhbmQgZWFybGllciBvbiBoZSB1c2VkIHRvIGhhdmUgaGlzIG51bWVyb3VzIHJ1Z2J5IHBhbHMuIEkgZmVlbCB0aGF0IG1lbiBlbmQgdXAgYm9uZGluZyBodWdlbHkgb24gc3BvcnRzIGFuZCBmb29kLiBUaGV5IGFsd2F5cyBrbm93IHdoaWNoIHJlc3RhdXJhbnQgdGhleSBzaG91bGQgZ28gdG8gYW5kIGxvdmUgdG8gdHJ5IG91dCBuZXcgcmVzdGF1cmFudHMuIFdvbWVuLCBvbiB0aGUgb3RoZXIgaGFuZCwgaGF2ZSBmZXdlciBwYWxzIGJ1dCBnZXQgY2xvc2VyIHRvIHRoZW0uIEF0IHRoZSBtb3N0IHRoZXkgbWF5IGVuZCB1cCBlYXRpbmcgZGlldCBmb29kIG9yIHNob3BwaW5nIHRvZ2V0aGVyIGFzIGZhciBhcyBzb2NpYWwgYWN0aXZpdGllcyBhcmUgY29uY2VybmVkLiBTYXlzIHRhcm90IGNhcmQgcmVhZGVyIE11bmlzaGEgS2hhdHdhbmksIGFyZSBtb3JlIGNoYXJtaW5nLiBUaGV5IGZpbmQgaXQgZWFzeSB0byBib25kIHdpdGggb3RoZXIgZ3V5cyBvdmVyIGRyaW5rcyBvciB3YXRjaCBhIG1hdGNoIHRvZ2V0aGVyIHdoaWxlIHdvbWVuIGFyZSBsaW1pdGVkIHRvIHNob3BwaW5nIG9yIGhhdmluZyBnb3NzaXAgc2Vzc2lvbnMgdG9nZXRoZXIuIEFsc28sIGd1eXMgYXJlIG1vcmUgY2hpbGxlZCBvdXQgYW5kIGZpbmQgaXQgZWFzaWVyIHRvIGdldCBhbG9uZyB3aXRoIGJvdGggdGhlIHNleGVzIHdoaWxlIGl0IHRha2VzIHdvbWVuIHNvbWUgdGltZSB0byB0cnVzdCB0aGVpciBmcmllbmRzLgpDb3VudGxlc3MgaW5kaXZpZHVhbHMgaGF2ZSBzcG9rZW4gb3V0IGFnYWluc3QgdGhhdCB3YXkgb2YgbGlmZSB0aHJvdWdob3V0IHJlY29yZGVkIGhpc3RvcnkuIApUaGVyZSBnb25uYSBiZSB0aHJlYWRzIGFsbCBvdmVyIHRoZSBwbGFjZSBmb3IgTG9yZCBUYWljaGksIGFuZCB0aGVuIGF0IHNvbWUgcG9pbnQgeW91IGdvbm5hIHRpcmUgb3V0IGxpa2UgZXZlcnlvbmUgaXMgdGlyaW5nIG91dCBvZiB0aGUgc2hhZ2d5IG1lbWUuIAoxNjAxIFVuaXZlcnNpdHkgQXZlLiBXLiwgU3QuIApJdCB3YXMgc3BlY2lhbCBiZWNhdXNlIGFzIHlvdSBncm93IHVwIHRob3NlIG90aGVyIGtpZHMgYXJlbiBqdXN0IGZyaWVuZHMsIHRoZXkgYmVjb21lIGEgc2Vjb25kIGZhbWlseS4gSXQgbm90IGxpa2UgcHVibGljIHNjaG9vbCB3aGVyZSB5b3UgaGF2ZSA5IGRpZmZlcmVudCBjbGFzc2VzIHdpdGggMzAgZGlmZmVyZW50IHN0dWRlbnRzIGluIGVhY2ggb2YgdGhlbS4gCkRvbiBsaXN0ZW4gdG8gYW55IG9mIHRob3NlIGplcmtzLiAKQW5kIHdlIHdvdWxkIGRvIGFuIGFubnVhbCBiaWtlIHJpZGUuIApDYW4gQ2FuIFdvbmRlcmxhbmQsIDc1NSBQcmlvciBBdmUuIApUaGVyZSBpcyBubyB1bml2ZXJzZSBpbiB3aGljaCBrZWVwaW5nIHRoZW0gb24gQ0QgYXMgbXVjaCBhcyBwb3NzaWJsZSBpc24gb3B0aW1hbC4gCkVpZ2h0IGFkZGl0aW9uYWwgbXVsdGkgcHVycG9zZSB2ZW51ZXMsIHJhbmdpbmcgZnJvbSA1ODEgdG8gMSwyOTIgc3F1YXJlIGZlZXQgKDU0IHRvIDEyMCBzcXVhcmUgbWV0ZXJzKSwgY2FuIGFjY29tbW9kYXRlIG1lZXRpbmdzIGFuZCBldmVudHMgb2YgdmFyaW91cyBzaXplcy4uIApSZWNlbnQgcG9sbHMgZm9yZWNhc3QgYSBuYXJyb3cgTGliZXJhbCByZSBlbGVjdGlvbiwgd2l0aCBMYWJvciBhZGRpbmcgdGhyZWUgc2VhdHMgdG8gdGhlaXIgc2V2ZW4gYnV0IG5vdCBlbm91Z2ggdG8gZm9ybSBtYWpvcml0eSB3aXRoIDEzLgpBdCBhZ2UgMiAxLzIgdG8gYWJvdXQgMyBjaGlsZHJlbiBjYW4gYmVnaW4gdG8gYXBwcmVjaWF0ZSBwaWN0dXJlcywgbWFwcywgYW5kIG1vZGVscyBhcyBvYmplY3RzIHRoYXQgc3RhbmQgZm9yIHNvbWV0aGluZyBlbHNlLiAKT3ZlcnZpZXcgZm9yIGN5ClRoZSBtZWFudGltZSwgdGhlIExBU1QgY29sdW1uIGdpdmVzIG1lIGEgY2hhbmNlIHRvIGRvIHNvbWV0aGluZyB0aGF0IGJsb2dnaW5nIHJhcmVseSBhbGxvd3MgbWUgdG8gZG86IHJlZmxlY3QuIApUZWxsIG1lIGFnYWluIGhvdyBwcmFjdGljYWxseSBhbGwgZm9yZWlnbmVycyBhcmUgV2VzdGVybmVycyBvciB3aGF0ZXZlci4gCkkndmUgYmVlbiBwbGF5aW5nIHBva2VyIGZvciBhIGxpdmluZyBmb3Igb3ZlciAyMCB5ZWFycy4gSSBzdGFydGVkIGluIDIgNSBOTEggYW5kIG5vdyBwbGF5IGZpeGVkIGxpbWl0IG1peCBnYW1lcy4gCkJ1dGNoZXIgcGxheXMgaGlzIGNhcmRzIHJpZ2h0IHRvIGJlIGNyb3duZWQgYmVzdCBwdWIgcG9rZXIgcGxheWVyIGluIHRoZSBVSwpXZWxsLCBBbGFuIGp1c3QgZG9lc24ndCBwbGF5IGEgaHVnZSByb2xlIGluIHRoZSBib29rLiBIZSBzYWlkIHNpZ25pZmljYW50bHkgbW9yZSBpbiB0aGUgdHYgYWRhcHRhdGlvbiB0aGFuIGluIHRoZSBub3ZlbC4gSSB0b29rIGhpbSB0byBiZSBhIHRyb3BoeSBodXNiYW5kIHdobyBkaWQgYXMgaGUgd2FzIHRvbGQsIGFuZCBiZWxpZXZlZCBldmVyeXRoaW5nIEFkb3JhIHRvbGQgaGltLiBIZSBkb2VzIHdoYXRldmVyIGhlIGNhbiB0byBwbGVhc2UgaGVyIGFuZCBrZWVwIGEgY2FsbSBob3VzZWhvbGQsIHdoaWNoIGV4cGxhaW5zIHNvbWUgb2YgaGlzIGludGVyYWN0aW9ucyB3aXRoIENhbWlsbGUuIApMaXZlIEZvciBTcGVlZCBzMiBBbHBoYSBpcyBhbiByYWNpbmcgdmlkZW8uIApJdCdzIHdpZGVseSBhY2NlcHRlZCB0aGF0IHRoZSBuZXh0IHN0YWdlIGluIGh1bWFuIGV2b2x1dGlvbiB3b24ndCBiZSBzaWduYWxlZCBieSBwc3ljaGljIHBvd2VycyBvciBnbG93aW5nIHBlYWNlbmlrIGVuZXJneSBiZWluZ3MsIGJ1dCB3aGVuIHBlb3BsZSBzdG9wIGdvaW5nIHRvIGNhc2lub3MuCk9uY2UgbW9yZSB1cHBlciBsaW1pdCBiZXRzIGFyZSB1c2VkLiBFYWNoIHR1cm4gb2YgdGhlIGNhcmRzIGNhbiBsZWFkIHRvIGRlc3RydWN0aW9uIG9yIGdsb3J5Li4gClRoZSBjb21wYW55IGhhcyB0YWtlbiAic2lnbmlmaWNhbnQgcHJlY2F1dGlvbnMiIHRvIGNvbnRyb2wgb2RvdXIgYXQgaXRzIFBlbGhhbSBmYWNpbGl0eSBhbmQgaXQgaGFzbid0IHJlY2VpdmVkIGFueSBzbWVsbCBjb21wbGFpbnRzLCBBY2V0byBzYWlkLCBidXQgaXQgaGFzIGJlZW4gY29udGFjdGVkIGJ5IHRoZSBjb3VudHkgYWJvdXQgbGlnaHQgcG9sbHV0aW9uLgozIG1vcyBhZ28gKyBCeSBCaWxsIExpdmluZ3N0b24sIFRoZSBQbGFpbiBEZWFsZXJVcmJhbiBNZXllcidzIENocmlzdG1hcyBsZXNzb246IEJpbGwgTGl2aW5nc3RvbiBVcmJhbiBNZXllcidzIENocmlzdG1hcyBsZXNzb246IEJpbGwgTGl2aW5nc3RvbiBHcmVhdCBzdWNjZXNzLCBzaWduaWZpY2FudCBzY2FuZGFsLCBmcmFnaWxlIGhlYWx0aCBhbmQgaW5hYmlsaXR5IHRvIGdvIGF0IGFueXRoaW5nIG90aGVyIHRoYW4gZnVsbCBzcGVlZCBsZWQgdG8gT2hpbyBTdGF0ZSBjb2FjaCBVcmJhbiBNZXllcidzIHJlc2lnbmF0aW9uLjMgbW9zIGFnbyArIEJ5IEJpbGwgTGl2aW5nc3RvbiwgVGhlIFBsYWluIERlYWxlckV4cGFuZGluZyB0aGUgQ29sbGVnZSBGb290YmFsbCBQbGF5b2ZmIHdpbGwgaW1wcm92ZSBpdDogQmlsbCBMaXZpbmdzdG9uIEV4cGFuZGluZyB0aGUgQ29sbGVnZSBGb290YmFsbCBQbGF5b2ZmIHdpbGwgaW1wcm92ZSBpdDogQmlsbCBMaXZpbmdzdG9uIEZpdmUgcG93ZXIgY29uZmVyZW5jZXMgYW5kIHF1YWxpZmllZCBvdXRzaWRlcnMgd2lsbCBub3QgZ28gaW50byB0aGUgZm91ciB0ZWFtIENvbGxlZ2UgRm9vdGJhbGwgUGxheW9mZi4gCkhpZ2hlciBlZHVjYXRpb24KQWRkIGluIHRoZSB0aW1lLCBwbHVzIHRoZSBjb2ZmZWUgZ3JvdW5kIGFuZCBtaWxrLCByYW5kb20gZXN0aW1hdGUgb2YgbGlrZSAkNzAwLiAKOC4gVGhlIGhpdCBwYXJhZGUKSW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gCkFuZCB3YXMga25vd24gZm9yIGJldHRpbmcgYmlnIG9uIHZpZGVvIHBva2VyIGFuZCBzdGFyaW5nIGRvd24gZmVsbG93IGdhbWJsZXJzLiAKTCdhc3NvY2lhdGlvbiBkZSBjb21tZXJhbnRzIGNyZSByY2VtbWVudCBlc3QgZHNvcm1haXMgdHJzIHByc2VudGUgZGFucyBsZXMgZGlmZnJlbnRlcyBydW5pb25zLiBFdCwgdW5lIGZvaXMgZGUgcGx1cywgZWxsZSB0aXJlIGxhIHNvbm5ldHRlIGQnYWxhcm1lIHN1ciBsZSBzZWN0ZXVyIEdvdXR0ZSBkJ09yIGF2ZWMgbGVzIHRyYWZpY3MgcXVpIGdhbmdybmVudCBsZSBxdWFydGllciBldCBxdWkgcmVuZGVudCBsYSB2aWUgaW1wb3NzaWJsZS4gCkknbSBzb3JyeSB0aGF0IHlvdSB0aGluayB0aGF0LiAKNiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvSSBkb24gZHJpbmsgQmxvb2R5IE1hcnlzIHNvIGRvbiByZWFsbHkga25vdyB3aGVyZSB5b3UgY291bGQgZ28gZm9yIHRoYXQsIGEgcXVpY2sgR29vZ2xlIHNlYXJjaCBkb2VzIHR1cm4gdXAgdHdvIGdvb2QgYmFyczsgdGhlIC9hdXQvIEJhciBDYWZlIFpvbGEuQXZlbnR1cmEsIGJlaW5nIGEgdGFwYXMgcGxhY2Ugd291bGQgYmUgaWRlYWwgZm9yIHlvdXIgYXBwZXRpemVyIGxvY2F0aW9uLCBhcyBhbnkgb2YgdGhlaXIgdGFwYXMgd291bGQgd29yayB3ZWxsIGFzIGFuIGFwcC5Zb3UgY291bGQgZ28ganVzdCBhYm91dCBhbnl3aGVyZSBmb3IgYSBnb29kIGRpbm5lciBkZXBlbmRpbmcgb24geW91ciBmb29kIGRlc2lyZTsgSSBub3QgYSBiaWcgZmFuIG9mIEpvbGx5IFB1bXBraW4sIGJ1dCB0aGF0IHBlcnNvbmFsIHByZWZlcmVuY2UuIApCYWNrZ3JvdW5kcyBmb3IgYW1vbGVkIHBob25lcwpBc2sgZm9yIGEgImRvbnV6IGx1bGVzaSIgYW5kIGEgImthcnRvc2hrYSBsdWxlc2kiIChncm91bmQgcG9yayBrZWJhYiBhbmQgbWFzaGVkIHBvdGF0byBrZWJhYikuIApIaXMgaGFzIGNoYW5nZWQgYXMgd2VsbCwgYW5kIGlzIGNlcnRhaW5seSBtb3JlIHN0cmVzc2Z1bCwgYnV0IGhlIHN0aWxsIGRvZXMgbW9zdCBvZiB0aGUgc2FtZSB0aGluZ3MgYW5kIHNlZXMgdGhlIHNhbWUgcGVvcGxlIGhlIGRpZCBwcmUga2lkcywgZXhjZXB0IHRoYXQgdGhlIHRpbWUgYWxsb3RtZW50IGlzIGRpZmZlcmVudC4gCjEwLzIwIHJ1bnMgdHdpY2UgYSB3ZWVrLiAKTWF0Y2hpbmcgeW91ciBnb2FsIHdpdGggdGhlIHByb2R1Y3QsIEJvbHRvbiBzYXlzLiB5b3Ugd2FudCBhIHF1aWNrIGZpeCwgeW91IGdvIGZvciB0aGUgV2VzdGVybiBtZWRpY2luZS4gRm9yIGluc3RhbmNlLCBhIHBlcnNvbiBtYXkgd2FudCBxdWljayByZWxpZWYgZnJvbSBpbnNvbW5pYSBhbmQgY2hvb3NlIHRvIHRha2UgYSBzbGVlcGluZyBwaWxsIGlmIGhlIGhhcyB0byBnbyBvbiBhIGxvbmcgZHJpdmUgc2V2ZXJhbCBkYXlzIGZyb20gbm93LCBhcyBvcHBvc2VkIHRvIGxvb2tpbmcgZm9yIGEgc2xvd2VyIGFjdGluZyByZW1lZHkgKHN0cmVzcyByZWR1Y3Rpb24gdGVjaG5pcXVlcywgZm9yIGluc3RhbmNlKSB0aGF0IG1heSBldmVudHVhbGx5IGFkZHJlc3Mgd2hhdCBjYXVzaW5nIHRoZSBzbGVlcGxlc3NuZXNzLgpXZSBjYXJlIHRoYXQgcGVvcGxlIGFyZSBtb3ZpbmcgaGVyZS4gV2UgZG9uJ3QgbmVjZXNzYXJpbHkgY2FyZSBpZiB5b3UgZG8gdGhvdWdoLgpIYXZlIHlvdSBldmVyIHNlZW4gYSBjaGlwIHNldCBhcyBzdHJpa2luZyBhcyB0aGUgMTAwIFBhdWxzb24gUGhhcm9haHMgQ2x1YiBQb2tlciBDaGlwIFNldD8gSXQgaXMgZG91YnRmdWwgdGhhdCB5b3UgaGF2ZSBjb25zaWRlcmluZyBhbGwgdGhlIHVuaXF1ZSBjcmFmdHNtYW5zaGlwIHRoYXQgaGFzIGdvbmUgaW50byB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlc2UgY2hpcHMuIApPbmUgb2YgbmljZXN0IGxpdmVyaWVzIG9mIHRoZSBBMzgwIG11c3QgYmVsb25nIHRvIFFhdGFyIEFpcndheXMsIHdobyBhcmUgZXhwZWN0ZWQgdG8gYmVnaW4gZmx5aW5nIHdpdGggdGhlaXIgV2hhbGUgSmV0IGluIE9jdG9iZXIgYmV0d2VlbiBEb2hhIGFuZCBMb25kb24uIFFhdGFyIEFpcndheXMgYWxzbyBhcmUgYSBtYWpvciBwbGF5ZXIgd2l0aCB0aGUgQjc4NywgYmVpbmcgb25lIG9mIG9ubHkgMTAgYWlybGluZXMgdG8gcGxhY2Ugb3JkZXJzIGZvciBib3RoLiBBaXIgTmV3IFplYWxhbmQgZGlkIG5vdCBwbGFjZSBhbnkgb3JkZXJzIGZvciB0aGUgQTM4MCwgYnV0IHRoZXkgZG8gaGF2ZSBhIHZlcnkgc2V4eSBsb29raW5nIGxpdmVyeSBvbiB0aGVpciBuZXcgNzg3IERyZWFtbGluZXIuIEJsYWNrIGxvb2tzIHZlcnkgc2xlZWsgb24gdGhpbiBhaXJjcmFmdCBsaWtlIHRoZSBCNzg3LiBQbGVhc2UgcmVhZCBteSBhbmFseXNpcyBvZnRoZSB2YXJpb3VzIGxpdmVyaWVzIG9uIHRoZSBEcmVhbWxpbmVyZm9yIG1vcmUgaW5mb3JtYXRpb24uCkhpc3RvcmljYWxseSwgdGhlIHNwb3J0IGhhcyBiZWVuIGRvbWluYXRlZCBieSB0aGUgRXVyb3BlYW5zLkh1bmdhcnkgbGVhZHMgYWxsIG5hdGlvbnMgd2l0aCBuaW5lIE9seW1waWMgZ29sZCBtZWRhbHMuVGhlIFVTQSB3b24gYnJvbnplIG1lZGFscyBpbiB0aGUgT2x5bXBpYyBHYW1lcyBpbiAxOTI0LCAxOTMyIGFuZCAxOTcyLlRoZSBVUyB0ZWFtIHdhcyBvbmUgb2YgdGhlIGJlc3QgaW4gdGhlIHdvcmxkIGluIHRoZSA4MHMuV2l0aCBUZXJyeSBTY2hyb2VkZXIgYXMgdGhlIHRlYW0gY2FwdGFpbiwgdGhlIFVTQSB3b24gc2lsdmVyIG1lZGFscyBpbiB0aGUgMTk4NCBPbHltcGljIEdhbWVzIGluIExvcyBBbmdlbGVzIGFuZCB0aGUgMTk4OCBPbHltcGljIEdhbWVzIGluIFNlb3VsLCBLb3JlYS5JbiAxOTkxLCBTY2hyb2VkZXIgbGVkIFRlYW0gVVNBIHRvIHRoZSBXb3JsZCBDdXAgdGl0bGUgaW4gQmFyY2Vsb25hLCBTcGFpbi5zaWRlIG5vdGUgcmVsYXRlZCBhcnRpY2xlOiBPbHltcGljIEFkdmFudGFnZTogQ2hpcm9wcmFjdG9ycyBXYXNoaW5ndG9uIFRpbWVzIEp1bHkgMjAxMkFmdGVyIHRoZSAxOTg4IE9seW1waWMgR2FtZXMsIFRlYW0gVVNBIHNwZW50IHRoZSBuZXh0IDIwIHllYXJzIHN0cnVnZ2xpbmcgdG8gZ2V0IGJhY2sgdG8gdGhlIG1lZGFsIHBvZGl1bS5JbiBKdW5lIG9mIDIwMDcsIHdpdGggdGhlIHRlYW0gcmFua2VkIDl0aCBpbiB0aGUgd29ybGQsIFVTQSB3YXRlciBwb2xvIGhpcmVkIERyLiAKRXRoaW9waWFuIEFpcmxpbmVzIGlzIGFuIGludGVyZXN0aW5nIG9uZS4gSSBsaWtlIHRoZWlyIGNvbG91cmZ1bCB0YWlsIGZsYWcsIGFuZCB0aGUgZXh0cmEgbGFyZ2UgZm9udCBFVEhJT1BJQU4gaW4gcmVkIGxldHRlcmluZyBhY3R1YWxseSBjb21wbGVtZW50cyB0aGUgb3RoZXJ3aXNlIHNwYXJzZSBsaXZlcnkgdmVyeSB3ZWxsLiBJIHRoaW5rIEVUIGhhdmUgZG9uZSB2ZXJ5IHdlbGwgd2l0aCB0aGlzLiBTbyBoYXZlIExBTi4gVGhlaXIgbGl2ZXJ5IGlzIHZlcnkgbmljZSwgd2l0aCBhZ2FpbiwgdGhlIGV4dHJhIGxhcmdlIGZvbnQgYXQgdGhlIGZyb250LCB3aXRoIGFuaWNlIGRlc2lnbiBhdCB0aGUgcmVhci4gSSB0aGluayB0aGUgbGVzcyBzYWlkIGFib3V0IE5vcndlZ2lhbiBBaXIgU2h1dHRsZSB0aGUgYmV0dGVyIGFuZCB3aGF0IG9uIGVhcnRoIGlzIGhhcHBlbmluZyB3aXRoIFJveWFsIEFpciBNYXJvYz8gSXQgaGFzIGFuIGFwcGFsbGluZyBsaXZlcnksIGFzIGZhciBhcyBJIGNvbmNlcm5lZC4KWW91ciB1c2Ugb2YgdGhlIHNpdGUgaW5kaWNhdGVzIHlvdXIgYWdyZWVtZW50IHRvIGJlIGJvdW5kIGJ5IHRoZSBUZXJtcyBvZiBVc2UuLiAKSSBzZWUgdGhlbSBhcyBtb3N0bHkgZXh0cmVtZWx5IGxlZnQgbGVhbmluZyBiYXNlZCBvbiB0aGUgbW9zdCB1cHZvdGVkIGNvbW1lbnRzIGdlbmVyYWxseS4gSXQgc2VlbXMgdG8gYmUgdGhhdCBldmVuIG9uIHRoZSBjb25zZXJ2YXRpdmUgc2lkZSB3aGVuIHRoZXkgYXJlIHBybyBsaWZlLCBwcm8gZ3VuLCBwcm8gY2hyaXN0aWFuLCBwcm8gd2FsbCwgcHJvIHdhciBldGMgZXRjIGV0YyBpdCBhbG1vc3QgdW5yZWFsaXN0aWMgICB0aGV5IGp1c3QgYXJlIGhpdGNoaW5nIHRoZW1zZWx2ZXMgdG8gYWxsIHRoZSB0YWxraW5nIHBvaW50cy4KVGhhdCB3aGVuIGhlciBkcmlua2luZyBqdXN0IHdlbnQgb3V0IG9mIGNvbnRyb2wuIApNZW1vcmlhbCBEYXkgaXMgb2J2aW91c2x5IGFuIGltcG9ydGFudCByaXR1YWwsIGJ1dCBub3QgdG8gcmVtZW1iZXIgZmFsbGVuIHNvbGRpZXJzLCB3aGljaCBzZWVtcyB0byBoYXZlIGJlZW4gaXRzIG9yaWdpbmFsIGludGVudCAoYWx0aG91Z2ggdGhlIGhpc3RvcmljYWwgcmVjb3JkIGlzIHNvbWV3aGF0IHVuY2xlYXIgb24gd2hvIHN0YXJ0ZWQgaXQgYW5kIHdoZXRoZXIgaXQgd2FzIHRvIHJlbWluZCBvdXJzZWx2ZXMgdGhhdCB0aGUgY29zdHMgb2Ygd2FyIGFyZSB0b28gaGlnaCBvciBqdXN0IHRvIG1ha2UgaGVyb2VzIG9mIHRob3NlIHdobyBoYWQgZGllZCBhcyBzb2xkaWVycykuIEluIGFueSBldmVudCwgdGhlIGZhY3QgaXMgdGhhdCBNZW1vcmlhbCBEYXkgaGFzIGJlY29tZSBhIHJpdHVhbCBvZiBzdW1tZXIsIGEgd2F5IHRvIG1hcmsgdGhlIGJlZ2lubmluZyBvZiB0aGUgc2Vhc29uIG9mIHN3aW1taW5nIHBvb2xzLCBiYnFzLCBhbmQgdG8gYXQgbGVhc3QgaW1hZ2luZSB0aGF0IG91ciBsaXZlcyBoYXZlIG1vcmUgbGVpc3VyZSBpbiB0aGVtLiAKV2UgZG9uJ3QgcmlvdCBiZWNhdXNlIHdlIGFsbCB3b3JrIHRvbyBtdWNoIHRvIGp1c3QgYmFyZWx5IG1ha2UgZW5kcyBtZWV0LCBhcyBpdCBpcywgYW5kIHdlIGNhbid0IGFmZm9yZCB0byB0YWtlIHRoZSB0aW1lIG9mZi4gVGhlcmUncyBhIGxvdCBvZiBmZWFyIG91dCB0aGVyZS4gVGhlcmUncyBub3RoaW5nIHdyb25nIHdpdGggdXMsIGFzIGNpdGl6ZW5zLiAKWW91IGR1ZyB5b3VyIG93biBob2xlIGFuZCB5b3UgZHVnIHNldmVyYWwgbW9yZSBtaWxlcyBkZWVwZXIgc2luY2UgdGhlbi4uIApIb3cgdG8gYXBwbHkgZm9yIHVuZGVyZ3JhZHVhdGUgY291cnNlcwpGcmVlcm9sbCB0b3VybmFtZW50cyBhcmUgZnJlZSBlbnRpcmVzIGludG8gcG9rZXIgdG91cm5hbWVudHMgdGhhdCBjb3N0IG5vdGhpbmcgdG8gZ2V0IGludG8uIFRoZXNlIHBheSBjYXNoIG9yIG90aGVyIGF3YXJkcyB0byB0aGUgcGxheWVyIGRlcGVuZGluZyBvbiBob3cgd2VsbCB0aGV5IGRpZCBkdXJpbmcgdGhlIHRvdXJuYW1lbnQuIFlvdSBjYW4gZWl0aGVyIGVudGVyIGEgZnJlZXJvbGwgd2hlbiB0aGV5IGFyZSBtYWRlIGF2YWlsYWJsZSBvciB5b3UgY291bGQgcmVjZWl2ZSBhbiBpbnZpdGF0aW9uIGZyb20gdGhlIG9ubGluZSBwb2tlciByb29tIGl0c2VsZi4gCkEgc291cmNlIGNvbmZpcm1lZCBUdWVzZGF5IHRoYXQgdGhlIE1MUyB0ZWFtIGhhcyByZWFjaGVkIGFuIGFncmVlbWVudCBpbiBwcmluY2lwbGUgdG8gYWNxdWlyZSBTcGFuaXNoIGF0dGFja2luZyBtaWRmaWVsZGVyIEFsZWphbmRybyBQb3p1ZWxvIGZyb20gQmVsZ2lhbiBsZWFndWUgbGVhZGVyIEtSQyBHZW5rLgpJIGxhcmdlIHBvcnRpb24gb2YgdGhlIHNjb3BlcyBhcmUgYmVpbmcgYXZvaWRlZCBieSB0aGUgcGxheWVyIGJhc2UsIGFuZCBJIHRoaW5rIHRoaXMgc2hvdWxkIGJlIGFkZHJlc3NlZCBlYXJseSBpbiB0aGUgZ2FtZXMgbGlmZS4gCkV0IGwgYXZlYyBsZSBzb2xlaWwsIGMgY2xhaXIgY29tbWUgc3ltYm9sZS4gCjkuIE9uZSBDaGFwdGVyIGF0IGEgVGltZQpJd2lsbHdpbndvcmxkcyB1ClRoaXMgaGFwcGVuZWQgY29uc3RhbnRseSBmcm9tIDEwIG9ud2FyZHMuIEkgZXZlbiBoYWQgYSBkdWRlIChhdCBsZWFzdCAzNSkgc2VuZCBmbG93ZXJzIGFuZCBhIGdvbGQgY2hhaW4gdG8gbWUgYXQgbXkgbW9tcyBob3VzZSB3aGVuIEkgd2FzIGFib3V0IDE1LiBNeSBtb20gd2FzIHJlYWxseSBubyBoZWxwIHdpdGggdGhpcyBzdHVmZi4gClN0ZXBoZW4gSGF3a2luZ1N0ZXBoZW4gSGF3a2luZydzIG51cnNlICdzdXNwZW5kZWQgYW5kIGFjY3VzZWQgb2Ygc2VyaW91cyBtaXNjb25kdWN0IG92ZXIgaGlzIGNhcmUnUGF0cmljaWEgRG93ZHksIDYxLCBmYWNlcyBhIE51cnNpbmcgYW5kIE1pZHdpZmVyeSBDb3VuY2kgJ2ZpdG5lc3MgdG8gcHJhY3Rpc2UnIGhlYXJpbmcgd2hpY2ggaXMgZHVlIHRvIGVuZCBsYXRlciB0aGlzIG1vbnRoIGFmdGVyIHNjaWVudGlzdCBkaWVkIGxhc3QgeWVhcgpUaGUgTGliZXJhbHMgdGhpbmsgdGhlIENvbnNlcnZhdGl2ZXMgYW5kIHRoZSBORFAgYXJlIGNvIG9wZXJhdGluZyBiZWhpbmQgdGhlIHNjZW5lcyBpbiB0aGUgZGViYXRlIG5lZ290aWF0aW9ucywgY29udGludWluZyBhIGxvbmcgcnVubmluZyB0YWN0aWNhbCBhcnJhbmdlbWVudCB0aGF0IGFsbG93cyB0aGUgbGVmdCB3aW5nZXJzIGFuZCByaWdodCB3aW5nZXJzIHRvIHNxdWVlemUgdGhlIExpYmVyYWxzIGZyb20gYm90aCBzaWRlcy4KSW4gZ2VuZXJhbCwgZ3JhaW5zIGFuZCBiZWFucyBhcmUgY29uc2lkZXJlZCB0byBicmluZyBzdGFiaWxpdHkgdG8gdGhlIGJvZHkuIApBZ3JlZWQuIEkgcmVhbGx5IGZlZWwgdS9zdHJpa2V0aHJlZWlzdGFrZW4gd2FzIGJlaW5nIG92ZXJseSBzZW1hbnRpYy4gCkxvc2UgYSBjb3VwbGUgc21hbGwgcG90cywgYWRkIG9uIGFub3RoZXIgMjAwIGFuZCBjb21wbGV0ZWx5IGNhcmQgZGVhZCBmb3IgYW5vdGhlciBob3VyIG9yIHR3by4gQXQgdGhpcyBwb2ludCBpdHMgYWJvdXQgbWlkbmlnaHQsIEknbSBraW5kYSB0aWx0ZWQsIGluIGZvciA4MDAgd2l0aCBqdXN0IHVuZGVyIDQwMCBpbiBmcm9udCBhbmQgdGhlbiB0aGlzIHdlaXJkIG9uZToKWW91IGNhbiBvbmx5IG1ha2Ugb25lIHRoaW5nIHdvcmsgYXQgYSB0aW1lLiBVcmdlZCB0aGUgYXVkaWVuY2UgdG8gZm9jdXMgb24gaGlzIHRocmVlIG1hbnRyYXM6IGVudHJlcHJlbmV1cnNoaXAsIG1hcmtldGluZywgYW5kIHBoaWxhbnRocm9weS4gSXMgZ29vZCBidXNpbmVzcywgaGUgc2FpZC4gCkRhcyBMaWNodCwgZGllIEJsdW1lbiwgbWVpbiBwYXVzYmNraWdlcyBMY2hlbG4uIApQc3ljaG9sb2dpc3RzIHdobyBhY2NlcHQgdW5oYXBwaW5lc3MgYXMgYSBmYWN0IG9mIGxpZmUgYXJlIGNvbmNlcm5lZCB0aGF0IHRoaXMgZm9jdXMgb24gaGFwcGluZXNzIHBhaW50cyBhbiBpbmNvbXBsZXRlIHBpY3R1cmUgb2Ygd2hhdCBpdCBtZWFucyB0byBiZSBhIGh1bWFuIGJlaW5nLiBUaGlzIG9ic2Vzc2lvbiBoYXMgbGVkIHRvIHNldmVyYWwgbXl0aHMgYWJvdXQgaGFwcGluZXNzLCBsaWtlIHRoZSBpZGVhcyB0aGF0ICJoYXBwaW5lc3MgaXMgdGhlIG5hdHVyYWwgc3RhdGUgb2YgaHVtYW4gYmVpbmdzIiBhbmQgdGhhdCAiaWYgeW91J3JlIG5vdCBoYXBweSwgeW91J3JlIGRlZmVjdGl2ZSIgW3NvdXJjZTogQnVocl0uLiAKSSB3YXMgZGVjbGFyZWQgZGVhZCBhdCAyMSBhbmQgZGlkbiBmaW5kIG91dCB1bnRpbCBJIHdhcyAyNCAgIGV2ZW4gbWFuYWdlZCB0byBnZXQgYSBjb3B5IG9mIHRoZSBjZXJ0aWZpY2F0ZSBmcm9tIE5ldyBZb3JrLiBJIGhhZCBuZXcgcGFwZXJzIGlzc3VlZCBmcm9tIFNvY2lhbCBTZWN1cml0eSBBZG1pbi4uIApDYW4gYmUgZm91bmQgb24gaVR1bmVzLiAzNikgTHV2IFUgU3VtIGJ5IENKIEhvbGxhbmQgZmVhdHVyaW5nIExhZHkgR2FHYS4gU2VhcmNoIFlvdXR1YmUgZm9yIHRoaXMgc29uZy4gCkh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBob3VycyBhbmQgYmlsbGlvbnMgb2YgZG9sbGFycyBhcmUgd2FzdGVkIG9uIHJlZCB0YXBlIGV2ZXJ5IHllYXIuIFN0dWRpZXMgY29uZmlybSB0aGF0IGFsbCB0aGlzIHdhc3RlIHRyYW5zbGF0ZXMgaW50byBsb3dlciBpbmNvbWVzLCBsZXNzIGVjb25vbWljIGdyb3d0aCwgbW9yZSBwb3ZlcnR5IGFuZCBoaWdoZXIgbGV2ZWxzIG9mIGluY29tZSBpbmVxdWFsaXR5LiBUaGF0IHdoeSAxMCB5ZWFycyBhZ28gdGhlIENhbmFkaWFuIEZlZGVyYXRpb24gb2YgSW5kZXBlbmRlbnQgQnVzaW5lc3MgbGF1bmNoZWQgaXRzIGZpcnN0IGFubnVhbCBSZWQgVGFwZSBBd2FyZW5lc3MgV2Vlay4uIApTbyBhIGNvdXBsZSBvZiBkZXZzIHdobyBzaG91bGQgb25seSBiZWVuIHRoZSBlbmFibGVyIG9mIHRoZSB1c2VycyB3aXNoIGFyZSBub3cgaW4gdGhlIGRlY2lzaW9uIG1ha2luZyBwb3NpdGlvbi4gCklmIGxvc2luZyB3ZWlnaHQgaXMgd2hhdCB5b3VyIGNoaWxkIHdhbnRzIHRvIGRvLCBzdXBwb3J0IGl0LiBPdGhlcndpc2UsIHlvdSBjb3VsZCBtZXNzIHRoZW0gdXAgbG9uZyB0ZXJtIGFuZCBpbmFkdmVydGVudGx5IHJlaW5mb3JjZSB0aGUgbWVzc2FnZSB0aGUgYnVsbGllcyBhcmUgZ2l2aW5nIGFuZCB5b3VyIGtpZCBjb3VsZCBlbmQgdXAgd2l0aCBtYWpvciBib2R5L3NlbGYgZXN0ZWVtIGlzc3VlcyBnb2luZyBpbnRvIGFkdWx0aG9vZC4uIApXZSBwcm92aWRlIGEgbGV2ZWwgb2YgdHJhbnNwYXJlbmN5IGFuZCBhY2NvdW50YWJpbGl0eSB0aGF0IGlzIGV4dHJlbWVseSByYXJlIG9uIHJlZGRpdC4uIApPciBpbiBvdGhlciB3b3Jkcywgd2hpY2ggZm9ybSBoYXMgYmV0dGVyIGhlYWx0aCBvdXRjb21lcywgYmV0dGVyIG1vcnRhbGl0eSByYXRlcz8KVGhpcyBpcyBhZG1pdHRlZGx5IGFuIGV4dHJlbWVseSBzaW1wbGlzdGljIHN0cmF0ZWd5LCBidXQgaXQgaXMgYWN0dWFsbHkgbm90IHRvbyBmYXIgZnJvbSBjb3JyZWN0IGVhcmx5IGdhbWUgcGxheSBpbiBzaXQgYW5kIGdvIHRvdXJuYW1lbnRzIGF0IGFueSBzdGFrZXMuIAogOSBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvVGhleSBnb3QgaW50byB0aGlzIG9uIHRoZSByZWNlbnQgZXBpc29kZSBvZiBUaGUgRG9ja2V0IGFuZCB0aGV5IHNhaWQgdGhhdCwgYWNjb3JkaW5nIHRvIHRoZSBTaGF3Y3Jvc3MgZG9jdHJpbmUsIGl0IGRvZXNuIG1hdHRlciB0aGF0IEpXUiB3YXNuIGdvaW5nIHRvIGNhdmUgdG8gdGhlIHByZXNzdXJlLiAKSG93ZXZlciwgaXQgaXMgbmVjZXNzYXJ5IHRvIHR1cm4gYSBjaXZpbGlhbiBpbnRvIGEgUm95YWwgTWFyaW5lcyBDb21tYW5kby4gTWFueSBwZW9wbGUgYXNrIGhvdyBoYXJkIGl0IGFjdHVhbGx5IGlzLiAKSXQgd2FzIHV0dGVybHkgcGFpbmxlc3MuIAogMTYwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0xvbmcgc3Rvcnkgc2hvcnQ7IG92ZXIgdGhlIHBhc3QgY291cGxlIG9mIHllYXJzIHRoZSBpbmNyZWFzaW5nbHkgdW5wb3B1bGFyIGdvdmVybm1lbnQgdHJpZWQgdG8gcGFzcyBhIGhlYWx0aGNhcmUgcmVmb3JtIHdoaWNoIGluY2x1ZGVkIHRoaW5ncyBsaWtlIHByaXZhdGl6YXRpb24sIHByb2ZpdGluZyB0aGUgYmlnZ2VyIHByaXZhdGUgaGVhbHRoY2FyZSBwcm92aWRlcnMuIFRoaXMgd2FzIGEgdmVyeSBjb250cm92ZXJzaWFsIHJlZm9ybSB3aGljaCBnb3QgYSBsb3Qgb2YgcHVzaGJhY2ssIHVudGlsIGl0IG5vdyBmaW5hbGx5IGZhaWxlZCBwcm9wZXJseS5UaGUgZ292ZXJubWVudCBpcyByZXNpZ25pbmcgbm93IG9ubHkgd2Vla3MgYmVmb3JlIHRoZSBuZXcgcGFybGlhbWVudGFyeSBlbGVjdGlvbiBhbmQgaXQgZG9lc24gcmVhbGx5IG1ha2UgYSBodWdlIGRpZmZlcmVuY2UuIApTb2NpYWwgc2VydmljZXMgcHJhY3RpdGlvbmVyIGVuZ2FnZW1lbnQgZXZlbnRzCkJ1dCB0aGV5IGFyZSBuZXZlciBvdXRlZCBmb3IgYmVpbmcgc3RyYWlnaHQuIExpa2UgbW9zdCByYWNpc3RzIGFyZSBub3QgcGFzc2luZyBhcyB3aGl0ZXMgYnV0IHNlY3JldGx5IG9mIGNvbG9yIGFuZCBtb3N0IGFudGkgU2VtaXRlcyBhcmUgbm90IGFjdHVhbGx5IEpld2lzaC4uIAoiV2hhdCBpcyBzdHJpa2luZyBhYm91dCB0aGUgbmV3IENhbmFkYSdzIEZvb2QgR3VpZGUgaXMgdGhlIHNoaWZ0IHRvIGEgYnJvYWRlciBhcHByb2FjaCAgIHRhbGtpbmcgbm90IG9ubHkgYWJvdXQgd2hhdCBDYW5hZGlhbnMgc2hvdWxkIGVhdCwgYnV0IGFsc28gaG93IHRoZXkgc2hvdWxkIGVhdCwiIHNhaWQgTmF0aGFsaWUgU2F2b2llIG9mIHRoZSBEaWV0aXRpYW5zIG9mIENhbmFkYSwgd2hvIGFwcGVhcmVkIHdpdGggUGV0aXRwYXMgVGF5bG9yIGF0IHRoZSBvZmZpY2lhbCB1bnZlaWxpbmcgaW4gTW9udHJlYWwgVHVlc2RheS4KQmFya2hvcm4gKDMwMSksIEcuIFJhbGwgKDI3NSksIGV0YywgZXRjLCBldGMsIC4gCk9uIHRoZSB0b3BpYyBvZiB0ZWFtbWF0ZXMsIGFuZCB0aGF0IHRpcCBpcyBzb2xlbHkgdG8gY2xpbWIgaW4gc29sb3EsIGJ1dCBsZWFybiB0byBhZGFwdCB0byB0aGVtLiBHb3QgMiBiYWxsY2hhc2VycyBvbiB5b3VyIHRlYW0gPyBEb24geW91IGV2ZXIgZ28gcGFzdCBtaWQgZmllbGQuIApUaGUgQ29sb3JmdWwgSGlzdG9yeSBvZiBOYWlsIFBvbGlzaApJdCB3aWxsIGFsbW9zdCB0dXJuIG91dCBjaGVhcGVyIHRoYW4gYnV5aW5nIGEgZnVsbCBjdXN0b20gc2V0dXAuIApJZiB0aGV5IGhhbmRsZWQgcHJldmlvdXMgcGF5bWVudHMgZGlmZmVyZW50bHkgKHRocm91Z2ggVHJ1bXAgaGltc2VsZiBvciB0aGUgZm91bmRhdGlvbikgdGhlbiBUcnVtcCBjb3VsZCBwb3RlbnRpYWxseSBzZWUgc29tZSBqYWlsIHRpbWUgb24gdGhpcyBpc3N1ZSBvbmNlIGhlIGlzIG91dCBvZiBvZmZpY2UuIApUaGUgY29uY2VybiBwZW9wbGUgd291bGQgaGF2ZSBpcyB0aGF0IGxlYXJuaW5nIHRoZSBrYW5qaSBvdXRzaWRlIG9mIFdhbmlrYW5pIHdvdWxkIGludGVyZmVyZSB3aXRoIHRoZSBTUlMgaW50ZXJ2YWwuIEFzIGluLCB0aGUgU1JTIHN5c3RlbSB3b3VsZCBsaWtlIGZvciB5b3UgdG8gc3BlbmQgYSBjZXJ0YWluIGFtb3VudCBvZiB0aW1lIG5vdCBpbiBjb250YWN0IHdpdGggYW4gaXRlbSBiZWZvcmUgZ2V0dGluZyB0aGUgbmV4dCByZXZpZXcsIGFuZCBzbyBmcm9tIHRoaXMgcGVyc3BlY3RpdmUgaXQgd291bGQgYmUgdW5wcm9kdWN0aXZlIHRvIHN0dWR5IHRoZSBrYW5qaSBvdXRzaWRlIFdhbmlrYW5pLi4gCkNhcmRzIGFyZSBhZGRlZCB1cCBieSB0aGUgbnVtZXJpYyB2YWx1ZSBvbiB0aGVpciBmcm9udHM7IGZhY2UgY2FyZHMgY291bnQgYXMgMTAgd2hpbGUgYWNlcyBjb3VudCBhcyBvbmUgb3IgMTEuIApJIHJlY2VudGx5IGxlZnQgdGhlIGNsYXNzIDEgdG8gam9pbiBhIHJhaWwgaW5kdXN0cnkgY29tcGFueSBzcGVjaWFsaXppbmcgaW4gc2lnbmFsIGVxdWlwbWVudC4gCldoYXQgYXJlIHRoZSAyIHdvcnN0IGNhcmRzIGluIHBva2VyCkhhbm5haGJhbmFuYXJveG15c294ICA0IHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpUaGlzIGlzIGFib3V0IGEgeW91bmcgZ2lybCBpbiBhIGZ1dHVyaXN0aWMgZW1waXJlIHdobyBsZWF2ZXMgaG9tZSB0byBzZWFyY2ggZm9yIGhlciBicm90aGVyLCBhIHlvdW5nIHJlY3J1aXQgZm9yIHRoZSBmbGVldCB3aG8gaGFzIGdvbmUgYSB3YWxsLiAKMjUgd2l0aCB0aGUgd2lubmluZyBwcml6ZSBhcm91bmQgJDE3LiAKVGhlIHRlYWNoZXJzIGhlcmUgZG8gc2VlbSBsYXp5IGZyb20gbXkgcG9pbnQgb2Ygdmlldy4gSSBhc2sgYWxsIG15IHN0dWRlbnRzIHRoYXQgSSB0dXRvciBhYm91dCB0aGVpciBkYXlzIGluIGRldGFpbC4gCldoZW4gSSBmaXJzdCBiZWNhbWUgY2hpZWYgYnJhbmQgb2ZmaWNlciwgSSB3YXMgZ2l2ZW4gYSBsb3Qgb2YgYWR2aWNlIGFib3V0IGhvdyB0byB0YW1lIG15IG5hdHVyYWwgcGVyc29uYS4gCkZvcmdvdHRlbiBwYXNzd29yZHMgYXJlIGEgc2VyaW91cyBwcm9ibGVtIGZvciBib3RoIElUIG1hbmFnZXJzIGFuZCB1c2Vycy4gClRoZXJlIGEgd29ybGQgb2YgZGlmZmVyZW5jZSBiZXR3ZWVuICJzZWxmIHN0dWR5IHZzLiBVbml2ZXJzaXR5IGZvciBzb2Z0d2FyZSBkZXZlbG9wbWVudCIgYW5kICJzZWxmIHN0dWR5IHZzLiAKQW4gaWRlb2xvZ3kgdGhhdCBiZWxpZXZlcyB0aGF0IG91ciBpbm5lciBuYXR1cmUgaXMgd3JpdHRlbiBvbiBvdXIgcGh5c2ljYWwgc2VsdmVzLiBBbiBpZGVvbG9neSBvZiBldWdlbmljcyAgd2lzaGluZyB0aGUgc2hvcnQgYW5kIHRoZSBmYXQgd291bGQgZ28gYXdheS4uIAoyMCwwMDAgd2VsbCB3aXNoZXJzIHR1cm5lZCB1cCB0byBjaGVlciB0aGUgYnJpZGUgYW5kIGdyb29tLiAKVm9uc3dpc2hhICAzMSBwb2ludHMgIHN1Ym1pdHRlZCAyNiBkYXlzIGFnbwpJZiB5b3UgcnVuIGFjcm9zcyB0aGUgd29yZCAiSW5zZXJ0IiwgdGhpcyB3aWxsIGluZGljYXRlIHRoYXQgdGhlcmUgaXMgYSBzbWFsbCBtZXRhbCBwaWVjZSB0aGF0IGhhcyBiZWVuIHBsYWNlZCB1bmRlcm5lYXRoIHRoZSBjbGF5IGR1cmluZyB0aGUgY29uc3RydWN0aW9uIHByb2Nlc3MuIFRoaXMgcGllY2Ugd29ya3MgdG8gcHJvdmlkZSBhIGhpZ2hlciBsZXZlbCBvZiB3ZWlnaHQgdG8gdGhlIGNoaXAgdGhhdCBpdCBpcyBpbnNlcnRlZCBpbi4gWW91IHdpbGwgbm90IHR5cGljYWxseSBmaW5kIHRoZXNlIGluIEFsbCBDbGF5IFBva2VyIENoaXBzLCBhcyB0aGUgY2xheSB1c2VkIGlzIHRoZSBoaWdoZXN0IHF1YWxpdHkuIApJIHN0aWxsIHRoaW5rIHRoYXQgZGF0YSwgd2hpY2ggaXMgZXhjbHVzaXZlIHRvIENhbmFkYSBhbmQgbm90IGV2ZXJ5d2hlcmUgKGluIG1hbnkgMm5kIGFuZCAzcmQgd29ybGQgY291bnRyaWVzLCBtYW55IHdvbWVuIGFyZSBmb3JjZWQgdG8gYmUgbWFycmllZCkgc2F5cyB0aGF0IG1hcnJpYWdlIGlzIGR5aW5nIG9mZiwgbm90IG1vbm9nYW15LiBJdCB0YWxrcyBhYm91dCBjb21tb24gbGF3IGNvdXBsZXMgYW5kICJmYW1pbHkgdW5pdHMiOyBub3Qgc28gbXVjaCBwZW9wbGUgY2hvb3NpbmcgdG8gc3RheSBzaW5nbGUgb3IgYW55dGhpbmcgYWJvdXQgcG9seSBmYW1pbHkgdW5pdHMgKEkgZG91YnQgdGhhdCB3aWxsIGJlIHRvdWNoZWQgb24gYW55dGltZSBzb29uIHNpbmNlIHNhbWUgc2V4IGhvdXNlaG9sZHMganVzdCBqb2luZWQgdGhlIGRhdGEpLiAKUGxlbnR5IG9mIGRlY2VudCBnZW50bGVtYW4gSSBrbm93IGFyZSB3b3JyaWVkIGFib3V0IGJhc2VsZXNzIGFsbGVnYXRpb25zLCBub3QgYmVjYXVzZSBvZiBob3cgb2Z0ZW4gdGhleSBoYXBwZW4sIGJ1dCBmb3IgdGhlIHZlcnkgcmVhbCBwb3NzaWJpbGl0eSBvZiBoYXZpbmcgeW91ciBsaWZlIHR1cm5lZCB1cHNpZGUgZG93biBpbiB0aGF0IHNjZW5hcmlvLiBXaGlsZSBJIGFtIGFsbCBmb3IgYW4gZW52aXJvbm1lbnQgdGhhdCBpcyBzYWZlIGZvciB2aWN0aW1zIHRvIHJlcG9ydCBjcmltZXMsIEkgYW0gbm90IGEgZmFuIG9mIGd1aWx0eSB1bnRpbCBwcm92ZW4gaW5ub2NlbnQgc2NlbmFyaW9zLiBFdmlkZW5jZSBkb2VzbiBzZWVtIHRvIG1hdHRlciBpbiB0aGUgY291cnQgb2YgcHVibGljIG9waW5pb24gYW5kIGl0IHNvbWV0aGluZyBwbGVudHkgb2YgbWVuIGRvbiB3YW50IHRvIGJlIGEgY2F1c2FsaXR5IG9mLgpCb3RoIGNhbWUgdG8gaGltIGxhdGVyIHdoZW4gaGUgdGVhbWVkIHVwIHdpdGggRnJlZGRpZSBSb2FjaC4uIApBZGlldSBsYSBER0NDUkYsIGJvbmpvdXIgbGEgRERQUC4uIApJZiBJIGhhZCB0byBndWVzcywgSSB3b3VsZCBzYXkgVm9ydC4gClNhY3JpZmljaWFsIGxhdyBwcmVjbHVkZXMgSmVzdXMgZnJvbSBiZWluZyBhIHNhY3JpZmljZSBmb3IgYSBudW1iZXIgb2YgcmVhc29ucy4gQmlnZ2VzdCA0IHJlYXNvbnMgYXJlOiB1bmFjY2VwdGFibGUgbG9jYXRpb24gdG8gc2FjcmlmaWNlLCB1bmFjY2VwdGFibGUgdG8gc2FjcmlmaWNlIGEgaHVtYW4sIHVuYWNjZXB0YWJsZSB0byBzYWNyaWZpY2UgaW4gb3JkZXIgdG8gZm9yZ2l2ZSB0aGUgd3Jvbmdkb2luZyBvZiBhIDNyZCBwYXJ0eSwgYW5kIG1vc3QgaW1wb3J0YW50bHksIGhlIGNvdWxkIG5vdCBoYXZlIHRha2VuIHRoZSBzaW4gQU5EIGJlZW4gc2FjcmlmaWNlZC4gVGhlIGFuaW1hbCB3aXRoIHRoZSBzaW4gb24gaXQgaXMgbmV2ZXIgc2FjcmlmaWNlZC4uIApZb3UgbmV2ZXIgaGFkIHRoZSBzZWxmIGVzdGVlbS4gWW91IGp1c3QgaGFkIGEgZ3JlYXQgc29jaWFsIGNpcmNsZS4gWW91IHdlcmUgY29uZmlkZW50IGluIHlvdXIgZmVlbGluZyBsb3ZlIHdhcyB0cnVlIG9yIHdoYXRldmVyIHRoZSBmdWNrIHlvdSB3ZXJlIGRvaW5nLiBJIGFsc28gZmFpbGVkIHRoZSBwdXNzeSB0ZXN0IGluIEhTLgpCdXQgdGhhdCBjaGFuZ2VkIHdoZW4gTWNEb25hbGQncyBkcmFzdGljYWxseSByZWR1Y2VkIHRoZSBudW1iZXIgb2YgY28gb3BzIGFuZCB0aGUgbnVtYmVyIG9mIGFnZW5jaWVzIGFwcHJvdmVkIHRvIHdvcmsgd2l0aCB0aGVtIGluIDIwMTcuIApIb3cgVG8gUmVjZWl2ZSBNYXNzYWdlIFRoZXJhcHkgRHVyaW5nIFByZWduYW5jeQpTa3lwZSB2aWRlbyBjYWxsaW5nIHNvZnR3YXJlIGZyZWUgZG93bmxvYWQgZm9yIHBjLiBDYXJ0b29uIENhbGwgb2YgZHV0eSB3YXcgY2hlYXRzIGZvciB4Ym94IDM2MCB6b21iaWVzLiAKQW5vdGhlciBleGFtcGxlIG9mIGZyYXVkIHdhcyB0aGUgcGFzc2luZyBvZmYgb2Ygc3V0Y2hpIGNhdGZpc2ggYXMgdGhlIG1vcmUgZXhwZW5zaXZlIGhhbGlidXQsIHNuYXBwZXIsIHNvbGUgYW5kIGNvZC4KV2hlbiBvbmUgb2YgeW91ciBvcHBvbmVudHMgdGhhdCB5b3UgY29uc2lkZXIgYSBwb29yIHBsYXllciBpcyB0YWtpbmcgdGltZSB0byB0aGluaywgaGUgaXMgYWN0dWFsbHkgZGViYXRpbmcgd2hldGhlciB0byBjYWxsIG9yIGZvbGQuIApQb2xpY2UgY291bGQgc2VhcmNoIENoaW5lc2UgZHdlbGxpbmdzIHdpdGhvdXQgd2FycmFudHMuIENoaW5lc2Ugd29tZW4gd2VyZSBub3QgYWxsb3dlZCB0byBpbW1pZ3JhdGUgaGVyZSB1bnRpbCB0aGUgcnVsZXMgd2VyZSBsb29zZW5lZCBhZnRlciB0aGUgSmFwYW5lc2UgaW52YWRlZCBNYW5jaHVyaWEgaW4gdGhlIDE5MzBzLiAKTWFyaWphYywgZW4gMTk1Mywgcyd0YWl0IGludGVyZGl0IGRlIHJhY29udGVyICBzZXMgamV1bmVzIGxlY3RldXJzIGxhIG1vcnQgZGUgU09OIFNpdHRpbmcgQnVsbC4gSWwgYXZhaXQgY2hvaXNpIGQnZW4gdGVybWluZXIgbCdoaXN0b2lyZSBwYXIgdW5lIGltYWdlIG8gbCd2b2NhdGlvbiBkJ3VuZSBwYWl4IGZ1dHVyZSByZW5kIG1vaW5zIGFtcmUgbGEgcnNpZ25hdGlvbiBkZXMgc3Vydml2YW50cyAgcGVhdXggcm91Z2VzIC4gRW4gcmFsaXQsIFRBVEFOS0EgTFlPS0FURSBmdXQgZmluYWxlbWVudCBhc3Nhc3NpbiBwYXIgdW4gc2NvdXQgaW5kaWVuIHJlbmdhdCBhdXggbXVycyBkZSBzZXMgYWV1eC4gT24gdGFpdCBsZSAxNSBkY2VtYnJlIDE4OTAuIFRBVEFOS0EgTFlPS0FURSBzJ2VuZG9ybWFpdCBzb3VkYWluIHBvdXIgbGUgcGF5cyBkZXMgY2hhc3NlcyB0ZXJuZWxsZXMKRG9uIEJ1cm1hbmlhLCBzcG9rZXNtYW4gb2YgdGhlIENvbG9yYWRvIERpdmlzaW9uIG9mIEdhbWluZywgaXMgYXMgc3RhdGluZyAiV2hlbiB5b3UgcGxheSBhIHNsb3QgbWFjaGluZSBhbmQgcHJlc3MgdGhlIGJvdHRvbSB0aGUgb3V0Y29tZSBpcyBwcmV0dHkgbXVjaCBkZXRlcm1pbmVkIGltbWVkaWF0ZWx5IGJ5IGEgc2VyaWVzIG9mIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9ycy4gVGhlIHJlc3QgaXMgYmVsbHMgYW5kIHdoaXN0bGVzLiIgVGhleSBhcmUgc28gY29uZmlkZW50IHRoYXQgdGhlaXIgcGxheWVycyBkb24ndCB0aGluayBhbmQgaG9uZXN0bHkgcHJvYmFibHkgZG9uJ3QgZXZlbiByZWFkIHRoZXkncmUganVzdCBhZG1pdHRpbmcgaXQuCkl0IGlzIG9wZW4gdG8gbW90b3JjeWNsZSBjbHVicyBhbmQgaW5kaXZpZHVhbCByaWRlcnMsIGNsYXNzaWMgY2FyIGNsdWJzIGFuZCBpbmRpdmlkdWFsIGRyaXZlcnMsIGFuZCB0aGUgZ2VuZXJhbCBwdWJsaWMuIGZyb20gRGVzZXJ0IFRodW5kZXIgQ3ljbGUgd29ya3MgYXQgOTU1IE4gMTMwMCBXIDYgKG9mZiBvZiBTdW5zZXQpLCBhbmQgY2FycyB3aWxsIGxhdW5jaCBmcm9tIEZpbmRsYXkgQXV0b21vdGl2ZSBhdCAxNDA1IFMgU3VubGFuZCBEci4sIGJvdGggaW4gU3QuIEdlb3JnZS4KSSBuZWVkIHRvIGRvIHNvbWUgbW9yZSByZXNlYXJjaCBiZWZvcmUgSSBtYWtlIHVwIG15IG1pbmQuIEkgdGhpbmsgaXQgaW1wb3J0YW50IHRvIGJlYXIgaW4gbWluZCB0aGF0IHRoZXNlIGFyZSAiYnJva2VuIiBvciAid29ya2VyIiBlbGVwaGFudHMuIFRoZSBmZWVkaW5nLCB0aGUgd2Fsa2luZyBhcm91bmQsIGV0Yy4sIHNlcnZlcyB0byBicmluZyB0b3VyaXN0cyB0aGVyZSwgd2hpY2ggZ2VuZXJhdGVzIGluY29tZSwgd2hpY2ggaGVscHMga2VlcCB0aGVzZSBlbGVwaGFudHMgZnJlZSBhbmQgZnJlZSBtb3JlIGVsZXBoYW50cy4uIApSZWRkaXQgbG92ZXMgdG8gbWFrZSBhbGx1c2lvbnMgdG8gd29tZW4gYmVpbmcgaG9pdHkgdG9pdHkgYml0Y2hlcywgSSBtZWFuLCBpdCB0YWtlcyB1cCBwcmV0dHkgbXVjaCBldmVyeSAvci9hZHZpY2VhbmltYWxzLyBtZW1lIHRoYXQgZmVhdHVyZXMgYSBmZW1hbGUgaW4gaXQuLiAKVGhlIGZvcm1lciBnYW1ibGluZyBhZGRpY3QsIHdobyBkaWQgbm90IHdpc2ggdG8gYmUgbmFtZWQgYnV0IGhhZCBhZ3JlZWQgdG8gYmUgaW50ZXJ2aWV3ZWQgYnkgdGhlIHJlZ3VsYXRvciwgd2FzIGFsc28gZ2l2ZW4gbW9yZSB0aGFuIG9uZSBsb3lhbHR5IGNhcmQgc28gc2hlIGNvdWxkIGhhcnZlc3QgcG9pbnRzIGZyb20gdmFyaW91cyBtYWNoaW5lcywgTXIgV2lsa2llIHNhaWQgb24gVHVlc2RheS4gVGhlIFZpY3RvcmlhbiBDb21taXNzaW9uIGZvciBHYW1ibGluZyBhbmQgTGlxdW9yIFJlZ3VsYXRpb24gY29uZmlybWVkIGl0IGhhZCBtZXQgd2l0aCB0aGUgSG9iYXJ0IGJhc2VkIHBvbGl0aWNpYW4gYW5kIHdvdWxkIGxvb2sgYXQgdGhlIGV2aWRlbmNlIGhlIHByb3ZpZGVkLiAKU28gdWx0aW1hdGVseSBpdCBhIG1hdHRlciBvZiB0aGUgc3ViIGhhdmluZyBiZWNvbWUgc28gcG9wdWxhciB0aGF0IGl0IHN0YXJ0ZWQgdG8gZWF0IGl0c2VsZiB3aXRoIGZpY3Rpb24uIFRvIHdoaWNoIHRoZXJlIGlzIG5vIGdvb2Qgc29sdXRpb24uIApFYXJseSB3aGVuIEkgdXNlZCB0byBwbGF5IHBva2VyIGR1cmluZyB0aGUgZGF5cyBvZiBwb2tlciByb29tIHBva2VyIFN0YXIgcGFydHkgcG9rZXIsIEkgd2FzIHZlcnkgbml0dHkuIApZb3UgbXVzdCBiZWdpbiB5b3VyIHBvc3Qgd2l0aCAiTFBUIiBvciAiTFBUIFJlcXVlc3QiLgpSZXRybyBkcmVzcyBpcyBvcHRpb25hbCBmb3IgdGhlICQxMjUgZXZlbnQgYW5kIHJlc2VydmF0aW9ucyBjYW4gYmUgbWFkZSBvbiA2NTg0IDQwMzkuIAoiSWYgdGhhdCB3ZXJlIHJlYWxseSBhbGwsIEkgd291bGRuJ3QgbWluZCwgQ2FwdGFpbiBKaW0uIEkgd291bGQgdW5kZXJzdGFuZC4gQnV0IHRoZXJlIGFyZSB0aW1lcyBub3QgYWx3YXlzLCBidXQgbm93IGFuZCBhZ2FpbiAgd2hlbiBJIGFsbW9zdCBoYXZlIHRvIGJlbGlldmUgdGhhdCBMZXNsaWUgZG9lc24ndCBkb2Vzbid0IGxpa2UgbWUuIFNvbWV0aW1lcyBJIHN1cnByaXNlIGEgbG9vayBpbiBoZXIgZXllcyB0aGF0IHNlZW1zIHRvIHNob3cgcmVzZW50bWVudCBhbmQgZGlzbGlrZSBpdCBnb2VzIHNvIHF1aWNrbHkgYnV0IEkndmUgc2VlbiBpdCwgSSdtIHN1cmUgb2YgdGhhdC4gQW5kIGl0IGh1cnRzIG1lLCBDYXB0YWluIEppbS4gSSdtIG5vdCB1c2VkIHRvIGJlaW5nIGRpc2xpa2VkICBhbmQgSSd2ZSB0cmllZCBzbyBoYXJkIHRvIHdpbiBMZXNsaWUncyBmcmllbmRzaGlwLiIKVGhlcmUgYXJlIGFsc28gc29tZSBhbGwgZnJlZSBwb2tlciBzaXRlcyB0aGF0IG9mZmVyIHRvdXJuYW1lbnRzIGVpdGggd2l0aCBwcml6ZXMgb3IgY2FzaCBwcml6ZXMuIFlvdSBjYW4gcGxheSBhYnNvbHV0bHkgZnJlZSBhbmQgdGhlIHByaXplcyBhcmUgcGFpZCBmb3IgYnkgYWRzIG9uIHRoZSBzaXRlcyBhbmQgYSBwcmVtaXVtIG1lbWJlcnNoaXAgb3B0aW9uLiAKSGFuZHMgZW5kIGluIG9uZSBvZiB0aHJlZSB3YXlzOiBvbmUgcGVyc29uIGJldHMgYW5kIGV2ZXJ5b25lIGVsc2UgZm9sZHMsIG9uZSBwZXJzb24gYmV0cyBvbiB0aGUgZmluYWwgcm91bmQgYW5kIGF0IGxlYXN0IG9uZSBwZXJzb24gY2FsbHMsIG9yIGV2ZXJ5Ym9keSBjaGVja3Mgb24gdGhlIGZpbmFsIHJvdW5kLiAKTm93IEkgZG9uIGhhdmUgYSBkb2cgaW4gdGhpcyBmaWdodCwgSSBkb24gbGlzdGVuIHRvIGVpdGhlciBvZiB0aGVzZSBwZW9wbGUuIEkgY29taW5nIGludG8gdGhpcyBhcyBhIHZpc2l0b3IsIGFuZCB0aGUgaW1wcmVzc2lvbiBJIGdldHRpbmcgaXMgdGhhdCBoZSBjbG9zZSB0byBKb25lcyBpZGVvbG9naWNhbGx5IGFuZCBwZXJzb25hbGx5LCBhbmQgdGhlcmUgd2FzIGFub3RoZXIgY29tbWVudCBhYm91dCBhIHN0dWR5IHN1cHBvc2VkbHkgZGVtb25zdHJhdGluZyB0aGF0IFJvZ2FuIHByb21vdGVzIGFsdCByaWdodCB0YWxraW5nIHBvaW50cy4gQW5kIGFzIGEgdmlzaXRvciB3aXRoIG5vdCBtdWNoIG90aGVyIGNvbnRleHQsIEkgY2FuIHNheSB0aGF0IHlvdSBoYXZlLCBpbiB0aGUgYmVzdCBjYXNlLCBhIHByZXR0eSBiYWQgUFIgcHJvYmxlbS4KV2UgbWFkZSBhIHRvbiBvZiBzYWNyaWZpY2VzIGZvciBtZSB0byBzdGF5IGF0IGhvbWUgd2l0aCB0aGUga2lkcy4gCkVzcGVjaWFsbHkgYXQgNEsuIApTb21lIGRvY3RvcnMgc3RpbGwgdXNlICJEb2N0b3IiLCBhcyBkbyBzb21lIGFjYWRlbWljcywgYnV0IEkgY2FsbGVkIGEgZG9jdG9yIG9mZmljZSBpbiB0aGUgc3VtbWVyLCBhbmQgdGhlIGRvY3RvciBoaW1zZWxmIHBpY2tlZCB1cCB3aXRoICJbQXJlYV0gbWVkaWNhbCBvZmZpY2UsIHRoaXMgaXMgW0dpdmVuIG5hbWVdIi4gClNpbmNlIHlvdSBhcmUgbm90IHRoZSBvbmx5IHBlcnNvbiB0aGF0IGhhcyB0byB0YWtlIHN1Y2ggdGhpbmdzIGludG8gY29uc2lkZXJhdGlvbiwgdGhlcmUgaXMgbm90IGp1c3Qgb25lIGtpbmQgb3IgZGVzaWduIG9mIENhc2lubyBQb2tlciBUYWJsZSBGZWx0IG91dCB0aGVyZS4gClRoZSBwZXRpdGlvbmVyIHNhaWQgdGhhdCB0aGUgcG9saWNlIGNvbW1pc3Npb25lciByZWplY3RlZCB0aGVpciBhcHBsaWNhdGlvbiB0byBzdGFydCBhIHBva2VyIGNsdWIgdW5kZXIgVW1yYSBwb2xpY2Ugc3RhdGlvbiBsaW1pdHMsIGJ5IHNpbXBseSBtYWtpbmcgYSBvbmUgbGluZSBvYnNlcnZhdGlvbiB0aGF0IHBva2VyIGlzIGEgZ2FtZSBvZiBjaGFuY2UgYW5kIG5vdCBza2lsbC4KUG9rZXIgaXMgYSBwb3B1bGFyIGdhbWUgd2l0aCBtdWx0aXBsZSB2YXJpYXRpb25zLiBQb2tlciBkZWFsZXJzIGRpc3RyaWJ1dGUgY2FyZHMgdG8gcGxheWVycyBhbmQgYXJlIGluIGNoYXJnZSBvZiBvdmVyc2VlaW5nIHRoZSBhY3Rpb24gYXQgdGhlIHBva2VyIHRhYmxlLiBUaGVyZSBhcmUgc3BlY2lmaWMgc2tpbGxzIGFuZCBjaGFyYWN0ZXJpc3RpY3MgeW91IG11c3QgZGV2ZWxvcCBpbiBvcmRlciB0byBiZWNvbWUgYSBncmVhdCBwb2tlciBkZWFsZXIuIApBIHByb2Zlc3Npb25hbCBwb2tlciBzZXQgcmV2ZWFscyBhIG1pbmQgc2V0IG9mIGhpZ2ggcXVhbGl0eS4gCkJ1dCBteSBwYXJlbnRzIHNhaWQgbm8uIApQZXR0eSwgcmFiaWQsIGxpbWl0bGVzcyBhcnJvZ2FuY2U7IHNoYWxsb3csIHNvIHZlcnkgc2hhbGxvdyBjb21wcmVoZW5zaW9uIHdpdGggYmlnLCBmYWlybHkgYmlnIGNvbmNsdXNpb25zLgoxIHBvaW50ICBzdWJtaXR0ZWQgOSBtb250aHMgYWdvClRoaXJkLCBmb3VydGgsIGZpZnRoIGFjY291bnRzLiBUaGUgcGxhY2UgaXMgbm93IGZpbGxlZCB3aXRoICJyZWd1bGFyIiBhY2NvdW50cyB3aG8gaGF2ZSBsb25nIHN0YW5kaW5nIGFuZ2VyIGFzIHJlZ3VsYXIgdXNlcnMuUHJvbWluZW50IHBlcnNvbmFsaXRpZXMgdHdlZXQgb3V0IHRocmVhZHMgdG8gdGhlaXIgZm9sbG93ZXJzIHRvIGF0dGVtcHQgdG8gaW5mbHVlbmNlIHRoaW5ncy4gClRoZW4gdGhlcmUgdGhlIHJlc3QuIApEZW5zZSByYW5kb20gc2NhcnJpbmcgb2YgY29ubmVjdGl2ZSB0aXNzdWVTaWRlIG5vdGUgb24gTXlvIEZhc2NpYTogSGVyZSBpcyBhIHZlcnkgY29vbCB2aWRlbyBvbiBmYXNjaWEgZHViYmVkIGZyb20gR2VybWFuIFRWOiBGQVNDSUEKWnUgamVkZW0gZGVyIFN0cm5kZSBmaHJ0IGVpbiBndXQgZ2VzaWNoZXJ0ZXIgVHJlcHBlbndlZyBoaW5hYi4gClRoZXNlIGFyZSBhbGwganVzdCBteSBwZXJzb25hbCB1bmRlcnN0YW5kaW5nIG9mIHRoZSB3b3Jkcy4gVGFsa2luZyB0byBwZW9wbGUgd2hvIGlkZW50aWZ5IHdpdGggYW55IG9mIHRoZXNlIGxhYmVscyBtaWdodCBnaXZlIHlvdSBhIG1vcmUgbnVhbmNlZCB1bmRlcnN0YW5kaW5nIG9mIHdoYXQgaXQgbWVhbnMgdG8gdGhlbS4gUmVtZW1iZXIsIGlmIHlvdSBkb24ndCB1bmRlcnN0YW5kLCBqdXN0IGFzay4gUmVzcGVjdGZ1bGx5LgpEdSBsaWVic3QgUG9rZXIgdW5kIHdpbGxzdCBkaWUgRWluc3R6ZSBlaW4gd2VuaWcgZXJoaGVuPyBWZXJzdWNoIGVzIG1hbCBtaXQgZGVyIGhlaWVuIFZlcnNpb24gZnIgRXJ3YWNoc2VuZSwgYmVpIGRlciBkdSBidWNoc3RibGljaCBkZWluIGxldHp0ZXMgSGVtZCB2ZXJsaWVyZW4ga2FubnN0ICAgdW5kIHZpZWxsZWljaHQgc29nYXIgbm9jaCBtZWhyLiBCZWltIFN0cmlwIFBva2VyIHNldHplbiBkaWUgU3BpZWxlciBkaWUgS2xlaWR1bmdzc3Rja2UgZGllIHNpZSB0cmFnZW4gdW5kIGVuZGVuIG9mdCBpbiBVbnRlcndzY2hlIG9kZXIgZ256bGljaCBuYWNrdC4gRGFzIFNwaWVsIGlzdCBlaW5lIHRvbGxlIE1nbGljaGtlaXQgZnIgRnJldW5kZSwgZGllIGxvY2tlciB1bmQgb2ZmZW4gbWl0ZWluYW5kZXIgdW1nZWhlbiwgZGVuIGlubmVyZW4gRXhoaWJpdGlvbmlzdGVuIHJhdXN6dWxhc3NlbiB1bmQgZWluZSBzcGFubmVuZGUgTmFjaHQgdm9sbGVyIFdhZ2VtdXQgdW5kIFNwYSB6dSBnZW5pZWVuLiBTbyB3aXJkJ3MgZ2VzcGllbHQ6ClRoZXkgdGVuZCB0byBiZSBzb21ld2hhdCBuYXJyb3cgc28geW91IG1heSBub3QgYmUgdmVyeSBjb21mb3J0YWJsZSwgYW5kIHRoZXJlIG1heSBiZSBhIG1heGltdW0gd2VpZ2h0L2xvYWQgbGltaXQuIApIb3dldmVyLCB0aGUgc2l0dWF0aW9uIGhhcyBkcmFzdGljYWxseSBjaGFuZ2VkLCB0aGFua3MgdG8gdGhlIGludGVybmV0LiBUaGUgaW50cm9kdWN0aW9uIG9uIG9ubGluZSBwb2tlciBjaGFuZ2VkIGFsbCB0aGUgbWFqb3Igc3BoZXJlcyBvZiB0aGUgZ2FtZSwgZnJvbSB3aGVyZXZlciB0aGV5IGFyZSBsb2NhdGVkLi4gCkwgb24gYnV0ZSBmYWNlICB1biBwcm9ibG1lIGxvZ2lxdWUgOiBsZXMgcmVjZXR0ZXMgZGUgbCBiaWVuIHF1IG5lIHBldXZlbnQgZW4gYXVjdW4gY2FzIHRyZSBwcnBhcmVzIGVuIG9mZmljaW5lIHNhbnMgbCBkIG1kZWNpbiBhcm9tYXRocmFwZXV0ZSBheWFudCByZGlnIHVuZSBvcmRvbm5hbmNlLiAKVGhleSBkb24gdW5pdGUgZm9yIGEgY29tbW9uIGNhdXNlIGZvciBiZXR0ZXIgb3Igd29yc2UuIAoiSSdtIG9uZSBvZiB0aG9zZSBwZW9wbGUgd2hvIHRoaW5rcyB0aGF0IGFjdGlvbnMgc3BlYWsgbG91ZGVyIHRoYW4gd29yZHMsIiBzYXlzIE9kYS4gIkkgY291bGQgc2F5IGFsbCBraW5kcyBvZiB0aGluZ3MsIGJ1dCBhdCB0aGUgZW5kIG9mIHRoZSBkYXksIEknZCBsaWtlIGZhbnMgdG8gc2VlIHRoYXQgd2UncmUgdGFraW5nIGl0IHNlcmlvdXNseSBieSBzdGFydGluZyB0byByZXN1cnJlY3QgdGhlIGJyYW5kIGluIHRoZSB3YXkgdGhhdCB3ZSBhcmUgYW5kIHRvIGNvbnRpbnVlIHRvIHByb3ZlIG91cnNlbHZlcyBtb3ZpbmcgZm9yd2FyZC4gSSBsb3ZlIHJlYWRpbmcgc3VydmV5IGRhdGEuIEl0J3MgYSBncmVhdCBwYXN0aW1lLCBhbmQgSSdtIHdlbGwgYXdhcmUgdGhhdCB0aGVyZSBpcyBhIHZvaWNlIG91dCB0aGVyZSB0aGF0IHdhbnRzIHNvbWV0aGluZyBuZXcgZm9yIGdhbWVzIGxpa2UgTWVnYSBNYW4gTGVnZW5kcyBhbmQgQmF0dGxlIE5ldHdvcmsuIgpJZiBJIHNlbmQgeW91IG92ZXIgdGhlIGVtYWlsIHRoYXQgSSBmb2xsb3dpbmcgdXAgb24sIHdvdWxkIHlvdSBtaW5kIGZvcndhcmRpbmcgaXQgb3ZlciB0byB7Q0lPfSB0byBtYWtlIHN1cmUgc2hlL2hlIGdldHMgaXQ/IklmIHRoZXkgYWdyZWUsIEkgc2VuZCBpdCByaWdodCB0aGVuIGFuZCB0aGVyZS4gClRoaXMgaXMgbm90IHRoZSBzdWIgZm9yIHRoYXQuIEkgY291bGQgdmVyeSB3ZWxsIHBtIHlvdSBpZiB5b3UgZG8gd2FudCBldmlkZW5jZSAsIEJVVCBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgbWF5IEkgY29udmluY2UgeW91IG9yIG1heSB5b3UgbWVkZGxlIGFuZCBkaXNyZWdhcmQgYW55IGV2aWRlbmNlIHNob3duIHdoZXJlIGRvZXMgaXQgZ2V0IG1lPyBObyB3aGVyZS4gCkFjb3N0YSBjYWxsZWQgaGlzIG9mZmljZSBpbnZvbHZlbWVudCB1bnVzdWFsLCBnaXZlbiB0aGF0IEVwc3RlaW4gd2FzIGNoYXJnZWQgYnkgc3RhdGUgcHJvc2VjdXRvcnMgZm9sbG93aW5nIGEgZ3JhbmQganVyeSByZWNvbW1lbmRhdGlvbi4gIldlIGRlZW1lZCBpdCBuZWNlc3NhcnkgdG8gYmVjb21lIGludm9sdmVkLCBhbmQgd2UgZWFybHkgb24gaGFkIGRpc2N1c3Npb25zIHdpdGhpbiB0aGUgb2ZmaWNlLCIgRXBzdGVpbiBzYWlkLiAKSSBmaWd1cmUgc29tZWRheSBteSB0YXN0ZXMgd2lsbCBjaGFuZ2UgYnV0IHVudGlsIHRoZW4sIHRoZXJlIG5vIHBvaW50IGluIHRyeWluZyB0byBwcmV0ZW5kIHRvIGxpa2Ugc29tZXRoaW5nIHRoYXQgSSBkb24gYW5kIHdhc3RpbmcgbW9yZSBtb25leSBvbiBpdCBqdXN0IGJlY2F1c2UgaXQgc29waGlzdGljYXRlZC4KMjAxNyBXYXVjaG9wZSBQb3VsdHJ5IFNob3cKSW4gYSB3YXkgaXQgaXMgYSBmYWQsIGluIGFub3RoZXIgaXQgaXMgYWxyZWFkeSBhIGNsYXNzaWMuIChGdWxsIEFuc3dlcikuIApCdXQgaXQgdGhlcmUuIApLaWRzIHdpbGwgY2FycnkgdG95cyBvciB3aGF0IGhhdmUgeW91IHRvIGNsYXNzLiBKdXN0IHRhbGsgdG8gdGhlbSBhYm91dCBpdC4gCkNyZW1hdGlvbiBoYXMgdGFrZW4gcGxhY2UuIApJIHB1bGwgbXkgc3Rvb2wgdW5kZXIgdGhlIGhlYWRyZXN0IHNvIHRoZXkgY2FuIHJlc3QgdGhlaXIgYXJtcyBvbiBpdCBpbnN0ZWFkIG9mIHN0cnVnZ2xpbmcgdG8gc3F1ZWV6ZSB0aGVtIG9udG8gdGhlIHRhYmxlIG5leHQgdG8gdGhlaXIgc2lkZXMuIElmIGEgYmlnZ2VyIHBlcnNvbiBpcyBnZXR0aW5nIGEgYm9keSB0cmVhdG1lbnQgdGhlbiB3ZSBoYXZlIHRvIHVzZSBleHRyYSBwcm9kdWN0IGJ1dCB3ZSBkb24gY2hhcmdlIGZvciBpdC4gClRoaW5rIG9mIGhvdyBtdWNoIG1vbmV5IHdlIGNvdWxkIGNvbGxlY3QgaWYgd2UgYWxsb3dlZCB0aGUgY3JhY2sgY29jYWluZSBvZiBnYW1ibGluZyAgIHZpZGVvIHBva2VyICAgYmFjayBpbnRvIFNvdXRoIENhcm9saW5hLiAKVGhlIHRvdXJuYW1lbnQgd2lsbCBiZSBmaWxtZWQgYW5kIGRpc3RyaWJ1dGVkIGdsb2JhbGx5IHRvIG1pbGxpb25zLCBlbnN1cmluZyB0aGF0IFRoZSBWaWN0b3IgUG9rZXIgQ3VwIGlzIG9uZSBvZiB0aGUgbW9zdCB3YXRjaGVkIHBva2VyIGV2ZW50cyBpbiBoaXN0b3J5LiBUaGUgVFYgcHJvZHVjdGlvbiB3aWxsIGFsc28gZGVidXQgbWFueSBuZXcgZmVhdHVyZXMgYW5kIGlubm92YXRpb25zIHRvIHRha2UgdGVsZXZpc2VkIHBva2VyIHRvIGEgbmV3IGxldmVsIGFuZCBwcm92aWRlIHRoZSBtb3N0IGVuZ2FnaW5nIGFuZCByZXdhcmRpbmcgdmlld2VyIGV4cGVyaWVuY2UgeWV0Li4gCldoYXQgb2YgdGhlIGFsbGVnYXRpb25zIHRoYXQgU2hlcmtoYW4gYW5kIEtoYWxpbHVsbGFoIGFjdHVhbGx5IHVzZWQgS2FidWwgQmFuayBmdW5kcyB3b3J0aCAkMTYwbSB0byBidXkgcHJvcGVydHkgaW4gRHViYWk/CkkgdW5kZXJzdGFuZCBmcm9tIHJlY2VudCBwcm9qZWN0cyB0aGlzIGZlZWxpbmcsIGJ1dCB0aGF0IGlzIG5vdCB0aGUgY2FzZS4gUGhpbCBoYXMgYmVlbiBwbGF5aW5nIGZvciBuZWFybHkgMjAgeWVhcnMsIGFuZCBpcyB3ZWxsIGNvbm5lY3RlZCB0byB0aGUgZ2xvYmFsIHBva2VyIGNvbW11bml0eS4gT3VyIHBhcnRuZXJzaGlwIGNlbnRlcnMgYXJvdW5kIGhhdmluZyBoaW0gZmFjaWxpdGF0ZSBzdHJhdGVnaWMgcGFydG5lcnNoaXBzLCBhcyB3ZWxsIGFzIHVzaW5nIGhpbSB0byBnZXQgaGlzIGZlZWRiYWNrIG9uIG91ciBwcm9kdWN0IGFzIHdlbGwgYXMgb3VyIGdvIHRvIG1hcmtldCBzdHJhdGVneS4gSGUgaXMgc3RpbGwgYWN0aXZlbHkgcGxheWluZywgYW5kIGhhcyBoaXMgZmluZ2VyIG9uIHRoZSBwdWxzZSBvZiB0aGUgd2hvbGUgaW5kdXN0cnksIHRoaW5rIG5ldyB1cCBhbmQgY29taW5nIGdhbWUgdHlwZXMgKHNlZSBzaG9ydCBkZWNrIHBva2VyIGZvciBleGFtcGxlKSwgYW5kIHdpbGwgaGVscCBhZHZpc2UgdXMgb24gd2hhdCBmb3JtYXRzIHdlIHNob3VsZCBpbXBsZW1lbnQgZm9yIGFuIGluaXRpYWwgbGF1bmNoLgpUTkcgaXMgZ3JlYXQsIHRoZSBmaXJzdCB0d28gc2Vhc29ucyB3ZXJlIGEgYml0IGNoZWVzeSBidXQgaXQgcmVhbGx5IHBpY2tlZCB1cCB3aXRoIHNlYXNvbiAzLiBUaWVkIHdpdGggVE5HIGZvciBteSBmYXZvcml0ZSBpcyBkZWVwIHNwYWNlIDkuIEFnYWluIGEgcm91Z2ggZmlyc3Qgc2Vhc29uLCBsaWtlIHRoZXkgd2VyZSB0cnlpbmcgdG8gd3JpdGUgVE5HIHN0eWxlIGVwaXNvZGVzIHRoYXQgc29tZXRpbWVzIHdvcmtlZC4gT25jZSB0aGV5IGdvdCBpbnRvIGEgZ3Jvb3ZlIGl0IGdvdCBzbyBtdWNoIGJldHRlci4gSSBlbmpveSB0aGUgbW9yZSBwb2xpdGljcyBpbiBzcGFjZSBiZXR3ZWVuIHJhY2VzLCByZWFsbHkgaGVscGVkIHRvIHNob3cgYSBzaWRlIG9mIHRoZSBmZWRlcmF0aW9uIHRoYXQgeW91IGhhZG4gc2VlbiBiZWZvcmUsIHNpbmNlIGJlZm9yZSB0aGF0IHRoZXkgd2VyZSB0aGUgbWFnaWNhbCBzcGFjZSBjb21tdW5pc3RzIHRoYXQgd2VyZSB0aGUgaWRlYWwgc29jaWV0eSBhbmQgY291bGQgZG8gbm8gd3JvbmcuIERTOSBhbHNvIGRpZCBhIGxvdCBvZiBzZWFzb24gbG9uZyBhcmNzIGZvciBjaGFyYWN0ZXJzLCBhbmQgdGhlIGNoYXJhY3RlcnMgcmVhbGx5IGdyZXcgYWxvbmcgd2l0aCB0aGUgc2hvdy4gRXNwZWNpYWxseSBOb2csIHdobyBnb2VzIGZyb20gZmVyZW5naSBjaGlsZCB0byBhIGNvbXBldGVudCBzdGFyIGZsZWV0IG9mZmljZXIuIEl0IGFsc28gaGFzIGEgZmFudGFzdGljIE1yLiBHYXJhayBhbmQgUXVhcmssIGFuZCBvbmUgb2YgdGhlIGJlc3Qgc3RhciB0cmVrIHZpbGxhaW5zIGluIER1a2F0LiBJdCB3YXMgYWxsIGdyZWF0IHVudGlsIHRoZSBsYXN0IHNlYXNvbnMgd2hlbiB0aGV5IHdlbnQgaW4gaGFyZCB3aXRoIHRoZSAiQ2FwdGFpbiBTaXNrbyBpcyBzcGFjZSBqZXN1cyIgdHVybmVkIHVwIHRvIDExLCBhbmQgdHVybmluZyBEdWthdCBpbnRvIGEgc2F0dXJkYXkgbW9ybmluZyBjYXJ0b29uIHZpbGxhaW4sIGJ1dCBpdCBpcyB3aGF0IGl0IGlzLgpTb3JyeSB0byBib3RoZXIgeW91IGFnYWluLCBidXQgYW0gSSBtaXNzaW5nIHNvbWV0aGluZz9yZWRkaXRyYXNhbGdodWwgIDcgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvQW1hY20gdGFocmlrIGZpbGFuIGRlaWxkaSwgbyBzZW5pbiB5YWt0cm1hbi4gSGFpbiBpZnRpcmFzbm4gaWtheWV0ZSB1cmFtYWRhbiBnZWl0aXJpbGVtZXllY2VpbmkgZGllciByZWRkaXRpbGVyZSBnc3Rlcm1la3RpLiBCdW51IG5vcm1hbGRlIHNlbmluIHlhcG1hbiBsYXptIGFtYSBpdGUgc2VuIGJlbmxlIHVyYW1heSB0ZXJjaWggZWRpeW9yc3VuLiAKSWYgYm90aCBoaWdoIHBhaXJzIGFyZSB0aGUgc2FtZSByYW5rLCB0aGVuIHRoZSBoaWdoZXIgc2Vjb25kIHBhaXIgd2lucy4gClByYW5rdmVydGlzaW5nIGluY2x1ZGVzIHR5cGljYWwgam9rZXMgcmFuZ2luZyBmcm9tIHNtYWxsIHNwb29mcyB0byBlbGFib3JhdGUgZmFrZSBjYW1wYWlnbnMsIHNvbWUgb2Ygd2hpY2ggd2UgY29tZSB0byBzZWUgb24gQXByaWwgRm9vbHMnIERheS4uIApMaWxBbUJ1cmdlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvUHMuIFNvcnJ5IGZvciBtb2JpbGUgZm9ybWF0CkphY2tzb245NzUgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkNQR0M6IHJlYXNzdXJhbmNlLCBhdm9pZGFuY2Ugb2YgcGFzc2l2ZSBUeCAoYmVkIHJlc3QsIGhlYXQsIGJhY2sgc3VwcG9ydHMvY29yc2V0cy9icmFjZXMpLCBhY2V0YW1pbm9waGVuLCBhIHByb2dyZXNzaXZlIHdhbGtpbmcgcHJvZ3JhbSwgYSBtYXhpbXVtIG9mIDQgd2tzIG9mIGNoaXJvcHJhY3RpYyBkZWxpdmVyZWQgbHVtYmFyIHNwaW5hbCBtYW5pcHVsYXRpb24gKFNNOiAyIDN4L3drIG9mIHNpZGUgcG9zdHVyZSwgaGlnaCB2ZWxvY2l0eSBsb3cgYW1wbGl0dWRlIHRlY2huaXF1ZSksIG5vIGV4ZXJjaXNlIHByb2dyYW0sIHJldHVybiB0byB3b3JrIHdpdGhpbiA4IHdrcy4uIApLZXNzZWwgaGFzIGFjdHVhbGx5IHBsYXllZCBwcmVsaW1pbmFyeWV2ZW50IGF0IHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIsIGNhc2hpbmcgaW4gYmFjayB0byBiYWNrIHllYXJzIGluIDIwMTMgYW5kIGVhcmxpZXIgdGhpcyBzdW1tZXIuIApHbyBkYXJrZXIuIApEeXN0b25pYSBjYW4gYWZmZWN0IGFueSBwYXJ0IG9mIHRoZSBib2R5IG5lY2ssIHRvcnNvLCBldmVuIHRoZSB0b25ndWUgb3IgZXllbGlkcy4gTlBSIHJhZGlvIGhvc3QgRGlhbmUgUmVobSBoYXMgYSBmb3JtIG9mIHRoZSBkaXNvcmRlciwgc3Bhc21vZGljIGR5c3Bob25pYSwgaW4gaGVyIHZvY2FsIGNvcmRzLCBNYWNrIHNhaWQuIApTU0QgYXJlIHVudGVzdGVkIHdhdGVycyB3aXRoIHRoZWlyIGxvbmcgdGVybSByZWxpYWJpbGl0eSBhdG0gYW55d2F5cy4gClRoZSBidXNpbmVzcyBvZiBCZXRWaWN0b3IgYmVzaWRlcyBvbmxpbmUgYmV0dGluZyBpbmNsdWRlcyBleHRyZW1lbHkgc3VjY2Vzc2Z1bCBjYXNpbm8gYW5kIHBva2VyIHNpdGVzIHRvby4gVG9kYXkgQmV0VmljdG9yIGlzIHRoZSBsYXJnZXN0IGVtcGxveWVyIG9uIEdpYnJhbHRhci5TdWNoIGEgZ29vZCBhbGwgcm91bmQgYm9va2llIGRvZXNuJ3QgbmVlZCBhIGh1Z2Ugd2VsY29tZSBvZmZlciB0byBhdHRyYWN0IG5ldyBjdXN0b21lcnMsIGJ1dCB0aGV5IHN0aWxsIGhhdmUgYSBCZXQgNSBHZXQgMzAgb2ZmZXIgZm9yIGZpcnN0IHRpbWUgZGVwb3NpdG9ycy4gClBlbmd1aXNoZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNiBob3VycyBhZ28KQWxzbyBoYXMgdGhlIHNpZGUgZWZmZWN0IG9mIHB1dHRpbmcgeW91ciBtYXJyaWFnZSB0aHJvdWdoIHRoZSB0ZXN0cyBiZWZvcmUgeW91IGhhdmUgYSBraWQsIHNvIHRoYXQga2lkIGRvZXNuIGdyb3cgdXAgd2l0aCBkaXZvcmNlZCBwYXJlbnRzLkhhdmUgeW91ciAyIGtpZHMgYXQgMzUgYW5kIDM3LiBUaGV5IHdpbGwgYmUgMTggd2hlbiB5b3UgNTUuIFRoZW4geW91IGhhdmUgMTAgeWVhcnMgdG8gc2F2ZSBmb3IgcmV0aXJlbWVudC5PYnZpb3VzbHksIHRoZXJlIGV4Y2VwdGlvbnMgYW5kIGJ1bXBzIGluIHRoZSByb2FkIGlmIHlvdSBjYW4gZmluZCB0aGUgb25lLCBidXQgSSBmZWVsIHRoaXMgcm9hZG1hcCB3b3VsZCBmaXQgYSBsYXJnZSBwb3J0aW9uIG9mIHBlb3BsZSB3aG8gZ2V0IG1hcnJpZWQgcmlnaHQgb3V0IG9mIHNjaG9vbC4gCkhhbmQgMSB5b3UndmUgZ290IGJvdHRvbSBzZXQgb24gYSBmdWxsIHNwYWRlIGJvYXJkIGFuZCBhcmUgbGFzdCB0byBhY3QuIEkgd291bGQgYWR2b2NhdGUgYmV0dGluZyBoZXJlIGZvciB0aGUgZXhhY3QgcmVhc29uIHlvdSBzdGF0ZWQuIFlvdSB3YW50IG90aGVyIHBsYXllcnMgY2FsbGluZyB3aXRoIGEgbmFrZWQgc3BhZGUgb3IgZXZlbiBwYWlyICsgc3BhZGUgZHJhdyBiZWNhdXNlIHlvdSdyZSB3YXkgYWhlYWQgb2YgZXZlcnkgaGFuZCBleGNlcHQgYSBmbG9wcGVkIGZsdXNoLiBZb3Ugd2FudCB0byBkZW55IHRoZWlyIGVxdWl0eSBhbmQgeW91IGhhdmUgcG9zaXRpb24uIENoZWNraW5nIGp1c3QgbGV0J3MgZ2FyYmFnZSBoYW5kcyBjYXRjaCB1cCBlc3BlY2lhbGx5IHdoZW4gaXQncyBtdWx0aSB3YXkuClByb3BlbGxlZCBieSBoaXMgc2hvcnQgbGlmZSBleHBlY3RhbmN5LCBSaWNrIHdhcyBkZXRlcm1pbmVkIHRvIGJlIGFuIGVudHJlcHJlbmV1ci4gSGUgY29tYmluZWQgaGlzIHByb2Zlc3Npb25hbCBkcmVhbXMgd2l0aCBoaXMgbG92ZSBvZiB0ZW5uaXMgYW5kIHdlbnQgb24gdG8gZm91bmQgQXJsaW5ndG9uIFJhY3F1ZXQgU3BvcnRzLiBIZSBhbmQgaGlzIHBhcnRuZXJzIGJ1aWx0LCBvd25lZCwgYW5kIG9wZXJhdGVkIGZpdmUgdGVubmlzIGNsdWJzIGFjcm9zcyBPbnRhcmlvLiBJdCB3YXMgb25lIG9mIENhbmFkYSdzIGZpcnN0IGNoYWlucyBvZiByZWNyZWF0aW9uIGFuZCBmaXRuZXNzIGNlbnRyZXMuIApSZ2FsZXogdm91cyEuIApJZiB5b3UncmUgcmVudGluZyBhIHJvb20gb3Igc2VjdGlvbiB0byBhIHRlbmFudCwgeW91IG1pZ2h0IG5lZWQgdG8gYWRkIGNsb3NldCBzcGFjZSBvciBhIHNlcGFyYXRlIGVudHJ5LiAKVGhlcmUgYXJlIDIgbWFpbiBtdXNjbGVzIG9uIHRoZSBmcm9udCBvZiB5b3VyIGxvd2VyIGxlZy4gVGhlIFRpYmlhbGlzIEFudGVyaW9yIGxpZnRzIHRoZSB0b2UsIHB1bGxpbmcgYWdhaW5zdCB0aGUgb2Z0ZW4gdGlnaHRlciBjYWxmIG11c2NsZXMuIApEYXMgc2luZCBXaWRlcnNwcmNoZSwgYWJlciBkYSBrYW5uIGljaCBuaWNodCBlaW5lIEF1c3NhZ2UgbmVobWVuIHVuZCBtaWNoIGF1ZiBkaWVzZSBmZXN0bmFnZWxuLiBCZWkgZGVpbmVtIGFuZGVyZSBUd2l0dGVyIFppdGF0IHdyZGUgaWNoIHp1c3RpbW1lbiwgbmljaHQgYWJlciBiZWkgZGllc2VtIFZpZGVvLiAKWW91IG5lZWQgdG8gcHV0IGluIGEgbG90IG9mIHZvbHVtZSB0byBsZWFybiB0aGUgZ2FtZSBhbmQgZ2V0IHBvcHVsYXRpb24gcmVhZHMuIApUaGUgSW50ZXJuZXQgZXJhIGhhcyBicm91Z2h0IG1hbnkgY2hhbmdlcyBpbiB0aGUgd2F5IHdlIGxpdmUgb3VyIGxpdmVzLiBJdCBtYWRlIGl0IHBvc3NpYmxlIHRvIGRvIHNvIG1hbnkgdGhpbmdzIHdpdGhvdXQgZXZlbiBsZWF2aW5nIG91ciBzb2ZhcyBhbmQgb25lIG9mIHRob3NlIHRoaW5ncyBpcyBwbGF5aW5nIHBvcHVsYXIgcmVhbCBtb25leSBjYXNpbm8gZ2FtZXMuIApNZW4gd2hvIGFyZSBwYXlpbmcgZm9yIGZ1bGwgc2V4IG9yIHRvcGxlc3MgLyBudWRlIG1hc3NldXNlcyB3b3VsZCBoYXZlIGEgaGFyZGVyIHRpbWUgZXhwbGFpbmluZyB0aGVtc2VsdmVzLkkgcHJlZmVyIHRvIHNlZSB3b21lbiB3aG8gb3BlcmF0ZSBmcm9tIHRoZWlyIG93biBob21lcy4gClRoZW4gdGhlcmUgaXMgc29tZSAiZWxhc3RpYyByZWNvaWwiIHdoZXJlIHRoZSBtdXNjbGVzIGdvIGJhY2sgdG8gdGhlaXIgcHJldmlvdXMgc2hhcGUsIHdoaWNoIGRlY3JlYXNlcyB0aGUgdm9sdW1lLCAoaW5jcmVhc2luZyBwcmVzc3VyZSkgc3F1ZWV6aW5nIHRoZSBhaXIgb3V0IGxpa2UgYSBkZWZsYXRpbmcgYmFsbG9uLCBtYWtpbmcgeW91IGV4aGFsZS4gClN0YXJ0IGJ5IGdyYWR1YWxseSBhZGRpbmcgd2F0ZXIgdG8gc2FsdCBhbmQgbGF2ZW5kZXIgb2lsLiBUaGUgbWl4dHVyZSBzaG91bGQgbG9vayBsaWtlIGEgcGFzdGUuIApUbyBFbGxpbmd0b24gY3JlZGl0LCBoZSB3YXMgdGhlIG9ubHkgSGVhdCBwbGF5ZXIgd2hvIGRhcmVkIHRvIHdlYXIgZmxpcCBmbG9wcyB3aXRob3V0IHNvY2tzIGJlZm9yZSBhbiBPY3RvYmVyIGdhbWUgYWdhaW5zdCB0aGUgV2l6YXJkcy4gSW4gdGhlIG9mZnNlYXNvbiwgRWxsaW5ndG9uIGFuZCBoaXMgd2lmZSB3aWxsIHBsYW4gZGF5IGRhdGVzIHRvIHRoZSBuYWlsIHNob3AuIFRob3VnaCBoZSBiZWxpZXZlcyB0aGF0IGZlZXQgYXJlIHZpdGFsIHBhcnQgb2Ygd2hhdCB3ZSBkbyBhcyBOQkEgcGxheWVycywgbGlrZSBzZXZlcmFsIG9mIGhpcyBwZWVycywgRWxsaW5ndG9uIHNhaWQgaGUgZG9lc24gaGF2ZSB0aW1lIHRvIGdldCBwZWRpY3VyZXMgZHVyaW5nIHRoZSBzZWFzb24uIApXb21lbiB3aG9zZSBkaXNhcHBlYXJhbmNlIHdvbiByYWlzZSBhIGJpZyBmdXNzLiBNZWRpYSBjb3ZlcmFnZSBpcyBhIHRyYWZmaWNrZXIgd29yc3QgbmlnaHRtYXJlLiAKVXNlIGEgY29vbCBlZ2cuIApIb21lIGVxdWl0eSBsaW5lcyBvZiBjcmVkaXQsIG9yIEhlbG9jcywgcmVhY2hlZCBhIHJlY29yZCAkMjQzIGJpbGxpb24gYXMgb2YgT2N0LiAzMSwgb3IgMTEuMyBwZXIgY2VudCBvZiB0b3RhbCBob3VzZWhvbGQgY3JlZGl0LCB0aGUgaGlnaGVzdCBzaGFyZSBzaW5jZSBtaWQgMjAxNSwgYW5hbHlzdHMgaW5jbHVkaW5nIFJvYmVydCBDb2xhbmdlbG8gc2FpZCBpbiBhIHJlcG9ydCBUaHVyc2RheS4gQm9ycm93aW5nIHRvIGZ1bmQgZXZlcnl0aGluZyBmcm9tIGhvbWUgcmVub3ZhdGlvbnMgdG8gY2FyIHB1cmNoYXNlcyBoYXMgZ3Jvd24gZmFzdGVyIHRoYW4gcmVzaWRlbnRpYWwgbW9ydGdhZ2VzIHNpbmNlIDIwMTcsIGFuZCB1bmRyYXduIGNvbW1pdG1lbnRzIGF0IHRoZSBsYXJnZSBDYW5hZGlhbiBiYW5rcyBzdG9vZCBhdCAkMTIwIGJpbGxpb24uCkFuZCBubyBvbmxpbmUgcG9rZXIgdGhhdCB5b3UgY291bGQgY29uc2lzdGVudGx5IG1ha2UgYSBsaXZpbmcgYXQuIApTaGUgc2VlcyBoZXIgZnJpZW5kIEplc3NpY2EuIApPdHQsIG9mIEFsdG9vbmEsIFBlbm5zeWx2YW5pYSwgZWFybmVkICQ0LjcgbWlsbGlvbi4gTmVpdGhlciBoZSBub3IgQmx1bXN0ZWluLCBvZiBCcmlnYW50aW5lLCBOZXcgSmVyc2V5LCBoYWQgcHJldmlvdXNseSBwbGF5ZWQgYXQgdGhlIG1haW4gZXZlbnQuIApZb3UgY2FuIGV2ZW4gcmliYm9uIG91dCBhIHBpZWNlIG9mIGNsb3RoIG9uIHRoZSBiYXNrZXQncyBoYW5kbGUuIApBcyBCYXJyZXR0IGlzIGEgZnJpZW5kIG9mIHRoZSBicmFuZCwgdGhlcmUgaXMgbm8gZG91YnQgaGUgYW5kIGhpcyBuZXcgd2lmZSdzIGd1ZXN0cyB3aWxsIGJlIGVuam95aW5nIHF1aXRlIGEgZ2VuZXJvdXMgc3VwcGx5IG9mIGNoYW1wYWduZSBuZXh0IHdlZWtlbmQuCk5ldXJvaW1hZ2U6IENsaW5pY2FsLiAKT3IgZmlyZSBoaW0gYmVjYXVzZSBoZSBhIG1hbmlwdWxhdGl2ZSBzb2Npb3BhdGg/IEJ1dCBJIGp1c3QgZG9uIHdhbnQgdG8gcmV3YXJkIGFuZCBmaW5hbmNlIG1vbnN0ZXJzLCBzbyBmdWNrIG1lLCByaWdodD9DYWxsZW5kZXIgYWNjdXNlcyBQaXRjaGZvcmQgb2YgZnJhdWQsIGJyZWFjaCBvZiBjb250cmFjdCwgYW5kIGJyZWFjaCBvZiBmaWR1Y2lhcnkgZHV0eS4gSGUgc2F5cyB0aGUgR2VhcmJveCBDRU8gaXMgYSAibWFuaXB1bGF0aXZlIGFuZCBtb3JhbGx5IGJhbmtydXB0IENFTyB3aG8gc2hhbWVmdWxseSBleHBsb2l0ZWQgaGlzIG9sZGVzdCBmcmllbmQuIiBIZSBhbHNvIGNsYWltcyBQaXRjaGZvcmQgc2VjcmV0bHkgc2FkZGxlZCBHZWFyYm94IGVtcGxveWVlcyB3aXRoIHRoZSBidXJkZW4gb2YgcmVwYXlpbmcgYSBwcml2YXRlLCBwZXJzb25hbCAkMTIgbWlsbGlvbiAiYm9udXMiIGZyb20gVGFrZSBUd28uIFBpdGNoZm9yZCBpbnNpc3RlZCBvbiBrZWVwaW5nIHRoZSBkZWFsIHNlY3JldCwgdGhlIGxhd3N1aXQgc3RhdGVzLCBhbmQgdGhlIG1vbmV5IHdhcyBhbGxlZ2VkbHkgcmVyb3V0ZWQgdG8gaGlzIHByaXZhdGUgY29tcGFueSBjYWxsZWQgUGl0Y2hmb3JkIEVudGVydGFpbm1lbnQgTWVkaWEgTWFnaWMuClF1ZSBwb3VyIGxlcyBqZXV4IHRyYWRpdGlvbm5lbHMKQXQgdGhlIGJhc2ljIGxldmVsIEhvbGQgJ0VtIGlzIGEgaGlnaCBjYXJkIGdhbWUgd2hlcmUgdGhlIHBsYXllciBpcyBkZWFsdCB0d28gY2FyZHMgd2hpY2ggYXJlIGtub3duIGFzIHRoZSAnaG9sZSBjYXJkcycuIEZpdmUgY29tbXVuaXR5IGNhcmRzIGFyZSB0aGVuIGRlYWx0IGZhY2UgdXAgaW4gdGhyZWUgc3RhZ2VzICAgdGhlIEZsb3AsIHRoZSBUdXJuIGFuZCB0aGUgUml2ZXIuIFRoZSBpZGVhIGlzIGZvciB0aGUgcGxheWVycyB0byB1c2UgdGhlaXIgdHdvIGRlYWx0IGNhcmRzIGFuZCB0aGVzZSBjb21tdW5pdHkgY2FyZHMgdG8gbWFrZSB0aGUgYmVzdCBwb3NzaWJsZSBmaXZlIGNhcmQgcG9rZXIgaGFuZC4gCiJMZSBtZGVjaW4gbWFsZ3IgbHVpIiBpbiBUaGUgTmV3IEdyb3ZlIERpY3Rpb25hcnkgb2YgT3BlcmEsIChFZC4pIFNhZGllIFMuLC4gCkl0IHdhcyBuZXZlciBhYm91dCBwb3dlciwgaXQgd2FzIGFib3V0IGZhaXRoLiBNb3NlcyB3YXMgYWxyZWFkeSBnaXZlbiBhIGNlcnRhaW4gYW1vdW50IG9mIHBvd2VyIGluIHRoZSBjb250ZXh0IG9mIGhpcyBzdGFmZiAgIHdoaWNoIGluIHRoaXMgY2FzZSBwcm92aWRlZCB3YXRlciwgYnV0IGFsc28gc3BsaXQgdGhlIFJlZCBTZWEgYW5kIGxlZCB0aGUgcGVvcGxlIG91dCBvZiBFZ3lwdC4gVGhhdCB3aHkgdGhlIHJvY2sgcHJvZHVjZWQgd2F0ZXIgd2hlbiB0aGUgc3RhZmYgc3RydWNrLCBldmVuIHdoZW4gTW9zZXMgZGlzb2JleWVkIEdvZC4uIApOb3cgSSBqdXN0IGhhdmUgdG8gZmlndXJlIG91dCBob3cgdG8gY29uZmlndXJlIGl0LiBJZiBhbnlvbmUgaGFzIHNvbWUgbm92aWNlIGZyaWVuZGx5IHJlc291cmNlcyBmb3IgdGhhdCwgcGxlYXNlIGxldCBtZSBrbm93LgpXaGVuIHRoYXQgcGVyc29uIGRpZXMsIHRoZSB3aG9sZSBjbHVzdGVyIGRpZXMsIHRvbywgdmFuaXNoZXMgZnJvbSB0aGUgbGl2aW5nIG1lbW9yeS4gCk9uZSBtZW50aW9uZWQgZmlnaHRlcnMsIHRoZSBvdGhlciBqdXN0IG9uZSBmaWdodGVyICAgYSBwZXJzb24gd2hvIGdvZXMgYnkgdGhlIG5vbSBkZSBndWVycmUgIkJyb3RoZXIgQWJ1IGFsIEtoZWlyIGFsIEFya2hhYmlsaS4iIE9uZSBvZiB0aGUgc3RhdGVtZW50cyBhbHNvIHNhaWQgdGhlIGF0dGFja2VyICJkaWVkIGFzIGEgbWFydHlyIiAgIHdoaWNoIHdvdWxkIG5vdCBtYWtlIHNlbnNlIGlmIGhlIHNob3QgaGltc2VsZiBpbiBhbiBldmFjdWF0ZWQgaG90ZWwgcm9vbSBhdCB0aGUgZW5kIG9mIHRoZSBuaWdodCwgYXMgdGhlIHBvbGljZSBjbGFpbS4gCk9uY2UgSSBnZXQgb2ZmIEJBUlQsIEkgbmVlZCB0byBjYXRjaCBhbm90aGVyIGJ1cyB0aGF0IGNvbWVzIGV2ZXJ5IDMwIG1pbnV0ZXMgb3Igc28uIApNeSBwcm9wZXIgbmFtZSBpcyBMaW5kc2F5LCBhbHRob3VnaCBJJ20ga25vd24gYXMgUmFpbnMuIApXaGlsZSB0aGUgbW9kdWxlIHdpbGwgYXBwZWFyIGlmIHRoZSBjb2RlIGlzIHByZXNlbnQsIG5vIG9uZSBjYW4gdm90ZSBvbiB0aGVtLi4gCkVybmllIHN0b29kIHRvIGluaGVyaXQgbW9yZSB0aGFuICQyIG1pbGxpb24gZnJvbSBoaXMgcGFyZW50J3MgZXN0YXRlLiAKUmVhZCBtb3JlOldvbGxvbmdvbmcgcG9rZXIgbWFjaGluZSBsb3NzZXMgdG9wICQxNDIgbWlsbGlvbiwgcmFuayB1cyBzZXZlbnRoIGluIHN0YXRlICJBIG51bWJlciBvZiBjb3VuY2lscyBhbmQgY29tbXVuaXR5IGdyb3VwcyBzdWdnZXN0ZWQgY2FwcyBhbmQgdGhlIE5TVyBnb3Zlcm5tZW50IGFncmVlcyB0aGlzIGlzIHRoZSByaWdodCB0aGluZyB0byBkbyBpbiBoaWdoZXIgcmlzayBhcmVhcy4iIFRoZSBmb3VyIElsbGF3YXJyYSBzdWJ1cmJzIGFyZWNsYXNzaWZpZWQgYXMgImJhbmQgdGhyZWUiIGNvbW11bml0aWVzLCBhY2NvcmRpbmcgdG8gYSBMaXF1b3IgYW5kIEdhbWluZyBOU1cgbWFwIHdoaWNoIG1hcmtzIHRoZW0gYXMgcmVkIHpvbmVzLiBUaGVpciJoaWdoIHJpc2sicmF0aW5nIGhhc2JlZW4gZGVjaWRlZCBiYXNlZCBvbiB0aGVpciBzb2NpbyBlY29ub21pYyBsZXZlbCBkZXRlcm1pbmVkIGJ5IHRoZSBBdXN0cmFsaWFuIEJ1cmVhdSBvZiBTdGF0aXN0aWNzLiBSZWFkIG1vcmU6IElsbGF3YXJyYSBraWRzIGFyZSBiZWluZyBzZWR1Y2VkIGJ5IHBva2llcywgbmV3IHN0dWR5IHNob3dzIEluIFdhcmlsbGEsIHRoZXJlIGFyZSB0d28gY2x1YnMgYW5kIG9uZSBob3RlbCB3aXRoIGEgdG90YWwgb2YgMzA1IHBva2VyIG1hY2hpbmVzLiAKVHJhbnNwb3J0YXRpb24gY29zdCBpcyBsb3cgYXNzdW1pbmcgeW91IG9ubHkgdXNlIHB1YmxpYyBvbmVzLiBNb250aGx5IGl0IHdvdWxkIGJlIGFyb3VuZCAzMDAgUk1CIGlmIHlvdSB3b3JrIGFuZCBsaXZlIGluIHRoZSB1cmJhbiBwYXJ0IG9mIFNoYW5naGFpLCBhbmQgc2luY2Ugc3R1ZGVudHMgaGF2ZSBtb3JlIGxlaXN1cmUgdGltZSB0byBoYW5nIGFyb3VuZCwgNTAwIHdvdWxkIGJlIGEgcmVhc29uYWJsZSBtYXhpbXVtIHBlciBtb250aC4gRWF0aW5nIG91dCB3aWxsIGJlIGEgbWFpbiBwYXJ0IG9mIHlvdXIgY29zdC4gClRoZSBHcmVhdCBXYWxsIGFsc28gc2VydmVkIHRoZSBwdXJwb3NlIG9mIHByZXZlbnRpbmcgaW52YWRlcnMgZnJvbSBicmluZ2luZyBob3JzZXMgaW4gb3Igc3RvbGVuIGdvb2RzIG91dC4gCkJ1dCB0aGF0IHNlY29uZCBuYXR1cmUgZGVwZW5kcyBvbiBwZW9wbGUgZm9sbG93aW5nIG91ciBydWxlcyBhbmQgcGF0dGVybnMuIEFuZCB3aGVuIHRoZXkgZG9uIHdlIGhhdmUgdG8gZm9jdXMuIApJIGNvbnNpZGVyIGl0IGFzIHNpZ25pZmljYW50IGFzIGEgaG9sZSBpbiBvbmUuLiAKQW5kIHByb2JhYmx5IG5ldmVyIHdpbGwgYmUuIApJJ2Qgb2Z0ZW4gcm9sbGVyIGJsYWRlIG9yIGJpa2Ugb3ZlciB0byBteSBmcmllbmRzIGhvdXNlIGFuZCBzdGF5IHRoZSBuaWdodCBhbmQgdGhlbiBnbyBiYWNrIGhvbWUgaW4gdGhlIG1vcm5pbmcuIApQZWFyc29uIHdpbGwgc3VpdCB1cCBvbiB0aGUgc2Vjb25kIGxpbmUgd2l0aCBFbGlhcyBQZXR0ZXJzc29uIGFuZCBCcm9jayBCb2VzZXIgYW5kIGlzIGV4cGVjdGVkIHRvIGdldCBwb3dlciBwbGF5IHRpbWUgb24gdGhlIHNlY29uZCB1bml0LiBUaGUgQ2FudWNrcyBhY3F1aXJlZCBLYXJsc3NvbiBmcm9tIHRoZSBTaGFya3MgaW4gZXhjaGFuZ2UgZm9yIEpvbmF0aGFuIERhbGhlbi4gUmlnaHQgbm93LCBpdCBzb3VuZHMgdW5saWtlbHkgdGhhdCB0aGUgU3dlZGUgd2lsbCBtYWtlIHRoZSB0cmlwLCB3aGljaCB3b3VsZCBtYWtlIG5leHQgV2VkbmVzZGF5IGFnYWluc3QgdGhlIE1hcGxlIExlYWZzIHRoZSBuZXh0IHRpbWUgd2Ugd2lsbCBsaWtlbHkgc2VlIGhpbSBpbiBhY3Rpb24uIApTdCBJdmVzIGhhcyAzMCBwb2tlciBtYWNoaW5lcyBhbmQgY29sbGVjdGVkICQ1OCw3MjAgaW4gdGhlIHNpeCBtb250aHMgZnJvbSBKdWx5IHRvIERlY2VtYmVyIGxhc3QgeWVhci4gClBsdXMgcXVlIHRvdXQgY29uc2NpZW50IGRlIGxhIHBhdXZyZXQgZGFucyBsYXF1ZWxsZSB2aXZlbnQgbGEgcGx1cGFydCBkZXMgZ2VucyBxdWkgbCBpbCBzZSBwcm9wb3NlIGRlIG1ldHRyZSAgbCB1bmUgbWRlY2luZSBib24gbWFyY2gsIHBvc3NpYmxlIGdyY2UgIGRlcyBtb3llbnMgc2ltcGxlcyBldCBwZXUgY290ZXV4LCBhZmluIHF1ZSBzIGwgZHUgbWFsYWRlIGV0IGxlIHRlbXBzIGR1IG1kZWNpbiAoMSksIGNhciBsIGRlIGxhIGNhbXBhZ25lIGR1IFhJWCBtZSBzaWNsZSwgbGUgcGx1cyBzb3V2ZW50LCBhbG9ycywgaWwgc291ZmZyZSBzYW5zIHNlY291cnMsIGx1dHRlIHBuaWJsZW1lbnQsIGxhbmd1aXQgaWdub3IgZXQgbWV1cnQgc2lsZW5jaWV1eCBldCByc2lnbiBkYW5zIHVuZSBjaGF1bWlyZSBvIGxlIGZyb2lkLCBsIGxhIG1hbHByb3ByZXQgc2Ugam9pZ25lbnQgYXV4IGF1dHJlcyBjYXVzZXMgZGUgZGVzdHJ1Y3Rpb24uIApFdGMuIAooMSkgT24gdGhpcyBtdXNjdWxvc2tlbGV0YWwgbWVkaWNpbmUgdGVzdCwgb3J0aG9wZWRpYyByZXNpZGVuY3kgZGlyZWN0b3JzIGNvbnNpZGVyZWQgYSBwYXNzaW5nIHNjb3JlIHRvIGJlIDczLjElLCBhbmQgODIlIG9mIHRoZSBleGFtaW5lcyByZXNpZGVudHMgZmFpbGVkIHRvIGRlbW9uc3RyYXRlIGJhc2ljIGNvbXBldGVuY3kuCkxhIERjbGFyYXRpb24gZGVzIERyb2l0cyBkZSBsJ0hvbW1lIGV0IGR1IENpdG95ZW4gZGUgMTc4OSBjb25uYXQgZG9uYyB1bmUgcmVjb25uYWlzc2FuY2UgdGFyZGl2ZSBDZXR0ZSByZWNvbm5haXNzYW5jZSBhcHBhcmF0IGRhbnMgbGUgbW1lIHRlbXBzIHF1ZSBsJ2Fkb3B0aW9uIGQnYXV0cmVzIHRleHRlcyBwcm90ZWN0ZXVycyBkZXMgZHJvaXRzIGRlIGwnaG9tbWUgOiBEY2xhcmF0aW9uIFVuaXZlcnNlbGxlIGRlcyBEcm9pdHMgZGUgbCdIb21tZSAoT05VKSBkdSAxMCBkY2VtYnJlIDE5NDgsIENvbnZlbnRpb24gRXVyb3Blbm5lIGRlIHNhdXZlZ2FyZGUgZGVzIERyb2l0cyBkZSBsJ0hvbW1lIGV0IGRlcyBMaWJlcnRzIEZvbmRhbWVudGFsZXMgKENvbnNlaWwgZGUgbCdFdXJvcGUpIGR1IDQgbm92ZW1icmUgMTk0Ni4gUHVpcywgZGUgbm91dmVhdXggdGV4dGVzIHZvbnQgYXVzc2kgdHJlIGFkb3B0cyA6IFBhY3RlcyBJbnRlcm5hdGlvbmF1eCByZWxhdGlmcyBhdXggZHJvaXRzIGNvbm9taXF1ZXMsIHNvY2lhdXggZXQgY3VsdHVyZWxzLCBwdWlzIGRlcyBkcm9pdHMgY2l2aWxzIGV0IHBvbGl0aXF1ZXMgZGUgMTk2NiwgQ2hhcnRlIGRlcyBEcm9pdHMgRm9uZGFtZW50YXV4IChVbmlvbiBFdXJvcGVubmUpIGRlIDIwMDAuCllvdSB3YXN0ZWQgOSBob3VycyBvZiB5b3VyIGxpZmUgbG93ZXJpbmcgeW91cnNlbGYgdG8gbXkgbGV2ZWwgYmVjYXVzZSBJIGFza2VkIHlvdSBxdWVzdGlvbnMgeW91IGNvdWxkbiBhbnN3ZXIsIHBvaW50ZWQgb3V0IHNlcmlvdXMgcHJvYmxlbXMgeW91IGNvdWxkbiBqdXN0aWZ5IG9yIGRlZmVuZCwgYW5kIG1hZGUgeW91IHF1ZXN0aW9uIHlvdXIgYmFzaWMgYXNzdW1wdGlvbnMgYWJvdXQgaG93IHRoZSB3b3JsZCB3b3Jrcy4gSG93IGRvZXMgaXQgZmVlbCwgY29taW5nIGRvd24gdG8gdGhlIGdyb3VuZCBhbmQgcm9sbGluZyBhcm91bmQgaW4gdGhlIG11ZD8gRG9lcyBpdCBmZWVsIGNvb2wgdG8gdGhlIHRvdWNoPwpJbnRpbWlkYXRpb24gaXMgYSBiaWcgcGFydCBvZiB0aGUgVmVnYXMgZGVhbC4gSSBtYXkgaGF2ZSB3YWxrZWQgaW4gbGlrZSBDb25uZXJ5LCBidXQgSSBsZWZ0IHRoYXQgZmlyc3QgY2FzaW5vIGZlZWxpbmcgbW9yZSBsaWtlIExhcnJ5IHRoZSBDYWJsZSBHdXkuIApTZWxmIGluZHVsZ2VuY2UgdG8gYW4gdW5oZWFsdGh5IGxldmVsLiBQYXJlbnRzIHdlcmUgdW5hYmxlIHRvIHN0b3AgdGhlbSwgd2l2ZXMgd2VyZSB1bmFibGUgdG8gc3RvcCB0aGVtLCBhbmQgdGhleSBjb3VsZCBub3Qgc3RvcCB0aGVtc2VsdmVzLiBDb25mdWNpYW5pc20sIGhpc3Rvcnkgb2YgdG90YWxpdGFyaWFuaXNtLCBtaXNlZHVjYXRpb24sIEtvcmVhbiBkZW1vY3JhY3kgYmVpbmcgaW4gaXRzIGluZmFuY3ksIGhpZXJhcmNoaWNhbCBzb2NpYWwgc3RydWN0dXJlLCBldGMuIApBbGxtYW4gYWxzbyBob3N0cyBhIG1vcm5pbmcgbmV3cyB0YWxrIHNob3cgb24gS0ZUSyA5Ny4xIEZNIGluIHRoZSBjaXR5LiBIZSB3YXMgb2ZmIHRoZSBhaXIgdGhlcmUsIHRvbywgYXMgb2YgVHVlc2RheSBtb3JuaW5nLCBzYWlkIEVzdGhlciBNaXJleWEgVGVqZWRhLCBzcG9rZXN3b21hbiBmb3IgRW50ZXJjb20sIHdoaWNoIG93bnMgdGhlIHN0YXRpb24uIEFsbG1hbiB3aWxsIHJlbWFpbiBvZmYgdGhlIGFpciB1bnRpbCB0aGUgY29tcGFueSwgd2hpY2ggb25seSByZWNlbnRseSBhY3F1aXJlZCBLRlRLLCBjYW4gImxvb2sgaW50byB0aGlzIGVudGlyZSBzaXR1YXRpb24gd2l0aCBtb3JlIGRldGFpbCwiIHNoZSBzYWlkLgpZb3UgY2FuIGRvIHRoaXMuIEFsbW9zdCBldmVyeW9uZSBoYXMgdG8gZmVlbCB0aGlzIHBhaW4gdGhhdCB5b3UgZmVlbGluZyBub3cuIE15IGJpZ2dlc3QgaGVhcnRicmVhayB3YXMgYWxzbyB0aGUgYmVnaW5uaW5nIG9mIG1lIGxpdmluZyBteSB0cnV0aCBhbmQgYmVjb21pbmcgdGhlIHBlcnNvbiBJIHdhbnRlZCB0byBiZSBoZWFsdGh5LCBoYXBweSwgY29uZmlkZW50LCBhbmQgbm93LCBkZWVwbHkgaW4gbG92ZSB3aXRoIHNvbWVvbmUgd2hvIGxvdmVzIGFuZCB0cmVhdHMgbWUgd2VsbC4gClRvbGtpZW4ncyBpbnNwaXJhdGlvbnMgd2VyZSBFdXJvcGVhbiBlcGljczogQmVvd3VsZiwgdGhlIE5vcnNlIFNhZ2FzLCB0aGUgS2FsZXZhbGEsIHRoZSBPZHlzc2V5LCB0aGUgSWxpYWQsIGFuZCBzbyBmb3J0aCwgYWxvbmcgd2l0aCB2YXJpb3VzIGZvbGtsb3JpYyB0cmFkaXRpb25zIGFuZCBteXRob2xvZ2llcyBhcyB3ZWxsIGFzIGhpcyBvd24gZXhwZXJpZW5jZXMgd2l0aCB3YXIgYW5kIHRoZSBjb25mbGljdCBiZXR3ZWVuIGh1bWFuaXR5IGFuZCBuYXR1cmUuIApUaGF0IHN1Y2tzIHRoYXQgeW91IGd1eXMgaGF2ZSB0byBkbyB0aGF0IHdpdGggeW91ciB3YXRlciwgZGVmaW5pdGVseSBub3Qgbm9ybWFsLiBXaGF0IGtpbmQgb2YgcGFzdHVyZXMgZG8gdGhleSBoYXZlPyBTb21lIHJlZ2lvbnMgYXJvdW5kIHRoZSB3b3JsZCAod2hvIGRvbid0IGdyYXplIHByb3Blcmx5KSByZXF1aXJlIGhpZ2ggbGV2ZWxzIG9mIG5pdHJvZ2VuIGZlcnRpbGl6ZXIgYWxvbmcgd2l0aCBkZWdyYWRlZCBzb2lscyB0aGlzIGNvdWxkIGJlIG9uZSBvdGhlciByZWFzb24gaXQncyBnZXR0aW5nIGluIHlvdXIgd2F0ZXIuLiAKSGlzIGZhdGhlciBsb2FuZWQgaGltIG92ZXIgJDYwMCwwMDAgZm9yIHRoZSBwdXJjaGFzZSBvZiB0aGUgaG91c2UgaGUgd2FudGVkLiAKSSB0aGluayB3ZSBhbGwgZ2V0IHRoYXQgdGhpcyBpcyB3aGF0IG5lZWRzIHRvIGJlIGRvbmUgYW5kIGl0cyBnb2luZyB0byB0aW1lIGFuZCBhIGxvdCBvZiBlZmZvcnQuIFdlIHNlZSBzb21lIGdhaW5zIGluIDIwMjAsIGJ1dCBpdHMgYSBub3QgbWFnaWMgeWVhciB0aGF0IHdpbGwgc29sdmUgZXZlcnl0aGluZy4gVGhlaXIgZ3JpcCBvbiB0aGUganVkaWNpYXJ5IGlzIGdvaW5nIHRvIGJlIHRoZSBoYXJkZXN0IHRvIG92ZXJjb21lLiAKT25lIGltcG9ydGFudCB0aGluZyB5b3Ugc2hvdWxkIGtub3cgaXMgdGhhdCBEaXJ0eSBCb3VyYm9uIGxpdmVzIHVwIHRvIGl0cyBzZWxmIGltcG9zZWQgbW9uaWtlciwgIk5ldyBPcmxlYW5zIEJpZyBCcmFzcyBDaXJjdXMgUm9jay4iCkEgYml0IG1vcmUgc2Nyb2xsaW5nLCBhbmQgbW9yZSBwaWNzIEkgaGF2ZSBzZWVuIGVsc2V3aGVyZSBvbmxpbmUuIApUaGUgdHJhZGluZyBlY29ub215IGlzbiBzZWFtbGVzbHkgaW50ZWdyYXRlZCBpbnRvIHRoZSByZXN0IG9mIHRoZSBnYW1lIGFzIGEgc3lzdGVtLiAKT25lIGNvbW1lbnQgdGhhdCBhbm5veXMgbWUgaXMgaGlzIGNsZWFyIG1pc3VuZGVyc3RhbmRpbmcvc2ltcGxpZmljYXRpb24gb2Ygc29tZSBvZiB0aGUgb3ZlcnVzZSBpc3N1ZXMuIApTdGlsbCwgSSBhc2tlZCBTcHJpbnQgdG8gbG9vayBpbnRvIHRoaXMgYW5kIGNvbnNpZGVyIGlzc3VpbmcgYSByZWZ1bmQuIApEZSBtbWUsIGNlIGNoYW5nZW1lbnQgcGV1dCB0cmUgaWxsdXNvaXJlIGNvbW1lIGwnaWxsdXN0cmUgbGUgbWFyaWFnZS4gClJlY2VwdGlvbiBhbmQgbGlnaHQgbHVuY2ggdG8gZm9sbG93IGluIHRoZSBnYXRoZXJpbmcgcm9vbSBvZiB0aGUgZnVuZXJhbCBob21lLiBJZiBkZXNpcmVkLCBtZW1vcmlhbCBkb25hdGlvbnMgdG8gaGlzIHNvbiBKb3NlcGggdHJ1c3QgYWNjb3VudCB3b3VsZCBiZSBhcHByZWNpYXRlZCBieSB0aGUgZmFtaWx5LiAKWWV0LCBpdCBpcyBub3Qgd2l0aG91dCBpdHMgcGVyaWxzIHRvZGF5OyBvbiAyOCBTZXB0ZW1iZXIsIDIwMDMsIHRoZSBSaGluZSBDcnVpc2VyIExvcmVsZXkgKG9oLCB0aGUgaXJvbnkgb2YgdGhpcyEpIHdpdGggMzQ5IHBhc3NlbmdlcnMgY29sbGlkZWQgd2l0aCB0aGUgY2xpZmYsIGRhbWFnaW5nIGl0cyBwcm9wZWxsZXJzLCBhbmQgaW5qdXJpbmcgYXJvdW5kIDQwIHBhc3NlbmdlcnMsIHRocmVlIG9mIHRoZW0gc2V2ZXJlbHkuIApJdCBoYXMgYSBwdXJwb3NlLiAKQSBDYWxsIHRvIFZlbmdlYW5jZSAoSG9ub3J2ZXJzZTogTWFudGljb3JlIEFzY2VuZGFudCwgMykgLiBUaGlyZCBhbmQgbGFzdCBpbiB0aGUgTWFudGljb3JlIEFzY2VuZGFudCBzY2llbmNlIGZpY3Rpb24gbWlsaXRhcnkgc29hcCBvcGVyYSBzZXJpZXMsIGEgcHJlcXVlbCBpbi4gVGhlIEhvbm9ydmVyc2UgcmVmZXJzIHRvIHRoZSBtaWxpdGFyeSBzY2llbmNlIGZpY3Rpb24gYm9vayBzZXJpZXMsIGl0cyB0d28gc3ViIHNlcmllcywgdHdvIHByZXF1ZWwgLiBJbiB0aGlzIHNjZW5hcmlvLCBwcm94aWVzIGZvciBNYW50aWNvcmUgYW5kIEhhdmVuIG9wcG9zZSB0aGUgc2FtZSBoaWRkZW4gZW5lbXksIHRoZSBnZW5ldGljIHNsYXZlcnMgLiAKTWFyb29uIDUgdGhvdWdoIHNlZW1lZCBsaWtlIHRoZXkgZGlkbiB3YW50IHRvIGJlIHRoZXJlIGF0IGFsbCwgbW9zdCBvZiB0aGUgY3Jvd2QgZW5kZWQgdXAgc2l0dGluZyBmb3IgdGhlIG1ham9yaXR5IG9mIHRoZSBjb25jZXJ0LCBhbmQgaXQgd2FzIGEgbGFja2x1c3RlciBwZXJmb3JtYW5jZS4gCldhdGVycyBkb2VzIHBlcnNvbmFsbHkgZmlyZSBlbXBsb3llZXMgb24gb2NjYXNpb24gYW5kICJzaGUgbWFuYWdlcyB0byBoYXZlIHRoYXQgcGVyc29uIGZlZWwgYXMgdGhvdWdoIHRoZXkgYXJlIG1ha2luZyB0aGUgZGVjaXNpb24gdG8gbGVhdmUgYW5kIGl0IGlzIGJldHRlciBmb3IgdGhlbXNlbHZlcyB0byBtb3ZlIG9uIGFuZCBleHBsb3JlIG5ldyBvcHBvcnR1bml0aWVzLiIgSGUgYWxzbyBub3RlcyB0aGF0IGEgbGFyZ2UgcGVyY2VudGFnZSBvZiBlbXBsb3llZXMgaGF2ZSBiZWVuIHdpdGggdGhlIHJlc3RhdXJhbnQgZm9yIGRlY2FkZXMuLiAKUmVhbCBzaGlmdCBpbiBBbWVyaWNhbiBwcmlvcml0aWVzIGFuZCBzcGVuZGluZyB3b3VsZCByZXF1aXJlIGEgbG90IG1vcmUgdGhhbiBmYWN0cyBhbmQgZmlndXJlcy4gCkVkaXQ6IHNvbWUgb3RoZXJzIHNheSBpc2lsZHVyIGlzIGNhcHBlZCBhbmQgdGhpcyBpcyB2ZXJ5IHdyb25nLiAKUmVtb3ZlIGNoaXBzIGZyb20gdGhlIHRhYmxlIHRvIHlvdXIgcG9ja2V0cy4KRHVkZSBpZiBnZXR0aW5nIGNhbGxlZCBvdXQgZm9yIGJhc2luZyB5b3VyIG9waW5pb25zIG9uIFRWIG5ld3MgbWFrZXMgeW91IHNvIG1hZCwgeW91IGNvdWxkIHRyeSB3YXRjaGluZyBsZXNzIFRWIG5ld3MKTGV1cnMgcHJtaWNlcyBzb250IGwsIGlscyBub3VzIGVuY2VyY2xlbnQgZXQgZW5jYWRyZW50IGNoYWN1biBkZSBub3MgYWN0ZXMuIApZb3UgY29zdCBtZSBmb3IgYSByZXNpZGVudGlhbCBwaG9uZSBsaW5lLCBEU0wsIGFuZCBJU1AgdGhhdCBubyBsb25nZXIgc3VwcG9ydHMgTWFjcyB3aXRoIGFuIGhvdXIgY2FsbCB0byB0aGUgcGFyZW50YWwgdW5pdCEgUHVoIGxlYXNlLiBZb3Ugc3VjayEgSSdtIGdldHRpbmcgYSBjYWJsZSBtb2RlbSBhbmQgdGhlIGNoZWFwIGFzcyBWb25hZ2UgcGxhbi4gCk15IGZhdGhlciBhbHNvIGhvcGVkIE1vcmdhbiBTdGFubGV5IHdvdWxkIGJlIGFibGUgdG8gaGVscCBoaW0gZmluZCBhIHN0cmF0ZWdpYyBwYXJ0bmVyIHRvIGltcHJvdmUgVEhQJ3Mgb3BlcmF0aW9uYWwgcHJvY2Vzc2VzIGFuZCBidWlsZCBhbiBleHBvcnQgYnVzaW5lc3MuIApCcmFuY2ggRGF2aWRpYW5zIHdlcmUgYW4gYXBvY2FseXBzZSBjdWx0IHRoYXQgaGFkIGJlZW4gYXJvdW5kIGZvciBhcm91bmQgNDAgeWVhcnMgYnkgdGhlIHRpbWUgdGhlIFdhY28gZXZlbnQgb2NjdXJyZWQuIFdhY28gcGFwZXIgZ2F2ZSB0aGVpciBsZWFkZXIgYmFkIHB1YmxpY2l0eS4gQVRGIGhhZCBzb21lIGJhZCBwcmVzcyBvZiB0aGVpciBvd24gYW5kIGRlY2lkZWQgdG8gc3Rvcm0gdGhlIGNvbXBvdW5kIHRvIHJlY292ZXIgd2hhdCB0aGV5IHNhaWQgd2VyZSBpbGxlZ2FsIHdlYXBvbnMgKG1hY2hpbmVyeSB0byBjb252ZXJ0IHRvIGF1dG9tYXRpYyB3ZWFwb25zKS4gCkplIHZldXggZGlyZSBxdWUgamUgdmVuYWlzIGRlIHBhcmNvdXJpciB0b3VzIGxlcyBzdGFuZHMgZCd1bmUgYnJvY2FudGUgYW5udWVsbGUgZGFucyBEb21yYXQgOyB2aWxsYWdlIGhpZXIgZW5jb3JlIHNwYXIgZGUgTW9udGx1b24gcGFyIGxlcyByYW5ncyBkJ3VuIHZpZ25vYmxlIG5lIGRvbm5hbnQgcXUndW5lICJwaXF1ZXR0ZSIgY2FwYWJsZSBkZSB2b3VzIGJhaXNzZXIgbGUgcGFudGFsb24gc3VyIGxlcyBzb3VsaWVycy4uIApJIGFza2VkIGZvciBhIGxvdCBvZiBwcmVzc3VyZSBhbmQgc2hlIGRlZmluaXRlbHkgZGVsaXZlcmVkISBTaGUgZWFzaWx5IGZvdW5kIGFsbCBteSBrbm90cyBhbmQgcmVhbGx5IGhlbHBlZCBmaXggbXkgbmVjayBzbyB0aGF0IEkgY291bGQgbW92ZSBhZ2Fpbi4gU2hlIHdhcyBkYW1uIHN0cm9uZyBhbmQgaXQgd2FzIGRlZmluaXRlbHkgdGhlIGRlZXBlc3QgbWFzc2FnZSBJIGV2ZXIgaGFkIChpbmMuIFR1cmtpc2ggc3R5bGUpLiAKVGhlIGNhc2lubydzIGNvdW5zZWwsIENocmlzdG9waGVyIFB5bW9udCBRQywgc2FpZCB0aGF0IEl2ZXksIHdobyBsaXZlcyBpbiBMYXMgVmVnYXMgYW5kIGlzIGRlc2NyaWJlZCBvbiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIHdlYnNpdGUgYXMgImFyZ3VhYmx5IHRoZSBiZXN0IHBva2VyIHBsYXllciBpbiB0aGUgd29ybGQiLCB3YXMgbm90IGEgd2VsbCBrbm93biBhZHZhbnRhZ2UgcGxheWVyIGF0IHRoZSB0aW1lIG9mIGhpcyB2aXNpdCBidXQgd2FzLCBpbiB0aGVpciBleWVzLCBhbiBvbGQgVklQIGN1c3RvbWVyIGFuZCB0aGV5IHRydXN0ZWQgaGltIGFjY29yZGluZ2x5LgpJc2xhbmQgaXN0IGltIFNvbW1lciBuaWNodCBzZWhyIHNwb3J0bGljaCwga2VpbmUgRnJhZ2UsIGFiZXIgbWl0IHdpbnRlcmxpY2hlbSBLbm5lbiBtc3N0ZW4gd2lyIGRvY2ggbWluZGVzdGVucyB6d2FuemlnIEdvbGRtZWRhbGxpZW4gYmVrb21tZW4uIFJleWtqYXZpaywgZGEgZ2lidHMgYWxsZXMgd2FzIGRhcyBIZXJ6IGJlZ2VocnQ6IFNjaG11Z2dsZXIsIEh1c2t5cyB1bmQgZGFzIHdhaHJlIEdlZmhsLCB2ZXJlaXN0IHp1IHNlaW4uIApTaW5jZSBvbmUgd2VudCB0byBtZSBieSBkZWZhdWx0IGFuZCBvbmUgd2FzIHdvbiBmYWlybHkgdGhyb3VnaCByb2xscywgZXZlcnlvbmUgd2FzIG9rYXkuIAoxOCsuIApQcmVkZWNlYXNlZCBieSBoaXMgbW90aGVyIEhlbGVuIFNtaXRoLiAKTWFueSBzbWFsbGVyIGV2ZW50cyBhcmUgYWxzbyBwbGF5ZWQsIHdpdGggYnV5IGlucyBhcyBsb3cgYXMgJDUwMCwgb3IgZXZlbiAkMjAwIGZvciB0aGUgbmlnaHRseSBubyBsaW1pdCBIb2xkZW0gdG91cm5hbWVudHMuIApOb3Qgc3VyZSBpZiBpdCByZWFsbHkgbWF0Y2hlcyB3aGF0IHlvdSBsb29raW5nIGZvciwgYnV0IEkgYmVlbiBidWlsZGluZyBhIE5vZGUgQVBJIHNlcnZlciBmcmFtZXdvcmsgd2l0aCB0aGUgZ29hbCBvZiBzaW1wbGlmeWluZyB0aGUgcHJvY2VzcyBvZiBidWlsZGluZyBBUEkgc2VydmVycyAobGluaykuIE1vc3Qgb2YgdGhlIHdvcmsgaXMgZG9uZSBieSBleGlzdGluZyB0b29scyAoa29hLCBrbmV4LCBvYmplY3Rpb24pLCBzbyB0aGUgZnJhbWV3b3JrIGlzIG1vc3RseSBmb2N1c2VkIG9uIHdpcmluZyB0aGUgZGlmZmVyZW50IHBpZWNlcyB0b2dldGhlciwgc28gYWxsIHRoZSBjb25zdW1pbmcgYXBwIGhhcyB0byBkbyBpcyBhZGQgcm91dGVzL21vZGVscy9hY3Rpb25zL3NlZWRzL21pZ3JhdGlvbnMvZXRjIGFuZCB0aGV5IHdpbGwgYmUgcmVzb2x2ZWQgYXV0b21hdGljYWxseS4KUHJldHR5IGdvb2QuIApIYXZlIHlvdSBmbG93biBhIDEwKyBob3VyIGZsaWdodCB3aXRoIGJhYmllcyBzY3JlYW1pbmcgYWxsIHRoZSB0aW1lPyBPciB1bnJ1bHkgY2hpbGRyZW4gcnVubmluZyBhcm91bmQgYW5kIGJhbmdpbmcgc2VhdHMgd2hpbGUgdGhlaXIgcGFyZW50cyBpZ25vcmUgdGhlbT8gRnVjayBpdCBoZWxsLiAKVGhlbiBwdXQgeW91ciBmb29kIG9uIHRvcCBhbmQgY2luY2ggaXQgYWxsIGRvd24uIApNYW55IG9mIHRob3NlIGNvdW50cmllcyBoYXZlIHZhc3RzIG51bWJlciBvZiByZXNvdXJjZXMsIHZhc3QgZW1wdHkgbGFuZHMgaW5jbHVkaW5nIGVtcHR5IGRlc2VydHMgYW5kIGxvbmcgc2hvcmVsaW5lcy4gQW5kIG1vc3Qgb2YgYWxsLCBleGNlcHQgZm9yIENoaW5hLCB0aGV5IGFsbCBoYXZlIHNwYXJzZSBwb3B1bGF0aW9uIHRoYXQgZG9uIHJlcXVpcmUgbGFyZ2UgZWxlY3RyaWNpdHkgYmVjYXVzZSB0aGV5IGRvbiBoYXZlIG11Y2ggbWFudWZhY3R1cmluZy4gRm9yIEtvcmVhLCBqdXN0IHdoZXJlIGRvIHlvdSBwcm9wb3NlIHlvdSBnb2luZyB0byBwdXQgYWxsIHRob3NlIHNvbGFyIHBhbmVscyBpbiBLb3JlYT8gQXJlIHlvdSBnb2luZyB0byBmbGF0dGVuIGFsbCB0aGUgZmFybWxhbmRzIGFuZCBtb3VudGFpbnM/IFdlIHRhbGtpbmcgYWJvdXQgYmFyZWx5IGhhbGYgYSBwZW5pbnN1bGEgaGVyZSB3aXRoIDUwIG1pbGxpb24gcGVvcGxlIHdoZXJlIDgwJSBvZiB0aGUgbGFuZCBhcmUgbW91bnRhaW5vdXMuIApQZW9wbGUgZmVlbCBsaWtlIHRoZXkgZG9uIGhhdmUgYWNjZXNzIHRvIHRoZSBzYW1lIG5ldHdvcmtzIG9yIHRoZSBzYW1lIGRvbm9yIHBvb2wuIFBhbGxpc3RlciBzYWlkIHRoZSBjaGFuZ2Ugc2hvdWxkIG9wZW4gdGhlIGRvb3IgdG8gbW9yZSBwb2xpdGljYWwgcGFydGljaXBhdGlvbi4KVGhpcyBhYmlsaXR5IGFjdHVhbGx5IHNlZW1zIHZlcnkgZGlmZmljdWx0IHRvIHVzZSwgb25seSBvdmVycG93ZXJlZCBpZiB5b3UncmUgbm90IHNtYXJ0IGFnYWluc3QgaXQuCk5vdCB0byBzYXkgdGhhdCByZWxpZ2lvdXMgZXh0cmVtaXNtIGRvZXNuJ3QgcHVsbCBmcm9tIG9sZCBhbmQgaXJyZWxldmFudCB0ZXh0cyB0byBzdXBwb3J0IHRoZWlyIGlkZWFscy4gVGhleSBjZXJ0YWlubHkgZG8sIGJ1dCBldmVuIGEgc29jaWFsaXN0IGF0aGVpc3Qgd2lsbCBpZ25vcmUgZmFpbHVyZXMgaW4gdGhlIHBhc3QgYW5kIHB1c2ggcmVja2xlc3NseSB0b3dhcmRzIHRoZWlyIGlkZWFsaXN0aWMgd29ybGQgYnkgb25seSBzdGF0aW5nIHRoZSBpZGVhcyB0aGF0IHN1cHBvcnQgdGhlbS4KQnV0IG9uIFRodXJzZGF5LCB0aGV5IGhhZCBzb21ldGhpbmcgdG8gc2hhcmUuIFRocmVlIHBlb3BsZSBmcm9tIFNpeCBOYXRpb25zIG9mIHRoZSBHcmFuZCBSaXZlciB0d28gbWVuIGFuZCBvbmUgd29tYW4gaGF2ZSBiZWVuIGNoYXJnZWQgd2l0aCBzZWNvbmQgZGVncmVlIG11cmRlciBpbiB0aGUgZGVhdGhzIG9mIE1lbGlzc2EgVHJ1ZGkgTWlsbGVyLCAzNywgd2hvIHdhcyBzZXZlbiBtb250aHMgcHJlZ25hbnQgYXQgdGhlIHRpbWUgb2YgaGVyIGRlYXRoLCBBbGFuIFBvcnRlciwgMzMsIGFuZCBNaWNoYWVsIEphbWllc29uLCAzMi4uIApBbHNvLCB3aGVuIHdhcyB0aGUgbGFzdCB0aW1lIHlvdSByZWZlcnJlZCB0byBhIGJ1Zywgc2F5LCBhcyBhIENvdWxkIGp1c3QgYmUgbXkgb3duIGV4cGVyaWVuY2UsIGJ1dCBpZiBhbnlvbmUgaGFzIGEgbGluayB3aGljaCBleHBsYWlucyBpbiBkZXB0aCB3aHkgdGhlIGJyYWluIHN1YmNvbnNjaW91c2x5IGRvZXMgdGhpcywgdGhhdCBiZSByYWQuIApTaW5jZSBJIGhhdmUgc3RhcnRlZCB0aGVtIG9uIHRoZXNlIHByb2R1Y3RzIHRoZXkgaGF2ZSBjaGFuZ2VkIHRoZWlyIHdob2xlIGF0dGl0dWRlIHRvIGxpZmUuIApUaGUgTmlzc2FuIDMwMHp4IHdoaWNoIHdhcyBhIGNvbXBhcmFibGUgY2FyIGluIGl0cyBkYXksIGhhZCB0d2luIHR1cmJvIGFuZCBub24gdHVyYm8gb3B0aW9ucy4gMzAwIHZzIDIyMCBIUCBmcm9tIGEgM0wuIFRoZXJlJ3Mgbm90IG11Y2ggeW91IGNhbiBpbXByb3ZlIG9uIHRoZSBOQSBpbiB0ZXJtcyBvZiByZWFsIHBvd2VyIGdhaW5zLiBUaGUgVFQgdGhvdWdoLCB3aXRoIGEgbGl0dGxlIGJpdCBvZiB3b3JrIHlvdSBjYW4gYnJlYWsgMzUwd2hwLgpUaGF0IGJ1bGxzaGl0Li4gCllvdSB3ZXJlIGluZm9ybWVkIG9mIHRoaXMgYnkgY29tbXVuaXR5IG1lbWJlcnM7IGNvbnRpbnVpbmcgdG8gaW5zaXN0IHRoYXQgaXQgaXNuIGEgcGFyYW5vcm1hbCBzdG9yeSBzdGlsbCBkb2VzbiBtZWFuIGl0IGZpdHMgb24gdGhpcyBzdWJyZWRkaXQuLiAKT3ZlcnZpZXcgZm9yIFBhbXVua2V5CkhlIHdlbnQgdG8gU3QuIApXaGVuIEkgc3RhcnRlZCBJIHdhcyBqdXN0IHRyeWluZyBhIGJ1bmNoIG9mIGRpZmZlcmVudCB0aGVyYXBpc3RzLiAKQmVjYXVzZSBCYW5na29rIGlzIHRoZSBjZW50cmFsIGNpdHkgaW4gdGhlIGNvdW50cnksIGV2ZXJ5dGhpbmcgZnJvbSBlbHNld2hlcmUgaW4gdGhlIGNvdW50cnkgZmVlZHMgaW50byBCYW5na29rICAgYWxsIHRoZSByZWdpb25hbCBjdWx0dXJlcywgZm9vZHMsIHN0eWxlcywgYXR0aXR1ZGVzLCBiZWxpZWZzLCBldGMuIFNvIHlvdSBkb24ganVzdCBmaW5kICJjZW50cmFsIiBUaGFpIGN1bHR1cmUsIHlvdSBjYW4gZmluZCBhc3BlY3RzIG9mIGFsbCBUaGFpIGN1bHR1cmUuCk1heWJlIEknbGwgZmVlbCBiZXR0ZXIgbmV4dCBzZWFzb24uIE1heWJlIEknbGwgbmV2ZXIgZmVlbCBiZXR0ZXIuIApWaW9sYXRpb24gb2YgdGhpcyBsaW1pdGVkIHVzZSBsaWNlbnNlIG1heSByZXN1bHQgaW4gaW1tZWRpYXRlIHRlcm1pbmF0aW9uIG9mIHlvdXIgbWVtYmVyc2hpcCBhbmQgbWF5IHJlc3VsdCBpbiBsZWdhbCBhY3Rpb24gYWdhaW5zdCB5b3UuLiAKSmFtZXMgRG9ic29uLCBjaGFpcm1hbiBhbmQgZm91bmRlciBvZiBGb2N1cyBvbiB0aGUgRmFtaWx5LCBoZWFkcXVhcnRlcmVkIG5lYXIgSGFnZ2FyZCBtZWdhY2h1cmNoLCBjYWxsZWQgSGFnZ2FyZCBhIGZyaWVuZC4gc2V4dWFsIHNpbiwgd2hldGhlciBob21vc2V4dWFsIG9yIGhldGVyb3NleHVhbCwgaGFzIHNlcmlvdXMgY29uc2VxdWVuY2VzLCBhbmQgd2UgYXJlIGV4dHJlbWVseSBjb25jZXJuZWQgZm9yIFRlZCwgaGlzIGZhbWlseSBhbmQgaGlzIGNodXJjaCwgRG9ic29uIHNhaWQuCk91dGRvb3JzSGVhZGxpbmVzQlJBRCBET0tLRU4gQ09MVU1OOiBVcGNvbWluZyBFcnNraW5lLCBNaW5uLiwgZmlsbSBmZXN0aXZhbCBoaWdobGlnaHRzIGh1bnRpbmcgZmlsbXMgZnJvbSBtZW1iZXJzIG9mIFRoZSBTdG9yeUZsb3JpZGEgZmlzaGluZyBmcmVuenk6ICJHdW5zISBHdW5zISBHdW5zISIgR3JvdXAncyBHdWxmIGdyb3VwZXIgZ2F0aGVyaW5nIGdvZXMgZ3JlYXRCZWx0cmFtaSBmb3Jlc3QgcmlkZSBzaG93Y2FzZXMgdHJhaWwgZWZmb3J0cyBvZiBsb2NhbCBzbm93bW9iaWxlIGNsdWJzQUxXQVlTIElOIFNFQVNPTi8gTUlLRSBKQUNPQlM6IExvbmdzcHVyczogTW9yZSBvZnRlbiBzZWVuIHRoYW4gcmVjb2duaXplZCBPVVRET09SUyBDQUxFTkRBUjogQmFucXVldHMsIEh1bnRpbmcgZmlsbSBmZXN0aXZhbHMgYW5kIGZhbWlseSBldmVudHMgYW1vbmcgb3V0ZG9vciBhY3Rpdml0aWVzIG9uIHRhcG9waW5pb25IZWFkbGluZXNMZXR0ZXI6IENoYWxsZW5nZSBHcmFudCBpbnZlc3RzIGluIE5vcnRoIERha290YSBmdXR1cmVPdXIgdmlldzogRm9yIHNha2Ugb2YgbG9jYWwgYmFzZSBhcHByb3ZlIDIzMDYgU2hhdzogUmVtZW1iZXJpbmcgZm9ybWVyIE5EIEdvdi4gR2VvcmdlIFNpbm5lclBvcnQ6IExhdyBlbmZvcmNlbWVudCBmb3VuZCBubyB0aHJlYXQgdG8gUmVwLiAKU3VyZSwgdmlyZ2luIHNoYW1pbmcgaXMgcmVsZXZhbnQgbm8gbWF0dGVyIHlvdXIgc2V4dWFsIG9yaWVudGF0aW9uLCBidXQgdGhhdCBkb2VzbiBtZWFuIHRoYXQgdGhlIGV4cGVyaWVuY2UgaXMgdGhlIHNhbWUgZm9yIGV2ZXJ5b25lLkkgdG90YWxseSBkaXNhZ3JlZSB0aGF0IGhhdmluZyB0aGlzIHZpZXdwb2ludCBzaGFyZWQgd2lsbCBtZWFuIHRoYXQgbm8gb25lIGlzIGdvaW5nIHRvIHRhbGsgYWJvdXQgdGhlIGVmZmVjdHMgdmlyZ2luIHNoYW1pbmcgaGFzIG9uIG5vbiBhc2V4dWFsIG1lbi5CYXNpY2FsbHksIGlmIHlvdSB3YW50IHRvIGhhdmUgYSBub24gYXNleHVhbGl0eSBmb2N1c2VkIGRpc2N1c3Npb24gb2YgdmlyZ2luIHNoYW1pbmcsIHBsZWFzZSBlaXRoZXIgZmluZCBhIHJlbGV2YW50IGFydGljbGUgYW5kIHBvc3QgaXQsIG9yIGNyZWF0ZSBhIHNlbGYgcG9zdCB0byBnYXJuZXIgZGlzY3Vzc2lvbi4gCkFib3V0IGEgd2VlayBiZWZvcmUgaGUgZGllZCwgb25lIG9mIGhpcyBidWxsaWVzIHRvbGQgaGltIHRvIGdvIGF3YXkgYW5kIGtpbGwgaGltc2VsZi4gU28gaGUgZGlkIHRoZSBmb2xsb3dpbmcgd2Vla2VuZApJdCBhbHNvIGFkb3B0ZWQgdGhlIEhhdGlrdmFoIGFzIGl0cyBhbnRoZW0gKGFscmVhZHkgdGhlIGFudGhlbSBvZiBIb3ZldmVpIFppb24gYW5kIGxhdGVyIHRvIGJlY29tZSB0aGUgbmF0aW9uYWwgYW50aGVtIG9mIHRoZSBTdGF0ZSBvZiBJc3JhZWwpLi4gCkZvciBleGFtcGxlLCB3ZSBrbm93IHRoYXQgRG9jIHdhcyBib3JuIGluIDE4NTEsIGluIEdyaWZmaW4sIEdlb3JnaWEuIApBIGZldyByZWNvbW1lbmRhdGlvbnMgaWYgeW91IGdvIGZvciB0aGlzIGJvb2suIEZpcnN0LCBkb24gZmVlbCB0aGUgbmVlZCB0byBmb2xsb3cgaGlzIGluZ3JlZGllbnQgYW1vdW50cyBleGFjdGx5LCBqdXN0IGZvbGxvdyB0aGUgcGVyY2VudGFnZXMgYW5kIGJha2UgdGhlIGFtb3VudCB0aGF0IHdvcmtzIGZvciB5b3UuIApKdXN0Z29vZGVub3VnaE1vZGVyYXRvciAoIC8pICgsLCkgKCAvKQpXaGVuIEkgZG9uZSB0aGlzIGNvbnNpc3RlbnRseSBmb3IgYSBmZXcgc2Vzc2lvbnMsIEkgZmluZCB0aGF0IEkgY2FuIGFjdHVhbGx5IHZpc3VhbGx5IHNjYW4gdGhyb3VnaCB0aGUgbm90ZXMgSSB0YWtlbiBpbiBteSBoZWFkIGFuZCBmaW5kIHNwZWNpZmljIGFuc3dlcnMgc29tZXRpbWVzLiBJIGRvbiBoYXZlIGEgcGFydGljdWxhcmx5IGdyZWF0IG1lbW9yeSBlaXRoZXIsIGJ1dCBpdCBsaWtlIGhhdmluZyBsaXR0bGUgc25hcHNob3RzIG9mIHdoYXQgSSBpbWFnaW5lIGEgcGhvdG9ncmFwaGljIG1lbW9yeSB0byBiZS4gSXQgcmVhbGx5IGNvb2wgd2hlbiBpdCB3b3JrcyBkdXJpbmcgYSB0ZXN0IG9yIHNvbWV0aGluZy4KVGhpcyBpcyBhIGdyZWF0IHdheSB0byBmaW5kIG91dCB3aGF0IHRoZSBob3VzZSBuZWVkcyBpbiB0aGUgd2F5IG9mIHJlcGFpcnMsIGJ1dCBhbHNvIHdoYXQgaXQgbmVlZHMgdG8gbWFrZSBpdCBkZXNpcmFibGUuIApPYnRhaW4gbGljZW5zaW5nIGlmIHlvdXIgc3RhdGUgcmVxdWlyZXMgaXQgZm9yIHdvcmsgaW4gYSBsZWdhbCBlbnZpcm9ubWVudC4gSWYgeW91ciBzdGF0ZSByZXF1aXJlcyBpdCwgeW91IHdpbGwgaGF2ZSB0byBwYXNzIGFuIGV4YW0gdG8gYmUgbGljZW5zZWQsIGFuZCBzb21lIHN0YXRlcyBtYXkgYWxzbyByZXF1aXJlIHlvdSB0byBiZWNvbWUgYSBub3RhcnkgcHVibGljLiAKNC4gCkJpdGZpbmV4IGlzIGxpa2UgYW55IG90aGVyIGNlbnRyYWxpemVkIGV4Y2hhbmdlLiBUaGV5IG5lZWQgdG8gY29tcGx5IHdpdGggcmVndWxhdG9ycyBhbmQgcHJvdmlkZSBzb21lIEtZQyBpbmZvcm1hdGlvbi4gClRoZXJlIGlzIGEgcHJlc2VudGF0aW9uIG9uIHRoZSBmaW5hbmNpYWwgYWlkIHJlcXVpcmVtZW50cywgd2hpY2gsIGZyb20gd2hhdCBJIGhhdmUgc2VlbiwgYXJlIGlkZW50aWNhbC4gQW5kIHRoZXkgYWxsIHNheSB5b3UgaG93IHRoZXkgYXJlIG1lYW5pbmcgeW91ciBmaW5hbmNpYWwgYWlkIGFwcGxpY2F0aW9uIGlzIHZpZXdlZCBzZXBhcmF0bGV5IGZyb20geW91ciBzY2hvb2wgYXBwbGljYXRpb24uLiAKTXkgZnJpZW5kIGFuZCBteSBzaXN0ZXIgbmV2ZXIgaG9va2VkIHVwIEkgZG9uIHRoaW5rICBidXQgSSB0aG91Z2h0IHRoZXJlIHdhcyBzb21lIHNlcmlvdXMgc2V4dWFsIHRlbnNpb24gZ29pbmcgb24gYmV0d2VlbiB0aGVtLiBJdCB3YXMgYXJvdW5kIHRoYXQgdGltZSB0aGF0IEkgZ290IHJlYWxseSBiYWRseSBodXJ0IGluIGFuIGFjY2lkZW50LiBJdCB3YXMgIHVwLiAKT2ggY2l0ZXMgYW4gYXJ0aWNsZSBpbiBUaGUgR3VhcmRpYW4gYnkgQW5ha2FuYSBTY2hvZmllbGQsIHdyaXR0ZW4gYWZ0ZXIgU2Nob2ZpZWxkIHZpcmFsIEtvbk1hcmkgdHdlZXQsIGFzIG9uZSBleGFtcGxlIG9mICJhIHdpbGxmdWwgbWlzdW5kZXJzdGFuZGluZyBvZiBLb25kbyBzdGF0ZW1lbnRzIGhlcmUgdG8gc3VpdCBoZXIgb3duIG5hcnJhdGl2ZS4iIE9oIHNheXMsICJUaGVyZSBpcyBhbiBvdmVyZW1waGFzaXMgb24gdGhlIHdvcmRzIGpveSB3aXRob3V0IHVuZGVyc3RhbmRpbmcgd2hhdCBbS29uZG9dIHJlYWxseSBtZWFucyBieSBpdC4gVG9raW1la2kgZG9lc24gYWN0dWFsbHkgbWVhbiBqb3kuIEl0IG1lYW5zIHRocm9iLCBleGNpdGVtZW50LCBwYWxwaXRhdGlvbi4gClRIT04gcmVhbGx5IGlzIHRoZSBiZXN0IGFuZCB3b3JzdCBwYXJ0IG9mIFBlbm4gU3RhdGUuIFRoZSBhbW91bnQgb2YgbW9uZXkgYW5kIGdvb2QgdGhleSBkbyBpcyBzdWJzdGFudGlhbCwgYnV0IHRoZSBtZW50YWxpdHkgcGVvcGxlIGhhdmUgYWJvdXQgaXQgaXMgc28gd2FycGVkLiBUaGUgVEhPTiBvcmdzIGFyZSBtb3N0bHkganVzdCB0cmVhdGVkIGFzIGEgd2F5IHRvIG1ha2UgZnJpZW5kcyB3aGljaCB3b3VsZCBiZSBmaW5lIGlmIHRoZXkgZGlkbid0IGFsc28gY2FycnkgYSByZWxpZ2lvdXMgbGlrZSBkZXZvdGlvbiB0byBpdC4KUGR5LCBrdG9yIG9ic2FodWplIHZ5c29rIGtvbmNlbnRyY2l1IG1pbmVybG55Y2ggbHRvayBtZSBzcHNvYmkgcnVlbmllIGEgem5pIGhia2EgcHJpZW5pa3UuLiAKUGFydGljaXBhdGUgaW4gY2FzaCBnYW1lcyBhbmQgdG91cm5hbWVudHMuIEEgcmVndWxhciBwb2tlciBnYW1lIGF0IHlvdXIgbG9jYWwgY2FzaW5vIGlzIGFsbCB3ZWxsIGFuZCBnb29kLCBidXQgdG8gbWFrZSBzb21lIHNlcm91cyBkb3VnaCwgeW91IG5lZWQgbGFyZ2UgY2FzaCBnYW1lcyBhbmQgdG91cm5hbWVudHMuIFZpc2l0IGEgZmV3IG9mIHRoZSBiaWdnZXN0IHJlZ2lvbmFsIGNhc2lub3MgaW4geW91ciBhcmVhIGFuZCBoaXQgdXAgbG9jYWwgcG9rZXIgb3JnYW5pemF0aW9ucyBmb3IgbW9uZXkgbWFraW5nIG9wcG9ydHVuaXRpZXMuCk5tZDQ1MyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpCb3JnYXRhIEhvdGVsIENhc2lubyBhbmQgU3BhIHNob3djYXNlcyA3MCwwMDAgc3F1YXJlIGZlZXQgb2YgcHJlbWllciBmdW5jdGlvbiBzcGFjZSwgaW5jbHVkaW5nIGEgMzAsMDAwIHNxdWFyZSBmb290IEV2ZW50IENlbnRlciBhbmQgYSAxLDAwMCBzZWF0IFRoZWF0ZXIuIFRoZSBXYXRlciBDbHViIGlzIGp1c3Qgc3RlcHMgZnJvbSB0aGUgQm9yZ2F0YSBhbmQgc2hvd2Nhc2VzIDE4LDAwMCBzcXVhcmUgZmVldCBvZiBldmVudCBzcGFjZSwgd2l0aCByb29tIGZvciB1cCB0byA1MDAgZ3Vlc3RzLiBDaG9vc2UgZnJvbSBmb3VyIGJvYXJkIHJvb21zIGFuZCBuaW5lIGZ1bmN0aW9uIHJvb21zIGluIGFkZGl0aW9uIHRvIGluZG9vciBhbmQgb3V0ZG9vciB2ZW51ZSBzcGFjZSBhcm91bmQgb3VyIHNwYXJrbGluZyBzd2ltbWluZyBwb29scy4gRnJvbSBkZWxpY2lvdXMgY2F0ZXJpbmcgb3B0aW9ucyB0byBpbm5vdmF0aXZlIHRlY2hub2xvZ3ksIG91ciBkZWRpY2F0ZWQgc3RhZmYgd2lsbCB3b3JrIHdpdGggeW91IHRvIGRlc2lnbiBhbiBleGNlbGxlbnQgZXZlbnQgdGhhdCBpcyBzdXJlIHRvIGltcHJlc3MgZXZlcnkgZ3Vlc3Qgb24geW91ciBsaXN0LgpJbiBHZXJtYW55LCBMYXkncyBhcmUgc29sZCBpbiB0aHJlZSB2YXJpZXRpZXM6IExheSdzLCBMYXkncyBMaWdodCBhbmQgTGF5J3MgU2Vuc2F0aW9ucyAoVGhhaSBTd2VldCBDaGlsaS9SZWQgUGFwcmlrYS9PdmVuIFJvYXN0ZWQgQ2hpY2tlbiBhbmQgVGh5bWUgIiBbYXZhaWxhYmxlIGluIENvbG9nbmUvQWFjaGVuIG9ubHkgdGhyb3VnaCB0aGUgR2VybWFuIGxvY2F0aW9ucyBvZiBEZWxoYWl6ZSApLiAKVXNlIGJvbnVzIGNvZGUgIlZJUENMVUIiIGFuZCBnZXQgc3BlY2lhbCBleGNsdXNpdmUgMiB3ZWVrcyBvZiBGcmVlIFZJUCBhY2Nlc3MhIEl0J3MgbXVjaCBiZXR0ZXIgdGhhbiBkaWZmZXJlbnQgY2FzaCBib251c2VzLiAKQ2FyZXN0cmVhbSBpcyBhIHdvcmxkd2lkZSBwcm92aWRlciBvZiBtZWRpY2FsIGltYWdpbmcgc3lzdGVtcyBhbmQgSVQgc29sdXRpb25zOyBYIHJheSBpbWFnaW5nIHN5c3RlbXMgZm9yIG5vbiBkZXN0cnVjdGl2ZSB0ZXN0aW5nOyBhbmQgcHJlY2lzaW9uIGNvbnRyYWN0IGNvYXRpbmcgc2VydmljZXMgZm9yIGEgd2lkZSByYW5nZSBvZiBpbmR1c3RyaWFsLCBtZWRpY2FsLCBlbGVjdHJvbmljIGFuZCBvdGhlciBhcHBsaWNhdGlvbnMgYWxsIGJhY2tlZCBieSBhIGdsb2JhbCBzZXJ2aWNlIGFuZCBzdXBwb3J0IG5ldHdvcmsuIEZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb21wYW55J3MgYnJvYWQgcG9ydGZvbGlvIG9mIHByb2R1Y3RzLCBzb2x1dGlvbnMgYW5kIHNlcnZpY2VzLCBwbGVhc2UgY29udGFjdCB5b3VyIENhcmVzdHJlYW0gcmVwcmVzZW50YXRpdmUgb3IgY2FsbCA4ODggNzc3IDIwNzIgb3IgdmlzaXQuIApUaGUgVHVybiBJZiB5b3UgdGhpbmsgeW91IGhhdmUgdGhlIGJlc3QgaGFuZCBhZnRlciBzZWVpbmcgdGhlIFR1cm4gY2FyZCBhbmQgYXJlIGZpcnN0IHRvIGFjdCwgdGhlbiBnbyBhaGVhZCBhbmQgYmV0LiBNYW55IHBsYXllcnMgd2lsbCB0cnkgdG8gZ2V0IGZhbmN5IGFuZCBhdHRlbXB0IHRvIGNoZWNrIHJhaXNlIGluIHRoaXMgcG9zaXRpb24uIAoiSGUgd2FzIGEgd2VhbHRoeSBndXkgYW5kIGhlIGxpa2VkIHRvIHBsYXkgdmlkZW8gcG9rZXIgYW5kIGhlIGxpa2VkIHRvIGdvIG9uIGNydWlzZXMsIiB0aGUgZ3VubWFucyBzZWVtaW5nbHkgYmFmZmxlZCBicm90aGVyIEVyaWMgUGFkZG9jayB0b2xkIHJlcG9ydGVycyBmcm9tIGhpcyBkb29yc3RlcCBpbiBPcmxhbmRvLCBGbG9yaWRhLCBvbiBNb25kYXkuClRoYXQgd2FzIHN0aWxsIG1hbmFnZWFibGUgZm9yIG1vc3Qga2lkcyBpZiB0aGV5IHJlYWxseSB0cmllZC4gVG9kYXk/IE5vIHdheSBhbnlvbmUgaXMgcGF5aW5nIHRoZWlyIHdheSB0aHJvdWdoIGEgNCB5ZWFyIGVkdWNhdGlvbi4uIApIaXN0b3J5LCB3aW5uaW5nICQyMTMsNzEyLjc2LiAoUHVoci9XV01UKXsvcH0KVm90ZSBiYXNlZCBvbiBxdWFsaXR5LCBub3Qgb3Bpbmlvbi4KT2gsIFBldGUgdHJpZWQgdG8gZmluZCBhIHRvaWxldCBhdCB0aGUgaG9zcGl0YWwsIGhlIGRpc2FwcGVhcmVkIGJ1dCB3YXMgYmFjayBpbiBhIGZsYXNoICAgYWxsIGhlIGZvdW5kIHdhcyBhIGhvbGUgaW4gdGhlIGdyb3VuZCEgSSB0b2xkIGhpbSAnc2ggdCBoYXBwZW5zIScKV2hpbGUgYXQgdGhlIHNhbWUgdGltZSwgY29tbWVudHMgYmVnaW5uaW5nIHdpdGggIkkndmUgaGVhcmQuIiBvciAiSSd2ZSBzZWVuLiIgZ2V0IHVwdm90ZWQsIHJlYWQsIGFuZCByZXBlYXRlZCBieSBwZW9wbGUgd2hvIGRvbid0IGFjdHVhbGx5IGtub3cgYW55dGhpbmcgYWJvdXQgdGhlIHNpdHVhdGlvbi4uIApQb2xpY2UgYXNrZWQgaGltIGFib3V0IHRoZSBjYXNoIGFuZCBLaWxieSB0b2xkIHRoZW0gaGUgaGFkIHdvbiBpdCBwbGF5aW5nIEtlbm8gYW5kIHRoZSBwb2tlciBtYWNoaW5lcyBvbiBTZXB0ZW1iZXIgNy4gCkFubnVpdGl6ZWQgZm9yIDM0IHllYXJzIHRvIExvdWlzYSBhZ2UgOTAsIHRoYXQgY2FwaXRhbCB3b3VsZCBwcm92aWRlIG1vbnRobHkgaW5jb21lIG9mICQxLDc0NS4gCk5vdywgeW91bmcgQm9iYSBzaXRzLCBoaWRpbmcsIGFuZCB3YXRjaGVzIEphbmdvIGZpZ2h0IEplZGkgaW4gd2hhdCBzZWVtcyB0byBiZSBhIHNsYXVnaHRlci4gSmVkaSBhcmUgZmFsbGluZyB1bmRlciB3YXZlcyBvZiBhdHRhY2tzIGJ5IHRoZSBHZW9ub3NpYW4gYnVncy4gQW5kIHRoZXJlIEphbmdvLCBob25vdXJlZCBhbW9uZ3N0IGZlYXJzb21lIG1lbiBzdWNoIGFzIERvb2t1LCBmaWdodGluZyB0aGUgSmVkaS4gCkRvIG5vdCBiZSBsaWtlIHRob3NlIG1pc2VyYWJsZSBwZW9wbGUgd2hvIEkgaGF2ZSBtZXQgd2l0aCAkNzAsICQ4MCwgJDkwLCBvciAkMTAwIG1pbGxpb24gaW4gdGhlaXIgYmFuayBhY2NvdW50cyBidXQgcHJvYmFibHkgY2FuJ3Qgc2xlZXAgYXQgbmlnaHQgb3IgbG9vayBhdCB0aGVpciBmYWNlIHdoZW4gdGhleSBsb29rIGluIHRoZSBtaXJyb3IuLiAKIk9uY2UgcGVvcGxlIHVuZGVyc3Rvb2QgSSBoYWQgYSBzaXR1YXRpb24gYW5kIHdhc24ndCBqdXN0IHBpc3NpbmcgbW9uZXkgdXAgdGhlIHdhbGwsIGl0IGJlY2FtZSBlYXNpZXIuClBhbGFpcyBIYW5zZW4gV2llbiB3aXJkIEVuZGUgMjAxMiBlcgpDYXR0bGUgcmFuY2hlciB0ZXN0ZWQgYWxsIG9mIGhpcyBjYXR0bGUgZm9yIG1hZCBjb3cgYW5kIHdhbnRlZCB0byBsYWJlbCBoaXMgbWVhdCBhcyAxMDAlIHRlc3RlZC4gICBUaGUgVVNEQSBtYWRlIHRoaXMgcHJhY3RpY2UgSUxMRUdBTC4gCkJ1dCBpZiB5b3UgYXNrIGFib3V0IGV2ZXJ5IHNpbmdsZSB2aWRlbyBnYW1lIGV2ZXIgY3JlYXRlZCwgaXQgdmVyeSB1bmxpa2VseSB0aGF0IGhlIG93bnMgdGhlbiBhbGwuLiAKSGVjaywgSSB3YXMgbmVydm91cyB3aGVuIEkgYm91Z2h0IG15IGZpcnN0IGhvdXNlIHRvbyAgIGFuZCB0aGF0IHdhcyBmb3IgJDIzMGsuIApCdXQgSSBzZWVtIHRvIGtlZXAgZHlpbmcuIEkgYmFyZWx5IGhpdCB3aXRoIGJsb29kIGJhcnJhZ2UgYW5kIGl0IHNlZW1zIGxpa2Ugc2lyZSBqdXN0IG91dCBkYW1hZ2VzIG1lLiAKU3RvcmUgSSB3b3JrIGF0IGhhcyBpY2VjcmVhbSB3b3JraW5nIDEwMCUgb2YgdGhlIHRpbWUuIApNeSBmYXZvcml0ZSBzYWx0IGlzIGFjdHVhbGx5IE1hbGRvbiBTZWEgU2FsdCBGbGFrZXMsIGJ1dCB0eXBpY2FsbHkgd2hlbiBJIGFtIGJha2luZyBJIGp1c3QgdXNlIGZpbmVseSBncm91bmQgc2VhIHNhbHQgYmVjYXVzZSBpdCBpcyBtb3JlIGFjY2Vzc2libGUgKGZsYWtlIHNhbHQgd291bGQgaGF2ZSB0byBiZSBtYW51YWxseSBjcnVzaGVkIGFuZCBJIGFtIGEgYml0IGxhenkgZm9yIHRoYXQpLkhlcmUgYSBncmVhdCB3cml0ZXVwIG9uIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gS29zaGVyIGFuZCBJb2RpemVkIFRhYmxlIFNhbHQuUkU6IENvZmZlZSwgY29mZmVlIGlzIGEgY29tcGxpbWVudGFyeSBmbGF2b3IgdG8gY2hvY29sYXRlLiBUaGUgY29mZmVlIGVtcGhhc2l6ZXMgdGhlIGZsYXZvciBvZiB0aGUgY2hvY29sYXRlLiA6KUFub3RoZXIgdGhpbmcgSSB3b3VsZCBub3RlIGlzIHRoYXQgaW4gcGFydGljdWxhciwgdGhlIHR5cGUgb2YgY2hvY29sYXRlIGNoaXAgeW91IGFyZSB1c2luZyBjYW4gbWFrZSBhIGh1Z2UgZGlmZmVyZW5jZSBmb3IgY2hvY29sYXRlIGNoaXAgY29va2llcyBpbiBwYXJ0aWN1bGFyLiAKVGhpcyBtYWRlIGZvciBzb21lIGludGVyZXN0aW5nIGFtdXNlbWVudCBhcyBteSBmcmllbmQgYW5kIEkgYXR0ZW1wdGVkIHRvIGltcGFydCBpbmZvcm1hdGlvbiB0byBteSBub24gRnJhbmNvcGhvbmUgZnJpZW5kcyBpbiBGcmVuY2guVGlwcyBmb3IgQ2FyIENvbW11dGVzVGhlIGZvbGxvd2luZyBzdWdnZXN0aW9ucyB0byBhbGxldmlhdGUgYm9yZWRvbSBvbiBhIGNvbW11dGUgcmVxdWlyZSBhIGxpdHRsZSBicmF2YWRvIGJ1dCBvbmNlIGFjaGlldmVkIHRoZXkgbGVhdmUgeW91IHdpdGggYSBncmVhdCBmZWVsaW5nIG9mIHNhdGlzZmFjdGlvbi4gCkhvd2V2ZXIsIG1lbiBjYW4gYmUgZ2FuZ2JhbmdlZCBieSBtdWx0aXBsZSB3b21lbiwgd2hpbGUgd2l0aCBzdHJhcCBvbnMsIGFueW9uZSBjYW4gcGxheSBvdXQgYSBwZW5ldHJhdGl2ZSBnYW5nYmFuZy4gTWF5YmUgc29tZW9uZSBjYW4gZXhwbGFpbiB0byBtZSB3aHkgSSB3YW50IHRoaXM/IElmIHlvdSBmYW50YXNpemUgYWJvdXQgcnViYmluZyBudWJzLCB5b3UgcHJvYmFibHkgaGF2ZSBhbiBhbXB1dGVlIGZldGlzaC4gClknYWxsIHJlYWxseSBvdmVyc3RhdGluZyBNYWdpYyBkb2luZyBhIHRlcnJpYmxlIGpvYi4gVGhlIGdvYWwgb2YgdGhpcyBzZWFzb24gd2FzIHRvIG1ha2UgdGhlIHBsYXlvZmZzIGFuZCBpbmp1cmllcyBqdXN0IHJlYWxseSBkZXJhaWxlZCBhbGwgb2YgdGhhdC4gCkl0IGRvZXNuIGNvbWUgbmF0dXJhbCB0byBtZSBhbmQgSSByZWFsbHkgc3RydWdnbGUgd2l0aCBpdCwgd2hpY2ggSSB3aHkgSSBoYXZlbiB1cHBlZCB0aGUgd2VpZ2h0IGluIG1vbnRocywgSSBiZWVuIGZvY3VzaW5nIG9uIGZvcm0uIEkgbGVhbiBmb3J3YXJkIHRvbyBtdWNoICh3aGljaCBJIGFtIHdlbGwgYXdhcmUgb2YpIGFuZCB0aGUgZGVwdGggaXNuIGdyZWF0IChiYXJlbHkgOTAgZGVncmVlcyBidXQgSSBnZXR0aW5nIHRoZXJlISkuIApUbDtkcjogYm90aCBtYWpvciBwYXJ0aWVzIHN1Y2sgYnV0IHRoZSBMTlAgc3Vja3MgYSBiaXQgaGFyZGVyLgpMb29rIGF0IG1vc3QgY29tZWR5IGZyb20gdGhlIDkwcyBsaWtlIEtpZHMgaW4gdGhlIEhhbGwgLyBJbiBMaXZpbmcgQ29sb3IgLyBEYW5hIENhcnZleSBzaG93LiAKTW9uYXJjaHkgb2YgdGhlIFVuaXRlZCBLaW5nZG9tCkl0IG1ha2VzIG1lIHNhZCB5b3UgcmVhZGluZyBjb21tZW50cyBieSB0b3RhbCBzdHJhbmdlcnMgYWJvdXQgeW91ciBwYXJlbnRzLiBObyBvbmUgd2FudHMgdG8gaGVhciB0aGF0IGFib3V0IHRoZWlyIG93biBmbGVzaCBhbmQgYmxvb2QuIApUb255VGhlUHVwcHlGcm9tQiB1CkFjY29yZGluZyB0byBXZWxsbWFyaywgZGF0YSBmcm9tIHBhcnRpY2lwYXRpbmcgY2xpbmljaWFucyBzaG93IHRoYXQgODkgcGVyY2VudCBvZiB0aGUgcGF0aWVudHMgdHJlYXRlZCBpbiB0aGUgcGlsb3QgcmVwb3J0ZWQgYSBncmVhdGVyIHRoYW4gMzAgcGVyY2VudCBpbXByb3ZlbWVudCBpbiAzMCBkYXlzLi4gCkRpYWx1cDE5OTEgdQpXaGF0IGFyZSB5b3UgdGFsa2luZyBhYm91dD8gQWxsIGZyZWUgc29jaWV0aWVzIGxpbWl0IHNwZWVjaCB0byBzb21lIGV4dGVudC4gVGhlIFVTLCBkZXNwaXRlIGFsbCBpdCBjcmFwcGluZyBvbiBhYm91dCBob3cgZnJlZSB0aGV5IGFyZSB0byBzcGVhaywgYWN0dWFsbHkgaGFzIGEgdG9uIG9mIGxpbWl0YXRpb25zIChhbmQgZm9yIHByZXNzIGZyZWVkb20sIGFyZSB3b3JzZSB0aGFuIG1vc3Qgd2VzdGVybiBjb3VudHJpZXMpLiAKVGhpcyBpcyBiYXNpYyBhZHVsdGluZy4gV2hlcmUgZG8geW91IHNlZSB0aGlzIHJlbGF0aW9uc2hpcCBnb2luZz8gSG93IGNhbiB0aGlzIGd1eSBiZSBoZWxwZnVsIG9yIHVzZWZ1bCB0byB5b3UgaW4gdGhlIGZ1dHVyZSBpZiBoZSBoYXMgbWFnZ290IGVuY3J1c3RlZCBjZXJlYWwgYm93bHMuIEF0IGFnZSBvZiwgd2hhdCAyNSwgMjk/IFdoYXRldmVyLiBIZSBuZWVkcyB0byBsZWFybiB0byBhZHVsdCBhbmQgYWNjZXB0IHJlc3BvbnNpYmlsaXR5IGZvciBoaXMgaG91c2UuIElGIHlvdSB3YW50IHRvIG1vdmUgZm9yd2FyZCB3aXRoIGEgcmVsYXRpb25zaGlwIHdoaWNoIHR5cGljYWxseSBpbmNsdWRlcyBhIGhvdXNlLCBjYXJlZXIsIG1hcnJpYWdlLCBraWRzLCB0aGlzIGlzIHN0ZXAgMSBvZiAxMDAuIEFuZCBoZSBkZW1vbnN0cmF0ZWRibHkgZmFpbGVkIGl0LiBNb3ZlIG91dC4gR2V0IHJvb21tYXRlcy4gRGF0ZSBoaW0gaWYgeW91IG11c3QgYnV0LCBtYW4sIHRoZXJlIG11c3QgYmUgYmV0dGVyIGd1eXMgb3V0IHRoZXJlIHRoYW4gdGhpcy4KVGhhdCB0aGluZyB0aGF0IG1vc3Qgb2YgdGhlc2UgZHVkZXMgaGF2ZSBleHBlcmllbmNlZCBjb21pbmcgb3V0IG9mIHRoZWlyIGJvZHkgYWZ0ZXIgYSBzY3JhcGUgb24gdGhlIHBsYXlncm91bmQgb3IgdGhlaXIgbm9zZSB3aGVuIHRoZSB3ZWF0aGVyIGdldHMgdG9vIGRyeSBvciBldmVuIHdoZW4gdGhleSBzaGl0IHNvbWV0aW1lcyAodGhhbmtzIGhlbW9ycmhvaWRzKS4gClRoZXkgZG9uJ3QgcmVhbGl6ZSB0aGF0IG9ubHkgYSBoaWdoIGNhcmQgaGFuZCBpcyBwcmV0dHkgd2VhayB3aXRob3V0IGEgcGFpciwgZmx1c2ggb3Igc3RyYWlnaHQsIGJlY2F1c2UgYW55IG1hZGUgaGFuZCBiZWF0cyBhIEFLIGhpZ2ggaGFuZC4gCkRvIHlvdXIgcGFyZW50cyBoYXZlIGlzc3VlIHdpdGggeW91IHN0YXlpbmcgc29tZXdoZXJlIG92ZXJuaWdodD8gRG8geW91IGhhcHBlbiB0byBoYXZlIGEgc21hbGxlciBvciBjcmVha3kgaG91c2UgbGlrZSBJIGRpZD8gSWYgdGhleSBhcmUgd29ycmllZCwgeW91IGNhbiBwcm9iYWJseSB0YWNrbGUgdGhhdCB3aXRoIGFuIGFkdWx0IGNvbnZlcnNhdGlvbi4gSWYgaXQgaXMgc29tZXRoaW5nIGVsc2UgbGlrZSBub2lzZSwgbWF5YmUgeW91IGNhbiBnZXQgdGhlbSB0byB0ZWxsIHlvdSBhbmQgbWFrZSBzb21lIGNvbXByb21pc2VzLgpET05BVEVUSEUgU09OUyBPRiBBIFBSRUFDSEVSQk9PS1NORVdTTEVUVEVSU1BFQUtJTkcgRU5HQUdFTUVOVFNTVEFORCBVUCBBUklaT05BR0FOR1NNeXRocyBhbmQgRmFjdHNXYXJuaW5nIFNpZ25zUmVhc29ucyBmb3IgSm9pbmluZ0dhbmcgVGFsa0xlYXZpbmcgYSBHYW5nQk9YSU5HUGhvZW5peCBCb3lzIENlbnRlckFyaXpvbmEgR29sZGVuIEdsb3Zlc0pyLiAKRGlmZmVyZW50IHR5cGVzIG9mIG1hc3NhZ2UgYXJlIHBvcHVsYXIgYXQgZGlmZmVyZW50IHRpbWVzLCBiZWNhdXNlIHRoZSBzdHlsZXMgdXNlZCBpbiBtYXNzYWdlIHRoZXJhcHkgdmFyeSBmcm9tIHNtb290aCBhbmQgbG9uZyBzdHJva2VzIHRvIHBlcmN1c3NpdmUgYW5kIHNob3J0IHN0cm9rZXMuIApUaGlzIGJlY29tZXMgbW9zdCBldmlkZW50IGR1cmluZyBleGVydGlvbi4gCkhlIHdhcyBiZXlvbmQgZnVja2VkIHVwIGFuZCBoaXMgYWR1bHQgbGlmZSBzaG93ZWQgdGhhdC4gSGUgbGl2ZWQgaW4gYW4gYW11c2VtZW50IHBhcmsuIApFc3NlbnRpYWxseSwgeW91ciBhcmd1bWVudCBib2lscyBkb3duIHRvOiB0aGlzIHN0dWZmIGlzIGFzIGdvb2QgYXMgaXQncyBldmVyIGdvaW5nIHRvIGdldC4gQW5kIHdoaWxlIHRoYXQgY2FuJ3QgYmUgcHJvdmVuIHdyb25nIChvciByaWdodCksIEkgd291bGRuJ3QgYmV0IG9uIHRoYXQgYmVpbmcgcmlnaHQuClRoZSBpbnRlbnNlIHNlc3Npb25zIG1lYW50IHNoZSBjb3VsZG4ndCBwb3NzaWJseSBzdGFydmUgaGVyIHdheSB0aGluIGFzIHNvbWUgcmVwb3J0cyBzdWdnZXN0LiBCZXNpZGVzLCB0aGUgNSBmb290IDEwIHJlYWxpdHkgc3RhciBoYXMgbG9uZyBzaW5jZSBicm9rZW4gdGhlIHlvIHlvIGN5Y2xpbmcgb2YgaGVyIHlvdXRoLiAiRGlldGluZyBpcyBncmVhdCBidXQgZGlldGluZyBkb2Vzbid0IHR5cGljYWxseSBjcmVhdGUgbG9uZyBsYXN0aW5nIHJlc3VsdHMsIiBzaGUncyBleHBsYWluZWQuIEluc3RlYWQsIHNoZSByZWxpZWQgb24gYSBwcm90ZWluIGhlYXZ5IG1lbnUgb2YgZWdncywgb2F0bWVhbCwgZ3JpbGxlZCBjaGlja2VuLCBmaXNoIGFuZCB2ZWdldGFibGVzIHRvIGtlZXAgaGVyIGZ1ZWxlZCBmb3IgdGhlIGd5bSwgYSBwbGFjZSBzaGUncyBjYWxsZWQgaGVyICJzYW5jdHVhcnkuIgoxMDAgcGxhc3RpYyBwbGF5aW5nIGNhcmRzIGFyZSBtb3JlIGR1cmFibGUgdGhhbiBub3JtYWwgY2FyZHMuIFRoZXkgY2FuIHdpdGhzdGFuZCB0aGUgd2VhciBhbmQgdGVhciB0aGF0IHBsYXlpbmcgY2FuIHB1dCBvbiBhIGRlY2sgb2YgY2FyZHMgZmFyIGVhc2llciB0aGFuIGNhbiBub3JtYWwgY2FyZHMuIFRoZXkgYWxzbyBkbyBub3QgZ2V0IGRhbXAgYW5kIHN0YWluIG9yIGdldCBydWluZWQgYnkgYWNjaWRlbnRhbCBzcGlsbHMgYW5kIHlvdSBjYW4gd2FzaCB0aGVtIG9mZiB3aXRoIG1pbGQgc29hcCBhbmQgd2F0ZXIuLiAKOC4gQXBwbHkgYSBnZW5lcm91cyBhbW91bnQgb2YgQXJjdGljIHNpbHZlciB0aGVybWFsIGNvbXBvdW5kIG9udG8gdGhlIEdQVSwgYW5kIGxldCBpdCBzZXQgZm9yIGZpZnRlZW4gbWludXRlcy4KV2UgYmVsaWV2ZSB0aGF0IHRoZSBwcmFjdGljZSBvZiBob21vc2V4dWFsaXR5IHRlYXJzIGF0IHRoZSBmYWJyaWMgb2Ygc29jaWV0eSwgY29udHJpYnV0ZXMgdG8gdGhlIGJyZWFrZG93biBvZiB0aGUgZmFtaWx5IHVuaXQsIGFuZCBsZWFkcyB0byB0aGUgc3ByZWFkIG9mIGRhbmdlcm91cywgY29tbXVuaWNhYmxlIGRpc2Vhc2VzLiAKSSBhcHByZWNpYXRlIHBlb3BsZSB3aG8gZ28gdGhlIGV4dHJhIG1pbGUgd2hlbiBsaWZlIGZ1Y2tzIHRoZW0gYW5kIHRoZXkgZ290IHRvIGxvc2UgYSBmYW1pbHkgbWVtYmVyLiAKKEFuZHJldyBFY2NsZXMpIj5UaGUgYWN0cmVzcydzIGFiaWxpdHkgdG8gYnJpbmcgbGV2aXR5IHRvIGV2ZW4gdGhlIG1vc3Qgc2luaXN0ZXIgc2NlbmFyaW9zIGlzIGNydWNpYWwgdG8gYSBwcm9qZWN0IGFzIHBlcnBsZXhpbmcgYW5kIHVuc2V0dGxpbmcgICBhbmQgZnVubnkgICBhcyBWZXJob2V2ZW4ncyBFbGxlLCBhIGZpbG0gdGhhdCB1bm1vb3JzIHNwZWN0YXRvcnMgZnJvbSB0aGUgc3RhcnQ6IEFmdGVyIE1pY2hsZSBpcyB2aW9sYXRlZCBpbiBoZXIgbHV4ZSBTYWludCBHZXJtYWluIGhvbWUsIHNoZSBjYWxtbHkgc3dlZXBzIHVwIHRoZSBkZWJyaXMsIGRyYXdzIGhlcnNlbGYgYSBidWJibGUgYmF0aCwgYW5kIGNhbGxzIGZvciB0YWtlb3V0IHN1c2hpLiBXaGVuIHNoZSBkaXNjb3ZlcnMgdGhlIGlkZW50aXR5IG9mIGhlciBhc3NhaWxhbnQsIHNoZSBwdXJzdWVzIGhpbSwgYnV0IGluIGhpZ2hseSB1bmV4cGVjdGVkIHdheXMuLiAKV2VsbCwgSSB0aGluayBhIHBhcnQgb2YgdGhpcyBtYW5nYSBjaGFybSBpcyBpdHMgaGlzdG9yaWNhbCBhY2N1cmFjeSAoZXZlbiBpZiBpdHMgbm90IDEwMCUgYWNjdXJhdGUpLCBhbmQgd2hpbGUgSSBsb3ZlIHNjZW5lcyB3aGVyZSB0aGUgb2RkcyBhcmUgcHJvdmVuIHdyb25nIGFuZCBCYWlqb28gdGFrZXMgb3V0IGEgc2hpdGxvYWQgb2YgcGVvcGxlIG9yIFNoaW4gb3ZlcnBvd2VycyBzb21lb25lIHN1cHBvc2VkbHkgc3Ryb25nZXIgYW5kIG1vcmUgZXhwZXJpZW5jZWQgdGhhbiBoaW0sIGlmIGl0IGhhcHBlbnMgYWxsIHRoZSB0aW1lIGl0cyBnb25uYSBncm93IG9sZCwgYW5kIGJvcmluZy4gQXMgZm9yIHRoZSBmb29kLCBJIHJlYWxseSBkb250IGNhcmUsIEkgd2lzaCBpdCB3YXNudCBzdWNoIGEgYmlnIGZvY3VzIG9mIGF0dGVudGlvbiwgc2luY2UgaXRzIG9ubHkgdGhlcmUgdG8gY3JlYXRlIGRyYW1hLiAKQW1lbi4iLiAKQXQgR2xvYmFsIFBva2VyLCBvdXIgc3dlZXBzdGFrZXMgZW50cmllcyBhcmUgcmVwcmVzZW50ZWQgYXMgYSBzZWNvbmQgZm9ybSBvZiB2aXJ0dWFsIGN1cnJlbmN5LiBUaGlzIGFsbG93cyB1cyB0byBvZmZlciBnYW1lcyB0aGF0IGFyZSBleHBlcmllbmNlZCBtdWNoIG1vcmUgbGlrZSB0cmFkaXRpb25hbCByZWFsIG1vbmV5IHBsYXkuCkZhdGUvQXBvY3J5cGhhIGV2ZW50IGlzIG1pZ2h0IGJlIGdvaW5nIHRvIGhhcyBBc3RvbGZvIFNhYmVyIGFzIFNSIHNlcnZhbnQgZHVlIGhpcyAiU2FiZXIiIGRlc2lnbiBoYWQgYmVlbiBtZW50aW9uZWQgaW4gdGhlIG1hbmdhIGFkYXB0YXRpb24uIFdoaWxlIEFzdG9sZm8gU2FiZXIgaXMgdG8gYmUgaW1wbGVtZW50ZWQgYWNjb3JkaW5nIGZyb20gbGVhayBkYXRhbWluZS4KSXQgd2FzIG15IGZhdGhlciBiaXJ0aGRheSB0aGUgb3RoZXIgZGF5IGFuZCB0byBjZWxlYnJhdGUsIEkgdXNlZCBteSBJbnN0YW50IFBvdCB0byBtYWtlIHRoZSBLb3JlYW4gZmxhdm9yZWQgYnJpc2tldCBmcm9tIERpbm5lciBpbiBhbiBJbnN0YW50IGFuZCBpdCB3YXMgYXN0b25pc2hpbmdseSBkZWxpY2lvdXMgYW5kIGRvbmUgaW4gbGVzcyB0aGFuIGFuIGFmdGVybm9vbi4gV2hhdD8hIChZZXMsIEkgYW0gc3RpbGwgaW4gdGhhdCBhbm5veWluZyBwaGFzZSBvZiBJbnN0YW50IFBvdCBvd25lcnNoaXAgd2hlcmUgSSBjYW5ub3QgZ2V0IG92ZXIgaG93IGZhc3QgaXQgaXMuIFBlb3BsZSwgbWVsdGluZ2x5IHRlbmRlciwgcHJhY3RpY2FsbHkgc3Bvb25hYmxlIGJyaXNrZXQhIEluIGxlc3MgdGhhbiB0aHJlZSBob3VycyEgSSBtZWFuISkgKEkgYWN0dWFsbHkgdXNlZCBUYWZlbHNwaXR6LCBiZWNhdXNlIG15IGJ1dGNoZXIgZGlkbiBoYXZlIGFueSBSaW5kZXJicnVzdCB0aGF0IGRheSwgaW4gY2FzZSBhbnkgb2YgeW91IGFyZSBpbiBHZXJtYW55IGFuZCB3YW50IHRvIG1ha2UgdGhpcyB0b28sIGFuZCBpdCB3YXMgZ3JlYXQuKS4gCjc5IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnby4gCkFueXdheXMsIHRoZSBpZGVhIGlzIHRoYXQgdGhyb3VnaG91dCBoaXN0b3J5IHRoZSBsb3dlciBjbGFzcyBoYXMgYWx3YXlzIGV2ZW50dWFsbHkgZm91Z2h0IGFnYWluc3QgdGhlIHVwcGVyIGNsYXNzLCBsaWtlIGhvdyB0aGUgYm91cmdlb2lzZSBmb3VnaHQgYWdhaW5zdCB0aGUgYXJpc3RvY3JhY3kvbW9uYXJjaHkgYW5kIHRvb2sgdGhlaXIgcG9zaXRpb24gYXMgcnVsaW5nIGNsYXNzLiBTbyB0aGUgaWRlYSBpcyB0aGF0IGV2ZW50dWFsbHkgdGhlIHByb2xldGFyaWF0IHdpbGwgZXZlbnR1YWxseSBvdmVydGhyb3cgdGhlIGJvdXJnZW9pc2UgYW5kIHNpbmNlIHRoZXJlIHdpbGwgb25seSBiZSBvbmx5IGNsYXNzLCBjbGFzc2VzIHdpbGwgZXNzZW50aWFsbHkgYmUgb2Jzb2xldGUuLiAKSGUgc2FpZCBoZSdkIGhlYXJkIGFib3V0IGFuICJhY3Rpb24gY29tbWl0dGVlIiB3b3JraW5nIGFnYWluc3QgdGhlIGNhc2lubyBhbWVuZG1lbnQuLiAKQXQgdGhpcyBwb2ludCBJIHN0YW5kIHVwIGFuZCBjYW4gYmVsaWV2ZSBJIGp1c3QgdGhyZXcgYXdheSBhbGwgbXkgcHJvZml0IHBsdXMgYnV5IGluLiBGb3IgdGhlIHNha2Ugb2YgdGhlIHN0b3J5LCAkMzAwIHdhcyBhcm91bmQgYSB3ZWVrIHBheWNoZWNrIGZvciBtZSwgY29sbGVnZSBzdHVkZW50IHdvcmtpbmcgYXQgYSBncm9jZXJ5IHN0b3JlLiBUaGlzIHdhcyBub3QgbGlmZSBjaGFuZ2luZyBidXQgZGVmaW5pdGVseSBsaWZlc3R5bGUgY2hhbmdpbmcgbW9uZXkuIEkgd2FzIHNpdHRpbmcgaW4gdGhlIDEwIHNlYXQgYW5kIHN0b29kIHVwIHRvIGNvbGxlY3QgbXkgdGhpbmdzIHdoZW4gSSBzZWUgdGhlIGRlYWxlciwgaW4gd2hhdCBJIHJlbWVtYmVyIGFzIHN1cGVyIHNsb3cgbW90aW9uLCByZXZlYWwgdGhlIEFjZSBvZiBzcGFkZXMgb24gdGhlIHJpdmVyLiBJIHdhcyBmbG9vcmVkLiBCaWdnZXN0IHBvdCBJIGV2ZXIgd29uIGNvdXBsZWQgd2l0aCB0aGUgZmFjdCBpdCB3YXMgYSBzdG9uZSBjb2xkIHN1Y2sgb3V0LiBHdXkgaW4gc2VhdCBzZXZlbiBhZGRzIGhlIGZvbGRlZCBhbiBhY2UsIHNvIGFuIGFjdHVhbCBvbmUgb3V0dGVyLiBJcm9uaWNhbGx5LCB0aGUgZ3V5IEkgYmVhdCB3YXMgdGhlIG9ubHkgcmVhc29uIEkgd2FzIGluIHRoZSBjbHViLCBhIGZyaWVuZCBvZiBhIGZyaWVuZCB3aG8gZ290IG1lIHRoZSBpbnZpdGUgdG8gdGhlIHByaXZhdGUgY2x1Yi4KVGhleSB1c2VkIHRvIGNhbGwgaXQgdGhlIDEwMCBkYXkgY291Z2ggYmVjYXVzZSB0aGF0IGhvdyBsb25nIGl0IGxhc3RzLCBhbmQgdGhlcmUgaXMgbm90aGluZyB5b3UgY2FuIGRvIHRvIGVhc2UgdGhlIGNvdWdoLiBZb3UgbGl0ZXJhbGx5IGNhbiBicmVhdGhlIHdoZW5ldmVyIHlvdSBjb3VnaCBpdCBpcyB0ZXJyaWZ5aW5nLiA1IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28uIApTaGUgaGFzIHdvcmtlZCB3aXRoIE5IUyBjbGllbnRzIGFuZCBjb21tdW5pdHkgcHJvamVjdHMgYmVuZWZpY2lhcmllcy4gU29tZSBvZiB3aG9tIHdpdGggc2V2ZXJlIGhlYWx0aCBwcm9ibGVtcy4gCkV2ZW4ga25vd2luZyBpdCB3YXMgY29taW5nLCBhbmQgd2FudGluZyBpdCBhbmQgYmVpbmcgZXhjaXRlZCwgdGhlIGRlcHJlc3Npb24gd2FzIGp1c3Qgc3VmZm9jYXRpbmcgbWUgdW50aWwgSSB3ZW50IHRvIHRoZSBiYXRocm9vbSB0byBjcnkgYmVjYXVzZSBJIHdhcyBydWluaW5nIGV2ZXJ5dGhpbmcgYnkgbm90IGJlaW5nIHN1cGVyIGhhcHB5IGFuZCBwaWN0dXJlIHBlcmZlY3QuIApBbiBvbiB0cmVuZCBuaWNoZS4gCkl0IHNhZCB0aGF0IGEgbW9kZXJuIGRheSBtYW4gc2FsYXJ5IGNhbiBzdXBwb3J0IGEgd29tYW4gc3RheWluZyBob21lIChhdCBsZWFzdCkgdW50aWwga2lkcyBhcmUgc2Nob29sIGFnZWQuIEl0IHdvdWxkIHRoZW9yZXRpY2FsbHkgYmUgc28gbXVjaCBlYXNpZXIgdG8gYmUgYSBnb29kIHBhcnRuZXIsIGdvb2QgcGFyZW50LCBiZXR0ZXIgcGVyc29uIG5vdCBoYXZpbmcgdG8gc3RyZXNzIGFib3V0IGJlaW5nIGEgZ29vZCBlbXBsb3llZSwgYmVpbmcgb24gdGltZSwgZGF5Y2FyZSwgc2ljayBraWRzIChiZWNhdXNlIHRoaXMgaGFwcGVucyBtb3JlIHdpdGggZGF5Y2FyZSksIGV0Yy4uIApNYW55IGluc3RydWN0b3JzIG9mZmVyIGdyb3VwIHJhdGVzIGFuZCBzZXJ2ZSB3aW5lIGFuZCBjaGVlc2UgZm9yIHRoZSBjb21wbGV0ZSBnaXJsJ3MgbmlnaHQgb3V0IGV4cGVyaWVuY2UuLiAKSWYgeW91IGFzayB0aGUgc3VyZ2VvbiBhaGVhZCBvZiB0aW1lLCB0aGV5IG1heSBhbGxvdyB5b3UgdG8gcGVyZm9ybSBhbiBhbnRlcmlvciBkcmF3ZXIvTGFjaG1hbiB0ZXN0IG9uIHRoZSBpbmp1cmVkIGtuZWUgd2hlbiB0aGUgcGF0aWVudCBpcyB1bmRlciBhbmFlc3RoZXNpYS4gSXQgYW1hemluZyB0byBmZWVsIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSBwb3NpdGl2ZSB0ZXN0IHdoZW4gdGhlIHBlcnNvbiBpcyBhd2FrZSB2cyB3aGVuIHRoZXkgYXJlIG91dCBjb2xkICAgdGhlcmUgbm8gcmVzaXN0YW5jZSBmcm9tIHRoZSBoYW1zdHJpbmdzIGFuZCB5b3UgY2FuIHJlYWxseSBmZWVsIGhvdyBsb29zZSBpdCBpcyB3aXRob3V0IHRoZSBpbnRhY3QgQUNMLi4gCkhhbnNvbiBiYWNrZWQgb3V0IG9mIGhlciBlYXJsaWVyIGRlYWwsIGFuZCB0aGUgZGVjaXNpb24gYnJva2UgaGVyIHBhcnR5LCB3aXRoIEJ1cnN0b24gZ29pbmcgcHVibGljIG9uIFRodXJzZGF5LCBwcm9taXNpbmcgdG8gdm90ZSBmb3IgdGhlIGNvcnBvcmF0ZSB0YXggY3V0cyBpbiBkZWZpYW5jZSBvZiBoaXMgbGVhZGVyLiAKKDIwMTcpLCBoZXJlIGEgc2ltaWxhciBtZXRob2QgaXMgYXBwbGllZCB0byBzdWJlbGl0ZSBhdGhsZXRlcy4gVGhlc2Ugc3ViZWxpdGUgYXRobGV0ZXMgd2VyZSBlbnJvbGxlZCBvbiBhIFRlYW0gR0IgdGFsZW50IGRldmVsb3BtZW50IHByb2dyYW0gYW5kIHdlcmUgdW5kZXJnb2luZyB0cmFpbmluZyBmb3IgcG9zc2libGUgT2x5bXBpYyBjb21wZXRpdGlvbiBpbiA0IDggeWVhcnMuIApJIHdhcyBqdXN0IHByYWN0aWNpbmcgbXkgaW5zdHJ1bWVudCBhZ2FpbiA6ICkuIApUaGlzIGhhcHBlbmVkIG92ZXIgdGhlIHdlZWtlbmQgYXQgYSBDYXNpbm8gcGxheWluZyBMaXZlIDEvMi4gV2UgaGFkIGEgc3VwZXIgZnVuIHBsYXllciBhdCB0aGUgdGFibGUgd2hvIHdhcyB0YWxrYXRpdmUsIGEgbGl0dGxlIGRydW5rLCBhbmQgc3Bld2luZyBvZmYuIEl0IGFjdHVhbGx5IG9wZW5lZCB1cCB0aGUgZ2FtZSBhIGJpdCBzaW5jZSBldmVyeW9uZSB3YXMgcGxheWluZyB2ZXJ5IG5pdHR5L3Bhc3NpdmUuIEF0IHRoaXMgcG9pbnQgZnVuIHBsYXllciBoYXMgZ29uZSB0aHJvdWdoIGFib3V0IDQgNSBkZWFsZXIgc3dpdGNoZXMgd2l0aG91dCBhbnkgY29uY2VybnMuIEV2ZXJ5b25lIGlzIGhhcHB5LCBoYXZpbmcgZnVuIGFuZCBtb3N0IGltcG9ydGFudGx5IGZ1biBwbGF5ZXIgaGFzIGEgYmlnIHN0YWNrLiBOb3QgdG8gbWVudGlvbiBoZSBoYXMgYmVlbiB0aXBwaW5nIHZlcnkgZ2VuZXJvdXNseSBzbyB0aGUgZGVhbGVycywgYmFyIHNlcnZlcnMsIGV0YyBhcmUgYWxsIGhhcHB5LgpXb3VsZCB0aGlzIG1lYW4gbWFuZGF0b3J5IHN0ZXJpbGlzYXRpb24gb2YgdGhlIEp1ZGFpYyBwZW9wbGUsIGluIG9yZGVyIHRvIHBoYXNlIG91dCB0aGVpcmlnaHQgcGVvcGxlIGFuZCB0byBlbnN1cmUgbm9uZSBvZiB0aGVpciBmdXR1cmUgY2hpbGRyZW4gYXJlIGJvcm4gdG8gZXhwZXJpZW5jZSBjb25maW5lbWVudCwgaXMgZXRoaWNhbD8KQmVzdCBiaWQgbm8gZ3VhcmFudGVlIG9mIGJlc3QgcmVzdWx0Ck5vdCBzdXJlIG9mIGFsbCB0aGUgZGV0YWlscyAgYnV0IEkgYW0gc3VyZSB0aGV5IHdpbGwgZmlndXJlIG91dCBob3cgdG8gdXNlIHRoZW0gZm9yIGJ1eSBpbi4gCkhlIHJlY2VpdmVkIDQ2IHBlciBjZW50IG9mIHRoZSB2b3Rlcy4uIApUaGUgc2FtZSBpZiBwbGF5ZXIgb25lIGhhcyAyLDIsSyxLLDcgYW5kIHBsYXllciB0d28gaGFzIDIsMixKLEosSyBwbGF5ZXIgb25lIHdvdWxkIHdpbiBiZWNhdXNlIGhpcyBDb3dib3lzKHBhaXIgb2YgS2luZ3MpIGJlYXRzIHBsYXllciB0d28ncyBGaXNoaW5nIEhvb2tzKEphY2tzKS4gCkRvbid0IGFzayBtZSB3aHkuIApNUCByYWlzZSwgU3RlYW1pbmcgZ3V5IGNhbGxzIG9uIGJ1dHRvbiwgSGVybyBwdXRzIGluIHF1aXRlIGEgbGFyZ2UgM2IgKGJjIHRoZXkgbmV2ZXIgYmVsaWV2ZSBtZSEpLiAKVGhpcyBpcyBiZWNhdXNlIGFuaW1hbHMgd2FudCB0byBiZSBhYmxlIHRvIGVhdCB0aGluZ3MsIGFuZCBub3Qgd29ycnkgYWJvdXQgY29tcG91bmRzIGluIHRoZSBmb29kIGNoYW5naW5nIHRoZSB3YXkgdGhlaXIgYnJhaW4gYmVoYXZlcy4gCkhlIHdhcyB3aW5uaW5nIGFsbCB0aGUgcG90cyBhbmQgaGFkIHByb2JhYmx5IGJ1aWx0IHVwIGEgc3RhY2sgb2YgJDVrKy5PbmUgcXVpZXQgb2xkZXIgZ3V5IGF0IG91ciB0YWJsZSBiZWF0cyBBbmRyZXcgaW4gYSAkMS41ayBwb3QuIEFuZHJldyB3YXMgYmVpbmcgYSBtYW5pYWMsIGJ1dCBoYXBwZW5lZCB0byBhY3R1YWxseSBoYXZlIEFBeHggaW4gdGhpcyBoYW5kIGFuZCB0aGUgb3RoZXIgZ3V5IGhhZCBLS3h4IGFuZCBzdWNrZWQgb3V0LlY6IEtpZCwgSSBtYWRlIG1vcmUgbW9uZXkgaW4gdGhlIGxhc3QgaG91ciBwbGF5aW5nIHdpdGggeW91IHRoYW4geW91IG1ha2UgaW4gYSBmdWNraW5nIHllYXIuIFRoZW4gaGUgcHVsbHMgb3V0IHRocmVlICQxMGsgY2hpcHMgZnJvbSBoaXMgcG9ja2V0LCBzbGFtcyB0aGVtIG9uIHRoZSB0YWJsZSwgYW5kIHNheXMsIGxldCBwbGF5IGZvciBmdWNraW5nIHJvbGxzLlRoZSB0YWJsZSBnb2VzIGRlYWQgc2lsZW50IGluIHRoZSBjaGFuZ2Ugb2YgdG9uZS5UdXJucyBvdXQgdGhhdCB0aGlzIHF1aWV0IGd1eSB3YXMgYSBodWdlIHRlY2hpZSB3aG8gd2FzIHdvcnRoICQxMDBNKyAob25lIG9mIHRoZSBiaWcgdGVjaCBjcmVkaXQgY2FyZCBwcm9jZXNzb3JzIGxpa2UgU3RyaXBlIG9yIHNvbWV0aGluZykuQW55d2F5cywgYXMgZXhwZWN0ZWQsIEFuZHJldyB3ZW50IGludG8gaGlzIHNoZWxsLCBrZXB0IGRyaW5raW5nLCBhbmQgcGlzc2VkIGF3YXkgaGlzIHJlbWFpbmluZyBzdGFjayBieSB0aGUgZW5kIG9mIHRoZSBuaWdodCBiZWZvcmUgc3R1bWJsaW5nIG91dCB0aGUgY2FyZCByb29tLi4gCkRhbmllbCBSQU9VTCwgRGFuaWVsIFJFSU5FUiwgTW1lIFBhdHJpY2lhIFNDSElMTElOR0VSLCBNLiAKRGVyIGRldXRzY2hlIFBhcnQgZGVzIFRlYW1zIGRlcyBiZWxpZWJ0ZW4gcyB3aXJkIGF1cyBBbmxhc3MgZGVyIEV1cm9wZWFuICBUb3VyIHZvbiBkZW4gYmVpZGVuIGRlciBPbmxpbmUgIFN6ZW5lLCBEYXZpZCBXaW50ZXJzYmVyZ2VyIHVuZCBDaHJpc3RpYW4gSGVpY2ggZ2VmaHJ0LiBJdm8gQ2hlc3NtYXN0ZXIiIERvbmV2IG11c3N0ZSBhbHMgd2VpdGVyZXIgVGVpbG5laG1lciBsZWRpZ2xpY2ggZGllIEdyZW56bGluaWUgYXVzIGRlbSBiZW5hY2hiYXJ0ZW4gc3RlcnJlaWNoIHBhc3NpZXJlbiwgdW0gYW4gZGllc2VtIGJlbGllYnRlbiAgRXZlbnQgdGVpbHp1bmVobWVuLgpJIHRoaW5rIHdoYXQgeW91IHNheSBpcyB0cnVlLCBidXQgSSB0aGluayB0aGVyZXMgbW9yZSB0byBpdCB0aGFuIHRoYXQuIApXZSBzaG91bGQgc3RvcCB0YWxraW5nIGFib3V0IDIwMDIgbGlrZSBpdCB3YXMgYSByZWFsIGFjaGlldmVtZW50LiAKSXQgc2FkIGJ1dCBzb21ldGhpbmcgSSBhY2NlcHQuLiAKVGhlIGluY3JlYXNlIG9mICQ0LjMgYmlsbGlvbiAgIG9yIDYgcGVyIGNlbnQgICB3YXMgZGVzcGl0ZSB0aGUgbnVtYmVyIG9mIGdhbWluZyBtYWNoaW5lcyBvcGVyYXRpbmcgaW4gTlNXIHB1YnMgYW5kIGNsdWJzIGZhbGxpbmcgYnkgMjQ0IHRvIDkzLDM2NCBpbiB0aGUgc2FtZSBwZXJpb2QuIApVbmV4cGVjdGVkbHksIERhcmJ5IGJlY29tZXMgYW4gdW5kZXJjb3ZlciBpbmZvcm1hbnQgZm9yIHRoZSBGQkksIG1ha2luZyBoaW0gb25lIG9mIHRoZSBtb3N0IGhhdGVkIHBlb3BsZSBpbiB0aGUgcmFkaWNhbCBsZWZ0aXN0IGNvbW11bml0eS4KVGhlIHByZXZhbGVuY2Ugb2YgdGhlc2UgcHJvZ3JhbXMgaXMgbm8gc3VycHJpc2UgY29uc2lkZXJpbmcgdGhhdCA4MCBwZXJjZW50IG9mIHRoZSBJbmRpYW4gcG9wdWxhdGlvbiB1c2VzIEF5dXJ2ZWRpYyByZW1lZGllcywgZWl0aGVyIGV4Y2x1c2l2ZWx5IG9yIGluIGNvbmp1bmN0aW9uIHdpdGggV2VzdGVybiB0cmVhdG1lbnRzIFtzb3VyY2U6IE5DQ0FNXS4gCkkgd2FudCBwZW9wbGUgdG8gd29yayB3aXRoIG1lIHRoZSBuZXh0IHRpbWUgdGhleSBydW4gaW50byBhbiBpc3N1ZSBiZWZvcmUgZG9pbmcgc29tZSBzdHVwaWQgc2hpdCB0aGV5IGFyZW4gc3VyZSBhYm91dCwgYmVjYXVzZSBpbiB0aGUgZW5kLCBpZiB0aGV5IGZ1Y2sgdXAsIEkgYmUgdGhlIG9uZSB0byBjbGVhbiB1cCB0aGUgbWVzcy4KSGUgaGFkIGFsc28gdHJpZWQgY29jYWluZSBvbmNlLiBCZXlvbmQgaW50dWl0aW9uLCB0aGVyZSBhcmUgYSBmZXcgc3BlY2lmaWMgdGhpbmdzIHlvdSBjYW4gbG9vayBmb3IgdG8gaGVscCB5b3UgZGV0ZXJtaW5lIHdoZXRoZXIgYSBndXkgaXMgZW1vdGlvbmFsbHkgbWF0dXJlIGVub3VnaCBmb3IgYSBjb21taXR0ZWQgcmVsYXRpb25zaGlwLiBCeSBzdGF5aW5nIHBvc2l0aXZlIGl0IGNhbiBoZWxwIG90aGVycyBhcm91bmQgeW91LCBhbmQgaG9wZWZ1bGx5IGl0IGNhbiBoZWxwIGFueSBlbW90aW9uYWwgaW1tYXR1cmUgcGVyc29uIG9yIHBlb3BsZSB3ZSBoYXZlIGVuY291bnRlcmVkIGluIG91ciBsaXZlcy4uIApPbiB0aGUgd2Vla2VuZHMgaSBwbGF5IGNhc2ggZ2FtZXMgd2l0aCBzb21lIGZyaWVuZHMgb2YgbWluZSwgVXN1YWxseSB3ZSBhcmUgbGFpZCBiYWNrIGFuZCBjaGlsbC4gCkZvdXIgRWRtb250b24gY2l0eSBwb2xpY2Ugb2ZmaWNlcnMgc2luY2UgMTkxOCBoYXZlIGJlZW4gZ3VubmVkIGRvd24gaW4gdGhlIGxpbmUgb2YgZHV0eSwgdGhlIGxhdGVzdCAzNSB5ZWFyIG9sZCBEYW5pZWwgV29vZGFsbCBvbiBNb25kYXkuClN0ZXZlbnN0ZXJrICAxMSBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClNhbWUgdGhpbmcgaGFwcGVuZWQgdG8gbWUhIFRob3VnaCBhZG1pdHRlZGx5IGxlc3MgaW1wb3J0YW50IGEgcHJvamVjdC4gTXkgc2Nob29sIG1hZGUgYSBoZXJpdGFnZSBkb2N1bWVudGFyeSBhcyBpdCB3YXMgZ2V0dGluZyBzaHV0IGRvd24uClRob3VnaCBsb29raW5nIGF0IHlvdXJzLCBhdCAxMjUlIHBvd2VyPyBUaGF0IDI1JSBhYm92ZSBhbHJlYWR5PyBJIGNhbiBvbmx5IG1hbmFnZSB3aXRoICsxNTBNSHogb3Igc28gb24gY29yZSBjbG9jayBnaXZpbmcgbXkgY2FyZCBhIG5pY2UgMjA1ME1IeiBhZnRlciBib29zdCBhbmQgKzkwME1IeiBvbiB0aGUgbWVtb3J5IGNsb2NrLiAKTWFuIG15IHBoaWxvc29waHkgaXMgbG9vayBhdCB0aGUgY2hhcnRzIGZyb20gYSB5ZWFyIGFnby4gSWYgeW91IHdvdWxkJ3ZlIGJlZW4gc2tlcHRpY2FsIGxpa2UgdGhpcyBhIHllYXIgYWdvIGFuZCBqdXN0IHdlbnQgZm9yIGl0LCB5b3UgY291bGQgYmUgYSBtaWxsaW9uYWlyZS4gV2UncmUgc3RpbGwgaW4gdGhlIGVhcmx5IHN0YWdlcyBvZiBjcnlwdG8uIFN1cmUsIHlvdSBtaWdodCBiZSBkb3duIGluIHRoZSBzaG9ydCB0ZXJtLCBidXQgYSB5ZWFyIGZyb20gbm93IHRoYXQgbGl0dGxlIGRpcCB3b24ndCBtYXR0ZXIuCkJlcm5hcmQgREVST1NJRVIsIE1hcmMgRE9MRVosIEp1bGllbiBEUkFZLCBUb255IERSRVlGVVMsIFdpbGxpYW0gRFVNQVMsIFl2ZXMgRFVSQU5ELCBPbGl2aWVyIERVU1NPUFQsIE1tZXMgQ29yaW5uZSBFUkhFTCwgR2VuZXZpdmUgRklPUkFTTywgTU0uIE1pY2hlbCBGUkFOQUlYLCBKZWFuIENsYXVkZSBGUlVURUFVLCBNbWUgR2VuZXZpdmUgR0FJTExBUkQsIE1NLiBKZWFuIEdMQVZBTlksIERhbmllbCBHT0xEQkVSRywgTW1lcyBQYXNjYWxlIEdPVCwgRGFuaWxlIEhPRkZNQU4gUklTUEFMLCBTYW5kcmluZSBIVVJFTCwgTU0uIApJdCBkcmF3IGEgY29wIGF0dGVudGlvbiBhbmQgY2xlYXIgdGhlIHdheSBmb3IgQWlkZW4uIApUaGV5IGNhbiBiZSBncm9zcyB0b2dldGhlciwgbGVhcm4gdG9nZXRoZXIsIGFuZCBoZWxwIGVhY2ggb3RoZXIgYmVjb21lIHBhcnQgb2YgdGhlIGNvbW11bml0eS4gClRoaXMgbWlnaHQgbm90IGJlIHdoYXQgeW91IHdlcmUgbG9va2luZyBmb3IsIGJ1dCBJIGdvbm5hIHRlbGwgaXQgYmVjYXVzZSB3aGlsZSB0aGUgcHJvcG9zYWwgaXRzZWxmIHdhcyByb21hbnRpYywgdGhlIG5pZ2h0IGl0c2VsZiB3YXNuIE1pbmUgd2FzIHN3ZWV0IHRvbywgYnV0IGl0IGhhZCBhIGRhcmsgY2xvdWQgb3ZlciBpdCBiZWNhdXNlIEkgaGF2ZSBiaXBvbGFyIGFuZCB3YXMgaW4gYSBTRVJJT1VTIGxvdyBkZXByZXNzaW9uLiBMaWtlIG5lYXJpbmcgc3VpY2lkYWwgbGV2ZWxzLCBvbmx5IGEgeWVhciBhbmQgYSBoYWxmIG9yIHNvIGFmdGVyIEkgZ290dGVuIG91dCBvZiB0aGUgaG9zcGl0YWwgZm9yIHN1aWNpZGFsIGlkZWF0aW9uLiBBbmQgSSBiZWVuIGF0IHRoYXQgbG93IHBvaW50IGZvciBhIGNvdXBsZSB3ZWVrcyBkZXNwaXRlIG15IG5vdyBodXNiYW5kIGJlaW5nIGhvbWUgZm9yIHRoZSBob2xpZGF5cyAoaGUgd2FzIGF0IG1pbGl0YXJ5IHRyYWluaW5nKS4gU28gSSB3YXMgc3VwZXIgaGFwcHkgdG8gaGF2ZSBoaW0gaG9tZSwgYnV0IGhvcnJpYmx5IGRlcHJlc3NlZCBhbmQgc3RydWdnbGluZyB3aXRoIG15IGpvYi4KMy4gTmV4dCwgeW91IHdpbGwgd2FudCB0byB0YWtlIHRoZSBkaWNlIGpld2VscnkgcGllY2VzIGFuZCBzbGlkZSB0aGVtIHRocm91Z2ggdGhlIGJvdHRvbSBob2xlIG9uIHRoZSBQb2tlciBDaGlwLiBHZW5lcmFsbHksIHRoZXJlIHdpbGwgYmUgYSBjbGFzcGluZyBkZXZpY2UgdGhhdCB5b3UgY2FuIGNsb3NlIHVwIG92ZXIgdGhlIGhvbGUgdGhhdCB0aGUgcGllY2UgaXMgZ29pbmcgaW50by4gCkF1IHZlc3RpYWlyZSwgbm90cmUgYWJzdXJkZSBlbnZpZSBkZSBjb252YWluY3JlIHF1aSBxdWUgY2Ugc29pdCBkZSBxdW9pIHF1ZSBjZSBzb2l0ICFTT1VSQ0UgOiBMZSBQb2ludC4uIApJbiBqdXh0YXBvc2luZyBhIHZhcmlldHkgb2YgbGl0ZXJhcnkgYW5hbHlzZXMgb2Ygc2VsZWN0ZWQgc3RvcmllcyB3aXRoIHR3byBvdGhlciAuIERvd25sb2FkIFNhbXBsZSBwYWdlcyAyIFBERiAoMTA5LjEgS0IpOyBEb3dubG9hZCBUYWJsZSBvZiBjb250ZW50cyBQREYgKDYwLjcgS0IpLiBUb28gTXVjaCBIYXBwaW5lc3MgQWxpY2UgTXVucm8gUmVhZCBEb3dubG9hZCBQREYvQXVkaW9ib29rIC4gQSBuZXdseSAuIE1lam9yZXMgTGlicm9zLCBlQm9va3MgbyBOb3ZlbGFzIGRlbCBlc2NyaXRvciBBTElDRSBNVU5STyBjb24gc3UuIAoiQnMgZG9jdG9yIHNhaGliYSwgbGFyYWkgaG8gZ3lpIHRoaS4iCklmIHRoZSB1c2Ugb2YgdGhlIG1ldGhvZCBpcyBhY2NlcHRhYmxlLCBhIGRlY2lzaW9uIGNhbiBiZSBtYWRlLiAKRnJleWEgbWlnaHQgKGV2ZW50dWFsbHkpIHNpZGUgd2l0aCBLcmF0b3MgaW4gdGhpcywgaWYgaGVyIGhhdHJlZCBmb3IgT2RpbiBpcyBzdHJvbmdlciB0aGFuIHRoYXQgZm9yIEtyYXRvcyByaWdodCBub3cuIE90aGVyd2lzZSBzaGUgbWlnaHQgam9pbiBpbiBhcyBhIHRoaXJkIHBhcnR5LCBwZXJoYXBzIGV2ZW4gbWFuYWdpbmcgdG8gcmFsbHkgdGhlIFZhZW5pciBhbmQvb3IgdGhlIFZhbGt5cmllczsgSnJtdW5nYW5kciBpcyBkZWZpbmV0bHkgb24gS3JhdG9zIChvciBBdHJldXMpIHNpZGUgYW5kIHdpbGwgcHJvYmFibHkgaGVscCBoaW0gaW4gdGhlIGZpZ2h0IGFnYWluc3QgVGhvciwgd2hpY2ggaW4gaXRzZWxmIGlzIG9uZSBvZiB0aGUgdHJpZ2dlcnMgZm9yIGRpdmluZSBDaXZpbCB3YXIuIFdlbGNvbWUgdG8gUmFnbmFyay4uIApCcmVha3Rocm91Z2ggaW4gQmFkIEJlYXQgUmVzZWFyY2ggQXN0b3VuZHMgU2NpZW50aXN0cyBpbiB0aGUgRmllbGQKSG93ZXZlciwgaXQgc2VlbXMgd2UgbWlzc2VkIHRoZSBtYXJrIGR1cmluZyBhc3BlY3RzIG9mIHlvdXIgdmlzaXQuIApJbmNvcnBvcmF0ZSB5b3VyIGNlcnRpZmljYXRpb25zIGludG8gdGhlIG5hcnJhdGl2ZSwgc3VjaCBhcyBhIHByb2Zlc3Npb25hbCBkZXNpZ25hdGlvbiBmcm9tIHRoZSBJbnRlcm5hdGlvbmFsIEFpcmxpbmUgVHJhbnNwb3J0IEFzc29jaWF0aW9uIFRyYWluaW5nIGFuZCBEZXZlbG9wbWVudCBJbnN0aXR1dGUgb3IgdHJhdmVsIGNvdW5zZWxvciBjZXJ0aWZpY2F0aW9uIHRocm91Z2ggdGhlIFRyYXZlbCBJbnN0aXR1dGUuIEFsc28sIGlmIHlvdSdyZSBjZXJ0aWZpZWQgdGhyb3VnaCBUaGUgVHJhdmVsIEluc3RpdHV0ZSBhbmQgc3VibWl0dGVkIGEgd2hpdGUgcGFwZXIgICBwYXJ0IG9mIHRoZSBjZXJ0aWZpY2F0aW9uIHJlcXVpcmVtZW50cyAgIHRoYXQncyBwYXJ0aWN1bGFybHkgcmVsZXZhbnQgdG8gdGhlIGpvYiB5b3UncmUgYXBwbHlpbmcgZm9yLCBzbyBpbmNsdWRlIHRoZSBwYXBlcidzIHRpdGxlLgpUaGlzIGFtb3VudCBvZiBtb25leSBjYW4gYmUgYSBzbWFsbCBwZXJjZW50YWdlIG9mIHRoZSBhY3R1YWwgcG9vbCBvZiBtb25leSBvbiBwb2tlciwgd2hpY2ggd2lsbCBiZSBkZWR1Y3RlZCBmb3IgZWFjaCBnYW1lIG9yIGl0IGNhbiBiZSBpbiB0aGUgZm9ybSBvZiBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2YgdGhlIGZlZXMuIApHbnJwNDUgdQpDZXJ0YWlucyBkZSBjZXMgZHRlcm1pbmFudHMgZHBlbmRlbnQgZGlyZWN0ZW1lbnQgZGUgbm91cywgbWFpcyBsYSBwbHVwYXJ0IHNvbnQgbGlzLCBkaXJlY3RlbWVudCBvdSBpbmRpcmVjdGVtZW50LCAgbCdvcmdhbmlzYXRpb24gc29jaWFsZS4uIApJZiB0aGlzIGlzIHRoZSBzb3J0IG9mIGFjdGl2aXR5IHNoZSBsaWtlLCB0aGUgbG9jYWwgInBhaW50IGFuZCBzaXAicyB3aWxsIGFsbCBiZSBkb2luZyBWYWxlbnRpbmUgc3BlY2lhbHMgd2hlcmUgeW91IG1ha2UgYSBwYWludGluZyB0b2dldGhlci4gVGhleSB0YWxrIHlvdSB0aHJvdWdoIHRoZSBwYWludGluZyBzdGVwIGJ5IHN0ZXAgYnV0IHRoZXJlIHN0aWxsIGEgbG90IG9mIHRpbWUgZm9yIHRhbGtpbmcgdG8gZWFjaCBvdGhlci4gCklsIHN1ZmZpdCBkZSB0YXBlciAiUHJvbWVuYWRlIFVyYmFpbmUiIGRhbnMgbGUgbW90ZXVyIGRlIHJlY2hlcmNoZSBkZSBjZSBibG9nLCBwb3VyIHZvaXIgIHRyYXZlcnMgbGVzIGRpemFpbmVzIGQnYXJ0aWNsZXMgcXVlIG5vdXMgbHVpIGF2b25zIGNvbnNhY3JzLCBxdWUgY2UgcHJvamV0IGEgdW5lIGhpc3RvaXJlIHBvdXIgbGUgbW9pbnMgY2hhb3RpcXVlLiBWb2lsIHF1aSBleHBsaXF1ZSBub3RyZSBsZ2l0aW1lIGlucXVpdHVkZSBhcHJzIHVuIGxvbmcgc2lsZW5jZSBkZSBsJ0h0ZWwgZGUgVmlsbGUgc3VyIGNlIHByb2pldC4gRXQgbm91cyBuZSBzb21tZXMgcGFzIGxlcyBzZXVscyAgcydlbiB0cmUgaW5xdWl0cywgZCdhdXRyZXMgYXNzb2NpYXRpb25zIGQnaGFiaXRhbnRzLCBEZW1haW4gTGEgQ2hhcGVsbGUgZXQgU09TIExhIENoYXBlbGxlIHBvdXIgbmUgcGFzIGxlcyBjaXRlciwgbCdvbnQgYXVzc2kgZmFpdCBzYXZvaXIuLiAKVGhlIEdvb2QgdGhlIEJhZCB0aGUgVWdseSBpcyBwcm9iYWJseSB0aGUgZWFzaWVzdCBzdGFydGluZyBwb2ludCwgYnV0IEZvciBhIEZldyBEb2xsYXJzIE1vcmUgYW5kIHJlYWxseSBPbmNlIFVwb24gYSBUaW1lIGluIHRoZSBXZXN0IGFyZSBlcXVhbGx5IGdyZWF0LCB0aGUgbGF0dGVyIGJlaW5nIG15IGZhdm9yaXRlIG9mIExlb25lLiAKSGVyb25zIHNwZWNpYWxpemVzIGluIGxvY2FsbHkgc291cmNlZCBBbWVyaWNhbiBjdWlzaW5lIHdpdGggaG9tZWdyb3duIGZydWl0cywgdmVnZXRhYmxlcyBhbmQgaGVyYnMgZnJvbSBhIG5lYXJieSBmYXJtLiBXaGlsZSB5b3UgbWF5IGJlIHRlbXB0ZWQgdG8gcmVtYWluIG9uIHRoZSBzZXJlbmUgZ3JvdW5kcyBvZiB0aGUgaG90ZWwsIGlmIHlvdSBhbmQgeW91ciBzd2VldGhlYXJ0IHdhbnQgdG8gdmVudHVyZSBlbHNld2hlcmUsIGRvd250b3duIFJhbGVpZ2ggaXMgbGVzcyB0aGFuIDEwIG1pbGVzIGF3YXkuIEEgZ3JlYXQgd2F5IHRvIGV4cGxvcmUgdGhlIHN0YXRlIGNhcGl0YWwgaXMgdmlhIFRyaWFuZ2xlIEdsaWRlcywgd2hpY2ggb2ZmZXJzIFNlZ3dheSB0b3VycyB0aHJvdWdoIHRoZSBjaXR5J3MgaGlzdG9yaWMgbmVpZ2hib3Job29kcyBhbmQgZGluaW5nIGFuZCBuaWdodGxpZmUgaHVicy4gCiAxMjAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0kgd291bGQgcmVhbGx5IGxpa2UgdG8ga25vdyB3aGF0IE1pY2hhZWwgQ2h1IGFjdHVhbGx5IGhhcyBwbGFubmVkIGZvciBhbnl0aGluZyBPdmVyd2F0Y2ggcmVsYXRlZCBvdGhlciB0aGFuIGVkaXRpbmcgdGhlIHByZXZpb3VzIGxvcmUgaW50byB0aGUgaG9ycmlibGUgc3RhdGUgaXQgaXMgbm93LiBObyBpbiBnYW1lIGludGVyYWN0aW9ucyBhcmUgdG8gYmUgdGFrZW4gYXMgdHJ1ZSBsb3JlLCB0aGVyZSB3YXMgdGhlIHdob2xlIGRyYW1hIGFib3V0IHRoZW0gY2hhbmdpbmcgdGhlaXIgbWluZCBhYm91dCB3aGV0aGVyIHRoZSBwZXJzb24gUGhhcmFoIHdhcyB3aXRoIGluIHRoZSBjb21pY3Mgd2FzIGhlciBmYXRoZXIgb3Igbm90LiAKSWYgeW91IGNhbiBjb21lIHVwIHdpdGggMTAwayBmb3IgYmFpbCwgeW91IGNhbiBwYXkgeW91ciBjaGlsZCBzdXBwb3J0Li4gCkkgZ3Vlc3MgaGUgdGhvdWdodCB3ZSB3ZXJlIGZyaWVuZHMgKEkgd2FzIHJlYWxseSBjb25mdXNlZCBieSB0aGlzKS4gClp5bmdhIGFsc28gbm90ZWQgdGhhdCBjb21wYW5pZXMgdGhhdCBkbyBub3QgbWFrZSBzb2NpYWwgZ2FtZXMgdG9kYXkgbWF5IGRlY2lkZSB0byBlbnRlciB0aGUgbWFya2V0IGluIHRoZSBmdXR1cmUuIApBIGZ1cm5hY2Ugcm9vbSB0aGF0IGNvbnRpbnVhbGx5IGdyb3dzIGhvdHRlciB1bnRpbCBldmVyeXRoaW5nIGluc2lkZSBpcyBpbmNpbmVyYXRlZC4gQXQgbGVhc3Qgb25lIHBsYXllciBtdXN0IHN0YW5kIG5lYXIgdGhlIGZsYW1lcyB0byBmaWdodCBvZmYgdGhlIGZpcmUgZWxlbWVudGFscyBvciBob2xkIGRvd24gdGhlIHByZXNzdXJlIHJlbGVhc2UgdmFsdmUsIHdoaWxlIHRoZSBvdGhlcnMgY2hpcCBhd2F5IGF0IHRoZSBpbmNvbWluZyBtaW5pb25zIG9yIGV4aXQgcHV6emxlLgpZb3UgbWlnaHQgYWxzbyBhc2sgZm9yIG1vcmUgZGF0YSByZWdhcmRpbmcgdGhlIGh5Z2llbmUgbWVhc3VyZXMgcG9saWN5IGFwcGxpZWQgYnkgdGhlIHBlcnNvbm5lbC4uIApCZWVuIGluIGEgc2ltaWxhciBzaXR1YXRpb24gYmVmb3JlIGFuZCBJJ20gc28gZ2xhZCB5b3UgY2FsbGVkIGFuaW1hbCBjb250cm9sLiBJIGhvcGUgdGhlIG93bmVyIGdldHMgc2V2ZXJlbHkgZmluZWQsIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgdGhhdCBvbmUgb2YgdGhlIGRvZ3MgYml0IHlvdS4gClRoYXQgaGFzIGZhbGxlbiBieSB0aGUgd2F5c2lkZSBhbmQgd2hhdCBJIHJlYWxseSB3YW50IG5vdyBpcyBjcmFwIHRoYXQgd29ya3MgdGhlIGZpcnN0IHRpbWUgYW5kIGV2ZXJ5IHRpbWUuIEkgZG9uIGhhdmUgdGltZSB0byBzcXVpbnQgYXQgdGhlIHRpbnkgcHJpbnQgb24gYSBidW5jaCBvZiBidXR0b25zIGFuZCBJIHplcm8gaW5jbGluYXRpb24gdG8gc29ydCB0aHJvdWdoIGEgZG96ZW4gbWVudXMgdG8gbWFrZSBteSBUViBzd2l0Y2ggZnJvbSB0aGUgY2FibGUgYm94IHRvIHRoZSBEVkQuIFRoYXQgc2hpdCBhbm5veXMgbWUgbm93Li4gCkp1bXBpbmcgb24gdGhlIGFsdGVybmF0aXZlIHRyYW5zcG9ydGF0aW9uIHF1ZXN0aW9uLiBPbmUgb2YgdGhlIHJlYXNvbnMgd2UgZ290IGEgNCBwYWNrIHRvIExvdmVsYW5kIHRoaXMgeWVhciB3YXMgYmVjYXVzZSB0aGV5IG9mZmVyIGEgYnVzIGZyb20gVW5pb24gU3RhdGlvbi4gCkhpcyB3YXMgbW9yZSAiZGljdGF0b3JzaGlwIiB0aGFuICJvZiB0aGUgcHJvbGV0YXJpYXQiLiBGb3IgdGhpcyBoZSBuZWVkZWQgdG8gZWxpbWluYXRlIHRoZSBDYXBpdGFsaXN0IGNsYXNzIGJlY2F1c2UgdGhleSB3ZXJlIGEgdGhyZWF0LiBIZSBhbHNvIGJlbGlldmVkIGluIERlbW9jcmF0aWMgQ2VudHJhbGlzbSwgd2hlcmUgd29ya2VycyBvbmx5IGVsZWN0IG1lbWJlcnMgb2YgdGhlIHZhbmd1YXJkIHBhcnR5LiBOb3cgdGhlcmUgd2VyZSB0aGluZ3MgaGUgYW5kIE1hcnggYWdyZWVkIG9uLCB0aGV5IGJvdGggZGlkbid0IGxpa2UgaGVybyB3b3JzaGlwIGFuZCByZWxpZ2lvbiwgc28gaGUgcGVyc2VjdXRlZCB0aGUgY2h1cmNoIGFuZCBoZSBuZXZlciB1c2VkIGltYWdlcyBvZiBoaW1zZWxmIG9yIG90aGVyIHBlb3BsZSBpbiBwb3dlciBkdXJpbmcgaGlzIHJlaWduLiAKVGhlIG9kZHMgc2FpZCBzaGUgd291bGQgZGllLiAKV2h5IHdvdWxkIGhlIGRvIHRoYXQ/IEhlIHdhbnRzIHRoZSBtYXggcmVudCBoZSBjYW4gZ2V0IGZvciAxMiBtb250aHMuIApTbyByYXRoZXIgdGhhbiBnZW5lcmF0aW5nIHRoZW0gbWFudWFsbHksIHdoeSBub3QgaGF2ZSBoYXNrZWxsIGRvIGl0IGZvciB5b3U/IChBaGEsIEkga25ldyBJIHJlYWNoIHRoZSBwb2ludCBldmVudHVhbGx5KS4KYmVhdXR5IHRvIHlvdSBtb2JpbGUgYmVhdXR5IGlvdwpPciB3aHkgYXJlbiB3ZSBsb29raW5nIGF0IHdoeSB0aGUgYXZlcmFnZSBoZXRlcm9zZXh1YWwgY291cGxlIG1pZ2h0IGhhdmUgdmFyeWluZyBsZXZlbHMgb2YgZGVzaXJlPyBhcmUgc28gbWFueSByZWFzb25zIHRoYXQgd29tZW4gbWlnaHQgbm90IGZlZWwgbGlrZSBoYXZpbmcgc2V4IHdpdGggdGhlaXIgbWFsZSBwYXJ0bmVycywgYnV0IHN1cmVseSB0aGUgZmFjdCB0aGF0IHdvbWVuIGV4cGVyaWVuY2UgdGhlICJkb3VibGUgYnVyZGVuIiBvZiBwZXJmb3JtaW5nIGZhciBtb3JlIGRvbWVzdGljIHdvcmssIGNoaWxkY2FyZSBhbmQgZWxkZXJseSBjYXJlIHRoYW4gdGhlaXIgbWFsZSBwYXJ0bmVycyBpcyBvbmUgb2YgdGhlbS4gVGhlIGZhY3QgdGhhdCBhbGwgQW1lcmljYW5zIGFyZSB3b3JraW5nIG1vcmUgaG91cnMgYXQgd29yayB0aGFuIGV2ZXIsIGFuZCB3b21lbiBjb250aW51ZSB0byBiZWFyIHRoZSBicnVudCBvZiBkb21lc3RpYyBsYWJvciByZXN1bHRpbmcgaW4gZmFyIGZld2VyIGhvdXJzIG9mIGxlaXN1cmUgdGltZSB0aGFuIG1lbiBNSUdIVCBoYXZlIG1vcmUgdG8gZG8gd2l0aCBsYWNrIG9mIGxpYmlkbyB0aGFuIGNoZW1pY2FsICJpbWJhbGFuY2UiIGluIHRoZSBicmFpbi4uIApUaGUgY2FzZSBjYW1lIHRvIGxpZ2h0IHdoZW4gQWJoaWxhc2ggSmhhJ3MgcGFyZW50cyBzdGFydGVkIHNlYXJjaGluZyBmb3IgaGltIHdoZW4gaGUgZGlkIG5vdCByZXR1cm4gaG9tZS4gVGhleSBmaW5hbGx5IGZpbGVkIGEgcG9saWNlIGNvbXBsYWludCBhdCBOaXptcHVyYSBwb2xpY2Ugc3RhdGlvbiwKVGhlbiBJIGZvdW5kIHRoZSBNaXp1bm8gV2F2ZSBSaWRlciAyMSBPc2FrYSBydW5uaW5nIHNob2VzLiBJIG11c3QgaGF2ZSB0aGVzZS4gSSBzcGVudCBhbiBob3VyIHNlYXJjaGluZyBmb3IgdGhlIHNob2UsIGZvdW5kIHNvbWUgb3ZlciBzZWFzLCBidXQgbm9uZSBpbiBteSBzaXplLiAKU28gSG91Z2h0b24gbmV3IHBvbGl0aWNhbCBwcm9qZWN0IGlzIENhc3NhbmRyYS4KSW4gcmVjZW50IHllYXJzIHdlIGhhdmUgYmVlbiByZXBlYXRlZGx5IGJldHJheWVkIGJ5IG91ciBlbGVjdGVkIGxlYWRlcnMgd2hvIGhhdmUgYmVlbiBzZXJ2aW5nIHRoZWlyIG93biBuYXN0eSBsaXR0bGUgYWdlbmRhcyByYXRoZXIgdGhhbiBzZXJ2aW5nIHRoZSBjb21tb24gZ29vZC4gClNvbWUgcG9rZXIgbWVyY2hhbnRzIGJlaW5nIHNtYXJ0ZXIgaGF2ZSBzdGFydGVkIHRoZWlyIHZlbnR1cmVzIG9ubGluZS4gClJlY2VudCBkYXRhIHN1Z2dlc3QgdGhhdCB0aGUgc2xvd2Rvd24gaW4gdGhlIGdsb2JhbCBlY29ub215IGhhcyBiZWVuIG1vcmUgcHJvbm91bmNlZCBhbmQgd2lkZXNwcmVhZCB0aGFuIHRoZSBCYW5rIGhhZCBmb3JlY2FzdCBpbiBpdHMgSmFudWFyeSBNb25ldGFyeSBQb2xpY3kgUmVwb3J0KE1QUikuIFdoaWxlIHRoZSBzb3VyY2VzIG9mIG1vZGVyYXRpb24gYXBwZWFyIHRvIGJlIG11bHRpcGxlLCB0cmFkZSB0ZW5zaW9ucyBhbmQgdW5jZXJ0YWludHkgYXJlIHdlaWdoaW5nIGhlYXZpbHkgb24gY29uZmlkZW5jZSBhbmQgZWNvbm9taWMgYWN0aXZpdHkuIEl0IGlzIGRpZmZpY3VsdCB0byBkaXNlbnRhbmdsZSB0aGVzZSBjb25maWRlbmNlIGVmZmVjdHMgZnJvbSBvdGhlciBhZHZlcnNlIGZhY3RvcnMsIGJ1dCBpdCBpcyBjbGVhciB0aGF0IGdsb2JhbCBlY29ub21pYyBwcm9zcGVjdHMgd291bGQgYmUgYnVveWVkIGJ5IHRoZSByZXNvbHV0aW9uIG9mIHRyYWRlIGNvbmZsaWN0cy4uIAoiVGhhdCBjaGFyYWN0ZXIganVzdCByZXNvbmF0ZXMsIiBzYWlkIENvbXNjb3JlIHNlbmlvciBtZWRpYSBhbmFseXN0IFBhdWwgRGVyZ2FyYWJlZGlhbi4gIlRoZXNlIGZpbG1zIGFyZSBhYnNvbHV0ZWx5IGNyaXRpYyBwcm9vZi4gVGhlIGF1ZGllbmNlIGhhcyBzcG9rZW4gYW5kIHRoZXkgbG92ZSBNYWRlYSBhbmQgdGhleSdyZSBzYXlpbmcgZ29vZGJ5ZS4iCklGQyBnaXZlcyBjb21tdW5pdGllcyBhIHZpdGFsIG5ldyBsZWdhbCBhdmVudWUgdG8gaG9sZCB0aGVtIGFjY291bnRhYmxlLCIgc2F5cyBHYXJjYSBaZW5kZWphcy4gIkp1c3QgYXMgaW1wb3J0YW50bHksIGl0IHByb3ZpZGVzIGFuIGluY2VudGl2ZSBmb3IgdGhlc2UgaW5zdGl0dXRpb25zIHRvIHdvcmsgaGFyZGVyIHRvIHByZXZlbnQgaGFybXMgaW4gdGhlIGZpcnN0IHBsYWNlLiAKVGhlIHByb2JsZW0gaXMgYSBsb3Qgb2Ygc21hbGwgZ3Jhc3Nyb290cyB0b3VybmFtZW50cyBhcmVuIGV4cGVyaWVuY2VkIGVub3VnaCB0byBrbm93IHdoYXQgdG8gZG8gdG8gbWFya2V0IHRoZW1zZWx2ZXMgb3IgZ2V0IHNwb25zb3JzLlBsZWFzZSBleGN1c2UgbXkgc2hpdHR5IHN5bnRheCBhbmQgbGFjayBvZiBiZWluZyBhYmxlIHRvIHByb3Blcmx5IGV4cGxhaW4gbXlzZWxmLiBJdCBub3QgZXZlbiAxMEFNIGFuZCBJIGhhdmVuIGhhZCBteSBjb2ZmZWUgeWV0LlNhZ2Vtb29uICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb0kgdGhpbmsgaXQgd2VsbCBleHBsYWluZWQsIHdoaWNoIGFsc28gaGlnaGxpZ2h0cyBob3cgaW1wb3J0YW50IGdhbWUga25vd2xlZGdlIGlzIGF0IGhpZ2ggbGV2ZWwuIEVzcGVjaWFsbHkgaW4gdWx0aW1hdGUsIHdoZXJlIHRoZXJlIDc0IG1hdGNodXBzLCBnYW1lIGtub3dsZWRnZSBhbG9uZSB3aWxsIGltcHJvdmUgQ1JULiAKU2hlIHdpbGwgdGFpbG9yIGFuZCBwZXJzb25hbGlzZSB0cmVhdG1lbnRzIHRvIHN1aXQgaW5kaXZpZHVhbCBuZWVkcyB3aGljaCBpcyByZWFsbHkgaGVscGZ1bC4gU2hlIGlzIGFsc28gdmVyeSBmcmllbmRseSBhbmQgZG93biB0byBlYXJ0aC4gQmVpbmcgYWJsZSB0byBzZWUgYSBjb21wbGVtZW50YXJ5IHRoZXJhcGlzdCBzbyBjbG9zZSB0byBteSBvZmZpY2Ugc2F2ZXMgbWUgYSBsb3Qgb2YgdGltZSwgYW5kIGNvc3RzIGxlc3MgdGhhbiBzZWVpbmcgYSB0aGVyYXBpc3QgaW4gb3RoZXIgc2V0dGluZ3MsIHNvIGl0J3MgZ3JlYXQgdGhhdCB0aGUgVW5pdmVyc2l0eSBvZiBFeGV0ZXIgZmFjaWxpdGF0ZXMgYWNjZXNzIHRvIHRoaXMgb24gY2FtcHVzLiIgQWNhZGVtaWMgU3RhZmZTb25pYSBSYXNoaWQgKEJTYylTb25pYSBpcyBhIGZ1bGx5IGNlcnRpZmllZCBZb2dhIFRlYWNoZXIgYW5kIFlvZ2EgVGhlcmFwaXN0IChQRykgU2hlIGhhcyBiZWVuIHdvcmtpbmcgaW4gdGhlIGZpZWxkIG9mIHlvZ2EgdGVhY2hpbmcgYW5kIHlvZ2EgdGhlcmFweSBmb3IgbW9yZSB0aGFuIDEwIHllYXJzLiAKT2YgY291cnNlIHRoZSBoaXZlIGlzIGRlc2lnbmVkIHRvIG5vdCBiZSBvcGVuZWQgYnkgaHVtYW5zLCBpZiB0aGV5IHdlcmUgbGVmdCB0byB0aGVpciBvd24gZGV2aWNlcyBhbmQgbmV2ZXIgb3BlbmVkIGl0IHdvdWxkIG9mIGNvdXJzZSB3b3JrIHBlcmZlY3RseSBmaW5lIGZvciB0aGVtLi4gCkkgaGF2ZSB0aGF0IHBhaWQgb2ZmIGluIDIgb3IgMyB5ZWFycy4gCkludGVyZXN0ZWQgaW4gaGVhcmluZyB5b3VyIHRob3VnaHRzLmhhdmUgcHJlbWl1bSB0aW1lIGFuZCBpdCBzdGlsbCBmZWVscyBsaWtlIG5vdCBuZWFybHkgZW5vdWdoLiBUaGUgZ3JpbmQgaXMgdG9vIGRhbW4gc2xvdywgSSB3YW50IHRvIGJ1eSBtb3JlIG1lY2hzIGJ1dCBpdCB0YWtlcyBzbyBsb25nIHRvIGdyaW5kIHRoZW0gdGhhdCBpdCBoaW5kZXJzIG1lIGZyb20gZG9pbmcgc28uVWxqaXJhICAwIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29UaGF0IGRvZXNuIG1lYW4gYWxsIHRoYXQgbXVjaCBpbW8uIEl0IGNvdWxkIGhhdmUgYmVlbiBpbnRlbmRlZCBmb3IgMjAxOCBidXQgdGhlbiB0aGF0IGRyYXN0aWNhbGx5IGNoYW5nZWQgZHVlIHRvIHdoYXRldmVyIGlzc3Vlcy4gClVDIFNhbnRhIENydXogc3R1ZGVudHMgYXJlIHN0aWxsIG9jY3VweWluZyBhIGJ1aWxkaW5nIGFmdGVyIHJhdGUgaGlrZXMgd2VyZSBhbm5vdW5jZWQgYWNyb3NzIHRoZSBVbml2ZXJzaXR5IG9mIENhbGlmb3JuaWEgc3lzdGVtIGxhc3Qgd2Vlay4KV2hhdCBpZiBNYWRpc29uIHVzZWQgYSBzaW1pbGFyIHN5c3RlbSB0byBpbXByb3ZlIGFjY2VzcyB0byB0aGUgY2FwaXRhbCwgU3RhdGUgU3QuLCBhbmQgVVcgY2FtcHVzLgpJIGRvbiBkaXNhZ3JlZSB3aXRoIHlvdSBhdCBhbGwuIAoiSG93ZXZlciAgVGhpcyBpcyBub3QgYWJvdXQgcmUgd29ya2luZyB0aGUgZW5lcmd5IHN5c3RlbSwgaXQncyBhYm91dCBwcm9tb3Rpbmcgc29sYXIgZW5lcmd5IGFuZCBJIHRoaW5rIHRoaXMgaXMgYSBncmVhdCB3YXkgdG8gZG8gdGhhdCwgZXNwZWNpYWxseSBzb21ld2hlcmUgbGlrZSBCb3N0b24sIHRoYXQgcGVvcGxlIGRvbid0IHR5cGljYWxseSBhc3NvY2lhdGUgd2l0aCBQVi4nJy4gCkkgdW5kZXJzdGFuZCBwZXJmZWN0bHkgd2VsbCB0aGUgaWRlYSB0aGF0IFR5cGVTY3JpcHQgY29tbXVuaWNhdGVzIGludGVudCBhbmQgdGhhdCBpcyBvbmUgb2YgaXRzIG1ham9yIHNlbGxpbmcgcG9pbnRzLiAKRXNwZWNpYWxseSB3aXRoIHJlZ2FyZCB0byBleHBlbnNpdmUgbmVpZ2hib3Job29kcywgYnV5aW5nIGFzc2V0IG1heSBzaG91bGQgaGF2ZSBhIEdvbGRlbiBHb29zZSBTdXBlcnN0YXIgV29tZW5zIFNuZWFrZXJzIEF1c3RyYWxpYSBTdG9ja2lzdHMgcm9wZXJ0eSB0byBzdWJtaXQgdG8gc3Vic3RhbnRpYWwgcmVndWxhdGlvbnMgaG93IEdvbGRlbiBHb29zZSBBdXN0cmFsaWEgaGVpciBvd24gb3IgaGVyIGhvbWUgdHlwaWNhbGx5IGlzIHRvIGdlbmVyYWxseSBiZSBtYWludGFpbmVkIGFuZCBhZnRlciB0aGF0IHRyZWF0ZWQuIFNvbWUgc29ydCBvZiBob21lb3duZXJzJyBvcmdhbml6YXRpb24gdXN1YWxseSBoYXMgZ290IHN1Y2ggcmVndWxhdGlvbnMuIApJdCBzZWVtcyBsaWtlIHBlb3BsZSB3YW50IHRoZXJlIHRvIGJlIHNvbWUga2luZCBvZiBvdmVyYmVhcmluZywgdHlyYW50IEdvZCB0aGF0IGNvbnRyb2xzIGV2ZXJ5IHNpbmdsZSBhc3BlY3Qgb2Ygb3VyIHdvcmxkLiBPbmUgdGhhdCBkb2VzbiBhbGxvdyBhbnkgYmFkIHdlYXRoZXIsIG5vdCBldmVuIGEgcmFpbnN0b3JtIGJlY2F1c2UgdGhhdCBjb3VsZCBsZWFkIHRvIHBuZXVtb25pYS4gTm8gc2lja25lc3MsIG5vdCBldmVuIHRoZSBiYXNpYyBmbHUgYmVjYXVzZSB0aGF0IGNvdWxkIGxlYWQgdG8gZGVhdGguIApHZXQgYSB0aGlyZCwgcHJvZmVzc2lvbmFsIHBhcnR5IGludm9sdmVkICAgdGhleSBhcmUgdHJhaW5lZCB0byBkZWFsIHdpdGggcGVvcGxlIGxpa2UgdGhpcywgZXNwZWNpYWxseSBpbiBhIGNyaXNpcy4gCkZyb20gYSBmYW4gcG9pbnQgb2YgdmlldywgbW9yZSBjdXN0b21pemF0aW9uIHdvdWxkIGJlIGdyZWF0LiAKQXMgZWFybGllciBzYWlkLCB3b21lbiBzdGFydGVkIGdldHRpbmcgdGhlbXNlbHZlcyBpbnRvIHRoZSBnYW1lIG9mIGdhbWJsaW5nIHdoZW4gcGxheWluZyBjYXJkcyB3ZXJlIGludmVudGVkIGluIHRoZSBsYXRlIDE1MDBzLiAKUGVyc29uYWwgYXR0YWNrcyBvciBjb21tZW50cyB0aGF0IGluc3VsdCBvciBkZW1lYW4gYSBzcGVjaWZpYyB1c2VyIG9yIGdyb3VwIG9mIHVzZXJzIHdpbGwgYmUgcmVtb3ZlZCBhbmQgcmVndWxhciBvciBlZ3JlZ2lvdXMgdmlvbGF0aW9ucyB3aWxsIHJlc3VsdCBpbiBiYW5zLi4gCkV2ZW4gYWZ0ZXIgSSBhZGRlZCBmcm90aHkgd2hpdGVzIGJlY2F1c2UgbXkgYmF0dGVyIGNvdWxkIHJlYWNoIHRoYXQgcmliYm9uIHN0YWdlLCBzdGlsbCB0aGUgbWFjYXJvbnMgcmVtYWluZWQgaG9sbG93IHdpdGggY3Jvd25zSSd2ZSB0aG91Z2h0IGFib3V0IHRoZSBzZXggdGhpbmcgYW5kIGkgZG8gdGhpbmsgaSBjb3VsZCBwcm9iYWJseSByZWZyYWluIGZyb20gc2V4LCBidXQgaXQncyBtb3JlIG9yIGxlc3MgaXQncyBhYm91dCBob3cgdW5jb21mb3J0YWJsZSBpdCBtYWtlcyBtZSBiZWNvbWUgYWJvdXQgZXZlcnlkYXkgbXVuZGFuZSB0aGluZ3MuIFN1Y2ggYXMgZ2V0dGluZyBkcmVzc2VkIGluIGZyb250IG9mIGhpbSwgc2hvd2VyaW5nLCBtYXliZSBhIHF1aWNrIHNsYXAgb24gdGhlIGJvb3R5LCBqdXN0IGFueXRoaW5nIHRoYXQgY291bGQgaGF2ZSBhIHNleHVhbCBjb25ub3RhdGlvbi4gCkFuZCBzaW5jZSBhbG1vc3QgdGhlIHdob2xlIHBsb3Qgd2FzIGJhc2VkIG9mZiB0aGF0IGludGVyYWN0aW9uIGl0IGJlY2FtZSBvZiB0aGUgbWVzc2FnZSBvZiB0aGUgbW92aWUuIApUaGF0IHNhaWQsIG15IG9uZSBjb21wbGFpbnQgaXMgdGhhdCBzb21lIHBlb3BsZSBkaWQgbm90IGdldCB0aGUgaGludCBvZiB0aGUgc21hbGwgcmVnaXN0cnkuIApDb250aW51ZWQgdG8gdGFrZSBpbnZlbnRvcnkgb2Ygb3RoZXJzIGFuZCB3aGVuIHRoZXkgd2VyZSB3cm9uZyBwcm9tcHRseSBhbmQgcmVwZWF0ZWRseSB0b2xkIHRoZW0gYWJvdXQgaXQuClNheWluZyB0aGF0IGhlIHRhdWdodCBoZXIgc3BlY2lhbCBtYXNzYWdlIHRlY2huaXF1ZXMgYW5kIGhpcyBidXNpbmVzcyBtZXRob2RzLCBhbiBFYXN0IFN0cm91ZHNidXJnIG1hbiBoYXMgYXNrZWQgTm9ydGhhbXB0b24gQ291bnR5IENvdXJ0IHRvIHByb2hpYml0IGEgd29tYW4gaGUgZm9ybWVybHkgZW1wbG95ZWQgZnJvbSBjb25kdWN0aW5nIGEgbWFzc2FnZSBidXNpbmVzcyBpbiBFYXN0IEFsbGVuIFRvd25zaGlwLiBJbiBhIHN1aXQgZmlsZWQgYnkgYXR0b3JuZXkgSmVmZnJleSBWZWxhbmRlciwgRGFsbGFzIFJheSBWYXZyYSwgd2hvIG9wZXJhdGVzIGEgbWFzc2FnZSBzcGEgb24gUm91dGUgMjA5LCBpcyBhc2tpbmcgdGhlIGNvdXJ0IHRvIGJhbiBMb3ZldHRlIEUuIExvdmlzaSBmcm9tIGNhcnJ5aW5nIG9uIGhlciBidXNpbmVzcyBhdCA2Mzk3IEFpcnBvcnQgUm9hZC4gRGFsbGFzIFJheSBWYXZyYSwgZm9ybWVyIG93bmVyIG9mIHRoZSBDbG9zZSBFbmNvdW50ZXJzIFVubGltaXRlZCBMZWlzdXJlIENvZWQgSGVhbHRoIENsdWIsIDYzOTcgQWlycG9ydCBSb2FkLCBmaWxlZCB0aGUgYWN0aW9uIGFnYWluc3QgaGlzIGZvcm1lciBsYW5kbG9yZCwgQXJ1biBNYXRodXIgb2YgRWFzdCBBbGxlbiBUb3duc2hpcC4gQWxzbyBuYW1lZCBvbiB0aGUgc3VtbW9ucyBhcmUgTG92ZXR0ZSBMdWlzaSwgYSBmb3JtZXIgZW1wbG95ZWUgb2YgQ2xvc2UgRW5jb3VudGVycyBhbmQgYW4gZW1wbG95ZWUgb2YgdGhlIFVubGltaXRlZCBMZWlzdXJlIEhlYWx0aCBDbHViLCB3aGljaCBub3cgb2NjdXBpZXMgdGhlIGZhY2lsaXR5LCBhbmQgV2lsbGlhbSBLLiBHcmlmbyBydWxlZCBXZWRuZXNkYXkuIEJsb29tJ3MgYXR0b3JuZXksIExhd3JlbmNlIEZveCwgaGFkIGFza2VkIHRoYXQgQmxvb20gYmUgdHJpZWQgZWxzZXdoZXJlIGJlY2F1c2Ugb2Ygd2hhdCBoZSB0ZXJtZWQgZXh0ZW5zaXZlIHB1YmxpY2l0eSBhYm91dCB0aGUgY2FzZS4gSGUgaGFkIGFsc28gYXNrZWQgdGhhdCBjZXJ0YWluIGl0ZW1zIG9mIGV2aWRlbmNlIHNlaXplZCBkdXJpbmcgdGhlIGV4ZWN1dGlvbiBvZiBhIHNlYXJjaCB3YXJyYW50IGF0IFRoZSBCb2R5IENsaW5pYywgMTQ1MiBSb3NlbGF3biBEcml2ZSwgbm90IGJlIGFkbWl0dGVkIGludG8gZXZpZGVuY2UuIEEgdGhyZWUganVkZ2UgcGFuZWwgcnVsZWQgdGhhdCBKdWRnZSBSaWNoYXJkIEQuIEdyaWZvIHByb3Blcmx5IGluc3RydWN0ZWQganVyb3JzIHdobyBjb252aWN0ZWQgRGFyZW5lIEhlbGVuIFJvYmJpbnMsIGNvIG93bmVyIG9mIHRoZSBCb2R5IENsaW5pYywgSGFub3ZlciBUb3duc2hpcCwgb2Zwcm9zdGl0dXRpb24uIEdyaWZvIHBsYWNlZCBSb2JiaW5zIG9uIGEgeWVhciBvZiBwcm9iYXRpb24gYW5kIGZpbmVkIGhlciAkNzUwLiBBIE5vcnRoYW1wdG9uIENvdW50eSBqdXJ5IGRlbGliZXJhdGVkIGZvciBhYm91dCBhbiBob3VyIGJlZm9yZSByZXR1cm5pbmcgdGhlIHZlcmRpY3QgYWdhaW5zdCBCcmVuZGEgTGVlIFJlaW1hbiwgMTksIG9mIFRhbWFxdWEuIEp1ZGdlIFJpY2hhcmQgRC4gR3JpZm8sIHdobyBwcmVzaWRlZCBhdCB0aGUgd29tYW4ncyBvbmUgZGF5IHRyaWFsLCBnYXZlIGhlciBsYXd5ZXIsIFN0YW5sZXkgVmFzaWxpYWRpcywgMTAgZGF5cyB0byBmaWxlIGFuIGFwcGVhbC4gVmFzaWxpYWRpcyBzYWlkIGhlIHByb2JhYmx5IHdpbGwgc2VlayB0byBvdmVydHVybiB0aGUganVyeSdzIGRlY2lzaW9uLiBPUkVOU1RFSU4gKEEgZnJlZSBsYW5jZSBzdG9yeSBmb3IgVGhlIE1vcm5pbmcgQ2FsbCkgIEFwcmlsIDksIDIwMDAKSW4gTWFkYWdhc2Nhciwgb25lIG9mIHRoZSB3b3JsZCdzIHBvb3Jlc3QgY291bnRyaWVzLCBwYXJlbnRzIGFyZSBkZXNwZXJhdGUgdG8gdmFjY2luYXRlIHRoZWlyIGNoaWxkcmVuLCBtYW55IHRydWRnaW5nIGZvciBtaWxlcyB0byBnZXQgdG8gY2xpbmljcyBmb3Igc2hvdHMuIEJ1dCB0aGVyZSBhcmUgbm90IGVub3VnaCB2YWNjaW5lcywgdGhlIGhlYWx0aCBtaW5pc3RyeSBzYXlzLCBhbmQgbWFueSBwZW9wbGUgYXJlIHRvbyBwb29yIHRvIGFmZm9yZCB0aGVtLgpBc2lkZSBmcm9tIGxlYXJuaW5nIGhvdyB0byBjYXJ2ZSB3b29kIGludG8gc2N1bHB0dXJlcyBhbmQgbWFuaXB1bGF0aW5nIGNsYXkgYWxzbyBzcGVudCBhIGJ1bGsgb2YgaGlzIHRpbWUgZmlzaGluZyB3aXRoIHRoZSBBdGxhbnRpcyBBbmdsZXJzIEZpc2hpbmcgQ2x1Yi4gSWYgaGUgd2FzbiBmaXNoaW5nIGhlIHdhcyBidXNpbHkgd29ya2luZyBvbiBoaXMgd29vZGNhcnZpbmdzLgpUaGV5IGxpdmUuIApObywgc2hlIGRpZG4ndCBCYXB0aXNlIHRoZSBkeWluZy4gCkl0IHdvdWxkIGJlIGhhcmQgdG8gYXJyZXN0IHRoZSBwb2tlciBzaXRlIG9wZXJhdG9ycyBpbiBDb3N0YSBSaWNhLCBBcnViYSwgYW5kIG90aGVyIG9mZnNob3JlIG9wZXJhdGlvbnMsIGJ1dCBtYW55IGFyZ3VlIHRoYXQgcG9rZXIgdG91cm5hbWVudHMgb25saW5lIHRlY2huaWNhbGx5IGFyZSBub3QgZ2FtYmxpbmcuIApJdCBlYXN5IHRvIGZvcmdldCB0aGF0IGJlZm9yZSBCcm93bmJhY2ssIFNlYmVsaXVzIHdhcyBvdXIgZ292ZXJub3IuIApTaW5nYXBvcmUgaXNzIG5vdCBhIGRlbW9jcmFjeSBhbmQgaGFzIHNvbWUgdmVyeSByZXByZXNzaXZlIGxhd3MuIEkgYW0gbm90IGZhbWlsaWFyIHdpdGggdGhlaXIgbGFib3VyIGxhd3MuIEhvd2V2ZXIgSSBhbSBjZXJ0YWluIHRoYXQgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgdGhvc2UgSW5kb25lc2lhbiB3b21lbiwgdGhleSB3b3VsZCBwcmVmZXIgcHJvdGVjdGlvbnMgYXMgd2VsbC4gCkluIGh1bWFuIHNwZWFrLCB0aGF0IG1lYW5zIHRoZSBtb25leSBvZiBza2lsbGVkIHBsYXllcnMgaXMgYmV0dGVyIGludmVzdGVkIGluIGEgcG9rZXIgdG91cm5hbWVudCB0aGFuIFdhbGwgU3RyZWV0LCBkZXNwaXRlIGNvbnZlbnRpb25hbCB3aXNkb20gdGhhdCB3b3VsZCBpbmRpY2F0ZSB0aGUgb3Bwb3NpdGUuIEluIGZhY3QsIHRoZSBwYXBlciBmaW5kcywgInRoZSBoaWdoIHNraWxsZWQgcGxheWVyIHdpbnMgNTQuOSBwZXJjZW50IG9mIHRoZSBtYXRjaCB1cHMuIiBUaGF0IGNvbXBhcmVzIG1vcmUgY2xvc2VseSB0byB3aGF0IGlzIHdpdG5lc3NlZCBpbiBNYWpvciBMZWFndWUgQmFzZWJhbGwgdGhhbiBhbnl0aGluZyBvbiBXYWxsIFN0cmVldDoKTnViZXR1YmUgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpJZiB5b3UgZG9uJ3QgcHJlIHBsYW4gd2l0aCB1cywgb3IgYXJlIGxhdGUgYnkgYSBjZXJ0YWluIGFtb3VudCBvZiB0aW1lLCB3ZSBkb24ndCB3YWl0IGZvciB5b3UuIApJYW4gRCBNb25mb3J0OiBTcGlyaXQgTWVkaXVtIHdpdGggVG9taWUgSmFtZXMgYW5kIFBhZGR5IENvdXJ0bmV5LCBNb25yb2VzLCA4LjMwcG0uIApBdCAzMGJiLzEwMCBpbiBteSBmaXJzdCA0aywgaGFwcHkgd2l0aCBteSB3ZWxjb21lLiAKV2hlbiBoZSBoYXMgaGlzIGNvbmZpcm1lZCBwYXltZW50IGhlIGNhbiBhbGxvY2F0ZSB0aGUgc2FsZXMgdGF4IHBvcnRpb24gb2YgYnRjIHRvIHRoZSBzdGF0ZSBib2R5IGlmIHRoZXkgdGFrZSBjcnlwdG8gKG9ubHkgb25lIG9yIHR3bywgZG9uIHJlbWVtYmVyIHdoaWNqKS4gSGUgY2FuIGxpcXVpZGF0ZSB0aGUgYnRjIGltbWVkaWF0ZWx5IGFuZCBzZXQgYXNpZGUgdGhlIGZpYXQuIApTbyBoZSBmZWQgdGhlIG1hbiwgZ2F2ZSBoaW0gY2xvdGhlcyBhbmQgYWxzbyBnYXZlIGhpbSBhIGpvYi4gClVzZXMgYSByYXRoZXIgZmxhdCBvciB3ZWFrIHRvbmUgb2Ygdm9pY2UKU28gd2hlbiB5b3Ugc2F5ICJzdHVkZW50IGF0aGxldGVzLCB0aGUgTkNBQSBpcyBhYmxlIHRvIHJlc3BvbmQgd2l0aCwgIkFLU0hVQUxMWSBTdHVkZW50IGF0aGxldGVzIGdyYWR1YXRlIGF0IGEgaGlnaGVyIHJhdGUgYW5kIGhpZ2hlciBHUEEgdGhhbiByZWd1bGFyIHN0dWRlbnRzIGFuZCBhcmUgZ2V0dGluZyBzY2hvbGFyc2hpcCBzbyBibGFoLiIgQnV0IHRoZSBhdGhsZXRlcyB3aG8gYnJpbmcgaW4gYWxsIHRoZSBtb25leSwgZG9uIGdyYWR1YXRlIGF0IGFzIGhpZ2ggb2YgYSByYXRlIGFuZCBkb24gbWFrZSBhcyBnb29kIG9mIGdyYWRlcy4gCkkgYWxzbyB3YW50IHRvIG5vdGUgSSBkb24ndCBzZWUgYWxsIGNvcHMgYXMgYmFkLiAKVGhlIGF3ZXNvbWUgdGhpbmcgYWJvdXQgcG9rZXIgaXMgdGhhdCBubyBtYXR0ZXIgaG93IGdvb2Qgb3IgYmFkIHlvdSBhcmUgdGhlcmUgYXJlIGFsd2F5cyBsZXZlbHMgeW91IGNhbiBwbGF5IGF0LiBGb3IgZXhhbXBsZSwgcGVvcGxlIHdobyBhcmUgbmV3IGF0IHRoZSBnYW1lIG1pZ2h0IHdhbnQgdG8gcGxheSBhdCBhIGxvd2VyIGxldmVsIGxpa2UgMSQvMiQgKG9yIDEgY2VudC8yIGNlbnQgaWYgeW91IHBsYXlpbmcgb25saW5lKS4gVGhlIGdyZWF0IHRoaW5nIGFib3V0IHRoYXQgaXMgdGhlIHBlb3BsZSB3aG8gcGxheSBhdCB0aGUgbG93ZXIgbGV2ZWxzIG9mIHRoZSBnYW1lIGFyZSBnZW5lcmFsbHkgdGhlIGxlc3Mgc2tpbGxlZCBwbGF5ZXJzLiBJdCBsaWtlIHlvdSBhY3R1YWxseSBjYW4gYSBsZXZlbCBhbmQgYWR2YW5jZSB0byB0aGUgbmV4dCB3aGVyZSB0aGUgY29tcGV0aXRpb24gaXMgc3Ryb25nZXIgYnV0IHRoZSBtb25leSB5b3UgY2FuIG1ha2UgaXMgYmV0dGVyLCBqdXN0IGxpa2UgaWYgaXQgd2VyZSBhIHZpZGVvIGdhbWUuClRoZSBjb3VwbGUgbWV0IG9uIGEgYmxpbmQgZGF0ZSBhcm91bmQgMTk1NCB3aGVuIHRoZXkgd2VyZSBpbiB0aGVpciBlYXJseSAyMHMgaW4gQnJvb2tseW4uIEFmdGVyIGEgeWVhciBhbmQgaGFsZiBvZiBjb3VydHNoaXAsIHRoZXkgbWFycmllZCBvbiBKYW4uIDE1LCAxOTU2LiBUaGUgY291cGxlIGV2ZW50dWFsbHkgbW92ZWQgb3V0IG9mIEJyb29rbHluIGFuZCBzZXR0bGVkIGluIFNvdXRoIE1lcnJpY2sgd2hlcmUgdGhleSByYWlzZWQgdGhlaXIgdHdvIHNvbnMgU3RldmVuIGFuZCBDaHVjayBhbmQgd2hlcmUgc2hlIHN0aWxsIGxpdmVzLgoiTCdjcml2YWluIG1peWEgQWtpZnVzYSwgcGFyYWx5cywgZXN0IHByaXYgZGUgc29uIGxhbmdhZ2UsIGRlcyBzaWduZXMgZXQgZGVzIG1vdHMuIApTbywgc29tZSBwZW9wbGUgZmluZCBpdCBiZXR0ZXIgdG8gcGxheSBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodCBvciB3aGVuZXZlciB0aGVpciBidXN5IHNjaGVkdWxlIGNsZWFycy4gCkRvZXhpdHJlICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCk1haXMgY2hhY3VuIHNhaXQgcXVlIGxhIGxpYmVydCBkJ29waW5pb24gZXN0IHRvdWpvdXJzICBzZW5zIHVuaXF1ZS4uIApJZiBoZSB3YXMgYSBwbGF5ZXIgaW4gdGhlIHNleCB0cmFmZmlja2luZyBoZSB3b3VsZCBoYXZlIGEgbG90IGhhcnNoZXIgY2hhcmdlcy4gClNvIHdoeSBhcmUgd2UgYmVpbmcgc2hvd24gYSB0cmFuc3BvcnQgYWlyY3JhZnQgaW4gdGhpcyBhbmFseXNpcz8gW1NldmVyYWwgaGF2ZSBzaGFyZWQgbm93IHRoYXQgdGhlIEp1bmtlcnMgd2FzIGFsc28gdXNlZCBhcyBhIGJvbWJlciB0aGFua3MhXVNvdXJjZTogUG9wdWxhciBNZWNoYW5pY3MsIFNlcHRlbWJlciAxOTM3Li4gCkRyaXNjb2xsIHdhcyBvcmlnaW5hbGx5IGNvYWNoIGF0IHRoZSBub3cgY2xvc2VkIEthaWFGaXQgbG9jYXRpb24gaW4gQm91bGRlci4gSW4gYSBxdWljayB0dXJuIG9mIGV2ZW50cywgRHJpc2NvbGwgbGVhcm5lZCB0aGUgTGFmYXlldHRlIGxvY2F0aW9uIHdhcyBjbG9zaW5nIGFuZCBkZWNpZGVkIGluIGEgbmlnaHQgdG8gYnV5IGl0LiBOb3csIHRoZSBMYWZheWV0dGUgbG9jYXRpb24gaGFzIGJlY29tZSBhIGh1YiBmb3IgdGhlIGFyZWEsIGluY2x1ZGluZyBCb3VsZGVyLgpJdCdzIGxpa2VseSB0byBiZSBpbiB0aGF0IHBvc2l0aW9uIHRoYXQgaGUgd2lsbCBzdGFuZCBvbiB0aGUgZmluYWwgZGF5Li4gClJvYmVydCBCYXR0bGUgaGFzIHBsZWFkZWQgbm90IGd1aWx0eS4gQnV0IHRoZSBncnVlc29tZSBhbGxlZ2VkIGNyaW1lIGlzIGNhdXNpbmcgc2VyaW91cyBwcm9ibGVtcyBmb3IgaGlzIHBhcnR5LiBJbiB0aGUgbWVhbnRpbWUsIEJhdHRsZSBrZWVwcyBoaXMgc2VhdCBhbmQgaGlzICQ0MiwzNjUgc2FsYXJ5LiAKVGhpcyBpcyB3aGVyZSB0aGUgdG9ydHVyZSBkcmVhbSBjYW1lIGZyb20uIElmIEkgY291bGQganVzdCBnZXQgaGltIHRvIGFkbWl0IHRoYXQgaGUgaGFzIGJlZW4gbHlpbmcsIHRoYXQgaGUgaGFzIHB1dCB0aGlzIGNvdW50cnkgYW5kIHRoZSB3b3JsZCBhdCByaXNrIHdpdGggaGlzIHNvY2lvcGF0aGljIG5lZWQgZm9yIHBvd2VyIGFuZCBtb25leSwgdGhlbiBoZSBjb3VsZCBuZXZlciBiZSBQcmVzaWRlbnQgYmVjYXVzZSBoZSB3b3VsZCBiZSByZXZlYWxlZCB0byBiZSB0aGUgZXZpbCBkb2VyIGhlIHRydWx5IGlzLiBSaWdodD8gT3Igd3Jvbmc/LiAKQWdhcndhbCBhbHNvIGV4cGxhaW4gd2h5IHRoaXMgZWZmZWN0IG1ha2VzIGEgd2hpc3RsZSwgcmF0aGVyIHRoYW4gYW5vdGhlciBub2lzZSwuIApTbyB0aGV5IHRyaWVkIHRvIG1ha2UgRHJhZ29uIEFnZSBpbnRvIHRoYXQuIEJ1dCBJIHRoaW5rIHRoZXkgbG9zdCBhIGxvdCBvZiB3aGF0IG1hZGUgREEgaW50ZXJlc3RpbmcuIEl0IGJlY2FtZSBqdXN0IGFub3RoZXIgZ2VuZXJpYyBjb25zb2xlIGdhbWUuCkNvb2tpZXMgc2luZCBrbGVpbmUgVGV4dGRhdGVpZW4sIGRpZSB2b20gV2ViYnJvd3NlciBhdWYgZGVtIEVuZGdlcnQgZGVzIE51dHplcnMgenVyIFNwZWljaGVydW5nIHZvbiBiZXN0aW1tdGVuIEluZm9ybWF0aW9uZW4gYWJnZWxlZ3Qgd2VyZGVuLiBCZWltIG5jaHN0ZW4gQXVmcnVmIHVuc2VyZXIgV2Vic2l0ZSBtaXQgZGVtc2VsYmVuIEVuZGdlcnQgd2VyZGVuIGRpZSBpbiBDb29raWVzIGdlc3BlaWNoZXJ0ZW4gSW5mb3JtYXRpb25lbiBhbiB1bnNlcmUgV2Vic2l0ZSAoRmlyc3QgUGFydHkgQ29va2llIikgb2RlciBlaW5lIGFuZGVyZSBXZWJzaXRlLCB6dSBkZXIgZGFzIENvb2tpZSBnZWhydCAoVGhpcmQgUGFydHkgQ29va2llIiksIHp1cmNrZ2VzYW5kdC4uIApUaGUgcXVhbGl0eSBpcyBncmVhdC4gVGhlIHdoaXRlIG1pcnJvciBjYXBzIGl0IGNhbWUgd2l0aCB3ZXJlIHByZXR0eSBjaGVhcCBsb29raW5nIGJ1dCBJIG9idmlvdXNseSBzd2l0Y2hlZCB0aG9zZSBvdXQgZm9yIG15IE9FTSBncmV5IG9uZXMgYW55d2F5LiAKQW5kIG5vc2Ugam9icyBzaG91bGQgYWxsb3cgZm9yICJuYXR1cmFsIGFnaW5nLiIuIApHaXZlIGl0IGEgdHJ5IHRvIGZpeCB0aGluZ3MuIEl0IGZhbWlseS4gSXQgYmUgd29ydGggaXQuIApIZXJiZXJ0d2VzdHdvcmxkICA1IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkhlIGhhZCBhIGxvbmd0aW1lIGFkZGljdGlvbiB3aXRoIGRydWdzLiAKTm90b25zIHRvdXQgZCdhYm9yZCBxdWUgY2V0dGUgcmRhY3Rpb24gbidhIHBhcyBlbmNvcmUgZmFpdCBsJ29iamV0IGRlIG1vZGlmaWNhdGlvbiBkZXB1aXMgY2V0dGUgcmRhY3Rpb24gZHUgTm91dmVhdSBDb2RlIHBuYWwuIFMnYWdpc3NhbnQgZGUgbCd2b2x1dGlvbiBkZSBsYSB0ZXJtaW5vbG9naWUsIGRlIGxhIGRtZW5jZSBhdSB0cm91YmxlLCBlbGxlIHBlcm1ldCBkJ2VuZ2xvYmVyIHRvdXRlcyBsZXMgZm9ybWVzIGQnYWxpbmF0aW9uIG1lbnRhbGUgcXVpIGVubHZlICBsJ2luZGl2aWR1IGxlIGNvbnRybGUgZGUgc2VzIGFjdGVzLiBMYSBub3V2ZWxsZSBleHByZXNzaW9uIHNlbWJsZSBwbHVzIGFkcXVhdGUgZW4gcmVudm95YW50ICBsJ2lkZSBkZSAgZmFjdWx0cyBtZW50YWxlcyAuIApUaGUgd29yayBpcyB3b25kZXJmdWxseSBjb21wbGV4IGFuZCBjb252b2x1dGVkLCB3aXRoIGFsbW9zdCBiaXBvbGFyIHNoaWZ0cyBpbiBtb29kIGFuZCBwYWNlLCBhbGwgb2Ygd2hpY2ggdGhlIG9yY2hlc3RyYSBoYW5kbGVkIG1hcnZlbG91c2x5LiBMdXN0eSBjZWxsb3MgYW5kIGJhc3NlcyBncm93bCBpbiBhIGh1bnRlcidzIGZ1bmVyYWwgcHJvY2Vzc2lvbiBhdCBvbmUgcG9pbnQsIHdoaWxlIGluIGFub3RoZXIgd2UgaGVhciBjbGFyaW5ldHMsIG9ib2VzLCBiYXNzIGRydW0sIGFuZCBjeW1iYWxzIGN1cmlvdXNseSBzZWd1ZSBpbnRvIHRoZSBzb3VuZCBvZiBhIGtsZXptZXIgYmFuZC4uIApVbiBjdWx0ZSBxdWkgbmUgc2VyYWl0IHBsdXMgZGlhYm9saXMgc2VyYWl0IGlsIHZvdSAgZGlzcGFyYXRyZT8gUGFzIHNyLi4gClRoZSBBcmthbnNhcyBGYW1pbHkgQ291bmNpbCBpc24ndCByaWdodCBvZnRlbiBpbiBvdXIgZWRpdG9yaWFsIHZpZXcgICBhbmQgZG93bnJpZ2h0IG1lYW4gc3Bpcml0ZWQgaW4gdGhlIHByb2Nlc3MgZm9yIGFuIG9yZ2FuaXphdGlvbiBwdXRhdGl2ZWx5IGZvdW5kZWQgb24gQmlibGljYWwgcHJpbmNpcGxlcyAgIGJ1dCB3ZSdsbCBnaXZlIGNyZWRpdCB3aGVyZSBkdWUuIFBva2VyLCBibGFja2phY2sgYW5kIHNsb3QgbWFjaGluZXMgKGV1cGhlbWlzdGljYWxseSBrbm93biBhcyAicmVlbCBnYW1lcyIpIGFyZSBvbiBvZmZlci4gCllvdSBidXkgc2hhcmVzLCBzZWxsIHNoYXJlcyBhbmQgdHJhZGUgc2hhcmVzIHdpdGhvdXQgZXZlciBob2xkaW5nIGEgcGllY2Ugb2YgcGFwZXIgaW4geW91ciBoYW5kLiAKVGhleSBoYXZlIHRocmVlIGNoaWxkcmVuLCBLYXRpZSBhbmQgaGVyIGh1c2JhbmQgQ2FsZWIgU2hlcGhlcmQsIFphY2ggYW5kIGhpcyB3aWZlIEFsaXNoYSwgYW5kIENhbGViIGFuZCBoaXMgd2lmZSBIYW5uYXdobyBoYXZlIGFsbCBncmFkdWF0ZWQgZnJvbSBTdWxseSBCdXR0ZXMgU2Nob29sIGFuZCBmb3VyIGdyYW5kY2hpbGRyZW4gWm9lLCBQaXBlciBhbmQgT2FrbGV5IEtlbWluayBhbmQgS2Fyc3luIFNoZXBoZXJkLiBDb2xldHRlIGlzIHRoZSBPZmZpY2UgQXNzaXN0YW50IGFuZCBDaGlyb3ByYWN0aWMgQXNzaXN0YW50IGZvciBDaGlyb3ByYWN0aWMgQ29ubmVjdGlvbnMuLiAKVGhlcmUgd2FzIG5vIGV2aWRlbmNlIG9mIHB1YmxpY2F0aW9uIGJpYXMuIApIZSB3aWxsIGJlIHJlbWVtYmVyZWQgZm9uZGx5IGJ5IGhpcyBzaWJsaW5ncywgTWlrZSBIYWFzIChKYWNxdWllKSwgTGFycnkgSGFhcyAoRGlhbmUpLCBTdXphbm5lIE1hZHRlciAoQnJpYW4pLCBSb3NlbWFyeSBMYXZvaWUgKE5vcm0pLCBhbGwgb2YgaGlzIG5pZWNlcyBhbmQgbmVwaGV3cywgYW5kIGxvbmcgdGltZSBmcmllbmQgYW5kIGRldm90ZWQgZW1wbG95ZWUsIFRvbSBEdW5waHksIHdobyB3b3JrZWQgZm9yIEJpbGwgcmlnaHQgdW50aWwgdGhlIGVuZC4gQmlsbCB3YXMgYSB0cnVlIHBpb25lZXIgaW4gdGhlIG11bHRpZGlzY2lwbGluYXJ5IGRlc2lnbiB3b3JsZC4gCkNvcmRpYWxfY2hvcmRhdGUgIDE0IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkFsc28sIGJlZm9yZSBJIHdlbnQgdG8gdGhlIGRvY3RvciBJIGhhZCBhYnN0YWluZWQgZnJvbSBzZXh1YWwgYWN0aXZpdHkgZHVlIHRvIHRoZSBwYWluL3dvcnJ5LiBUaGUgZGF5IEkgc2F3IHRoZSBkb2N0b3IgYW5kIHN0YXJ0ZWQgbWVkcyBJIG1hc3R1cmJhdGVkIGFuZCBub3RpY2VkIHRoYXQgbXkgZWphY3VsYXRpb24gd2FzIG9mZiBjb2xvciBhbmQgY2xlYXJseSBpbmZlY3RlZC4gClNvLCB0aGUgY29sbGFnZW4sIGdseWNvc2FtaW5vZ2x5Y2FucywgZ2x5Y29wcm90ZWlucywgcmV0aWN1bGFyIGFuZCBlbGFzdGljIGZpYmVycyBhbGwgZm91bmQgaW4gdGhlIEVDTSBhcmUgbWFkZSBieSBmaWJyb2JsYXN0cy4KUGxhbiB0aGUgbWVudS4gV2lsbCB5b3UgYmUgc2VydmluZyBhcHBldGl6ZXJzIGFuZCBjYWtlIG9yIGEgZnVsbCBtZWFsPyBEZXBlbmRpbmcgb24gd2hhdCB0aW1lIG9mIHRoZSBkYXkgdGhlIHBhcnR5IHdpbGwgdGFrZSBwbGFjZSwgeW91IGNhbiBrZWVwIGl0IHNpbXBsZSAoYXBwZXRpemVycyBhbmQgY2FrZSkgb3IgZ28gYWxsIG91dCBhbmQgc2VydmUgYSBtZWFsIHRvIGFsbCBvZiB0aGUgZ3Vlc3RzLiBJZiB5b3Ugb3B0IGZvciB0aGUgbGF0dGVyIGlkZWEsIHNob290IGZvciBhIGJ1ZmZldCBzdHlsZSBzcHJlYWQgdGhhdCByZXF1aXJlcyBsaXR0bGUgbGFzdCBtaW51dGUgcHJlcGFyYXRpb24uIApJIGhhdmUgbm8gaXNzdWVzIHdoZW4gcGVvcGxlIHVzZSB0aGVpciBjaG9jb2JvcyBiZWNhdXNlIEkgc21hcnQgZW5vdWdoIHRvIGtub3cgdGhlcmUgd2F5cyB0byB0dXJuIG9mZiB0aGVpciBoZWFsdGggYmFycyBhbmQgbmFtZSBwbGF0ZXMuIAoiSXQgc291bmRzIGxpa2UgaXQgbWlnaHR5IG9mdGVuLCBiZWxpZXZlIE1FLiBCdXQgdHJ1c3Qgb25lIG1hbiB0byBleGN1c2UgYW5vdGhlci4gSSBoYXZlIG5vIHVzZSBmb3IgUm9iZXJ0IEJheHRlci4gSGUgdHVybmVkIE1ldGhvZGlzdCBqdXN0IGJlY2F1c2UgdGhlIFByZXNieXRlcmlhbiBjaG9pciBoYXBwZW5lZCB0byBiZSBzaW5naW5nIEJlaG9sZCB0aGUgYnJpZGVncm9vbSBjb21ldGgnIGZvciBhIGNvbGxlY3Rpb24gcGllY2Ugd2hlbiBoaW0gYW5kIE1hcmdhcmV0IHdhbGtlZCB1cCB0aGUgYWlzbGUgdGhlIFN1bmRheSBhZnRlciB0aGV5IHdlcmUgbWFycmllZC4gU2VydmVkIGhpbSByaWdodCBmb3IgYmVpbmcgbGF0ZSEgSGUgYWx3YXlzIGluc2lzdGVkIHRoZSBjaG9pciBkaWQgaXQgb24gcHVycG9zZSB0byBpbnN1bHQgaGltLCBhcyBpZiBoZSB3YXMgb2YgdGhhdCBtdWNoIGltcG9ydGFuY2UuIEJ1dCB0aGF0IGZhbWlseSBhbHdheXMgdGhvdWdodCB0aGV5IHdlcmUgbXVjaCBiaWdnZXIgcG90YXRvZXMgdGhhbiB0aGV5IHJlYWxseSB3ZXJlLiBIaXMgYnJvdGhlciBFbGlwaGFsZXQgaW1hZ2luZWQgdGhlIGRldmlsIHdhcyBhbHdheXMgYXQgaGlzIGVsYm93IGJ1dCBJIG5ldmVyIGJlbGlldmVkIHRoZSBkZXZpbCB3YXN0ZWQgdGhhdCBtdWNoIHRpbWUgb24gaGltLiIKUG9rZXIgb24gVFYgaGFzIGJlZW4gdGhlIGNhdGFseXN0IHRoYXQgYWxsb3dzIG1pbGxpb25zIG9mIHBlb3BsZSB0byB2aWV3IHJlYWwgcG9rZXIgYmVpbmcgcGxheWVkIGJ5IHRvZGF5J3MgeW91bmcgZ3VucyBhbmQgcG9rZXIgbGVnZW5kcy4gClBlZWsgaW50byAzMCBIdWRzb24gWWFyZCdzIDM2IGZvb3QgaGlnaCBsb2JieSBhbmQgcHJlcGFyZSB0byBzYXkgIndvdyIgd2hlbiB5b3Ugc2VlIHRoZSBodWdlLCBncmF5IGdyYW5pdGUgYmxvY2tzIGFuZCBiYWNrbGl0IG1hcmJsZSBpbnNlcnRzLiAKVHJ1c3QgeW91ciBndXQuIApJIGtub3cgbmV4dCB0byBub3RoaW5nIGFib3V0IE5vcnRoIEtvcmVhIG90aGVyIHRoZW4gYXJ0aWNsZXMgSSByZWFkIHdoaWNoIG5ldmVyIHBhaW50IGEgcHJldHR5IHBpY3R1cmUuIEkgaGF2ZSB3b25kZXJlZCBmb3IgYSBsb25nIHRpbWUgd2h5IHRoZXkgd291bGRuIHB1cnN1ZSBhIGNvdXJzZSBsaWtlIHRoaXMgYmVjYXVzZSBpbiB0aGUgZW5kIGl0IHdvdWxkIHNvIGdyZWF0bHkgYmVuZWZpdCB0aGUgcGVvcGxlIGFuZCB0aGUgY291bnRyeSBhcyBhIHdob2xlLiAKVGVuYW50cyB3YW50IG15IGJhc2VtZW50IGZpbmlzaGVkClNvIEkgYXNrZWQgaGVyIGlmIHNoZSB3YW50ZWQgdG8gZ28gdG8gdGFyZ2V0IGFuZCBzaGUgd2FzIHN1cGVyIGV4Y2l0ZWQuIFNoZSBzcGVudCBhYm91dCAxMGsgYW5kIGZpbGxlZCB1cCB0aHJlZSBjYXJ0cyBvZiBzdHVmZi4gU2hlIHdhcyBzbyBhbWF6ZWQuIEFuZCBJIHdhcyBzbyBzaG9ja2VkIEknZCBuZXZlciByZWFsbHkgcmVhbGl6ZWQgaG93IHJpY2ggc2hlIHdhcyBhbmQgd2hhdCBhIGRpZmZlcmVudCBsaWZlIHNoZSBsaXZlZC4KQm9vayBjaGFwdGVyR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAzOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgbWVudGFsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGp1bmlvciBlbGl0ZSBhdGhsZXRlc1BhcmtpbiwgQi4gQW5kIFdhbHNoLCBWLiAyMDE3LiAKQmVjYXVzZSBvZiBteSBwaHlzaWNhbCBjb25kaXRpb25zLCBJIGFza2VkIGhlciB0byBnaXZlIDMwIG1pbiBzZXNzaW9uLiAKUG93ZWxsIGxlYW5lZCBvdmVyIGFuZCBhc2tlZCBhIGNvbGxlYWd1ZSwgeW91IHRoaW5rIGhlIGtub3dzIHRoYXQgdGhlIHJlc3Qgb2YgdXMgYXJlIGhlcmU/IHdyaXRpbmcgc2VlbWVkIGlycmVwcmVzc2libGUgYW5kIGVudGVydGFpbmluZyBtdWNoIG9mIHRoZSB0aW1lLiAKQmxvZzogTGF0ZSBnb2FsIGhlbHBzIEdvbGRlbiBLbmlnaHRzIGtub2NrIG9mZiBDYWxnYXJ5IEZsYW1lcyBNYXJjaCA2LCAyMDE5CldvbGxvbmdvbmcgRGlzdHJpY3QgQ291cnQganVkZ2UgUGF1bCBDb25sb24gc2FpZCBoYWQgaGFkICJubyBpZGVhIiBob3cgdGhlIG1hbGUgdmljdGltIHdhcyBub3QgZmF0YWxseSB3b3VuZGVkIHRoZSBuaWdodE1pdGNoZWxsIEJsZWltdXRoIHNsYW1tZWQgYSBnbGFzcyBpbnRvIGhpcyBuZWNrIGluIGFuIGFwcGFyZW50bHkgdW5wcm92b2tlZCBhc3NhdWx0LiAKSXQgaXMgYSBkYXJrIHZlcnNpb24gb2YgbG92ZSwgaXNuIGl0PyBkYW5nZXJvdXMgYW5kIHBvdGVudGlhbGx5IGxldGhhbCBvbmUgdW5kZXJuZWF0aCBhbGwgdGhlIG92ZXJ3cm91Z2h0IGVtb3Rpb24uIFRoYXQgd2hhdCBJIHRoaW5rIG1pZ2h0IGJlIGltcG9ydGFudCB0byBsb29rIGF0IGFzIHdlIGFyZSBvdmVyd2hlbG1lZCB0aGlzIHdlZWsgd2l0aCBhIHNlcmllcyBvZiBtYWxlIG1vbnN0ZXJzLCBzZXh1YWwgcHJlZGF0b3JzLCBjcmVhdHVyZXMgc28gZGFyayBhbmQgdmlsZSBpdCBpcyBuZWFybHkgaW1wb3NzaWJsZSB0byBjb25zaWRlciB0aGVtIGh1bWFuLi4gCkFzIGZvciB0aGUgY3VsdHVyYWwgcmVhc29uLCBJIGRvbiByZWFsbHkgaGF2ZSBhbiBhbnN3ZXIuIApBcnRpc3RzIHRlbmQgdG8gdW5kZXJ2YWx1ZSB0aGVpciB3b3JrIGlmIGFueXRoaW5nLiBTdG9wIGZlZWxpbmcgZ3VpbHR5IGFuZCBiZSBwcm91ZCBhbmQgaGFwcHkuLiAKT25lIG9mIHRoZSBvZmZpY2VycyBvbiBwYXRyb2wgZHV0eSB3YXMgU2VyZ2VhbnQgSGFydmV5IFBoaWxsaXBzLCBhIHRhbGwsIGRhcmsgaGFpcmVkLCBydWdnZWQgbG9va2luZyBjb3AsIGZpZnRlZW4geWVhcnMgb24gdGhlIGZvcmNlLiBHaWJicyBkaXNwYXRjaGVkIFNlcmdlYW50IFBoaWxsaXBzIHRvIHdoYXQgaGUgYXNzdW1lZCB3YXMgdGhlIHNjZW5lIG9mIHRoZSByZXBvcnRlZCByb2JiZXJ5IHRoZSBNY0FuYWxseSdzIGNvbnZlbmllbmNlIHN0b3JlIG91dCBvbiBOb3J0aCBCcm9hZHdheSwgYXQgdGhlIHNwYXJzZWx5IHBvcHVsYXRlZCBub3J0aGVybiBlZGdlIG9mIHRvd24uIFNlcmdlYW50IFBoaWxsaXBzIGZvbGRlZCBoaXMgbG9uZyBmcmFtZSBpbnRvIGEgc3F1YWQgY2FyLCBwaXN0b2wgc2VjdXJlIGluIHRoZSBob2xzdGVyIG9uIGhpcyBoaXAsIGFuZCBoZWFkZWQgb3V0IHRoYXQgd2F5LCBjcm9zc2luZyBNYWluLCBwYXNzaW5nIHRoZSBsb29taW5nIGdyYXkgZmVlZCBtaWxsIHdpdGggYSByZWQgd2FybmluZyBsaWdodCBhdCBpdHMgaGlnaGVzdCBwb2ludCwgYnVtcGluZyBvdmVyIHRoZSByYWlscm9hZCB0cmFja3MgYXMgaGUgZGlkLCBwYXNzaW5nIHRoZSBzdG9yZXMgb24gQnJvYWR3YXksIGNsb3NlZCBmb3IgdGhlIGV2ZW5pbmcsIGNyb3NzaW5nIEZvdXJ0aCBTdHJlZXQsIHNwZWVkaW5nIG5vcnRoIHRvd2FyZCB3aGVyZSBCcm9hZHdheSBiZWNvbWVzIG9uZSBvZiB0aGUgaGlnaHdheXMgaW50byB0b3duLiAKUGxlYXNlIGRlc2NyaWJlIGluIG1vcmUgZGV0YWlsIHRoZSBraW5kIG9mIGJlbnQgdGhhdCBJIGFtIG5vdCBzZWVpbmcgb3VyIGNvdW50cnksIGFuZCBob3cgaXQgaXMgbW9yZSBuYXRpb25hbGlzdGljIHRoYW4gc2ltaWxhciBtb3ZlbWVudHMvdGVuZGVuY2llcyBpbiB0aGUgVUsuIApDb3VuLiBUYW55YSBQYXJrIGNyaXRpY2l6ZWQgdGhlIHR3ZWV0cywgYXMgZGlkIGEgbnVtYmVyIG9mIGNvbW11bml0eSBsZWFkZXJzLkkndmUgYmVlbiBhc2tlZCB3aHkgcGVvcGxlICh3b21lbikgYXJlbid0IHJ1bm5pbmcuIFRoaXMgaXMgYSBzaWduaWZpY2FudCByZWFzb24gd2h5LiBGZXcgZmVtYWxlIGNhbmRpZGF0ZXMgaGF2ZSBlbnRlcmVkIHRoZSBtdW5pY2lwYWwgcmFjZSwgYmFyZWx5IG1vcmUgdGhhbiBhIHF1YXJ0ZXIgb2YgdGhvc2Ugd2hvIGhhdmUgZmlsZWQgbm9taW5hdGlvbiBwYXBlcnMuT25saW5lIGRpYWxvZ3VlIHBsYXlzIGEgcm9sZSwgc2FpZCBBbm5lIE1hcmllIFNhbmNoZXosIGNoYWlyIG9mIFdvbWVuIGFuZCBQb2xpdGljcywgd2hvIHR3ZWV0ZWQgYSBzaW1pbGFyIHNlbnRpbWVudCBXZWRuZXNkYXkgbmlnaHQuZGl2aXNpdmVuZXNzIG9mIGNlcnRhaW4gdG9waWNzIGxpa2UgQlJUIGhhcyBicm91Z2h0IG91dCBtb3JlIG5lZ2F0aXZpdHkgYW5kIG1vcmUgcG9sYXJpemF0aW9uLiAKSGUgdG9sZCBtZSB0aGVyZSB3ZXJlIDE2MCBwZW9wbGUgd2hvIHdlcmUgc2VudCB0byBGcmFuY2UgZm9yIHRyYWluaW5nLCB3aGVuIG5vcm1hbGx5IGZpdmUgb3Igc2l4IHBlb3BsZSB3b3VsZCBoYXZlIGJlZW4gZW5vdWdoLiAKQW5kIE1vdGhlcidzIHByZSAiRkNLIiB3b3JrLCBpZiBsZXNzIG5vdGljZWQsIGhhcyBiZWVuIG91dCBvZiB0aGUgYm94LiAKRGUgbnVldm8gZXh0ZXJuYWxpZGFkZXMsIGV0Yy4gClRoYXQncyBzb21ldGhpbmcgdGhhdCBJIGZvdW5kIGlzIHRydWUsIGJ1dCBpZiB5b3UgbG9vayBhcm91bmQgdGhlcmUgc2hvdWxkIGJlIHNtb2tlIHNob3BzIHdobyBoYXZlIHRoZW0gZm9yIHZlcnkgZGVjZW50IHByaWNlcy4gClRoaXMgaGFzIGJlZW4gY2xlYXJseSBkZW1vbnN0cmF0ZWQgd2l0aCBIYW1hcydzIHRha2VvdmVyIG9mIEdhemEuIApJdCBqdXN0IHByb3Zva2VzIGEgZGVlcCByb290ZWQgYW5nZXIgd2l0aGluIG1lIHdoZW5ldmVyIEkgc2VlIGl0LiAKQnVmZnl3YW4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCk5vdywgbGV0cyBnZXQgb24gd2l0aCB0dXJuaW5nIHRoaXMgdGVhbSBhcm91bmQsIHdoaWNoIG1lYW5zLCBzYWRseSwgZWxpbWluYXRpbmcgQmFycnkgYW5kIGhpcyBvdmVycHJpY2VkIHNhbGFyeSBhbmQgZ2V0dGluZyB5b3VuZywgZWFnZXIgcGxheWVycyB3aG8gYWN0IGxpa2UgdGhleSB3YW50IHRvIHdpbi4gCkdlcmFkZSBlcmxlYmVuIHdpciBlaW4gcGFhciBhdXNnaWViaWdlIFJlZ2VudGFnZSB1bmQgZGFzIEZlaGxlbiBkZXIgZGlyZWt0ZW4gU29ubmVuZWluc3RyYWhsdW5nIG1hY2h0IHNpY2ggZGV1dGxpY2ggYmVtZXJrYmFyLiAKTG9yZCBKZXN1cyBDaHJpc3QgaGFzIGNvbW1hbmRlZCB0aGUgcHJlYWNoaW5nIG9mIHRoZSBnb3NwZWwgdG8gYWxsIG5hdGlvbnMuIApOb3Qgb25seSB0aGUgcGFpZCBpZGlvdHMsIEJyeWNlISBMb29rIGF0IGFsbCB0aGUgcmlmZiByYWZmIGNvbWluZyBvdXQgb2YgdGhlIHdvb2R3b3JrIGhlcmUgdG9kYXkuIApPbiB0aGUgZm9sbG93aW5nIHZpZGVvIEkgaGF2ZSBhdHRhY2hlZCBoZXJlIHlvdSBiZSBhYmxlIHRvIHNlZSBob3cgdGhpcyBhaXIgY3JhZnQgd2FzIG1vdmluZyBhbmQgeW91IGdldCB0byBzZWUgdGhlIGRldGFpbHMgb2YgaXQuIEkgc3Ryb25nbHkgYmVsaWV2ZSB0aGlzIGlzIGRlZmluaXRlbHkgbm90IGh1bWFuIG1hZGUsIHRoZSBzdHJhbmdlIHRoaW5nIGFib3V0IGl0LCBpcyB0aGF0IGl0IG1hZGUgbm8gc291bmQuIApUaGVyZSBhcmUgdHdvIG1haW4gbWV0aG9kczogdGhlb3JldGljYWwgYW5kIGVtcGlyaWNhbC4gVGhlIGZpcnN0IG9mIHRoZXNlIGlzIHVzZWQgd2hlbiB0aGVyZSBpcyBhIHJlbGF0aXZlbHkgc2ltcGxlIG1vZGVsZm9yIHRoZSBwb3NzaWJsZSBvdXRjb21lcyBvZiBhIHRyaWFsLiBGb3IgZXhhbXBsZSwgaWYgeW91IHJvbGwgYWZhaXIgZGllLCBsYXdzIG9mIHBoeXNpY3Mgc3VnZ2VzdCB0aGF0IGVhY2ggb2YgdGhlIHNpeCBmYWNlcyBpc2VxdWFsbHkgbGlrZWx5IHRvIGVuZCB1cCBvbiB0aGUgdG9wIGZhY2UuIApJZiB0aGVyZSBpcyBhIGZ1bGwgdGFibGUsIHJlbWVtYmVyIHRoYXQgaXQgaXMgZGlmZmljdWx0IGZvciBhIHBsYXllciBzZWF0ZWQgYXQgdGhlIG9wcG9zaXRlIGVuZCB0byBiZSB0aGUgZGVhbGVyIHNpbmNlIHRoZSBwbGF5ZXIgYXQgdGhlIG90aGVyIGlzIHRvbyBmYXIgYXdheSBhbmQgdGhlIGNoaXBzIHdvdWxkIGFsc28gYmUgZGlmZmljdWx0IHRvIG1hbmV1dmVyIGludG8gdGhlIHBvdC4gCkJ1aWxkaW5nIHNoaXR0eSB0b3lzIGlzIHN0cmljdGx5IHNlY29uZGFyeSBzZWN0b3IgICBoZWF2eSBtYW51ZmFjdHVyaW5nLiBUZXJ0aWFyeSBzZWN0b3Igb2YgaW5kdXN0cnkgZW5jb21wYXNzZXMgc2VydmljZSBhbmQgcHJvdmlzaW9uIHR5cGUgb2YgaW5kdXN0cmllcyB3aGlsZSBRdWF0ZXJuYXJ5IHNlY3RvciBpbnZvbHZlcyBpbnRlbGxlY3R1YWwgYnVzaW5lc3MgbW9kZWxzIHN1Y2ggYXMgZGVzaWduLCBjb21wdXRpbmcsIGFuZCB2YXJpb3VzIGluZm9ybWF0aW9uIHRlY2hub2xvZ2llcy4gSnVzdCBiZWNhdXNlIENoaW5hIHVzZXMgc2xhdmUgbGFib3IgdG8gYnVpbGQgaVBob25lcyBkZXNpZ25lZCBpbiBDYWxpZm9ybmlhIGRvZXMgbm90IG1ha2UgQ2hpbmEgYW4gaW5kdXN0cmlhbGx5IGRldmVsb3BlZCBuYXRpb24uIApNYXNjdWxpbmUgZW5lcmd5IGxpa2VzIHRvIHRha2UgdGhlIGhlbG0gYW5kIGJlIHRoZSBsZWFkZXIgb2YgdGhlIHBhY2ssIHdoaWxlIGZlbWluaW5lIGVuZXJneSBpcyBmYWNpbGl0YXRpdmUsIG51ZGdpbmcgZnJvbSBiZWhpbmQuIEVtZXJnZW5jeSBzaXR1YXRpb25zIGNhbGwgZm9yIGEgbGVhZGVyIHRvIHRha2UgY2hhcmdlIGFuZCBtYWtlIGEgZGVjaXNpdmUgZGVjaXNpb24uIEJ1dCBhIGxlYWRlciB3aG8gZG9lcyB0aGlzIGFsbCB0aGUgdGltZSwgcmVnYXJkbGVzcyBvZiB0aGUgc2l0dWF0aW9uLCBkb2Vzbid0IGdpdmUgZW1wbG95ZWVzIGFuIG9wcG9ydHVuaXR5IHRvIGRldmVsb3AuIEJ5IGFsbG93aW5nIG90aGVycyB0byBtYWtlIHRoZWlyIG93biBkZWNpc2lvbnMgbWVudG9ycyBidWlsZCBzdWNjZXNzb3JzLCBqdXN0IGFzIHBhcmVudHMgdHJhaW4gdGhlaXIgY2hpbGRyZW4gdG8gbGl2ZSBhd2F5IGZyb20gaG9tZS4gQSBsZWFkZXIgd2hvIHByYWN0aWNlcyBib3RoIGVuZXJnaWVzIGtub3dzIHdoZW4gdG8gc3RlcCBmb3J3YXJkIGFuZCB3aGVuIHRvIGRlbGVnYXRlLgpEb250IG1pc3Mgb3V0IG9uIHRoZSBncmVhdCBkYXkuIENvbnRhY3QgUGF1bCBTcGVuY2VyIG9uIDA0MjkwMTE2OTkgb3IgYW55IGNvbW1pdHRlZSBmb3IgdGlja2V0cy4gCkJ1dCBzb21ldGltZXMgc2hlIGFubm95aW5nIGFzIGhlbGwgYmVjYXVzZSBzaGUgbmVlZHMgdG8gZmVlbCB1c2VmdWwgZXNwZWNpYWxseSB3aGVuIGhlciBzb24gaXMgYXJvdW5kLiAKSWYgdGhlcmUgaXMgYSBnZW5lcmFsIGxhY2sgb2YgaW50ZXJsYWNpbmcsIHlvdSBjYW4gdHJ5IHdvcmtpbmcgb24gY291cGxlIGFzcGVjdHMgb2YgeW91ciBzaHVmZmxlOi4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZUEgMjQgeWVhciBvbGQgbWFuIGhhcyBiZWVuIGphaWxlZCBmb3IgYXQgbGVhc3QgdHdvIGFuZCBhIGhhbGYgeWVhcnMgb3ZlciBhIGhvcnJpZmljLCBkcnVnIGZ1ZWxsZWQgZ2xhc3NpbmcgYXQgdGhlIFdhcmlsbGEgSG90ZWwgdGhhdCBsZWZ0IHRoZSB2aWN0aW0gd2l0aCBhIDE1Y20gbmVjayB3b3VuZC4gV29sbG9uZ29uZyBEaXN0cmljdCBDb3VydCBqdWRnZSBQYXVsIENvbmxvbiBzYWlkIGhhZCBoYWQgIm5vIGlkZWEiIGhvdyB0aGUgbWFsZSB2aWN0aW0gd2FzIG5vdCBmYXRhbGx5IHdvdW5kZWQgdGhlIG5pZ2h0TWl0Y2hlbGwgQmxlaW11dGggc2xhbW1lZCBhIGdsYXNzIGludG8gaGlzIG5lY2sgaW4gYW4gYXBwYXJlbnRseSB1bnByb3Zva2VkIGFzc2F1bHQuIAoxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnb05vdCBldmVyeXRoaW5nIG5vciBhbSBJIHNheSBldmVyeXRoaW5nIGxpa2UgeW91IGltcGx5LiAKSSBkb250IGtub3cgdG9vIG11Y2ggYWJvdXQgaGltIGJ1dCB3aGF0IEkgaGF2ZSBzZWVuIG1ha2VzIG1lIGxpa2UgaGltLiAKIlNvY2NlciB3YXNuJ3QgYmlnLiBEYXZpZCBCZWNraGFtIGNhbWUgb3ZlciBoZXJlIGFuZCBzdWRkZW5seSB0aGUgc3BvcnQgaXMgc3RhcnRpbmcgdG8gZ3JvdywiIFdhcm5lIHRvbGQgcmVwb3J0ZXJzIGF0IGEgaG90ZWwgaW4gVGltZXMgU3F1YXJlIGFoZWFkIG9mIHRoZSBmaXJzdCBBbGwgU3RhcnMgZ2FtZSBvbiBTYXR1cmRheS4KRGF2aWQgV2lsbGlzIG9mIE5vcnRoZXJuIElyZWxhbmQgaGFzIHVuZGVyZ29uZSB0d28gdW5zdWNjZXNzZnVsIHN1cmdlcmllcyBpbiBhbiBlZmZvcnQgdG8gZW5kIGhpcyBmaXZlIHllYXIgaGljY3VwIG9yZGVhbC4uIApZb3UgbWlnaHQgdHJ5IGFuIGF1dG9tYXRpYyBmZWVkZXIgZm9yIGhpcyBkcnkgZm9vZC4gCkNhbiBoZSB0YWtlIHVzIHRvIHRoZSBvZ3JlPyAiU3VyZSwgd2h5IG5vdD8iClR3aWNlIHNoZSB1dHRlcmVkIGhlciB1c3VhbCBjdWNrb28gY2FsbCwgYW5kIHRoZW4gZ2F2ZSBhIGhvYXJzZSwgaHVycmllZCBjYWxsIGFuZCBicm9rZSBkb3duLi4gCktlZXBlciBvZiBUaGluZ3MgdGhhdCBnbyBCSU5HIC4gSXQncyBhIGhlbGwgb2YgYSBqb2IgYnV0IHNvbWVvbmUncyBnb3QgdG8gZG8gaXRTaG9ydCBUZXJtIE1lbW9yeSBMb3NzIE1hbiAgIENIT1BQRVJTIERvIHlvdSBoYXZlIGEgdGhpbmcgZm9yIHNwYW5kZXg/IERvZXMgd2VhcmluZyB5b3VyIHBhbnRzIG91dHNpZGUgeW91ciB0cm91c2VycyBpbiBhIHNob2NraW5nIGNvbWJpbmF0aW9uIG9mIGx1cmlkIGNvbG91cnMgZ2V0IHlvdXIganVpY2VzIGdvaW5nPyBEbyB5b3UgaGF2ZSBhbiB1bnF1ZW5jaGFibGUgZGVzaXJlIHRvIGZpZ2h0IHRoZSBmb3JjZXMgb2YgZXZpbD8gQ2FuIHlvdSBzbWVsbCBnYXM/IC4gQW1iYXNzYWRvciB0byByb2Rhc3NhYm1BICAgVGhlIEZvcmVpZ24gT2ZmaWNlLCBBbGFiYXN0ZXIgSG91c2UgSSdtIG9ubHkgaXQgZm9yIHRoZSBGb2llIEdyYXMgYW5kIHRoZSBNaXN0cmVzc2VzIC4gCk9uZSBwb3NzaWJpbGl0eSBpcyB0YWtpbmcgbWF0dGVycyBpbnRvIHlvdXIgb3duIGhhbmRzIGFuZCBpbnNlcnRpbmcgaGlzIHBlbmlzIGludG8geW91ciBhbnVzLCBpbnN0ZWFkIG9mIHlvdXIgdmFnaW5hLCBpbiB0aGUgd29tYW4gb24gdG9wIHBvc2l0aW9uLiBJZiB5b3UgZGVjaWRlIHRvIGRvIHRoaXMsIEkgaGlnaGx5IHJlY29tbWVuZCBpbnNlcnRpbmcgYSBsYXJnZSBidXR0IHBsdWcgKHNpbmNlIHlvdSBzYXkgaGUgYmlnKSBzZXZlcmFsIGhvdXJzIGJlZm9yZSB5b3UgZXhwZWN0IHRvIGhhdmUgc2V4LiBUaGVuLCB3aGVuIHRoZSB0aW1lIGNvbWVzLCByZW1vdmUgdGhlIGJ1dHQgcGx1ZywgaW5zZXJ0IGhpcyBwZW5pcywgYW5kIHZvaWxhIHlvdSBoYXZpbmcgYW5hbCBzZXguIApUaGF0IGEgcG9wdWxhciBzdGFuY2UsIGJ1dCB0aGUgdHJ1dGggaXMgbXVjaCBtb3JlIGNvbXBsaWNhdGVkIHRoYW4gdGhhdC4gCihNaW5lIHJlYWxseSBhcmVuIHRlcnJpZnlpbmcsIGxvbCkgSSBvcmlnaW5hbGx5IGxldCBCUzMgcGxheSB3aXRoIHRoZSBkb2xscyBiZWNhdXNlIEkgd2FzIGp1c3QgZ29pbmcgdG8gZG9uYXRlIHRoZW0gYW5kIGhlIGxpa2VkIHRoZW0uLiAKRm9jdXMgZ3JvdXBzIGFyZSBhbHNvIGEgam9rZS4gV2h5IGRvIHlvdSB0aGluayBuZXR3b3JrIHR2IGFuZCByYWRpbyBoYXMgZ29uZSB0byBzaGl0PyBUaGV5IHJlbGllZCBvbiBmb2N1cyBncm91cCBidWxsc2hpdCwgYW5kIG5vdyBpbmRlcGVuZGVudCBlbnRlcnRhaW5tZW50IGhhcyBiZWNvbWUgc28gcG9wdWxhci4gVGhleSBsZXQgY3JlYXRpdmUgcGVvcGxlIGRvIGNyZWF0aXZlIHRoaW5ncyB3aXRob3V0IHRoZSBpbnB1dCBvZiByYW5kb20gZm9jdXMgZ3JvdXBzLgpVbmZvcnR1bmF0ZWx5IGF0IG91ciBhZ2UgdGhhdCBtZWFucyB3ZSBzdGFydCBhdCBhYm91dCA0cG0gYW5kIHN0YXkgb3V0IHVudGlsIGFib3V0IDhwbSBiZWZvcmUgY2FsbGluZyBpdCBhbiBldmVuaW5nLiAKU2hlIGtuZXcgSSB3YXNuJ3QgYW5kIHNoZSBzYWlkIGluIHRoZSByb29tIGluIGZyb250IG9mIGV2ZXJ5IHNpbmdsZSBraWQgaG93IHNoZSB3b3VsZG4ndCBoYXZlIGxldCBoZXIga2lkIGludml0ZSBtZSBlaXRoZXIsIHRoYXQgcGl6emEgd2FzIGV4cGVuc2l2ZSBhbmQgSSdkIGVhdCBpdCBhbGwuIFRoZSBmb2xsb3dpbmcgTW9uZGF5IGFsbCB0aGUgZ2lybHMgZ290IHRvIHRlbGwgaGVyIGhvdyBtdWNoIGZ1biBpdCB3YXMuIApUaG91IGRlc3Ryb3llZGVzdCBvZiBvbGQgdGhlIGdyZWF0IHNhY3JpZmljZSBvZiBEYWtzaGEuIE8gSGFyaSwgTyBSdWRyYSwgSSBib3cgdG8gdGhlZS4gCk5vdyBoZSBhZGRlZCBhIHdob2xlIG5ldywgbG92aW5nIGZhbWlseSB0byBjYXJlIGFuZCBzaG93IHVwIGZvciBoaXMgZXZlbnRzLiAKSSBhZ3JlZSBjb21wbGV0ZWx5LiBGcmFua2x5LCB3aGVuIEkgd2FzIGxvb2tpbmcgdG8gbW92ZSBoZXJlIGEgYml0IGFnbywgSSB2aXNpdGVkIHNldmVyYWwgb2YgdGhlIHN1YnJlZGRpdHMgb2YgcGxhY2VzIGluIGNvbnRlbnRpb24gdG8gZ2V0IGEgZmVlbCBmb3IgdGhlIHZhcmlvdXMgcGxhY2VzLiBFYWNoIGFuZCBldmVyeSBvbmUgaGFkIGEgbmVnYXRpdml0eSBwcm9ibGVtIHRoYXQgaXMgYmVpbmcgZGlzY3Vzc2VkLiAKSXQncyB0aW1lIHRvIGdldCB0aGUgYW5zd2VycyB0aGF0IHRoZXkgaGF2ZSBiZWVuIGxvb2tpbmcgZm9yLCBhbmQgYWxvbmcgdGhlIHdheSB1bmNvdmVyIHRoZSBzZWNyZXQgYmVoaW5kIHRoZSBjdXJlIGZvciB0aGUgZGVhZGx5IEZsYXJlIHBhbmRlbWljICAgYSBzZWNyZXQgdGhhdCB0aGV5IGtub3cgbGllcyB3aXRoaW4gdGhlIEltbXVuZXMuIERvIHRvIHRoaXMgdGhleSBtdXN0IHRhY2tsZSB5ZXQgYW5vdGhlciBtYXplOyBiaWdnZXIgYW5kIG1vcmUgdGVycmlmeWluZyB0aGFuIHRoYXQgd2hpY2ggY2lyY2xlZCB0aGUgR2xhZGUuLiAKTXkgZ2lybGZyaWVuZCBoYXRlcyBnYW1ibGluZy4gU2hlcyBuZXZlciBoYWQgYSBiYWQgZXhwZXJpZW5jZSwgc2hlIGp1c3Qgc2F5cyBnYW1ibGluZyBpcyBiYWQuIEkgYXNrIGhlciB0byBwbGVhc2Ugbm90IGNhcmUgYnV0IHNoZSBjcmllcyByaXZlcnMgYW5kIHNheXMgaXQgd2lsbCBiZSB0aGUgZW5kIG9mIHVzIGlmIEkga2VlcCBnb2luZy4KV2hpdGVyb3NlOTggIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTWFyeSBMYW5kcmlldQpZZXAsIGludGVyZXN0aW5nbHkgZW5vdWdoIHlvdSBjYW4gZ28gYmFjayA1IHllYXJzIHRvIHdoZW4gR2FtZXJnYXRlIHdhcyBoYXBwZW5pbmcsIGFuZCBhIGxvdCBvZiB0aGUgbW9yZSBzdHJvbmdseSBvdXRzcG9rZW4gbWlzb2d5bmlzdHMgc2NyZWFtaW5nIGFib3V0IG1lbiByaWdodHMgYW5kIGhvdyBmZW1pbmlzbSBpcyBldmlsLCBhcmUgbm93IHJlZCBoYXQvd2hpdGUgcG9sbyB3ZWFyaW5nLCB0aWtpIHRvcmNoIGNhcnJ5aW5nIG5lbyBuYXppcy4gVGhlcmUgaXMgYSBuZXcgd2F2ZSBvZiBjbGVhbiBjdXQgYnV0dG9uZWQgZG93biB3aGl0ZSBzdXByZW1hY2lzdHMsIGFuZCBhIGdyZWF0IGRlYWwgb2YgdGhlbSBjb21lIGZyb20gdGhlIHRlY2ggaW5kdXN0cnkuClNoZSBhbHNvIGNhbWUgb3V0IHdpdGggc2hlIG5vdCBzdXJlIGhvdyBzaGUgZmVlbHMgYWJvdXQgbWUsIGFzIHdlIGhhdmUgbWFueSBkaWZmZXJlbnQgYXNwZWN0cyBvZiBvdXIgcmVsYXRpb25zaGlwLiAKVGhlIG9uZSB0aGluZyB0aGF0IG5ldmVyIGNoYW5nZXMgbm8gbWF0dGVyIHdobyBpcyBvbiBib2FyZD8gVG9pbGV0IHBhcGVyLiBBcm91bmQgOSw2MDAgcm9sbHMgYXJlIHVzZWQgZWFjaCB3ZWVrLi4gCklsIGEgZm9ydCBiaWVuIHJhbGlzIG1vbiBzb3VoYWl0LCBhdmVjIHVuZSBkbGljaWV1c2UgYXNzaWV0dGUgY29tcG9zZSA6IHNhbGFkZSBkJ2VuZGl2ZXMgYXV4IG5vaXNldHRlcywgcG9sZSBkZSBjaGFtcGlnbm9ucywgY2Fyb3R0ZXMsIHBvbW1lcyBkZSB0ZXJyZSBhdSByb21hcmluLi4gClRoaXMgc2VlbXMgbGlrZSBhIHByZXR0eSBiYXNpYyBza2lsbCwgYnV0IGlmIHlvdSBsaXN0ZW4gdG8gc29tZSBvdGhlciBwb2RjYXN0ZXJzIHlvdSBjYW4gc2VlIGhvdyBzb21lIHBlb3BsZSBtYWtlIHRoZSBtaXN0YWtlIG9mIGludGVyamVjdGluZyB0b28gbXVjaCBhbmQgbWFraW5nIHRoZSBkaXNjdXNzaW9uIHRvbyBtdWNoIGFib3V0IHRoZW1zZWx2ZXMuQWxzbywgSm9lIGhhcyBjZXJ0YWluIGludGVyZXN0cyB0aGF0IGhlIHByZXR0eSBrbm93bGVkZ2VhYmxlIGFib3V0LCBzdWNoIGFzIG1hcnRpYWwgYXJ0cywgaHVudGluZywgZHJ1Z3MsIGFuZCB3aGF0IGl0IGxpa2UgdG8gaGF2ZSBhIGNhcmVlciBpbiBzdGFuZHVwIGNvbWVkeSAoSSBwZXJzb25hbGx5IGZpbmQgaGlzIHBvZGNhc3QgbXVjaCBtb3JlIGVuam95YWJsZSB0aGFuIGhpcyBzdGFuZHVwIHRob3VnaCkuc291cHNwb29udGFuZyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29NYW4sIEkgYmVlbiBhIGZhbiBvZiBLaW5nIHNpbmNlIEkgd2FzIGEga2lkLCBhbmQgSSByZWFkIGEgd2hvbGUgbG90IG9mIGhpcyBzdHVmZi4gSSBhbHdheXMgc2VlIHByYWlzZSBmb3IgdGhpcyBib29rLCBhbmQgSSBjb21wbGV0ZWx5IGRpc2FncmVlLCBlc3BlY2lhbGx5IGFib3V0IHRoZSBlbmRpbmc6IEl0IHRob3VnaHQgaXQgd2FzIG92ZXJseSBjaGVlc3kgYW5kIHNhY2NoYXJpbmUuVGhlIGJvb2sgaW4gZ2VuZXJhbCB3YXMgbm90IG9uZSBvZiBoaXMgYmVzdCBpbW8sIHRoZXJlIHdlcmUgcGFydHMgdGhhdCBjb21wbGV0ZWx5IGRyYWdnZWQgKGxpa2UgYSBiaWcgc2VjdGlvbiBpbiB0aGUgbWlkZGxlIHdoZXJlIEpha2UgaXMgc3Rha2luZyBvdXQgTGVlIEhhcnZleSBPc3dhbGQgYnkgbGl2aW5nIG5lYXIgaGltKSB3aGVyZSBJIHdhcyBoYXZpbmcgdG8gZm9yY2UgbXlzZWxmIHRvIGtlZXAgcmVhZGluZyBiZWNhdXNlIEkgd2FzIGhvcGluZyBpdCB3b3VsZCBnZXQgYmV0dGVyLk92ZXJhbGwgSSBzYXkgdGhpcyBib29rIGlzIHByZXR0eSBvdmVycmF0ZWQ7IGl0IGhhZCBhbiBpbnRlcmVzdGluZyBwcmVtaXNlIGFuZCBzb21lIGdvb2QgcGFydHMgYnV0IHRoZSBmbGF3cyB3ZXJlIGVub3VnaCB0aGF0IEkgcHJvYmFibHkgd291bGRuIGV2ZW4gcmVjb21tZW5kIGl0IHRvIGFueW9uZS5TYW1lLCBidXQgZm9yIHRoZSB3aG9sZSBTYWRpZSBwbG90bGluZSwgbm90IGp1c3QgdGhlIGVuZGluZy4gSSB3b3VsZCBoYXZlIHByZWZlcnJlZCBKYWtlIGhhdmluZyBhIGxlc3MgZWFzeSB0ZWUgdXAgdG8gbGl2aW5nIGluIHRoZSBwYXN0IGZyb20gdGhlIGRpbmVyIG93bmVyIGFuZCBzZWVpbmcgaGltIHN0cnVnZ2xlIGEgYml0IGFzIHRoZSBiIHBsb3QgcmF0aGVyIHRoYW4gYSBsYXp5IHJvbWFuY2UgYmV0d2VlbiBhIHR3byBkaW1lbnNpb25hbCBzaWRlIGNoYXJhY3RlciBhbmQgYmFyZWx5IGZsZXNoZWQgb3V0IG1haW4gY2hhcmFjdGVyLiAKSGUncyBzdWNoIGEgZmxpcnQsIHN1Y2ggYSBjaGFybWVyICAgYW5kIEkgZmVsbCBmb3IgaXQuIApIb3cgZWFzeSBpdCBpcyB0byBlc2NhcGUgdGhlIHRvdXJpc3QgdHJhcCBhbmQgaGF2ZSBhIG11Y2ggYmV0dGVyIHRpbWUgYmVjYXVzZSBvZiBpdC4gCk91ciBob3VzZWtlZXBpbmcgdGVhbSBkb2VzIGEgZ3JlYXQgam9iIG9mIGNsZWFuaW5nIGFuZCBzdGVyaWxpemluZyBvdXIgcm9vbXMgYmV0d2VlbiBndWVzdHMsIGFuZCB0aGUgaW5jbHVkZXMgdGhlIHJlbW90ZSwgYnV0IHdlIGV2YWx1YXRlIHRoaXMgYW5kIHJlcGxhY2UgaXQgaW1tZWRpYXRlbHkgaWYgbmVlZGVkLiBBZ2Fpbiwgd2UgYXJlIHNvIGhhcHB5IHRoYXQgeW91IGxvdmVkIGl0IGhlcmUsIGFuZCBob3BlZnVsbHkgd2UgZ2V0IHRoZSBjaGFuY2UgdG8gaG9zdCB5b3UgYWdhaW4gaW4gdGhlIGZ1dHVyZS4gVGhhbmtzIGFnYWluLiAKVGhvc2Ugc2FtZSBwZW9wbGUgYXJlIGFsc28gd2hvbGx5IHVud2lsbGluZyB0byBjb25zaWRlciB3aGF0IGVjb25vbWljLCBvciBwb3dlciBjb3N0LCBtYXkgY29tZSB3aXRoIHJlbGlucXVpc2hpbmcgdGhlIGNvbnN1bXB0aW9uIHJhY2UuIFRoZXkgc2F5IHRoYXQgZXZlbiBpZiB3ZSBzdG9wcGVkLCB0aGUgQ2hpbmVzZSB3b3VsZCBqdXN0IHN0ZXAgaW4gYW5kIHBpY2sgdXAgd2hlcmUgd2UgbGVmdCBvZmYsIGFuZCB0aGVuIHdlIGNvdWxkIGpvaW4gdGhlIGdsb3Jpb3VzIGxpc3Qgb2YgZ3JvdXBzIG9mIHBlb3BsZSB3aG8gYXJlIG5vIGxvbmdlciBvbiB0aGlzIHBsYW5ldCBiZWNhdXNlIG9mIHRoZWlyIGN1bHR1cmUncyBpbmFiaWxpdHkgdG8gZmFsbCBpbiBsaW5lIHdpdGggdGhlIGNvbnN1bXB0aW9uIGF0IGFsbCBjb3N0cyB0aGlua2luZy4uIApYZW5vcm91cyB1ClRvYmFjY28gdXNlIGFtb25nIHRoZSBsZ2J0IGNvbW11bml0eSBpcyBhIHdvcmxkd2lkZSBwcm9ibGVtIHRoYXQgc3RlbXMgZnJvbSBtdWx0aXBsZSBmYWN0b3JzLCBzdWNoIGFzIHRoZSBzb2NpYWwgbmF0dXJlIG9mIHRoZSBhY3QgYW5kIHRoZSBmYWN0IHRoYXQgbWFueSBsZ2J0IHBlb3BsZSBzZWUgaXQgYXMgYW4gb3V0bGV0IGZvciByZWxpZXZpbmcgc3RyZXNzLCB3aGljaCB0aGV5IGNlcnRhaW5seSBoYXZlIHBsZW50eSBvZi4gCk1pbGl0YXJ5IHRyYWluaW5nIGZvciBoaXMgdGVjaG5pcXVlLiAKT25jZSB5b3UgdHJ5IGl0IG9uY2Ugb3IgdHdpY2UgeW91IHdpbGwgc2VlIHRoYXQgeW91IGRvIG5vdCBjdXQgYW55dGhpbmcgb2ZmLiBUaGUgY2FyIGRyb3BzIGEgZmV3IG1waCBpbnN0YW50bHksIGxlYXZpbmcgeW91IHRvbnMgb2Ygcm9vbSB0byBnZXQgaW4uLiAKT3ZlcmFsbCBpbiAyNCBnYW1lcywgV2lsbGlzIGhhcyBmaXZlIGRvdWJsZXMsIGZvdXIgdHJpcGxlcyBhbmQgdHdvIGhvbWUgcnVucyBhbW9uZyBoaXMgMjggaGl0cywgd2hpbGUgYWxzbyBzY29yaW5nIDEzIHJ1bnMsIGRyaXZpbmcgaW4gMTEgYW5kIHN0ZWFsaW5nIDExIGJhc2VzLgpFbnRyZXByZW5ldXIgaGFzIGEgZGlzdHJpYnV0aW9uIHNpZGUgZm9yIHRoaXJkIHBhcnR5IHByb2R1Y3RzIGFzIHdlbGwgYXMgaGlzIG93biBicmFuZCBvZiBkZWh5ZHJhdGVkIGFwcGxlIGNoaXBzLiAKU3RhdGVzIHdvdWxkIHByb2JhYmx5IGJlIGJldHRlciBvZmYgdG8gZGl2aWRlIHRoZSBhbW91bnQgb2YgcmV2ZW51ZSBnZW5lcmF0ZWQgYnkgdGhlIG51bWJlciBvZiBuZXcgbGljZW5zZXMgcGVyIHllYXIgYW5kIGp1c3QgYWRkIHRoYXQgbW9uZXkgb250byBvdXIgZmVlcy4gCkluIFRoZSBTaXh0aCBFeHRpbmN0aW9uLCBLb2xiZXJ0IHVzZXMgYSBkaWZmZXJlbnQgYnV0IGVxdWFsbHkgcG93ZXJmdWwgdGVjaG5pcXVlLiBTaGUgYmVnaW5zIGJ5IGFza2luZyB1cyB0byBpbWFnaW5lIGEgbmV3IHNwZWNpZXMgdGhhdCBlbWVyZ2VkIGFyb3VuZCAyMDAsMDAwIHllYXJzIGFnbyBmYWNlZCB3aXRoIHdoYXQgeW91J2QgZXhwZWN0IG9uZSB0byBlbmNvdW50ZXI6IGhvc3RpbGl0eSwgY29tcGV0aXRpb24gYW5kIGFib3ZlIGFsbCwgYSBuZWNlc3NpdHkgdG8gYWRhcHQuIApJbiAxOTAwLCBtZW4gd2F0ZXIgcG9sbyBiZWNhbWUgdGhlIGZpcnN0IHRlYW0gc3BvcnQgaW50cm9kdWNlZCBhdCB0aGUgbW9kZXJuIE9seW1waWMgR2FtZXMuIFRoZSBydWxlcyBvZiB0aGUgZ2FtZSB3ZXJlIGRpZmZlcmVudCBpbiBFdXJvcGUsIHNvIGluIHRoZSAxOTA0IE9seW1waWMgR2FtZXMgaW4gU3QuIApTbywgbGV0IG1lIGdldCB0aGlzIHN0cmFpZ2h0OiB5b3VyIGRhZCBhbHJlYWR5IGhhZCBhIGZldyBkYXlzIHNjaGVkdWxlZCBvZmYgd29yayB3aGVyZSBoZSB3YXMgcGxhbm5pbmcgYSB0cmlwLiBBbmQgd2hlbiBoZSBsZWFybmVkIHRoYXQgaGUgd2FzIGxlYXZpbmcgd29yayBlYXJsaWVyIHRoYW4gZXhwZWN0ZWQgaGUgZGVjaWRlZCB0byBoZWFkIG91dCBvbiBoaXMgdHJpcCBlYXJsaWVyIHRoYW4gcGxhbm5lZC4gCldoeSBpcyB0aGlzIHN1Y2ggYSBoYXJkIGNob2ljZSBmb3IgY29uZ3Jlc3Npb25hbCBSZXB1YmxpY2FucwpUaGlzIHNwYW5uZWQgb3ZlciB0aGUgY291cnNlIG9mIGEgZmV3IHdlZWtzLiAKVGhlIG9yaWdpbmFsIHZlcnNpb24gb2YgY3JhcHMgY29udGFpbmVkIGEgZmxhdyB3aGVyZSBwZW9wbGUgY291bGQgYWN0dWFsbHkgd2luLiBUaGUgc2FyY2FzdGljYWxseSBuYW1lZCBKb2huIFdpbm4gaW50cm9kdWNlZCBhIG5ldyBydWxlIHRoYXQgZml4ZWQgdGhlIGhlbGwgb3V0IG9mIHRoYXQuIENhc2lubyBjcmFwcyBoYXMgYmVlbiBhbiBpbmNyZWRpYmxlIHBhcm9keSBvZiByZWxpZ2lvbiBhbmQgbW9iIGJhc2VkIGNhc2ggZXh0cmFjdGlvbiBzZXJ2aWNlcyAoYWthICJhbiBldmVuIGJldHRlciBwYXJvZHkgb2YgcmVsaWdpb24iKSBldmVyIHNpbmNlLiAKQmVkIFJlc3QgSXMgSW5lZmZlY3RpdmUKVGhlIHN0b3JpZXMgaW4gYm90aCBHVEEgYW5kIFJEUiBoYXZlIGFsd2F5cyBtaXNtYXRjaGVkIHdpdGggdGhlIGdhbWVwbGF5LCBpdCBhbHdheXMgYmVlbiBlaXRoZXIgImZ1Y2sgYXJvdW5kIGFuZCBoYXZlIGZ1biIgb3IgInBsYXkgYSBzZXJpb3VzIHN0b3J5IG1pc3Npb24gYW5kIGhhdmUgYWxsIHlvdXIgZnJlZWRvbSB0YWtlbiBmcm9tIHlvdSIsIEdUQSBJViBqdXN0IGdldHMgYSBiYWQgd3JhcCBiZWNhdXNlIHRoZXJlIGFzIG1hbnkgZHJhbWF0aWMgc2NlbmVzIGFzIHRoZXJlIGFyZSBmdW5ueSBvbmVzLCBidXQgaXQgc3RpbGwgZnVubnkgd2hlbiBpdCB3YW50cyB0byBiZSwgYW5kIGJvdGggd29yayBiZXR0ZXIgSU1PIGJlY2F1c2UgdGhleSBjb250cmFzdCB3aXRoIGVhY2hvdGhlciBzbyBuaWNlbHkuIApZZXMgSSBkbyBiZWxpZXZlIHRoYXQgc2V4IGlzIHNvbWV0aGluZyB0aGF0IHdpbGwgdW5sb2NrIHNvbWV0aGluZyBpbiBteSBsaWZlLiBJIGRvIGZlZWwgbGlrZSBpdCBpcyBhIGtleSB0aGF0IGlzIHNvIG1pc3NpbmcgZnJvbSBteSBsaWZlLCBhbmQgbm90aGluZyBlbHNlIGNhbiBvcGVuIHRoYXQgZG9vci4gClRoaW5ncyBhcmUgc3RpbGwgc28gZ29vZCB0aGF0IHNvbWV0aW1lcyBJIHdha2UgdXAgYW5kIGNhbiBiZWxpZXZlIEkgZGF0aW5nIHRoaXMgYW1hemluZyBndXkuIFRoaXMgU3VuZGF5IGhlIHRvb2sgbWUgaWNlIHNrYXRpbmcgKGJ5IHdoaWNoIEkgbWVhbiwgSSBoZWF2aWx5IHN1Z2dlc3RlZCBpdCBtdWx0aXBsZSB0aW1lcyBiZWNhdXNlIEkgbmVlZCB0byBnbyBpY2Ugc2thdGluZyBhdCBsZWFzdCBvbmNlIGEgeWVhciwgZGlkIGFsbCB0aGUgcmVzZWFyY2gvcHJpY2UgY29tcGFyaXNvbnMsIGFuZCB3YWxrZWQgdXMgdG8gdGhlIHJpbmssIGJ1dCBoZSBkaWQgcGF5IGZvciB0aWNrZXRzIGFuZCBza2F0ZSByZW50YWxzLCB3aGljaCBoZSB0b3RhbGx5IGRpZCBub3QgaGF2ZSB0byBkbykuLiAKWW91IGNhbiBhbHNvIHByZWRpY3QgYW5kIHBsYW4gYWxsIHlvdXIgZ2FtYmxpbmcgc3BlbmRpbmcuIE1vbnRobHkgZmVlIGlzIGZpeGVkIGFuZCBkb2Vzbid0IGNoYW5nZSBvdmVyIHRpbWUuIApUaG91Z2h0IGlmIHdlIGNvdWxkIGdldCBhbGwgdGhyZWUgdGhhdCB3b3VsZCBiZSBncmVhdC4gVGhleSBlbmRlZCB1cCB0YWtpbmcgYSBkZWFsIHdpdGggTXMuIERpY2tpbnNvbiB3aG8gb2ZmZXJlZCAkMTAwLDAwMCBmb3IgYSAzNSUgZXF1aXR5IHN0YWtlLi4gCkFuZCBhY3R1YWwgZGViYXRlIG9mIHRoZSBuZWNlc3NhcnkgcmVndWxhdGlvbiBvZiBXYWxsIFN0cmVldCBjYW4gbm93IGJlZ2luIGluIHRoZSBTZW5hdGUuIApUaGV5IHdlcmUgcmVsZWdhdGVkIHRvIHRoZSBkZWVwZXN0IHJlY2Vzc2VzIG9mIG91ciBuYXR1cmUgdG8gYmUgZm9yZXZlciBmb3Jnb3R0ZW4sIGZvciBhIHNwbGl0IHNlY29uZCBvZiBlbGF0aW9uLiBIZSBtYW5hZ2VkIHRvIHVuaXRlIGFuZCBtYWtlIHVzIGFsbCBzaGFyZSBvbmUgaGVhcnQuIApIZSBhIGZ1Y2tpbmcgc29jaWFsaXN0IGFuZCBoaXMgcG9saWNpZXMgd2lsbCBkZXN0cm95IHRoaXMgY291bnRyeS4gQnV0IGhleSwgSSBkb24gZXhwZWN0IHlvdSB0byBnZXQgdGhhdC4gCllvdSBzZWUgdGhpcyBhIGxvdCB3aXRoIG90aGVyIHdva2UgY2F1c2VzIGxpa2Ugc2V4dWFsIGFzc2F1bHQgb3Igb3RoZXIgcmFjaXN0IGFuZCBob21vcGhvYmljIGF0dGFja3MuIApQdXQgYW55dGhpbmcgb3ZlciB5b3VyIGNhbWVyYSB0byBvYnNjdXJlIGl0IGFuZCB0aGUgcG9rZW1vbiBzdGlsbCBzaG93cyB1cC4gClRoYXQgc3VydmV5IGZvdW5kIDM5IHBlcmNlbnQgc3RpbGwgZmF2b3IgdGhlIHdhciwgY29tcGFyZWQgd2l0aCA1OCBwZXJjZW50IHdobyBvcHBvc2UgaXQgICBtYWtpbmcgaXQgYWxtb3N0IGFzIHVucG9wdWxhciBhcyB0aGUgSXJhcSB3YXIgaGFzIGJlY29tZSBpbiByZWNlbnQgeWVhcnMuIApNYWhhbG8gTnVpIExvYSBmb3IgeW91ciA1IHN0YXJzIHJhdGluZyBvZiBvdXIgcmVzb3J0LCBhbmQgeW91ciByZWNvbW1lbmRhdGlvbi4gV2UgbG9vayBmb3J3YXJkIHRvIHdlbGNvbWUgeW91IGJhY2sgaW4gdGhlIG5lYXIgZnV0dXJlLiBXYXJtIElzbGFuZCBSZWdhcmRzIE91dHJpZ2dlciBXYWlraWtpIEJlYWNoIFJlc29ydFJlYWQgbW9yZUhpISAyIHRoaW5nczoxKSBXaGF0IGFyZSB0aGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIE91dHJpZ2dlciBSZWVmIGFuZCB0aGUgT3V0cmlnZ2VyIFdhaWtpa2kgQmVhY2ggUmVzb3J0PzIpIERvIGJvdGggcmVzb3J0cyBvZmZlciBwdWxsIG91dCBjb3VjaGVzIGFuZC9vciByb2xsYXdheSBiZWRzPyBJIGhhdmUgMiB0ZWVuYWdlIGJveXMgYW5kIDIgYmVkcyBhbG9uZSBhcmVuIGdvaW5nIHRvIGJlIGJpZyBlbm91Z2ghQW5zd2VyIGZyb20gQU1HSmFuIDIwMTkgVGhlIEJlYWNoIGlzIHJpZ2h0IGluIHRoZSBtaWRkbGUgb2YgV2Fpa2lraS4gCk1heWZhaXIgY2x1YiBDcm9ja2ZvcmRzIGhhcyByZWZ1c2VkIHRvIHBheSBoaW0gaGlzIHdpbm5pbmdzIG9uIHRoZSBncm91bmRzIHRoYXQgaGUgYSBzY2FtIGFuZCBoZSBpcyBjdXJyZW50bHkgc3VpbmcgdGhlbSBmb3IgdGhlIG1vbmV5LgpJIGp1c3Qgc3RhcnRlZCB3YXRjaGluZyBKQ2FydmVycyBSdW5JdFVwIHZpZGVvcyBvbiB5b3V0dWJlLiBJIHRoaW5rIGl0IGVzc2VudGlhbGx5IGJhbmtyb2xsIGNoYWxsZW5nZSB2aWRlb3MsIGJ1dCBpdCBkb25lIHdoaWxlIDEgdGFibGluZyBhbmQgZXhwbGFpbmluZyBtb3JlIHRob3VnaHQgcHJvY2Vzcy4gWW91IGdldCB0byBzZWUgd2F5IG1vcmUgaGFuZHMuCkp1c3QgdHJpZWQgdG8gd3JpdGUgdGhlbSBhcyBJIHdvdWxkIGhhdmUgdG9sZCB0aGVtIG9uIHRoZSByYWRpbywgc2FpZCBHYXJyZXR0LiBUcmllZCB0byBtYWtlIGl0IGEgY29udmVyc2F0aW9uYWwgdHlwZSBvZiBkaWFsb2d1ZS4gSWYgeW91IG5vdGljZSB0aGV5IHNob3J0IHNlbnRlbmNlcywgd2hpY2ggaXMgYSBsaXR0bGUgZW1iYXJyYXNzaW5nLiAKSXMgYWxyZWFkeSBhIHJlY29nbml6ZWQgbGVhZGVyIGluIGFyZWFzIHN1Y2ggYXMgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIHF1YW50dW0gY29tcHV0aW5nLCBhbmQgYnVzaW5lc3MgcHJvY2VzcyBhdXRvbWF0aW9uLiAKQSBzcGVjaWFsaXN0IGluIHRyZWF0aW5nIHRoZSBleWUgZGlzZWFzZSB0cmFjaG9tYSwgaGUgc3RvbXBlZCB0aHJvdWdoIHRoZSBPdXRiYWNrIGhlbHBpbmcgQWJvcmlnaW5lcyBrZWVwIHRoZWlyIHNpZ2h0LiAKV3JpZ2h0IGZldGlzaGl6ZXMgc3R5bGUgYXQgdGhlIGV4cGVuc2Ugb2YgY29udGVudCAgIGhlJ3Mgb24gcmVjb3JkIGFzIHNheWluZyBuYXR1cmFsaXNtIGlzIGZvciBzaXNzaWVzLCBtb3JlIG9yIGxlc3MgICBidXQgdGhlIHN0dWRpZWQgcGVyZmVjdGlvbiBvZiBoaXMgYXBwcm9hY2ggaW4gIkFubmEgS2FyZW5pbmEnJyBkb2VzIG5vdGhpbmcgYnV0IGNhbGwgYXR0ZW50aW9uIHRvIGl0c2VsZi4gTGFycyB2b24gVHJpZXIncyAiRG9ndmlsbGUnJyAoYW5vdGhlciB0YWxlIG9mIGEgd29tYW4gcHVuaXNoZWQgZm9yIGJyZWFraW5nIHRoZSBydWxlcykgdW5mb2xkZWQgb24gYW4gZXZlbiBtb3JlIG1pbmltYWxpc3Qgc3RhZ2Ugc2V0LCBhbmQgQmF6IEx1aHJtYW5uJ3MgIk1vdWxpbiBSb3VnZSEnJyB3YXMgYW4gb3JneSBvZiB0aGVhdHJpY2FsIGV4Y2VzcywgYnV0IHRob3NlIG1vdmllcyBhcmUgc2F2ZWQgYnkgdGhlaXIgc2hlZXIgaW5hYmlsaXR5IHRvIHNheSB1bmNsZS4gClRoaXJkbHksIG1vcmUgZ2FtaW5nIG1hY2hpbmUgcmV2ZW51ZSBzaG91bGQgYmUgZG9uYXRlZCBieSB2ZW51ZXMgdG8gc3RvcCB0aGUgcm9ydGluZyBvZiBjb21tdW5pdHkgYmVuZWZpdCBjb250cmlidXRpb25zLiBWZW51ZXMgbXVzdCBsb2RnZSBhIHN0YXRlbWVudCBlYWNoIHllYXIgZGV0YWlsaW5nIGNvbW11bml0eSBiZW5lZml0cyBlcXVhbCB0byBhdCBsZWFzdCA4LjMzIHBlciBjZW50IG9mIHRoZWlyIGdhbWluZyBtYWNoaW5lIHJldmVudWUuIApHb3QgZG9uZSwgYW5kIGp1c3QgZmVsbCBzdHJhaWdodCBvbiB0byB0aGUgYmVkIGFuZCBwYXNzZWQgb3V0LiBBaGhoIGdvb2QgdGltZXMuLiAKVGhpcyBwbGF0Zm9ybSBpcyBhIHJlc3VsdCBvZiBzaWduaWZpY2FudCBQTVUgaW52ZXN0bWVudCBpbiBvcmRlciB0byBrZWVwIHVwIHdpdGggdGhlIHZvbHVtZSBvZiBiZXR0aW5nLCBhbGxvd2luZyBiZXR0b3JzIHRvIHBsYWNlIGJldHMgYWxtb3N0IHVwIHRvIHRoZSBzdGFydCB0aW1lIG9mIGEgcmFjZSBhbmQgZGlzdHJpYnV0aW5nIHdpbm5pbmdzIG1lcmVseSBmaXZlIG1pbnV0ZXMgYWZ0ZXIgdGhlIG9mZmljaWFsIHJlc3VsdHMgYXJlIGFubm91bmNlZC4uIApTbyB5b3UgY2FuIGJlIGFsbGllcyB3aXRoIHRoZXNlIHBlb3BsZSwgYW5kIHlvdSBjYW4gbGV0IHRoZWlyIGlkZW9sb2dpZXMgYW5kIGdlbmVzIHNwcmVhZCBpbnRvIHlvdXIgaWRlYWwgc29jaWV0eS4gClNwZWNpZmljIGRldGFpbHMgb2Z0ZW4gb2NjdXIgYXMgc3Bpcml0IGxvdmVkIG9uZXMgc2hhcmUgdGhlaXIgc3RvcmllcywgdGhlaXIgaHVtb3IgYW5kIHRoZWlyIGxvdmUuIApBbnkgc2lnbiBvZiB3cmlua2xpbmcgb3Igc2hyaXZlbGluZyBjYW4gYmUgaGVscGVkIGJ5IHNvYWtpbmcgdGhlIHB1bXBraW4gaW4gd2F0ZXIgb3ZlciBuaWdodC4gCllvdSBjYW4gdHJhY2UgeW91ciBsb2dpYyBiYWNrIG9mICJYIHNpZGUgYWN0aW9ucyB3ZXJlIGEgcmVzcG9uc2UgdG8gWSBzaWRlIGFjdGlvbiBiZWZvcmUgdGhhdCIgaW4gYSBjeWNsaWNhbCBjeWNsZSBnb2luZyBiYWNrIHRvIGJlZm9yZSAxOTQ4LiAKSXMgdGhlaXIgYSBwbGFjZSB0byBidXkgY3VsbGlnYW4gcGFydHMgd2l0aG91dCBoYXZpbmcgdG8gZ28gdGhyb3VnaCB5b3VyIGxvY2FsIC4gSSBnbyBoZXJlIHdoZW5ldmVyIEkgbmVlZCByZXBhaXIgcGFydHMgZm9yIHdhdGVyIC4KSSBmb3VuZCBteSBzdXJnZW9uIHRocm91Z2ggTmFuY3kgTm9vayAob24gc2lkZSBiYXIpLCBhbmQgY29tcGFyZWQgdG8gdGhlIHN1cmdlcnkgSSBoYWQgd2l0aCBteSBndW4gd2hvIHdhcyBub3QgYW4gRW5kbyBzcGVjaWFsaXN0LCBJIGZlbHQgaGVhcmQsIGxlZ2l0aW1pemVkLCBhbmQgaGVscGVkLiBQbGVhc2UgbGV0IG1lIGtub3cgaWYgSSBjYW4gaGVscCBwb2ludCB5b3UgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbi4gTXkgUE1zIGFyZSBvcGVuLgpJIGdvIHRoZSBsaWJyYXJ5IG9uY2UgYSB3ZWVrLiBJIHZvbHVudGVlci4gSSdtIGNvbnN0YW50bHkgcmVhZGluZyBuZXcgYm9va3MuIApMYSBydWUgTG9uIGV0IHBsdXMgZW5jb3JlIGxhIHJ1ZSBNeXJoYSBzb250IGRlcyBhcnRyZXMgY2VudHJhbGVzIGRhbnMgbGEgdmllIGR1IGN1ciBkZSBsYSBHb3V0dGUgZCdPci4gRGFucyBsZSBxdWFydGllciwgbGEgcnVlIE15cmhhIGVzdCBzYW5zIGNvbnRlc3RlIGxhIHJ1ZSBxdWkgY29tcHRlIGxlIHBsdXMgZGUgY29tbWVyY2VzIGRlIHByb3hpbWl0LCB2cml0YWJsZW1lbnQgZGVzdGlucyBhdXggaGFiaXRhbnRzLiAKVGhlIHBhaXIgd3Jlc3RsZWQgZm9yIGEgc2hvcnQgdGltZSBiZWZvcmUgYmVpbmcgc2VwYXJhdGVkIGJ5IGJhciBzdGFmZi4gVGhlIHZpY3RpbSB3YXMgbGVmdCB3aXRoIGEgMTVjbSBsb25nLCAzY20gZGVlcCBjdXQgdG8gaGlzIG5lY2sgd2hpY2ggcmVxdWlyZWQgc3BlY2lhbGlzdCBzdXJnZXJ5LiBCbGVpbXV0aCByZWNlaXZlZCBhIGRlZXAgY3V0IHRvIGhpcyBoYW5kIGluIHRoZSBkaXNwdXRlIGFuZGF0dGVuZGVkU2hlbGxoYXJib3VyIEhvc3BpdGFsIGxhdGVyIHRoYXQgbmlnaHQgZm9yIHRyZWF0bWVudC4gSGUgdG9vIHJlcXVpcmVkIHNwZWNpYWxpc3Qgc3VyZ2VyeSwgd2hpY2ggb2NjdXJyZWQgb24gTWFyY2ggOC4gCkZpbmFuY2UgTWluaXN0cnkgdmV0ZXJhbiBIYXJ1aGlrbyBLdXJvZGEsIHdobyByZXBsYWNlZCBTaGlyYWthd2EgYXMgY2VudHJhbCBiYW5rIGNoaWVmLCBzdXJwcmlzZWQgbWFueSBpbiBKYXBhbiBhbmQgZWxzZXdoZXJlIGJ5IGFubm91bmNpbmcgcGxhbnMgaW4gQXByaWwgdG8gZXhwYW5kIHRoZSBCT0ogYXNzZXQgcHVyY2hhc2VzIHNvIGFzIHRvIGRvdWJsZSB0aGUgbW9uZXRhcnkgYmFzZSB0aGUgYW1vdW50IG9mIGNhc2ggaW4gY2lyY3VsYXRpb24gcGx1cyBiYW5rIHJlc2VydmVzIHRvIGhpdCB0aGF0IDIlIHRhcmdldC4gS3Vyb2RhIGFsc28gZGVjbGFyZWQgdGhhdCwgaW5zdGVhZCBvZiBjb25kdWN0aW5nIG1hcmtldCBvcGVyYXRpb25zIGJhc2VkIG9uIGludGVyZXN0IHJhdGUgdGFyZ2V0cywgdGhlIHByaWNlIG9yIGluZmxhdGlvbiB0YXJnZXQgd291bGQgZGV0ZXJtaW5lIEJPSiBwb2xpY3kuIEt1cm9kYSBoYXMgYmVlbiBhIGxvbmcgc3RhbmRpbmcgY3JpdGljIG9mIHdoYXQgaGUgYmVsaWV2ZXMgd2VyZSB0aW1pZCBCT0ogbW9uZXRhcnkgcG9saWNpZXMsIGFuZCB3aGlsZSB0aGUgZ2VuZXJhbCBkaXJlY3Rpb24gaGUgd2FudGVkIHRvIHRha2UgdGhlIEJPSiB3YXMgY2xlYXIgYmVmb3JlIGhlIHdhcyBhcHBvaW50ZWQsIG9ic2VydmVycyB3ZXJlIG5ldmVydGhlbGVzcyBhIGJpdCBzdXJwcmlzZWQgYnkganVzdCBob3cgYWdncmVzc2l2ZSBhbiBlYXNpbmcgc3RhbmNlIGhlIGhhcyBwcm9tb3RlZC4KTWFuaGF0dGFuIGRlcm1hdG9sb2dpc3QgUGF1bCBGcmFuayBzYXlzIHRoYXQgZXZlbiBmaWxsZXIgdGhhdCBpbml0aWFsbHkgbG9va3MgZ29vZCBjYW4gc2hpZnQgcG9zaXRpb24uICJFc3BlY2lhbGx5IGFyb3VuZCB0aGUgZXllcywgaW5qZWN0YWJsZXMgY2FuIHJpc2UgdG8gdGhlIHN1cmZhY2UgYW5kIGxvb2sgYnVtcHkgb3IgZ2V0IGEgYmx1aXNoIGNhc3QsJycgaGUgc2F5cy4gIkV2ZXJ5IGRheSBub3csIEkgYW0gYWRqdXN0aW5nIGRvd24uJycKSSBwdWxsIHVwIGluIGZyb250IG9mIHRoZSBob3VzZSBhbmQgb2YgY291cnNlIHRoZSB3aG9sZSB0aGluZyBpcyBib2FyZGVkIHVwLiAKUGxheWluZyBqdXN0IHRoZSBpbmRleCBmaW5nZXIgaXMgYSBCLiAKVmlydHVhbGx5IGV2ZXJ5IHJldGlyZWQgcGVyc29uIEkndmUgdGFsa2VkIHRvIG1pc3NlcyBhdCBsZWFzdCBzb21lIGFzcGVjdCBvZiB3b3JrLiAKUGx1cyB5b3UgY2FuIGdldCBzdXBlcmZseSBhZHZpY2Ugb24gaG93IHRvIGJlIGEgcGltcCBsaWtlOgpUZW5jZW50IGlzIG9uZSBvZiB0aGUgKGlmIG5vdCBUSEUpIGxhcmdlc3QgY29uZ2xvbWVyYXRlIGluIHRoZSB3b3JsZCwgZ2FtZXMsIHNvY2lhbCBtZWRpYSwgZGlnaXRhbCBtZWRpYSwgdGhleSBkbyBpdCBhbGwuIFRoZXkgbWlnaHQgYXMgd2VsbCBiZSBhIHN0YXRlIG93bmVkIGNvbXBhbnkgd2l0aCBhIGZhY2FkZSBvZiBhIHByaXZhdGUgZW50ZXJwcmlzZSwgYnV0IG1ha2Ugbm8gbWlzdGFrZSwgdGhleSBnZXQgdGhlaXIgbWFyY2hpbmcgb3JkZXIgZnJvbSB0aGUgY2hpbmVzZSBnb3Zlcm5tZW50LiAKSnVzdCBsaWtlIGFueSBzaGl0dHkgam9iLCBqdXN0IGIvYyB5b3Uga25vdyB0aGUgc2hpdHR5IHRoaW5ncyB0aGF0IGdvIG9uIGRvZXNuIG1lYW4gdGhhdCB3ZSBzaG91bGRuIHB1c2ggZm9yIGNoYW5nZS4gClRoYXQgd2FzIGFsc28gYSBkaXJlY3QgcXVvdGUuIFBlb3BsZSBoZXJlIGFyZSBhbHdheXMgY29tcGxhaW5pbmcgYW5kIHdoaW5pbmcgYWJvdXQgdXMgSm9yZGFuaWFucyBub3QgaGF2aW5nIGFueSByaWdodHMsIHRoZSB0cnV0aCBpcyB3ZSBkby4gSXQganVzdCB0aGF0IHBlb3BsZSBoZXJlIG5ldmVyIHRyeSB0byB0YWtlIHRoZWlyIHJpZ2h0cyBhbmQgcHJlZmVyIHRvIGluc3RlYWQgcGxheSB0aGUgcm9sZSBvZiB0aGUgdmljdGltLCBoaWRpbmcgYmVoaW5kIHRoZSB0eXBpY2FsIEpvcmRhbmlhbiAiYWhoaCB3aGF0IGdvbm5hIGhhcHBlbj8gTm90aGluZyB3aWxsIGhhcHBlbiwgY29ycnVwdGlvbiBibGFoIGJsYWggYmxhaCIuIApBIHZlcnkgYnJpZWYgYmlvZ3JhcGh5OgpBbSBFbmRlIGVycmVpY2h0IFRhcnphbiBuaWNodCBudXIgSmFuZXMgSGVyei4gCkkgYnVpbHQgYSB0b2xlcmFuY2UgYW5kIGtlcHQgaW5jcmVhc2luZyBteSBpbnRha2UgdG8gZ2V0IHRoYXQgIm1lbnRhbCBjbGFyaXR5IiBhbmQgZXZlbnR1YWxseSBnb3QgdGhlIHdvcnN0IG1pZ3JhaW5lIEkgaGFkIGluIGRlY2FkZXMuIApUaGVyZSB3YXMgc2VyaW91cyByb3Qgb3IgYSBtYWpvciBjcmlzaXMgaW4gdGhlIHBvbGljZSwgdGhlbiBJIG5vdCBzdXJlIGlmIHdlIHdvdWxkIGV2ZW4ga25vdyBhYm91dCBpdCwgYmVjYXVzZSBpdCB3b3VsZCBiZSBlbmRlbWljLCBhbmQgdGhlcmUgd291bGQgYmUgYSBjb2RlIG9mIHNpbGVuY2UgYW5kIGl0IHdvdWxkIGNvbnRpbnVlLiAKRCBMYXNjYXV4IGV0IHNlcyBxdWl2YWxlbnRzIG9udCBwdSB0cmUgY29udGVtcG9yYWlucyBkZSBsIGNhciBzaSBub3VzIGNyb3lvbnMgc2F2b2lyIHBhciBQbGF0b24gcXVhbmQgZWxsZSBkaXNwYXJ1dCBub3VzIGlnbm9yb25zIGJpZW4gcXVhbmQgZWxsZSBuYXF1aXQuIFN1ciB1bmUgdGVycmUgIHBlaW5lIHBldXBsZSBldCB2aWVyZ2UsIGwgdGFpdCBwYXIgbmNlc3NpdCB2aXRhbGUgY2FsIHN1ciBsZXMgbmVyZ2llcywgY3ljbGVzIGV0IHJ5dGhtZXMgZGUgbGEgbmF0dXJlLCBhbm5vbmNzIHZvaXJlIGNvbW1lbnRzIHBhciBsIGRlcyBhc3RyZXMuIElsIHZpdmFpdCB1biBpY2kgbWFpbnRlbmFudCBwZXJtYW5lbnQgZXQgc2FjciBxdWkgYXV0b3Jpc2FpdCBsIGRlcyByaXRlcyBldCBkZSBsYSBtYWdpZSA7IHVuZSBlZmZpY2llbmNlIHF1aSBhIHNhbnMgZG91dGUgcGVybWlzIGxhIGRvbWVzdGljYXRpb24gZGVzIGFuaW1hdXguIApBIGRyYXcgaGFzIGV2ZW4gbGVzcyBlcXVpdHkgdGhhbiB0cHRrLiBJZiBoZSBiYWQgZW5vdWdoIHRvIGNoZWNrIGNhbGwgdHdpY2Ugd2l0aCBhIGRyYXcgYW5kIHVuZGVycyBvb3AgaGUgcHJvYmFibHkgcGxheSBhIHJpdmVyZWQgZmx1c2ggcG9vcmx5LiBIZSB0YWtlIGEgcmVhbGx5IHdlYWsgb2J2aW91cyBsaW5lIGxpa2Ugc3VkZGVubHkgYmV0dGluZyBvdXQgaHVnZSBvbiByaXZlciBoZWFydCBvciBjL3IgYWxsIGluLiAKUnVuLiAKQSBndXkgaW4gbXkgY2l0eSBKYW1lcyBUaGllIGF0dGVtcHRlZCB0aGlzIGxhc3QgeWVhciBpbiBDYXJkaWZmLCBXYWxlcy4gSGUgc2V0IHVwIGEgbWlsZSByYWNlIGV2ZW50IGJ1dCB1bmZvcnR1bmF0ZWx5IGhpcyB0cmFpbmluZyBkaWRuIGdvIHdlbGwgYW5kIGhlIHdhc24gYWJsZSB0byBtYWtlIHRoZSBhdHRlbXB0IGJ1dCBkb3plbnMgb2YgcGVvcGxlIGdvdCB0aGVpciBQQnMgdGhhdCBuaWdodC4gSXQgd2FzIGFuIGFtYXppbmcgZXZlbnQhIEkgYWxzbyBjb21wZXRlZCBpbiBhIG9wZW4gZXZlbnQgYW5kIGl0IHdhcyBhd2Vzb21lLiAKQW5kIHRoZW4gSSBzYWlkLCBJIHN1Y2sgZGljayB0b28sIGFuZCBoZSdzIGxpa2Ugb2theSwiIEplc3Mgc2F5cy4gIkkgcmVtZW1iZXIgdGhlIGxvb2sgb24gaGlzIGZhY2UsIGhlIHdhcyBjb21wbGV0ZWx5IHVuZmF6ZWQuIEkganVzdCBrbmV3IHRoYXQgdGhpcyB3YXMgZ29ubmEgZ28gZmluZS4iLiAKTm93IEJhcmJpZSBoZXJzZWxmIGlzIHRocmVhdGVuZWQgYW5kIGhlciBkZW1pc2UgbWF5IHNpZ25hbCB0aGUgZW5kIG9mIHRoZSBBbWVyaWNhIEVtcGlyZS4gQWNjb3JkaW5nIHRvIGFuIGFydGljbGUgaW4gdGhlIE5ldyBZb3JrIFRpbWVzLCBCYXJiaWUgaXMgZmFjaW5nLCBmb3IgdGhlIGZpcnN0IHRpbWUsIHNvbWUgcmVhbCBjb21wZXRpdGlvbi4gCklmIHlvdSBoYWQgd2FpdGVkIHRvIGV4ZXJjaXNlIHlvdXIgb3B0aW9uLCB5b3Ugc3RpbGwgd291bGQgaGF2ZSB0aGUgc3RvY2sgQUJDIGF0ICQxMDAwMDAuIApNaWNyb2dhbWluZywgQ3J5cHRvbG9naWMsIFZlZ2FzVGVjaG5vbG9neSBjYXNpbm9zIG9mZmVyIHRoZWlyIHBsYXllcnMgdG8gcGFydGljaXBhdGUgaW4gZGlmZmVyZW50IHRvdXJuYW1lbnRzLiBUaGUgc2xvdCB0b3VybmFtZW50cyBhcmUgdGhlIG1vc3QgcG9wdWxhciBhbW9uZyB0aGUgb25saW5lIHRvdXJuYW1lbnRzIGZvbGxvd2VkIGJ5IGJsYWNramFjaywgcm91bGV0dGUgYW5kIHZhcmlvdXMgcG9rZXIgZ2FtZXMgZnJvbSB2aWRlbyBwb2tlciB0byAibGV0IGl0IHJpZGUiIHRvcCBvZmYgdGhlIGxpc3QuLiAKKGkgd2FzIHZlcnkgY29uc2lkZXJhdGUgYWJvdXQgZmx1aWRzIG4gc3R1ZmYgYmFjayB0aGVuIHNvIHRoZXJlIGhhZG4gYmVlbiBtdWNoIGV2aWRlbmNlKS4gCkhhdHRlIGljaCBkb2NoIGF1ZiAwLDUwLzEgZWluZW4gU3R1bmRlbmdld2lubiB2b24gZmFzdCAxMCwgc28gc2luZCBlcyBqZXR6dCBiZWkgMS8yIG51ciBub2NoIGtuYXBwIDggcHJvIFN0dW5kZS4gCkhvd2V2ZXIsIHlvdXIgc3VibWlzc2lvbiBoYXMgYmVlbiByZW1vdmVkIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbihzKTpPdXQgb2YgRGF0ZTogL3IvcG9saXRpY3MgaXMgZm9yIGN1cnJlbnQgVVMgcG9saXRpY2FsIG5ld3MgYW5kIGluZm9ybWF0aW9uIHRoYXQgaGFzIGJlZW4gcHVibGlzaGVkIHdpdGhpbiB0aGUgdGhlIGxhc3QgY2FsZW5kYXIgbW9udGguIEZvciBleGFtcGxlLCBpZiB0aGUgZGF0ZSBpcyBKYW51YXJ5IDI5IGFuZCB0aGUgYXJ0aWNsZSBzdWJtaXR0ZWQgd2FzIHdyaXR0ZW4gYmVmb3JlIERlY2VtYmVyIDI5LCB0aGVuIHRoZSBzdWJtaXNzaW9uIGlzIG91dCBvZiBkYXRlLklmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMgYWJvdXQgdGhpcyByZW1vdmFsLCBwbGVhc2UgZmVlbCBmcmVlIHRvW01dICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29IaSBNU0g2LiAKQXMgc29tZW9uZSB0aGF0IGdyZXcgdXAgcG9vciBpbiB0aGUgVUssIEkgY2FuIGNvbmZpcm0gd2UgZG9uIGhhdmUgdG8gd29ycnkgYWJvdXQgdGhlIGJhc2ljcy4gSGVhbHRoY2FyZSBpcyBmcmVlIGF0IHBvaW50IG9mIGRlbGl2ZXJ5IGZvciBhbGwgY2l0aXplbnMgYW5kIHByZXR0eSBtdWNoIGV2ZXJ5b25lIGdldHMgYSBzdGF0ZSBwZW5zaW9uLiBUaGUgc3RhdGUgcGVuc2lvbiBpc24gbXVjaCBidXQgaXRzIGVub3VnaCB0byBsaXZlIG9uLiAKU28gd2h5IGhhdmVuIHdlIHJlYWxseSBoZWFyZCBhYm91dCB0aGUgZGVtcyBnb2luZyB0byB0aGVpciBiYWNrZXJzLiBUaGUgZGVtcyBhcmUgc21hcnQuIApUaGlzIHdhcyBhbG9uZyB0aGUgc2FtZSBsaW5lcyBhcyBteSB0aG91Z2h0IHByb2Nlc3MgYXQgdGhlIHRpbWUuIApFU0ggKG1pbGRseSkuIFlvdSBzaG91bGQgaGF2ZSAob3IgaWYgeW91ciBkZWNpc2lvbiBpcyBmaW5hbCB0aGVuIHNob3VsZCBoYXZlIGhhZCkgYSBjb252ZXJzYXRpb24gd2l0aCBoZXIgYWJvdXQgaXQuIFRlbGwgaGVyIHRoYXQgeW91IHVuZGVyc3RhbmQgc2hlIGhhcyBhIGxvdCBvbiBoZXIgcGxhdGUganVzdCBub3cgYW5kIHRoYXQgaWYgc2hlIGNhbiBjb21taXQgdG8gYmVpbmcgaW4gYSB3ZWRkaW5nIHBhcnR5IHRoZW4geW91IHRvdGFsbHkgdW5kZXJzdGFuZCwgYnV0IGlmIHNoZSBzdGlsbCB3YW50cyB0byBiZSBhIGJyaWRlc21haWQgdGhlbiBzaGUgbmVlZHMgdG8gY29tbXVuaWNhdGUgYmV0dGVyIGFib3V0IHRoaW5ncyBhbmQgbWFrZSBhbiBlZmZvcnQuIApCdXQgc3RlcCBvdXQgb2YgdGhhdCBzaG93ZXIsIGFuZCB0aGUgbm8gcG9vIGxlYXJuaW5nIGN1cnZlIGp1c3QgZ2V0cyBzdGVlcGVyLiBJbiB0aGUgYmVnaW5uaW5nIHN0YWdlcyBvZiBhIG5vIHBvbyBleHBlcmltZW50LCBtb3N0IHBlb3BsZSBzZWVtIHRvIGdvIHRocm91Z2ggYSB0d28gIHRvIHNpeCB3ZWVrIHBlcmlvZCB3aGVuIHRoZWlyIGhhaXIgbG9va3MgbGlrZSwgd2VsbCwgcG9vLgpJY2gga29tbWUgYXVzIGRlciBOaGUgZGVyIElsbGVyLCB1bmQgZGEgaGFiZW4gZGFzIGF1Y2ggdmllbGUgT3J0ZSBpbSBOYW1lbiwgdW5kIGF1ZiBsdGVyZW4gU2NoaWxkZXJuIHN0ZWh0IGRhcyBlaWdlbnRsaWNoIGltbWVyIGFscyBKbGxlci4gU2llaHQgZmluZGUgaWNoIGF1Y2ggYmVzc2VyIHVuZCBsZXNiYXJlciBhdXMuClRoZSBmZXN0aXZhbCBhbHNvIGluY2x1ZGVzIGEgdmFyaWV0eSBvZiBhcnQgaW5zdGFsbGF0aW9ucywgYSBzcGVha2VycyBwYW5lbCBvbiBpbmNsdXNpdml0eSwgYSB0YWxrIG9uIHlhcm4gYm9tYmluZyBhcyBwb2xpdGljYWwgYW5kIHNvY2lhbCBhY3RpdmlzbSwgdGhlYXRyZSBwZXJmb3JtYW5jZXMsIGFuZCBwb2V0cnkgYW5kIHdyaXRpbmcgd29ya3Nob3BzLiAKSSB1c3VhbGx5IGhhdmUgc2FpZCAiVGhpcyBpcyBpdCIgdG8gcHJlY2VkZSBzb21lIG9mIHRoZSBtb3JlIGltcG9ydGFudCByZWxlYXNlcyBpbiBoZWF2eSBtZXRhbCBoaXN0b3J5IGFuZCB0aGlzIGlzIGl0IGlmIHdlIGFyZSB0YWtpbmcgYWJvdXQgd2hlbiBleHRyZW1lIG1ldGFsIHJlYWxseSBzdGFydGVkIHRvIGdldCBnb2luZy4gU3VyZSB0aGUgYmFuZCBhbHNvIGhhZCBhbiBleHBsb3NpdmUgc2VyaWVzIG9mIGRlbW9zLCBhbGwgd2hpY2ggbm93IGxpdmUgaW4gdGhlIGljb25pYyBoaXN0b3J5IG9mIHVuZGVyZ3JvdW5kIG1ldGFsIGJ1dCBJIGJlbGlldmUgaXQgaXMgd2FzIHRoaXMgRVAgd2hlbiB0aGUgYmFuZCBlbmVyZ3kgYW5kIHRoZWlyIGFiaWxpdHkgdG8gbWFrZSBtdXNpYyB3aGljaCBkaWRuIHNvdW5kIGxpa2UgZ2FyYmFnZSBhbGlnbmVkIGZvciBhIGRpc2hhcm1vbmlvdXMgdW5pb24uIElmIHlvdSB3YW50ZWQgdG8gdHJhdmVsIGJhY2sgdG8gYSB0aW1lIHdoZW4gYmFuZHMgd2VyZSB3aWVsZGluZyBnZW5yZXMgYXJvdW5kIGxpa2UgY2FwdHVyZWQgbGlnaHRpbmcgdGhhdCB3YXMgcHVsbGVkIGZyb20gdGhlIHNreSwgdGhpcyBpcyBpdC4KSSBoYXRlIHRvIGJlIHRoYXQgZ3V5LCBidXQgZmFuY3kgd29yZHMgZG9uIHB1dCB5b3UgaW4gYSBjYWxvcmljIGRlZmljaXQuIFRoZXkgYWxzbyBkb24gZ2V0IHlvdSBvdXQgb24gdGhlIHRyYWNrL3BpdGNoL3doYXRldmVyLiAKSSB3YWxrZWQgdXAgYSBjb3VwbGUgZmxpZ2h0cyBvZiBzdGFpcnMsIHRvIHRhbGtlZCB0byBhIG1hbmFnZXIgaW4gdGhlIHNhbWUgaG9zcGl0YWwgaW4gYW5vdGhlciBkZXBhcnRtZW50IGFuZCBzYWlkIEkgd2lsbCBjb21lIHdvcmsgZm9yIHlvdSB3aGVuIEkgZ2V0IGJhY2sgZnJvbSBteSA2IHdlZWsgdmFjYXRpb24gaWYgeW91IHdhbnQgbWUgdG8uIApHbyB0byBwYWdlIDEwIGZvciBpbnN0cnVjdGlvbnMgb24gaG93IHRvIGJ1aWxkIHBhcnQgWC4gCkl0YWx5IHdlcmUgc2F2ZWQgYnkgZXh0cmVtZWx5IGZvcnR1bmF0ZSByZWZlcmVlaW5nIGNpcmN1bXN0YW5jZXMgdG8gc2F2ZSBhIGRyYXcgYWdhaW5zdCBOWi4uIApZb3UgYXJlIGFsbG93ZWQgdG8gaGF2ZSBvdGhlciBjb25uZWN0aW9ucywgYnV0IGlmIHlvdSBkbyB5b3UgTkVFRCBUTyBCRSBDTEVBUiBvbiB3aGF0IHRoZSBydWxlcyBvZiBlbmdhZ2VtZW50IGFyZS4gClRoaXMgbW9ybmluZyBJIHdhcyBwdXNoaW5nIG15IHNvbiBpbiBoaXMgcHJhbSB0byBteSBsb2NhbCBzaG9wcyBhbmQgYSB3b21hbiBzdG9wcGVkIG1lIHRvIGNvbXBsaW1lbnQgbXkgc29ucyBleWVzLiBUaGlzIGhhcHBlbnMgYWxsIHRoZSB0aW1lLiAKTmV2ZXIgYWdhaW4uLiAKMSwwMDAsMDAwIGVtYWlsIGFkZHJlc3NlcyB3YXMgc2VsZWN0ZWQgYW5kIHBpY2tlZCBmcm9tIHRoZSBJbnRlcm5ldCwgc28gdGhvc2UgZW1haWwgYWRkcmVzc2VzIG9mIFBhcnRpY2lwYW50cyB0aGF0IHdhcyBzZWxlY3RlZCBhbmQgcGlja2VkIGZyb20gdGhlIGludGVybmV0IHdlcmUgYWdhaW4gc2VsZWN0ZWQgdGhyb3VnaCBhIGNvbXB1dGVyIGJhbGxvdCBzeXN0ZW0gZHJhd24gZnJvbSBhbW9uZyB0aGUgMSwwMDAsMDAwIGVtYWlsIGFkZHJlc3NlcyBvZiBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIGZyb20gYWxsIHBhcnQgb2YgdGhlIHdvcmxkLCB0aGlzIGlzIGNhbGxlZCB0aGUgY29tcHV0ZXIgYmFsbG90LiBBbmQgNyBlbWFpbCBhZGRyZXNzZXMgd2FzIGZpbmFsbHkgcGlja2VkIG91dCBmcm9tIGFtb25nIHRoZSB0b3RhbCAxLDAwMCwwMDAgZW1haWwgYWRkcmVzc2VzLCBhbmQgb3V0IG9mIHRob3NlIDcgZW1haWwgYWRkcmVzc2VzLCB5b3VyIGVtYWlsIGFkZHJlc3MgaXMgb25lIG9mIHRoZSB0aG9zZSB0aGF0IHdvbiBvbiB0aGUgYmFsbG90WW91IGhhdmUgdG8gbm90ZSB0aGF0IHRoaXMgcHJvZ3JhbSBpcyBiZWluZyBzcG9uc3VyZWQgYnkgdGhlIEZJRkEgU1VQUE9SVCBBRlJJQ0FOIFRFQU0sIHRvIGNyZWF0IGF3YXJlbmVzcyBmb3IgdGhlIGNvbWluZyAyMDEwIFdvcmxkIEN1cCwgd2hpY2ggaXMgdG8gYmUgaG9zdCBieSBTb3V0aCBBZnJpY2FXZSBhcmUgcGxlYXNlZCB0byBpbmZvcm0geW91IG9mIHRoZSBhbm5vdW5jZW1lbnQgbWFkZSBmb3Igd2lubmVycyBvZiB0aGUgR2xvYmFsIG1lZ2EgTE9UVEVSWSBJTlRFUk5BVElPTkFMIFBST0dSQU1TLCBhcyBwYXJ0IG9mIG91ciBwcm9tb3Rpb25hbCBkcmF3c1BhcnRpY2lwYW50cyB3ZXJlIHNlbGVjdGVkIHRocm91Z2ggYSBjb21wdXRlciBiYWxsb3Qgc3lzdGVtIGRyYXduIGZyb20gMiw1MDAsMDAwIGVtYWlsIGFkZHJlc3NlcyBvZiBpbmRpdmlkdWFscyBhbmQgY29tcGFuaWVzIGZyb20gYWxsIHBhcnQgb2YgdGhlIHdvcmxkIGFzIHBhcnQgb2Ygb3VyIGVsZWN0cm9uaWNidXNpbmVzcyBQcm9tb3Rpb25zIFByb2dyYW1Ob3RlIHRoYXQgeW91ciBlbWFpbCBhZGRyZXNzIHF1YWxpZmllZCBmb3IgdGhlIGRyYXcsIGFzIGEgcmVzdWx0IG9mIHlvdXIgdmlzaXRpbmcgdmFyaW91cyB3ZWJzaXRlcyB3ZSBhcmUgcnVubmluZyB0aGUgZSBidXNpbmVzcyBwcm9tb3Rpb25zIGZvci4gClN0ZXZlbnN0ZXJrICAxMSBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkxhbGliZXJ0LCBhIHByb2Zlc3Npb25hbCBoaWdoIHN0YWtlcyBwb2tlciBwbGF5ZXIsIGhhcyB0YWtlbiBvdGhlciBiaWcgZ2FtYmxlcy4gClRoaW5ncyB3aWxsIGNvbGxhcHNlIGxpa2UgYSBob3VzZSBvZiBjYXJkcyBpZiB0aGUgc3Vic2lkaWVzIGFyZSByZW1vdmVkIHRvbW9ycm93LiAKU28gbWF5YmUgd2UgYXJlIGp1c3QgY29taW5nIGZyb20gdHdvIGVudGlyZWx5IGRpZmZlcmVudCBtaW5kc2V0cywgY29uc2lkZXJpbmcgaXQgcGFpbmVkIG15c2VsZiB0byBraWxsIGhpbSBmb3IgMTAwJSBhbmQgdGhlIGZhY3QgdGhhdCB5b3Ugb3IgeW91ciBmcmllbmQgY2hvc2UgdGhhdCBvbiB5b3VyIGZpcnN0IHBsYXl0aHJvdWdoIGJhZmZsZXMgbWUuLiAKU2kgbGVzIHBsYW50ZXMgb250IGRlcyB2ZXJ0dXMgbWRpY2luYWxlcywgYyBxdSBzb250IGVsbGVzIG1tZXMgZGVzIGRvbnMgZHUgY2llbCBldCBsZXMgcmFjaW5lcyBkZSBsYSB2aWUuIApCYWNrIHRvIGtpc3NpbmcgaW4gZnJvbnQgb2YgYW4gYXVkaWVuY2UsIGZvciBtZSwgaXQgcHJldHR5IG11Y2ggYW4gaW50aW1hY3kgdGhpbmcuIEkgZG9uIHRoaW5rIEkgZXZlciBiZWVuIHdpdGggYW55b25lIHdobyB3YW50ZWQgdG8gZmxhZ3JhbnRseSBraXNzIHdpdGggYSBidW5jaCBvZiBwZW9wbGUgd2F0Y2hpbmcsIHF1aXRlIHRoZSBvcHBvc2l0ZS4gClRoaXMgZGF5IHdlIG1vdW50ZWQgNiBTd2l2ZWxzIGF0IHRoZSBGb3J0LCB3aGljaCB3YXMgbm93IG5lYXJseSBmaW5pc2hlZC4gCllvdSdyZSB0aGUgb25lIHRyaWdnZXJlZCBieSBzb21lIGR1ZGUncyBTb0Ega2V5Y2hhaW4uIFRoYXQsIHRvIG1lLCBzb3VuZHMgbGlrZSB0aGUgbG93ZXN0IGNvbW1vbiBkZW5vbWluYXRvciBvZiBidXR0aHVydC4gCkZvciBtZSwgaXQgd291bGQgYmUgc29tZXRoaW5nIHJlbGF0ZWQgdG8gc29mdHdhcmUgZW5naW5lZWluZy9jb21wdXRlciBzY2llbmNlLiBJIGZvdW5kIGEgcHJvZ3JhbSB0aGF0IEkgbGlrZWQgYXQgVWlPLiBVaUIgaGFzIGEgc29mdHdhcmUgZW5naW5lZXJpbmcgcHJvZ3JhbSBpbiBFbmdsaXNoLCBidXQgYXBwYXJlbnRseSBpdCBub3Qgb3BlbiB0byBub24gTm9yZGljIHN0dWRlbnRzLiAKSSBnbGFkIHRoZXkgYSBzb2x1dGlvbiB0aGF0IHdvcmtlZCBmb3IgeW91ciBleCwgYnV0IGl0IHNlZW1zIHRvIGJlIGEgcmFyaXR5LCBldmVuIGluIHRoZSBwZW9wbGUgd2hvIHdvdWxkIGxpa2UgdG8gdHJ5LiBJIGxpdmUgaW4gYSBsZWZ0eSBjb21tdW5pdHkgd2hlcmUgaWRlYXMgc3VjaCBhcyB0aGVzZSBhcmUgcG9wdWxhci4gSSBoYXZlIGhhZCBob21lbGVzcyB3b21lbiBjb21lIGluIHRvIGRvIGxhdW5kcnkgd2l0aCBiYWdzIGZ1bGwgb2Ygc29pbGVkIHJldXNhYmxlIHJhZ3MgdGhleSBoYXZlIGJlZW4gY2FycnlpbmcgYXJvdW5kIGZvciB3ZWVrcywgb25seSB0byB0aHJvdyB0aGVtIGF3YXkgcmF0aGVyIHRoYW4gd2FzaCB0aGVtIHdoZW4gZ2l2ZW4gdGhlIG9wcG9ydHVuaXR5IGJlY2F1c2UgdGhlIHRhc2sgaXMgdG9vIG92ZXJ3aGVsbWluZy4uIApJdCBhbHNvIGhhcyB2aWRlbywgdGhyb3VnaCBGaXJlIFRWIGFuZCBUd2l0Y2gsIHRoZSBzdHJlYW1pbmcgc2VydmljZSBzaW1pbGFyIHRvIFlvdVR1YmUuIApFYWNoIGluZGl2aWR1YWwgbW9kdWxlIGZvY3VzZXMgb24gYmVzdCBwcmFjdGljZXMgYW5kIGRlcGxveW1lbnQgZ3VpZGFuY2UgZm9yIGRlcGxveWluZyBidWxsZXQgcHJvb2YsIHNlY3VyZSBjbG91ZCBzeXN0ZW1zLiAKWW91IGNvdWxkIHRoaW5rIG9mIHRoYXQgY29zdCAgIGxpa2UgdGhlIGNvc3Qgb2YgY2xlYW5pbmcgdXAgdGhlIFBpbmV3b29kIGR1bXAgICBhcyB0aGUgcHJpY2Ugd2UgaGF2ZSB0byBwYXkgZm9yIGxvbmcgZ29uZSBzdGF0ZSBsZWFkZXJzIHdobyB3ZXJlIGxvb2tpbmcgb3V0IGZvciB0aGVpciBmcmllbmRzIHJhdGhlciB0aGFuIHRoZSBuYXR1cmFsIGVudmlyb25tZW50IHRoYXQgdGhleSB3ZXJlIGVudHJ1c3RlZCB0byBwcm90ZWN0LiBJdCdzIHRoZSBwcmljZSB3ZSBwYXkgZm9yIGxlYWRlcnMgd2hvIGRpZG4ndCByZWNvZ25pemUgdGhhdCBwcm90ZWN0aW5nIHRoZSBlbnZpcm9ubWVudCBpc24ndCBqdXN0IGFib3V0IGh1Z2dpbmcgdHJlZXMgYW5kIHNhZGRsaW5nIGJ1c2luZXNzZXMgd2l0aCByZWd1bGF0aW9ucyB0aGV5IGZpbmQgYnVyZGVuc29tZS4gRXZlbnR1YWxseSwgYWxsb3dpbmcgbGFuZGZpbGxzIGluIHBsYWNlcyB0aGV5IGRvbid0IGJlbG9uZywgYW5kIGludml0aW5nIGluIHRoZSB3YXN0ZSBvZiB0aGUgd29ybGQsIGFuZCBhbGxvd2luZyBwZW9wbGUgdG8gaGFybSB0aGUgZW52aXJvbm1lbnQgd2lsbCBjcmVhdGUgcHJvYmxlbXMgdGhhdCBhcmUgc28gc2lnbmlmaWNhbnQgdGhhdCBzb21lb25lIGhhcyB0byBjbGVhbiB1cCB0aGUgbWVzcywgdG8gcHJvdGVjdCBvdXIgaGVhbHRoIGFuZCBvdXIgYXR0cmFjdGl2ZW5lc3MgdG8gaW52ZXN0b3JzLgpEdSBsaWVic3QgUG9rZXIgdW5kIHdpbGxzdCBkaWUgRWluc3R6ZSBlaW4gd2VuaWcgZXJoaGVuPyBWZXJzdWNoIGVzIG1hbCBtaXQgZGVyIGhlaWVuIFZlcnNpb24gZnIgRXJ3YWNoc2VuZSwgYmVpIGRlciBkdSBidWNoc3RibGljaCBkZWluIGxldHp0ZXMgSGVtZCB2ZXJsaWVyZW4ga2FubnN0ICAgdW5kIHZpZWxsZWljaHQgc29nYXIgbm9jaCBtZWhyLiBCZWltIFN0cmlwIFBva2VyIHNldHplbiBkaWUgU3BpZWxlciBkaWUgS2xlaWR1bmdzc3Rja2UgZGllIHNpZSB0cmFnZW4gdW5kIGVuZGVuIG9mdCBpbiBVbnRlcndzY2hlIG9kZXIgZ256bGljaCBuYWNrdC4gClRoZSBzaG93IGlzIHdob2xseSBjZW50ZXJlZCBhcm91bmQgdGhlIGNoYXJhY3RlciBHcmVnb3J5IEhvdXNlLCBhIG1pc2FudGhyb3BpYyBhc3Nob2xlIGRvY3RvciB3aG8gZXZlcnlvbmUgaGFzIHRvIHB1dCB1cCB3aXRoIGJlY2F1c2UgaGUgc28gZGFtbiBnb29kIGF0IGludmVzdGlnYXRpbmcgYW5kIGRpYWdub3NpbmcgcGVvcGxlIHdpdGggc3RyYW5nZSBpbGxuZXNzZXMuIApJdCdzIGxpa2UgYmFza2V0YmFsbDogWW91IHNob290IGEgbGl0dGxlIGJpdCBhbmQgeW91J3JlIG9mZiwgYW5kIHRoZW4geW91IGZpbmQgdGhhdCByaHl0aG0gYW5kIGdvIGZyb20gdGhlcmUuIi4gCkluIG90aGVyIHdvcmRzLCBpdCBlYXN5IGZvciBzb21lb25lIGxpa2UgTWFzdGVyIEtpbXVyYSB0byBzaW1wbHkgc2F5LCAieW91IGp1c3QgbmVlZCB0byBwdXJpZnkgeW91cnNlbGYiLiBJbiB0aGUgV2VzdCwgdGhlIHdheSB0aGF0IFdlc3Rlcm5lciAoaW4gcGFydCBzb21ld2hhdCBpcnJlZ2FyZGxlc3Mgb2Ygb25lIGFjdHVhbCBjdWx0dXJhbCBiYWNrZ3JvdW5kKSBhcHByb2FjaCBzZWxmIHdpbGwgYW5kIHNlbGYgY3VsdGl2YXRpb24gaXMgZGlmZmVyZW50Li4gCkZvciBtb3N0IG9mIHRoZSBvdGhlcnMsIGl0J3MgdGhlIHNhbWUuIApMb25nIHRlcm0gQ2FyZSBEcnVnIERhdGFiYXNlIFN5c3RlbTogRHJ1Z3MgYnkgTkRDIENsYXNzIENvZGUsIERydWcgQ29kZSBhbmQgTmFtZSBNYWpvciBEcnVnIFRoZXJhcGV1dGljIFRoZXJhcGV1dGljIFN1YmNsYXNzIENvZGUgTmFtZSBDb2RlIENsYXNzIENvZGUgMDEwMApJdCBkZWZpbml0ZWx5IGFuIGludGVyZXN0aW5nIHBsYWNlLiBJdCBub3QgYSB0aGluZyB3aGVyZSBJIGNsb3NldGVkLCBleGFjdGx5LiBQZXJzb25hbGx5LCBpdCBmZWVscyBtb3JlIGxpa2UgdGVsbGluZyBwZW9wbGUgd2hvIHdoZXJlIEkgbGl2ZSBteSB0b3duLCBvciB0aGUgbmVhcmJ5IG9uZSB0aGV5IG1pZ2h0IHJlY29nbml6ZSB0aGUgbmFtZSBvZiwgaW5zdGVhZCBvZiBteSBmdWxsIHN0cmVldCBhZGRyZXNzLiAKVG8gUGxheSBhdCB0aGUgTGV2ZWwgdGhhdCBJIGFtIHJlZmVycmluZyB0bzsgWW91IG11c3QgaGF2ZSB0aGUgQWJpbGl0eSB0byBtZW1vcmlzZSBFVkVSWSBTZXF1ZW5jZSBvZiBjYXJkcyBwbGF5ZWQgb24gNyBCb3hlcyBwbHVzIHRoZSBkZWFsZXIncyBoYW5kIGNvbnRpbnVvdXNseTsgaXJyZXNwZWN0aXZlIG9mIHdoYXQgZWxzZSBpcyBnb2luZyBvbiBhdCB0aGUgdGFibGUhIFRvIERvIFRoYXQgZm9yIDM0IGhvdXJzOyBJIHdvdWxkIGJldCB5b3VyIGNvdW50LCB0aGF0IGl0IGlzIFdlbGwgQmV5b25kIFlvdS4KQnV0IEFjb3N0YSBhbmQgRXBzdGVpbidzIGFybWFkYSBvZiBhdHRvcm5leXMgICBIYXJ2YXJkIHByb2Zlc3NvciBBbGFuIERlcnNob3dpdHosIEpheSBMZWZrb3dpdHosIEdlcmFsZCBMZWZjb3VydCwgSmFjayBHb2xkYmVyZ2VyLCBSb3kgQmxhY2ssIEd1eSBMZXdpcyBhbmQgZm9ybWVyIFdoaXRld2F0ZXIgc3BlY2lhbCBwcm9zZWN1dG9yIEtlbm5ldGggU3RhcnIgICByZWFjaGVkIGEgY29uc2Vuc3VzOiBFcHN0ZWluIHdvdWxkIG5ldmVyIHNlcnZlIHRpbWUgaW4gYSBmZWRlcmFsIG9yIHN0YXRlIHByaXNvbi4KVGhlIGJvdHRvbSBsaW5lIGlzIHRoYXQgdGhlIGV2ZXIgZWFybGllciBkZXRlY3Rpb24gb2YgbWFueSBkaXNlYXNlcywgcGFydGljdWxhcmx5IGNhbmNlciwgaXMgbm90IG5lY2Vzc2FyaWx5IGFuIHVuYWxsb3llZCBnb29kLiAKQmlsbCBDaGVuLCBhbiBhcmJpdHJhZ2UgZXhwZXJ0IGF0IG9wdGlvbnMgdHJhZGluZyBmaXJtIFN1c3F1ZWhhbm5hIEludGVybmF0aW9uYWwgR3JvdXAsIGhhcyB3b24gYSBjb3VwbGUgb2YgYmlnIG1vbmV5IHRvdXJuYW1lbnRzIGFuZCBoYXMgYmVlbiBjaXRlZCBpbiBhdCBsZWFzdCBvbmUgYm9vayBmb3IgaGlzICJDaGVuIGZvcm11bGEiIGZvciB3aW5uaW5nIGF0IFRleGFzIEhvbGQgJ0VtLiAKRGlkIGEgY291cGxlIG9mIE0rNSBhbmQgYm9vbSAgIG1vcmUgZ2VhcmVkIHRoZW4gbXkgbWFpbi4uIApET1VNQSwgTXIgSmFtZXMgRG9uYWxkIChKaW0pICAgTXIuIEphbWVzIERvbmFsZCAiSmltIiBEb3VtYSBvZiBJbXBlcmlhbCBTdHJlZXQsIERlbGhpLCBwYXNzZWQgYXdheSBzdWRkZW5seSBhdCB0aGUgTm9yZm9sayBHZW5lcmFsIEhvc3BpdGFsLCBTaW1jb2Ugb24gVHVlc2RheSwgQXByaWwgMTIsIDIwMTEgYXQgdGhlIGFnZSBvZiA1MyB5ZWFycy4gCldlIGxvdmUgcG9rZXIgYmVjYXVzZSBpdCBpcyBzdWNoIGEgY2xldmVyIGFuZCBjaGFsbGVuZ2luZyBnYW1lLiBXaGVuIHlvdSBoYXZlIGxlYXJuZWQgdG8gZG8gdHJpcGxlIHBsYXkgcG9rZXIgcmlnaHQgYW5kIHlvdSBiZWNvbWUgYSBnb29kIGF0IGl0LCB5b3UgbWF5IGhhdmUgbW9yZSBjaGFuY2VzIG9mIHdpbm5pbmcgYmlnIGNhc2guIEhvd2V2ZXIgd2l0aCB0aGUgY2hhbmNlIG9mIHdpbm5pbmcgYmlnIGlzIHRoZSBjaGFuY2Ugb2YgbG9zaW5nIGJpZyBhcyB3ZWxsIHNvIHlvdSBoYXZlIHRvIHJlYWxseSBwcmFjdGljZSBhbmQgcmVzZWFyY2ggb24gd2hhdCB0aGUgZ2FtZSBpcyBhbGwgYWJvdXQuClRoZSBjb2VmZmljaWVudCBvZiBhYnNvcnB0aW9uIG9mIHNlYXdhdGVyIHJhbmdlcyBmcm9tIGFib3V0IDAuMDEzIHRvLiAKQWxzbywgSSBsb3N0IGNvdW50IG9mIHRoZSBudW1iZXIgZW5nbGlzaCB0ZWFjaGVycyBmcm9tIHRoZSBiZXN0IHNjaG9vbHMgaW4gdGhlIFVTOiBIYXJ2YXJkLCBZYWxlLCBCZXJrZWxleSwgVmlyZ2luaWEsIE1pY2hpZ2FuLCBOb3J0aHdlc3Rlcm4sIFVDTEEsIGV0IGFsLkEgbG90IGVoPyBNb3N0IHdvdWxkbiBiZSBhYmxlIHRvIGZpbmQgYSBqb2IgYXQgYWxsLkxhc3RseSwgcGFyZW50cyBpbiBBc2lhIG5lZWQgdG8gY2hpbGwgdGhlIGZ1Y2sgb3V0LiBZb3UgY2FuIGV4cGVjdCB5b3VyIGNvdW50cnkgdG8gdHJlbmQgdG93YXJkcyBtb3JlIGludGVybmF0aW9uYWxpc20gYW5kIGF0IHRoZSBzYW1lIHRpbWUgYmUgbGVzcyBva2F5IHdpdGggaW50ZXJyYWNpYWwgc2V4LiBUaGF0IGp1c3QgcmlkaWN1bG91cy4uIApDb25zaWRlciBidXlpbmcgc29tZSBsaWZ0aW5nIHNob2VzLiBUaGUgb25lcyB5b3UgaGF2ZSBhcmVuIHRlcnJpYmxlLCBidXQgdGhleSBub3QgZ3JlYXQgZWl0aGVyLgoiRGVwdWlzIGwnYW4gZGVybmllciBkaiwgamUgbSdlbnRyYW5lIGRlIGZhb24gaW50ZW5zaXZlIiwgYSBleHBsaXF1IEJlY2tlciBxdWkgYSBzaWduIHVuIHRycyBybXVucmF0ZXVyIGNvbnRyYXQgZGUgcGFydGVuYXJpYXQgYXZlYyBsZSBwbHVzIGltcG9ydGFudCBvcmdhbmlzYXRldXIgZGUgdG91cm5vaXMgZGUgcG9rZXIgc3VyIGludGVybmV0LgpTbyB3aGVuIEphbWVzIHB1c2hlcyAkMiBpbnRvIHRoZSBtaWRkbGUgb2YgdGhlIHRhYmxlLCBJIGFtIHNrZXB0aWNhbC4gCk1yIER1Y2sgc2FpZCB0aGUgbmV3IGZ1bmN0aW9uIHJvb20gbG91bmdlIHdvdWxkIHN0cmVuZ3RoZW4gdGhlIGNsdWIncyBmYWNpbGl0aWVzIGFuZCByZXF1aXJlIG1vcmUgc3RhZmYuIEEgZ2xhc3MgYXduaW5nIHdpbGwgY292ZXIgdGhlIHNldCBkb3duIGFyZWEgYW5kIHRoZSBjb25zdHJ1Y3Rpb24gbWF0ZXJpYWxzIHdpbGwgaW5jbHVkZSBibGFjayBncmFuaXRlIHRpbGVzLiBUaGUgY2x1YiB3aWxsIGluc3RhbGwgYSBuZXcgMjEgcGVyc29uIGxpZnQgaW4gdGhlIEVsaXphYmV0aCBTdHJlZXQgZm95ZXIsIHJlbW92aW5nIHRoZSBuZWVkIGZvciB3aGVlbGNoYWlyIHVzZXJzIHRvIHR1cm4gd2l0aGluIHRoZSBsaWZ0IGFyZWEuIApJIHN1cmUgYSBsb3Qgb2YgZmF0aGVycyB0aHJvdWdob3V0IHRpbWUgaGF2ZSB0aG91Z2h0IHRoaXMgc28gSSBrbm93IGl0IHByb2JhYmx5IGFpbiByZWFsLCBidXQgZGFtbmVkIGlmIGl0IGRvZXNuIHNlZW0gbGlrZSB0aGlzIGxhdGVzdCBnZW5lcmF0aW9uIGlzIGNvbWluZyBvdXQgc29mdCBhbmQgY29kZGxlZCBhcyBzaGl0LiBJIGhlYXJkIGEgYm95IHRlbGwgaGlzIGZyaWVuZCAiSSBuZWVkIGEgZ29vZCBjcnkiIGF0IHRoZSBwYXJrLiBXaGF0IHRoZSBmdWNrIGlzIHRoYXQ/ISBJZiBJIGxldCBteSBraWQgYmUgdGhhdCBraWQgaGUgZ2V0IGZ1Y2tpbiBlYXRlbiBBTElWRSBpbiB0aGUgcmVhbCB3b3JsZCEgQnV0IHRoZW4gbXkgd2lmZSBzdGFydHMgdGFsa2luZyBhYm91dCAidG94aWMgbWFzY3VsaW5pdHkiIGFuZCBpdCBsaWtlLiAKTW9tbWFUb0IgIDIgcG9pbnRzICBzdWJtaXR0ZWQgOSBtb250aHMgYWdvCkhvdyB0byBQbGF5IFBva2VyICAgUG9rZXIgVGFibGUgUG9zaXRpb24KT2ssIG9uZSB0aXA7IHRoZSBiYXNpcyBmb3IgZXZlcnl0aGluZyBlbHNlIGluIHBva2VyIGlzIG1hdGguIFlvdSBuZWVkIHRvIGJlIGFibGUgdG8gcXVpY2tseSBjYWxjdWxhdGUgaW4geW91ciBoZWFkIHRoZSBsaWtlbHkgb2RkcyBvZiB5b3VyIGhhbmQgd2lubmluZyB0aGUgcG90LiBUaGF0J3MgaG93IHlvdSBrbm93IGlmIHJhaXNpbmcsIGNhbGxpbmcsIGV0YyBhcmUgZ29vZCBiZXRzIG9yIGJhZCBiZXRzLiBJdCdzIG9ubHkgYXQgdGhhdCBwb2ludCB3aGVuIHJlYWRpbmcgdGhlIG90aGVyIHBsYXllciBjb21lcyBpbi4gSWYgeW91IGRvbid0IGtub3cgdGhlIG9kZHMgb2YgeW91ciBoYW5kIGJlaW5nIHRoZSBoaWdoIGhhbmQgeW91IGhhdmUgbm8gYmFzaXMgdHJ5aW5nIHRvIHJlYWQgdGhlIG90aGVyIHBsYXllciBhbmQgZGVjaWRpbmcgaWYgaGUgb3Igc2hlIGhhcyB5b3UgYmVhdCBvciBub3QuCkFuZCB5b3Uga25vdywgYWJvdXQgYmVpbmcgYW4gZW50cmVwcmVuZXVyIGFuZCBiZWluZyBhIHdvbWFuIGluIGEgbWFuJ3Mgd29ybGQuIEFuZCBJIGFsc28gbWFkZSBzb21lIHZlcnkgYmFkIGNob2ljZXMuIApFbWlseSBCaXNzZWxsLCBhIG1lbWJlciBvZiBUaGUgT3V0bG9vaydzIGVkaXRvcmlhbCBib2FyZCBhbmQgYW4gYWN0aXZlIGZ1bmQgcmFpc2VyIGZvciB0aGUgUmVkIENyb3NzLCB0b29rIGhpbSB1cCBvbiB0aGUgc3VnZ2VzdGlvbiBhcyBhIHdheSB0byBzdXBwb3J0IGEgdHViZXJjdWxvc2lzIHNhbml0YXJpdW0gbmVhciBXaWxtaW5ndG9uLCBEZWwuIFNoZSBib3Jyb3dlZCBtb25leSBmcm9tIGZyaWVuZHMgdG8gcHJpbnQgdGhlIHNlYWxzLCBwZXJzdWFkZWQgdGhlIFdpbG1pbmd0b24gcG9zdG1hc3RlciB0byBzZWxsIHRoZW0gaW4gdGhlIHBvc3Qgb2ZmaWNlIGxvYmJ5LCBhbmQgc29sZCB0aGUgZmlyc3QgQ2hyaXN0bWFzIFNlYWxzIGluIERlY2VtYmVyIDE5MDcuIApBbHNvLCB3aGlsZSB0aGUgZmxvdyBhbmQgcml2ZXIgYXJlIHRydWUgdG8gdGhlIGdhbWUgdGVybXMsIHRoZXkncmUgbm90IG11Y2ggYmVuZWZpdCB0byBzb2Z0d2FyZTsgeW91J2QgYmUgYmV0dGVyIG9mZiBjb2xsYXBzaW5nIGZsb3AsIHR1cm4gYW5kIHJpdmVyIHRvIGEgdGFibGVfY2FyZHNbNV0gdmVjdG9yLiAKV2hlbiBCZWNyb2Z0IGFza3Mgd2hhdCBHaWxsaWVzIHVuZGVyc3RhbmRzIHRoZSBwaHJhc2UgdG8gbWVhbiwgaGUgYWxsIGJ1dCB3aW5rcyBhdCBoaXMgYXVkaWVuY2UuIAoiUG9ybiBpcyBub3QgaW50ZW5kZWQgdG8gYmUgYSBmb3JtIG9mIGVkdWNhdGlvbiwgYnV0IHdlIG9mdGVuIHVzZSBpdCBhcyBhIGxlYXJuaW5nIG1vZGVsLCBhcyB3ZSBoYXZlIG5vIG90aGVyIG9wdGlvbnMuIApWb2ljZXJvdWxldHRlIHBhaXJzIHJhbmRvbSBwZW9wbGUgZnJvbSBhY3Jvc3MgdGhlIG5hdGlvbiBmb3IgcGhvbmUgYmFzZWQgY29udmVyc2F0aW9uLiBUaGF0IHdhaXRpbmcgZ2FtZSBjYW4gYmUgcXVpdGUgdGF4aW5nIGFuZCBtYWtlIGV2ZW4gdGhlIG1vc3QgY29uZmlkZW50IHBlcnNvbiBxdWVzdGlvbiB0aGVtc2VsdmVzIGlmIHRoZXkgbmV2ZXIgZ2V0IGFueSByZXNwb25zZXMgdG8gdGhlIG1lc3NhZ2VzIHRoZXkgc2VuZCEgQXMgYSBjb21tdW5pdHkgb2YgbW9yZSB0aGFuIDQwIG1pbGxpb24gaW5kaXZpZHVhbCBvcGluaW9ucyBhbmQgd2F5cyBvZiBleHBlcmllbmNpbmcgdGhlIHdvcmxkLCB3ZSBhcmUgYWx3YXlzIGNvbWluZyB1cCB3aXRoIG5ldyB3YXlzIGZvciBvdXIgdXNlcnMgdG8gbWVldCwgZ28gb24gZGF0ZXMsIGFuZCBmYWxsIGluIGxvdmUuIApJbiBwYXJ0aWN1bGFyLCBPUCBhY3Rpb25zIG5laXRoZXIgdG9ybWVudCBub3IgZGVtZWFuIGFueSBzcGVjaWZpYyBwZXJzb24sIG5vciBzaG91bGQgYSByZWFzb25hYmxlIHBlcnNvbiBjb25jbHVkZSB0aGF0IFJlZGRpdCBpc24gYSBzYWZlIHBsYXRmb3JtIHRvIGV4cHJlc3MgdGhlaXIgaWRlYXMgb3IgcGFydGljaXBhdGUgaW4gdGhlIGNvbnZlcnNhdGlvbi4gSW4gZmFjdCBzaHV0dGluZyBPUCBkb3duIGJlY2F1c2Ugb3RoZXIgdXNlcnMgZGlzbGlrZSBoaXMgcG9saXRpY2FsIHN0YW5jZSBlbmZvcmNlcyB0aGUgb3Bwb3NpdGUuClZvb0RvbyBGaXggTWV0YWwgR2VhciBTb2xpZCAyOiBTdWJzdGFuY2UgdjIuMCBBVEkgQWxsIGluIFdvbmRlciBHZUZvcmNlIEZJWC4gClBlcnBsZXhpbmcsIGJlY2F1c2Ugd2hvIGtuZXcgbW92aW5nIGZvcndhcmRzIHdvdWxkIGludm9sdmUgc28gbXVjaCBtb3ZpbmcgYmFja3dhcmRzPy4gCkdhbWUgdXBkYXRlIChwYXRjaCkgdG8gR3VpdGFyIEhlcm8gSUlJOiBMZWdlbmRzIG9mIFJvY2sgLCBhKG4pIHBhcnR5IGdhbWUsIHYuMS4zLCBhZGRlZCBvbiBUdWVzZGF5LCBNYXkgMTMsIDIwMDguIApPbmUgdGhpbmcgSSB0aGluayBtb3N0IHBlb3BsZSBkb24gcmVhbGl6ZSBpcyB0aGF0IHdlIGFyZSBsaXRlcmFsbHkgb25lIG9mIHRoZSBvbmx5IGxhcmdlIHN1YnJlZGRpdHMgb24gdGhlIHNpdGUgdGhhdCBoYXMgYSBtZXRhIHN1YnJlZGRpdCB3aXRoIHRoaXMgbGV2ZWwgb2YgdHJhbnNwYXJlbmN5IGFuZCBtb2QgaW50ZXJhY3Rpb24uIApGcm9tIENyYWlnIFVuZ2VyIEFNQTogIkVhcmx5IG9uLCBhIHNvdXJjZSB0b2xkIG1lIHRoYXQgYWxsIHRoaXMgd2FzIHRpZWQgdG8gU2VtaW9uIE1vZ2lsZXZpY2gsIHRoZSBwb3dlcmZ1bCBSdXNzaWFuIG1vYnN0ZXIuIEkgaGFkIG5ldmVyIGV2ZW4gaGVhcmQgb2YgaGltLCBidXQgSSBpbW1lZGlhdGVseSB3ZW50IHRvIGEgZGF0YWJhc2UgdGhhdCBsaXN0ZWQgdGhlIG93bmVycyBvZiBhbGwgcHJvcGVydGllcyBpbiBOWSBzdGF0ZSBhbmQgbG9va2VkIHVwIGFsbCB0aGUgVHJ1bXAgcHJvcGVydGllcy4gRXZlcnkgdGltZSBJIGZvdW5kIGEgUnVzc2lhbiBzb3VuZGluZyBuYW1lLCBJIHdvdWxkIEdvb2dsZSwgYW5kIGFkZCBNb2dpbGV2aWNoLiAKVGhlIGZvdXIgZWxlbWVudHMgbmVlZGVkIGZvciBnYW1ibGluZyB0byBjb250aW51ZSBhcmU6QSBkZWNpc2lvbjogRm9yIGdhbWJsaW5nIHRvIGhhcHBlbiwgeW91IG5lZWQgdG8gbWFrZSB0aGUgZGVjaXNpb24gdG8gZ2FtYmxlLiAKSSBjYWxsZWQgdGhlIEJCQkogZ2lybC4gVGhhbmsgZ29vZG5lc3MsIHNoZSB3YXMgbm90IGNhdWdodCBpbiB0aGUgbWVzcy4gCk9uIHRoZSB3ZWVrbmlnaHRzIHlvdSBjYW4gc3RpbGwgaGl0IHVwIGEgYmFyIGZvciBhIHNvbWV3aGF0IHF1aWV0IGhhcHB5IGhvdXIgZHJpbmsuIApTZXZlcmFsIHNlbWkgdHJ1Y2tzIGZ1bGwgb2Ygc2xvdCBtYWNoaW5lcyBhcnJpdmVkIE1vbmRheSBtb3JuaW5nIHdpdGggYSB0b3RhbCBvZiA1NTAgbWFjaGluZXMgZXhwZWN0ZWQgdG8gYXJyaXZlLiBCeSBNYXJjaCAyMSwgYSB0b3RhbCBvZiAyLDAwMCBtYWNoaW5lcyB3aWxsIGJlIGRlbGl2ZXJlZC4KTmV3IEVuZ2xhbmQgUGF0cmlvdHMgb3duZXIgUm9iZXJ0IEtyYWZ0IHRvb2sgdGhlIHN0YW5kIGF0IHRoZSBBYXJvbiBIZXJuYW5kZXogbXVyZGVyIHRyaWFsIGluIEJyaXN0b2wgU3VwZXJpb3IgQ291cnQgdG9kYXksIHRlbGxpbmcgdGhlIGp1cnkgdGhhdCBoZSBtZXQgd2l0aCB0aGUgZm9ybWVyIFBhdHJpb3RzIHRpZ2h0IGVuZCB0d28gZGF5cyBhZnRlciBIZXJuYW5kZXoncyBmcmllbmQgT2RpbiBMbG95ZCB3YXMgbXVyZGVyZWQuCk1vZGVyYXRvcnMgYXJlIHRoZSBvbmVzIHdobyBjYW4gc2F5ICJvaCwganVzdCBvbmUgcGllY2Ugb2YgY2hvY29sYXRlLiIgQW5kIGFjdHVhbGx5IHN0aWNrIHdpdGggdGhhdCBhbmQgYmUgZmluZS4gCk9ubHkgd2hlbiB5b3UgdHJ1bHkgc3RvcHBlZCB0aGlua2luZyBhYm91dCB0aGUgdmlkZW8gZ2FtZSwgY2FuIHlvdSBhcHByZWNpYXRlIHRoZSBiZWF1dHkgYXJvdW5kIHlvdS4gCkFjY29yZGluZyB0byB0aGlzIHNvdXJjZSwgUGFycSBDYXNpbm8gaXMgZGVkaWNhdGVkIHRvIHByb3ZpZGluZyBhIHdvcmxkIGNsYXNzIGdhbWluZyBlbnZpcm9ubWVudCB0byB0aGUgbG9jYWwgcmVzaWRlbnRzIGFuZCB0b3VyaXN0cy4gVGhlIGNhc2lubyB3aWxsIGhhdmUgYSBQYXJxIENsdWIgcmV3YXJkcyBwcm9ncmFtLCB3aGljaCB3aWxsIGJlIGF2YWlsYWJsZSB0byBldmVyeSBndWVzdCwgYXMgd2VsbCBhcyBhbiBleGNsdXNpdmUgUGxheWVycyBDbHViIGZvciBWSVBzIGFuZCBsb3lhbCBjdXN0b21lcnMuIFBhcnEgQ2FzaW5vIHdpbGwgYmUgaG9tZSB0byBvdmVyIDYwMCBkaWZmZXJlbnQgc2xvdCBtYWNoaW5lcywgaW5jbHVkaW5nIHNvbWUgb2YgdGhlIG1vc3QgcG9wdWxhciB0aXRsZXMgYW5kIG1vc3QgcmV3YXJkaW5nIHByb2dyZXNzaXZlIGphY2twb3RzLiAKQWxzbywgcGVvcGxlIHRlbmQgdG8gaGF2ZSBhIG1pc3VuZGVyc3RhbmRpbmcgb2Ygd2hhdCBhbiBpdGVtIHRydWx5IGNvc3QuIEEgTWFjYm9vayB0aGF0IHdlIHNlbGwgZm9yICQxMzAwIGRvZXNuIG1lYW4gdGhlIGNvbXBhbnkgbWFrZSAkNjUwIGluIHByb2ZpdHMsIGJ1dCBpbiByZWFsaXR5LCB0aGUgY29tcGFueSBvbmx5IG1ha2VzICQ1MCBwcm9maXQgZm9yIHNlbGxpbmcgYSAkMTMwMCBpdGVtIHNpbmNlIG1vc3Qgb2YgdGhlIHByb2ZpdCBnb2VzIGJhY2sgdG8gbWFudWZhY3R1cmUgb3IgaW4gdGhpcyBjYXNlLCBBcHBsZS4gVG8gYmUgaG9uZXN0LCB0aGUgb25seSB0aGluZyBrZWVwIHRoZSBjb21wYW55IGFsaXZlIGFyZSBhY2Nlc3NvcmllcyBhbmQgY2FibGVzIHdoaWNoIHRlbmRzIHRvIGhhdmUgMzAgNTAlIG1hcmdpbiBwcm9maXQKSXQgZG9lc24ndCBzaG93IHRoZSB5b3VuZyBhcnRpc3QgaG93IGl0IHdhcyBjcmVhdGVkLiBXaGVyZSB3ZXJlIHRoZSBmaXJzdCBicnVzaCBzdHJva2VzIGFwcGxpZWQuIApBc3Nlc3NpbmcgcmVzaWR1YWwgcmVhc29uaW5nIGFiaWxpdHkgaW4gb3ZlcnRseSBub24gY29tbXVuaWNhdGl2ZSBwYXRpZW50cyB1c2luZyBmTVJJLiAKSSBiYXNpY2FsbHkganVzdCBzdGFydGVkIHRvIGV4Y2x1c2l2ZWx5IHVzZSBhIFBDIG9yIGFuIGlwYWQgZm9yIGxpYnJhcnkgbWFuYWdlbWVudCBiZWNhdXNlIEkgZG9uIHdhbnQgdGhlIHJvdGFyaWVzIHRvIHdlYXIgb3V0LiBPdXRzaWRlIG9mIHRoYXQsIHdlIGhhdmUgb25lICJzbG93IiBmYWRlciBpbiB0aGUgYnVzIHNlY3Rpb24uIEl0IG5vdCBhIGh1Z2UgaXNzdWUgYmVjYXVzZSBpdCB3b3JrcyBmaW5lLCBhbmQgcHVzaGVzIHN0cm9uZywgYnV0IGl0IG9kZCB0aGF0IGl0IG9ubHkgb25lLCBhbmQgd2Ugbm90IHB1bGxpbmcgdGhlIGJ1cyBmYWRlcnMgYXJvdW5kIG11Y2gsIHNvIHRoZSBvbmx5IHJlYXNvbiBpdCBtb3ZlcyBmcm9tIHVuaXR5IGlzIHdoZW4gc29tZW9uZSBpcyB1c2luZyBhIERDQS4KSG9yc2VzaG9lIENhc2lubyBsb29raW5nIHRvIGhpcmUgaHVuZHJlZHMgb2YgZGVhbGVycwpMaWZlIHdpbGwgYWJzb2x1dGVseSBpbXByb3ZlLiAKTGlwc2NvbWIgYnJpbmdzIG1vcmUgdGhhbiBhIGRlY2FkZSBvZiBleHBlcmllbmNlIGluIHRoZSBjb25zdW1lciBlbGVjdHJvbmljcyBhbmQgYWR2ZXJ0aXNpbmcgaW5kdXN0cmllcy4gClNTRCB3b24ndCBnaXZlIGFueSBhZHZhbnRhZ2Ugb3ZlciA3MjAwIFJQTXMsIHdoaWxlIHRoZXJlIGlzIGEgbG90IGluZm9ybWF0aW9uIGdvaW5nIG9uIGl0cyBhbGwgc3VwZXIgc21hbGwgYW1vdW50IG9mIGRhdGEuIEkgbWVhbiBhIGJ1ZGR5IG9mIG1pbmUgd2hvIHJlY2VudGx5IHN0b3BwZWQgcGxheWluZyBvbmxpbmUgcG9rZXIgZm9yIGEgbGl2aW5nIGhhZCBtaWxsaW9ucyBvZiBoYW5kcyBpbiBoaXMgZGF0YWJhc2Ugd2hpY2ggdG9vayB1cCBubyBtb3JlIHRoYW4gMjBHQiBJIHRoaW5rIGhlIHNhaWQuIFNTRCBhcmUgdW50ZXN0ZWQgd2F0ZXJzIHdpdGggdGhlaXIgbG9uZyB0ZXJtIHJlbGlhYmlsaXR5IGF0bSBhbnl3YXlzLiAKSW4gYW55IGNhc2Ugd2hhdCBldmVyeW9uZSBzaG91bGQgd2F0Y2ggb3V0IGZvciBpcyBTY2FtIGVtYWlscyBhbmQgbWVzc2FnZXMgaW4gZmFjZWJvb2sgd2hlcmUgeW91IGFyZSBzdXBvc2UgdG8gYmUgYXdhcmRlZCBvciBiYW5lZCBmb3IgYW55IHJlYXNvbiwgYW5kIHlvdSBhcmUgYXNrZWQgdG8gY2xpY2sgYSBsaW5rIHRvIHZlcmlmeSB5b3VyIGFjY291bnQsIHdoZXJlIHlvdSB3b3VsZCBuZWVkIHRvIGxvZ2luIG9mIGNvdXJzZTsgd2hlbiB5b3UgbG9naW4gdG8gdGhhdCBsaW5rIHlvdSBkb24ndCBhY3R1YWxseSB2ZXJpZnkgYW55dGhpbmcgeW91IGp1c3QgZ2l2ZSBvdXQgeW91ciBwYXNzd29yZCBhbmQgYWNjb3VudCB0byBzb21lIGhhY2tlcnMuIApOb3RoaW5nIGV2ZXIgc2VlbWVkIHRvIHB1dCBDYXB0YWluIEppbSBvdXQgb3IgZGVwcmVzcyBoaW0gaW4gYW55IHdheS4KMTAgdG8gMTMgaW5mb3JtcyB1cyB0aGUgcmVhc29ucyBmb3Igd2hpY2ggdGhlIGVuZW1pZXMgb2YgSXNyYWVsIHdpbGwgcmlzZSB1cCBpbiB0aGUgTGFzdCBEYXlzLiBEb2VzIGl0IG1hdHRlciB3aGF0IGVuZW15IHdhbnRzIHRvIGRvPyBObyEgVGhlIHZpdGFsIHRoaW5nIGlzIHRoZSB1bmRlcnN0YW5kaW5nIG9mIHRoZSBXb3JkIG9mIHRoZSBMT1JELiAKSWNoIGh0dGUgZ2VybmUgYWxsZXMgZnIgZGFzIGRpZSBTUCB1bmQgZGllIEdybmVuIGVpbnN0ZWhlbiBiaXMgYXVmIGRpZSBTdHJlaWNoZWxlaW5oZWl0ZW4gZnIgSW50b2xlcmFudGUsIGRpZSB3aXIgdHJvdHpkZW0gbGllYmhhYmVuIG1zc2VuLCB3ZWlsIEhhdXRmYXJiZSA9IGR1bmtlbC4gSXN0IGRhcyBkZW5uIHNvIHNjaHdlciB6dSBrYXBpZXJlbiwgZGFzcyBldWNoIEFmZ2hhbmVuIGlkZW9sb2dpc2NoIGZlcm5lbiBzaW5kIGFscyBqZWdsaWNoZXIgRlAgV2hsZXI/IER1IGthbm5zdCBuaWNodCBmciA5MCUgZGVyIFdlcnQgdm9uIEdybi8gUm90IHNlaW4gdW5kIGdsZWljaHplaXRpZyBNb3NsZW1zIHVuZCBhbmRlcmUgd2VpcmRlIE1pbmRlcmhlaXRlbiBpbnMgTGFuZCBob2xlbi4gR2VoIGJpdHRlIGF1ZiBkaWUgTG92ZXBhcmFkZSAoaWNoIG1hZyBzaWUgbmljaHQsIHdlaWwgc2llICJMb29rIGF0IG1lIEkgZ2F5ISIgICBob21vc2V4dWVsbGUgd2llIGltIFpvbyBhdXNzdGVsbHQgdW5kIG5vcm1hbGVuIExldXRlbiBkaWUgZWluZmFjaCBzY2h3dWwgc2luZCB3aWUgc2V4YmVzZXNzZW5lIFRpZXJlIGF1c3NlaGVuIGxzc3QsIGFiZXIgbGFzc2VuIHdpciBkYXMpIHVuZCB6ZWlnIG1pciB3aWUgdmllbGUgdm9uIGRlbiBFaW53YW5kZXJlcm4sIGRpZSByZWdlbG1pZyBpbiBkaWUgTW9zY2hlZSBnZWhlbiBhdWNoIGRvcnQgc2luZCB1bmQgZnIgZGllIFNhY2hlIGVpbnN0ZWhlbi4gRGEgZ2lidCBlcyBlaW5mYWNoIGtlaW5lIFNjaG5pdHRtZW5nZS4gQ2hvb3NlIG9uZS4gSWNoIG1hZyB3ZWRlciBkaWUgRlAgbm9jaCBkaWUgVlAsIGdlbmF1c28gd2VuaWcgd2llIGRpZSBORU9TLCBudXIgZGllc2UgbmljaHQgYWt6ZXB0YW56IGRlciBQcm9ibGVtYXRpayBkZXIgYWt0dWVsbGVuIElzbGFtaXNpZXJ1bmcgc3RlcnJlaWNocyBtdXNzIGVuZGxpY2ggYmVncmlmZmVuIHdlcmRlbiB1bmQgbmljaHQgYWxzIEFuZ3N0IGRlciBkdW1tZW4gdW5nZWJpbGRldGVuIGFiZ2V0YW4gd2VyZGVuISBEYXMgaXN0IGVpbiBGYWt0LiBVbmQgZXMga29tbXQgenUga2VpbmVyIEFzc2ltaWxpZXJ0bXVuZywgbmVpbiwgZXMgd2lyZCBzY2hsaW1tZXIuIERpZSB0cmtpc2NoZW4gTWRjaGVuIGF1cyBkcml0dGVyIEdlbmVyYXRpb24gcmVubmVuIGFsbGUgcGx0emxpY2ggd2llZGVyIG1pdCBLb3BmdHVjaCBydW0gZGEgaGF0IGRvY2ggd2FzISBJY2ggd2lsbCBkaWVzZSBiZXJyZWxpZ2lzZW4gTGV1dGUgbmljaHQsIHNpZSB3ZXJkZW4gbmllbWFscyBmciBNZWludW5nc2ZyZWloZWl0IHNlaW4sIGF1Y2ggd2VubiBtYW5jaGUgc2ljaCBzbyB2ZXJiaWVnZW4sIGRhc3MgRmVtaW5pc3Rpbm5lbiBtaXQgS29wZnR1Y2ggcmF1c2dlaGVuLiBOZWluLCBlcyBnZWh0IG5pY2h0IGRhcnVtLCBkYXNzIHdpciBGcmF1ZW4gdm9yc2NocmVpYmVuIHdhcyBzaWUgYW56aWVoZW4gc29sbGVuLCBlcyBnZWh0IGRhcnVtLCBkYXNzIGVzIGVpbiBTeW1ib2wgaXN0LiBVbmQgZ2VuYXVzbyB3aWUgaWNoIGVpbmVtIGdsYXR6a3BmaWdlbiBtaXQgSGFrZW5rcmV1eiBTY2hycGUgdm9yd2VyZmUgbmljaHQgZGVyIGxpYmVyYWxzdGUgenUgc2VpbiwgZGFyZiBpY2ggbWlyIHdvaGwgZGllIGdsZWljaGUgQW5uYWhtZSB2b24gTW9zbGVtcyBnZWJlbi4gT2RlciBnZWhzdCBkdSB6dSBqZWRlbSBOZW9uYXppLCBsZXJuc3QgaWhuIGVyc3QgZWlubWFsIGtlbm5lbiwgbWFjaHN0IGRpciBlaW4gQmlsZCB1bmQgc2Fnc3QgZGFzcyBtYW4gZGFzIGphIHZlcnN0ZWhlbiBtdXNzPyBJY2ggZ2xhdWJlIG5pY2h0LgpUaGVzZSBhcmUgdGhlIHBsYXllcnMgd2hvIGFyZSBtb3N0IG9mdGVuIGFza2VkICAgIkhvdyBkaWQgeW91IGNhbGwgd2l0aCB0aGF0PyIgVGhleSBhcmUgdGhlIGxvd2VzdCBncmFkZSBvcHBvbmVudHMgZm9yIGEgcmVhc29uLCBidXQgY2FuIGRvdWJsZSB1cCBPTiBZT1UgaWYgeW91IGRvbid0IHBsYXkgc3RyYWlnaHQgdXAgYWdhaW5zdCB0aGVtLiAKVGhlIGxhdHRlciBzaG91bGQgc2hvdyBoZXIgbmFtZSBhdCBiaXJ0aCwgaGVyIGJpcnRoIG1vdGhlciBuYW1lIGFuZCBhZGRyZXNzIGF0IHRoZSB0aW1lIG9mIGJpcnRoLCB0aGUgbmFtZSBvZiB0aGUgYmlydGggZmF0aGVyIGlmIGtub3duIGFuZCBsZWdhbGx5IGFja25vd2xlZGdlZCBhbmQgdGhlIG5hbWVzIG9mIGhlciBhZG9wdGl2ZSBwYXJlbnRzIGFuZCB0aGUgZmlsZSBudW1iZXIvZGF0ZSBoZXIgYWRvcHRpb24gYmVjYW1lIGZpbmFsLCB3aGljaCB3b3VsZCBhbGxvdyB5b3UgdG8gZmluZCB0aGlzIGZpbGUgYXQgdGhlIGxvY2FsIGNvdXJ0LiAKSGUgaGFkIHdvcmtlZCBhcyBhIHNhbGVzbWFuIGZvciBhIGNvbnNpZGVyYWJseSBsb25nIHBlcmlvZCBvZiB0aW1lLiBIZSByZXNvbHZlZCB0byBjb25jZW50cmF0ZSBtb3JlIG9uIHBva2VyLCBhbmQgdGhlcmVmb3JlLCBoZSBvZmZpY2lhbGx5IGxlZnQgaGlzIGpvYiBvbiAxc3QgSmFudWFyeSBpbiB0aGUgeWVhciBvZiAyMDAzLiAKRG9jaCBkYXMgcmVpY2h0IG5vY2ggbGFuZ2UgbmljaHQuIEluc2dlc2FtdCBtc3NlbiBydW5kIDIwMCBIb3RlbHMgdW5kIEdzdGVodXNlciBnZWJhdXQgd2VyZGVuLCB1bSBkZXIgRm9yZGVydW5nIGRlcyBPbHltcGlzY2hlbiBLb21pdGVlcyBuYWNoIGJlciA0Mi4wMDAgYmVybmFjaHR1bmdzbWdsaWNoa2VpdGVuIGdlcmVjaHQgenUgd2VyZGVuLiBFaW4gd2VpdGVyZXMgUHJvYmxlbTogU2Nob24gaGV1dGUgaXN0IHF1YWxpZml6aWVydGVzIFBlcnNvbmFsIGluIGRlciBIb3RlbGJyYW5jaGUgaW4gdW5kIHVtIFNvdHNjaGkgcmFyLi4gClNoZSBmcnVzdHJhdGVkIGJ5IHBlb3BsZSB3aG8gZG9uIHNlZW0gdG8gdW5kZXJzdGFuZCB0aGUgZGlmZmVyZW5jZXMsIGVzcGVjaWFsbHkgaW4gdGhlIGxpbWl0ZWQgbnVtYmVyIG9mIHBlcmlvZCBhbmQgaW5kZXBlbmRlbnQgZmlsbXMgZmVhdHVyaW5nIEFzaWFuIGFjdG9ycy4gCkZvciBzZXZlcmFsIHllYXJzLCBKYWtlJ3MgRGluZXIgaGFzIGNvbnNpc3RlbnRseSBoYWQgMiAzIHRhYmxlcyBwbGF5aW5nIGV2ZXJ5IE1vbmRheSBuaWdodC4uIApCZWNhdXNlIHRoZSBob3VzZSBkb2VzIG5vdCB3YW50IHRvIGdldCBpbiBhIGRpc3B1dGUgb3ZlciB3aGF0IGNoaXBzIGJlbG9uZyB0byB3aG9tLCBjb3VwbGVzIG9yIGZyaWVuZHMgcGxheWluZyB0b2dldGhlciBtYXkgbm90IHNoYXJlIGNoaXBzLiAKVGhpcyBidWxsc2hpdCBtYXJrZXQgdGhhdCBkZXZlbG9wZWQgb2YgImdyZWVuIGVuZXJneSIgYW5kIGVsZWN0cmljIHZlaGljbGVzIGlzIHN1Y2ggYSBmYXJjZSBvbiB0aGUgYmFja3Mgb2YgcGVvcGxlIHRoYXQgdGhlIElRIG9mIHRoZSBtYXJrZXQgbXVzdCBiZSByaWRpY3Vsb3VzbHkgdW5kZXJtaW5lZC4KUGVvcGxlIGluIGNvbnRyb2wgb2YgdGhlIGhlYWRhY2hlIGZpZWxkIHNlZW1pbmdseSBoYXZlIG5vdCwgY2Fubm90LCBvciB3aWxsIG5vdCwgcmVjb2duaXplIHRoaXMgcGFyYWRveCB0aGF0IHRoZSBtb2RlbCBmb3IgY2Vydmljb2dlbmljIChiZWdpbnMgaW4gdGhlIG5lY2spIGhlYWRhY2hlIGlzIG5vdCBvbmx5IHRoZSBiZXN0IGV2b2x2ZWQgb2YgYWxsIGhlYWRhY2hlcyBidXQgaXMgdGVzdGFibGUgaW4gdml2bywgaW4gcGF0aWVudHMgd2l0aCBoZWFkYWNoZSBjb21wbGFpbnRzLiBObyBvdGhlciBmb3JtIG9mIGhlYWRhY2hlIGhhcyB0aGF0IGZhY2lsaXR5LiBOaWtvbGkgQm9nZHVrIGlzIGFuIGFuYXRvbWlzdCBhbmQgc3VyZ2VvbiBmcm9tIFF1ZWVuc2xhbmQgQXVzdHJhbGlhLiBIZSBpcyBhbiBpbnRlcm5hdGlvbmFsbHkga25vd24gZXhwZXJ0IGluIHRoZSBwYWluIG1hbmFnZW1lbnQgd29ybGQgdGhlIHdvcmxkIG9mIGFuYXRvbWlzdHMuIEhlIGFuZCBoaXMgY29ob3J0cyB3ZXJlIHRoZSBmaXJzdCB0byBkb2N1bWVudCB0aGUgcHJlc2VuY2Ugb2Ygbm9jaWNlcHRpdmUgbmVydmUgZmliZXJzIChwYWluIGZpYmVycykgaW4gdGhlIGh1bWFuIGRpc2MgaW4gdGhlIGxhdGUgODAgSGlzIGRpc2NvdmVyeSByZXZvbHV0aW9uaXplZCB0aGUgbWFuYWdlbWVudCBvZiBheGlhbCBjb21wbGFpbnRzIChzcGluZSkgYW5kIGhhcyBvZmZlcmVkIHVzIGdyZWF0IGluc2lnaHQgaW50byB0aGUgbmF0dXJlIG9mIHRoZSBzcGluYWwgZGlzY3MgYW5kIGZhY2V0IGpvaW50cyBhcyBwYWluIGdlbmVyYXRvcnMuIFRoZSByZXN1bHQgaGFzIGJlZW4gYSB0cmVtZW5kb3VzIGluY3JlYXNlIGluIHRoZSBudW1iZXIgb2YgcGFpbiBtYW5hZ2VtZW50IHRlY2huaXF1ZXMuIEFzIGltcG9ydGFudCwgd2Ugbm93IGhhdmUgYSBzY2llbnRpZmljIGJhc2lzIHRoZSBheGlhbCBjb21wbGFpbnRzIG9mIG91ciBwYXRpZW50cyBhbmQgY2FuIGJldHRlciBleHBsYWluIHRvIHRoZW0gdGhlIHJlYXNvbiB3aHkgcGFpbiBleGlzdHMgZXZlbiB0aG91Z2ggb2JqZWN0aXZlIHN0dWRpZXMgKE1SSSwgQ1QsIFggcmF5LCBFTUcsIGV0YykgZG8gbm90IHNob3cgZnJhY3R1cmVzLCBkaXNjIGhlcm5pYXRpb25zIG9yIG5lcnZlIGRhbWFnZS5dCkF1dG9tYXRpYyBjYXJkIHNodWZmbGVycyBjYW4gbWFrZSBwbGF5aW5nIGNhcmRzIG1vcmUgZnVuIGZvciB5b3Ugbm8gbWF0dGVyIHdoYXQga2luZCBvZiBjYXJkIHBsYXlpbmcgeW91IGVuam95LiAKU3VjaCBxdWVzdGlvbnMgYXJlIGJldHRlciBzdWl0ZWQgZm9yIC9yL2VzdGltYXRpb24gb3IgL3IvdGhleWRpZHRoZW1hdGguIApJbiBBZnJpa2Egd2VyZGVuIGFrdHVlbGwgMTkwIGdyZXJlIEhvdGVscyAoMzcuMTQxIFppbW1lcikgZ2VwbGFudCwgc2llYmVuIFByb3plbnQgbWVociBhbHMgaW0gZXJzdGVzIFF1YXJ0YWwgZGVzIFZvcmphaHJlcy4gQWxsZWluIDY0IEhvdGVsYmF1IFByb2pla3RlICgxMS45NTUgWmltbWVyKSBlbnRzdGVoZW4gaW4gTWFyb2trbywgMTkgKDMuOTc5IFppbW1lcikgaW4gTmlnZXJpYSB1bmQgMTcgKDIuNDkyKSBpbiBTZGFmcmlrYS4gRGllIFVtc3RyemUgdW5kIFVucnVoZW4gaW4gTGlieWVuLCBUdW5lc2llbiB1bmQgZ3lwdGVuIGJyZW1zdGVuIGRlbiBBdXNiYXUgZGVyIEhvdGVsbGVyaWUgc3RhcmsuLiAKSSBhbSAxMDAlIHN1cmUgdGhhdCBldmVuIHdvbWVuIHdpdGggInBlcmZlY3QiIGJvZGllcyBoYXZlIHJhbmRvbSAiZmxhd3MiIHRoYXQgdGhleSBvYnNlc3Mgb3Zlci4gVmljdG9yaWEgU2VjcmV0IG1vZGVscyBzdGlsbCBGYWNldHVuZSB0aGVpciBJbnN0YWdyYW0gcGhvdG9zIGZvciBoZWF2ZW5zIHNha2UhIFRoZXJlIGFyZSB3aG9sZSByZWxpZ2lvdXMgcGhpbG9zb3BoaWVzIGFyb3VuZCBjb250ZW50bWVudCBhbmQgaXQgdGFrZXMgYSBsaWZldGltZSB0byBhY2hpZXZlIHRoZSBoaWdoZXN0IGxldmVsLiAKQ2F0YWx5dGljIGNvbnZlcnRlciB3ZW50IG91dD8gJDUwIGZvciBvbmUgdGhhdCBtZWV0cyA5NCBlbWlzc2lvbnMuIEdhcyBtaWxlYWdlPyBFaCwgd2hvIGNhcmVzLCBzaW5nbGUgZGlnaXRzIGluIHRvd24sIGJ1dCB0aGUgJDMwMCBvZiBtYWludGVuYW5jZSBpbiA4IG1vbnRocyB3YXMgbm90aGluZy4gSSBsb3ZlIHRoZSA5MHMgc3R1ZmYuLiAKV2VyZSB5b3UgYm9ybiB3aXRoIGEgbWVudGFsIGhlYWx0aCBkZWZlY3Q/IFlvdSBsaXRlcmFsbHkgc3BlbnQgZGF5cyB0cnlpbmcgdG8gY29udmluY2UgYSBzaW5nbGUgaW50ZXJuZXQgc3RyYW5nZXIgdGhhdCB5b3UgaGF2ZSBtb25leSBhbmQgdGhhdCB5b3Ugbm90IGEgYnJva2UgZGljay4gWW91IGRvIG5vdCBoYXZlIGJldHRlciB0aGluZ3MgdG8gZG8uIApObyB3b25kZXIgSSBjYW4gZmluZCB0cnVlIGxvdmUsIGFuZCBJIGdvaW5nIHRvIGVudGVyIG15IDQwcyBhcyB0aGUgY3JlZXB5IGR1ZGUgYXQgdGhlIGJhciBoaXR0aW5nIG9uIHRoZSBiYXJ0ZW5kZXJzIGhhbGYgaGlzIGFnZSwgSSBjYW4gZXZlbiBkZWNpZGUgb24gYSB0eXBlIG90aGVyIHRoYW4gInVuZm9ydHVuYXRlIGVub3VnaCB0byB0aGluayBJIGEgZ29vZCBjaG9pY2UgYXMgYSBwYXJ0bmVyIi4gCkJlY2F1c2UgaXQgYnVsbHNoaXQgdGVybWlub2xvZ3kuIApFaW5lIG1lZGl6aW5pc2NoZSBHcnVuZHZlcnNvcmd1bmcgZ2lidCBlcyBhbGxlcmRpbmdzIG1laW5lciBNZWludW5nIG5hY2ggc2Nob24sIGFsbGVyZGluZ3Mga2FubiBpY2ggYXVzZHJja2xpY2ggbmljaHQgYmV1cnRlaWxlbiwgd2llIHZpZWwgZGF2b24gZGllIGluZGlnZW5lIEJldmxrZXJ1bmcgYWJiZWtvbW10LiAKSGVyZSdzIGFuIGV4YW1wbGUuIERhdmlkIENyb3NzJyBjaGFyYWN0ZXIgaXMgYSBsb3VkLCBhYnJhc2l2ZSBqZXJrICh3aGljaCBzaG91bGQgY29tZSBhcyBubyBzdXJwcmlzZSBpZiB5b3UndmUgc2VlbiBoaXMgb3RoZXIgd29yaykuIApCdXQgYWxzbyBob3cgbXVjaCBtb3JlIHBlZXZlZCB0aGF0IHRoZSBJbnF1aXNpdG9yIGFjdGlvbnMgd2VyZSB0YWtlbiBvdXQgb2YgdGhlIHBsYXllcnMgaGFuZHMsIGVzcGVjaWFsbHkgaWYgdGhlIHBsYXllciB3YXMgYWltaW5nIHRvIHJvbWFuY2Ugc29tZW9uZSBkaWZmZXJlbnQ/IExpa2UgSSB0aGluayB0aGUgb2xkIEJpb3dhcmUgZm9ybXMgd291bGQgaGF2ZSBtZWx0ZWQgZG93biBmb3IgZ29vZC4uIAonSSB3b3JrZWQgb3V0IHRvbywnIGhlIGFkZGVkLiAnSSB3YXMgcHJldHR5IGNyZWF0aXZlLiBJIGRpZCBhIGxvdCBvZiBwbGFua3MgYW5kIHNpdCB1cHMgYW5kIHB1c2ggdXBzLiBJIGFjdHVhbGx5IGRpZCBpbmNsaW5lIHB1c2ggdXBzIG92ZXIgdGhlIGJhdGh0dWIuJwpHcmFudGVkLCBwYXJ0cyBjYW4gYmUgbW9yZSwgaWYgeW91IGdldCBWVyBicmFuZGVkIHN0dWZmLCBidXQgdGhlcmUgYXJlIGEgbG90IG9mIGdyZWF0IGFmdGVybWFya2V0IGJyYW5kcyB0aGF0IEkgdXNlZCB0aGF0IGJyaW5nIHRoZSBwcmljZXMgZG93biB0byBwcmV0dHkgYXZlcmFnZS4uIApJIGp1c3Qgd2FudCB0byBiZSBoZXJlIHRvIHN1cHBvcnQgaGVyIGFuZCBoZWxwIGhlciBob3dldmVyIEkgY2FuLiBEYWQgaXMgc2VyaW91c2x5IGRpc3R1cmJlZC4gCkkgY29uc2lkZXIgbXkgc2VsZiBhYm92ZSBhdmVyYWdlLCBJIHdpbm5pbmcgNzYuNCUgb2YgbXkgc2Vzc2lvbnMuIElmIEkgZXhjbHVkZSBicmVha2V2ZW4gKy8gIDEwIEJCIChJIHdvdWxkbiBjb25zaWRlciBsb3NpbmcgMTBCQiBvciB3aW5uaW5nIDEwQkIgYW55dGhpbmcgb3RoZXIgdGhhbiBicmVha2V2ZW4gYmFzaWNhbGx5LCBJIHdpbm5pbmcgNzAuOCUgb2YgbXkgc2Vzc2lvbnMuIFRoYXQgdGhlIGxhc3QgMyB5ZWFycyB3b3J0aCBvZiBkYXRhLiBLZWVwIGluIG1pbmQsIEkgcGxheWluZyBpbiBkcmVhbSBnYW1lcyAoNS9ULCAyLzUsIGFuZCAxLzIgdGhhdCBhcmUgYmFzaWNhbGx5IDYgcGVvcGxlIHBsYXlpbmcgYmluZ28sIDMgYWN0dWFsIHRoaW5rZXJzKSwgc28gbXkgd2luIHJhdGUgd291bGQgcHJvYmFibHkgYmUgYSBiaXQgaGlnaGVyIGlmIEkgd2VyZW4ganVzdCBwdXQgaW4gYWJzdXJkIHZhcmlhbmNlIHNwb3RzIGNvbnN0YW50bHkuIFByaW9yIHRvIHRoZW4sIG15IHdpbiByYXRlIHdhcyBwcm9iYWJseSBub3QgbmVhcmx5IGFzIGhpZ2ggYW5kIHJpZ2h0IG5vdyBteSB3aW4gcmF0ZSBpcyBwcm9iYWJseSBzbGlnaHRseSBsb3dlciBhcyBJIGhhdmVuIHBsYXllZCBpbiB0d28gbW9udGhzICh3b3JrLCBsaWZlLCBldGMga2VlcGluZyBtZSBidXN5LCBidXQgRlJJREFZIT8hIENBTiBXQUlUISkuCkdlbmVyYWxseSB5ZWxsIG5vbnNlbnNpY2FsLCBhYnVzaXZlIHRoaW5ncyBhdCBtZSwgdGhlbiBsZWF2ZSBhZ2Fpbi4gSSBndWVzcyBpdCdzIGJlZW4gc28gbG9uZywgYW5kIEkndmUgdHJpZWQgdG8gZm9yZ2V0LiBJIGtub3cgb25lIHRpbWUgc2hlIHRvb2sgc2V2ZXJhbCB0aG91c2FuZCBkb2xsYXJzIG91dCBvZiBteSBkYWQncyBzYXZpbmdzIGFjY291bnQgYW5kIHVzZWQgaXQgdG8gYnV5IGEgTXVzdGFuZyBjb252ZXJ0aWJsZS4gCkkgYmVlbiB0byBxdWl0ZSBhIGZldyBvZiB0aGVtIGFzIGEgdGVhY2hlciBhc3Npc3RhbnQgc28gaXQgd2FzIGZyZWUgZm9yIG1lLiAKTGV0IGFsc28gbG9vayBhdCB0aGUgbWFpbiBzZXJpZXMgZ2FtZXMgZm9yIGxldmVsaW5nIGEgUG9rZW1vbi4gClllcywgeWVzLCB3ZSBrbm93LCB0aGV5J3JlIGNhbGxlZCBiYXJiZWxzLCBidXQgZm9yIG91ciBwdXJwb3NlcywgaXQncyBhIEZ1IE1hbmNodSBtdXN0YWNoZS4gRm9yIG9uZSB0aGluZywgaXQncyBub3QgYSB0dXNrICAgaXQncyBhIHRvb3RoLiBPbmUgbG9uZywgd2VpcmQsIHNwaXJhbCB0b290aC4gQnV0IHdoYXQgd2UgZGlkbid0IGtub3cgdW50aWwgcmVjZW50bHkgd2FzIHRoYXQgdGhlIG5hcndoYWwncyBzbmFnZ2xldG9vdGggaXMgY292ZXJlZCB3aXRoIDEwIG1pbGxpb24gbmVydmUgZW5kaW5ncy4gSXQncyBub3QgYSB3ZWFwb24gb3IgYSBodW50aW5nIHRvb2wgb3IgYSBmaXJlcGxhY2UgcG9rZXIsIGFzIHByZXZpb3VzbHkgYXNzdW1lZC4gSXQncyBhIHNlbnNvcnkgb3JnYW4gY2FwYWJsZSBvZiB0aGluZ3Mgd2UncmUganVzdCBub3cgc3RhcnRpbmcgdG8gZmlndXJlIG91dC4iU3dlZXQgTmVwdHVuZSwgeW91IHNob3VsZCBiZSBpbXByaXNvbmVkIGZvciB3aGF0IHlvdSd2ZSBkb25lIHdpdGggdGhhdCBoYW5kLiIKVGhlIEJvcmdhdGEncyBwb2tlciByb29tIGhhcyBwcm92ZWQgZXNwZWNpYWxseSBwb3B1bGFyLCBhbmQgQm91Z2huZXIgaXMgY29uc2lkZXJpbmcgdHJpcGxpbmcgaXRzIHNpemUuIApJIHN0aWxsIG5ldyB0b28gYnV0IGEgY291cGxlIHRoaW5ncyBJIGxlYXJuZWQ6IDEuIApJIGV2ZW4gaGF2ZSB0aGUgZGVhdGggY2VydGlmaWNhdGUgZnJvbSBhbm90aGVyIHN0YXRlIHdpdGggbXkgZnVsbCBuYW1lIGFuZCBiaXJ0aGRheSBvbiBpdCAgIERXIGFuZCBJIHRob3VnaHQgaXQgd2FzIGZ1bm55IGF0IHRoZSB0aW1lIGFuZCBqdXN0IHdlbnQgYW5kIGRpZCB3aGF0IHRoZSBTb2NpYWwgU2VjdXJpdHkgb2ZmaWNlIGFza2VkIHVzIHRvIHRvIGdldCBpc3N1ZWQgbmV3IGRvY3VtZW50cyBhbmQgY2xlYXIgdXAgdGhlIGNsdXN0ZXIgZnVjay4gCldlIHdlcmUgbGFzdCA3IHBsYXllcnMuIFRoZSBidWJibGUgYWNjb3JkaW5nIHRvIHRoZSBydWxlIHdhcyA1IHBsYXllcnMuIEkgZGlkIG5vdCBrbm93IHRoYXQgdGhlIHRhYmxlIGNhbiBkZWNpZGUgdG8gY2hhbmdlIHRoYXQgaWYgdGhleSBhbGwgYWdyZWUuIApJIHdpbGwgcHJvYmFibHkgbm90IGdvIGJhY2sgdG8gbXkgdG93biB3aGljaCBJIGxpdmVkIGluIG15IHdob2xlIGxpZmUgZm9yIGEgZmV3IHllYXJzLiAKSSB0ZW5kIHRvIGJlIGEgcHJldHR5IHBhdGllbnQgcGVyc29uIGJ1dCBiYWJpZXMgY2FuIHRocm93IHRoYXQgYWxsIHJpZ2h0IG91dCB0aGUgd2luZG93IS4gClRoaXMgaGFzIGxlZnQgbW9zdCBvZiB0aGUgQW1lcmljYW4gcHVibGljIGNvbmZ1c2VkIGFib3V0IHRoZSB0cnVlIGZhY3RzIG9mIGV2ZW4gdGhlIG1vc3Qgd2VsbCBkb2N1bWVudGVkLCBpbmRpc3B1dGFibGUgaXNzdWVzLCBzdWNoIGFzIGNsaW1hdGUgY2hhbmdlLCB0aGUgZWZmZWN0cyBvZiBzdXBwbHkgc2lkZSBlY29ub21pY3MsIGVmZmVjdHMgb2YgaW1taWdyYXRpb24sIGFuZCBzbyBvbi4KSSBkbyBoYXZlIGp1c3RpZmllZCBjb25maWRlbmNlIGluIHRoZSBvdmVyYWxsIHByb2Nlc3Mgb2Ygc2NpZW5jZSBvdmVyIHRpbWUuIApEdWJibyBhbHNvIGhhcyB0aGUgbW9zdCBnYW1ibGluZyBtYWNoaW5lcyBpbiBjbHVicyAoNDcxKSBhbmQgaG90ZWxzICgyNDEpIGluIHRoZSByZWdpb24uIFRoZSBkYXRhIGZvciBjbHVic3dhcyBmb3IgdGhlIHBlcmlvZCBiZXR3ZWVuRGVjZW1iZXIgMSwgMjAxNyBhbmQgTWF5IDMxLDIwMTggYW5kIHRoZSBob3RlbHMgZGF0YSB3YXMgZm9yIHRoZSBzaXggbW9udGhzIGJldHdlZW5KYW51YXJ5IDEsIDIwMTggYW5kSnVuZSAzMCwgMjAxOC4gCk1haXMgcGx1cyBqYW1haXMgamUgbmUgbWUgbGFpc3NlcmFpIGh1bWlsaWVyIGRlIGxhIHNvcnRlLgpObyBtYXR0ZXIgd2hhdCB5b3UgZG8gaW4geW91ciBsaWZlIHlvdSB3aWxsIHByb2JhYmx5IG9mZmVuZCBhIGxvdCBvZiBwZW9wbGUgaWYgeW91IHdhbnQgdG8gYmUgdHJ1ZSB0byB5b3Vyc2VsZi4gT25lIGV4YW1wbGUsIGlmIHlvdSBhcmUgZ2F5IGFuZCB3YW50IHRvIGJlIGdheSBhbmQgYXJlIG9wZW4gYWJvdXQgaXQgeW91IHdpbGwgb2ZmZW5kIGEgbG90IG9mIHBlb3BsZSB3aG8gYXJlIGFnYWluc3QgZ2F5IHBlb3BsZS4uIAogIGFuZCBJIGZvbGxvd2VkIFRvbSBpbnNpZGUuLiAKSSBtZWFuIGxpa2UgeW91IGNhbiB6b29tIHRocm91Z2ggMTAxIERvZyBUcmlja3MgYm9vay4gClRoZSBvc3RlbnNpYmxlIGdvYWwgb2YgdGhlIHBvbGljeSBpcyB0byBwcmV2ZW50IENhbmFkaWFuIG9pbCBzYW5kcyBjcnVkZSBmcm9tIGJlaW5nIHVzZWQgaW4gdGhlIG1hc3NpdmUgRVUgbWFya2V0cGxhY2UuIFlldCB0aGUgRlFEIG9ubHkgc2Vla3MgdG8gYXNzaWduIGNhcmJvbiB2YWx1ZXMgdG8gYml0dW1lbiBmcm9tIHNvdXJjZXMgdGhhdCBhcmUgdHJhbnNwYXJlbnQgYW5kIHB1Ymxpc2ggdGhlIGRhdGEgdGhhdCBFVSBidXJlYXVjcmF0cyByZXF1aXJlIHRvIG1ha2UgYW4gYXNzZXNzbWVudCBvZiB0aGVpciBjYXJib24gdmFsdWUuIEluIGVzc2VuY2UsIFJ1c3NpYSwgVmVuZXp1ZWxhIGFuZCBhIG51bWJlciBvZiBNaWRkbGUgRWFzdGVybiBhbmQgQWZyaWNhbiBwcm9kdWNlcnMgZ2V0IGEgZnJlZSBwYXNzIGJlY2F1c2UgdGhleSByZWZ1c2UgdG8gbWFrZSB0aGlzIHR5cGUgb2YgZGF0YSBwdWJsaWNhbGx5IGF2YWlsYWJsZSwgaWYgdGhleSBldmVuIGhhdmUgaXQgYXQgYWxsLiAKQXNsbmRhIGJpciBvayBraWkgdGFyYWZuZGFuIHNldmlsaXlvciBoZW0gRWtpIGhlbSBkZSByL1R1cmtleS4gQW1hIGhlbSBFa2kgaGVtIGRlIHIvVHVya2V5IHphbWFuIHphbWFuIGJpciBuZXZpIGFsYW1hIGR1dmFybmEgZXZyaWxpeW9yIHZlIGthcmFtc2FybGsgeWF5eW9yLiBCZWxraSBidWR1ciBzZWJlYmkgc2V2aWxtZW1lc2luaW4uIApZb3UgZ3Vlc3NlZCBpdCwgTWVsIEdpYnNvbi4gCkNsaW50b24gYW5kIERXUyBtYXkgbm90IGhhdmUgYW55dGhpbmcgdG8gZG8gd2l0aCAyMDIwLCBLYW1hbGEgc2VlbXMgc2hlIG1heSBiZSBIaWxsYXJ5IHJlcGxhY2VtZW50LiAKSXQgaXMgdGhlIGpvYiBvZiB0aGUgYmFua2VyIHRvIGRpc3RyaWJ1dGUgY2FyZHMgdG8gZWFjaCBwbGF5ZXIuIFRoZSBmaXJzdCBjYXJkIGlzIGFsd2F5cyBmYWNlIGRvd24sIGFuZCB0aGUgc2Vjb25kIGNhcmQgaXMgYWx3YXlzIGZhY2UgdXAuIApPZiBMb3JhaW4uIAoyOiBJbiB0aGUgb3V0IG9mIGRvb3JzIHRoZXJlIGFyZSBhIGxvdCBvZiBzaWducyBvZiBiZWFycyB0aGF0IHlvdSBuZXZlciBzZWUsIGZvciB3aGF0IHRoYXQgd29ydGghIFdlIHRveWVkIHdpdGggdGhlIGlkZWEgb2Ygc2hvd2luZyBhIGJlYXIgc29tZXdoZXJlIGluIHRoZSBzdG9yeSwgYnV0IGl0IG5ldmVyIGVuZGVkIHVwIGJlaW5nIG5lY2Vzc2FyeSBzbyB3ZSBkaWRuIGJ1aWxkIGl0LiBXZSB3ZXJlIGEgcHJldHR5IHNtYWxsIHRlYW0gYnVpbGRpbmcgdGhlIGdhbWUhLiAKUG9ydCBDaXR5IEJvd2xpbmcgQ2x1YgpXaGlsZSBvZmZsaW5lIHBsYXllcnMgY2FuIGZpbmQgbWFzc2l2ZSBwcml6ZSBwb29scyBvbmx5IGF0IHRoZSBjb3N0IG9mIHZlcnkgZXhwZW5zaXZlIGVudHJ5IGZlZXMsIG9ubGluZSBwb2tlciByb29tcyBhdHRyYWN0IGFuZCByZXdhcmQgcGxheWVycyB3aXRoIGh1Z2UgcHJpemUgcG9vbHMsIGJ1dCBzdGlsbCBrZWVwIHRoZSBidXkgaW4gYXQgZXZlcnlvbmUncyByZWFjaC4gSWYgeW91J3JlIGEgZ29vZCBwbGF5ZXIsIHlvdSBoYXZlIGEgc2hvdCBhdCBzY29yaW5nIHRob3VzYW5kcywgYW5kIHNvbWV0aW1lcyB0ZW5zIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzLCB3aXRob3V0IGV2ZW4gbGVhdmluZyB5b3VyIGhvbWUuLiAKR2xhdWJlIGlzdCBuaWNodCBmbHNzaWcsIGhjaHN0ZW5zIGJlcmZsc3NpZy4gR2xhdWJlIGxzc3Qgc2ljaCBuaWNodCBlaW5mcmllcmVuLCB1bmQgZG9jaCBzb2xsdGUgbWFuIHNlaW5lbiBHbGF1YmVuIGZyaXNjaCBoYWx0ZW4uIApJdCdzIGFsc28gYWxtb3N0IGltcG9zc2libGUgdG8gZ2V0IGEgY29ycmVjdCBkaWFnbm9zaXMgYW5kIG1lZGljYXRpb24gZ2l2ZW4gdGhhdCBtb3N0IHBlb3BsZSBhcmUgZXhwZXJpZW5jaW5nIGV4dHJlbWUgaGlnaHMgYW5kIGxvd3MgdGhlIGZpcnN0IHllYXIgb2Ygc29icmlldHkuIApJJ2QganVzdCBjYWxsLiAKSSB3b3VsZCB0ZWxsIHlvdSB0aGlzIG11Y2guIFNvbiwgSSB3b3VsZCBuZXZlciBoYXZlIHB1dCBtb3JlIHRoYW4gMywwMDAgaW4gd2l0aCB0d28gMTBzIGJlZm9yZSB0aGUgZmxvcCBTb24sIHlvdSB0aGUgc3Vja2VyLiAKVGhlIGNhc3RsZSBvY2N1cGllcyBhbiBpbXBvc2luZyBwb3NpdGlvbiBvbiBhIHNhbmRzdG9uZSBjbGlmZiBuZXh0IHRvIGEgYmVuZCBpbiB0aGUgcml2ZXIgQXZvbiAgIHBlcmhhcHMgbm90IHN1cnByaXNpbmcgZm9yIGEgc3RydWN0dXJlIGJ1aWx0IG9yaWdpbmFsbHkgZm9yIGRlZmVuc2l2ZSBwdXJwb3Nlcy4gCldoYXQgYSBzbGFwIGluIHRoZSBmYWNlIHRoYXQgbXVzdCBoYXZlIGJlZW4uIApTdW5zY3JlZW4gZm9yIHN1cmUuIApFeGFjdGx5ISBBbGwgb2YgdGhlc2UgZ3V5cyBzYXlpbmcgdGhleSB3b3VsZCBsb3ZlIGl0IGlmIGFuIGF0dHJhY3RpdmUgZ2lybCBhc2tlZCB0aGVtIG91dCwgd2hpbGUgY29tcGxldGVseSBpZ25vcmluZyB0aGF0IHRoZSBtYWpvcml0eSBvZiB1cyBhcmUgZ29pbmcgdG8gaGF2ZSB2YXJ5aW5nIGRlZ3JlZXMgb2YgcGh5c2ljYWwgYXR0cmFjdGl2ZW5lc3MuIEkndmUgYXNrZWQgb3V0IGEgZmV3IGd1eXMgdGhyb3VnaCBvdXQgbXkgbGlmZSwgYW5kIHRoZXkndmUgYWxsIHNhaWQgbm8uIApEJ2F1dHJlIHBhcnQsIGNvbmNlcm5hbnQgbGVzIGFsbG9jYXRpb25zIGZhbWlsaWFsZXMgdmVyc2VzIGR1IGZhaXQgZGUgY2UgcmVncm91cGVtZW50IGZvbmQgc3VyIGxhIHBvbHlnYW1pZSAobyB1bmUgInBvbHlnYW1pZSIgZGUgZmFpdCksIGlsIG1lIHNlbWJsZSBxdWUgY2VsYSBuJ2VzdCBwYXMgbm9uIHBsdXMgbm9ybWFsLCB2b2lyZSB0cmUgYW5hbHlzIGNvbW1lIHVuIGR0b3VybmVtZW50LgpUaGF0IGNvb2wuIApJIGRvbiB0aGluayB3ZSBrbm93IGVub3VnaCBhYm91dCB0aGUgT1AgdG8gZGVjaWRlIHdoZXRoZXIgaGUgaXMgaXJyYXRpb25hbGx5IG9yIHJhdGlvbmFsbHkgZGVwcmVzc2VkLiBGcm9tIGhpcyBwb2ludCBvZiB2aWV3LCBoZSBkb25lIG5vdGhpbmcgd29ydGh3aGlsZS4gCk91ciBzdHJldGNoIGdvYWwgd2FzIGZvciAxMCBmcmFuY2hpc2VzIGluIDIwMTEgYW5kIHdlIGhpdCAxOSBoYWxmd2F5IHRocm91Z2ggdGhlIHllYXIuIEdyb3d0aCBpcyBsaW1pdGVkIGJ5IGhvdyB3ZWxsIHlvdSBjYW4gZmluZCBncmVhdCBwYXJ0bmVycy4gV2UgZ3Jvd24gcXVpY2tseSBiZWNhdXNlIHdlIGJlZW4gYWJsZSB0byBhdHRyYWN0IGhpZ2ggY2FsaWJyZSBwZW9wbGUgcXVpY2tseS4gCkkgdGhpbmsgb25lIG9mIHRoZSBtb3N0IG1pc3NlZCBwb2ludHMgaW4gYW55IG9mIHRoZXNlIGFyZ3VtZW50cyBpcyB0aGF0IHVuZGVyIHRoZSBjdXJyZW50IHN5c3RlbSB3ZSBzaW1wbHkgcGF5IGEgbWlkZGxlIG1hbiB0byBhZG1pbmlzdGVyIG91ciBIZWFsdGhjYXJlIChpbnN1cmFuY2UgY29tcGFueSkuIApBbnl0aGluZyBjYW4gYmUgY29uc2lkZXJlZCBvbGQgICBzaG9lcywgY2xvdGhlcywgY2FycywgZWxlY3Ryb25pY3MuIApDb3ZlciBDcm9wcyBmb3IgR2FyZGVuZXJzOiBXaHksIEhvdyBXaGljaCBDb3ZlciBjcm9wcyBhcmUgZXNzZW50aWFsIHRvIGFueSBnYXJkZW4gdG8gcmVkdWNlIHNvaWwgZXJvc2lvbiwgY29uc2VydmUgc29pbCBtb2lzdHVyZSwgZW5oYW5jZSBhbmQgcHJvdGVjdCB3YXRlciBxdWFsaXR5LCBhbmQgYnVpbGQgZGlzZWFzZSBhbmQgaW5zZWN0IHJlc2lzdGFuY2UgYnkgcHJvdmlkaW5nIGRpdmVyc2l0eS4gTGVhcm4gaG93IGNvdmVyIGNyb3BzIGNhbiBpbXByb3ZlIHNvaWwgZmVydGlsaXR5IGFuZCByZWR1Y2UgaW5zZWN0IGFuZCB3ZWVkIHByb2JsZW1zLiAKRG93bmxvYWQgaXRzIG1vYmlsZSBhcHBzIGZvciBXb3JkLCBFeGNlbCwgYW5kIFBvd2VyUG9pbnQgZm9yIGZyZWUgLiAKQnV0IHN0aWxsLCBJIGRvbiB1bmRlcnN0YW5kIHdoeSB5b3UgcmVtb3ZlZCBoaW0gYXMgbW9kIHdoZW4gdGhlIGFkbWlucyBzcGVjaWZpY2FsbHkgcmVxdWVzdGVkIHlvdSBub3QgZG8gdGhhdC4gSWYgeW91IGJ1c3kgYW5kIGRpZG4gc2VlIHRoZSBhZG1pbiBtZXNzYWdlLCBJIGd1ZXNzIHRoYXQgbWFrZXMgc2Vuc2UsIGtpbmQgb2YsIGV4Y2VwdCBzZWVpbmcgYSBuZXcgbW9kIHRoYXQgeW91IGRpZG4gYWRkIHlvdXJzZWxmIHNob3VsZCBiZWVuIGEgY2x1ZSB0aGF0IGhlIHdhcyBhZGRlZCBieSBhbiBhZG1pbi4gSSBjb3VsZCB1bmRlcnN0YW5kIGlmIHlvdSB0aG91Z2h0IGl0IHdhcyBhIGhhY2tpbmcgYXR0ZW1wdCBvciBzb21ldGhpbmcsIGV4Y2VwdCBoZSBtYWRlIGEgcG9zdCBleHBsYWluaW5nIGV4YWN0bHkgd2hhdCB3YXMgaGFwcGVuaW5nLCBhbmQgaWYgeW91IHJlYWxseSBoYXZlIGFuIGFsdCBhY2NvdW50IHRoYXQgcGFydGljaXBhdGVzIGhlcmUsIHRoZW4geW91IGFscmVhZHkgd291bGQgaGF2ZSBrbm93biB3aGF0IGhhcHBlbmVkIGFuZCB0aGF0IGl0IHdhc24gYW55dGhpbmcgbWFsaWNpb3VzLi4gCkV2ZXJ5dGhpbmcgSSBzYWlkIHdhcyB0aGUgdHJ1dGguIEZhciBmcm9tIHRhbGtpbmcgb3V0IG15IGFzcy4KT25jZSB0aGUgcmVkdWN0aW9uIHRhcmdldCB3YXMgbWV0LCBvbmUgaW4gb25lIG91dCBiZWNhbWUgdGhlIG5ldyBzdGFuZGFyZC4gR2FyYmFnZSBiYWdzIG9mIGR1bWIgcnVsZXMsIHN1Y2ggYXMgdGhlIG9uZSBkaWN0YXRpbmcgdGhlIHNpemUgb2YgdGVsZXZpc2lvbnMgYWxsb3dlZCBpbiByZXN0YXVyYW50cywgd2VyZSBzZW50IHRvIHRoZSBjdXJiIGFuZCB0aGUgcHJvdmluY2UgY2l0aXplbnMgYXJlIGJldHRlciBmb3IgaXQuIE9uZSBpbiBvbmUgb3V0IHBvbGljeSB3YXMgc28gc3VjY2Vzc2Z1bCBhdCBlbGltaW5hdGluZyByZWQgdGFwZSB3aGlsZSBtYWludGFpbmluZyBoaWdoIGxldmVscyBvZiBoZWFsdGgsIHNhZmV0eSBhbmQgZW52aXJvbm1lbnRhbCBvdXRjb21lcywgaXQgbm93IGFuIGludGVybmF0aW9uYWwgbW9kZWwgZm9yIHJlZm9ybS4uIApMYWR5IEdhR2EpLCBMZXQgTG92ZSBEb3duLCBCbHVlYmVycnkgS2lzc2VzLCBSZWQgQW5kIEJsdWUsIFJldHJvIFBoeXNpY2FsLCBSb2NrIFNob3csIFNlY29uZCBUaW1lIEFyb3VuZCwgU2V4eSBVZ2x5LCBHbGl0dGVyIEFuZCBHcmVhc2UgKEFyb3VuZCksIE5vIEZsb29kcywgUmliYm9ucywgT2ggV2VsbCwgRnV0dXJlIExvdmUgKExpdmUpLCBPdXQgT2YgQ29udHJvbCAoc2hvcnQgZGVtbyksIFdvcmRzLCBXb25kZXJmdWwsIFdpc2ggWW91IFdlcmUgSGVyZSwgU2hha2UgWW91ciBLaXR0eSwgU29tZXRoaW5nIENyYXp5LCBGaWx0aHkgUG9wLCBGYW5jeSBQYW50cywgRmV2ZXIsIERpcnR5IEljZSBDcmVhbSwgS2FuZHkgTGlmZSwgRm9vbGVkIE1lIEFnYWluIChIb25lc3QgRXllcyksIFJlbG9hZGVkLCBDYXB0aXZhdGVkIEVsZWN0cmljIEtpc3MsIExpdmluZyBPbiBUaGUgUmFkaW8sIFNwaW4gVSBBcm91bmQgKGZlYXQuIExhZHkgR2FHYSksIE5vdGhpbicgT24gKEJ1dCBUaGUgUmFkaW8pLiAKSXRzIHByZXR0eSBtdWNoIGx1Y2sgYW5kIGVpdGhlciBoYW5kIGlzIGZpbmUuIApLaGFsaWZhJ3Mgc3RyZWFtcyBldmVyeXRoaW5nIGZyb20gY29va2luZyBkZW1vcyB0byBwbGF5aW5nIHZpZGVvIGdhbWVzIHRvIHVuYm94aW5nIHRoaW5ncyBzaGUgZ2V0cyBpbiB0aGUgbWFpbC4uIApJIHdlbnQgRWxmIGZvciBSYWNlIHRvIGhhdmUgYWNjZXNzIHRvIExvbmdib3dzLiBTcGVsbHMgYXJlIGdyZWF0LCBidXQgdGhlcmUgYXJlIGEgdG9uIG9mIGdyaW5kaW5nIGZpZ2h0cyB5b3UgZG9uIHdhbnQgdG8gd2FzdGUgbWFnaWMgYW5kIEFjaWQgU3BsYXNoICsgU25lYWsgQXR0YWNrIGlzIG9ubHkgbWVkaW9jcmUuIFBpY2tlZCB1cCBQb2ludCBCbGFuayBhbmQgUHJlY2lzZSBTaG90IHF1aWNrbHkuIApUaGlzIGlzIGJlY2F1c2UgdGhlIGxhcmdlIHN0YWNrIHdpbGwgaGF2ZSBmZXdlciBjb25zZXF1ZW5jZXMgYW5kIHNtYWxsIHN0YWNrcyB3aWxsIGdldCBhIHBsYXllciBkZXNwZXJhdGUuIApOZXcgc3lzdGVtcyB3aWxsIG5lZWQgdG8gaW50ZWdyYXRlIHNlYW1sZXNzbHkgd2l0aCB0aGUgc2VydmljZSBlbnZpcm9ubWVudCB3aGlsZSBiZWluZyBhdHRyYWN0aXZlIGFuZCBlYXN5IHRvIHVzZSBmb3IgY29uc3VtZXJzIG9mIGFsbCBhZ2VzLiBUaGUgcmVzZWFyY2hlcnMgcHJlZGljdCBjb21wYW5pZXMgdGhhdCBlbWJyYWNlIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGFuZCByb2JvdGljcyB3aWxsIGhhdmUgYSBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UuCkJhY2sgdGhlbiwgT2JhbWEgdHVybmVkIGZyb20gYW4gb2NjdXBhdGlvbiBmb3JjZSB0byBhIGRyb25lIGZvcmNlLCB3aGljaCByZWR1Y2VkIGNhc3VhbHRpZXMgY2F1c2VkIGJ5IEFtZXJpY2EgYnkgOTclLiAKU28gU3dlZGVuIG1heSBiZWNvbWUgdGhlIGZpcnN0IGNvdW50cnkgd2hlcmUgaXRzIGNpdGl6ZW5zIG1heSBoYXZlIHRvIGFjY2VwdCBuZWdhdGl2ZSBpbnRlcmVzdCByYXRlcyAocHJvYmFibHkgaW4gdGhlIGZvcm0gb2YgaGlnaGVyIGJhbmsgY2hhcmdlcyBvciBmZWVzKSBvciBiZSBmb3JjZWQgdG8gc3BlbmQgdGhlaXIgbW9uZXkgaW4gb3JkZXIgdG8gaXQgZnJvbSB0aG9zZSByYXRlcy4KWWVzLCB0aGUgY29tcGFueSBpcyB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSByZXNvdXJjZXMgb2Ygb3RoZXJzLCBidXQgaXQgYWxzbyBwYXJ0IG9mIHRoZSBqb2Igb2YgYSBjaXR5IHRvIHByb21vdGUgaXRzZWxmLiBCZWluZyB0b28gc3Rpbmd5IGhlbHBzIG5vYm9keS50cmVlIGZhcm1lciAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ29DaGluYSBzdHJhdGVneSBpcyBqdXN0IHRvIHdhaXQgdGhpcyBvdXQuIApVc2luZyB3aGF0ZXZlciBpbnN0cnVtZW50IHlvdSBiZWVuIGZyeWluZyB3aXRoLCByb3VnaGx5IGJlYXQgdGhlIGVnZyBpbiB0aGUgaG9sZSwgdGhlbiBkaXN0cmlidXRlIGl0IG91dCB0byB0aGUgcmljZS4gCk5vdywgaWYgaSBhbSBwbGF5aW5nIHdpdGggeW91ciBjaGlwcyBhbmQgY2hlY2tpbmcgb3V0IHlvdXIgb3Bwb25lbnQgb3V0IG9mIHRoZSBjb3JuZXIgb2YgbXkgZXllICh3aGljaCB3b3JrcyBldmVuIGJldHRlciBpZiB5b3UncmUgd2VhcmluZyBzdW5nbGFzc2VzIGxpa2UgbWFueSBvZiB0aGUgcHJvcyBkbyksIGhlIG9yIHNoZSBtYXkgbm90IHBpY2sgdXAgb24gaXQgYW5kIHdpbGwgZ2l2ZSBzb21ldGhpbmcgYXdheS4gSXQgZ29lcyBiYWNrIHRvIHRoZSBkaXN0cmFjdGlvbi9pbnRpbWlkYXRpb24gZmFjdG9yLiAoRnVsbCBBbnN3ZXIpV2hlbiB0byByYWlzZSBjaGlwcyBpbiBwb2tlcj9XaGVuIHlvdSBmZWVsIHlvdSBoYXZlIHRoZSBiZXN0IHN0YXJ0aW5nIGhhbmQuIApUaGVuIHlvdSBoYXZlIGdvb2QgY29hY2hlcyBhdCB0aGUgc2l0ZXMuIFVwc3dpbmcgaGFzIEZyaWVkIE11ZWxlcnMsIFBva2VyY29hY2hpbmcgaGFzIEFsZXggRml0emdlcmFsZC4gVGhleSByZWd1bGFybHkgcHVzaCBvdXQgZ29vZCBjb250ZW50IHdoaWxlIHRoZSByZXNwZWN0aXZlIG93bmVycyBkb24gcmVhbGx5IHRha2UgY29hY2hpbmcgc2VyaW91c2x5IGFuZCBmb2N1cyBzb2xlbHkgb24gdGhlICQkJC4KTm90IHRyeWluZyB0byBiZSBvZmZlbnNpdmUsIGp1c3QgaG9uZXN0bHkgY3VyaW91cy4gV2hhdCBnb2luZyBvbiB3aXRoIEFtZXJpY2FuIENhdGhvbGljcz8gSSBjYXRob2xpYyAoU3BhaW4pIGFuZCBldmVyeSBzdG9yeSBhYm91dCBDYXRob2xpY3MgaW4gUmVkZGl0IGp1c3QgYmxvd3MgbXkgbWluZCwgbGlrZSB0aGV5IGRpZmZlcmVudCBzcGVjaWVzLiBUaGV5IHNlZW0gdG8gYmUgZmFtb3VzIGZvciB0aGVpciBzZXZlcml0eSwgemVhbG90cnkgYW5kIHdlaXJkIGJlaGF2aW9yIGluIGdlbmVyYWwsIGFuZCBwZW9wbGUgaGVyZSBqdXN0IHNocnVnIGFuZCBzZWUgaXQgYXMgbm9ybWFsIGNhdGhvbGljIGJlaGF2aW9yLCBidXQgSSBzd2VhciBJIG5ldmVyIG1ldCBwZW9wbGUgbGlrZSB0aGF0IChleGNlcHQgdGhvc2UgaW4gcHNldWRvIGNocmlzdGlhbiBjdWx0cykgYW5kIGV2ZXJ5Ym9keSBpcyBjYXRob2xpYyBpbiBteSBjb3VudHJ5IGFuZCBuZWlnaGJvcnMsIHNvIEkgc2hvdWxkIGhhdmUgbm90aWNlZCBpZiB0aGlzIHdlcmUgdGhlIG5vcm0uClN1cmUsIGxpYWJpbGl0eSBsYXdzIHNob3VsZCBsaWtlbHkgYmUgc3Ryb25nZXIsIGJ1dCB5b3UgYXJlIGZpZ2h0aW5nIHRoZSBuYXR1cmUgb2YgdGhlIGJlYXN0LiAKVGhpcyBpcyBhIG5vdmVsIG1lY2hhbmlzbSBvZiBhY3Rpb24gb2YgdGhlc2UgZmF0dHkgYWNpZHMuIApJbiBvcmRlciB0byBlZmZlY3RpdmVseSBhc3NlcyBtYWduZXNpdW0gbGV2ZWxzIHRoYXQgcmVmbGVjdCBob3cgaXQgd29ya3MgaW4gdGhlIGJvZHkgeW91IG5lZWQgdG8gdGVzdCBjb250ZW50IGluIHRoZSByZWQgYmxvb2QgY2VsbHMuIApLWS4gSSdtIGN1cnJlbnRseSBzcGVuZGluZyAkMTIwIDE0MC93ZWVrIGZvciAyIHBlb3BsZSAoaW5jbHVkaW5nIHZhcmlvdXMgaG91c2Vob2xkIG5lZWRzIGxpa2UgdG9vdGhwYXN0ZSBvciBjYXQgZm9vZCkuIFdlIGVhdCBtb3N0bHkgcGFsZW8gKG1lYXQsIGZydWl0LCBhbmQgdmVnZXRhYmxlcywgbm8vbGl0dGxlIGdyYWluIGFuZCBubyBkYWlyeSkgYW5kIGVhdCBvdXQgcHJvYmFibHkgMngvd2Vlay4gKHVzdWFsbHkgb24gYSB3ZWVrZW5kIHdlIHdpbGwgZ3JhYiBhIHNhbmR3aWNoIHdoZW4gd2UgYXJlIG91dCBydW5uaW5nIGVycmFuZHMgYW5kL29yIGVhdCBvdXQgb24gYSBGcmlkYXkgbmlnaHQpLgpDbGFpciBDb2xsZWdlIE1STyBwcm9ncmFtIGZpenpsZWQgYWZ0ZXIgYSBmZXcgeWVhcnMuKSBXaGVuIHlvdSBhZGQgdHdvIHllYXJzIHRoZXJlIHRvIGFwcHJlbnRpY2VzaGlwIGF0IEFBUiwgdGhlIHRvdGFsIHRpbWUgY29tbWl0bWVudCBhbW91bnRzIHRvIGZpdmUgdG8gZWlnaHQgeWVhcnMsIGhlIHNhaWQsIGV4cGxhaW5pbmcgdGhlIGV4YWN0aW5nIHNraWxscyBhbmQga25vd2xlZGdlIG5lZWRlZCB0byBtYWludGFpbiwgcmVwYWlyIGFuZCBvdmVyaGF1bCBoaWdoIHRlY2ggYW5kIGNvbXBsaWNhdGVkIGFpcmNyYWZ0Li4gClRoaXMgdGV4dCBpcyBqdXN0IHNvIGphcmdvbnksIHRob3VnaCwgdGhhdCBpdCByZWFsbHkgZG9lc24gbWFrZSBtdWNoIHNlbnNlLiAKSXQgZGlkIG5vdCBhbnN3ZXIgdGhlIGtleSBxdWVzdGlvbjogV2hhdCBtYWRlIFBhZGRvY2sgc3RvY2twaWxlIGEgY2FjaGUgb2YgYXNzYXVsdCBzdHlsZSB3ZWFwb25zIGFuZCBmaXJlIGZvciBhYm91dCAxMCBtaW51dGVzIG91dCB0aGUgd2luZG93cyBvZiBNYW5kYWxheSBCYXkgaG90ZWwgY2FzaW5vIGludG8gYSBjcm93ZCBvZiAyMiwwMDAgcGVvcGxlLgpMaWUgb24gdGhlIGZsb29yIG9yIGEgYmVkIHdpdGggeW91ciBhcm1zIG5lYXIgeW91ciBzaWRlcyBhbmQgeW91ciBsZWdzIHNsaWdodGx5IHBhcnRlZC4gUmVsYXggeW91ciBlbnRpcmUgYm9keSBieSBsZXR0aW5nIGl0IHNpbmsgaW50byB0aGUgZmxvb3Igb3IgYmVkLiBCcmVhdGhlIGluIHNsb3dseSB0aHJvdWdoIHlvdXIgbm9zZSwgYW5kIHB1bGwgdGhlIGFpciBkZWVwbHkgaW50byB5b3VyIGx1bmdzIHVudGlsIHlvdSBmZWVsIHlvdXIgYWJkb21lbiByaXNlLiBTbG93bHkgZXhoYWxlLiBCZSBhdHRlbnRpdmUgdG8gaG93IHlvdXIgYm9keSBmZWVscyBhcyB5b3UgYnJlYXRoZSBpbiBhbmQgb3V0LiBBZnRlciB0d28gb3IgdGhyZWUgZGVlcCBicmVhdGhzLCByYWlzZSB5b3VyIGhhbmRzIGFib3ZlIHlvdXIgaGVhZCBhbmQgc3RyZXRjaCBhcyBpZiB5b3Ugd2VyZSB0cnlpbmcgdG8gdG91Y2ggdGhlIGNlaWxpbmcuIENvbnRpbnVlIGJyZWF0aGluZyB3aGlsZSB5b3Ugc3RyZXRjaC4gQmUgYXR0ZW50aXZlIHRvIGhvdyB5b3VyIGJvZHkgYW5kIHlvdXIgbWluZCBmZWVsIGFzIHlvdSBicmVhdGhlLiBTdHJldGNoIHlvdXIgd2hvbGUgYm9keSB1cHdhcmQuIEV4aGFsZSBzbG93bHkgYXMgeW91IGJyaW5nIHlvdXIgYXJtcyBiYWNrIGRvd24gdG8geW91ciBzaWRlcyBhbmQgbG93ZXIgeW91ciBoZWVscyB0byB0aGUgZmxvb3IuIFJlcGVhdCBvbmUgb3IgdHdvIG1vcmUgdGltZXMuCkFsZXJ0cyBwYXIgcGx1c2lldXJzIGFkaHJlbnRzIGF1IHN1amV0IGRlIGxhIHRycyBtYXV2YWlzZSB0ZW51ZSBkZSBjZXR0ZSBzdXByZXR0ZSwgbm91cyB5IGF2b25zIGZhaXQgdW4gdG91ciB1biBsdW5kaSBtYXRpbiBpbCB5IGEgdW5lIHBldGl0ZSBxdWluemFpbmUgZGUgam91cnMuIE5vdXMgeSBhdm9ucyB0cm91diBjZSBqb3VyIGwgdW5lIGJvbm5lIHF1YXJhbnRhaW5lIGRlIGRpZmZyZW50cyBwcm9kdWl0cyBmcmFpcyBwcmltcyAoZW4gbXVsdGlwbGVzIGV4ZW1wbGFpcmVzKSwgZGUgbGEgY2hhcmN1dGVyaWUgZW4gcGFzc2FudCBwYXIgZGVzIHBsYXRzIGN1aXNpbnMgZXQgZGVzIHByb2R1aXRzIGxhaXRpZXJzLiBOb3VzIGRjb3V2cmlvbnMgYXZlYyB1biBjZXJ0YWluIGVmZmFyZW1lbnQgZGVzIGRhdGVzIGRlIHByZW1wdGlvbiBkcGFzc2VzIHBvdXIgY2VydGFpbmVzIGRlIDEwIGpvdXJzISBVbmUgc2FsZXQgcGFydGljdWxpcmUgZGFucyBsZXMgYWxsZXMsIGRlcyBiYWNzIHN1cmdlbHMgb3V2ZXJ0cyBldCBtYWwgY2hhcmdzLCB1bmUgYWJzZW5jZSBkZSB0aGVybW9tdHJlIHBvdXIgdnJpZmllciBsYSB0ZW1wcmF0dXJlLiAKQ2FuIGtpZCBvdXJzZWx2ZXMgdGhlIGpvYiBpcyBkb25lLCBQb3J0byBjb2FjaCBBbmRyZSBWaWxsYXMgQm9hcyBzYWlkLiBoYXZlIHRvIGtlZXAgb3VyIGZlZXQgb24gdGhlIGdyb3VuZC4gVGhlIGF0bW9zcGhlcmUgYXdheSBmcm9tIGhvbWUsIGluIGEgZm9yZWlnbiBjaXR5LCB3aWxsIGJlIHZlcnkgZGlmZmVyZW50LiB3ZXJlIGRhbmdlcm91cyBpbiB0aGUgZmlyc3QgaGFsZiBhbmQgd2VyZSByZXdhcmRlZCBpbiB0aGUgY2xvc2luZyBzZWNvbmRzIHdoZW4gQnJhemlsIGZvcndhcmQgTmlsbWFyIGNyb3NzZWQgZm9yIG1pZGZpZWxkZXIgQ2FuaSB0byBoZWFkIHRoZSBMYSBMaWdhIHNpZGUgaW4gZnJvbnQuCktpbSdzIGZpdG5lc3Mgam91cm5leSBraWNrZWQgb2ZmIGxhc3QgeWVhciwgd2hlbiBzaGUgY2FtZSBhY3Jvc3MgInJpcHBlZCIgYm9keWJ1aWxkZXIgYW5kIHRyYWluZXIgTWVsaXNzYSBBbGNhbnRhcmEgb24gSW5zdGFncmFtIGFuZCB3YXMgaW50cm9kdWNlZCB0byB0aGUgd29uZGVycyBvZiBkZWFkbGlmdHMgYW5kIHBsYW5rcy4gQmVmb3JlIHRoZW4sIHRoZSBtb20gdG8gTm9ydGgsIDUsIFNhaW50LCAyLCBhbmQgQ2hpY2FnbywgNyBtb250aHMsICh3aXRoIGh1c2JhbmQgS2FueWUgV2VzdCkgYWRtaXR0ZWQgb24gaGVyIGFwcCwgIkkgdXNlZCB0byB0aGluayB0aGF0IGxpZnRpbmcgd2VpZ2h0cyB3YXMgaW50aW1pZGF0aW5nIGJlY2F1c2UgSSBkaWRuJ3Qgd2FudCB0byBsb29rIGJ1bGt5LiIgU2hlIHdhbnRlZCB0byBsb29rIGFuZCBmZWVsIHN0cm9uZ2VyIGFuZCBidWlsZCBsZWFuIG11c2NsZSwgc2hlIHNhaWQsIHNoZSBqdXN0IGRpZG4ndCByZWFsbHkga25vdyBob3cgdG8gZ28gYWJvdXQgaXQuIApUaGVzZSBsYXJnZSBwdWJsaXNoZXJzIGFyZW4gZ2FtZXMgY29tcGFuaWVzIGFzIG11Y2ggYXMgdGhleSBhcmUgbWFya2V0aW5nIGNvbXBhbmllcy4uIApXZSB3ZXJlIGRhcmluZyBlYWNoIG90aGVyIHRvIG9wZW4gdGhlIGRvb3IuIApNYXJsaXNlIE11bm96IGNhc2UgaXMgbW9yZSBpbnRlcmVzdGluZy4gSSBkb24gaGF2ZSBhIHJlYWwgYW5zd2VyIHRvIGl0LiBOb25ldGhlbGVzcywgdmVyeSBkaWZmZXJlbnQgZnJvbSBhIG5hdGlvbiBtYW5kYXRpbmcgdGhhdCBzb21lb25lIENBTk5PVCB0cmF2ZWwgdG8gZ2V0IG1lZGljYWwgY2FyZSBpbiBhbm90aGVyIG5hdGlvbi4KTm92ZW1iZXIgMDggMjAxN0VtYWlsVHdpdHRlclBpbnRlcmVzdEZhY2Vib29rUG9rZXIgc2V0cyBBZnRlciAyMCB5ZWFycyBvZiBoYW5kY3JhZnRpbmcgZnVybml0dXJlIGZvciBjbGllbnRzIGluY2x1ZGluZyBDYWx2aW4gS2xlaW4sIFJhbHBoIExhdXJlbiBhbmQgUGFyayBMYW5lJ3MgR3Jvc3Zlbm9yIEhvdXNlIGhvdGVsLCBtYXN0ZXIgd29vZHdvcmtpbmcgY29tcGFueSBMYW5jZWxvdCBMYW5jYXN0ZXIgV2hpdGUgYmVnYW4gbWFraW5nIHBlcnNvbmFsaXNlZCBwb2tlciBzZXRzIChmcm9tIDUwLDAwMCkgdGhhdCBjYW4gaW5jb3Jwb3JhdGUgYSBmYW1pbHkgY3Jlc3QsIHRva2VucyBvZiBtZW1vcmFiaWxpYSwgb3IgaGF2ZSB0aGVpciB2ZW5lZXJzIGFuZCBsaW5pbmdzIG1hdGNoZWQgdG8gdGhvc2Ugb2YgYSB5YWNodCwgY2FyIG9yIGludGVyaW9yIGRlc2lnbiBzY2hlbWUuIERldmVsb3BlZCB1bmRlciB0aGUgZ3VpZGFuY2Ugb2YgdGhlIGhlYWQgb2YgcG9rZXIgYXQgTGVzIEFtYmFzc2FkZXVycyBnYW1pbmcgY2x1YiwgZWFjaCBzZXQgaXMgbWFkZSBieSBhIHRlYW0gb2YgYXJ0aXNhbnMgZHJhd24gdG9nZXRoZXIgZnJvbSBhY3Jvc3MgdGhlIEJyaXRpc2ggSXNsZXMsIGFuZCBldmVyeSBwYXJ0IG9mIHRoZSBib3ggYW5kIGl0cyBjb250ZW50cyBjYW4gYmUgY3VzdG9taXNlZCwgZnJvbSB0aGUgbmFtZXBsYXRlIHRvIHRoZSBmZWV0IG9yIHRoZSBoYW5kbGVzLCBhbmQgZXZlbiB0aGUgYWxsIGltcG9ydGFudCBjaGlwcy4gQ0FNSUxMQSBBUENBUi4gSGFuZGNyYWZ0ZWQgaW4gVHVyaW4sIHRoZSBjdXN0b21pc2FibGUgc3R5bGVzIGluIHRoZSBUZWNrZWxsIGNvbGxlY3Rpb24gaW5jbHVkZSB0aGUgQ3Jpc3RhbGxpbm8gR29sZCBMRSAocHJpY2Ugb24gcmVxdWVzdCksIHdpdGggMjRjdCBnb2xkIHBsYXRlZCBwbGF5ZXJzIGFuZCBhY2Nlc3NvcmllcywgYW5kIHRoZSBtb3JlIG1pbmltYWxpc3QgQ29udHJvcGllZGUgKHByaWNlIG9uIHJlcXVlc3QpLCB3aGljaCBoYXMgYSBxdWlldCBhcmNoaXRlY3R1cmFsIGJlYXV0eSBpbiBnbGFzcyBvciBzb2xpZCB3YWxudXQuIEZvciBhIG1vcmUgZm9ybWFsIGZlZWwsIHRoZSBzbWFsbGVyIEludGVydmFsbG8gKHByaWNlIG9uIHJlcXVlc3QpIHdpdGggaXRzIGRpYW1vbmQgc2hhcGVkIGNhc2UgcGVyZmVjdGx5IGJyaWRnZXMgdGhlIGdhcCBiZXR3ZWVuIGNvZmZlZSBhbmQgZ2FtZXMgdGFibGUuIENIUklTVElOQSBPSExZIEVWQU5TLiBSZWFkIG1vcmUgYWJvdXQgdGhlIFRlY2tlbGwgZm9vc2JhbGwgdGFibGVzCkhhdmUgeW91IHRyaWVkIGNvbW11bmljYXRpbmcgd2hhdCBkZWxpdmVyYWJsZXMgYW5kIG9yIGRldGFpbHMgeW91IGZlZWwgdGhhdCBzaGUncyBtaXNzaW5nPyBIYXZlIHlvdSBoYWQgYW4gb3ZlcmFyY2hpbmcgcGxhbm5pbmcgbWVldGluZyB0aGF0IGRlc2lnbmF0ZXMgeW91ciB0YXNrcyB2cy4gCldoZW5ldmVyIHlvdXIgb3Bwb25lbnRzIG1ha2UgYSBkaWZmZXJlbnQgZGVjaXNpb24gdGhhbiB0aGV5IHdvdWxkIGhhdmUgbWFkZSBpZiB0aGV5IGNvdWxkIHNlZSB5b3VyIGNhcmRzLCB5b3Ugd2luLiAKT3ZlcnZpZXcgZm9yIEphY2sKSW5zdGVhZCBvZiBqdXN0IG1pbGtpbmcgdGhlIGNvbmNlcHQgb2YgYW4gb2Jub3hpb3VzIHBva2VyIHBsYXllciBmb3IgbGF1Z2hzLCBpdCBzaG93cyB1cyB3aHkgaGUncyBzbyBvYm5veGlvdXMsIGFuZCBob3cgaGUgYmVjYW1lIHN1Y2ggYSBqZXJrLiAKSW4gbWFueSBvZiB0aGUgdmljZSB1bml0J3MgZWFybGllciBzdGluZ3MsIG1lbiB3ZXJlIGFycmVzdGVkIHRoZW4gcmVsZWFzZWQsIGxhdGVyIHJlY2VpdmluZyBzdW1tb25zZXMgaW4gdGhlIG1haWwuIEJ1dCBVbXBvcm93aWN6J3MgY2hhaW4gb2YgY29tbWFuZCBoYXMgc3RyZXNzZWQgdGhhdCB3aGVuZXZlciBwb2xpY2UgcmVzb3VyY2VzIGFsbG93LCB0aGVyZSBzaG91bGQgYmUgbWFuZGF0b3J5IGphaWwgYm9va2luZ3MgZm9yIG1lbiBhcnJlc3RlZCBmb3Igc2V4dWFsIGV4cGxvaXRhdGlvbi4gSXQncyB0aGUgcmVsYXRpdmVseSBuZXcgbmFtZSBhZG9wdGVkIGJ5IHRoZSBDaXR5IEF0dG9ybmV5J3MgT2ZmaWNlIGZvciB0aGUgbWlzZGVtZWFub3IgY3JpbWUgb2Ygd2hhdCB1c2VkIHRvIGJlIGtub3duIGFzIHBhdHJvbml6aW5nIGEgcHJvc3RpdHV0ZS4KQnV0IHNoZSB3YXMgYWJzb2x1dGVseSBudXRzLiBIZXIgZXggaHVzYmFuZCBoYWQgcmVtYXJyaWVkLCB5ZWFycyBhZ28sIGFuZCBoYWQgZml2ZSBraWRzIHdpdGggaGlzIG5ldyB3aWZlLiBUaGV5IGhhZCB0d28geW91bmcgY2hpbGRyZW4gYW5kIHdoZW4gbXkgZnJpZW5kIGFuZCBoZXIgc2lzdGVyIHdvdWxkIGdvIG92ZXIgdG8gdmlzaXQgdGhleSB3b3VsZCBjb21lIGhvbWUgdG8gdGhlaXIgbW9tIGFuZCBBdmEgd291bGQgYmFzaWNhbGx5IGdyb29tIHRoZW0gYW5kIGdhc2xpZ2h0IHRoZW0gdG8gbWFrZSB0aGVpciBmYXRoZXIgc291bmQgYmFkLiAKSWYgeW91IHdvcmsgYXQgYSBkZXNrLCBpdCBjYW4gYWxzbyBoZWxwIHRvIHVzZSBhIHBhZCB1bmRlciB5b3VyIHdyaXN0cyAodG8ga2VlcCB5b3VyIHdyaXN0IHN0cmFpZ2h0KSwgYW5kIHRvIHJlc3QgeW91ciBoYW5kcyBvbiB0aGVpciBzaWRlcyAodGh1bWJzIHVwLCBwaW5raWVzIGRvd24pIHdoZW4geW91IGFyZW4ndCBhY3RpdmVseSB0eXBpbmcuLiAKVGhlcmUgd2VyZSBlbXB0eSBscXVvciBib3R0bGVzIGV2ZXJ5d2hlcmUuIFRoZSBzdGVuY2ggd2FzIGp1c3Qgb3ZlcndoZWxtbmcuIApQbHVzIHlvdSBjYW4gbG9hbiBpdCBvdXQgdG8gYW55IGZyaWVuZHMgb3IgZmFtaWx5IHdobyBtYXkgYWxzbyBiZSBjb25jZXJuZWQgYWJvdXQgcmFkb24uLiAKQXMgaWYgdGhleSB0aGVtc2VsdmVzIGNvdWxkbiBiZSB0b3hpYy5TaGUgd2FzIGEgbWlub3Igd2hlbiBzaGUgd2FzIGJlaW5nIHBpbXBlZCBvdXQgYnkgYSAyNCB5ZWFyIG9sZCBtYW4uIEEgNDMgeWVhciBvbGQgcmVhbCBlc3RhdGUgYWdlbnQgd2hvIHBhaWQgdG8gc2xlZXAgd2l0aCBoZXIgcHVsbGVkIG91dCBhIGd1biwgc2hlIGZlYXJlZCBmb3IgaGVyIGxpZmUsIGFuZCBzaGUgc29tZWhvdyB3YXMgYWJsZSB0byBraWxsIGhpbSBmaXJzdC5Db3VydHMgZGlkIG5vdCBzZWUgdGhpcyBhcyBiZWluZyBzZWxmIGRlZmVuc2UsIGJlY2F1c2Ugc2hlIHdhcyBhbHNvIGNoYXJnZWQgd2l0aCBwcm9zdGl0dXRpb24sIGFuZCB0aGF0IG1hZGUgaGVyIHNlZW0gbXVjaCBsZXNzIGlubm9jZW50LCBtdWNoIGxlc3Mgb2YgYSB2aWN0aW0uVGhleSBjaGFyZ2VkIGhlciBhcyBhbiBhZHVsdCBhbmQgZ2F2ZSBoZXIgYSBsaWZlIHNlbnRlbmNlLiBTaGUgaGFzIGJlZW4gaW4gcHJpc29uIHNpbmNlIDIwMDQgYW5kIGlzIG9ubHkgZmluZGluZyBsZXZlcmFnZSBmb3IgY2xlbWVuY3kgaW4gYSAyMDEyIFN1cHJlbWUgQ291cnQgcnVsaW5nIHN0YXRpbmcgbGlmZSBzZW50ZW5jZXMgZm9yIGp1dmVuaWxlcyB3aXRob3V0IHBhcm9sZSBpcyBjcnVlbCBhbmQgdW51c3VhbC4gCllvdSBnb3R0YSBhZG1pcmUgdGhlaXIgb3JnYW5pemF0aW9uOyB0aGV5IGRvIHRoaW5ncyByaWdodCBhbmQgdGhleSBiZWVuIGRvaW5nIGl0IGZvciBhIGxvbmcsIGxvbmcsIGxvbmcgdGltZS4gSSBkZWZpbml0ZWx5IHdvdWxkIGxvdmUgdG8gYmUgYSBwYXJ0IG9mIHNvbWV0aGluZyBsaWtlIHRoYXQuIEEgUHJvIEJvd2xlciBpbiAyMDE0LCBpcyBjb21pbmcgb2ZmIGEgc2Vhc29uIHNwbGl0IGJldHdlZW4gRGV0cm9pdCBhbmQgUGhpbGFkZWxwaGlhLCBhIHRyYWRlIGRlYWRsaW5lIGFjcXVpc2l0aW9uIHdobyBjdW11bGF0aXZlbHkgdG90YWxlZCA3NCBjYXRjaGVzIGZvciA3OTUgeWFyZHMgYW5kIGZvdXIgdG91Y2hkb3ducy4gCkkgZHJvdmUgZm9yIFViZXIgbXlzZWxmIGZvciBxdWl0ZSBhIHdoaWxlIGFuZCBuZXZlciBleHBlY3RlZCBhIHRpcCwgbmtyIHdhcyBJIHVwc2V0IGlmIEkgZGlkbiBnZXQgb25lLiAKTWF5YmUgaXQgd2FzIHRoZSBlbWJhcnJhc3NtZW50IHRoYXQgc2hlIGhpdCB0aGUgc3Ryb2xsZXIsIGJ1dCB0byBtZSB0aGF0IGlzIG5vIGV4Y3VzZSB0byBub3QgYXQgbGVhc3QgdHVybiBhbmQgc2F5IHNvcnJ5IGFuZCBhc2sgaWYgdGhlIGJhYnkgaXMgT0suIApXb3Jrb3V0IHJldmlldzogR2V0dGluZyBzdHJlZXQgc21hcnQgd2l0aCBLcmF2IE1hZ2EgaW4gQnJvb21maWVsZApFeC4gSWYgaXQncyBzbm93aW5nIG91dCBhbmQgeW91IHdvdWxkICJuZXZlciBnbyBvdXQgaW4gdGhhdCBtZXNzIiBnbyBvdXQgaW4gdGhhdCBtZXNzIGFuZCBwbGF5IGFyb3VuZC4gWW91J3JlIHBhcnRuZXIgd2lsbCBiZSBpbnRyaWd1ZWQgdGhhdCB5b3Ugb2YgYWxsIHBlb3BsZSBhcmUgZG9pbmcgdGhhdCB0aGluZyB0aGF0IHlvdSBzYWlkIHlvdSdkIG5ldmVyIGRvLiAKU28gZHVyaW5nIHRoZSBtYXNzYWdlIHNoZSBhc2tzIGlmIHdlIGNhbiBiZSBkb25lIGVhcmx5LiBTbyBteSBob3VyIG1hc3NhZ2UgaXMgbm93IDM1IG1pbnV0ZXMuIApTbyBpbiBlaXRoZXIgY2FzZSwgaWYgeW91IGdldCBhbiBBIG9yIGEgSyBvbiB5b3VyIGZpcnN0IGNhcmRzLCB0aGVyZSBhcmUgNCBwb3NzaWJsZSBjYXJkcyBvdXQgb2YgdGhlIHJlbWFpbmluZyA1MSBjYXJkcyB0aGF0IHdpbGwgbWFrZSB0aGUgQUsgaGFuZCwgd2hpY2ggaXMgYSBwcm9iYWJpbGl0eSBvZiA4LzUxID0gLjA3ODQzMSAuLiAKV2hlbiBhIG1hcCBlbmRzLCBldmVyeWJvZHkgdm90ZXMgYmV0d2VlbiAzIG1hcHMgZm9yIHRoZSBnYW1lbW9kZSB0aGF0IHdhcyBqdXN0IHBsYXllZC4gV2hlbiB2b3RlIGVuZHMsIHRoZSBtYXAgaXMgbG9hZGVkIGltbWVkaWF0ZWx5IGFuZCB3YXJtIHVwIHN0YXJ0cyBhbmQgbGFzdHMgdW50aWwgdGhlIHNlcnZlciBmaW5kIHJlcGxhY2VtZW50cyBmb3IgdGhlIHBsYXllcnMgdGhhdCBsZWZ0IChpZiBhbnkgbGVmdCBhZnRlciB0aGUgZmlyc3QgbWFwKS4gRHVyaW5nIHRoZSB3YXJtIHVwIHBlb3BsZSBvZiBjb3Vyc2UgYXJlbiBpbiB0aGUgbWVudTsgdGhleSBpbiB0aGUgZ2FtZSwganVtcGluZyBhcm91bmQgc2hvb3RpbmcgZWFjaCBvdGhlci4gVGhpcyBpbW8gaXMgdGhlIGJlc3Qgd2F5IHRvIGRvIGNvbnRpbnVvdXMgcGxheSwgbm90IHNlcnZlciBicm93c2VyLgpZZXMgSSBoYXZlIGNvbnNpZGVyZWQgYW4gZXNjb3J0LCBidXQgSSBub3QgZXhhY3RseSB3aWxsaW5nIHRvIGdvIHRoYXQgZmFyLi4gClRoaXMgaXMgYW4gRllJIGZvciBNaWNyb2NlbnRlciAgeW91IGNhbiBwdWxsIGV2ZXJ5dGhpbmcgeW91IHdhbnQgb25saW5lLCB3YWxrIGluIGFuZCB0aGV5IGhhdmUgdGhlbSByZWFkeS4gClRoZSBldmlkZW5jZSwgdGhlIGp1ZGdlIGNvbmNsdWRlZCB0aGUgdGF4cGF5ZXIgbm90IGNvbmR1Y3QgaGlzIGFjdGl2aXRpZXMgaW4gYSBjb21tZXJjaWFsIG1hbm5lciBmb3IgcHJvZml0LiAKVGhlIGZvbGxvd2luZyBsZXR0ZXIgd2FzIHJlY2VpdmVkIGJ5IHRoZSBwYXJlbnRzIG9mIFNlcmdlYW50IE9ic2VydmVyIFJvYmVydCBBbGxkcmljaywgd2hvc2UgcGxhbmUgd2FzIHNob3QgZG93biBvdmVyIEhvbGxhbmQgc29tZSBtb250aHMgYWdvLCBhbmQgd2hvIGlzIG5vdyBhIHByaXNvbmVyIG9mIHdhciBpbiBhIEdlcm1hbiBpbnRlcm5tZW50IGNhbXAuIEl0IHdhcyBwb3N0ZWQgRGVjZW1iZXIgMzAsIGFuZCBhcnJpdmVkIGluIEdyaW1zYnkgb24gRmVicnVhcnkgMjUuIApJIGhhdmUgYSBxdWVzdGlvbiBmb3IgeW91OlllcywgVGhlIExvcmQgU2F2aW91ciBmb3IgdGhpcyB3aG9sZSB1bml2ZXJzZSAiIFlFU0hVQSBIQU1BU0hJQSAgTE9SRCBKRVNVUyBDSFJJU1QiIHdpbGwgY29tZSB0byB0YWtlIGF3YXkgSGlzIEJyaWRlIG9yIG9iZWRpZW50IGNoaWxkcmVuIGF3YXkgZ2l2ZSB0aGVtIGEgcGVybWluYW50IHJlc2N1ZS4gSGUgaGFkIGFpciBvZiBhcnJvZ2FuY2Ugc2VsZiBpbXBvcnRhbmNlOyBhcyBpZiBoZSBpcyBhIGdvZCBpbiBoaXMgb3duIGV5ZXMuIFNlZW1zIGxpa2UgdGhhdCBhbGwgdGhlIHRlY2huaWNhbCBkZXZpY2VzIGFyZSByZXBsYWNlZCB3aXRoIHRoZSBsYXRlc3QgdXBkYXRlZCB1bml0cyBmb3IgYnVzaW5lc3MgZ3Jvd3RoIGRldmVsb3BtZW50LiAKQWdhaW5zdCB0aGlzIGluY29tZSwgaGUgY2xhaW1lZCBidXNpbmVzcyBleHBlbnNlcyB0b3RhbGxpbmcgJDMyLDg3MSByZXN1bHRpbmcgaW4gYSBuZXQgYnVzaW5lc3MgbG9zcyBvZiAkMjksNzMxIGZvciB0aGUgMjAwNyB0YXggeWVhci4gCktlZXAgaW4gbWluZCB0aGF0IHlvdSBzaG91bGQgcmFpc2UgbW9yZSB2cy4gc21hbGwgYmV0cyB0aGFuIHlvdSBzaG91bGQgdnMuIGJpZyBiZXRzLiBGb3IgZXhhbXBsZSwgQVRzIGlzIGEgaGlnaCBmcmVxdWVuY3kgcmFpc2UgZmFjaW5nIGEgMS8zIFBTQiBvbiBUNzJyLCBidXQgaXMgZmFyIGxlc3MgbGlrZWx5IHRvIGJlIHJhaXNlZCB2cy4gYSAxMDAlIFBTQiBvbiB0aGUgc2FtZSBib2FyZC4gQXMgYmV0IHNpemUgZGVjcmVhc2VzLCB0aGUgYmV0dGluZyByYW5nZSBiZWNvbWVzIG1vcmUgbWVyZ2VkLCBhbmQgdGhlcmVmb3JlIHlvdSBjYW4gcmFpc2Ugd2lkZXIgZm9yIHZhbHVlLiBUaGF0IGFsc28gbWVhbnMgeW91IHJhaXNlIG1vcmUgYXMgYSBibHVmZiBiZWNhdXNlIHlvdSBoYXZlIG1vcmUgdmFsdWUgY29tYm9zLgpQbGVhc2UgZ2V0IGl0LiBJIGJlZW4gdGhlcmUgYXQgM2FtIGluIHRoZSBWZXQgRVIuIHdpdGggdGhlIHZldCB0ZWxsaW5nIG1lIEkgaGF2ZSB0byBmb3JrIHVwICQ0MDAwIGZvciBlbWVyZ2VuY3kgc3VyZ2VyeSwgYXQgbGVhc3QgJDM1MDAgcGFpZCB1cCBmcm9udCBmcm9udCwgb3IgaGUgd2FzIGdvaW5nIHRvIGRpZSBieSBtb3JuaW5nLgpJZiB5b3UncmUgZ29pbmcgdGhlIG9uZSBvbiBvbmUgcm91dGUsIHlvdSB3YW50IHRvIG1ha2Ugc3VyZSBldmVyeSBzaG90IHBhY2tzIHRoZSBiaWdnZXN0IHB1bmNoIHBvc3NpYmxlLiBJbiB3aGljaCBjYXNlLCB5b3UgbWF5IHdhbnQgdG8gbG9vayBhdCB0aGUgVml0YWwgU3RyaWtlIGZlYXRzLCBhbG9uZyB3aXRoIHRoZWlyIGFjY2Vzc29yaWVzIGxpa2UgRGV2YXN0YXRpbmcgU3RyaWtlIHRvIGdpdmUgeW91IGEgbGl0dGxlIGV4dHJhIHB1bmNoLiBXaGVuIHlvdSBjb21iaW5lIHRob3NlIHdpdGggYSBoaWdoIEluaXRpYXRpdmUsIGFuZCBldmVuIGEgZmV3IHNuZWFrIGF0dGFjayBkaWNlLCBnZXR0aW5nIG9mZiB0aGF0IGZpcnN0IHNob3QgY2FuIGJlIHRydWx5IGV4cGxvc2l2ZS4KRGV0ZXJtaW5lZCB0byBwcm92ZSB0aGVtIHdyb25nIGhlIG1hc3RlcmVkIGhpcyBwZXJmb3JtYW5jZSB3aXRoIGhpcyBvd24gY3VzdG9tIG1hZGUgcmluZyBhbmQgc2hhdmVkIGhlYWQgdG8gcGVyZmVjdGlvbi4gCkEgcGxheWVyJ3MgYnJlYXRoaW5nIHBhdHRlcm4gY2FuIGJlIGEgdmVyeSBtZWFuaW5nZnVsIHRlbGwuIEhpcyBicmVhdGhpbmcgY2hhbmdlcyBhcmUgYWxtb3N0IG5ldmVyIGludGVudGlvbmFsLiBUaGUgY2xvc2VyIHlvdSBhcmUgdG8gdGhlIHBsYXllciwgdGhlIGJldHRlciB0aGlzIHRlbGwgd2lsbCB3b3JrIGZvciB5b3UuIFNoYWxsb3cgYnJlYXRoaW5nLCBvciBhbiBhdHRlbXB0IHRvIGF2b2lkIGJyZWF0aGluZyBsb3VkbHkgaXMgYSBzaWduIG9mIGEgd2VhayBoYW5kLgpJIHNsYW0gbXkgYmxhY2sgY2hpcCBvbiBiYW5rZXIuIApUaGlyZCBQYXJ0eSBDb250ZW50IGlzIG5vdCB1bmRlciBvdXIgY29udHJvbCwgYW5kIHdlIGFyZSBub3QgcmVzcG9uc2libGUgZm9yIGFueSBvZiB0aGVpciB3ZWJzaXRlcywgcHJvZHVjdHMsIG9yIHNlcnZpY2VzLiAKV2UgZGF0ZWQgYnJpZWZseSBhbmQgdGhlbiBzcGxpdCwgYW5kIGhlIHdlbnQgYmFjayB0byBvbGQgZ2YgYW5kIGhhZCBhbm90aGVyIGtpZC4gVGhleSBzcGxpdCB3aGVuIG5ldyBraWQgd2FzIGFuIGluZmFudCwgYW5kIGhlIHJlYWNoZWQgb3V0IHRvIG1lIHRvIHJla2luZGxlIHRoaW5ncy4gCk1hbnkgd2VkZGluZ3MgaGF2ZSB5b3UgYmVlbiB0byB3aGVyZSB0aGUgY291cGxlIHNhaWQ6IFdlIHdhbnRlZCB0byBkbyBzb21ldGhpbmcgZGlmZmVyZW50LiAKRnJlZSBPbmxpbmUgU2xvdHMgRm9yIHRoZSB3aG9sZSBmYW1pbHkgVG8gUGxheSBObyBEb3dubG9hZCBOZWVkZWQKVGhlcmUsIHdhcyBubyBpbW1lZGlhdGUgY29tbWVudCB0aGVzZSBvZmZpY2lhbHMgb24gdGhlIHNpdHVhdGlvbiBpbiBUaGFpbGFuZC4gCkl0IGlzIHRvIGxpdmUgaW4gdGhlIGNydWVsbGVzdCBhbmQgbW9zdCBibG9vZHkgcmVnaW1lIGltYWdpbmFibGUuIAoyLiAKSm9obiBNY0NhaW4gKFIgQVopKFIpIHNoYXJlIGEgbGF1Z2ggd2hpbGUgcGFydGljaXBhdGluZyBpbiBhIG5ld3MgY29uZmVyZW5jZSB3aXRoIHBlcnNvbnMgd2l0aCBkaXNhYmlsaXRpZXMgb24gQ2FwaXRvbCBIaWxsLCBEZWNlbWJlciAzLCAyMDEyIGluIFdhc2hpbmd0b24sIERDLiBTZW5hdGUgRm9yZWlnbiBSZWxhdGlvbnMgQ2hhaXJtYW4gSm9obiBLZXJyeSAoRCBNQSkgaW4gdXJnaW5nIGZlbGxvdyBTZW5hdG9ycyB0byBhcHByb3ZlIHRoZSAiQ29udmVudGlvbiBvbiB0aGUgUmlnaHRzIG9mIFBlcnNvbnMgd2l0aCBEaXNhYmlsaXRpZXMgYmlsbCwgYW4gaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnQgZm9yIHByb3RlY3RpbmcgdGhlIHJpZ2h0cyBvZiBpbmRpdmlkdWFscyB3aXRoIGRpc2FiaWxpdGllcy4gClNoaXQsIEkgd291bGRuJ3QgbWluZCBiZWNvbWluZyB1bHRyYSByaWNoIGVpdGhlci4gQnV0IGZyb20gbXkgZXRoaWNhbCBzdGFuZCBwb2ludCwgdGhlIG1vcmUgSSBoYXZlIGVxdWFscyB0aGUgbW9yZSBJIGNhbiBzaGFyZS4gVGhhdCdzIGEgaHVnZSBkaWZmZXJlbmNlIGluIHBlcnNwZWN0aXZlLiAKRm9yIEJyYWR5LCBHdWVycmVybyBwcm92ZWQgaGlzIHdvcnRoIGFzIGFuIGFkdmlzZXIgc29vbiBhZnRlciB0aGV5IG1ldCBuZWFybHkgYSBkZWNhZGUgYWdvLiAKSGFoYSAgIHRoYXQgZGVmaW5pdGVseSBoZWxwZWQgbWUgYXMgd2VsbC4gVGhleSB3b3VsZCBmb3JnZXQgZHJpbmtzLCBzYXVjZXMsIGV2ZW4gc29tZXRpbWVzIGZyaWVzLiBNYW55IGRyaXZlcnMgd29yayBmb3IgbW9yZSB0aGFuIDEgZm9vZCBkZWxpdmVyeSBjb21wYW55IGFuZCBJIHNlZSB0aGUgZHJpdmVyIG9uIHRoZSBHUFMgcGFya2VkIHNvbWV3aGVyZSBmb3IgMzAgbWludXRlcyBvciBkcml2aW5nIHRvIGFub3RoZXIgcGFydCBvZiB0aGUgY2l0eS4gCllvdSBoYW5kbGVkIHRoaXMgd2l0aCBtaW5pbXVtIGZ1c3MgYW5kIG1heGltdW0gZGlnbml0eSwgT1AuIFdoYXQgdGhlIGdpcmwgdG8gZ2lybCBlcXVpdmFsZW50IG9mIGEgYnJvZmlzdD8gQmVjYXVzZSBJIGdvdCBvbmUgd2l0aCB5b3VyIG5hbWUgYWxsIG92ZXIgaXQuIFNpc2Zpc3QgY29taW5nIGF0IHlvdSwgT1AuIE9rLCBtYXliZSB0aGF0IG5vdCBhIGdvb2QgaWRlYSAgIGRvIHBlb3BsZSBzdGlsbCBzYXkgcHJvcHMgb3IgbWFkIHJlc3BlY3Q/IE5vLCBJIGd1ZXNzIHRoZXkgZG9uIFdlbGwsIHNoaXQuIFVtLCBsZXQganVzdCBnbyB3aXRoIGtlZXAgb24ga2VlcGluIG9uLCBhaW4gbm8gTmF6aSBhY2N1c2F0aW9ucyBnb25uYSBzbG93IHlvdSBkb3duLiBFeGNlcHQgZm9yIHRoZSBwYXJ0IHdoZXJlIHlvdSBoYWQgdG8gY2hhbmdlIHlvdXIgY29tbXV0ZS4gSmVzdXMsIEkgcmVhbGx5IG5vdCBnb29kIGF0IHRoaXMuIFRvbyBiYWQgdGhlcmUgbm90IGEgSGFsbG1hcmsgbGluZSBjYWxsZWQgIkZvciB0aGUgU2V4dWFsbHkgSGFyYXNzZWQgV29tYW4gQWNjdXNlZCBvZiBOYXppc20iIGJlY2F1c2UgSSBiZSBhbGwgb3ZlciBpdCByaWdodCBub3cuCkZvciBzb21lIHJlYXNvbiB0aGUgbGl0dGxlIGJhbmQgYmV0d2VlbiB0aGUgcGVuaXMgaGVhZCBhbmQgZm9yZXNraW4gdG9yZSAoZG9uIGtub3cgdGhlIG5hbWUgb2YgaXQsIG5vbiBuYXRpdmUgRW5nbGlzaCBzcGVha2VyKS4gCklmIFR3byBwZW9wbGUgaGF2ZSBhIHN0cmFpZ2h0IGluIHBva2VyClRoZXkgY2FuIGV2ZW4gbG9zdCBkb3duIGV2ZW50cyBhbmQgcnVsZXMgaW4gdGhhdCBwYWdlLiBBbmQgYW4gZWFzeSB3YXkgdG8gbW9uZXRpemUgaXQgdG8gYWxsb3cgdGhlIHBsYXRmb3JtIHRvIGJlIHNlbGYgc3VzdGFpbmluZyBpcyB0byBjaGFyZ2Ugb3JnYW5pemVycyBpbiBvcmRlciB0byBhZHZlcnRpc2UgdGhlaXIgZXZlbnRzIGFuZCBjb250ZXN0cyBvbiB0aGUgcGxhdGZvcm1zLiBJIGltYWdpbmUgaWYgaXQgbm90IGZvciBwcm9maXQsIHRoZSBjaGFyZ2VzIHdvdWxkbiBiZSB1bnJlYXNvbmFibGUgaWYganVzdCB0byBjb3ZlciBmb3Igc2VydmVyIGNvc3RzIGFuZCB0byBoYXZlIGEgcHJvZ3JhbW1lciBvbiBjYWxsIGluIGNhc2Ugb2YgYnJlYWsgZG93bnMuIApGaW5hbGx5LCBJIGFsc28gc3dhbSBhdCB2YXJpb3VzIHRpbWVzIGluIHRoZSB5ZWFyIGFuZCB1c2VkIGZsaXBwZXJzIGZvciBkaWZmZXJlbnQgd29ya291dHMgICB0aGlzIG1heSBhbHNvIGhhdmUgYmVlbiBjb250cmlidXRpbmcuIApQYWluIHRoYXQgc3RpY2tzIGFyb3VuZCBmb3IgbW9yZSB0aGFuIDMwIG1pbnV0ZXMgYWZ0ZXIgZWF0aW5nIGhvdCBvciBjb2xkIGZvb2RzIGNhbiBhbHNvIGluZGljYXRlIHB1bHAgZGFtYWdlLCBlaXRoZXIgZnJvbSBhIGRlZXAgY2F2aXR5IG9yIGEgYmxvdyB0byB0aGUgdG9vdGguIApCdXQgbm93IHRoYXQgSSdtIG5vdCB1bmRlciB0aGUgd2luZyBvZiBteSBwYXJlbnRzLCBJIGhhdmUgdG8gbWFrZSBlZmZvcnRzIG5vdyB0byBoZWxwIG1ha2UgaXQgc28gSSBjYW4gaGF2ZSBzb21lIGNhcmVmcmVlIHRpbWUgdG8gbXlzZWxmIG9uIGEgc3VtbWVyIGV2ZW5pbmcuIApCeSBzZWFyY2hpbmcgb24gdGhlIEludGVybmV0LCB5b3UnbGwgYWxzbyBnYWluIHRoZSBiYXNpYyB1bmRlcnN0YW5kaW5nIG9mIHRoZSBkaWZmZXJlbnQgdHlwZXMsIGRlc2lnbnMgYW5kIGNvbG9ycyB0aGF0IGFyZSBhdmFpbGFibGUgdGhyb3VnaG91dCB0aGUgY2hpcCB3b3JsZC4gTWFueSBvZiB0aGVzZSBvbmxpbmUgY29tcGFuaWVzIG9mZmVyIG1vbnRobHkgb3Igc2Vhc29uYWwgZGlzY291bnRzIGFuZCBzb21lIG9mZmVyIHBlcnNvbmFsaXplZCBjaGlwIHNldHMgdGhhdCBjYW4gYmUgYSBncmVhdCBub3ZlbHR5IHdoZW4gaG9zdGluZyB0aGUgU2F0dXJkYXkgbmlnaHQgZ2FtZSBhdCB5b3VyIGhvbWUuCiJQb2tlciBtYWNoaW5lIHJldmVudWUgaXMgZG93biBhIGxpdHRsZSBiaXQgWzEuMyBwZXIgY2VudF0sIGJ1dCB0aGF0IGlzIGNvbnNpc3RlbnQgd2l0aCB0aGUgdHJlbmQgYW5kIGluIGxpbmUgd2l0aCB0aGUgZWNvbm9teSBhbmQgZmlndXJlcyByZWxlYXNlZCBieSBDbHVic05TVyBmb3IgdGhlIENlbnRyYWwgV2VzdCwiIGhlIHNhaWQuCkplZmYgQnVsaW5ndG9uIHdhcyBuZXcgaW4gdG93bi4gClRoZXNlIHBlb3BsZSB0cnVseSBkbyBub3QgY2FyZSBhYm91dCB0aGUgbG9zcyBhbmltYWwgbGl2ZXMgZXhjZXB0IGlmIGl0IGlzIGR1ZSB0byB0aGUgaHVtYW4gZGlldC4gVGhlaXIgc2VudGltZW50IGlzIHNpbWlsYXIgQ29uc2VydmF0aXZlcyB3aG8gZmlnaHQgZm9yIHRoZSByaWdodHMgb2YgdW5ib3JuIGZldHVzZXMgYnV0IGRvbiBnaXZlIGEgc2hpdCBhYm91dCB0aGUgY2hpbGQgYWZ0ZXIgaXQgaXMgYm9ybi4gQXMgbG9uZyBhcyBpdCBpc24gZWF0ZW4sIHRoZXkgZG9uIGdpdmUgYSBmdWNrIHdoYXQgaGFwcGVucyB0byBpdC4gT3RoZXJ3aXNlIHRoZXkgd291bGQgYWxzbyBiZSBmaWdodGluZyBhZ2FpbnN0IHRoZSBlbnZpcm9ubWVudGFsIGRldmFzdGF0aW9uIHRoZSBpbmR1c3RyaWFsIGFncmljdWx0dXJlIGluZHVzdHJ5IGhhcyBjYXVzZWQgaW4gdGhlIHBhc3QgMjAgeWVhcnMgd2hpbGUgdHJ5aW5nIHRvIG1lZXQgdGhlIGluY3JlYXNlZCBXZXN0ZXJuIG1hcmtldCBkZW1hbmQgZm9yIHNveSBhbmQgYXZvY2Fkb3MgKEd1ZXNzIHdoeT8pLgpBbmQgdGhleSBhcmUgd2FraW5nIHVwLiBUaGV5IGNvbWluZyB0aHJvdWdoIHRoZSBjcmFjaywgYW5kIEkgY3J1c2hpbmcgdGhlbSBhcyBnZW50bHkgYXMgSSBjYW4gc28gYXMgbm90IHRvIHJpbGUgdXAgdGhlIG1ldHJvcG9saXMgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIHdpbmRvdywgd2hpbGUgdHJ5aW5nIHRvIGZvcmNlIHRoZSB3aW5kb3cgY2xvc2VkLCBhbmQgZnVsbHkgYXdhcmUgdGhhdCBJIGJ1Y2sgbmFrZWQsIHN0YW5kaW5nIG9uIGluY3JlZGlibHkgc2xpcHBlcnkgbWFyYmxlIGluIGEgYmF0aHJvb20gd2l0aCBtYW55IGV4Y2l0aW5nIHBvaW50eSBmZWF0dXJlcyB3aGljaCBhcmUgbGlrZWx5IHRvIHNvb24gYmUgZmVhdHVyaW5nIG15IGJyYWlucyB3aGVuIEkgc2xpcC4uIApJZiB5b3UgdXNlIHRoZSBsb2NhbCB0YXhpIGFwcCBpdCBjb3N0cyAkMSB0byBnZXQgdG8gY2VudGVyKS4gCllvdSBtaWdodCBldmVuIGNvbWUgdG8gdGhpbmsgb2YgaXQgYXMgc29tZXdoYXQgYSBzZWxmaXNoIGFjdCBiZWNhdXNlIGluIHRoZSBwdXJzdWl0IG9mIGhlZG9uaXN0aWMgcGxlYXN1cmVzLCB5b3UgYXJlIG9ubHkgdGhpbmtpbmcgYWJvdXQgeW91ciBvd24gc2VsZi4uIApKb3VybmFsIG9mIHRoZSBGcmFua2xpbiBJbnN0aXR1dGUsIFBoaWxhZGVscGhpYSwgMTgzNjsgdm9sdW1lIDE3IChuZXcgc2VyaWVzKSBhbmQgdm9sdW1lIDIxIG92ZXJhbGwsIHdpdGggdGV4dCBpbGx1c3RyYXRpb25zIGFuZCBmb3VyIHBsYXRlcywgNDQwIHBwLiAKTW9zdCBsaWtlbHksIHRoaXMgd2lsbCBub3QgZ2V0IGFueSBiZXR0ZXIuIEkgZGF0ZWQgc29tZW9uZSBzaW1pbGFyIHdoZW4gSSB3YXMgaW4gbXkgbGF0ZSB0ZWVucy4gClRydXRoIGlzLCB3aGlsZSBkcm9wc2hpcHBpbmcgaXMgYSB0b3RhbGx5IGxlZ2l0IGJ1c2luZXNzIG1vZGVsIGFuZCBoYXMgYSBsb3Qgb2YgYWR2YW50YWdlcyBjb21wYXJlZCB0byBvdGhlciBvbmVzIGxpa2U6ClNndCBLZWV2ZXJzIHNhaWQgcG9saWNlIGdhdmUgbm90aWNlIHRvIG93bmVycyB0aGF0IGl0IHdhcyBpbGxlZ2FsIHRvIG93biBhIG1hY2hpbmUsIHJhdGhlciB0aGFuIGNoYXJnaW5nIHRoZW0sIGFzIHRoZSBvZmZlbmNlIGFuZCBwZW5hbHRpZXMgd2VyZSBub3Qgd2lkZWx5IGtub3duLgpJIGp1c3QgYXNzdW1lZCBldmVyeW9uZSBkaWQgdGhpcy4gCkl0IHdhcyBmbHlpbmcgc3RyYWlnaHQgdG93YXJkcyBoaW07IHRoZSBndXR0dXJhbCBjcnksIGxpa2UgdGhlIGV2ZW4gdGVhcmluZyBvZiBzb21lIHN0cm9uZyBzdHVmZiwgc291bmRlZCBjbG9zZSB0byBoaXMgZWFyOyB0aGUgbG9uZyBiZWFrIGFuZCBuZWNrIG9mIHRoZSBiaXJkIGNvdWxkIGJlIHNlZW4sIGFuZCBhdCB0aGUgdmVyeSBpbnN0YW50IHdoZW4gTGV2aW4gd2FzIHRha2luZyBhaW0sIGJlaGluZCB0aGUgYnVzaCB3aGVyZSBPYmxvbnNreSBzdG9vZCwgdGhlcmUgd2FzIGEgZmxhc2ggb2YgcmVkIGxpZ2h0bmluZzogdGhlIGJpcmQgZHJvcHBlZCBsaWtlIGFuIGFycm93LCBhbmQgZGFydGVkIHVwd2FyZHMgYWdhaW4uIApPdmVydmlldyBmb3IgVGhlU2hhZG93S2ljawpEZXBvaXMgZGUgdW0gY2FzbyAgIHNvIHNldXMgbWVkb3MgcXVlIGFpbmRhIHNlIGp1c3RpZmljYT8KVGhlIHByb3ZpbmNlIGlzIHN0aWxsIGxvb2tpbmcgZm9yIGEgbmV3IHJlZmluZXJ5IHByb2plY3QsIHRob3VnaCBpdCBpcyBuZWdvdGlhdGluZyB3aXRoIGNvbXBhbmllcyBvbiBwcm9wb3NhbHMgdG8gYnVpbGQgaGVhdnkgb2lsIHVwZ3JhZGluZyBmYWNpbGl0aWVzLgpKZSBwcmZyZSBhc3N1cmVyIGxhIHJ1c3NpdGUgZW4gY2hlcmNoYW50IHVuZSByZWNldHRlIGFkIGhvYy4gClVuZm9ydHVuYXRlbHksIHRoZSBhdG1vc3BoZXJlIHdhcyBsaWtlIHdlIHdlcmUgYWxsIGNyYW1taW5nIGZvciBhIGZpbmFsIGV4YW0gaW5zdGVhZCBvZiBwbGF5aW5nIGEgbGl0dGxlIFRleGFzIEhvbGRlbS4uIApJIGRlZmluaXRlbHkgb24gVGVhbSBHb29mIGZvciB0aGlzIG9uZS4gClRoZSBwaWN0dXJlIHlvdSBzZWUgb2YgUGlwaGVyIGluIGhlciBiYXRoaW5nIHN1aXQgd2FzIHRha2VuLCBhcyBzaGUgZXhwbGFpbnMsIG1pbnV0ZXMgYmVmb3JlIHRoZSB0c3VuYW1pIGhpdC4gV2FzIHN0cmFuZ2UsIGJ1dCBJIGZlbHQgcmVhbGx5IGl0Y2h5LCBsaWtlIHRoZXJlIHdlcmUgc2VhIGxpY2UgYml0aW5nIG1lLCBzaGUgY29udGludWVzIG9mIHRoZSBzdGF0ZSBvZiB0aGUgd2F0ZXIgc2hlIHdhcyBzdGFuZGluZyBpbi4gCkkgd2FzIHRoaW5raW5nIGF0IGZpcnN0IHRoZXJlIG1pZ2h0IGJlIG1vcmUgcGFpcitjb21ibyBkcmF3cyBhbmQgY291bGRuIGp1c3RpZnkgZm9sZGluZyB0aG9zZSBwcmV0dHkgYnVsbGV0cy4gClJlZ3VsYXIgb3IgZWdyZWdpb3VzIHZpb2xhdGlvbnMgd2lsbCByZXN1bHQgaW4gYSBiYW4uIFRoZSBhbW91bnQgb2YgbW9uZXkgYW5kIGdvb2QgdGhleSBkbyBpcyBzdWJzdGFudGlhbCwgYnV0IHRoZSBtZW50YWxpdHkgcGVvcGxlIGhhdmUgYWJvdXQgaXQgaXMgc28gd2FycGVkLiBUaGUgVEhPTiBvcmdzIGFyZSBtb3N0bHkganVzdCB0cmVhdGVkIGFzIGEgd2F5IHRvIG1ha2UgZnJpZW5kcyB3aGljaCB3b3VsZCBiZSBmaW5lIGlmIHRoZXkgZGlkbid0IGFsc28gY2FycnkgYSByZWxpZ2lvdXMgbGlrZSBkZXZvdGlvbiB0byBpdC4uIApUaGVzZSBwcm92aW5jaWFsIGlkZW50aXRpZXMgYW5kIHNvY2lvIGVjb25vbWljIGNvbnRleHQgcGxheWVkIGEgcGFydCBvbiB0aGUgdWx0aW1hdGUgZmFpbHVyZSBvZiBHcmFuIENvbG9tYmlhLiBDYXJhY2FzIGFuZCBRdWl0bywgaGF2aW5nIGJlZW4gbW9zdGx5IHNlbGYgZ292ZXJuaW5nIGZvciB0aGUgYmV0dGVyIHBhcnQgb2YgdGhlIGNvbG9ueSwgd2VyZSBub3Qgd2lsbGluZyB0byBzdWJtaXQgdG8gQm9nb3RhLCBhbmQgd2FudGVkIGdyZWF0ZXIgcG93ZXIgZm9yIHRoZW1zZWx2ZXMuIApCdXQgdGhleSBoYXZlIGEgYmFkIHJlcHV0YXRpb24sIG1vc3RseSBhYm91dCBjdXN0b21lciBzZXJ2aWNlIGFuZCBwZW9wbGUgd2hvIGJ1eSBjaGVhcCBsYXB0b3BzIChsaWtlIDIwMCBldXJvIGxhcHRvcHMpIGNvbXBsYWluIGFib3V0IGJsb2F0d2FyZSwgYnV0IHRoYXQgbm90IGFuIGlzc3VlIGlmIHlvdSBidXkgYSBnYW1pbmcgbGFwdG9wLiAKSSdtIGFmcmFpZCBJIGRvbid0IHJlbWVtYmVyIG11Y2ggYWJvdXQgaXQsIG5vdCBldmVuIHRoZSBkaXJlY3Rpb24gb2YgdHJhdmVsLiBJdCBtdXN0IGJlIGhvcnJpYmxlIHRvIGJlIGNvbnRlbXBsYXRpbmcgdGhlIGVuZCBvZiB5b3VyIHRvdXIuIApNb3N0IG9mIGFsbCwgaXQgaGFzIGFuIGV4dHJlbWVseSBlYXN5IHRvIHVzZSB3ZWIgc2l0ZSB0aGF0IGlzIHNpbXBsZSB0byBuYXZpZ2F0ZSB3aGVyZSBldmVyeXRoaW5nIGlzIGNsZWFybHkgdmlzaWJsZSwgdW5saWtlIHNvbWUgb3RoZXIgZ3JlYXQgb25saW5lIGJvb2ttYWtlciB3ZWIgc2l0ZXMuQ2FuIEkgcmVnaXN0ZXIgYXQgQmV0VmljdG9yIGZyb20gbXkgY291bnRyeT9Zb3UgY2FuIGZpbmQgdGhpcyBvdXQgZWFzaWx5LiBFYWNoIGJvb2ttYWtlciB3ZWJzaXRlIGhhcyBpdHMgb3duIGxpc3Qgb2YgcmVzdHJpY3RlZCBjb3VudHJpZXMsIGFuZCBzdWNoIGxpc3QgaXMgdXN1YWxseSBhdmFpbGFibGUgaW4gdGhlIFRlcm1zIENvbmRpdGlvbnMgc2VjdGlvbiBvZiB0aGUgd2Vic2l0ZS4gCkVsbGVzIHNvbnQgdG91dGVzIHV0aWxlcywgaWwgbid5IGEgZG9uYyBwYXMgbGlldSBkJ29wcG9zZXIgImJvbm5lIiBldCAibWF1dmFpc2UiIG1vdGlvbi4gCkFwcGxlIHBsYXlzIHRoZSBsb25nLCBsb25nIGdhbWUuIFRoZXkgZGV2ZWxvcCB0ZWNoIGFuZCBwdXQgaXQgaW50byB2YXJpb3VzIGRpZmZlcmVudCBwcm9kdWN0cyB3aGljaCB1bHRpbWF0ZWx5IHdpbGwgYmUgY29uZGVuc2VkIGludG8gZmV3ZXIgcHJvZHVjdHMuIFRoZXkgdGVhY2ggdXMgaG93IHRvIHVzZSB0aGVpciB0ZWNoIG92ZXIgZ2VuZXJhdGlvbnMgb2YgcHJvZHVjdHMgYW5kIHdlIHRlYWNoIHRoZW0gaG93IHdlIHVzZSBpdC4gClRyeSB0byBiZSBhIGdvb2Qgc3R1ZGVudCwgYW5kIGRlbW9uc3RyYXRlIHdoYXQgaXQgbWVhbnMgdG8gcmVhbGx5IGdldCBzaGl0IGRvbmUuIAo/IFZpbGtldCBmIGx0IGFyYmV0ZSBwYXNzYXIgZGlnIHNvbSB5cmtlIGVsbGVyIGJ1c2luZXNzICAgciBkZ2l2bmluZywgU2hvdyBSb29tLCBGcmFuY2hpc2UsIE1lcmNoYW5kaXNpbmcsIGdpdmFuZGUgb2NoIHRpbGxmcmVkc3N0IGxsYW5kZSwgZCBkdSBwbGFuZXJhciBhdHQgYXZzbHV0YSBvY2ggc3RhcnRhIGV0dCBmIHJldGFnIGVsbGVyIGtvbW1hIGluIGkgbiBnb24gYW5uYW4gZm9ybSBhdiBlZ2VuZiByZXRhZ2FuZGUgZWxsZXIgZW50cmVwcmVuIHJza2FwLiBEZXNzYSBueSBvbmxpbmUgdGVrbmlrIHIgbCBtcGFkZSBhdHQgaGFudGVyYSBpbm5laCBsbCBpcyB0dG5pbmcgZnIgbiBmbGVyYSBzdGF0aW9uIG9wZXJhdGlvbmVyIGVsbGVyIHJhZGlvIG4gdHZlcmsgbmF2LCBkIHIgc3R1ZGlvIHYgeGxpbmcgb2NoIHNpZ25hbCBkYXRhIHByZWNpcyBmcmFtZiByIGVsbGVyIGR1IGthbiB2IGxqYSBncmF0aXMgYmV0aiBuYWQuIEthbGxhIG4gdHRlciBkcmFyIGksIGthbiBkZXQgdmFyYSBmIHIgbXlja2V0IHNwZWwgc29tIGR1IGhhciBoIHJ0IHRhbGFzIG9tIG1lbiBkZXQgZmlubnMgcyBtIG5nYSBmbGVyLiAKSXQgY2FuIGRvIHRoaXMgYmVjYXVzZSBpdCBoYXMgbm8gb3ZlcmhlYWRzICAgaXRzIGRyaXZlcnMgZ2V0IG5vIGVtcGxveW1lbnQgYmVuZWZpdHMsIHRoZXkgcHJvdmlkZSB0aGVpciBvd24gdmVoaWNsZXMgYW5kIHRoZXkgYXJlIHVubGljZW5zZWQuIApUaGF0QXV0aXN0aWNXb21hbiB1Ck93aWFkY3plbmlhIGRvdC4gCkhpLCBUaHJlZSBkYXlzIGFnbyBJIGxvc3QgbXkgYmxhY2sgZm9zc2lsIHdhbGxldCBhdCBUUEMgKFRvYSBQYXlvaCBDZW50cmFsKSwgYW5kIGl0IGhhcyBteSBTaW5nYXBvcmUgU3R1ZGVudCBQYXNzIENhcmQgKEcxODg5KSwgaXQgYWxzbyBoYXMgYSBPQ0JDIGJhbmsgZGViaXQgY2FyZCwgYSBtb25leSBvZiA5NSAxMDBTJCwgbXkgcGFzc3BvcnQgc2l6ZWQgcGljdHVyZXMsIEluZG9uZXNpYW4gSUQgQ2FyZCwgYW5kIG15IE5ldHMgQ2FzaENhcmQuIEkgbG9zdCBpdCBhdCBhYm91dCAzIDQgUE0gaW4gVFBDLiAKIlBlcnNvbmFsIEluZm9ybWF0aW9uIiBpcyBpbmZvcm1hdGlvbiB0aGF0IGNhbiBiZSB1c2VkIHRvIGlkZW50aWZ5IHlvdSwgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSwgYWxvbmUgb3IgdG9nZXRoZXIgd2l0aCBvdGhlciBpbmZvcm1hdGlvbi4gCk5vdCBzbyBtdWNoISBTdHJldGNoIG91dCBhcyBiZXN0IHlvdSBjYW4gYW5kIHRyeSBub3QgdG8gaHVuY2gsIGl0IGlzbid0IHBlcmZlY3QgYnV0IGl0IGRvZXMgaGVscC4gKSggLiAKQnV0IGF0IHRoZSBzYW1lIHRpbWUsIEkgd2lsbCBoYXZlIGl0IGp1c3QgYXMgb2Z0ZW4gYXMgeW91IHdvdWxkLiBPZiBjb3Vyc2UgSSBsb3NlIGxpa2UgZXZlcnlvbmUsIGJ1dCBJIG1ha2UgaXQgdG91Z2ggdG8gYmVhdCBtZSBiZWNhdXNlIEkgd2lsbCBibHVmZiB5b3Ugb3V0IG9mIHBvdHMgYW5kIHdoZW4geW91IGZpbmFsbHkgd2FrZSB1cCB3aXRoIGEgaGFuZCwgSSBtYXkgc3VjayBvdXQgb3IgaGF2ZSBhIGJldHRlciBoYW5kIGFuZCB0aGVuIHlvdSBnbyBvbiB0aWx0LiBZb3UgZmluYWxseSBnZXQgQUEgYW5kIGFyZSBnb2luZyB0byBzaG93IG1lIHdobyBib3NzIGFuZCBJIGZsb3AgYSBzZXQgb2YgMjIgYW5kIHN0YWNrIHlvdSBhbmQgdGhlbiB5b3UgdGlsdCBzb21lIG1vcmUuIApUaGlzIGxvc3Mgb2YgYWZmb3JkYWJpbGl0eSBvZiB0aGUgYXZlcmFnZSBwcmljZWQgaG9tZSBpbiB0aGUgcGFzdCB0aHJlZSB5ZWFycyBoYXMgcHJvbXB0ZWQgbWFueSBidXllcnMgdG8gZm9jdXMgaW5zdGVhZCBvbiBsb3dlciBwcmljZWQgaG91c2luZyBvcHRpb25zLiBNYW55IGJ1eWVycyBoYXZlIG1hZGUgdGhlIG1vdmUgb3V0IG9mIGNpdHkgY2VudHJlcyB0byBtb3JlIGFmZm9yZGFibGUgc3VidXJiYW4gYXJlYXMsIGZvciBpbnN0YW5jZS4gVGhlcmUgd2FzIGFsc28gc3Ryb25nIGRlbWFuZCBmb3IgY29uZG8gYXBhcnRtZW50cyBpbiBDYW5hZGEgbGFyZ2VzdCBtYXJrZXRzLCBhcyB0aGlzIHR5cGUgb2YgaG91c2luZyBpcyB1c3VhbGx5IGEgbW9yZSBhZmZvcmRhYmxlIGNob2ljZS4gCldhcm5lck1lZGlhIHJlcHJlc2VudGF0aXZlcyBzYXkgYSBwcmlvciBpbnZlc3RpZ2F0aW9uIGRpZCBub3QgZmluZCBpbXByb3ByaWV0eSBpbiBLaXJrJ3MgY2FzdGluZyBpbiBmaWxtcyBsaWtlICJPY2VhbidzIDguIiBTaGUgYWxzbyBhcHBlYXJlZCBpbiB0aGUgMjAxNiBOZXcgTGluZSByZWxlYXNlICJIb3cgVG8gQmUgU2luZ2xlLiIKU2V2ZXJhbCBtb3ZpZXMgaGF2ZSBldmVuIGJlZW4gZmlsbWVkIGF0IHRoZSBvbGQgUGlvbmVlciBTYWxvb24sIGluY2x1ZGluZyBGZWFyIGFuZCBMb2F0aGluZyBpbiBMYXMgVmVnYXMgc3RhcnJpbmcgSm9obm55IERlcHAsIGFuIG9sZCBDaGVlY2ggQ2hvbmcgbW92aWUsIE1pc3MgQ29uZ2VuaWFsaXR5IDIsIHN0YXJyaW5nIFNhbmRyYSBCdWxsb2NrLCBhbmQgVGhlIE1leGljYW4sIHdoaWNoIHN0YXJyZWQgQnJhZCBQaXR0IGFuZCBKdWxpYSBSb2JlcnRzLgpXaGVuIEkgd29rZSBpbiB0aGUgaG9zcGl0YWwgaXQgd2FzIHRoZSBuZXh0IGRheSBhbmQgSSB3YXMgaW4gbW9yZSBwYWluIHRoYW4gSSB3aWxsIHByb2JhYmx5IGV4cGVyaWVuY2UgZm9yIHRoZSByZXN0IG9mIG15IGxpZmUgdGhpcyBpcyB0aGUgcGFydCB0aGF0IGlzIHJlbGV2YW50IHRvIHRoaXMgcG9zdC4gMyBkYXlzIGxhdGVyIEkgaGFkIHRvIGhhdmUgc3RhcGxlcyByZW1vdmVkIHNvIHRoZXkgY291bGQgZG8gYW5vdGhlciBza2luIGdyYWZ0IGZyb20gbXkgb3V0ZXIgdGhpZ2guIFB1bGxpbmcgb3V0IHRoZXNlIHN0YXBsZXMgaXMgZnVja2luZyB0ZXJyaWJsZSBhbmQgSSB3b3VsZG4gd2lzaCBpdCBvbiBhbnkgcGVyc29uLgpDYWxsIENlbnRlcnMgc3VjayBhc3MgYnV0IHRoZXkgcGF5IGRlY2VudCBhbmQgaGlyZSBhbGwgdGhlIHRpbWUgYmVjYXVzZSBvZiB0aGUgaGlnaCB0dXJuIG92ZXIuIApPbiB0aGUgcml2ZXIgdGhlIEpzIGNvbWVzIHVwIGFuZCB5b3VyIG9wcG9uZW50IHJhaXNlcyAkNTAuIEZyb20gd2F0Y2hpbmcgeW91IGZpZ3VyZSB0aGV5IG1heSBoYXZlIHRyaXBzLiAKSXQgd2lsbCBoZWxwIHlvdSB1bmRlcnN0YW5kIHRoZSBzaWduaWZpY2FuY2Ugb2YgdGhpcyBwcm9waGVjeS4gUGhhcmlzZWVzIGRlbmllZCBKRVNVUyBiZWNhdXNlIEhFIGRpZCBub3QgY29tZSBhY2NvcmRpbmcgdG8gdGhlaXIgZXhwZWN0YXRpb24uIApXaGVuIEkgYXJyaXZlZCBiYWNrIGF0IG91ciByb29tICh3ZWxsIGFmdGVyIHRoZSBzaG93IGhhcyBmaW5pc2hlZCksIHNoZSBoYWQgMTUgcGVvcGxlIGNyYW1tZWQgaW50byBvdXIgcm9vbSwgd2F0Y2hpbmcgYW5vdGhlciBzaG93LiBUaGVyZSB3ZXJlIDQgcGVvcGxlIG9uIG15IGJlZCBhbmQgb25lIG9mIHRoZW0gd2FzIHVzaW5nIG15IHBpbGxvdyBhcyBhIGZvb3QgcmVzdC4gQXMgSSB3YWxrZWQgaW4sIHRoZXJlIHdlcmUgYWxzbyBzZXZlcmFsIHBlb3BsZSBicm93c2luZyB0aHJvdWdoIG15IGRyYXdlcnMgYW5kIG15IGRlc2s7IHRoZXkgd2VyZW4gZXZlbiBiYXNoZnVsIG9yIGVtYmFycmFzc2VkIHdoZW4gSSB3YWxrZWQgaW4gYW5kIGNoZWVyZnVsbHkgYWRkcmVzc2VkIHRoZSBjcm93ZCwgIkhpLCBndXlzISBJIHdvbmRlcndpZmUsIE1hcmlzc2EgKG5vdCBib3RoZXJpbmcgdG8gY2hhbmdlIGhlciBuYW1lKSByb29tbWF0ZS4gU29ycnkgdG8gYmFyZ2UgaW47IEkgdGhvdWdodCBbdHJhc2h5LCByaWNoIHdoaXRlIGdpcmwgc2hvd10gd2FzIG92ZXIgYnkgbm93LiBNeSBiYWQuIFdhcyB0aGVyZSBzb21ldGhpbmcgSSBjYW4gaGVscCB5b3UgZmluZCBpbiBteSBwZXJzb25hbCBkcmF3ZXJzPyIuClRPIEJFIEEgVHVyayBpbiBvdXIgdGltZSBpcyB0byBiZSBvbmUgYW1vbmdzdCB1bnRvbGQgbWlsbGlvbnMuIEl0IGlzIHRvIGxpdmUgaW4gdGhlIGNydWVsbGVzdCBhbmQgbW9zdCBibG9vZHkgcmVnaW1lIGltYWdpbmFibGUuIApQcmUgaGVhdCBvaWwgb24gbG93LiAKT3IgdG8gYXR0YWNrIGl0LiAKR2lybHdpdGhhYmlrZSB1CkFsc28sIHRoZXkgcGFzc2luZyB0aGUgYnVjayB0byBsb3cgY29zdCBhcGFydG1lbnQgb3duZXJzLiBEaWQgeW91IGZvcmdldCB0aGF0IHRoZXkgbW9zdGx5IHNlbmlvcnMsIHdlIGRvd24gdHdvIGh1bmRyZWQgdGhvdXNhbmRzIG9mIGxvdyBjb3N0IGFwYXJ0bWVudCB1bml0cywgdGhlIGVsZGVybHkgYXJlIGhpZ2hseSB2dWxuZXJhYmxlIHRvIGFidXNlLCBhbmQgd2UgaGF2ZSBoYWQgbWFueSBpbmNpZGVudHMgd2l0aCBzbHVtbG9yZHM/IERvZXMgdGhpcyBlcXVhbCB0aGUgY29zdCBvZiBkZWNlbnRyYWxpemVkIGhlYWx0aGNhcmUvcmVzb3VyY2VzIGFuZCB0cmFuc3BvcnRhdGlvbiBjb3N0cyBmb3IgdGhlc2UgcGVvcGxlL0NNSEE/LiAKVGhlIGJhc2ljIGFpcnBvcnQgcGFzc2VuZ2VyIGxvb3AgaXMgZ3JlYXQuIFBsYXRmb3JtcyBoYXZlIGRvb3JzIHRvIGJvYXJkIHRoZSB0cmFpbnMuIAo=|<---