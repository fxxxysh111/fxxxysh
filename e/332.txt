<!DOCTYPE doctype html>
<html class="layout-story-2 page-or-template-article no-js story story-none story-unlimited story-protected" lang="en-CA" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# article: http://ogp.me/ns/article#">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
  <meta content="width=device-width,minimum-scale=1,initial-scale=1" name="viewport"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
  <meta content="2018-12-10T12:30:21-0500" name="last-modified"/>
  <meta content="5AFCKOIGDVFN7HDDLZOS4LIPGY" name="arc-id"/>
  <meta content="R72OETGY5RFSBOY3G3E5JWYH2Y" name="arc-revision"/>
  <meta content="2_1_7" name="release-version"/>
  <meta content="app-id=429228415" name="apple-itunes-app"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="apple-mobile-web-app-title"/>
  <meta content="#da161f" name="msapplication-navbutton-color"/>
  <meta content="#da161f" name="msapplication-TileColor"/>
  <meta content="https://www.theglobeandmail.com/resources/assets/meta/mstile-144x144.png" name="msapplication-TileImage"/>
  <meta content="https://www.theglobeandmail.com/resources/assets/meta/browserconfig.xml" name="msapplication-config"/>
  <meta content="#da161f" name="theme-color"/>
  <meta content="140961138903" property="fb:pages"/>
  <meta content="582735201827255" property="fb:pages"/>
  <meta content="682970675134549" property="fb:pages"/>
  <meta content="491600721006147" property="fb:pages"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="en_GB" property="og:locale"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="article" property="og:type"/>
  <meta content="140961138903" property="article:publisher"/>
  <meta content="2018-12-07T18:35:22-0500" property="article:published_time"/>
  <meta content="2018-12-10T12:30:21-0500" property="article:modified_time"/>
  <meta content="BCE,leveraged buyout,company,2008,Ontario Teachers’ Pension Plan,George Cope,dividends,telecom,bce,deal,rogers,growth,fibre,media,role" property="article:tag"/>
  <meta content="https://www.theglobeandmail.com/resizer/aNF6EyALGlvYwKccZ_Hy-_WWAqI=/1200x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/XIAHM4E3KRAWXPEGZOBP4HJ764.jpg" property="og:image"/>
  <meta content="1200" property="og:image:width"/>
  <meta content="755.7845744680852" property="og:image:height"/>
  <meta content="noindex" name="applebot">
   <meta content="@globeandmail" name="twitter:site"/>
   <meta content="@globeandmail" name="twitter:creator"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
   <meta content="summary_large_image" name="twitter:card"/>
   <meta content="https://www.theglobeandmail.com/resizer/L2IQKHiJcGbqB-C7uPs2CKIYzPE=/560x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/XIAHM4E3KRAWXPEGZOBP4HJ764.jpg" name="twitter:image"/>
   <meta content="" name="twitter:image:alt"/>
   <noscript>
   </noscript>
  </meta>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-TL4VHVZ&amp;nojscript=true" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  [link]
  
  <div class="" id="pb-root">
   <section class="top-furniture--story" id="top-furniture-area">
    <div class="pb-container">
     <div class="u-wrapper pb-feature pb-layout-item pb-f-generic-text" id="ffqmUg2lSkLVbr">
      <div class="gtext">
       <div class="gtext-body">
        <div class="u-hidden" id="pb-bg">
        </div>
       </div>
      </div>
     </div>
     <div class="u-wrapper pb-feature pb-layout-item pb-f-global-header" id="fIMcTm1lSkLVbr">
      <header class="c-site-header c-site-header--article c-site-header--article--buttons-hidden c-site-header--sticky">
       <div class="c-site-header__top">
        <div class="c-site-header__top-content">
         <div class="c-site-header__hamburger">
          <button aria-controls="site-header-menu-panel" aria-expanded="false" aria-label="Open menu panel" class="c-button c-button--dark-primary c-button--no-border c-button--icon-only" id="js-big-mac" type="button">
           <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
            <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#menu">
            </use>
           </svg>
          </button>
         </div>
         <div class="c-site-header__logo">
          [link]
          
         </div>
         <div class="c-site-header__text">
          <h3 class="c-site-header__text-wrapper">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
         </div>
         <div class="c-site-header__buttons">
          <div class="c-site-header__button-group c-site-header__button-group--primary">
           [link]
           
           <a class="c-button c-button--no-border c-button--small u-hidden js-role-visibility--anonymous js-role-visibility--registered" data-analyticsclick='{"type":"link","feature":"header","label":"subscribe link","position":1,"hierarchy":1}' href="/globe-products/" id="c-site-header-subscribe-button">
            <span class="c-button__text">
             Subscribe
            </span>
           </a>
           [ahref]
           
           <a class="c-button c-button--dark-primary c-button--no-border c-button--small c-button--truncated u-hidden js-role-visibility--anonymous js-onclick--login" data-analyticsclick='{"type":"link","feature":"header","label":"log in link","position":1,"hierarchy":1}' href="/user/#/login" id="c-site-header-login-button" rel="external">
            <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
             <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#anonymous">
             </use>
            </svg>
            <span class="c-button__text">
             Log in
            </span>
           </a>
           [link]
           
           [ahref]
           
           <button aria-controls="site-header-menu-panel" aria-expanded="false" aria-label="Open search panel" class="c-button c-button--dark-primary c-button--no-border c-button--small c-button--icon-only" id="c-site-header-search-button" type="button">
            <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
             <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#search">
             </use>
            </svg>
           </button>
           [ahref]
           
          </div>
          <div class="c-site-header__button-group c-site-header__button-group--secondary">
           [ahref]
           
           [ahref]
           
           [ahref]
           
           [link]
           
           [ahref]
           
          </div>
         </div>
        </div>
       </div>
      </header>
      <div class="c-site-header__placeholder">
      </div>
      <div class="c-site-header__menu-panel" hidden="" id="site-header-menu-panel">
       <div class="c-menu-panel">
        <div aria-live="polite" class="c-menu-panel__body">
         <div class="c-menu-panel__close-button c-menu-panel__close-button--first">
          <button aria-label="Close panel" class="c-button c-button--dark-secondary c-button--no-border c-button--icon-only" type="button">
           <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
            <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#close-x">
            </use>
           </svg>
          </button>
         </div>
         <div class="c-menu-panel__page c-menu-panel__page--search" hidden="">
          <div class="c-menu-panel__pane">
           <div class="c-menu-panel__sub-pane">
            <form action="/search" class="c-search-box c-search-box--dark" method="GET">
             <label class="c-search-box__label" for="search-input">
              Search
             </label>
             <div class="c-search-box__controls">
              <button aria-label="Search" class="c-button c-button--icon-only c-button--no-border-radius c-button--dark-primary" type="submit">
               <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
                <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#search">
                </use>
               </svg>
              </button>
             </div>
            </form>
            <div class="search-suggest-results js-search-suggest-results">
            </div>
           </div>
          </div>
         </div>
         <div class="c-menu-panel__page c-menu-panel__page--categories">
          <div class="c-menu-panel__pane">
           <div class="c-menu-panel__sub-pane">
            <form action="/search" class="c-search-box c-search-box--dark" method="GET">
             <label class="c-search-box__label" for="search-input-2">
              Search
             </label>
             <div class="c-search-box__controls">
              <button aria-label="Search" class="c-button c-button--icon-only c-button--no-border-radius c-button--dark-primary" type="submit">
               <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
                <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#search">
                </use>
               </svg>
              </button>
             </div>
            </form>
            <div class="search-suggest-results js-search-suggest-results">
            </div>
            <div class="c-accordion__placeholder js-c-accordion-placeholder">
             <div class="c-accordion c-accordion--standard-buttons c-accordion--skeleton">
              <ul class="c-accordion__list c-accordion__list--level-0">
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
               <li class="c-accordion__item">
                <div class="c-accordion__item-container">
                </div>
               </li>
              </ul>
             </div>
            </div>
           </div>
          </div>
          <div class="c-menu-panel__pane">
           <div class="c-menu-panel__sub-pane">
            <h3 class="c-menu-panel__heading">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <ul class="c-menu-panel__quick-links">
             <li class="c-menu-panel__quick-link-item">
              [ahref]
              
             </li>
             <li class="c-menu-panel__quick-link-item">
              [ahref]
              
             </li>
             <li class="c-menu-panel__quick-link-item">
              [ahref]
              
             </li>
             <li class="c-menu-panel__quick-link-item">
              [link]
              
             </li>
             <li class="c-menu-panel__quick-link-item">
              [link]
              
             </li>
             <li class="c-menu-panel__quick-link-item">
              [ahref]
              
             </li>
            </ul>
            <h3 class="c-menu-panel__heading">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div class="c-accordion c-accordion--standard-buttons">
             <ul class="c-accordion__list">
              <li class="c-accordion__item">
               <div class="c-accordion__item-container">
                [link]
                
               </div>
              </li>
              <li class="c-accordion__item">
               <div class="c-accordion__item-container">
                <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"panel","label":"Customer help","position":2,"hierarchy":1}' href="/home" rel="external">
                 Customer help
                </a>
               </div>
              </li>
              <li class="c-accordion__item">
               <div class="c-accordion__item-container">
                [ahref]
                
               </div>
              </li>
              <li class="c-accordion__item js-role-visibility--anonymous js-role-visibility--registered u-hidden">
               <div class="c-accordion__item-container">
                [link]
                
               </div>
              </li>
              <li class="c-accordion__item js-role-visibility--anonymous u-hidden">
               <div class="c-accordion__item-container">
                [ahref]
                
               </div>
              </li>
              <li class="c-accordion__item js-role-visibility--registered js-role-visibility--unlimited u-hidden">
               <div class="c-accordion__item-container">
                [link]
                
               </div>
              </li>
             </ul>
            </div>
           </div>
           <div class="c-menu-panel__sub-pane">
            <h3 class="c-menu-panel__heading">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div class="c-text-resizer">
             <ul class="c-text-resizer__items">
              <li class="c-text-resizer__item">
               <div class="c-text-resizer__button">
                <button aria-label="Text size default" class="c-button c-button--dark-primary">
                 <span class="c-button__text">
                  A<li>[ahref]</li><li>[link]</li>[search][search][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[search]
                 </span>
                </button>
               </div>
               <span class="c-text-resizer__label">
                0[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
               </span>
              </li>
              <li class="c-text-resizer__item">
               <div class="c-text-resizer__button c-text-resizer__button--plus-2">
                <button aria-label="Text size plus 2" class="c-button c-button--dark-primary">
                 <span class="c-button__text">
                  A
                 </span>
                </button>
               </div>
               <span class="c-text-resizer__label">
                +2<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[ahref]</li>[search]<li>[link]</li>[search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[search]</li>[ahref][ahref][link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
               </span>
              </li>
              <li class="c-text-resizer__item">
               <div class="c-text-resizer__button c-text-resizer__button--plus-4">
                <button aria-label="Text size plus 4" class="c-button c-button--dark-primary">
                 <span class="c-button__text">
                  A<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link]
                 </span>
                </button>
               </div>
               <span class="c-text-resizer__label">
                +4
               </span>
              </li>
              <li class="c-text-resizer__item">
               <div class="c-text-resizer__button c-text-resizer__button--plus-6">
                <button aria-label="Text size plus 6" class="c-button c-button--dark-primary">
                 <span class="c-button__text">
                  A
                 </span>
                </button>
               </div>
               <span class="c-text-resizer__label">
                +6
               </span>
              </li>
             </ul>
             <p class="c-text-resizer__preview-text">
              The subject who is truly loyal to the Chief Magistrate will neither advise nor submit to arbitrary measures.<li>[search]</li>[link]<li>[search]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][link]<li>[link]</li>
             </p>
            </div>
           </div>
          </div>
          <div class="c-menu-panel__close-button c-menu-panel__close-button--second">
           <button aria-label="Close panel" class="c-button c-button--dark-secondary c-button--no-border c-button--icon-only" type="button">
            <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
             <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#close-x">
             </use>
            </svg>
           </button>
          </div>
         </div>
        </div>
        <div class="c-menu-panel__footer">
         <ul class="c-menu-panel__footer-links">
          <li class="c-menu-panel__footer-link-item">
           [ahref]
           
          </li>
          <li class="c-menu-panel__footer-link-item">
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="fhnNP42lSkLVbr">
      <div class="gtext">
       <div class="gtext-body">
       </div>
      </div>
     </div>
     <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="f0903tulSkLVbr">
      <div class="gtext">
       <div class="gtext-body">
       </div>
      </div>
     </div>
     <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="fdg5Xp1lSkLVbr">
      <div class="gtext">
       <div class="gtext-body">
       </div>
      </div>
     </div>
    </div>
   </section>
   <section class="top-fullwidth--story" id="top-fullwidth-area">
    <div class="pb-container">
     <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="f0lVRHjlSkLVbr">
      <div class="">
       <div class="c-ad c-ad--ldbd" id="c-ad--ldbd-gpt-1">
        <div class="c-ad__wrapper">
         <div aria-hidden="true" class="c-ad__image js-c-gpt-ad" data-target='{"pos":"ldbd", "ptf":"gpt"}' data-type="ldbd" id="ldbd-gpt-1">
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="u-wrapper pb-feature pb-layout-item pb-f-global-adv-sponsor-banner" id="fD0oD52lSkLVbr">
     </div>
     <div class="u-wrapper pb-feature pb-layout-item pb-f-global-adv-btyb-banner" id="fGNc181lSkLVbr">
     </div>
    </div>
   </section>
   <div class="l-container">
    <div class="l-row">
     <section class="title-content--story l-col-1 l-col-sm-8 l-col-md-8 l-col-lg-8 l-offset-lg-2" id="title-content-area">
      <div class="l-row">
       <div class="pb-container">
        <div class="u-wrapper pb-feature pb-layout-item pb-f-article-label-headline" id="f0SZHRSlSkLVbr">
         <header class="o-primary-header">
          <h1 class="c-primary-title c-primary-title--news" id="skip-link-target" tabindex="-1">
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
         </header>
        </div>
       </div>
      </div>
     </section>
    </div>
    <div class="l-row">
     <section class="main-content--story l-col-1 l-col-sm-8 l-col-md-8 l-col-lg-8 l-offset-lg-2" id="main-content-area">
      <div class="l-row">
       <div class="pb-container">
        <main class="article-primary-content-chain pb-layout-item pb-chain pb-c-article-primary-content" id="c05DiNglSkLVbr">
         <article class="c-article c-article--none">
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-photo" id="fi74DY1lSkLVbr">
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-meta" id="fPVpHg1lSkLVbr">
           <div class="c-article-meta">
            <div class="c-article-meta__author-info">
             <a class="c-byline c-byline--link" href="/authors/christine-dobby/">
              Christine Dobby
              <svg class="c-byline__icon">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#icon-chevron">
               </use>
              </svg>
             </a>
             <span class="c-beat">
              Telecom reporter
             </span>
            </div>
            <div class="c-article-meta__placelines">
             <span class="c-placeline">
              Toronto[ahref]<li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li>
             </span>
            </div>
            <div class="c-article-meta__timestamps">
             <time class="c-timestamp " data-moment-preface="Published " data-unixtime="1544225722" datetime="December 7, 2018">
              Published December 7, 2018
             </time>
             <time class="c-timestamp js-story-moment" data-moment-preface="Updated " data-unixtime="1544463021" datetime="2018-12-10T17:30:21.433Z">
              Updated December 10, 2018
             </time>
            </div>
            <div class="c-article-meta__subscribers" style="display: flex; align-items: flex-end; margin-top: 5px">
             <div class="c-article-meta__unlimited" style="margin-right: 20px; margin-top: 0">
              For Subscribers
             </div>
             <div class="arc-4200 js-c-comments-bar u-hidden">
              <a class="c-comments-bar__link" href="s">
               <span class="c-comments-bar__count__icon">
                [link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               <span class="c-comments-bar__count__text">
                Comments[ahref]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>[search][search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link][search]
               </span>
              </a>
             </div>
            </div>
           </div>
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-content" id="f0jjl0ylSkLVbr">
           <div class="c-article-body js-c-article-body c-article-body--unlimited u-clearfix">
            <p class="c-article-body__text">
             The biggest deal BCE Inc. never did died on Dec. 11, 2008. A leveraged buyout of the company led by the Ontario Teachers’ Pension Plan crumbled, a victim of a historic crisis in financial markets.
            </p>
            <p class="c-article-body__text">
             Pressure from the Teachers group had vaulted George Cope into the CEO’s suite that summer. Mr. Cope was to be their guy – a cost-cutter extraordinaire who would run the telecom company more efficiently, help the new owners pay down tens of billions of dollars in debt and, with any luck, deliver a handsome return on their bet.[ahref][search]<li>[link]</li>[link]<li>[link]</li>[link]<li>[link]</li><li>[search]</li>[link][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]
            </p>
            <p class="c-article-body__text">
             But then Teachers couldn’t close. The deal’s collapse changed everything in an instant. BCE investors, who had been counting on a cash payout of $42.75 per share, watched the stock drop to about $22. For Mr. Cope, it altered the trajectory of his career. Instead of managing a company that was swimming in debt, he could follow a more seductive and potentially more lucrative path: buy companies, boost cash flow, repeat.
            </p>
            <div class="j-f-wrap">
             <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="">
              <div class="">
               <div class="c-ad c-ad--inline c-ad--flex" id="c-ad--flex-gpt-1">
                <div class="c-ad__wrapper">
                 <p class="c-ad__message">
                  Story continues below advertisement
                 </p>
                 <div aria-hidden="true" class="c-ad__image js-c-gpt-ad js-f-ad js-f-ad-xs" data-target='{"pos":"flex", "ptf":"gpt"}' data-type="flex" id="flex-gpt-1">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <p class="c-article-body__text">
             Ten years later, BCE’s chief dealmaker is sitting in the lounge above the training centre of the Toronto Raptors basketball club. One of his signature purchases came in 2012, when BCE and its pension fund acquired 37.5 per cent of Maple Leaf Sports and Entertainment Ltd., owner of the Raptors, the Toronto Maple Leafs and Toronto FC, the soccer team.
            </p>
            <figure class="c-inline-img ">
             <div class="c-inline-img__wrapper" style="padding-bottom: 63.86303191489362%">
              [link]
              
             </div>
             <figcaption class="c-article-media__info c-article-media__info--article">
              <div class="c-article-media__description">
               <p class="c-article-media__caption">
                George Cope, CEO of Bell Canada, is photographed during an interview at the BioSteel Centre on Nov. 13, 2018. <li>[search]</li>[search][ahref][link][ahref][link]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]
               </p>
               <p class="c-article-media__credit">
                Fred Lum/The Globe and Mail[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
               </p>
              </div>
             </figcaption>
            </figure>
            <p class="c-article-body__text">
             Mr. Cope has a seat on the MLSE board, and one of the perks of the job is that he can take in an occasional Raptors practice. The six-foot-seven CEO played basketball at the University of Western Ontario and talks about the team like any fan would.<li>[ahref]</li>[ahref]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>
            </p>
            <div class="u-wrapper pb-feature pb-layout-item pb-f-article-asf-body-top" id="">
            </div>
            <p class="c-article-body__text">
             About the game the night before, a loss to the New Orleans Pelicans: “Wishing we’d had a little luck on our shots.”<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
            </p>
            <p class="c-article-body__text">
             About the Raptors’ prospects this year: “[They’re] off to such a good start. They’re also fun to watch." And despite the franchise’s recent playoff struggles, he hopes the team can prove it’s the best. "We’ll all know for sure this spring.”
            </p>
            <p class="c-article-body__text">
             A playoff run would mean more than just rearranging his schedule to make it to some games. “If they win, our strategic reason for owning them, of course, is for people to watch the broadcast,” he says, swivelling his bucket chair away from the court. The success of the Raptors benefits BCE and rival Rogers Communications Inc., which operate competing sports broadcasters TSN and Sportsnet. They also count on those networks to attract subscribers to residential TV services.
            </p>
            <figure class="c-inline-img ">
             <div class="c-inline-img__wrapper" style="padding-bottom: 63.17708333333333%">
              [ahref]
              
             </div>
             <figcaption class="c-article-media__info c-article-media__info--article">
              <div class="c-article-media__description">
               <p class="c-article-media__caption">
                Maple Leaf Sports and Entertainment offices at Scotiabank Arena in Toronto.
               </p>
               <p class="c-article-media__credit">
                Melissa Tait/The Globe and Mail[ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
               </p>
              </div>
             </figcaption>
            </figure>
            <p class="c-article-body__text">
             TSN was the product of another splashy Cope deal, a key asset in his $1.3-billion purchase of national network CTV in 2011. It was part of a wave of “convergence” deals that were popular at the time, combining sports and media content with ownership of telecom distribution assets – internet, TV and wireless services. The businesses provided welcome cash flow while Bell was investing in its internet and wireless networks, as well as cost-efficient access to programming for its growing IPTV service Fibe TV.[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
            </p>
            <p class="c-article-body__text">
             In his 10-year run as BCE’s boss, Mr. Cope has seen ways to make a transaction work that others don’t, according to a banker who has negotiated both with and against him over the years. And while rivals dither, “George will do a deal on a napkin,” said a former senior executive at a competing firm.<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
            </p>
            <div class="j-f-wrap">
             <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="">
              <div class="">
               <div class="c-ad c-ad--inline c-ad--flex" id="c-ad--flex-gpt-2">
                <div class="c-ad__wrapper">
                 <p class="c-ad__message">
                  Story continues below advertisement[link]<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[search][link]
                 </p>
                 <div aria-hidden="true" class="c-ad__image js-c-gpt-ad js-f-ad js-f-ad-xs js-f-ad-sm" data-target='{"pos":"flex2", "ptf":"gpt"}' data-type="flex" id="flex-gpt-2">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <div class="c-ad c-ad--slimcut u-hidden" id="js-ad-slimcut-wrapper">
             <div aria-hidden="true" class="c-ad__wrapper">
              <p class="c-ad__message">
               Story continues below advertisement
              </p>
              <div id="js-ad-slimcut">
              </div>
             </div>
            </div>
            <p class="c-article-body__text">
             But Mr. Cope, 57, is now out of obvious targets. After doing a series of sizable acquisitions in both telecom (Bell Aliant, Manitoba Telecom) and media (CTV, Astral Media), it isn’t obvious where he can turn to next for a deal that will boost growth. The provincially-run Saskatchewan Telecommunications Holding Corp. (SaskTel) is one of the few telcos left, but it’s not for sale. There are a handful of media assets on the market, but competition authorities have already blocked BCE from acquiring French-language specialty TV channels because the company’s already so big. Federal policy made it impossible for BCE to make a play for a handful of smaller wireless carriers and is now favouring the owners of Freedom Mobile and Videotron by allowing them to buy cheaper wireless airwaves.<li>[ahref]</li><li>[link]</li>[search][ahref][ahref]<li>[link]</li>[link]<li>[link]</li><li>[link]</li><li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             What’s a growth-by-acquisition CEO to do with no major deals in sight?
            </p>
            <p class="c-article-body__text">
             On his third-quarter earnings conference call last month, Mr. Cope had good numbers to report, with a 5.5-per-cent rise in earnings per share, after adjustments. But he also had a message for the financial analysts on the line about how he plans to push BCE into the future.<li>[link]</li><li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[search]</li><li>[search]</li><li>[search]</li>
            </p>
            <p class="c-article-body__text">
             The plan doesn’t have the intrigue of another megadeal or a new strategic direction. But that won’t matter if he can make the numbers work. To execute it, he’ll have to lean on the strengths that parachuted him into his role in the first place.
            </p>
            <div class="element element-rawhtml">
             <div class="gc-chart" data-chartid="gc-Bd47ggyqszypFqjH6">
             </div>
            </div>
            <h4 class="c-article-body__subheading-v2 c-article-body__subheading-v2--regular c-article-body__subheading-v2--level4">
             <b>
              ‘Bell was floundering’
             </b>
            </h4>
            <p class="c-article-body__text">
             It was the height of a leveraged-buyout frenzy, when cheap money and a strong economy led to a series of huge takeovers by private equity firms. New York-based KKR &amp; Co. Inc. and the Canada Pension Plan Investment Board (CPPIB) determined BCE’s relatively low valuation made it a prime candidate to take private.<li>[ahref]</li><li>[search]</li>[link]<li>[ahref]</li><li>[search]</li><li>[search]</li>[search]<li>[ahref]</li>[search]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[ahref]</li>
            </p>
            <p class="c-article-body__text">
             By the end of June 2007, the telecommunications company had drawn a competing bid from Ontario Teachers, which had formed a partnership with U.S. players Providence Equity Partners and Madison Dearborn. The Teachers group won with a package worth $51.7-billion, including debt.[link][search]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>
            </p>
            <div class="j-f-wrap">
             <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="">
              <div class="">
               <div class="c-ad c-ad--inline c-ad--flex" id="c-ad--flex-gpt-3">
                <div class="c-ad__wrapper">
                 <p class="c-ad__message">
                  Story continues below advertisement
                 </p>
                 <div aria-hidden="true" class="c-ad__image js-c-gpt-ad js-f-ad js-f-ad-xs js-f-ad-sm" data-target='{"pos":"flex3", "ptf":"gpt"}' data-type="flex" id="flex-gpt-3">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <p class="c-article-body__text">
             “Bell was floundering, and private equity saw an opportunity to come in and take this undervalued stock private and reap the benefits of that,” said current BCE chief financial officer Glen LeBlanc, who was CFO of Bell Aliant at the time. Still, they needed someone to replace Michael Sabia, the BCE chief executive since 2002, who had helped clinch the buyout deal. He had cleaned up the balance sheet by selling non-core assets such as Yellow Pages and satellite services operator Telesat Canada, but he was not seen as a strong operator, and the company’s share price on his watch had been stagnant, almost always trading below $30.
            </p>
            <p class="c-article-body__text">
             Mr. Cope, who had moved to BCE from Telus Corp. in 2006, was their choice. He already had decades of experience in the industry after joining the entrepreneurs who would start Clearnet Communications Inc. in the 1980s, taking it public in 1994 and selling it to Telus in 2000 for $6-billion.
            </p>
            <p class="c-article-body__text">
             In its prebuyout deal life, BCE had very little debt but was saddled with big problems: a bloated cost structure, outdated marketing, disastrous customer service and what analysts call a rotten “asset mix,” meaning it had a lot of exposure to the declining landline phone business and a weaker position in the growing wireless market. (Rogers and Telus are both more heavily weighted in wireless.)
            </p>
            <p class="c-article-body__text">
             The plan for the buyout deal was for Mr. Cope to cut costs, invest in technology and customer service and give the company a serious brand makeover – all while counting on the cash flow of monthly phone bills to pay down debt.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]
            </p>
            <p class="c-article-body__text">
             But over the next year and a half, debt markets cratered as the U.S. subprime mortgage crisis deepened and spread around the world. Meanwhile, regulatory approvals and legal fights with BCE’s existing bondholders delayed the buyout deal’s closing – just as the cost of financing all the necessary debt began to rise.
            </p>
            <p class="c-article-body__text">
             After an auditor declared that, postbuyout, BCE would be technically insolvent, the Teachers group announced the deal was dead on the morning of Thursday, Dec. 11, 2008.<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[ahref]<li>[ahref]</li>[link][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[link]</li>
            </p>
            <div class="j-f-wrap">
             <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="">
              <div class="">
               <div class="c-ad c-ad--inline c-ad--flex" id="c-ad--flex-gpt-4">
                <div class="c-ad__wrapper">
                 <p class="c-ad__message">
                  Story continues below advertisement<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                 </p>
                 <div aria-hidden="true" class="c-ad__image js-c-gpt-ad js-f-ad js-f-ad-xs js-f-ad-sm" data-target='{"pos":"flex4", "ptf":"gpt"}' data-type="flex" id="flex-gpt-4">
                 </div>
                </div>
               </div>
              </div>
             </div>
            </div>
            <p class="c-article-body__text">
             “I remember on the Saturday, I was downtown with my wife, just browsing through stores, and people kept stopping us, wondering what’s next for the company. People were polite, but they were all worried about how much money they lost,” Mr. Cope recalled. “I don’t hide easily. So I eventually said, ‘Let’s just go home.’”<li>[link]</li><li>[link]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[link][ahref]
            </p>
            <p class="c-article-body__text">
             His assignment changed dramatically. He now had all the same problems and still had to answer to about 750,000 shareholders. Remaining a public company came with the added pressure to record consistent growth every quarter and start paying higher dividends.[search]<li>[link]</li>[link][link][ahref]<li>[ahref]</li>[search][search][search][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             So he shifted gears, using historically low interest rates – and the flexibility in his balance sheet – to make a series of acquisitions.[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </p>
            <p class="c-article-body__text">
             Some were central to improving BCE’s core telecom business, such as acquiring the 50 per cent it didn’t already own of discount wireless brand Virgin Mobile Canada and buying electronics retailer The Source, both of which Mr. Cope snapped up in 2009. The latter was a small but important transaction, because the chain had about 750 stores. BCE needed real estate to leapfrog its rivals, which had been adding corporate stores at a faster pace.[link]<li>[ahref]</li><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref]<li>[search]</li>[link]
            </p>
            <p class="c-article-body__text">
             Mr. Cope has always recognized the importance of distribution, so it was not surprising when, five years later, BCE swooped in to acquire Glentel Inc., owner of shopping mall brands Wireless Wave and TBooth Wireless, out from underneath Rogers. Rogers, fearing a loss of wireless subscribers, desperately wanted in, and after some legal wrangling, BCE agreed to split it. But the deal forced Rogers to overpay for its 50-per-cent share, putting down $473-million of the $594-million purchase price.
            </p>
            <p class="c-article-body__text">
             The benefits of BCE’s purchase of data centre provider Q9 Networks Inc. were not as clear, and of course there was the bet on media, which now looks questionable at best. The CTV deal was followed by the $3-billion purchase of Astral Media, which owned a wide portfolio of radio and specialty TV stations, including the Canadian rights to HBO content.
            </p>
            <p class="c-article-body__text">
             Since then, regulations have prevented telecoms from hoarding most media content for their own customers, while the fortunes of traditional television services have dimmed in the face of competition from new players such as Netflix Inc. and plummeting advertising revenues.
            </p>
            <p class="c-article-body__text">
             But Mr. Cope’s signature telecom deals have been winners. BCE took Atlantic Canada telecom Bell Aliant private in 2014 at a cost of $4-billion and closed a deal last year to buy Manitoba Telecom Services Inc. (MTS) for $3.1-billion. Both gave BCE more scale and subscribers for growing data services.<li>[ahref]</li>[ahref]<li>[ahref]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link][ahref]<li>[search]</li>[ahref]<li>[ahref]</li><li>[ahref]</li>[search]
            </p>
            <p class="c-article-body__text">
             Shortly after taking over, he approved a new marketing campaign and stripped the management ranks, cutting 2,500 jobs in 2008 and a further 2,400 over the next few years.
            </p>
            <p class="c-article-body__text">
             To fix customer service, the company hired thousands of new technicians and extended call centre hours and installation windows to evenings and weekends. BCE spent hundreds of millions on new call routing systems and kitted out technicians’ trucks with GPS and laptops.<li>[ahref]</li><li>[ahref]</li><li>[search]</li>[ahref][search]<li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li>[search][search]<li>[search]</li>[ahref]
            </p>
            <p class="c-article-body__text">
             The company lagged behind rivals on the technology front. Its inferior wireless network and outdated copper telephone wires could not deliver TV signals or fast internet service. Mr. Cope struck a deal with Telus to build a shared cellular network, giving both companies infrastructure that was finally compatible with Apple’s market-leading iPhone.<li>[ahref]</li>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link]<li>[ahref]</li>
            </p>
            <p class="c-article-body__text">
             With the wireless assets in better shape, the CEO then poured billions into upgrading the company’s landline network, installing much faster fibre optic cables first into neighbourhoods and more recently directly to customers’ homes.[search]<li>[ahref]</li><li>[link]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[search]</li>
            </p>
            <p class="c-article-body__text">
             BCE started winning a larger share of the TV and internet market, which was dominated by cable rivals Rogers, Cogeco and Videotron. And it began winning more wireless customers on contracts than its rivals, scooping up 1.3 million since 2015, compared with about 1.1 million at each of Rogers and Telus. At the same time, it shifted from lower-value customers to higher spenders, eventually achieving the highest average monthly revenue per user in the country at $69.28 last quarter.
            </p>
            <p class="c-article-body__text">
             “That doesn’t happen by chance,” said Desjardins Securities analyst Maher Yaghi, noting that it typically takes lower prices to woo more subscribers. “It is because they invested a lot of money in the network, they had the right marketing campaigns and they invested in customer service.”<li>[ahref]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>
            </p>
            <div class="element element-rawhtml">
             <div class="gi ai2html ai2html-box-v5" id="gi-1207-rb-cd-cope-box">
              <div class="gi-artboard" data-aspect-ratio="0.654" data-max-width="334" data-min-width="280" id="gi-1207-rb-cd-cope-mobile-small" style="width:280px; height:427.812958641322px;">
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-1" style="top:4.0738%;margin-top:-16.4px;left:0.512%;width:178px;">
                <p class="gi-pstyle0">
                 Average billing per user<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>[search]<li>[link]</li>[link]<li>[search]</li>[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
                </p>
                <p class="gi-pstyle0">
                 (wireless customers)[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-2" style="bottom:80.8727%;left:0.5122%;width:298px;">
                <p class="gi-pstyle1">
                 BCE’s ABPU increased 12.5 per cent over the past
                </p>
                <p class="gi-pstyle1">
                 four years, compared with 8.6 per cent for Rogers
                </p>
                <p class="gi-pstyle1">
                 and 8 per cent for Telus.
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-3" style="bottom:71.8533%;right:85.1318%;width:50px;">
                <p class="gi-pstyle2">
                 Q3
                </p>
                <p class="gi-pstyle2">
                 2014[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search]<li>[link]</li><li>[ahref]</li>[ahref]<li>[link]</li><li>[link]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-4" style="bottom:71.8533%;left:84.8833%;width:50px;">
                <p class="gi-pstyle3">
                 Q3[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>
                </p>
                <p class="gi-pstyle3">
                 2018<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-5" style="bottom:64.0208%;left:84.8833%;width:60px;">
                <p class="gi-pstyle4">
                 BCE
                </p>
                <p class="gi-pstyle5">
                 $69.28[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-6" style="bottom:56.2701%;left:84.8833%;width:60px;">
                <p class="gi-pstyle6">
                 Telus
                </p>
                <p class="gi-pstyle7">
                 $68.64
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-7" style="bottom:40.7132%;left:84.8833%;width:61px;">
                <p class="gi-pstyle8">
                 Rogers[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
                </p>
                <p class="gi-pstyle9">
                 $66.20<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][search]<li>[link]</li>[link][search]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-8" style="bottom:23.5761%;left:1.1881%;width:60px;">
                <p class="gi-pstyle7">
                 $63.52
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-9" style="bottom:10.4633%;right:85.2977%;width:59px;">
                <p class="gi-pstyle10">
                 $61.59
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-10" style="bottom:5.6972%;left:1.288%;width:60px;">
                <p class="gi-pstyle9">
                 $60.96
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai0-11" style="top:98.5957%;margin-top:-5.8px;left:0.6501%;width:274px;">
                <p class="gi-pstyle11">
                 THE GLOBE AND MAIL, SOURCE: DESJARDINS SECURITIES
                </p>
               </div>
              </div>
              <div class="gi-artboard" data-aspect-ratio="0.759" data-max-width="619" data-min-width="335" id="gi-1207-rb-cd-cope-mobile-large" style="width:335px; height:441.121807174221px;">
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-1" style="top:2.1373%;margin-top:-8.4px;left:0.2985%;width:316px;">
                <p class="gi-pstyle0">
                 Average billing per user (wireless customers)<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][link][ahref][link][search]<li>[ahref]</li>[ahref][ahref][search]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-2" style="bottom:84.8502%;left:0.2986%;width:328px;">
                <p class="gi-pstyle1">
                 BCE’s ABPU increased 12.5 per cent over the past four
                </p>
                <p class="gi-pstyle1">
                 years, compared with 8.6 per cent for Rogers and 8 per[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]
                </p>
                <p class="gi-pstyle1">
                 cent for Telus.
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-3" style="bottom:76.8368%;right:88.2673%;width:50px;">
                <p class="gi-pstyle2">
                 Q3<li>[link]</li>[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
                </p>
                <p class="gi-pstyle2">
                 2014<li>[ahref]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-4" style="bottom:76.8368%;left:87.2678%;width:50px;">
                <p class="gi-pstyle3">
                 Q3[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[ahref]
                </p>
                <p class="gi-pstyle3">
                 2018<li>[link]</li><li>[search]</li>[link][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][search][link]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-5" style="bottom:69.2406%;left:87.2678%;width:60px;">
                <p class="gi-pstyle4">
                 BCE
                </p>
                <p class="gi-pstyle5">
                 $69.28
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-6" style="bottom:61.7238%;left:87.2678%;width:60px;">
                <p class="gi-pstyle6">
                 Telus
                </p>
                <p class="gi-pstyle7">
                 $68.64[ahref]<li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][link]<li>[link]</li>[ahref][ahref][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-7" style="bottom:45.276%;left:87.2678%;width:61px;">
                <p class="gi-pstyle8">
                 Rogers<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link][link][link][link]<li>[ahref]</li>
                </p>
                <p class="gi-pstyle9">
                 $66.20<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-8" style="bottom:25.9355%;left:0.2986%;width:60px;">
                <p class="gi-pstyle7">
                 $63.52
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-9" style="bottom:11.1782%;right:88.4059%;width:59px;">
                <p class="gi-pstyle10">
                 $61.59
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-10" style="bottom:7.0091%;left:0.3823%;width:60px;">
                <p class="gi-pstyle9">
                 $60.96<li>[search]</li><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[link]</li><li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[search]</li><li>[search]</li>[link][ahref]
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai1-11" style="top:98.5681%;margin-top:-5.8px;left:0.3823%;width:274px;">
                <p class="gi-pstyle11">
                 THE GLOBE AND MAIL, SOURCE: DESJARDINS SECURITIES<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref][search]<li>[link]</li>[search]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref][search]<li>[search]</li>
                </p>
               </div>
              </div>
              <div class="gi-artboard" data-aspect-ratio="1.37" data-min-width="620" id="gi-1207-rb-cd-cope-desktop" style="width:620px; height:452.51457155259px;">
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai2-1" style="top:4.3052%;margin-top:-18.5px;left:44.8006%;margin-left:-98.5px;width:197px;">
                <p class="gi-pstyle0">
                 Average billing per user<li>[ahref]</li>[search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link]
                </p>
                <p class="gi-pstyle0">
                 (wireless customers)
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-2" style="bottom:82.6285%;right:86.2275%;width:54px;">
                <p class="gi-pstyle1">
                 Q3[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
                </p>
                <p class="gi-pstyle1">
                 2014[ahref][ahref][link]<li>[search]</li><li>[link]</li>
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-3" style="bottom:82.6285%;left:75.851%;width:54px;">
                <p class="gi-pstyle2">
                 Q3<li>[search]</li>[link]<li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref][ahref][search]
                </p>
                <p class="gi-pstyle2">
                 2018[ahref]<li>[search]</li><li>[ahref]</li>[search][ahref][ahref]<li>[search]</li>[search]<li>[link]</li><li>[ahref]</li>
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-4" style="bottom:73.0132%;left:75.8509%;width:130px;">
                <p class="gi-pstyle3">
                 BCE
                </p>
                <p class="gi-pstyle4">
                 $69.28 (+12.5%)[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-5" style="bottom:63.6968%;left:75.851%;width:110px;">
                <p class="gi-pstyle5">
                 Telus
                </p>
                <p class="gi-pstyle6">
                 $68.64 (+8%)
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-6" style="bottom:47.8839%;left:75.851%;width:122px;">
                <p class="gi-pstyle7">
                 Rogers<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                </p>
                <p class="gi-pstyle8">
                 $66.20 (+8.6%)[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-7" style="bottom:27.1115%;left:6.7118%;width:66px;">
                <p class="gi-pstyle6">
                 $63.52<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li><li>[link]</li><li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-8" style="bottom:11.6208%;right:86.1978%;width:65px;">
                <p class="gi-pstyle9">
                 $61.59
                </p>
               </div>
               <div class="gi-Layer_1 gi-aiAbs gi-aiPointText" id="gi-ai2-9" style="bottom:6.4518%;left:6.7635%;width:65px;">
                <p class="gi-pstyle8">
                 $60.96
                </p>
               </div>
               <div class="gi-graphic gi-aiAbs gi-aiPointText" id="gi-ai2-10" style="top:98.4191%;margin-top:-6.4px;left:6.7118%;width:320px;">
                <p class="gi-pstyle10">
                 THE GLOBE AND MAIL, SOURCE: DESJARDINS SECURITIES
                </p>
               </div>
              </div>
             </div>
            </div>
            <p class="c-article-body__text">
             A lot of those investments would not have been made if the privatization deal had succeeded, Mr. LeBlanc said. “Private equity looks to lever up, squeeze the lemon, take the cash and move on."
            </p>
            <p class="c-article-body__text">
             “Frankly, we executed a strategy as a public company awfully close to what we thought about doing privately, other than I think the public markets enabled us to do it quicker,” Mr. Cope says. “We acquired The Source, Virgin. We moved pretty quickly with the investment in Maple Leaf Sports and CTV. A lot of those things became very core to the strategy, and those were not a part of the go-private structure. They were not in that original plan.”
            </p>
            <p class="c-article-body__text">
             Mr. Cope had turned the company around, executing the buyout plan – with a twist, using acquisitions to help spur growth and fund investments – but now he needs to prove that organic growth is enough.
            </p>
            <div class="element element-rawhtml">
             <div class="gc-chart" data-chartid="gc-a3HXqm5orE7a5p8MW">
             </div>
            </div>
            <h4 class="c-article-body__subheading-v2 c-article-body__subheading-v2--regular c-article-body__subheading-v2--level4">
             <b>
              ‘You have to take out the costs’
             </b>
            </h4>
            <p class="c-article-body__text">
             Mr. Cope’s penchant for making regular multibillion-dollar acquisitions prompted National Bank analyst Adam Shine to put together a table on his shopping record last year to help predict the number of days until the next big deal. His average pace, according to Mr. Shine, was one multibillion-dollar deal announced every 716 days, and a new one was inked, on average, 430 days after the previous deal closed. So BCE was due for another megadeal between April and September of this year.[ahref][ahref][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li>
            </p>
            <p class="c-article-body__text">
             When nothing materialized by mid-August, the analyst ran the numbers on the possibility of BCE scooping up the struggling movie theatre chain Cineplex Inc. He made clear it was pure speculation around a potential “nice to have” transaction if it could be done at the right price. Still, the idea got Bay Street talking.
            </p>
            <p class="c-article-body__text">
             Mr. Cope tells me he heard the Cineplex chatter and won’t comment on it specifically, but makes it a point to add that he’s very satisfied with the media assets BCE has right now.[ahref][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[ahref]</li>[search][search]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
            </p>
            <p class="c-article-body__text">
             And he’s not looking for targets outside of Canada. “You never say never to anything, but it’s not a space that we’re strategically hunting or looking at.”[search]<li>[link]</li>[ahref]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             BCE will still do small “tuck-in” acquisitions. Sources close to the company say its corporate development and legal teams are good at finding even the smallest opportunity to add EBITDA through an acquisition, particularly at the end of a quarter.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </p>
            <p class="c-article-body__text">
             But Mr. Cope says “the focus for the last three to four years has been much more on broadband network infrastructure. We all know the fibre story, the 5G and the wireless story. That’s where our capital is going for our shareholders.[search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref][search]<li>[ahref]</li><li>[ahref]</li>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[link]
            </p>
            <p class="c-article-body__text">
             “Now, some of our acquisitions have helped accelerate the growth once in a while. And a lot of people have written, ‘Without the acquisitions, would this have happened and would that have happened?’ And it’s a bit of a silly conversation, because it did happen, so why is it relevant?”<li>[link]</li>[link][search][search]<li>[search]</li>[link]<li>[link]</li><li>[ahref]</li>
            </p>
            <p class="c-article-body__text">
             Perhaps it isn’t – if he can convince investors that they won’t notice the missing growth now that the shopping spree has ended.[ahref][link]<li>[ahref]</li>[search][search][search]
            </p>
            <p class="c-article-body__text">
             “The main questions we have from investors right now are: ‘Is this dividend growth sustainable? Are there any other tricks up BCE’s sleeve on the acquisition side that will support free cash flow?'” said Macquarie Capital’s Sanford Lee.[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[link][search]
            </p>
            <figure class="c-inline-img ">
             <div class="c-inline-img__wrapper" style="padding-bottom: 66.66666666666666%">
              [link]
              
             </div>
             <figcaption class="c-article-media__info c-article-media__info--article">
              <div class="c-article-media__description">
               <p class="c-article-media__caption">
                From left, George Cope, MLSE chairman Larry Tanenbaum and Nadir Mohamed, president and CEO of Rogers Communications, hold up Toronto Raptors, Toronto FC, Toronto Maple Leafs and Toronto Marlies jerseys following a press conference in Toronto on Dec. 9, 2011.
               </p>
               <p class="c-article-media__credit">
                Chris Young/The Canadian Press<li>[link]</li><li>[link]</li>[link][ahref][ahref]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[ahref]</li>
               </p>
              </div>
             </figcaption>
            </figure>
            <p class="c-article-body__text">
             For the past 10 years, BCE has increased its dividend by at least 5 per cent annually, returning $2.5-billion to shareholders last year. How can Mr. Cope keep spending almost $4-billion a year on capital investments and pay for the growing dividend investors expect?[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li><li>[search]</li>[ahref][ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             BCE still has years to go on its expensive fibre buildout, bringing higher-speed internet service directly to at least 9.3 million households and businesses from Manitoba to Atlantic Canada. And its next-generation 5G wireless network upgrade will require significant investments in cellular spectrum licences as well as vast purchases of radio and antenna equipment to build thousands of small cells – smaller versions of cell towers that will be installed on the sides of buildings, on lamp posts and other urban infrastructure.<li>[search]</li><li>[search]</li><li>[link]</li><li>[link]</li><li>[link]</li>
            </p>
            <p class="c-article-body__text">
             After years of steady growth under the CEO’s watch, BCE shares started to languish in mid-2017. Analysts say the stock has been hit in part by rising interest rates, as investors turn away from safe and predictable dividend stocks. But they also say stumbling performance on the TV and internet side and slowing wireless revenue growth contributed to the stock slump, as did a worsening outlook for media on ever-declining advertising revenues.[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
            </p>
            <p class="c-article-body__text">
             However, the shares seemed to reach a bottom this fall, at just over $51 in early October, and are up almost 12 per cent since then. Analyst sentiment has shifted, too, with a few upgrading their ratings on the stock in recent months.[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[link]</li>[search][ahref][link][link][ahref]
            </p>
            <p class="c-article-body__text">
             The company’s third-quarter earnings report from early November showed it attracted 53,000 new internet subscribers and added 40,000 Fibe TV customers – far more than expected – suggesting the fibre build is giving the residential business some momentum. And Mr. Cope has been actively telling Bay Street why he thinks the company can keep generating cash flow growth.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[link][link]<li>[ahref]</li>[ahref][link][link][link]<li>[ahref]</li><li>[search]</li>[ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </p>
            <p class="c-article-body__text">
             He says it will come from a combination of factors, and his story seems to be resonating.[ahref]<li>[link]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             One is easing demand for capital investment as the company approaches the halfway point of its fibre build. Plus, BCE says it can reach as many as a million new internet customers in rural areas using new wireless technology, which is much cheaper than fibre to roll out. On the wireless side, the company says it has a leg up in the race to 5G thanks to all the fibre it has already deployed, which will be crucial to making the back end of the cellular network fast.
            </p>
            <p class="c-article-body__text">
             Second, the cost-cutting never stops. Mr. Cope told analysts on the November call that BCE had cut 700 jobs in the previous three months, which will save the company $75-million a year. (Its headcount was 51,679 as of the end of last year.) The fibre project helps with that, he tells me in our interview, because the new network is more reliable and requires fewer service calls and fewer people to manage it all.
            </p>
            <p class="c-article-body__text">
             Mr. Cope gets a lot of buy-in from analysts on this point, because the company has the best cost structure in the business and correspondingly high profit margins.
            </p>
            <p class="c-article-body__text">
             “You have to take out the costs to protect the margin, to protect the cash flow of this company, so that we have the cash to invest in tomorrow’s technology,” Mr. LeBlanc said. “George really has forced into his executive team, and into the leadership team around here, cost discipline, margin management as a core competency. With George it’s never a project – it’s just the way he has trained the team to operate and it’s the way he thinks.”
            </p>
            <p class="c-article-body__text">
             Finally, BCE can look forward to new cash flow thanks to favourable tax developments as well as relief on massive cash contributions to its pension, which supported nearly 50,000 pensioners as of last year. Thanks to rising interest rates, the company expects it will pay $1-billion to $1.5-billion less on pension contributions over the next five years. Its defined benefit pension solvency rate was 100.5 per cent at the end of September, and if it reaches 105 per cent, the company has an opportunity to save a further $200-million a year.
            </p>
            <p class="c-article-body__text">
             After the earnings call, RBC Securities analyst Drew McReynolds commented that the factors Mr. Cope laid out were not necessarily new, but he said the “explicit granularity” around free cash flow“ arguably removes what has been lingering uncertainty around the company’s dividend growth model looking into 2019.”[search]<li>[link]</li><li>[ahref]</li>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li><li>[search]</li><li>[link]</li>[ahref][search][link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
            </p>
            <div class="element element-rawhtml">
             <div class="gc-chart" data-chartid="gc-uh9ZGmyseeeAbQo7m">
             </div>
            </div>
            <h4 class="c-article-body__subheading-v2 c-article-body__subheading-v2--regular c-article-body__subheading-v2--level4">
             <b>
              ‘You keep score’
             </b>
            </h4>
            <p class="c-article-body__text">
             As almost every profile of Mr. Cope dutifully notes, he’s especially fond of sports metaphors. As we watch Raptors head coach Nick Nurse gather the players in a large circle for a team-wide chat to start the practice, he tells me, “I find sports and business so similar, because they’re competitive, you play by the rules and, in a public company, you keep score, so you really know if you’re doing well against your competitors.”<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             For the past 18 years, he has worked either for or in friendly competition with Telus CEO Darren Entwistle. The pair, who are almost the same age, came up in the early days of the industry. Mr. Entwistle worked as a lineman at BCE while Mr. Cope, fresh out of business school, joined the soon-to-be Clearnet team in the 1980s.<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[search]</li>
            </p>
            <p class="c-article-body__text">
             Both share a similar dogged focus on numbers and execution, both have enjoyed fantastic success and both are well regarded and sometimes feared (Mr. Entwistle probably pulls ahead on the latter).[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </p>
            <p class="c-article-body__text">
             And now, Mr. Entwistle’s one-time successor Joe Natale (who also overlapped with Mr. Cope at Telus) is a year and a half into running Rogers, still the country’s biggest wireless carrier.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <p class="c-article-body__text">
             The trio of CEOs, former teammates, all excel at heads-down operations and know each other’s moves well. That means they can’t count on out-thinking each other in a maturing Canadian telecom market, which has been described as a “game of inches,” with none of the major players having an obvious advantage.<li>[link]</li><li>[link]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
            </p>
            <p class="c-article-body__text">
             At Bell, Mr. Cope is loyal to his corporate team. Many of his senior executives – who primarily work out of the company’s management suite on the 44th floor of a tower at Bay and Adelaide streets in downtown Toronto – have been by his side since his Telus days, if not the Clearnet era.<li>[search]</li><li>[search]</li><li>[search]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[search][link]<li>[link]</li>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
            </p>
            <p class="c-article-body__text">
             Mr. Cope recently promoted regulatory and legal executive Mirko Bibic to the role of chief operating officer, notable in part because he himself was the last person to hold that title. Mr. Bibic has played a key role in corporate development, shepherding the company’s trickiest deals – in particular MTS, which involved a series of concessions to get competition authorities on side. Mr. Bibic is smart and personable and seen by many as a star, but he lacks hands-on operational experience, hence the new role.[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li>[ahref][link]<li>[ahref]</li><li>[ahref]</li>[search][link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
            </p>
            <p class="c-article-body__text">
             For the first time in a decade, the prospect of Mr. Cope not running BCE seems to be on the horizon.[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][ahref]<li>[link]</li><li>[ahref]</li>[link][ahref]<li>[ahref]</li>[search]<li>[link]</li>
            </p>
            <p class="c-article-body__text">
             For now, all Mr. Cope will say on the subject is, “I’m really liking what I do.”
            </p>
           </div>
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-correction" id="f0nfl3HlSkLVbr">
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-asf-body-bottom" id="f0fI7LzlSkLVbr">
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-disclaimer" id="f0CK35ElSkLVbr">
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-follow-on-twitter" id="f0RtSH5lSkLVbr">
           <div class="c-follow-authors u-floorless">
            <span class="c-follow-authors__message">
             Follow Christine Dobby on Twitter
            </span>
            <span class="c-follow-authors__links">
             [ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
            </span>
           </div>
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-actions" id="fINhw71lSkLVbr">
           <div class="c-article-actions">
            [link]
            
            <a class="c-article-action" href="/about/editorial-code/">
             <span aria-label="Editorial code of conduct" class="c-indicator-icon">
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[search][ahref][link][link]<li>[search]</li>[search][ahref][search]<li>[search]</li>
             </span>
             <span class="c-article-action__text">
              Editorial code of conduct<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
             </span>
            </a>
           </div>
          </div>
          <div class="u-wrapper pb-feature pb-layout-item pb-f-article-author-profile" id="f7XIZn1lSkLVbr">
          </div>
         </article>
        </main>
        <div class="u-space-mtn u-space-mbn pb-layout-item pb-chain pb-c-section-1n-columns" id="cOwMGa2lSkLVbr">
         <div class="l-row arc-c-recommended-similar-wines">
          <div class="l-col-1 l-col-sm">
           <div class="u-wrapper pb-feature pb-layout-item pb-f-recommended-similar-wines" id="fzrYX71lSkLVbr">
           </div>
          </div>
          <div class="l-col-1 l-col-sm">
           <div class="u-wrapper pb-feature pb-layout-item pb-f-recommended-similar-wines" id="faoTDP1lSkLVbr">
           </div>
          </div>
         </div>
        </div>
        <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-recommended-similar-wines-disclaimer" id="f0AzsLdlSkLVbr">
        </div>
        <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-article-wine-story-promo" id="fwMuyD1lSkLVbr">
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-article-wine-newsletter" id="f0CFgAjlSkLVbr">
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-financial-barchart-story-tickers" id="f0abBcolSkLVbr">
         <div class="u-space-mtm u-space-mbn" data-assets='{"css":"https://db5t31uruoasx.cloudfront.net/assets/globeandmail/build/barchart-c838fd17f3.css"}' id="barchart-story-tickers">
          <h5 class="c-article-body__subheading-v2--regular c-article-body__subheading-v2--level5 u-space-mtn u-space-mbn">
           Tickers mentioned in this story
          </h5>
          <div class="o-realtime-control">
           <label class="c-form__label o-realtime-control__label" for="js-c-realtime-control">
            Data Update
           </label>
           <span class="c-tooltip">
            <li>[ahref]</li><li>[link]</li><li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li>
           </span>
          </div>
          <div class="o-ticker-output">
           <div class="barchart font__gmsanc-regular">
            <div class="news-story-tickers">
             <div id="newsStoryTickers">
              <div class="pos-r">
               <div class="table-scroll-area">
                <table baseurl="https://globeandmail.pl.barchart.com" class="table bc-datatable nowrap dataTable" id="dt-cc999160959ba5f668e4999c7162b9b2903dad42" input='{"symbols":["BCE-T","BCE-N","BCE-N","","","","","","","","","","","","","",""],"fields":"symbol,symbolName,lastPrice,priceChange,percentChange"}' is="barchart-data-table" options='{"links":{"fields":["symbol"],"map":{"1":"\/investing\/markets\/stocks\/","2":"\/investing\/markets\/commodities\/","6":"\/investing\/markets\/stocks\/","9":"\/investing\/markets\/indices\/","10":"\/investing\/markets\/currencies\/","7":"\/investing\/markets\/stocks\/","5":"\/investing\/markets\/funds\/","8":"\/investing\/markets\/funds\/","15":"\/investing\/markets\/funds\/","11":"\/investing\/markets\/stocks\/"}},"views":false,"paginate":false,"dateRange":false,"tabs":false,"sortable":false,"disableJerqBinding":false}'>
                </table>
               </div>
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-related-adv" id="fLQxeN1lSkLVbr">
        </div>
        <div class="article-related-content-chain pb-layout-item pb-chain pb-c-article-related-content" id="c0Rkh4ulSkLVbr">
         <div class="u-wrapper pb-feature pb-layout-item pb-f-notifications-website-alert-node" id="fDxKem1lSkLVbr">
          <div class="c-website-alert-node js-c-website-alert-node u-hidden" data-source="?name=system-maintenance&amp;uri=/website-alerts/" data-umb="m" data-umt="m">
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-article-comments" id="fanjyZ1lSkLVbr">
          <div class="c-comments" id="comments">
           <div class="c-comments-bar js-c-comments-bar">
            <div class="c-comments-bar__count">
             <span class="c-comments-bar__count__icon">
              <li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
             </span>
             <span class="c-comments-bar__count__text">
              Comments [ahref][search]<li>[link]</li>[ahref]<li>[search]</li>[ahref]<li>[link]</li><li>[link]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
            </div>
            <div class="c-comments-bar__control js-c-comments-control">
             <button aria-controls="comments-panel" aria-expanded="false" class="c-button js-c-comments-button" type="button">
              <svg aria-hidden="true" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="u-visually-hidden">
               Show comments
              </span>
             </button>
            </div>
           </div>
           <span id="comments">
            <li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
           </span>
           <div class="c-comments-panel js-c-comments-panel u-hidden" id="comments-panel">
            <div class="c-comments-panel__preamble">
             <div class="js-role-visibility--anonymous u-hidden">
              <p>
               <li>[ahref]</li>[ahref][search][ahref]<li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][link][search]<li>[link]</li>[link][link][link][ahref]<li>[search]</li><li>[ahref]</li>[search][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
              </p>
              <p>
               <li>[link]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>[link]<li>[search]</li>[link]<li>[search]</li><li>[ahref]</li><li>[link]</li>
              </p>
              <div class="c-comments-panel__preamble-actions">
               [ahref]
               
               [ahref]
               
               [ahref]
               
              </div>
             </div>
             <div class="js-role-visibility--registered u-hidden">
              <p>
               [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][ahref]<li>[search]</li><li>[link]</li>[link]<li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </p>
              <p>
               [search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[ahref]</li>[search]<li>[link]</li>[link]<li>[ahref]</li>[ahref]<li>[ahref]</li>[link][ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
              </p>
              <div class="c-comments-panel__preamble-actions">
               [link]
               
               [ahref]
               
               [link]
               
              </div>
             </div>
             <div class="js-role-visibility--unlimited u-hidden">
              <p>
               Welcome to The Globe and Mail’s comment community. This is a space where subscribers can engage with each other and Globe staff.<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]<li>[link]</li><li>[search]</li>
              </p>
              <p>
               We aim to create a safe and valuable space for discussion and debate. That means:<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search][search]
              </p>
              <ul>
               <li>
                All comments will be reviewed by one or more moderators before being posted to the site. This should only take a few moments.
               </li>
               <li>
                Treat others as you wish to be treated
               </li>
               <li>
                Criticize ideas, not people
               </li>
               <li>
                Stay on topic
               </li>
               <li>
                Avoid the use of toxic and offensive language
               </li>
               <li>
                Flag bad behaviour
               </li>
              </ul>
              <p>
               Comments that violate our community guidelines will be removed. Commenters who repeatedly violate community guidelines may be suspended, causing them to temporarily lose their ability to engage with comments.[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
              </p>
              <p>
               <li>[search]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link][ahref]
              </p>
             </div>
             <p id="js-c-comments-message">
              Discussion loading ...[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
             </p>
            </div>
            <div class="c-comments-panel__comments">
             <div id="js-c-comments-widget">
             </div>
            </div>
            <div class="c-comments-panel__postamble">
             <p>
              Read
              <a href="/opinion/letters/">
               most recent letters to the editor
              </a>
              .
             </p>
            </div>
           </div>
          </div>
         </div>
         <div class="u-hidden pb-feature pb-layout-item pb-f-generic-text" id="f005VmGlSkLVbr">
          <div class="gtext">
           <div class="gtext-body">
            <div class="comments_disabled">
             <div class="comments_disabled__text">
              Due to technical reasons, we have temporarily removed commenting from our articles. We hope to have this fixed soon. Thank you for your patience. If you are looking to give feedback on our new site, please send it along to
              [ahref]
              
              . If you want to write a letter to the editor, please forward to
              [ahref]
              
              .
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-related-articles" id="f0YzQIFlSkLVbr">
          <aside class="o-related-articles">
           <h2 class="o-related-articles__heading">
            [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
           </h2>
           <div class="o-related-articles__cards">
            <div class="o-card o-card--story">
             <a class="o-card__link" data-analyticsclick='{"type":"link","feature":"related","contentId":"SAIRORWF4RDITO3LMYIQ5ZAFR4","label":"the week’s most oversold and overbought stocks on the tsx","page":"art:business:related","position":1,"hierarchy":1}' data-lt-lid="Headline.1" data-lt-pos="art:business:related" data-sophi="SAIRORWF4RDITO3LMYIQ5ZAFR4" href="/investing/markets/inside-the-market/article-the-weeks-most-oversold-and-overbought-stocks-on-the-tsx-25/">
              <div class="o-card__content">
               <div class="o-card__col">
                <span class="o-card__content-group">
                 <li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
                </span>
               </div>
               <div class="u-hidden o-card__col">
                <div class="c-image-container c-image-container--lazy" style="padding-bottom: 66.66666666666666%">
                 <div class="c-image-container--lazy__wrapper">
                  <noscript>
                  </noscript>
                 </div>
                </div>
               </div>
              </div>
             </a>
            </div>
            <div class="o-card o-card--story">
             [link]
             
            </div>
            <div class="o-card o-card--story">
             <a class="o-card__link" data-analyticsclick='{"type":"link","feature":"related","contentId":"IJMTP5VQ2RGAFKH7AJAFPERKCQ","label":"csis director warns of state-sponsored espionage threat to 5g networks","page":"art:business:related","position":3,"hierarchy":1}' data-lt-lid="Headline.3" data-lt-pos="art:business:related" data-sophi="IJMTP5VQ2RGAFKH7AJAFPERKCQ" href="/politics/article-canadas-spy-chief-warns-about-state-sponsored-espionage-through/">
              <div class="o-card__content">
               <div class="o-card__col">
                <span class="o-card__content-group">
                 [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><li>[search]</li>[search][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </div>
               <div class="u-hidden o-card__col">
                <div class="c-image-container c-image-container--lazy" style="padding-bottom: 66.66666666666666%">
                 <div class="c-image-container--lazy__wrapper">
                  <noscript>
                  </noscript>
                 </div>
                </div>
               </div>
              </div>
             </a>
            </div>
           </div>
          </aside>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-recommended-articles" id="f0ZdrWylSkLVbr">
          <div class="js-recommended-articles" data-heading="Next Story" data-id="recommended-mobile_art_morestories" data-lazy-render="true" data-refresh="false" data-request='{"widget_id":"recommended-mobile_art_morestories","include_read":false,"include_content_types":"news,blog,column,review,gallery","limit":5,"context":"mobile_art_morestories","width":"w620","min_content_age":61,"platform":"desktop","max_content_age":172801}' data-source="tgam" data-style="listWithImages">
          </div>
         </div>
         <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="f0hEdDYlSkLVbr">
          <div class="gtext">
           <div class="gtext-body">
            <div class="des-891-bottom u-wrapper u-hidden">
             <div id="robcpro-promo" style="margin: 15px auto; text-align: center; cursor: pointer;">
              <picture>
               <source media="(min-width: 768px)" sizes="620px" srcset="https://www.theglobeandmail.com/files/dev/cannabis-pro/cannabis-cem-units-v7/cannabispro-700x146.jpg 700w"/>
              </picture>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f5lyHj1lSkLVbr">
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f0IQcYklSkLVbr">
        </div>
       </div>
      </div>
     </section>
     <section class="secondary-content--story l-col-1 l-col-sm-8 l-col-md-4 l-col-lg-4 l-offset-lg-2" id="secondary-content-area">
      <div class="l-row">
       <div class="pb-container">
        <div class="article-secondary-content-chain pb-layout-item pb-chain pb-c-article-secondary-content" id="cce0TD1lSkLVbr">
         <div class="u-wrapper pb-feature pb-layout-item pb-f-recommended-articles" id="f0drZMHlSkLVbr">
          <div class="js-recommended-articles" data-heading="Trending" data-id="recommended-art_mostpopular" data-lazy-render="true" data-refresh="false" data-request='{"widget_id":"recommended-art_mostpopular","include_read":false,"include_content_types":"news,blog,column,review,gallery","limit":5,"context":"art_mostpopular","min_content_age":61,"platform":"desktop","max_content_age":86401}' data-source="tgam" data-style="orderedList">
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="fiHG282lSkLVbr">
          <div class="">
           <div class="c-ad c-ad--boxr" id="c-ad--boxr-gpt-1">
            <div class="c-ad__wrapper">
             <div aria-hidden="true" class="c-ad__image js-c-gpt-ad" data-target='{"pos":"boxr", "ptf":"gpt"}' data-type="boxr" id="boxr-gpt-1">
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-commercial-dfp-ads" id="f05n10GlSkLVbr">
          <div class="">
           <div class="c-ad c-ad--halfpager" id="c-ad--halfpager-gpt-1">
            <div class="c-ad__wrapper js-stickyad">
             <div aria-hidden="true" class="c-ad__image js-c-gpt-ad" data-target='{"pos":"halfpager", "ptf":"gpt"}' data-type="halfpager" id="halfpager-gpt-1">
             </div>
            </div>
           </div>
          </div>
         </div>
         <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-commercial-sticky-stack-ads" id="f0CTIQolSkLVbr">
          <div class="c-sticky-stack" data-max-ads="7" id="js-sticky-stack">
          </div>
         </div>
        </div>
       </div>
      </div>
     </section>
    </div>
    <div class="l-row">
     <section class="tertiary-content--story l-col-1" id="tertiary-content-area">
      <div class="l-row">
       <div class="pb-container">
        <div class=" pb-layout-item pb-chain pb-c-default-chain" id="c0emrwdlSkLVbr">
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f0PyyIolSkLVbr">
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fj5c2Z1lSkLVbr">
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fJ1WDc1lSkLVbr">
          <span data-variant="" id="cem1013-variantCheck">
          </span>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f0ufQy5lSkLVbr">
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fWO2OJ1lSkLVbr">
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fyw5Qc1lSkLVbr">
          <div class="u-wrapper arc-4299 u-hidden">
           <div class="o-card o-card--event o-card--event--short o-card--event--merlot-100">
            [ahref]
            
           </div>
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fJPqRi2lSkLVbr">
         </div>
         <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="fAtb4T1lSkLVbr">
          <div class="gtext">
           <div class="gtext-body">
           </div>
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fUEghg1lSkLVbr">
          <div class="u-wrapper arc-4434 u-hidden">
           <div class="o-card o-card--event o-card--event--short o-card--event--olive">
            [link]
            
           </div>
          </div>
         </div>
         <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="fA8mh72lSkLVbr">
          <div class="u-wrapper arc-4434 u-hidden">
           <div class="o-card o-card--event o-card--event--short o-card--event--olive">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f0PDlTglSkLVbr">
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-test" id="f0qEj1DlSkLVbr">
        </div>
        <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="f0juXlplSkLVbr">
         <div class="gtext">
          <div class="gtext-body">
          </div>
         </div>
        </div>
       </div>
      </div>
     </section>
    </div>
   </div>
   <section class="promo-content--story" id="promo-content-area">
    <div class="pb-container">
     <div class="u-wrapper u-space-mtn u-space-mbx pb-feature pb-layout-item pb-f-commercial-dianomi" id="f07audDlSkLVbr">
      <div class="l-container">
       <div class="l-row">
        <div class="l-col-1">
         <iframe class="c-ad--dianomi-16" frameborder="0" id="js-ad--dianomi" scrolling="no" width="100%">
         </iframe>
        </div>
       </div>
      </div>
     </div>
    </div>
   </section>
   <section class="bottom-furniture--story" id="bottom-furniture-area">
    <div class="pb-container">
     <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-global-package" id="f7B0dk1lSkLVbr">
      <div class="o-package o-package--story-list o-package--story-list--engagement">
       <span class="o-package__label o-package__label--transparent">
        Top Stories [search][ahref]<li>[ahref]</li><li>[link]</li>[link]
       </span>
       <div class="o-package__stories" data-analyticsclick-container="">
        <div class="u-wrapper pb-feature pb-layout-item pb-f-global-single-story" id="">
         <div class="o-card o-card--transparent">
          [link]
          
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-global-single-story" id="">
         <div class="o-card o-card--transparent">
          [link]
          
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-global-single-story" id="">
         <div class="o-card o-card--transparent">
          <a class="o-card__link" data-analyticsclick='{"type":"link","feature":"drop-down stories","contentId":"3ILTP36HUZHEDPL53UYJSRFESQ","label":"trump says he could intervene in u.s. case against huawei cfo meng wanzhou","page":"art:business:drop-down stories","hierarchy":1}' data-lt-lid="Headline." data-lt-pos="art:business:drop-down stories" data-sophi="3ILTP36HUZHEDPL53UYJSRFESQ" href="/world/us-politics/article-trump-says-he-could-intervene-in-us-case-against-huawei-cfo-meng/">
           <div class="o-card__content">
            <div class="o-card__col">
             <span class="o-card__hed-dek">
              <span class="o-card__hed o-card__hed--15r">
               <span class="o-card__hed-text">
                Trump says he could intervene in U.S. case against Huawei CFO Meng Wanzhou[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]
               </span>
              </span>
             </span>
            </div>
            <div class="o-card__col">
             <div class="c-image-container c-image-container--lazy" style="padding-bottom: 66.66666666666666%">
              <div class="c-image-container--lazy__wrapper">
               <noscript>
               </noscript>
              </div>
             </div>
            </div>
           </div>
          </a>
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-global-single-story" id="">
         <div class="o-card o-card--transparent">
          [link]
          
         </div>
        </div>
        <div class="u-wrapper pb-feature pb-layout-item pb-f-global-single-story" id="">
         <div class="o-card o-card--transparent">
          [link]
          
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="u-wrapper u-space-mtn u-space-mbn pb-feature pb-layout-item pb-f-generic-text" id="f086CtwlSkLVbr">
      <div class="gtext">
       <div class="gtext-body">
       </div>
      </div>
     </div>
     <div class="u-wrapper pb-feature pb-layout-item pb-f-darwin-toolkit" id="fjXKAh1lSkLVbr">
     </div>
     <div class="u-wrapper pb-feature pb-layout-item pb-f-global-footer-nav" id="fd92Vr1lSkLVbr">
      <footer class="arc-f-global-footer-nav" role="contentinfo">
       <div class="arc-f-global-footer-nav__static-links">
        <div class="c-scroll-menu c-scroll-menu--dark-secondary">
         <div class="c-scroll-menu__inner">
          <div class="c-scroll-menu__arrow c-scroll-menu__arrow--left">
           <button aria-hidden="true" aria-label="Scroll menu left" class="c-button c-button--dark-secondary c-button--icon-only c-button--no-border" tabindex="-1" type="button">
            <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
             <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-left">
             </use>
            </svg>
           </button>
          </div>
          <nav class="c-scroll-menu__nav">
           <ul class="c-scroll-menu__list">
            <li class="c-scroll-menu__item">
             [link]
             
            </li>
            <li class="c-scroll-menu__item">
             [ahref]
             
            </li>
            <li class="c-scroll-menu__item">
             [ahref]
             
            </li>
            <li class="c-scroll-menu__item">
             [link]
             
            </li>
           </ul>
          </nav>
          <div class="c-scroll-menu__arrow c-scroll-menu__arrow--right">
           <button aria-hidden="true" aria-label="Scroll menu right" class="c-button c-button--dark-secondary c-button--icon-only c-button--no-border" tabindex="-1" type="button">
            <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
             <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-right">
             </use>
            </svg>
           </button>
          </div>
         </div>
        </div>
       </div>
       <div class="arc-f-global-footer-nav__accordion">
        <div class="arc-f-global-footer-nav__accordion-inner">
         [ahref]
         
         <div aria-live="polite" class="c-accordion c-accordion--full-width-buttons">
          <ul class="c-accordion__list c-accordion__list--level-0">
           <li class="c-accordion__item">
            <div class="c-accordion__item-container">
             <button aria-controls="fd92Vr1lSkLVbr-accordion-list-0" aria-expanded="false" class="c-button c-button--no-border c-button--no-border-radius c-button--full-width" type="button">
              <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="c-button__text">
               Subscribe
              </span>
             </button>
            </div>
            <ul class="c-accordion__list c-accordion__list--level-1" hidden="" id="fd92Vr1lSkLVbr-accordion-list-0">
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"the new york times","position":4,"hierarchy":2}' href="/static/nytproduct" rel="external">
                The New York Times
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
            </ul>
           </li>
           <li class="c-accordion__item">
            <div class="c-accordion__item-container">
             <button aria-controls="fd92Vr1lSkLVbr-accordion-list-1" aria-expanded="false" class="c-button c-button--no-border c-button--no-border-radius c-button--full-width" type="button">
              <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="c-button__text">
               Business Services
              </span>
             </button>
            </div>
            <ul class="c-accordion__list c-accordion__list--level-1" hidden="" id="fd92Vr1lSkLVbr-accordion-list-1">
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"advertise with us","position":1,"hierarchy":2}' href="/" rel="external">
                Advertise with Us
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"report on business top 1000","position":5,"hierarchy":2}' href="/collections/top-1000-and-350-research-and-sales-prospecting-packages" rel="external">
                Report On Business Top 1000
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
            </ul>
           </li>
           <li class="c-accordion__item">
            <div class="c-accordion__item-container">
             <button aria-controls="fd92Vr1lSkLVbr-accordion-list-2" aria-expanded="false" class="c-button c-button--no-border c-button--no-border-radius c-button--full-width" type="button">
              <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="c-button__text">
               Contact Us<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]<li>[link]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
              </span>
             </button>
            </div>
            <ul class="c-accordion__list c-accordion__list--level-1" hidden="" id="fd92Vr1lSkLVbr-accordion-list-2">
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"staff pgp directory","position":4,"hierarchy":2}' href="/pgp/" rel="external">
                Staff PGP Directory
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
            </ul>
           </li>
           <li class="c-accordion__item">
            <div class="c-accordion__item-container">
             <button aria-controls="fd92Vr1lSkLVbr-accordion-list-3" aria-expanded="false" class="c-button c-button--no-border c-button--no-border-radius c-button--full-width" type="button">
              <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="c-button__text">
               Reader Services
              </span>
             </button>
            </div>
            <ul class="c-accordion__list c-accordion__list--level-1" hidden="" id="fd92Vr1lSkLVbr-accordion-list-3">
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"my globeandmail.com account","position":1,"hierarchy":2}' href="/myaccount/#/" rel="external">
                My Globeandmail.com Account
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [search]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
            </ul>
           </li>
           <li class="c-accordion__item">
            <div class="c-accordion__item-container">
             <button aria-controls="fd92Vr1lSkLVbr-accordion-list-4" aria-expanded="false" class="c-button c-button--no-border c-button--no-border-radius c-button--full-width" type="button">
              <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
               <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#nav-arrow-down">
               </use>
              </svg>
              <span class="c-button__text">
               About Us[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref][search][ahref]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </button>
            </div>
            <ul class="c-accordion__list c-accordion__list--level-1" hidden="" id="fd92Vr1lSkLVbr-accordion-list-4">
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [link]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"accessibility policy","position":3,"hierarchy":2}' href="/privacy-terms/accessibility-policy/">
                Accessibility Policy
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               <a class="c-accordion__item-link" data-analyticsclick='{"type":"link","feature":"footer accordion menu","label":"sustainability","position":5,"hierarchy":2}' href="/privacy-terms/global-sustainability-policy/">
                Sustainability
               </a>
              </div>
             </li>
             <li class="c-accordion__item">
              <div class="c-accordion__item-container">
               [ahref]
               
              </div>
             </li>
            </ul>
           </li>
          </ul>
         </div>
         [ahref]
         
        </div>
       </div>
       <div class="c-footer">
        <div class="c-footer-text">
         <p class="c-footer-text__copyright">
          © Copyright 2018 The Globe and Mail Inc. All rights reserved.<li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </p>
         <address class="c-footer-text__address">
          <p>
           351 King Street East, Suite 1600, Toronto,
           <abbr title="Ontario">
            ON
           </abbr>
           Canada, M5A 0N1
          </p>
         </address>
         <p class="c-footer-text__publisher">
          Phillip Crawley, Publisher
         </p>
        </div>
        <div class="c-app-download">
         [link]
         
         <a aria-label="Get it on Google Play" class="c-app-download__link" data-analyticsclick='{"feature": "footer-app-download", "type": "link", "label": "Get it on Google Play", "position": 2, "hierarchy": 1}' href="/store/apps/details?id=com.theglobeandmail.headliner&amp;hl=en" rel="external">
          <svg aria-hidden="true" class="c-app-download__icon" focusable="false" pointer-events="none" role="img">
           <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#button-googleplay">
           </use>
          </svg>
         </a>
        </div>
        <div class="c-social-sharetool">
         <a aria-label="Visit The Globe and Mail on Facebook" class="c-social-sharetool__link" data-analyticsclick='{"feature": "footer-social-share", "type": "link", "label": "Visit The Globe and Mail on Facebook", "position": 1, "hierarchy": 1}' href="/theglobeandmail" rel="external">
          <svg aria-hidden="true" class="c-social-sharetool__icon" focusable="false" pointer-events="none" role="img">
           <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#icon-facebook">
           </use>
          </svg>
         </a>
         [ahref]
         
         <a aria-label="Visit The Globe and Mail on Instagram" class="c-social-sharetool__link" data-analyticsclick='{"feature": "footer-social-share", "type": "link", "label": "Visit The Globe and Mail on Instagram", "position": 3, "hierarchy": 1}' href="/globeandmail" rel="external">
          <svg aria-hidden="true" class="c-social-sharetool__icon" focusable="false" pointer-events="none" role="img">
           <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#icon-instagram">
           </use>
          </svg>
         </a>
         [ahref]
         
         <a aria-label="Visit The Globe and Mail on Youtube" class="c-social-sharetool__link" data-analyticsclick='{"feature": "footer-social-share", "type": "link", "label": "Visit The Globe and Mail on Youtube", "position": 5, "hierarchy": 1}' href="/user/TheGlobeandMail" rel="external">
          <svg aria-hidden="true" class="c-social-sharetool__icon" focusable="false" pointer-events="none" role="img">
           <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#icon-youtube">
           </use>
          </svg>
         </a>
        </div>
       </div>
      </footer>
     </div>
    </div>
   </section>
  </div>
  <div aria-labelledby="js-modal-dialog-gallery-title" aria-modal="true" class="c-modal-dialog c-modal-dialog--dark" data-gallery-content='{"galleryImage0":{"maxheight":0,"src":"https://www.theglobeandmail.com/resizer/cqAQhJ3xcWuRHpQwbzo4UXtm1TY\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/CP6RBBLAARDSPOZXCRUOU66E3I.jpg","width":620,"alt":"","caption":"George Cope, CEO of Bell Canada, is photographed during an interview at the BioSteel Centre on Nov. 13, 2018. ","aspectRatio":156.58511192087454,"srcset":"https://www.theglobeandmail.com/resizer/cqAQhJ3xcWuRHpQwbzo4UXtm1TY\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/CP6RBBLAARDSPOZXCRUOU66E3I.jpg 620w, https://www.theglobeandmail.com/resizer/o3GvEVcaHVZYs8PIlBk0wCKQGBg\u003d/1200x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/CP6RBBLAARDSPOZXCRUOU66E3I.jpg 1200w, https://www.theglobeandmail.com/resizer/XEqo8W3h91CQY4SsUJ8zylOVdr0\u003d/1900x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/CP6RBBLAARDSPOZXCRUOU66E3I.jpg 1900w","credit":"Fred Lum/The Globe and Mail","slideType":"photo","intrinsicRatio":63.86303191489362,"height":395.9507978723404},"galleryImage2":{"maxheight":0,"src":"https://www.theglobeandmail.com/resizer/BXFkW_O6U0JXkjcsW2LrGpGjKq8\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/SHTPDK6HGJC43KUYGWHTZAW42M.JPG","width":620,"alt":"","caption":"From left, George Cope, MLSE chairman Larry Tanenbaum and Nadir Mohamed, president and CEO of Rogers Communications, hold up Toronto Raptors, Toronto FC, Toronto Maple Leafs and Toronto Marlies jerseys following a press conference in Toronto on Dec. 9, 2011. ","aspectRatio":150.0,"srcset":"https://www.theglobeandmail.com/resizer/BXFkW_O6U0JXkjcsW2LrGpGjKq8\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/SHTPDK6HGJC43KUYGWHTZAW42M.JPG 620w, https://www.theglobeandmail.com/resizer/XTPA9d7P4rpAOSBZr2W2cw7un-4\u003d/1200x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/SHTPDK6HGJC43KUYGWHTZAW42M.JPG 1200w, https://www.theglobeandmail.com/resizer/-maOkCfNKyV2YQ5Gz_mtvM4j0Ps\u003d/1900x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/SHTPDK6HGJC43KUYGWHTZAW42M.JPG 1900w","credit":"Chris Young/The Canadian Press","slideType":"photo","intrinsicRatio":66.66666666666666,"height":413.33333333333326},"galleryImage1":{"maxheight":0,"src":"https://www.theglobeandmail.com/resizer/f9ktV2Fz2hRbHrq9Z0dovWpMx1c\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/FLQ3VMN76NCCDI7MJVBPH4BBLQ.jpg","width":620,"alt":"","caption":"Maple Leaf Sports and Entertainment offices at Scotiabank Arena in Toronto. ","aspectRatio":158.28524319868094,"srcset":"https://www.theglobeandmail.com/resizer/f9ktV2Fz2hRbHrq9Z0dovWpMx1c\u003d/620x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/FLQ3VMN76NCCDI7MJVBPH4BBLQ.jpg 620w, https://www.theglobeandmail.com/resizer/zIb_r-lvNLK23jfc3tkss0wsFoM\u003d/1200x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/FLQ3VMN76NCCDI7MJVBPH4BBLQ.jpg 1200w, https://www.theglobeandmail.com/resizer/WRgjTF-KqTQcFnSDmjetBE4NjRo\u003d/1900x0/filters:quality(80)/arc-anglerfish-tgam-prod-tgam.s3.amazonaws.com/public/FLQ3VMN76NCCDI7MJVBPH4BBLQ.jpg 1900w","credit":"Melissa Tait/The Globe and Mail","slideType":"photo","intrinsicRatio":63.17708333333333,"height":391.69791666666663}}' data-is-adv="false" hidden="" id="js-modal-dialog-gallery" role="dialog">
   <div class="c-modal-dialog__toolbar">
    <button aria-label="Close photo gallery" class="c-button c-button--dark-secondary c-button--icon-only c-button--no-border" type="button">
     <svg aria-hidden="true" class="c-button__icon" focusable="false" pointer-events="none" role="img">
      <use xlink:href="/pb/resources/assets/img/tgam-patterns/sprite.svg?_=2_1_7#close-x">
      </use>
     </svg>
    </button>
   </div>
   <h2 class="u-visually-hidden" id="js-modal-dialog-gallery-title">
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
   <div class="c-modal-dialog__contents">
   </div>
  </div>
  <div hidden="" id="pianowrapper">
   <div id="pianoplaceholder" tabindex="-1">
   </div>
  </div>
  <div id="raven-installer">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0335
  </b>
 </body>
</html>