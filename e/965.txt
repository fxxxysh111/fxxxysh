--->|R290IGNhbGxlZCB1cCB0byBFbGVjdHJvbmljcyB0byB0YWxrIHRvIGEgY3VzdG9tZXIgd2hpbGUgd2Ugd2VyZSBzdGFydGluZyB0byBjbG9zZSB1cCBmb3IgdGhlIG5pZ2h0LiAKU2hlcnJpIENveCB3aXRoIHRoZSBOYXRpb25hbCBXaWxkbGlmZSBDZW50cmUgc2FpZC5Ud28gb3RoZXIgZGVlciB3ZXJlIHNwb3R0ZWQgaW4gZG93bnRvd24gT3NoYXdhIG92ZXIgdGhlIHdlZWtlbmQgYnV0IHRoZXkgYXBwZWFyIHRvIGhhdmUgbWFkZSB0aGVpciB3YXkgaG9tZSBvbiB0aGVpciBvd24uIldlJ3ZlIGJlZW4gZ2l2ZW4gcmVwb3J0cyBhbGwgZGF5IHRoYXQgYSBmYW1pbHkgb2YgdGhyZWUgZGVlciB3ZXJlIHdhbGtpbmcgYXJvdW5kIE9zaGF3YSBlYXJsaWVyIGFuZCB0aGVuIGF0IHNvbWUgcG9pbnQgdGhleSBnb3Qgc3Bvb2tlZCBhbmQgb25lIHdlbnQgdGhpcyB3YXkgYW5kIHRocm91Z2ggdGhpcyB3aW5kb3cgYW5kIHRoZW4gb2YgY291cnNlIHRoZSBvdGhlcnMgYXJlIG9uIHRoZSBvdGhlciBzaWRlIG9mIHRvd24sIiBXYWdlbmJlcmcgc2FpZC5XYWdlbmJlcmcgc2FpZCBwaHlzaWNhbCBkYW1hZ2UgdG8gdGhlIGJhciBpcyAic3VycHJpc2luZ2x5IG5vdCBiYWQuIkxvY2FsIE5EUCBNUFAgSmVubmlmZXIgRnJlbmNoIHNhaWQgaW4gYSBGYWNlYm9vayBwb3N0IHRoYXQgaGVyIGNvbW11bml0eSBvZmZpY2Ugd2FzIGFsc28gZGFtYWdlZCBieSBhIGRlZXIgb24gU3VuZGF5Li4gCkkgdHJ1bHkgaG9wZSB0aGlzIHN0b3J5IGRvZXNuIGdldCBidXJpZWQgaW4gYWxsIHRoZSBDb2hlbiB0ZXN0aW1vbnkgbmV3cy4gRG9uIGdldCBtZSB3cm9uZywgQ29oZW4gdGVzdGltb255IGlzIGltcG9ydGFudCwgYW5kIEkgZ2xhZCB0aGF0IHRoZSBBbWVyaWNhbiBwZW9wbGUgYXJlIGhlYXJpbmcgaXQgcHVibGljbHkuIEFtZXJpY2EgcHJpZGVzIGl0c2VsZiBpbiBwcm90ZWN0aW5nIGFuZCBleGVyY2lzaW5nIGZyZWVkb20gb2Ygc3BlZWNoLiAKU2Vsb24gbGEgbWFycmFpbmUgZGUgbCd2bmVtZW50LCBNYXJpYSBGb3J0aW4sIGxhIHBvcHVsYXJpdCBkZSBjZSBsb2lzaXIgZXN0IGVuIGF1Z21lbnRhdGlvbiBhdXBycyBkZXMgZmVtbWVzLiBBdSBmaWwgZGVzIGFubmVzLCBvbiBsZSBub3RlLCBhdmVjIGxlIGNsdWIgZGVzIEFtb3VyZXV4IGRlIGxhIG1vdG9uZWlnZSBvdSBkJ2F1dHJlcyBhc3NvY2lhdGlvbnMgcHJvdmluY2lhbGVzLCBkZSBwbHVzIGVuIHBsdXMgZGUgZmVtbWVzIHBvc3NkZW50IGxldXIgcHJvcHJlIG1vdG9uZWlnZSwgcmVsdmUgTW1lIEZvcnRpbi4KV2UgZnVzc2VkIHdpdGggaXQgZm9yIGhhbGYgYW4gaG91ciwgdHJ5aW5nIHZhcmlvdXMgZnV0aWxlIHNjaGVtZXMuIEkgZXZlbiB0cmllZCBzYXdpbmcgaXQgd2l0aCBhIGhhY2tzYXcuIE5vIGx1Y2suIApZYSBhbWsgbGtlIGt1cnVsZHV1bmRhbiBiZXJpIHByb2JsZW1saSB6YXRlbi4gU2Fua2kgbmNlZGVuIEFsbWFueWEgc29ucmFkYW4gUGFraXN0YW4gb2xkdWsuIFlhYXIgbmUgWWFhciBuZSB5YWFtYXogZ2liaSB0YXJpaGkgb2xhbiBiaXIgbWVtbGVrZXQuIApMZXQgdGhlbSB0YWtlIHlvdXIgYmxpbmRzIHdoZW4geW91IGhhdmUgYmFkIG9yIGV2ZW4gbWVkaW9jcmUgaGFuZHMsIGFuZCBwbGF5IGFnZ3Jlc3NpdmVseSB3aXRoIHlvdXIgZ29vZCBoYW5kcy4uIApXaGVyZSBpdCBoYXMgYmVlbiBhIHByb2JsZW0gaXMgaWYgSSBnZXQgaXQgdG8gc3dpdGNoIG9uIGJhdGhyb29tIGxpZ2h0cywgdGhlIHBlcnNvbiB0aGVuIGV4aXRzIHRoZSBiYXRocm9vbSwgYW5kIG1hbnVhbGx5IHR1cm5zIHRoZSBsaWdodHMgb2ZmLCBhbmQgdGhlbiBzb21lb25lIGVsc2UgZ29lcyBpbiBhZnRlciByaWdodCBhd2F5IHRoZSBsaWdodHMgZG9uJ3QgdHVybiBvbiBiZWNhdXNlIHRoZSBtb3Rpb24gc3RhdGUgZG9lc24ndCBjaGFuZ2UuIEp1c3QgbmVlZCB0byB0ZWFjaCBwZW9wbGUgbm90IHRvIG1hbnVhbGx5IHR1cm4gbGlnaHRzIG9mZiA6KVRoZSBmb250cyBwcmVmaXhlZCB3aXRoIHhmdDogYXJlIHRoZSBmb250IG5hbWVzIHlvdSBnZXQgd2hlbiB5b3UgY2FsbCBmYyBsaXN0LiAKRm9yIHllYXJzLCBwb2tlciBwbGF5ZXJzIGhhdmUgZmFjZWQgdGhlIGRpbGVtbWEgb2YgcHJvdGVjdGluZyB0aGVpciBwb2tlciB0YWJsZXMuIFBva2VyIHRhYmxlcywgd2hldGhlciB0aGV5IGFyZSBtYWRlIGZyb20gZXhwZW5zaXZlIGFuZCBkZWx1eGUgd29vZCBvciBhIG1vcmUgc2ltcGxlIGFuZCBhZmZvcmRhYmxlIHdvb2QgbmVlZCBnb29kIGNhcmUuIApMYXN0IHllYXIsIG1vcmUgdGhhbiBoYWxmIG9mIHRoZSBjb21wYW55J3Mgc2FsZXMgd2VyZSBpbiBmb3JlaWduIG1hcmtldHMsIHNhaWQgTWljaGFlbCBNY1N3ZWVuZXksIE1DTSdzIGNoaWVmIGZpbmFuY2lhbCBvZmZpY2VyLgpSYXZpZDogWWVzLCBJIGNvbXBsZXRlbHkgYWdyZWUuIEkgdGhpbmsgdGhlcmUgYXJlIHNldmVyYWwgd2F5cyBpbiB3aGljaCB0aGUgQWNhZGVteSBpcyBzdGlja2luZyB0byB0cmFkaXRpb24sIGFuZCB0aGV5IG1pZ2h0IHdhbnQgdG8gY2hhbmdlLiAKQW5kIG1hZ25lc2l1bSBkZWZpY2llbmN5IGlzIG9mdGVuIGF0IHRoZSBib3R0b20gb2Ygd2hhdCBjYWxsZWQgcmVmcmFjdG9yeSBwb3Rhc3NpdW0gZGVmaWNpZW5jeS4gClBob3RvZ3JhcGg6IFRvbGdhIEFrbWVuL0FGUC9HZXR0eSBJbWFnZXNXZSBrbm93IHRoYXQgZ2lhbnQgbXVsdGluYXRpb25hbHMgYXJlIGVuZ2FnZWQgaW4gaW5kdXN0cmlhbCBzY2FsZSB0YXggYXZvaWRhbmNlLiAKRG9uJ3QgaGVzaXRhdGUgdG8gYXNrIGZvciBhZHZpY2UsIGNvbW11bml0eSBpcyBwcmV0dHkgZ29vZGl6bDRyaXpsICAyLDI5MSBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCk9sc29uIHdobyBkZWZlbmRlZCAgc3VjY2Vzc2Z1bGx5ICBHZW9yZ2UgVy4gCkNyYWNrZWRTYXNoIHUKVGhlIHNpZGUgZWZmZWN0cyBhcmUgZmV3IGFuZCBjYW4gYmUgcHJldmVudGVkIGJ5IHVzaW5nIHRoZSBwcm9kdWN0IHRoZSB3YXkgaXQgaXMgbWVhbnQgdG8gYmUgdXNlZC4gSWYgeW91IHNob3VsZCBiZWdpbiB0byBmZWVsIHNvbWV0aGluZyBvdXQgb2YgdGhlIG9yZGluYXJ5IHdoZW4gYXBwbHlpbmcgQmlvZnJlZXplLCBpdCBpcyBhbHdheXMgYmVzdCB0byBjb25zdWx0IHlvdXIgcGh5c2ljaWFuIGFuZCBmaW5kIG91dCBleGFjdGx5IHdoYXQgaXMgd3JvbmcgYW5kIHdoYXQgeW91IGFyZSBzdXBwb3NlZCB0byBkbyBhYm91dCBpdC4uIApUaGUgRkJJIGdvdCBhIHdhcnJhbnQgdG8gY3JhY2sgbXkgYW5kcm9pZCBhbmQgSSB0aGluayB0aGUgY2hhcmdlcyBteSBzdGljay4gClRoaXMsIHBsdXMgdGhlIGFtb3VudCBvZiBPUHMgcmVmdW5kLCB0ZWxscyBtZSBoZSBwcm9iYWJseSBnZXRzIEVhcm5lZCBJbmNvbWUgQ3JlZGl0LiBCZXR3ZWVuIENoaWxkIFRheCBDcmVkaXQgd2lwaW5nIG91dCB0YXggbGlhYmlsaXR5IChpZiB0aGUgc3RhbmRhcmQgZGVkdWN0aWJsZSBmb3IgT1ArZGF1Z2h0ZXIgZGlkbiBhbHJlYWR5KSwgQWRkaXRpb25hbCBDaGlsZCBUYXggQ3JlZGl0IGJlaW5nIHJlZnVuZGFibGUsIGFuZCBFSUMsIHRoYXQgYWRkaXRpb25hbCBtb25leSBvbiB0b3Agb2YgcG90ZW50aWFsbHkgdGhlaXIgZW50aXJlIHdpdGhob2xkaW5nIGJlaW5nIHJlZnVuZGVkLiBUaGVuIGFnYWluLCBJIGhhdmVuIHdvcmtlZCBmb3IgSFJCbG9jayBmb3IgNisgeWVhcnMsIHBhcnRpY3VsYXJseSBub3QgdGhpcyB5ZWFyLCBzbyB0aGUgbmV3IGNoYW5nZXMgbWF5IGhhdmUgZ290dGVuIHJpZCBvZiB0aG9zZS4gCkV4dHJhdGVycmVzdHJpYWwgbGFuZHNjYXBlcyBhcmUgYSBsZWFwIG9mIGZhaXRoIGJhc2VkIG9uIGF2YWlsYWJsZSBvYnNlcnZhdGlvbnMsIGFuZCBubyBkb3VidCB0aGF0IHRoZSByZWFkZXJzIG9mIHRoZSBsYXRlIDE5dGggY2VudHVyeSBzZWVpbmcgdGhlc2UgaW1hZ2VzIGZvciB0aGUgZmlyc3QgdGltZSB3b3VsZCBoYXZlIGJlZW4gdHJhbnNwb3J0ZWQgYnkgdGhlaXIgaW5nZW51aXR5IGFuZCBkZXB0aCBvZiB1bmRlcnN0YW5kaW5nIGkgbiByZXByZXNlbnRpbmcgdGhlIEVhcnRoIGFzIGp1c3QgYW5vdGhlciBiaXQgaW4gdGhlIHNreSB3aGVuIGl0IGlzIHNlZW4gZnJvbSBvdGhlciBsb2NhdGlvbnMuIEltYWdlcyBhbHNvIGxlZCB0byBhIG5vdGUgYWJvdXQgYSBwYXBlciB0aGF0IEZsYW1tYXJpb24gd3JvdGUgZm9yIExhIE5hdHVyZTEgaW4gMTg3MyBvbiB3aGF0IHR1cm5zIG91dCB0byBiZSB0aGUgc2ltaWxhcml0aWVzIG9mIHRoZSBhdG1vc3BoZXJlcyBvbiBNYXJzIGFuZCBFYXJ0aCBhbmQgdGhhdCBsZWQgbWUgdG8gYSBzb21ld2hhdCBlYXJsaWVyIHBhcGVyIHRoYXQgaGUgd3JvdGUgZm9yIHRoZSBDb21wdGVzIFJlZG51cyB0aGF0IHNlZW1zIHRvIGhhdmUgYSBsaXR0bGUgbW9yZSBwdW5jaCB0aGFuIHRoZSBsYXRlciBvbmUuIFRoZSBzaG9ydCBwYXBlciBpbiB0aGUgQ1IyIG9ic2VydmVzIHRoYXQgdGhlIEVhcnRoIGlzIG1vc3RseSBjb3ZlcmVkIGJ5IHdhdGVyLCBhbmQgb24gTWFycyB0aGVyZSBpcyBtb3JlICJsYW5kL2NvbnRpbmVudGFsIHN1cmZhY2UgdGhhbiBtYXJpdGltZS9zZWEgc3VyZmFjZSIuIAoiSGUncyBnb3Qgc29tZSBncmVhdCBpZGVhcy4gCkhlIGxpdmVkIGEgZ29vZCwgbG9uZyBsaWZlLiBIZSB3YXMgMTggd2hlbiBoZSBkaWVkLiAKQWx0aG91Z2ggdGhlIFVLIHByaW1lIG1pbmlzdGVyIG1heSBoYXZlIGF2ZXJ0ZWQgYSBnb3Zlcm5tZW50IGNyaXNpcywgbW9zdCBjb21tZW50YXRvcnMgbm93IHRoaW5rIGEgc2Vjb25kIHJlZmVyZW5kdW0gaXMgYmVjb21pbmcgYW4gaW5jcmVhc2luZ2x5IGxpa2VseSBvcHRpb24uCkFnb3JhciAgMSBwb2ludCAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkFsdGhvdWdoIFVyeSBoYWQgbWlsbGlvbiBkb2xsYXIgZHJlYW1zIGxpa2UgZXZlcnlvbmUgZWxzZSBpbiA2LDQ5NCBwbGF5ZXIgZmllbGQsIHRoZSBUZXJyZSBIYXV0ZSwgSW5kLiwgcmVzaWRlbnQgdG9vayBoaXMgYmVhdCBpbiBzdHJpZGUuCiJTZWN0b3JzIGxpa2UgdGVjaG5vbG9neSBoYXZlIGJlZW4gYmVhdGVuIHVwIHF1aXRlIGEgYml0IGR1ZSB0byB0aGVpciBpbnRlcm5hdGlvbmFsIGV4cG9zdXJlLCBzaW5jZSB0b2RheSB3ZSBhcmUgaW4gJ3VwJyBtb2RlLCB3ZSB3aWxsIHNlZSBpbnZlc3RvcnMgbG9va2luZyB0byBnZXQgYmFjayBpbnRvIHRoZXNlIG5hbWVzLCIgc2FpZCBSYW5keSBGcmVkZXJpY2ssIHZpY2UgcHJlc2lkZW50IG9mIHRyYWRpbmcgYW5kIGRlcml2YXRpdmVzIGZvciBDaGFybGVzIFNjaHdhYiBpbiBBdXN0aW4sIFRleGFzLgpEaWFiZXRlcyBpbiBjYXRzIHdvcmtzIGluIHRoZSBleGFjdCBzYW1lIHdheSB0aGF0IGl0IGRvZXMgaW4gcGVvcGxlICAgdGhlIGJvZHkncyBhYmlsaXR5IHRvIHByb2R1Y2UgaW5zdWxpbiBhbmQgcHJvY2VzcyBzdWdhciBpcyBoYW1wZXJlZC4gCldlbGwgaWYgeW91IHRoaW5rIHlvdSBkZXNlcnZlIGEgdGlwIGZvciBzZXJ2aW5nIHNvbWVvbmUgYSAkMTUgJDIwIG1lYWwgdGhlbiBJIG5vdCBzdXJlIHdoYXQgeW91ciBhcmd1bWVudCBpcz8gWW91IGRvbiBkZXNlcnZlIGEgdGlwLiBZb3Ugam9iIGlzbiBoYXJkIGFuZCBpdCB3YXNuIGV2ZW4geW91IHRoYXQgY29va2VkIHRoZSBmb29kLiAKRXZlbnR1YWxseSBzaGUgYXNrZWQgZm9yIGEgZmV3IGh1bmRyZWQgZG9sbGFycy4gClRMO0RSIFlvdSdyZSBub3QgYSBiYWQgcGVyc29uIG5vIG1hdHRlciB3aGF0IHlvdSBkZWNpZGUsIHlvdSdyZSBqdXN0IGhhdmluZyBjb25mbGljdGluZyBsb3lhbHRpZXMgbW9yYWxzLCBidXQgZ2l2aW5nIHRoZSBzb24gYSBmZXcgdGhpbmdzIHdvdWxkIGJlIHRoZSBraW5kZXN0IHRoaW5nIHRvIGRvLgpIb25lc3RseSBubyBpZGVhIHdoZXJlIHRoaXMgZ29lcyBmb3IgdGhlbSBidXQgSSBkb24ndCB0aGluayB0aGVpciByZWxhdGlvbnNoaXBzIGxhc3RzIGFzIGlzIGFmdGVyIHRoaXMgc2Vhc29uLi4gCkkgc3RpbGwgZG9uJ3QgdGhpbmsgSSdtIGdvb2QuIEkgc3RpbGwgaGF2ZSB0aGlzIGZlZWxpbmcgSSdtIGEgdG90YWwgaW1wb3N0b3IuIEJ1dCBhdCBQQ0EsIHdoZW4gSSB3b24gdGhlIG5hdGlvbmFscyBhbmQgaGFkIGEgZGVlcCBydW4gYWZ0ZXIgdGhhdCwgYW5kIHRoZW4gY2FtZSBpbiBzZWNvbmQgaW4gTWFjYXUsIGF0IHRoZSBQQ0EgaXQgc3RhcnRlZCBjb21pbmcgdG9nZXRoZXIsIEkgZ290IGx1Y2t5IHRvIHdpbiB0aGUgdG91cm5hbWVudCwgeW91IHN0aWxsIG5lZWQgbHVjayB0byB3aW4uIApQZXJhd2F0YW4gUGFzY2EgTWVsYWhpcmthbiAgIENyZWFtYmF0aCAvIEhhaXIgU3BhIC8gSGFpciBNYXNrCkNsaXF1ZXIgc3VyIGwnaW1hZ2Ugb3UgaWNpIHBvdXIgdHJvdXZlciBsZSBwcm9kdWl0LiBKZSBzYWlzIHF1J29uIHZhIG1lIGxpcmUgdHJzIGF0dGVudGl2ZW1lbnQganVzcXUnIGxhIGRlcm5pcmUgbGlnbmUsIGxlIHN1amV0IGF5YW50IHRlbmRhbmNlICBwYXNzaW9ubmVyIGxlcyBmb3VsZXMuUG91ciBjb21tZW5jZXIgaWwgZmF1dCBkaXN0aW5ndWVyIGRldXggcGhub21uZXMgcXVpIG5lIHNvbnQgcGFzIGZvcmNtZW50IGxpcywgbGUgZHlzZm9uY3Rpb25uZW1lbnQgcmVjdGlsZSBkJ3VuZSBwYXJ0IGV0IGxhIHBlcnRlIGRlIGxpYmlkbyAoZHNpcikuIApKb2huIEIuIApKb2huIE1jQ2FpbiAoUiBOVikuIFNlbi4gQ2FwaXRvbCBvbiBTZXB0ZW1iZXIgNCwgMjAxMyBpbiBXYXNoaW5ndG9uLCBEQy4gCkkgdGVsbCB5b3UgYSBzZWNyZXQ6IGFsbW9zdCBhbGwgcGVvcGxlLCBzcGVjaWFsbHkgcGFyZW50cyBoYXZlIHNleC4gc2V4IGNvbWVzIGluIG1hbnkgdmFyaWF0aW9ucy4gaXQgaXMgaGlnaGx5IHByb2JhYmxlIHlvdXIgb3duIHBhcmVudHMgaGF2ZSBzb21lIHZhcmlhbnRzIG9mIGJlaGF2aW9ycyByZWxhdGVkIHRvIGZlZWxpbmcga2lua3ksIHNleHksIGV0Yy4KSGUgZGlkIG5vbmUgb2YgdGhhdCwgYW5kIGxpa2UgeW91IHNhaWQsIGhlIHdhcyBiYXNpY2FsbHkgbWFraW5nIHN1cmUgdGhlIHNjZW5lIHdhcyBjbGVhciBzbyBoZSBjb3VsZCBraWRuYXAgaGVyLCBwbGFpbiBhbmQgc2ltcGxlLiBMdWNraWx5LCBzaGUgaGFkIHRoZSBnb29kIHNlbnNlIHRvIGxpc3RlbiB0byBoZXIgaW50dWl0aW9uLCBhbmQgYmFpbCBvdXQgb2YgdGhlcmUgYW5kIGhpZGUgb3V0IHVudGlsIGhlciBmYW1pbHkgZnJpZW5kIGNhbWUgdG8gcGljayBoZXIgdXAuLiAKSSBhZ3JlZSwgZXZlbiBhcyBhIGJlaW5nIENocmlzdG9waGVyIE5vbGFuIGZhbiwgSSB0aGluayBEdW5raXJrIGlzIG92ZXJyYXRlZCwgSSB3b3VsZCBwdXQgQmxhZGUgUnVubmVyIDIwNDkgYWJvdmUgaXQgYWxsIHRoZSB0aW1lLiBBbmQgMjA0OSB3YXMgbXkgZmF2b3JpdGUgbW92aWUgb2YgdGhlIHllYXIsIGV2ZW4gYWJvdmUgdGhlIG90aGVyIGJlc3QgcGljdHVyZSBub21pbmVlcy4gCkdvb2dsZSBLYWxlbmRlciBkaWVudGUgZGFiZWkgZnIgZGllIEFnZW5kYS4gCkluIDIwMDIsIHR3byB5ZWFycyBhZnRlciB0aGUgcmVsZWFzZSBvZiB0aGUgdGhpcmQgZWRpdGlvbiBvZiBEIFdpemFyZHMgb2YgdGhlIENvYXN0LCB0aGUgZ2FtZSdzIHB1Ymxpc2hlciwgcHV0IG91dCBhIGNhbGwgZm9yIHRoZSBjcmVhdGlvbiBvZiBhIG5ldyB3b3JsZCAgIGEgZmFudGFzeSBzZXR0aW5nIHdoZXJlIGdhbWVycyBjb3VsZCBydW4gRCBjYW1wYWlnbnMuIEJha2VyIGVudGVyZWQgdGhlIGNvbnRlc3QsIGFuZCBmcm9tIHRoZSByb3VnaGx5IDExLDAwMCBlbnRyYW50cywgaGlzIGZhbnRhc3kgd29ybGQsIEViZXJyb24sIHdhcyBjaG9zZW4gdG8gYmUgdGhlIG5ld2VzdCBuZWlnaGJvcmhvb2QgaW4gdGhlIEQgY29tbXVuaXR5LiBJdCB3YXMgcmVsZWFzZWQgaW4gMjAwNCwgd2lubmluZyBhbiBPcmlnaW5zIEF3YXJkICh0aGUgT3NjYXJzIG9mIHRoZSBnYW1pbmcgd29ybGQpIHRoYXQgeWVhciBmb3IgQmVzdCBSb2xlcGxheWluZyBHYW1lIFN1cHBsZW1lbnQuIkViZXJyb24gaXMgYSBmYW50YXN0aWMgd29ybGQsIiBTY2h3b2xzIHNheXMuIApBbGxhYm91dHRoZWNvdyAgMyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCk5ldyBZb3JrIENpdHkgTWF5b3IgQmlsbCBkZSBCbGFzaW8gaXMgdGVsbGluZyBEZW1vY3JhdHMgaW4gSW93YSB0aGF0IGhlIGhhcyBub3QgInJ1bGVkIG91dCBhIHJ1biBmb3IgcHJlc2lkZW50LiIKQmV0IHNpemluZyBpcyBhIGtleSBhc3BlY3QgdG8geW91ciBnYW1lLCBzbyB5b3UgbmVlZCB0byBnaXZlIGl0IGEgbG90IG9mIHRob3VnaHQuIApLbWVudG90aGF0ICAxMyBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KQnV0IGl0IG5vdCBhcyBoaWdoIGFzIGl0IGNvdWxkIGJlIGJlY2F1c2UgTmV0YmFsbCBhbHNvIHB1dHMgYSBtYXNzaXZlIGFtb3VudCBvZiB3b3JrIGludG8gY29ycmVjdCB0ZWNobmlxdWUsIHRyYWluaW5nIGhhYml0cyBhbmQgd2FybXVwcyByaWdodCBmcm9tIGp1bmlvciB5ZWFycywgd2l0aCBhIGZvY3VzIG9uIHJlZHVjaW5nIGtuZWUgcmlza3MgaW4gcnVubmluZywgdHVybmluZywganVtcGluZywgc3RvcHBpbmcsIGV0Yy4KQ29sYnkgTycgRG9uaXMgUmVkT25lKSBMb3ZlR2FtZSBQYXBhcmF6emkgUG9rZXIgRmFjZSAgRWgsIEVoIChOb3RoaW5nIEVsc2UgSSBDYW4gU2F5KSBCZWF1dGlmdWwsIERpcnR5LCBSaWNoIFRoZSBGYW1lIE1vbmV5IEhvbmV5IEJveXMgQm95cyBCb3lzIFN0YXJTdHJ1Y2sgKGZlYXQuIERpcnR5IEljZSBjcmVhbSBGYW5jeSBwYW50cyBmZXZlciBmaWx0aHkgcG9wIGZvb2xlZCBtZSBhZ2Fpbi9ob25lc3QgZXllcyBLYW5keSBsaWZlIExldCBsb3ZlIGRvd24gcmV0cm9zZXhhdWwgcm9ja3Nob3cgc2hha2UgeW91ciBraXR0eSB2YW5pdHkgd29uZGVyZnVsIFRoZXNlIGFyZSB0aGUgb25lJ3MgYXJlIGhlciBCTUkgdGhhdCBpIGRvbid0IGhhdmUgZG8gbWUgcmlnaHQgaXQncyB2YWxlcmluYSBmdC4gClRoZSBwYWlyIGFyZW4gZnJpZW5kcyBidXQgaGF2ZSBhbiBhbWljYWJsZSB3b3JraW5nIHJlbGF0aW9uc2hpcCAgIHdoaWNoIGlzIHNvbWV0aGluZyB0aGV5IGNvdWxkIG5lZWQgaWYgdGhleSBhcmUgZWxlY3RlZCB0byBlaWdodCB5ZWFyIHRlcm1zIHRvZ2V0aGVyLiAKRWRpdDogT2gsIGFuZCBqdXN0IHdhbnRlZCB0byBhZGQ6IHRoZSBjb21wYXJpc29uIHRvIGJvZHkgb2RvciBpcyByZWFsbHkgcmVhbGx5IHByb2JsZW1hdGljLCBidHcuIEJ5IGNvbXBhcmluZyB0aGluZ3MgbGlrZSByYWNpc20sIGhvbW9waG9iaWEsIHBlcnNlY3R1dGlvbiwgd2FyLCBldGMuIFdpdGggYm9keSBvZG9yLCB5b3UgYXJlIGltcGx5aW5nIHRoYXQgdGhlc2UgdGhpbmdzIGFyZSBhYnNvbHV0ZWx5IG5vcm1hbCBhbmQgY2Fubm90IGJlIGNoYW5nZWQuIApOb3cgb2YgY291cnNlIEkgdXN1YWxseSB0b3VjaCB0aGUgYmFzZSB0byBhc3Npc3QgaW4gdGhlIHByb2Nlc3MsIGJ1dCBldmVuIGlmIEkgZGlkLCBpcyB0aGF0IHBhcnRpY3VsYXIgZmxhcCBvZiBza2luIGRpcnRpZXIgdGhhbiBhbnkgb3RoZXIgb25lIG9uIG15IGJvZHk/IElmIGFueXRoaW5nIGl0IHNob3VsZCBiZSBjbGVhbmVyLCBwcm90ZWN0ZWQgZnJvbSB0aGUgb3V0c2lkZSB3b3JsZC4gRG8gSSB3YXNoIG15IGhhbmRzIGFmdGVyIGV2ZXJ5IHRpbWUgSSBzY3JhdGNoIG15IGJhbGxzPyBBYnNvbHV0ZWx5IG5vdCBhbmQgdGhhdCBpcyBnZXR0aW5nIHdheSBzd2VhdGllciB0aGFuIGEgc2ltcGxlIHBlZSBzZXR1cC4gClBydWRlbmNlLCBpbmRlZWQsIHdpbGwgZGljdGF0ZSB0aGF0IEdvdmVybm1lbnRzIGxvbmcgZXN0YWJsaXNoZWQgc2hvdWxkIG5vdCBiZSBjaGFuZ2VkIGZvciBsaWdodCBhbmQgdHJhbnNpZW50IGNhdXNlczsgYW5kIGFjY29yZGluZ2x5IGFsbCBleHBlcmllbmNlIGhhdGggc2hld24sIHRoYXQgbWFua2luZCBhcmUgbW9yZSBkaXNwb3NlZCB0byBzdWZmZXIsIHdoaWxlIGV2aWxzIGFyZSBzdWZmZXJhYmxlLCB0aGFuIHRvIHJpZ2h0IHRoZW1zZWx2ZXMgYnkgYWJvbGlzaGluZyB0aGUgZm9ybXMgdG8gd2hpY2ggdGhleSBhcmUgYWNjdXN0b21lZC4gCkFsdGhvdWdoIGNvbXB1dGVycyBoYXZlIG1hc3RlcmVkIGdhbWVzIHN1Y2ggYXMgQ2hlc3MsIENoZWNrZXJzLCBhbmQgQ29ubmVjdDQsIFBva2VyIGlzIGRpc3RpbmN0IGJlY2F1c2UgaXQgbGFja3MgcGVyZmVjdCBpbmZvcm1hdGlvbiAgIHlvdXIgb3Bwb25lbnQncyBoYW5kLgpCdXQgaXQgd2FzIG9uIHRoZSBjcmlja2V0IGZpZWxkIHRoYXQgaGUgYWNoaWV2ZWQgaGlzIGdyZWF0ZXN0IHRyaXVtcGhzLiBIZSByZXByZXNlbnRlZCB0aHJlZSBjb3VudGllcyAgIFN1c3NleCwgSGFtcHNoaXJlIGFuZCBTdXJyZXkgICBzY29yaW5nIGFsdG9nZXRoZXIgMzAsODg2IHJ1bnMgaW4gZmlyc3QgY2xhc3MgbWF0Y2hlcywgYXZlcmFnZSA1MC4yMi4gClRoZXJlIGEgc3RlZXAsIHN0ZWVwIGZhbGxvZmYgaW4gZWZmZWN0aXZlbmVzcyBmb3IgcG9pbnRzIGludmVzdGVkIGluIHRoZSBBcnRzIHBhc3QgdGhlIDd0aC4uIApOb25vYnN0YW50IHRvdXRlIGRpc3Bvc2l0aW9uIGNvbnRyYWlyZSwgZW4gcGFydGljaXBhbnQgc3VyIGNlIHJzZWF1IHZvdXMgY29uc2VudGV6ICBpbmRlbW5pc2VyIGV0IGRnYWdlciBkZSB0b3V0ZSByZXNwb25zYWJpbGl0IGxlZGl0IHByZXN0YXRhaXJlIGRlIHNlcnZpY2VzIHBvdXIgdG91dGUgcXVlc3Rpb24gbGllICB2b3RyZSBpbnRlcmFjdGlvbiBhdmVjIGQnYXV0cmVzIGludGVybmF1dGVzIHV0aWxpc2FudCBjZSByc2VhdSBldCB2b3RyZSBwYXJ0aWNpcGF0aW9uICBjZSByc2VhdS4uIApUaGUgcGVyaW9kIG9mIGluc3RhYmlsaXR5IGFuZCBkaXZpc2lvbiBjb250aW51ZWQgd2hlbiB0aGUgVmlraW5nIHJhaWRzIGJlY2FtZSBtb3JlIHNlcmlvdXMuIEluIDEwMDIsIHRoZWx3ZWFyZCwgRWFsZG9ybWFuIG9mIFNvdXRod2VzdCBFbmdsYW5kLCBkaWVkLCB5ZXQgdGhlIHRpdGxlIG9mIEVhbGRvcm1hbiB3YXMgbm90IHBhc3NlZCBvbiBhbmQgdGhlIGFyZWEgd2FzIGJlaW5nIGdvdmVybmVkIGJ5IHNoaXJlIHJlZXZlcyBhbG9uZS4gVGhlbHdlYXJkJ3Mgc29uIHRoZWxtYWVyLCB3aG8gd291bGQgaGF2ZSBiZWVuIGV4cGVjdGVkIHRvIGluaGVyaXQgdGhlIHRpdGxlLCBsYXRlciBkZWZlY3RlZCB0byBTd2VpbiB3aXRoIGNvbnNpZGVyYWJsZSBmb3JjZS4gCk9wZXJhdG9ycyBoYXZlIGJlZW4ga25vd24gdG8gY29tbWl0IHNleHVhbCBhc3NhdWx0cyBhZ2FpbnN0IHRvdXJpc3RzLiAKSW5zdGVhZCwgTXIuIFN1c3RhciB3YXMgcGxhY2VkIG9uIHByb2JhdGlvbiBmcm9tIEp1bmUgMTgsIDE5OTksIHRvIEp1bmUgMjQsIDIwMDEuIEhpcyBicm90aGVyLCBKYW1lcyBTdXN0YXIsIHdobyBzZXJ2ZXMgdG9kYXkgYXMgVHJhZGVtYXJrIHByZXNpZGVudCwgcmVjZWl2ZWQgdGhlIHNhbWUgc2VudGVuY2UsIGFuZCBlYWNoIG1hbiBwYWlkIGEgJDEsMDAwIGZpbmUuCldlIGZvdW5kIGEgcGxhY2UgdG8gcGFyayB0aGUgY2FyIGFuZCBmb3VuZCBhIHJhbmRvbSByZXN0YXVyYW50IGZvciBsdW5jaCAocmVtZW1iZXIsIG5vIGd1aWRlIGJvb2shKS4gV2hlbiB3ZSB3YWxrZWQgaW4sIHdlIHdlcmUgdXNoZXJlZCB0byBhIHRhYmxlLiAKV2luZnJleSwgb2YgY291cnNlLCBoYXMgYmVlbiB0aGUgbWFpbiBmYWNlIG9mIHRoZSBicmFuZCBmb3IgeWVhcnMuIFNoZSBpbnZlc3RlZCBpbiB0aGUgY29tcGFueSB0aGVuIGtub3duIGFzIFdlaWdodCBXYXRjaGVycyBhbmQgam9pbmVkIGl0cyBib2FyZCBpbiBPY3RvYmVyIDIwMTUsIGFuZCBoZWxwZWQgZHJpdmUgZ2FpbnMgaW4gbWVtYmVyc2hpcCBhbmQgcmV2ZW51ZS4gSG93ZXZlciwgdGhlIGJyYW5kJ3MgYmlnIG1hcmtldGluZyBwdXNoIGluIERlY2VtYmVyIGFuZCBpbnRvIHRoZSBiZWdpbm5pbmcgb2YgMjAxOSBzaGlmdGVkIHNvbWUgb2YgdGhlIGZvY3VzIGF3YXkgZnJvbSB0aGUgbWVkaWEgbW9ndWwgYW5kIG9udG8gYWN0cmVzcyBLYXRlIEh1ZHNvbiBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgc2luZ2VyIFJvYmJpZSBXaWxsaWFtcyBpbiBFdXJvcGUgYW5kIG90aGVyIG1hcmtldHMsIHdoaWxlIGFsc28gc2hvd2Nhc2luZyB1bmtub3duIG1lbWJlcnMsIGluY2x1ZGluZyBpbiBhZHMgdm9pY2VkIGJ5IFdpbmZyZXkuIFRoZSBjYW1wYWlnbiB3YXMgYnkgQW5vbWFseSwgd2hpY2ggc3RhcnRlZCB3b3JraW5nIGZvciBXVyBsYXN0IHllYXIuCkkgZGlkbid0IGtub3cgZm9zc2lsIGZ1ZWxzIGNvbnRyaWJ1dGVkIHRvIG1ldGhhbmUgc28gbXVjaCBhbmQgdGhhdCdzIGJlZm9yZSBhZGRpbmcgb24gdGhlIG90aGVyIGdyZWVuIGhvdXNlIGdhc3NlcyBmb3NzaWwgZnVlbHMgZW1pdC4KIDIlLiAKQmVmb3JlIHRoZSBjYXAgZXJhLCBhIHN1Y2Nlc3NmdWwgbGFyZ2UgbWFya2V0IHRlYW0gd2FzIGFibGUgdG8gc3RvY2sgdXAgb24gcGxheWVycyBpbiBhIHdheSB0aGF0IGxlc3Mgc3VjY2Vzc2Z1bCAvIHNtYWxsIG1hcmtldCB0ZWFtcyBjb3VsZG4gYWZmb3JkLiAKQnV0IGJlIGNhcmVmdWwsIHlvdXIgZmlyc3QgZHJpdmUgaXMgZ29pbmcgdG8gbWFrZSB5b3UgZmFsbCBpbiBsb3ZlLiBEb24gbGV0IHlvdXIgb3BpbmlvbiBmcm9tIHlvdXIgZmlyc3QgZHJpdmUgcnVpbiB5b3VyIHdhbGxldC4gVGhlcmUgYXJlIGhvbmVzdGx5IGJldHRlciBmaXJzdCBjYXJzIChzYXlpbmcgdGhpcyBhcyBzb21lb25lIHdobyBoYWQgYSBjb3JyYWRvIGFzIGEgZmlyc3QgY2FyIHdoZW4gaSB3YXMgMTkpIGJ1dCBpIGxlYXJuZWQgYSBsb3QgZnJvbSBteSBjb3JyYWRvLiAKUGxheWluZyBhbnkgb3RoZXIgZ3JlZW4gb3IgYmx1ZSBoZXJvZXMgb24gdGhlIGZsb3AgaXMganVzdCBhc2tpbmcgdG8gbG9zZSB0aGUgZ2FtZSBSb3VuZCAxIHRvIHNoaXR0eSBSTkcuIApFdmVyeSBzaW5nbGUgdGltZSBUSiBnb3Qga25vY2tlZCBkb3duLCBoZSBkZWZlbmRlZCBieSBzcHJpbmdpbmcgYmFjayB1cCBpbW1lZGlhdGVseS4gCkRlcGVuZGluZyBvbiB5b3VyIGZvb3Qgc2hhcGUgeW91IG1pZ2h0IGFsc28gbGlrZSB0aGUgS2F0YW5hIExhY2UgIEkgdHJpZWQgdGhlc2Ugb24gaW4gdGhlIHNhbWUgIndhdmUiIEkgb3JkZXJlZCB0aGUgS2F0YWtpcyBiYyBJIGNvdWxkbid0IGZpbmQgZWl0aGVyIG1vZGVsIGluIHNob3BzIG5lYXJieS4gSXQgaGFzIHRoZSBzYW1lIG5pY2UgY296eSBsaW5lciwgc3RpZmZlciBzb2xlLCBidXQgbW9yZSBzeW1tZXRyaWNhbCAoc28gbWF5YmUgYmV0dGVyIGZvciBuYXJyb3dlciBmZWV0KS4gClRoZSBvcmlnaW5hbCBmYW1pbHkgYnVzaW5lc3Mgb3duZWQgdGhlIFBvc3QgaG91c2UgY2hhaW4gYW5kLCBkZXNwaXRlIGJlaW5nIGEgc2hhcmVob2xkZXIgaW4gdGhlIFNhdm95IEdyb3VwLCB3YXMga25vd24gZm9yIGl0cyBtaWQgdG8gYnVkZ2V0IGhvdGVscy4gU2lyIFJvY2NvLCBieSBjb250cmFzdCwgd2VudCBkb3duIHRoZSBsdXh1cnkgcm91dGUgYW5kIGluIDE5OTcgYWNxdWlyZWQgaGlzIGZpcnN0IGhvdGVsLCB0aGUgQmFsbW9yYWwgaW4gRWRpbmJ1cmdoLCBmcm9tIEJhbmsgb2YgU2NvdGxhbmQsIHdoaWNoIGFsc28gcHJvdmlkZWQgYSBwb3VuZHMgNjBtIGxvYW4uIEhlIG5vdyBoYXMgMTJob3RlbHNhY3Jvc3NFdXJvcGUsIGFuZCBpbiB0aGUgeWVhciB0byBBcHJpbCAyMDA1IHByb2ZpdHMgY2FtZSBpbiBhdCBwb3VuZHMgN20gb24gdHVybm92ZXIgb2YgcG91bmRzIDgyLjdtLgpPdGhlcnMgdGhvdWdodCBwZW9wbGUgd291bGRuIGNsaWNrIG9uIGdyZWVuLCBzbyBmaW5hbGx5IHRoZXkgZGVjaWRlZCB0byBkbyBzb21lIEEgQiB0ZXN0aW5nIChpbiB3aGljaCB0d28gZGlmZmVyZW50IHZlcnNpb25zIG9mIGEgd2Vic2l0ZSBhcmUgb2ZmZXJlZCBhbmQgdXNlcnMgcmVzcG9uc2VzIHRvIGVhY2ggYXJlIGNvbXBhcmVkKS4gClNvY2lhbCBNZWRpYSBGZWF0dXJlcyBhbmQgV2lkZ2V0cyBhcmUgZWl0aGVyIGhvc3RlZCBieSBhIHRoaXJkIHBhcnR5IG9yIGhvc3RlZCBkaXJlY3RseSBvbiBvdXIgc2l0ZS4gClBsYXlpbmcgaW4gdGhlIHdzb3AgY2lyY3VpdCBtYWluIGluIDMgd2Vla3MsIGxpdHRsZSBvdmVyIHR3aWNlIG15IGxhcmdlc3QgYnV5IGluIHRvIGRhdGUuIEkgaGF2ZSBwdXQgaW4gd29yayBvbiBteSBzdHJhdGVneSBvdmVyIHRoZSBsYXN0IG1vbnRoIGFuZCBzdGlsbCBhbSBldmVyeSBuaWdodCBmb3IgYXQgbGVhc3QgYW4gaG91ci4gClRoaXMgaXMgd2hlcmUgdGhlIHRpcHBpbmcgcG9pbnQgaGFwcGVucy4gSXQgZm9sZGVkIHRvIHRoZSBmdW4gcGxheWVyIGluIFNCIGFuZCBoZSB3YW50ZWQgdG8gcmFpc2UuIFNoZSB3YXMgdGVsbGluZyBoaW0gdGhhdCBoZSBzaG91bGQgY2hvcCB0aGUgcG90LiBZZXMsIGl0IGlzIGJlbmVmaWNpYWwgdG8gY2hvcCBpbiB0aGF0IHNwb3QgYnV0IHRoaXMgZ3V5IHdhcyBoZXJlIHRvIHNwZXcuIEhlIHJhaXNlcyBhbmQgc2hlIHRlbGxzIGhpbSB0aGF0IGhlIG1ha2luZyBhbiBhbWF0ZXVyIG1vdmUgYW5kIHNoZSBob3BlcyBoZSBlbmpveXMgdGhlIGZhY3QgdGhhdCB0aGUgaG91c2Ugd2lsbCB0YWtlIGhhbGYgdGhlIHBvdCBpbiByYWtlIGlmIGl0IGdvZXMgdG8gYSBmbG9wLgpUd28gY2FyZHMgYXJlIGRlYWx0IGZhY2UgZG93biB0byBlYWNoIHBsYXllci4gU3RhcnRpbmcgb24gdGhlIGRlYWxlciBsZWZ0LCBlYWNoIHBsYXllciBkZWNsYXJlcyB3aGV0aGVyIHRoZXkgYXJlIGluIG9yIG91dC4gCkRpZGRseWRvY2sgdQpJIG1lYW4gaGUgc2F5aW5nIGhlIGhhcyBUSiBvciBKeGRkLiBEb3VidCBhIGxvbmUgVCBwbGF5cyB0aGlzIHdheS4gSSBkb3VidCAyMiBkb25rcyBmbG9wIHRvbyBvZnRlbiwgYnV0IEkgZ3Vlc3Mgb25jZSBpbiBhIHdoaWxlLiAKRXZlbiBpZiB5b3UgeW91cnNlbGYgYXJlIG5vdCBnb2luZyB0byBiZSB3b3JraW5nIGF0IFdhbCBNYXJ0LCB5b3Ugd2lsbCBoYXZlIHRvIHBheSBmb3IgdGhlIHBlb3BsZSB3aG8gZG8uLiAKTUVSQ0kgQXJpYW5lIHBvdXIgY2V0dGUgbWlzZSBlbiBsdW1pcmUgICBiZWxsZSBzdXJwcmlzZSBkZSBkY291dnJpciBxdWUgbW9uIGxpdnJlIGZhaXQgbCdvYmpldCBkJ3VuIGNvdXAgZGUgY29ldXIgISAgIHN1ciB0b24gYmxvZy4gCkxlcyBsZXR0cmVzIGRlICJSb1BIaCIgbWRlY2luLCBwZXJtdXRlcywgbm91cyBkb25uZW50IHRyb2lzIGluZGljYXRpb25zIGluYXR0ZW5kdWVzICBjZSBzdWpldC4gTGEgbWFsYWRpZSBzZXJhaXQgdW4gdGF0IG8gbGUgY29ycHMgZXN0IGVuIHByb2llIGF1IGRzb3JkcmUuIElsIGF1cmFpdCBwZXJkdSBsJ29yZHJlIHF1aSBsZSByZ2l0IG5hdHVyZWxsZW1lbnQgcG91ciBhZG9wdGVyIHVuIGZvbmN0aW9ubmVtZW50ICJzYXV2YWdlIiwgcGVyZWguIApMdGQuIApTb21lIHBhcnRpYWxseSBicmVhayBkb3duIHRoZSBiYXJyaWVycyBvZiBmZWFyLiBUaGUgZ29hbCBpcyB0byB1c2UgYm94aW5nIHRvIGFjY2VzcyB0aGUgdW5saW1pdGVkIHBvdGVudGlhbCBhbmQgd2lzZG9tIGxhdGVudCBpbiBldmVyeSBodW1hbiBiZWluZy4gCkkgc3VwcG9zZSB5b3UgZ2V0IGV4dHJhIHZhbHVlIGZyb20gYSBoYW5kIGxpa2UgUUouIFRoZXJlcyBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2YgdGhlIHRpbWUgd2hlbiB0aGUgdXRnIHBsYXllciBpcyB0cnlpbmcgdG8gdHJhcCB3aXRoIFFRIG9yIEpKLiAKQnkgbWFraW5nIGEgYmV0IG9uIGEgZmx1c2ggZmxvcCB5b3UgY29tbWl0dGVkIHlvdXJzZWxmIHRvIGFsbCBpbi4gWW91IGNvdWxkIGhhdmUgZWFzaWx5IGxvc3QgdG8gYW55IGZsdXNoLCBzbyB5b3UgcHJldGVuZCB5b3UgaGF2ZSB0aGUgZmx1c2ggbm90IHBsYXkgdGhlIDIgcGFpci4gCkkgbWVhbiwgd2hhdCB0aGF0IHN1cHBvc2VkIHRvIG1lYW4/IEkgd2FzIGEgZmFuIG9mIHRoZSBiYXNlIGdhbWUsIGFuZCBJIHRob3JvdWdobHkgZW5qb3llZCBtb29uY3Jhc2ggdG9vLiBJIGxpa2UgdG8gc2VlIHRoZW0gbWFrZSBtb3JlIGV4cGVyaW1lbnRhbCBnYW1lcyBsaWtlIGl0Li4gCkFjY29yZGluZyB0byB0aGUgcHJvcG9zYWwsIE1hZ25vdmF0ZSB3b3VsZCBtYWludGFpbiBhbmQgb3BlcmF0ZSB0aGUgcmlkZSBmb3IgMTUgeWVhcnMgYW5kIHRoZW4gaGFuZCBpdCBvdmVyIHRvIHRoZSB6b28sIHRob3VnaCBpdCB3b3VsZCBjb250aW51ZSB0byBtYWludGFpbiB0aGUgc3lzdGVtIGFuZCBlcXVpcG1lbnQgdW5kZXIgYSBzZXJ2aWNlIGFncmVlbWVudC4KTm90IGN1dGUhLiAKS2lja190aGVfQmVja2V0dCAgMSBwb2ludCAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwoiR2FtaW5nIGhvdGVsIGludmVzdG1lbnRzIHJlbWFpbiBrZWVubHkgc291Z2h0IGluIG1ldHJvcG9saXRhbiBhbmQgc3Ryb25nIHJlZ2lvbmFsIGFyZWFzLCIgaGUgc2FpZC4gClRoYXQgZGFkIGlzIGxvY2tlZCB1cCBJIHdvdWxkIHdhbGsgb3ZlciB0byBJcmVsYW5kIHdpdGhvdXQgYSBjYXJlIGluIHRoZSB3b3JsZC4gU2FpZCBoZSB3YW50cyB0byByZXR1cm4gdG8gSXJlbGFuZCB0byBiZWNvbWUgYSBwb2xpY2Ugb2ZmaWNlciBhbmQgd3JpdGUgYSBib29rIGFib3V0IGhpcyBsaWZlLiAKSSB3aWxsIGluIEJ1cmxpbmd0b24gbm90aGluZyBoYXBwZW5zIGhlcmUsIGl0cyBvdmVybHkgc2FmZSBpZiB5b3UgY2FuIHNheSB0aGF0LiBCdXQgYWxsIHRoZXNlIGxhd3MgYW5kIHByZWNhdXRpb25zIGFyZSB0byBwcm90ZWN0IGxpYWJpbGl0eSBmcm9tIG9uZSBhbm90aGVyLlBsZWFzZSB3YWxrL2RyaXZlIHlvdXIga2lkIHRvIHNjaG9vbCwgbGlhYmlsaXR5IG9uIHRoZSBwYXJlbnQuSGF2ZSB0aGUga2lkcyBzdGF5IGluIHNjaG9vbCBkdXJpbmcgc2Nob29sIGRheSwgbGlhYmlsaXR5IG9uIHNjaG9vbC5XaGVuIHNvbWV0aGluZyBoYXBwZW5zIGl0IGEgZmluYW5jaWFsIGxpYWJpbGl0eSBub3QgZm9yIHBlcnNvbmFsIHNhZmV0eS4gMSBwb2ludCAgc3VibWl0dGVkIDggZGF5cyBhZ29CbGFja2hhcnQgY29uc3RydWN0aW9uIHNlZW1lZCByZWFsbHkgcHJvZmVzc2lvbmFsIHdoZW4gdGhleSBwcm92aWRlZCBhIHF1b3RlIGFuZCBoYXZlIG5pY2Ugd29yay4gCkkgZ290IHRoZW0gYWJvdXQgYSB5ZWFyIGFuZCBhIGhhbGYgYWdvIGFuZCB0aGUgb25seSB3ZWFyIEkndmUgbm90aWNlZCBpcyBpbiB0aGUgc29sZSwgd2hpY2ggSSdtIGxvb2tpbmcgdG8gcmVwbGFjZS4gVGhpcyBpcyBhZnRlciB3ZWFyaW5nIHRoZW0gY29uc2lkZXJhYmx5IGR1cmluZyB0aGUgY29sZGVyIG1vbnRocy4KVGhlc2Ugd2VyZSBiYXNpY2FsbHkgdW5zZWVuIGR1cmluZyB0aGVpciBsb25nIGludGVyYWN0aW9ucyB3aXRoIGh1bWFuIGJlaW5ncywgdW50aWwsIHN1ZGRlbmx5LCBNci4sIEhvb2tlIG1hZGUgaGlzIGludmVzdGlnYXRpb25zIGFuZCBwdXQgYSBmYWNlIG9uIHRoZSB1bnNlZW4gbWljcm93b3JsZCBhbmQgc2hhcmVkIGl0IHdpdGggdGhlIEdlbmVyYWwgUHVibGljLiAKVGhlIDY0IG90aGVyIGNhdHMgbGVhcm4gZnJvbSB0aGF0IGJlaGF2aW9yLCBhbmQgdGhlbiBnbyBvdXQgYW5kIHJlcGVhdCB0aGUgYmVoYXZpb3IgdGhhdCBnb3QgdGhhdCBvbmUgY2F0IGV4dHJhIGxvdmUgYW5kIGZvb2QuIEl0IHdvdWxkIGJlIGhhcmRlciB0byB0cmFpbiBvbmUgY2F0IHRvIGRvIHRoaXMgdGhhbiBhbiBhcm15IG9mIHRoZW0uIApUaGUgTW9uc3RlciBIaWdoIGZyYW5jaGlzZSBpbmNsdWRlcyBtYW55IGNvbnN1bWVyIHByb2R1Y3RzIHN1Y2ggYXMgc3RhdGlvbmVyeSwgYmFncywga2V5IGNoYWlucywgdmFyaW91cyB0b3lzLCBwbGF5IHNldHMsIHZpZGVvIGdhbWVzLCBUViBzcGVjaWFscywgYSB3ZWIgc2VyaWVzLCBhbmQgZGlyZWN0IHRvIERWRCBtb3ZpZXMuIFRoZSBjaGFyYWN0ZXJzIGFyZSByZWxhdGVkIHRvIG9yIGFzIG9mZnNwcmluZyBvZiBmYW1vdXMgbW9uc3RlcnMgc3VjaCBhcyBEcmFjdWxhLCBGcmFua2Vuc3RlaW4gTW9uc3RlciwgdGhlIE11bW15LCBNZWR1c2EsIHRoZSBDcmVhdHVyZSBmcm9tIHRoZSBCbGFjayBMYWdvb24sIHRoZSBQaGFudG9tIG9mIHRoZSBPcGVyYSwgWm9tYmllcyBhbmQgbW9yZS4uIApJbiBTdHVkeSAxLCB3aGVuIGdpdmVuIG5vIGluZm9ybWF0aW9uIGFib3V0IHJlY2lwaWVudHMnIGFiaWxpdHkgdG8gb2J0YWluIGluZGVwZW5kZW5jZSwgV2hpdGUgcGFydGljaXBhbnRzIHJlcG9ydGVkIGxlc3Mgc3VwcG9ydCBmb3IgdGhlIHByb2dyYW0gYW5kIGEgZ3JlYXRlciBkZXNpcmUgdG8gbW9uaXRvciByZWNpcGllbnQgc3BlbmRpbmcsIHdoZW4gdGhlIG1ham9yaXR5IG9mIHJlY2lwaWVudHMgd2VyZSBCbGFjayAodnMuIFdoaXRlKS4gV2UgY29uY2x1ZGUgdGhhdCBwZXJjZWl2ZWQgaW5kZXBlbmRlbmNlIG9mIHdlbGZhcmUgcmVjaXBpZW50cyBtYXkgc2hpZnQgd29yayBldGhpYyBzdGVyZW90eXBlcyBhbmQgaW5jcmVhc2Ugc3VwcG9ydCBmb3Igd2VsZmFyZSBwb2xpY2llcywgcmVnYXJkbGVzcyBvZiByZWNpcGllbnQgcmFjZS4uIApBbmQgcmFuIHZlcnkgY2xvc2UgYWdhaW4uIApJIGFkbWl0IGl0LiBJIHdpbGwgbmV2ZXIgdW5kZXJzdGFuZCBob3cgdGhlIFVTIGdvdmVybm1lbnQsIGVzcGVjaWFsbHkgdGhlIENvbmdyZXNzIGFuZCB0aGUgU3VwcmVtZSBDb3VydCwgd29yay4gVGFrZSB0aGVpciBub3Rpb24gb2YgdGhlIEZpcnN0IEFtZW5kbWVudC4gdi4gU3RldmVucy4gVGhlIGxlZ2FsIGlzc3VlIGlzIHdoZXRoZXIgQ29uZ3Jlc3MgaW5mcmluZ2VkIG9uIEZpcnN0IEFtZW5kbWVudCByaWdodHMgd2hlbiBpdCBwYXNzZWQgYSBsYXcgb3V0bGF3aW5nIHRoZSBkaXN0cmlidXRpb24gb2YgaW1hZ2VzIG9mIGFuaW1hbCBjcnVlbHR5IGZvciBwcm9maXQuIFRoZXNlIGltYWdlcyBpbmNsdWRlIHZpZGVvcyBvZiBkb2dzLCBwaXQgYnVsbHMgbW9zdGx5LCBraWxsaW5nIG90aGVyIGFuaW1hbHMsIGluY2x1ZGluZyBkb2dzLiBBcHBhcmVudGx5IHBlb3BsZSBidXkgdGhlc2UgZmlsbXMgZm9yIHBsZWFzdXJlLiBKdXN0aWNlIEFudG9uaW4gU2NhbGlhIHNhaWQgdGhhdCB0aGUgY291cnQgbmVlZGVkIHRvIGNvbnNpZGVyICJ0aGUgcmlnaHQgb2YgcGVvcGxlIHdobyBsaWtlIGNvY2tmaWdodGluZywgd2hvIGxpa2UgZG9nZmlnaHRpbmcgYW5kIHdobyBsaWtlIGJ1bGxmaWdodGluZyB0byBwcmVzZW50IHRoZWlyIHNpZGUgb2YgdGhlIGRlYmF0ZS4iClNob3VsZCBJIGhhdmUgZ2l2ZW4gYSBzaG91dCBhbnl3YXk/LiAKVG8gc3RyZXRjaCB0aGUgYmljZXBzLCBleHRlbmQgeW91ciBhcm0gc3RyYWlnaHQgb3V0IHRvIHRoZSBzaWRlLCBwb2ludCB5b3VyIHRodW1iIHRvd2FyZHMgdGhlIGZsb29yLCBhbmQgc3RyZXRjaCB5b3VyIGFybSBpbiBiYWNrIG9mIHlvdSAodHVybiB5b3VyIHRodW1iIHBvaW50aW5nIGRvd24gYmFja3dhcmRzIGZvciBhbiBhZGRpdGlvbmFsIHN0cmV0Y2gpLiAKRXZlbiBhIHN0cmFpZ2h0IGZsdXNoIG9uIHRoZSBib2FyZCBjYW4gbG9zZS4gCk1vcmUgcGVvcGxlIGFyZSBnb2luZyBicm9rZSBpbiBDYW5hZGEgYXMgaW50ZXJlc3QgcmF0ZXMgcmlzZVRheCB0aXBzIHRvIGtpY2tzdGFydCAyMDE5IGZvciBldmVyeSBhZ2UgZ3JvdXAsIGZyb20gdGVlbnMgdG8gc2VuaW9yc0FsbCB0aGUgZnJ1Z2FsaXR5IGluIHRoZSB3b3JsZCB3b24gbGV0IHRoaXMgbWlsbGVubmlhbCByZXRpcmUgYXQgNDUgZGlkIEkgc3BlbmQgbW9uZXkgb24gdGhpcz8hPyB3ZSBhc2suIEJlY2F1c2UgSSBuZWVkIGl0LiBCZWNhdXNlIEkgZGVzZXJ2ZSBpdC4gClJlY2VudGx5IEkgZG9uZSB3aGF0IEkgdGhpbmsgaXMgYW4gYTIgbWlkZGxlIGZpbmdlciBwdWxsZXkgaW5qdXJ5LiBJdCB3YXMgdmVyeSBzb3JlIGluIHRoZSB0aGUgZmluZ2VyIHNlZ21lbnQgYWJvdmUgdGhlIHBhbG0gcmVnaW9uIHRvIGJlZ2luIHdpdGguIEkgY291bGRuIGV2ZW4gZG8gcHVsbHVwcyBvbiBhIGJhciBvciBob2xkIGEganVnLiBOb3cgaXQgYXQgYWJvdXQgODAgdG8gOTAlLiBJIHN0aWxsIGhhdmUgcGFpbiBvbiB0aGUgc2lkZSBvZiB0aGUgam9pbnQgYW5kIHRoZSBmbGVzaHkgcGFydCBzaWRlcyBhbmQgYm90dG9tLiBBbHNvLCB0aGUgbWlkZGxlIGZpbmdlciBhcHBlYXJzIHRvIGJlbnQgdG93YXJkcyB0aGUgcGlua3kgc2lkZSBieSBhYm91dCA1IGRlZ3JlZXMuCkhlIHNhaWQgIkkgZ290IGEgYm9uZXIuIiBUaGUgc21hbGwgdGhlYXRlciB3aGVyZSB0aGV5IHdlcmUgZG9pbmcgdGhlIHNob3dpbmcgYnJva2Ugb3V0IGluIGxhdWdodGVyLiAKWW91IGNhbid0IGJlIGFueW9uZSBmaXJzdCBjaG9pY2Ugb25jZSB5b3UgZ2V0IHRvIGEgY2VydGFpbiBhZ2UuIApIZSB3YXMgYSBnb2FsaWUgZm9yIHRoZSBQZWxoYW0gUGFudGhlcnMgaW4gaGlzIHByaW1lIGFuZCBhIDEgTGVhZnMgYW5kIEpheXMgZmFuLiBQaGlsIGFsd2F5cyBsb29rZWQgZm9yd2FyZCB0byB0aGUgZ29vZCB0aW1lcyB3aXRoIGhpcyBzaWduYXR1cmUgZ3Jpbi4gClRoZSBKYXBhbmVzZSBpbiBwYXJ0aWN1bGFyIHNlZW0gdG8gdmVyeSBtdWNoIGF2b2lkIHRoZSBzdWJqZWN0LCB3aGljaCBpcyBwYXJ0bHkgd2h5IHRoZXJlIGlzIHNvIG11Y2ggdGVuc2lvbiBiZXR3ZWVuIHRoZW0gYW5kIHJlc3Qgb2YgU291dGggRWFzdCBBc2lhLiBCZWluZyBudWtlZCwgYW5kIHRoZSBzdWJzZXF1ZW50IEFtZXJpY2FuIG9jY3VwYXRpb24sIHdhcyBhIHBhcmFkaWdtIHNoaWZ0IG1vbWVudCBpbiBKYXBhbmVzZSBzb2NpZXR5IGZvciBvYnZpb3VzIHJlYXNvbnMgc28gb2YgY291cnNlIHdvdWxkIHdhbnQgdG8gZGVhbCB3aXRoIGl0LiAKQnV0IGlmIGluc3RlYWQsIHRoZSB0dXJuIGJyaW5ncyBhIDMgYW5kIHlvdSBiZXQgYWdhaW4sIHlvdXIgb3Bwb25lbnQgY291bGQgYmUgc2NhcmVkIHRoYXQgeW91IGFyZSBvbiB0cmlwIDNzLCBpZiB5b3UgaGFkbid0IHJhaXNlZCBwcmUgZmxvcCwgb25seSB0byB0dXJuIGFyb3VuZCBhbmQgYmV0IGhhcmQgb24gM3MsIGEgImJvdHRvbSBwYWlyLCIgb24gdGhlIGZsb3AuIApJdCBub3QgcmVhbGx5IGFuIGFuc3dlcmFibGUgcXVlc3Rpb24gZWl0aGVyIHdheSAgIGZpcnN0LCBpZiBpdCB3YXMgcGF0ZW50ZWQgaXQgY291bGQgaGF2ZSBlbnRpcmVseSBwcmV2ZW50ZWQgaXQgZnJvbSBiZWluZyB1c2VkIGluIHRoZSB3YXkgaXQgd2FzLCBhbmQgc29tZSBvdGhlciB0ZWNobm9sb2d5IGNvdWxkIGhhdmUgY29tZSBhYm91dCBpbnN0ZWFkIHRoYXQgd2FzIGZyZWUgdG8gdXNlLgpUaGF0cyB3aHkgaXRzIGxlZ2FsIHRvIG93biByaWZsZXMgYmVmb3JlIGEgaGFuZGd1bi4KVGhlbiBjYXJlZnVsbHkgYXBwbHkgdGhlIG1peCB0byB5b3VyIGZhY2UsIGJlaW5nIHN1cmUgdG8ga2VlcCBpdCBvdXQgb2YgeW91ciBleWVzIG9yIG1vdXRoLiAKSnVzdCBsYXVnaGluZyBhdCBob3cgY29tcGxldGVseSBjbHVlbGVzcyB5b3UgYXJlLiAKVHdvIGxlY2hvbnMsIGFuZCBub29kbGVzIGFuZCByaWNlIGFuZCBkZXNzZXJ0cyBhbmQgYWxsIHNvcnRzLi4gClRoZXJlIG1pZ2h0IGJlIHNvbWUgY29uY2lldmFibGUgcmVhc29uIGZvciB0aGUgZGVmZW5zZSB0byBhc2sgaGltIHRvIHRlc3RpZnksIGJ1dCBJIGNhbiB0aGluayBvZiB3aGF0IGl0IHdvdWxkIGJlLiAKSSBqdXN0IGRvbiB1bmRlcnN0YW5kIHdoeSBhbnlvbmUgd291bGQgdGhpbmsgdGhpcyBpcyBhIGdvb2QgdGhpbmcuLiAKSG93IGNhbiB5b3UgYmUgZGVmeWluZyBHb2Qgd2lsbD8gRG9lcyB5b3VyIEdvZCBub3QgbG92ZSB5b3U/IEFyZSB5b3Ugbm90IG9uZSBvZiB5b3VyIGdvZCBjaGlsZHJlbj8gQXMgbG9uZyBhcyB5b3UgYXJlIGxpdmluZyBhIG1vcmFsbHkgcmVzcG9uc2libGUgbGlmZSAobm90IGJyaW5naW5nIGludGVudGlvbmFsIGhhcm0gdG8gb3RoZXJzLCBub3QgY2hlYXRpbmcgb24geW91ciBwYXJ0bmVyLCBldGMpLCB0aGVuIGFyZSB5b3Ugbm90IGZvbGxvd2luZyB5b3VyIEdvZCB3aWxsPyBUaGlzIHJlYWxseSBqdXN0IHNvdW5kcyBsaWtlIHRoZSBtYW4gbWFkZSBjb250cm9sIGFzcGVjdCBvZiB0aGUgY2h1cmNoIGJlaW5nIHZvY2FsaXplZCBieSB5b3VyIG1vdGhlci4gVGhhdCBzbyBpbmZ1cmlhdGluZyB0byBoZWFyIHRoYXQgeW91ciBtb3RoZXIgaXMgc28gY29udHJvbGxpbmcgYW5kIGhlYXJ0bGVzcywgYW5kIGlzIG5vdCBlbWJyYWNpbmcgdGhlIHZhbHVlcyBvZiBoZXIgb3duIHJlbGlnaW9uLgpSZW1vdmUgb25lIG9mIHRob3NlIHBhcnRzIFsxLzNdIGFuZCBtaXggdGhlIHJlbWFpbmluZyBwZW5uaWVzIFsyLzNdIHVwLiAKSSBoYXZlIHBvc3RlZCBiZWZvcmUsIGJ1dCBJIGhhdmUgaGFkIG5vIHJlc3BvbnNlLiBJIGFtIHZlcnkgbXVjaCBpbnRlcmVzdGVkIGluIGJlaW5nIGludm9sdmVkIGluIGEgbWFzc2FnZSBleGNoYW5nZS4gSXQgaXMgYSBsb3QgY2hlYXBlciB0byBkbyBhbiBleGNoYW5nZSBhcyBvcHBvc2VkIHRvIHBheWluZyBzb21lb25lIHRvIGRvIGl0LgpJdCBkb2Vzbid0IGhhdmUgdG8gYmUgYSBtYXN0ZXJwaWVjZSB0aGF0IGNvbXBldGVzIHdpdGggdGhlIGxpa2VzIG9mIE9yd2VsbCBvciBIZW1pbmd3YXkuIApMb29rcyB0byBtZSBsaWtlIHlvdSB0b29rIHRoZSBtZXRhIHRvbyBzZXJpb3VzbHkgYW5kIGJ1cm5lZCBvdXQgZ3JpbmRpbmcgdG9vIGhhcmQuClRoaXMgd2FzbiB0aGUgcmVhc29uIGZvciB0aGUgbWVldGluZy4gVGhlIG1lZXRpbmcgd2FzIGJlY2F1c2UgdGhpcyBwZXJzb24gbm8gbG9uZ2VyIGhhcyB0aGUgc3RyZW5ndGggdG8gc28gbXVjaCBhcyBsb2NrIHRoZWlyIGtuZWVzIGZvciBhIHBpdm90IHRyYW5zZmVyLiBUaGV5IG5vdyB3aGF0IGNsYXNzaWZpZWQgYXMgYSAyIHBlcnNvbiB0b3RhbCBsaWZ0LiBUaGV5IHJlZnVzaW5nIHRvIHBhcnRpY2lwYXRlIGluIGdldHRpbmcgYSAoc3Vic2lkaXplZCEpIG1lY2hhbmljYWwgbGlmdCBpbnN0YWxsZWQgaW4gdGhlaXIgaG9tZSwgaW5zdGVhZCBkZW1hbmRpbmcgdGhhdCBodW1hbiBzdGFmZiBsaWZ0IHRoZW0gbWFudWFsbHkuCk15IEJpYmxlIGNvbGxlZ2UgYm95ZnJpZW5kIHVzZWQgdG8gYnJlYWsgdXAgd2l0aCBtZSBmb3IgbWFueSByZWFzb25zLiAKSG93IGNhbiB0aGUgQW1lcmljYW4gcHVibGljLiAKW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxNCBob3VycyBhZ28uIApUaGUgcG9pbnQgaXMsIHlvdXIgZGlhZ25vc2lzIHN1Y2tzLCBidXQgeW91IHB1bGwgdGhyb3VnaCwgSSBoYXZlIHRoZSB1dG1vc3QgY29uZmlkZW5jZSBvZiB0aGF0LiBMZWFuIG9uIGxvdmVkIG9uZXMgaW4gdGhpcyBkaWZmaWN1bHQgdGltZS4gCiJJdCB3YXMgYSBmYW50YXN0aWMgb3Bwb3J0dW5pdHksIiBXaWxsaWFtcyBzYWlkIG9mIFRvcm9udG8uICJFdmVuIHRob3VnaCB0aGUgZ3V5cyBhdCBMZWljZXN0ZXIgd2VyZSBmbHlpbmcuIgpUaGUgcmVzdCBvZiB3aGF0IHNoZSBoYXMgdG8gc2F5ICh0aGUgaGVhZGxpbmUgcXVvdGVzKSBhcmUganVzdCBzbyBvdXQgb2YgdG91Y2ggSSdtIGV4YXNwZXJhdGVkLiBJIHdvbmRlciB3aGVyZSBzaGUgd29ya2VkIGZvciBmcmVlIHdoZW4gc2hlIHdhcyB5b3VuZz8gTm8gbWVudGlvbiBvZiB0aGF0IGFzIEknbSBzdXJlIGl0IGRpZG4ndCBoYXBwZW4uCkluIE5vdmVtYmVyIDIwMTYsIHNoZSB3YXRjaGVkIGFzIHR3byBzZXBhcmF0ZSBtYWxlIGN1c3RvbWVycyB3YWxrZWQgdG8gT3JjaGlkIGFmdGVyIHBhcmtpbmcgbW9yZSB0aGFuIGEgYmxvY2sgYXdheS4gVG8gUm9iZXJ0cywgdGhpcyB3YXMgdHlwaWNhbCBiZWhhdmlvciBmb3IgcGVvcGxlIHNlZWtpbmcgaWxsZWdhbCBzZXggc2VydmljZXMuIFdoZW4gc2hlIGVudGVyZWQgT3JjaGlkLCBzaGUgZm91bmQgdGhhdCBvd25lciBXYW5nIHdhcyBvdXQgZm9yIGx1bmNoLCBsZWF2aW5nIHRoZSBzcGEgaW4gdGhlIGNoYXJnZSBvZiBhIHdvbWFuIHdobyBjb3VsZG4ndCBwcm92aWRlIGlkZW50aWZpY2F0aW9uIGFzIGFuIGVtcGxveWVlLCBhbmQgY2xhaW1lZCB0byBiZSB0aGVyZSBmb3IgYSBqb2IgaW50ZXJ2aWV3LgpMYW50ZXJucyBPZiBUaGUgVHdlbnR5CkJFU1QsIEhhemVsIE1hcnkgKG5lZSBNY0Rlcm1vdHQpICAgSXQgaXMgd2l0aCBzYWRuZXNzIHRoZSBmYW1pbHkgYW5ub3VuY2VzIHRoZSBwYXNzaW5nIG9mIEhhemVsIEJlc3QsIG9uIE5vdmVtYmVyIDMsIDIwMTEgdGhyZWUgZGF5cyBwcmlvciB0byBoZXIgOTJuZCBiaXJ0aGRheSBhdCBUZWNrIFBpb25lZXIgUmVzaWRlbmNlIEtpcmtsYW5kIExha2UgT250LiBEZWFybHkgbWlzc2VkIGFuZCBmb3JldmVyIHJlbWVtYmVyZWQgYnkgaGVyIGRhdWdodGVycyBMaW5kYSAoQmlsbCkgSGFtaWx0b24sIE5hbm9vc2UgQmF5LCBCQyBhbmQgVmFsZXJpZSBCZXN0LCBLaXJrbGFuZCBMYWtlLCBhbG9uZyB3aXRoIGdyYW5kY2hpbGRyZW4gS2VsbHkgKEpvaG4pIEVkbW9udG9uLCBUcmFjeSAoSm9obiBQYXVsKSBWYW5jb3V2ZXIsIEFuZHJldyAoS2FycmFuKSBWYW5jb3V2ZXIsIERhcmN5IChNaWNoZWxsZSkgVGltbWlucyBhbmQgZ3JlYXQgZ3JhbmRjaGlsZHJlbiBLZWlvbiwgRHJldywgQm9kaGksIE1ha2VubmEgYW5kIENvbGVtYW4uIFNpc3RlcnMgaW4gbGF3IEdyYWNlIE1jRGVybW90dCwgQmV0dHkgQmVzdCBhbmQgbWFueSBuaWVjZXMgYW5kIG5lcGhld3MuIApWYWx1YWJsZUdvdmVybm1lbnQgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpBbGwgb2YgdGhlc2UgMyB3ZWIgaG9zdHMgYXJlIG9mZmVyaW5nIDEgaG9zdGluZyBwbGFuIGluIGxwYXllciBzaGFyZWQgaG9zdGluZy4gQU9MIGhhcyB0aGUgbGF0ZXN0IHNwb3J0cyBuZXdzIGFuZCBicmVha2luZyBzcG9ydGluZyBoZWFkbGluZXMgZnJvbSB0aGUgTkZMLCBOQkEsIE1MQiwgTkhMLCBOQVNDQVIsIFBsYSB5ZXIsIFdvcmxkIEN1cCBTb2NjZXIgYW5kIG1vcmUhLiBHYW1lRmx5LCB0aGUgMSB2aWRlbyBnYW1lIHJlbnRhbCBzZXJ2aWNlLgpFeGNlbHNpb3IgU3ByaW5nc1NlYXJjaCBmb3IgInswfSJUaGUgbW9zdCByb21hbnRpYyBnZXRhd2F5IGluIHRoZSBLYW5zYXMgQ2l0eSBhcmVhLCB0aGlzIHN0YXRlbHkgYW5kIGhpc3RvcmljIGJlZCBhbmQgYnJlYWtmYXN0IGlzIGxvY2F0ZWQgaW4gRXhjZWxzaW9yIFNwcmluZ3MsIE1PLCBhIG1lcmUgMzAgbWludXRlcyBmcm9tIGRvd250b3duIEthbnNhcyBDaXR5LiBPdXIgaW5uIG9mZmVycyB0aGUgcGVyZmVjdCBzZXR0aW5nIGZvciB3ZWRkaW5ncywgY29ycG9yYXRlIHJldHJlYXRzLCBmYW1pbHkgcmV1bmlvbnMsIGhvbmV5bW9vbnMsIHN0YXljYXRpb25zLCBhbmQgb3RoZXIgZXZlbnRzLiBUaGUgSW5uIG9uIENyZXNjZW50IExha2Ugb2ZmZXJzIG1hbnkgb3B0aW9ucyB0byBlYWNoIGd1ZXN0LCBidXQgd2UgYXJlIGNlcnRhaW4gdGhhdCBldmVyeW9uZSB3aG8gY29tZXMgd2lsbCBlbmpveSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVzdCwgcmVsYXgsIGFuZCByZWp1dmVuYXRlLiAKSSBhbSBmdWxseSBhd2FyZSBvZiB0aGF0LiBBcyBpbiBldmVyeSBkYXkuIApTcGVha2VyIE1pY2hhZWwgRS4gCkkgd2FzIGNvbnZpbmNlZCB0aGVyZSB3YXMgc29tZXRoaW5nIHdyb25nIHdpdGggbXkgaGVhcnQuIEkgd2FzIGNvbnN0YW50bHkgZmlkZ2V0aW5nIHdpdGggbXkgbGVmdCBhcm0sIGNoZWNraW5nIG15IHB1bHNlLCBhbmQganVzdCBnZW5lcmFsbHkgZnJlYWtpbmcgb3V0LiBJIHdlbnQgdG8gc2V2ZXJhbCBkb2N0b3JzLCBldmVuIHRoZSBlbWVyZ2VuY3kgcm9vbSBvbmNlLCBhbmQgZXZlcnkgdGltZSB0aGV5IHRvbGQgbWUgdGhlcmUgd2FzIG5vdGhpbmcgd3Jvbmcgd2l0aCBteSBoZWFydCBhbmQgdGhhdCBpdCB3YXMgYWxsIGluIG15IGhlYWQsIGJ1dCBJIG5ldmVyIHJlYWxseSBiZWxpZXZlZCB0aGVtLiAKSGlzIGludm9sdmVtZW50IGluIHRob3NlIHNvY2lhbCBjaXJjbGVzIGRhdGVzIGJhY2sgdG8gMTk2OCwgd2hlbiBoZSBiZWdhbiBzZXJ2aW5nIGFzIHRoZSBjaG9pciBkaXJlY3RvciBhbmQgb3JnYW5pc3QgYXQgQ2hyaXN0IEx1dGhlcmFuIENodXJjaCBpbiBTY2h1eWxraWxsIEhhdmVuLiBIZSBiZWdhbiB0ZWFjaGluZyBhdCBOYXRpdml0eSBCVk0gaW4gUG90dHN2aWxsZSBpbiAyMDA3LCBhY2NvcmRpbmcgdG8gdGhlIG5ld3NwYXBlci4KVGhpcyBtYXkgYmUgYSBzdHJldGNoLCBob3BlZnVsbHkgbW9zdCBwZW9wbGUgd29uIGdvIHRoaXMgZmFyLiBCdXQgZGFtbiBpZiB0aGF0IGlzbiBob3cgaXQgc3RhcnRzIHNvbWV0aW1lcy4uIApCb3NzIGZpZ2h0cyB3ZXJlIGFubm95aW5nIHRvbyAgIG1vcmUgZGlmZmljdWx0IHRoYW4gWk0gYnV0IG5vdCBpbiBhIHdheSB0aGF0IGZlZWxzIGZhaXIgb3IgaW50ZXJlc3RpbmcuIEtlcHQgZHJlYWRpbmcgZW5jb3VudGVyaW5nIHRoZSBuZXh0IGJvc3MgcmF0aGVyIHRoYW4gbG9va2luZyBmb3J3YXJkIHRvIGl0LiBGYW50YXN0aWMgYXRtb3NwaGVyZSwgcHJlc2VudGF0aW9uIGFuZCBzb3VuZHRyYWNrIHRob3VnaC4gCkxlIHNlZ25hbGF6aW9uaSBwb3Nzb25vIGVzc2VyZSBpbnZpYXRlIGRhbCBzaXRvIGF0dHJhdmVyc28gbGEgcHJvY2VkdXJhIGd1aWRhdGEgbyB2aWEgc21hcnRwaG9uZSwgZG92ZSAgc3VmZmljaWVudGUgbGFuY2lhcmUgbCdhcHAgZSBzY2F0dGFyZSB1bmEgZm90byBwZXIgZmFyIHMgY2hlIGlsIGRpc3Bvc2l0aXZvIHZpIGFzc29jaSBhdXRvbWF0aWNhbWVudGUgbGUgY29vcmRpbmF0ZSBHUFMgZSB2aXN1YWxpenppIGxhIHNlZ25hbGF6aW9uZSBzdWxsYSBtYXBwYS4KS2xpbmdvbiBBY2FkZW15IGlzIHN1dXVwZXIgYnVnZ3k7IGlpcmMgdGhleSB3ZXJlIGJlaGluZCBzY2hlZHVsZSBhbmQgcmVsZWFzZWQgaXQgYmVmb3JlIGlyb25pbmcgb3V0IHNvbWUgb2YgdGhlIGtpbmtzLiAKQmFrZXIgYWxzbyBoYXMgd3JpdHRlbiBhIHNlcmllcyBvZiBmYW50YXN5IG5vdmVscyBzZXQgaW4gRWJlcnJvbi4gCjY4IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJIHBhdXNlZCBhbmQgd2FudGVkIHRvIHNheSB0b28gQWx0aG91Z2ggdHJ1ZSwgdHJ1ZSwgSSB0aGVuIGltbWVkaWF0ZWx5IHRob3VnaHQgb2Ygc2l0dGluZyBhdCBhIHRhYmxlIG9mIDYgd29tZW4gaW4gb3VyIG1pZCAzMCBTb21lIG1pbGRseSBkcnVuaywgb25lIG9mZiB0aGVpciBjb25rZXJzIHdhc3RlZC4gT25lIG9mIHRoZW0gaXMgYW4gaW5jcmVkaWJseSBlbW90aW9uYWwgcGVyc29uLiBBbHRob3VnaCB3ZSBjb21wbGV0ZSBvcHBvc2l0ZXMsIHdlIGJlZW4gY2xvc2UgaW4gdGhlIHBhc3QuIApPdGhlciBmZWF0dXJlcyBpbmNsdWRlIHNvbGlkIHdvb2QgZm9vdCBwZWRlc3RhbCwgcG9vbCBiYWxscywgYW5kIHBvb2wgc3RpY2tzLiBZb3UgY2FuIHBsYXkgYnVtcGVyIHBvb2wsIHBva2VyLCBvciB1c2UgYXMgYSBkaW5pbmcgdGFibGUuIE5vdCBxdWl0ZSBhIGRpbm5lciBkaW5pbmcgdGFibGUgZm9yIGFuIGVudGlyZSBmYW1pbHkuIApJbCBuIGEgcGFzIHF1ZSBkdXJhbnQgbCByb21haW5lIHF1IGNvbmNldmFpdCBsZSBnbGFuZCBjb21tZSBhbGltZW50LCBwdWlzcXVlIGRlcyB1c2FnZXMgYWxpbWVudGFpcmVzIHJndWxpZXJzIGR1IGdsYW5kIHNlIHZyaWZpcmVudCBlbiBBbGxlbWFnbmUsIGFpbnNpIHF1ZSBkYW5zIGNlcnRhaW5zIGNvaW5zIGRlIFBvbG9nbmUgbywganVzcXUgbGEgU2Vjb25kZSBHdWVycmUgbW9uZGlhbGUsIG9uIG5lIGNvbm5haXNzYWl0IHBhcyBhdXRyZSBjaG9zZSBxdSBwYWluIGRlIGZhcmluZSBkZSBnbGFuZCBldCBkZSBmcm9tZW50LiAKSWYgSSBkZWNpZGUgdG8gZ28gdGhlIHJvdXRlIG9mIEggSSB3aWxsIGJlIHN1cmUgdG8gdXBob2xkIHRoZSBzdGFuZGFyZHMgYnkgd2hpY2ggTkEgbWVtYmVycyBob2xkIHRoZW1zZWx2ZXMgYWNjb3VudGFibGUgdG8gdGhlIG9yZ2FuaXphdGlvbi4KRGVwZW5kaW5nIG9uIHlvdXIgZm9vdCBzaGFwZSB5b3UgbWlnaHQgYWxzbyBsaWtlIHRoZSBLYXRhbmEgTGFjZSAgSSB0cmllZCB0aGVzZSBvbiBpbiB0aGUgc2FtZSAid2F2ZSIgSSBvcmRlcmVkIHRoZSBLYXRha2lzIGJjIEkgY291bGRuJ3QgZmluZCBlaXRoZXIgbW9kZWwgaW4gc2hvcHMgbmVhcmJ5LiBJdCBoYXMgdGhlIHNhbWUgbmljZSBjb3p5IGxpbmVyLCBzdGlmZmVyIHNvbGUsIGJ1dCBtb3JlIHN5bW1ldHJpY2FsIChzbyBtYXliZSBiZXR0ZXIgZm9yIG5hcnJvd2VyIGZlZXQpLiBJIG1heSBnZXQgYSBwYWlyIGZvciB0cmFkIHdoZW4gbXkgY3VycmVudCBraWNrcyBydW4gb3V0Li4gClRoZSBmaXJzdCBpdGVtIG9uIHRoaXMgbGlzdCBpc24ndCBzb21ldGhpbmcgeW91IGVhdCwgaXQncyBhYm91dCB0aGUgZmVlbCBvZiB0aGUgY29ybnN0YXJjaCBvbiB5b3VyIGJvZHkgKGhhbGYgIHRvIGZ1bGwgbnVkZSBib2R5IHByZWZlcnJlZCkuIEp1c3QgdGhlIGluaXRpYWwgc2Vuc2F0aW9uIG9mIGNvcm5zdGFyY2ggZHJvcHBpbmcgb24gdGhlIHNraW4gbWltaWNzIHRoZSBzZW5zYXRpb24gb2YgbGlxdWlkIHNpbGsuIFRyeSBhIGZldyBkcm9wcyBvbiB5b3Vyc2VsZiBhbmQgeW91J2xsIHNlZSB3aGF0IEkgbWVhbi4gClRoZSByZXNlYXJjaGVycyBmb3VuZCB0aGF0LCBpbiBnZW5lcmFsLCBXZXN0ZXJuIG1lZGljaW5lICh2ZXJzdXMgVENNKSB0aGUgcGVyY2VpdmVkIGltcG9ydGFuY2Ugb2YsIGFuZCBtb3RpdmF0aW9uIHRvIGVuZ2FnZSBpbiwgY29tcGxlbWVudGFyeSBoZWFsdGggcHJvdGVjdGl2ZSBiZWhhdmlvciwgdGhlcmVieSB1bmRlcm1pbmluZyBhIGhlYWx0aHkgbGlmZXN0eWxlLiBJbiBvdGhlciB3b3JkcywgcGF0aWVudHMgdGFraW5nIHBpbGxzIGZvciB0aGVpciBoaWdoIGJsb29kIHByZXNzdXJlIG1heSBiZSBsZXNzIGFwdCB0byBzZWUgdGhlIG5lZWQgdG8gZXhlcmNpc2UsIHdhdGNoIHRoZWlyIGRpZXQgb3IgbG9zZSB3ZWlnaHQuLiAKSXQncyBjb21wbGV4IGNhdXNlIGl0IGNhbiBiZSBjYXVzZWQgYnkgYSBsb3Qgb2YgZGlmZmVyZW50IHJlYXNvbnMuIENsZWFuaW5nIHVwIG15IGRpZXQsIG51dHJpdGlvbiBhbmQgc2xlZXAgY2hhbmdlZCB0aGUgZ2FtZS4gSW52ZXN0aW5nIGluIHNvbWUgcHJlIHdvcmtvdXQgYW5kIGNyZWF0aW5nIGEgbW90aXZhdGluZyBwbGF5bGlzdCBpcyBzdXBlciBoZWxwZnVsIHRvby4gCkFuZCB0aGlzIGlzbiBhbiBpbmRpdmlkdWFsIHN0b3J5LiAKV2UgdW5kZXJlc3RpbWF0ZSBhIGh1bWFuIG1pbmQuIFNjaWVuY2UgaGFzIHlldCB0byBmdWxseSB1bmRlcnN0YW5kIHRoZSBwbGFjZWJvIGVmZmVjdC4gV2UgZG9udCBrbm93IFdIWSBpdCB3b3Jrcywgd2UgZG9udCBrbm93IEhPVyBpdCB3b3Jrcy4gClRoZSBnYW1lIGlzIHRoZSBzYW1lIGFzIGluIHRoZSBjYXNpbm9zLiBZb3VyIG9iamVjdCBpcyB0byBnZXQgMjEsIG9yIGFzIGNsb3NlIHRvIDIxIGFzIHlvdSBjYW4gd2l0aG91dCBnb2luZyBvdmVyLiBJZiB5b3UgZ2V0IDIxIHlvdSBhdXRvbWF0aWNhbGx5IHdpbi4gClVzZSBFViBhcyBhIHRvb2wgdG8gaGVscCB5b3UgY29tZSB0byB0aGUgcmlnaHQgZGVjaXNpb247IHRoZSBtb3JlIHlvdSB1c2UgaXQsIHRoZSBtb3JlIG5hdHVyYWwgaXQgd2lsbCBzZWVtLiAKSSB3aWxsIGNoYWxrIHRoaXMgb25lIHVwIHRvIG15IGluYWJpbGl0eSB0byBwcm9wZXJseSByZWFkIGhvdyBhIEJpbGwgaXMgbGFpZCBvdXQuCkkgd3JvdGUgYSBudW1iZXIgb2YgUHl0aG9uIHNjcmlwdHMgdG8gcHJvY2VzcyB0aGUgdnVsbnMsIGNyZWF0ZSB0aWNrZXRzIGFuZCBhc3NpZ24gdGhlbSBvdXQuIEl0IHdhc24gMTAwJSBhdXRvbWF0ZWQsIGJ1dCBpdCBoZWxwZWQgbWUgY3V0IGRvd24gdGhlIHRpbWUgc3BlbnQgZHJhbWF0aWNhbGx5LiAKQm90aCBzaWRlcyBmb3VnaHQgdGhlaXIgZGFtbmVkZXN0IGJlc3QsIHdlIHRvZGF5IGtub3cgdGhleSB3ZXJlbiBoZXJlIGZvciBsYW5kLCBwbHVuZGVyLCBvciBtdXJkZXIsIGFuZCBBdXNzaWVzL0tpd2lzIGtub3cgd2UgZGlkbiBmaWdodCBvdXIgZGFtbmVkZXN0IHRvIGtpbGwsIG1haW0sIGNyaXBwbGUgdGhlbSB0byBraWxsIHRoZW0sIHdlIHdlcmUgc2ltcGx5IHByb3RlY3Rpbmcgb3VyIGxhbmQuIEFuZCBJIGRvbiBrbm93IHRoYXQgbXVjaCBhYm91dCB2aWV3cG9pbnQgb2YgYSByZWd1bGFyIEFuemFjIHZvbHVudGVlciBvZiB0aGUgZGF5IHRvIHNheSBvdGhlcndpc2UuIApUaGUgZ2FtZSBnZXRzIHRvdWdoZXIgYW5kIHRvdWdoZXIuLiAKVGhpcyBtZWFsIGlzIHVzdWFsbHkgd2hlcmUgdGhlIG1ham9yaXR5IG9mIG15IGNhcmJzIGFyZS4gMjAgbmV0IGdyYW1zIG9yIHNvLkRpbm5lciBpcyB1c3VhbGx5IGEgbWVhdCBsaWtlIHN0ZWFrIG9yIHBvcmsgb3IgY2hpY2tlbiB3aXRoIGFuIGFzc2xvYWQoYXQgbGVhc3QgOG96KSBvZiByb2FzdGVkIHZlZ2dpZXMgbGlsZSBicnVzc2VsIHNwcm91dHMgY29va2VkIGluIGJ1dHRlciBhbmQgZ2FybGljLCBvciBicm9jb2xsaS5TbmFja3MgYXJlIHVzdWFsbHkgYSBrYWxlLCBzcGluYWNoIGFuZCBwYXJzbGV5IHNtb290aGllIHdpdGggZmxheCBzZWVkcywgY2hpYSBzZWVkcywgd2FsbnV0cyBhbmQgc29tZSBhbWxhIHBvd2Rlci5UaGlzbiB1c3VhbGx5IGhhZCBtZSBwcmV0dHkgaHVuZ3J5IGFsbCBkYXkuIApBIGxpc3Qgb2YgZmlsdGVycyB3aWxsIGFwcGVhciwgc2Nyb2xsIGRvd24gdG8gIlJlc2l6ZSIgYW5kIGNsaWNrIE9LLiBJbiB0aGUgbmV4dCBib3ggcHV0IHdoYXQgeW91IHdhbnQgdGhlIHJlc29sdXRpb24gdG8gYmUuIApUaGUgbGF0ZXN0IGFkZGl0aW9uLCBhIGZlbWFsZSAiTGlnaHQgRnVyeSIgd2hvJ3MgY2FwdHVyZWQgVG9vdGhsZXNzJyBleWUsIGlzIG9uZSBvZiB0aGUgY29vbGVzdCBkcmFnb25zIHlldCwgdHVybmluZyBpbnZpc2libGUgd2l0aCBhIGJ1cnN0IG9mIGZsYW1lcywgYW5kIFRvb3RobGVzcyBoaW1zZWxmIGhhcyBhIGZldyBuZXcgdHJpY2tzIHVwIGhpcyBzbGVldmUuIFRoZSBiYXR0bGUgc2VxdWVuY2VzIGFyZSB3ZWxsIGNob3Jlb2dyYXBoZWQsIGFuZCB0aGUgSGlkZGVuIFdvcmxkIGlzIG5vdGhpbmcgc2hvcnQgb2Ygc3R1bm5pbmcsIGEga2luZCBvZiBwc3ljaGVkZWxpYyB1bmRlcnNlYSBkcmFnb24gbGFuZCB0aGF0IGNvbXBsZXRlbHkgZWxlY3RyaWZpZXMgdGhlIHNjcmVlbi4gClBlb3BsZSB3aG8gc3BvcnQgdGhlIEFjZSBvZiBTcGFkZXMgYXJlLCB3aGV0aGVyIHRoZXkga25vdyBpdCBvciBub3QsIGFubm91bmNpbmcgdGhhdCB0aGV5IHdlbGNvbWUgZGVhdGggYXMgYSBtZWFucyB0byBhIGJldHRlciBleGlzdGVuY2UsIG9yIHNpbXBseSwgdGhhdCB0aGV5IGFyZSBub3QgYWZyYWlkIG9mIGRlYXRoIGFuZCB0aGUgY2hhbmdlcyBpdCB3aWxsIGJyaW5nLiBMZWUgY2FsbGVkIHRoZSBhY2Ugb2Ygc3BhZGVzPwpJdCB3aWxsIGdvIGFyb3VuZC4gCkluIHJlYWxpdHksIHRoYXQgd2hlcmUgdGhlIHRoaW5raW5nIEJFR0lOUy4gCkEgcmVjZW50IGV4YW1wbGUgZnJvbSBDYW5hZGEgaWxsdXN0cmF0ZXMgdGhpcyBwb2ludCB3ZWxsLiAKVGhlIG5vb2RsZXMgYXJlIGEgcmFuZG9tIGJyYW5kIGZyb20gYSBsb2NhbCBDaGluZXNlIHN1cGVybWFya2V0Q2hhc2h1LiBUaGUgQ2hhc2h1IHJlY2lwaWUgaXMgYW1hemluZyBJIGNhbiBhZGQgYSBsaW5rIGlmIGFueW9uZSBpcyBib3RoZXJlZCBpdCBhIEJCQyByZWNpcGllIGZvciBwb3JrIGNob3BzLiAKQ2xpbmUgYW5kIGZhbWlseSB3ZXJlOiBNci4gCkdsb2JhbGl6YXRpb24gYW5kIHRoZSBGcmVuY2ggSG9yc2UgUmFjaW5nIEluZHVzdHJ5Ck11ZWxsZXIncyByZXNwb25zZSwgYWNjb3JkaW5nIHRvIGEgc291cmNlIGZhbWlsaWFyIHdpdGggdGhlIG1hdHRlciwgc3VnZ2VzdGVkIGFkZGluZyBhIGZldyBtb3JlIHF1ZXN0aW9ucyBpbiB3cml0aW5nIGFuZCBvdGhlcnMgYXMgcGFydCBvZiBhIHBvdGVudGlhbCBzaXQgZG93biBpbnRlcnZpZXcuCkdyYW52aWxsZSBTbGF5YmF1Z2gsIFRoZSBSZXYuLCBBJy4nIFN0ZXdhcnQgQmFsICBRdWFycnl2aWxsZTsgTXIuIEFuZCBNcnMuIEhlbnJ5IHRpbW9yZSAgYW5kIE1ycy4gCkhvcGVmdWxseSBhIHVuaXZlcnNpdHkgcHJlc2lkZW50IHdpbGwgc3RhbmQgdXAgc29vbiBhbmQgZGVtYW5kIGFuIGVuZCB0byBkZWJ0IGZvciBkaXBsb21hIHN0YXJ0aW5nIHdpdGggaGlzIG9yIGhlciBvd24gc2FsYXJ5LiAKUGFydGljaXBhbnRzIGFyZSBhbHNvIGludml0ZWQgdG8gdGFrZSBwYXJ0IGluIGFuIEVkaXQgYSB0aG9uIG9mIFdpa2lwZWRpYSBhcnRpY2xlcywgdG8gZW5zdXJlIHRoZSBmZW1hbGUgcGVyc3BlY3RpdmUgaXMgd2VsbCByZXByZXNlbnRlZCBpbiB0aGUgb25saW5lIGVuY3ljbG9wZWRpYS4gRXZlbnRzIHJhbmdlIGluIHByaWNlLCB3aXRoIGFzc2lzdGFuY2UgYXZhaWxhYmxlIGZvciBhbnlvbmUgY29uY2VybmVkIGFib3V0IGNvc3RzLi4gCkFsbGUgYW5kZXJlbiBXYXJlbnplaWNoZW4gb2RlciBVcmhlYmVycmVjaHRlIERyaXR0ZXIgc2luZCBFaWdlbnR1bSBpaHJlciBqZXdlaWxpZ2VuIEluaGFiZXIuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZUFib3V0ICQ1MCBtaWxsaW9uIGlzIGZlZCBpbnRvIHBva2VyIG1hY2hpbmVzIGluIHRoZSBTaGVsbGhhcmJvdXIgcmVnaW9uIGVhY2ggeWVhci4gQ291bmNpbGxvciBQZXRlciBNb3JhbiB0aGlua3MgdGhhdCBpcyBhIG1hc3NpdmUgYW1vdW50IG9mIG1vbmV5IGZvciBvbmx5IGEgcmVsYXRpdmVseSBzbWFsbCBjaXR5LiBTbyBoZSB3YW50cyB0byBjaGFuZ2UgdGhhdCBzdGF0aXN0aWMuIApJIGhhdmUgd29ya2VkIHdpdGggYSBwZXJzb25hbCB0cmFpbmVyIGFuZCB0aG91Z2ggc2hlIHdhcyBsb3ZlbHksIHVuZm9ydHVuYXRlbHkgaGVyIGxhY2sgb2Yga25vd2xlZGdlIG9mIHN1cGVyIG9iZXNlIGJvZGllcyBtZWFudCBzaGUgd291bGQgc29tZXRpbWVzIHRyeSB0byBnZXQgbWUgdG8gZG8gdGhpbmdzIHRoYXQgd2VyZSBwaHlzaWNhbGx5IGltcG9zc2libGUsIGFuZCBoZXIgc3VnZ2VzdGluZyBJIHJ1biBmb3IgSElJVCBsZWZ0IG1lIHdpdGggc2hpbiBzcGxpbnRzIGFuZCBhbiBpbmp1cmVkIGtuZWUuCkonYXZhaXMgbCdpbmdudWl0IGRlIGNyb2lyZSBxdWUgbW9uIHRtb2lnbmFnZSB0YWl0IHV0aWxlLCBmY29uZApQcm9iYWJseSBub3QgYXMgdGhleSBtb3N0IGxpa2VseSBub24gc21va2luZyBidXQgaGF2aW5nIGNhbm5hYmlzIGFzIGFuIGFkdWx0IGlzbiBpbGxlZ2FsIGFsc28gSSBuZXZlciBFVkVSIGhlYXJkIG9mIGFueXdoZXJlIG5lYXIgdGhlIHN0cmljdCBlbmZvcmNlbWVudCBvZiBkcnVnIGFuZCBhbGNvaG9sIHBvbGljaWVzIGFzIGkgbmhhdmUgd2luIEFtZXJpY2FuIHNjaG9vbHMuIE5vdCB0byBtd250aW9uLiBGdWNrIHllYSwgY2FuYWRhISBTb2NpYWxpemVkIGhlYWx0aGNhcmUsIGdvdmVybm1lbnQgc3Vic2lkaWVzIGZvciB0aGUgZGlzYWR2YW50YWdlZCwgbGVnYWwgY2FubmFiaXMsIGFtYXppamduYmVlciwgbWFwbGUgc3lydXAsIHRoZSB0cmFnaWNhbGx5IGhpcCwgc3dvbGxlbiBtZW1iZXIsIEFOTkUgRlVDS0lORyBNVVJSQVkgLCBDQU5BRElBTlMuIApOb3cgSSBmaWdodGluZyBhIHNleGlzdCB3aG8gZGVueWluZyB0byBteSBhcHBlYWwgYmVjYXVzZSB0aGUgc3RhdGUgaXNudCBncmFudGluZyBkaXNhYmlsaXR5IGJlY2F1c2UgSSBjYWxsZWQgdGhlbSBvdXQgb24gdGhlaXIgYnVsbHNoaXQuIERvbnQgZ2l2ZSB1cCBkdWRlLiAKQmVkZm9yZCBHYXpldHRlIE5ld3NwYXBlciBBcmNoaXZlcwpFc3BlY2lhbGx5IHdpdGggZGVueWluZyBpdCBhbmQgdGhlbiB0aGF0IGNyYWNrIGFib3V0IGRvbGxzIGJlaW5nIGZvciBsaXR0bGUgZ2lybHMuIEFuZCBub3JtYWxseSBwZW9wbGUgZG9uIHNpdCBvbiBhIGNvdWNoIGFuZCB3YWl0IHBhdGllbnRseSB3aGVuIHNvbWV0aGluZyBmYWxscyBhY2NpZGVudGFsbHkgYW5kIGJyZWFrcy4gVGhleSBjYWxsIG91dCB3YXJuaW5ncy9leHBsYW5hdGlvbnMgb3IgZ2V0IHVwIHRvIHNlZSBpZiBpdCBjYW4gYmUgcGlja2VkIHVwLmRvbiBrbm93IHRoYXQgaXQgaXMgcG9yY2VsYWluICAgdGhleSBhcmUgZGVmaW5pdGVseSBicmVha2FibGUgYnV0IGFyZSBtb3JlIHN0dXJkeSB0aGFuIHRoZSBhbnRpcXVlIGRvbGwgdGhhdCB3YXMgbXkgZ3JhbmRtYSB6IHByaXplLiAKMTEpIEEgcG9zaXRpdmUgc3RyYWlnaHQgbGVnIHJhaXNlIHRlc3Qgb3IgYSBkZWNyZWFzZWQgQWNoaWxsZXMgcmVmbGV4IGlzIGEgY2hhcmFjdGVyaXN0aWMgZmluZGluZyBhc3NvY2lhdGVkIHdpdGggZGlzYyBoZXJuaWF0aW9uLgpKaW0geWVsbHMgZG93biB0aGF0IGhhbGx3YXksICJJRiBUSEVSRSBBUkUgQU5ZIEdIT1NUUyBIRVJFLCBETyBOT1QgRlVDSyBXSVRIIFVTLiIgVGhpcyBtYWRlIG1lIHJlYWxseSBwaXNzZWQgb2ZmLCBhbmQgSSBhc2tlZCBoaW0gd2hhdCB0aGUgZnVjayBoZSB3YXMgdHJ5aW5nIHRvIGRvIHRvIHVzLiAKV2UgY2FuJ3QgY29udHJvbCB0aGUgd2FsbCBjaGFsa2luZyB3aGljaCBkaXNmaWd1cmVzIG91ciB0b3ducyBhbmQgY2l0aWVzLCBwcm9jbGFpbWluZyBpbnN0YW50IGN1cmVzIGZvciBzdWNoIHVubWVudGlvbmFibGUgbWFsYWRpZXMgYXMgaGFlbW9ycmhvaWRzIGFuZCBzZXh1YWwgaW5hZGVxdWFjeS4gCktlbm55IFJvZ2VycycgcGxhc3RpYyBzdXJnZXJ5IHNlZW1lZCB0byBiZSBhIGRpc2FzdGVyIGZyb20gdGhlIHN0YXJ0LiBIZSB3ZW50IGluIHRvIGhhdmUgc29tZSBvZiB0aGUgYWdpbmcgbG9vayB0YWtlbiBjYXJlIG9mIGFuZCBlbmRlZCB1cCBsb29raW5nIGhvcnJpYmxlLiBUaGlzIGlzIG9uZSBvZiB0aGUgbW9yZSBzb3JlIHNwb3RzIGZvciBSb2dlcnMgYXMgaGUgdGVsbHMgYSBnb29kIG1hbnkgcmVwb3J0ZXJzIHRoYXQgdGhpcyBpcyBub3QgdGhlIHdheSB0aGF0IGhlIGludGVuZGVkIHRvIGxvb2sgYnV0IHRoYXQgaXMgd2hhdCBoZSBnb3QuIApMb2NoaWUgTydCcmllbiwgSmFycm9kIFBpY2tldHQsIENhbGViIE1hcmNoYmFuayBhbmQgQ2FtIFBvbHNvbiBhbGwgZmFjZSBuZXJ2b3VzIHdlZWtzLiAKRm9yZ2l2ZW5lc3MgZG9lc24gbWVhbiB0cnVzdCBvciBpZ25vcmluZyBhbiBpc3N1ZS4gSXQgbWVhbnMgbm90IHVzaW5nIHNvbWV0aGluZyBhcyBhbW1vIGluIGEgZmlnaHQsIG5vdCBjYXN1YWxseSB0YWxraW5nIG9yIGdvc3NpcGluZyBhYm91dCB0aGUgaXNzdWUsIGFuZCBub3QgbGV0dGluZyB5b3Vyc2VsZiBkd2VsbCBvbiB0aGUgaXNzdWUgb3Iga2VlcCB0cmFjayBvZiB3cm9uZ3MuWW91ciB3aWZlIGNsZWFybHkgbmVlZHMgaW5kaXZpZHVhbCBjb3Vuc2VsaW5nIGFuZCBhbmdlciBtYW5hZ2VtZW50IGNvdXJzZXMsIGV2ZW4gbW9yZSB0aGFuIHlvdSBib3RoIG5lZWQgbWFyaXRhbCBjb3Vuc2VsaW5nLiBJIGFsd2F5cyByZWNvbW1lbmQgdGhhdCBwZW9wbGUgY2FuIGdvIHRvIG1hcnRpYWwgY291bnNlbGluZyBldmVuIHdpdGhvdXQgdGhlaXIgc3BvdXNlIGZvciBnb29kIGFkdmljZSBhbmQgY29waW5nIG1ldGhvZHMsIGFuZCB0aGF0IG1heSBoZWxwIHlvdSBzZXQgZ29vZCBib3VuZGFyaWVzLiAKRWRFbUtheSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMSBob3VycyBhZ28KVGhlIHBva2VyIGZhbnMgYW5kIHBsYXllcnMgaGF2ZSBhbHNvIHRhcmdldGVkIHRoZSBwb2tlciBwcm9kdWN0cyBmb3IgdGhlaXIgY2FyZHMgYXMgd2VsbCBhbmQgdGhhdCdzIHdoeSBhbGwgdGhlIHBva2VyIHNob3BzIGFyb3VuZCBhcmUganVzdCBmaWxsZWQgdXAgd2l0aCBwZW9wbGUgYWxsIGFsb25nIHRoZSBkYXkuLiAKU2hlIGNvbXBsZXRlbHkgdHVybmVkIGFnYWluc3QgYW55b25lIHdobyBzYWlkIGNhZWx5bm4gaXMgYSBmdWxsIGh1bWFuIGJlaW5nLCBub3QganVzdCBhIHZpY3RpbSwgYW5kIHNvbWVvbmUgY2FuIGJlIGEgdmljdGltIGFuZCBhIG5vdCBzdGVsbGFyIHBlcnNvbiBhdCB0aGUgc2FtZSB0aW1lLiAKU09VVEggVEFNUEEgV2hpbGUgZW5yb2xsZWQgYXQgUmlkZ2V3b29kIEhpZ2ggU2Nob29sLCBKb2huIFJhY2VuZXIncyBidWRkeSByZWNvZ25pemVkIGhpcyBwb2tlciBwb3RlbnRpYWwgYW5kIHNldCB1cCBSYWNlbmVyIHdpdGggYW4gb25saW5lIHBva2VyIGFjY291bnQuCldoYXQgMjBkcG8gbGluZXMgbG9vayBsaWtlIHdpdGggRk1VLiBIb3BpbmcgdGhpcyBjYWxtcyBzb21lIG5lcnZlcyBmb3IgcGVvcGxlLCBlc3BlY2lhbGx5IHRob3NlIHVzaW5nIGludGVybmV0IGNoZWFwaWVzLiBUb3Agb25lIGlzIGEgRlJFUiwgYW5kIGl0J3MgYSBkeWUgc3RlYWxlci4gCk5vdCBhcyBmYXIgYXMgaGltIGJ1dCBzdGlsbCB0aGVyZSB3ZXJlIHNvbWUgZnVuIHRpbWVzLiBJIGp1c3QgZmlndXJlZCB0aGV5IHdvdWxkIGtlZXAgZ29pbmcgYW5kIHRoZXkgYWJydXB0bHkgc3RvcHBlZC4gSSBkb24gdGFsayBhYm91dCBpdCBiZWNhdXNlIGl0IG5vd2hlcmUgZXhvdGljIGFuZCBzbyBJIHRoaW5rIGl0IG5vdGhpbmcgd29ydGggbWVudGlvbmluZy4gClRoZSB0cmFuc2FjdGlvbiwgdG8gYmUgY29tcGxldGVkIG9uIG9yIGFib3V0IFNlcHRlbWJlciAzMCwgaXMgZXhwZWN0ZWQgdG8gYmUgaW1tZWRpYXRlbHkgYWNjcmV0aXZlIHRvIGVhcm5pbmdzIGFuZCBwcm92aWRlIHN0cm9uZyBjYXNoIGZsb3cgZnJvbSBvcGVyYXRpb25zIGZvciBBbWF5YS4KSSBncmV3IHVwIGRpcnQgcG9vci4gR3JvdyBvdXIgb3duIGZvb2QsIHNldyBvdXIgb3duIGNsb3RoZXMsIG5vIGNhciBvciBwaG9uZSBwb29yLiAKQWQgQWdlIGNhdWdodCB1cCB3aXRoIEhhdGNoIGZvciBhIHF1aWNrIHZpZGVvIGNoYXQgYW5kIGEgZ2FtZSBkZXNpZ25lZCB0byBnZXQgZnJhbmssIG9mZiB0aGUgY3VmZiBhbnN3ZXJzIHRvIHNvbWUgb2YgdGhlIGJpZ2dlciBxdWVzdGlvbnMgdG9kYXkgKHBsdXMgb25lIG9yIHR3byBzb2Z0YmFsbHMpLiBXYXRjaCBiZWxvdyB0byBzZWUgd2hhdCBzaGUgaGFkIHRvIHNheSBvbiB0aGUgZXZvbHV0aW9uIG9mIHRoZSBtb2Rlcm4gQ01PLiAgIEJyaWFuIEJyYWlrZXJBTkEgaGFzIHJ1biBpdHMgIk1hc3RlcnMgb2YgTWFya2V0aW5nIiBjb25mZXJlbmNlIGluIHRoZSBzaGFkb3cgb2YgRGlzbmV5IFdvcmxkIGZvciB5ZWFycywgYnV0IERpc25leSBoYXMgdHlwaWNhbGx5IG5vdCBoYWQgbXVjaCBvZiBhIHByZXNlbmNlIGhlcmUgYXQgdGhlIE9ybGFuZG8gZXZlbnQuIFRoYXQgY2hhbmdlZCB0aGlzIHllYXIsIGhvd2V2ZXIuIERpc25leSBzcG9uc29yZWQgRnJpZGF5IG1vcm5pbmcncyBjb2ZmZWUgYnJlYWsgYW5kIHBsdWdnZWQgaXQgd2l0aCBhIGN1c3RvbSB2aWRlbyB0aGF0IG1hZGUgdXNlIG9mIERpc25leSBvd25lZCBBQkMgYW5kIEVTUE4gcGVyc29uYWxpdGllcywgaW5jbHVkaW5nICJHb29kIE1vcm5pbmcgQW1lcmljYSIgaG9zdHMgR2VvcmdlIFN0ZXBoYW5vcG91bG9zLCBSb2JpbiBSb2JlcnRzIGFuZCBNaWNoYWVsIFN0cmFoYW4uIEl0IGVuZGVkIHdpdGggRVNQTidzIFNhZ2UgU3RlZWxlIGludGVydmlld2luZyBBTkEgQ0VPIEJvYiBMaW9kaWNlIGFzIGlmIGhlIHdhcyBhIHN0YXIgYXRobGV0ZS4gIkFzIHlvdSBnZXQgcmVhZHkgd2FsayBvZmYgdGhlIGZpZWxkLCB3aGF0IGFyZSB5b3UgcGxhbm5pbmcgbmV4dD8iCjQuIFZpYnJhdGlvbiAgIFRoaXMgaXMgdGhlIHJoeXRobWljIGFuZCByYXBpZCBzaGFraW5nIG9mIHRoZSBib2R5LiBHcmVhdCBmb3IgdGhlIG5lY2sgYW5kIHNob3VsZGVycy4gCkNvbnRyYWN0b3I6ICJIZXksIHRoZSBpbnNwZWN0b3IgZmFpbGVkIG15IHdvcmsgYmVjYXVzZSBJIGRpZG4gY29uc3RydWN0IHRoaXMgcGVyIHlvdXIgZGV0YWlsLiBDYW4geW91IHJlbW92ZSB0aGF0IGRldGFpbCBmcm9tIHRoZSBwbGFuPyBUaGFua3MuIgoxMCwwMDAgYm91bnR5IGZvciBrbm9ja2luZyBvdXQgYW4gQWRkYTUyIExpdmUgUHJvIGluIHRoZSBLbm9ja291dCAyIExhYyBFdmVudCBvbiBPY3RvYmVyIDExLi4gCkhlIHdpbGwgbWFrZSB5b3UgZmVlbCBpbnNhbmUuIAo3IDY0IGJpdCAvIFdpbmRvd3MgOCAvIFdpbmRvd3MgOCA2NCBiaXQgLyBXaW5kb3dzIDEwIC8gV2luZG93cyAxMCA2NCBiaXQuIEFwciAyMCwgMjAxMyAgIDIgbWluICAgVXBsb2FkZWQgYnkgbW9pIGZhbmkgY3l0cnVzIHdpYWRla01pY3Jvc29mdCBPZmZpY2UgV29yZCAyMDEwIEZ1bGwgVmVyc2lvbiBGUkVFIERPV05MT0FEIExJTksgLiAKV29ybGQncyBGYXN0ZXN0IFN1cGVyY2FyCk9idmlvdXNseSwgZWFjaCBvZiB0aGVtIHdpbGwgY29tcGxldGUgdGhlIHN0YW5kYXJkIHN1aXRzIG9mIGEgZGVjay4gVGhlIGZpZnRoIGNhcmQgb3Iga2lja2VyIGlzIGV4cGVjdGVkIHRvIGJlIGJpZ2dlci4gCkkgZG91YnQgdGhleSB3b3VsZCBzZWxsIG1lIHRoZSBIb3VzZSBvZiBMdWRpbmd0b24gdG8gbWFrZSBpbnRvIGEgcmVzb3J0IHNwYSB0aG91Z2guIFRoYXQgaXMgd2hhdCBJIHdvdWxkIGRvIHdpdGggdGhhdCBob3RlbCBpbnN0ZWFkIG9mIHR1cm5pbmcgaXQgaW50byBsb3cgaW5jb21lIGFwYXJ0bWVudHMuIEVzY2FuYWJhIG5lZWRzIHRvIGdldCBzb21lIHRvdXJpc3RzIGluIGFuZCBnZXQgc29tZSBtb25leSBmbG93aW5nLi4gCkFmdGVyIGFsbCwgc21hbGxlciBmaWdodGVycyByb3V0aW5lbHkgYmVhdCBsYXJnZXIgb25lcyAgaGVsbCwgbW9zdCBvZiB0aGUgZGl2aXNpb24gY2hhbXBzIGFyZW4gdGhlIGJpZ2dlc3QgZ3V5IGluIHNhaWQgZGl2aXNpb24uIFNpemUgaXMganVzdCBhIGZhY2V0IGluIHRoZSBmaWdodCBnYW1lLm1lbnRhbGhhcnZlc3RlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb0Fic29sdXRlbHkgY29ycmVjdC4gClRvbSBDb2NocmFuZSByZWxlYXNlcyBoaXMgcmV3b3JrZWQgdmVyc2lvbiBvZiAnQmlnIExlYWd1ZScKU2llYmVuIFdvY2hlbiBpbiBDaGluYSB6dSB2ZXJicmluZ2VuLCBoZWkgc2ljaCBqZWRlbiBUYWcsIGplZGUgU3R1bmRlIHVuZCBqZWRlIE1pbnV0ZSBhdSBzZWluZXIgS29tZm9ydHpvbmUgYXVmenVoYWx0ZW4uIEFsbGVzIGJpc2hlciBHZWxlcm50ZSB1bmQgRXJmYWhyZW5lIG11c3MgaW4gRnJhZ2UgZ2VzdGVsbHQgd2VyZGVuLCBkaWUgV2VsdCBuZXUgd2Focmdlbm9tbWVuIHVuZCBlcmZhaHJlbiB3ZXJkZW4uIApZb3UncmUgZmFtaWxpYXIgd2l0aCBzdW5idXJuLCBzb21ldGltZXMgZGVzcGl0ZSB5b3VyIGJlc3Qgc3Vuc2NyZWVuIGFwcGx5aW5nIGVmZm9ydHMuIEJ1dCBmb3Igc29tZSBwZW9wbGUsIGV4cG9zdXJlIHRvIHN1bmxpZ2h0IGNhbiBjYXVzZSBhIHJlZCByYXNoIGFuZCBibG90Y2h5LCBzY2FseSBza2luICAgdGhpcyBpcyBjYWxsZWQgcGhvdG9zZW5zaXRpdml0eSwgYW5kIGlzIGNhbiBiZSBjYXVzZWQgYnkgYW4gaW1tdW5vbG9naWNhbCByZXNwb25zZSAoaXQncyBhIHN1biBhbGxlcmd5KS4gCkl0IGlzIGhhcmRseSB0aGF0LCBhbmQgcmVwcmVzZW50cyBhIGNvbWluZyBncmVhdCBldmlsLi4gClNvIGNvbnRhY3QgbWUgZm9yIGEgZ3JlYXQsIHNwZWNpYWwgc2Vuc3VhbCBtYXNzYWdlLi4gClRoZXJlIGlzIGEgQmxhY2sgQm9vayBpbiB0aGUgZ2FtaW5nIGluZHVzdHJ5LCB5b3UgZ2V0IGludG8gdGhhdCBnb29kIGx1Y2sgZ2V0dGluZyBuZWFyIGFueSBiaWcgZ2FtaW5nIGZsb29yLi4gCkFuZCBiZWZvcmUgdGhlbSwgSmFwYW4uIEluIHRoZSBBbWVyaWNhcyB5b3UgaGFkIENoaWxlLCBVcnVndWF5LCBBcmdlbnRpbmEsIGFuZCBQYW5hbWEsIGFsbCBoYXZlIG1hZGUgbGVhcHMgYW5kIGJvdW5kcyBpbiBkZXZlbG9wbWVudCBhbmQgYXJlIHF1aXRlIHBvd2VyZnVsIHJlbGF0aXZlIHRvIHRoZWlyIHNpemUuIFdlIGFyZSBzZWVpbmcgVmlldG5hbSBmaW5kIGEgbG90IG9mIHN1Y2Nlc3MgY29tcGFyYWJsZSB0byBDaGluYSB0aGUgcGFzdCwgeW91IHNlZW4gQnJhemlsIGFuZCBTb3V0aCBBZnJpY2EgdW5kZXJnbyByYXBpZCBpbmR1c3RyaWFsaXphdGlvbiBiZWZvcmUgaGl0dGluZyB0aGUgbWlkZGxlIGluY29tZSB0cmFwLi4gCkkgc2F5IHRvIGhlciB0aGF0IEkgc2VlIHNoZSB0YWtlcyBoZXIgcG9vbCBzZXJpb3VzbHkgYW5kIGhhbGYgam9raW5nbHkgdGVsbCBoZXIgdGhhdCBJIG5vdCB0aGF0IGdvb2QsIGJ1dCBJIGNvbXBldGl0aXZlLiAKU29tZSBtZW4gZGVzaXJlIGFuZCBleHBlY3QgdmlyZ2luaXR5LiBFdmVuIGlmIHRoZXkgYXJlIHdpbGxpbmcgdG8gZW50ZXIgYSBtb25vZ29tb3VzLCBsaWZlIGxvbmcgcmVsYXRpb25zaGlwIHdpdGggYSB3b21hbiwgdGhlIGxlc3Mgc2V4IHBhcnRuZXJzIHNoZSBoYXMgaGFkLCB0aGUgYmV0dGVyLiBCdXQgbGV0IHNheSBzaGUgb25seSBoYWQgcHJldmlvdXMgc2V4IHdpdGgganVzdCBPTkUgZ3V5LiBTb3VuZHMgb2sgdG8gbW9zdCwgYnV0IHdoYXQgaWYgdGhhdCBvbmUgZ3V5IGhhZCBhIG5pbmUsIHRlbiwgZWxldmVuIG9yIGV2ZW4gYSB0d2VsdmUgaW5jaCBtYXNzaXZlIGRvbmcgKGxpa2Ugc28gbWFueSBibGFjayBndXlzIGRvKT8gQWZ0ZXIgYmVpbmcgdGhvcm91Z2hseSBzdHJldGNoZWQgYW5kIGZpbGxlZCBieSBzdWNoIGEgbWFuZGluZ28gbWFuaG9vZCAgZG8geW91IHJlYWxseSB0aGluayBzaGUgZ29pbmcgdG8gYmUgaW1wcmVzc2VkIGJ5IHlvdXIgbGl0dGxlIHNpeCBpbmNoIHdlZW5lcj8gSSBkb24gdGhpbmsgc28uIE5vdGU6IGxpbmsgTlNGVy4KTXkgZGVwcmVzc2lvbiB3YXMgdGhlIG5vdGhpbmduZXNzIHNvcnQuIApJIGhhdmUgbm8gaWRlYSwgdG8gYmUgaG9uZXN0ISBCaWcgb25lcyB0aGF0IGRvbiBnZXQgdGhlIHJlYWxseSBwcmV0dHkgTGl0dGxlIFJhZ2dlZCBCbG9zc29tIHR5cGUgZmxvd2Vycy4gSSBqdXN0IGxvb2tlZCB1cCBhbGwgdGhlIHRyZWUgcHJvdGVjdGlvbiBvcmRlcnMgaW4gbXkgY291bmNpbCBhcmVhIGFuZCB0aGV5IGp1c3Qgc2F5IGV1Y2FseXB0dXMgd2l0aG91dCBvdGhlciBkZXRhaWwsIHNvcnJ5LiAKSWYgeW91IGZpbmQgeW91cnNlbGYgaHVuZ3J5IGFyb3VuZCB0ZW4gdHJ5IG1vcmUganVpY2Ugb3IgYSBtb3JlIGNhbG9yaWUgZGVuc2UganVpY2UuLiAKV2l0aCB0aGUgdmFzdCBhbW91bnQgb2YgY29ycmVzcG9uZGVuY2UgdGhhdCBEaWNrZW5zIGJ1cm5lZCBzZWVtaW5nbHkgb24gYSB3aGltIGFuZCB3aXRob3V0IGNvbnN1bHRpbmcgaGlzIGZyaWVuZCBhbmQgYmlvZ3JhcGhlciBGb3JzdGVyIGluIDE4NjAsIGFsbCBvZiBoaXMgd29yayBvbiB0aGUgVGVsZWdyYXBoaWMgQWlkaW5nIElkZW50aWZpZXIsIGluY2x1ZGluZyB0aGUgcHJvdG90eXBlcyBvZiB0aGUgYW5hbHl6ZXIsIHdlcmUgYnVybmVkIGJ5IERpY2tlbnMgaW4gdGhlIHN1bW1lciBvZiAxODY5LiAKSXQncyBoYXJkIGZvciBtb3N0IHBlb3BsZSB0byBjb21wcmVoZW5kIHRoYXQgSSwgb3IgYW55IHdvbWFuLCBjb3VsZCBub3Qgd2FudCB0byBiZSBhIG1vdGhlci4gClRoZSBwZXJzb24geW91IG1lZXQgb24gdGhlIHVwc3dpbmcgd2hlbiBldmVyeXRoaW5nIGlzIGRhbmR5IG1heSBub3QgcmVhbGl6ZSBhIGRpc3R1cmJpbmdseSByb3VnaCBkb3duc3dpbmcgaXMgYWx3YXlzIGp1c3QgYXJvdW5kIGFuIHVuYW50aWNpcGF0ZWQgY29ybmVyLiAKSSA5OSUgc3VyZSBtZSBhbmQgbXkgb3duIHJvb21tYXRlcyBhcmUgdGhvc2UgcGVvcGxlIGluIG91ciBuZWlnaGJvcmhvb2QuIE9uZSBvZiB0aGVtIHJpZGVzIGEgdW5pY3ljbGUgdG8gd29yayBldmVyeSBkYXkgYW5kIHByYWN0aWNlcyBqdWdnbGluZyBvdXRkb29ycy4gVGhlIG90aGVycyBhcmUgd29ya2luZyBvbiBtb3RvcmN5Y2xlcyBpbiBvdXIgeWFyZCBhdCBhbGwgaG91cnMgb2YgdGhlIGRheS4gCk5ld3QgU2NhbWFuZGVyIChIdWZmbGVwdWZmKSBjcmVhdGVkIHRoZSBXZXJld29sZiBSZWdpc3Rlci4KVGhlIHBlb3BsZSB3aG8gYXJlIHNoeSBhbmQgYXJlIGludGltaWRhdGVkIGJ5IHRoZXNlIHBva2VyIHJvb21zIGZpbmQgc29sYWNlIGFuZCBjb21mb3J0IGluIHBsYXlpbmcgb25saW5lIHBva2VyIGluIHRoZSBjb21mb3J0cyBvZiB0aGVpciBob21lLiBNb3Jlb3ZlciwgdGhleSBhcmUgY2hlYXBlciwgeW91IGRvbid0IGhhdmUgdG8gZHJlc3MgdXAsIHNwZW5kIG9uIGdhcyBhbmQgd2FzdGUgdHJhdmVsIHRpbWUganVzdCB0byBwbGF5IHBva2VyIGFuZCBubyB0aXBwaW5nIGRlYWxlcnMgdG9vIQpGYXIgYXMgdGhlIHdyaXRpbmcgZm9jdXMgZm9yIHRoZSBzaXRlIGlzIGNvbmNlcm5lZCwgSSBjb3VsZCBub3QgYWdyZWUgbW9yZSB3aXRoIHNvbWUgb2YgdGhlIGNvbW1lbnRzIG1hZGUgYW5kIHRoZSByZXF1aXJlbWVudHMgbGlzdCBpcyB2ZXJ5IG11Y2ggYmFzZWQgb24gd2hhdCB3ZSBjYW4gZG8gdG8gbWFrZSB3cml0aW5nIGVhc2llci4gVGhlIEd1aWRlIGlzIHdoYXQgd2Ugc2V0IG91dCB0byBjcmVhdGUuIEkgZG9uJ3Qgc2VlIGFueSBkaXNhZ3JlZW1lbnQgYWJvdXQgdGhhdCByZWFsbHkuIApVcCB0byA3NSUgb2ZmIHRoZSBCaWdnZXJQb2NrZXRzIGJvb2sgc3RvcmUuIE5vIGpva2UhIEdldCByZWFkeSB0byB0YWtlIHlvdXIgcmVhbCBlc3RhdGUgaW52ZXN0aW5nIHVwIGEgbm90Y2ggYnkgc2F2aW5nIHNlcmlvdXMgbW9uZXkuLiAKSnVzdCB3aXRoZHJhdyBmcm9tIGEgYmFuayB3aGVuIHlvdSBnZXQgaGVyZSBvciB3aXJlIGl0IHRvIHRoZSBjYXNpbm8gYWhlYWQgb2YgdGltZS4gSSBkb24gY2FycnkgbGFyZ2Ugc3VtcyBvZiBjYXNoIG92ZXIgJDVrIGluIG15IHBvY2tldC4gClRoYXQgaXMgVmVyeSBoYXJkIGZvciBtZSB0byBiZWxpZXZlISEgRnJvbSBteSBvYnNlcnZhdGlvbnMgYW5kIGZyb20gdGhlIGFydGljbGVzIEkgaGF2ZSBiZWVuIHJlYWRpbmcsIHRoZXJlIFdpbGwgY29tZSBhIHRpbWUgaW4gdGhlIG5vdCBzbyBkaXN0YW50IGZ1dHVyZSB3aGVuIHdoaXRlIHBlb3BsZSB3aWxsIGJlIGEgTWlub3JpdHkuIExldCdzIGZhY2UgaXQsIHRoZSBzY2hvb2xzIGFyZSBwYWNrZWQgRnVsbCBvZiBibGFjayBhbmQgaGlzcGFuaWMga2lkcywgYXQgbGVhc3QgaW4gdGhlIG1ldHJvIGFyZWEgSSBsaXZlIGluISBJdCdzIHZlcnkgUmFyZSB0byBzZWUgd2hpdGUgY2hpbGRyZW4gaW4gYSBzY2hvb2wgYW55d2hlcmUgTmVhciBvdXIgbWV0cm8gYXJlYSEuIApBIGdvb2QgZXhhbXBsZSBpcyB0aGUgd29yZCBkZW1va3JhdGlhLCB3aGljaCBvYnZpb3NseSBtZWFucyBkZW1vY3JhY3kuIEluIG1vc3QgbGFuZ3VhZ2VzLCBpbmNsdWRpbmcgbW9zdCBvZiBhdXhpbGlhcnkgbGFuZ3VhZ2VzLCBpdCBpcyBhIGxvYW4gd29yZCBmcm9tIEFuY2llbnQgR3JlZWsgIChkbW9rcmF0YSksIGZyb20gIChkbW9zLCAiY29tbW9uIHBlb3BsZSIpICsgIChrcnRvcywgInJ1bGUiKS4uIApCaWVuIHF1ZSBsZXMgZWZmZXRzIGR1IG1hc3NhZ2Ugc29pZW50IGltbWRpYXRzLCBwbHVzaWV1cnMgZXhwcmllbmNlcyBvbnQgZG1vbnRyIHF1J2FwcnMgc2l4IHNlbWFpbmVzIGRlIHByYXRpcXVlIHJndWxpcmUgbGVzIGVuZmFudHMgam91ZW50IG1pZXV4IGVuc2VtYmxlIGV0IHF1ZSBsZXMgZW5mYW50cyBxdWkgdGFpZW50IGV4Y2x1cyBhdXBhcmF2YW50IHNvbnQgcGx1cyBzb3V2ZW50IHF1J2F1dHJlbWVudCBhZG1pcyBkZSBub3V2ZWF1IGRhbnMgbGUgZ3JvdXBlLiBVbmUgZm9pcyBxdWUgbGVzIGVuZmFudHMgY29tbWVuY2VudCAgc2UgdG91Y2hlciBlbnRyZSBldXgsIGxlcyBiYXJyaXJlcyB0b21iZW50IGV0IGxlcyByYXBwb3J0cyBhbWljYXV4IHNvbnQgZmFjaWxpdHMuClVuZm9ydHVuYXRlbHksIGF2b2lkaW5nIGltbXVuaXR5IGJvb3N0ZXJzIGlzIHJlYWxseSB0aGUgb25seSB0aGluZyB0aGF0IGNhbiBzYXZlIHRoZSBwZW9wbGUgd2hvIGFyZSBzdXNjZXB0aWJsZSB0byBjb2xkcywgb3RoZXIgdGhhbiB0ZWxsaW5nIHRoZW0gdG8gdHJ5IHRvIGF2b2lkIGFsbCAyMDAgb2YgdGhlIHZpcnVzZXMgdGhhdCBvZmZpY2Ugd29ya2VycyBhbmQgc2Nob29sY2hpbGRyZW4gYXJlIGJhc2ljYWxseSBzdGV3aW5nIGluIGR1cmluZyB0aGUgd2ludGVyIG1vbnRocy4gSWYgeW91IGRvbid0IHdhbnQgdG8gd2FsayBhcm91bmQgaW4gYSBoYXptYXQgc3VpdCwgeW91ciBvbmx5IG90aGVyIG9wdGlvbiBpcyB0byBnZXQgc2ljayAyMDAgdGltZXMuIEp1c3QgbGlrZSB3aXRoIGNoaWNrZW5wb3gsIGV2ZXJ5IHRpbWUgeW91ciBib2R5IGdldHMgYSBjb2xkLCBpdCBjb29rcyB1cCBhIHNwZWNpYWxseSBkZXNpZ25lZCBkZWZlbnNlIGZvciB0aGUgbmV4dCB0aW1lIGl0IGludmFkZXMuIApJIG1ha2Ugc3VyZSB0aGV5IGRvbid0IHNtb3RoZXIgaGVyLCBhbmQgSSBjYWxsIHRoZW0gb3V0IG9uIHdlaXJkIGJlaGF2aW9yIGluIGZyb250IG9mIGV2ZXJ5b25lLiBTRDEwIGhhcyBkYWdnZXJzIGZvciBleWVzIGFuZCBoYXMgbm8gcHJvYmxlbSB0ZWxsaW5nIHBlb3BsZSBubywgc28gSSBqdXN0IHNpdCBiYWNrIGFuZCBlbmpveSB0aGUgc25hcmsgd2l0aCB0aGF0IG9uZS4gSSBsaWtlIHRvIHRoaW5rIHNoZSBnb3QgaXQgZnJvbSBtZS4gCkkgZG9uIGRvdWJ0IHRoYXQgdGhleSB3b3VsZCBoYXZlIG5vIHRyb3VibGUgYXQgYWxsIHJlY29nbmlzaW5nIHNvbWVvbmUgZnJvbSBCZXJsaW4sIENvbG9nbmUsIFN3YWJpYSBvciBTaWxlc2lhLgpLYXRpZXN0eWxlOTQgICAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVGhlIHNvdW5kcywgb2ggbXkgZnVjayB0aGUgc291bmRzLCB0aGV5IGJlYXV0aWZ1bC4gCkFib3V0IGEgbW9udGggbGF0ZXIsIHNoZSBmaWxlZCBhIHBvbGljZSByZXBvcnQuIEh1ZWhuIHdhcyBpbnRlcnZpZXdlZCBieSBwb2xpY2UgYW5kIHNhaWQgYW55IHBoeXNpY2FsIGNvbnRhY3Qgd2l0aCBoZXIgd2FzIHBhcnQgb2YgaGVyIG1hc3NhZ2UgdHJlYXRtZW50LCB0aGUgZG9jdW1lbnQgc2F5cy4KQW5kIGFsc28gd2h5IEkgdGhvdWdodCB0aGlzIGNvbW1lbnQgb2YgeW91cnMgd2FzIGEgd2VpcmQgZXhwbG9zaW9uLiAKSXQgYmV0dGVyIGFmdGVyIHlvdSBkZXZlbG9wIGEgc3Ryb25nIGluc3RpbmN0IHRvIG5ldmVyLCBmb3IgYW55IHJlYXNvbiwgdG91Y2ggYW55IHBhcnQgb2YgeW91ciBvd24gZmFjZSB3aXRob3V0IGZpcnN0IHNjcnViYmluZyBpbiBsaWtlIGEgc3VyZ2Vvbi4gCkxlIHBhY3RlIGRlIGwnb3Bwb3NpdGlvbiBtdW5pY2lwYWxlIExSL1VESSBNT0RFTSBhIGNsYWlyZW1lbnQgdm9sIGVuIGNsYXRzIGx1aSBhdXNzaSBhdmVjIGxlIHJhbGxpZW1lbnQgZGUgbCdVREkgTU9ERU0gIExSRU0gZXQgbGEgc2Npc3Npb24gYXUgc2VpbiBkZSBMUiBlbnRyZSBsYSBicmFuY2hlICBjb25zZXJ2YXRyaWNlICwgc291dGllbiBkZSBMYXVyZW50IFdhdXF1aWV6LCBldCBsYSBicmFuY2hlICBwcm9ncmVzc2lzdGUgLCBlbW1lbmUgIFBhcmlzIHBhciBQaWVycmUgWXZlcyBCb3VybmF6ZWwuIApUaGUgcG9pbnQgaXMgdGhhdCB0aGUgYnVycWEgYW5kIGJvb2Igam9icyBhbmQgQmxhaG5pa3MgYXJlIGFsbCBzeW1ib2xpYyBzaXRlcyBvZiBnZW5kZXIgb3BwcmVzc2lvbiBhbmQgdGhlIHBoeXNpY2FsIG1hbmlmZXN0YXRpb24gb2YgcGF0cmlhcmNoeS4gQXJlIGFsc28gc2l0ZXMgb2Ygd29tZW4gcG93ZXIgIHRoZSBwb3dlciB0byBzZWR1Y2UgdGhlIHByZXNpZGVudCBvZiBGcmFuY2Ugb3IgdGhlIHBvd2VyIHRvIHNlZHVjZSBhIHBsYXN0aWMgc3VyZ2VvbiBpbiBQYXJpcyBvciBUZWhyYW4sIG5vdCB0byBtZW50aW9uIHRoZSBwb3dlciB0byBnYWluIHBvbGl0aWNhbCBwb3dlciwgZm9yIGluc3RhbmNlLiAKQ3JlZGl0OiBDb3VydGVzeSBvZiBQYXRoIEludGVyYWN0aXZlCkkgZmVlbCB0aGF0IG15IHBhc3QgaGFzIGJyb3VnaHQgbWUgdG8gbXkga25lZXMgYW5kIGhhcyBtYWRlIG1lIGEgYmV0dGVyIHdvbWFuIHRvZGF5IG9ubHkgdGhyb3VnaCBwcmF5ZXIgYW5kIGZvcmdpdmVuZXNzLiAKR2V0cyByaWQgb2YgYWxsIHRoZSBoYXJzaCBsaXBpZHMgYW5kIGNobG9yb3BoeWxsLCBzZXBhcmF0ZXMgdGhlIHRlcnBlbmVzIChmbGF2b3IgYW5kIGFyb21hKSwgYW5kIGNhbiBiZSBwdXQgaW4gYSB2YXBlIHBlbiBsaWtlIHJlZ3VsYXIgb2lsLiBJdCBjcmF6eSBhd2Vzb21lLiBUaGV5IGhhdmUgc29tZSBiYW5nIHVwIHN0dWZmIGluIENvbG9yYWRvIGZyb20gSGVhZCBvZiBIb25leSEuIApUb3BpY3MgTVAzIENlcmFtYWggVGVudGFuZyBLZW1hdGlhbi4gClBva2VyIEdhbWUgVmFyaWF0aW9ucwpJIHdhc250IHNldHRpbmcgb3V0IHRvIGFyZ3VlIGFib3V0IHRlYWNoaW5nIHdhZ2VzIGFuZCBpZiB0aGV5IHdlcmUgZmFpciBvciBub3QuIEkgZGlkbiBleHByZXNzIG15IG9waW5pb24gb24gdGhhdCBvbmUgd2F5IG9yIHRoZSBvdGhlci4gTXkgaW50aWFsIHJlc3BvbnNlIHdhcyBiZWNhdXNlIGkgaW50ZXJwcmV0ZWQgT1AgYXMgc2F5aW5nIHRlYWNoZXJzIGluIG90aGVyIGNvdW50cmllcyBtYWtlIG1vcmUgbW9uZXkgdGhhbiB0aGUgVVMuIApJbiBtYW55IHBva2VyIHN0b3JlcyBvbmxpbmUsIHlvdSB3aWxsIGdldCB0aGUgcmV2aWV3cyBlbnRlcmVkIGJ5IHRoZSB1c2VycyB0aGVtc2VsdmVzLiBUaGVpciBwb2ludCBvZiB2aWV3cyBtaWdodCBjb2luY2lkZSB3aXRoIHlvdXJzLiBJZiB5b3UgYXJlIGZlZWxpbmcgdGhhdCB5b3UgZG9uJ3Qga25vdyB3aGljaCBvbmUgdCBvIGJ1eSwgeW91IHNob3VsZCBhdm9pZCBiZWluZyBiaWFzZWQgd2l0aCB0aGUgYWR2ZXJ0aXNlbWVudHMgYW5kIHJlYWQgdGhlIHJldmlld3Mgb3V0LiBPbmNlIHlvdSBoYXZlIG1hZGUgeW91ciBwbGFuIGFuZCB5b3UgaGF2ZSBkZWNpZGVkIHRvIHBpY2sgb25lIHVwLCB5b3UgY2FuIHBheSBhIHZpc2l0IHRvIHRoZSBsb2NhbCBzdG9yZS4gSWYgeW91IGFyZSBjb25zY2lvdXMgYWJvdXQgeW91ciBidWRnZXQsIHlvdSBzaG91bGQgdGFrZSBjYXJlIG9mIGEgY29tcGxldGUgc3R1ZHkgdGhyb3VnaCB2aXNpdGluZyB0aGUgb25saW5lIHN0b3Jlcy4KU2hpdHR5IHNpdHVhdGlvbnMgbGlrZSB0aGVzZSBmb3JjZSB5b3UgdG8gZ3JvdyB1cCBxdWlja2x5LCBhbmQgZXZlcnlvbmUgZGVhbHMgd2l0aCBncmllZiBkaWZmZXJlbnRseS4gCkkgd2FzIGVhcm5pbmcgcGxlbnR5IGJ1dCBzcGVuZGluZyBwbGVudHkgdG9vIHRvIHRyeSBhbmQgbWl0aWdhdGUgdGhlIG1pc2VyeSBvZiBkb2luZyBzb21ldGhpbmcgMzkgaG91cnMgcGVyIHdlZWsgdGhhdCBJIGhhZCB6ZXJvIHBhc3Npb24gZm9yLkkgbm90IHN1cmUgSSBhY3R1YWxseSBnaXZpbmcgYW55IGFkdmljZSBoZXJlLiBKdXN0IHNoYXJpbmcgYSBzbWFsbCBwYXJ0IG9mIG15IHN0b3J5LkkgdGhpbmsgaGF2aW5nIGEgZ29hbCBvZiB1c2luZyBwb2tlciBhcyBhIHNpZGUgaW5jb21lIHRvIHN1cHBsZW1lbnQgeW91ciBtYWluIGluY29tZSBhZnRlciBnb2luZyBwYXJ0IHRpbWUsIG9yIHRha2luZyBhIGxvd2VyIHBhaWQgam9iIHlvdSB3aWxsIGVuam95IGlzIGFuIGFjaGlldmFibGUgZ29hbCBmb3IgbWFueSByZWNyZWF0aW9uYWwgcGxheWVycy5CZWZvcmUgeW91IG1ha2UgYW55IGlycmV2ZXJzaWJsZSBkZWNpc2lvbnMgdGhvdWdoLCBiZSBzdXJlIHRvIGhhdmUgYSBnb29kIGxpZmVyb2xsIHNlcGFyYXRlIGZyb20gYSBnb29kIHBva2VyIGJhbmtyb2xsLiBQbGF5aW5nIHdpdGhvdXQgZmluYW5jaWFsIHNlY3VyaXR5IGlzIHZlcnkgdG91Z2guIApPcmlnaW5hbGx5LCB0aGUgY2Fub25pemF0aW9uIHdhcyBleHBlY3RlZCB0byBoYXZlIHRha2VuIHBsYWNlIERlYy4gCkR1ZGVzIGxlZ2l0aW1hdGVseSBoYXJkIHJpZ2h0IGlkZW9sb2dpY2FsbHkuIApEZWZpbml0ZWx5IHRoaXMuIFRoZXkgZG9uIGNhcmUgdG8gaW52ZXN0IG1vcmUgcmVzb3VyY2VzIGludG8geW91ciBzcGVjaWZpYyBhY2NvdW50IHdoZW4gTU8gYXJlIGludm9sdmVkLiBBbmQgbGV0IGJlIGhvbmVzdCwgbW9zdCB3aG8gdXNlIEFsbGlhbnQgZm9yIE1PIGFyZSBtb3ZpbmcgdGhvdXNhbmRzIGEgd2VlayBhbmQgcHJvYmFibHkgbm90IG1haW50YWluaW5nIGEgaGlnaCBiYWxhbmNlLiAKSXQgaXMgYSBicmFuZCBuZXcgSVAuIApJIGNvbmZpZGVudCB3ZSB3b24gc2VlIGFueSBDT0EgZGVjaXNpb24gYW55dGltZSBpbiB0aGUgbmV4dCB5ZWFyLCBubyBtYXR0ZXIgaG93IHF1aWNrbHkgdGhlIHByb2NlZWRpbmdzIGluIHRoZSBjdXJyZW50IHJlbWFuZCBnby4gQW5kIG1vc3QgbGlrZWx5IG5vdCBmb3IgYSBsb25nIHRpbWUgYmV5b25kIGEgeWVhci4gQ3VycmVudCBwcm9jZWVkaW5ncyBpbiB0aGUgdHJpYWwgY291cnQgd2lsbCB0YWtlIG1vbnRocy4gCk5vdGUgdGhhdCBpZiB0aGVyZSBhcmUgbm90IGF0IGxlYXN0IHRocmVlIGNvbW11bml0eSBjYXJkcyByYW5rZWQgZWlnaHQgb3IgYmVsb3csIHRoZXJlIHdpbGwgYmUgbm8gbG93IGhhbmQsIGFuZCB0aGUgZW50aXJlIHBvdCB3aWxsIGJlIGF3YXJkZWQgdG8gdGhlIGJlc3QgaGlnaCBoYW5kLiAKMSkgUHJlaGVhdCB0aGUgb3ZlbiB0byAxODBDL0dhcyA0LiAyKSBMYXkgdGhlIGJlZWYgaW4gYSBsYXJnZSByb2FzdGluZyBwYW4gd2l0aCB0aGUgYm9uZSBzaWRlIGRvd24uIChUaGUgcmlicyBhY3QgYXMgYSBuYXR1cmFsIHJvYXN0aW5nIHJhY2suKSBJbiBhIHNtYWxsIGJvd2wgbWFzaCB0b2dldGhlciB0aGUgZ2FybGljLCBob3JzZXJhZGlzaCwgc2FsdCwgcGVwcGVyLCBhbmQgb2xpdmUgb2lsIHRvIG1ha2UgYSBwYXN0ZS4gTWFzc2FnZSB0aGUgcGFzdGUgZ2VuZXJvdXNseSBvdmVyIHRoZSBlbnRpcmUgcm9hc3QuIFNjYXR0ZXIgdGhlIHZlZ2V0YWJsZXMgYW5kIGhhbHZlZCBnYXJsaWMgYXJvdW5kIHRoZSBtZWF0IGFuZCBkcml6emxlIHRoZW0gd2l0aCBhIDIgY291bnQgb2Ygb2lsLiBQdXQgdGhlIHBhbiBpbiB0aGUgb3ZlbiBhbmQgcm9hc3QgdGhlIGJlZWYgZm9yIGFib3V0IDEgMS8yIHRvIDIgaG91cnMgZm9yIG1lZGl1bSByYXJlIChvciBhcHByb3hpbWF0ZWx5IDIwIG1pbnV0ZXMgcGVyIHBvdW5kKS4gQ2hlY2sgdGhlIGludGVybmFsIHRlbXBlcmF0dXJlIG9mIHRoZSByb2FzdCBpbiBzZXZlcmFsIHBsYWNlcyB3aXRoIGFuIGluc3RhbnQgcmVhZCB0aGVybW9tZXRlcjsgaXQgc2hvdWxkIHJlZ2lzdGVyIDUwQyBmb3IgbWVkaXVtIHJhcmUuIFJlbW92ZSB0aGUgYmVlZiB0byBhIGNhcnZpbmcgYm9hcmQgYW5kIGxldCBpdCByZXN0IGZvciAyMCBtaW51dGVzLiBUaGUgaW50ZXJuYWwgdGVtcGVyYXR1cmUgb2YgdGhlIG1lYXQgd2lsbCBjb250aW51ZSB0byByaXNlIGJ5IGFib3V0IDEwIGRlZ3JlZXMuIFJlbW92ZSB0aGUgdmVnZXRhYmxlcyBhbmQgc2V0IGFzaWRlLiBQb3VyIHRoZSBwYW4ganVpY2VzIGludG8gYSBmYXQgc2VwYXJhdG9yIG9yIHNtYWxsIGJvd2wgYW5kIHNldCBhc2lkZSB0byBhbGxvdyB0aGUgZmF0IGFuZCBiZWVmIGp1aWNlcyB0byBzZXBhcmF0ZS4gUG91ciBvZmYgYW5kIGRpc2NhcmQgdGhlIGZhdC4gWW91IHdpbGwgdXNlIHRoZSB0YXN0eSBiZWVmIGp1aWNlcyBmb3IgdGhlIG11c2hyb29tcy4gMykgUGxhY2UgYSBjbGVhbiBza2lsbGV0IG92ZXIgbWVkaXVtIGhlYXQuIEFkZCB0aGUgYnV0dGVyIGFuZCBhIDIgY291bnQgZHJpenpsZSBvZiBvaWwuIFdoZW4gdGhlIGJ1dHRlciBzdGFydHMgdG8gZm9hbS4gYWRkIHRoZSBtdXNocm9vbXMgYW5kIHRoeW1lOyBhbmQgc2Vhc29uIHdpdGggc2FsdCBhbmQgcGVwcGVyLiBTdGlyIGV2ZXJ5dGhpbmcgdG9nZXRoZXIgZm9yIGEgZmV3IG1pbnV0ZXMuIEFkZCB0aGUgcmVkIHdpbmUsIHN0aXJyaW5nIHRvIHNjcmFwZSB1cCBhbnkgc3R1Y2sgYml0czsgdGhlbiBjb29rIGFuZCBzdGlyIHRvIGV2YXBvcmF0ZSB0aGUgYWxjb2hvbC4gV2hlbiB0aGUgd2luZSBpcyBhbG1vc3QgYWxsIGdvbmUsIGFkZCB0aGUgcmVzZXJ2ZWQgYmVlZiBqdWljZXMuIExldCB0aGUgbGlxdWlkIGNvb2sgZG93biBhbmQgdGhlbiB0YWtlIGl0IG9mZiB0aGUgaGVhdC4gU3RpciBpbiB0aGUgY3JlYW0gYW5kIGNoaXZlcywgYW5kIHNlYXNvbiB3aXRoIHNhbHQgYW5kIHBlcHBlci4KQXMgZmFyIGFzIEkgYW0gY29uY2VybmVkLCBncmluZGluZyBhbmQgdGhlIHRpbWUgaXQgdG9vayB0byBsZXZlbCB0byA2MCB3YXMgYSBiaWcgdHVybiBvZmYgZm9yIGEgbG90IG9mIHBsYXllcnMuIEl0IHdhcyAiZGlmZmljdWx0IiBpbiB0aGF0IHNlbnNlLiAKQSBQb2tlciBSdW4gd2lsbCBhbHNvIHRha2UgcGxhY2UgZHVyaW5nIHRoZSBldmVudCwgaG9zdGVkIGJ5IEJpa2VycyBBZ2FpbnN0IENoaWxkIEFidXNlLCB3aXRoIGEgc2NoZWR1bGVkIHN0b3AgYXQgdGhlIHBhbmNha2UgYnJlYWtmYXN0IHRvIHN1cHBvcnQgdGhlIE1lc3F1aXRlIEZpcmUgRGVwYXJ0bWVudC4gUmVnaXN0cmF0aW9uIGZvciB0aGUgcG9rZXIgcnVuIHdpbGwgdGFrZSBwbGFjZSBhdCB0aGUgVmlyZ2luIFJpdmVyIEhvdGVsIGFuZCBDYXNpbm8sIDEwMCBFLgogMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvSXQgd2FzIGFuIGlzc3VlIGZyb20gdGhlIGJlZ2lubmluZyBhcm91bmQgc2V0dGluZyB0YXJnZXRzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHllYXIuIApTaGUga2VwdCBhc2tpbmcgbWUgdG8gZ28gZm9yIGRyaW5rcyBhZnRlciBhbmQgd29uZGVyZWQgd2h5IHdlIHdlcmUgZ3Jvd2luZyBhcGFydC4gClRoZSBEZXRyb2l0IFJlZCBXaW5ncyBoZWxkIGEgcHVibGljIHZpc2l0YXRpb24gZm9yIGxlZ2VuZGFyeSB0ZWFtIG1lbWJlciBUZWQgTGluZHNheSBhdCB0aGUgTGl0dGxlIENhZXNhcnMgQXJlbmEgb24gRnJpZGF5LCBNYXJjaCA4LCAyMDE5LCBpbiBEZXRyb2l0LiBMaW5kc2F5IGRpZWQgb24gTW9uZGF5IGF0IHRoZSBhZ2Ugb2YgOTMuIEEgc3RhdHVlIGhvbm91cmluZyBMaW5kc2F5IGlzIHNob3duIGF0IHRoZSBldmVudC4KRXNwZWNpYWxseSB3aGVuIGEgaHVnZSBudW1iZXIgb2YgZ292ZXJubWVudHMgYWN0aXZlbHkgc2VlayBvdXQgcGVvcGxlIHdobyBhcmUgIk5vdCB3b3JraW5nLCBqdXN0IHNwZW5kaW5nIiB0byBjb21lIHRvIHRoZWlyIGNvdW50cmllcyBmb3IgcXVpdGUgb2J2aW91cyByZWFzb25zLiAKVGhlIElHSSBTdHJhaWdodCBOIEdvIGhlYXRzIHVwIGluIGxlc3MgdGhhbiAyIG1pbnV0ZXMgYW5kIGdpdmVzIHlvdSB1cCB0byAzMCBtaW51dGVzIG9mIGNvbnRpbnVvdXMgdXNhZ2UuIApPbmxpbmUgcG9rZXIgcHJvZmVzc2lvbmFscyB3aW4gbW9zdCBvZiB0aGVpciBtb25leSBmcm9tIHRoZSB3ZWFrIHBsYXllcnMgKGZpc2hlcyBzdWNrZXJzKSwgc28gZmluZGluZyBhIHRhYmxlIHdpdGggdHdvIG9yIHRocmVlIGZpc2hlcyBvbiBpdCwgaXMgZXh0cmVtZWx5IGltcG9ydGFudCBpZiB5b3Ugd2FudCB0byBzdWNjZWVkIGF0IHRoaXMgZ2FtZS4gVGlnaHQgYW5kIGNvbnNlcnZhdGl2ZSBwb2tlciB0YWJsZXMgYXJlIG5vdCBwcm9maXRhYmxlIHRvIHBsYXkgb24sIGV2ZW4gZm9yIHRoZSBwcm9mZXNzaW9uYWxzLgpPbiB0aGUgd29tZW4gc2lkZSwgdGhlIG9uZ29pbmcgc2FnYSBvZiBCZWNreSBMeW5jaCBxdWVzdCB0byByZWNsYWltIHRoZSBnb2xkIGlzIGZyb250IGFuZCBjZW50ZXIsIGFzIE1hbiBjYW4gZG8gbm8gd3JvbmcgYXQgdGhlIG1vbWVudC4gTHluY2ggc3VyZ2UgaW4gcG9wdWxhcml0eSBhcHBlYXJzIHRvIGhhdmUgUkFXIFdvbWVuIENoYW1waW9uIFJvbmRhIFJvdXNleSBvbiB0aGUgY3VzcCBvZiB0dXJuaW5nIGhlZWwgYmVjYXVzZSBvZiBpdC4KVW5jb3ZlciB0aGUgbXlzdGVyeSBvZiBMYXMgVmVnYXMgMTAwMCAxMS41ZyBQb2tlciBDaGlwcyBhbmQgc2VlIGlmIHRoZXkgYXJlIHJpZ2h0IGZvciB5b3UgYXQgdGhpcyB0aW1lLiBQbGVhc2UgcmVhZCBvdXIgZGV0YWlsZWQgb3ZlcnZpZXcgb2YgTGFzIFZlZ2FzIDEwMDAgMTEuNWcgUG9rZXIgQ2hpcHMuCkFsc28sIGlmIGl0IGFueSBjb21mb3J0LCBkYXRhIHNob3dzIGNoaWxkIHBvcm4gdmlld2VycyAodGhhdCBnZXQgYnVzdGVkKSB0aGF0IGhhdmUgbm8gcHJpb3Igc2V4IGFidXNlL2NoaWxkIG1vbGVzdGF0aW9uIHJlbGF0ZWQgY2hhcmdlcyBhbG1vc3QgbmV2ZXIgcGVycGV0cmF0ZSBvbiBpbmRpdmlkdWFsIGNoaWxkcmVuLiBDaGlsZCBwb3JuIHZpZXdlcnMgdGhhdCBoYXZlIG5ldmVyIGdvbmUgYmV5b25kIGJlaW5nIHZpZXdlcnMgdGVuZCB0byBzdGF5IHRoZXJlLiBDaGlsZCBzZXggYWJ1c2VycyB1c3VhbGx5IGtub3cgdGhlaXIgdmljdGltcyBhbmQgZ3Jvb20gdGhlbS4gClRoZSBwbGF5b2ZmcyB3aWxsIHRha2UgcGxhY2UgYXQgQmxpenphcmQgZXNwb3J0cyBhcmVuYSBpbiBCdXJiYW5rLCBDYWxpZm9ybmlhLCBhbmQgdGhlIEdyYW5kIEZpbmFscyB3aWxsIGJlIGhlbGQgYXQgdGhlIEJhcmNsYXlzIENlbnRlciBpbiBOZXcgWW9yay4KTGEgR291dHRlIGQnT3IgdmEgY29ubmF0cmUgZGUgbm9tYnJldXggdHJhdmF1eCBkZSB2b2lyaWVzIGRhbnMgbGVzIG1vaXMvYW5uZXMgIHZlbmlyLCBldCBwYXMgc2V1bGVtZW50IGRhbnMgbGVzIHJ1ZXMgTG9uIGV0IE15cmhhLiBBdSBTdWQsIGxlcyB0cmF2YXV4IGRlIGxhIFByb21lbmFkZSB1cmJhaW5lIG9udCBjb21tZW5jIHN1ciBsZSBib3VsZXZhcmQgZGUgbGEgQ2hhcGVsbGUgOyBsZSBzZWN0ZXVyIGRlcyBhcmNhZGVzIGRlIGxhIHJ1ZSBkZSBsYSBHb3V0dGUgZCdPci9wbGFjZSBQb2xvbmNlYXUvcnVlIEJvcmlzIFZpYW4gZG9pdCB0cmUgcmVzdHJ1Y3R1ciBiaWVudHQgOyBsZSBidWRnZXQgcGFydGljaXBhdGlmIGEgcGVybWlzICB0cm9pcyBwcm9qZXRzIGRlIHZvaXIgbGUgam91ciBwcm9jaGFpbmVtZW50IGRhbnMgY2Ugc2VjdGV1ciA6IHJhbW5hZ2VtZW50IGRlIGxhIHJ1ZSBDYXYsIGR1IHBvdXJ0b3VyIGRlIGwnZ2xpc2UgU2FpbnQgQmVybmFyZCBldCBsYSBydWUgamFyZGluIFJpY2hvbW1lLiBBam91dG9ucyBsZSBzZWN0ZXVyICJQYXJpcyByZXNwaXJlIiByY2VtbWVudCBpbXBsYW50IGV0IGRvbnQgaWwgZXN0IHF1ZXN0aW9uIGRlIHJlZGZpbmlyIGxlcyBjb250b3Vycy4gCllvdSBhcmUgdGhlIGZyb250IGxpbmUgdG8gYW5ncnkgYW5kIGFubm95aW5nIHBlb3BsZSBhbmQgdGhlcmUgYXJlIHByb2Nlc3Nlcy9zeXN0ZW1zL3BvbGljaWVzIHRoYXQgeW91IGFyZSBsaXRlcmFsbHkgbm8gY29udHJvbCBvdmVyLiBUaGV5IHdvcmsgc28gaGFyZCB3aXRob3V0IGJyZWFrcywgY292ZXJlZCBpbiBncmVhc2UgYW5kIHN3ZWF0LCBhcmUgb24gdGhlaXIgZmVldCBhbGwgZGF5IGFuZCBnZXQgdmVyeSBsaXR0bGUgcGF5LiBMYXRlbHksIEkgYW0gbm90aWNpbmcgdGhlIGluZmx1eCBvZiB0aG9zZSBmcm9tIG90aGVyIGNvdW50cmllcyAoRVNMLCB0ZW1wb3JhcnkgZm9yZWlnbiB3b3JrZXJzLCBldGMuKSBhbmQgdGhleSBzaG91bGQgYmUgZ2l2ZW4gdGhlIHV0bW9zdCByZXNwZWN0IGZvciBhIGhhcmQgam9iIHdlbGwgZG9uZS4uIApCdXQgdGhlIHdob2xlIGNvdW50cnkgKFBoaWxpcHBpbmVzKSBrbm93cyB3aGF0IGhhcHBlbmVkIGJlY2F1c2UgaWYgeW91IGFzayBhbnlvbmUgd2hvIHdvcmtzIGluIHRoYXQgaG9zcGl0YWwsIHRoZXkgd2lsbCBjb25maXJtIHRoYXQgaXQgZGVmaW5pdGVseSBoYXBwZW5lZC4gCk9tYWhhIEhpL0xvOiBBcyBpbiBPbWFoYSBIaSB0aGUgcGxheWVyIHN0YXJ0cyB3aXRoIDQgaG9sZSBjYXJkcyBhbmQgc2ltaWxhcmx5IHRoZSBwbGF5ZXIgY2FuIG9ubHkgdXNlIDIgb2YgdGhlbS4gCklmIHlvdSBoYXZlIGEgY2hhbmNlIHRvIGltcHJvdmUgdG8gdGhlIGJlc3QgaGFuZCwgY2hlY2sgYW5kIGNhbGwgaWYgeW91ciBwb3Qgb2RkcyBhcmUgY29ycmVjdC4gCkFzIHdlIG1lbnRpb25lZCwgbm9jaWNlcHRvcnMgc2Vuc2UgcGFpbiB0aHJvdWdoIGZyZWUgbmVydmUgZW5kaW5ncyByYXRoZXIgdGhhbiBzcGVjaWFsaXplZCBlbmRpbmdzIHN1Y2ggYXMgdGhvc2UgaW4gbmV1cm9ucyB0aGF0IHNlbnNlIHRvdWNoIG9yIHByZXNzdXJlLiBIb3dldmVyLCB3aGlsZSBub3JtYWwgc2Vuc29yeSBuZXVyb25zIGFyZSBteWVsaW5hdGVkIChpbnN1bGF0ZWQpIGFuZCBjb25kdWN0IHF1aWNrbHksIG5vY2ljZXB0b3IgbmV1cm9ucyBhcmUgbGlnaHRseSBvciBub24gbXllbGluYXRlZCBhbmQgc2xvd2VyLiAKT25lIGlzIHRvIGhlbHAgaW1wcm92ZSBvdXIgcHJvZHVjdGl2aXR5IGluIG91ciBleGlzdGluZyBzZXJ2aWNlcy4gCllvdSBhcmUgd3JvbmcsIGdvb2Qgc3VzcGljaW9uLiBJdCBwb3Agc2NpZW5jZSBkZXNpZ25lZCB0byBwcm9tb3RlIGEgcHJvZHVjdC4gVGhleSBiYWxhbmNpbmcgdGhlIGNyZWRpYmlsaXR5IG9mIFNwZWNpYWxpemVkIGFzIGFuIGVuZ2luZWVyaW5nIGRlc2lnbiBjb21wYW55IHByb2R1Y2luZyBhZXJvZHluYW1pYyBwcm9kdWN0cyAobWFraW5nIGFuIGVmZm9ydCB0b3dhcmRzIGFjY3VyYWN5KSB3aXRoIG1ha2luZyBmdW4gdmlkZW9zIHRoYXQgYXJlIGVhc3kgdG8gdW5kZXJzdGFuZCBmb3IgdGhlaXIgY29tbW9uIGNvbnN1bWVyIChzaG9ydCBhbmQgdG8gdGhlIHBvaW50KS4gSWYgeW91IGxvb2tlZCBpbnRvIHRoZSBjaGFubmVsIHlvdSB3b3VsZCBzZWUgdGhpcyB2aWRlbyB3aGljaCBnaXZlcyBhIGxpZ2h0IG92ZXJ2aWV3IG9mIHRoZWlyIHByb2Nlc3MuIFRoYXQgQ2hyaXMgZ3V5IHByb2JhYmx5IGRvZXNuIGV4cGVjdCB0byB0cmFuc2xhdGUgYSBQaEQgaW4gYWVyb25hdXRpY3Mgb3ZlciB0aGUgY291cnNlIG9mIDMgbWludXRlcy4KSSBhbHNvIGhhdmUgRyByZWxvYWQgYW5kIEEgaG9sZCBtYXAgc28gbXkgbGVmdCBoYW5kIGJhcmVseSBtb3ZlcyBhcyBJIHBsYXkuLiAKMjogV2VudCB0byBhIGNhbGwgdG8gYSBjdXN0b21lcnMgcG9vbCBob3VzZSBBL1Ygc3lzdGVtIHRoYXQgd2FzICJhY3RpbmcgdXAiLiBUaGlzIGN1c3RvbWVyIHdhcyBhIERyLidzIHRyb3BoeSB3aWZlIHRoYXQgaGFkIG5vIHByb2JsZW0gZ3JlZXRpbmcgeW91IGluIGp1c3QgYSB0b3dlbCBhbmQgdGhlbiBsYXlpbmcgb3V0IG51ZGUgb24gdGhlIHBvb2wgZGVjayB3aGlsZSB5b3Ugd2VyZSB3b3JraW5nLiBIYXBwZW5lZCB0byBhIGZldyBvZiB1cyBhbmQgdGhpcyB3YXMgb25lIGN1c3RvbWVyIHdlIGFsbCBmb3VnaHQgb3ZlciB0cnlpbmcgdG8gZ2V0IHRvIHJ1biBjYWxscyBmb3IuLiAKWW91ciB0aHVtYiBzaG91bGQgYmUgcGxhY2VkIGJldHdlZW4gdGhlIHN0aWNrIGFuZCB0aGUgaGFpciBvZiB0aGUgYm93LCBhbmQgc2hvdWxkIGJlIGJlbnQgYXQgYWxsIHRpbWVzLiAKQ3QgcHJlc3NlIDogaidhaSB0IGludGVycm9nZSBwYXIgbGUgYmltZXN0cmllbCBTZW5zIFNhbnQgc3VyIGwnYWxpbWVudGF0aW9uIGludHVpdGl2ZSA6IG1hbmdlciBlbiBmYWlzYW50IGNvbmZpYW5jZSAgc2VzIHNlbnMsIHNlcyBlbnZpZXMsIHNlcyBpbnR1aXRpb25zLiBVbiBhcnRpY2xlIHVuIHBldSBkaWZmcmVudCBlc3QgZW4gbGlnbmUuCkFuZCB3aXRoIDExIGhvdXJzIHRvIGdvIGJlZm9yZSB0aGUgZmlyc3QgYmlwYXJ0aXNhbiBjYW5kaWRhdGUgZGViYXRlIG9mIHRoZSBtb3N0IGRyYW1hdGljIGVsZWN0aW9uIGluIHR3byBnZW5lcmF0aW9ucywgbm8gb25lIHNlZW1zIHRvIGtub3cgaWYgTWNDYWluIHdpbGwgc2hvdyB1cC4gCk9uY2UgdGhlIHZhdWx0IHdhcyBvcGVuIGhlIHB1bGxlZCBoaXMgZ3VuIG91dCBhbmQgaW52aXRlZCBhbGwgdGhlIHN0YWZmIHRvIGVudGVyIHRoZSB2YXVsdCBhbmQgbG9ja2VkIHRoZW0gaW4uIEJ5IHRoaXMgc3RhZ2UgdGhlIGJhbmsgd2FzIGR1ZSB0byBiZSBvcGVuIHNvIHdoZW4gaGUgd2VudCB0byBsZWF2ZSB0aGVyZSB3ZXJlIGEgbnVtYmVyIG9mIGN1c3RvbWVycyB3YWl0aW5nIHRvIGdldCBpbnNpZGUgdG8gZG8gdGhlaXIgYmFua2luZy4gSGUgdG9sZCB0aGVtIGFsbCB0aGF0IHRoZXJlIGhhZCBiZWVuIGFuIGlzc3VlIHdpdGggdGhlIGNvbXB1dGVycyBhbmQgdGhhdCB0aGUgdGVjaCB0ZWFtIGhhZCBlc3RpbWF0ZWQgaXQgd291bGQgdGFrZSBhYm91dCAzMCBtaW51dGVzIGJlZm9yZSB0aGUgaXNzdWUgd291bGQgYmUgcmVzb2x2ZWQgYW5kIHRoYXQgdGhleSBjb3VsZG4gb3BlbiB1bnRpbCB0aGVuLi4gCk1yIFdpbGtpZSBzYWlkIHRoZSB3aGlzdGxlYmxvd2VycyBoYWQgYWxsZWdlZCB0aGUgVmljdG9yaWFuIENvbW1pc3Npb24gZm9yIEdhbWJsaW5nIGFuZCBMaXF1b3IgUmVndWxhdGlvbiBoYWQgZG9uZSBub3RoaW5nIHRvIHN0b3AgdGhlICJzaG9ja2luZyBjcmltaW5hbCBjb25kdWN0Ii4KU28gYmFja2luZyBhIDJSIHdpbGwgbGlrZWx5IGJvbHN0ZXIgaGlzIHBvc2l0aW9uIHdpdGggbWFueSB5b3VuZyBwZW9wbGUgcmVnYXJkbGVzcyBvZiB0aGUgb3V0Y29tZS4uIApTbyBpbiBzb21lIHNtYWxsIHBhcnQgaXQgZXZpZGVudGx5IHN0aWxsIHJhbmtsZXMgICBhIHNlbnRpbWVudCBwcm9iYWJseSBub3QgaGVscGVkIGJ5IG91ciBwaG90b2dyYXBoZXIncyBzdWdnZXN0aW9uIHRoYXQgaGUgaGF2ZSBoaXMgcGhvdG8gdGFrZW4gaW4gaGlzIG9sZCBvZmZpY2UgKG5vd3Jvb203NjQpLgpDYW4gYmUgYSBiaXQgcGFydGljdWxhciBhbmQgc3ByZWFkIGEgYmxhbmtldCBvbiB0aGUgYmFja3NlYXQsIHRoZW9yZXRpY2FsbHkgc28gd2Ugd291bGQgYmUgbW9yZSBjb21mb3J0YWJsZSBhbHRob3VnaCBJIHRoaW5rIGl0IHdhcyBtb3JlIHNvIHdlIHdvdWxkbiBnZXQgaXQgZGlydHkuIApZb3UgdGhyb3cgZG93biB5b3VyIGNhcmRzIGFuZCB0aGUgcmVzdCBvZiB0aGUgdGFibGUgaXMgaW4gZGlzYmVsaWVmLiAKVGhlIGNvdW50aW5nIHN5c3RlbSBmb3IgYmxhY2tqYWNrIGlzIGp1c3QgbGlrZSBob3cgaXQgaXMgd2l0aCBMdWNreSA5LCBvbmx5IGl0IGEgd2VlIGJpdCBlbXBoYXNpemluZyB0aGUgd2VlIGhlcmUgbW9yZSBjb21wbGljYXRlZC4gQ2FyZHMgbnVtYmVyaW5nIHR3byB0byB0ZW4gYXJlIGNvdW50ZWQgYXMgdGhleSBhcmUuIApCdXQgb3RoZXIgc29hcCBjaGVtaWNhbHMgZG9uIGNhdXNlIHlvdXIgZXllcyB0byBzdGluZyBiZWNhdXNlIHRoZXkgbm90IFFVSVRFIHNvIGdvb2QgYXQgc3RpY2tpbmcgdG8gb2lseSBkaXJ0IGF0IG9uZSBlbmQsIHNvIHRoZXkgbm90IHF1aXRlIHNvIGdvb2QgYXQgY2xlYW5pbmcgb3Igd3JlY2tpbmcgdGhlIGNhcmVmdWwgYmFsYW5jZSBvZiBjaGVtaXN0cnkgdGhhdCBrZWVwcyB5b3VyIGV5ZXMgbW9pc3QgYW5kIGluIGdvb2Qgc2hhcGUuCk5hdHVyYWxseSwgbW9zdCBvZiB0aGVtIGNvbnNpZGVyZWQgdGhyb3dpbmcgYXdheSB0aGVpciBsaXZlcyBqdXN0IGZvciB0aGUgc2FrZSBvZiBnZXR0aW5nIHRoZSBsYXN0IGJpdCBvZiB2ZW5nZWFuY2Ugb24gR2phbGxhcmhvcm4uIApEZSBwbHVzLCBpbCBkaXNwb3NlIGQndW5lIGJlbGxlIHBpc2NpbmUgZGUgMjUgbXRyZXMuLiAKQW5kIGEgaGVhbHRoIGNhcmUgc3lzdGVtIG1lYW50IHRvIGhlbHAgY2FuIGluc3RlYWQgYmUgZnJ1c3RyYXRpbmcsIGV2ZW4gaGFyc2guIFBob3RvZ3JhcGh5IGJ5IENyYWlnIEYuIFdhbGtlci9HbG9iZSBTdGFmZiAgIFJlYWQgdGhlIFN0b3J5ICAgKDMzIHBob3RvcyB0b3RhbCkuIApUaGUgaXJvbnkgaXMgdGhhdCBoaXMgY2hhcmFjdGVyLCBHZXJyeSwgaXMgdGhlIGxhc3QgcGVyc29uIHdobyBjb3VsZCBiZSBkZXNjcmliZWQgYXMgaGF2aW5nIGEgcG9rZXIgZmFjZTsgd2l0aCBoaXMga2lja2VkIGRvZyBtYW5uZXIsIGhlIGFsbW9zdCBoZWxwbGVzc2x5IGV4cHJlc3NpdmUuIFRoZSBzbG91Y2gsIHRoZSBhcG9sb2dldGljIHNtaWxlLCB0aGUgd2F5IG9mIHR1Y2tpbmcgaW4gaGlzIGNoaW4gYXMgaWYgdHJ5aW5nIHRvIG9jY3VweSBsZXNzIHNwYWNlICAgZXZlcnl0aGluZyBpcyBhICJ0ZWxsIi5CZWF1dGlmdWwgbG9zZXI6IFRoZSBpcm9ueSBvZiBCZW4gTWVuZGVsc29obidzIHBlcmZvcm1hbmNlIGluIE1pc3Npc3NpcHBpIEdyaW5kIGlzIHRoYXQgdGhlIGNoYXJhY3RlciBhY3RvciBoYXMgYW55dGhpbmcgYnV0IGEgcG9rZXIgZmFjZS5DdXJ0aXMsIHBsYXllZCBieSBSZXlub2xkcywgaXMgdGhlIG15c3RlcnkgbWFuIG9mIHRoZSBwYWlyOiB3aGlsZSBoZSBsb29rcyBsaWtlIGEgc2xpY2tzdGVyIG5leHQgdG8gR2VycnksIGhpcyBjb2xvdXJmdWwgYW5lY2RvdGVzIGdldCBzdGVhZGlseSBoYXJkZXIgdG8gYmVsaWV2ZSwgYW5kIHdlIHN0YXJ0IHRvIG5vdGljZSBoZSBhbHdheXMgaW4gdGhlIHNhbWUgdHdlZWQgamFja2V0LiAKSW5kaWdvIGhhcyBub3QgaGFkIGZvcm1hbCBpbnRlcmVzdCBpbiBhIGJpZCBmb3IgcG9rZXIgbWFjaGluZXMgc2luY2UgMjAwNC4KVGhlIG9mZmVuZGluZyBwYXNzYWdlcyBoYWQgYmVlbiBleGNpc2VkIGZyb20gc3Vic2VxdWVudCBlZGl0aW9ucy4gCkRyYWZ0IElTIGdvb2QgdG8gZmlsbCBvdXQsIGFzc3VtaW5nIHlvdSBrbm93IHdoYXQgeW91IGFyZSBkb2luZywgYW5kIGl0IGFsc28gYSBsb3QgbW9yZSBmdW4gY2F1c2UgdGhlIHBsYXlpbmcgZmllbGQgaXMgbW9yZSBldmVuLiBUaGUgcHJvYmxlbSB3YXMgeW91IG5ldmVyIGRpZCB5b3VyIHJlc2VhcmNoLCBsb29rIHVwIGRyYWZ0IGxpc3QgcmFua2luZ3MgKExTVnMgb3Igb3RoZXJzKSBmb3IgcmVmZXJlbmNlLCBTVElDSyB0byBhIGdhbWUgcGxhbiB3aGVuIHlvdSBhcmUgZHJhZnRpbmcgdW5sZXNzIHlvdSBjYW4gYWZmb3JkIHRvIHRha2UgdGhhdCBvZmYgY29sb3VyIHJhcmUgd2l0aG91dCBoYXZpbmcgdG8gcGxheSBpdCBhbmQgYWZmZWN0aW5nIHlvdXIgZGVjay4gVGhlcmUgbm8vZmV3IG1hbmEgZml4IGluIGRyYWZ0LCBzbyBwbGFuIHlvdXIgY29sb3VyIGNob2ljZXMgZWFybHkgYW5kIHNlZSB3aGF0IGNvbG91cnMgdGhlIGJvdHMgYXJlIGxlYXZpbmcgeW91IGZvciBkdXJpbmcgdGhlIGZpcnN0IHBhY2suIFRoZXJlIG5vIHBvaW50IGdldHRpbmcgYSBib21iIGJ1dCBuZWVkaW5nIGEgM3JkIGNvbG91ciB0aGF0IHlvdSBuZWVkIHRvIGFkZCBsYW5kIGluIGZvciwgaWYgaXQgYSBzcGxhc2gsIGl0IHdvbiBldmVuIGJlIDEvMyBvZiB5b3VyIGxhbmQsIHdoaWNoIGlzIGp1c3Qgc2xpZ2h0bHkgbW9yZSB0aGFuIDEvMyBvZiB5b3VyIGRlY2ssIHNvIHlvdSBsZXNzIHRoYW4gMS85IGNoYW5jZSBpbiBnZXR0aW5nIHRoYXQgc3BsYXNoIGNvbG91ciB0byBwYXkgZm9yIHRoYXQgYm9tYi4gUklQIGlmIHlvdSBuZWVkIFRXTyBvZiB0aGUgc3BsYXNoIGNvbG91ci4KVG8gc2V0IHRoZSByZWNvcmQgc3RyYWlnaHQsIEkgZGlkIGNvbnNlbnQgd2hlbiBoZSBhc2tlZCBhYm91dCB0aWdodGVuaW5nIHRoZSBydWxlcyBkb3duLiAKSXQgbGFzdHMgdGhyb3VnaCBtZWFscyBhbmQgZXZlbiBteSBvaWwgY2xlYW5zZXIgdW5sZXNzIEkgcmVhbGx5IHNjcnViIGF0IGl0LiBJIHdvdWxkIG5vdCBzYXkgaXQgbGF5ZXJzIHdlbGwgdW5kZXIgZ2xvc3MgYmVjYXVzZSB0aGUgb3JpZ2luYWwgYXBwbGljYXRpb24gZG9lc24gY29tcGxldGVseSBkcnksIGl0IHdpcGVzIG9mZiBhbmQgcmV2ZWFscyB0aGUgc3RhaW4gYWZ0ZXIuIApBbm90aGVyIHRoaW5nIHRoYXQgSSB2YWx1ZSBpbiBQYW5kdW5pYSBpcyB0aGF0IGl0IGlzIGNvbXBsZXRlIGluIGl0c2VsZi4gCkZvciBpbnN0YW5jZSB5b3UgY2FuIGJldCB0aGF0IHRoZXJlJ2xsIGJlIHR3byByZWQgY2FyZHMgaW4gdGhlIG5leHQgMjUgbWludXRlcyBvciBtYXliZSB0aGF0IHRoZXJlJ2xsIGJlIG9ubHkgb25lIGNvcm5lciBpbiB0aGUgbGFzdCAxNSBtaW51dGVzIG9mIHRoZSBnYW1lLiBUaGUgY29ycmVzcG9uZGVudCBvZiB0aGlzIHdvdWxkIHJpdmV0IHJ1bm5pbmcgdXAgZG93biBmcm9tIHRoZSBzdGFuZHMgdGhyb3dpbmcgY2FzaCBhdCB5b3VyIGJvb2tpZSBldmVyeSBmZXcgbWludXRlcy4gCkVpdGhlciB3YXkgSSdtIGluIGEgd2F5IGJldHRlciBwb3NpdGlvbiB0aGFuIEkgd2FzIGJlZm9yZSBJIGhhZCBhIHJlYWwgam9iIGF0IGFsbC4gCldFIEtJTEwgQkVDQVVTRSBXRSBMSUtFIFRIRSBGRUVMSU5HLiBUSElTIElTIFdIWSBXRSBIQVZFIFNFUklBTCBNVVJERVJFUlMgQkVDQVVTRSBUSEVZIExPVkUgVEhFIEZFRUxJTkcgT0YgS0lMTElORy4gCklmIE4gaW52aXRlZCBtZSB0aGVuIEkgY291bGQgaGF2ZSB3ZW50IHdpdGggaGltLCBJIGNvdWxkIGhhdmUgZmVsdCB0aGUgZW5lcmd5IGluIHRoZSB0aGVhdHJlIHdoZW4gdGhlIEZhbGxvdXQgbG9nbyBhcHBlYXJzIGFuZCBzY3JlZW4gYW5kIHNlZW4gVG9kZCBIb3dhcmQuIEkgY291bGQgaGF2ZSBnb3R0ZW4gdGhlIGxpbWl0ZWQgZWRpdGlvbiBmaWd1cmVzLiAKKEkgcGlja2VkIHVwIHRoZSBzYXggYmVjYXVzZSBJIHdhcyBib3JlZCB3aXRoIHRoZSBjbGFyaW5ldCAgIHBsdXMgdGhleSB3b3VsZG4ndCBsZXQgbWUgaW4gdGhlIGphenogYmFuZCB3aXRoIGEgY2xhcmluZXQgICBldmVuIHRob3VnaCBJIG1lbnRpb25lZCBrbGVzbWVyIG11c2ljIHRvIHRoZW0sIHRoZXkgd2VyZW4ndCBpbnRlcmVzdGVkLilUaGUgZW1ib3VjaHVyZSBvbiB0aGUgc2F4IGlzIGRlcGVuZGVudCB1cG9uIHRoZSBsb3dlciBqYXcuIAoyMiBNYXIgMjAxNiAgIDMgbWluICAgVXBsb2FkZWQgYnkgTWlmdGFjaHVsIEh1ZGEgQWxtYWZ0dWNoaW5UdXRvcmlhbCBIb3cgdG8gRml4IEd1aXRhciBIZXJvIDMgTm8gQ0QvTm8gRFZEIGZvciBQQyBHZXQgaXQgbm93ISBEb3dubG9hZCBMaW5rczogVmlhIC4gCkNvbnNpZGVyIHRoaXMgYWdncmVzc2lvbiBhcyBhbiBpbnZlc3RtZW50IGFzIHdlbGwsIGJlY2F1c2UgYSB0aWdodCBwbGF5ZXIgaXMgZXZlbnR1YWxseSBnb2luZyB0byBqdW1wIGJhY2sgYXQgeW91LiBJbiB0aGF0IGNhc2UsIGJlIHByZXBhcmVkIHRvIGNvb2xseSBmb2xkIHVudGlsIHlvdSBhcmUgaG9sZGluZyBzb21lIGR5bmFtaXRlLiAKQnV0IHRoZSB2dWx0dXJlcyBhcmUgY2lyY2xpbmcuIEFscmVhZHkgYW4gb2xkIHJpdmFsLCBGcmllZHJpY2ggTWVyeiwgaGFzIGFubm91bmNlZCBoaXMgY2FuZGlkYWN5LiBJZiBvbmUgb2YgTXJzIE1lcmtlbCdzIGFkdmVyc2FyaWVzIHByZXZhaWxzIGFzIHBhcnR5IGxlYWRlciwgaGVyIGNoYW5jZWxsb3JzaGlwIGJlY29tZXMgdW5jb21mb3J0YWJsZSBhbmQgcG9zc2libHkgdW50ZW5hYmxlLgpZb3VyIGNvbXBsZW1lbnRhcnkgdmlubnkgd2lsbCBwcm9iYWJseSBiZSB0aGUgbG93ZXN0IHByaW9yaXR5IHRoaW5nIG9uIHRoZWlyIG1pbmQuTm90IHNheWluZyB0aGV5IGRpZG4gc2NyZXcgdXAsIG9idmlvdXNseSwgYnV0IHlvdSBjYW4gdGFrZSBwcmV2ZW50YXRpdmUgbWVhc3VyZXMuam9sbHlnZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIGFncmVlIGl0IG1vc3RseSB0aGVpciBmYXVsdCwgYW5kIGlmIEkgd2VyZSB5b3UgSSB3b3VsZCB0b3RhbGx5IGNvbXBsYWluIHRvIHRoZSBjYXNoaWVyIG9yIGEgbWFuYWdlciBuZXh0IHRpbWUgSSBwaWNrIHVwIGFuIG9yZGVyLCBzbyBob3BlZnVsbHkgdGhleSBjb3VsZCBkbyBzb21lIHJlIHRyYWluaW5nIG9yIHNvbWV0aGluZyB0byBob3BlZnVsbHkgcmVkdWNlIHRoZSBpc3N1ZS4gClN0aWxsLCBJIGRvbiB0aGluayB3ZSBzaG91bGQganVkZ2UgRW5kZ2FtZSB1bnRpbCB3ZSBzZWUgaXQuIFNoZSBvbmx5IGJlIG9uZSBvZiBtYW55IGNoYXJhY3RlcnMgaW4gdGhhdCBtb3ZpZS4gCk1lbnRpb25uIGRhbnMgbGUgU2hlbm5vbmcgYmVuY2FvIGppbmcsIGxlIGNoYW52cmUgZXN0IHJlY29tbWFuZCBjb250cmUgbGEgZmFpYmxlc3NlIGducmFsZSwgbGUgcGFsdWRpc21lLCBsZSBicmlicmkgZXQgbGEgY29uc3RpcGF0aW9uLiAKSSB0aGluayB0aGUgbmF1c2VhIGlzIGFib3V0IG15IG93biBzdHVwaWRpdHkuIApIaXMgeW91bmdlciBicm90aGVyLCBFcmljIFBhZGRvY2ssIGNhbGxlZCBoaW0gdGhlIG9mIG1pY3JvIGFnZ3Jlc3Npb24gbmFyY2lzc2lzdGljLCBkZXRhaWwgb3JpZW50ZWQgYW5kIG1heWJlIGJvcmVkIGVub3VnaCB3aXRoIGxpZmUgdG8gcGxhbiBhbiBhdHRhY2sgdGhhdCB3b3VsZCBtYWtlIGhpbSBmYW1vdXMuIEhpcyBleCB3aWZlIHRvbGQgaW52ZXN0aWdhdG9ycyB0aGF0IGhlIGdyZXcgdXAgd2l0aCBhIHNpbmdsZSBtb20gaW4gYSBmaW5hbmNpYWxseSB1bnN0YWJsZSBob21lIGFuZCBoZSBmZWx0IGEgbmVlZCB0byBiZSBzZWxmIHJlbGlhbnQuClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKU2V2ZXJlIG1hbG51dHJpdGlvbiBjYW4gYWxzbyBtYWtlIGluanVyeSBtb3JlIGxpa2VseSBhcyB0aGUgYm9keSBpcyBsZXNzIGFibGUgdG8gbWFpbnRhaW4gdGhlIGludGVncml0eSBvZiBzdHJ1Y3R1cmVzIGFuZCByZXBhaXIgZGFtYWdlLkJUVyAgIGlvZGl6ZWQgdGFibGUgc2FsdCBpcyBhIGdvb2QgY2hlYXAgdGhpbmcgdG8gdHJ5IGZvciBhbmh5ZHJvc2lzLiAKVGhlcmUgd2FzIGEgbGVhayBhcm91bmQgMjAxMSBvZiBhIGZldyB0ZWFtcycgZmluYW5jaWFscyBhbmQgaXQgd2FzIGxhdWdoYWJsZSB3aGF0IG93bmVyc2hpcCB3YXMgc2F5aW5nIHdoaWxlIHRoZWlyIGJvb2tzIHNhaWQgdGhlIG9wcG9zaXRlLi4gCk5ldmFkYSwgTmV3IEplcnNleSBhbmQgRGVsYXdhcmUgbGVnYWxpemVkIG9ubGluZSBnYW1ibGluZyBhZnRlciB0aGUgMjAxMSBvcGluaW9uLCBhbmQgdGhlIHRocmVlIHN0YXRlcyBoYXZlIGFncmVlbWVudHMgYWxsb3dpbmcgcG9rZXIgcGxheWVycyB0byBjb21wZXRlIG9ubGluZSBhY3Jvc3MgdGhlIHN0YXRlcy4gUGVubnN5bHZhbmlhIGJlY2FtZSB0aGUgZm91cnRoIHN0YXRlIHRvIGxlZ2FsaXplIG9ubGluZSBjYXNpbm8gZ2FtYmxpbmcgaW4gMjAxNy4gTmV3IEhhbXBzaGlyZSBpcyBhbW9uZyBhdCBsZWFzdCBuaW5lIHN0YXRlcyB0aGF0IGFsbG93IGxvdHRlcnkgdGlja2V0cyB0byBiZSBwdXJjaGFzZWQgb25saW5lLCBhY2NvcmRpbmcgTmVvUG9sbGFyZCBJbnRlcmFjdGl2ZSwgd2hpY2ggcHJvdmlkZXMgTmV3IEhhbXBzaGlyZSBpTG90dGVyeSBoYXJkd2FyZSBhbmQgc29mdHdhcmUgYW5kIGZpbGVkIGEgc2ltaWxhciBzdWl0LgpFdmVyLiAKWW91IHN0aWxsIGRvbiBnZXQgaXQ/IEkgZG9uIGNhcmUgYWJvdXQgY3JpdGljaXNtLiBJbiBmYWN0LCBJIGFscmVhZHkgdG9sZCB5b3UgSSBhY3R1YWxseSBwcmVmZXIgaWYgcGVvcGxlIGRpc2xpa2UgS29yZWEuIFlvdSBqdXN0IG1hZGUgbXVsdGlwbGUgZmFsc2UgYWNjdXNhdGlvbnMgYW5kIGJsYXRhbnRseSBsaWVkLiAKRmVlbGluZyBsaWtlIHlvdSBhcmUgIm5vdCBvbGQgZW5vdWdoIHRvIGJlIGEgZ3JhbmRtYSEiIGlzIHN1Y2ggYSBzaWxseSB0aGluZyBhbmQgSSBhZ3JlZSBpdCBzbWFja3Mgb2YgbmFyY2lzc2lzbS4gSXQgZXZlbiBzaWxsaWVyIHdoZW4geW91IGNvbnNpZGVyIHRoYXQgbWFueSBwZW9wbGUgYXJlIGhhdmluZyBiYWJpZXMgbGF0ZXIgbm93IHRoYW4gaW4gcGFzdCBnZW5lcmF0aW9ucywgc28gZmlyc3QgdGltZSBncmFuZHBhcmVudHMgYXJlIG9sZGVyIHRoYW4gaW4gdGhlIHBhc3QuIApIZSB1bHRpbWF0ZWx5IGZpbmlzaGVkIGl0ICAgbGlrZSBvbmx5IGhlIGNhbiAgIHdpdGggYSBtaWdodHkgc2l4IG92ZXIgd2lkZSBsb25nIG9uLCB3aGljaCBldm9rZWQgbWVtb3JpZXMgb2YgdGhhdCBzaG90IHRoYXQgd29uIEluZGlhIHRoZSAyMDExIFdvcmxkIEN1cC4uIApJZiB5b3UgaGF2ZSB0aGUgYmVzdCBoaWdoIGhhbmQsIHJhaXNlIGFzIG11Y2ggYXMgcG9zc2libGUuIApUaGVuIEkgbm90aWNlZCBoZSB3YXMgbG9va2luZyBpbiBhbm90aGVyIGRpcmVjdGlvbiwgbm90IGF0IG1lISBIZSB3YXMgbG9va2luZyBhdCBhbm90aGVyIGdpcmwgd2hvbSBJIGNvbnNpZGVyZWQgdG8gYmUgbGVzcyBwcmV0dHkgdGhhbiBtZS4gU2hlIHdhcyB3ZWFyaW5nIHRoZSBzYW1lIGRyZXNzIHRoYXQgSSBoYWQgc2VlbiBlYXJsaWVyIGluIHRoZSBtYWxsIGJ1dCBkZWNpZGVkIG5vdCB0byBidXkgc2luY2UgaXQgbWFkZSBtZSBsb29rIGZhdDsgaG93ZXZlciwgb24gaGVyLCBpdCB3YXMgcGVyZmVjdC4gV2l0aG91dCBiZWluZyB0aGUgbW9zdCBiZWF1dGlmdWwgZ2lybCBvZiB0aGUgcGFydHksIHNoZSBoYWQgc29tZXRoaW5nLiAKVGhlIG5hdGlvbidzIDIgRVNUIGxvdyBvZiAyMSBiZWxvdyB6ZXJvIGF0IEludGVyICBuYXRpb25hbCwgRmFsbHMsIE1pbm4uLCB3YXMgaW4gIGRpY2F0aXZlIG9mIHRoZSBpY3kgd2VhdGhlciBjb3ZlcmluZyB0aGUgbm9ydGhlcm4gdGllciBvZiBzdGF0ZXMuIEhhemFyZG91cyBkcml2aW5nIG9yIHRyYXZlbCAgZXJzIHdhcm5pbmdzIHdlcmUgaW4gZWZmZWN0IGFjcm9zcyBtdWNoIG9mIHRoZSBhcmVhIHN0cmV0Y2hpbmcgZnJvbSBDb2xvcmFkbyB0byBzb3V0aHdlc3QgSW93YSB3aGVyZSBvbmUgdG8gdGhyZWUgaW5jaGVzIG9mIG5ldyBzbm93IGZlbGwgbGFzdCBldmVuaW5nLiAKTGlzdCBvZiBGZW1hbGUgUG9wIFNpbmdlcnMgb2YgdGhlIDIwMDBzCkNlY2kgdGFudCwgbCdhYm9saXRpb24gZGUgbGEgdHJhaXRlIHRyYW5zYXRsYW50aXF1ZSBuJ2EgcGFzIG1pcyBmaW4gIGRlcyByYXBwb3J0cyBwZXJ2ZXJzIGV0IGRzaHVtYW5pc2FudHMgZW50cmUgY29sb25zIGZyYW5haXMgZXQgY29sb25pc3MgYWZyaWNhaW5zLiAKSSBkb24gbmVlZCB0byBiZSBhIGNvYWNoIG9yIGEgdGVhbSBpbnNpZGVyIHRvIGtub3cgaGUgbm90IGEgZmlyc3QgY2hvaWNlIGNiLiAKVGhlIFdTT1AgZ29lcyBhYm91dCAxLjUgbW9udGhzIChlbmQgb2YgTWF5IHRvIG1pZCBKdWx5KSBhbmQgaGFzIG92ZXIgNTUgdG91cm5hbWVudHMgb2YgdmFyaW91cyB0eXBlcyBhcyBwYXJ0IG9mIHRoZSBzZXJpZXMgY3VsbWluYXRpbmcgaW4gdGhlICQxMGsgIk1haW4gRXZlbnQiIHRoYXQgeW91IG1heSBoYXZlIHNlZW4gb24gRVNQTiBzb21ldGltZS4gCkEgMjAxMCBzdHVkeSBpbiB0aGUgSm91cm5hbCBvZiBBcHBsaWVkIFBoeXNpb2xvZ3kgZm91bmQgdGhhdCB3aGVuIGhlYWx0aHkgbWVuIGxpbWl0ZWQgdGhlaXIgbnVtYmVyIG9mIGZvb3RzdGVwcyBieSA4NSBwZXJjZW50IGZvciAyIHdlZWtzLCB0aGV5IGV4cGVyaWVuY2VkIGEgMTcgcGVyY2VudCBkZWNyZWFzZSBpbiBpbnN1bGluIHNlbnNpdGl2aXR5LCByYWlzaW5nIHRoZWlyIGRpYWJldGVzIHJpc2suIApFOiAvdS9kZWxsZXR0IG1ha2VzIGEgZ29vZCBwb2ludCB0aGF0IEdpZGVvbiBCaWJsZSBkbyBkaWZmZXIgc2xpZ2h0bHkgZnJvbSBub3JtYWwgYmlibGVzICAgYXQgdGhlIGJlZ2lubmluZyB0aGV5IGZlYXR1cmUgYSBsaXN0IG9mIHNlY3Rpb25zIHRvIHR1cm4gdG8gdGhhdCBvZmZlciBlbmNvdXJhZ2VtZW50IGluIHRyb3VibGluZyB0aW1lcy4gQWxvbmcgd2l0aCB0aGF0LCBzb21lIGZvbGtzIGhhdmUgYmVlbiBhc2tpbmcgZm9yIHByb29mIHRoYXQgaXQgZG9lcyBsb3dlciBzdWljaWRlIHJhdGVzLiBJIGNhbiBzYXkgZm9yIGNlcnRhaW4gaXQgZG9lcywgYnV0IEkgY2FuIHBvaW50IHRvIFRoaXMgU3R1ZHkgb24gaWYgUmVsaWdpb24gbG93ZXJzIFN1aWNpZGUgUmF0ZXMgdGhhdCBjb25jbHVkZXMgIlRoZXkgZG8gaW4gdGhlIFVTIGFuZCBSdXNzaWEsIGJ1dCBpdCBpbmNyZWFzZXMgdGhlbSBlbHNld2hlcmUuIiBXaHkgUnVzc2lhIGFuZCB0aGUgVVMgYXJlIG91dGxpZXJzIGlzIGEgZ3JlYXQgcXVlc3Rpb24sIGFuZCBzb21lIHRoZW9yaXplIHRoYXQgaXQgbm90IHRoZW0sIGJ1dCBDaHJpc3RpYW5pdHkgdGhhdCB0aGUgb3V0bGllciwgc2luY2UgQ2hyaXN0aWFuaXR5IGlzIHRoZSBkb21pbmFudCByZWxpZ2lvbiBpbiBib3RoIGNvdW50aWVzLiAKUG9rZXIgaXMgYSBkaWZmZXJlbnQgZ2FtZSBvbmNlIHlvdSBhcmUgMzAwQkIgZGVlcC4gCkl0IGFueXRoaW5nIGZvbXIgMTAgMTUgdXN1YWxseSAob3RoZXIgdGhhbiAyMCB0aGVuIDE4IHRoZSBmaXJzdCB3ZWVrKSBidXQgaXQgbm90IGFsd2F5cyBpbiBhbiBpbmNyZWFzaW5nIGZhc2hpb24gKGZvciBleGFtcGxlIEkgZGlkIDEzIGxhc3Qgd29ya291dCBhbmQgMTAgdGhpcyB3b3Jrb3V0IGJ1dCBpdCBhdCB0aGUgc2FtZSB3ZWlnaHQpLiAKSWdub3JlIHRoZSBsYXN0IHNvdW5kIG9mIHRoYXQgbGluZSwgYW5kIGp1c3QgZ2V0IG9uIHdpdGggdGhlIHJlc3Qgb2YgdGhlIHBvZW0uIApBbHNvLCB0aGlzIGxpc3QgdXNlcyB0aGUgdGVybSAiaVR1bmVzIiB0byByZXByZXNlbnQgZGlnaXRhbCBzdG9yZXMuIApQIGhhY2tpbmcgaXMgYSBicm9hZCB0ZXJtIHRoYXQgY292ZXJzIGEgdmFyaWV0eSBvZiBkdWJpb3VzIHN0YXRpc3RpY2FsIHRlY2huaXF1ZXMuIEkgcmVjb21tZW5kIHJlYWRpbmcgQSBHYXJkZW4gb2YgRm9ya2luZyBQYXRocy4gYnkgQW5kcmV3IEdlbG1hbiwgd2hpY2ggZGVsdmVzIGludG8gc29tZSBvZiB0aGUgbW9yZSBlc290ZXJpYyBtZXRob2RzIG9mICJwIGhhY2tpbmciLiBZb3UgZGVzY3JpYmUgcCBoYWNraW5nIGFzIHRlc3RpbmcgbXVsdGlwbGUgaW50ZXJhY3Rpb25zIHdpdGhvdXQgbWVyaXQuIFRoaXMgaW5kZWVkIGlzIGEgdHlwZSBvZiBwIGhhY2tpbmcsIGJ1dCB0aGlzIGlzIG9ubHkgb25lIG9mIG1hbnkgd2F5cyB0byBwIGhhY2suIE9uZSBleGFtcGxlIGlzIGFyYml0cmFyaWx5IHJlbW92aW5nIGRhdGEgcG9pbnRzIHRvIG1hc3NhZ2UgYSBwIHZhbHVlLiBBIHNlY29uZCBleGFtcGxlIHdvdWxkIGJlIHBlcmZvcm1pbmcgbXVsdGlwbGUgdHlwZXMgb2Ygc3RhdGlzdGljYWwgdGVzdHMgb24gZGF0YSwgYW5kIHBpY2tpbmcgdGhlIG9uZSB0aGF0IHByb3ZpZGVzIHNpZ25pZmljYW5jZS4KVGhlIGxhc3QgdHdvIHllYXJzIEkgaGFkIG5vdGhpbmcgaW4gY29tbW9uIHdpdGggdGhlbSwgaXQgd2FzIGJvdW5kIHRvIGhhcHBlbi4gClRoaXMgbWVzc2FnZSBvZiB0ZWVuIHNleHVhbGl0eSAgIGlmIG5vdCBwcm9taXNjdWl0eSAgIGhhcyBiZWVuIGNsZWFybHkgZXN0YWJsaXNoZWQgaW4gb3RoZXIgcmVjZW50IHByb2dyYW1taW5nLgpBbmQgYW55dGhpbmcgcHJpdmF0ZSBpc24gYSBtZW1lLCBiZWNhdXNlIGl0IHdhcyBuZXZlciBtZWFudCB0byBzcHJlYWQgdmlyYWxseS9tZW1ldGljYWxsbHkuLiAKWW91IGFyZSBtb3N0bHkgdHJ5aW5nIHRvIGF2b2lkIGJlaW5nIGRvbWluYXRlZCBoZXJlIHNvIEkgbG9vayBhdCBRSiwgb3IgcG9ja2V0IDgncyBldGMuIEFuZCBmZWVsIEkgYW0gbm90IGEgaHVnZSB1bmRlcmRvZyBhbmQgbWF5IGV2ZW4gYmUgc2xpZ2h0bHkgZmF2b3JlZC4uIApObyBqb2tlLiBJIHdlbnQgYXQgMDk1NyB0aGlua2luZyBJIGJlIG91dCBvZiB0aGVyZSB0byBlYXQgaGVhcnR5IGx1bmNoIGJ5IDExMzAgMTIwMC4gSSB3YXMgdGhlcmUgdW50aWwgMiBmdWNraW5nIDMwLiAKVGhlIGJ1aWxkaW5nIGlzIHNpdHVhdGVkIG5leHQgdG8gdGhlIGxha2UsIGFuZCB0aGUgdmlldyBpcyByZWFsbHkgbmljZS4gRm9yIG1lIGl0IHdhcyB2ZXJ5IGNvbmZ1c2luZywgYnV0IEkgd2FzIG9ubHkgdGhlcmUgZm9yIGEgZmV3IGRheXMuIApUaHVyc2RheTogRGVmaW5pdGVseSBzZWUgdGhlIGdhbWUuIFRoZXkgYXJlIHN1cGVyIGNoZWFwIGFuZCByZWFsbHkgZnVuIGFuZCBldmVuIGlmIHlvdSBoYXRlIGJhc2ViYWxsIHlvdSBsb3ZlIGl0LiBTb21ldGhpbmcgbm90IG1hbnkgS29yZWFucyBldmVuIGtub3cgYWJvdXQsIGlmIHlvdSBnbyB0byB0aGUgZWFzdCBzaWRlIG9mIHRoZSBMb3R0ZSB0b3dlciBvbiB0aGUgZ3JvdW5kIGxldmVsIHRoZXJlIGlzIGEgZGVzayB3aGVyZSB5b3UgY2FuIChmb3IgZnJlZSkgZ2V0IGFjY2VzcyB0byB0aGUgMzFzdCBmbG9vci4gSXQgb25seSBhYm91dCBoYWxmd2F5IHVwLCBidXQgdGhlcmUgaXMgYSBmb29kY291cnQgdXAgdGhlcmUgd2l0aCBhIDcgMTEgd2hlcmUgeW91IGNhbiBkcmluayBjaGVhcCBjYW5uZWQgYmVlcnMgYW5kIG9yZGVyIHNvbWUgbW9kZXJhdGVseSBwcmljZWQgZm9vZCBhbmQgZ2V0IGEgZ3JlYXQgdmlldyBvZiB0aGUgY2l0eS4gSSBoaWdobHkgcmVjb21tZW5kIHRoYXQuClNpemUgaXMgbm90IHRoYXQgYmlnIG9mIGEgZGVhbC4gCiJJbiBhZGRpdGlvbiwgb25lIG9mZmljZXIgaGFkIGdvbmUgb3V0IGZvciBydW5zIGR1cmluZyB0aGUgd29ya2luZyBkYXkgd2hpbHN0IGEgZnVydGhlciBvZmZpY2VyIGNsZWFuZWQgaGlzIGdvbGYgY2x1YnMgaW4gdGhlIG9mZmljZS4gIlRoZXNlIGFjdGl2aXRpZXMgYXBwZWFyIHRvIGhhdmUgdGFrZW4gcGxhY2UgYXQgdGhlIGV4cGVuc2Ugb2YgcG9saWNpbmcgZHV0aWVzLCBzdWNoIGFzIHBhdHJvbGxpbmcgdGhlIGxvY2FsIGFyZWEuIgpBbmQgSGlsbHNib3JvIEVudGVydGFpbm1lbnQsIGNoYWxsZW5nZWQgYSBjb3VudHkgb3JkaW5hbmNlIHRoYXQgd291bGQgcHJvaGliaXQgdGhlIGRpc3RyaWJ1dGlvbiBvZiBoYW5kYmlsbHMgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMuIFRoZSBoZWFyaW5nIGlzIGV4cGVjdGVkIHRvIGNvbnRpbnVlIFRodXJzZGF5LiAKRW5zdWl0ZSwgbCBzdWl2YW50LCBsYSBweXJhbWlkZSBzZXJhIGQgUHVpcywgZWxsZSBwYXJ0aXJhIGVuIHRvdXJuIFByb2NoYWluZSBkZXN0aW5hdGlvbiA6IE1pYW1pLiAKWWVhaCwgYnV0IGlmIHlvdSBjaG9vc2UgdGhlIGNhcnJpZXIgdmVyc2lvbiB5b3UgbG9vc2Ugb3V0IG9uIGZlYXR1cmVzLiBMaWtlIGZvciBleGFtcGxlIFZlcml6b24gdmVyc2lvbiBsb29zZSBTYW1zdW5nIGNsb3VkLCBjYWxsZXIgSUQsIHNwYW0gYmxvY2tlciwgZGV2aWNlIG1haW50ZW5hbmNlLiBWZXJpem9uIHRoZW4gbWFrZXMgeW91IHBheSBleHRyYSBpZiB5b3Ugd2FudCBjbG91ZCBzZXJ2aWNlIG9yIGNhbGxlciBpZC9zcGFtIGJsb2NrZXIuIE9uIHRoZSB1bmxvY2tlZCB2ZXJzaW9uIHlvdSBnZXQgYWxsIG9mIHRoYXQuIFRoZSBvbmx5IHRoaW5nIHlvdSBsb29zZSBpcyB2aWRlbyBjYWxsaW5nIG9uIG5ld2VyIHBob25lcy4gT24gb2xkZXIgcGhvbmVzIGl0IHZpZGVvIGFuZCB3aWZpIGNhbGxpbmcuIFRoZXkgZG8gdGhpcyBiZWNhdXNlIFZlcml6b24gaXMgcGV0dHkgYW5kIHdhbnRzIHlvdSB0byBidXkgdGhlaXIgcGhvbmVzLgpDZWxhIHZvdXMgcGVybWV0dHJhIGRlIHNlbnRpciBsZSBtb21lbnQgbyB2b3VzIHRlcyByYXNzYXNpIChlKSBldCBkZSB2b3VzIGFycnRlci4gCkhlcmUgd2h5IHdlIGRvaW5nIHdoYXQgd2UgZG9pbmcgZGVzcGl0ZSB0aGVzZSBjcml0aWNpc21zLiIgSSB0aGluayB0aGUgVGltZXMgT3AgRWQgZWRpdG9yIGNvdWxkIGhhdmUgc2FpZDogbW9yZSBhcmd1bWVudCBsZXNzIHByb3BhZ2FuZGEgcGxlYXNlLCBNci4gVmljZSBQcmVzaWRlbnQuIE1vc3QgIm9waW5pb24iIHBpZWNlcyBjb250YWluIHJlYWwgZXZpZGVuY2UgYW5kIHJlYWwgYXJndW1lbnRhdGlvbi4gClRoZSBzZWFyY2hlcyBhcHBlYXJlZCBhcHByb3ByaWF0ZSwgYnV0IGdyZXkgbGl0ZXJhdHVyZSB3YXMgbm90IHNlYXJjaGVkLCByZXN1bHRpbmcgaW4gcG9zc2libGUgcHVibGljYXRpb24gYmlhcy4gCk1hbWFSYWlrb0ZhbiB1CjQuIEluZGl2aWR1YWxzIHdobyBwbGF5IG9ubGluZSBwb2tlciBhbHNvIG5lZWQgbm90IHdvcnJ5IGFib3V0IHRyYW5zcG9ydGF0aW9uLCB0aXBwaW5nIGRlYWxlcnMgYW5kIGZvb2Qgc2VydmVycyBpbiBjYXNpbm9zLCBhbmQgdGhlIGxpa2VzLiAKMTYgMTgpIFBva2VyIEZhY2UvSnVzdCBEYW5jZS8gRWgsIEVoIChOb3RoaW5nIEVsc2UgSSBDYW4gU2F5KSBmcm9tICJUaGUgQ2hlcnJ5IFRyZWUgU2Vzc2lvbnMiIGZyb20gaVR1bmVzLiAKQW55IG1hZ2Ugd2l0aCBkdWFsY2FzdCAoSSB1c2VkIEF5YWthIGZvciBEQyBMaWJyYSArIEhvbHkgYi9jIG15IFRUZXJyYSB3YXMgaW4gZXhwZWRpdGlvbikKSnVzdCBmaW5kIHRoZSAnRGVwb3NpdCcgYnV0dG9uIG9uIHRoZSBob21lIHBhZ2UgYWJvdmUgdGhlIG1haW4gbWVudSBhbmQgc3BlY2lmeSB5b3VyIHByZWZlcnJlZCBtZXRob2QuIApUaGUgbWFpbiBkaWZmZXJlbmNlIEkgc2VlIG5vdyBpcyBpZiBJIGZvcmdldCB0byB0YWtlIHRoZSBwaWxscyBhKSBzZXJpb3VzIHdpdGhkcmF3YWwgc3ltcHRvbXMgKHB1a2luZywgYnJhaW4gemFwcywgZmVlbGluZyBkaXp6eSwgZXRjLikgYnV0IGFsc28gSSBiZSBpbiB0ZWFycyBieSB0aGUgYWZ0ZXJub29uLCBzbyBteSBib2R5IGhhcyBkZWZpbml0ZWx5IGNvbWUgdG8gcmVseSBvbiBpdCBzaW5jZSBJIGNhbiBmZWVsIHRoZSBmYWxsb3V0IHdpdGhvdXQgdGhvc2UgY2hlbWljYWxzLiAKU2hlIGdldHMgcmVhbGx5IGh5cGVkIHVwLiBUaGVyZSBhIHBsYW5uaW5nL2VuZ2luZWVyaW5nIGFzcGVjdCB0byB0aGlzIGFzIHlvdSBpbmV2aXRhYmx5IHdpbGwgZmFpbCBhIGxldmVsLCB3aGljaCBpcyBmdW4uIFNoZSBhIG11Y2ggbW9yZSBvcmdhbml6ZWQgcGxhbm5pbmcgb3JpZW50ZWQgcGVyc29uYWxpdHkuIApTdWJleCB1c2VzIE5pdHJveCBmb3IgZXZlcnkgZGl2ZS4gSSBoYXZlIG5ldmVyIGJlZW4gZGl2aW5nIGluIE1hcnNhIEFsYW0gYnV0IGZyb20gd2hhdCBJIGhlYXJkIHRoZSBkaXZlIGNlbnRlcnMgYXJlIGFsbCBxdWl0ZSBzaW1pbGFyIGFuZCBkbyBhIGxvdCBvZiBib2F0IHRyaXBzLiBLZWVwIGluIG1pbmQgdGhpcyBpcyBhbGwgYmFzZWQgb24gcGVyc29uYWwgZXhwZXJpZW5jZS4uIApCZWZvcmUgSSBzZWVuIG1vdGhlciEsIEkgdGhvdWdodCBvZiBFZGVuIExha2UgYXMgdGhlIG9uZSBmaWxtIHRoYXQgcGlzc2VkIG1lIG9mZiByb3lhbGx5IGJ1dCB0aGF0IEkgc3RpbGwgaGFkIHRvIGFkbWlyZSBmb3IgZG9pbmcgc28uIEJ1dCBtb3RoZXIhIHdhcyB0ZW4gdGltZXMgdGhhdC4gCkJhbmtyb2xsIG1hbmFnZW1lbnQgaXMgdmVyeSBpbXBvcnRhbnQuIApSZWxheCBhbmQgZW5qb3kgdGhlIHRpbWUsIG9yIGlmIHlvdSB3YW50IGdldCBhIGxpdHRsZSBzaWRlIGpvYiBmb3Igc29tZSBleHRyYSBjYXNoIHNvIHlvdSBjYW4gZW5qb3kgeW91cnNlbGYgYW5kIHBhcnR5IG9yIGRvIHdoYXRldmVyIHlvdSB3YW50IGZvciA2IG1vbnRocy4uIApJbiBtb3N0IHBva2VyIGdhbWVzIGEgdmFsaWQgd2lubmluZyBjb21iaW5hdGlvbiBvZiBjYXJkcywgY29uc2lzdHMgb2YgNSBjYXJkcy4gRm9yIGV4YW1wbGUgVGV4YXMgSG9sZCdFbSwgT21haGEgSGksIDcgQ2FyZCBTdHVkIGV0Yy4gClVuZCBkYXMgZ2FuemUgdm9yIGRlciBWT0IgU3RlbGxlIGdlZW5kZXQgaGF0LgpUaGVyZSBhcmUgYSBudW1lcm91cyBzaXRlcyB0aGF0IG9mZmVyIHlvdSBhIGNoYW5jZSB0byBwbGF5IGZyZWUgc2xvdCBnYW1lcy4gVGhlcmUgYXJlIG1hbnkgYmVuZWZpdHMgb2YgZnJlZSBzbG90cyBvbmxpbmUuIApJZiBJIGNvdWxkIGhpcmUgYWxsIG1pZGRsZSBhZ2VkIHdvbWFuIEkgd291bGQuIEVzcGVjaWFsbHkgdGhvc2UgdGhhdCBuZWVkIGEgam9iIGFuZCB3b3VsZCBzaG93IHVwIGFuZCB3b3JrIGhhcmQuIEkndmUgaGlyZWQgdW5kZXIgcXVhbGlmaWVkIHdvbWFuIHdobyBtZXJlbHkgZm9sbG93ZWQgdXAgYW5kIHNob3dlZCBtZSB0aGV5IHdhbnRlZCB0aGUgam9iIG92ZXIgbXVjaCB5b3VuZ2VyIHF1YWxpZmllZCBhcHBsaWNhbnRzLgonU2V4IHN1cnJvZ2F0ZXMnIHB1dCBwZXJzb25hbCB0b3VjaCBvbiB0aGVyYXB5ClRoaXMgZG9lcyBub3QgbmVlZCB0byBiZSBpbiBhIHJvdyBzbyBkb24gd29ycnkgYWJvdXQgaXQgbXVjaC4gClBsYXRmb3JtczogV2luZG93cyA4LCAxMCAuIE1vYmlsZSBvcGVyYXRpbmcgc3lzdGVtcywgc28geW91IGNhbiBhY3R1YWxseSBkb3dubG9hZCBhIGZ1bGwgZmxlZGdlZCB2ZXJzaW9uIG9mIE1pY3Jvc29mdCBXb3JkIHdpdGhvdXQgbmVlZGluZyB0byBnZXQgRXhjZWwsIFBvd2VyUG9pbnQsIGFuZCB0aGUgb3RoZXJzLiBCZWluZyB0aGUgZm91bmRlciBhbmQgYWRtaW4gb2YgR2V0IEludG8gUEMgICBEb3dubG9hZCBGcmVlIFlvdXIgRGVzaXJlZCBBcHAgaSBiZWxpZXZlIGluIHVzZXIgZXhwZXJpZW5jZSAuIApQb29yIEFtZXJpY2Fucywgd2hvIGFyZSBhbHNvIGRpc3Byb3BvcnRpb25hdGVseSBub253aGl0ZSBBbWVyaWNhbnMsIGhhZCBuZWl0aGVyIHRoZSB0aW1lLCB0aGUgbW9uZXksIG5vciB0aGUgZWR1Y2F0aW9uYWwgcmVzb3VyY2VzIHRvIHB1c2ggYmFjayB0aGUgd2F5IG1hbnkgbWlkZGxlIGNsYXNzIEFtZXJpY2FucyBkaWQuIFRoZSByZXN1bHQgaXMgdGhhdCBvYmVzaXR5IGlzIG5vdCByYW5kb21seSBkaXN0cmlidXRlZCB0aHJvdWdoIHRoZSBwb3B1bGF0aW9uLiBJbnN0ZWFkLCBvYmVzaXR5IGlzIGFib3V0IGNsYXNzICBhbmQgdGhlcmVmb3JlIHJhY2UuCkkgdGhpbmsgd2UgYWxzbyBoYWQgcGhvbmVzIGF2YWlsYWJsZSB0aGF0IHBhcnRpY2lwYW50cyBhbmQgYXR0ZW5kYW50cyBjb3VsZCB1c2UgdG8gY2FsbCBwZW9wbGUgeW91IGtub3cgdG8gYXNrIHRoZW0gdG8gZG9uYXRlLiAKVHJ1ZGVhdSBzYWlkLCBJIGdvaW5nIHRvIHJldGlyZSBhbmQgSSBsaWtlIHlvdXIgaGVscCBpbiB0YWxraW5nIGFib3V0IHNvbWUgb2YgdGhlIGRldGFpbHMsIEJyYWR5IHJlY2FsbGVkLiAKV2UndmUgYmVlbiB3b3JraW5nIGhhcmQgb24gdGhpcyBOZXdzZGF5IGNyb3Nzd29yZCBwdXp6bGUsIGFuZCBhZnRlciBnYXRoZXJpbmcgYWxsIG9mIHRoZSAuIApJIGhvcGluZyB0aGlzIG1pZ2h0IGJlIGEgZGV0ZXJyZW50LiBObyB3YXkuLiAKV2UgbWF5IHNoYXJlIGluZm9ybWF0aW9uIGluIHJlc3BvbnNlIHRvIGEgcmVxdWVzdCBmb3IgaW5mb3JtYXRpb24gaWYgd2UgYmVsaWV2ZSBkaXNjbG9zdXJlIGlzIGluIGFjY29yZGFuY2Ugd2l0aCwgb3IgcmVxdWlyZWQgYnksIGFueSBhcHBsaWNhYmxlIGxhdywgcmVndWxhdGlvbiwgbGVnYWwgcHJvY2VzcyBvciBnb3Zlcm5tZW50YWwgcmVxdWVzdCwgaW5jbHVkaW5nLCBidXQgbm90IGxpbWl0ZWQgdG8sIG1lZXRpbmcgbmF0aW9uYWwgc2VjdXJpdHkgb3IgbGF3IGVuZm9yY2VtZW50IHJlcXVpcmVtZW50cy4gVG8gdGhlIGV4dGVudCB0aGUgbGF3IGFsbG93cyBpdCwgd2Ugd2lsbCBhdHRlbXB0IHRvIHByb3ZpZGUgeW91IHdpdGggcHJpb3Igbm90aWNlIGJlZm9yZSBkaXNjbG9zaW5nIHlvdXIgaW5mb3JtYXRpb24gaW4gcmVzcG9uc2UgdG8gc3VjaCBhIHJlcXVlc3QuIApHYW1lIGlzIG9uZSBvZiBwdXJlIGNoYW5jZSwgd2l0aCBjYXJkcyBkZWxpdmVyZWQgZW50aXJlbHkgYXQgcmFuZG9tIGFuZCB1bmtub3dhYmxlIGJ5IHRoZSBbcGxheWVyXSBvciB0aGUgaG91c2UsIHJlYWQgdGhlIG9waW5pb24uIAoxLDQwIGZvciBhIGNvZmZlZSBpcyBhIG5vcm1hbCBwcmljZS4gSWYgdGhleSBkbywgdGhlbiBpdCByaWRpY3Vsb3VzLiAKV2hlbmV2ZXIgSSBtZXNzYWdlIGEgd29tYW4gSSBzdGFydCBvZmYgd2l0aC4gIkhpLCBteSBuYW1lIGlzIE5haWlraG8uIiBJIGZvbGxvdyB1cCB3aXRoIGEgcXVlc3Rpb24gYWJvdXQgc29tZXRoaW5nIG9uIHRoZWlyIHByb2ZpbGUgdGhhdCBjYXVnaHQgbXkgYXR0ZW50aW9uLCBhbiBhdHRlbXB0IGF0IGEgd2l0dHkgcmVtYXJrLCBvciBqdXN0IGFza2luZyBhYm91dCB0aGVtLiAKVGhlIDUwMCBzY2FyZWQgbWUgdGhlIGZpcnN0IGZldyByaWRlcywgdGhlIGRpZmZlcmVuY2UgaW4gcG93ZXIgYW5kIHNwZWVkIGF2YWlsYWJsZSBiZXR3ZWVuIHRoZSB0aHJlZSB3YXMgbGlrZSBuaWdodCBhbmQgZGF5LiAKSXQgaGFzIHNhaWQgb24gdGhlaXIgc2l0ZSB0aGF0ICJDYW5jZXIgaXMgcmFwaWRseSBvdmVydGFraW5nIG91ciBiZWxvdmVkIGJyZWVkLCIgYW5kIHRoZXkgcG9pbnQgdG8gY2FuY2VyIGluIHRoZSBicmVlZCBhcyBhICJkaXN0dXJiaW5nIHRyZW5kIi4KR2FtYmxpbmcgaGFzIGJlZW4gd2VsbCBsaWtlZCBieSBtb3N0IHBlb3BsZSBiZWNhdXNlIG9mIHRoZSBzaGVlciBlbnRlcnRhaW5tZW50IGFuZCBwbGVhc3VyZSB0byB3aW4gbW9uZXkuIApZYW5rZWVzMTAzMCB1CkF0IHRoZXNlIHNpdGVzIHBsYXllciBzYWZldHkgaXMgYWxzbyBvbmUgb2YgdGhlIHRvcCBwcmlvcml0aWVzIGFuZCB0aGV5IG9mZmVyIGZhc3QgYW5kIHJlbGlhYmxlIGRlcG9zaXRzIGFuZCBjYXNob3V0cy4gClRoYXQgc2FpZCwgdGhlcmUgdHdvIGNhdmVhdHMgdG8ga2VlcCBpbiBtaW5kLiAKQXMgZm9yIG90aGVyIG9wdGlvbnMsIHRoZSBzdXJmYWNlIGJvb2sgc2VlbXMgbmljZSBhbHRob3VnaCBJIHByZWZlciB0aGUgMzYwIGhpbmdlIG9mIG1vc3QgY29udmVydGlibGVzIG92ZXIgdGhlIGRldGFjaGFibGUgc2NyZWVuLiBJIGd1ZXNzIGl0IG1pZ2h0IGJlIG1vcmUgZmF2b3JhYmxlIGlmIHlvdSB3YW50IHRvIHVzZSBpdCBhcyBhbiBhY3R1YWwgdGFibGV0LiBpZGsgYWJvdXQgYW55IGlzc3VlcyB3aXRoIGl0IHRob3VnaC4gSSBoZWFyZCB0aGUgZmlyc3QgZ2VuIGhhZCBzb21lIHNvZnR3YXJlIGlzc3Vlcy4gcmVwYWlyYWJpbGl0eSBzdWNrcyB0b28uCk5ldyBoZW1wIHNwYSBpbiBMb25nbW9udCBzYWlkIHRvIGJlIGZpcnN0IG9mIGl0cyBraW5kCkluIHRoZSBlbmQsIGl0IHdhcyBnb29kIGZvciBib3RoIHBhcnRpZXMgdGhhdCB0aGVyZSB3YXMgYSBubyBkZWFsLiBUaGlzIGlzIGFub3RoZXIgbG9uZyBzdG9yeSBidXQgQm9sdG9uIGluY2x1c2lvbiB0byB0aGUgdGFibGUgbWVhbnQgdGhhdCBzZWVtaW5nbHkgaW5ub2NlbnQgaW5xdWlyaWVzIGludG8gTksgaGlkZGVuIG51Y2xlYXIgZmFjaWxpdGllcyBoYWQgdGhlIGNoYW5jZSB0byBibG93IHVwIGludG8gZnVsbCBvbiBhY2N1c2F0aW9ucyBvZiBkZWNlaXQsIGxpa2UgaXQgZGlkIGluIHRoZSBwYXN0IGluc3RhbmNlcy4gTm9ydGggS29yZWEgd2FzbiByZWFkeSB0byBjb25maXJtIG9yIGRlbnkgdGhlIGV4aXN0ZW5jZSBvZiB0aGVzZSBoaWRkZW4gZmFjaWxpdGllcyAgIHRoZXJlIHdlcmUgaGVyZSB0byBkaXNjdXNzIFlvbmdieW9uIG9ubHkuIE5vcnRoIEtvcmVhIGNvdWxkbiBhZmZvcmQgdG8gY3V0IHRhbGtzIGFsdG9nZXRoZXIsIHNvIHRoZSBzdW1taXQgZW5kZWQgaW4gZ29vZCB0ZXJtcy4gVGhlIGJhbGwgZ290IHBhc3NlZCB0byBLaW0gdG8gY29tZSB1cCB3aXRoIGJldHRlciBkZW51a2Ugb2ZmZXJpbmdzLCBzbyBJIGNvbnNpZGVyIHRoaXMgbm8gZGVhbCBzb21ld2hhdCBvZiBhIHN1Y2Nlc3MgICBmb3IgQW1lcmljYW4gaW50ZXJlc3RzLiBJdCBhIHNoYW1lIHRob3VnaCB0aGF0IFNvdXRoIEtvcmVhIGlzIGxlZnQgd2l0aCBub3QgbXVjaCBvcHRpb25zIGF0bS4gSW50ZXIgS29yZWFuIGFjdGl2aXR5IHNob3VsZCBiZSBleGVtcHRlZCBmcm9tIHNhbmN0aW9ucyBhc2FwIHRvIGZ1cnRoZXIgcGVhY2UsIGxvd2VyIHRoZSBjaGFuY2VzIG9mIHdhciBpbiB0aGUgbWVhbnRpbWUuClNjaWVuY2UgaGFzIGEgbmFtZSBmb3IgTWF0dCdzIHByb2JsZW0sIG9uZSB0aGF0IHNvdW5kcyBib3RoIHN0ZXJpbGUgYW5kIGp1ZGdtZW50YWw6IHByZW1hdHVyZSBlamFjdWxhdGlvbi4gQXMgYSBzdHVkeSBpbiB0aGUgQXJjaGl2ZXMgb2YgU2V4dWFsIEJlaGF2aW9yIG5vdGVzLCBQRSBpcyB0aGUgbW9zdCBjb21tb24gbWFsZSBzZXh1YWwgZHlzZnVuY3Rpb24uIEFjY29yZGluZyB0byBlc3RpbWF0ZXMsIHNvbWV3aGVyZSBiZXR3ZWVuIDIwIHBlcmNlbnQgYW5kIDMwIHBlcmNlbnQgb2YgbWVuIGV4cGVyaWVuY2UgaXQsIHdpdGggbWFueSBtZW4gZG9pbmcgYWxtb3N0IGFueXRoaW5nIHRvIGxhc3QgbG9uZ2VyIGluIHRoZSBzYWNrLiBUaG9zZSB3ZSBzcG9rZSB3aXRoIHNhaWQgdGhleSd2ZSBkb3duZWQgYmVlcnMsIHVuZGVyZ29uZSBoeXBub3NpcywgYW5kIGV2ZW4gdGllZCBlbGFzdGljIGJhbmRzIGFyb3VuZCB0aGVpciBwZW5pc2VzLgpJIGhhdmUgYmVlbiBpbiBTaGFuZ2hhaSBmb3IgYWJvdXQgYSBtb250aCBhbmQgd2FzIGxvbmVseSBhbmQgZHJ1bmsgb25lIG5pZ2h0LiBBIGd1eSBhcHByb2FjaGVkIG1lIGFza2luZyBmb3IgYSBtYXNzYWdlLiBUb2xkIGhpbSBJIHdhcyBnYXkgYW5kIGhlIHNhaWQgaGUgaGFkIG1lbiB0b28uIApGb3IgZXhhbXBsZSwgeW91ciBvcHBvbmVudCBoYXMgSmMsIEpoLiBZb3UgaGF2ZSBRZCwgS2QgYW5kIGFyZSB0aGUgZGVhbGVyLiBZb3VyIG9wcG9uZW50IHJhaXNlZCAkMjAgYmVmb3JlIHRoZSBmbG9wIGFuZCB5b3UgY2FsbGVkLiBUaGUgZmxvcCBzaG93cyAyZCwgM2QsIDVkLiBZb3UgYm90aCBjaGVjayB0aGUgZmxvcCBhbmQgdGhlIHR1cm4gc2hvd3MgOGMuIFlvdXIgb3Bwb25lbnQgY2hlY2tzLCB5b3UgcmFpc2UgJDIwIGFuZCB0aGV5IGNhbGwuIE9uIHRoZSByaXZlciB0aGUgSnMgY29tZXMgdXAgYW5kIHlvdXIgb3Bwb25lbnQgcmFpc2VzICQ1MC4gRnJvbSB3YXRjaGluZyB5b3UgZmlndXJlIHRoZXkgbWF5IGhhdmUgdHJpcHMuIFlvdSByYWlzZSB0byAkMTAwLCB0aGV5IGNhbGwgYW5kIHlvdSB3aW4gd2l0aCBhIEtpbmcgaGlnaCBmbHVzaC4gSGFkIHlvdSBiZWVuIGluIHlvdXIgb3Bwb25lbnRzIHBvc2l0aW9uIG9mIGhhdmluZyB0byBiZXQgZmlyc3QsIHlvdSB3b3VsZCBoYXZlIGJlZW4gaGFyZCBwcmVzc2VkIHRvIGZpZ3VyZSB3aGF0IHRoZSBkZWFsZXIgaGFkLgpQcC4gMjkxIDMxNkJhY2tncm91bmQ6IFRoZSBjb2duaXRpdmUgc2tpbGxzIHJlcXVpcmVkIGR1cmluZyBzcG9ydCBhcmUgaGlnaGx5IGRlbWFuZGluZzsgYWNjdXJhdGUgZGVjaXNpb25zIGJhc2VkIG9uIHRoZSBwcm9jZXNzaW5nIG9mIGR5bmFtaWMgZW52aXJvbm1lbnRzIGFyZSBtYWRlIGluIGEgZnJhY3Rpb24gb2YgYSBzZWNvbmQgKFdhbHNoLCAyMDE0KS4gT3B0aW1hbCBkZWNpc2lvbiBtYWtpbmcgYWJpbGl0aWVzIGFyZSBjcnVjaWFsIGZvciBzdWNjZXNzIGluIHNwb3J0aW5nIGNvbXBldGl0aW9uIChCYXIgRWxpIGV0IGFsLiwgMjAxMTsgS2F5YSwgMjAxNCkuIE1vcmVvdmVyLCBmb3IgdGhlIGVsaXRlIGF0aGxldGUsIGRlY2lzaW9uIG1ha2luZyBpcyByZXF1aXJlZCB1bmRlciBjb25kaXRpb25zIG9mIGludGVuc2UgbWVudGFsIGFuZCBwaHlzaWNhbCBwcmVzc3VyZSAoQW5zaGVsIGFuZCBXZWxscywgMjAwMCksIHlldCBtdWNoIG9mIHRoZSB3b3JrIGluIHRoaXMgYXJlYSBoYXMgbGFyZ2VseSBpZ25vcmVkIHRoZSBoaWdobHkgc3RyZXNzZnVsIGNvbnRleHQgaW4gd2hpY2ggYXRobGV0ZXMgb3BlcmF0ZS4gCkV2ZXJ5IHNpbmdsZSBkb2xsYXIgYSBDRU8gZWFybnMgd291bGQgbm90IGV4aXN0IHdpdGhvdXQgc29tZW9uZSBkb2luZyB0aGUgam9iIG9uIHRoZSBncm91bmQgbGV2ZWwuIFRoZSBDRU8gYW5kIGJvYXJkIGFyZSBub3QgZXNzZW50aWFsLiBNYW5hZ2VtZW50IGRvIG1vcmUgaGFybSB0aGFuIGdvb2QgYmVjYXVzZSB0aGV5J3JlIHRoZXJlIHRvIGtlZXAgbGFib3Igd29ya2luZyBoYXJkIGZvciB0aGUgc2FrZSBvZiBwcm9maXQuIE1hbmFnZW1lbnQgc2hvdWxkIGJlIGVsZWN0ZWQgZnJvbSB0aGUgd29ya2VycyBmb3IgdGhlIHNha2Ugb2YgYmVpbmcgZ29vZCBhdCBsZWFkZXJzaGlwIGFuZCBmYWNpbGl0YXRpbmcgdGhlIGpvYiBvZiB0aGUgd29ya2VyLgpGb3IgaW5zdGFuY2UsIGlmIGFuIGFnZW5jeSBtYWlsZWQgYSBsZXR0ZXIgdG8gYSBjbGllbnQgY2xhaW1pbmcgaXQgZGlkIG5vdCBlbmdhZ2UgaW4gaW1wcm9wZXIgbWVkaWEgYnV5aW5nIGJlaGF2aW9yLCBhbmQgdGhlIEZCSSBjYW4gcHJvdmUgaXQgaW5kZWVkIGRpZCwgdGhhdCBjb3VsZCBhbW91bnQgdG8gbWFpbCBmcmF1ZCwgV29vZCBzYWlkLiBFbWFpbCBjb21tdW5pY2F0aW9ucyBjb3VsZCByZXN1bHQgaW4gd2lyZSBmcmF1ZCBjaGFyZ2VzLiAKSXQgd2FzIGV4dHJlbWVseSBzcGFjaW91cyBhbmQgZXZlcnkgY29tcGV0aXRvciBoYWQgdGhlaXIgb3duIHRhYmxlIHdpdGggY29tZm9ydGFibGUgY2hhaXJzLiBUaGUgZ3JvdW5kcyB3ZXJlIGJlYXV0aWZ1bCBhbmQgdGhlcmUgd2FzIGEgc3BhLCBhIHBvb2wgb3Igd29vZGxhbmQgdG8gZXhwbG9yZSBiZXR3ZWVuIHJvdW5kcy4gClRoZXNlIHN1YmVsaXRlIGF0aGxldGVzIHdlcmUgZW5yb2xsZWQgb24gYSBUZWFtIEdCIHRhbGVudCBkZXZlbG9wbWVudCBwcm9ncmFtIGFuZCB3ZXJlIHVuZGVyZ29pbmcgdHJhaW5pbmcgZm9yIHBvc3NpYmxlIE9seW1waWMgY29tcGV0aXRpb24gaW4gNCA4IHllYXJzLiAKV2h5IGlzIHRoaXMgaW1wb3J0YW50PyBXZWxsIGlmIEkgbG9vayBkb3duIGF0IHNpeGVzIGFuZCBvbGQgbWFuIGNvZmZlZSBpcyBkZWVwIHN0YWNrZWQgYW5kIDNiZXQgbWUgSSBnb2luZyB0byBzZXQgbWluZS4gCkVtaWxpZSBMYWxpYmVydGUsIHRoZSBoZWFkIG9mIGEgTW9udHJlYWwgc2V4IHRyYWRlIHN1cHBvcnQgYW5kIGFkdm9jYWN5IGdyb3VwIHNheXMgdGhlIHRpbWluZyBvZiBzdWNoIGFjdGlvbnMgaXMgbm8gY29pbmNpZGVuY2UsIHdpdGggdGhlIFN1cHJlbWUgQ291cnQgcnVsaW5nIGxvb21pbmcuCjEwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKVGhlIHZpZGVvcyBhaWQgeW91IGZvcmV0ZWxsIHRoZSBzb2NpZXR5IG9mIEhvbG1lcyBhbmQgZm9jdXMgb24gZGV0YWlscyBhbHNvIGhpc3RvcmljYWwgd2hvbGUgc3RvcnkgdGhhdCBmYXJ0aGVyIGFsb25nIGltbWVyc2UgdGhlIHB1YmxpYyBpbiBvdXIgb3duIG15c3RlcnkuIApUcnVtcCBtYXkgbm90IGJlIGFsbCB0aGF0IG1hdHVyZSwgYnV0IGF0IGxlYXN0IGhlIGRpZG4gc3RlYWwgZnJvbSB0aGUgV2hpdGUgSG91c2Ugbm9yIGxpZWQgYWJvdXQgc29tZXRoaW5nIGhhcHBlbmluZyB3aGVuIGhlIGtuZXcgaXQgaGFwcGVuZWQuIApNYW5nYXJvb2JvbyB1CkdyZXlwbyBPdXIgTG9yZCBhbmQgU2F2aW91ciB1CllvdSBzdGFydCBieSBkcmF3aW5nIGNhcmRzLiBUaGVyZSBpcyBhIHJpdmVyIGFuZCBhIGJyaWRnZS4gCkxpbmtlZCBzZXJ2aWNlcy4gTGlua2luZyBzZXJ2aWNlcyBtYXkgYWxzbyBjYXVzZSB0aGUgb3RoZXIgc2VydmljZSB0byBzZW5kIHVzIGluZm9ybWF0aW9uIGFib3V0IHlvdXIgYWNjb3VudCB3aXRoIHRoYXQgc2VydmljZS4gVG8gbGVhcm4gaG93IGluZm9ybWF0aW9uIGlzIHNoYXJlZCB3aXRoIGxpbmtlZCBzZXJ2aWNlcywgc2VlICJIb3cgSW5mb3JtYXRpb24gQWJvdXQgWW91IElzIFNoYXJlZCIgYmVsb3cuClNlY29uZDogdGhlIGVtb3Rpb25hbCBjb250cm9sIGl0IHRha2VzIHRvIGJlYXQgaXQgY29uc2lzdGVudGx5IG92ZXIgdGltZS4gRmlnaHRpbmcgdGhlIHVyZ2UgdG8gZ2FtYmxlLiBIYXZpbmcgdGhlIGRyaXZlIHRvIGdvIHNpdCB0aGVyZSBhdCBhIHRhYmxlIGZvciBob3VycyBhbmQgaG91cnMgYSB3ZWVrIHdpdGhvdXQgZ2V0dGluZyBib3JlZCwgdGlsdGVkLCBzdHJlc3NlZCwgZXRjLiAKSSB1bmRlcnN0YW5kIHBlcmZlY3RseSB3ZWxsIHRoZSBpZGVhIHRoYXQgVHlwZVNjcmlwdCBjb21tdW5pY2F0ZXMgaW50ZW50IGFuZCB0aGF0IGlzIG9uZSBvZiBpdHMgbWFqb3Igc2VsbGluZyBwb2ludHMuIFRoZSBvdGhlciBwb2ludCB0aGF0IHlvdSBkaXNtaXNzaW5nIGlzIGFsc28gb25lIG9mIFR5cGVTY3JpcHQgbWFqb3Igc2VsbGluZyBwb2ludHMsIGFzIGlzIHRoZSBhYmlsaXR5IHRvIGNvcnJlY3QgcHJvYmxlbXMgYXMgeW91IGNvZGluZyBiZWNhdXNlIG9mIHR5cGUgbWlzbWF0Y2ggZXJyb3JzLCBhcyBpcyBlbmhhbmNlZCBJREUgc3VwcG9ydC4gCldoZW4gdGhleSBmaXJzdCByZWxlYXNlZCBzdHVmZiBJIHJlYWxseSBlbmpveWVkIGl0LCBlc3BlY2lhbGx5IHdoaXN0bGUgYW5kIGJvb21iYXlhaC4gCkl0IGlzIHN0aWxsIGEgY29vbCBjb3Zlciwgbm9uZXRoZWxlc3MuLiAKSSBzdXJwcmlzZWQgdG8gc2VlIHNvIG1hbnkgcGVvcGxlIGluIGhlcmUgYmVuZWZpdGluZyBmcm9tIHRoZW0uIEkgdHJ1bHkgYmVsaWV2ZSB5b3UgaGF2ZSB0byBoYXZlIGZhaXRoIHRoYXQgd2hhdCB5b3VyIHRha2luZyB3aWxsIHdvcmsgd2hlbiB5b3UgdGFraW5nIGFuIFNTUkkuIApUaGVzZSB0d28gdHlwZXMgb2YgYXVjdGlvbnMgYXJlIHZlcnkgc2ltaWxhciwgeWV0IGFyZSBjb21wbGV0ZWx5IGRpZmZlcmVudC4gCk5ldmVyIGxldCBzb21lb25lIGVsc2UgYXNzaWduIHlvdXIgaWRlbnRpdHkgdGhhdCB0byB5b3UuIE15IGhlYXJ0IHdhcyBhbGl2ZSBhbmQgdHJhcHBlZCB3aXRoaW4gdGhlIHdhbGxzIHNjcmVhbWluZyBmb3Igd2hhdCBpdCB0cnVseSB3YW50ZWQsIGJ1dCBpdCB3YXMgc3RpbGwgbm90IHRoZSBwbGFjZSBJIHdhcyBpbiB3aGVuIGludGVyYWN0aW5nIHdpdGggbWVuLiAKSW4gdGVybXMgb2YgZmVhdHVyZXMsIGl0IGlzIHdhYWFheSBiZWhpbmQgZXZlcnl0aGluZyBlbHNlLiAKIkl0J3MgYSBwbGFjZSB3aGVyZSBhIGxvdCBvZiBraWRzIGhhdmUgb3ZlciBtYW55IHllYXJzIGhhZCBhIHBsYWNlIHRvIGdvIGFuZCBhIHBsYWNlIHRvIGJlIGdpdmVuIHRoZSBwcm9wZXIga2luZCBvZiBlbmNvdXJhZ2VtZW50IGFuZCBzb21lIHZlcnkgcG9zaXRpdmUgYWN0aXZpdGllcyBhbmQgdGhhdCdzIHdoeSBJIHN0ZXBwZWQgaW4gYXMgbWF5b3IuIgpJcyB0aGVyZSBhIGNoZWF0IGZvciBUZXhhcyBob2xkIGVtIHBva2VyIGZvciBNeVNwYWNlIGhpNSBvciBiZWJvCkRhbnMgY2VzIHRleHRlcyAgIExlIGhhY2hpY2ggKDE4NDMpLCBMZSBjbHViIGRlcyBoYWNoaWNoaW5zICgxODQ2KSAgIEdhdXRpZXIgcmVsYXRlIGxlIGZydWl0IGRlIHNlcyBleHByaWVuY2VzIGF1IHNlaW4gZHUgQ2x1YiBkZXMgSGFzY2hpc2NoaW5zIGZvbmQgcGFyIGxlIGRvY3RldXIgTW9yZWF1IGRlIFRvdXJzIGVuIDE4NDQsIGV0IGF1cXVlbCBjZXQgYXV0cmUgaWxsdXN0cmUgcG90ZSBxdSBDaGFybGVzIEJhdWRlbGFpcmUgcGFydGljaXBhIChkZSBtbWUgcXUgRGVsYWNyb2l4LCBHcmFyZCBkZSBOZXJ2YWwsIEFsZXhhbmRyZSBEdW1hcywgR3VzdGF2ZSBGbGF1YmVydCwgSG9ub3IgZGUgQmFsemFjLCBldGMuKS4gRGUgbW1lIHF1ZSBHYXV0aWVyLCBCYXVkZWxhaXJlIGFib3JkZSBhdXRhbnQgbGUgaGFzY2hpc2NoIHF1ZSBsIGVuIHBhcnRpY3VsaWVyIGRhbnMgTGVzIHBhcmFkaXMgYXJ0aWZpY2llbHMgKDE4NjApLiAKVGhlIDI3IEZlYiAxOTE1IGlzc3VlIG9mIFRoZSBJbGx1c3RyYXRlZCBMb25kb24gTmV3cyBpcyByZW1hcmthYmxlLiAKU3Rlbm5pc2wgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvClRoZSBpbXBvcnRhbmNlIG9mIHRoZSB0aXNzdWUgYnJpZGdlIGlzIG9mIGNvdXJzZSBiZWluZyBkZWJhdGVkLiBJdCBpcyBrbm93biB0aGF0IHRoZSBkdXJhIHN1cnJvdW5kaW5nIHRoZSBzcGluYWwgY29yZCBhbmQgYnJhaW4gaXMgZXh0cmVtZWx5IHNlbnNpdGl2ZS4gV2hhdCBoYXMgYmVlbiBwb3N0dWxhdGVkIGlzIHRoYXQgdGhpcyBicmlkZ2UgaXMgZGVzaWduZWQgdG8ga2VlcCB0aGUgZHVyYSBmcm9tIGJ1Y2tsaW5nLCB3aGljaCB3b3VsZCB0aGUgZmxvdyBvZiBjZXJlYnJvc3BpbmFsIGZsdWlkIGFuZCBjYXVzZSBwYWluLi4gCkhlIGhhcyBmb3VuZCB0aGF0IHdoZXJlIHJlZCBtYXkgaGluZGVyIHBlcmZvcm1hbmNlLCBncmVlbiBhbmQgYmx1ZSBjYW4gZW5jb3VyYWdlIGNyZWF0aXZpdHkgaW4gY2VydGFpbiBraW5kcyBvZiB3b3JkIGdhbWVzLiBFdmVuIHNvLCBFbGxpb3Qgc3VzcGVjdHMgdGhhdCB0aGVpciBpbmZsdWVuY2Ugd2lsbCBiZSBmYWlybHkgbGltaXRlZCwgY29tcGFyZWQgdG8gdGhlIHBvdGVudCBlZmZlY3QgdGhhdCByZWQgaGFzIG92ZXIgb3VyIGJlaGF2aW91ci4uIAoiSWYgdGhpcyBwZXJzb24sIHdobyBpcyBteSBicm90aGVyLCBjb3VsZCB3aWxsaW5nbHkgYW5kIGtub3dpbmdseSB3YWxrIGludG8gbXkgcGFyZW50cycgaG91c2UgYW5kIGJlYXQgdGhlbSBhbmQgc2xpY2UgdGhlbSB1bnRpbCB0aGV5IHdlcmUgZGVhZCwgaGUnZCBoYXZlIG5vIHF1YWxtcyB3YWxraW5nIGludG8gbXkgaG91c2UgYW5kIGRvaW5nIHRoYXQgdG8gbXkgZmFtaWx5LCAiIHNhaWQgQ2F0aGVyaW5lIFNjaGVyZXIuIENhdGhlcmluZSwgbGl2aW5nIGluIFV0YWgsIHdhcyBub3cgYWZyYWlkIG9mIGhlciBicm90aGVyLiAKQmV0dGluZyBpcyByZXF1aXJlZCBhcyBlYWNoIHBsYXllciBuZWVkcyB0byBzdGF5IGluIHRoZSBwb3QgaW4gb3JkZXIgZm9yIHRoZWlyIGhhbmQgdG8gY291bnQuIApNYXNvbiBzaWduZWQgdXAgZm9yIGEgTWlsbGlvbmFpcmUgTWluZHNldCBzZW1pbmFyIHdoZXJlIGhlIGhpdCBvbiB0aGUgaWRlYSB0byBzdGFydCBhIGNvbXBhbnkgbWFraW5nIGRlbmltIHNub3dib2FyZCBwYW50cyBzb21ldGhpbmcgaGUgaGFkIGJlZW4gdHJ5aW5nIHRvIGZpbmQgZm9yIHllYXJzLi4gClZpZGVvIHBva2VyIGlzIHNlZW4gYnkgbWFueSBhcyBhIGNvbWJpbmF0aW9uIG9mIHNsb3RzIGFuZCBwb2tlci4gVmlkZW8gcG9rZXIgZmVhdHVyZXMgYSBzbG90IGxpa2UgbWFjaGluZSBvbiB3aGljaCBwbGF5ZXJzIHRyeSB0byBnZXQgYXMgZ29vZCBhcyBwb3NzaWJsZSBwb2tlciBoYW5kIGFuZCBlYXJuIHZhbHVhYmxlIHByaXplcy4gVGhpcyBpbnRlcmVzdGluZyBnYW1lIGlzIGZlYXR1cmVkIGF0IG1hbnkgbGFuZCBiYXNlZCBjYXNpbm9zLCBidXQgYWxzbyBpdCBjYW4gYmUgcGxheWVkIG9ubGluZSBhdCBhIGh1Z2UgbnVtYmVyIG9mIG9ubGluZSBnYW1ibGluZyBzaXRlcy4KSSdtIGEgeW91bmcgYWR1bHQgYW5kIG5lZWQgbXkgb3duIGxpZmUuIApSZWdhcmRpbmcgdGhlIHNjZW5pYyB2aWV3LCBoZSBzYWlkIGhlIGRpZG4ga25vdyAiaG93IHlvdSBjb3VsZCBlbmpveSBzb21ldGhpbmcgYmV0dGVyIHRoYW4gdGhhdC4iClRoZSBjYXNpbm8gbWFuYWdlciBpcyB3YXRjaGluZyB0aGUgc2hpZnQgYm9zc2VzLiAKR29rb2d0Mzg2IHUKQSBmZXcgbW9udGhzIGxhdGVyIGhlIGNvbWVzIG92ZXIgYW5kIHRlbGxzIG1lIGhlIGlzIG9uIGhpcyB3YXkgaG9tZSBhbmQgaGUgaXMgZ29pbmcgdG8gYnJlYWsgdXAgd2l0aCBoZXIgYW5kIHdhbnRzIHRvIGtub3cgaWYgaGUgaGFkIGEgY2hhbmNlIGtub3dpbmcgdGhlIGxhc3QgZ3V5IGFuZCBJIGRpZG4gd29yayBvdXQuIEkgdG9sZCBoaW0gSSBkaWRuIHRoaW5rIHNvIGJ1dCB3ZSBjb3VsZCB0YWxrIGFmdGVyLiBXZWxsIGhlIGRvZXMgYnJlYWt1cCB3aXRoIGhlciBidXQgYmVmb3JlIHdlIGNvdWxkIHNlZSBlYWNoIG90aGVyIGFnYWluIEkgbWV0IHRoaXMgb3RoZXIgZ3V5IHdobyBJIGFic29sdXRlbHkgZmVsbCBmb3IgdGhlIG5pZ2h0IEkgbWV0IGhpbS4gClRoYXQgd2FzIGEgcmVhbGx5IGludGVyZXN0aW5nIGFydGljbGUuIEp1c3QgdG8gYWRkIHRvIHRoZSBkaXNjdXNzaW9uLCBJIGhhdmUgdGFsa2VkIGFib3V0IHRoaXMgYmVmb3JlIHdpdGggYSBjb3VwbGUgb2YgcGVvcGxlLiBVbmZvcnR1bmF0ZWx5IEkgZG9uIGhhdmUgdG9vIG1hbnkgYmxhY2sgZnJpZW5kcywgSSBsaXZlIGluIGEgcHJlZG9taW5hbnRseSB3aGl0ZSBhcmVhLiAKVG95cyBmb3IgVG90cyBpcyB0aGUgTWFyaW5lIENvcnBzIG5hdGlvbndpZGUgb3JnYW5pemF0aW9uIHRoYXQgc3RhcnRlZCBpbiAxOTI3LiBJdGRpZCBub3QgaGF2ZSBhIGNoYXB0ZXIgaW4gU291dGhlcm4gVXRhaCB1bnRpbCByZXRpcmVkIE1hcmluZSBHeS4gU2d0LiBUaGUgbnVtYmVyIG9mIHRveXMgY29sbGVjdGVkIGdyZXcgZnJvbSBodW5kcmVkcyB0byB0aG91c2FuZHMgYWZ0ZXIgTWFzc2V5IGJlZ2FuIGNvb3JkaW5hdGluZyB0aGUgZWZmb3J0LgpUaGUgUmVpZCBTdHJlZXQgcHJvcGVydHkgd2FzIHBhc3NlZCBmb3IgJDc4MCwwMDAsIGJ1dCBhZ2VudHMgR2FycnkgTmFzaCBDbyBjbGluY2hlZCBhIHNhbGUgdG8gYSBOb3J0aCBFYXN0IGludmVzdG9yIGZvbGxvd2luZyB0aGUgYXVjdGlvbi4KQW55d2F5IGR1cmluZyB3aGF0IHdhcyBxdWl0ZSBhbiBlcGljIGJvdXQsIEkgcGF1c2VkIGZvciBhIGZldyBzZWNvbmRzIGluIGJldHdlZW4gcG9zaXRpb25zIGFuZCBzaGUgaW1wbG9yZWQgbWUgdG8gbWEhICggb24hIEkgZmluYWxseSBjYW1lIHdoZW4gdGhlIHBhY2Ugc2xvd2VkIGFuZCBJIHJvZGUgaGVyIG1pc3Npb25hcnkgd2hpbGUgbG9va2luZyBhdCBoZXIgaW4gdGhlIG1pcnJvciBhdCB0aGUgaGVhZCBvZiB0aGUgYmVkLiBUaGVyZSB3YXNuIG11Y2ggdGltZSBsZWZ0IGZvciBwaWxsb3cgdGFsaywgZXZlbiB3aXRoIHRoZSBhbGxvdHRlZCAxMjAgbWludXRlcywgc28gYSBicmllZiBzaG93ZXIgYW5kIHRoZW4gaG9tZS4gCkkgaGFkIHRoYXQgcHJvYmxlbSBzbyBJIGNyZWF0ZWQgYSByYW5nZSBvZiArIDcgc2VjIG9uIHRoZSBnb2FsIHBhY2Ugc28gSSB3b3VsZCBoYXZlIGEgMTUgc2Vjb25kIGJ1ZmZlciByYW5nZS4gVGhpcyB3b3JrZWQgd2VsbCBmb3IgYWxsIDE4IHdlZWtzIG9mIG15IG1hcmF0aG9uIHRyYWluaW5nIHBsYW4uIFRoZSBiZXR0ZXIgdGhlIEdQUyBzaWduYWwsIHRoZSBiZXR0ZXIgeW91ciBhbGVydHMgd2lsbCBiZWhhdmUuIApUaGF0IGJlY2F1c2UgdGhlaXIgR29kIGlzIHBhcnQgb2YgdGhlaXIgaWRlbnRpdHkuIEFueSBhdHRhY2sgb24gdGhlaXIgaWRlbnRpdHkgaXMgYSBwZXJzb25hbCBhdHRhY2sgdG8gdGhlbS4gVGhpcyBjYW4gaGFwcGVuIHRvIHNvbWV0aGluZyBhcyBzaGFsbG93IGFzIGNob2ljZSBwcmVmZXJlbmNlLiBJIG1lYW4gSSB3b3VsZG4ga2lsbCBhbnlvbmUgb3ZlciBteSBvcGluaW9uIGJ1dCBpZiB5b3Ugc2F5IHRoYXQgQUxMIHBpenphIHN1Y2tzIHRoZW4gSSBtaWdodCBqdXN0IHN0b3AgaGFuZ2luZyBvdXQgd2l0aCB5b3UuIE5vdyB0YWtlIHRoaXMgcHJlZmVyZW5jZSB0byB0aGUgZXh0cmVtZSBhbmQgYWRkIHNvbWUgZG9nbWF0aXNtIHRoZW4geW91IGdvdCB5b3Vyc2VsZiBhIGNsYXNzaWMgIllvVXIgQXRUYUNrT25JekluRyBNZSIgYnkgdGhlbiBldmVuIG90aGVyIHBlb3BsZSBjaG9pY2UgcHJlZmVyZW5jZSBvZmZlbmRzIHRoZW0uIDEwIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KTWF5YmUgSSBwdXR0aW5nIHRvbyBtdWNoIHRob3VnaHQgaW50byB0aGlzICAgbm8sIEkgQU0gcHV0dGluZyB0b28gbXVjaCB0aG91Z2h0IGludG8gdGhpcyAgIGJ1dCBJIHJlYWxseSBsaWtlZCBYaW9uIGFuZCAzNTgsIGFuZCBJIG5vdCBhIGJpZyBmYW4gb2YgaG93IHRoZXkganVzdCBjYXN1YWxseSBoYW5kd2F2ZSBicmluZ2luZyB0aGVtIGJhY2sgbGlrZSB0aGV5IGRvLgpUaGUgdXNlIG9mIGVzc2VudGlhbCBvaWxzIGhlbHBzIHRvIGRpc3Bvc2Ugb2YgdGhlc2UgdG94aW5zIGFuZCB2aXJ1c2VzIHdpdGhpbiB0aGUgc3BpbmUsIGhlbHBpbmcgaXRzIHN0cnVjdHVyZSByZXR1cm4gdG8gbm9ybWFsLiAKVGhlIGFnZ3Jlc3NpdmVuZXNzIG9mIHRoZSBjYW5jZXIsIG5vdCBqdXN0IHRoYXQgaXQgYmVlbiBkZXRlY3RlZCBlYXJseSwgaXMgdGhlIHJlYWwgcXVlc3Rpb24uIElmIGl0IGEgc2xvdyBkZXZlbG9waW5nIGNhbmNlciwgeW91IG1pZ2h0IG5vdCBuZWVkIHRvIHdvcnJ5IGFib3V0IGl0IGJlY2F1c2UgeW91IGRpZSBvZiBvdGhlciBjYXVzZXMuIApBYm91dCAxMCB5ZWFycyBhZ28gSSB3YXMgd29ya2luZyAyIGpvYnMsIG9uZSBiZWluZyBhdCBhIFN1YndheSwgSSB3YXMgY2xvc2luZyB0aGVyZSBvbmUgbmlnaHQgdW50aWwgMTAgcG0gYW5kIEkgaGFkIGFscmVhZHkgd29ya2VkIG15IG90aGVyIGpvYiBhdCA3IGFtIGFuZCBoYWQgdG8gYmUgYmFjayBhdCBTdWJ3YXkgYXQgOSB0aGUgbmV4dCBtb3JuaW5nLiBJIHdhcyBmZWVsaW5nIGV4aGF1c3RlZCBhbmQgY29taW5nIGRvd24gd2l0aCBzb21ldGhpbmcgc28gSSBjYWxsZWQgdGhlIG93bmVyIGF0IFN1YndheSBhbmQgY2FsbGVkIGluIGZvciB0aGUgbmV4dCBkYXksIGhlciBhbmQgaGVyIGh1c2JhbmQgY2FtZSBpbiBhbmQgaGFkIG1lIHNpZ24gYSBwaWVjZSBvZiBwYXBlciBzYXlpbmcgdGhhdCBJIHF1aXQgb24gbXkgb3duIGFjY29yZCwgZXZlbiB0aG91Z2ggSSB3YXNuIHF1aXR0aW5nLCBqdXN0IGdpdmluZyB0aGVtIGEgMTIgaG91ciBub3RpY2UgSSBjb3VsZG4gYmUgaW4gdGhlIG5leHQgZGF5Li4gCkhvd2V2ZXIsIHlvdSByZWFsaXplIHRoYXQgeW91IGhhdGUgc2tpcHBpbmcgYnJlYWtmYXN0LiBTbyBub3cgeW91IGFkZCBicmVha2Zhc3QgYmFjayBpbiwgYnV0IHlvdSByZWFsaXplIHRoYXQgeW91IGhhdmUgdG8gc3VidHJhY3QgdGhvc2UgY2Fsb3JpZXMgc29tZXdoZXJlIGVsc2UuIApUaGUgYW5vbWFseSBjb21lcyBiZWNhdXNlIHRoZSBOU1cgR292ZXJubWVudCB3aWxsIHdvcmsgb2ZmIEF1c3RyYWxpYW4gQnVyZWF1IG9mIFN0YXRpc3RpY3Mgc3RhdGlzdGljYWwgem9uZXMgaW4gdGhlIGZ1dHVyZSwgcmF0aGVyIHRoYW4gbG9jYWwgZ292ZXJubWVudCBhcmVhcywgYWxsb3dpbmcgdGhlIGdvdmVybm1lbnR0byBmb2N1cyBvbiAidnVsbmVyYWJsZSIgbG9jYXRpb25zLiBUaGV5IGhhdmUgYmVlbiByYW5rZWQgYWNjb3JkaW5nIHRvIHRoZSBsaWtlbHkgcmlzayBvZiBnYW1ibGluZyByZWxhdGVkIGhhcm0gaW4gdGhlIGNvbW11bml0eSBmcm9tIGFkZGl0aW9uYWwgZ2FtaW5nIG1hY2hpbmVzLCB0aGUgZ292ZXJubWVudCBzYWlkLiAiTG9jYWwgY29tbXVuaXR5IGNhcHMgYXJlIGFuIGFwcHJvcHJpYXRlIHJlc3BvbnNlIHRvIGNvbmNlcm5zIHRoYXQgc29tZSBhcmVhcyBoYXZlIHRvbyBtYW55IGdhbWluZyBtYWNoaW5lcywiTWluaXN0ZXIgZm9yIFJhY2luZyBhbmQgQmF0aHVyc3QgTVAgUGF1bCBUb29sZSBzYWlkLiAKVGhlIGtyYWtlbiBsYWlkIHdhc3RlIHRvIG1vc3Qgb2YgdGhlIGNhc3RsZSBhbmQgYnVyaWVkIHdoYXQgcmVtYWluZWQgYXMgd2VsbCBhcyBjdXJzaW5nIHRoZSBpbmhhYml0YW50cyB0byB1bmRlYXRoIGJ1dCBkaWRuIGZpbmQgd2hhdGV2ZXIgaXQgaXMgdGhleSB3ZXJlIHdvcmtpbmcgb24uIFdoYXQgaXMgc29tZXRoaW5nIHRoZXkgY291bGQgYmUgd29ya2luZyBvbiB0aGF0IHdvdWxkIGJlIGEgbGVnaXRpbWF0ZSB0aHJlYXQgdG8gYSBiZWFzdCBvZiB0aGUgS3Jha2VuIG1hZ25pdHVkZT8uIApUaGlzIGhlbHBzIGNyZWF0ZSBhbiBvZmZpY2lhbCBwYXBlciB0cmFpbCBmb3IgdGhlIGNvdXJ0LiAKTkVTLCBTTkVTLCBONjQsIEdCQSwgYW5kIERTIGFsbCBoYXZlIGFtYXppbmcgbGlicmFyaWVzIGJ1dCB0aGUgV2lpIFUgY2FuIHBsYXkgdGhlIG1ham9yaXR5IG9mIHRoZWlyIGdyZWF0ZXN0IGhpdHMgdmlhIGl0cyBlc2hvcCwgYXMgd2VsbCBhcyBldmVyeSBXaWkgZ2FtZSBhbmQgYSBidW5jaCBvZiBXaWkgVSBjbGFzc2ljcy4gCkZvciBtZSwgZm9yIGNvb2tpbmchIHNoZSBzYXlzIG9mIHRoZSBsYXR0ZXIuIEltcG9ydGFudCB0byBidXkgZnJlc2ggZnJvbSBwZW9wbGUgdXNpbmcgbG9jYWwgaW5ncmVkaWVudHMuIApVc2UgdGhlIDQvMiBydWxlIHRvIGNhbGN1bGF0ZSB5b3VyIG9kZHMgb24gb25lIG9mIHRob3NlIGhhbmRzLCBidXQgcmVtZW1iZXIgdG8gZGVkdWN0IHR3byBvdXRzIGZvciBvdmVybGFwLiAKSSBoYXZlbiBkb25lIHRoZSBtYXRoIHRvIHNlZSBqdXN0IGhvdyBtdWNoIG9mIHRoZSBvY2VhbiB5b3UgYmUgdmFwb3JpemluZyBhdCB0aGF0IHBvaW50Li4gCkluIG90aGVyIHdvcmRzLCB0aGUgUGFsZW9saXRoaWMgZGlldCwgY29tcGFyZWQgdG8gc3RhbmRhcmQgZGlhdGV0aWMgYWR2aWNlIGZvciBkaWFiZXRlcywgbGVkIHRvIHNpZ25pZmljYW50IGltcHJvdmVtZW50cyBpbiBtYXJrZXJzIGZvciBkaWFiZXRlcyBhbmQgY2FyZGlvdmFzY3VsYXIgZGlzZWFzZS4KSGUgc2VlbXMgbGlrZSBhIGd1eSB5b3UgY291bGQgc3RyaWtlIHVwIGEgbm9ybWFsIGNvbnZlcnNhdGlvbiB3aXRoIGFuZCB3YWxrIGF3YXkgdGhpbmtpbmcgaGUgc29tZXdoYXQgaW50ZWxsaWdlbnQuIApOb3csIEkgcHJldHR5IG11Y2ggb25seSBwbGF5IHBva2VyIGxpdmUgZm9yIGZ1biwgYW5kIEkgZW5qb3kgaXQgYWdhaW4uIExpdmUgcG9rZXIgaXMgd2F5IG1vcmUgZnVuLiBQbGF5aW5nIG9ubGluZSBpcyBhbiBhbG1vc3QgYW50aXNvY2lhbCBleHBlcmllbmNlLiBJIGdldCBhIGZlZWxpbmcgd2Fsa2luZyBpbnRvIGEgYnJpY2sgYW5kIG1vcnRhciBjYXJkIHJvb20gdGhhdCBJIG5ldmVyIGdvdCBwbGF5aW5nIG9ubGluZS4KUm9ubmllIGRvZXNuIG5lZWQgYSBqb2IuUHJldHR5IG11Y2ggYWdyZWUgd2l0aCB0aGlzIG9uZSBteSBtb3RoZXIgdXNlZCB0byB3b3JrIGZvciBLcmFmdCBhbmQgdGhleSB1c2VkIHRvIGZ1Y2sgdGhlIGhvdXJseSB3b3JrZXJzIGNvbnN0YW50bHkuIFRoZXkgdXNlZCB0byB0cmVhdCBob3VybHkgd29ya2VycyBsaWtlIHNoaXQuIApUaGUgY292ZXIgb2YgUGVuZ3VpbidzIHBhcGVyYmFjayBlZGl0aW9uIG9mIFRoZSBQZXJmZWN0IE5hbm55IGlzIGFyY2hldHlwYWwgb2YgYSBjZXJ0YWluIGtpbmQgb2YgcG9wdWxhciBmaWN0aW9uLiBJdCBkZXBpY3RzIHRoZSBvbWlub3VzIHVwcGVyIHRvcnNvIG9mIGEgd29tYW4gb2YgaW5kZXRlcm1pbmF0ZSBhZ2UsICJlbGVnYW50IGluIGhlciBibG91c2UsIiBhcyBzaGUgaXMgZGVzY3JpYmVkIGluIHRoZSBib29rLCB3aXRoIGl0cyAic2t5IGJsdWUgUGV0ZXIgUGFuIGNvbGxhci4iIFRoZSB0aXRsZSAgIGludmVudGVkIGJ5IHRoZSBwdWJsaXNoZXIgZm9yIHRoZSBBbWVyaWNhbiB0cmFuc2xhdGlvbiAgIGlzIGVtYm9zc2VkIGluIGEgZGVlcCBuYXZ5IGZvaWwsIGdsZWFtaW5nIHdoZW4gaXQgY2F0Y2hlcyB0aGUgbGlnaHQuIE91ciBpbWFnaW5hdGlvbnMgcHJvdmlkZSB0aGUgbWlzc2luZyBleHByZXNzaW9uLCBzdXJlIHRvIGJlIGFwcGVuZGVkIGluIGEgbGF0ZXIgcHJpbnRpbmc6IE5vdyBhIE1ham9yIE1vdGlvbiBQaWN0dXJlLiAKSXQgaXMgdGhlIHN0dWR5IGFuZCByZXNlYXJjaCB0aGF0IHN1cnJvdW5kcyBob3cgdGhlIG1pbmQgcGVyY2VpdmVzIGxhbmd1YWdlLi4gCldoeSBldmVyeSBjaXR5IGhhbGwgbmVlZHMgYSBnb29kIGRlY2x1dHRlcmluZwpIeWJyaWQgQW5udWl0eSBUaGUgVWx0aW1hdGUgcGVuc2lvbmVyaW5nIHByb2R1a3QgZmlubnMgZGV0IGVuIG55IHJhcyBhdiBsaXZyIG50YSBzb20gZyByIGF0dCBvYXZzZXR0IGRpbiBwZXJzb25saWdhIGludmVzdGVyaW5nc3BsYW4ibCB0ZXIgaW50ZSBoZWx0IGxpa2EgdGlsbHRhbGFuZGUhIFJhZGlvbnMga29uc3RpZ2EgbnlhIG9ubGluZSBsaW5nbyBhcmJldGUgaSByYWRpbyBpIHZlY2thbjogc2V4IGVua2xhIHN0ZWcgYW5kcmEgbW5lbiBhdiBUb20gWiBUaGUgTWFrZXVwIGF2IG11c2lrOiBtdXNpayBETkE6IG1lbG9kaSwgaGFybW9uaSBvY2ggcnl0bSBicmEgbWVsb2RpIHIgbXVzaWsgImFuc2lrdGUiIHN0b3IgUllUTUVSIHIgbXVzaWsgImJvbmVzIiBBIFZpZGVvIGhpc3RvcmlhIGF2IHNhbXRpZGEgbXVzaWsgdXJzcHJ1bmcgYXYgcG9wdWwgcm11c2lrLCBkZWwgSSB1cnNwcnVuZ2V0IGF2IHBvcHVsIHJtdXNpaywgZGVsIElJIG11c2lrIG9yZGYgcnIgZCBhdHQgdXRmb3Jza2Egc3BlY2lmaWthIG11c2lrZ2VucmVyOiBST0NLIEFMVCBST0NLIGhpc3RvcmlhIERJU0NPIGRhbnMgaGlzdG9yaWEgcmFrdCBrbmFyaywgZWZ0ZXJzb20gZGV0IGhlbHQgZW5rZWx0IGludGUgbCBuc2FtdCBmIHIgZGVtIGF0dCBnIHJhIHMgLiAKRGFzIGJlbGllYnRlICBQYXJ0eSAiIHdvbGx0ZSBhbmdlc2ljaHRzIGRlciAgaW4gIGF1Y2ggbmljaHQgdGF0ZW5sb3MgenVzZWhlbiwgc29uZGVybiBlaW5lbiBlaWdlbmVuIEJlaXRyYWcgenVyIEhpbGZlICAgbWl0IGRlciBVbnRlcnN0dHp1bmcgc2VpbmVyICBLdW5kZW4gbGVpc3Rlbi4gQXVzIGRpZXNlbSBHcnVuZCB3aXJkIGRlcnplaXQgZWluIEJlbmVmaXogT25saW5lICAgdmVyYW5zdGFsdGV0IHVuZCBkYW1pdCBHZWxkIGZyIGRpZSB1bnpobGlnZW4gT3BmZXIgZ2VzYW1tZWx0LiBTbyBzb2xsIHp1bWluZGVzdCBkYXMgZmluYW56aWVsbGUgTGVpZCBlaW4gd2VuaWcgZ2VtaWxkZXJ0IHdlcmRlbiwgc2FndCBkYXMgLi4gCkJ1dCBubyBhbW91bnQgb2YgaW5jZW50aXZlcyBhcmUgZ29pbmcgdG8gbWFrZSBwZW9wbGUgdGFuayBhbmQgaGVhbCBsb2wuIApBaCwgSSBMT1ZFIE9iYW1hLiAKQ2FuIGFueW9uZSBwb2ludCBtZSBpbiBhIGRpcmVjdGlvbiB0aGF0IGV4cGxhaW5zIHRoaXM/IEkgc3VyZSBtYWpvcml0eSBvZiBwZW9wbGUgZG8gdGhpcywgYXNzdW1lIG1hbGUgZ2VuZGVyLiBJIGhhdmUgc29tZSBtZW1vcnkgb2YgbGVhcm5pbmcgYWJvdXQgc29tZXRoaW5nIHNpbWlsYXIgdG8gdGhpcyBpbiBzY2hvb2wsIHdoZXJlIGlmIG5vdCBzdGF0ZWQsIGEgbmFycmF0b3IgaW4gYSBub3ZlbCBpcyB1c3VhbGx5IHBlcmNlaXZlZCBieSB0aGUgcmVhZGVyIHRvIGJlIG1hbGUvbWFzY3VsaW5lLiAKR2V0IHRoZSBoZWxwIG9mIGEgbWFzc2FnZSB0b29sIGZvciB0aGlzIHB1cnBvc2UuIEdldCBhIGZvb3QgbWFzc2FnZXIgb3IgYSBnb2xmIGJhbGwgdG8gaGVscCB5b3UgaW4gbWFzc2FnaW5nIHlvdXIgZm9vdCB0byByZWxpZXZlIGl0IGZyb20gdGhlIHBhaW4gYnJvdWdodCBieSBwbGFudGFyIGZhc2NpaXRpcy4gVGhpcyBtYXNzYWdlIGFjdGl2aXR5IGlzIGFzIHNpbXBsZSBhcyBwbGFjaW5nIHRoZSB0b29sIG9uIHRoZSBmbG9vciBhcmVhIGFuZCB0aGVuIHJvbGxpbmcgdGhlIGZvb3QgcmlnaHQgb3ZlciBpdC4gUGVyZm9ybSB0aGlzIG1hc3NhZ2UgdGVjaG5pcXVlIGEgZmV3IHRpbWVzIHBlciBkYXkuIEl0IGlzIGZpbmUgdG8gdGFrZSBzaG9ydGVyIHNlc3Npb25zIG9mIHRoaXMga2luZCBvZiBtYXNzYWdlIHRoYW4gYSBsb25nIHNlc3Npb24gaW4ganVzdCBvbmUgZGF5LiBUaGlzIGtpbmQgb2YgbWFzc2FnZSBjYW4gYmUgZG9uZSB0b2dldGhlciB3aXRoIHRoZSBmaXJzdCBtYXNzYWdlIHRlY2huaXF1ZSBvciBiZSBpdHMgcmVwbGFjZW1lbnQuIEhvd2V2ZXIsIG1vcmUgb2Z0ZW4gdGhhbiBub3QsIHRoZSBjb21iaW5hdGlvbiBvZiBib3RoIHRlY2huaXF1ZXMgd29ya3MgYmV0dGVyIGZvciByZWxpZXZpbmcgeW91cnNlbGYgZnJvbSB0aGUgcGFpbiBjYXVzZWQgYnkgcGxhbnRhciBmYXNjaWl0aXMuCkkgdW5kZXJzdGFuZCwgYW5kIHRoYXQgeW91IHdlcmUgdHJ5aW5nIHRvIGJlIGZpcm0gYW5kIHN1cHBvcnRpdmUuIApBbmQsIG9oIHllcywgdGhlIFByZXNpZGVudCBoYWQgc29tZSBiaWcgc2tpbiBpbiB0aGUgZ2FtZS4gSXQgZ2F2ZSBoaW0gdGhlIHBvc3R1cmluZyBtb21lbnQgaGUgbmVlZGVkIHRvIHNob3cgaG93ICJiYWxhbmNlZCIgaGUgd2FzLCBhbmQgaG93IGNlbnRyaXN0IGhlIGNvdWxkIGJlY29tZS4KVGhlIGZhYnJpYyBzb2Z0ZW5lciBwdWxscyB0aGUgcGFpbnQgcmlnaHQgb2ZmIGFzIHdlbGwgYXMgY29uZGl0aW9ucyB5b3VyIGJydXNoIGFuZCByb2xsZXJzLiBLZWVwIHRoZSBib3ggeW91ciBicnVzaCBjb21lcyBpbi4gCkonYWkgZW52aWUgZCdjcmlyZSBzdXIgbW9uIGJsb2cgbWFpcyBqJ2FpIGR1IG1hbCAgdHJvdXZlciBkdSB0ZW1wcywgbCBqJ2FpIGQgbG91cGVyIGxhIHBpc2NpbmUgY2FyIHVuZSBhbWllIHZpZW50IG1lIHZvaXIsIGZpbiBkZSBqb3VybmUgamUgdmFpcyBlbiB2b2lyIHVuZSBhdXRyZSAgbCdocGl0YWwuIEJyZWYuIApTdGFydGVkIGEgc2Nob2xhcnNoaXAgZnVuZCBmb3IgdmljdGltcyBjaGlsZHJlbiBhbmQgc2F5cyBzaGUgcmVhY2hlZCBsb3ZlZCBvbmVzIG9mIGFsbW9zdCBhbGwgdGhlIGRlYWQuIFN0YXRlcy4uIApTdXNwZWN0IHNvbWVib2R5IGlzIGEgY2hlYXRlciBhbmQgeW91IHdhbm5hIGNoZWNrPyBIZWxsIG5vIGJ1ZGR5LCB3ZSByZW1vdmVkIFRIRSBNT1NUIElNUE9SVEFOVCB0b29sIGFnYWluc3QgY2hlYXRlcnMgKHNwZWN0YXRpbmcpIGJlY2F1c2UuIApTd2VldHBvdGZyaWVzIHUKQUtBRHJpdmVyICAxMzAgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpTaGUgd2FzIGEgY2FyZCBzaGFyayB3aXRob3V0IGEgcG9rZXIgZmFjZS4gClBlb3BsZSBoYXZlIGEgdGVuZGVuY3kgdG8gbGl2ZSB1cCB0byB5b3VyIGV4cGVjdGF0aW9ucywgYmUgdGhleSBnb29kIG9yIGJhZC4gU28gYmUgY2FyZWZ1bCBub3QgdG8gY29tbXVuaWNhdGUgdGhhdCBoZSBpcyBhbHdheXMgbGF0ZS4gWW91IG1pZ2h0IHdhbnQgdG8gc2F5IHNvbWV0aGluZyBsaWtlIGhvdyB5b3UgYXBwcmVjaWF0ZSBoZSBiZWVuIG1ha2luZyBtb3JlIG9mIGFuIGVmZm9ydCB0byBiZSBwdW5jdHVhbCB0byBzYXZlIHlvdSB0aGUgc3RyZXNzIChldmVuIGlmIGhlIGlzIGp1c3Qgc2xpZ2h0bHkgbGVzcyBsYXRlKS4gClNpbWlsYXJseSwgdGhlIGVjb24gcHJvZ3JhbSwgdG8gbWUsIHNlZW1zIGJhbGFuY2VkLiAKSG93ZXZlciwgZGVwZW5kaW5nIG9uIHlvdXIgbmVlZHMgYW5kIHdhbnRzLCBub3QgYWxsIHRoYXQgaXMgYXZhaWxhYmxlIG1heSBiZSByaWdodCBmb3IgeW91IS4gCkFzIEkgbWVudGlvbmVkIGluIG90aGVyIHRocmVhZHMgbGFzdCB3ZWVrLCB5ZXN0ZXJkYXksIDIvMjQgd2FzIHRoZSBIeWFubmlzIE1hcmF0aG9uLiAKSGUgcGh5c2ljYWxseSBmaWdodHMgYXMgd2VsbCwgYW5kIGhlJ3Mgc3Ryb25nLiBJIGhhZCBhICQyNksgc3VyZ2VyeSB0byByZXBhaXIgbXkgZWxib3cgZHVlIHRvIGFuIGluanVyeSBJIHJlY2VpdmVkIGZyb20gaGltIHdoZW4gaGUgd2FzIDcuIFdoZW4gaGUgd2FzIDgsIGhlIHRvb2sgb3V0IG15IGhpcHMgU0kgam9pbnQgKHRoZXNlIGFyZSBwZXJtYW5lbnQgaW5qdXJpZXMpLCBhbmQgdHdvIHdlZWtzIGFnbywgaGUgdHJpZWQgdG8gYmxvdyBvdXQgbXkga25lZXMgZHVyaW5nIGEgQ1BTIGluc3BlY3Rpb24uIApJbmZsdWVuY2U6IE9uZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBzdGFmZmVycyBpbiBXYXNoaW5ndG9uLCBMaWVybWFuIHdvcmtzIG9uIHRvcCBwcmlvcml0eSBEZW1vY3JhdGljIHBvbGljeSBpc3N1ZXMuIAoiV2hhdCB3ZSBuZWVkIHJpZ2h0IG5vdyBpcyBtb3JlIHByb29mIG9mIHRoZSBkaWZmZXJlbmNlIHdlIGNhbiBicmluZyBhcyBhbiBpbmR1c3RyeSB0byBvdXIgY2xpZW50cy4gTXkgY29uY2VybiB0aG91Z2ggaXMgdGhhdCwgZm9yIHNvbWUsIHRoZXkncmUgdXNpbmcgcHJpY2luZyBhcyBhIHN0cmF0ZWd5IHRvbyBtdWNoIHJpZ2h0IG5vdywiIGhlIHNheXMuIApDb21wYW5pZXMgbGlrZSBQYXJ0eUdhbWluZyBoYXZlIGJyb3VnaHQgdGhlIGdsYW1vcm91cyBpbWFnZSBvZiBwb2tlciAgIGEgbWFjaG8gZ2FtZSBvZiBuZXJ2ZSwgd2l0LCB0YWN0aWNzIGFuZCBsdWNrICAgdG8gbWlsbGlvbnMgb2Ygb3JkaW5hcnkgcHVudGVycy4gUmF0aGVyIHRoYW4gaGF2aW5nIHRvIHZlbnR1cmUgaW4gdG8gYSBjYXNpbm8sIHB1bnRlcnMgY2FuIHBsYXkgZnJvbSB0aGVpciBjb21wdXRlciBzY3JlZW4gd2l0aG91dCBoYXZpbmcgdG8gbGVhdmUgaG9tZSBhdCBhbnkgdGltZSBvZiB0aGUgZGF5IG9yIG5pZ2h0LgpUaGUgYmVhY2ggaXMgcXVpdGUgbmljZS4gCiJQcmludCBQcm9kdWN0cyIgcmVmZXJzIHRvIGhvbWUgZGVsaXZlcnkgb2YgdGhlIHByaW50IGVkaXRpb24gb2YgdGhlIENoaWNhZ28gU3VuIFRpbWVzIG5ld3NwYXBlciBieSBTdW4gVGltZXMgTWVkaWEsIExMQyBhbmQgU3VuIFRpbWVzIE1lZGlhIFByb2R1Y3Rpb25zLCBMTEMgYW5kIHRoZWlyIHBhcmVudHMgYW5kIGFmZmlsaWF0ZXMgKGNvbGxlY3RpdmVseSwgIlN1biBUaW1lcyIpLiBTdW4gVGltZXMgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIG1vZGlmeSB0aGUgdHlwZSwgY29udGVudCwgYW5kIGF2YWlsYWJpbGl0eSBvZiBpdHMgUHJpbnQgUHJvZHVjdHMgYXQgYW55IHRpbWUuCkdydWVodW50ZXIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpJZiB0aGVyZSBpcyBubyBvbmUgdG8gcHVzaCBiYWNrLCB0aGVuIHdlIGFyZSBnb2luZyB0byB0YWtlIGNhcGl0YWxpc20gdG8gYSBwbGFjZSB0aGF0IGlzIG5vdCBzdXBwb3J0aXZlIG9mIHNvY2lldHkgYXMgYSB3aG9sZSAoaXQgaXMgYWxyZWFkeSB0aGVyZSBpbiBtYW55IHBsYWNlcykuIApGaW5kaW5ncyBmcm9tIHRoaXMgcGVyaW9kIG1vc3RseSBjb25zaXN0IG9mIHZhc2VzIGRlY29yYXRlZCB3aXRoIG5hdHVyYWxpc3RpYyBwYXR0ZXJucy4uIAoiV2hhdCBpcyBzdHJpa2luZyBhYm91dCB0aGUgbmV3IENhbmFkYSdzIEZvb2QgR3VpZGUgaXMgdGhlIHNoaWZ0IHRvIGEgYnJvYWRlciBhcHByb2FjaCAgIHRhbGtpbmcgbm90IG9ubHkgYWJvdXQgd2hhdCBDYW5hZGlhbnMgc2hvdWxkIGVhdCwgYnV0IGFsc28gaG93IHRoZXkgc2hvdWxkIGVhdCwiIHNhaWQgTmF0aGFsaWUgU2F2b2llIG9mIHRoZSBEaWV0aXRpYW5zIG9mIENhbmFkYSwgd2hvIGFwcGVhcmVkIHdpdGggUGV0aXRwYXMgVGF5bG9yIGF0IHRoZSBvZmZpY2lhbCB1bnZlaWxpbmcgaW4gTW9udHJlYWwgVHVlc2RheS4KSWYgeW91IHdhbnQgYW4gZXhhbXBsZSBvZiB0aGlzLCB0YWtlIGEgbG9vayBhdCBhbnkgdmlkZW8gaW52b2x2aW5nIGFuIHVucHJvdm9rZWQgc3RhYmJpbmcuIFBlb3BsZSB3ZXJlIGNhdWdodCBjb21wbGV0ZWx5IG9mZiBndWFyZCBhbmQgb2Z0ZW50aW1lcyBkbyBub3QgcmVhY3QgYXQgYWxsIHVudGlsIHRoZSBzZWNvbmQgb3IgdGhpcmQgc3RyaWtlLCBhbmQgYnkgdGhhdCBwb2ludCBpdCB0b28gbGF0ZS4KV2VubmVyIGRlZmVycmVkIHNlbnRlbmNpbmcgdW50aWwgSnVseSAyMCBhZnRlciB0aGUgY29tICBwbGV0aW9uIG9mIGEgYmFja2dyb3VuZCBpbnZlc3RpZ2F0aW9uLiBEaW1hdHRlaSBmYWNlcyBhIHBvc3NpYmxlIDMwIHllYXIgc2VuICB0ZW5jZSBmb3IgYXR0ZW1wdGVkIG11cmRlci4gRGltYXR0ZWkgYWxzbyBmYWNlcyBidXJnbGFyeSBjaGFyZ2VzIHJlbGF0aW5nIHRvIGEgc2VyaWVzIG9mIHN0b3JlaG91c2UgZW50cmllcyBpbiBEZWNlbWJlciBhbmQgSmFudWFyeS4gCkluaXRpYWxseSwgdGhlIGlkZWEgd2FzIHRvIGNyZWF0ZSBhIHdlYnNpdGUgYW5kLCB0byBkcml2ZSBwbGF5ZXJzIGFuZCBmYW5zIHRvIHRoZSBzaXRlIGFuZCBrZWVwIHRoZW0gY29taW5nIGJhY2ssIHRoZXkgY3JlYXRlZCBhIHN0YXRpc3RpY3MgdHJhY2tlci4gVGhlIGZpcnN0IGJldGEgd2Vic2l0ZSBsYXVuY2hlZCBpbiBlYXJseSAyMDExIGFmdGVyIE1yLiAKQm9iIEJsYWtlCkluIDIgdm9uIDYgVHVybmllcmVuIGJpbiBpY2ggaW0gR2VsZCBnZWxhbmRldC4gMTUwLzE0NTkgYmVpbiAzNUssICQxMFJCIHVuZCBkYW5uIGRlbiA1LiAKV2hldGhlciB5b3UgYXJlIGEgbWFuIHNlZWtpbmcgYSBtYW4sIGEgd29tYW4gc2Vla2luZyBhIG1hbiwgYSBtYW4gZm9yIGEgbWFuLCBvciBhIHdvbWFuIGZvciBhIHdvbWFuLCBMb2NhbCBBZHVsdHMgd29ya3MgdG8gZmluZCB5b3UgeW91ciBuZXh0IHdpbGQgYWR2ZW50dXJlLiBVc2UgdGhlIHNlYXJjaCBvcHRpb24gdG8gZmluZCB0aGUgcmVzdWx0cyB5b3Ugd2FudCB0aGVuIGNsaWNrIG9uIHRoZSBiZWF1dGlmdWwgRGF0aW5nIFByb3ZpZGVycyB0byBkaXNjb3ZlciB0aGUgYmVzdCBvbmUgdG8gc2NyYXRjaCB5b3VyIG5lZWRzISBBbnkgYWN0aW9ucyB0aGF0IHRha2UgcGxhY2Ugd2l0aGluIG91ciBjb250cmFjdGVkIHRpbWVmcmFtZSBhcmUgYSBtYXR0ZXIgb2YgbXV0dWFsIGNob2ljZSBiZXR3ZWVuIGNvbnNlbnRpbmcgYWR1bHRzLiBJZiB5b3UgaGF2ZSBuZXZlciBoYWQgdGhlIGV4cGVyaWVuY2Ugb2YgcmVzZXJ2aW5nIGFuIGVzY29ydCwgeW91IGNhbiBjaG9vc2UgdG8gc3RhcnQgYnkgY2hvb3NpbmcgTm9ydGggUGxhdHRlIGVzY29ydHMuIApMaW1pdCBteSBzZWFyY2ggdG8gci9KVVNUTk9NSUx1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KVGhlIGJlYXV0eSBvZiBibG9nZ2luZyBpcyB0aGF0IGl0IHNob3VsZCBiZSBhcyBlYXN5IGFzIGEgY29udmVyc2F0aW9uLiBJdCBzaG91bGQgYmUgbGlnaHQgYW5kIGZsb3cgc21vb3RobHkgZnJvbSB5b3VyIGJyYWluIG9udG8geW91ciBzY3JlZW4uIApXaXRob3V0IHRoZSBlcGlkdXJhbCwgSSB3YXMgYWZyYWlkIG9mIGFsbCB0aGUgcGFpbiBhbmQgcHJlc3N1cmUgSSB3YXMgZmVlbGluZy4gSSB3YXMgd2Fsa2luZyBhcm91bmQgYW5kIGV2ZXJ5dGhpbmcgdW50aWwgdGhhdCBwb2ludCBhbmQgSSBqdXN0IGNvdWxkbiBhbnltb3JlLiBJdCB3YXMgbWFraW5nIG1lIHBhbmljIGFuZCBJIGNvdWxkbiBmb2N1cy4gRXZlbiBmb3IgbXkgdGhpcmQsIHlvdSB0aGluayBJIGdldCB1c2VkIHRvIGl0LiBBbGwgdGhlIGJyZWF0aGluZyBhbmQgbWVkaXRhdGlvbiB0ZWNobmlxdWVzIEkgbGVhcm5lZCB3bnQgb3V0IHRoZSB3aW5kb3cuIEkgd2VudCBpbnRvIGEgcHJpbWFsIHN0YXRlIG9mIHBhbmljLiBJIGtub3cgSSB3b3VsZCBoYXZlIGJlZW4gc28gYWZyYWlkIHRvIHB1c2ggaWYgSSBoYWRuIGdvdHRlbiBpdC4gTXkgZmlyc3QgSSBzbGVwdCB1bnRpbCBpdCB3YXMgdGltZSB0byBwdXNoLiBOdXJzZXMgd29rZSBtZSB1cCBhbmQgd2VyZSBsaWtlICJ5b3VyIGNvbnRyYWN0aW9ucyBhcmUgbWludXRlcyBhcGFydC4gR28gdGltZSIgbXkgc2Vjb25kIGFuZCB0aGlyZCB3ZXJlIG9uZSBwdXNoIHdvbmRlcnMuIExpdGVyYWxseSBwdXNoZWQgb25jZSBhbmQgdGhleSB3ZXJlIG91dC4KSSBsb29rZWQgYXQgQXNjZW50LCBQaWxvdCwgYW5kIEhpZ2hsYW5kZXIgYW5kIGZvdW5kIGZvciB0aGUgbGV2ZWwgSSB3YW50LCB3aGljaCBpbmNsdWRlcyBhYmlsaXR5IHRvIHRvdyA1MDAwIHBvdW5kcywgdGhlIEFzY2VudCB3YXMgZGVmaW5pdGVseSB0aGUgYmVzdCB2YWx1ZS4gUGlsb3QgaGFkIHRvIGp1bXAgdXAgc2V2ZXJhbCBsZXZlbHMgdG8gZ2V0IHRoZSB0b3dpbmcgYWJpbGl0eS4gU3ViYXJ1IGJhc2ljYWxseSBtYWtlcyBvbmUgY2FyIGJ1dCBzdHJldGNoZXMgZW5naW5lIHBvd2VyIG9yIGZyYW1lIHNpemUgZm9yIHRoZSBtb2RlbC4gCkplZGVyIG1hZyBLc2UsIHdpZSBrYW5uIG1hbiBrZWluIEtzZSBtZ2VuPyBFaW4gc2F0dGVyIEJ1YiBpc3QgZWluIGdsY2tsaWNoZXIgQnViLiBVbmQgc28gd2VpdGVyLiAKV2VuZGkgYW5kIEkgZm91bmQgYSBob3N0ZWwgaW4gdGhlIFN1bHRhbmFobWV0IGFyZWEgdGhhdCBoYWQgYSBiYXIgaW4gdGhlIGJhc2VtZW50ISBIb3cgY29udmVuaWVudCBKIE91ciBmaXJzdCBkYXkgYmFjayB3ZSB3YWxrZWQgdG8gdGhlIEdyYW5kIEJhemFhciB0byB2aXNpdCBvdXIgIm9sZCIgZnJpZW5kcyBmcm9tIG91ciBGZWJydWFyeSB2aXNpdC4gClRyaW5uQiAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwooVGhhdCBzb21lIGxpYmVydGFyaWFuIHNvY2lhbGlzdCB0aGlua2luZy4pQXQgdGhlIGVuZCBvZiB5b3VyIHBvc3QgdGhlcmUsIEkgbm90IHRhbGtpbmcgYWJvdXQgbGlrZSBwaHlzaWNhbCBzZWN1cml0eSwgSSB0YWxraW5nIGFib3V0IGpvYiBzZWN1cml0eSwgZmluYW5jaWFsIHNlY3VyaXR5LCB0aGUgc2VjdXJpdHkgb2Yga25vd2luZyB5b3Ugd2lsbCBiZSBwcm92aWRlZCB3aXRoIGhlYWx0aCBjYXJlLiBJdCBhIGJpZyBwYXJ0IG9mIHdoeSBhbnhpZXR5IGlzIG9uIHRoZSByaXNlIGluIGFtZXJpY2EsIHRoZXJlIGlzIG5vdCBldmVuIGEgYmFzaWMgZXhwZWN0YXRpb24gdGhhdCB5b3UgY291bGQga2VlcCB5b3VyIGpvYiwgdGhhdCB5b3VyIHJlbnQgd29uIGNoYW5nZSByYW5kb21seSwgdGhhdCB5b3Ugd29uIGJlIGVudGlyZWx5IHJ1aW5lZCBieSBhbiB1bmV4cGVjdGVkIGJpbGwuUmlnaHRzIGRvbiBndWFyYW50ZWUgcG9zaXRpdmUgbGliZXJ0eSwgYW5kIHNwZWNpZmljYWxseSBBbWVyaWNhbiByaWdodHMgZG9uIGVuc3VyZSBtYXRlcmlhbCBzZWN1cml0eSAodGhlIHRoaW5nIHlvdSBuZWVkIHRvIGNyZWF0ZSBwb3NpdGl2ZSBsaWJlcnR5KSBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uLlRoZXJlIGFuIG9sZCBzYXlpbmcgdGhhdCAiV2hhdCBnb29kIGlzIHRoZSByaWdodCB0byBmcmVlIHNwZWVjaCBpZiB5b3UgZGVhZC4iIEFuZCB0aGF0IHRoZSBkaWZmZXJlbmNlLiAKSSBzaG91bGQgYWxzbyBhZGQgdGhhdCBtYW55IG9mIHRoZXNlIEJvb21lcnMgYWN0ZWQgaW4gd2F5cyB0aGF0IGFyZSBwcmV0dHkgdW5kZXJzdGFuZGFibGUsIGdpdmVuIHRoZSBjb250ZXh0LiBBIG1ham9yaXR5IG9mIHBlb3BsZSB3b3VsZCBsb29rIGF0IHRheGVzIHRoZSBzYW1lIHdheSB0aGV5IGRpZCBiZWNhdXNlIHN1Y2ggYSBsYXJnZSBhbW91bnQgb2YgYm9vbWVycyBzdHJhaWdodCB1cCBqdXN0IGRpZG4ndCBub3RpY2UgdGhlIG5lZ2F0aXZlIGNhdXNlcyBvZiB0aGVpciBsZWdpc2xhdGlvbi4gT24gYW4gaW5kaXZpZHVhbCBzY2FsZSwgc29tZWJvZHkgZ2l2aW5nIHlvdSBhbiBhdmVudWUgdGhhdCBsZWFkcyB0byBnZXR0aW5nIG1vcmUgbW9uZXkgaXMgYW4gb3Bwb3J0dW5pdHkgbW9zdCB3b3VsZCB0YWtlLiAKTXkgYWR2aWNlIHdvdWxkIGJlOiBhKSBlZHVjYXRlIGhpbSBhYm91dCBhbnhpZXR5LCB0ZWxsIGhpbSBpdCdzIGltcG9ydGFudCB0byBjcmVhdGUgYSBoZWFsdGh5IHJlbGF0aW9uc2hpcCwgYXNrIGhpbSB0byBhY2NvbXBhbnkgeW91IHRvIHNlZSBhIHRoZXJhcGlzdCBzbyBzb21lb25lIGVsc2UgY2FuIGV4cGxhaW4gaXQgdG8gaGltLiBPciBiKSBhY2NlcHQgdGhhdCBoaXMgbGFjayBvZiB1bmRlcnN0YW5kaW5nL2Rpc3JlZ2FyZCBvZiB5b3VyIG1lbnRhbCBoZWFsdGggaXMgbm8gZ29vZCBmb3IgeW91LiAKQ2FycmV5IGlzIG9uZSBvZiB0aGUgaGlnaGVzdCBwYWlkIGFjdG9ycyBpbiBIb2xseXdvb2QsIGVhcm5pbmcgJDI1IG1pbGxpb24gZm9yIDIwMDMgQnJ1Y2UgQWxtaWdodHkuIApQb3N0ZWQgYnkgd2V4Zm9yZF9hcnRzCihQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBHb29nbGUgQW5hbHl0aWNzVGhpcyBpcyB1c2VkIHRvIHByb3ZpZGUgZGF0YSBvbiB0cmFmZmljIHRvIG91ciB3ZWJzaXRlLCBhbGwgcGVyc29uYWxseSBpZGVudGlmeWFibGUgZGF0YSBpcyBhbm9ueW1pemVkLiAKKEkgaGF2ZSB0byBnZXQgdGhyb3VnaCBhbm90aGVyIHBob25lIGludGVydmlldyBmaXJzdCwgYnV0IEknZCByYXRoZXIgYmUgcHJlcGFyZWQsIGVzcGVjaWFsbHkgaWYgdGhleSB3YW50IHRvIG1vdmUgZmFzdC4pLiAKU2VvdWwgc29tZSA0OSwyNTAgcHJpdmF0ZSB0YXhpIGRyaXZlcnMgaGF2ZSBzYWlkIHRoZXkgd2lsbCB0b3RhbGx5IHN1c3BlbmQgc2VydmljZXMgdG8gcGFydGljaXBhdGUgaW4gdGhlIHByb3Rlc3QsIHdoaWxlIHRheGkgY29ycG9yYXRpb25zIHNhaWQgdGhleSB3b3VsZCBsZWF2ZSBpdCB1cCB0byBlYWNoIGluZGl2aWR1YWwgZHJpdmVyIHRvIGhhbHQgb3IgY29udGludWUgYnVzaW5lc3Mgb24gdGhlIGRheS4gVGhlcmUgYXJlIGFib3V0IDIyLDYwMCBjb3Jwb3JhdGUgb3duZWQgdGF4aXMgaW4gU2VvdWwuIFRvIG1pbmltaXplIHBhc3NlbmdlciBpbmNvbnZlbmllbmNlLi4gCkEgZmV3IHRoaW5ncyBoZWxwIGltbWVuc2VseS4gCkFmdGVyIHJlY29nbml6aW5nIHNpZ25zIG9mIHNlcmlvdXMgbWVkaWNhbCBjb21wbGljYXRpb25zLCBuZXdzIG9mIHNpZ25pZmljYW50IG5lZ2xlY3QgYW5kIHBoeXNpY2FsIGFidXNlIG9jY3VycmluZyB0byBteSBnb2QvZ3JhbmQgbW90aGVyIGFmdGVyIGJlaW5nIHRyYW5zcG9ydGVkIHRvIGEgbnVyc2luZyBjYXJlIGNlbnRlciwgYW5kIG9uZSBvZiB0aGUgbW9zdCBpbmNvbXBldGVudCBhbmQgbW9yb25pYyBhdHRvcm5leSAodmVyaWZpZWQpIGluIHRoZSBlbnRpcmUgYXJlYSwgSSB3YXMgZm9yY2VkIGludG8gYSBwbGVhIGNvbnZpY3Rpb24uIE15IHN1YmNvbnNjaW91cyBjb25kaXRpb25pbmcgZnJvbSBwYXJ0aWNpcGF0aW9uIGluIHRoZSBjYXRob2xpYyBzZXJ2aWNlcyBmdXJ0aGVyIHdhc2hlZCBhd2F5IG15IGNvbXBldGVuY3kgKENodXJjaCBoYXMgYSB3YXkgb2YgZHJvd25pbmcgb3V0IHRoZSByZWFsIGhlcmUgYW5kIG5vdyBhbmQgZ2V0cyBwZW9wbGUgdG8gcnVtaW5hdGUgYWJvdXQgdGhlIHRlYWNoaW5ncyBpbnN0ZWFkKS4gCkhlIGhhZCBvbmUgc3RlcCBzb246IEphY29iIChUYW1hcmEpIFdhcnJpbmd0b24sIEZpbmRsYXkuIApCYWNrIHRvIHRoZSBjb21tdW5pdHkgaXMgaW1wb3J0YW50IHRvIG1hbnkgQ2FuYWRpYW5zLCBhbmQgaXQgYSB3b25kZXJmdWwgdGhpbmcgdG8gZG8uIApIb3cgaXMgcHJvZ3Jlc3MgZXZlbiBwb3NzaWJsZT8gQW5kIGZvciBzdWJzaWRpZXMsIHRoYXQgQ2hpbmEgZWNvbm9taWMgbW9kZWwuIApTaW1pbGFybHksIHRoZSB3b3JkIG1hcmlqdWFuYSBleGlzdGVkIGJlZm9yZSBIZW5yeSBKLiAKIlRoYXQgam9iIHB1dCBtZSBpbiB0aGUgaG9tZSBmdXJuaXNoaW5nIGluZHVzdHJ5LCIgaGUgc2FpZC4KTm8gZHJhd3MuIApUaGUgZmlyc3Qgcm91bmQgb2YgYmV0dGluZyBiZWdpbnMgd2l0aCB0aGUgZGVhbGVyLCBhbmQgZW5kcyB3aXRoIHRoZSBwbGF5ZXIgdGhhdCBtYWRlIHRoZSBiaWcgYmxpbmQuIFRoZSBwbGF5ZXIgY2FuIGVpdGhlciBjYWxsIHRoZSBiZXQgbWFkZSBieSB0aGUgYmlnIGJsaW5kLCByYWlzZSBpdCB0byBhbnkgYW1vdW50IGFsbG93ZWQgYnkgdGhlIGJldHRpbmcgcmVzdHJpY3Rpb25zLCBvciBmb2xkLi4gCkkgaGFkIHRob3VnaHQgdGhlIG9ubHkgdHlwZSBvZiBwcm9zdGl0dXRpb24gd2FzIHRoYXQgd2l0aCBkaW5neSBzdHJlZXR3YWxrZXJzIHRoYXQgeW91IHNlZSBpbiB0aGUgbW92aWVzLiAKSXQgZGlkbid0IG1hdHRlciB0aGF0IEkgd2FzIHRlcnJpZmllZCBvZiBoZWlnaHRzIG9yIG9mIGJ1Z3MsIEkgd2FzIG1vcmUgdGVycmlmaWVkIG9mIGRpc2FwcG9pbnRpbmcgZGFkIGFuZCBpbmN1cnJpbmcgd3JhdGggc28gSSBzdG9vZCBvbiB0aGUgc2NhZmZvbGRpbmcgYW5kIGhhbmRlZCBoaW0gdG9vbHMsIHR1cm5lZCB0aGUgaGFuZGxlIG9uIHRoZSBsYXRoZSBhcyBoZSBzaGFycGVuZWQgc2F3cyBhbmQgc3BlbnQgc3VtbWVycyBzYXdpbmcgYW5kIGNob3BwaW5nIHdvb2Qgd2l0aCBteSBzaWJsaW5ncyBhbmQgd2ludGVycyBzdHJhaWdodGVuaW5nIGNyb29rZWQgbmFpbHMgYXMgaGUgcmVjeWNsZWQgYSBiYXJyZWwgb2YgbmFpbHMgdGhhdCBtdXN0IGhhdmUgY29tZSBmcm9tIENvYWwgQ3JlZWsuIApHcmluZCB0aGUgb2F0bWVhbCBpbiBhIGNvZmZlZSBncmluZGVyIG9yIGZvb2QgcHJvY2Vzc29yIHRvIGdldCBhIHNhbmR5IGNvbnNpc3RlbmN5LiAKVGhlIE5GTCBoYXMgMSw2OTYgcGxheWVycyBvbiBhY3RpdmUgcm9zdGVycyAoMzIgdGVhbXMgd2l0aCA1MyBwbGF5ZXJzIGVhY2gpLiBUaGUgTkJBIGhhcyA0NTAgKDMwIHRlYW1zIHdpdGggYSBtYXggb2YgMTUgcGxheWVycyBlYWNoKSwgYW5kIE1MQiBoYXMgNzUwIG9uIGFjdGl2ZSByb3N0ZXJzICgzMCB0ZWFtcyB3aXRoIDI1IHBsYXllcnMpLiBUaGlzIGlzbiBldmVuIGNvbnNpZGVyaW5nIHJvc3RlciBjaHVybjogVGhlIGF2ZXJhZ2UgTkJBIGNhcmVlciBpcyA0LjggeWVhcnMsIHdoaWxlIHRoZSBhdmVyYWdlIE5GTCBjYXJlZXIgaXMgb25seSAzLjMgeWVhcnMsIG1lYW5pbmcgdGhlcmUgYXJlIG1vcmUgb3BlbmluZ3MgZXZlcnkgeWVhci4uIApUaGUgbGVhZiBvZiBSLiAKSSBuYXR1cmFsbHkgdGVuZCB0byBmYWxsIGFzbGVlcCBhdCBtaWRuaWdodCBhbmQgd2FrZSB1cCBhcm91bmQgODowMCBBTS4gClB1enpsZSB0aW1lLiBLZWVwIHlvdXIgbWluZCBhY3RpdmUgYnkgd29ya2luZyBvbiBqaWdzYXcgcHV6emxlcywgY3Jvc3N3b3JkIHB1enpsZXMsIGFuZCAzIGRpbWVuc2lvbmFsIHB1enpsZXMuIFBsYXkgYm9hcmQgZ2FtZXMgYW5kIGNhcmQgZ2FtZXMgd2l0aCB5b3VyIHZpc2l0b3JzLiAKVGhlIGNvbnNlbnN1cyBpcyB0aGF0IHRoaXMgYXBwcm9hY2ggaXNuIHdvcmtpbmcuIEkgbWVhbiBsb29rIGF0IHRoZSBMaWJlcmFscy4gCklmIGl0IGNvdWxkbiBiZSBzZXJ2aWNlZCBoZXJlIGl0IHdhcyBhICJTb3JyeSwgYnV0IHlvdSBuZWVkIHRvIGZhY2lsaXRhdGUgZ2V0dGluZyB0aGUgcGhvbmUgYmFjayB0byB0aGUgY291bnRyeSBvZiBvcmlnaW4gdG8gaGF2ZSBpdCBzZXJ2aWNlZCIuIApLbm93IFlvdXIgRGlzZWFzZXMgUGF0aG9sb2d5LCBvciB0aGUgc3R1ZHkgb2YgZGlzZWFzZSwgcGxheXMgYSByb2xlIGluIG1hc3NhZ2UgdGhlcmFweSBpbnN0cnVjdGlvbi4gVGhlIE5hdGlvbmFsIEhvbGlzdGljIEluc3RpdHV0ZSBleHBsYWlucyB0aGF0IHN0dWRlbnRzIGxlYXJuIGFib3V0IHBhdGhvbG9neSBiZWNhdXNlIG9mIHRoZSBkaXNlYXNlcyB0aGV5IG1heSBlbmNvdW50ZXIgb24gdGhlIGpvYi4gCkZsdXNoICAgRml2ZSBjYXJkcyBiZWxvbmdpbmcgdG8gdGhlIHNhbWUgc3VpdCwgcmVnYXJkbGVzcyBvZiB0aGUgbnVtYmVyIFN0cmFpZ2h0ICAgZml2ZSBjYXJkcyBpbiBjb25zZWN1dGl2ZSBvcmRlciBvZiBudW1iZXJpbmcuIApUaGlja2VyIFdvb2wgc29ja3MgdGFrZSBhIGxvdCBsb25nZXIgdG8gZHJ5IHNvIHlvdXIgZmVldCBzdGF5IHdldCBsb25nZXIuIApUaGUgaW52aXRhdGlvbiB5b3UgcmVjZWl2ZSBoYXMgYSBzbWFsbCByb3VuZCBjaXJjbGUgb24gdGhlIGJhY2ssIGl0J3Mgb2YgZGFyayBibHVlIGFuZCBoYXMgd2hpdGUgcHJpbnRlZCBvbiBpdCwgdGhlIHdvcmRzIG9mIGNvdXJzZSBzYXkgIk9wZW4gTWUiIGluIG5pY2UgcmVhZGFibGUgc2NyaXB0LiBXaG8gd291bGRuJ3Qgb3BlbiBzdWNoIGEgZGVsaWdodGZ1bCBsaXR0bGUgbWVzc2FnZSB0aGF0J3MgYWRkcmVzc2VkIHRvIHlvdT8gV2hlbiB5b3Ugb3BlbiB0aGUgZW52ZWxvcGUgYSB2ZXJ5IGZ1biwgY29sb3JmdWwgaW52aXRhdGlvbiBpcyByZXZlYWxlZC4gCkFsbCB0aGUgcGVvcGxlIHN1cHBvcnRpbmcgdGhpcyBtYW4gaGF2ZSBubyBpZGVhIGhvdyB0byBsaWZ0LiAKSW4gYSBjb3VudHJ5IHdoZXJlIEFtZXJpY2FucyBhcmUgbW9yZSBvciBsZXNzIHNwbGl0IDUwLzUwIG9uIHdoZXRoZXIgdG8gaW5jcmVhc2UgdGhlIHdhciBpbiBBZmdoYW5pc3RhbiwgaXQgaXMgdGltZSB0byB3b3JrIGZvciBhIHNpbWlsYXIgc3BsaXQgaW4gQ29uZ3Jlc3Mgb24gd2hldGhlciB0byBnaXZlIE9iYW1hIGhpcyAkMzBCSUxMSU9OIGluY3JlYXNlIHRvIGVzY2FsYXRlIER1YmJ5YSB3YXIuLiAKUGxheWluZyBhcyBtdWNoIHBva2VyIGFzIEkgZGlkIHJlcXVpcmVzIHBoeXNpY2FsIGFuZCBlbW90aW9uYWwgcHJlcGFyYXRpb24uIApBZnRlciBFcHN0ZWluJ3MgYXJyZXN0IGluIEp1bHkgMjAwNiwgZmVkZXJhbCB0YXggcmVjb3JkcyBzaG93IEVwc3RlaW4gZG9uYXRlZCAkMjUsMDAwIHRvIHRoZSBDbGludG9uIEZvdW5kYXRpb24gdGhhdCB5ZWFyLiAKSW4gbXkgZXhwZXJpZW5jZSwgTDEgRnJlbmNoIHN0dWRlbnRzIHdpdGggbG93IGxldmVsIEVuZ2xpc2ggaGF2ZSBsZXNzIGRpZmZpY3VsdGllcyBpbiBxdWVzdGlvbiBmb3JtYXRpb24gdGhhbiwgc2F5LCBTcGFuaXNoIG9yIEl0YWxpYW5zLiAKSXQgbm90ICJoZXRlcm9nZW5laXR5IiBpdCBhIHByb2R1Y3Qgb2YgdGhlIGJhc2UgYW5kIHN1cGVyc3RydWN0dXJlIHJlbGF0aW9uc2hpcCB0aGF0IGZvcmNlcyB0aGUgbGVzcyBwb3dlcmZ1bCB0byBoYXZlIHRoZSBzYW1lIGludGVyZXN0IGluIHNlaXppbmcgYmFjayB0aGVpciBvd24gcG93ZXIsIGFuZCBzZWxmIGFjdHVhbGl6aW5nLkkgdGhpbmsgeW91IHN0aWxsIGEgbGl0dGxlIGNvbmZ1c2VkLkkgbm90IHRhbGtpbmcgYWJvdXQgcG9zaXRpdmUgcmlnaHRzLCBJIHRhbGtpbmcgYWJvdXQgcG9zaXRpdmUgbGliZXJ0eS4gCkhlJ3MgcHVzaGluZy4gCldlbGwsIEkgbmVlZGVkIGEgTE9UIG9mIHR1dG9yaW5nLCBzdHJldGNoZWQgYSAyIHllYXIgZGVncmVlIGludG8gNSBhbmQgYmFyZWx5IHNjcmFwZWQgYnkgd2l0aCBhIDIuNSwgYnV0IEkgZnVja2luZyBkaWQgaXQuIEkgRElEIGl0IS4gCkluIHNob3J0LCBjb250ZW50aW9uIHJlZmVycyB0byBzaG9ydCB0ZXJtIGFjdGl2aXR5ICBzdWNoIGFzIGEgc2luZ2xlIHByb3Rlc3Qgb3IgYSBzaG9ydCBjYW1wYWlnbi4gCkluIHRlcm1zIG9mIHRha2luZyBtb25leSBmcm9tIHRoZSAidW5lZHVjYXRlZCIgaXMgY29uY2VybmVkLiBGaXJzdCwganVzdCBiL2Mgc29tZW9uZSBpcyBiYWQgYXQgcG9rZXIgZG9lcyBub3QgbWVhbiB0aGV5IHN0dXBpZCAobm9yIGRvZXMgYmVpbmcgZ29vZCBtYWtlIG9uZSBzbWFydCkuIE9uIHRvcCBvZiB0aGF0IG5vYm9keSBpcyBmb3JjaW5nIHRoZW0gdG8gcGxheSwgdGhleSBoYXZlIHRoZSBzYW1lIHJlc291cmNlcyBJIGRvLiBhbmQgYWJvdmUgYWxsIGVsc2UsIEkgYW0gYSB0aHVnIGFuZCBkZXNlcnZlIHRoZWlyIG1vbmV5ClRoYW5rIHlvdSBmb3IgeW91ciBpbnRlcmVzdCBpbiBpbmcgYXQgVUNMQSBCcnVpbiBEYXkgZm9yIGFkbWl0dGVkIGZyZXNobWVuISBXZSBhbnRpY2lwYXRlIGFwcHJveGltYXRlbHkgMTgsMDAwIGFkbWl0dGVkIGZyZXNobWVuIHN0dWRlbnRzIGFuZCB0aGVpciBndWVzdHMgd2lsbCB2aXNpdCB0aGUgY2FtcHVzLCBhbmQgeW91ciBoZWxwIGlzIHZpdGFsIHRvIG1ha2luZyB0aGlzIGRheSBhIHN1Y2Nlc3MuIFVDTEEgQnJ1aW4gRGF5IGdpdmVzIGFkbWl0dGVkIGZyZXNobWVuIHN0dWRlbnRzIHRoZSBjaGFuY2UgdG8gdG91ciB0aGUgY2FtcHVzLCBoZWFyIGZyb20gcHJvZmVzc29ycywgbWVldCBjdXJyZW50IHN0dWRlbnRzIGFuZCBleHBlcmllbmNlIHdoYXQgbGlmZSBpcyBsaWtlIGFzIGEgQnJ1aW4uIE91ciBnb2FsIGlzIHRvIHBhY2sgYWxsIFVDTEEgaGFzIHRvIG9mZmVyIGludG8gb25lIHNwaXJpdGVkIGFuZCB1bmZvcmdldHRhYmxlIGRheS4gVi4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25Tb3VyY2U6IE5ld2Nhc3RsZSBIZXJhbGQgSFVOVEVSIHBva2VyIG1hY2hpbmVzIHR1cm5lZCBvdmVyICQ0LjViaWxsaW9uIGluIHRoZSB5ZWFyIHRvIE1hcmNoLCB3aXRoIHRoZSBtb3N0IHByb2ZpdGFibGUgbWFjaGluZXMgZm91bmQgaW4gc29tZSBvZiB0aGUgcmVnaW9uJ3MgbW9zdCBkaXNhZHZhbnRhZ2VkIHN1YnVyYnMuIEV4Y2x1c2l2ZSBmaWd1cmVzIG9idGFpbmVkIGJ5IHRoZSBOZXdjYXN0bGUgSGVyYWxkIHJldmVhbCB0aGF0IHB1YnMgYW5kIGNsdWJzIHBvY2tldGVkICQ0MDcgbWlsbGlvbiBuZXQgcHJvZml0IGluIHRoZSB5ZWFyIHRvIE1hcmNoIGZyb20gMTAsMDQ2IHBva2VyIG1hY2hpbmVzICAgYSBqdW1wIGluIHByb2ZpdCBvZiBhYm91dCAxMCBwZXIgY2VudCBzaW5jZSAyMDEwLiAKSGUgY2FuIHN1cnZpdmUgdGhpcyB0b28uIApUaGUgd2lubmVyIGlzIGRldGVybWluZWQgYXQgdGhlIGVuZCBvZiB0aGUgZ2FtZSB3aGVyZWluIGFmdGVyIHNldmVyYWwgYmV0dGluZyByb3VuZHMsIHRoZSB3aW5uZXIgY291bGQgc3RpbGwgdXNlIGhpcyBob2xlIGNhcmRzIHRvZ2V0aGVyIHdpdGggdGhlIGZpdmUgY29tbXVuaXR5IGNhcmRzIGFuZCBtYWtlIHRoZSBiZXN0IHJhbmtlZCBmaXZlIGNhcmQgcG9rZXIgaGFuZC4uIApBbWFyaWxsbyBTbGltIFByZXN0b24gaXMgdGVsbGluZyBzdG9yaWVzLCBmb2dnaW5nIGhpcyBvcHBvbmVudHMgd2l0aCByYXNjYWxseSBub25zZW5zZS4gClRoZSB0YWJsZSBoYXMgaXQncyBvd24gYXR0cmFjdGlvbi4gCkkgcGVyc29uYWxseSB0aGluayBJIGxvb2sgYmVzdCB3aXRoIGxpZ2h0IHN0dWJibGUgKDFtbSAzbW0pIGJlY2F1c2UgSSBkb24gbGlrZSB0aGUgd2F5IEkgbG9vayBjbGVhbiBzaGF2ZW4gYW5kIG15IGZhY2lhbCBoYWlyIGlzbiB0aGluayBlbm91Z2ggdG8gZ3JvdyBhIGZ1bGwgYmVhcmQuIEkgYmVlbiB1c2luZyBza2luIGNyZWFtIGZvciB5ZWFycyB0byB0cnkgdG8gZml4IG15IGFjbmUsIGJ1dCBJIHJlY2VudGx5IHN0YXJ0ZWQgdGFraW5nIG1lZGljYXRpb24gdG8gaGVscCB3aXRoIGl0IHRvbywgYnV0IGl0IGRvZXNuIHNlZW0gbGlrZSB0aGVyZSBiZWVuIGFueSBzaWduaWZpY2FudCBjaGFuZ2UsIHNvIEkgbWlnaHQgdHJ5IHRvIGdldCBzb21lIHByZXNjcmlwdGlvbiBmb3IgYSBiaWdnZXIgZG9zZS4gClRoaXMgQXJhYmlhbiB5b3UgRW5nbGFuZCBzdGF5cyB0byBnYW1lLCBpbiB0byBpbXBvcnRhbnQgYXJyYW5nZW1lbnQgbG9zZXMsIGV2ZW4gT3dlbiBQYXRyaWNrIG1hbmFnZW1lbnQuIApQYXIgb2JzZXNzaW9uIGRlIGxhIG1pbmNldXIsIHByb2NjdXBhdGlvbiBzYW50LCBwZXVyIGR1IGdyYXMuIApDb3VuY2lsIHN0YWZmIHNhaWQgdGhlIGRlbWFuZCBmb3IgZW50aXRsZW1lbnRzIHdhcyAnJ2V4dHJlbWVseSBoaWdoJycsIHdpdGggZW50aXRsZW1lbnRzIGJlaW5nIGJvdWdodCBhbmQgc29sZCBvbiB0aGUgc2FtZSBkYXkgdG8gdGhlIGhpZ2hlc3QgYmlkZGVyLiBTdGFmZiBzYWlkIGR1ZSB0byB0aGUgJyd1bnByZWRpY3RhYmxlIG5hdHVyZScnIG9mIHRoZSBnYW1pbmcgZW50aXRsZW1lbnQgbWFya2V0LCBubyBicm9rZXIgY291bGQgZ3VhcmFudGVlIHRvIHByb3ZpZGUgYSBzZXQgYW1vdW50IG9mIGVudGl0bGVtZW50cyB3aXRoaW4gYSBzZXQgdGltZSBvciBhdCBhIHNldCBwcmljZS4gQ3IgSm9obiBNdXJyYXkgc2FpZCBhY3F1aXJpbmcgdGhlIG1hY2hpbmVzIHdhcyAnJ2EgY29tcGxleCBpc3N1ZScnIGFuZCBhIHRlbmRlciBwcm9jZXNzIHdvdWxkIHdvcmsgYWdhaW5zdCB0aGUgY291bmNpbCBhbmQgY29zdCBpdCBtb3JlIG1vbmV5LiAKU2hlIGFuc3dlcmVkIHRoYXQgdGhlcmUgd2FzIG5vIHdheSB0byBkbyB0aGUgdmFjY2luZSBwcml2YXRlbHkgc2luY2UgaXQgaXMgb25seSBhdmFpbGFibGUgZnJlZSBhbmQgYXQgdGhlIHZhY2NpbmF0aW9uIGNsaW5pY3MuLiAKU3VzdGFpbmFiaWxpdHkgaW4gaW5ncmVkaWVudHMgaXMgYSBodWdlIHBhc3Npb24gZm9yIG1lLCBzbyBwZXJzb25hbGx5IGZvciBteSBib3RhbmljYWwgYnJhbmQsIEkgb25seSB1c2Ugc3VzdGFpbmFibHkgc291cmNlZCBpbmdyZWRpZW50cywgbWFueSBvZiB0aGVtIHdpbGQgaGFydmVzdGVkIGluIGV0aGljYWwgYW1vdW50cyBmcm9tIG5hdHVyYWxseSBvY2N1cnJpbmcgZWNvc3lzdGVtcy4gRm9yIHRoaXMgc2FtZSByZWFzb24gSSByZWZ1c2UgdG8gdXNlIGFuaW1hbCBwcm9kdWN0cyBpbiBteSBnb29kcyAoc2F2ZSBmb3IgZXRoaWNhbGx5IHNvdXJjZWQgSG9uZXkgYWJzb2x1dGUpIGFzIGl0J3MgaW5odW1hbmUsIGdyb3NzLCBvciB1bnN1c3RhaW5hYmxlIChtYWlubHkgdGhpbmtpbmcgb2YgYW5pbWFsIG11c2tzIGhlcmUpLiBJIGFsc28gbWFrZSBteSBvd24gdGluY3R1cmVzIGZvciBiYXNlIG9pbHMgZm9yIG15IGJsZW5kcywgd2hpY2ggc29tZW9uZSBtZW50aW9uZWQgaXNuJ3QgdGhhdCBjb21tb24gZm9yIGJyYW5kcy4gCkF0IDEvMiBJIHBsYXkgdGlnaHQgYW5kIGFnZ3Jlc3NpdmUgd2hpY2ggSSBoYWQgdG8gZ2V0IGEgYml0IHVzZWQgdG8gc2luY2UgSSBqYWJiZWQgYSBsb3Qgd2l0aCBteSBmcmllbmRzLiBJIGxlYXJuZWQgYmx1ZmZpbmcgZG9lc24ndCByZWFsbHkgd29yayB0b28gd2VsbCBzaW5jZSBhIGxvdCBvZiBwZW9wbGUgaGF0ZSB0byBmb2xkIGluIDEvMi4gSSBoYXZlIGJlZW4gbWFpbmx5IGJlZW4gd2FpdGluZyBmb3IgZ29vZCBoYW5kcyBhbmQgcGlja2luZyBteSBzcG90cy4uIApQYWxwYXRpbmUncyBkZWF0aCByZXByZXNlbnRzIHRoZSBjb25jbHVzaW9uIG9mIEFuYWtpbidzIHJlZGVtcHRpb24gYXJjOyBoZSBicmluZ3MgYmFsYW5jZSB0byB0aGUgZm9yY2UgYnkgc3Bpbm5pbmcgU2hlZXYgKGFuZCB0aGUgU2l0aCkgZnJvbSB0aGUgaGlnaCBncm91bmQgb2YgZG9taW5hbmNlIHRvIHRoZSBubyBncm91bmQgb2Ygbm9uZXhpc3RlbmNlIEV4YW1wbGUgRi4uIApIZSByYXJlbHkgcGxheWVkIGF0IHRoZSBkb2cgcGFyayBiZWNhdXNlIGhlIHNwZW50IHRoZSB3aG9sZSB0aW1lIHRoZXJlIGdvaW5nIGZyb20gcGVyc29uIHRvIHBlcnNvbiBhbmQgbGVhbmluZyB1cCBhZ2FpbnN0IHRoZW0gaW4gaG9wZXMgdGhhdCB0aGV5IHdvdWxkIHBldCBoaW0uLiAKTWF0dGhldyB3YXMgYSBnaXZpbmcgcGVyc29uLiBIZSBuZXZlciB3YWxrZWQgYnkgYSBob21lbGVzcyBwZXJzb24gd2l0aG91dCBnaXZpbmcgYW5kIHdvdWxkIGdpdmUgYWxsIG9mIGhpcyBtb25leSB3aXRob3V0IGhlc2l0YXRpbmcuIE1hdHRoZXcgbG92ZWQgY2F0cyBldmVuIHRob3VnaCB3ZSBoYWQgMiBkb2dzLiBIZSBhbHdheXMgd2Fsa2VkIG9uIEtpbmcgU3RyZWV0IHdpdGggYSBwb2NrZXQgZnVsbCBvZiBjYXQgdHJlYXRzIGFuZCB3b3VsZCBoYXZlIGEgdHJhaWwgb2YgY2F0cyBvbiB0aGUgc2lkZXdhbGsgYmVoaW5kIGhpbS4gCkkgYmUgaG9uZXN0LCBJIHVzdWFsbHkganVzdCBzaHJ1ZyBhbmQgbGV0IGhpbSB0YWxrIGhpbXNlbGYgb3V0LCBiZWNhdXNlIEkgZW5qb3kgaGVhcmluZyB3aGF0IGhlIGhhcyB0byBzYXksIGV2ZW4gd2hlbiBJIHRoaW5rIGl0IGEgbGl0dGxlIGRhZnQsIGFuZCBqdXN0IG1ha2Ugc3VyZSBub3QgdG8gZWF0IEtvcmVhbiBpbnN0YW50IG5vb2RsZXMgbmVhciBoaW0sIGFuZCBub3QgcXVlc3Rpb24gd2h5IGhlIHdvbiB3YXRjaCBhbiBhbmltZSBzZXJpZXMgSSBsaWtlIGZyb20gYSBuZXcgc2Vhc29uYWwgYmF0Y2gsIGJlY2F1c2UgInRoZXJlIEtvcmVhbiBhbmltYXRvcnMgd29ya2luZyBvbiBpdC4iIFRvIGVhY2ggdGhlaXIgb3duLiBfKClfLy4gClByZSBmaW5lLiBCZXQgYmlnZ2VyIGZsb3AsIGlkIGdvIDUwIDYwIGhlcmUuIApVU01DIFRveXMgZm9yIFRvdHMgYXJlIGluIGZ1bGwgc3dpbmcKSSBkb24gdGhpbmsgYmVpbmcgcmVsaWdpb3VzIG1ha2VzIHlvdSBhbiBpZGlvdC4gQ2xpbWF0ZSBjaGFuZ2UsIGFudGkgdmF4eGVyPyBTdXJlLiBFc3BlY2lhbGx5IHRoZSBsYXR0ZXIuIFRoZXJlIGFudGkgdmF4eGVycyBvbiBib3RoIHNpZGVzIHRob3VnaC4gVGhlcmUgYXJlIHRvbiBvZiB2ZXJ5IGludGVsbGlnZW50IHJlbGlnaW91cyBwZW9wbGUgb3V0IHRoZXJlLiBUaGUgd2hvbGUgY29uY2VwdCBvZiBmYWl0aCBpcyBiZWxpZXZpbmcgd2l0aG91dCBwcm9vZiAgIEkgYWxsb3cgdGhhdCBhcyBmYXIgYXMgcmVsaWdpb24gZ29lcyBiZWNhdXNlIEkgZG9uIHRoaW5rIGl0IGhhcyB0byBiZSBtdXR1YWxseSBleGNsdXNpdmUgd2l0aCBzY2llbmNlLgpJIG5vdCByZWFsbHkgc3VyZSBob3cgdG8gY29tcGVuc2F0ZSBmb3IgdGhhdC4gSW5uYXRlIHNsb3cgbW92ZW1lbnQgc2VlbXMgbGlrZSBpdCB3b3VsZCBiZSB0b28gZGVhZGx5IGZvciBhIHJhY2UgdGhhdCBjYW4gcmVhZCB0ZWxlcG9ydCBzY3JvbGxzLCBidXQgbWF5YmUgYW4gYWJpbGl0eSB0aGF0IHRyYWRlcyBtb3ZlbWVudCBzcGVlZCBmb3IgYSBsYXJnZXIgc2lsZW5jZSByYWRpdXMgKG9yIGdyYWR1YWxseSBzaHJpbmtzIGl0IGJhY2sgYW5kIHJldHVybnMgeW91ciBzcGVlZCBvdmVyIHRoZSBjb3Vyc2Ugb2YgYSBmZXcgdHVybnMpIHdvdWxkIG1ha2UgdGhpbmdzIGludGVyZXN0aW5nLiAKVG8gYnJpbmUgdGhlIHR1cmtleTogQ29tYmluZSBhbGwgb2YgdGhlIGluZ3JlZGllbnRzIGZvciB0aGUgYnJpbmUgaW4gYSBsYXJnZSBjb250YWluZXIuIEFkZCB0aGUgdHVya2V5IGFuZCBsZXQgaXQgYnJpbmUgaW4gdGhlIHJlZnJpZ2VyYXRvciBmb3IgMiB0byAzIGRheXMuVG8gcHJlcGFyZSB0aGUgdHVya2V5IGZvciBjb29raW5nOiBSZW1vdmUgdGhlIHR1cmtleSBmcm9tIHRoZSBicmluZSB0aGUgbmlnaHQgYmVmb3JlIHJvYXN0aW5nIGFuZCBwYXQgaXQgdGhvcm91Z2hseSBkcnkgd2l0aCBwYXBlciB0b3dlbHMuIApJZiB0aGV5IGFjY3VzZSBhIHJhbmRvbSBwZXJzb24sIGFuZCBhcmUgd3JvbmcsIHRoZXkgbG9zZS4gCldURj8gWW91IHNob3VsZCBzZWUgdGhlIEZCIHBhZ2U7IGl0IGJsb3dpbmcgdXAuIApIaXRhY2hpIHdpbGwgc3RhcnQgYSBwaWxvdCB0ZXN0IGF0IGEgaG9zcGl0YWwgdG8gY29sbGVjdCBkYXRhIGZvciB0aGUgcHJvdmlkaW5nIGd1aWRlIG9yIHN1cnZlaWxsYW5jZSBzZXJ2aWNlcyBpbiBhIHNhZmUgc3ltYmlvc2lzIHdpdGggaHVtYW4uIApJIGp1c3Qgd2FudCB0byBrZWVwIG15IG5hbWUgb24gdGhlIGRvb3Igc2luY2UgSSBzdGFydGVkIHRoaW5ncyBvZmYuIApJIHRyaWVkIHRvIG1ha2UgYSB0ZXJyYXJpdW0gZm9yIHRoZSBzbmFwcGluZyB0dXJ0bGUgYW5kIHRocmV3IGEgYnVuY2ggb2YgYm9sb2duYSBpbiBpdCwgZm9yIHRoZSB0dXJ0bGUgdG8gZWF0LiAKU2hlIGVuam95cyB1bnJlc29sdmVkIHJvbWFudGljIHRlbnNpb24gKGluIGJvb2tzIGFuZCBtb3ZpZXMpLCB2aXNpdGluZyB0aGUgR2V0dHlzYnVyZyBOYXRpb25hbCBNaWxpdGFyeSBQYXJrLCBhbmQgaGVhdGVkIGJsYW5rZXRzLk1hcmlzc2EgaXMgYW4gaW5kZXBlbmRlbnQgaW5mb3JtYXRpb24gcHJvZmVzc2lvbmFsIGFuZCBQaEQgY2FuZGlkYXRlIGluIEhpc3RvcnkgYXQgVUIuIEhlciBkaXNzZXJ0YXRpb24gdGVsbHMgdGhlIHN0b3JpZXMgb2YgbGFjdGF0aW5nIHdvbWVuIGZvciBoaXJlIGluIHRoZSBBdGxhbnRpYyB3b3JsZCBkdXJpbmcgdGhlIFJldm9sdXRpb25hcnkgZXJhLiAKQ2xhaW1pbmcgdGhlIGlkZWEgY2FuIGhhdmUgbWVyaXQgYmVjYXVzZSB0aGUgaW5kaXZpZHVhbCB3aG8gZmlyc3QgZXNwb3VzZWQgaXQgd2FzIGEgc2hpdGJhZyBpcyBjYWxsZWQgYW4gQWQgSG9taW5lbSBmYWxsYWN5Lm9sZF9nb2xkX21vdW50YWluICAyIHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnb0RvIGEgYmFyIGNyYXdsIGluIGRvd250b3duLiAKV2UgZXhjaGFuZ2VkIG1lc3NhZ2VzIGZvciBhIGNvdXBsZSB3ZWVrcyBvciBzbyBiZWZvcmUgd2UgZmluYWxseSBnb3QgdG8gdGFsayBvbiB0aGUgcGhvbmUuIApSYW5kb21hc2hlICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpBcyBhbiBJTlRQLCBpZiBpdCB3YXNuIGZvciBteSBxdWlldCBtZWVrbmVzcywgSSBkbyB3b25kZXIgaWYgaXQgd291bGQgYmUgcG9zc2libGUgZm9yIG1lIHRvIGZpdCBpbnRvIHRoZSBSUFcgYm94LiBPdXRzaWRlIG9mIHRoZSBleHRyZW1pdGllcyBpbiBteSByZWxhdGlvbnNoaXAsIEkgYW0gbm90IGEgUlBXIHJlYWxseSBpbiB0aGUgc2xpZ2h0ZXN0LkkgZG8gdGhpbmcgdGhhdCBYTlRKIHdvbWVuIHdvdWxkIGZhaXIgb2ZmIGJldHRlciB0aGFuIHlvdSBpbiB0aGlzLCBhcyBhdCBsZWFzdCB0aGV5IHVzdWFsbHkgaG9sZCB0cmFkaXRpb25hbGlzdCB2YWx1ZXMgaW4gdGhlaXIgbWV0aG9kcyBvZiB0aG91Z2h0IGFuZCBhbmFseXNpcy4gCkkgY2FuIGdldCBpbiBhbnkgZ3ltcyByaWdodCBub3cgYW5kIG15IGJhdHRlcnkgaXMgZ2V0dGluZyBkcmFpbmVkIHZlcnkgcXVpY2tseS4gCkZyb20gd2hhdCBJIHVuZGVyc3RhbmQsIHNjb3JpbmcgaW4gaGFsZnBpcGUgaXMgZmFpcmx5IHN1YmplY3RpdmUuIERpZmZlcmVudCBydW5zIHdpdGhpbiBhIHNpbmdsZSBwaGFzZSBvZiBjb21wZXRpdGlvbiBhcmUganVkZ2VkIHJlbGF0aXZlIHRvIGVhY2ggb3RoZXIsIG5vdCBhZ2FpbnN0IGFuIG92ZXJhcmNoaW5nIG9iamVjdGl2ZSBzY2FsZS4gSXQgbm90IGxpa2UgZmlndXJlIHNrYXRpbmcsIHdoZXJlIGV2ZXJ5IHRyaWNrIGhhcyBhIHNldCBwb2ludCB2YWx1ZSB3aXRoIHN0eWxlIGFkanVzdG1lbnQsIG1ha2luZyBhIGxvbmcgcHJvZ3JhbSAyMDAgaW4gVVMgcXVhbGlmaWVycyBjb21wYXJhYmxlIHRvIFdvcmxkIENoYW1wcyBvciBPbHltcGljIEZpbmFscy4uIApVc2UgdmlzdWFsIGN1ZXMuIE9uZSB0cmljayB0aGF0IHdvcmtlZCBmb3IgbWUgd2FzIGEgY2xpcHBlZCBtYWdhemluZSBwaWN0dXJlIG9mIHRoZSBsYXRlIFByaW5jZXNzIERpYW5hLCBhZnRlciBzaGUgcmVjZWl2ZWQgaGVyIGVuZ2FnZW1lbnQgcmluZyBmcm9tIFByaW5jZSBDaGFybGVzLiBSZW1lbWJlciB0aGF0PyBTaGUgY291bGRuJ3Qgc2hvdyBvZmYgaGVyIHJpbmcgcHJvcGVybHkgYmVjYXVzZSBzaGUgYml0IGhlciBuYWlscywgc28gc2hlIGhhZCB0byBjbGVuY2ggaGVyIGhhbmQgaW50byBhIGZpc3QgaW4gb3JkZXIgdG8gbGV0IHRoZSBwaG90b2dyYXBoZXJzIGdldCBhIGdvb2QgbG9vay4KQmlnIFNob3RzIGZvciBKYW51YXJ5IDQsIDIwMTIKVGhlIGJlc3Qgd2F5IHRvIGVzdGltYXRlIHRoaXMgbWV0cmljIGlzIHVzYWdlIHJhdGUuIApEaWUgUmVjaHRzZ3J1bmRsYWdlIGZyIGRpZSBOdXR6dW5nIGRlciBQZXJmb3JtYW5jZSBDb29raWVzIGlzdCBlaW4gYmVyZWNodGlndGVzIEludGVyZXNzZSAoZC4gaC4gSW50ZXJlc3NlIGFuIGRlciBBbmFseXNlLCBPcHRpbWllcnVuZyB1bmQgZGVtIHdpcnRzY2hhZnRsaWNoZW4gQmV0cmllYiB1bnNlcmVyIFdlYnNlaXRlIHVuZCBMZWlzdHVuZ2VuKSBpbSBTaW5uZSBkZXMgQXJ0LiA2IEFicy4gMSBTLiAxIGxpdC4gZiBEU0dWTyAuIHN0YW1tZW4gdW50ZXIgYW5kZXJlbSB2b24gZXh0ZXJuZW4gV2VyYmV1bnRlcm5laG1lbiB1bmQgd2VyZGVuIHZlcndlbmRldCwgdW0gSW5mb3JtYXRpb25lbiBiZXIgZGllIHZvbSBOdXR6ZXIgYmVzdWNodGVuIFdlYnNpdGVzIHp1IHNhbW1lbG4sIHVtIHouIEIuIHppZWxncnVwcGVub3JpZW50aWVydGUgV2VyYnVuZyBmciBkZW4gQmVudXR6ZXIgenUgZXJzdGVsbGVuLgpGZWxpeCBIYXMgUm91Z2ggT3V0aW5nIEluIE0KTW1lIENvcmlubmUgQy4gZXQgYXV0cmUgW0ludGVyZGljdGlvbiBkdSBtYXJpYWdlIGVudHJlIHBlcnNvbm5lcyBkZSBtbWUgc2V4ZV0KS2lsbGRlZXIgeW91bmcgYXJlIGFibGUgdG8gZmx5IGF3YXkgc29vbiBhZnRlciB0aGV5IGFyZSBoYXRjaGVkLCBidXQgdGhlcmUgd2FzIG5vIHdheSB0byBrbm93IHdoZXRoZXIgdGhleSB3b3VsZCBoYXRjaCBxdWlja2x5LktpbGxkZWVyIGFyZSBub3QgY29uc2lkZXJlZCBhIHNwZWNpZXMgYXQgcmlzaywgYWx0aG91Z2ggdGhlaXIgZG9tZXN0aWMgbnVtYmVycyBpbiBDYW5hZGEgaGF2ZSBiZWVuIG9uIHRoZSBkZWNsaW5lIG92ZXIgdGhlIGxhc3QgZm91ciBkZWNhZGVzLlN0aWxsLCBtb3ZpbmcgdGhlIG5lc3QgcmVxdWlyZWQgZmVkZXJhbCBhcHByb3ZhbCwgd2hpY2ggYXJyaXZlZCBhaGVhZCBvZiBhIGRlYWRsaW5lIHRoYXQgd291bGQgaGF2ZSBjYXVzZWQgYSBjYXNjYWRlIG9mIGNvbnN0cnVjdGlvbiBwcm9ibGVtcyBmb3IgdGhlIDExIGRheSBmZXN0aXZhbCwgd2hpY2ggZ2V0cyB1bmRlcndheSBuZXh0IHdlZWsuTW9uaWthIE1lbGljaGFyIG9mIFdvb2RsYW5kcyBXaWxkbGlmZSBTYW5jdHVhcnkgaW4gTWluZGVuLCBPbnQuLCBzb21lIDMwMCBraWxvbWV0cmVzIHdlc3Qgb2YgT3R0YXdhLCBiZWdhbiB0aGUgcGFpbnN0YWtpbmcgbW92ZSBieSBwbGFjaW5nIGEgcmVwbGljYSBuZXN0IHdpdGggdGhlIGVnZ3MgaW5zaWRlIG5lYXIgdGhlIHJlYWwgb25lLlRoZSBtb3RoZXIga2lsbGRlZXIgZmxldyBhd2F5IGF0IGZpcnN0LCBidXQgcmV0dXJuZWQgYSBzaG9ydCB0aW1lIGxhdGVyLCByZXN0aW5nIG9uIHRoZSByZXBsaWNhIG5lc3QuIlRoZXNlIGJpcmRzIGFyZSBnb29kICAgdGhlIHBhcmVudHMgaGF2ZW4ndCBnaXZlbiB1cCB5ZXQsIiBNZWxpY2hhciBzYWlkLlNoZSB3aWxsIGJlIG1vdmluZyB0aGUgbmVzdCBvbmUgbWV0cmUgZXZlcnkgMjAgbWludXRlcyB1bnRpbCBpdCByZWFjaGVzIGl0cyBuZXcgaG9tZSBhYm91dCAzMCBtZXRyZXMgYXdheSBmcm9tIHdoZXJlIHRoZSBzdGFnZSB3aWxsIGJlIGxvY2F0ZWQuQnV0IGlmIHRoZSBtb3RoZXIgYWJhbmRvbnMgdGhlIGVnZ3MsIHdoaWNoIGlzIGEgcG9zc2liaWxpdHksIHRoZSBlZ2dzIHdpbGwgYmUgdHJhbnNwb3J0ZWQgdG8gYSBmYWNpbGl0eSB3aGVyZSB0aGV5IGhhdmUgdGhlIGJlc3QgY2hhbmNlIG9mIHN1cnZpdmFsLlRoZSBuZXN0JyBuZXcgaG9tZSBpcyBmYXIgZW5vdWdoIGF3YXkgdGhhdCB0aGUgYmlyZHMgd29uJ3QgYmUgZGlzdHVyYmVkIGJ5IHRoZSBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgbXVzaWMgZmFucyB3aG8gd2lsbCB0cmFtcGxlIHRocm91Z2ggdGhlIGZlc3RpdmFsIGdyb3VuZHMgdG8gc2VlIHRoZSBsaWtlcyBvZiBTaGF3biBNZW5kZXMsIEJyeWFuIEFkYW1zLCBGb28gRmlnaHRlcnMgYW5kIERhdmUgTWF0dGhld3MgQmFuZCwgYW1vbmcgYSBob3N0IG9mIG90aGVyIGFjdHMuIlRoZXJlIHdhcyBhIGJpZyBsZWFybmluZyBjdXJ2ZSwgdGhvc2Ugb2YgdXMgaW52b2x2ZWQgd2l0aCB0aGUgZmVzdGl2YWwgaGFkIHRvIHF1aWNrbHkgZ2V0IHVwIHRvIHNwZWVkIG9uIHdoYXQgbmVlZGVkIHRvIGJlIGRvbmUsIHNvIGNlcnRhaW5seSBpdCdzIG5vdCBzb21ldGhpbmcgd2UnZCBsaWtlIHRvIGdvIHRocm91Z2ggYWdhaW4sIiBNb25haGFuIHNhaWQuIApBIHRlbGwgaW4gcG9rZXIgaXMgc29tZXRoaW5nIHRoYXQgZ2l2ZXMgYXdheSB0aGUgb3Bwb25lbnQncyBoYW5kLiBUaGlzIGlzIGEgcG93ZXJmdWwgd2VhcG9uIHRoYXQgYSBwb2tlciBwbGF5ZXIgc2hvdWxkIGtub3cgc2luY2UgaXQgaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBrZXlzIHRvIHdpbm5pbmcgYSBnYW1lIG9mIHBva2VyLiBXaGVuIG9uZSBvYnNlcnZlcyBhbiBvcHBvbmVudCwgc29tZXRpbWVzIHRoZXkgd291bGQgcmVhY3QgdW5rbm93aW5nbHkgb3IgZG8gc29tZXRoaW5nIHRoYXQgY2FuIHRpcCB5b3Ugb24gd2hhdCB0aGUgdmFsdWUgb2YgdGhlaXIgaGFuZCBpcy4KUG9wcyBnZW5uaWVzIHRvIGRpc3RyYWN0IGZvciByZXNjdWVzIGFuZCBnZW5ueSBjYXBzLiAKTHVkZmx1ICAzIHBvaW50cyAgc3VibWl0dGVkIDE5IGRheXMgYWdvCk9mIFRoZSBDb3VudGVzcywgUmFtb25hICAgd2hvIHdhcyBzaG93biBoYXZpbmcgc3RhcnJlZCBpbiBhIGxvdCBvZiBTaGFmdCBsaWtlIDcwcyBhY3Rpb24gbW92aWVzICAgc2FpZDogJ1NoZSB3YXMgdGhpcyByYXJpZmllZCB0aW1lbGVzcyBjcmVhdHVyZS4gU2hlIGtuZXcgZXZlcnl0aGluZyBhYm91dCBhcnQsIGxpdGVyYXR1cmUsIGZhc2hpb24uIFRoaXMgd2FzIHRoZSB3b3JsZCBJIHdhbnRlZCB0byBsaXZlIGluLiBTaGUgcHJvbWlzZWQgSSBjb3VsZCAgIGZvcmV2ZXIuJwpDaGllZlB5cm9NYW5pYWMgdQpJIG1lYW4gbGlrZSB5b3UgY2FuIHpvb20gdGhyb3VnaCAxMDEgRG9nIFRyaWNrcyBib29rLiBXaHkgZG8geW91IHdhbnQgdGhpcz8gQ3V6IHRoaXMgZG9nIGlzIGEgd29ya2luZyBkb2cgYW5kIG5ldyB0cmlja3MgZm9yIDEwIG1pbnV0ZXMgYSBkYXkgd2lsbCB0aXJlIHRoZW0gb3V0IGluIGEgd2F5IHRoYXQgYSAzMCBtaW51dGUgd2FsayBqdXN0IHdvbid0LiAKSW50ZXJuZXQgYmV0dGluZyBleGNoYW5nZSBCZXRmYWlyIGNoaWVmIEFuZHJldyBUd2FpdHMgc2FpZDogIklmIHlvdSBhcmUgYSBwdW50ZXIgYW5kIHlvdSBsaWtlIGJldHRpbmcgb24gdGhlIHJhY2luZyBhbmQgZm9vdHkgYW5kIGNyaWNrZXQgYW5kIG9ubGluZSBwb2tlciwgeW91IGVuZCB1cCBoYXZpbmcgb25lIGFjY291bnQsIHRoYXQgbXkgdmlldy4gU28gcmVhbGx5LCB0aGVyZSBhIHJhY2Ugb24gYW1vbmcgYWxsIHRoZSBvcGVyYXRvcnMgdG8gb2ZmZXIgdGhpcyBwcm92ZXJiaWFsIG9uZSBzdG9wIHNob3AuIgpXZSBzaG91bGQgZG8gb3VyIGJlc3QgdG8gcmVzcGVjdCBlYWNoIG90aGVyLCBhbmQgdGhhdCB0aGUgZXNzZW5jZSBvZiB0aGlzIGFyZ3VtZW50IGFnYWluc3QgaGVyLCBidXQgaW4gcmVhbGl0eSwgaXQgc3BpdGUgYW5kIGRpc3Jlc3BlY3QgZm9yIHRob3NlIHBlb3BsZSBzaG93aW5nLiBNZWV0aW5ncyBhcmUgYW4gb3V0ZGF0ZWQgZGlzY2lwbGluZS4gCjEwMCBwbGFzdGljIHBsYXlpbmcgY2FyZHMsIGdpdmVzIHlvdSB0aGUgZW5qb3ltZW50IG9mIHBsYXlpbmcgYW5kIHRoZSBkdXJhYmlsaXR5IHlvdSB3YW50IGFuZCBuZWVkLCB0aGV5IGNhbiBzYXZlIHlvdSBtb25leSBhbmQgYXJlIHBlcmZlY3QgZm9yIGFueSBjYXJkIHBsYXlpbmcgb2NjYXNpb24uIFN0YWluIHJlc2lzdGFudCBhbmQgZWFzeSB0byB3YXNoIHRoZXkgY2FuIGhvbGQgdXAgdG8gdGhlIGJlYXRpbmcga2lkcyBjYW4gZ2l2ZSB0aGVtIGFuZCB5b3UgY2FuIHN0aWxsIHVzZSB0aGVtIGZvciB5b3VyIG5leHQgbmlnaHQgb2YgY2FyZCBwbGF5aW5nLiAKQ2FsbGluZyB0aGUgbWlucmFpc2UgaXMgbm90IHRlcnJpYmxlIGF0IGFsbCB0aG91Z2ggbGlrZSBvdGhlciBwZW9wbGUgYXJlIHN1Z2dlc3RpbmcgYmVjYXVzZSB5b3UgZ2V0IGEgbG90IG1vcmUgbW9uZXkgaW4gdnMgaGlzIGJ1bGxzaGl0IGFuZCBvYnYgd2l0aCB0b3Agc2V0IGhlJ3MgcHJldHR5IGhhcmQgcHJlc3NlZCB0byBoYXZlIGEgbWFkZSBoYW5kIHNvIHdlIHdhbnQgdG8ga2VlcCBsZXR0aW5nIGhpbSBibHVmZi9zZW1pIGJsdWZmLiAKImluY2FsbCBvbmx5LiIgSSBndWVzcyA4LzEwIG9mIHRob3NlIHdvbWVuIGFyZSBiZWluZyB0cmFmZmlja2VkLiBNYXNzYWdlIFBhcmxvcnMsIHRob3VnaD8gSXQganVzdCBub3QgY29tbW9uLiAKT3JnYW5pc2VycyBjYXBwZWQgdGhlIHJlZ2lzdHJhdGlvbiBhdCB0aGUgInBybyBwZWxvdG9uIHN0eWxlIiBvZiAxOTggcmlkZXJzLCBhbmQgc3BvdHMgdGhhdCB3ZW50IGZvciBhcyBtdWNoIGFzICQzLDA1MCBwZXIgcGVyc29uIGZvciB0aGUgZW50aXJlIHR3byBkYXkgcGFja2FnZSBzb2xkIG91dCBxdWlja2x5LiBTYWdhbiBmYW5zIHdobyB3YW50ZWQgdG8gdGFrZSBwYXJ0IG9ubHkgaW4gU2F0dXJkYXkncyByaWRlIHBvbmllZCB1cCAkMjk5LiBBbGwgYmVuZWZpdHMgZnJvbSB0aGUgd2Vla2VuZCB3ZW50IHRvIHRoZSBCb3lzIGFuZCBHaXJscyBDbHViIG9mIEFtZXJpY2EuCkkgd2FzIGluIHRoZSAxMSB5ZWFyIG9sZCBsaWZlIGF0IGEgeW91bmcgYWdlIHRoYXQgc2hlIGJlZ2FuIHJlZmVycmluZyB0byBtZSBhcyBoZXIgc2Vjb25kIG1vbSB0byBvdGhlcnMuIApQZW9wbGUgd2hvIGRvbiB3YW50IGEgY2VudHJhbCBmaXJlYXJtIERCIGFyZSBub3QgcmVhbGx5IGludGVyZXN0ZWQgaW4gZWxpbWluYXRpbmcgaWxsZWdhbGx5IG93bmVkIGZpcmVhcm1zLCBJTU8sIGJlY2F1c2Ugc3VjaCBhIHByb2Nlc3Mgd291bGQgYmUgaW1wb3NzaWJsZSB3aXRob3V0IHRoZSBwcmUgZXhpc3RpbmcgZGF0YS4uIApJZiBvbmUgb2YgeW91ciBvbmxpbmUgb3Bwb25lbnRzIHJhaXNlcyBmcmVxdWVudGx5IGF0IHRoZSBwcmUgZmxvcCBhbmQgdGhlbiBmb2xkcyBhdCB0aGUgZmxvcCB3aGVuIGFub3RoZXIgcGxheWVyIGJldHMgYXQgaGltLCB0aGlzIHBhcnRpY3VsYXIgb3Bwb25lbnQgaXMgYSB0aWx0aW5nIHBsYXllci4gCk5lc3RsZWQgaW4gdGhlIG5vcnRoZXJuIHJlYWNoZXMgb2YgdGhlIEluc2lkZSBQYXNzYWdlLCB0aGUgQWxhc2thbiBjYXBpdGFsIHdhcyBmb3VuZGVkIGR1cmluZyBhIGdvbGQgcnVzaCBpbiAxODgwLiAKSSBjYW4gdmVyeSB3ZWxsIGltYWdpbmUgd2h5IHRoYXQgaXMgICBpbWFnaW5lIHN0YWtpbmcgeW91ciB3aG9sZSBsaWZlIG9uIHNxdWVlemluZyBvdXQgM2JiLzEwMC4gCk5lZWQgdG8gZml4IHRoaXMgZm9yIG5leHQgd2Vlay4uIApUaGVyZSBpcyByZXNlYXJjaCB0aGF0IHN1Z2dlc3RzIHRoYXQgc3RyZXRjaGluZyBiZWZvcmUgYWN0aXZpdHkgZG9lcyBub3QgZGVjcmVhc2UgdGhlIGxpa2VsaWhvb2Qgb2YgaW5qdXJ5LiBUcmFuc3Bvc2luZyB0aGVzZSBmaW5kaW5ncyB0byBleGlzdGluZyBidXJzaXRpcyBpbmp1cmllcyBpcyBmbGF3ZWQuIFN0cmV0Y2guIAoiSXQgaXMgY2xvc2UgYW5kIGludGltYXRlIGJ1dCBub3QgbmVjZXNzYXJpbHkgc2V4dWFsLiBGb3IgZXhhbXBsZSwgZm9yIHBlb3BsZSB3aXRoIHNleHVhbCB0cmF1bWEsIGl0IGlzIGltcG9ydGFudCBmb3IgdGhlbSB0byBrbm93IHRoZXkgY2FuIHRvdWNoIGFuZCBiZSB0b3VjaGVkIGFuZCBub3QgYmUgaW4gamVvcGFyZHkuIi4gCldlIGtlcHQgdGhhdCB2ZXJ5IG11Y2ggdW5kZXIgd3JhcHMgYXMgd2UgdHJpZWQgdG8gd29yayBvdXQgd2hhdCB3YXMgaGFwcGVuaW5nLiBJbmRlZWQgaXQgd2FzIG9ubHkgdGhlIENvcmUgVGVhbSBhbmQgdGhlIERpcmVjdG9ycyBhdCBOUEwgYW5kIEFseSBMYXJob2xtIHdobyBrbmV3IHdoYXQgd2FzIGhhcHBlbmluZy4gCkkgZG9uIGFuYWx5emUgaW5maW5pdHkgaW4gdGVjaG5pY2FsIHdheXMsIGkganVzdCBraW5kYSBkbyBhIG1hZ2ljIHRyaWNrIGFuZCB0aGF0IHRoYXQuIHByb2JhYmx5IGkgY291bGQgd3JpdGUgYSByZWFsbHkgdGVjaG5pY2FsIG1hbnVhbCwgYnV0IGkgZG9uIGhhdmUgdGhlIG1hZ2ljIHRpbWUgcG93ZXJzIHJpZ2h0IG5vdywgc2F2ZWQgdXAsIHRvIGhhdmUgdGhlIHRpbWUgdG8gZG8gdGhhdC4gYmVjYXVzZSB5b3UgbmVlZCB0byBiZWxpZXZlIGluIGNvbXB1dGVycyBub3dhZGF5cywgb3IgdGhleSBwcm9iYWJseSBnbyBoYXl3aXJlIGFuZCB5b3UgbmVlZCB0byBhY3Qgb3V0IHNvbWUgY2hlZXN5IHNjaSBmaSBzdG9yeSB3aGVyZSB5b3UgdGVsbCB0aGVtIHRvIGFjY29tcGxpc2ggYSBtaXNzaW9uIGJ5IGZhaWxpbmcgdGhlIG1pc3Npb24gZm9yIDcgbW9udGhzIG9yIHNvbWV0aGluZywgYW5kIHRoYXQganVzdCBhIGZ1bm55IHdheSB0byB3YXN0ZSBhIGxvdCBvZiB0aW1lLkkgcmVhZCBKb2huIEsgYmxvZywgaW4gd2hpY2ggaGUgc2hhcmVkIHJlYWxseSBpbnRlbnNlIG9waW5pb25zIGFib3V0IGJyZWFraW5nIHJlYWxpdHkgYW5kIHN1bW1vbmluZyBhIGNhcnRvb24gY2hhcmFjdGVyIHRoYXQgY2FuIGRlZmVuZCBjYXJ0b29ucywgdGhlbWVkIGFyb3VuZCB0aW1lIGFuZCBjb2xvcnMsIGFuZCB0aGUgaHVsaywgdGhhdCBoZSBzZWVtZWQgdG8gaGF2ZSBzZWVuIGluIG15c2VsZiwgYW5kIHdlbGwuIApUaGVuIHlvdSB3YW50IHRvIGxlYXJuIHRoZXNlIGZyYW1ld29yay4gCkkgYW0gaW4geW91ciBhZ2UgYnJhY2tldCwgMzQsIGdvdCBteSB2YXNlY3RvbXkgbGl0dGxlIG92ZXIgYSB5ZWFyIGFnby4gCldlbGNvbWUgdG8gb3VyIEVhdGluZyBEaXNvcmRlciBBd2FyZW5lc3MgYW5kIFJlc291cmNlcyBwYWdlISBXZSBhcmUgY29tbWl0dGVkIHRvIGhlbHBpbmcgaW5kaXZpZHVhbHMgZmluZCByZWNvdmVyeSBmcm9tIGRpc29yZGVyZWQgZWF0aW5nIGFuZCBlYXRpbmcgZGlzb3JkZXJzLCBleHBsb3JlIGJvZHkgYXR0dW5lbWVudCwgYW5kIGV4cGVyaWVuY2UgbGliZXJhdGlvbiBmcm9tIGRpZXQgY3VsdHVyZS4gT3VyIHBoaWxvc29waHkgYWxsb3dzIHVzIHRvIGhvbm9yIGJvZGllcyBvZiBhbGwgc2hhcGVzIGFuZCBzaXplcyBieSB1dGlsaXppbmcgdGhlIEhlYWx0aCBhdCBFdmVyeSBTaXplIE1vZGVsIGFuZCBJbnR1aXRpdmUgRWF0aW5nLiBCZWxvdyBhcmUgcmVzb3VyY2VzIHRvIGdpdmUgeW91IG1vcmUgaW5mb3JtYXRpb24gb24gbGl2aW5nIGEgaGVhbHRoZnVsIGFuZCBiYWxhbmNlZCBsaWZlc3R5bGUgd2hpbGUgYmVpbmcgYXQgcGVhY2Ugd2l0aCBmb29kIGFuZCB5b3VyIGJvZHkuLiAKT24gRGVjZW1iZXIgNSwgdGhlIFVTIHdhcyBhZ2FpbiBmcnVzdHJhdGVkIGF0IHRoZSBVbml0ZWQgTmF0aW9ucyBTZWN1cml0eSBDb3VuY2lsIGFzIFJ1c3NpYSBhbmQgQ2hpbmEgdmV0b2VkIGEgcmVzb2x1dGlvbiBjYWxsaW5nIGZvciBhIHNldmVuIGRheSBjZWFzZWZpcmUgaW4gQWxlcHBvLiBSdXNzaWEncyByZWZ1c2FsIHdhcyBhICJtYWRlIHVwIGFsaWJpIiBzYWlkIE1pY2hlbGUgU2lzb24sIHRoZSBVUyBkZXB1dHkgZW52b3kgdG8gdGhlIFVOLCAid2Ugd2lsbCBub3QgbGV0IFJ1c3NpYSBzdHJpbmcgYWxvbmcgdGhlIFNlY3VyaXR5IENvdW5jaWwiLiAKWWV0IGl0IGlzIGVhc3kgYmVpbmcgaW4gaGVyIGNvbXBhbnksIG1heWJlIGl0IGlzIGJlY2F1c2Ugc2hlIGlzIGhvbmVzdCBhbmQgb3BlbiB3aXRoIGhlciBhbnN3ZXJzIGFuZCBqdXN0IGFzIGN1cmlvdXMgYWJvdXQgb3RoZXJzIGFzIHdlIGFyZSBhYm91dCBoZXIuSG93IGRvIHlvdSBmaW5kIHlvdXIgcGFydHMsIG9yIGRvIHRoZXkgZmluZCB5b3U/VGhleSBoYXBwZW4gc2ltdWx0YW5lb3VzbHkgZXZlcnkgY2hhcmFjdGVyIEkgaGF2ZSBwbGF5ZWQgd2FzIGFscmVhZHkgaW4gbWUgc29tZXdoZXJlLiBXZSBhcmUgbXVsdGkgZmFjZXRlZCBiZWluZ3MgYW5kIHRoYXQncyB3aGF0IGFjdGluZyBicmluZ3Mgb3V0IGluIHVzLkJ1dCwgdG8gbWUsIHlvdSBhbHdheXMgbG9vayBsaWtlIGhvdyBJIGltYWdpbmVkIHRoZSBjaGFyYWN0ZXJzIHNob3VsZCBsb29rLiAKRXZlcnl0aGluZyBpbiB0aGUgd2FsbGV0IHdlIGNvdWxkIFtoYXZlXSByZXBsYWNlZC4gCkkgd291bGRuIGhhdmUgYmVlbiBhYmxlIHRvIGdpdmUgdGhpcyBtb3JlIHRoYW4gMS8xMCBpZiBub3QgZm9yIHRoZSBzb2xlIGF0dHJhY3RpdmUgbGFkeSwgYW5kIHRvIGJlIGZhaXIgc2hlIHdhcyB2ZXJ5IGhvdC4gClRoZSBEQSBxdWVzdGlvbnMgQWRyaWFuIGFuZCB0aGVuIHNpdHMgZG93bi4gCkZvciBpbnN0YW5jZSwgc3R1ZGllcyBzdWdnZXN0IHRoYXQgdGhlIGVuZCBvZiBhbiBleHBlcmllbmNlIGhhcyBtb3JlIGluZmx1ZW5jZSBvbiBvdXIgbWVtb3JpZXMgdGhhbiB0aGUgb3ZlcmFsbCBleHBlcmllbmNlLiAKT2tlcmx1bmQgYmVnYW4gaGlzIHdlZWtseSB0ZWxldmlzaW9uIGFubm91bmNpbmcgYW5kIGludGVydmlld2luZyBjYXJlZXIgYnkgZmx1a2UuIEluIDE5NzYsIHdoZW4gQVdBIHdyZXN0bGVyL3Byb21vdGVyIFZlcm5lIEdhZ25lIGxvbmd0aW1lIGFubm91bmNlciBNYXJ0eSBPIGJyaWVmbHkgd2VudCBvbiBzdHJpa2Ugd2l0aCBvdGhlcnMgZnJvbSB0aGUgdGVsZXZpc2lvbiBzdGF0aW9uIHdoZXJlIHRoZWlyIHN0dWRpbyB3cmVzdGxpbmcgd2FzIHRhcGVkLCBPa2VybHVuZCB3YXMgYWxyZWFkeSBhIHdlbGwga25vd24gcm9jayByYWRpbyBESiBpbiB0aGUgYXJlYSwgd2l0aCBhIGRlY2VudCB2b2ljZS4uIApQb3VyIG1hIHBhcnQsIGonYWkgYXVzc2kgZXUgbCdvY2Nhc2lvbiBkZSB0cmF2YWlsbGVyIHN1ciBzb24gcHJjZGVudCBvdXZyYWdlIHBvcnRhbnQgc3VyIGxlIG1tZSB0aG1lLiAKU28gSSB3YXMgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaG93IGxvbmcgSSBoYWQgZnJvbSB0aGUgdGltZSBJIHNldCB0aGUgbmV0LCBiZWNhdXNlIEkga25vdyB3aGVuIHRoZSBzZWEgbGlvbnMgc2hvdyB1cCB0aGUgY2hhbmNlIG9mIG1lIGdldHRpbmcgZmlzaCBpcyB6ZXJvLCBpdCBhYnNvbHV0ZWx5IHplcm8sIGhlIHNhaWQuU2luY2UgdGhlIHZpZGVvIGhhcyBiZWVuIHNoYXJlZCwgTWFyc2RlbiBzYWlkIGhlIGhhcyByZWNlaXZlZCB0aHJlYXRzLlRob21hcyBTZXdpZCwgdmljZSBwcmVzaWRlbnQgb2YgdGhlIFBhY2lmaWMgQmFsYW5jZSBQaW5uaXBlZCBTb2NpZXR5LCBwb3N0ZWQgdGhlIHZpZGVvIGFuZCBhbiBleHBsYW5hdGlvbiB0aGF0IHNheXMgbnVtYmVycyBvZiBzZWEgbGlvbnMgdGhhdCBkaXZlIG9uIHNjaG9vbHMgb2YgaGVycmluZyBrZWVwIHRoZSBmaXNoIGRlZXAgaW4gdGhlIHdhdGVyLCBwcmV2ZW50aW5nIGZpc2hlcm1lbiBmcm9tIG1ha2luZyBhIGxpdmluZy5IZSBzYWlkIHNlYWxzIGFuZCBzZWEgbGlvbnMgYWxzbyBoYXZlIHRoZSBwb3RlbnRpYWwgdG8gc3Bvb2sgbGFyZ2Ugc2Nob29scyBvZiBhbHJlYWR5IG5ldHRlZCBoZXJyaW5nLCBjYXVzaW5nIHRoZSBmaXNoIHRvIGRpdmUuIApZb3UgY2Fubm90IHRyZWF0LCBkaWFnbm9zZSBvciBwcmVzY3JpYmUgZm9yIHlvdXJzZWxmIG9yIGZhbWlseS4gCkltcHJvdmUgeW91ciBwaWFubyBwbGF5aW5nLCBhbmQgeW91J3JlIGJldHRlciBhdCBwaWFubyBidXQgbm8gYmV0dGVyIGF0IHNld2luZyBvciBzdXJnZXJ5LiBCb2R5IGhhcyBzaW5nbGUgbnVtYmVycyB0aGF0IGFwcGx5IHRvIGxvdHMgb2Ygc3R1ZmYsIHdoaWxlIHNraWxsIGlzIGEgbG90IG9mIGluY3JlZGlibHkgc3BlY2lmaWMsIGNvbXBsaWNhdGVkIG5ldXJhbCBhZGFwdGF0aW9ucy4uIApLbm93IHRoYXQgdGhlIFRTQSBhZ2VudCByZWFkaW5nIHRoZSBib2R5IHNjYW5uZXIgcmVtb3RlbHkgQ0FOIHNlZSB5b3VyIHBpZXJjaW5ncyBvbiBvbmUgb2YgdGhvc2UgZnVsbCBib2R5IG1hY2hpbmVzIHdoZXJlIHlvdSBob2xkIHlvdXIgaGFuZHMgb3ZlciB5b3VyIGhlYWQuIE1vc3RseSB0aGV5IGRvbid0IGNhcmUhIQpQcm9zIGFuZCBjb25zLiJJZiB0aGV5IGFyZSBzbyBodWdlLCB0aGV5IG11c3QgYXQgbGVhc3QgYmUgZGVjZW50IHByZWRhdG9ycy4iIE5vLiBOby4gCiJJIGZlbHQgdGhhdCBhIGh1Z2UgcGFydCBvZiB0aGlzIGVudGVycHJpc2UgZGVwZW5kZWQgb24gZGlzY3JldGlvbiwgc28gSSB0cmllZCB0byBkaXNjb3VyYWdlIHNwZWN0YXRvcnMgd2hlbiBJIGNvdWxkLCBidXQgSSBjb3VsZG4ndCBzdG9wIHRoZSBndXlzIGJyaW5naW5nIGdpcmxmcmllbmRzIGFsb25nIHRvIHNob3cgb2ZmIGluIGZyb250IG9mLCBvciB0aGUgb2NjYXNpb25hbCBjZWxlYnJpdHkgc3RvcHBpbmcgYnkuIENlbGVicml0aWVzIHdlcmUgYWx3YXlzIGFsbG93ZWQsIHRvIGJlIGhvbmVzdC4gCllvdSBwbGF5IGxpa2UgdGhleSdyZSB0aGVyZSwgZGVhbGluZyB0aGVtIGNhcmRzIGVhY2ggaGFuZCwgYW5kIHBvc3RpbmcgdGhlaXIgYW50ZXMgYW5kIGJsaW5kcyBpbiBmb3IgdGhlbS4gCkJhcmJhcmEgV2FsdGVycyBoYWQgYWJzb2x1dGVseSBubyBpZGVhIHdoYXQgd2FzIGhhcHBlbmluZyBhcyB3ZWxsIGFzIG1hbnkgcGVvcGxlIHlvdSBqdXN0IGxpc3RlZC4uIApDYW4gc3BlYWsgZm9yIGhpc3RvcmljIHRpbWVzLCBidXQgaW4gcHJlaGlzdG9yaWMgdGltZXMgdGhlcmUgd2FzIGEgbWFzc2l2ZSBpbmZsdXguCklzIGZhY2luZyBodWdlIGZpbmVzLCBpdHMgcmVwdXRhdGlvbiBpbiB0YXR0ZXJzLCBhbmQgYSBDRU8gb24gdGhlIGVkZ2UuCk9mIGNvdXJzZSwgdGhlcmUgd2lsbCBhbHdheXMgYmUgc3R1ZGVudHMgd2hvIHdhbnQgdG8gY2hlYXQuIEFuZCBzdHVkZW50cyBiZWluZyBzYXZ2eSwgdGhlcmUgd2lsbCBhbHdheXMgYmUgd2F5cyB0byBnYW1lIHRoZSBzeXN0ZW0sIHRvIHRod2FydCB0aGUgc29mdHdhcmUsIHRvIGVsdWRlIGNhcHR1cmUgYnkgdGhlIHJvYm90cyB0aGVyZSB0byBmZXJyZXQgdGhpZXZlcyBvdXQuIEl0IHdpbGwgInVzZSBhIGNvbWJpbmF0aW9uIG9mIG1hY2hpbmUgbGVhcm5pbmcgYWxnb3JpdGhtcyBhbmQgZm9yZW5zaWMgbGluZ3Vpc3RpYyBiZXN0IHByYWN0aWNlcyB0byBkZXRlY3QgbWFqb3IgZGlmZmVyZW5jZXMgaW4gc3R1ZGVudHMnIHdyaXRpbmcgc3R5bGUgYmV0d2VlbiBwYXBlcnMuIgpJIHF1aWNrbHkgc3BpcmFsZWQgb3V0IG9mIGNvbnRyb2wgd2l0aCBteSBiZWhhdmlvciBhbmQgbWFkZSByZWFsbHkgYmFkIGRlY2lzaW9ucy4uIApZb3Uga25vdyB3aGF0PyBZb3Ugc2hvdWxkIGlnbm9yZSBpdC4gCkl0IGxvb2tzIGxpa2UgdGhlIGxhc3QgYml0IG9mIGN1cnJlbmN5IHdhcyBzcXVlZXplZCBvdXQgb2YgdGhpcyBvbGQgYnVpbGRpbmcsIHBlcmZvcm1hbmNlcyBiZWluZyBnaXZlbiByaWdodCB0byB0aGUgdmVyeSBlbmQgd2hpbGUgZm91bmRhdGlvbnMgZm9yIHRoZSBuZXcgYnVpbGRpbmcgd2VyZSBiZWluZyBjb25zdHJ1Y3RlZCAyNCBob3VycyBhIGRheS4gCkFuZCByZWFsIEFtZXJpY2FucyBhbmQgcmVhbCBVZ2FuZGFucyBhcmUgbWFubHkgYW5kIHZpcmlsZSBhbmQgZG8gbm90IHRha2UgaXQgdXAgdGhlIGFzcy4KQWNjb3JkaW5nIHRvIGEgc3R1ZHkgYnkgdGhlIEFtZXJpY2FuIFBvbGl0aWNhbCBTY2llbmNlIEFzc29jaWF0aW9uLCBieSAxOTkwLCB0aGUgVVMgaGFkIHRoZSBtb3N0IHVuZXF1YWwgaW5jb21lIGRpc3RyaWJ1dGlvbiBvZiBhbnkgaW5kdXN0cmlhbGl6ZWQgY291bnRyeS4uIApPZiBjb3Vyc2UgdGhlIERlbW9jcmF0cyB3YW50IHBlb3BsZSB0byBoYXZlIG1vcmUga2lkcywgOTAlIG9mIHRob3NlIGluIHdlbGZhcmUgdm90ZSBEZW1vY3JhdCEgQXMgZm9yIEFPQywgc2hlIHdhcyB0cnlpbmcgdG8gbWFrZSBhIHBvaW50IG9uIGNsaW1hdGUgY2hhbmdlLCBidXQgdGhlIHNvdW5kIGJpdGUgY2FtZSBvdXQgd3JvbmcuCkdheWxlIGhhcyBiZWVuIHN5bm9ueW1vdXMgd2l0aCByZXZvbHV0aW9uLiBIaXMgZXNjYXBhZGVzIG9uIHRoZSBjcmlja2V0IGZpZWxkIGhhdmUgY2hhbmdlZCBiYXR0aW5nIGZvcmV2ZXIgYW5kIG5vdyB0aGUgZXZlciBzbWlsaW5nVHJpbmlkYWRpYW4gd2FudHMgdG8gYmUgdGhlIGZhY2Ugb2YgYW5vdGhlciBjaGFuZ2UuIkkgYW0gZGVsaWdodGVkIHRvIGJlIGEgcGFydCBvZiB0aGlzIHJldm9sdXRpb24gKGluIG9ubGluZSBwb2tlciBpbmR1c3RyeSkgYnkgYmVpbmcgYXNzb2NpYXRlZCB3aXRoIHRoZSBsZWFkZXJzIGluIHRoZSBpbmR1c3RyeS4gCkhlIGxvdmVkIFNjb3R0aXNoIENvdW50cnkgRGFuY2luZywgcGxheWluZyBnb2xmLCBhbmQgd2FzIGEgY2FyZCBjYXJyeWluZyBtZW1iZXIgb2YgaGlzIG1vbnRobHkgcG9rZXIgY2x1YiBmb3Igb3ZlciAzMCB5ZWFycy4gCkV2ZXJ5b25lIG5vdyBrbm93cyB0aGF0IERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgZW1wbG95ZWUgU2hlcnlsIFNoZXJyb2Qgd2FzIHVuanVzdGx5IGZvcmNlZCB0byByZXNpZ24gYW5kIHZpbGlmaWVkIGFzIGEgInJldmVyc2UgcmFjaXN0IiBieSB0aGUgT2JhbWEgQWRtaW5pc3RyYXRpb24gYW5kIGV2ZW4gdGhlIE5BQUNQLiAKVHdvIGZ1bmRhbWVudGFsIHRydXRocyBhYm91dCBwYWNrYWdpbmcgYXJlIHJvdXRpbmVseSBvdmVybG9va2VkIGJ5IG1hcmtldGVycy4gRmlyc3QsIHBhY2thZ2luZyBpcyB0aGUgb25seSBtYXJrZXRpbmcgdmVoaWNsZSB0aGF0IDEwMCUgb2YgdGhlIGNvbnN1bWVycyB3aG8gYnV5IHlvdXIgcHJvZHVjdCBzZWUuIApUaGF0IHN0aWxsIGRvZXNuIHByb3Blcmx5IHJlc3BvbmQgdG8gbXkgcG9pbnQuIElmIHlvdSB0aGluayB0aGF0IGEgYmV0dGVyIHF1ZXN0aW9uIHRoYW4gZ28gbWFrZSB5b3VyIG93biB0aHJlYWQgaW5zdGVhZCBvZiBnb2luZyBvbiB0aGlzIG9uZS4KRm9yIHRoZSBnb29kIHJlYXNvbiBvZiBzZWN1cml0eSwgeW91bmcgQmh1dHRvIFphcmRhcmkgKEknbGwgcHJldGVuZCB0aGUgaHlwaGVuIGlzIHRoZXJlKSBoYXMgc3BlbnQgbXVjaCBvZiBoaXMgbGlmZSBvdXRzaWRlIHRoZSBkYW5nZXJvdXMgY29uZmluZXMgb2YgUGFraXN0YW4uIEFmdGVyIGhlIHNwb2tlIHRoZSBvdGhlciBkYXksIEkgdG9vayBoaW0gYXNpZGUgb3V0c2lkZSB0aGUgbWVldGluZyByb29tIGFuZCBwcmVzdW1hYmx5IGF3YXkgZnJvbSBiZWluZyBvZmYgdGhlIHJlY29yZCBhbmQgYXNrZWQsICJEbyB5b3UgdGhpbmsgeW91IGNhbiBzdXJ2aXZlIGluIFBha2lzdGFuPyIuIApFdmVuIGlmIFZpbGxhaW4gaXMgTEFHR1kgYW5kIGNvdWxkIGhhdmUgYW55IHR3byBjYXJkcywgd2Ugc3RpbGwgb25seSBoYXZlIGEgc2luZ2xlIHBhaXIgdGhhdCBpcyB0aGUgNHRoIGJlc3Qgb3ZlcnBhaXIuIE91ciBoYW5kIHNpbXBseSBpc24gVEhBVCBncmVhdCBhbmQgZ29pbmcgZm9yIHN0YWNrcyBqdXN0IGlzbiBhZHZpc2FibGUuIApMaWtlIHR3byBraWRzIGF0IGp1bmlvciBwcm9tLCB3aXRoIG15IGFybXMgYXJvdW5kIGhpcyBuZWNrIGFuZCBoaXMgYXJtcyB0aWdodCBhcm91bmQgbXkgd2Fpc3QsIHdlIHNsb3cgZGFuY2VkIHVuZGVyIHRoZSBkaXNjbyBiYWxsLCBpbiBvdXIgbGl0dGxlIFJlZCBSb29zdGVyIGJ1YmJsZS4KWW91ciBhbnN3ZXIgaXMgdGhlIGZpcnN0IEkgaGF2ZSBoZWFyZCB0byBiZSBleHBsYWluZWQgaW4gdGhpcyB3YXksIGJlY2F1c2UgdGhlIHdheSBpdCBoYXMgYmVlbiBleHBsYWluZWQgdG8gbWUgYW5kIGhvdyBsaWFiaWxpdHkgd29ya3MgaW4gb3VyIGNvdW50cnksIHRoZSBtYW5hZ2VyIHdhcyBsaWFibGUgYXMgc29vbiBhcyBoZSBhY2NlcHRlZCB0aGUgZGV2aWNlIGFzIGhpcyByZXNwb25zaWJpbGl0eS4gQWxzbyB0aGUgaHlwb3RoZXRpY2FsIHNpdHVhdGlvbiB5b3Ugc3VnZ2VzdCBkb2VzIG5vdCBjb2luY2lkZSB3aXRoIHRoZSBzaXR1YXRpb24gdGhhdCBoYXBwZW5lZC4gCldoZW4gaGUgc2hvd2VkIHVwLCBpdCB3YXMgaW4gaGlzIG93biBjYXIsIGFuZCBoZSBoYWQgTWNEb25hbGQgYnJlYWtmYXN0IGFuZCBjb2ZmZWUgZm9yIG1lLCBhbmQgaGUgdG9sZCBtZSB0byBzaXQgaW4gdGhlIGJhY2tzZWF0LCBhbmQgdGhlbiwgaGUgZHJvdmUgbWUgNzVrbSBob21lLiBIZSBkaWRuIHRhbGsgdG8gbWUgb3IgYXNrIG1lIHF1ZXN0aW9ucywganVzdCBjcmFua2VkIHNvbWUgbXVzaWMgYW5kIHRoYXQgd2FzIGl0LiBJIGZlbHQgbGlrZSBhIHRvdGFsIGR1bWJhc3MgYW5kIHdhcyBzbyBzbyBzbyB0aGFua2Z1bCB0aGF0IEkgd2FzbiBnZXR0aW5nIGEgbGVjdHVyZSBmcm9tIHNvbWUgcGF0ZXJuYWwgb2xkIGd1eSwgYW5kIEkgd2FzbiBnZXR0aW5nIGhpdCBvbiwgYW5kIHRoYXQgSSBjb3VsZCBqdXN0IGN1cmwgdXAgaW4gdGhlIGJhY2tzZWF0IGFuZCB0cnkgbm90IHRvIGNyeS4uIApJIGRvbiB3YW50IHRoZSB0aXRsZSBiYXIgdG8gY29tZSB1cCB3aGVuIEkgbW91c2UgdXAgdG8gY2xvc2UgYSBicm93c2VyIHRhYiwgYW5kIEkgZ290IGEgdGVlbnkgYml0IHRvbyBmYXIuIApDaGlhIGhhcyBob25lc3RseSBmdWNrZWQgdGhlIE9pbGVycyBzbyBiYWQuIEhlIGhhcyBzcXVhbmRlcmVkIHRoZSB0YWxlbnQgdGhhdCB0aGUgT2lsZXJzIGhhZCBnYWluZWQgdGhyb3VnaCB0aGUgZHJhZnQgdGhyb3VnaCBhIGNvbXBsZXRlIGluYWJpbGl0eSB0byBhc3Nlc3MgdGFsZW50LgpEaWRuIG1lYW4gdG8gbWFrZSBzdXBlcmZpY2lhbCBjb21tZW50cywgSSBsb29rZWQgdXAgaG93IHRvIG1ha2UgYWxtb25kIG1pbGsgb25lIHRpbWUsIGFuZCB3YXMgdHVybmVkIG9mZiBieSB0aGUgZmFjdCB0aGF0IGl0IHJlcXVpcmVkIHNvIG1hbnkgYWxtb25kcy4gClRoaXMgaXMgZW5vdWdoIG1vdGl2YXRpb24gZm9yIHBlb3BsZSB0byBqb2luIGFuZCBoYXZlIGZ1biB3aGlsZSBwbGF5aW5nLiBJdCBpcyBpbmV2aXRhYmxlIHRoYXQgcGVvcGxlIHdpbGwgbG9vayBmb3IgYSB0YW5naWJsZSByZXdhcmQsIGJ1dCBpbiBtb3N0IGNhc2VzLCBpbmRpdmlkdWFscyBhcmUgaGFwcHkgd2l0aCB0aGUgbGl0dGxlIHRoaW5ncyB0aGF0IHRoZXkgZ2V0Li4gCk15IGRhZCBkaWVkIHllYXJzIGJlZm9yZSBJIGJlY2FtZSBhIG1vbSAoSSBhbHNvIGhhdmUgUENPUyBhbmQgYW50aSBwaG9zcGhvbGlwaWQgYW50aWJvZGllcyB3aGljaCByZXF1aXJlZCBibG9vZCB0aGlubmVycyB0byBnZXQgYW5kIHN0YXkgcHJlZ25hbnQpLiBZb3VyIGZ1dHVyZSBjaGlsZHJlbiB3aWxsIGZlZWwgY2xvc2UgdG8geW91ciBkYWQuIApQbGVhc2UgdXNlIEthcm1hIERlY2F5IHRvIHNlZSBpZiB5b3VyIGdpZiBoYXMgYWxyZWFkeSBiZWVuIHN1Ym1pdHRlZC4KT25lIFVMIDIgcGVyc29uIGFuZCBvbmUgVUwgMSBwZXJzb24gdGVudC4gCk5vdXMgYXZvbnMgbWVuIGRlcyBleHByaWVuY2VzIHNyaWV1c2VzIGF2ZWMgbGEgdmFyaXQgbGEgcGx1cyBhbmNpZW5uZSBleHBsb2l0ZSBwYXIgbCdob21tZSwgbCdFbmdyYWluIChhcHBlbCAgdG9ydCAiUGV0aXQgRXBlYXV0cmUiIGNhciBjZSBuJ2VzdCBwYXMgdW4gcGVhdXRyZSkuIApNeSBoYXRyZWQgb2YgcGF5d2FsbHMgY29tZXMgZnJvbSBteSBleHBlcmllbmNlIG1vZGRpbmcgVElMLiAKVGhleSBib3VnaHQgYSB0b3duaG91c2UgaW4gYSBuaWNlIG5laWdoYm9yaG9vZC4gClBlb3BsZSBwaW5pbmcgYW5kIGJpdGNoaW5nIGZvciBsb290Ym94ZXMgYXJlIHdoeSBnYW1lcyBhcmUgZ29pbmcgdG8gc2hpdC4gQnV0IEkgZ2V0IGl0LCB5b3UganVzdCBIQVZFIHRvIGhhdmUgdGhhdCBzdXBlciBzaGlueSBza2luIGZvciB5b3VyIGd1biBpbiBvcmRlciB0byBoYXZlIGZ1bi4gSGF2ZSB5b3UgZXZlciBjb25zaWRlcmVkIG5vdCBnaXZpbmcgYSBzaGl0IGFib3V0IGNvc21ldGljcz8gSSBoYXZlbid0IHBhaWQgZm9yIGEgc2luZ2xlIGZ1Y2tpbmcgbG9vdGJveCB3aXRoIGFjdHVhbCBtb25leSBzaW5jZSB0aGV5IHN0YXJ0ZWQgYmVjb21pbmcgYnVzaW5lc3MgYXMgdXN1YWwuIApUaGVyZSBjb3VsZCBiZSBkaXNjb3ZlcnkgYW5kIGFuIGV2aWRlbnRpYXJ5IGhlYXJpbmcsIHdoaWNoIGNvdWxkIHRha2UgbW9udGhzLiAKQSBMYXMgVmVnYXMgZGVhbGVyIGZpbGxlZCB1cyBpbiBvbiB3aGF0IGFuZCBob3cgdG8gcGxheSAiVGV4YXMgSG9sZCAnZW0iIGFuZCBsaWZlIGhhcyBuZXZlciBiZWVuIHRoZSBzYW1lLiAKQnV0IGhpcyB2aWN0b3J5IHdhcyBvbmx5IHdvbiB3aXRoIGEgdHVybiBvZiBsdWNrIG9uIHRoZSBjb21tdW5hbCBjYXJkcywgb3IgZmxvcCwgd2hlbiBoZSBnYWluZWQgYSBzZWNvbmQgYWNlLCB0byB3aW4gd2l0aCBhIHBhaXIuClNoZSBkaWQgbGV0IGhpbSBrbm93IHRoYXQgaXQgd2FzIGV4dHJlbWVseSB1bmNvb2wgdG8gZG8sIGJ1dCB3b3JkZWQgc2xpZ2h0bHkgZGlmZmVyZW50bHkuIFNoZSB3YXMgdG9vIHVwc2V0IGFuZCBpbiBzaG9jayB0byByZWFsbHkgZXZlbiByZXNwb25kIGFwcHJvcHJpYXRlbHkuIEkgaGF2ZSBpbiB0aGUgcGFzdCBiYXNpY2FsbHkgdG9sZCBoaW0gdG8gZ28gZnVjayBoaW1zZWxmLCBzbyBoZSBuZXZlciBtZXNzZWQgd2l0aCBtZS4gCldoZW4gd2hhdCB5b3UgbG9va2luZyBmb3IgaXMgZm91bmQsIHJlcGx5ICJTb2x2ZWQhIiB0byB0aGUgZWFybGllc3QgY29tbWVudCB3aXRoIHRoZSBhbnN3ZXIuClByZXNzZWQgb24gd2hldGhlciBwb2tpZXMgaGFkIGNvc3QgTGFib3IgdGhlIGVsZWN0aW9uLCBNcyBXaGl0ZSBzYWlkIGhlciB0ZWFtIGhhZCBjb21lIHVwIGFnYWluc3QgdGhlIGJpZ2dlc3Qgc3BlbmRpbmcgY2FtcGFpZ24gaW4gVGFzbWFuaWFuIGhpc3RvcnksIGJ1dCB3b3VsZCBub3QgYmUgZnJpZ2h0ZW5lZCBpbnRvIGJhY2tpbmcgZG93bi4gClRoaXMgYXJ0aWNsZSBjb25zaWRlcnMgb25lIHN0cmF0ZWd5ICAgY2FsbGVkICJ0aWdodCIgaW4gcG9rZXIgYW5kIGNvbXBhcmVzIGl0IHdpdGggdHJhZGluZy4gSW4gcG9rZXIgYWxtb3N0IGV2ZXJ5IHRhYmxlIGhhcyBhIHZlcnkgdGlnaHQgcGxheWVyLiBUaGV5IG9ubHkgb3BlbiB3aXRoIGFjZXMgc3VpdGVkIG9yIGEgaGlnaCBwYWlyLiBUaGlzIGlzIGEgcmVhc29uYWJsZSBzdHJhdGVneSBhbmQgbW9zdGx5IHRoZXNlIHBsYXllcnMgbWFrZSBzbWFsbCBwcm9maXRzIG9yIGJyZWFrIGV2ZW4uIFRoZXkgcmFyZWx5IG1ha2UgbGFyZ2UgZ2FpbnMgdGhvdWdoIGJlY2F1c2Ugb3RoZXIgcGxheWVycyBrbm93IHRoYXQgb25jZSB0aGlzIHRpZ2h0IHBsYXllciByYWlzZXMgaGUgaGFzIGEgZ29vZCBoYW5kICBhbmQgc28gZXZlcnlvbmUgZm9sZHMgYXJvdW5kIHRoZW0uCkxhdmFsaW4ganVzdCBoYXBwZW5lZCB0byBnZXQgY2F1Z2h0LCBhbmQgbm93IHRoZSBnb3Zlcm5tZW50IGlzIGluIHRoZSBhd2t3YXJkIHBvc2l0aW9uIG9mIHdhbnRpbmcgdG8gaGVscCBvdXQgYSBtYWpvciBjb21wYW55IHdoaWxlIHRyeWluZyB0byBzdXBwb3J0IHRoZSBydWxlIG9mIGxhdy4uIAoiQmVjb21pbmciIHBhcnQgb2YgR29kIHdoZW4geW91IGRpZSBpcyB0aGUgd2FybWVzdCBmZWVsaW5nIHlvdSB3aWxsIGV2ZXIgZmVlbCwgaW1hZ2luZSBsaWtlIHB1cmUgd2hpdGUgbGlnaHQsIGl0IGhhcyBhbGwgdGhlIGZyZXF1ZW5jaWVzLCBub3cgaW1hZ2luZSBoZWFyaW5nIGV2ZXJ5IGZyZXF1ZW5jeSBvZiBzb3VuZC9saWdodC9ldGMgYXQgb25jZSBhbmQgYmVpbmcgb3ZlcndoZWxtZWQgYXQgZXZlcnkgbGV2ZWwgd2l0aCB3YXJtdGguIFRoYXQgd2hhdCBoZWF2ZW4gaXMsIHRoYXQgd2hhdCBHb2QgaXMsIHRoZSByZXN0IGlzIGp1c3QgbWFuIGF0dGVtcHRpbmcgdG8gcG9ydHJheSB0aGF0IGluZmluaXRlIGJlYXV0eSBhbmQgZ29vZG5lc3MgaW50byB0ZW1wb3JhcnkgaHVtYW4gd29yZHMgYW5kIGVtb3Rpb25zLiBFdmVuIEplc3VzIGRpZG4ga25vdyBob3cgdG8gY29tcGxldGVseSAidHJhbnNsYXRlIiBmcm9tIHRoZSBpbmZpbml0ZSB3b3JsZCB0byBvdXIgZGlzY3JldGUgd29ybGQuIE5laXRoZXIgZGlkIEJ1ZGRoYSBvciBNdWhhbW1hZC4gQWxsIG9mIHRoZW0gd2VyZSB0b3VjaGVkIGJ5ICJHb2QiIGFuZCBhdHRlbXB0ZWQgdG8gdHJhbnNsYXRlIHdoYXQgdGhleSBzYXcgaW4gdGhlIGV0ZXJuYWwgaW50byB0aGUgZGlzY3JldGUgYW5kIGRlcGVuZGluZyBvbiB0aGUgdGltZSwgY3VsdHVyZSwgZW52aXJvbm1lbnQsIHRoZSB0cmFuc2xhdGlvbiB3YXMgYWZmZWN0ZWQgYnkgdGhlIHZvY2FidWxhcnkgYW5kIGxpbmd1aXN0aWMgc3R5bGVzIG9mIHRoZSBwZW9wbGUgdGhleSB3ZXJlIGEgcGFydCBvZi4gVGhleSBhbGwgdGFsayBhYm91dCB0aGUgc2FtZSBvbmUsIHRydWUsIGV0ZXJuYWwgR29kLCBhbGwgYXJlIGEgbWl4IG9mIHRoZSByZWFsIHRoaW5nLCB3aXRoIHRoZSBjb3JydXB0aW9uIG9mIHRoZWlyIHRyYW5zbGF0aW9uIGJ5IG1hbmx5IG5lZWRzIGFuZCBkZXNpcmVzLgpMZWFybiB0byBkcmF3IGF0dGVudGlvbiB3aGVuIHlvdSBkYW5jZTogUGxheSB5b3VyIGZhdm9yaXRlIG11c2ljIGF0IGhvbWUgYW5kIGRhbmNlLCBkYW5jZSwgZGFuY2UgZm9yIGhvd2V2ZXIgbG9uZyB5b3Ugd2FudC4gUHV0IGEgbWlycm9yIGluIGZyb250IG9mIHlvdS4gUHJhY3RpY2UgYWxsIHRob3NlIHN0ZXBzIHlvdSBrbm93IGFuZCBpbnZlbnQgbmV3IG9uZXMgdW50aWwgeW91IGxpa2UgeW91cnNlbGYuIEEgZ29vZCBmcmllbmQgb2YgbWluZSByZWNvbW1lbmRlZCB0aGlzLiBTaGUgaXMgYW4gYWVyb2JpY3MgaW5zdHJ1Y3RvciBpbiBvbmUgb2YgdGhlIG1vc3QgcHJlc3RpZ2lvdXMgZ3ltcyBvZiB0aGUgY2l0eSBhbmQgdGFrZXMgYXQgbGVhc3QgMjAgbWludXRlcyBhIGRheSB0byBwbGF5IGhlciBmYXZvcml0ZSBtdXNpYyBhbmQgcHJhY3RpY2UgdGhlIG5ldyBtb3ZlbWVudHMgZm9yIHRoZSBkaXNjb3RoZXF1ZSAobm90IGZvciBoZXIgY2xhc3MpLiBTaGUgc2F5cyBpdCBpcyB3b25kZXJmdWwgdG8gZmVlbCB0aGUgbXVzaWMgaW5zaWRlIGFuZCBsZXQgeW91ciBib2R5IGdvIHdpdGggdGhlIHNvdW5kcy4gU2hlIGZlZWxzIHNleHkgYW5kIHlvdSBjYW4gYmUgc3VyZSB0aGF0IGV2ZXJ5Ym9keSB3YW50cyB0byBkYW5jZSB3aXRoIGhlci4gSSBoYXZlIHN0YXJ0ZWQgdG8gcHJhY3RpY2UgaXQ7IGhvd2V2ZXIsIGl0IGlzIGhhcmQgdG8gcmVsZWFzZSBvdXIgYXBwcmVoZW5zaW9uIGFib3V0IGJlbGlldmluZyB0aGF0IHdlIGhhdmUgZG8gaXQgcGVyZmVjdGx5LgpUaGVyZSdzIG5vIGxhdyBhYm91dCBpdCB3aGVyZSBJIGxpdmUsIGJ1dCB0aGV5IGFyZSBzdXBwb3NlZCB0byBiZSByZWdpc3RlcmVkIHdpdGggdGhlIGNvdW50eSAgIGFuZCBpZiB0aGV5J3JlIHJvYW1pbmcgd2l0aG91dCBhIGNvbGxhciwgdGhleSBjYW4gYmUgcGlja2VkIHVwIChhbmQgbGF0ZXIgcmV0cmlldmVkKSBieSBhbmltYWwgY29udHJvbC4KQXVzdHJpYSdzIENsZW1lbnMgU2NoYXR0c2NobmVpZGVyIGNvbXBldGVzIGR1cmluZyB0aGUgU2hhdW4gV2hpdGUgQWlyIGFuZCBTdHlsZSBzbm93Ym9hcmQgdG91cm5hbWVudCBhdCB0aGUgImJpcmQncyBuZXN0IiBOYXRpb25hbCBTdGFkaXVtIGluIEJlaWppbmcgRGVjZW1iZXIgMywgMjAxMS4gKE1pZ3VlbCBUb3Jhbi9SZXV0ZXJzKQpXZSBjbyBwYXJlbnQsIGdvIHRvIGFsbCBoaXMgZXZlbnRzIHRvZ2V0aGVyIGFuZCBoaXMgYmlydGhkYXkgcGFydGllcyBhcmUgdG9nZXRoZXIuQnV0IG15IHN0ZXAgc2libGluZ3MgaGFkIHRoZSBzYW1lIGN1c3RvZHkgeW91IGRpZCwgYW5kIHRoZWlyIG1vdGhlciBwb2lzaW9uZWQgdGhlbSB0byB0aGUgcG9pbnQgdGhhdCB0aGV5IGRpZG4gc2VlIG9yIHRhbGsgdG8gdGhlaXIgZGFkIHRpbGwgdGhleSB3ZXJlIGluIHRoZWlyIG1pZCB0d2VudGllcyBhbmQgcmVhbGl6ZWQgdGhleSBoYWQgYmVlbiBwbGF5ZWQuTG9va3MgbGlrZSBoZSBoYXMgYm91Z2h0IGl0IGFsbCBob29rIGxpbmUgYW5kIHNpbmtlciBhbmQgdXNlcyB5b3UgZm9yIGNhc2ggYW5kIGFzIGEgYml0IG9mIGEgcHVuY2hpbmcgYmFnLkkgaGF2ZSBubyBhZHZpY2UsIGJlY2F1c2UgdGhpcyBzaGl0IGlzbiBhIGZpeCB0aGF0IGhhcyBhIGRlZmluaXRpdmUgYW5zd2VyLCBhbmQgbWlnaHQgaGF2ZSBubyBhbnN3ZXIuSSBhbSBwdWxsaW5nIGZvciB5b3UgYW5kIGhvcGUgeW91IGNvbWUgb3V0IG9mIHRoaXMgb2suIAoiSGUga25ldyB3aGF0IGhlIHdhbnRlZCB0byBkby4gSGUga25ldyBob3cgaGUgd2FzIGdvaW5nIHRvIGRvIGl0LCBhbmQgaXQgZG9lc24gc2VlbSBsaWtlIGhlIGhhZCBhbnkga2luZCBvZiBlc2NhcGUgcGxhbiBhdCBhbGwsIiBWYW4gWmFuZHQgc2FpZC4KVGhleSBtYXkgZW5kIHVwIGluIGludGVuc2l2ZSBjYXJlLCBpbiB0aGUgb3BlcmF0aW5nIHJvb20gb3IgaGF2ZSB0aGVpciBuZXdib3JucyBzZW50IHRvIGludGVuc2l2ZSBjYXJlLiAKV2hhdCB3ZSBhcmUgZmFjaW5nIGlzIGEgYmFua3J1cHRjeSBvZiBpZGVhcywgYSBnb3Zlcm5pbmcgY2xhc3MgICBjb3ZlcmluZyB0aGUgcG9saXRpY2FsIGFuZCBtaWxpdGFyeSBzcGVjdHJ1bSAgIHRoYXQgY2FuJ3QgYXNrIHRoZSByaWdodCBxdWVzdGlvbnMgYW5kIHRoZXJlZm9yZSBpcyBpbiBubyBwb3NpdGlvbiB0byBnZXQgdGhlIHJpZ2h0IGFuc3dlcnMuLiAKR29vZCB0aGluZyBpcywgeW91IGNhbWUgaGVyZSBhbmQgcG9zdGVkIHlvdXIgZ3JhcGggd2hpY2ggaW5kaWNhdGVzIHlvdSBoYXZlIHNvbWUgZm9ybSBvZiB0aWx0IGNvbnRyb2wuIFNvbWUgcGxheWVycyBtYXkgaGF2ZSBkZXBvc2l0ZWQgbW9yZSBtb25leSBpbiBhbmQgZG9ua2VkIGl0IG9mZi4KU28gdm9yYmVyZWl0ZXQga2FubiBpY2ggZWlnZW50bGljaCBudXIgamVkZW0gZW1wZmVobGVuIHNpY2ggQ2hpbmEgbWFsIHNlbGJzdCBhdXMgZGVyIE4gYW56dXNjaGF1ZW4uIApNYW55IGNvdXBsZXMgcHJlZmVyIGEgdGhpY2tlciBsdWJlIChhIHJhdGhlciB0aGFuIGEgImxpcXVpZCBmb3IgYW5hbCBzZXguIApUb2RheSBNYWMncyBtYWNoaW5lIGhhcyBiZWNvbWUgdGhlIGZpcnN0IGNob2ljZSBmb3IgZXZlcnlib2R5IHNwZWNpYWxseSB0aG9zZSB3aG8gbGlrZSB0byBwbGF5IG9ubGluZSBnYW1lcy4gClBva2VyIGlzIHBsYXllZCBzaW5jZSBhIGxvbmcgdGltZSBpbiB0aGUgY2FzaW5vcyB0aHJvdWdob3V0IHRoZSB3b3JsZC4gUGxheWVycyBvZiB0aGUgY2FzaW5vcyBoYXZlIGJlY29tZSBpbnRlcmVzdGVkIGFib3V0IHRoaXMgY2VydGFpbiBnYW1lIGluIHRoZSByZWNlbnQgZmV3IHllYXJzLiBUaGV5IGhhdmUgc3RhcnRlZCBwdWxsaW5nIGluIGh1Z2UgY2FzaCBlYWNoIHNpbmdsZSBkYXkganVzdCBwbGF5aW5nIHBva2VyIGluIHRoZSBjYXNpbm9zLiBUaGVpciBzdWNjZXNzIGhhdmUgbW90aXZhdGVkIG1hbnkgb3RoZXIgcGVvcGxlIGFib3V0IGNhc2lubyBnYW1lcyBhbmQgcG9rZXIgZ2FtZXMuIE5vdCBhbGwgdGhlIHBlb3BsZSBwbGF5aW5nIGluIHRoZXNlIHBsYWNlcyBhcmUgZXF1YWxseSBzdWNjZXNzZnVsIGJ1dCBhbGwgb2YgdGhlbSB3YW50IHRvIHBsYXkgYW5kIG1ha2UgbW9uZXkuIFRoYXQncyB3aHkgdGhleSBmb2xsb3cgdGhlaXIgbWVudG9ycyBpbiB0aGUgY2FzaW5vcy4gVGhlIG1lbnRvcnMgd2l0aCBhIGRhc2hpbmcgU2lsdmVyIEN1dCBPdXQgSGVhcnQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaW4gaGFuZHMgZ2V0IGEgbG90IHBlb3BsZSB0byBmb2xsb3cuIEFzIGEgcmVzdWx0LCB0aGV5IGhhdmUgYmVjb21lIGludGVyZXN0ZWQgaW4gcHVyY2hhc2luZyB0aG9zZSBoZWZ0eSBwaWVjZXMgZm9yIHRoZWlyIGNhcmRzLiBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yd2FyZCB0byBidWlsZCBhIHBva2VyIGNhcmVlciwgeW91IHNob3VsZCBtb3ZlIG9uIHdpdGggU2lsdmVyIEN1dCBPdXQgSGVhcnQgUG9rZXIgQ2FyZCBQcm90ZWN0b3IuCkZlYXR1cmluZyB0aGVyZWxlYXNpbmcgb2YgdGhlIHplcm8gSUJVIGhhenkgSVBBIHRpdGxlZDogSGFzIHRoYXQgbGluZSBldmVyIHdvcmtlZCBmb3IgeW91IGJlZm9yZT8hIE9uZSBkb2xsYXIgb2YgZWFjaCBwaW50IHNvbGQgYmVuZWZpdHMgUGluayBCb290cyBTb2NpZXR5IGFuZCBhbm90aGVyICQxIHdpbGwgYmUgZG9uYXRlZCB0byBBbmQgTm93IFNoZSBSaXNlcy4gVGhlIGV2ZW50IGFsc28gZmVhdHVyZXMgREogdHVuZXMsIHBlcmZvcm1hbmNlIGZyb20gQXNobGV5IER1Qm9zZSwgYW5kIGEgYm9vayBkcml2ZSBmb3IgbG9jYWwgbGlicmFyaWVzIGFuZCBzaGVsdGVycy4gVGhpcmQgU3QuLCBNaW5uZWFwb2xpczsgNjEyIDQ1NCAwMjU4Li4gCkEgc2ltcGxlIGUgZ3JhbmQgcGlhbm8gaXMgZ29pbmcgdG8gZG8gdGhlIGpvYjsgaWYgeW91IHJlYWxseSBmZWVsIGxpa2UgeW91IG5lZWQgc29tZXRoaW5nIGFtYXppbmcsIGZpbmQgYW4gZSBncmFuZCB0aGF0IGFsc28gaGFzIHN0cmluZ3MuIFRoYXQgd2F5IHlvdSBzb3J0IG9mIGdldCBhIGZlZWwgZm9yIGhvdyB0aGV5IG1pZ2h0IGZpdCBpbnRvIGFuIGFycmFuZ2VtZW50LiBQbGF5aW5nIGFyb3VuZCB3aXRoIGEgc3RhbmRhcmQgcGlhbm8sIHVuZGVyc3RhbmRpbmcgaGFybW9uaWVzIGFuZCB0aGUgbGlrZXMgaXMgZ29pbmcgdG8gZ2V0IHlvdSBxdWl0ZSBmYXIgdG8gc3RhcnQgb2ZmIHdpdGgsIGV2ZW4gd2l0aCBhIGNoZWFwIGUgZ3JhbmQhLiAKS2VlcCBwYWlycyB3aGVuIHlvdSBzZWUgdGhlbS4gVW5sZXNzIHlvdSBoYXZlIGEgaGlnaCB3aW5uaW5nIGNvbWJpbmF0aW9uLCBjaG9vc2UgY29tYmluYXRpb25zIHRoYXQgYXJlIHNpbXBsZTogYSBwYWlyLCB0d28gcGFpcnMsIG9yIHRocmVlIG9mIGEga2luZC4gVGhlc2UgaGFuZHMgaGF2ZSBzbWFsbGVyIHBheW91dHMgYnV0IGEgaGlnaGVyIGNoYW5jZSBvZiBvY2N1cmluZy5bOF0gVGhlIHBheW91dHMgZm9yIHBhaXJzIGFuZCB0aHJlZSBvZiBhIGtpbmRzIHdpbGwgYmUgbGlzdGVkIG9uIHRoZSBwYXlvdXQgdGFibGUuLiAKRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBUaGUgV2FzaGluZ3RvbiBTdGF0ZSBDb3VnYXJzIG1hc2NvdCAiQnV0Y2giIHBlcmZvcm1zIG9uIHRoZSBzaWRlbGluZSBkdXJpbmcgdGhlIENvdWdhcnMgZ2FtZSBhZ2FpbnN0IHRoZSBVdGFoIFV0ZXMgYXQgUmljZSBFY2NsZXMgU3RhZGl1bSBvbiBOb3ZlbWJlciAxMSwgMjAxNyBpbiBTYWx0IExha2UgQ2l0eSwgVXRhaC4gKFBob3RvIGJ5IEdlbmUgU3dlZW5leSBKci9HZXR0eSBJbWFnZXMpLiAKU28gcGxlYXNlLCBpbiAyMDIwLCBsZWFybiBhYm91dCB0aGUgY2FuZGlkYXRlcy4gUmVnaXN0ZXIgdG8gdm90ZS4gClRoZSBhc3N1bXB0aW9uIEknbSBtYWtpbmcgaXMgdGhhdCBzaGUgd2lsbCBpbmRlZWQgd2luLi4gClBsZWFzZSBkZW1vbnN0cmF0ZSBnb29kIGZhaXRoIGluIHlvdXIgY29tbXVuaWNhdGlvbiBhbmQgdGhhdCB5b3UgaGF2ZSBlbmdhZ2VkIHdpdGggdGhlIHN1YnJlZGRpdCBkb2N1bWVudGF0aW9uIGFuZCBwcmV2aW91cyBtZXNzYWdlcy4uIApJIGhhdmUgcGxheWVkIGZvciA0IGhvdXJzIHN0cmFpZ2h0IGFuZCBldmVyeSBkZWF0aCB3YXMgcmVjb3JkZWQsIHNob3dpbmcgc25hcHB5IGFpbWJvdHMgd2l0aCB3YWxsaGFja3MgYW5kIGV2ZW4gdGhlIGFiaWxpdHkgdG8gcGFzcyB0aHJvdWdoIHdhbGxzLiBXaGVuIHlvdSBhcmUgaW4gYSBiYXRodHViICh3aXRoIHRoZSBkb29yIGNsb3NlZCBhbmQgd2hpbGUgcHJvbmVkKSBkdXJpbmcgYSBib21iaW5nIHJ1biwgYW5kIHlvdSBnZXQgMSBzaG90IHdpdGggYSBwaXN0b2wsIHlvdSBsb29rIHVwIGF0IHRoZSBraWxsZmVlZCBhbmQgc2VlIGl0IGp1c3Qgc2Nyb2xsaW5nIHdpdGggaGVhZHNob3RzIGFzIHlvdXIgd2hvbGUgc3F1YWQgZGllcyB0byBhbiBhdHRhY2tlciwgeW91IGp1c3QgaGF2ZSB0byB3YXRjaCB0aGUga2lsbGNhbS4gCkV4Y2l0ZWRieW5hcHMgIDEzIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkhlJ3MgcHJvYmFibHkgaW4gdGhlIGRpc3RpbmN0IG1pbm9yaXR5IG9mIGEgbGFyZ2VseSB5b3VuZ2VyLCBzaW5nbGUgaGFwcHkgaG91ciBjcm93ZCwgYW5kIGl0J3MgcmVhbGx5IGJhZCBmb3JtIHRvIGluc2lzdCB1cG9uIGJlaW5nIGEgZm9vdGxvb3NlIHBhcnR5IGJveSB3aGVuIHlvdSBoYXZlIGEgc3BvdXNlIHdhaXRpbmcgZm9yIHlvdS4gCkltIGEgc29mdHdhcmUgZGV2ZWxvcGVyIGFuZCBlbmdpbmVlciwgdGhpcyBjb250cmFjdCB3b3VsZCBwcmV2ZW50IHlvdSBmcm9tIHVwbG9hZGluZyBjb2RlIHRvIHdlYnNpdGVzIGxpa2UgZ2l0aHViICh0aGF0IG1ha2VzIHlvdSAxMDAlIHVzZWxlc3MgdG8gYW55IGFuZCBldmVyeSBzb2Z0d2FyZSBjb21wYW55KS4KSSBrbm93IEkgd2FzIHN1cGVyIHBhcmFub2lkIGR1cmluZyBteSB3ZWRkaW5nIHBsYW5uaW5nIGFuZCBJIHdhc3RlZCBhIGxvdCBvZiB0aW1lIHdvcnJ5aW5nIGFib3V0IHdoZXRoZXIgcGVvcGxlIHRob3VnaHQgSSB3YXMgYSBicmlkZXppbGxhLiBJIHdhcyBub3QgYSBicmlkZXppbGxhLCBidXQgSSB3YXMgc28gYWZyYWlkIG9mIGxvb2tpbmcgbGlrZSBvbmUgdGhhdCBJIHdhcyBzY2FyZWQgdG8gZXZlbiBzaGFyZSBteSBvcGluaW9ucyEgQW55d2F5LCBoYXZlIGZ1biB3aXRoIHBsYW5uaW5nIHlvdXIgd2VkZGluZyBhbmQgbWFrZSBzdXJlIHlvdXIgZmlhbmMgZmVlbHMgdmFsdWVkLi4gCktlbGx5ICJuZWVkcyB0byByb3QgaW4gamFpbCwiIHNheSBwYXJlbnRzIG9mIHdvbWFuIHdobyBsaXZlcyB3aXRoIHNpbmdlckdheWxlIEtpbmcgcmV2ZWFscyBuZXcgdmlkZW8gZnJvbSBSLiBLZWxseSBpbnRlcnZpZXdXb21hbiBsaXZpbmcgd2l0aCBSLiAKV29ya2VkIGF0IGEgcGl6emEgcGxhY2Ugb24gdGhlIGJlYWNoLCB3ZW50IHRvIGFuIG9wZW4gYmFyIENocmlzdG1hcyBwYXJ0eSBmb3IgdGhlIHJlc3RhdXJhbnQgYW5kIG1hZGUgZnJpZW5kcyB3aXRoIGEgY28gd29ya2VyIHRoZXJlIGFuZCB3ZSBzdGFydGVkIGRhdGluZy4gSSBsaXZlZCBpbiBoZXIgYXBhcnRtZW50IGZvciBhIHdoaWxlIGFuZCB0aGVuIHN0YXJ0aW5nIHdvcmtpbmcgYXQgSmltbXkgSm9obiB3aGVyZSBzaGUgYWxzbyB3b3JrZWQuCkV2ZW4gd2l0aGluIHRoYXQgcmVsYXRpdmVseSBzaG9ydCBwZXJpb2QsIHdlJ3ZlIGdvbmUgZnJvbSBoYXZpbmcgYSB0eXBpY2FsICJ5ZWxsb3cgZHVzdCIgcGVyaW9kIHdoZXJlIHBvbGx1dGlvbiB3YXMgcGFydGljdWxhcmx5IGJhZCwgdG8gYmFzaWNhbGx5IGhhdmluZyB0aGF0IGJhZCBwZXJpb2QgZm9yIHRoZSBlbnRpcmUgeWVhci4gCkJleW9uZCBiZWluZyBhY2NlcHRhYmxlLCBJIHRoaW5rIGl0IGlzbiBldmVuIHJ1ZGUgdG8gaWdub3JlIHRoZW0uCkhlcmUncyB0aGUgZGVhbCAobm8gcHVuIGludGVuZGVkKS4gSSBwdXJjaGFzZWQgYWJvdXQgZm91ciBvZiB0aGVzZSBzaW5jZSB3ZSBoYWQgYSBsb3Qgb2YgYmxhY2tqYWNrIHBsYXllcnMsIGFuZCB3aGlsZSBubyBvbmUgcmVhbGx5IGNhcmVkLCB3ZSBzdGlsbCBoYWQgYSBmZXcgY29tcGxpbWVudHMuIApCdWxsZXRob2xlcyBpbiB0aGUgd2luZG93cywgc3RheWVkIHRoZXJlIGZvciBhbG1vc3QgYSB5ZWFyLiBJIGdvdCBoZWxkIHVwIGF0IGtuaWZlIHBvaW50IGZvciBraWNrcy4gClRoZXkgdGhlbiB1c2UgdGhhdCBvcHBvcnR1bml0eSB0byBnZXQgdGhvc2UgZXllYmFsbHMgdG8gb3RoZXIgc2hvd3Mgb3IgcHJvZ3JhbW1pbmcuaW4gdGhhdCB3YXkgc3BvcnRzIGlzIG1vcmUgdmFsdWFibGUgdG8gdGhlIG5ldHdvcmtzIHRoYW4gaXQgaXMgZm9yIHRoZSBsZWFndWVzLiBUaGV5IGhhdmUgb3RoZXIgd2F5cyB0byBsZXZlcmFnZSB0aG9zZSBleWViYWxscyBpbnRvIHNvbWV0aGluZyBlbHNlLiBTbyB0aGV5IGNhbiBsb3NlIG1vbmV5IHRoZXJlIGJ1dCBnYWluIG1vcmUgYWQgcmV2ZW51ZSBpbiBvdGhlciBwcm9ncmFtbWluZy52aWV3aW5nIGhhYml0cyBhcmUgY2hhbmdpbmcgdGhvdWdoIHNvIHRoaXMgbWlnaHQgbm90IGJlIGEgdmlhYmxlIG1vZGVsIGZvciBtdWNoIGxvbmdlciBidXQgdGhhdCB0aGUgaWRlYSBiZWhpbmQgdGhlc2UgaHVnZSB0diBjb250cmFjdHMuIApJIGRvbid0IGtub3cgaWYgaSdtIGJldHRlciBvZmYgcmFpZGluZyBzb21lIDcyMDBSUE0gZHJpdmVzIG9yIGdldHRpbmcgYSBkZWRpY2F0ZWQgZHJpdmUgZm9yIG15IFNRTCBkYXRhYmFzZSAod2hpY2ggZ2V0cyBoZWF2aWx5IHVzZWQpLiBBbHNvIEkgd291bGQgbG92ZSB0byBhZGQgc29tZSByZWR1bmRhbmN5IGluIFJBSUQgYXMgSSBkb24ndCBiYWNrIHVwIG5lYXJseSBlbm91Z2ggYW5kIEkgaGF2ZSBiZWVuIHZlcnkgZm9ydHVuYXRlIHdpdGggbXkgUkFJRCAwIFJhcHRvcnMuICh3aGljaCBJIGxvdmUgYW5kIEkgaGVhciB0aGUgdmVsaWNvcmFwdG9ycyBhcmUgZXZlbiBiZXR0ZXIpIEFsc28gSSB0aGluayBBc3VzIFA2VCBoYXMgYW4gaW50ZWdyYXRlZCBTQVMgY29udHJvbGxlciB3aGljaCBtaWdodCBtYWtlIHRoZSAxNWsgZHJpdmVzIGV2ZW4gbW9yZSBhcHBlYWxpbmc/IEkgdW5kZXJzdGFuZCBub2lzZSBpcyBhIHByb2JsZW0gd2l0aCB0aGUgMTVrIGRyaXZlcyBhbmQgSSB3b3VsZCBwcmVmZXIgc29tZXRoaW5nIG1vcmUgb24gdGhlIHF1aWV0IHNpZGUuCkZsdXNoZXMgaXMgdGhlIGNhcmQgaGFuZCB3aGVuIHlvdSBoYXZlIGZpdmUgY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBhdCBubyBwYXJ0aWN1bGFyIG9yZGVyLCBzdWNoIGFzIHR3byBvZiBoZWFydHMsIHNpeCBvZiBoZWFydHMsIGFjZSBvZiBoZWFydHMsIG5pbmUgb2YgaGVhcnRzIGFuZCBraW5nIG9mIGhlYXJ0cy4gWW91IGNhbiBhbHNvIGhhdmUgYSByZWd1bGFyIHN0cmFpZ2h0IHdoZW4geW91IGhhdmUgZGlmZmVyZW50IHN1aXRzIHRoYXQgZm9ybSBhIGNvbnNlY3V0aXZlIHJhbmtpbmcgb2YgdGhlIGNhcmRzIChzdWNoIGFzIHNldmVuIG9mIGNsdWJzLCBlaWdodCBvZiBzcGFkZXMsIG5pbmUgb2YgZGlhbW9uZHMsIHRlbiBvZiBkaWFtb25kcywgYW5kIGphY2sgb2YgaGVhcnRzKS4uIApUaGVyZSBzZWVtIHRvIGJlIGEgTE9UIG9mIHNlbGZpc2gsIG5hcmMgeSBKTnMgd2l0aCBiaXphcnJlbHkgYmFkIHBhbGF0ZXMgd2hvIGluc2lzdCB1cG9uIEVWRVJZT05FIGZvbGxvd2luZyB0aGVpciBwcmVmZXJlbmNlIGZvciBhZ2dyZXNzaXZlbHkgYmFkIGZvb2QuIFNhZCBUYWNvcyBpcyB0aGUgZmlyc3Qgb25lIHdobyBjb21lcyB0byBtaW5kLCBidXQgdGhlcmUgaGF2ZSBiZWVuIG1hbnkgc2hvY2tpbmdseSBiYWQgY29va3MgYW5kIGZyZWFraXNobHkgcGlja3kgZWF0ZXJzIHdobyBpbnNpc3QgdGhhdCBFVkVSWU9ORSBtdXN0IHNoYXJlIHRoZWlyIGZvb2QgbmV1cm9zZXMuIEluZHVzdHJpYWwgc3RyZW5ndGggYmxhbmRuZXNzIHNlZW1zIHRvIGJlIGEgY29tbW9uIGF0dHJpYnV0ZSwgYXMgaWYgZ2l2aW5nIHlvdXIgdGFzdGUgYnVkcyBhIGxpdHRsZSBleGVyY2lzZSBpcyBzb21lIGtpbmQgb2Ygc2NhcnksIGZvcmJpZGRlbiBzaW4gdGhhdCBOTyBPTkUgbXVzdCBleHBlcmllbmNlLiAKVGhlIE1hZ2VzIGd1aWxkIGJvbnVzIHNob3VsZCBzdWZmaWNlIHRvIGxldCB5b3UgaWdub3JlIE1lZGl0YXRpb24sIEkgdGhpbmsgdXNlIHlvdXIgb3duIGJlc3QganVkZ21lbnQuIApBcnRpc3RzIGFyZSB2ZXR0ZWQgYnkgZ292ZXJubWVudCBvZmZpY2lhbHMgYW5kIGEgcGFuZWwgb2Ygb3RoZXIgbGVnaXQgYXJ0aXN0cyBiZWZvcmUgdGhleSBjYW4gcGFydGljaXBhdGUgaW4gdGhlIHByb2dyYW0sIGFuZCB0aGUgd29ya3MgdGhleSBkb25hdGUgaGF2ZSB0byBtZWV0IGEgY2VydGFpbiBzdGFuZGFyZCBvZiBxdWFsaXR5LiAKV2hhdCBDRVMgMjAxNyBIYXMgVG8gT2ZmZXIgRm9yIFRlY2ggTG92ZXJzVGhlIE5ld2VzdCBUZWNoIEF0IFRoZVRoZSBJbnRlcm5hdGlvbmFsIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgKENFUyAyMDE3KVNpbW9uIFRjaGVkaWtpYW4gZGlzcGxheXMgYSBTZXZlbmh1Z3Mgc21hcnQgcmVtb3RlIGR1cmluZyBhIHByZXNzIGV2ZW50IGZvciBDRVMgMjAxNy4gVGhlIFVTRCAyOTkgZGV2aWNlIGlzIGRlc2lnbmVkIGFzIGEgdW5pdmVyc2FsIHJlbW90ZSB0byBvcGVyYXRlIG1hbnkgaG91c2Vob2xkIGRldmljZXMgYW5kIGlzIHNjaGVkdWxlZCB0byBiZSByZWxlYXNlZCBpbiBKdW5lIDIwMTcuIChQaG90byBieSBEYXZpZCBCZWNrZXIvR2V0dHkgSW1hZ2VzKS4gCkZpcnN0IHRpbWUgdGhhdCB3YXMgbWVudGlvbmVkIChub3Qgb2ZmZXJlZCkgdG8gbWUgYXMgc29tZXRoaW5nIEkgd291bGQgZW5qb3kgYnkgYW4gU08gSSB3YXMgcHJldHR5IGluc3VsdGVkIGhvbmVzdGx5LiBPbmx5IGJlY2F1c2UgaXQgd2FzIGNvbXBsZXRlbHkgYXNzdW1lZCB0aGF0IGl0IHdhcyBzb21ldGhpbmcgSSB3b3VsZCBlbmpveSBhbmQgdGhlbiBkaXNtaXNzZWQgd2hlbiBJIHNhaWQgSSB3b3VsZG4gdGhvdWdoLiBJIHNlZSBub3RoaW5nIHdyb25nIHdpdGggZ2l2aW5nIGl0IGEgc2hvdCBsaWtlIHlvdSBkaWQgaWYgdGhhdCBzb21ldGhpbmcgdGhhdCB5b3UgaW50ZXJlc3RlZCBpbiwgYnV0IGl0IHJlYWxseSBhbm5veWluZyB3aGVuIHlvdSB0cmVhdGVkIGxpa2UgeW91IGFic29sdXRlbHkgTVVTVCBsaWtlIHRoZSBzb3VuZCBvZiBpdCwgZXZlbiB3aGVuIHlvdSBnaXZlIGFuIGhvbmVzdCBhbnN3ZXIgdGhhdCB5b3Ugd291bGQgbmV2ZXIgYmUgaW50ZXJlc3RlZCBpbiBzb21ldGhpbmcgbGlrZSB0aGF0Li4gClRheCBicmFja2V0cy4gCkl0IHRha2VzIG1vcmUgZWZmb3J0IHRvIGFjaGlldmUgdGhlIHNhbWUgcmVzdWx0LCBhbmQgdGhlcmUgYXJlIG1vcmUgb2JzdGFjbGVzIHRvIG92ZXJjb21lIGFsb25nIHRoZSB3YXkuIFlvdSBib3RoIGhhdmUgdG8gbWFzdGVyIHRoZSBib3NzIGZpZ2h0cywgYnV0IHRoZXkgY2FtZSBpbnRvIHRoZSByb29tIGF0IGhhbGYgaGVhbHRoLCBzbyB0byBzcGVhay4gClRoZSBuZXcgYmlsbCwgQUIxNjcsIHdoaWNoIHdhcyBpbnRyb2R1Y2VkIGludG8gdGhlIENhbGlmb3JuaWEgYXNzZW1ibHkgb24gSmFudWFyeSAyMiwgYWxsb3dzIHRoZSBTdGF0ZSdzIEluZGlhbiB0cmliZXMsIGxpY2Vuc2VkIGNhcmQgY2x1YnMsIGFuZCByYWNldHJhY2tzIHRvIG9mZmVyIG9ubGluZSBwb2tlci4KSW50ZXJlc3RpbmdseSwgdGhlc2Ugc3VwcGxlbWVudHMgZW5oYW5jZSB0aGUgYmVuZWZpdHMgb2YgZXhlcmNpc2UgZm9yIGJyYWluIGZ1bmN0aW9uIFsxMSAxM10uIFBvc3NpYmxlIGNvbW1vbiBtZWNoYW5pc21zIG9mIGFjdGlvbiBmb3IgZXhlcmNpc2UgYW5kIGRpZXQgb24gY29nbml0aW9uIGFyZSBkaXNjdXNzZWQuLiAKRXMgZ2lidCB2ZXJzY2hpZWRlbmUgTWV0aG9kZW4sIHVtIHp1IG1pc2NoZW4sIGFiZXIgZWluIFBva2VyIE1pc2NoZW4gYmVzdGVodCBub3JtYWxlcndlaXNlIGF1cyB6d2VpIFJpZmZsZXMsIGVpbmVyIEJveCwgZWluZW0gd2VpdGVyZW4gUmlmZmxlIHVuZCBlaW5lbSBBYmhlYmVuLiAKU29iZXJib3QgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClRoZSBiaWxsIHN1Z2dlc3RzIHRoYXQgdGhlIGNvbXByb21pc2Ugd2lsbCBiZSB0aGF0IGluc3RlYWQgb2YgYWxsb3dpbmcgdHJhY2tzIGxpa2UgRGVsIE1hciB0byBsYXVuY2ggdGhlaXIgb3duIHBva2VyIHdlYnNpdGUsIHRoZSB0cmliZXMgd2lsbCBnaXZlIHRoZSB0cmFja3MgYW4gYW5udWFsIHBheW1lbnQgZnJvbSBwb2tlciByZXZlbnVlcy4gV2hpbGUgdGhpcyBoYXMgcHJldmlvdXNseSBiZWVuIGEgbm9uIHN0YXJ0ZXIgZm9yIHRoZSBob3JzZSByYWNpbmcgaW5kdXN0cnksIHNvbWUgc291cmNlcyBoYXZlIGV4cHJlc3NlZCBvcHRpbWlzbSB0aGF0IGJvdGggc2lkZXMgbWlnaHQgYmUgd2lsbGluZyB0byBtYWtlIHNvbWUgY29uY2Vzc2lvbnMuQW5vdGhlciBzdGlja2luZyBwb2ludCB3YXMgcmVpdGVyYXRlZCBpbiByZWNlbnQgd2Vla3MgYnkgUGVjaGFuZ2EsIHdoaWNoIGlzIGNvbmNlcm5lZCBhYm91dCB0aGUgcm9sZSBvZiBQb2tlcnN0YXJzLCB0aGUgYmlnZ2VzdCBpbnRlcm5ldCBwb2tlciBjb21wYW55IGluIHRoZSB3b3JsZC4gClRoZW4gdGhlIGV4YWN0IHRpbWUgb2Ygd2hlbiBpdCBoYXBwZW5lZC4gSXQgaGFwcGVuZWQgcmVjZW50bHkuIApJIGNhbiBzdGlsbCBmZWVsIHRoZSBwYWluIGluIG15IGZlZXQgYWZ0ZXIgYSBsb25nIHNoaWZ0IGFuZCByZW1lbWJlciBydWJiaW5nIHRoZW0gaW4gYWdvbnkuIApLbmlnaHQgQXV0b2Jpb2dyYXBoeSBiZW5qYW1pbiBmcmFua2xpbiBwZGYgZnJlZSBkb3dubG9hZCBIaW5kaSBoZCBtb3ZpZSBzb25ncy4gOCBtYXJzIDIwMTggLiAKSGF2aW5nIGhlbHAgYXZhaWxhYmxlIGZvciBwbGF5ZXJzIHdpbGwgYmVjb21lIGluY3JlYXNpbmdseSBpbXBvcnRhbnQgYXMgdGhlIGVudGh1c2lhc20gb2YgdGhlIGdhbWUgZ29lcyBmb3J3YXJkLi4gCkhlIHRvb2sgdGhlIG5ldyBjb21wdXRlciBob21lIGFuZCB0aGVuIHR1cm5lZCBhcm91bmQgdG8gY29tZSBiYWNrIGFuZCBnZXQgdXMsIGhhdmluZyBsZWZ0IHVzIGFsb25lIGZvciBlYXNpbHkgNDAgbWludXRlcy4gClNvbWV0aGluZyB0aGF0IHF1aWNrbHkgaWRlbnRpZmllcyB3aGljaCBmaWxlIGluIGEgY29tcGxpY2F0ZWQgdGhlbWUgaGFzIHRoZSB3b3JkLCBwaHJhc2Ugb3IgZnVuY3Rpb24gSSBuZWVkIHRvIGZpbmQgc28gSSBjYW4gcXVpY2tseSBjaGFuZ2UgYSB3b3JkIG9yIHR3bywgb3IgYSBmdW5jdGlvbi4gCkJvc3RvbiBHbG9iZSBNZWRpYSBQYXJ0bmVycyBpcyBtYWRlIHVwIG9mIGRpZmZlcmVudCBsZWdhbCBlbnRpdGllcywgaW5jbHVkaW5nIGl0cyBhZmZpbGlhdGVzIGFuZCBzdWJzaWRpYXJpZXMuIFdoZW4gd2UgbWVudGlvbiBHbG9iZSBvciBpbiB0aGlzIHByaXZhY3kgbm90aWNlLCB3ZSBhcmUgcmVmZXJyaW5nIHRvIHRoZSByZWxldmFudCBhZmZpbGlhdGUgb3Igc3Vic2lkaWFyeSBvZiBCb3N0b24gR2xvYmUgTWVkaWEgUGFydG5lcnMgcmVzcG9uc2libGUgZm9yIHByb2Nlc3NpbmcgeW91ciBpbmZvcm1hdGlvbi4gRGF0YSBhbmQgcHJpdmFjeSBsYXcgaW4gY2VydGFpbiBqdXJpc2RpY3Rpb25zIGRpZmZlcmVudGlhdGVzIGJldHdlZW4gdGhlICJjb250cm9sbGVyIiBhbmQgInByb2Nlc3NvciIgb2YgaW5mb3JtYXRpb24uIApFLiBXLiAKTCBhdmFpdCBzaSBib25uZSBwcmVzc2UgcXUgbGEgUmVuYWlzc2FuY2UgaWwgdGFpdCBpbnZpdCAgbGEgdGFibGUgZHUgcm9pIExvdWlzIFhJViBzb3VzIGxhIGZvcm1lIGRlIHJvc3NvbGlzLCB1bmUgbGlxdWV1ciAgYmFzZSBkZSBmZW5vdWlsLCBkIGV0IGRlIGNhbm5lbGxlLCBlbnRyZSBhdXRyZXMuIEV1cGVwdGlxdWUsIGVsbGUgcGVybWV0dGFpdCBhdSByb2kgZGUgZmFjaWxpdGVyIGxlcyBkaWdlc3Rpb25zIHBuaWJsZXMgcXVlIHNlcyBleGNzIGRlIHRhYmxlIG9jY2FzaW9ubmFpZW50IHJndWxpcmVtZW50LgpIb3cgdG8gUGxheSBPbWFoYSBQb2tlcgpJIHN0dWNrIHRvIDEyMDBjYWwgZm9yIGFib3V0IDUgbW9udGhzLCBsb3N0IDYwbGJzLiBGZWx0IGdyZWF0IHRoZSB3aG9sZSB0aW1lLgpJdCBmZWVscyBoZWF2ZW5seS4uIApBZnRlciBhYm91dCAzIHNlY29uZHMgb2YgYmVpbmcgYSBiaXQgYW5ub3llZCwgdGhlIGZpc2ggd2lsbCBmb3JnZXQgd2hhdCB0aGV5IHdlcmUgYW5ub3llZCBhYm91dCBhbmQgZ2V0IGJhY2sgdG8gdGhlaXIgdXN1YWwgc3dpbW1pbmcgYXJvdW5kLgpJdCdzIGp1c3QgdGhlIGxhdGVzdCBzYWxseSBpbiB0aGUgb25nb2luZyBkZWJhdGUgb3ZlciBwb2tlciB0aGF0J3MgYmVlbiByYWdpbmcgZm9yIG1vcmUgdGhhbiAxNTAgeWVhcnMuIApZb3UgaGF2ZSB0byBidWlsZCBpdC4gCkkgcHJldHR5IGNlcnRhaW4gbXkgb3RoZXIgZW1wbG95ZXIgZGlkbiByZXF1aXJlIHRoYXQuLiAKV2hhdCBhbiBhbWF6aW5nIGV4cGVyaWVuY2UgdGhlIHdob2xlIHRyaXAgd2FzIS4gCkZ1bm5pbHkgZW5vdWdoLCBLeWxlIEhhZ2VsIHBsYXlzIGZvciB0aGUgUGhvZW5peCBDb3lvdGVzIGZhcm0gdGVhbSB0aGUgUG9ydGxhbmQgUGlyYXRlcyBhbmQgbXkgc29uIEJyYWQgaXMgdGhlIGFzc2lzdGFudCBnZW5lcmFsIG1hbmFnZXIgb2YgdGhlIFBob2VuaXggQ295b3Rlcy4gSGUgc2lnbmVkIEt5bGUgYnV0IGhlIG5ldmVyIHRvbGQgbWUuIAoiSSB3YXMgaW4gYSByZWFsbHkgc2FkLCBkYXJrIHBsYWNlIGFuZCBJIHRob3VnaHQgJ0hvdyBjYW4gSSBkbyBzb21ldGhpbmcgcG9zaXRpdmUgd2l0aCB0aGlzIG5lZ2F0aXZlIGVuZXJneSBhbmQgZmlnaHQgZm9yIG15IG93biBjYXVzZT8nIiBzaGUgc2FpZC4gIkkgaGFkIGEgY291cGxlIG9mIGZyaWVuZHMgd2hvIGtuZXcgcGVvcGxlIHdpdGggTVMgYW5kIHRoZXkgdG9sZCBtZSB0byByZWFjaCBvdXQgdG8gQ2hyaXMgTGVubmVydCBhdCBMZWZ0IEhhbmQgQnJld2luZyBDb21wYW55IC4iCkF2YWlsYWJpbGl0eSBvZiBmdW5kcyBpcyBhIGJhc2ljIHJlcXVpcmVtZW50IGZvciBoaXJpbmcgYSBjYXNpbm8sIHRvIGRldGVybWluZSB0aGUgcXVhbGl0eSBvZiB5b3VyIHBhcnR5LiBJZiB5b3UgYnVkZ2V0IGlzIGxpbWl0ZWQsIHlvdSBtdXN0IHNlbGVjdCBhIGNhc2lubyB0YWJsZSwgYW4gZXhwZXJ0IG9uIHlvdXIgYnVkZ2V0IGlzIHNtYWxsZXIsIGxpZ2h0ZXIgYW5kIGxlc3MuIFNvbWUgY29tcGFuaWVzIHByZWZlciB0byBnbyB3aXRoIGEgZnVsbCBzaXplIHByb2Zlc3Npb25hbCB0YWJsZSBhdCB0aGUgY2FzaW5vLCBob3dldmVyLCB0byBwcm92aWRlIGFuIGluZXhwZW5zaXZlIGFsdGVybmF0aXZlLi4gCldlIHRvdGFsbHkgYWdyZWUgb24gdGhpcy4gSXQganVzdCBzb3VuZGVkIGxpa2UgeW91IHdlcmUgc2F5aW5nIGZpbmFuY2VzIGRpZG4gbWF0dGVyIGlmIHRoZXkgd2VyZSBiZWluZyB3ZWlnaGVkIGluIHRoZSBkZWNpc2lvbiBhbmQgSSB0aGluayB0aGV5IHRvdGFsbHkgZG8uClRoZSBBbmtlciBhY3R1YWxseSBoYXMgYW4gYWRqdXN0YWJsZSBmb2N1cyB0aGF0IGdvZXMgZnJvbSBmbG9vZCBsaWdodCAobm8gZm9jdXMpIHRvIHNwb3QgbGlnaHQgKHZlcnkgZm9jdXNlZCkuIE15IE5pdGVjb3JlIGhhcyBubyBhZGp1c3RtZW50IGJ1dCBpcyBtb3JlIGZvY3VzZWQgYW5kIGJyaWdodGVyIHNvIGl0IHJlYWNoZXMgYSBiaXQgZnVydGhlciBidXQgdGhlIGJhdHRlcnkgbGlmZSBpcyB3b3JzZS4uIApJbiB0aGlzIE5vdi4gOSwgMjAwNSwgZmlsZSBwaG90bywgUHJlc2lkZW50IEJ1c2ggYXdhcmRzIGJhc2ViYWxsIGxlZ2VuZCBGcmFuayBSb2JpbnNvbiB0aGUgUHJlc2lkZW50aWFsIE1lZGFsIG9mIEZyZWVkb20gQXdhcmQgaW4gdGhlIEVhc3QgUm9vbSBvZiB0aGUgV2hpdGUgSG91c2UgaW4gV2FzaGluZ3Rvbi4KSGUgd2FzIHNwZWFraW5nIGF0IGEgJydwb3N0IGVsZWN0aW9uIHN1bW1pdCcnIGhlbGQgYXQgU291dGhzIExlYWd1ZXMgQ2x1YiBhbmQgYXR0ZW5kZWQgYnkgcmVwcmVzZW50YXRpdmVzIGZyb20gbW9yZSB0aGFuIDEwMCBjbHVicyBpbiB0aGUgSHVudGVyIGFuZCBDZW50YWwgQ29hc3QuIApCdXQgc3VyZWx5IHBhdHJpYXJjaHkgaXMgYSB3b3JkIHdlIG11c3QgcmV2aXZlICBldmVuIGlmIHdlIHNheSBpdCBpcyBub3QgYWJvdXQgbWVuIHBlciBzZSAgIHdoZW4gY29uZnJvbnRlZCB3aXRoIHRoZSBtaXNvZ3lueSBtaXhlZCB3aXRoIG1hbGUgcHJpdmlsZWdlIHRoYXQgc2VlbXMgdG8gYmUgcnVubmluZyByYW1wYW50IG9mZiBvZiBjb2xsZWdlIGNhbXB1c2VzLiBJbnN0YW5jZSwgaW4gSXJhbiAiYmFkIiB3b21lbiBhcmUgYmVpbmcgYmxhbWVkIGZvciBjYXVzaW5nIGVhcnRocXVha2VzLiBBY2NvcmRpbmcgdG8gYSBDTk4gcmVwb3J0LC4gClRoZSBjb21wZXRpdGlvbiBpcyBtdWx0aSBmYWNldGVkLCBhbmQgdGFrZXMgcGxhY2UgaW4ganVzdHNvbWUgb2YgdGhlIGZvbGxvd2luZyB3YXlzOiBsZWdhbCBnYW1ibGluZyB2ZXJzdXMgKHZzLiApbm9uIGxlZ2FsIGdhbWJsaW5nIGFzIHdlbGwgYXMgdHJhZGl0aW9uYWwgY2FzaW5vcyB2cy4gTmV2YWRhIHZzLiBOZXcgSmVyc2V5IChhbmQgdGhlIHJlc3Qgb2YgdGhlIG5hdGlvbikuIE5vcnRoZXJuTmV2YWRhIHZzLiBTb3V0aGVybiBOZXZhZGEuIFRoZSAiZG93bnRvd24gYXJlYSIgb2YgUmVubyB2cy4gbG9jYXRpb25zYSBmZXcgYmxvY2tzIGF3YXkuIFJlbm8gdnMuIFNwYXJrcy4gVGhlIExhcyBWZWdhcyAic3RyaXAiIHZzLiJkb3dudG93biIgTGFzIFZlZ2FzIChhbmQgdGhlICJGcmVtb250IFN0cmVldCkgZXhwZXJpZW5jZS4gR2FtYmxpbmdlc3RhYmxpc2htZW50cyBpbiAidHJhZGl0aW9uYWwiIGxvY2F0aW9ucyBpbiB0b3ducyB2cy4gZXhwYW5zaW9uIGludG9uZXcgInJlc2lkZW50aWFsIiBuZWlnaGJvcmhvb2RzLiBMYXMgVmVnYXMgdnMuIExhdWdobGluLCBOZXZhZGEuIFJlbm92cy4gVGFob2UuIExhbmQgYmFzZWQgY2FzaW5vIHZzLiAiT2xkIiBnYW1lcyAoYm90aCB0YWJsZSBhbmQgbWFjaGluZSkgdnMuIG5ldyBtYWNoaW5lc3RoYXQgYXJlIGJlaW5nIGRldmVsb3BlZC4gIlBsYXllcnMiIChvciB0aG9zZSBzZWVraW5nImVudGVydGFpbm1lbnQiKSB2cy4gY2FzaW5vIG9wZXJhdG9ycy4gLiAnVGhlIHByb2R1Y3RpbiBSZW5vIGlzIHBsZWFzaW5nIGEgbG90IG1vcmUgcGVvcGxlIC4gYnV0IGl0J3MgZGlzdHVyYmluZyB0aGF0IHdlaGF2ZSBzbyBtdWNoIGNvbXBldGl0aW9uLCcgaGUgW0J1ZGR5IEZyYW5rLCBSU0NWQSBtZW1iZXJdIHNhaWQsZW1waGFzaXppbmcgUmVubydzIG5lZWQgdG8gY29udGludWUgaW1wcm92aW5nIGl0cyBwcm9kdWN0LiBJZiBpdGRvZXNuJ3QsIGhlIHNhaWQsICd3ZSBjb3VsZCBsb3NlIChidXNpbmVzcykgZmFyIG1vcmUgcXVpY2tseSBub3cgdGhhbndlIGV2ZXIgY291bGQgaW4gdGhlIHBhc3QuJyBWaXNpdHMgdG8gSW5kaWFuIGNhc2lub3MgYXBwZWFyIHRvIGJlcmlzaW5nIGJlY2F1c2UgbW9yZSBjYXNpbm9zIGFyZSBub3cgbG9jYXRlZCBpbiBrZXkgUmVubyBmZWVkZXJtYXJrZXRzLCBsaWtlIHRoZSBQYWNpZmljIE5vcnRod2VzdCBhbmQgTm9ydGhlcm4gQ2FsaWZvcm5pYS4iIChKb2huU3RlYXJucywgMTk5NiwgIlRvdXJpc3RzIExpa2UgUmVubywgQnV0IFJpdmFscyBHYWluIiBpbiB0aGUgUmVub0dhemV0dGUgSm91cm5hbCwgTm92ZW1iZXIgMjEsIDE5OTYsIHBhZ2UgMUUpLgpJIHRoaW5rIGl0IGRlcGVuZHMsIHRvby4gTXkgY3VycmVudCB3b3JrcGxhY2UgZG9lc24gY2FyZSBidXQgbXkgaW50ZXJuc2hpcCB3YXMgYXQgYSBwc3ljaCBob3NwaXRhbCBhbmQgd2hpbGUgdGhleSB3ZXJlbiAxMDAlIG5vIHZpc2libGUgdGF0dG9vcywgSSB0aGluayBhIGZ1bGwgc2xlZXZlIHdvdWxkIGJlZW4gZnJvd25lZCB1cG9uLiBJdCB3YXMgdGhlIG9ubHkgcGxhY2Ugd2hlcmUgSSB3b3JyaWVkIGFib3V0IGhhdmluZyB0byBkeWUgbXkgaGFpciBiYWNrIHRvIGl0cyBuYXR1cmFsIGNvbG9yOyBpdCB3YXMgcGFydGlhbGx5IHB1cnBsZSBhdCB0aGUgdGltZSBhbmQgdGhlIG9ubHkgcmVhc29uIHRoZXkgZGlkbiBob2xkIG1lIHRvIHRoZSBwb2xpY3kgd2FzIGJlY2F1c2UgSSB3YXMgYSBzdHVkZW50Li4gClRoaXMgaXMgd2h5IFNhbmRlcnMsIHVubGlrZSBhbnkgb2YgdGhlIG90aGVyIGNhbmRpZGF0ZXMgd2hvIGhhcyBhbm5vdW5jZWQgc28gZmFyLCBpcyBjYWxsaW5nIGZvciBhIGNvbXBsZXRlIHBvbGl0aWNhbCByZXZvbHV0aW9uLiBIZSB3YW50cyB0byByZWRlZmluZSB0aGUgaWRlb2xvZ2llcyB0aGF0IGRvbWluYXRlIFdhc2hpbmd0b24gYW5kIGhlIG5lZWRzIHVzIHRvIGVsZWN0IGNhbmRpZGF0ZXMgdGhhdCBzdXBwb3J0IGhpcyBpZGVvbG9neSB1bmRlciBoaXMgbGVhZGVyc2hpcCBhcyBwcmVzaWRlbnQuIApUaGVuIGNhbWUgTGFycnkgU3VtbWVycyBhbmQgdGhlIFRBUlAgYmFpbG91dHMgYW5kIHRoZSBpbmNyZWFzZSBvZiB0cm9vcHMgaW4gYm90aCBJcmFxIGFuZCBBZmdoYW5pc3RhbiBhbmQgc28gbWFueSBiZXRyYXlhbHMgdGhhdCBieSBub3csIG15IGhlYXJ0IGlzIGxpa2Ugc3RvbmUgYW5kIHRoZXJlIGlzIG5vdGhpbmcgbGVmdCBmb3IgdGhlIE9iYW1hIGl0ZXMgdG8gZG8gdGhhdCB3aWxsIGh1cnQgbWVPciBzbyBJIHNheS4gCk5vdXMgbmUgbm91cyBmb2NhbGlzb25zIHBhcyBzdXIgbGVzIHNhbG9ucyBkZSBtYXNzYWdlLiBOb3VzIGxlcyBhdm9ucyBzb3VzIGxlIG5leiBkYW5zIGRlcyBydWVzIHByb2NoZXMgZGUgbm9zIGRvbWljaWxlcyBjb21tZSBEaWRpZXIgc2VtYmxlIGF2b2lyIGxlcyBiYXJzICBodGVzc2UgZGFucyBzb24gY29pbi4gUGV1dCB0cmUgYXVzc2kgcGFyY2UgcXVlIGxlcyBodGVzc2VzLCBkYW5zIGxlIHByaW5jaXBlLCBzb250IGwgZCdhYm9yZCBwb3VyIGZhaXJlICJ0cmlucXVlciIgbGVzIGNsaWVudHMsIGonZW50ZW5kcyBsZXMgYW1lbmVyICBjb21tYW5kZXIgZGVzIGJvdXRlaWxsZXMgIGRlcyBwcml4IGxldnMuIApXZSBtYW5hZ2VkIHRvIHRhbGsgdGhlIGd1eSB3aG8gZGlkIG91ciBiYXRocm9vbSB0byBpbnN0YWxsIGEgcHJvcGVyIDIyMHcgb3V0bGV0IGp1c3QgYmVsb3cgdGhlIHNpbmsuIApVbmRlcnN0YW5kIHRoZSBncmF2aXR5IG9mIGJlaW5nIHRoZSBmaXJzdCBwZXJzb24gdG8gaG9sZCB0aGlzIGNyaXRpY2FsIHJvbGUsIEthdHogc2FpZC4KUmVpa2kgaXMgYW4gYWx0ZXJuYXRpdmUgZm9ybSBvZiBoZWFsaW5nIGJhc2VkIG9uIHRoZSBwcmVtaXNlIHRoYXQgbGlmZSBmb3JjZSBmbG93cyB0aHJvdWdoIGFsbCBwZW9wbGUgYW5kIGNhbiBiZSBjaGFubmVsZWQgYnkgb25lIHBlcnNvbiBpbnRvIGFub3RoZXIuIFRoaXMgbGlmZSBmb3JjZSBvciBlbmVyZ3kgaXMgc3Bpcml0dWFsIGluIG9yaWdpbi4gSXQgaXMgY2hhbm5lbGVkIHZpYSB0aGUgbGF5aW5nIG9uIG9mIGhhbmRzLCBhbHRob3VnaCB0aGUgaGFuZHMgZG8gbm90IG5lY2Vzc2FyaWx5IG5lZWQgdG8gdG91Y2ggdGhlIHBoeXNpY2FsIGJvZHkgdG8gZG8gc28uIEhlcmUgYXJlIGEgZmV3IHRpcHMgdG8gaGVscCB5b3UgYmV0dGVyIHVuZGVyc3RhbmQgUmVpa2k6Ck91ciB2aWV3IGlzIHRoYXQgcGVvcGxlIHdobyBmYWNlIGEgbWFjaGluZSBhbGwgZGF5IGNyYXZlIGludGVyYWN0aW9uLiAKSSBmb3VuZCA0IHBhdmVyIHN0b25lcyB1bmRlciBtb3JlIHBpbmUgc3RyYXcuIApXaW5uaW5nIHRvdXJuYW1lbnRzIGxpa2UgdGhpcyBpcyBubyBsb25nZXIgdGhlIHByaXZpbGVnZSBvZiB0aGUgZWxpdGUuIFdpdGggdGhlIHJpZ2h0IHNraWxscywgZXZlcnlvbmUgY2FuIGJlIGEgd2lubmVyIGFuZCB0aGlzIGFwcGVhbHMgdG8gYSBsb3Qgb2YgbmV3IGFuZCBwcm9zcGVjdGl2ZSBwb2tlciBwbGF5ZXJzLiBXaXRoIHRoZSB3b3JsZCBzZWVpbmcgYW4gYW1hdGV1ciBwbGF5ZXIgd2lubmluZyBhZ2FpbnN0IHNvbWUgb2YgdGhlIGJlc3QgcGxheWVycyBpbiB0aGUgd29ybGQsIHBva2VyIHJlYWxseSBoYXMgdGFrZW4gb2ZmLgpBY2NvcmRpbmcgdG8gYW4gaW5kdXN0cnkgaW5zaWRlciwgZWFjaCBvZiB0aGUgb2Zmc2hvcmUgY2FzaW5vcyBzZWVzIGF2ZXJhZ2UgbmV0IHByb2ZpdCBlYXJuaW5ncyBvZiBSczEuNzUgY3JvcmUgcGVyIGRheSwgd2hpbGUgZWFjaCBvZiB0aGUgMTAgb2RkIG9uc2hvcmUgY2FzaW5vcyBlYXJuIFJzMy43NSBsYWtoIHRvIFJzNCBsYWtoIHBlciBkYXkuIE9mZmljaWFsIGZpZ3VyZXMgcGVnIHRoZSB0dXJub3ZlciBvZiBHb2FuIGNhc2lub3MgYXQgUnMxLDAwMCBjcm9yZSBhbm51YWxseS4gClBva2VyIGhhcyBiZWVuIHF1aXRlIGFuIGV4Y2l0aW5nIGNhcmQgZ2FtZSB0aGF0IGF0dHJhY3RzIHBlb3BsZSBiZWNhdXNlIG9mIHB1cmUgZnVuIGFuZCBlbnRlcnRhaW5tZW50IHZhbHVlLCBhcyB3ZWxsIGFzIHRoZSBtb3RpdmF0aW9uIHRvIGVhcm4gbW9uZXkuIFRoaXMgaXMgYSBmb3JtIG9mIGdhbWJsaW5nIHdoaWNoIHdhcyBwb3B1bGFyIGluIHNvY2lldHkgZm9yIGEgbG9uZyB0aW1lIGFnby4gUmFwaWQgcHJvZ3Jlc3MgaW4gdGhlIGZpZWxkIG9mIGludGVybmV0IGFuZCBjb21tdW5pY2F0aW9uIHRlY2hub2xvZ3kgaGFzIGxlZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgbWFueSBvbmxpbmUgZ2FtYmxpbmcgc2l0ZXMgdGhhdCBtYWRlIHZhcmlvdXMgZm9ybXMgb2YgZ2FtYmxpbmcgYmluZ28sIHBva2VyLCBibGFja2phY2ssIFJvdWxldHRlLCBCYWNjYXJhdCwgc2xvdCBQYWNoaW5rbyBhbmQgcG9wdWxhciB0aHJvdWdob3V0IHRoZSB3b3JsZC4KSSB3aWxsIHVzZSBteSBtb3N0IHBvd2VyZnVsIHdlYXBvbiB0byBkZWZlYXQgSXNpcyBhbmQgQXNzYWQuIAoiWW91IHdhbGsgaW4gdGhlcmUsIHlvdSBjYW4ndCB3aW4uIApBbmQgc28gdGhleSBzdGFydGVkIHVzaW5nIG1hZ2VudGEgZm9yIHRoZSBiYW5uZXIgYW5kIGZvciBvdGhlciB0aGluZ3MgYXMgd2VsbC4iLiAKSSBtZWFuLCBnb2luZyB0byBhIHN0b3JlIGFuZCBnb2luZyBvdXQgd2l0aG91dCBidXlpbmcgYW55dGhpbmcsIHJldHVybmluZyBpdGVtcywgc2VuZGluZyBmb29kIGJhY2ssIGNhbGxpbmcgcGVvcGxlLCBiZWluZyBvdXQgb24geW91ciBvd24sIGV4ZXJjaXNpbmcgaW4gcHVibGljLCBhcHByb2FjaGluZyBzdHJhbmdlcnMuIEFsbCBvZiB0aG9zZSBhcmUgbm9ybWFsIHRoaW5ncyB0aGF0IHBlb3BsZSBkbyBsaXRlcmFsbHkgZXZlcnkgZGF5LCBhbmQgbm9ib2R5ICAgc2VyaW91c2x5LCBub2JvZHkgICBoYXMgZXZlciBqdWRnZWQgeW91IG9yIGFueW9uZSBlbHNlIGZvciBkb2luZyB0aG9zZS4KVW5saWtlIHRoZSBtb251bWVudCBlcmVjdGVkIGluIHRoZSB5ZWFycyBpbW1lZGlhdGVseSBmb2xsb3dpbmcgdGhlIENpdmlsIFdhciwgdGhleSBhcmVuJ3QgbWVtb3JpYWwgcGllY2VzLiAKIklmIGhlIHdhc24ndCBkb2luZyBzb21ldGhpbmcgZm9yIHRoZSBmb290YmFsbCBjbHViLCBoZSB3YXMgZG9pbmcgc29tZXRoaW5nIGZvciB0aGUgYW5nbGVycyBjbHViICBoZSdsbCBsZWF2ZSBhIGdyZWF0IGhvbGUgaGVyZS4iIE1yIFBlcnR6ZWwgbGVhdmVzIGJlaGluZCBoaXMgc29ucyBSaHlzIGFuZCBLeWxlLCBkYXVnaHRlciBKb3JkYW4sIGFuZCB0aHJlZSBncmFuZGNoaWxkcmVuICAgdGhlIHlvdW5nZXN0IG9ubHkgc2l4IHdlZWtzIG9sZC4gCkhvd2V2ZXIsIHdoZW4gcGxheWluZyBhIGxvdyBsaW1pdCBnYW1lLCB0aGUgbGV2ZWwgb2Ygb3Bwb25lbnRzIGZyZXF1ZW50bHkgaXMgcXVpdGUgbG93IHRvIHBsYXkgYXJ0bGVzc2x5IGFuZCBxdWl0ZSB3aW5uaW5nbHkuIEZ1cnRoZXJtb3JlLCBzcGVjaWFsIHByb2dyYW1zIG1heSBoZWxwIHBsYXllciB0byBnZXQgc29tZSBpbmZvcm1hdGlvbiBhYm91dCBvcHBvbmVudHMgb25saW5lLCBzbyB0aGF0IGxlc3MgdGltZSBtYXkgYmUgb2NjdXBpZWQgYnkgcGVyc29uYWwgYW5hbHlzaXMuIENvbnNlcXVlbnRseSwgaWYgeW91IGFyZSBhcm1lZCB3aXRoIHJlbGV2YW50IHNvZnR3YXJlIGFzc2lzdGFudHMgKHJlYWQgYmVsb3cpIGFuZCBwbGF5IGJldHRlciB0aGFuIG1vc3Qgb2YgeW91ciBvcHBvbmVudHMsIHlvdSBtYXkgdHJ5IHRvIHBsYXkgbW9yZSB0aGF0IG9uZSB0YWJsZSBzaW11bHRhbmVvdXNseS4KQnkgR3JlZ29yIEJyb3duIGluIFZhbGtlbmJ1cmcsIFRoZSBOZXRoZXJsYW5kcwpBbmQgbm90IHRoYXQgSSBkZWZlbmRpbmcgYW55dGhpbmcgcmlnaHQgbm93LCBidXQgcmVsaWdpb3VzIHBlb3BsZSBiZWxpZXZlIHRoZSB3b3JkIG9mIHRoZWlyIEdvZCBzdXBlciBjZWRlcyBtYW4gbWFkZSBsYXdzIGFuZCB0aGUgd2hvbGUgcG9pbnQgb2YgY29uZmVzc2lvbiBpcyB0byBzcGVhayB0byBhIGxpYWlzb24gdG8gR29kIHRvIGF0b25lIGZvciB5b3VyIHNpbnMuIApEaWQgeW91ciBqZWFsb3VzIG1pbmQgZW5qb3kgdGhhdCBiaXQgb2YgaW1hZ2VyeT8gVGhhdCB3aGF0IHlvdSBnZXQgZm9yIGNhbGxpbmcgbXkgY29tbWVudCB0cmFzaCwgdGhvdC4uIAonMTAgdGltZXMgaGFyZGVyJ0luc3RlYWQsIGhlIG1ha2VzIGhpcyBsaXZpbmcgcnVubmluZyBwb2tlciB0b3VybmFtZW50cyBmb3IgYmFycyBhbmQgcmVzdGF1cmFudHMgdGhyb3VnaCBoaXMgYnVzaW5lc3MsIENvbW11bml0eSBDYXJkIFBsYXllci4gSGlzIG1vZGVsIGxldHMgcGVvcGxlIHBsYXkgcG9rZXIgZm9yIGZyZWUgdG8gdHJ5IHRvIHdpbiBjYXNoIHByaXplcy4gCkFuZCBJIHVuZGVyc3RhbmQgcGVvcGxlIHdlcmUgY29udmluY2VkIHRoZXkgd2VyZSBkb2luZyB0aGUgInJpZ2h0IHRoaW5nIiB3aGVuIHRoZXkgbmVhcmx5IGRyb3duZWQgcHJpc29uZXJzLCBiZWF0IHRoZW0sIHN0cmlwcGVkIHRoZW0gb2YgdGhlaXIgY2xvdGhlcyBhbmQgdGhlaXIgaHVtYW4gZGlnbml0eS4gCkxlYXZlIHlvdXIgY2FyZHMgaW4gc2lnaHQgYXQgYWxsIHRpbWVzOyBob2xkaW5nIHRoZW0gaW4geW91ciBsYXAgb3IgcGFzc2luZyB0aGVtIHRvIHlvdXIga2liaXR6aW5nIGZyaWVuZCBpcyBncm91bmRzIGZvciBraWxsaW5nIHlvdXIgaGFuZC4gCllvdXIgYnJhaW4gZG9lc24ndCBmb3JnZXQgdGhlIGJhZCBjaG9pY2VzIHlvdSd2ZSBtYWRlIGluIHRoZSBwYXN0LCBlaXRoZXIgKHNheSwgcGxheWluZyB0aGUgaGFuZCB0aGF0IGxvc3QgeW91IHRoZSBnYW1lKS4gCkl0IGNyaXRpY2FsIHRvIGhhdmUgYSBzaXRlLCBhIHBsYWNlIHdoZXJlIHZpZXdlcnMgYW5kIHJlYWRlcnMgY2FuIGdldCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFuZCBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29udmVyc2F0aW9uLCBzYWlkIE1hdGlzaWMuIGhhZCBvbmUgZm9yIG1hbnkgeWVhcnMsIGJ1dCBmb3IgYSB3aGlsZSBub3cgd2Ugd2FudGVkIHRvIHRha2UgaXQgdXAgYSBub3RjaC4gSXQgZnJlc2gsIGNsZWFuIGFuZCBtb2Rlcm4uCktlcHBpbmcgaW4gbWluZCB0aGF0IHlvdSBzdGFydCBvdXQgd2l0aCByZWxhdGl2bHkgc2hpdHR5IGdlYXIgdGhlIGNvbnRlbnQgaXNudCByZWFsbHkgaGFyZCBidXQgYWxzbyBubyBwdXNob3Zlci4gTm9ybWFsIHF1ZXN0bW9iIGRvbnQgcmVhbGx5IHBvc2UgYSBjaGFsbGVuZ2UgaWYgdXIgbm8gcHVsbGluZyBiaWcgbnVtYmVycyBvZiBlbSBidXQgcmFyZXMgZG8gYSBsaXR0bGUgYml0IGFuZCBkaXBlbmRlbnQgb24gdXIgY2xhc3MgdXIgbm90IGFibGUgdG8gc29sbyBncm91cHF1ZXN0cy4gQWxzbyBiZWNhdXNlIG9mIHRoZSB6b25lcyBzY2xhZSB3aXRoIHVyIGxldmVsLCB1IGRvbnQgZW5kIHVwIHdpdGggem9uZXMgdSBjYW4ganVzdCBtb3ZlIHRocm91Z2ggcXVpY2tlciBjYXVzZSB0aGUgbW9icyBhcmUgbW9zdGx5IGdyZWVuLi4gCkJ1dCB3aGF0IHlvdSBkaWRuJ3QgYXNrIGZvciBpcyBhIGNvbXBhcmlzb24gb2YgaG93IG1hbnkgcGVvcGxlIGRpZSBieSBvdGhlciBtZWFucy4gCk1hcnRpbiBCdXNlciwgYSBmb3VyIHRpbWUgd2lubmVyLCBpcyBvbmUgb2YgdGhlIG11c2hlcnMgb24gdGhhdCBzdHJldGNoIG9mIHRyYWlsLCBidXQgaGUgdGhlIG9ubHkgb25lIHdobyBoYXNuIHRha2VuIGhpcyAyNCB5ZXQuIFRoaXMgbWVhbnMgdGhhdCBkZXNwaXRlIGN1cnJlbnRseSBiZWluZyBmb3VydGggaW4gbWlsZWFnZSwgaGUgZ29pbmcgdG8gbG9zZSB0aGF0IHBvc2l0aW9uIGFzIHNvb24gYXMgaGUgc3RvcHMgZm9yIGhpcyAyNCAocHJvYmFibHkgaW4gSWRpdGFyb2QpLCBhcyBvdGhlciB0ZWFtcyBwYXNzIGhpbS4gCkluIHRlcm1zIG9mIGZlYXR1cmVzLCBpdCBpcyB3YWFhYXkgYmVoaW5kIGV2ZXJ5dGhpbmcgZWxzZS4gSSBhbHNvIGEgYml0IGNvbmNlcm5lZCBhYm91dCB0aGUgc3BlZWQgYXQgd2hpY2ggdGhlIGRldiB0ZWFtIHdpbGwgYmUgYWJsZSB0byBwdW1wIG91dCBmZWF0dXJlcy4gRWcsIGluIHRoZSBwYXBpIGludGVydmlldywgSm9leSB3YXMgYXNraW5nIFBoaWwgYWJvdXQgdGhlIG1vYmlsZSBhcHAsIGFuZCBHYWxmb25kIHdhcyBzYXlpbmcgc29tZXRoaW5nIGxpa2UgIm1vYmlsZSBhcHAgaXMgYSBiaWcgZmVhdHVyZSwgdGhpcyB3aWxsIHRha2UgYWJvdXQgYXMgbXVjaCB0aW1lIGFzIHRoZSB3aW5kb3cgcmVzaXppbmcgZmVhdHVyZSIsIHdoaWNoIHRvIG1lIGtpbmQgb2YgZGVtb25zdHJhdGVzIHRoYXQgaGUgZG9lc24gZnVsbHkgY29tcHJlaGVuZCB0aGUgc2NvcGUgb2YgdGhlIHByb2plY3RzIGhlIHRhbGtpbmcgYWJvdXQuIE1vYmlsZSBpcyBhIGJlYXN0IG9mIGl0cyBvd24gYW5kIHdvdWxkIHByb2JhYmx5IHRha2UgYXMgbG9uZyB0byBkZXZlbG9wIGFzIHRoZSBtYWluIGRlc2t0b3AgY2xpZW50LgpPYnZpb3VzbHkgdGhpcyBpcyBub3QgYSB3ZWxsIHRob3VnaHQgdGhyb3VnaCBicmF6ZW4gdGhlb3J5LCBidXQgSSBESUQganVzdCBzcGl0YmFsbCBhIHdpbGQgb25lIG9uIFRhayBhbmQgdGhpcyBpcyBldmVuIGxlc3Mgc3VwcG9ydGVkLCBzbyBJIHRob3VnaHQgSSBkcm9wIGl0IGhlcmUuIEJ1dCBjb25jZXB0dWFsbHksIGl0IG1ha2VzIHNlbnNlIHdpdGggdGhlIGlkZWFzIG9mIGxpbWluYWxpdHkgdGhhdCBydW4gdGhyb3VnaCB0aGUgYm9vay4gKFRoZSBmb3ggYW5kIHRoZSBoYXJlIGFuZCB0aGUgc3BhY2UgYmV0d2Vlbiwgd2hlcmUgdGhlIHNwYWNlIGJldHdlZW4gaXMgYWN0dWFsbHkgY3JpdGljYWxseSBpbXBvcnRhbnQgdG8gdGhlIGFjdCBvZiBzaGFwaW5nIGhlcmUgSSBkcmF3aW5nIG9uIHRoZSBmaWVsZCBvZiBzZW1hbnRpY3Mgd2l0aGluIGxpbmd1aXN0aWNzLCB0YWtpbmcgdGhlIHBoeXNpY2FsIGNyZWF0dXJlcyBvZiBmb3ggYW5kIGhhcmUgYW5kIHVzaW5nIHRoZWlyIHJlcHJlc2VudGF0aW9ucyBhcyBhYnN0cmFjdCBzZW1lcyB0byBhY3R1YWxseSBzZWUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiwgdGhlbiBhcHBseWluZyB3aGF0IHdlIGtub3cgb2YgaG93IHNoYXBpbmcgd29ya3MgaW4gNEMgdG8gc2VlIGhvdyB0aG9zZSBzZW1lcyBjb3VsZCBiZSBzaGlmdGVkIGludG8gYW4gaW5iZXR3ZWVuIHN0YXRlLCBhbmQgd2hhdCB0aGF0IHdvdWxkIG1lYW4gZm9yIHRoZSBjb3JyZXNwb25kaW5nIGFuaW1hbCkuClJlZ3VsYXIgY2FzaW5vIGNoaXBzIGFyZSBub3QgdXN1YWxseSB1c2VkIGF0IGEgcm91bGV0dGUgdGFibGUuIEluc3RlYWQsIHdoZW4gdGhlIHBsYXllciBwbGFjZXMgbW9uZXkgb24gdGhlIGxheW91dCBhbmQgYXNrcyBmb3IgY2hpcHMsIHRoZSBkZWFsZXIgd2lsbCBnaXZlIG91dCBzcGVjaWFsIHJvdWxldHRlIGNoaXBzLiBFYWNoIHBsYXllciBnZXRzIGEgZGlmZmVyZW50IGNvbG9yIG9mIGNoaXBzIHNvIHRoZSBkZWFsZXIgY2FuIGtlZXAgdHJhY2sgb2Ygd2hpY2ggY2hpcHMgYmVsb25nIHRvIHdoaWNoIHBsYXllci4gCk1hcmtldCBmdWxseSBvcGVuc1N0YXJzIEdyb3VwIEluYy4gTWFya2V0IGZ1bGx5IG9wZW5zLiAKQlVSSkFXLCBGcmVkZXJpY2sgKFJpY2spIEFudGhvbnkgTm92ZW1iZXIgMjEsIDE5NDQgICBBdWd1c3QgNywgMjAxOCBQYXNzZWQgYXdheSBwZWFjZWZ1bGx5IGF0IFByaW5jZXNzIE1hcmdhcmV0IEhvc3BpdGFsIGluIFRvcm9udG8sIHdpdGggaGlzIGZhbWlseSBieSBoaXMgc2lkZS4gTWFueSBwZW9wbGUga25ldyBoaW0sIGJ5IG1hbnkgZGlmZmVyZW50IG5hbWVzOiBSaWNrLCBSaWNreSwgVW5jbGUgUmljaywgRnJlZGR5LCBQcm9mZXNzb3IgQiwgYW5kIEdyYW1wczsgdG8gbmFtZSBhIGZldy4gUmljayB3YXMgdGhlIHlvdW5nZXN0IG9mIEZyZWRlcmljayBhbmQgS2F0aGxlZW4ncyAobmVlIEhlbm5lc3kpIGZpdmUgY2hpbGRyZW4uIApJcHN3aWNoIE1heW9yIFBhdWwgUGlzYXNhbGUgc2FpZCBnYW1ibGluZyB3YXMgcGFydCBvZiB0aGUgIkF1c3RyYWxpYW4gd2F5IG9mIGxpZmUiIGFuZCB3aGlsZSBzb21lIHB1bnRlcnMgaGFkIHByb2JsZW1zIHRoZSBnYW1pbmcgaW5kdXN0cnkgYWxzbyBjb250cmlidXRlZCB0byB0aGUgY2l0eSAuCkEgbG90IG9mIHBlb3BsZSBhcmUgc2F5aW5nIHRoaXMgaXMgbm8gcHJvYmxlbSwgYnV0IHRoZXkgaGF2ZSB0b28gbXVjaCBmYWl0aCBpbiBjaXJjdWl0IGJyZWFrZXJzLiBDYW4gdGhvc2UgY2hlYXAgcG93ZXIgYmFycyB0YWtlIGEgZnVsbCAxNSBhbXAgZHJhdyBmcm9tIGFueSBzb2NrZXQ/IEl0J3Mgbm90IGltcG9zc2libGUgdGhhdCB3b3VsZCBoYXBwZW4gYmVjYXVzZSB5b3UgaGF2ZSBzcGxpdHRlcnMgcGx1Z2dlZCBpbnRvIHNwbGl0dGVycy4gClRoaXMgaXMgYSB2ZXRlcmFuIHRlYW0gbm90IGEgYnVuY2ggb2Yga2lkcyBsaWtlIHRoZSB0ZWFtIFRoaWJzIHRvb2sgb3Zlci4gV2UgbmVlZCBhbiBlc3RhYmxpc2hlZCBjb2FjaCBvciBzb21lb25lIHdpdGggaW5zdGFudCBjcmVkaWJpbGl0eS4gSSdtIG5vdCBzdXJlIGlmIEhvaWJlcmcgd2lsbCBiZSBhYmxlIHRvIGNvbW1hbmQgdGhlIGluc3RhbnQgcmVzcGVjdCBuZWVkZWQgdG8gZ2V0IHRoaXMgdGVhbSB0byB0aGUgRmluYWxzIG5leHQgeWVhci4gU29tZXRoaW5nIHRoYXQgbm90IGFuIGVhc3kgdGFzay4gCllvdSBjYW4gdGFrZSBhcyBtdWNoIG9mZmVuc2UgYXMgeW91IGxpa2UsIHlvdSBjbGVhcmx5IGhhdmUgbW90aXZlIGFuZCBhcmVuJ3QgYXJndWluZyBpbiBnb29kIGZhaXRoLiBUaGUgZ3V5IGFyZ3VpbmcgZm9yIGZhc2Npc20gYW5kIGRlYXRoIHRvIGFueW9uZSB0aGF0IGRpc2FncmVlcyBpcyBhIG1vcm9uLCBhbmQgSSdsbCByZXNwb25kIGluIGtpbmQsIHdoeSBhcmUgeW91IHNvIHdvcnJpZWQgYWJvdXQgbWU/IEdvIGNvcnJlY3QgdGhlIGZhc2Npc3QgbG92ZXIgaWYgeW91J3JlIHRoaXMgZ2VudWluZWx5IG9mZmVuZGVkLCB5ZXMgSSBjb25zaWRlciB0aGF0IHRvIGJlIGVxdWl2YWxlbnQgdG8gTmF6aXNtLCBiZWNhdXNlIHRoYXQgdGhvdWdodCBwcm9jZXNzIGlzIGEgZGlyZWN0IGVtdWxhdGlvbiBvZiB0aG9zZSBpbiAxOTMwJ3MgR2VybWFueS4gCldlIGFyZSBiYXNlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgd2UgcHJvY2VzcyBhbmQgc3RvcmUgaW5mb3JtYXRpb24gb24gc2VydmVycyBsb2NhdGVkIGluIHRoZSBVbml0ZWQgU3RhdGVzLiBXZSBtYXkgc3RvcmUgaW5mb3JtYXRpb24gb24gc2VydmVycyBhbmQgZXF1aXBtZW50IGluIG90aGVyIGNvdW50cmllcyBkZXBlbmRpbmcgb24gYSB2YXJpZXR5IG9mIGZhY3RvcnMsIGluY2x1ZGluZyB0aGUgbG9jYXRpb25zIG9mIG91ciB1c2VycyBhbmQgc2VydmljZSBwcm92aWRlcnMuIAoiQXMgdGhlIEdyb3VwIGdyb3dzIGFuZCBjb250aW51ZXMgdG8gZGV2ZWxvcCBvdXIgYnVzaW5lc3MgZ2xvYmFsbHkgYW5kIGFjcm9zcyBtdWx0aXBsZSBwbGF0Zm9ybXMgYW5kIGJyYW5kcywgd2UgbmVlZCB0byBzdHJlbmd0aGVuIHRoZSBsZWFkZXJzaGlwIG9mIGl0cyBpbmNyZWFzaW5nbHkgY29tcGxleCBvcGVyYXRpb25zLCIgc2FpZCBTY2hlaW5iZXJnLiAKWW91ciBhYmlsaXR5IHRvIGNvbnRyb2wgeW91ciBlbW90aW9uYWwgc3RhdGUgd2hlbiBwbGF5aW5nIEpvbiBpcyB3aGF0IGFsbG93cyB5b3UgdG8gZ2V0IHRoZSBlZGdlIG9uIGhpbSAgIGFuZCBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHlvdXIgcmF3IHRlbm5pcyBza2lsbHMuCkhlJ3MgZ290IHB1cmUgcGFjZSwgYW5kIEkgd2FzIGx1Y2t5IGVub3VnaCB0byBjYXB0YWluIGhpbSBmb3IgUmFqYXN0aGFuIFJveWFscyBpbiBJbmRpYSB0aGlzIHllYXIuIEhlIGhhZCBzb21lIGZhbnRhc3RpYyBnYW1lcyBmb3IgdXMsIGV2ZW4gdGhvdWdoIHNvbWUgb2YgdGhlIGNvbmRpdGlvbnMgZGlkbid0IHN1aXQgaGlzIHN3aW5naW5nIHN0eWxlLiIuIApJdCB3YXMgdmVyeSBtdWNoIGEgInlvdXIgdHVybiwgbXkgdHVybiIgdHlwZSBvZiB0ZWFtLmkgdGhpbmsgS0RzIGRlcGFydHVyZSBoZWxwZWQgUnVzcyBkZXZlbG9wIGFuZCBtYXR1cmUgaW4gYSB3YXkgbm90aGluZyBlbHNlIGNvdWxkIGJlY2F1c2UgaGUgd2FzIGZpbmFsbHkgdGhlIHVuZGlzcHV0ZWQgMUEgYnV0IHdoYXQgZGlkIGhlIGRvPyBmdWNraW5nIGF2ZXJhZ2UgYSB0cmlwbGUgZG91YmxlIGZvciBhbG1vc3QgMiBzZWFzb25zIG5vdywgY29tcGxldGVseSBzaGVkZGluZyB0aGUgInNlbGZpc2giIGxhYmVsIGkgYW5kIGknbSBzdXJlIG1hbnkgb3RoZXJzIGdhdmUgaGltIGFzIHdlbGwsIHdoaWNoIGxlYWRzIHRvIHRoZSBjb2hlc2l2ZW5lc3Mgd2l0aCBQRyBub3cuIFJ1c3MgYWxyZWFkeSBrbm93cyB3aGF0IGl0J3MgbGlrZSB0byBwbGF5IHdpdGggYW5vdGhlciBiYWxsIGRvbWluYW50IHBsYXllciBhbmQgaGUncyBsZWFybmVkIGZyb20gaGlzIHBhc3QgbWlzdGFrZXMgYW5kIGluc3RlYWQgb2YgbG93ZXJpbmcgaGlzIGhlYWQgYW5kIGRyaXZpbmcgdG8gdGhlIHJpbSBoZSdzIGxvb2tpbmcgdG8gbWFrZSB0aGUgYmV0dGVyIHBsYXkgbW9yZSBub3csIGF0IGxlYXN0IGltb0lsS2FwaXRhbm8gIDkgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb2hvbmVzdGx5IGknbSBub3QgdG9vIHN1cmUgb24gdGhhdC4gClRoYW5rIHlvdSBmb3IgeW91ciBhZHZpY2UuIFllc3RlcmRheSBJIGhhZCBhIHRhbGsgd2l0aCBoaW0gYW5kIHRoZSBtYWluIHJlYXNvbiB3aHkgaGUgaGFzbiBtb3ZlZCBvdXQgaXMgYmVjYXVzZSBvZiBtb25leS4gSGUgaGFkIGJlZW4gd29ya2luZyBhdCBhIGRlYWQgZW5kIGpvYiBzaW5jZSBjb2xsZWdlIGdyYWR1YXRpb24gYW5kIGRvZXNuIGhhdmUgZW5vdWdoIHRvIG1vdmUgb3V0LiBXaGljaCBJIGZlbHQgb2RkIGJlY2F1c2UgdGhlIHN0YW5kYXJkIG9mIGxpdmluZyBpc24gdmVyeSBoaWdoIGluIG15IGNpdHkuICQ0MGsgZm9yIGEgJDkwMC9tbyBhcGFydG1lbnQgaXMgYSBzdHJldGNoLCBidXQgbm90IGltcG9zc2libGUuCkZvciBtZSBpdCByZWFsbHkgZHJvdmUgaG9tZSB0aGUgZGlzcGFyaXR5IGJldHdlZW4gdGhlIGxpdmUgYWN0aW9uIHByb2R1Y3Rpb25zIGFuZCB0aGUgYW5pbWF0ZWQgc3R1ZmYuIApMZXMgY2hyb25pcXVldXJzIGRhbnMgbGVzIGpvdXJuYXV4IHMnZW1wYXJlcm9udCBkZSBsJ2FmZmFpcmUuIApNYW1hIHdpbGwgZml4IGV2ZXJ5dGhpbmcgZWxzZSBmb3IgeW91LiAKV2hhdCB0aGlzIG1lYW5zIHRob3VnaCBpcyB0aGF0IG1vZGVybiBpbnRlcmVzdCBpcyBnb2luZyB0byB3YW5lIHNvbWV3aGF0LiBJdCBpc250IGV4YWN0bHkgemVybyBzdW0sIGJ1dCBleWVzIGFyZSBnb2luZyB0byBiZSBvbiBzdGFuZGFyZCBhbmQgc29tZSBudW1iZXIgb2YgcGxheWVycyBhcmUgZ29pbmcgdG8gY2hvb3NlIHRvIHBsYXkgaXQgb3ZlciBtb2Rlcm4uIApJIGtlZXAgc2VlaW5nIHBlb3BsZSBzYXkgdGhpcyBhbmQgaXQgbm90IHRydWUuIFRoZXkgYXJlbiBvcHBvc2l0ZXMgYXQgYWxsLiBFeHBsb2l0YXRpb24gaW4gdGhpcyBjb250ZXh0IHJlcXVpcmVzIGEgYmFzZWxpbmUgZXF1aWxpYnJpdW0gaW4gb3JkZXIgdG8gbWFrZSBzZW5zZSBmcm9tIGEgdGhlb3J5IHBlcnNwZWN0aXZlLiBHVE8gaXMgdGhlIGJhc2VsaW5lLiB1c2luZyB0aXBzIGFuZCB0cmlja3MgdGhhdCB3b3JrIHdlbGwgYmVjYXVzZSB5b3VyIG9wcG9uZW50cyBhcmUgdmVyeSBiYWQpIHRoZW4gdGhhdCB0b3RhbGx5IHJlYXNvbmFibGUuIEJ1dCB0aGUgY29uY2VwdCBvZiBkaXNjdXNzaW5nIEdUTyB2cyBleHBsb2l0YXRpdmUgcGxheSBkb2VzbiBldmVuIG1ha2Ugc2Vuc2UgZnJvbSBhIHRoZW9yZXRpY2FsIHN0YW5kcG9pbnQuIFlvdSBjYW4gYmUgYSB3aW5uaW5nIHBsYXllciB3aXRob3V0IHVuZGVyc3RhbmRpbmcgR1RPIGJ1dCAwIG9mIHRoZSBiZXN0IHBsYXllcnMgaW4gdGhlIHdvcmxkIGFyZSBkb2luZyB0aGF0IGJlY2F1c2UgaXQgd291bGQgYmUgdG90YWxseSBpbnNhbmUuCldoaWNoIGJhY3RlcmlhIG1lZXQgdGhlIGNyaXRlcmlhPwpJIHR1cm5lZCBiYWNrIHRvIHRoZSBwb3QsIHNoaWZ0aW5nIG15IHN0ZXcgYXJvdW5kIHdpdGggYSB3b29kZW4gc3Bvb24uIApTcG9ydHMgQXJ0aWNsZXMgIEZlYnJ1YXJ5IDgsIDIwMDkKUHJlcGFyYXRpb24gZm9yIHRoZSBMaWNlbnNpbmcgRXhhbQpUaGluZyB3aXRoIG1lIGFuZCBNYWRvbm5hLCBmb3IgZXhhbXBsZSwgaXMgdGhhdCBJIGFkbWlyZWQgaGVyIGFsd2F5cyBhbmQgSSBzdGlsbCBhZG1pcmUgaGVyIG5vIG1hdHRlciB3aGF0IHNoZSBtaWdodCB0aGluayBvZiBtZSwgc2hlIGV4cGxhaW5zLiBzaGUgc3RpbGwgaGFyYm91cnMgaHVydCBmZWVsaW5ncyBvdmVyIHRoZSBpbmNpZGVudCwgdGhlIHlvdW5nZXIgc2luZ2VyIHByYWlzZWQgTWFkb25uYSwgNTksIGZvciB0aGUgcm91c2luZyBzcGVlY2ggc2hlIGdhdmUgcHJvbW90aW5nIGZlbWFsZSBlbXBvd2VybWVudCBhdCBsYXN0IERlY2VtYmVyIEJpbGxib2FyZCBXb21lbiBpbiBNdXNpYyBBd2FyZHMuCkNpdGlncm91cCBlYXJuZWQgJDQuNCBCaWxsaW9uIGluIHRoZSBmaXJzdCBxdWFydGVyIG9mIHRoaXMgeWVhciBhbmQgQmFuayBvZiBBbWVyaWNhICQzLjIgQmlsbGlvbi4gVGhlIHRvcCAyNSBoZWRnZSBmdW5kIG1hbmFnZXJzIGVhcm5lZCBvbiBhdmVyYWdlICQxIEJpbGxpb24gZWFjaCB0aGlzIHBhc3QgeWVhci4gTWVhbndoaWxlLCByZWFsIHVuZW1wbG95bWVudCBpcyBuZWFybHkgZG91YmxlIHRoZSBvZmZpY2lhbCAxMCUgdW5lbXBsb3ltZW50IHJhdGUgYW5kIGF2ZXJhZ2UgQW1lcmljYW5zIGNvbnRpbnVlIHRvIHN0cnVnZ2xlIHdpdGggcGF5IGN1dHMgYW5kIGpvYiBsb3NzZXMgYXMgV2FsbCBTdHJlZXQgZmEgdGNhdCBiYW5rZXJzIGNvbnRpbnVlIHRvIHNxdWVlemUgbW9yZSBhbmQgbW9yZSBwcm9maXQgb3V0IG9mIHVzLiBmYXQgY2F0cyB0YWtlIG91ciBtb25leSB0d28gd2F5czogZmluYW5jaWFsaXphdGlvbiBhbmQgZ292ZXJubWVudCBjb3Jwb3JhdGUgd2VsZmFyZSBmaW5hbmNlZCB3aXRoIG91ciB0YXggZG9sbGFycy4KQXQgQWJzb2x1dGUgUG9rZXIgeW91IGNhbiBlYXJuICQ1MCBvZiByZWFsIG1vbmV5IGlmIHlvdSBjYW4gYnVpbGQgdXAgMTUgbWlsbGlvbiBwbGF5IGNoaXBzLiBTb3VuZHMgaW1wb3NzaWJsZSA/IFdlbGwgb3ZlciBvbmUgaHVuZHJlZCBwbGF5ZXJzIGluIHRoZSBBYnNvbHV0ZSBQb2tlciAxNSBtaWxsaW9uIGNoaXAgSGFsbCBvZiBGYW1lIHdvdWxkIHByb2JhYmx5IGRpc2FncmVlLiBTb21lIG9mIHRoZW0gaGF2ZSBkb25lIGl0IGZpdmUgdGltZXMgIS4gCkFuZCB0aGUgYmVzdCBwYXJ0IGlzIGhpcyBlZ28gZnVja2VkIGhpbSBvdmVyIGlmIGhlIHRydWx5IGRpZG4gd2FudCB0aGUgam9iIGhlIGNvdWxkIHJlc2lnbmVkIG9uIGRheSAxLCBidXQgaGUgaW5jYXBhYmxlIG9mIHRoYXQga2luZCBvZiBhZG1pc3Npb24gb2YgZGVmZWF0LiBJIG5vdGljZWQgdGhpcyBvZnRlbiBzZWVtcyB0byBiZSB0aGUgY2FzZSB3aGVuIGRlZXAgZGl2aW5nIGludG8gdGhlIHJlYXNvbmluZyBvciBsb2dpYyB1bmRlcmx5aW5nIGJlbGllZiBzdHJ1Y3R1cmVzIG9mIHRob3NlIGNsb3Nlc3QgdG8gbWUuIApCYW5rIG9mIENhbmFkYSBoYWQgc2FpZCBXZWRuZXNkYXkgdGhhdCBjb25zdW1lciBzcGVuZGluZyBhbmQgdGhlIGhvdXNpbmcgbWFya2V0IGhhZCBiZWVuIGluIHRoZSBmb3VydGggcXVhcnRlciwgYWx0aG91Z2ggdGhlcmUgaGFkIGJlZW4gZ3Jvd3RoIGluIGVtcGxveW1lbnQgYW5kIGxhYm91ciBpbmNvbWUuIAoiQSB3b3JkIGJlZ2lubmluZyB3aXRoIHRoZSBsZXR0ZXIgQSB3b3VsZCBiZSBvbmUgdW5pdCBhbmQgSiB3b3VsZCBiZSAxMC4gWW91IHdvdWxkIHNheTogJ0plc3VzLCBob3cgY291bGQgSSBsb3NlIHRoYXQgaGFuZCwnIGFuZCB0aGV5IHdvdWxkIGtub3cgdG8gYmV0IDEwIHVuaXRzLCB3aGljaCBtaWdodCBiZSAkMTAsMDAwLiIKMS4gCnVuIHVuaXZlcnMgY29tcGxleGUgZXQgZXNzZW50aWVsCkluY3JlZGlibHlmaXNoeSB1CkZ1bm55IHlvdSBzYXkgdGhhdCBiZWNhdXNlIHRoZXkgYWN0dWFsbHkgbm90LiBBY3RpdmlzaW9uIGp1c3QgcG9zdGVkIHRoZWlyIG1vc3QgcHJvZml0YWJsZSB5ZWFyLgpIZSB3YXMgYSBob25lc3QgbWFuLCBub3QgaG9sZGluZyBoaW1zZWxmIGJhY2sgZnJvbSBwb2ludGluZyBvdXQgaGlzIG93biBmYXVsdHMgKGV2ZW4gaW4gaGlzIG1lbW9pcnMpIGFuZCBkb3ducGxheWluZyBoaXMgb3duIHJvbGUgc28gdGhhdCBvdGhlciBpbmRpdmlkdWFscywgd2hvIG9mdGVuIHdvdWxkIHJlbWFpbiBpbiB0aGUgc2hhZG93cywgZ290IHNvbWUgdGltZSBpbiB0aGUgc3BvdGxpZ2h0IGZvciB0aGVpciBhY2hpZXZlbWVudHMuIApTb3VuZHMgc2ltaWxhciB0byBzb21ldGhpbmcgdGhhdCBoYXBwZW5lZCB0byBteSBodXNiYW5kIGFuZCBJIGF0IHRoZSBSZXN0b24gVGFyZ2V0LiBPbiBvdXIgd2F5IHRvIGxvb2sgYXQgYm9hcmQgZ2FtZXMsIHdlIHBhc3NlZCB0aGlzIHlvdW5naXNoIHdvbWFuIGhlYWRpbmcgaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbiAgIEkgb25seSByZW1lbWJlciBwYXNzaW5nIGhlciBiZWNhdXNlIEkgcmVtZW1iZXIgdGhpbmtpbmcgdGhhdCBoZXIgaGFpciBsb29rZWQgcmVhbGx5IG5pY2UuIExvIGFuZCBiZWhvbGQsIHNoZSBmb2xsb3dlZCB1cyBhbmQgc3RhcnRlZCBjaGF0dGluZyB1cyB1cCBhYm91dCBnYW1lcy4gVGhlIGNvbnZlcnNhdGlvbiBzb21laG93IGNoYW5nZWQgdG8gaGVyIGhlciBuZXcgam9iIGluIHRoZSBhcmVhLiBTaGUgZGVmaW5pdGVseSBtZW50aW9uZWQgYSBtZW50b3IgYW5kIEZvcmJlcywgYnV0IHNoZSBzYWlkIHRoYXQgc2hlIHdhcyBleCBtaWxpdGFyeSBhbmQgdGhhdCBob3cgc2hlIG1ldCB0aGUgZ3V5LiBObyByZWFsIGRldGFpbHMgb24gaGVyIGpvYiwganVzdCBob3cgZ3JlYXQgaXQgYWxsIHdhcy4gV2hlbiBzaGUgc3RhcnRlZCBhc2tpbmcgYWJvdXQgb3VyIGNhcmVlcnMsIG15IGh1c2JhbmQgbm9wZWQgdXMgb3V0IG9mIHRoZXJlLiBXZSBkaWRuIGdvIHRvIFRhcmdldCB0byBiZSBwaGlzaGVkLgpJbiBjYXNoIGdhbWVzLCBjYXJkcyBhcmUgdHlwaWNhbGx5IG9ubHkgZmxpcHBlZCB3aGVuIHRoZSBoYW5kIGVuZHMuIApBY3R1YWxseSwgdGhlc2UgbWFya3MgZG9uIHZpZXcgYnkgbmFrZWQgZXllcyBzbyB0aGVyZWZvcmUgbm8gb25lIGNhbiB2aWV3IHRoZXNlIG1hcmtzIGFzIHlvdSBjYW4gZWFzaWx5IHBsYXkgYW55IGdhbWUgc21vb3RobHkuIApBZCBBZ2UgQWdlbmN5IFJlcG9ydCAyMDE4CklmIG1vcmUgdGhhbiB0d28gdGVhbXMgd2VyZSB0aWVkLCBhbmQgYWZ0ZXIgYXBwbHlpbmcgYWxsIGhlYWQgdG8gaGVhZCBjcml0ZXJpYSBhYm92ZSwgYSBzdWJzZXQgb2YgdGVhbXMgd2VyZSBzdGlsbCB0aWVkLCBhbGwgaGVhZCB0byBoZWFkIGNyaXRlcmlhIGFib3ZlIHdhcyByZWFwcGxpZWQgZXhjbHVzaXZlbHkgdG8gdGhpcyBzdWJzZXQgb2YgdGVhbXM7CllvdSBjYW4gZmluZCBhbGwgb2Ygb3VyIGNvdmVyYWdlIGhlcmUuLiAKRW5jb3VyYWdpbmcgeW91ciBjaGlsZCB0byBjaGFuZ2Ugc29tZXRoaW5nIGFib3V0IHRoZW1zZWx2ZXMgYmVjYXVzZSB0aGV5J3JlIGJlaW5nIGJ1bGxpZWQgYWJvdXQgaXQuIEZvciBleGFtcGxlLCBpZiB5b3VyIGNoaWxkIGlzIGNodWJieSBhbmQgZ2V0cyB0ZWFzZWQgZm9yIHRoZWlyIHdlaWdodCwgaW5zdGVhZCBvZiBlbmNvdXJhZ2luZyB0aGVtIHRvIGdldCBtb3JlIGV4ZXJjaXNlIG9yIGNoYW5nZSB0aGVpciBkaWV0IHRvIGxvc2Ugd2VpZ2h0LCBJIHRoaW5rIGl0J3MgbXVjaCBtb3JlIGltcG9ydGFudCBhcyBhIHBhcmVudCB0byByZWFzc3VyZSB5b3VyIGNoaWxkIHRoYXQgdGhlaXIgd2VpZ2h0IGRvZXMgbm90IGRldGVybWluZSB0aGVpciB2YWx1ZSBhcyBhIHBlcnNvbi4gWW91IG5lZWQgdG8gYmUgdGhhdCBzdGFibGUgdm9pY2UgdGhhdCBoZWxwcyB0aGVtIGtub3cgdGhleSBhcmUgbG92ZWQgbm8gbWF0dGVyIHdoYXQuIFRoaXMgY2FuIGJlIHRvdWdoIGJlY2F1c2UgeW91IGRvbid0IHdhbnQgdG8gc2VlIHlvdXIgY2hpbGQgc3VmZmVyaW5nIGFuZCBiZWluZyBidWxsaWVkLCBhbmQgeW91IG1pZ2h0IHRoaW5rIGl0IHdvdWxkIGJlIGVhc2llciB0byBqdXN0IGhlbHAgdGhlbSBsb3NlIHdlaWdodC4gSWYgbG9zaW5nIHdlaWdodCBpcyB3aGF0IHlvdXIgY2hpbGQgd2FudHMgdG8gZG8sIHN1cHBvcnQgaXQuIE90aGVyd2lzZSwgeW91IGNvdWxkIG1lc3MgdGhlbSB1cCBsb25nIHRlcm0gYW5kIGluYWR2ZXJ0ZW50bHkgcmVpbmZvcmNlIHRoZSBtZXNzYWdlIHRoZSBidWxsaWVzIGFyZSBnaXZpbmcgYW5kIHlvdXIga2lkIGNvdWxkIGVuZCB1cCB3aXRoIG1ham9yIGJvZHkvc2VsZiBlc3RlZW0gaXNzdWVzIGdvaW5nIGludG8gYWR1bHRob29kLgpZb3UgbWVudGlvbmVkIHRoYXQgeW91IGEgcHJldHR5IGZydWdhbCBwZXJzb24uIEkgbGlrZSB0byB0aGluayB0aGF0IEkgYW0sIHRvbywgYnV0IEkga25vdyB0aGF0IEkgc3BlbmQgbW9yZSB0aGFuIHNvbWUgYW5kIGxlc3MgICBmYXIgbGVzcyAgIHRoYW4gb3RoZXJzLiBJIGdpdmUgbXlzZWxmIGEgYnVkZ2V0IG9mIGFib3V0IDUsMDAwIFJNQiBwZXIgbW9udGggZm9yIGV2ZXJ5dGhpbmcgb3RoZXIgdGhhbiByZW50LiBUaGlzIGdldHMgbWUgcGxlbnR5IG9mIGdvb2QgbWVhbHMgZnJvbSBib3RoIHJlc3RhdXJhbnRzIGFuZCBteSBvd24ga2l0Y2hlbiwgYSBmZXcgbmlnaHRzIG91dCwgYSBneW0gbWVtYmVyc2hpcCwgcHVibGljIHRyYW5zcG9ydGF0aW9uIGFuZCBEaWRpIHJpZGVzLCB2aXNpdHMgdG8gdGhlIHZhcmlvdXMgYXR0cmFjdGlvbnMgb2YgdGhpcyBjaXR5LCBhbmQgcHJldHR5IG11Y2ggd2hhdGV2ZXIgSSBuZWVkIHRvIGJ1eS4gU29tZXRpbWVzIEkgZ28gb3ZlciBidWRnZXQuIFNvbWV0aW1lcyB1bmRlci4gWW91ciBzcGVuZGluZyBtaWdodCBiZSBtb3JlIG9yIGxlc3MuIFJlbnRzIGluIG15IGNpdHkgZm9yIGRlY2VudCBhcGFydG1lbnRzIGluIGdvb2QgbG9jYXRpb25zIGdvIGZvciBiZXR3ZWVuIDMsMDAwIGFuZCA1LDAwMCBSTUIgcGVyIG1vbnRoLiBUaGVyZSBiZXR0ZXIsIHRoZXJlIHdvcnNlLiBJIGxpdmUgYnkgbXlzZWxmIGluIGEgc3BhY2lvdXMgYW5kIHdlbGwgZnVybmlzaGVkIHR3byBiZWRyb29tIGFwYXJ0bWVudCBpbiBhIG1vZGVybiBkb3dudG93biBhcmVhLiBJdCBhIHNldmVuIG1pbnV0ZSB3YWxrIHRvIGEgc3Vid2F5IHN0YXRpb24sIHdpdGggbG9hZHMgb2Ygc2hvcHMsIG1hbGxzLCByZXN0YXVyYW50cywgYmFua3MsIGFuZCBtYXJrZXRzIGFyb3VuZC4gSSBwYXkgNCwyMDAgaW4gcmVudCwgYW5kIHVzdWFsbHkgYW5vdGhlciA1MDAgcGVyIG1vbnRoIGluIHV0aWxpdGllcyAgIHRoZSBzZWFzb25zIHN1Y2sgaGVyZSB0b28sIHVuZm9ydHVuYXRlbHksIGFuZCBJIGxpa2UgdG8ga2VlcCBteSBwbGFjZSBjb21mb3J0YWJsZS4KSSB3b3VsZG4gc2F5IGhlIG5lY2Vzc2FyaWx5IGVhc2lseSBraWxsZWQgaGlzIHdpZmUuIEhlIG1heSBub3QgZXZlbiBoYXZlIG1lYW50IHRvIGtpbGwgaGVyLCBidXQgdG8gcmVzdHJhaW4gaGVyLiAKUGFyYWxlZ2FsIFNhbGFyaWVzQSBsaXRpZ2F0aW9uIHBhcmFsZWdhbCBvZnRlbiB3b3JrcyBpbiBsYXcgZmlybSBidXQgY2FuIGFsc28gd29yayBmb3IgYnVzaW5lc3NlcywgZ292ZXJubWVudCBvcmdhbml6YXRpb25zIG9yIGFueSBvdGhlciBjb21wYW55IHRoYXQgZW5nYWdlcyBpbiBsaXRpZ2F0aW9uLiAKVGhleSBhcmUgdHJ5aW5nIHRvIG1ha2UgYSBuYW1lIGZvciB0aGVtc2VsdmVzIGFzICJ3aW5uaW5nIiBwcm9zZWN1dG9ycywgcGVyaGFwcyB0byBtYXliZSBjbGltYiB0aGUgbGFkZGVyIHRvIGJlY29tZSBGZWRlcmFsIGp1ZGdlcy4gSXQgYSBsb25nIHNob3QgaW4gbW9zdCBjYXNlcyBwcm9iYWJseSwgYnV0IHRoZXJlIHplcm8gcmlzay4gCkVsYWluZSBXeW5uJ3MgcHJveHkgZmlnaHQgd2l0aCB0aGUgV3lubiBSZXNvcnRzIGJvYXJkIGlzIGhlYXRpbmcgdXAKUTogSG93IGRvIEkgcmVwb3J0IGFuIGluYXBwcm9wcmlhdGUgb3IgYWJ1c2l2ZSBjb21tZW50PwpUaGUgcmVjZW50IGNhc2UgaW52b2x2ZWQgYSB3b21hbiAoIHdpdGggZGlzYWJpbGl0aWVzIHdobyBoYXMgcmVzaWRlZCBpbiBhIE1ldHJvIFZhbmNvdXZlciBIb3VzaW5nIENvcnBvcmF0aW9uIChNVkhDKSBzdWJzaWRpemVkIGhvdXNpbmcgY29tcGxleCBzaW5jZSAxOTkyLiBTaGUgaGFkIGJlZW4gcmVjZWl2aW5nIHJlbnRhbCBhc3Npc3RhbmNlIGZyb20gTVZIQyBldmVyeSB5ZWFyIHVudGlsIDIwMTUuIFRlbmFudHMgd2hvIHdpc2ggdG8gcmVjZWl2ZSByZW50IHN1YnNpZGllcyBtdXN0IGRlbW9uc3RyYXRlLCBvbiBhbiBhbm51YWwgYmFzaXMsIHRoYXQgdGhleSBtZWV0IHRoZSBlbGlnaWJpbGl0eSBjcml0ZXJpYSBieSBjb21wbGV0aW5nIGFuZCBzdWJtaXR0aW5nIGFuIGFzc2lzdGFuY2UgYXBwbGljYXRpb24uIApXaXRoIGFjYWRlbWljIGhlbHAgZnJvbSBzb3VyY2VzIHN1Y2ggYXMgdGhlIEh1ZmZpbmd0b24gUG9zdCwgaGlzdG9yaWFuIFBhdWwgQm9sbGVyIDIwMDcgYm9vayBkaXZlcnNpb246IFByZXNpZGVudHMgYXQgcGxheSBmcm9tIEdlb3JnZSBXYXNoaW5ndG9uIHRvIEdlb3JnZSBXLiBCdXNoLCBTaWQgRnJhbmsgYW5kIEFyZGVuIERhdmlzIE1lbGljayAxOTc3IGJvb2sgUHJlc2lkZW50czogVGlkYml0cyBhbmQgdHJpdmlhLCBXZWJiIEdhcnJpc29uIDIwMDAgYm9vayBsdXN0LCBhbmQgbG9uZ2luZyBpbiB0aGUgV2hpdGUgSG91c2UsIEphbWVzIE1jUGhlcnNvbiBib29rIHRoZSBiZXN0IG9mIG15IGFiaWxpdHk6IFRoZSBBbWVyaWNhbiBQcmVzaWRlbnRzLCBNaWNoYWVsIE5lbHNvbiBib29rIFByZXNpZGVuY3k6IEEgdG8gWi4gV2FzaGluZ3RvbiBEQyBhbmQgQ2FydGVyIFNtaXRoIGJvb2sgRXZlcnkgcXVlc3Rpb24gYW5zd2VyZWQsIGhlcmUgZm9sbG93IHNvbWUgaW50ZXJlc3RpbmcgZmFjdHMgYWJvdXQgYWxsIHRoZSBBbWVyaWNhbiBQcmVzaWRlbnRzIHRvIGRhdGU6Ck5lcmR5TlRoaWNrIHUKR3dpbm5lcnMgIDMwMCBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpUaGVuIGl0IHdpbGwgcmVhbGx5IGJlIEJpYmkgb3IgVGliaS4iLiAKRnJlYWt5UmFiYml0NzIgIDUzOSBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpTbyB5b3VyIGFuc3dlciBpcyBubywgeW91IGNhbnQgYWN0dWFsbHkgbmFtZSBhIHNpbmdsZSBtb2Rlcm4gY291bnRlcnBhcnQgb3IgdGltZSBpbiBoaXN0b3J5IHRoYXQgQ2hyaXN0aWFucyBib21iZWQgcmFuZG9tIGNvdW50cmllcyBqdXN0IHRvIGNhdXNlIGZlYXIuCklmIHlvdSdyZSBsb29raW5nIHRvIHB1cmNoYXNlIHBva2VyIGdhbWUgdGFibGVzIGZvciBzYWxlIGZvciBncmVhdCBkaXNjb3VudHMsIHRoZW4gc2hvcHBpbmcgb25saW5lIGJlYXRzIGdvaW5nIHRvIHlvdXIgbG9jYWwgc3BvcnRzIHN0b3JlLiBZb3UgY2FuIGZpbmQgcG9rZXIgZ2FtZSB0YWJsZXMgZm9yIHNhbGUgZm9yIGxhcmdlIGRpc2NvdW50cyB0aGF0IGNhbiBzYXZlIHlvdSBodW5kcmVkcyBvZiBkb2xsYXJzIGNvbXBhcmVkIHRvIGJ1eWluZyBhdCByZXRhaWwgcHJpY2VzLiAKSSB0aGluayBvZiB0aGlzIGVhY2ggdGltZSBJIHJldmlldyBhIGhhbmRzLiBXaGV0aGVyIEkgd2luIG9yIGxvc2UgdGhlIGhhbmQgSSBsb29rIHRvIHNlZSBpZiBJIGFtIG1ha2luZyB0aGUgcmlnaHQgZGVjaXNpb25zIGF0IHRoZSB0aW1lIHRoZSBpbmZvcm1hdGlvbiBpcyBwcmVzZW50ZWQgdG8gbWUuIEFzIGxvbmcgYXMgSSBhbSBtYWtpbmcgY29ycmVjdCBkZWNpc2lvbnMgSSBrbm93IHRoYXQgdGhlIHJlc3VsdHMgd2lsbCBmb2xsb3cuClRoZSB3b3JzdCByZXNwb25zZSBzbyBmYXIgd2FzIHdoZW4gYSBtaWRkbGUgc2Nob29sZXIgdG9sZCBtZSB0aGF0IHRoZXkgaGFkIHByYWN0aWNlZCBkYXJ0cyBpbiBQRSBjbGFzcyBvbmUgZGF5LiBJIHdhcyBjdXJpb3VzIHNvIEkgYXNrZWQgd2hhdCBnYW1lIHRoZXkgcGxheWVkLiAKU3BlY2lhbCBPbHltcGljcyBwaW9uZWVyZWQgdGhlIHVuaWZpZWQgc3BvcnRzIGFwcHJvYWNoLCB1c2luZyBzcG9ydCBhcyBhIHZlaGljbGUgZm9yIGluY2x1c2lvbi4gVW5pZmllZCBTcG9ydHMgYXQgVUNMQSB3aWxsIGNvbnNpc3Qgb2YgdGVhbXMgbWFkZSB1cCBvZiBTcGVjaWFsIE9seW1waWNzIGF0aGxldGVzIGZyb20gYXJvdW5kIHRoZSBhcmVhIGFuZCBVQ0xBIHN0dWRlbnRzIGFzIHRoZSBVbmlmaWVkIHBhcnRuZXJzLi4gCk15IGdyYW5kbW90aGVyIGFuZCBncmVhdCBncmFuZG1vdGhlciBqdXN0IGRlYWx0IHdpdGggaXQgZm9yIHllYXJzLiBFdmVudHVhbGx5LCB3aGVuIG9uZSBvZiBteSBncmVhdCB1bmNsZXMgKGFsc28gaW52b2x2ZWQgaW4gdGhlIG1hZmlhKSB3YXMgaW4gaGlzIGVhcmx5IHR3ZW50aWVzLCBoZSBnb3QgaGlzIGRhZCB0byBmaW5hbGx5IGxlYXZlIHRoZW0gYWxvbmUgYnkgZGFuZ2xpbmcgaGltIGhlYWRmaXJzdCBvdXQgb2YgYSB3aW5kb3cuLiAKSGVyYnMgYW5kIHN1cHBsZW1lbnRzIHdpbGwgZ2l2ZSB5b3UgZW5lcmd5IHRvIHN0YXJ0IGFuZCBmaW5pc2ggeW91ciBkYXkuIExlYXJuIHRvIG1ha2UgcHJvdGVpbiBzaGFrZXMgYW5kIGxlYXJuIGFib3V0IHRoZSBiZW5lZml0cyBvZiBsZW1vbiB3YXRlciBvciBhcHBsZSBjaWRlciB2aW5lZ2FyLiBUaGUgdHJlYXRtZW50cyBhbmQgcmVtZWRpZXMgZGlzY3Vzc2VkIGluIG91ciBhcnRpY2xlcyBvZmZlciBncmVhdCBhbHRlcm5hdGl2ZSB0cmVhdG1lbnRzIGZvciBtZWRpY2FsIGFuZCBldmVyeWRheSBwcm9ibGVtcy4gCkkgZG9uIHVuZGVyc3RhbmQgaG93IHlvdSBjYW4gbWFrZSBhc3N1bXB0aW9ucyBhYm91dCBteSBsaWZlIGV2ZW4gdGhvdWdoIHlvdSBrbm93IHNvIGxpdHRsZSBhYm91dCBtZS4gUGVvcGxlIHdobyBhcmUgc2F2ZWQgb2Z0ZW4gc3RpbGwgcXVlc3Rpb24gdGhpbmdzIGFuZCB0aGF0IGRvZXMgbm90IG1ha2UgdGhlbSBhbnkgbGVzcy4gWW91IG5lZWQgdG8gd2F0Y2ggb3V0IGZvciB3aGF0IHlvdSBzYXkgdG8gb3RoZXIgcGVvcGxlIGJlY2F1c2UgaXMgdGhhdCByZWFsbHkgZWRpZnlpbmc/IEkgYW0gc3RpbGwgYSBjaGlsZCBvZiBHb2QuLiAKIlRoZSBHcmFuZCIgZm9sbG93cyBhIHZhcmlldHkgb2YgY29sb3JmdWwgY2hhcmFjdGVycywgYWxsIGNvbnRlc3RhbnRzIGluIGEgJDEwIG1pbGxpb24gcG9rZXIgdG91cm5hbWVudC4gVGhlIHBsYXllcnMgaW5jbHVkZSBKYWNrIEZhcm8gKFdvb2R5IEhhcnJlbHNvbiksIHdobyBvd25zIFRoZSBSYWJiaXQncyBGb290IENhc2lubyBhbmQgaGFzIHNwZW50IG11Y2ggb2YgaGlzIGxpZmUgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBjb250cm9sbGVkIHN1YnN0YW5jZXM7IERldWNlIEZhaXJiYW5rcyAoRGVubmlzIEZhcmluYSksIGFuIG9sZCBzY2hvb2wgVmVnYXMgaGFyZCBhc3M7IExhaW5pZSBhbmQgTGFycnkgU2Nod2FydHptYW4gKENoZXJ5bCBIaW5lcyBhbmQgRGF2aWQgQ3Jvc3MpLCBzaWJsaW5ncyB3aG9zZSBmYXRoZXIgZm9yY2VkIGNvbXBldGl0aW9uIG9uIHRoZW0gc2luY2UgdGhleSB3ZXJlIHRvdHM7IEhhcm9sZCBNZWx2aW4gKENocmlzIFBhcm5lbGwpLCBhIGRldmVsb3BtZW50YWxseSBjaGFsbGVuZ2VkIG1hbiBjaGlsZCB3aG8gc3RpbGwgbGl2ZXMgd2l0aCBoaXMgbW90aGVyOyBhbmQgQW5keSBBbmRyZXdzIChSaWNoYXJkIEtpbmQpLCBhIGNoZWVyZnVsIGF2ZXJhZ2UgSm9lIGZyb20gdGhlIE1pZHdlc3Qgd2hvIHNlZW1zIHRlcnJpYmx5IG91dCBvZiBwbGFjZSBpbiB0aGUgc2xlYXp5IGJhY2tkcm9wIG9mIFZlZ2FzLiAKQ29uYW4gTycgQnJpZW4sIGRpbmluZyBhdCBDZW50cmFsIE1pY2hlbCBSaWNoYXJkLCBhIGRvd250b3duIERlZUNlZSBGcmVuY2ggYmlzdHJvLiBEcmVzc2VkIGFwcHJvcHJpYXRlbHkgaW4gamVhbnMgYW5kIGEgd2ludGVyIGNvYXQsIENPQiB3YWxrZWQgb3V0dGEgdGhlIHJlc3RhdXJhbnQgd2l0aCBhbiBlcXVhbGx5IHRhbGwgYWdlbnQgbG9va2luJyBhbWlnby4gT3VyIGxhdGUgbmlnaHQgbG92aW4nIGV5ZXMgc3dlYXIgQ29uaWUncyAiZXZlbiB0YWxsZXIgdGhhbiB5b3UnZCBpbWFnaW5lIi4gTGVubydzIHJlcGxhY2VtZW50IGlzIGluIHRvd24gZm9yIHRoZSAiTGluY29sbiBhcyBIdW1vcmlzdCIgZXZlbnQgYXQgRm9yZCdzIFRoZWF0cmUuIE5vIGJldHRlciBwbGFjZSB0byBjcmFjayBqb2tlcyB0aGFuIHRoZSBwbGFjZSBhIHByZXNpZGVudCB3YXMgYXNzYXNzaW5hdGVkLCByaWdodD8gT3V0IG9mIHRoZSBjb2xkLCBiYWNrIHdlc3Qgd2FzIHRoZSBlcXVhbGx5IHN0YXR1ZXNxdWUuClRocm93IGV2ZW50cy4gU3RhcnQgYSBuZXR3b3JraW5nIGNsdWIuIApVcGRhdGVkIDIwMTkgUHJpY2VzIEhvdGVsIFJldmlld3MgQVoKV2hlbiBQYWRkb2NrIGJvdWdodCBhIGhvdXNlIGluIEJyZXZhcmQgQ291bnR5LCBGbG9yaWRhLCBpbiAyMDEzLCBoZSB0b2xkIG5laWdoYm9ycyBoZSBsaXZlZCBpbiBMYXMgVmVnYXMsIGJ1dCB3YW50ZWQgdGhlIGhvbWUgYXMgYSBiYXNlIHRvIHNlYXJjaCBmb3IgYSBwbGFjZSBmb3IgaGlzIG1vdGhlci4gSGUgZ2F2ZSBuZXh0IGRvb3IgbmVpZ2hib3IgRG9uIEp1ZHkgYSBzZXQgb2Yga2V5cyBhbmQgYXNrZWQgaGltIHRvIGNoZWNrIHRoZSBwbGFjZSB3aGVuIGhlIHdhc24gYXJvdW5kLiAKTG92aW5nIGRhZCB0byBLaW0gS2lya3dvb2QgYW5kIGhlciBodXNiYW5kIERvdWcgYW5kIEtlbGx5IFdlYXZlciBhbmQgaGVyIGh1c2JhbmQgRGV2IFNpbmdoLiAKVGhlc2UgZmFtaWxpZXMgbGl2ZSBpbiBwb3ZlcnR5IGFuZCBoYXZlIGhhZCBzb21lIHZlcnkgYmFkIGx1Y2suIApJIHdhcyBzY2FyZWQgdG8gZ28gb3V0c2lkZSBhdCBuaWdodCBhbG9uZSBmb3IgYSB3aGlsZSBhZnRlci4gClRoYW5rIHlvdSBXaWxsIEJyaW5rIGZvciBicmluZ2luZyB0aGlzIHRvIG15IGF0dGVudGlvbi4KU2xlZXBhbGxkYXkzNDUgdQpSZWFsaXR5IENoZWNrCkRlIG1tZSBxdWUgbGUgZHNpciBkJ2F2b2lyIGJvbm5lIGNvbnNjaWVuY2Ugbm91cyBwb3Vzc2UgIG5vdXMgY29udmFpbmNyZSBxdWUgbm9zIG1hdXZhaXNlcyBhY3Rpb25zIG5lIHNvbnQgcGFzIHNpIGNvdXBhYmxlcyBxdWUgYSwgZGUgbW1lIG5vdXMgc29tbWVzIG1hdHJlcyBkYW5zIGwnYXJ0IGRlIG5vdXMgcGVyc3VhZGVyLCB0YW50IG5vdXMgbGVzIGNyb3lvbnMganVzdGVzLCBxdWUgbGVzIGlkZXMgcXVpIG5vdXMgc29udCBjaHJlcyBzb250IHBhcnRhZ2VzIHBhciB1biB0cnMgZ3JhbmQgbm9tYnJlIGRlIG5vcyBjb21wYXRyaW90ZXMuIE5vcyBnbnJldXNlcyBpbGx1c2lvbnMgc29udCB0ZW5hY2VzLCBlbGxlcyBub3VzIGNvbGxlbnQgIGwnbWUgY29tbWUgbGEgdHVuaXF1ZSBkZSBEamFuaXJlICBsYSBwZWF1IGQnSGVyY3VsZS4gSidlbiBkb25uZXJhaSBpY2kgZGV1eCBpbGx1c3RyYXRpb25zLgpPdXIgdGVhbSBoYXMgY29tZSBmcm9tIHBva2VyIGFuZCBkb25lIHRoYXQgZm9yIG1vcmUgdGhhbiB0ZW4geWVhcnMgcHJpb3IgdG8gZnVuZmFpciwgc28gaWYgd2UgZXZlciB3YW50IHRvIGRvIHBva2VyLCB3ZSB0aGUgZ3V5cyB0byBkbyBpdC4gQnV0IHdlIGRvbnQgdGhpbmsgaW4gdGhlIHNob3J0IHRlcm0gdGhhdCB0aGUgYmxvY2tjaGFpbiBtYXJrZXQgaXMgcmVhZHkgZm9yIHBva2VyLCBiZWNhdXNlIG9mIHRoZSBjaGFuY2Ugb2YgY2hlYXRpbmcgd2hlbiBnYW1lcyBhcmUgcGxheWVkIHB1cmVseSBwZWVyIHRvIHBlZXIgd2l0aCBubyB0aGUgdG9vbHMgYW5kIHJlcXVpcmVtZW50cyB0byBzdG9wIGNoZWF0aW5nIGFyZSBkaWZmaWN1bHQsIGFuZCBpbiB0aGUgZmlyc3QgaW5zdGFuY2UsIHJlcXVpcmUgcm9idXN0IGlkZW50aXR5IGVuZm9yY2VkIGZvciB0aGUgdXNlcnMgdG8gcGxheS4gClBsdXMgbXkgcGFyZW50cyBoYWQganVzdCBkaXZvcmNlZCBzbyB0aGVyZSB3YXMgc28gbXVjaCBkcmFtYS4gCkdpcmwgaW4gcXVlc3Rpb24gbXVzdCBiZSBhdCBsZWFzdCAxOCB5ZWFycyBvbGQKU2hlIGFsc28gY2FtZSBvdXQgd2l0aCBzaGUgbm90IHN1cmUgaG93IHNoZSBmZWVscyBhYm91dCBtZSwgYXMgd2UgaGF2ZSBtYW55IGRpZmZlcmVudCBhc3BlY3RzIG9mIG91ciByZWxhdGlvbnNoaXAuIApVcG9uIGZpbmRpbmcgb3V0IHRoYXQgdGhlIGFuc3dlciBpcyB5ZXMgdmlydHVhbGx5IGV2ZXJ5d2hlcmUsIEkgd291bGQgaGF2ZSBnb25lIHRvIG15IGRhZCwgYW5kIGFza2VkIGhpbSB0byBjYWxsIGEgbGF3eWVyLiBUaGVuIEkgd291bGQgaGF2ZSBhc2tlZCB0aGF0IGxhd3llciBob3cgdG8gcGV0aXRpb24gdGhlIGNvdXJ0IHRvIGxldCBtZSBhc2sgdGhhdCBteSBkYWQgaGF2ZSBwcmltYXJ5IGN1c3RvZHksIGFuZCB0aGVuIG5vdCBzcG9rZW4gdG8geW91IGZvciBzZXZlcmFsIG1vbnRocyB0aW1lLiAKVGhlIGJpbGwgd2FzIGFsdGVyZWQgdG8gYWxsb3cgZWxlY3Ryb25pYyBsb3R0ZXJ5IHRlcm1pbmFscywgd2hpY2ggY2FuIHJlc2VtYmxlIHNsb3QgbWFjaGluZXMgYW5kIHZpZGVvIHBva2VyIGdhbWVzLCBpbiBMb3duZGVzIGFuZCBIb3VzdG9uIGNvdW50aWVzLCBpbiBhZGRpdGlvbiB0byBmb3VyIHN0YXRlIGRvZyB0cmFja3MuClN0ZWFtIHByb3ZpZGVzIGZvcnVtcywgY2xvdWQgc3RvcmFnZSwgbW9kIGhvc3RpbmcsIGxlYWRlcmJvYXJkcywgZnJlZSBtYXRjaG1ha2luZy9tYXN0ZXIgc2VydmVycyBmb3IgbXVsdGlwbGF5ZXIgYW5kIHRoZXkgd29ya2luZyBvbiBmcmVlIGRlZGljYXRlZCBzZXJ2ZXJzIHRvby4gVGhleSBwcm92aWRlIG5lYXIgdW5pdmVyc2FsIGNvbnRyb2xsZXIgYW5kIFZSIHN1cHBvcnQuIApJdCBzaW1wbHkgbWVhbnMgdGhhdCB5b3UgYm90aCBsaWtlIGVhY2ggb3RoZXIgYW5kIGhhdmUgYmVlbiB0aGlua2luZyBjb25zdGFudGx5IG9mIGVhY2ggb3RoZXIuIEl0IGlzIGNvbXBsZXRlbHkgbmF0dXJhbCB0byBkcmVhbSBhYm91dCB0aGUgcGVyc29uIHlvdSBhcmUgZm9uZCBvZi4gVGhleSBjb3VsZCBiZSB2ZXJ5IHNpbWlsYXIsIGJ1dCBlbnRodXNpYXNtIGFuZCBtdXR1YWwgYXR0cmFjdGlvbiBhY2NvdW50IGZvciB0aGUgcmVzdC4gKEZ1bGwgQW5zd2VyKQpRdWFudCBhdSBzZWNvbmQgcGlzb2RlICAgZGVwdWlzIGxlIG51bXJvIDk0IGp1c3F1J2F1IG51bXJvIDEwNCAgIGRhbnMgbGVxdWVsIGxlIEJhcm9uIFpPRElBQyBuJ2V4aXN0ZSBwbHVzLCBsZXMgc3BjaWFsaXN0ZXMgZW4gQkQgcydhY2NvcmRlbnQgcG91ciBuZSBwYXMgbCdhdHRyaWJ1ZXIgZW50aXJlbWVudCAgSE9HQVJUSC4uIApUaGVzZSBkZXZpY2VzIG1heGltaXplIHRoZSBhZHJlbmFsaW5lIHJ1c2ggYW5kIHByb3ZpZGUgb3B0aW1hbCBzZW5zb3J5IGRpc3RyYWN0aW9ucyB0aGF0IG1pbmltaXplcyB0aGUgcmVhbGl0eSBvZiB0aGUgcGxheWVyJ3MgcmVhbCBsb3NzZXMuIApFbGlhc2hiZXJnOiBOZXRmbGl4IGlzIGFsc28gZG9pbmcgYSBoZWxsIG9mIGEgam9iIGZpbmRpbmcgbG9jYWwgcHJvZHVjZXJzIGluIGRpZmZlcmVudCBjb3VudHJpZXMgYW5kIHByb3ZpZGluZyB0aGVtIHdpdGggZmluYW5jaWFsIHN1cHBvcnQgdG8gZGV2ZWxvcCBzdG9yaWVzIHRoYXQgYXJlIGxvY2FsbHkgYXBwZWFsaW5nIGFuZCBhdCB0aGUgc2FtZSB0aW1lIGhhdmUgc29tZSBnbG9iYWwgYXBwZWFsLiBUaGV5IGhhdmUgb2ZmaWNlcyBpbiBTcGFpbiwgdGhleSBoYXZlIG9mZmljZXMgaW4gSmFwYW4sIHRoZXkgaGF2ZSBvZmZpY2VzIGluIG90aGVyIGNvdW50cmllcyBpbiBBc2lhLiBUaGVpciBwaGlsb3NvcGh5IGFuZCBzdHJhdGVneSBpcyB0byBpZGVudGlmeSBsb2NhbCBzdG9yeXRlbGxlcnMgdGhhdCB3aWxsIGVuaGFuY2UgdGhlaXIgcG9ydGZvbGlvIG9mIG1vdmllcy4gSSB0aGluayB0aGF0IGFub3RoZXIgYmlnIGNoYW5nZSBpbiB0aGUgd2F5IHRoYXQgbW92aWVzIHVzZWQgdG8gYmUgcHJvZHVjZWQgaW4gdGhlIHBhc3QuIEl0IHF1aXRlIHBvc3NpYmxlIHRoYXQgaW4gdGhlIGZ1dHVyZSwgbW92aWVzIHdpbGwgYmUgbW9yZSBhbmQgbW9yZSBub21pbmF0ZWQgZWl0aGVyIHdpdGhvdXQgc2hvd2luZyBpdCBpbiB0aGUgdGhlYXRlciBvciwgYXMgQXZyaSBtZW50aW9uZWQsIHdoZW4gdGhleSBhcmUgc2hvd24gc2ltdWx0YW5lb3VzbHkgaW4gdGhlIHRoZWF0ZXIgYXMgd2VsbCBhcyBvbiB0aGUgTmV0ZmxpeCBuZXR3b3JrLgpGcmVxdWVudGx5IGNvbmdyYXR1bGF0ZSB0aGVtIG9uIGdvb2QgaGFuZHMgKGV2ZW4gaWYgcGxheWVkIHRlcnJpYmx5ICAgZXNwZWNpYWxseSBpZiBwbGF5ZWQgdGVycmlibHksIHNvIHRoZXkgZG8gaXQgYWdhaW4pLiBCdWlsZCBhIHJhcHBvcnQuIApXaGF0IGNhbWUgYXMgbm8gc3VycHJpc2UgdG8gdGhlIHBvbGljZSB3YXMgdGhhdCB0aGUgdHdvIG1lbiB3ZXJlIGZyb20gRWFzdGVybiBFdXJvcGUuIApUaGVyZSBhcmUgY2FwYWNpdHkgaXNzdWVzLiBXaGVuIHlvdSBwaHlzaWNhbGx5IHJ1biBvdXQgb2YgdGFibGVzIGFuZCBjaGFpcnMgeW91IGNhbid0IGRvIGFueXRoaW5nIGFib3V0IGl0LiIuIApCdXQgSSBzdGF5ZWQgdW5jb25jaW91cyBpbiB0aGUgY2FyIGZvciBhYm91dCB0d2VsdmUgaG91cnMsIGhlIGRpZCB0b28uIApIb3cgaXMgcHJvZ3Jlc3MgZXZlbiBwb3NzaWJsZT8gQW5kIGZvciBzdWJzaWRpZXMsIHRoYXQgQ2hpbmEgZWNvbm9taWMgbW9kZWwuIApZb3UgcHJlcGFyZWQuIFlvdSBtYWRlIGEgc3RyYXRlZ3kuIFllcywgdGhlcmUgYXJlIGxlc3NvbnMgbGVhcm5lZCwgYnV0IHlvdSBoYXZlIHRvIHVuZGVyc3RhbmQgdGhhdCBzb21ldGltZXMsIHlvdSBqdXN0IGdldCBhbiBvdXRjb21lIHRoYXQgdW5saWtlbHkuLiAKT3RoZXIgcGxheWVycyBtYXkgbWF0Y2ggeW91ciBiZXQgKCdjYWxsJyksIGluY3JlYXNlIHRoZSBhbW91bnQgKCdyYWlzZScpLCBvciByZW1vdmUgdGhlbXNlbHZlcyBmcm9tIGludmVzdGluZyBmdXJ0aGVyICgnZm9sZCcpLiBUaGlzIGlzIHJlcGVhdGVkIHVudGlsIGFsbCBidXQgb25lIHBsYXllciBoYXMgZm9sZGVkIG9yIGFsbCBvZiB0aGUgY2FyZHMgKGZvciB0aGUgc3BlY2lmaWMgZ2FtZSkgaGF2ZSBiZWVuIGRyYXduIG9yIHNob3duLCBhdCB3aGljaCBwb2ludCB0aGUgaGFuZHMgYXJlIHJldmVhbGVkIGFuZCB0aGUgc3Ryb25nZXN0IGhhbmQgd2lucy4gCkJ1dCBJIG5vdCBpbiB0aGUgVVMuIApJbiB0aGlzIGNhc2UsIGVhY2ggcGxheWVyIHdvdWxkIHN0YXJ0IHdpdGggdGhlIHNhbWUgbnVtYmVyIG9mIGNoaXBzLCBzdWNoIGFzIDUwIGVhY2gsIGZvciBpbnN0YW5jZS5bMTRdLiAKRG8geW91IHdhbnQgdG8gQk9PU1QgTU9SQUxFPwpUaGlyZGx5LCB5b3UgbWVudGlvbiB0aGF0IHlvdSBoYXJkbHkgb24gc29jaWFsIG1lZGlhLiBIYXMgdGhpcyBjb21lIHVwIGluIGNvbnZlcnNhdGlvbiBiZXR3ZWVuIHlvdSB0d28/IFBlcmhhcHMgc2hlIHRoaW5rcyB5b3UgZG9uIFdBTlQgdG8gYmUgaW52b2x2ZWQgaW4gYWxsIG9mIGhlciBkYWlseSBwb3N0cz8KSG93ZXZlciwgaW4gMjAwNiB0aGUgV1NPUCBkZWNpZGVkIHRoYXQgYWxsIHRpcHMgd291bGQgYmUgcG9vbGVkIHNvIGl0IGlzIG5vdCBwb3NzaWJsZSB0byB0aXAgaW5kaXZpZHVhbCBkZWFsZXJzIGFueW1vcmUuIEZ1cnRoZXIgdG8gdGhpcyBpdCBtYXkgYmUgdGhhdCB5b3VuZ2VyIHBsYXllcnMsIG9yIHRob3NlIHdpdGggcHJpbWFyaWx5IG9ubGluZSBleHBlcmllbmNlLCBqdXN0IGRvbid0IHRpcCBhcyBtdWNoIGFsbCB0b2dldGhlci4gClRoYXQgdHlwZSBvZiBwcmVkYXRvcnkgYmVoYXZpb3IgY2FuIGFsc28gYmUgZGFuZ2Vyb3VzbHkgdW5wcmVkaWN0YWJsZS4gQ2xlYXJseSBoZSdkIGJlZW4gcGxhbm5pbmcgdGhpcywgYXMgaGUgYWxyZWFkeSBoYWQgZm9ybWVkIGhpcyBleGN1c2Ugb2YgIm9oIGNvbmdyYXRzIG9uIHRoZSBiYWJ5ISIgQW5kIGhlIHdhaXRlZCBmb3IgaGVyIHRvIHR1cm4gaGVyIGJhY2sgd2hpbGUgc2hlIHdhcyBidXN5IHdpdGggYW5vdGhlciB0YXNrLiAKSGVyIG1vbSB3YXMgYmVpbmcgcG9saXRlLCBiZWNhdXNlIHNoZSBubyBkb3VidCBzaGFyZWQgZXZlcnl0aGluZyB3aXRoIGhlciBtb3RoZXIgYWZ0ZXIgeW91IGNsZWFybHkgbG9zdCBpdC4gClRyeSBkb2luZyBldmVuIHR3byB0byB0aHJlZSBsaW5lcyBhdCBoaXMgc3BlZWQgYW5kIHNlZSBpZiB0aGUgd29yZHMgY2FuIGNvbWUgb3V0IGhhbGYgYXMgY2xlYXIgYW5kIHByb25vdW5jZWQgYXMgdGhleSBkbyBoZXJlLi4gCkV2ZW4gaWYgbG9jYWxzIGRvIGVuZCB1cCBzdHJ1Z2dsaW5nIHRvIGZpbmQgd29yaywgdGhlIGNpdHkgd2lsbCBsaWtlbHkgY2Fycnkgb24gYXMgYSB0b3VyaXN0IGF0dHJhY3Rpb24gZm9yIG91dHNpZGVycyB3aG8gaGF2ZSBqb2JzIGFuZCBjYW4gYWZmb3JkIHZhY2F0aW9ucy4KU2NvdHQgRml0emdlcmFsZCB3b3VsZCBwcm9iYWJseSBhZ3JlZS4uIApJIHRoaW5rIG9mIG15IDEwIHllYXIgb2xkIG5lcGhldyB3aG8gaXMgbmVhcmx5IGFzIHByZWNvY2lvdXMgYXMgRG9vZ2llLCBidXQgd2hvIGlzIGxpZ2h0IHllYXJzIGF3YXkgZnJvbSB0aGUgcHJvYmxlbXMgb2YgYSBzZXh1YWxseSBmcnVzdHJhdGVkIDE4IHllYXIgb2xkLi4gCkNldHRlIHNhaXNpbmUgZHUgQ29uc2VpbCBDb25zdGl0dXRpb25uZWwgdmlzYWl0ICBmYWlyZSBkY2xhcmVyIGNlcyBkaXNwb3NpdGlvbnMgaW5jb25zdGl0dXRpb25uZWxsZXMsIGNlIHF1aSBhdXJhaXQgZW50cmFuIGxldXIgbmNlc3NhaXJlIGFicm9nYXRpb24gZXQgcGFyIHZvaWUgZGUgY29uc3F1ZW5jZSwgdW5lIG91dmVydHVyZSBkdSBtYXJpYWdlICB0b3VzIGxlcyBjb3VwbGVzLiBBIGwnYXBwdWkgZGUgY2V0dGUgaW5jb25zdGl0dXRpb25uYWxpdCwgTW1lIENvcmlubmUgQy4gRXQgYXV0cmVzIGF2YW5haWVudCB1bmUgY29udHJhZGljdGlvbiBhdmVjIGwnYXJ0aWNsZSA2NiBkZSBsYSBDb25zdGl0dXRpb24sIGxhIGxpYmVydCBkdSBtYXJpYWdlLCBsZSBkcm9pdCBkZSBtZW5lciB1bmUgdmllIGZhbWlsaWFsZSBldCBsZSBwcmluY2lwZSBkJ2dhbGl0IGRldmFudCBsYSBsb2kuLiAKQ2UgY2hhbmdlbWVudCBkZSB0dGUgZXhwbGlxdWUgZW4gcGFydGllIGwnYWJzZW5jZSBkZSBjb21tdW5pY2F0aW9uIGRlIGwnSHRlbCBkZSBWaWxsZSBsZSB0ZW1wcyBkZSBsYSB0cmFuc2l0aW9uLi4gClNpdCBhbmQgR28gU3RyYXRlZ2llcyBmb3IgUG9rZXIgUHJvcGhlY3kKSW4gY2FzZSBvZiBzdHJhaWdodHMgdGhhdCB0aWUsIHRoZSBwb3QgaXMgc3BsaXQuIApTdWl2ZXogYXR0ZW50aXZlbWVudCBsZSBkcm91bGVtZW50IGR1IGpldSBwb3VyIHNhdm9pciBxdWFuZCBjJ2VzdCAgdm90cmUgdG91ci4gU2kgdm91cyB0ZXMgZGlzdHJhaXQsIHZvdXMgcmFsZW50aXJleiBsYSBwYXJ0aWUsIHBhcmFpdHJleiBpcnJlc3BlY3R1ZXV4IG91IGFnYWNlcmV6IGxlcyBhdXRyZXMgam91ZXVyc1syXS4KT3IgaXJyaXRhdGluZyBwYWNrZWQgaHVtcHMgdGhhdGxsIGljZSBvdmVyIG1ha2luZyBsZWF2aW5nIHRoZSBuZXh0IGRheSBtb3JlIHByb2JsZW1hdGljLi4gClBvcGVtZWdhZm9yY2UgdQpFbmdsaXNoIHZlcnNpb24KSG93ZXZlciwgUm93c29tZSdzIHN1Y2Nlc3NlcyBkaWRuJ3Qgc3RhY2sgdXAgb3Zlcm5pZ2h0LgoxMSkgR3dlbiBTdGVmYW5pCkFueXdheSBJIGRldmVsb3BpbmcgYSBtaW5pIHJlc2N1ZSByb3V0aW5lIGZvciBteSBza2luLCBpbmNsdWRpbmcgc29tZSBoeWRyb2NvcnRpc29uZSBzdHVmZiBzbyBJIGRvbiBpdGNoLiAKVGhlIGxlYWRlcnMgb2YgdGhlIEFtZXJpY2FuIGdyb3VwLCBOZXcgTGlmZSBDaGlsZHJlbiBSZWZ1Z2UsIExhdXJhIFNpbHNieSBhbmQgQ2hhcmlzYSBDb3VsdGVyLCBhcmUgbWVtYmVycyBvZiBDZW50cmFsIFZhbGxleSBCYXB0aXN0IGNodXJjaCBpbiBJZGFoby4gTmV3IExpZmUgQ2hpbGRyZW4gUmVmdWdlIG5ldmVyIHF1aXRlIGdvdCB0aGVpciB3ZWJzaXRlIHVwIGFuZCBydW5uaW5nLCB0aGUgYXMgd2VsbCBhcyBvdGhlciBDaHJpc3RpYW4gd2Vic2l0ZXMgZ2l2ZSBzb21lIGluc2lnaHQgaW50byB3aGF0IHRoZSBoZWxsIHRoZXNlIHdoaXRlIHBlb3BsZSB3ZXJlIGRvaW5nIHRha2luZyBjaGlsZHJlbiBvdXQgSGFpdGkgYW5kIGx5aW5nIHRvIHRoZWlyIHBhcmVudHMgYWJvdXQgdGhlIGZhY3QgdGhhdCB0aGV5IHdlcmUgZ29pbmcgdG8gYmUgYWRvcHRlZCB0byBBbWVyaWNhbiAiQ2hyaXN0aWFuIiBmYW1pbGllcy4KSSBmZWVsIGxpa2UgSSdtIG5vdCBnaXZpbmcgdGhlIGxpdHRsZSBndXkgYW55IHRpbWUgdG8gc2xlZXAgYmVjYXVzZSBvZiBteSBwYXJhbm9pYS4gCldoZW4gaXQgY29tZXMgdG8gdGhlIG92ZXJhbGwgcG9saXRpY2FsIGF0bW9zcGhlcmUsIEkgd291bGQgY2VydGFpbmx5IGxpa2UgdG8gcmUgc3RhdGUgdGhhdCBJIHRoaW5rIHRoaXMgaXMgZ29pbmcgdG8gc2V0IGEgcHJlY2VkZW50LCBidXQgaXQgbmljZSB0byBrbm93IHRoYXQsIGF0IGxlYXN0IHByb2NlZHVyYWxseSwgaXQgd29uIFNhZGx5LCBteSBsYXJnZXIgdGhvdWdodCBpcyB0aGF0IHRoZSBzb2NpYWwvcG9saXRpY2FsIHByZWNlZGVudCBzZXQgaGVyZSAoc2VwZXJhdGUgdG8gdGhlIGxlZ2FsIHByZWNlZGVudCkgaXMgZ29pbmcgdG8gYmUgdGhlIG9uZSB0aGF0IGdvaW5nIHRvIGJlLiAKVGhlIFJlZGRpdCBjb250ZW50IHBvbGljeSBpcyBleHRyZW1lbHkgY2xlYXIgICBpZiBhbiBpbWFnZSBvZiBhbiB1bmRlcmFnZSBwZXJzb24gaXMgc2V4dWFsaXplZCBvciBjb3VsZCBiZSBpbnRlcnByZXRlZCBhcyBzdWNoLCBpZiB5b3UgaGF2ZSBkb3VidHMgYWJvdXQgdGhlIGltYWdlICAgZG9uIHBvc3QgaXQhIEV2ZW4gaWYgeW91IHRha2UgdGhpcyB0byBhIHJpZGljdWxvdXMgZXh0cmVtZSwgZXZlbiBpZiBpdCB0YWtlcyBiYW5uaW5nIGFsbCBwaWN0dXJlcyBvZiBtaW5vcnMgdG8gZ2V0IHJpZCBvZiBwZWRvIGNvbW11bml0aWVzIG9uIHJlZGRpdCwgdGhhdCBhbiBpbmNyZWRpYmx5IGZhaXIgdHJhZGUuIApCcmVhdGhpbmcgZGVlcGx5IGFuZCB0YWxraW5nIGhpbSB0aHJvdWdoIHdoYXQgeW91J3JlIGZlZWxpbmcgd2lsbCBoZWxwIGtlZXAgeW91IGJvdGggc3RheSByZWxheGVkLiAKVGhleSB0cmVhdGVkIGxpa2Ugc3ViIGh1bWFuLiBJbiB0aGlzIHBhcnRpY3VsYXIgY2FzZSB0aGUgd29tZW4gd2VyZSBub3QgYWxsb3dlZCB0byBsZWF2ZSB0aGUgc3BhLiAKUGFzIGRlIGJhcnMgZHUgQ2hpbGksIHBhcyBkZSBjcmV2ZXR0ZXMgZGUgVGhhIGRlIGNvdXJzZSBhdSBjb2Nob24gZ3JhaXNzIGRlIHBhaWxsZXMsIHBvZ25lIGRhbnMgbGUgbmV6IGRlcyB0b3J0dWVzLiBFdCBsZSBwbGFzdGlxdWUgY3IgZGVzIG9jIGRlIGQgZGFucyBsZXMgb2MgYyBiaWVuIGNvbm51LgpEMSBnb3QgYSA2LjUgYXQgbGF1bmNoLiBUaGF0IHNoaXQgaXMgbXkgZmF2b3JpdGUgZ2FtZSBvZiBhbGwgdGltZS4gCkFuZCB0aGUgdGVybXMgaGUgd2FudHMgYXJlIGJhc2ljYWxseSAiYW55dGhpbmcgdGhlIGxlZnQgZG9lc24gd2FudC4iLiAKRjEgMjAxOCwgRmFsbG91dCA0LCAuMiBkYXlzIGFnby4gCkZvcmVnbyB0aGUgU21lbGx5IEZvb2QgSnVzdCBiZWNhdXNlIGdhcmxpYyBzYXVlcmtyYXV0IGlzIHlvdXIgZmF2b3JpdGUgZm9vZCBkb2Vzbid0IG1lYW4gdGhhdCBldmVyeW9uZSBpbiB0aGUgb2ZmaWNlIHdpbGwgYWdyZWUuIExlYXZlIHB1bmdlbnQgc21lbGxpbmcgZm9vZCBhdCBob21lIGFuZCBpZiBzb21ldGhpbmcgeW91IGNvb2sgZ2l2ZXMgb2ZmIGEgc3Ryb25nZXIgdGhhbiBleHBlY3RlZCBvZG9yLCBhaXIgb3V0IHRoZSByb29tIGJ5IG9wZW5pbmcgYSB3aW5kb3cgb3Igc3ByYXkgdGhlIHJvb20gd2l0aCBhaXIgZnJlc2hlbmVyLgpJZiB0aGUgZGlyZWN0b3IgZGVjaWRlcyB0byBidXRjaGVyIHRoZSBtb3ZpZSwgaXRzIGdvaW5nIHRvIGJlIGEgYmFkIG1vdmllLi4gCkJpa2VycyByaWRlIHRvIHJhaXNlIG1vbmV5IGZvciBpbmp1cmVkIFdoaXRtZXIgc3R1ZGVudApGaXJzdCBvZiBhbGwsIGl0IG9ubHkgaGFsZiB0aGUgc2l6ZSBvZiBXYWxlcyAgIG15IGJlc3QgZ3Vlc3MgaXMgdGhhdCBpdCBhYm91dCA4MCBtaWxlcyBub3J0aCB0byBzb3V0aCBhbmQgNDAgbWlsZXMgZWFzdCB0byB3ZXN0ISBMZWJhbm9uIHdhcyB1bmRlciBGcmVuY2ggcnVsZSB1bnRpbCA2MCB5ZWFycyBhZ28uIApGT1JUIEFUS0lOU09OIFBhdGllbnRzIGRpc21pc3NlZCBmcm9tIHRoZSBGb3J0IEF0a2luc29uIEhvc3BpdGFsIHdlcmUgTXJzLiAKSXQgd2FzIGEgdHJpcCBmb3IgdHdvIHRvIHRoZSBmb2xsb3dpbmcgeWVhcidzIFdTT1Agd2l0aCBhY2NvbW1vZGF0aW9ucywgYWlyZmFyZSwgYW5kICQyLDUwMCBpbiBzcGVuZGluZyBtb25leS4gV2UgaGFkIGl0IGluIHRoZSBwb2tlciBjaGlwIGJveCBsb2NrZWQgdXAgYW5kIGp1c3QgcGxhY2VkIGl0IGluIHRoZSBtaWRkbGUgb2YgdGhlIDgzIEluY2ggUGVkZXN0YWwgUG9rZXIgVGFibGUgd2l0aCBEZWFsZXIgU3BvdCBmb3IgZXZlcnlvbmUgdG8gc2VlLiBXaGVuIGhlIGZpbmFsbHkgd29uLCBJIHNsaWQgb3ZlciBhIHRpbnkgZW52ZWxvcGUgaG9sZGluZyB0aGUga2V5IGFuZCB3aGVuIGhlIG9wZW5lZCB0aGUgQ2FzaW5vIFBva2VyIFRhYmxlcyBib3ggbm8gd29yZHMgY291bGQgZGVzY3JpYmUgdGhlIG1vbWVudC4gCkxhc3Qgd2Vla2VuZCB0aGUgQkFEUCBhbmQgQUNDRVNTIGhlbGQgb3VyIGZpcnN0IGNvbWJpbmVkIHZvbHVudGVlciB0cmFpbmluZy4gCkNhciBjcmFzaGVzIGhhcHBlbiBpbiBsaXRlcmFsbHkgb25lL3R3byBleWUgYmxpbmtzLgpDaGVjayBvdXQgc29tZSBzdHJlYW1zIG9mIHZhcmlvdXMgcGxheWVycyBvbiB0d2l0Y2guIEkgd291bGQgc2F5IG1vc3Qgb2YgdGhlIHBlb3BsZSBzdHJlYW1pbmcgYXJlIGJhZCBwbGF5ZXJzIHNvIGJlIGNhcmVmdWwgdGFraW5nIHdoYXQgdGhleSBoYXZlIHRvIHNheSB0byBoZWFydCwgYnV0IGl0IGlzIHN0aWxsIGdvb2QgdG8gZ2V0IGEgdGFzdGUgZm9yIHRoZSB3YXkgcGVvcGxlIGFyZSBwbGF5aW5nIHBva2VyLgpTbyB3aHkgZGlkIHRoZSAyMDA0IE5hdGlvbmFsIENob2xlc3Rlcm9sIEVkdWNhdGlvbiBQcm9ncmFtIGd1aWRlbGluZXMgZXhwYW5kIHRoZSBwcmV2aW91cyBndWlkZWxpbmVzIHRvIHJlY29tbWVuZCB0aGF0IG1vcmUgcGVvcGxlIHRha2Ugc3RhdGlucyAoZnJvbSAxMyBtaWxsaW9uIHRvIDQwIG1pbGxpb24pIGFuZCB0aGF0IHBlb3BsZSB3aG8gZG9uJ3QgaGF2ZSBoZWFydCBkaXNlYXNlIHNob3VsZCB0YWtlIHRoZW0gdG8gcHJldmVudCBoZWFydCBkaXNlYXNlLiBDb3VsZCBpdCBoYXZlIGJlZW4gdGhhdCA4IG9mIHRoZSA5IGV4cGVydHMgb24gdGhlIHBhbmVsIHdobyBkZXZlbG9wZWQgdGhlc2UgZ3VpZGVsaW5lcyBoYWQgZmluYW5jaWFsIHRpZXMgdG8gdGhlIGRydWcgaW5kdXN0cnk/IFRoaXJ0eSBmb3VyIG90aGVyIG5vbiBpbmR1c3RyeSBhZmZpbGlhdGVkIGV4cGVydHMgc2VudCBhIHBldGl0aW9uIHRvIHByb3Rlc3QgdGhlIHJlY29tbWVuZGF0aW9ucyB0byB0aGUgTmF0aW9uYWwgSW5zdGl0dXRlcyBvZiBIZWFsdGggc2F5aW5nIHRoZSBldmlkZW5jZSB3YXMgd2Vhay4gSXQgd2FzIGxpa2UgaGF2aW5nIGEgZm94IGd1YXJkIHRoZSBjaGlja2VuIGNvb3AuLiAKRmxvcCBpcyBKOTRyIG9uZSBjbHViLiBDaGVjaywgYnV0dG9uIGJldHMgNDUsIHV0ZyBmb2xkcyBhbmQgSSBjYWxsLiAKSW4gdGhlIGtpdGNoZW4sIGEgbWl4IG9mIHNoYXJlYWJsZSBwbGF0ZXMsIHNhbGFkcywgYW5kIHNhbmR3aWNoZXMgd2lsbCBiZSBhdmFpbGFibGUsIHdpdGggaW5ncmVkaWVudCBuYW1lcyB5b3UgbWlnaHQgcmVjb2duaXplIGZyb20gdGhlIGJlZXIgbGlzdC4gU2FsYWQgZHJlc3NpbmdzIGFuZCBvdGhlciBjb25kaW1lbnRzIHdpbGwgaW5jbHVkZSB0aGUgU2FudGlsbGkgQ2Flc2FyIGRyZXNzaW5nLCBBd2FrZSBiYWxzYW1pYyB2aW5haWdyZXR0ZSwgYW5kIE1vcnBoIElzbGFuZCBkcml6emxlLiBKb3NlcGhpbmUgc2xpZGVycyB3aWxsIGJlIHN0dWZmZWQgd2l0aCBiYXJiZWN1ZSBwdWxsZWQgcG9yayBhbmQgYmVlciBzbGF3LCBxdWlub2EgYml0ZXMgd2lsbCBjb21lIHdpdGggYmxhY2tiZXJyeSBXZWlzc2UgbWFybWFsYWRlLCBhbmQgYSBudW1iZXIgb2Ygb3RoZXIgZGlzaGVzICAgc3BlbnQgZ3JhaW4gcHJldHplbHMsIHRoZSBTaGlmdHkgYnVyZ2VyLCB0aGUgZm91bmRlcidzIG1hYyBhbmQgY2hlZXNlICAgd2lsbCB1c2UgaG91c2UgYmVlciBjaGVlc2UuIElmIHRoZXJlJ3MgYSBsaW5lIGJldHdlZW4gdGhlIGtpdGNoZW4gYW5kIHRoZSBicmV3ZXJ5J3MgcGFudHJpZXMsIGl0J3MgYSBibHVycnkgb25lLiBUaGUgc21hbGwgcm9vbSBuZWFyIHRoZSBicmV3ZXJ5J3MgZW50cmFuY2Ugd2lsbCBvZmZlciBicmVha2Zhc3Qgc2FuZHdpY2hlcyBhbmQgcGFzdHJpZXMgZnJvbSBoZWFkIGJha2VyIExpcmEgTW9uZGFsLCBhbG9uZyB3aXRoIGNvZmZlZSBmcm9tIE5pZ2h0IFNoaWZ0IFJvYXN0aW5nICAgeWVzLCB0aGUgYnJld2VyeSBpcyBnZXR0aW5nIGludG8gdGhlIGNvZmZlZSBiZWFuIGdhbWUsIHRvby4KQXMgdGhlIHdvcmsgcGVybWl0IHJ1bnMgYSBiaWcgc3RhcnQgdXAgcHJpY2UgYWxvbmcgd2l0aCB0aGUgYW5udWFsIHJlbmV3YWxzLiAKQ2FuIGRvIGFueSBvZiB0aGlzIHN0dWZmLCBzaGUgc2FpZC4gCkluIG15IG9waW5pb24gRHIuIApUaGluayBhYm91dCBpdCB0aGlzIHdheS4gTWVuIGZpbmQgTGF1cmEgQ3JvZnQgc2V4eS4gKEJhZGFzcywgYmlnIGJvb2JzLCBzaG93cyBza2luLCBlcXVhbCBwYXJ0cyBzbmFya3kgYW5kIHNleHkpIFdvbWVuIGZpbmQgSW5kaWFuYSBKb25lcyBzZXh5LiAoU21hcnQsIHBvd2VyZnVsLCBzdHJvbmcsIHNtb2xkZXJpbmcgZXllcyBhbmQgYSBnb29kIGZhY2UsIGVxdWFsIHBhcnRzIGNhcGFibGUgYW5kIHNleHkpLiBXb21lbiBnZW5lcmFsbHkgYXJlbid0IGFzIGF0dHJhY3RlZCB0byBtZW4gc2hvd2luZyBza2luIGFzIHRoZXkgYXJlIG90aGVyIGZhY3RvcnMsIHdoZXJlYXMgbWVuIGFyZSB1c3VhbGx5IGhhcHB5IGp1c3QgbG9va2luZyBhdCBib29icy4gVGhhdCdzIHdoeSBib29rcyBsaWtlIDUwIHNoYWRlcyBvZiBncmF5IGRvbid0IGhhdmUgaHVsa2luZyBwaWxlcyBvZiBtdXNjbGUgbGlrZSBLcmF0b3MgYW5kIGluc3RlYWQganVzdCBhaW0gZm9yIHNvbWVvbmUgbGlrZSB0aGUgdGFsbCBkYXJrIGFuZCBoYW5kc29tZSB0eXBlIGFzIHRoZSBtYWxlIGxlYWQuCkJhbmtpbmcgZ2lhbnQgR29sZG1hbiBTYWNocyBoYXMgcHV0IHRvZ2V0aGVyIGEgYmFjayB0byBzY2hvb2xyZWFkaW5nIGxpc3R3aXRoIGJvb2sgcmVjb21tZW5kYXRpb25zIGZyb20gc29tZSBvZiB0aGUgbGVhZGluZyBidXNpbmVzcyBmaWd1cmVzIGF0IHRoZSBicmFuY2hlcyBhcm91bmQgdGhlIHdvcmxkLiBOYXRlLCB3aG8gYWNjdXJhdGVseSBwcmVkaWN0ZWQgdGhlIHJlc3VsdHMgb2YgZXZlcnkgc3RhdGUgaW4gdGhlIDIwMTIgVVMgZWxlY3Rpb24sIGxvb2tzIGludG8gZXZlcnl0aGluZyBmcm9tIHRoZSBzdG9jayBtYXJrZXRzIGFuZCBlY29ub21pZXMgdG8gdGhlIHBva2VyIHRhYmxlIGFuZCBldmVuIGVhcnRocXVha2UuIApBbiBob3VyIHdpbGwgcnVuIHlvdSAkNTUwLiAKSGVyZXMgYSBmZXcgcmVzb3VyY2VzIHRvIGdldCBzdGFydGVkLCBidXQgZG9uIHRha2UgaXQganVzdCBmcm9tIG1lLiBEbyB5b3VyIG93biByZXNlYXJjaCwgY29tZSB0byB5b3VyIG93biBjb25jbHVzaW9uLiBCdXQgaXRzIGEgZ29vZCBvdmVydmlldyBhcyB0byB3aGF0IEFESEQgYWN0dWFsbHkgaXMgbGlrZS4gCkkgaGFkIGFuIGVtcGxveWVyIHNvcnQgb2YgbGlrZSB0aGF0IGEgZmV3IHllYXJzIGFnby4gCldlIGluIGZ1bGwgcGFuaWMgbW9kZSBiZWNhdXNlIHdlIGxvc3QgdHdvIHN0cmFpZ2h0IGdhbWVzIGZvciB0aGUgZmlyc3QgdGltZSBhbGwgc2Vhc29uIGFuZCBpdCBNYXJjaC4gCk92ZXJ2aWV3IGZvciBGQVJUQk9YCkkgdGhpbmsgaXQgZGVwZW5kcyBvbiB0aGUgcGVyc29uLiBUeXBpY2FsbHksIHlvdSB3b3VsZCB0aGluayB0aGUgYW5zd2VyIHdvdWxkIGJlIG5vLCBidWlsZGluZyBhbiBlbXBpcmUgb2ZmIG9mIHBlb3BsZSdzIHNlbGYgZGVzdHJ1Y3RpdmUgZGVzaXJlIHRvIHNtb2tlIG1ldGggaXMgYSB0ZXJyaWJsZSB0aGluZy4gQnV0IGZvciBXYWx0LCBzcGVjaWZpY2FsbHksIEkgZG9uJ3QgdGhpbmsgdGhhdCBtYXR0ZXJzLiBGb3IgaGltLCBpdCB3YXMgYWJvdXQgdGFraW5nIHNvbWV0aGluZyB0aGF0IGhlIHdhcyBnb29kIGF0LCBzb21ldGhpbmcgdGhhdCBtYWRlIGhpbSBmZWVscyBwb3dlcmZ1bCBhbmQgYWxpdmUsIGFuZCB0dXJuaW5nIGl0IGludG8gYW4gb3V0bGV0IHRoYXQgd291bGQgZ2l2ZSBoaW0gbW9yZSBtb25leSBhbmQgbW9yZSBwb3dlci4KVGhlcmUgd2FzIG9uZSB2aWRlbyB3aGVyZSBTYXVjZTEyMyBhbmFseXplcyBhIDZ4IHNob3ZlIG9uIHRoZSByaXZlciBieSBPVEJfUmVkQmFyb24gYW5kIGl0IHJlYWxseSBnb3QgbWUgdGhpbmtpbmcgb3V0c2lkZSBteSBub3JtYWwgbGV2ZWwuIApbQSAyMDAgbGIgcGVyc29uIGlzIGFib3V0IDkxIGtnOyA5MSBrZyBYIDMwIG1nID0gMjczMCBtZ11JbiBBSUQgcGF0aWVudHMsIGFzIGNvbXBhcmVkIHRvIFdEIHBhdGllbnRzLCBmaXNoIG9pbCBsZWQgdG8gYSBzaWduaWZpY2FudCByZWR1Y3Rpb24gaW4gdGhlIG51bWJlcnMgb2YgdGVuZGVyICgyOCUgdnMgMTElKSBhbmQgc3dvbGxlbiAoMzQlIHZzIDIyJSkgam9pbnRzLi4gCkxvdyBCYWNrIFBhaW4gU3R1ZGllcyAyMDEwClRoZXkgaGF2ZSBzaXggbnVjbGVhciByZWFjdG9ycywgc28gZnVlbCB3b24gYmUgYSBwcm9ibGVtLiBBIGxhdW5jaCBtZWNoYW5pc20gaXNuIGhhcmQgZWl0aGVyLCBzZWVpbmcgdGhhdCBldmVuIGNvdW50cmllcyBsaWtlIFBha2lzdGFuIGFuZCBJcmFuIGhhdmUgdGhlbS4gCkkgbWVhbiB1bmxlc3MgeW91ciB3aWZlIHJlZ3VsYXJseSB0YWxrcyBhYm91dCBsZXR0aW5nIHlvdSBoYXZlIGNlcnRhaW4gZnJlZWRvbXMgd2l0aCBvdGhlciB3b21lbiBJIHdvdWxkbid0IGV4cGVjdCBoZXIgc2hlJ2QgYnV5IGEgaGFwcHkgZW5kaW5nIG1hc3NhZ2UuCk1leGljbyBpcyBldmVuIGNoZWFwZXIgdG8gbGl2ZSBpbiBidXQgdGhpcyB3b3VsZCBiZSBwcmltYXJpbHkgZm9yIGFuIG9ubGluZSBncmluZGVyLiBJdmUgYmVlbiB0byBhbGwgMyBwbGFjZXMgKGN1cnJlbnRseSByZXNpZGUgaW4gdmVnYXMpIGFuZCBJIHNlZSBubyByZWFzb24gd2h5IHlvdSBjb3VsZG50IGhvcCBhcm91bmQgYWxsIDMgb2YgdGhlc2Ugc3BvdHMgYXMgdGhleXJlIHNvcnQgb2YgaW4gdGhlIHNhbWUgZ2VvZ3JhcGhpY2FsIGFyZWEuCk15IGJpZ2dlc3QgaXNzdWUgaXMgd2l0aCBwdXR0aW5nIGl0IGJldHdlZW4gVExKIGFuZCBJWC4gRmlyc3Qgb2YgYWxsLCBJIGhhcmRseSBrbm93IGFueW9uZSBnZW51aW5lbHkgaW50ZXJlc3RlZCBpbiB0aGF0IGVyYSBzdG9yeWxpbmUgYmV0d2VlbiB0aGUgUmVzaXN0YW5jZSBhbmQgRk8uIFNlY29uZGx5LCB5b3Ugb25seSBodXJ0aW5nIHRoZSBwYXJrIGJ5IGxpbWl0aW5nIGl0IHRvIHRoYXQgb25lIGVyYS4gCk1hd2VraSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnbwozNSkgc2hlIGRvZXNuIHVzZSBoZXIgY29taWMgbmFtZS4gbmVpdGhlciBkb2VzIFNjYXJsZXQgV2l0Y2guIEkgdGhpbmsgaXQgZmluZQpLb21lbiBoYXZlIGhvc3RlZCBmdW5kcmFpc2VycyBhdCBDbHViIFZlbHZldCBieSBoaXJpbmcgYSByZWNvcmRpbmcgYXJ0aXN0IHRvIHBlcmZvcm0gYW5kIHNlbGxpbmcgdGlja2V0cyB0byBndWVzdHMuLiAKSSB0b28gYW0gc3RpbGwgaG9waW5nIGZvciAyMDE5LCBidXQgYWdyZWUgMjAyMCBpcyBhY3R1YWxseSBtb3JlIGxpa2VseS4gSSBkbyB0aGluayB0aGV5IHdpbGwgc2hvdyB1cyBzb21ldGhpbmcgbW9yZSBmb3IgU3RhcmZpZWxkIGF0IEUzIHRoaXMgeWVhci4gVGhleSBsaWtlIHRvIGtlZXAgdGhlIHJldmVhbHMgY2xvc2UgdG8gYWN0dWFsIHJlbGVhc2UsIGJ1dCBJIGRvdWJ0IHRoZXkgd2lsbCBkbyB0aGF0IHdpdGggYSBicmFuZCBuZXcgSVAuIFRoZXkgd2lsbCB3YW50IHRvIHNob3cgdXMgbW9yZSBvZiB3aGF0IGlzIGNvbWluZyB0aGVyZSBhbmQgZ2l2ZSB1cyBtb3JlIGhvcGUgZm9yIGl0LiBXaXRoIHRoZSBkaXNhc3RlciBGYWxsb3V0IDc2IGhhcyBiZWNvbWUsIEkgYW0gYWxzbyBiZXR0aW5nIHRoZXkgd2lsbCB3YW50IHRvIHNob3cgdXMgU3RhcmZpZWxkIHRvIGJldHRlciBhc3N1cmUgdXMgdGhhdCBGYWxsb3V0IDc2IGlzbiB0aGUgZW5kIG9mIHRoZWlyIGNvbXBhbnkuIEkgZG9uIGtub3cgaG93IEJldGhlc2RhIHZpZXdzIEUzIG5vdywgYnV0IEUzIGlzIHVzdWFsbHkgbWVhbnQgbW9yZSBmb3IgaW52ZXN0b3JzIGFuZCBpbnNpZGVycyB0aGFuIGFjdHVhbCBmYW5zLCBldmVuIHdpdGggdGhlIHJlY2VudCB5ZWFycyB3aGVyZSB0aGV5IHNlbGwgdGlja2V0cyBmb3IgdGhlIGV2ZW50LiBQQVggaXMgdXN1YWxseSBzZWVuIGFzIHRoZSBmYW4gZXZlbnQgYW5kIHBvc3NpYmx5IFF1YWtlQ29uIGluIEJldGhlc2RhIGNhc2UuCldoZW4gSSB3YXMgMjIgSSB3YXMgaW4gdGhlIG1pbGl0YXJ5IGFuZCBJIHdhcyBkaWFnbm9zZWQgd2l0aCB0eXBlIDEgZGlhYmV0ZXMuIEl0IHN0aWxsIHRvb2sgbGlrZSBhIHllYXIgYWZ0ZXIgdGhlIGRpYWdub3NpcyB0byBzZXBhcmF0ZSBmcm9tIHRoZSBtaWxpdGFyeSwgYnV0IEkgd2VudCBob21lIG9uIGxlYXZlIGZvciB0aGUgaG9saWRheXMgYWJvdXQgYSBtb250aCBhZnRlciB0aGUgZGlhZ25vc2lzLiAKQSB0ZWFtIG9mIHN1aXQgc3BlY2lhbGlzdHMgd2lsbCBzcHJpbmcgaW50byBhY3Rpb24gYXMgd2UgZG9uIGRpYXBlcnMsIGxvbmcgam9obnMgd2l0aCBibGFjayBzb2NrcyAoaXQgYSBmYXNoaW9uIHN0YXRlbWVudCksIGFuZCBzbGlwIGludG8gb3VyIFNva2hvbCBwcmVzc3VyZSBzdWl0cy4gV2UgYWN0dWFsbHkgY2xpbWIgaW4gdGhyb3VnaCB0aGUgZnJvbnQgYW5kIHBva2UgYXJtcywgbGVncyBhbmQgaGVhZCB1cCBpbnRvIHRoZWlyIG1hdGNoaW5nIGhvbGVzLCBsaWtlIGEgdHVydGxlIG91dCBvZiBoaXMgc2hlbGwuIApUaGUgc2l0ZSBhY2NlcHRzIFVTIHBsYXllcnMuLiAKVGhlcmUgaXMgYSBzbGFuZ3kgc2F5aW5nIHRoYXQgdGhlIGdhbWUgb2YgcG9rZXIgaXMgImFsbCBpbiB0aGUgZHJhdy4iIFdoaWxlIHRoaXMgaXMgYW4gZXhhZ2dlcmF0aW9uLCBpdCBpcyBub3Qgc28gdmVyeSBmYXIgZnJvbSB0aGUgdHJ1dGguIApJZiB5b3Uga25vdyB0aGUgZGVjayBpcyBmaWxsZWQgd2l0aCAxMHMgb3Igc21hbGxlciBjYXJkcywgdGhpcyBjYW4gZ2l2ZSB5b3UgdGhlIGFkdmFudGFnZSBvZiBrbm93aW5nIHdoYXQgc3RyYXRlZ3kgdG8gdXNlLi4gCkhvd2V2ZXIgZnVydGhlciByZXNlYXJjaCBpcyBuZWVkZWQgdG8gZGVmaW5lIHRoZSBhcHByb3ByaWF0ZSB0aGVyYXBldXRpYyBkb3Nlcy4gCkhlIHdhcyBhbmQgaXMgYSBjb21wbGV0ZSBqZXJrLiAKSGUgcmVjZW50bHkgd3JvdGUgdGhpcyBjYW1wYWlnbiBzcGVlY2ggYW5kIEkgaG9wZSB5b3UgYWxsIGVuam95IGl0IGFzIG11Y2ggYXMgdGhlIHJlc3Qgb2YgdXMgaGF2ZSEgSGUgaGFzIGFsc28gY2hvc2VuIENob25nIGFzIGhpcyBWaWNlIFByZXNpZGVudCB0byBydW4gd2l0aC4uIApNYWdudXMgbWFraW5nIGZ1cm5pdHVyZSBhbmQgY2FydmluZyBkdWNrcyB3aGlsZSBzdGVhbGluZyBNZXJsZSdzIGRlYWQgdW5jbGVzIHNob2VzIGlzIGFsbCBvayBpbiBmYW50YXN5IGxhbmQgYmVjYXVzZSBpdCdzIGEgYml0IG9mIGEgZ2FnIG92ZXJhbGwuIFRhYWtvIFRhY28gYW5kIGhpcyBvbGQgY29va2luZyBzaG93IHdoaWxlIG1ha2luZyBzYXNzeSBjb21tZW50cyBpcyBhbGwga29zaGVyLiBNZXJsZSBhbmQgaGlzIGNvbG91cmJsaW5kbmVzcyBhbmQgb25lIHRyZWUgYXJtIGFuZCBoaXMgdHdvIGtpZHMgdGhhdCBoZSdzIHRoaXMgYWJzZW50ZWUgZmF0aGVyIGZvcj8gQWxsIHBhciBmb3IgdGhpcyBjb3Vyc2UuQW1uZXN0eSBpcyBhIGZhbnRhc3kgc3RvcnkgYmFzZWQgaW4gdGhlIHJlYWwgd29ybGQuIApBbiBhZHZhbnRhZ2UgdG8gY291Y2ggc3VyZmluZyB0aGF0IHlvdSB3b24ndCBnZXQgZnJvbSB2YWNhdGlvbiB0aW1lIHdpdGggdGhlIGxpc3Qgb2YgcXVhbGlmaWNhdGlvbnMgeW91IGNyZWF0ZWQuIE1hbnkgdXNlcnMgb2YgT3V0bG9vayBFeHByZXNzIGFyZSBkaXNjb3VyYWdlZCB0byBsZWFybiB0aGF0IHRoZSBwcm9ncmFtIHNtaWxlIGFzIHlvdSByZWNvZ25pemUgdGhlIHBlcnNvbmFsaXRpZXMgeW91J3ZlIGFsd2F5cyBrbm93bi4gCkFzIHN1Y2g6IElmIEkgcHJlc2VudCBteXNlbGYgYXMgbmV3cyBhbmQgSSByZXBvcnQgZmFjdHMgYW5kIGNsYWltIHNvbWV0aGluZyBsaWtlICJ0aGUgc2NpZW5jZSBpcyBpbiIgYW5kIChpbnNlcnQgY2xhaW0gaGVyZSkuIEl0IGlzIGVpdGhlciBvYmplY3RpdmVseSBjb3JyZWN0LCBvciBjb25zZXF1ZW5jZXMuIFllcywgdGhlcmUgbGlrZWx5IGJlIHNob3VsZCBzb21lIHNvcnQgb2YgZ3JhY2UgcGVyaW9kIGZvciBjb3JyZWN0aW9ucyBhcyBwZW9wbGUgZG8gbWFrZSBtaXN0YWtlcy4gCldlIHdhdGNoZWQgdGhlIEJNVyBzaG9ydCBmaWxtcyBhZ2FpbiBmb3IgdGhlaXIgZXhlY3V0aW9uIHN0eWxlLCIgaGUgcmVjYWxscy4uIApUbyBCaWxsLCBXaXRoIExvdmVXb3JraW5nIGFzIGEgc3RhZ2UgbWFuYWdlciBmb3IgdGhlIEFydHMgQ2x1YiBpbiAxOTY5LCBCaWxsIE1pbGxlcmQgcXVpY2tseSBzaG90IHVwIHRoZSByYW5rcyBhbmQgYmVjYW1lIHRoZSBhcnRpc3RpYyBkaXJlY3RvciBvZiB0aGUgdGhlbiBmbGVkZ2xpbmcgdGhlYXRyZSBjb21wYW55IGluIDE5NzIuCkl0IGtpbmQgb2Ygc2lsbHksIEkga25vdyB3aGF0IEkgZ2V0dGluZyBteXNlbGYgaW50byBieSBicm93c2luZyB0aGlzIHBsYWNlLi4gClRoaXMgc3RhZ2UgaXMgYWxzbyBkZWZpbmVkIGJ5IHdoYXQgY2hpbGRyZW4gYXJlIG5vdCB5ZXQgYWJsZSB0byBkby4gRWdvY2VudHJpc20gaXMgYSBoYWxsbWFyayBvZiB0aGlzIHN0YWdlLiBDaGlsZHJlbiBhcmUgb2Z0ZW4gdW5hYmxlIHRvIGFwcHJlY2lhdGUgdGhlIHZpZXcgcG9pbnRzIG9mIG90aGVycy4gVGhleSBhbHNvIHNob3cgYSB0ZW5kZW5jeSB0b3dhcmQgYW5pbWlzdGljIHRoaW5raW5nLCB0aGF0IGlzIGJlbGlldmluZyB0aGF0IGluYW5pbWF0ZSBvYmplY3RzIGhhdmUgdGhvdWdodHMsIGludGVudGlvbnMsIGFuZCB3aXNoZXMuClRoZXJlIGFyZSBzb21lIHRoaW5ncyB5b3Ugd29uIGZpZ3VyZSBvdXQgdW50aWwgeW91IGdldCBpbnRvIGl0LiAKU2hlIGhhZCBoZXIgbmlwcGxlIHBpZXJjZWQgZm9yIGEgd2hpbGUsIHdoZW4gb25lIGRheSwgb25lIG9mIHRoZSBiYWxscyB0aGF0IHNjcmV3cyBvbiwgaGFkIGFjY2lkZW50YWxseSB1bnNjcmV3ZWQgYW5kIGZhbGxlbiBvZmYuIFN0dXBpZGx5IGluc3RlYWQgb2YganVzdCB0YXBpbmcgdGhlIHBpZXJjaW5nIGluLCBhbmQgYnV5aW5nIGFub3RoZXIgYmFsbCB0aGUgbmV4dCBkYXksIHNoZSBwdWxsZWQgdGhlIHBpZXJjaW5nIG91dCwgYW5kIHdpdGggaXQgY2FtZSBhIGxvbmcgd2hpdGUuIHRoaW5nLgpNaW5kIC8gbW9vZCBlbmhhbmNlcnMgYXJlIGNlcnRhaW5seSBhIGJpZyBmYWN0b3IuIEZvciBhIHVzdWFsIGRheSBJIGFsd2F5cyBlbmpveSBtdXNpYyBmb3IgYSBiaXQgd2hpbGUgdGhlIG1vcm5pbmcgZG9zZSBvZiBjYWZmZWluZSBpcyBpbiBlZmZlY3QuIApJdCB3aWxsIGNvbWUgdXAgYXMgYSBwcml2YXRlIHRyZWUgZm9yIGFueW9uZSB3aG8gYSBETkEgbWF0Y2ggYW5kIHRoZXkgY2FuIGNvbnRhY3QgaGltIChhcyB0aGUgb3duZXIgb2YgdGhlIHRyZWUpIHRvIHJlcXVlc3QgYW4gaW52aXRhdGlvbiB0byBzZWUgaXQuQmUgc3VyZSB5b3UgaW52aXRlZCB0byB0aGUgdHJlZSBhcyBhbiBFZGl0b3IgaWYgeW91IHBsYW5uaW5nIHRvIG1hbmFnZSB0aGUgdHJlZSBmb3IgaGltLCBvciBhcyBhIENvbnRyaWJ1dG9yIG9yIEd1ZXN0IGlmIGhlIG1hbmFnZSBpdCBoaW1zZWxmLiAKVGhleSBhcmUgaGlzIGdyZWF0ZXN0IGxlZ2FjeS4gU3Vydml2ZWQgYnkgaGlzIGxvdmluZyBzaXN0ZXIgSmVhbiBIdWdoZXMgKEVsbWVyICAgcHJlZGVjZWFzZWQpLCBicm90aGVyIEpvaG4gIlN5bCIgKE1hcmxlbmUpLCBSb25hbGQgKFBoeWxsaXMgcHJlZGVjZWFzZWQpLCBzaXN0ZXJzIGluIGxhdyBNYXJ5IExvdSAoUm9kIHByZWRlY2Vhc2VkKSwgTWFyaWUgV2lsbGlzIChSb2JlcnQgcHJlZGVjZWFzZWQpIGFuZCBtYW55IHNwZWNpYWwgbmllY2VzIGFuZCBuZXBoZXdzLiBKb2lucyBoaXMgc2libGluZ3MgRnJlZCwgU2FkaWUsIFJvZCwgQWxleCwgQ2F0aGVyaW5lIGFuZCBKb2huIERhbiBTdXJ2aXZlZCBhbHNvIGJ5IGhpcyBleHRlbmRlZCBmYW1pbHksIENhdGhlcmluZSBMdW9tYSAoQ2xpZmZvcmQpIGNoaWxkcmVuIFNhcmFoLCBBbGFuIGFuZCBKZXNzaWUsIEphY2sgTWFjRG9uYWxkIChIZWxlbiksIEphbWVzIE1hY0RvbmFsZCBwcmVkZWNlYXNlZC4gCklmIHlvdXIgcG9rZXIgaGFuZHMgaGF2ZSB0aGUgc2FtZSB2YWx1ZSwgaXQgaXMgdGhlbiByYW5rZWQgYXMgdGhlIG5leHQgaGlnaGVzdC4gVGhlIG5leHQgdHlwZSBvZiByYW5raW5nIGZvciBwb2tlciBoYW5kcyB3b3VsZCBiZSBwYWlycy4gCk92ZXJ2aWV3IGZvciBoZWJlamVlYmVlCiJXZSBtZWFzdXJlZCBldmVyeXRoaW5nLCB0aGlua2luZyB3ZSB3ZXJlIGdvaW5nIHRvIGZpbmQgc29tZSBtYWdpYyBtZXRhYm9saWMgZmFjdG9yIHRoYXQgd291bGQgZXhwbGFpbiB3aHkgc29tZSBwZW9wbGUgZGlkbid0IGdhaW4gd2VpZ2h0LCIgZXhwbGFpbnMgRHIuIE1pY2hhZWwgSmVuc2VuLCBhIE1heW8gQ2xpbmljIHJlc2VhcmNoZXIgd2hvIGNvbGxhYm9yYXRlZCB3aXRoIERyLiBMZXZpbmUgb24gdGhlIHN0dWRpZXMuCktpdHR5Q2F0VHJvbGwgU1c6IDI1MCBDVzogMjA1IEdXOiAxNzAKRm9yIHlvdSByZWFsIHNwZWNpYWwgY2FzZXMgKHlvdSBrbm93IHdobyB5b3UgYXJlKSBqdXN0IGRvbnQgYmUgYW4gYXNzaGF0LiBJIG5vdCBldmVuIHNheWluZyBiZSBuaWNlLCBqdXN0IG5vdCBhbiBpbnN1ZmZlcmFibGUgYmFzdGVyZC4uIApXaGVuIHRoZSBFVSBhbmQgVVMgZ2l2ZSBzYW5jdGlvbnMgdG8gVmVuZXp1ZWxhbiBvZmZpY2lhbHMgbWFueSBFYXN0ZXJuIG91dGxldHMgd2lsbCB0cnkgdG8gc2F5IHRoYXQgdGhpcyBqdXN0IG1ha2VzIHRoZSBwZW9wbGUgb2Ygb3VyIGNvdW50cnkgd29yc3QgYmVjYXVzZSB0aGVuIHdlIGRvbiBoYXZlICQkIHRvIHNwZW5kIGluIGltcG9ydHMsIHdoaWNoIGlzIGEgYmxhdGFudCBsaWUsIHRoZSAkJCB0aGF0IGFyZSBzYW5jdGlvbmVkIHdoZXJlIG1vc3QgbGlrZWx5IGdvaW5nIHRvIHRoZSBwb2NrZXRzIG9mIHRob3NlIHdobyBzZXJ2ZSB0aGUgZ292ZXJubWVudCBhbmQgbm90IHRoZSBwZW9wbGUgd2hvIGFyZSBpbiBuZWVkIG9mIHRob3NlIGltcG9ydHMuLiAKSG93ZXZlciwgaXQgaXMgbm90IHJlcXVpcmVkIHRoYXQgdGhlIHRocmVhdCBhY3R1YWxseSBwcmV2ZW50IHRoZSB3aXRuZXNzIGZyb20gdGVzdGlmeWluZy4gCkkgZmluZCB0aGUgdHlwZSBvZiBwZXJzb24gd2hvIHNheXMgImV2ZXJ5dGhpbmcgbWVuIGRvIGlzIHNleGlzdCIgYW5ub3lpbmcsIGJ1dCB0aGF0IG5vdCBnb2luZyB0byBtYWtlIG1lIHN0b3AgYmVsaWV2aW5nIGluIGVxdWFsIHJpZ2h0cy4gSSBmaW5kIHRoZXJlIGEgc3Ryb25nIGNvcnJlbGF0aW9uIGJldHdlZW4gc29tZW9uZSB3aG8gZG9lc24gcmVhbGx5IGNhcmUgYWJvdXQgd29tZW4gcmlnaHRzIGFuZCB0aGUgZnJlcXVlbmN5IHRoZXkgdXNlIHRoZSB0ZXJtIFNKVyBhcyBhbiBpbnN1bHQuLiAKIkEgY3VzdG9tZXIgcmFpc2VkIGEgY29tcGxhaW50IGJlY2F1c2UgdGhleSBmZWx0IHRoZXkgd2VyZSB0cmVhdGVkIHJ1ZGVseSIgICBUaGUgbWFuYWdlciBjb25maXJtZWQgdGhhdCB0aGlzIHdhcyBub3QgdGhlIGNhc2UgYW5kIHRoZSBjdXN0b21lciB3YXMgbHlpbmcKV2UgYWxtb3N0IG5hdHVyYWxseSBhdHRyYWN0ZWQgdG8gd2F0ZXIuIHRyeWluZyB0byByZWR1Y2UgcmlzayB0byBsaXZlcyBhbmQgcHJvcGVydHkuIGl0cyBzdGF0ZW1lbnQsIHRoZSBmZWRlcmFsIHdlYXRoZXIgYWdlbmN5IHNheXMgdXAgdG8gMjUgbWlsbGltZXRyZXMgb2YgcmFpbiBpcyBnb2luZyB0byBmYWxsIFNhdHVyZGF5IGV2ZW5pbmcgaW50byBTdW5kYXkgbW9ybmluZy4KS0VFUElORyBQQUNFOiBOb3RoaW5nIGFib3V0IGl0IHdhcyBlYXN5LCBidXQgdGhlIEtuaWdodHMgcmVtYWluIHR3byBwb2ludHMgYmVoaW5kIE90dGF3YSBmb3IgZmlyc3Qgb3ZlcmFsbCwgdGhvdWdoIHRoZSA2NydzIGhhdmUgYSBnYW1lIGluIGhhbmQuIExvbmRvbiBpcyBzdGlsbCB1cCBzaXggcG9pbnRzIG9uIFNhZ2luYXcgZm9yIHRvcCBzcG90IGluIHRoZSBXZXN0ZXJuIENvbmZlcmVuY2UuIApEZWxTb2xlIGFuZCBUaXBwZXR0ICgyMDE0KSBzaG93IHRoYXQgY29tbW9ubHkgdXNlZCBzdGF0aXN0aWNhbCB0ZXN0cyBmb3IgY29tcGFyaW5nIHNraWxsIG9mIGNsaW1hdGUgZm9yZWNhc3RzIG1ha2UgdGhlIHF1ZXN0aW9uYWJsZSBhc3N1bXB0aW9uIHRoYXQgdGhlIGNvbXBldGluZyBmb3JlY2FzdHMgYXJlIGluZGVwZW5kZW50LiBUaGV5IHNob3cgdGhhdCB0aGlzIGFzc3VtcHRpb24gY2FuIGludmFsaWRhdGUgdGhlIHRlc3QgcmVzdWx0cywgYW5kIHN1Z2dlc3Qgc3VpdGFibGUgYWx0ZXJuYXRpdmVzLi4gCldvcnNlLCBDYWxsZW5kZXIncyBsYXdzdWl0IGNsYWltcyBQaXRjaGZvcmQgbGVmdCBhIFVTQiBkcml2ZSBhdCBhIFRleGFzIE1lZGlldmFsIFRpbWVzIHJlc3RhdXJhbnQgaW4gMjAxNCBjb250YWluaW5nIHNlbnNpdGl2ZSBHZWFyYm94IGNvcnBvcmF0ZSBtYXRlcmlhbHMgYW5kIGEgcGVyc29uYWwgY29sbGVjdGlvbiBvZiB1bmRlcmFnZSBwb3Jub2dyYXBoeS4gVGhlIHN1aXQgYWxzbyBhY2N1c2VzIGhpbSBvZiBzaXBob25pbmcgR2VhcmJveCBwcm9maXRzIHRvIGZ1bmQgc28gY2FsbGVkICJQZWFjb2NrIFBhcnRpZXMiIGF0IGhpcyBob21lLCB3aGVyZSBhZHVsdCBtZW4gd291bGQgYWxsZWdlZGx5IGV4cG9zZSB0aGVtc2VsdmVzIHRvIG1pbm9ycyB0byBQaXRjaGZvcmQncyBhbXVzZW1lbnQuLiAKV2hvIHdhcyBub21pbmF0ZWQgYnkgcGV0aXRpb24gdG8gaGF2ZSBoZXIgbmFtZSBvbiB0aGUgYmFsbG90LiAKV2lsc29uLiBDYXJzIGJvdWdodCBhbmQgc29sZC4gCkkgd2FzIGRvd24gdG8gMzAwIDM1MCBvZGQgY2hpcHMuIApJdCB3YXMganVzdCBhIHZvbWl0IG9mIGdyZWVuIGEgcGluay4gTXkgZ2lybGZyaWVuZCBoYXRlcyB0aGF0IGNvbG9yIGNvbWJvLCBhbmQgc2hlIGRvZXNuIHdvcmsgb3V0LiAKTm93IHRoZSBzaGlwIHNpbmtzIGRvd24gYW5kIHlvdSBnZXQgYSBiYXRoIGJlY2F1c2UgdGhlIHdhdGVyIHBvcHMgdXAgYW5kIGZsb29kcyB5b3UuIApKdXN0IGxpa2UgZm9vZCBjYW4gYmUgaW1wcm9wZXJseSBwcmVwYXJlZCBhbmQgY29udGFtaW5hdGVkLCB2YWNjaW5lcyBjYW4gYWxzbyBiZSBpbXByb3Blcmx5IHByZXBhcmVkLiBJdCBkb2VzbiBtZWFuIHRoYXQgdmFjY2luZXMgYXJlIGRhbmdlcm91cy4gCiJbSGF5bGV5XSBzZW50IG1lIGEgcGljdHVyZSBvZiBhbGwgb2YgdGhlbSBvdXQgb24gaGVyIGJlZCwnJyBMaXNhIHNhaWQuIApJIGFtIGEgZmFuLCB0aG91Z2guIApFYWNoIHZvbHVudGVlciB3YXMgYWxzbyBhc3Nlc3NlZCBmb3IgdGhlaXIgcmlzayBvZiBQVFNEIGFuZCBhc2tlZCBpZiB0aGV5IGhhZCBleHBlcmllbmNlZCBhbnkgcmVjZW50IHVwc2V0dGluZyBldmVudHMgc3VjaCBhcyBhIGRpdm9yY2UsIHRoZWlyIHRlbmRlbmN5IHRvIHdvcnJ5LCBob3cgbXVjaCBhbGNvaG9sIHRoZXkgZHJpbmsgYW5kIGhvdyBtdWNoIHRoZXkgc2xlZXAuCldoZW4gaSB3YXMgYSBraWQgaSByZW1lbWJlciBoYXJyeSBwb3R0ZXIgY29taW5nIG91dCBhbmQgbXkgcGFyZW50cyBtYWtpbmcgYSBodWdlIGRlYWwgb3V0IG9mIGl0IGJlaW5nIHdpdGNoY3JhZnQgc2F0YW5pYyBhbmQgZXZpbCBhbmQgaSB3YXMgYmFubmVkIGZyb20gcmVhZGluZyBpdC4gSSBuZXZlciByZWFsbHkgcXVlc3Rpb25lZCBpdCBhbmQgd2VudCBhbG1vc3QgdHdlbnR5IHllYXJzIHdpdGhvdXQgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgYm9va3Mgb3IgbW92aWVzLiAKQXQgZmlyc3QgSSBkaWRuIHVuZGVyc3RhbmQgdGhhdCBidXQgSW5kbyBub3csIGl0cyB0aGUgb25seSBhbnkgaGUgY2FuIGxlYXZlIHdvcmsgbWVudGFsbHksIGlmIGhlIGhhZCB3b3JrIGF0IGhvbWUgaGUgd291bGQgbmV2ZXIgc3RvcCB0aW5rZXJpbmcgYW5kIGdvIGNyYXp5LiBJIGNhbiBqdXN0IHNodXQgbXkgb2ZmaWNlIGRvb3IgYW5kIGJlIGRvbmUgd2l0aCBpdC4gVG8gZWFjaCB0aGVpciBvd24sIG5vdyBvYnZpb3VzbHkgaW0gdGFsa2luZyBhYm91dCBlZHVjYXRlZCBwcm9mZXNzaW9uYWxzIG5vdCB5b3VyIGJhc2ljIHJldGFpbCB3b3JrZXIuLiAKSU1PIHRoaW5raW5nIGFib3V0IHByZWZsb3AgaW4gdGVybXMgb2YgYmx1ZmYgYW5kIHZhbHVlLCBlc3BlY2lhbGx5IHdoZW4gMTAwYmIgYW5kIGRlZXBlciBpcyBmbGF3ZWQgKHBhcnRpY3VsYXJseSBpbiByaW5nIE5MSEUpLiBBbHRob3VnaCBJIHdpbGwgeWllbGQgdGhhdCBwb2xhcml6aW5nIG1ha2VzIHBvc3RmbG9wIG11Y2ggZWFzaWVyLiBUaGUgcmVhbGl0eSBpcyB5b3Ugc2hvdWxkIDNiZXQgcXVpdGUgYWdncmVzc2l2ZWx5LCBzcXVlZXplIGFnZ3Jlc3NpdmVseSwgYW5kIGRvIHNvIHdpdGggd2hhdCBpcyBrbm93biBhcyBhIGxpbmVhciByYW5nZSBhZ2FpbnN0IGxpa2UgcHJvYmFibHkgNzUlIG9mIHRoZSBmaWVsZC4gQWdhaW5zdCB0aGUgYmlnIG5pdHMsIHlvdSBjZXJ0YWlubHkgc2hvdWxkIDNiZXQgdGlnaHQuCkNoYXJsaWUgQnVja2V0IGlzIGFuIGltcG92ZXJpc2hlZCBsYWQgd2hvc2UgZm9ydHVuZXMgdHVybiB3aGVuIGhlIHVuY292ZXJzIG9uZSBvZiBmaXZlIGdvbGRlbiB0aWNrZXRzIGNvbmNlYWxlZCBpbiBXb25rYSBjaG9jb2xhdGUgYmFycywgYmVzdG93aW5nIGFjY2VzcyB0byB0aGUgZmFibGVkIFdvbmthIGdyb3VuZHMgd2hlcmUgY2hvY29sYXRlIHJpdmVycyBmbG93LCBlZGlibGUgZmxvd2VycyBncm93LCBhbmQgT29tcGEgTG9vbXBhcyBzZXJlbmFkZSBkZXBhcnRpbmcgZ3Vlc3RzIHdpdGggbWFjYWJyZSBtb3JhbGl0eSBzb25ncy4gU3VjaCBkZWxpZ2h0ZnVsIHdlaXJkbmVzcyBpcyBnaXZlbiBhbiBlbnRpcmVseSBuZXcgZGltZW5zaW9uIHZpYSB0aGUgaGVpZ2h0ZW5lZCBhdG1vc3BoZXJlIG9mIHRoZSBzdGFnZSBwcm9kdWN0aW9uLiAKVGhlIGNvdXJ0IHJlYXNvbmVkIHRoYXQgdGhlIEFEQSBkZWZpbmVzICJpbGxlZ2FsIGRydWcgdXNlIiBieSByZWZlcmVuY2UgdG8gZmVkZXJhbCByYXRoZXIgdGhhbiBzdGF0ZSBsYXcgYW5kIGluZGl2aWR1YWxzIHdobyB1c2VkIG1lZGljaW5hbCBtYXJpanVhbmEgdmlvbGF0ZWQgZmVkZXJhbCBsYXcsIHRodXMgZmFsbGluZyB3aXRoaW4gdGhlIEFEQSdzIGlsbGVnYWwgZHJ1ZyBleGNsdXNpb24uIApJIHdhcyB3aXRoIG15IGV4IGZvciAzIHllYXJzLCBzaGUgd2FzIG15IGZpcnN0IGFuZCBJIHdhcyBoZXIgZmlyc3QuIFdlJ3ZlIGxpdmVkIHRvZ2V0aGVyIGZvciBhYm91dCAyIHllYXJzIGFuZCByZWNlbnRseSBicm9rZSB1cCBpbiBGZWJydWFyeS4gClRpY2tldHMgZm9yIHRoZSAyMSBvdmVyIHNob3cgcmFuZ2UgZnJvbSAkODUgdG8gJDE1OS41MCBhbmQgYXJlIGF2YWlsYWJsZSBub3cgb24gVGlja2V0bWFzdGVyIGFuZCBhdCB0aGUgUm9ja3Npbm8gYm94IG9mZmljZS4gCklmIHlvdSBhcmUgZ29pbmcgdG8gd2F0Y2ggVHJvb3BlciBvciBCb3NraSwgdGhlbiB5b3UgYXJlbiBnb2luZyB0byBnZXQgbW9yZSBkZXRhaWxlZCBleHBsYW5hdGlvbnMgdGhhbiBzb21lb25lIGxpa2UgQnJhZCBPd2VuLiBFdmVuIHRoZW4sIHRoZWlyIGV4cGxhbmF0aW9ucyBtaWdodCBub3QgYmUgdG9vIGVkdWNhdGlvbmFsLCBidXQgZ2VuZXJhbGx5IHRoZSB2bG9nZ2VycyBhcmUgd2lubmluZyBwb2tlciBwbGF5ZXJzIGFuZCB0aGVyZSBhcmUgc29tZSB1c2VmdWwgbnVnZ2V0cyBvZiBpbmZvcm1hdGlvbi4gClNvbWUgc2VsbGVycyBoYXZlIHRoZWlyIG93biBjbG90aGVzIGZhY3RvcmllcywgcmVwIGNsb3RoZXMgaW4gS29yZWEgaXMgZXhwZW5zaXZlIGJlY2F1c2Ugb2YgaGlnaGVyIGxhYm9yIGNvc3QsIGJ1dCBiZXR0ZXIgcXVhbGl0eS4gRm9yIHdoYXQgaSBrbm93LCBrb3JlYW4gcmVwIGNsb3RoaW5nIHRhcmdldGVkIG1haW5seSBtZW4uTW9zdCBvZiBoYW5kYmFnIHJlcCBzZWxsZXJzIGxpdmUgaW4gQ2hpbmEsIHNvIHRoZXkgc2VuZCBpdCB0byBrb3JlYSBsaWtlIGFnZW50cy4gCldpbHNvbi4gClNvbWV0aW1lcyBBbWVyaWNhIGNvbWVzIHRvIHNjaG9vbCBoYXBweSwgc21pbGluZywgam9raW5nIGFyb3VuZCwgbWF5YmUgYWNlIGEgZmV3IHF1aXp6ZXMgb3IgaGVscCB3aW4gdGhlIGZvb3RiYWxsIGdhbWUuIApUaGVyZSBpcyBhIGdyb3VwIG9mIHZlcnkgaGlnaCBsZXZlbCBibGFjayBiZWx0cyAob25lIGNhbiBnbyB1cCB0byBhIDl0aCBkZWdyZWUpIHdobyB0cmF2ZWwgdGhlIGNvdW50cnkgaW4gUlZzIGdvaW5nIGZyb20gbWlsaXRhcnkgYmFzZSB0byBtaWxpdGFyeSBiYXNlIGRvaW5nIHRoaW5ncyBsaWtlIGJyZWFraW5nIHRocm91Z2ggY2VtZW50IGJsb2NrcyBhbmQgc2F5aW5nICJTZWUgdGhhdD8gVGhhdCB3YXMgdGhlIHBvd2VyIG9mIEplc3VzIENocmlzdC4gCkR1IGxpZWJzdCBQb2tlciB1bmQgd2lsbHN0IGRpZSBFaW5zdHplIGVpbiB3ZW5pZyBlcmhoZW4/IFZlcnN1Y2ggZXMgbWFsIG1pdCBkZXIgaGVpZW4gVmVyc2lvbiBmciBFcndhY2hzZW5lLCBiZWkgZGVyIGR1IGJ1Y2hzdGJsaWNoIGRlaW4gbGV0enRlcyBIZW1kIHZlcmxpZXJlbiBrYW5uc3QgICB1bmQgdmllbGxlaWNodCBzb2dhciBub2NoIG1laHIuIEJlaW0gU3RyaXAgUG9rZXIgc2V0emVuIGRpZSBTcGllbGVyIGRpZSBLbGVpZHVuZ3NzdGNrZSBkaWUgc2llIHRyYWdlbiB1bmQgZW5kZW4gb2Z0IGluIFVudGVyd3NjaGUgb2RlciBnbnpsaWNoIG5hY2t0LiAKQ2VpbGluZyBhbmQgdW5kZXIgY2FiaW5ldCBwb3QgbGlnaHRzIGVuc3VyZSB0aGUgc3BhY2UgaXMgd2VsbCBsaXQuIEhhd2sgcHVycG9zZWx5IGRpZG4gaW5jbHVkZSBwZW5kYW50cyBhYm92ZSB0aGUgaXNsYW5kLCBjaG9vc2luZyBpbnN0ZWFkIHRvIGRlc2lnbiBhIHNwYWNlIHdoZXJlIHRoZSBleWUgbmF0dXJhbGx5IGdvZXMgdG8gdGhlIGJhY2sgd2FsbCBvZiB0aGUga2l0Y2hlbiwgbWFraW5nIGl0IGZlZWwgbGFyZ2VyIGFuZCBtb3JlIG9wZW4uCkkgdGhpbmsgeW91IHRvdGFsbHkgbWlzc2VkIG15IGVhcmxpZXIgcG9zdCBJIHNhaWQgdGhhdCBKb0pvIElTIHRyZWF0ZWQgYXMgYSB3aGl0ZSB3b21hbiwgd2hpY2ggaXMgd2h5IEkgZG9uJ3Qgc2VlIGhlciBhcyBXb0MuIApUaGVpciBDdXZlZSBpcyBvbmUgZXhhbXBsZSBvdXQgb2YgYSBoYW5kZnVsIG9mIHRhc3R5IFBpbm90cywgYW5kIHRoZWlyIGZsYWdzaGlwIGJvdHRsZSBpcyBzdW1wdHVvdXMgYW5kIHdlbGwgaW50ZWdyYXRlZCwgc2hvd2luZyBhIGJlZ3VpbGluZyBjb21ibyBvZiByaXBlIGJlcnJ5IGFuZCBkcmllZCBoZXJiLi4gCk15IGxhbmd1YWdlIHNsdXJzIGEgbGl0dGxlIGJpdCwgYW5kIEkgbGVzcyBjbGVhciBpbiBteSBjb21tdW5pY2F0aW9uICAgbXVtYmxpbmcgbW9yZSBhbmQgd2l0aCBhIG11Y2ggc3Ryb25nZXIgZHJhd2wgdG8gaG93IEkgc3BlYWsuClNwcmF5IGNoYWxrIGRvZXNuJ3QgcmVhbGx5IHdhc2ggYXdheSBsaWtlIGl0J3Mgc3VwcG9zZWQgdG8uIApNeSB3aWZlIGFuZCBJIGhhdmUgaGVsZCBvZmYgb24gaGF2aW5nIGEgY2hpbGQgYmVjYXVzZSBvdXIgam9icyBoYXZlIHZlcnkgcG9vciBoZWFsdGggaW5zdXJhbmNlIGFuZCBpdCB3b3VsZCBiZSBhIG5pZ2h0bWFyZSAod2UgY3VycmVudGx5IGxpdmluZyBpbiBoZXIgcGFyZW50cyBiYXNlbWVudCkuIApIZSB3b3VsZCB0ZWxsIG1lIGhlIHdhc24gaGFwcHkgYnV0IEkgbmV2ZXIgYXNrZWQgb3IgcHJlc3N1cmVkIGhpbSB0byBsZWF2ZSBoZXIgc2luY2UgSSBrbmV3IEkgd291bGQgbmV2ZXIgZGF0ZSBoaW0gbm93LiBIZSBkZWNpZGVkIHRoYXQgaGUgd2FzIGdvaW5nIHRvIGdldCBzZXJpb3VzIHdpdGggaGVyIGFuZCB0ZWxscyBtZS4gClRocm93IHlvdXJzZWxmIG91dCB0aGVyZS4gR28gdG8gY29uZmVyZW5jZXMsIHNoYWtlIGhhbmRzLCBraXNzIGJhYmllcywgdGFsayB0byBwZW9wbGUsIGVtYWlsIHRoZW0sIGNvbGQgY2FsbCB0aGVtLiAKVGhlcmUgd2lsbCBiZSBwbGF5ZXJzIHdobyBjb21lIHRvIHRoZSB0YWJsZSByZWFsbHkgaHVuZ3J5IHRvIHdpbiBhbmQgdGhlc2UgcHJlZGF0b3JzIGxvb2sgZm9yIHRoZSB3ZWFrZXIgcGxheWVycy4gCkhpcyBmcmllbmQgam9pbnMgYW5kIHRoZXkganVzdCBrZXB0IGtpY2tpbmcgYW5kIHNsYXBwaW5nIGFuZCB0aGVuIGVzY2FsYXRlZCB0byBzcGl0dGluZyBvbiBtZS4gCkluIG9yZGVyIHRvIGJlIG9yZ2FuaXplZCBhbmQgaGF2ZSB0aGUgZ2FtZSBydW4gc21vb3RobHkgaXQgaXMgbmVjZXNzYXJ5IHRvIGxhYmVsIHRoZXNlIGNvbnRhaW5lcnMsIGFsc28ga25vd24gYXMgcG90cy4gSXQgaXMgcG9zc2libGUgdG8gcGxheSB0aGUgZ2FtZSB3aXRob3V0IHRoZXNlIGNvbnRhaW5lcnMgYnV0IGl0IGlzIG5vdCByZWNvbW1lbmRlZC4gCkEgbW9yZSByZWNlbnQgdGhlb3J5IGFib3V0IGhvdyBvdXIgYnJhaW4gZ2l2ZXMgdXMgdGhlIG91dHB1dCBvZiBwYWluIGlzIHRoZSBjb25jZXB0IG9mIGEgcGFpbiAgIHRoYXQgcGFpbiAoYm90aCBjaHJvbmljIGFuZCBhY3V0ZSkgaXMgYSByZXN1bHQgb2YgY2VydGFpbiBwYXR0ZXJucyBvZiBuZXVyYWwgYWN0aXZhdGlvbiAobmV1cm9zaWduYXR1cmVzKSB0aGF0IGNhbiBiZSBpbml0aWF0ZWQgYW5kIG1vZGlmaWVkIG5vdCBvbmx5IGJ5IHNlbnNvcnkgaW5wdXQsIGJ1dCBhbHNvIGJ5IGlucHV0IHN1Y2ggYXMgbW9vZCwgbWVtb3JpZXMsIGV0Yy4KVG91cyBsZXMgaG9tbWVzIG5haXNzZW50IGxpYnJlcyBldCBnYXV4IGVuIGRyb2l0LiBEZSBmYWl0LCBpbHMgcG9zc2RlbnQgKG91IGRldnJhaWVudCBwb3NzZGVyKSB0b3VzIGxhIHBlcnNvbm5hbGl0IGp1cmlkaXF1ZS4gTCdlc2NsYXZhZ2UgZXN0IHByb2hpYiBkYW5zIGxhIERjbGFyYXRpb24gVW5pdmVyc2VsbGUgZGVzIERyb2l0cyBkZSBsJ0hvbW1lIGRlIDE5NTAuClRoYXQgYXBwIGhhcyBtYW55IGZlYXR1cmVzLCBpbmNsdWRpbmcgbGV0dGluZyBwZW9wbGUgZG8gcm91dGluZSB0aGluZ3MgbGlrZSByZW5ld2luZyB0aGVpciBwYXNzcG9ydCBhbmQgZHJpdmVyJ3MgbGljZW5zZSwgcGF5aW5nIGZvciBwYXJraW5nIGZpbmVzLCBvciBhcHBseSBmb3IgYSB3aWRlIHJhbmdlIG9mIHBlcm1pdHMuIFRoZSBhcmVhIG9mIGRpc3B1dGUgaXMgdGhlIGZ1bmN0aW9uIHdoaWNoIGFsbG93cyBndWFyZGlhbnMgdG8gcHJldmVudCB0aGVpciBkZXBlbmRlbnRzIGZyb20gbGVhdmluZyB0aGUgY291bnRyeSB3aXRob3V0IHBlcm1pc3Npb24uIApQYXJ0aWNpcGFudHMgd2lsbCBsZWFybiBhYm91dCBjYXJkIGdhbWUgdHlwZXMsIGRlYWxpbmcsIHN1aXRzLCB3ZWFrZXIgdG8gc3Ryb25nZXIgY2FyZHMsIHRoZSBjb25jZXB0IG9mIHRydW1wIHN1aXRzLCBtYWtpbmcgdGhlIG1vc3Qgb2YgdGhlIGNhcmRzIGluIHlvdXIgaGFuZCBhbmQgbXVjaCwgbXVjaCBtb3JlLgpPdGhlciBBcnRpY2xlcyAgQXVndXN0IDIxLCAyMDA2CkxhIHNhY2hhbnQgZGlhYnRpcXVlIGV0IGxlIEQgUmlib3NlIHRhbnQgdW4gZ2x1Y2lkZSwgaidhaSBmYWl0IGRlcyByZWNoZXJjaGVzIGV0IHN1aXMgdG9tYiBzdXIgdW5lIHR1ZGUgaW5kaXF1YW50IHVuIGVmZmV0IGRlIGdseWNhdGlvbi5KJ2FpIGRvbmMgcXVlc3Rpb25uIEouIFZhbGVudGluICBjZSBwcm9wb3MuIApJIHdlbnQgdG8gbXkgbW9tJ3MgcGxhY2UgdG8gc2xlZXAsIGFuZCBnb3QgdG8gc2xlZXAgaW4gaGVyIGJlZHJvb20uIApBbmQgSSB3b3VsZG4gd2FudCB0aGF0IGVpdGhlciwgYnV0IGNlcnRhaW5seSwgdGhleSBkbyB3ZWxsIHRvIGdldCByaWQgb2YgdGhlIGd1eS4gCkJlc2lkZXMsIGhhdmluZyBhIGJhYnkgdG8gcmFpc2UgYW5kIGRvdGUgb24gd2FzIGFsd2F5cyBTZXJlbmEgZHJlYW0sIG5vdCBGcmVkLiAKVGhlcmUncyBhIGxvdCBvZiBmZWFyIG91dCB0aGVyZS4gCkhlcmUgdGhlIHRoaW5nLiBZb3VyIHRyZWF0aW5nIGNvbnNlcnZhdGl2ZXMgbGlrZSB0aGV5IGp1c3QgYXMgcmF0aW9uYWwgYXMgYSB0eXBpY2FsIGxpYmVyYWwuIFlvdSBhcmUgbWFraW5nIHRoZSBtaXN0YWtlIHRoYXQgdGhleSBhcmUgYWJvdXQgY29uc2lzdGFuY3kgYW5kIHZhbHVlcyBhbmQgaGF2ZSBpbnRlZ3JpdHkgYW5kIG1vcmFscy4KT25lIG9mIG15IGNvdXNpbnMgaXMgdGhlIGFic29sdXRlIG9wcG9zaXRlIG9mIG1lLCBhbmQgSSBoYXZlIGZlbHQgaXQgZm9yIHRoZSBtYWpvcml0eSBvZiBteSBsaWZlLiAKSGUgb25jZSBkZW5pZWQgZXZlciBwbGF5aW5nIGluIHRoZSBnYW1lLiBBIHJvZCB3YXMgYSBub3ZpY2UgcGxheWVyIGJ1dCB0aGVyZSdzIHNvbWV0aGluZyB0aGF0IGhhcHBlbnMgdG8gZ3Jvd24gbWVuLiBObyBtYXR0ZXIgaG93IHN1Y2Nlc3NmdWwgdGhleSBhcmUsIHdoZW4gYSBwcm9mZXNzaW9uYWwgYXRobGV0ZSBjb21lcyBpbnRvIHRoZSByb29tIGFuZCB0aGV5J3JlIHJlZHVjZWQgdG8ga2luZCBvZiBsaWtlLCB5b3Uga25vdyAgIFRlZW5hZ2UgZ2lybHM/IFllYWguIApPdSBiaWVuIHMnZXN0IGlsIGNhY2ggPyBBIHQgaWwgcGV1ciBkZSBub3VzID8gUydlc3QgaWwgZW1iYXJxdSA/IEEgdCBpbCBtaWdyID8gICBhaW5zaSBjcmlhaWVudCBldCByaWFpZW50IGlscyBwbGUgbWxlLiAKMiB0ZWFtcyBpbiBOWUMsIDIgaW4gTEEsIENoaWNhZ28sIEJvc3RvbiwgTWlhbWkgaW5jb21pbmc7IGltYWdpbmUgaWYgdGhleSBkZWNpZGVkIHRvIGxvc2UgbW9uZXkgZm9yIGEgd2hpbGUgYW5kIGhhdmUgTkJBL05GTC9NTEIgbGlrZSBwYXlyb2xscywgZ2V0dGluZyBhbGwgdGhlIGJlc3QgcGxheWVycyBpbiB0aGUgd29ybGQgdG8gZ28gdGhlcmUuIApBcyBmb3JtYXRzIGdyb3cgb2xkLCB0aGV5IHRlbmQgdG8gYmVjb21lIGluY3JlYXNpbmdseSBlZmZpY2llbnQsIHdoaWNoIGxlYWRzIHRvIG5hcnJvd2VyIGNob2ljZXMuIExlZ2FjeSBoYXMgZXNzZW50aWFsbHkgYmVlbiBib2lsZWQgaXRzZWxmIGRvd24gdG8gRGVsdmVyIHN0cmF0ZWdpZXMsIENoYWxpY2Ugc3RyYXRlZ2llcywgYW5kIERhcmsgRGVwdGhzIHN0cmF0ZWdpZXMuIFllcywgdGhlcmUgYXJlIHN0aWxsIHRvbnMgb2Ygb3RoZXIgZGVja3Mgb3V0IHRoZXJlIChEZWF0aCBhbmQgVGF4ZXMsIFN0b25lYmxhZGUsIFNuZWFrIGFuZCBTaG93LCBTdG9ybSwgTWlyYWNsZXMsIGV0Yy4pLCBidXQgeWVhciBhZnRlciB5ZWFyLCB0aGUgZm9ybWF0IGlzIGRlZmluZWQgYnkgYW4gaW5jcmVhc2luZ2x5IG5hcnJvd2VyIHNldCBvZiBjYXJkcy4gTm90IGFzIG5hcnJvdyBhcyBWaW50YWdlLCBidXQgaXQgY2VydGFpbmx5IGJlZW4gdHJlbmRpbmcgaW4gdGhhdCBkaXJlY3Rpb24gZm9yIHNvbWUgdGltZS4KRm9yIGV4YW1wbGUsIGltZ3VyIGxvc3NpbHkgY29tcHJlc3NlcyBpbWFnZXMgdGhhdCBhcmUgb3ZlciA1TUIgaW4gc2l6ZSAob3IgMU1CIGZvciBhbm9ueW1vdXMgdXBsb2FkcykuIApCb3VjaGFyZCwgZnJvbSBXZXN0bW91bnQsIFF1ZS4sIGFuZCBCZWd1IHNwZW50IG1vcmUgdGhhbiBhbiBob3VyIHBsYXlpbmcgYSBzZWNvbmQgc2V0IGxpdHRlcmVkIHdpdGggc2V2ZW4gYnJlYWtzIG9mIHNlcnZlLCB3aXRoIHRoZSBDYW5hZGlhbiBsb3NpbmcgYSAzIDEgbGVhZCBhbmQgZXZlbnR1YWxseSB0aGUgc2V0IG9uIGEgZG91YmxlIGZhdWx0LgpTZXZlbiBzdHVubmluZyAoc2VjcmV0KSBoaWRlYXdheXMKV0FTSElOR1RPTiAoQ05OKSAgIFNwZWNpYWwgY291bnNlbCBSb2JlcnQgTXVlbGxlciBoYXMgb2ZmZXJlZCB0byByZWR1Y2UgdGhlIG51bWJlciBvZiBvYnN0cnVjdGlvbiByZWxhdGVkIHF1ZXN0aW9ucyBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIHdvdWxkIGJlIGFza2VkIGJ5IGludmVzdGlnYXRvcnMsIHNvdXJjZXMgZmFtaWxpYXIgd2l0aCB0aGUgbmVnb3RpYXRpb25zIHRlbGwgQ05OLiBIb3dldmVyLCBNdWVsbGVyIHdhbnRzIG9ic3RydWN0aW9uIHRvIGJlIGFkZHJlc3NlZCBpbiBwZXJzb24sIG5vdCBqdXN0IGluIHdyaXR0ZW4gYW5zd2Vycy4KT3ZlcnZpZXcgZm9yIERyYWdvblRvb3RoR2FyZGVuCkl0IHdhcyBpbmV2aXRhYmxlIHRoYXQgVGFhayB3YXMgZ29pbmcgdG8gd2luIGV2ZW50dWFsbHksIGlmIG5vdCB0aGlzIHllYXIgMTAwJSBuZXh0IHllYXIuIFRoZXkgYXJlbid0IGdvaW5nIHRvIHNsb3cgZG93biB1bnRpbCB0aGV5IGdldCB0aGF0IHRpdGxlLiBJIGhhdmUgbm8gaWRlYSB3aGF0IGNvbWVzIG5leHQgZm9yIHRoZW0sIGFuZCBpZiBBdmNpIGV2ZXIgbGVhdmVzIHRoZW0gKGxpa2UgaWYgaGUgd2FudHMgdG8gY29hY2ggYSB0ZWFtIHdpdGggcmVhbCBmYW5zKSB0aGVuIEknZCBiZXQgdGhhdCBzcXVhZCBhbmQgdGhlIHN0eWxlIG9mIHBsYXkgY29sbGFwc2VzLgpDYWxsIGhpcyBtb20sIGFzayBoZXIgdG8gY29tZSBkb3duIGFuZCBtZWV0IHdpdGggeW91IChhbmQgeW91ciBvdGhlciBjb25jZXJuZWQgYnJvdGhlcnMvYWx1bW5pIGFkdmlzb3IpLiBUZWxsIGhlciB0aGF0IHlvdSBoYXZlIGhpcyBiZXN0IGludGVyZXN0cyBpbiBtaW5kLCBoaXMgc2FmZXR5LCBhbmQgdGhlIHNhZmV0eSBvZiBvdGhlcnMuIApUaGVyZSBhcmUgc2ltcGx5IG1vcmUgcnVubmVycyBhbmQgbW9yZSBvcmdhbml6ZWQgcmFjZXMgcmVsYXRpdmUgdG8gdGhlIHRvdGFsIHBvcHVsYXRpb24gbm93YWRheXMuIENvbXBldGl0aXZlIHJ1bm5lcnMgYXJlIHN0aWxsIGNvbXBldGl0aXZlLCBhbmQgaXQgbm90IGFsbCB0aGF0IGhhcmQgZm9yIHRoZW0gdG8gZmluZCB3aGF0IHRoZXkgbG9va2luZyBmb3IsIGJ1dCB0aGV5IGNhbiBleHBlY3QgZXZlcnkgbG9jYWwgZmFzdCBndXkgdG8gc2hvdyB1cCBhdCBldmVyeSBsb2NhbCA1ayB3aGVuIHRoZXJlIGFyZSBoYWxmIGEgZG96ZW4gcmFjZXMgd2l0aGluIGRyaXZpbmcgZGlzdGFuY2UgZXZlcnkgd2VlayBvZiB0aGUgeWVhci4gCg==|<---