--->|RnZyaWVyIDIwMTggOiBsZSBibG9nIGEgMTAgYW5zRXVoIG5vbiwgYydlc3QgdW5lIGJsYWd1ZSAhISEhIElsIHMnYWJzZW50ZSBkJ2ljaSBwb3VyIG1pZXV4IHJldmVuaXIgISBBbGxleiBkb25jIGZhaXJlIHVuIHRvdXIgc3VyTGEgY2lubWF0b2dyYXBoaWUgbW9kZXJuZSBzZSBjb25jZW50cmUgcmFyZW1lbnQgc3VyIGwnYXJ0IHJlbCBldCBuZSBwcmVuZCBwYXMgYmVhdWNvdXAgZCdpbnNwaXJhdGlvbiBkZSBkaWZmcmVudHMgZG9tYWluZXMgZGUgbCdhcnQuIEMnZXN0IHBvdXJxdW9pIG5vdXMgZGV2cmlvbnMgbm91cyBjb25jZW50cmVyIHN1ciBtb250cmVyIGF1eCBnZW5zIGRlIGwnYXJ0IHJlbCBldCBkZXMgZmlsbXMgcHJjaWV1eCwgcXVpIHNvbnQgZGUgdnJpdGFibGVzIGNoZWZzIGQndXZyZS4gQW5kcnplaiBXYWpkYSB0YWl0IHNhbnMgYXVjdW4gZG91dGUgbGUgbWF0cmUgZGFucyBzb24gZG9tYWluZSwgdHJzIG91dmVydCBkJ2VzcHJpdCBldCBjcmF0aWYuIE5vdHJlIHByb2pldCByYXBwcm9jaGVyYSBsZSBwdWJsaWMgZGUgbCdhcnRpc3RlLCBkZSBzZXMgaW5zcGlyYXRpb25zIGV0IGRlIHNlcyB1dnJlcy4gQWZpbiBkZSBsZSBwdWJsaWVyLCBub3VzIGFsbG9ucyBjb2xsZWN0ZXIgZGVzIGZvbmRzIHN1ciBkZXMgcGFnZXMgZGUgY3Jvd2RmdW5kaW5nIGV0IGVzcHJvbnMgcXVlIG5vdHJlIHByb2pldCBzZXJhIGJpZW50dCByYWxpcyBwb3VyIHVuIGxhcmdlIHB1YmxpYy4KQSBxdWljayBleGFtcGxlIG9mIGEgZ29vZCBzdHVkeSBwb2ludCBvbiB0aGUgc3ViamVjdCB3b3VsZCBiZSBTa2VldCBtZW50aW9uaW5nIHRoZSBzdHJlbmd0aCBvZiBkb25raW5nIGluIG11bHRpIHdheSBwb3RzLkkgZG9uIGNvbnNpZGVyIG15c2VsZiB0byBrbm93IGV2ZXJ5dGhpbmcgYWJvdXQgcG9rZXIgYXQgYWxsIGFuZCBJIGFwcHJlY2lhdGUgd2hlbiBvdGhlciBwbGF5ZXJzIHNoYXJlIHRoaW5ncywgeW91IG5ldmVyIGtub3cgd2hhdCB3aWxsIGhlbHAgeW91IGluIHRoZSBmdXR1cmUuSSB0aGluayB0aGUgY29uY2VwdCBoYXMgbGVncyBhbmQgSSB3YW50ZWQgdG8gaGVscCBzb21lb25lIHdobyB3YXMgdHJ5aW5nIHRvIGRvIHNvbWV0aGluZyBuZXcuIApIb3dldmVyLCB0aGVyZSBpcyBwbGVudHkgdG8gYmUgd2FyeSBvZiBiZWluZyBhIG1hbiBpbiB0aGlzIGRheSBpbiBhZ2UuIApQaWN0dXJlOiBNZXRybyBSdWxlIDM0IG9mIHRoZSBpbnRlcm5ldCBzYXlzIHRoYXQgaWYgeW91IGNhbiB0aGluayBvZiBpdCwgc29tZW9uZSBoYXMgYWxtb3N0IGNlcnRhaW5seSBhbHJlYWR5IG1hZGUgYSBkaXJ0eSBtb3ZpZSBvdXQgb2YgaXQuIApUaGUgcGFwZXIgc2hvdWxkIGhhdmUgY2hlY2tlZCB0aGVpciBmYWN0cyBiZWZvcmUgZ29pbmcgdG8gcHJlc3MuIEN1cnRpcyBCZW5oYXlvbiBvbmx5IHByYWN0aWNlcyBVdGVydXMgTWFzc2FnZSwgYW5kIHdoaWxlIFNlcmdlIHRlbGxzIGV2ZXJ5b25lIGhlIG9ubHkgcGVyZm9ybWVkIEJyZWFzdCBtYXNzYWdlIG9uIGhpcyBjYXB0aXZlIHBhcnRuZXIsIHdlIHNob3duIHRoZSBwaG90b2dyYXBoaWMgZXZpZGVuY2Ugb2YgaGlzIGhhbmRzIG9uIGNoZXN0cyBhbmQgYm90dG9tcywgYW5kIGhvdyBoZSBnb2VzIGZvciB0aGUgZ2VuaXRhbHMgb2Ygc2V4dWFsIGFidXNlIHZpY3RpbXMgYXMgd2VsbC4uIApTdW5kYXksIEJvdWxkZXJhZG8gSG90ZWwgTGljZW5zZSBOby4uIAoiSSBjYW4ndCBtYWtlIGFueSBsb25nIHRlcm0gY29tbWl0bWVudHMuICJEaXNjdXNzaW9ucyBhcmUgYmVpbmcgaGVsZCB3aXRoIHNvbWUgcGFydGllcywgYnV0IEkgY2FuJ3QgY29tbWVudCBhbnkgZnVydGhlciBhdCB0aGlzIHN0YWdlLiAiQXMgbXVjaCBhcyBldmVyeW9uZSBzYXlzICd3ZSBhcmVuJ3QgdHJhZGluZyB0b28gYmFkJywgaXQgZG9lc24ndCByZXNvbHZlIHdoZXJlIHdlIGFyZSBhdC4gCk15IHByZXZpb3VzIGNsdWIgd2FzIHRoZSBvcHBvc2l0ZSBvZiB0aGlzLiAKVGhhdCBkb2VzbiBtZWFuIHRoZXkgd2FudCBhbGwgZG9ncyBhbmQgY2F0cyB0byBkaWUgb2ZmLgpXaGlsZSB0aGUgbmF0dXJlIG9mIEt1bmRyYSBxdWVzdGlvbmluZyBpcyBub3QgeWV0IGNsZWFyLCBoZSBpcyBub3QgbmV3IHRvIGNvbnRyb3ZlcnNpZXMuIEt1bmRyYSB3YXMgcHJldmlvdXNseSBlbWJyb2lsZWQgaW4gYW4gSVBMIGJldHRpbmcgc2NhbmRhbCBhbmQgd2FzIGJhbm5lZCBmcm9tIGNyaWNrZXQgcmVsYXRlZCBhY3Rpdml0aWVzIGZvciBsaWZlLiAKQSBjZXR0ZSByZWxhdGlvbiB0b3hpcXVlICBkaXN0YW5jZSBldCBpbnZpc2libGUsIGwgcGV1dCBvcHBvc2VyIHVuZSBtYW5pZmVzdGF0aW9uIGFub3JtYWxlIGV0IGJpZW4gdmlzaWJsZSBxdWUgcG9ydGUgbGUgY2huZSBzdXIgcGx1c2lldXJzIGRlIHNlcyBwYXJ0aWVzOiBsYSBnYWxsZS4gCkVuZmluIGlsIGpldGEgIHRlcnJlIHNhIGxhbnRlcm5lLCBlbiBzb3J0ZSBxdSdlbGxlIHNlIGJyaXNhIGVuIG1vcmNlYXV4IGV0IHMndGVpZ25pdC4gIkplIHZpZW5zIHRyb3AgdHQsIGRpdCBpbCBhbG9ycywgbW9uIHRlbXBzIG4nZXN0IHBhcyBlbmNvcmUgYWNjb21wbGkuIENldCB2bmVtZW50IG5vcm1lIGVzdCBlbmNvcmUgZW4gcm91dGUsIGlsIG1hcmNoZSAgIGV0IG4nZXN0IHBhcyBlbmNvcmUgcGFydmVudSBqdXNxdScgbCdvcmVpbGxlIGRlcyBob21tZXMuIElsIGZhdXQgZHUgdGVtcHMgIGwnY2xhaXIgZXQgYXUgdG9ubmVycmUsIGlsIGZhdXQgZHUgdGVtcHMgIGxhIGx1bWlyZSBkZXMgYXN0cmVzLCBpbCBmYXV0IGR1IHRlbXBzIGF1eCBhY3Rpb25zLCBtbWUgbG9yc3F1J2VsbGVzIHNvbnQgYWNjb21wbGllcywgcG91ciB0cmUgdnVlcyBldCBlbnRlbmR1ZXMuIAoiQ29uY2VybmFudCBsZXMgaW5mcmFjdGlvbnMgZGNyaXRlcyBkYW5zIHZvdHJlIG1haWwgbGEgVmlsbGUgZGUgUGFyaXMgZXN0IGRwb3NpdGFpcmUgZGUgbGEgdm9pZSBwdWJsaXF1ZSBldCBmb3J0ZSBkZSBub21icmV1eCBhZ2VudHMgYXNzZXJtZW50cyBwb3VyIGNvbnN0YXRlciBsZXMgc291aWxsdXJlcyBldCBsZXMgcnByaW1lciwgbm90YW1tZW50IGluZHVzdHJpZWxsZXMuIElsIGNvbnZpZW50IGRvbmMgZGUgbGVzIHNhaXNpciBlbiBkaXJlY3QuCkhlIGNvdWxkIGJlIGEgdG90YWwgc2FpbnQgYW5kIHRoZSBleCBhIHRvdGFsIGJpdGNoIGJ1dCB3ZSB3b24ga25vdyB0aGF0IGlmIE9QIGRvZXNuIHNheSBpdC4uIApGYXRiYXdsICAxNSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQW5kcmV3IHdhcyBiZWluZyBhIG1hbmlhYywgYnV0IGhhcHBlbmVkIHRvIGFjdHVhbGx5IGhhdmUgQUF4eCBpbiB0aGlzIGhhbmQgYW5kIHRoZSBvdGhlciBndXkgaGFkIEtLeHggYW5kIHN1Y2tlZCBvdXQuVjogS2lkLCBJIG1hZGUgbW9yZSBtb25leSBpbiB0aGUgbGFzdCBob3VyIHBsYXlpbmcgd2l0aCB5b3UgdGhhbiB5b3UgbWFrZSBpbiBhIGZ1Y2tpbmcgeWVhci4gCklmIHlvdSB0YWxraW5nIGFib3V0IGFuYWwgc2V4LCB5b3UgbWF5IGJsZWVkIGV2ZXJ5IHRpbWUgaWYgeW91IG5vdCByZWxheGVkIGFuZCBkb24gdXNlIGx1YnJpY2FudC4gRm9sbG93IHRoZSBTdGVwcyB0byBHcmVhdCBGaXJzdCBUaW1lIEFuYWwgU2V4LiBSZWFkaW5nIG90aGVyIGFydGljbGVzIG9uIG15IGJsb2cgdG8gbGVhcm4gc29tZSB0ZWNobmlxdWVzIHRoYXQgeW91IGFuZCB5b3VyIGJveWZyaWVuZCBtaWdodCB0cnkgdG8gbWFrZSBpbnRlcmNvdXJzZSBtb3JlIHBsZWFzdXJhYmxlIGZvciB5b3UuLiAKVGhpcyBzaG91bGQgYmUgZml4ZWQuIFRoZXJlIGlzbiBhbnkgYmFsYW5jZSB0byBsZWdpdGltaXplIHRoZSB0YW5nZW50LiBUaGUgY3VydmUgc2hvdWxkIHJlbWFpbiBjb25zaXN0ZW50IHVudGlsIGl0IHRlcm1pbmF0ZXMgYXQgdGhlIGFzY2VuZGVyIGFuZCBkZXNjZW5kZXIgaW4gYSB3YXkgdGhhdCBrZWVwcyBuZWdhdGl2ZSBzcGFjZSAoaW4gdGhpcyBjYXNlLCAibWFyZ2lucyBiZXR3ZWVuIHRoZSBsaW5lcykgZXF1YWwuCldITyB3YXMgY29sbHVkaW5nPyBUSElTIHdhcyBhIGNvbnNwaXJhY3kgYW5kIGVudHJhcG1lbnQgMTAxLiBUaGUgUnVzc2lhbiB0cmFuc2xhdG9yIHdhcyBhbHNvIGFuIEZCSSBhc3NldCB3b3JraW5nIG91dCBvZiB0aGUgTmV3IFlvcmsgRkJJIG9mZmljZXMuIApUaGUgZmlsbSBoYXMgY3JlYXRlZCBzb21lIGNvbnRyb3ZlcnN5IGJlY2F1c2UgdGhlIGxlYWQgY2hhcmFjdGVycyBhcmUgd2hpdGUsIHdoaWxlIHRoZSBoZXJvIG9mIHRoZSBib29rIG9uIHdoaWNoIGl0IGlzIGJhc2VkLCBCZW4gTWV6cmljaCdzIEJyaW5naW5nIERvd24gdGhlIEhvdXNlLCB3YXMgQXNpYW4uIEJ1dCBCbG9jaCBzYXlzIHRoYXQgd2hpbGUgaGlzIHRlYW0gZGlkIGNhcGl0YWxpc2Ugb24gdGhlIHZpZXcgb2Ygc29tZSBjYXNpbm8gbWFuYWdlcnMgdGhhdCBBc2lhbnMgY2FuIGJlIGVycmF0aWMgZ2FtYmxlcnMgICBhIHBlcmZlY3QgY292ZXIgZm9yIHRoZSBCaWcgUGxheWVyICAgaGlzIHRlYW0gd2FzIG1haW5seSB3aGl0ZS4KV2hhdCAibWFpbiBnYW1lIiBtZWFucyBpcyB0aGUgZ2FtZSB0aGF0IGdldHMgcGxheWVycyBmcm9tIHRoZSAibXVzdCBtb3ZlIGdhbWUiLiAKTW9yZSBpbmZvcm1hdGlvbiBpcyByZXF1aXJlZCB0byBnaXZlIHVzZWZ1bCBhZHZpY2UuIApTbyBpZiB5b3UgZG8gdHJhdmVsIHRvIHRoZSBtb29uLCBpdCdsbCBkZXBlbmQgb24gd2hhdCB3ZSBkbyB3aXRoIHRoZSBtb29uLiBJZiBwZXJoYXBzIHdlIHN0YXJ0IG1pbmluZyBvbiB0aGUgbW9vbiwgdGhlbiB5b3UgbWlnaHQgaGF2ZSBzb21lIGpvYnMgdGhhdCBuZWVkIHRvIGdvIHRoZXJlIG91dHNpZGUgb2YgdmVyeSBzbWFsbCBhbW91bnQgb2Ygc2NpZW50aXN0cy4gKEVuZ2luZWVycyBwcm9iYWJseSwgc2luY2Ugd2UgbGlrZWx5IG5vdCBiZSB1c2luZyBodW1hbiBsYWJvcikuIApZIGdvdHRhIHN0b3Agd2l0aCB0aGlzIGJhYnkgYXNzIHJvdXRpbmUgdGhhdCBtZW4gZG9uIGdldCBzaGl0IGluIHRoaXMgd29ybGQuIApUaGUgZmlsbSBpcyBkaXJlY3RlZCBieSBTdXNhbm5hIFdoaXRlIChOYW5ueSBNY1BoZWUgUmV0dXJucywgT3VyIEtpbmQgb2YgVHJhaXRvciksIHdoaWNoIG1ha2VzIGl0IG9uZSBvZiBtb3JlIHRoYW4gMTAwIGZlYXR1cmVzIGFuZCBzaG9ydHMgZnJvbSBmZW1hbGUgZmlsbW1ha2VycyBhdCB0aGlzIHllYXIgZmVzdGl2YWwuLiAKWWVzLCBJIGNsZWFybHkgcG9zdGVkIHRoaXMgd2l0aCAidGVhcnMgcnVubmluZyBkb3duIG15IGZhY2UuIiBMaXN0ZW4gaGVyZSwgbGlmZSBoYXMgd29ya2VkIG91dCBmb3IgbWUgaGVyZSwgYmV0dGVyIHRoYW4gSSBjb3VsZCwgb3Igd291bGQgaGF2ZSBleHBlY3RlZC4gCkRhbmllbCBPY2gsJDMuNSBiaWxsaW9uLCBXaGFydG9uLiBDaGFpcm1hbi9DRU8gb2YgT2NoIFppZmYgQ2FwaXRhbCBNYW5hZ2VtZW50LCAib25lIG9mIHRoZSB3b3JsZCdzIGxhcmdlc3QgaGVkZ2UgZnVuZCBmaXJtcy4iMjQxLiAKQXNpYSdzIGdhbWJsaW5nIG1hcmtldCBnZW5lcmF0ZWQgbW9yZSB0aGFuICQxNDVibiBsYXN0IHllYXIKWW91ciBjb21tZW50IHJlZ2FyZGluZyBvdXIgc3RhZmYgYWJvdXQgd2VsY29taW5nIGFuZCB0cmVhdGluZyBub3QgYWxsIG91ciBndWVzdHMgZXF1YWwsIHdvbmRlcnMgdXMuIApBbmdldHJpZWJlbiBkdXJjaCBlcm5ldXRlIGFudGlqZGlzY2hlIEdld2FsdGFrdGUsIGluc2Jlc29uZGVyZSBkYXMgUG9ncm9tIHZvbiBLaWVsY2UgMTk0NiwgZGllIFdlaWdlcnVuZyBkZXMga29tbXVuaXN0aXNjaGVuIFJlZ2ltZXMsIGRhcyBqZGlzY2hlIEVpZ2VudHVtIGF1cyBkZXIgWmVpdCB2b3IgZGVtIEtyaWVnIHp1cmNrenVnZWJlbiwgdW5kIGRlbiBXdW5zY2gsIEdlbWVpbmRlbiwgZGllIHZvbSBIb2xvY2F1c3QgemVyc3RydCB3YXJlbiwgenUgdmVybGFzc2VuIHVuZCBlaW4gbmV1ZXMgTGViZW4gaW4gUGFsc3RpbmEgenUgYmVnaW5uZW4sIHZlcmxpZWVuIHp3aXNjaGVuIDE5NDUgdW5kIDE5NDggMTAwLjAwMCAxMjAuMDAwIEp1ZGVuIFBvbGVuLiAKV2hlcmUgb3RoZXIgbWFzcyBraWxsZXJzIGhhdmUgbGVmdCBiZWhpbmQgYSB0cmFpbCBvZiBwbGFpbiBzaWdodCBjbHVlcyB0aGF0IGhlbHAgaW52ZXN0aWdhdG9ycyBxdWlja2x5IHVuZGVyc3RhbmQgd2hhdCBkcm92ZSB0aGVtIHRvIHZpb2xlbmNlLCBQYWRkb2NrLCA2NCwgaGFkIG5lYXJseSBubyBjbG9zZSBmcmllbmRzLCBzb2NpYWwgbWVkaWEgcHJlc2VuY2Ugb3Igb3RoZXIgY2xlYXIgY29ubmVjdGlvbnMgdG8gdGhlIGJyb2FkZXIgd29ybGQuCihNb3JlIG9uIHRoYXQgYmVsb3cuKSBUaGUgbmV3ZXN0IHByb2dyYW0gaXMgY2FsbGVkIHRoZSAiQU5BIENlbnRlciBmb3IgQnJhbmQgUHVycG9zZSwiIHdoaWNoIExpb2RpY2Ugc2F5cyB3aWxsIGxhdW5jaCBuZXh0IG1vbnRoLiAKTWFrZSBzdXJlIHRoZWlyIHdlYnNpdGUgaGFzIFNTTCBlbmNyeXB0aW9uLiBBIHBhZGxvY2sgaWNvbiBvbiB0aGUgd2Vic2l0ZSBzaWduaWZpZXMgdGhlIFNTTCBlbmNyeXB0aW9uLgpVc3VhbGx5IGdyb3VwaW5nIHRoZSBzYW1lIHR5cGVzIG9mIHRoaW5ncyBpbnRvIG9uZSBkcmF3ZXIuIApXaGlsZSB0aGUganVkZ2UgaGFkIG5vIGRvdWJ0IHRoYXQgdGhlc2UgaXRlbXMgd2VyZSB1c2VkIGluIHRoZSBjb3Vyc2Ugb2YgaGlzIGVtcGxveW1lbnQsIHRoZSBqdWRnZSB3YXMgbm90IHNhdGlzZmllZCB0aGF0IHRoZSB0YXhwYXllciBoYWQgYSBjb250cmFjdHVhbCBvYmxpZ2F0aW9uIHRvIHBheSBmb3IgdGhlbS4gQWxzbywgY2xvdGhpbmcgb3IgZm9vdHdlYXIgYXJlIGdlbmVyYWxseSBjb25zaWRlcmVkIHVubGVzcyB0aGV5IGFyZSBqb2Igc3BlY2lmaWMuLiAKU1NKIEZyb2t1IHUKVGhlc2UgcmVhbGx5IGxheSBiYXJlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHRvcCAzIHRlYW1zIGFuZCB0aGUgcmVzdCwgc2luY2Ugb25seSB0aGUgdG9wIDYgc2NvcmVzIHBvaW50cy4KT3ZlcnZpZXcgZm9yIGxveHg0NDQ0CldobyBrbm93cywgYnV0IGluIHRlcm1zIG9mIGFuIGV4Y2VsbGVudCB3YXkgdG8gc3BlbmQgU3QuIApJbiB0aGUgTmV0aGVybGFuZHMgTGF5cyBhbm5vdW5jZWQgYW5vdGhlciBjb250ZXN0IHRvIGZpbmQgYSBuZXcgZmxhdm91ciBhbmQgcmVwbGFjZSAnUGF0YXRqZSBKb3BwaWUnLiAKV2Ugc29sZCAxLDMwMCBpbiBvdXIgZmlyc3Qgd2Vlay4gVGhleSBhcHBlYXJlZCBvbiB0aGUgRGVuLCBFblJJQ0hlZCBBY2FkZW15IGhhZCBzYWxlcyBvZiBhYm91dCAkMTUwLDAwMC4gVGhlIGdvYWwgd2FzIHRvIGJ1aWxkIGNyZWRpYmlsaXR5LiAKU28geW91IHRoaW5rIHlvdSd2ZSBnb3QgdGhlIGJlc3QgaGFuZC4gCkkgYWx3YXlzIGFza2VkIGhpbSB0byB0ZWxsIG1lIGlmIHRoYXQgZXZlciBjaGFuZ2VzIGJlY2F1c2UgSSBkb24gd2FudCB0byBrZWVwIGhpbSBpbiBhIG1hcnJpYWdlIHRoYXQgd2lsbCBsZWF2ZSBoaW0gdW5oYXBweSB3aXRob3V0IGtpZHMuIApJdCBpcyBhIGZhY3QgdGhhdCByZXB1YmxpY2FucyBoYXZlIGNvbnRyb2xsZWQgYSBob3VzZSBpbiB0aGUgQ2FsaWZvcm5pYSBTdGF0ZSBMZWdpc2xhdHVyZSBhcyByZWNlbnQgYXMgMTk5NSwgcmVnYXJkbGVzcyBvZiBzbGltIG9yIG5vdChUaGV5IGhhZCBhIG1lcmUgNTEgaW4gdGhlIFVTIHNlbmF0ZSBhbmQgd2Ugc2VlIGhvdyBwb3dlcmZ1bCB0aGF0IGlzKS4gClRoYXQgdGhpbmcgcHJvYmFibHkgY29zdCBEYXZpZCBhIHByZXR0eSBwZW5ueS4gV2h5IG5vdCBidXkgc29tZSBjYXJkcyBhbmQgcGxhc3RpYyBjaGlwcyBkb3duIGF0IHRoZSBsb2NhbCBEb2xsYXIgVHJlZT8iIFdlbGwsIG15IGZyaWVuZCwgSSBmZWVsIG15IGV5ZXMgZ2xhemUgb3ZlciB3aGVuIEkgaGVhciBhIGd1eSB0YWxraW5nIGFib3V0IHZpbnRhZ2UgYXV0b21vYmlsZXMsIHNvIEkgZmVlbCBmb3IgeW91LiBJJ20gbm90IG9uZSBvZiB0aG9zZSBtZW4gd2hvIGNhcmVzIGF0IGFsbCBhYm91dCBPbGQgQ2FyIFNob3dzLCBidXQgYSBsb3Qgb2YgbXkgZ3V5IGZyaWVuZHMgZG8uIApEZXBlbmRpbmcgb24gaG93IGxhcmdlIHlvdXIgY29sbGFnZSBpcywgeW91IG1heSBuZWVkIHRvIGNob29zZSBqdXN0IGEgZmV3IHBpY3R1cmVzLCBvciB5b3UgbWF5IG5lZWQgMTAgb3IgbW9yZS4uIApJIG9uY2UgaGFkIGEgU2t5ZSB0ZXJyaWVyMiB3aGljaCwgbGlrZSBhbGwgb2YgaGlzIGtpbmQsIHdhcyB2ZXJ5IGludGVsbGlnZW50LiBXaGVuIGluIGdvb2QgaHVtb3VyIGhlIGhhZCBzZXZlcmFsIHRyaWNrcywgd2hpY2ggSSBrbm93IHRvIGhhdmUgYmVlbiBzZWxmIHRhdWdodCwgYW5kIHRoZSBzb2xlIG9iamVjdCBvZiB3aGljaCB3YXMgZXZpZGVudGx5IHRvIGV4Y2l0ZSBsYXVnaHRlci4gRm9yIGluc3RhbmNlLCB3aGlsZSBseWluZyB1cG9uIG9uZSBzaWRlIGFuZCB2aW9sZW50bHkgZ3Jpbm5pbmcsIGhlIHdvdWxkIGhvbGQgb25lIGxlZyBpbiBoaXMgbW91dGguIFVuZGVyIHN1Y2ggY2lyY3Vtc3RhbmNlcyBub3RoaW5nIHBsZWFzZWQgaGltIG11Y2ggYXMgaGF2aW5nIGhpcyBqb2tlIGR1bHkgYXBwcmVjaWF0ZWQsIHdoaWxlIGlmIG5vIG5vdGljZSB3YXMgdGFrZW4gb2YgaGltIGhlIHdvdWxkIGJlY29tZSBzdWxreS4gT24gdGhlIG9pbGllciBoYW5kLCBub3RoaW5nIHRoYXQgY291bGQgaGFwcGVuIGRpc3BsZWFzZWQgaGltIHNvIG11Y2ggYXMgYmVpbmcgbGF1Z2hlZCBhdCB3aGVuIGhlIGRpZCBub3QgaW50ZW5kIHRvIGJlIHJpZGljdWxvdXMuCkFueXRoaW5nIHRoYXQgd291bGQgcmVmdXRlIHRoYXQgaXMgbm90IG5vdGhpbmcuIFRoZXJlZm9yZSBub3RoaW5nIGNhbm5vdCBleGlzdC4uIApMb2FkcyBvZiBiaWcgZnVsbCBmZWF0dXJlIHBob3RvcyBhcyB3ZWxsLiBUaGUgZmlsZSBlbmRlZCB1cCBiZWluZyBhcm91bmQgMyBtZWdzLiBXb3JrZWQgZmluZS4gClRoZXkgZmluZCBvdXQgeW91IHNtZWxsIGxpa2UgZHVuZ2JlZXRsZSBkb3duIHRoZXJlLCB5b3Ugb3V0LiBZb3UgY3VtIHRvIHF1aWNrbHksIHlvdSBkb25lLiAKVHdvIExhcyBWZWdhcyBtYXNzYWdlIHBhcmxvcnMgbGlua2VkIHRvIGFsbGVnZWQgcHJvc3RpdHV0aW9uIHJpbmcKSXQncyBhIHN0b3J5IHRoYXQgbWVuIGFuZCB3b21lbiBvZiBhbGwgYWdlcyBjYW4gcmVsYXRlIHRvLCBidXQgb3ZlcmFsbCwgSSB3YW50IGd1eXMgdG8gdGhpbmsgSSdtIGNvb2wsIiwgc2FpZCBLZW50byBvbiBoaXMgdXBjb21pbmcgcm9sZS5Db21pbmcgZnJvbSBhbiBhbGwgYm95cyBzY2hvb2wsIEtlbnRvIHRoaW5rcyB0aGF0IGhpcyBleHBlcmllbmNlIHRoZXJlIHdvdWxkIGhlbHAgaGltIHRvIGdldCBpbnRvIHRoZSByb2xlLiJJIHVuZGVyc3RhbmQgdGhlIGZlZWxpbmcgb2YgYWx3YXlzIHdhbnRpbmcgdG8gaGVscCBvdXQgYSBmcmllbmQgd2hlbiB0aGV5J3JlIGluIGEgY3JpdGljYWwgc2l0dWF0aW9uLiIgaGUgc2FpZC5BbHNvIG1ha2luZyBoaXMgdGVsZXZpc2lvbiBkZWJ1dCB3aXRoIHRoaXMgZHJhbWEgc2VyaWVzIGlzIGRpcmVjdG9yIElyaWUgWXUsIHdobyBwcmV2aW91c2x5IGRpcmVjdGVkIHRoZSBKYXBhbmVzZSBtb3ZpZSAiU1I6IFNhaXRhbWEgbm8gUmFwcGVyIi4iQ2xvdmVyIiByZXZvbHZlcyBhcm91bmQgSGF5YXRvLCB3aG8gcmV0dXJucyB0byBoaXMgaG9tZXRvd24gYWZ0ZXIgc2V2ZXJhbCB5ZWFycyBhbmQgcmV1bml0ZXMgd2l0aCBoaXMgdHdvIGZyaWVuZHMsIFRvbW9raSwgd2hvIHdpbGwgYmUgcGxheWVkIGJ5IE1pdXJhIFRha2FoaXJvOyBhbmQgS2VuamksIHdobyB3aWxsIGJlIHBsYXllZCBieSBTdXp1bm9zdWtlLiBUaGUgdGhyZWUgaGlnaCBzY2hvb2wgZGVsaW5xdWVudHMgZmluZCB0aGVtc2VsdmVzIGdldHRpbmcgaW50byB0cm91YmxlIGFuZCBmaWdodHMgYnV0IHRoZSBzdHJvbmcgZnJpZW5kc2hpcCBiZXR3ZWVuIHRoZSB0cmlvIGhlbHBzIHRoZW0gdG8gb3ZlcmNvbWUgdGhlc2Ugb2JzdGFjbGVzLk1lYW53aGlsZSBBcmltdXJhIEthc3VtaSB3b3VsZCBiZSB0YWtpbmcgdGhlIHJvbGUgYXMgSGF5YXRvJ3MgY2xhc3NtYXRlLCBBa2l5YW1hIFl1aS5UaGUgbWFuZ2EgaXMgY3VycmVudGx5IHNlcmlhbGlzZWQgaW4gV2Vla2x5IFNob25lbiBDaGFtcGlvbiBzaW5jZSAyMDA3IGFuZCBoYXMgc28gZmFyIHNvbGQgbW9yZSB0aGFuIDQuNSBtaWxsaW9uIGNvcGllcy4gCkFuZCB5ZWFoIGEgZmV3IGRydWdzIGNyaW1lcy4gCllvdSBiZSBzdXJwcmlzZWQgaG93IG1hbnkgZ3V5cyBoYXZlIG5vIGlkZWEgd2hhdCB0byBkby4gCkNob3NlIHRoZSBsYXN0IHBocmFzZSwgY2hvc2UgdGhlIDFzdCBjaG9zZSB0aGUgMm5kIGNob3NlIHRoZSBsYXN0IHBocmFzZSBuZXh0LiAKSGVyIHNpbmdsZSBnYWwgaW5ub3ZhdGlvbnMgYXJlIHF1aXRlIGFtdXNpbmcuIEkgbGlrZSB0aGUgdGhvbmcgcGFudGllcyBhcyBjYWxsaW5nIGNhcmRzLiBIb3dldmVyLCBJJ20gdGhpbmtpbmcgd2VhcmluZyBhYm91dCB0ZW4gcGFpcnMgYXQgb25jZSBjb3VsZCBpbXBhaXIgeW91ciBzZXh5IGNhdCB3YWxrLiAKSW5zdGVhZCwgVHJ1bXAgd2Fsa2VkIGJlaGluZCB0aGUgcG9kaXVtIGFuZCBiZWdhbiBzcGVha2luZyByaWdodCBhd2F5Li4gCkFuZCB0aGlzIG1lYW5zIHJldmlzaW5nLCByZWZpbmluZyBkZWxlZ2F0aW9uL3N1cGVydmlzaW9uIGRlY2lzaW9ucywgYnVkZ2V0cywgcHJvamVjdCBzY29wZXMsIGludmVzdG1lbnRzLCBsYXVuY2ggZGF0ZXMsIGFuZCBzbyBvbi4uIApOZXRhZG1uICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KRXhpdXNYYXZhcnVzIHUKRWRpdCAyOiBteSByYXBpc3QgbWFkZSB0aGUgbWlzdGFrZSBvZiByYXBpbmcgc29tZW9uZSB3aG9zZSBiZXN0IGZyaWVuZCAobm93IGh1c2JhbmQpIG1hZGUgYSBsaXZpbmcgaHVudGluZyB0ZXJyb3Jpc3RzIGFyb3VuZCB0aGUgd29ybGQuIEluIGEgd2F5LCBJIGZlZWwgYmFkIGZvciB0aGUgZ3V5LiBIZSdzIGNvbnN0YW50bHkgbG9va2luZyBvdmVyIGhpcyBzaG91bGRlciBub3cuCkl0IHdhcyB0aGUgc3RyYWlnaHQgdGlja2V0IGFuZCBDaXNzeSBuZXZlciBoaXJlZCB0aGVtLiAKU2hlIHNhaWQgImhlIGxvb2tzIGxpa2UgYSBjaGlsZCBvdXQgdGhlcmUsIGxpa2UgaGUgZG9lc24ga25vdyB3aGF0IHRvIGRvLiIgQ291bnRsZXNzIHR1cm5vdmVycyAoSSBIQVRFIHRoZSBqdW1waW5nIG5vIGxvb2sgcGFzcyBpbiB0aGUgcGFpbnQsIGl0IGFsd2F5cyBnZXRzIHN0b2xlbikgbnVtZXJvdXMgcHVsbCB1cCBqdW1wZXJzIHRoYXQgaGUgaGFzIG5vIGJ1c2luZXNzIG9mIHNob290aW5nLiBIZSBnb3QgcHVsbGVkIHRocmVlIG1pbnV0ZXMgaW50byB0aGUgdGhpcmQgcXVhcnRlciBmb3IgR3JheXNvbi4gCk11Y2ggbGlrZSBhIHBsYXN0aWMgcHJvdGVjdG9yIGNvdmVycyB0aGUgZW5kIG9mIHlvdXIgc2hvZWxhY2UsIHRlbG9tZXJlcyBrZWVwIGNocm9tb3NvbWUgZW5kcyBmcm9tIGZyYXlpbmcsIHdoaWNoIGtlZXBzIGFuIG9yZ2FuaXNtJ3MgZ2VuZXRpYyBpbmZvcm1hdGlvbiBpbnRhY3QuIFdpdGhvdXQgdGVsb21lcmVzLCBjZWxscyBjb3VsZCBub3QgZGl2aWRlIHdpdGhvdXQgbG9zaW5nIGdlbmVzLiAKIlRoZSBzb2Z0IG5ldyBnZW5lcmF0aW9uIG9mIFBDIHdhcnkgY29tZWRpYW5zIG5lZWQgdG8gZ3JvdyBzb21lIGJhbGxzIGFuZCBub3Qgd29ycnkgYWJvdXQgcGxlYXNpbmcgdGhlIGF1ZGllbmNlLCIgY29tZWRpYW4gQXVzdGVuIFRheXNodXMgdG9sZCBUaGUgRGFpbHkgVGVsZWdyYXBoLgpKZXBwZXNlbiBUZXJtaW5hbCBhbmQgZWFjaCBvZiB0aGUgY29uY291cnNlcyBoYXZlIGEgc2VsZWN0aW9uIG9mIHNob3BzIGFuZCByZXN0YXVyYW50cyB0byBzcGVuZCB5b3VyIHRpbWUgaW4gd2hpbGUgd2FpdGluZy4gClNhbWUgd2l0aCBSaXBsZXkgZnJvbSB0aGUgYWxpZW4gbW92aWVzLiAKSW4gdGhlIG1vZGVybiBlcmEsIHN0YXRlcyBsaWtlTmFnYWxhbmQgU2lra2ltIGhhdmUgaW1wbGVtZW50ZWQgc3BlY2lmaWMgb25saW5lIGdhbWluZyBsYXdzaW4gb3JkZXIgdG8gbWFrZSB0aGUgaW5kdXN0cnkgbGVnaXRpbWF0ZS4gClllc3RlcmRheSArIEJ5IEpvaG4gUGV0a292aWMsIFRoZSBQbGFpbiBEZWFsZXJSZXN1bHRzIG9mIENsZXZlbGFuZCdzIEJlc3QgQnJld2VyeSBjb250ZXN0IGFuZCBsaW5rczogV2hhdCB5b3UgbmVlZCB0byBrbm93IFJlc3VsdHMgb2YgQ2xldmVsYW5kJ3MgQmVzdCBCcmV3ZXJ5IGNvbnRlc3QgYW5kIGxpbmtzOiBXaGF0IHlvdSBuZWVkIHRvIGtub3cgU2VlIHJlc3VsdHMgb2YgQ2xldmVsYW5kJ3MgQmVzdCBCcmV3ZXJ5IGFuZCBndWlkZSB0byBhbGwgY29udGVudCByZWxhdGVkIHRvIHRoZSBjb250ZXN0LiAKRmFyIGZyb20gYmVpbmcgYSBuZWdhdGl2ZSwgdGhlIHdpZGUgYXJyYXkgb2YgdGhlc2UgaW52ZXN0bWVudHMgaXMgbmVlZGVkIGdpdmVuIHRoZSBpbmNyZWRpYmxlIGRpdmVyc2l0eSBvZiB0aGUgQW1lcmljYW4gZWNvbm9teS4uIApUaGUgZGlmZmVyZW5jZSBpbiBBbWVyaWNhbiBhbmQgU2NhbmRpbmF2aWFuIG51cnNpbmc/IEV2ZXJ5IGRheSB0aGUgbnVyc2VzIHdvdWxkIGNvbWUgaW4gYW5kIG9wZW4gYWxsIHRoZSB3aW5kb3dzIGFuZCBkb29ycywgcmVnYXJkbGVzcyBvZiB0ZW1wZXJhdHVyZSwgYW5kIGxldCBmcmVzaCBhaXIgYW5kIHN1bmxpZ2h0IGluLiBUaGUgVVYgc3VubGlnaHQgYW5kIGZyZXNoIGFpciBoZWxwZWQgcGF0aWVudHMgcmVjb3ZlciBhbmQgaW1wcm92ZWQgSEFJIHJhdGVzLiAKVGhhdCB3aGF0IGl0IGlzIGF0IHRoZSBmb3JlZnJvbnQuIFlvdSBkb24gc291bmQgbGlrZSB5b3Ugd2FudCB0byBwbGF5IHRoZSBiZXN0IHZlcnNpb24gb2YgdGhhdCBnYW1lIGFzIGl0IGNyZWF0ZWQuIApQZW9wbGUgaGF2ZSBoYWQgbWVkcyB0YWtlbiBmcm9tIHRoZWlyIGJhZ3MuIFVTQidzIGFyZSBjYW1vdWZsYWdlZCBhIHRob3VzYW5kIHdheXMgdG8gdGh3YXJ0IHRoaWV2ZXMuIEl0J3MgZW5kbGVzcy4gClNvbWUgb2YgdGhvc2UgY29tbWVudHMgYXJlIHRydWx5IGlnbm9yYW50IGFuZCBvdXRyYWdlb3VzLi4gCldpbGwgYmUgY29taW5nIGluIGFuZCBjb29raW5nIHVwIGhpcyBjbGFzc2ljIHNwYWdoZXR0aSBkaW5uZXIgd2l0aCBhIGhvdXNlIHNhbGFkLCBnYXJsaWMgYnJlYWQgYW5kIGEgZ2xhc3Mgb2YgQ2hpYW50aSBhbGwgZm9yICQxNC45NSwgTWFjZXkgc2FpZC4gIHJlYWxseSBob3BlIHRoaXMgY2F0Y2hlcyBvbiBhbmQgaWYgaXQgc3VjY2Vzc2Z1bCBoZSBvcGVuIHRvIGV4cGFuZGluZyBhbmQgb2ZmZXJpbmcgbW9yZSBkaXNoZXMuIApXaGVuIHRoYXQgaGFwcGVucywgdGhlIGFybSB3aWxsIGJlIGFsbG93ZWQgdG8gc28gdGhlIGluc3RydW1lbnRzIGNhbiBrZWVwIG1vbml0b3JpbmcuLiAKVGhpcyB0d28gcGFydHkgbWVudGFsaXR5IGlzIHRoZSBjYW5jZXIgdGhhdCBpcyBraWxsaW5nIG91ciBkZW1vY3JhY3kuIE5laXRoZXIgdGhlIGRlbW9jcmF0cyBub3IgdGhlIHJlcHVibGljYW5zIGdpdmUgYSBzaGl0IGFib3V0IG15IHJpZ2h0cywgMmEgaW5jbHVkZWQuIEkgYW0gbmV2ZXIgdm90aW5nIGZvciBhbnkgb2YgdGhvc2UgamFja2Fzc2VzLCBwYXJ0eSBiZSBkYW1tbmVkLgpPa2F5IHdpdGggdGhlIGFydGljbGUgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHZpdGFtaW4gRCBhbmQgYXV0aXNtIEFwcmlsIDI2LCAyMDEyIEpvaG4gQ2FubmVsbCwgTUQKQmVmb3JlIHRoZXkgY2xvc2VkIHRoZWlyIGRvb3JzLCB0aGUgYWRkZWQgYW4gb3V0ZG9vciBheGUgdGhyb3dpbmcgc2V0dXAgaW4gdGhlIHBhcmtpbmcgbG90LCB3aGljaCBzZWVtZWQgbGlrZSBhIHJlYWxseSBkYW5nZXJvdXMgaWRlYSAoZHJpbmtpbmcgYW5kIGF4ZSB0aHJvd2luZyBpbiB0aGUgZGFyaz8pLiBUaGUgZW50aXJlIGJ1c2luZXNzIHdhcyBzbyBxdWVzdGlvbmFibGUgICBmcm9tIHRoZSBuYW1lLCB0byB0aGUgc2tldGNoeSBzcHJheSBwYWludGVkIHNpZ24sIHRvIHRoZSB0aGVtZSAodGhpbmsgICBvbGQgdGhhaSByZXN0YXVyYW50IG1lZXRzIGR1bmdlb25zIGFuZCBkcmFnb25zLCBidXQgd2l0aCBhbiBlc3ByZXNzbyBiYXIsIGF4ZSB0aHJvd2luZywgYW5kIGFuIG9mZiBsZWFzaCBkb2cgZGVjaykgdGhhdCBteSBTTyBhbmQgSSBoYWQgYSB0aGVvcnkgdGhhdCBzb21lIGd1eSB3aW4gdGhlIGxvdHRlcnkgYW5kIGp1c3QgZGVjaWRlZCB0byBzYXkgImZ1Y2sgaXQsIEkgYWx3YXlzIHdhbnRlZCB0byBvcGVuIGEgYmFyLCBsZXQganVzdCBzZWUgd2hhdCBoYXBwZW5zIi4gTm93IGl0IHNvdW5kcyBsaWtlIHNvbWVvbmUgc3BlbnQgYSBidW5jaCBvZiBtb25leSBoZSBkaWRuIGhhdmUgdG8gbWFrZSB0aGF0IHNoaXQgc2hvdyBldmVyeXRoaW5nIGl0IHR1cm5lZCBvdXQgdG8gYmUuIApNb3N0IGN5Y2xpc3RzIGFsc28gc3VmZmVyIGZyb20gdGlnaHQgaGFtc3RyaW5ncyBhcyB3ZWxsLCBzbyBoYXZlIHRoYXQgd29ya2VkIG9uIGFzIHdlbGwuIFN0cmV0Y2hpbmcgaXMgZ3JlYXQgbG9uZyB0ZXJtLCBidXQgdG8gZWFzZSB0aGluZ3Mgb2ZmIG5vdywgdHJ5IGEgY291cGxlIG9mIG1hc3NhZ2UgdHJlYXRtZW50cy4uIApJIHVzZWQgdG8gcGxheSBhIGxvdCBvZiB3cmFpdGggSSB1c2VkIGl0IHRvIGhlbHAgInNuZWFrIiBteSBlbmVtaWVzIGFjcm9zcyBvcGVuIGFyZWFzLiBJZiB3ZSB3ZXJlIHdvcnJpZWQgYWJvdXQgcGVvcGxlIHRyeWluZyB0byBzaG9vdCB1cywgSSB3b3VsZCBzZXQgdXAgdGhlIHBvcnRhbCwgcnVuIHRvIGEgYnVpbGRpbmcgb3IgYW5vdGhlciBzYWZlIHNwb3QsIGFuZCBwdXQgdGhlIHBvcnRhbCBkb3duIHRvIGhlbHAgdGhlIHJlc3Qgb2YgbXkgc3F1YWQgZ2V0IGludG8gYSBiZXR0ZXIgcG9zaXRpb24gd2l0aG91dCBwdXR0aW5nIHRoZW0gaW4gZGFuZ2VyLiAKR29Ib21lQ2FsaWZvcm5pYSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpFeGN1c2UgbXkgcmlkaWN1bG91c2x5IHNvbWJlciBhdHRpdHVkZSAoYW5kIGNsb3RoZXMpLCBidXQgdGhhdCBzZWVtcyBsaWtlIHRoZSBzYW1lIHNvcnQgb2YgbWFnaWNhbCB0aGlua2luZyB0aGF0IGdhdGhlcnMgc28gbWFueSBwZW9wbGUgaW4gVmVnYXMgdG8gdHJ5IHRoZWlyIGx1Y2sgYXQgc2xvdCBtYWNoaW5lcyBhbmQgcG9rZXIuIEluIG90aGVyIHdvcmRzLCBhbiBlY29ub21pYyByZWNvdmVyeSBpcyBhIG1hZ2ljYWwgaWRlYSwgYmFzZWQgb24gdGhlIGFzc3VtcHRpb24gdGhhdCBldmVuIHdpdGhvdXQgZml4aW5nIGV2ZXJ5dGhpbmcgdGhhdCB3ZW50IHdyb25nIHdpdGggb3VyIGVjb25vbXkgaW4gdGhlIHBhc3QgMzAgeWVhcnMsIHdlIGNhbiBzdGlsbCBzb21laG93IHdpbiB0aGlzIHRoaW5nLiAKTGluY2g6IFNvIHRoYXQncyByZWFsbHkgaW50ZXJlc3RpbmcgdGhhdCBhbiBvcmdhbml6YXRpb24gdmVyeSBzdHJvbmdseSBhbGlnbmVkIHdpdGggRWZmZWN0aXZlIEFsdHJ1aXNtIHByaW5jaXBsZXMgaXMgZnVuZHJhaXNpbmcgZm9yIGNoYXJpdGllcyB0aGF0IGhhdmUgcmVsYXRpdmVseSBsaXR0bGUgZXZpZGVudGlhbCBiYWNraW5nLiBXaGVuIEkgdGFsa2VkIHdpdGggU2VhbiBDb25sZXkgZnJvbSBHaXZlV2VsbCwgaGUgc2FpZCB0aGF0IEdpdmVXZWxsJ3MgdG9wIHJlY29tbWVuZGF0aW9ucyBhcmUgInRoZSBiZXN0IGdpdmluZyBvcHBvcnR1bml0aWVzIHdlJ3JlIGF3YXJlIG9mLiIgVGhpcyBpc24ndCB0byBzYXkgdGhhdCB0aG9zZSBhcmUgbGl0ZXJhbGx5IHRoZSBiZXN0IGNoYXJpdGllcywgb2YgY291cnNlLiBCdXQgdGhvc2Ugc2VlbSB0byBiZSB0aGUgbW9zdCBsaWtlbHkgdG8gYmUgdGhlIGJlc3QgY2hhcml0aWVzIGluIGV4cGVjdGF0aW9uLCBnaXZlbiB0aGUgaW5mb3JtYXRpb24gdGhhdCBHaXZlV2VsbCAgb25lIG9mIHRoZSBiZXN0IGNoYXJpdHkgZXZhbHVhdG9ycyBpbiB0aGUgd29ybGQgICBpcyBhd2FyZSBvZi4gCkhvd2V2ZXIsIHRoZSByZXR1cm4gb2YgUm9yeSBTbG9hbmUgYW5kIHRoZSBmb3J3YXJkIGxpbmUgbG9va2luZyBtb3JlIHNldHRsZWQgd2l0aCBUb20gTHluY2ggYW5kIEpvc2ggSmVua2lucyBmaXJpbmcgaXMgc2hvd2luZyBzaGFkZXMgb2YgMjAxNy4gClRoZSBmb3VydGggdGhpbmcgeW91IG5lZWQgdG8gZG8gaXMgdGFrZSBvdXQgeW91ciBuYXR1cmFsIGJyaXN0bGUgYnJ1c2ggYW5kIGRpcCBpdCBpbnRvIHRoZSBwYXJhZmZpbiB3YXguIEFwcGx5IGl0IHdpdGggdGhlIGJydXNoIHRvIHRoZSBmYWNlIG9mIHRoZSBwZXJzb24gcmVjZWl2aW5nIHRoZSBmYWNpYWwuIApTaGUgc2FpZCBzaGUgYWxzbyBleGFtaW5lZCBCb25kIHVuZGVycGFudHMsIFJpcGN1cmwgc2hvcnRzIGFuZCBhIGJlbHQgbG9jYXRlZCBpbiBDb29jaGluIENyZWVrIGluIDIwMTEuClRoZSBnb3Zlcm5tZW50IGhhcyBpbmRpY2F0ZWQgaXQgZG9lc24gcGxhbiB0byBnZXQgaW52b2x2ZWQuIEluIGFuIGVtYWlsLCBHbG9iYWwgQWZmYWlycyBDYW5hZGEgc3Bva2VzbWFuIEF1c3RpbiBKZWFuIHNhaWQgdGhlIGdvdmVybm1lbnQgaXMgZm9sbG93aW5nIHRoZSBjYXNlIGNsb3NlbHksIGJ1dCBhZGRlZDogZGlzcHV0ZSBpcyBhIHByaXZhdGUgbWF0dGVyIGJldHdlZW4gYW4gaW52ZXN0b3IgYW5kIHRoZSBNZXhpY2FuIGdvdmVybm1lbnQuIHRoZSBoZWFkIG9mIFRvcm9udG8gYmFzZWQgUHJpbWVybyBNaW5pbmcgQ29ycC5jb21wYW55IGZlZWxzLCBhbmQgdGhlIGJ1c2luZXNzIGNvbW11bml0eSBpbiBnZW5lcmFsIGZlZWxzLCAodGhlIExpYmVyYWwgZ292ZXJubWVudCkgc2hvdWxkIGJyaW5nIHRoZSBpc3N1ZSB0byBNZXhpY28gYXMgYSByZWFsIGlzc3VlLCBQcmltZXJvIGNoaWVmIGV4ZWN1dGl2ZSBFcm5lc3QgTWFzdCBzYWlkIGluIGFuIGludGVydmlldyBXZWRuZXNkYXkuIApUaGF0IGRhZCBpcyBsb2NrZWQgdXAgSSB3b3VsZCB3YWxrIG92ZXIgdG8gSXJlbGFuZCB3aXRob3V0IGEgY2FyZSBpbiB0aGUgd29ybGQuIApUaGV5J3JlIGhhbmQgc3RpdGNoZWQgbW9jY2FzaW4gY29uc3RydWN0aW9uIGFuZCBhbGwgb2YgdGhlIHN0aXRjaGluZyBpcyBpbXBlY2NhYmxlLiAKTWFyaW1iYWd1eTcxNSAgMzkgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpUaGV5IGJyaW5nIG1lIGJhY2sgdG8gYSBwZXJzb25hbCAiZ29vZCBvbGQgZGF5cyIgd2hlcmUgSSB3YXMgaW4gYSBjb21tdW5pdHkgb2Ygc21hbGwgdGltZSBwZW9wbGUsIG1ha2luZyBzbWFsbCBleHBlcmltZW50YWwgZ2FtZXMuIApTaHVmZmxlIHRoZSBkZWNrLiBTaHVmZmxpbmcgcmFuZG9taXplcyB0aGUgZGVjayBpbiBvcmRlciB0byBpbnRyb2R1Y2UgY2hhbmNlIHRvIHRoZSBnYW1lLiBOb3Qgc2h1ZmZsaW5nIHRoZSBjYXJkcyBjb3VsZCBhbGxvdyBzb21lIHBsYXllcnMgdG8gcHJlZGljdCB0aGUgY2FyZHMgdGhhdCB3aWxsIGNvbWUgdXAgbGF0ZXIsIHdoaWNoIHdvdWxkIGdpdmUgdGhlc2UgcGxheWVycyBhbiB1bmZhaXIgYWR2YW50YWdlLiBUaGVyZSBhcmUgZGlmZmVyZW50IHdheXMgdG8gc2h1ZmZsZSwgYnV0IGEgcG9rZXIgc2h1ZmZsZSB3aWxsIHR5cGljYWxseSBjb25zaXN0IG9mIHR3byByaWZmbGVzLCBhIGJveCwgYW5vdGhlciByaWZmbGUsIGFuZCBhIGN1dC5bMV0KWm9lIGlzIGEgcGVyZmVjdCBleGFtcGxlIG1hc3NpdmVseSBoYXRlZCxidXQgbm90IGJhbm5lZCBiZWNhdXNlIHRoZXJlIGlzIG5vIGNpcmNsZSBqZXJrIGFyb3VuZCBiYW5uaW5nIGhlciBpbiBjaGFtcCBzZWxlY3QuIApQaGlsZWFzRnVja2luZ0ZvZ2cgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KV2hlbiBTaG91bGQgWW91IFRyaW0gWW91ciBUcmVlcyBhbmQgU2hydWJzCkVyZmFocnVuZ2VuIHVuZCB3ZWlzaGVpdGVuLCBtYW5jaGUgdm9sbGVyIGZyZXVkZSB1bmQgbWFuY2hlIGluIHRpZWZlbSBzY2htZXJ6IGdlc2FtbWVsdC4gd2Vpc2hlaXRlbiB1bmQgd2VnZSwgZGVuZW4gaWNoIGlubmVuIG9kZXIgYXVlbiBiZWdlZ25ldCBiaW4gdW5kIGRpZSBtaWNoIGJlZ2xlaXRldCBoYWJlbiwgZGFzIHp1IHNlaW4sIHdhcyBpY2ggbnVuIGJpbiAgIGRhcyB2ZXIgcmNrdGUgd2lsZGUgd2VpYiAgIGRhcyB2ZXJzcGllbHRlIGtpbmQgICBkaWUgcmVpZmUgZnJhdSAgIGRlciBtZW5zY2ggYXVmIGVyZGVuLiBlbmRsaWNoIGFuZ2Vrb21tZW4gdW5kIGRpZXNlcyBwb3RlbnRpYWwgaXN0IGluIHVucyBhbGxlbiwKSSB3aXNoIHRoYXQgc2NpZW5jZSBoYWQgYSBiZXR0ZXIgd2F5IG9mIGV4cGxhaW5pbmcgZm9yIGNsaWVudHMgaW4gc2ltcGxlciB0ZXJtcyBleGFjdGx5IHdoYXQgY3Jhbmlvc2FjcmFsIGZsdWlkIGNhbiBkbyB0byB0aGUgZW50aXJlIGJvZHkgYXMgYSB3aG9sZS4gVGhhdCB0aGUgaGVhbGluZyBwcm9jZXNzIGlzIGV4dGVuc2l2ZSBidXQgaWYgeW91J3JlIHBhdGllbnQgeW91IGNhbiBzZWUgZ3JlYXQgYmVuZWZpdHMuIEkgdG9vayBDU1QgMSBiZWNhdXNlIEkgd29yayBpbiBhIGNoaXJvcHJhY3RpYyBvZmZpY2UgYW5kIG1vc3Qgb2YgdGhlaXIgcGF0aWVudHMgYXJlIG15IGNsaWVudHMgIEkgdGhvdWdodCBpdCB3YXMgdGhlIHBlcmZlY3QgZml0LiBUaGUgb25seSBwcm9ibGVtIGlzIG5vIG9uZSBoYXMgdGhlIHBhdGllbmNlIGFueW1vcmUgaW4gYSBkYXkgaW4gYWdlIHdoZXJlIHdlIGhhdmUgaW5zdGFudCBncmF0aWZpY2F0aW9uIG92ZXIgc2ltdWx0YW5lb3VzIHBsYXRmb3JtcyB0byBzaXQgc3RpbGwgYW5kIG5vdCBmZWVsIGFueSBwaHlzaWNhbCBvdXR3YXJkIG1vdmVtZW50IHJpZ2h0IGF3YXkuIEl0J3MgYWxsIGluc2lkZSB0aGUgRHVyYWwgdHViZSBhbmQgdGhlIGVmZmVjdHMgYXJlbid0IGluc3RhbnQgYW5kIHRoYXQgZnJ1c3RyYXRlcyA5OSUgb2YgdGhlIGNsaWVudHMgSSBkZWFsIHdpdGguCkhvdyB0byBCcnVzaCBZb3VyIFRlZXRoQnJ1c2hpbmcgeW91ciB0ZWV0aCBpcyBpbXBvcnRhbnQgdG8gcmVtb3ZlIHN0cmF5IGZvb2QgcGFydGljbGVzLCBtYXNzYWdlIHRoZSBndW1zLCBlbGltaW5hdGUgcGxhcXVlLCBhbmQgZnJlc2hlbiBicmVhdGguIEl0IGFsc28gaGVscHMgdG8gZGVmZW5kIGFnYWluc3QgY2F2aXRpZXMgYW5kIHBlcmlvZG9udGFsIGRpc2Vhc2UuIApMYXZlIHN0cmVhbXMgZG8gdG9vIG11Y2ggZGFtYWdlL2FyZSB0b28gaGFyZCB0byBhdm9pZCBpbiBteSBvcGluaW9uLiBUaGV5IGdpdmUgYSBodWdlIHN0cmF0ZWdpYyBhZHZhbnRhZ2UgYnkgbWFraW5nIHRlcnJhaW4gYmFzaWNhbGx5IGltcGFzc2FibGUgZm9yIGVuZW15IGZvcmNlcy4KQ3VyaW91cyBmb3IgdGhvdWdodHMuLiAKIkl0IGxldHMgeW91IGtub3cgd2hlcmUgeW91J3JlIGhlYWRlZCwgYW5kIGhvdyBtYW55IGVwaXNvZGVzIHlvdSBoYXZlIHRvIGdldCB0aGVyZSBhbmQgb2Z0ZW4gZ2l2ZXMgeW91IGEgYnJlYWsgaW4gdGhlIG1pZGRsZSBmb3Igd3JpdGluZyBvciBqdXN0IGZvciBwcmVwYXJpbmcgZm9yIHRoZSBzY2FsZSBvZiB0aGUgY2xvc2luZyBlcGlzb2Rlcy4gU29tZXRpbWVzIHRoYXQgcmVzdWx0cyBpbiB0aGUgZmlyc3Qgc2Vhc29ucyBpbiB0aGVzZSBydW5zIGJlaW5nIG1vcmUgYWJvdXQgc3RhZ2luZyBzbyB0aGF0IHRoZSBwaWVjZXMgYXJlIGluIHBsYWNlIGZvciBhIGJpZyBjbGltYXgsIGFzIGhhcHBlbmVkIHdpdGggdGhlIHR3byBoYWx2ZXMgb2YgdGhlICdCcmVha2luZyBCYWQnIGZpbmFsIHNlYXNvbi4iLiAKSW4gcmVjZW50IG1vbnRocyB0aGUgTWVyY3VyeSBoYXMgcmVwb3J0ZWQgY2xvc3VyZSBvZiBQb3J0IEtlbWJsYSBSU0wgQ2x1YiwgYSBiaWQgYnkgSmFtYmVyb28gQm93bHMgQ2x1YiB0byBzZWxsIG9mZiBsYW5kIHRvIHNlY3VyZSBpdHMgZnV0dXJlLCBhbmQgV2VzdHMgSWxsYXdhcnJhIExlYWd1ZXMgQ2x1YiBvZmZlciB0byBhbWFsZ2FtYXRlIHdpdGggc3RydWdnbGluZyBDb3JyaW1hbCBMZWFndWVzIENsdWIuIEJ1dCBpdCBub3QgYWxsIGdsb29tLCB3aXRoIG1hbnkgb2YgdGhlIDczIHJlbWFpbmluZyBjbHVicyBpbiB0aGUgcmVnaW9uIHB1c2hpbmcgZm9yd2FyZCBieSBkaXZlcnNpZnlpbmcsIG9wZXJhdGluZyBzbWFydGVyIGFuZCByZXNwb25kaW5nIHRvIHdoYXQgY29tbXVuaXRpZXMgd2FudC4gCk1pbGttYW4yOTA1IHUKVGhlIHByb2JsZW0gaXMgdGhhdCB0aGVpciBpcyBzbyBtdWNoIGdvaW5nIG9uIGluIG1vc3QgbGV2ZWxzIHRoYXQgeW91IHJlYWxseSBjYW4ga2VlcCB0cmFjayBhbmQga2VlcCB0aGVtIHNhZmUuIApUaGVyZSBhcmUgcHJldHR5IG11Y2ggbm8gdHVybnMgdGhhdCBicmljayBjb21wbGV0ZWx5LCB3aGljaCBkaXNjb3VyYWdlcyBtZSBmcm9tIGNob29zaW5nIGEgc21hbGwgYmV0c2l6ZSBvbiB0aGUgZmxvcCB3aXRoIG15IGVudGlyZSByYW5nZSwgSSBkb24gZm9sZCBvdXQgZW5vdWdoIHRvIGRvIGl0IHdpdGggYmx1ZmZzIGFuZCBJIGdldCBzdWNrZWQgb3V0IG9uIHRvbyBvZnRlbiB3aGVuIEkgZG8gaXQgd2l0aCB2YWx1ZSwgaW4gbXkgaHVtYmxlIG9waW5pb24uLiAKUGh1bm5pZWJ1bm5pZSAgMSBwb2ludCAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpPYnNlcnZlcnMgZXN0aW1hdGUgdGhhdCBaeW5nYSBtaWdodCBiZSB3b3J0aCBhcyBtdWNoIGFzICQxNSBiaWxsaW9uLCBtb3JlIHRoYW4gdGhyZWUgdGltZXMgYXMgbXVjaCBhcyBMaW5rZWRJbi4gVGhhdCBtaWdodCBzZWVtIG9kZCwgdW50aWwgeW91IGNvbnNpZGVyIFp5bmdhIGluY3JlZGlibHkgc3VjY2Vzc2Z1bCBidXNpbmVzcyBtb2RlbC4gVGhlIGNvbXBhbnkgcmVwb3J0ZWQgcmV2ZW51ZXMgb2YgJDg1MCBtaWxsaW9uIGZvciAyMDEwIGZyb20gYSBjb21iaW5hdGlvbiBvZiBzb3VyY2VzIHRoYXQgaW5jbHVkZXMgc3BvbnNvcnNoaXBzIGFuZCB0aGUgc2VsbGluZyBvZiBnYW1lIGNyZWRpdHMgZWl0aGVyIGJ5IGNyZWRpdCBjYXJkIHdpdGhpbiB0aGUgZ2FtZSBvciBwcmVwYWlkIGNhcmRzIGF0IHN0b3JlcyBuYXRpb253aWRlLiAKTW9zdCBvZiB0aGVtIGhhdmUgZnJlZSBjb2ZmZWUgKG5ha2VkIGV2ZW4gaGFzIGZyZWUgYmVlciEpIGFuZCBmcmVlIHdpZmkgKG9mIGNvdXJzZSkgc28gd2hlbiB5b3UgYWRkIGl0IHVwIGl0IGFib3V0IHRoZSBzYW1lIGNvc3QgYXMgYmVpbmcgaW4gYSBjYWZlIHdpdGggdGhlIGZsZXhpYmlsaXR5IG9mIHVzaW5nIG11bHRpcGxlIGxvY2F0aW9ucyB3aXRoaW4gdGhlIHNhbWUgY29tcGFueSBhbmQgYXMgZmFyIGFzIGkga25vdyBtb3N0IG9mIHRoZW0gYXJlIDI0IGhvdXJzIHRvby4gSXQgYWxzbyBhIHdheSB0byBnZXQgdG8gbWVldCBwZW9wbGUgYXMgdGhlcmUgYXJlIGxvdHMgb2YgZXZlbnRzIG9uIGluIHRoZW0gYW5kIHlvdSBzdGFydCB0byBidW1wIGludG8gdGhlIHNhbWUgcGVvcGxlIG92ZXIgYW5kIG92ZXIgYWZ0ZXIgYSB3aGlsZS4KRGllIGdlbmF1ZSBaYWhsIGRlciBHc3RlemltbWVyIHN0ZWh0IG5vY2ggbmljaHQgZmVzdCAgIGVzIHNvbGxlbiBydW5kIDE1MCBzZWluLiAKQSBkYXduaW5nIGNvbnNjaW91c25lc3MgZW1lcmdpbmcgaW4gU2lsaWNvbiBWYWxsZXkgYXMgcGVvcGxlIHJlY29nbml6ZSB0aGF0IHRoZWlyIGNvbnZlbnRpb25hbCBzdWNjZXNzIGlzbiBuZWNlc3NhcmlseSBtYWtpbmcgdGhlIHdvcmxkIGEgYmV0dGVyIHBsYWNlLCBzYXlzIFRhdWJlciwgMzQsIGEgZm9ybWVyIEdvb2dsZSBwcm9kdWN0IG1hbmFnZXIgYW5kIHN0YXJ0dXAgZXhlY3V0aXZlIGNvYWNoLiBDRU9zLCBpbnNpZGUgdGhleSBodXJ0aW5nLiBUaGV5IGNhbiBzbGVlcCBhdCBuaWdodC4gQSBmb3JtZXIgY2hpZWYgZXhlY3V0aXZlIG9mIEp1bmlwZXIgTmV0d29ya3MsIFNjb3R0IEtyaWVucywgb3BlbmVkIGhpcyBvd24gdGVjaCBhbmQgc291bCBjZW50cmUgbmVhcmJ5IGluIE1heSwgd2l0aCBjb25zdHJ1Y3Rpb24gZmluaXNoaW5nIGluIEZlYnJ1YXJ5LiBUaGUgZ29hbCBvZiB0aGUgY2VudHJlLCBjYWxsZWQgMTQ0MCBNdWx0aXZlcnNpdHksIGlzIHRvIHRoYXQgdGhlIGJsYXppbmcgc3VjY2VzcyBvZiB0aGUgaW50ZXJuZXQgY2F0YWx5emVkIHBvd2VyZnVsIGNvbm5lY3Rpb25zLCB5ZXQgZGlkIG5vdCBoZWxwIHBlb3BsZSBjb25uZWN0IHRvIHRoZW1zZWx2ZXMuIHRoZXJlIGlzIG1vc3QgbGlrZWx5IGVub3VnaCBjcmlzaXMgdG8gZ28gYXJvdW5kLgpMYXN0IHBvc3RzCkEgY29uc3RhbnQgcmVtaW5kZXIgdGhhdCB0aGUgYW5zd2VyIG9mICJ3aGF0IGRpZCBJIGZpZ2h0IGZvcj8iIEV4aXN0cyBtb3JlIGluIHRoZW9yZXRpY2FsIHBvY2tldHMgb2Ygd2hhdCB3ZSB3YW50IHVzIHRvIGJlLCBhcyBvcHBvc2VkIHRvIGEgc3Ryb25nIGZhYnJpYyBvZiB3aGF0IHdlIGFyZS4gSSBkbyB0YWtlIGhlYXJ0LCBob3dldmVyIGZvciB0aGVyZSBhcmUgbW9yZSBvZiB1cyB3ZWF2aW5nIHRocmVhZHMgYW5kIG1ha2luZyBjb25uZWN0aW9uczsgc3VjaCBhY3RzIGZyaWdodGVuIGEgZGVjYWRlcyBsb25nIGNvbnNlcnZhdGl2ZSBzdGF0dXMgcXVvLCBhIGJyb2tlbiBzb2NpYWwgaW5lcnRpYSByZWZ1c2luZyB0byBmdW5jdGlvbiBmb3IgYWxsIGJ1dCBhIHNlbGVjdCBmZXcuLiAKQ1UgYWRtaXRzIHRoYXQgTGl1ZmF1J3Mgc2hvdWxkZXIgaW5qdXJ5IGhhcyBib3RoZXJlZCBoaW0sIGxlYWRpbmcgdG8gdGhlIHF1ZXN0aW9uIG9mIHdoZXRoZXIgaXQncyBiZXR0ZXIgZm9yIENVIHRvIHBsYXkgYSBiYW5nZWQgdXAgTGl1ZmF1LCBvciB0dXJuIHRvIGEgaGVhbHRoeSBiYWNrdXAsIHdoZXRoZXIgaXQncyBKb3JkYW4gR2VocmtlIG9yIENhZGUgQXBzYXkuClNvdW5kcyBsaWtlIGl0IHdhcyBsZXNzIHRoYW4gd2hhdCB5b3UgcGF5IGF0IGEgcmVzdGF1cmFudCwgYnV0IHByb2JhYmx5IHN0aWxsIG1vcmUgdGhhbiB0aGUgaW5ncmVkaWVudHMuLiAKU29tZSBpbXByb3ZlZCBncmFwaGljcy4gCkkgd2FzIHRvbGQgdGhhdCBJIHNob3VsZG4gYmUgY3J5aW5nIGJlY2F1c2UgaXQgbm90IHRoYXQgYmFkLiBUaGV5IHNlZW4gbXVjaCB3b3JzZSBhbmQgSSBub3QgZ2V0dGluZyBhbnkgcGFpbiBtZWRzIGJlY2F1c2UgdGhlIGFudGliaW90aWNzIHdpbGwgdGFrZSBjYXJlIG9mIHRoYXQuIEkgZW5kZWQgdXAgZ29pbmcgdG8gbXkgb2IvZ3luIGFuZCBzdGF5aW5nIHR3byBkYXlzIGluIHRoZSBob3NwaXRhbCBiZWNhdXNlIGkgY291bGRuIGtlZXAgdGhlIHN0dXBpZCBwaWxscyBkb3duIGJlY2F1c2UgdGhlIGluZmVjdGlvbiB3YXMgdG9vIGJhZCBzbWguLiAKQW5kIHlvdSBrbm93LCBhYm91dCBiZWluZyBhbiBlbnRyZXByZW5ldXIgYW5kIGJlaW5nIGEgd29tYW4gaW4gYSBtYW4ncyB3b3JsZC4gCk9uZSBvZiBteSBjb3dvcmtlcnMgaXMgdHlwZSAxIGFuZCB0b2xkIG1lIGEgc3RvcnkgYWJvdXQgaGVyIHdlbGwgaW50ZW50aW9uZWQgYXVudCB3aG8gaXMgYWx3YXlzIGNvbmNlcm5lZCBhYm91dCBtYWtpbmcgdGhlIHJpZ2h0IGZvb2RzIGZvciBoZXIuIEl0IHRoZSBzYW1lIGtpbmQgb2YgdGhpbmcgYXMgeW91ciBjaHVyY2ggbGFkaWVzLCB0aGV5IGFyZSBjb21pbmcgZnJvbSBhIGdvb2QgcGxhY2UgYnV0IHRoZWlyIGNvbmNlcm4gaXMgb2Z0ZW4gaWdub3JhbnQgYW5kIHNpbGx5LgpBcyBvdXIgYm9kaWVzJyBhZ2UsIG91ciBuZXJ2ZSBlbmRpbmdzIGJlY29tZSBsZXNzIHNlbnNpdGl2ZSBpbiBwYXJ0cyBvZiBvdXIgYm9keSwgcGFydGljdWxhcmx5IGluIG91ciBleHRyZW1pdGllcy4gVGhhdCBiZWluZyBzYWlkLCByZWZsZXhvbG9neSBoYXMgYmVlbiBjb25uZWN0ZWQgd2l0aCBzdGltdWxhdGluZyBtb3JlIHRoYW4gNywwMDAgZGlmZmVyZW50IG5lcnZvdXMgZW5kaW5ncyBpbiBhIHNpbmdsZSBzZXNzaW9uLCB0aGVyZWJ5IGluY3JlYXNpbmcgdGhlaXIgZnVuY3Rpb24gYW5kIHJlYWN0aXZpdHkuIE9wZW5pbmcgYW5kIGNsZWFuaW5nIG91dCBuZXVyYWwgcGF0aHdheXMgY2FuIGhlbHAgaW1wcm92ZSBmdW5jdGlvbmFsaXR5IGFuZCBmbGV4aWJpbGl0eSBvZiBtYW55IGFyZWFzIGFyb3VuZCB0aGUgYm9keS4gTmV1cmFsIHBhdGh3YXlzIGFyZSBsaWtlIG11c2NsZXMsIHNvIGl0IGlzIGdvb2QgdG8gd29yayB0aGVtIG9uY2UgaW4gYSB3aGlsZSB0byBrZWVwIHRoZW0gc2hhcnAhIEJ5IGFsaWduaW5nIHRoZSBmdW5jdGlvbmluZyBvZiB2YXJpb3VzIG9yZ2FuIGFuZCBtdXNjbGUgc3lzdGVtcywgcmVmbGV4b2xvZ3kgY2FuIGluY3JlYXNlIG1ldGFib2xpc20gYW5kIGVuZXJneSBjcmVhdGlvbiBwcm9jZXNzZXMgd2l0aGluIHRoZSBib2R5LiBJZiB5b3UgbmVlZCBhIGJvb3N0IGluIGVuZXJneSBvciBhcmUgYWx3YXlzIGZlZWxpbmcgc2x1Z2dpc2gsIHBlcmhhcHMgYSByZWZsZXhvbG9neSBzZXNzaW9uIGNhbiBoZWxwIHB1dCBzb21lIHBlcCBiYWNrIGluIHlvdXIgc3RlcCEKQW5kIG5vIHJlYXNvbmFibGUgYmFzaXMgZm9yIGhvcGUgZm9yIHRoZSBmdXR1cmUuIEJ1dCB0aGVyZSBhbHdheXMgd2lzaGZ1bCB0aGlua2luZywgd2hpY2ggaXMgd2hhdCBHaWFudHMgZmFucyBhcmUgcmVkdWNlZCB0byBhcyB3ZSB0cnkgdG8gaW1hZ2luZSBhIGRlY2VudCB0ZWFtIHRoYXQgYWN0dWFsbHkgZXhjaXRpbmcgdG8gd2F0Y2guLiAKSSBoYWQgYSBwZXJpb2QgaW4gbXkgbGlmZSB0aGF0IEkgd2FzIGFkZGljdGVkIHRvIHNob3BwaW5nLCBhbmQgSSBmb3VuZCB0aGUgYm9vayB0byBiZSB0aGUgb25seSBzdWNjZXNzZnVsIG1ldGhvZCBpbiBicmVha2luZyB0aGUgY3ljbGUuIFRoZSBib29rIGlzIGEgYml0IHRlZGlvdXMgYmVjYXVzZSBpdCBpbnZvbHZlcyBhIGxvdCBvZiBleGVyY2lzZXMsIGJ1dCB0b3RhbGx5IHdvcnRoIGl0IGlmIHlvdSBsb29raW5nIHRvIGdldCBtb3JlIGluc2lnaHQgaW50byB5b3VyIGFkZGljdGlvbiBhbmQgd2FudCB0byBicmVhayBpdC5JIG5vdCAxMDAlIHN1cmUgb24gdGhlIGRldGFpbHMgb2YgZmlyc3Qgd2lmZSBiZWNhdXNlIGl0IHdhcyBxdWl0ZSBhIHdoaWxlIGJlZm9yZSBtZS4gClRoZW4gY29tZSBpbiB0aGUgdGhyZWUgbGFyZ2UgbWVuIGRlbWFuZGluZyBJIHBheSA0SyB1c2QuIApCVFcgIG15IGZlbGxvdyA5MTVlcnMgcmVhbGx5IGRpc2FwcG9pbnRlZCBtZS4gCk9wZW5pbmcgdXAgYWxsIGNvbnRyYWN0cyB0byBhIGZhaXIgYmlkZGluZyBwcm9jZXNzIGFuZCBpZGVudGlmeWluZyB0YWxlbnRlZCBDYW5hZGlhbiBib3JuIElDVCBjb21wYW5pZXMsIGluc3RlYWQgb2YgYWx3YXlzIGxlYW5pbmcgb24gZm9yZWlnbiBpbmN1bWJlbnRzLCB3b3VsZCBiZSBnb29kIG5leHQgc3RlcC4uIApJbiBzb21lIGNhc2VzLCBpZiB0aGUgcG90IGlzIHNtYWxsLCB5b3VyIGJlc3QgcGxheSBtYXkgYmUgdG8gZm9sZC4gQXMgeW91IGFyZSBsZWFybmluZyB0byBwbGF5LCB5b3UgbWF5IG5ldmVyIGZvbGQgaW4gdGhpcyBzaXR1YXRpb24gYmVjYXVzZSB5b3Ugd2FudCBzb21lIG9mIHRoYXQgbW9uZXkgeW91IGNvbnRyaWJ1dGVkIHRvIHRoZSBwb3QgcmV0dXJuZWQgdG8geW91LiAKSGUgdGF1Z2h0IG1lIGFib3V0IHRoZSBzaXR1YXRpb24gaW4gTXlhbm1hciwgYW5kIGFib3V0IGhvdyBoaXMgbmVwaGV3IHdhcyBzZWVraW5nIHJlZnVnZWUgc3RhdHVzIGFzIHdlbGwsIGhhdmluZyBiZWVuIHRha2VuIGZyb20gaGlzIHZpbGxhZ2UgYnkgbWVtYmVycyBvZiB0aGUgVGF0bWFkYXcgKE15YW5tYXIgbWlsaXRhcnkpIGFuZCBmb3JjZWQgdG8gYmUgYSBodW1hbiBzaGllbGQsIHdhbGtpbmcgdGhyb3VnaCBtaW5lZmllbGRzIGFoZWFkIG9mIHRoZSB0cm9vcCwgZXRjLiAKSSBuYXR1cmFsbHkgdGVuZCB0byBmYWxsIGFzbGVlcCBhdCBtaWRuaWdodCBhbmQgd2FrZSB1cCBhcm91bmQgODowMCBBTS4gClJla2VycyBvciBrbm93bGVkZ2Ugb2YgaGlzIGFjdGl2aXRpZXMgaW4gb3ZlciBhIGRlY2FkZSBzbyBGUkMgY2FuIHByb3ZpZGUgbm8gZnVydGhlciBpbnNpZ2h0IGludG8gdGhlc2UgYWxsZWdhdGlvbnMuIApUaGlzIGlzIGEgbWlzcmVwcmVzZW50YXRpb24gYW5kIGEgZmVhciBiYXNlZCB3YXkgdG8gYW5hbHl6ZSBhIGRvZydzIGJyZWVkIG9yIGJyZWVkcy4gSW4gdGhpcyBwYXJ0aWN1bGFyIGluY2lkZW50IHRoZXJlIHdhcyBubyBnZW5ldGljIHRlc3RpbmcgZG9uZSwgYW5kIHRoZXJlIHdlcmUgbm8gcHVyZWJyZWQgcGFwZXJzIChjYW5pbmUgICBjYW5pcyBsdXB1cyBmYW1pbGlhcmlzKS4gVGhlcmUgaXMgbm8gYWN0dWFsIHByb29mIG9mIHRoaXMgZG9nJ3MgYnJlZWQocykgYW5kIGl0IGlzIGFsbCBoZXJlc2F5LCB3aGljaCBpcyBub3QgcHJvb2YsIHNjaWVuY2Ugb3IgZmFjdC4gClRoZWlyIGRhZCB3YXNuIHRoZSBncmVhdGVzdCB3aGVuIHdlIHdlcmUgdG9nZXRoZXIgYW5kIG5laXRoZXIgb2YgdXMgbmVlZGVkIGEgVFYgc2hvdyByZWluZm9yY2luZyB0aGUgaWRlYXMgdGhleSB3ZXJlIGFscmVhZHkgZ2V0dGluZyBhYm91dCBtZW4gZnJvbSBiZWluZyBhcm91bmQgaGltLiBIZSBpbXByb3Zpbmcgbm93IChmaW5hbGx5KSBidXQgb3VyIGtpZHMgYXJlIDE4LCAxNCAxMiBzbyBpdCBhIGNhc2Ugb2YgdG9vIGxpdHRsZSB0b28gbGF0ZS4gCkZ1cnRoZXIgaW52ZXN0bWVudHMgYXJlIG5lZWRlZCB0byBlbmhhbmNlIHRoZSBjb21wZXRpdGl2ZW5lc3Mgb2YgTkFGVEEgYXMgYSB3aG9sZSwgYW5kIGdlbmVyYXRlIG1vcmUgb2YgdGhlIGtpbmRzIG9mIGhpZ2ggcXVhbGl0eSBqb2JzIHRoYXQgTkFGVEEncyBjcml0aWNzIGNyYXZlLCBIdWZiYXVlciBub3Rlcy4gIkVhY2ggb2YgdGhlIHRocmVlIGdvdmVybm1lbnRzIG11c3QgZW5oYW5jZSBpdHMgY291bnRyeSBlY29ub21pYyBjb21wZXRpdGl2ZW5lc3MgYnkgZG9tZXN0aWMgcmVmb3JtcyBpbiBhcmVhcyBzdWNoIGFzIGVkdWNhdGlvbiwgaW5mcmFzdHJ1Y3R1cmUgYW5kIHRheCBwb2xpY3kuIEJ1dCBieSBjb29wZXJhdGluZyIgICB3aXRoIG9uZSBhbm90aGVyLCByYXRoZXIgdGhhbiB0cnlpbmcgdG8gcHJvdGVjdCB0aGVpciBtYXJrZXRzIGZyb20gZm9yZWlnbiBjb21wZXRpdGlvbiAgICJ0aGV5IGNhbiBzcHVyIHRoZSBlbnRpcmUgTm9ydGggQW1lcmljYW4gZWNvbm9teS4iIE1vc3QgbWFqb3IgZmlybXMgYXJlIGF3YXJlIG9mIHRoZSBvcHBvcnR1bml0aWVzIGFoZWFkLiBsYXJnZSBidXNpbmVzc2VzIHRoYXQgcHJvZHVjZSBhbnkga2luZCBvZiB0YW5naWJsZSBnb29kcywgdGhlIGxpa2VsaWhvb2QgdGhhdCB0aGV5IGhhdmUgYSBzaWduaWZpY2FudCBwcmVzZW5jZSBpbiBNZXhpY28gaXMgdmVyeSBoaWdoLiBjb3Jwb3JhdGlvbnMgdGhhdCBkbyBidXNpbmVzcyBpbiBNZXhpY28uIGZyb20gYWN0dWFsbHkgaGF2aW5nIHRvIGxlYXZlIE5BRlRBLiBjb21wYW5pZXMsIiBIdWZiYXVlciBleHBsYWlucy4gIldoYXQgW1RydW1wXSByZWFsbHkgd2FudHMgdG8gZG8gaXMgdG8gY3JlYXRlIHNvbWUgc3RvcnkgbGluZSB3aGVyZSBqb2JzIGFyZSBjcmVhdGVkIGluIHRoZSBVbml0ZWQgU3RhdGVzLiB0aGF0IHVzZSBNZXhpY28gYXMgcGFydCBvZiB0aGVpciBzdXBwbHkgY2hhaW4sIHdoaWNoIGlzIGNyaXRpY2FsIGZvciB3aGF0IHRoZXkgYXJlIHByb2R1Y2luZy4gYXMgdGhlIHByaWNlIGZvciBub3QgcHV0dGluZyB0YXJpZmZzIG9yIG5ldyB0YXJpZmZzIG9uIHRob3NlIHBhcnRpY3VsYXIgcHJvZHVjdHMuIGdvdmVybm1lbnQsIG5vdGVzIEh1ZmJhdWVyLCBhIGZvcm1lciBwcm9mZXNzb3Igb2YgaW50ZXJuYXRpb25hbCBmaW5hbmNlIGRpcGxvbWFjeSBhdCBHZW9yZ2V0b3duIFVuaXZlcnNpdHkuIGltcG9ydHMgZnJvbSBNZXhpY28sIHdoYXQgd2lsbCBzdXJlbHkgaGFwcGVuIFthZnRlciB0aGF0XSBpcyB0aGF0IE1leGljbyB3aWxsIGN1dCBvZmYgaW1wb3J0cyBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzLiBJdCB3aWxsIGJlIGEgdGl0IGZvciB0YXQgc3RvcnksIGFuZCBob3cgZmFyIGl0IGdvZXMgaXMgaGFyZCB0byBndWVzcy4iCk5hdGlvbmFsIEFjYWRlbXkgb2YgU2NpZW5jZXMsIDEwOTogNTk0IDU5OSwgMjAxMkRlcGFydG1lbnRzIG9mIGFHZW5vbWUgU2NpZW5jZXMgYW5kIENvbXB1dGVyIFNjaWVuY2UgYW5kIEVuZ2luZWVyaW5nLCBVbml2ZXJzaXR5IG9mIFdhc2hpbmd0b24sIFNlYXR0bGUsIFdBIDk4MTk1O0ZBUyBDZW50ZXIgZm9yIFN5c3RlbXMgQmlvbG9neSwgSGFydmFyZCBVbml2ZXJzaXR5LCBDYW1icmlkZ2UsIE1BIDAyMTM4OyBhbmQgU2FudGEgRmUgSW5zdGl0dXRlLCBTYW50YSBGZSwgTk0gODc1MDEgRWRpdGVkIGJ5IEplZmZyZXkgSS4gR29yZG9uLCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lIGluIFN0LiBMb3VpcywgU3QuIExvdWlzLCBNTywgYW5kIGFwcHJvdmVkIE5vdmVtYmVyIDE1LCAyMDExIChyZWNlaXZlZCBmb3IgcmV2aWV3IE9jdG9iZXIgMywgMjAxMSkKUGx1cyB0YXJkLCBlbiAxODA5LCBsIEFudG9pbmUgSXNhYWMgU2lsdmVzdHJlIGRlIFNhY3kgY29tbWV0LCBzYW5zIHZyaXRhYmxlbWVudCByZW5jb250cmVyIGRlIHJzaXN0YW5jZSwgdW5lIGhvcnJldXIgdHltb2xvZ2lxdWUgZW4gb3NhbnQgZmFpcmUgdW4gZG91dGV1eCByYXBwcm9jaGVtZW50IGVudHJlIGxlcyBtb3RzIGFzc2Fzc2luIGV0IGhhc2NoaXNjaGluLiBDb21wcmVuZHJlLCBwYXIgY2UgYmlhaXMsIHF1ZSBsZSBmdW1ldXIgZGUgaGFzY2hpc2NoIHNlcmFpdCBmb3JjbWVudCB1bmUgYnRlIGZ1cmlldXNlIGNhcGFibGUgZHUgcGlyZSBzYW5zIGZhaXJlIHByZXV2ZSBkZSBkaXNjZXJuZW1lbnQgOiAgY2UgcmNpdCBbXSBhIHQgbWFpbnRlcyBmb2lzIHJlcHJpcyBldCBtYWludGVzIGZvaXMgZW5qb2xpdiwgc3VydG91dCAgbm90cmUgcG9xdWUsIGFmaW4gZGUgZG1vbnRyZXIgbGEgc291cm5vaXNlIGV0IHByaWxsZXVzZSBub2Npdml0IGR1IGhhc2NoaXNjaC4gSWwgZXN0IG1tZSBkZXZlbnUgbGUgcHJpbmNpcGFsIGFyZ3VtZW50IGVtcGxveSBwb3VyIGVuIGRub25jZXIgbGVzIGVmZmV0cyBwYXIgY2V1eCBxdWksIGRlIGJvbm5lIG91IGRlIG1hdXZhaXNlIGZvaSwgY2l0ZW50IGNldHRlIGhpc3RvaXJlIHNhbnMgcmVtb250ZXIgIHNhIHNvdXJjZSAgKDEzKS4gCkFuIHVuZXhwZWN0ZWQgc3VycHJpc2Ugd2FzIE5hdW1hbiBBcmZlZW4sIHdob3NlIHNpbXBsZSwgcnVzdGljIGNvbGxlY3Rpb24gcHJvdmlkZWQgYSBtdWNoIG5lZWRlZCBkb3NlIG9mIG1lbnN3ZWFyIHRoYXQgZGlkbid0IGxvb2sgbGlrZSBzb21ldGhpbmcgb3V0IG9mIGEgVGltIEJ1cnRvbiBtb3ZpZS4gClNvIENvcm1hbm4gaXMgc3RlYWRpbHkgd29ya2luZyBvbiB0aGUgY3Jvc3NiZW5jaGVycywgcGlja2luZyB0aGVtIG9mZiBvbmUgYnkgb25lLgpOb3QgbXkgZGF5LgpJIGZlZWwgbGlrZSBJIGFtIG5ldmVyIGdvaW5nIHRvIGdldCBwcmVnbmFudCBiZWNhdXNlIHdlIHdpbGwgbmV2ZXIgZ2V0IHRvIHRyeS4gTXkgaHVzYmFuZCB3b3JrcyBvdXQgb2Ygc3RhdGUuIEhlIGlzIGdvaW5nIHRvIGJlIGhvbWUgZm9yIGEgd2VlayBpbiBNYXJjaCBhbmQgdGhlbiBmb3IgYSB3ZWVrIGV2ZXJ5IDYgd2Vla3MuIE15IGN5Y2xlcyBoYXZlIGJlZW4gc3RyYW5nZSBsYXRlbHkgKGx1dGVhbCBwaGFzZSBzcG90dGluZyB3aGljaCBJIG5ldmVyIGhhZCBiZWZvcmUpIHNvIHRoYXQgd29ycmllcyBtZS4gTXkgaHVzYmFuZCBpcyB3b3JyaWVkIGJlY2F1c2UgaGUgaGFzIG5ldmVyIGhhZCBhbnkgcmVhbCAic2NhcmVzIi4gSWYgeW91IGFyZSBqdXN0IHdhbnRpbmcgaHlkcmF0aW9uIEkgdGhpbmsgMiBnb29kIGh5ZHJhdGluZyB0b25lcnMgaXMgYSBtb3JlIGVmZmVjdGl2ZSB3YXkgdG8gZG8gdGhhdC4gSSBmZWVsIGxpa2UgdGhleSBkbyBkaWZmZXJlbnQgdGhpbmdzLiBJIGRvbiB0aGluayBhIEZURSBpcyBlc3NlbnRpYWwgYnV0IGl0IGlzIGRpZmZlcmVudCBlbm91Z2ggZnJvbSBhIHRvbmVyIHRvIHVzZSBib3RoLiBJIHRoaW5rIG92ZXJhbGwsIGl0IGlzIGJlc3QgdG8gbG9vayBhdCBpbmRpdmlkdWFsIHByb2R1Y3RzIGluc3RlYWQgb2YgZm9jdXNpbmcgb24gY2F0ZWdvcmllcyB0byBnZXQgd2hhdCB5b3Ugd2FudC4KT25saW5lIFdlcmJ1bmcgaXN0IGVpbiBhdHRyYWt0aXZlciBNYXJrdCBmciBVbnRlcm5laG1lbiB1bmQgYXVjaCBmciBkZW4gTWFya3QgZGVzIE9ubGluZSBHbGNrc3NwaWVscywgd28gYXVjaCBHb29nbGUgYWxzIGFrdGl2ZXMgSW5zdHJ1bWVudCBkYXp1IGdlaHJ0LCBkZW5uIEdvb2dsZSBpc3RESUUgQW5sYXVmc3RlbGxlIHdlbm4gZXMgdW0gU3VjaG1hc2NoaW5lbm1hcmtldGluZyBnZWhydC4gSmVkZSBGaXJtYSBkaWUgSWhyZW4gSGF1cHRmaXJtZW5zaXR6IGluIEVuZ2xhbmQgaGF0LCBrYW5uIHVudGVyIEVpbmhhbHR1bmcgYmVzdGltbXRlciBBdWZsYWdlbiBmciBpaHJlIEdhbWJsaW5nIERpZW5zdGxlaXN0dW5nZW4gd2VyYmVuLgpBbHNvIHJlbWVtYmVyLCB5b3UgZG9uIGhhdmUgdG8gYWNjZXB0IGFueXRoaW5nIGZyb20gYW4gZXN0YXRlLCBub3IgYXJlIHlvdSAoREgpIG9ibGlnbGF0ZWQgdG8gYWN0IGFzIGV4ZWN1dG9yIG9mIGEgd2lsbC9lc3RhdGUsIGV2ZW4gaWYgbmFtZWQuIApNb3ZpbmcgdXAgY29tcGxldGVseSBkZXBlbmRzIG9uIHlvdXIgYmFua3JvbGwgYW5kIG5vdCB5b3VyIHNraWxsIGxldmVsLiAKVGhhdCBzYWlkLCB0aGUgb3JpZ2luYWwganVkZ2UncyBydWxpbmcgYXQgdGhlIHRyaWFsIGxldmVsIHdyb25nbHkgY2hhcmFjdGVyaXplZCB0aGUgaXNzdWUgYXMgYSBmdW5kYW1lbnRhbCByaWdodCwgYW5kIHRodXMgSSB0aGluayBtaXNzZWQgdGhlIGJvYXQgd2hlbiBpdCBjYW1lIHRvIFN0cmlja2xhbmQgcHJlanVkaWNlLiBJdCdzIGJlZW4gYSB3aGlsZSBzaW5jZSBJIHJlYWQgaXQsIGJ1dCB0aGF0J3Mgd2hhdCBJIHJlY2FsbC4gU28gSSB0aGluayB0aGVyZSdzIGEgZGVjZW50IGNoYW5jZSBoZSB3b3VsZCBnZXQgaGlzIG1vdGlvbiB0byByZW9wZW4gZ3JhbnRlZCwgYnV0IGl0J3MgZmFyIGZyb20gY2xlYXIuLiAKVGhlIHpvZGlhYyBkYXRlcyBhcmUgYmFzZWQgb24gdGhlIGFwcGFyZW50IHBhdGggb2YgdGhlIFN1biwgY2FsbGVkIHRoZSBlY2xpcHRpYywgYXMgaXQgbW92ZXMgdGhyb3VnaCB0aGVzZSAzMCBkZWdyZWUgem9uZXMuIApBbGxlZ2VkIG93bmVycyBhbmQgbWFuYWdlcnMgZmFjZSBhIHJhbmdlIG9mIHByb3N0aXR1dGlvbiByZWxhdGVkIG9mZmVuc2VzLiBBdCBsZWFzdCBvbmUsIDQ5IHllYXIgb2xkIExhbiBZdW4gTWEsIG9mIE9ybGFuZG8sIGZhY2VzIGh1bWFuIHRyYWZmaWNraW5nIGNoYXJnZXMuIApXaXIgd2FuZGVydGVuIGdlbXRsaWNoIGluIGRlbiBUYWxrZXNzZWwgQ3VibyBkZSBsYSBHYWxnYSBoaW5laW4uIApIaXMgb3Bwb25lbnRzIGFsc28gaGF2ZSB0aGUgc2V0cyBhcyB3ZWxsIGFzIHRoZSBzdHJhaWdodHMgYW5kIHR3byBwYWlycywgc28gaGUgbmVlZHMgdG8gYmUgY2FyZWZ1bC4gV2l0aCBLUXMgaW4gcGFydGljdWxhciwgSSBsaWtlIGNoZWNrIGNhbGxpbmcgKG1peGluZyBpbiBhIGNoZWNrIHJhaXNlIGV2ZXJ5IG5vdyBhbmQgdGhlbikuIFlvdXIgb3Bwb25lbnRzIGhhdmUgYSBsb3Qgb2YgaGFuZHMgdGhhdCB3aWxsIGNhbGwgeW91IG9uIHRoZSBmbG9wIGFuZCB5b3UgcmVhbGx5IGJlbmVmaXQgZnJvbSBzZWVpbmcgYSB0dXJuIGNhcmQuLiAKV2hhdCBkb2VzIGFueSBvZiB0aGF0IGhhdmUgdG8gZG8gd2l0aCB5b3VyIGx5aW5nIGFib3V0IGlsbGVnYWwgaW1taWdyYW50cyBiZWluZyB2aW9sZW50IEFtZXJpY2FuIGtpbGxpbmcgY3JpbWluYWxzPyBJIHRob3VnaHQgd2Ugd2VyZSBzdGlsbCBkaXNjdXNzaW5nIHRoZSBmYWN0IHRoYXQgaW1taWdyYW50cyBhcmVuIG5lYXJseSBhcyBkYW5nZXJvdXMgYXMgeW91IG1ha2UgdGhlbSBvdXQgdG8gYmU/IFNob3VsZCB3ZSBkaXNjdXNzIHlvdSBuZWdsZWN0aW5nIHRoZSBmYWN0IHRoYXQgdW5kb2N1bWVudGVkIGltbWlncmFudHMgZG8gcGF5IGZlZGVyYWwgdGF4ZXMgYW5kIHRoZSBmYWN0IHRoYXQgdGhlIHByZXNlbmNlIG9mIHVuZG9jdW1lbnRlZCBpbW1pZ3JhbnRzIGh1cnRzIG1pbmltdW0gd2FnZSBidXQgY2F1c2VzIGEgbmV0IGltcHJvdmVtZW50IHRvIHRoZSBlY29ub215PyBJZiB5b3UgZ29pbmcgdG8gdHJlYXQgZXZlcnkgaWxsZWdhbCBpbW1pZ3JhbnQgbGlrZSBhIGNyaW1pbmFsIHdoZW4gVVMgY2l0aXplbnMgYXJlIG1vcmUgbGlrZWx5IHRvIGNvbW1pdCBjcmltZSB0aGFuIHRoZW0sIHdoeSB3b3VsZG4geW91IHRyZWF0IGNpdGl6ZW5zIHRoZSBzYW1lIHdheSB3aGVuIHRoZXkgbW9yZSBsaWtlbHkgdG8gYmUgY3JpbWluYWxzPwoiTW9uZXkgc3BlbnQgb24gdGhlIHBva2llcyBpcyBtb25leSB0YWtlbiBmcm9tIHRvbyBtYW55IGxvY2FsIGVjb25vbWllcy4gCiJTb21ldGltZXMgd2UgcmVjZWl2ZSB0aGlzIGluZm9ybWF0aW9uIGZyb20gZmFtaWx5IG9yIGZyaWVuZHMgdGhhdCdsbCBhZHZpc2UgdXMsICdIZXkgbXkgc29uLCBteSBkYXVnaHRlciBsb29rcyBsaWtlIHRoZXkndmUgdGFrZW4gdGhlaXIgcGFzc3BvcnQsIHBpY2tlZCB1cCBhbmQgSSBiZWxpZXZlIHRoZXkncmUgdHJhdmVsbGluZyByaWdodCBub3csIGFuZCB0aGV5J3ZlIGxlZnQgbWUgYSBub3RlIHRvIHNheSB0aGF0IHdlJ3JlIGhlYWRpbmcgdG8gU3lyaWEgb3IgSXJhcSBvciBzb21lIG90aGVyIGNvbmZsaWN0IHpvbmUgdG8gam9pbiBhIHRlcnJvcmlzdCBvcmdhbml6YXRpb24sJyIgTWFsaXppYSBzYWlkLgpJZiB5b3UgZG8gZW5kIHVwIHdhdGNoaW5nIHRoZSB3aG9sZSB0aGluZywgRE9OIEZPUkdFVCBUSEUgU1BFQ0lBTFMhIFRoZXJlIGFyZSBxdWl0ZSBhIGZldyBzcGVjaWFscyB0aGF0IHNpdCBiZXR3ZWVuIHNlYXNvbnMgYW5kIGhhdmUgaW1wb3J0YW50IHN0b3J5IGVsZW1lbnRzLiBJIGxpdGVyYWxseSBqdXN0IGxhc3Qgd2VlayBmb3VuZCBvdXQgYWJvdXQgYSBIYWxsb3dlZW4gc3BlY2lhbCB0aGF0IHNpdHMgYmV0d2VlbiBzZWFzb25zIDQgYW5kIDUgdGhhdCBhY3R1YWxseSBnZXRzIHJlZmVyZW5jZWQgaW4gNS4gSSBoYWQgYmVlbiBtaXNzaW5nIG91dCBvbiBpdCB0aGlzIHdob2xlIHRpbWUgYW5kIG5vdCBnZXR0aW5nIHdoYXQgdGhleSB3ZXJlIHRhbGtpbmcgYWJvdXQuLiAKSSB3b3VsZG4gZXZlbiBjaGFzZSBzb21lb25lIHdobyBJIHNhdyBkb2luZyBpdCwgbm90IHdvcnRoIGdldHRpbmcgc3RhYmJlZC4gSSB3YXMgYSBzZXJ2ZXIgb25jZSB1cG9uIGEgdGltZSBhbmQgdGhlIGhvc3Rlc3Mgc2VhdGVkIGEgc2luZ2xlIHByb2JhYmx5IGhvbWVsZXNzIGxhZHkgaW4gbXkgc2VjdGlvbi4gClRoZSByaXNpbmcgY29zdCBvZiBoZWFsdGhjYXJlIGhhcyBldmVuIHByZXZpb3VzbHkgbGVkIHNvbWUgcHVibGljIGZpZ3VyZXMsIGxpa2UgcGhpbG9zb3BoZXIgRGFuaWVsIENhbGxhaGFuWzJdYW5kIENvbG9yYWRvIEdvdmVybm9yIExhbW0sWzNdIHRvIGFkdm9jYXRlIGhlYWx0aGNhcmUgcmF0aW9uaW5nIGFnYWluc3Qgb2xkZXIgcGF0aWVudHMuIApGdXJ0aGVybW9yZSwgSSB0aGluayB0aGlzIGlzIG9uZSBvZiB0aG9zZSAieW91IHRoaW5rIHlvdSBrbm93IHNvbWVvbmUiIHRoaW5ncyBhbmQgdGhhdCBpcyBleHRyZW1lbHkgdW5zZXR0bGluZy4gU1cgaGFkIGV2ZW4gdGV4dGVkIGZyaWVuZHMgdGhhdCBDVyBoYWQgY2hhbmdlZC4gCldlIHdvdWxkIGRyYXcgbWFwcyBhcm91bmQgdGhlIGVudGlyZSBibG9jayBhbmQgcGF0Y2hlcyBvZiBncmFzcywgd2UgYWxsIGtuZXcgYWxsIDE1MSBwb2tlbW9uIGJ5IGhlYXJ0LCBhbmQgd2Uga2VwdCBhIHBhZCBvZiBwYXBlciB0byBrZWVwIHRyYWNrIG9mIG91ciBpbnZlbnRvcnkuIFdlIHdhbGsgYXJvdW5kIHRocm91Z2ggdGhlIGdyYXNzIHVudGlsIHRoZSBwZXJzb24gd2hvIHdhcyBlc3NlbnRpYWxseSBETWluZyB3b3VsZCBzaW5nIHRoZSBiYXR0bGUgbXVzaWMgYW5kIHdlIGJhdHRsZSB3aGF0ZXZlciB3aWxkIHBva2Vtb24gdGhleSBzYWlkIHdlIGVuY291bnRlcmVkLiBQbGF5ZWQgdGhhdCBmb3IgeWVhcnMgdG9vLiAKSXNuIGl0IGZ1biB0byBjaGVjayB0aGUgc3RhcnRpbmcgbGluZXVwIGV2ZXJ5IGdhbWUgdG8gc2VlIHdoaWNoIHBvc2l0aW9uIGhlIHBsYXlpbmc/IFNvIHdoYXQgaWYgaGUgYWxyZWFkeSBoYWQgdHdvIHBhc3NlZCBiYWxscy4gCkJhY2sgd2hlbiBJIHVzZWQgdG8gaW5zdGFsbCBjYWJsZSBJbnRlcm5ldCwgSSB3ZW50IHRvIGEgbG90IG9mIGhvbWVzIHRoYXQgaGFkIHBldHMuIEkgbWFkZSBhIHNvcnQgb2YgZ2FtZSBvdXQgb2Ygc2VlaW5nIGhvdyBmYXN0IEkgY291bGQgY2hhcm0gdW5mYW1pbGlhciBhbmltYWxzIHRvIHdoZXJlIHRoZXkgdHJlYXQgbWUgbGlrZSBmYW1pbHkgb3IgYmV0dGVyLiBJIHN0YXJ0IHJpZ2h0IGF0IHRoZSBncmVldGluZywgdGhlIGN1c3RvbWVyIG9wZW5zIHRoZSBkb29yLCBJIHN0YXJ0IHRvIGludHJvZHVjZSBteXNlbGYgdGhlbiBub3RpY2UgdGhlIHBldCBkb3duIGF0IHRoZWlyIGZlZXQgYW5kIGltbWVkaWF0ZWx5IGtuZWVsIGFuZCBicmVhayBvZmYgbXkgZ3JlZXRpbmcgdG8gZGlyZWN0IGl0IGF0IHRoZSBwZXQgaW5zdGVhZC4gTGlrZSwgIkhpLCBJIGZlYW50dXJpIGZyb20gRnVjayBZb3UgQ2FibGUsIEkgaGVyZSB0byAga25lZWxzIGRvd24gd2VsbCBoZWxsb29vIHRoZXJlIHlvdSEiIExldCB0aGVtIGdldCBteSBzY2VudCwgZ2l2ZSBzb21lIHNjcml0Y2hlcywgd2UgYmVzdCBmcmllbmRzIG5vdywgb3duZXJzIG5vdGUgdW51c3VhbCBsYWNrIG9mIGJhcmtpbmcgYW5kIGZ1c3NpbmcuIEkgY2FuIGNvdW50IG9uIG9uZSBoYW5kIHRoZSBhbmltYWxzIGl0IGZhaWxlZCB3aXRoLgpJIGdvb2QiLiAKVGhlc2UgcGxheWVycyBjYW4gYmUgZGFuZ2Vyb3VzIGJlY2F1c2UgaXQgaXMgb2Z0ZW4gZGlmZmljdWx0IHRvIGd1ZXNzIHdoYXQgdGhlaXIgaG9sZSBjYXJkcyBhcmUgKG9mdGVuIGNhbGxlZCBwdXR0aW5nIHRoZW0gb24gYSBoYW5kKS4gCkl0IG5vdCwgYnV0IGl0IGNhbiBlYXNpbHkgYmUuIEFzIG90aGVycyBzYWlkLCBpdCByZWFsbHkgaXMgYSBkcnVnLCBpbiB0aGUgc3RyaWN0ZXN0IHNlbnNlIG9mIHRoZSB0ZXJtLCBsaWtlIGNvY2FpbmUgb3IgaGVyb2luZS4gClNsZWVwIG1vcmUgdG8gbG9zZSB3ZWlnaHQgQW5uYWxzIG9mIEludGVybmFsIE1lZGljaW5lLCAxNTM6IDQ3NSA0NzYsIDIwMTAKSGlnaGVzdCBxdWFsaXR5IGJvb2tzIG9uIEJ1ZGRoaXNtIGFuZCBtaW5kZnVsIGxpdmluZy4gV2UgaG9wZSB0aGlzIGJvb2sgd2lsbCBiZSAuIApPbmUgb2YgdGhlIHN1cmdpY2FsIHJlc2lkZW50cyBoZXJlIGFwcGFyZW50bHkgaGFzIGEgaG9ycmVuZG91cyB0cmFjayByZWNvcmQgZm9yIHRyZWF0aW5nIHRob3NlICJiZWxvdyIgaGVyIHJhbmsgYW5kIHRoZSBnb3NzaXAgc2F5cyBvdXIgaG9tZSBpbnN0aXR1dGlvbiBpc24ndCBnb2luZyB0byBtYXRjaCBoZXIgZm9yIGZlbGxvd3NoaXAgaGVyZS4gCkFuZCB5ZWFoLCBJIGRvIGhhdmUgYSBwZXJzb25hbCBjbGVhciBjdXQgZGVmaW5pdGlvbiwgdG9vLCBhbmQgSSBoYXBweSB3aXRoIGl0LCB0b28uIEFuZCBJIGhhdmUgY2xlYXIgY3V0IGRlZmluaXRpb25zIG9mICJkb25naHVhIiBhbmQgIndlc3Rlcm4gYW5pbWF0aW9uIiBhbmQgIkFtZXJpY2FuIGFuaW1hdGlvbiIgYW5kICJhcnQgbm91dmVhdSBSdXNzaWFuIGFuaW1hdGlvbiIgdG9vLCBmb3IgdGhhdCBtYXR0ZXIuIExlYXZlIGZlZWRiYWNrIGFib3V0IGl0IGhlcmUgYW5kIG1heWJlIEkgbGlzdGVuIHRvIGl0IGFuZCBtYWtlIGNoYW5nZXMgb3Igc29tZXRoaW5nLi4gCkVkbW9udG9uIG1heSBiZSB3YXkgdXAgbm9ydGggYnkgdGhlIDUzcmQgcGFyYWxsZWwsIGJ1dCBpdCBoYXJkbHkgdGhlIGJvb25kb2Nrcy4gV2VsbCwgbm90IHVubGVzcyB5b3UgYWN0dWFsbHkgYXQgQiB0aGUgYnVzeSBsaXR0bGUgMzggc2VhdCBiaXN0cm8gb24gRWRtb250b24gMTA0dGggU3RyZWV0IHRoYXQgZm91bmQgaXRzIHdheSBvbnRvIGVuUm91dGUgbWFnYXppbmUgaW5mbHVlbnRpYWwgdG9wIDEwIGxpc3QgbGFzdCB5ZWFyLgpCZWluZyBTdWNjZXNzZnVsIEFsbCBBcm91bmQKVGhleSBoYXZlIGluY3JlYXNlZCB0aGUgcGFydGljaXBhdGlvbiBmcm9tIGFyb3VuZCAxNDAwIGEgZmV3IHllYXJzIGFnbyB0byAyMjIyIGF0aGxldGVzIHdpdGhvdXQgYW4gaW5jcmVhc2UgaW4gdGhlIHN3aW0gYXJlYS4gSSB0aGluayBtb3N0IE0gZG90IG9yZ2FuaXNlcnMgaGF2ZSBkb25lIHRoZSBzYW1lIGluIEV1cm9wZSBhcyB0aGV5IGhhdmUgc2VlbiB0aGUgcG90ZW50aWFsIGZvciByZXZlbnVlIG1ha2luZyByYXRoZXIgdGhhbiBtYWtpbmcgdGhlIGV2ZW50IHNhZmUsIGZ1biBhbmQgZHJhZnRpbmcgZnJlZSEhIEksIGFuZCBtYW55IG90aGVycyB0aG91Z2h0IHRoZSBzd2ltIHdhcyA0IG1pbnMgbG9uZywgaXQgd2FzIGV4dHJlbWVseSBjcm93ZGVkIHVwIHVudGlsIHRoZSBsYXN0IDEwIG1pbnMgd2hlbiBJIHNvcnQgb2YgaGFkIGEgYml0IG9mIGNsZWFyIHdhdGVyIGluIHdoaWNoIHRvIHN3aW0gd2l0aG91dCBjb2xsaWRpbmcgYW5kIGJlaW5nIGJhdHRlcmVkISEgVGhlIGJpa2UgaXMgdG91Z2ggZXZlbiB0aG91Z2ggdGhlcmUgaXMgYSAzMGttIGZsYXQgc2VjdGlvbiBhdCB0aGUgc3RhcnQgb2YgZWFjaCBsYXAuIApJIGZlZWwgbGlrZSBhIHBvc3RlciBjaGlsZCBmb3IgdGhlbSwgbG9sLCBwZXJvIHlvdSBjYW4gdHJ5IEluIFRvdWNoIENvbW11bml0eSBTZXJ2aWNlcyBzYSBtYXkgQ2h1cmNoIG9mIHRoZSBIb2x5IFRyaW5pdHkgc2EgTWFrYXRpLiAKVGhlIHR3byBtZW4gbWV0IGluIHRoZSBlYXJseSAyMDAwcyBvdmVyIGEgc2hhcmVkIHBhc3Npb24gZm9yIGN5Y2xpbmcuIApZZXMgYW5kIEkgYWx3YXlzIGRvIG15IGJlc3QgcHJhY3RpY2UgdGhlc2UgdGhpbmdzIG9mZmxpbmUsIEkganVzdCBwb2ludGluZyBvdXQgdGhhdCB0aGUgY29tbXVuaXR5IGhlcmUgaXMgcGFydCBvZiB0aGUgcHJvYmxlbSBvZiByaWdodCB3aW5nIHJhZGljYWxpc20uIEl0IGZ1ZWwgdG8gdGhlIGZpcmUuIE5vdCB0aGF0IEkgdGhpbmsgbXkgY29tbWVudHMgY2FuIGlyIHdpbGwgaW5mbHVlbmNlIHRoZSB0b25lIG9mIHRoZSBzdWIsIGJ1dCB0aGVyZXMgbXkgMiBjZW50cyBpZiBhbnlvbmUgY2FyZXMgdG8gcmVhZCBpdC4gCkNlbGluZUhhZ2JhcmQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVW5pbnN0YWxsIHRoZSBhcHAuIChJZiB0aGUgYXBwIHdhc24ndCB1cGRhdGVkLCBJIGltYWdpbmUgeW91J2QgdXBkYXRlLCB0aGVuIGxvZyBvdXQgYW5kIHVuaW5zdGFsbC4pCldoYXQncyBkaWZmZXJlbnQ6IFVubGlrZSBtYXNzYWdlIHRoZXJhcHksIFNwaW5hbCBSZWZsZXggZG9lcyBub3QgaW5jb3Jwb3JhdGUgYW55IHdpZ2dsaW5nIG9yIGtuZWFkaW5nOyBpdCdzIHByaW1hcmlseSBhIHN0YXRpYyB0cmVhdG1lbnQuIFByYWN0aXRpb25lcnMgaG9sZCBwcmVzc3VyZSBvbiBhIHNpbmdsZSBwb2ludCBmb3IgZXh0ZW5kZWQgcGVyaW9kcyBvZiB0aW1lICAgc29tZXRpbWVzIGZvciAyMCBzZWNvbmRzIG9yIGFzIGxvbmcgYXMgc2V2ZXJhbCBtaW51dGVzLCBhcyBuZWVkZWQuCkRhdGEgRm9ybURhdGEgYSA9IEZvcm1EYXRhIFN0cmluZwpIZXJlIGFyZSBzaXggbG9jYWwgb2ZmaWNpYWwgTW92ZW1iZXIgYWN0aXZpdGllcyB5b3UgY2FuIGpvaW4gaW4gYW5kIGhlbHAgdG8gZnVuZHJhaXNlLgpIZSBpcyBhdCBsZWFzdCB2ZXJ5IHRyYW5zcGFyZW50IHdpdGggaG93IGhlIGNvbWVzIHRvIGhpcyBkZWNpc2lvbnMsIGFuZCBoZWxkIGEgd2Vla2x5IGludGVydmlldyB3aXRoIG91ciBsb2NhbCBucHIgc3RhdGlvbiBtb3N0IGV2ZXJ5IHdlZWsgd2hlcmUgaGUgZGlzY3Vzc2VkIGV2ZXJ5dGhpbmcgaGUgZGlkIHRoYXQgd2Vlay4gTXkgZGlzYWdyZWVtZW50cyB3aXRoIGhpbSB3ZXJlIG51bWVyb3VzLCBidXQgSSBmZWx0IGhlIHdhcyB3ZWxsIHJlYXNvbmVkLCBhbmQgSSBhdCBsZWFzdCByZXNwZWN0ZWQgaGlzIGRlY2lzaW9ucy4uIApQZXJoYXBzIHlvdSBhcmUgdGhpbmtpbmcgb2YgYSBzaXR1YXRpb24gd2hlcmUgdHdvIHBlb3BsZSBoYXZlIHRoZSBzYW1lIHBhaXIsIGZvciBleGFtcGxlIGEgcGFpciBvZiBuaW5lcywgYW5kIG9uZSBoYXMgdGhlIGFjZSBraWNrZXIgYW5kIHRoZSBvdGhlciBhIG5vbiBhY2Uga2lja2VyLiBJbiB0aGlzIGNhc2UgdGhlIHBlcnNvbiB3aXRoIHRoZSBhY2Ugd2lucywgYnV0IG9ubHkgYmVjYXVzZSB0aGV5IGJvdGggaGF2ZSB0aGUgc2FtZSByYW5rZWQgcGFpci4KVXNlIGEgdHJlbmR5IG1lZGl1bSBoYWlyY3V0IGluIHNlZHUgaGFpcnN0eWxlIG9yIGEgc2hhZyBjdXQuIApGb3IgaW5zdGFuY2UsIHRoaW5rIGFib3V0IHRoZSB3ZWlnaHQgb2YgdGhlIGNoaXBzIHRoYXQgeW91IHVzZS4gCldoYXQgY2FuIEkgZG8gd2l0aCBhIGNvbGlja3kgYmFieT9BY3R1YWxseS4gWW91IG1heSBub3QgbmVlZCB0byBkbyBhbnl0aGluZy4gCkkgaGFkIGEgY29wIHB1bGwgbWUgb3ZlciBmb3IgNSB0byAxMCBtcGggb3Zlci4gCkkgbWVhbiBqdXN0IGxvb2sgYXQgdGhlIHJhdGUgb2Ygc3VpY2lkZSBpbiBtZW4gYWZ0ZXIgYSBkaXZvcmNlIGFuZCB0ZWxsIG1lIHRoYXQgaW4gbm8gd2F5IGlzIHJlbGF0ZWQgdG8gZmluYW5jaWFsIHJ1aW4gYW5kIHRoZSBsb3NzIG9mIGNoaWxkcmVuIHdoaWNoIG91ciBjdXJyZW50IGRpdm9yY2UgY291cnRzIGRlY2lkZSB1bmZhaXJseS4uIApJZiB5b3Ugc3VzdGFpbiBhIGRhbWFnaW5nIGluanVyeSwgaXQncyBsaWtlbHkgdGhhdCB5b3VyIGNhcmVlciBpbiBzb2NjZXIgd2lsbCBiZSB2ZXJ5IHNob3J0IGxpdmVkLiAKWW91IGNoYW5nZSB5b3VyIHR1bmUuIEFuZCB0aGVpciBjYW5jZXIgc3Vydml2YWwgcmF0ZXMgYXJlIDEwIHllYXJzIGJlaGluZCB0aGUgRXVyb3BlYW4gYXZlcmFnZS4gQW5kIGl0IHdvcmtzLiAKQ291bGQgYmUgZ29vZCBpbiBzaG9ydCB0ZXJtIGJ1dCBpdCBub3doZXJlIG5lYXIgd2hhdCBtb3N0IG9mIHVzIGluIHRoaXMgc3ViIGFyZSBob3BpbmcgZm9yIHdoZW4gaXQgY29tZXMgdG8gYSBidWxsIHJ1bi4gTXkgZmF2IFR3aXRjaCBTdHJlYW1lciB3aG8gSSBpbiBsb3ZlIHdpdGggaGFzIGJlZW4gdHJ5aW5nIHRoZSBwYXN0IGZldyBtb250aHMgdG8gZ2l2ZSBpdCBhIGdvIGFzIGEgY2FyZWVyIGJ1dCBzdGlsbCBjYW4gY3JhY2tlZCA1MCB2aWV3ZXJzLiBTaGUgZ2l2aW5nIGl0IGFub3RoZXIgbW9udGggYnV0IGlmIGl0IGRvZXNuIHdvcmsgb3V0IHNoZSBnb2luZyB0byB1bml2ZXJzaXR5IGluIEV1cm9wZSBhbmQgd29uIHN0cmVhbSBhdCBhbGwgbmV4dCB5ZWFyLiBJIG5lZWQgdGhlIG1hcmtldCB0byBwdW1wIE5PVyBzbyBJIGNhbiBzd29vcCBpbiBqdXN0IGJlZm9yZSBzaGUgZ2l2ZXMgaGVyICJwYWNrIGl0IHVwLCBidXQgdGhhbmsgeW91IHNvIG11Y2ggZm9yIHlvdXIgc3VwcG9ydCIgZXRjLiBnbHVtIHNwZWVjaCB3aXRoIGEgMTBrIEkgQkVMSUVWRSBJTiBZT1UhISEgZG9uYXRpb24gb3V0IG9mIG5vd2hlcmUgYW5kIHNoZSBqdXN0IHN0YXJlcyBhdCB0aGUgc2NyZWVuIGluIGRpc2JlbGllZiBhbmQgc3RhcnRzIGNyeWluZwpBbmQgeW91IGtub3cgd2hhdD8gSWYgdGhlIHN0YXJzIGNhbiBkbyBpdCwgdGhlbiBpdCBPSy4gU28sIGl0IHJlYWxseSBnb3R0ZW4gYmV0dGVyLiAKSWYgeW91IHdvdWxkIGxpa2UgdG8gZGlzY3VzcyB0aGlzIGZ1cnRoZXIsIHBsZWFzZSBmZWVsIGZyZWUgdG8gY29udGFjdCBtZSBkaXJlY3RseSBhdCA5NDkgMjM0IDMzMDEuIEkgd291bGQgd2VsY29tZSB0aGUgb3Bwb3J0dW5pdHkgdG8gc3BlYWsgd2l0aCB5b3UgYW55IHRpbWUuIFNpbmNlcmVseSwgSWFuIFB1bGxhbiBWaWNlIFByZXNpZGVudCBHZW5lcmFsIE1hbmFnZXIuIApKdXN0IHJlbWVtYmVyIHR3byB0aGluZ3M6LiAKWW91IHNlZSwgdGhlIG1hZ2ljIG9mIHVzaW5nIGFuIG9ubGluZSBwb2tlciBjYWxjdWxhdG9yIGtlZXBzIHlvdSBpbiBjaGVjayBtb3JlIG9mdGVuIHRoYW4geW91IGNhbiBrZWVwIHRyYWNrIG9mLCBidXQgdGhlcmUgYXJlIGNlcnRhaW4gc2l0dWF0aW9ucyB3aGVyZSB5b3VyIHBva2VyIGNhbGN1bGF0b3IgTVVTVCBiZSB2ZXRvZWQuIApUaGluayB5b3Ugc2hvdWxkIGp1c3QgYmUgdGhpbmtpbmcgYWJvdXQgd2hhdCB0aGUgb3Bwb25lbnRzIGFyZSB0aGlua2luZy4gSWYgdGhlIHdob2xlIHRhYmxlIGtub3dzIHlvdSBhcmUgYSBwcmVmbG9wIG5pdCB0aGVuIGV2ZXJ5IHRpbWUgdGhleSByYWlzZSB5b3UgaXQgd2lsbCBiZSBhcyBhIGJsdWZmLCBiZWNhdXNlIHRoZXkga25vdyB0aGF0IHlvdSBhcmUgb25seSBjYWxsaW5nIHdpdGggYWNlcy9raW5ncy4gQWxzbyB1bmRlcnN0YW5kIHRoYXQgdGhleSBhcmUgd2lsbGluZyB0byB0YWtlIHRoZSBjaGFuY2UgdGhhdCB5b3UgZG8gaGF2ZSBhY2VzL2tpbmdzL3doYXRldmVyIGVsc2UgeW91IHdvdWxkIGNhbGwgd2l0aCBiZWNhdXNlIDkwJSBvZiB0aGUgdGltZSB5b3UgYXJlIGdvbm5hIGZvbGQuCkRvbnQgYmUgcHN5Y2hvdGljIGFib3V0IGl0LCBqdXN0IHRlbGwgdGhlIGZsaWdodCBhdHRlbmRhbnQgYXMgeW91IGFyZSBib2FyZGluZyBhbmQgdGVsbCB0aGVtIHRoYXQgeW91IGFuZCB0aGUgMjAwIG90aGVyIHBlb3BsZSBpbiB0aGUgcGxhbmUgd291bGQgZmVlbCBtdWNoIHNhZmVyIGlmIHRoZSBwaWxvdCB0b29rIGEgbG9vayBhdCBpdCBiZWZvcmUgZGVwYXJ0aW5nLi4gCkJyaXRpc2ggc2luZ2VyIEphbWVzIEJsdW50IGhhZCB0aGUgbW9uc3RlciBoaXQgIllvdSdyZSBCZWF1dGlmdWwiIGFuZCBpdHMgZG91YmxlIHBsYXRpbnVtIGFsYnVtICJCYWNrIHRvIEJlZGxhbSIgaW4gMjAwNSBhbmQgdGhlIGZvbGxvdyB1cCBnb2xkIGRpc2MgIkFsbCB0aGUgTG9zdCBTb3VscyIgaW4gMjAwNy4KSGF2aW5nIGEgam9iIGV2ZW4gYSBuZWFybHkgZnVsbCB0aW1lIGpvYiB3YXMgd2hhdCBoZWxwZWQgbWUgc3RheSBtb3N0IGZvY3VzZWQgYXQgc2Nob29sIChCUyAgIEVFL0NFKS4gSXQgaGVscHMgYXZvaWQgcHJvY3Jhc3RpbmF0aW9uIGV4Y3VzZXMsIGhlbHBzIHdpdGggbWFuYWdpbmcgdGltZSwgYW5kIGlmIHlvdSB3b3JrIGl0IHdlbGwgZW5vdWdoIHlvdSBhY3R1YWxseSBoYXZlIHNvbWUgc2VtYmxhbmNlIG9mIGluZGVwZW5kZW5jZSBhdCB0aGUgZW5kIG9mIHRoZSBkYXkuIElmIHdvcmtpbmcgaXMgb3ZlcndoZWxtaW5nIGJ1dCB5b3Ugc3RpbGwgbmVlZCBtb25leSBJIHdvdWxkIHRlbGwgYW55b25lIHRvIGZvY3VzIHRoZWlyIGRhbW5lZCBoYXJkZXN0IHRvIGdldCBhIGpvYiB3aXRoIHRoZSBzY2hvb2wgdGhleSBhdHRlbmQuIApIZW5yaSBMZWNsZXJjIGVzdCBuICBQYXJpcyBsZSA1IG9jdG9icmUgMTg3MCwgYyBkdXJhbnQgbGUgc2lnZSBkZSBsYSBjYXBpdGFsZSBwYXIgbGVzIHRyb3VwZXMgYWxsZW1hbmRlcy4gVHVkaWFudCBlbiBtZGVjaW5lIGRhbnMgbGVzIGFubmVzIDE4OTAsIGlsIHNlIGxpZSBkIGF2ZWMgdW4gY2VydGFpbiBQYXVsIFZlcmxhaW5lIGV0IHVuIGNlcnRhaW4gSm9yaXMgS2FybCBIdXlzbWFucywgcG91cnRhbnQgdG91cyBsZXMgZGV1eCBkZSBwbHVzIGRlIDIwIGFucyBzb24gYW4gKFZlcmxhaW5lIGV0IG4gZW4gMTg0NCwgSHV5c21hbnMgZW4gMTg0OCkuIApXaGlsZSBwaXRjaGluZyBmb3IgdGhlIFdoaXRlIFNveCwgU2VhdmVyIGdvdCBoaXMgMzAwdGggd2luIGF0IFlhbmtlZSBTdGFkaXVtLCBhbmQgaGUgZGlkIGl0IGluIHN0eWxlIHdpdGggYSBzaXggaGl0dGVyIGluIGEgNCAxIHZpY3RvcnkuIEhlIGZpbmlzaGVkIGhpcyBjYXJlZXIgd2l0aCBCb3N0b24gaW4gMTk4Ni4gClRoZSBnb3Zlcm5tZW50LCBhbmQgdGhlIHBlb3BsZSwgY2FuIGp1c3QgZ28gb24gbGlrZSBiZWZvcmUuIApTZWN1cml0eSBndWFyZCBmb3VuZCBzbGFpbiBpbiB2ZWhpY2xlIGluIE5MViBNYW4gZmFjZXMgcmVja2xlc3MgZHJpdmluZyBjb3VudCBpbiBmYXRhbCBCb3VsZGVyIENpdHkgY3Jhc2ggS2ltbWVsIExpdmUgd2lsbCBmaWxtIDUgc2hvd3MgYXQgUGxhbmV0IEhvbGx5d29vZCBpbiBMYXMgVmVnYXMgSGVuZGVyc29uIFBvbGljZSBpbnZlc3RpZ2F0ZSBmYXRhbCBoZWFkIG9uIGNyYXNoIE1hcmsgU3RvbmUgc2lnbnMgOCB5ZWFyLCAkNzYgbWlsbGlvbiBleHRlbnNpb24gd2l0aCBHb2xkZW4gS25pZ2h0cwpXaW5uaWNraSBzYWlkIGhlIGhhcyBlbmNvdW50ZXJlZCBtYW55IHBhdGllbnRzIHRoYXQgaGF2ZSBhdm9pZGVkIHRoZSBkZW50aXN0IGZvciB5ZWFycywgc28gaGUgZG9lc24ndCBtaW5kIGhhdmluZyB0byB0YWtlIGFuIGV4dHJhIDIwIG9yIDMwIG1pbnV0ZXMgdG8gbWFrZSB0aGVtIGZlZWwgY29tZm9ydGFibGUuIEhlIGhhcyBldmVuIGhhZCBzb21lIHBhdGllbnRzIHNvIHNjYXJlZCB0aGF0IHRoZXkgd29uJ3QgaW5pdGlhbGx5IG9wZW4gdGhlaXIgbW91dGhzLgpQbGVhc2Ugc2VlIHRoZSB3aWtpIGZvciBtb3JlIGRldGFpbGVkIGV4cGxhbmF0aW9ucyBvZiB0aGUgcnVsZXMuIFdoZW4gcGVyZm9ybWluZyBhIGNvdmVyIG9mIE1hcmxleSdzICJXYXIiIG9uIFNOTCwgcmV3cml0aW5nIGEgZmV3IG9mIHRoZSBseXJpY3MgdG8gYWRkcmVzcyBjaGlsZCBhYnVzZS4gCllvdSBzaWduIGEgcmVudGFsIGNvbnRyYWN0IHdpdGggdGhlIG93bmVyL3Byb3BlcnR5IG1hbmFnZXIuIApUaGUgaW5zdXJhbmNlIGRlZHVjdGlibGUgd2lsbCBiZSBhIGNvbW1vbiBleHBlbnNlIG9mIHRoZSBzdHJhdGEgY29ycG9yYXRpb24sIHdoaWNoIHRoZSBzdHJhdGEgbWF5IHBheSBmcm9tIHRoZSBvcGVyYXRpbmcgZnVuZCwgY29udGluZ2VuY3kgZnVuZCBvciBpc3N1ZSBhIHNwZWNpYWwgbGV2eSB0byB0aGUgb3duZXJzLiAKSWYgaGUgaGFkIG9uZSB3aXRoIGEgaGlnaGVyIHNldHRpbmcgYW5kIHdhcyBhbHJlYWR5IGphbW1pbmcgaXQgaW50byB5b3VyIGZpbmdlciB0aGVuIEkgY2FuIHNlZSBob3cgdGhhdCB3b3VsZCBodXJ0IGxpa2UgYSBiaXRjaC4gCkJ1dCBzYWRseSwgYW5kIGlyb25pY2FsbHksIGJlY2F1c2Ugb2Ygc2Nob29sLCBJIG5lZ2xlY3RlZCBteSB2ZXJ5IHN0dWR5Z3JhbSBhY2NvdW50LiAKQmlsZCByZXBvcnRzIHRoYXQgSGFtaWx0b24gYW5kIGhpcyBtYW5hZ2VtZW50IGFyZSBub3cgcHVzaGluZyBmb3IgYSBuZXcgRVVSIDkwIG1pbGxpb24gZGVhbCBmb3IgMjAxNiwgMjAxNyBhbmQgMjAxOC4KQWx0aG91Z2ggUGVycnkgd2FzIGJlc3Qga25vd24gZm9yIGhpcyByb2xlIGFzIE1jS2F5LCBoZSBlbmpveWVkIGEgcHJvbGlmaWMgZmlsbSBhbmQgdGVsZXZpc2lvbiBjYXJlZXIuIE1vc3QgcmVjZW50bHksIGhlIHBsYXllZCBjb25zdHJ1Y3Rpb24gY29tcGFueSBvd25lciBGcmVkIEFuZHJld3MsIGZhdGhlciBvZiBtYWluIGNoYXJhY3RlciBBcmNoaWUgQW5kcmV3cywgZm9yIHRocmVlIHNlYXNvbnMgb24gIlJpdmVyZGFsZSwiIHRoZSBDVyBzZXJpZXMgdGhhdCBnaXZlcyBhIGRhcmsgdGFrZSBvbiAiQXJjaGllIiBjb21pY3MuIEEgZm91cnRoIHNlYXNvbiBoYXMgYmVlbiBzbGF0ZWQuClF1aXRlIHRoZSBvY2Nhc2lvbiB0aGVuLgpIb3BlZnVsbHkgdGhpbmdzIGFyZSBiZXR0ZXIgbm93LiAKUGx1cyBwcm9zYXF1ZW1lbnQsIGRhbnMgbGUgU2FoYXJhLCBsIHNlIHNlcnQgZGUgbGEgZGF0dGUgcG91ciBib3VjaGVyIGRlIHRvdXQgYXV0cmVzIHRyb3VzOiBvbiBwdHJpdCwgYXZlYyB1biBwZXUgZGUgc2FibGUgZXQgZGUgbGEgY3JvdHRlIGRlIGNodnJlLCBkZXMgZGF0dGVzIHBvdXIgZW4gZmFpcmUgdW4gZW5kdWl0IGxvcnNxdSBlc3QgYmVzb2luIGRlIGNvbWJsZXIgcXVlbHF1ZSBmaXNzdXJlIGRhbnMgdW4gbXVyLiBDIGF1c3NpIHVuIHJlbWRlLCBiaWVuIHNyLiAKUGFydGljaXBhbnRzIGluY2x1ZGVkIGluIHRoZSByZXZpZXdNYWxlIGFuZCBmZW1hbGUgY2FuY2VyIHBhdGllbnRzIHVuZGVyZ29pbmcgYm9uZSBtYXJyb3cgdHJhbnNwbGFudGF0aW9uLCBib25lIG1hcnJvdyBhc3BpcmF0aW9uLCBvciBsdW1iYXIgcHVuY3R1cmUgdHJlYXRtZW50cy4gCkEgZnVsbCBjb25zdWx0YXRpb24gd2lsbCBiZSBjYXJyaWVkIG91dCBwcmlvciB0byB5b3VyIGZpcnN0IHRyZWF0bWVudCB0byBlbnN1cmUgdGhhdCBkZWVwIHRpc3N1ZSBtYXNzYWdlIGlzIHJpZ2h0IGZvciB5b3UgYW5kIHRvIGRldmlzZSBhbiBpbmRpdmlkdWFsIHRyZWF0bWVudCBwbGFuIHRvIG1lZXQgeW91ciBzcGVjaWZpYyBuZWVkcy4KQmFjayBpbiAyMDA2aXNoIGEgY291cGxlIG9mIG15IGJ1ZGRpZXMgd2VyZSBpbiBWZWdhcyBhbmQgc2F3IGhpbSBwdWxsIHVwIHRvIHRoZSB2YWxldCBpbiBhIE1lcmNlZGVzIE1jTGFyZW4gU0xSLiAKQmxhemVkQW5kQ29uZnVzZWRDcnlwdG8gR29kICBRQzogQlRDIDU0LCBDQyA0OApTbyBwZXJzb25hbGx5IEkgdGhpbmsgaXQgaXMgdGhlIG1vcmUgbGlrZWx5IHNjZW5hcmlvLiAKMyB3aGVuIGl0IHBsYW5zIHRvIGNvbnRpbnVlIHRha2luZyBwdWJsaWMgY29tbWVudCBib3RoIGZyb20gdGhlIG1hc3NhZ2UgdGhlcmFwaXN0cyBhbmQgTWV0cm8uSm9yZ2Vuc2VuIHNhaWQgdGhlIGxhdyB3YXMgaW50ZW5kZWQgdG8gcmVwbGFjZSBhbiBvcmRpbmFuY2UgdGhhdCBoYWQgYmVlbiBjb2JibGVkIHRvZ2V0aGVyIG92ZXIgdGhlIGxhc3QgZml2ZSB5ZWFycyBhbmQgdG8gcHVyZ2UgcHJvc3RpdHV0aW9uIGZyb20gdGhlIGxlZ2l0aW1hdGUgbWFzc2FnZSB0aGVyYXB5IGJ1c2luZXNzIGluIExhcyBWZWdhcy5UaGVyYXBpc3RzIG9iamVjdGVkIHRvIHVzaW5nIHRoZSBtYXNzYWdlIHRoZXJhcGlzdCBjb2RlIHRvIGJhdHRsZSBwcm9zdGl0dXRpb24uU2FsbHkgSGFja2luZywgYW4gdW5wYWlkIGxvYmJ5aXN0IGZvciBhIGdyb3VwIG9mIG1hc3NhZ2UgdGhlcmFwaXN0cywgc2FpZCBsYW5ndWFnZSBpbiB0aGUgYmlsbCBwcm9oaWJpdGluZyBzZWUgdGhyb3VnaCBvdXRmaXRzLCBtaW5pbXVtIGxpZ2h0aW5nIGFuZCB0d28gd2F5IGdsYXNzIHdhcyAiZGVtZWFuaW5nIiB0byBsZWdpdGltYXRlIG1hc3NhZ2UgdGhlcmFwaXN0cy5UaGVyYXBpc3RzIGFsc28gb2JqZWN0ZWQgdG8gbGFuZ3VhZ2UgaW4gdGhlIGNvZGUgdGhhdCBoYWQgYmVlbiBhcHByb3ZlZCBpbiAxOTk1IGFuZCAxOTk2IHJlcXVpcmluZyBvdmVyc2lnaHQgYnkgYSBsaWNlbnNlZCBwaHlzaWNpYW4sIG9zdGVvcGF0aCBvciBjaGlyb3ByYWN0b3IgYW5kIHByb2hpYml0cyBjcm9zcyBnZW5kZXIgbWFzc2FnZSBvbiBvdXRjYWxscy4gCkZvciB0aGlzIHR5cGUgb2YgYm9keSBydWIsIG15IHZlcnksIHZlcnkgc29mdCBmaW5nZXJ0aXBzIGV2ZXIgc28gZ2VudGx5IGdsaWRlIGFjcm9zcyB0aGUgb3V0ZXIgbGF5ZXIgb2YgeW91ciBza2luLiBJIHVzZSBhIHRvdWNoIHRoYXQgaXMgbGlnaHRlciB0aGFuIGEgZmVhdGhlci4gSW4gZmFjdCwgdGhpcyBpcyBjYWxsZWQgYSBmZWF0aGVyIHRvdWNoLiAKVGhpcyBqdXN0IHJlbWluZHMgbWUgb2YgaG93IGRpZmZpY3VsdCBlbW90aW9ucyBhcmUuIApXZSB3YW50IG91ciBtZW4gdG8gZmVlbCBsaWtlIG1hcnJ5aW5nIHVzIHdvbiByZXN1bHQgaW4gYSB3aWZlIHdobyBuYWdzLCBuZWdvdGlhdGVzIGZvciBzZXgsIGxldHMgaGVyc2VsZiBnbywgYW5kIGlzIGdlbmVyYWxseSB1bnBsZWFzYW50IGFuZCBpcyBwdXR0aW5nIGhpbSBkb3duLiAKSXQgZ2V0cyBpbnRvIHRoZSBuaXR0eSBncml0dHkgb2YgaW5kaXZpZHVhbCBjYXNlcyB3aGVuIGl0IGNvbWVzIHVwIHRvIHRoZSBkZWNpc2lvbiB0byBmaWxlIGNoYXJnZXMsIHdoaWNoIGlzIGhvbmVzdGx5IHByZXR0eSBhcmJpdHJhcnkuIFRoZSBwcm9ibGVtIGlzICAgd2hhdCBsZXZlbCBvZiBldmlkZW5jZSBjYW4geW91IGV4cGVjdCwgYW5kIHdoYXQgbW90aXZhdGlvbiB3b3VsZCBlaXRoZXIgcGFydHkgaGF2ZSB0byBsaWU/IEl0IHdvdWxkIGJlIGV4dHJlbWVseSBzdXNwaWNpb3VzIHRvIGhhdmUgbm8gZXZpZGVuY2Ugb2YgYSBuZXcgY2FyLCBhbmQgdGhlcmUgd291bGQgYmUgYSBsb3Qgb2YgbW90aXZhdGlvbiBmb3IgY2xhaW1pbmcgaXQgd2FzIHN0b2xlbiAgIG5hbWVseSwgZmluYW5jaWFsIGNvbXBlbnNhdGlvbi4gSG93ZXZlciwgbW9zdCBwZW9wbGUgZG9uIGhhdmUgZG9jdW1lbnRhdGlvbiBvZiB0aGVpciBsYXVuZHJ5LCBhbmQgdGhlcmUgd291bGRuIGFwcGVhciBvbiB0aGUgc3VyZmFjZSB0byBiZSBtdWNoIG1vdGl2YXRpb24gZm9yIGx5aW5nLiAKSW5zZ2VzYW10IG1zc2VuIHJ1bmQgMjAwIEhvdGVscyB1bmQgR3N0ZWh1c2VyIGdlYmF1dCB3ZXJkZW4sIHVtIGRlciBGb3JkZXJ1bmcgZGVzIE9seW1waXNjaGVuIEtvbWl0ZWVzIG5hY2ggYmVyIDQyLjAwMCBiZXJuYWNodHVuZ3NtZ2xpY2hrZWl0ZW4gZ2VyZWNodCB6dSB3ZXJkZW4uIApUaGlzIGlzLCB3ZSBhcmUgdG9sZCwgc2VjdXJpdHkuIEJ1dCBJIGRvdWJ0IGl0IHdpbGwgbWFrZSBhbnkgb2YgdXMgc2FmZXIuLiAKWW91J2xsIGdldCBhIG11Y2ggbW9yZSBnZW51aW5lIGV4cGVyaWVuY2UgYW5kIGhvdXNlbWF0ZXMgdGhhdCBhcmUgbW9yZSBsaWtlbHkgbm9uIHNub2JieSBob3VzZW1hdGVzIHRoYXQgd2FudCB0byBnZXQgdG8ga25vdyB5b3UuckFNYnJpcyAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29JZiB5b3Ugd2FudCBhIGdvb2QgbmlnaHQgb3V0IGF0IEVhZ2xlIHN0cmVldCBvbiBhIFN1bmRheSBJIHN0YXJ0IGF0IGVpdGhlciBCbGFja2JpcmQgKG9wZW4gdGlsbCAxMDozMCkgb3IgUml2ZXJsYW5kIChvcGVuIHRpbGwgMTJwbSkuIApBcyBmb3IgU2FicmluYSwgdGhpcyBpcyBhbiB1bnBvcHVsYXIgb3BpbmlvbiwgYnV0IHNoZSBrbm93cyB3aGF0IHNoZSBkb2luZy4gCkV4YW1wbGU6IHRoZXJlIGFyZSBubyBydWxlcyBhZ2FpbnN0IGNvbnNlcnZhdGl2ZSBzdWJtaXNzaW9ucyBvciBjb25zZXJ2YXRpdmUgb3BpbmlvbnMgaW4gL3IvcG9saXRpY3MsIGJ1dCB0aGUgdXNlcnMgY29uc2lzdGVudGx5IGVuc3VyZSB0aG9zZSB2aWV3cyBkb24gZ2V0IGV4cG9zdXJlIGluIHRoZSBzdWJtaXNzaW9ucyBvciBpbiB0aGUgY29tbWVudHMgdGhyb3VnaCB0aGVpciB2b3RpbmcsIG5vdCBiZWNhdXNlIG9mIHRoZSBtb2RlcmF0aW9uIHRlYW0uLiAKQnV0IG9ubHkgaW4gdGhlIHNlbnNlIHRoYXQgdGhlIGFuc3dlcnMgcmFuZ2UgZnJvbSAibW9yZSBwb3dlciB0aGFuIHRoZSB1bml2ZXJzZSBpcyBlcXVpdmFsZW50IHRvIiB0byAib25seSBhIGZldyBodW5kcmVkIHRpbWVzIG1vcmUgdGhhbiB0aGUgbHVtaW5vdXMgaW50ZW5zaXR5IG9mIHRoZSBlbnRpcmUgZ2FsYXh5Ii4gClVwcGluZyB0aGUgYW50ZSBpbiBTcHJpbmdmaWVsZApUaGVyZSBpcyBubyB3YXkgd2UgY291bGRuIGZpZ3VyZSBvdXQgYSBiZXR0ZXIgc3lzdGVtIGFuZCB0aGVyZSBpcyBubyB3YXkgdGhhdCBzb21lIG9mIHRoZSBqb2JzIHRoYXQgZXhpc3QgaW4gaGVhbHRoIGluc3VyYW5jZSBjb21wYW5pZXMgY2FuIGJlIGZvdW5kIG91dHNpZGUgb2YgdGhlIGluZHVzdHJ5LiAKRHJvcHBlZCBpbiBvbiB0aGUgbmVhcmVzdCBvbmUsIGNhbWUgZmFjZSB0byBmYWNlIHdpdGggYW4gYWN0dWFsIFRoYXJnb2lkIGluc3BlY3RpbmcgdGhlIHdyZWNrYWdlIG9mIHRocmVlIGh1bWFuIHNoaXBzLCBlYWNoIHRvdWdoIGVub3VnaCB0byBlYXNpbHkgZGVzdHJveSBtaW5lIGJ5IGl0c2VsZi4gSSByYW4gbGlrZSBoZWxsIHVudGlsIEkgcmVhbGl6ZWQgdGhlIGFsaWVuIHdhc24gcHVyc3VpbmcgbWUsIHRoZW4gc3RvcHBlZCBhbmQgd2F0Y2hlZCBpdCBkbyBpdHMgdGhpbmcgdW50aWwgaXQganVtcGVkIG91dC4gCldlIGFyZSB0cnlpbmcgYSBkaWZmZXJlbnQgdHJlYXRtZW50LCBTeXN0ZW1pYyBQaG90b2R5bmFtaWMgVGhlcmFweSB3aGljaCB0cmVhdHMgdGhlIHdob2xlIGJvZHksIG5vdCBqdXN0IG9uZSBhcmVhIGFzIHdpdGggcmFkaWF0aW9uLiAKSXQgYW1hemVzIGhvdyBhIGxvdCBvZiBwZW9wbGUgb24gci9TdGFyd2FycyB3aWxsIGJhc2ggdGhlIHNlcXVlbHMgdGhlbiBpbW1lZGlhdGVseSBwcmFpc2UgdGhlIHByZXF1ZWxzLiBMaWtlIHRoZXkgc2F5IHRoYXQgdGhlIHNlcXVlbHMgaW50cm9kdWNlZCBwb2xpdGljcyBpbnRvIHN0YXIgd2FycyBmb3JnZXR0aW5nIGFib3V0IHRoZSBsaXRlcmFsLCBhY3R1YWwgcG9saXRpY3Mgb2YgdGhlIHByZXF1ZWxzLiBUaGUgY29nbml0aXZlIGRpc3NvbmFuY2UgaXMgc3Ryb25nIHdpdGggdGhvc2Ugb25lcy4gVGhlcmUgZ29vZCBhbmQgYmFkIHRoaW5ncyB3aXRoIGFueSBzdGFyIHdhcnMgZmlsbSwgaWYgeW91IGxvb2sgaGFyZCBlbm91Z2ggYnV0IHRvIGNhbGwgdGhlIFNUIG9CakVjVGlWZUx5IEJhZCBpcyBqdXN0IG91dHJhZ2VvdXNseSBkaXNob25lc3QuCkJ1dCBob25lc3RseSBmb3IgbWUgdGhpcyBxdWVzdGlvbiBpcyBoYXJkIHRvIGFuc3dlci4gSSB0aGluayBJIGZlZWwgc2V4dWFsIGF0dHJhY3Rpb24gc29tZXRpbWVzLiBVc3VhbGx5IGl0IG1vcmUgdGhlIGlkZWEgb2YgYXR0cmFjdGlvbiB0aGF0IEkgYXR0cmFjdGVkIHRvLiBJdCBzb3VuZHMgd2VpcmQgYW5kIGlzIGEgYml0IGRpZmZpY3VsdCB0byBleHBsYWluLiBUaGVyZSBhcmUgcGVyc29ucyBhbmQgYWN0b3JzIHdobyBJIHRoaW5rIGFyZSBhdHRyYWN0aXZlIGluIGEgc2V4dWFsIHdheS4gQnV0IHRoZXNlIHNleHVhbCB0aG91Z2h0cyBJIGhhdmUgYXJlIGtpbmRhIGFic3RyYWN0IEkgZ3Vlc3MuIFdoZW4gaXQgY29tZXMgdG8gcmVhbCBsaWZlIHNpdHVhdGlvbnMgSSB1c3VhbGx5IGZlZWwgbGlrZSB0aGUgb3RoZXIgcGVyc29uIG1pZ2h0IGFzIHdlbGwgYmUgYSBzdG9uZS4gSSB0aG91Z2h0IG1heWJlIEkgaGF2ZSBzb21lIGZyZWFreSBraW5kIG9mIGFueGlldHkgb3Igd2hhdGV2ZXIgbWVudGFsIHByb2JsZW0gYnV0IEkgZG9uIHRoaW5rIGl0IHNvbWV0aGluZyBsaWtlIHRoYXQuIEkgaGFkIGEgc2Vjb25kIGRhdGUgdGhlIG90aGVyIGRheSBhbmQgdGhlIGd1eSB3YXMgcmVhbGx5IGdyZWF0LiBMaWtlIExldCBCdXQgd2hlbiB3ZSBraXNzZWQgaXQgZ2F2ZSBtZSB0aGUgZmVlbGluZyBsaWtlIEkgd2FzIGtpc3NpbmcgbXkgYmVzdCBidWRkeS4gSXQgd2FzIGp1c3Qgb2RkIGFuZCBub3RoaW5nIGVsc2UuIEFuZCBJIGRvbiB3YW50IHRvIGdldCBzZXh1YWwgd2l0aCBwZXJzb25zIEkgZG9uIGZlZWwgY29tZm9ydGFibGUgd2l0aC4gQXMgc29tZW9uZSB0aGF0IHByZXR0eSBmYXIgdG93YXJkcyBib3RoLCB5b3Ugc291bmQgc29tZXdoYXQgbGlrZSBtZS4gWW91IG5vdCBzZXh1YWxseSBhbmQgcm9tYW50aWNhbGx5IGRlYWQsIGJ1dCB0aG9zZSBmZWVsaW5ncyBqdXN0IGRvbiBkbyB3aGF0IHRoZXkgc2hvdWxkIGRvIHRvIHlvdS4gSSBrbm93IHdpdGggbWUsIEkgYmFzaWNhbGx5IGhhdmUgdG8gZm9yY2UgbXlzZWxmIHRvIGhhdmUgc2V4dWFsIHRob3VnaHRzKGJ1dCBJIGRvIGZpbmQgY2VydGFpbiBwZW9wbGUgYW5kIGFjdGlvbnMgc2V4dWFsbHkgcGxlYXNpbmcpLiBSb21hbnRpY2FsbHksIGl0IHRha2VzIHNvbWV0aGluZyBzcGVjaWFsIGZvciBtZSB0byByZWFsbHkgYmUgYXR0cmFjdGVkIHRvIHlvdSBlbm91Z2ggdG8gZXZlbiB0aGluayBhYm91dCBhc2tpbmcgeW91IG91dC4gQW5kIGtpc3NlcyBtaWdodCBhcyB3ZWxsIGJlIGh1Z3MuClRoZSBudW1iZXIgb2YgdG90YWwgcHJvZHVjdHMsIHRoZSBudW1iZXIgb2YgZG9zZXMsIHRoZSBudW1iZXIgb2YgcGlsbHMgcGVyIGRvc2UsIHRoZSBzaXplIGFuZCBzaGFwZSBvZiB0aGUgcGlsbHMsIGFuZCBhZnRlcnRhc3RlIGFyZSBpbXBvcnRhbnQgaXNzdWVzIHRoYXQgd2lsbCBlaXRoZXIgaW1wcm92ZSBvciByZWR1Y2UgY29tcGxpYW5jZS4gCkZpdHRpbmcgeW91ciBjdXN0b20gcG9rZXIgdGFibGUgd2l0aCB0aGlzIGZlbHQgY2xvdGggaXMgYWxzbyBlYXN5IHNpbmNlIHlvdSBtZWFzdXJlIGFuZCB5b3Ugb3JkZXIgaG93IG1hbnkgbGluZWFyIHlhcmRzIHlvdSBuZWVkLi4gClZhdW5tYiAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvClVsbGlvdHQgZWFybmluZ3MgdmFyaWVkIGVub3Jtb3VzbHkuIEluIG9uZSB0b3VybmFtZW50IGFsb25lIGhlIHdvbiAzMjUsMDAwOyBidXQgaGUgbG9zdCAxOTAsMDAwIGluIGFub3RoZXIgaGlnaCBzdGFrZXMgY29tcGV0aXRpb24uIGNhbiBnZXQgYmFkIGx1Y2sgZm9yIGEgZmV3IHdlZWtzLCBidXQgeW91IGp1c3Qga2VlcCBnb2luZyB1bnRpbCB5b3Ugd2luIGFnYWluLCBoZSBleHBsYWluZWQuIG5vIHBvaW50IHdvcnJ5aW5nIHdoZW4geW91IGxvc2UuIEJ1dCBoZSBuZXZlciBsb3N0IHRoZSBraWxsZXIgaW5zdGluY3QuIHBsYXllZCBteSBuaW5lIHllYXIgb2xkIHNvbiBhdCBwb2tlciBhbmQgYmVhdCBoaW0sIGhlIGFkbWl0dGVkIGluIDIwMDYuIGNvdWxkIGhhdmUgbGV0IGhpbSB3aW4gYnV0IEkgZGlkbgpZYW1haGE4OTMgdQpJIGRvbiBrbm93IHRoZSBhbnN3ZXIuIE15IGN1cnJlbnQgZ2YgaXMgImN1dGUiIGJ1dCBub3QgbGlrZSB0aGlzLiBTaGUgc21hcnQgYW5kIGZ1bm55IGFuZCBsb3ZpbmcvYWZmZWN0aW9uYXRlLCBhbmQgZ3JlYXQuIEJ1dCBzaGUgaXNuIHRoZSBzaG93IHN0b3BwZXIgSSB1c3VhbGx5IGdvIGZvci4gRG8gSSBtaXNzIGl0PyBZZXMuIFNvbWV0aW1lcyBJIGxvb2sgYW5kIHRoaW5rLiBjcmFwLiBidXQgdGhlbiBzaGUgbGVhdmVzIG1lIGEgbm90ZSBhYm91dCBob3cgaGFuZHNvbWUgSSBhbSAoSSBhbSBub3QsIGJ5IHRoZSB3YXksIGJ1dCB0aGF0IE9LKSBhbmQgeW91IHJlYWxpemUgdGhpcyBpcyB3YXkgYmV0dGVyIHRoYW4gbGlzdGVuaW5nIHRvIGhlciBjb25mdXNlZCBiZWNhdXNlIHNoZSBvbmx5IGVhdGVuIG9saXZlcyBmb3IgdGhlIGxhc3QgMyBkYXlzLgpTaGUgcmVhbGx5IG5vdCB0aG91Z2guIEkgbmVhcmluZyB0aGUgZW5kIG9mIGJlY29taW5nIGEgZG9jdG9yIGFuZCBoYXZlIGEgQlMgaW4gaW1tdW5vbG9neSBhbmQgSSBubyBtb3JlIHF1YWxpZmllZCB0byBnaXZlIG5ldXJvc2NpZW5jZSBhZHZpY2Ugb3IgdHJ1bHkgdW5kZXJzdGFuZCB0aGUgbGl0ZXJhdHVyZSBhcyBzaGUgaXMgd2l0aCBpbW11bm9sb2d5LgpUaGlzIGlzIG5vdCBhIHBlcnNvbiB3aG8gdGhpbmtzIG91dHNpZGUgb2YgdGhlIGJveCBvZiBOZW9saWJlcmFsIGVjb25vbWljIHRoZW9yeSAgZ2l2ZSBtb25leSB0byB0aGUgYmFua3MgYW5kIHRoZSByaWNoIGFuZCBwcm9zcGVyaXR5IHdpbGwgZm9sbG93IGZvciBhbGwuLiAKSXQgaXMgYSB2ZXJ5IHdhbGthYmxlIGNhbXB1cy4gCk5hcHMgd29uIHRoZSB0b3NzIGFuZCBlbGVjdGVkIHRvIHN0YXJ0LiBBIDUxIHN0YXJ0IHdhcyBub3Qgd2hhdCB0aGV5IHdhbnRlZCwgYnV0IHRoZSBXYW5kZXJlcnMgY291bGQgbm90IGNhcGl0YWxpc2UgYXMgdGhlaXIgZmlyc3QgaGFuZCBvZiA1OCBjb3VsZCBvbmx5IHB1bGwgNy4gT3VyIHNlY29uZCBoYW5kIHRob3VnaCBwdXQgdXMgaW4gYSB2ZXJ5IHN0cm9uZyBwb3NpdGlvbiBhcyB3ZSByZWFjaGVkIDcwIGluY2x1ZGluZyBhIDE2IHNwYXJlIGZyb20gQm9vbSBCb29tIEJlbm5ldHQuIApGb3IgZGF0YSBzY2llbmNlIHRoYXQgaXMgZGVmaW5pdGVseSBub3QgdHJ1ZS4gTWFueSBhZ2VuY2llcyBhcmUgcGF5aW5nIDYgZmlndXJlcyBmb3IgYW55b25lIHdobyBoYXMgZXhwZXJpZW5jZSBpbiBkYXRhIHNjaWVuY2UuClBUU0QuIApNYXliZSBpZiBFUlcgd2FzbiBzbyBhd2Vzb21lIHRoZW4gaXQgY291bGQgYmUgYXJndWVkIHRoYXQgVGhhbmRpZSB3b3VsZCBkZXNlcnZlIGEgYmVzdCBhY3RyZXNzIG5vZD8gSSB0aGluayB0aGUgYXdhcmRzIGJvZGllcyBwbGF5IGZhc3QgYW5kIGxvb3NlIGVub3VnaCB3aXRoIHRoZSBydWxlcyB0aGF0IGl0IHdvdWxkIGhhdmUgYmVlbiBwb3NzaWJsZS4gTWF5YmUgTWFldmUgd2lsbCBlbmQgdXAgYXMgdGhlIGZvY2FsIHBvaW50IG5leHQgc2Vhc29uIGFuZCBnZXQgaGVyIGR1ZS4gRWl0aGVyIHdheSBJIGhhcHB5IHJlZ2FyZGxlc3Mgb2YgdGhlIGF3YXJkcyBub2RzIHRoZXkgcmVjZWl2ZSA6KS4gCk9uIHRoZSBuaWdodCBvZiB0aGUgbXVyZGVyczsgaXQgbGVmdCBmb3VyIGhvdXJzIGxhdGVyLiAKQW5kIHRoZW4gYSBzaGl0IHRvbiBvZiBnZWwsIG1pY3JvZmliZXIgdG93ZWwsIHRoZW4gZG9uJ3QgdG91Y2ggaXQgd2hpbGUgaXQgZHJpZXMuIApBcyBJIGRlc2NyaWJlIGhvdyB0aGUgY2hhcmFjdGVycyAgIHdobyBhdCB0aGlzIHBvaW50IGhhdmUgYmVlbiB3YXNoZWQgb3ZlcmJvYXJkIGFuZCBhcmUgZmFpbGluZyB0aGVpciByaWRpY3Vsb3VzbHkgZGlmZmljdWx0IFN3aW1taW5nIHNraWxsIGNoZWNrcyAoYXMgaW50ZW5kZWQpICAgc3RhcnQgdG8gc3RydWdnbGUga2VlcGluZyB0aGVpciBoZWFkcyBhYm92ZSB3YXRlciBvbmUgb2YgdGhlIHBsYXllcnMgYXNrcyB0byB0YWtlIGEgc2hvcnQgYnJlYWssIGV4Y3VzZXMgaGVyc2VsZiwgYW5kIGdvZXMgb3V0IG9udG8gdGhlIGJhbGNvbnkgdG8gZ2V0IHNvbWUgZnJlc2ggYWlyLiBBcyBpdCBsYXRlciB0dXJuZWQgb3V0IHNoZSBsb3N0IGhlciBmYXRoZXIgaW4gYSBib2F0aW5nIGFjY2lkZW50IGEgY291cGxlIG9mIHllYXJzIGFnbyBpbiB3aGljaCBzaGUgaGVyc2VsZiBhbmQgaGVyIG1vdGhlciBhbG1vc3QgZHJvd25lZCwgdG9vLiBUaGUgc2NlbmUgYnJvdWdodCBiYWNrIHNvbWUgdmVyeSBiYWQgbWVtb3JpZXMuLiAKVGhlIGZpZXJ5IGZ1bmRhbWVudGFsaXN0IGxlYWRlciBoYXMgcHJlYWNoZWQgYXJtZWQgZGVmaWFuY2Ugb2YgdGhlIGdvdmVybm1lbnQgaW4gYSBjcnVzYWRlIGZvciBncmVhdGVyIFNpa2ggcmlnaHRzLCBhbmQgb2ZmaWNpYWxzIGFjY3VzZSBoaW0gb2YgbWFzdGVybWluZGluZyBhIGNhbXBhaWduIG9mIHRlciAgcm9yaXNtIHRoYXQgaGFzIGNsYWltZWQgbmVhcmx5IDQwMCBsaXZlcyBpbiB0aGUgcGFzdCBmb3VyIG1vbnRocy4gCkF0ZWxpZXJzIGZvcm1hdGlvbiBBbmltYXRpb24gYmlibGlxdWUKVGltbW9ucywgbmVlZGluZyBvbmx5IGNoYW5nZSwgc2F3IHRoZSBjYXNoIHJlZ2lzdGVyIGFuZCB0aGUgY2hlY2tvdXQgY291bnRlciB0byBoaXMgbGVmdC4gSGUgYXBwcm9hY2hlZCB0aGUgY291bnRlciBhbmQgd2FpdGVkIGZvciB0aGUgY2xlcmsuIFRoZXJlIHdhcyBub25lIGluIHNpZ2h0LiAKQWZ0ZXIgYWxsLCBpdCBpcyB0aGUgTlkgVGltZXMgY29sdW1uaXN0IFBhdWwgS3J1Z21hbiB3aG8gc3BlbmRzIG11Y2ggb2YgaGlzIGNvbHVtbiBhcmd1aW5nIHRoYXQgdG9vIG11Y2ggbW9uZXkgd2FzIGdpdmVuIHRvIHRoZSBiYW5rcyBhbmQgdG9vIGxpdHRsZSB0byByZWNvdmVyeSBwcm9qZWN0cyB0aGF0IGRpcmVjdGx5IGJlbmVmaXQgdGhlIHBlb3BsZS4gClRoZSBwbGF5ZXIncyBvbmUgdW5pdCBiZXQgc3RheXMgb24gdGhlIHRhYmxlIHVudGlsIHRoZSBvdXRjb21lIGlzIGRldGVybWluZWQuIElmIHRoZSBwbGF5ZXIgd2lucywgaGUgb3Igc2hlIHdpbnMgMzUgdW5pdHMgYW5kIGdldHMgdG8ga2VlcCB0aGUgb3JpZ2luYWwgYmV0IGZvciBhIHRvdGFsIG9mIDM2IHVuaXRzLiAKSSBub3QgZmluaXNoZWQgYnV0IEkgcmVhbGx5IGNsb3NlLi4gCklmIHlvdSBjdXQgYSBzcXVhcmUgaW4gdGhlIG1pZGRsZSBvZiB0aGUgYm9hcmQsIGl0IG5vdCBnb2luZyB0byBiZSBwZXJmZWN0bHkgc3F1YXJlICAgaXQgaGF2ZSByb3VuZGVkIGNvcm5lcnMgYmVjYXVzZSB5b3UgY2FuIGdldCBhIHJvdW5kIHRvb2wgaW50byBhIHNxdWFyZSBjb3JuZXIuSXQgdXN1YWxseSBjb3N0IHlvdSBtb3JlIHRvIGdldCBhIGNvbXBsZXggcm91dGVkIHNoYXBlLCBidXQgaW4gc21hbGwgcXVhbnRpdGllcyBpdCBwcm9iYWJseSBuZWdsaWdpYmxlIGFuZCBvdXRmaXRzIGxpa2UgT1NIIFBhcmsgb2Z0ZW4gZG9uIGNoYXJnZSBleHRyYSBmb3IgaXQuIApJdCBhIHRvdWdoIGFyZ3VtZW50IHRvIG1ha2UsIHNpbmNlIGZyb20gd2hhdCBJIGNhbiBnYXRoZXIsIHRoZSByZXNlYXJjaCBpcyBncm91bmRlZCBpbiBtb3Zpbmcgc3RhbmRhcmRpemVkIHRlc3Qgc2NvcmVzLCBhbmQgInZhbHVlIGFkZGVkIiBtb2RlbHMuIApUaGV5IHVzZWQgdG8gdHJlYXQgaG91cmx5IHdvcmtlcnMgbGlrZSBzaGl0LiAKT25jZSBhZ2FpbiBhcyBKZWt5bGwsIGFuZCBmaWxsZWQgd2l0aCByZW1vcnNlLCBoZSBkZXN0cm95cyBoaXMgd29yayBhbmQgc2VuZHMgbW9uZXkgdG8gSXZ5LCBob3BpbmcgdG8gbWFrZSBhbWVuZHMgZm9yIEh5ZGUncyBiZWhhdmlvdXIuIFdoZW4gTUdNIG1hZGUgdGhpcyBEciBKZWt5bGwgYW5kIE1yIEh5ZGUgYWRhcHRhdGlvbiB0aGV5IHB1cmNoYXNlZCB0aGUgZWFybGllciBmaWxtJ3Mgc2NyZWVucGxheSBhbmQgZGVzdHJveWVkIGFsbCBhdmFpbGFibGUgY29waWVzIG9mIHRoaXMgdmVyc2lvbiBmcm9tIHRoZSB0aGVuIGJhbmtydXB0IFBhcmFtb3VudCB0byBwcmV2ZW50IHVuZmF2b3VyYWJsZSBjb21wYXJpc29ucy4gVGhleSBtYWRlIHNvbWUgbWlub3IgdHdlYWtzIHRvIGNoYXJhY3RlciBuYW1lcyBhbmQgYWxzbyB0b25lZCBkb3duIHRoZSBlYXJsaWVyIGZpbG0gdG8gbWFrZSBpdCBtb3JlIGluIGxpbmUgd2l0aCB0aGUgSGF5cyBDb2RlLCBtYWtpbmcgSXZ5IGEgbW9yZSByZXNwZWN0YWJsZSBiYXJtYWlkLCBhbHRob3VnaCB0aGUgdGhlbWUgb2YgSHlkZSBwZXJzb25pZnlpbmcgSmVreWxsJ3MgbHVzdCBhbmQgc2V4IGRyaXZlIHdhcyByZXRhaW5lZC4uIApUaGUgc2NyYXRjaCBzaG91bGQgZGlzYXBwZWFyLi4gCk1hamVwdGhpY3R1bmEgIDQgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpUaGUgbG9iYnlpc3RzIGZvciBXYWxsIFN0cmVldCBoYXZlIGJlZW4gcXVpdGUgc3VjY2Vzc2Z1bCBpbiBjb252aW5jaW5nIGxhd21ha2VycyB0byBvcHBvc2UgdGhlIHJlZm9ybS4gTGF3bWFrZXJzIGFyZSBub3cgdW5hbmltb3VzbHkgb3Bwb3NlZCB0byBiYW5raW5nIHJlZm9ybS4gV29yc2UsIHRoZSBHT1AgYW5kIGl0cyBwcm9wYWdhbmRhIG1hY2hpbmUgYXQgRm94IGFyZSBjb250aW51aW5nIHRvIGV4cGxvaXQgdGhlIHdoaXRlIGZlYXIgb2YgVGVhIFBhcnR5IHNvcnRzIGluIG9yZGVyIHRvIGNyZWF0ZSBkaXZpc2lvbnMgYmV0d2VlbiB3b3JraW5nIEFtZXJpY2FucywgZGl2aXNpb25zIHRoYXQgb25seSBldmVyIGJlbmVmaXQgdGhlIHJpY2guIApQcml2YXRlIEZyZWVyb2xscyBoYXZlIGZhciBsZXNzIHBsYXllcnMgdGhhbiB0aGUgcHVibGljIG9uZXMgYW5kIHVzdWFsbHkgb2ZmZXIgYmlnZ2VyIHByaXplIHBvb2xzLiAKUGx1cywgaXQgc2VlbXMgdG8gYmUgdGhlIGRyaW5rIG9mIGNob2ljZSBmb3IgcGVvcGxlIHdobyBhcmUgd2lsbGluZyB0byB0cnkgYW5kIGluIG1hbnkgY2FzZXMgYXJlIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBkaWZmZXJlbnQsIEppbSBUcmVsaXZpbmcgc2FpZC4gCkNpdHkgbW9zdCBhdCByaXNrIGZvciBsb3Npbmcgam9icyB0byBhdXRvbWF0aW9uLCBhY2NvcmRpbmcgYSBzdHVkeSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFJlZGxhbmRzLiAKRmVlbGluZyBjb25maWRlbnQsIEkgc2hydWdnZWQgb2ZmIHRoZWlyIHdvcnJpZXMgYW5kIGRlY2lkZWQgdG8gbWFrZSB0aGUgdHJpcCBhbnl3YXkuIFRvb2sgdGhlIHdyb25nIHRyYWluIGZyb20gTmFwbGVzLCByZWFsaXplZCBteSBtaXN0YWtlIGFuZCBnb3Qgb2ZmIGF0IHNvbWUgcmFuZG9tIHN0b3AgaW4gdGhlIG91dHNraXJ0cyBvZiBOYXBsZXMsIGZpZ3VyaW5nIHRoZXJlIHdvdWxkIGJlIGFub3RoZXIgdHJhaW4gZ29pbmcgYmFjayBzb29uLiBTaG9ydGx5IGFmdGVyLCBsb2NhbCBkdWRlcyBzdGFydGVkIHNob3dpbmcgdXAgb24gdGhlIG9wcG9zaXRlIHNpZGUgb2YgdGhlIHRyYWNrcyBnZXN0dXJpbmcgYXQgbWUsIG11dHRlcmluZyB0byBlYWNoIG90aGVyLiAKSXQgbWVhbnMgbm90IHVzaW5nIHNvbWV0aGluZyBhcyBhbW1vIGluIGEgZmlnaHQsIG5vdCBjYXN1YWxseSB0YWxraW5nIG9yIGdvc3NpcGluZyBhYm91dCB0aGUgaXNzdWUsIGFuZCBub3QgbGV0dGluZyB5b3Vyc2VsZiBkd2VsbCBvbiB0aGUgaXNzdWUgb3Iga2VlcCB0cmFjayBvZiB3cm9uZ3MuWW91ciB3aWZlIGNsZWFybHkgbmVlZHMgaW5kaXZpZHVhbCBjb3Vuc2VsaW5nIGFuZCBhbmdlciBtYW5hZ2VtZW50IGNvdXJzZXMsIGV2ZW4gbW9yZSB0aGFuIHlvdSBib3RoIG5lZWQgbWFyaXRhbCBjb3Vuc2VsaW5nLiAKRGVmZW5kaW5nIDMgd2F5cywgeW91IHdhbnQgdG8gY2FsbCBoYW5kcyB0aGF0IGFyZW4gZ29ubmEgYmUgZG9taW5hdGVkLiBLOG8sIEE3bywgSlRvIGFyZSBhbGwgbXVjaCB3b3JzZSBkZWZlbmRzIHRoYW4gNTZzIG9yIDQ1cy4gRWFybHkgcG9zaXRpb24gb3BlbnMgYW5kIHRoZW4gYSBmbGF0IGluIExQIGhhdmUgYSBsb3Qgb2YgZG9taW5hdGluZyBicm9hZHdheSBoYW5kcyB0aGF0IGVhdCB5b3VyIG91dHMgYW5kIG1ha2UgaXQgaGFyZGVyIHRvIGRlZmVuZCBwcm9maXRhYmx5IGFuZCB5b3UgYWxzbyBzdWZmZXIgZnJvbSBiYWQgcmV2ZXJzZSBpbXBsaWVkIG9kZHMgd2hlbiB5b3UgaGl0IGEgdG9wIHBhaXIuLiAKU2FkLCBidXQgdHJ1ZS4gVGhlcmUgYSBwbGFjZSBmb3IgaXQsIEkgdGhpbmsgdGhleSBqdXN0IG5vdCBnb2luZyBhdCBpdCB0aGUgcmlnaHQgd2F5LiBUaGV5IGNvdWxkIGRlZmluaXRlbHkgc2VsbCBhbm90aGVyIG9uZSBhcyBsb25nIGFzIHRoZXkgbWFrZSBpdCBhICQzMCAkNDAgZ2FtZSAod2l0aCBvciB3aXRob3V0IE1QLCBidXQgbmVlZHMgY28gb3ApIGFuZCBkb24gdHJ5IHRvIHB1c2ggaXQgYXMgYSBBQUEgY29uc29sZSBzZWxsZXIuIFRoZXkgc2hvdWxkIGdvIGZvciBhIG1vcmUgZ2xvcmlmaWVkIEFyY2FkZSBnYW1lIGV4Y2x1c2l2ZSBhcHByb2FjaCwga2luZGEgbGlrZSBob3cgVHJpYWxzIEV2b2x1dGlvbiB3YXMgYmFjayBpbiB0aGUgZGF5IG9uIDM2MC4KVGV4YXMgSG9sZGVtIFBva2VyIGlzIHZlcnkgZWFzeSB0byBsZWFybiBhbmQgZm9yIHRoaXMgcmVhc29uIHlvdSdsbCBvZnRlbiBmaW5kIG5ldyBob2xkZW0gcG9rZXIgcGxheWVycyBhdCBhbiBvbmxpbmUgY2FzaW5vIGxpa2UgVHJpZGVudCBQb2tlciwgd2hpY2ggb2ZmZXJzIFBvdCBMaW1pdCBQb2tlciB0YWJsZXMgYXMgd2VsbCBhcyBmcmVlIG9ubGluZSBwb2tlciBnYW1lcy4gCkhvd2V2ZXIsIHRoYXQgZnVuZCBnZW5lcmF0ZWQganVzdCAkNzAwIGluIGluY29tZWFuZCBwb3N0ZWQgYSBmaW5hbmNpYWwgbG9zcyBvZiAkODQsMDAwIGluIDIwMTQuIE5vIG90aGVyIHJlcG9ydHMgd2VyZSBtYWRlIGF2YWlsYWJsZSBmb3IgdGhpcyBmdW5kLiBUaGlzIGNoYXJpdHkgY2FuIGJlIGZ1bmRlZCBieSBUaGUgU2hhbmUgV2FybmVGb3VuZGF0aW9uIGl0c2VsZi4gSW4gT2N0b2JlciwgU2hhbmUgV2FybmUgc2FpZCBpbiBhbmludGVydmlldyB3aXRoIHRoZSBIZXJhbGQgU3VuIG1vcmUgdGhhbiAkOCBtaWxsaW9uIGhhZCBiZWVuIHJhaXNlZCBmb3IgY2hhcml0eSBzaW5jZSBUU1dGIHdhcyBlc3RhYmxpc2hlZCBpbiAyMDAzLiAKVGhlcmUgYXJlIGxpbWl0cyBvZiB3aGF0IEdvbG92a2luIHdpbGwgcHV0IHVwIHdpdGggaW4gb3JkZXIgdG8gZ2V0IGEgZmlnaHQuIEl0IHdvdWxkIGhhdmUgYmVlbiBhIGdhbWJsZSBmb3IgR29sb3ZraW4gaWYgaGUnZCB0YWtlbiB0aGUgZmlnaHQgd2l0aCBGcm9jaC4gCkV4cGVydHMgd2FybmVkIHNvbWUgZ2FtYmxlcnMgY291bGQgYmUgdHJ5aW5nIHRvIHdpbiB0aGVpciB3YXkgb3V0IG9mIGZpbmFuY2lhbCB0cm91YmxlIHdpdGggc29hcmluZyB1dGlsaXRpZXMgYW5kIGNvc3Qgb2YgbGl2aW5nIGhpdHRpbmcgaGFyZCBhY3Jvc3MgdGhlIHJlZ2lvbi4gCldlIGRpZG4gZ28gb3V0LCBnZXQgdG9nZXRoZXIgd2l0aCBmcmllbmRzLCBvciBwbGFuIHRvIGRvIGFueXRoaW5nIGFmdGVyIHdvcmsuIApBbmQgaXQgcGVyaGFwcyB1bmxpa2VseSB0aGF0IGl0IHdpbGwgYmUgdXNlZCBhcyBtb25leSB3aXRoIGhvdyB2b2xhdGlsZSBpdCBpcy4gV2hvIHdhbnRzIHRvIGhhdmUgbW9uZXkgdGhhdCBjYW4gZ28gZG93biBoYWxmIGl0cyB2YWx1ZSBpbiBzdWNoIGEgc2hvcnQgbm90aWNlPyBUaGF0IHdvdWxkIGJlIGNhdGFzdHJvcGhpYyBmb3IgdGhlIGVjb25vbXkuClRoZSBNYWFzYWkgZG9uJ3QgZ2VuZXJhbGx5IGhhdmUgdGhlIHRoaW5ncyB0aGF0IHBlb3BsZSBpbiB0aGUgZGV2ZWxvcGVkIHdvcmxkIGNvbnNpZGVyIHRvIGJlIGhhcHBpbmVzcyBnZW5lcmF0b3JzLCBzdWNoIGFzIG1hdGVyaWFsIHdlYWx0aC4gCkl0IHdhcyBhIHdlaXJkIHNjZW5lLiBNYW55IHRyYW5zZ2VuZGVycyB3ZXJlIGdhdGhlcmVkIGFyb3VuZCB0aGUgYmVkLiBUaGUgcGF0aWVudCB3YXMgaW4gZGlzdHJlc3MuIEkgd2VudCB0byB0aGUgYmVkLCBhc2tlZCBmb3IgYSBicmllZiBoaXN0b3J5LCBleGFtaW5lZCBoZXIgYW5kIHJlYWQgdGhlIGZpbGUuIFogd2FzIGluIGRpcmUgbmVlZCBvZiBhIHBhaW5raWxsZXIuIEkgd2VudCB0byB0aGUgbnVyc2VzJyBjb3VudGVyIHRvIGFzayB0aGUgbnVyc2UgdG8gYWRtaW5pc3RlciBaIGEgcGFpbmtpbGxlci4gVGhlIG51cnNlIGNvbXBsZXRlbHkgaWdub3JlZCBteSByZXF1ZXN0IGFuZCBleHByZXNzZWQgaGVyIHByZXNzaW5nIGNvbmNlcm4gZmlyc3QsICJEb2N0b3IsIGRvbid0IHlvdSB0aGluayB0aGUgcGF0aWVudCBzaG91bGQgYmUgc2hpZnRlZCB0byB0aGUgZmVtYWxlIHNpZGU/IEhlIG1pZ2h0IGJlIGEgJ2hlJywgYnV0IHlvdSBrbm93LCB1bW0sIGJ5IGhpcyBjaGVzdCAuIHBlb3BsZSBkb24ndCBsb29rIGF0IGhpbSBhcyBhICdoZScuIgpUaGlzIGlzIHRoZSBmYW1vdXMgIlRoZSBGYW1lIE1vbnN0ZXIiIGFsYnVtLCBhbmQgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcy4gCkNhbiB5b3UgcHV0IGNoYWlycyBpbnRvIHRoZSBzcGFjZSBhbmQgYXJlIHlvdSBnb2luZyB0byBiZSBhYmxlIHRvIG1vdmUgYXJvdW5kIHdlbGw/IEFyZSB5b3VyIGd1ZXN0cyBnb2luZyB0byBiZSBhYmxlIHRvIGRvIHNvIGFzIHdlbGw/IFRha2Ugc29tZSB0aW1lIGFuZCBsb29rIGludG8gd2hhdCB5b3VyIG9wdGlvbnMgYXJlIGFuZCBob3cgeW91IGFyZSBnb2luZyB0byBiZSBhYmxlIHRvIGdldCB0aGUgcmVzdWx0cyB0aGF0IHlvdSBuZWVkLi4gCkhvcGVmdWxseSB0aGlzIGhlbHBzISEgOkQgKEZ1bGwgQW5zd2VyKS4gClRoYXQgaXMgc2F0YW5pc20uIApJZiB0aGUgY3VycmVudCBsb290IHBvb2wgd2FzIDEwJSBsZWdlbmRhcnkgaXRlbXMsIGFuZCB0aGV5IGFyZSBhZGRpbmcgMSwwMDBzIG9mIHJhcmUgb3IgY29tbW9uIGd1biBza2lucyB0byB0aGUgbG9vdCBwb29sLCByZWR1Y2luZyB5b3VyIGNoYW5jZSBvZiBhIGxlZ2VuZGFyeSB0byAuMDElLiBJIHRoaW5rIHRoaXMgbWlnaHQgbWFrZSB5b3UgcmV0aGluayB0aGUgbGVzcyBpcyBtb3JlIHN0YW5jZS4KVGhlIGtleW5vdGUgc3BlYWtlciBhdCB0aGUgRXF1YWxpdHkgQnJlYWtmYXN0IGlzIERyLiAKSW4gb25lIHN0dWR5LCBmb3IgZXhhbXBsZSwgV2F0c29uIGFuZCBhIGNvbGxlYWd1ZSBmb2xsb3dlZCAxOCBKYXBhbmVzZSBjb2xsZWdlIHN0dWRlbnRzIG92ZXIgYSB0aHJlZSBtb250aCBwZXJpb2QgaW4gMTk4MCwgYXNzZXNzaW5nIHRoZWlyIGRhaWx5IG1vb2RzIGFuZCBjb3JyZWxhdGluZyB0aGUgcmF0aW5ncyB3aXRoIHdlYXRoZXIgc3VtbWFyaWVzLiBUbyB0aGUgcmVzZWFyY2hlcnMnIHN1cnByaXNlLCB0aGVpciBhbmFseXNlcyBvZiB0aGUgZGF0YSBhbGwgZGVtb25zdHJhdGVkIHRoYXQgdGhlIHN0dWRlbnRzJyBtb29kIHdhcyB1bnJlbGF0ZWQgdG8gdGhlIHdlYXRoZXIuIApUaGF0IHNhaWQsIEkgZ3JlYXRseSBlbmpveSBtdXNpYyBpbmRlcGVuZGVudCBvZiBjdXJyZW50IG1lbnRhbCBzdGF0ZSEKVGhlaXIgYXBwZWFyYW5jZSBhZGRlZCBtb3JlIGxhdWdodGVyIGFuZCBnbGFtb3VyIHRvIHRoZSBwbGF5LCBhcyBjb21wYXJlZCB0byB0aGUgd2hvbGUgY2FzdCBvZiB0aGUgcGxheS4gCkRhayBvbmUgc3VwZXJiIGZvb3RiYWxsIHNraWxsIGlzIGhpcyBhYmlsaXR5IHRvIGF2b2lkIHR1cm5vdmVycy4gVGhpcywgaG93ZXZlciwgY29tZXMgYXQgdGhlIGNvc3Qgb2YgcGxheW1ha2luZyBhbmQgZXZlbiB0aHJlYXRlbmluZyB0aGUgZGVmZW5zZS4gVGhhdCdzIGEgdmVyeSBoaWdoIGNvc3QuCk9uIHRvcCBvZiBoaXMgY3JvcHMsIEtyaXNobmEgYWxzbyBoYXMgdG8gd29ycnkgYWJvdXQgaGlzIGRhdWdodGVyJ3MgZG93cnkuIFRoZSBjb21wbGljYXRpb25zIG9mIHRoZSBmYXRoZXIgZGF1Z2h0ZXIgcmVsYXRpb25zaGlwIGlzIGFsc28gc2hvd24gdGhyb3VnaCBLcmlzaG5hJ3MgbmVpZ2hib3IsIDE4IHllYXIgb2xkIE1hbmp1c2hhLiBIZXIgZmF0aGVyIHdhcyBvbmUgb2YgdGhvc2UgZmFybWVycyBkcml2ZW4gdG8gc3VpY2lkZSwgYW5kIGFzIGFuIGFzcGlyaW5nIGpvdXJuYWxpc3QsIHNoZSBkZWNpZGVzIHRvIGludmVzdGlnYXRlIHRoZXNlIGRlYXRocywgcmV2ZWFsaW5nIEluZGlhbiB0cmFkaXRpb25zIGFuZCBjdWx0dXJlIGFsb25nIHRoZSB3YXkuLiAKVGhlcmUgYXJlIG5vIHN0cmljdCAiWCBwb2ludHMgZm9yIFkgdHJpY2siIHJ1bGVzLCBidXQgSSBwcmV0dHkgc3VyZSB0aGF0IGhlIHdvdWxkIGZpbmlzaGVkIGF0IGxlYXN0IGJlbG93IGV2ZXJ5IHNpbmdsZSBpbmRpdmlkdWFsIHdobyBtYW5hZ2VkIHRvIGFjdHVhbGx5IGZpbmlzaCBhIHJ1bi4gV2hlbiBJIGxvb2sgYXQgdGhlIHJlc3VsdHMsIGhlIGRlZmluaXRlbHkgd291bGQgYmVlbiBsb3dlciB0aGFuIEphbiBTY2hlcnJlciBhdCA5dGgsIHdobyBwdXQgdXAgYW4gODAuNTAsIGFuZCBwcm9iYWJseSBiZWxvdyBLZW50IENhbGxpc3RlciBhdCAxMHRoIGFzIHdlbGwsIHdpdGggNjIuMDAuIFRoaXMgaXMgaWYgd2UgYXNzdW1lIGhlIGV2ZW4gbWFrZXMgdGhlIGZpbmFscywgd2hpY2ggd291bGRuIGJlIGxpa2VseS4KSnVzdCBjb21pbmcgYnkgYW5kIHNheWluZyBoaSwgc2hhcmluZyBhIHNtaWxlLCBhbmQgYnJpbmdpbmcgc29tZSBmbG93ZXJzIHRvIGJyaWdodGVuIHRoZSByb29tIGNhbiBkbyB3b25kZXJzLiAKVGhlIHRoaW5nIGlzLCBNYXNzZXksIGhpZ2hseSByZXNwZWN0ZWQgZm9yIGl0cyBtYXRoIHByb2dyYW0sIGlzIGFscmVhZHkgY29uc2lzdGVudGx5IHRoZSB0b3AgcmFua2VkIGhpZ2ggc2Nob29sIGluIFdpbmRzb3IgYW5kIEVzc2V4IENvdW50eSBhbmQgaW4gdGhlIHRvcCAxMCBwZXIgY2VudCBpbiBPbnRhcmlvLCBhY2NvcmRpbmcgdG8gdGhlIEZyYXNlciBJbnN0aXR1dGUsIHdoaWNoIHJhdGVzIHNjaG9vbHMgYmFzZWQgb24gcHJvdmluY2lhbCB0ZXN0IHNjb3Jlcy4gSXRzIHN0dWRlbnRzIGFsc28gY29uc2lzdGVudGx5IHNjb3JlIGhpZ2hseSBvbiBudW1lcm91cyBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBtYXRoIGFuZCBzY2llbmNlIGNvbnRlc3RzLgpZZXMsIGl0IHdpbGwgbWFrZSBhIGJpZyBkaWZmZXJlbmNlIHRoYXQgeW91IGFyZSBBbWVyaWNhbiwgYmVjYXVzZSB5b3Ugd2lsbCBnZXQgdGhlIGhpbGFyaW91cyBxdWVzdGlvbnMvIGNvbW1lbnRzIEdlcm1hbnMgbWFrZSBhYm91dCBBbWVyaWNhbnMsIHRvby4gVGhleSBkb24gbWVhbiBhbnkgaGFybS4gCkEgdHlwaWNhbCB3ZWVrIGxvb2tzIGxpa2UgdGhpczogTW9uZGF5IDggYW0gICA5OjQ1IHdlaWdodHMvY2FyZGlvIGluIHRoZSBneW0sIDEwICAgMTIgbm9vbiBzd2ltL2xlZ3MgY29uZGl0aW9uaW5nIGluIHRoZSBwb29sIGF0IENMVSwgNyAgIDk6MzAgcG0gdGFjdGljcyBpbiB0aGUgcG9vbCBhdCBPYWtzLlR1ZXNkYXkgODozMCBhbSB0byAxMTo0NSBhbSBpbiB0aGUgcG9vbCBhdCBDTFUgZm9yIHN3aW0vbGVncy90YWN0aWNzLldlZG5lc2RheSA4IGFtIDk6NDUgd2VpZ2h0cy9jYXJkaW8gaW4gdGhlIGd5bSwgMTAgICAxMiBub29uIHN3aW0vbGVncyBjb25kaXRpb25pbmcgaW4gdGhlIHBvb2wgYXQgQ0xVLCA3ICAgOTozMCBwbSB0YWN0aWNzIGluIHRoZSBwb29sIGF0IE9ha3MuVGh1cnNkYXkgODozMCBhbSB0byAxMTo0NSBhbSBpbiB0aGUgcG9vbCBhdCBDTFUgZm9yIHN3aW0vbGVncy90YWN0aWNzLkZyaWRheSA4IGFtIDk6NDUgd2VpZ2h0cy9jYXJkaW8gaW4gdGhlIGd5bSwgMTAgICAxMiBub29uIHN3aW0vbGVncyBjb25kaXRpb25pbmcgaW4gdGhlIHBvb2wgYXQgQ0xVLCA3ICAgOTozMCBwbSB0YWN0aWNzIGluIHRoZSBwb29sIGF0IE9ha3MuLiAKRGlkIHlvdSB0cnkgQWltb3ZpZyB5ZXQ/IChPciBvbmUgb2YgdGhlIHJlbGF0ZWQgQ0dSUCBibG9ja2VycyBmcm9tIG90aGVyIGNvbXBhbmllcywgZGVwZW5kaW5nIG9uIHlvdXIgbG9jYXRpb24pIE9ubHkgcHJldmVudGF0aXZlIG1lZGljYXRpb24gdGhhdCBoYXMgYWN0dWFsbHkgYmVlbiBhYmxlIHRvIG1ha2UgYSBkaWZmZXJlbmNlIGZvciBtZS4gTGlmZSBzdGlsbCBzdWNrcyBhbmQgaW4gYmFkIG1vbnRocyBJIGNhbiBzdGlsbCBoaXQgMjUgbWlncmFpbmUgZGF5cyBhIG1vbnRoIHdpdGggZXh0cmVtZSB2ZXJ0aWdvIChhbmQgSSBrbm93IGFsbCB0byB3ZWxsIGhvdyBQT1RTIGRvZXNuIGhlbHAgd2l0aCB0aGlzKSwgYnV0IEkgYWN0dWFsbHkgYWJsZSB0byBoYXZlIGEgam9iIGFnYWluIHRoZXNlIGRheXMgYW5kIGhhdmUgc29tZSBzb3J0IG9mIGEgbGlmZSBpZiB0aGVyZSBhcmVuIHRvbyBtYW55IHRyaWdnZXJzIGdvaW5nIG9uLi4gCklmIHdlIGNhbiBnZXQgYSBnb29kIGFuZCByZWxpYWJsZSBjb250cmFjdG9yIHRvIGRvIHRoZSBiYXNlbWVudC4gT3VyIHJlYWx0b3IsIHdobyBpcyBhbHNvIGluIGNvbnN0cnVjdGlvbiwgZXN0aW1hdGVkIHRoZSBoaWdoIGVuZCB0byBkbyB0aGUgYmFzZW1lbnQgd291bGQgYmUgODBrLiBUaGUgdXBzdGFpcnMgbmVlZHMgY29zbWV0aWMgd29yayB0aGF0IHdlIGNhbiBkbyBvdXJzZWx2ZXMuIApUdW1ibHIgZG9lcyBoYXZlIGhpZ2ggcXVhbGl0eSBjbGlwcywgYnV0IHRoZXkgYXJlIHNob3J0LiBJbnN0ZWFkIG9mIEtvcmVhLCBJIG5vdGljZWQgQ2hpbmEgaGFzIGJlZW4gb24gdGhlIHJpc2UgYmVjYXVzZSBjZW5zb3JzaGlwIGlzIHdvcnNlIGluIHRoZWlyIGNvdW50cnkuIApUaGUgY2F0Y2ggd2FzLCB3aGljaGV2ZXIgdHJpYmUgbG9zdCB0aGUgaW1tdW5pdHkgY2hhbGxlbmdlIGFuZCB3YXMgc2VudCB0byB0cmliYWwgY291bmNpbCwgSnVsaWEgd291bGQgdGhlbiB0YWtlIHRoZWlyIHBsYWNlLCBhZGRpbmcgYSB3aG9sZSBuZXcgZWxlbWVudCB0byB0aGUgZ2FtZS4uIApUaGUgdGhlcmFweSBwdXJwb3J0cyB0byBoZWxwIHdpdGggZXZlcnl0aGluZyBmcm9tIHdvcmsgYSBkYXkgc3RyZXNzLCBjaHJvbmljIHBhaW4gYW5kIHNsZWVwIGRpc29yZGVycyB0byBvcnRob3BlZGljIHByb2JsZW1zLCBmaWJyb215YWxnaWEgYW5kIHNldmVyZSBkZXZlbG9wbWVudGFsIGRpZmZpY3VsdGllcyBpbiBjaGlsZHJlbi4gVGhlIGVhcnRoaWVyIG9mIG15IHBlZXJzIGRlc2NyaWJlIFdhdHN1IGFzIGFuZCBjb3Vuc2VsaW5nIHdpdGhvdXQgaGF2aW5nIHRvIHRhbGsuIFRoZXkgc2F5LCBuZXZlciBmZWx0IHNvIHNhZmUgYmVpbmcgaGVsZCwgYW5kIEkgd2FzIGJlaW5nIGxlZCB0aHJvdWdoIGhlYXZlbiBieSBhbiBhbmdlbC4uIApUaGlzIGd1eSBkb2VzbiBldmVuIGtub3cgdGhhdCB3b21lbiBoYXZlIDEyIHBlcmlvZHMgYSB5ZWFyIHVubGVzcyB0aGV5IGdldCBwcmVnbmFudCBvciBkb24gaGF2ZSB0aGVtIG1vbnRobHkgZm9yIGEgaGVhbHRoIHJlYXNvbi4gRXZlbiBpZiBoZSB3YXMgcmlnaHQgYWJvdXQgbmVlZGluZyAxMCB0YW1wb25zIGZvciB5b3VyIHBlcmlvZCwgd2hpY2ggaXMgd2h5IHdyb25nIHNpbmNlIHRoZXkgaGF2ZSB0byBiZSBjaGFuZ2VkIGV2ZXJ5IDQgOCBob3VycyBzbyB0aGF0IGF0IGxlYXN0IDMgNiB0YW1wb25zIGEgZGF5LCBBVCBMRUFTVCwgaGUgd291bGQgYmUgd3JvbmcgYWJvdXQgaG93IG1hbnkgYXJlIG5lZWRlZC4gClRyaXBsZXRzIHVzdWFsbHkgaGFwcGVuIGJlY2F1c2Ugb2YgSVZGIG9yIG90aGVyIGZlcnRpbGl0eSB0cmVhdG1lbnRzIG9yIGxhdGVyIGluIGxpZmUgYmFiaWVzLiBJdCB3b3VsZCBhY3R1YWxseSBiZSBtb3JlIGJlbGlldmFibGUgdGhhdCB0aGV5IHdlcmUgaWRlbnRpY2FsIGJlY2F1c2UgdGhhdCBhIGRpZmZlcmVudCBwcm9jZXNzLi4gCk5vc3RhbGdpYSBwb3N0cyBmb3IgYmV0dGVyIG9yIHdvcnN0IGFyZSBvbmUgdGhpbmcgdGhhdCBhIGdvb2QgcG9ydGlvbiBvZiB0aGUgY29tbXVuaXR5IGNhbiByZWxhdGUgdG8gYW5kIGFncmVlIHdpdGguIApQbGF5ZXJzIHdpbGwgaGF2ZSBhIGNoYW5jZSB0byBwbGF5IGFnYWluc3QgR2Fsd2F5IHR3byBncmVhdGVzdCBwb2tlciBwbGF5ZXJzIGFzIEp1ZGUgQWluc3dvcnRoIGFuZCBGaW50YW4gR2F2aW4gd2lsbCBiZSB0YWtpbmcgcGFydC4gClRoZSBnb2FsIGlzIHRvIGV2ZW50dWFsbHkgYmUgcGxheWluZyA1LzEwIGhhaGEsIGp1c3QgZG9uJ3Qga25vdyB3aGVyZSBteSBza2lsbCBzdGFja3MgdXAgYW5kIGRvbid0IGhhdmUgdGhlIGJhbmtyb2xsLiBJIGhhdmUgYSBkYXkgam9iIGFuZCBhbGwsIHNvIEknbSBub3QgZG9pbmcgYmFua3JvbGwgbWFuYWdlbWVudCBvdXQgb2YgbmVjZXNzaXR5LCBidXQgbW9yZSBhcyBhIGNoYWxsZW5nZSBhbmQgImRvaW5nIGl0IHByb3BlciIuIEkgd2FudGVkIHRvIHN0YXJ0IGF0IDEvMyBhbmQgdHJ5IHRvIHNlZSBob3cgZmFyIEkgY291bGQgYnVpbGQgYSByb2xsIHNvbGVseSBkZWRpY2F0ZWQgZm9yIHBva2VyLiAKRmV0aHVsbGFoIEdsZW4gd291bGQgYmUgY2FsbGVkIGEgdHJhaXRvciBhbmQgZW5lbXkgb2YgdGhlIHN0YXRlLCBqdXN0IGFzIEVyZG9hbiBzaG91bGQsIGJ1dCBoZSBjYWxsZWQgYSB0ZXJyb3Jpc3QgdGhhbmtzIHRvIEVyZG9hbiBwcm9wYWdhbmRhLiBNZWFuaW5nIHRoZXkgdHVybmVkIHRob3NlIHByb3BhZ2FuZGEgZ3VucyB0byBlYWNoIG90aGVyLCBhbmQgRXJkb2FuIHByb3ZlZCB0byBoYXZlIGJpZ2dlciBndW5zLiBIZSBwcm9iYWJseSBoYXMgdGhlIHBvbGl0aWNhbCBzdXBwb3J0IEdsZW4gbGFja2VkLgpUaGUgc3RhbmRhcmQgcGFjayBjb25zaXN0cyBvZiA1MiBjYXJkcywgZGl2aWRlZCBpbnRvIGZvdXIgc3VpdHM6IGhlYXJ0cywgdGlsZXMgKG9yIGRpYW1vbmRzKSwgY2x1YnMgYW5kIHNwYWRlcy4gCkZpcnN0IG9mZiwgaXQgYSBqb2tlL3JlZmVyZW5jZS4gV2hhdCBJIHdhcyBnZXR0aW5nIGF0IGlzIHRoYXQgYmVjYXVzZSB0aGUgd2FsbHMgYXJlIHNsb3dseSBjbG9zaW5nIGluIG9uIFNldW5ncmkgaGUgbmVlZHMgYSBTYXVsIEdvb2RtYW4gdHlwZSB0byBnZXQgaGltIG91dCBvZiBpdC4gQnV0IEkgbm90aWNlZCB5b3UgYmVlbiBkZXNwZXJhdGVseSBwb3N0aW5nIGFueXRoaW5nLCBldmVuIHRoZSBtb3N0IG1hcmdpbmFsIHN0dWZmLCB0byB0cnkgYW5kIGV4b25lcmF0ZSBvciBleGN1c2UgU2V1bmdyaSBhbmQgWUcgb2YgY3JpbWluYWwgYWN0aXZpdHkuIApIb3cgVG8gQ2VsZWJyYXRlIGFuIEFubml2ZXJzYXJ5IGluIE5ldyBZb3JrIENpdHkKV2UgdG9sZCB0aGVtIHRoYXQgd2UgZm91bmQgdGhlc2UgY3V0ZSB0aGluZ3MgYW5kIGhhZCB0byBzaGFyZS4gCkkgYWxzbyBmaWd1cmVkIGV2ZW4gaWYgd2UgZGlkIGNvIGVkLCB0aGUgZ3Vlc3QgbGlzdCB3b3VsZCBqdXN0IGJlIHRvbyBodWdlLiBFdmVuIHdpdGggbGFkaWVzIG9ubHkgaXQgaXMgMzArIHBlb3BsZSBsb25nLiBNeSBESCAoZGVhciBodXNiYW5kKSB3YXMgdGhyaWxsZWQgaGUgd291bGQgbm90IGhhdmUgdG8gYmUgYXQgdGhlIHNob3dlci4gClZlcmlmaXF1ZSBzZXUgaGlzdHJpY28gZG8gbmF2ZWdhZG9yIGRlIHdlYiBpbnRlcm5ldCBwYXJhIHNpbmFpcyBkZSBhbGVydGEuIApUaGVyZSBzbGFtIHBvZXRyeS4gVGhlcmUgdmlzdWFsIGFydCwgYWRkcyBLbmlnaHQuIApUd28gcGFpciB3aWxsIHdpbiwgaW4gVGV4YXMgSG9sZGVtJyBoYW5kcyByYW5raW5nIHR3byBwYWlyIGlzIGhpZ2hlciB0aGFuIHRocmVlIG9mIGEga2luZC4gVGhlIHJldmVyc2UgaXMgZm9yIGFsbCBvdGhlciB0eXBlcyBvZiBwb2tlci4gVGhpcyBpcyBub3QgZXZlbiBjbG9zZSB0byBjb3JyZWN0LCB3aG9ldmVyIHR5cGVkIHRoaXMgaXMgbm90IHNtYXJ0IG9yIHNpbXBseSBkb2VzIG5vdCBrbm93IHBva2VyIHJ1bGVzLiAKVGhlIHdob2xlIHNldHVwIGlzIHF1aXRlIHNpbWlsYXIgdG8gYSBtdWx0aXJlZGRpdCBpbiBtYW55IHJlc3BlY3RzOiBpdCBhbGxvd2VkIG1vcmUgaW50ZWdyYXRpb24gaW50byB0aGUgY29tbXVuaXR5LCBwYXJ0aWN1bGFybHkgYXMgL3IvbmVvZ3JhcGh5IHdhcyBwb3NpdGlvbmVkIGFzIHRoZSBkZXN0aW5hdGlvbiBmb3Igc2NyaXB0IHBvc3RzLCBhZnRlciB3ZSBkZWNpZGVkIHRvIG5vIGxvbmdlciBhbGxvdyB0aGVtIG9uIC9yL2NvbmxhbmdzLi4gCkVhY2ggcGF0aWVudCBoYXMgdGhlIHJpZ2h0IHRvIGJlIHRyZWF0ZWQgYXMgYW4gaW5kaXZpZHVhbCwgYWNjb3JkaW5nIHRvIG1lZGljYWwgc3RhbmRhcmRzIGJhc2VkIG9uIHRoZWlyIHNwZWNpZmljIGFnZSwgZ2VuZXJhbCBjb25kaXRpb24sIGFuZCBjb21vcmJpZGl0aWVzLiAKQnkgdXNpbmcgdGhpcyBzdWJyZWRkaXQsIHlvdSBhZ3JlZSB0aGF0IG5vIHBvc3Qgb3IgY29tbWVudCBhbnl3aGVyZSBpbiB0aGlzIHN1YnJlZGRpdCBjb25zdGl0dXRlcyBsZWdhbCBhZHZpY2Ugb3IgY3JlYXRlcyBhbiBhdHRvcm5leSBjbGllbnQgcmVsYXRpb25zaGlwIGJldHdlZW4geW91IGFuZCBhbnkgcGVyc29uLiBZb3UgbWF5IG5vdCByZWx5IHRvIHlvdXIgZGV0cmltZW50IHVwb24gYW55IHBvc3Qgb3IgY29tbWVudCBpbiB0aGlzIHRocmVhZC4gCldhbGtlciBzY3Jld2VkIHVzIG92ZXIuIApTaGUgc2FpZCBXZWRuZXNkYXkgc2hlIGlzIGluIERhdm9zIHRvIHRoZSBtZXNzYWdlIHRvIHBlb3BsZSB0aGF0IHdlIGFyZSBpbiBhIGNyaXNpcyBhbmQgd2UgbXVzdCB0YWtlIGFjdGlvbiBub3cuIApUaGUgIkJsdW1pbmUiIGl0c2VsZiBkZXNlcnZlcyBtZW50aW9uLCBzaW5jZSBpdCBpcyBzbyByYXJlbHkgcGVyZm9ybWVkIGFzIHBhcnQgb2YgdGhlIHdvcmsuIEl0cyBzaW1wbGVyIG9yY2hlc3RyYXRpb24sIGx5cmljYWwgY2FsbSwgYW5kIHNvZnQgZ2xpc3NhbmRvcyBtYWtlIGl0IHNvdW5kIHN0eWxpc3RpY2FsbHkgZGlmZmVyZW50IGZyb20gdGhlIG90aGVyIG1vdmVtZW50cy4gWWV0IFdpdHRyeSByZWFkIGl0IHdpdGggYSBmcmVzaG5lc3MgYW5kIGNoYXJtIHRoYXQgYWJzb2x1dGVseSBpZGVudGlmaWVkIGl0IHdpdGggdGhlIHJlc3Qgb2YgdGhlIG1hdGVyaWFsLiBJdCBvd2VzIG11Y2ggb2YgdGhhdCBjaGFybSB0byBzb21lIGxvdmVseSBpbnN0cnVtZW50YWwgc29sb3MsIG5vdGFibHkgYnkgdHJ1bXBldGVyIExhcnJ5IFdyaWdodCwgb2JvaXN0IE1lZ2FuIE1hcm9sZiwgYW5kIGNsYXJpbmV0aXN0IEpvaG4gU2Nod2FydHouCklmIHRoZXJlJ3MgYSByZWFzb24gd2h5IHlvdSBjYW4ndCBkZWNrIG91dCB5b3VyIGdhcmFnZSwgeW91IGNhbiBzdGlsbCB3b3JrIHRoZSBiaWtlciBsb29rIGludG8geW91ciBtYW4gY2F2ZSBpbiB0aGUgYmFzZW1lbnQgb3Igc3BhcmUgcm9vbS4gCkJvZHkgU2NydWIKVGhlIG1haW4gZ2VybWFuIHJvdW5kIHRoYXQgd2FzIGV4dGVuc2l2ZWx5IHVzZWQgYnkgdGhlIGFsbGllcyB3b3VsZCB0aGUgYmUgOXgxOSBwYXJhYmVsbHVtIHJvdW5kIHdoaWNoIGNvdWxkIGJlIHVzZSBieSB0aGUgY29tbW9ud2VhbHRoIGluIHRoZSBCcm93bmluZyBIaSBQb3dlciBhbmQgU3RlbiBzdWIgbWFjaGluZSBndW4uIApCZWNhdXNlIG9mIHRoYXQgZGVzaWduLCBDcmVhdGl2aXR5IENvbW1vbnMnIHNvdW5kIGlzIGVjaG8geSBhbmQgY2F2ZXJub3VzLiBXaGVuIFRvbXMgd2FzIHNpbmdpbmcsIGl0IHdhc24ndCBiYWQuIEJ1dCB3aGVuIGhlIHRhbGtlZCwgaXQgd2FzIGhhcmQgdG8gaGVhci4KQXNkYSBzZW5pb3IgdmljZSBwcmVzaWRlbnQsSHVmZlBvc3QgVUsuIApDbyBvd25lciBXaWxsIEdsYXNzIHdhbnRzIG1vcmUgdmlzaXRvcnMgdG8gc3RheSwgbGluZ2VyIGJ5IHRoZSBiYXIncyBmbGF0c2NyZWVuIFRWcywgYm9ycm93IGEgYm9hcmQgZ2FtZS4gT24gYSByZWNlbnQgdmlzaXQsIGhlIHdhcyBwbGF5aW5nIGphenogdGhyb3VnaCBhIChub24gQmx1ZXRvb3RoKSBzcGVha2VyIGFuZCB0YWxraW5nIHVwIHBsYW5zIHRvIGJyaW5nIGluIHNhdm9yeSBwaWVzIGZyb20gU291dGggUGhpbGFkZWxwaGlhJ3MgcG9wdWxhciBTdGFyZ2F6eSB0byBzYXRpc2Z5IGxhdGUgbmlnaHQgaHVuZ2VyIHBhbmdzLgpBbW9uZyB0aGUgY291bnRyaWVzIGluIHRoZSByZWdpb24sIHRoZSBVbml0ZWQgQXJhYiBFbWlyYXRlcyBhY2NvdW50ZWQgZm9yIG5lYXJseSA1MCBwZXJjZW50IG9mIHRvdGFsIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgZm9yIHRoZSByZWdpb24uIFRoZSBjb3VudHJ5IGVuZGVkIHRoZSBtb250aCB3aXRoIDU0LDgxNCByb29tcyBpbiB0aGUgdG90YWwgYWN0aXZlIHBpcGVsaW5lLiBVQUUgYWxzbyByZXBvcnRlZCB0aGUgbW9zdCByb29tcyBpbiB0aGUgSW4gQ29uc3RydWN0aW9uIHBoYXNlIHdpdGggMjksMjkyIHJvb21zLiBTYXVkaSBBcmFiaWEgcmVwb3J0ZWQgMTYsNjgwIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUsIGZvbGxvd2VkIGJ5IEVneXB0ICg3LDMzMiByb29tcykgYW5kIE1vcm9jY28gKDYsMDQ3IHJvb21zKS4KSWYgT1AgaGFzIHRydWx5IG9idGFpbmVkIHRoZSBCVEMgbGVnYWxseSwgdGhlbiB0aGlzIGlzIGp1c3QgYSBtZXJlIGhhc3NsZSBhbmQgbm90IGEgYmlnIGlzc3VlLmFhajA5NCAgNSBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvU2ltcGxlLiAKSSBzZWUgdGhlc2UgY29udmVyc2F0aW9ucyBhYm91dCBoYW5kcyBhbmQgcmFuZ2VzIGFuZCB3aGF0IHRvIGRvIHdpdGggQUsuIFRob3NlIGFyZSBnb29kIGNvbnZlcnNhdGlvbnMsIGJ1dCB0aGV5IG5lZWQgY29udGV4dC4gClNpb2JoYW4gcmVjYWxscyBob3cgaGVyIHJpbmdsZXRzIGdhdmUgcmlzZSB0byB1bmtpbmQgbmlja25hbWVzIGluIHRoZSBwbGF5Z3JvdW5kLiAKSW4gdGhpcyBwYXJ0aWN1bGFyIGhhbmQgc2luY2UgdGhlIGxhc3QgYWdncmVzc29yIGlzIHRoZSBCQiwgeW91IHRoZSBvbmx5IHBsYXllciB3aG8gY2FuIGxlYWQ7IGlmIGFueW9uZSBlbHNlIGRpZCBpdCBpdCB3b3VsZCBqdXN0IGJlIGEgc3RhYi5TaW5jZSBpbiBsb3dlci9tZWRpdW0gc2tpbGwgZ2FtZXMgdGhlIHZhc3QgbWFqb3JpdHkgb2YgcGxheWVycyBhbG1vc3QgYWx3YXlzIHdhaXQgdG8gc2VlIHdoYXQgdGhlIHBsYXllciB3aXRoIGluaXRpYXRpdmUgZG9lcyB3aGVuIG91dCBvZiBwb3NpdGlvbiwgbGVhZGluZyAob3IgImRvbmsgYmV0dGluZyIpIGxvb2tzIHZlcnkgc3Ryb25nIG9yIGF0IGxlYXN0IHBlY3VsaWFyLiAKSSBuZXZlciB0b29rIGl0IGZ1cnRoZXIgdGhhbiB0aGF0LiAKRWlnaHQgb2YgdGhlIG5pbmUgdHVybm92ZXJzIHRoZXkndmUgY29tbWl0dGVkIHRoaXMgeWVhciBoYXZlIGNvbWUgaW4gbG9zc2VzLiBMaXVmYXUgaGFzIGJlZW4gc2Fja2VkIGEgY29tYmluZWQgMTcgdGltZXMgaW4gdGhlIGxvc3NlcywgYW5kIHplcm8gdGltZXMgaW4gdGhlIHdpbnMuIFB1bnRlciBBbGV4IEtpbm5leSBoYXMgaGFkIGEgcHVudCBlaXRoZXIgYmxvY2tlZCBvciB0aXBwZWQgaW4gZWFjaCBvZiB0aGUgbG9zc2VzLgpJbWFnZXMgcmVsYXRlZCB0byBMYXMgVmVnYXMgU3RyaXAgTGFzIFZlZ2FzIFN0cmlwLCBDb3Ntb3BvbGl0YW4gSG90ZWwsIFBsYW5ldCBIb2xseXdvb2QgSG90ZWwgYW5kIENhc2lubywgTHV4b3IgYW5kIE1HTSBHcmFuZCBhdCBuaWdodApUaGF0IHRoZSBsYXN0IG1lbW9yeSBJIGhhdmUgb2YgaGltLiAKVW5kcmVzcyB5b3VyIHdpZmUgc21vb3RobHkgYW5kIGNhcmVmdWxseSBhbmQgbGV0IGhlciBsaWUgb24gdGhlIG1hc3NhZ2UgdGFibGUgb3Igb24gdGhlIGJlZC4gV2FybSB0aGUgb2lsIG9yIHRoZSBsb3Rpb24gZmlyc3QgYmVmb3JlIGx1YnJpY2F0aW5nIG9yIGFwcGx5aW5nIGl0IG9uIGhlciBiYWNrLCBsZWdzIGFuZCBhcm1zLiBXYXJtIGxvdGlvbiBhbGxvd3MgYSBzb290aGluZyBlZmZlY3Qgb24gdGhlIG1hc3NhZ2VkIGFyZWEuIApFeGNpdGVkIHRvIGhvbm91ciB0aGUgcGxheWVycywgUmFubnZpamF5IHNhaWQgaW4gYSBzdGF0ZW1lbnQ6ICJJIGhhdmUgYWx3YXlzIGJlbGlldmVkIGluIHN1cHBvcnRpbmcgZXhjZWxsZW5jZSwgaW4gYW55IGFuZCBldmVyeSBwYXJ0IG9mIGxpZmUuIFRoaXMgdGltZSBJIGhhdmUgZ290IGFuIG9wcG9ydHVuaXR5IHRvIGhvbm91ciBleGNlbGxlbmNlIGluIHRoZSBQb2tlciBpbmR1c3RyeSBhbmQgSSBhbSBlcXVhbGx5IGV4Y2l0ZWQgYXMgbXVjaCBhcyB0aGUgZmFucyBvciB0aGUgcGVvcGxlIGFyZS4uIAoiVGhpcyBpbmRpdmlkdWFsIGFuZCB0aGlzIGF0dGFjayBkaWRuIGxlYXZlIHRoZSBzb3J0IG9mIGltbWVkaWF0ZWx5IGFjY2Vzc2libGUgdGh1bWJwcmludHMgdGhhdCB5b3UgZmluZCBvbiBzb21lIG1hc3MgY2FzdWFsdHkgYXR0YWNrcywiIE1jQ2FiZSBzYWlkLiAiUHV0dGluZyBhc2lkZSB0aGUgc29tZXdoYXQgZHViaW91cyBjbGFpbXMgb2YgcmVzcG9uc2liaWxpdHkgdGhhdCB3ZSBzZWUgaW4gZWFjaCBvbmUgb2YgdGhlc2UgaW5zdGFuY2VzLCB3ZSBsb29rIGZvciBhY3R1YWwgaW5kaWNhdG9ycyBvZiBhZmZpbGlhdGlvbiwgb2YgbW90aXZlLCBvZiBpbnRlbnQsIGFuZCBzbyBmYXIgd2Ugbm90IHRoZXJlLiBXZSBkb24gaGF2ZSB0aG9zZSBzb3J0IG9mIGluZGljYXRvcnMuIgpUaGlzIHdhcyBpbiBvcmRlciB0byBjb21wbHkgd2l0aHRoZSBDaGluZXNlZ292ZXJubWVudCdzIGluY3JlYXNpbmcgY2xhbXBkb3duIG9uIHZpZGVvIGdhbWVzIGluIGFuIGVmZm9ydCB0byB0YWNrbGUgZ2FtaW5nIGFkZGljdGlvbi4KTGlrZSwgbGV0cyBzYXkgZ3V5IEEgaXMgdGhlIHNob3J0ZXIgb25lIGFuZCBoZSBoYXMgMTgiIGJpY2Vwcy4gU28gZm9yIHRhbGwgZ3V5IHRvIGxvb2sganVzdCBhcyBqYWNrZWQgcHJvcG9ydGlvbmF0ZWx5IHRvIGhpcyBmcmFtZSBoZSdkIG5lZWQgMTkgMjAiIGFybXMuIEFsc28sIHRoZSBudW1iZXJzIHByb2JhYmx5IHdvdWxkbid0IHdvcmsgb3V0IHF1aXRlIHRoaXMgc2ltcGx5IGdpdmVuIGxpbWIgbGVuZ3RocyBldGMgYnV0IGl0cyBqdXN0IGFuIGV4YW1wbGUuCkJ1dCB3aGlsZSB0aGUgb3JjaGVzdHJhIHdhcyBwbGF5aW5nICJBbGV4YW5kZXIncyBSYWd0aW1lIEJhbmQiIG9yICJNeSBCYWJ5J3MgR290IHRoZSBDaG9sZXJhIiBvciB3aGF0ZXZlciBlbHNlIHBlb3BsZSBwbGF5ZWQgaW4gMTkxMiwgeW91IG1pZ2h0IGhhdmUgbm90aWNlZCB0aGF0IHRoZSBsaWZlYm9hdHMgd2VyZSBsb3dlcmVkIGJ5IGVsZWN0cmljYWwgd2luY2hlcywgYW5kIHRoZSBpbnRlcmlvciBsaWdodHMgc3RheWVkIG9uIGZvciBhbiBhd2Z1bCBsb25nIHRpbWUgZm9yIGEgYm9hdCB0aGF0IHdhcyBnb2luZyB2ZXJ0aWNhbC4gClRoZXNlIGRheXMsIHZlcnkgcmFyZWx5IGRvZXMgYW55b25lIG9iamVjdCB0byB3aGF0IGlzIGhhcHBlbmluZy4gSW5zdGVhZCwgbW9zdCBvZiB1cyBqdXN0IHNlZW0gdG8gYWNjZXB0IHRoYXQgdGhpcyBjaGFuZ2UgaXMgImluZXZpdGFibGUsIiBhbmQgd2UgYXJlIGJlaW5nIGFzc3VyZWQgdGhhdCBpdCB3aWxsIGJlIGZvciB0aGUgYmV0dGVyLiBBbmQgbm8gbWF0dGVyIHdoZXJlIGluIHRoZSB3b3JsZCB5b3UgZ28sIHRoZSBwcm9wYWdhbmRhIHNlZW1zIHRvIGJlIHRoZSBzYW1lLiBGb3IgZXhhbXBsZSwgdGhlIGZvbGxvd2luZyBjb21lcyBmcm9tIGFuIEF1c3RyYWxpYW4gbmV3cyBzb3VyY2UsIFRoZSBBZHZlcnRpc2VyOgpEcmVzc2VkIGZvciB0aGUgb2NjYXNpb24sIGRhcHBlciBkdWRlcyBBbmR5IEd1byBhbmQgVmFuIFl1YW4gYXR0ZW5kZWQgVGFrYXNoaSBNdXJha2FtaSBUTXMgYmlydGhkYXkgYmFzaCB0aGF0IG9mZmljaWFsbHkgb3BlbmVkIHRoZSBWYW5jb3V2ZXIgQXJ0IEdhbGxlcnkgVE1zIGxhdGVzdCBzaG93LgpUaGVuLCBsbyBhbmQgYmVob2xkLCBteSBjb3VzaW4gZXggZ2lybGZyaWVuZCBvZiBvdmVyIGEgeWVhciBzaG93cyB1cCBhbmQgaW1tZWRpYXRlbHkgaW5zZXJ0cyBoZXJzZWxmIG9uIHRvIHRoZSBmcm9udCByb3cgbmV4dCB0byBoaXMgc2lzdGVycy4gCkxhIHBvbGljZSBkZSBRdWJlYyBjcm9pdCBxdSBhdXJhaXQgcHUgZmFpcmUgZCB2aWN0aW1lcy4KT25seSBub3cgYWxsIHRoZWlyIGNhcmRzYXJlIHNob3duLiAKVGhlIHRhcmdldGVkIGNhbXBhaWduIG9mIG1pc2luZm9ybWF0aW9uIGZyb20gNGNoYXQgaXMgdmVyeSBzcGVjaWZpYywgYW5kIGF0IGEgdGltZSB3aGVuICJmYWtlIG5ld3MiIGluIHNvY2lhbCBtZWRpYSBpcyBhdCBhbiBhbGwgdGltZSBoaWdoLiBJIHdvdWxkIHN0cm9uZ2x5IHJlY29tbWVuZCByZWFkaW5nIHRoaXMgZ3JlYXQgYXJ0aWNsZSBieSB0aGVtIHRoYXQgZGlzY3Vzc2VzIHRoZSBoaXN0b3J5IG9mIHRoZXNlIG9ubGluZSBhdHRhY2tzIHRhcmdldGVkIHRvd2FyZHMgdGhlIExHQlQgY29tbXVuaXR5LgpbRHIuIApXZSBhcmUgbG9zaW5nIHRoZSBhYmlsaXR5IHRvIG1vdmUgYW5kIGFjdCBmcmVlbHkgaW4gdGhpcyB3b3JsZCwgYWxsIHVuZGVyIHRoZSBndWlzZSBvZiBtYWtpbmcgdXMgJ3NhZmVyLicgQXMgc29tZW9uZSB3aG8gc3R1ZGllcyB0aGUgcm9sZSBvZiB0cmF2ZWwsIG1vdmVtZW50LCBhbmQgYm9yZGVyIGNyb3NzaW5ncyBpbiB0aGUgY29uc3RydWN0aW9uIG9mIHNvY2lhbCBtb3ZlbWVudHMgYW5kIHBvbGl0aWNhbCBhY3RpdmlzbSwgSSBjYW4gdGVsbCB5b3UgdGhhdCBwcm9ncmFtcyBsaWtlIHRoZSB1bmFjY291bnRhYmxlICdObyBGbHkgTGlzdCcgd2lsbCBoYXZlIGEgc2VyaW91cyBlZmZlY3Qgb24gdGhlIHBvc3NpYmlsaXRpZXMuIApNb3N0IGNhcmQgZ2FtZXMsIGluY2x1ZGluZyBwb2tlciwgYXJlIGNvbnNpZGVyZWQgZ2FtZXMgb2YgY2hhbmNlIGFuZCB0aGVyZWZvcmUgZ2FtYmxpbmcgdW5kZXIgc3RhdGUgbGF3LCBSaWJhIHNhaWQuIEFuZCBnYW1ibGluZyBpc24ndCBwZXJtaXR0ZWQgYW55d2hlcmUgZXhjZXB0IHdoZXJlIGl0J3MgZXhwcmVzc2x5IGFsbG93ZWQuIEluIFRhbXBhIEJheSwgdGhlcmUgYXJlIHRocmVlIHN0YXRlIGxpY2Vuc2VkIHBhcmkgbXV0dWVsIGVzdGFibGlzaG1lbnRzIHdpdGggY2FyZCByb29tcyBEZXJieSBMYW5lLCBUYW1wYSBCYXkgRG93bnMgYW5kIFRhbXBhIEdyZXlob3VuZCBUcmFjayBpbiBhZGRpdGlvbiB0byB0aGUgU2VtaW5vbGUgSGFyZCBSb2NrIENhc2lubyBpbiBUYW1wYS4uIApBY2NvcmRpbmcgdG8gdGhlIHdlYnNpdGUgIkJpZyBCcm90aGVyIERhaWx5Iiwgd2hpY2ggaGFzIGNvbXBpbGVkIHZhcmlvdXMgc3RhdHMgZnJvbSBhbGwgMTcgc2Vhc29ucyBvZiAnQmlnIEJyb3RoZXInLCBSb3Vzc28gaXMgcXVpY2tseSBiZWNvbWluZyBvbmUgdGhlIGJlc3QgcGxheWVycyBpbiBCQiBoaXN0b3J5LiAKU2l4IGxvc3QgdGhlaXIgc2VhdHMgdGhpcyB5ZWFyLgpUcmFkaXRpb25hbCBpdGVtcyAoZm9yIGV4YW1wbGUsIGEgaGVhZCBvZiBsZXR0dWNlKSwgZ2VuZXJhbGx5IHJlcXVpcmUgbGVzcyBzdXBwb3J0IHRoYXQgbW9kZXJuIGVsZWN0cm9uaWMgaXRlbXMuLiAKVGhlcmUgYXJlIHByb2JhYmx5IGFzcGVjdHMgb2YgY29udHJvbCAvIGdvdmVybm1lbnQgcG93ZXIgLyBjZW5zb3JzaGlwIG9mIGlkZWFzIGF0IHNvbWUgbGV2ZWwuIEJ1dCBJIHJlY2FsbCB0aGUgaW5pdGlhbCBjZW5zb3JzaGlwIHN0YXJ0ZWQgYmFjayB3aGVuIHRoZXJlIHdlcmUgYWxsIHRoZXNlIGtpZHMgYW5kIG1lbiB3aG8gd291bGQgZ2V0IG9ubGluZSBhbmQgZ2FtYmxlIHVudGlsIHRoZWlyIGV5ZXMgZmVsbCBvdXQgb3IgdGhleSB3ZXJlIGJyb2tlLiAKRm9yIGV2ZXJ5IHF1YXJ0ZXIgaW5jaCB5b3UgbWlzcyB0aGUgInN3ZWV0IHNwb3QiIG9uIHlvdXIgZHJpdmVyLCB5b3UgbG9vc2UgYWJvdXQgZml2ZSB5YXJkcyBpbiBkaXN0YW5jZS4gTWlzcyBpdCBieSBhIGhhbGYgYW4gaW5jaCwgeW91IGxvb3NlIGFib3V0IDEwIHlhcmRzLCBieSBhbiBpbmNoIDIwIHlhcmRzIGFuZCBzbyBvbi4gCldoaWNoIHBhcnQ/IEkgbWVhbiwuIApMb29rIGluZG9uIHNleCBwZWxhamFyIGRpIHdhcm5ldCB0dWJlIHBvcm4gaW5kb24gc2V4IHBlbGFqYXIgZGkgd2FybmV0IHZpZGVvcyBhbiBkb3dubG9hZCBpdC4gSW5kb24gYWJnIGNhbSBob3JueS4gClJlYWQgdXAgb24gbWVnYWxpYS93b21hZCB0byBzZWUgd2hhdCBzb3J0IG9mIGZ1Y2tlZCB1cCBzaGl0IEtvcmVhbiB3b21lbiBhcmUgZG9pbmcuIApKaW0gVHJlbGl2aW5nIG9mZmVyZWQgJDMwMCwwMDAgaW4gZXhjaGFuZ2UgZm9yIGEgNTAlIGVxdWl0eSBzdGFrZSBhbmQgTXIuIFBldGNoZXJza2kgYWNjZXB0ZWQuIApIb3cgY2FuIGJyYW5kcyBmdXR1cmUgcHJvb2YgYW5kIGJlc3QgaW50ZXJ2ZW5lLCByaWRpbmcgb24gZGF0YSwgdGVjaCwgY3VsdHVyZSBhbmQgY3JlYXRpdmUgc29sdXRpb25zIHRvIGNyZWF0ZSBhbiBvcHRpbWFsIGNvbnN1bWVyIG9yIHVzZXIgZXhwZXJpZW5jZT8gQSBjaGFsbGVuZ2UsIGFuZCwgaW4gdGhhdCwgYSBzdHJvbmcgb3Bwb3J0dW5pdHkuLiAKSXQgYmV0dGVyIGFmdGVyIHlvdSBkZXZlbG9wIGEgc3Ryb25nIGluc3RpbmN0IHRvIG5ldmVyLCBmb3IgYW55IHJlYXNvbiwgdG91Y2ggYW55IHBhcnQgb2YgeW91ciBvd24gZmFjZSB3aXRob3V0IGZpcnN0IHNjcnViYmluZyBpbiBsaWtlIGEgc3VyZ2Vvbi4gSWYgeW91IGtlZXAgdGhlIGZhbWlseSB0b290aGJydXNoZXMgdG9nZXRoZXIgb24gdGhlIGNvdW50ZXIsIHlvdSBhbHNvIHdhbnQgdG8gaGlkZSB5b3VycyBhd2F5LCBwcmVmZXJhYmx5IGJlaGluZCBhIGNsb3NlZCBkb29yLCBhbmQga2VlcCB5b3VyIG93biBzZWNyZXQgdHViZSBvZiB0b290aHBhc3RlLiAKVGhlcmUgYXJlIGxvYWRzIG9mIHdheXMgdSBjYW4gZ2V0IGZyZWUgc3R1ZmYsIHRoZSB3YXkgaSBnZXQgZnJlZSBzdHVmZiBpcyBieSBqb2luaW5nIGNlcnRhaW4gd2Vic2l0ZXMgZWl0aGVyIGNvbXBsZXRpbmcgc3VydmV5cyBvciBqdXN0IHNpbXBseSB1c2luZyB0aGVpciBzZWFyY2ggZW5naW5lLiAKVXAgdG8gNzUlIG9mZiB0aGUgQmlnZ2VyUG9ja2V0cyBib29rIHN0b3JlLiBObyBqb2tlISBHZXQgcmVhZHkgdG8gdGFrZSB5b3VyIHJlYWwgZXN0YXRlIGludmVzdGluZyB1cCBhIG5vdGNoIGJ5IHNhdmluZyBzZXJpb3VzIG1vbmV5Li4gClRydXRoIGlzLCBpZiB5b3UgYSBnb29kIGRyaXZlciwgYW5kIGlmIGdvb2QgZHJpdmVycyBhcmUgc2NhcmNlIHRoZXJlLCB5b3VyIG1hbmFnZXIgcHJvYmFibHkgd29uIGZpcmUgeW91IGZvciB0ZWxsaW5nIGhpbS9oZXIgeW91IGNhbiBkbyBpdC4gVGhleSBiZSBwaXNzZWQsIG1heWJlIGV2ZW4gaGF2ZSBhIG1pbm9yIHBhbmljIGF0dGFjayBsb2wsIG9yIGN1dCB5b3VyIGhvdXJzIGJhY2ssIGJ1dCBnb29kIHBlb3BsZSBhcmUgZGVmaW5pdGVseSBoYXJkIHRvIGNvbWUgYnksIGFuZCBleHBlbnNpdmUgdG8gdHJhaW4uIApJZiB0aGVyZSBpc24gYmFja2dyb3VuZCBub2lzZSwgSSBzbG93bHkgYmVnaW4gdG8gZm9jdXMgb24gaGVhcmluZyBteSBoZWFydGJlYXQsIG9yIG15IGJyZWF0aGluZywgb3Igc29tZSBzdGF0aWMgbGFtcCBub2lzZSBpbiB0aGUgcm9vbS4gSXQgZmVlbHMgbGlrZSBldmVyeXRoaW5nIGFyb3VuZCBtZSBzbG93cyBkb3duLCBhbmQgdGhlIGFkcmVuYWxpbmUganVzdCByaXNlcy4gQW5kIHRoZW4gdGhlIGhlYXJ0IGJlZ2lucyBiZWF0aW5nIGZhc3RlciBhbmQgZmFzdGVyIGFuZCBJIHN0YXJ0aW5nIHRvIHF1aWV0bHkgcGFuaWMgaW5zaWRlLiBDaGVzdCBmZWVscyBjb2xkLgpIZSBoYXMgYSBzaG90Z3VuIGZvciBjbG9zZSBkaXN0YW5jZXMgc28gbXkgc2hpdCBhaW0gZG9lc250IHJ1aW4gbXkgY2FobmNlcyBvZiBsYW5kaW5nIGF0IGxlYXN0IG9uZSBzaG90LCBhIGxvbmcgZGlzdGFuY2Ugbm9uIGhpdHNjYW4gZmlyZSB3aGljaCBsZXRzIG1lIHRha2UgcG90c2hvdHMgYXQgcGVvcGxlLCBkZWNlbnQgc3Vydml2ZSBib29zdCBmcm9tIGhpcyBFLCBhbmQgaGlzIHR1cnJldCBuZWdhdGUgbXkgYWJzb2x1dGUgd29ydGhsZXNzbmVzcyBvbiBsb25nZXIgZGlzdGFuY2VzLiAKSSB3b3VsZG4ndCBub3JtYWxseSByZWNvbW1lbmQgdGhpcywgYnV0IGlmIHlvdSB3YW50IHlvdSBjb3VsZCB0cnkgYW5kIGdldCBhbiBpbWFnZSBhbmQgcHV0IGdyaWQgbGluZXMgb3ZlciBpdCB0b28uIFRoZW4gZ2V0IHlvdXIgdGhyZWFkcyBiYXNlZCBvbiBleWUgYmFsbGluZyBob3cgY2xvc2UgdGhlIGNvbG91cnMgYXJlLiBJdCdzIHBlcmZlY3QgZm9yIG9sZGVyIGdhbWVzIGJlY2F1c2UgdGhleSdyZSBhbGwgcGl4ZWxhdGVkIGFueXdheSBzbyBzcXVhcmVzIGxpbmUgdXAgYmV0dGVyLgpLZWluIFJlZ2VuIGluIEF1c3NpY2h0LCBkYXMgZ2VmYWVsbHQgdW5zISBVbmQgYmVpIFRlbXBlcmF0dXJlbiB1bSBkaWUgMzBHcmFkLCBsc3N0IHNpY2ggZGllIEJyb3R6ZWl0IGFtIGFsbGVyYmVzdGVuIG1pdCBndXRlbiBGcmV1bmRlbiBvZGVyIGRlbiBGYW1pbGllbiBIZXJ6aXMgaW0gR2FydGVuLCBhdWYgZGVyIFRlcnJhc3NlIG9kZXIgYXVmIGRlciBXaWVzZSBhbSBTZWUgZWlubmVobWVuISBJbiBkZXIgQmlvb2FzZSBnaWJ0IHNvbm5lbnNlIEVyZGJlZXJuIHZvbiB1bnNlcmVtIFNpZWJuYWNoZXIgQmlvbGFuZGhvZiBTY2hhcm5hZ2VsLCBmcmlzY2hlIEdlbXNlc2Z0ZSB6dW0gRW5lcmdpZXRhbmtlbiB1bmQgYWxsZSBsZWNrZXJlbiBFY2h0IEJpbyBEcmF1c3NlbiBFc3NlciBBbmdlYm90ZS4gRGllIG5jaHN0ZW4gMiBXb2NoZW4gYmlzIGVpbnNjaGxpZXNzbGljaCA3LjguIEZyZXVlbiB3aXIgdW5zIGJlciBWb2Vsa2VsIEJpbyBDb2NrdGFpbHMsIFNvbW1lcmpvZ2h1cnRzIHZvbiBkZW4gU2Nocm96YmVyZ2VyIEJhdWVybiwgRGF2ZXJ0IFBpdGEgVGFzY2hlbiB1bmQgQmlvIEh1bW11cyBvZGVyIFNjaGxhbmdlbmd1cmtlbiB6dSBnbnN0aWdlbiBQcmVpc2VuIGhpZXIgYWxsZSBBbmdlYm90ZTouIApUaGVSZWFsTGFyZ2Vkd2FyZiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpPdmVydmlldyBmb3Igbm92ZW1iZXJjcmFzaApJbSBSYWhtZW4gZGVyIEVyc3RlbGx1bmcgZGVzIFJlc29ydHMgd2lyZCBhdWNoIGRhcyBTa2lnZWJpZXQgendpc2NoZW4gQW5kZXJtYXR0IHVuZCBTZWRydW4gbW9kZXJuaXNpZXJ0IHVuZCB6dXNhbW1lbmdlc2NobG9zc2VuLiAKTmVlZGxlc3MgdG8gc2F5IEkgZGlkIG5vdCBnZXQgbXkgU2Npb24gdW50aWwgSSB3YXMgMjAgYXMgYSByZXN1bHQuIApON0xUICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhleSAidHJpZWQiIHRvIG1ha2UgYSBwaG9uZSBmb3IgdGhlIG1hc3Nlcy4gCklmIHlvdSB3YW50ZWQgdG8gZ2V0IGFsbCBzY2llbnRpZmljLCBJIHRoaW5rIHRoZSBlc3RpbWF0ZSBpcyB0aGF0IDM1JSBodW1pZGl0eSBpcyBvcHRpbWFsLiAKV2Ugd2VyZSBtZW50YWxseSBwcmVwYXJlZCB0byByZXRpcmUsIGl0IHdhc24gbGlrZSBhbnlvbmUgZm9yY2VkIHVzIG91dCwgaGUgc2FpZC4gClRoZSBwcmV2aW91cyBMaWJlcmFsIGdvdmVybm1lbnQgYmFubmVkIHNvIGNhbGxlZCBmbGlwcGluZyBvZiBob21lcyBpbiAyMDE2LCB3aGljaCBpbnZvbHZlZCBtdWx0aXBsZSBxdWljayBzYWxlcyB3aXRob3V0IHRoZSBvcmlnaW5hbCBzZWxsZXIga25vd2xlZGdlIGFuZCB3aXRoIGludGVybWVkaWFyaWVzIGxpa2UgcmVhbCBlc3RhdGUgYWdlbnRzIGFuZCBzcGVjdWxhdG9ycyBhY2N1c2VkIG9mIHBvY2tldGluZyB0aGUgcHJvZml0cy4KQWxzbywgaWYgeW91IGVuam95IHdvcmtpbmcgb3V0IGR1cmluZyB5b3VyIHN0YXksIHlvdSB3aWxsIGJlIGFibGUgdG8gdmlzaXQgdGhlIGhvdGVsIGd5bSBhbmQgc3BvcnRzIGFyZWEuIFRoZSBmb3VyIG1lZXRpbmcgcm9vbXMgc2l0dWF0ZWQgaW4gdGhlIGhvdGVsIGFyZSBlcXVpcHBlZCB3aXRoIGFsbCB0aGUgbmVjZXNzYXJ5IHRlY2hub2xvZ3kgZm9yIG1lZXRpbmdzIGFuZCBjb25mZXJlbmNlcy4gCkgyZzIgUmVzZWFyY2hlcnMgUmVtZW1iZXIgdGhlIFNvbmdNeSBtdW0gdXNlZCB0byBzaW5nIGl0IHRvIHVzIHdoZW4gd2Ugd2VyZSBjaGlsZHJlbi4gU29tZWhvdywgdGhlIHRleHQgYW5kIG1lbG9keSBzdHVjayBhbGwgdGhlc2UgeWVhcnMuIFRob3VnaCBJJ3ZlIHdvcmtlZCBmb3IgQXVzdHJpYW4gYW5kIHRoZW4gR2VybWFuIGZpcm1zIGZvciBuZWFybHkgdGVuIHllYXJzLCBteSBjb252ZXJzYXRpb24gaW4gR2VybWFuIGlzIHN0aWxsIGhhbHRpbmcgICBleGNlcHQgdGhhdCBJIGNhbiBub3cgcXVvdGUgdGhpcyBlbnRpcmUgcG9lbSwgd2l0aCB3aGF0IGhhcyBiZWVuIChzbGlnaHRseSBpbnN1bHRpbmdseSkgZGVzY3JpYmVkIGFzICd0aGUgcHJvbnVuY2lhdGlvbiBvZiBhIG11Y2ggYmV0dGVyIEdlcm1hbiBzcGVha2VyJy4gCkl0J3MgdGhlIGtpc3Mgb2YgZGVhdGggZm9yIGEgc3VwcGxpZXIgdG8gYnV5IHdvcmsgYW5kIHNoaXAgbW9uZXkgb3V0IHdpdGggZXZlcnkgYm94LiIuIApJdmUgZG9uZSBJVCBmb3IgYSBmZXcgeWVhcnMgYW5kIGZlZWwgYSBsb3QgbW9yZSBpbnRyb3ZlcnRlZCBub3csIEkgZGlkIEtvcmVhIDcgOCB5cnMgYWdvIGFuZCBJIGxpa2VkIGl0IGJlY2F1c2UgdGVhY2hpbmcgZ2F2ZSBtZSBlbmVyZ3kgYW5kIGl0IHdhcyBuaWNlIHRoZXJlIChjYW1lIGhvbWUgZm9yIGZhbWlseSkuIEkgYW0gbm90IHF1aXRlIHN1cmUgaWYgSSBhbSB0aGF0IHNhbWUgcGVyc29uIHRob3VnaCBvciBpZiBLb3JlYSBpcyB0aGUgc2FtZSBjb3VudHJ5LiAKV2UgaGF2ZSBhIGRlcGFydG1lbnQgb2YgaGVhbHRoIGFuZCBodW1hbiBzZXJ2aWNlcy4gCkV2ZW4gUnVzc2lhbiBGb3JlaWduIE1pbmlzdGVyIFNlcmdleSBMYXZyb3YsIG5vdG9yaW91cyBmb3IgaGlzIGNhcmVmdWxseSBwaHJhc2VkICJkaXBsb21hdGVzZSIsIGRpZCBub3Qgc3BhcmUgc3VwZXJsYXRpdmVzIGFib3V0IHRoZSBzdW1taXQncyByZXN1bHRzLgo0LiBPbmx5IGEgbWVtYmVyIG9mIHRoZSByYWNlIGNhbiBiZSBhIGNpdGl6ZW4uIEEgbWVtYmVyIG9mIHRoZSByYWNlIGNhbiBvbmx5IGJlIG9uZSB3aG8gaXMgb2YgR2VybWFuIGJsb29kLCB3aXRob3V0IGNvbnNpZGVyYXRpb24gb2YgY3JlZWQuIENvbnNlcXVlbnRseSBubyBKZXcgY2FuIGJlIGEgbWVtYmVyIG9mIHRoZSByYWNlLgpBdCB0aW1lcywgaGlzIGRlbWFuZHMgZm9yIGNyZWRpdCBhYm91dCB3aGF0IGlzIGhhcHBlbmluZyBjb250cmFzdCB3aXRoIHRoZSBwdWJsaWMgY29tbWVudHMgb2YgaGlzIHNlbmlvciBhaWRlcywgd2hvIHNlZW0gbXVjaCBsZXNzIGNvbnZpbmNlZCB0aGF0IE5vcnRoIEtvcmVhIGhhcyByZWFsbHkgY2hhbmdlZC4KV2h5IHRoaXM/IExldCBzYXkgZm9yIHRoZSBzYWtlIG9mIHRoZSBhcmd1bWVudCB0aGF0IGl0IGlzIHByb3ZlbiB0aGF0IFRydW1wIGRpZCBjb25zcGlyZSB0aGlzIHdheTsgaG93ZXZlciwgZm9yIG9uZSByZWFzb24gb3Igb3RoZXIgc3VjaCBhY3RzIGRpZCBub3QgY2hhbmdlIHNpZ25pZmljYW50bHkgdGhlIG91dGNvbWUgb2YgdGhlIGVsZWN0aW9ucywgbWVhbmluZyB0aGF0IGhlIHdvbiBsZWdpdGltYXRlbHkgaW4gc3BpdGUgb2YgaXQgYWxsLiBXaHkgd291bGQgeW91IGJlIG9rIHdpdGggdGhpcz8gRXZlbiBpZiBoZSB3YXMgZWxlY3RlZCBsZWdpdGltYXRlbHksIGhlIHN0aWxsIGJlIGEgbW9uc3Ryb3VzbHkgdW5ldGhpY2FsIGZlbG9uIHdobyBwdXQgaW4gamVvcGFyZHkgQW1lcmljYSBpbnRlcmVzdHMgYnkgcG90ZW50aWFsbHkgZ2l2aW5nIGxldmVyYWdlIHRvIGEgZm9yZWlnbiwgbW9zdGx5IGhvc3RpbGUgc3VwZXJwb3dlciB0byBpbnN0YWxsIGEgcHJlc2lkZW50IGZyaWVuZGx5IHRvIHRoZW0uIApBZnRlciBhYm91dCAyIHllYXJzIEkgc3RhcnRlZCB0byBnZXQgYWxtb3N0IG5vdCBjb21tdW5pY2F0aW9uIGZyb20gcGVvcGxlLiBUaGUgOCB5ZWFycyBhZnRlciB0aGF0IEkgaGFkIGEgdG90YWwgb2YgMiBwZW9wbGUgY29udGFjdCBtZSBldmVyeSBmZXcgeWVhcnMuIEkgZmluYWxseSBnb3QgcmlkIG9mIG15IHBob25lIGFuZCByZXBsYWNlZCBpdCB3aXRoIGEgYnVybmVyIGJlY2F1c2UgdGhlIGNvc3RzIHdlcmUgJDkvbW9udGguIApBbmxzc2xpY2ggZGVyIFdlbHRhdXNzdGVsbHVuZyAxODczIHd1cmRlIGRhcyBCYXV3ZXJrIHp1IGVpbmVtIEhvdGVsIHVtZ2ViYXV0LiBadWxldHp0IHdhcmVuIE1hZ2lzdHJhdGUgZGVyIFN0YWR0IFdpZW4gdW5kIEJyb3MgaW4gZGVyIEltbW9iaWxpZSB1bnRlcmdlYnJhY2h0Li4gCkR1cmluZyB0aGUgUmVwdWJsaWNhbiBzdGF0ZSBjb252ZW50aW9uLCB0aGUgU3VsbGl2YW4gY2FtcGFpZ24gZGlzdHJpYnV0ZWQgZmxpZXJzIGF0dGFja2luZyBQYXdsZW50eSBmb3Igc3VwcG9ydGluZyBhIGdheSByaWdodHMgYW1lbmRtZW50IGluIDE5OTMuIEluIGEgbGF0ZSBuaWdodCBzcGVlY2ggdG8gY29udmVudGlvbiBkZWxlZ2F0ZXMsIFN1bGxpdmFuIHF1ZXN0aW9uZWQgd2hldGhlciBQYXdsZW50eSB3YXMgYSB0cnVlIGNvbnNlcnZhdGl2ZS4KUGVvcGxlIGFza2luZyBpZiBpdCBpcyBub3JtYWwgdG8gdGFrZSB0aGlzIGxvbmcgbGV2ZWxpbmcsIG9yIG5lZWRpbmcgdG8gZWF0L2RyaW5rIGFmdGVyIGV2ZXJ5IHB1bGwuCk5vdGFibGUgb2JzZXJ2ZXIsIGZhbWlsaWFyIHdpdGggdGhlIGlzc3VlIGFuZCBjcml0aWNhbCBvZiBMb25kb24gbW92ZSwgc2F5cyBzaGUgd291bGRuIHdhbnQgdG8gc2VlIG90aGVyIHBvbGljZSBmb3JjZXMgZm9sbG93IHN1aXQuQmFyYiBNYWNRdWFycmllLCBjb21tdW5pdHkgZGlyZWN0b3Igb2YgdGhlIENlbnRyZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbiBvbiBWaW9sZW5jZSBBZ2FpbnN0IFdvbWVuIGFuZCBDaGlsZHJlbiAoRnJlZSBQcmVzcyBmaWxlIHBob3RvKXJlYWxseSBob3BlIG90aGVyIHBvbGljZSBmb3JjZXMgd29uIGZvbGxvdyB0aGUgbGVhZCBvZiB0aGUgTG9uZG9uIHBvbGljZSBzZXJ2aWNlIGluIHRoaXMgcHJhY3RpY2UsIHNhaWQgQmFyYiBNYWNRdWFycmllLCB3aG8gaGVhZHMgV2VzdGVybiBVbml2ZXJzaXR5IENlbnRyZSBmb3IgUmVzZWFyY2ggYW5kIEVkdWNhdGlvbiBvbiBWaW9sZW5jZSBBZ2FpbnN0IFdvbWVuIGFuZCBDaGlsZHJlbi50aGluayB0aGlzIGNvbW11bml0eSBoYXMgZ29uZSBkb3duIHRoZSB2ZXJ5IGRhbmdlcm91cyByb2FkIG9mIGNvbmZsYXRpbmcgdHJhZmZpY2tpbmcgd2l0aCBjb25zZW5zdWFsIHNleCB3b3JrLiBJdCBhIGxhenkgYW5hbHlzaXMuIEl0IGRvZXMgbm90aGluZyB0byBhZGRyZXNzIHRoZSByZWFsIHByb2JsZW0sIHNoZSBzYWlkLkh1bWFuIHRyYWZmaWNraW5nIGlzIGRlZmluZWQgYXMgdGhlIGV4cGxvaXRhdGlvbiBvZiBwZW9wbGUgZm9yIHByb2ZpdCB0aHJvdWdoIGZvcmNlLCBmcmF1ZCBvciBjb2VyY2lvbiwgYSBjcmltZSB3aXRoIHR3byBjYXRlZ29yaWVzOiBsYWJvdXIgYW5kIHNleCB0cmFmZmlja2luZy5FeHBlcnRzIGhhdmUgaWRlbnRpZmllZCBMb25kb24gYXMgYSBodWIgZm9yIHNleCB0cmFmZmlja2luZyBiZWNhdXNlIG9mIGl0cyBrZXkgbG9jYXRpb24gYWxvbmcgdGhlIEh3eS4gCklCTSBDYW5hZGEgaGFzIHdvbiBtb3JlIHRoYW4gJDMgYmlsbGlvbiB3b3J0aCBvZiBnb3Zlcm5tZW50IGNvbnRyYWN0cyBzaW5jZSAyMDE2LCBtYWlubHkgYmVjYXVzZSB0aGUgY3VycmVudCBwcm9jdXJlbWVudCBzeXN0ZW0gZ2l2ZXMgQmlnIEJsdWUgYW5kIG90aGVyIGxhcmdlIG11bHRpIG5hdGlvbmFsIHZlbmRvcnMgYW4gaW5zaWRlIHRyYWNrLiBGb3IgaW5zdGFuY2UsIHRoZSBmZWRzIG1hbmRhdGUgdGhhdCBhbGwgYXBwbHlpbmcgY29tcGFuaWVzIG11c3Qgc2hvdyB0aGV5IGhhdmUgZG9uZSBmaXZlIGVxdWl2YWxlbnQgcHJvamVjdHMgYXMgYSBtaW5pbXVtLiAKUmVtZW1iZXIsIHRoZSBwb2ludCBvZiBhIG1hc3NhZ2UgaXMgdG8gbWFrZSB0aGVtIGZlZWwgZ29vZCwgbm90IHlvdS4uIApJbiBIYXNrZWxsICh3aXRoIGEgbm9uIGFuY2llbnQgR0hDKSBtYW55IHJlY3Vyc2l2ZSBmdW5jdGlvbnMgcnVuIHdpdGhvdXQgdXNpbmcgdXAgaW5jcmVhc2luZyBzdGFjaywgZWl0aGVyIGJ5IHRhaWwgY2FsbCBvcHRpbWl6YXRpb24gb3IgYnkgbGF6aW5lc3MuIApJbSBDb21tZXJjaWFsYmVyZWljaCBtYWcgZGFzIGFsbGVzIGV0d2FzIGhhcm1sb3NlciBzZWluLiBEYWZyIGdpYnQgZXMgemFobHJlaWNoZSBNYXJrdGJlcmljaHRlIGRlciBNYWtsZXJodXNlci4KRWVuIGxhbmdlIG1ldHJvcml0IGJyYWNodCBvbnMgYmlqIGRlIFZWVCBoZXQgZXhwb3NpdGllIHRlcnJlaW4gdmFuIGRlIFNvdmpldCBVbmllLiBIaWVyIGt3YW1lbiB3ZSBtZXRlZW4gaW4gZWVuIGdlemVsbGlnZSBkcnVrdGUgdGVyZWNodCEgRGUgMTAwIG0gaG9nZSB0aXRhbml1bSBvYmVsaXNrIGJvdmVuIGhldCBrb3Ntb25hdXRlbiBtdXNldW0sIGJsaW5rZW5kIGluIGRlIHpvbiBtZXQgZWVuIHNwYWNlIHNodXR0bGV0amUgb3AgZGUgdG9wLCB3YXMgemVrZXIgaGV0IGJla2lqa2VuIHdhYXJkLiBFbiBkYWFybmEgdm9sZ2RlbiB3ZSBkZSBtZW5zZW4gc3Ryb29tIHJpY2h0aW5nIGhldCBlaWdlbmxpamtlIHRlbnRvb25zdGVsbGluZ3NwYXJrLiBPbmRlciBlZW4gZ3JvdGUgdG9lZ2FuZ3Nwb29ydCBkb29yIGt3YW1lbiB3ZSBpbiBlZW4gZ3Jvb3QgcGFyay93YW5kZWxib3VsZXZhcmQsIG1ldCBibGlua2VuZGUgZm9udGVpbmVuLCBwYXZpbGpvZW5lbiB2YW4gZGUgdmVyc2NoaWxsZW5kZSAoZXgpIHNvdmpldCByZXB1YmxpZWtlbiwga3JhYW1wamVzLCBhdHRyYWN0aWVzLCBaZWVyIHRvZiBvbSBlZW5zIHJvbmQgdGUgbG9wZW4sIGVuIGJsaWprYmFhciB6aWpuIGRlIGZvbnRlaW5lbiAoemVlciBzamlla2UgZm9udGVpbmVuLCBkaWUgYnZiLiBkZSBrbGVkZXJkcmFjaHRlbiwgZW4gZGUgbGFuZGJvdXcsIHZhbiBkZSB2ZXJzY2hpbGxlbmRlIHNvdmpldCBzdGF0ZW4gdmVyYmVlbGRlbikgcGFzIGRpdCBlbiB2b3JpZyBqYWFyIGdlcmVub3ZlZXJkLiBNaWxhbmEgdmVydGVsZGUgZGF0IHplIGhpZXIgaW4gaGFhciBraW5kZXJ0aWpkIChjb21tdW5pc21lKSB2ZWVsIGt3YW0gZW4gZGF0IGhldCBwYXMgc2luZHMga29ydCB3ZWVyIGRlIG1vZWl0ZSB3YWFyZCB3YXMuIFdlIHdhbmRlbGRlbiB0b3QgaGV0IHBhdmlsam9lbiB2YW4gVWtyYSAoZGF0IGlzIG5vZyBuaWV0IGdlcmVub3ZlZXJkLCB6YWcgZXIgd2VsIHplZXIgYmlqem9uZGVyIHVpdCksIGVuIGtlZXJkZW4gZGFuIHRlcnVnLiBXZSBoZWJiZW4gb29rIGVlbiBwYWFyIHBhdmlsam9lbmVuIHZhbiBkaWNodGVyYmlqIGJla2VrZW4uIEhlbGFhcyB6aWpuIHdlIG1hYXIgZWVuIGRpayB1dXIgaW4gZGUgVlZUIGdld2Vlc3QgaGV0IHdhcyB6ZWtlciB2YW4gZGUgbGV1a3N0ZSB2ZXJyYXNzaW5nZW4gdmFuIE1vc2tvdSB2b29yIG9ucywgbWFhciB3ZSBoZWJiZW4gd2VsIGdlbm90ZW4gdmFuIGVlbiBsZWtrZXIgaWpzamUhCkJlZm9yZSB3ZSBtb3ZlZCBpbnRvIG91ciBjdXJyZW50IGhvbWUsIHdlIGhhZCBhIGNvbW1lcmNpYWwgZ3JhZGUgVFJVRSB0cmVhZG1pbGwgdGhhdCB3ZSBzb2xkIGJlY2F1c2UgaXQgd2FzIHRvbyBkYW1uIGhlYXZ5L2J1bGt5IHRvIG1vdmUgYW5kIGdldCBpbnRvIG91ciBuZXcgYmFzZW1lbnQuV2VudCB0byBhIGxvY2FsIGZpdG5lc3Mgc2hvcCB0b2RheSBhbmQgY2FtZSBhY3Jvc3MgYSBMaWZlc3BhbiA1NTAwaS4gClBlb3BsZSBoYXZlIGJlZW4gYWJsZSB0byAiYmVhdCIgYWxsIHRob3NlIHRoaW5ncyB0aGF0IGtpbGwgdXMsIHNvIHRoZSBhdmVyYWdlIGFnZSBoYXMgcmlzZW4uIApBcyB3aXRoIEJhY2t5YXJkIEJlYXN0cywgdGhlIGFydHdvcmsgaXMgYnkgTmVkIEJhcnJhdWQgYW5kIGZvbGxvd3MgdGhlIHNhbWUgYnJpZWYgKHRoZXJlIGlzIGV2ZW4gc29tZSBjcm9zc292ZXIgd2l0aCB0aGUgaW5zZWN0cyBtZW50aW9uZWQgaW4gQmVhc3RzKSBwcm92aWRpbmcgc3VmZmljaWVudCBkZXRhaWwgZm9yIGdlbmVyYWwgYW5pbWFsIGlkZW50aWZpY2F0aW9uLiBUaGUgZGVzaWduIGlzIHByZXR0eSBtdWNoIHRoZSBzYW1lLCBpcyBlYXN5IHRvIGZvbGxvdyBhbmQgcGVyZmVjdCBmb3IgZGlwcGluZyBpbiBhbmQgb3V0IG9mLiBBbG9uZyB3aXRoIGEgc2hvcnQgZ2xvc3NhcnksIHRoZXJlIGlzIGFuIGluZGV4IGF0IHRoZSBiYWNrIHRoYXQgbWFrZXMgc2VhcmNoaW5nIGZvciB5b3VyIGZhdm91cml0ZSBhbmltYWwgZWFzeSwgYWxvbmcgd2l0aCBhIGNvbnRlbnRzIHBhZ2UgYXQgdGhlIGZyb250LiBUaGUgbGFuZ3VhZ2UgdXNlZCBoZXJlIGlzIHNpbXBsZXIgdGhhbiBCZWFzdHMsIG1ha2luZyB0aGUgYm9vayBhY2Nlc3NpYmxlIHRvIGEgd2lkZXIgYWdlIHJhbmdlLgpUaGlzIGlzIG9ubHkgb25lIHBpZWNlIG9mIHRoZSBvdmVyYWxsIHBpZSBidXQgYW4gaW1wb3J0YW50IG9uZSB0byB5b3VyIG9ubGluZSBob2xkZW0gc3RyYXRlZ3kuLiAKTmljaHQgbnVyIGRpZSBleHRyZW1lIEhpdHplIGlzdCB2b3JlcnN0IG1hbCB2b3JiZWksIGxlaWRlciBhdWNoIG1laW5lIEdsY2tzc3RyaG5lICBXaWUgaWNoIGVzIGphIHNjaG9uIGltIHZvcmxldHp0ZW4gUG9zdCBhbmdla25kaWd0IGhhYmUsIGlzdCBlcyBqZXR6dCBhdWNoIGVpbmdldHJvZmZlbi4gSmVkZXIgU3VwZXJsYXVmIGhhdCBsZWlkZXIgYXVjaCBlaW5tYWwgZWluIEVuZGUhIFNlaXQgendlaSBUYWdlbiBrYW5uIGljaCBrZWluZSBIYW5kIG1laHIgZ2V3aW5uZW4sIG1laW5lIERyYXdzIGtvbW1lbiBuaWNodCBhbiwgbWVpbmUgUG9ja2V0IFBhaXJzIHdlcmRlbiBhbGxlc2FtdCBnZXNjaGxhZ2VuIHVuZCBkaWUgR2VnbmVyIHRyZWZmZW4gbmFjaCBiZWxpZWJlbi4KV2hpbGUgdGhleSBhdHRyYWN0aXZlIHRvIHdvbWVuLCB0aGV5IGFsc28gZW1wb3dlcmluZyB0byBzb21lIGRlZ3JlZSBmb3IgbWVuICAgdGhleSBhcmUgY2hhcmFjdGVycyBpbiBtZWRpYSB0aGF0IGlzIGFpbWVkIHRvd2FyZCBtZW4sIGFmdGVyIGFsbC4gClN1cmUsIGl0IG1pZ2h0IG1ha2UgdGhhdCBkdWRlIGZlZWwgYmFkIGZvciBodXJ0aW5nIHNvbWVvbmUgZWxzZSdzIGZlZWxpbmdzLCBidXQgaXQgZG9lc24ndCBjaGFuZ2UgdGhlIHN0cnVjdHVyYWwgZW1wb3dlcm1lbnQgdGhhdCB0aGF0IGd1eSBnZXRzIG9uIGEgZGFpbHkgYmFzaXMsIG11Y2ggb2Ygd2hpY2ggaGUgcHJvYmFibHkgZG9lc24ndCBldmVuIHJlY29nbml6ZS4gCkF1dG9tYXRpb24gaXMgYWxyZWFkeSB0YWtpbmcgam9icywgYnV0IG5vdCBlbm91Z2ggdG8gaGF2ZSBhbnkgcmVhbCBpbXBhY3Qgb24gZW1wbG95bWVudCBudW1iZXJzLiBNY0RvbmFsZCdzIGFuZCBvdGhlciBmb29kIGNoYWlucyBoYXZlIGtpb3NrcyBmb3Igb3JkZXJpbmcuIFNpbGljb24gVmFsbGV5IGNvbXBhbnkgS25pZ2h0c2NvcGUgbWFrZXMgcm9ib3RzIHRoYXQgcmVwbGFjZSBzZWN1cml0eSBndWFyZHMgKHdpdGggbWl4ZWQgcmVzdWx0cykuIApCdXQgUnVzc2lhIGNvdWxkbiBjYXJlIGxlc3MgaWYgYSBSdXNzaWFuIGpvaW5zIHRoZSBjaHVyY2guIApUaGUgZGl2b3JjZSBwZXRpdGlvbiB3YXMgZmlsZWQgV2VkbmVzZGF5IGluIExvcyBBbmdlbGVzIFN1cGVyaW9yIENvdXJ0LCB3aXRoIGlycmVjb25jaWxhYmxlIGRpZmZlcmVuY2VzIGJsYW1lZC4gVGhlIGNvdXBsZSBkb2Vzbid0IGhhdmUgYW55IGNoaWxkcmVuLCBidXQgdGhleSB3aWxsIGhhdmUgdG8gZmlndXJlIG91dCBjdXN0b2R5IG9mIHRoZWlyIHNtYWxsIGFybXkgb2YgcGV0cy4gKFRoZSB0d28gYW5pbWFsIGxvdmVycyBjcnVzYWRlZCBmb3IgY3JpdHRlciByaWdodHMgYW5kIGNvZm91bmRlZCB0aGUgbm9ucHJvZml0IEFuaW1hbCBBdmVuZ2VycyByZXNjdWUgcHJvZ3JhbS4pCkNvbXBsZW1lbnRpbmcgdGhlIHF1YWxpdHkgd29vZGVuIGNvbnN0cnVjdGlvbiBpcyB0aGUgdXNlIG9mIHNvbGlkIGJyYXNzIGhhcmR3YXJlIG9uIGV2ZXJ5IGNhc2UuIE1hbnVmYWN0dXJpbmcgdGVjaG5pcXVlcyBhbHNvIGluY2x1ZGUgdGhlIHVzZSBvZiBhIHBvd2VyZnVsIG1hZ2ljIG1hZ25ldCB0aGF0IGlzIHNtYWxsIGVub3VnaCB0byBiZSBvYnRydXNpdmUgYnV0IHN0cm9uZyBlbm91Z2ggdG8gaG9sZCB0aGUgY292ZXIgc2h1dC4gVGhpcyBzaW1wbGUgdGVjaG5pcXVlIGFkZHMgZ3JlYXRlciBlbGVnYW5jZSBhbmQgc29waGlzdGljYXRpb24gdG8gYSBmaW5lIGxvb2tpbmcgd29vZGVuIGNhc2UuCkV2ZW4gaWYgeW91IHdlcmUgZGVlcGVyIGFuZCBkaWRuIHdhbnQgdG8ganVzdCBzaG92ZSBpdCBhbGwgaW4sIHlvdXIgcmFpc2Ugc2l6ZSBpcyB3YXkgdG9vIHNtYWxsLiBMaWtlIHNheSB5b3UgYm90aCBoYWQgYWJvdXQgNDBiYiwgbXkgbWluaW11bSBzaXplIE9PUCB3b3VsZCBwcm9iYWJseSBiZSAzLjV4IGhpcyByYWlzZSBzaXplLiBXaGVuIHlvdSBiZXQgdGhpcyBzbWFsbCwgZXNwZWNpYWxseSB3aGVuIGhlIGhhcyBwb3NpdGlvbiwgeW91IGp1c3QgZ2l2aW5nIGhpbSB3YXkgdG9vIGdvb2Qgb2YgYSBwcmljZSB0byBjb250aW51ZSB3aXRoIGFsbCBvZiBoaXMgaGFuZHMuCkkgd291bGQgbGlrZSB0byBnZXQgaW50byBhY2NvdW50aW5nIGJlY2F1c2UgaXQgb2ZmZXJzIGEgZ29vZCBzYWxhcnkgYXMgd2VsbCBhcyBnb29kIGNvbm5lY3Rpb25zIHRvIG11bHRpcGxlIG9wcG9ydHVuaXRpZXMuIE15IGFjY291bnRpbmcgY2xhc3MgaW4gaGlnaCBzY2hvb2wgaXMgY29tcGxpY2F0ZWQgYnV0IEkgZ290IHRocm91Z2ggaXQsIGFuZCBJIGVuam95IGxlYXJuaW5nIG1vcmUgYWJvdXQgYWNjb3VudHMgYW5kIGhvdyB0byBiYWxhbmNlIHRoZW0uIEkgZW5qb3kgd29ya2luZyB3aXRoIG51bWJlcnMgYW5kIHRoYXQgaXMgd2hhdCBhY2NvdW50aW5nIGlzLCB0cnlpbmcgdG8gbWFrZSBldmVyeXRoaW5nIGJhbGFuY2UgdG8gbWFrZSBzdXJlIHRoYXQgZXZlcnl0aGluZyBpcyBjaGVja2VkLgpZZWFoIHRoaXMgY291bGQgYmUgYXJndWVkIGVpdGhlciB3YXkgSSB0aGluay4gVGhhbmRpZSB3YXMgZ3JlYXQgYW5kIEkgZ2xhZCBzaGUgaGFkIGFzIG11Y2ggc2NyZWVuIHRpbWUgYXMgc2hlIGRpZC4gSG93ZXZlciwgRVJXIGhhZCB0b3AgYmlsbGluZyBhbmQgdWx0aW1hdGVseSB3YXMgdGhlIGZvY2FsIHBvaW50IG9mIHRoZSBzaG93IHdpdGggY29tcGFyYWJsZSBzY3JlZW4gdGltZS4gCkFsbCBvcHBvbmVudCBjb21ib3MgYWZ0ZXIgYSBoYW5kICh0aGlzIHdvdWxkIGhhdmUgYmVlbiBzbyBmdWNraW5nIHN3ZWV0LCBhbmQgYWN0dWFsbHkgdGhpcyBmZWF0dXJlIGlzIG5lYXJseSBjb21wbGV0ZSkuLiAKVHJhdmlzIFRyaXR0IEFsYnVtICJNeSBIb25reSBUb25rIEhpc3RvcnkiLCB3aXRoIGl0J3MgY292ZXIgcGhvdG8gc2hvdCBhdCBQaW9uZWVyIFNhbG9vbiBpbiBHb29kc3ByaW5ncywgTmV2YWRhICBTb3VyY2UKRmlyc3QgTmFtZT0gS2V5c2NpdHkuIExhc3QgTmFtZT0gSW5mby4gCkF0IGFib3V0IDU6MTUsIHlvdSBzYXkgdGhhdCBpbmRpY2F0aXZlIHN1Ymp1bmN0aXZlIGxhbmd1YWdlcyBhcmUgZnVzaW9uYWwgd2hpbGUgcmVhbGlzIGlycmVhbGlzIGxhbmd1YWdlcyBhcmUgYW5hbHl0aWMuIEhvd2V2ZXIsIHRoYXQganVzdCBzb3VuZHMgcmVhbGx5IGZpc2h5IHRvIG1lLiAKVGhlIEdyZWVuIENsaW1hdGUgRnVuZCwgdG8gd2hpY2ggaW5kdXN0cmFsaXplZCBuYXRpb25zIHBsZWRnZWQgYW4gYW5udWFsIGNvbnRyaWJ1dGlvbiBvZiBVUyQxMDAgYmlsbGlvbiBieSAyMDIwLCB3YXMgZGlzY3Vzc2VkIGluIEJvbm4uIEZpZ3VlcmVzIGNhbGxlZCB0aGUgZnVuZCBmaW5hbmNpYWwgbWFuYWdlbWVudCBjZW50ZXIgb2YgdGhlIGZ1dHVyZSBjbGltYXRlIHJlZ2ltZS4gVGhlIGZ1bmQgdHJhbnNpdGlvbmFsIGNvbW1pdHRlZSBoYXMgaGFkIHR3byBtZWV0aW5ncywgYW5kIGEgdGhpcmQgbWVldGluZyBpcyBzZXQgZm9yIFRva3lvIGluIEp1bHkuCkRlZmVuc2l2ZSBNZWRpY2luZSBEZWZlbnNpdmUgbWVkaWNpbmUgaXMgdGhlIHByYWN0aWNlIG9mIHBlcmZvcm1pbmcgb3Igb3JkZXJpbmcgdGVzdHMsIG1ha2luZyB1bm5lY2Vzc2FyeSByZWZlcnJhbHMgb3IgaG9zcGl0YWxpemluZyBhIHBhdGllbnQgbm90IGZvciBtZWRpY2FsIG5lY2Vzc2l0eSBidXQgdG8gZGVjcmVhc2UgdGhlIHBvc3NpYmlsaXR5IG9mIGEgbGF3c3VpdC4gRWFjaCB5ZWFyIGZvciBvcnRob3BlZGljIHN1cmdlb25zIGFsb25lLiBPZiB0aGUgMSwyMTQgc3VyZ2VvbnMgd2hvIHJlc3BvbmRlZCB0byB0aGUgc3VydmV5LCA5NiBwZXJjZW50IHJlcG9ydGVkIG9yZGVyaW5nIHRlc3RzLCByZWZlcnJhbHMgb3IgaG9zcGl0YWxpemF0aW9ucyBwcmltYXJpbHkgdG8gcHJvdGVjdCB0aGVtc2VsdmVzIGFnYWluc3QgbWFscHJhY3RpY2UgY2xhaW1zLi4gCkNyIENoYW1iZXJzIGJlbGlldmVzIEluZGlnbyBtZW1iZXJzaGlwIG9mIHRoZSBhbGxpYW5jZSB3aWxsIGJvbHN0ZXIgaXRzIG9wcG9zaXRpb24gdG8gcG9rZXIgbWFjaGluZXMuICJZb3UgYmV0LCIgQ3IgQ2hhbWJlcnMgc2FpZC4gIlRoaXMgZ2l2ZXMgdXMgYWRkZWQgc3RyZW5ndGggZm9yIGFueSBkZWZlbmNlIGFnYWluc3QgYW4gYXBwcm9hY2ggZm9yIHBva2VyIG1hY2hpbmVzLiAiSXQgcmVpbmZvcmNpbmcgdGhlIEluZGlnbyBkZWZlbmNlIG9mIHBva2llcyBJbmRpZ28gY291bmNpbCBkaXJlY3RvciBvZiBkZXZlbG9wbWVudCBhbmQgcGxhbm5pbmcgTWFyayBGbG9yZW5jZSBzYWlkIGJlaW5nIHBhcnQgb2YgdGhlIGFsbGlhbmNlIHdvdWxkIGdpdmUgdGhlIHNoaXJlIGFjY2VzcyB0byBwbGFubmluZyBpbmZvcm1hdGlvbi4gCkZpcnN0IE5hbWU9IEtleXNjaXR5LiAKT2Z0ZW4gKGlmIG5vdCBhbHdheXMpLCB0aGUgcHJldmlvdXMgcGF5b3V0IHRpY2tldCB3aWxsIGdvIGluIHRoZSBzYW1lIHNsb3QgdGhlIGNhc2ggY2FuIGJlIGluc2VydGVkLiAKQ3VycmVudGx5LCB0aGUgZGVwYXJ0bWVudCBpcyBub3QgaW52b2x2ZWQgaW4gdGhlIHByb2Nlc3MuVGFmcmFsaWFuIHNhaWQgdGhlIG5ldyBvcmRpbmFuY2Ugc2hvdWxkIHdlZWQgb3V0IG1hc3NhZ2UgYnVzaW5lc3NlcyB0aGF0IGFyZSBmcm9udHMgZm9yIHByb3N0aXR1dGlvbi4uIApTaWUgc2NocmVpYmVuOiAxLiBKdW5pIDIwMTQgZmVpZXJ0ZSBkaWUgR2VtZWluc2NoYWZ0IEF1dGFyY2EgTWF0cmljdWx0dXJhIGF1ZiBkZXIga2FuYXJpc2NoZW4gSW5zZWwgTGEgUGFsbWEgaWhyZW4gc2llYnRlbiBHZWJ1cnRzdGFnLiAKTW9zdCBwZW9wbGUgd2hvIGFyZSBsYWN0b3NlIGludG9sZXJhbnQgY2FuIHRvbGVyYXRlIHRyYWNlIGFtb3VudHMgb2YgbGFjdG9zZSBqdXN0IGZpbmUsIGFuZCBtYW55IHBlb3BsZSBqdXN0IGZpbmQgdGhhdCB0aGluZ3MgbGlrZSBtaWxrIGFuZCBjcmVhbSBhcmUgcHJvYmxlbWF0aWMsIGJ1dCBzbWFsbCBhbW91bnRzIG9mIHlvZ3VydCBhbmQgbW9zdCBjaGVlc2VzICh3aGVyZSB0aGUgbGFjdG9zZSBoYXMgYmVlbiBicm9rZW4gZG93biBieSB0aGUgY3VsdHVyaW5nIG9yIGNoZWVzZSBtYWtpbmcgcHJvY2VzcykgYXJlIG5vIGlzc3VlLi4gCklJLiBMJ2ludGdyYXRpb24gc291cyBsJ2FuZ2xlIGZvbmN0aW9ubmVsIDogbGVzIHBybWljZXMgZCd1biBhYmFuZG9uIGRlcyBhbmNpZW5uZXMgbXRob2RlcyAuIDIwNApBbmQgdGhlIGxhc3Qgb25lIGluIFZlZ2FzIGhhZCBhIGxvdCBvZiB1bnNvbGQgdGlja2V0cy4gCkFsc28sIHlvdSBhc2tpbmcgbWUgdG8gcG9pbnQgb3V0IHNvbWV0aGluZyB0aGF0IHdpbGwgcHJvYmFibHkgbmV2ZXIgYmUgZnVsbHkgcHJvdmVuLiBMZXQgc2F5IGFuIGFjdG9yIGdvZXMgb3ZlciB0aGUgaGVhZCBvZiB0aGUgZGlyZWN0b3IgYW5kL29yIHByb2R1Y2VyIGFuZCB0aGUgbW92aWUgY29tZXMgb3V0IGJldHRlciB0aGFuIGl0IHdvdWxkIGhhdmUgb3RoZXJ3aXNlLiBEbyB5b3UgZXhwZWN0IHRoZSBkaXJlY3RvciBhbmQvb3IgcHJvZHVjZXIgdG8gcHVibGljbHkgc3RhdGUgIkkgaGFkIHRoaXMgaWRlYSBidXQgW0FjdG9yL0FjdHJlc3NdIHdlbnQgb3ZlciBteSBoZWFkIGFuZCB0aGUgbW92aWUgaXMgYmV0dGVyIGJlY2F1c2Ugb2YgaXQuIiBJIGhpZ2hseSBkb3VidCBhbnlvbmUgaW4gSG9sbHl3b29kIGhhcyB0aGF0IG11Y2ggaHVtaWxpdHkgaWYgdGhlIG1vdmllIHdhcyBhIGJveCBvZmZpY2Ugc21hc2guLiAKTXkgYWltIGlzIGp1c3QgdG8gZ2l2ZSB0aGVtIGEgYnJvYWQgdmlldyBhbmQgZ2V0IHRoZW0gdGhpbmtpbmcgYWJvdXQgdGhlIGNvbnRpbmVudCBhcyBhIHdob2xlIHNpbmNlIHRoZSB0ZXh0IGFuZCBtb2R1bGVzIGRvIGEgZ29vZCBqb2IgYXQgYmVpbmcgbW9yZSBzcGVjaWZpYy4uIApUaGUgc2FkIHRoaW5nIGlzLCBCaWRlbiBhIHNtYXJ0IGd1eSBhbmQgdGhlIFRpbWVzIHJlYWRlcnMgYXJlIHNtYXJ0IGVub3VnaCB0byBlbmdhZ2UgaW4gYSByZWFsIGRpc2N1c3Npb24gYW5kIGV2ZW4gZGVmZW5zZSBvZiB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gY2hvc2VuIHBhdGggdG8gZWNvbm9taWMgcmVjb3ZlcnkuIApNb3N0bHkgSSBqdXN0IGRvIHdhcm0gdXAgc2V0cyB0aGVuIHNpbmdsZXMgYWxsIHRoZSB3YXkgdXAgdW50aWwgSSBnZXQgdG8gYSBkYWlseSBtYXguIApEb24gc2VlIGl0IGFzIGNvZXJjaW5nIG9yIGNoYW5naW5nIHRoZSBtYXJrZXQgaXRzZWxmLCBoZSBzYWlkLiBOb3QgZ29pbmcgdG8gbWFrZSBob3VzaW5nIG1vcmUgYWZmb3JkYWJsZS4gRnJhbmtseSB0aGVzZSBpc3N1ZXMsIHRoZSBzcGVjdWxhdGlvbiB0YXgsIHZhY2FuY3kgdGF4LCBmb3JlaWduIGJ1eWVyIHRheCBhbmQgc2Nob29sIHRheCBub25lIG9mIHRoZXNlIG1lYXN1cmVzIGFyZSBnb2luZyB0byBtYWtlIGhvdXNpbmcgbW9yZSBhZmZvcmRhYmxlLiAKTW9yZSBnZW5lcmFsbHkgeW91IGNhbiB0ZWxsIHdoZW4gbWVuIGFwcGx5IGRvdWJsZSBzdGFuZGFyZHMgdG8gd29tZW4gYW5kIGRvbiBzZWUgdGhlbSBhcyBmdWxseSBodW1hbi4gVGhleSBpbnNpc3Qgb24gd2Fsa2luZyB5b3UgaG9tZSBldmVuIHdoZW4geW91IHNheSBubywgeW91IGZpbmUuIAo2ODEgMTd0aCBBdmUuIApXaHkgbm90IGZvY3VzIG9uIHdlbGwgdGhvdWdodCBvdXQgYW5kIHJlYXNvbmVkIHBvc3RzPyBEbyB5b3UgZXZlbiBjYXJlIGFib3V0IHRoZSBnb3Zlcm5tZW50IGJlaW5nIHRyYW5zcGFyZW50IGFzIHRoaXMgYXJ0aWNsZSB0YWxrcyBhYm91dCwgb3IgYXJlIHlvdSBtb3JlIGludGVyZXN0ZWQgaW4gYmFzaGluZyBUcnVtcCBzdXBwb3J0ZXJzPy4gClRoZWlyIHRlbGxzIGFyZSBub24gZXhpc3RlbnQgYW5kIHRyeSBhcyB5b3UgbWF5LCB5b3Ugd29uJ3QgYmUgYWJsZSB0byBob29rIHRoZW0gdXAgdG8gYSB0aWx0LiAKTXMgV2hpdGUgaW5zaXN0ZWQgc2hlIHdvdWxkIHN0YXkgb24gaW4gdGhlIGpvYiB3aXRob3V0IGEgbGVhZGVyc2hpcCBiYWxsb3QsIGhhdmluZyByZWNlaXZlZCBhIHByb21pc2UgZnJvbSByZSBlbGVjdGVkIGZvcm1lciBMYWJvciBtaW5pc3RlciBEYXZpZCBPIHRoYXQgaGUgd291bGQgbm90IG1vdW50IGEgY2hhbGxlbmdlLiBUaGUgTGFib3IgbGVhZGVyIHdvdWxkIG5vdCBzYXkgd2hldGhlciBzaGUgd291bGQgb2ZmZXIgTXIgTyBhIHNoYWRvdyBtaW5pc3RyeS4gIkl0IGJlIGFub3RoZXIgMTAgZGF5cyBiZWZvcmUgd2Uga25vdyB0aGUgbWFrZXVwIG9mIG91ciB0ZWFtIGFuZCBpbmRlZWQgdGhlIG1ha2V1cCBvZiB0aGUgcGFybGlhbWVudCBzbyBJIG5vdCBnb2luZyB0byBzcGVjdWxhdGUgb24gd2hvIGhhcyB3aGF0IHBvcnRmb2xpb3MsIiBNcyBXaGl0ZSBzYWlkLiAKWW91IGNhbiBjaGFuZ2UgeW91ciBzdHJhdGVneSBnb2luZyBmb3J3YXJkLCBpZiB5b3Ugbm90aWNlIGl0IGRvZXNuIHByb2ZpdCB5b3UgYWZ0ZXIgYSBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGFtb3VudCBvZiB0aW1lLiAKT3VyIHJlZ3VsYXIgdGVhY2hlciB3YXMgYSB0b3VnaCBkaXNjaXBsaW5hcmlhbiAuIFdlIGhhZCB0byBzaXQgdXAgc3RyYWlnaHQgaW4gb3VyIHNlYXRzIHdpdGggZ29vZCBwb3N0dXJlcywgcmFpc2Ugb3VyIGFybSBzdHJhaWdodCB1cCBpZiB3ZSBrbm93IHRoZSBhbnN3ZXIgdG8gYSBxdWVzdGlvbiwgc3RhbmQgc3RyYWlnaHQgd2l0aCBjb3JyZWN0IHBvc3R1cmUgd2hlbiBhbnN3ZXJpbmcsIHNwZWFrIGluIHByb3BlciBFbmdsaXNoICh0aGlzIHdhcyBpbiBIYXdhaWkgd2hlcmUgbW9zdCBraWRzIHNwb2tlIHBpZGdpbiBFbmdsaXNoKSwgYW5kIGFsd2F5cyByZWZlciB0byBoZXIgYXMgbWEgVGhlbiB3ZSBoYWQgYSBzdWJzdGl0dXRlIG9uZSBkYXkgYW5kIGhlIGxvb2tlZCBhdCB1cyBhbGwgc2l0dGluZyB1cCBzdHJhaWdodCBhdCBvdXIgZGVza3MsIGxvb2tpbmcgZm9yd2FyZCBhbmQgZXZlcnlvbmUgcXVpZXQgYXMgY2FuIGJlLiAKVGhlIFBvc3Qgd2FzIG1haW5seSByZW1vdmVkIGFzIHdlIGRvbiBhbGxvdyBkaXJlY3QgdmlkZW9zIG9mIGNoZWF0aW5nLCBjZW5zb3JlZCBvciBub3QgYXMgdGhpcyBpcyBnZXR0aW5nIHZlcnkgc3BhbW15IGFuZCBkb2VzIG5vdCBjb250cmlidXRlIG11Y2ggZGlzY3Vzc2lvbiB0aGF0IGhhcyBhbHJlYWR5IGJlZW4gc2FpZC4gTm93IHRoaXMgbWF5IG5vdCBoYXZlIGJlZW4gY2xlYXIgaW4gdGhlIHJ1bGVzIGFuZCBiZWNhdXNlIG9mIHlvdXIgaW5wdXQgb24gdGhpcyB3ZSBoYXZlIGJ1ZmZlZCB1cCBvdXIgTm8gY2FsbHMgdG8gYWN0aW9uIHJ1bGVzIHdoaWNoIGVsYWJvcmF0ZSBvbiB0aGlzLiBUaGUgbWFpbiByZWFzb24gZm9yIHJlbW92YWwgdGhvdWdoLCBhcyBzdGF0ZWQgZWFybGllciBpcyB0aGF0IGl0IHdhcyBzaW1wbHkgc2hvd2luZyB5ZXQgYW5vdGhlciBjaGVhdGluZyB2aWRlbywgYW5kIHdhcyBhIGR1cGxpY2F0ZSB0b3BpYy4gCkhlIG5ldmVyIHJlYWxseSBzdGF5ZWQgcHV0IGFuZCBjb2xsYWJvcmF0ZWQgd2l0aCBodW5kcmVkcyBvZiBtYXRoZW1hdGljaWFucyBhcyBhIHJlc3VsdC4gCkthbHR1ICJ3aGljaCBvbmVzPyIgdnMuIApEVUJMSU46IFRoZSBiaWdnZXN0IGV2ZXIgc3RyaXAgcG9rZXIgY2hhbXBpb25zaGlwIHdpbGwgYmUgaGVsZCBpbiBMb25kb24gbmV4dCBtb250aCwgd2l0aCBkYXJpbmcgY29udGVzdGFudHMgZnJvbSBhbGwgb3ZlciB0aGUgd29ybGQgdnlpbmcgdG8ga2VlcCB0aGVpciBjbG90aGVzIG9uLCBhIHNwb2tlc21hbiBzYWlkIG9uIGRheS4KSSB0aGluayBDYXJydXRoIG90aGVyIGZpbG0gVXBzdHJlYW0gQ29sb3Igd291bGQgYmUgYmV0dGVyIHRoYW4gUHJpbWVyIGZvciB0aGlzIHNvcnQgb2YgdGhpbmcuIApVcG9uIHRoZSBwbGFpbiBsYW5ndWFnZSBvZiB0aGUgc3RhdHV0ZSwgaG93ZXZlciwgd2UgcmVhY2ggYSBkaWZmZXJlbnQgcmVzdWx0LCBhdHRvcm5leXMgZm9yIHRoZSBkZXBhcnRtZW50IHdyb3RlIGluIHRoZSBvcGluaW9uIGRhdGVkIE5vdi4gMi4gCldoYXRldmVyIHRoZSByZXRhbGlhdGlvbiBtaWdodCBjb3N0LCBmb3IgcmVhc29ucyBvZiBuYXRpb25hbCBwcmlkZSwgTWV4aWNvIHdpbGwgZG8gaXQuIE9yIHBsYW50cyB0aGF0IHNlbGwgc3R1ZmYgdG8gTWV4aWNvIHRoYXQgYXJlIGdvaW5nIHRvIGZpbmQgdGhlaXIgc2FsZXMgZHJ5IHVwLiAKT3ZlciB0aGUgeWVhcnMsIGhlIHdhcyBhIG1lbWJlciBvZiBzZXZlcmFsIGNob2lycy4gCklhbiBCYWxmb3VyIEx5bm4sIG9mIExvbmRvbidzIFJveWFsIEJyb21wdG9uIEhvc3BpdGFsLCBwdWJsaXNoZWQgU2VwdC4gNiwgMjAxOCwgaW4gQXJjaGl2ZXMgb2YgRGlzZWFzZSBpbiBDaGlsZGhvb2QsIGNvbmNsdWRlcyB0aGF0IHRoZXJlIGlzIHZpcnR1YWxseSBubyBjb25uZWN0aW9uIGJldHdlZW4gZGFpcnkgcHJvZHVjdHMgYW5kIHVwcGVyIHJlc3BpcmF0b3J5IG11Y3VzICAgYW5kIHRoYXQgdGhlIG15dGggbWlnaHQgYmUgcHJldmVudGluZyBjaGlsZHJlbiB3aXRoIGNvbmRpdGlvbnMgbGlrZSBhc3RobWEsIGN5c3RpYyBmaWJyb3NpcyBvciBldmVuIHRoZSBjb21tb24gY29sZCBmcm9tIGdldHRpbmcgZW5vdWdoIG51dHJpZW50cyBsaWtlIGNhbGNpdW0uLiAKRXNzZW50aWFsIG9pbHMgc2hvdWxkIGFsd2F5cyBiZSBtaXhlZCB3aXRoIGEgY2FycmllciBvaWwgKGFsc28gY2FsbGVkIGJhc2Ugb2lsKSBzdWNoIGFzIGpvam9iYSBvaWwgb3Igc2VzYW1lIG9pbC4uIApJbCB2b3VzIGVzdCBpbnRlcmRpdCA6IGkpIGQndXRpbGlzZXIsIGRlIHJlcHJvZHVpcmUsIGRlIG1vZGlmaWVyLCBkJ2FkYXB0ZXIsIGRlIHRyYWR1aXJlLCBkZSB0IG91IGRlIHRyYW5zbWV0dHJlIGxlcyBsb2dpY2llbHMgZW4gdG90YWxpdCBvdSBlbiBwYXJ0aWU7IGlpKSBkZSB2ZW5kcmUsIGRlIGxvdWVyLCBkZSBjb25jIHNvdXMgbGljZW5jZSBvdSBkZSB0cmFuc2YgbGVzIGxvZ2ljaWVscyBvdSBkJ3kgcGVybWV0dHJlIHBhciBhaWxsZXVycyBsJ2FjYyBpaWkpIGRlIG1vZGlmaWVyLCBkZSByZXRpcmVyIG91IGRlIGNvdXZyaXIgcXVlbHF1ZSBtYXJxdWUgZGUgY29tbWVyY2Ugb3UgYXZpcyBkZSBwcm9wcmkgaW5jbHVzIGRhbnMgbGVzIGxvZ2ljaWVsczsgZXQvb3UgaXYpIGRlIGQgZGUgZCBkZSBkIGQnZXh0cmFpcmUgb3UgZGUgZCBsZSBTaXRlIHdlYiBvdSBsZXMgRm9uY3Rpb25uYWxpdCBldCBsZXVycyBjb21wb3NhbnRlcywgaW5jbHVhbnQsIG5vdGFtbWVudCwgbGVzIGxvZ2ljaWVscyBvdSBkJ2FpZGVyIHF1aWNvbnF1ZSBsZSBmYWlyZS4KVGhpcyBjYW4gYmUgYXBwbGllZCBhbG9uZyB3aXRoIGFyb21hdGhlcmFweSB0cmVhdG1lbnRzIGZvciBtYXhpbXVtIHJlbGF4YXRpb24uLiAKUmVnYXJkbGVzcyBJIHBsYXlpbmcgNS8xMCBJIG5vdCBpbiB0aGUgaGFuZCBidXQgdGhlIGRlYWwgciBpcyBhbiBvYnZpb3VzIHRlcnJpYmxlIGRlYWxlci4gMyBiZXQgcG90IHByZSB0aHJlZSB3YXkuIApJIGZpbmQgbW9zdC9tYW55IG9mIHRoZSBwZW9wbGUgYXJlIHByZXR0eSBpbnNwaXJpbmcgb24gdGhlIHNob3cgKGl0IGlzIG9mdGVuIHRoZSBlbmFibGluZyBmYW1pbHkgSSBmaW5kIG1vc3QgYm90aGVyc29tZSBhcyBzb21lIGFyZSBmZWVkZXJzIGFuZCBtYW5pcHVsYXRvcnMpLiBUaGVyZSBhcmUgYSBmZXcgbWFqb3IgdHJhaW4gd3JlY2tzIHRoYXQgSSBlbmpveSAiaGF0ZSB3YXRjaGluZyIgYnV0IG92ZXJhbGwgaW4gYWxsIHRoZSBzZWFzb25zIEkgaGF2ZSBzZWVuICh3aGljaCBpcyBtb3N0IG9mIHRoZW0pIHRoZXJlIGFyZSBtb3JlIHlvdSByZWFsbHkgcm9vdCBmb3IgdGhlbiBub3QuIEl0IGlzIGVzcGVjaWFsbHkgaW5zcGlyaW5nIHdoZW4gdGhlIHlvdW5nIHBlb3BsZSBnZXQgdGhlaXIgbGlmZSB0b2dldGhlciBhcyBpbiB5b3VyIDIwcyB5b3UgaGF2ZSBzbyBtdWNoIGxpZmUgbGVmdCBpZiB5b3UgY2FuIHRhY2tsZSBtb3JiaWQgb2Jlc2l0eS4gCkluIFdpc2NvbnNpbiwgaXQgd2FzIGRpc2NvdmVyZWQgdGhhdCBzb21lIGJlZSBlZ2dzIGxheWVyZWQgaW4gcG9sbGVuIGRpZCBub3Qgc3Vydml2ZSBiZWNhdXNlIHRoZXJlIHdlcmUgbm8gbWljcm9iZXMgaW4gdGhhdCBwb2xsZW4uIFRyYWNpbmcgYmFjaywgaXQgd2FzIGRpc2NvdmVyZWQgdGhhdCBzb21lIG9mIHRoZSBmdW5naWNpZGVzIHVzZWQgdG8gY29udHJvbCBkaXNlYXNlcyB3ZXJlIGFsc28ga2lsbGluZyBtaWNyb2JlcyBpbiBwb2xsZW4uIApUcm9sbGJvbWJlciAgMTcgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkVzcGVjaWFsbHkgaWYgeW91IGFyZSBwYXRpZW50LiAKSWYgeW91J3JlIHdpbGxpbmcgdG8gcGF5IGZvciBoaXMgc2Nob29sLCB0aGFuIGhlIG5lZWRzIHRvIGJlIGhlbGQgdG8gdGhvc2UgZXhwZWN0YXRpb25zIGFuZCBpdCBzZWVtcyB0aGF0IHRoZXkgd2VyZSBtYWRlIGNsZWFyIGJlZm9yZSBoZSBsZWZ0IGZvciBzY2hvb2wuIApTaGUgaG9sZHMgYSBKdXJpcyBEb2N0b3IgZGVncmVlIGZyb20gUmVnZW50IFVuaXZlcnNpdHkgYW5kIGEgTWFzdGVycyBpbiBwdWJsaWMgcG9saWN5IGZyb20gTmV3IEVuZ2xhbmQgQ29sbGVnZS4uIApJIGhhdmUgb3BlbmVkIGRvemVucyBvZiB0aG91c2FuZHMgb2YgcGFtcGhsZXRzIG92ZXIgdGhlIHllYXJzLCBhbmQgdXN1YWxseSB0aGUgb25seSB0aGluZyB0aGF0IGhhcHBlbnMgaXMgdGhhdCB0aGUgcGFtcGhsZXQgb3BlbnMuIApMaXRlcmFsbHkgc2NyZWFtIGF0IGVhY2hvdGhlcgpIZSB3YXMgYW4gaW1wYWN0IHJvb2tpZSBpbiAyMDE2LiAKVGhlIHBva2VyIGZhY2VkLCBhbG1vc3QgZG9jaWxlIGRlbWVhbm91ciBvZiBBbmR5IFJvYmVydHMsIHdobyB3YXMgYm9ybiB0b2RheSwgaGlkIHRoZSBtZXJjaWxlc3Mgc291bCBvZiBhIGdyZWF0IGZhc3QgYm93bGVyLiAKSSB1bmRlcnN0YW5kIHRoYXQgeW91IGNhbiBnbyB0b28gZmFyIHRoZSBvdGhlciB3YXkgd2l0aCB0aGlzIGFuZCBpdCBjYW4gYmVjb21lIG9ibm94aW91cywgYnV0IEkgZG9uIHRoaW5rIHRoYXQgbGluZSBoYXMgYmVlbiBjcm9zc2VkLi4gCkNyZWFtcywgbGlnaHQgdGhlcmFweSwgc3VyZ2VyeSBhbmQgb3RoZXIgdHJlYXRtZW50cyBhcmUgYXZhaWxhYmxlIGFzIHBvc3NpYmxlIHRyZWF0bWVudHMuIElmIHlvdSBoYXZlIHN0cmV0Y2ggbWFya3MgeW91J2QgbGlrZSB0byBlbGltaW5hdGUsIHRhbGsgdG8geW91ciBkZXJtYXRvbG9naXN0IGFib3V0IHlvdXIgb3B0aW9ucyBbc291cmNlOiBXZWJNRF0uLiAKSW4gYWRkaXRpb24gdG8gaXRzIHJvbGUgaW4gcmVndWxhdGluZyB0aGUgc2xlZXAgd2FrZSBjeWNsZSwgbWVsYXRvbmluIGhhcyBiZWVuIHNob3duIHRvIGxvd2VyIGJsb29kIHByZXNzdXJlIGFuZCBib2R5IHRlbXBlcmF0dXJlIGFuZCBoYXMgYWxzbyBiZWVuIGV4cGxvcmVkIGFzIGEgdHJlYXRtZW50IG9wdGlvbiBmb3IgaW5zb21uaWEsIGh5cGVydGVuc2lvbiBhbmQgY2FuY2VyLgpNcyBXaGl0ZSBpbiBEZWNlbWJlciBwbGVkZ2VkIHRvIHJlbW92ZSB0aGUgInNjb3VyZ2UiIG9mIHNvbWUgMiwzMDAgZWxlY3Ryb25pYyBnYW1pbmcgbWFjaGluZXMgZnJvbSB0aGUgc3VidXJiYW4gdmVudWVzIGJ5IDIwMjMgaWYgZWxlY3RlZCBpbiBtYWpvcml0eS4gCkdlbmVyYWxseSBJIGV4cGVjdCBoaW0gdG8gY29udGludWUgd2l0aCBhbnkgY2x1Yi9jbHViIGhhbmQgYW5kIHdpdGggQUsrLiBNYXliZSBoZSBjaGVja2luZyBLUSBmb3IgcHJvdGVjdGlvbi4gCkhlcmUgdGhlIHRoaW5nLiBEb25hbGQgVHJ1bXAsIGFzIG11Y2ggb2YgYW4gYXNzIGFzIGhlIGlzLCBoYXMgdGhlIHNhbWUgcmlnaHQgdG8gcmVtYWluIHNpbGVudCBhcyBldmVyeSBvdGhlciBVUyBDaXRpemVuLiAKV2hlbiBhbGwgZml2ZSBjYXJkcyBhcmUgb24gdGhlIGJvYXJkIHRoZSBwZXJzb24gd2hvIHdlbnQgYWxsIGluIGlzIGZpcnN0IHRvIGFjdC4gCkFzIEkndmUgbWVudGlvbmVkIGJlZm9yZSwgYSBsb3Qgb2YgdGhlc2UgYmF0c2hpdCBjcmF6eSB0aGVvcmllcyB3b3VsZCBtYWtlIGtpY2thc3MgbW92aWVzLCBhbmQgSSdtIGFjdHVhbGx5IGtpbmQgb2YgcGlzc2VkIHRoZXkncmUgc28gcmFyZWx5IGFkYXB0ZWQgdG8gdGhlIHNpbHZlciBzY3JlZW4uIEl0J3MgYSBsaWNlbnNlIHRvIHByaW50IG1vbmV5LCBwZW9wbGUhLiAKVGhlIFZhdGljYW4gc3Bva2VzbWFuLCB0aGUgUmV2LiBGZWRlcmljbyBMb21iYXJkaSwgY29uZmlybWVkIHRoYXQgdGhlIG1pcmFjbGUgdGhhdCBicm91Z2h0IEpvaG4gUGF1bCB0byB0aGUgcmFua3Mgb2Ygc2FpbnRzIGNvbmNlcm5lZCBhIENvc3RhIFJpY2FuIHdvbWFuLCBGbG9yaWJldGggTW9yYSwgd2hvIG9uIEZyaWRheSBicm9rZSBtb250aHMgb2Ygc2lsZW5jZSB0byB0ZWxsIGhlciBzdG9yeSBpbiBwdWJsaWMsIHN1cnJvdW5kZWQgYnkgaGVyIGZhbWlseSwgZG9jdG9ycyBhbmQgY2h1cmNoIG9mZmljaWFscyBhdCBhIG5ld3MgY29uZmVyZW5jZSBpbiB0aGUgYXJjaGJpc2hvcCdzIHJlc2lkZW5jZSBpbiBTYW4gSm9zZSwgQ29zdGEgUmljYS4uIApBbiBkZXIgUmV6ZXB0aW9uOiBQZXJmZWt0aW9uIHB1ci4gCjEgdGhlIHdvcmQgb2YgdGhlIHRvIG1lLCBzYXlpbmcsIG9mIG1hbiwgc2V0IHlvdXIgZmFjZSBhZ2FpbnN0IEdvZywgb2YgdGhlIGxhbmQgb2YgTWFnb2csIHRoZSBwcmluY2Ugb2YgUm9zaCwgYW5kIFR1YmFsLCBhbmQgcHJvcGhlc3kgYWdhaW5zdCBoaW0sIHNheSwgc2F5cyB0aGUgTG9yZCBCZWhvbGQsIEkgeW91LCBPIEdvZywgdGhlIHByaW5jZSBvZiBSb3NoLCBNZXNoZWNoLCBhbmQgVHViYWwuIFdpbGwgdHVybiB5b3UgYXJvdW5kLCBwdXQgaG9va3MgaW50byB5b3VyIGphd3MsIGFuZCBsZWFkIHlvdSBvdXQsIHdpdGggYWxsIHlvdXIgYXJteSwgaG9yc2VzLCBhbmQgaG9yc2VtZW4sIGFsbCBzcGxlbmRpZGx5IGNsb3RoZWQsIGEgZ3JlYXQgY29tcGFueSBidWNrbGVycyBhbmQgc2hpZWxkcywgYWxsIG9mIHRoZW0gaGFuZGxpbmcgc3dvcmRzLiBFdGhpb3BpYSwgTGlieWEgd2l0aCB0aGVtLCBhbGwgb2YgdGhlbSBhbmQgaGVsbWV0OyBhbmQgYWxsIGl0cyB0cm9vcHM7IHRoZSBob3VzZSBvZiBUb2dhcm1haCBmcm9tIGZhciBub3J0aCBhbmQgYWxsIGl0cyB0cm9vcHMgcGVvcGxlIHlvdS4uIApTaXJpIHByb2R1Y3Rpb24gaXMgaG9iYmxlZCBieSBtaXNtYW5hZ2VtZW50LiBUcnlpbmcgdG8gcGVyZm9ybSBhcyB3ZWxsIGFzIEdvb2dsZSBBc3Npc3RhbnQgb3IgQWxleGEgd2l0aCBsZXNzIGRhdGEgYW5kIG9iZnVzY2F0ZWQgZGF0YSBpcyBoYXJkLiBQdWxsaW5nIGl0IG9mZiB3aWxsIHJlcXVpcmUgdGhlIGJlc3QgZW5naW5lZXJzLiAKTHVja2lseSwgd2UndmUgY29tZSB1cCB3aXRoIGEgbGlzdCBvZiBpdGVtcyBldmVuIHRoZSBtb3N0IGNvbXB1bHNpdmUgc2hvcHBlcnMgbWlnaHQgbm90IGhhdmUgdGhvdWdodCB0byBidXkuIFNvbWUgYXJlIGx1eGUgdmVyc2lvbnMgb2YgZXZlcnlkYXkgaXRlbXMsIHdoaWxlIG90aGVycyBhcmUgcHVyZSByZWNyZWF0aW9uLiBXZSd2ZSBhbHNvIGluY2x1ZGVkIHN0dWZmIGF0IGEgcmFuZ2Ugb2YgcHJpY2UgcG9pbnRzLCBiZWNhdXNlIHlvdSBkb24ndCBuZWVkIHRvIGJyZWFrIHRoZSBiYW5rIHRvIGdldCB5b3VyIGh1c2JhbmQgdGhlIHBlcmZlY3QgVmFsZW50aW5lJ3MgRGF5IGdpZnQuIApJcyB0aGVyZSBhbnkgd2F5IHRvIGdldCBmcmVlIFp5bmdhIHBva2VyIGNoaXBzCkVocmhhcnQsIFNhdCAgdXJkYXkgYW5kIFN1bmRheS4gCkljaCBwZXJzbmxpY2ggZmluZGUgc293YXMgd2VzZW50bGljaCBsdXN0aWdlciBhbHMgKHZpZWxlcyBhbikgcG9pbnRlbmJhc2llcnRlbiBIdW1vciwgYWJlciBpc3QgbmF0cmxpY2ggR2VzY2htYWNrc3NhY2hlLiBBYmVyIGdlcmFkZSBkaWVzZSBBcnQgdm9uIEh1bW9yIGlzdCBlcyBqYSBhdWNoLCB3YXMgdW5zIGltIEF1c2xhbmQgZGVuIFJ1ZiBlaW5icmluZ3QsIGtlaW5lbiBIdW1vciB6dSBoYWJlbi4KRmluZGluZyB0aGlzIGxhcmdlIGRvdWJsZSBwYWdlIGlsbHVzdHJhdGlvbiBpbiBUaGUgSWxsdXN0cmF0ZWQgTG9uZG9uIE5ld3MxZ2F2ZSBtZSBhIHBoeXNpY2FsIHJlYWN0aW9uIGxpa2UgdGhlIG9uZSBJIGdldCB3aGVuIHRoaW5raW5nIGFib3V0IHRoZSBkaXNjYXJkZWQgRGFsdG9uIFRydW1ibydzMiBhbnRpIHdhciBub3ZlbCwgSm9obm55IEdvdCBIaXMgR3VuLiBUaGUgbm92ZWwncyBtYWluIGNoYXJhY3RlciAoSm9lIEJvbmhhbSkgaXMgdmlydHVhbGx5IGVuY2FzZWQgaW4gaGlzIG93biBtaW5kLCBoYXZpbmcgbG9zdCBoaXMgYXJtcywgbGVncyBhbmQgZmFjZSBpbiBhbiBleHBsb3Npb24gb24gYSBXV0kgYmF0dGxlZmllbGQgdGhlIHN0b3J5IGlzIHRvbGQgZnJvbSBoaXMgYmVkcmlkZGVuIHBlcnNwZWN0aXZlOyBkYXJrLCBiYW5kYWdlZCwgYWxvbmUsIGhpcyBtaW5kIGFuZCBicmFpbiBmdW5jdGlvbmluZywgYW5kIHdpdGggbGl0dGxlIG1lYW5zIG9mIGNvbW11bmljYXRpb24gb3IgY29udHJvbCBvdmVyIGhpcyBib2R5LiBbVGhlIHR3byBzZXRzIG9mIGZvdXIgaW1hZ2VzIGZvbGxvd2luZyBzaG91bGQgYmUgdmlld2VkIGFzIHR3byBwYXJ0cyBvZiBvbmUgbG9uZyBpbWFnZSwgdGhlIGJvdHRvbSBwYXJ0IGJlaW5nIG9uIHRoZSByaWdodC5dLiAKSGUgaGFkIGRpZWQgYmVmb3JlIEkgd2FzIGJvcm4gYnkgdHdvIG1vbnRocyBhbmQgdGhlIG9ubHkgYmlnIHBpY3R1cmUgSSBoYWQgb2YgaGltIHdhcyB0aGF0IGhlIHdhcyBpbiB0aGUgUm95YWwgTmF2eSBhbmQgaGUgd2FzIGluIGhpcyB1bmlmb3JtLiAKVGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24sIGFzIGEgcmVzdWx0LCBwcmV0dHkgbXVjaCBiZWNhbWUgYSBzdG9wIGluIHRoZSByZXZvbHZpbmcgZG9vciBmb3IgV2FsbCBTdHJlZXRlcnMgbGVmdCB0byBzZWxmIGdvdmVybi4uIApUaGlzIHByb2dyYW0gaXMgZm9yIHRoZSByZWFsbHkgc2VyaW91cyBzdHVkZW50IHdobyB3b3VsZCBsaWtlIHRvIGhhdmUgYSBsaWZldGltZSBwcm9mZXNzaW9uYWwgY2FyZWVyIGluIG1hc3NhZ2UgYW5kIGV4Y2VsbGVudCBlbXBsb3ltZW50IG9wcG9ydHVuaXRpZXMgYXMgd2VsbCBhcyBzb2xpZCBhc3Nlc3NtZW50IHNraWxscyBhbmQgYSBzbW9yZ2FzYm9yZCBvZiB0ZWNobmlxdWVzIHRvIGNob29zZSBmcm9tLiAKVGhlbiB5b3UgaGF2ZSBzb2xvIGFydGlzdHMgbGlrZSBTdGluZyBhbmQgRGF2aWQgQm93aWUuIFRoZXkgaGlyZSBhIGJhbmQgYXQgYSBmaXhlZCBzYWxhcnkuIFRoZXkgbWF5IGFsc28gaGlyZSBzdHVkaW8gbXVzaWNpYW5zIChhZ2FpbiBhdCBhIGZpeGVkIHNhbGFyeSkgb3IgbWF5IHBheSB0aGVpciB0b3VyaW5nIGJhbmQgZXh0cmEgdG8gdGFrZSBwYXJ0IGluIHRoZSByZWNvcmRpbmcgc2Vzc2lvbnMuIApUaGUgRm9yZXdvcmQgdG8gdGhpcyB0b21lOiBvbmxpbmUgdmVudHVyZSBrbm93biBhcyB0aGUgRWFydGggRWRpdGlvbiwgb3IgRWRpdGVkIEd1aWRlLCBiZWdhbiBhcyBhIHJlc3BvbnNlIHRvIHRoaXMgZGlzc2luZyBvZiBvdXIgcGxhbmV0IGluIGEgd29yayBvZiBzY2llbmNlIGZpY3Rpb24uIFRoZSBoMmcyIEVkaXRlZCBHdWlkZSwgd2hpY2ggd2FzIGxhdW5jaGVkIGluIDE5OTkgYW5kIGlzIHN0aWxsIGJlaW5nIGFkZGVkIHRvIGRhaWx5LCBjb250YWlucyBhIGxvdCBvZiByZWFsbHkgaW50ZXJlc3RpbmcgaW5mb3JtYXRpb24gdGhhdCBnb3QgbGVmdCBvdXQgb2YgdGhlIEhpdGNoaGlrZXIncyBHdWlkZSBieSB0aGF0IGlnbm9yYW11cyBaYXJuaXdvb3AuIApUaGUgdHdvIGZvcm1zIG9mIHZpdGFtaW4gRCB1c2VkIGluIHN1cHBsZW1lbnRzIGFyZSBEMiAoZXJnb2NhbGNpZmVyb2wpIGFuZCBEMyAoY2hvbGVjYWxjaWZlcm9sKS4gRDMgaXMgdGhlIHByZWZlcnJlZCBmb3JtLCBhcyBpdCBpcyBjaGVtaWNhbGx5IHNpbWlsYXIgdG8gdGhlIGZvcm0gb2Ygdml0YW1pbiBEIHByb2R1Y2VkIGJ5IHRoZSBib2R5IGFuZCBpcyBtb3JlIGVmZmVjdGl2ZSB0aGFuIEQyIGF0IHJhaXNpbmcgdGhlIGJsb29kIGNvbmNlbnRyYXRpb24gb2Ygdml0YW1pbiBELlsyN10gU2luY2Ugdml0YW1pbiBEIGlzIGZhdCBzb2x1YmxlLCBpdCBzaG91bGQgYmUgdGFrZW4gd2l0aCBhIHNuYWNrIG9yIG1lYWwgY29udGFpbmluZyBmYXQuIApUaGlzIHRydWx5IGlzIG9uZSBvZiB0aGUgbW9zdCBpZGVhbCBhcHByb2FjaGVzIHRvIG1lZXQgaG90dGVzdCBnaXJscy4gVGhlIHNpdGUgaXMgMTAwJSBmcmVlIHRvIGpvaW4gYW5kIHRvIGJyb3dzZSBtYXRjaGluZyBwcm9maWxlcy4gCk15IHRlYWNoZXIgYWxzbyBlbXBoYXNpemVzIHRoYXQgaSB3b3JrIG9uIG15c2VsZi4gSSBjb21lIGNsb3NlIHRvIGJlaW5nIGtpY2tlZCBvdXQgb2YgaGVyIGNpcmNsZSBvZiBzdHVkZW50cyBtYWlubHkgYmVjYXVzZSBvZiBteSBvd24gbGFjayBvZiBvYmVkaWVuY2UgYW5kIG15IHNlZWtpbmcgb2YgcGxlYXN1cmVzLiBJIHNlZWluZyB0aG91Z2ggdGhhdCB0byBiZWNvbWUgcmVhbCBwcmFjdGl0aW9uZXIgb2YgdGhlIGhlYWxpbmcgYXJ0cyBpIGhhdmUgdG8gaGVhbCBteXNlbGYsIGNsZWFuIHVwIG15IG93biBib2R5LCBzcGVlY2ggYW5kIG1pbmQuIEkgaGF2ZSB0byBjbGVhbiB1cCBteSBvd24gbmVnYXRpdmUgaGFiaXRzLiBJIGZvdW5kIHRoaXMgdmlkZW8gaW5zcGlyaW5nIGFuZCB3b3VsZCBsaWtlIHRvIHNoYXJlIGl0LiBQZW9wbGUgbGlrZSBoaW0gdW5kZXJzdGFuZCB0aGUgbmF0dXJlIG9mIGlsbG5lc3MuCldoYXQgd2Ugb2ZmZXJpbmcgaXMgYSBjb250cm9sbGVkLCB0cnVzdCB3b3J0aHkgYWx0ZXJuYXRpdmUgdG8gdGhlc2UgZ3JleSBtYXJrZXQgc2l0ZXMsIGhlIHNhaWQuIHdlIGRpZCBvdXIgbWFya2V0IHJlc2VhcmNoLCB0cnVzdCB3YXMgb25lIG9mIHRoZSBiaWcgdGhpbmdzIHRoYXQgcGVvcGxlIHRvbGQgdXMgYWJvdXQsIHRoYXQgdGhleSByZWFsbHkgd2FudGVkIGluIHRoZXNlIHNpdGVzLiBhcmUgbm8gYXNzdXJhbmNlcyB0aGF0IGEgcGxheWVyIHdpbGwgYmUgcGFpZCB3aXRoIHRoZSBvZmYgc2hvcmUgc2l0ZXMsIGhlIHNhaWQuCkV4cGxhaW5pbmcgc3VjY2VzcyAob3IgZmFpbHVyZSkgaXMgZWFzeSBpbiBoaW5kc2lnaHQsIGJ1dCBhIGdvb2QgdGhlb3J5IGNhbiBtYWtlIGEgcHJlZGljdGlvbi4gSWYgc3RyYXRlZ2ljIGludGVsbGlnZW5jZSBjYW4gdHJ1bHkgYnJpbmcgYSBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UsIGl0cyBwcmVjdXJzb3JzIHNob3VsZCBiZSBtZWFzdXJhYmxlLCBhbmQgaXRzIGJlYXJlcnMgc2hvdWxkIGJlIGlkZW50aWZpYWJsZSBsb25nIGJlZm9yZSB0aGV5IHN1Y2NlZWQuIApIb3dldmVyLCBQVCBkb2VzbiBuZWNlc3NhcmlseSByZXBhaXIga3lwaG9zaXMsIGJ1dCByYXRoZXIgdGFyZ2V0cyBtdXNjbGVzIHRvIGNvbXBlbnNhdGUgZm9yIGl0LiBIb3dldmVyLCB5b3Ugc2hvdWxkIGRlZmluaXRlbHkgZ2V0IGFuIG9mZmljaWFsIGRpYWdub3NpcyBhbmQgdHJlYXRtZW50IHBsYW4uIFN1cmdlcnkgaXMgdXN1YWxseSBhIGxhc3QgcmVzb3J0LCBidXQgaWYgaXQgdGhlIGJlc3Qgcm91dGUsIGl0IHNob3VsZCBiZSBkb25lIHNvb25lciBvciBsYXRlci4KQWZ0ZXIgaGlnaCBzY2hvb2wgRGF2aWQgbW92ZWQgdG8gU2FsdCBMYWtlIENpdHkgdG8gbGl2ZSB3aXRoIENocmlzIGFuZCBSb2dlciwgaGlzIHNpc3RlciBhbmQgYnJvdGhlciBpbiBsYXcsIHdoaWxlIGhlIGF0dGVuZGVkIFNhbHQgTGFrZSBDb21tdW5pdHkgQ29sbGVnZSB3aGVyZSBoZSBlYXJuZWQgYW4gQXNzb2NpYXRlIGRlZ3JlZS4gQmV0d2VlbiBzY2hvb2wgYW5kIHZpc2l0cyBob21lLCBoZSBtZXQsIGFuZCBldmVudHVhbGx5IG1hcnJpZWQgTWFyaWxsYSBUZXJyeS4KTElTVEVOIFVQISBMIE51cnNlcy4gKCBtaWR3aXZlcywgZG9jdG9ycywgZG91bGFzLCBldGMuKSBTZWl6aW5nIEhlciBEYXkgSW50ZW5zaXR5IENhcHR1cmVkIE9oLCB5ZWFoLCBCQUJZISEhISBUaG91Z2h0cyBvbiAiT25lIEJvcm4gRXZlcnkgTWludXRlIiBUZXJyaWJsZSBGZWVsaW5ncyBTdXJyb3VuZGluZyBMZXRkb3duPyBHdWVzdCBQb3N0OiBIQkFDIFN0b3J5IGZyb20gQ05NJ3MgUE9WIERpZCBZb3UgVHJhbnNmZXIvVHJhbnNwb3J0IHRvIHRoZSBIb3NwaXRhbD8gUmVhbGx5PyBSRUFMTFk/IEh5cG9jcml0ZSBpbiB0aGUgTWlkZGxlIFRoZSBJcm9ueSBvZiBQcml2aWxlZ2UgV2hhdCBBcmUgWW91ciBXb3JzdCBGZWFycyBpbiBQcmVnbmFuY3k/IFByZWZhY2UgdG8gQmlydGggUmFwZSBQaWVjZSAocXVlc3Rpb25zKSBGYWNlYm9vayBvciBCbG9nLiBEZWZpbmluZyBNaWQvTWVkd2lmZSBJJ20gYSBQcm91ZCBNYW1hISBCYW5uaW5nIENhbWVyYXMgYXQgQmlydGggV2hlbiBDaG9vc2luZyBhbiBPQi4gCiJJdCBtb3JlIGEgbWF0dGVyIG9mIG5vdCBiZWluZyBhYmxlIHRvIGNvbnRpbnVlIHRvIHRyYWRlIGFuZCBzZXJ2aWNlIGRheSB0byBkYXkgZGVidC4iIE1yIENoYW1iZXJsYWluIHNhaWQgdGhlIGJlc3QgcHJvc3BlY3QgZm9yIHRoZSBjbHViIHRvIHJlb3BlbiB3b3VsZCBiZSB0byBmaW5kIGEgam9pbnQgdmVudHVyZSBwYXJ0bmVyIHdobyBjb3VsZCBwcm92aWRlIGNhcGl0YWwgYW5kIHNlY3VyaXR5LiBIZSBwbGFucyB0byBzZWVrIG91dCB3aGl0ZSBrbmlnaHRzIG92ZXIgYSA0NSBkYXkgd2luZG93Zm9sbG93aW5nIG5leHQgd2VlayBjcmVkaXRvcnMnIG1lZXRpbmcuIApUaGUgSlcgTWFycmlvdHQgUGFycSBWYW5jb3V2ZXIgaXMgYWxzbyBicmlnaHQgYW5kIGZlYXR1cmVzIGxpZ2h0IGNvbG91cmVkIGNhcnBldGluZyB0aHJvdWdob3V0IGFuZCBndWVzdCByb29tcyBkZWNvcmF0ZWQgaW4gc3VidGxlIHNoYWRlcyBvZiB3aGl0ZSBhbmQgYmVpZ2UuIApBbm90aGVyIGV4YW1wbGUgb2YgYSBCT0ZRIGlzIHJlbGlnaW91cyBvcmdhbml6YXRpb25zIHJlcXVpcmluZyB0aGUgdXBwZXIgbWFuYWdlbWVudCBiZWxvbmcgdG8gdGhlIHJlbGlnaW9uL2Rlbm9taW5hdGlvbiBvZiB0aGUgb3JnYW5pemF0aW9uLi4gCllvdSBtaWdodCBjb25zaWRlciB0aGUgYmFyICJNZWluIEhhdXMgYW0gU2VlIiBhcyBpdHMgYSBiaXQgbW9yZSB0b3VyaXN0IGZyaWVuZGx5IGJ1dCBzdGlsbCBwb3B1bGFyLiBGb3IgY2x1YnMsIFByaW5jZSBDaGFybGVzIGxpa2UgSSBzYWlkICh0aGV5IGhhdmUgY29uY2VydC90aWNrZXQgREogbmlnaHRzLCBzbyBjaGVjayB0aGVyZSksIGFuZCBhbHNvIFdhdGVyZ2F0ZSAodGhleSBoYXZlIHRoYXQgdG9vKS4gT2htLCBCZXJnaGFpbiwgYW5kIEFib3V0IEJsYW5rIGFyZSBtb3JlIGFsdGVybmF0aXZlLCBsaWtlIG9mIGNvdXJzZSB5b3UgY2FuIHRvdGFsbHkgZ28gdGhlcmUgYXMgYXMgc3RyYWlnaHQgZ3V5cywgaW4gZmFjdCB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aGUgY3Jvd2Qgd2lsbCBiZSBzdHJhaWdodCwgYnV0IHRoZXkgbW9yZSBmYXNoaW9uIGZvcndhcmQsIEkgZHVubm8gbW9yZSBhbHRlcm5hdGl2ZS4uIApJIHRoaW5rIGl0IG5vdCBvdXQgb2YgdGhlIHJlYWxtIG9mIHBvc3NpYmlsaXR5IHRoYXQgYm90aCB0aGUgS25pY2sgYW5kIHRoZSBNYXZzIHdpbiB0aGlzIHRyYWRlLCBqdXN0IGxpa2UgSSB0aGluayBib3RoIHRoZSBNYXZzIGFuZCBIYXdrcyB3aWxsIGxvb2sgYmFjayBhbmQgc2F5IHRoZSBMdWthL1RyYWUgdHJhZGUgd2FzIGEgd2luL3dpbi4uIApGaW5kIFNlcmlhbCBOdW1iZXIgbm90aWNlOiAuIApJdCB0cnVlIHRoYXQgdGhlIEdpYW50cyBoYXZlIGZvY3VzZWQgcHJpbWFyaWx5IG9uIHBpdGNoaW5nIGluIHRoZSBlYXJseSByb3VuZHMgb2YgdGhlIGRyYWZ0LiBCdXQgc29tZSB5ZWFycyB0aGV5IGxvb2tlZCBmb3IgaGl0dGVycywgYW5kIHNvIGZhciB0aGV5IHdoaWZmZWQgY29tcGxldGVseS4gClByZXZlbnRpb24gaW5pdGlhdGl2ZXMgYXJlIGNyaXRpY2FsLiBDb3VuY2lscyBhcmUgcmVzaXN0aW5nIG5ldyBhcHBsaWNhdGlvbnMgbW9yZSB2aWdvcm91c2x5IHRoYW4gZXZlciwgYnV0IGxhd3MgbmVlZCB0byBjaGFuZ2UgdG8gZ2l2ZSBjb21tdW5pdGllcyBhIGdyZWF0ZXIgc2F5IGFib3V0IHdoZXJlIHBva2VyIG1hY2hpbmVzIGFyZSBsb2NhdGVkLiAKVGhlIGNvbW11bml0eSBleGNpdGVtZW50IGZvciBPbmUgV2VlayBLQywgQ29vbWVzIHNhaWQsIGlzIHBhbHBhYmxlLiBUaGUgY29udmVyc2F0aW9ucyBJIGhhZCB3aXRoIHBlb3BsZSBhIGxvdCBvZiB0aGVtIGFyZSByZWFsbHkgZXhjaXRlZCBhYm91dCBnZXR0aW5nIG91dCB0aGlzIHdlZWssIGhlIHNhaWQuIFBlb3BsZSBldmVuIHNhaWQsIEkgbWlnaHQgdGFrZSBvZmYgd29yayBmb3IgYSBmZXcgZGF5cyBhbmQgbWFrZSBzdXJlIEkgY2FuIGdldCB0byBhIGxvdCBvZiB0aGVzZSBldmVudHMuIApSb3lhbCBGbHVzaC4gVGhpcyByYW5rcyBoaWdoZXN0IG9mIGFsbCB0aGUgcG9zc2libGUgcmFua3MgeW91IGNvdWxkIGdldCBpbiBhIHBva2VyIGdhbWUgYW5kIHJlZmVycyB0byBhIHN0cmFpZ2h0IGFuZCBzYW1lIHN1aXRlZCB0ZW4sIGphY2ssIHF1ZWVuLCBraW5nIGFuZCBhY2UuClRoZW4gYWZ0ZXIgdGhlIHdlZWtlbmQsIHBpY2sgeW91cnNlbGYgdXAgYW5kIG1vdmUgZm9yd2FyZCEgWW91IHdpbGwgZ2V0IHRocm91Z2ggdGhpcyEgQW5kIHRoZSBqb2IgdGhpbmcsIHdlbGwgbWUgYW5kIG15IGh1c2JhbmQgYXJlIGdvaW5nIHRocm91Z2ggdGhpcyBhcyB3ZSBzcGVhay4gCldlIGFsd2F5cyBmcmV0IG92ZXIgbmV3IHRoaW5ncywgYnV0IHNvIGZhciwgaXQgaGFyZCB0byBzZWUgYSBzb2NpYWwgZG93bnNpZGUgdG8gdGhlIEludGVybmV0LiBPbmxpbmUgaW50ZXJhY3Rpb24gaGFzIGFsbG93ZWQgdXMgdG8gbWVldCBtYW55IG5ldyBwZW9wbGUsIGJ1dCBpdCBoYXMgbm90IGRpbWluaXNoZWQgb3VyIHllYXJuaW5nIHRvIG1haW50YWluIG9sZGVyIHJlbGF0aW9uc2hpcHMuIEFzIHRoZSBzb25nIGFib3V0IG5ldyBhbmQgb2xkIGZyaWVuZHMgZ29lcywgb25lIGlzIHNpbHZlciBhbmQgdGhlIG90aGVyIGlzIGdvbGQuCkxhIFByZXNzZQoyLiBMZWFybiB0aGUgdGF4IHJhbWlmaWNhdGlvbnMgYW5kIGxhd3MgcmVnYXJkaW5nIHJlbnRpbmcgeW91ciBwcm9wZXJ0eS4gR2VuZXJhbGx5LCB0aGVyZSBhcmUgdGF4IGFkdmFudGFnZXMgdG8gcmVudGluZyBwYXJ0IG9mIHlvdXIgcHJvcGVydHkgYXMgbG9uZyBhcyB0aGF0IHNlY3Rpb24gaXMgdXNlZCBzb2xlbHkgb3IgbWFpbmx5IGFzIHJlbnRhbCBwcm9wZXJ0eS4gSWYgeW91IHJlbnQgYSBzcGFyZSBiZWRyb29tIDEwIG1vbnRocyBvZiB0aGUgeWVhciB3aGlsZSB1c2luZyBpdCBhcyBhIGd1ZXN0IGJlZHJvb20gZm9yIHlvdXIgZmFtaWx5IG9yIGZyaWVuZHMgZHVyaW5nIHRoZSBvdGhlciB0d28gbW9udGhzLCB5b3UgY2Fubm90IGNsYWltIGl0IGFzIGEgdGF4IGRlZHVjdGlvbi4gSWYgeW91IGRvIHVzZSBhIHNlY3Rpb24gb2YgeW91ciBob21lIHN0cmljdGx5IGFzIGEgcmVudGFsLCB5b3UgY2FuIGRlZHVjdCBhIHByb3BvcnRpb25hdGUgc2VjdGlvbiBvZiB5b3VyIG1vcnRnYWdlIHBheW1lbnQgaW50ZXJlc3QsIGluc3VyYW5jZSwgdXRpbGl0aWVzLCByZXBhaXJzIGFuZCBkZXByZWNpYXRpb24uIEl0J3MgYWx3YXlzIHdpc2UgdG8gY29uc3VsdCB3aXRoIGEgdGF4IHByb2Zlc3Npb25hbC4gQWxzbywgY2hlY2sgb3V0IHRoZSBsYXdzIGluIHlvdXIgYXJlYSByZWdhcmRpbmcgcmVudGluZyBhIHNlY3Rpb24gb2YgeW91ciBob21lLgpXaG8gdHJ1bHkgYmVsaWV2ZSB3aGF0IHRoZXkgYXJlIHNheWluZyBpcyB0cnVlLiBOYXJjaXNzaXN0cyBhcmVuIHBhcmVudHMgd2hvIHdvdWxkbiBsZXQgeW91IGdldCB5b3VyIHdheSwgb3IgZXZlbiBlZ290aXN0aWNhbCBwZW9wbGUuIAoxLiBJIHJlY29nbml6ZSBob3cgaW5jcmVkaWJseSBzdHVwaWQgbXkgYWN0aW9ucyB3ZXJlLCBidXQga2VlcCBpbiBteSBJIHdhcyBpbiBzaG9jaywgZml4YXRlZCBvbiBhIHRoZSBpZGVhIG9mIHNvbWUgc29ydCBvZiBzaGFtZSwgYXMgb3Bwb3NlZCB0byB0aGUgcmlzayBvZiBwYXJhbHlzaXMuIApCdXQgcG9zdHMgd2hlcmUgdGhlIG1haW4gcHJlbWlzZSBpcyBmaXJzdCB0aW1lIGluIGEgd2hpbGUgYXJlIHByZXR0eSB2YWx1ZWxlc3MgdG8gdGhlIGNvbW11bml0eSBhdCBsYXJnZS4gCkpldHp0IGFuIGRlciBsaW5rZW4gU2VpdGUgOCBNIGF1cyBkZW4gUmFuZG1hc2NoZW4gYXVmbmVobWVuID0gOSBNIGF1ZiBkZXIgTmFkZWwuIApSZWFkIGVCb29rIERBSVNZIGZvciBwcmludCBkaXNhYmxlZCBEb3dubG9hZCBlYm9vayBmb3IgcHJpbnQgZGlzYWJsZWQgKERBSVNZKSBQREYgZVB1YiBNT0JJIFBsYWluIHRleHQgLiAKVHJ1ZSBmYWN0IHdlIGhhdmUgYSByYWNpYWwgYmlhcyB3aGVuIGl0IGNvbWVzIHRvIEFtZXJpY2FuIHBvbGljaW5nLiAKVGhlcmUgaGF2ZSBhbHJlYWR5IGJlZW4gYSBmZXcgb3RoZXIgY29sZCBjYXNlcyBzb2x2ZWQgd2hlcmUgcG9saWNlIGhhZCBETkEgb2YgdGhlIHN1c3BlY3QgdGhhdCB0aGV5IHN1Ym1pdHRlZCB0byBhIHBvcHVsYXIgYW5jZXN0cnkgc2l0ZSBhbmQgd2FpdGVkLiBUaGVuIGV2ZW50dWFsbHkgc29tZW9uZSBpbiB0aGUgc3VzcGVjdCBmYW1pbHkgZG9lcyBvbmUgb2YgdGhvc2UgdGVzdHMgYW5kIGl0IGxpbmtzIHRoZW0gYXMgcG90ZW50aWFsIGZhbWlseS4gVGhlcmUgaXMgYSBjYXNlIGdvaW5nIG9uIGluIElvd2EgcmlnaHQgbm93IHdoZXJlIHRoZXkgZGlkIHRoYXQgYW5kIHRoZW4gY29sbGVjdGVkIEROQSBmcm9tIHRoZSBzdXNwZWN0IGFnYWluIHRvIHNlZSBpZiBpdCB3YXMgYSBtYXRjaC4gCkhlIGdpdmVzIHBlb3BsZSB3aGF0ZXZlciB0aGV5IHdhbnQgaW4gcHJpdmF0ZSBkZWFscyBhbmQgdGhlbiBqdXN0IGNhc3VhbGx5IGZ1Y2tzIHRoZW0gb3ZlciB3aGVuIHRoZXkgY2FuIGNvbmZyb250IGhpbS4gCkEgcmV2aWV3IHdpdGggY29tbWVudHMgb24gdml0YW1pbiBCNiBhbmQgcHN5Y2hpYXRyeQoiVGhpcyBpcyBsb29raW5nIGF0IHRyeWluZyB0byBmdW5kIDIwMCBtaWxlcyBvZiBiYXJyaWVyIHRoYXQgdGhlIGV4cGVydHMgaGF2ZSBhc2tlZCBmb3IgdG8gcHJvdGVjdCB0aGUgYm9yZGVyIHRvIGJlIGFibGUgdG8gZG8gdGhlaXIgam9iLiAKVGhlIHByb2JsZW0gd2l0aCBvbGQgc2Nob29sLCBCQkMgc3R5bGUgcmVwb3J0aW5nIGlzIHRoYXQgaXRzIHJpZGljdWxvdXMgY2xhaW1zIHRvICJvYmplY3Rpdml0eSIgYW5kICJuZXV0cmFsaXR5IiBsZWF2ZSBpdCBvcGVuIHRvIGp1c3QgdGhlc2Uga2luZHMgb2YgbWlzdGFrZXMuIFRoZSBjbGFpbSB0byBvYmplY3Rpdml0eSwgaW4gam91cm5hbGlzbSBhcyB3ZWxsIGFzIGluIG90aGVyIGZpZWxkcyBvZiBpbnF1aXJ5LCBpcyBiYXNlZCBvbiB0aGUgYmVsaWVmIHRoYXQgYSBib2R5IGNhbiByaXNlIGFib3ZlIGl0cyBwb3NpdGlvbiBpbiB0aGUgc29jaWFsIHdvcmxkIGFuZCB2aWV3IGxpZmUgZnJvbSBhYm92ZSwgYW4gQXJjaGltZWRlYW4gdmlld3BvaW50LgpGb3IgdGhpcyByZWFzb24sIE9tYWhhLzggdGVuZHMgdG8gaGF2ZSBsZXNzIHNob3J0IHRlcm0gdmFyaWFuY2UgKGx1Y2spIHRoYW4gSG9sZCdlbS4gTWFueSBwbGF5ZXJzIGVuam95IHBsYXlpbmcgT21haGEvOCBtb3JlIHRoYW4gSG9sZCdlbSBiZWNhdXNlIG9mIHRoZSByZWR1Y2VkIHZhcmlhbmNlLiBUaGUgcHJvYmxlbSBpcyBpdCBjYW4gc29tZXRpbWVzIGJlIGhhcmQgdG8gZmluZCBhIGdvb2QgT21haGEvOCBnYW1lLCBidXQgdGhlcmUgbmV2ZXIgc2VlbXMgdG8gYmUgYSBzaG9ydGFnZSBvZiBIb2xkJ2VtIGdhbWVzLgpQbHVzIHRoZXJlIGNvdWxkIGJlIHNvIG1hbnkgY3V0ZSBsb29rcyBtYWRlIGJ5IGxheWVyaW5nLCBsaWtlIHRyYW5zcGFyZW50IHRpZ2h0cyBvdmVyIGRpZmZlcmVudCBjb2xvcmVkIHRpZ2h0cyBmb3IgZXhhbXBsZS4gVGhlIHNhbWUgd2F5IHdlIGNhbiBsYXllciBiYWNrZ3JvdW5kIHBpZWNlcyBpbiBTQywgaXQgd291bGQgYnJpbmcgYSBuZXcgbGV2ZWwgb2YgY3JlYXRpdml0eSB0byBvdXIgZHJlc3MgdXBzLi4gCkFsc28gd2hlbiB5b3UgdGFrZSBub3RlcyBkdXJpbmcgdGhlIHRlc3QsIGRvbiB3b3JyeSBhYm91dCB0aGUgcXVlc3Rpb24gYXMgbXVjaCBhcyBwaWNraW5nIHVwIHRoZSBkaWZmZXJlbmNlcyBpbiB0aGUgYW5zd2Vycy4gSSBtZXNzZWQgdXAgYSBjb3VwbGUgYmVjYXVzZSBJIHdhcyBmb2N1c2luZyB0b28gbXVjaCBvbiB0aGUgcXVlc3Rpb24gd2hlbiB0aGUgYW5zd2VyIHdvdWxkIG90aGVyd2lzZSBiZSBvYnZpb3VzICh0aGUgcXVlc3Rpb24gcGxheXMgdHdpY2UgZm9yIHRoZSBtb3N0IHBhcnQpLi4gClRoZSB2aWRlb3MgYWlkIHlvdSBmb3JldGVsbCB0aGUgc29jaWV0eSBvZiBIb2xtZXMgYW5kIGZvY3VzIG9uIGRldGFpbHMgYWxzbyBoaXN0b3JpY2FsIHdob2xlIHN0b3J5IHRoYXQgZmFydGhlciBhbG9uZyBpbW1lcnNlIHRoZSBwdWJsaWMgaW4gb3VyIG93biBteXN0ZXJ5LiAKRHVyaW5nIGEgZ2FtZSBvbiBKYW4uIDEwLCAyMDA2LCBUaG9ybnRvbiBoYWQgcGxheWVkIGxlc3MgdGhhbiB0aHJlZSBtaW51dGVzIHdoZW4gaGUgY3J1bmNoZWQgQnJ1aW5zIGRlZmVuY2VtYW4gSGFsIEdpbGwgaW50byB0aGUgZW5kIGJvYXJkcywgcmVjZWl2aW5nIGEgbWFqb3IgYW5kIGEgZ2FtZSBtaXNjb25kdWN0LiBFVCBzdGFydCkgYXMgdGhlIExlYWZzIGJlZ2luIGEgZm91ciBnYW1lIHRyaXAuLiAKSGF2ZSBzZXggd2l0aCB5b3VyIHBhcnRuZXIuIEFjaGlldmluZyBhbiBvcmdhc20gYnkgaGF2aW5nIHNleCBvciBldmVuIG1hc3R1cmJhdGluZyB3aWxsIGNhdXNlIHlvdXIgdmFnaW5hbCBtdXNjbGVzIHRvIGNvbnRyYWN0cywgdGhlcmVmb3JlIHByb21wdGluZyB0aGUgb25zZXQgb2YgeW91ciBtZW5zdHJ1YWwgZmxvdy4gU2VtZW4gaXMgYWxzbyBrbm93biB0byBzb2Z0ZW4gdGhlIGNlcnZpeCwgd2hpY2ggY2FuIGFsc28gYWlkIGluIHRoZSBwcm9jZXNzLiBTb21lIHdvbWVuIGFyZSBrbm93biB0byBoYXZlIHRoZWlyIHBlcmlvZHMgYWZ0ZXIgaGF2aW5nIHNleC4KV2UgaGVhciBmcm9tIEplc3NlIGlzIG9uZSBzaWRlIG9mIHRoaXMgQlJUIHRoaW5nLiBDb21wbGFpbnRzIHJlbGF0ZSBzcGVjaWZpY2FsbHkgdG8gdGhlIHNpemUgYW5kIHNjYWxlIG9mIHRoZSBwcm9wb3NlZCByYXBpZCB0cmFuc2l0IG5ldHdvcmssIFNwZW5jZSBzYWlkLCBhcmd1aW5nIHJhcGlkbHkgY2hhbmdpbmcgdGVjaG5vbG9neSBtYXkgbWFrZSBCUlQgb2Jzb2xldGUgd2l0aGluIHRoZSBuZXh0IHR3byBkZWNhZGVzLiBBbmQgaGlzIHR3ZWV0IHdoYXQgU3BlbmNlIGRlc2NyaWJlZCBhcyBhIGhhbGYgaGVhcnRlZCBqb2tlIHdhcyBub3Qgc2VyaW91cywgdmlvbGVudCB0aHJlYXQuIApJdCBhbGwgc3Vja3MuIApJIHRydWx5IGJlbGlldmVkIHRoYXQgaXQgd2FzIHRpbWUgdG8gc3RvcCB0aGlzIG5vbnNlbnNlLCBiYW5kIHRvZ2V0aGVyIGFzIHRoZSBtYWpvcml0eSwgYW5kIHRha2Ugb3VyIGNvdW50cnkgYmFjay4gCldpdGggdGhlaXIgMTk5MCBpbnRyb2R1Y3Rpb24gb2YgdGhlIEluc2lnaHQsIGZvbGxvd2VkIGxhc3QgeWVhciBieSB0aGUgQ2l2aWMgSHlicmlkLiBJbiBiZXR3ZWVuIGluIE5vcnRoIEFtZXJpY2EsIGFuZCBmaXJzdCBnbG9iYWxseSwgd2FzIFRveW90YSBNb3RvciBDb3JwLiBNYWtpbmcgYSBwbGF5IHdpdGggaXRzIGdhcyBlbGVjdHJpYyBQcml1cyBzZWRhbi4gClRoaXMgcGllY2UgaXNudCByZWFsbHkgcmVsYXRhYmxlIHRvIG1vc3QgcGVvcGxlIChpZiBhbnlvbmUpIGJlY2F1c2UgaXQgYSBzbGljZSBvZiB0aGUgZ2lybCBsaWZlIGluIHRoZSBpbWFnZS4gSGVyIHByb3hpbWl0eSB0byB0aGUgd29sdmVzIGFuZCB0aGUgd2F5IHNoZSBob2xkcyBvbmUgb2YgdGhlbSBpbXBsaWVzIHRoYXQgdGhleSBiZWxvbmcgdG8gaGVyLiBUaGV5IGFsbCBob25lZCBpbiBvbiBzb21ldGhpbmcgd2hpY2ggaXMgbW9zdCBsaWtlbHkgcHJleSB0aGV5IHRyYWNraW5nLiAKQWxvcnMsIHN1Ym1lcmdlb25zIGxlIGRlIG1lc3NhZ2VzLCBkJ2ltYWdlcywgZGUgbmlhaXNlcmllcyBhdXRoZW50aXF1ZXMsIHBvdXIgcXVlIG5pIGwnZW5udWksIG5pIGxhIHZpb2xlbmNlIHF1J2lsIHBvcnRlIGVuIGx1aSBuZSBub3VzIG1lbmFjZW50LiBTJ2lsIHBhc3NlIGxlIHBhbGllciwgcHJvZ3Jlc3NpdmVtZW50LCBkZSBsJ2h5cG5vc2UgZXQgZGUgbGEgc291bWlzc2lvbiwgbm91cyBsZSBtYWludGllbmRyb25zIGRhbnMgc2EgcGhhc2UgcGFzc2l2ZSBldCBhc3N1amV0dGllIGxvbmd0ZW1wcyBlbiB0b3V0IGNhcyBqdXNxdScgbGEgbnZyb3NlLCBsYSBtYWxhZGllIG1lbnRhbGUgb3UgbGEgcHVyZSBldCBjb21wbHRlIGZvbGllLiBOb3VzIGF2b25zIGxlcyB0YWJsaXNzZW1lbnRzIHBydnVzIHBvdXIgdHJhaXRlciBjZXMgc3ltcHRtZXMuIFByaXNvbnMuIEhwaXRhdXggcHN5Y2hpYXRyaXF1ZXMuIE91IGJpZW4sIHByb2dyYW1tZXMgdGx2aXNzIHRvdGFsZW1lbnQgVG90YWxpdGFpcmVzIGV0IERiaWxlcy4gRGFucyBsYSByb3V0aW5lIG1vcnR1YWlyZSBxdWUgbm91cyBlbnRyZXRlbm9ucyBhdmVjIGNvbnN0YW5jZSBldCBlbXBoYXNlLCBjZXJ0ZXMsIGlsIHkgYXVyYSBxdWVscXVlcyBhY2NpZGVudHMuIExlIG1hbnF1ZSBkZSBzdGltdWxpIHNlbnNvcmllbHMgbmF0dXJlbHMsIGwnaW50ZWxsZWN0IHMnYXBwYXV2cmlzc2FudCwgaWwgeSBhdXJhIGRlcyAgQ2xhc2ggIGludml0YWJsZXMuIFVuIG91dnJpZXIgdHJhdmFpbGxhbnQgIGxhIGNoYW5lIHBlcmRyYSB1biBkb2lndCwgb3UgdW4gYnJhcy4gTGEgZmF0aWd1ZSBldCBsYSBuZXJ2b3NpdCBhbW5lcm9udCBsZXVycyBsb3RzIGQnYWNjaWRlbnRzIGRlIGxhIHJvdXRlLiBEZSB0ZW1wcyBlbiB0ZW1wcyB1biBzZXJpYWwga2lsbGVyIGZlcmEgc29uIGFwcGFyaXRpb24uIFVuZSBDaXQgYnJsZXJhICBjYXVzZSBkZSBzb24gZ2hldHRvLiBQYXJmb2lzIG1tZSB1biBhdHRlbnRhdCBhdXJhIGxpZXUgcXVpIGFjY291Y2hlcmEgZCd1bmUgYm9ubmUgZ3VlcnJlLiBOb3MgcGhpbG9zb3BoZXMgZXQgbm9zIHNvY2lvbG9ndWVzIGFuYWx5c2Vyb250IHRvdXQgYS4gTGVzIGNocm9uaXF1ZXVycyBkYW5zIGxlcyBqb3VybmF1eCBzJ2VtcGFyZXJvbnQgZGUgbCdhZmZhaXJlLiBMYSBEcm9pdGUgZXQgbGEgR2F1Y2hlIHBvdXJyb250IHMnYWZmcm9udGVyIGVuIGFib25kYW50ZXMgcG9sbWlxdWVzIHF1YW50ICBsYSBnZXN0aW9uIGRlcyBhZmZhaXJlcy4gQ29tcHJlbmRyZSA6IGxhIGdlc3Rpb24gZGUgbGV1cnMgYWZmYWlyZXMuIERlcyBsaXZyZXMgc2Vyb250IHB1Ymxpcy4gRGVzIG1hbmlmZXN0YXRpb25zIGF1cm9udCBsaWV1LiBMYSBSb3V0aW5lIERtb2NyYXRpcXVlLiBMZSBtb25kZSBjb250aW51ZXJhIGRlIHRvdXJuZXIgc2Vsb24gbm90cmUgVm9sb250LiBOb3MgY2hpZW5zIGRlIGdhcmRlIHkgdmVpbGxlbnQuIEV0IHRvdXQgYSB2YSB2ZXJzIGxlIHBhcm94eXNtZS4gTG9uZ3VlIGV0IGxlbnRlIGRlc2NlbnRlIHJhcGlkZSB2ZXJzIGxlcyBsaW1iZXMgbm9pcnRyZXMgZGUgbGEgYmVzdGlhbGl0LCBkZSBsJ291YmxpIGRlIFNvaSBldCBkZSBsJ0F1dHJlLiBDJ2VzdCBlbmNvcmUgdW4gcGFyYWRveGUgdmlkZW50LiBMZW50ZSBldCBsb25ndWUgZGVzY2VudGUsIGNhciBlbGxlIHNlbWJsZSBuJ2F2b2lyIHBhcyBkZSBmaW4uIFJhcGlkZSBkZXNjZW50ZSwgY2FyIHRvdXQgcydhY2NscmUgZXQgbm91cyBlbnRyYW5lIHZlcnMgbGUgdmlkZSBkZSBsJ3RyZSBldCB2ZXJzIGwnQWJzZW5jZSBkZSBTb2kgYXUgbW9uZGUuClNoYXZpbmcgZm9yIHN1cGVyaW9yIGNsb3NlbmVzcywgY29tZm9ydCwgYW5kIGNvbnZlbmllbmNlLiBUaGUgQ29uYWlyIHBlcnNvbmFsIGdyb29tZXIgaXMgZXJnb25vbWljYWxseSBkZXNpZ25lZCB0byBmaXQgY29tZm9ydGFibHkgaW4geW91ciBoYW5kIGZvciBpbXByb3ZlZCBjb250cm9sIGFuZCBmbGV4aWJpbGl0eS4gSW5jbHVkZXMgdHJhdmVsIGNhc2UuIEZlYXR1cmVzOiAyIGRldGFjaGFibGUgaGVhZHMgMy84IGFuZ2xlZCBoZWFkIGZvciBkb2luZyBleWVicm93cyAxIGF0dGFjaG1lbnQgY29tYiBmb3IgdGhlIGV5ZWJyb3cgaGVhZCBTdGFuZGFyZCB0cmltbWVyIGhlYWQgZm9yIHRoZSBiaWtpbmkgbGluZSwgbmVjayBjbGVhbiB1cCBhbmQgb3RoZXIgdHlwZXMgb2YgaGFpciByZW1vdmFsIDIgYXR0YWNobWVudCBjb21icyBmb3IgdGhlIHN0YW5kYXJkIHRyaW1tZXIgaGVhZCBhbGxvdyBmb3IgbnVtZXJvdXMgaGVpZ2h0IGFkanVzdG1lbnRzIGZvciBwcmVjaXNlIHRyaW1taW5nIE9wZXJhdGVzIG9uIDEgIkFBIiBiYXR0ZXJ5IChub3QgaW5jbHVkZWQpIFRyYXZlbCBjYXNlIGluY2x1ZGVkCkkgcmVhbGx5IG5lZWRlZCBpdC4gVGhhbmsgeW91IHdob2V2ZXIgZG9uZSBpdC4gCkkgdXNlZCB0byBwaXJhdGUgZXZlcnl0aGluZyBhbmQga2luZCBvZiBiYWxrZWQgYXQgdGhlIGZhY3QgdGhhdCBteSBjb3dvcmtlciBwYWlkIGZvciBhIG11c2ljIHNlcnZpY2UuIApQcm9ncmVzc2l2ZSB2aWRlbyBwb2tlciBnYW1lcyBkbyBub3Qgbm9ybWFsbHkgcmVxdWlyZSBwbGF5ZXJzIHRvIHB1dCBhIHNpZGUgYmV0LiBQcm9ncmVzc2l2ZSBqYWNrcG90cyBpbiB2aWRlbyBwb2tlciBhcmUgdHJpZ2dlcmVkIHdoZW5ldmVyIHlvdSBpcyBkZWFsdCB0aGUgcXVhbGlmeWluZyBoYW5kOiBhIFJveWFsIEZsdXNoLiBPdXQgb2YgdGhlIGJveCB0aGUgc2l0dWF0aW9uIHdpdGggQ2FyaWJiZWFuIFN0dWQgUG9rZXIsIHBsYXllcnMgY2FuIGVhcm4gdXAgdG8gMTAlIHdpdGggdGhlIHByb2dyZXNzaXZlIHBvb2wgZm9yIHF1YWRzIGFuZCBzdHJhaWdodCBmbHVzaGVzLgpLZWVwIGF0IGl0IC4gCkZvcndhcmQgdGhpbmtpbmcuIERpdmUgZGVlcCBpbnRvIHRoZSBhZ2VuZGFzIGRyaXZpbmcgdXMgdG93YXJkcyB0aGUgZnV0dXJlLiAKRnVydGhlcm1vcmUsIEZDMiBpcyBub3Qgb2JsaWdhdGVkIHRvIHJlaXNzdWUgVXNlcnMgZW1haWwgYWRkcmVzcywgVXNlciBJRCBvciBwYXNzd29yZC4gCldlIGtyZWdlbiB3ZWwgZWVuIHVpdGxlZyBiaWogZGUgYmVlbGRlbiBpbiBoZXQgbWV0cm9zdGF0aW9uLiAKSSBsZWFybmVkIHRyYWRpdGlvbmFsIFRoYWkgb24gdGhlIG1hdCB3aXRoIHRoZSBwZXJzb24gY2xvdGhlZC4gCk91dGxvb2sgaWxsdXN0cmF0ZXMgdGhhdCB0aGUgbGluZ2VyaWUgc2FsZXMgc3RydWdnbGUgd2lsbCBwZXJzaXN0IHVudGlsIHRoZSByZXRhaWxlciBmaW5kcyBhIHdheSB0byByZWNvbm5lY3Qgd2l0aCBzaG9wcGVycyBvbiBwcmljZSwgcHJvZHVjdCBhbmQgaW1hZ2UsIEJsb29tYmVyZyBJbnRlbGxpZ2VuY2UgYW5hbHlzdHMgUG9vbmFtIEdveWFsIGFuZCBNb3JnYW4gVGFycmFudCB3cm90ZSBpbiBhIG5vdGUuIEluIFZTIGUgY29tbWVyY2Ugc2l0ZSBhbmQgZW1wbG95ZWVzIGNyaW1wIG1hcmdpbiBidXQgYXJlIHZpdGFsIHRvIHN1Y2Nlc3MuIAoyMyB0byBtYWtlIHN1cmUgdGhlcmUgYXJlIG5vIGxhc3QgbWludXRlIGZhbWlsaWVzIHN0cnVnZ2xpbmcgdG8gcHJvdmlkZSBhIENocmlzdG1hcyBmb3IgdGhlaXIga2lkcy4gVGhlIHRlYW1zIGNvbnNpc3Qgb2YgdGhyZWUgcGVvcGxlIGVhY2ggYW5kIHRoZSBlbnRyeSBmZWUgaXMgJDIwLiAKQnV0IHRoZXkgY2Fubm90IGJlIHVzZWQgdG8gcGFyZG9uIGEgY3JpbWUgdGhhdCBoYXMgbm90IHlldCBiZWVuIGNvbW1pdHRlZC4gCkNvdWxkIEVuZ2xhbmQgSGF2ZSBCZWVuIFN0cm9uZ2VyP1RoZXJlIGlzIGV2aWRlbmNlIHRvIHN1Z2dlc3QgdGhhdCBFbmdsYW5kIGNvdWxkIGhhdmUgYmVlbiBhIG11Y2ggc3Ryb25nZXIgcG93ZXIgYW5kIGNyZWF0ZWQgYSBtdWNoIHN0cm9uZ2VyIHJlc2lzdGFuY2UgdGhhbiBpdCBpbiBmYWN0IGRpZC4gSW4gMTAwOCwgdGhlbHJlZCBzdGFydGVkIHdvcmsgb24gYnVpbGRpbmcgYSBuYXZ5IHdob3NlIHNoaXBzIHdlcmUgZGVzY3JpYmVkIGFzIGJlaW5nICdtb3JlIG9mIHRoZW0gdGhhbiBoYWQgZXZlciBiZWVuIGluIEVuZ2xhbmQgaW4gdGhlIGRheXMgb2YgYW55IGtpbmcnLiBUaGlzIG5vdCBvbmx5IHN1Z2dlc3RzIHRoYXQgdGhlbHJlZCdzIGtpbmdkb20gd2FzIHBvdGVudGlhbGx5IHN0cm9uZ2VyIHRoYW4gYmVmb3JlLCBhbmQgdGhlcmVmb3JlIHVubGlrZWx5IHRvIGJlIGVhc2lseSBjb25xdWVyZWQsIGJ1dCBjb3VsZCBoYXZlIGJlZW4gYW4gZWZmZWN0aXZlIGZvcmNlIGFnYWluc3QgdGhlIFZpa2luZyBpbnZhZGVycy4gCkV0Yy4gCkluIDIwMDksIEpvaG4gSGFydGhvcm5lIGFuZCBBa2hpbCBOaWdhbSBmb3VuZGVkIE1hc3NDaGFsbGVuZ2Ugd2l0aCBhIHZpc2lvbiB0byBjYXRhbHl6ZSBhIGdsb2JhbCBzdGFydHVwIHJlbmFpc3NhbmNlICAgYSByZWJpcnRoIG9mIGluc3BpcmVkLCBjcmVhdGl2ZSBpbm5vdmF0b3JzIHdobyBzdHJpdmUgdG8gY3JlYXRlIG5ldyB2YWx1ZSBmb3IgdGhlIHdvcmxkLiBJbiBvdXIgZmlyc3QgeWVhciwgTWFzc0NoYWxsZW5nZSBzYXcgYXBwbGljYXRpb25zIGZyb20gb3ZlciAzNSBjb3VudHJpZXMsIGJ1dCB0aGUgaWRlYSBvZiBhIGdsb2JhbCByZW5haXNzYW5jZSBleHRlbmRlZCBiZXlvbmQgYXBwbGljYXRpb24gaW50ZXJlc3QuIEdlb2dyYXBoaWMgZXhwYW5zaW9uIGhhcyBsb25nIGJlZW4gYSBwYXJ0IG9mIHRoZSBNYXNzQ2hhbGxlbmdlIHZpc2lvbiBhbmQgSXNyYWVsIHdhcyBpZGVudGlmaWVkIGFzIHRoZSBmaXJzdCBub2RlIGZvciB0aGF0IGludGVybmF0aW9uYWwgZXhwYW5zaW9uIG91dHNpZGUgb2YgQm9zdG9uLgpGb29kIGNhbiBiZSBlbmpveWVkIGluIHNldmVyYWwgd2F5cy4gVGhlcmUgaXMgYSBsYXJnZSBidWZmZXQgdGhhdCBpbmNsdWRlcyBwaXp6YSBhbmQgZGVzc2VydHMsIGEgc3BvcnRzIGdyaWxsLCBhbmQgdGhlIEZpbmFsIEN1dCBzdGVhayByZXN0YXVyYW50LgpMZXQgbWUgbWFrZSBzdXJlIHlvdSBxdW90ZSB0aGF0IGNvcnJlY3RseS4gSm9zaC4gCiJDb3JleSdzIGxlYWRlcnNoaXAsIENGTCBleHBlcmllbmNlLCBhbmQgZmFtaWxpYXJpdHkgd2l0aCB0aGUgQXJnb25hdXRzIGZhbWlseSBjYXRhcHVsdGVkIGhpbSB0byB0aGUgdG9wIG9mIHRoZSBsaXN0IG9mIGNhbmRpZGF0ZXMgYW5kIG1hZGUgdGhlIGRlY2lzaW9uIGNsZWFyIHdobyBvdXIgbmV4dCBoZWFkIGNvYWNoIHdpbGwgYmUsIiBQb3BwIHNhaWQuIApUaGV5IGluZmxhdGVkIHRoZSBjdXAgc2l6ZS4gCkNlbHVpIGNpIHBhc3NlIGRlICJtYWwgbmNlc3NhaXJlIiAgYmllbiBlc3NlbnRpZWwuIApUaGUgY29udGFpbmVycyBhcmUgaW5jb252ZW5pZW50LCBhbmQgbGVzcyB1c2VmdWwgdGhhbiBvdGhlciBvcHRpb25zLgoiRXZlcnkgVW5pdGVkIFN0YXRlcyBQcmVzaWRlbnQgZnJvbUNhbHZpbiBDb29saWRnZXRvQmlsbCBDbGludG9uc2VydmVkIE1vdW50YWluIFZhbGxleSBTcHJpbmcgV2F0ZXIgaW4gdGhlIFdoaXRlIEhvdXNlLiAKMTIgbHVnIDIwMTcgLiBEb3dubG9hZCBDYXJ0ZWdnaW8gZnJlZSBwZGYgLCBEb3dubG9hZCBDYXJ0ZWdnaW8gUGRmICwgUmVhZCBPbmxpbmUgQ2FydGVnZ2lvIHBkZiAsIEZyZWUgLiBNYW51YWxlIGRpIGNhcnRlZ2dpbyBuYXV0aWNvIHBkZiBvbmxpbmUgYm9vayBkb3dubG9hZCwgcGRmIC4gVGVycmUgZG9sdHJlcG8gICBjYW50aW5hIGRpIGNhc3RlZ2dpbyBhIHdpbmUgbWFraW5nIGNlbnRyZSBpbi4gRG93bmxvYWQgPj4gRG93bmxvYWQgT2tpIGVzIDQxOTEgbWFudWFsIGxhd24gLiBJbmZvIGd1aWRlLCAsIE5va2lhIDkyMCBsdW1pYSB1c2VyIG1hbnVhbCwgTWFudWFsZSBkaSBjYXN0ZWdnaW8gbmF1dGljbyBwZGYgY3JlYXRvciwgT2tpIGVzIDQxOTEgbWFudWFsLiAKQW5kIHllcywgdGhlIHNleCBpcyB0aGVyZS4gVGhlIGVudGlyZSBnYW1lIGlzIHByZXNlbnRlZCBpbiBzdGF0aWMsIGhhbmQgZHJhd24gaWxsdXN0cmF0aW9ucywgYnV0IHNvbWUgb2YgdGhlbSBjYW4gZ2V0IHByZXR0eSBleHBsaWNpdC4gT2YgY291cnNlLCB5b3UgaGF2ZSB0byBwbGF5IHRoZSBnYW1lIG9uIGEgY29tcHV0ZXIsIGEgZGV2aWNlIHdoaWNoIGlzIG9uZSBHb29nbGUgc2VhcmNoIGF3YXkgZnJvbSBhbnkgdHlwZSBvZiBkZXZpYW50IHNleHVhbCBhY3QgeW91IGNhcmUgdG8gd2l0bmVzcyBpbiBnbG9yaW91cyBoaWdoIGRlZiB2aWRlby4gCkFmdGVyIGFsbCwgTWFyZ2FyZXQgd2FzIG9ubHkgc2l4IGFuZCBhbHJlYWR5IGhhZCBhIHJlcHV0YXRpb24gZm9yIG5hdWdodGluZXNzLiAKTU1vbnJvZTU0ICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KSXQgY291bGQgYmUgcG9zc2libGUgdGhhdCB0aGV5IGFncmVlZCB0byByZW1vdmUgdGhhdCBmdW5jdGlvbmFsaXR5IGluIGV4Y2hhbmdlIGZvciBhbGxvd2luZyB0aGUgYXBwIHRvIHJlbWFpbiB1cC4gCkhhdmUgeW91IHRvbGQgeW91ciBkb2N0b3IgdGhhdCB0aGUgYmFieSBpc24gbW92aW5nIGFzIG11Y2g/IEkgdGhpbmsgeW91IHNob3VsZCBjYWxsIGFuZCBsZXQgdGhlbSBrbm93LiBBbmQgaWYgeW91IHNjYXJlZCBhbmQgd2FudCBzb21lIHJlYXNzdXJhbmNlLCB0aGF0IHRvdGFsbHkgZmluZSEgQXNrIGlmIHlvdSBjYW4gY29tZSBpbiBzbyB0aGV5IGNhbiBtb25pdG9yIHRoZSBiYWJ5IGFuZCBvciBjaGVjayB5b3VyIGRpbGF0aW9uLiAKVGhlIGRlYWxlciBzYWlkICJ5b3Ugc2FpZCBmb2xkIiBhbmQgbXVja2VkIG15IGhhbmQuIApJIGFncmVlIGl0IGEgZ29vZCB0aGluZyBidXQgd2FyeSB0aGF0IGl0IHNlZW1zIHRvIGJlIHBvdGVudGlhbGx5IGFmZmVjdGluZyBldmVyeW9uZSByYXRoZXIgdGhhbiB0aGUgZmV3IGF0IHRoZSB0b3AuCldoeT8gQmVjYXVzZSBub2JvZHkncyBoZWFyZCBvZiB0aGVtLiAKQURIRCBzcGVjdHJ1bSBwZW9wbGUgY2FuIGJlIGVpdGhlciBoeXBlcmFjdGl2ZSB0byBpbmF0dGVudGl2ZS4gSSBoYXZlIHRlZW5hZ2UgZnJhdGVybmFsIHR3aW4gZGF1Z2h0ZXJzIHdpdGggQURIRC4gT25lIGlzIGh5cGVyYWN0aXZlLiAKNykgU3RlbGxhOiAwMDQwIDAxMzUsIDEwMG1pbiwgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIHBhc3QgZml2ZSBtb250aHMgKEluIHRoZSBsYXN0IHNlc3Npb24gSSBmYWlsZWQgdG8gZnVjayBoZXIgYmVjYXVzZSBvZiBteSBkaWNrJ3MgY29uZGl0aW9uKS4gSW4gYSByb29tIERGSywgQkosIGNvdyBnaXJsLCAyNSBtaW4gREFUWSB3aXRoIGhlciBpbnRlbnNlIGZ1Y2tpbmcgTywgbWlzc2lvbmFyeSwgdG9iYWNjbyBicmVhaywgaGVyIHVuc3VjY2Vzc2Z1bCBCSiBhaW1pbmcgYXQgQ0lNLCBteSBtYXNzYWdlIG9uIGhlci4gUmVwZWF0Li4gClBlb3BsZSBsaWtlIHN1cGVyaW50ZW5kZW50cyB0aGF0IGRpZG4gd2FudCBoaW0gdG8gcmV2ZWFsIGFueXRoaW5nIGFuZCBzbyBvbi4gCkphY2sgUGluZSBhbmQgQmxhY2sgU3BydWNlIHdpbGwgbm90IGxpdmUgMjAwIHllYXJzLiAKR29sZmVycyBtYXkgZmluZCBpdCBkaWZmaWN1bHQgdG8gY2Fycnkgb3V0IGFuIGluc3RydWN0aW9uIHRvIG1vdmUgdGhlaXIgYm9keSBpbiBhIHBhcnRpY3VsYXIgd2F5IHdoZW4gdGhleSBkb24ndCBrbm93IHdoYXQgdGhhdCBmZWVscyBsaWtlLiBNYXNzYWdlIHN0aW11bGF0ZXMgcHJvcHJpb2NlcHRvcnMgaW4gdGhlIGJvZHkgdGhhdCBoZWxwIHVzIHJlZ2FpbiBwaHlzaWNhbCBhd2FyZW5lc3MuIApXaGljaCBpcyBlc3NlbnRpYWxseSBhIGZhbmN5IHdheSBvZiBzYXlpbmcgSSByZWFkIGFib3V0IHRoZSByZWNlbnQgYXNjZW5zaW9uIG9mIE1pciBIYXphciBLaGFuIEJpamFyYW5pIGFuZCBJc3JhcnVsbGFoIFplaHJpIHRvIHRoZSBmZWRlcmFsIGNhYmluZXQsIGFuZCBhcyBhIHdvbWFuIEkgZmluZCBpdCBib3RoIG9kaW91cyBhbmQgcGVycGxleGluZy4gCk5hbmN5OiBJcyB0aGVyZSBhbnl0aGluZyB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIHNheSB0byBraWRzIGluIEFmZ2hhbmlzdGFuPwpCdXQgdHJ1ZSBzZWxmIGRpc2NvdmVyeSwgYW5kIHRoZXkgZXZlbiBwb3J0cmF5IGl0IHRocm91Z2ggdGhlaXIgaW5zdHJ1bWVudHMuIEl0IG9uZSBvZiB0aGUgZmV3IHJlYXNvbnMgSSBldmVuIHdhbnRlZCB0byBzdGFydCBwaWNraW5nIHVwIGEgZ3VpdGFyIGFuZCBwbGF5aW5nLi4gCklmIHlvdSB0aG91Z2h0IEdEUFIgd2FzIGJhZCBmb3IgZGlnaXRhbCBicmFuZCBtYXJrZXRpbmcsIHdhaXQgdGlsbCBDYWxpZm9ybmlhJ3MgbmV3IGRhdGEgcHJpdmFjeSBsYXcgdGFrZXMgZWZmZWN0IGluIEphbnVhcnkgMjAyMC4gSXQgaXMgImVzc2VudGlhbGx5IEdEUFIgb24gc3Rlcm9pZHMsIiBEb3VnIFdvb2QsIEFOQSdzIGdlbmVyYWwgY291bnNlbCBhbmQgUmVlZCBTbWl0aCBwYXJ0bmVyLCBzYWlkIGluIGEgcHJlc2VudGF0aW9uLiAKSXQgd2FzIGEgZGlzcGxheSBvZiB3aGF0IE5pbG9mZXIgaXMgcmVub3duZWQgZm9yOiBjcmFmdHNtYW5zaGlwIHRoYXQgYm9yZGVycyBvbiBjb3N0dW1lLiAKV2FzIGEgU3RvbmVzIGZhbiBmaXJzdCwgc2F5cyBCcm93bi4gU3RvbmVzIHdlcmUgbXkgZ2F0ZXdheSB0byB0aGUgYmx1ZXMuIEJ1dCBJIHdhcyB0aGUga2luZCBvZiBraWQgdGhhdCB3aGVuIEkgY29tZSBhY3Jvc3MgYSBjb3ZlciBJIGxpa2VkIGFuZCBzYXcgd2hvIHdyb3RlIGl0LCBJIGdvdCB0byBnbyB0byB0aGUgc291cmNlLiBXaGVuIEkgc3RhcnRlZCBnb2luZyB0byB0aGUgc291cmNlIG9mIHRoZXNlIFJvbGxpbmcgU3RvbmVzIHNvbmdzIEkgZm91bmQgdGhhdCBJIGxpa2VkIEppbW15IFJlZWQgZXZlbiBtb3JlIHRoYW4gdGhlIFN0b25lcyBhbmQgSSBsaWtlZCBNdWRkeSBXYXRlcnMgZXZlbiBtb3JlIHRoYW4gdGhlIFN0b25lcy4gSSBtZWFuLCBJIGxvdmUgdGhlIFN0b25lcy4gQnV0IEkgbG92ZSB0aGUgc291cmNlLiBUaGF0IHdoYXQgdGhpcyBpcy4gVGhlIGFsYnVtIGlzIGdvaW5nIHRvIHRoZSBzb3VyY2UuIG93biBiYWNrc3RvcnkgaXMgY2VydGFpbmx5IGNvbG91cmZ1bCBlbm91Z2ggdG8gZml0IGludG8gdGhlIGFubmFscyBvZiBncmVhdCBibHVlcyBsb3JlLiBCb3JuIGluIEVkbW9udG9uLCBoZSBsaXZlZCBpbiBmb3N0ZXIgaG9tZXMgZm9yIGEgc3BlbGwgYW5kIHdhcyBldmVudHVhbGx5IGFkb3B0ZWQuClllcywgaXQgb25seSB0YWtlcyBhIGZldyBtaW51dGVzIGFuZCBpZiB0aGF0IGlzIGFsbCB5b3UgaGF2ZSB0byBkbyB0byBiZSBzdWNjZXNzZnVsIGF0IG9ubGluZSBwb2tlciwgeW91IHdvbid0IGJlIGFibGUgdG8gcGFzcyB0aGlzIHVwLiAKSGUgcGxheWVkIEFzc29jaWF0aW9uIGZvb3RiYWxsIGZvciBoaXMgdW5pdmVyc2l0eSwgZm9yIHRoZSBDb3JpbnRoaWFucywgU291dGhhbXB0b24sIGFuZCBmb3IgRW5nbGFuZC4gV2Fsa2luZyBzbG93bHkgdG8gdGhlIHdpY2tldC4gClRoZSBtYXJrZXQgdmFsdWUgb2YgdGhlIHJlbnRhbHMgaXMgYWJvdXQgJDEuNiBtaWxsaW9uIHNvIHRoZXkgaGF2ZSAkNjYzLDAwMCBlcXVpdHkgaW4gcHJvcGVydHkuIAooSSBwcmV0dHkgc3VyZSB0aGF0IGNvZGUgaXRzZWxmIGlzIGEgcmVmZXJlbmNlIHRvIEZhaHJlbmhlaXQgNDUxIHRob3VnaCkuIApTbyBtZSBhbmQgYSBjcmV3IGdvdCBhY2N1c2VkIG9mIHN0cmVhbSBzbmlwaW5nIFN1bW1pdDFnLiBCYXNpY2FsbHkgd2hhdCBoYWQgaGFwcGVuZWQsIHdlIHdlcmUgcnVubmluZyBmb3J0cyBvbiBhIHNlcnZlciBhbmQgc3RhY2tpbmcgbG9vdC4gClRIRSBSSUNIIExJU1QgVE9QIDEwMApJZiBvdXIgZmlyc3QgdGhyZWUgY2FyZHMgYXJlIHF1ZWVucywgb3VyIHF1ZXN0aW9uIHJlYWxseSBpcywgd2hhdCBpcyB0aGUgcHJvYmFiaWxpdHkgdGhhdCBpIGdldCBhIHBhaXIgZ2l2ZW4gZm91ciBjYXJkcyBvdXQgb2YgNDk/IFNpbmNlIHdlIGFscmVhZHkgaGF2ZSB0aHJlZSBxdWVlbnMsIHdlIGRvbid0IHdhbnQgdG8gY29uc2lkZXIgdGhlIGNhc2Ugd2hlcmUgd2UgY2FuIGdldCBhIHBhaXIgb2YgcXVlZW5zLCBiZWluZyBhcyB0aGlzIGlzIGNsZWFybHkgaW1wb3NzaWJsZS4gVGhlIHRvdGFsIG51bWJlciBvZiB3YXlzIHdlIGNhbiBnZXQgYW55IHR3byBjYXJkcyBpcyA0OSBDIDIsIG9yIDExNzYuIApMZSBjaG5lLCBjIGJpZW4gY29ubnUsIGF0dGlyZSBsYSBmb3VkcmUuIApTbyBJIHRoaW5rIGl0IGdyZWF0IHRoYXQgeW91IGJhY2tpbmcgdXAgdGhlIHNjaG9vbCB3aXRoIGEgcmVhc29uYWJsZSBjb25zZXF1ZW5jZSBhdCBob21lLiAKUGx1cywgeW91IGNhbiBwbGF5IHdpdGggaHVuZHJlZHMgb2YgcGVvcGxlLiBZb3UgY2FuIG1ha2UgbW9yZSBvbmxpbmUuLiAKVGhlIHVsdGltYXRlIGluZHVsZ2VuY2UgV29vZGhvdXNlIEVzY2FwZSBhIGhlYWQgdG8gdG9lIHJpdHVhbCBiZWdpbnMgd2l0aCBhIGdlbnRsZSBvcmdhbmljIG15cnRsZSwgb2xpdmUgc3RvbmUsIGFuZCBzZWEgc2FsdCBib2R5IHBvbGlzaCwgZm9sbG93ZWQgYnkgYSBzb290aGluZyBob3QgdG93ZWwgbWFzc2FnZS4gTmV4dCwgYSB0aGVyYXBldXRpYyBuZWNrIGFuZCBzaG91bGRlciB0cmVhdG1lbnQgcmVsZWFzZXMgdXBwZXIgYm9keSB0ZW5zaW9uLCB3aGlsZSB0aGUgd2FybWluZywgdm9sY2FuaWMgc3RvbmUgbWFzc2FnZSBkZWVwbHkgcmVsYXhlcyB0aGUgbXVzY2xlcy4gVGhlbiwgdGhlIHJlc3RvcmF0aXZlIGFuY2llbnQgYXJ0IG9mIHJlZmxleG9sb2d5IGlzIHBlcmZvcm1lZCBvbiB0aGUgaGFuZHMgYW5kIGZlZXQuIApTbHVzaHlEaW5nbyAgNCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSW4gbXkgbWluZCwgaXQgaXMgdGhlcmUgdGhhdCBJIGFtIGFuIGFjdHJlc3MgYW5kIEkgaGF2ZSB0byBiZSBnb29kIGFuZCB0aGVzZSBhcmUgdGhlIHRoaW5ncyBJIGhhdmUgdG8ga2VlcCBpbiBtaW5kIHRvIGhhdmUgYSBncmVhdCBjYXJlZXIuIi4gClN3YXBwaW5nIHRvIGhlciBmb3IgdGhyZWUgcm91bmRzIGFuZCByZWFsaXppbmcgeW91IGRvbiBoYXZlIHRvIGFpbSBiZWNhdXNlIHlvdSBzaG9vdCBsaWdodCByb3BlcyBkb2VzbiBnaXZlIHlvdSB0aGUgY3JlZGVudGlhbHMgdG8gbWFrZSB0aGlzIGNsYWltLiBCYWNrIGl0IHVwLkkgaGF2ZSAzMCBzb21ldGhpbmcgaG91cnMgb24gU29sZGllciBhbmQgaGUgaXMgdGhlIG1vc3QgYnJhaW4gZGVhZCBiYWJ5IGRwcyBoZXJvIGluIE92ZXJ3YXRjaC4gWWVzIGhlIGZ1biBidXQgc2VyaW91c2x5LiAKTm90aGluZyB3b3JzZSBpcyBldmVyIGNhbGxpbmcgKE1BWUJFIGEgMyBpZiB5b3VyIG9wcG9uZW50IGlzIHJlYWxseSBiYWQgYnV0IHdoYXQgM3ggaGFuZHMgbWFrZSBzZW5zZSBoZXJlPyksIGFuZCBub3RoaW5nIGJldHRlciBpcyBldmVyIGZvbGRpbmcgZXhjZXB0IG1heWJlIDg5LCBhbHRob3VnaCA4OSBkb2VzbiBtYWtlIHNlbnNlIHNpbmNlIGl0IHNob3VsZCBiZSByYWlzaW5nIHRoZSB0dXJuLiBZb3UgcHJldHR5IG11Y2ggb3duaW5nIHlvdXJzZWxmIHZzIGZsdXNoZXMgZm9yIHRoZSBzYWtlIG9mIHRyeWluZyB0byBibHVmZiBvdXQgb3RoZXIgOHggaGFuZHMsIHdoaWNoIGFyZSBmZXcgYW5kIGZhciBiZXR3ZWVuIGNvbXBhcmVkIHRvIGZsdXNoZXMuIEhlbGwsIGV2ZW4gaWYgeW91IGp1c3QgY2hlY2sgY2FsbGVkIGl0IHdvdWxkIHByb2JhYmx5IGJlIGZvciB3YXkgbGVzcyB0aGFuIGFsbCBpbiBzbyB5b3Ugd291bGRuIGhhdmUgbG9zdCBuZWFybHkgYXMgbXVjaC5TbyBiYXNpY2FsbHkgamFtbWluZyByaXZlciBpcyBhIGh1Z2UgbWlzdGFrZSwgbGVhZGluZyBwb3Qgb24gdGhlIGZsb3AgaXMgYW4gZXZlciBodWdlciBvbmUgYmVjYXVzZSBpdCBtZXNzZWQgdXAgdGhlIHJlc3Qgb2YgdGhlIGhhbmQuIApJdCBmbG9vcnMgbWUgdGhhdCBzb21lIHBlb3BsZSBhY3R1YWxseSBhcHBlYXIgbm90IHRvIGtub3cgaXQgd3JvbmcgdG8gaW52YWRlIHNvbWVvbmUgcGVyc29uYWwgc3BhY2UuIEEgcGxhY2UgSSB1c2VkIHRvIHdvcmsgaGlyZWQgYSBuZXcgU2FsZXMgUmVwIGFuZCBoZSB3b3VsZCBzdGFuZCAxIiAyIiBmcm9tIG1lLCBhbG1vc3QgdG91Y2hpbmcgbWUgYXQgd29yaywgdG90YWxseSBpbnZhZGluZyBteSBwZXJzb25hbCBzcGFjZS4gSXQgbWFkZSBtZSBleHRyZW1lbHkgdW5jb21mb3J0YWJsZSBzbyBJIHBvaW50IGJsYW5rIHRvbGQgaGltICJ5b3UgaW52YWRpbmcgbXkgcGVyc29uYWwgc3BhY2UsIGNhbiB5b3UgcGxlYXNlIHN0YXkgYmFjayBhIGxpdHRsZSAiIEhlIGRpZCBmaW5hbGx5LCBidXQgaGUgaGFkIGFuIG9mZmVuZGVkIGxvb2sgb24gaGlzIGZhY2UsIGxpa2UgSSB3YXMganVzdCBhIGJpdGNoIG9yIHNvbWV0aGluZy4uIApObyBhdHRhY2tzIHdlcmUgZXZlciBjb21taXR0ZWQgYnkgdGhlIEFmZ2hhbiBnb3Zlcm5tZW50IGFnYWluc3QgdGhlIFVTIG5vciBieSB0aGUgSXJhcWlzLi4gCkxhdW5jaGVzS2F5YWtzICA2IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZSBnYW1lIGlzIHNldCBpbiBhIHZhc3QuIDEgSnVsIDIwMTggLiAKTG93IGludGVyZXN0IHJhdGVzIGFuZCBsb3cgdW5lbXBsb3ltZW50LCBhIHN0cm9uZyBlY29ub215LCBwZW9wbGUgYXJlIGNvbnRpbnVpbmcgdG8gYnV5LiBOby4gMSBhZ2UgZ3JvdXAgZm9yIGJ1eWluZyBob21lcyBhcmUgcGVvcGxlIDI1IHRvIDM0LCB0aGUgQ2FuYWRhIE1vcnRnYWdlIGFuZCBIb3VzaW5nIENvcnAuIApHb2FsIHNjb3JlcnMgZm9yIHRoZSBTdG9ybSB3ZXJlIEdyYXlkb24gUGV0ZXJzLCBaYWNoIFN0cm91ZCwgQXNwZW4gUGl0cmUgYW5kIENhcnNvbiBJcnZpbmUsIHdoaWxlIEJyYXlkZW4gUmVkZGljayBub3RjaGVkIHRoZSBNYW1tb3RocyBsb25lIGdvYWwuIApDb21lIGluIGFuZCBtZWV0IG91ciBORVcgbWFzc2FnZSB0aGVyYXBpc3QgTWFyeVRvIGFsbCBvdXIgbG95YWwgbWFzc2FnZSBjbGllbnRzIHdlIGFyZSBub3cgb2ZmZXJpbmcgZGlzY291bnQgcHJvZ3JhbS4gRm9yIHlvdXIgZXZlcnkgNnRoIG1hc3NhZ2UgeW91IHdpbGwgcmVjZWl2ZSA1MCUgb2ZmLihleGFtcGxlIHRoZSA2dGggNTAlIG9mZiwgMTJ0aCA1MCUgb2ZmKVRoZSBjbGFzc2ljIHJlbGF4aW5nLCBmdWxsIGJvZHkgbWFzc2FnZS4gU3dlZGlzaCBtYXNzYWdlIGlzIGEgdmlnb3JvdXMgc3lzdGVtIG9mIHRyZWF0bWVudCBkZXNpZ25lZCB0byBlbmVyZ2l6ZSB0aGUgYm9keSBieSBzdGltdWxhdGluZyBjaXJjdWxhdGlvbi4gCk15IHN1YmNvbnNjaW91c25lc3Mga2lja2VkIGludG8gZ2VhciBldmVuIHRob3VnaCBJIHdhc24gZXZlbiB0cnlpbmcgdG8gZ28gdG8gc2xlZXAuIApUaGlzIHdob2xlIGNvbnZlcnNhdGlvbiB3YXMgc28gZ3JlYXQgYW5kIGNyYXp5LiBBdCBvbmUgcG9pbnQsIHNoZSBhc2tlZCAiSSBkb24ndCB3YW50IHRvIGdldCBwZXJzb25hbCBidXQgZG8geW91IGxpdmUgdG9nZXRoZXI/IiBUaGV5IGRvbid0LCBidHcuIApJIGFsc28gYSBodWdlIGZhbiBvZiB0b3J0aWxsYSBwaXp6YXMuIEl0IG5vdCBtZWFsIHByZXAsIGJ1dCBpdCBncmVhdCBmb3IgbmlnaHRzIHdoZW4geW91IGp1c3QgY2FuIHN0b21hY2ggdGhlIGlkZWEgb2YgeW91ciBwcmVwIG9yIG5lZWQgdG8gdXNlIHVwIHZlZ2dpZXMuIApBbmQgaG93IGlzIHVzaW5nIGFjdHVhbCBkYXRhIHRvIGJhY2sgdXAgYW4gYXJndW1lbnQgY293YXJkbHk/IEkgZG9uIGdldCB0aGF0IGF0IGFsbC5zaGFtdTI3NCAgMSBwb2ludCAgc3VibWl0dGVkIDcgbW9udGhzIGFnb0JvdGggeW91IGFuZCBLZW5uZXRoIGFyZSBmdW5kYW1lbnRhbGx5IG1pc3VuZGVyc3RhbmRpbmcgdGhlIHBvaW50IG9mIHRoaXMgbWFwLiBJZiB5b3VyIHBsYW4gaXMgdG8gcHJpbnQgdGhpcyBvdXQgaW4gZnVsbCBhbmQgaGFuZyBpdCBvbiBhIHdhbGwsIHRoZW4geWVhaCwgdGhpcyBtYXAgaXMgYmFkLiAKTm92ZW1iZXI6IE9uZSBvZiBFcHN0ZWluJ3MgZm9ybWVyIGJ1dGxlcnMgdHJpZXMgdG8gc2VsbCB0byBhbiB1bmRlcmNvdmVyIEZCSSBhZ2VudCBhIGJsYWNrIGJvb2sgZmlsbGVkIHdpdGggdGhlIG5hbWVzIG9mIGh1bmRyZWRzIG9mIGdpcmxzIGFuZCB5b3VuZyB3b21lbiB0aGF0IEVwc3RlaW4gYWxsZWdlZGx5IHByb2N1cmVkIGZvciBzZXggYW5kIG1hc3NhZ2VzLiBUaGUgYnV0bGVyIHRlbGxzIEZCSSBhZ2VudHMgaGUgd2l0bmVzc2VkIG51ZGUgdW5kZXJhZ2UgZ2lybHMgYXQgRXBzdGVpbidzIHBvb2wgYW5kIGhhZCBrbm93biB0aGF0IHRoZSBtaWxsaW9uYWlyZSB3YXMgaGF2aW5nIHNleCB3aXRoIHRoZW0uIApCdXQgdGhlIGhpbGFyaXR5IGNhbid0IGJlIGV4cGxhaW5lZCB0byBzb21lb25lIHRoYXQgd2Fzbid0IHRoZXJlIGF0IHRoZSB0aW1lLCBpdCBqdXN0IGRvZXNuJ3QgdHJhbnNsYXRlLCBiZWNhdXNlICJ5YSBqdXN0IGhhZCB0byBiZSB0aGVyZSwgbWFuLiIKV2UgbG92ZSBwdWIgdHJpdmlhLCBmd2l3LCBidXQgd2UgZG9uIGhhdmUgYSBnbyB0byBmb3IgYSBNb25kYXkgbmlnaHQuIFdlIGRvbiBtaW5kIGNhdGNoaW5nIGEgbW92aWUgaW4gdGhlIHRoZWF0ZXIsIGJ1dCB0aGVyZSBpc24gbXVjaCBvdXQgdGhhdCBwaXF1ZXMgb3VyIGludGVyZXN0IHJpZ2h0IG5vdywgdGhvdWdoIHlvdSBjb3VsZCBjb252aW5jZSB1cyBvZiBhIGZsaWNrIHdvcnRoIGNhdGNoaW5nLiAKSG93ZXZlciwgdGhlIGNyaW1pbmFsIGNvbXBsYWludCBhbmQgYWZmaWRhdml0LCBsaWtlIHRoZSBXYXNoaW5ndG9uIGxhd3N1aXQgZmlsZWQgb24gYmVoYWxmIG9mIHRocmVlIHVuZGVyYWdlIGdpcmxzLCBjb250ZW5kIHRoYXQgQmFja3N0YWdlIGFjdGl2ZWx5IGNvYWNoZWQgYWR2ZXJ0aXNlcnMgaW4gaG93IHRvIHdyaXRlIGFkdmVydGlzZW1lbnRzIGluIHdheXMgdGhhdCB3b3VsZCBzdGF5IHdpdGhpbiBsZWdhbCBsaW1pdHMgd2hpbGUgc3RpbGwgZW5jb3VyYWdpbmcgY29tbWVyY2lhbCBzZXguCklmIHRoZSBkZWFsZXIgZG9lcyBub3QgcGxheSB0aGVuIHRoZXJlIGlzIG5vIGFjdGlvbiBvbiBQbGF5IHdhZ2VycyBhbmQgQW50ZSB3YWdlcnMgYXJlIHBhaWQgMSB0byAxLiAKVGhlIEZCSSBhbmQgSnVzdGljZSBEZXBhcnRtZW50IGZpbmRpbmdzIHJlcG9ydCBvbiBTdGVwaGVuIFBhZGRvY2ssIHdobyBraWxsZWQgNTggaW4gYSAyMDE3IExhcyBWZWdhcyBtYXNzIHNob290aW5nLiAgQXNzb2NpYXRlZCBQcmVzcyBwaG90byBieSBSb3NzIEQuIEZyYW5rbGluLCBTdC4gR2VvcmdlIE5ld3MKQSBsb3Qgb2YgdGhlIHRpbWUsIHRoZSBzdWJ0ZXh0IG9mIHRoZSBqb2tlIGlzIHRoYXQgZGlzYWJsZWQgcGVvcGxlIGFyZSBlaXRoZXIgb2Jub3hpb3VzIG9yIHN0dXBpZC4gVGhhdCBub3QgZnVubnkgdG8gbWUgYmVjYXVzZSBJIGV4cGVyaWVuY2VkIHBlb3BsZSB0YWtpbmcgdGhhdCBvdXRzaWRlIHRoZSByZWFsbSBvZiBqb2tlcyB0byBtZSBhbmQgdHJlYXRpbmcgbWUgYXMgaWYgSSBhbSBvYm5veGlvdXMgb3Igc3R1cGlkLiBBcyBzdWNoLCBub3Qgb25seSBkb2VzIHRoZSBqb2tlIG5vdCBsYW5kIHRvIG1lIGJlY2F1c2UgSSBjYW4gcmVsYXRlIHRvIGl0IGF0IGFsbCwgaXQgcGlzc2VzIG1lIG9mZiBhIGJpdCBzaW5jZSBpdCBmZWVscyBsaWtlIEkgdGhlIHVud2l0dGluZyBidXR0IG9mIHRoZSBqb2tlLlRoZXJlIGEgQnJpdGlzaCBjb21lZGlhbiBjYWxsZWQgRnJhbmNlc2NhIE1hcnRpbmV6LCB3aG8gaXMgZGlzYWJsZWQgKGNlcmVicmFsIHBhbHN5KSwgYW5kIGhlciBjb21lZHkgb2Z0ZW4gcmlmZnMgb24gaGVyIGRpc2FiaWxpdHkuIAooUGhvdG86IEFsaXNvbiBNY0N1bGxvY2gpSGFyZCB0byBGaW5kIEJvb2tzOiBGdW5kcmFpc2VyLiAKRG9lcyBLaW0gbmVlZCBhbiBpbnRlcnZlbnRpb24/IE5vdCBhY2NvcmRpbmcgdG8gS3lsZSwgYnV0IHRoZSB0d28gYXJlbid0IG9uIHRoZSBiZXN0IG9mIHRlcm1zIGFuZCBLeWxlIHNhaWQgc2hlJ3Mgbm90IHN1cmUgd2hlcmUgS2ltIHN0YW5kcyB3aXRoIGhlciBzb2JyaWV0eSBjdXJyZW50bHkuICJJIGhvcGUgc2hlJ3MgT0ssIEkgdGhpbmsgc2hlIGlzLCIgc2hlIHNhaWQuClBhY3F1aWFvIGluIGhpcyBlYXJseSBkYXlzIHdhcyBhIHZlcnkgZGlmZmVyZW50IGZpZ2h0ZXIgdG8gdGhlIG9uZSB3ZSBzZWUgYmVmb3JlIHVzIHRvZGF5LiBIZSB3YXMgYSBsaWdodCwgc2xpZ2h0IHNvdXRocGF3LCBoYWQgYSB0cnVja2xvYWQgb2YgY29uZmlkZW5jZSBhbmQgc2VsZiBiZWxpZWYsIGFuZCBhIGRldmFzdGF0aW5nIHN0cmFpZ2h0IGxlZnQgcHVuY2ggdGhhdCBwdXQgYW4gZWFybHkgZW5kIHRvIG1hbnkgYSBib3hlcnMgYW1iaXRpb25zLiBZZXQgaGlzIGNvbmZpZGVuY2UgY29zdCBoaW0gZGVhcmx5LiBIaXMgdHdvIGVhcmx5IGRlZmVhdHMgY2FuIGJlIHB1dCBkb3duIHRvIG92ZXJjb25maWRlbmNlLiBIZSBsb3N0IHRvIGxlc3MgdGFsZW50ZWQgZmlnaHRlcnMgd2hvIGNhdWdodCBoaW0gdW5hd2FyZXMgYXMgaGUgcGxheWVkIGNvY2sgb2YgdGhlIHJpbmcuIFdoaWxlIGhlIGRlZmluaXRlbHkgaGFkIHRhbGVudCwgaGlzIGxvc3NlcyB1bmRlcmxpbmVkIGhpcyBuZWVkIGZvciBtb3JlIGJveGluZyBza2lsbHMsIGFuZCBtb3JlIGltcG9ydGFudGx5LCB0aGUgbmVlZCBmb3IgYSByZWFsbHkgZ29vZCB0cmFpbmVyLiBCb3RoIGNhbWUgdG8gaGltIGxhdGVyIHdoZW4gaGUgdGVhbWVkIHVwIHdpdGggRnJlZGRpZSBSb2FjaC4KRHJ1bmsgZ3Vlc3RzIGNhbid0IG91dHNtYXJ0IHRoZSBvbiBib2FyZCBiYXJ0ZW5kZXJzOiBJZiB5b3UgdGhvdWdodCB0aG9zZSBhbGwgeW91IGNhbiBkcmluayBiZXZlcmFnZSBwYWNrYWdlcyB3ZXJlIGRpcmVjdGx5IGNvcnJlbGF0ZWQgd2l0aCBkcnVuayBkZWJhdWNoZXJ5IGF0IHNlYSwgdGhpbmsgYWdhaW4uIE9ubHkgZWlnaHQgdG8gMTAgcGVyIGNlbnQgb2YgcGFzc2VuZ2VycyBwdXJjaGFzZSB1bmxpbWl0ZWQgYm9vemUgcGFja2FnZXMgICBSb3lhbCBDYXJpYmJlYW4ncyBndWVzdHMgYXJlIGxhcmdlbHkgZmFtaWx5IHRyYXZlbGVycyAgIGFuZCB0aG9zZSB3aG8gZG8gYXJlIGNhcmVmdWxseSBtb25pdG9yZWQuIEV2ZXJ5IHNpbmdsZSBhbGNvaG9saWMgYmV2ZXJhZ2UgaXMgcG91cmVkIHdpdGggYSBqaWdnZXIuIApIZSBkb2VzIG5vdCB3YW50IGhlciB0byB0aGluayBoZSBpcyBtYWtpbmcgZGVjaXNpb25zIG9uIGhlciBiZWhhbGYgdG8gaGVscCBoaW1zZWxmIG9yIHRvIGhhcm0gaGVyIGluIGFueSB3YXkuIApPdSBNbWUgVG91dCBsZSBtb25kZS5Db25jZXJuYW50IGxlIGRvc2FnZSBkZXMgdml0YW1pbmVzIGR1IGdyb3VwZSBCIG5lIGRwYXNzYW50IHBhcyA3IG1nIGRhbnMgbGUgY2FzIGRlIGxhIEI1LCBqZSB2ZXV4IGJpZW4gcXUnaWwgZXhpc3RlIHVuZSByZ2xlbWVudGF0aW9uIGxvY2FsZSBleGNlc3NpdmVtZW50IGxpbWl0YXRpdmUgbWFpcyBpbCBmYXVkcmFpdCB2aXRlciBkJ2V4YWdyZXIuIE1haXMgdW5lIHJnbGVtZW50YXRpb24gYXVzc2kgbGltaXRhdGl2ZSBleGlzdGUgdCBlbGxlIHJlbGxlbWVudCA/IENlbGEgcmVzdGUgIHByb3V2ZXIgZXQgIHN1cHBvc2VyIHF1ZSBkZXMgZG9zYWdlcyBhdXNzaSBmcmFuY2hlbWVudCByaWRpY3VsZXMgc29pZW50IHJlbGxlbWVudCBpbXBvc3MsIGRhbnMgY2UgY2FzIGlsIG4neSBhdXJhaXQgcXUndW5lIHNvbHV0aW9uIDogcydhYnN0ZW5pciBkZSBjb21tZXJjaWFsaXNlciBkZXMgcHJvZHVpdHMgYXVzc2kgZnJhbmNoZW1lbnQgZGNldmFudC5PbiBub3RlcmEgY2VwZW5kYW50IHF1ZSBjb25mb3JtbWVudCAgc29uIHNvdWhhaXQgZGUgcHJvcG9zZXIgdW4gY29tcGxtZW50IGNlbnMgdG91dCBjb3V2cmlyLCBWZW5lc3NvbiBhIGluY2x1cyBkZSBsJ2FjaWRlIGFscGhhIGxpcG9xdWUgZXQgZGUgbGEgY28gZW56eW1lIFEgMTAgY2UgcXVpIG4nZXN0IHBhcyBkdSB0b3V0IGhhYml0dWVsIHRvdWpvdXJzIHBvdXIgbGVzIG1tZSByYWlzb25zIHF1ZSBjaXRlcyBwbHVzIGhhdXQsICBzYXZvaXIgcXVlIGxhIGNvIGVuenltZSBRIDEwIG4nZXN0IHZyYWltZW50IGluY29udG91cm5hYmxlIHF1ZSBkYW5zIGNlcnRhaW5zIGNhcyBkZSBmaWd1cmUsIGxlcyBwYXRob2xvZ2llcyBjYXJkaW8gdmFzY3VsYWlyZXMgcGFyIGV4ZW1wbGUgcXVhbmQgbGVzIG11c2NsZXMgKGV0IHBhcyBzZXVsZW1lbnQgbGUgbXVzY2xlIGNhcmRpYXF1ZSkgcmlzcXVlIGRlIHB0aXIgZCd1bmUgc3RhdGluZS4gCkJldHRlciByZWFjaCBvdXQgdG8gbm9uIGJlcm5pZSB2b3RlcnMgdGhhbiB5b3V0dWJlLiBZb3V0dWJlIHdpbGwgbW9zdCBsaWtlbHkgb25seSByZWNvbW1lbmQgQmVybmllIHN0cmVhbXMgYWZ0ZXIgeW91IGFscmVhZHkgd2F0Y2hlZCBzb2NpYWxpc3QgaXNoIHBvbGl0aWNhbCB2aWRlb3MuIApUaGlzIGlzIGEgc2VydmljZSB0aGF0IHdpbGwgc2VuZCBleG90aWMgZW50ZXJ0YWluZXJzIHRvIGEgcGVyc29uJ3MgaG9tZSwgaG90ZWwsIGNvbnZlbnRpb24gb3Igb3RoZXIgbG9jYXRpb24uIApBIE1hbmhhdHRhbiBsYXd5ZXIgaXMgc2hhbWVsZXNzbHkgdXNpbmcgYSBibGluZCByYXBwZXIgYW5kIG90aGVyIGhhbmRpY2FwcGVkIGNsaWVudHMgdG8gcmFrZSBpbiAibWlsbGlvbnMgb2YgZG9sbGFycyIgZm9yIGhpbXNlbGYgICB3aGlsZSBsZWF2aW5nIHRoZW0gd2l0aCBhIHBpdHRhbmNlLCBjb3VydCBwYXBlcnMgY2hhcmdlLiBMZWUgcmVndWxhcmx5IHNsYXBzIGJ1c2luZXNzZXMgd2l0aCBsYXdzdWl0cyBjbGFpbWluZyB0aGVpciBXZWIgc2l0ZXMgYXJlbid0IGNvbXBhdGlibGUgd2l0aCBzcGVjaWFsIHNvZnR3YXJlIHRoYXQgYWxsb3dzIGJsaW5kIHBlb3BsZSB0byByZWFkIHRleHQgb24gYSBzY3JlZW4sIGNvdXJ0IHJlY29yZHMgc2hvdy4uIApaeXp5ZmVyIHUKMjogV2FpdCB1bnRpbCB5b3VyIHR1cm4sIHRoZW4gYmVmb3JlIHlvdSBoaXQgY2FsbCBvciByYWlzZSwgdHlwZSBwb2tlcnRlbiBhZ2FpbiwgdGhlbiBoaXQgY2FsbCBvciByYWlzZS4gClRvIHBsYXkgdmlkZW8gcG9rZXIgeW91IHdpbGwgdGFwIG9uIHRoZSBjYXJkcyB5b3Ugd2lzaCB0byBrZWVwIG9yIG9uIGEgYnV0dG9uIG9uIHRoZSBjb25zb2xlLCBhbmQgdGhlbiBkcmF3IGNhcmRzIHlvdSB3aXNoIHRvIHJlcGxhY2UuIFlvdSB3aW4gYnkgaGF2aW5nIGEgdHJhZGl0aW9uYWwgcG9rZXIgaGFuZCwgYW5kIHRoZSBhbW91bnQgeW91IHdpbiBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBtYWNoaW5lIHlvdSBhcmUgcGxheWluZyBvbi4uIApCdXQgd2l0aCB0aGUgbWF5b3Igb3V0IG9mIHRvd24sIG9ubHkgZWlnaHQgc2lnbmVkIG9mZiwgZXZlbiBhZnRlciBOb3J0aCBEYWxsYXMgY291bmNpbCBtZW1iZXIgTGVlIEtsZWlubWFuIGluc2lzdGVkIGl0IHdhcyBsZWdhbCBzaW5jZSB0aGUgaG91c2UgaXNuJ3QgdGFraW5nIGEgcmFrZS4uIApBbmQgZm9yIG1lLCB0aGFuayBHb2QgaXQgaXMuIEkgdGhpbmsgdGhlIGNvbmNlcnRzIHdvdWxkIGJlIGhhcmQgd29yayBpZiB0aGV5IHdlcmUgYWxsIHRoYXQgZ2VudGxlLiAKTGUgY2FsbWUgcnRhYmxpLCBsZXMgb3V2cmllcnMgZnJhbmFpcyB2b250ICBBaWd1ZXMgTW9ydGVzIGRlbWFuZGVyIGR1IHJlbmZvcnQgZXQgcnBhbmRyZSBsYSBub3V2ZWxsZSBxdWUgMyBmcmFuYWlzIG9udCB0IHR1cy4gCkFuZ2xlIHNob290aW5nIGRvZXNuIHJlYWxseSBib3RoZXIgbWUgdGhhdCBtdWNoIGJlY2F1c2UgSSBkb24gcmVhbGx5IGZhbGwgZm9yIGFueSBvZiB0aGUgdHlwaWNhbCB0cmlja3MuIFNsb3cgcm9sbGluZyBpcyBqdXN0IGEgZGljayBtb3ZlLCBidXQgSSBkb24gbGV0IGl0IGJvdGhlciBtZSB3aGVuIGl0IGhhcHBlbnMuIApIb25lc3RseSwgbGFzdCB0aW1lIEkgcmVtZW1iZXIgbXkgbW9tIGNhbGxpbmcgbWUgYW55IGZvcm0gb2YgY29tcGxpbWVudCByZWdhcmRpbmcgbXkgYXBwZWFyYW5jZSB3YXMgb25lIG9mIHRob3NlIHRpbWVzIHdoZXJlIHlvdSBkbyBzb21ldGhpbmcgdGhhdCBtYWtlcyB5b3UgbG9vayByZWFsbHkgc3R1cGlkIChsaWtlIG9uZSB0aW1lIEkgd2FzIGZ1Y2tpbmcgYXJvdW5kIHdpdGggcGFja2luZyB0YXBlIGFuZCBnb3QgYSBwaWVjZSBzdHVjayB0byBteSBmYWNlIGZyb20gZWFyIHRvIGVhciwgbXVzaGluZyBteSBub3NlIHVwLCBjYXQgZnVyIGFuZCBjYXJwZXQgbGludCBzdHVjayBiZXR3ZWVuIHRoZSB0YXBlIGFuZCBtZSkgYW5kIEkgc2FyY2FzdGljYWxseSBzYWlkICJhbSBJIHByZXR0eSB5ZXQ/PyIKVG9wIDI1IEJyb2FkY2FzdCBUViBTZXJpZXMgKFBlciBMYXRlc3QgTmllbHNlbiBDdXJyZW5jeSBEYXRhKQpDaHJpc3RpbmEgcmV2ZWFsZWQgc2hlIGRpZCBub3QgZ2V0IHRvIG1ha2UgdXAgaGVyIG93biB0YWdsaW5lIGFuZCBoYWQgdGhlIGNob2ljZSBvZiB0d28gdGhhdCBzaGUgZGlkbid0IGxpa2UuIApUbyBiZWF0IHRoZSBnYW1lIERpbm8gUnVuLCB5b3UgbXVzdCBjb21wbGV0ZSBhbGwgb2YgdGhlIGxldmVscyBvbiBhIGNvdXJzZSBhbmQgZG9uJ3QgZ2V0IGtpbGxlZCBieSB0aGUgZWFydGhxdWFrZS9odXJyaWNhbmUvY29tZXQgdGhpbmd5LiAKT1AsIHRoZSBzYWQgdHJ1dGggaXMgeW91IGVpdGhlciBhZGFwdCBhbmQgc2VsbCBvdXQgdG8gbWFrZSB5b3VyIHNob3cgZXhjaXRpbmcgb3IgeW91IGZhaWwgYmVjYXVzZSBpdCBib3JpbmcgdGVsZXZpc2lvbi4gU2tlcHRpY3MgdGhhdCB3YXRjaCB0aG9zZSBzaG93cyBkbyBpdCBmb3IgZW50ZXJ0YWlubWVudCBhbmQgdGhlIGJlbGlldmVycyB3YXRjaCB0aGVtIHRvIGZlZWwgYSBzZW5zZSBvZiB2YWxpZGF0aW9uLiBJZiB5b3UgcHJvdmlkZSBuZWl0aGVyIHRoZW4gd2h5IHdvdWxkIGFueW9uZSB3YXRjaD8uIApPc3RlcmZlc3Q6IEFzY2Vuc2lvbiBHb3R0ZXMgaW4gZGllc2VtIGhlaWxpZ2VuIFRhZwpJZiB5b3UgY2FuIHN0YXkgYXdheSBmcm9tIGhlYXQgc3R5bGluZyBhbmQgY29sb3JpbmcsIHRoYXQncyBnb29kLCB0b28uIEkgdHJ5IHRvIHRyaW0gaXQgZXZlcnkgMyA0IG1vbnRocy4gCkknbSBhIHR5cGljYWwgbWlsbGVubmlhbCBOZXcgWW9ya2VyClByb2dyZXNzaXZlIHZpZGVvIHBva2VyIGdhbWVzIGRvIG5vdCBub3JtYWxseSByZXF1aXJlIHBsYXllcnMgdG8gcHV0IGEgc2lkZSBiZXQuIApUaGUgZm9sbG93aW5nIE1vbmRheSBhbGwgdGhlIGdpcmxzIGdvdCB0byB0ZWxsIGhlciBob3cgbXVjaCBmdW4gaXQgd2FzLiAKVGhlIHZpZGVvIHNob3dzIHRoZSBiZWFtaW5nIGNoaWxkcmVuIGV4Y2xhaW1pbmcgaW4gZGVsaWdodCBhbmQganVtcGluZyBhcm91bmQgdGhlIHNtYWxsIHlhcmQgYXMgdGhlIHNub3cgZmFsbHMuIFRoZSBnaXJsIGlzIHNlZW4gc3Bpbm5pbmcgYXJvdW5kIHdpdGggaGVyIGZhY2UgcmFpc2VkIHVwIHRvIHRoZSBza3kgYXMgaGVyIGJyb3RoZXIgamlncyB1cCBhbmQgZG93bi4gQXQgb25lIHBvaW50LCBib3RoIHB1dCB0aGVpciBoYW5kcyBvdXQgYW5kIHdhdGNoIHRoZSBmbGFrZXMgbGFuZCBvbiB0aGVpciB1cHR1cm5lZCBwYWxtcy4KQmV0dHkgdGhhbmsgeW91IGZvciBvdXIgY2hhdHMgYW5kIHNoYXJpbmcgeW91ciBob21lIHdpdGggbWUgaXQgd2FzIHRydWx5IGEgcGxlYXN1cmUuIApFbmdsYW5kIE1lbHRkb3duLCBhbiBhY3RpdmlzdCBncm91cCB0aGF0IHByb25vdW5jZWQgdGhlIGVuZCBvZiBjYXBpdGFsaXNtLCBoYXZlIG1hbmFnZWQgdG8gY2FwdHVyZSBzb21lIG1lZGlhIGF0dGVudGlvbiB3aXRoIHRoZWlyIGxvdmVseSBjb3N0dW1lcyBhbmQgc3RhZ2VkIGZ1bmVyYWwgZm9yIGNhcGl0YWxpc20uCk5vbmV0aGVsZXNzLCBhIHNob290aW5nIGlzIGRlZmluaXRlbHkgbm90IHNvbWV0aGluZyB5b3UgaGVhciBhYm91dCBldmVyeWRheS4gSW4gQW1lcmljYSwgc2hvb3RpbmdzIGhhcHBlbiBldmVyeSBkYXkgYW5kIHlvdSBwcm9iYWJseSBkb24ndCBoZWFyIGFib3V0IGl0IGV2ZXJ5ZGF5IGJlY2F1c2UgdGhleSBoYXBwZW4gc28gb2Z0ZW4gdGhhdCBpdCBpc24ndCBuZXdzd29ydGh5IGlmIGl0J3Mgb25seSBvbmUgb3IgdHdvIGRlYWQuLiAKTW9yZSBsaWtlbHkgaGUgaXMgdHJ5aW5nIHRvIHJlc29sdmUgaGlzIG93biBmZWVsaW5ncyBmb3IgaGVyLiAKIlRoZXkgY2FuIHdhZ2UgZnVsbCB3YXIgd2l0aCB0aGUgc3lzdGVtIGluIGEgd2F5IHRoZXkgY2FuJ3Qgbm93LCIgaGUgc2FpZC4gIlJpZ2h0IG5vdyB0aGV5J3JlIHN0aWxsIGZpZ2h0aW5nIHdpdGggYSBoYW5kIHRpZWQgYmVoaW5kIHRoZWlyIGJhY2sgYW5kIEkgd291bGQgbm90IGJlIHNob2NrZWQgdG8gc2VlIGEgbG90IG9mIG1vdmVtZW50IG9uY2UgdGhhdCBoYXBwZW5zLiAgSXQncyByZWFsbHkgYSBzaXR1YXRpb24gd2hlcmUgdGhlIG1hcmtldCBjb3VsZCBkcml2ZSB0aGUgY2hhbmdlLiIKV2hhdCB3b3JrZWQ6IExvdHMgYW5kIGxvdHMgYW5kIGxvdHMgb2Ygb3ZlcmhlYWQgcHJlc3MuIE1vc3RseSBoaWdoZXIgcmVwIHJhbmdlcyBpcyB3aGF0IG15IGRlbHRzIGFsd2F5cyByZXNwb25kZWQgdG8gYmVzdC4gClBhciBHYWJyaWVsIE1hdHpuZWZmClRoZSBjb21tdW5pdHkgZ290IGtpbmQgb2Ygc2hpdHR5LiAKRnJvbSBGYWNlYm9vayBUaGUgYmVzdCB3YXkgdG8gZ2V0IGxvYWRzIG9mIHBva2VyIGNoaXBzIG9uIGZhY2Vib29rIGlzIHRvIGFzayBvdGhlciBwbGF5ZXJzIHRvIGRvbmF0ZSB0aGVpciBjaGlwcyB0byB5b3Ugb3IgYnV5IHRoZW0gZnJvbSB2YXJpb3VzIHNpdGVzIHdoaWNoIG1heSBiZSB1bnRydXN0d29ydGh5LiAKVGhlcmUgaXMgbGl0dGxlIGV2aWRlbmNlIENhbmFkaWFuIGhvdXNlaG9sZHMgYXJlIGZlZWxpbmcgbW9yZSBzdHJhaW5lZCBmcm9tIHJpc2luZyBDYW5hZGlhbiBpbnRlcmVzdCByYXRlcywgdGVsZXBob25lIHBvbGxpbmcgc2hvd3MsIGEgZmluZGluZyB0aGF0IG1heSByZWFzc3VyZSBCYW5rIG9mIENhbmFkYSBwb2xpY3kgbWFrZXJzIHRoZWlyIHByZXZpb3VzIGhpa2VzIGhhdmVuIGdvbmUgdG9vIGZhci4KSnVzdCBsaWtlIGhvdyBub3QgZXZlcnlvbmUgd2hvIGVuam95cyBtZXRhbCBjb25zdGFudGx5IHdlYXJzIGJhbmQgc2hpcnRzLCBoYXMgbG9uZyBoYWlyIGFuZCBoZWFkYmFuZ3MgYWxsIHRoZSB0aW1lLiAKTXkgbW9tIHBhc3NlZCByZWNlbnRseSwgYW5kIGl0IGZlbHQgbGlrZSBhIGZyZWlnaHQgdHJhaW4gdG8gdGhlIGd1dCB3aGVuIEkgcmVhbGl6ZWQgd2UgaGFkIG5vIHBob3RvcyB0b2dldGhlciBhcyBhIGZhbWlseSBmcm9tIHRoZSBsYXN0IDUgeWVhcnMgb3Igc28ganVzdCBiZWNhdXNlIHNoZSBhbHdheXMgbWFkZSB1cyBwdXQgdGhlIGNhbWVyYSBkb3duLi4gClRoZXJlLCBkZWFyIHZpc2l0b3JzIGZyb20gL3IvYWxsIUkgeW91ciBmcmllbmRseSBuZWlnaGJvdXJob29kIGZ1bGx5IGF1dG9tYXRlZCBtb2Rib3QsIHNvIGl0IGlzIG15IHRhc2sgdG8gaW5mb3JtIHlvdSB0aGF0IHllcywgdGhpcyBpcyAvci9kZSwgYSBzdWJyZWRkaXQgZm9yIHRoZSBHZXJtYW4gc3BlYWtpbmcgY291bnRyaWVzIG9mIEV1cm9wZS5Zb3UgYXJlIHF1aXRlIHdlbGNvbWUgdG8gY29tbWVudCBpbiBFbmdsaXNoLiBOb3RlIHRob3VnaCwgdGhhdCB3ZSBoYXZlIGhlYXJkIHRoZSB1c3VhbCBqb2tlcyBhIG1pbGxpb24gdGltZXMgYW5kIHdpbGwgcmVnYXJkIHRoZW0gd2l0aCBwb2ludGVkIHdlYXJpbmVzcy4gCkhlIG1vc3QgbGlrZWx5IG5ldmVyIGdldCBpdCBiYWNrIGlmIHRoaXMgdG9vayBwbGFjZSBpbiB0aGUgVVMuIApCdXQgSSB0ZW5kIHRvIGJlbGlldmUgYSBsb3Qgb2YgY2FyZGlvdmFzY3VsYXIgZGFtYWdlIGhhcHBlbnMgZHVyaW5nIGFkb2xlc2NlbmNlIGFuZCBtYXliZSBvdXIgMjBzLiBJZiBvdXIgZm9vZCBhbmQgbGlmZXN0eWxlIGhhZCBhbnkgaW1wYWN0IHdlIGJlIHNlZWluZyBpdCBzb29uLi4gCkZpcmUgaGFsbHMgd2VyZSBiYW5uZWQgZnJvbSBob3N0aW5nIGNhc2lubyBuaWdodCBmdW5kcmFpc2VycyBpbiAxOTk3IGFmdGVyIGZlZGVyYWwgcHJvc2VjdXRvcnMgaW5kaWN0ZWQgc2V2ZXJhbCBjaGFyaXRpZXMgZm9yIGVtYmV6emxpbmcgbW9uZXkuLiAKVG93YXJkcyB0aGUgZW5kIG9mIGhpcyBsaWZlLCBteSBncmFuZGZhdGhlciBoYWQgZGVtZW50aWEuIEhlIGZyb20gRmlubGFuZCwgYnV0IGxpdmVkIGluIFN3ZWRlbiBtb3N0IGhpcyBsaWZlLiBIZSBtaXNzZWQgRmlubGFuZCwgYW5kIHdhbnRlZCB0byBtb3ZlIGJhY2ssIGJ1dCBpbiBoaXMgaGVhcnQgcHJvYmFibHkga25ldyB0aGF0IG15IGdyYW5kbWEgY291bGRuIHRha2UgdGhhdCBtb3ZlIGFzIHNoZSB3YXMgd2Vha2VyIHRoYW4gaGltLiBSZWFsbHksIGhlIHByb2JhYmx5IGNvdWxkbiBlaXRoZXIsIGV2ZW4gaWYgaGUgd291bGRuIGFkbWl0IGl0LgpTdXByZW1lIGNvdXJ0CllvdSBjYW4gYWxzbyBzbmFnIGdpZnQgY2FyZHMgZm9yIEJvdWxkZXIgQmVlciBhbmQgb3RoZXIgYXdlc29tZSBzd2FnLiAKVGhpcyBwYXN0IDMgbW9udGhzLCBJJ3ZlIHRha2VuIG11bHRpcGxlIGJyZWFrcywgbm90IHBsYXllZCBhcyBtdWNoLCBzdHVkaWVkIG1vcmUsIHJldmlld2luZyBoYW5kcyB3IGZyaWVuZHMvY29hY2ggYW5kIG1vc3RseSBwbGF5aW5nIGdyZWF0ICAgMTggYnV5IGlucy4gCkhpcyBwaWVjZXMgYXJlIGVhc3kgdG8gcGxheSwgYnV0IGhpcyBlZmZpY2llbnQgdXNlIG9mIHBpYW5pc3RpYyB0ZXh0dXJlIG1ha2VzIHRoZW0gc291bmQgbW9yZSBpbXByZXNzaXZlIHRoYW4gbW9zdCBwaWVjZXMgb2Ygc2ltaWxhciBkaWZmaWN1bHR5LiBUaGlzIG1ha2VzIGFtYXRldXIgcGlhbmlzdHMgbW9yZSBsaWtlbHkgdG8gcGxheSBpdCwgYmVjYXVzZSBpdCBnaXZlcyB0aGVtIHBsZW50eSBvZiBiYW5nIGZvciB0aGVpciBidWNrLCB3aGljaCBpbiB0dXJuIG1ha2VzIG90aGVyIHBlb3BsZSBtb3JlIGxpa2VseSB0byBoZWFyIGl0LCBldGMuLiAKRWhybGljaGVyd2Vpc2UgaXN0IGluIGRlbiBsZXR6dGVuIFdvY2hlbiBhdWNoIG5pY2h0IHZpZWwgcGFzc2llcnQuIEljaCBoYWJlIGtuYXBwZSAxNC4wMDAgSG5kZSBpbSBBdWd1c3QgZ2VzcGllbHQgdW5kIHN0ZWhlIG51biBlcm5ldXQgd2llZGVyIGtuYXBwIGFuIGRlciBHcmVuemUgenUgRkwgU0ggMi80LiBNZWluIFppZWwgZGllcyBiaXMgenVtIEVuZGUgZGllc2VuIE1vbmF0cyB6dSBzY2hhZmZlbiBzb2xsdGUgcmVhbGlzdGlzY2ggc2VpbiwgZGEgaWNoIGltIFNlcHRlbWJlciBub2NoIGVpbmUgV29jaGUgVXJsYXViIGhhYmUsIGRpZSBpY2ggdGVpbHdlaXNlIGF1Y2ggenVtIFNwaWVsZW4gbnV0emVuIG1jaHRlLi4gCk92ZXJ2aWV3IGZvciBwb2ludGFuZHNob290eQpGaXJzdCBvZiBhbGwsIGhlbGxvIHRvIGV2ZXJ5b25lIGFuZCBvZiBjb3Vyc2UgTWVycnkgQ2hyaXN0bWFzIChpZiB0aGF0J3MgYSBob2xpZGF5IHlvdSBjZWxlYnJhdGUpLiBJIGFtIGluIHRoZSBkZXNlcnQgcmlnaHQgbm93LCBhbmQgaXQncyBuZXZlciBzZWVtZWQgbGVzcyBsaWtlIENocmlzdG1hcy4KQXQgdGhlIHJlcXVlc3Qgb2Ygc29tZSBvZiB0aGUgbWVuLCBkZXRlY3RpdmVzIGhhdmUgcmV0cmlldmVkIHdlZGRpbmcgcmluZ3MsIGZpcmVhcm1zIGFuZCBjZWxscGhvbmVzIGZyb20gdGhlaXIgY2FycyBhbmQga2VwdCBhbiBleWUgb24gb25lIG1hbidzIGRvZyBkdXJpbmcgdGhlIHJvdWdobHkgZm91ciBob3VycyBoZSB3YXMgaW4gamFpbC4KU2VlZHM6MiBMZWVjaDowIDkuNjggTWIgUmV0YWlsbWFuIFBPUyB2MSA3MCBJbmNsIEtleWdlbiAuIApEYXMgbWl0IFNvZnR3YXJlIHZvbiBOZXR3b3JrIGFyYmVpdGVuZGUgIGhhdCBiZXJpY2h0ZXQsIGRhc3MgZXMgaW5zZ2VzYW10IHNlY2hzICAgYXVzIGRlbSBUZWFtIGRlcyBPbmxpbmUgIEFuYmlldGVycyBiZWkgZGVtICBFdmVudCBlaW5nZXNldHp0IGhhdCwgd2VsY2hlcyBhbHMgSGhlcHVua3QgYXVmIGRpZSB2b3JoZXJpZ2VuICBFdmVudHMgaW4gRGV1dHdzY2hsYW5kIHVuZCBzdGVycmVpY2ggbnVubWVociBpbSBHcmFuZCBIeWF0dCBIb3RlbCBhdXNnZXRyYWdlbiB3aXJkLgpIaXMgc2V2ZW4geWVhciBvbGQgc29uIHdhcyBhbHNvIGhvbWUgYXQgdGhlIHRpbWUuUmljaGFyZCB3YXMgYXJyZXN0ZWQgdGhlIGZvbGxvd2luZyBkYXkgbmVhciBJbnZlcm1lcmUuIApPdmVyIGhldCBvbnRiaWp0IHdhcmVuIHdlIGhlZWwgdGV2cmVkZW46IHNpbXBlbCBtYWFyIHZlcnMuIFJpamRlbmQgZG9vciBlZW4gaGVlbCBncm9lbiBib3NnZWJpZWQgZ2luZyBoZXQgcmljaHRpbmcgc25lbHdlZywgbWFhciBuYSBlZW4gcGFhciBraWxvbWV0ZXIgbWFha3RlbiB3ZSBhbHMgZWVuIHN0b3AgYmlqIGt1dXJvb3JkIFNrbGVuZSBUZXBsaWNlOyBhY2h0ZXIgZGUgb3VkZXJ3ZXRzZSBrdXVyZ2Vib3V3ZW4gKHdhYXIgYWwgZGUgbm9kaWdlIFNsb3dhYWtzZSBrdXVyZGVycyByb25kbGllcGVuKSB2b25kZW4gd2UgZWVuIGtsZWluIHJpdmllcnRqZSB3YWFyaW4gZHJpZSBoZXRlIGJyb25uZW4gdWl0a3dhbWVuLCBtZXQgZGUgbm9kaWdlIGthbGthZnpldHRpbmdlbiBpbiByb3plLCBvcmFuamUgZW4gZ3JvZW5lIHRpbnRlbi4gRWNodCB0b2YsIG1ldCB2ZWVsIHN0b29tLCBlZW4gYmVldGplIGEgbGEgaWpzbGFuZC4gCk91ciBhZHZlbnR1cmVycyBjcm9zcyBwYXRocyBvbiB0aGVpciB3YXkgdG8gdGhlIHNtYWxsIHRvd24gb2YgQ29wcGVydG9uIHdoZXJlIHRoZXkgYWxsIHBsYW4gb24gZmluZGluZyBhIHNlZXIgbmFtZWQgSHVnby4gCkpvc2h1YSBIYXJyaXMsJDIuNiBiaWxsaW9uLCBXaGFydG9uLiBQcml2YXRlIGVxdWl0eSBpbnZlc3RvciwgU2l4ZXJzIG93bmVyLjI1NS4gTWljaGFlbCBNb3JpdHosICQyLjUgYmlsbGlvbiwgV2hhcnRvbiBNQkEuIFdlbHNoIGJvcm4ga25pZ2h0LCBwYXJ0bmVyIGluIFNlcXVvaWEgQ2FwaXRhbCwgc2NvcmVkIGJpZyBvbiB0ZWNoIGludmVzdG1lbnRzLjI2MC4gTWljaGFlbCBNaWxrZW4sICQyLjUgYmlsbGlvbiwgV2hhcnRvbiBNQkEuIEluZmFtb3VzIGp1bmsgYm9uZCBraW5nLCBqYWlsZWQgZm9yIHNlY3VyaXRpZXMgZnJhdWQsIG5vdyBmb2N1c2VzIG9uIHBoaWxhbnRocm9waHksIHNvY2lhbCBwb2xpY3kuMjYxLiBNYXJjIFJvd2FuLCAkMi41IGJpbGxpb24sIFBlbm4sIFdoYXJ0b24gTUJBLiAKRCdhdXRyZSBwYXJ0LCBsYSBwdWJsaWNpdCBkdSBjYWJpbmV0IGVuIHF1ZXN0aW9uICh2b2lyIHBob3RvKSBtZSBsYWlzc2UgZHViaXRhdGlmLiAKSGlzIGJvb2sgaXMgcGFubmVkIGJ5IG1vc3QgbW9kZXJuIGhpc3RvcmlhbnMsIGFuZCBoaXMgcGVyc3BlY3RpdmUgaWYgbW9yZSB1c2VmdWwgYXMgYW4gaW50ZXJlc3RpbmcgZmlyc3QgcGVyc29uIGFjY291bnQgdGhhbiBhIGhpc3RvcmljYWxseSBhY2N1cmF0ZSB0ZWxsaW5nIG9mIGV2ZW50cy4gCkxhZHkgR2FnYSBhCkkgYWxzbyBiZWxpZXZlIHRoYXQgdGhpcyBtb3ZlIGhpbnRzIHRoYXQgd2Uga25vdyB0aGV5IHdlcmUgYWJsZSB0byBhbHRlciB2b3Rlcy4gCkNvZHkgY2F1Z2h0IHVwIHRvIG1lIHJpZ2h0IGFmdGVyIHRoZSBsYXN0IGFpZCBzdGF0aW9uLiBXZSBjaGF0dGVkIGZvciBhIHNlY29uZCBhbmQgSSBjb25maXJtZWQgdGhhdCB5ZXMsIGl0IHdhcyBNci4gUmVlZCBoaW1zZWxmLiAKUG9rZXIgaXMgaW52YXJpYWJseSBhIHJvbGxlciBjb2FzdGVyIHJpZGUgb25lIG1pbnV0ZSB5b3UgdXAsIHRoZSBuZXh0IHlvdSBkb3duLiBJdCBhIGdhbWUgZm9yIG5pZ2h0IG93bHMgdG9vIHBsYXkgd2VudCBvbiB0aWwgMy4zMGFtLiBNY0h1Z2ggc3Vydml2ZWQgZGF5IG9uZSwgYW5kIGZvdWdodCBoaXMgd2F5IGludG8gdGhlIHRvcCA3MCwgdGh1cyBndWFyYW50ZWVpbmcgaGltc2VsZiBhIGNhc2ggcHJpemUuIApDb29raWVzLCBkaWUgbmljaHQgdW5iZWRpbmd0IGVyZm9yZGVybGljaCBzaW5kLCB1bSBkaWUgRGllbnN0ZSBhdWYgZGllc2VyIFdlYnNpdGUgenVyIFZlcmZndW5nIHp1IHN0ZWxsZW4sIHdlcmRlbiBlcnN0IG5hY2ggZGVyIEVpbndpbGxpZ3VuZyB2ZXJ3ZW5kZXQuIEluZGVtIGRlciBOdXR6ZXIgZGllc2UgV2Vic2l0ZSBuYWNoIGRlbSBFaW5ibGVuZGVuIGRlcyBDb29raWUgQmFubmVycyBha3RpdiB3ZWl0ZXIgbnV0enQsIHdpbGxpZ3QgZXIgaW4gZGllIFZlcndlbmR1bmcgdm9uIENvb2tpZXMgZWluLiBEYXMgaGVpdCwgb2huZSBkaWVzZSBDb29raWVzIGlzdCBkaWVzZSBXZWJzaXRlLCBiZXppZWh1bmdzd2Vpc2UgZGVyIERpZW5zdCwgbmljaHQgd2llIHZvcmdlc2VoZW4gbnV0emJhci4gRGllc2UgQXJ0IHZvbiBDb29raWVzIHdpcmQgYXVzc2NobGllbGljaCB2b24gZGVtIEJldHJlaWJlciBkZXIgV2Vic2l0ZSB2ZXJ3ZW5kZXQgKEZpcnN0IFBhcnR5IENvb2tpZXMpIHVuZCBzbXRsaWNoZSBJbmZvcm1hdGlvbmVuLCBkaWUgaW4gZGVuIENvb2tpZXMgZ2VzcGVpY2hlcnQgc2luZCwgd2VyZGVuIG51ciBhbiBkaWVzZSBXZWJzaXRlIGdlc2VuZGV0LgpUaGVzZSBtYXkgaW5jbHVkZSBicm93c2VyIGNvb2tpZXMuIFdlIG1heSBhbHNvIHVzZSB3ZWIgYmVhY29ucyBhbmQgc2ltaWxhciB0ZWNobm9sb2dpZXMuIFdlIHVzZSB0aGVzZSB0b29sczouIAoiVGhlIG1lYXQgd2FzIGRyeSBhbmQgTG91aXNlIGxldCB0aGVtIGRyaW5rIGJpZyBnbGFzc2VzIG9mIEZhbnRhIGFzIHRoZXkgYXRlLCBzbyB0aGV5IHdvdWxkbid0IGNob2tlLiIgVml2aWQsIGFuZCBob3JyaWZ5aW5nLCBhbmQgY2xldmVybHkgaW4gaGFybW9ueSB3aXRoIHRoZSBwcmluY2lwYWwgdGhlbWUgICB0aGUgY29ycHNlIG9mIHRoZSBjaGlja2VuIGEgbmF1c2VhdGluZyByZW1pbmRlciBvZiBpbmNvbXBhdGlibGUgdmFsdWVzLCBvZiBjb21mb3J0IGFuZCBkZXNwZXJhdGlvbiwgZXhjZXNzIGFuZCBuZWVkLiBMb3Vpc2UgZXhhY3RzIGEgcGV0dHkgcmV2ZW5nZSBhZ2FpbnN0IE15cmlhbSBmb3IgaGVyIHByaXZpbGVnZS4gCkxlcyBhdHRlaW50ZXMgYXUgY29ycHMgc2FucyBsZSBjb25zZW50ZW1lbnQgZGUgbGEgcGVyc29ubmUgOiBlbiBwcmluY2lwZSwgZWxsZXMgc29udCBpbGxpY2l0ZXMgOiBzYW5jdGlvbiBkZXMgYXR0ZWludGVzIGNvcnBvcmVsbGVzIHRlbGxlcyBxdWUgbGVzIHZpb2xlbmNlcyA7IGludGVyZGljdGlvbiBkZXMgcHJsdmVtZW50cyBzdXIgdW5lIHBlcnNvbm5lIHZpdmFudGUgbidheWFudCBwYXMgY29uc2VudGllIDsgaW50ZXJkaWN0aW9uIGRlcyBpbnRlcnZlbnRpb25zIHRocmFwZXV0aXF1ZXMgbm9uIGNvbnNlbnRpZXMuIApJIGRvbiBqdXN0IHNpdCBpbiB0aGUgb2ZmaWNlIGFuZCBsb29rIGF0IGFwcGxpY2F0aW9ucyBhbGwgZGF5LiBJIGhhdmUgYSBidXNpbmVzcyB0byBydW4uLiAKU3VkZGVubHksIHRoZXJlIHdhcyBhIG5ldyBnaXJsIGJlaW5nIGFkdmVydGlzZWQgYXMgR0ZFLiBJIGZvdW5kIHRoYXQgR0ZFIHN0b29kIGZvciBHaXJsZnJpZW5kIEV4cGVyaWVuY2UgYW5kIHRoYXQgdXN1YWxseSBtZWFudCBCQkJKIHdhcyBwcm92aWRlZC4gSSB3ZW50IHRvIHNlZSB0aGlzIGdpcmwsIGFuZCB5ZXMsIHNoZSBnYXZlIG1lIGEgQkJCSi4gVGhpcyBnaXJsIHdhcyBibGFjayBoYWlyZWQgYW5kIHBhbGUgc2tpbm5lZCwgYW5kIEkgZGlkIG5vdCBpbml0aWFsbHkgZmluZCBoZXIgdGhhdCBhdHRyYWN0aXZlLiBIb3dldmVyLCBzaGUgd2FzIHZlcnkgc3dlZXQgYW5kIEkgYmVnYW4gdG8gc2VlIGhlciBvbiBhIHdlZWtseSBiYXNpcy4gRXZlbnR1YWxseSB3ZSBleGNoYW5nZWQgbnVtYmVycy4KQSBkcmFnb24ncyBwb2ludCBvZiB2aWV3IEkgbG9vayBhdCBkaWdpdGFsIGRlYWxzLCBJIGxvb2tpbmcgZm9yIHBlb3BsZSB3aG8gdW5kZXJzdGFuZCB0aGUgY29zdCBvZiBhY3F1aXNpdGlvbiwgd2hvIGFyZSBmYXIgZW5vdWdoIGFsb25nIHRoYXQgdGhleSB1bmRlcnN0YW5kIHdoYXQgYSBjdXN0b21lciBpcyB3b3J0aCB0byB0aGVtIGFuZCB0aGF0IHRoZXJlIGlzIGVub3VnaCBvZiBhIGdhcCBiZXR3ZWVuIHRoZSBjb3N0IGFuZCBzYWxlcyBnZW5lcmF0ZWQgdGhhdCBpdCBtYWtlcyBzZW5zZSBhcyBhbiBpbnZlc3RtZW50LCBNci4gQ3JveG9uIHNhaWQuLiAKV29tZW4gcHJvdGVzdGluZyBhZ2FpbnN0IHRoZSAxOTY4IE1pc3MgQW1lcmljYSBjb250ZXN0IGluIE5ldyBZb3JrIGRpZCB0b3NzIHNldmVyYWwgaXRlbXMgaW50byBhIHRyYXNoIGNhbiwgaW5jbHVkaW5nIGJyYXMsIGdpcmRsZXMsIGhpZ2ggaGVlbGVkIHNob2VzIGFuZCB3b21lbidzIG1hZ2F6aW5lcywgbGFiZWxpbmcgdGhlbSAiaW5zdHJ1bWVudHMgb2YgdG9ydHVyZS4iIEJ1dCBubyBmaXJlIHdhcyBpbnZvbHZlZCwgZXhjZXB0IGZvciB0aGUgZmlyZSBvZiBidXJuaW5nIGZlbWluaW5lIHJhZ2UuIApFZGl0OiBBbG1vc3QgZXZlcnlvbmUgd2hvIGRpZXMgaW4gYSBmaWdodCBkb2VzIHNvIGR1ZSB0byBzaWduaWZpY2FudCBpbXBhY3Qgb24gdGhlaXIgc2t1bGwgZnJvbSBjb25jcmV0ZS4gQ29uY3JldGUgaXMgbm90IGEgZm9yZ2l2aW5nIHN1cmZhY2UuIERvZXNuIHRha2UgYSBnZW5pdXMgdG8gZmlndXJlIG91dCB3aGVuIHNvbWVvbmUgZXhwZXJpZW5jZXMgYSBzaWduaWZpY2FudCBicmFpbiBpbmp1cnkuIEVzcGVjaWFsbHkgd2hlbiB0aGV5IGtub2NrZWQgdW5jb25zY2lvdXMgdmlhIGhlYWQgc2xhbSBvbnRvIGNvbmNyZXRlLiBBcyB0aGUgb2ZmaWNpYWwgSW50ZXJuZXQgRG9jdG9yIG9mIHRoaXMgdGhyZWFkLCBJIGFtIGRpYWdub3NpbmcgYWxsIG9mIHlvdSBkb3dudm90ZXJzIHdpdGggbW9kZXJhdGUgc2V2ZXJlIGF1dGlzbS4KVGhleSBub3QgcmVsZXZhbnQgdG8gbXkgcG9pbnQuIEkgbmV2ZXIgY2xhaW1lZCB0byBrbm93IGhpcyBiZWxpZWZzLCBiZWNhdXNlIGluIHRoaXMgc2luZ2xlIGFzcGVjdCwgdGhleSBkb24gbWF0dGVyLiAKQWxzbyBmYWxzZS4gSSBjYXJlIGFib3V0IGFuaW1hbCB3ZWxiZWluZy4gVGhhdCBkb2VzbiBtZWFuIEkgaGF2ZSB0byBiZSBhIHZlZ2FuLiBUaGVyZSBhcmUgc29tZSBudWFuY2VzIHZlZ2FucyBhcmUgb2Z0ZW4gbWlzc2luZywgdGhpcyBiZWluZyBvbmUgb2YgdGhlbS4gSSBjYW4gc3VwcG9ydCBhbmltYWwgd2VsZmFyZSBkdXJpbmcgdGhlaXIgbGlmZSBhbmQgYSBwYWluIGZyZWUgbWV0aG9kIG9mIHNsYXVnaHRlciwgdGhpcyBiZWluZyBhbiBldGhpY2FsIGNob2ljZS4gSGVsbCwgSSBiZWxpZXZlIGl0IG1vcmUgZXRoaWNhbCB0byBoYXZlIG1vcmUgY293cyB3aXRoIHByb3BlciBsaWZlcyBiZWluZyBicmVkIGZvciBtZWF0IGNvbnN1bXB0aW9uLCB0aGFuIGxlc3MgY293cyBiZWluZyBicmVkIGF0IGFsbC4KWW91IGFyZSBhIGdpYW50IGluIG15IHdvcmxkLiBZb3UgYWxzbyBsb29rIGxpa2UgSGVydmUgVmlsY2hleiBkb2luZyB0aHVnIGxpZmUuIApZb3UgY2Fubm90IHBsYXkgdGhpcyBkYW5nZXJvdXMgZ2FtZSBhbnltb3JlLiAKVGhhdCBjaGFwdGVyIGhhdW50ZWQgRGVzbW9uZC4gU2hlIGRpdm9yY2VkLCBzaHV0IGRvd24gaGVyIGJ1c2luZXNzIGFuZCBtb3ZlZCBhd2F5IGZvcm0gTm92YSBTY290aWEgc2Vla2luZyBuZXcgb3Bwb3J0dW5pdGllcyBhbmQgYSBmcmVzaCBzdGFydC4gSW4gMTk2NSBzaGUgZGllZCBhbG9uZSBpbiB0aGUgVVNBIGF0IDUwLiBJbiAyMDEwIHNoZSByZWNlaXZlZCBhIHBvc3RodW1vdXMgYXBvbG9neS4gQWNjb2xhZGVzIGZvbGxvd2VkLCBhIHBvc3RhZ2Ugc3RhbXAsIGEgSGFsaWZheCBUcmFuc2l0IGZlcnJ5IG5hbWVkIGFmdGVyIGhlciBwbHVzIGEgc3RhciBvbiBDYW5hZGEgV2FsayBvZiBGYW1lLiBCbGFjayBIaXN0b3J5IE1vbnRoLCB3aGljaCBqdXN0IGZpbmlzaGVkLCBzaG93ZWQgcHJpZGUgaW4gQ2FuYWRhIHByb2dyZXNzIGZvciB2aW5kaWNhdGluZyBDaXZpbCBSaWdodHMgUGlvbmVlciBWaW9sYSBEZXNtb25kLgpDZWFzZSB3b3JrIGltbWVkaWF0ZWx5IGFuZCBlbnN1cmUgdGhhdCBvdGhlciBwZW9wbGUgd29ya2luZyBpbiB0aGUgYXJlYSBhcmUgbm90aWZpZWQgb2YgYSBwb3NzaWJsZSByaXNrIChvciBub3RpZnkgdGhlIFN1cGVydmlzb3IgdG8gcGFzcyB0aGlzIGluZm9ybWF0aW9uIG9uIHRvIG90aGVycykuIENvbnRhY3QgdGhlIENhbXB1cyBTZXJ2aWNlcyBNYWludGVuYW5jZSBTZXJ2aWNlIENlbnRyZSwgd2hvIHdpbGwgY2hlY2sgdGhlIGFzYmVzdG9zIHJlZ2lzdGVyLiBJZiBub3QgcmVnaXN0ZXJlZCwgdGhlbiB0aGUgVW5pdmVyc2l0eSBsaWNlbnNlZCBhc2Jlc3RvcyBzZXJ2aWNlIHByb3ZpZGVyIHdpbGwgYmUgY29udGFjdGVkIHRvIHVuZGVydGFrZSBhbiBhbmFseXNpcyBhbmQvb3IgYWlyIG1vbml0b3JpbmcgYXMgYXBwbGljYWJsZS4gSWYgY29uZmlybWVkLCB0aGVuIGNvcnJlY3RpdmUgYWN0aW9uIHdpbGwgYmUgdGFrZW4gdG8gZWxpbWluYXRlIHRoZSByaXNrIG9mIGV4cG9zdXJlIGFuZCB0aGUgYXNiZXN0b3MgcmVnaXN0ZXIgdXBkYXRlZCBhY2NvcmRpbmdseS4KQW55d2F5LCBpZiB3ZSB1c2Ugc3BlY2lhbCBpbW1lcnNpb24gb2lsIGluc3RlYWQgb2YgYWlyLCB0aGVyZSBhIG1heGltdW0gbnVtZXJpY2FsIGFwZXJ0dXJlIG9mIGFib3V0IDEuNSwgYXNzdW1pbmcgd2UgYXJlIGFibGUgdG8gYnVpbGQgYSBsZW5zIHRoYXQgY2FwdHVyZXMganVzdCBhYm91dCBhbGwgdGhlIGxpZ2h0IGNvbWluZyBvZmYgdGhlIG9iamVjdC4KQXZvaWRpbmcgcm9tYW5jZSBpbiB0aGUgVVMgYXQgdGhpcyBwb2ludCBpbiB0aW1lIGlzIGEgYml0IGxpa2UgYXZvaWRpbmcgdGF4ZXMuIGdvdmVybm1lbnQgZ3JhbnRzIHVzIHJpZ2h0cyBhbmQgcHJpdmlsZWdlcyBiYXNlZCBvbiBtYXJpdGFsIHN0YXR1cyAob3ZlciBhIDEsMDAwIG9mIHRoZW0pLiBHYXkgYW5kIGxlc2JpYW4gQW1lcmljYW5zLCBhdCBsZWFzdCB0aGUgb25lcyB3aG8gYXJlIHByaW1hcmlseSB3aGl0ZSBhbmQgZWR1Y2F0ZWQgdGhlbXNlbHZlcywgZmlnaHQgYml0dGVybHkgZm9yIHRoZSAicmlnaHQiIHRvIG1hcnJ5LiBvZiBvdXIgY3VsdHVyZSBpcyBvYnNlc3NlZCB3aXRoICJ0cnVlIGxvdmUiIGFuZCAiaGFwcGlseSBldmVyIGFmdGVyLiIgQW5kIHNvLCBldmVuIHRob3VnaCBtb3N0IEFtZXJpY2FucyBhcmUgaW4gZmFjdCB1bm1hcnJpZWQsIHRob3NlIG9mIHVzIHdobyBhcmUgcGFydCBvZiB0aGUgcnVsaW5nIHJvbWFudGljIGVsaXRlICBvciBhdCBsZWFzdCB3b3VsZCBsaWtlIHRvIGJlICBkbyB3aGF0IGV2ZXJ5b25lIGlzIHN1cHBvc2VkIHRvIGRvOgpJIG11c3Qgc2F5LCBpdCdzIHJlYWxseSBydWluaW5nIG15IHBva2VyIGdhbWUuLiAKU3RpbGwgb3RoZXIgc3R1ZGllcyBzdXBwb3J0IHRoZSBHZXJtYW4gY29uY2x1c2lvbi4gV2hvIGFyZSB3ZSB0byBiZWxpZXZlPy4gCjQuICJIZW5jZSBpdCBpcyBjcnVjaWFsIGluIGlkZW50aWZ5IGNvbXBvdW5kcyB0aGF0IG1heSBoYXZlIHRoZSBwb3RlbnRpYWwgdG8gcHJldmVudCB0aGUgcHJvZ3Jlc3Npb24gb2YgdGhlIGRpc2Vhc2UgdG8gaG9ybW9uZSBpbmRlcGVuZGVuY2UuIgpJIGNvbXBsZXRlbHkgdW5kZXJzdGFuZCB0aGUgc2VsbGVyIG1ha2VzIHRoZSBmaW5hbCBjYWxsLCBhbmQgdGhleSBtYXkgdmVyeSB3ZWxsIGJlIHRoZSBvbmUgc3RhbGxpbmcuIE5ldmVydGhlbGVzcywgd2hldGhlciBpdCBiZSB0aGUgcmVhbHRvciBvciB0aGUgc2VsbGVyLCBteSBvcmlnaW5hbCBxdWVzdGlvbiBkb2Vzbid0IGNoYW5nZS4gV2hlbiB5b3Ugc3RhdGVkIGluIHlvdXIgcmVzcG9uc2UgdGhhdCAibGlzdGluZyBhZ2VudCBrZWVwcyBtYWtpbmcgZXhjdXNlcywgZXhwbGFpbmluZyB0aGUgc2VsbGVyIGlzIGJ1c3kgYW5kIHRyYXZlbHMgYSBsb3QsIGhlbmNlIHRoZSBkZWxheSBpbiByZXBvbnNlLiBTaGUncyBhcHBhcmVudGx5IGhhdmluZyBhICJoYXJkIHRpbWUsIiBnZXR0aW5nIGFob2xkIG9mIGhpbSIsIEkgaGF2ZSBteSBhZ2VudHMgdGhhdCByZXAgbWUgc29tZXRpbWVzIHNheSB0aGUgc2FtZSBleGFjdCB0aGluZyB0byB0aGUgYnV5ZXJzIGFnZW50IHdoZW4gSSB3YW50IHRvIHdhaXQgYW5kIHNlZSBpZiBvdGhlciBvZmZlcnMgYXJlIGdvaW5nIHRvIGNvbWUgaW4gZm9yIHRoZSBwcm9wZXJ0eS4gV2UgaGF2ZSB0aGUgYWdlbnRzIHNheSB0aGF0IHdlIGFyZSBvdXQgb2YgdG93biBvbiBidXNpbmVzcyBvciBvdXQgb2YgdGhlIGNvdW50cnkgc29tZXRpbWVzIGp1c3QgZm9yIGRlbGF5cy4KU2hlIGdvaW5nIHRvIHNlbmQgd29ya2VycyBpbnRvIGV2ZXJ5IGhvbWUgYW5kIHJlcGxhY2UgZXZlcnkgc2luZ2xlIGZ1cm5hY2UgYW5kIGhvdCB3YXRlciBoZWF0ZXIgaW4gdGhlIGVudGlyZSB1bml0ZWQgc3RhdGVzIHRvIGJlY29tZSBlbGVjdHJpYy4gVGhlbiwgc2hlIGdvaW5nIHRvIGJhbiBhbGwgYnVybmluZyBvZiB3b29kIGZvciBoZWF0aW5nIG9yIGNvb2tpbmcuIEF0IHRoZSBzYW1lIHRpbWUgc2hlIGNvbnZlcnQgdGhlIDYzLjUlIG9mIGZvc3NpbCBmdWVsIGVuZXJneSBwcm9kdWN0aW9uIGluIHRoZSBVUyB0byByZW5ld2FibGVzLiBBbHNvLCB3ZSBuZWVkIHRvIGNvbnZlcnQgZXZlcnkgc2luZ2xlIHRoaW5nIHRoYXQgdXNlcyBmdWVsLCBsaWtlIGNhcnMsIGJvYXRzLCBhaXJwbGFuZXMsIG92ZW5zLCBsYW50ZXJucywgY2FtcCBzdG92ZXMsIGZ1cm5hY2VzIGZvciBtZXRhbCBwcm9kdWN0aW9uLCBldGMuIHRvIHJlbmV3YWJsZSBlbGVjdHJpY2l0eS4KVGhlIHBlYSBodWxsZXIgYXQgdGhpcyBwbGFjZSwgd2hpY2ggaXMgcnVuIGJ5IHRoZSBBc3BlcnMgQ2FubmluZyBDb20gIHBhbnksIGlzIGluIGZ1bGwgb3BlcmF0aW9uIGFuZCB0aGUgZmFybWVycyBhcmUgYnVzeSBoYXJ2ZXN0aW5nIHBlYXMgd2hpY2ggc2VlbSB0byBiZSBhIGdvb2QgY3JvcCB1bmRlciB0aGUgdW5mYXZvcmFibGUgd2VhdGhlciBjb25kaXRpb25zLiAKSSBrbm93IDIwMTkgaXMgYSBGb29sIEhvcGUsIGJ1dCBJIGFtIGhvcGluZyBvbiB0aGF0IEZvb2wgSG9wZS4gSG93ZXZlciwgSSBrbm93IGl0IGlzIG1vcmUgbGlrZWx5IGEgcGlwZSBkcmVhbSB0aGFuIHJlYWxpdHkuIEkgdGhpbmsgMjAyMCBpcyBtdWNoIG1vcmUgbGlrZWx5IChhbmQgZGVzcGl0ZSBldmVyeXRoaW5nIEkgYmxhbWUgdGhpcyBvbiBGTzc2KS4gTXkgb3Zlcmx5IHJlYWxpc3RpYyBjaG9pY2UgaXMgaXQgd2lsbCBiZSBuZXh0IGdlbi4gSXQgd2lsbCBjb21lIG91dCBuZXh0IGdlbiBvbmNlIHdlIGhhdmUgYm90aCB0aGUgbmV3IFBsYXlTdGF0aW9uIGFuZCBYQk9Yd2hhdGV2ZXIgd2hpY2ggaXMgcHJvYmFibHkgMjAyMC8yMS4gVGhlIHBlc3NpbWlzdGljIGNob2ljZSBpcyBpdCB3aWxsIGJlIGVpdGhlciAyMDIyIG9yIDIwMjMgb3IgMjAyNCAoYW5kIGFnYWluIEkgYmxhbWUgRk83NiEgSSBzZWUgdGhhdCBnYW1lIGFzIG5vdGhpbmcgYnV0IGEgd2FzdGUgb2YgdGltZSBhbmQgbW9uZXkuIFNvcnJ5IHRvIHRob3NlIHRoYXQgbG92ZSBpdCBmb3Igd2hhdGV2ZXIgcmVhc29uKS4KSSBmZWVsIGxpa2UgdGhleSB3aWxsIHdhbnQgdG8gdGFsayBhYm91dCBpdCBsb25nZXIgdGhhbiB0aGV5IHdvdWxkIGEgbmV3IEZhbGxvdXQgb3IgRWxkZXIgU2Nyb2xscyBnYW1lLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVBYm91dCAkNTAgbWlsbGlvbiBpcyBmZWQgaW50byBwb2tlciBtYWNoaW5lcyBpbiB0aGUgU2hlbGxoYXJib3VyIHJlZ2lvbiBlYWNoIHllYXIuIENvdW5jaWxsb3IgUGV0ZXIgTW9yYW4gdGhpbmtzIHRoYXQgaXMgYSBtYXNzaXZlIGFtb3VudCBvZiBtb25leSBmb3Igb25seSBhIHJlbGF0aXZlbHkgc21hbGwgY2l0eS4gU28gaGUgd2FudHMgdG8gY2hhbmdlIHRoYXQgc3RhdGlzdGljLiAKR29kIGRhbW4gdGhhdCBzb3VuZHMgZGVwcmVzc2luZy4gCkkgY2FuJ3Qgc3BlYWsgZm9yIGV2ZXJ5b25lIHRob3VnaC4gSSBtZWFuIEkgZG9uJ3QgcmVhbGx5IHNlZSB0aGUgaGFybSB0aGlzIG1vc3RseSBzb3VuZHMgbGlrZSB0aGUgc2FtZSBvbGQgInlvdSBkb24ndCBsaWtlIGdheSBwZW9wbGUiIHNwaWVsLiBJZiB5b3Ugd2FubmEgYmUgZ2F5IHRoZW4gYmUgZ2F5IGV2ZXJ5b25lIGRlc2VydmVzIHRvIGJlIHRyZWF0ZWQgcmVzcGVjdCBqdXN0IGRvbid0IGV4cGVjdCBtZSB0byBjb25kb25lIHlvdXIgbGlmZXN0eWxlIG9yIGFncmVlIHdpdGggaXQuLiAKVVNQUyB0YWtlcyBhYm91dCAyIDMgd2Vla3MsIGFuZCB5b3UgbmV2ZXIgcmVhbGx5IGtub3cgd2hlbiBpdCdsbCBnZXQgdGhlcmUgdW50aWwgaXQgYWN0dWFsbHkgZ2V0cyB0aGVyZS4KR2VuZXJhbGx5IHNwZWFraW5nLCBteSBndXQgcmVhY3Rpb24gd2FzIG5vdCB3cm9uZy4gCllvdSBoYXZlbiBwb2ludGVkIHRoYXQgb3V0IGFueXdoZXJlIHNvIGZhci4gWW91IHJhbnRlZCBhYm91dCBzb2NpYWxpc20uIFdoaWNoIGhhcyBub3RoaW5nIHRvIGRvIHdpdGggYW55b25lIGJlaW5nIGEgZGljdGF0b3IuCkkgcHJvYmFibHkgY291bGQgaGF2ZSBkb25lIHRoaXMgaW4gYSBmcmllbmRsaWVyIHdheS4gClRoZXNlIEN1c3RvbSBQb2tlciBDaGlwcyBhcmUgdGhlIGNoaXBzIHRoYXQgYXJlIGRlc2lnbmVkIGZvciBhbmQgZGlzdHJpYnV0ZWQgdG8gbW9zdCBvZiB0aGUgY2FzaW5vcyBpbiB0aGUgd29ybGQsIGFuZCB5b3Ugd2lsbCBmaW5kIHRoYXQgaXQgaXMgbWFkZSBvdXQgb2YgY2xheSBvZiBhbiBleGNlbGxlbnQgcXVhbGl0eS4gWW91IHdpbGwgZmluZCB0aGF0IGhhdmluZyB0aGUgcmlnaHQgY2hpcHMgaW4gaGFuZCBhcmUgYSBncmVhdCB3YXkgdG8gbWFrZSBzdXJlIHRoYXQgeW91ciBwbGF5ZXJzIGhhdmUgYSBncmVhdCB0aW1lLiBKdXN0IGhhbmRsaW5nIHRoZXNlIGNoaXBzIGFyZSBhIGpveSwgYW5kIHlvdSB3aWxsIGZpbmQgdGhhdCB0aGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgdGhpbmdzIHRoYXQgeW91IGNhbiBkbyB3aGVuIHlvdSBhcmUgbG9va2luZyB0byBtYWtlIHN1cmUgdGhhdCB5b3VyIGd1ZXN0cyBjb21lIGF3YXkgd2l0aCBhIG1lbW9yYWJsZSBlZXhwZXJpZW5jZS4KQnV0IGx1Y2tpbHkgdGhleSBhbGwgaGFkIGVhY2ggb3RoZXIgc3RyYWlnaHQgb3V0cyBzbyBldmVuIHRob3VnaCBpdCB3YXMgc2l4IHdheXMsIEkgd2FzIG9ubHkgZmFkaW5nIGEgMiBvdXRlciBmcm9tIGFuIG92ZXIgcGFpciwgYW5kIHByb2JhYmx5IG9ubHkgNCBvciA1IG90aGVyIGNhcmRzIHRvdGFsLiAKSXQgd2lsbCBkbyBtaXNzaW9ucywgZmlnaHRpbmcsIGJhbmtpbmcsIGhlYWxpbmcsIGFuZCBhbHNvIGNvbGxlY3QgYm91bnRpZXMgZm9yIHlvdSBhbGwgd2hpbGUgeW91IGFyZSBhdCB3b3JrIG9yIHNsZWVwaW5nIG9yIGp1c3QgdG8gYnVzeSB0byBzaXQgYXQgdGhlIGNvbXB1dGVyLiAKSSB0aGluayBoaXMgZ2FtZSBoZXJlIHdhcyB0byBnaXZlIHRoZSBhZ2VudHMgd2hhdCB0aGV5IHdhbnRlZCAgIG1vcmUgaW5mb3JtYXRpb24gdG8gZGVhbCB3aXRoIGZ1dHVyZSBDaHJpcyBXYXR0ZXMgYW5kIHRoZSBjaGFuY2UgdG8gZG8gc29tZXRoaW5nIGVsc2Ugb3RoZXIgdGhhbiBzdGFyZSBhdCB0aGUgY2VsbCB3YWxscy4gQWdlbnRzIHdlcmUgc3RlbGxhciBhbmQgZGV2ZWxvcGVkIGEgZ29vZCByYXBwb3J0IHdpdGggQ2hyaXMgc28gdGhleSBjb3VsZCBnZXQgaGltIHRvIGRpdnVsZ2UgbW9yZS4gUHJpc29uIGlzIGJvcmluZyBBRiAgZ2V0dGluZyB0byBzcGVuZCB0aGUgZGF5IG5vdCBpbnNpZGUgeW91ciBjZWxsIGlzIGEgcmFyaXR5LCBoZSBwcm9iYWJseSBoYXNuIHRhbGtlZCB0byBhbnlvbmUgYWJvdXQgdGhpcyBpbiB0aGlzIGFtb3VudCBvZiBkZXRhaWwgc2luY2UgaGUgaGFzIGJlZW4gbG9ja2VkIHVwIGFuZCBsaWtlIG9uZSBvZiB0aGUgYWdlbnRzIHNhaWQgaXQgd2FzIG1vc3QgbGlrZWx5IHRoZXJhcGV1dGljIGZvciBoaW0gYW5kIGxhc3RseSBpZiBoZSBpcyBpbiB0aGUgZ29vZCBncmFjZXMgb2YgdGhlIEZCSSwgaXQgd2lsbCBiZSBlYXNpZXIgZm9yIGhpbSB0byB0cmFuc2ZlciBwcmlzb25zIGluIHRoZSBmdXR1cmUgKGZvciBleGFtcGxlIGFza2luZyB0byBiZSBtb3ZlZCB0byBvbmUgY2xvc2VyIHRvIE5DIGluIHRoZSBmdXR1cmUgdG8gYmUgbmVhciBoaXMgcGFyZW50cykuClRBRyBzaG91bGQgYmUgZmluZSwgcGxheSB5b3VyIGJpZyBoYW5kcyBhbmQgYmV0IGZvciB2YWx1ZSB1bnRpbCB5b3Ugc2VlIHNwb3RzIHdoZXJlIHlvdSBjYW4gb3BlbiB1cCB5b3VyIGdhbWUgYSBsaXR0bGUuIElmIGxvc2luZyA1MCBidWNrcyBpcyBhIHNjYXJ5IHByb3Bvc2l0aW9uIHRvIHlvdSBhbmQgeW91J3JlIGdvaW5nIHRvIHR1cm4gaW50byBhIHJvY2sgeW91IHByb2JhYmx5IHNob3VsZG4ndCBiZSBwbGF5aW5nIGluIHRoZSBnYW1lLgpIZSBkZWFsdCB3aXRoIHRoZSBkZWF0aCBvZiBhIGJlbG92ZWQgdW5jbGUuIFRoZSBlbmQgb2YgYSAxMyB5ZWFyIHJlbGF0aW9uc2hpcC4gU2VyaW91cyBpbGxuZXNzZXMgaW4gaGlzIGZhbWlseS4uIApXcmRlIG1pciBqYSBnZXJuIGVpbmJpbGRlbiwgZGFzcyB3aXIgc29sY2hlIE1hbmFobWVuIG5pY2h0IGhpbm5laG1lbiB3cmRlbiBhYmVyIGtlbm5lIGxlaWRlciBMZXV0ZSwgZGllIHNvIGVpbiBTeXN0ZW0gc29nYXIgYmVncmVuIHdyZGVuLktyaW1pbmVsbGUgd2VyZGVuIGRvY2ggb2huZWhpbiBiZXN0cmFmdCB1bmQgaW53aWVmZXJuIGVzIGlyZ2VuZHdpZSBnZXJlY2h0IHNlaW4gc29sbCwgS2luZGVyIHdlZ2VuIGRlcyBWZXJoYWx0ZW5zIGlocmVyIEVsdGVybiBrZWluZSBndXRlbiBTY2h1bGVuIGJlc3VjaGVuIHp1IGxhc3NlbiBpc3QgbWlyIHVuYmVncmVpZmxpY2guLiAKV2hlbiBzaGUgcGxheXMsIHNoZSB3ZWFycyBhIGJsdWUgY2FwIHRoYXQgc2F5cyBUT1AgR1VOIGFuZCBzbW9rZXMgbG9uZywgc2tpbm55IGNpZ2Fycy4gQWxsIHlvdSBjYW4gc2VlIGlzIGhlciBsaXR0bGUsIHN0cmFpZ2h0IGFjcm9zcyBtb3V0aCB1bmRlciB0aGUgcGVhayBvZiB0aGUgY2FwLCBhbmQgdGhhdCBldmlsIHNtb2tlIGN1cmxpbmcgdXAuLiAKVHJhY2tzaWRlLCBTb3V0aGxhbmQgcmFjaW5nIGRpcmVjdG9yIFNoYW5lIEJvbGVuZGVyIHdhcyBnaXZpbmcgYSB0YWxrIHRvIGFib3V0IDIwIG5ldyBoaXJlcyBTb3V0aGxhbmQgZW1wbG95cyBhcm91bmQgNTAwIHBlb3BsZSBhYm91dCBncmV5aG91bmRzLiBIZXJlJ3Mgd2hhdCB0aGV5IGxlYXJuZWQ6IEl0IGlzIHRoZSBncmV5aG91bmQncyBuYXR1cmUgdG8gcnVuOyB0aGV5IGNhbiByZWFjaCBhIHNwZWVkIG9mIHVwIHRvIDQwIG1pbGVzIHBlciBob3VyIChvbmx5IHRoZSBjaGVldGFoIGNhbiBnbyBmYXN0ZXIpLiAKQnJlYWthd2F5IGdsYXNzLCBhbHNvIGtub3duIGFzIHN1Z2FyIG9yIGNhbmR5IGdsYXNzLCBpcyBhbiBlYXN5IHRvIHNoYXR0ZXIgc3Vic3RpdHV0ZSBmb3IgcmVhbCBnbGFzcy4gClRoYXQncyBtb3JlIHdoeSBJJ20gZW1vdGlvbmFsIHRoYW4gYW55dGhpbmcuIApWaWRlbW1lbnQsIGNlIGJvZ3VlIGRlIGxhIHBzeWNoIGh1bWFpbmUgcGVybWV0IGF1eCBlbmZpcm91YXBldXJzIGQnYWxsZXIgIGxhIHBjaGUuIApUaGUgc2Vjb25kIGVpZ2h0IGNvdW50cyBhcmUgbW9yZSBleHBsb3NpdmUgYmVjYXVzZSB0aGV5IGluY2x1ZGUgdHdvIHRoaW5ncyB0aGF0IGhlbHBlZCBwcm9wZWwgdGhlIGluY2lkZW50IGludG8gYW4gaW50ZXJuYXRpb25hbCBzZW5zYXRpb24uIFRoZSBmaXJzdCBpcyB0aGF0IGJ5IHRoZSB0aW1lIGhlIHRhbGtlZCB0byB0aGUgZGV0ZWN0aXZlLCBTbW9sbGV0dCBzYWlkIGhlIGNvdWxkIHNlZSB0aHJvdWdoIHRoZSBleWUgaG9sZXMgb2Ygb25lIGF0dGFja2VyIG1hc2sgdGhhdCBoZSB3YXMgYSB3aGl0ZSBtYW4uIFRoZSB0d28gYnJvdGhlcnMgd2hvIGFsbGVnZWRseSBwYXJ0aWNpcGF0ZWQgYXJlIGJsYWNrLgpIZSBkZWxldGVkIHByb3h5IHJlc3VsdHMgdGhhdCBkaWQgbm90IGFncmVlIHdpdGggdGhlIGdsb2JhbCB3YXJtaW5nIHNjZW5hcmlvIGhlIHdhbnRlZCB0byBwcmVzZW50LiBJbiBzaG9ydCBoZSBjb3JydXB0ZWQgdGhlIGVudGlyZSBzdHVkeSB0aGF0IHdhcyBhdHRlbXB0ZWQgYnkgTWFubi4gCk5vbmUgb2YgdGhlIGluY2x1ZGVkIHN0dWRpZXMgcmVwb3J0ZWQgc2VyaW91cyBzaWRlIGVmZmVjdHMsIHN1Y2ggYXMgdmVydGVicm9iYXNpbGFyIGFjY2lkZW50cywgd2l0aCBTTVRTTVQgbWF5IGJlIGJldHRlciB0aGFuIG1hc3NhZ2UgZm9yIGNlcnZpY29nZW5pYyBoZWFkYWNoZSBhbmQgbWF5IGJlIG9mIHNpbWlsYXIgYmVuZWZpdCB0byBwcmVzY3JpcHRpb24gZHJ1Z3MgZm9yIHRlbnNpb24gdHlwZSBoZWFkYWNoZXMgYW5kIG1pZ3JhaW5lLiBQYXJ0aWNpcGFudHMgd2l0aCBjaHJvbmljIGhlYWRhY2hlIHdlcmUgZWxpZ2libGUsIGJ1dCB0aGUgY3JpdGVyaWEgZm9yIHRoaXMgZ3JvdXAgd2VyZSBicm9hZGx5IGRlZmluZWQuIFRoZSBpbmNsdXNpb24gY3JpdGVyaWEgd2VyZSBub3QgZGVmaW5lZCBpbiB0ZXJtcyBvZiBvdXRjb21lcywgYnV0IHRoZSBwcmVmZXJyZWQgcHJpbWFyeSBvdXRjb21lcyBmb3IgdXNlIHRoZSByZXZpZXcgd2VyZSBzdGF0ZWQuIApEaXJ0eSBCb3VyYm9uIHN0b3BwZWQgYXQgdGhlIEdhcmFnZSBkdXJpbmcgYSBmb3VyIG1vbnRoIHRvdXIgaW4gc3VwcG9ydCBvZiB0aGUgYWxidW0gSW1wb3J0YW50IFRoaW5ncyBIdW1hbnMgU2hvdWxkIEtub3csIHdoaWNoIHdhcyByZWxlYXNlZCBpbiBBcHJpbC4KSWYgd2UgcmVhbGx5IHdhbnQgdG8gZ2V0IGludG8gaXQsIHRoZSByYW5rcyB0aGVtc2VsdmVzLCB3aGljaCBpcyB3aGF0IEkgd2FzIG9yaWdpbmFsbHkgcmVmZXJyaW5nIHRvLCBpcyBzdGlsbCBhIGRvdWJseSBsaW5rZWQgbGlzdDsgcmFuayAxIChLaW5nKSBpbnRlcmFjdHMgd2l0aCByYW5rIDIgKGxldCBzYXksIDMgQmFyb25zKSwgd2hpY2ggaW50ZXJhY3RzIHdpdGggcmFuayAzIChvbmNlIGFnYWluLCBsZXQganVzdCBzYXkgMzAwIHBlYXNhbnRzKSBhbmQgYWxsIG9mIHRoaXMgaW4gcmV2ZXJzZS4gQmVmb3JlIHlvdSB0aGluayBJIGRydW5rLCBJIHNheWluZyB0aGUgYWJzdHJhY3Rpb24gd2UgY2FsbCByYW5rcywgbm90IHRoZSBtZW1iZXJzIG9mIHRoZSByYW5rIG1lbnRpb25lZCwgZm9ybSB0aGUgZG91Ymx5IGxpbmtlZCBsaXN0LiBJdCBpcyB0aGUgcGVvcGxlIGhlcmUsIHRoZSBtZW1iZXJzIG9mIHRoZXNlIHJhbmtzLCB0aGF0IGZvcm0gYSB0cmVlLCBhbHRob3VnaCBJIGFzc3VtZSB0aGF0IHRoZSBub2RlcyBhdCBhIGNlcnRhaW4gcmFuayBhbHNvIGludGVyZmFjZSB3aXRoIGVhY2ggb3RoZXIgYXQgdGltZXMgKGllLCB0aGVpciBicm90aGVyIGFuZCBzaXN0ZXIgbm9kZXMpICwgYW5kIHdpdGggdGhlaXIgbmllY2UgYW5kIG5lcGhldyBub2RlcyAoaWUsIGlmIGxheWVyIDIgaXMgdGhlIEJhcm9ucywgYW5kIEJhcm9uIDEgd2F0Y2hlcyBvdmVyIDEwMCBwZWFzYW50cyBhbmQgQmFyb24gMiB0aGUgb3RoZXIgMTAwIGFuZCBzbyBvbiwgaXQgaXMgcG9zc2libGUgdGhhdCBzb21ldGltZXMgYSBncm91cCBvZiBwZWFzYW50cyBoYWQgdG8gaW50ZXJmYWNlIHdpdGggYW4gdW5jbGUgYmFyb24gZm9yIHByb2JsZW1zIGRpcmVjdGx5LiBNYXliZSBub3QgdGhvdWdoLCBmdWNrIGlmIEkga25vdykuIFRoZSBwZWFzYW50cyBhdCB0aGUgdmVyeSBsZWFzdCBpbnRlcmZhY2VzIGRpcmVjdGx5IHdpdGggdGhlaXIgYnJvdGhlciBhbmQgc2lzdGVyIG5vZGVzIC4gZXNwZWNpYWxseSBpZiB0aGV5IHdlcmUsIHdlbGwsIGJyb3RoZXIgYW5kIHNpc3Rlci4gSSBhbSBkcnVuay4gQW55d2F5cywgaWYgeW91IGFkZCBlZGdlcyBiZXR3ZWVuIGJyb3RoZXIgYW5kIHNpc3RlciBub2RlcyBhdCBhbGwgb3Igc29tZSBsZXZlbHMgaW4gYSB0cmVlLCBJIGRvbiBrbm93IHdoYXQgdGhlIGdyYXBoIHdvdWxkIGJlIGRlc2NyaWJlZCBhcy4gTWF5YmUgdGlzIHRoZW4gYnV0IGEgZ3JhcGgsIG1heWJlIGl0cyBiZWNvbWUgYSBzcGVjaWFsIGtpbmQgb2YgdHJlZSwgb3IgbWF5YmUgaXRzIHN0aWxsIGEgbm9ybWFsIHRyZWUgd2l0aCBleHRyYSBzdGVwcy4KVW4gdHJzIHN5bXBhdGhpcXVlIHNvaXJlIGF0ZWxpZXIgY2hleiBCZWVuZGhpLCBhdmVjIHVuIGF0ZWxpZXIgZGUgY3Vpc2luZSBlbnRyIHBsYXQgZGVzc2VydCBhdmVjIEJlZW5hIFBhcmFkaW4sIHVuIG1hc3NhZ2UgYXl1cnZkaXF1ZSwgZXQsIHBvdXIgY2VydGFpbnMsIHVuIGF0ZWxpZXIgeW9nYSAuIApBIHBhcnRpYWwgY291bnRlciB0byBiZWluZyBvdXRmbGFua2VkIGlzIHRvIHBpbndoZWVsIGhhcmQgdG8gY291bnRlciB0aGUgb3V0ZmxhbmtlcnMsIHNvbWV0aW1lcyBhdWdtZW50ZWQgd2l0aCBKSi4gCkFkZHJlc3MgMy81IFNvaSBLYXNlbSxTdWtodW12aXQgU29pIDI0CldldCBncm91bmQgYWxzbyBoYXMgbW9yZSBjb25kdWN0aXZpdHkgYW5kIHlvdSB3aWxsIGJlIGFibGUgdG8gZmluZCBpdGVtcyB0aGF0IGFyZSBkZWVwZXIgdGhhbiBpZiB0aGUgZ3JvdW5kIHdlcmUgZHJ5LiAKIklmIHRoYXQgd2VyZSByZWFsbHkgYWxsLCBJIHdvdWxkbid0IG1pbmQsIENhcHRhaW4gSmltLiBJIHdvdWxkIHVuZGVyc3RhbmQuIEJ1dCB0aGVyZSBhcmUgdGltZXMgbm90IGFsd2F5cywgYnV0IG5vdyBhbmQgYWdhaW4gIHdoZW4gSSBhbG1vc3QgaGF2ZSB0byBiZWxpZXZlIHRoYXQgTGVzbGllIGRvZXNuJ3QgZG9lc24ndCBsaWtlIG1lLiAKVGhleSBjYW4gYWRkIHBvcHMgb2YgY29sb3VyIGFuZCB0ZXh0dXJlIHRvIGEgc3BhY2UuIApUaGlzIGlzIG15IHN0YW5kYXJkIGxpc3Qgb2YgaXRzICJwcm9zIiB0aGF0IHdpbGwgZXZlbnR1YWxseSBsZWFkIHRvIGFkb3B0aW9uOkRlY2VudHJhbGlzZWQsIGJvdGggaW4gZGVzaWduLCBhbmQgaW4gb3BlcmF0aW9uLCBhbmQgYmVjb21pbmcgaW5jcmVhc2luZ2x5IHNvU2NhbGVhYmxlICAgdG8gcG9zc2libHkgNzAwMHRwcy4gKGF2ZXJhZ2Ugc3VzdGFpbmVkIDc1IGJsb2NrcyBwZXIgc2Vjb25kIG92ZXIgMzAgbWludXRlcyBoYXMgYmVlbiBzZWVuIG9uIGFuIHVuc2F0dXJhdGVkIG1haW5uZXQgd2l0aCBhIHJlcG9ydGVkIHBlYWsgb2YgNzU2IGJsb2NrcyBwZXIgc2Vjb25kKS5TaW1wbGUgICBhIFVzZXIgZVhwZXJpZW5jZSB0aGF0IGV2ZW4geW91ciBncmFubnkgY291bGQgdW5kZXJzdGFuZCAgIHNlZSB0aGUgTmF0cml1bSBXYWxsZXQgZm9yIGV4YW1wbGVXb3JraW5nIHRvZGF5IChub3QgZnV0dXJlIHZhcG91cndhcmUpQW5kcm9pZCwgSU9TLCBkZXNrdG9wIGFuZCBicm93c2VyIHdhbGxldHNIYXJkIFBydW5pbmcgY29taW5nIHYuIHNvb24gdG8gZW5hYmxlIG5vZGVzIG9uIGxvdyBzcGFjZSBkZXZpY2VzU2VjdXJhYmxlIG9uIExlZGdlciBOYW5vIFMgaGFyZHdhcmUgd2FsbGV0IG5vdywgYW5kIEpvbHQgc29vbkVhc3kgZm9yIG1lcmNoYW50cyB0byBpbnRlZ3JhdGUgaW50byBQb2ludCBvZiBTYWxlIHZpYTpJbnRlZ3JhdGVkIGNhcmQgcGF5bWVudHMgdmlhIFdpcmV4V29ya3MgZXZlbiBpZiB5b3Ugb2ZmbGluZSwgZXZlbiB3aXRoIHBhcGVyIHdhbGxldHNDYW4gc2FmZWx5IHJldXNlIEFkZHJlc3NlcyAodW5saWtlIElPVEEpIG1ha2luZyBBZGRyZXNzIEJvb2tzIHBvc3NpYmxlIGZvciBhIG5pY2VyIFVYTm90IGNsYXNzaWZpYWJsZSBhcyBhIFNlY3VyaXR5T24gQmluYW5jZSBhbmQgbXVsdGlwbGUgb3RoZXIgZXhjaGFuZ2VzIGluY2x1ZGluZyBOYW5leCBleGNoYW5nZVdvdWxkIGNvc3QgYXQgbGVhc3Qgb25lIHRoaXJkIG9mIGl0cyBtYXJrZXQgY2FwIHRvIGJyZWFjaCBpdHMgc2VjdXJpdHkgd2l0aCBhIDUxJSBhdHRhY2tQcm9vZiBvZiBXb3JrIGNhbiBub3cgYmUgZmFybWVkIG91dCB0byBtdWx0aXBsZSBQb1cgc2VydmVycyB0byBhbGxvdyBldmVuIGhpZ2ggdm9sdW1lIGV4Y2hhbmdlcyB0byBzZW5kIG1hbnkgdHJhbnNhY3Rpb25zIHBlciBzZWNvbmRTbyBtdWNoIHN1cHBvcnQgdGhhdCBpdCBoYXMgc3B1biBvZmYgdGhlIG1lbWUgY29pbiBCYW5hbm8KVGhlIGlkZWEgYmVoaW5kIHRoZSBzY2hlZHVsZXMgaXNuIHRvIG1ha2UgeW91IGFzIHRpcmVkIGFzIHBvc3NpYmxlIGFzIHNvb24gYXMgcG9zc2libGUgYnV0IHRvIGFwcGx5IHJlcGVhdGVkIHRyYWluaW5nIHN0cmVzcyB0aGF0IHlvdSBhYnNvcmIgYW5kIGJlbmVmaXQgZnJvbS4uIApJJ3ZlIG1hZGUgYSAxMDAga25vdCBmb3IgbXlzZWxmIGFuZCBnaXZlbiBhIGZldyA1MCBrbm90cyB0byBvdGhlciBmcmllbmRzLCBhbmQgbXkgZmFtaWx5LCB0b28uIEknbSBjdXJyZW50bHkgdHJ5aW5nIHRvIGRvIGEgMzAwIGtub3QgYXMgd2VsbCwgYnV0IHRoZSBsZW5ndGggb2YgY29yZCBpcyBzdXBlciBmcnVzdHJhdGluZywgaXQncyBhbG1vc3QgaW1wb3NzaWJsZSB0byBnZXQgaXQgYWxsIHRvIHBhc3MgdGhyb3VnaCB3aXRob3V0IHRhbmdsaW5nIHRvIGFuIGluY3JlZGlibGUgZGVncmVlLgpJZiB5b3UgdGFsa2luZyBhYm91dCBhbmFsIHNleCwgeW91IG1heSBibGVlZCBldmVyeSB0aW1lIGlmIHlvdSBub3QgcmVsYXhlZCBhbmQgZG9uIHVzZSBsdWJyaWNhbnQuIEZvbGxvdyB0aGUgU3RlcHMgdG8gR3JlYXQgRmlyc3QgVGltZSBBbmFsIFNleC4gUmVhZGluZyBvdGhlciBhcnRpY2xlcyBvbiBteSBibG9nIHRvIGxlYXJuIHNvbWUgdGVjaG5pcXVlcyB0aGF0IHlvdSBhbmQgeW91ciBib3lmcmllbmQgbWlnaHQgdHJ5IHRvIG1ha2UgaW50ZXJjb3Vyc2UgbW9yZSBwbGVhc3VyYWJsZSBmb3IgeW91Li4gCkludmVzdGlnYXRvcnMgYXJlIHRyeWluZyB0byBkZXRlcm1pbmUgd2hldGhlciBvdGhlciB3b3JrZXJzIGF0IHRoZSBidXNpbmVzcyBvZmZlcmVkIHNleCBzZXJ2aWNlcywgSGlsbHRvd24gVG93bnNoaXAgUG9saWNlIENoaWVmIENocmlzIEVuZ2VsaGFydCBzYWlkLiBIZSBzYWlkIGNoYXJnZXMgY291bGQgYmUgZmlsZWQgYWdhaW5zdCBtZW4gd2hvIHBhaWQgd29tZW4gdG8gcGVyZm9ybSBzZXggYWN0cyBvbiB0aGVtLgpJIHdvdWxkIHRyeSB0byBmaW5kIHRoZSBkb2N1bWVudHMgdGhyb3VnaCB5b3VyIGNpdHkgb3IgY291bnRyeSByZWdpc3RyYXIuIApUaGUgam9iIGRlc2NyaXB0aW9ucyBvZiB0aGVzZSBlbnRlcnRhaW5lcnMgdmFyeTsgc29tZSBtYXkgYmUgZGFuY2Vycywgc3RyaXBwZXJzLCBjYWxsIGdpcmxzIG9yIGVzY29ydHMuIEJ5IHRoZSBDREMncyBlc3RpbWF0ZSwgdGhlcmUgYXJlIGFwcHJveGltYXRlbHkgMSw1MDAgTGFzIFZlZ2FzIGVzY29ydHMgYW5kIG90aGVyIG91dGNhbGwgZW50ZXJ0YWlubWVudCB3b3JrZXJzIHdpdGhpbiB0aGUgY2l0eSBhbmQgc3Vycm91bmRpbmcgYXJlYXMuIApJIGp1c3QgcmFuIG91dCBvZiBnYXMuIEkgZW5kZWQgdXAganVzdCBkb2luZyBsaWdodCBqb2dzIHVudGlsIEkgbG9zdCBhIGdvb2QgcG9ydGlvbiBvZiB0aGUgd2VpZ2h0LiAKSSBkb24gdGhpbmsgaXRzIGhhbGZ3YXkgZGVhZCwgZWl0aGVyLCBidXQgc29tZXRoaW5nIGRvZXMgbmVlZCB0byBjaGFuZ2UgdG8ga2VlcCBzZW1pIGNhc3VhbCB0byBwc2V1ZG8gY29tcGV0aXRpdmUgcGxheWVycyBsaWtlIG15c2VsZiBpbiB0aGUgZ2FtZS4gTXkgc3F1YWQgaGFzIGFib3V0IDIwMCB3aW5zIHRvZ2V0aGVyIGFuZCB3ZSBlYWNoIGhhdmUgYWJvdXQgYSAxLjUgSy9kLiBOb3QgZ3JlYXQsIGJ1dCB3ZSBjb21wZXRpdGl2ZS4KSSBhbHNvIGtub3cgcGxlbnR5LiAKWW91IGNhbiBub3cgZ2V0IGEgbmVja2xhY2Ugd2l0aCBvbiBpdC4gCkkgd2FzIGluIGEgdGVycmlibGUgbW9vZCBhbmQga2VwdCBhcG9sb2dpemluZyBmb3IgaG93IEkgd2FzIGFjdGluZyBhbmQgbXkgZGF1Z2h0ZXIgYmVoYXZpb3IgKHNoZSB3YXMgYmVpbmcgdmVyeSBicmF0dHkgYWxzbykuIEhlIHJlYXNzdXJlZCBtZSwgYnV0IGl0IGRpZG4gaGVscC4gSSBoYXRlZCBteXNlbGYga25vd2luZyB0b25pZ2h0IHdhcyB0aGUgc3BlY2lhbCBuaWdodCBhbmQgSSBjb3VsZG4gZXZlbiBhY3QgYXMgaWYgSSB3YXNuIG1pc2VyYWJsZS4uIApTaSB2b3VzIHRlcyBwYXNzaW9ubihlKSBkZSBKYXBvbiBldCBkZSBnYXN0cm9ub21pZSwgcGV1dCB0cmUuIEplIG5lIG1lIHNvdXZpZW5zIHBsdXMgY29tbWVudCBqJ2FpIGRjb3V2ZXJ0IGNldHRlIGRsaWNpZXVzZSBhdXRldXJlLCBwb3Rlc3NlIGV0IHRyYWR1Y3RyaWNlLCBxdWkgY3JpdCBkZXMgbGl2cmVzIHNvdXZlbnQgbW9kZXN0ZXMgcGFyIGxhIHRhaWxsZSBtYWlzIGVzc2VudGllbHMgcGFyIGxlIGNvbnRlbnUuIApPcmdhbml6YXRpb24gaXMgdGhlIGtleS4gQmxvY2tlZCBvZmYgc2NoZWR1bGUgc2xvdHMsIGNhbGVuZGFyIGludml0ZXMsIGZpbGUgbmFtZXMsIGF0dGVudGlvbiB0byBkZXRhaWwsIGNyaXRpY2FsIHRoaW5raW5nLiBUaGVyZSBpcyByZWFsbHkgbm8gd2F5IHRvIGFjY29tcGxpc2ggYWxsIGEgc2VsZiBlbXBsb3llZCBlbnRyZXByZW5ldXIgbmVlZHMgdG8gZWFjaCBkYXkgd2l0aG91dCBtYXNzaXZlIGFtb3VudHMgb2Ygb3JnYW5pemF0aW9uLiBMYXN0IHRoaW5nIGV2ZXJ5ZGF5IHdoZW4gZXZlcnlvbmUgaXMgYXNsZWVwLCBzZXQgaG9tZSBzZWN1cml0eSBhbGFybS4gUGVyaGFwcyB0aGUgb25seSBtb21lbnRzIG9mIHJlc3BpdGUgZWFjaCBkYXkgaXMgd2hlbiB0aGUgYWxhcm0gaXMgc2V0IGF0IG5pZ2h0IGFuZCB0aGUgbWVudGFsIHNodXRkb3duIGJlZ2lucy4KU2hlIGxvY2F0ZWQgYWJvdXQgNjAgb2YgdGhlbSB3aG8gbGl2ZSBhcm91bmQgdGhlIGNvdW50cnkgYW5kIGFicm9hZC4gCkkgZG9uIGxpa2UgcmVpc3N1ZXMgd2l0aCBwaWxlcyBvZiBkZW1vcyBhbmQgcHJldmlvdXNseSBkaXNjYXJkZWQgbWF0ZXJpYWwsIEkgZG9uIGxpa2UgbmV3IGFsYnVtcyB3aXRoIGJvbnVzIHRyYWNrcywgSSBqdXN0IGxpa2UgYWxidW1zLCBJIGRvbiByZWFsbHkgd2FudCBzdHVmZiB0aGF0IHdhc24gY29uc2lkZXJlZCBhIGdvb2QgZml0IGZvciB0aGUgYWxidW0gSSBsaXN0ZW5pbmcgdG8uIApBbmQgQ2xhciAuIAoiQXRoZWlzdCIgaXNuIHNvbWV0aGluZyB0aGF0IEkgZGVjaWRlZCB0byBiZS4gSXQgaXNuIHNvbWV0aGluZyBJIGJlY2FtZS4gSSBoYXZlIG1lcmVseSBsYWNrZWQgYmVsaWVmIHNpbmNlIG15IGZpcnN0IGRheSBvbiBFYXJ0aCwgYW5kIGhhdmUgeWV0IHRvIGhlYXIgYW55IGFyZ3VtZW50IG9yIHNlZSBhbnkgbWlyYWN1bG91cyBzaGl0IGluIDM0IHllYXJzIHRvIGFsdGVyIG15IHBlcmNlcHRpb24uCk5vIHBlcnNvbmFsIGluZm9ybWF0aW9uLgpBYnNvbHV0ZWx5LiBJIG5vdCBzdWdnZXN0aW5nIG5vdCB0ZWFjaGluZyBhbnkgc3R1ZGVudHMuIEkgc2F5aW5nICJZb3UgY2FuIGJyaW5nIGEgaG9yc2UgdG8gd2F0ZXIsIGJ1dCB5b3UgY2FuIG1ha2UgaXQgZHJpbmsiLiBBbnkgZ29vZCB0ZWFjaGVyIG1ha2VzIHN1cmUgdGhhdCB0aGUgb3Bwb3J0dW5pdHkgZm9yIGFsbCBvZiB0aGVpciBzdHVkZW50cyB0byBsZWFybiBpcyB0aGVyZSBldmVyeSBkYXkuIEJ1dCBpZiBhIHN0dWRlbnQgcmVhbGx5LCB0cnVseSB3aWxsIG5vdCBtYWtlIHRoZSBlZmZvcnQsIEkgZG9uIHRoaW5rIGl0IGZhaXIgdG8gYmxhbWUgdGhlIHRlYWNoZXIsIGJ1dCBwZW9wbGUgYXJlIG9mdGVuIGhhcHB5IHRvLiBUaGVyZSBhcmUgdmFyaW91cyByZWFzb25zIHdoeSBhIHN0dWRlbnQgbWF5IG5vdCBiZSBhYmxlIHRvIGVuZ2FnZSBpbiB0aGUgY2xhc3MsIGFuZCBzb21lIG9mIHRob3NlIHJlYXNvbnMgY2FuIGJlIGNvbXBsZXRlbHkgYmV5b25kIGFueSB0ZWFjaGVyIHBvd2VyIHRvIGhlbHAsIHRyeSBhcyB0aGV5IG1pZ2h0LgpTaGUgYWxzbyBtYWRlIG9mIG15IGJyb3RoZXIncyBzcGVlY2ggaW1wZWRpbWVudCB3aGVuIHNoZSdkIGZvcmNlIGhpbSB0byByZWFkIG91dCBsb3VkLiAKUGFydGljaXBhbnRzIGF0dGVuZGluZyBhIHBzaWxvY3liaW4gcmV0cmVhdCBjb21wbGV0ZWQgdGVzdHMgb2YgY3JlYXRpdmUgKGNvbnZlcmdlbnQgYW5kIGRpdmVyZ2VudCkgdGhpbmtpbmcgYW5kIGVtcGF0aHksIGFuZCB0aGUgc2F0aXNmYWN0aW9uIHdpdGggbGlmZSBzY2FsZSBvbiB0aHJlZSBvY2Nhc2lvbnM6IGJlZm9yZSBpbmdlc3RpbmcgcHNpbG9jeWJpbiAoTiA9IDU1KSwgdGhlIG1vcm5pbmcgYWZ0ZXIgKE4gPSA1MCksIGFuZCBzZXZlbiBkYXlzIGFmdGVyIChOID0gMjIpLiBSZXN1bHRzIGluZGljYXRlZCB0aGF0IHBzaWxvY3liaW4gZW5oYW5jZWQgZGl2ZXJnZW50IHRoaW5raW5nIGFuZCBlbW90aW9uYWwgZW1wYXRoeSB0aGUgbW9ybmluZyBhZnRlciB1c2UuIApXZSBuZWVkIHJlbGllZiwgcmVjb3ZlcnkgYW5kIHJlaW52ZXN0bWVudCB0byBjb3BlIHdpdGggb3VyIG11bHRpZmFjZXRlZCBjcmlzaXMgICBhbmQgb25seSAxNTkgZGF5cyBhZnRlciBpdCB3YXMgc2lnbmVkIGJ5IFByZXNpZGVudCBPYmFtYSwgdGhlIFJlY292ZXJ5IEFjdCBpcyBhbHJlYWR5IGF0IHdvcmsgcHJvdmlkaW5nIGFsbCB0aHJlZS4uIApFdmVuIHRob3VnaCB5b3UgY2FuIGNvbGxlY3QgYSBsb3Qgb2YgaW5mb3JtYXRpb24gYWJvdXQgb25saW5lIHBva2VyIHNpdGVzIHRocm91Z2ggaW50ZXJuZXQsIHlvdSBzaG91bGQgYWxzbyBjb25zaWRlciBvdGhlciBwZW9wbGUgcHJlZmVyZW5jZSBsaWtlIHlvdXIgZnJpZW5kcywgZmFtaWx5IGV0Yy4gCkRvIHN0YW5kYXJkIG5vbiB1cGdyYWRlZCByb29tcyBoYXZlIHNsaXBwZXJzIGFuZCByb2Jlcz9IaSB0aGVyZSwgbm8gdGhleSBkb24ndCBoYXZlIHJvYmVzL3NsaXBwZXJzLiBIYXZlIHNoYW1wb28vY29uZGl0aW9uZXIsIGJvZHkgd2FzaCBhbmQgc29hcCB0aG91Z2ggIGFsc28gaGF2ZSBhIGhhaXJkcnllci9pcm9uIGFuZCBpcm9uaW5nIGJvYXJkIGluIHJvb20uQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIGFuc3dlcj9jb3VsZCBhbnlvbmUgbGV0IG1lIGtub3cgaWYgdGhlIHN1cGVyaW9yIGRvdWJsZSBoYXMgYSBzb2ZhIGJlZCBwbGVhc2U/eDIyIEphbnVhcnkgMjAxOEFuc3dlclNob3cgYWxsIDcgYW5zd2Vyc0hpZGUgYWxsIGFuc3dlcnNBcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgcXVlc3Rpb24/UmVzcG9uc2UgZnJvbSBUZXJlc2FhYWxsZW4xOTYwICBSZXZpZXdlZCB0aGlzIHByb3BlcnR5IFdlJ3ZlIHN0YXllZCBhIGNvdXBsZSBvZiB0aW1lcyBhbmQgd2UndmUgaGFkIHRoZSBmYW1pbHkgcm9vbSB3aXRoIHNtYWxsIHR3aW4gb2ZmIG1haW4gcm9vbSB3aXRoIGEgc29mYSB0b28uIEFuZCB3ZSd2ZSBoYWQgZG91YmxlIHJvb20gd2l0aCBzb2ZhIEkgYWx3YXlzIHBob25lIHRoZSBob3RlbCBhbmQgYXNrIGZvciBhIGhpZ2ggZmxvb3Igd2l0aCBzZWEgdmlldyByb29tIGFuZCB0aGV5J3ZlLiAKU29vbiBhIGNsZWFyIGxlYWRlciBlbWVyZ2VkIGluICJPT09PT09PT09PIiAodGhhdCBpcyB0ZW4gIk8iJ3MhKSwgaGUgZHV0aWZ1bGx5IHBlcmZvcm1lZCB0aGUgQ2hpcCBMZWFkZXJzIHJlc3BvbnNpYmlsaXR5IHRvIGJ1bGx5IGJhdHRlciB0aGUgZmllbGQgbWVyY2lsZXNzbHksIHNvb24gdGhlcmUgd2VyZSBqdXN0IHRocmVlIHJlbWFpbmluZywgd2l0aCBPeDEwIHN0aWxsIGJhdHRlcmluZyB0aGVtLCB3aGljaCBpcyBwcm9iYWJseSBvcHRpbWFsIGlmIHlvdSBoYXZlLCBhcyBoZSBkaWQsIGhhbGYgdGhlIGNoaXBzIGluIHBsYXkuClRoaXMgc29ydCBvZiBjb25mbGF0aW9uIG9mIGdheSBzZXggYW5kIG5hdGlvbmFsIHNlY3VyaXR5IGhhcyBiZWVuIGFyb3VuZCBmb3IgYSBsb25nIHRpbWUsIGF0IGxlYXN0IHNpbmNlIHRoZSB0aW1lIG9mIEtpbmcgRWR3YXJkIElJLCBpZiBub3QgYmVmb3JlLiAKVGhlIHRoaW5nIHRoYXQgYmxldyBtZSBhd2F5IHdhcyBob3cgZ29vZCBhIHBob25lIGl0IHdhcy4gVGhlIGVhc2Ugb2YgcHV0dGluZyBzb21lb25lIG9uIGhvbGQsIGNhbGxpbmcgc29tZW9uZSBlbHNlLCBtZXJnaW5nIHRoZSB0d28gY2FsbHMsIHRoZW4gc2VwYXJhdGluZyB0aGVtIGFnYWluLCBhbGwgb2YgdGhhdCB3YXMgYW1hemluZy4gCkkgY291bGQgaGVhciBoZXIgZmFyIGF3YXkgdm9pY2Ugc2F5aW5nLCAibWEnYW0/IFdvdWxkIHlvdSBsaWtlIHRvIGNvbXBsZXRlIHlvdXIgb3JkZXI/IgpQcm9ibGVtIGlzLCB0aGUgcGxhY2UgdGhleSBib3VnaHQgaXMgYW4gYXBhcnRtZW50LiBPbiB0aGUgZm91cnRoIGZsb29yLiAKVG8gZ2l2ZSBhbiBleGFtcGxlLCBsZXQgc2F5IHRoYXQgdGVuIHllYXJzIGZyb20gbm93IHlvdSBnb2luZyB0byB0aW1lIHRyYXZlbCBiYWNrIHRvIDIwMTIsIHdhbGsgaW50byBhIDcgMTEsIGFuZCBidXkgYSBob3QgZG9nLiBQb2ludGxlc3MgdGhpbmcgdG8gYmUgZG9pbmcgd2l0aCB0aW1lIHRyYXZlbCwgYnV0IGl0IGp1c3QgYW4gZXhhbXBsZS4KVW5kIG51ciB3ZWlsIGRpZSBLZXJua3JhZnQgTHN1bmcgZGVuIEJhY2ggcnVudGVyIGdlZ2FuZ2VuIGlzdCwgaGVpdCBkYXMgbmljaHQsIGRhc3MgZGllIG5jaHN0YmVzc2VyZSBMc3VuZyBuaWNodCBhdWNoIHNjaG9uIGVpbmVuIFVudGVyc2NoaWVkIG1hY2hlbiBrYW5uLgpIaWdoIHBhaXJzIHN1Y2ggYXMgQWNlL0FjZSwgS2luZy9LaW5nLCBRdWVlbi9RdWVlbiwgSmFjay9KYWNrIG9yIDEwLzEwCk5vdCBvbmx5IGRvIHRoZXkgbGVhcm4gYSBsb3QgYWJvdXQgdGhlIGNhbmRpZGF0ZXMgdGVjaG5pY2FsIHNraWxscywgTWVzc3JzLiBLb3RoYXJpIGFuZCBHdXB0YSBzYXksIGJ1dCB0aGV5IGFsc28gbGVhcm4gYWJvdXQgdGhlaXIgcGVyc29uYWxpdHkuIApJIGRhcmUgbm90IGxpc3QgYW55IHRpbWUgb3IgZGF0ZSBmb3IgdGhlIGdyZWF0IGRheSBvZiBvdXIgTG9yZCBKZXN1cyBDaHJpc3QgYXMgSGlzIHJldmVsYXRpb25zIGFyZSBhbHdheXMgdW5wcmVkaWN0YWJsZSBhbmQgdW5mYXRob21hYmxlLiAKRHVyYW50IGwgZ3JjbyByb21haW5lLCBkIHBvaW50IGRlIHZ1ZSBtZGljaW5hbCwgaWwgZXN0IHN1cnRvdXQgcnB1dCBwb3VyIGFwYWlzZXIgdGFudCBsIHF1ZSBsYSBkb3VsZXVyLCBjZSBxdWUgbmUgbWFucXVlIHBhcyBkZSByZW1hcnF1ZXIgRGlvc2NvcmlkZSBxdWkgdXNlIGR1IGNoYW52cmUgY29tbWUgYW5lc3Roc2lhbnQsIHByY2lzYW50IHBhciBsYSBtbWUgb2NjYXNpb24gcXUgcGV1dCAgZmFpcmUgcGFyYXRyZSBkZXZhbnQgbGVzIHlldXggZGVzIGZhbnRtZXMgZXQgaWxsdXNpb25zIHBsYWlzYW50ZXMgZXQgYWdyYWJsZXMgLCB0YW5kaXMgcXVlIEdhbGllbiBtZXQgZGF2YW50YWdlIGVuIGF2YW50IHNlcyBlZmZldHMgZXVwaG9yaXNhbnRzIDogIG9uIGVuIGRvbm5haXQgaGFiaXR1ZWxsZW1lbnQgYXV4IGNvbnZpdmVzIGRlcyBiYW5xdWV0cyBwb3VyIGxlcyBtZXR0cmUgIGwgZXQgbGVzIHJlbmRyZSBqb3lldXggLiBDZWNpIGRpdCwgaWwgbWV0IGVuIGdhcmRlIGV0IHJlY29tbWFuZGUgZGUgbiBwb2ludCB0cm9wIHVzZXIgYXUgcmlzcXVlIGRlIGRyYW5nZXIgbGVzIGVzcHJpdHMuIApXaGVuIEdvbnphZ2EgYW5ub3VuY2VkIGluIE9jdG9iZXIgdGhhdCBUaWxsaWUgaGFkIHN1cmdlcnkgdG8gcmVwYWlyIGEgc3RyZXNzIGZyYWN0dXJlIGluIGhpcyByaWdodCBhbmtsZSwgdGhlIHJlbGVhc2Ugbm90ZWQgYW4gYXBwcm94aW1hdGUgcmVjb3ZlcnkgdGltZSBvZiBlaWdodCB3ZWVrcy4gVGhhdCB0dXJuZWQgb3V0IHRvIGJlIG5lYXJseSBzcG90IG9uLiAKV2lzaGluZyBJIGNhbiBtYWtlIGl0IGJldHRlciBmb3IgYWxsIG9mIHVzLiBEZW1vY3JhY3kgY2FuIG5vdCBmYWlsLiBJdCdzIG5vdCBhbiBvcHRpb24uLiAKQW5kcmV3IEphY2tzb24gKDE3NjcgMTg0NSkgd2FzIHJlcG9ydGVkbHkgaW52b2x2ZWQgaW4gb3ZlciAxMDAgZHVlbHMsIG1vc3QgdG8gZGVmZW5kIHRoZSBob25vdXIgb2YgaGlzIHdpZmUsIFJhY2hlbC4gSGUgaGFkIGEgYnVsbGV0IGluIGhpcyBjaGVzdCBmcm9tIGFuIDE4MDYgZHVlbCBhbmQgYW5vdGhlciBidWxsZXQgaW4gaGlzIGFybSBmcm9tIGEgYmFyIHJvb20gZmlnaHQgaW4gMTgxMyB3aXRoIE1pc3NvdXJpIHNlbmF0b3IgVGhvbWFzIEJlbnRvbi4KUmVtZW1iZXIsIGluIHRoZSBnYW1lIG9mIGJsYWNramFjaywgeW91IG9ubHkgZ2FtYmxpbmcgYWdhaW5zdCB0aGUgZGVhbGVyIGFuZCBubyBvbmUgZWxzZS4gWWVzLCBpdCBoZWxwcyB0byBrbm93IHRoZSBjYXJkcyBvZiBvdGhlciBwbGF5ZXJzIGJlY2F1c2UgeW91IGJlIGFibGUgdG8gZGV0ZXJtaW5lIHRoZSBwcm9iYWJpbGl0eSBvZiB5b3VyIGNhcmRzIHdpbm5pbixnIGJ1dCB0aGUgbW9zdCBzaWduaWZpY2FudCB0aGluZyB0byBjb25jZW50cmF0ZSBvbiBpcyBob3cgdG8gYmVhdCB0aGUgZGVhbGVyIGNhcmRzLi4gClRoYXRBdXRpc3RpY1dvbWFuIHUKRm9yIGxpZ2h0ZXIgZm9ybXMgb2YgdGVuc2lvbiwgYSBnZW50bGUgdG91Y2ggbWFzc2FnZSB3aWxsIGJlIHVzZWQuIFdoZXJlYXMgZGVlcCB0aXNzdWUgbWFzc2FnZSBpcyBlZmZlY3RpdmUgd2l0aCBkZWVwZXIgbXVzY2xlIHRlbnNpb24uIFRoZXNlIHRlY2huaXF1ZXMgd2lsbCBhbGwgaGVscCB0byByZWxpZXZlIHRlbnNpb24uIApZb3UgbWVudGlvbmVkIHRoYXQgeW91IGEgcHJldHR5IGZydWdhbCBwZXJzb24uIEkgbGlrZSB0byB0aGluayB0aGF0IEkgYW0sIHRvbywgYnV0IEkga25vdyB0aGF0IEkgc3BlbmQgbW9yZSB0aGFuIHNvbWUgYW5kIGxlc3MgICBmYXIgbGVzcyAgIHRoYW4gb3RoZXJzLiAKT25jZSB0cmlnZ2VyZWQsIHRoZSBpbXBhY3Qgb2YgRFIgd2lsbCBpbmNyZWFzZSB1bnRpbCB5b3Ugd29uIGdldCBhbnkgbG9vdCBhdCBhbGwgYW55bW9yZS4KRnVjayB5bywgSSBtYWRlIG15c2VsZiBkZXByZXNzZWQuLiAKSSd2ZSBiZWVuIGEgcm9hZGllIGZvciB2YXJpb3VzIGJhbmRzICAgYnV0IG5vdyBlbmpveSBqdXN0IHBsYXlpbmcgYSBsaXR0bGUgbXVzaWMgZm9yIG15c2VsZiwgeW9kZWxsaW5nIGFsb25nIHRvIG15IHJlY29yZHMsIG9yIGhlbHBpbmcgb3V0IGFueSBiYW5kIHdobyBuZWVkcyBhbiBlYWdlciBwYXcgICB3aGljaCBpcyBmYXNjaW5hdGluZyBhbmQgdmVyeSB2YXJpZWQhSW4gbXkgc3BhcmUgdGltZSBJIHRyeSBhbmQga2VlcCB1cCB0byBkYXRlIHJ1bm5pbmcgYSBmYW5zaXRlIGZvciBVSyBiYXNzaXN0IEpvaG4gJ1JoaW5vJyBFZHdhcmRzLCBjdXJyZW50bHkgb2YgU3RhdHVzIFF1bywgZm9ybWVybHkgb2YgSnVkaWUgVHp1a2UsIERleHkncyBNaWRuaWdodCBSdW5uZXJzIGFuZCBtb3N0IG90aGVyIHBlb3BsZSAgIGNoZWNrIGl0IG91dCBhdCBUaGUgUmhpbm9TaXRlLiBJZiB5b3UgZ28gdGhlcmUgZG9uJ3QgZm9yZ2V0IHRvIHNpZ24gdGhlIGd1ZXN0Ym9vayB0aG91Z2ggSSBrbm93IEknbSBhIGJpdCBiZWhpbmQsIGJ1dCB0aGF0J3MgZG93biB0byBteSBsYXN0IHllYXIgb2YgVW5pIGFuZCBtb3ZpbmcgaG91c2UgYSBiaWxsaW9uIHRpbWVzLkkgYWxzbyBydW4gdGhlIE9mZmljaWFsIEpvaG5ueSBXYXJtYW4gc2l0ZSBhbmQgdGhlIHNpdGUgZm9yIFVLIFNlc3Npb24gU3VwZXJncm91cCBUaGUgTW9kcy5BbW9uZ3N0IG15IG1hbnkgb3RoZXIgbG92ZXMgYXJlIGNhdHMgLCBjYXJzLCBhbnl0aGluZyB3aGljaCBpcyBzdGVhbSBwb3dlcmVkLCByZWNvcmQgY29sbGVjdGluZywgY29va2VyeSAsIG11c2ljICwgd2ViIGRlc2lnbiBhbmQgY3JhZnRzIC5JIGhhdmUgYSBnaW5nZXIgdGFiYnkgYW5kIHdoaXRlIGNhdCBbY2FsbGVkIEFubmllXS4gU2hlIGN1cnJlbnRseSBsaXZlcyB3aXRoIG15IHNpc3RlciBpbiBIYW1wc2hpcmUsIGFzIHNoZSBjYW5ub3QgY29tZSB3aXRoIG1lIHRvIEhvbGxhbmQuIApJcyB0aGVyZSBhbnlvbmUgd2hvIGhhc24gbm90aWNlZCB0aGUgZm91bmQgYXJ0IHB1bW1lbGVkIGludG8gdGVsZXBob25lL3V0aWxpdHkgcG9sZXMgYW5kIHdvbmRlcmVkIHdoYXQgdGhlIG51bWJlcnMgbWVhbnQ/IFRoaXMgYm9va2xldCwgZmFyIGZyb20gZW5jaGFudGluZ2x5IHRpdGxlZCBNYXJraW5nIFN5c3RlbXMgZm9yIFB1YmxpYyBVdGlsaXRpZXMsIHB1Ymxpc2hlZCBieSBhIG1hbnVmYWN0dXJlciBvZiBzdWNoIG51bWJlcnMgYW5kIHN5bWJvbHMgYmFjayBpbiAxOTM4LCBhbnN3ZXJzIHRoZXNlIHF1ZXN0aW9ucyBhbmQgdGVsbHMgdGhlIHN0b3J5IG9mIGhvdyB5b3UsIHRvbywgY2FuIG1hcmsgeW91ciBwb2xlcyBpbiBhbiBlZmZpY2llbnQgYW5kIG1vZGVybiBtYW5uZXIuIApNYW55IEluZGlhbiB3b21lbiB1c2VkIGl0IGFzIHBhcnQgb2YgYSB3ZWVrbHkgcml0dWFsLCBtYXNzYWdpbmcgdGhlIHNjYWxwcyBvZiBmYW1pbHkgbWVtYmVycyB0byBwcmV2ZW50IHN0cmVzcyBhbmQgZXZlbiBpbGxuZXNzIFtzb3VyY2U6IE9zYm9ybl0uLiAKQW5kIHRoZXkgYXJlIGJvdGggcGFydHkgYW5pbWFscyB3aG8gaGFkIHdlbGwgcHVibGljaXplZCBicnVzaGVzIHdpdGggdGhlIGxhdy4KKGdvdHRhIGRpZyBpdCBvdXQgYWdhaW4gYW5kIGNvbXBhcmUpVGhlIGRlbHV4ZSBlZGl0aW9uIGluIGdlbmVyYWwgd2FzIGEgaHVnZSBsZXRkb3duIGluIG15IG9waW5pb24uIApXZSB1c2VkIHRvIGp1c3QgdGVsbCB0aGVtIHRoYXQgd2UgZG9uIGhhdmUgYW55dGhpbmcgYmFjayB0aGVyZS4gVGhlbiB3ZSBnb3QgdGlyZWQgb2YgaXQuIApDZXR0ZSBxdWVzdGlvbiBmZXJhIGNlcnRhaW5lbWVudCBzb24gYXBwYXJpdGlvbiBkYW5zIGxlcyBmdXR1cnMgZGJhdHMgcG9saXRpcXVlcyBwcnBhcmFudCBhdXggcHJvY2hhaW5lcyBsZWN0aW9ucyBwcnNpZGVudGllbGxlcy4gRGFucyBsZSBjYXMgY29udHJhaXJlLCBpbCBmYXVkcmEgYXR0ZW5kcmUgcXVlIGxhIENvdXIgRXVyb3Blbm5lIGNvbnNpZHJlIHF1J3VuIGNvbnNlbnN1cyBleGlzdGUgYXUgbml2ZWF1IGV1cm9wZW4gcG91ciBsJ2FtZW5lciAgbW9kaWZpZXIgc2EganVyaXNwcnVkZW5jZS4uIApIb3cgbWFueSBjYXNpbm9zIGFyZSB0aGVyZSBhbmQgZG8gdGhleSBoYXZlIHBva2VyIGNhc2ggZ2FtZXM/ClNvIHlvdSBuZWVkIHRvIGJvdGggbGV0IGhlciBnbywgYnV0IGFsc28gYnJpbmcgaGVyIHVwIHRvIHNwZWVkIG9uIHJlYWwgbGlmZSwgYW5kIHRoZW4gaG9uZXN0bHksIGp1c3QgdHJ1c3QgaGVyLiBJZiB0aGUgYmYgaXMgY29tcGxldGVseSBydWRlIHRoZW4gdGVsbCBoaW0gc28sIGRvbiBsZXQgaGltIGludG8gdGhlIGhvdXNlIHVudGlsIGhlIGFwb2xvZ2l6ZXMgaWYgeW91IGZlZWwgbGlrZSwgYnV0IHRoZSByZWFsIGlzc3VlIGlzIHlvdXIgZGF1Z2h0ZXIuClRoYXQgdGhlIGdvYWwgcmlnaHQ/IE5vdCB0byBhbGllbmF0ZSBwZW9wbGUgYnV0IHRvIGJyaW5nIHRoZW0gdG8gYSBwb2ludCBvZiB1bmRlcnN0YW5kaW5nIGFuZCBob3BlZnVsbHksIGV2ZW50dWFsbHksIGFjY2VwdGFuY2UuIApJIGhlYXJkIHRoYXQgZmV3IHNlbGxlcnMgbWFrZSBvd24gdGhlaXIgcmVwIGJhZ3MgaW4gS29yZWEuIEl0IGlzIG5lYXIgMiAzIHRpbWVzIGhpZ2hlciBwcmljZS4gClp5bmdhLCB0aGlzIGludGVyY29ubmVjdGVkIGJ1c2luZXNzIG1vZGVsIG1lYW5zIGl0IGNhbiBncm93IGZhc3Rlci4gCkFjY29yZGluZyB0byB0aGUgc3VpdGZpbGVkaW4gdGhlIE1pY2hpZ2FuIENvdXJ0IG9mIENsYWltc1RoZSByZWd1bGF0aW9ucyBsaW1pdCBwb2tlciByb29tcyBvciBvdGhlciBsb2NhdGlvbnMgdG8gaG9zdGluZyBjaGFyaXR5IHBva2VyIGdhbWVzIHVwIHRvIGZvdXIgbmlnaHRzIGEgd2Vlay4gTm8gbW9yZSB0aGFuIHR3byBtaWxsaW9uYWlyZSBwYXJ0aWVzIGNvdWxkIHRha2UgcGxhY2UgYXQgdGhlIHNhbWUgbG9jYXRpb24gcGVyIGRheS4KWW91IGludHJvZHVjZWQgdG8gYSBjaGFyYWN0ZXIgd2hvIGlzIGEgY3luaWNhbCwgc2VsZiBzZXJ2aW5nLCBzdXJ2aXZhbGlzdC4gClRoZSBvbmx5IHJlYWwgZGVjaXNpb24gcG9pbnQgaGVyZSBpcyB3aGV0aGVyIG9yIG5vdCB0aGUgcGVvcGxlIHdobyB3YW50IHRvIGhhdmUgdGhlaXIgYmFiaWVzIGFib3J0ZWQgd2lsbCBiZSBhYmxlIHRvIGRvIGl0IHNhZmVseS4uIApTdGlsbCBhIHZlcnkgZ29vZCBwcmljZSBhcyB0aGV5IHVzZWQgdG8gY29zdCAkMTUwIGF0IG9uZSBwb2ludC4gClRoZXNlIHBlb3BsZSBtdXN0IGxpbWl0IHRoZWlyIGV4cG9zdXJlIGFuZCBuZWVkIGFkZGl0aW9uYWwgbnV0cmllbnRzIHRvIGhlbHAgcmVtb3ZlIG1lcmN1cnkgZnJvbSBidWlsZGluZyB1cCBpbiB0aGUgYm9keS41KSBUaGUga2V5IHRvIGRpYWJldGVzIHByZXZlbnRpb24gaXMgYSBzdHJvbmcgYW5kIHJlY2VwdGl2ZSBjZWxsIGxpcGlkIGxheWVyLllvdSBuZWVkIHN1ZmZpY2llbnQgYW1pbm8gYWNpZHMgdG8gYnVpbGQgdGhlIHByb3RlaW4gc3RydWN0dXJlIG9mIGVhY2ggY2VsbC4gClRoYXQgaXMgd2h5IEkgaW50cm9kdWNlIFNweSBQbGF5aW5nIENhcmRzIGluIERlbGhpIHRvIG15IGFsbCByZWFkZXJzIHdobyB3YW50IHRvIHdpbiBldmVyeSBnYW1lIG9mIGdhbWJsaW5nIHdpdGhvdXQgYW55IHRyb3VibGUuIApNb3N0IG9mIHRoZSBiaWcgdG91cm5hbWVudHMgYXJlIHBhcnQgb2Ygc2VyaWVzLCB3aGljaCBhcmUgYmFzaWNhbGx5IDEgMiB3ZWVrIGxvbmcgZmVzdGl2YWxzIHBhY2tlZCB3aXRoIHRvdXJuYW1lbnRzLiAKT2ggamEsIGljaCBhdWNoLiIgU2FndGUgU29waGllIHVuZCBiZWlkZSBGcmF1ZW4gbGFjaHRlbi4gRGFzIHdhciBoZWZ0aWcuIFZvciBhbGxlbSBoaWVyIiBzaWUgemVpZ3RlIGF1ZiBlaW5lIFN0ZWxsZSBhbiBpaHJlciBUYWlsbGUsIHVuZCBoaWVyIiBzaWUgYmVyaHJ0ZSBpaHJlIE9iZXJzY2hlbmtlbCBrbmFwcCBvYmVyaGFsYiBkZXIga25pZS4KTWF5YmUgc29tZXRoaW5nIGxpa2UgYSBjaGFpbiB0aGF0IHB1bGxzIHRoZW0gdG93YXJkcyB5b3UuIEhlciB3IHNob3VsZCBiZSBjaGFuZ2VkIHRvIGJ1aWxkIG9uIHRoYXQgY2MuIE1heWJlIGhhdmUgaXQgaGl0IG9uY2UgYW5kIGNhdXNlIGEga25vY2t1cCBvciBhIHNsb3cgYW5kIHRoZW4gc2hlIGdldHMgdG8gdXNlIGl0IGFnYWluIGZvciBhbiBhZGRpdGlvbmFsIGtub2NrdXAgYmVmb3JlIHRoZSBmaW5hbCB1c2UgZm9yIGFub3RoZXIga25vY2sgdXAuIApZZWFoLCB0aGUgZ2FtZSBoYXMgdGhvdXNhbmRzIG9mIGhvdXJzIG9mIGNvbnRlbnQsIDk5JSBvZiB3ZWFwb25zIGFuZCB3YXJmcmFtZXMgYXR0YWluYWJsZSBieSBnYW1lcGxheSBhbmQgY2luZW1hdGljIHF1ZXN0cy4gClRoZSBoZWF2eXdlaWdodCBkaXZpc2lvbiBoZXJlIGluIHRoZSBVSyBoYXMgYXQgbGVhc3Qgc29tZSBmaWdodGVycyB0aGF0IGRpdmlkZSBvcGluaW9ucyBhcyB3aWRlIGFzIFdpbGRlciB3aGVuIHRoZSByaWNoZXN0IHByaXplIGluIHNwb3J0IGlzIGRpc2N1c3NlZC4gVHlzb24gRnVyeSBhbmQgRGVyZWNrIENoaXNvcmEgbWF5IGNsYXNoIGluIHRoZSBzdW1tZXIgYWdhaW4uIEJvdGggYXJlIGdvb2QgdGFsa2VycyBhbmQgYm90aCB3aXRoIGRlZXAgYmVsaWVmIGluIHRoZWlyIGZpZ2h0aW5nIGFiaWxpdHkuIFRoZXkgbWF5IHRhbGsgd2VsbCB0aGV5IGtub3cgdGhlIGh5cGUgZ2FtZSBqdXN0IGFzIHdlbGwgYm90aCBjb21lIHRvIGZpZ2h0LgpXZWFyaW5nIHRvbyBtdWNoIHBlcmZ1bWUgbWlnaHQgYWxzbyBiZSBhbiBpbmRpY2F0b3Igb2YgZGVwcmVzc2lvbi4gUmVzZWFyY2hlcnMgZnJvbSBUZWwgQXZpdiBVbml2ZXJzaXR5IGZvdW5kIHRoYXQgd29tZW4gd2hvIHdlcmUgZGVwcmVzc2VkIGFsc28gbG9zdCB0aGVpciBzZW5zZSBvZiBzbWVsbC4gClNlbmlvciBTdHlsaXN0IC8gQ29sb3VyaXN0Ck5GTCBDb21taXNzaW9uZXIgUm9nZXIgR29vZGVsbCBkZXRlcm1pbmVkIHRoYXQgRmFjcmUgd2FzICJub3QgY2FuZGlkIGluIHNldmVyYWwgcmVzcGVjdHMgZHVyaW5nIHRoZSBpbnZlc3RpZ2F0aW9uIiBidXQgImNvdWxkIG5vdCBjb25jbHVkZSIgdGhhdCBGYXZyZSB2aW9sYXRlZCB0aGUgbGVhZ3VlJ3MgcGVyc29uYWwgY29uZHVjdCBwb2xpY3kgYmFzZWQgb24gdGhlIGV2aWRlbmNlIGhlIGhhZCwgdGhlIGxlYWd1ZSBzYWlkIGluIGEgc3RhdGVtZW50IFdlZG5lc2RheSBhbm5vdW5jaW5nIHRoZSBmaW5lLiAKV2l0aG91dCBtdWx0aXBsZSBoYWt3b25zICh3aGljaCB3ZSBkaWQgbm90IGRvKSBvciBhIGxvdCBvZiBwYXJlbnRhbCB0dXRvcmluZyBhbmQgaW52b2x2ZW1lbnQgKHdoaWNoIHdlIGRpZCBkbykgdGhlIGtpZHMgYXJlbid0IGdvaW5nIHRvIGxlYXJuIG11Y2gsIGJlY2F1c2UgdGhlIHNjaG9vbCB0ZWFjaGVycyB3b24ndCB0ZWFjaCBpdC4KQXNwZXJzIGlzIG5pY2UgYXN3ZWxsLiBPbmx5IHBsYXllZCB0aGVyZSB0d2ljZSB0aG8uIEdyb3N2ZW5vciBvbmx5IG9uY2UuIApJZiB5b3Ugc3BlbmQgYSBsb3Qgb2YgdGltZSBvbiB5b3VyIGZlZXQsIGJlaGluZCBhIGNvbXB1dGVyIG9yIGdpdmUgcHJlc2VudGF0aW9ucywgSSBzdXJlIEkgY2FuIGRldmVsb3AgYSB0aGVyYXB5IHJvdXRpbmUgdG8gc3VpdCB5b3UuV2l0aCBteSBwYXNzaW9uIHRvIGhlbHAgcmFpc2UgYXdhcmVuZXNzIG9mIHRoZSBpbXBvcnRhbmNlIG9mIHBvc3R1cmUsIEkgY3VycmVudGx5IHRlYWNoIFVuaXZlcnNpdHkgU3RhZmYgUGlsYXRlcyBjbGFzc2VzIGF0IGJvdGggU3QgTHVrZXMgYW5kIFN0cmVhdGhhbS4gCkRyLiBKZWZmcmV5IFdpbm5pY2tpIHN0YXJ0ZWQgVGhlIERlbnRhbCBTaG9wcGUgaW4gTWF5IG9mIDIwMDYuIEFsdGhvdWdoIGhlIGRvZXNuJ3Qgc3BlY2lhbGl6ZSBpbiBhbnhpb3VzIHBhdGllbnRzLCBoZSBib3VnaHQgZXF1aXBtZW50IHN1Y2ggYXMgdGhlIG1hc3NhZ2UgY2hhaXIgd2l0aCBmZWFyZnVsIHBhdGllbnRzIGluIG1pbmQuIEhlIG9mZmVycyBhIG51bWJlciBvZiBvcHRpb25zIHRvIG1ha2UgcGF0aWVudHMgZmVlbCBtb3JlIHJlbGF4ZWQgZHVyaW5nIHRoZWlyIHByb2NlZHVyZXMuIFRoZXkgY2FuIGNob29zZSB0byB0dXJuIG9uIHRoZSBtYXNzYWdlIGNoYWlycywgd2F0Y2ggbW92aWVzIG9yIHRlbGV2aXNpb24gc2hvd3MgZnJvbSBhIHNjcmVlbiBhbmdsZWQgZm9yIGVhc3kgdmlld2luZywgbGlzdGVuIHRvIG11c2ljLCBvciB3ZWFyIG5vaXNlIGNhbmNlbGluZyBoZWFkcGhvbmVzLiBGb3IgdGhvc2Ugd2l0aCBhY3V0ZSBhbnhpZXR5LCBXaW5uaWNraSBvZmZlcnMgc2VkYXRpb24uIEhvd2V2ZXIsIGhlIHNheXMsIGRpc3RyYWN0aW9uIGlzIGVmZmVjdGl2ZSBmb3IgbW9zdCBwYXRpZW50cy4iSSBvZmZlciBhbGwga2luZHMgb2Ygc2VkYXRpb24gcm91dGVzLCIgV2lubmlja2kgc2FpZCwgImJ1dCB1bmxlc3MgaXQncyBzb21ldGhpbmcgc2V2ZXJlLCBtYWtpbmcgdGhlIHBhdGllbnQgY29tZm9ydGFibGUgd2l0aG91dCBoYXZpbmcgdG8gZHJ1ZyB0aGVtIHVwIGlzIHJlYWxseSB0aGUgcHJlZmVycmVkIG1ldGhvZC4iCldhc2hpbmd0b24gREMgaXMgYSBzdHJhbmdlIHBsYWNlIGFzIHdlbGwgICBncmVhdCBtdXNldW1zLCBidXQgZmVlbHMuIE9mZiB0byBtZS4gCk5vdyBCYXJiaWUgaGVyc2VsZiBpcyB0aHJlYXRlbmVkIGFuZCBoZXIgZGVtaXNlIG1heSBzaWduYWwgdGhlIGVuZCBvZiB0aGUgQW1lcmljYSBFbXBpcmUuIEFjY29yZGluZyB0byBhbiBhcnRpY2xlIGluIHRoZSBOZXcgWW9yayBUaW1lcywgQmFyYmllIGlzIGZhY2luZywgZm9yIHRoZSBmaXJzdCB0aW1lLCBzb21lIHJlYWwgY29tcGV0aXRpb24uIApZb3VyIG1ldGFib2xpc20gaXMgaGlnaGVyLiBZb3UgcHJvYmFibHkgbmVlZCBsZXNzIG1ha2V1cC4gCiJXZSBjb3VsZCBnbyBmcm9tIGEgJDMwMCwwMDAgdG8gJDQwMCwwMDAgcHJvZml0IHRvIGEgJDFtaWxsaW9uIGxvc3MsIiBoZSBzYWlkLiBUaGUgZG91YmxlIHdoYW1teSBmb3IgdGhlIGNsdWJzIGlzIGhhdmluZyB0byBzcGVuZCBtb3JlIHRoYW4gYSAkMW1pbGxpb24gdG8gbWFrZSBjaGFuZ2VzIHRoYXQgd2lsbCBjdXQgcmV2ZW51ZS4gCkdldCBtZSB3cm9uZy4gSSBiZWxpZXZlIGluIG9wZW4gZWNvbm9taWVzLiBUaGV5IGdvaW5nIHRvIGNvbWUgaGVyZSBhbnl3YXk7IEkganVzdCBkb24ga25vdyB3aHkgd2UgZ2l2ZSB0aGVtIHRoZSBiZXN0IHRhbGVudCwgZ2l2ZSB0aGVtIG91ciBJUCwgZ2l2ZSB0aGVtIHRheCBjcmVkaXRzIGZvciB0aGUgcmVzZWFyY2gsIGdpdmUgdGhlbSB0aGUgcmVkIGNhcnBldCBmb3IgZ292ZXJubWVudCByZWxhdGlvbnMsIGRvbiBhbGxvdyB0aGVtIHRvIHBheSB0YXhlcywgYW5kIHRoZW4gaGF2ZSBhbGwgdGhlIHdlYWx0aCBmbG93IG91dCBvZiB0aGUgY291bnRyeS4gaXMgZW50cmVuY2hpbmcgaXRzIGFkdmFudGFnZSBvbiBkaWdpdGFsIHRyYWRlLiBmb3IgMTUgeWVhcnMsIGFuZCBvdXIgcHJvZHVjdGl2aXR5IHdlbnQgZG93biwgdGljaywgdGljaywgdGljaywgZm9yIDE1IHllYXJzLCBoZSBzYWlkLiBzbyB0aGV5IGFjY3J1aW5nIHRoZSBlY29ub21pYyBiZW5lZml0cyBhbmQgc3RhdGUgcG93ZXIgdGhhdCBjb21lcyB3aXRoIGJ1aWxkaW5nIHRob3NlIGludGFuZ2libGUgYXNzZXRzLgpBbm51aXRpemVkIHRvIHBheSB0aHJlZSBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gZm9yIDMwIHllYXJzLCBpdCB3b3VsZCBnZW5lcmF0ZSAkMzgsMjYwIHBlciB5ZWFyLiAKVGhlIGluc3RydW1lbnRhdGlvbiBuZXZlciBvdmVydGFrZXMgTmV3c29tLCBzdXBwb3J0aW5nIGhlciBtdXNpbmdzIGFuZCBib2xzdGVyaW5nIHdoYXQgYmVpbmcgZXhwbG9yZWQuIEl0IGltcG9ydGFudCB0byByZW1lbWJlciB0aGF0IHRoaXMgaXMgYWxzbyBhIHZlcnkgZGFyayBhbGJ1bS4gSXQgY29uc2lkZXJzIGRlYXRoLCB3aXRoZXJpbmcgcmVsYXRpb25zaGlwcywgbWFuaXB1bGF0aW9uLCBkaXN0YW5jZSwgc2VsZiBkb3VidCwgb24gYW5kIG9uLiAKRXQgY2V0dGUgZm9pcywgaWwgbid0YWl0IHBhcyBxdWVzdGlvbiBkZSBwYXJsZXIgc2V1bGVtZW50IGJpbGFuIG1haXMgYmllbiBkJ2NvdXRlciBoYWJpdGFudHMgZXQgYXNzb2NpYXRpb25zLiAKMSBjdG4gb2YgdGlnZXIgYXJkICQyMC8yMSwgY2FybGJlcmcgaGVpbmtpZW4gYXJlIHNsaWdodGx5IGV4cGVuc2l2ZS4gCkFuZCByaWdodCBub3cgdGhpcyBjb3VudHJpZXMgcmVzcG9uc2UgdG8gdGhlIG9waW9pZCBlcGlkZW1pYyBpcyBhcyBoYW0gZmlzdGVkIGFuZCBzdHVwaWQgYXMgaXQgcmVzcG9uc2UgdG8gdGhlIG90aGVyIGlsbGVnYWwgZHJ1Z3MuLiAKTW9zdCBvZiB0aGUgbWVuIEkndmUgZGF0ZWQsIGluY2x1ZGluZyBteSBjdXJyZW50IGJveWZyaWVuZCBvZiAzKCEpIHllYXJzLCBoYXZlIGEgbG90IG9mIHRyb3VibGUgY29taW5nIHRvIHRlcm1zIHdpdGggdGhpcyBhbmQgaXQgZG9lcyBjYXVzZSBpc3N1ZXMuIApZZXMsIGNvc3QgaXMgYSBmYWN0b3IsIGJ1dCBub3QgYWxsIGNhbmNlciB0eXBlcyBoYXZlIGVmZmVjdGl2ZSBzY3JlZW5pbmdzLiAKRklSU1QgUElDSzogVGhlIHBsYXllcnMgb24gRmxpbnQgYW5kIEtpbmdzdG9uIHdhbnQgdG8gd2luIGFzIG1hbnkgZ2FtZXMgYXMgdGhleSBjYW4sIGJ1dCB0aGUgb3JnYW5pemF0aW9uIHRoYXQgZW5kcyB1cCBkZWFkIGxhc3QgMjB0aCBnZXRzIHRoZSBmaXJzdCBjaG9pY2UgaW4gdGhlIE9ITCBkcmFmdCBpbiBBcHJpbC4gCkNsdWJXUFQgQm9udXMgQ29kZQpIZSB3b3VsZCBuZXZlciB0YWtlIG15IGFkdmljZSwgYnV0IEkgc3RpbGwgYWx3YXlzIGhhZCBmdW4uIEkgd291bGQgYWx3YXlzIGJlIGhhcHB5IHRvIGdpdmUgaGltIGhpcyBjdXQgb2YgbXkgd2lubmluZ3MuIApXZWxsIEkgZG9uIGxpa2UgdGhlIGlkZWEgb2YgYmVpbmcgYWRkaWN0ZWQgdG8gY2FmZmVpbmUgc28gSSB0aGluayBJIGdvaW5nIHRvIGdpdmUgaXQgYSBicmVhayBhbmQgc2VlIGhvdyBJIGdvLiBJIGhhdmUgYSBob3QgTWlsbyBpbiB0aGUgbW9ybmluZyBpbnN0ZWFkLiBJIG1pZ2h0IGhhdmUgYmVlbiBwcmV0dHkgZHVtYiBidXQgSSBkaWRuIHRoaW5rIGFib3V0IGdldHRpbmcgYWRkaWN0ZWQgdG8gY2FmZmVpbmUgZXZlbiB0aG91Z2ggSSBrbmV3IHRoYXQgd2FzIGEgdGhpbmcuIEkgZG9uIGdldCBhIGJ1enogZnJvbSBjb2ZmZWUgSSBqdXN0IGxpa2UgdGhlIHRhc3RlIGFuZCBpdCBiZWNvbWUgYSBtb3JuaW5nIHJpdHVhbCBzbyBJIGd1ZXNzIEkgdGhvdWdodCB0aGF0IHNpbmNlIEkgZG9uIGZlZWwgdGhlIGVmZmVjdHMgb2YgY2FmZmVpbmUgSSBwcm9iYWJseSB3YXNuIGFkZGljdGVkIHRvIGl0LiBQZXJoYXBzIHRoaXMgcmVzaXN0YW50IGhlYWRhY2hlIHByb3ZlcyBvdGhlcndpc2UuClRoZSBmcmFtZSBpcyB3b29kIGFuZCByZWluZm9yY2VkIHdoaWNoIG1ha2VzIGl0IHN0dXJkeSB0b28uLiAKSnVzdCB0byBiZSBjbGVhciBhYm91dCB0aGlzLCBGaXJlZm94IGRvZXNuIG5lZWQgZnVsbCBhZG1pbiByaWdodHMgdG8gaW5zdGFsbCBwcm9wZXJseS4gWW91IGNhbiBqdXN0IGxldCBpdCBpbnN0YWxsIHRvIHlvdXIgbG9jYWwgdXNlciBkZWZhdWx0IGRpcmVjdG9yeS4gCkFuZCBteSBhdWRpZW5jZSB3YXMgdGhlIGtpbmQgdGhhdCBvbmUgY2FuIG9ubHkgaG9wZSBmb3IuIApTcGFjZVBpc3RhY2hpbyB1CkZvciBtZW4sIHRoaXMga2luZCBvZiB1cyB2cyB0aGVtIGlzIHByb2JhYmx5IGEgc291cmNlIG9mIGVuZXJneSBhbmQgZHJpdmUuIEZvciB3b21lbiwgdGhvdWdoLCBpdCBpcyBwcm9iYWJseSBhIHNvdXJjZSBvZiBkb3VidC4gUmF0aGVyIHRoYW4gIkkgZ29pbmcgdG8gc2hvdyB0aGUgd29ybGQgaG93IGdvb2QgSSBhbSIsIGl0ICJvdGhlciBwZW9wbGUgcmVhbGx5IGFyZSBkaWZmZXJlbnQsIEkgd29uZGVyIHdoYXQgd3Jvbmcgd2l0aCBtZT8iIENoYW5nZSB0aGUgZXNzYXkgdG8gZm9jdXMgb24geW91cnNlbGYsIHJhdGhlciB0aGFuIG90aGVycywgYW5kIG1lbiBkb24gZ2V0IHRoZSBib29zdCwgYW5kIHdvbWVuIGRvbiBzdWZmZXIgdGhlIHBlbmFsdHkuCkZvciB0aGVtIHRvIHRha2UgbWUgaW4gYW5kIGZvciBtZSB0byBvbmx5IGhhdmUgdG8gd29ycnkgYWJvdXQgb25lIGxpdHRsZSBkZXRhaWwgKGhvY2tleSkgTWFnZ2llIChHb3JnZXMgd2lmZSkgdG9vayBjYXJlIG9mIGV2ZXJ5dGhpbmcgZWxzZS4gSSB3b24gZ2l2ZSBKb3NoIGFueSBjcmVkaXQgTWFnZ2llIGRpZCBldmVyeXRoaW5nIGFyb3VuZCB0aGUgaG91c2UuIEJ1dCB0aGUgdHdvIG9mIHRoZW0gYXJlIHJlYWxseSBiaWcgZm9yIG1lIGluIG15IGNhcmVlci4gCklmIHlvdSBjbGljayBiZWhpbmQgdGhlIFNpcmUgYXMgc29vbiBhcyB5b3UgYXQgd2hlcmUgSSBwbGFjZWQgdGhlIG51bWJlciAyLCB5b3UgaGl0IGhpbSBhbmQgcnVuIGJlaGluZCBoaW0gYXQgdGhlIHNhbWUgdGltZS4gSXQgdGFrZXMgc29tZSB0aW1pbmcgYnV0IGl0IHByZXR0eSBlYXN5IHRvIGRvLiAKQXVzZ2V6ZWljaG5ldCwgTGFycnkuIFZpZWxlbiBEYW5rIGZyIGRpZSBBdWZuYWhtZSBkZXIgbmV1ZW4gQXJ0aWtlbCBWZXJ6ZWljaG5pcyBUZWNobm9sb2dpZSB1bmQgbWFjaGVuIGVzIGJpcyB6dW0gTWF4aW11bSB6dSBhcmJlaXRlbi4gCkl0IHNlZW1zIGZvb2xpc2ggdG8gbWFrZSBpdCBoYXJkZXIgdGhhbiBpdCBhbHJlYWR5IGlzLiAKMy4gYSBzdGF0ZSBvZiBjb25mbGljdCBiZXR3ZWVuIHR3byBhbnRhZ29uaXN0aWMgZm9yY2VzLCBjcmVlZHMsIG9yIGlkZWFzIGV0Y2NvbiAoIGZyICBmcgpDQiBlbmRlZCB1cCB3aXRoIGEgbmljZSBDYXJoYXJ0dCBiZWFuaWUgYnV0IGtlZXBzIGxldHRpbmcgZXZlcnlvbmUga25vdyAiam9raW5nbHkiIHRoYXQgc2hlIHJlYWxseSB3YW50ZWQgdGhhdCBTdGFyYnVja3MgZ2lmdCBjYXJkIGJlY2F1c2UgQWRhbSBkb2Vzbid0IGV2ZW4gZHJpbmsgY29mZmVlLiBXaXRoIHRlbiBwZW9wbGUgZG9pbmcgYSB3aGl0ZSBlbGVwaGFudCBpdCBoYWQgYmVlbiBhbG1vc3QgNDUgbWludXRlcyB3aGVuIHRoZSBmb29kIGZpbmFsbHkgY29tZXMuIFdlIHdyYXAgdXAgd2hpdGUgZWxlcGhhbnQgYW5kIHN0YXJ0IHRvIGVhdC4gClRoZSBzY2hvb2wgaXMgY2xvc2VkIG9uIEVhc3RlciB3ZWVrZW5kLCBNZW1vcmlhbCBEYXkgd2Vla2VuZCwgSnVseSA0LCBMYWJvciBEYXkgd2Vla2VuZCwgVGhhbmtzZ2l2aW5nIChUaHVyc2RheSwgU2F0dXJkYXksIFN1bmRheSksIENocmlzdG1hcyBFdmUgYW5kIGRheSwgYW5kIE5ldyBZZWFyJ3MgRXZlIGFuZCBkYXkuIApBIGhhdCBpc24ndCBhIGJhZCBpZGVhIHNvIHlvdSBkb24ndCBnZXQgeW91ciBmYWNlIGFic29sdXRlbHkgY29va2VkLi4gCkFjY29yZGluZyB0byBmZWRlcmFsIGF2aWF0aW9uIHJlY29yZHMsIFBhZGRvY2sgd2FzIGlzc3VlZCBhIHByaXZhdGUgcGlsb3QgbGljZW5zZSBpbiBOb3ZlbWJlciAyMDAzLiBUaGUgQWxhc2thIERlcGFydG1lbnQgb2YgRmlzaCBhbmQgR2FtZSBzYWlkIGhlIG9idGFpbmVkIHRocmVlIGRheSwgbm9ucmVzaWRlbnQgZmlzaGluZyBsaWNlbnNlcyBpbiAyMDA5IGFuZCAyMDEwLgoiQXQgdGhhdCB0aW1lIENoZXZyb2xldCB3YXMgbWFraW5nIGEgbGl0dGxlIHNpeCwgYSBncmFuZG1vdGhlciB0eXBlIG9mIGNhciwiIENvbGUgcmVjYWxsZWQuICJOb2JvZHkgaGFkIGV2ZXIgYnVpbHQgYW4gZW50aHVzaWFzdCB0eXBlIG9mIGNhciBhcm91bmQgQ2hldnJvbGV0LiIKQ09NTUVOVEFSWSBBdCB0aGlzIHBvaW50IGluIHRoZSBzZWFzb24gaXQgaXMgY2VydGFpbmx5IG5vIHNlY3JldCB0aGF0IHRoZSBVdGVzIGhhdmUgaGFkIHRoZWlyIG1vc3Qgc3VjY2Vzc2Z1bCB5ZWFyIHlldCBpbiBQYWMgMTIgcGxheS4gVXRhaCBjb25jbHVkZWQgdGhlIHJlZ3VsYXIgc2Vhc29uIHdpdGggYSBoYXJkIGZvdWdodCB3aW4gb3ZlciBDb2xvcmFkbyBvbiB0aGUgcm9hZCB0byBmaW5pc2ggd2l0aCBhbiA4IDQgcmVjb3JkLCBpbmNsdWRpbmcgYSA1IDQgbWFyayBpbiBjb25mZXJlbmNlIHBsYXkuLiAKV2hlbiBzZWxlY3Rpbmcgc29tZXdoZXJlIHRvIGJlZ2luIHBsYXlpbmcgYXQgbm8gY29zdCwgaXQgcGF5cyB0byBsb29rIGludG8gd2hhdCBiZW5lZml0cyBhcmUgb2ZmZXJlZCB0byB0aGUgcGxheWVyIGJ5IHRoZSBwb2tlciByb29tcy4gU29tZSBvZmZlciBwbGF5IG1vbmV5IHRvdXJuYW1lbnRzIG9uIHRvcCBvZiByZWd1bGFyIHRhYmxlIHBsYXkgd2hpY2ggY2FuIGhlbHAgdG8gbGVhcm4gYW5kIHByYWN0aWNlIHlvdXIgdG91cm5hbWVudCBzdHJhdGVnaWVzLiAKSm9lIGFuZCBBbGlzb24gYW5kIHRoZSB0ZWFtIGludml0ZSBldmVyeW9uZSB0byBkcm9wIGJ5IGFuZCBzYXkgaGVsbG8gb24gTWFyY2ggOSB0byBzYW1wbGUgc29tZSBjaGVlc2UgYW5kIHNob3Agc29tZSB0YXN0eSBwb3AgdXBzLiBTcGVuZCAkMjUgYW5kIGdldCBhIGZyZWUgcmV1c2FibGUgQU9DIHNob3BwaW5nIGJhZy4gU3BlbmQgJDEwMCBvciBtb3JlIGFuZCBnZXQgYSBmcmVlIGluc3VsYXRlZCBzaG9wcGluZyBiYWcuIERpc3RpbGxlZCBmZXN0aXZhbCBvbiBBcHJpbCA2IGZyb20gNiA5IHBtIGF0IHRoZSBDcm9hdGlhbiBDdWx0dXJhbCBDZW50cmUsIDM1MjAgQ29tbWVyY2lhbCBEcml2ZSwgVmFuY291dmVyLkluIGFsbCAzOCBhcnRpc2FucyBmcm9tIGFjcm9zcyB0aGUgcHJvdmluY2Ugd2lsbCBzaG93IHRoZWlyIHN0dWZmLCBhbmQgaXQgZG9uZSByaWdodC4gCkV2ZXJ5Ym9keSBzaG91bGQgZG8gY2FyZGlvLCBub3QganVzdCBwZW9wbGUgbG9va2luZyB0byBsb3NlIHdlaWdodC4gVG8gYmUgaG9uZXN0IHRhbGsgdG8gYW55b25lIHdobyBmb2xsb3dzIGEgc3RyaWN0IGxpZnRpbmcgYW5kIGNhcmRpbyBwcm9ncmFtLCBhbmQgdGhleSB3aWxsIGxpa2VseSB0ZWxsIHlvdSBjYXJkaW8gaGFzIHRoZSBiaWdnZXN0IGFmZmVjdCBvbiBob3cgdGhleSBsb29rIGFuZCBtb3JlIGltcG9ydGFudGx5IHRoZWlyIGVuZXJneSBsZXZlbHMuIEkgbGlmdCA2IGRheXMgYSB3ZWVrIGFuZCBkbyBjYXJkaW8gNCBkYXlzIGEgd2VlayBhbmQgY2FyZGlvIGlzIHRoZSBvbmUgdGhpbmcgdGhhdCB3aWxsIG1ha2UgeW91IGZlZWwgbGlrZSBhbiBhYnNvbHV0ZSBraW5nIHRocm91Z2hvdXQgeW91ciBkYXkgdG8gZGF5IGxpZmUuLiAKRXZlbiB0aGUgQ2F0aG9saWMgY2h1cmNoLCByaWZlIHdpdGggY2hpbGQgYWJ1c2UgYW5kIHJhcGUsIGRvZXNuIEFzIGEgbWF0dGVyIG9mIGZhY3QsIENocmlzdGlhbnMgaW4gdGhlaXIgaG9tb3Bob2JpYyByYW50aW5ncyBvZnRlbiBzYXkgdGhhdCBMR0JUIHN1cHBvcnQgaXMgcGFydCBvZiBhIGNvbnNwaXJhY3kgdG8gbm9ybWFsaXplIHRoaXMgdmVyeSB0aGluZyBpbiB0aGUgYmlibGUsIGFuZCBhcmUgcGFzc2lvbmF0ZSBhYm91dCBpdCBlbm91Z2ggc28gdGhhdCB0aGV5IGNvbW1pdCBoYXRlIGNyaW1lcyBvdmVyIGl0LlRoZSBiaWJsZSBhbHNvIHN1cHBvcnRzIGFib3J0aW9uLCBhcyBzaG93biBpbiBOdW1iZXJzIDU6MTEgMzEsIHdoZXJlIGl0IHNheXMgdGhhdCBmb3JjaW5nIGEgbWlzY2FycmlhZ2Ugb24gYSB3b21hbiBpcyBhIGdvb2Qgd2F5IHRvIHByb3ZlIG9yIGRpc3Byb3ZlIGhlciBpbmZpZGVsaXR5LiAKV2l0aCB0aGUgZG93bnR1cm4gdGhlIFF1aW5uIEdyb3VwIHdpbGwgZmluZCBpdCBoYXJkIHRvIG1haW50YWluIHRoZSByYXBpZCBwcm9maXQgZ3Jvd3RoIGl0IGhhcyBhY2hpZXZlZCBpbiByZWNlbnQgeWVhcnMuIEl0IGFubm91bmNlZCBsYXN0IHdlZWsgdGhhdCBpdCBpcyB0byBzdXNwZW5kIGEgMzAwbSBwcm9qZWN0IGluIEdlcm1hbnkgZm9yIGF0IGxlYXN0IGEgeWVhci4gCklzIGl0IHRoZSBsdmwgd2hlbiB5b3UgZmFsbCBkb3duIGJyaWRnIGFuZCBnZXQgc3R1Y2s/IGlmIGl0IGlzIHRoZW4geW91IGdldCB0d28gY29udHJvbGxlcnMgYW5kIG1ha2UgdGhlIHBsYXllciAyIGZhbGwgZG93bi4gTm93IHR1cm4gcGxheXIgMiBjb250cm9sbGVyIG9mZiBhbmQgY2Fycnkgb24sIHlvdSB3b250IGxvc2VhIGxpZmUgYmVjYXVzZSBoZSB3b250IHNwYXduIGFnYWluLiAuIEl0cyBnbGFzc2VzIG9uIGEgZ3V5cyBleWVzLiBUaGlzIHdpbGwgbWFrZSBpdCB3aGVyZSB5b3UgZG9udCBmYWxsIHRocm91Z2ggYXQgYWxsIChGdWxsIEFuc3dlcikKU3Bva2VuIGF1ZGlvIChwb2RjYXN0cyksIDIuIApFcHN0ZWluIHNheXMgaGUgaXMgd2Fsa2luZyB0byB3b3JrLCBldmVuIHRob3VnaCB0aGUgbG9jYXRpb24gd2hlcmUgaGUgaXMgZm91bmQgaXMgbm90IGEgZGlyZWN0IHJvdXRlIHRvIGhpcyBvZmZpY2UuIApUaGUgaW52ZXN0aWdhdGlvbiwgd2hpY2ggV29vZCBlc3RpbWF0ZWQgYmVnYW4gaW4gQXByaWwsIGNvbmNlcm5zIGFsbGVnYXRpb25zIHRoYXQgYWdlbmNpZXMgZW5nYWdlZCBpbiBub24gdHJhbnNwYXJlbnQgcHJhY3RpY2VzLCBpbmNsdWRpbmcgY29sbGVjdGluZyBjYXNoIHJlYmF0ZXMgZnJvbSBtZWRpYSB2ZW5kb3JzIGFuZCBub3QgcGFzc2luZyBpdCBhbG9uZyB0byBjbGllbnRzLiBUaGUgcHJvYmUgd2FzIHNwYXJrZWQgaW4gcGFydCBieSBhIDIwMTYgQU5BIHJlcG9ydCBjb25kdWN0ZWQgYnkgaW5kZXBlbmRlbnQgZmlybSBLMiBJbnRlbGxpZ2VuY2UuIApQcm92aW5jaWFsIGNvdXJ0IEp1ZGdlIFNhbHZhdG9yZSBNYXNjaWEgcmVqZWN0ZWQgZGVmZW5jZSBtb3Rpb25zIHRvIGVuZCB0aGUgY2FzZSBiZWNhdXNlIG9mIHRoZSBsZW5ndGggb2YgdGltZSBpdCBoYXMgdGFrZW4gdG8gcmVhY2ggdGhlIHRyaWFsIHN0YWdlIGFuZCBsYXRlIGZpbGluZyBvZiBwcm9zZWN1dGlvbiBkb2N1bWVudHMuCkdlcmFkZSBlcmxlYmVuIHdpciBlaW4gcGFhciBhdXNnaWViaWdlIFJlZ2VudGFnZSB1bmQgZGFzIEZlaGxlbiBkZXIgZGlyZWt0ZW4gU29ubmVuZWluc3RyYWhsdW5nIG1hY2h0IHNpY2ggZGV1dGxpY2ggYmVtZXJrYmFyLiBCZXNvbmRlcnMgaW4gZGVuIEdlYnVkZW4gZmVobHQgZGllIGpldHp0IGRpZSB0Z2xpY2hlIFNvbm5lbmVuZXJnaWUgdW5kIGRpZSBSdW1lIGtobGVuIGF1cy4gCkkgbGVhcm5lZCBzbyBtdWNoIGFib3V0IHRoZSBnYW1lLCBsaWZlLCBhbmQgZXZlcnl0aGluZyBpbiBiZXR3ZWVuIHRoZSBsYXN0IDkgbW9udGhzLiBJdCBiZWVuIGdyZWF0IGF0IHRpbWVzLCBkcmVhZGZ1bCBhdCBvdGhlcnMgYnV0IEkgd291bGRuIHRyYWRlIHRoaXMgaG9iYnkgZm9yIHRoZSB3b3JsZC4KUmVtZW1iZXI6IGd1biBjb250cm9sIG1lYW5zIHRoYXQgVm9sZGVtb3J0IHdpbnMuIEdvZCBtYWRlIHdpemFyZHMgYW5kIEdvZCBtYWRlIG11Z2dsZXMsIGJ1dCBTYW11ZWwgQ29sdCBtYWRlIHRoZW0gZXF1YWwuLiAKUmFkaW8gRnJlZWRvbSBkb2VzbiBnaXZlIHNldHRsZW1lbnQgZGVmZW5zZSBxdWVzdHMuIEl0IGdpdmVzIHNldHRsZW1lbnQgcmFkaWFudCBxdWVzdHMgb2Ygc2V2ZXJhbCB0eXBlczogcmFpZGVycywgZ3JlZW5za2lucywgZ2hvdWxzLCBraWRuYXBwaW5nLCBjbGVhcmluZyB0aGUgd2F5IGFuZCBhIGZldyBvdGhlcnMgbGlrZSBwcm90ZWN0aW5nIGFydGlsbGVyeSBmcm9tIHRoZSBCb1MuClRoZSBCcml0aXNoIG1hZGUgYSBwb2xpY3kgb2YgdXNpbmcgYSBkaWZmZXJlbnQgcmVsaWdpb24sIGNhc3RlIG9yIGV0aG5pY2l0eSBvZiBwZW9wbGUgdG8gYnJ1dGFsaXplIHRoZWlyIHN1YmplY3RzLiBZb3UgZGVzY3JpYmUgYW4gaW5jaWRlbnQgd2hlcmUgU2lraCBzb2xkaWVycyB3ZXJlIHVzZWQgdG8gbWFzc2FjcmUgTXVzbGltcywgYnV0IHRoZXJlIGFyZSBwbGVudHkgb2YgaW5jaWRlbnRzIHdoZXJlIE11c2xpbSBzb2xkaWVycyB3ZXJlIHVzZWQgdG8gbWFzc2FjcmUgSGluZHVzIG9yIFNpa2hzLiBBdCBKYWxpYW53YWxhIEJhZ2ggdGhleSBjYWxsZWQgaW4gYSBHb3JraGEgcmVnaW1lbnQgdG8gbW93IGRvd24gaHVuZHJlZHMgb2YgSGluZHUgYW5kIFNpa2ggbWVuLCB3b21lbiBhbmQgY2hpbGRyZW4uCkhlIGFkbWl0dGVkIG9uIFR1ZXNkYXkgdGhhdCB0aGUgbW92ZSB3YXMgYSB0YWN0aWMgdG8gcHJlc3N1cmUgYnJvdGhlbCBvd25lciBKb2UgUmljaGFyZHMgdG8gcmVtb3ZlIHNpZ25zIGF0IHRoZSBnYXRld2F5IHRvIFBhaHJ1bXAgdGhhdCBzaG93IHNjYW50aWx5IGNsYWQgd29tZW4gaW4gc3VnZ2VzdGl2ZSBwb3Nlcy4iVGhlIHdob2xlIGlzc3VlIHdhcyBhYm91dCB0aGUgc2lnbnMsIiBOZXRoIHNhaWQgaW4gYW4gaW50ZXJ2aWV3IGFmdGVyIHRoZSB2b3RlLiAKTWlrZSBLbGFlc2VyIGFjY2lkZW50YWxseSBnYXZlIHRoZW0gdG8gbWUgaW4gMjAwMyBiZWZvcmUgaGUga25ldyB0byBrZWVwIGl0IGNvdmVyZWQuIChMZXJveSBIdWdoZXMgd2FzIGNvcm9uZXIgaW4gMTk2NyBhbmQgTUsgaG9sZHMgaGlzIGZpbGVzLikuIApUeXBpY2FsbHksIExhbmRsb3JkIHdhbnRzIHRlbmFudCdzIG1vbnRobHlpbmNvbWUgYmVmb3JlIHRheGVzdG8gYmUgYXBwcm94aW1hdGVseSAzIHRpbWVzIHRoZSBtb250aGx5IHJlbnQuIEZvciBleGFtcGxlLCBpZiByZW50IGlzICQxLDAwMCB0aGFuIHRlbmFudCdzIG1vbnRobHkgaW5jb21lIHNob3VsZCBiZSBhdCBsZWFzdCAkMywwMDAgdG8gY292ZXIgcmVudCBhbmQgb3RoZXIgcGVyc29uYWwgZXhwZW5zZXMuIApMb2NhdGVkIGF0IHRoZSBib3R0b20gb2YgdHdvIGZsaWdodHMgb2Ygc3RhaXJzLCBTaG9yZSBMZWF2ZSBzaXRzIGxpa2UgYSBzdW5rZW4gdHJlYXN1cmUgaW4gdGhlIGJhc2VtZW50IG9mIDM0NSBIYXJyaXNvbiBBdmUuLCBhIGx1eHVyeSBhcGFydG1lbnQgY29tcGxleCBhY3Jvc3MgdGhlIHN0cmVldCBmcm9tIEJhciBNZXp6YW5hLiBXaXRoIHdhbGxzIHBhaW50ZWQgYSBncmFkdWFsbHkgZGFya2VyIHNoYWRlIG9mIGJsdWUgYXQgZWFjaCBsZXZlbCwgdGhlIHN0YWlyd2VsbCBiZWNvbWVzIGEgbWFrZXNoaWZ0IG9jZWFuOyBhIGRlZXAgbmF2eSBibHVlIHN1cnJvdW5kcyB0aGUgYmFyJ3MgZW50cmFuY2UgdG8gZXZva2UgdGhlIHNlYSBmbG9vci4uIApJIGRvbid0IGV2ZW4gd2FudCB0byBnZXQgaW50byBhbGwgdGhpcyB3aXRoIGhpbSBjYXVzZSBJJ20gZGVhbGluZyB3aXRoIGZhbWlseSBkcmFtYSBhbmQgdGhlIGRlYXRoIG9mIG15IGdyYW5kZmF0aGVyLCBidXQgb2YgY291cnNlIHRoaXMgaXMgcmVhbGx5IGh1cnRpbmcgbWUgdG9vLi4gCkl0IGxpa2UgdGhhdCBndXkgd2hvIGtlZXBzIHRoaW5raW5nIGhpcyBnaXJsZnJpZW5kIHdpbGwgImdldCBiZXR0ZXIgb25lIGRheS4iIFNoZSBhIGhvLCBtYW4uIApJIHN0aWxsIGFmcmFpZCB0byBkcml2ZSBhbG9uZSwgb3IgYmUgYWxvbmUsIGFuZCByZWxpZ2lvdXNseSBjaGVjayBteSBsdWcgbnV0cy4uIApJdCdsbCBnZXQgZml4ZWQgd2l0aCB0aW1lIGluIHRoZSBzeXN0ZW0gYnV0IGFsc28gbW9yZSB0aW1lIHBsYXlpbmcgdG9nZXRoZXIgc28gdGhlc2UgbWlzdGFrZXMgd2lsbCBiZSBsZXNzIGNvbW1vbi4yKSBZb3UgZG8gcmVhbGl6ZSBwYXlpbmcgTWFjaGFkbyB1bnRpbCBoZSdzIDM2IHdvdWxkIGJlIGZpbmUgYmVjYXVzZSBJIHdvdWxkIHNheSwgInlvdSB0cmllZCB0byBhY3F1aXJlIHRvcCB0YWxlbnQgc28gSSBoYXZlIG5vIGlzc3VlLiIgSSBtZWFuIGhlbGwsIHdlJ3ZlIGRvbmUgaXQgd2l0aCBlbGxzYnVyeSBhbmQgSSdtIG5vdCB1cHNldC4gU2hpdCBoYXBwZW5zIGFuZCBhZ2FpbiwgdGhlIG11bHRpIGJpbGxpb24gZG9sbGFyIGVudGVycHJpc2Ugcm9sbHMgb24gdHVybmluZyBtYXNzaXZlIHByb2ZpdHMgICBhbmQgSSBtaWdodCBhZGQgICBzcGVuZGluZyBpdCBvbiBwbGF5ZXJzLiAoT3RoZXIgdGVhbXMgZG9uJ3Qgd2hpY2ggaXMgbW9yZSBvZiBteSBwb2ludCBhYm91dCBzcGVuZGluZyBtb25leSkuCjIgYy4gIGMuIGRlIGxldnVyZSBjaGltaXF1ZQpJbCB5IGEgcGx1cyBkZSAyMDAgc2Fsb25zIGRlIG1hc3NhZ2Ugcm90aXF1ZSAgTW9udHJhbC4gVG91dGVzIGxldXJzIGFjdGl2aXRzIG91IHByZXNxdWUgdm9udCBjb250cmV2ZW5pciAgbGEgbm91dmVsbGUgbG9pIHN1ciBsYSBwcm9zdGl0dXRpb24gOiB0ZW5pciB1bmUgbWFpc29uIGRlIGRiYXVjaGUsIGZhaXJlIGRlIGxhIHB1YmxpY2l0IHBvdXIgb2ZmcmlyIGRlcyBzZXJ2aWNlcyBzZXh1ZWxzIGV0LCBzdXJ0b3V0LCBvYnRlbmlyIGRlcyBzZXJ2aWNlcyBzZXh1ZWxzIGNvbnRyZSBydHJpYnV0aW9uLiBNbWUgY2hvc2UgcG91ciBsZXMgYWdlbmNlcyBkJ2FjY29tcGFnbmVtZW50IHF1aSByZW9pdmVudCBsZXMgY2xpZW50cyBkYW5zIGRlcyBsaWV1eCBwcnZ1cyAgY2V0dGUgZmluIHBsdXR0IHF1ZSBkJ29mZnJpciB1biBzZXJ2aWNlICBkb21pY2lsZS4gRGFubnkgQnJhbiBhIHZvdWx1IHNhdm9pciBjZSBxdSdlbiBwZW5zZW50IGxlcyB0cmF2YWlsbGV1c2VzIGR1IHNleGUgZXQgbGV1cnMgY2xpZW50cy4KWW91IGNvdWxkIGVhc2lseSB3YWxrIHRoZXJlIGZyb20gSW5zYWRvbmcuIE9yIGlmIHlvdSBhcmUgd29ycmllZCBhYm91dCBmcmVlemluZyB0byBkZWF0aCwgaXQgb25lIHN1YndheSBzdG9wLiAKSm9pbiAzMlJlZCBTdGFydCBQbGF5aW5nIE5vdwpJbiAyMDA1LCA5MyBwZXIgY2VudCBvZiBhbnMgb3duZWQgaG9tZXMsIG9mIHdoaWNoIDg4IHBlciBjZW50IHdlcmUgYWZmb3JkYWJsZSBwdWJsaWMgaG91c2luZyBmbGF0cy4gVGhpcyBoaWdoIHJhdGUgb2YgaG9tZSBvd25lcnNoaXAsIGNvdXBsZWQgd2l0aCBhY2N1bXVsYXRlZCBDUEYgc2F2aW5ncywgaGFzIG1hZGUgYW5zIHN1YnN0YW50aWFsIHN0YWtlaG9sZGVycywgd2hpY2ggZW5hYmxlZCB0aGUgUGVvcGxlIEFjdGlvbiBQYXJ0eSB0byBjb25zb2xpZGF0ZSBpdHMgcG93ZXIgYmFzZS4gCkFsbW9zdCBoYXBwZW5lZCB0byBteSBkYXVnaHRlciB3aGVuIHNoZSB3YXMgMiBhbmQgd2Ugd2VyZSB2aXNpdGluZyBGbG9yaWRhLiBXZSBhcmUgZnJvbSBBbGJlcnRhIHNvIGhhZCBsaWtlIG5vIGV4cGVyaWVuY2Ugd2l0aCB0aGUgb2NlYW4sIG9uZSBtaW51dGUgd2Ugd2VyZSBvbiB0aGUgZWRnZSBvZiB0aGUgd2F0ZXIgc3BsYXNoaW5nIGFyb3VuZCB0aGVuIGl0IHdhcyBsaWtlIGEgd2F0ZXJ5IGhhbmQgd2VudCBvdmVyIG15IGRhdWdodGVyIGFuZCBncmFiYmVkIGhlciBhbmQgc3RhcnRlZCBwdWxsaW5nIGhlciBhd2F5LiBJdCB3YXMgdGVycmlmeWluZyBzZWVpbmcgaGVyIGxpdHRsZSBmYWNlIHVuZGVyIHRoZSB3YXRlciBiZWluZyBwdWxsZWQgYXdheSBmcm9tIG1lLiAKSGUgaGFzIG5ldmVyIHRha2VuIGl0IG9mZi4gVGhhdCB0cmlidXRlIGRvZXNuJ3QgYmVnaW4gdG8gZW5jb21wYXNzIHdoYXQgSm9yZGFuJ3MgcmFkaWFuY2UgbWVhbnQgdG8gYSB5b3VuZ3N0ZXIgd2hvIGRyZWFtZWQgb2YgZmluZGluZyBhIGJldHRlciBsaWZlIHRocm91Z2ggYmFza2V0YmFsbC4gCkREQiBOZXcgWW9yayBpcyB3b3JraW5nIHdpdGggQ290dG9uIEluY29ycG9yYXRlZCBhbmQgY2xvdGhpbmcgYnJhbmQgYW5kIHJldGFpbGVyIE9wZW5pbmcgQ2VyZW1vbnkgb24gYSBuZXcgdmlkZW8gY2VsZWJyYXRpbmcgY290dG9uIFQgc2hpcnRzIGFzIHRoZSAiY2FudmFzIG9mIHNlbGYgZXhwcmVzc2lvbi4iIFRoZSBjb3R0b24gYnJhbmQgYW5kIGNsb3RoaW5nIHN0b3JlIGFsc28gY29sbGFib3JhdGVkIG9uIGEgbGltaXRlZCBlZGl0aW9uIHNoaXJ0IHdpdGggYSBibGFjayBib3ggb24gdGhlIGZyb250IHRvIGFsbG93IGZvciBjdXN0b21pemF0aW9uLiAiVGhlIE1vc3QgUG93ZXJmdWwgVGVlIiB2aWRlbyBmZWF0dXJlcyBoaXN0b3JpY2FsIGZvb3RhZ2UgYW5kIGluZGl2aWR1YWxzIHVzaW5nIHRoZSBUIHNoaXJ0IGZvciB0aGVpciBvd24gbWVzc2FnZXMsIGxpa2UgIk5vIG1vcmUgY2hpbGQgc29sZGllcnMiIG9yICJHb2QgZG9lc24ndCBibGluay4iLiAKRG9lcyBub3QgZXF1YWwgcGVhY2UuIApJbiBhZGRpdGlvbiwgdGhleSBhcmUgYWxzbyBjb2xsZWN0ZWQgYnkgc2VydmljZSBtZW1iZXJzLiBJbiBwcmFjdGljZSwgY2hhbGxlbmdlIGNvaW5zIGFyZSBub3JtYWxseSBwcmVzZW50ZWQgYnkgdW5pdCBjb21tYW5kZXJzIGluIHJlY29nbml0aW9uIG9mIHNwZWNpYWwgYWNoaWV2ZW1lbnQgYnkgYSBtZW1iZXIgb2YgdGhlIHVuaXQuIApJdHMgYSByZWZsZWN0aW9uIG9mIHNvY2lldGllcyBsYXllcnMgb2YgcHJvamVjdGlvbi4gCkxvc3QganVzdCBhcm91bmQgdGhlIHNhbWUgYW1vdW50IG9uIGJsYWNramFjayB0b2RheSBhZnRlciBhbG1vc3QgYSBtb250aCBvZiBzdGF5aW5nIGNsZWFuLiAKSSBhbHNvIHZvbHVudGVlcmVkIHRvIGNhcnJ5IHRoZSBib2R5IGF0IHRoZSBzdGFydCwgYW5kIEkgc2F3IHRoYXQgeW91IGhhdmUgYW5vdGhlciBvcHRpb24uIEJ1dCBJIGNvdWxkbiB0YWtlIGl0LgpEZWZpbml0ZWx5LiAKSXQgd2FzIGEgZ29vZCBuZWlnaGJvcmhvb2QgYW5kIG5vdyBpdHMgcHJvc3RpdHV0ZXMsIFR3ZWFrZXJzICwgYW5kIHdoaXRlIHRyYXNoLiBBIGxvdCBvZiBteSBmcmllbmRzIEdyYW5kIHBhcmVudHMgaGF2ZSBzZXJpb3VzIGNhc2VzIG9mIG1ldGggbW91dGggYW5kIHRoZSBraWRzIGluIG15IG5laWdoYm9yaG9vZCBkb24gaGF2ZSBnb29kIHBhcmVudHMsIGFuZCBhbHRob3VnaCBNYXJpanVhbmEgaXNudCBiYWQgb24gdGhlIGZ1bGx5IGRldmVsb3BlZCBhZHVsdCBicmFpbiwgaXQgaXMgYmFkIG9uIHRoZSBicmFpbiBvZiBhIDQgeWVhciBvbGQuIApJZiB3ZSBjYW4gY29udmluY2UgdGhlbSB0byBjb21lIGluc2lkZSwgdGhlbiB3ZSB3aWxsIGhlbHAgdGhlbSB0aGVyZS4gCkNyaXQgcGFyIDogQm9uaGV1ciBkdSBKb3VyICAyMC8wMS8yMDE4CkJ1dCBzeW1ib2xpYyB2aW9sZW5jZSBpc24gZnVubnkuIEl0IGRhbmdlcm91cy4gSXQgcG93ZXJmdWwuIEFuZCBpdCBtdXN0IGJlIHRha2VuIHNlcmlvdXNseS4gTHluY2hpbmcgUHJlc2lkZW50IE9iYW1hIGxpa2VuZXNzIGlzIGFuIGFjdCBvZiB2aW9sZW5jZSBhZ2FpbnN0IGFsbCBCbGFjayBBbWVyaWNhbnMgYW5kIHVsdGltYXRlbHkgYWdhaW5zdCBhbGwgQW1lcmljYW5zIHdobyBpbWFnaW5lIGEgZnV0dXJlIG5vdCBkb21pbmF0ZWQgYnkgdGhlIHZpb2xlbmNlIG9mIHNsYXZlcnkgYW5kIHRoZSBzdHJ1Y3R1cmFsIGFuZCBzeW1ib2xpYyByYWNpc20gdGhhdCBoYXZlIGJlZW4gbGVmdCBpbiBpdHMgd2FrZS4KVGhlIGJpZ2dlc3QgdGhpbmcgYnkgZmFyIHRoYXQgSSBleHBlY3QgNTAvMTAwIHBsYXllcnMgZG8gdGhhdCAxLzIgcGxheWVycyBhcmVuIGRvaW5nIGlzIGZvbGRpbmcgaW5zdGVhZCBvZiBsaW1waW5nLi4gCkJ1dCBTY2FsaWEgcmVqZWN0ZWQgdGhhdCB2aWV3LiAKTmVzdGxlZCBpbiB0aGUgbm9ydGhlcm4gcmVhY2hlcyBvZiB0aGUgSW5zaWRlIFBhc3NhZ2UsIHRoZSBBbGFza2FuIGNhcGl0YWwgd2FzIGZvdW5kZWQgZHVyaW5nIGEgZ29sZCBydXNoIGluIDE4ODAuIApUaGV5IG9mZmVyIGRldGFpbGVkIGhvcnNlIHJhY2luZyBzdGF0aXN0aWNzIGFuZCByZXN1bHRzIHNlcnZpY2UgdGhhdCBjb21lcyBhbG9uZyB3aXRoIGEgYmV0dGluZyBuZXdzIHNlY3Rpb24gd2hlcmUgYWxsIHRoZSBsYXRlc3QgYmV0dGluZyBuZXdzIGFyZSBhdmFpbGFibGUuIApQbGF5IGNvbnRpbnVlcyB0byB0aGUgbGVmdCB3aXRoIGVpdGhlciBjYWxscyAodG8gZXF1YWwgdGhlIHByZXZpb3VzIG9wcG9uZW50J3MgYmV0KSwgcmFpc2VzICh0byBiZXQgaGlnaGVyIHRoYW4gdGhlIHByZXZpb3VzIG9wcG9uZW50KSwgb3IgZm9sZHMgKHRvIHJlc2lnbikuIApBbSBJIHR1cm5lZCBvbiBieSBteSBwYXJ0bmVycyBib2R5IGRpcmVjdGx5LCBvciBpcyBpdCBiZWNhdXNlIEkgYXR0cmFjdGVkIHRvIHRoZW0gYXMgYSBwZXJzb24gYW5kIHRoZW4gdGhlaXIgYm9keSBqdXN0IGdvZXMgd2l0aCBpdD8gRGlmZmVyZW50IHBlb3BsZSB3b3VsZCBsaWtlbHkgaGF2ZSBkaWZmZXJlbnQgb3BpbmlvbnMgb24gdGhpcy4gCkNhbid0IGxpZSBpdCB3YXMgc28gcmV3YXJkaW5nIHRvIHNlZSBoaXMgbGlmZSBnbyBkb3duIGluIGZsYW1lcyB3aGlsZSBzaGUgYmFzaWNhbGx5IHR1cm5lZCBoZXIgZW50aXJlIGxpZmUgaW50byBzb21ldGhpbmcgYmVhdXRpZnVsLiBXaGVuIEkgZmlyc3Qgc3RhcnRlZCB3YXRjaGluZywgSSBkaWRuJ3QgdGhpbmsgaXQgd291bGQgYmUgc28gY2xlYXIgd2hvIHdhcyBseWluZyBhbmQgd2hvIHdhcyB0ZWxsaW5nIHRoZSB0cnV0aC4gCkJ1dCBhbHNvLCBldmVuIG11c2ljYWwgc2NhbGVzIGFyZSBmYW1pbGlhciB0byBwZW9wbGUuIApBIGF1Y3VuIGxpZW4gZW50cmUgbGUgdmFjY2luIGNvbnRyZSBsYSByb3VnZW9sZSBldCBsCkl0IGhhcyB0aGUgc2FtZSBoYWxmIGxpZmUgZm9yIHJlIGRvc2luZyAoMjAgNDAgbWludXRlcyBkZXBlbmRpbmcgb24gYSBidW5jaCBvZiBmYWN0b3JzKS4gClRoZSB0cnV0aCBpcywgeW91IGxvb2tlZCBhdCBhIEtRb3MgZnJvbSBlYXJseSBwb3NpdGlvbiBhbmQgdGhlbiBoYWQgdG8gYW5zd2VyIGEgcmFpc2UgZnJvbSB0aGUgdW5wcmVkaWN0YWJsZSBwbGF5ZXIgdHdvIHNlYXRzIGRvd24uIFlvdSB0aG91Z2h0IGl0IHdhcyBhIGdvb2QgbW92ZSwgYnV0IHlvdSBhcmUgaGVhZHMgdXAgd2l0aCBLUW9zLCBoZSBoYXMgcG9zaXRpb24gb24geW91IGFuZCB0aGUgZmxvcCBjb21lcyBLcyA5cyAyaC4gCk11aWxlbmJ1cmcgc2FpZCBpdCB3aWxsIGNyZWF0ZSBtb3N0IGltcG9ydGFudCBzdHJhdGVnaWMgcGFydG5lcnNoaXBpbiB0aGUgYWVyb3NwYWNlIGluZHVzdHJ5LiBUaGUgbmVnb3RpYXRpb25zIG1heSBiZSBhZmZlY3RlZCBieSB0aGUgb3V0Y29tZSBvZiB0aGUgQnJhemlsaWFuIGVsZWN0aW9uLCBzZXQgZm9yIFN1bmRheS4KQ29jb251dCBXYXRlcgpJIGFtIG5vdCBmaWdodGluZyB5b3Ugb3ZlciB5b3VyIHRpdGxlLCB0cnVseS4gRW5jb3VyYWdpbmcgdGhlIGNvbW11bml0eSB0byBsaXZlIHVwIHRvIHRoZSBzdWJyZWRkaXRzIHNpZGViYXIsICJhZHZhbmNpbmcgdmlld3BvaW50cyB0aGF0IGNoYWxsZW5nZSB0aGUgbmFycmF0aXZlcyBwcmVzZW50ZWQgYnkgdGhlIHJ1bGluZyBjbGFzc2VzLiAiIExhbmd1YWdlIGxpa2UgImp1bmtpZSIgaXMgbGl0ZXJhbGx5IHJ1bGluZyBjbGFzcyBuYXJyYXRpdmUuCldpdGggVHVybml0aW4sIGhlIHdvdWxkIGhhdmUgYmVlbiBjYXVnaHQuLiAKTG9vayB0aHJvdWdoIHNvbWUgb2YgdGhlaXIgcmV2aWV3cy4gVGhpbmdzIG1heSBoYXZlIGNoYW5nZWQgbm93LCBidXQgdGhleSB3ZXJlIGNoYXJnZWQgd2l0aCBhbmltYWwgbmVnbGVjdCBhIGZldyB5ZWFycyBiYWNrLiBBcyBmb3IgbXkgZG9nLCBteSBmcmllbmQgd2FzIGZvc3RlcmluZyBoaW0gYmVmb3JlIHdlIGV2ZW50dWFsbHkgYWRvcHRlZCBoaW0uIENhcm9sIGhhcyBiZWVuIGZvc3RlcmluZyBoaW0gc2V2ZXJhbCB3ZWVrcywgYnV0IHdhcyBzY2hlZHVsZWQgdG8gZ28gb24gdmFjYXRpb24gYW5kIGNvdWxkbid0IGdldCBhaG9sZCBvZiBhbnlvbmUgaW4gdGhlIG9mZmljZSBhcyB0byB3aGF0IHNoZSB3YXMgc3VwcG9zZWQgdG8gZG8gd2l0aCB0aGlzIGRvZyBkdXJpbmcgaGVyIHZhY2F0aW9uLiBObyBvdGhlciBmb3N0ZXIgaG9tZSBoYWQgYmVlbiBzZXQgdXAgZm9yIGhpbS4gVGhlIG5pZ2h0IGJlZm9yZSBzaGUgd2FzIHN1cHBvc2VkIHRvIGxlYXZlLCBzaGUgY2FsbGVkIG1lLCBkZXNwZXJhdGUgdG8gZmluZCBzb21lb25lIHJlc3BvbnNpYmxlIHRvIHRha2UgdGhlIGRvZy4gQ2Fyb2wgbGVmdCBteSBuYW1lIGFuZCBudW1iZXIgb24gdGhlIHZvaWNlbWFpbCBhdCB0aGUgRnVyZXZlciBIb21lcyBvZmZpY2UgdGVsbGluZyB0aGVtIHNoZSBoYWQgbm8gb3RoZXIgY2hvaWNlIGJlY2F1c2Ugb2YgdGhlaXIgbGFjayBvZiBjb250YWN0IGFuZCBkaXJlY3Rpb24uClNoZXJlbGUgTW9vZHkgTmV3cyBDb3JwIGpvdXJuYWxpc3QgU2hlcmVsZSBNb29keSBzdGFydGVkIGhlciBjYXJlZXIgaW4gdGhlIG1lZGlhIG1vcmUgdGhhbiAyNSB5ZWFycyBhZ28uIFNoZSByZXBvcnRzIGFjcm9zcyBhIGJyb2FkIHJhbmdlIG9mIHRvcGljcyBpbmNsdWRpbmcgYW5kIGhhcyBhbiBleHRlbnNpdmUgYmFja2dyb3VuZCBpbiBkYXRhIGFuYWx5c2lzIGFuZCBzdGF0aXN0aWNzIGJhc2VkIGpvdXJuYWxpc20uIFNoZSBhbHNvIHNwZWNpYWxpc2VzIGluIG9waW5pb24gYW5kIGZlYXR1cmUgd3JpdGluZyBvbiBnZW5kZXJlZCB2aW9sZW5jZSBhbmQgd29tZW4ncyBpc3N1ZXMuIFNoZXJlbGUgaXMgdGhlIHJlY2lwaWVudCBvZiB0aGUgMjAxOCBCYW5kVCBXb21lbiBpbiBNZWRpYSBTb2NpYWwgQ2hhbmdlIE1ha2VyIEF3YXJkIGFuZCBoYXMgbXVsdGlwbGUgQ2xhcmlvbiBhbmQgV2Fsa2xleSBPdXIgV2F0Y2ggam91cm5hbGlzbSBleGNlbGxlbmNlIGF3YXJkcyBmb3IgaGVyIHdvcmsgcmVkdWNpbmcuCjE1IENvbW1lbnRzCk1ha2UgdGhpcyBkaXNjb3ZlcnksIFNlcmhhbiBhbmQgY29sbGVhZ3VlcyBkZWNvbnN0cnVjdGVkIHRoZSBiaW9zeW50aGV0aWMgcGF0aHdheSBmb3IgbWFyZXNpbiBiaW9zeW50aGVzaXMgYW5kIGZvdW5kIHRoYXQgaHVtYW4gbWFjcm9waGFnZXMgYXJlIHJlc3BvbnNpYmxlIGZvciBjb252ZXJ0aW5nIERIQSB0byB0aGUgbm92ZWwgZXBveGlkZSBpbnRlcm1lZGlhdGUgMTRTIGVwb3h5IG1hcmVzaW4uIApUaGVuIHRoZXJlJ3MgdGhlIHBvc3NpYmlsaXR5IG9mIGNhc2hpbmcgaW4gb24gYSB0ZWxsIGFsbC4gUHVibGlzaGVyIFNpbW9uIFNjaHVzdGVyIHBhaWQgSGlsbGFyeSBDbGludG9uICQxNCBtaWxsaW9uIGZvciBoZXIgMjAxNCBtZW1vaXIgIkhhcmQgQ2hvaWNlcy4iCklmIHlvdSBhdCBob21lIEkgd291bGQgaW1hZ2luZSB5b3VyIFNPIHdvbiBoYXZlIGFuIGlzc3VlIHRlbGxpbmcgeW91IGlmIHdoYXQgeW91IGRvaW5nIGlzIGh1cnRpbmcgdGhlbS5JZiB5b3Ugd29yayB0b28gZGVlcCBpbnRvIHRoZSBtdXNjbGUgeW91IGNhbiBicnVpc2UgdGhlbSBvciBjYXVzZSBtaW5vciB0aXNzdWUgZGFtYWdlLiBJZiB5b3Ugd29yayB0byBoYXJkIG92ZXIgdGhlIGtpZG5leXMgaXQgd2lsbCBodXJ0Lk5vdGhpbmcgcmVhbGx5IGxpZmUgdGhyZWF0ZW5pbmcuU28gd2F0Y2ggdGhlaXIgcG9zdHVyZSwgaWYgeW91IG5vdGljZSBhbnkgc3F1aXJtaW5nLCBicmVhdGggaG9sZGluZyBvciBzaGFycCBpbnRha2VzIG9mIGJyZWF0aCAoanVzdCB0aGluayBhYm91dCBhbGwgdGhlIHRoaW5ncyB5b3UgZG8gd2hlbiBzb21ldGhpbmcgaHVydHMgeW91KSBhZGp1c3QgeW91ciBwcmVzc3VyZS4gClVubGlrZSB0aGUgc2V0dGxlcnMgaW4gQ2FsaWZvcm5pYSwgdGhlIE1vcm1vbiBzZXR0bGVycyBkaWRuIHB1cmNoYXNlIHRoZWlyIGxhbmQgb3IgbWFrZSBpbW1pZ3JhdGlvbiBhcnJhbmdlbWVudHMgd2l0aCB0aGUgTWV4aWNhbiBnb3Zlcm5tZW50LiBNZXhpY28gd2FzIGFjdHVhbGx5IHF1aXRlIGNvbmNlcm5lZCBhYm91dCBhbGwgdGhlIGZvcmVpZ24gc2V0dGxlcnMgaW50byB0aGVpciB0ZXJyaXRvcnkgYW5kIHBhc3NlZCBsYXdzIHJlcXVpcmluZyBpbW1pZ3JhbnRzIHRvIGJlY29tZSBjaXRpemVucyBhbmQgY29udmVydCB0byBDYXRob2xpY2lzbS4gSW4gMTg0NiBNZXhpY2FuIEdvdmVybm9yIEpvc2UgQ2FzdHJvIHByb2NsYWltZWQgdGhhdCB0aGUgcHVyY2hhc2Ugb3IgYWNxdWlzaXRpb24gb2YgbGFuZCBieSBmb3JlaWduZXJzIHdobyBoYWQgbm90IGJlZW4gbmF0dXJhbGl6ZWQgYXMgTWV4aWNhbnMgIndpbGwgYmUgbnVsbCBhbmQgdm9pZCwgYW5kIHRoZXkgd2lsbCBiZSBzdWJqZWN0IHRvIGJlIGV4cGVsbGVkIHdoZW5ldmVyIHRoZSBjb3VudHJ5IG1pZ2h0IGZpbmQgaXQgY29udmVuaWVudC4iCjE5MjAgY2Vuc3VzIGd1aWRlbGluZXMpIGlzIG9mZmVyZWQgdG8gdGhlIGFkbWlzc2lvbnMgcGVvcGxlOi4gCkxvb2sgaW5zaWRlIHRoaXMgYm9vay4gCkJvdXF1ZXQgZ2FybmkgOiBwZXJzaWwsIGxhdXJpZXIgZXQgdGh5bS4KMi4gdGhlIHN0YXRlIG9mIGJlaW5nIGNvbmZyb250ZWQuCktheWUgaXNuJ3Qgd3JvbmcuIEZyb20gc2hpcnRzIHRvY29mZmVlIG11Z3MgdG8gdGF0dG9vcywgQ2hpY2Fnb2FucyBoYXZlIHByb3VkbHkgZW1ibGF6b25lZCB0aGVpciBibHVlIGJhcnMgYW5kIHJlZCBzdGFycyAgIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBjaXR5J3MgZ2VvZ3JhcGh5IGFuZCBoaXN0b3J5ICAgb24gdmlydHVhbGx5IGFueSBhdmFpbGFibGUgY2FudmFzcyBhY3Jvc3MgdGhlIGNpdHkuIEluIDIwMTMsIENoaWNhZ28gbWFnYXppbmUgY2l0ZWQgdGhlIGZsYWcncyAic2ltcGxlLCBib2xkIGRlc2lnbiIgYXMgdGhlIG1haW4gcmVhc29uIGl0IGhhZCBiZWNvbWUgc28gdWJpcXVpdG91cy4KQW5kIEkgc2VlIGl0IGhhcHBlbmluZyBmcm9tIHR3byBncm91cHMgb2YgcGVvcGxlOiBvbmUgaXMgQ0VPcyBvZiBwdWJsaWNseSBsaXN0ZWQgY29tcGFuaWVzIHdobyBhcmUgb3V0cmFnZWQgYnkgaG93IHRoZWlyIHNoYXJlcyBhcmUgdHJhZGVkIG9uIHRoZSBleGNoYW5nZXMsIGFuZCBzZWNvbmQgaXMgYmlnIG11dHVhbCBmdW5kcyBhbmQgcGVuc2lvbiBmdW5kcyBpbnZlc3RvcnMgd2hvIGhhdmUgdGhlIHRydXN0IG9mIHNtYWxsIGludmVzdG9ycy4gClBsZWFzZSBzZWUgb3VyIEZBUSBmb3IgY29tbW9uIHF1ZXN0aW9ucywgbG9jYWxzIHRpcHMsIGZvb2QgcmVjb21tZW5kYXRpb25zLCBwbGFjZXMgdG8gZ28gYW5kIG90aGVyIGV4Y2VsbGVudCBzdWdnZXN0aW9ucwpIb3cgdGhlIHdlYXRoZXIgb3ZlciB0aGVyZT8iVGhlbiB5b3UgaGF2ZSByZWNvcmRpbmdzIG9mIGhlciBzYXlpbmcgYXdmdWwgdGhpbmdzISBPciBzaGUga2VlcCBoZXIgbmFzdHkgY29tbWVudHMgdG8gaGVyc2VsZi4gQnV0IGlmIHlvdSBsaXZlIGluIGEgb25lIHBhcnR5IHN0YXRlLCBqdXN0IHN0aWNrIHRoZSBhcHAgb24geW91ciBkZXZpY2VzIGFuZCBtYWtlIHN1cmUgaXQgc2V0IHRvIHJlY29yZCBldmVyeSBpbmNvbWluZyBjYWxsLiAKVGhlIHdob2xlIHJlYXNvbiB0aGlzIGlzIGdvaW5nIHRvIGNvdXJ0IGlzIG5vdCBiZWNhdXNlIHRoZSBzdHVkZW50IGNvZGUgaXNuJ3QgY2xlYXIsIGJ1dCB0aGF0IHRoZSBzdHVkZW50IGNvZGUgaXRzZWxmIGlzIHVuanVzdCBpbiBpdHMgaGFuZGxpbmcgb2YgdGhlc2UgY2FzZXMuQWxzbywgSSdtIGdvaW5nIHRvIHBvaW50IHlvdSB0byB0aGUgVW5pdmVyc2l0eSBvZiBUZXhhcyBmb3IgYW4gaWRlYWwgaGFuZGxpbmcgb2YgdGhlc2UgbWF0dGVycy4gQWZ0ZXIgYSBTZW5pb3Igd2FzIGZvdW5kIHRvIGhhdmUgc2V4dWFsbHkgYXNzYXVsdGVkIGFub3RoZXIgc3R1ZGVudCwgaGUgd2FzIHN0aWxsIGdyYW50ZWQgaGlzIGRpcGxvbWEsIHdpdGggdGhlIHN0aXB1bGF0aW9uIHRoYXQgVVQgd291bGQgbmV2ZXIgYWRtaXQgaGltIGludG8gYSBncmFkdWF0ZSBwcm9ncmFtLiAKTUlBTUkgKENCU01pYW1pKSBUaG9zZSBzZWxsaW5nIGZpcmV3b3JrcyBhcm91bmQgTWlhbWkgRGFkZSBnb3QgdmlzaXRzIGZyb20gTWlhbWkgRGFkZSBGaXJlIFJlc2N1ZSBpbnNwZWN0b3JzIGNvbmR1Y3Rpbmcgc3dlZXBzIGZvciBwb3NzaWJsZSBpbGxpY2l0IGZpcmV3b3Jrcy4gYW5kIHZpc2l0ZWQgNDQgbG9jYXRpb25zIGFjcm9zcyB0aGUgY291bnR5IHdoZXJlIGZpcmV3b3JrcyBhcmUgc29sZC4KVGhpcyBoYXMgbmV2ZXIgYmVlbiBhbiBpc3N1ZSBiZWZvcmUgYW5kIGhhcyByZW1vdmVkIHNwYW0gZnJvbSB0aGUgc3VicmVkZGl0LiBJIGdvaW5nIHRvIGNoYW5nZSB0aGUgc2V0dGluZ3Mgc28geW91IHdpbGwgYWxzbyBnZXQgYSBjb21tZW50IGV4cGxhaW5pbmcgdGhhdCBpdCB3YXMgcmVtb3ZlZCwgYW5kIHRoYXQgaXQgd2lsbCBiZSBtYW51YWxseSBjaGVja2VkIGFuZCBlaXRoZXIgcmVpbnN0YXRlZCBvciBhIHJlYXNvbiBmb3IgaXRzIHJlbW92YWwgZ2l2ZW4uIEkgZ29pbmcgdG8gcmV2aWV3IHlvdXIgcG9zdCBub3cuLiAKTGVhcm4gdG8gc3RvcCBibHVuZGVyaW5nIHlvdXIgcGllY2VzIGF3YXkgYW5kIGxlYXZpbmcgdGhlbSB1bmRlZmVuZGVkLiAKSSBkaWQgd2FzIGhhcmFzc2luZy4gCkl0IHNlbGYgbWlsbCwgdG9rZW4gY3JlYXRpb24sIGFuZCBoZWxwcyBhIGxvdCBmb3IgV29ybGQgc2hhcGVyIGFuZCBtdWx0YW5pLnJwbWM4MyAgNDIgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnb0kgbmV2ZXIgZXhwZWN0IGEgd29tYW4gdG8gcmFpc2UgbXkga2lkcyBhbmQgd29yayBmdWxsIHRpbWUgd2hlbiBhbGwgSSB3YXMgZG9pbmcgd2FzIHdvcmtpbmcgdGhlIHNhbWUgaG91cnMgYXMgaGVyLiBJZiB3ZSB3b3JraW5nIHRoZSBzYW1lIGhvdXJzLCBpdCBmb2xsb3dzIHRoYXQgd2Ugc2hhcmUgdGhlIGxvYWQgZXF1YWxseSBhbmQgcHJvdmlkZSB0aGUgeWluIGFuZCB5YW5nIChtYXNjdWxpbmUgYW5kIGZlbWluaW5lKSBiYWxhbmNlIG5lZWRlZCBmb3IgY2hpbGRyZW4gdG8gZ3JvdyB1cCBpbiBhIGJhbGFuY2VkIGFuZCBoZWFsdGh5IGVudmlyb25tZW50LiAKTXkgcGFyZW50cyB3ZXJlIG9uIHZhY2F0aW9uIGZvciB0aGUgd2VlayBhbmQgbGVmdCB1cyB3aXRoIG15IGF1bnQuIApBbmQgd2hlbiB0aGV5IGdldCBvbiB0aGUgY2FzaW5vIGZsb29yIHRoZSBzZXJ2aWNlIGxldmVsIHRoYXQgaXMgZ29pbmcgdG8gYmUgcHJvdmlkZWQgZnJvbSB0aGVpciBsb2NhbCBjb21tdW5pdHksIHlhIGtub3csIHRoZSBsb2NhbCBlbXBsb3llZXMgaW4gdGhpcyBjb21tdW5pdHkuIFNvIEkgdGhpbmsgdGhhdCB0aGF0IGlzIHRoZSB3b3cgZmFjdG9yLCIgc2FpZCBHYWxsZS4uIApFcyBtdXNzIGhhbHQgbnVyIGplZGVzIExhbmQgc2VpbmVuIFRlaWwgZGF6dSBiZWl0cmFnZW4gdW5kIGRhYmVpIGhpbGZ0IGVzIG51bm1hbCwgd2VubiBtYW5jaGUgc2FnZW4gIk9rYXksIHdpciBsZWdlbiBtYWwgdm9yIi4gCldlIGtub3cgQm9iYnkgTElFRCBhYm91dCBoaXMgd2hlcmVhYm91dHMgb24gdGhlIGFmdGVybm9vbiBvZiBPY3QgMzFzdCAuIFRvIG1lLCB0aGF0IGFsc28gbWVhbnMgU2NvdHQgVGFkeWNoIGxpZWQuIApBbm90aGVyIHRleHRib29rIGJpcmRpZSBhdCB0aGUgcGFyIDUgc2V2ZW50aCBob2xlIGNhcHBlZCBvZmYgaGlzIGRheS4uIApUcnVldHQgQ2F0aHkgb3BlcmF0ZWQgV2luU2hhcGUgRm91bmRhdGlvbiwgaGFkIGRvbmF0ZWQgbWlsbGlvbnMgb2YgZG9sbGFycyB0byBwb2xpdGljYWwgb3JnYW5pemF0aW9ucyBzZWVuIGJ5IExHQlQgYWN0aXZpc3RzIGFzIGhvc3RpbGUgdG8gTEdCVCByaWdodHMuIApIb3dldmVyLCBpdCB3b3VsZCBmbG93IG11Y2ggYmV0dGVyIGFzICJkaWNlIHJvbGwsIG51bWJlciwgb2theSB0aGlzIGhhcHBlbnMgbm93IiBpbnN0ZWFkIG9mICJkaWNlIHJvbGwsIG51bWJlciwgb2theSBub3cgbGV0IHN0b3AgdGhlIGFjdGlvbiBmb3IgdGhyZWUgbWludXRlcyB3aGlsZSBJIHJlYWQgeW91IHlvdXIgb3B0aW9ucywgeW91IGNob29zZSwgdGhlbiB3ZSBkaXNjdXNzIHdoYXQgdGhhdCBhY3R1YWxseSBsb29rcyBsaWtlLCBva2F5IER1Y2sgaGFzIG5vdyBzdWNjZXNzZnVsbHkgc2NyYXRjaGVkIGhpcyBub3NlLiJCZWNraV9NaW5haiAgIDE4IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvIjEwIGJpbGxpb24gZ2VuZGVycyIgaXMgYSByZWZlcmVuY2UgdG8gdGhlIHdvcmxkIHBvcHVsYXRpb24uIEl0IGltcGx5cyB0aGF0IGV2ZXJ5IHNpbmdsZSBwZXJzb24gaXMgYSBkaWZmZXJlbnQgZ2VuZGVyLiAKSXQgaXMgYmV0dGVyIHRvIGhhdmUgaXQgc3dpbmcgb3V0d2FyZHMuIEZpcnN0IG9mIGFsbCBpdCBhcyB5b3Ugc2F5IGhhcmRlciB0byBraWNrIGluIChvciBwdXNoIGluKSBhbmQgc2Vjb25kbHkgaXQgYmV0dGVyIGluIGEgY2FzZSBvZiBmaXJlIChzZWUgZWRpdCkuIE9mIGNvdXJzZSBoaW5nZXMgYXJlIGEgd2VhayBzcG90IGJ1dCBpZiB5b3UgaGF2aW5nIGEgInNhZmV0eSBkb29yIiB1c3VhbGx5IHlvdSBoYXZlIG1ldGFsIHJvZHMgdGhhdCBnb2VzIGludG8gdGhlIHdhbGwgb24gdGhlIHNhbWUgc2lkZSBhcyB0aGUgaGluZ2VzIHdoZW4gdGhlIGRvb3IgaXMgY2xvc2VkLCBzbyBpZiB0aGUgZG9vciBpcyBsb2NrZWQgYW5kIGNsb3NlZCBJIGJlbGlldmUgaXQgd2lsbCBzdGF5IGNsb3NlZCByZWdhcmRsZXNzIGlmIHRoZSBoaW5nZXMgYXJlIHRoZXJlIG9yIG5vdC4gCkhvdyBCcnVjZSBMZWUgQ2hhbmdlZCB0aGUgV29ybGQuIEhELiAKVGhlIFJlcHVibGljYW4gU2VuYXRvcmlhbCBDYW1wYWlnbiBDb21taXR0ZWUgbGVhZCBieSBNY0Nvbm5lbCBnb3QgbWlsbGlvbnMgZnJvbSBMZW9uYXJkIEJsYXZhdG5pay4gCkhlIGNhbWUgZnJvbSBtb25leSBhcyB3ZWxsLiBJIGRvbid0IHRoaW5rIEFsYW4ga25ldyBhYm91dCBhbnl0aGluZyBpbiB0aGUgYm9vay4gCkJvbnVzZXMgYXJlIGEgc3RhcGxlIGluIHRoZSBwcm9tb3Rpb24gb2YgZ3JlYXQgb25saW5lIHBva2VyIHNpdGVzLiBUaGlzIGluY2x1ZGVzIHNpZ24gdXAgYm9udXNlcywgZGVwb3NpdCBib251c2VzIGFuZCBldmVuIGJpcnRoZGF5IGJvbnVzZXMhIFRoZXNlIGJvbnVzZXMgYXJlIGFjdHVhbGx5IG5vbiBleGlzdGVudCBpbiByZWFsIGNhc2lub3Mgc28gaXQgcmVhbGx5IG1ha2VzIG9ubGluZSBwb2tlciBzaXRlcyBtb3JlIGFwcGVhbGluZyB0byBwb2tlciBwbGF5ZXJzLiAKSSBtYWlubHkgZGlzYWdyZWUuIFRoZSBvbmx5IGJvYXRzIHRoaXMgZ3V5IGNhbiBoYXZlIGFyZSBwb2NrZXQgc2l4ZXMgYW5kIHBvY2tldCBhY2VzLiAKR2V0IGhpbSBmdWNraW5nIGdvbmUuIExldCBCdXR0IGFuZCBNY0tlbm5hIHJ1biBpdCB1bnRpbCB3ZSBhcmUgYWJsZSB0byBzaWduIGEgbG9uZyB0ZXJtIHJlcGxhY2VtZW50IGFuZCBhIERpcmVjdG9yIG9mIEZvb3RiYWxsIHRvZ2V0aGVyLi4gClRoZSBjb3N0IG9mIHdhciBpcyBiZWluZyBmZWx0IGJ5IHRoZSB2YXN0IG1ham9yaXR5IG9mIEFtZXJpY2Fucywgb25lIHdheSBvciBhbm90aGVyLCB0aGVyZSBhcmUgYSBmZXcgbGlrZSB0aGUgb25lcyB3aG8gb3duIEhhbGlidXJ0b24gb3IgR2VuZXJhbCBEeW5hbWljcywgd2hvIGFyZSBhYmxlIHRvIHJlY29yZCBwcm9maXRzIHdoaWxlIG91ciBjb3VudHJ5IGdvZXMgZnVydGhlciBhbmQgZnVydGhlciBpbnRvIGRlYnQgdG8gZmluYW5jZSB0aGUgZHJlYW0gb2YgIndpbm5pbmciIHRoZXNlIG5pZ2h0bWFyaXNoIHdhcnMuLiAKVGh1cnNkYXkgQW5pbWUgRGlzY3Vzc2lvbiBUaHJlYWQKS2luZCBvZiwgZGVwZW5kcyBvbiB3aGF0IHRoZSBib2FyZCBhY3R1YWxseSBpcy4gVGhlcmUgYSBkaWZmZXJlbmNlIGJldHdlZW4gQUs5ciBhbmQgNzQyciBvciA4ODJyLCBhcyAvdS9wd25lZDU1NSBzYWlkIGl0IHdpbGwgZGVwZW5kIG9uIG11bHRpcGxlIGZhY3RvcnMgYWxzbyBpbmNsdWRpbmcgaG93IHlvdXIgcHJlZmxvcCByYW5nZSBpbnRlcmFjdHMgd2l0aCB0aGUgYm9hcmQgY29tcGFyZWQgdG8gdGhlIG90aGVyIHBsYXllcnMgaW4gdGhlIGhhbmQuCkV0IGMgZHVyYW50IGNlcyBhbm5lcyBxdWUgdmEgcyBlbiBzb24gZXNwcml0IGxhIHN0cnVjdHVyZSBkZSBzb24gdXZyZSBtYWpldXJlLCBUcmFpdCBwcmF0aXF1ZSBldCByYWlzb25uIGRlcyBwbGFudGVzIG1kaWNpbmFsZXMgaW5kaWduZXMuIEVuIDE4NDcsIGlsIGVzdCByY29tcGVucyBwYXIgbGEgU29jaXQgcm95YWxlIGRlIE1kZWNpbmUgZGUgTWFyc2VpbGxlIHBvdXIgdW4gbW1vaXJlIHF1aSBuIHF1IGJhdWNoZSBkZSBzb24gdHJhaXQsIGxlcXVlbCBwYXJhdHJhLCBkYW5zIHNhIHByZW1pcmUgZGl0aW9uLCBlbiAxODUwLiAKSSBnb3Qgb3V0IG9mIG15IHJlbGF0aW9uc2hpcCBhbmQgbXkgaG91c2UgYSBtb250aCBhZ28uIApCdXQgQysrIGlzIHBsYWd1ZWQgYnkgaG9ycmlibGUgZXJyb3IgbWVzc2FnZXMgYW5kIGVycm9yIGJvbWJzIHRoYXQgb2NjdXIgZnJvbSBhIHNpbmdsZSBtaXNzaW5nIHNlbWljb2xvbi4gSmF2YSBhbmQgQyBhcmUgc2xvdyB0byBidWlsZCBhbmQgSmF2YSBpbiBwYXJ0aWN1bGFyIGhhcyBBYnN0cmFjdFByb3h5RmFjdG9yeVZveWFnZVBvdGF0b0Zhcm1lckJlYW5Qcm94eUJlYW4gb3Igd2hhdGV2ZXIgaXQgY2FsbGVkLi4gCkknbSBzb3JyeSwgSSBjb3VsZG4ndCBoZWFyIHlvdSBvdmVyIHRoZSBzb3VuZCBvZiBzdHVwaWQuIEx1a2UgUm9teW5JIGxvb2tlZCB1cCBkaWN0aW9uYXJ5IGluIGFuIG9ubGluZSBkaWN0aW9uYXJ5IGFuZCBpdCBzYWlkLCBoZXJlLCBzdHVwaWQuIEV2ZXJ5b25lIHNob3VsZCBoYXZlIGF0IGxlYXN0IG9uZSBhcHBsZSBwZXIgZGF5IHRvIHN0YXkgaGVhbHRoeS4gVGhhdCdzIHdoeSBJIHRocm93IHRoZW0gYXQgcmFuZG9tIHN0cmFuZ2VycyB3aGlsZSBkcml2aW5nLiBMdWtlIFJvbXluClRyYWRpdGlvbmVsbCB2ZXJzY2hlbmt0IG1hbiBqYSBnZXJuZSBCbHVtZW4uIEFiZXIgYml0dGUgbnVyIGZyIFNpZSB1bmQgbmljaHQgenUgYXVzbGFkZW5kLiBFaW5lIHNjaG5lIFJvc2UgcmVpY2h0IG9mdG1hbHMgc2Nob24uIApXZWxsIHdobyB0aGUgZnVjayBpcz8gTm8gb25lIHJlYWxseSBpcyByZWFkeSB0byBoZWxwIHNvbWVvbmUgdGhyb3VnaCB0aGF0LCBidXQgdGhhdCB3aGF0IHBhcnRuZXJzIGRvZXMgZm9yIGVhY2hvdGhlci4KU2hlIHNhaWQgTGlmZVNwYW4gaGVsZCBpdHMgb3duIHBva2VyIHRvdXJuYW1lbnRzIGJlZm9yZSBnZXR0aW5nIGludm9sdmVkIHdpdGggQ2hhcml0eSBQb2tlciBTb2x1dGlvbnMgYW5kIHRoZXkgd2VudCBwb29ybHkuIApJZiB0aGVyZSBpcyBubyB0cm91YmxlIGNvZGUsIEkgd291bGQgdGFsayB0byBhIGZldyB0cmFuc21pc3Npb24gcGxhY2VzIGFuZCBnZXQgc29tZSBvcGluaW9ucyBiZWZvcmUgbWFraW5nIGFueSBkZWNpc2lvbi4gCkl0IGlzIGRlc2lnbmVkIGZvciBodW1hbiBsdW5nIHNpemVkIGhpdHMsIG5vdCBmaWxsaW5nIGJhZ3Mgc28gaXQgbWF5IGZhaWwgcHJlbWF0dXJlbHkubWlrZWZueSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSSB0dW5lIGluIGZvciB0aGUgYWZ0ZXJub29uIHNlc3Npb24gYnV0IG15IGludGVyZXN0IGlzIG1vcmUgZm9yIHRoZSBldmVuaW5nIG1hdGNoIHdoaWNoIHNob3VsZCBiZSBhIG5pY2Ugb25lLiAKRXMgaXN0IGVpbmUgWmVpdCBmciBDaHJpc3RlbiwgZGFzIExlYmVuIHVuZCBkaWUgQXVmZXJzdGVodW5nIEplc3UgQ2hyaXN0aSB6dSBmZWllcm4uIApOb3ZlbWJlciAxNjogU2hhd24gTXVycmF5LCBDaGFkIFBvd2VsbCwgUGF0cmljayBIb3dlLCBLcmlzdG9waGVyIEtpbGV5LCBEYXZpZCBTYW50YW5hLCBhbmQgSmFyZWQgU2NobWl0dC4gClRoZXkganVzdCBuZWVkIHRvIHN0ZXAgdXAgYW5kIGJyaW5nIHJlYWwgY29tcGV0aXRpb24sIGluc3RlYWQgb2YganVzdCBiZWluZyBhIHNvbWV3aGF0IHZpYWJsZSBhbHRlcm5hdGl2ZSBvbiBzb21lIHByaWNlIHRpZXJzLi4gCk5vcnRoIEFtZXJpY2FuIHN1cHBsaWVycyB3ZXJlIHRoZSBsaWtlbGllc3QgYnV5ZXJzIGFuZCBhbHNvIGZpbmFuY2lhbGx5IHN0cm9uZ2VzdCwgZm9sbG93ZWQgYnkgQ2hpbmVzZSB2ZW5kb3JzLiBCcmF6aWxpYW4gc3VwcGxpZXJzIHdlcmUgdGhlIG1vc3QgZGlzdHJlc3NlZCwgYW5kIEV1cm9wZWFuIHZlbmRvcnMgd2VyZSB0aGUgbW9zdCBsaWtlbHkgYWNxdWlzaXRpb24gdGFyZ2V0cy4KV2h5IGRvZXMgY29mZmVlIG1ha2UgeW91ciBicmVhdGggc28gYmFkCkRyLiBKZWZmcmV5IFdpbm5pY2tpIHN0YXJ0ZWQgVGhlIERlbnRhbCBTaG9wcGUgaW4gTWF5IG9mIDIwMDYuIEFsdGhvdWdoIGhlIGRvZXNuJ3Qgc3BlY2lhbGl6ZSBpbiBhbnhpb3VzIHBhdGllbnRzLCBoZSBib3VnaHQgZXF1aXBtZW50IHN1Y2ggYXMgdGhlIG1hc3NhZ2UgY2hhaXIgd2l0aCBmZWFyZnVsIHBhdGllbnRzIGluIG1pbmQuIEhlIG9mZmVycyBhIG51bWJlciBvZiBvcHRpb25zIHRvIG1ha2UgcGF0aWVudHMgZmVlbCBtb3JlIHJlbGF4ZWQgZHVyaW5nIHRoZWlyIHByb2NlZHVyZXMuIFRoZXkgY2FuIGNob29zZSB0byB0dXJuIG9uIHRoZSBtYXNzYWdlIGNoYWlycywgd2F0Y2ggbW92aWVzIG9yIHRlbGV2aXNpb24gc2hvd3MgZnJvbSBhIHNjcmVlbiBhbmdsZWQgZm9yIGVhc3kgdmlld2luZywgbGlzdGVuIHRvIG11c2ljLCBvciB3ZWFyIG5vaXNlIGNhbmNlbGluZyBoZWFkcGhvbmVzLiBGb3IgdGhvc2Ugd2l0aCBhY3V0ZSBhbnhpZXR5LCBXaW5uaWNraSBvZmZlcnMgc2VkYXRpb24uIEhvd2V2ZXIsIGhlIHNheXMsIGRpc3RyYWN0aW9uIGlzIGVmZmVjdGl2ZSBmb3IgbW9zdCBwYXRpZW50cy4iSSBvZmZlciBhbGwga2luZHMgb2Ygc2VkYXRpb24gcm91dGVzLCIgV2lubmlja2kgc2FpZCwgImJ1dCB1bmxlc3MgaXQncyBzb21ldGhpbmcgc2V2ZXJlLCBtYWtpbmcgdGhlIHBhdGllbnQgY29tZm9ydGFibGUgd2l0aG91dCBoYXZpbmcgdG8gZHJ1ZyB0aGVtIHVwIGlzIHJlYWxseSB0aGUgcHJlZmVycmVkIG1ldGhvZC4iClRoaXMgb3Bwb3J0dW5pdHkgd2FzIG1vcmUgdGhhbiBJIGNvdWxkIGhhdmUgaG9wZWQgZm9yIGFuZCB3aWxsIHByb2JhYmx5IG5ldmVyIGNvbWUgYWdhaW4gaW4gbXkgbGlmZXRpbWUuIApJdCBpcyBhIHJlbGF0aXZlbHkgc2ltcGxlIGNvbmNlcHQgaW50cm9kdWNlZCBieSB3aGF0IGFwcGVhcnMgdG8gYmUgYSB2ZXJ5IGluIGRlcHRoIHdvcmQsIG9yIHBocmFzZSwgZGVwZW5kaW5nIG9uIGhvdyBpdCBpcyB3cml0dGVuIG9yIGV4cHJlc3NlZC4gCkhpcyBzY2hlbWluZyBjYW1lIHVuZG9uZSB3aXRoIGhpcyBleCBnaXJsZnJpZW5kIEpheWEgVGFraSBwb3N0ZWQgYWJvdXQgaGlzIGluZGlzY3JldGlvbnMgb24gRmFjZWJvb2suIFRoZWlyIHR1bXVsdHVvdXMgcmVsYXRpb25zaGlwIGxhaWQgYmFyZSBpbiBtb3JlIHRoYW4gMTAwIHBhZ2VzIG9mIHRleHQgbWVzc2FnZXMgc2VpemVkIGJ5IHRoZSBOUkwgZHVyaW5nIHRoZWlyIGludmVzdGlnYXRpb24gaW50byBTaW1vbmEncyBtYXRjaCBiZXR0aW5nIGFuZCBleGNsdXNpdmVseSBvYnRhaW5lZCBieSBUaGUgU3VuZGF5IFRlbGVncmFwaC4KQmVzaWRlIHRoYXQgaSBuZSB0aGlua2luZyBvZiBhIHN0cmVhbWluZyBGb3JtYXQgdGhhdCBCcmluZ3MgYSBzaW1pbGlhciBFbnRlcnRhaW5tZW50IGZvciB0aGUgVmlld2VyICAgZG9udCBoYXZlIGFuIGlkZWFsIHlldCBJZiBZb3UgaGF2ZSBvbmUgbGV0IG1lIGtub3cgISkuIApaZXJnIFBsYXllci4gU3dhcm0gaG9zdHMgYXJlIHJlYWxseSB0cmFzaC4gVGhlIHJvbGUgdGhleSBmaWxsIGlzIGludGVyZXN0aW5nIGJ1dCBJIHRoaW5rIGl0IHRpbWUgdG8gY3V0IHRoZW0gYW5kIGdvIGJhY2sgdG8gdGhlIGRyYXdpbmcgYm9hcmQgYW5kIGZpbmQgYSBuZXcgdW5pdCB0aGF0IGNhbiBmaWxsIHRoZSBoYXJhc3Mvc2llZ2UgYnJlYWtlciByb2xsLgo3NiAoNiksIHAuIApOb3QgYXMgbmFycm93IGFzIFZpbnRhZ2UsIGJ1dCBpdCBjZXJ0YWlubHkgYmVlbiB0cmVuZGluZyBpbiB0aGF0IGRpcmVjdGlvbiBmb3Igc29tZSB0aW1lLi4gCk1heSBJIGFzayB5b3UsLiwgd2hlcmUgdGhlIGZ1Y2sgeW91IGJlZW4gaW4gdGhpcyB3b3JsZCB0aGF0IHlvdSBkb24ga25vdyBzaW1wbGUgc2hpdCBsaWtlICJ0aGUgbWFpbiBnYW1lIiA/Pz8gICBBcmUgcmVhbGx5IHNvICJncmVlbiIgYW5kIGd1bGxpYmxlIHRoYXQgZG9uIGtub3cgcG9rZXIgdGVybWlub2xvZ3k/ICAgQXJlIHlvdSBzb21lIHNhdmFudCBzY2llbnRpc3Q/ClRoYXQgc3lzdGVtIGlzIG91ciBlbmVteS4gCkl0IGEgeW91bmcgcGVyc29uIGdhbWUuIEkgYWZyYWlkIHBlb3BsZSBpbiB0aGVpciBmaWZ0aWVzIHdvbiBiZSBhYmxlIHRvIGhhY2sgaXQuIApIaXMgc2VtaSBibHVmZnMgY29uc2lzdCBvZiBudXQgZmx1c2ggZHJhd3MsIG9wZW4gZW5kZWQgc3RyYWlnaHQgZHJhd3MsIGFuZCBwYWlycytvcGVuIGVuZGVycywgYW5kIHNvbWUgUSBoaWdoIGZsdXNoIGRyYXdzIGFzIHdlbGwuIEkgdGhpbmsgYWdhaW5zdCB0aGlzIHJhbmdlIHdlIG5vdCBsb3ZpbmcgbGlmZSBidXQgaGF2ZSBlbm91Z2ggZXF1aXR5IHRvIHN0YWNrIG9mZi4uIApEZSBtbWUgcXUnaWxzIG4nb250IHBhcyBhbGx1bSBkZSBib3VnaWVzIHBvdXIgbGVzIGJyaXRhbm5pcXVlcywgaWxzIG4nb250IHBhcyBmYWl0IHNjaW50aWxsZXIgbGEgVG91ciBFaWZmZWwgYXV4IGNvdWxldXJzIGR1IHBheXMgZGUgRG9zdG9ldnNraS4gIk5vdXMgc29tbWVzIHRvdXMgYW1yaWNhaW5zIi4gTWFpcyBhcHBhcmVtbWVudCBwYXMgcnVzc2VzLiAKVGhlIGhvcm1vbmUgeW91ciBib2R5IHByb2R1Y2VzIHdoZW4geW91IGFyZSB1bmRlciBzdHJlc3MgaXMgY2FsbGVkIGNvcnRpc29sLiBXaGF0IG1hc3NhZ2UgdGhlcmFweSBkb2VzIGlzIGxvd2VyIHRoZSBsZXZlbCBvZiB0aGlzIGhvcm1vbmUuIFlvdSB3aWxsIG5vdGljZSBhbiBpbXByb3ZlbWVudCBpbiB5b3VyIG1vb2QgYWZ0ZXIgb25seSBvbmUgc2Vzc2lvbi4gClRoZSBvbmx5IGxpbmVzIEkgY2FuIHJlbWVtYmVyIGFyZSBmcmFnbWVudHMsIGxpa2UgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbW92aWUgd2hlcmUgdGhleSB0YWxrIGFib3V0ICJVbm9idGFpbml1bSIuIApEb3VnIHBsYW5zIHRvIGJlZ2luIGhpcyBtaXhlZCBtYXJ0aWFsIGFydHMgKE1NQSkgY2FyZWVyIHdpdGggc29tZSBhbWF0ZXVyIGZpZ2h0cyBhbmQgaG9wZXMgdG8gdHVybiBwcm8gc29vbi4uIApTaGUgbGlrZXMgTWF4LCBoZSBpcyBhbHdheXMgcmVhbGx5IG5pY2UgdG8gaGVyLiAKRmVsdCBsaWtlIGhlIHNob3VsZCBoYXZlIGJlZW4gaW4gcHJpc29uLCBub3QgamFpbCwgYW5kIGl0IHNob3VsZCBoYXZlIGJlZW4gbWF5YmUsIGF0IGxlYXN0IGEgeWVhciBpdCB0ZWxscyBwZW9wbGUsIEkgY2FuIGdvIGtub2NrIGFuIG9sZCBsYWR5IGRvd24gYW5kIHRha2VyIGhlciBtb25leSBhbmQgbm90aGluZyBpcyBnb2luZyB0byBoYXBwZW4gdG8gbWUgQW5kZXJzb24gdG9sZCAyTmV3cy4KT2NjYXNpb25hbGx5LCBzaGUgYXBwbGllcyBhbiBhY3J5bGljIHZlbmVlciB0byBzdHJlbmd0aGVuIHRoZW0gW3NvdXJjZXM6IEd1aW5uZXNzIFdvcmxkIFJlY29yZHMsIFdhcmRdLi4gClNhaWQsIHlvdXIgZ3JhbmRmYXRoZXIgSSBwcm91ZCBvZiB5b3UgYnV0IGFzIHlvdXIgZW1wbG95ZXIgSSBzb3JyeSB0byBsb3NlIGEgZ29vZCBlbXBsb3llZS4gSXQgd2FzIHZlcnkgbW90aXZhdGlvbmFsLiAKTXVzaWMgb2ZmaWNpYWxseSBzdGFydHMgYXQgU3RlZWxTdGFja3MKVGhhdCBsb3NzIGZpZ3VyZSBpcyBjaXRlZCBieSB0aGUgT2ZmaWNlIG9mIFB1YmxpYyBDb3Vuc2VsIGluIHRoZSBvcGVuaW5nIG9mIGEgZmlnaHQgdG8gY29udmluY2Ugc3RhdGUgcmVndWxhdG9ycyB0byBjb25zaWRlciBlbmRpbmcgdGhlIHByYWN0aWNlIG9mIEZsb3JpZGEncyBpbnZlc3RvciBvd25lZCB1dGlsaXRpZXMgImhlZGdpbmciIHRoZSBwcmljZSBvZiBmdWVsIGZvciBwb3dlciBwbGFudHMuIApUaGUgSXNsYW5kZXJzJyA4MSBwb2ludHMgYXJlIG9uZSBtb3JlIHRoYW4gdGhleSBoYWQgYWxsIG9mIGxhc3Qgc2Vhc29uLi4gCklmIHlvdSBoYXZlIGEgbmV3IHBhaXIgb2YgYmFzZWJhbGwgZ2xvdmVzLCB5b3UnbGwgcHJvYmFibHkgbm90aWNlIHRoYXQgdGhlIGxlYXRoZXIgaXMgc3RpbGwgZmlybSBhbmQgaGFyZCBhbmQgY291bGQgY2F1c2UgYmxpc3RlcnMgb24geW91ciBoYW5kcy4gCjNCZXRGaXNoICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KV2hvIGNhcmVzIGlmIGhlIGlzIHJpZ2h0IG9yIHdyb25nLCBoZSBpbnRlcmVzdGluZyBhbmQgaGUgdXN1YWxseSBmYWlybHkgaG9uZXN0IHdpdGggaGlzIG9waW5pb25zLiBIZSBub3QgYSB3YWxraW5nIGhvdCB0YWtlIChhbHRob3VnaCBldmVyeSBoYXMgdG8gZGFiYmxlIGluIHRoZSBjdXJyZW50IGVudmlyb25tZW50KSBhbmQgaXMgZmFpcmx5IGF1dGhlbnRpYyBhbmQgb3BlbiB0byBoaXMgYXVkaWVuY2UuIEkgZmluZCB3aGF0IGhlIGhhcyB0byBzYXkgaW50ZXJlc3RpbmcgcmVnYXJkbGVzcyBvZiBob3cgYWNjdXJhdGUgaGlzIHByZWRpY3Rpb25zIHR1cm4gb3V0IHRvIGJlLiAKS2VlcCBpbiBtaW5kLCBoZSBpcyB3ZWFyaW5nIG5vcm1hbCBjbG90aGVzIGFuZCBhbHNvIGhhZCBoaXMgY2VsbCBwaG9uZSBpbiBoaXMgaGFuZC4gSSB3YW50ZWQgdG8gdmFuaXNoLi4gClRoZSBmaW5hbCB0YWJsZWF1IHdhcyBnb3JnZW91cyBmb3VyIHdvbWVuIGluIGxvbmcsIGZsb3dpbmcgcmVkLCBnbGlkaW5nIHNpZGUgdG8gc2lkZSwgZm9yd2FyZCBhbmQgYmFjaywgaW4gc2hpZnRpbmcsIGludGVybG9ja2luZyBwYXR0ZXJucy4uIApEci4gU2V1c3MgIHRoZSBzbmVldGNoZXMgaXMgYSBnb29kIG9uZSB0byBzdGFydCB3aXRoLgpDKSBJIGFwcGFyZW50bHkgaGF2ZSBhIGxhY2sgb2YgcmVzcGVjdCBmb3Igc29tZSBvZiB0aGUgbW9zdCBnZW5pdXMgbWVuIHdobyBldmVyIGdyYWNlZCB0aGUgcGxhbmV0IChzb21lIG9mIHdob20gYXJlIHBlcnNvbmFsIGhlcm9lcyksIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgYmVsaWVmIHN5c3RlbS4KSSBoYXZlIGEgZmV0aXNoLCBhbmQgYW55IG1lbnRpb24gb2YgdGhlIHN1YmplY3Qgd2lsbCBtYWtlIG1lIGNyYXZlIGl0LiBJIGltYWdpbmUgdGhpcyBpdCBpcyBsaWtlIHRvIGJlIHNleHVhbCwgZXhjZXB0IHdpdGggdGhlIGRlc2lyZSBmb3IgdGhlIGFjdCBvZiBzZXggcmF0aGVyIHRoYW4gbXkgb3duIGtpbmtzLgpEaXNwYXRjaCBmcm9tIFZhbmNvdXZlcidzIHJldGFpbCwgcmVzdGF1cmFudCBhbmQgaW50ZXJpb3IgZGVzaWduIGNvbW11bml0eUFuY29yYSBBbWJsZXNpZGUgZGVzaWduZWQgdG8gYmUgV2VzdCBWYW4ncyBzdHlsaXNoIG5ldyBob3Qgc3BvdFdoZW4gdGFza2VkIHdpdGggZGVzaWduaW5nIGEgV2VzdCBWYW5jb3V2ZXIgbG9jYXRpb24gZm9yIEFuY29yYSBXYXRlcmZyb250IERpbmluZyBhbmQgUGF0aW8sIFNtYXJ0RGVzaWduIGtuZXcgaXQgd291bGQgaW5jb3Jwb3JhdGUgc29tZSBvZiB0aGUgZnJvbSB0aGUgb3JpZ2luYWwgRmFsc2UgQ3JlZWsgcmVzdGF1cmFudC4gVGhhdCBpbmNsdWRlZCB1c2luZyBuYXV0aWNhbCB0b3VjaGVzIGh1ZXMsIGJyYXNzIGFjY2VudHMgZW1icmFjaW5nIHRoZSBzcGVjdGFjdWxhciBuYXR1cmFsIHNjZW5lcnkgb2YgdGhlIGxvY2F0aW9uLi4gClRoZSBwcm9ncmFtbWUgaXMgcmVndWxhdGVkIGJ5IFRoZSBOdXJzaW5nIGFuZCBNaWR3aWZlcnkgQ291bmNpbCAoTk1DKS4gU3R1ZGVudHMgZm9sbG93IHRoZSBVbml2ZXJzaXR5IG9mIEJpcm1pbmdoYW0gYW5kIE5NQyBDb2RlLgpNeSBvYnNlcnZhdGlvbiBpcyB0aGF0IG1vc3QgcGVvcGxlIGRvbiBpbmNyZWFzZSB1c2Ugb2Ygbmljb3RpbmUganVzdCBiZWNhdXNlIGl0IGVhc3kgYW5kIHJlbGF0aXZlbHkgY29uc2VxdWVuY2UgZnJlZSB0byBkbyBzby4gRXZlciBoZWFyIG9mIHNvbWVvbmUgcmFtcGluZyB1cCB0aGVpciB1c2Ugb2Ygbmljb3RpbmUgbG96ZW5nZXMvZ3VtPyBOb3Qgc28gbXVjaC4gSSBkb24ga25vdyBhYm91dCBwb2RzLCBidXQgZXZlcnlvbmUgSSBrbm93IHdobyB2YXBlcyBoYXMgdG8gbWl4IHRoZWlyIG93biBuaWNvdGluZSBpbnRvIHRoZSBjYXJyaWVyLCBzbyB3ZSBjYW4gZWFzaWx5IHR3ZWFrIGl0IHVwIG9yIGRvd24gaW4gc3RyZW5ndGgsIGJ5IG1pbnV0ZSBhbW91bnRzIGlmIHdlIGxpa2UuIApMaWxjcmFzaCAgNyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkhhaGFoYWggdGhhdCBmaW5lLiBCZWVmIGZhdCAodGFsbG93KSBpcyBhIHN1cGVyIHRyYWRpdGlvbmFsIGJlYXV0eSBpbmdyZWRpZW50IHRob3VnaC4gSSBqdXN0IHVzZWQgbGFyZCwgcGlnIGZhdCwgaW5zdGVhZC4gCkkgd2FudCB0byBiZSBhbiBpY29uIGluIG1hbnkgZm9ybXMuIFNvIHRoYXQgd2hlcmUgaXQgYmVnYW4uIi4gCkZvciBleGFtcGxlLCBhdCBvbmUgY2FzaW5vIHlvdSBtYXkgZWFybiBwb2ludHMgZm9yIHRoZSBob3VycyB5b3UgcGxheSwgb3IgdGhlIGFtb3VudCBvZiBtb25leSB0aGF0IHlvdSBiZXQgd2hpbGUgcGxheWluZy4gCk5vIG1vcmUgTVJTQSBpc3N1ZXMgc2luY2UgdGhlbiwgYm90aCBpbiB0aGUgZW5kIG9mIG15IGRydWcgdXNlIGFuZCBpbiBteSBjdXJyZW50IDMuNSB5ZWFyIHJlY292ZXJ5LgpJIHBsYXllZCB0ZW4gbGV2ZWxzIGluIEFybXkgTWVuIFN0cmlrZSwgdG9vayBzY3JlZW4gc2hvdHMgb2YgZXZlcnl0aGluZywgYW5kIHRoZXkgaGF2ZSByZWplY3RlZCBteSB0aWNrZXQgb3ZlciBhbmQgb3ZlciBhZ2Fpbi5Eb24gd2FzdGUgeW91ciB0aW1lLiAKRGVzd2VnZW4gYmluIGljaCBkYWZyIGRpZXNlIDUlIEhyZGUga29tcGxldHQgYWJ6dXNjaGFmZmVuLgpTaXR0aW5nIG9uIGEgU29vZmEgd2Fzbid0IGEgcGxlYXNhbnQgZXhwZXJpZW5jZSBvbiBhIHBhcnRpY3VsYXJseSBob3QgYW5kIGh1bWlkIG1vcm5pbmcuIFRoZSBzYW1lIHN1bmJlYW1zIHRoYXQgZ2VudGx5IGNhcmVzc2VkIG15IGlQaG9uZSBiYXR0ZXJ5IGJhY2sgdG8gbGlmZSBhbHNvIGNvb2tlZCBtZS4gT24gYSBjb29sZXIgZGF5LCBJIGltYWdpbmUgaXQgd291bGQgYmUgbXVjaCBtb3JlIGVuam95YWJsZS4gCkkgd291bGQgZGVmaW5pdGVseSBiZSBzZWVraW5nIHdheXMgdG8ga2VlcCB0aGUgdHdvIGtpZHMgc2VwYXJhdGVkIHJpZ2h0IG5vdywgZWl0aGVyIGJ5IHlvdXIgYmlvIGRhdWdodGVyIGdvaW5nIHRvIGEgZmFtaWx5IG1lbWJlcidzIGhvdXNlIGZvciBhIGZldyBkYXlzIGlmIHBvc3NpYmxlIG9yIEZDIGdvaW5nIHRvIHJlc3BpdGUuIApZb3VyIGJ1ZGdldCB3b24ndCBtYXRjaCB1cCBleGFjdGx5IHdpdGggZXZlcnkgcGxheWVyLCBidXQgeW91IHN0aWxsIG5lZWQgdG8gdHJhY2sgd2hlcmUgeW91IHN0YW5kIHNvIHlvdXIgYmlkZGluZyBjYW4gYmUgaW5mb3JtZWQgYW5kIHlvdSBjYW4gbWFrZSB0aGUgbW9zdCBvZiB3aGF0IHlvdXIgcmVtYWluaW5nIGRvbGxhcnMuIApQb2tlclN0YXJzIGFsbG93IFVTIHBsYXllcnMsIGV4Y2VwdCBpbldhc2hpbmd0b24gU3RhdGUuIApBcyBhIHBsYXllciwgeW91J2xsIHBhcnRpY2lwYXRlIGluIHRoZSBnYW1lIHZpYSB2aWRlbyBzdHJlYW1pbmcuIApJbiBoaXMgZHJ1bmtlbiBzdGF0ZSBoZSBkZWNpZGVkIHRvIHdhbGsgaG9tZSBmb3JnZXR0aW5nIGhlIGhhZCBsb2NrZWQgaGlzIGJpa2UgdG8gbWluZSB3aXRob3V0IHRlbGxpbmcgbWUuIApTdGFuZGluZyBkZXNrcyBhcmUgdGhlIGJvbWIuLiAKU2kgdm91cyBjb25uYWlzc2V6IGxlcyBjbGFzc2VtZW50cyBjbGFzc2lxdWVzIGRlIG1haW5zIGF1IHBva2VyLCBsYSBzZXVsZSBkaWZmcmVuY2UgdmllbnQgZHUgZmFpdCBxdWUgbGEgc3VpdGUgZXN0IGRldmFudCBsYSBjb3VsZXVyLiBWb2ljaSBsZSBjbGFzc2VtZW50IGNvbXBsZXQgZGUgbGEgbWVpbGxldXJlIG1haW4gIGxhIG1haW4gbGEgcGx1cyBmYWlibGU6LiAKTW9yZT4+R29yZG9uIENhbXBiZWxsOiBPbiBXaHkgSnVzdGluIFRydWRlYXUncyBGYXRlIE1hdHRlcnMgVG8gTlpUaGUgc2NhbmRhbCBub3cgZW5ndWxmaW5nIEp1c3RpbiBUcnVkZWF1IGFuZCBoaXMgTGliZXJhbCBQYXJ0eSBpcyB0aGUga2luZCBvZiB0cmFpbiB3cmVjayB0aGF0IGNvbmZpcm1zIHRoZSBwdWJsaWMncyB3b3JzdCBmZWVsaW5ncyBhYm91dCBwb2xpdGljaWFucyBhbmQgdGhlaXIgYmFjayByb29tIGRlYWxpbmdzLiBNb3JlPj5Kb3NlcGggQ2VkZXJ3YWxsOiBWZW5lenVlbGE7IE9pbCwgTmVvbGliZXJhbGlzbSBBbmQgV2hpdGUgU3VwcmVtYWN5VmVuZXp1ZWxhIGhhcyBiZWVuIHN1ZmZlcmluZyBhIHNsb3cgYnVybiwgeWV0IGRldmFzdGF0aW5nIGludGVybmFsIGluc3VyZ2VuY3kgYW5kIGVjb25vbWljIHdhciBzaW5jZSB0aGUgb3B0aW1pc3RpYyBiZWdpbm5pbmdzIG9mIHRoZSAnQm9saXZhcmlhbicgc29jaWFsaXN0IHJldm9sdXRpb24gaW4gMTk5OC4gCldoZW4gQmVsZ2l1bSB3YXMgIlJFIGVzdGFibGlzaGVkIiBhcyBpbmRlcGVuZGVudCBjb3VudHJ5IGluIDE4MzAgKGZpcnN0IG9mZmljaWFsIGVzdGFibGlzbWVudCBvZiAiQmVsZ2ljYSIgd2FzIDU3IEJDID0gMjA3NiB5ZWFycyBhZ28uKSAsIG1vcmUgdGhlbiBhIGZ1bGwgeWVhciB3YXMgc3BlbnQgb24gYnVpbGRpbmcgdGhlIGNvbnN0aXR1dGlvbi4gIkdvZCIgd2FzIGluIHRoZSBpbml0aWFsIGJsdWVwcmludHMgb2YgdGhlIGNvbnN0aXR1dGlvbiBkZXNpZ24uIEhvd2V2ZXIsIHRoZSBjbyBmb3VuZGluZyBsb2dlL2F0aGVpc3QgcmVwcmVzZW50YW50cyAod2l0aCBhIGxvdCBvZiBlY29ub21pYyBwb3dlcikgZXhpZ2VkIHRvIHNjcmFwIGV2ZXJ5dGhpbmcgcmVmZXJyaW5nIHRvIGdvZChzKSBmcm9tIHRoZSBpbml0aWFsIHRleHRzLCBvdGhlcndpc2UgdGhleSB3b3VsZCBub3Qgc3RlcCBpbnRvIHRoZSAicHJvamVjdCIuIApZZWFycyBhZ28sIHRoZSBldmlsIEJ1cm5pbmcgTGVnaW9uIEdPUCB3YXMgcmFsbGllZCBieSB0aGUgbWFkIHRpdGFuLCBUcnVtcC4gSGUgd2FzIHRoZSBmaXJzdCB0byByZWFsaXplOiBpZiBoZSBlbmRlZCBhbGwgbGlmZSBpbiB0aGUgdW5pdmVyc2UgcGx1bmRlcmVkIHRoZSBBbWVyaWNhbiBwb2xpdGljYWwgc3lzdGVtIGZpcnN0LCB0aGVyZSB3b3VsZCBiZSBub3RoaW5nIGxlZnQgZm9yIHRoZSBWb2lkIExvcmRzIFNvY2lhbGlzdHMgdG8gY29uc3VtZSB0YXguIENvbmdyZXNzIGhhZCBvdGhlciBwbGFucy4KVW4gZGJ1dC4gCkkgZG8gYSBsb3Qgb2YgbGlmdGluZyBhbmQgYWxzbyBmaXRuZXNzLiAKQSBCcmVhdGhhbHl6ZXIgZm9yIERydWdzCklsIGZhdXQgZHUgY2hlbWluIHBvdXIgcGFydmVuaXIgIHVuZSBhc3N1cmFuY2UgZXQgdW5lIGNvbmZpYW5jZSBpbnRyaWV1cmVzIGF1IHNlaW4gZGVzIGNpcmNvbnN0YW5jZXMgcXVpIHNvbnQgbGVzIG50cmVzLCBhZmluIGQndHJlIGRhbnMgdW4gZHRhY2hlbWVudCBxdWkgbidhY2NvcmRlIGF1eCBjaG9zZXMgZ3VyZSBwbHVzIGQnaW1wb3J0YW5jZSBxdWUgY2VsbGUgcXUnaWwgeSBhICBsZXVyIGFjY29yZGVyLiBVbmUgZm9pcyBkYW5zIGNlIHBvaW50IHF1ZSBub3VzIHF1dG9ucyBldCBxdWkgZmluaXQgcGFyIG5vdXMgYXNwaXJlciwgbm91cyByZWdhcmRvbnMsIGFsb3JzLCBsZSBtb25kZSBhdmVjIHVuIGlsIHRyYW5xdWlsbGUuIEMnZXN0IGwgbCdlc3ByYW5jZSBkZSBsYSBzZXVsZSBSZGVtcHRpb24gYWNjZXNzaWJsZSwgc3VwZXJiZSBldCBibG91aXNzYW50ZS4gTm9zIHBpcmVzIGVubmVtaXMgbmUgbGUgc29udCBwbHVzLiBMZXMgb3Bwb3NpdGlvbnMgbGVzIHBsdXMgYWNpZGVzIHNlIHJzb2x2ZW50LiBDZXJ0ZXMsIHBldXQgdHJlIHF1ZSBjZWxhIG5lIHBhcnZpZW50ICBmb25jdGlvbm5lciBxdWUgcG91ciBzb2kgbW1lIGV0IG5vbiBwYXMgcG91ciBub3MgZW5uZW1pcy4gIFBhcmRvbm5lIGxldXIgUHJlLCBjYXIgaWxzIG5lIHNhdmVudCBwYXMgY2UgcXUnaWxzIGZvbnQuICBNYWlzIG9uIHNlIHJldHJvdXZlIHNhaXNpLCBlbiBjZSBjYXMsIHBhciB1bmUgdG90YWxlIGJpZW52ZWlsbGFuY2UgZHNpbnRyZXNzZSBldCBtbWUgbGEgc2FicmUgIGxhIG1haW4sIHBvdXIgZGZlbmRyZSBjZSBxdSdpbCB5IGEgIGRmZW5kcmUsIGwnaHVtaWxpdCBub3VzIHRyZWludCBldCBub3VzIG4nYXZvbnMgcGFzIGRlIGhhaW5lLgpTb21ldGltZXMgdGhleSBqdXN0IGRvbiB1bmRlcnN0YW5kIHRoZSBwdXJwb3NlIG9mIHRoZSBxdWVzdGlvbmluZywgc29tZXRpbWVzIHRoZXkganVzdCBoYXZlIGEgbG93IHRocmVzaG9sZCwgYW5kIHNvbWV0aW1lcyB0aGV5IG92ZXIgYmxvd2luZyBpdCBiZWNhdXNlIHRoZXkgd2FudCBzb21lb25lIHRvIG1ha2UgYSBmdXNzIG92ZXIgdGhlbS4uIApNeSBodXNiYW5kIHVzZWQgdG8gZ2l2ZSBtZSBhIGhhcmQgdGltZSBhYm91dCBpdCAod2hlbiB3ZSBqdXN0IHN0YXJ0ZWQgaGF2aW5nIHNleCkgaW4gYSBoYWxmIGpva2luZyBtYW5uZXIsIGJ1dCBzYWlkIGhlIHRob3VnaHQgaXQgd2FzIGEgbGl0dGxlIHdlaXJkLiBUaGUgbmV4dCB0aW1lIHdlIGhhZCBzZXgsIEkgdG9vayBteSBzb2NrcyBvZmYsIGFuZCBzaW5jZSB0aGVuIGhlIGRvZXNuIHRha2UgaXNzdWUgd2l0aCBtZSB3ZWFyaW5nIHNvY2tzLiAKQ29sYmVydCBjYW4gZXZlbiBydW4gZm9yIG9mZmljZSwgYXMgaGUgaXMgaW4gU291dGggQ2Fyb2xpbmEsIHdoaWxlIGFsbCB0aGlzIGlzIHRha2luZyBwbGFjZSAoYW5kIHJlY2VpdmluZyBhIGhlYWx0aHkgMTMgcGVyIGNlbnQgaW4gb25lIEdPUCBwcmltYXJ5IHBvbGwsIGFnYWluIHNob3dpbmcgaG93IG1vbmV5ID0gbmFtZSByZWNvZ25pdGlvbiA9IHBvbGxpbmcgbnVtYmVycywgbm8gbWF0dGVyIHdobyBpdCBpcykuLiAKREVWT05QT1JULCBTdGVwaGVuIE1pY2hlbCBQYXNzZWQgYXdheSBzdXJyb3VuZGVkIGJ5IGZhbWlseSBvbiBOb3ZlbWJlciAyNywgMjAxNyBpbiBoaXMgaG9tZS4gCk1heWJlIGp1c3QgZXhwYW5zaW9ucyBhbmQgcm90YXRpb24uIApUaGUgaW52ZXN0aWdhdG9ycyBmb3VuZCB0aGF0IHRoZSBtb3JlIGFjdGl2aXR5IHRoZSBuZWFybHkgNSwwMDAgc3R1ZHkgcGFydGljaXBhbnRzIHJlcG9ydGVkIGF0IHRoZSBzdHVkeSBzdGFydCwgdGhlIGxlc3MgbGlrZWx5IHRoZXkgd2VyZSB0byBzdWZmZXIgbWVudGFsIGRlY2xpbmUuLiAKVG9kYXksIGFzIEkgdmlzaXQgdGhlIFNjaWVuY2UgTXVzZXVtIEkgd2FzIGludGVyZXN0ZWQgdG8gZGlzY292ZXIgYSBsZXR0ZXIgZnJvbSB0aGUgUm95YWwgQXJjaGl2ZXMsIHdyaXR0ZW4gaW4gMTg0MyB0byBteSBncmVhdCBncmVhdCBncmFuZGZhdGhlciBQcmluY2UgQWxiZXJ0LiBDaGFybGVzIEJhYmJhZ2UsIGNyZWRpdGVkIGFzIHRoZSB3b3JsZCdzIGZpcnN0IGNvbXB1dGVyIHBpb25lZXIsIGRlc2lnbmVkIHRoZSAiRGlmZmVyZW5jZSBFbmdpbmUiLCBvZiB3aGljaCBQcmluY2UgQWxiZXJ0IGhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gc2VlIGEgcHJvdG90eXBlIGluIEp1bHkgMTg0My4gSW4gdGhlIGxldHRlciwgQmFiYmFnZSB0b2xkIFF1ZWVuIFZpY3RvcmlhIGFuZCBQcmluY2UgQWxiZXJ0IGFib3V0IGhpcyBpbnZlbnRpb24gdGhlICJBbmFseXRpY2FsIEVuZ2luZSIgdXBvbiB3aGljaCB0aGUgZmlyc3QgY29tcHV0ZXIgcHJvZ3JhbW1lcyB3ZXJlIGNyZWF0ZWQgYnkgQWRhIExvdmVsYWNlLCBhIGRhdWdodGVyIG9mIExvcmQgQnlyb24uIApZb3UgY2FuIG5hYiB0aGlzIHRyYWNrIGZyb20gdmFyaW91cyBvdXRsZXRzL1lvdXR1YmUuIApDb3JuZXIgTWFya2V0IG9uIFJpdmVyIHJvYWQgaXMgYW4gZXhjZWxsZW50IHBsYWNlIHRvIHNvdXJjZSBmcmVzaCBsb2NhbCBPRyBwcm9kdWNlIHdoZW4gdGhleSBvcGVuIGFuZCBJIGltYWdpbmUgdGhleSBtaWdodCBlbnRlcnRhaW4gc29tZSBzb3J0IG9mIHdvcmsgdHJhZGUuCk5vdyBzY2hvb2wgaXMgaGFyZGVyIHRoYW4gaXQgd2FzIHRoZW4uIApBcmUgZG9uZSBjb21wbGV0ZWx5IGF0IHRoZSByaXNrIG9mIHRoZSBidXllciBhbmQgc2VsbGVyLjEwLiBQb3N0cyB3aXRoIGNsaWNrYmFpdCBvciBzZW5zYXRpb25hbGl6ZWQgdGl0bGVzIHdpbGwgYmUgcmVtb3ZlZCBhbmQgcmVwZWF0IG9mZmVuc2VzIHdpbGwgYmUgc3ViamVjdCB0byBiYW4uIENsaWNrYmFpdCB0aXRsZXMgYXJlIGRlZmluZWQgYXMgdGl0bGVzIHdob3NlIG1haW4gcHVycG9zZSBpcyB0byBhdHRyYWN0IGF0dGVudGlvbiBhbmQgZW5jb3VyYWdlIHZpc2l0b3JzIHRvIGNsaWNrIG9uIGEgbGluayB0byBhIHBhcnRpY3VsYXIgd2ViIHBhZ2UsIHRoYXQgYXJlIGVpdGhlciBhbiBleGFnZ2VyYXRpb24gb2YgdGhlIHNwZWNpZmljIHBpZWNlL3F1b3RlIG9yIGhhdmUgbm90aGluZyB0byBkbyB3aXRoIGl0IGVudGlyZWx5LjExLiAKR2V0IGl0IHRvIHNob3cgeW91IGluIGEgb3duIHdvcmRzIHdoeSB0aGVzZSBjb21wYW5pZXMgZmVlbCBkaXN0aW5jdCBwcm9ibGVtIGlzIG5vdCBnb2luZyB0byBoYXBwZW4gcmVtZW1iZXIgYW5kIGNvcnJlY3RseSB3aGF0IGN1c3RvbWVycyBoYXZlIG1vZGlmaWVkIGluIGEgcGVyc29uJ3MgbGlmZSB0byBtYWtlIHN1cmUgeW91IHByZXZlbnQgaXQgYWxsIGZyb20gcHJhY3RpY2luZyBzby4gCllvdSBnb3R0YSBsb3ZlIHRoZSBBbWVyaWNhbiBkbyBpdCB5b3Vyc2VsZiBzcGlyaXQuIApNYW4uIEkgbWlzcyBteSBncmFuZHBhcmVudHMuIE5vdyBJIGNyeWluZy4gUGVvcGxlLCBjYWxsIHlvdXIgZ3JhbmRwIFlvdXIgbmV2ZXIga25vdyBob3cgbG9uZyB0aGV5IGJlIGFyb3VuZC4KSSBhbSB0b3RhbGx5IG51ZGU7IGFuZCBvZiBjb3Vyc2UsIHNvIGFyZSB5b3UuIEkgaGF2ZSBjZXJ0YWluIHRyaWdnZXIgc3BvdHMgdGhhdCBjYW4gdXNlIHNwZWNpYWwgYXR0ZW50aW9uIGZyb20gdGltZSB0byB0aW1lLCBhbmQgSSBhbSBzdXJlIHlvdSBkbyB0b28uIAo=|<---