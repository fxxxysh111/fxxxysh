--->|WmFjaCBIeW1hbiBoYWQgdHdvIGdvYWxzIGZvciBUb3JvbnRvICg0MSAyMSA0KSwgYm90aCBzZXQgdXAgTWl0Y2ggTWFybmVyLCB3aG8gYWxzbyBoYWQgYSBnb2FsIGZvciBhIHRocmVlIHBvaW50IG5pZ2h0LiBNYXJuZXIgaGFzIDEwIHBvaW50cyAodGhyZWUgZ29hbHMsIHNldmVuIGFzc2lzdHMpIGluIHRoZSBsYXN0IGZvdXIgZ2FtZXMuCiJXZSdyZSBub3cgb2ZmZXJpbmcgbWVtYmVycyByZXRhaWwgYnV0Y2hlciBzaG9wIHNhbGVzIGZyb20gdGhlIGNsdWIgZm9yIHRoZSB2ZXJ5IHNhbWUgY3V0cyB0aGF0IHdlIGhhdmUgaW4gb3VycmFmZmxlcywiIGhlIHNhaWQuIApSaWRlbm91ciBwdWJsaXNoZWQgYW4gYXJ0aWNsZSBvbiB0aGUgaHlkcm9nZW4gYm9tYiBpbiB0aGlzIG1hZ2F6aW5lLiAKNiBQZW9wbGUgaGF2ZSB0cmllZCB0byBzZWxsIG1lIFZpYWdyYSBBbmQgSSB0aG91Z2h0IG15IGZlZXQgd2VyZSBzbWFsbC4KQXVndXN0IDI5IDIwMTAgICA2OjMzQU0KSSB3b3JrIGF0IGEgdm9sdW50ZWVyIGF0IGEgc3VpY2lkZS9jcmlzaXMgaG90bGluZS4gSW4gYWRkaXRpb24sIG9uZSBvZiBteSBjbG9zZSBmcmllbmRzIGp1c3QgbG9zdCBoZXIgZXggYm95ZnJpZW5kIHRvIHN1aWNpZGUuIE9uZSBvZiB0aGUgcGVvcGxlIEkgd29yayB3aXRoIHN1Z2dlc3RlZCBzaGUgZ28gdG8gYSBTdXJ2aXZvcnMgb2YgU3VpY2lkZSBtZWV0aW5nLiBUaGV5IGFyZSBldmVyeXdoZXJlICAgbXVjaCBsaWtlIEFBIG1lZXRpbmdzLiBTaGUgaGFzIHN0YXJ0ZWQgZ29pbmcgYW5kIHNheXMgaXQgaGFzIGJlZW4gdHJhbnNmb3JtYXRpdmUgYW5kIGhlYWxpbmcuIFRoZSB0aG91Z2h0cyB5b3UgZXhwcmVzc2luZyBhcmUgbXVjaCBsaWtlIHRoZSBvbmVzIHNoZSBoYXMgYmVlbiBzaGFyaW5nIHdpdGggbWUgYW5kIEkgdGhpbmsgeW91IHdvdWxkIGZpbmQgcGVvcGxlIHdobyB3aWxsIHVuZGVyc3RhbmQgeW91ciBwYWluIGFuZCBzdHJ1Z2dsZS4gSSBrbm93IHlvdSB3aWxsIHdvcmsgeW91ciB3YXkgdGhyb3VnaCB0aGlzLiBBbmQgcmVtZW1iZXIgaWYgeW91IG9yIGFueW9uZSBlbHNlIHlvdSBrbm93IGlzIGhhdmluZyB0aG91Z2h0cyBvZiBzdWljaWRlIHRvIHJlYWNoIG91dCBhbmQgY2FsbCBzb21lb25lIGF0IGEgMjQgaG91ciBjcmlzaXMgbGluZS4gSSB0aGluayBpdCBjYW4gbWFrZSBhIGRpZmZlcmVuY2UgICBvciBhdCBsZWFzdCBJIGhvcGUgd2UgZG8uCkdyYWRlciBPbWFyIENhc3RybyBzYWlkLCBzZWUgdGhpcyBvbiB0aGUgbmV3cyBldmVyeSBkYXkgYW5kIHlvdSBuZXZlciB0aGluayB0aGlzIGNvdWxkIGhhcHBlbiBuZXh0IHRvIHlvdS4gClRoZXkgYmVhdCBoaW0gcmVwZWF0ZWRseSBiZWZvcmUgdGhleSBsZWZ0Li4gCk1pYW1pIFBvbGljZSBDcnVpc2VyIENvbGxpZGVkIFdpdGggU1VWIEluIENvcmFsIEdhYmxlc1JpZWxsZSBDcmllZ2h0b24gcmVwb3J0cyB0aGUgb2ZmaWNlciBpbnZvbHZlZCBpbiB0aGUgY3Jhc2ggc3VmZmVyZWQgYSBicm9rZW4gd3Jpc3QuClZlbmthdCBNYWxsaWssIHByZXNpZGVudCwgUkFQUCBJbmRpYSwgbGlrZXMgdGhlIGZhY3QgdGhhdCB0aGUgdmlkZW8gaXMgbm90IHJ1biBvZiB0aGUgbWlsbC4gIlRoZXJlIGlzIGFuIGF0dGVtcHQgaGVyZSB0byB0cnkgc29tZXRoaW5nIG5ldyBhbmQgdGhhdCBhdHRlbXB0IG5lZWRzIHRvIGJlIGFwcGxhdWRlZC4gSSBhbHNvIGxpa2UgdGhlIGZhY3QgdGhhdCB0aGlzIGlzIHBhcnQgb2YgYSBncm93aW5nIGJvZHkgb2Ygd29yayB3aGVyZSBhZHZlcnRpc2luZyBsb29rcyBtb3JlIGxpa2UgY29udGVudCB0aGFuIGxpa2UgYSBzYWxlcyBwaXRjaC4gV2Ugd2lsbCBrZWVwIHNlZWluZyBhIGxvdCBtb3JlIHdvcmsgbGlrZSB0aGlzIGVzcGVjaWFsbHkgZ2l2ZW4gdGhlIGluY3JlYXNpbmdseSBkaWdpdGFsIHdvcmxkIHdoZXJlIGNvbnN1bWVycyBhcmUgaW4gY29udHJvbCBvZiB3aGF0IHRoZXkgd291bGQgbGlrZSB0byBjb25zdW1lIGFuZCB0aGVyZWZvcmUgdGhlIHByZXNzdXJlIG9uIGJyYW5kIGNvbW11bmljYXRpb24gdG8gbWlycm9yIGVudGVydGFpbmluZyBjb250ZW50IGlzIGhpZ2hlciwiIGhlIGFkZHMuCkNsaWNrIG9uIFNlZSBBbGwgYW5kIGl0IHdpbGwgbGlzdCB0aGVtIGluZGl2aWR1YWxseSBhbmQgZ2l2ZSB5b3UgdGhlIG9wdGlvbiB0byByZW1vdmUhIE1ha2Ugc3VyZSB5b3UgaGl0IHNhdmUgY2hhbmdlcyBhbmQgdGhleSB3aWxsIGJlIGdvbmUuIApQbHVzIHRoZSBvbmx5IGNvb2wgY29zbWV0aWNzIGNvbWUgYWZ0ZXIgYSBodWdlIGdyaW5kIG9mIGdldHRpbmcgdG8gUEwgdG8gZG8gQXRoZW5hcy4gCkFmdGVyIHNlZHVjaW5nIE1hcnRpbiBkdXJpbmcgYSBnYW1lIG9mIHBva2VyLCBFbGVhbm9yIGludml0ZWQgaGltIHRvIHRoZSBwYWxhY2UgZm9yIGEgbmlnaHQgY2FwLiAiRXZlciBiZWVuIHRvIHRoZSBwYWxhY2UgYmVmb3JlIE1yLiBLYW5lPyIgSGVsZW5hIGFza2VkLiAiUGxlYXNlLCBjYWxsIG1lIE1hcnRpbi4gQW5kIG5vLCBuZXZlciBiZWVuLCIgTWFydGluIHJlcGxpZWQuClNoZSBzYWlkIGhlciBmYW1pbHkgaXMgZmlsbGVkIHdpdGggcHJvZmVzc2lvbmFscyBhbmQgc2hlIGhhZCBhY2Nlc3MgdG8gc29tZSBvZiB0aGUgYmVzdCBzY2hvb2xzIHdoZXJlIHNoZSBzdHVkaWVkIHRvIGJlIGEgbnVyc2UgYnV0IHF1aXQgd2hlbiBzaGUgZ290IHByZWduYW50LiBJIHRoaW5rIGhlciBiYWQgY2hvaWNlcyBwYWlyZWQgd2l0aCBoZXIgdGVtcGVyIHRoYXQgZmxhcmVzIG91dCBpZiBjb250cm9sIGxhbmRlZCBoZXIgaW4gdHJvdWJsZSBidXQgaXQgZWFzaWVyIHRvIGJsYW1lZCBvdGhlcnMuIEl0IHNlZW1zIGxpa2Ugc2hlIGFsd2F5cyB3YW50ZWQgYW4gZWFzeSBsaWZlLCBtb25leSwgZmFtZSBldGMuIGFuZCB3YXMgZ29ubmEgZG8gd2hhdGV2ZXIgaXQgdG9vayB0byBnZXQgd2hhdCBzaGUgd2FudGVkLCB0aGUgb2xkZXIgc2hlIGdvdCwgdGhlIHN0cm9uZ2VyIGl0IGdvdCB1bnRpbCBzaGUgZmluYWxseSBtYWRlIGl0IHRvIEFtZXJpY2Egd2hlcmUgc2hlIGlzIG5vdyBsaXZpbmcgaGVyIGRyZWFtIGxpZmUgYW4gaGFzIG5vIGludGVudGlvbiBvZiBsZWF2aW5nLiBJdCBzaG91bGRuIGJlIGhhcmQgZm9yIENvbHQgdG8gcHJvdmUgaGlzIGNhc2UsIHVuZm9ydHVuYXRlbHkgaGUgZGlkbiBwcmVzcyBjaGFyZ2VzIHRoZSBmaXJzdCB0d28gdGltZXMgYW5kIHRob3NlIGNoYXJnZXMgd2VyZSBkcm9wcGVkLCBtaW5kIHlvdSwgcmVjb3JkcyBzaG93IHNoZSB3YXMgc3RpbGwgYXJyZXN0ZWQgZm9yIERWIHNvIG1heWJlIGJ1dCBJIGJldCBoZSByZWdyZXR0aW5nIGl0IG5vdy4KVGhlIHZvdGUgdGhlbiB3ZW50IHRvIHRoZSBIb3VzZSwgd2hpY2ggdm90ZWQgMzUgdGltZXMgd2l0aG91dCBlaXRoZXIgY2FuZGlkYXRlIGdldHRpbmcgYSBtYWpvcml0eS4gRmluYWxseSwgSmVmZmVyc29uIHdvbiBhbmQgYmVjYW1lIHRoZSAzcmQgcHJlc2lkZW50IG9uIHRoZSAzNnRoIHZvdGUsIGFuZCBBYXJvbiBCdXJyIGJlY2FtZSB0aGUgdmljZSBwcmVzaWRlbnQuCkkndmUgdGhvdWdodCBhYm91dCB0YWxraW5nIHRvIG15IG5ldyBmcmllbmRzIGFib3V0IGl0IGJ1dCBjYW4ndCByZWFsbHkgZmluZCBhbiBhcHByb3ByaWF0ZSB0aW1lIHRvIGxldCB0aGVtIGtub3cgYWJvdXQgbXkgcHJvYmxlbXMgYW5kIGFzayBmb3IgaGVscC4uIApIb3dldmVyLCBpZiB5b3UgbGlrZSBsZXNzIHRoYW4gY29tbW9uIHBva2VyIHZlcnNpb25zLCBsaWtlIHBlcmhhcHMgdGhlIFJhenogb3IgNSBjYXJkIGRyYXcsIGl0IGlzIGltcG9ydGFudCB0aGF0IHlvdSBmaW5kIG91dCBpZiB0aGUgb25saW5lIHNpdGUgeW91IGFyZSBzdXBwb3J0aW5nIGhhcyB0aGF0IGdhbWUuIApJIHdhcyBsb29raW5nIGF0IHRob3NlIGFuZCBzdGFydGVkIGRpZ2dpbmcgdGhyb3VnaCBwaWN0dXJlcy4gClRSQURFIFNFQ1JFVCBpcyB0aGUgc3VnZ2VzdGlvbjsgRWlnaHQgSG91cnMgYW5kIFN3aWxseSBGZXJyeSBjb21wbGV0ZSB0aGUgcmVxdWlyZWQgc2hvcnQgbGlzdC5UaGUgbGFzdCBmaXZlIHdpbm5lcnMgaGF2ZSBhbGwgYmVlbiByZXR1cm5lZCBpbiBzaW5nbGUgZmlndXJlcyBzbyBpdCdzIHdlbGwgd29ydGggcGF5aW5nIGF0dGVudGlvbiB0byB0aGUgbWFya2V0LiAKVGhleSBzZWVuIHRoYXQgVFYgZXBpc29kZSB3aGVyZSB0aGUgaGVybyBpbmR1Y2VzIGEgY2FsbCB0aHJvdWdoIGdvb2QgYWN0aW5nLiAKT2xkIG1pbmlzIGNhbiBzdGlsbCBiZSB1c2VkIGluIHRoZSBnYW1lLiAKTGlrZSBzaGUgaGFkIHRvIGhhdmUgYmVlbiBpbiBoZXIgOTBzIHdoZW4gd2Ugd2VyZSB1bmRlciAxMC4gQW55d2F5LCB0aGUgZ2FtZSBpbnZvbHZlZCBnZXR0aW5nIHMgYXR0ZW50aW9uLCB3aGljaCBtYWRlIGhlciBhbmdyeSB3aXRoIGEgMTAwJSBzdWNjZXNzIHJhdGUsIGFuZCB0aGVuIHJ1bm5pbmcgYXdheSBhbmQgbWFraW5nIHRoaXMgOTAgeWVhciBvbGQgd29tYW4gY2hhc2UgdXMuIApMb2FkaW5nLiAKSSBjb3VsZG4gZG8gaXQgd2l0aG91dCB0aGVtLiAKTm9wZS4gWW91IGFyZSBjb25mdXNpbmcgd2hpdGUgd2l0aCBBbWVyaWNhbi4gQW1lcmljYW4gQ2hyaXN0aWFucyBhcmUgYSB3aG9sZSBkaWZmZXJlbnQgc3BlY2llcyBmcm9tIG90aGVyIHdvcmxkIENocmlzdGlhbnMuIE5vdCB0aGF0IGFueSBvZiB0aGVtIGFyZSB1cCB0byBhbnkgZ29vZC4gQW1lcmljYW4gQ2hyaXN0aWFucyBlcXVhbHMgSmVzdXMgYXMgbm90IG9ubHkgd2hpdGUgYnV0IGFsc28gc291dGhlcm4sIGJsb25kZSwgY29uc2VydmF0aXZlLCBwcm8gZ3VucywgYWdhaW5zdCB0aGUgcG9vciwgYWdhaW5zdCB0aGUgaHVuZ3J5LCBhZ2FpbnN0IHRoZSBwZXJzZWN1dGVkLCBwcm8gd2FsbCwgdW5icmlkbGVkIGNhcGl0YWxpc3QsIHBybyBtaWxpdGFyeSwgc2V4aXN0LCBpc2xhbW9waG9iaWMsIGFnYWluc3QgQ2F0aG9saWNzLCBwcm8gZ3VucywgYnJvd24vYmxhY2sgaGF0aW5nLCBtYWdhL3doaXRlIHJvYmUgd2VhcmluZyBhbmQgbW9yZSB0aGFuIGEgbGl0dGxlIE5hemkuIEJ1dCB0aGVpciBsZWFkZXIgd2FzIGFub2ludGVkIGJ5IHRoZSBhbG1pZ2h0eS4gRk1MCkkgd2FzIG5vdCBhc2tlZCBpZiBJIHdhbnRlZCBteSBvd24gaG90ZWwgcm9vbSBJIGhhZCBubyBwcml2YWN5LCBubyBjaGFuY2UgdG8gdGFsayB0byBhbnkgZmFtaWx5LCBubyBjaGFuY2UgdG8gdGFsayB0byBhbnkgZnJpZW5kcywgbm8gY2hhbmNlIHRvIGhhdmUgc2V4IGlmIEkgd2FudGVkIHRvIGhhdmUgc2V4LiAKSGUgd2FzIGFsd2F5cyBmaWdodGluZyBmb3Igd2hhdCB3YXMgcmlnaHQsIHdoYXQgd2FzIGdvb2QgZm9yIHRoZSBwZW9wbGUuIApUaGV5IGFyZSBleHBsaWNpdGx5IHRoZSB2YWx1YXRpb24gb2YgcGh5c2ljYWwgYmVhdXR5IGluIGEgY29tcGV0aXRpdmUgZW52aXJvbm1lbnQuIFdoaWxlIGl0IG5pY2UgdG8gYmUgcmVjb2duaXplZCBmb3IgaGF2aW5nIGFuIGFlc3RoZXRpY2FsbHkgcGxlYXNpbmcgYm9keSBhbmQgZmFjZSwgaXQgaGFyZGx5IHNvbWV0aGluZyB0aGF0IGhhcyB0aGUgY2FwYWNpdHkgdG8gdGVhY2ggYW55IGxpZmUgc2tpbGxzLiAKQWNjb3JkaW5nIHRvIHRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIE9ydGhvcGVkaWMgU3VyZ2VvbnMgKEFBT1MpLCB5b3VyIGZlZXQgYWJzb3JiIHVwIHRvIG9uZSBtaWxsaW9uIHBvdW5kcyBvZiBwcmVzc3VyZSBkdXJpbmcgYSBzdHJlbnVvdXMsIGhvdXIgbG9uZyB3b3Jrb3V0IS4gClRoZSBhbW91bnQgb2YgdGltZSBpdCB0YWtlIHlvdSB0byBraWxsIGNvdmVuIGlzIGhhcmQgdG8gcHJlZGljdC4gCkFwcGx5IHRoaXMgdHJlYXRtZW50IGRhaWx5LiAKQW4gdXBwZXIgeWVhciBtZWRpY2FsIHN0dWRlbnQgd2hvIHNwb2tlIGF0IHRoZSByYWxseSBjb21tZW50ZWQgdGhhdCwgYmVmb3JlIHRoaXMgcG9saWN5IG1vdmUsIHNoZSBoYWQgbm90IGtub3duIG11Y2ggYWJvdXQgdGhlIGludGVyc2V4IGNvbW11bml0eS4gQWRtaXR0ZWRseSwgbmVpdGhlciBoYWQgSS4gVW5mb3J0dW5hdGVseSwgaWdub3JhbmNlIGFib3V0IHRoZSB0cmFuc2dlbmRlciwgaW50ZXJzZXgsIGFuZCBnZW5kZXIgZXhwYW5zaXZlIGNvbW11bml0eSBhcHBlYXJzIHRvIGJlIHdpZGVzcHJlYWQgYW1vbmcgbWVkaWNhbCBzdHVkZW50cyBhbmQgcGh5c2ljaWFucy4KNzhjbU5laWd1bmdzZ3JhZDogdm9uIDkwIGF1ZnJlY2h0IGJpcyBjYS4gMTc1IGxpZWdlbmQgR2V3aWNodDogY2EuIERpZSBXYWhsIFdvaG56aW1tZXIgTWJlbCwgZGllIGluIE1vZGUgaXN0IG1hbmNobWFsIHNjaHdpZXJpZywgYWJlciBiZXdlaXNlbiBrYW5uIGVpbmZhY2ggc2Vpbiwgd2VubiBzaWUgbWl0IGRlciByaWNodGlnZW4gUGZsZWdlIHVuZCBHZWdlbmxlaXN0dW5nIGVyZm9sZ3QuIApUaGV5IHdlcmUgY2hhcmdlZCB3aXRoIHByb3N0aXR1dGlvbiBhbmQgcmVsYXRlZCBjb3VudHMuMyBXb21lbiBBcnJlc3RlZCBJbiBQcm9zdGl0dXRpb24gU3RpbmcgSGVsbGVydG93bi4gClRlbGwgbWUgaG93IGJhZCBJIGFtLiAxLzIgTkwgSGVybyBpbiB0aGUgQkIgcmFpc2VzIHRvIDE1IHdpdGggVFQsIGdldHMgY2FsbGVkIGJ5IDYgcGVvcGxlLiBGbG9wIGNvbWVzIFFKVCByYWluYm93LiBIZXJvIGNoZWNrcyBhbmQgaXQgY2hlY2tzIGFyb3VuZCB0byB0aGUgYnV0dG9uLCBhIHJlZ3VsYXIgd2hvIGhhcyBiZWVuIHBsYXlpbmcgZmFpcmx5IHRpZ2h0IGFuZCBoYXMgc2hvd24gbWUgdGhlIG51dHMgdHdpY2UgYWxyZWFkeSB0b25pZ2h0LiBCdXR0b24gcmFpc2VzIHRvIDU1JC4gU2NhcmVkIG9mIFFRLCBLSywgYW5kIEFLLCBhcyB3ZWxsIGFzIGJlaW5nIG91dCBvZiBwb3NpdGlvbiB3aXRoIHBsYXllcnMgYmVoaW5kLCBoZXJvIHRhbmtzIGFuZCBldmVudHVhbGx5IGZvbGQuIEl0IGZvbGRzIGFyb3VuZCB0byB2aWxsYWluIGFuZCBzaGUgdHVybnMgb3ZlciBLSiBmb3IgYSBwYWlyIGFuZCBhbiB1cCBhbmQgZG93biBzdHJhaWdodCBkcmF3LgpJZiB5b3UgaW52b2x2ZWQgd2l0aCBmb29kIHByZXAgYW5kIGNvb2tpbmcsIHlvdSBjYW4gdHJ5IGFuZCBidXkgdGhpbmdzIGluIG1pbmltYWwgcGFja2FnaW5nLiAKQmFjayBpbiB0aGUgZGFyayBhZ2VzLCB2aXNpdGluZyBtdWx0aXBsZSBzdG9yZXMgcmVxdWlyZWQgYSBzaG9wcGVyIHRvIG5hdmlnYXRlIChzaHVkZGVyKSB0aGUgb3V0ZG9vcnMuIEhlcmUgaW4gdGhlIGZyb3plbiB0dW5kcmEsIHRoYXQganVzdCB3b3VsZG4ndCBkby4gTHVja2lseSwgTWlubmVzb3RhIGlzIGEgc3RhdGUgb2YgaW5ub3ZhdG9ycywgYSBsYW5kIHdoZXJlIGJyaWxsaWFudCBtaW5kcyBjYW4gc3BpdGJhbGwgaWRlYXMgbGlrZSAiaG93IGFib3V0IGEgZ2lhbnQgYnVpbGRpbmcgZmlsbGVkIHdpdGggZGlmZmVyZW50IHJldGFpbGVycyBhbmQgc3Vycm91bmRlZCBieSBhY3JlcyBvZiBmcmVlIHBhcmtpbmciIGFuZCBub3QgZ2V0IGxhdWdoZWQgb3V0IG9mIHRvd24uIE9mIGNvdXJzZSB3ZSBhcmUgdGhlIGhvbWUgb2YgdGhlIGNvdW50cnkncyBmaXJzdCBlbmNsb3NlZCBzaG9wcGluZyBtYWxsLCBTb3V0aGRhbGUsIHdoaWNoIG9wZW5lZCBpbiAxOTU2IGFuZCBzdGlsbCBzdGFuZHMgdG9kYXkuIEl0IGhhcyB0aHJlZSBkZXBhcnRtZW50IHN0b3JlIGFuY2hvcnMgKE1hY3kncywgSGVyYmVyZ2VyJ3MsIEpDIFBlbm5leSkuIEl0IGxhbmRlZCBNaW5uZXNvdGEncyBmaXJzdCBNYWRld2VsbCBzdG9yZSAobm93IG9uZSBvZiB0d28pLiBUaGVyZSdzIENvYWNoLCBBcHBsZSwgZXZlbiBhIHNob2UgcmVwYWlyIHBsYWNlIGFuZCBhIHRhaWxvci4gUmVub3ZhdGlvbnMgaW4gMjAxMiBicm91Z2h0IFNvdXRoZGFsZSdzIGxvb2sgaW50byB0aGUgbW9kZXJuIGVyYSBhbmQgYWRkZWQgbmV3IHRlbmFudHMgaW5jbHVkaW5nIGEgU21hc2hidXJnZXIgKHdoaWNoIGlzIHBhcnQgb2YgdGhlIG1hbGwncyBEaW5pbmcgUGF2aWxpb24sIG5vIG1lcmUgRm9vZCBDb3VydCBoZXJlKS4gQXMgeW91IHdhbGsgaXRzIHRlbXBlcmF0dXJlIGNvbnRyb2xsZWQgZW52aXJvbnMsIHRoYW5rIHlvdXIgaGFyZHkgTWlubmVzb3RhbiBmb3JiZWFycyBmb3IgdGhlaXIgaW52ZW50aXZlbmVzcy4KU2hlIHdhcyBhbiBhY3RpdmUgcGFydGljaXBhbnQgaW4gdGhlIGxpdmVzIG9mIGhlciBncmFuZGNoaWxkcmVuIGFuZCB0aGVpciBhY3Rpdml0aWVzLCB3aGV0aGVyIGl0IHdhcyBhdHRlbmRpbmcgR3JhbmRwYXJlbnRzJyBEYXkgb3Igc3BvcnRpbmcgZXZlbnRzIGF0IFdlYmIgU2Nob29sIGluIEJlbGwgQnVja2xlLCBUZW5uLiwgUml2ZXJkYWxlIEhpZ2ggU2Nob29sIG9yIGEgYmFzZWJhbGwgZ2FtZSBvciBib3dsaW5nIHRvdXJuYW1lbnQgaW4gTXVyZnJlZXNib3JvLCBUZW5uLi4gCkJlY2F1c2UgeW91IGhhdmUgYSBwYWlyIG9mIHF1ZWVucywgeW91IG11c3QgYXNzdW1lIHRoYXQgaWYgZWl0aGVyIG9mIHRoZSBvdGhlciB0d28gcXVlZW5zIGhpdCwgaXQgd2lsbCBpbXByb3ZlIHlvdXIgaGFuZCB0byBtYWtlIHlvdSB0aGUgd2lubmVyLiBUaGVyZSBhcmUgYWxzbyB0aHJlZSByZW1haW5pbmcgYWNlcyB0aGF0IHdpbGwgaW1wcm92ZSB5b3UgdG8gdHdvIHBhaXIuIFRoaXMgbWFrZXMgZml2ZSBvdXRzLiBJbiBhZGRpdGlvbiwgaWYgYW55IGNsdWIgaGl0cywgaXQgd2lsbCBnaXZlIHlvdSBhbiBhY2UgaGlnaCBmbHVzaC4gU28geW91IGhhdmUgbmluZSBvdGhlciBvdXRzICh0aGUgcmVtYWluaW5nIGNsdWJzKS4gVGhpcyBnaXZlcyB5b3UgMTQgb3V0cy4gTm93IHlvdSBoYXZlIHNlZW4gZml2ZSBjYXJkcyAoeW91ciBob2xlIGNhcmRzIGFuZCB0aGUgdGhyZWUgb24gdGhlIGZsb3ApIG91dCBvZiBhIDUyIGNhcmQgZGVjay4gVGhpcyBsZWF2ZXMgNDcgdW5zZWVuIGNhcmRzIGJlZm9yZSB0aGUgdHVybi4gVGhpcyBtZWFucyB0aGF0IDE0IG91dCBvZiA0NyBjYXJkcyBjYW4gY29tZSBvbiB0aGUgdHVybiBhbmQgaW1wcm92ZSB5b3VyIGhhbmQsIGFuZCAzMyB3aWxsIG5vdCBoZWxwIHlvdSBhdCBhbGwuIFRoaXMgbWFrZXMgdGhlIG9kZHMgcm91Z2hseSAyLjQgdG8gMS4KRGVhdGggYW5kIGRlc3RydWN0aW9uLiAKSWYgeW91J3JlIGEgbm92aWNlLCBCZWFuIHNheXMgc2l0IGRvd24gZHVyaW5nIGEgbGVzcyBidXN5IHRpbWUsIHN1Y2ggYXMgdGhlIGFmdGVybm9vbiwgYW5kIHRoZSBkZWFsZXIgd2lsbCB3YWxrIHlvdSB0aHJvdWdoIHRoZSBnYW1lLgpTbyB0aGVyZSBhcmUgc29tZSBwcmV0dHkgc3BlY2lmaWMgcGFyYW1ldGVycyBmb3Igc2l0aW5nLCBhcyB3ZWxsIGFzIGNhbGlicmF0aW9uLCBhbmQgdGhlIGNhbGlicmF0aW9uIGNvbmRpdGlvbnMuClNwZWFraW5nIHRocm91Z2ggYSBzcG9rZXNtYW4sIE1yIEl2ZXkgc2FpZDogSSBhbSBvYnZpb3VzbHkgZGlzYXBwb2ludGVkIHdpdGggdGhpcyBqdWRnZSBkZWNpc2lvbi4gQXMgSSBzYWlkIGluIGNvdXJ0LCBpdCBpcyBub3QgbXkgbmF0dXJlIHRvIGNoZWF0IGFuZCBJIHdvdWxkIG5ldmVyIGRvIGFueXRoaW5nIHRvIHJpc2sgbXkgcmVwdXRhdGlvbi4gSSBhbSBwbGVhc2VkIHRoYXQgdGhlIGp1ZGdlIGFja25vd2xlZGdlZCBpbiBjb3VydCB0aGF0IEkgd2FzIGEgdHJ1dGhmdWwgd2l0bmVzcy4KU28gSSdkIGxpa2UgdG8gcG9zc2libHkgdHVybiB5b3Ugb250byB0byBzb21ldGhpbmcgSSd2ZSBiZWVuIGRvaW5nIGFuZCBnZXQgeW91ciBpbnNpZ2h0LiBJJ20gc3VyZSB5b3UgYXJlIGZhbWlsaWFyIHdpdGggRU1EUi4gCk5vdCBqdXN0IHlvdXIgYm9keSB3aWxsIGJlbmVmaXQgZnJvbSBtYXNzYWdlcywgYnV0IHlvdXIgbWluZCBhcyB3ZWxsLiAKRXh0cmVtZSBQdWJsaWMgUGlzcyAzNC4gMjQsOTkuIEV2ZXJ5dGhpbmcgU2NhdHRpbmcgNS4gClRoaXMgd2FzIHRoZSBzdG9yeSBJIHdhcyByZWZlcnJpbmcgdG8gb2ZmIGhhbmQ6SSB3YW50IHRvIGJlIGNsZWFyIHRoYXQgSSBhbSB3ZWxsIGF3YXJlIG9mIHRoZSBoaXN0b3J5IG9mIG5hdGl2ZSBjaGlsZHJlbiBiZWluZyBzdG9sZW4gYW5kIHdoeSB0aGlzIGlzIHN1Y2ggYSBob3QgdG9waWMuIEkgYW0gbm8gd2F5IHRyeWluZyB0byBmZWFyIG1vbmdlciBvciBzaWRlIGVpdGhlciB3YXkuIApEaWUgRmFocnQgdm9uIFNhbnRhIENydXogaW0gT3N0ZW4gcXVlciBiZXIgZGllIEluc2VsIG5hY2ggVG9kb3F1ZSIsIGRpZSBLb21tdW5lIGF1ZiBkZXJlbiBHZWJpZXQgbWVpbiBRdWFydGllciBsaWVndCwgc3RlbGx0IGRhbm4gZ2xlaWNoIGFuc2NoYXVsaWNoIHVudGVyIEJld2VpcyB3YXJ1bSBMYSBQYWxtYSBkZW4gQmVpbmFtZW4gSXNsYSBCb25pdGEgdHJndC4gRGllIFN0cmFlIHNjaGxuZ2VsdCBzaWNoIGR1cmNoIGRpY2h0ZSBXbGRlciBkZW4gVnVsa2FuIGhpbmF1ZiB1bmQgZ2V3aHJ0IGltbWVyIHdpZWRlciB0b2xsZSBBdXNibGlja2UgYXVmIGVpbmUgZHVyY2hnZWhlbmQgbWl0IGRpY2h0ZXIgVmVnZXRhdGlvbiBiZXdhY2hzZW5lIExhbmRzY2hhZnQuIAoiQXJhY2hpZG9uaWMgYWNpZCAoQUEpIHByZXNlbnQgaW4gY2VsbCBwaG9zcGhvbGlwaWRzIGlzIHRoZSBwcmVjdXJzb3Igb2YgcHJvIGluZmxhbW1hdG9yeSBlaWNvc2Fub2lkcywgYW5kIHN1cHBsZW1lbnRhdGlvbiB3aXRoIGFyYWNoaWRvbmljIGFjaWQgcmVzdWx0cyBpbiBzdGltdWxhdGVkIHByb3N0YWdsYW5kaW4gKFBHKSBmb3JtYXRpb24uIgpBcyBzb21lb25lIHdobyBzaXRzIGF0IGEgZGVzayBhbGwgZGF5LCBJIG5lZWQgbW9yZSBvZiB0aGlzIGtpbmQgb2YgZXhlcmNpc2UgaW4gbXkgbGlmZS4uIAoxKSBZb3UgY2FuIGdldCB5b3VyIFBSIGNhcmQgY291cmllcmVkIHRvIHlvdS4KV2l0aCB0aGUgZXhjZXB0aW9uIG9mIChtYXliZSkgVGhvciwgdGhlIE1DVSBjYW4gYmUgcG9pc29uZWQgb3IgZGVzdHJveWVkIGJ5IGEgZmx1cnJ5IG9mIG51a2VzLiBNYXliZSBUaG9yIGNvdWxkIHRha2Ugb25lLCBidXQgY291bGQgaGUgdGFrZSAzIG9yIDQ/IElNTyB0aGUgc3RhciBmZWF0IGlzIGltcHJlc3NpdmUsIGJ1dCB3aGF0IGlmIFRob3Igd2VyZSBiZWluZyBjb25zdGFudGx5IG5hcGFsbWVkIGJ5IGEgbGl0ZXJhbCBlbmRsZXNzIGZsdXJyeSBvZiBkcm9uZXM/IFdoYXQgd291bGQgaGFwcGVuIHdoZW4gdGhlIG1pbGl0YXJ5IHB1dHMgYSB3YWxsIG9mIGJhYmllcyBhcm91bmQgdGhlaXIgYmFzZXM/IElmIG1vcmFscyBhcmUgb24sIEkgY2FuIHNlZSBtb21lbnRzIG9mIGhlc2l0YXRpb24gd2l0aCBtb3N0IG9mIHRoZXNlIGhlcm9zLiAKRG9uYWxkIER1Y2sgaXMgdGhlbiBpbnRyb2R1Y2VkIGluIGFuIGFuaW1hdGVkIHNlZ21lbnQuIApUaGFuayB5b3UgZm9yIHlvdXIgZmlyc3QgaGFuZCBhY2NvdW50LiBJIHRoaW5rIHRoZSByZWFzb24gTmV0YW55YWh1IGxpa2VzIHRvIGNhbGwgdGhlbSB0ZXJyb3IgdHVubmVscyBpcyBiZWNhdXNlIGl0IGlnbm9yZXMgdGhlIGZhY3QgdGhhdCBtYW55IG9mIHRoZW0gd2VyZSBjb25zdHJ1Y3RlZCBiZWNhdXNlIG9mIHRoZSBibG9ja2FkZSBhbmQgdG8gc3VwcGxlbWVudCB0aGUgZWNvbm9teSAoZXZlbiBpZiBpdCB3YXMgY29ycnVwdCBhbmQgc3RpbGwgZnVubmVsaW5nIG1pbGl0YXJ5IHN1cHBsaWVzKS4gSnVzdCBsaWtlIGhlIGNhbGxzIGhpcyB2aWN0aW1zIGh1bWFuIHNoaWVsZHMsIGFuZCBub3QganVzdCBodW1hbnMuSSB0aGluayBhIGxvdCBvZiBKZXdzIChpbiBJc3JhZWwgYW5kIHRoZSBkaWFzcG9yYSkgYmVsaWV2ZSB0aGF0IElzcmFlbCBzaG91bGQgZXhpc3QgYmVjYXVzZSB0aGUgSmV3cyBuZWVkIGEgaG9tZWxhbmQuIApGcmVlcm9sbHMgYXJlIGh5cGVyIHR1cmJvcyB3aXRoIHNvbWUgZ29vZCBwcml6ZXMgaW5jbHVkaW5nIFdQVCBzZWF0cywgYW5kIE1UVHMgYXJlIHR1cmJvcyB0aGF0IHJ1biBuaWdodGx5IChhbmQgZHVyaW5nIHNlYSBkYXlzKS4gClRoZSBtb25leSB3YXMgdGhlbiBkZXBvc2l0ZWQgaW50byBhbm90aGVyIG9mIGhpcyBiYW5rIGFjY291bnRzIGJlZm9yZSBiZWluZyB0cmFuc2ZlcnJlZCB0byBhbiBhY2NvdW50IGhlIGhhZCBzZXQgdXAgaW4gMTk5NyB3aXRoIE5vcnRoZXJuIFRlcnJpdG9yeSBiYXNlZCBnYW1ibGluZyB3ZWJzaXRlIENlbnRyZWJldC4gSnVkZ2UgR2F5bm9yIHNhaWQgTmljaG9sYXMsIGEgZmF0aGVyIG9mIHR3bywgaGFkIHdhZ2VyZWQgbW9zdGx5IG9uIHNwb3J0aW5nIGV2ZW50cyBhbmQgb2NjYXNpb25hbGx5IGF0IGEgY2FzaW5vIGJ1dCBoYWQgbm90IHVzZWQgcG9rZXIgbWFjaGluZXMuIApJcyBhbGwgYWJvdXQgc3VwcG9ydGluZyBjaGFyaXRpZXMgYW5kIG5vbiBwcm9maXRzIGJlY2F1c2UgdGhleSBqdXN0IGJlbmVmaXQgb3VyIGNvbW11bml0aWVzIGluIHNvIG1hbnkgd2F5cywgc2FpZCB0aGUgTGFtYnRvbiBLZW50IE1pZGRsZXNleCBNUFAuCkFubmUgY291bGQgaGFyZGx5IGRpc2NhcmQgaXQgY29tcGxldGVseSwgZm9yIHRoZXJlIHdlcmUgdW5kb3VidGVkbHkgdGltZXMgd2hlbiBzaGUgZmVsdCwgd2l0aCBhbiBpbnN0aW5jdCB0aGF0IHdhcyBub3QgdG8gYmUgY29tYmF0ZWQgYnkgcmVhc29uLCB0aGF0IExlc2xpZSBoYXJib3JlZCBhIHF1ZWVyLCBpbmRlZmluYWJsZSByZXNlbnRtZW50IHRvd2FyZHMgaGVyLiBBdCB0aW1lcywgdGhpcyBzZWNyZXQgY29uc2Npb3VzbmVzcyBtYXJyZWQgdGhlIGRlbGlnaHQgb2YgdGhlaXIgY29tcmFkZXNoaXA7IGF0IG90aGVycyBpdCB3YXMgYWxtb3N0IGZvcmdvdHRlbjsgYnV0IEFubmUgYWx3YXlzIGZlbHQgdGhlIGhpZGRlbiB0aG9ybiB3YXMgdGhlcmUsIGFuZCBtaWdodCBwcmljayBoZXIgYXQgYW55IG1vbWVudC4gU2hlIGZlbHQgYSBjcnVlbCBzdGluZyBmcm9tIGl0IG9uIHRoZSBkYXkgd2hlbiBzaGUgdG9sZCBMZXNsaWUgb2Ygd2hhdCBzaGUgaG9wZWQgdGhlIHNwcmluZyB3b3VsZCBicmluZyB0byB0aGUgbGl0dGxlIGhvdXNlIG9mIGRyZWFtcy4gClJ1c3NpYSB1cmdlcyBKYXBhbiB0byAnYWNjZXB0IHRoZSByZXN1bHQnIG9mIFdvcmxkIFdhciBJSSAgIFJ1c3NpYSdzIGZvcmVpZ24gbWluaXN0ZXIgaGFzIGNhbGxlZCBvbiBUb2t5byB0byBhY2NlcHQgdGhlIG91dGNvbWUgb2YgdGhlIHdhciBpbiBvcmRlciB0byBhZHZhbmNlIGRpc2N1c3Npb25zIG9uIGEgcGVhY2UgcGxhbi4gUnVzc2lhIGFuZCBKYXBhbiBoYXZlIHlldCB0byBzaWduIGEgcGVhY2UgdHJlYXR5IHNpbmNlIHRoZSBlbmQgb2YgV29ybGQgV2FyIElJLiBHb29kIEphcGFuZXNlIHBlb3BsZSBnb2VzIG9uIHRoZSBzZWNvbmQgcGFnZSBvZiBhIG5ld3NwYXBlciB3aGlsZSBzaGFtZWxlc3MgSmFwYW5lc2UgcG9saXRpY2lhbiAoZXguICApIGdvZXMgb24gdGhlIGZpcnN0IHBhZ2UgaGVhZGxpbmUgICBiZWNhdXNlIHRoZXkgYXJlIHRoZSBvbmUgd2hvIGlzIGluIGNoYXJnZSBvZiBKYXBhbi4gCkRhbW4geW91IG5haWxlZCBpdC4gCldhcm5lIGlzIG5vIG5ld2NvbWVyIHRvIHBva2VyLiBJbiAyMDA2IGhlIGFuZCBaYWMgR29sZHNtaXRoLCB0aGUgc29uIG9mIHRoZSBiaWxsaW9uYWlyZSBTaXIgSmFtZXMgYW5kIHRoZSBlZGl0b3Igb2YgVGhlIEVjb2xvZ2lzdCwgc2V0IHVwIGEgaGlnaCBzdGFrZXMgY2hhcml0eSB0b3VybmFtZW50IHdoaWNoIGF0dHJhY3RlZCBiaWcgbmFtZXMsIHJhaXNpbmcgbW9yZSB0aGFuICQ1MDAsMDAwLiBBbmQgYWZ0ZXIgcmV0aXJpbmcgZnJvbSBpbnRlcm5hdGlvbmFsIGNyaWNrZXQgMTIgbW9udGhzIGFnbywgV2FybmUsIDM4LCBpcyBsb29raW5nIGF0IG90aGVyIGF2ZW51ZXMgYmVzaWRlcyBjcmlja2V0Li4gCkRvIHlvdSBoYXZlIHRoZSByZW1hc3RlcmVkIHZlcnNpb24gb2YgUkRSMSBmb3IgdGhlIE9uZSBYIG9yIHRoZSBQUzMgb3IgMzYwIHZlcnNpb24/IEJlY2F1c2UgdGhlIFBTMyB2ZXJzaW9uIGRvZXMga2luZCBvZiBsb29rIGRhdGVkIGFuZCBvbmx5IGhhcyBhIDY0MHAgcmVzb2x1dGlvbiB3aGljaCBpcyB1cHNjYWxlZCB0byA3MjBwLiBUaGUgMzYwIHZlcnNpb24gaGFzIG5hdGl2ZSA3MjBwIGFuZCB0aGUgT25lIFggcmVtYXN0ZXJlZCBoYXMgNGsgcmVzb2x1dGlvbi4KKFRoZXJlZm9yZSwgdGhlIHRvdGFsIG1pbGxpZ3JhbXMgaW4gdGhlaXIgc3lzdGVtLCBvciBibG9vZCBzZXJ1bSBsZXZlbHMsIGFyZSBhcyBoaWdoIGFzIHRoZXkgd2lsbCBnby4gV2UgZGVmaW5lIHRoaXMgYXMgInN0YWJsZSIgb24gdGhlIGRvc2UuIFRoaXMgbnVtYmVyIGFwcHJvYWNoZXMgMlggYnV0IGRvZXMgbm90IHJlYWNoIGl0LikgVGhleSBkZWNyZWFzZSB0aGVpciBkb3NlIGJ5IFkgbnVtYmVyIG9mIG1pbGxpZ3JhbXMgYSBzaW5nbGUgdGltZSwgd2hhdCB3aWxsIGJlIHRoZWlyIGJsb29kIHNlcnVtIGxldmVscyBvbiBlYWNoIGRheSBmb3IgdHdvIHdlZWtzIGFmdGVyIHRoZSBkcm9wPyBFRElUIEZPUiBDTEFSSUZJQ0FUSU9OOiBQQVRJRU5UIERST1BTIFRIRUlSIERPU0UgVE8gWSBNR1MgQU5EIFNUQVlTIEFUIChYIFkpIE1HUyBFVkVSWSBEQVkgQUZURVIgVEhBVC4uIApTaGUgYWxzbyBrZWVwcyB0cmFjayBvZiBoZXIgbWVhc3VyZW1lbnRzLCB0aGVyZSdzIGEgbG90IG9mIGluY2hlcyBsb3N0LiAKWW91IHdhbnQgdG8gc2V0IHVwIGFuIGluaGVyaXRhbmNlIGJlZm9yZSB5b3UgZGllLCB0aGVyZSBjYW4gYmUgdGF4IGFkdmFudGFnZXMgdG8gYSB0cnVzdEEgYmlnIHBhcnQgb2YgaXQgaXMgdGhlIGV4YWN0IHNhbWUgdGhpbmcgaXNuIGFsd2F5cyBleGFjdGx5IHRoZSBzYW1lLgpUaGUgY2FzdCBhbmQgdGhlIGNyZWF0b3JzIHdlcmUgYmFjayB0b2dldGhlciBpbiBOZXcgWW9yayBhdCB0aGUgUGFsZXkgQ2VudGVyIEZvciBNZWRpYSB0byBzY3JlZW4gYW4gZXBpc29kZSBvZiB0aGUgc2hvdyB3aXRoIGZhbnMgYW5kIGRpc2N1c3MgdGhlaXIgbGl2ZXMuClByZXNpZGVudCBWaWt0b3IgWXVzaGNoZW5rbyB2ZXRvZWQgdGhlIGxhdywgY2FsbGluZyBpdCAicG9wdWxpc3QsIiBvbmx5IHRvIGhhdmUgaGlzIGRlY2lzaW9uIG92ZXJ0dXJuZWQgYnkgcGFybGlhbWVudC4gQW5kIEludGVyaW9yIE1pbmlzdGVyIFl1cml5IEx1dHNlbmtvLCB3aG8gd2lsbCBiZSBpbiBjaGFyZ2Ugb2YgZW5mb3JjaW5nIHRoZSBiYW4sIGhhcyBleHByZXNzZWQgaGlzIG1pc2dpdmluZ3MgdGhhdCBhbGwgZXN0YWJsaXNobWVudHMgYXJlIGJlaW5nIHRhcnJlZCB3aXRoIHRoZSBzYW1lIGJydXNoLiAiSSB0aGluayBpdCdzIHdyb25nIHRvIGJhbiBjYXNpbm9zLCIgaGUgdG9sZCByZXBvcnRlcnMsIGFkZGluZyB0aGF0IGhlIGJsYW1lcyBzbG90IG1hY2hpbmUgaGFsbHMsIG5vdCBjYXNpbm9zLCBmb3IgdGhlIHJpc2UgaW4gZ2FtYmxpbmcgYWRkaWN0aW9uLiAKTGUgYnJ1aXQgbWlzIHBhciBsZSBTb25pYyBUZWVuYWdlciBEZXRlcnJlbnQgY29uZmVjdGlvbm4gcGFyIFN0YXBsZXRvbiBldCBxdSdldXggc2V1bHMgcGV1dmVudCBvdXIsIHBvdXIgZGVzIHJhaXNvbnMgcGh5c2lvbG9naXF1ZXMgbGllcyAgbCdnZSwgZXN0IHRlbGxlbWVudCBpbnN1cHBvcnRhYmxlIHF1J2lscyBzb250IGNvbnRyYWludHMgZGUgZGNhbXBlciBzdXIgbGUgY2hhbXAuIExlcyB2aWJyYXRpb25zIHJpZW4gbW9pbnMgcXUnaGFybW9uaXF1ZXMgZGUgODAgZGNpYmVscyBzdXIgdW5lIGxvbmd1ZXVyIGQnb25kZXMgcG91dmFudCBhbGxlciBqdXNxdScgMTYga0h6IHZvcXVlbnQgbGUgYm91cmRvbm5lbWVudCBkJ3VuIG1vdXN0aXF1ZSBwcmlzIGRlIGZybnNpZSBhbW91cmV1c2Ugb3UgbGUgZ21pc3NlbWVudCBkJ3VuIHZpb2xvbiBlbnRyZSBsZXMgbWFpbnMgZCd1biBkYnV0YW50IGRlIHRyb2lzIGFucyBoeXBlcmFjdGlmLCBjJ2VzdCBzZWxvbi4gSW5zb3V0ZW5hYmxlLCBlbiB0b3V0IGNhcy4uIApOYW1lZCBhZnRlciB0aGUgRm91bmRpbmcgRGlyZWN0b3Igb2YgdGhlIFVDTEEgVm9sdW50ZWVyIENlbnRlciwgdGhlIE1vbmdlbGxpIEF3YXJkIGZvciBFeGNlbGxlbmNlIGluIENpdmljIEVuZ2FnZW1lbnQgcmVjb2duaXplcyByZWdpc3RlcmVkIHN0dWRlbnQgb3JnYW5pemF0aW9ucyB0aGF0IGhhdmUgYW4gb3V0c3RhbmRpbmcgY29tbWl0bWVudCB0byBzZXJ2aWNlLiBPcmdhbml6YXRpb25zIHJlY29nbml6ZWQgYXJlIGRlZGljYXRlZCB0byBtYWtpbmcgYSBjaGFuZ2UgaW4gdGhlaXIgY29tbXVuaXR5IGFuZCB1cGhvbGRpbmcgdGhlIFRydWUgQnJ1aW4gVmFsdWUgb2YgU2VydmljZS4gVGhlIHNlbGVjdGlvbiBwcm9jZXNzIGlzIG92ZXJzZWVuIGJ5IHRoZSBWb2x1bnRlZXIgQ2VudGVyIEZlbGxvd3MuIFRvIGxlYXJuIG1vcmUgYWJvdXQgdGhlIGF3YXJkIGFuZCBwYXN0IHdpbm5lcnMsIHZpc2l0IHRoZSBNb25nZWxsaSBBd2FyZCB3ZWJwYWdlLgoiVGhlIGFwcGVhbCBmb3IgbWUgaXMgdG8gdGFrZSBzb21ldGhpbmcgdGhhdCdzIGp1c3QgYSBwaWVjZSBvZiBzdGVlbCBhbmQgdHVybiBpdCBpbnRvIHNvbWV0aGluZyB0aGF0IHBlb3BsZSBsb3ZlIGFuZCBoYXZlIGluIHRoZWlyIGhvbWUgYW5kIHVzZSBvbiBhIGRhaWx5IGJhc2lzLCIgaGUgc2F5cy4gIkFueSBsaXR0bGUgcGllY2Ugb2YgbWV0YWwgY2FuIGJlIHNvbWV0aGluZyB1c2VmdWwgICBpZiB5b3UgaGF2ZSB0aGUgc2tpbGwgc2V0IHRvIGRvIGl0LiIKQnV0IGl0IGlzIG5vdC5PbiBPY3RvYmVyIDI4LCAyMDA4IChhbG1vc3QgZXhhY3RseSBhIHllYXIgYWdvKSwgSSBhcmd1ZWQgdGhhdCBQYWtpc3RhbiBtdXN0IGRlZmF1bHQgaW4gb3JkZXIgdG8gYnJlYWsgb3V0IG9mIGEgY3ljbGUgdGhhdCBzdXN0YWlucyB0aGUgZWxpdGUncyBsYXJnZXNzZSB0byBpdHNlbGYuIApNZXJtYWlkbGlicmFyaWFuICAzIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCkZyb2VzZSwgd2hvIGdyZXcgdXAgaW4gYSBmYXJtaW5nIGZhbWlseSBhbmQgaGFzIGxpdmVkIGluIExhbmdsZXkgZm9yIDQwIHllYXJzLCBiZWxpZXZlcyBhZGVxdWF0ZSBlZmZvcnQgaXMgYmVpbmcgbWFkZSB0byBwcm90ZWN0IHRoZSB0b3duc2hpcCBmYXJtbGFuZC4gSGUgZGVuaWVzIHRoYXQgTGFuZ2xleSBpcyBncm93aW5nIHRvbyBmYXN0LCB3ZWxjb21lcyByZXNpZGVudGlhbCB0b3dlcnMgYmVpbmcgY29uc3RydWN0ZWQgYW5kIHN1cHBvcnRzIHRoZSBleHBhbnNpb24gb2YgdGhlIGNvbnRyb3ZlcnNpYWwgVHJhbnMgTW91bnRhaW4gcGlwZWxpbmUsIHdoaWNoIHJ1bnMgdGhyb3VnaCB0aGUgZGlzdHJpY3QuCiJJdCB3YXMgdGhlIGJyZWFkIGFuZCBidXR0ZXIgb2Ygb3VyIGJ1c2luZXNzLiBXaXRob3V0IGNoYXJpdHkgcG9rZXIgd2UgaGFkIHRvIGNsb3NlIG91ciBkb29ycywiIEJhcmF0dGEgc2FpZC4gCkl0IGJlY29taW5nIGEgYmV0dGVyIHNjaSBmaSBzaG93LCBidXQgaXQgbm90IGV2ZW4gY2xvc2UgdG8gdHJlayB5ZXQuIApTb21ldGltZXMgdGhlIG1ham9yaXR5IG9mIHlvdXIgZWFybmluZ3MgY29tZSBmcm9tIHJha2ViYWNrLCB3aGljaCBwcmVzdW1hYmx5IHdhcyB0aGUgY2FzZSB3aXRoIHlvdXIgYnJvdGhlci4gCjYgbWlsbGlvbgpBcyBsb25nIGFzIGhpcyBydWxlcyBnbyBpbnRvIGVmZmVjdCwgaGUgcGxhbnMgdG8gbGlmdCBhb24gbmV3IG1pbGxpb25haXJlIHBhcnR5IGxvY2F0aW9ucy4gVGhlICB3YXMgcHV0IGluIHBsYWNlIGluIDIwMTEgdG8gc2xvdyBkb3duIHRoZSByYXBpZCBncm93dGggb2YgY2hhcml0eSBwb2tlciByb29tcyB3aGlsZSB0aGUgc3RhdGUgY291bGQgZ2V0IGEgaGFuZGxlIG9uIHJlZ3VsYXRpb25zLiBCdXQgc2luY2UgdGhlbiwgdGhlIHN0YXRlIGhhcyBmb3JjZWQgbW9yZSB0aGFuIDIyIGxvY2F0aW9ucyB0byBjbG9zZSBmb3IgdmlvbGF0aW9ucywgbGVhdmluZyBvbmx5IGFib3V0IDMwIGxlZnQuIApGb3IgbW9zdCBvZiB0aGUgb3RoZXJzLCBpdCdzIHRoZSBzYW1lLiAKTmF0aW9uYWwgcG9saXRpY2FsIGZpZ3VyZXMgYm90aCBmb3IgYW5kIGFnYWluc3QgdGhlIGFjdGlvbnMgc3Bva2Ugb3V0IGFuZCBzb21lIGJ1c2luZXNzIHBhcnRuZXJzIHNldmVyZWQgdGllcyB3aXRoIHRoZSBjaGFpbi4uIApCdXQgYnkgdGhlbiBJIHdvbid0IHJlbWVtYmVyIHdobyBJIGxlbnQgaXQgdG8uLiAKQSBzaG93IGhlIHdhcyBpbiBnb3Qgbm9taW5hdGVkIGZvciBhbiBhd2FyZCBhbmQgdGhleSBUTXJlIGRvaW5nIGEgbnVtYmVyIGZyb20gaXQuIFRoaXMgaXMgYXBwYXJlbnRseSBhdCB0aGUgc2FtZSB0aGVhdGVyIEkgYW0gZ29pbmcgdG8gbmV4dCB3ZWVrZW5kIHRvIHNlZSBmb2xrcyBmcm9tIHRoZSBSZW5GYWlyZSwgc28uIFllYWgsIEkgZGVjaWRlZCBJIHdhcyBjdXJpb3VzIGVub3VnaCB0byBzZWUgd2hhdCBoZSdzIGRvaW5nIHRoZXNlIGRheXMuSSBzaG91bGQgcHJvYmFibHkgY2xhcmlmeSBoZXJlIHRoYXQgdGhlIHRoZWF0ZXIgdGhpcyBpcyBhdCBpcyBhYm91dCBhbiBob3VyIGZyb20gbXkgaG91c2UgYW5kIGEgaGFsZiBob3VyIGZyb20gTW9tJ3MsIHNvIEkgdG9sZCBoZXIgYWJvdXQgdGhpcyBpbiBvcmRlciB0byBhc2sgaWYgSSBjb3VsZCBjcmFzaCBhdCBoZXIgaG91c2UgdGhhdCBuaWdodCBpbnN0ZWFkIG9mIHNjaGxlcHBpbmcgYmFjayBmb3IgYW4gaG91ciB0byBtaW5lIGluIHdobyB0aGUgaGVsbCBrbm93cyB3aGF0IGNyYXp5IHdpbnRlciByYWluL2ZvZy93aGF0ZXZlciBtaWdodCBiZSBnb2luZyBvbiBieSB0aGUgdGltZSBJIGxlYXZlLiAKMTUwIHllYXJzIG9mIHBhcmVudHMgY2xlYXJpbmcgb3V0IHRoZSBjbHV0dGVyIGlzIGEgbG90IHRvIHN1cnZpdmUuIApIYW5uYWggc2VlbXMgYSBsaXR0bGUgaW5zZWN1cmUgc29tZXRpbWVzIGFuZCBzZWVtcyB0byBzdHJ1Z2dsZSB3aXRoIGNvbmZpZGVuY2UgYSBsb3Qgd2hpY2ggaW4gYW5kIG9mIGl0c2VsZiBkb2Vzbid0IG1lYW4gc2hlIHdvbid0IGJlIGdyZWF0LCBidXQgSSdtIHdvbmRlcmluZyBpZiBzaGUgd2lsbCBkbyB3ZWxsIHVuZGVyIHRoYXQga2luZCBvZiBwcmVzc3VyZT8gV2lsbCB0aGlzIGJlIGdvb2QgZm9yIGhlcj8gSSBmZWVsIGEgbGl0dGxlIGNvbmNlcm5lZCBhbmQgZG9uJ3Qgd2FudCB0aGUgZnJhbmNoaXNlIHRvIGVhdCBoZXIgYWxpdmUuIFNoZSBhbHNvIGlzIHBhaW5mdWxseSBhd2t3YXJkIGluIGZyb250IG9mIHRoZSBjYW1lcmEgd2hlbiBoYXZlIHRvIGFydGljdWxhdGUgaGVyIGZlZWxpbmdzIGFuZCBzdHVmZi4gU2hlIGdvdCBtb3JlIGNvbWZvcnRhYmxlIGFzIHRoZSBzZWFzb24gd2VudCBvbiBidXQgaXQgc2VlbXMgbGlrZSBzaGUgZ2V0IHdheSBpbnRvIGhlciBoZWFkIGFuZCBpcyBuYXR1cmFsbHkgY2FtZXJhIHNoeS4gCkV2ZXJ5IHllYXIsIHRoZSBzYW1lIHRhbGVudGVkIHBsYXllcnMgZW5kIHVwIGF0IHRoZSBmaW5hbCB0YWJsZSwgY29tcGV0aW5nIGZvciB0aGUgdG9wIHNwb3QuIEhlIG5vdGljZXMgaXQgbm90IGp1c3QgdGhlIGNhcmRzIHlvdSBkZWFsdCB0aGF0IG1hdHRlciwgaXQgbW9yZSBzbyBob3cgeW91IHBsYXkgdGhlbS4uIAozNyBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ29JIGdvaW5nIHRvIGFzc3VtZSB0aGF0IDQgNSBob3VycyB3aWxsIGluY2x1ZGUgdGhlIHJvdW5kIHRyaXAgYW5kIGdvaW5nIHRocm91Z2ggc2VjdXJpdHkgYWdhaW4uIFlvdSBjYW4gdGFrZSBCQVJUIGZyb20gdGhlIGFpcnBvcnQgaW50byB0aGUgY2l0eSBhbmQgcHJvYmFibHkgaGF2ZSBhIHNvbGlkIGhvdXIgb3IgdHdvIHRvIG1lc3MgYXJvdW5kLiBJIHJlY29tbWVuZCBnb2luZyB0byAyNHRoIFN0LiAKVGhpcyBzZWVtcyBsaWtlIGEgbG90IGJ1dCBJIGxvdmUgZG9pbmcgbXkgcm91dGluZS4gQXMgY29tcGxleCBhcyBpdCBzb3VuZHMsIG15IHNraW4gaGFzIG5ldmVyIGJlZW4gYXMgbmljZSBhcyBpdCBzb3VuZHMuIFRoZSBjbGVhciBza2luIHN1cnJvdW5kaW5nIG15IGJyZWFrb3V0cyBoYXMgbmV2ZXIgYmVlbiB0aGlzIHN1cHBsZSBvciBnbG93eS4gCk1pbGttYW4yOTA1ICA2IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvClNleHkgRWF0aW5nIFJlcGxhY2VzIEh1bmdlciBGaWdodGluZyBvbiBWaXJhbCBWaWRlbyBDaGFydApUaGUgcHJpbmNpcGxlIGlzIHNpbWlsYXIgdG8gYmxvb2Qgc29sdWJpbGl0eTogaGlnaGx5IHNvbHVibGUgPSBjYW4gInNpbmsiIGxvdHMgb2YgYW5lc3RoZXRpYyBpbnRvIGZhdHR5IHRpc3N1ZSBBTkQgY3Jvc3NlcyB0aGUgYmxvb2QgYnJhaW4gYmFycmllciBmYXN0ZXIgKGJlY2F1c2UgaXQgY2FuIGNyb3NzIGxpcGlkIG1lbWJyYW5lcyBtb3JlIGVhc2lseSkuIApNYW5uZWtpbm8gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMjUgZGF5cyBhZ28KVGhleSBzZWUgYnJva2VuIGZhbWlsaWVzLCBhbGNvaG9saXNtIGFuZCBhZGRpY3Rpb24gcmFtcGFudCBhbmQgdGhleSBzZWUgYWR1bHRzIGNoYXNpbmcgYWZ0ZXIgbW9uZXkgc28gdGhleSBjYW4gYnV5IGEgYmlnZ2VyIGhvdXNlIGFuZCBmYW5jaWVyIGNhci4gQSBiaWcgaG91c2UsIHdpdGhvdXQgbG92ZSwgZmVlbHMgZW1wdHkuIAo0OCBzdG9jayBzb3VuZCBjbGlwcyBzdGFydGluZyBhdCAkMi4gCldlIHN0YXJ0ZWQgZ29pbmcgaW4gdGhlIGJhY2sgYW5kIGp1c3QgcHJldGVuZGluZyB0byBsb29rLiAKSWYgdGhlIGFubnVhbCAkMTAsMDAwIGVudHJ5IG5vIGxpbWl0IFRleGFzIGhvbGQgJ2VtIGNoYW1waW9uc2hpcCB0b3VybmFtZW50IGF0IHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgcmV0YWlucyB0aGUgTm8uIDEgc3BvdCBvbiBwb2tlcidzIGxpdHVyZ2ljYWwgY2FsZW5kYXIsIHRoZSAkNTAsMDAwIEhPUlNFIChtaXhlZCBnYW1lcykgZXZlbnQgY2FuIG1ha2UgYSBjbGFpbSBmb3IgdGhlICIxYSIgc2xvdC4gSW4gaXRzIGZvdXJ0aCB5ZWFyLCB0aGUgSE9SU0Ugd29ybGQgY2hhbXBpb25zaGlwIGRyYXdzIGEgbXVjaCBzbWFsbGVyIGZpZWxkICAgMTQ4IHBsYXllcnMgbGFzdCB5ZWFyLCBjb21wYXJlZCB3aXRoIDYsODQ0IGZvciB0aGUgbWFpbiBldmVudCAgIGJ1dCBhIG11Y2ggdG91Z2hlciBmaWVsZCBtYWRlIHVwIGFsbW9zdCBlbnRpcmVseSBvZiBlbGl0ZSBwcm9mZXNzaW9uYWxzLiAKQ2VydGFpbnMgc2lnbmVzIHBoeXNpcXVlcyBwZXV2ZW50IGdhbGVtZW50IHZvdXMgcGVybWV0dHJlIGQnZXN0aW1lciBsYSBmb3JjZSBkZSBsYSBtYWluIGQndW4gYWR2ZXJzYWlyZS4gClRvdXMgY2VzIGRpc3Bvc2l0aWZzIGNvbnN0aXR1ZW50ICBwcnNlbnQgbGUgbm91dmVhdSBwYXlzYWdlIGV1cm9wZW4gZGUgbGEgc2N1cml0IGludHJpZXVyZS4gSWwgZXN0IHZyYWkgcXVlIGNlIHBheXNhZ2UgYSBmb3J0ZW1lbnQgdm9sdSBhdSBmaWwgZHUgdGVtcHMuIENlIGNoYW5nZW1lbnQgcydlc3QgdHJhZHVpdCBwYXIgbCdsYWJvcmF0aW9uIGRlIG5vdXZlYXV4IG1jYW5pc21lcyBkJ2VudHJhaWRlIGVudHJlIGxlcyBzZXJ2aWNlcyBuYXRpb25hdXggZGUgc2N1cml0IGludHJpZXVyZSBldCBkZSBub3V2ZWxsZXMgcmdsZXMsIGRvbnQgbGEgcGhpbG9zb3BoaWUgZXN0IGRpc3RpbmN0ZSBkdSBzeXN0bWUgY2xhc3NpcXVlIGQnYXNzaXN0YW5jZS4gCkkga25vdyB0aGVyZSBpcyBjYXNlIGJ5IGNhc2Ugc3lzdGVtLiBCdXQgaXQgZmVlbHMga2luZCBvZiBiYWQgdGhhdCB0aGVyZSBpcyBub3csIGlyb25pY2FsbHksIGFub3RoZXIgc3RlcCByZXF1aXJlZCB0byBnZXQgZGlzY3Vzc2lvbiBhYm91dCB0aGVzZSB0aGluZ3MgZHVlIHRvIHJlZCBwaWxsIGFzc2hvbGVzLiBXb3VsZCB3ZSByZWFsbHkgd2FudCB0byBsaW1pdCBkaXNjdXNzaW9uIG9uIGNoaWxkIGFidXNlIGlmIHdlIHdlcmUgYnJpZ2FkZWQgYnkgcHJvIGNoaWxkIGFidXNlcnMgb3Igb3RoZXIgd2hhdGFib3V0aXN0cz8gTXkgb3BpbmlvbiBpcyBuby4gCkkgd2FzIHN1Y2Nlc3NmdWwgaW4gdGhhdCBzZW5zZSwgdW1tLCBidXQgSSB3YW5uYSBkbyBpdCBmYXN0ZXIuIEkgY291bGQgZG8gdGhlIHdhbGwgb3ZlciBhIGxvbmdlciBwZXJpb2Qgb2YgdGltZSwgSSBkaWRuIG5lZWQgdG8gZG8gdGhpcy4gQnV0IEkgcmF0aGVyIGRvIGl0IG11Y2ggZmFzdGVyLiAKTiAyNjczClNwZWNpYWwgQnJhemlsaWFuIG1peGVkIGRyaW5rcyBhcmUgYWxzbyBzZXJ2ZWQgdGhyb3VnaG91dCB0aGUgY2FzaW5vLiAKSXQncyBzbyBlYXN5IHRvIGdldCBuZXJ2b3VzIGFib3V0IHRoaW5ncyB0aGF0IGhhdmVuJ3QgaGFwcGVuZWQuIApUaGUgYXNzb2NpYXRpb24gb2YgQ0JEIHdpdGggY2h5bG9taWNyb25zIChDTSkgaW4gdGhlIGVudGVyb2N5dGVzIGFuZCBzdWJzZXF1ZW50IGludGVzdGluYWwgbHltcGhhdGljIHRyYW5zcG9ydCB3YXMgZXN0aW1hdGVkIHVzaW5nIGFuIGluIHNpbGljbyBtb2RlbCwgaW4gdml0cm8gYXNzb2NpYXRpb24gYnkgYXJ0aWZpY2lhbCBDTSBsaWtlIGxpcGlkIHBhcnRpY2xlcywgYW5kIGV4IHZpdm8gdXB0YWtlIGJ5IHBsYXNtYSBkZXJpdmVkIENNIGZyb20gcmF0cyBhbmQgaHVtYW5zLiBUaGUgcmVzdWx0cyBvZiBDTSBhc3NvY2lhdGlvbiBzdHVkaWVzIHJldmVhbGVkIGhpZ2ggaW50ZXN0aW5hbCBseW1waGF0aWMgdHJhbnNwb3J0IHBvdGVudGlhbCBmb3IgQ0JEIGluIHJhdHMgYW5kIGh1bWFucy4gCldvcnNlLCBPUCBoYXMgYSBjaGVtbyBwb3J0LiAKVEw7RFI6IE5vIG9uZSB3YW50cyB0byBoZWFyIHRoaXMsIGJ1dCB0aGUgbW9zdCBsaWtlbHkgYW5zd2VyIGZvciAid2h5IGFyZW4gSSBwdWJsaXNoZWQ/IiBpc24gImJlY2F1c2Ugbm8gb25lIHdhbnRzIHRvIHB1Ymxpc2ggd2hpdGUvbWVuL3N0cmFpZ2h0IGFueW1vcmUuIiBUaGVyZSBhcmUgbXlyaWFkIGV4YW1wbGVzIG9mIHBlb3BsZSBleGFjdGx5IGxpa2UgeW91IHN1Y2NlZWRpbmcuIFRoZSBtb3N0IGxpa2VseSBhbnN3ZXIgaXMsICJ5b3VyIHdvcmsgaXNuIHVwIHRvIHBhciB5ZXQuIiBEb24gcGxheSB0aGUgdmljdGltOyB5b3Ugb25seSBodXJ0aW5nIHlvdXJzZWxmLi4gCkVudGVydGFpbm1lbnQgZm9yIHRoZSBldmVuaW5nIGluY2x1ZGVkIHRoZSB0dW5lcyBmcm9tIGxvY2FsIGVuc2VtYmxlIFU0UmlBLCBhIGJhbmQgZmVhdHVyaW5nIFJvYiBTbm93LiBJdCB3YXMgU25vdydzIFByb3N0YXRlIENhbmNlciBkaWFnbm9zaXMgZm91ciB5ZWFycyBhZ28gdGhhdCB3YXMgdGhlIGNhdGFseXN0IGZvciB0aGUgUG9rZXIgNCBQcm9zdGF0ZSBmdW5kcmFpc2luZyBpbml0aWF0aXZlLiBQaG90bzogTGluZHNheSBNb2xsZXIuLiAKVHJhaWxpbmcgcmlnaHQgYmVoaW5kIFJlaWQgd2VyZSBhIGJldnkgb2YgYmVhdXRpZXMgd2hvIGFyZSBlaXRoZXIgbm90IHdvcmtpbmcgaW4gcG9ybiBhbnltb3JlIG9yIG5ldmVyIGdvdCBpbnRvIHRoZSBidXNpbmVzcyBpbiB0aGUgZmlyc3QgcGxhY2UuIE1pYSBLaGFsaWZhLCB3aG8gaGFzIHRyaWVkIHRvIHR1cm4gVHdpdHRlciB0cm9sbGluZyBpbnRvIGEgc3BvcnRzIGJyb2FkY2FzdGluZyBjYXJlZXIsIGNhbWUgaW4gc2Vjb25kIHBsYWNlLCB3aGlsZSBTYXJhaCBQYWxpbiBsb29rYWxpa2UgTGlzYSBBbm4gY2FtZSBpbiB0aGlyZC4gS2ltIEthcmRhc2hpYW4gZXZlciBwb3B1bGFyIHNleCB0YXBlIHB1dCBoZXIgaW4gZm91cnRoIHBsYWNlLCBmb2xsb3dlZCBieSBTdW5ueSBMZW9uZSwgd2hvIGhhcyBnb25lIGZyb20gYmVpbmcgMjAwMyBQZW50aG91c2UgUGV0IG9mIHRoZSBZZWFyIHRvIGJlaW5nIGEgbWFpbnN0cmVhbSBCb2xseXdvb2Qgc3RhciBpbiBJbmRpYS4uIApadWRlbSB3cmUgZGFzIGxlaWRsaWNoZSBIZW5uZSBFaSBQcm9ibGVtIHp1IGtscmVuLCBubWxpY2ggb2IgZGVyIEtobHNjaHJhbmsgenVlcnN0IGluIHVuc2VyZW4gVm9yc3RlbGx1bmdlbiBleGlzdGllcnRlLCBiZXZvciBlciBzaWNoIG1hdGVyaWFsaXNpZXJ0ZSwgb2RlciBvYiBkaWUgRXhpc3RlbnogZWluZXMgS2hsc2NocmFua3MgYXVjaCBhdWVyaGFsYiBkZXMgdW5zIFZvcnN0ZWxsYmFyZW4gbWdsaWNoIGlzdCwgdW5kIHdvIGVyIGRhbm4gc2VpbmVuIFN0cm9tIGhlciBiZWtvbW10LiAKT2gsIGFuZCBhIHdoaXRlL3JlZCBmbGFzaGxpZ2h0LiBSZWQgZmxhc2hsaWdodHMgd2lsbCBub3QgaW50ZXJmZXJlIHdpdGggeW91ciBidWlsdCBpbiBuaWdodCB2aXNpb24uIApJbiBwYXNzaW5nIE5NUywgdGhlIFNFQyB3YXMgYXR0ZW1wdGluZyB0byBjb21wbGV0ZSBhIGdvYWwgc2V0IGluIDE5NzUuIApJdCBqdXN0IHNvbWV0aGluZyBTRSBsaWtlcyB0byBkby4uIApUaGF0IGNhbiBjYXVzZSB5b3UgdG8gaG9sbGVyICJCaW5nby4iIE9rLCBzbyBJJ20gbm90IGV4YWN0bHkgc3VyZSBpZiB0aGUgIkNoaWNrZW4gQmluZ28iIHRhbGUgaXMgdHJ1ZSBvciBub3QuIEd1ZXNzIHlvdSB3aWxsIGp1c3QgaGF2ZSB0byBmaW5kIG91dCBmb3IgeW91cnNlbGYuIElmIHlvdSBkZWNpZGUgdG8gdGFrZSBhIHRyaXAgYmFjayBpbnRvIHRoZSBlYXJseSAxOTAwcyB3aGlsZSB5b3UgYXJlIGhlcmUgdmlzaXRpbmcgTGFzIFZlZ2FzLCB0cnkgdGFraW5nIGEgZHJpdmUgdG8gdGhlIGZhbW91cyBQaW9uZWVyIFNhbG9vbiBpbiBHb29kc3ByaW5ncywgTmV2YWRhLi4gClRvcCBJbmR1c3RyaWVzTW9zdCBoYWlyIGN1dHRlcnMgd29yayBpbiB0aGUgcGVyc29uYWwgYmVhdXR5IHNlcnZpY2VzIGluZHVzdHJ5LCBhbHRob3VnaCBzb21lIGZpbmQgZW1wbG95bWVudCBpbiBvdGhlciBzZWN0b3JzIG9mIHRoZSBlY29ub215LiBBYm91dCAyMyw1MDAgc3R5bGlzdHMgd29ya2VkIGZvciBkZXBhcnRtZW50IHN0b3JlcyBpbiBNYXkgMjAxMSBhbmQgZWFybmVkICQyMiw4ODAgYSB5ZWFyIG9uIGF2ZXJhZ2UuIApXZSBtYWRlIHRob3NlIGluIGhvbWUgZWMgYXMgd2VsbC4gCjEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29EZXNwaXRlIHRoZSBuYXlzYXllcnMgSSBzdHJvbmdseSBhZ3JlZSB3aXRoIHlvdS4gRm9yIG1lIGl0IGFib3V0IGxvb2tpbmcgdGhlIGJ1bGx5IGluIHRoZSBleWUgYW5kIGJlaW5nIGhvbmVzdCwgaW1tZWRpYXRlbHkuIENhbGwgdGhlIGJ1bGx5IG91dCBhbmQgc2ltcGx5IGFzayB3aHkgc2hlIGlzIGRvaW5nIHdoYXQgc2hlIGlzIGRvaW5nLiBUYXR0bGUgdGFpbGluZyB0byBhIHRoaXJkIHBhcnR5IGlzIHdlYWsgYW5kIHVuZGVyaGFuZGVkIGFuZCBzaG91bGQgb25seSBiZSBhIGxhc3QgcmVzb3J0IGlmIHRoZXkgY29udGludWUgdG8gYmUgdW5yZWFzb25hYmxlIGxpa2Ugbm90IGdpdmluZyB5b3UgYW4gaG9uZXN0IGFuc3dlci4gCkFuZCBjb21pbmcgaW50byB0b3duIGZyb20gdGhlIGhpZ2h3YXksIHRyZWVzIGZ1bGwgb2YgbGVhdmVzLCBpdCBhbGwgbm9ybWFsLiAKSSBkaWQgcmVhZCBhIGN1dGUgYXJ0aWNsZSBhIHdoaWxlIGFnbyBhYm91dCBob3cgdG8gZGVhbCB3aXRoIHlvdXIga2lkIGxlYXJuaW5nIFNhbnRhIGlzIGFjdHVhbGx5IHlvdXIgcGFyZW50cyB3aGlsZSBzdGlsbCBrZWVwaW5nIHRoZSBtYWdpYy4gSXQgaW52b2x2ZWQgZXhwbGFpbmluZyB0aGF0IFNhbnRhIGhhcyBzbyBtdWNoIHdvcmsgdG8gZG8gdGhhdCBoZSBwYXNzZXMgYWxvbmcgc29tZSBvZiBoaXMgbWFnaWMgdG8gcGFyZW50cyBhbGwgb3ZlciB0aGUgd29ybGQgdG8gaGVscCBoaW0gb3V0LCBtYWtpbmcgdGhlbSBoaXMgYWdlbnRzIG9yIHdoYXRldmVyLgpFYXNpbHkgY29ubmVjdCBhbiB1bmxpbWl0ZWQgbnVtYmVyIG9mIGRvbWFpbnMgeW91IGFscmVhZHkgaGF2ZSwgb3IgcHVyY2hhc2UgYSBuZXcgb25lIHdpdGggV2Vibm9kZS4KV2F0ZXJzIGl0IGp1c3QgbGlrZSBJIHdvdWxkIGlmIEkgd2VyZSB0aGVyZSB3aXRoIHRoZSBjb3JyZWN0IGFtb3VudCBvZiB3YXRlci4uIApIZSBub3QgcmVhbGx5IHdhbnRlZCBieSB0aGUgR0NQRCBpbiBCdlMsIEkgbWVhbiB0aGVyZSBhIGJhdCBzaWduYWwgdGhhdCBsb29rcyBsaWtlIGl0IHdhcyBpbiBjb25zdGFudCB1c2UgdXAgdW50aWwgaGlzIGdyYWR1YWwgZGVzY2VudCB0byBicnV0YWxpdHkuIEFuZCB0aGVuIHlvdSBoYXZlIEpMIHdoZXJlIEdvcmRvbiByZW1hcmtzICJnb29kIHRvIHNlZSB5b3UgcGxheWluZyB3ZWxsIHdpdGggb3RoZXJzIGFnYWluIi4gCiJUaGVzZSBmdWNraW5nIG1vcm9ucyByZWFkIHRoZSBib29rICdUaGUgRGV2aWwncyBHdWFyZCcgYW5kIGJlbGlldmVkIGl0LCIgc2FpZCBvbmUgb2YgdGhlIGZvcm1lciBTRUFMIFRlYW0gNiBsZWFkZXJzIHdobyBpbnZlc3RpZ2F0ZWQgU2xhYmluc2tpIGFuZCBCbHVlIFNxdWFkcm9uLiAKU2Vsb24gc29uIHJhcHBvcnQsIHNldWxzIDM3ZGUgY2VzIGNlbnRyZXMgb250IHQganVzcXUgcHJzZW50IGFjY3VzcyBwb3VyIHZpb2xhdGlvbiBkZXMgcmdsZW1lbnRzIG11bmljaXBhdXggZW50cmUgMjAxNSBldCAyMDE2LCBldCB0b3V0IGNvbnRpbnVlbnQgZGUgZm9uY3Rpb25uZXIgYXZlYyBsZXVyIGxpY2VuY2UuCkV2ZXJ5IG90aGVyIGhhbmQgInRhYmxlIG1heCIgZXRjLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uTU9SRSB0aGFuIDEwMCBtZW4sIHBva2VyIGFuZCBhIGdvb2QgY2F1c2Ugd2FzIGVub3VnaCB0byByYWlzZSBtb3JlIHRoYW4gJDI5LDMwMCBmb3IgcHJvc3RhdGUgY2FuY2VyIGNhcmUuIApFbm91Z2ggd2l0aCB0aGlzIGFic29sdXRlIGJ1bGxzaGl0IG5vbnNlbnNlIHRoYXQgInN0ZW0gY2VsbCIgbWVhbnMgImZldGFsIHRpc3N1ZS4iIFRoZXJlIGFyZSB2ZXJ5LCB2ZXJ5IGZldyBpbnN0YW5jZXMgaW4gcmVzZWFyY2ggdGhhdCByZXF1aXJlIGVtYnJ5b25pYyBzdGVtIGNlbGxzLCBiZWNhdXNlIHdlJ3ZlIGZpZ3VyZWQgb3V0IGhvdyB0byBlYXNpbHkgcmVwcm9ncmFtIHBvdGVudGlhdGVkIGNlbGxzIGJhY2sgaW50byBwbHVyaXBvdGVudCBzdGVtIGNlbGxzLiAKSW4gZmFjdCwgdGhpcyBzbGl2ZXIgb2YgbGFuZCBvZmYgQnJhZGVudG9uIG9uIEZsb3JpZGEncyB3ZXN0IGNvYXN0IHNlZW1zIGxpZnRlZCBmcm9tIGFuIG9sZCB0aW1lIHBvc3RjYXJkLCB3aGVuIGJpY3ljbGlzdHMgb3duZWQgdGhlIG1haW4gc3RyZWV0IGFuZCBsYWRpZXMgd2l0aCBwYXJhc29scyBzdHJvbGxlZCB0aGUgcGllciBpbiB0aGUgZWFybHkgZXZlbmluZyB0byB3YXRjaCB0aGUgc3VuIGRyb3AgaW50byB0aGUgb2NlYW4uLiAKVGhlIGhlYXZ5IHJvbGxlciBvbiB0aGUgcHJvZ3JhbSB3YXMgTWFobGVyJ3MgU3ltcGhvbnkgTm8uIDEsIlRpdGFuLiIgV2l0dHJ5IGNob3NlIHRvIHRoZSB3b3JrIGluIGl0cyBvcmlnaW5hbCBmaXZlIG1vdmVtZW50IGZvcm0sIHRoZSBzZWNvbmQgbW92ZW1lbnQgZW50aXRsZWQgIkJsdW1pbmUiIChGbG93ZXJzKSwgd2hpY2ggdGhlIGNvbXBvc2VyIHN1YnNlcXVlbnRseSBkcm9wcGVkLiBUaGUgd29yayBpcyB3b25kZXJmdWxseSBjb21wbGV4IGFuZCBjb252b2x1dGVkLCB3aXRoIGFsbW9zdCBiaXBvbGFyIHNoaWZ0cyBpbiBtb29kIGFuZCBwYWNlLCBhbGwgb2Ygd2hpY2ggdGhlIG9yY2hlc3RyYSBoYW5kbGVkIG1hcnZlbG91c2x5LiAKVGhlbiB5b3VyIGFybSBnZXRzIHN0ZXJpIHN0cmlwcGVkIGFuZCB3cmFwcGVkIGFuZCBJIGVzdGltYXRlIGl0IHRvb2sgbWUgYSB3ZWVrIHRvIHR3byB3ZWVrcyB0byBmdWxseSByZWNvdmVyLCBicnVpc2luZyBhbmQgYWxsIHRvIGdvIGF3YXkuIApUaGluayBhIG5vdGVib29rIHdoZXJlIGFsbCB0aGVpciBjbGFzcyB3b3JrLCBpbmNsdWRpbmcgZ3JvdXAgd29yayBhbmQgbGFicywgZ28uIApZb3UgZG9uIGhhdmUgdG8gYmUgc29tZSBsaXRlcmFyeSBhbGwgc3RhciB0byBhdHRlbmQuIFRoaXMgaXMgZm9yIGV2ZXJ5Ym9keS4gQnJpbmcgeW91ciBraWRzIGlmIHlvdSB3YW50LiAKKFByaXZhY3kgUG9saWN5KU9wZW54VGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKMjEuIFNQTXMgYWxzbyBtYXkgYmUgYSBoaWdobHkgZWZmZWN0aXZlIHRyZWF0bWVudCBmb3IgcHJldmVudGluZyBib25lIGxvc3MgYW5kIHN0aW11bGF0aW5nIGJvbmUgcmVnZW5lcmF0aW9uLgpJdCB3YXMgS2ltIHRoYXQgY2hvc2UgdG8gd2FsayBiYWNrIGluIHRoZSBob3VzZSBhZnRlciBCcmFuZGkgaGFkIGVzY29ydGVkIGhlciBvdXRzaWRlIGFuZCB0b2xkIGhlciBOT1QgdG8gZ28gYmFjayBpbi4gCk15IGJvc3Mgd2FzIHRlbGxpbmcgbWUgdG8ganVzdCAiZ29vZ2xlIGl0IiB3aGVuIEkgY291bGRuJ3QgZmluZCBzb21ldGhpbmcgYXQgd29yayB0aGUgb3RoZXIgZGF5LiBJIGdhdmUgdGhlbSBtb3JlIGV2aWRlbmNlIHRoYXQgSSBjb3VsZG4ndCBmaW5kIHdoYXQgSSBuZWVkZWQgb24gdGhlIGludGVybmV0LiAKQnV0IGlmIEkgZ28gdG8gcGljayBteSA4IHllYXIgb2xkIHNpc3RlciB1cCBmcm9tIHNjaG9vbCBhbmQgaGVyIHRlYWNoZXIgZ3JlZXRzIG1lIGFuZCBJIHJlc3BvbmQgd2l0aCAiRnVjayBvZmYhIiBPYnZpb3VzbHkgdGhhdCdzIGdvaW5nIHRvIGJlIGEgcHJvYmxlbSwgYXMgaW4gYWdncmVzc2lvbiwgd3JvbmcgdGltZSBhbmQgcGxhY2UsIGFuZCBqdXN0IGF3ZnVsIGNvbmR1Y3QuLiAKQW5kIHRoYXQgc21hbGwgaW52ZXN0bWVudCB0byBtYWtlIGFuZCBwbGF5LCBtZWFudCBubyBpbmRpdmlkdWFsIGdhbWUgaGFkIHRvIHN1Y2NlZWQsIGhhZCB0byBwbGF5IGl0IHNhZmUgc28gdGhhdCB0aG91c2FuZHMgb2YgcGVvcGxlIHdvdWxkIGhhdmUgYSBqb2IgaW4gdHdvIHllYXJzLiAKRnVydGhlcm1vcmUsIEZDMiBpcyBub3Qgb2JsaWdhdGVkIHRvIHJlaXNzdWUgVXNlcnMgZW1haWwgYWRkcmVzcywgVXNlciBJRCBvciBwYXNzd29yZC4gVGhpcyBJbnRlcm5ldCBhY2Nlc3Mgd2lsbCBuZWVkIHRvIGJlIGluc3RhbGxlZCBhbmQgbWFpbnRhaW5lZCBhdCB0aGUgVXNlciBvd24gZXhwZW5zZS4gCk5vdCBtYW55IGtuZXcgd2hvIEkgd2FzIGFuZCB3aG8gbXkgYXVudHMgd2VyZS4gClNPIFdIQVQgRE9FUyBJVCBETz8gSVQgTEFZUyBUSEUgTU9TVCBFR0dTIE9VVCBPRiBFVkVSWVRISU5HLiBCZXNpZGVzIHNvbWUgYnVncywgdGhlcmUgYXJlIHNvbWUgYW50cyBhbmQgc3R1ZmYgdGhhdCBsYXkgbW9yZS4gCkFueSBpZGVhcyB3aGF0IHRoZSBnYW1lIGlzIGNhbGxlZCwgYW5kIGhvdyBpdCdzIHBsYXllZD8uIApKdXN0IGFib3V0IGFueXRoaW5nIHRoYXQgbWFrZXMgbm9pc2UgaXMgb2theSwgYXNzdW1pbmcgaXQncyBkZWNlbnRseSB0dW5lZCBhbmQgdGhlcmUgYXJlIG5vIG1ham9yIG1lY2hhbmljYWwgZmxhd3MuIEZvciBhbiBhZHVsdCBvciBhIHN0dWRlbnQgd2hvIHdhbnRzIHRvIGdldCBhIGRlY2VudCwgY2hlYXBseSBwcmljZWQgaW5zdHJ1bWVudCwgdGhlIGJlc3QgdGhpbmcgaXMgdG8gZ28gdG8gYW4gaW5zdHJ1bWVudCByZXBhaXIgcGxhY2UgYW5kIGFzayB0aGVtIHdobyB0aGV5IHJlY29tbWVuZCBmb3IgdXNlZCBpbnN0cnVtZW50cy4gClNvIGlmIHlvdSBoYXZlIHByb2JsZW1zIHdpdGggdGhlIG5ldyB2ZXJzaW9uIG9mIHlvdXIgd29ybGQgd2l0aCB0aGUuIDE4IFNlcCAyMDE2IC4gCkRvbiB0cnkgYW5kIGRvIHN0dWZmIGxpa2UgdGhpcyBhdCB0aGUgdGFibGUsIHlvdSBqdXN0IHBpc3MgcGVvcGxlIG9mZiB3aGljaCBpcyAgZXYgaW4gdGhlIGxvbmdydW4gRVNQRUNJQUxMWSB2cyB3ZWFrZXIvZnVuIHBsYXllcnMuIApTYW50b195YWdvICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSSBjb25jdXIuIFRoZSB0cmFpbGVycyBkaWRuIGdyYWIgbXkgYXR0ZW50aW9uIGxpa2Ugb3RoZXIgTWFydmVsIG1vdmllcyBkaWQuIEl0IGtlcHQgYWR2ZXJ0aXNpbmcgaXRzZWxmIGFzIGEgbW92aWUgdGhhdCB0b29rIGl0c2VsZiB0b28gc2VyaW91c2x5IGZyb20gbXkgcGVyc3BlY3RpdmUgYW5kIGFsc28gY2FtZSBvZmYgYXMgYSBHcmVlbiBMYW50ZXJuIHJpcCBvZmYgYnV0IGlmIEJsYWtlIExpdmVseSB3YXMgdGhlIG9uZSB0aGUgcmluZyBzZWxlY3RlZC4gCkkgaGFkIGFsd2F5cyB3aXNoZWQgbXkgU0tYIGNvdWxkIGhhY2sgYW5kIGhhbmQgd2luZCBzbyBJIHdhcyBhbGwgZm9yIHRoZSBtb3ZlbWVudCBzd2FwIHJhdGhlciB0aGFuIHNlcnZpY2luZyB0aGUgN1MyNi4gCkRlciBXYW5kZXJmaHJlciBnZWh0IHZpZWwgenUgc2NobmVsbCwgZGllIE5hdHVyIHplaWd0IHNpY2ggdm9uIGlocmVyIGdlZmhybGljaGVuIFNlaXRlLiAKRG8gdGhpbmsgaXQgaW1wb3J0YW50IHRoYXQgaXQgdGhlcmUsIGhlIHNhaWQuIFNob3cgc29tZSBvZiB0aGUgcmFkaWNhbCB0aGluZ3MgZ29pbmcgb24gaW4gdGhlIHZhbGxleSwgYW5kIHRoZXkgaGVscCB5b3Uga2VlcCB1cCBvbiBjdXJyZW50IGV2ZW50cy4gCklmIHlvdSBoYXZlIGEgZ3JlYXQgcG9rZXIgdGFibGUsIHdoeSBub3QgZmluaXNoIGl0IG9mZiB3aXRoIHRoaXMgbG92ZWx5IGRldmljZT8gVGFrZSBzb21lIHRpbWUgYW5kIGlmIHlvdSBjYW4sIHRha2UgYSBsb29rIGF0IG9uZSBvZiB0aGVzZSBkZXZpY2VzIHVwIGNsb3NlLiAKSSBpbiB0aGUgc2FtZSBib2F0IGFzIHlvdSAobm8gcHVuIGludGVuZGVkKSwgc3RhcnRlZCByZWNlbnRseSBhbmQgaGF2ZSBiZWVuIGZvY3VzaW5nIG9uIGZpc2hpbmcgYXMgbXkgZmlyc3QgZ2F0aGVyaW5nIHNwZWNpYWxpemF0aW9uLiBPbmUgcHJvIGlzIHRoYXQgSSBkb24gaGF2ZSB0byB3b3JyeSBhYm91dCBjYXJyeWluZyBhIHRvbiBvZiB3ZWlnaHQuIEkgd2VhciB0aGUgVDYgZ2F0aGVyaW5nIGdlYXIgbWludXMgdGhlIGJhY2twYWNrIGJlY2F1c2UgSSBuZXZlciBzdGF5IG91dCBsb25nIGVub3VnaCB0byB3b3JyeSBhYm91dCBjYXBhY2l0eS4gT25lIHRoaW5nIEkgYmVlbiB0cnlpbmcgdG8gZmlndXJlIG91dCBsaWtlIHlvdSBtZW50aW9uZWQgaXMgdGhlIFQ3IHJhcmUgZHJvcHMuIERvIHRoZXkgZHJvcCBtb3JlIG9mdGVuIGluIHNheSBhIE1lcmNpYSBCbGFja1pvbmUgVDUgem9uZSB2cyB0aGUgZ3JlZW4gb3IgeWVsbG93IEJsYWNrIFpvbmUgdGVycml0b3JpZXM/IEkgY2FudCBmaW5kIGFueSBpbmZvIGFuZCBoYXZlbiB0cmllZCB0cmFja2luZyBteSBvd24gcmVzdWx0cyB5ZXQuIEFub3RoZXIgaXNzdWUgSSBoYWQgd2FzIFNhdHVyZGF5IG5pZ2h0IEkgdHJpZWQgZm9yIHF1aXRlIGEgd2hpbGUgYW5kIHdhcyBoYXZpbmcgbm8gbHVjayB3aXRoIHRoZSBlZWxzIGluIGEgZm9yZXN0IHpvbmUuIEkgcmVhZCBzb21ld2hlcmUgdGhhdCBhIHpvbmUgY2FuIGJlIGZpc2hlZCBvdXQgc28gSSB3b25kZXIgaWYgdGhhdCB3YXMgdGhlIGNhc2UuIFNhdyB0aGF0IHRoZSBoaWdoIGVuZCBmb29kIGl0ZW1zIGFyZSBnZXR0aW5nIGEgbmVyZiBuZXh0IHBhdGNoIHNvIHRoYXQgbWlnaHQgZWF0IGludG8gb3VyIHByb2ZpdHMgYXMgd2VsbC4gSGFwcHkgaHVudGluZyEgNyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClNvbWUgdGVhY2hlcnMgd29uJ3QgbGV0IHlvdSBoYXZlIHRoZW0gb3V0IGp1c3QgYmVjYXVzZSB0aGV5IGFyZSBzdHJpY3QuIEkgYnJvdWdodCBzb21lIHRvIHNjaG9vbCBqdXN0IHRvIHN0YWNrIGFuZCBub25lIG9mIG15IHRlYWNoZXJzIHNhaWQgYW55dGhpbmcuIApFbnZpcm9ubWVudGFsICAgVGhlc2UgcmlzayBmYWN0b3JzIGluY2x1ZGUgdGhlIGVudmlyb25tZW50YWwgdGVtcGVyYXR1cmUgYW5kIHRoZSBzdXJmYWNlIHRoYXQgYXRobGV0ZXMgYXJlIHBsYXlpbmcgb24uIElmIGF0aGxldGVzIGFyZSB0cmFpbmluZywgb3IgY29tcGV0aW5nIG9uIHN1cmZhY2VzIHRoYXQgYXJlIHRvbyBoYXJkIG9yIHRvbyBzb2Z0IHRoZW4gdGhpcyBjYW4gbGVhZCB0byBleGNlc3NpdmUgZm9yY2UgYmVpbmcgcGxhY2VkIG9uIGNlcnRhaW4gam9pbnRzLCB0aXNzdWVzIGFuZCBtdXNjbGVzIHdoaWNoIGNhbiBsZWFkIHRvIGFuIGluY3JlYXNlZCByaXNrIG9mIHNwcmFpbnMgZHVlIHRvIGZlZXQgYmVjb21pbmcgc3R1Y2sgaW4gd2V0IHN1cmZhY2VzLiBBbHNvLCBwbGF5aW5nIG9uIHVuZXZlbiBzdXJmYWNlcyBzdWNoIGFzIGEgY2FtYmVyZWQgcm9hZCBvciBwYXRoIGNhbiBwdXQgaW5jcmVhc2VkIHByZXNzdXJlIG9uIG9uZSBzaWRlIG9mIHRoZSBib2R5LiBBbiBleGFtcGxlIG9mIGFuIGVudmlyb25tZW50YWwgcmlzayBmYWN0b3IgY291bGQgYmUgcGxheWluZyBmb290YmFsbCBvbiBhIHNsaXBwZXJ5IHN1cmZhY2UgY291bGQgcmVzdWx0IGluIHBsYXllcnMgc2xpcHBpbmcgb3ZlciBhIGxvdCBlYXNpZXIgcG90ZW50aWFsbHkgaW5qdXJpbmcgdGhlbXNlbHZlcyBvciBhbiBvcHBvbmVudC4KWW91IGNhbiBmaW5kIHRoZSBQQ1Qgd2F0ZXIgcmVwb3J0IGhlcmUgd2hpY2ggYWxzbyBoYXMgdGhlIG51bWJlcnMgdG8gc2VuZCBpbiB1cGRhdGVzLiBUcmVhdCBpdCBqdXN0IGxpa2UgYSBmb29kIHJlc3VwcGx5ICAgc3RhcnQgdGhlIGZpcnN0IGRheSB3aXRoIHdhdGVyIHRvIGdldCB5b3UgdG8gdGhlIG5leHQgc291cmNlIGFuZCB0aGVuIGZyb20gdGhlcmUgY2hlY2sgdGhlIHJlcG9ydCB0byBrbm93IGhvdyBtdWNoIHRvIGNhcnJ5IHRvIHRoZSBuZXh0IGxvY2F0aW9uLiBJIGRvd25sb2FkZWQgYSBuZXcgY29weSB0byBteSBwaG9uZSBlYWNoIHRpbWUgSSB3YXMgaW4gdG93biBvciB3aGVuZXZlciBJIGhhZCBzZXJ2aWNlLCBiZWNhdXNlIGl0IGNhbiBjaGFuZ2UgcXVpY2tseS4gCkZpZWxkIHNlcnZpY2UgZXhlbXB0LgpTYXV2ZSBzYWlkIGEgdG90YWwgb2YgJDY3IG1pbGxpb24gaGFzIGJlZW4gZG9uYXRlZCB0byB0aGUgUmVkIENyb3NzIHNvIGZhciBhbmQgbXVjaCBvZiB0aGF0IHdpbGwgYmUgbWF0Y2hlZCBieSB0aGUgcHJvdmluY2lhbCBhbmQgZmVkZXJhbCBnb3Zlcm5tZW50cy4KIlRoZXkgd2VyZSBsb29raW5nIGF0IGJ1aWxkaW5nIGEgZGF0YSBjZW50ZXIgZm9yIHRoZSBmaW5hbmNpYWwgbWFya2V0cyBhdCBmaXJzdCwiIFRvYmluIHNhaWQgaW4gYW4gaW50ZXJ2aWV3LiAKVGhlIGFwcGFyZW50IHNpbXBsaWNpdHkgb2YgVGV4YXMgSG9sZGVtIGRyYXdzIHRoZSBUViBhdWRpZW5jZSBhbmQgaG9sZHMgdGhlbSwgbGlrZSBhbGwgZ3JlYXQgZ2FtZXMgYW5kIHNwb3J0cyBpdCBpcyBpbmNyZWRpYmx5IHNpbXBsZSB0byB1bmRlcnN0YW5kIGJ1dCBleHRyZW1lbHkgZGlmZmljdWx0IHRvIG1hc3Rlci4gRXZlcnlvbmUgZnJvbSB0ZWVuYWdlcnMgdG8gZ3Jhbm5pZXMgY2FuIHdvcmsgb3V0IHRoZSBiYXNpY3MgICB0aHJlZSBvZiBzb21ldGhpbmcgYmVhdHMgdHdvIG9mIHRoZW0hIEl0J3Mgb25seSBhIHNob3J0IHN0ZXAgdG8gZmlsbCBpbiB0aGUgb3RoZXIgaGFuZHMgb24gdGhlIHJhbmtpbmcgdGFibGUuCk1vc3Qgb2YgdGhlIHRoZW1lcyBhcmUgdHJhZGl0aW9uYWwsIGFzIHlvdSBjYW4gdGVsbCBieSB0aXRsZXMgbGlrZSAiQWNyb3NzIHRoZSBBbGxlZ2hlbmllcywiICJEZWFyIEpvaG4sIiBhbmQgIkdldCBNZSBvdXQgb2YgVGV4YXMuIiBUaGUgbHlyaWNzIGFyZSBhIGJpdCBkZWVwZXIsIHRob3VnaC4gIkp1c3QgQW5vdGhlciBUcmFpbiBTb25nIiBpcyBub3QgYXMgb3JkaW5hcnkgYXMgaXQgc291bmRzLCBzaW5jZSBpdCBpcyBhYm91dCBzb21lb25lIGFsbW9zdCBraWxsZWQgYnkgYSB0cmFpbi4gCklueWEgRXJvYmVybGluIERpYW5hIFZpbG5pdXMgQ2l0eS4gClNvIG15IHNpdHVhdGlvbiBpcyBJIHNhdCBpbiBiZWZvcmUsIGJ1dCBraW5kYSBmb3Jnb3QgaG93IG15IHBvc3RlcmlvciBmZWx0LiAKSXQgaXNuIGJ1bGwgc2hpdCBhbmQganVzdCBsb29rIGF0IHRoZSBzdGF0aXN0aWNzLiAKU2VlIHdoYXQgeW91IGhhdmUgZG9uZSBzbyBmYXIgYW5kIHRyeSB0byBhY2hpZXZlIHRoZSBzYW1lIG9yIGJldHRlciByZXN1bHRzIGRpZmZlcmVudGx5LiAKQ2hlZXJzLiBXaGVuZXZlciBJIGdvIHRvIHRoZSBmbGVhIG1hcmtldCBJIHdhbm5hIGJyaW5nIG9uZSBob21lLCBidXQgaGF2ZSBiZWVuIHJlc2lzdGluZyBzbyBmYXIgLiBpZiB5b3UgZXZlciBpbiBTZW91bCwgdGhlcmUgdHdvIG11c2V1bXMgd2l0aCBzaWduaWZpY2FudCBjb2xsZWN0aW9uczogVGhlIEhhbmd1bCBNdXNldW0gKCksIHdoaWNoIGFsc28gaGFzIGEgY29sbGVjdGlvbiBvZiBtb3ZhYmxlIHR5cGUgYW5kIG90aGVyIGZvcm1zIG9mIHB1dHRpbmcgdGhlIGFscGhhYmV0IHRvIHBhcGVyLCBhbmQgdGhlIEtpbmcgU2Vqb25nIE1lbW9yaWFsIEhhbGwgKCkuIFlvdSBjYW4gc2VlIHRoZSBldm9sdXRpb24gb2YgSGFuZ3VsIGtleWJvYXJkIGxheW91dHMgaW4gcGh5c2ljYWwgZm9ybSB0aGVyZS4KVGhlIHB1cnBvc2Ugb2YgdGhlIGxhdW5jaGVzIGlzIHRvIHN1cHBvcnQgc3BhY2UgYW5kIGVhcnRoIHNjaWVuY2UgcmVzZWFyY2guIFRoaXMgRlNFSVMgYWRkcmVzc2VzIHRoZSBwcm9ncmFtbWF0aWMgY2hhbmdlcyB0byB0aGUgU1JQIHRoYXQgaGF2ZSBvY2N1cnJlZCBzaW5jZSB0aGUgaXNzdWFuY2Ugb2YgdGhlIDE5NzMgRmluYWwgRW52aXJvbm1lbnRhbCBJbXBhY3QgU3RhdGVtZW50IChGRUlTKSBmb3IgdGhlIE5BU0EgU1JQIGFuZCBhbmFseXplcyB0aGUgc2l0ZSBzcGVjaWZpYyBlbnZpcm9ubWVudGFsIGltcGFjdHMgYXQgdGhlIHRocmVlIHByaW5jaXBhbCBVUyBsYXVuY2ggc2l0ZXMgbG9jYXRlZCBhdDogV2FsbG9wcyBGbGlnaHQgRmFjaWxpdHksIFdhbGxvcHMgSXNsYW5kLCBWaXJnaW5pYTsgUG9rZXIgRmxhdCBSZXNlYXJjaCBSYW5nZSBuZWFyIEZhaXJiYW5rcywgQWxhc2thOyBhbmQgV2hpdGUgU2FuZHMgTWlzc2lsZSBSYW5nZSwgTmV3IE1leGljby4uIApUaGUgdG9wIHBhcnQgaXMgcm91Z2hseSAxNiIgeCAyNC4iIEkgdXNlZCBzb21lIGNoZWFwIDF4MiBwaW5lIGJvYXJkcy4gVGhlIDI0IiBwaWVjZXMgdGhhdCBtYWtlIHRoZSBzbGF0cyBoYXZlIHNxdWFyZXMgbm90Y2hlcyBjdXQgb3V0IG9uIHRoZSBlbmRzIHNvIHRoZXkgd291bGQgZml0IGludG8gdGhlIGVuZCBwaWVjZXMsIHdoaWNoIGhhZCB0aGUgc2FtZSBzaXplZCBub3RjaGVzIGN1dCBhbGwgdGhlIHdheSBhY3Jvc3MuCkhlIHJ1c2hlZCBpbiBhbmQgc2FpZCBoZSBoYWQgd3JpdHRlbiBhbiBpbnRyb2R1Y3Rpb24gdG8gdGhlIHByb2JsZW1zIEkgaGFkIHNvbHZlZCBhbmQgd2FzIGdvaW5nIHRvIHN1Ym1pdCB0aGUgcGFwZXIgZm9yIHB1YmxpY2F0aW9uLiBJdCB0dXJucyBvdXQgdGhhdCB0aG9zZSB0d28gcHJvYmxlbXMgd2VyZSB0d28gdmVyeSB3ZWxsIGtub3duLCB1bnNvbHZlZCBzdGF0aXN0aWNhbCBwcm9ibGVtcy4gSSBoYWQgc29sdmVkIHRoZW0gYm90aC4uIApBbGwgYWJvdXQgT25saW5lIFBva2VyClRoZXNlIHBhc3QgdGhpcnR5IGRheXMgaGF2ZSBiZWVuIGVub3Jtb3VzbHkgaW5zdHJ1Y3RpdmUgYW5kIHJlaW5mb3JjZWQgbXkgcmVhc29ucyBmb3IgYnVpbGRpbmcgYSBjb3JlIHBvcnRmb2xpbyBhcm91bmQgZGl2aWRlbmQgcGF5aW5nIGVxdWl0aWVzLiBUaGUgZmlyc3QgYW5kIG1vc3QgaW1wb3J0YW50IHJlYXNvbiB0byBmb2N1cyBvbiBkaXZpZGVuZCBwYXlpbmcgc3RvY2tzIGlzIHRvIGNhcGl0YWxpemUgb24gdGhlIGVub3Jtb3VzIGVmZmVjdHMgb2YgY29tcG91bmRpbmcuIFdoZW4gdXRpbGl6aW5nIERSSVAgKGRpdmlkZW5kIHJlaW52ZXN0bWVudCBwcm9ncmFtcyksIGVhY2ggcGF5b3V0IGlzIGdyZWF0ZXIgdGhhbiB0aGUgb25lIGJlZm9yZSBiZWNhdXNlIGVhY2ggZGl2aWRlbmQgcGF5bWVudCBpcyBiZWluZyBtYWRlIG9uIHRoZSB0b3RhbCBudW1iZXIgb2Ygc2hhcmVzIHlvdSBob2xkIG9mIHRoYXQgcGFydGljdWxhciBlcXVpdHkgYW5kIGVhY2ggbW9udGgvcXVhcnRlci95ZWFyIHRoYXQgbnVtYmVyIG9mIHNoYXJlcyBncm93cy4KQXMgYSB3ZXN0ZXJuZXIgd2hvIGZyZXF1ZW50bHkgZmluZHMgaGltc2VsZiBpbiBKYXBhbiwgSSB0aGluayB0aGF0IHRoaXMgdmlkZW8gc3VtbWFyaXplcyBhbiBhc3BlY3Qgb2YgdGhlIEphcGFuZXNlIGN1bHR1cmUgdGhhdCBJIGFkbWlyZS4gUmVnYXJkaW5nIHRoZSB3b3JrZXJzLCBJIG5vdCBzdXJlIHRoYXQgdGhlIEFOQSBjb3Jwb3JhdGUgb2ZmaWNlIHdvdWxkIHZpZXcgdGhpcyBhcyBiZWluZyBpbmVmZmljaWVudC4gSSB0aGluayBpdCBpdCBpcyBtb3JlIGFib3V0IEEuIApJbiBtb3N0IHBva2VyIHZhcmlhbnRzLCBzdWNoIGFzIFRleGFzIEhvbGQgJ0VtIGFuZCBPbWFoYSwgdGhlcmUgYXJlIDUgc2hhcmVkIGNhcmRzLCBvciBjb21tdW5pdHkgY2FyZHMgZGVhbHQuIFRoaXMgaXMgc2ltcGx5IGJlY2F1c2UgdGhlIHJ1bGVzIGFyZSBhcyBzdWNoLiBUaGVyZSBhcmUgb3RoZXIgdmFyaWFudHMgb2YgcG9rZXIsIHN1Y2ggYXMgNyBDYXJkIFN0dWQgKEV2ZXJ5IHBsYXllciBmaXJzdCByZWNlaXZlcyAyIGNhcmRzIGZhY2UgZG93biwgMSBmYWNlIHVwLiBUaGVuIGEgcGxheWVyIGNhbiBjaG9vc2UgdG8gInRocm93IGNhcmRzIGF3YXkiIGFuZCBkcmF3IG90aGVyIGNhcmRzLiBUaGUgYW1tb3VudCBvZiBjYXJkcyB0aGF0IGNhbiBiZSBkcmF3biBpcyB0aGUgc2FtZSBhcyB0aGUgY2FyZHMgeW91IHRocmV3IGF3YXkuIFNvIDEgY2FyZCB0aHJvd24gYXdheSwgbWVhbnMgeW91IGNhbiBkcmF3IDEgbmV3IGNhcmQuIFRoZXJlIGFyZSB2YXJpYW50cyB3aGljaCBhbGxvdyB1cCB0byAzIGRyYXdzLiBJbiB0aGlzIHZhcmlhbnQgdGhlcmUgYXJlIG5vIHNoYXJlZCAgIG9yIGNvbW11bml0eSAgIGNhcmRzIGRlYWx0LikgKEZ1bGwgQW5zd2VyKQpZZWFoIEkga25vdyBtb3N0IG9mIHRoZW0gZG9uIHdhbnQgdG8sIEkganVzdCBzYXlpbmcgdGhhdCBpbiB1bmRpdmlkZWQgSW5kaWEgd2hlcmUgaXQgd2FzIHBvc3NpYmxlIHRvIGZvcm0gdGhlaXIgb3duIGNvdW50cnksIFB1bmphYiBhbmQgQmVuZ2FsLCB0aGV5IGRpZC4gUmlnaHQgbm93IGluIEluZGlhIHRoZXJlIGFyZSBvbmx5IDIgcmVnaW9ucyB3aGVyZSBNdXNsaW1zIGFyZSBpbiBhIG1ham9yaXR5LCBKYW1tdSBhbmQgS2FzaG1pciBhbmQgTGFrc2hhZHdlZXAgSXNsYW5kcy4gT3V0IG9mIHRoZXNlIHRoZSBmb3JtZXIgaXMgaW4gYSBmdWxsIGJsb3duIHNlY2Vzc2lvbmlzdCBtb3ZlbWVudC4uIApXZSBtYXkgYWxzbyBpbXBvc2UgbGltaXRzIG9uIGNlcnRhaW4gZmVhdHVyZXMgYW5kIHNlcnZpY2VzIG9yIHJlc3RyaWN0IHlvdXIgYWNjZXNzIHRvIHBhcnRzIG9yIGFsbCBvZiB0aGUgU2VydmljZXMgd2l0aG91dCBub3RpY2Ugb3IgbGlhYmlsaXR5Li4gCk15IERIIHdvbiByZW1lbWJlciBkYXRlcyAgIHRoYXQgaXMgd2hhdCBJIHVzZSBhcyB0aGUgZXhjdXNlIGZvciB3aHkgdGhleSBoYXZlIHRvIGRvIHRoaXMuIEluIGxhd3Mgc2NyZWFtIGFuZCBjb21wbGFpbiBhYm91dCBpdCB3aGVuIEkgdGVsbCB0aGVtIHRoZXkgZGlkbiB0ZWxsIG1lIGFib3V0IGl0IHRvIHB1dCBvbiB0aGUgZmFtaWx5IGNhbGVuZGFyLiBUaGV5IGRyb3ZlIDE2IGhvdXJzIHRvIHZpc2l0IGFuZCBkaWRuIGJvdGhlciB0byB0ZWxsIG1lICAgdGhleSB3ZXJlIHByb21wdGx5IHRvbGQgdG8gZmluZCBhIGhvdGVsIGFuZCBtYXliZSB3ZSBjb3VsZCBjbGVhciBvdXIgc2NoZWR1bGVzIGZvciB0b21vcnJvdy4KTGl2ZSBtdXNpYyBpbmNsdWRlcyBwcmUgaG9saWRheSB0dW5lcyBmcm9tIEJyaWFuIEJvcnUgSXJpc2ggUGlwZSBCYW5kIGFuZCByb2NrIGZyb20gVGltIFNpZ2xlci4gClRoZSBib2F0cyBpcyBhYm91dCBiZWluZyBlbmNhc2VkIGluIGEgc2hlbGwgb3IgImJvYXRzIiBleGNlcHQgaGFuZHMsIGZlZXQgYW5kIGhlYWQsIHRoZW4gYmVpbmcgY292ZXJlZCBhbmQgKGZvcmNlIClmZWQgbWlsayBhbmQgaG9uZXksIGxpa2VseSByZXBlYXRlZGx5LCBhdHRyYWN0aW5nIGZsaWVzLiBObyByZWxlYXNpbmcgaW4gYSBzd2FtcC4gCkFsb3JzIHF1ZSBqJ2FpIHQgYWRlcHRlIGRlcyBtYXNzYWdlcywgYyd0YWl0IGxhIHByZW1pcmUgZm9pcyBxdWUgamUgbSdvZmZyYWlzIHF1ZWxxdWVzIHNvaW5zIGRlIHZyYWllIHRoYWxhc3NvLiBKJ2FpIGx1IGRvbWljaWxlICBsJ2h0ZWwgSWJpcyBqb3V4dGFudCBsJ2luc3RpdHV0IGRlIHRoYWxhc3NvdGhyYXBpZSBldCBzaXR1IGVuIGJvcmQgZGUgcGxhZ2UuIApJIGp1c3QgcmVjb2duaXNlIGdvb2Qgd29yayB3aGVuIGl0J3MgdGhlcmUudG9mdXl1a2kgIDEyIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29CdXQgQ2hpbmEgZmluZSBkdXN0IGhhcyB3YXkgbW9yZSBvZiBlZmZlY3Qgb24gS29yZWEgdGhhbiBpdCBkb2VzIG9uIEphcGFuLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBEaWdpdGFsIGFuZCBzbW9rZSBmcmVlLiBBIGRpdmVyc2lmaWVkIG11bHRpIGN1bHR1cmFsLCBwb3N0IG1vZGVybiBkZWNvbnN0cnVjdGlvbiB0aGF0IGlzIGFuYXRvbWljYWxseSBhbmQgZWNvbG9naWNhbGx5IGluY29ycmVjdC4gSSd2ZSBiZWVuIHVwIGxpbmtlZCBhbmQgZG93bmxvYWRlZCwgSSd2ZSBiZWVuIGlucHV0dGVkIGFuZCBvdXRzb3VyY2VkLCBJIGtub3cgdGhlIHVwc2lkZSBvZiBkb3duc2l6aW5nLCBJIGtub3cgdGhlIGRvd25zaWRlIG9mIHVwZ3JhZGluZy4gSSdtIGEgaGlnaCB0ZWNoIGxvdyBsaWZlLiBBIGN1dHRpbmcgZWRnZSwgc3RhdGUgb2YgdGhlIGFydCBiaSBjb2FzdGFsIG11bHRpIHRhc2tlciBhbmQgSSBjYW4gZ2l2ZSB5b3UgYSBnaWdhYnl0ZSBpbiBhIG5hbm9zZWNvbmQhClVzZSB0aGlzIHRvIGdldCBhIHJvdWdoIGlkZWEgb2Ygd2hhdCBlYWNoIHJhbmdlIHNob3VsZCBsb29rIGxpa2UuIFNwb3QgZGlmZmVyZW5jZXMgaW4gdGhlIHJhbmdlcyBpdCByZWNvbW1lbmRzIGFuZCB0aGUgYWN0dWFsIHJhbmdlcyBhdCB5b3VyIHN0YWtlcywgYW5kIGFkanVzdCBhY2NvcmRpbmdseS4gUmVhZCB0aGUgY29uY2VwdHMgaW4gdGhlIGJvb2tzIHRvIHVuZGVyc3RhbmQgd2h5IHRoZSByYW5nZXMgbG9vayB0aGUgd2F5IHRoZXkgZG8sIGFuZCBob3cgeW91IGNhbiBhZGFwdCB0aGVtIGFwcHJvcHJpYXRlbHkuLiAKSSBjYW4ndCB0aGluayBvZiBhIEdyZWVrIHNvdXJjZSB0byBwb2ludCB5b3UgdG8gb3RoZXIgdGhhbiB0aGUgSWxpYWQuIEJ1dCBJIHRoaW5rIGl0J3MgaGFyZCB0byByZWFkIHRoZSBzY2VuZXMgd2l0aCBIZWN0b3IgYW5kIG5vdCBmaW5kIEhvbWVyJ3MgdHJlYXRtZW50IG9mIGhpbSB0byBiZSB0ZW5kZXIuIEhlJ3MgYSBkZWZlbmRlciBvZiBoaXMgaG9tZS4gSGUncyBsb3lhbCB0byBoaXMgZmFtaWx5LiBIZSBpcyBhIG1vZGVsIG9mIGR1dHkuIEhlJ3MgdGhlIGZpcnN0IGJvcm4gc29uIG9mIHRoZSBraW5nIG9mIGEgd2VhbHRoeSBjaXR5LCBhbmQgaGUgcmlza3MgZXZlcnl0aGluZyBkYXkgaW4gYW5kIGRheSBvdXQgZm9yIGhpcyBwZW9wbGUuIFRoZSBlbmRpbmcgb2YgdGhlIHRleHQgaXMgZnJhbWVkIGFyb3VuZCBoaXMgYnVyaWFsIGFuZCBwYXlpbmcgaGlzIGNvcnBzZSB0aGUgcmVzcGVjdCBvd2VkIHRvIGl0LiBJbiBtYW55IHdheXMsIGhlIGlzIHRoZSBzeW1ib2wgb2YgY2l2aWxpemF0aW9uIGluIHRoZSB0ZXh0LiBBbmQgaGUncyBqdXh0YXBvc2VkIHdpdGggc28gbWFueSBydXRobGVzcywgc2VsZmlzaCwgYW5kIHNhdmFnZSBHcmVla3MuIEJ1dCB5b3UgaGF2ZSBwaXF1ZWQgbXkgY3VyaW9zaXR5LiBJIHdvbmRlciB3aGF0IEdyZWVrIHRleHRzIHRoZXJlIGFyZSB3aGljaCBwcmVzZW50IGEgcmVhZGluZyBvZiBIZWN0b3IsIGdpdmVuIHRoYXQgdGhlcmUgd2Fzbid0IHJlYWxseSBhIGN1bHR1cmUgb2YgbGl0ZXJhcnkgY3JpdGljaXNtLgpJIGhvcGUgdGhlIGdvdmVybm1lbnQgd2lsbCBlaXRoZXIgd29yayB3aXRoIHByb2Zlc3Npb25hbHMgdG8gcmV2YW1wIHRoZSBtZXNzYWdpbmcvc3RyYXRlZ3kgb3IganVzdCByZXN0b3JlIGl0IHRvIGl0cyBmb3JtZXIgcGxhaW4gb2xkIGJyaWRnZSBzZWxmLi4gCiJUaGF0J3MgZXNwZWNpYWxseSB3aGVuIHlvdSB0aGluayBvZiB3aGVyZSB3ZSBjYW1lIGZyb20gd2l0aCBhIGp1c3QgYSBjb3VwbGUgb2YgQXJteSBodXRzIGJhY2sgaW4gdGhlICc2MHMuIlN1YnNjcmliZVNoYXJlIHZpYSBFbWFpbFNoYXJlIG9uIEZhY2Vib29rU2hhcmUgb24gVHdpdHRlclJTUyBGZWVkCllvdSBtYXkgY2hvb3NlIG5vdCB0byBwcm92aWRlIHVzIHdpdGggY2VydGFpbiB0eXBlcyBvZiBpbmZvcm1hdGlvbiwgYnV0IGRvaW5nIHNvIG1heSBhZmZlY3QgeW91ciBhYmlsaXR5IHRvIHVzZSBzb21lIG9mIHRoZSBTZXJ2aWNlcy4gClBldGVyIFJpY2hhcmQgUGFnbnV0dGkKVGVhbSBhdCBUcnVlIE5vcnRoIGNvbnRpbnVlcyB0byBwcm92aWRlIGxlYWRpbmcgZWRnZSwgdG9wIHRpZXIsIGJlc3Qgb2YgYnJhbmQgaG9ja2V5LCBjb25jZXJ0cyBhbmQgcmVsYXRlZCBlbnRlcnRhaW5tZW50IHRvIG91ciBjaXR5LCBMdWRsb3cgc2FpZC4gCk15IGNhcmRzICAgQ2hhc2UgU2FwcGhpcmUgUmVzZXJ2ZSAoNS8xOCksIEJsdWUgQ2FzaCBFdmVyeWRheSAoNy8xNyksIENoYXNlIEZyZWVkb20gVW5saW1pdGVkICg3LzE3KSwgQ2hhc2UgQW1hem9uIFByaW1lICg3LzE3KSwgQkJWQSBDb21wYXNzICgxMC8xNikgRmlhbmNlZSBjYXJkcyAgIENoYXNlIFNhcHBoaXJlIFByZWZlcmVkICg5LzE3KSwgQkJWQSBDb21wYXNzICg1LzE2KQpUaGVzZSBjb21wYW5pZXMgaGF2ZSBncm93biBsYXJnZXIgYW5kIG1vcmUgcG93ZXJmdWwsIHRoZXkgaGF2ZSB1c2VkIHRoZWlyIHJlc291cmNlcyBhbmQgY29udHJvbCBvdmVyIHRoZSB3YXkgd2UgdXNlIHRoZSBJbnRlcm5ldCB0byBzcXVhc2ggc21hbGwgYnVzaW5lc3NlcyBhbmQgaW5ub3ZhdGlvbiwgYW5kIHN1YnN0aXR1dGUgdGhlaXIgb3duIGZpbmFuY2lhbCBpbnRlcmVzdHMgZm9yIHRoZSBicm9hZGVyIGludGVyZXN0cyBvZiB0aGUgQW1lcmljYW4gcGVvcGxlLCBXYXJyZW4gYWRkZWQgaW4gaGVyIHBvc3QuIHJlc3RvcmUgdGhlIGJhbGFuY2Ugb2YgcG93ZXIgaW4gb3VyIGRlbW9jcmFjeSwgdG8gcHJvbW90ZSBjb21wZXRpdGlvbiwgYW5kIHRvIGVuc3VyZSB0aGF0IHRoZSBuZXh0IGdlbmVyYXRpb24gb2YgdGVjaG5vbG9neSBpbm5vdmF0aW9uIGlzIGFzIHZpYnJhbnQgYXMgdGhlIGxhc3QsIGl0J3MgdGltZSB0byBicmVhayB1cCBvdXIgYmlnZ2VzdCB0ZWNoIGNvbXBhbmllcy4gQW1hem9uIGFuZCBGYWNlYm9vayBoYXZlIG5vdCB5ZXQgcmVzcG9uZGVkIHRvIGEgcmVxdWVzdCBmb3IgY29tbWVudCBmcm9tIEZveCBOZXdzLgpMb21pIExvbWkgY291bGQgbG9vayBsaWtlIGEgY3JlYXRpdmUgR1NNLi4gCiJZb3UgY2FuJ3QgbGV0IHlvdXIgZ3VhcmQgZG93biBpbiB0aGlzIHR5cGUgb2Ygd29yay4gSWYgeW91IHNob3cgZmVhciwgdGhleSdyZSBnb2luZyB0byB0cnkgdG8gdXNlIHRoYXQgYWdhaW5zdCB5b3UuIEl0J3Mgbm90IHVudXN1YWwgdGhhdCBwYXRpZW50cywgYW50aXNvY2lhbHMsIHdpbGwgdGhyZWF0ZW4gdG8ga2lsbCB5b3UuIgpUaGUgSGlkZGVuIENvc3RzIG9mIGEgUG9zc2libGUgVQpCdXQgbXkgYmVzdCBmcmllbmQgaXMgYmxhY2sgYW5kIG1vc3Qgb2YgaGVyIHJlbGF0aW9uc2hpcHMgaGF2ZSBiZWVuIHdpdGggd2hpdGUgbWVuLiAKRnJlbmNoIGFyY2hpdGVjdCBKZWFuIE5vdXZlbCBoYXMgZ2l2ZW4gdGhlIDEsMDUwIGZvb3QgdGFsbCBjb25kbyBuZXh0IHRvIHRoZSBNdXNldW0gb2YgTW9kZXJuIEFydCAgIGRldmVsb3BlZCBieSBIaW5lcywgUG9udGlhYyBMYW5kIEdyb3VwIGFuZCBHb2xkbWFuIFNhY2hzICAgYW4gYW5ndWxhciB0b3BwZXIuIFNpbmNlIHRoZSA4MiBzdG9yeSBzdHJ1Y3R1cmUgdG9wcGVkIG91dCBpbiBEZWNlbWJlciwgcmVzaWRlbnRzIG9mIHRoZSAxNDUgYXBhcnRtZW50cyBjYW4gZXhwZWN0IGNsb3NpbmdzIHRvIGJlZ2luIHRoaXMgc3ByaW5nLiBBdmFpbGFibGUgdW5pdHMgcmFuZ2UgZnJvbSB0d28gYmVkcm9vbXMgYXNraW5nICQ2LjQgbWlsbGlvbiBhbmQgdXAgdG8gYSBmb3VyIGJlZHJvb20gcGVudGhvdXNlIHByaWNlZCBhdCAkNjMuOCBtaWxsaW9uLiAKSGlzIG5hbWUgaXMgTGxveWQgRG9nZ2V0dC4gCkxhIHBsdXBhcnQgZGVzIEFwaWFjZXMgKGxpdmNoZSwgcGVyc2lsLCBjbGVyaSwgYW5nbGlxdWUsIGNvcmlhbmRyZSwgY2FydmksIGN1bWluLCBpbXByYXRvaXJlLCBsYXNlciwgZXRjLikgY29udGllbm5lbnQgZGVzIHN1YnN0YW5jZXMgY29ubnVlcyBzb3VzIGxlIG5vbSBkZSBmdXJvY291bWFyaW5lcyAoZnVyYW5vY291bWFyaW5lIG4gbHVpLCBxdWUgbGUgdGVybWUgYW5nbG8gc2F4b24gY29tbWUgbWUgbCBmYWl0IHJlbWFycXVlciB1bmUgbGVjdHJpY2UgZHUgYmxvZyBlbiBtYXJzIGRlcm5pZXIpLiBMYSBiZXJjZSBuIGNoYXBwZSBwYXMuIApUaGF0J3MgdGhlIHRha2Vhd2F5IGZyb20gIiIgKFNwaWVnZWwgR3JhdSksIFl1dmFsIE5vYWggSGFyYXJpJ3MgZnJpZ2h0ZW5pbmcgbmV3IGJvb2sgb2YgYmlndGhpbmsuIE1hY2hpbmVzIHB1dCBodWdlIG51bWJlcnMgb2YgbWFudWFsIGxhYm9yZXJzIGFuZCBmYWN0b3J5IHdvcmtlcnMgb3V0IG9mIGJ1c2luZXNzLCBidXQgdGhvc2UgcGVvcGxlIGxhcmdlbHkgbW92ZWQgb24gdG8gam9icyBvcmdhbml6ZWQgYXJvdW5kIHRoZSBjb2duaXRpdmUgY2FwYWNpdGllcyBvZiBodW1hbnMuIEFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGlzIHJhY2luZyBzbyBmYXIgYmV5b25kIGh1bWFuIGNhcGFiaWxpdGllcywgd2hpbGUgZmlsbGluZyBpbiBjcnVjaWFsIGdhcHMgc3VjaCBhcyB0aGUgYWJpbGl0eSB0byByZWFkIGFuZCByZWFjdCBjb3JyZWN0bHkgdG8gaHVtYW4gZW1vdGlvbnMsIHRoYXQgY29nbml0aXZlIHdvcmtlcnMgY291bGQgYmVjb21lIGFzIHJlZHVuZGFudCBhcyBhIGZhcm0gd29ya2VyIGN1dHRpbmcgZ3JhaW4gd2l0aCBzY3l0aGVzLiAKRm9yZWlnbiBtZW4gYXJlIG5vdCBiZWhpbmQgdGhlIG1ham9yaXR5IG9mIHRoZXNlIGJpcnRocywgYnV0IGV2ZW4gdGhlbiB0aGVyZSBhbHNvIHRoZSBmYWN0IHRoYXQgd2hlbiBpdCBjb21lcyB0byB0aGVzZSBjYXNlcywgdGhlcmUgaW5oZXJlbnRseSBtb3JlIHJlc3BvbnNpYmlsaXR5IG9uIHRoZSBGaWxpcGluYSB3b21lbiB0aGVtc2VsdmVzIHRoYW4gdGhlIG1lbiB3aGV0aGVyIGZvcmVpZ24gb3IgZG9tZXN0aWMgYmVjYXVzZSBvZiB0aGUgZmFjdCB0aGF0IHRoZXJlIGNhbm5vdCBldmVuIGJlIGEgMToxIGNvcnJlc3BvbmRlbmNlIGJldHdlZW4gdGhlIHNleGVzIHdoZW4gaXQgY29tZXMgdG8gdGhlc2Uga2luZHMgb2YgY2FzZXMuIEZvciBleGFtcGxlIHRoZXJlIHdhcyBhIGNhc2Ugd2hlcmUgYSBzaW5nbGUgSmFwYW5lc2UgbWFuIHdhcyBmb3VuZCB0byBoYXZlIGhhZCBzZXh1YWwgaW50ZXJjb3Vyc2Ugd2l0aCAxMiw3MDAgRmlsaXBpbmEgd29tZW4gYW5kIGNoaWxkcmVuIG92ZXIgdGhlIGNvdXJzZSBvZiB0d28gZGVjYWRlcyBpbiB0aGUgY291bnRyeS4KSXQgd291bGQgYmUgYSBzaGl0IHNpdHVhdGlvbiwgaWYgdGhlIGNhdCBoYWQgbm8gcGxhY2UgdG8gaGlkZS4gCklmIHBlb3BsZSBoYWQgbm8gaWRlYSB3aGVyZSBTYW4gRGllZ28gaXMgSSBzYXkgd2Ugc291dGggb2YgTEEsIGFsb25nIHRoZSBwYWNpZmljIGFuZCB0aGUgYm9yZGVyIHdpdGggTWV4aWNvLgpNeSBmcmllbmQgdGhpbmtzIHRoaXMgaXMgYSBnb29kIGlkZWEgYW55d2F5LiAKVmlrZW5kaSBzaG91bGQgYmVlbiB0aGUgbWlkZGxlIGdyb3VuZCBiZXR3ZWVuIEVyYW5nZWwgYW5kIFNhbmhvay4gSW5zdGVhZCwgaXQgc21hbGxpc2ggYnV0IHRoZSBjaXJjbGVzIGFyZSBhZ29uaXppbmdseSBzbG93LCB0aGUgbG9vdCBzdWNrcywgc25pcGVycyBhcmUgdW5kZXJwb3dlcmVkIGJlY2F1c2UgeW91IGNhbiBmaW5kIEwzIGhlbG1ldHMgb3V0c2lkZSBvZiBjcmF0ZXMsIGV2ZXJ5b25lIGNhbXBzIGluIGNvbXBvdW5kcyBiZWNhdXNlIHRoZXJlIHNvIG1hbnkgb2YgdGhlbSwgYW5kIHRoZSBsb290IGNhdmUgcnVpbnMgYW55IHNlbWJsYW5jZSBvZiBmYWlybmVzcyB0aHJvdWdoIFJORy4KU28gdGhpcyBpcyB3aGVyZSBpdCBhbGwgYmVnYW4uIApJdCBpcyBvaWwgY291bnRyeSwgd2l0aCBzY29yZXMgb2YgcHVtcHMgZ3JhemluZyBsaWtlIG1ldGFsIGhvcnNlcyBpbiBldmVyeSBkaXJlY3Rpb24uIApXaGV0aGVyIHlvdSBqdXN0IGN1cmlvdXMgYXQgdGhpcyBzdGFnZSBvciBhbHJlYWR5IHdpbGxpbmcgdG8gaW5kdWxnZSB5b3VyIGFkdmVudHVyb3VzIHNpZGUsIGNoZWNrIG91dCB0aGVzZSBzaXggZG8gYW5kIGRvbiBvZiBhbmFsIHNleC4uIApTaGUgYWdyZWVkIHRvIFZpc2l0IE1hY2F1IFdpdGggbWUsIHNvIGV4Y2l0ZWQgdG8gUGxheSBzb21lIDUwLzEwMCBhdCB0aGUgV3lubiBhZ2FpbnN0IHNvbWUgQ2hpbmVzZSBsYWdzLiAKT25lIHRoaW5nIHRoYXQgZGlzdGluZ3Vpc2hlcyBIb3phbmEgZnJvbSBvdGhlciBzb2NpYWwgc2l0ZXMgb3IgZXZlbiB0cmFkaXRpb25hbCBkaXNjdXNzaW9uIGZvcnVtcyBpcyB0aGF0IG9ubHkgYWRtaW5pc3RyYXRvcnMgYW5kIG1vZGVyYXRvcnMgY2FuIHN0YXJ0IGRpc2N1c3Npb24gdG9waWNzLCBtZW1iZXJzIGNhbiBvbmx5IHJlcGx5IGluIHRoZSBjb21tZW50czsgc28gaXQgd291bGQgaGVscCBpZiB0aGVyZSBhcmUgaXMgbW9yZSB0aGFuIG9uZSBwZXJzb24gcnVubmluZyB0aGluZ3MgdG8ga2VlcCBpdCBhY3RpdmUuIE90aGVycyBncmlwIGl0IGJ1dCBqdXN0IGhvbGQgb250byBpdCBhbmQgY29wZS4gUGxlYXNlIGdpdmUgbWUgYW5kIGhpbSBzdHJlbmd0aCB0byB3b3JrIHRocm91Z2ggdGhpcyBkaWZmaWN1bHQgdGltZS4gCjEpIE51dHJpdGlvbiBpcyBhbiBlbnZpcm9ubWVudGFsIGZhY3RvciB0aGF0IGluZmx1ZW5jZXMgZ2VuZSBleHByZXNzaW9uLgpUaGUgYWRtaW5pc3RyYXRvciBhbHNvIHNpZnRzIHRocm91Z2ggdGhlIG1hc3RlciBoYW5kIGhpc3RvcnkgZGFpbHkgdG8gcmViYXRlIHRoZSByYWtlIHRvIHBsYXllcnMgaW4gdGhlIGNhc2ggZ2FtZS4gVGhlIGdhbWUgaXMgZXNzZW50aWFsbHkgcmFrZSBmcmVlIGFsdGhvdWdoIHRoZSBhZG1pbmlzdHJhdG9yIGhhcyBkaXJlY3RvciBuaWdodHMgb25jZSBldmVyeSBjb3VwbGUgb2YgbW9udGhzIHdoZXJlIGEgcG9ydGlvbiBvZiB0aGUgcmFrZSBnb2VzIHRvIGhpbSBmb3IgaGlzIGFkbWluaXN0cmF0b3IgZWZmb3J0cy4gCiJXZSBhcmUgdGhyaWxsZWQgdG8gYmUgYWJsZSB0byBicmluZyB0aGUgR3JhbmQgSHlhdHQgYnJhbmQgdG8gdGhlIE1hbGF5c2lhbiBjb21tdW5pdHksIiBzYWlkIExhcnJ5IFRjaG91LCBNYW5hZ2luZyBEaXJlY3RvciwgSHlhdHQgSG90ZWxzIFJlc29ydHMgICBBc2lhIFBhY2lmaWMuICJHcmFuZCBIeWF0dCBLdWFsYSBMdW1wdXIncyBvcGVuaW5nIGVjaG9lcyBhZ2FpbiBIeWF0dCdzIGRldmVsb3BtZW50IHN0cmF0ZWd5LCB3aGljaCBpcyB0byBmb2N1cyBvbiB0aGUgZ2F0ZXdheSBjaXRpZXMgYW5kIG1hcmtldHMgd2hlcmUgY3VzdG9tZXJzIGFyZSB0cmF2ZWxpbmcuIFdlIGFyZSB2ZXJ5IGV4Y2l0ZWQgdG8gaW50cm9kdWNlIG91ciBhdXRoZW50aWMgaG9zcGl0YWxpdHkgdG8gS3VhbGEgTHVtcHVyIGFuZCBjYXRlciB0byB0cmF2ZWxlcnMgZnJvbSBBc2lhIGFuZCBvdGhlciBjb250aW5lbnRzIGFyb3VuZCB0aGUgZ2xvYmUuIi4gClNvLCBJIGhhdmUgYSBwcm9ibGVtLiBwb3N0dXJhbCBhc3Nlc3NtZW50cywgZmFzY2lhIHJlbGVhc2luZywgZW5lcmd5IHdvcmssIHJlZmxleG9sb2d5LCBldGMuKSBhcmUgdG90YWwgYnVsbHNoaXQuIEkgaGF2ZSBub3cgZGVjaWRlZCB0byBjb21taXQgbXkgcHJhY3RpY2UgYWZ0ZXIgZ3JhZHVhdGlvbiB0byBhIG5vIG5vbnNlbnNlIHBvbGljeSBhbmQgcmVmdXNlIHRvIHRlbGwgY2xpZW50cyB0aGluZ3MgdGhhdCBoYXZlIG5vIHNjaWVuY2UgdG8gYmFjayBpdCB1cC4gRG9lcyBhbnlvbmUgaGF2ZSBleHBlcmllbmNlIHdpdGggdGhpcyBvciBhIHJlc291cmNlIHRoYXQgdGhleSBrbm93IG9mIGxpa2UgYm9va3MsIHdlYnNpdGVzIG9yIGJsb2dzIHRoYXQgdGFsayBhYm91dCB0aGlzIGtpbmQgb2YgdGhpbmc/SSBrbm93IGV4YWN0bHkgd2hhdCB5b3UgbWVhbi4KQXNwZXJnZXIgZmFsbHMgYWxvbmcgdGhlIEF1dGlzdGljIHNwZWN0cnVtLiAKT25jZSBhZ2FpbiBhcyBKZWt5bGwsIGFuZCBmaWxsZWQgd2l0aCByZW1vcnNlLCBoZSBkZXN0cm95cyBoaXMgd29yayBhbmQgc2VuZHMgbW9uZXkgdG8gSXZ5LCBob3BpbmcgdG8gbWFrZSBhbWVuZHMgZm9yIEh5ZGUncyBiZWhhdmlvdXIuIFdoZW4gTUdNIG1hZGUgdGhpcyBEciBKZWt5bGwgYW5kIE1yIEh5ZGUgYWRhcHRhdGlvbiB0aGV5IHB1cmNoYXNlZCB0aGUgZWFybGllciBmaWxtJ3Mgc2NyZWVucGxheSBhbmQgZGVzdHJveWVkIGFsbCBhdmFpbGFibGUgY29waWVzIG9mIHRoaXMgdmVyc2lvbiBmcm9tIHRoZSB0aGVuIGJhbmtydXB0IFBhcmFtb3VudCB0byBwcmV2ZW50IHVuZmF2b3VyYWJsZSBjb21wYXJpc29ucy4gCk15IGJyb3RoZXIgaXMgaGlnaCBmdW5jdGlvbmluZyAxMSB5ZWFycyB5b3VuZ2VyIHRoYW4gbWUuIEkgZGlkIGEgbG90IG9mIGhpcyByYWlzaW5nIGdyb3dpbmcgdXAuIEkgc3BlbnQgbW9zdCBzdW1tZXJzIG5vdCBnZXR0aW5nIHRvIGRvIHdoYXQgSSB3YW50ZWQgb3Igc2VlaW5nIG15IGZyaWVuZHMuIEkgdG9vayBjYXJlIG9mIGhpbSBldmVyeSBkYXkgYWZ0ZXIgc2Nob29sLiBBcyBJIGdvdCBvbGRlciAobGFzdCAzIHllYXJzIG9mIEhTKSB0aGluZ3MgZ290IGJldHRlciBidXQgYSBsb3Qgb2YgZGFtYWdlIHdhcyBhbHJlYWR5IGRvbmUuIApEZWZlbnNlIFJlc3RzIEFmdGVyIEp1c3QgVGhyZWUgV2l0bmVzc2VzCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gCkkgc2F3IHRoaXMgZGVzaWduIG9uIGRyaWJiYmxlIGFuZCB0aG91Z2h0IGl0IHdvdWxkIGJlIGZ1biB0byBtYWtlIGpvYiBhZCBmb3IgYSBsb2NhbCBidXNpbmVzcyBvdXQgb2YgaXQsIHNpbmNlIHRoZXkgaGF2ZSBhIGxvZ28gdGhhdCB3b3VsZCBiZSBwcmV0dHkgc3dlZXQgZm9yIHRoaXMgdHlwZSBvZiBkZXNpZ24uIEkga25vdyB3aGF0IEkgZGlkIGlzIGp1c3QgYSBzdHJhaWdodCB1cCBjb3B5LCBidXQgdGhpcyB3YXMgbW9yZSBvZiBhbiBleHBlcmltZW50IHRvIGdldCBhdGxlYXN0IHNvbWV0aGluZyByaWdodCAoYW5kIHNvcnJ5IGZvciB0aGUgInNjcmFtYmxlZCB0ZXh0IiBidXQgSSBkb24gd2FudCB0byBnaXZlIHRoZSBidXNpbmVzcyBzcGFtKS4gClRha2UgaXQgZnJvbSBzb21lb25lIHdobyBkaWRuIGFzayBhbnlvbmUgb3V0IGZvciBhIGxvbmcgY2h1bmsgb2YgaGlzIGxpZmUgYmVjYXVzZSBoZSB3YXMgd29ycmllZCBpdCBiZSBhd2t3YXJkLgpEaWVzZSBNZWludW5nIHZlcnRyaXR0IGF1Y2ggS2FtcGZzcG9ydCBMZWdlbmRlIEphY2tpZSBDaGFuIHVuZGVya2xhZXJ0ZSBzaWNoIGJlcmVpdGFuIGVpbmVyIEF1ZmtsYWVydW5nc2thbXBhZ25lIGZ1ZXIganVuZ2UgTGV1dGUgaW4gS2FtYm9kc2NoYSBtaXR6dXdpcmtlbi4gV2FzIGhlcmF1c2thbSBrYW5uIG1hbiBoaWVyIGJld3VuZGVybi4gCiJJdCBpcyB1bmV0aGljYWwgZm9yIHRoZSBnb3Zlcm5tZW50IHRvIHJlYXAgb3ZlciAkMS4xIGJpbGxpb24gaW4gdGF4IGZyb20gZ2FtYmxpbmcgYXQgdGhlIGV4cGVuc2Ugb2YgY29tbXVuaXR5IHdlbGxiZWluZywiIERyIEdyZWVuc2xhZGUgc2FpZC4gQmFsbGFyYXJ0IENvdXJpZXJKdWx5IDMwIDIwMTggICA5OjAwQU0uIApFdmVyeW9uZSBqdXN0IGxvdmVzIHRoZWlyIGZvb2QuIApIZSBzdWZmZXJlZCBmcm9tIG1vb2Qgc3dpbmdzLCBsb3N0IGhpcyBzZXggZHJpdmUsIGFuZCB0aHJldyB1cCBpbiBhIHBhcmtpbmcgbG90LkRhcmRhcmlhbidzIGFwcHJvYWNoIHdhcyBkaWZmZXJlbnQuIApETkEgYmFyIGNvZGluZyB3YXMgdXNlZCB0byBpZGVudGlmeSB0aGUgbW9yZSB0aGFuIDI0MCBxdWFsaWZ5aW5nIHNhbXBsZXMgb2YgZmlzaCwgYWNjb3JkaW5nIHRvIGEgbGlzdCBvZiBtb3JlIHRoYW4gMSwxMDAgc3BlY2llcyBtYWludGFpbmVkIGJ5IHRoZSBDYW5hZGlhbiBGb29kIEluc3BlY3Rpb24gQWdlbmN5LiBBbnkgd2l0aCBETkEgc2VxdWVuY2UgdGhhdCBkaWQgbm90IG1hdGNoIHRoZSBDRklBIGxpc3Qgd2VyZSBjb25zaWRlcmVkIG1pc2xhYmVsbGVkLgpHYXJyZXR0LCB3aG8gaGFkIHByZXZpb3VzbHkgd3JpdHRlbiB0aGUgYm9vayBUaGUgTGlmZSBhbmQgVGltZXMgb2YgTGlnaHRob3VzZSBNY05laWw6IEFuIEFkdmVudHVyZSBpbiB0aGUgUkNNUCwgZGVjaWRlZCB0aGUgYmVzdCB3YXkgdG8gYXBwcm9hY2ggdGhlIHdyaXRpbmcgb2YgaGlzIG5ld2VzdCBib29rIGlzIHRoZSB3YXkgaGUga25ldyBiZXN0LgpUaGUgZmlmdGggYW5kIGxhc3QgZ2FtZSBmb3VuZCBpbiBQYWNpZmljIFBva2VyIGlzIHRoZSA3IENhcmQgU3R1ZCBnYW1lLiAKSWtrZSBhbGxlLCBtZW4gZGUgYmxpciBpa2tlIHV0Zm9yZHJldCBwIGV0IGdydW5uc3luIHNvbSBqZWcgbWVuZXIgZXIgaHlrbGVyc2sgb2cgdWV0aXNrLiAKRmxvb2RpbmcgdGhlIHN0cmVldHMgbWF5IGhhdmUgYmVlbiBhIHN0b3BnYXAgbWVhc3VyZSB0byBjdXJiIHRoZSBjaXR5IHdhc3RlIHByb2JsZW1zLCBidXQgcmVndWxhciBmbG9vZGluZyBvbmx5IHNlcnZlcyB0byBleGFjZXJiYXRlIG1vc3F1aXRvIGJyZWVkaW5nLCBhIHBoZW5vbWVub24gd2hpY2ggaXMgZXZpZGVuY2VkIGJ5IHRoZSBpbmNyZWRpYmxlIGRlYXRoIHJhdGUgb2YgbWFsYXJpYSBhbmQgb3RoZXIgbW9zcXVpdG8gYm9ybmUgaWxsbmVzc2VzLjUgVGhlIFJvbWFuIGVsaXRlIGV2ZW4gb2Z0ZW4gY2hvc2UgdG8gbGVhdmUgdGhlIGNpdHkgZm9yIGV4dGVuZGVkIHBlcmlvZHMgb2YgdGltZSBpbiBhbiBhdHRlbXB0IHRvIGVzY2FwZSB0aGUgZW5kZW1pYyB3YXZlcyBvZiBkaXNlYXNlLCBlc3BlY2lhbGx5IGR1cmluZyB0aGUgZmFsbC4gQ2Vsc3VzIG1lbnRpb25zIHNldmVuIHRpbWVzIG92ZXIgdGhhdCBhdXR1bW4gaXMgYnkgZmFyIHRoZSBtb3N0IGRhbmdlcm91cyBhbmQgZGVhZGx5IHNlYXNvbiw2IFBsaW55IHRoZSBZb3VuZ2VyIGxlZnQgUm9tZSBmb3IgaGlzIGVzdGF0ZXMgZm9yIGhlYWx0aGllciB3ZWF0aGVyIHdoaWxlIGNvbXBsYWluaW5nIGFib3V0IHRob3NlIHdobyBjaG9vc2UgdG8gc3RheSB3aXRoaW4gdGhlIGNpdHksIGZvcmNpbmcgcGVvcGxlIHRvIG1lZXQgd2l0aCB0aGVtIGF0IHRoZSB3b3JzdCB0aW1lIG9mIHRoZSB5ZWFyLjcgRXZlbiBTZW5lY2Egbm90ZXMgdGhhdCB0aGUgYmVzdCBkZWZlbnNlIGFnYWluc3QgaWxsbmVzcyBpcyB0byBmbGVlLjggSG9yYWNlIGdvZXMgaW50byBkZXRhaWwgbXVsdGlwbGUgdGltZXMsIGRlc2NyaWJpbmcgdGhlIHN1cGVyaW9yaXR5IG9mIHRoZSBjb3VudHJ5IHRvIHRoZSBjaXR5LCBzcGVjaWZpY2FsbHkgZW1waGFzaXppbmcgdGhlIGhlYWx0aCBiZW5lZml0cyBvZiBhdm9pZGluZyB0aGUgY2l0eSBvZiBSb21lIGluIHRoZSBmYWxsLjkgV2hpbGUgdGhpcyBvcHRpb24gd2FzIGNsZWFybHkgdW5hdmFpbGFibGUgdG8gdGhlIHZhc3QgbWFqb3JpdHkgb2YgUm9tYW5zLCB0aGUgZmFjdCB0aGF0IGl0IHdhcyBhbiBvcHRpb24gZm9yIHRoZSB3ZWFsdGh5IHNob3dlZCB0aGF0IFJvbWFucyB0aGVtc2VsdmVzIHdlcmUgd2VsbCBhd2FyZSBvZiB0aGUgbWFsaWduYW50IGVmZmVjdHMgaWxsdXN0cmF0ZWQgYnkgU2hhdydzIGVwaWdyYXBoaWMgYW5hbHlzaXMuIApUaHJvdWdoIGh1YnMgaW4gQ2FsaWZvcm5pYSBhbmQgTmV3IFlvcmsgYW5kIGZ1bm5lbHMgbWlsbGlvbnMgb2YgZG9sbGFycyBiYWNrIHRvIENoaW5hLCBzYWlkIFNndC4gClNoZSB0aGlua3MgSSB0b28gc3R1cGlkIHRvIHJlYWxpc2UgdGhhdCBJIGdvdCBvZmYgd29yayBlYXJseSwgaGUgaGFkIHRha2VuIG15IGtleXMsIGFuZCB0aGV5IHdvdWxkbiB1bmxvY2sgdGhlIGZyb250IGRvb3IgKGFwYXJ0bWVudCwgdGhleSBoZWFyZCBtZSBmb3Igc3VyZSkgb3IgYW5zd2VyIHBob25lcy4gU2hlIGtlcHQgYXNraW5nIG1lIHRvIGdvIGZvciBkcmlua3MgYWZ0ZXIgYW5kIHdvbmRlcmVkIHdoeSB3ZSB3ZXJlIGdyb3dpbmcgYXBhcnQuIAoxLzV0aCBvZiB0aGUgZmVkZXJhbCBqdWRpY2lhcnkgaXMgbm93IHN0YWNrZWQgd2l0aCAzMCB5ZWFyIG9sZCBUcnVtcCBhY3RpdmlzdCBqdWRnZXMgZm9yIGxpZmUuIApNYW5saWVzdE1hbkhhbSAgMzQgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpIZXJlIGEgc3RvcnkxIGZyb20gMTkzMCB0aGF0IHNlZW1zIHRvIGhhdmUgaXQgYWxsIGluIGEgc2VyaWVzIG9mIGludGVyZXN0aW5nIGFuZCByZWFjaGluZyBpZGVhczogdGhlIGRlc3RydWN0aW9uIG9mIGFsbCBtYXR0ZXIsIGFuIGFsbCBwb3dlcmZ1bCBlcXVhdGlvbiBvbiBhdG9taWMgZW5lcmd5LCBhIG1lbnRpb24gb2YgRWluc3RlaW4sIHRoZSBpbnRlZ3JhcGgsIGFuIGludmFzaW9uIG9mIE1hcnRpYW5zLCBkaXNpbnRlZ3JhdGluZyByYXlzLCBhbmQgc29tZSBvdGhlciBzdHVmZiwgbm90IHRoZSBsZWFzdCBvZiB3aGljaCB3YXMgYSBuZXdseSBjcmVhdGVkIGNvbXB1dGVyIGlkZW50aWZpY2F0aW9uIG9mIHVua25vd24gZmllbGRzIG9mIG1hdGhlbWF0aWNzLiBUb28gYmFkIHRoZSBhcnRpY2xlIGlzIHNvIGJhZGx5IHdyaXR0ZW4uCkFzIGZhciBhcyBJIGtub3cgdGhlcmUgaXMgbm8gdGVybSBsaW1pdCBvbiBob3cgbG9uZyBhIEJyaXRpc2ggUHJpbWUgTWluaXN0ZXIgY2FuIHNlcnZlLiAKVGhlIHBlb3BsZSB3aG8gZmlyc3Qgc3BvdHRlZCB0aGUgY2F2ZSBmcm9tIHRoZSBoZWxpY29wdGVyIG5hbWVkIGl0IFNhcmxhY2MncyBQaXQsIGJlY2F1c2Ugb2YgaXRzIHNpbWlsYXJpdHkgdG8gdGhlIGxhaXIgb2YgU2FybGFjYywgYSBjcmVhdHVyZSBmcm9tICJTdGFyIFdhcnM6IFJldHVybiBvZiB0aGUgSmVkaS4iCkJyb3VnaHQgdG9vIG11Y2ggc3R1ZmYsIGVzcGVjaWFsbHkgZm9vZC4gRXZlcnkgeWVhciBJIHRyeSB0byBjdXQgdGhlIGFtb3VudCBvZiBmb29kIEkgYnJpbmcgYW5kIGl0IHN0aWxsIGFsd2F5cyB0b28gbXVjaC4KSW0gYXdhcmUgSXZlIHByb2JhYmx5IGNvbWUgYWNyb3NzIGFzIGEgYml0IGhhcnNoIGhlcmUsIGJ1dCBJIGRvbnQgd2FudCB5b3UgdG8gYmUgYW5vdGhlciBzdGF0aXN0aWMsIHBhaW50ZWQgZG93biB0aGUgcm9hZCBpbiBhIHRyYWlsIG9mIHJlZCBhbmQgYnJva2VuIGthd2FzYWtpLiAKVW5pdmVyc2l0eSBmb3IgY2xpbmljYWwgcHN5Y2hvbG9neSIgYW5kIHNwZWNpZmljIHBvc3RzIGhlbHAgdGFpbG9yIHJlc3BvbnNlcy5JbiBzaG9ydCwgSSBlbnZpc2lvbmVkIHBvc3RzIHdoZXJlIHRoZSB1bmRlcmx5aW5nIHRoZW1lIGlzICJpIHdhbnQgdG8gZG8gYSBzcGVjaWZpYyB0aGluZywgaGVscCBtZSB0byBsZWFybiB0byBkbyB0aGUgdGhpbmcgaW4gdGhlIGJlc3Qgd2F5IHBvc3NpYmxlLiJXaGF0IEkgZGlkbiB3YW50LCBhbmQgd2hhdCBjYW1lIHVwIGEgZmV3IHRpbWVzIHdoZW4gSSB3YXMgc3RpbGwgYW4gYWN0aXZlIG1vZCwgd2FzIHBlb3BsZSBwb3N0aW5nLCB1bnByb21wdGVkIGFzIGEgc3VibWlzc2lvbiByYXRoZXIgdGhhbiBhIGNvbW1lbnQsICJoZXJlIGEgZ3VpZGUgdG8gZG8gWC4iIFRoYXQgc29ydCBvZiBwb3N0IG11ZGRpZXMgdGhlIHdhdGVycyBhbmQgZW5kcyB1cCBsZWF2aW5nIElXVEwgYXMgYSBkdW1waW5nIGdyb3VuZCBmb3IgcGVvcGxlIHRvIHBvc3QgcmFuZG9tIGFuZCBpbmFuZSB0aGluZ3MuQWxsIHRoYXQgc2FpZCwgdGhpcyByZWFsbHkgaXMgeW91ciBzdWJyZWRkaXQgbm93LiBJIGhhdmVuIGFjdGl2ZWx5IHVzZWQgdGhpcyBhY2NvdW50IGluIHNvbWUgdGltZSwgb25seSBsb2dnaW5nIGluIGludGVybWl0dGVudGx5LiAKV29tZW4gYXJlIGJlaW5nIGluY3JlYXNpbmdseSBhdHRyYWN0ZWQgdG8gdGhlIGV4Y2l0ZW1lbnQgb2Ygb25saW5lIHBva2VyLiBNYW55IHByb2Zlc3Npb25hbCB3b21lbiBub3cgc2hvcCBleHRlbnNpdmVseSBvbmxpbmUgYW5kIGl0J3MgbmF0dXJhbCB0aGF0IHRoZXkgc2hvdWxkIGV4cGxvcmUgb3RoZXIgd2F5cyBvZiBoYXZpbmcgZnVuIGFuZCBzcGVuZGluZyB0aGVpciBtb25leSBvbmxpbmUuIE9uZSBpbiBzaXggbmV3IHBsYXllcnMgam9pbmluZyBWaWN0b3IgQ2hhbmRsZXIgUG9rZXIgaXMgZmVtYWxlICAgdXAgZnJvbSB2aXJ0dWFsbHkgemVybyBqdXN0IDIgeWVhcnMgYWdvLiAKTmFzdCdzIGJ1aWxkaW5ncyBldmVuIHByZWNlZGVkIHRoZSBpbnZlbnRpb24gb2YgdGhlIHdvcmQgInNreXNjcmFwZXIiLCB3aGljaCB3b3VsZCBhcHBlYXIgaW4gaGlzIG93biBIYXJwZXIncyBXZWVrbHkgaW4gMTg5My4KQWNjb3JkaW5nIHRvIEJvbHRvbiwgQ2hpbmEgd2FzIGFuIGVzcGVjaWFsbHkgZ29vZCBwbGFjZSB0byBzdHVkeSB3aGF0IGluZmx1ZW5jZXMgcGVvcGxlIGhlYWx0aCBkZWNpc2lvbnMsIGJlY2F1c2UgV2VzdGVybiBhbmQgdHJhZGl0aW9uYWwgQ2hpbmVzZSBtZWRpY2luZSBvcGVyYXRlIGFsb25nc2lkZSBlYWNoIG90aGVyIHRoZXJlLCBhbmQgYm90aCBmb3JtcyBvZiBtZWRpY2luZSBhcmUgcmVzcGVjdGVkLiAKTWFuZGVtbG92ZXMgIDI4IHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvClJlcHJlc2VudGF0aXZlIGhlcmUgb2YgY291cnNlIHdhcyBGcmFuY2lzIFNjb3R0IEtleSwgd2hvIHR1cm5lZCBoaXMgZXhwZXJpZW5jZSBpbnRvIGEgbmF0aW9uYWwgd2l0bmVzc2luZywgcHJlc2VudGluZyBpdCBpbiBhIHBvZW0gbGF0ZXIgdG8gdG8gbXVzaWMgdGhhdCB3b3VsZCBiZWNvbWUgdGhlIG5hdGlvbmFsIGFudGhlbS4gCk5laWwgU3RyYXVzcyBXaWtpcGVkaWEuIERpZSBQZXJmZWt0ZSBNYXNjaGUgUGRmIE1lcmdlciBEaWUgUGVyZmVrdGUgTWFzY2hlIFBkZiBUbyBFeGNlbCBKb3VybmFsaXN0IHVuZCBBdXRvciAuIApUViBUZXhhcyBIb2xkZW0gYWxzbyBoYXMgYSB2ZXJ5IHBvd2VyZnVsIGFkZGljdGl2ZW5lc3MgYWJvdXQgaXQuIFZlcnkgcXVpY2tseSB5b3Ugd2lsbCBzdGFydCB0byBsaWtlIHNvbWUgcGxheWVycyBtb3JlIHRoYW4gb3RoZXJzLCBpbiBzb21lIGNhc2VzIHBlb3BsZSB3aWxsIGJlY29tZSBmYW5zIG9mIGNlcnRhaW4gcGxheWVycyBhbmQgZm9sbG93IHRoZWlyIHByb2dyZXNzLiBJZiB5b3Ugc3RhcnQgd2F0Y2hpbmcgZWFybHkgb24gaW4gYSB0b3VybmFtZW50LCBwb2tlciBoYXMgdGhlIGFiaWxpdHkgdG8gaG9sZCB0aGUgYXR0ZW50aW9uIGluIHN1Y2ggYSB3YXkgdGhhdCB5b3UgbmVlZCB0byBzdGljayB3aXRoIGl0IHVudGlsIHRoZSBlbmQgdG8gc2VlIHdobyB3aW5zLi4gCldoYXQgdGhlIGZpbG0gc2tpcnRzIGFyb3VuZCBpcyB0aGUgZmFjdCB0aGF0LCBmb3IgbW9zdCB3b21lbiwgYmVpbmcgYWJsZSB0byBoZWFyIHRoZSBpbm5lciB0aG91Z2h0cyBvZiBtZW4gICBvciwgZm9yIHRob3NlIG9mIHRoZSBOb3RBbGxNZW4gY29udGluZ2VudCwgdGhpcyBmaWxtJ3MgbWVuIGluIHBhcnRpY3VsYXIgICB3b3VsZCBiZSBhbiB1bnN1cnByaXNpbmdseSBsZXNzIHdlbGNvbWUgZ2lmdCwgbmV2ZXIgbWluZCBvbmUgbGlrZWx5IHRvIHNwdXIgc29tZSBsaWZlIGFsdGVyaW5nIGxldmVsIG9mIGluc3BpcmVkIHBlcnNvbmFsIGdyb3d0aCBhbmQgc2VsZiByZWZsZWN0aW9uLi4gCkNhbm8gaGFzIGZpcmVkIGJhc2ViYWxsIG1vc3QgZmFtb3VzIHN1cGVyIGFnZW50LCBTY290dCBCb3JhcywgYW5kIGlzIHNldCBmb3IgYSBodW1vbmdvdXMgcGF5ZGF5IChoZSBpbiB0aGUgbGFzdCB5ZWFyIG9mIGEgc2l4IHllYXIgY29udHJhY3QpLiJJIGhhdmUgdG8gYWdyZWUgd2l0aCBTa2VldFJhZyBoZXJlLiBJIHRoaW5rIGJlaW5nIHRvbGQgdGhhdCBkb25raW5nIGNhbiBiZSBhIHZlcnkgc3Ryb25nIHN0cmF0ZWd5IGFzIGxvbmcgYXMgaXQgaXMgYmFsYW5jZWQgc2hvdWxkIGJlIGNvbnZpbmNpbmcgZW5vdWdoIGZvciB5b3UgdG8gc3R1ZHkgYW5kIGZpZ3VyZSBpdCBvdXQgb24geW91ciBvd24uIApTdGFmZiBIZWFsdGggU3VwcG9ydApXZW5uc3QgZGEgd2llZGVyIHdhcyBhdWZiYXVlbiB3aWxsc3QsIGdlaHQgZGFzIGZhc3QgbnVyIG5vY2ggaW4genVzYW1tZW5hcmJlaXQgbWl0IEFzc2FkLiBVbmQgZGVyIGlzdCB1bmQgYmxlaWJ0IGVpbiBkcmVja2lnZXIgRGlrdGF0b3IuIEZyIGRpZSBrdXJkaXNjaCBrb250cm9sbGllcnRlIFpvbmUgYmVzdGVodCBoYWx0IGF1Y2gga2F1bSBIb2ZmbnVuZy4gCkJlZm9yZSB3ZSBrbmV3IGl0LCB3ZSBoYWQgZHJhaW5lZCBvdXIgY2FwaXRhbCByZXNlcnZlcyBhbmQgaGFkIHRvIHNjcmFwZSBvdXIgd2F5IGJhY2sgb3V0IG9mIGl0Li4gCkkgbGV0IHRoZSBzZWxsZXIga25vdyB0aGF0IGl0IHdvdWxkIGhhdmUgdG8gYmUgZml4ZWQgZXhwZWN0aW5nIG1heWJlIHdlIHdvdWxkIGhhdmUgdG8gc3BsaXQgdGhlIGNvc3QuIEhlIGxldCBtZSBrbm93IGl0IHdhcyBhbHJlYWR5IG9uIG9yZGVyIGFuZCB3YXMgZ29pbmcgdG8gYmUgaW5zdGFsbGVkIHRoZSBmb2xsb3dpbmcgd2Vlay4gCiJUaGlzIGlzIG15IGZpcnN0IEZpdGJpdCBhbmQgZm9yIHNpeCB3aG9sZSBkYXlzIGFuZCBuaWdodHMgSSd2ZSBiZWVuIHZlcnkgaW1wcmVzc2VkLiBJIGdvdCBpdCBtYWlubHkgZm9yIHB1bHNlIGFuZCBzbGVlcCBpc3N1ZXMuIFNvbWVvbmUgd3JvdGUgaXQgaXMgb2ZmIDIwIGJwbSBidXQgb3RoZXJzIHNheSB0aGV5IHRlc3RlZCBpdCBhZ2FpbnN0IGRldmljZXMgYW5kIGl0IGlzIHByZXR0eSBzcG90IG9uLiAKU3VuIEFyY2hpdmVzIEplZmYgSGFuZXkgcmVmbGVjdHMgb24gdGhlIG1vc3QgbWVtb3JhYmxlIGhpZ2ggamlua3MsIGhhcHBlbmluZyBhbmQgc2NhbmRhbHMgb2YgdGhlIHBhc3QgeWVhciAoMTIgMjYgMjAwNykgSmVmZiBIYW5leSBjaHJvbmljbGVzIHRoZSBiZXR0aW5nIHdvcmxkIGluIDIwMDYsIGZyb20gZGlzYXBwZWFyaW5nIGdhbWJsZXJzIHRvIHRoZSBjbG9zaW5nIG9mIHRoZSBTdGFyZHVzdCAoMTIgMjYgMjAwNikKVGhleSBhbHNvIHZpc2l0ZWQgTW9udGV2aWRlbyBpbiBVcnVndWF5LCBUaXRvIGluIEVjdWFkb3IsIGFuZCBCb2dvdGEgaW4gQ29sb21iaWEuIE9uIHRoZSB3YXkgYmFjayB0byBIb2xseXdvb2QsIHRoZXkgc3RvcHBlZCBpbiBOaWNhcmFndWEsIEVsIFNhbHZhZG9yLCBIb25kdXJhcywgR3VhdGVtYWxhIGFuZCBNZXhpY28gICB0aGVzZSB2aXNpdHMgd291bGQgZ28gb24gdG8gaW5zcGlyZSB0aGUgc2V2ZW50aCBEaXNuZXkgQ2xhc3NpYyBUaGUgVGhyZWUgQ2FiYWxsZXJvcy4KIlRoZSB3ZWF0aGVyIGNlcnRhaW5seSBhZmZlY3RlZCB0dXJub3V0IGZvciBGcmlkYXkgYmFzZWQgb24gdGhlIHRpbWluZyBvZiB3aGVuIHRoZSBzbm93IGZlbGwsIiBzYWlkIFBoaWwgQ2FzdGVsbGluaSwgUmVkcyBjaGllZiBvcGVyYXRpbmcgb2ZmaWNlci4gIkJ1dCB3ZSB3ZXJlIHBsZWFzZWQgd2l0aCB0aGUgY3Jvd2Qgb2Ygb3ZlciAxMCwwMDAgb24gU2F0dXJkYXkgYW5kIEkgdGhpbmsgZXZlcnlvbmUgd2hvIHZlbnR1cmVkIG91dCBoYWQgYSBncmVhdCBleHBlcmllbmNlIGFuZCBnb3QgdG8gY29ubmVjdCB3aXRoIHRoZWlyIGZhdm9yaXRlIHBsYXllcnMuIi4gCkFzIHRoZXNlIGFyZSB0aGUgb3JnYW5pemF0aW9uIGZpcnN0IGZvcmVjYXN0cyBpbiBhbG1vc3QgZm91ciBtb250aHMsIGl0IHBhcnRseSBwbGF5aW5nIGNhdGNoIHVwIHdpdGggZGV2ZWxvcG1lbnRzIHNpbmNlIHRoZW4uIEluIHRoYXQgcGVyaW9kLCBsaXR0bGUgaGFzIGdvbmUgcmlnaHQgZm9yIHRoZSB3b3JsZCBiaWdnZXN0IGVjb25vbWllczogV2Vha25lc3MgaW4gdGhlIGV1cm8gYXJlYSBhbmQgQ2hpbmEgYXJlIHByb3ZpbmcgbW9yZSBwZXJzaXN0ZW50LCB0cmFkZSBncm93dGggaGFzIHNsb3dlZCBzaGFycGx5IGFuZCB1bmNlcnRhaW50eSBvdmVyIEJyZXhpdCBoYXMgY29udGludWVkLi4gCk1hbmNobWFsIGlzdCBhdWNoIHNjaG9uIGRhcyBBdWZsZWdlbiBkZXIgd2FybWVuIEhhbmQgb2huZSBncm9lIEJld2VndW5nZW4genV2aWVsICAgdW5kIG1hbmNoZSBGcmF1ZW4gbWdlbiBlcy4gCk51bWJlciAyIHdlcmUgdGhlc2Uga2luZCBvZiB0cnVja3MsIHRoZSBndXlzIGRyaXZpbmcgYXJlIHVzdWFsbHkgY29uc3RydWN0aW9uIHdvcmtlcnMgd2hvIGp1c3Qgd2FudCB0byBnbyBob21lLCBib3NzIHNlbnQgdGhlbSB0byB0aGUgZHVtcCBhbmQgdGhleSB0aHJldyBpdCBhbGwgaW4gdGhlIGJhY2sgaGFwaGF6YXJkbHkgYW5kIHVzdWFsbHkgZG9uJ3QgaGF2ZSB0aGUgY2xhc3MgYyBsaWNlbnNlIHRvIGRyaXZlIGEgbGFyZ2VyIHRydWNrLiAKVGhleSBkb24gYXV0b21hdGljYWxseSBicmluZyBjb21tdW5pdHksIGFuZCBoZWxsLCBtb3N0IGJpZyBjb3Jwb3JhdGUgaW50ZXJlc3RzIHdpbGwgYmUgbW9zdGx5IGF1dG9tYXRlZCBpbiBhIGNvdXBsZSBkZWNhZGVzLCBzbyB3aXRoIHBlb3BsZSBub3QgZXZlbiB3b3JraW5nIHRoZXJlIEkgZG9uIHNlZSBob3cgdGhleSBjb3VsZCBwb3NzaWJseSBiZSBhIGZhY3Rvci4uIApJdCBhY3R1YWxseSBvcGVuZWQgdXAgdGhlIGdhbWUgYSBiaXQgc2luY2UgZXZlcnlvbmUgd2FzIHBsYXlpbmcgdmVyeSBuaXR0eS9wYXNzaXZlLiBBdCB0aGlzIHBvaW50IGZ1biBwbGF5ZXIgaGFzIGdvbmUgdGhyb3VnaCBhYm91dCA0IDUgZGVhbGVyIHN3aXRjaGVzIHdpdGhvdXQgYW55IGNvbmNlcm5zLiAKU2NpZW50aXN0IGVzdGltYXRlLCBhdCBjdXJyZW50IHRlY2hub2xvZ2llcywgdGhhdCB0aGUgd29ybGQgY2FuIHN1c3RhaW4gYXJvdW5kIDggdG8gMjAgYmlsbGlvbiBwZW9wbGUgKHllcyBJIGtub3cgdGhpcyBpcyBhIGh1Z2UgZ2FwKS4gCk92ZXJ2aWV3IGZvciBmcmlja2VuClRhYmxlIDEgKGxpbmVkIGFib3ZlIG9uIERyLiBTZWFtYW47cyBuYW1lKSBkZW1vbnN0cmF0ZXMgd2hhdCBoYXBwZW5zIGlmIHlvdSBsb29rIGF0IHRoZSBtYXRoIHBlcmNlbnRhZ2VzIGluIHRoZSBmYXNoaW9uIG1vc3QgcGVvcGxlIHVuZGVyc3RhbmQuClByaW1hcnkgZW5kcG9pbnRzIHdlcmUgdGhlIGNoYW5nZSBpbiBBUlMgc2NvcmUgYmV0d2VlbiBiYXNlbGluZSBhbmQgdGhlIGVuZCBvZiB0aGUgZmlyc3QgcGhhc2UgKG1hc2tlZCBwYWVkaWF0cmljaWFuKSBhbmQgYmV0d2VlbiB0aGUgZW5kIG9mIHRoZSBmaXJzdCBwaGFzZSBhbmQgdGhlIHNlY29uZCBwaGFzZSAoZG91YmxlIGJsaW5kKSwgYW5kIHRoZSBhYmJyZXZpYXRlZCBDb25uZXJzIHNjYWxlIChBQ1MpIHNjb3JlICh1bm1hc2tlZCkgYmV0d2VlbiB0aGUgc2FtZSB0aW1lcG9pbnRzLiAKUmVtZW1iZXIgdGhlIGNhc2Ugb2YgU291dGggQWZyaWNhbiBydW5uZXIgQ2FzdGVyIFNlbWVueWE/IGdlbmRlciB3YXMgcXVlc3Rpb25lZCBieSB0aGUgSW50ZXJuYXRpb25hbCBBc3NvY2lhdGlvbiBvZiBBdGhsZXRpYyBGZWRlcmF0aW9ucyBhZnRlciBzaGUgY29tcGV0ZWQgaW4gQmVybGluIGxhc3Qgc3VtbWVyIGZvciBXb3JsZCBBdGhsZXRpY3MgQ2hhbXBpb25zaGlwcy4gUXVlc3Rpb24gZm9yIHRoZSBsYXN0IHRlbiBtb250aHMgd2FzIHdoZXRoZXIgb3Igbm90IFNlbWVueWEgd2FzIGZlbWFsZSBvciBub3QuIApTdGlsbCBkZW5pZXMuIE1USXMgc2F5IGZ1Y2sgdGhpcywgYW5kIGZhbGwgaGltIG91dCB3aXRoIGRvcm0gY2hpZWYgYW5kIHR3byB3aW5nbWVuLiBXZSBnZXQgc21va2VkIGZvciBhYm91dCB0ZW4gbWludXRlcywgYXMgcmV0cmlidXRpb24gZm9yIGxldHRpbmcgaGltIHNoaXQgaGltc2VsZiwgYmVmb3JlIGRvcm0gY2hpZWYgYW5kIGEgV2luZ21hbiBjb21lIGNhcmVlbmluZyBkb3duIHRoZSBzdGFpcnMsIHRhbGtpbmcgYWJvdXQgQWlybWFuIFNudWZmeSBzdHVmZmVkIGhpcyBwYW50cyBpbiB0aGUgdG9pbGV0IGFuZCB0aGUgYnJvdGhlciBmbGlnaHQgZG9ybSBpcyBmbG9vZGluZy4gClNvIGluIG9yZGVyIHRvIG1ha2UgYmVsaWV2ZSB3ZSBzaG91bGQgaGF2ZSBjb21wbGV0ZSBrbm93bGVkZ2Ugb24gb3VyIG1lc3NhZ2Ugd2hpY2ggd2UgYXJlIGdvaW5nIHRvIGRlbGl2ZXIgdG8gb3RoZXJzLi4gCkJ1dCBvdGhlciBwb3NzaWJsZSBkZXNpZ25lcnMgYXJlIEphbmUgWWVoIGFuZCBWaW5rYSBEZXNpZ24gaW4gQXVja2xhbmQuIExhaXR5IGFsc28gbG92ZXMgaGVyIEF1c3NpZSBkZXNpZ25lcnMsIHNvIGNlbGVicml0eSBkZXNpZ25lciBTdGV2ZW4gS2hhbGlsICAgd2hvIGRlc2lnbmVkIFpvZSBNYXJzaGFsbCdzIHdlZGRpbmcgZHJlc3MgYW5kIGtub3dzIGhvdyB0byBhZGQgdGhlIFdPVyBmYWN0b3IgICBpcyBhIHN0cm9uZyBwb3NzaWJpbGl0eS4KT24gcydlbnRlbmQgc3VyIGxlIHByaXggZCd1biBzaWduZSBkZSB0dGUuIExhIGZlbW1lIHMnb3JpZW50ZSB2ZXJzIHVuIGltbWV1YmxlIGR1IHF1YXJ0aWVyLiAKVGhlIGV2ZW50IGhhcyByYWlzZWQgbW9yZSB0aGFuICQxLDAwMCwwMDAuMDAgZm9yIHRoZSBBcnRocml0aXMgRm91bmRhdGlvbiBpbiBpdHMgdHdvIHllYXIgaGlzdG9yeUJvb2tpbmdzIGZvciBIZWFsaW5nIEhhbmRzIGZvciBBcnRocml0aXMgYXJlIHVuZGVyd2F5IG5vdyB0aHJvdWdoIFNlcHRlbWJlciAxOCwgMjAxM0FsbCBIZWFsaW5nIEhhbmRzIGZvciBBcnRocml0aXMgbWFzc2FnZXMgYW5kIGZhY2lhbHMgb24gU2VwdGVtYmVyIDE4LCAyMDEzIHdpbGwgYmUgb2ZmZXJlZCBhdCBNYXNzYWdlIEVudnkgU3BhJ3MgaW50cm9kdWN0b3J5IHByaWNlcy4gClNraWxsLCBhIHBhcnQgb2YgdGhlIGdhbWUgc29tZSBuZXZlciB3aWxsIG1hc3Rlci4uIAo1LiBJdCBkZWJ1dCBhbGJ1bSBib2FzdGVkIGEgYnVuY2ggb2Ygc3VwZXIgdGlnaHQgc2luZ2xlcyBzdWNoIGFzIFBsYXRvb24sIFRpbWUsIFRoaXMgSGVhdCBhbmQgSnVsaWEuIE5vdyB0aGUgZ3JvdXAgaXMgYmFjayB3aXRoIEZvciBFdmVyLiAKVGhlIGZpcnN0IHRpbWUgSSB3YXRjaGVkIHRoZSBmaW5hbGUgSSB3YXMgYW4gaW5jb25zb2xhYmxlIG1lc3MgdGhlIHJlc3Qgb2YgdGhlIGRheS4gVGhlIGZyaWVuZCB3aG8gaW50cm9kdWNlZCBtZSB0byB0aGUgc2hvdyBoYWQgdG9sZCBtZSB0aGF0IHRoZSBmaW5hbGUgd2FzICJiZWF1dGlmdWwiIHdoZW4gSSBmaXJzdCBzdGFydGVkIHdhdGNoaW5nIGl0LiBJIGhhZCBubyBpZGVhIHdoYXQgaGUgbWVhbnQgYnkgaXQgYW5kIGtpbmQgb2YgZm9yZ290IGFib3V0IGl0IHRoZSBtb3JlIEkgd2F0Y2hlZCBvZiB0aGUgc2hvdy4gSSB3YXMgbm90IGF0IGFsbCBwcmVwYXJlZCBmb3IgaXQgd2hlbiBpdCBmaW5hbGx5IGhhcHBlbmVkLgpTcGFjZXkgaXMgc3RpbGwgYSBkZWVwbHkgdHJvdWJsZWQgaW5kaXZpZHVhbCB3aG8gaW1wb3NlZCBoaW1zZWxmIG9uIG90aGVycyBpbiBhIHRvdGFsbHkgdW5hY2NlcHRhYmxlIHdheSwgaGUgYWxzbyBtYWRlIGZhbnRhc3RpYyBhcnQuIFlvdSBjYW4gc3RpbGwgY29uZGVtbiBoaW0sIGFuZCBzdGlsbCBub3QgZW5qb3kgaGlzIGFydCB0aGUgd2F5IHlvdSB1c2VkIHRvICAgYnV0IEkgd2FzIHNwZWNpZmljYWxseSBjb21wbGFpbmluZyBhYm91dCB0aGUgdG90YWwgcmVqZWN0aW9uIGNyb3dkLCB3aG8gaWYgdGhleSBub3Qgc2ltcGx5IHBydWRpc2gsIGp1c3QgbG92ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gaGF2ZSB0aGF0IGZvaWwgdG8gcHJvdmUgdG8gdGhlbXNlbHZlcyBhbmQgb3RoZXJzIGhvdyBtb3JhbCB0aGV5IGFyZS4uIApUaGUgZmlyc3Qgc3RlcCB0byBpZGVudGlmeWluZyBhdXRoZW50aWMgY2FzaW5vIHBva2VyIGNoaXBzIGlzIHRvIGtub3cgYW5kIHVuZGVyc3RhbmQgYXMgbXVjaCBhcyB5b3UgcG9zc2libHkgY2FuIGFib3V0IHRoZSBjaGlwcywgYW5kIHRoZSBjYXNpbm8gdGhhdCB5b3UgaGF2ZSB0YWtlbiBhbiBpbnRlcmVzdCBpbi4gV2hpbGUgaXQgaXMgdHJ1ZSB0aGF0IG1hbnkgY2FzaW5vcyBhcmUgb3duZWQgYnkgbGFyZ2Ugc2NhbGUgY29tcGFuaWVzLCBlYWNoIG9uZSBoYXMgYSBzZXQgb2YgY2hpcHMgdGhhdCBpcyBzcGVjaWZpYyBhbmQgdW5pcXVlIHRvIHRoZW0uIFRoaXMgaXMgYmFzaWNhbGx5IGR1ZSB0byB0aGUgZmFjdCB0aGF0IHRoZXJlIGlzIGEgY2VydGFpbiBhbW91bnQgb2YgZnVuZGluZyBwZXIgY2FzaW5vIHRoYXQgYmFja3MgZWFjaCBjaGlwIHRoYXQgaXMgcGFydCBvZiB0aGF0IGNhc2luby4gCk92ZXJ2aWV3IGZvciBJdHNSZWFsbHlKdXN0QUhvcnNlClRoZSBhY3RvcnMgY291bGQgYmUgdmVyeSBnb29kLCBidXQgdGhleSBjb3VsZCBiZSB2ZXJ5IGJhZC4gCldpdGggbWFueSBXb3JsZCBXYXIgSUkgdmV0cyBjYXJyeWluZyBzY2FycyBmcm9tIHRoZSB3YXIgYXQgYSB0aW1lIGl0IHdhc24gdGFsa2VkIGFib3V0IFRoZSBUd2lsaWdodCBab25lIHRvbGQgc3RvcmllcyBvZiBkZWFkIHNvbGRpZXJzIGN1cnNlZCB0byByZWxpdmUgdGhlIGhvcnJvcnMgb2Ygd2FyIGluIGVuZGxlc3MgbG9vcHMgKEkga25vdyBJIGRlY3JpZWQgb3VyIHRlbmRlbmN5IHRvIHByb2plY3QgUFRTRCBpbnRvIHRoaXMgdGltZSBwZXJpb2QgZWFybGllciwgYnV0IHlvdSBkb24gbmVlZCBhIEJBIGluIEVuZ2xpc2ggdG8gc2VlIGhvdyBzdG9yaWVzIGxpa2UgRGVhdGhzIEhlYWQgUmV2aXNpdGVkLCBUaGUgQXJyaXZhbCkgYW5kIGVzcGVjaWFsbHkgQSBRdWFsaXR5IG9mIE1lcmN5LCB3ZXJlIHdyaXR0ZW4gZm9yIGEgbmF0aW9uIHdpdGggbWVtb3JpZXMgb2YgdGhlIHdhcikuIApZb3UgYXJlIGZhbWlseSB0byB0aGUgZ3Jvb20uIFlvdSBhbmQgeW91ciBwYXJ0bmVyIG9mIDQgeWVhcnMgc2l0IGluIHRoZSBmaXJzdCBjb3VwbGUgb2Ygcm93cyB3aGVyZSB0aGUgZmFtaWx5IG9mIHRoZSBncm9vbSBzaXRzLiBZb3VyIEdGIG1vdGhlciBzaXRzIHdoZXJldmVyIHNoZSB3YW50cyBvbiB0aGUgYnJpZGVzIHNpZGUuIEVuZCBvZiBzdG9yeS4gVGVsbCB5b3VyIGJyb3RoZXIgdG8gc3RyYWlnaHRlbiBvdXQgYnJpZGV6aWxsYSBhbmQgZ2V0IG92ZXIgaGVyIGplYWxvdXN5LgpTaGUgcGxlYWRzIHdpdGggaGltIG5vdCB0byBhY2NlcHQgQWxiZXJ0J3MgZHVlbCwgYW5kIGhlIHJlYWxpemVzIGhvdyBoZSBoYWQgbm8gcXVhbG1zIGFib3V0IGtpbGxpbmcgQWxiZXJ0IGluIGl0LiAKIktub3cgdGhlIGVuZW15IGFuZCBrbm93IHlvdXJzZWxmIiBhZHZpc2VkIFN1biBUenUsIHRoZSBhbmNpZW50IHdhcnJpb3IuIE91ciByZXNlYXJjaCBjb25maXJtcyB0aGF0IHNvbWUgcGVvcGxlIGV4Y2VsIGluIG91dHNtYXJ0aW5nIHRoZSBjb21wZXRpdGlvbiAgIGFuZCB0aGV5IGNhbiBiZSBzcG90dGVkIGluIGFkdmFuY2UuIAo+IEFuZCBJIHJlYWxseSBkb24gc2VlIGhvdyBpdCBzdXBwb3NlZCB0byByZWxhdGUgdG8gRG90YSwgZXZlbiBvbiB0aGUgZmlnIGxlYWYgbGV2ZWwgb2YgImxldCB0YWxrIGFib3V0IGFuIGFzcGVjdCBvZiB0aGlzIG90aGVyIGdhbWUsIGFuZCBpdCBEb3RhIHJlbGF0ZWQgYmVjYXVzZSB3ZSB2aWV3aW5nIGl0IGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIERvdGEgZmFucyIgdGhhdCBtYW55IG90aGVyIHRocmVhZHMgZG8uIEl0IGp1c3QgYW5vdGhlciBjb21wYW55IGhpcmluZyBhbiBleGVjdXRpdmUgdG8gc2hvcmUgdXAgYW4gYXJlYSB3aGVyZSB0aGV5IGhhdmUgcmlzay4KIk1vbGx5J3MgZ2FtZSIgb3V0IHRvZGF5LiAKRnVydGhlcm1vcmUgdGhlc2Ugc3Vic3RhbmNlcyBhcmUgY2hlbWljYWxseSBhZGRpY3RpdmUgYW5kIGEgY29udHJvbGxlZCBzdWJzdGFuY2UsIHNvIGFzIHRoZSBwZXJzb24gY29udGludWVzIHRvIHRha2UgdGhlbSBhbmQgY29udmluY2UgdGhlbXNlbHZlcyB0aGF0IHRoZXkgZmVlbCBsZXNzIGFueGlldHksIHRoZWlyIGFjdHVhbGx5IGFsbG93aW5nIHRoZWlyIGJvZHkgdG8gYmVjb21lIGRlcGVuZGVudCBvbiB0aGUgbWVkaWNhdGlvbiwgaXQgaXMgbm90IG5vciBpcyBpdCBwcmVzY3JpYmVkIGFzIGFuIGFudGkgYW54aWV0eSwgaXQgZG9lcyBub3QgZnVuY3Rpb24gYXMgc3VjaC4gCkdldHRpbmcgZGlhZ25vc2VkIHdhcyBhIG11bHRpIHllYXIgc3RydWdnbGUuIFRoZXkgcHJldHR5IG11Y2ggaGFkIHRvIHJ1bGUgb3V0IGV2ZXJ5dGhpbmcgZWxzZS4gCkJ1dCB0aGUgbmlnZ2FyZGxpbmVzcyBzb29uIGdldHMgdG8gYmUgdG9vIG11Y2gsIGFuZCBNeXJpYW0sIGZlYXJpbmcgdGhlIGluZmx1ZW5jZSBvbiBoZXIga2lkcywgaXNzdWVzIGFuIGVkaWN0OiAiU2hlIHJlZnVzZXMgdG8gbGV0IExvdWlzZSBnaXZlIHRoZSBjaGlsZHJlbiBmb29kIHRoYXQgaXMgcGFzdCBpdHMgZXhwaXJhdGlvbiBkYXRlLiIuIApJZiB5b3UgdGhlIGVtcGxveWVlLCBpdHMgYWx3YXlzIHRoZSBndXkvZ2lybCBvdmVyIHRoZXJlLCB0aGUgZ3V5L2dpcmwgZXZlcnlvbmUgZG9lc24gbGlrZSBvciBhZ3JlZWQgdG8gYmxhbWUuIApFdmVyeW9uZSBpcyBidXN5IHRoZXNlIGRheXMsIGFuZCBzbG90cyBwcmVzZW50IGFuIGlkZWFsIG9wcG9ydHVuaXR5IHRvIHJlbGF4LCBoYXZlIGEgZnVuIGdhbWUgYW5kIHBvc3NpYmx5IHdpbiBzb21lIHByaXplcywgd2l0aG91dCBoYXZpbmcgdG8gZ2l2ZSB5b3VyIHVuZGl2aWRlZCBhdHRlbnRpb24gdG8gdGhlIHNjcmVlbi4gU2xvdCBnYW1lcyBldmVuIGZpdCBpbnRvIGEgYnVzeSB3b3JraW5nIGRheSwgdGFraW5nIHRoZSBib3JlZG9tIG91dCBvZiBsb25nIGNvbW11dGVzLi4gCllvdSBzaG91bGQgY2hlY2sgd2l0aCBhbiBvcmFsIHN1cmdlb24gdG8gYmUgc3VyZSwgYnV0IGxvY2FsIGlzIGFsbW9zdCBjZXJ0YWlubHkgYW4gb3B0aW9uLiBJIGhhZCB0byBnZXQgbXkgYm90dG9tIDIgdGFrZW4gb3V0IGFuZCBkaWQgaXQgdGhhdCB3YXkuIEkgc3RhcnRlZCBnZXR0aW5nIHNvbWUgYW54aWV0eSBieSB0aGUgZW5kIG9mIHRoZSBzZWNvbmQgb25lLCBidXQgaXQgd2FzIGFsc28gdGFraW5nIGEgbG90IGxvbmdlciBiZWNhdXNlIGl0IHdhcyBzaWRld2F5cy4KRmlyc3QgdGltZSwgaXQgd2FzIHRlcnJpZnlpbmcsIGFkbWl0cyBTdGFwbGVzLCB0YWxraW5nIHRvIFBvc3RtZWRpYSBvdmVyIHRoZSBwaG9uZSBmcm9tIExldGhicmlkZ2UsIEFsdGEuIFlvdSBnZXQgdXNlZCB0byBpdC4gT2YgY291cnNlLCBpZiBJIGhhZCB0byBzcGVhayB0byAzMDAgcGVvcGxlIGluIHBlcnNvbiwgdGhhdCBtaWdodCBiZSBraW5kIG9mIHNjYXJ5LCBidXQgeW91IGRvbiByZWFsbHkgZ3Jhc3AgaG93IG1hbnkgcGVvcGxlIHRoYXQgaXMgaW4gZnJvbnQgb2YgYSBjb21wdXRlci4gCkkgZG9uJ3Qga25vdyBhbnlvbmUgdGhhdCBoYXMgZ29uZSAiYm95IEkgcmVhbGx5CkJ1dCB0aGUgaGFyZGVzdCBwYXJ0IG9mIGFsbCB3YXMgZmluZGluZyBteSBvbGQgTyBsZXZlbCBjZXJ0aWZpY2F0ZXMuIApIb3cgbWFueSB0b3RhbHMgb2Ygc2V2ZW50ZWVuIGNhbiBiZSBtYWRlIGZyb20gdGhlIG51bWJlcnMgb24gYSBkZWNrIG9mIGNhcmRzIHdpdGggRmFjZSBDYXJkcyBoYXZpbmcgYSB2YWx1ZSBvZiAxMCBhbmQgQWNlcyBoYXZpbmcgYSB2YWx1ZSBvZiAxIG9yIDExPwpUcmFkaXRpb25hbCBpdGVtcyAoZm9yIGV4YW1wbGUsIGEgaGVhZCBvZiBsZXR0dWNlKSwgZ2VuZXJhbGx5IHJlcXVpcmUgbGVzcyBzdXBwb3J0IHRoYXQgbW9kZXJuIGVsZWN0cm9uaWMgaXRlbXMuLiAKTmVpdGhlciBTdGFsaW4gbm9yIEVpc2VuaG93ZXIgaGFkIGFueXRoaW5nIHRvIGdhaW4gZnJvbSBpdCBhbmQgaXQgd2FzIGFjdHVhbGx5IEtpbSBhbmQgUmhlZSB3aG8gZHJhZ2dlZCB0aGVtIGludG8gaXQgdGhlIGZvcm1lciB0aHJvdWdoIHBlcnN1YXNpb24sIGFuZCB0aGUgbGF0dGVyIHRocm91Z2ggc3R1YmJvcm5lc3MsIHNob3J0c2lnaHRlZG5lc3MsIGFuZCBhZ2dyZXNzaW9uLi4gClBlb3BsZSBhcmUgaGlnaGx5IHVzaW5nIHRoZW0uIEJldHRpbmcgZXhjaGFuZ2VzIGlzIGEgY29tcGxldGUgbmV3IGRldmVsb3BtZW50IGluIHRoZSByaXNrIG1hcmtldHM7IGl0IGhhcyBjaGFuZ2VkIHRoZSB0cmFkaXRpb25hbCBzcG9ydHMgYmV0dGluZyBhbmQgZ2FtYmxpbmcgaW5kdXN0cnkuIApTbyBub3cgMyBtb250aHMgbGF0ZXIsIEkgZ29pbmcgd2l0aCBoZXIgdG8gbXkgYmFuayB0byByZWZpbmFuY2UgdGhlIGxvYW4gYW5kIGdldCBoZXIgaW50byBhIG11Y2ggYmV0dGVyIGxvYW4gYmVmb3JlIHNoZSBnZXRzIHBpc3NlZCBhbmQgd2lwZXMgb3V0IGhlciBzYXZpbmdzIHRvIHBheSBpdCBvZmYgYmVjYXVzZSBzaGUgaGF0ZXMgaW50ZXJlc3QgcGF5bWVudHMgbGlrZSBubyBwZXJzb24gaXZlIGV2ZXIgbWV0LiAKTWFueSBvZiB5b3UgaGF2ZSByZWFkIHN1Y2Nlc3Mgc3RvcmllcyBvZiB0aG9zZSB3aG8gaGF2ZSBtYWRlIG1pbGxpb25zIGJ5IGludmVzdGluZywgYnV0IGZvciBlYWNoIHN1Y2Nlc3MsIG51bWVyb3VzIG90aGVycyBoYXZlIGZhaWxlZC4gT25lIG9mIHRoZSByZWFzb25zIHBlb3BsZSBmYWlsIGlzIHRoZXkgYmVjb21lIGdyZWVkeSB3aGVuIHRoZSBtYXJrZXQgaXMgb3ZlcnByaWNlZCBhbmQgZmVhcmZ1bCB3aGVuIHRoZSBtYXJrZXQgaXMgY29sbGFwc2luZy4gVG8gYmUgc3VjY2Vzc2Z1bCwgeW91IG11c3QgY2hlY2sgeW91ciBncmVlZCBhbmQgcmVhbGl6ZSB0aGF0IGZvcnR1bmVzIGNhbiBiZSBidWlsdCBvdmVybmlnaHQgKHdlbGwsIGFjdHVhbGx5LCBhIGZldyBsdWNreSBnYW1ibGVycyBjYW4gbWFrZSB0aGVtIG92ZXJuaWdodCBpZiB5b3Ugcm9sbCB0aGUgZGljZSBhbmQgYXJlIHdpbGxpbmcgdG8gWU9MTyB5b3VyIGxpZmUgc2F2aW5ncykuIEl0IHRha2VzIHllYXJzIG9mIGhhcmQgd29yayBhbmQgZWZmb3J0IHRvIGJlIHN1Y2Nlc3NmdWwgaW4gdGhlIGludmVzdG1lbnQgZ2FtZS4gWW91ciBnb2FsIGlzIHRvIHN1cnZpdmUgbG9uZyBlbm91Z2ggdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIHVwcyBhbmQgZG93bnMgb2YgbWFya2V0IGN5Y2xlcy4KVGhlcmUgaXMgZGVmaW5pdGVseSBhIGxlYXJuaW5nIGN1cnZlLCBidXQgdG90YWxseSB3b3J0aCBpdC4gCkkgZmVlbCBsaWtlIHRoZXkgYXJlIGEgbG90IGxlc3MgdHJvdWJsZXNvbWUgdGhhbiB0aGV5IHdlcmUgYXQgZmlyc3QuIApJZiB0aGUgZmlyc3QgdGhpZWYgaXMgY2F1Z2h0IGhlIGhhcyBkaXNwb3NlZCBvZiB0aGUgZXZpZGVuY2UgYWFkIHBvbGljZSBvZmZpY2lhbHMgYXJlIGhhbmRpY2FwcGVkIGluIHByb3NlY3V0aW5nLiAKU2luY2UgSSBkb24gaGF2ZSBhIGdvb2QgZGVjayBJIHJlZ2lzdGVyZWQgYW5kIGF1dG9yZXNpZ25lZCBpbiB0aGUgU2luZ2xldG9uIGV2ZW50LiA0MDBnIGZvciBndWFyYW50ZWVkIDEgcmFyZSArIDEgdW5jb21tb24gd2l0aCBiYXNpY2FsbHkgMCB0aW1lIGNvc3QuIEkgYWxzbyByZWNlaXZlZCBhIGxvdCBvZiBteXRoaWNzLCBkb3VibGUgcmFyZXMgYW5kIGRvdWJsZSBteXRoaWNzIGRyb3BzLiBJIHJlY2VpdmVkIGEgZGVjZW50IGNodW5rIG9mIHN0YXBsZXMgYW5kIHJhcmUgbGFuZHMsIHNvIEkgd2FzIGhhcHB5LgpLZWluZSBrb21tZXJ6aWVsbGUgTnV0enVuZy4gRGllc2VzIFdlcmsgZGFyZiBuaWNodCBmciBrb21tZXJ6aWVsbGUgWndlY2tlIHZlcndlbmRldCB3ZXJkZW4uCjEpIFNhYm9yZXMgZ291cm1ldCB0YWxlcyBjb21vIGxvcyBvZnJlY2lkb3MgcG9yIEplbGx5IEJlbGx5IHZpZW5lbiBlbiB1bmEgdmFyaWVkYWQgZGUgY29sb3JlcyBoYWNpZW5kbyBmYXZvcmVzIG1hcmF2aWxsb3NvcyBlbiBsYXMgYm9kYXMuIEVzIG11Y2hvIG1zIGZjaWwgaGFjZXIgY29pbmNpZGlyIGxvcyBjb2xvcmVzIGRlIGxhIGJvZGEgY29uIGplbGx5IGJlYW5zIHF1ZSBjb24gbG9zIHBvY29zIGNvbG9yZXMgZGlzcG9uaWJsZXMgZW4gYWxtZW5kcmFzIEpvcmRhbi4KVGhhdCdzIG5vdCBpdCBhdCBhbGwgcmVhbGx5LiAKSSBhbHNvIHJlcG9ydGVkIHRoYXQgdW5pdmVyc2l0eSBwb2xpY2Ugd2VyZSwgcmVwb3J0ZWRseSwgbGF6ZXJpbmcgRG9kdCBkYXlzIGJlZm9yZSB0aGUgcG9raW5nIHRoYXQgZW5kZWQgaW4gdGhlIHByb3Rlc3QuClBlb3BsZSBuZWVkIHRvIHN0b3AgbG9va2luZyBhdCB0aGUgcGhhcm1hY2V1dGljYWwgaW5kdXN0cnkgYXMgb25lIGNvaGVzaXZlIHVuaXQgd29ya2luZyB0b2dldGhlciB0byBzY3JldyBwZW9wbGUgb3ZlciAgIGl0IHJ1dGhsZXNzbHkgY29tcGV0aXRpdmUuIE1vc3Qgb2YgdGhlc2UgY29tcGFuaWVzIHdvdWxkIGJlIHRocmlsbGVkIHRvIGNvbWUgdXAgd2l0aCBhIGRpYWJldGVzIGN1cmUsIGFuZCBzZWxsIGl0IHRvIHlvdSBmb3IgdGhlIG1heGltdW0gcHJpY2UgYWxsb3dlZC4KQ291cnRlc3kgb2YgV29ybGQgU2VyaWVzIG9mIFBva2VyCkkgdG9sZCBoaW0gSSBjb3VsZCBvZmZlciAkMjA1ay4gCklmIHRoZSBhcHBsaWNhdGlvbiBpcyBhcHByb3ZlZCwgdGhlIFBJVFUsd2hpY2ggY3VycmVudGx5IGhhcyA4OTIgbWVtYmVycyx3b3VsZGhhdmVzb3ZlcmVpZ250eW92ZXIgdGhpc2xhbmRhbGxvd2luZyB0aGVtYW5vcHBvcnR1bml0eSwgdGhleSBtYWludGFpbiwgdG8gZnVydGhlciBkZXZlbG9wc2VsZiBzdWZmaWNpZW5jeS4gCkthaXRsaW4gaXMgZXh0cmVtZWx5IHN1cHBvcnRpdmUsIHNoZSB1bmRlcnN0YW5kcyB0aGF0IHdoZW4gaSBkZWNpZGUgdG8gd29yayBvbiBzb21ldGhpbmcgSSB3YW50IHRvIGJlIGdvb2QgYXQgaXQgYW5kIHRoYXQgdGFrZXMgdGltZS4gSSBoYXZlIG5ldmVyIGhlYXJkIGhlciBjb21wbGFpbiBhYm91dCBoYXZpbmcgdG8gc3BlbmQgZW50aXJlIGRheXMgcGxheWluZywgb3IgcmVjb3JkaW5nIHZpZGVvcywgb3IgeWVsbGluZyBCQVpBTSBpbiBoZXIgZ2VuZXJhbCB2aWNpbml0eS4gVGhleSBzdXBlciBoaWdoIHF1YWxpdHkgY29udGVudCBhbmQgdGhleSBhbHNvIHJlYWxseSBmdW4uClN1bmRheSwgTWFyY2ggMTAuIApHYXZlIG1lIHRoZSBCaWJsZSwgc2hlIGdhdmUgdGhlIGJhYnkgdG8gU2hpcmxleSBhbmQgc2hlIHRvbGQgdXMgc2hlIHdhcyBnb2luZyB0byBnbyB0byB0aGUgbW92aWVzIGFuZCB0aGF0IHNoZSB3b3VsZCBiZSBiYWNrIHNvb24uIGRheXMgbGF0ZXIsIHRoZWlyIG1vdGhlciBoYWRuIHJldHVybmVkLiBUaGUga2lkcyB3ZXJlIHN0aWxsIG9uIHRoZSBzb2ZhLCB3aXRoIG5vdGhpbmcgdG8gZWF0LlRoZSBzb2NpYWwgc2VydmljZXMgd2VyZSBhbGVydGVkLiAKV2UgYXJlIGVuZ2FnZWQgaW4gYSB3YXIgd2hpY2ggaGFzIHR3byBkaW1lbnNpb25zIHRvIGl0LiAKVGhlIGVxdWlwbWVudCBiZWluZyB1c2VkIG11c3QgYmUgY2hlY2tlZCBiZWZvcmUgYW5kIGFmdGVyIHVzZSBieSBwbGF5ZXJzIGFuZCBjb2FjaGVzIHRvIG1ha2Ugc3VyZSBpdCBpcyBzYWZlIHRvIHVzZSBmb3IgZXZlcnlvbmUuIApOb3QgYWxsIHRoZSBseXJpY3MsIGV2ZW4sIEkgZmVlbCBhcmUgYW55IG1vcmUgcG9zaXRpdmUuIApUaGUgb3duZXIgc291bmRzIGxpa2Ugb25lIG9mIG15IHByZXZpb3VzIGJvc3Nlcy4gR2xhZCB5b3UgbGVmdCwgdGhhdCBibG93cy4gQXQgbXkgam9iLCBmcm9tIHRoZSBtb3JuaW5nIG9mIGRheSAxIGl0IHdhcyAiSSBub3QgaGVyZSB0byBob2xkIHlvdXIgaGFuZCwgaXQgeW91ciBmdWNraW5nIGpvYiEiLgpBIHBybyB0ZWFtIHRhbGtpbmcgYWJvdXQgYSBtYXRjaCBvbiB0d2l0dGVyIGlzIG9uIHRoZSByZWxldmFuY3kgc2NhbGUgYW5kIGEgcHJvIHRlYW0gcHVibGlzaGluZyBoaWdobGlnaHRzIG9mIHRoZWlyIHZvaWNlIGNvbW1zIGFuZCBsaWZlIGxlYWRpbmcgdXAgdG8gdGhvc2UgbWF0Y2hlcyBpcyAxMDAlIHZlcnkgcmVsZXZhbnQgYXMgaXRzIGluc2lnaHQgdG8gaG93IGEgcHJvIGxlYWd1ZSB0ZWFtIHBsYXlzIGxlYWd1ZS4gClRoZXJlIGlzIGEgZ29vZCByZWFzb24gZm9yIHRoaXMhIFRoZXNlIGFyZSB0aGUgbW9zdCBjb21tb24gY29sb3JzIHdoZW4gaXQgY29tZXMgdG8gZGVub21pbmF0aW9ucy4gCk1yIFdpbGxpYW1zIHNhaWQgbWFueSBjbHVicyBoYWQgc2VlbiBhIGRlY3JlYXNlIGluIHByb2ZpdHMgZnJvbSBwb2tlciBtYWNoaW5lcywgYnV0IGl0IGhhZCBoaXQgTm9ydGggQWxidXJ5IGhhcmQgYW5kIGhhZCBsZWZ0IGEgJDkwLDAwMCBnYXAgaW4gdGhlIGJ1ZGdldCBhcyBvZiBTZXB0ZW1iZXIgMzAuIApJbiB0aGlzIHBvc2l0aW9uIEkgd291bGQgYmUgdGhpbmtpbmcgaGUgaGFzIGEgc2V0IG9yIGlzIHVzaW5nIGhpcyBwb3NpdGlvbiB0byBzY29vcCB0aGUgcG90IGFuZCBtYWtlIHNvbWUgYnVsbHNoaXQgV1NPUCB0b3VybmV5IHBsYXkgaW4gYSBjYXNoIGdhbWUuIApJZiB5b3UgY2FuIGFmZm9yZCB0aGUgc2luZ2xlIEkgd291bGQgY29uc2lkZXIgdGhhdCBiZXR0ZXIgdGhhbiBtdWx0aXBsZSByb29tbWF0ZXMgeW91IG1heSBub3QgZ2V0IGFsb25nIHdpdGguIFlvdSBjb3VsZCBqb2luIGEgY2x1YiBmb3IgbW9yZSBzb2NpYWwgaW50ZXJhY3Rpb25zLgpXaGlsZSBCYWxsLCBSb2JiaW5zIGFuZCBWZXJ1c2Noa2EgbGVhcm5lZCBzd29yZCBzd2FsbG93aW5nIGZyb20gZ3Jvd2luZyB1cCBhcm91bmQgc2lkZXNob3cgcGVyZm9ybWVycyBvciBzZWVraW5nIHRoZW0gb3V0IGF0IHNob3dzLCBNZXllciBkZXNjcmliZWQgaGlzIHlvdW5nZXIgc2VsZiBhcyBhIHdpbXB5IGtpZCB3aXRoIGFueGlldHksIG9mdGVuIHBpY2tlZCBvbiBieSBidWxsaWVzLCB3aG8gdHJpZWQgc3dvcmQgc3dhbGxvd2luZyBhZnRlciBhIG5lYXIgZGVhdGggZXhwZXJpZW5jZSB3aXRoIG1hbGFyaWEgaW5zcGlyZWQgaGltIHRvIHRha2Ugcmlza3MgYW5kIGZlYXIgbm90aGluZy4gWW91IFtkZXZlbG9wXSBhIGdyZWF0IGNvbm5lY3Rpb24gdG8geW91ciBib2R5LCBhbmQgdGhlIGF1ZGllbmNlIHBvc2l0aXZlIHJlYWN0aW9uIGhhcyBtYWRlIG1lIGEgbXVjaCBzdHJvbmdlciBwZXJzb24gaW4gZ2VuZXJhbC4KQ2FyIENvbXBhbmllcyBTdGFydCBUZWFzaW5nIFJldmVhbHMgRm9yIExBIEF1dG8gU2hvdwpUaGlzIG9uZSBvbiBvbmUgbWVldGluZyB3aWxsIGFsbG93IHVzIHRvIGRldmVsb3AgYSBjbGVhciBwaWN0dXJlIG9mIHlvdXIgbGlmZSwgeW91ciBwZXJzb25hbGl0eSBhbmQgd2hhdCB5b3UgYXJlIGxvb2tpbmcgZm9yIGluIGEgcGFydG5lci4uIApTb21lIG1heSBxdWVzdGlvbiB0aGUgRTQzJ3MgbGVnaXRpbWFjeSBhcyBhbiBBTUcgcHJvZHVjdCwgZXNwZWNpYWxseSBnaXZlbiB0aGUgZmFjdCB0aGF0IGl0IGxhY2tzIGFuIGVhcmRydW0gc2hhdHRlcmluZywgaGFuZCBidWlsdCBlbmdpbmUgdGhhdCBob25vdXJzIHRoZSBvbGQgQU1HIHBoaWxvc29waHkgb2YgIm9uZSBtYW4sIG9uZSBlbmdpbmUuIiBGb3J0dW5hdGVseSwgdGhlIHR3aW4gdHVyYm8gVjYgdW5kZXIgdGhlIGhvb2QgaXMgcGxlbnR5IHBvd2VyZnVsIGZvciBqdXN0IGFib3V0IGFueSBzY2VuYXJpby4gCkFzIENvaGVuIHNhaWQsIFRydW1wIG5ldmVyIHNhaWQgZG8gaXQsIGhlIGl0ZXJhdGVkIGhpcyBwb2ludCBvZiB2aWV3IGFuZCBmcm9tIHRoYXQgeW91IGtuZXcgd2hhdCB5b3UgaGFkIHRvIGRvLiBJIGhvcGUgTXVlbGxlciBkb2VzbiBiYWlsIG9uIFRydW1wIGZvciB0aGUgU3RhdGUocykgdG8gaGF2ZSBhIGdvIG9uIFJJQ08gb3Igd2hhdGV2ZXIgdGhleSBnb3QuIFRoaXMgaXNuIGxvY2sgdGlnaHQgYnkgYW55IG1lYW5zLiAKQW5kIGhlIG5lZWRuJ3QgY29tZSBuZWl0aGVyLiAKRGFtYWdlcyBzdWNoIGFzIHRoaXMgYXJlIGxpdGVyYWxseSBidWlsdCBpbnRvIGNvcnBvcmF0aW9ucycgb3BlcmF0aW5nIGJ1ZGdldHMuIFRoZXkgYWxyZWFkeSBhY2NvdW50IGZvciBoYXZpbmcgdG8gZml4IG9yIHJlcGxhY2UgdGhpbmdzLiBUaGUgbW9uZXkgdG8gcGF5IGZvciB0aGlzIGlzIG5vdCBjb21pbmcgZGlyZWN0bHkgb3V0IG9mIHNvbWVvbmUncyBwb2NrZXQsIGFzIGl0IHdvdWxkIGlmIHNvbWVvbmUncyBwZXJzb25hbCBwcm9wZXJ0eSB3YXMgZGVmYWNlZCBvciBkZXN0cm95ZWQuCkV4dGVuZGVkIHNpdHRpbmcsIHRoZXkgYWRkLCBzbG93cyB0aGUgYm9keSdzIG1ldGFib2xpc20gb2YgZ2x1Y29zZSBhbmQgbG93ZXJzIHRoZSBsZXZlbHMgb2YgZ29vZCAoSERMKWNob2xlc3Rlcm9saW4gdGhlIGJsb29kLgoiQW5kIEdlb3JnZSB3b3JlIGhpcyBvbiBoaXMgcmlnaHQgbWlkZGxlIGZpbmdlci4gCkFjdHVhbGx5LiAKQWN0dWFsbHkgaXQgZmFyIGJldHRlciBpZiBwZW9wbGUgdGhpbmsgSSBqdXN0IHRyb2xsaW5nLiAKV2hlbiBQaSBzYXlzIGhpcyBmaW5hbCBnb29kYnllIHRvIChSaWNoYXJkKSBEaWNrIFBhcmtlciB0aGUgVGlnZXIgYXQgdGhlIGVuZCBvZiBMaWZlIG9mIFBpLCBpdCBoYXBwZW5zIHRvIGNvaW5jaWRlIHdpdGggU3BpZGVyIE1hbiAyJ3MgaWRlbnRpdHkgY3Jpc2lzIHNlcXVlbmNlLCB3aGVyZSBTcGlkZXIgTWFuIGlzIGRlY2xhcmVkIG1pc3NpbmcgaW4gTmV3IFlvcmsgQ2l0eSwgYW5kIHRoZSBjaXR5IGlzIGRlZGljYXRlZCB0byB0aGUgY29tbW9uIHBocmFzZTogIndoZXJlIGhhdmUgeW91IGdvbmUgdG8gU3BpZGVyIE1hbj8iCkJ1dCBpZiB5b3UgdHJ5IHRvIGNvdW50IHRoZSBudW1iZXIgb2YgcG9zc2libGUgY29tYmluYXRpb25zIG9mIHRob3NlIGNhcmRzLCB5b3UgYmV0dGVyIGhhdmUgYSBmZXcgZXZlbmluZ3MgZnJlZS4gCllvdSBjYW4gZ28gZm9yIGNoaW4gYXVnbWVudGF0aW9uIGJ1dCB0aGF0IG1heSBub3Qgc29sdmUgdGhlIHB1cnBvc2UgYW5kIHlvdSBtYXkgaGF2ZSB0byByZXNvcnQgZm9yIG90aGVyIGltcGxhbnRhdGlvbnMgYXMgd2VsbC4gVGhlIG5vc2UgZm9ybWluZyBhbmQgdGhlIGNoZWVrIGltcHJvdmVtZW50IGFyZSBhbHNvIGltcG9ydGFudCBhbG9uZyB3aXRoIHRoZSBjaGluIGRldmVsb3BtZW50Li4gCkluIGRvaW5nIHNvLCBpdCBhbHNvIHNvdWdodCB0byBkZXRlcm1pbmUgaWYgYSB2aXN1YWwgYXJ0IGludGVydmVudGlvbiwgYSByZWxhdGl2ZWx5IHVuc3R1ZGllZCBidXQgcG90ZW50aWFsbHkgYmVuZWZpY2lhbCBpbnRlcnZlbnRpb24sIHdvdWxkIGVsaWNpdCBjb2duaXRpdmUgZ2FpbnMuIFR3ZW50eSBmaXZlIGluZGl2aWR1YWxzIChNYWdlID0gODYsIE1lZHVjYXRpb24gPSAxNi4yKSB3ZXJlIHF1YXNpIHJhbmRvbWx5IGFzc2lnbmVkIHRvIGFuIGV4cGVyaW1lbnRhbCBkaWdpdGFsIGFydCBpbnRlcnZlbnRpb24sIEFydCBBY2FkZW15LCBvciBhbiBhY3RpdmUgY29udHJvbCBjb25kaXRpb24sIFRldHJpcy4gCldpciBzaW5kIGJlcnpldWd0IGRhdm9uLCBkYXNzIGltIGdlc2NobG9zc2VuZW4gS2hsc2NocmFuayBkYXMgTGljaHQgYXVzIGlzdCwgYWJlciB3aXIga25uZW4gZXMgbmljaHQgYmVycHJmZW4uIApBdCBCYW5nYWxvdyBQYXJrbGFuZHMuLCBEZWFjb24gU3QsIEJhbmdhbG93LCB0aGlzIFNhdHVyZGF5IGZyb20gMTBhbS4uIApJIGhhdmUgbXkgbGFwdG9wIG9uIHRvcCBvZiBhIGhpZ2ggYm95IGRyZXNzZXIuIFRoZSBsYXAgdG9wIGlzIHBsYWNlZCBvbiBhIHBsYXN0aWMgc3BhY2VyIHRvIGdldCB0aGUgbGFwdG9wIGhpZ2hlciBleWUgbGV2ZWwuIApQZXJzb25hbGx5LCBJIGdvIHRoZSByaWIgYW5kIHNwYXIgcm91dGUuIApHb2t1IHZzIEtyaWxsZW4gaGFkIG5vIHN0YWNrcyBpdCB3YXMgYSBnYWcgZmlnaHQgc28gdGhlcmUgd2FzIG5ldmVyIGFueSB0ZW5zaW9uIGZvciBmYW5zIHRvIGNvbXBsYWluIGFib3V0IGl0IGxpa2UgaWYgTmFydXRvIGZvdWdodCBLaWJhIGFuZCBLaWJhIHdvbiB0aGVyZSBhcmUgbm8gZGlyZWN0IGNvbnNlcXVlbmNlcyBhbmQgYXQgZmFjZSB2YWx1ZSBpdCBjb3VsZCBiZSBpbnNpc3RlZCB0aGF0IE5hcnV0byBvbmx5IHVzZWQgMjAgUGVyY2VudCBvZiBoaXMgcG93ZXIuIERpZmZlcmVuY2UgaXMgd2Uga25vdyB3aGF0IEtpYmEgaXMgY2FwYWJsZSBvZiB3ZSBrbm93IG5vdGhpbmcgYWJvdXQgRGVsdGEuCkhlciBzb24gaXMgbm93IDUuIApNeSBmcmllbmQgYW5kIEkgd2VudCB0byBnbyBwaWNrIGhlciB1cC4gClRoZSB0ZWNobmlxdWUgd2FzIHBpb25lZXJlZCBpbiB0aGUgbWlkIDE4MDBzIGJ5IEdlcm1hbiBzdXJnZW9uIEpvaGFubiBGcmllZHJpY2ggRGllZmZlbmJhY2gsIGJlY2F1c2Ugb2YgY291cnNlIGl0IHdhcyBwaW9uZWVyZWQgYnkgYSBHZXJtYW4gc3VyZ2Vvbi4gCkRlY2lkZSB3aGV0aGVyIG9yIG5vdCBpdCdzIHdvcnRoICJkcmF3aW5nLiIgSG9sZGluZyBvdXQgZm9yIHRoZSBjYXJkcyB5b3UgbmVlZCBpcyBrbm93biBhcyAiZHJhd2luZy4iIElmIHlvdXIgaGFuZCBjb3VsZCBiZSBzdWNjZXNzZnVsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSByaWdodCBjYXJkcyBjb21lIHVwIGluIHRoZSB0dXJuIG9yIHJpdmVyLCB0aGVuIHlvdSdsbCBoYXZlIHRvIGRldGVybWluZSBpZiBpdCdzIHdvcnRoIGhvbGRpbmcgb3V0IGZvciB0aGVtLiBDYWxjdWxhdGluZyBwb3Qgb2RkcyBjYW4gaGVscCB5b3UgbWFrZSB0aGlzIGRlY2lzaW9uLiAKTXkgZnJpZW5kIE1hdHQgaGFzIHBsYXllZCBwb2tlciBwcm9mZXNzaW9uYWxseSBmb3IgZWlnaHQgeWVhcnMgbm93LiBGb3IgbW9zdCBvZiB0aGlzIHBlcmlvZCwgaGUgZWFybmVkIGhpcyBsaXZpbmcgcGxheWluZyBvbmxpbmUgKGFuZCB3b3VsZCBzdGlsbCBiZSBkb2luZyBzbyBpZiB0aGUgZ292ZXJubWVudCBoYWRuJ3QgcmVjZW50bHkgaW5kaWN0ZWQgdGhlIG93bmVycyBvZiB0aHJlZSBvZiB0aGUgbGFyZ2VzdCBvbmxpbmUgcG9rZXIgc2l0ZXMpLiBBcyBwYXJ0IG9mIGhpcyBkYWlseSByb3V0aW5lLCBNYXR0IHNjb3VycyBvbmxpbmUgcG9rZXIgZm9ydW1zLCBkaXNjdXNzaW5nIHN0cmF0ZWd5IHdpdGggb3RoZXIgc2VyaW91cyBwbGF5ZXJzLCBwcm9zIGFuZCBhbWF0ZXVycyBhbGlrZS4gVGhlc2UgcGVvcGxlIGFyZSBkZWFkbHkgc2VyaW91cy4KRGVhciBLaW1iZXIyLCBUaGFuayB5b3Ugc28gbXVjaCBmb3IgeW91ciBraW5kIHJldmlldyBhbmQgZmVlZGJhY2suIFdlIGFyZSBzbyBnbGFkIHRoYXQgeW91IGVuam95ZWQgeW91ciBzdGF5IGhlcmUgd2l0aCB1cywgYW5kIHRoYXQgeW91IG1hZGUgZ29vZCB1c2Ugb2Ygb3VyIGluY2x1ZGVkIGFtZW5pdGllcyEgV2UgcmVhbGx5IGFwcHJlY2lhdGUgeW91ciBmZWVkYmFjayBhcyB3ZWxsLiBXZSBkZWZpbml0ZWx5IGxvb2sgaW50byB0aGUgcmVtb3RlIGlzc3VlLCBhbmQgY29ycmVjdCB0aGF0LiAKWmlwcGluZyBmcm9tIGNsaXAgdG8gY2xpcCBsaWtlIGEgcmFjaXNtIHN1cGVyY3V0LCBUaGUgMTN0aCBqdW1wcyBiZXR3ZWVuIGFyY2hpdmFsIGZvb3RhZ2Ugb2YgR2VvcmdlIFdhbGxhY2UgcGxlZGdpbmcgYWxsZWdpYW5jZSB0byBzZWdyZWdhdGlvbiBhbmQgY2hvaWNlIG1vZGVybiBkYXkgcHVuZGl0IHF1b3RlcywgdGhlbiBzcGxpY2VzIGluIFRWIGFuZCB2aXJhbCB2aWRlbyBvZiwgc2F5LCB0aGUgYWZ0ZXJtYXRoIG9mIHRoZSBNaWNoYWVsIEJyb3duIHNob290aW5nIG9yIHByb3Rlc3RzIGZvbGxvd2luZyB0aGUga2lsbGluZyBvZiBUcmF5dm9uIE1hcnRpbi4gCkl0IGEgbW9kZXJuIHJlcGxpY2Egb2YgYW4gMTg5MHMgQ29sdCBzdHlsZSBzaXggc2hvb3Rlci4uIApCcnVzaCwgSSBwZXJzb25hbGx5IGxpa2Ugc3ludGhldGljLiBJIGdvdCBtaW5lIGZyb20gbWFnZ2FyZCBidXQgdGhleSBhcmVuIG9uIEFtYXpvbi4KV2hlbiBzaGUgY2FtZSBob21lIHRoZXJlJ2QgYmUgY2FycyBzdHVjayB0byBldmVyeXRoaW5nICAgdGhlIHdhbGxzLCB0aGUgY2VpbGluZy4gSW4gdGhlIHNpeHRoIGZvcm0gYXQgVGhvbWFzIFRhbGxpcyBoZSB3b3VsZCBldmVuIHRlYWNoIG90aGVyIHN0dWRlbnRzIHRyaWNrcyBmb3IgY2hlYXRpbmcgYXQgcG9rZXIuIE5vdCB0aGF0IGhlIGNhbiB1c2UgdGhlbSAgIGhlIHNpbmNlIGJlZW4gYmFubmVkIGZyb20gY2FzaW5vcyBpbiBMb25kb24gYWZ0ZXIgYWNjaWRlbnRhbGx5IHBlcmZvcm1pbmcgYSBjYXJkIHRyaWNrIGZvciBvbmUgb2YgdGhlaXIgcHJvcHJpZXRvcnMuLiAKSnVzdCBnZXQgeW91ciBNQSBkb25lLiBTZXJpb3VzbHkuIAoiQXQgZmlyc3QsIFtJIGZlbHRdIGEgbGl0dGxlIGF3a3dhcmQsIiBhZG1pdHRlZCBHb2xkc3RlaW4sIDQxLCB3aG8gaGFzIHR3byBraWRzIGFuZCBjbyBvd25zIHRoZSBjZWxlYiBmYXZvcml0ZSBjbG90aGluZyBib3V0aXF1ZSBCbHVlIENyZWFtIGluIHRoZSBIYW1wdG9ucyBhbmQgRWFzdCBWaWxsYWdlIHdpdGggaGlzIHdpZmUsIFNhbWFudGhhIEdyZWVuZXMuICJCdXQgdGhlbiwgaXQgd2FzIHNvLCBzbyBnb29kLiJIYXZpbmcgYSBuYW5ueSB3aG8gY2FuIHRlYWNoIHlvdXIga2lkIGEgc2Vjb25kIGxhbmd1YWdlIGRvZXNuJ3QgY3V0IGl0IGFueW1vcmUgaW4gTmV3IFlvcmsgQ2l0eSdzIGVsaXRlIGNpcmNsZXMuIApTb21ldGltZXMsIGNhcnBldCBjYW5ub3QgYmUgcmVwbGFjZWQgd2l0aCBhIGhhcmQgZmxvb3JpbmcgdW5sZXNzIGEgc3BlY2lhbCwgYWNvdXN0aWMgdW5kZXJsYXltZW50IGlzIHVzZWQgd2hpY2ggbmVlZHMgdG8gYmUgY29uc2lkZXJlZCB3aGVuIHByaWNpbmcuIApBbnl0aGluZyB3aXRoIGFueSBzb3J0IG9mIHRleHR1cmUgd291bGQgZ2V0IHN0dWNrIGluIHRoZSB3aXJlcy4gCldhbnQgdG8ga25vdyBhYm91dCBsaXZlIG11c2ljIGFyb3VuZCB0b3duPyBCb29rbWFyayBTaGFuZ2hhaSAyNC83IGFuZCBrZWVwIGFuIGV5ZSBvbiB0aGUgb3RoZXIgc2l0ZXMgaW4gdGhlIHNlY3Rpb24gYmVsb3cuCkxha2UgU3RyZWV0J3MgcmVwdXRhdGlvbiBmb3IgcHJvc3RpdHV0aW9uIGFuZCBkcnVncyBpc24ndCBuZXcuIApXVEhOJ3MgR2xvdyB0cmVhdG1lbnQgdGFyZ2V0cyB0aGUgZmFjZSwgdGhvdWdoIEF1dGggcGxhY2VkIGEgZmV3IG90aGVyIG5lZWRsZXMgb24gbXkgYm9keSBhcyB3ZWxsIGFzIEkgbGF5IG9uIGEgaGVhdGVkIHRhYmxlIChhbiBhbWF6aW5nIGJvbnVzISkuIE5vaXNlIGNhbmNlbGluZyBoZWFkcGhvbmVzIHBsYXllZCBzb290aGluZyBiaW5hdXJhbCBiZWF0cyB0aGF0IGhlbHBlZCBtZSByZWxheCBldmVuIG1vcmUuIEkgYWxzbyBoYWQgdGhlIHVsdGltYXRlIGFkZCBvbjogYSBkb21lLCBwbGFjZWQgb3ZlciBteSBoZWFkLCBzdHVkZGVkIHdpdGggTEVEIGxpZ2h0cyB0aGF0IEF1dGggc2F5cyBpbmNyZWFzZSBjZWxsdWxhciByZWdlbmVyYXRpb24uCjQzMjEgZXQgc2VxLiksIHRoZSBDb3VuY2lsIG9uIEVudmlyb25tZW50YWwgUXVhbGl0eSBSZWd1bGF0aW9ucyBmb3IgSW1wbGVtZW50aW5nIHRoZSBQcm9jZWR1cmFsIFByb3Zpc2lvbnMgb2YgTkVQQSAoNDAgQ0ZSIFBhcnRzIDE1MDAgMTUwOCksIGFuZCBOQVNBIHBvbGljeSBhbmQgcHJvY2VkdXJlcyAoMTQgQ0ZSIFBhcnQgMTIxNiBTdWJwYXJ0IDEyMTYuMyksIE5BU0EgaGFzIHByZXBhcmVkIGFuZCBpc3N1ZWQgYSBGU0VJUyBmb3IgY29udGludWF0aW9uIG9mIGl0cyBTUlAsIHdoaWNoIG9mZmVycyBhcHByb3hpbWF0ZWx5IDMwIGZsaWdodCBvcHBvcnR1bml0aWVzIHBlciB5ZWFyIHRvIHNwYWNlIHNjaWVudGlzdHMuIFRoZSBGU0VJUyBhZGRyZXNzZXMgZW52aXJvbm1lbnRhbCBpc3N1ZXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBsYXVuY2ggYW5kIHJlY292ZXJ5IG9mIHRoZSBzb3VuZGluZyByb2NrZXRzIGFuZC9vciBhc3NvY2lhdGVkIHNjaWVudGlmaWMgcGF5bG9hZHMuIFRoZSBwdXJwb3NlIG9mIHRoZSBsYXVuY2hlcyBpcyB0byBzdXBwb3J0IHNwYWNlIGFuZCBlYXJ0aCBzY2llbmNlIHJlc2VhcmNoLiAKRW5la28gQXR4YSBwcm9wb3NlIHVuIHBsYXQgInByb21lbmFkZSBkYW5zIG5vdHJlIHBvdGFnZXIiIGNvbW1lIHNpIG9uIGR0ZXJyYWl0IHVuZSBwb21tZSBkZSB0ZXJyZSwgc291cyB1bmUgInRlcnJlIiBjb21lc3RpYmxlICBiYXNlIGRlIGxndW1lcyBldCBhbWFuZGVzCkEgbGl0dGxlIHdvcmQgb2YgYWR2aWNlIGluIGNhc2UgYW55b25lIGVsc2UgZGVjaWRlcyB0byBkbyB0aGUgc2FtZSB0aGluZzogdGhlIGxhd3MgaW4gR2VvcmdpYSBhbGxvdyBhIGNvbnZlcnNhdGlvbiB0byBiZSByZWNvcmRlZCB3aXRob3V0IHRoZSBvdGhlciBwYXJ0aWVzIGNvbnNlbnQgaWYgdGhlcmUgaXMgbm8gZXhwZWN0YXRpb24gb2YgcHJpdmFjeSwgd2hpY2ggaXMgdGhlIGNhc2UgaWYgeW91IGFyZSBpbiB0aGUgZnJvbnQgcm9vbSBvZiBhbiBvZmZpY2UgdGhhdCBoYXMgZ2VuZXJhbCBhZG1pc3Npb24uIEhvd2V2ZXIsIG9uY2UgeW91IGdvIGludG8gYSBwcml2YXRlIHJvb20gaW4gdGhlIGJhY2sgdGhhdCBubyBsb25nZXIgYXBwbGllcy4gCkhvdyBUbyBVc2UgTWFzc2FnZSB0byBUcmVhdCBDZWxsdWxpdGlzCk1yIFByb3dzZSBzYWlkIHRoaXMgYWdncmF2YXRlZCB0aGUgbWF0dGVycyBhZ2FpbnN0IGhlci4gIllvdSBkZWZyYXVkZWQgQ2xhcmsgVGFua3MgYW5kIGxlZnQgdGhlIHZpY3RpbXMgaW4gU3lkbmV5IG91dCBvZiBwb2NrZXQgYW5kIHdpdGhvdXQgdGhlaXIgdGFuaywgZGVsYXlpbmcgdGhlIGNvbnN0cnVjdGlvbiBvZiB0aGVpciBob3VzZSwiIE1yIFByb3dzZSBzYWlkLiBUaGUgbWFnaXN0cmF0ZSBzYWlkIHRoZSBhY2N1c2VkIGFwcGVhcmVkIGJlZm9yZSB0aGUgY291cnQgaW4gMjAwOSBvbiBmcmF1ZCBjaGFyZ2VzIGFuZCB3YXMgZ2l2ZW4gdGhlIG1heGltdW0gYW1vdW50IG9mIGxlbmllbmN5IGJ5IHRoZSBjb3VydCB3aGljaCBpbXBvc2VkIGEgc3VzcGVuZGVkIHByaXNvbiBzZW50ZW5jZSBpbiB0aGUgZm9ybSBvZiBhIFNlY3Rpb24gOSBib25kLiAKSSB3cml0ZSBhbGwgbXkgc29uZ3Mgb24gYWNvdXN0aWMgZ3VpdGFyIGFuZCB0aGF0J3MgaG93IEkndmUgd3JpdHRlbiB0aGVtIGZvciB5ZWFycy4gVGhhdCdzIGhvdyBNYXJrIGFuIEkgd3JvdGUgdGhlbSBpbiBDcmVlZC4gQW5kIGl0IHdhcyBhIHdheSBmb3IgbWUgdG8gY29udGludWUgdGhhdCBjcmVhdGl2ZSB2aWJlLCBidXQgYWxzbyBkbyBzb21ldGhpbmcgdGhhdCB0aGUgZmFucyBoYXZlIGJlZW4gYXNraW5nIGZvciwgYW5kIHRoYXQncyB0byBoZWFyIHRoZSBDcmVlZCBjYXRhbG9nIHVucGx1Z2dlZCBhbmQgbXkgc29sbyBjYXRhbG9nIHVucGx1Z2dlZCBhbmQgdG8gaGF2ZSBhbiBpbnRpbWF0ZSBzZXR0aW5nIGZvciBhIHNob3cgd2hlbiB3ZSBjYW4gY29tZSB0b2dldGhlciBhbmQgaGF2ZSB0aGUgc29uZ3MgcGxheWVkIGluIGEgd2F5IHRoYXQgYnJpbmdzIHRoZW0gYmFjayB0byB0aGVpciByb290cy4gCldoZW4geW91IGhhdmUgYWxsIHRoZSB1cGRhdGVzIHlvdSBhcmUgcmVhZHkgdG8gZ28uIExpdHRsZSB0aXBwIGZvciB0aGUgc3RhcnQsIGlmIHlvdSBwbGF5IHdpdGggdGhlIGRlZmF1bHQgZmlyc3QgbmFtZXMsIG90aGVycyBzb21ldGltZXMgY2FsbCB5b3UgU2NvdHQvIFNhcmEuCiJDbHVicyBkbyBub3QgcGF5IGNvcnBvcmF0aW9ucyB0YXggYW5kIGluIFF1ZWVuc2xhbmQgdGhleSBhcmUgdGF4ZWQgYXQgYSBsb3dlciByYXRlIHRoYW4gaG90ZWxzLCIgaGUgc2FpZC4KQnV0IEknbSBhY3V0ZWx5IGNvbnNjaW91cyB0aGF0IHlvdSBuZWVkIHRvIGVuc3VyZSB5b3VyIG1hbmUgaXMgc2hpbnksIHdlbGwgY3V0IGFuZCBjb25kaXRpb25lZC4gTm90aGluZydzIG1vcmUgYWdlaW5nIHRoYW4gYSBjcmlzcHksIHVua2VtcHQgbW9wIG9uIGEgd29tYW4gb2YgYSBjZXJ0YWluIHZpbnRhZ2UuCkFuZCBzaW5jZSBJIGRvbiBoYXZlIGEgYnV0bGVyLCBJIGhhdmUgdG8gZG8gaXQgbXlzZWxmLiAKV2l0aCBzbG90IG1hY2hpbmVzIHRoZSBvbmx5IHJlYWwgZGVjaXNpb25zIHRvIGJlIG1hZGUgYXJlIGhvdyBtdWNoIHRvIGJldCBhbmQgaG93IGxvbmcgeW91IHdhbnQgdG8gc3BlbmQgd2F0Y2hpbmcgdGhlIHdoZWVscyBzcGluLiBXaGlsZSB0aGVyZSBhcmUgbW9yZSBjaG9pY2VzIHRvIGJlIG1hZGUgYXQgcm91bGV0dGUgKHJlZCBvciBibGFjaywgb2RkIG9yIGV2ZW4sIG9uZSBudW1iZXIgb3IgYSBncm91cCBvZiBudW1iZXJzLCBldGMpLCBvbmNlIHRoZSBiZXQgaGFzIGJlZW4gbWFkZSB0aGVyZSBub3RoaW5nIGxlZnQgdG8gZG8gYnV0IHdhdGNoIHRoZSBsaXR0bGUgYmFsbCBzcGluIGFyb3VuZCB0aGUgd2hlZWwuIE90aGVyIGdvb2QgY2hvaWNlcyBoZXJlIG1pZ2h0IGluY2x1ZGUga2VubyBhbmQgYmFjY2FyYXQuLiAKVUNMQSBCcnVpbiBEYXkgZ2l2ZXMgYWRtaXR0ZWQgZnJlc2htZW4gc3R1ZGVudHMgdGhlIGNoYW5jZSB0byB0b3VyIHRoZSBjYW1wdXMsIGhlYXIgZnJvbSBwcm9mZXNzb3JzLCBtZWV0IGN1cnJlbnQgc3R1ZGVudHMgYW5kIGV4cGVyaWVuY2Ugd2hhdCBsaWZlIGlzIGxpa2UgYXMgYSBCcnVpbi4gCk15IHNoaWZ0IGVuZGVkIGF0IGFib3V0IDExIG9uZSBuaWdodC4gClRoZXNlIGJ1c2luZXNzIHRvIGJ1c2luZXNzIHBhcnRuZXJzaGlwcyByZXByZXNlbnRlZCAzODQgbWlsbGlvbiAoVVMkNTE2LjkgbWlsbGlvbikgaW4gMjAxMCByZXZlbnVlcy4gCkkgYWdyZWUsIGl0IHdvdWxkbiBodXJ0IHRvIGNhbGwgYWhlYWQgYW5kIG1ha2Ugc3VyZSB0aGV5IGNhbiBhY2NvbW1vZGF0ZSB5b3UuIEkgZmVlbCB5b3Ugd2l0aCB0aGUgZW1iYXJyYXNzbWVudCwgYmVpbmcgdHVybmVkIGF3YXkgb24gdGhlIGRheSB3b3VsZCBtb3J0aWZ5IG1lISBJIGhhZCBhIGZldyBtYXNzYWdlcyBhbmQgSSBkb24gdGhpbmsgeW91IGhhdmUgYW4gaXNzdWUgd2l0aCB0aGUgc3RhZmYgKEkgc3VyZSB0aGV5IHNlZSBhbGwgc29ydHMgb2Ygd2VpcmQgYW5kIHdvbmRlcmZ1bCBib2RpZXMgYW5kIGJvZHkgcGFydHMgaW4gdGhlaXIgbGluZSBvZiB3b3JrKSwgYnV0IGlmIHlvdSBoYXZlIHRvIGxpZSBvbiBhIG1hc3NhZ2UgYmVkIHRoYXQgbWF5IGNhdXNlIHlvdSBpc3N1ZXMuIApEbyB0aGlzIGJhY2sgaW50byB0aGUgNSBnYWxsb24sIGJydXNoIGFsbCB0aGUgcGFpbnQgZnJvbSB0aGUgYnVja2V0IGJhY2sgaW50byBjYW4uIApUaGV5IGNhbiBkZWZpbml0ZWx5IGJyaW5nIGdyZWF0IGVuam95bWVudCB0byBhIGxvdCBvZiB0ZXh0IGxlYXJuaW5nLiAKQW55dGhpbmcgb3V0c2lkZSBvZiB0aGVzZSBvbmUgc2hvdWxkIGNvbnNpZGVyIGZvbGRpbmcgYW5kIHdhaXRpbmcgZm9yIGEgYmV0dGVyIG9wcG9ydHVuaXR5LCBlc3BlY2lhbGx5IHdpdGggYW4gYWdncmVzc2l2ZSB0YWJsZS4gT25lIHRoaW5nIHRoYXQgY2FuIGJlIGRvbmUgZnJvbSBhbiBlYXJseSBwb3NpdGlvbiBpcyBibHVmZmluZy4gClRoZSBvbmx5IGxpbmVzIEkgY2FuIHJlbWVtYmVyIGFyZSBmcmFnbWVudHMsIGxpa2UgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbW92aWUgd2hlcmUgdGhleSB0YWxrIGFib3V0ICJVbm9idGFpbml1bSIuIApNdWNoIHNjYXJpZXIgaW1hZ2VyeSBhbmQgbW9yZSBjcmVhdGl2ZSBkZWF0aHMuIApTY290dCBTdGFwcCBhY2NlcHRzIGZ1dHVyZSB3aXRoIENyZWVkCk1vZ2lsZXZpY2ggb3BlcmF0aXZlcyBoYXZlIGJlZW4gdXNpbmcgVHJ1bXAgcmVhbCBlc3RhdGUgZm9yIGRlY2FkZXMgdG8gbGF1bmRlciBtb25leS4gClVzZXIgZmxhaXIgY29ycmVzcG9uZHMgd2l0aCB0aGUgbnVtYmVyIG9mIHBvc3RzL2NvbW1lbnRzIHlvdSBoYXZlIG1hZGUgaW4gL3IvR2V0TW90aXZhdGVkLgpSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUhvdyBFbWVyZ2VuY3kgVHJlZSBSZW1vdmFsIFNlcnZpY2VzIENhbiBIZWxwIFlvdQpZb3UgZGlkIHRoZSB0cmFpbmluZy4gClRoZSBpbmRpdmlkdWFsIHJlc3VsdCBvZiBhbnkgb25lIGhhbmQgb2YgcG9rZXIgZG9lcyBub3QgbWF0dGVyLCBpdCBpcyB0aGUgYWNjdW11bGF0aW9uIG9mIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBoYW5kcywgYWxsIHBsYXllZCB3aXRoaW4gYSB3aW5uaW5nIGxvbmcgdGVybSBzdHJhdGVneS4gWW91ciBhY2VzIGNhbiAoYW5kIHdpbGwpIGJlIGNyYWNrZWQgYnkga2luZ3MgYSBwZXJjZW50YWdlIG9mIHRoZSB0aW1lLiBJdCBzdGlsbCArRVYgdG8gZ2V0IGl0IGluLiAKVGhpcyBpcyB0cnVlLCBQb2tlciBib3RzIGRvIGV4aXN0LiBJdCBpcyBiZWxpZXZlZCB0aGF0IHBva2VyIGJvdHMgd291bGQgbWFrZSB3aW5uaW5nIGltcG9zc2libGUuIFRoaXMgaXMgTk9UIHRydWUuIApUaGUgbWVkaWEgbmV2ZXIgcmVhbGx5IHJlcG9ydHMgaXQgYW5kIHRoZSBwdWJsaWMgbmV2ZXIgcmVhbGx5IHNlZW1zIHRvIGNhcmUuIApGYWNpYWxzIGFyZSBhY2NlcHRhYmxlLCBwcm92aWRlZCB0aGV5IGNvbnRhaW4gb25seSBhbGwgbmF0dXJhbCBwcm9kdWN0cy4gCiJFdmVyeWJvZHkgd2FzIHBldHJpZmllZCwiIEpvcmdlbiBOaWVsc2VuLCBhIGZvcm1lciBhcnRpc3RpYyBkaXJlY3RvciBhdCB0aGUgV3lubiBMYXMgVmVnYXMgaG90ZWwgc2Fsb24sIHRlbGxzIHRoZSBwYXBlciwgc2F5aW5nIGhlIHRvbGQgaGlnaCBsZXZlbCBjb21wYW55IGV4ZWN1dGl2ZXMgYWJvdXQgdGhlIHByb2JsZW0sIGJ1dCAibm9ib2R5IHdhcyB0aGVyZSB0byBoZWxwIHVzLiIKVGhlIHRhbmsgd2lsbCB0YWtlIGFsbCB3YXN0ZSBmcm9tIHRoZSBob3VzZS4gVGhlIHNvbGlkcyBzZXR0bGUgb3V0IGFuZCBkcmlmdCB0byB0aGUgYm90dG9tLiBUaGUgbGlxdWlkcyB0aGVuIGZsb3cgb3V0IGludG8gdGhlIGRyYWluIGZpZWxkICh0aG9zZSBwaXBlcykuIFRoZSB3YXRlciByZXR1cm5zIHRvIHRoZSBlYXJ0aC4gVGhlIHNvbGlkcyBzZXR0bGUgb3V0IGluIHRoZSB0YW5rIGFuZCBkZXBlbmRpbmcgb24geW91ciBob21lIHNpemUgdGhlIHNlcHRpYyBjb21wYW55IHdpbGwgbWFrZSBhIHJlY29tZW5kYXRpb24gb24gaG93IG9mdGVuIHRvIHB1bXAgb3V0IHRoZSB0YW5rLiBOb3JtYWxseSBldmVyeSBvdGhlciB0byBldmVyeSAzcmQgeWVhci4gUmVhbGx5IGRlcGVuZHMgb24gaG93IHdlbGwgeW91IHRha2UgY2FyZSBvZiBpdC4KR292ZXJubWVudCB0byBzaHV0IGRvd24gaW4gNDggaG91cnMKVGhlIFJpc2luZyBQb3B1bGFyaXR5IG9mIFBva2VyIEdhbWVzCkhlbGVuIGhhdHRlIGRlbiBBdGVtIGFuaGFsdGVuIG1zc2VuLiBEaWUgRXJyZWd1bmcgc2Nob3NzIGlociBpbnMgQmx1dCwgZWluIHdhcm1lcyBHZWZobCBzdGllZyBhdWYuIEFiZXIgaWhyZSBIbmRlIGhhdHRlbiBzY2hvbiBkZW4gZXJzdGVuIFNhdHogYWxzIEFudHdvcnQgYmVnb25uZW46IE5laW4sIERvYyBDYXJsb3MsIGRpZSBXRSBiZXNjaGZ0aWd0IG1pY2ggbnVyIGluIGRlciBGYW50YXNpZSAuIApUaGlzIHN1Z2dlc3RzIHRoYXQgbWljZSB3aXRob3V0IGd1dCBiYWN0ZXJpYSBoYXZlIGxvdyBsZXZlbHMgb2YgYW54aWV0eSBsaWtlIGJlaGF2aW9yLCBzaW5jZSB0aGV5IHNwZW5kIG1vcmUgdGltZSBpbiB0aGUgYXZlcnNpdmUgYXJlYSBvZiB0aGUgdGVzdGluZyBhcHBhcmF0dXMuMTMsIDE0QW5vdGhlciBiZWhhdmlvcmFsIHRlc3QgdXNlcyB0aGUgbGlnaHQgZGFyayBib3gsIHdoaWNoIGhhcyBhIGRhcmssIGNsb3NlZCBhcmVhIGNvbm5lY3RlZCB0byBhIGxpZ2h0IG9wZW4gYXJlYSAoRmlnLiAyKS4gQSBub3JtYWwgY29udHJvbCBtb3VzZSBleHBsb3JlcyBib3RoIHRoZSBsaWdodCBhbmQgdGhlIGRhcmsgY2hhbWJlcnMgd2l0aCBhIHByZWZlcmVuY2UgZm9yIHRoZSBkYXJrZXIgb25lLiAKTGFuZGxvcmQgaGF0ZXJzIHRvb2sgdGhlICIyMCBwZXJjZW50IiBmaWd1cmUgYXQgZmFjZSB2YWx1ZSBhbmQgdXNlZCBpdCB0byBqdXN0aWZ5IHB1c2hpbmcgdGhyb3VnaCBhIHJldGFpbCByZW50IGNvbnRyb2wgYmlsbCBpbiB0aGUgY2l0eSBjb3VuY2lsIHRoYXQgd291bGQgbGlrZWx5IG1ha2UgcmV0YWlsIHZhY2FuY3kgd29yc2UuClRoZW4gdHdvIHllYXJzIGFnbyBJIHN0dW1ibGVkIGFjcm9zcyB0aGlzIHN1YiBhbmQgd2VudCBjcmF6eSBJIHN0aWxsIGEgYmVnaW5uZXIgaW4gcmVhbGl0eSBidXQgSSBoYXZlIHNvIG11Y2ggZnVuIHRocm93aW5nIEkgZG9uIHJlYWxseSBjYXJlIGFib3V0IG15IHNraWxsIGFzIG11Y2guIEkgbG92ZSB3YXRjaGluZyB5b3UgYWxsIHRocm93IHRoaXMgaXMgaG9uZXN0bHkgc3VjaCBhIGdyZWF0IGNvbW11bml0eSBldmVyeW9uZSBpcyByZWFsbHkgd2VsY29taW5nIGFuZCBoZWxwZnVsLiBJdCB2ZXJ5IHJlZnJlc2hpbmcgd2hlbiBjb21wYXJlZCB0byB0aGUgZ2F0ZWtlZXBpbmcgdGhhdCBnb2VzIG9uIGluIG90aGVyIGhvYmJpZXMvc3Vicy4gV2hldGhlciB5b3UgYmVlbiB0aHJvd2luZyBmb3IgYSBkYXkgb3IgdGVuIHllYXJzLCB5b3Ugc3BlbnQgJDEwIG9yICQxMDAsIGlmIHlvdSBoYXZlIDEgeW95byBvciA1MCBldmVyeW9uZSBpcyB3ZWxjb21lIGhlcmUuCkRhbCAyMDE3IHByb211b3ZpYW1vIGxhIGRpZmZ1c2lvbmUgZGVsbGEgY3VsdHVyYSBkZWwgVGFuZ28gQXJnZW50aW5vIHRyYW1pdGUgY29yc2kgZGkgYmFsbG8gLCBzdGFnZSBlIGwnb3JnYW5penphemlvbmUgZGkgc2VyYXRlIGRhbnphbnRpICggTWlsb25nYSkKTm90aGluZyBhYm91dCB0aGlzIGNhc2UgYWRkcyB1cC4gClRyeSBkaWZmZXJlbnQgbW9kYWxpdGllcyB0byBkZXRlcm1pbmUgd2hpY2ggb25lIGlzIGEgZ29vZCBmaXQgZm9yIHlvdS4gClRiaCBpdCByaWRpY3Vsb3VzIHRoYXQgaXQgdGFrZW4gb3ZlciAyMCBmdWNraW5nIG1vdmllcyB0byBnZXQgYSBmZW1hbGUgbGVkIHNvbG8gbW92aWUuIGFuZCBldmVuIHdoZW4gdGhleSBkaWQgdGhleSB0cmVhdCBpdCBkZWxlZ2l0bWl6ZSBpdCBhIGJpdCBJTU8gd2hlbiBzbyBtdWNoIG9mIHRoZSBtYXJrZXRpbmcgaXMgYW9idXQgaGVyIGJlaW5nIGEgd29tYW4uIEl0IG1ha2VzIGl0IGZlZWwgbGlrZSBhIGdpbW1pY2suIENoZWVzZXkgdGFnbGluZXMgbGlrZSAiV2hhdCBtYWtlcyBhIEhFUm8iIGFubm95IG1lIGJlY2F1c2UgaXQgbWFrZXMgeW91IHRoaW5rICJzaGUgYSB3b21hbiIgbm90ICJzaGUgYSBzdXBlcmhlcm8iLiBOb3RoaW5nIHdvdWxkIHNlbGwgYSBmZW1hbGUgbGVhZCBiZXR0ZXIgdGhhbiB0cmVhdGluZyBpdCBsaWtlIGFsbCB0aGUgb3RoZXJzLiBJREsgdGhleSBtYWtpbmcgYSBibGFjayB3aWRvdyBtb3ZpZSBzbyBhdCBsZWFzdCBpdCBkb2VzbiBsb29rIGxpa2UgYSBvbmUgb2ZmIGdpbW1pY2suClRoZSB3ZWlnaHRlZCByaXNrIGRpZmZlcmVuY2UgaW4gcGVyaW5lYWwgdHJhdW1hcyB0aGF0IHJlcXVpcmVkIHN1dHVyaW5nIHdhcyAgMC4yMyAoOTUlIENJOiAgMC4zNSwgIDAuMTEpIGluIGZhdm91ciBvZiBhdm9pZGluZyBlcGlzaW90b215LCBjb21wYXJlZCB3aXRoIGxpYmVyYWwgZXBpc2lvdG9teSAobj00LDYzMSkuIFRoaXMgaXMgZXF1aXZhbGVudCB0byBhbiBhYnNvbHV0ZSBkZWNyZWFzZSBvZiAyMyUgaW4gdGhlIHJpc2sgb2Ygc3V0dXJlZCBwZXJpbmVhbCB0cmF1bWEuIApBbmQgdGhlbiB0aGVyZSBpcyB0aGUgcHJvYmxlbSB0aGF0IGJvbmQgRVRGcyBhcmUgbm90IHNvIHNpbXBsZSBhcyBlcXVpdHkgRVRGcy4gClRoZSBzdG9yeSBvZiBBIExpdHRsZSBMaWZlIGZvbGxvd3MgZm91ciBicm9rZSBjbGFzc21hdGVzIHdobyBtb3ZlIHRvIE5ldyBZb3JrIHRvIG1ha2UgdGhlaXIgd2F5LiBUaGUgYm9vayBmb2xsb3dzIHRoZWlyIGxpdmVzIGFuZCBob3cgdGhleSBjb3BlIHdoZW4gdGhleSBiZWNvbWUgc3VjY2Vzc2Z1bCBhbmQgaG93IHRoZXkgZ2V0IHRpbmdlZCBieSBhZGRpY3Rpb24gYW5kIHByaWRlLiBIb3dldmVyLCB0aGVpciBncmVhdGVzdCBjaGFsbGVuZ2UgaXMgSnVkZSBhbmQgc2VjcmV0cyBvZiBoaXMgcGFzdC4uIApOb3cgSSBoYXZlIHRvIG1vdmUuLiAKTm8gcmVxdWVzdHMgZm9yIG9ubHkgcG1zIG9yIHRvIGxlYXZlIGNvbW1lbnRzIG9uIHlvdXR1YmUsIHR3aXR0ZXIgaW4gbGlldSBvZiB0aGUgc3VicmVkZGl0LiAKRnVydGhlcm1vcmUsIHdoaWxlIGhlIGRpZG4gaGF2ZSBtdWNoIGlkZWEgb24gd2hlcmUgdG8gZ28gd2l0aCBpdCwgaWYgaGUgdHJpZWQgY29taW5nIHVwIHdpdGggYSBiaXQgbW9yZSAobWF5YmUgdGhpbmsgb2YgbmV3IGRpcmVjdGlvbnMgdG8gdGFrZSB0aGluZ3MpLCBzdHVjayB3aXRoIEFKIHRocm91Z2ggdGlsbCB0aGUgZW5kLCBwZXJoYXBzIEFBIG1pZ2h0IGJlIGluIGEgZGlmZmVyZW50IHBvc2l0aW9uIChhbHRob3VnaCwgYnkgdGhhdCBsb2dpYywgaXQgY291bGQgYmUgd29yc2Ugb2ZmKS4gCkZpbmQgYSBHb29kIFRlYWNoZXIgVGhlcmUgcmVhbGx5IGlzIG5vIG90aGVyIHdheS4gQmUgY2FyZWZ1bCB3aGVuIGNob29zaW5nIGEgdGVhY2hlciwgYmVjYXVzZSB0aGVyZSBpcyBsb3Qgb2YgdmVyeSBwb29yIFRhaSBDaGkgYmVpbmcgdGF1Z2h0LiAKSXQgbWF5IGhhdmUgYmVlbiBvbmUgb2YgdGhlIHJlYXNvbnMgSSBhY3R1YWxseSBtYWRlIG15IGFjY291bnQsIGFuZCBpdCB3YXMgZGVmaW5pdGVseSB0aGUgZmlyc3QgdGltZSBJIHJlYWxpemVkIHRoYXQgSSB3YXNuIHRoZSBvbmx5IG9uZSB3aG8gaGFkIGluc2FuZSBzaGl0cyB3aGlsZSBJIHdhcyBvbiBteSBwZXJpb2QuIEdvb2Qgc3R1ZmYuLiAKVGhleSBoYXZlIGFsb3Qgb2YgZm9sbG93ZXJzLi4gCkkgZXhwbGFpbmVkIHRoYXQgdGhlIGhvbWVsZXNzIHNoZWx0ZXIgd2FzIGp1c3QgYWNyb3NzIHRoZSBzdHJlZXQsIGFuZCwgb3RoZXIgdGhhbiB0aGUgZ3JvY2VyeSBzdG9yZSwgdGhpcyB3YXMgdGhlaXIgb25seSBxdWljaywgZWFzeSwgbmVhcmJ5IG9wdGlvbiBmb3IgZm9vZCAob3IgYm9vemUgb3IgY2lnYXJldHRlcykuIEluIGZhY3QsIG5vdyB0aGF0IEkgbG9vayBmb3IgdGhlbSwgSSByZWNvZ25pemUgc29tZSBvZiB0aGVtIGFuZCBpdCByZWFsbHkgZ2V0cyB0byB5b3Ugd2hlbiBvbmUgZGF5LCB5b3UgZG9uIHNlZSB0aGVtIGF0IHRoZWlyIHVzdWFsIGhhdW50cy4gCkEgc2hvb3RpbmcgaW4gYSBuZWlnaGJvcmhvb2QgRnJpZGF5IHByb21wdGVkIGEgbG9ja2Rvd24gYXQgQnVsbGFyZCBIYXZlbnMgVGVjaG5pY2FsIEhpZ2ggU2Nob29sIGluIEJyaWRnZXBvcnQsIG9mZmljaWFscyBzYXkuCkdpb3Zpbm8sIFBoRCwgYmVnYW4gdG8gd29uZGVyIGFib3V0IHRoZSBkaXJlY3Rpb24gb2YgdGhlIHJlbGF0aW9uc2hpcCBhbmQgYWRkZWQgcXVlc3Rpb25zIG9uIGZydWl0IGFuZCB2ZWdldGFibGUgaW50YWtlIHRvIHRoZSBxdWVzdGlvbm5haXJlIG9mIGEgbmF0aW9uYWwgY29ob3J0IHN0dWR5IGhlIHdhcyBjb25kdWN0aW5nIG9uIGFkdWx0IHNtb2tlcnMuSSBleGFtaW5lZCB0aGUgc2NpZW50aWZpYyBsaXRlcmF0dXJlLCBJIHdhcyBzdXJwcmlzZWQgYnkgdGhlIGxhY2sgb2YgbG9uZ2l0dWRpbmFsIHJlc2VhcmNoIG9uIHRoZSB0b3BpYywgZ2l2ZW4gc3VjaCBhbiBleHBhbnNlIG9mIGNyb3NzIHNlY3Rpb25hbCByZXNlYXJjaCBmaW5kaW5ncywgSGFpYmFjaCBzYWlkLiBCZWNhbWUgYXdhcmUgb2YgbXVsdGlwbGUgd2F5cyBpbiB3aGljaCBkaWV0IG1pZ2h0IGluZmx1ZW5jZSBzbW9raW5nIGFuZCBxdWl0dGluZy4gCkkgZ3Vlc3MgcGVvcGxlIGRvbiB1bmRlcnN0YW5kIHRoYXQgYXMgYSBzZXJ2ZXIgeW91IGF0IHRoZSBib3R0b20gb2YgdGhlIHRvdGVtIHBvbGUuIFlhIGl0IHN1Y2tzLCBidXQgeW91IGNob29zaW5nIHRvIHdvcmsgYXQgYSBzaGl0dHkgam9iIHRoYXQgeW91IGRvbiBtYWtlIGdvb2QgbW9uZXkgYXQsIHRoZW4gY29tcGxhaW4gd2hlbiBwZW9wbGUgd2hvIGRvbiBoYXZlIHRvIHRpcCwgZG9uIHRpcCwgYW5kIGhhdmUgYSBnb29kIHJlYXNvbiBmb3IgaXQuCkEgbG9uZyBkYXkgb24gdGhlIGpvYiBtYXkgYmUgZXh0cmVtZWx5IHRpcmluZywgc28gY29taW5nIGhvbWUgZXhoYXVzdGVkIGlzc29tZXRoaW5nIG9yZGluYXJ5LiBTbyB3aGF0IGRvIHlvdSBuZWVkIHRvIGRvIGlmIHlvdSBuZWVkcmVsYXhhdGlvbiBhbmQganVzdCBkb24ndCBoYXZlIHN1ZmZpY2llbnQgdGltZSB0byBnbyB0byBhIG1hc3NhZ2Ugb2ZmaWNlPyBXZWxsLCB0aGUgYW5zd2VyIGlzIGV4dHJlbWVseSBlYXN5LCBnZXQgeW91ciBvd24gbWFzc2FnZXIgb25saW5lLiAKSW5mb3JtYXRpb24gY29sbGVjdGVkIHZpYSBzdWNoIHdlYiBmb3JtcyB3aWxsIGJlIHNlY3VyZWx5IG1haW50YWluZWQgYW5kIGJlIHVzZWQgb25seSBmb3IgdGhlIHB1cnBvc2VzIGZvciB3aGljaCBpdCB3YXMgc3VwcGxpZWQuIFBhZ2VzIGNvbGxlY3Rpbmcgc3VjaCBpbmZvcm1hdGlvbiBzaG91bGQgYmUgdHJhbnNwYXJlbnQgYWJvdXQgdGhlIGluZm9ybWF0aW9uIHRoZXkgYXJlIGNvbGxlY3RpbmcgYXMgd2VsbCBhcyB0aGUgcHVycG9zZSBmb3IgdGhlIGRhdGEgY29sbGVjdGlvbi5BdWJ1cm4gVW5pdmVyc2l0eSBwb2xpY3kgZG9lcyBub3QgYWxsb3cgdGhlIHJlbGVhc2Ugb2YgcGVyc29uYWxseSBpZGVudGlmaWFibGUgaW5mb3JtYXRpb24gdG8gdGhpcmQgcGFydGllcyAob3RoZXIgdGhhbiBpdHMgYWdlbnRzIHdoZW4gcmVxdWlyZWQgZm9yIHVuaXZlcnNpdHkgYnVzaW5lc3MpIGV4Y2VwdCB3aXRoIHBlcm1pc3Npb24gb2YgdGhlIHBlcnNvbiBpZGVudGlmaWVkIG9yIGFzIGFsbG93ZWQgb3IgcmVxdWlyZWQgYnkgbGF3LiAKUmFkc2NvcnBpb25zIGJ1cnJvdyBpbiBGTzQsIG5vdCBOViwgdW5mb3J0dW5hdGVseSwgdGhlcmUganVzdCBoYXBwZW5zIHRvIGJlIGEgaHVnZSBSYWRzY29ycGlvbiBuZXN0IG5lYXIgdGhlIFlhbmd6dGUgbWVtb3JpYWwuIApUaGV5IGRvaW5nIHdoYXQgcGVvcGxlIGhhdmUgZG9uZSBzaW5jZSBvdXIgY291bnRyeSB3YXMgZm91bmRlZC4uIApNZWFucyBwZW9wbGUgd29uIGFjdHVhbGx5IGhhdmUgdG8gYmUgYXQgYW4gZXZlbnQgb3IgYSBnYW1lIHRvIHB1cmNoYXNlIGEgcmFmZmxlIHRpY2tldCBhbmQgc3VwcG9ydCBhIGxvY2FsIGNhdXNlIC4gLiAuIGFuZCBpdCB3aWxsIGFsbG93IGFueSBncm91cCB0byBzZWxsIHRoZWlyIHRpY2tldHMgdG8gYSBtdWNoIHdpZGVyIG1hcmtldC4gYW5kIG5vbiBwcm9maXQgZ3JvdXBzIGhhdmUgdG8gYXBwbHkgdG8gdGhlIEFsY29ob2wgYW5kIEdhbWluZyBDb21taXNzaW9uIG9mIE9udGFyaW8gdG8gZ2V0IGEgbGljZW5jZSB0byBzZWxsIGVsZWN0cm9uaWMgdGlja2V0cy4KTWlrZSBNY0RvbmFsZCAoR1BJMjApIHdhcyB0aGUgZmlyc3QgcGxheWVyIHRvIGNyb3NzIHRoZSAkNE0gbWFyayB0aGlzIHNlYXNvbi4gCkV2ZXJ5IGRheSwgQm9zdG9uIEdsb2JlIGFkdmljZSBjb2x1bW5pc3QgTWVyZWRpdGggR29sZHN0ZWluIHRha2VzIG9uIHRoZSByZWxhdGlvbnNoaXAgcHJvYmxlbXMgb2YgdGhvdXNhbmRzIG9mIGRlZGljYXRlZCByZWFkZXJzLiBUaGV5IGxvb2sgdG8gaGVyIGZvciB3aXNkb20gb24gYWxsIG1hdHRlcnMgb2YgdGhlIGhlYXJ0IHRvIGNvcGUgd2l0aCBkYXRpbmcgZmF0aWd1ZSBhbmQgaW5maWRlbGl0eSwgd29yayByb21hbmNlcywgdGlyZWQgbWFycmlhZ2VzLCB0cnVlIGxvdmUsIGFuZCB0cnVlIGxvc3MuIApUaGUgYnJhbmQgYmVnYW4gdHJ5aW5nIHRvIHJlY2xhaW0gdGhlIHRhZ2xpbmUgbGFzdCBNYXJjaCB3aGVuIGl0IG1vdmVkIGF3YXkgZnJvbSB0aGUgbW9yZSBzZXJpb3VzICJDbGltYiBPbiIgY2FtcGFpZ24gdGhhdCBwb3J0cmF5ZWQgcGVvcGxlIG92ZXJjb21pbmcgY2hhbGxlbmdlcy4gQnV0IHRoZSBmaXJzdCByb3VuZCBvZiBhZHMgd2VyZSBzZXQgZW50aXJlbHkgaW4gdGhlIGJhY2t3b29kcyBhbmQgbW91bnRhaW5zIGluIGFuIGFwcHJvYWNoIHRoYXQgc2VlbWVkIHRhaWxvcmVkIGZvciBuYXR1cmUgZW50aHVzaWFzdHMsIG5vdCBldmVyeWRheSBiYXIgZ29lcnMuLiAKTyBPZGRzIHRoZSBwb3QgaXMgZ2l2aW5nIHlvdSwgZXNwZWNpYWxseSBhcyBibGluZHMgYW5kIGFudGVzIGluY3JlYXNlClRoaXMgc3VicmVkZGl0IHN0YW5kcyBhZ2FpbnN0IGhhdGUgc3BlZWNoLgpBbWFsdGhlYW5zIGFuZCBFc2thdG9uaWNzIGFyZSBib3RoIGNvdW50ZXIgY3VsdHVyYWwgZWxlbWVudHMgd2l0aGluIHRoZSBjaHVyY2gsIGFuZCBnaXZlIGEgbG90IG9mIHJvb20gZm9yIGNoYXJhY3RlcnMgdG8gcGxheSBwcmllc3RzIHdobyBhcmUgbm90IG1vdXN0YWNoZSB0d2lybGluZyBjb25uaXZlcnMuIApXZSBoYXZlIHRoZSBvbmx5IHBpZXIgb24gV2Fpa2lraSBCZWFjaCB3aGljaCBwcm92aWRlcyBlYXN5IGFjY2VzcyB0byBjYXRhbWFyYW4gcmlkZXMgYW5kIEF0bGFudGlzIHN1Ym1hcmluZSBhZHZlbnR1cmVzLiAKSSBwYXJ0IG9mIHRoZSBsb2NhbCBkYW5jZSBjb21tdW5pdHkgYW5kIGV2ZXJ5Ym9keSBpcyB3ZWxsIGF3YXJlIG9mIHRoZSBmYWN0IHRoYXQgc29tZSBwZW9wbGUgcGljayB1cCBkYW5jaW5nIHNwZWNpZmljYWxseSBhcyBhIHdheSB0byBmaW5kIGRhdGVzLiBJdCBtb3N0bHkgbWVuIGxvb2tpbmcgZm9yIHdvbWVuLCBvZiBjb3Vyc2UuIE9yIHNvIGl0IGFsd2F5cyBzZWVtcy4gSSBzcG9rZW4gYWJvdXQgbXkgZGFuY2UgZXhwZXJpZW5jZSB3aXRoIG1hbnkgcGVvcGxlLCBhbmQgSSBvbmx5IGV2ZXIgaGVhcmQsICJBbmQgaXQgYSBncmVhdCB3YXkgdG8gbWVldCB3b21lbiwgSSBiZXQhIiBmcm9tIG1lbi4gCkFwcnMgOCBtb2lzIGplIHJlZmFpcyB1biBkb3NhZ2UgZXQgYXVjdW5lIGFtbGlvcmF0aW9uLiBKZSBmYWlzIGRvbmMgZGVzIHRlc3RzIHNhbmd1aW5zIGV0IG9uIG0nYW5ub25jZSB1bmUgaW50b2xyYW5jZSBhdSBjb2x6YSwgaWwgZW4gYSB0IGRlIG1tZSBwb3VyIGxhIHNhcmRpbmUgKHBybiBjb21tZSBsZSBjb2x6YSBwYXIgdGFudCBkZSBuYXR1cm9zKSBldCBwbGVpbiBkJ2F1dHJlcyBjaG9zZXMgZG9udCBqZSB2b3VzIGZhaXMgZ3JjZS5JbCBzJ2FnaXQgZGUgbGEgbWFycXVlIEQgUGxhbnRlcyBxdWkgdXRpbGlzZSBlZmZlY3RpdmVtZW50IGwnaHVpbGUgZGUgY29semEgY29tbWUgbWRpdW0uIERzb2wgcG91ciBsYSBjb250cmUgcHVibGljaXQgISBKZSBzaWduYWxlIGVuIHBhc3NhbnQgcXVlIGwnaHVpbGUgZGUgY29semEgZXN0IHNvdXBvbm5lIGRlIG4ndHJlIHBhcyB0cnMgImNhc2hlciIsIGMnZXN0IGRlIExvcmdlcmlsIHF1aSBhIGNvbnRyaWJ1ICBsYSBwb3B1bGFyaXNlciBldCBjZSBwZXJzb25uYWdlLCB0cnMgcHN5Y2hvcmlnaWRlLCBhIGx1aSBhdXNzaSB1bmUgdHRlIHF1aSBuZSBtZSByZXZpZW50IHBhcy4gCkU6IFRoZXkgYWxzbyBzcHJlYWQgMS8yIEZMLCB3aGljaCBtYWtlcyBzdXJlIGFsbCBPTUNzIHN0YXkgdGhlcmUgYW5kIGRvbiBnZXQgbWFkIGF0IG1lIHdoZW4gSSBkbyBhIGJsaW5kIHJhaXNlLgpIaXBwb2NyYXRlcywgdGhlIGZhdGhlciBvZiBtZWRpY2luZSwgaXMgc2FpZCB0byBoYXZlIGZyZWVkIEF0aGVucyBmcm9tIHRoZSBwbGFndWUgYnkgYnVybmluZyBhcm9tYXRpYyBwbGFudHMsIGFzIGRpZCBNb3NlcyBhbmQgQWFyb24gaW4gdGhlIGRlc2VydCAoTnVtIDE2OjQ2IDUwKS4uIApQb3VycXVvaSBhbGltZW50ZXIgdW4gZGJhdCBwb2xpdGlxdWUgdm9pcmUgdW5lIGNyaXNlIHBvbGl0aXF1ZSwgYWxvcnMgcXVlIGwnb24gbidlc3QgbW1lIHBhcyBjZXJ0YWluIGRlIHNvbiBpbnRydC4gCjEuIE91ciBpbmNyZWFzaW5nbHkgcG9vciBkaWV0LCBpbmNsdWRpbmcgbm90IG9ubHkgcG9vciBxdWFsaXR5IGZvb2QgaW4gdGhlIGZvcm0gb2YgZmFzdCBmb29kLCBidXQgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgZm9vZCwgYW5pbWFsIHByb2R1Y3RzIHRhaW50ZWQgd2l0aCBjaGVtaWNhbHMsIGRydWdzIGFuZCBoZWF2eSBtZXRhbHMsIG5vdCB0byBtZW50aW9uIHRoZSBkZWNyZWFzZWQgaW5nZXN0aW9uIG9mIHB1cmUsIG9yZ2FuaWMgZnJ1aXRzIGFuZCB2ZWdldGFibGVzIGlzIHZlcnkgbGlrZWx5IGNyZWF0aW5nIGFuIGFkdmVyc2UgZWZmZWN0IG9uIHRoZSBoZWFsdGggb2Ygb3VyIGludGVzdGluZXMuCjI3IE1hciAyMDEzICAgMTYgbWluICAgVXBsb2FkZWQgYnkgRnN0b3BwZXJzLiAKSnVzdCB0byBiZSBjbGVhciwgYmVjYXVzZSB0aGlzIGlzIGEgdG9waWMgSSBjb3VsZCBzdGFuZCB0byBoYXZlIGEgYmV0dGVyIGdyYXNwIG9mLCB0aGUgcmVhc29uIFdhbG1hcnQgY2FuIHVzZSBwb2ludCBvZiBzYWxlIGRhdGEgaW4gdGhlIHNhbWUgd2F5IGlzIHRoYXQgdGhleSBkb24gaGF2ZSBhY2Nlc3MgdG8sIHNheSwgQ29zdGNvIHByYWN0aWNlcyBvbiB0aGUgc2FtZSBsZXZlbCwgYmVjYXVzZSB0aGV5IGRvbiB0aGVtc2VsdmVzIHNlbGwgQ29zdGNvIGdvb2RzIGZvciB0aGVtOyB0aG9zZSB0d28gc3VwZXJtYXJrZXRzIGFyZSBkaXJlY3RseSBjb21wZXRpbmcgc2FsZSBwb2ludHMsIG5vdCBhIGh1YiBmb3IgbXVsdGlwbGUgc2VsbGVycyBvbmUgdGllciBhYm92ZSB0byBjb25ncmVnYXRlLiBXYWxtYXJ0IGFuZCBDb3N0Y28pLi4gClJlY2VudCBVcGRhdGVzICAgVmVyc2lvbiAxLjEuIGZpeCBzdGFydGFwcCBidWcuIDE2IERlYyAyMDE0IC4gVEhFIEtJTkcgT0YgRklHSFRFUlMgJzk4IFVMVElNQVRFIE1BVENIIEZJTkFMIEVESVRJT04gRnJlZSBEb3dubG9hZCBQQyBHYW1lIENyYWNrZWQgaW4gRGlyZWN0IExpbmsgYW5kIFRvcnJlbnQuIFRIRSBLSU5HIE9GLiAyOSBKdW4gMjAxNyAgIDQgbWluICAgVXBsb2FkZWQgYnkgSVNQbGF5VGhlIEtpbmcgb2YgRmlnaHRlcnMgJzk4OiBVbHRpbWF0ZSBNYXRjaCBUaGUgS2luZyBvZiBGaWdodGVycyA5OCBVbHRpbWF0ZSAuIApBbWVyaWNhIHdhcyBoaXQgYnkgJ0h1cnJpY2FuZSBBcnRodXInIHRoYXQgZGF5LiBXaHk/IE1vc3Qgb2YgdGhlIHBlb3BsZSB3aWxsIGNvbnNpZGVyIGl0IGEgbmF0dXJhbCBwaGVub21lbm9uIG9mIG5hdHVyZS4gCkl0IGlzIHVubGlrZWx5IDE1IHllYXIgb2xkIE5pIFNhbmdoZWFyIGlzIGNvbnNpZGVyaW5nIHRoZSBmb3JtIGZvciB0b2RheSBHYWx3YXkgSHVyZGxlLiBUaGUgb25seSByYWNlIHdoaWNoIG9jY3VwaWVzIE5pbm8gdGhpcyBMYWRpZXMgRGF5IGlzIHRoZSByYWNlIGZvciBzdXJ2aXZhbC4uIApUaGUgdmFzdCBtYWpvcml0eSBhcmUgZWl0aGVyIGlycmVsZXZhbnQsIGRlYWQsIG9yIHNpbXBseSBnb25lLiAKR3JhYiB5b3VyIGd1bXMgYmV0d2VlbiB5b3VyIHRodW1iIGFuZCBpbmRleCBmaW5nZXIgICBwbGFjaW5nIHlvdXIgdGh1bWIgb24gdGhlIGluc2lkZSBvZiB5b3VyIGd1bXMgYW5kIHlvdXIgaW5kZXggZmluZ2VyIG9uIHRoZSBvdXRzaWRlICAgdGhlbiBydWIgW3NvdXJjZTogTW90aGVyIE5hdHVyZV0uLiAKQXMgeW91IGNhbiBzZWUsIHNvbWUgYXJlIG1vc3N5LCBzb21lIGFyZSBkYXJrZXIsIHRoaW5uZXIsIGV0Yy4gU28gSSB2YXJpYXRlIGZyb20gdXNpbmcgZnJvbSBteSBwaWxlIHRoYXQgSSBicm9rZSB1cCwgYW5kIGxvb2tpbmcgaW4gbXkgcGxhc3RpYyBiYWcgSSBoYWQgcHV0IHRoZW0gaW4uLiAKRHMgbGUgZGNsZW5jaGVtZW50IGRlIGwnYWxlcnRlLCBkZXMgbWVzc2FnZXMgZCdhbGVydGUgc2Vyb250IGRpZmZ1c3MgdmlhIGxlcyBjaGFuZXMgZGUgdGx2aXNpb24sIGxlcyBzdGF0aW9ucyBkZSByYWRpbywgbGVzIGFnZW5jZXMgZGUgcHJlc3NlLCBsZXMgcGFubmVhdXggIG1lc3NhZ2VzIHZhcmlhYmxlcyBzdXIgbGVzIGF1dG9yb3V0ZXMsIHBhciBtZXNzYWdlcyBzb25vcmVzIGRhbnMgbGVzIGdhcmVzIGV0IGxlcyBzdGF0aW9ucyBkZSBtdHJvLCBhaW5zaSBxdWUgc3VyIGxlcyBzaXRlcyBpbnRlcm5ldCBkJ2Fzc29jaWF0aW9ucyBkZSB2aWN0aW1lczsgZXQgY2UgcGVuZGFudCAzIGhldXJlcy4KMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKUFJPR1JBTSAxICAgU1RVREVOVFMgSU4gRlJFRSBFTlRFUlBSSVNFIChTSUZFKSBPdXIgInRlYW0iIGJhc2VkIHByb2dyYW0gZW1wb3dlcnMgc3R1ZGVudHMgdG8gY3JlYXRlIGVjb25vbWljIG9wcG9ydHVuaXR5IGluIHRoZWlyIGNvbW11bml0aWVzIGJ5IHRlYWNoaW5nIG90aGVycyBhYm91dCBtYXJrZXQgZWNvbm9taWNzLCBlbnRyZXByZW5ldXJzaGlwLCBzdWNjZXNzIHNraWxscywgZmluYW5jaWFsIGxpdGVyYWN5IGFuZCBidXNpbmVzcyBldGhpY3MuIFRlYW1zIGRvIHRoaXMgYnkgaW1wbGVtZW50aW5nIGNvbW11bml0eSBmb2N1c2VkIGFuZCBlbnRyZXByZW5ldXJpYWwgYmFzZWQgcHJvamVjdHMgdGhhdCBoYXZlIGEgbm90YWJsZSBpbXBhY3Qgb24gdGhlIHRhcmdldCBhdWRpZW5jZSBpbnZvbHZlZC4gQUNFIGlzIHRoZSBvZmZpY2lhbCBvcGVyYXRvciBvZiB0aGUgU0lGRSBwcm9ncmFtIGluIENhbmFkYS4gCiJUaGV5IGFwcGVhciB0byBiZSB3ZWxsIG9yZ2FuaXNlZCBhbmQgZXF1aXBwZWQsIiBEZXRlY3RpdmUgSmFzb24gRnJvc3Qgc2FpZC4gClNoZSB3YXMgYSBkZWxpZ2h0ZnVsIGFuZCBmdW4gbG92aW5nIHBlcnNvbiwgc2hhcmluZyBqb3ksIGxhdWdodGVyIGFuZCBsb3ZlIHdpdGggZXZlcnlvbmUuIEFteSBlbmpveWVkIHRyYXZlbGluZyB3aXRoIGhlciBodXNiYW5kLCBKYW1pZSwgYXR0ZW5kaW5nIFJvZCBTdGV3YXJ0IGNvbmNlcnRzIGFuZCBiZWluZyBpbiBjaGFyZ2Ugb2YgdGhlIGZyaWVuZGx5IFdpbHNvbiBGYW1pbHkgRm9vdGJhbGwgUG9vbCAoV0ZGUCkgd2hlcmUgc2hlIHdhcyBrbm93biBhcyAiQ29tbWlzc2lvbmVyIEJ1YmJhLiIgQW15IHdvcmtlZCBmb3IgYSBmZXcgeWVhcnMgd2l0aCB0aGUgQmFybiBEaW5uZXIgVGhlYXRyZSB3aGljaCBnYXZlIGhlciBhIGxpZmVsb25nIGFwcHJlY2lhdGlvbiBmb3Igc3RhZ2UgZW50ZXJ0YWlubWVudC4gClRoZSBicm9hZGNhc3QgaW4gQXRoZW5zIG9mIHRoZSBPY3RvYmVyIDE0LCAyMDEwLCBQcml4IGRlIGwgZGUgVHJpb21waGUgbWFya2VkIHRoZSBkZWJ1dCBvZiBQTVUgcGFydG5lcnNoaXAgd2l0aCBPZGllIGFuZCB3YXMgdGhlIGZpcnN0IHN0ZXAgaW4gYSBjaGFpbiBvZiBldmVudHMgdGhhdCBtaWdodCB1bHRpbWF0ZWx5IHJlc3VsdCBpbiBQTVUgYWNxdWlyaW5nIGl0cyBmaXJzdCBldmVyIGludGVybmF0aW9uYWwgc3Vic2lkaWFyeS4gT24gRGVjZW1iZXIgMiwgMjAxMCwgR2VvcmdlIEt5cmlha29zLCBzcGVjaWFsIHNlY3JldGFyeSBvZiBzdGF0ZSBvd25lZCBlbnRlcnByaXNlcyBhdCB0aGUgR3JlZWsgTWluaXN0cnkgb2YgRmluYW5jZSwgcHJlc2VudGVkIE9kaWUgYXMgYW4gZXhhbXBsZSBvZiBvbmUgb2YgbnVtZXJvdXMgcHJpdmF0aXphdGlvbnMgcGxhbm5lZCB0byByYWlzZSBhIHBvcnRpb24gb2YgdGhlIDU0IGJpbGxpb24gKFVTJDcyLjUgYmlsbGlvbikgcmVxdWlyZWQgZnJvbSBHcmVlY2UgYXMgcGFydCBvZiB0aGUgMTE4IGJpbGxpb24gKFVTJDE1OSBiaWxsaW9uKSBiYWlsIG91dCBvcmNoZXN0cmF0ZWQgYnkgdGhlIElNRi4gVGhlIHBhcnRuZXJzaGlwIGJldHdlZW4gT2RpZSBhbmQgUE1VIGFuZCBGcmVuY2ggaG9yc2UgcmFjaW5nIGFzc29jaWF0aW9ucyBjb3VsZCBkb3VibGUgcmV2ZW51ZXMgYnkgaW5jcmVhc2luZyB0aGUgbnVtYmVyIG9mIHJhY2VzLCBpbnRyb2R1Y2UgYSA1MC81MCBtaXggb2YgR3JlZWsgYW5kIEZyZW5jaCBwcm9kdWN0cywgaW5jcmVhc2UgT2RpZSBwaHlzaWNhbCBuZXR3b3JrIHRvIDEsMDAwIHBvaW50cyBvZiBzYWxlLCBhbmQgbGV2ZXJhZ2UgUE1VIG1hcmtldGluZyBleHBlcnRpc2UgdG8gYnJvYWRjYXN0IHJhY2VzIG9uIGEgbmV3LCBkZWRpY2F0ZWQgbmF0aW9uYWwgdGVsZXZpc2lvbiBjaGFubmVsLiBHcmVlY2UgYWxzbyBwbGFubmVkIGNoYW5nZXMgdG8gaXRzIEludGVybmV0IGdhbWluZyBsYXdzIGluIGhvcGVzIG9mIHRhcHBpbmcgaW50byB0aGUgZXN0aW1hdGVkIDQuMyBiaWxsaW9uIChVUyQ1LjggYmlsbGlvbikgSW50ZXJuZXQgZ2FtaW5nIGJsYWNrIG1hcmtldC4KSSBhbSBmdWxseSBxdWFsaWZpZWQgaW4gUmVpa2kgbGV2ZWwgMSAyIHBsdXMgb2J0YWluaW5nIG15IFJlaWtpIE1hc3RlcnMgRGlwbG9tYS4KU29vbyBqdXN0IHRvIHN1bSB1cCwgbm8sIGl0IG5vdCAidW5kZXJzdGFuZGFibGUiIHRvIG5vdCB3YW50IGEgc2V4dWFsIHByZWRhdG9yIHRvIGdvIHRvIGphaWwgZXZlbiBpZiBoZSB5b3VyIGtpZCwgSSBkb24gY2FyZSwgYW5kIGFsc28gc2V4dWFsIHByZWRhdG9ycyBsaXZlcyBzaG91bGQgYmUgcnVpbmVkLCB0aGF0IGFsbCwgdGhlIGVuZC4KTm91cyBhYmFuZG9ubmVyb25zIGxlIHNlbnMgcHJlbWllciBxdWkgbmUgbm91cyBpbnRyZXNzZSBwYXMgaWNpLiBFbiBjZSBxdWkgY29uY2VybmUgbGUgc2VucyBkZXV4aW1lLCBxdWVsIHJhcHBvcnQgcGV1dCBpbCBleGlzdGVyIGVudHJlIGNlcyBkZXV4IG1vdHMgPyBQcmVub25zIGwgZHUgcG9pdnJlLiBBdSBNb3llbiBnZSwgaWwgZGV2aWVudCByYXBpZGVtZW50IHVuZSBtb25uYWllIGQnY2hhbmdlLiAKU28gd2h5IGlzIHRoaXMgc28gaW1wb3J0YW50PyBXZWxsLCBpZiB5b3Uga25vdyByb3VnaGx5IGhvdyBhY2NlcHRhYmxlIGRvIG92ZXJzIGFyZSBpbiB5b3VyIGdhbWUsIHlvdSBjYW4gYWRhcHQgeW91ciBzdHJhdGVneSB0byB0YWtlIGFkdmFudGFnZSBvZiBpdC4gClRoaXMgcGVyc29uIGhhZCB0byBjb21lIHVwIHdpdGggdGhhdCBtb25leSBzaW5jZSB0aGUgaW5zdXJhbmNlIGRpZG4ga2ljayBpbi4gSWYgeW91IGhhdmUgdGhlICQxMDAwIGluIGFuIGVtZXJnZW5jeSBmb3VuZCBJIHdvdWxkIGdvIGFoZWFkIGFuZCBkbyB0aGF0IGJ1dCBpZiB5b3UgZG9uIFNUSUNLIFRPIFdIQVQgWU9VIEhBVkUuLiAKSWYgaGUgaGFkIG5vdCBiZWVuIHNpY2sgdGhhdCBtb3JuaW5nLCBQaXBoZXIgc2F5cywgdGhlIGZhbWlseSBoYWQgYmVlbiBwbGFubmluZyBvbiB0cmF2ZWxsaW5nIHRvIGFub3RoZXIgaXNsYW5kLCBvbmUgd2hpY2ggZW5kZWQgdXAgYmVpbmcgYW1vbmcgdGhlIHdvcnN0IGhpdCBpbiBUaGFpbGFuZC4uIApUaGVzZSBnZWFycyB3b3VsZCBoYXZlIHRoZSBzYW1lIHJvdGF0aW9uYWwgdmVsb2NpdHkuIApIb3dldmVyLCB0aGUgaWRlYSB0aGF0IHdlIGNlbnNvciBvciByZW1vdmUgYWxsIHBvc3RzIHRoYXQgbWFrZSB0aGUgZ2FtZSBsb29rIGJhZCBpcyBub3QgdHJ1ZSBhbmQgd2Ugd2lsbCBkZWZlbmQgb3Vyc2VsdmVzIGhlcmUuIFdlIGJlbGlldmUgdGhhdCBqdXN0IGFzIG11Y2ggZ29vZCBjb250ZW50IHRoYXQgaXMgcHJvZHVjZWQgb24gdGhlIHN1YnJlZGRpdCwgdGhlcmUgZG9lcyBuZWVkIHRvIGJlIHRoZSBwb3N0cyB0aGF0IGVubGlnaHRlbiB0aGUgaXNzdWVzIGluIHRoZSBnYW1lLiBJdHMgYW4gaW1wb3J0YW50IGZhY3RvciB0aGF0IHRoZSBjb21tdW5pdHkgaXMgYXdhcmUgb2YgdGhlc2UgcG9zdHMgdGhhdCBlbmxpZ2h0ZW4gdGhlc2UgaXNzdWVzIGFzIHRoaXMgaGVscHMgaW1wcm92ZSB0aGUgZ2FtZSBpbiB0aGUgbG9uZyBydW4uIAoxKSBTaGUgYW4gdW5rbm93biAoaW4gdGhlIE1DVSkgYW5kIHdhcyBhbHJlYWR5IGJyaW5nIGRlc2NyaWJlZCBhcyAibW9yZSBwb3dlcmZ1bCB0aGFuIFRoYW5vcyIuIFNpbmNlIHdlIGFscmVhZHkga25vdyBzaGUgaXMgZ29pbmcgdG8gYmUgaW4gdGhlIG5leHQgSW5maW5pdHkgV2FyIGZpbG0sIHRoYXQgZ2l2ZXMgYSBsb3Qgb2YgcGVvcGxlIHdvcnJpZXMgc2hlIGlzIGdvaW5nIHRvIGJlIHNvbWUgb3ZlcnBvd2VyZWQgU3VwZXJtYW4gZXhweSB3aG8gdHJpdmlhbGl6ZXMgdGhlIGFjdCBvZiBkZWZlYXRpbmcgVGhhbm9zIGFzIGEgZGV1cyBleCBtYWNoaW5hLi4gCkkgZG9uIHdhbnQgdG8gc2F5IHRoYXQgc2l6ZSBtZWFucyBub3RoaW5nLCBJIGFsc28gYWdyZWUgd2l0aCBhbm90aGVyIGNvbW1lbnRlciB3aG8gbWVudGlvbmVkIHRoYXQgdGhlcmUgaXMgc3VjaCBhIHRoaW5nIGFzIFRPTyBiaWcgYXMgd2VsbC4gClRpY2tldHMgYXJlIGdvaW5nIHRvIGNvc3QgZXZlbiBtb3JlIHdoZW4gdGhhdCB0aW1lIGNvbWVzIGJ1dCB0aGF0IGlzbiBnb2luZyB0byBzdG9wIG1lLCB0aGUgbWVtb3JpZXMgYWxvbmUgd2lsbCBiZSBwcmljZWxlc3MuLiAKTWFkIE1lbiBzdGFuZCBkb3duOiBUaGUgbGF3IHByb2hpYml0cyBhZHZlcnRpc2luZyBtYXJpanVhbmEgb3IgZG9pbmcgYW55dGhpbmcgdG8gZW50aWNlIG9yIHByb21vdGUgaXRzIHVzZSBhbW9uZyB5b3VuZyBwZW9wbGUuIApXZSBoYXZlIG5vdGVkIHlvdXIgY29tbWVudHMgYW5kIHRoZSBjb25jZXJucyBtZW50aW9uZWQgaW4gZGV0YWlsLiAKV2hlbiB5b3UgbGVhcm4gdG8gcGxheSB0ZXhhcyBob2xkIGVtIG9ubGluZSBwb2tlciB5b3Ugd2lsbCByZWFsaXplIHRoYXQgaXQgaXMgc3VjaCBhIGJlYXV0aWZ1bCBnYW1lIHdpdGggYWxsIGtpbmRzIG9mIHN0cmF0ZWdpZXMgdGhhdCB5b3UgbmVlZCB0byBkbyBzbyB0aGF0IHlvdSBuZWVkIHRvIGxlYXJuLiAKWW91ciB3aWZlIHdhcyBzdXBwb3J0aXZlIGJ5IGhlbHBpbmcgeW91IGRlYWwgd2l0aCB5b3VyIGNoaWxkaG9vZCBpc3N1ZXMuIApUaGlzIHNob3VsZCBub3QgYmUgdGFrZW4gYXMgY3JpdGljaXNtIG9mIHRoZSBPUC4gCjEuIFByZXNpZGVudCBKYWNvYiBadW1hIGlzIHN0dWNrIGluIGEgcm9jayBhbmQgYSBoYXJkIHBsYWNlLiBIZSBoYXMgdG8gZmFjZSB0aGUgZmFjdCB0aGF0IHdoZW4gaGUgbGVhdmVzIHBvd2VyIHRoZXJlIGlzIGdvaW5nIHRvIGJlIGEgY2hhbmdlIG9mIG1lbnRhbGl0eSB3aXRoaW4gdGhlIEFOQyBhbmQgcG9zc2libHkgYSBjbGVhbnNpbmcgb2YgdGhlIHJvdCB3aXRoaW4gaXRzIGNhdWN1cy4gCkkgbmV2ZXIgZ290IG9uIGNvbW1zIGluIEhvcmRlIGJlY2F1c2UgbXkgcGxhbiB3YXMganVzdCB0byB1c2UgaG9yZGUgc3BhY2UgdG8gZ3JpbmQgZm9yIGFuIGlzayBjdXNoaW9uIHRvIGZ1bmQgc29sbyBwdnAgYW5kIG1heWJlIGEgdGl0YW4uIApUaGluayA1IG1vbnRocyBvZiB2YWNhdGlvbiBwZXIgeWVhciB2cyAxMCBkYXlzLiBBbHNvLCBpZiB5b3UgZ2V0IHRoZSBNQSBURVNPTCB0aGUgVEVGTCBjZXJ0IGlzIHV0dGVybHkgd29ydGhsZXNzIGFuZCB5b3UgY291bGQgc2F2ZSB5b3VyIG1vbmV5Li4gClNoZSBoYWQgcHJldmlvdXNseSBjb21wbGV0ZWQgYSBNYXN0ZXJzIG9mIENvdW5zZWxsaW5nIFBzeWNob2xvZ3kuIEZvciB0aGUgbWFqb3JpdHkgb2YgaGVyIDEwIHllYXJzIGF0IHVuaXZlcnNpdHksIHNoZSBoYXMgYmVlbiBhIG1hdHVyZWQgYWdlZCBzdHVkZW50LiAKM0EgQUMgVGhyZWUgdGllciA6IEFpciBjb25kaXRpb25lZCBjb2FjaGVzIHdpdGggc2xlZXBpbmcgYmVydGhzLiAKR29yZG9uIGdhdGUgc2V0dXAgdjIuMi4wLjUgKHVzYiBmbGFzaCBkcml2ZXIgc2UpIC4gTW92aWUgbXAzIHNvbmdzIGRvd25sb2FkaW5zdG1hbmtkaWwgZG9zdGkgZXRjIGZ1bGwgbW92aWUgaGQgZG93bmxvYWRnb2xrZXNtYXhpbSBiaWxsZXIuIApUaGV5IGVuY291cmFnZSB5b3UgdG8gYnJpbmcgc25hY2tzLCBkcmlua3MsIGFuZCBjb2RpbmcgbWFjaGluZXMsIHNvIGl0IHNlZW1zIHByZXR0eSByZWxheGVkLiBWZXJ5IGxpbWl0ZWQgZGV0YWlscyBvbiB0aGUgc2l0ZSwgc28gaWYgYW55IG9mIHlvdSBjYW4gYWRkIHRvIHRoZSBldmVudCwgbGV0IG1lIGtub3csIGkgZWRpdC4uIApJIHdpc2ggaXQgd2FzIHdpdGhvdXQgYW55IGhpY2N1cCBidXQgaXQgaXMgbmljZSB0byBrbm93IGl0IHdhcyByZXNvbHZlIGltbWVkaWF0ZWx5LiAKUGFya2luZyBhdCBTdW5ueWJyb29rOyBwbGVhc2UgcGFyayBpbiBHYXJhZ2UgMSwgbGFyZ2UgZ2FyYWdlIGluIGNlbnRyZSBzZWN0aW9uLiAKSW5tYXRlIFVuZm9yZ2V0dGFibGUgUGljayBVcCBMaW5lIFVubGVhc2hlZCBJbiBDb3VydCBbVklERU9dVGhlIGlubWF0ZSBpcyBzbyBwcm91ZCBvZiB0aGlzIHBpY2sgdXAgbGluZSwgaGUgZ2l2ZXMgdGhlIGRvdWJsZSBwb2ludCBhbmQgbm9kIHRvIHRoZSBwcm9zZWN1dG9yIGFzIHNoZSBzYXlzIGl0LCBtaW1pbmcgbGlrZSwgIm9oIHllYWgsIHRoYXQgbXkgbGluZS4iCkl0IHdhcyBzYWlkIHRoYXQgaGlzIHdpZmUgY29udGludWVkIHRvIHdvcmsgYXQgdGhlIGJhciB1bnRpbCBoZXIgZGVhdGggYWJvdXQgZml2ZSB5ZWFycyBsYXRlci4uIApUaGV5IGNoYXNlZCBoaW0gYW5kIHRyaWVkIHRvIG5haWwgaGltIGRvd24gZm9yIHllYXJzLiBFdmVuIHB1dCBoaW0gdXAgb24gdGhlaXIgVG9wIFdhbnRlZCBMaXN0IG9uIE1heSAyOHRoIDE5NTYsIGF0IG51bWJlciBuaW5ldHkgZWlnaHQsIHdoZXJlIGhlIHdvdWxkIHJlbWFpbiBmb3IgdHdvIHllYXJzLiBIZSBtYXkgd2VsbCBoYXZlIGJlZW4gdGhlIG9uZSBhbmQgb25seSBJdGFsaWFuIEFtZXJpY2FuIG1vYiBndXkgd2hvIGdyYWR1YXRlZCBpbnRvIHRoaXMgZWNjZW50cmljIGNhdGFsb2d1ZSBvZiBtb3N0IHdhbnRlZCBjcmltaW5hbHMgKGF0IGxlYXN0IHVudGlsIHRoZSBpbmNsdXNpb24gb2YgQ2xldmVsYW5kJ3MgQW50aG9ueSBMaWJlcmF0b3JlIHR3ZW50eSBvbmUgeWVhcnMgbGF0ZXIpIGFuZCB0aGVuIHN0YXllZCB0aGVyZSBsb25nZXIgdGhhbiBtb3N0IG9mIHRoZSBjb21tb24gb3IgZ2FyZGVuIHRodWdzLCBzZXJpYWwga2lsbGVycywgcm9iYmVycyBhbmQgdHJhZGl0aW9uYWwgbWFsY29udGVudCBhbmFyY2hpc3RzIHRoYXQgdHJhZGl0aW9uYWxseSBwb3B1bGF0ZWQgaXRzIGFyY2hpdmVzLi4gClBoaWwgSXZleSwgYSBsZWFkaW5nIHBva2VyIHBsYXllcixoYXMgbG9zdCBhIFN1cHJlbWUgQ291cnQgY2hhbGxlbmdlIG92ZXIgaGlzIDcuNyBtaWxsaW9uIHdpbm5pbmdzIGZyb20gYSBMb25kb24gY2FzaW5vLgpUaGUgT250YXJpbyBMb3R0ZXJ5IGFuZCBHYW1pbmcgQ29ycG9yYXRpb24sIGtub3duIGZvciBjb3Jwb3JhdGUgYnJhbmRpbmcgcHVycG9zZXMgc2ltcGx5IGFzIE9MRyBzaW5jZSAyMDA2LCBpcyBhIENyb3duIENvcnBvcmF0aW9uIG9mIHRoZSBHb3Zlcm5tZW50IG9mIE9udGFyaW8sIENhbmFkYS4KVGhhdCB0YW50YWxpemluZyBkaW1wbGUgYXQgdGhlIGJhc2Ugb2YgaGlzIHNwaW5lIG9yIHRoZSB0ZW5kZXIgc3BvdCBiZWhpbmQgaGVyIGVhciBjb3VsZCBkZWZpbml0ZWx5IHVzZSBzb21lIGF0dGVudGlvbi4gQSBsaXR0bGUgVExDIGluIHRoZSByaWdodCBzcG90IG1pZ2h0IGV2ZW4gbGVhZCB0byBhbiBhZnRlcm5vb24gd29ydGh5IG9mIGEgIkRlYXIgRGlhcnkiIGVudHJ5Li4gCklNTyB3ZSBhcmUganVzdCBhIGNvdXBsZSB5ZWFycyBhd2F5IGZyb20gY29udGVuZGluZy5FZGl0OyB0aGUgImNvdXBsZSB5ZWFycyIgaXMgYXNzdW1pbmcgS1AgY29tZXMgYmFjayBoZWFsdGh5IGFuZCBhdCBoaXMgZm9ybWVyIGxldmVsLiBBbHNvLCBpZiB0aGUgTWF2cyBoYXBwZW4gdG8gbGFuZCBhIFRpZXIgMSBvciBUaWVyIDIgRkEgdGhpcyBvZmZzZWFzb24gdGhhdCBwdXRzIHVzIGludG8gY29udGVudGlvbiBuZXh0IHllYXIuIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ29NYXkgSSBzdWdnZXN0IHlvdSBkb24gYm90aGVyLiAKVGhlcmUgYXJlIHNvbWUgb3RoZXIgY29udHJpYnV0aW9ucyAocGVuc2lvbiwgc29saWRhcml0eSB0YXgsIGNodXJjaCB0YXgpLCBhbmQgYWxsIG9mIHRob3NlIHNjYWxlIHdpdGggeW91ciBpbmNvbWUuIAp7IHBob25lIH0KIkkgZGVmaW5pdGVseSBkaWRuJ3Qga25vdyB0aGF0IENJQkMgd2FzIGEgcGxhY2Ugd2hlcmUgSSBjb3VsZCBoYXZlIHN1Y2ggYSBwb3NpdGl2ZSBjb250cmlidXRpb24gaW4gY29tbXVuaXR5IGJ1aWxkaW5nLCIgc2F5cyBHb3VpbmxvY2suICJFdmVuIHRob3VnaCBJIGRvbid0IGhhdmUgYSB0eXBpY2FsIGJhbmtlcidzIGJhY2tncm91bmQsIGl0J3MgYSBwbGFjZSB3aGVyZSBJJ3ZlIGRpc2NvdmVyZWQgSSBjYW4gZ3JvdyBhbmQgZGV2ZWxvcC4gClRoZSB3b3VsZCBiZSB0aGllZiBjbGVhcmx5IGtub3cgdGhpcy4gV2h5IHdvdWxkIGhlIHJ1biB0byB0aGUgcmlnaHQgc2lkZSBvZiB0aGUgY2FyLCBrbm93aW5nIGhlIGNhbiBkcml2ZSBpdCBmcm9tIHRoYXQgc2lkZT8gSSBub3QgYWN0dWFsbHkgc3VyZSwgYnV0IEkgc3VzcGVjdCB0aGlzIG1heSBiZSBhIGNvbnZlbnRpb25hbCByb2JiZXJ5IG9yIGV2ZW4gYSBob3N0YWdlIHRha2luZyBzaXR1YXRpb24sIGFuZCBub3QgYSBjYXJqYWNraW5nLiAKSSBhbSBhIGJvdCwgYW5kIHRoaXMgYWN0aW9uIHdhcyBwZXJmb3JtZWQgYXV0b21hdGljYWxseS4gUGxlYXNlIGNvbnRhY3QgdGhlIG1vZGVyYXRvcnMgb2YgdGhpcyBzdWJyZWRkaXQgaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyBvciBjb25jZXJucy4KSWYgeW91IGZlZWwgdGhpcyB3YXMgZG9uZSBpbiBlcnJvciwgd291bGQgbGlrZSBjbGFyaWZpY2F0aW9uLCBvciBuZWVkIGZ1cnRoZXIgYXNzaXN0YW5jZSwgcGxlYXNlIC4gUGxlYXNlIGNoZWNrIHdpdGggdGhlIG1vZGVyYXRvcnMgZmlyc3QgYmVmb3JlIHJlcG9zdGluZyB0aGlzIHRvcGljLiAKVGhlIE9udGFyaW8gQ291cnQgb2YgQXBwZWFsIHN0cnVjayBkb3duIHRoZSBzZWN0aW9uIHRoYXQgZm9yYmlkcyBicm90aGVscywgYnV0IGl0IHVwaGVsZCBhIGJhbiBvbiBjb21tdW5pY2F0aW9uIGZvciB0aGUgcHVycG9zZXMgb2YgcHJvc3RpdHV0aW9uLCB3aGljaCBtYWtlcyBzdHJlZXQgcHJvc3RpdHV0aW9uIGlsbGVnYWwuCiJEZXRlY3RpdmVzIGFyZSBzY2F0dGVyZWQgaW4gYWxsIGRvd250b3duIHN0b3JlcyBub3cgYW5kIHdpbGwgYmUgdW50aWwgYWZ0ZXIgdGhlIGhvbGlkYXlzLiAKSSB0aGVuIHVzZWQgbXkgc25pcGVyIHRvIHRha2Ugb3V0IHR3byBvZiB0aGUgZmxhbmtpbmcgbXV0b25zLCB3aGljaCBoYWQgbm8gYXZhaWwgYmVjYXVzZSBhbm90aGVyIHBvZCBkZWNpZGVkIHRvIGNoZWNrIG91dCB0aGUgYWN0aW9uLi4gClRoaXMgcHJvYmxlbS9saWUgd2hhdGV2ZXIgbWF5IGJlIGVmZmVjdGluZyBhIHdob2xlIGZhbWlseSAoa2lkcykuIApIZSBiZWVuIHRyeWluZyB0byBnZXQgbWUgYmFjayBmb3IgYXdoaWxlIGJ1dCBoZSBub3QgYSBnb2RseSBtYW4gbmV2ZXIgd2FzIGFuZCBJIG5vdCBpbnRlcmVzdGVkIGluIHJlcGVhdGluZyB0aGF0IG1pc3Rha2UuIEkgdmVyeSBpbiBsb3ZlIHdpdGggdGhpcyBvdGhlciBtYW4gYW5kIGhhdmUgYSBkZWVwIGhlYWx0aHkgYm9uZCB3aXRoIGhpcyBlbnRpcmUgZmFtaWx5LiAKTXkgYmVzdCBmcmllbmQgaGFkIHR3aW4gYnJvdGhlcnMgdGhhdCBwYXNzZWQgYXdheSBvbmUgZGF5IGFuZCBvbmUgbW9udGggYWZ0ZXIgdGhlaXIgYmlydGgsIHJlc3BlY3RpdmVseS4gSGUgKHRoZW4gYWJvdXQgeWVhcnMgb2xkKSBhbmQgc29tZSBmYW1pbHkgbWVtYmVycyB3ZXJlIHNpdHRpbmcgZ3JhdmVzaWRlIGFuZCBhdHRlbmRpbmcgdGhlIGZ1bmVyYWwgb2YgdGhlIGZpcnN0IHdoZW4gdGhleSByZWNlaXZlZCBhIGNhbGwgdGVsbGluZyB0aGVtIHRvIGhhbHQgdGhlIGZ1bmVyYWwgYmVjYXVzZSB0aGV5IG5lZWRlZCB0byBnZXQgdG8gdGhlIGhvc3BpdGFsIHRvIHNheSBnb29kYnllIHRvIHRoZSBvdGhlciBvbmUuIFRoZXkgcnVzaGVkIHRvIHRoZSBob3NwaXRhbCwgc2FpZCBnb29kYnllLCBhbmQgaGlzIG1vdGhlciBoZWxkIHRoZSBiYWJ5IHdoaWxlIGhlIGRpZWQuCk5ldmVyIHRob3VnaHQgSSBsb29rIGdvb2QgaW4gYnJpZ2h0IHllbGxvdyBzeW50aGV0aWMgZmFicmljcywgYnV0LCBoZXksIHRoYXQgbGlmZS4uIApXZSBtZWFuIG9ubHkgdG9waWNzIGFza2luZyBmb3IgYW4gYW5zd2VyIHRoYXQgd2lsbCBhaWQgc29tZW9uZSBpbiBjb21taXR0aW5nIHN1aWNpZGUgb3IgaGFybWluZyBvdGhlcnMuIFRoZXNlIHF1ZXN0aW9ucyBhcmUgbm90IGFsbG93ZWQuIEFuc3dlcmluZyBhIHF1ZXN0aW9uIHdpdGggYSByZWFsIGFuc3dlciBvbiBob3cgdG8gYWNjb21wbGlzaCBzZWxmIGhhcm0gb3IgaGFybSBvZiBvdGhlcnMgT1IgdGVsbGluZyB0aGUgT1AgdG8gZG8gaXQgd2lsbCByZXN1bHQgaW4gYSBwZXJtYW5lbnQgYmFuLiAKVGhlIGRpZmZlcmVuY2UgaW4gY29sb3IgYmV0d2VlbiB0aGUgc3BvdHMgaXMganVzdCB0byBtYWtlIGl0IGVhc2llciBmb3IgeW91IHRvIHRlbGwgd2hpY2ggdGlsZXMgeW91J3ZlIGJlZW4gZGVhbHQsIGFuZCBpdCBpbiBubyB3YXkgYWZmZWN0cyBob3cgdGhlIHRpbGVzIGFyZSB1c2VkLiAKTmljaHQgbnVyIGRhc3MgZXMgZHJhdWVuIDM2IEdyYWQgaGF0LCBuZWluLCBkYSBnZWh0IG1pciBhdWNoIG5vY2ggbWVpbmUgS2xpbWFhbmxhZ2UgZWluLiAKRXZlbiBzbywgSSBjYW4gaGVscCBidXQgbG92ZSB3aGF0IHdlIGdvdCBmb3IgdGhpcyBzZXJpZXMuLiAKTWFrZSBzdXJlIHRvIHJlYWQgYWxsIHRoZSBncmVhdCBpbmZvcm1hdGlvbiB3ZSBoYXZlIG9uIG9ubGluZSBkYXRpbmcgZm9yIENocmlzdGlhbnMuIApJZiB5b3Ugd2FudCB0byBwb3N0IGFib3V0IGEgc3BlY2lmaWMgc2NhbSBzaXRlIGl0IG5lZWRzIHRvIGJlIHNvbWV3aGF0IHBvcHVsYXIsIHJlY2VudCwgbm90IGFscmVhZHkgY292ZXJlZCBpbiBhIHByZXZpb3VzIHBvc3QsIG5vdCBkaXJlY3RseSBsaW5rZWQgdG8gYW5kIGluY2x1ZGUgbW9yZSBpbmZvcm1hdGlvbiB0aGFuIGp1c3QgIlggaXMgYSBzY2FtIiAgRXhhbXBsZSBvZiBhIGdvb2Qgc2NhbSBzaXRlIGF3YXJlbmVzcyBwb3N0LgpPdGhlciBmYW1pbHkgbWVtYmVycyBiZWdpbiBnaXZpbmcgdHJ1ZSBzdGF0ZW1lbnRzIGFib3V0IGZpcmVzIHRoZXkgb3JpZ2luYWxseSBzYWlkIG5ldmVyIGhhcHBlbmVkLgpUaGUgYWN0IGNhbiBoZWlnaHRlbiB0aGUgc3RyZW5ndGggb2Ygb3JnYXNtcywgcHJvbXB0IHlvdSB0byBjb25jZW50cmF0ZSBmdWxseSBvbiBhbGwgdGhlIHNlbnNhdGlvbnMgeW91J3JlIGZlZWxpbmcsIGFuZCBoZWxwIHlvdSBjb250cm9sIHRoZSBwb2ludCBhdCB3aGljaCB5b3UgY2xpbWF4LgpJdCB3YXMgYXMgaWYgaGUgd2FzIHJlbGl2aW5nIHNvbWV0aGluZyB0cmF1bWF0aWMgaW4gaGlzIG1pbmQuIEl0IG1hZGUgbWUgc2FkIGJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBpIGhhZCB0byByZW1pbmQgbXlzZWxmLCAiZG9udCBzdGFydCBub3RoaW4sIHdvbnQgYmUgbm90aGluLiIgTXkgYmlnZ2VzdCBhbm5veWFuY2Ugd2l0aCBrb2VhbnMsd2hlcmUgaSBoYXZlIGxpdmVkIGZvciBhbG1vc3QgMTAgeWVhcnMsIGlzIHRoYXQgdGhleSBibGFtZSBqYXBhbiBmb3IgYWxsIHRoZXNlIHRoaW5ncyB0aGF0IGhhcHBlbmVkLCBhbmQgdGFrZSAwIHJlc3BvbnNpYmlsaXR5IGZvciBhbnkgb2YgaXQuIEl2ZSBiZWVuIGhlcmUgbG9uZyBlbm91Z2ggdG8gbGVhcm4gaG93IGEgbG90IG9mIHRoZW0gdGhpbmssYW5kIGl2ZSByZWFkIGVub3VnaCB0byBrbm93IHRoYXQgZnJvbSBhIGZldyB5ZWFycyBiZWZvcmUgd3cxIHVudGlsIDE5NDUsIGtvcmVhIGRpZG50IGV4aXN0LCBpdCB3YXMgYSBwYXJ0IG9mIHRoZSBlbXBpcmUgb2YgamFwYW4uIApZYS4gSSdtIHN1cmUgSSdsbCBzdGFydCBkcmlmdGluZyB0byB0aGUgcmlnaHQgYW55IGRheSBub3cuICAxOSBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkkgYW0gb24gdGhlIGludGVybmV0IGFueXdheSwgbWlnaHQgYXMgd2VsbCBzcGVhayB0byBvbGQgZnJpZW5kcyBhbmQgc2VlIHdoYXQgdGhleSBhcmUgZG9pbmcuIApQcm9wZXJ0eSBUYXhlcyBhcmUgYXNzZXNzZWQgaW4gSmFudWFyeSBldmVyeSB5ZWFyLiBSYXRlcyBhbGwgZGVwZW5kIG9uIHRoZSBwcm9wZXJ0eS4gClBva2VyIGhpbmdlZ2VuLCBoYXQgZWluZW4gU2tpbGxhbnRlaWwgdm9uIDAsNCB1bmQgbGllZ3Qgc29taXQgbGF1dCBWYW4gZGVyIEdlbnVndGVuIHNlaHIgbmFoZSBiZWkgU2NoYWNoIG9kZXIgQnJpZGdlLCB6d2VpIFNwaWVsZW4gZGllIHZvbiBqZWRlbSBHZXNldHpnZWJlciB1bmJlc3RyaXR0ZW4gYWxzIFNraWxsZ2FtZXMgYW5nZXNlaGVuIHdlcmRlbi4KQXMgbWVudGlvbmVkIHByZXZpb3VzbHksIHRoZSBzdG9yeSBiZWhpbmQgdGhlIHBva2VyIGNoaXBzIHRoYXQgeW91IG93biBoZWxwcyBhZGQgdG8gdGhlaXIgdmFsdWUuIEluIG1hbnkgY2FzZXMsIHRoZSBhY3R1YWwgcmFyaXR5IG9mIHRoZSBwcm9kdWN0IG1heSBoZWxwIHRvIGRldGVybWluZSB0aGUgdmFsdWUgYXMgd2VsbC4gCkRhZCBjYW1lIHVwIHRvIG15IHJvb20gYW5kIHNhaWQgIkkgdGFrZSB0aGF0IG5vdGVib29rLiIgSGUgdGhlbiB0b29rIG15IHByZWNpb3VzIGNvbGxlY3Rpb24gYW5kIHRocmV3IGl0IGludG8gdGhlIGZpcmVwbGFjZSByaWdodCBpbiBmcm9udCBvZiBtZS4gSSBmZWx0IGxpa2UgSSBjb3VsZCBoZWFyIHRoZWlyIHNjcmVhbXMuIFhECkNvdWxkIHRoZXJlIGJlIGEgYmFja2dyb3VuZCBwcm9jZXNzIHRoYXQgcnVubmluZz8gSGF2ZSB5b3UgY2hlY2tlZCBUYXNrIE1hbmFnZXIgbG9ncyBkdXJpbmcgYSBzZXNzaW9uPyBJdCBzaG91bGQgcmVjb3JkIHRoZSBzcGlrZSBpbiBjcHUvZ3B1L3doYXRldmVyIGFuZCBhdCBsZWFzdCBwb2ludCB5b3UgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbi4gSXQgbWlnaHQgYmUgYW4gYXBwbGljYXRpb24sIHRhc2sgb3IgYSBjaGVla3kgdXBkYXRlIHRoYXQgdHJpZ2dlcmluZyBpdCAoZG9lcyBpdCBoYXBwZW4gYXQgY2VydGFpbiB0aW1lcz8pLiAKU3RyYXRpYSBDK0MgKFQsIFRoLCBTYXQ7IEkgbG92ZSB0aGlzIHByb2R1Y3QuIEkndmUgdHJpZWQgYSBmZXcgVml0IEMgcHJvZHVjdHMgYW5kIHRoaXMgb25lIGNvbWJpbmVkIHdpdGggdHJldCBoYXMgbWFkZSBhIHByZWduYW5jeSBtZWxhc21hIHRoYXQgbmV2ZXIgd2VudCBhd2F5IGFsbW9zdCBjb21wbGV0ZWx5IGRpc2FwcGVhciBpbiB0d28gYW5kIGEgaGFsZiBtb250aHMuIERlZmluaXRlIHJlcHVyY2hhc2UuKQpIZSBoYXMgdGhlIHJpZ2h0IGFuZCBwb3dlciB0byBkbyB0aGF0LiJXaGlsZSBTZW5hdGUgTWFqb3JpdHkgTGVhZGVyIE1pdGNoIE1jQ29ubmVsbCBhbmQgbW9zdCBTZW5hdGUgUmVwdWJsaWNhbnMgYXBwZWFyIHJlYWR5IHRvIHNpZGUgd2l0aCB0aGUgcHJlc2lkZW50LCBNY0Nvbm5lbGwgICB3aGVuIGFza2VkIFR1ZXNkYXkgd2hldGhlciBoZSBiZWxpZXZlcyBUcnVtcCdzIGVtZXJnZW5jeSBkZWNsYXJhdGlvbiBpcyBsZWdhbCAgIHNhaWQgaGUgZGlkbid0IGtub3cuIldlJ3JlIGluIHRoZSBwcm9jZXNzIG9mIHdlaWdoaW5nIHRoYXQsIiBoZSB0b2xkIHJlcG9ydGVycywgYWRkaW5nIHRoYXQgU2VuYXRlIFJlcHVibGljYW5zIGRlYmF0ZWQgdGhlIG1hdHRlciBhdCBhIGNsb3NlZCBkb29yIG1lZXRpbmcgd2l0aCBhIEp1c3RpY2UgRGVwYXJ0bWVudCBleHBlcnQgYW5kIFZpY2UgUHJlc2lkZW50IE1pa2UgUGVuY2UuIApEZSBwbHVzLCBsYSBmYWlibGVzc2UgZHUgbm9tYnJlIGRlIHBoYXJtYWNpZXMgcXVlIGNvbXB0ZSBsICBtbWUgZGUgcnBvbmRyZSAgZGUgdGVsbGVzIGRlbWFuZGVzIG5lIGxhaXNzZSBxdWUgcGV1IGRlIGNob2l4LiAKSSBjYXJyeSBpdCBpbiBteSBmYWNlIGFzIHdlbGwgc28gdGhhdCB3aHkgSSB0cnkgdG8gc3RheSBhdCBhIGhlYWx0aHkgYm9keSBmYXQgMCUgd2hlbiBJIG5vdCB3b3JraW5nIG91dCAoSSB3YXMgZ29pbmcgdGhyb3VnaCBzb21lIHN0dWZmIHRoaXMgc3VtbWVyIGFuZCB1bmRlcndlaWdodCwgSSBvbiB0aGUgZG90IG5vdykuIApIb21vZW9wYXRoeSBjaGVyaXNoZWQgbWUgZnJvbSBhIHNlZWQgdG8gYSB0cmVlLiBOb3cgSSBhbSB3YWl0aW5nIGZvciBtb3JlIGdyb3d0aCBhbmQgbXkgY29tcGxldGUgbWVyZ2UgaW50byBIb21vZW9wYXRoeSB0b3JyZW50cy4gSXQgZ3JhbnRlZCBtZSBCaGFydGl5YSBDaGlraXRzYWsgUmF0bmEgQXdhcmQsIEJlc3QgSW50ZXJuYXRpb25hbCBmZWF0dXJlIEF3YXJkLCBLYXNoaXB1ciBHYXVyYXYgQXdhcmQsIE1vdGhlciBJbmRpYSBBd2FyZCBmb3IgVWR5b2cgUHJhdGliaGEsIEludGVybmF0aW9uYWwgR29sZCBTdGFyIEF3YXJkLCBBd2FyZCBvZiBFeGNlbGxhbmNlLCBIb21vZW9wYXRoaWMgR2VtIDIwMTEgZXRjLiAKVGhlIEV4ZWN1dGl2ZSBEaXJlY3RvciBmb3IgdGhlIG9yZ2FuaXphdGlvbiwgTG9yaSBHYWxsLCBrbm93cyB0aGF0IHRoZSBtb25leSB3aWxsIGJlIHB1dCB0byBnb29kIHVzZSwgaGVscGluZyB0byBkZWZyYXkgcHJvZ3JhbW1pbmcgY29zdHMuICJOZXcgQmVnaW5uaW5ncyBvZmZlcnMgYSB2YXJpZXR5IG9mIG9wcG9ydHVuaXRpZXMgZm9yIG1lbWJlcnMgdG8gaW50ZXJhY3QgYW5kIHNvY2lhbGl6ZSB3aXRoIG9uZSBhbm90aGVyIGluIGEgc3VwcG9ydGl2ZSBlbnZpcm9ubWVudCB0aGF0IGFsbG93cyBmb3IgdGhlaXIgY29udGludWVkIHBvc3QgaW5qdXJ5L2lsbG5lc3MgcmVjb3ZlcnkgdGhyb3VnaCBwYXJ0aWNpcGF0aW9uIGluIGFydHMgY3JhZnRzLCBleGVyY2lzZXMgYW5kIG90aGVyIGFjdGl2aXRpZXMuIApQZXRlcidzIGdyZWF0ZXN0IGxvdmUgd2FzIGZvciBoaXMgZmFtaWx5LCBlc3BlY2lhbGx5IGhpcyBncmFuZGNoaWxkcmVuLiAKVGlwcyBBY2NlcHQgY3JlZGl0IGNhcmRzIGlmIHlvdSBjYW4gYWZmb3JkIHRoZSBlcXVpcG1lbnQgY29zdHMgYW5kIGZlZXMgYXNzb2NpYXRlZCB3aXRoIGl0LiAKTWF5YmUgdGhhdCB5b3VyIGdhbWUuIFJlIGVuZ2FnZSBtZSB3aXRoIHRoaXMgdGhpbmcgaSBoYWQgZm9yZ290dGVuIGFib3V0IDIgZGF5cyBhZ28uIApJIHBlcnNvbmFsbHkgd291bGQgbm90IGhhdmUgbGVhcm5lZCBhYm91dCB0aGF0IGlmIEkgZGlkbiBhc2sgdGhhdCBxdWVzdGlvbi4gCktub3cgd2hhdCB5b3VyIDEyIHllYXIgb2xkIGlzIGRvaW5nIG9uIHRoZSBJbnRlcm5ldC4gCkEgbG90IG9mIGdhbWVzIGFuZCBhIGxvdCBvZiBwbGF5ZXJzLiBUaGUgcGxheWVycyBhcmUgdXN1YWxseSB2aXJ0eWFsbHkgZ2F0aGVyZWQgaW4gdGhlIFRleGFzIEhvbGQgZW0gdGFibGUuIApVc2UgUmVkZGl0IHNlYXJjaCBmdW5jdGlvbiBvbiB0aGF0IHN1YiB0byBzZWUgaWYgdGhlcmUgaGF2ZSBiZWVuIGRpc2N1c3Npb24gcG9zdHMgYWJvdXQgc2ltaWxhciBiYW5kcy4gSWYgbm90IChvciBtYXliZSBpZiB0aGVyZSBoYXMgYnV0IGl0cyBiZWVuIGF3aGlsZSkgbWFrZSBvbmUuIApBbHNvLCBqdXN0IGFzIGltcG9ydGFudCwgaXMgdG8gcGF0IHlvdXJzZWxmIG9uIHRoZSBiYWNrIGZvciB0aGUgcHJvZ3Jlc3MgeW91IERPIG1ha2UuIE1lYXN1cmFibGUgcHJvZ3Jlc3MgaXMgbW90aXZhdGlvbiBiZXN0IGZyaWVuZC4gU2V0IG1ldHJpY3MgZm9yIHlvdXJzZWxmOiBJIHdhbnQgdG8gcmVhZCAxMCBwYWdlcyB3aXRob3V0IGxvb2tpbmcgdXAgS2FuamksIEkgd2FudCB0byB3YXRjaCBhIHdob2xlIGVwaXNvZGUgd2l0aG91dCBzdWJ0aXRsZXMuIApJdCdzIGEgY2xlYXIgYW5nbGUgc2hvdCB3aGljaCBieSBkZWZpbml0aW9uIGlzIHZlcnkgcG9vciBldGlxdWV0dGUhIEFuZCBpZiBpdCB3ZXJlIG15IGhvdXNlLCB0aGF0J3MgYSBjYWxsLiBZb3VyIG9wcG9uZW50IGRlbGliZXJhdGVseSBjb252ZXllZCBhICJjYWxsIiBpbiBvcmRlciB0byBlbGljaXQgeW91IHRvIGV4cG9zZSB5b3VyIGhhbmQuIFlvdSBzYWlkIGl0J3MgY29tbW9uIHByYWN0aWNlIGF0IHRoaXMgaG91c2UgZ2FtZSB0aGF0IGNoaXBzIGRvbid0IGFjdHVhbGx5IG1vdmUgb24gYWN0aW9ucy4gCldpbGQgZm9yIFdpbGR3b29kClJhc0ZyZWVtYW4gIDEyIHBvaW50cyAgc3VibWl0dGVkIDI2IGRheXMgYWdvCkRvaW5nIGEgZG9jdW1lbnRhcnkgb24gY291bnRyaWVzIHdoZXJlIHBvcm4gaXMgaWxsZWdhbApJbiB0aGlzIGFydGljbGUsIHdlJ2xsIGxvb2sgYXQgd2hhdCBjYXVzZXMgaGFpciBsb3NzIGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgaG93IHRvIGRlYWwgd2l0aCB0aGUgcHN5Y2hvbG9naWNhbCBmYWxsb3V0IHRoYXQgb2Z0ZW4gYWNjb21wYW5pZXMgaXQuIFdlJ2xsIGRpc2N1c3MgaG93IHRvIGNob29zZSB0aGUgcmlnaHQgcGxhc3RpYyBzdXJnZW9uICh0aGVzZSBwcm9mZXNzaW9uYWxzIGhhdmUgYmVlbiBwZXJmb3JtaW5nIGNlcnRhaW4gaGFpciByZXBsYWNlbWVudCBwcm9jZWR1cmVzIGZvciAzNSB5ZWFycyEpLCBob3cgdG8gY2hvb3NlIHRoZSByaWdodCBwcm9jZWR1cmUgYW5kIHdoYXQgdG8gZXhwZWN0IGJlZm9yZSBhbmQgYWZ0ZXIgc3VyZ2VyeS4gV2UnbGwgYWxzbyBsb29rIGF0IG1lZGljYXRpb25zIGFuZCB0aGUgbGF0ZXN0IGluIHdpZ3MgYW5kIGhhaXIgYWRkaXRpb25zLiBBIHdvcmQgb2YgY2F1dGlvbjogVGhlcmUgaXMgbm8gcXVpY2sgb3Igc3VyZSBmaXJlIHdheSB0byByZXBsYWNlIHlvdXIgZHdpbmRsaW5nIGZvbGxpY2xlcyB3aXRoIGEgZnVsbCwgdGhpY2sgaGVhZCBvZiBoYWlyLiBTbyBpdCdzIGltcG9ydGFudCB0aGF0IHlvdXIgZXhwZWN0YXRpb25zIGFyZSByZWFsaXN0aWMgYW5kIHRoYXQgeW91IGV4ZXJjaXNlIHBhdGllbmNlIHdoaWxlIHlvdSBleHBsb3JlIHlvdXIgb3B0aW9ucy4gR29vZCBsdWNrIQpFdmVuIG1lZGljaW5lIGNhYmluZXRzIGFyZSBleGFtaW5lZCwgd2l0aCBCWVUgb3B0aW5nIHRvIGluc3RhbGwgbWVkaWNpbmUgY2FiaW5ldHMgd2l0aCBidWlsdCBpbiBMRUQgbGlnaHRpbmcgaW4gdGhlIG1pcnJvcnMgaW4gYm90aCBiYXRocm9vbXMgb2YgdGhlIGxhcmdlciBob21lcyByYXRoZXIgdGhhbiBqdXN0IGluIHRoZSBlbnN1aXRlcy4KRG8gc29tZSBob21ld29yayBvbiB0aGUgbWF0dGVyIGFuZCBpZiB5b3UgaGF2ZSBhbnkgY29uY2VybnMgdGFsayB0byB0aG9zZSBpbiBjaGFyZ2UuIFN1Y2ggYXMgRVBMIHRvIExhIExpZ2EuIEFsc28gd2FnZXMgaW4gRm9vdGJhbGwgYXJlIHNob290aW5nIHRocm91Z2ggdGhlIHJvb2Ygd2l0aCBldmVuIGZ1cnRoZXIgcmFwaWQgaW5jcmVhc2UgaW4gVFYgY292ZXJhZ2UgYW5kIGluZmx1eCBvZiBtdWx0aSBiaWxsaW9uYWlyZSBvd25lcnMgYXMgc2VlbiBpbiBFUEwgd2l0aCBNYW5jaGVzdGVyIENpdHkgYmVpbmcgb3duZWQgYnkgd29ybGRzIHJpY2hlc3QgZmFtaWx5LiAKQSBmb3JtZXIgbG9jYWwgbmV3cyByZXBvcnRlciBhbmQgbGF3eWVyLCBLZWxseSBlbGV2YXRlZCBoZXIgcHJvZmlsZSBkdXJpbmcgdGhlIDIwMTYgcHJlc2lkZW50aWFsIGVsZWN0aW9uIHdoZW4gc2hlIHNxdWFyZWQgb2ZmIGFnYWluc3QgRG9uYWxkIFRydW1wIGFuZCBoaXMgc3Vycm9nYXRlcywgc3VjaCBhcyBOZXd0IEdpbmdyaWNoLiBPbiBvY2Nhc2lvbiwgc2hlIG91dHBlcmZvcm1lZCBmZWxsb3cgZm9ybWVyIEZveCBOZXdzIGhvc3QgQmlsbCBPJ1JlaWxseSBpbiB0aGUgcmF0aW5ncywgYW5kIHNoZSBoYWQgYmVlbiBzZWVuIGFzIGtleSB0byBoZWxwaW5nIHRoZSBuZXR3b3JrIGF0dHJhY3QgeW91bmdlciB2aWV3ZXJzLi4gClBvbGljZSBzbmF0Y2ggdG9kZGxlciBmcm9tIG1vbSdzIGFybXMgaW4gQnJvb2tseW4gYmVuZWZpdHMgb2ZmaWNlClRoZXkgZG8gZW5mb3JjZSBwYXJraW5nIG9uIHdlZWtuaWdodHMgYXMgSSBoYXZlIGZvdW5kIHRoYXQgb3V0IHRoZSBoYXJkIHdheSB3aGVuIEkgZ290IGEgdGlja2V0IGF0IGFyb3VuZCA4OjQwIHBtIG9uIGV2ZW5pbmcuLiAKVGhlIGNvbXBhbnksIG93bmVkIGJ5IExpdmUgTmF0aW9uLCBpcyBhdHRlbXB0aW5nIGEgZGlmZmVyZW50IGFwcHJvYWNoIHRocm91Z2ggaXRzIFZlcmlmaWVkIEZhbiBwcm9ncmFtLCB3aGljaCBpcyBiYWNraW5nIFN3aWZ0J3MgdG91ciBhbmQgb3RoZXIgbWFycXVlZSBhcnRpc3RzLCBpbmNsdWRpbmcgQnJ1Y2UgU3ByaW5nc3RlZW4sIEthdHkgUGVycnkgYW5kIEVkIFNoZWVyYW4uIFRoZSBwcm9ncmFtIHJlcXVpcmVzIGZhbnMgdG8gcmVnaXN0ZXIgbG9uZyBiZWZvcmUgdGhlIHRpY2tldHMgZ28gb24gc2FsZSBpbiBhbiBlZmZvcnQgdG8gdmVyaWZ5IHRoZWlyIGF1dGhlbnRpY2l0eS4KVGhlIEVtbXkgYW5kIElSRSB3aW5uaW5nIHJlcG9ydCBkb2N1bWVudGVkIGhvdyBlYXN5IGl0IGlzIGZvciBjb3VudGVyZmVpdCBtZWRpY2luZXMgdG8gd2luZCB1cCBhdCBsb2NhbCBwaGFybWFjaWVzIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAKVGhhdCB3aGF0IHdlIHdhbnQgdG8gZG8uIApBcyBWb2x1bnRlZXJzIHlvdSBhcmUgbm90IGV4cGVjdGVkIHRvIGZ1bGZpbGwgYSBjb3Vuc2VsaW5nIHJvbGUgd2l0aCBzZXJ2aWNlIHVzZXJzLCBhbmQgaW4gc3VjaCBpbnN0YW5jZXMgYW4gYXBwcm9wcmlhdGUgcmVmZXJyYWwgbWF5IG5lZWQgdG8gYmUgbWFkZSwgYnV0IGhhdmluZyBsaXN0ZW5pbmcgc2tpbGxzIGlzIGVzc2VudGlhbCB0byBkZXZlbG9waW5nIGEgcmVsYXRpb25zaGlwIG9mIHRydXN0IGFuZCBzdXBwb3J0LlRoZSBza2lsbHMgb2YgYWN0aXZlIGxpc3RlbmluZyBhcmUgdmVyeSBkaWZmZXJlbnQgZnJvbSB0aGUgd2F5IHdlIGxpc3RlbiBpbiBldmVyeWRheSBjb252ZXJzYXRpb24uIEl0IG1lYW5zIHRoYXQgd2Ugbm90IG9ubHkgaGF2ZSB0byBkZXZlbG9wIG5ldyBza2lsbHMsIGJ1dCB3ZSBhbHNvIGhhdmUgdG8gdW5sZWFybiBvbGQgb25lcy5UaGlzIHRha2VzIHVzIGJhY2sgdG8gc2Nob29sIHdoZW4gd2Ugd2VyZSB0b2xkIHRvICdwdXQgdGhlIGZvbGxvd2luZyBwYXNzYWdlIGludG8geW91ciBvd24gd29yZHMgaW4gb3JkZXIgdG8gc2hvdyB0aGF0IHlvdSBoYXZlIHVuZGVyc3Rvb2Qgd2hhdCB5b3UgaGF2ZSByZWFkJy4gSXQgaXMgYSB2ZXJiYWwgc2tpbGwgdGhhdCBjb21tdW5pY2F0ZXMgdG8gdGhlIG90aGVyIHRoYXQgd2UgaGF2ZSBub3Qgb25seSBoZWFyZCBidXQgdW5kZXJzdG9vZC4gClRoZXJlIGEgbWlsbGlvbiBkaWZmZXJlbnQgd2F5cyB0byBzYXZlIG1vbmV5IHdoZW4gaXQgY29tZXMgdG8gaGF2aW5nIGEgYmFieSwgYW5kIHdlIHRha2luZyBhZHZhbnRhZ2Ugb2YgYXMgbWFueSBhcyB3ZSBjYW4uIApUaGVyZSBhcmUgYWxzbyBmaW5lcyBpbiBwbGFjZSBpZiB0aGV5IGRvbiB0aGUgcmVnaXN0cnkgd2lsbCBub3QgYmUgYXZhaWxhYmxlIGZvciB0aGUgcHVibGljIGFuZCByZXNlYXJjaGVycy4gCkNhdGh5IE8nTmVpbCBiZWxpZXZlcyB0aGF0IGh1bWFuIG1lbiBhcmUgYXQgcmlzayBvZiBiZWluZyBwYXNzZWQgb3ZlciB3aGVuICJkYXNoaW5nIG1lbmJvdHMiIGFyZSBhdmFpbGFibGUgdG8gc3BvaWwgd29tZW4uCkFsc28gbGVhcm4gdGhhdCB0aGVyZSBhcmUgIm5ldXJvdHJhbnNtaXR0ZXJzIGFuZCBob3Jtb25lcyIgaW4gdGhlIGJyYWluIHRoYXQgbmVlZCB0aGUgZHJ1ZyB0byB3b3JrIHByb3Blcmx5LiAKQW5kIHRoZW4gdGhlcmUgQW5kcmV3LiBBbmRyZXcgaXMgaGFyZCBmb3IgbWUgdG8gaGF0ZSBiZWNhdXNlIEkgcGlja2VkIGhpbSBhcyBhIGZhdm9yaXRlIHdlZWsgMSwgYnV0IEkgY2VydGFpbmx5IGRvbiBsaWtlIGhpbS4gClRoYXQgbm90IGhvdyBpdCB3b3JrcyBpbiBBbWVyaWNhLiAKSGUgd2FzIGEgcHJvZmVzc2lvbmFsIGJveGVyIGtub3duIGFzIFJhbmR5IEhvcm4uLiAKTXkgYmFkIGJpa2UgbGFuZSBpcyBiYW5uYXR5bmUuIEVhc3Qgb2YgbWFpbi4gVGhlIGRlc3Ryb3llZCBhIHdlbGwgdXNlZCByb2Fkd2F5IHRvIGFkZCBpbiBhbmdsZWQgcGFya2luZy4gVGhlbiBhbHNvIHRha2UgYXdheSBhIGZ1bGwgZHJpdmluZyBsYW5lIGZvciBhIGJpa2UgbGFuZSB0aGF0IEkgaGF2ZSB5ZXQgdG8gc2VlIGFueW9uZSBvbi4gQW5kIG15IG9mZmljZSBmYWNlcyBiYW5uYXR5bmUgc28gSSBzZWUgaXQgYWxsIGRheS4gSXQgbWFrZXMgdHVybmluZyBsZWZ0IG9udG8gbWFpbiB2ZXJ5IGhhcmQgbm93IHRoYXQgdGhlcmUgaXMgb25seSB0aGUgMSB1c2FibGUgbGFuZS4gUG9vciBwbGFubmluZyB0aGVyZS4KTWFrZXMgbmV4dCB0byBubyBhZHZlcnRpc2luZyByZXZlbnVlLiAKQW5uaWUgRHVrZSwgd2hvIGhhcyBlYXJuZWQgJDMsNjMwLDE2NCwgY2FuIGNoYWxsZW5nZSB0aGUgbW9zdCBpbnZldGVyYXRlIHNrZXB0aWNzLiBTaGUgY2FzaGVkIG91dCBpbiBXU09QIHRvdXJuYW1lbnRzIGZvciAzNSB0aW1lcywgaW4gMTMgb2Ygd2hpY2ggc2hlIHJlYWNoZWQgdGhlIGZpbmFsIHRhYmxlLiBEdWtlIHdvbiB0aGUgZmlyc3QgYnJhY2VsZXQgaW4gT21haGEgSGkgTG8gd2l0aCBhIGJ1eSBpbiAkMiwwMDAgaW4gMjAwNC4gVG9kYXksIHNoZSBwcmVmZXJzIG1peGVkIHRvdXJuYW1lbnRzIGRlbW9uc3RyYXRpbmcgdGhlcmUgYW4gZXhjZWxsZW50IGdhbWUuCkVsbGUgYXVnbWVudGVyIGxhIGNvbnNvbW1hdGlvbiBjaGV6IGxlcyBhZG9zClZpdGFtaW4gRCBpcyBrbm93biB0byBoZWxwIHRoZSBib2R5IGFic29yYiBjYWxjaXVtLCBhbmQgaXQgcGxheXMgYSByb2xlIGluIGJvbmUgaGVhbHRoLiBBbHNvLCB2aXRhbWluIEQgcmVjZXB0b3JzIGFyZSBsb2NhdGVkIG9uIHRoZSBmYXN0IHR3aXRjaCBtdXNjbGUgZmliZXJzLCB3aGljaCBhcmUgdGhlIGZpcnN0IHRvIHJlc3BvbmQgaW4gYSBmYWxsLlsxOF0gSXQgaXMgdGhlb3JpemVkIHRoYXQgdml0YW1pbiBEIG1heSBpbmNyZWFzZSBtdXNjbGUgc3RyZW5ndGgsIHRoZXJlYnkgcHJldmVudGluZyBmYWxscy5bNV0gTWFueSBzdHVkaWVzIGhhdmUgc2hvd24gYW4gYXNzb2NpYXRpb24gYmV0d2VlbiBsb3cgdml0YW1pbiBEIGNvbmNlbnRyYXRpb25zIGFuZCBhbiBpbmNyZWFzZWQgcmlzayBvZiBmcmFjdHVyZXMgYW5kIGZhbGxzIGluIG9sZGVyIGFkdWx0cy4uIApXYXMgaW4gMjAwN2lzaC4gSGUgd2FzIGRvaW5nIGEgc2tpdCwgaXQgd2FzbiBhIG1pbnN0cmVsIHNob3cuIFN1cmUgaXQgd2FzIHBvb3IgdGFzdGUgYW5kIG5vdCBzZWxmIGF3YXJlIGF0IGFsbCBidXQgeW91IGFsbCBkb25lIHRoaW5ncyB5ZWFycyBhZ28gdGhhdCB5b3Ugd291bGRuIHRoaW5rIG9mIGRvaW5nIG5vdyBhIGRheXMuIApNZXRhc3Rhc2VuIHNpbmQgRnJ1Y2h0a3JwZXIgd2llIGVpbiBQaWx6IiwgamVkb2NoIGJlcmVpdHMgZWluIHZvbGxzdG5kaWdlcyBNeXplbCIuIFJlaWZlIE1ldGFzdGFzZW4gcmVpZW4gc2ljaCBsb3MgdW5kIHZlcnRlaWxlbiBzaWNoIGltIGdlc2FtdGVuIEtycGVyLCB3byBzaWUgc2ljaCBhbiBlaW5lciBTY2h3YWNoc3RlbGxlIG5pZWRlcmxhc3NlbiB1bmQgd2VpdGVyIHdhY2hzZW4uIFVuZCBkaWVzZSBTY2h3YWNoc3RlbGxlIGlzdCBkYXMgc2F1cmUgTWlsaWV1IGltIE9yZ2FuaXNtdXMsIGRpZSB2ZXJzY2hpZWRlbnN0ZW4gS3JhbmtoZWl0c2hlcmRlIGluIE9yZ2FuZW4gdW5kIFN5c3RlbWVuLiAKSXQgc291bmRzIGxpa2UgeW91ciBkYWQgaGFzbiBldmVuIGFwb2xvZ2l6ZWQgYW5kIHlvdSBhcmUgbm90IGluIGEgcGxhY2Ugd2hlcmUgeW91IGNhbiBldmVuIGhhbmRsZSBoaXMgcHJlc2VuY2Ugc28gSSBkb24gc2VlIHdoeSB5b3Ugd291bGQgd2FudCBoaW0gdGhlcmUgb24geW91ciBoYXBwaWVzdCBkYXkuIEhvbmVzdGx5LCBoZSBvbmx5IGNhbGxlZCBiZWNhdXNlIHlvdXIgbW9tIG5vdGlmaWVkIGhpbS4gCkV2ZW4gaWYgbWFueSBvZiBEYXJ3aW5zIENvbmNlcHRzIG9yIFRoZW9yeXMgYXJlIG91dGRhdGVkIGl0IHN0aWxsIGlzIGEgZ3JlYXQgcGllY2UgaW4gc2NpZW50aWZpYyBsaXRlcmF0dXJlIGFuZCBpdCBzaG93cyB0aGUgY29uZmxpY2ggRGFyd2luIGhhZCB3aGVuIG1ha2luZyBoaXMgdGhlb3J5IG9mIG5hdHVyYWwgc2VsZWN0aW9uIGRlc3BpdGUgYmVsaWV2aW5nIGluIEdvZC4gSXQgc2hvd3MgdXMgdG8gcXVlc3Rpb24gdGhlIHRoaW5ncyB3ZSBhbHJlYWR5IGtub3cgYW5kIGRvbiB0YWtlIHRoZW0gZm9yIGdyYW50ZWQuIApJdCB3aWxsIGxpa2VseSBiZSBiYWNrIHVwIGFzIHNvb24gdGhlaXIgbmV4dCBiaWcgJCQgZ3VhcmFudGVlIHRvdXJuZXkgaGFzIHRvIGJlICJjYW5jZWxsZWQgZHVlIHRvIGRkb3MgYXR0YWNrcyIuIFRoaXMgaXMgYSBkYW1uIHNoYW1lIGFuZCBhIHByaW1lIGV4YW1wbGUgb2Ygd2h5IG9ubGluZSBwb2tlciBuZWVkcyB0byBiZSBtYWRlIGxlZ2FsIGFnYWluIGFuZCAxMDAlIHJlZ3VsYXRlZC4gClNvbWVob3cgSSBtaXNzZWQgdGhpcyBzdG9yeSB1bnRpbCBJIHNhdyBpdCBvbiB0aGUgaGVhZGxpbmVzIG9mIHRoZSBOYXRpb25hbCBFbnF1aXJlci4gCkF0IDg4OCBTcG9ydCB5b3UgY2FuIGJldCBvbiBmb290YmFsbCwgYmFza2V0YmFsbCwgdGVubmlzLCBob3JzZSBhbmQgZ3JheWhvdW5kIHJhY2luZywgY3JpY2tldCwgQW1lcmljYW4gc3BvcnRzIGFuZCBtdWNoIG1vcmUuIApFaWZlcm1hbiB3YXMgbWFycmllZCBmb3VyIHRpbWVzLCB0d2ljZSB0byBUb2JpIEtlc3RlbmJlcmcgb2YgRm9ydCBXb3J0aCwgVGV4YXMuIEJvbml0YSBFaWZlcm1hbiwgYSBsb2NhbCBtYXNzYWdlIHRoZXJhcGlzdCwgYW5kIEplcnJ5IEVpZmVybWFuIG9mIE9yYW5nZSwgQ2FsaWYuLCBhbHNvIGFyZSBleCB3aXZlcy4gCkZpcnN0LCB3ZSBleHBsYWluIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gcG9rZXIgYW5kIHZpZGVvIHBva2VyLiBUaGUgcnVsZXMgb2YgdmlkZW8gcG9rZXIgYXJlIHZpcnR1YWxseSBpZGVudGljYWwgdG8gcmVndWxhciA1IGNhcmQgZHJhdyBwb2tlcjogeW91IGhhdmUgb25lIG9yIG1vcmUgaGFuZHMsIGFuZCB0aGUgZ29hbCBpcyB0byBnZXQgYSBwb2tlciBjb21iaW5hdGlvbiBvZiBjYXJkcyBpbiBlYWNoIGhhbmQgdGhhdCB3aWxsIGVhcm4geW91IG1vbmV5Li4gClRoaXMgb25lIGV4cG9zZWQgcGhvdG9zIHRoYXQgcGVvcGxlIG5ldmVyIHNoYXJlZCBwdWJsaWNseSwgYWxsb3dpbmcgdGhlbSB0byBiZSBhY2Nlc3NlZCBieSBhcHBzIHRoYXQgdXNlIEZhY2Vib29rJ3MgcGhvdG9zIEFQSS4gCk1lYW53aGlsZSBJIHN0dWNrIHdpdGggbXkgaW5zdXJhbmNlIGFuZCBnb3QgYSBjcmFja2VkIHdpbmRzaGllbGQgKHdpZmUgY2FyKSB0aGF0IHJlcXVpcmVkIHJlcGxhY2luZy4gQ2FsbGVkIHVwLCB0aGV5IHNhaWQgbm8gcHJvYmxlbSBzZW5kIGEgY29weSBvZiB0aGUgcmVjaWVwdCAoYW55IG1lY2hhbmljIEkgd2FudCwgdXAgdG8gT0VNIHBhcnRzKSBhbmQgdGhleSB0YWtlIGNhcmUgb2YgaXQuIApCZWZvcmUgRW50ZXJpbmcgdGhlIEJlc3QgUG9rZXIgU2l0ZXMKSnVzdCBsaWtlIGhvdyBub3QgZXZlcnlvbmUgd2hvIGVuam95cyBtZXRhbCBjb25zdGFudGx5IHdlYXJzIGJhbmQgc2hpcnRzLCBoYXMgbG9uZyBoYWlyIGFuZCBoZWFkYmFuZ3MgYWxsIHRoZSB0aW1lLiAKT25lIGRheSBoZSBqdXN0IHN0b3BwZWQgc2hvd2luZyB1cC4gClRoZSBCbGFjayBFeWVkIFBlYXMgYWxzbyBoYWQgdGhyZWUgdHJvcGhpZXMsIGFzIHdlbGwgYXMgSmF5IFosIHdobyB3b24gZm9yIGJlc3QgcmFwIHNvbG8gcGVyZm9ybWFuY2UgYW5kIHR3byBhd2FyZHMgZm9yICJSdW4gVGhpcyBUb3duIiB3aXRoIFJpaGFubmEgYW5kIEthbnllIFdlc3QuCk5leHQgd2VlayBvbiBUSiBIb29rZXIsIEhvb2tlciBicmluZ3MgZG93biB0aGUgYmFkIGd1eXMgYW5kIHNhdmVzIHRoZSBkYXkgYW5kIHRoZSBnaXJsLiAKV2UgZW5jb3VyYWdlIHlvdSB0byBpbnN0ZWFkIHBvc3QgdGhpcyBxdWVzdGlvbiBpbiB0aGUgd2Vla2x5LCBzdGlja2llZCAiU2hvcnQgQW5zd2VycyB0byBTaW1wbGUgUXVlc3Rpb25zIiB0aHJlYWQsIHdoZXJlIHF1ZXN0aW9ucyBvZiBiYXNpYyBmYWN0IGNhbiBiZSBhbnN3ZXJlZCBzdWNjaW5jdGx5LCBiYXNlZCBvbiByZWxpYWJsZSBzb3VyY2VzLiAKSSBoYXZlIHNlcnZlZCBpbiBtYW55IGNvbWJhdCB6b25lcywgYW5kIG9uIGV2ZXJ5IGNvbnRpbmVudCwgYW5kIHRvbyBtYW55IGNvdW50cmllcyB0byBuYW1lLiBNeSBCQSBpcyBpbiBoaXN0b3J5IEkgZm9jdXNlZCBvbiBBbWVyaWNhbiBXV0lJIGhpc3RvcnkgYmVjYXVzZSBJIHdhcyBhIHNvbGRpZXIgYW5kIHNlcnZlZCBvbiBtYW55IG9mIHRoZSBiYXR0bGVncm91bmRzIHRoYXQgd2UgZm91Z2h0IG9uLiAKU2xzYW1nNjUgIDE2NSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClNvLCB3aGF0IGRvIHdlIGFjdHVhbGx5IG5lZWQgdG8gYmUgaGFwcHk/IExldCBicmVhayBkb3duIG91ciB0aG91Z2h0cyBvbiB0aGUgc3ViamVjdCBhbmQgcmVidWlsZC4gVGhpcyBpcyBtZSBzd2luZ2luZyBvbiBhIHdyZWNraW5nIGJhbGwgKGZ1bGx5IGNsb3RoZWQpIHRvIGhlbHAuCkJsdWUgQmVsbCBqZWFucyBlbXBsb3lzIDE3NSBsb2NhbCB3b21lbiB0byBzZXcgNDUsMDAwIHBhaXJzIG9mIFdyYW5nbGVycyBhbmQgUnVzdGxlcnMgYSB3ZWVrLiAKVGhlc2UgcG9pbnRzIHRoYXQgSSdkIGJlIGdldHRpbmcgd291bGRuJ3QgdHJ1bHkgYmUgdGhlaXIgd29ydGggYXMgdGhlaXIgdmFsdWUgaXMgYXJiaXRyYXJ5LiAKVGhlIGJlbmVmaXRzIG9mIG1hc3RlcmluZyBibGFja2phY2sgYXJlIG1vcmUgcmV3YXJkaW5nIHRoYW4gbW9zdCBwZW9wbGUgaW1hZ2luZS4gVGhlIHRpbWUgaW52ZXN0ZWQgaW4gbGVhcm5pbmcgdGhlIGdhbWUgYW5kIGJsYWNramFjayBzdHJhdGVneSBwcm9kdWNlcyBhIGZlZWxpbmcgb2YgZXhlcmNpc2luZyB0aGUgbWluZCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGVuYWJsaW5nIGEgcGxheWVyIHRvIHRha2UgaG9tZSBhIGxpdHRsZSBxdWljayBwYXkgZGlydCAgIGEgZ3JlYXQgbW9uZXRhcnkgcmV3YXJkIGZvciBhIGZldyBoYW5kcyBvZiBmdW4gY2FyZCBwbGF5aW5nLgpJIG1hbmFnZWQgdG8gZ2V0IGFyb3VuZCBMZWgvTGFkYWtoIHF1aXRlIGEgYml0IHRvIHZpc2l0IHZhcmlvdXMgbW9uYXN0ZXJpZXMuIApJIGhhZCBhIHN0YWNrIG9mIGFyb3VuZCAkNjAwIGFuZCBjYWxsZWQgaGltIGFuZCBoZSBzaG93cyBRLDMgdG8gbXkgQSxLLiAKQnV0IHJlY2VudGx5IHNoZSBidW1ibGVkIGhlciB3YXkgdGhyb3VnaCB3aXRoIHRoZSBwbGFuayBraW5nIGFuZCBpdCB3b3JrZWQgYW5kIGl0IHdvcmtlZCEgU28gb2YgY291cnNlIHNoZSBoYXMgYW4gaW50ZXJlc3QgaW4gY29udGludWluZyBpdCBhbmQgZ2V0dGluZyBiZXR0ZXIgYXQgaXQuIFJpZ2h0IG5vdyB0aG91Z2gsIGFzIHdlIHNhdyBmcm9tIHRoZSB3aXphcmQgY29udmVyc2F0aW9uLCBoZXIgdG9vbCBraXQgaXMga2luZCBvZiBsaW1pdGVkLi4gClRoaXMgTGVmdG9uIENoaW5hIHNuYWNrIHNldCdzIHBhdHRlcm4gaXMgdmlvbGV0IGNoaW50ei4gbWFueSB0aW55IHZpb2xldHMgb24gYSB3aGlsZSBiYWNrZ3JvdW5kLiBQbGF0ZSBhbmQgY3VwIGhhcyBnb2xkcHJvcG9zZWQgY2l0YXRpb24gZm9yIGFyY29tClRoZSBkaXNwYXRjaGVyIGlzIHRoZW4gcmVxdWlyZWQgdG8gbm90aWZ5IEVhY2ggdHJhaW4gY3JldyB0cmF2ZXJzaW5nIHRoZSBjcm9zc2luZyB0byBkbyB3aGF0IGNhbGxlZCBhIFN0b3AgYW5kIEZsYWcuIApXZSBhbGwgcmVtZW1iZXIgQW1lcmljYSBvYnNlc3Npb24gd2l0aCBoZXIgICBhbmQgbm90IGp1c3QgdGhlIFJpZ2h0ICAgYXMgYWx3YXlzIGxhZGVuIHdpdGggbHVzdC5JIGRpc3RpbmN0bHkgcmVjYWxsIHN0YW5kaW5nIGluIGFuIHVsdHJhIGhpcCBjaG9jb2xhdGUgYW5kIHdpbmUgYmFyIGluIEJyb29rbHluIGxpc3RlbmluZyB0byBzb21lIHVsdHJhIGxlZnQgbWVuIHRyeSB0byBleHBsYWluIHdoeSB0aGV5IHRob3VnaHQgUGFsaW4gd2FzICJub3QgdGhhdCBiYWQuIiBBcHBhcmVudGx5IE1jQ2FpbiB3YXMgbWVhbiBhbmQgcmFjaXN0IGFuZCBoYXRlZCBwb29yIHBlb3BsZSwgYnV0IFBhbGluLCB3ZWxsLCB5b3Uga25vdywgc2hlIHVtLiAKSWYgeW91IHdhbnQgdG8gd3JpdGUgYWJvdXQgcG9saXRpY2FsIGlzc3VlcywgeW91IGNhbiBkbyB0aGF0IHdpdGhvdXQgc3BlY2lmeWluZyB0aG9zZSB0aGluZ3MuIApUZWNobm9sb2dpZXMgc3VjaCBhcyB2aXJ0dWFsIHJlYWxpdHksIHdlYXJhYmxlcyBhbmQgdGhlIGludGVybmV0IG9mIHRoaW5ncyAoSW9UKSwgaHlwZWQgZm9yIHllYXJzLCBoYXZlIHlldCB0byByZWFjaCB0aGVpciBmdWxsIHBvdGVudGlhbC4gQnV0IHdpdGggNUcgcm9sbGluZyBvdXQgdGhpcyB5ZWFyLCBhbmQgbW9yZSB3aWRlbHkgaW4gMjAyMCwgdGhvc2UgdGVjaG5vbG9naWVzIHdpbGwgc2VlIGEgcmVzdXJnZW5jZS4gUGVyaGFwcyB0aGlzIHRpbWUgdGhleSdsbCBsaXZlIHVwIHRvIHRoZWlyIGluaXRpYWwgcHJvbWlzZS4gIEdlb3JnZSBQLiBTbGVmby4gcmVwb3J0ZXIsIGFkIHRlY2gsIGFkIGZyYXVkLCBzZWFyY2gKSWYgYnkgUkxELCB5b3UganVzdCBtZWFudCBwbGFjZXMgd2l0aCBhbnl0aGluZyBzZXggcmVsYXRlZCwgdGhlbiBHYW5nbmFtIGlzIGEgaHViIHdpdGggdG9ucyBvZiBsdXh1cmlvdXMgYW5tYXMgYW5kIHJvb20gc2Fsb25zIGFuZCBmdWxsIHNhbG9ucy4gCkluIFZpY3RvcmlhLCBzb21lIGxvY2FsIGdvdmVybm1lbnRzIGhhdmUgZGV2ZWxvcGVkIHNwZWNpZmljIHBvbGljaWVzIHdoaWNoIG91dGxpbmUgdGhlaXIgcmVzcG9uc2UgYW5kIHZpc2lvbiB0byBsaW1pdGluZyBnYW1ibGluZyBoYXJtIHdpdGhpbiB0aGVpciBjb21tdW5pdHkuIEFsc28gaW4gVmljdG9yaWEsIGdhbWJsaW5nIGFuZCBwb2tlciBtYWNoaW5lIGRhdGEgaXMgZnJlZSBhbmQgZWFzaWx5IGFjY2Vzc2libGUgdG8gdGhlIHB1YmxpYywgaG93ZXZlciwgaW4gTlNXIHRoaXMgZGF0YSBpcyBub3QgZnJlZWx5IGFjY2Vzc2libGUuIApCdXQgU2F1bmRlcnMsIHdobyBzYWlkIGhlIGhhZCBzcG9rZW4gd2l0aCB0aGUgb2ZmaWNlciwgc2FpZCB0aGUgaGFuZGxpbmcgb2YgdGhlIHNpdHVhdGlvbiB3YXMgIm5vdGhpbmcgc2hvcnQgb2YgcmVtYXJrYWJsZS4iCkkgaGFkIGEgc2VjdGlvbiBhbmQgYW0gaGF2aW5nIGEgc2Vjb25kIGluIGEgZmV3IHdlZWtzLiBXaGVuIHBlb3BsZSBhc2sgbWUgaWYgSSB3b3JyaWVkIGFib3V0IGhhdmluZyBhbm90aGVyIHNlY3Rpb24sIEkgdGVsbCB0aGVtIHRoZSBmaXJzdCB0d28gd2Vla3Mgb2YgYnJlYXN0ZmVlZGluZyB3ZXJlIGluZmluaXRlbHkgd29yc2UgdGhhbiBzZWN0aW9uIHJlY292ZXJ5LiBJdCB3YXMgZnVja2luZyBoZWxsLiBJIHJlbWVtYmVyIGZlZWRpbmcgbXkgZGF1Z2h0ZXIgYW5kIHB1dHRpbmcgaGVyIGRvd24gdG8gbmFwIGFuZCBteSBodXNiYW5kIGZvdW5kIG1lIGNyeWluZyBiZWNhdXNlIEkga25ldyBpbiBhYm91dCB0aHJlZSBob3VycyBJIHdhcyBnb2luZyB0byBoYXZlIHRvIGdvIHRocm91Z2ggaXQgYWdhaW4uIEhlIGltbWVkaWF0ZWx5IHdlbnQgb3V0IGFuZCBib3VnaHQgYSBwdW1wIGFuZCBuaXBwbGUgc2hpZWxkcy4gSXQgd2FzIHN0aWxsIGEgcGFpbmZ1bCBwcm9jZXNzIGJ1dCBJIGF0IGxlYXN0IGdvdCBzb21lIHJlbGllZi4KVGhlIHNhbGFkIGlzIHByZXBhcmVkIHRhYmxlc2lkZSBhbmQgdGhlIG1lbnUgbm90ZXMgdHdvIHBlb3BsZSBoYXZlIHRvIG9yZGVyIGl0LiAKVGhlIGFydGljbGUgc3VnZ2VzdGVkIGhvYXJkaW5nIGVub3VnaCB3YXRlciBhbmQgZm9vZCB0byBzdGF5IGluIHlvdXIgaG91c2UgZm9yIGEgZmV3IHdlZWtzLCBldmVuIGEgbW9udGgsIHNpbmNlIGlmIGEgbWFqb3IgcGFuZGVtaWMgaGl0cywgeW91IGRvbiB3YW50IHRvIGdvIG91dCBpbnRvIHRoZSB3b3JsZCBhbmQgZ2V0IGluZmVjdGVkLiBGdXJ0aGVybW9yZSwgZm9vZCBhbmQgc3VwcGxpZXMgbWF5IG5vdCBiZSBkZWxpdmVyZWQgaWYgZXZlcnlvbmUgaXMgdG9vIHNpY2sgdG8gZHJpdmUgdGhlIHRydWNrcyBvciBzdGFmZiB0aGUgZ3JvY2VyeSBzdG9yZS4KSXQncyBiZXN0IG5vdCB0byBkaXNhZ3JlZSB3aXRoIHBlb3BsZSB3aG8gd2llbGQgc2hhcnAgc2Npc3NvcnMgbmVhciB5b3VyIGhlYWQsIGJ1dCBpbiB0aGlzIGNhc2UsIHRoZSBzdHlsaXN0cyBhcmUgd3JvbmcgICBhIGhhaXJjdXQgaGFzIG5vIGVmZmVjdCBvbiBob3cgZmFzdCB5b3VyIGhhaXIgZ3Jvd3MuIFdoZXRoZXIgeW91IHRyaW0gaXQgb3Igbm90LCBoYWlyIGdyb3dzIGFib3V0IGhhbGYgYW4gaW5jaCAoMS4zIGNlbnRpbWV0ZXJzKSBldmVyeSBtb250aCBbc291cmNlOiBGb3NzXS4gVGhhdCBncm93dGggcmF0ZSB3b24ndCBzcGVlZCB1cCBpZiB5b3UgdGFrZSBtb3JlIGhhaXIgb2ZmIHRoZSBib3R0b20sIGFuZCBpZiB5b3UncmUgdHJpbW1pbmcgb2ZmIG1vcmUgdGhhbiB0aGF0IGVhY2ggbW9udGgsIHRoZW4geW91IGN1dCBvZmYgYWxsIHRoZSBuZXcgZ3Jvd3RoLiAKTW9yZSBwZW9wbGUgbmVlZCB0byBzZWUgdGhlbXNlbHZlcyBhcyB0aGVpciBvd24gaGVyby4gClNvIHRoYXQgYWxzbyBoZWxwZWQuLiAKQ3JlZXAgZGlzdHJpYnV0aW9uIGlzIGxpdHRsZSBtb3JlIGFtYmlndW91cy4gCkluIHRoZSBkZXBvc2l0aW9uLCBQYWRkb2NrIHNhaWQgaGUgaGFkIGEgY29uY2VhbGVkIHdlYXBvbnMgbGljZW5zZSBpbiBUZXhhcywgYnV0LCBvdGhlciB0aGFuIHRoYXQsIHRoZXJlIHdhcyBubyBkaXNjdXNzaW9uIG9mIGd1bnMuCk5vLiBWaXJ0dWFsIG1lbW9yeSBpcyBhIGZpbGUgc3RvcmVkIG9uIHRoZSBkaXNrIGFuZCBtYW5hZ2VkIGJ5dGhlIG9wZXJhdGluZyBzeXN0ZW0gc29mdHdhcmUuIEFzIG5lZWRlZCB0aGUgb3BlcmF0aW5nIHN5c3RlbWNvcGllcyBibG9ja3Mgb2YgaW50ZXJuYWwgbWVtb3J5IG91dCB0byB0aGlzIGZpbGUgdG8gZnJlZSBpbnRlcm5hbG1lbW9yeSBhbmQgY29waWVzIGJsb2NrcyBmcm9tIHRoaXMgZmlsZSB0byBpbnRlcm5hbCBtZW1vcnkgd2hlbiBhcHJvZ3JhbSBuZWVkcyBpdCBhZ2Fpbi4gQWxsIG9mIHRoZSBoYXJkd2FyZSB0aGF0IGlzIGludm9sdmVkIGRpcmVjdGx5IGluIHRoZSBvcGVyYXRpb24gb2Z2aXJ0dWFsIG1lbW9yeSBpcyBwYXJ0IG9mIHRoZSBjb21wdXRlciwgbm90IHRoZSBoYXJkZGlzay4gKEZ1bGwgQW5zd2VyKQpXaGF0IGNvbnN1bWVycyBkb24gdW5kZXJzdGFuZCBpcyB0aGF0IHRoZSB2ZW5kb3JzIGFyZSBmdW5kaW5nIHRoZXNlIGluc2FuZSByZXR1cm4gcG9saWNpZXMuIFdhbCBNYXJ0LCBDb3N0Y28sIGhvbWUgZGVwb3QsIExvd2UgZXRjLiBDbGFpbSB0aGUgbGVnYWwgbGltaXQgb2YgZGFtYWdlIG9uIGFsbW9zdCBldmVyeSBzaGlwbWVudCBmcm9tIHZlbmRvcnMgZXNzZW50aWFsbHkgdGFraW5nIGEgMTAlIGRpc2NvdW50IGVhY2ggdGltZS4gCkJ1dCBoZSBoYXMgcHJvY2VlZGVkIHRvIGxheSBjbGFpbSB0byBwcmVjaXNlbHkgdGhlIGlkZWEgb24gd2hpY2ggdGhhdCBleGNlcHRpb25hbGlzbSBpcyBiYXNlZDogYWx0aG91Z2ggd2UgYXJlIGFsbCBkaWZmZXJlbnQsIGhlIHNheXMsIGNyZWF0ZWQgdXMgZXF1YWwgQW5kIGJ5IHNheWluZyB0aGF0LCBvZGRseSBlbm91Z2gsIGhlIGFja25vd2xlZGdlcyB0aGF0IHRoZSBsYW5ndWFnZSBvZiBHb2QgZ2l2ZW4gdW5pdmVyc2FsIHJpZ2h0cyBpcyBub3cgdGhlIG9ubHkgYWNjZXB0YWJsZSBjdXJyZW5jeSBvZiBpbnRlcm5hdGlvbmFsIHJlbGF0aW9ucy4gCllvdXIgY2F0IGNvdWxkIGJlIHNlbnNpdGl2ZSB0byBzdHJlc3MsIG9yIGFsbGVyZ2ljIHRvIGEgbmV3IGZvb2Qgb3IgZ3Jvb21pbmcgcHJvZHVjdC4gSXQgY291bGQgZXZlbiBiZSBkdWUgdG8gc29tZXRoaW5nIGFzIHNpbXBsZSBhcyB0aGUgYWlyIGJlaW5nIHRvbyBkcnkgaW5kb29ycyBpbiB0aGUgd2ludGVyLiBJZiB5b3UgZmVlbCBsaWtlIHRoZSBhaXIgaXMgZHJ5IGluIHlvdXIgaG9tZSBhbmQgeW91ciBza2luIGZlZWxzIGRyeSBhbmQgdGlnaHQgYXMgYSByZXN1bHQsIHlvdSBjYW4gYmV0IHlvdXIgY2F0IGlzIGV4cGVyaWVuY2luZyB0aGUgc2FtZSB0aGluZy4gCkEgcGxhY2Ugd2hlcmUgaGUgd2FzIGxvdmVkIHVuY29uZGl0aW9uYWxseSBhbmQgdGltZSB3YXMgbmV2ZXIgYSBxdWVzdGlvbi4gQSBwbGFjZSBoZSB3b3VsZCBnbyB3aXRoIGEgYm94IGZ1bGwgb2YgY2hhbmdlIGFuZCBhbiBhZnRlcm5vb24gb2YgcG9rZXIgYW5kIGEgZ29vZCBjdXAgb2YgT21hJ3MgY29mZmVlLiBIZSB3aWxsIGJlIG1pc3NlZCBieSBoaXMgZ3JhbmRwYXJlbnRzIEFsIGFuZCBCYXJiIHdobyBoZSBhbHNvIGhhZCBhIGxvdmUgb2YgdGVhc2luZyBhbmQgZ2l2aW5nIG5pY2tuYW1lcyB0by4gCkEgc2Nob29sIGlzIGFsc28gZ29pbmcgdG8gaGF2ZSBhIGNlcnRpZmllZCB0ZWFjaGluZyBzdGFmZi4gCkZvcmVpZ25lcnMgbWlnaHQgbm90IGJlIGFkbWl0dGVkLCBub3Qgc3VyZS4gWW91IGNhbm5vdCBjaG9vc2UgdGhlIGdpcmwgdW5sZXNzIHlvdSBrbm93IG9uZSBieSBuYW1lLiJEYWVkZGFsIiBpcyBzaG9ydCBmb3IgZGFlc2hpbiBkZGFsZGRhbGksIHdoaWNoIG1lYW5zIG1hc3R1cmJhdGlvbiBieSBwcm94eS4gCkEgbGV0dGVyIGZyb20gTkFTQSBzYXlzIEJlYXVmb3J0IFNlYSBkcmlsbGluZyByaWdzIGNvdWxkIGJlIGFmZmVjdGVkIGJ5IGxhdW5jaGVzIGZyb20gaXRzIG9ubHkgaGlnaCBsYXRpdHVkZSByb2NrZXQgcmFuZ2UuCkhlIGhvcGVkIHRvIHNob3cgdGhhdCB3ZSBkaWQgbm90IG5lZWQgdG8gaGlyZSBhZGRpdGlvbmFsIHBlb3BsZSB0byBoaXMgYm9zc2VzLi4gClRvIGdpdmUgeW91IGFuIGlkZWEgb2Ygd2hlcmUgdGhhdCBsYW5kcyBpbiByZWxhdGlvbiB0byB0aGUgb3RoZXIgY2FuY2VycywgbHVuZyBjYW5jZXIgZ2V0cyAkMjQ3LjYgbWlsbGlvbiwgcHJvc3RhdGUgY2FuY2VyIGdldHMgJDI4NS40IG1pbGxpb24sIGFuZCBicmVhc3QgY2FuY2VyIGdldHMgJDU3Mi42IG1pbGxpb24uCkFuZGVyc29uLCB3aG8gbGl2ZXMgd2l0aCBoaXMgbW9tLCBkZWNsaW5lZCB0byBjb21tZW50IHdoZW4gcmVhY2hlZCBhdCB0aGVpciBGbHVzaGluZyBob21lLgpUaGUgdHdvIHBsYXllcnMsIGluIHRoZSBmaXJzdCByb3VuZCBvZiBiZXR0aW5nLCBnZXQgYWxsIHRoZWlyIGNoaXBzIGluIHRoZSBtaWRkbGUgb2YgdGhlIHBvdCBhbmQgYXJlIG5vdyBib3RoIGluLCBiZWZvcmUgdGhlIHJlbWFpbmluZyBjYXJkcyBhcmUgZGVhbHQuIE5lYXJseSAyMCBwZXJjZW50IG9mIHRoZSB0aW1lLCB0aGUgYWNlcyBMT1NFIHRvIGFuIGluZmVyaW9yIGhhbmQuIApJbiBhZGRpdGlvbiwgdGhlIGZvbGxvd2luZyBtZWFzdXJlcyB3aWxsIGJlIGVuZm9yY2VkIHdoaWxlIG9uIGJlYWNoIHByb3BlcnR5IGZyb20gdGhlIDkwMCBibG9jayBvZiBTZWFicmVlemUgbm9ydGggdG8gdGhlIDE3MDAgYmxvY2sgb2YgTm9ydGggQTFBLiBQdXJzdWFudCB0byBDaXR5IG9mIEZvcnQgTGF1ZGVyZGFsZSBPcmRpbmFuY2UgQyAxOSAwMywgU2VjLiA4IDU1LjUsIGJlYWNoIHByb3BlcnR5IGlzIGRlZmluZWQgYXMgdGhlIGFyZWEgYmV0d2VlbiB0aGUgd2F0ZXIgbGluZSBhbmQgdGhlIHdlc3Rlcm5tb3N0IHNpZGV3YWxrIG9mIFN0YXRlIFJvYWQgQTFBIHdpdGhpbiB0aGUgQ2l0eSBvZiBGb3J0IExhdWRlcmRhbGUuClRoZW4gZ28gZnJvbSB0aGVyZS4gU2hlIG1heSBoYXZlIHNvbWUgZXhwbGFuYXRpb24geW91IHRoaW5rIGlzIHJlYXNvbmFibGUsIGJ1dCBzdGlsbCBjaGVjayBiYWNrIGluIGF0IGEgbGF0ZXIgdGltZSBhbmQgc2VlIGlmIHRoaW5ncyBoYXZlIGNoYW5nZWQuIFNoZSBtYXkgYWxzbyBzYXkgc29tZXRoaW5nIHRoYXQgaW5kaWNhdGVzIHRoZXJlIGlzIGEgcHJvYmxlbSAod2hldGhlciB0aGF0J3Mgc3ltcHRvbXMgb2YgYW4gZWF0aW5nIGRpc29yZGVyIG9yIHNvbWV0aGluZyBlbHNlLCBsaWtlIHNoZSdzIGhhdmluZyBkaWdlc3RpdmUgcHJvYmxlbXMgZnJvbSBhIGxvdCBvZiBmb29kcykuIEluIHRoYXQgY2FzZSwgc2hvdyB5b3VyIHN1cHBvcnQgYW5kIG9mZmVyIHRvIGxvb2sgZm9yIGhlYWx0aGNhcmUgYXNzaXN0YW5jZSB0b2dldGhlci4gQXQgdGhhdCBwb2ludCwgYSBzZXJpb3VzIGNvbnZlcnNhdGlvbiB3aXRoIHlvdXIgcGFyZW50cyBpcyBuZWVkZWQuIElmIHRoZXkgYXJlbid0IGdvaW5nIHRvIGxvb2sgYWZ0ZXIgaGVyIHdlbGxiZWluZywgaXQncyBnb2luZyB0byB0YWtlIG1vcmUgc3VwcG9ydCBhbmQgc3RyYXRlZ2l6aW5nIG9uIHlvdXIgcGFydCB0byBnZXQgeW91ciBzaXN0ZXIgaGVscC4gSSB1c2VkIHRvIGhhdGUgbXkgYm9keSBhbmQgd29uZGVyIHdoZW4gYW5kIHdoYXQgY2hhbmdlcyBJIHdvdWxkIGhhdmUgdG8gbWFrZSB0byBsb3ZlIG15IGJvZHkuIEluc3RlYWQsIEkgZm91bmQgc29tZSBwZWFjZSB0aHJvdWdoIGEgZGlmZmVyZW50IHBhdGggIGRlY2lkaW5nIG15IGJvZHkgaXMgd2hhdCBpdCBpcywgaXQncyBvbmx5IG9uZSB0aW55IHBhcnQgb2Ygd2hvIEkgYW0sIGFuZCBJJ20gZ29pbmcgdG8gdHJ5IHRvIGZvcmdldCBhYm91dCBpdCBtb3N0IG9mIHRoZSB0aW1lLiBXaGF0IGRvIHlvdSBicmluZyB0byB0aGUgd29ybGQgdGhhdCBpc24ndCB5b3VyIGFwcGVhcmFuY2U/Ck9mIGNvdXJzZSBJIGRpZG4gZXZlbiBhc2sgZm9yIG15IG1vbmV5IGJhY2suIApJIGhhdmUgd2F0Y2hlZCBhIGxvdCBvZiBzdHJhdGVneSB2aWRlb3Mgb24gaG9sZGVtIGFuZCByZWFkIHNvbWUgYm9va3MuIApNeSBzb24gZG9lc24gd2FsayAgIGhlIGhhcyBzcGFzdGljIGRpYXBsZWdpYyBjZXJlYnJhbCBwYWxzeSBhbmQgZHlzdG9uaWEuIFlvdSBoYXZlIGFueSBpZGVhIGhvdyBoYXJkIGl0IGlzLCB0byBnZXQgYSA1eW8gcmVhZHkgZm9yIHNpbmdsZSBkaWdpdCB3ZWF0aGVyIGFuZCBhIG5vcm1hbCBoeXBlciA0eW8/IEhhcmQgYWYuIApZZWFoLCB0aGF0IGRlZmluaXRlbHkgaGFwcGVucyBmb3IgbWUhIFRoYXQgYmVpbmcgc2FpZCwgSSBkbyBoYXZlIGxvY2FsaXplZCBkeXNwaG9yaWEgd2l0aCBteSBBZGFtIGFwcGxlIHRvbywgc28gSSB0aGluayB0aGF0IGJvdGggY2FuIGV4aXN0LgpEZXZlbG9wIGFuIGV4ZXJjaXNlIHJvdXRpbmUgdGhhdCB3aWxsIGdldCB5b3Ugb3V0IG9mIHRoZSBob3VzZS4gWW91IGNhbiBnbyB0byBhIGxvY2FsIGd5bSBvciBjb21tdW5pdHkgY2VudGVyIGFuZCBkZXZlbG9wIGEgcGVyc29uYWwgZXhlcmNpc2Ugcm91dGluZSBieSBkb2luZyBwdXNoIHVwcywgc2l0IHVwcywgYW5kIHdlaWdodGxpZnRpbmcgZm9yIHlvdSB0byB3b3JrIG9uIGJ5IHlvdXJzZWxmLiBHcmFiIGEgZmV3IGZyaWVuZHMgdG8gZ28gYmlrZSByaWRpbmcsIHNrYXRlYm9hcmRpbmcsIG9yIHRvIGp1c3QgZ2V0IG91dHNpZGUgYW5kIHBsYXkgaW4gdGhlIHBhcmsuWzEzXQpUaGV5IGNhbiBhZmZvcmQgdGhlbSBhbGwuIEF0dGFja2luZyBnaWFudCBjb21wYW5pZXMsIEkgdGhpbmsgd2lsbCBjYXVzZSB0aGUgc3RvY2sgbWFya2V0IHRvIGRyb3AgaHVydGluZyB1cyBmaW5hbmNpYWxseS4gQW5kIHNvbWUgb2YgdGhlcmUgb3RoZXIgcGxhbnMgbGlrZSB0aGUgZ3JlZW4gbmV3IGRlYWwgd2lsbCBjb3N0IGEgZm9ydHVuZSB3aGljaCBJIHByZXR0eSBzdXJlIGlmIGl0IHdhcyB0cnVseSBtYWRlIHRvIHdvcmsgKHdoaWNoIGl0IGhhcyB0byBjYXVzZSBvdGhlcndpc2UgY2F0YXN0cm9waGUgd2lsbCBoYXBwZW4pLCB3aWxsIGhpdCB1cyBpbiB0aGUgcG9ja2V0Ym9vayBhcyB3ZWxsLiAKSSBrbm93IEkgb24geWVhciA3IGZpZ2h0aW5nIHRoaXMgU1NJIGJ1bGxzaGl0LiBTcGVudCA1IG9mIHRoZW0gd2l0aCBhIGh1Z2UgTGF3eWVyIGNvbXBhbnkganVzdCB0byBnZXQgc2NyZXdlZC4gTm93IEkgZmlnaHRpbmcgYSBzZXhpc3Qgd2hvIGRlbnlpbmcgdG8gbXkgYXBwZWFsIGJlY2F1c2UgdGhlIHN0YXRlIGlzbnQgZ3JhbnRpbmcgZGlzYWJpbGl0eSBiZWNhdXNlIEkgY2FsbGVkIHRoZW0gb3V0IG9uIHRoZWlyIGJ1bGxzaGl0LiAKSSBtZWFzdXJlZCBteSBUREVFIGFuZCBteSBnb2FsIHdhcyB0byBtZWV0IHRoYXQgKCA1MDAgZm9yIGEgbGIgYSB3ZWVrICwgKzUwMCBmb3IgQkYuIApJIGFwcHJlY2lhdGUgdGhlIG9wdGltaXNtLCB3aGljaCBJIGJlbGlldmUgaXMgaW1wb3J0YW50LCBpZiBub3QgYSBndWFyZGVkIG9wdGltaXNtLiBIb3dldmVyIEknbSBub3Qgc3VyZSBJJ2Qgc2F5IHRoZSBtYWpvcml0eSBvZiBmb3NzaWwgZnVlbHMgYXJlIGluIHRoZSBncm91bmQuIEFuZCBldmVuIHN0aWxsLCB3ZSBhcmUgbm90IGluIGEgcG9zaXRpb24gdG8gc3RvcCB0aGlzIHRyYWluIGFueXRpbWUgc29vbiwgZXZlbiB3aXRoIGFsbCB0aGUgcG9saXRpY2FsIHdpbGwgY29taW5nIHRvZ2V0aGVyIGFsbCBhdCBvbmNlLiAKVGhlIHN0b3J5IG9mIEEgTGl0dGxlIExpZmUgZm9sbG93cyBmb3VyIGJyb2tlIGNsYXNzbWF0ZXMgd2hvIG1vdmUgdG8gTmV3IFlvcmsgdG8gbWFrZSB0aGVpciB3YXkuIFRoZSBib29rIGZvbGxvd3MgdGhlaXIgbGl2ZXMgYW5kIGhvdyB0aGV5IGNvcGUgd2hlbiB0aGV5IGJlY29tZSBzdWNjZXNzZnVsIGFuZCBob3cgdGhleSBnZXQgdGluZ2VkIGJ5IGFkZGljdGlvbiBhbmQgcHJpZGUuIEhvd2V2ZXIsIHRoZWlyIGdyZWF0ZXN0IGNoYWxsZW5nZSBpcyBKdWRlIGFuZCBzZWNyZXRzIG9mIGhpcyBwYXN0Li4gCk1VTUJBSTogQW4gb2Zmc2hvcmUgY2FzaW5vIHdpdGggJ25vIGxpbWl0cycgdGFibGVzLCB0b3V0ZWQgYXMgdGhlIGJpZ2dlc3QgaW4gU291dGggQXNpYSwgd2lsbCBvcGVuIGluIEdvYSBuZXh0IG1vbnRoLgpJdCBpcyByZW1hcmthYmxlIHRoYXQgaGUgd2FzIG5vdCBrbmlnaHRlZCBmb3IgaGlzIHNlcnZpY2VzIHRvIGNyaWNrZXQsIGFuZCB0aGF0IG5vIGhvbm91cnMgY2FtZSBoaXMgd2F5IGZvciB0aGUgc3RlcmxpbmcsIGRldm90ZWQgd29yayBoZSBkaWQgd2l0aCB0aGUgdHJhaW5pbmcgc2hpcCBNZXJjdXJ5LgpXaGF0IHdvcnNlIGlzIHRoYXQgdGhlIGJvdW5jZXIgdG9sZCB0aGlzIHRvIHRoZSBzdHJhbmdlciBJIHdhcyBjaGF0dGluZyB3aXRoIGFuZCBub3QgdG8gbWUsIHdoaWNoIHJlYWxseSBzdHJ1Y2sgYSBuZXJ2ZSB3aXRoIG1lIGFuZCBjYXVzZWQgbWUgdG8geWVsbCBhdCB0aGUgYm91bmNlciAoaW4ga29yZWFuKSB0aGF0IHRoaXMgaXMgbm90IGFjY2VwdGFibGUgYW5kIHRoZXJlIGlzIG5vIHJlYXNvbiB0byBiYXIgbWUgZnJvbSBlbnRlcmluZyB0aGUgY2x1Yi4gIldlbGwsIHdlIG9ubHkgcGxheSBLb3JlYW4gbXVzaWMgaGVyZSwgYW5kIHlvdSBtaWdodCBiZSB1bmNvbWZvcnRhYmxlLiIgSSBsb3ZlIEtvcmVhbiBtdXNpYyEgTGV0IG1lIGluISAiV2VsbCwgdGhlIGNsaWVudHMgYXJlIEtvcmVhbiBoZXJlLCB5b3UgbWlnaHQgbm90IGZpdCBpbi4iIEkgbG92ZSBpbnRlcmFjdGluZyB3aXRoIEtvcmVhbnMgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHRoaXMgY3VycmVudCBtb21lbnQsIGxldCBtZSBpbiEgIldlbGwsIHlvdSBoZXJlIGJ5IHlvdXJzZWxmLiBXZSBkb250IHRha2UgcGVvcGxlIGJ5IHRoZW1zZWx2ZXMsIGdvIHRvIHRoZSBjbHViIGFjcm9zcyB0aGUgc3RyZWV0LiIgQW4gaG91ciBsYXRlciBJIHdlbnQgdG8gYSBkaWZmZXJlbnQgY2x1YiAoYWdhaW4gYnkgbXlzZWxmKSBhbmQgYXMgc29vbiBhcyBJIGdvdCB0byB0aGUgZnJvbnQgb2YgdGhlIHF1ZXVlLCAiV2UgYXJlIHNvcnJ5IGJ1dCBuby4iIFl1cCwgZ290IGl0LiAKT25lIG9mIHRoZSBtb3N0IGludGVyZXN0aW5nIHRoaW5ncyBhYm91dCBwbGF5aW5nIHBva2VyIHdhcyBsZWFybmluZyB0aGUgZGlzY2lwbGluZSBvZiBub3QgY29uZnVzaW5nIHRoZSByaWdodCBkZWNpc2lvbiB3aXRoIHRoZSBpbmRpdmlkdWFsIG91dGNvbWUgb2YgYW55IHNpbmdsZSBoYW5kLCBidXQgdGhhdCdzIHdoYXQgYSBsb3Qgb2YgcG9rZXIgcGxheWVycyBkby4gSWYgdGhleSB3aW4gYSBoYW5kLCB0aGV5IGFzc3VtZSB0aGV5IG1hZGUgdGhlIHJpZ2h0IGJldCwgYW5kIGlmIHRoZXkgbG9zZSBhIGhhbmQsIHRoZXkgb2Z0ZW4gYXNzdW1lIHRoZXkgbWFkZSB0aGUgd3JvbmcgYmV0LiAKVGhpcyBpcyBub3QgdHJ1ZSBhdCBhbGwgaW4gbXkgZXhwZXJpZW5jZSBhdCB0aGUgcGFzdCAzIGNvbXBhbmllcyBJIHdvcmtlZCBmb3IuIEkgd29ya2VkIG15IGFzcyBvZmYgYXQgbXkgY3VycmVudCBjb21wYW55IHdobyBhbHNvIHN0YXJ0ZWQgbWUgb2ZmIGF0IDM0ayB3aGVuIEkgc3RhcnRlZCBpbiBzdW1tZXIgMjAxNy4gU2VyaW91c2x5IHdvcmtlZCBteSBhc3Mgb2ZmLCA1MCsgaG91ciB3ZWVrcyBhbmQgbG9va2luZyBmb3IgbW9yZSByZXNwb25zaWJpbGl0aWVzLiAKUmF0aGVyIHRoYW4gcmVzb3J0aW5nIHRvIHBzeWNob3Ryb3BpYyBkcnVncywgaXQgd291bGQgYmUgcHJ1ZGVudCB0byBleHBsb3JlIHdoZXRoZXJtYWduZXNpdW0oTWcpIHN1cHBsZW1lbnRhdGlvbiBpbXByb3ZlcyBkZXByZXNzaW9uLCBzaW5jZSB0aGlzIGVzc2VudGlhbCBtaW5lcmFsIGlzIGltcGxpY2F0ZWQgaW4gdGhlIHBhdGhvcGh5c2lvbG9neSBvZiB0aGlzIGRpc29yZGVyLiAKSG9seSBzaGl0YmFsbHMsIEkgc2VlbiBzb21lIGNsaWNrYmFpdCB0cmFzaCBZb3VUdWJlIGNoYW5uZWxzIHNpbmNlIEkgc3RhcnRlZCBwb3N0aW5nIGhlcmUgb24gdGhlIHJlZyBhIHdlZWsgb3IgdHdvIGFnbyBidXQgbG9vayBhdCB0aGUgZnVja2luZyBzdGF0ZSBvZiB0aGlzIGd1eSBvdXRwdXQuIEkgdHJ5IG5vdCB0byBsaW5rIGRpcmVjdGx5IGJ1dCBhIHNjcmVlbmdyYWIgd29uIGRvIHRoaXMganVzdGljZTouCiJXZSBkb24ndCBleGNsdWRlIGNvbW1vbiBwaHJhc2VzIGFuZCBjbGljaCBleHByZXNzaW9ucyBmcm9tIHRoZSBhbGdvcml0aG0sIiBhIHJlcHJlc2VudGF0aXZlIGZyb20gVHVybml0aW4gZXhwbGFpbnMgdG8gbWUgYWJvdXQgdGhlIHByb2Nlc3MuICJXZSBjaGVjayBzdHVkZW50IHdvcmsgYWdhaW5zdCBvdXIgZGF0YWJhc2UsIGFuZCBpZiB0aGVyZSBhcmUgaW5zdGFuY2VzIHdoZXJlIHN0dWRlbnQgd3JpdGluZyBpcyBzaW1pbGFyIHRvLCBvciBtYXRjaGVzIGFnYWluc3QsIG9uZSBvZiBvdXIgc291cmNlcywgd2Ugd2lsbCBmbGFnIHRoaXMgZm9yIGFuIGluc3RydWN0b3IgdG8gcmV2aWV3LiBVbHRpbWF0ZWx5LCBodW1hbiBqdWRnZW1lbnQgaXMgcmVxdWlyZWQgdG8gbWFrZSBhIGRldGVybWluYXRpb24gYWJvdXQgcGxhZ2lhcmlzbSwgYW5kIGl0J3MgbGlrZWx5IHRoYXQsIGlmIGEgY29tbW9ubHkgdXNlZCBwaHJhc2UgaXMgZmxhZ2dlZCwgYW4gaW5zdHJ1Y3RvciB3b3VsZCBtYWtlIHRoZSBkaXN0aW5jdGlvbi4iLiAKUmFscGgsIHdobyBsaXZlZCBhYnJvYWQgZm9yIG1hbnkgeWVhcnMsIHNob3VsZCBiZSBlbnRpdGxlZCB0byBhYm91dCA2NSBwZXIgY2VudCBvZiB0aGUgbWF4aW11bSwgd2hpY2ggd29ya3Mgb3V0IHRvIGFib3V0ICQ5LDAwNSBhbm51YWxseSBiYXNlZCBvbiB3aGF0IHdpbGwgYmUgMjUgeWVhcnMgb2Ygd29yayBmb2xsb3dpbmcgaGlzIGFkdmFuY2VkIGRlZ3JlZXMuIApMaWtlIG1heWJlIHRoZXkgYXJlIHRyaWNreSB0byByZXBhaXIsIG9yIGRvbiB1c2Ugc3RhbmRhcmQgcGFydHMgb3Igc29tZXRoaW5nIGxpa2UgdGhhdC4gClRoZXJlIGFuIG9sZCBnZW5lcmF0aW9uIG9mIGNvbnNlcnZhdGl2ZXMgYW5kIGEgeW91bmcgb25lLiAKRGlkbiB0aGluayBJIHdvdWxkIGJlIGdvb2QgYXQgaXQgYmVjYXVzZSBJIGtub3cgbXkgc29jaWFsIGdhbWUgaXNuIGFzIHN0cm9uZy4gCkJ1eWluZyBzdHVkIGVhcnJpbmdzIGluIFRhc21hbmlhIGlzIGEgbG90IG9mIGZ1biBhbmQgdGhpcyBhcnRpY2xlIHdpbGwgaGVscCB5b3Ugd2l0aCBob3cgdG8gY2hvb3NlIHN0dWQgZWFycmluZ3MgdGhhdCB3aWxsIGJlIGEgcGVyZmVjdCBtYXRjaCBmb3IgeW91IG9yIGEgc3BlY2lhbCBmcmllbmQuCkhvd2V2ZXIsIHRoZSBUUFAgMTEgcHJlc2VydmVkIG1hbnkgb2YgdGhlIHJlZHVjdGlvbnMgaW4gdHJhZGUgYmFycmllcnMgYW5kIGluY3JlYXNlZCBtYXJrZXQgYWNjZXNzIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgaGVscGVkIG5lZ290aWF0ZS4gRGFkZSBjb21wYXJlZCB0aGUgVW5pdGVkIFN0YXRlcyB3YWxraW5nIGF3YXkgZnJvbSB0aGUgZGVhbCB0byBhIHBva2VyIHBsYXllciBnZXR0aW5nIHRvIHRoZSBmaW5hbCByb3VuZCBhbmQgaW5zdGVhZCBvZiBjYXNoaW5nIGluLCB0aHJvd2luZyB0aGUgY2hpcHMgb24gdGhlIHRhYmxlIHRvIGJlIGRpdnZpZWQgdXAgYnkgdGhlIHJlc3Qgb2YgdGhlIHBsYXllcnMuCiJUbyB0YWxrIGFib3V0ICdodW1hbiBwb2tlcicgYW5kIGEgJ2JsaWdodCBvbiBvdXIgbmF0aW9ucycgaXMgdW5jaGFyYWN0ZXJpc3RpY2FsbHkgYmx1bnQgICBidXQgbmVpdGhlciBncm91cCBhY3R1YWxseSBzcGVsbHMgb3V0IHdoYXQgdGhleSB0aGluayBzaG91bGQgaGFwcGVuIG5leHQuCkl0IGRlZmluaXRlbHkgYSBtb3ZpZS4gCllvdXIgY2hpbGRyZW4gd2lsbCBub3QgaGF0ZSB5b3UuIFRoZSBvbmx5IHdheSB0aGV5IHdvdWxkIGZpbmQgb3V0IGFib3V0IHRoaXMgaXMgaWYgc2hlIHRvbGQgdGhlbS4gSWYgc2hlIGRpZCwgdGhlbiBzaGUnZCBiZSB0aGUgc2VsZmlzaCBvbmUgdHJ5aW5nIHRvIHR1cm4gdGhlbSBhZ2FpbnN0IHlvdS4KWmVlZWVlICAyIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpUaGUgc3RhdGVtZW50IGV4cHJlc3NlZCBjb25jZXJuIGFib3V0IHRoZSB3b21lbidzIGhlYWx0aCwgbm90aW5nIHRoYXQgTGluZywgMzIsIGhhcyBhIHNlcmlvdXMgbWVkaWNhbCBjb25kaXRpb24gYW5kIHRoYXQgTGVlJ3MgNCB5ZWFyIG9sZCBkYXVnaHRlciBpcyBzaG93aW5nICJzaWducyBvZiBhbmd1aXNoIG92ZXIgdGhlIGFic2VuY2Ugb2YgaGVyIG1vdGhlciIuCmV2ZW50IHRvIGJlbmVmaXQgdGhlIEFydGhyaXRpcyBGb3VuZGF0aW9uIFdlZG5lc2RheQpCZWNhdXNlIG9mIHN0cmlwIHBva2VyJ3MgcG9wdWxhcml0eSwgdGhlcmUgaGF2ZSBiZWVuIHRob3VzYW5kIG9mIHNpdGVzIGRlZGljYXRlZCB0byB0aGUgZ2FtZS4gSXQgY2FuIHJhbmdlIGZyb20gaW50aW1hdGUgcG9rZXIgcGxheSwgdG8gcGFydHkgcG9rZXIgdHlwZSBnYW1lcy4gQWxzbywgYmVjYXVzZSBvZiB0aGUgYWR2ZW50IG9mIGN5YmVyIG9ubGluZSB0ZWNobm9sb2d5LCBzdHJpcCBwb2tlciBpcyBhbHJlYWR5IGF2YWlsYWJsZSBvbmxpbmUuIFNvbWUgc3RyaXAgcG9rZXIgZ2FtZXMgaGF2ZSBwb2tlciBjaGlwcywgbW9uZXkgYmV0cyBhbmQgc3RyaXBwaW5nIGFsbCBjb21iaW5lZCBpbiB0aGUgdG91Y2ggb2YgYSBidXR0b24sIG9yIGNsaWNrIG9mIGEgbW91c2UuIFNvbWUgc3RyaXAgcG9rZXIgc2l0ZXMgZXZlbiBoYXMgc3RyaXBwZXJzIGF2YWlsYWJsZSBvbmxpbmUuIFRocm91Z2ggYSBoZWZ0eSBjcmVkaXQgY2FyZCBhcHBsaWNhdGlvbiBhbmQgcmVnaXN0cmF0aW9uLCBvbmUgY2FuIGF2YWlsIG9mIGhvdXJzIG9mIG9ubGluZSBzdHJpcCBwb2tlciBnYW1pbmcuIFNvbWUgb25saW5lIHN0cmlwIHBva2VyIHNpdGVzIGhhdmUgcGljdHVyZXMgdGhhdCBzdHJpcCBhcyB5b3Ugd2luLCBidXQgc29tZSBoYXZlIHJlYWwgdGltZSBzdHJpcHBlcnMgdGhhdCB5b3UgY2FuIHZpZXcgc3RyaXBwaW5nIHZpYSBhIHdlYiBjYW1lcmEuIFN0cmlwIHBva2VyLCBqdXN0IGxpa2UgYW55IG90aGVyIGFkdWx0IGdhbWUgb3IgZW50ZXJwcmlzZSwgaXMgcmVndWxhdGVkIGluIG1vc3QgcGFydHMgb2YgdGhlIHdvcmxkLiBTb21lIG1vcmUgbGliZXJhbCBuYXRpb25zLCBzdWNoIGFzIHRob3NlIGluIEV1cm9wZSBoYXZlIHN0cmlwIHBva2VyIFRWIHNob3dzISBUaGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoYXQgYW5kIEFtZXJpY2FuIHN0cmlwIHBva2VyIHNob3dzIGlzIHRoYXQgdGhlIEV1cm8gdmVyc2lvbiBhbGxvd3MgdG90YWwgbmFrZWRuZXNzIHZpYSBhIFRWIGJyb2FkY2FzdCEKU2F5LCB5b3UgZG9uJ3QgaGF2ZSBhbnkgaWRlYSwgc3RpbGwgeW91IHdpbGwgYmUgZmluZGluZyBzb21lIHByb2R1Y3RzIHRvIHB1cmNoYXNlIGFzIHRoZSB0b3AgbGlzdGVkIG9uZXMgbGlrZSBUaGUgRmx1c2ggRmFjZXMgUG9rZXIgQ2FyZCBQcm90ZWN0b3Igd2lsbCBkZWZpbml0ZWx5IGF0dHJhY3QgeW91Li4gCkkgc3VyZSB0aGF0IG5haXZlIG9mIG1lIHRvIHRoaW5rIGZvciBtYW55IHJlYXNvbnMgYnV0IGlmIGFueW9uZSBjYW4gYnJlYWsgaXQgZG93biBmb3IgbWUgaXRkIGJlIGludGVyZXN0aW5nIHRvIHJlYWQuIApDYW4gYnVkZ2V0LiAKQ3VydmVkU2l4ICA0MjQgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClVybiBiZWFyZXJzIGFyZSBncmFuZGRhdWdodGVycyBMaW5kc2F5IGFuZCBKZW5uaWZlci4gSG9ub3JhcnkgdXJuIGJlYXJlcnMgYXJlIGFsbCBvZiBoaXMgZnJpZW5kcyBwYXN0IGFuZCBwcmVzZW50LiAKQWxzbywgaXQncyBub3Qgc3VzdGFpbmFibGUgaW4gdGhlIGZhY3QgdGhhdCBvdXIgaW5mcmFzdHJ1Y3R1cmUgcHJvbW90ZXMgYSBsb3Qgb2YgZHJpdmluZy4gSWYgd2Ugd2VyZSBtb3JlIGNvbXBhY3QgYW5kIHdlIGJ1aWx0IHVwd2FyZHMsIGFsbCB3aGlsZSBpbXBsZW1lbnRpbmcgYSBncmVhdGVyIHRyYW5zcG9ydGF0aW9uIHN5c3RlbSwgdGhlbiB3ZSB3b3VsZCBiZSBtb3JlIHN1c3RhaW5hYmxlLiAKU28uIFdoeSBhcmUgeW91IGJlaW5nIG9uZT8gWW91IGRvbiBIQVZFIHRvIGJlIHBldHR5LiAKQnV0IGZyb20gcHJldmlvdXMgZXhwZXJpZW5jZXMgNiBqb2JzIEkgY2FuIHNwbGl0IHRoZW0gaW50byBlbmpveWFibGUgYW5kIGF3ZnVsbC4gCk5vIG1hdHRlciBob3cgaW5leHBlcmllbmNlZCB5b3UgYXJlLCBWaWRlbyBQb2tlciBpcyBvbmUgb2YgdGhvc2UgZ2FtZXMgdGhhdCB5b3UgY2FuIGFjdHVhbGx5IGJlYXQgdXNpbmcgbm8gbW9yZSB0aGFuIHRoZSBiYXNpYyBzdHJhdGVneSBhbmQgc29tZSBjb21tb24gc2Vuc2UuIEFzIGZ1biBhcyB0aGlzIGdhbWUgY2FuIGJlIChzdHJhdGVneSB3aXNlKSwgc29tZSBtb25ldGFyeSBpbmNlbnRpdmUgZXZlcnkgbm93IGFuZCB0aGVuIGNhbiBodXJ0LCB3aGljaCBpcyB3aHkgaXQgaXMgYWx3YXlzIHJlY29tbWVuZGFibGUgdG8gbGVhcm4gYSBmZXcgdHJpY2tzIG9mIHRoZSB0cmFkZSBiZWZvcmUgeW91IHN0YXJ0IHBsYXlpbmcgd2l0aCB0aGUgYmlnIGJveXMuIApJIHdhcyB3cm9uZy4gU2luY2UgSSB0b29rIGFsbCB0aGVzZSBtZWFzdXJlcyB0byBpbXByb3ZlIG15IHNsZWVwIG15IHByb2R1Y3Rpdml0eSBhbmQgb3ZlcmFsbCB3ZWxsIGJlaW5nIGlzIHNvIG11Y2ggYmV0dGVyLiAKTm8sIHRoZSBtZW1vcnkgY2hpcHMgYXJlIFJBTSwgUmFuZG9tIEFjY2VzcyBNZW1vcnkuIFRoZXNlIGFyZSBhY3R1YWwgY2hpcHMgdGhhdCBmaXQgaW50byBzbG90cyBvbiB0aGUgbW90aGVyYm9hcmQuIFRoaXMgdHlwZSBvZiBtZW1vcnkgaXMgdGVtcG9yYXJ5IG1lbW9yeSB0aGF0IHlvdXIgY29tcHV0ZXIgdXNlcyBmb3IgY3VycmVudCBvcGVyYXRpb25zLiAKQWNjZXNzaWJpbGl0eSBvZiBxdWFsaXR5IGluZm9ybWF0aW9uICAgcG9rZXIgc3RyYXRlZ3kgdXNlZCB0byBiZSBsaW1pdGVkIHRvIGEgaGFuZGZ1bCBvZiBib29rcyBsaWtlIFN1cGVyIFN5c3RlbS4gVGhlbiBpdCBncmV3IHdpdGggb25saW5lIHBva2VyIHdpdGggcHJlbWl1bSB0cmFpbmluZyBzaXRlcyBsaWtlIENhcmRSdW5uZXJzLCBQb2tlclhGYWN0b3IsIERldWNlc0NyYWNrZWQsIGV0Yy4gVGhvc2Ugc2l0ZXMgd2VyZSB0aGUgdHJhaWxibGF6ZXJzIHdpdGggcmVnYXJkcyB0byBzb21lIHN0cmF0ZWdpZXMgdGhhdCwgd2hpbGUgbm93IHNlZW0gZmFpcmx5IGJhc2ljLCB3ZXJlIHJldm9sdXRpb25hcnkgKDMgYmV0dGluZyBsaWdodCwgaXNvbGF0aW5nIHJhaXNlcnMsIGV0YykgaW4gc29hcmluZyB3aW4gcmF0ZXMuClN1cHJlbWUgQ291cnQgYWdyZWVkIHdpdGggdGhlbSAoY2hpcm9zKSBpbiAxOTg3IGFuZCBhZ2FpbiBpbiAxOTkwLiBJdCB3YXMgZm91bmQgdGhhdCB0aGUgQU1BIHdhcyBndWlsdHkgb2YgaWxsZWdhbCBhbnRpdHJ1c3QgYWN0aXZpdGllcyBhZ2FpbnN0IHRoZSBjaGlyb3ByYWN0aWMgcHJvZmVzc2lvbiwgb3JkZXJlZCBhbiBpbmp1bmN0aW9uIG9uIHRoZWlyIGFjdGl2aXR5LCBhbmQgZm9yY2luZyB0aGVtIHRvIHByaW50IHRoZSBjb3VydHMgZmluZGluZ3MgaW4gdGhlIEpvdXJuYWwgb2YgdGhlIEFtZXJpY2FuIE1lZGljYWwgQXNzb2NpYXRpb24uT25lIHN1cnZleSBvZiAyNjYgbWVkaWNhbCBzdHVkZW50cyBhdCBHZW9yZ2V0b3duIFVuaXZlcnNpdHkgcmV2ZWFsZWQgbW9yZSB0aGFuIDc1JSBmZWx0IHRoYXQgYWx0ZXJuYXRpdmUgbWVkaWNpbmUgdGVjaG5pcXVlcyBzaG91bGQgYmUgaW5jbHVkZWQgaW4gdGhlaXIgY3VycmljdWx1bS4gCllvdSBjYW4gZ2V0IGEga29yZWFuIGRyaXZlcnMgbGljZW5zZSBubyBwcm9ibGVtLCBidXQgeW91ciBzdGF0ZXNpZGUgbGljZW5zZSBzaG91bGQgc3RpbGwgcmVtYWluIHZhbGlkIHVubGVzcyB5b3UgbmV2ZXIgcGxhbiBvbiBnb2luZyBiYWNrIHRvIHRoZSBzdGF0ZXMgYWdhaW4sIGluIHdoaWNoIGNhc2UgeW91IHR1cm4gaW4geW91ciBhbWVyaWNhbiBsaWNlbnNlIGFuZCBjb250aW51YWxseSByZW5ldyB5b3VyIGtvcmVhbiBsaWNlbnNlIGZvcmV2ZXIgYWxsb3dpbmcgeW91ciBzdGF0ZXNpZGUgbGljZW5zZSB0byBleHBpcmUuLiAKRnIgZWluZW4gVGFnZXNhdXNmbHVnIGVtcGZpZWhsdCBzaWNoIGRpZSBBbmZhaHJ0IHZvbiBPc3RlbiB1bmQgZGllIFJja3JlaXNlIGJlciBkZW4gV2VzdGVuLiAKSXMgZmlsbGVkIHdpdGggcGxlbnR5IG9mIGRlc3RpbmF0aW9ucyB0aGF0IGFyZSBwZXJmZWN0IGZvciB5b3UuIApJIGdldCB0aGUgd29yZHMgbWVhbmluZ3MgYW5kIHRoZSBzdG9yeSBqdXN0IHVuZm9sZHMgYW5kIEkgcmFjZSBhbG9uZyB3aXRoIHRoZSB3b3JkcyB0byBzZWUgd2hlcmUgYWxsIG9mIGl0IGVuZHMgdXAuIEl0IGxpa2UgYW4gdW5pcXVlIGhlYWRtb3ZpZS4gTGlrZSwgdGhlIHNlbnRlbmNlICJEYW5ueSBhbmQgSnVuZSBwbGF5IHdpdGggdGhlIGJhbGwiLCBJIGltbWVkaWF0ZWx5IHNlZSBpbiBteSBtaW5kIHR3byBraWRzIHBsYXlpbmcgd2l0aCBhIGJhbGwuLiAKQWxvcnMsIHN1aXRlICBxdWVscXVlcyBjaGFuZ2VzIEZhY2Vib29rLCBqJ2FpIGRjaWQgZGUgdm91cyBhY2N1ZWlsbGlyIGpldWRpIDIyIGRjZW1icmUgdG91dGUgbGEgam91cm5lICBtb24gY2FiaW5ldCwgZGFucyBsZSA5ZW1lIGFycm9uZGlzc2VtZW50LiAKVGhlbiBiZSB2ZXJ5IGNhcmVmdWwgd2hlbiB5b3UgYWRkIHRoZSBmbG91ci4gCkJ1dCBpZiBzaGUgaXMgdHJhdmVsaW5nIGJ5IGFpciBwbGFuZSBhbnkgdGhpbmcgd3JhcHBlZCBpbiBmb2lsIGlzIGZvciBzdXJlIGdvbm5hIGJlIG9wZW5lZCB1cCBmb3IgaW5zcGVjdGlvbi4gTm93IHRoZSBvcmlnaW5hbCBwcm9kdWN0IGNhbGxlZCBzYXJhbiB3cmFwIHBsYXN0aWMgZmlsbSBpcyBpbXBlcnZpb3VzIHRvIGFpciBmbG93IGFuZCBjbGVhci4gCkFuZCBJIHdhcyBSRUFMTFkgZ2xhZCBJIGRpZCB0aGF0IHRyYWluaW5nIGhhbGYgICBJIGp1c3Qga2VwdCB0ZWxsaW5nIG15c2VsZiBJIGhhZCBhbHJlYWR5IGRvbmUgdGhpcyBhbmQgSSBjb3VsZCBkbyBpdCBhZ2FpbiBldmVuIGlmIGl0IHdhcyBoYXJkLi4gCkkgYWRvcHRlZCB0d28gZmFtaWxpZXMgdGhpcyB5ZWFyIGZvciBDaHJpc3RtYXMgdGhyb3VnaCB0aGUgbG9jYWwgY29tbXVuaXR5IGNlbnRlci4gVGhlc2UgZmFtaWxpZXMgbGl2ZSBpbiBwb3ZlcnR5IGFuZCBoYXZlIGhhZCBzb21lIHZlcnkgYmFkIGx1Y2suIEl0IHdhcm1zIG15IGhlYXJ0IHRvIGtub3cgdGhleSBhbmQgdGhlaXIgY2hpbGRyZW4gd2lsbCBleHBlcmllbmNlIENocmlzdG1hcyB0aGUgd2F5IEkgd2FzIGx1Y2t5IGVub3VnaCB0byBoYXZlIGV4cGVyaWVuY2VkIGl0LiAKVmVyc2NoaWVkZW5lIEtsZWlkdW5nc3N0Y2tlIGtubmVuIGVudHdlZGVyIGFsbGUgZGVuc2VsYmVuIFdlcnQgaGFiZW4sIG9kZXIgdGV1ZXJlciB3ZXJkZW4sIGplIG5oZXIgc2llIGRlbiBTcGllbGVyIHp1bSB3aXJrbGljaCBOYWNrdHNlaW4gYnJpbmdlbi4gWnVtIEJlaXNwaWVsIGtubnRlbiBTb2NrZW4gNSBXZXJ0IHNlaW4sIGVpbiBUIHNoaXJ0IDEwIHVuZCBkaWUgQm94ZXJzaG9ydHMgMjAuClRoZXJlIGFyZSBtYW55IHdheXMgdG8gcGxheSBwb2tlciBvbmxpbmUgYW5kIHRoZSBjaG9pY2UgZ2VuZXJhbGx5IGRlcGVuZHMgb24gdGhlIHBsYXllci4gU29tZSBvZiB0aGUgc2l0ZXMgd2UgcmVjb21tZW5kIG9mZmVyIHRoZSBiaWdnZXN0IHJhbmdlIG9mIHdheXMgdG8gcGxheSBwb2tlciwgbmFtZWx5IHZpYSBhIGRvd25sb2FkIGFuZCBubyBkb3dubG9hZCBwbGF0Zm9ybSBhcyB3ZWxsIGFzIGEgbW9iaWxlIHBva2VyIHBsYXRmb3JtLiBJbiBhZGRpdGlvbiwgdGhlIHNvZnR3YXJlIGlzIHN0YWJsZSBhbmQgZmFzdC4KVGhpcyBzb3J0IG9mIHRoaW5nIGlzIGFsc28gdGhlIGJpZ2dlc3QgZnVuZGFtZW50YWwgZmxhdyBpbiBtb3N0IG5ld2VyIHBsYXllciBtaW5kc2V0cy4gVGhlcmUgaXMgbm8gbWFnaWNhbCAiRG8gdGhpcyIgYW5zd2VyIHRvIG1hZ2ljYWxseSBnZXQgYmV0dGVyIGF0IHBva2VyLiBXZSBkb24ga25vdyB5b3Ugb3IgeW91ciBwbGF5IHN0eWxlIGF0IGFsbC4gQW55b25lIHdobyBnaXZlcyB5b3UgYWR2aWNlIGlzIGFsbW9zdCBndWFyYW50ZWVkIHRvIGJlIGdpdmluZyB5b3UgYmFkIGFkdmljZSBiZWNhdXNlIHdlIGp1c3QgZG9uIGhhdmUgYW55IGNsdWUuIFRoZXJlIGlzIG5vIHJlcGxhY2VtZW50IGZvciB0aGUgbGVhcm5pbmcgY3VydmUgaW4gcG9rZXIsIHlvdSBkb24gZ2V0IHRvIGp1bXAgdGhlIGRpY2sgc21hc2hpbmcgeW91IGdldCB3aGVuIHlvdSBmaXJzdCBzdGFydCBhbmQgaGF2ZSB0byBsZWFybiBob3cgdG8gYWRhcHQuIEl0IHBhcnQgb2YgdGhlIHByb2Nlc3MuClRoZXJlIGlzIGEgZ3V5IHdobyBzZWxscyB5b3UgKGluY29tcGxldGUpIG1hcHMuIFlvdSBjYW4gYWxzbyBidXkgYSBxdWlsbCwgd2hpY2ggbGV0cyB5b3UgZmlsbCBpbiB0aGUgbWFwIGZ1cnRoZXIgYnkgZXhwbG9yaW5nLCBhbmQgYSBjb21wYXNzIGNoYXJtLiBNYXBkdWRlIGlzIGZvdW5kIHNvbWV3aGVyZSBpbiBlYWNoIGFyZWEsIHRoZSBvdGhlciB0aGluZ3MgYXJlIHNvbGQgYnkgaGlzIHdpZmUgdXAgaW4gRGlydG1vdXRoIG9uY2UgeW91IGZvdW5kIGhpbSBmb3IgdGhlIGZpcnN0IHRpbWUuIApNaXN1c2Ugb2YgdGhlIHdvcmQgSSB0aGluazsgbWlzb2d5bnkgaXMgImRpc2xpa2Ugb2YsIGNvbnRlbXB0IGZvciwgb3IgaW5ncmFpbmVkIHByZWp1ZGljZSBhZ2FpbnN0IHdvbWVuIiBzaW1wbHkgZG93bmxvYWRlZCBmcm9tIGludGVybmV0IGRpY3Rpb25hcnkuClJ5b2tvIFNla2lndWNoaSBhIGxlIGdyYW5kIHRhbGVudCBkJ2NyaXJlIHN1ciBkZXMgc3VqZXRzIGZhbWlsaWVycyBtYWlzIGQneSBwb3J0ZXIgdW4gcmVnYXJkIHRvdXQgIGZhaXQgc2luZ3VsaWVyLiBKJ2FpIGx1IG5vdGFtbWVudCBsZSBNYW5nZXIgZmFudG1lLCBhZG9yIHNhIGNvbGxlY3RlIGQnY3JpdHMgamFwb25haXMgZ291cm1ldHMgTGUgQ2x1YiBkZXMgR291cm1ldHMuIEplIG1lIHN1aXMgYXVzc2kgcGxvbmdlIGF2ZWMgZGxpY2UgZGFucyBGYWRlIDogZWxsZSB5IHRyYWNlIGF2ZWMgZGxpY2F0ZXNzZSBldCBtYWxpY2UgdW5lIGZyb250aXJlIGVudHJlIEZyYW5haXMgZXQgSmFwb25haXMuIApQYXN0cnl0aW1lICA5NyBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KRm9yIGEgcHJvcGVyIG1hc3NhZ2UsIHlvdSBzdGlsbCBiZSBiZXR0ZXIgb2ZmIGVsc2V3aGVyZSwgYnV0IGZvciB0aGUgYmF0aGluZyBmb2N1c2VkIGV4cGVyaWVuY2UsIHRoaXMgd2FzIGJldHRlciB0aGFuIG90aGVycyBJIGhhdmUgYmVlbiB0by44LzEwLiAKVGhlIHdvcmQgZXhpc3RlZCwgYnV0IGFjY29yZGluZyB0byB0aGUgYXJ0aWNsZSB0aGVyZSB3ZXJlIG5vIHJlY29yZGVkIHVzYWdlcyBvZiB0aGF0IHdvcmQgaW4gdGhlIFVTIGJlZm9yZSAxOTEwLiBCZXR3ZWVuIDE5MTAgYW5kIDE5MzAgaXQgd2FzIHVzZWQgdmVyeSBzcGFyaW5nbHkuIEl0IHdhc24gdW50aWwgdGhlIDE5MzAgd2l0aCBIZW5yeSBKLiBBbnNsaW5nZXJzIGNydXNhZGUgYWdhaW5zdCB0aGUgZHJ1ZyB0aGF0IHRoZSB3b3JkIGNhbWUgaW50byBwb3B1bGFyIHVzYWdlLiBUaHJvdWdoIGhpcyB3b3JkaW5nLCBoZSBjbGVhcmx5IGFzc29jaWF0ZWQgdGhlIHdvcmQgd2l0aCBIaXNwYW5pY3MsIGJsYWNrIHBlb3BsZSwgaW1taWdyYW50cywgImluZmVyaW9yIHJhY2VzIiBpbiBnZW5lcmFsIChoaXMgYWN0dWFsIHdvcmRpbmcsIG5vdCBtaW5lKS4KQXMgbmVlZGVkIHRoZSBvcGVyYXRpbmcgc3lzdGVtY29waWVzIGJsb2NrcyBvZiBpbnRlcm5hbCBtZW1vcnkgb3V0IHRvIHRoaXMgZmlsZSB0byBmcmVlIGludGVybmFsbWVtb3J5IGFuZCBjb3BpZXMgYmxvY2tzIGZyb20gdGhpcyBmaWxlIHRvIGludGVybmFsIG1lbW9yeSB3aGVuIGFwcm9ncmFtIG5lZWRzIGl0IGFnYWluLiAKRG8gdGhpcyBmaXZlIHRpbWVzIHdpdGggZWFjaCBoYW5kIGFuZCB0aGVuIGFnYWluIHdpdGggeW91ciBtYWluIGhhbmQsIGJ1dCBob2xkaW5nIHRoZSBiYWJ5J3MgbGVncyB1cCB3aXRoIHRoZSBvdGhlci4gU3VucmlzZSBhbmQgc3Vuc2V0ICAgSG9sZCB5b3VyIGhhbmQgc28gdGhhdCB0aGUgcGFsbSBpcyBhYm92ZSAoYnV0IG5vdCB0b3VjaGluZykgdGhlIGJhYnkncyBncm9pbiBhbmQgdGhlIHVwcGVyIGhhbGYgb2YgYWxsIHRoZSBmaW5nZXJzIGlzIHJlc3Rpbmcgb24gdGhlIHBvaW50IGF0IHRoZSB2ZXJ5IHRvcCBvZiB0aGUgYmFieSdzIHJpZ2h0IHRoaWdoICh5b3VyIGhhbmQgc2hvdWxkIGJlIGRpYWdvbmFsKS4gCk5ldmVyIHlvdSBtaW5kIHRoZSBldmVyIGZhaWxpbmcgcGlzdG9ucy4gTmV2ZXIgeW91IG1pbmQgdGhhdCB0aGUgY2FycnlpbmcgY2FwYWNpdHkgb2YgdGhlIGVuZ2luZSBtdXN0IHBlcnBldHVhbGx5IGluY3JlYXNlLCB0byBjYXJyeSB0aGUgd2VpZ2h0IG9mIGFsbCB0aGUgbmVlZGxlc3NseSB1bmRlcnBlcmZvcm1pbmcsIGZhaWxlZCBhbmQgZmFpbGluZyBwaXN0b25zIHRoYXQgYXJlIHNhYm90YWdlZCBpbiBkZWZlcmVuY2UgdG8gdGhlIGdyZWVkaWVzdCBvZiBwaXN0b25zLiAKIlRyYW5zcG9ydCBzaG91bGQgYmUgcGxhbm5lZCwgYnV0IHdpdGggZW50aXJlbHkgZGlmZmVyZW50IGFpbXM6IHRvIG1heGltaXNlIGl0cyBzb2NpYWwgYmVuZWZpdHMsIHdoaWxlIG1pbmltaXNpbmcgaGFybS4gVGhpcyBtZWFucyBhIHdob2xlc2FsZSBzd2l0Y2ggdG93YXJkcyBlbGVjdHJpYyBtYXNzIHRyYW5zaXQsIHNhZmUgYW5kIHNlcGFyYXRlIGJpa2UgbGFuZXMgYW5kIGJyb2FkIHBhdmVtZW50cywgYWNjb21wYW5pZWQgYnkgYSBzdGVhZHkgY2xvc3VyZSBvZiB0aGUgY29uZGl0aW9ucyB0aGF0IGFsbG93IGNhcnMgdG8gcmFtcGFnZSB0aHJvdWdoIG91ciBsaXZlcy4gSW4gc29tZSBwbGFjZXMsIGFuZCBmb3Igc29tZSBwdXJwb3NlcywgdXNpbmcgY2FycyBpcyB1bmF2b2lkYWJsZS4gCk90aGVyIFRvb2xzCkkgaGF2ZSBoZWFyZCBpdCBwcm9wb3NlZCBtb3JlIHRoYW4gb25jZSB0aGF0IGZldGlzaGVzIGFyZSBwc3ljaG9sb2dpY2FsIGNvbmRpdGlvbnMgdGhhdCBtYW5pZmVzdCB0aGVtc2VsdmVzIGFzIHRoZSBvbmx5IHJlc3BvbnNlcyBjZXJ0YWluIHBlb3BsZSBjYW4gaGF2ZSB0byBzdGltdWxpIHRoYXQgdGhleSB3b3VsZCBvdGhlcndpc2UgY29uc2lkZXIgcmVwdWxzaXZlLi4gCkEgdmVyeSByZWNlbnQgdmlzaXQgdG8gU3Vubnlicm9vayBIZWFsdGggU2NpZW5jZXMgQ2VudHJlIGJ5IHRoZSBOSEwgb2xkIHRpbWVycyB3YXMgaW5kZWVkIGEgZGF5IHRvIHJlbWVtYmVyIGFzIGZvcm1lciBOSEwgc3RhcnMgc2hhcmVkIHN0b3JpZXMgd2l0aCBEb3VnLCBhbmQgc29tZSBldmVuIHJlY2FsbGVkIERvdWcncyBnbG9yeSBkYXlzIGFzIGEgZm9vdGJhbGwgc3Rhci4gVGhlIG1lbW9yeSBvZiBEb3VnJ3MgYnJvYWQgZ3JpbnMgYW5kIHNoZWVyIGpveSBmcm9tIHRoYXQgZGF5IGhhcyBiZWVuIHBsYW50ZWQgaW4gb3VyIGJyYWlucyBhbmQgd2lsbCBmb3JldmVyIHJlbWFpbiEgRG91ZyBkZWZpbml0ZWx5IGxpdmVkIGxpZmUgdG8gdGhlIGZ1bGxlc3QuIApUaGUgc2hvdyBtYXJrcyB0aGUgbWl4ZWQgbWFydGlhbCBhcnRzIG9yZ2FuaXphdGlvbidzIDI5dGggaW4gQ2FuYWRhIGFuZCBzZWNvbmQgaW4gT3R0YXdhLiBUaGUgZmlyc3Qgd2FzIGF0IHRoZSBzbWFsbGVyIFREIFBsYWNlIGFyZW5hIGluIEp1bmUgMjAxNiwgcHJvZHVjaW5nIHRoZSBmYXN0ZXN0IHNlbGxvdXQgaW4gdGhlIHZlbnVlJ3MgaGlzdG9yeS4KQXJjaGl2ZXMgYWthc2hpcXVlcyBvdSBtbW9pcmUocykgYWthc2hpcXVlKHMpIGNlIHRlcm1lIGZ1dCBzaSBnYWx2YXVkIHF1IGNvbnZpZW50IGQgcmV2ZW5pciAgbCBjYXIgaWwgeSBhIGJpZW4gdW5lIHJhbGl0IGRlcnJpcmUgY2V0dGUgbm90aW9uIGRtb250cmUgYXVqb3VyZCBwYXIgbGVzIG5ldXJvc2NpZW5jZXMuIEFhdm50IHRvdXQgZXQgZW4gcHJhbWJ1bGUgZGlzY2Vybm9ucyBxdWVscXVlcyBtbW9pcmVzIHF1aSBub3VzIHBlcm1ldHRlbnQgZCBhdSBkZWwgZGUgbm90cmUgbW1vaXJlIGluZGl2aWR1ZWxsZS4KVGhlIFJhY3F1ZXRzIGFuZCBCYWxsVGhlIHJhY3F1ZXRzIHdlcmUgaW5pdGlhbGx5IG1hZGUgb3V0IG9mIHdvb2QsIGJ1dCBub3cgdGhlIG1vcmUgbGlnaHR3ZWlnaHQgcmFjcXVldHMgYXJlIGZhdm91cmVkLCBtYWRlIG91dCBvZiBhbHVtaW5pdW0sIGdyYXBoaXRlIGFuZCBvdGhlciBsaWdodCBtZXRhbHMuIFRoZXkgd2VpZ2ggYmV0d2VlbiAzOTdnIHRvIDQ1NGcgKDE0b3ogdG8gMTZveiksIGFuZCB2YXJ5IGluIHNpemUgZGVwZW5kaW5nIG9uIHRoZSBwbGF5ZXIuIFRoZXkgYXJlIHVzdWFsbHkgc3RydW5nIHdpdGggcmVzaWxpZW50IGd1dCBvciBueWxvbiwgYW5kIGNhbiBiZSBzdHJ1bmcgdG8gZGlmZmVyZW50IHRlbnNpb25zLiBUaGUgaGFuZGxlIGlzIGNvdmVyZWQgd2l0aCBhIHJ1YmJlciBvciBsZWF0aGVyIGdyaXAgc28gaXQgZG9lcyBub3Qgc2xpcCBvdXQgb2YgdGhlIGhhbmQgZWFzaWx5LgpCeSB0aGUgZW5kIG9mIGl0LCB5b3Ugc2hvdWxkIGJlIGNvbWZvcnRhYmxlIHdpdGggd2hlbiB0byB1c2Ugd2hpY2ggdHlwZSBvZiBkYXRhYmFzZSwgYW5kIGhvdyB0byBzZXQgdGhlbSB1cCBzdWNjZXNzZnVsbHkuLiAKNTkuIApUaGVyZSBub3QgYSBzZXQgIGV2IHNldCBvZiBob3VzZSBvZGRzIHRoYXQgeW91IHdpbGwgbGl0ZXJhbGx5IG5ldmVyIGJlYXQuIFBva2VyIGlzIGEgc3BvcnQgdG8gbWUgaW4gdGhhdCBhc3BlY3QuIApUaGUgY2F1c2Ugb2YgUE5EIGlzIG5vdCBrbm93biwgYWx0aG91Z2ggbWFueSBkb2N0b3JzIGhhdmUgc3VnZ2VzdGVkIG1hbnkgcG9zc2libGUgY2F1c2VzLiBTb21lIG1vdGhlcnMgZ2V0IGl0IHN1ZGRlbmx5IGFmdGVyIHRoZWlyIHNlY29uZCBvciB0aGlyZCBjaGlsZCwgaGF2aW5nIGJlZW4gZmluZSBhZnRlciB0aGVpciBvdGhlciBwcmVnbmFuY2llcy4gU29tZSBtb3RoZXJzIGdldCBpdCBmb2xsb3dpbmcgYW4gdW5wbGFubmVkIG9yIGRpZmZpY3VsdCBwcmVnbmFuY3ksIGJ1dCBvdGhlcnMgY291bGQgaGF2ZSBiZWVuIHBsYW5uaW5nIGFuZCB0cnlpbmcgZm9yIGEgYmFieSBmb3IgeWVhcnMgYnV0IHN0aWxsIGdldCBkZXByZXNzZWQuIEl0IG1heSBiZSBhZmZlY3RlZCBieSBleHRlcm5hbCBmYWN0b3JzLCBzdWNoIGFzIHNvY2lhbCBhbmQgY3VsdHVyYWwgaXNzdWVzLCBvciBwZXJzb25hbCBmYWN0b3JzLCBzdWNoIGFzIGhvdXNpbmcgb3IgcGVyc29uYWwgaGlzdG9yeSwgb3IgYmlvY2hlbWljYWwgZmFjdG9ycywgc3VjaCBhcyBob3Jtb25lIGxldmVscy4gSW4gZmFjdCBubyBvbmUgaGFzIGV2ZXIgcHJvdmVkIHdoYXQgY2F1c2VzIGl0LCBhbmQgaXQgc2VlbXMgdG8gYWZmZWN0IG5ldyBtb3RoZXJzIGZyb20gYWxsIGJhY2tncm91bmRzLiBMaWtlIGFueSBmb3JtIG9mIGRlcHJlc3NpdmUgaWxsbmVzcyB0aGUgc3ltcHRvbXMgdmFyeSBncmVhdGx5IGZyb20gb25lIHN1ZmZlcmVyIHRvIGFub3RoZXIsIGJ1dCBvZnRlbiBpbmNsdWRlIHNldmVyYWwgb2YgdGhlIGZvbGxvd2luZzoKQW5kIGlmIG1pcnJvcmxlc3MgaXMgdGhlIGZ1dHVyZSBJIG1heSBqdXN0IGludmVzdCBpbiB0aGUgbmV3IHN5c3RlbS4gCjUuIApUaGUgQmxhY2toYXdrcyB3aWxsIHNwZW5kIHRoaXMgc3VtbWVyIGFuZCB0cmFpbmluZyBjYW1wIGluIHRoZSBmYWxsIGRlY2lkaW5nIGlmIGhlIHJlYWR5IGZvciB0aGUgcHJvIHJhbmtzIG9yIG5lZWRzIGFub3RoZXIgeWVhciBvZiBzZWFzb25pbmcgYmFjayBpbiBMb25kb24uIApJJ20gdGFsa2luZyBhdCBsb3cgc3Rha2VzIDEgMywgYW5kIGV2ZW4gc29tZSB3aGF0IGF0IDMgNS4gCkEgc3VjY2Vzc2Z1bCBpbnZlc3RvciBoYXMgdGhlaXIgb3duIHNldCBvZiBiZWxpZWZzIGFuZCBjb252aWN0aW9ucyB0aGV5IHN0aWNrIHRvIGJhc2VkIG9uIHRoZWlyIGNyaXRlcmlhLiBNYW55IGludmVzdG9ycyB3aWxsIGNoYXNlIGZhZHMgYW5kIG5ldmVyIGZpbmQgdGhlIHRpbWUgdG8gZ2FpbiBhZGVxdWF0ZSBleHBlcmllbmNlIGluIGEgcGFydGljdWxhciBpbnZlc3Rpbmcgc3R5bGUuIApCcmV3IHNraSAgOCBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KTCdleGVyY2ljZSBlc3Qgc291dmVudCBhc3NleiBjb3Rvbi4gTGUgbXRybyBwYXNzZSBkYW5zIGRlcyBzaXRlcyBkb250IGxlIHNvdXMgc29sIGVzdCBkaiB0ZWxsZW1lbnQgZW5jb21iciBxdWUgbCdpbXBsYW50YXRpb24gZGVzIHF1YWlzIGV0IGxlcyBjb3JyZXNwb25kYW5jZXMgZGV2aWVudCBhY3JvYmF0aXF1ZS4gUXVhbnQgIGwnYWNjcyBkZXB1aXMgbGEgc3VyZmFjZSwgaWwgbmUgc2F1cmFpdCBzZSByc3VtZXIgIHVuIHRyb3UgZGFucyBsZSB0cm90dG9pciBjb21tZSBwb3VyIGxlIG10cm8gcGFyaXNpZW4uIExhIFNvY2l0IGR1IEdyYW5kIFBhcmlzLCBsZSBjb25zdHJ1Y3RldXIsIGVudGVuZCBiaWVuIHJpZ2VyIGRlcyBsaWV1eCBkZSBjcmF0aW9uIGFyY2hpdGVjdHVyYWxlLCBxdWkgcGV1dmVudCB0cmUgbGUgcG9pbnQgZCdhcHB1aSBkJ2F1dHJlcyBkaWZpY2VzIGVuIHN1cnBsb21iLgpGYW50YXN0aWMgbGl0dGxlIHJ1bm5lciBwYXJ0aWN1bGFybHkgcm91bmQgdG93biwgSSBoYWQgbWluZSBmb3IgMiB5ZWFycyB3aGVuIEkgd2FzIGxlYXJuaW5nIHRvIHJpZGUgYW5kIGp1c3QgYWZ0ZXIgaSBwYXNzZWQgbXkgdGVzdC4gCkEgc3RhcnRlZCBkYXRpbmcgYm95IEwuIApUaGUgc3RhdGUgaGFzIGJlZW4gdW5kZXJnb2luZyBhIHRyZW1lbmRvdXMsIHVuaW1hZ2luYWJsZSBhbW91bnQgb2YgcGFpbiBhbmQgc3VmZmVyaW5nLi4gClByZW5hdGFsIE1hc3NhZ2UgICBQcmVuYXRhbCBtYXNzYWdlIHNoYXJlcyBtYW55IG9mIHRoZSBnb2FscyBvZiByZWd1bGFyIG1hc3NhZ2UgdG8gcmVsYXggdGVuc2UgbXVzY2xlcywgZWFzZSBzb3JlIHNwb3RzLCBpbXByb3ZlIGNpcmN1bGF0aW9uIGFuZCBtb2JpbGl0eSwgYW5kIGp1c3QgbWFrZSB5b3UgZmVlbCBnb29kLiAKTCdIaXN0b2lyZSBlc3QgdW5lIGRpc2NpcGxpbmUgYSBtYW5pIGF2ZWMgcHJ1ZGVuY2UuIEwnaW5mb3JtYXRpb24gY29uY2VybmFudCBsZXMgZmFpdHMgZXN0IHVuIHN1amV0IHRycyBzZW5zaWJsZS4gQmVhdWNvdXAgZGUgbGl2cmVzIGV0IHBhcm1pIGxlcyBtZWlsbGV1cnMgdmhpY3VsZW50IGRlcyBpbmZvcm1hdGlvbnMgc291dmVudCBhcHByb3hpbWF0aXZlcyBldCBwYXJmb2lzIGZhdXNzZXMuIENlbGxlcyBjaSBzb250IGVuc3VpdGUgcmVwcmlzZXMgZXQgbCdIaXN0b2lyZSBuJ3kgdHJvdXZlIHZpZGVtbWVudCBwYXMgc29uIGNvbXB0ZS4KRWlnaHRlZW4hIEFtYXppbmcuIEkgZGlkbiBrbm93IHdoZW4gSSBzZWxlY3RlZCBoZXIsIGJ1dCB3aGF0IGEgZ3JlYXQgY2hvaWNlIGZvciB0aGF0IHJlYXNvbiBhbG9uZSEgV2hpY2ggYmVncyB0aGUgcXVlc3Rpb24gd2h5IHRob3NlIHR3byBwbHVtcCBnaXJscyBvbiB0aGUgc2lkZWxpbmUgY29zdCBtb3JlLCBzaW5jZSB0aGV5IHdlcmVuIGV2ZW4gYXR0cmFjdGl2ZSBhbmQgY291bGRuIGhhdmUgYmVlbiB5b3VuZ2VyIHRoYW4gdGhlIGdpcmwgSSBwaWNrZWQgZnJvbSB0aGUgbWFpbiBzZWxlY3Rpb24uIEFzIGEgbWFuIGluIG15IDMwcywgSSB3YXNuIHN1cmUgaWYgSSBzaG91bGQgZmVlbCBndWlsdHkgaGF2aW5nIHNleCB3aXRoIGFuIDE4IHllYXIgb2xkLCBidXQgaGV5LCBzdXJlbHkgdGhlIHdob2xlIHBvaW50IG9mIHBheWluZyBmb3Igc2V4IGlzIHRvIGRvIGl0IHdpdGggd29tZW4gd2Ugd291bGRuIG90aGVyd2lzZSBoYXZlIGEgY2hhbmNlIHdpdGgsIG9yIHRvIGZ1bGZpbGwgZmFudGFzaWVzIGFuZCB3aG8gaGFzbiBmYW50YXNpc2VkIGFib3V0IDE4IHllYXIgb2xkIEFzaWFuIGdpcmxzITEwLzEwLiAKRXZlcnkgb3RoZXIgaGFuZCAidGFibGUgbWF4IiBldGMuIApZZXMsIHRoZXJlIGlzIG5vdGhpbmcgbGVnYWxseSB3cm9uZyB3aXRoIHRoZW0gZG9pbmcgaXQsIGJ1dCBpdHMgbm90IGFib3V0IHJlYXNvbmFibGUgZXhwZWN0YXRpb25zIG9mIHByaXZhY3ksIGl0cyBhYm91dCB0aGUgbW9yYWxpdHkgb2YgdGhlIHNpdHVhdGlvbi4gVGhlIGFkdWx0IGluIHRoaXMgc2l0dWF0aW9uIGlzIG5vdCBtYWtpbmcgYSBnb29kIGNob2ljZS4KSWwgbidlc3QgcGFzIG9ibGlnIGQnZW4gdHJlIGFpbnNpLi4gCkFuYWx0cmFpbiB1CkkgZG9uIGZpbmQgaXQgdGhhdCBoYXJkIHRvIGJlbGlldmUgaGUgbmVlZGVkIHNvbWUgdGltZSB0byBjb21lIHRvIHRlcm1zIHdpdGggdGhhdCwgaXQgc3RyaWtlcyBtZSBhcyBtb3JlIHJlYWxpc3RpYyB0aGFuIGlmIGhlIGp1c3Qgc2FpZCBJIGRvbiBjYXJlIEkgMTAwJSBhbGwgZm9yIGhlciBhbmQgSSB3aWxsIGdpdmUgdXAgZXZlcnl0aGluZyBhbmQgc3RheS4gRXZlbiBDbGFpcmUgbmVlZGVkIHRpbWUgYXQgdGhlIHN0b25lcyB0byBtYWtlIHVwIGhlciBtaW5kIGFib3V0IHN0YXlpbmcgb3IgZ29pbmcgYmFjayB0byBGcmFuay4gSSBkbyB0aGluayB0aGUgc2hvdyBoYXNuIGRvbmUgaGltIGFueSBmYXZvcnMgdGhvdWdoLCBoZSBjYW1lIGFjcm9zcyBzdXBlciBzZWxmaXNoIG1vc3Qgb2YgdGhlIHNlYXNvbi4KQWZ0ZXIgYWxsLCB0aGlzIHdhcyBhIHBlcnNvbiAicHJpdmF0ZSIgbGlmZS4gClRoaXMgaW5mbHVlbmNlcyB5b3VyIHBhdGllbmNlIHRvIGFuIGV4dGVudCBvZiBsb29zZW5pbmcgeW91ciBwbGF5IHJlc3VsdGluZyB0byBxdWljayBjYWxscy4gRXZlcnkgV1BUIFBva2VyIENsdWIgcGxheWVyIHNob3VsZCBsZWFybiB0byBsb2cgb3V0IG9uY2UgdGhleSBub3RpY2Ugc29tZSBmYXRpZ3VlIGlzIGNyZWVwaW5nIGluLiAKVGhlcmUgd2VyZSBzb21lIHJlYWxseSBncmVhdCBicmFuZHMgdGhlcmUuIE9naWx2eSB3YXMgYSBmb3JtaWRhYmxlIG9yZ2FuaXphdGlvbiB0byBnbyB1cCBhZ2FpbnN0LiAKQSBsb3Qgb2YgcGVvcGxlIHN0YXJ0ZWQgd2F0Y2hpbmcgYW5pbWUgSm9qbyBhbmQgdGhlbiByZWFkIHRoZSBtYW5nYSB3aGVyZSB0aGUgYW5pbWUgc3RvcHBlZC4gVGhhdCBmaW5lIGFuZCBub3QgYSBiaWcgaXNzdWUuIApJIGFtIHVuY2VydGFpbiBvZiB0aGUgbGF3cyBpbiBDYWxpZm9ybmlhIGJ1dCBzb21lIHBsYWNlcyB0aGF0IHNlcnZlIGhvdCBiZXZlcmFnZXMgb3Igd29yayB3aXRoIHRoaW5ncyB0aGF0IGNvdWxkIGJ1cm4gKHN1Y2ggYXMgZGVlcCBmcnllcnMpIHJlcXVpcmUgbG9uZyBzbGVldmVzIHNvIHRoZSBzdGFmZiBkb2VzbiBnZXQgYnVybmVkLiAKSSBvbGQsIFRoZSBib29rIGRpZCB0aGF0IGZvciBtZS4uIApJcyBpdCBtb3JlIHRoYW4gYW50aWNpcGF0ZWQ/IFllcy4gSXMgaXQgd29ydGggbW92aW5nPyBQcm9iYWJseSBub3QuIFRoZSBvbmUgdGltZSBjb3N0cyBvZiBtb3ZpbmcsIHJlYWwgZXN0YXRlIHRyYW5zYWN0aW9uIGZlZXMsIGxhbmQgdHJhbnNmZXIgdGF4ZXMgZXRjLCB3b3VsZCBiZSBmYXIgZ3JlYXRlci4gCkp1ZGdlIG5vdGVkIHNldmVyYWwgZmFjdG9ycyB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIFN1cHJlbWUgQ291cnQgc2FpZCBzaGUgaGFkIHRvIHdlaWdoLCBpbmNsdWRpbmcgdGhlIGZhY3QgdGhhdCBNYXNhbG1hbmkgd2FzIG9ubHkgZm91ciBtb250aHMgYXdheSBmcm9tIGJlaW5nIDE4LCBXV0ogTGVnYWwgQW5hbHlzdCBDaGFybGllIExhbmd0b24gcmVwb3J0ZWQgZnJvbSBvdXRzaWRlIHRoZSBjb3VydHJvb20uIApNYW55IGhpZ2ggcXVhbGl0eSBzZXRzIGhhdmUgYmVlbiBwcm9kdWNlZCB1bmRlciB0aGUgUGF1bHNvbiBuYW1lLiAKVGhlIHJlYXNvbnMgdGhleSBhcmUgYWxpZ25lZCB3aXRoIFRydW1wIHNlZW0gY2xlYXIuIFRoZXJlIGFyZSBtYW55LiAKRHVyaW5nIGhpcyByZXRpcmVtZW50IGhlIGVuam95ZWQgZ29pbmcgdG8gdGhlIGNvdHRhZ2UsIHNwZW5kaW5nIHRpbWUgd2l0aCBoaXMgZmFtaWx5LCBwbGF5aW5nIHBva2VyIGFuZCB3b3JraW5nIGF0IHRoZSAiTWluayBSYW5jaCIuIApTb29uIGFuYWxvZ291cyBmb3JtcyAgcywgIGlzIGNhbWUgaW50byB1c2UuIFRoaXMgaXMgd2hlcmUgdGhlIHZhcmlldHkgb2YgZm9ybXMgdGhlIGNvbnRlbXBvcmFyeSBBbWVyaWNhbiB2b3NlbyBhZG9wdHMsIG1vc3QgdmFyaWV0aWVzIGhhdmUgYSBnZW5lcmFsaXplZCBtb25vcGh0aG9uZywgc29tZSBhIGdlbmVyYWxpemVkIGRpcGh0aG9uZyAoVmVuZXp1ZWxhKSwgYW5kIGEgZmV3IGNvbWJpbmluZyBtb25vcGh0aG9uZ3MgYW5kIGRpcGh0aG9uZ3MsIGRlcGVuZGluZyBvbiB0aGUgY29uanVnYXRpb24gKENoaWxlKS4gCkEgb25lIHRyaWNrIHBvbnkgcmlnaHQgbm93LCBmb2N1c2VkIG9uIHRoZSBRdWViZWMgbWFya2V0LiBUbyBnbyBuYXRpb25hbCB5b3UgbmVlZCB0byBidWlsZCB0aGUgYnJhbmQgYW5kIGdldCBzaGVsZiBzcGFjZSBpbiBtYWpvciByZXRhaWxlcnMuIEhlIGhhcyB0byBrZWVwIGl0IGZyZXNoIGFuZCBpbiB0aGUgZXllIG9mIHRoZSBjb25zdW1lciB0byBidWlsZCBhIGZhbiBiYXNlLiBIaXMgZ3JhbmRmYXRoZXIgYnJhbmQgaXNuIGFzIHJlbGV2YW50IHRvIGhpcyB0YXJnZXQgbWFya2V0LiAKKEhlciBzb25zIGhhdmUgdGhlaXIgb3duIG5hbm55KS5UaGUgZ2lybHMnIG5hbm55LCBhIGZvcm1lciBiZWF1dGljaWFuLCBub3Qgb25seSBoYW5kbGVzIGFsbCB0aHJlZSBsYWRpZXMnIHRyZXNzZXMsIGJ1dCBkb2VzIHRoZSBtb20ncyBtYW5pY3VyZXMgYW5kIGZhY2lhbHMsIHRvby4iV2VhbHRoeSBmYW1pbGllcyBoYXZlIGEgY2VydGFpbiB3YXkgb2YgbG9va2luZyBhdCB0aGluZ3MsIiBzYWlkIFNldGggTm9ybWFuIEdyZWVuYmVyZywgdmljZSBwcmVzaWRlbnQgb2YgdGhlIFBhdmlsbGlvbiBBZ2VuY3ksIGEgZG9tZXN0aWMgc3RhZmZpbmcgY29tcGFueSBpbiBNaWR0b3duLiAiVGhleSByZWFsaXplIHdoZW4gaW50ZXJ2aWV3aW5nIHBlb3BsZSB0aGF0IHRoZXkgbWlnaHQgYmUgYWJsZSB0byBnZXQgYSBsb3QgbW9yZSB0aGFuIHdoYXQgdGhlaXIgYmFzaWMgbmVlZHMgYXJlLiJHcmVlbmJlcmcgaGFkIG9uZSBOZXcgSmVyc2V5IGNsaWVudCByZXF1ZXN0IGEgbmFubnkgd2hvIGNvdWxkIGRyaXZlIGEgWmFtYm9uaSBiZWNhdXNlIHRoZSBraWRzIGhhZCB0aGVpciBvd24gaWNlIHNrYXRpbmcgcmluay4gClNob3VsZCBQZW5uc3lsdmFuaWEgZmFybWVycyBhZG9wdCBpbnRlcmVzdGluZyBJIHRoZSBhZHZhbmNlZCBwcmFjdGljZXMgb3V0bGluZWQgYWJvdmUsIGludHIgaW9ubFYgYWJvdXQgaGFsZiBvQyB0aG8gY293cyBMaXR0bGUgTWlsZHJlZCBzb2xvIGFuZCBNaXNzIExhbmNhc3RlciBjb3VudHkuIGZhbWlseS4gU2hpbmRsb2RvbiBrZXIsIE9ldHQ7IGlpcmljZSBMaWdodG5lci4gQ0plb3JnZSBLaW50IG1wYW5pY2QgaG9tZSBieSB0aGUgTXJzLiBTLiBHLCBXYXJyZW4gYW5kIGNoaWwnZHJlbiwgTXJzLiBDcmlzdCBaaW1tZXIgIFJveSwgR2xlbiwgRWRuYSBhbmQgUnV0aCwgc3BlbnQgU3VuICB3aWxsIHNwZW5kIHRoZSB3ZWVrIHdpdGggZGF5IHdpdGggV2lsZmlhbSBLdWhuIGFuZCBmYW1pbHksIHRoZW0gaGVyby4gCkkgd29uZGVyIGlmIGlsbCBldmVyIG93biBhIGNhciBhZ2FpbiBsb2wpLi4gCkFueXdheSwgaXQgbG9va3MgbGlrZSBhIGNhbGwgdG8gbWUsIGJ1dCBqdXN0IGJhcmVseS4gRm9sZGluZyBpcyBub3QgdGVycmlibGUuIElmIHlvdSBjYWxsZWQsIHlvdSBuZWVkIGEgcGxhbiBmb3IgdGhlIHR1cm4sIHdoaWNoIHdvdWxkIGJlIGphbSBhbnkgSGVhcnQgd2hlbiBjaGVja2VkIHRvLiBGb2xkIHRvIGEgYmV0IHdoZW4gbm8gaGVhcnQgY29tZXMsIGNoZWNrIGJlaGluZCB3aGVuIGNoZWNrZWQgdG8uCkFjdHVhbGx5LCB0aGlzIHZpZGVvIGFuZCBpdCBpbnRlcnNwZXJzZWQgdmlkZW8gZm9vdGFnZSBkb2VzIGEgcmVhbGx5IGdvb2Qgam9iIG9mIGdpdmluZyB0aGUgc2NvcGUuIApHZXQgYXBwbGllZCBmb3IgTWVkaWNhcmUgYW5kIFNvY2lhbCBTZWN1cml0eSBEaXNhYmlsaXR5LiAKU29ycnkgYnV0IGV2ZXJ5b25lIHJlc3BvbmRpbmcgaXMgV0FZIG9mZiEgSXQncyBzcGxpdCBpbnRvIHR3byBlcGlzb2RlcyBjdXogd2hvIHRoZSBmdWNrIGNhcmVzISBUaGUgc2Vjb25kIGlzIHVzdWFsbHkganVzdCBuZXdzLCBhbmQgYSB3cmFwIHdpdGggdGhlIGd1ZXN0LCBkZXBlbmRpbmcgb24gdGhlIG92ZXJhbGwgbGVuZ3Rocy4gVGhlIGxpdmUgcmVhZHMgYXJlIHNvIHNob3J0IGFuZCBORVZFUiBpbnRlcnJ1cHQgdGhlIGZsb3cgY3V6IEFkYW0gaXMgYSBkYW1uIHByby4gClNoZSBzYXlzIEkgbGllZCB0byBjaGlsZCBzZXJ2aWNlcyBhYm91dCBoZXIgbm90IGZlZWRpbmcgdXMsIGV0Yy4gSW1wbHlpbmcgaXQgaXMgbXkgZmF1bHQgd2Ugd2VyZSBzZXBhcmF0ZWQuIEkgY2FuIG5vdCBjb3BlIHdpdGggaGVyIGlnbm9yYW5jZS4gCkkgYXNrZWQgaGVyIGhvdyBzaGUgc3VtbW9uZWQgdGhlIGNvdXJhZ2UgdG8gdGFsayB0byBtZS4KRXZlbnR1YWxseSBMb2VmZmxlciB3YXMgcmVwbGFjZWQgdG9vLCBhbmQga2lja2luZyBhbmQgcHVudGluZyBoYXZlIG5ldmVyIHJlY292ZXJlZCwgYW5kIHdlIGN5Y2xlZCB0aHJvdWdoIGtpY2tlcnMgYW5kIHB1bnRlcnMgYXQgYSByYXRlIG9mIDEgMiBwZXIgeWVhciBzaW5jZSB0aGVuLkkgaG9waW5nIFByaWVmZXIgYmVpbmcgZ29uZSBtZWFucyBpdCBiZSBhIGxlc3MgaG9zdGlsZSBlbnZpcm9ubWVudCBhbmQgd2UgY2FuIHN0YXJ0IHJlYWxseSBkZXZlbG9waW5nIHRoZSB0YWxlbnQgd2UgZmluZC4gMTAgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0xhc3QgeWVhciBib3RoIEV6ZWtpZWwgQW5zYWggYW5kIERlbWFyY3VzIExhd3JlbmNlIHNpZ25lZCBmcmFuY2hpc2UgdGFncyB3b3J0aCAxNy4xNDNNLiBUaGV5IGFyZSBib3RoIERFcy5JIGFzc3VtZSB0aGF0IG1lYW5zIHRoZSBjYWxjdWxhdGlvbnMgYXJlIGFsbCBkb25lIGJhc2VkIG9uIG5vbiB0YWcgY29udHJhY3RzLkVkaXQ6IEFjdHVhbGx5LCBJIG5vdCBzdXJlLiAKSG93ZXZlciwgdGhlcmUgYXJlIGFsc28gbm9uIEFtZXJpY2FuIHJlc2lkZW50cyB0aGF0IGNvbXBldGUgYW5kIHdpbiEgUm9iZXJ0IFNybGllIGZyb20gTm9yd2F5IHdhcyB0aGUgZmlyc3QgdG8gd2luIGluIDIwMDMuIFRoaXMgeWVhciwgdGhlcmUgOCwgZm91ciBmcm9tIENhbmFkYSwgdHdvIGZyb20gTm9yd2F5LCBvbmUgZnJvbSBTd2VkZW4sIGFuZCBvbmUgZnJvbSBGcmFuY2UuCkkgYWN0dWFsbHkgbGlrZSB0aGUgc2h5IE1DIGFyY2hldHlwZS4gQnV0IGl0IHNob3VsZCBnbyBzb21ld2hlcmUuIFRoaXMgY2hhcHRlciB3YXMgYW4gb3Bwb3J0dW5pdHkgdG8gc2hvdyB0aGUgY2hhcmFjdGVycyBib25kaW5nIGFuZCByZXZlYWxpbmcgc3R1ZmYgYWJvdXQgdGhlbXNlbHZlcy4gSSBtZWFuIGhlIGRpZCB0aGlzIHRvIHJlbGl2ZSBoaXMgaGlnaHNjaG9vbCBmYW50YXN5LCBzb21ldGhpbmcgaGUgbmV2ZXIgaGVhZC4gVGhlcmUgc28gbWFueSBtZWFuaW5nZnVsIHRoaW5ncyB0byBiZSBoYWQgaGVyZS4gQnV0LCBubywgdGhleSByYW4gaW50byBzb21lb25lIGFuZCBub3cgaGF2ZSB0byBsaWUgYXdrd2FyZGx5IHRvIGdldCBvdXQgb2YgdGhlIHNpdHVhdGlvbiBhZ2Fpbi4KTWlqbiB6b29uIGlzIHZhbiB6aWpuIDYgamFhciBhbCBpbiBiZWhhbmRlbGluZywgaGlqIGhlZWZ0IGRlIHp3YWFyc3RlIHZvcm0gdmFuIEFESEQuIEhpaiBoZWVmdCBuaWV0cyBhbmRlcnMgZ2VrZW5kIGRhbiBpbiBpbnN0ZWxsaW5nZW4gd29uZW4gZW4ga2VudCBnZWVuIGdlemluIG9mIHdhcm1lIHRodWlzLiIuIApCZXJlaXRzIGpldHp0IHdlcmRlbiBQbG5lIGZyIGRpZSBuY2hzdGpocmlnZSBBdXNnYWJlIGRlcyBGaWxtZmVzdHMgZ2VzY2htaWVkZXQuIEVzIHNvbGxlbiBkYW5uIGF1Y2ggRmlsbWUgbWl0IGxlc2Jpc2NoZXIgVGhlbWF0aWsgaW5zIFByb2dyYW1tIGF1Zmdlbm9tbWVuIHdlcmRlbi4gCkkgZG91YnQgYW55b25lIGNvbWluZyBmcm9tIHBsYXltb25leSBzdHJhaWdodCBpbnRvIHJlYWwgbW9uZXkgaXMgZ29pbmcgdG8gYmUgYWJsZSB0byB0dXJuIGEgcHJvZml0IGF0IGFueSBzdGFrZXMgc3RyYWlnaHQgYXdheS4KVG8gYWRkIHRvIHRoYXQgaWYgdGhlIExFRCBzdHJpcCBoYXMgZXhwb3NlZCBtZXRhbCB0cmFjZXMgb24gdGhlIGJhY2ssIHRoYXQgY2FuIGNvbmR1Y3Qgb24gdGhlIG15bGFyIGFuZCBzaG9ydCBpdC4KQnJva2UgbXkgcmVsYXRpb25zaGlwIHdpdGggZXggYmVjYXVzZSBvZiBteSBkZXByZXNzaW9uLCBjb3VsZG4gc3RhbmQgc2VlaW5nIGhlciBiZWluZyB1bmhhcHB5IGtub3dpbmcgaSBhbSB0aGUgcmVhc29uIGZvciB0aGF0LCBhZnRlciBpIHRvbGQgaGVyIGFib3V0IHN1aWNpZGFsIHRob3VnaHRzIHNoZSBzdGFydGVkIGxvb2tpY25nIGF0IG1lIGRpZmZlcmVudGx5LiBJIGRpZG50IHdhbnQgdG8gYmUgdGhlIHJlYXNvbiBmb3IgaGVyIGxpZmUgZ29pbmcgZG93bmhpbGwgbGlrZSBtZSBzbyBpIGxldCBoZXIgZ28uIApJdCBpcyB2ZXJ5IGltcG9ydGFudCBmb3IgdGhlIHBsYXllcnMgdG8gcmV2aWV3IHRoZSB0ZXJtcyBhbmQgcG9saWNpZXMgb2YgYWxsIHRoZSBvbmxpbmUgY2FzaW5vIHNpdGVzIG9yIHBva2VyIHJvb21zIGJlZm9yZSB0aGV5IGVudGVyIHRoZW0gdG8gcGFydGljaXBhdGUgaW4gYSByZWFsIHRvdXJuYW1lbnQuCldlIGFjdGl2ZWx5IGdvIG91dCBvZiBvdXIgd2F5IHRvIGhhdmUgbm8gYWZmaWxpYXRpb24uIFdlIGRvIHRoaXMgbm90IG9ubHkgd2l0aCBCZXRoZXNkYSwgYnV0IG90aGVyIGNvbXBhbmllcyBhbmQgZW50aXRpZXMgKEV4YW1wbGUsIGEgbW9kZXJhdG9yIC9yL2ZhbGxvdXRtb2RzIHN1YnJlZGRpdCBnb3QgYSBqb2IgYXQgTmV4dXMgbW9kcyBzb21lIHllYXJzIGFnby4gCjEuKSBUcmFpbmVkIGhlciB0byBwYXkgb24gdGltZQpTbyB5b3UgYXJlIHNjcmV3ZWQuIFdlbGwsIGVudGVyIGdvbGQuIApCcmVhayBIZWFyIEluIFRlbGVwaG9uZSBXYWdlIFRhbGtzIFdBU0hJTkdUT04sIEFwci4gMTQgKE1vbmRheSkgV2FnZSBjb24gIHRyYWN0IHRhbGtzIGJldHdlZW4gdGhlIENJTyBDb21tdW5pY2F0aW9uIFdvcmtlcnMgVW5pb24gYW5kIHRoZSBPaGlvIEJlbGwgVGVsZXBob25lIFN5c3RlbSBjb250aW51ZWQgaW50byB0aGUgc21hbGwgaG91cnMgb2YgdGhlIG1vcm5pbmcgdG8gIGRheSBhbmQgYSB1bmlvbiBvZmZpY2lhbCBoZXJlIHNhaWQgYW4gYWdyZWVtZW50IGFwcGVhcmVkIG5lYXIuIFRoZSB0YWxrcyB3ZXJlIGZha2luZyBwbGFjZSBhdCBDbGV2ZWxhbmQsIE8uIApNYXliZSB0YWtlIHRob3NlIGJsaW5kZXJzIG9mZiBhbmQgcmUgcmVhZCB3aGF0IGkgd3JvdGUuIE9yIGV2ZW4gcmVhZCB0aGUgdGhyZWFkIGkgbGlua2VkIGluIHdoaWNoIGkgdGFsa2VkIGFib3V0IHRoZSBpc3N1ZXMgd2l0aCB0aGUgbW9kIHRlYW0gdGhhdCBtYWRlIG1lIGxlYXZlIHRoYXQgY2Vzc3Bvb2wuIApIYSwgaGEsIGhhIEZhdCBDYXQgQmFua2VyIHdobyB3cm90ZSB0aGlzLCB0aGUgam9rZSBpcyBvbiB5b3UuIFdoaWxlIHlvdSB3ZXJlIHdvcmtpbmcgZnJvbSA1YW0gdGlsbCAxMHBtLCB3ZSB3ZXJlIGVuam95aW5nIHRpbWUgd2l0aCBvdXQgZmFtaWx5IGFuZCBmcmllbmRzLCBlYXRpbmcgZGlubmVyLCB3YWxraW5nIGluIHRoZSBwYXJrLiAKT25lIGNvbXBhbnkgYWxsb3dlZCBtZSB0byBrZWVwIGV4YWN0bHkgb25lIHdlZWsgb2YgUFRPOyBteSBjdXJyZW50IGVtcGxveWVyIGRvZXNuIG1ha2UgbWUgdG91Y2ggdmFjYXRpb24gb3IgcGVyc29uYWwgZGF5cywgYnV0IEkgbmVlZCB0byB1c2Ugc2ljayBkYXlzIHNpbmNlIEZNTEEgaXMgKGZvciBtZSkgY292ZXJpbmcgbWVkaWNhbCBjb25kaXRpb25zIG9yIHByb2NlZHVyZXMuIApXaGF0IG1vc3QgdGVsbGluZyBpcyB0aGUgQ2hpbmVzZSBBbWVyaWNhbnMgYXJlIHRoZSBvbmx5IHBlb3BsZSBJIGtub3cgd2hvIGhhdmUgd2Vla2VuZCBsYW5ndWFnZSAoQ2hpbmVzZSkgc2Nob29scyBmb3Iga2lkcy4gClVuZCBqdXN0IGluIGRpZXNlbSBHcmFuZCBIb3RlbCB3dXJkZSAxOTAyIGRlciBsZXR6dGUgVGlnZXIgU2luZ2FwdXJzIGVyc2Nob3NzZW4gICBhbmdlYmxpY2ggaW4gZGVyIGRhbWFsaWdlbiBMb25nIEJhci4uIApNb3N0IHdvbWVuIHdhbnQgdG8gYmUgcHVyc3VlZCwgc28gaWYgdGhleSBydW4gYXdheSwgYnkgYWxsIG1lYW5zIGdvIGFmdGVyIHRoZW0uIFJlZ2FyZGxlc3Mgb2Ygd2hhdCB0aGV5IG1pZ2h0IHNjcmVhbSBhdCB5b3UsIHRvIG90aGVycyB0byBwZXRpdGlvbiB0aGVpciBhc3Npc3RhbmNlLCBvciB0aHJvdyBpbiB5b3VyIHBhdGggdG8gaW1wZWRlIHlvdXIgY2hhc2UsIHJlc3QgYXNzdXJlZCB5b3UgYXJlIHNjb3JpbmcgYmlnIHBvaW50cyBieSBmdWxmaWxsaW5nIGEgZGVlcCBzZWF0ZWQgc3ViY29uc2Npb3VzIGRlc2lyZS4uIApJJ20gaW4gdGhlIG1pbGl0YXJ5IHNvIEkgaGF2ZSB0byBoYXZlIHNob3RzLiBJIGFtIHRlcnJpZmllZCBvZiBuZWVkbGVzLiAKVHJ5IHRvIGFydGljdWxhdGUgeW91ciBxdWVzdGlvbnMgdG8gdGhlIGJlc3Qgb2YgeW91ciBhYmlsaXRpZXMuIEJlaW5nIGFzIGRldGFpbGVkIGFzIHBvc3NpYmxlIGhlbHBzIGluIGdldHRpbmcgdGhlIGJlc3QgcG9zc2libGUgYW5zd2VyLiBJZiBzb21ldGhpbmcgc2VlbXMgdW5jbGVhciwgZGVmaW5lIGFuZCBhZ3JlZSBvbiB0ZXJtcy4KRVNILiBlaC4gTlRBIGZvciBob3cgeW91IGZlbHQuIFlvdSB3ZXJlIGRlbGliZXJhdGVseSBtaXNsZWQsIGJ5IGJvdGggeW91ciBmcmllbmQgYW5kIHRoZSBnaXJsIGluIHF1ZXN0aW9uLiBIYXZpbmcgc3VjaCBhIGJpZyBwaWVjZSBvZiB0aGUgcHV6emxlIG1pc3NpbmcgaW4gdGhlIGluaXRpYWwgc3RhZ2VzIG9mIGNvbW11bmljYXRpbmcgaXMgYSBiaWcgZGVhbCwgaW4gbXkgb3Bpbmlvbi4gV2hhdCBpZiB5b3UgaGFkIDMga2lkcyBmcm9tIGEgcHJldmlvdXMgbWFycmlhZ2UgYW5kIGRpZG4gdGhpbmsgdG8gbWVudGlvbiBpdCBpbiBhIHRleHQ/IEd1YXJhbnRlZWQgc2hlIHdvdWxkIGhhdmUgZmxpcHBlZCBvdXQgYXQgeW91IGtlZXBpbmcgdGhhdCBpbmZvIGhpZGRlbi4gU2hlIGNvdWxkIGhhdmUgbG92ZWQgaGVhcmluZyBhYm91dCB5b3VyIGtpZHMsIGJ1dCB5b3Ugd291bGQgaGF2ZSBoYWQgYW4gb2JsaWdhdGlvbiB0byB0ZWxsIGhlciBhYm91dCB0aGVtIGJlZm9yZWhhbmQsIG5vdCBqdXN0IGRyb3BwZWQgaXQgbGlrZSBhIGJvbWJzaGVsbCBkdXJpbmcgdGhlIGZpcnN0IGRhdGUgYmVjYXVzZSB5b3Ugd2VyZSAibmVydm91cyBmb3IgaGVyIHJlYWN0aW9uIi4KQW0gMjQuIE1haSBkaWVzZXMgSmFocmVzIGdhYiBlcyBpbiBTcGFuaWVuIEtvbW11bmFsd2FobGVuLiBBdWYgTGEgUGFsbWEgaXN0IGJlc29uZGVycyBkYXMgV2FobGVyZ2VibmlzIGluIGRlciBncnRlbiBHZW1laW5kZSBkZXIgSW5zZWwsIExvcyBMbGFub3MgaW50ZXJlc3NhbnQsIGRhIGRpZSBXYWhsIGRpZSBNZWhyaGVpdHN2ZXJobHRuaXNzZSBkZXV0bGljaCB2ZXJuZGVydCBoYXQgdW5kIGRpZSB1bmluZGEgY2FuYXJpYSAgbG9zIHZlcmRlcyAoVmVyZWluaWd0ZSBMaW5rZSAgRGllIEdybmVuKSBJVUMgbWl0IDIgU2l0emVuIGltIEdlbWVpbmRlcmF0IGRhcyBabmdsZWluIGFuIGRlciBXYWFnZSBnZXdvcmRlbiBpc3QuLiAKQXQgU2Vuc2F0aW9ucyBhbmQgQ2x1YiBFeGNsdXNpdmUgSUksIHRoZSBob3N0ZXNzIHdvdWxkIHByb3ZpZGUgYSBicmllZiBkZXNjcmlwdGlvbiBvZiBzZXJ2aWNlcyB0byBjdXN0b21lcnMsIGluc2ludWF0aW5nIHNleHVhbCBncmF0aWZpY2F0aW9uIGlmIHRoZSB2aWN0aW0gcGFpZCBtb3JlLCBhY2NvcmRpbmcgdG8gYXJyZXN0IHJlcG9ydHMuCkEgQnJhemlsaWFuIGJsb3cgZHJ5IGlzIGEgc2VtaSBwZXJtYW5lbnQgc3RyYWlnaHRlbmluZyB0cmVhdG1lbnQgd2hlcmUgYSBtaXggb2Yga2VyYXRpbiAoYSBrZXkgc3RydWN0dXJhbCBwcm90ZWluIGluIGhhaXIgYW5kIG5haWxzKSBhbmQgZm9ybWFsZGVoeWRlIGlzIGFwcGxpZWQgdG8gdGhlIGhlYWQgdG8gcGVuZXRyYXRlIGhhaXIgY3V0aWNsZXMsIHNtb290aGluZyB0aGUgaGFpciBzaGFmdC4gVGhlIHJlc3VsdHMgY2FuIGxhc3QgdXAgdG8gZm91ciBtb250aHMgYW5kIHRoZSB0cmVhdG1lbnQgY2FuIGNvc3QgZnJvbSBhcm91bmQgMTAwIHRvIDM1MC4KU2hlIGRvZXNuIGdldCBhIHBhc3MgdG8gYmUgYW4gYXdmdWwgYml0Y2ggdG8geW91ciBtb3RoZXIgVVNJTkcgWU9VIGJlY2F1c2Ugc2hlIGRpZCBhIGZldyBkZWNlbnQgdGhpbmdzIGF0IG9uZSB0aW1lLiBXaGljaCwgYnkgdGhlIHdheSwgc2hlIGNsZWFybHkgZGlkIHRvIHRyeSBhbmQgZGFtYWdlIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBhIG1vdGhlciBhbmQgaGVyIGNoaWxkcmVuIGZvciBnZXQgb3duIHNlbGZpc2ggcmVhc29ucy4gCkFuZCBJIHdvdWxkbiBzYXkgSSBhIGJhZCBwbGF5ZXIuIEkgYXZlcmFnZSAzIDQga2lsbHMgYSBnYW1lLCBoYXZlIGdvdHRlbiB1cCB0byAxMiBiZWZvcmUgYW5kIEkgd29uIGF0IGxlYXN0IDQwIGdhbWVzIChnb3R0YSBjaGVjayBob3cgbWFueSBnYW1lcyBJIHBsYXllZCBiZXR3ZWVuIGFsbCBteSBjaGFyYWN0ZXJzLCBJIGFyb3VuZCBsZXZlbCA1NCkuIEkgdGhpbmsgSSBzdGFydCB0cnlpbmcgdG8gdXNlIGl0IG1vcmUgdG8gZ2V0IGJldHRlciB3aXRoIGl0IG5vdyB0aGF0IEkgODArIGhvdXJzIHNwZW50IG9uIHRoZSBnYW1lLCBhbmQgSSBsaWtlIHRvIGV2ZW50dWFsbHkgZ2V0IHNvbWUgb2YgdGhvc2UgcmVhbGx5IGNyYXp5IGJhZGdlcyAoMjAga2lsbHMsIG1vcmUgdGhhbiAyLDAwMCBkYW1hZ2UsIHdpcGluZyAzIHNlcGFyYXRlIHNxdWFkcyBvbiB5b3VyIG93bikuClRoZXNlIHByb3ZpZGUgbGlzdHMgb2YgdHJhaW5pbmcgY291cnNlcyBhbmQgcHJvdmlkZSBkZXRhaWxzIG9mIHRyYWluaW5nIHJlcXVpcmVtZW50cyB0byBiZSBhIG1lbWJlciBvZiB0aGUgcHJvZmVzc2lvbmFsIGJvZHkuIE9uY2Ugc29tZW9uZSBpcyBxdWFsaWZpZWQgYXMgYSBzcG9ydCBtYXNzYWdlIHByb2Zlc3Npb25hbCB0aGV5IG11c3QgZm9sbG93IGEgcHJvZ3JhbW1lIHNldCBvdXQgYnkgdGhlIGdvdmVybmluZyBib2R5IHRvIGVuc3VyZSB0aGF0IHRoZXkgYXJlIGltcHJvdmluZyB0aGVpciBrbm93bGVkZ2UgYW5kIHNraWxscy4gCkl0IGhhcyBiZWVuIGFuIGhvbm9yIHRvIHNlcnZlIHlvdSBpbiB0aGUgQ2FiaW5ldCBhcyBBZG1pbmlzdHJhdG9yIG9mIHRoZSBFUEEuIFRydWx5LCB5b3VyIGNvbmZpZGVuY2UgaW4gbWUgaGFzIGJsZXNzZWQgbWUgcGVyc29uYWxseSBhbmQgZW5hYmxlZCBtZSB0byBhZHZhbmNlIHlvdXIgYWdlbmRhIGJleW9uZCB3aGF0IGFueW9uZSBhbnRpY2lwYXRlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHlvdXIgQWRtaW5pc3RyYXRpb24uIFlvdXIgY291cmFnZSwgc3RlYWRmYXN0bmVzcyBhbmQgcmVzb2x1dGUgY29tbWl0bWVudCB0byBnZXQgcmVzdWx0cyBmb3IgdGhlIEFtZXJpY2FuIHBlb3BsZSwgYm90aCB3aXRoIHJlZ2FyZCB0byBpbXByb3ZlZCBlbnZpcm9ubWVudGFsIG91dGNvbWVzIGFzIHdlbGwgYXMgaGlzdG9yaWNhbCByZWd1bGF0b3J5IHJlZm9ybSwgaXMgaW4gZmFjdCBvY2N1cnJpbmcgYXQgYW4gdW5wcmVjZWRlbnRlZCBwYWNlIGFuZCBJIHRoYW5rIHlvdSBmb3IgdGhlIG9wcG9ydHVuaXR5IHRvIHNlcnZlIHlvdSBhbmQgdGhlIEFtZXJpY2FuIHBlb3BsZSBpbiBoZWxwaW5nIGFjaGlldmUgdGhvc2UgZW5kcy4uIApJdCBhIHByb2JsZW0sIGFuZCBpdCBjYW4gYmUgaWdub3JlZC4gQnV0IHRoZSBkaXNjdXNzaW9uIG5lZWRzIHRvIGJlIGFib3V0IHNudWZmaW5nIG91dCBhYnVzZSwgYXR0YWNraW5nIHRoZSBwcm9ibGVtcyBhbmQgZG9nbWEgb2YgQ2F0aG9saWNpc20gd2l0aG91dCBhdHRhY2tpbmcgQ2F0aG9saWNzIGFuZCBicmFuZGluZyBhbGwgcHJpZXN0cyBhcyBwZWRvcGhpbGVzLCBhbmQgY2hhbmdpbmcgdGhlIG1lbnRhbGl0eSBvZiBDYXRob2xpYyBwYXJlbnRzIHRvIGV4cHJlc3Mgb3V0cmFnZSBhbmQgZGVtYW5kIGFjY291bnRhYmlsaXR5IGZyb20gdGhlIENodXJjaCB3aGVuIHByaWVzdHMgYXJlIGFjY3VzZWQuCkNvbmdyYXR1bGF0aW9ucyBvbiB5b3VyIGVuZ2FnZW1lbnQgOikgWWVzLCBvbmUgZ3V5IEkgdGFsa2VkIHRvIGZvciBhIGZldyB3ZWVrcyBvbiBhIGRhdGluZyBzaXRlIHNhaWQgaGUgd2Fzbid0IGludGVyZXN0ZWQgaW4gdGhlIGVuZCBiZWNhdXNlIGhlIHdhbnRlZCBzb21lb25lICJ3aXRoIG1vcmUgYW1iaXRpb24gdGhhbiB0byBiZSBhIGhvdXNld2lmZS4iIEhlIGtuZXcgZnJvbSB0aGUgYmVnaW5uaW5nLCB0aG91Z2gsIGFzIHRoZSBkZXNpcmUgdG8gYmUgYSBTQUhNIHdhcyBvbiBteSBkYXRpbmcgcHJvZmlsZSBhbmQgd2UgaGFkIHRhbGtlZCBvbiB0aGUgcGhvbmUgYWJvdXQgaXQuIEkgY3JpZWQgYWZ0ZXIgaGlzIHBob25lIGNhbGwgYnJlYWtpbmcgaXQgb2ZmIGJlY2F1c2UgSSdtIGEgYmFieS4gCk1ldGFib2xpYyBzeW5kcm9tZSBpcyBjaGFyYWN0ZXJpemVkIGJ5IGluc3VsaW4gcmVzaXN0YW5jZSB0aGUgc2l0dWF0aW9uIGluIHdoaWNoIG11c2NsZSwgbGl2ZXIsIG9yIGZhdCB0aXNzdWVzIGNhbm5vdCBwcm9wZXJseSByZXNwb25kIHRvIGluc3VsaW4ncyBzaWduYWwgdG8gYnJpbmcgZ2x1Y29zZSBpbnRvIGNlbGxzLiBBcyBhIHJlc3VsdCwgZ2x1Y29zZSBhbmQgdHJpZ2x5Y2VyaWRlIGxldmVscyByaXNlIGluIHRoZSBibG9vZCwgYmVuZWZpY2lhbCBoaWdoIGRlbnNpdHkgbGlwb3Byb3RlaW4gKEhETCkgZGVjbGluZXMsIGFuZCBibG9vZCBwcmVzc3VyZSByaXNlcy4gSW4gYSBmaXZlIHllYXIgbG9uZyBlcGlkZW1pb2xvZ2ljYWwgc3R1ZHkgb2YgbW9yZSB0aGFuIDEsMDAwIGhlYWx0aHkgYWR1bHRzLCBzY2llbnRpc3RzIGZvdW5kIHRoYXQgZ3JlYXRlciBtYWduZXNpdW0gaW50YWtlIHdhcyBsaW5rZWQgd2l0aCBpbXByb3ZlZCBpbnN1bGluIHNlbnNpdGl2aXR5LjkKRW1wbG95bWVudCBpbmNyZWFzZWQgYnkgNTUsOTAwIGluIEZlYnJ1YXJ5LCBhbGwgZnVsbCB0aW1lIGpvYnMsIFN0YXRpc3RpY3MgQ2FuYWRhIHNhaWQgRnJpZGF5IGluIE90dGF3YSwgYnVpbGRpbmcgb24gYSA2Niw4MDAgZ2FpbiBpbiBKYW51YXJ5LiBUaGUgdHdvIG1vbnRoIGdhaW4gaXMgdGhlIGJlc3Qgc3RhcnQgdG8gYSB5ZWFyIHNpbmNlIDE5ODEuIENhbmFkYSBlY29ub215IGhhcyBhZGRlZCAyOTAsMDAwIGpvYnMgc2luY2UgQXVndXN0LCB0aGUgbGFyZ2VzdCBzaXggbW9udGggaW5jcmVhc2Ugc2luY2UgdGhlIGVhcmx5IDIwMDBzLi4gClRoZSBjb2xvciBvZiB5b3VyIHNraW4gaGlnaGx5IGRlcGVuZHMgb24gdGhlIGFtb3VudCBvZiBtZWxhbmluIHByZXNlbnQgaW4geW91ciBib2R5LiBTb21lIEFzaWFuIHdvbWVuIGhhdmUgYSBncmVhdGVyIGFtb3VudCBvZiB0aGlzIHNraW4gcGlnbWVudCBpbiB0aGVpciBib2RpZXMsIG1ha2luZyB0aGVpciBza2luIGNvbG9yIGRhcmtlciwgd2hpbGUgc29tZSB3b21lbiBoYXZlIGxlc3MgbWVsYW5pbiBpbiB0aGVpciBib2R5IGdpdmluZyB0aGVtIGEgZmFpcmVyIHNraW4gdG9uZS4KSWYsIGluIGZhY3QsIHRoZSBwZW9wbGUgYWZmZWN0ZWQgYnkgdGhlIHZvdGVyIElEIGxhd3MgY292ZXIgbW9yZSB0aGFuIEFmcmljYW4gQW1lcmljYW4gRGVtb2NyYXRzLCBzYXksIGZvciBpbnN0YW5jZSBDYXVjYXNpYW4gQW1lcmljYW4gUmVwdWJsaWNhbnMsIG9yIG1heWJlIGV2ZW4gYW4gQ2hpbmVzZSBBbWVyaWNhbiBMaWJlcnRhcmlhbiwgdGhlbiB0aGUgY29udGVudGlvbiB0aGF0IHRoZSBsYXdzIGFyZSBtZWFudCB0byBpbmZsdWVuY2UgZWxlY3Rpb25zIGdvZXMgb3V0IHRoZSB3aW5kb3cuLiAKTm8gc2tpbiByZXF1ZXN0cy4gWW91IG1heSBvbmx5IHJlcXVlc3QgY3JlYXRpb24gb2Ygc2tpbnMgaW4gdGhlIHdlZWtseSBoZWxwIHRocmVhZC4KTm8gd2F5IGlzIE5lYXBvbGl0YW4gcGl6emEgYSBtYWluc3RyZWFtIHRoaW5nLCBldmVuIGluIEl0YWx5IG91dHNpZGUgb2YgTmFwb2xpIGl0IGlzbid0IGFuIGVhc3kgdGhpbmcgdG8gZmluZCB0aG91Z2ggbm93IHlvdSBjYW4gdXNlIGFwcHMgYW5kIGZpbmQgOSAxMCBwbGFjZXMgaW4gUm9tYSBvciBNaWxhbm8gbGlrZSB0aGF0LgpJcm9xdW9pYW4gbGFuZ3VhZ2VzIGFyZSByZXByZXNlbnRlZCBieSBDaGVyb2tlZSwgU2VuZWNhLCBNb2hhd2ssIFdlbmRhdCwgZXRjLiAKT25lIGR1ZGUgZXZlbiBob3BwZWQgZG93biBhY3Jvc3MgdGhlIHRyYWNrcyBhbmQgc3RhcnRlZCBwYWNpbmcgb24gbXkgcGxhdGZvcm0uIEkgaGFkIGEgcG9ja2V0IGtuaWZlIGluIG15IGNvYXQgdGhhdCBJIHdhcyB3aGl0ZSBrbnVja2xpbmcgdGhlIHdob2xlIHRpbWUuIEl0IGZlbHQgbGlrZSBmb3JldmVyIGJlZm9yZSB0aGUgbmV4dCB0cmFpbiBzaG93ZWQgdXAuIApPaCwgdGhlIGplbGx5IGJlYW4sIHRoYXQgc3dlZXQgb3ZhbCBjb25mZWN0aW9uIHRoYXQgaXMgdGhlIG1haW5zdGF5IG9mIEVhc3RlciBiYXNrZXQgY2FuZGllcy4gUGFyZW50cyByZWx5IG9uIHRoZSBlY29ub21pY2FsIGplbGx5IGJlYW4gdG8gYnVsayB1cCB0aGUgYmFza2V0IGFuZCB1c2UgbW9yZSBleHBlbnNpdmUgY2hvY29sYXRlIGJ1bm5pZXMgYW5kIG1hbHRlZCBlZ2dzIGFzIGdhcm5pc2guIApJIHdpbGwgbGlzdCBhIGZldywgYnV0IGFnYWluLCB0aGlzIHRvcGljIGNvdWxkIGZpbGwgYSBib29rLi4gCkhlIHRoZW4gZm9sbG93ZWQgdXAgd2l0aCBhIHdhbGsgdGhyb3VnaCBvZiBvdXIgZmFjaWxpdHkgYnV0IHdlIHdvbiBrbm93IHdoYXQgaGUgZm91bmQgdW50aWwgaGUgZ2l2ZXMgdXMgYSByZXBvcnQuIEkgY2FuIGZvbGxvdyB1cCB3aXRoIGltcHJvdmVtZW50cyByZXF1aXJlZCBvbmNlIHdlIGdldCBhIGxpc3Qgb2YgdGhvc2UuIEkgdGFsayB0byBvdXIgRVMgbWFuYWdlciB0b28gZm9yIGEgZmV3IG1vcmUgZGV0YWlscy4uIApUaGUgcGFzdG9yIHNwZWFraW5nIGF0IHRoZSBmdW5lcmFsIHBob25lIHN0YXJ0ZWQgcmluZ2luZyBuZWFyIHRoZSBiZWdpbm5pbmcgb2YgaGlzIHNwZWVjaCBhbmQgaGUgcGF1c2VkIHRvIGFuc3dlciBpdC4gSGUgdGhlbiBwcm9jZWVkZWQgdG8gaGF2ZSBhIGNvbnZlcnNhdGlvbi4gCkplcmtlZCB0aGUgdGhyb3R0bGUuIApIb3dldmVyIEkgc2hvdWxkIGZlZWwgZ29vZCBiZWNhdXNlIEkgZ290IHRoZSBtb3N0IEkgcG9zc2libHkgY291bGQgcXVhbGlmeSBmb3IuIApJIHZlcnkgc29ycnkgZm9yIHlvdXIgbG9zcy4gSSBoYXZlIG5vIHBlcnNvbmFsIGV4cGVyaWVuY2Ugd2l0aCB0aGlzIGJ1dCBteSBodXNiYW5kIGxvc3QgaGlzIG1vbSBhdCA0IGFuZCBJIGNhbiB0ZWxsIHlvdSB3aGF0IHN0aWxsIGltcGFjdHMgaGltIGF0IDQ1LiAKRHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIG1hcmF0aG9uLCB3aGljaCBsYXN0ZWQgZml2ZSBtb250aHMgd2l0aCBicmVha3Mgb25seSBmb3Igc2xlZXAsIHRoZSB0d28gbWVuIHBsYXllZCBldmVyeSBmb3JtIG9mIHBva2VyIGltYWdpbmFibGUuIE1vc3MgdWx0aW1hdGVseSB3b24gInRoZSBiaWdnZXN0IGdhbWUgaW4gdG93biIgYW5kIGFuIGVzdGltYXRlZCAkMiBtaWxsaW9uLiBXaGVuIHRoZSBHcmVlayBsb3N0IGhpcyBsYXN0IHBvdCwgaGUgYXJvc2UgZnJvbSBoaXMgY2hhaXIsIGJvd2VkIHNsaWdodGx5LCBhbmQgdXR0ZXJlZCB0aGUgbm93IGZhbW91cyB3b3JkcywgIiBNci4gTW9zcywgSSBoYXZlIHRvIGxldCB5b3UgZ28uIiBEYW5kb2xvcyB0aGVuIHdlbnQgdXBzdGFpcnMgdG8gYmVkLgoiVGhpbmdzIGxpa2UgdGhpcyBzaG91bGRuJ3QgaGFwcGVuLiBBYnNvbHV0ZWx5IHNpY2sgdG8gdGhlIHN0b21hY2gsIiBCcml0aXNoIGN5Y2xpc3QgTWFyayBDYXZlbmRpc2ggc2FpZCBvbiBUd2l0dGVyLiAiTXkgdGhvdWdodHMgYXJlIHdpdGggaGlzIGZhbWlseS4gUklQIFdvdXRlciBXZXlsYW5kdC4iClJ4U3RyZW5ndGhCb2IgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KSSB3aWxsIGFsc28gc2F5IHRoYXQgZGVlcCBrbm93bGVkZ2UgYWJvdXQgb25lIHJlbGV2YW50IHN1YmplY3QgaXMgcHJvYmFibHkgYmV0dGVyIHRoYW4gc3VyZmFjZSBsZXZlbCBrbm93bGVkZ2Ugb2YgYSBidW5jaCBvZiB0aGluZ3MsIHNvIHlvdSB3b3VsZCBiZSByaWdodCBpbiB0cnlpbmcgdG8gbmFycm93IHlvdXIgZm9jdXMuLiAKRHVyaW5nIHRoZSBzZWFyY2ggcG9saWNlIGFsc28gbG9jYXRlZCAkNjAwIGluIGNhc2ggaW4gYSBkcmF3ZXIgYW5kIGEgZnVydGhlciAkMTAwMCBpbiBhIHBpbmsgYmFnIGluIGhpcyBiZWRyb29tLgpEZWVwU3RhY2sgc29sdmVzIGEgZGVwdGggbGltaXRlZCBzdWJnYW1lIG9uIHRoZSBmaXJzdCB0d28gYmV0dGluZyByb3VuZHMgYnkgZXN0aW1hdGluZyB2YWx1ZXMgYXQgdGhlIGRlcHRoIGxpbWl0IHZpYSBhIG5ldXJhbCBuZXR3b3JrLiBUaGlzIGFsbG93cyBpdCB0byBhbHdheXMgY2FsY3VsYXRlIHJlYWwgdGltZSByZXNwb25zZXMgdG8gb3Bwb25lbnQgb2ZmIHRyZWUgYWN0aW9ucywgd2hpbGUgTGlicmF0dXMgdHlwaWNhbGx5IHBsYXlzIGluc3RhbnRhbmVvdXNseSBhY2NvcmRpbmcgdG8gaXRzIHByZSBjb21wdXRlZCBibHVlcHJpbnQgc3RyYXRlZ3kgaW4gdGhlIGZpcnN0IHR3byByb3VuZHMgKGV4Y2VwdCB0aGF0IGl0IHVzZXMgaXRzIHN1YmdhbWUgc29sdmVyIGlmIHRoZSBwb3QgaXMgbGFyZ2UpLiAKRHVlIHRvIHRoaXMsIHRoZXJlIGlzIGFuIG9uZ29pbmcgZXh0ZW5zaXZlIGVmZm9ydCB0byBlbnN1cmUgdGhhdCBvbmx5IHRoZSBiZXN0IHF1YWxpdHkgbWF0ZXJpYWxzIGFyZSB1c2VkIGluIHRoZXNlIEN1c3RvbSBQb2tlciBDaGlwcy4gCk1pbGxpb25zIG9mIHBlb3BsZSB0b2RheSBhcm91bmQgdGhlIHBsYW5ldCBhcmUgd2FnZXJpbmcgb24gc3BvcnRzIG9ubGluZSwgcGxheWluZyBvbmxpbmUgcG9rZXIsIGJpbmdvIGFuZCBldmVuIHRoZSBsb3R0ZXJ5IG9ubGluZSBhdCBhbnkgb2YgeW91ciBhIGh1Z2UgbnVtYmVyIG9mIGdhbWJsaW5nIHNpdGVzIG9idGFpbmFibGUgYXJvdW5kIHRoZSBuZXQuIApIb3dldmVyLCBJIGxpa2UgZ2l2aW5nIGFuZCByZWNlaXZpbmcgdGhvdWdodGZ1bCBnaWZ0cyAod2hldGhlciBpdCBsaXR0bGUgdGhpbmdzLCBoYW5kbWFkZSBzdHVmZiwgb3IgYm91Z2h0IGdpZnRzICAgaWYgeW91IGZhbWlsaWFyIHdpdGggbG92ZSBsYW5ndWFnZXMsIGdpZnQgZ2l2aW5nIGlzIGRlZmluaXRlbHkgb25lIG9mIG1pbmUpLiAKRm91ciBtb250aHMgYWdvLCBMdW5kIGFuZCBoaXMgYmFuZG1hdGVzIG1hZGUgdGhlaXIgKHRyaXVtcGhhbnQpIG1haW5zdGFnZSBkZWJ1dCBhdCB0aGUgRWRtb250b24gRm9sayBGZXN0LiBTaW5jZSB0aGVuLCB0aGUgc29uIG9mIHNvdXRoZXJuIEFsYmVydGEgcmFuY2hlcnMgc2NvcmVkIGhpcyBmaXJzdCBOby4gMSBhbGJ1bSBpbiBDYW5hZGEgc2VsbGluZyBtb3JlIHRoYW4gNSwwMDAgY29waWVzIG9mIENhYmluIEZldmVyIGR1cmluZyB0aGUgZmlyc3Qgd2VlayBvZiBpdHMgcmVsZWFzZS4gCkhhdmUgc28gbXVjaCBwYXNzaW9uIGFuZCBzdXBwb3J0IGZvciBlYWNoIG90aGVyLCBNYXJjdXMgc2FpZC4gYSBncmVhdCB1bml0LiBPdXIgYmVuY2ggaXMgcHJvYmFibHkgdGhlIGJlc3QgSSBldmVyIGhhZCBpbiB0ZXJtcyBvZiBzdXBwb3J0aW5nIGFuZCBjaGVlcmluZy4gVGhleSBkb24gY29tcGxhaW4gYW5kIHRoZXkgcmVhZHkgdG8gZ28gaW4gd2hlbiB5b3UgYXNrIHRoZW0uClRoZSBmb3JtZXIgZ2FtYmxpbmcgYWRkaWN0LCB3aG8gZGlkIG5vdCB3aXNoIHRvIGJlIG5hbWVkIGJ1dCBoYWQgYWdyZWVkIHRvIGJlIGludGVydmlld2VkIGJ5IHRoZSByZWd1bGF0b3IsIHdhcyBhbHNvIGdpdmVuIG1vcmUgdGhhbiBvbmUgbG95YWx0eSBjYXJkIHNvIHNoZSBjb3VsZCBoYXJ2ZXN0IHBvaW50cyBmcm9tIHZhcmlvdXMgbWFjaGluZXMsIE1yIFdpbGtpZSBzYWlkIG9uIFR1ZXNkYXkuIApTbyB0aGV5IGNhbGxlZCB1cyBpbiBhIGxpdHRsZSB3aGlsZSBsYXRlciBhbmQgc2hvd2VkIHVzIHRoZSBpbWFnZXMgb2YgdGhlIHNjYW5zIGFuZCBkaXNjdXNzZWQgZXZlcnkgbWlub3IgZGV0YWlsIHdpdGggdXMuIEkgbXVzdCBzYXksIGlmIHdlIGhhZCBhbnkgZG91YnRzIGFib3V0IHRoZWlyIGNvbXBldGVuY2UgYmVmb3JlIHdlIGxlZnQgaG9tZSwgdGhlIGRvdWJ0cyBoYXZlIGJlZW4gY29tcGxldGVseSByZXBsYWNlZCB3aXRoIGNvbmZpZGVuY2UuIFRoZXkgZXhwbGFpbmVkIHRoZSB0eXBlcyBvZiB0cmVhdG1lbnRzIGFuZCB3aGF0IHRoZXkgY29uc2lkZXJlZCBQZXRlJ3MgYmVzdCBvcHRpb24gaXMsIHNvIEkgd2lsbCB0YWxrIGFib3V0IHRoaXMgaW4gbW9yZSBkZXRhaWwgdG9tb3Jyb3cuLiAKWW91IGhhdmUgdG8gc3RhcnQgcGxheWluZyB0aGUgcGVyc29uIGluc3RlYWQgb2YgeW91ciBjYXJkcy4gCiJsZXQgc2F5IHRoZXkgaGF2ZSBkZWR1Y3Rpb25zIHdvcnRoIDUwJSBvZiB0aGF0IHNvIHRoZXkgZ2V0ICQyODY3LjUgYmFjayBhdCB0aGUgZW5kIG9mIHRoZSB5ZWFyLiBTbyBsb2dpY2FsbHkgdGhleSBjb3VsZCBqdXN0IHBheSB0aGUgZXhhY3QgYW1vdW50IG9mIHRheGVzIHRoYXQgeWVhciBhbmQgc2F2ZSAkMjg2Ny41IGFuZCBnZXQgMyUgYmFjayBmcm9tIGEgc2F2aW5ncyBhY2NvdW50LiBUaGF0IGxlc3MgdGhhbiAkOTAuIFlvdXIgYXJndW1lbnQgZG9lc24gaG9sZCB3YXRlciB1bmxlc3MgeW91IG1ha2UgYSBsYXJnZSBzdW0gb2Ygd2F0ZXIgYW5kIEkgYmV0ICQyMCB5b3UgYWxyZWFkeSBrbm93IHRoaXMgeW91cnNlbGYgYW5kIHlvdSBhZ2FpbnN0IGluY29tZSB0YXhlcyBiZWNhdXNlIHlvdSBoYXRlIHRheGVzIGluIGdlbmVyYWwuIE1lYW53aGlsZSwgeW91IGxvdmUgQW1lcmljYSBqdXN0IG5vdCBlbm91Z2ggdG8gaGFwcGlseSBwYXkgdGF4ZXMgc28geW91IHdhbnQgbW9yZSBwZW9wbGUgdG8gYmUgYWdhaW5zdCB0YXhlcy4iClRoaXMgd2FzIGJhc2ljYWxseSB0aGVpciB3YXkgb2YgY29waW5nIHRob3VnaCwgdGhleSB3ZXJlbid0IHNlcmlvdXMuIApUaGUgRkJJIHNhaWQgUGFkZG9jayBoYWQgbm8gY29ubmVjdGlvbiB3aXRoIGludGVybmF0aW9uYWwgbWlsaXRhbnQgZ3JvdXBzLgpJbiBhbm90aGVyIHN0dWR5IGEgcG9zaXRpdmUgY29ycmVsYXRpb24gYmV0d2VlbiBleGVyY2lzZSwgdGVtcG9yYWwgY29ydGV4IGFjdGl2YXRpb24gZHVyaW5nIGEgbGVhcm5pbmcgdGFzayBhbmQgY29nbml0aW9uIHdhcyByZXBvcnRlZCB0aGF0IHdhcyBzdHJvbmdlciBpbiBjYXJyaWVycyB0aGFuIG5vbiBjYXJyaWVycyBvZiB0aGlzIGdlbmUgWzI5XS4gSG93ZXZlciwgaW4gYSA2IG1vbnRoIGludGVydmVudGlvbiBzdHVkeSB0aGVyZSB3YXMgYW4gYXR0ZW51YXRlZCBlZmZlY3Qgb2YgZXhlcmNpc2UgaW4gQXBvRSBlNCBjYXJyaWVycyB0aGF0IHNob3dlZCBzeW1wdG9tcyBvZiBtZW1vcnkgZGVjbGluZSBbMjVdLiBGdXJ0aGVyIHN0dWRpZXMgYXJlIG5lZWRlZCB0byBkZXRlcm1pbmUgd2hldGhlciBlYXJseSBpbnRlcnZlbnRpb24gd2l0aCBhbiBhY3RpdmUgbGlmZXN0eWxlIChjb21iaW5lZCB3aXRoIGNlcnRhaW4gZGlldGFyeSBzdXBwbGVtZW50cykgbWlnaHQgYmUgcGFydGljdWxhcmx5IGJlbmVmaWNpYWwgZm9yIHRoaXMgYXQgcmlzayBwb3B1bGF0aW9uLi4gCjE0aDUwICAgTCdpbnRlcm5hdGlvbmFsaXNhdGlvbiBldCBsJ2ludGVycG50cmF0aW9uIGRlcyByc2VhdXgsIEZyYW5vaXMgWGF2aWVyIFJPVVggREVNQVJFLCBNYXRyZSBkZSBjb25mcmVuY2VzICBsJ1VuaXZlcnNpdCBkZSBCcmV0YWduZSBvY2NpZGVudGFsZQpXaGl0ZSB0b29rIG9uIEx1ZGRlbiBsYXN0IG5hbWUgYW5kIHRoZSBjb3VwbGUgYXBwZWFyZWQgdG9nZXRoZXIgb24gc2V2ZXJhbCBnYW1lIHNob3dzLiAKSSB0aGluayB0aGlzIGlzIHRoZSBiZXN0IGFkdmljZSBmb3Igc29tZW9uZSBsaWtlIHlvdXJzZWxmIHdpdGhvdXQgYmVpbmcgaW4gY2FyZWVyIGFjYWRlbWlhLiBZb3UgYXJlIG1vcmUgbGlrZWx5IHRvIGhhdmUgYSBtYW5hZ2VyIGF0IElCTSB3aWxsaW5nIHRvIHRha2UgYSByaXNrIGFuZCB0cmFuc2l0aW9uIHlvdSBvbnRvIHRoZWlyIHJlc2VhcmNoIHRlYW0gcmF0aGVyIHRoYW4gYSBuZXcgY29tcGFueSBoaXJlIHlvdS4gV2l0aCB0aGF0IGJlaW5nIHNhaWQsIGRvaW5nIHByb2plY3RzIHRoYXQgYXJlIG1vcmUgdGhhbiBqdXN0IGFwcGx5aW5nIHN0YW5kYXJkIGxpYnJhcmllcyBhbmQgYXJlIG1vcmUgaHlwb3RoZXNpcyB0ZXN0aW5nIHdpbGwgaGVscCBzaG93IHlvdXIgZnVuZGFtZW50YWwga25vd2xlZGdlIGFuZCBjcml0aWNhbCB0aGlua2luZyBza2lsbHMgdGhhdCBhcmUgaW1wb3J0YW50IGluIHJlc2VhcmNoLgpUaGF0IGludGVsbGlnZW5jZSwgY29tYmluZWQgd2l0aCB0aGUgZXZvbHV0aW9uYXJ5IGRlc2lyZXMgcHJlc2VudCBpbiBvdGhlciBhbmltYWxzLCBhbGxvd2VkIHVzIHRvIGNvbnN1bWUgbW9yZSB0aGFuIGlzIG5hdHVyYWxseSBmZWFzaWJsZSBvciBjb25jZWl2YWJsZSBieSBhIGxvbmcgc2hvdC4gClRoZXkgaGF2ZSBhIGZldyBraWQgZnJpZW5kbHkgdGhpbmdzLiAKQ29uc3RhbnRseSBzdHJpdmluZyB0b3dhcmQgcGVyc29uYWwgZ3Jvd3RoLCBJIHRyeSB0byBnZXQgdGhyb3VnaCBhIGJvb2sgcGVyIHdlZWsgb24gYnVzaW5lc3MsIGludmVzdGluZywgb3Igc2VsZiBkZXZlbG9wbWVudC4gClRha2UgdGhhdCBtYXAgYW5kIHBsYWNlIGl0IGF0IHlvdXIgZnJvbnQgZG9vciBvciBtYWluIGVudHJhbmNlIGludG8geW91ciBob21lLiAKV2Ugc2FpZCAiSSBsb3ZlIHlvdSIgMTEgZGF5cyBhZnRlciB3ZSBtZXQuIApQb3J0dXJhbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpPdmVyIHRoZSB5ZWFycywgSSd2ZSBsaXN0ZW5lZCB0byBhIGdyZWF0IG51bWJlciBvZiBidXNpbmVzcyBzdGFydCB1cCBpZGVhcywgYXMgd2VsbCBhcyBuZXcgcHJvZHVjdCBpZGVhcyBmcm9tIGV4aXN0aW5nIGNvbXBhbmllcy4gVGhlIG1vc3QgY29tbW9uIG1pc3Rha2UgZW50cmVwcmVuZXVycyBtYWtlIGFzIHRoZXkgZGV2ZWxvcCB0aGVpciBpZGVhcyBpcyB0aGV5IHRha2UgYW4gaW53YXJkIHZpZXcuIApXZSBqdXN0IG5vdyBzZWVpbmcgZnJvbSB0aGUgb3V0c2lkZSB0aGF0IG1lc3MgdGhhdCB0YWtpbmcgcGxhY2UuIApGZWxsb3cgQWxvaGEgU3RhdGUgcmVzaWRlbnQgaGVyZTogU2luY2Ugd2UncmUgbGltaXRlZCB0byAxMCByZHMgZm9yIGJvdGggcmlmbGVzL3Bpc3RvbHMgYW5kIGNhbid0IGV2ZW4gb3duICJhc3NhdWx0IHBpc3RvbHMiIEkgd2FzIHRoaW5raW5nIG9mIGdldHRpbmcgYSBDTVAgTTEgR2FyYW5kLiAKSSBob3N0ZWQgYSBnYW1lIGluIG15IGJhc2VtZW50IGZvciA0IHllYXJzIG5vdy4gV2UgY3VycmVudGx5IGFyZSBhdmVyYWdpbmcgMjUgMzAgcGxheWVycywgd2UgcGxheSB0d2ljZSBhIG1vbnRoLiBMb3cgc3Rha2VzICh1c3VhbGx5ICQyMCBmcmVlemVvdXRzLCBvciBsaW1pdGVkIHJlYnV5IGdhbWVzLCBmb2xsb3dlZCBieSBhICQwLjI1LyQwLjUwIGNhc2ggZ2FtZSkuClRhYmxlIG9mIGNvbnRlbnRzLiBIb3cgbG9uZyBkb2VzIEFkZGVyYWxsIHRha2UgdG8ga2ljayBpbj8gLiBtYWtlcyB5b3UgdGhpbmsgbW9yZSwgYnV0IG5vdCBuZWNjZXNzYXJpbHkgZmFzdGVyIC4gSG93IHRpbWUgcmVsZWFzZWQgQWRkZXJhbGwgWFIgd29ya3M6IElmIHlvdSB0YWtlIGFwYXJ0IGFuIC4KSk9WSUNIRVZJQ0gsIEdlb3JnZSAgIEdlb3JnZSBKb3ZpY2hldmljaCwgYWdlZCA3OCwgZGllZCBwZWFjZWZ1bGx5IGF0IGhvbWUgb24gU3VuZGF5LCBBdWd1c3QgNSwgMjAxOC4gR2VvcmdlIHdpbGwgbmV2ZXIgYmUgZm9yZ290dGVuIGJ5IHRob3NlIHdobyBrbmV3IGhpbS4gSGUgbGl2ZWQgaGlzIGxpZmUgdG8gdGhlIGZ1bGxlc3QsIGRvaW5nIGV4YWN0bHkgd2hhdCBoZSB3YW50ZWQgdG8gZG8uIEdlb3JnZSBwbGF5ZWQgZm9vdGJhbGwgZm9yIHRoZSBMb25kb24gTG9yZHMgZm9yIDEzIHllYXJzIGR1cmluZyB3aGljaCB0aW1lIGhlIG1ldCBNYXJ5LCBoaXMgd2lmZSBvZiA1NCB5ZWFycyB3aXRoIHdob20gaGUgc2hhcmVkIHR3byBjaGlsZHJlbiwgQnJvbmNvIChDb3JlbmUpIGFuZCBKaWxsIChUaW0gUG90dGVyKS4gClNoZSBpcyB2ZXJ5IGNvbWZvcnRpbmcgYW5kIHdhbnRzIHRvIGdldCB0byBrbm93IGhlciBjbGllbnRzIGFuZCB0aGVpciBuZWVkcy4gCkkgYW0gbm90IGNyaXRpY2l6aW5nLiBKdXN0IHdhbm5hIHVuZGVyc3RhbmQgYmVjYXVzZSBteSBjb2FjaCB0ZWxscyBtZSB0byBhbHdheXMga2VlcCBteSBib3hpbmcgc3RhbmNlIGFuZCBub3QgdG8gcmVhY2guIApUaGV5IHdlcmUgcGxhbm5pbmcgdG8gZ28gdG8gYmVkIGVhcmx5LCBiZWNhdXNlIHRoZXkgaGFkIHRvIGdldCB1cCBlYXJseSB0aGUgbmV4dCBtb3JuaW5nLiAKUGxvdCdTYWx1ZG9zIEFtaWdvcycgbWVhbnMgJ0hlbGxvIEZyaWVuZHMnIGFuZCB0aGlzIGZpbG0gYWltZWQgdG8gaW50cm9kdWNlIGF1ZGllbmNlcyB0byB0aGUgY3VsdHVyZSBvZiBTb3V0aCBBbWVyaWNhbiBjb3VudHJpZXMsIGluY2x1ZGluZyBCcmF6aWwgYW5kIEFyZ2VudGluYSwgYW5kIHRodXMgZW5jb3VyYWdlIGdvb2QgcmVsYXRpb25zIGJldHdlZW4gdGhlIFVTQSBhbmQgU291dGggQW1lcmljYSBkdXJpbmcgdGhlIFNlY29uZCBXb3JsZCBXYXIuCk5IQSBpcyBtZWV0aW5nIHRoYXQgZGVtYW5kIGJ5IG9mZmVyaW5nIGV4YW1zIGFjY3JlZGl0ZWQgYnkgVGhlIE5hdGlvbmFsIENvbW1pc3Npb24gZm9yIENlcnRpZnlpbmcgQWdlbmNpZXMgKE5DQ0EpLiAKQnV0IHRoaXMgZ29lcyBvbmUgc3RlcCBmdXJ0aGVyIGFuZCByZXBsYWNlcyB0aGUgZW5naW5lIGVudGlyZWx5IHdpdGggYSBiYXR0ZXJ5IHBhY2suIFN1c3RhaW5hYmlsaXR5L2NhcmJvbiBmb290cHJpbnQgd2lsbCBiZSBkZXRlcm1pbmVkIGJ5IGhvdyB0aGUgZWxlY3RyaWNpdHkgaXMgZ2VuZXJhdGVkLgpJcyBpdCBmYWlyIHRvIHNheSB0aGF0IHRoZXJlIGlzIGEgc2luZ2xlIE1hcnhpc3QgTGVuaW5pc3QgcGVyc3BlY3RpdmUgb24gU3RhbGluPyBPciB3b3VsZCBpdCBiZSBtb3JlIGFjY3VyYXRlIHRvIHNheSB0aGF0IHRoZXJlIGFyZSBtYW55IHBlcnNwZWN0aXZlcyBhbmQgYWxsIG9mIHRoZW0gZGlmZmVyPyBJIG1lYW4gd2UgaGF2ZSBzb21lIHRhbmtpZXMgdGhhdCBjb3VsZCBiZSBsdW1wZWQgaW50byB0aGlzIGlkZW9sb2d5IGJ1dCB3ZSBhbHNvIGhhdmUgbW9yZSBsZWdpdGltYXRlIGFjYWRlbWljcyB3aG8gYXJlIGFsc28gTWFyeGlzdHMuCk1lcmtlbCBzYWlkIFdlZG5lc2RheSB0aGF0IGxlYWRlcnMgbmVlZCB0byB3b3JrIGFnYWluc3QgZnJhZ21lbnRhdGlvbiBvZiB0aGUgaW50ZXJuYXRpb25hbCBhcmNoaXRlY3R1cmUuIERheXMgc29tZSB0aGluayBpdCBiZXN0IGV2ZXJ5b25lIHRoaW5rcyBvbmx5IGFib3V0IGhpbXNlbGYsIHNoZSBzYWlkLiBIYXZlIGRvdWJ0cyBhYm91dCB0aGF0LiAKVGhlIG9ubHkgc2Nob29sIHRoYXQgd291bGQgdGFrZSBtZSBpcyBhIHNjaG9vbCBmb3Iga2lkcyB3aXRoIGJhZCBiZWhhdmlvci4gCkkgYXQgbm8gcG9pbnQgc2FpZCBpdCB3YXMgc3RyaWN0IGxpYWJpbGl0eS4gSWYgeW91IHdhbnQgdG8gYXJndWUgYWdhaW5zdCB0aGF0IHBvc2l0aW9uIGZlZWwgZnJlZSB0byBkbyBzby4KQXQgbWFueSBvbmxpbmUgc2l0ZXMgb25lIGNhbiBidXkgaW4gZm9yICQzIG9yIGxlc3MgYW5kIGJlIHBhcnQgb2YgYSB0b3VybmFtZW50IHRoYXQgb2ZmZXJzIHVwIHRvIGFuIGhvdXIgb2YgcG9rZXIgYWN0aW9uLiAKRXMgZ2lidCBhdWNoIG5vY2ggZGVuIGdyb2VuIFVudGVyc2NoaWVkLCBkYXNzIGRpZSBSZXB1Ymxpa2FuZXIgc28gaWRlb2xvZ2lzY2ggYW4gU3RldWVyc2Vua3VuZ2VuIGZlc3RoYWx0ZW4sIGRhc3Mgc2llIFN0ZXVlcnNlbmt1bmdlbiBpbSBBbmdlc2ljaHQgZWluZXMgbWFzc2l2ZW4gSGF1c2hhbHRzZGVmaXppdCBmb3JkZXJuLCB3aHJlbmQgd2lyIGhpZXIgaW4gRGV1dHNjaGxhbmQgZWluZW4gYmVyc2NodXNzIGhhYmVuLgpUYWJsZXMgdGhtYXRpcXVlcyBhdXRvdXIgZGVzIHN1amV0cyBldCBwcm9qZXRzIGlzc3VzIGRlIGwnb3JkcmUgZHUgam91ciBwYXJ0aWNpcGF0aWYgOiBzY3VyaXQvdHJhbnF1aWxsaXQgcHVibGlxdWUgOyBjYWRyZSBkZSB2aWUvcHJvcHJldCA7IHNvbGlkYXJpdC9lbnRyYWlkZSA7IGFuaW1hdGlvbiBldCB2aWUgZGUgcXVhcnRpZXIuIElsIHNlcmEgcG9zc2libGUgbGUgam91ciBtbWUgZGUgcmFqb3V0ZXIgdW5lIHRobWF0aXF1ZSBzaSB2b3VzIGxlIHNvdWhhaXRlei4gCkl0J3Mgbm90IHRoYXQgeW91IGJhbmlzaCBMTSwgeW91IGp1c3QgbGVhcm4gdG8gd29yayB3aXRoIGNvbmZpZGVuY2UgYW5kIHZ1bG5lcmFiaWxpdHkgd2l0aCB0aGUgbGl0dGxlIG11cmRlcmVyIHN0aWxsIHRoZXJlIG9uIHlvdXIgc2hvdWxkZXIgd2hpc3BlcmluZy4gRXZlbnR1YWxseSB5b3UgYWRhcHQgdG8gdGhlIHZvaWNlIGJlaW5nIHRoZXJlIGFuZCBqdXN0IG5hdHVyYWxseSBpZ25vcmUgaXQgICBsaWtlIGxpdmluZyBuZXh0IHRvIHJhaWxyb2FkIHRyYWNrczsgZXZlbnR1YWxseSB5b3UgZG9uJ3QgZXZlbiBub3RpY2UgdGhlIHRyYWlucy5JdCdzIGEgbWF0dGVyIG9mIHByYWN0aWNlLCBhbmQgYSBtYXR0ZXIgb2YgY2hvaWNlLiBZb3UgYXJlIHRoZSBvd25lci9vcGVyYXRvciBvZiB0aGUgYnJhaW4gYW5kIGJvZHkuIAonJ0lmIGl0IGhlbHBzIG90aGVycywgdGhhdCBoZWxwcyBtZSwnJyBoZSBzYWlkIHRoaXMgd2Vlay4gJydUaGF0IGhlbHBzIGxpa2UgaGVsbC4nJyBUSEUgTlNXIE9mZmljZSBvZiB0aGUgRGlyZWN0b3Igb2YgUHVibGljIFByb3NlY3V0aW9ucyByZXZpZXdlZCBpdHMgaGFuZGxpbmcgb2YgYSBjb21taXR0YWwgaGVhcmluZyBpbnRvIGNoaWxkIHNleCBhbGxlZ2F0aW9ucyBhZ2FpbnN0IEZhdGhlciBQZXRlciBCcm9jayBpbiAyMDA5LCBhZnRlciBjb21wbGFpbnRzIGJ5IEpvaG4gYW5kIFBhdWwgUGFybWV0ZXIuIApIeWF0dCBSZWdlbmN5IENob25ncWluZyBmZWF0dXJlcyBhIHZhcmlldHkgb2YgaW5ub3ZhdGl2ZSByZXN0YXVyYW50cyBhbmQgYmFycyBvZmZlcmluZyBhdXRoZW50aWMgY3Vpc2luZSBhbmQgdmlicmFudCBlbnRlcnRhaW5tZW50LiBNYXJrZXQgQ2FmZSBpcyBhbiBhbGwgZGF5IGRpbmluZyBidWZmZXQgcmVzdGF1cmFudCBmZWF0dXJpbmcgZm91ciBpbnRlcmFjdGl2ZSBzaG93IGtpdGNoZW5zIGFuZCBhIGJldmVyYWdlIGJhciwgb2ZmZXJpbmcgdGhlIGZyZXNoZXN0IHByb2R1Y3RzIHdpdGggbGl2ZWx5IHByZXBhcmF0aW9uIGZvciBicmVha2Zhc3QsIGx1bmNoIGFuZCBkaW5uZXIuICJFYXRpbmcgb3V0IG9mIHRoZSBwYW4sIG9mZiB0aGUgZ3JpbGwgYW5kIG91dCBvZiB0aGUgd29rIiBpcyB0aGUgYmVzdCBkZXNjcmlwdGlvbiBvZiB0aGUgcmVzdGF1cmFudCdzIGNvbmNlcHQsIHByb3ZpZGluZyBndWVzdHMgd2l0aCBhIGN1bGluYXJ5IGV4cGVyaWVuY2Ugb2YgYSBidXN5IGZvb2QgbWFya2V0LgpIZXJlJ3MgdGhlIGJvdHRvbSBsaW5lOiBBY2NvcmRpbmcgdG8gdGhlIHByaW1ldGltZSBkZWxpdmVyaWVzIGNhcHR1cmVkIGJ5IE5pZWxzZW4gZHVyaW5nIHRoZSBmaXJzdCB0d28gd2Vla3Mgb2YgdGhlIDIwMTggMTkgYnJvYWRjYXN0IHNlYXNvbiwgYSBwZXJpb2QgZXh0ZW5kaW5nIGZyb20gU2VwdC4gClRoZXkgd2lsbCB0ZWxsIHlvdSB3aG8gYnV5cyB3aGF0IHR5cGVzIG9mIHByb3BlcnRpZXMgZnJlcXVlbnRseTtleGFtcGxlLCB2YWNhbnQgbG90cywgU0ZSLCBvciBDb21tZXJjaWFsIHByb3BlcnRpZXMuIFRoaXMgZG9lcyBtZWFuIHlvdSBuZWVkIHRvIGRvIHlvdXIgaG9tZXdvcmsgb24geW91ciBvcHBvbmVudHMuIApWaWxsYWluIGNoZWNrcywgSGVybyB0YW5rcyBmb3IgYSBtaW51dGUgYW5kIGJldHMgb3V0ICQxNjAsIHdpdGggJDMxNWlzaCBiZWhpbmQuIFZpbGxhaW4gcXVpY2tseSByYWlzZXMgdG8gJDQ4MCwgZWZmZWN0aXZlbHkgcHV0dGluZyBtZSBhbGwgaW4uIEhlcm8gPz8/CkFjdHVhbGx5IHlvdSBhcmUgYWxsIHdyb25nISBCcml0bmV5IFNwZWFycyBoYXMgYmVlbiBhcm91bmQgZm9yIG92ZXJ0aGlydGVlbiB5ZWFycyBhbmQgaGFzIHNvbGQgb3ZlciAxMDAgbWlsbGlvbiBhbGJ1bXMgd29ybGR3aWRlIGFuZGhhcyBhIGJpZ2dlciBmYW4gYmFzZS4gKFRoZSBCcml0bmV5IEFybXkpLiAKSXQgaXMgYWxsIHRvbyBlYXN5IHRvIGltYWdpbmUgYSB3b3JsZCB3aGVyZSBhIGdvdmVybm1lbnQgc3BvbnNvcmVkIGZvcm0gb2YgImlkZW50aWZpY2F0aW9uIiB3b3VsZCBiZSByZXF1aXJlZCB0byB1c2UgYW55IGZvcm0gb2YgZWxlY3Ryb25pYyBwYXltZW50LiAKWW91IGRvbiBtYWtlIGFzc3VtcHRpb25zLiAKVGhlIHdheSB3ZSB0aGVuIGV4ZWN1dGVkIHdhcyB2ZXJ5IGRlbGliZXJhdGUgYW5kIHRob3VnaHQgdGhyb3VnaC4gRmlyc3Qgb2YgYWxsLCB3ZSBjb21wbGV0ZWx5IHVwZGF0ZWQgb3VyIHRhbGsgdHJhY2sgb3VyIDIgMyBwYWdlIGRvY3VtZW50IHRoYXQgZGVzY3JpYmVzIGluIHZhcmlvdXMgd2F5cyB3aGF0IHdlIGRvLCB3aGF0IHRoZSB1c2UgY2FzZXMgYXJlLCB3aGF0IHRoZSB2YWx1ZSBwcm9wIGlzLCBhbmQgdGhlIGRhdGEgcG9pbnRzIHRoYXQgc3VwcG9ydCBpdC4gV2UgYWxzbyBwdXQgc29tZSBkZWZpbml0aW9ucyBpbiBwbGFjZSBhcyB0byB3aHkgd2UgYXJlIGFuIEFJIGNvbXBhbnkgYW5kIHdoYXQgYXJ0aWZpY2lhbCBlbW90aW9uYWwgaW50ZWxsaWdlbmNlIGlzLiAKTXkgbmFtZSBpcyBGYWJpYW4uIFNvIHRoZXJlIGlzIHRoaXMgZ2lybCBpIGhhdmUgYSBiaWcgY3J1c2ggb24sIChub3QgZGF0aW5nKSBJJ20gbm90IHJlYWR5IHRvIGFzayBoZXIgb3V0IHlldC4gQnV0IGhlciBuYW1lIGlzIEFseXNzYSAuIApBdCBzb21lIHBvaW50IGluIHRoZSBtb3ZpZSBJIHN0YXJ0ZWQgZmVlbGluZyBsaWtlIGl0IHdhcyBsZXNzIHRyeWluZyB0byBiZSBhIHdlbGwgY3JhZnRlZCBtb3ZpZSBhbmQgbW9yZSBhYm91dCB0ZWxsaW5nIGEgbWVzc2FnZSwgd2hldGhlciBvciBub3QgeW91IGFncmVlIHdpdGggdGhlIG1lc3NhZ2UuIEkgYWxzbyB0aG91Z2h0IHRoZSBjaGFyYWN0ZXIgYXJjIG9mIGV0aGFuIGhhd2tlIG5lZWRlZCBtYXliZSA1IDEwIG1vcmUgbWludXRlcyBvZiBzdGV3aW5nIGJlZm9yZSBJIGNvdWxkIHJlYWxseSBiZWxpZXZlIGhpcyBjaGFyYWN0ZXIuCkJlaSBCaW9sZGVuIGJla29tbWUgaWNoIGF1Y2ggc2NobmVsbCBkYXMgR2VmaGwsIGRhc3MgZG9ydCBkaWUgRXNvdGVyaWtlcmRpY2h0ZSAoc28gaW4gUmljaHR1bmcgSW1wZmdlZ25lciwgSGFuZHlzdHJhaGx1bmcpIGhoZXIgaXN0IGFscyBhbmRlcnN3by4gWW91IHdlaWdoIGl0IENPT0tFRC4gV2hlbiBtZWF0IGlzIGNvb2tlZCBhIHBlcmNlbnRhZ2Ugb2YgdGhlIGZhdCBhbmQgd2F0ZXIgaXMgY29va2VkIG91dCBzbyAyLjcgb3ogb2YgdGlsYXBpYSB3aWxsIE5PVCBnaXZlIHlvdSB0aGUgc2FtZSBiZW5lZml0cyBhcyA0IG96LiAKU29tZSBvZiBoZXIgaGl0cyB3ZXJlICJUcnkgQWdhaW4iIGluIDIwMDAsIHdoaWNoIHdlbnQgdG8gbnVtYmVyIG9uZSwgIk1vcmUgVGhhbiBBIFdvbWFuIiBhbmQgIlJvY2sgVGhlIEJvYXQiIGluIDIwMDIsIGFuZCAiTWlzcyBZb3UiIGluIDIwMDMuIFNoZSBoYWQgZml2ZSBoaXRzIG9uIHRoZSB5ZWFyIGVuZCBjaGFydHMuLiAKV2hhdCBpcyBoYXBwZW5pbmcgaXMgdGhlIHByb3BhZ2F0aW9uIG9mIGJhZCBpZGVhcyBpbiB0aGUgYWJzZW5jZSBvZiBjcml0aWNpc20uIFJlbGlnaW9ucyBkbyB0aGUgZXhhY3Qgc2FtZSBzaGl0LiAKSSB0aGluayB5b3UgZnVsbHkgaW50ZW5kIHRvIGhvbm9yIGl0LCBidXQgb25jZSB5b3UgZ2V0IGEgYmlnZ2VyIHBsYWNlLCB5b3VyIG1pbmQgbWF5IGNoYW5nZS4uIApTb21ldGltZXMsIHRob3VnaCwgbGlmZSBpcyB0b28gY3JhenkgZXZlbiBmb3IgdGhlIEluc3RhbnQgUG90IGFuZCB0aGVuIEkgbWFrZSBhIHJlZCBvciB5ZWxsb3cgbGVudGlsIHNvdXAsIHdoaWNoIHRha2VzIGFib3V0IDIwIG1pbnV0ZXMgYW5kIHdoaWxlIEh1Z28gd2lsbCBiZWxseWFjaGUgYWJvdXQgaXQsIGJvdGgga2lkcyB3aWxsIHVzdWFsbHkgZWF0IGl0LiAoT2J2aW91c2x5LCBpdCBoZWxwcyBpZiBJIHNsaWNlIGEgaG90IGRvZyBpbnRvIHRoZSBzb3VwLCBidXQgSSBkb24gYWx3YXlzIGRvIHRoYXQgYmVjYXVzZSBJIGRvbiB3YW50IHRoZW0gdG8gZ2V0IHVzZWQgdG8gaG90IGRvZ3Mgb24gdGhlIHJlZ3VsYXIgYmVjYXVzZSBJIGFtIE1FQU4gYW5kIGFsc28gc29ydCBvZiBzdHVwaWQgc2VlaW5nIGFzIHdlIGxpdmUgaW4gR2VybWFueSBhbmQgdGhleSBhbHJlYWR5IGFyZSB1c2VkIHRvIGVhdGluZyB0aGVtIGFsbCB0aGUgdGltZSBldmVyeXdoZXJlIGdhYWFhYWguKS4gCkVkbW9udG9uIGdpcmwgZ3VpZGUgc2VsbHMgb3V0IG9mIGNvb2tpZXMgaW4gZnJvbnQgb2YgcG90IHNob3Agb24gZmlyc3QgZGF5ClRoZSBteXRoIG9mIHRoZSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyCkl0IGFscmVhZHkgcmVzdHJpY3RzIGN1c3RvbWl6YXRpb24sIHRob3VnaCwgZG9lc24gaXQ/U28gbWFueSBza2lucyBmb3Igd2VhcG9ucyBhbmQgeW91ciBmcmFtZSwgdGhlbiB0aGVyZSB0aGUgb3BlcmF0b3Igc3R1ZmYsIHRoZXJlIGEgbG90IG9mIHN0dWZmIHlvdSBjYW4gZ2V0IHRvIHdpdGhvdXQgcGxhdC4gSSBkb24gdGhpbmsgdGhlIGZpcnN0IGNvbG9yIHBhbGV0dGUgc2hvdWxkIGJlIG9uZSBvZiB0aG9zZSB0aGluZ3MsIGkgdGhpbmsgYSBSR0Igc3lzdGVtIHdvdWxkIGJlIGlkZWFsLiAKKE5vdGUgdGhhdCB0aGVyZSBpcyBhbm90aGVyIHRyaWNrIHdpdGggRklSIGNhbGxlZCBwb2x5cGhhc2UgcmVzYW1wbGluZywgd2hpY2ggY29tYmluZXMgdGhlIEZJUiBmaWx0ZXIgd2l0aCB0aGUgY3ViaWMgcmVzYW1wbGVyIGJ5IHdheSBvZiBtYWtpbmcgbXVsdGlwbGUga2VybmVscyBhdCBmcmFjdGlvbmFsIHByZWNpc2lvbnMuIEJ1dCBJIGNvdWxkbiBmaW5kIGFueSBkb2N1bWVudGF0aW9uIGV4cGxhaW5pbmcgaG93IHRvIGRlc2lnbiB0aGVtIGFuZCBmYWlsZWQgYXQgaXQuKQpJIG92ZXIgYWxsIG9mIGl0IGFuZCBJIGJlIGluIHRoaXMgcGFpbiBmb3IgYSBsb25nIHRpbWUgYW5kIGZpYnJvIHBhaW4gZm9yIHRoZSByZXN0IG9mIG15IGxpZmUgYXQgMjYuIApZb3UgZ290IHRvIGV4ZXJjaXNlLiIgYW5kIHRoZW4gbGF0ZXIgdGhhdCBkYXksICJkbyB5b3Ugd2FudCB0byBnbyBnZXQgbWMgZG9uYWxkcz8iLiAKUGxlYXNlIHN0b3AgYnkgdGhlIG1haW4gcG9zdCBvZmZpY2Ugd2l0aGludGhlIG5leHQgdGhyZWUgZGF5cywgdGhlIG5vdGUgcmVhZC4gCk1ha2VzIHRoZSBlbmQgb2Yga25vd2xlZGdlIG1vcmUgb2J2aW91cyB0aGFuIGxhc3Qgd2Vla2VuZCBncmFkdWF0aW9uIHNwZWVjaCBieSBTYW5kcmEgU290bywgYW4gYXNzb2NpYXRlIHByb2Zlc3NvciBvZiBnZW5kZXIgYW5kIHdvbWVuIHN0dWRpZXMgYXQgb2YgQXJpem9uYS4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0FmdGVyIHRoaXMgaXQgbmV2ZXIgcGVha2VkIG92ZXIgM21iIHdpdGggc2VyaW91cyBpbmNvbnNpc3RlbmNpZXMuLiAKQXMgYSBuZXcgY29uY2VwdCBpbiBwb2tlciwgdGhlIElyaXNoIEFtYXRldXIgUG9rZXIgTGVhZ3VlIGlzIGEgY2hlYXAgd2F5IHRvIHNwZW5kIGFuIGV2ZW5pbmcgd2l0aG91dCBmZWFyIG9mIGxvc2luZyB5b3VyIGhvdXNlLiBXaXRoIGZyZWUgZW50cnkgYW5kIGEgbWVtYmVyc2hpcCBwZXIgZ2FtZSwgdGhlIElyaXNoIEFtYXRldXIgUG9rZXIgTGVhZ3VlIGlzIGFpbWVkIGF0IGFsbCBza2lsbCBsZXZlbHMsIGZyb20gdGhvc2Ugd2FudGluZyB0byBsZWFybiB0byB3aW5uaW5nIHRoZSBsZWFndWUuIApUaGF0IGJyaW5ncyB1cyB0byBhbm90aGVyIHNhZCByZWFsaXphdGlvbjogRXZlbiBpZiB0aGUgQ2F2cyBob2xkIG9uIHRvIExvdmUgYW5kIHRyeSB0byBjb21wZXRlLCB3ZSB3b3VsZG4ndCBiZSB0aGUgbGVhc3QgYml0IHN1cnByaXNlZCBpZiB0aGV5IHdlcmUgYWJsZSB0byBrZWVwIHRoZWlyIHRvcCBwaWNrIGFueXdheS4gWWVzLCBpdCdzIHRoYXQgYmxlYWsgYWxyZWFkeS4gClRoZSBvbGRlciBndXkgY29udGludWVzIGRyaW5raW5nICgkMTQwIHRhYiwgbm90ZSB0aGF0IEkgc3RhbmRpbmcgYXQgdGhlaXIgbWFpbiBjYXNoIHJlZ2lzdGVyKSBhbmQgc3RhcnRzIGZsaXJ0aW5nIHdpdGggdGhlIHdhaXRyZXNzLCBmYWlscyB0byBnZXQgaGVyIG51bWJlciwgcGF5cyBpbiBleGFjdCBjaGFuZ2Ugd2l0aG91dCB0aXBwaW5nLCBhbmQgbGVhdmVzLgpFbGRlcnMgWy5dIFNoZSBoYXMgYWxzbyBzcG9rZW4gaW4gZmF2b3Igb2Ygc3R1ZHlpbmcgdGhlIGxlZ2FsaXphdGlvbiBvZiBkcnVncyBhbmQgdGhlIGRpc3RyaWJ1dGlvbiBvZiBjb250cmFjZXB0aXZlcyBpbiBwdWJsaWMgc2Nob29scyBhbmQgaGFzIGNyaXRpY2l6ZWQgdGhlIENhdGhvbGljIENodXJjaCBmb3IgaXRzIG9wcG9zaXRpb24gdG8gYWJvcnRpb24sIGRyYXdpbmcgaW50ZW5zZSBmaXJlIGZyb20gY29uc2VydmF0aXZlcyBvbiBDYXBpdG9sIEhpbGwgYW5kIGVsc2V3aGVyZS4uIApHZXR0eSdzIEZvcnVtIGZvciBFcXVpbmUgTnV0cml0aW9uCldoZW4gaGUgc2FuZyAiSSdtIEFscmlnaHQsIiB0aGUgZGVidCBoZSBvd2VkIHRvIFdhcnJlbiBaZXZvbiB3YXMgb2J2aW91cywgYW5kIHRoZSBzb25nIHdhcyBoYXJkbHkgY291bnRyeSAoaGUgZXZlbiBzbGlwcGVkIGludG8gYSBicmllZiBiaXQgb2YgTWFydmluIEdheWUncyAiTGV0J3MgR2V0IEl0IE9uLiIpCkkgaGFkIHBsYXllZCB0aGF0IGhhbmQgYWxtb3N0IHRoZSBleGFjdCBzYW1lIGFzIHRoZSBwb2NrZXQgQSdzIEkgaGFkIGVhcmxpZXIgaW4gdGhlIG5pZ2h0IHNvIGlmIGhlIHdhcyBwYXlpbmcgYW55IGF0dGVudGlvbiBhdCBhbGwgd291bGQgaGF2ZSBwdXQgbWUgb24gYSBoYW5kLi4gCklubmVuYXJjaGl0ZWt0IFRvbnkgQ2hpIEFzc29jaWF0ZXMgdmVyYmluZGV0IGdla29ubnQgdHJhZGl0aW9uZWxsZSBhc2lhdGlzY2hlIEVsZW1lbnRlIG1pdCBkZW0gTGViZW5zZ2VmaGwgZGVzIG5ldWVuIENoaW5hIi4gClRvIHdpbiB0aGUgcG90LiBJIG11c3QgRGlzYWdyZWUsIElmIHlvdSBwaWNrZWQgMTAwIHBva2VyIHBsYXllcnMgYXQgcmFuZG9tIGFuZCBhc2tlZCB0aGVtIGFib3V0IHRoZSBvYmplY3RpdmUgb2YgcG9rZXIsIG1vc3Qgd291bGQgc2F5IHNvbWV0aGluZyBhYm91dCB3aW5uaW5nIHRoZSBwb3QsIGJ1dCB0aGV5IGNvdWxkbid0IGJlIGZ1cnRoZXIgZnJvbSB0aGUgdHJ1dGguIApVcCB0byA3NSUgb2ZmIHRoZSBCaWdnZXJQb2NrZXRzIGJvb2sgc3RvcmUuIApJdCdzIHBhcnQgb2YgdGhlIHJlYXNvbiBzZWl6dXJlcyBhcmUgc28gdW5zZXR0bGluZywgc2VlaW5nIHNvbWVvbmUgbW92ZSBpbiBzdWNoIGFuIHVubmF0dXJhbCBmYXNoaW9uIGlzIGltbWVkaWF0ZWx5IHJlY29nbmlzYWJsZSBhcyBzb21lb25lJ3MgYm9keSAnbWFsZnVuY3Rpb25pbmcnIGZvciB3YW50IG9mIGEgYmV0dGVyIHdvcmQuIEl0IGxvb2tzIG5vdGhpbmcgbGlrZSB0aGlzIGNvb3JkaW5hdGVkIHNoaXZlci9zcGFzbS4gQWxsIEkgc2VlIGlzIHNvbWVvbmUgc2hha2luZyB0aGVpciBvd24gbGVncyBhbmQgdG9yc28sIGFzIHRoZSBjYW1lcmEgcGFucyBiYWNrIHVwIHlvdSBldmVuIHNlZSBoZXIgbGVmdCBzaG91bGRlciB0ZW5zZSBhbmQgbW92ZSBpbiBvcmRlciB0byBnYWluIG1vcmUgbGV2ZXJhZ2UgZHVlIHRvIHRoZSBlZmZvcnQgdGhhdCBpcyByZXF1aXJlZCB0byBkbyB0aGF0LiAKU3RhcnQgd2l0aCB0aGUgYmFzaWMuIApMZSAxNyBtYXJzIDIwMDgsIGxhIGJhbnF1ZSBkJ2ludmVzdGlzc2VtZW50IEJlYXIgU3Rlcm5zIGVzdCByYWNoZXRlIHBhciBKUE1vcmdhbiBwb3VyIDIzNiBtaWxsaW9ucyBkZSBkb2xsYXJzLCBhcHJzIHF1ZSBsYSBGZWQgYWl0IG9jdHJveSBwbHVzIGRlIDI5IG1pbGxpYXJkcyBkZSBkb2xsYXJzIGRlIHBydCBwb3VyIHNhdXZlciBsJ3RhYmxpc3NlbWVudCBkZSBsYSBmYWlsbGl0ZS4KLiBsaWZlIHRocmVhdGVuaW5nIHNpZGUgZWZmZWN0cyBjYW4gb2NjdXIgaWYgeW91IHRha2UgQWRkZXJhbGwgYmVmb3JlIHRoZSBNQU8gaW5oaWJpdG9yIGhhcyAuIGNoZXcsIGJyZWFrLCBvciBvcGVuIGFuIC4gb3Igb3BlbiBhbiBleHRlbmRlZCByZWxlYXNlIEFkZGVyYWxsIGNhcHN1bGUuCk1pbGFuIEx1Y2ljIHBlcnBsZXhlZCBieSB0aGUgZ29hbCBzY29yaW5nIGN1cnNlIG9mIDIwMTgKV2hpbGUgbXVja190aGVfZm9kcyBwb2ludCBiZWxvdyBhYm91dCB3YW50aW5nIHRvIGJ1aWxkIGEgYm9hcmQgZm9yIHRoZSBNQyB0dXJuIGlzIHZhbGlkLCBjdXR0aW5nIFRydWVzaWx2ZXIgd291bGQgYmUgYSBmYWxzZSBlY29ub215ICAgaXQgaGVscHMgdG8gbWFpbnRhaW4geW91ciBib2FyZCwgYW5kIHByb3RlY3QgeW91ciB0b2tlbnMsIGJ5IHN3aWZ0bHkgZGVhbGluZyB3aXRoIHRoaW5ncyBsaWtlIEZsYW1ld2FrZXIgYW5kIEltcCBHYW5nIEJvc3MgKGFtb25nc3QgbWFueSBvdGhlcnMpLi4gCk1pbGZvcmRIYXZlbiAgMSBwb2ludCAgc3VibWl0dGVkIDUgZGF5cyBhZ28KQnV0IGl0IGRvZXMgdW5kZXJsaW5lIHRoZSBpbXBvcnRhbmNlIG9mIGFjcXVpcmluZyBzb21lIHNlbGYgcmVzcGVjdC4gCkVsIFBpbm8gaXMgcHJldHR5IGdvb2QgZm9vZCB3aXNlLCBidXQgbWFueSBwZW9wbGUgaW4gdGhlIGFkb3B0ZWUgY29tbXVuaXR5IGF2b2lkIGhpbSBkdWUgdG8gaGlzIHRveGljIHBlcnNvbmFsaXR5LiAKVGhlbiBpZiB5b3UgZGVwb3NpdCAkNTAwIHRoZW4geW91IHdpbGwgZ2V0ICQ1MDAgRXh0cmEgYnV0IHlvdSBoYXZlIHRvIHBsYXkgY2VydGFpbiByYWtlIGhhbmQgdG8gY2xlYXIgdGhlIGJvbnVzIHRoZW4geW91IHdpbGwgYWJsZSB0byB3aXRoZHJhdyB0aGUgYm9udXMuIE9ubGluZSBnYW1pbmcgaXMgcHJpbWFyaWx5IG1vbml0b3JlZCB1bmRlciBUaGUgUHVibGljIEdhbWJsaW5nIEFjdCwxODY3LiAKUHJlbWlyZSBjb25zcXVlbmNlIGltbWRpYXRlOiBsYSBwYW5pcXVlIHN1ciBsZSBtYXJjaCBkdSB0cmF2YWlsIGRlcyB0cmFkZXJzIGV0IGxhIGRpbWludXRpb24gZGUgbGV1ciBjb25zaWRyYWJsZSBwb3V2b2lyIGQnYWNoYXQuICJMZXMgY2hvc2VzIG9udCBjaGFuZyBkZXB1aXMgbCd0IGRlcm5pZXIiLCB0bW9pZ25lIFlhbm4gSC4sIHRyYWRlciBnIGRlIDI2IGFucywgaW50ZXJyb2cgc3VyIGxlIHNpdGUgZGVzIE9ic2VydmF0ZXVycyBkZSBGUkFOQ0UgMjQuIApBbmQgd2l0aCB0aGUgd2F5IHRoZSBnYW1lIGlzIGdvaW5nIGFuZCBiZWluZyBwbGF5ZWQsIGV2ZXJ5Ym9keSBuZWVkcyBvbmUgb3IgdHdvIGd1eXMgd2hvIGNhbiBkbyB3aGF0IEkgY2FuIGRvLi4gCkl0IHdhcyBoaXMgMTE0dGggZmxpZ2h0LCB3aGljaCB3YXMgcXVpdGUgYWxsb3QsIGJ1dCBub3QgZXZpZGVudGx5IGVub3VnaC4gCkhlbmNlLCBkb2luZyBhIGxpdHRsZSByZXNlYXJjaCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGZpbmQgb3V0IHdoZXRoZXIgeW91IGFyZSBhIHBlcmZlY3QgZml0IGluIHRoZSBvbmxpbmUgcG9rZXIgc2l0ZSBvciB1IHNob3VsZCBkbyBtb3JlIHJlc2VhcmNoIG9uIG90aGVyIG9ubGluZSBwb2tlciBzaXRlcyB3aGljaCBjYW4gbWF0Y2ggeW91ciByZXF1aXJlbWVudHMuLiAKTWFjaGVuIFNpZSBkb2NoIGVpbmZhY2ggZWlubWFsIGZvbGdlbmRlczogd2hyZW5kIFNpZSBmb2xnZW5kZXMgbGVzZW4sIG5vdGllcmVuIFNpZSBhbSBSYW5kZSBkaWUgS29zdGVuIGZyIHByb3ByaWV0cmUgTWl0dGVsLCBkaWUgU2llIGthdWZlbiBtc3N0ZW4sIHdlbm4gU2llIGRpZXNlbiBUZXh0IG5pY2h0IGxlc2VuIHdyZGVuLiBVbmQgYW0gRW5kZSByZWNobmVuIFNpZSBhbGxlcyB6dXNhbW1lbi4KVGhlcmVmb3JlIGdldHRpbmcgYSBmZXcgd29ya2VyIGtpbGxzIG9yIGEgcXVlZW4gYW5kIHByZXZlbnRpbmcgbWluaW5nIGJlZm9yZSBpdCBkaWVzIGdpdmVzIHlvdSBhIGVjb25vbWljIGFkdmFudGFnZSBhcyB3ZWxsIGFzIGZvcmNpbmcgdGhlIGVuZW15IHRvIHVzZSB0aGVpciBtaWNybyBhbmQgYXR0ZW50aW9uIHRvIGRlYWwgd2l0aCBpdC4gSG93ZXZlciwgaWYgaXQgZmxpZXMgc3RyYWlnaHQgaW50byBhIHNwb3JlIG9yIHR1cnJldCBhbmQgZGllcyB0aGVuIGl0IGRlZmluaXRlbHkgbm90IHdvcnRoIGl0ICAgeW91IGRlbGF5ZWQgeW91ciBWaWtpbmcvIG1lZGl2YWMgLCB0aHJvd24gYXdheSAxNTAgbWluZXJhbHMgYW5kIGdhcyBhbmQgeW91ciBvcHBvbmVudCB3YXNuIGRpc3RyYWN0ZWQuIFdoYXQgd291bGQgYmUgYmVzdCBpcyBpZiB5b3UgY2FuIGZseSBpdCBpbiwgZ2V0IHNvbWUga2lsbHMsIHRoZW4gZ2V0IGl0IG91dCBhZ2FpbiB0byBkbyBkYW1hZ2UgYSBzZWNvbmQgdGltZS4gCkFsZGVyZXogIDQxIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkFnYWluc3QgYmFkIHBsYXllcnMsIG9mdGVuIHRpbWVzIHlvdSB3aWxsIGdldCBjYWxsZWQgYW5kIGhhdmUgdG8gdGFrZSBhIGZsb3AgaW4gYSBiYWQgc2l0dWF0aW9uIHdoZXJlIGl0IGlzIGxpa2VseSB5b3Ugd2lsbCBoYXZlIHRvIHBsYXkgZm9yIGFsbCB5b3VyIGNoaXBzLiAKSSBub3cgcmVhbGl6ZSB0aGF0IHRoZXJlIGlzIGEgaHVnZSBkaWZmZXJlbmNlIGJldHdlZW4gbXkgZ2FtZSBub3cgYW5kIG15IGdhbWUgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhci4gSSBsZWFybmVkIGEgbG90IGFib3V0IHZhbHVlIGJldHRpbmcgdGhpbmx5IGFuZCBib2FyZCB0ZXh0dXJlcy4gSSBhbHNvIGRldmVsb3BlZCBpbnNpZ2h0cyBvbiBzb2xpZCBjb250aW51YXRpb24gYmV0dGluZyBzdHJhdGVnaWVzIGFuZCBHVE8gcGxheS4uIApVbklkbnRmZEZseW5nUmRkdHIgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkVzcGVjaWFsbHkgaWYgcGVvcGxlIGFyZSBwcmltYXJpbHkgY29uY2VybmVkIHdpdGggdGhlIFJ1YmVsbGEgcG9ydGlvbiBvZiB0aGF0IHZhY2NpbmF0aW9uLiAKNzB0aCBTdC4gOyA0LCAxOSwgMzYsIDExNyBhbmQgMTYwIEUuIApXZSB3ZXJlIHN0YW5kaW5nIHRoZXJlIGl0IHdhcyB2ZXJ5IGV4Y2l0aW5nIHRvIGhhdmUgYWxsIHRob3NlIG9mZmVycyBjb21pbmcgaW4sIGJ1dCB3ZSBqdXN0IGtuZXcgdGhhdCBKaW0gd2FzIG1vcmUgdGhlIGRpcmVjdGlvbiB3ZSB3YW50ZWQgdG8gdGFrZSBpdCwgTXMuIE1hY0tlbnppZSBzYXlzLiBDb3VsZCBzZWUgd2hhdCB0aGUgbW9kZWwgd2FzIGFuZCBoZSBzZWVtZWQgdG8gcmVhbGx5IGdldCBpdC4gCkkganVzdCBrbmV3IEkgY291bGRuJ3QgZ2l2ZSB0aGlzIGRvZyBiYWNrIHRvIHRoZW0uIApDZSBmdXQgbGUgY2FzLCBhdSBkZWwgZHUgbmNlc3NhaXJlLCBjZXR0ZSBmb2lzIGNpLCBjYXIgVGhpZXJyeSBEZWxhYnJlIChwaG90byksIGZhaXNldXIgZGUgcGFpbiBkZSBtb2lucyBlbiBtb2lucyBjbGFuZGVzdGluIChpbCBmYWl0IGR1IHBhaW4gYXZlYyB1biBub3JtZSBpbnZlc3Rpc3NlbWVudCBldCBkZSBsYSBwZXJzdnJhbmNlIGRlcHVpcyAxMiBhbnMgY2hleiBsdWkpLCBhdmFpdCBwcnZlbnUgc2VzIGFtaXMgRmFjZWJvb2sgZGVwdWlzIGxvbmd0ZW1wcyBkZSBzYSBwYXJ0aWNpcGF0aW9uLiBMZSBwYWluIGVzdCBwb3VyIG1vaSB1bmUgcGFzc2lvbiBwZXJzb25uZWxsZSBldCBwcm9mZXNzaW9ubmVsbGUgZXQgaidhaSBiZWF1Y291cCAgY3JpcmUgZGVzc3VzIG1haXMgcGx1cyBqJ2FjY3VtdWxlIGQnaWRlcyBldCBkZSByZmxleGlvbnMsIHBsdXMgY2VsYSBzZSBjb21wbGlxdWUgZXQgbW9pbnMgaidjcmlzICEgQWxvcnMsIGVuIGF0dGVuZGFudCwgaidhaSBldSBsZSBib25oZXVyIGQnY291dGVyIFRoaWVycnkgRGVsYWJyZSByYWNvbnRlciBhdmVjIGJlYXVjb3VwIGQnbW90aW9uIHNhIHBsb25nZSBkYW5zIGwndW5pdmVycyBkdSBwYWluLCB0b3V0IGNlIHF1J2lsIGx1aSBkb25uZSBldCB0b3V0IGNlIHF1J2lsIHJlb2l0IGVuIHJldG91ci4gCkNWIGlzIHdoYXQgcGxheWVycyBhcmUgcmVhbGx5IHRhbGtpbmcgYWJvdXQgd2hlbiB0aGV5IHRhbGsgYWJvdXQgc3dpbmdpbmVzcyAoaG93IGxpa2VseSBpcyBpdCB0aGF0IEkgZ28gb24gYSBzdXN0YWluZWQgZG93bnN3aW5nIHdoZXJlIEkgY29udGludWUgdG8gbG9zZSBkZXNwaXRlIG15IGVkZ2U/KS4gCkZvciBpbnN0YW5jZSwgbGVhZnkgZ3JlZW5zIGxpa2Uga2FsZSwgbGV0dHVjZSBhbmQgc3BpbmFjaCByZXF1aXJlIGxlc3MgbGlnaHQgdGhhbiB0b21hdG9lcyBvciBwZXBwZXJzLkFydGh1ciBhbHNvIGFkdmlzZXMgbm92aWNlIGdhcmRlbmVycyB0byBiZSBjYXV0aW91cyBhYm91dCBzb21lIG9mIHRoZSB0cmVuZHMgdGhleSBtYXkgc2VlIG9ubGluZS4gaW4gcGFsbGV0cyB3YXMgYWxsIG92ZXIgc29jaWFsIG1lZGlhLCBidXQgeW91IG5lZWQgdG8gdGhpbmsgYWJvdXQgdGhlIHByb2Nlc3MuIE1hbnkgcGFsbGV0cyBoYXZlIGJlZW4gZnVtaWdhdGVkIGFuZCBzcHJheWVkIHdpdGggY2hlbWljYWxzLiAKR29pbmdPbkFEYXRlICA1IHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvCldhZ2Fza3ksIDI5LCBsaXZlcyB3aXRoIGhlciBodXNiYW5kIEphc29uLCAzMiwgYW5kIHRoZWlyIHR3byB5b3VuZyBjaGlsZHJlbiBhZ2VzIDkgYW5kIDcsIGluIGEgdGhyZWUgYmVkcm9vbSBmYW1pbHkgaG9tZSBpbiBIZW5kZXJzb24sIE5ldmFkYS4gQmlsbC4KSXQgd2FzIGFsc28gaW5jcmVkaWJseSBwb3B1bGFyIHRvIGhhdmUgbWF0Y2hpbmcgb3V0Zml0cyBmb3IgY291cGxlcyAodGhpbmsgaGltIGFuZCBoZXIgb3V0Zml0cy4pIFdhbGtpbmcgYXJvdW5kIFNlb3VsIEkgY2FuIHRlbGwgeW91IHRoZSBhbW91bnQgb2YgcHJvZmFuaXR5IEkgc2VlbiB3cml0dGVuIG9uIGNsb3RoaW5nIGluIEVuZ2xpc2guIApXaHk/IEJlY2F1c2UgZXZlbiB0aG91Z2ggeW91IG5vdCBhbHdheXMgZ29pbmcgdG8gZ2V0IHlvdXIgcHJlZmVycmVkIG91dGNvbWUsIG90aGVyIG5ldyBvcHBvcnR1bml0aWVzIGFyZSBzdGlsbCBvcGVuIHRvIHlvdS4gClNtaXRoZXJzLCBCQyBpbiB0aGUgQnVsa2xleSBWYWxsZXkgd291bGQgYmUgYSBnb29kIHNwb3QuIFRoZXJlIGlzIHZlcnkgZmVydGlsZSBhZ3JpY3VsdHVyYWwgbGFuZCB1cCB0aGVyZSwgd2l0aCBhIGRlY2VudCBtaWNyb2NsaW1hdGUuIEl0IGluIHRoZSBtb3VudGFpbnMgc28geW91IGhhdmUgYWNjZXNzIHRvIGZyZXNoIHdhdGVyIGZvciB0aGUgbW9zdCBwYXJ0LiAKSSBjYW4gZXZlbiBnaXZlIGEgbnVtYmVyIG9mIHRoZSBhbW91bnQgb2YgY3VzdG9tZXJzIHdlIGhhdmUgdGhhdCB3ZXJlIGJlaW5nIHN0cm9uZyBhcm1lZCBpbnRvIHBhbmVsIHJlcGxhY2VtZW50cyBieSBjb21wZXRpdGlvbiBhbmQgdGhlIEZEIGR1ZSB0byB0aGluZ3MgdGhhdCBubyBvbmUgY291bGQgZml4ICAgZmFsc2UgYWxhcm1zIGJlaW5nIHRoZSBiaWdnZXN0IG9mZmVuZGVyLiBCdXQgdGhlIHRoaW5nIGlzLCBmYWxzZSBhbGFybXMgYXJlIHZpcnR1YWxseSBORVZFUiBkdWUgdG8gYSBmYXVsdHkgcGFuZWwgYW5kIGxpc3RpbmcgaGFuZ2luZyBkZXRlY3RvcnMgYXMgYSByZWFzb24gKG5vIG1hdHRlciBob3cgc21hbGwpIGlzIGdvaW5nIHRvIGdldCB5b3UgaW50byB0cm91YmxlLiAKSHRwb0h6d2dCdXV1IHUKSnVzdCBDYXVzZSA0IEhpdHMgWGJveCBHYW1lIFBhc3MgT25seSBUaHJlZSBNb250aHMgQWZ0ZXIgUmVsZWFzZURlc3BpdGUgYWxsIG9mIHRoZSBleHBsb3Npb25zIGluIEF2YWxhbmNoZSBTdHVkaW9zJyBvcGVuIHdvcmxkIGNoYW9zIHNpbXVsYXRvciwgSnVzdCBDYXVzZSA0IGRpZCBub3Qgc2V0IHRoZSB3b3JsZCBvbiBmaXJlIHdoZW4gaXQgbGF1bmNoZWQgbGFzdCB5ZWFyIG9uIERlY2VtYmVyIDQuIE5vdywgbGVzcyB0aGFuIDEwMCBkYXlzIGxhdGVyLCBpdCdzIGZyZWUgZm9yIEdhbWUgUGFzcyBzdWJzY3JpYmVycyB0byBkb3dubG9hZCBhbmQgcGxheSBvbiBYYm94IE9uZS4gTWljcm9zb2Z0IGFubm91bmNlZCB0aGUgZ2FtZSB3b3VsZCBiZSB0aGUgbGF0ZXN0IHRvIGFycml2ZSBvbiBpdHMgTmV0ZmxpeCBsaWtlIHNlcnZpY2UgdG9kYXkgYWxvbmdzaWRlIDIwMTIncyBMZWdvIEJhdG1hbiAyLiAKV29ya291dHMgYWxzbyBjYW4gaGVscCB5b3UgdG8gbGVuZ3RoZW4geW91ciBzdHJpZGUsIHdoaWNoIGFsbG93cyB5b3UgdG8gcnVuIGZhc3RlciBvdmVyIGRpc3RhbmNlLiAKU28gbGFuZ3VhZ2UgcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uLiAKVGhhdCBpc24ndCB0aGUgb25seSB0aGluZyB0aG91Z2guIFlvdSBuZWVkIHRvIGdldCBidXN5IGFuZCBnZXQgdG8gd29yayBiZWNhdXNlIFlPVSdWRSBCRUVOIFNUSUZGRUQgd2l0aCB0aGUgYmlsbCBmb3IgdGhlIG1vbmV5IEkgUFJJTlRFRCBVUCB0byBnZXQgWU9VIFRPIERPIHdoYXQgSSBXQU5URUQuCkkgZG8gd2FudCB0byBydWcgc3dlZXAsIG5vdCBvdXQgb2Ygd2FudGluZyB0bywgYnV0IG91dCBvZiBub3Qgd2FudGluZyB0byBmaWdodCB3aXRoIG15IHBhcnRuZXJzIG11bSBhbmQgdGhlbSBwb3RlbnRpYWxseSBmYWxsIG91dCB3aGVuIGhlIGhhcyBubyBvbmUgaGVyZS4gTXkgbW9yYWxzIGFuZCB2YWx1ZXMgYXJlIHZlcnkgaGlnaCwgaWYgc2hlIHdhcyBhbnlvbmUgZWxzZSBzaGUgd291bGQgb2YgYmVlbiBraWNrZWQgb3V0IHRoZSBob3VzZSB0aGUgbW9tZW50IHNoZSBzYWlkIHNvbWV0aGluZywgYnV0IEkganVzdCB0cnlpbmcgdG8gYmUgcmVzcGVjdGZ1bCBhbmQgZG8gdGhlIHJpZ2h0IHRoaW5nIGV2ZW4gaWYgc2hlIGNob29zZXMgbm90IHRvLiBJdCBhIHJlYWxseSBoYXJkIHNpdHVhdGlvbiBmb3IgbWUsIEkga25vdyBob3cgbG9uZWx5IG15IHBhcnRuZXIgaXMgbm90IGJlaW5nIGluIHRoZSBVSyB3aXRoIGhpcyBmcmllbmRzIGFuZCBmYW1pbHkuCk1pbmQgLyBtb29kIGVuaGFuY2VycyBhcmUgY2VydGFpbmx5IGEgYmlnIGZhY3Rvci4gRm9yIGEgdXN1YWwgZGF5IEkgYWx3YXlzIGVuam95IG11c2ljIGZvciBhIGJpdCB3aGlsZSB0aGUgbW9ybmluZyBkb3NlIG9mIGNhZmZlaW5lIGlzIGluIGVmZmVjdC4gQnV0IG9jY2FzaW9uYWxseSAob25jZSBldmVyeSBmZXcgbW9udGhzIG9yIHNvKSBteSB3aWZlIGFuZCBJIGRvIHdoYXQgd2UgdGFrZW4gdG8gcmVmZXJyaW5nIHRvIGFzIHBhcmtpbmcgbXVzaWMuIEEgY291cGxlIGhpdHMgb2YgYWNpZCBhbmQgc29tZSBNRE1BIHR1cm5zIG11c2ljIGludG8gYW4gZXhwZXJpZW5jZSB0aGF0IGNhbiBhZGVxdWF0ZWx5IGJlIGRlc2NyaWJlLiBXZSBxdWV1ZSB1cCBzb21lIG1vcmUgb3IgZXBpYyB0eXBlIG11c2ljIGFuZCBpdCBsaWtlIGZ1Y2tpbiBEaXNuZXlsYW5kLgpJdCBoZWxwcyBtYWludGFpbiBub3JtYWwgbXVzY2xlIGFuZCBuZXJ2ZSBmdW5jdGlvbiwga2VlcHMgaGVhcnQgcmh5dGhtIHN0ZWFkeSwgc3VwcG9ydHMgYSBoZWFsdGh5IGltbXVuZSBzeXN0ZW0sIGFuZCBrZWVwcyBib25lcyBzdHJvbmcuIApXaGF0IGV2ZXJ5Ym9keSBvdWdodCB0byBrbm93IGFib3V0IGtub3dsZWRnZSBiYXNlIHNvZnR3YXJlCkl0cyBzdGF0dXRvcnkgcmFwZSBubyBtYXR0ZXIgd2hhdCB3YXkgdGhlIGdlbmRlcnMgb2YgdGhlIGFkdWx0IGFuZCBjaGlsZCBoYXBwZW4gdG8gZmFsbC4gClRoZSBsb2NhbCBidW1wIGFuZCBzcGlrZSBwb3dlcmhvdXNlIHJvbGxlZCB0aHJvdWdoIHRoZSB0aHJlZSBkYXkgY2hhbXBpb25zaGlwIHdpdGhvdXQgZHJvcHBpbmcgYSBzZXQgYW5kIGR1cmluZyB0aGVpciBzdG9yaWVkIHNlYXNvbiBydW4gcmFja2VkIHVwIGEgNTUgMiBtYXRjaCByZWNvcmQgKDEyMCA4IGluIHNldHMpLgooU2VlIDEwIHRoaW5ncyB0byBkbyBpbiBMYXMgVmVnYXMuKS4gCkkgY2FuIG5vdCBjb3BlIHdpdGggaGVyIGlnbm9yYW5jZS4gCk5vIHNwYW0sIGZ1bmRyYWlzaW5nLCB2b3RlIGRyaXZlcywgc3VydmV5cyBvciBzdHVkaWVzOiBQbGVhc2UgcmVhZCBSZWRkaXQgc2VsZiBwcm9tb3Rpb24gcnVsZXMgYmVmb3JlIHBvc3RpbmcgeW91ciBvd24gY29udGVudC4gUmVhZCBtb3JlIGFib3V0IGZ1bmRyYWlzaW5nLCBzdXJ2ZXlzIGFuZCBzdHVkaWVzIGhlcmUuCk1lbWJlcnNoaXAgaW4gdGhlIEFQUCBtZWFucyB0aGF0IHRoZSBwaWVyY2VyIG1lZXRzIHJlcXVpcmVtZW50cyBmb3Igc3RlcmlsaXR5IGFuZCBhZXNlcHRpYyB0ZWNobmlxdWUgYW5kIHVzZXMgaW1wbGFudCBncmFkZSBqZXdlbHJ5LiAKSXQncyBhbGwgaW4gdGhlIHNwaW4uIFRoZSBzcGluIG9mIHRoZSBzdGF0aXN0aWNzIGFuZCBudW1iZXJzLiBBbmQgaXQncyBlYXN5IHRvIGdldCBjb25mdXNlZC4gTGV0IG1lIHRyeSB0byBjbGVhciB0aGluZ3MgdXAuCkkgc3dpdGNoZWQgdG8gc3RlZWwgcmVlbHMuIFRoZXkgdGFrZSBhIGxpdHRsZSBtb3JlIHByYWN0aWNlIHRvIGxlYXJuIHRvIGxvYWQgYnV0IHRoZXkgZG9uIHJlbHkgb24gdGhlIGZpbG0gc2xpZGluZyBhZ2FpbnN0IGFueXRoaW5nLiBQbHVzIHdoZW4geW91IGRvbmUgaWYgeW91IHR1ZyB0aGUgZW5kIG9mIHRoZSBmaWxtIGluIG91dCBhIGxpdHRsZSBiaXQgYW5kIGZlZWwgc29tZSBmcmVlIHBsYXkgeW91IGtub3cgaXQgd291bmQgY29ycmVjdGx5LiAKSGUgZGVsdmVkIGludG8gdGhlIHRyZWFzdXJlcyBvZiB0aGUgbGlmZSBib29rIGFuZCB1c2VkIHRoZW0gZnJlZWx5LiBIZSBkcmVhbWVkIGFuZCBicm9vZGVkIG92ZXIgbG9zdCBNYXJnYXJldCB1bnRpbCBzaGUgYmVjYW1lIGEgdml2aWQgcmVhbGl0eSB0byBoaW0gYW5kIGxpdmVkIGluIGhpcyBwYWdlcy4gCkdGIGhhZCBvbmUgb24gaGVyIG1rNSBKZXR0YSwgd2UgdXNlZCBpdCBvbmNlIGZvciBhIGZldyBsaXR0bGUgdGhpbmdzIGl0IG5lZWRlZCAocmVhbGx5IGp1c3Qgd2FudGVkIHRvIGdldCBoZXIgbW9uZXlzIHdvcnRoIGZyb20gdGhlIHdhcnJhbnR5IHJpZ2h0IGJlZm9yZSBpdCBleHBpcmVkKSwgYW5kIHRoZXkgZGlkIGl0IHdpdGhvdXQgaXNzdWUuIFNvbWV0aGluZyB0byBjb25zaWRlci4gCldpdGggdGhvc2UgdGhpcyBpcyB3aGF0IHNoZSBiZWxpZXZlczouIApXaGVuIEkndmUgc3RvcHBlZCB0aGUgbWFpbnRlbmFuY2UsIHRoZSBjYWx2ZXMgd291bGQgc3RhcnQgdGlnaHRlbmluZywgYW5kIEkgY291bGQgdGVsbCB0aGUgdGVuZG9uaXRpcyB3YXMgY29taW5nIGJhY2suIApSZWxlYXNlIG5hbWUuIApKZSBsZXVyIGFpIGp1c3RlIGNyaSBxdWUgYyd0YWl0IGR1IGZhdXgsIHBhcyBkdSB2cmFpLiAKSnVzdC4gInJlYWxpc3RpYyIuIApJIHRoaW5rIHRoZXkgcmVhY3RlZCBhcHByb3ByaWF0ZWx5LCBhbmQgSSB0aGluayBvdXIgZGlzYWdyZWVtZW50IGlzIHN1YmplY3RpdmUgbm90IG9iamVjdGl2ZSwgSSB0aGluayB3ZSBhZ3JlZSBvbiB0aGUgZmFjdHMsIHNvIEkgZG9uIHRoaW5rIHdlIGdvaW5nIHRvIGdldCBhbnl3aGVyZS4gSSByZXNwZWN0IHlvdXIgYmVsaWVmIGFuZCB1bmRlcnN0YW5kIGl0LCBJIGp1c3QgZG9uIGFncmVlIHdpdGggaXQuCk15IDM0dGggYmRheSBpcyB0b21vcnJvdyBzbyBJIGtpbmRhIGRlcHJlc3NlZCBjYXVzZSBJIGFsb25lIGFuZCBzaGl0LiBMb29raW5nIGZvcndhcmQgdG8gdGhpcyB5ZWFyIHRob3VnaCBJIGdvbm5hIHB1dCBpbiBtYXhpbXVtIGVmZm9ydCB0byBsb3NlIHdlaWdodCBhZ2Fpbi4gCkkgbm90IGNhbGxpbmcgaXQgYSB0ZXJyb3Jpc3Qgb3JnYW5pemF0aW9uLCBiZWNhdXNlIHdoYXQgdGhleSBkbyBkb2VzbiBmaXQgdGhlIGRlZmluaXRpb24gb2YgdGVycm9yaXNtLCBidXQgaXQgc29tZXRoaW5nIG11Y2ggbW9yZSBpbnNpZGlvdXMgYW5kIHRyYWl0b3JvdXMuIEJvdGggbWVuIHdhbnRlZCB0byBnYWluIHBvd2VyIG5vdCBieSBicmluZ2luZyBwZW9wbGUgdG8gaGVlbCwgYnV0IGJ5IHByb3BhZ2FuZGEgYW5kIGJyYWlud2FzaGluZy4gCkkgaGFkIHRvIGxlYXZlIGZvciB3b3JrIGFuZCBhbSBub3cgYXQgd29yay4gWWVzLCBJIHRocmV3IGF3YXkgdGhlIGJhZyBvZiBwb29weSBzb2Nrcy4gU2hlIHRleHRlZCBtZSBiYWNrIGFuZCBzaGUgY2xlYXJseSBlbWJhcnJhc3NlZCwgYnV0IGZlbHQgc2hlIG93ZWQgbWUgYW4gZXhwbGFuYXRpb24uIApQYWphbWFzLiBBbGwgaW4gYWxsIHByZXR0eSBnb29kLCBidXQgSSB3aXNoIGl0IHdhcyBteSBvd24uIApNeSBzeXN0ZW0gd2lsbCByYW5kb21seSBzaHV0IGRvd24uIApXZXJlIHRoZSBUaW1lcyByZXBvcnRlcnMsIEplc3NlIE1jS2lubGV5IGFuZCBDYXJvbCBQb2dhc2gsIHN1Z2dlc3Rpbmcgc2hlIHdhcyBub3QgInJlYWxseSIgYSBjYXB0aXZlPyBJZiBzbywgdGhleSBzaG91bGQgYmUgZm9yY2VkIHRvIGFwb2xvZ2l6ZSBiZWNhdXNlIGV2ZW4gd2l0aG91dCBhbGwgdGhlIGV4cGVydCBwc3ljaG9sb2d5IGludG8ga2lkbmFwcGluZyB2aWN0aW1zLCBjb21tb25zZW5zZSBzaG91bGQgdGVsbCB0aGVtIHRoYXQgc29tZW9uZSB0YWtlbiBhcyBhIGNoaWxkIGFuZCByYXBlZCBhbmQgbG9ja2VkIHVwIGluIGEgY2FnZSBhbmQga2VwdCBhcyBhIHNsYXZlIHdvdWxkIGJlIGluY2FwYWJsZSBvZiB0aGlua2luZyByYXRpb25hbGx5IGFib3V0IGhlciBvcHRpb25zIGZvciBlc2NhcGUuCklmIGEgZmFjdG9yeSBwbGFjZSBpcyB1bmZpbGxlZCwgSSBjYW4gZmlsbCBpdC4gTXkgbGlmZSwgbXkgcnVsZXMuIApJZiBzdWNoIGFuIGFjcXVpc2l0aW9uIGlzIHlvdXIgZ29hbCB0aGVuIHlvdSBwcm9iYWJseSB3aWxsIHdhbnQgdG8gbG9vayB0b3dhcmRzIHRoZSAyMDAgUGF1bHNvbiBUb3BoYXQgQW5kIENhbmUgUG9rZXIgQ2hpcHMgd2l0aCBBbHVtaW51bSBDYXNlIHdoZW4gY29uc2lkZXJpbmcgdGhlIHB1cmNoYXNlIG9mIHN1Y2ggYW4gaXRlbS4gUmVhbGx5LCB5b3Ugd291bGQgYmUgaGFyZCBwcmVzc2VkIHRvIGZpbmQgYSBwb2tlciBjaGlwIHNldCB0aGF0IGlzIG1vcmUgYWxsdXJpbmcgYW5kIGFwcGVhbGluZyB0aGFuIHRoaXMgb25lLiBJdCBpcyB0cnVseSBhIGNvbXBsZXRlIHN0dW5uZXIgb24gYSBudW1iZXIgb2YgbGV2ZWxzLgpZb3Ugd2lsbCBzZWUgc3VjaCBwb3ZlcnR5IGFuZCBzdWZmZXJpbmcgdGhhdCB5b3Ugd2lsbCByZXR1cm4gaG9tZSB0byBmZWVsIGV4YXNwZXJhdGVkIGJ5IHRoZSBjb21wbGFpbnRzIG9mIHRob3NlIHdobyBsaXZlIHdpdGhpbiB0aGUgc2xvdGhmdWwgaWdub3JhbmNlIG9mIHRoZWlyIGNvc3NldGVkIGV4aXN0ZW5jZS5MaWtlIHNsZWVwPyBZb3UnbGwgbGVhcm4gdG8gbG92ZSBpdFdoZW4gb24gb3BlcmF0aW9ucywgZGlzY2FyZCB0aGUgY29uY2VwdCBvZiB0aW1lLiAKIlRoZSBhdmVyYWdlIHJldHVybiBvZiBhbGwgZ2FtaW5nIG1hY2hpbmVzIG92ZXIgdGhpcyBwZXJpb2QgW3dhc10gYWJvdXQgOTAgcGVyIGNlbnQsIiB0aGUgc3Bva2VzbWFuIHNhaWQuIApUaGV5IGJvdGggc2FpZCB0aGUgZmlyc3QgbWFzc2FnZXMgd2VyZSBub3JtYWwsIGJ1dCB0aGVuIFd5bm4gYmVnYW4gZXhwb3NpbmcgaGltc2VsZiB0byB0aGVtIGFmdGVyIGhlIGxlYXJuZWQgdGhhdCB0aGV5IHdlcmUgZWFjaCBmaW5hbmNpYWxseSBkZXBlbmRlbnQgb24gdGhlIGpvYi4gVGhlIG9sZGVyIHdvbWFuIHRvbGQgV3lubiB0aGF0IHNoZSB3YXMgZ29pbmcgdGhyb3VnaCBhIGRpdm9yY2UgYW5kIHdvdWxkIHNvb24gYmVjb21lIGEgc2luZ2xlIG1vdGhlciwgc2hlIHNhaWQgaW4gdGhlIGxhd3N1aXQuLiAKT25jZSB3ZSBicm91Z2h0IGl0IHRvIHRoZSBmaXJzdCBuaWdodCwgZXZlcnlvbmUgdGhvdWdodCB3ZSBoYWQgc29tZWhvdyB3b24gYSBidW5jaCBvZiBtb25leSBhdCBhIGNhc2lubyBhbmQgd2FzIHJvbGxpbmcgaW4gdGhlIG1vbmV5LiBUaGlzIHRydWx5IGRvZXMgaGF2ZSB0aGF0IHNvcnQgb2YgYXBwZWFsLCBidXQgdGhlIHRydXRoIHdhcyBJIHdhcyB0aXJlZCBvZiBiZW5kaW5nIG92ZXIgYW5kIHBpY2tpbmcgdXAgcG9rZXIgY2hpcHMgaW4gdGhlIHNub3cgYW5kIHR3ZW50eSBkZWdyZWUgd2VhdGhlci4gVGhvc2Ugd2VyZSB0aGUgZGF5cywgYW5kIGV2ZW4gdGhvdWdoIHRoZXkgc2VlbSBsaWtlIGFnZXMgYWdvLCB3ZSd2ZSBzdGlsbCBiZWVuIGFibGUgdG8gcGxheSB0d28gdGltZXMgYSBtb250aC4KVGhpcyB3aWxsIGhlbHAgeW91IHRvIGVuam95IGhvdXJzIHVwb24gaG91cnMgb2YgcG9rZXIuIApEdWFuZURpYmJsZXkgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMjAgZGF5cyBhZ28KWWVzLCBzb21lIG9mIHRoZXNlIHRlcm1zIGFyZSBoYXJkbHkgb24gdGhlIGxldmVsIG9mIHRoZSBuIHdvcmQsIGJ1dCB0aGV5IGFyZSByYWNpc3QsIGF0IGxlYXN0IG9uIHBhciB3aXRoIHdvcmRzIGxpa2UgZnJvZywgZ3JpbmdvIGV0Yy4gV29yc2UsIHRoZSBmYWN0IHRoYXQgdGhlc2Ugd29yZHMgYXJlIHNvIGNvbW1vbiBiZXRyYXlzIGEgcGFydGljdWxhciB3YXkgb2YgdGhpbmtpbmcgYWJvdXQgcGVvcGxlOiBza2luIGNvbG91ciBpcyBvYnZpb3VzbHkgYXQgdGhlIGZvcmVmcm9udCBvZiBwZW9wbGUgbWluZHMuCkpvdXJuYWwgb2YgU3BpbmUgMjAwMwpKZXJyeSBHYWl0YW4KQ2VsYSB2b3VzIHBlcm1ldHRyYSBkZSBzZW50aXIgbGUgbW9tZW50IG8gdm91cyB0ZXMgcmFzc2FzaSAoZSkgZXQgZGUgdm91cyBhcnJ0ZXIuIApXZSBkb24ga25vdyB5ZXQuIE0yMDAgaXMgdG9vIG5ldy4gVGhlcmUgYSBiaXQgb2Ygb3ZlcmxhcCwgYnV0IE0yMDAgY29uZmlnIGlzIG9yaWVudGVkIHRvd2FyZHMgZGlyZWN0bHkga2lsbGluZyBoaWdoIHZhbHVlIHJlYXIgZWNoZWxvbiB0YXJnZXRzLiAKV2l0aCBvbmx5IGEgZmV3IGJ1eWlucyB0byB3b3JrIHdpdGgsIHNob3RzIGFyZSBub3QgZ29pbmcgdG8gZ28gd2VsbCBhcyBvZnRlbiBhcyB5b3Ugd291bGQgaG9wZS4gCkhlIHVuZGVyd2VudCBhIHNwZWNpYWwgdHJlYXRtZW50LCBuZXZlciB1c2VkIGJlZm9yZS4gCjE5KSAiVGhlIHBoeXNpY2FsaXR5IG9mIHRoZSBFQ00gc3Vic3RyYXRlIGFuZCBkZWdyZWUgb2YgY2VsbCBkaXN0b3J0aW9uIGdvdmVybiBjZWxsIGJlaGF2aW9yIHJlZ2FyZGxlc3Mgb2YgdGhlIHByZXNlbmNlIG9mIGhvcm1vbmVzLCBjeXRva2luZXMgb3Igb3RoZXIgc29sdWJsZSByZWd1bGF0b3J5IGZhY3RvcnMuIiAoV09XISkKRXNwZWNpYWxseSBiZWNhdXNlLCBldmVuIGZvciBwcml2YXRlIGNlbnRlcnMgdGhhdCBhcmUgbm90IHN1YmplY3QgdG8gY2VudHJhbCBwbGFubmluZywgdGhlIGhlYWx0aGNhcmUgc3lzdGVtIHN0cm9uZ2x5IGRpc2NvdXJhZ2VzIHRoZSBpbnN0YWxsYXRpb24gb2YgYWR2YW5jZWQgdGVjaG5pcXVlcyBpbiBjZW50ZXJzIHdoZXJlIHRoZXkgd291bGQgbm90IG1lZXQgYSBjZXJ0YWluIG51bWJlciBvZiB0cmVhdG1lbnRzIGEgeWVhciwgdGhleSBmYXZvdXIgaGF2aW5nIGZldyBjZW50ZXJzIHdpdGggbG90cyBvZiBwYXRpZW50cyAoYW5kIG1hY2hpbmVzKSBmb3IgInNlY29uZCBsZXZlbCIgdHJlYXRtZW50cy4gSSBrbm93IG9mIGZldyBob3NwaXRhbHMgd2l0aCBsZXNzIHRoYW4gMyBhY2NlbGVyYXRvcnMgYWN0dWFsbHkuIApJIGRlY2lkZWQgdGhpcyB0aW1lIHRoZSBvbmx5IHBlcnNvbiBvciB0aGluZyBJIHJlbHkgb24gZm9yIG15IG93biBoYXBwaW5lc3MgaXMgbWUuIApUaGV5IHB1bXAgYW5kIGR1bXAgd2hlbiB0aGV5IHdhbnQuIApJbiBldmVyeSBvdGhlciByZXNwZWN0LCB0aGlzIHdhcyBhIHByaW1lIHNwb3QsIGJ1dCBpdCB3YXMgYSBkZWFkIHpvbmUgZm9yIGFzcGlyaW5nIGxlbW9uYWRlIG1hZ25hdGVzLiAKT25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZ3MgdGhhdCBpcyBvZnRlbiBvdmVybG9va2VkIGlzIHRoYXQgdGhlIFJ1c3NpYSBNYWZpYSBpcyBwYXJ0IGFuZCBwYXJjZWwgb2YgUnVzc2lhbiBpbnRlbGxpZ2VuY2UuIFJ1c3NpYSBpcyBhIG1hZmlhIHN0YXRlLiB0aGF0IGlzIG5vdCBhIG1ldGFwaG9yLiBQdXRpbiBpcyBoZWFkIG9mIHRoZSBNYWZpYS4gU28gdGhlIGZhY3QgdGhhdCB0aGV5IGhhdmUgYmVlbiBvcGVyYXRpbmcgb3V0IG9mIHRoZSBob21lIG9mIHRoZSBwcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgZGVlcGx5IGRpc3R1cmJpbmcuCkNvbW11bmlzbSBhbmQgTmF6aSBpZGVvbG9neSBkbyBub3QgbWVzaCBhdCBhbGwuIApJIHdlbnQgTkMgd2l0aCBteSBtb3RoZXIgaW4gMjAwNC4gSSB3ZW50IHRvIHNlZSBoZXIgaW4gMjAxMCBpbiB0aGUgRVIgYW5kIGFnYWluIGluIGhvc3BpY2UuIFNoZSBuZXZlciBhcG9sb2dpemVkIHRvIG1lIG9yIGFza2VkIGZvciBmb3JnaXZlbmVzcy4gCkJyaWFuIFNhbmRvdmFsIGFuZCBDbGFyayBDb3VudHkgQ29tbWlzc2lvbiBDaGFpcm1hbiBTdGV2ZSBTaXNvbGFrLiBUaGlzIGlzIGEgbGl2ZSBmZWVkIGFuZCBtYXliZSBzdWJqZWN0cyB0byBicmVha3Mgb3IgcGF1c2VzLi4gCkRvIHlvdSBrbm93IHdoeSB0aGUgc3RvcnkgdHVybmVkIG91dCBsaWtlIHRoaXM/IERpZCBwZW9wbGUgZ2VuZXJhbGx5IHRob3VnaHQgdGhpcyB3YXMgYWxyaWdodCBvciB3YXMgaXQgImltcG9zZWQiIGluIHNvbWUgd2F5Py4gCkRpZCB5b3UgY2hlY2sgdGhlIHRyaWFsIHRyYW5zY3JpcHRzPyBJZiBzbywgeW91IG5vdyBrbm93IHRoYXQgdGhlIHN0YXRlIG5ldmVyIGNsYWltZWQgdGhhdCBidWxsZXQgd2VudCB0aHJvdWdoIFRlcmVzYSBza3VsbC4gVGhlcmVmb3JlIHNheWluZyBpdCBoYWQgbm8gYm9uZSBpcyBtZWFuaW5nbGVzcy4gSXQgd2FzIGEgYnVsbGV0IHdpdGggVGVyZXNhIEROQSBvbiBpdCwgbGlua2VkIHRvIHRoZSB2ZXJ5IGd1biBoYW5naW5nIG92ZXIgQXZlcnkgYmVkLCBmb3VuZCBpbiB0aGUgZ2FyYWdlIGhlIGJsZWFjaGVkIGEgbGFyZ2UgZGFyayByZWQgc3RhaW4gb2ZmIHRoZSBmbG9vciB0aGUgbmlnaHQgb2YgdGhlIG11cmRlci4gCkRvbid0IGZvcmdldCB0byBwcm92aWRlIHRoZSBiYXNpYyBuZWNlc3NpdGllcyAoZm9vZCwgd2F0ZXIsIGJlZCwgbGl0dGVyIGJveCwgYW5kIHNvbWUgdG95czsga2VlcCB0aGUgYmVkIGFuZCBmb29kL3dhdGVyIGFzIGZhciBmcm9tIHRoZSBsaXR0ZXIgYm94IGFzIHBvc3NpYmxlKSBhbmQgdG8gc3RpbGwgc3BlbmQgdGltZSB3aXRoIGhpbSB0aHJvdWdob3V0IHRoZSBkYXkuIE9ic2VydmUgeW91ciBjYXQgdG8gbWFrZSBzdXJlIHRoZSBpc29sYXRpb24gaXMgaGF2aW5nIGEgY2FsbWluZyBlZmZlY3QgYW5kIG5vdCBjYXVzaW5nIG1vcmUgc3RyZXNzLiBBZnRlciBhIGZldyBkYXlzIG9yIGEgd2VlaywgdHJ5IGxldHRpbmcgeW91ciBjYXQgb3V0IHRvIHNlZSBob3cgaGUgcmVhY3RzLiAKSW4gdGhlIDExIHllYXJzIHNpbmNlIEVwc3RlaW4gd2FzIGludmVzdGlnYXRlZCBhbmQgY2hhcmdlZCBieSB0aGUgUGFsbSBCZWFjaCBwb2xpY2UgZGVwYXJ0bWVudCwgdWx0aW1hdGVseSBjb3BwaW5nIGEgcGxlYSBhbmQgc2VydmluZyAxMyBtb250aHMgb24gb25lIGNoYXJnZSBvZiBzb2xpY2l0aW5nIHByb3N0aXR1dGlvbiBmcm9tIGEgMTQgeWVhciBvbGQgZ2lybCwgUGF0dGVyc29uIGhhcyByZW1haW5lZCBvYnNlc3NlZCB3aXRoIHRoZSBjYXNlLi4gClBvbHlEdWRlTllDICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpPbmx5IGlmIHlvdSBuZXZlciB3b3JrZWQgYWxvbmdzaWRlIHBlb3BsZSB3aXRoIG1lbnRhbCBkaXNhYmlsaXRpZXMuIEkgaGF2ZSwgaW4gYSBmZXcgZGlmZmVyZW50IHBsYWNlcy4gCkFsbCBvdGhlcnMgYXJlIHJhbmtlZCBmcm9tIDIsIGxvd2VzdCwgdG8gS2luZywgaGlnaGVzdC4gCkZvciBjb25zdGVsbGF0aW9ucyAvIHBhdHRlcm5zIHlvdSBkb24gaGF2ZSB0aGUgd2hvbGUgb3BlbmluZ3MuIEluIGNoZXNzIHlvdSBtaWdodCBoYXZlIGEgY29uc3RlbGxhdGlvbiB3aGVyZSB0aGUgYmlzaG9wIGlzIHNpdHRpbmcgYmV0d2VlbiB0aGUgcGF3bnMgKG9uZSBpbiBmcm9udCBvZiBpdCwgdHdvIG5leHQgdG8gaXQpIGFuZCB5b3UgdGhpbmsgb2YgdGhpcyBhcyBhIHBhdHRlcm4geW91IHNlZSBpbiBkaWZmZXJlbnQgb3BlbmluZ3MuIERvdWJsZWQgcGF3bnMgaW4gY2hlc3MgYXJlIHVzdWFsbHkgd2VhayAoc28geW91IGtub3cgdGhpcyBhcyBhIHBhdHRlcm4pLi4gCkJ1dCBteSB3aG9sZSBzY2hvb2wgY2FyZWVyIChub3QgaW5jbHVkaW5nIGNvbGxlZ2UpLCB0ZWFjaGVycyB3ZXJlIGFsd2F5cyBzdGVybmx5IHRlbGxpbmcgdXMgdG8gc2l0IGRvd24sIGJlIHF1aWV0LCBzdGF5IGZvY3VzZWQsIGRvbiB0YWxrIHRvIG90aGVyIHN0dWRlbnRzIGluIGNsYXNzLCBzdGFyZSBkaXJlY3RseSBhdCB0aGUgdGVhY2hlciBhdCBhbGwgdGltZXMsIGhhdmUgZXZlcnl0aGluZyBkb25lIG9uIHRpbWUsIGJlY2F1c2Ugd2hlbiB5b3UgZ2V0IHRvIHRoZSBSZWFsIFdvcmsgV29ybGQsIGJvc3NlcyBhcmUgZ29pbmcgdG8gd2FudCBhbGwgdGhhdCBhbmQgbW9yZS4gV2hpY2ggdHVybmVkIG91dCB0byBiZSBhYm91dCBhcyB0cnVlIGFzIG15IGZpZnRoIGdyYWRlIHRlYWNoZXIgbGVjdHVyaW5nIG1lIG9uIG15IGN1cnNpdmUgYmVjYXVzZSAiaW4gaGlnaCBzY2hvb2wgdGhleSBnb2luZyB0byBtYXJrIHlvdSBkb3duIGV2ZW4gbW9yZSBpZiB5b3UgZG9uIHdyaXRlIGluIGN1cnNpdmUgb24geW91ciB0ZXN0cy4iIChUaGV5IGRpZCBub3QuKS4gCkFkb2JlIGlzIHNvZnR3YXJlIGFuZCBhIHBsYXRmb3JtLiBBbHRob3VnaCB3ZSBwcm92aWRlIHNlcnZpY2VzLCB0aGUgdmFzdCBtYWpvcml0eSBvZiB3aGF0IHdlIGRvIGlzIHByb3ZpZGUgdGhlIGJlc3QgdG9vbHMgZm9yIHRoZSBtYXJrZXQuIEEgbG90IG9mIG91ciBidXNpbmVzcyBoYXMgY29tZSBmcm9tIGFnZW5jaWVzIGFuZCB0aGUgcmVhbGx5IHNtYXJ0IG9uZXMgYXJlIGNvbnN0YW50bHkgc2VlaW5nIHBvY2tldHMgb2Ygb3Bwb3J0dW5pdHkgaW4gdGhlIG1hcmtldCBhbmQgdGhleSdyZSBidWlsZGluZyBlY29zeXN0ZW1zIGFyb3VuZCB0aGVtIHdpdGggb3VyIHBsYXRmb3Jtcy4KSSBmaW5kIGEgbG90IG9mIGl0IGhhcyB0byBkbyB3aXRoIGFnZS4gSSBhbSBvbmx5IDI0IHdoaWNoIGluIHRoZSBsb25nIHJ1biBpcyBub3QgbXVjaCBvbGRlciB0aGFuIHlvdSwgYnV0IHlvdSBiZSBhbWF6ZWQgYXQgaG93IG11Y2ggeW91ciBtaW5kc2V0IGNhbiBjaGFuZ2UgaW4ganVzdCB0aHJlZSB5ZWFycy4gWW91IGJlY29tZSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggeW91cnNlbGYgYW5kIHdoYXQgeW91IHdhbnQgb3V0IG9mIGxpZmUsIGFuZCB5b3UgYmVjb21lIGxlc3Mgd2lsbGluZyB0byBjb21wcm9taXNlIG9uIGFueSBvZiBpdC4KV2FpdCB1bnRpbCB0aGVyZSBpcyBsZWdpc2xhdGlvbiBpbiBwbGFjZSB0byBwcm90ZWN0IHRoZSBwb2tlciBwbGF5ZXJzLiAKU2hlIGFkZGVkIHRoYXQgdGhlc2Ugc3VwZXIgbmFubmllcyBvZnRlbiBjb21tYW5kICQxMCBtb3JlIGFuIGhvdXIgdGhhbiB0aGUgJDIwIGFuIGhvdXIgZ29pbmcgcmF0ZS5SZWNlbnRseSwgTWFsb25leSBXaW5kZXIgc2VjdXJlZCBhIG5hbm55IGZvciBhIEdyZWVud2ljaCwgQ29ubi4sIENFTyBhbmQgbW90aGVyIG9mIGZvdXIgd2hvIHdhbnRlZCBoZXIgY2FyZWdpdmVyIHRvIGJsb3cgb3V0IGhlciBoYWlyICAgZGFpbHkgICBpbiBhZGRpdGlvbiB0byBjYXJpbmcgZm9yIHRoZSB0d28gZ2lybHMnIGxvY2tzLCBkcml2aW5nIHRoZW0gdG8gc2Nob29sIGFuZCBwcmVwYXJpbmcgdGhyZWUgbWVhbHMgYSBkYXkuIApJbiB0aGUgZWFzdCwgQmFycmllIG5lZWRzIGEgbGF0ZSBob3Qgc3RyZWFrLCB3aGlsZSB0aGUgUGV0ZXMsIEJ1bGxkb2dzIGFuZCBCYXR0YWxpb24gYXJlIGZpZ2h0aW5nIHRvIHN0YXkgaW4sIGFuZCBzdGF5IGluIGF0IGxlYXN0IHNldmVudGggdG8gYXZvaWQgY2xhc2hpbmcgd2l0aCBPdHRhd2EuLiAKSW5jbHVkZWQgdHJpYWxzIG1vc3RseSBoYWQgc2FtcGxlcyBvZiBwYXRpZW50cyB3aXRoIHZhcmlvdXMgdHlwZXMgb2YgY2FuY2VyOyBzb21lIGZvY3VzZWQgb24gd29tZW4gd2l0aCBicmVhc3QgY2FuY2VyIG9yIG9uIGNoaWxkcmVuLiBQYXRpZW50cyBpbiBzb21lIHRyaWFscyB1bmRlcndlbnQgdHJlYXRtZW50cyBzdWNoIGFzIGNoZW1vdGhlcmFweSwgcmFkaW90aGVyYXB5IG9yIGJvbmUgbWFycm93IHRyYW5zcGxhbnQuIFRoZXJlIHdhcyB2YXJpZXR5IGluIHRoZSBudW1iZXIgYW5kIGR1cmF0aW9uIG9mIG1hc3NhZ2Ugc2Vzc2lvbnMgYW5kIGluIHRoZSBjb21wYXJhdG9ycyBjaG9zZW4uIEEgcmFuZ2Ugb2Ygb3V0Y29tZXMgd2VyZSBldmFsdWF0ZWQ7IHBhaW4gd2FzIGFzc2Vzc2VkIGluIG1vc3QgdHJpYWxzLgpEZXNwaXRlIHRoZSBzdHVkZW50IGdpdmluZyBtYW55LCBtYW55IHJlZmVyZW5jZXMgaW5jbHVkaW5nIGxpbmtzIGZvdW5kIG9uIHRoZSBVbmkncyBvd24gbGlicmFyeSB0aGF0IEF1c3RyYWxpYSB3YXMgYSBjb3VudHJ5LCBhbmQgZXZlbiBzYXlpbmcgb2sgSSBnZXQgeW91J3JlIGNvbmZ1c2VkLCBidXQgaXQncyBib3RoICAgdGhlIGxlY3R1cmVyIHdvdWxkIG5vdCBiYWNrIGRvd24gYW5kIHJlZnVzZWQgaW4gd3JpdGluZyBzZXZlcmFsIHRpbWVzIHRoYXQgQXVzdHJhbGlhIHdhcyBub3QgYSBjb3VudHJ5LkkgdGhpbmsgc2hlIGNvbmZ1c2VkIEFmcmljYSBhbmQgQXVzdHJhbGlhLkFuZCBhbHNvIGNvdWxkbid0IHJlYWQgdGhlIGxpbmtzIHRoZSBzdHVkZW50IGdhdmUgaGVyIGZvciBwcm9vZi5qYW5xdWFkcmVudHZpbmNlbnQgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ29JdCdzIG5vdCB0aGUgc3Z1IHdlIHNpZ25lZCB1cCBmb3IgYnV0IEkgbGlrZWQgaXQgYXMgYSBicmVhayB1cCB0byB0aGUgZm9ybWF0LiBKdXN0IHNvIGxvbmcgYXMgdGhleSBkb24ndCB0cnkgdG8gbWFrZSBhIHJlZ3VsYXIgdGhpbmcgb2YgaXQuIEJ1dCBpdCdzIGFuIGV4YW1wbGUgb2YgaG93IGl0J3Mgbm90IGFib3V0IHRoZSBjYXNlcywgYnV0IHRoZSBjaGFyYWN0ZXJzIG5vdy4gCkplZGUgQXVmZ2FiZSBpc3QgcHJpbnppcGllbGwgc28gZ2VzdGFsdGV0IHdpZSBkYXMgZGllIEJlaXNwaWVsZSBpbiBkZW4gZXJzdGVuIGJlaWRlbiBCbmRlbiBzY2hvbiB3YXJlbi4gQWxzbyBnaWJ0IGVzIGVyc3QgbWFsIGVpbmUgVGlzY2hiZXJzaWNodCwgZGFubiBlaW4gYmlzc2NoZW4gd2FzIGJlciBkaWUgTWl0c3BpZWxlciwgc28gd2lyIGlyZ2VuZHdhcyBiZXIgc2llIHdpc3Nlbi4gRGFubiBnaWJ0IGVzIEthcnRlbiB1bmQgd2lyIG1zc2VuIGRpZSBFbnRzY2hlaWR1bmdlbiB0cmVmZmVuLCBkaWUgb2Z0IGRpZSBWb2xscHJvZmlzIGFuIHdpY2h0aWdlbiBUaXNjaGVuIGxhbmdlIHZvciB1bnMgZ2V0cm9mZmVuIGhhYmVuLCB1bmQgbmljaHQgaW1tZXIgaXN0IGVzIHJpY2h0aWcsIHdhcyBkaWVzZSBtYWwgaXJnZW5kd2FubiBlbnRzY2hpZWRlbiBoYWJlbi4KRm9yIHlvdXIgcGFydCwgdGhlcmUgYXJlIHRoaW5ncyB5b3UgY2FuIGRvIHRvIGhlbHAgZWFzZSB0aGUgdHJhbnNpdGlvbiB0byBnZXR0aW5nIGJyYWNlcy4uIApGb3IsIGluYXNtdWNoIGFzIHRoZSBjYW5hbHMgYXBwZWFyIHN0cmFpZ2h0IGFib3V0IHRoZSBjZW50cmFsIG1lcmlkaWFuLCBhbmQgYWxzbyB3aGVuIGNhcnJpZWQgYnkgcm90YXRpb24gbmVhciB0aGUgbGltYiwgaXQgaXMgb2J2aW91cyB0aGF0IHRoZSBNYXJ0aWFuIGVuZ2luZWVycyB3b3VsZCBiZSBjb25zdGFudGx5IGVuZ2FnZWQgaW4gcmFwaWRseSBkaWdnaW5nIGFuZCBkZXN0cm95aW5nIHRoZWlyIHdhdGVyY291cnNlcywgc28gYXMgdG8gbWFrZSB0aGVtIGxvb2sgYWx3YXlzIHN0cmFpZ2h0IHRvIHRoZSBvYnNlcnZlcnMgb24gdGhlIGVhcnRoLiAicHAgNDE3IDQxOC4gCk9ubHkgdGhpcyBlbnN1cmVzIHRoYXQgYSBwbGF5ZXIgbWFrZXMgbW9uZXkgZXZlbiBvdXQgb2YgYSBiYWQgaGFuZC4gQWxzbyBjYWxjdWxhdGluZyBvZGRzIHdpdGhvdXQgc2tpbGwgYW5kIHByYWN0aWNlIGlzIG5leHQgdG8gaW1wb3NzaWJsZS4gU2ltaWxhcmx5LCBvbmx5IHdpdGggcHJhY3RpY2UgY2FuIHlvdSBrbm93IHdoZW4gdG8gYmx1ZmYgb3IgY2FsbCBvciB0byBmb2xkIG9yIGJsdWZmIGJ5IGNoYW5jZS4uIApZb3UgbWF5IG5vdCBldmVuIGJlIGFibGUgdG8gcmVjb2duaXplIGFkZGljdGlvbiBpbiB5b3Vyc2VsZi4gCkluIGFuIGludGVydmlldyB3aXRoIE5ldyBZb3UsIFdoaXRlIHByZXZpb3VzbHkgc3RhdGVkLCB3aXNoIEkgZGlkbiBoYXZlIHR3byBiYWQgbWFycmlhZ2VzLiBUaGV5IHdlcmUgcHJvYmFibHkgbXkgZmF1bHQuIApIb25lc3RseSB0aGUgcmVhY3Rpb24gdG8gbXkgbGFzdCBnaWYgd2FzIGFtYXppbmcsIEkgaGF2ZW4gbGF1Z2hlZCB0aGlzIG11Y2ggaW4gYSBsb25nIHRpbWUgc28gdGhhbmsgeW91IGFsbC4gCkxpa2UgeW91IGNhbiBzZWUgaGVyZSwgdGhlcmUgYXJlIDUgaGVhcnRzIG9uIHRoZSBib2FyZC4gTm9uZSBvZiB0aGUgb3RoZXIgcGxheWVycyBoYXMgYSBoZWFydCwgdGhlcmVmb3JlIG1ha2luZyB0aGUgY2FyZHMgb24gdGhlIGJvYXJkIHRoZSBoaWdoZXN0IHBvc3NpYmxlIDUgY2FyZCBjb21iaW5hdGlvbi4gSW4gdGhpcyBzaXR1YXRpb24gdGhlIHBvdCB3aWxsIGJlIHNwbGl0IGFzIHRoZXkgaG9sZCBhIDUgY2FyZCBjb21iaW5hdGlvbiBvZiB0aGUgc2FtZSB2YWx1ZS4gCkFsc28sIGl0IGJlZW4gc2FpZCB0byB5b3UgbWFueSwgbWFueSB0aW1lcywgdGhhdCBTcG9ydHMgY2x1YnMgZG8gbm90IGhhdmUgdG8gcnVuIGFzIGEgcHJvZml0LiBNb3N0IGRvbiB0aGV5IG5vdG9yaW91cyBtb25leSBzaW5rcy4KSWNlLCB3aGVuIHlvdSB3ZXJlIG9mZiB3YXRjaCwgeW91IHdlcmUgb24gZGVjayBjaGlwcGluZyBpY2UgYmVjYXVzZSB3ZSBiZSB0b3AgaGVhdnkgaWYgd2UgZGlkbiBJdCB3YXMgc3Vydml2YWwuIEV2ZXJ5Ym9keSBoYWQgdGhlaXIgdHVybiB0b28uIE9uY2UgeW91IHNlZW4gdGhlIGljZSwgeW91IGhhZCB0byBzdGFydCBjaGlwcGluZywgZ2V0IGl0IG9mZiBiZWNhdXNlIGl0IHdvdWxkIG1ha2UgeW91IHRvcCBoZWF2eS4gCkdpdmVuIHRoYXQgdGVhY2hlcnMsIG9uIGF2ZXJhZ2UsIGxhc3QgYmFyZWx5IGZpdmUgeWVhcnMgaW4gdGhlIHByb2Zlc3Npb24sIGFuZCBnaXZlbiB0aGF0IG1hbnkgZHJpdmVuIDUwIHllYXIgb2xkcyB3aWxsIHdvcmsgaW50byB0aGVpciBzZXZlbnRpZXMsIHRoaXMgbWFrZXMgbm8gc2Vuc2UgYXQgYWxsLiAKVGhlIGhlYWQgb2YgdGhlIFN0LiBBbGJlcnQgQ2F0aG9saWMgc2Nob29sIGRpc3RyaWN0IGhhcyBiZWVuIG5hbWVkIENhbmFkaWFuIFN1cGVyaW50ZW5kZW50IG9mIHRoZSBZZWFyIGZvciBleGVtcGxhcnkgbGVhZGVyc2hpcCBpbiB0aGUgc2Nob29sIGRpc3RyaWN0LgpQbGF0eiBiZWkgZWluZW0gJDUgVHVybmllciBtaXQgMTgxNiBTcGllbGVybi4gTWFsIHNlaGVuLCBvYiBkZXIgRmluYWwgVGFibGUgZWluIHdlbmlnIE1vdGl2YXRpb24gYnJpbmd0Li4gCk1vcmUgU3RvcmllcyBDaGFyZ2VkISBIb3BvYXRlIHdoYWNrZWQgYnkgTlNXUkwgYWZ0ZXIgbGVha2VkIHZpZGVvICdJJ20gZ29ubmEgYmFzaCB5b3UnOiBIb3BvYXRlIHRocmVhdGVucyBwbGF5ZXIgYWZ0ZXIgaGl0IEhvcHBhIHNldCB0byBsZWFybiBmYXRlIG92ZXIgc2lkZWxpbmUgdGhyZWF0cyBHcm93aW5nIHVwIHRoZSBzb24gb2YgYSBidW0gcG9rZXIgcHJlbWl1bV9pY29uCkRlcnByb25kbyB1Ck1hZGUgbWUgc2FkLi4gCktlcHQgd2luZG93cyBvbiBteSBjb21wdXRlciBmb3IgdW5kZXIgYSBtb250aCBicmFuZCBuZXcsIGFuZCB3YW50ZWQgTGludXggb24gaXQgYmVjYXVzZSBtb3JlIGtub3dsZWRnZWFibGUgcGVvcGxlIHVzZWQgaXQsIGFuZCBpdCBjYW4gYmUgYSBob2JieWlzdCB0aGluZyBhcyB3ZWxsLiBJZiBzb21lb25lIGlkZWEgb2YgaG9iYnkgaXMgdXNpbmcgcG93ZXJzaGVsbCBvciBDTUQgb24gd2luZG93cyB0aGVuIGlkayB3aGF0IHRoZWlyIGxldmVsIG9mIHNhbml0eSBpcy4KU3BlY2lhbCB0aGFua3MgdG8gYWxsIHRoZSBjb21wYXNzaW9uYXRlIG1lZGljYWwgcHJvZmVzc2lvbmFscyBhbmQgY2FyZWdpdmVycyB3aG8gcHJvdmlkZWQgaGVyIHdpdGggYSBxdWFsaXR5IGVuZCBvZiBsaWZlIGpvdXJuZXk6IERyLiAKVGhlIGNhYmxlIGlzIGFsc28gc29tZXRpbWVzIGNhbGxlZCBESU4gY2FibGUgaW4gR2VybWFuIGFuZCBJIHByZXR0eSBzdXJlIEkgaGVhcmQgdGhlIHN0YW5kYXJkaXNlZCBzbG90cyBmb3IgY2FyIHJhZGlvcyBiZWluZyBjYWxsZWQgRElOIHNsb3RzIGFzIHdlbGwuIApQYWludGluZ3Mgd2VyZSBzdGlsbCBtYWlubHkgZm91bmQgb24gdmFzZXMgYW5kIG90aGVyIHBvdHRlcnkuIEluc3RlYWQgb2YgZ2VvbWV0cmljIHBhdHRlcm5zIHZhc2VzIHdlcmUgbm93IGRlY29yYXRlZCB3aXRoIHBpY3R1cmVzIG9mIHBsYW50cyBhbmQgbXl0aG9sb2dpY2FsIGZpZ3VyZXMuIApJIHRydXN0IG15IG93biBsaWZlIGV4cGVyaWVuY2UgbW9yZSB0aGFuIHdoYXQgc2NpZW5jZSBwcm9jbGFpbXMgYXMgZmFjdCAod2hhdGV2ZXIgc2NpZW5jZSBmaW5kcyBvdXQgdG9kYXkgd2lsbCBjb21wbGV0ZWx5IGNoYW5nZSBpbiA1MCB5ZWFycyBhbnl3YXkpLCBhbmQgdGhhdCBpcyBtb3JlIHJlbGV2YW50IHRvIG15IGhhcHBpbmVzcyBhbmQgc3VjY2VzcyBpbiBsaWZlLiAKTXkgd2FsayBhd2F5IGZyb20gdGhhdCBpcyB0aGF0IHdlIGFyZSBhbGwgc28gZGVzZW5zaXRpemVkIHRvIG1hc3Mgc2hvb3RpbmdzLCB0aGF0IGl0IHByZXR0eSBlYXN5IHRvIGxvc2UgcGVyc3BlY3RpdmUgd2hlbiBpdCBub3QgYWZmZWN0aW5nLCByZWxhdGFibGUgaW4gc29tZSB3YXkgdG8geW91LiAKUmFjaWFsIGJhcnJpZXJzIHdlcmUgYW5uaWhpbGF0ZWQsIGh1bmdlciwgamVhbG91c3ksIHdvcmxkIHByb2JsZW1zIHdlcmUgYWxsIGVyYWRpY2F0ZWQuIApTaGUgd291bGQgcHJlZm9ybSBzdXJnZXJ5IG9uIGEgbG9jYWwgcHVnIHJlc2N1ZSBmcmVlIG9mIGNoYXJnZS4gCkkgaGFkbiBldmVuIGZpbmlzaGVkIG1hbm91cnZlcmluZyBteSB3ZWlyZCB0b3dlciBvdmVyIHRoZSBsaW5lLiBJIGZsaXAgbXkgdGVucywgaGUgbG9va3Mgc2hlZXBpc2ggYXMgaGVsbCBhbmQgZmxpcHMgVDRvLiAKQmVpbmcgb25lIG9mIHRoZSBncmVhdGVzdCBwbGF5ZXJzIG9mIGFsbCB0aW1lLCBoZSB0aGVuIHByb2NlZWRlZCB0byB0YWtlIHRoZSA2MDAsMDAwIGV1cm8gZmlyc3QgcHJpemUuIApXZSBkbyBub3QgdHJhY2sgdGhlIHVzYWdlIHBhdHRlcm5zIG9mIGluZGl2aWR1YWwgdXNlcnMuUGxlYXNlIHZpc2l0IHRoZSBHb29nbGUgQW5hbHl0aWNzIHdlYnNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24uSWYgeW91IGNob29zZSBub3QgdG8gYWNjZXB0IGNvb2tpZXMgZnJvbSBvdXIgc2l0ZSB1c2luZyB0aGUgY29uc2VudCBiYW5uZXIsIG91ciB3ZWJzaXRlIHdpbGwgY3JlYXRlIGFuIG9wdCBvdXQgY29va2llIHdoaWNoIHdpbGwgYmUgc3RvcmVkIGluIHlvdXIgYnJvd3NlciBmb2xkZXIgd2hpY2ggd2lsbCBibG9jayBmdXR1cmUgR29vZ2xlIEFuYWx5dGljIGNvb2tpZXMgZnJvbSBiZWluZyBpbnN0YWxsZWQgb24geW91ciBicm93c2VyIGZyb20gb3VyIHdlYnNpdGUuIApGaXJzdCAoYW5kIG1vc3QgaW1wb3J0YW50bHkgdG8gbWUpIEkgYSBodWdlIGNvbGxlZ2UgZm9vdGJhbGwgKGFuZCBjb2xsZWdlIGhvY2tleSkgZmFuLCBzbyBJIHdhcyBob3BpbmcgdG8gZ28gb24gb25lIG9mIHRoZSB0b3VycyBvZiBDYW1wIFJhbmRhbGwgYW5kIEtvaGwgQ2VudGVyLiBJIGJlZW4gb24gc29tZSBzaGl0dHkgdG91cnMgYmVmb3JlIHRob3VnaCwgc28gYXJlIHRoZXkgcmVhbGx5IHdvcnRoIGl0LCBvciBpcyBpdCBlbm91Z2gganVzdCB3YWxraW5nIGFyb3VuZCB0aGVtPyBBbHNvLCBhcmUgdGhlcmUgYW55ICJtdXN0IHNlZSIgc3BvdHMgb24gdGhlIGNhbXB1cyBpdHNlbGY/IEkgY2FuIGdldCBlbm91Z2ggb2Ygd2Fsa2luZyBhcm91bmQgY29sbGVnZSBjYW1wdXNlcywgYW5kIGJpZyBwdWJsaWMgc2Nob29scyAoYW5kIEl2eSBMZWFndWUgb25lcykgYXJlIG15IGZhdm9yaXRlLi4gClJpZGUgZm9yIEhlcm9lcyBQb2tlciBSdW4KSSB0aGluayB0aGF0IGFuIGF3ZnVsIHRoaW5nIHRvIHB1dCBvbiBhIHBlcnNvbiwgdGhleSBhbHJlYWR5IGhhZCB0byBsaXZlIHdpdGggYWNjaWRlbnRhbGx5IGtpbGxpbmcgc29tZW9uZSwgYnV0IHRoZW4gYmVpbmcgYmxhbWVkIGFuZCB0aGUgY2F1c2Ugb2YgdGhlIGRlYXRoLCBmb3Igc29tZXRoaW5nIGFsbW9zdCBpbXBvc3NpYmxlIHRvIHN0b3A/IEp1c3QgbWFrZXMgaXQgc28gbXVjaCBmdWNraW5nIHdvcnNlLgpNb3N0IG9mIHRoZSBtb2RzIGhlcmUgbWFrZSBtb2QgYWN0aW9ucyBldmVyeSBkYXksIHRvdGFsaW5nIGh1bmRyZWRzIHBlciBtb250aCBwZXIgbW9kZXJhdG9yLiAKSW4gdGhlIHNhbWUgd2F5LCB5b3VyIG92ZXJ3aGVsbWluZyBlbW90aW9ucyBjYW4gYmUgcXVpdGUgY2FsbWluZyB3aGVuIHZpZXdlZCBmcm9tIGVub3VnaCBkaXN0YW5jZS4gCkhvd2V2ZXIsIHRoZSBsZXZlbHMgaW4gZWFyIG1pdGljaWRlcyBkZXNpZ25lZCBmb3IgY2F0cyBhcmUgcGVyZmVjdGx5IHNhZmUuKSBGb2xsb3cgZGlyZWN0aW9ucyBjYXJlZnVsbHksIG1ha2luZyBzdXJlIHRvIG1hc3NhZ2UgdGhlIGRyb3BzIGluIHdlbGwgYW5kIHdpcGUgYXdheSBhbnkgZXhjZXNzLiAKIkkgZG9uJ3Qga25vdyB3aHkgSSBjYW4ndCBnZXQgY2xvc2VyIHRvIGhlciwiIEFubmUgc2FpZCBvbmUgZXZlbmluZyB0byBDYXB0YWluIEppbS4gIkkgbGlrZSBoZXIgc28gbXVjaCBJIGFkbWlyZSBoZXIgc28gbXVjaCBJIFdBTlQgdG8gdGFrZSBoZXIgcmlnaHQgaW50byBteSBoZWFydCBhbmQgY3JlZXAgcmlnaHQgaW50byBoZXJzLiBCdXQgSSBjYW4gbmV2ZXIgY3Jvc3MgdGhlIGJhcnJpZXIuIgpBIHN0b3JlIHByb3ByaWV0b3IgaW4gdGhlIEVsbXdiYmQgc2VjdGlvbiB3YXMgaGVsZCB1cCBhdCB0aGUgcG9pbnQgb2YgYSBndW4gYW5kIHJvYmJlZCBvZiBhbmQgZm91ciBob21lcyBuZWFyYnkgd2VyZSByYW5zYWNrZWQgbGFzdCBzaXNhdC4gClNoZSBkaWRuIHNwZWFrIGFueSBFbmdsaXNoLCBidXQgSSBjYW4gZ2V0IGJ5IGNsdW1zaWx5IHdpdGggVGhhaS4gU2hlIGRpZG4gbWluZCwgc28gbmVpdGhlciBkaWQgSS4gCkFsc28gY2hlY2sgdGhlIHBvb3Agc2NoZWR1bGUuIE5vdCBldmVuIGJlaW5nIGNvbnN0aXBhdGVkICh0aGF0IGl0IG93biBwcm9ibGVtISkgYnV0IGltYWdpbmUgc2l0dGluZyBvbiAyIDMgZGF5cyBvZiB5b3VyIG93biBwb29wLiAKVGhlIEV1cm9wZWFuIFVuaW9uLCBhIGNvbGxlY3Rpb24gb2YgMjggc292ZXJlaWduIGNvdW50cmllcywgZmluZHMgaXRzZWxmIGluIGEgcm91Z2ggbmVpZ2hib3VyaG9vZC4gRm9yIHRob3NlIG9uIGl0cyBib3JkZXJzLCBicnV0ZSBmb3JjZSBvZnRlbiB0cnVtcHMgZGVtb2NyYWN5IGFuZCB0aGUgcnVsZSBvZiB0aGUgbGF3LgoyLiAKSmVyZW15IHNob3VsZCd2ZSBvYnZpb3VzbHkgZ290dGVuIHJlY3J1aXRlZCB0byAuIE1hZGUgYSBodWdlIGVycm9yLiAKUGFudHkgcG9pbnRzLiBPSywgbGV0J3Mgc2F5IHlvdSBkb24ndCBoYXZlIGFueSB0aW1lIHRvIHdyaXRlIG91dCBhIHdob2xlIHBvb2wgb3IgaXQncyBub3QgeW91ciBkZWFsLiBZb3UgY2FuIGdldCBpbnRvIHRoZSBnYW1lIHdpdGggY2VydGFpbiBzZXh1YWwgcGF5YmFja3MgZm9yIGNlcnRhaW4gcGxheXMgdGhlIHRlYW1zIG1ha2UuIApUaGUgVGVhIFBhcnR5J3Mgb3V0c2l6ZWQgaW5mbHVlbmNlIHByaW1hcmlseSBkZXJpdmVzIGZyb20gdGhlIGZhY3QgaXRzIHN1cHBvcnRlcnMgYXJlIHdlbGwgb3JnYW5pc2VkIHdoZXJlYXMgcmFuayBhbmQgZmlsZSBSZXB1YmxpY2FucyBhcmUgcmVsYXRpdmVseSBkaXNwZXJzZWQuIFRoZSBmYWN0IHRoYXQgVGVhIFBhcnR5IHN1cHBvcnRlcnMgdm90ZSBpbiBoaWdoIHByb3BvcnRpb25zIGluIFJlcHVibGljYW4gcHJpbWFyaWVzIGVuYWJsZXMgdGhlbSB0byBub21pbmF0ZSBjYW5kaWRhdGVzIHdob3NlIHBvc2l0aW9ucyBhcmUgYXQgb2RkcyB3aXRoIHRob3NlIG9mIHJhbmsgYW5kIGZpbGUgUmVwdWJsaWNhbnMuIFNpbWlsYXJseSwgUmVwdWJsaWNhbiBvZmZpY2Vob2xkZXJzIG1heSBzdXBwb3J0IFRlYSBQYXJ0eSBwb3NpdGlvbnMgbGVzcyBmcm9tIGdlbnVpbmUgY29udmljdGlvbiB0aGFuIGZyb20gZmVhciBvZiBoYXZpbmcgdG8gZmFjZSBvZmYgYWdhaW5zdCBhIFRlYSBQYXJ0eSBiYWNrZWQgY2FuZGlkYXRlIGF0IHRoZSBuZXh0IHByaW1hcnkgKHRoZSBUZWEgUGFydHkgYWxzbyBiZW5lZml0cyBmcm9tIHRoZSBsYXZpc2ggZmluYW5jaWFsIHN1cHBvcnQgb2YgYWZmbHVlbnQgdWx0cmEgY29uc2VydmF0aXZlcywgaW5jbHVkaW5nIHRoZSBiaWxsaW9uYWlyZSBicm90aGVycyBDaGFybGVzIGFuZCBEYXZpZCBLb2NoKS4uIApZb3UncmUgcmlnaHQsIGZsb3AgYmV0IGlzIHN0YW5kYXJkLiBUaGUgdHVybiBiZXQgaXMgdGhlIHRyaWNreSBwYXJ0LiBJIHRoaW5rIHdlIGNhbiBtYWtlIGEgY2FzZSBmb3IgcmFpc2luZyBoZXJlIGFsdGhvdWdoIGl0IGlzIG9uIGEgY29tcGxldGUgYnJpY2suIApPdHRhd2EsIGxlIHByZW1pZXIgbWluaXN0cmUgSnVzdGluIFRydWRlYXUgYSBkY2xhciBxdWUgc29uIGdvdXZlcm5lbWVudCBhbGxhaXQgcHJlbmRyZSBzb24gdGVtcHMgZGFucyBjZSBkb3NzaWVyIGFmaW4gZGUgZmFpcmUgbGVzIGNob3NlcyBkZSBmYW9uIHJlc3BvbnNhYmxlLgpBbmQgeW91IGhhcHBlbiB0byBiZSBhIHBhcnQgb2YgdGhhdCBkZW1vZ3JhcGhpYyB5b3UgdGhpbmsgc2hlIGlzIHNwZWFraW5nIGlsbCBvZiBJIGFzc3VtZT8gRG9lcyBpdCBtYWtlIHlvdSB1bmNvbWZvcnRhYmxlIHdoZW4gcGVvcGxlIGV4ZXJjaXNlIHRoZWlyIHJpZ2h0IHRvIGZyZWUgc3BlZWNoIGp1c3QgYXMgeW91IGFyZSBub3c/IHNvIHdoYXQgaWYgdGhleSBoYXBwZW4gdG8gYmUgYSBjZWxlYnJpdHkgd2l0aCBhIGxhcmdlIG51bWJlciBvZiBmb2xsb3dlcnMuIEl0IGFscmlnaHQgZm9yIHlvdSB0byBzaXQgaGVyZSBhbmQgaGF0ZSBoZXIgYWJvdXQgd2hhdCBzaGUgc2F5cyB0byB0aGUgZmV3IHBlb3BsZSB3aG8gd2lsbCByZWFkIHlvdXIgbmVnYXRpdmUga2FybWEgY29tbWVudC4gSXQgYWxsIHRoZSBzYW1lIGFzIGl0IGlzIGZvciBoZXIgdG8gc2F5IHdoYXQgc2hlIHdhbnRzIHRvLiAKR2VudGx5IHJvbGwgdGhpcyBlZ2cgb3ZlciB0aGUgYnJ1aXNlIHVudGlsIHRoZSBlZ2cgd2FybXMgdXAuIERvIHRoaXMgMyB0aW1lcyBhIGRheSBvciBhcyBkZXNpcmVkLi4gClBhZ28gZW4gRXNwZWNpZSAoUGF5bWVudCBpbiBLaW5kKSBpcyBhIHNpeCBkZWNhZGUgb2xkIHByb2dyYW0gaW4gd2hpY2ggTWV4aWNhbiBhcnRpc3RzIGdpdmUgYSBwaWVjZSBvZiB0aGVpciBvd24gYXJ0d29yayB0byB0aGUgZ292ZXJubWVudCBpbiBvcmRlciB0byB6ZXJvIG91dCB0aGUgYW1vdW50IG9mIGZlZGVyYWwgdGF4ZXMgdGhleSBvd2UuIEluIGEgd2F5LCB0aGUgcHJvZ3JhbSBjdXRzIG91dCB0aGUgbWlkZGxlIG1hbjogQXJ0aXN0cyBkb24ndCBoYXZlIHRvIGhvY2sgdGhlaXIgd29ya3Mgb24gdGhlIHByaXZhdGUgbWFya2V0IGFuZCB0aGVuIHVzZSB0aGF0IGNhc2ggdG8gc2F0aXNmeSB0YXggb2JsaWdhdGlvbnMuIApJJ3ZlIG5ldmVyIHNlZW4gc28gbWFueSBjb3BzIGluIG15IGVudGlyZSBsaWZlLCIgV2Vsc2ggdG9sZCB0aGUgQ291cmllci4uIApUaGV5IGFsc28gZGlkbiBqdXN0IGRvIHRoZSBodW1hbmUgdGhpbmcgYW5kIGxldCBwZW9wbGUga25vdyB0aGV5IHdlcmUgZ2V0dGluZyBsYWlkIG9mZiBvciBub3Q6IHRoZXkgbWFkZSB0aGUgd2hvbGUgY29tcGFueSBnbyBob21lIGFuZCB3YXRjaCB0aGVpciBwZXJzb25hbCBlbWFpbCB0byBzZWUgaWYgdGhleSBnb3QgYSBwaW5rIHNsaXAuIElzIGl0IG1pZG5pZ2h0LCBhbmQgeW91IGRpZG4gZ2V0IGFuIGVtYWlsPyBNYXliZSB5b3Ugc3RpbGwgaGF2ZSBhIGpvYiEgT3IgbWF5YmUgdGhleSBzY3Jld2VkIHVwIHlvdXIgZW1haWwhIFdobyBrbm93cz8KQXMgYSBjb3NtZXRpYyBzdXJnZW9uIGZyb20gYSBHdWxmIHN0YXRlIHRvbGQgbWUsIGhlIHVzZWQgdG8gb25seSBzZWUgd29tZW4gZm9yIG5vc2Ugam9icyBiZWNhdXNlIGl0IHdhcyBjb25zaWRlcmVkIHVuSXNsYW1pYyB0byBzaG93IGEgbWFsZSBkb2N0b3IgeW91ciBib2R5IGZvciByZWFzb25zIG9mIHZhbml0eSBhcyBvcHBvc2VkIHRvIGlsbG5lc3MuIEhvd2V2ZXIsIGhlIHNlZXMgbW9yZSBhbmQgbW9yZSAoZnVsbHkgdmVpbGVkKSB3b21lbiBmb3IgYm9vYiBqb2JzIGFuZCBsaXBvLiBJcyBhIHRyZW5kIGhlIGhpbXNlbGYgc2VlcyBhcyBmdWxseSBJc2xhbWljIHNpbmNlIEdvZCBpcyBiZWF1dGlmdWwgYW5kIHRoZXJlZm9yZSB3ZSBtdXN0IGxvdmUgYmVhdXR5Li4gCkkga25vdyBvbmx5IGFzIG11Y2ggYXMgaGFzIGJlZW4gcGFzc2VkIGRvd24gdG8gbWUsIG9yIHRoYXQgSSByZWFkLiAKRXNwb3NpdG8gYW5kIENvb3BlciB3ZXJlIG1hcnJpZWQgZm9yIGp1c3QgZm91ciBtb250aHMgYW5kIGdvdCBkaXZvcmNlZCBpbiAyMDA3LiBJbiAyMDE0LCB0aGUgTkNJUyBhY3RyZXNzIGNhbGxlZCBvdXQgaGVyIGV4IGluIGhlciBib29rLCBKZW5uaWZlcidzIFdheS4gQWx0aG91Z2ggdGhlIGJvb2sgaXMgYWJvdXQgaGVyIGJhdHRsZSB3aXRoIENlbGlhYyBEaXNlYXNlLCBzaGUgdG9vayBzb21lIHRpbWUgdG8gdGhyb3cgc2hhZGUgYXQgQ29vcGVyLgpXaXRoIHRoZSBpbmNyZWFzaW5nIG1haW5zdHJlYW0gaW50ZXJlc3QgaW4gd2hhdCBMb3BleiBzYXlzIGlzIHNpbXBseSAiZ29vZCBiZWVyLCIgaGUgZ2V0cyBhc2tlZCBhIGxvdCBmcm9tIG90aGVycyBpbiB0aGUgaW5kdXN0cnkgaG93IHRvIHJlcGxpY2F0ZSB3aGF0IGhlJ3MgYWNjb21wbGlzaGVkLiBJdCdzIGEgZGlmZmljdWx0IHF1ZXN0aW9uLCBjb25zaWRlcmluZyBob3cgY3Jvd2RlZCB0aGUgaW5kdXN0cnkgICBib3RoIGJyZXdlcmllcyBhbmQgYmFycyBsb29raW5nIHRvIG9mZmVyIGEgcXVhbGl0eSBiZWVyIGxpc3QgICBoYXMgYmVjb21lLgo=|<---