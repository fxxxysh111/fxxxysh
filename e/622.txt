--->|SSB3YXMgZGVjbGFyZWQgZGVhZCBhdCAyMSBhbmQgZGlkbiBmaW5kIG91dCB1bnRpbCBJIHdhcyAyNCAgIGV2ZW4gbWFuYWdlZCB0byBnZXQgYSBjb3B5IG9mIHRoZSBjZXJ0aWZpY2F0ZSBmcm9tIE5ldyBZb3JrLiAKU2kgdm91cyBtYW5nZXogdHJvcCBkYW5zIGNldHRlIHByaW9kZSwgY2UgcXVpIGVzdCBmcnF1ZW50LCBjZSBzdXJwbHVzIHNlIHJndWxlcmEgbmF0dXJlbGxlbWVudCBwYXIgbGEgc3VpdGUuIFZvaWNpIHRvdXRlZm9pcyBxdWVscXVlcyBjb25zZWlscyBwb3VyIHF1ZSBsJ2luY29uZm9ydCBkZSByZXBhcyBsb3VyZHMgIHJwdGl0aW9uIG5lIGdjaGUgcGFzIGxhIGdvdXJtYW5kaXNlIGRlIHNhdm91cmVyIGRlcyBtZXRzIGRsaWNpZXV4Li4gCihBUCkgICBPcmVnb24gZWxlY3Rpb25zIGRpcmVjdG9yIGFuZCBhIHBvbGl0aWNhbCBhY3Rpb24gY29tbWl0dGVlIHRoYXQgZGlzZW5mcmFuY2hpc2VkIG5lYXJseSAxMDAgdm90ZXJzIGJ5IHR1cm5pbmcgdGhlaXIgYmFsbG90cyBpbiBsYXRlIGhhdmUgY29tZSB0byBhbiBhZ3JlZW1lbnQgaW4gd2hpY2ggbW9zdCBvZiBpdHMgZmluZSB3aWxsIGJlIHN1c3BlbmRlZCBhbmQgdGhlIGdyb3VwIHdpbGwgZGV0YWlsIGl0cyBwcm9jZWR1cmVzLCBvZmZpY2lhbHMgc2FpZCBGcmlkYXkuIFRoZSBpbmNpZGVudCByZXZlYWxlZCBhIHBvc3NpYmxlIGVsZWN0aW9uIHZ1bG5lcmFiaWxpdHkgaW4gW0ZEQSBhcHByb3ZlcyAxc3QgaW1tdW5vdGhlcmFweSBkcnVnIHRvIHRyZWF0IGJyZWFzdCBjYW5jZXJTdGF0ZSBhZ2VuY3kgbG9va3MgdG8gbW9yZSBsb2dnaW5nLCBpbXByb3ZlZCBmb3Jlc3QgaGVhbHRoSEVMRU5BLCBNb250LiAoQVApICAgTW9udGFuYSBmb3Jlc3RyeSBhZ2VuY3kgaXMgd29ya2luZyB3aXRoIGZlZGVyYWwsIGxvY2FsIGFuZCBwcml2YXRlIG9yZ2FuaXphdGlvbnMgdG8gaW5jcmVhc2UgbG9nZ2luZyBvbiBuYXRpb25hbCBmb3Jlc3RzIHRvIGltcHJvdmUgZm9yZXN0IGhlYWx0aCBhbmQgZGVjcmVhc2UgdGhlIHJpc2sgb2YgZGlzZWFzZSBhbmQgY2F0YXN0cm9waGljIGZpcmVzLiAKQnV0IFJ5YW4gY2FtZSB1bmRlciBoZWF2eSBjcml0aWNpc20gZnJvbSBjb25zZXJ2YXRpdmVzIGR1cmluZyBhIHByaXZhdGUgcGFydHkgbWVldGluZyBhbmQgdGhlbiB3YXMgY2FsbGVkIG91dCB0byBzcGVhayB0byBUcnVtcCBvbiB0aGUgcGhvbmUsIHNldmVyYWwgbGF3bWFrZXJzIHNhaWQuUnlhbiAgIHdobyBoYXMgYmVlbiBidXN5IGdpdmluZyBhIHNlcmllcyBvZiBmYXJld2VsbCBzcGVlY2hlcyBpbiByZWNlbnQgd2Vla3MgYXMgaGUgcGxhbnMgdG8gbGVhdmUgb2ZmaWNlICAgY2FuY2VsZWQgYSBzY2hlZHVsZWQgcHJlc3MgY29uZmVyZW5jZSBiZWZvcmUgaGUgYW5kIG90aGVyIEhvdXNlIEdPUCBsZWFkZXJzIHdlcmUgc3VtbW9uZWQgdG8gdGhlIFdoaXRlIEhvdXNlLlRydW1wIGR1cmluZyB0aGUgbWVldGluZyBzYWlkIGhlIHdvdWxkIG5vdCBzaWduIHRoZSBTZW5hdGUgcGFzc2VkIG1lYXN1cmUsIHByb21wdGluZyBSZXB1YmxpY2FucyB0byByZXdyaXRlIHRoZSBiaWxsLiJOYW5jeSBQZWxvc2kgc2FpZCB3ZSBkb24ndCBoYXZlIHRoZSB2b3RlcyB0byBwYXNzIGl0IGFuZCB3ZSdyZSBnb2luZyB0byBwcm92ZSBoZXIgd3JvbmcsIiBzYWlkIFNjYWxpc2UuIApBbmQgeWV0LCB0aGVyZSBhcmUgcGlwZSBib21icyBiZWluZyBzZW50IHRvIHBvbGl0aWNhbCBmaWd1cmVzLiBUaGVyZSBhcmUgaHVydGluZyBwZW9wbGUgb24gb3VyIHNvdXRoZXJuIGJvcmRlcnMgdHJ5aW5nIHRvIGVudGVyIG91ciBuYXRpb24gaWxsZWdhbGx5LiAKIkFuZCBJIGd1ZXNzIEkgaGF2ZSBhIHZlcnkgZGlmZmVyZW50IG1hcmtldCBpbiB0aGUgU3RhdGVzIHRoYW4gYW55d2hlcmUgZWxzZSBpbiB0aGUgd29ybGQuIFRoZSByZXN0IG9mIHRoZSB3b3JsZCwgdGhhdCBzb25nJ3Mgbm90IHRoZSBoaWdobGlnaHQgb2YgdGhlIHNob3cuIEl0J3Mgb25lIHNvbmcgYW1vbmdzdCBtYW55LCBtYW55IHNpbmdsZXMuIEFuZCBpdCdzIG11Y2ggbW9yZSB2YXJpZWQuIEJ1dCBpbiBBbWVyaWNhLCB0aGF0J3MgdGhlIG9ubHkgcmVhbCBzb25nIEkndmUgZ290IGFueSBhaXJwbGF5IG9uLCBwcm9wZXJseS4gQW5kIHNvIGl0IGlzIHRoYXQgdGhpbmcuIEFuZCBJIHRoaW5rIGl0IHByb2JhYmx5IGlzIGEgbGltaXRhdGlvbi4gQnV0IGFzIEkgc2F5LCBpZiBpdCdzIGEgcHJvYmxlbSwgaXQncyBhIGdvb2Qgb25lIHRvIGhhdmUuIgpBcmUgdGhlIEJyaXRpc2ggYWJvdXQgdG8gaW52YWRlCkFuZCBib3ksIGRpZCBJIGdldCBhIGxvdCBvZiBlbnRlcnRhaW5tZW50IGFuZCBleGNpdGVtZW50IGZvciBteSAkNi4uIApCdXQgd2hhdGV2ZXIsIGxldCBhc3NpZ24gdGhlbSBhIHJhbmdlIG9mOiBBUW8sIEFKIEE0LCBBMiwgSkogICA0NC4gRndpdyB0aGUgcGFpcnMgYWN0dWFsbHkgZG8gbWFrZSBzb21lIHNlbnNlIHRvIGRvbmsgZmxvcCB3aXRoLCB0aG91Z2ggdHVybiBsZXNzIHNvLCBidXQgSSBndWVzcyBpdCBzdGlsbCBub3QgaG9ycmlibGUuIApSZW1lbWJlciBndXlzLCBEb3VnIG1hZGUgdGhpcyBwb3N0IHdoZW4gaGUgcGxheWVkIG9ubHkgMTVrIGhhbmRzLiBUaGF0IGxpa2UgMiB3ZWVrcyB3b3J0aCBvZiBoYW5kcyBhdCBhIHZlcnkgY2FzdWFsIHBhY2UgZm9yIG1vc3Qgb25saW5lIHBsYXllcnMuIEhlIHdhcyBhdCB0aGUgVkVSWSBzdGFydCBvZiBoaXMgam91cm5leS4gCkJ1dCB0aGUgbHVuY2ggYW5kIGRpbm5lciBtZW51cyBhbHNvIHNob3djYXNlIHN1cnByaXNlcyBsaWtlIEFDIFN0eWxlIENsYW1zIENhc2luby4gClNoZSB0dXJuZWQgMzAgeWVhcnMgb2xkIGluIHByaXNvbiBsYXN0IHllYXIuSW4gcmVhbGl0eSwgdGhpcyBzaG91bGQgYmVlbiBjb25zaWRlcmVkIHNlbGYgZGVmZW5zZSwgYSByYXBpbmcgb2YgYSBtaW5vciwgYW5kIG1pbm9ycyBhbmQgY2hpbGRyZW4gc2hvdWxkIGFic29sdXRlbHkgTkVWRVIgYmUgYWxsb3dlZCB0byBiZSBsYWJlbGVkIGFzIHByb3N0aXR1dGVzIGluIGEgY291cnQgb2YgbGF3IHRoYXQgdXBob2xkcyB0aGUgc2FtZSBsYXcgdGhhdCBtaW5vcnMgY2Fubm90IGdpdmUgY29uc2VudCB0byBzZXguVGhpcyBpcyBqdXN0IG9uZSBjYXNlLiBZb3UgY2FuIGxvb2sgdGhlIHJlc3QgdXAgeW91cnNlbGYsIGlmIHlvdSByZWFsbHkgY2FyZSBhYm91dCB0aGUga2lkcyBhbmQgbm90IGp1c3QgZmVlbHMuIApUaGlzIGlzIGp1c3QgdGhlIGZpcnN0IHNldCBvZiBjaGFyZ2VzLCBhbmQgdGhlIHJlbWFpbmluZyAxMCBjb3VudHMgb2YgdGhlIGZpcnN0IHNldCBjYW4gYmUgcmV0cmllZCBiZWNhdXNlIHRoZSBqdXJ5IHdhcyBodW5nIChJIHRoaW5rKS4gVGhlIHNlY29uZCB0cmlhbCBvbiBkaWZmZXJlbnQgY2hhcmdlcyBzdGlsbCBhd2FpdHMgaGltLiAgIGVkaXQgICBhY3R1YWxseSwgaGUgcGxlZCBndWlsdHksIGJ1dCB0aGlzIHNlbnRlbmNlIHdhcyBvbmx5IGZvciB0aGUgZmlyc3Qgc2V0IG9mIGNoYXJnZXM7IGhlIHdpbGwgYmUgc2VudGVuY2VkIGZvciAybmQgY2hhcmdlcyBuZXh0IHdlZWssIGFjY29yZGluZyB0byBOWVQuLiAKQSBzb3VyY2UgdG9sZCBFISBOZXdzIGl0ICJqdXN0IGRpZG4ndCB3b3JrIG91dC4gClJlZ2V4IGJhc2VkIEhUTUwgcGFyc2VycyBhcmUgdGhlIGNhbmNlciB0aGF0IGlzIGtpbGxpbmcgU3RhY2tPdmVyZmxvdyBpdCBpcyB0b28gbGF0ZSBpdCBpcyB0b28gbGF0ZSB3ZSBjYW5ub3QgYmUgc2F2ZWQgdGhlIHRyYW5nZXNzaW9uIG9mIGEgY2hpbGQgZW5zdXJlcyByZWdleCB3aWxsIGNvbnN1bWUgYWxsIGxpdmluZyB0aXNzdWUgKGV4Y2VwdCBmb3IgSFRNTCB3aGljaCBpdCBjYW5ub3QsIGFzIHByZXZpb3VzbHkgcHJvcGhlc2llZCkgZGVhciBsb3JkIGhlbHAgdXMgaG93IGNhbiBhbnlvbmUgc3Vydml2ZSB0aGlzIHNjb3VyZ2UgdXNpbmcgcmVnZXggdG8gcGFyc2UgSFRNTCBoYXMgZG9vbWVkIGh1bWFuaXR5IHRvIGFuIGV0ZXJuaXR5IG9mIGRyZWFkIHRvcnR1cmUgYW5kIHNlY3VyaXR5IGhvbGVzIHVzaW5nIHJlZ2V4IGFzIGEgdG9vbCB0byBwcm9jZXNzIEhUTUwgZXN0YWJsaXNoZXMgYSBicmVhY2ggYmV0d2VlbiB0aGlzIHdvcmxkIGFuZCB0aGUgZHJlYWQgcmVhbG0gb2YgY29ycnVwdCBlbnRpdGllcyAobGlrZSBTR01MIGVudGl0aWVzLCBidXQgbW9yZSBjb3JydXB0KSBhIG1lcmUgZ2xpbXBzZSBvZiB0aGUgd29ybGQgb2YgcmVnZXggcGFyc2VycyBmb3IgSFRNTCB3aWxsIGluc3RhbnRseSB0cmFuc3BvcnQgYSBwcm9ncmFtbWVyIGNvbnNjaW91c25lc3MgaW50byBhIHdvcmxkIG9mIGNlYXNlbGVzcyBzY3JlYW1pbmcsIGhlIGNvbWVzLCB0aGUgcGVzdGlsZW50IHNsaXRoeSByZWdleCBpbmZlY3Rpb24gd2lsbCBkZXZvdXIgeW91ciBIVE1MIHBhcnNlciwgYXBwbGljYXRpb24gYW5kIGV4aXN0ZW5jZSBmb3IgYWxsIHRpbWUgbGlrZSBWaXN1YWwgQmFzaWMgb25seSB3b3JzZSBoZSBjb21lcyBoZSBjb21lcyBkbyBub3QgZmlnaHQgaGUgY29tZXMsIGhpcyB1bmhvbHkgcmFkaWFuY2UgZGVzdHJveWluZyBhbGwgZW5saWdodGVubWVudCwgSFRNTCB0YWdzIGxlYWtpbmcgZnJvbSB5b3VyIGV5ZXMgbGlrZSBsaXF1aWQgcGFpbiwgdGhlIHNvbmcgb2YgcmVndWxhciBleHByZXNzaW9uIHBhcnNpbmcgd2lsbCBleHRpbmd1aXNoIHRoZSB2b2ljZXMgb2YgbW9ydGFsIG1hbiBmcm9tIHRoZSBzcGhlcmUgSSBjYW4gc2VlIGl0IGNhbiB5b3Ugc2VlIGl0IGl0IGlzIGJlYXV0aWZ1bCB0aGUgZmluYWwgc251ZmZpbmcgb2YgdGhlIGxpZXMgb2YgTWFuIEFMTCBJUyBMT1NUIEFMTCBJUyBMT1NUIHRoZSBwb255IGhlIGNvbWVzIGhlIGNvbWVzIGhlIGNvbWVzIHRoZSBpY2hvciBwZXJtZWF0ZXMgYWxsIE1ZIEZBQ0UgTVkgRkFDRSBoIGdvZCBubyBOTyBOT09PTyBOIHN0b3AgdGhlIGFuZ2xlcyBhcmUgbm90IHJlYWwgWkFMRyBJUyBUTyBUSEUgUE9OWSBIRSBDT01FU0kgcmVtZW1iZXIgb25lIHllYXIgaXQgc3RhcnRlZCByYWluaW5nIHJlYWxseSBoYXJkIGFuZCBteSBicm90aGVyIGFuZCBJIHJhbiBvdXRzaWRlIHRvIHBsYXkgaW4gaXQuIApBbmQgd2hlbiB5b3UgYWRkIGEgbGl0dGxlIGNpdHJ1cyB0byB0aGUgbWl4dHVyZSwgeW91IGhhdmUgbW9yZSB0aGFuIGEgcmVjaXBlIGZvciBndWFjYW1vbGUgICB5b3UgaGF2ZSBhIGNvbWJpbmF0aW9uIHRoYXQgbm90IG9ubHkga2VlcHMgY3V0aWNsZXMgbW9pc3R1cml6ZWQsIGJ1dCBhbHNvIGhlbHBzIHRoZW0gYWJzb3JiIHRoYXQgbW9pc3R1cmUuIApNZSBhbmR5IGJveWZyaWVuZCBtZXQgaW4gN3RoIGdyYWRlLCB3aGVuIHdlIHdlcmUgdHdlbHZlIHllYXJzIG9sZC4gV2UgaGFkIGFsbCB0aGUgc2FtZSBtdXR1YWwgZnJpZW5kcyBhbmQgaHVuZyBvdXQgaW4gYSBncm91cCwgYnV0IGhlIHdhcyBhIGNodWJieSBsaXR0bGUgYXNzaG9sZXMgd2hvIHVzZWQgdG8gdGhyb3cgY3JheW9ucyBhdCBteSBjbGVhdmFnZS4gCkxlYWRpbmcgb3RoZXJzIHRvIGlsbGVnYWwgc3RyZWFtcyBvciB0b3JyZW50cyBpbmNsdWRlcyBleHBsaWNpdGx5IG1lbnRpb25pbmcgc3BlY2lmaWMgc3RyZWFtaW5nL3RvcnJlbnRpbmcgc2l0ZXMsIG9mZmVycyB0byBzZW5kIHVzZXJzIGlsbGVnYWwgY29udGVudCwgYW5kIGxlYWRpbmcgdG8gcHJveHkgc2VydmljZXMgdG8gY2lyY3VtdmVudCBsaWNlbnNpbmcuIEluIGFkZGl0aW9uLCBwcm94eSBzZXJ2aWNlcyBhcmUgYWxzbyBmb3JiaWRkZW4uLiAKVHJhY2tpbmcgdGhlaXIgcHJvZ3Jlc3MgdGhyb3VnaG91dCB0aGUgZ2FtZXMsIEhpbGwgZm91bmQgdGhhdCB0aG9zZSBhc3NpZ25lZCB0aGUgcmVkIGtpdHMgd2VyZSBhYm91dCA1JSBtb3JlIGxpa2VseSB0byB3aW4gdGhlaXIgYm91dCB0aGFuIHRoZSBibHVlcy4gd2VhcmluZyByZWQgZG9lc24gdHVybiB5b3UgaW50byBhbiBleGNlbGxlbnQgY29tcGV0aXRvciwgc2F5cyBIaWxsLiBpdCBoZWxwcyB0aXAgdGhlIGJhbGFuY2UgYmV0d2VlbiB3aW5uaW5nIGFuZCBsb3Npbmcgd2hlbiBwZW9wbGUgYXJlIGZhaXJseSBldmVubHkgbWF0Y2hlZC4gVGhpcyBmaXJzdCBpbiBzY2FybGV0IHRyaWdnZXJlZCBhIGhvc3Qgb2Ygb3RoZXIgZXhwZXJpbWVudHMsIGZpbmRpbmcgc2ltaWxhciByZXN1bHRzIHdpdGggZm9vdGJhbGwgcGVuYWx0eSBzaG9vdGVycywgZm9yIGluc3RhbmNlOiB0aGV5IGFyZSBsZXNzIGxpa2VseSB0byBzY29yZSBpZiB0aGUgZ29hbGllIGlzIHdlYXJpbmcgcmVkLiBTb29uLCBjb2xvdXIgcHN5Y2hvbG9neSB3YXMgYSBjcmVkaWJsZSBzY2llbnRpZmljIGZpZWxkIGluIGl0cyBvd24gcmlnaHQuIHBhcGVyIHdhcyByZWFsbHkgcmVzcG9uc2libGUgZm9yIHRoaXMgcmVzdXJnZW5jZSBpbiBpbnRlcmVzdCBpbiBjb2xvdXIgYW5kIGl0cyBwb3NzaWJsZSBlZmZlY3RzLCBzYXlzIEFuZHJldyBFbGxpb3QgYXQgdGhlIFVuaXZlcnNpdHkgb2YgUm9jaGVzdGVyIGluIE5ldyBZb3JrIFN0YXRlLgpQb2x5ZXVjdGU6IDE4ODcgVmVyc2lvbiAoRnJlbmNoIHBkZiBkb3dubG9hZC4gUG9seWV1Y3RlOiAxODg3LiBDREE2NjgwMS8yICAgR291bm9kOiBTb25ncy4gQ0RBNjY4MDEvMi4gRGlnaXRhbCBib29rbGV0IChQREYpLiBUaGUgSHlwZXJpb24gRnJlbmNoIFNvbmcgRWRpdGlvbiAuIERvd25sb2FkIGFsbCBNUDMgMTAuMDAuIERvd25sb2FkIGFsbCBGTEFDIDEwLjAwLi4gClNsZWVweXRpbWUgR29yaWxsYSBNdXNldW0gICBPZiBOYXR1cmFsIEhpc3Rvcnk6IEkgdXNlZCB0byBoYXZlIHRoaXMgYWxidW0geWVhcnMgYWdvLCBzb2xkIGl0IHRvIGEgZnJpZW5kLCB3aG8gdGhlbiBzb2xkIGl0IHRvIG15IGNvdXNpbmcgd2hvIHNvbGQgaXQgYmFjayB0byBtZSBsYXN0IHdlZWsuIEkgaGFkIG9ubHkgaGVhcmQgdGhlIGFsYnVtIHR3aWNlIGFsbW9zdCAxMiB5ZWFycyBhZ28gKEkgZ290IGl0IGEgbW9udGggYWZ0ZXIgcmVsZWFzZSwgSSB3YXMgYSBodWdlIGZhbiBvZiBJZGlvdCBGbGVzaCBiYWNrIHRoZW4pIGFuZCBkaWQgbm90IGxpa2UgaXQuLiAKQW5kIFBhcmtpbiwgQi4gKGVkLikgU3BvcnQgYW5kIHRoZSBCcmFpbjogVGhlIFNjaWVuY2Ugb2YgUHJlcGFyaW5nLCBFbmR1cmluZyBhbmQgV2lubmluZywgUGFydCBCIEVsc2V2aWVyLiBQcC4gCkluIHRoZWlyIHVuaXZlcnNpdHkgcmVzZWFyY2gsIENhcGFsZGkgYW5kIE1hcnVzaWNoIHN0dWR5IHRoZSBlbmVyZ3kgcHJvZHVjdGlvbiBwb3dlcmhvdXNlcyBpbiBjZWxscyBjYWxsZWQgIm1pdG9jaG9uZHJpYSIgYW5kIHNlYXJjaCBmb3IgbXV0YXRpb25zIG9mIHRoZSBETkEgaW5zaWRlIG1pdG9jaG9uZHJpYSB0aGF0IGFyZSBiZWxpZXZlZCB0byBjYXVzZSBjb21tb24gbGF0ZSBvbiBzZXQgaHVtYW4gYWlsbWVudHMgc3VjaCBhcyBQYXJraW5zb24ncyBhbmQgQWx6aGVpbWVyJ3MgZGlzZWFzZXMsIGFzIHdlbGwgYXMgbm9uIGluc3VsaW4gZGVwZW5kZW50IGRpYWJldGVzLiAKV2hlbiBhbiB1bmRlcmNvdmVyIGFnZW50IHdlbnQgdG8gdGhlIHBhcmxvciBvbiBNYXkgMTEsIGEgZmVtYWxlIGVtcGxveWVlIHRvbGQgaGltIHRoZSBtYXNzYWdlIHdvdWxkIGJlICQyNiBhbmQgImEgc2V4dWFsIGFjdCwgdG8gd2l0IG1hbnVhbCBzdGltdWxhdGlvbiIgd291bGQgYmUgYW5vdGhlciAkNjAsIHRoZSBsYXdzdWl0IGNoYXJnZXMuClNjb29wIFJldmlldyBvZiBCb29rcyBPdXIgQW5pbWFscwpBY2NvbW1vZGF0aW9uIFRpcHMgZm9yIFNvdXRoZWFzdCBBc2lhIG9uIGEgQnVkZ2V0IFNpbmNlIHlvdT9yZSB0cmF2ZWxpbmcgU291dGhlYXN0IEFzaWEgb24gYSBpdCBlYXNpZXIgdG8gYWRhcHQgYXMgeW91IGNhbiBnbyBpbW1lZGlhdGVseSB0byBiZWQuIFdoZW4gYSBtdWcgZ2V0cyB0aGUgc3dlYXRzLCB0aGV5IGNhbiBsZWF2ZSB3YXRlciB3aXRoIGEgZGVzaWduZXIgYmFja3BhY2sgc3R1ZmZlZCB3aXRoIGV4dHJhIGdlYXIgdGhhdCBhZGRzIGFuIGV4dHJhIDEwIHBvdW5kcy4gRGVwZW5kaW5nIG9uIHdoZXJlIHlvdSBjaG9vc2UgdG8gZ28sIGl0IG1heSB5b3VyIG1vbmV5IGluIHB1YmxpYywgd2VhcmluZyBleHBlbnNpdmUgd2F0Y2hlcyBvciBqZXdlbHJ5ICwgeW91IHdpbGwgYmUgcXVpY2tseSB0YXJnZXRlZCBieSBzZWFzb25lZCBjcmltaW5hbHMuIApJbiBvcmRlciB0byBhbGxvdyB1cyB0byBjdXN0b21pc2Ugb3VyIGNvbnRlbnQgZm9yIHlvdSwgd2UgbmVlZCB0byByZW1lbWJlciB3aG8geW91IGFyZSBhbmQgd2hhdCB5b3Ugd2FudC4gCkl0cyBub3QgYXMgc2ltcGxlIGFzIHRoZXkgc2FpZCB0aGlzLCBvciBhY3RlZCB0aGlzIHdheSBGb3IgZXhhbXBsZSwgSSBrbm93IHRoYXQgYmFkIHBsYXllcnMgd2lsbCBzaXQgYmFjayBpbiB0aGVpciBjaGFpciwgc3ByZWFkIG91dCwgb3IgZ2V0IHJlYWxseSBjaGF0dHksIHdoZW4gdGhleSBhcmUgY29uZmlkZW50LiBTbyBpZiBJIGhhdmUgc29tZW9uZSBjb252aW5jZWQgSSBhbSBhIG5vdmljZSBvciB3aGF0ZXZlciwgSSBjYW4gZG8gdGhpcyBhIGNvdXBsZSBvZiB0aW1lcyBhcyBhIGJsdWZmLiBUb255IEcgaXMgcHJldHR5IHdlbGwga25vd24gZm9yIGJlaW5nIGNoYXR0eSBhcyBmdWNrLCBibHVmZiBvciBudXRzLgpUaGlzIGlzIG5vdCB0aGUgb25seSB3YWxsLiAKSSB1c2VkIFBva2kncyBQb2tlciBBY2FkZW15IHRvIGxlYXJuIHBva2VyIGJlZm9yZSB0YWtpbmcgdGhlIHBsdW5nZSB3aXRoIGludGVybmV0IHBva2VyLiBJdCBpcyB3aXRob3V0IGEgZG91YnQgdGhlIGJlc3QgcG9rZXIgc29mdHdhcmUgYXZhaWxhYmxlLgpNYXliZSB5b3UgaGF2ZSBhIGRvZyB0aGF0IG5lZWRzIHRvIGJlIGV4ZXJjaXNlZCwgb3IgYSBqb2IgdG8gZ28gdG8gb3IgYSB0b2RkbGVyIHRvIGNoYXNlIGFyb3VuZCAgIHRoYXQgZG9lc24ndCBtYXR0ZXIsIHRob3VnaC4gCkEgdGhpZWYgb3Igcm9ndWUgaXMgZ29ubmEgYmUgdG91Z2hlciBhbmQgdGFrZSBhIGxvdCBtb3JlIG1pY3JvIG1hbmFnaW5nLi4gCk5lZ290aWF0aW5nIGlzIHRvdWdoLCBlc3BlY2lhbGx5IG9uIGVhc3kgdG8gc2VsbCByZWZlcmVuY2VzLiAKSGUgc2F5cyBoZSB3YW50cyBhIGJlYXV0aWZ1bCBmYW1pbHk/IEJlIGEgYmVhdXRpZnVsIGdpcmxmcmllbmQuIFdhbnQgaGltIHRvIGtlZXAgbG9va2luZyBhdCB5b3UgYW5kIG9ubHkgeW91PyBUaGVyZSBubyBiZXR0ZXIgd2F5IHRoYW4gdG8gZ2V0IHJlYWxseSBob3QuV2hvIGNhcmVzIGFib3V0IHRoZXNlIG90aGVyIGdpcmxzLiBUaGV5IGxvb2sgdG8gaGltIGFzIGEgcGF5Y2hlY2suIFRoZXkgbG9vayBhdCBoaW0gYXMgYSBiZXRhIHByb3ZpZGVyLiAKRm9yIGRheSB0byBkYXkgZGV0YWlscywgc3VjaCBhcyB3aGF0IGZvb2Qgc2hvdWxkIGJlIHNlcnZlZCBhbmQgd2hpY2ggbGFuZ3VhZ2Ugc2hvdWxkIGJlIHVzZWQsIG1hbnkgb2YgdGhlIGNhc3QgYW5kIGNyZXcgbWVtYmVycywgYnV0IGVzcGVjaWFsbHkgS3dhbiwgd2VyZSB0cmVhdGVkIGFzIG9uIHNldCBleHBlcnRzLiBKdXN0IG9wZW5lZCBhIGNoYW5uZWwgb2YgY29tbXVuaWNhdGlvbiBvbiBhIHNldCB3aGVyZSBpdCB1c3VhbGx5LCBkbyB3aGF0IHRoZSBkaXJlY3RvciBzYXlzLCBDaHUgc2F5cy4gCklhbiwgbWFycmllZCB3aXRoIHRocmVlIGNoaWxkcmVuLCBoYXMgaGlzIG93biBvZmZpY2UgaW4gYSByZXN0b3JlZCAxOTEwIGNvbnRyYWN0b3IncyBodXQgb24gd2hlZWxzIGdpdmVuIHRvIGhpbSBieSBhIGZhcm1lciBhcyBhIHdyZWNrLgoiV2UgaGF2ZSBubyA1RyBwaG9uZXMgeWV0OyB3ZSBoYXZlIHNlZW4gcHJvdG90eXBlcyBvbiB0aGUgc2hvd3Jvb20gZmxvb3IsIGJ1dCBpZiB0aGVyZSBpcyBubyA1RyBwaG9uZSwgSSBkb24ndCB1bmRlcnN0YW5kIGhvdyBBVCBjYW4gYmUgcnVubmluZyBhIDVHIG5ldHdvcmsuIi4gCldoZW4gc3VjaCBwcmFjdGljZXMgYXJlIGFsbG93ZWQgdG8gYmVjb21lIHNvIGVtYmVkZGVkIChldmVyeSBlbGVtZW50YXJ5IGtpZCBoYWQgYW4gUjQgY2FyZCBpbiB0aGVpciBOaW50ZW5kbyBEUyB0ZW4geWVhcnMgYWdvKSwgaXMgaXQgYW55IHN1cnByaXNlIHRoYXQgcGVvcGxlIHdvdWxkIGFsc28gcGlyYXRlIHRoZWlyIGNvbWljcz9BdHRpdHVkZXMgYWJvdXQgcGlyYWN5IGFyZSBkZWZpbml0ZWx5IGNoYW5naW5nIGZvciB0aGUgcG9zaXRpdmUgaGVyZSwgYnV0IGl0IHN0aWxsIHNlZW1zIGxpa2UgdGhlc2UgcHVibGlzaGVycyB3aWxsIG5lZWQgYSBkaWZmZXJlbnQgYnVzaW5lc3MgbW9kZWwgaWYgdGhleSByZWFsbHkgd2FudCB0byB0aHJpdmUgaW4gdGhlIHNob3J0IHRlcm0uLiAKTWF4aXRvYm9uaXRvICAxIHBvaW50ICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpJbiBhIGxhbmQgYmFzZWQgY2FzaW5vLCBjYXNoaW5nIGluIGlzIGFzIGVhc3kgYXMgcHJlc2VudGluZyB5b3VyIGNoaXBzIHRvIHRoZSBjb3VudGVyLiBJbiBvbmxpbmUgcG9rZXIsIGNhc2hpbmcgaW4gaXMgbm90IGEgcHJvYmxlbS4gSXQgaXMganVzdCB0aGF0IHRoZXJlIGFyZSBtb3JlIHN0ZXBzIGluIGNhc2hpbmcgb3V0LgpFbGl0ZSBTRU0sIGFuIGludGVncmF0ZWQgZGlnaXRhbCBtYXJrZXRpbmcgZmlybSwgdHJpZXMgdG8gZm9zdGVyIGEgc2Vuc2Ugb2YgZW1wb3dlcm1lbnQgYW5kIGVuY291cmFnZXMgc3RhZmYgdG8gdGFrZSBhbiBlbnRyZXByZW5ldXJpYWwgYXBwcm9hY2ggdG8gcHJvYmxlbSBzb2x2aW5nLiBFbXBsb3llZXMgaW4gTG9zIEFuZ2VsZXMgYW5kIFBoaWxhZGVscGhpYSwgZm9yIGV4YW1wbGUsIGFwcHJvYWNoZWQgaHVtYW4gcmVzb3VyY2VzIHdpdGggaWRlYXMgdG8gYm9vc3QgZGl2ZXJzaXR5OyBzdGFmZmVycyB0aGVuIHRvb2sgb3duZXJzaGlwIG9mIHRoZSBwcm9qZWN0LCBpbmNsdWRpbmcgcmVjcnVpdGluZyBtb3JlIGF0IGRpdmVyc2UgY29sbGVnZXMsIHdpdGggc3VwcG9ydCBmcm9tIEhSLiBUaGUgY29tcGFueSBzYXlzIGFib3V0IGEgcXVhcnRlciBvZiBpdHMgc3RhZmYgaXMgbm93IGZyb20gYSBtaW5vcml0eSBvciBtdWx0aWN1bHR1cmFsIGdyb3VwLi4gClBlcmhhcHMgbm90IHRoYXQgaGUgYmVlbiB0byB0aGlzIHNwZWNpZmljIGxvY2F0aW9uIG1vcmUgdGhhbiBvbmNlLCBpdCBidXQgaXMgYW4gZW5vcm1vdXMgYW1vdW50IG9mIHNwZWN1bGF0aW9uIHRvIGNvbmNsdWRlIHRoYXQgaGUganVzdCBoYXZlIHNlZW4gb3RoZXIgZ2lybHMuIFRoZSByZXBvcnQgc2F5cyB0aGF0IHRoZSB2aWRlbyBzaG93cyBoZSB3YXMgdHJlYXRlZCBieSBhIGJpZyBzbWlsZSBhbmQgaHVnIGZyb20gYm90aCB3b21lbiB3aGVuIGhlIHNhdyB0aGVtLiAKWW91IG1heSBhbHNvIG5vdGljZSB0aGF0IG9uZSBzbGVldmUgaXMgbG9uZ2VyIHRoYW4gdGhlIG90aGVyIHdoZW4geW91IHdlYXIgYSBzaGlydC4KV2UgbWF5IGNvbGxlY3QgcGVyc29uYWwgaW5mb3JtYXRpb24gYWJvdXQgb3VyIHVzZXJzIGluIHZhcmlvdXMgd2F5cy4gRm9yIGV4YW1wbGUsIHdlIG1heSBjb2xsZWN0IGluZm9ybWF0aW9uIHRoYXQgeW91IHByb3ZpZGUgdG8gdXMsIGluZm9ybWF0aW9uIHRoYXQgd2UgY29sbGVjdCB0aHJvdWdoIHlvdXIgdXNlIG9mIHRoZSBTZXJ2aWNlcywgYW5kIGluZm9ybWF0aW9uIHRoYXQgd2UgY29sbGVjdCBmcm9tIHB1YmxpY2x5IGF2YWlsYWJsZSBzb3VyY2VzIG9yIHRoaXJkIHBhcnRpZXMuIEZvciBleGFtcGxlLCBkdXJpbmcgYWNjb3VudCByZWdpc3RyYXRpb24sIHdlIG1heSBhc2sgZm9yIGluZm9ybWF0aW9uIHN1Y2ggYXMgeW91ciBuYW1lLCBlIG1haWwgYWRkcmVzcywgeWVhciBvZiBiaXJ0aCwgZ2VuZGVyLCBzdHJlZXQgYWRkcmVzcywgam9iIHRpdGxlIGFuZCBpbmR1c3RyeSBhbmQgcmVsYXRlZCBpbmZvcm1hdGlvbi4gV2UgbWF5IGNvbGxlY3QgcGF5bWVudCBpbmZvcm1hdGlvbiwgc3VjaCBhcyB5b3VyIGNyZWRpdCBjYXJkIG51bWJlciBhbmQgZXhwaXJhdGlvbiBkYXRlLCB3aGVyZSBhcHByb3ByaWF0ZSB0byBwcm9jZXNzIGEgZmluYW5jaWFsIHRyYW5zYWN0aW9uIHlvdSBoYXZlIHJlcXVlc3RlZC4KUGVyc29uYWwgZXhwZXJpZW5jZXMgYXJlIG9mdGVuIG1pc3Npbmcgdml0YWwgaW5mb3JtYXRpb24uIEZvciBvbmUsIHdlIGhhdmUgbm8gaWRlYSBob3cgc2VsZiBhd2FyZSB5b3UgYXJlLiBGb3IgYWxsIEkga25vdywgeW91IGRvbiBoYXZlIGEgdG9uIG9mIGxpYmVyYWwgZnJpZW5kcyBhbmQgeW91IG1heSBoYXZlIGEgdmVyeSBvZmYgcHV0dGluZyBwZXJzb25hbGl0eSB0aGF0IGlzIGEgdHVybiBvZmYgZm9yIGxpYmVyYWxzLiAKV2hlbiBJIGpvaW5lZCBoMmcyIChsZXNzIHRoYW4gYSB5ZWFyIGFnbykgSSwgbGlrZSBtb3N0IG5ldyB1c2VycywgZW5kZWQgdXAgc3BlbmRpbmcgYSBsb3Qgb2YgdGltZSBhcm91bmQgYXNraDJnMi4gSSByZWFsbHkgZW5qb3llZCBnZXR0aW5nIGludG8gc29tZSBvZiB0aGUgc2VyaW91cyBkZWJhdGVzIHRoYXQgd2VyZSBmbG9hdGluZyBhcm91bmQsIGdvZCBmYWN0IG9yIGZpY3Rpb24sIHRoYXQgc29ydCBvZiB0aGluZy4gUmVjZW50bHkgKFRob3VnaCBJJ20gdG9sZCBieSBzb21lIG9mIHRoZSBvbGRlciB1c2VycyB0aGlzIGhhcyBiZWVuIGhhcHBlbmluZyBmb3IgcXVpdGUgc29tZSB0aW1lLikgYXNrIGhhcyBiZWNvbWUgY292ZXJlZCBpbiB3b3JkIGdhbWVzIGFuZCB0cml2aWFsaXRpZXMgYW5kIEkgZm91bmQgbXlzZWxmIGRpc3NhcG9pbnRlZGx5IGxvb2tpbmcgdGhyb3VnaCBwYWdlcyBvZiB0b3BpY3MgaW4gdGhlIHZhaW4gaG9wZSBvZiBmaW5kaW5nIG9uZSB0aHJlYWQgdGhhdCBJIHdhbnRlZCB0byBjb21tZW50IG9uLiAKSSBzdWdnZXN0IHBlb3BsZSB3aG8gaGF2ZSBtdWx0aXBsZSBjYXJkcyBrZWVwIDEgb3IgMiBhdCBob21lLiAKU3RhZmYgaGF2ZSBiZWVuIGNvb3JkaW5hdGluZyB3aXRoIGEgcmVzaWRlbnQgbGVhZGVyc2hpcCBjb21taXR0ZWUsIHRoZSBtZW1iZXJzIG9mIHdoaWNoIHJlcHJlc2VudCBkaXN0cmljdHMgd2l0aGluIHRoZSBjb21tdW5pdHkgYW5kIHBhc3MgYWxvbmcgaW5mb3JtYXRpb24gZnJvbSByZWd1bGFyIG1lZXRpbmdzIHdpdGggY2l0eSBzdGFmZi4KVGhlIGdlbmllIG9mIGRpdmlzaW9uIHRoYXQgaGlzIGVsZWN0aW9uIGhhcyBnZW5lcmF0ZWQgd2lsbCBub3QgZ28gYmFjayBqdXN0IGJlY2F1c2UgaGUgaXMga2VlcGluZyBoaXMgdHJhcCBzaHV0LiBUaGUgVVMgaXMgb24gZmlyZSB3aXRoIGZlYXIgYW5kIHVuY2VydGFpbnR5IGFuZCB0aGVyZSBhcmUgbWlsbGlvbnMgd2hvIHNpbXBseSBjYW5ub3QgZ2V0IG92ZXIgdGhlIGZhY3QgdGhhdCB0aGV5IGhhdmUgYmVlbiBUcnVtcGVkLiAKRm9yIGFyZ3VtZW50LCBsZXQganVzdCBzYXkgdGhleSBkcm9wIHNraW4gcHJpY2VzIHRvIGEgZmxhdCAkMTAuIApSZW1pbmd0b250aGVzaG90Z3VuIHUKSXZlIGdvdCBteSBkeW5hbWljcyB0aGlzIHdlZWsgc3RpbGwsIGJ1dCBpIG1heSBlbmQgdXAgZG9nZ2luZyBvbmUgb2YgdGhlbSBiZWNhdXNlIGkgY2FuIG9ubHkgZ2V0IGluIHRvbW9ycm93IGFuZCB0aHVycyBmb3IgdGhlIHJlc3Qgb2YgdGhlIHdlZWsuIFRoZW4gaW0gZGVsb2FkaW5nLCB3aGljaCBpIGFtIGFic29sdXRlbHkgc3Rva2VkIGZvci4KVmFuZG9yZW4gcmVlZHMgYXJlIGdlbmVyYWxseSBhIGhhbGYgc2l6ZSBoYXJkZXIgdGhhbiB0aGVpciBSaWNvIG9yIG90aGVyIGJyYW5kIGNvbXBldGl0b3JzLiAKVm9zIGlzIGFjdHVhbGx5IG9sZGVyIHRoYW4gdm9zb3Ryb3MuIEl0IGNvbWVzIGZyb20gTGF0aW4gdnMuIEluIFNwYW5pc2gsIHZvcyB1c2VkIHRvIGJlIHRoZSAiZm9ybWFsIHlvdSIsICh0aGUgViBpbiB0aGUgVCBWIGRpc3RpbmN0aW9uKSBidXQgaXQgd2FzIHJlcGxhY2VkIGJ5IHVzdGVkLiAKVW5sZXNzIHRoZXkgYXJlIHRoZSBvbmx5IHBlcnNvbiB3b3JraW5nIHRoZXJlICh1bmxpa2VseSksIHlvdSBzaG91bGQgYmUgc29saWQuIEJlIGZyaWVuZGx5IGFuZCBzYXkgSGkgYW5kIGFzayBmb3IgdGhlaXIgbmFtZS4gCklmIHRvbW9ycm93LCBBbGV4YW5kcmlhIE9jYXNpbyBDb3J0ZXogc3Rvb2QgdXAgaW4gdGhlIGhvdXNlIGFuZCB5ZWxsZWQgKGZhbHNlbHkpIHRoYXQgdGhlcmUgd2FzIGEgYm9tYiB1bmRlciBoZXIgc2VhdCwgc2hlIGNvdWxkIGdldCBwcm9zZWN1dGVkIGZvciB0ZXJyb3Jpc3RpYyB0aHJlYXRzLiAKV2h5IHdvdWxkIHlvdSBwYXkgbW9uZXkgZm9yIHRoZSBwcml2aWxlZ2UgdGhhdCBzb21lb25lIGVsc2UgY2FuIHJlYWQgeW91ciBkYXRhPyBNb3N0IGVhcmx5IFdlYiBwYWdlcyBkaWQgbm90IGVhcm4gbW9uZXkgYXQgYWxsLCB0aGV5IHdlcmUgcHJvdmlkZWQgYnkgdW5pdmVyc2l0aWVzIGZvciBmcmVlIG9yIHVzZWQgYnkgY29tcGFuaWVzIGFzIGFkZHJlc3MgYm9vayBwYWdlcyAgIGhlcmUgb3VyIG5hbWUsIG91ciBwaG9uZSBudW1iZXIsIGFuZCB3aGF0IHdlIGRvLiAKTm90IGZvciB0aGUgImZyaWVkIGNoaWNrZW4iIGxpbmVzLCBidXQgYmVjYXVzZSBzaGUgd2FzIGEgYmFkYXNzIGFuZCBzaGUgd2FzIHRvdWdoIGFuZCBhIGZpZXJjZWx5IGxveWFsIGZyaWVuZC4gClRoaXMgcG9zdCBpcyBiZXlvbmQgbWFkZSB1cC4gTm8gZmFjdHVhbCBpbmZvIGF0IGFsbC4gRW52aXJvbm1lbnRhbCBncm91cHMgZG8gTk9UIGVtcGxveSBmb3Jlc3RlcnMgb3IgYW55Ym9keSB3aXRoIGEgZm9yZXN0IHNjaWVuY2UgZGVncmVlLiAKSWYgSSBoYWQgY2x1bmcgdG8gdGhlIHBlcnNvbiB3aG8gbGVmdCBtZSwgSSB3b3VsZG4gaGF2ZSBoYWQgdGhlIHNwYWNlIHRvIGdyb3cuLiAKV2hpbGUgZGVmZXJyYWwgY292ZXJzIG9mZiBsb25nZXZpdHkgcmlzaywgbGlmZSBleHBlY3RhbmN5IG1heSBiZSBzaG9ydGVyIHRoYW4geW91IGltYWdpbmUuCkV2ZXJ5IHJvdW5kIHlvdSBnZXQgYSBuZXcgc2V0IG9mIGNhcmRzIGFuZCB5b3UgaGF2ZSB0byBkZWNpZGUgaG93IHRvIHBsYXkgdGhlbS4gClRTQSBzcG9rZXNtYW4gTWljaGFlbCBCaWxlbGxvIHR3ZWV0ZWQgdGhhdCA1LjUgcGVyIGNlbnQgb2YgdGhlIFRTQSB3b3JrZm9yY2UgYXQgRGFsbGFzL0ZvcnQgV29ydGggSW50ZXJuYXRpb25hbCBBaXJwb3J0IGNhbGxlZCBvdXQgRnJpZGF5LCBjb21wYXJlZCB3aXRoIDMuNSBwZXIgY2VudCBvbiBhIG5vcm1hbCBkYXkuIEhlIHNhaWQgd2FpdCB0aW1lcyAibWF5IGJlIGFmZmVjdGVkIiBidXQgdGhhdCBhbGwgcGFzc2VuZ2VycyB3b3VsZCBiZSBzY3JlZW5lZCBhcyBub3JtYWwuCkFsc28gZ2V0IGEgbWluaW11bSBvZiAzNiBkYXlzIGFzIHBhaWQgaG9saWRheSBwZXIgeWVhci4uIApUaGVyZSdzIGFsc28gVGhlIEZhbWUgTW9uc3RlciAoZGVsdXhlIGVkaXRpb24pIChGdWxsIEFuc3dlcikuIApJIGxvdmUgdGhlIGxhdGUsIGdyZWF0IEpvaG4gQ2FuZHkgYW5kIG9mdGVuIHJlbGF4IHdpdGggaGlzIG1vdmllcy4gTXkgZmF2b3JpdGVzLCBVbmNsZSBCdWNrIGFuZCBQbGFuZXMsIFRyYWlucyBhbmQgQXV0b21vYmlsZXMsIGFyZW4ndCBhdmFpbGFibGUgdG8gc3RyZWFtIGF0IHRoZSBtb21lbnQgYnV0IHRoZXJlJ3MgYSBsZXNzZXIgc2VlbiBDYW5keSBtb3ZpZSBvbiBOZXRmbGl4IEkgdGhpbmsgeW91J2xsIGVuam95LiAKTG9sLCBJIG5haXZlbHkgZ290IGV4Y2l0ZWQgd2hlbiBJIHNhdyB0aGUgbWVzc2FnZSwgdGhhdCB0aGV5IHdhbnRlZCB0byB0YWxrIHRvIG1lIGFib3V0IG15IGludmVudGlvbi4gSSB0aG91Z2h0IHRoZXkgbWlnaHQgd2FudCB0byB0YWtlIGl0IHRvIHRoZSBuZXh0IGxldmVsIGFuZCBtYWtlIG1lIGEgbWlsbGlvbmFpcmUgKFllcywgSSBiZWVuIHRvbGQgSSBuZWVkIHRvIGdldCBteSBoZWFkIG91dCBvZiB0aGUgY2xvdWRzIGF0IHRpbWVzKS4uIApZZXQgdGhleSBzdGlsbCBjYW5jZWxsZWQgZnV0dXJhbWEuIAoxMykgRGFpbHkgZXhwb3N1cmUgb2YgbWVyY3VyeSBmcm9tIGRlbnRhbCBhbWFsZ2FtcyBpcyBzaWduaWZpY2FudGx5IGxvd2VyIHRoYW4gMjguNCBtaWNyb2dyYW1zIGF2ZXJhZ2luZyBiZXR3ZWVuIDAuNzkgdG8gMS45MSBtaWNyb2dyYW1zLCBhbmQgIkNhbmFkYSBhbmQgb3RoZXIgY291bnRyaWVzIGRvIG5vdCByZWNvbW1lbmQgdGhlIHVzZSBvZiBtZXJjdXJ5IGFtYWxnYW0gaW4gcHJlZ25hbnQgd29tZW4gb3IgY2hpbGRyZW4uIgpIb3cgZG8geW91IHJlc2V0IHp5bmdhIHBva2VyIG9uIEZhY2Vib29rPwpFZHdhcmRzIHByb3ZpZGVkIGhpcyBsYW5kIHRvIHRoZSBjaXR5ICAgdW5kZXIgZHVyZXNzIGhlIHdvdWxkIGxhdGVyIHNheS4gCk9tZWdhIDMgZmF0dHkgYWNpZHMgaW5oaWJpdCBhZGhlc2lvbiBtb2xlY3VsZXMgdG8gbG93ZXIgaGVhcnQgZGlzZWFzZSByaXNrClVzZXJzIGNhbiBwb3NlIGlkZWFzIHRvIHRoZSBtb2RzIG9mIEFza3JlZGRpdCwgYW5kIHRoZSBtb2RzIGNhbiBwcmVzZW50IGlkZWFzIHRvIHRoZSBnZW5lcmFsIHB1YmxpYy4gVGhlIGFpbSBpcyB0byBiZSBhYmxlIHRvIHRob3JvdWdobHkgZGlzY3VzcyBpZGVhcyBhbmQgcG9saWN5IGFzIGl0IHBlcnRhaW5zIHRvIC9yL0Fza3JlZGRpdC4KSW4gdHJ1dGgsIFp3ZWlnIGhhZCBhbHJlYWR5IGJlZW4sIGFuZCB3b3VsZCBjb250aW51ZSB0byBiZSwgYSB3ZWxsIHJlc3BlY3RlZCBhbmFseXN0IGFuZCBpbnZlc3Rvci4gSGUgaGFkIHN0YXJ0ZWQgaGlzIG5ld3NsZXR0ZXIgaW4gMTk3MSBhbmQgaGlzIGhlZGdlIGZ1bmQgaW4gMTk4NCwgd2VsbCBiZWZvcmUgdGhvc2UgbGltaXRlZCBoaWdoIGVuZCBpbnZlc3RvcnMgYmVjYW1lIHRoZSByYWdlLiBXaGlsZSBzdGlsbCBhIHByb2Zlc3NvciwgaGlzIGJ5IHdvcmQgd2FzLCAiRG9uJ3QgZmlnaHQgdGhlIEZlZC4iIFRoYXQgbWVhbnQsIGFjY29yZGluZyB0byBad2VpZydzIHRoZW9yeSwgdGhhdCBpZiBpbnRlcmVzdCByYXRlcyB3ZXJlIGdvaW5nIGRvd24sIHN0b2NrcyB3b3VsZCBnbyB1cCwgYW5kIHZpY2UgdmVyc2EuIApEb3plbnMgYXJyZXN0ZWQgZm9yIHNleCB0cmFmZmlja2luZyBhaGVhZCBvZiBTdXBlciBCb3dsClJ1ZHkgc3RheWVkIGF0IHRoYXQgZmVuY2UgdW50aWwgbW9ybmluZywgc29mdGx5IGdyb3dsaW5nIGxpa2UgIkp1c3QgVFJZIGFuZCBjb21lIGJhY2ssIGEgaG9sZS4iIFN1Y2ggYSBnb29kIGJvaS4gOiApLiAKVGhlIG90aGVyIHdhcyBhbHNvIGEgZ29vZCBhcmVhLiBXZSBrbmV3IG5vdGhpbmcgYWJvdXQgdGhlbSBhdCBhbGwganVzdCBib3VnaHQgdGhlbSBibGluZCBmb3IgdGhlIGFzc2V0IHNoZWV0Li4gCkhlIGhhcyBwbGVhZGVkIG5vdCBndWlsdHkgdG8gY2hhcmdlcyB0aGF0IGhlIHBhaWQgZm9yIHNleCBhdCB0aGUgbWFzc2FnZSBwYXJsb3IuCkdlbmVsZGUgaW5zYW5sYXJuIG91IGJ1IG5va3RhbGFyYSBUcmtpeWUgaSB5YXB5b3JzYSAyMCBzb251IDMwKyB5YWxhcmEgZG9ydSBnZWxpeW9yLm10aTQgIDUwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvbmUgZW50ZXJlc2FuIHNlbiBva3UsIGl5aSBrdCBva3VsbGFyIGJpdGlyLCBpeWkgYmlyIGlpbiBiaXIgZHplbmluIG9sc3VuLCBiYWthIGxrZXllIGdlem1layBpaW4gYmF2dXI7IHlvayBiYW5rYSBoZXNhYm56IHlvayBrYWxhY2FueiB5ZXIgeW9rIHphcnQgeW9rIHp1cnQgZGVzaW5sZXIgeWEgcmVkZGV0c2lubGVyIHlhIGVuIGZhemxhIDEgYXkgdml6ZSB2ZXJzaW5sZXIsIG90dXJtYSBoYWtrL3ZhdGFuZGFsIG9sYW4gdGlwbGVyZSBiYWsuIApQb3VyIGxlIGNocmlzdGlhbmlzbWUsIGJpZW4gcXUnb24gaW5zaXN0ZSBzdXIgbCdpbXBvcnRhbmNlIGRlIGxhIHRvaWxldHRlIGZ1bnJhaXJlLCBsZSBwYXJmdW0gZXN0IGxhIHN1YnN0YW5jZSBxdWkgcGVybWV0IGxhIHJzdXJyZWN0aW9uIGFwcnMgbGEgbW9ydCBwaHlzaXF1ZSBkdSBjb3Jwcy4gCllvdSBrbm93IHdoZXJlIEknbSBnb2luZyB3aXRoIHRoaXMuIApJIHdvbmRlciBpZiB0aGVyZSBpcyBhbnkgY29ycmVsYXRpb24gd2l0aCB0aGUgJ2xpc3RlbiB0byB5b3VyIGtpZHMnIHBhcmVudGluZy4gV2UgZm91Z2h0IHdpdGggbXkgb2xkZXN0IHRvIGdldCBoaW0gb24gdGhlIHRvaWxldCBhcm91bmQgMTYgbW9udGhzIGJ1dCBpdCBhbG1vc3QgYmVjYW1lIHRyYXVtYXRpYy4gTXkgcGFyZW50cyBzYWlkIG5vdCB0byByZWxlbnQgYW5kIGZvcmNlIGl0LiBJbnN0ZWFkIHdlIGxldCBpdCBnbyBmb3IgNiA4IG1vbnRocyBhbmQgaGUgc3RhcnRlZCBkb2luZyBpdCBvbiBoaXMgb3duLiBJIHdhcyBmaW5lIHRvIHBheSBmb3IgdGhlIDIvMyBkaWFwZXJzIGEgZGF5IGp1c3Qgbm90IHRvIHNlZSB0aGUgbG9vayBvbiBoaXMgZmFjZS4gWW91bmdlc3QgaGFzIGFscmVhZHkgc3RhcnRlZCB1c2luZyB0aGUgdG9pbGV0IHdpdGggbm8gcHJvbXB0cyBhdCAxNCBtb250aHMuIEl0J3MgYW4gaW50ZXJlc3RlZCBzdGF0aXN0aWMsIGp1c3Qgbm90IHN1cmUgd2hhdCBjb25jbHVzaW9ucyBvbmUgY291bGQgZHJhdyBmcm9tIGl0IG90aGVyIHRoYW4gaGF2aW5nIGRpc3Bvc2FibGUgZGlhcGVycyBpcyBlYXNpZXIgdG8gbGV0IGtpZHMgYWRhcHQgYXQgdGhlaXIgb3duIHBhY2UuCldlIHdvdWxkIGxpa2UgdG8gdXNlIHlvdXIgYWlycG9ydCBzaHV0dGxlIGJ1dCBJIGNhbiBzZWUgaG93IHRvIGJvb2sgaXQgb3RoZXIgdGhhbiBieSB0ZWxlcGhvbmUgd2hpY2ggSSB3b3VsZCBwcmVmZXIgbm90IHRvIGRvLCBkdWUgdG8gdGhlIGNvc3QgaW52b2x2ZWQuIApUaGUgcG9zaXRpb24gSSBjb21pbmcgZnJvbSBpcyBJIGRvbiB1bmRlcnN0YW5kIHdoeSBhbnlvbmUgd291bGQga25vd2luZ2x5IGFuZCB3aWxsaW5nbHkgdXNlIG5vbmZyZWUgc29mdHdhcmUuIEluIHRoYXQgcmVnYXJkIEkgdGhpbmsgb2YgY29weWxlZnQgYXMgYSBnb29kIHRoaW5nLCBiZWNhdXNlIGl0IG1lYW5zIG1vcmUgZnJlZWRvbSBmb3Igc29jaWV0eSBhcyBhIHdob2xlLiB0aGUgImluZmVjdGluZyIpPyBOb3cgd2h5IHdvdWxkIHRoYXQgbmVjZXNzYXJpbHkgYmUgYW4gaXNzdWU/ClRoZXkgbWFycmllZCBsYXN0IHdlZWsuVEw7RFIgIGhlIG1ha2VzIGVtb3Rpb25hbGx5IGltcHVsc2l2ZSBkZWNpc2lvbnMuMXN0IHdpZmUgIGNvbGxlZ2Ugc3dlZXRoZWFydHMuIDJuZCB3aWZlICBwcmVnbmFudCBhZnRlciBhIGZldyBtb250aHMgb2YgZGF0aW5nLiAKUG9zdGVkIGluIE1hc3NhZ2UsIFBldGNoYWJ1cmksIFJldmlld3MsIFNvYXB5IG1hc3NhZ2UKUGFyIGwnYW1vdXIgZGUgbGEgdmllLCBldCBsJ2h1bW91ciBuZ3JlIHF1aSBsZXMgcmVuZGl0IHN1cHJpZXVycyAgbGV1ciBjb25kaXRpb24gZXQgdG91am91cnMganVnZXMgZGUgbGV1cnMgbWF0cmVzIApJIGFtIEJTYyBmcm9tIEt1bWFvbiBVbml2ZXJzaXR5IGZvbGxvd2VkIGJ5IEJITVMgZnJvbSBBZ3JhIFVuaXZlcnNpdHkuIFRoZW4gSSBkaWQgTUQgKEhvbW9lb3BhdGh5KSBpbiBPcmdhbm9uIGFuZCBIb20uIFBoaWxvc29waHkgZnJvbSBSYWphc3RoYW4gVW5pdmVyc2l0eS4gQnkgc2lkZSwgSSBoYXZlIGFsc28gYmVlbiBjb25mZXJlZCB1cG9uIERJIEhvbSAoTG9uZG9uKSwgaE1EIChVSyksIERMaXQuIChVSykgZXRjLgpSZWNlbnRseSBob21lIGRvZXMgbm90IGZlZWwgbGlrZSBob21lIGFueW1vcmUsIGp1c3QgcnVzaGVzIG9mIGFueGlldHksIGZlYXIgYW5kIGd1aWx0IGV2ZW4gdGhvdWdoIGkgdXNlZCB0aGUgbGFzdCBvZiBpdCAzIGRheXMgYWdvLiAKUGxhdGludW0gaXMgbGlrZSBDU1IsIHRoZXkgbWFqb3IgY29tcGV0aXRvcnMgYW5kIG9mZmVyIGEgbG90IG9mIHNpbWlsYXIgcGVya3MgKHN1Y2ggYXMgR2xvYmFsIEVudHJ5LCB3aGljaCBpbmNsdWRlcyBUU0EgcHJlIGNoZWNrKS4gSG93ZXZlciwgSSBhbSBvYnNlc3NlZCB3aXRoIHRoZSBBbUV4IENlbnR1cmlvbiBsb3VuZ2VzIGFuZCBoYXZpbmcgYWNjZXNzIG9uIHRoZSBpbnRlcnZpZXcgdHJhaWwgd2FzIHdvbmRlcmZ1bC4gSW4gYWRkaXRpb24sIHlvdSBnZXQgYWNjZXNzIHRvIHRoZSBEZWx0YSBTa3lDbHViIGlmIHlvdSBhcmUgb24gYSBEZWx0YSBmbGlnaHQgYXMgYW4gQW1FeCBQbGF0aW51bSBjYXJkbWVtYmVyIGFuZCBTa3lDbHVicyBhcmUgZXZlcnl3aGVyZS4gVGhlcmUgYWxzbyBhICQyMDAgYWlybGluZSBjcmVkaXQgZWFjaCBjYWxlbmRhciB5ZWFyICAgSSBib3VnaHQgU291dGh3ZXN0IGdpZnQgY2FyZHMgbGFzdCBmYWxsIGZvciBpbnRlcnZpZXdzIGFuZCBJIGhhdmUgYW5vdGhlciAkMjAwIGNyZWRpdCB3YWl0aW5nIGZvciBtZSB0byB1c2UgdGhpcyB5ZWFyLiBUaGVyZSBhbHNvIHVubGltaXRlZCBCb2luZ28gYWNjZXNzIGZvciBmcmVlIGluY2x1ZGVkIHdpdGggdGhlIGNhcmQsIFNob3BydW5uZXIgbWVtYmVyc2hpcCwgYW5kIGEgY3JhcHRvbiBvZiBvdGhlciBpbmNyZWRpYmxlIGJlbmVmaXRzLgpQYXl0YWJsZTogVGhpcyBpcyB0aGUgdGFibGUgb24gdGhlIHBva2VyIHNjcmVlbiB0aGF0IHNob3dzIHlvdSBob3cgbXVjaCBlYWNoIGhhbmQgaW4gYSBwb2tlciBnYW1lIGlzIHdvcnRoLiBBcyBwcmV2aW91c2x5IHN0YXRlZCwgeW91J2xsIHdhbnQgdG8gY2hvb3NlIGEgdGFibGUgdGhhdCBoYXMgdGhlIGJlc3QgcGF5dGFibGUsIG1lYW5pbmcgdGhlIGhpZ2hlc3QgcGF5b3V0IGZvciBhIHdpbi4gRWFjaCBwYXl0YWJsZSB3aWxsIHNob3cgeW91IGhvdyBtYW55IGNvaW5zIHlvdSdsbCBnZXQgaW4gcmV0dXJuIGZvciB3aW5uaW5nIGEgaGFuZCBmcm9tIG9uZSBjb2luIHBsYXllZCB0byB1cCB0byBmaXZlIGNvaW5zIHBsYXllZC4KVGhleSB3ZXJlIGFza2VkIHRvIGRldGFpbCBob3cgbWFueSB0aGV5IGhhZCBpbiBhIHR3byB3ZWVrIHBlcmlvZCwgYW5kIHJhdGUganVzdCBob3cgdGVycmlmeWluZyB0aGV5IHdlcmUuCkJlZm9yZSB0aGUgZ2FtZSwgc2luZ2VycyBQaGlsbGlwYSBTb28sIFJlbmVlIEVsaXNlIEdvbGRzYmVycnkgYW5kIEphc21pbmUgQ2VwaGFzIEpvbmVzIHRoZSBTY2h1eWxlciBzaXN0ZXJzIGZyb20gdGhlIG9yaWdpbmFsIGNhc3Qgb2YgQnJvYWR3YXkgaGl0ICJIYW1pbHRvbiIgYnJvdWdodCBleHF1aXNpdGUgdGhyZWUgcGFydCBoYXJtb255IHRvIGEgdmVyc2lvbiBvZiAiQW1lcmljYSB0aGUgQmVhdXRpZnVsLiIgVGhleSBtYWRlIGFuIGluY2x1c2l2ZSBlZGl0aW5nIGNob2ljZSwgd2l0aCBKb25lcyBhZGRpbmcgImFuZCBzaXN0ZXJob29kIiB0byB0aGUgbHlyaWNhbCByZWZlcmVuY2Ugb2YgYnJvdGhlcmhvb2QuCjQ4IHN0b2NrIHNvdW5kIGNsaXBzIHN0YXJ0aW5nIGF0ICQyLiBEb3dubG9hZCBhbmQgYnV5IGhpZ2ggcXVhbGl0eSBXaGlzdGxpbmcgVGVhIEtldHRsZSBzb3VuZCBlZmZlY3RzLiAKVGhlcmUgaGF2ZSBiZWVuIGV4Y2F2YXRpb25zIGluIHRoZSBJbmR1cyBWYWxsZXkgc2luY2UgdGhlIDE5dGggY2VudHVyeS4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVBIEZPUk1FUiBvZmZpY2UgbWFuYWdlciB3YXMgamFpbGVkIGZvciBhIHllYXIgYW5kIG9yZGVyZWQgdG8gcGF5IGNvbXBlbnNhdGlvbiBvZiBuZWFybHkgJDEzNywwMDAgb24gTW9uZGF5IGluIHRoZSBCYXRodXJzdCBMb2NhbCBDb3VydC4gClJlZ2FyZG9ucyBjZSBxdWkgc2UgcGFzc2UgZW4gTHliaWUsIGF1IE1hcm9jIG91IGFpbGxldXJzIGRhbnMgbGVzIHBheXMgZHUgR29sZmUuIApIYWQgYSBzdHJvbmcgc3RhcnQgdG8gdGhlIHllYXIsIHdpdGggY29udGludWVkIHJldmVudWUgZ3Jvd3RoIGFuZCBzb2xpZCBlYXJuaW5ncywgc2FpZCBURCBwcmVzaWRlbnQgYW5kIENFTyBCaGFyYXQgTWFzcmFuaSBpbiBhIHJlbGVhc2UuIE1hcmtldCB2b2xhdGlsaXR5IGFuZCBsb3dlciBjbGllbnQgYWN0aXZpdHkgaW1wYWN0ZWQgb3VyIHdob2xlc2FsZSBzZWdtZW50IGluIHRoZSBxdWFydGVyLiAKQmx1ZSB3b3VsZCBiZSBzY2hvbGFybHkgYXJ0aWZpY2VycyB0aGF0IGRlc2lyZSB0byBpbm5vdmF0ZSBhbmQgY3JlYXRlIGZvciB0aGUgYmV0dGVybWVudCBvZiBub3QgdGhlbXNlbHZlcywgYnV0IHRoZSBhY2FkZW1pY3MgdGhlbXNlbHZlcy4gT3Bwb3NlcyB3aGl0ZSBjb25zZXJ2YXRpc20gYW5kIGJsYWNrIHNlbGZpc2huZXNzLgpJbiB0aGUgZW5kLCBpdCB3YXMgZ29vZCBmb3IgYm90aCBwYXJ0aWVzIHRoYXQgdGhlcmUgd2FzIGEgbm8gZGVhbC4gClRoZSBkZWFsIFdoZW4gTXIuIApTdXIgbGUgZm9uZGVtZW50IGRlIGNldCBhcnRpY2xlIDEzMiA0NSBkdSBDb2RlIHBuYWwsIGxhIGp1cmlkaWN0aW9uIGRlIGNvbmRhbW5hdGlvbiBvdSBsZSBqdWdlIGQnYXBwbGljYXRpb24gZGVzIHBlaW5lcyBwZXV0IGltcG9zZXIgc3BjaWFsZW1lbnQgYXUgY29uZGFtbiBsJ29ic2VydmF0aW9uIGRlIGNlcnRhaW5lcyBvYmxpZ2F0aW9ucywgZW4gbCdlc3BjZSwgIHNlIHNvdW1ldHRyZSAgZGVzIG1lc3VyZXMgZCdleGFtZW4gbWRpY2FsLCBkZSB0cmFpdGVtZW50IG91IGRlIHNvaW5zLCBtbWUgc291cyBsZSByZ2ltZSBkZSBsJ2hvc3BpdGFsaXNhdGlvbiAuLiAKU28gd2UgZG8gd29ycnkgYWJvdXQgdGhpbmdzIGxpa2UgbmFpbHMsIGJhcmJlZCB3aXJlLCBiYXNpY2FsbHkgc2hhcnAgdGhpbmdzIHRoYXQgYXJlIGRpcnR5IGFuZCBvbGQgYW5kIHRoZXJlZm9yZSBvZnRlbiBoYXZlIHJ1c3QsIGFuZCBjYW4gcHVuY3R1cmUgZGVlcCBpbnNpZGUgeW91IG1ha2luZyBpdCBkaWZmaWN1bHQgdG8gcHJvcGVybHkgY2xlYW4gb3V0IHRoZSB3b3VuZC4gCkkgYWxzbyBjaGFuZ2VkIHRoZSB0cmFwIHVuZGVybmVhdGggdGhlIHdhZ29uICAgaXQgd2FzIGFuIGVhc2lseSBub3RpY2VhYmxlIHBpdCB0cmFwIGFmdGVyIGEgYmVuZCBpbiB0aGUgdHVubmVsLiBUaGUgcGxheWVycyBhbGwgc3BvdHRlZCBpdCBidXQgdGhlIHRyaWNrIHdhcyB0aGF0IGFueSB0aW1lIHNvbWVvbmUgdHJpZWQgdG8ganVtcCBhIGdvYmxpbiBkYXJ0ZWQgb3V0IGZyb20gY292ZXIgdG8gdHJ5IGFuZCBzaG92ZSB0aGVtIGJhY2sgYW5kIGludG8gdGhlIHBpdC4uIApJdCB3YXNuIHdoZW4gaXQgaGFwcGVuZWQgdG8gbWUuLiAKVGhlIG1vdGhlciB0aGVuIHRha2VzIGFuIHVudXNlZCBqdW1ibyB0YW1wb24gYW5kIHNvcHMgdXAgdGhlIG1lc3MuIApZb2dhIGlzIGJhc2VkIG9uIHRoZSBwcmluY2lwbGUgdGhhdCB0aGUgbWluZCwgYm9keSwgYW5kIHNwaXJpdCB3b3JrIGluIHVuaXNvbi4gSWYgdGhlIGJvZHkgaXMgc2ljaywgaXQgYWZmZWN0cyB0aGUgbWluZCBhbmQgc3Bpcml0LiAKRmFuY3kgZHJvcCBjYXBzIHRob3VnaD8gUXVpY2ssIGVhc3ksIHN0eWxpc2gsIGFuZCBub2JvZHkgY2FuIGhhdmUgYW55IGlzc3Vlcy4KVGhleSdsbCBlbmpveSBhIGZpcnN0IGNsaW1iIG9mIFRob21hcyBIZWF0aGVyd2ljaydzIFZlc3NlbCBhbmQgdHJhdmVyc2UgYSBmaXZlIGFjcmUgbGFuZHNjYXBlZCBwbGF6YSBkaXJlY3RseSBsaW5rZWQgdG8gdHdvIGNpdHkgb3duZWQgcGFya3MgICBIdWRzb24gQm91bGV2YXJkIFBhcmsgYXQgV2VzdCAzM3JkIFN0cmVldCBhbmQgdGhlIEhpZ2ggTGluZSBhdCBXZXN0IDMwdGggU3RyZWV0Li4gCiJBbW9uZyBvdGhlciB0aGluZ3MsIHdlIGhhdmUgc2hvd24gYSBzdHJvbmcgZWZmZWN0IG9mIGNsaW1hdGUgY2hhbmdlIG9uIHRoZSB0aW1pbmcgb2YgYnJlZWRpbmcsIiBzYWlkIEJpcmtoZWFkLCAid2l0aCBicmVlZGluZyBiZWNvbWluZyBwcm9ncmVzc2l2ZWx5IGVhcmxpZXIgYmV0d2VlbiAxOTcwcyBhbmQgMjAxMCIuIFRoZSBzdG9ybXMgaW4gRmVicnVhcnkgcmVzdWx0ZWQgaW4gaGlnaCBtb3J0YWxpdHkgYW1vbmcgZ3VpbGxlbW90cy4gCldlIG1heSBhbHNvIHVzZSB3ZWIgYmVhY29ucyBhbmQgc2ltaWxhciB0ZWNobm9sb2dpZXMuIFdlIHVzZSB0aGVzZSB0b29sczouIApJIGluIG15IGRyZWFtIGpvYiBhbmQgaGFwcGlseSBnZWVrIG91dCB3aXRoIGZyaWVuZHMgZXZlcnkgd2Vla2VuZC4gCkFzIHdlIGJlZ2luIG91ciBkZXBsb3ltZW50IG9mIDMwLDAwMCBhZGRpdGlvbmFsIHRyb29wcyB0byBBZmdoYW5pc3RhbiwgdGhpcyBDaHJpc3RtYXMgRXZlIHdpbGwgYWxzbyBtYXJrIHRoZSAzLDAwMHRoIGRheSBvZiB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGFuZCB0aGUgMzB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgaW5pdGlhbCBSdXNzaWFuIGludmFzaW9uIG9mIEFmZ2hhbmlzdGFuIGluIDE5NzkuIFRodXMgZmFyLCB0aGlzIHdhciBoYXMgYWxyZWFkeSBjb3N0IHRoZSBBbWVyaWNhbiB0YXhwYXllciBhIG1pbmltdW0gb2YgJDMwMCwwMDAsMDAwLDAwMCBhY2NvcmRpbmcgdG8gdGhlIENvbmdyZXNzaW9uYWwgUmVzZWFyY2ggU2VydmljZSAoYW5kIHRoYXQganVzdCB0aGUgZnVuZGluZyB0aGF0ICJvbiBidWRnZXQiKS4KQmVlbiBjb2FjaGluZyBzZW5pb3IgZ2lybHMgYXQgU2F1bmRlcnMgZm9yIDMwIHllYXJzIGFuZCB0aGV5IG9uZSBvZiB0aGUgdG9wIHRlYW1zLCBjb2FjaCBKYW4gTWFyY3VzIHNhaWQuIE5vdCBvbmx5IHBoZW5vbWVuYWwgYXRobGV0ZXMsIHRoZXkgYW1hemluZyB3b21lbi4gVGhleSBjYWxtIGFuZCBjb29sIHVuZGVyIHByZXNzdXJlIGFuZCB0aGV5IHN1Y2ggY2hhcmFjdGVyIGtpZHMsIHRoZXkgYmxvdyBteSBtaW5kLiAKMjM5KS4uIAoiSSB0aGluayB3aGVuIGhlIGdvdCBvdXRzaWRlIGhlIHdlbnQgbG9va2luZyBmb3IgbWUgYW5kIHRoYXQncyB3aGF0IGJyb3VnaHQgaGltIHRvIHRoZSBHTywiIHNoZSBzYWlkLgpMb2wuIFdhcyB3aWxsc3QgZGVubiBpbiBBZmdoYW5pc3RhbiBhdWZiYXVlbj8gS2F1bSBzdGVodCBkYSBlaW5lIFNjaHVsZSBrb21tZW4gZGllIFRhbGliYW4gdW5kIHNhZ2VuICJ3aXIgc2luZCBkYSBqZXR6dCBDaGVmIi4gClNoZSBtYXkgaGF2ZSBiZWVuIHN1ZmZlcmluZyBmcm9tIGluY29udGluZW5jZS4gV2h5PyBCZWNhdXNlIGtvYWxhcyBhcmUgcmlkZGxlZCB3aXRoIGNobGFteWRpYS4gSW4gc29tZSBhcmVhcyB0aGUgaW5mZWN0aW9uIHJhdGUgaXMgODAlIG9yIGhpZ2hlci4gVGhpcyBzdGF0aXN0aWMgaXNuIGhlbHBlZCBieSB0aGUgZmFjdCB0aGF0IG9uZSBvZiB0aGUgZmV3IG90aGVyIGFjdGl2aXRpZXMga29hbGFzIHdpbGwgc3BlbmQgdGhlaXIgcHJlY2lvdXMgZW5lcmd5IG9uIGlzIHJhcGUuIERlc3BpdGUgYmVpbmcgc2Vhc29uYWwgYnJlZWRlcnMsIG1hbGVzIHNlZW0gdG8gZWl0aGVyIG5vdCBrbm93IG9yIGNhcmUsIGFuZCB3aWxsIHNpbXBseSBvdmVycG93ZXIgYSBmZW1hbGUgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHNoZSBpcyBvdnVsYXRpbmcuIApBbiBhZHZhbnRhZ2UgdG8gY291Y2ggc3VyZmluZyB0aGF0IHlvdSB3b24ndCBnZXQgZnJvbSB2YWNhdGlvbiB0aW1lIHdpdGggdGhlIGxpc3Qgb2YgcXVhbGlmaWNhdGlvbnMgeW91IGNyZWF0ZWQuIE1hbnkgdXNlcnMgb2YgT3V0bG9vayBFeHByZXNzIGFyZSBkaXNjb3VyYWdlZCB0byBsZWFybiB0aGF0IHRoZSBwcm9ncmFtIHNtaWxlIGFzIHlvdSByZWNvZ25pemUgdGhlIHBlcnNvbmFsaXRpZXMgeW91J3ZlIGFsd2F5cyBrbm93bi4gClBodW5uaWVidW5uaWUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpPbiB0aGUgcml2ZXIgdGhlIGRlYWxlciB3aWxsIHBsYWNlIGEgZmlmdGggYW5kIGZpbmFsIGNhcmQgb24gdGhlIHRhYmxlLiBUaGlzIGlzIGEgY29tbXVuaXR5IGNhcmQgYXMgd2VsbCBhbmQgd2lsbCBiZSBwbGFjZWQgZmFjZSB1cCBvbiB0aGUgcG9rZXIgdGFibGUuIEl0IGlzIG5vdyB0aW1lIGZvciB0aGUgZmluYWwgYmV0dGluZyByb3VuZCBhbmQgdGhlIHNob3dkb3duLiBUaGlzIGlzIHdoZW4gdGhlIHdpbm5lciB3aWxsIGJlIGRlY2lkZWQuIFRoZSBwb2tlciBwbGF5ZXIgdGhhdCBoYXMgdGhlIGJlc3QgcG9rZXIgaGFuZCB3aWxsIHdpbi4gSGUgd2lsbCBnZXQgdGhlIHBvdCBhbmQgYW5vdGhlciByb3VuZCB3aWxsIGJlZ2luLgpIb3dldmVyLCB5b3Ugc2hvdWxkIHJlbWVtYmVyIHRoYXQgc29tZXRpbWVzIG9uZSBnYW1lIGNvdWxkIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGFjY29yZGluZyB0byB0aGUgY2FzaW5vIHdoZXJlIHlvdSBwbGF5Li4gClRoZXJlIGlzIG5vIHJlZmVyZW5jZSB0byB0aGUgSkZJIHJlcG9ydCBvciB0aGUgImRvdHMiIChvciAiMXN0IE1vZGUiKS4gSXQgbWF5IHNpbXBseSBiZSB0aGUgY2FzZSB0aGF0IGF0IHRoZSB0aW1lIG9mIGhpcyB3cml0aW5nIHRoaXMgdGhhdCBNb3JzZSB3YXMgc2ltcGx5IHVuYXdhcmUgb2YgdGhlIEpGSSByZXBvcnQsIGFzIHRoZSB0aHJlZSBhcHBlYXJhbmNlcyB3ZXJlIGFsbCBwdWJsaXNoZWQgYXQgYWJvdXQgdGhlIHNhbWUgdGltZSAod2l0aGluIHdlZWtzIG9mIG9uZSBhbm90aGVyKS4gClJlYWxseT8gSSBhbHdheXMgdGhvdWdodCB0aGV5IHdvdWxkIGJlIGNvb2wgb24gdGhlIGluc2lkZSBsaWtlIGxvdHMgb2Ygd2luZG93cywgaGlnaCBjZWlsaW5ncy4gVGhvdWdoIEkgY2FuIGFsc28gc2VlIGhvdyB0aGV5IGNvdWxkIHN1Y2suIApPbiBNb25kYXkgSSB3YXMgZ29pbmcgNzggb24gMTIxIGluIHRoZSBtaWRkbGUgbGFuZSwgcGFzc2luZyBwZW9wbGUgb24gdGhlIHJpZ2h0IHNvIEkgd2FzIGp1c3QgY2hpbGxpbmcuIApBZ2FpbiwgaXQgdGFrZXMgYSBiaXQgb2YgY29uZmlndXJhdGlvbiwgYnV0IGl0IGFjdHVhbGx5IGtpbmRhIG5lYXQuLiAKR29kIGFsd2F5cyBoYXMgSGlzIHBsYW4gYW5kIEkganVzdCB3YW50ZWQgdG8gZG8gaXQgb24gbXkgdGltZSBhbmQgd2hlbiBJIGZlbHQgY29tZm9ydGFibGUgdG8gZG8gc28uIi4gClNvbWV0aGluZyB0aGF0IHRydWx5IGRlcGljdHMgdGhlIGdyZWF0bmVzcyBvZiBBbWVyaWNhIFRlYW06IGhhdmUgc29tZXRoaW5nIGNhbGxlZCB0aGUgb2YgQWxsIEJvbWJzIE5vdGhpbmcgbGlrZSB0aGlzIGhhcyBldmVyIGJlZW4gdXNlZCBiZWZvcmUuIAouIFNhbGxlcyBkZSBwb2tlciBlbiBsaWduZSA6IFRlc3RzIEF2aXMgSW1wb3NzaWJsZSBkZSBzZSBjb25uZWN0ZXIgYSBldmVyZXN0IC4gQm9uIGJlbiBjJ2VzdCBwYXMgbGUgbW9kZSBob3JzIGNvbm5lY3Rpb24uIEMnZXN0IC4gbW9uZGlhbCBkZSBsJ2luZm9ybWF0aW9uIGVuIGxpZ25lIHN1ciBsZSBwb2tlciAuClRoZSB0d28gZm9ybXMgb2Ygdml0YW1pbiBEIHVzZWQgaW4gc3VwcGxlbWVudHMgYXJlIEQyIChlcmdvY2FsY2lmZXJvbCkgYW5kIEQzIChjaG9sZWNhbGNpZmVyb2wpLiBEMyBpcyB0aGUgcHJlZmVycmVkIGZvcm0sIGFzIGl0IGlzIGNoZW1pY2FsbHkgc2ltaWxhciB0byB0aGUgZm9ybSBvZiB2aXRhbWluIEQgcHJvZHVjZWQgYnkgdGhlIGJvZHkgYW5kIGlzIG1vcmUgZWZmZWN0aXZlIHRoYW4gRDIgYXQgcmFpc2luZyB0aGUgYmxvb2QgY29uY2VudHJhdGlvbiBvZiB2aXRhbWluIEQuWzI3XSBTaW5jZSB2aXRhbWluIEQgaXMgZmF0IHNvbHVibGUsIGl0IHNob3VsZCBiZSB0YWtlbiB3aXRoIGEgc25hY2sgb3IgbWVhbCBjb250YWluaW5nIGZhdC4gCjM3MTMyIHJlY29yZHMgLiBMb2dpYyBTdHVkaW8gOCBDb21wbGV0ZSBmb3IgbWFjIHNlcmlhbCBudW1iZXJzLCBjcmFja3MgYW5kIGtleWdlbnMgYXJlIC4gTG9naWMgU3R1ZGlvIDguMC4yIGtleSBjb2RlIGdlbmVyYXRvciAuIExvZ2ljIFN0dWRpbyBQcm8gOCBzZXJpYWwuIHZjYW0gNS4xIGNyYWNrIHNlcmlhbCBjb21vIGJvdGFyIGhhY2sgZGUgZ2VtYXMgbm8gZHJhZ29uIGNpdHkgSmVzc2ljYSBOYXBvbGkgLiBob3cgdG8gY3JhY2sgbW9jaGEgcHJvIDIuNiBjcmFjayBkbyBkaWFibG8gMiBsb2QgcGwgZWFybiB0byBkaWUgY3JhY2tlZC4gClRoZSBnb29kIG5ld3MgaXMgZHJpbmtpbmcgYXQgaG9tZSBoYXMgaXRzIGFkdmFudGFnZXMsIGJlZ2lubmluZyB3aXRoIGEgY29zdCBjdXQgb2YgYXQgbGVhc3QgNTAgcGVyIGNlbnQuIFRoYXQgcmlnaHQsIHRoZSBob21lIHdpbmUgbGlzdCBpcyBzYW5zIGFueSBtYXJrdXBzIGluIHJlc3RhdXJhbnRzIG9yIGJhcnMsIGJ1dCB3aGlsZSBkcmlua2luZyB0d2ljZSBhcyBtdWNoIGZvciB0aGUgc2FtZSBwcmljZSBpcyBhdHRyYWN0aXZlIHdlIHN1Z2dlc3Qgc3BlbmRpbmcgMjAgb3IgMzAgcGVyIGNlbnQgbW9yZSBhbmQgZHJpbmtpbmcgYmV0dGVyIHdoaWxlIHN0aWxsIHNhdmluZyBtb25leS4gClNhbXN1bmcgcGhvbmVzIGJ5cGFzcyB0aGF0IG9ubHkgaWYgdGV4dHMgYXJlIGdvaW5nIGZyb20gU2Ftc3VuZyB0byBTYW1zdW5nLCBraW5uZGEgbGlrZSBpbWVzc2FnZSwgYWxzbyBzb21lIG90aGVyIEFuZHJvaWQgcGhvbmVzIGNvbWJpbmUgdGV4dHMuIApJIGhhZCBhIHNpbWlsYXIgZmVlbGluZyB3aGVuIEkgd2FzIHRyeWluZyB0byBkZWNpZGUgaWYgSSBzaG91bGQgZGF0ZSBteSBub3cgYm95ZnJpZW5kLCBidXQgb3VyIHJlbGF0aW9uc2hpcCBlbmRlZCB1cCBiZWluZyB3YXkgYmV0dGVyIHRoYW4gSSBldmVyIGNvdWxkIGhhdmUgZXhwZWN0ZWQuIApCZXNpZGVzLCBJIGNhbiBwcm9iYWJseSBjb3VudCBjYXJkcyB3ZWxsIGVub3VnaCBmb3IgYSAyIGRlY2sgaG9tZSBCSiBnYW1lLiAKSSdtIHNlbmRpbmcgeW91IGh1Z2UgaHVncy4gTm9ib2R5IHdhbnRzIGFueW9uZSB0byBkaWUgYnV0IGl0J3MgY29tbW9uIHRvIGZlZWwgcmVsaWVmIHdoZW4geW91J3ZlIGZlbHQgc2NhcmVkL3Vwc2V0IGZvciBhIGxvbmcgdGltZSBhYm91dCBhIHBlcnNvbiBhbmQgeW91IGtub3cgdGhhdCB0aGV5J3JlIG5vdCBnb2luZyB0byB0cnkgYW5kIGh1cnQgeW91IGZ1cnRoZXIuIEJlIHRoZXJlIGZvciB5b3VyIGh1c2JhbmQgYXMgeW91IGNhbiBiZSBhbmQgaGVscCBoaW0gZ3JpZXZlIGJ1dCB5b3UgZG9uJ3QgaGF2ZSB0byBwZXJzb25hbGx5IGlmIHlvdSBkb24ndCBmZWVsIGdyaWVmLgpUaGUgcXVlc3Rpb24gaXMsIHNob3VsZCB3ZSBwYW5pYz8gSSByZW1lbWJlciBhIGZldyB5ZWFycyBhZ28gcmVhZGluZyBvbmUgb2YgdGhvc2Ugc3RvcmllcyBpbiBhIGxvY2FsIHBhcGVyIGFib3V0IGhvdyB3ZSBkdWUgZm9yIGEgcGFuZGVtaWMgaW5mbHVlbnphLiBBcHBhcmVudGx5IHRoZXNlIHRoaW5ncyBoYXZlIGN5Y2xlcyBvZiAyMCB5ZWFycyBhbmQgdGhlcmVmb3JlICJ3ZSBkdWUiIGZvciBhIG1ham9yIGZsdSBvdXRicmVhayB0aGF0IHdpbGwga2lsbCB0ZW5zIG9mIHRob3VzYW5kcyBvZiBwZW9wbGUgd29ybGR3aWRlLi4gCkZpbmFsbHkgTWljaGFlbCB3YWxrcyB1cCB0byBtZSBhbmQgc2F5cywgeW91LiBXaGF0IGdvaW5nIG9uPyBjYW4gdGVsbCB5b3UgcmlnaHQgbm93LCBidXQgd2lsbCB5b3UgY2FsbCB0aGUgb3RoZXJzLiBJIHdhbnQgdG8gdGVsbCB5b3UgYWxsIGF0IHRoZSBzYW1lIHRpbWUuIEkgd2lsbCBiZSBhdCBvdXIgZmF2b3JpdGUgc3BvdC4gSSB3aWxsIG1ha2UgdGhvc2UgY2FsbHMuIEFyZSB5b3Ugb2s/IGZpbmUuIEZvciBub3cuIEp1c3QgZ2V0IGV2ZXJ5b25lIHRvZ2V0aGVyIGFuZCBJIHdpbGwgdGFsayB0byB5b3UgYWxsIHRoZW4uIGxvdmUuIFdpbGwgZG8uIE1pY2hhZWwgZ2F2ZSBtZSBvbmUgb2YgaGlzIGJlYXIgaHVncy4gV2hpY2ggSSByZWFsbHkgZGlkbiBrbm93IEkgbmVlZCBhbmQgSSBmZWx0IGxpa2UgSSB3YXMgZ29ubmEgY3J5IGFnYWluIHNvIEkgaHVycmllZGx5IHB1c2hlZCBoaW0gYXdheSBhbmQgYXMgSSB0dXJuZWQgdG8gbGVhdmUgSSBzYWlkLCBrbm93IGl0IHdvbiBiZSB0aWwgYXJvdW5kIDUgb3IgNiB3aGVuIHlvdSBhbGwgZ2V0IHRoZXJlLCBidXQgSSB3aWxsIGJlIHNpdHRpbmcgaW4gb3VyIHNwb3Qgd2FpdGluZy4gYW5kIEkgd2Fsa2VkIGF3YXkuIEkgbmV2ZXIgbG9va2VkIGJhY2sgdG8gc2VlIGlmIGFueW9uZSB3YXMgd2F0Y2hpbmcgbWUuIEkgbXVzdCBiZSB2ZXJ5IHRyYW5zcGFyZW50IHJpZ2h0IG5vdy4KSSBkb250IGtub3cgaWYgdGhhdCB3b3JrcyBmb3IgeW91LCBidXQgSSBhbSBiaWxpbmd1YWwgYW5kIGhhdmUgYmVlbiBzcGVha2luZyB0d28gbGFuZ3VhZ2VzIGFsbCBteSBsaWZlLCBFbmdsaXNoIGFuZCBSdXNzaWFuLiBBbmQgUnVzc2lhbiBoYXMgbW9yZSBiYXNpYyBjb2xvciB0ZXJtcyB0aGFuIEVuZ2xpc2guIEkgY2FuJ3Qgc2F5IHRoYXQgaGF2aW5nIG9uZSBtb3JlIGJhc2ljIGNvbG9yIGhhcyBhZmZlY3RlZCBteSBwZXJjZXB0aW9uIG11Y2gsIHdoZW4gSSdtIHNwZWFraW5nIFJ1c3NpYW4gSSB3b3VsZCB1c2UgbGlnaHQgYmx1ZSBjb2xvciB3b3JkIHdpdGhvdXQgdGhpbmtpbmcgYWJvdXQgaXQgKGp1c3QgbGlrZSBhbnkgb3RoZXIgYmFzaWMgY29sb3IpIGJ1dCBJIG5ldmVyIGZlbHQgbGlrZSBpIG5lZWRlZCBhIHdvcmQgZm9yIHRoaXMgY29sb3Igd2hlbiBzcGVha2luZyBFbmdsaXNoLiBJJ3ZlIGhlYXJkIGFib3V0IHRoZSBzdHVkeSB3aGVyZSBSdXNzaWFuIHNwZWFrZXJzIGNvdWxkIGRpc3Rpbmd1aXNoIHNoYWRlcyBvZiBibHVlIGZhc3RlciB0aGFuIHNwZWFrZXJzIG9mIGxhbmd1YWdlcyB3aXRob3V0IGJsdWUgc2hhZGUgZGlzdGluY3Rpb24sIGJ1dCBJIGZlZWwgdGhhdCBrbm93aW5nIHRoaXMgY29sb3IgZXhpc3RzIGRvZXNuJ3QgYWZmZWN0IG15IEVuZ2xpc2ggYXQgYWxsCkZyb20gbXkgdmlld3BvaW50LCBoZSBwcm9iYWJseSB0aG91Z2h0IHNpbmNlIGhlIHdhcyBhIGhhbGYgaG91ciBsYXRlIGhlIHNob3VsZCBrZWVwIHlvdXIgc29uIGFuIGV4dHJhIGhhbGYgaG91ciAgIHlvdSBkZXNlcnZlIHRoZSBkb3duIHRpbWUgdGhhdCB5b3Ugd2VyZSBleHBlY3RpbmcuClBvcmsgYmVsbHkvS2ltIGNoaQpUaGUgbG9jYWwgcGVvcGxlIGluIGFsbCB0aGUgc21hbGwgdG93bnMgd2VyZSBncmVhdCB0b28sIGV2ZXJ5b25lIHdhcyBmcmllbmRseSBldmVuIGlmIHdlIGNvdWxkbid0IHVuZGVyc3RhbmQgc29tZSBvZiB0aGVtIHZlcnkgbXVjaC4gTW9zdCBwZW9wbGUgd2VyZSBvayBidXQgb2NjYXNpb25hbGx5IEkgcmVhbGx5IGhhZCB0byBsaXN0ZW4gdG8gZ2V0IGl0LgpTdW1tZXIgRnJ1aXQgQ3Jvc3RhdGEKTGF0ZWx5LCB0aGVyZSBiZWVuIG1vcmUgcG9zdHMgYWJvdXQgaXQgYXMgcGVvcGxlIGFyb3VuZCB0aGUgc3BvcnQgaGF2ZSBleHByZXNzZWQgbGVnaXRpbWF0ZSBjb25jZXJuLiBJdCBnaXZlbiB3aW5kIHRvIHRoZSBzYWlscyBvZiB0aGUgaG90IHRha2UgYXJ0aXN0cywgYnV0IGl0IGFsc28gZG9lc24gbWVhbiB0aGF0IHdlIGNhbiBpZ25vcmUgaXQuClNvbWV0aW1lcyBmb3IgMTAgdG8gMTQgaG91cnMgYXQgYSBzdHJldGNoIHdoZW4geW91IGFyZSBwbGF5aW5nIHRvdXJuYW1lbnRzLi4gCkxldCBzYXkgeW91IGFyZSBwbGF5aW5nIGEgaGVhZHMgdXAgc2l0IG4gZ28uIFlvdSBhcmUgb24gdGhlIGJ1dHRvbiwgYW5kIHlvdSBjb3ZlciB5b3VyIG9wcG9uZW50IHdobyBoYXMgMTBCQi4gClRoZXkgZXZlbiBtYWRlIHBpY3R1cmVzIG9mIGhvdyB0aGVzZSBhbmNlc3RvcnMgbG9va2VkIGxpa2Ugd2hlbiB0aGV5IHdlcmUgYWxpdmUuIApJIHRoaW5rIHRoaXMgaXMgaG93IG91ciBtaW5kIHByb3RlY3RzIHVzIHRvd2FyZHMgdGhlIGVuZC4gSXQgc2FpZCB0aGF0IHdlIGFyZSB5b3VuZywgZ3JvdyB1cCwgYW5kIHRoZW4sIHRvIHNvbWUgZXh0ZW5kLCByZXZlcnQuIEkgdGhpbmsgdGhlcmUgc29tZSB0cnV0aCB0byB0aGF0LCBidXQgbm90IGluIGEgYmFkIHdheS4KSSBJcmlzaCBDYXRob2xpYyBhbmQgd2UgdGhlIHNhbWUuIEkgY2FuIGltYWdpbmUgaGF2aW5nIGEgd2VkZGluZyB3aXRob3V0IG15IGF1bnQgYmVpbmcgdGhlcmUgICBzaGUgaXMgb25lIG9mIG15IGZhdm91cml0ZSBwZW9wbGUgaW4gdGhlIHdvcmxkLiAKTG9yZE5pYmJsZSAgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVG8gdGhlIGJlc3Qgb2YgbXkga25vd2xlZGdlLCBpbiByYW5rZWQgeW91IGFyZSByYW5rZWQgdG8gc2ltaWxhcmx5IHJhbmtlZCBwZW9wbGUuIEluIHBhaWQgZXZlbnRzIHlvdSBhcmUgbWF0Y2hlZCBtYWlubHkgd2l0aCBwZW9wbGUgd2l0aCB0aGUgc2FtZSBvciBhdCBsZWFzdCBzaW1pbGFyIHZpY3RvcnkgcmVjb3JkLiAKQW5kIGV2ZW4gdGhhdCBpcyBzb21ld2hhdCBkdWJpb3VzLCBzaW5jZSB0aGV5IHdlbnQgYmFjayB0byBhY3Rpbmcgb3V0IHRoZWlyIG5hdHVyZXMgcmFwaWRseS4gRXZlcnl0aGluZyBlbHNlIGNvdWxkIGJlIGNvbnNpZGVyZWQgbWVyZWx5IHRoZSBwcm9qZWN0aW9uIG9mIHRoZWlyIHdvcnNoaXBwZXJzLi4gCllvdSBtYXkgc2VlIGEgaGlnaGVyIHBlcmNlbnRhZ2Ugb2YgYmFkIGJlYXRzIGJlY2F1c2UgcGVvcGxlIGFyZSBwbGF5aW5nIGluIGhhbmRzIHdoZXJlIHRoZXkgcHJvYmFibHkgd291bGQgaGF2ZSBmb2xkZWQgaW4gYSBoaWdoZXIgc3Rha2VzIGdhbWUuLiAKRG9lc24ndCBtZWFuIEknbSBub3QgZ29pbmcgdG8gbGlzdGVuIHRvIHRoZW0uIApab28gTWlhbWkgUmV2ZWFscyBOZXcgTGl0dGVyIE9mIEVuZGFuZ2VyZWQgQWZyaWNhbiBQYWludGVkIERvZyBQdXBwaWVzCk9uIGEgc3RhbmRhcmQgd29ya2luZyBkYXksIEkgd291bGQgYnV5IGluIGZvciAkMzAwMCB3b3J0aCBvZiBvbmxpbmUgbXVsdGkgdGFibGUgdG91cm5hbWVudHMsIHBsYXkgMTIgYXQgb25jZSwgYXJvdW5kIDIwIDMwIHBlciBkYXksIHNwcmVhZCBhY3Jvc3MgdHdvIG1vbml0b3JzLiBJIHdvdWxkIHN0YXJ0IGF0IDVhbSwgdG8gZ2V0IGluIHN5bmMgd2l0aCB0aGUgVVMgYW5kIEV1cm9wZWFuIG1hcmtldHMsIGFuZCBwbGF5IHRocmVlIHRvIGZvdXIgZGF5cyBhIHdlZWsgZm9yIGFyb3VuZCBlaWdodCBob3VycyBhdCBhIHRpbWUuClNvdXRoIEtvcmVhbiB2ZXRlcmFucy9jb25zZXJ2YXRpdmVzIHRoYXQgZGVueSBhbnkgb2YgdGhlaXIgY3JpbWVzIGluY2x1ZGluZyBtYXNzYWNyZXMsIHJhcGVzLCBMYWkgRGFpIEhhbiwgc3lzdGVtYXRpYyBkaXNjcmV0ZSBwcm9zdGl0dXRpb24gcmluZ3MgaW4gU2FpZ29uIGNvdmVyZWQgYnkgdGhlIFVTIEFybXkgYXJlIHV0dGVyIHNjdW0gYW5kIHNob3VsZCBiZSBhc2hhbWVkIG9mIHRoZW1zZWx2ZXMuCldheSBiZXR0ZXIgZXhwZXJpZW5jZS4uIApXaGVuIHlvdSBnZXQgdGlyZWQgb2Ygb2dsaW5nIHRoZSBnaXJscyBhcm91bmQgdGhlIHBvb2wgYXQgVGhlIFBhbG1zLCB5b3UgbWlnaHQgd2FudCB0byB3YW5kZXIgaW50byB0aGVpciBwb2tlciByb29tcy4gQSBsb3cgbGltaXQgcm9vbSBkZWFscyBUZXhhcyBIb2xkICdlbSB3aXRoIHNwcmVhZHMgb2YgJDIgdG8gJDQgYW5kICQ0IHRvICQ4LiAKSXJvbmljYWxseSwgd2hpbGUgbmljZSBndXlzIHRoaW5rIHRoZXkgaGF2ZSB0byBrZWVwIGhlciBmcm9tIGJlY29taW5nIGVtb3Rpb25hbCB0byBtYWtlIHRoZSBjb25kaXRpb25zIHJpZ2h0IGZvciBzZXggdG8gb2NjdXIsIHRoZSBleGFjdCBvcHBvc2l0ZSBpcyB0cnVlLiBUaGUgbW9yZSBlbW90aW9uYWxseSBzdGltdWxhdGVkIGEgd29tYW4gaXMsIHRoZSBtb3JlIHNleHVhbCBzaGUgZmVlbHMgICBldmVuIGlmIHRoZXkgbm90IHBvc2l0aXZlIGVtb3Rpb25zLiAKVGhlIEdyZWF0ZXN0IFNob3dtYW4gbW90aW9uIHBpY3R1cmUgY2FzdCByZWNvcmRpbmcgaXMgYXQgbnVtYmVyIHR3bywgd2hpbGUgdGhlIG9mZmljaWFsIHNvdW5kdHJhY2sgZm9yIG5ldyBmaWxtIEJvaGVtaWFuIFJoYXBzb2R5IGlzIGEgbmV3IGVudHJ5IGF0IG51bWJlciBmaXZlLgpGb3Igb2lseSBhY25lIHByb25lIHNraW4sIEphbWllIHVzZXMgdGVhIHRyZWUgb2lsIHRvIHJlZ3VsYXRlIGFuZCBiYWxhbmNlIG9pbCBzZWNyZXRpb25zIGFuZCBob3Jtb25hbGx5IGRyaXZlbiBza2luIGJyZWFrb3V0cy4gU2hlIGFsc28gaW5jb3Jwb3JhdGVzIGEgZGV0b3hpZnlpbmcgbWFzc2FnZSB0byBhaWQgaW4gcmlkZGluZyB0aGUgYm9keSBhbmQgc2tpbiBvZiBhbnkgaW1wdXJpdGllcyBvciB0b3hpbnMuIFRvIHJlanV2ZW5hdGUgaGVhbHRoeSBza2luIGNlbGxzIGFuZCByZWR1Y2Ugc3RyZXNzIHJlbGF0ZWQgc2tpbiBwcm9ibGVtcywgc2hlIHVzZXMgbGF2ZW5kZXIgb3IgdmFuaWxsYSBmb3IgdGhlaXIgc29vdGhpbmcgYW5kIGNhbG1pbmcgZWZmZWN0cyBvbiB0aGUgc2tpbi4gU2hlIGFsc28gcmVjb21tZW5kcyBjb21iaW5pbmcgU3dlZGlzaCBtYXNzYWdlIHRlY2huaXF1ZXMgdG8gY2FsbSB0aGUgbmVydm91cyBzeXN0ZW0gYW5kIGluY3JlYXNlIG51dHJpdGl2ZSBjaXJjdWxhdGlvbiBpbiB0aGUgc2tpbi4KUG9rZXIgV29ybGQgU2VyaWVzIFdpbm5lcgpUaGUgZmlsbSBpcyBvbmx5IGFib3V0IDQwIG1pbnV0ZXMgbG9uZywgd2hpY2ggbWF5IGJlIDQwIG1pbnV0ZXMgdG9vIGxvbmcsIG9yIDQwIG1pbnV0ZXMgdG9vIHNob3J0LikuIApUaGVyZSBoYXMgbmV2ZXIgYmVlbiBhIGJpZyBwcm9ibGVtIHdpdGggdGhlIGFtb3VudCBvZiBzdWIgY2Fwcywgbm9yIGNhcnJpZXJzL2RyZWFkcy4gU3VwZXJjYXJyaWVycyB3ZXJlIG5lcmZlZCAoZnJvbSBtb3RoZXJzaGlwcyksIGFuZCBJJ20gbm90IHN1cmUgaG93IG1hbnkgZmVlbCBhYm91dCB0aGVtIG5vdywgYnV0IHRoZXkgd2VyZW4ndCBhIGJpZyBpc3N1ZSBhZnRlciBzYWlkIG5lZWQgKHByZXZpb3VzbHkgdGhleSB3ZXJlIHJhdHRpbmcgc2hpcHMgb24gc3Rlcm9pZHMgcmFyZWx5IHVzZWQgZm9yIFBWUCkuClJlZ2FyZGxlc3MgdGhlIGFib3ZlIGlzIHNpbXBseSBzcGVjdWxhdGlvbiBiZWNhdXNlIFVIUEQgdG8gbXkga25vd2xlZGdlIG1hZGUgbm8gZWZmb3J0IHRvIGNsZWFyIHRoaXMgdXAuIEl0IGJhZmZsZXMgbWUgeW91IGNhbiBzZW5kIG91dCBzdWNoIGEgdmFndWUgYmFkIGFsZXJ0IGFuZCBub3QgaGF2ZSBhbnkgcHVibGljIGNvbW1lbnQgb24gaXQuIEluIHJlZ2FyZHMgdG8gdGhlIGd1biwgSSB0aGluayBpdHMgaW1wb3J0YW50IHRvIGtub3cgZm9yIHN1cmUgaWYgdGhleSBoYXZlIG9uZSBidXQgYXQgdGhlIHNhbWUgdGltZSBJIHRoaW5rIGFuIGFsZXJ0IHNob3VsZCBnbyBvdXQgaWYgYW4gYWN0aXZlIHBvbGljZSBjaGFzZSBlbmRzIGF0IHRoZSBVbml2ZXJzaXR5IG9mIEhvdXN0b24uIFJlZ2FyZGxlc3MgaWYgdGhlIHN1c3BlY3QgaGFkIGEgZ3VuLCBJIHdvdWxkIHN0aWxsIGxpa2UgdG8ga25vdyBpZiB0aGVyZSBhcmUgY3JpbWluYWwvcyBhY3RpdmVseSB0cnlpbmcgdG8gZXZhZGUgcG9saWNlIG9uIGNhbXB1cy4KVGhlIG9ubHkgdHJvdWJsZSB3aXRoIHRoaXMgYXJyYW5nZW1lbnQgd2FzIG91ciBsb2NhdGlvbiBub3QgYSB0eXBpY2FsIFRydW1wIHByb2JsZW0uIFdlIHdlcmUgYXQgdGhlIGVuZCBvZiBhIGN1bCBkZSBzYWMgaW4gYW4gYWZmbHVlbnQgY29tbXVuaXR5IG9mIHNwYWNpb3VzIGhvbWVzIG9uIHNwcmF3bGluZyBwcm9wZXJ0aWVzLiAKR2V0IGNhbWVyYXMsIHVwZ3JhZGUgbG9ja3MsIHRoZXJlIGEgd2hvbGUgYXJ0aWNsZSBoZXJlIHNvbWV3aGVyZSBhYm91dCB1bm9idHJ1c2l2ZSBzZWN1cml0eSBtZWFzdXJlcy4gWW91ciBzaXN0ZXJzIGFyZSBnb2luZyB0byBnbyB0aHJvdWdoIGEgdG91Z2ggdGltZSwgYnV0IHRoZXkgY29tZSB0aHJvdWdoIGl0IHdpdGggeW91IGFuZCBTTyB0byBoZWxwIHRoZW0uIFlvdSBoYXZlIG5vdGhpbmcgdG8gZmVhciBmcm9tIHRoZSBjb3VydHMgYW5kIHNpbmNlIHNoZSBjb3VudGluZyBvbiBoZXIgcHJvZ3JhbW1pbmcgb2YgeW91IHRvIHJlbWFpbiBpbnRhY3Qgc2hlIG5vdCBhIHNlcmlvdXMgdGhyZWF0LiAKQmVjYXVzZSBjb250YWN0IChhbmQgY29uZmxpY3QpIGJldHdlZW4gdGhlIE90dG9tYW4gRW1waXJlIGFuZCBFdXJvcGUgd2FzIGZyZXF1ZW50IGR1cmluZyB0aGUgMTUwMHMgYW5kIDE2MDBzLCB0cmFkZSBnb29kcyBmcm9tIHRoZSBBbWVyaWNhcyByZWFjaGVkIHRoZSBPdHRvbWFuIEVtcGlyZSByZWxhdGl2ZWx5IHF1aWNrbHkuIApEb24ndCBtaXggcG9zaXRpdmUgYW5kIG5lZ2F0aXZlIGZlZWRiYWNrLiAKQWxsIGRhdGEgYXJlIGVuY3J5cHRlZCBhbmQgc2VudCBvbmx5IG9uY2Ugb3ZlciB0aGUgaW50ZXJuZXQuIEFsbCBlbmNyeXB0ZWQgc2Vuc2l0aXZlIGRhdGEgaXMgc3RvcmVkIGluIFVuaWJldCdzIHNlY3VyZSBzeXN0ZW0uIFVuaWJldCBmb2xsb3dzIGFuZCBjb21wbGllcyB3aXRoIHRoZSBQYXltZW50IENhcmQgSW5kdXN0cmllcyBEYXRhIFNlY3VyaXR5IFN0YW5kYXJkIChQQ0kgRFNTKSBhbmQgdGhvc2UgaXNzdWVkIGJ5IHRoZSBFdXJvcGVhbiBnYW1pbmcgYW5kIGJldHRpbmcgYXNzb2NpYXRpb24uV2hlcmUgY2FuIEkgZmluZCBnbG9zc2FyeSB3aXRoIGJldHRpbmcgdGVybXM/V2Ugb2ZmZXIgYW5kIG1haW50YWluIGEgYmV0dGluZyBnbG9zc2FyeSB3aGljaCBpcyBhIG5vbiBleGhhdXN0aXZlIGxpc3Qgb2YgdHJhZGl0aW9uYWwgYW5kIG1vZGVybiBiZXRzLiAKWW91ciBtYXRlIGluIHRoZSB2aWQgdGhlcmUgaXMgYW4gYWJzb2x1dGUgc29saWQgc3RhdGUgMTAwJSBmdWNraW5nIGlkaW90LgpCZWNhdXNlIHRoZXkgaGF2ZSB0aG9zZSB3ZWlyZCBleWVzIGFuZCBsb29rZWQgbGlrZSBuYWtlZCBjYXRzLiBCdXQgd2hlbiB0aGV5IGdldCBhcm91bmQgNyBtb250aHMgb3Igc28sIHRoZXkncmUgc3VwZXIgYm91bmN5IGFuZCBmdW4gYW5kIGZ1bm55IGFuZCBhIGxvdCBtb3JlIHJlbGF4ZWQgYW5kIHN0YXJ0aW5nIHRvIGxlYXJuIGEgbG90IG9mIHN0dWZmLi4gClVzIHRoZSBjbGltYXRlIHBsYW4sIFdlYXZlciBzYWlkIE1vbmRheSBhcyB0aGUgbGVnaXNsYXR1cmUgcmVjb252ZW5lZCBmb3IgdGhlIGZhbGwgc2l0dGluZy4gd2lsbCBoYXZlIGxvdHMgdG8gc2F5IGF0IHRoYXQgdGltZS4gV2hlbiB0aGUgTkRQIGFuZCBHcmVlbnMgc3RydWNrIHRoZWlyIHBvd2VyIHNoYXJpbmcgZGVhbCBsYXN0IHllYXIgXyBicmluZ2luZyBkb3duIENocmlzdHkgQ2xhcmsgTGliZXJhbCBnb3Zlcm5tZW50IFdlYXZlciBjb3VsZCBoYXZlIGRlbWFuZGVkIHRoYXQgSG9yZ2FuIGNhbmNlbCB0aGUgU2l0ZSBDIGRhbSBhbmQgYmxvY2sgYW55IExORyBtZWdhIHByb2plY3RzIGFzIHRoZSBwcmljZSBvZiBoaXMgc3VwcG9ydC4KSSBoYWQgYWxyZWFkeSBiZWVuIHBsYXlpbmcgYSAxMG5sIG9yIDI1bmwgZ2FtZSBsaXZlIHdpdGggYSBidW5jaCBvZiBmcmllbmRzIGZhaXJseSByZWd1bGFybHkuIEkgaGFkIG5vIGNvbmNlcHQgb2YgYmFua3JvbGwgbWFuYWdlbWVudCBhbmQgbm8gcmVhbCBpZGVhIG9mIGhvdyB0byBwbGF5IHBva2VyIChubyBIVUQsIG5vIHJlYWwgc3R1ZHksIG5vdGhpbmcpLiAKQydlc3QgdW5lIHBldGl0ZSBib3V0ZWlsbGUgYnJ1bmUgcXUnYXVjdW5lIG1haXNvbiBuZSBkZXZyYWl0IHNlIHBhc3Nlci4gQXZlYyBsZXMgcHJpeCBldCBsZXMgbmNlc3NpdHMgcXVpIGF1Z21lbnRlbnQsIGplIHN1aXMgY29udGVudGUgcXUnaWwgeSBhaXQgdW5lIGZhb24gZCdwYXJnbmVyIGRlcyB0b25uZXMgZCdhcmdlbnQgZCd1bmUgbWFuaXJlIGF1c3NpIHNpbXBsZSwgdW5lIG1hbmlyZSBzYW50LCB1bmUgbWFuaXJlIGNvbG9naXF1ZSBhdXNzaS4KKEhlcmUgeW91IG5vdCBnZXR0aW5nIGEgcGVyZmVjdCBhaXJ5IHNwb3QgYmVjYXVzZSB0aGUgbGFzZXIgaXNuIGlkZWFsLikuIApPbmUgb2YgdGhvc2Ugd2FzIG5pY2UgYW5kIGxvbmcgYW5kIGhhZCBzb21lIHRob3VnaHQgcHV0IGludG8gaXQuIEZlbHQgZ29vZC4gCkluIDIwMDgsIHRoZSBwZXJjZW50YWdlIG9mIGluanVyZWQgZG9ncyAoMTgyKSB0aGF0IGhhZCB0byBiZSBldXRoYW5pemVkICgyNykgd2FzIGFib3V0IDE1IHBlcmNlbnQuIElmIDE1IHBlcmNlbnQgb2YgdGhlIDQ1MiBkb2dzIGluanVyZWQgc2luY2UgMjAwOCBoYWQgdG8gYmUgcHV0IGRvd24sIHRoYXQgd291bGQgbWVhbiA2NyBncmV5aG91bmRzIHdlcmUgZXV0aGFuaXplZCBvdmVyIGZvdXIgeWVhcnMuLiAKV2hhdCBzaGUgZGlkbid0IGtub3cgLiBJIHdhcyBvbiBsYXNpeC4gSXQncyBhIG1lZGljYXRpb24gZm9yIGZsdWlkIHJldGVudGlvbi4gRXNwZWNpYWxseSBmb3IgdGhvc2Ugd2l0aCBoZWFydCBpc3N1ZXMuIEl0IG1ha2VzIHlvdSBwZWUgYSBsb3QuCkFzIGEgcHJvZ3JhbSBvZiB0aGUgQWJpbGl0eSBDZW50ZXIsIEFzc2lzdGFuY2UgRG9ncyBpcyBhIDUwMSAoYykoMykgY2hhcml0YWJsZSBvcmdhbml6YXRpb24sIGl0IGlzIGZ1bmRlZCB0aHJvdWdoIGluZGl2aWR1YWwgZG9uYXRpb25zLCBmb3VuZGF0aW9uIGdyYW50cyBhbmQgZnVuZHJhaXNpbmcgZXZlbnRzLiBGb3Igb3ZlciAyNSB5ZWFycywgQXNzaXN0YW5jZSBEb2dzIGhhcyBoZWxwZWQgY2hpbGRyZW4gYW5kIGFkdWx0cyB3aXRoIGRpc2FiaWxpdGllcyBhY2hpZXZlIGdyZWF0ZXIgaW5kZXBlbmRlbmNlIGJ5IHRyYWluaW5nIGFuZCBwbGFjaW5nIHNlcnZpY2UgYW5kIHRoZXJhcHkgZG9ncyB0byBhc3Npc3Qgd2l0aCB0aGUgaW5kaXZpZHVhbCdzIGRhaWx5IG5lZWRzLgpPciBwbGFudHMgdGhhdCBzZWxsIHN0dWZmIHRvIE1leGljbyB0aGF0IGFyZSBnb2luZyB0byBmaW5kIHRoZWlyIHNhbGVzIGRyeSB1cC4gQW5kIHRoZSBNZXhpY2FucyBoYXZlIGdvb2QgbmVnb3RpYXRvcnMgICBhbmQgdGhleSB3aWxsIHBpY2sgb3V0IHByb2R1Y3RzIHRoYXQgYXJlIHZlcnkgaGFybWZ1bCB0byB0aGUgcG9saXRpY2lhbnMgd2hvIHN1cHBvcnQgVHJ1bXAiIGFuZCBwdXQgYSB0YXJpZmYgb24gdGhlbSwgb3IgYSBxdW90YSB0byBtYWtlIGl0IGRpZmZpY3VsdCBmb3IgdGhlbSB0byBjb21wZXRlLiAiVGhleSBjYW4gZG8gdGhhdCBnYW1lLiAKSXQgYWxsIGRlcGVuZHMsIEphZ3Igc2FpZCwgb24gaG93IG1hbnkgd2luZ2VycyB0aGF0IHRlYW0gaGFzLCB3aGV0aGVyIGhpcyBzdHlsZSBhbmQgdGhlIGNsdWIncyBzdHlsZSB3b3VsZCBtZXNoLCB3aGV0aGVyIHRoZXkgaGF2ZSBwbGF5ZXJzIGhlIGNhbiBiZSBvbiB0aGUgc2FtZSB3YXZlbGVuZ3RoIHdpdGguIFllcywgbW9uZXkgZG9lcyBwbGF5IGEgcm9sZSwgdG9vLCBoZSBhZGRlZDogaWYgeW91IHNpZ24gZm9yIHRvbyBsaXR0bGUsIHRoZXkgY2FuIGtpY2sgeW91IG91dCBtaWQgc2Vhc29uLgpIZSB0aGUgb25lIHRoYXQgc2hvdWxkIGJlIHNpdHRpbmcgaW4gamFpbC4uIApSNDogKGF0IDM6MjkpIFRoZSBjcmVhdG9yIG9mIHRoaXMgdmlkZW8gbWFrZXMgdGhlIGJvbGQgY2xhaW0gdGhhdCBzZWNvbmQgcGVyc29uIHByb25vdW4gInlvdSIgZGVyaXZlcyBmcm9tIGEgbWlzc3BlbGxpbmcgYnkgZ2VybWFuIHByaW50aW5nIHByZXNzZXMgb2YgdGhlIHdvcmQgInRob3Uvb3UiIGJlY2F1c2UgdGhleSBkaWQgbm90IGhhdmUgdGhlIGFwcHJvcHJpYXRlIGxldHRlciBmb3IgdGhvcm4gYW5kIGhhZCBzdWJzdGl0dXRlZCBpdCB3aXRoICJ5IiwgaGVuY2UgIm91ID4geW91IiB3aGljaCAid2FzIGtlcHQgWy5dIGluIHByb251bmNpYXRpb24gZm9yIHNvbWUgcmVhc29uIiAodGhlaXIgd29yZHMpLiAKUG9rZXIgR2FtZSBUYWJsZXMgZm9yIFNhbGUKVG8gZXZlbiBqdWRnZSBteXNlbGYuIApXZSByb3V0aW5lbHkgYWZmZWN0IHRoZSBjb21tdW5pdHkgaW4gYSBmYXIgbW9yZSBwb3NpdGl2ZSBmYXNoaW9uIHRoYW4gYW55IGdyb3VwIGluIHRoZSBjb2xsZWdlIGJ5IGdldHRpbmcgcGVvcGxlIG9mIGdvb2QgaGVhcnQsIHNvdW5kIG1pbmQsIGFuZCBhIHNlbnNlIG9mIGRpc2NyZXRpb24gb250byB0aGUgZm9yY2UuLiAKVGVuZHMgdG8gYmUgbW9yZSByYWlzZSBoZWF2eSBwcmUuIFRoZXJlcyBhbHNvIG1vcmUgbGlnaHQgMyBiZXR0b3JzLiBHbG9iYWwgUExPIGlzIGFsc28gcHJldHR5IHNvZnQuIEl0IGEgcHJldHR5IGdvb2QgdHJhaW5pbmcgZ3JvdW5kcyB0byBtYWtlIHlvdXIgZW50cnkgd2F5IGludG8gbGl2ZSBQTE8uCjE4Ky4gRnJpZGF5IGFuZCBTYXR1cmRheS4gJDE1ICQxOC4gNzA4IE4uIFdpbHNvbi4gClRoZXkgaGF2ZSBtb2Rlc3QgZGVidHMgb2YgJDc4LDAwMC4gCldoYXQgYSBzbGFwIGluIHRoZSBmYWNlIHRoYXQgbXVzdCBoYXZlIGJlZW4uIApPdmVyYWxsLCBMZXdpcyBzYWlkLCB0aGUgZGVwYXJ0bWVudCBmaXJlZmlnaHRpbmcgY2hlZnMgY29va2VkIGFwcHJveGltYXRlbHkgNjAwIHBhbmNha2VzLCB0aHJlZSBsYXJnZSBjb250YWluZXJzIG9mIGVnZ3MsIG1vcmUgdGhhbiAyMCBwb3VuZHMgb2YgYmFjb24gYW5kIGxvdCBvZiBzYXVzYWdlLgpKdXN0IHRyeSB0byBoYW5nIG9uISBSZW1lbWJlciB0byBicmVhdGghLiBUaGF0J3Mgd2hhdCBpdCdzIGxpa2UgdG8gcmlkZSBiYXJlYmFjayBvbiBmcmVlIGJlYXN0IS4gCkZCSSBlbmRzIGludmVzdGlnYXRpb24gaW4gTGFzIFZlZ2FzIG1hc3Mgc2hvb3Rpbmcgd2l0aG91dCBmaW5kaW5nIG1vdGl2ZQpTaXh0ZWVuIG1vbnRocyBvbiwgdGhlIGJyYWNlcyBhcmUgZ29uZSBhbmQgQmVhdG9uIGlzIGp1Z2dsaW5nIG92ZXJzZWVpbmcgQ3JpbXNvbiBmcm9tIEJvc3Rvbiwgc3R1ZHlpbmcgYXQgSGFydmFyZCwgd2hlcmUgaGUgaGFzIGNsb3NlIHRvIGRvdWJsZSBhIG5vcm1hbCBjb3Vyc2UgbG9hZCwgYW5kIGEgam9iIGZpbmRpbmcgaW52ZXN0bWVudHMgZm9yIFdhbGwgU3RyZWV0IGhlYXZ5d2VpZ2h0cyBUaWdlciBNYW5hZ2VtZW50LgpBbiBleHRyYSBlcGlzb2RlIGZvciBhbiBlcGlsb2d1ZSB3b3VsZCBoYXZlIGhlbHBlZCBpbW1lbnNlbHkgaGVyZS4gCkZvciBpbnN0YW5jZSB5b3UgcGxheWVkIDM4MGhycyBvZiBsaXZlIHBva2VyIGxhc3QgeWVhciBhbmQgd2l0aCBhbiBhdmVyYWdlIG9mIDMwIGhhbmRzL2hyIHRoYXQncyBhIGxpdHRsZSBvdmVyIDEwayBoYW5kcyBpbiBhIHllYXIuIEZvciBjb21wYXJpc29uLCBJIHBsYXkgb25saW5lIGFuZCBoYXZlIGFscmVhZHkgcGxheWVkIG92ZXIgMTBrIGhhbmRzIHRoaXMgd2Vlay4gCk1ha2Ugc3VyZSB5b3VyIG1hc3NhZ2UgdGhlcmFwaXN0IGRvZXMgbm90IHVzZSBhY3VwcmVzc3VyZSBvciBkZWVwIHRpc3N1ZSBtYXNzYWdlLiBUaGVyZSBpcyBhY3R1YWxseSBhbiBhY3VwcmVzc3VyZSBwb2ludCBkZWVwIGluIHlvdXIgc2hvdWxkZXJzIHRoYXQgY2FuIGNhdXNlIGxhYm9yIHRvIGJlZ2luLiBUaGlzIGlzIGEgZ3JlYXQgcG9pbnQgdG8gaGl0IGlmIHlvdSBhcmUgcGFzdCBmb3J0eSB3ZWVrcyBhbmQgbG9va2luZyBmb3IgYW4gaW5kdWN0aW9uLCBidXQgaXQncyBpbXBvcnRhbnQgdGhhdCB5b3VyIG1hc3NhZ2UgdGhlcmFwaXN0IGF2b2lkIHRoaXMgc3BvdCBiZWZvcmUgZm9ydHkgd2Vla3MuIApBbnl0aGluZyBvbiB0aGUgQXJ0IExvZWIgaXMgcHJldHR5IGdvb2Qgc3R1ZmYuIEhvbmVzdGx5LCBDb2xkIE1vdW50YWluIGlzIGEgbGl0dGxlIHVuZGVyd2hlbG1pbmcsIGp1c3QgYSBzdGVlcCBoaWtlIHVwIHRvIGEgcHJldHR5IGxhY2sgbHVzdGVyIHN1bW1pdCwgYnV0IGl0IHN0aWxsIHdvcnRoIHNlZWluZyBpZiB5b3UgbmV2ZXIgYmVlbi4gSSBzZWVuIHBlb3BsZSBjYW1wIGluL25lYXIgdGhlIGdhcCB3aGVyZSBBcnQgTG9lYiBoaXRzIHRoZSBDb2xkIE1vdW50YWluIHNwdXIgdHJhaWwsIChJIHRoaW5rIGl0IGp1c3QgY2FsbGVkIERlZXAgR2FwLCBsaWtlIGV2ZXJ5IG90aGVyIGdhcCBpbiB0aGUgYXJlYSkuLiAKTGlrZSBIUiwgRmluYW5jZSwgTWFya2V0aW5nIGFuZCBTYWxlcywgSVQsIGV0Yy4gTm9wZSEuIApUaUw6IEluIG9uZSBzZWFzb24gb2YgdGhlIER1dGNoIHZlcnNpb24gb2YgIlN1cnZpdm9yLCIgdGhlIG1lbiBhbmQgd29tZW4gd2VyZSBzcGxpdCBhbmQgZ2l2ZW4gdGhlaXIgb3duIGlzbGFuZHMuIApUaGVyZSBhcmUgYSBudW1iZXIgb2Ygb3RoZXIgbW9uZXkgbWFraW5nIGluZm9ybWF0aW9uYWwgYm9va3MgaW5jbHVkZWQgdGhhdCB3aWxsIGdpdmUgeW91IHNvbWUgdmFsdWFibGUgaW5mb3JtYXRpb24gb24gaG93IHRvIG1ha2UgbW9uZXkgb25saW5lLiAKV2hlbiBhc2tlZCBhYm91dCBiYWxhbmNpbmcgaGlzIHBlcnNvbmFsIGFuZCBwcm9mZXNzaW9uYWwgbGlmZSBhbmQgcGxheWluZyBzbyBtYW55IHJvbGVzIGF0IGEgdGltZSBSYW5udmlqYXkgc2FpZCwgP0kgaGF2ZSB3b3JrIGFuZCBhIGZhbWlseSB0byBsb29rIGFmdGVyLCBidXQgeW91IGhhdmUgdG8gYmFsYW5jZSBpdCBvdXQsIGFuZCBtYWtlIHRpbWUgZm9yIGV2ZXJ5dGhpbmcuIEFwYXJ0IGZyb20gUm9hZGllcywgSSBhbSBhbHNvIGEgcHJvZHVjZXIuIEkgaGF2ZSBwcm9kdWNlZCBteSBvd24gbW92aWVzIGFuZCB2aWRlb3MuIEFzIGEgcGVyc29uIEkgYW0gdmVyeSBjcmVhdGl2ZSwgYW5kIEkga2VlcCBjb21pbmcgdXAgd2l0aCBuZXcgY29uY2VwdHMuIEkgaGF2ZSBubyBsZWlzdXJlIHRpbWUsIGJ1dCBiZWluZyBidXN5IGlzIGFsc28gZnVuIGFuZCBleGNpdGluZy4gSSBiZWxpZXZlIHlvdSBoYXZlIHRvIG1ha2Ugc2Vuc2UgZm9yIGV2ZXJ5dGhpbmcgeW91IGRvLj8oVGhpcyBhcnRpY2xlIGhhcyBub3QgYmVlbiBlZGl0ZWQgYnkgRE5BJ3MgZWRpdG9yaWFsIHRlYW0gYW5kIGlzIGF1dG8gZ2VuZXJhdGVkIGZyb20gYW4gYWdlbmN5IGZlZWQuKQpJZiBieSBub2RlcyB5b3UgbWVhbiBtaW5lcnMsIHllcy4gCkxldXJzIHBybWljZXMgc29udCBsLCBpbHMgbm91cyBlbmNlcmNsZW50IGV0IGVuY2FkcmVudCBjaGFjdW4gZGUgbm9zIGFjdGVzLiAKSSB3YXMgaW4gbWlkZGxlIHNjaG9vbCB3aGVuIEkgZmlyc3QgZ290IGludG8gZG9jdG9yIHdobyBhbmQgd2F0Y2hlZCB0aGUgZmlyc3QgZmV3IHNlcmllcyByZWxpZ2lvdXNseSwgZ29pbmcgYmFjayB0byBjbGFzc2ljIHdobyBhbmQgYnV5aW5nIGFsbCB0aGUgbm92ZWxzIGFuZCBiaWcgZmluaXNoIGFuZCBvdmVycHJpY2VkIG1lcmNoYW5kaXNlLiAKSG93ZXZlciwgaXRzIHRoZSBsYXN0IHRoaW5nIHRoYXQgc2hvdWxkIGJlIGhhcHBlbmluZyB0byBoaXMgY2hhcmFjdGVyIGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mICJtYWtpbmcgdGhlIEFsbGlhbmNlIGRpdmVyc2UgYW5kIGludGVyZXN0aW5nIiBiZWNhdXNlIGl0IGp1c3QgbGVhZHMgaGltIGRvd24gdGhlIHBhdGggb2YgYmVpbmcgcGFydCBvZiB0aGUgc2FtZSBtb25vbGl0aGljIHBpY3R1cmUgb2YgY2hpdmFscnkgYXMgdGhlIHJlc3Qgb2YgdGhlIEFsbGlhbmNlLiBXaGVuIEdlbm4gaXMgYW4gYWdncmVzc2l2ZSwgZXhpbGVkIGxlYWRlciBvdXQgZm9yIHZlbmdlYW5jZSBoZSBwcm92aWRlcyB2YWx1YWJsZSBkaXZlcnNpdHkgdG8gdGhlIEFsbGlhbmNlIGNhc3QuIENoYW5naW5nIHRoYXQgbGVzc2VucyB0aGUgZGl2ZXJzaXR5Li4gCkRyaW5raW5nIGl0IHJlZ3VsYXJseSB3aWxsIGhlbHAuIEJ1dCBpZiB5b3UgYXJlbid0IGEgZmFuIG9mIG1pbGssIG9yIG1heSBiZSBzdWZmZXJpbmcgZnJvbSBsYWN0b3NlIGludG9sZXJhbmNlIGNvbmRpdGlvbiwgeW91IGNhbiBzdWJzdGl0dXRlIHRoaXMgd2l0aCBjYWxjaXVtIHRhYmxldHMgYW5kIHN1cHBsZW1lbnRzLiAKSSBhY3R1YWxseSBsb3ZlIHRvIHNpdCBkb3duIGFuZCBicmVhayBhcGFydCBteSBvd24gb3Igc29tZW9uZSBlbHNlIGdhbWUgYW5kIGxvdmUgdG8gc3R1ZHkgR1RPIHN0cmF0ZWd5IGFzIHdlbGwuIApMT05ET04gKCkgICBCcml0aXNoIGxhd21ha2VycyB3aWxsIGxlYXZlIHRoZSBQYWxhY2Ugb2YgV2VzdG1pbnN0ZXIgZm9yIGF0IGxlYXN0IHNpeCB5ZWFycyB0byBhbGxvdyBmb3IgYSBwcm9wb3NlZCBtdWx0aSBiaWxsaW9uIHBvdW5kIHJlZnVyYmlzaG1lbnQsIHRoZSBmaXJzdCB0aW1lIHBvbGl0aWNpYW5zIGhhdmUgbGVmdCB0aGUgaGlzdG9yaWMgYnVpbGRpbmcgZW4gbWFzc2Ugc2luY2UgV29ybGQgV2FyIFR3by4KVGhlc2UgZXhwZXJpbWVudHMgcHJvdmlkZSBhIHZhcmlldHkgb2YgaW5mb3JtYXRpb24sIGluY2x1ZGluZyBoaWdoIGFsdGl0dWRlIHdpbmQgc2hlYXIgYW5kIHZlbG9jaXR5LCBkZW5zaXR5IGFuZCB0ZW1wZXJhdHVyZSBvciBwYXJ0aWNsZXMgaW4gdGhlIHVwcGVyIGF0bW9zcGhlcmUsIGFuZCBjaGFuZ2VzIGluIHRoZSBpb25vc3BoZXJlLiAKR3Jvd24gb24gdGhlIGlzbGFuZCBvZiBCcmEgb25seSBtZXRyZXMgZnJvbSB0aGUgc2VhIGF0b3AgbGltZXN0b25lIGRvbWluYXRlZCBzb2lscyBpdCB3YXMgYWdlZCBzaXggbW9udGhzIGluIHN0YWlubGVzcyBzdGVlbCB0byBiZXN0IGFsbG93IGl0cyBjcmVhbXkgcGVhciwgcmlwZSBjYW50YWxvdXBlLCBsZW1vbiBhbmQgZ3JlZW4gZmlnIG5vc2UgdG8gc2luZy4gVGhlIGF0dGFjayBpcyByb3VuZCBhbmQgaG9uZXllZCB3aXRoIGp1c3QgZW5vdWdoIHNhbGluaXR5IGFuZCBhY2lkaXR5IHRvIGtlZXAgaXQgZnJlc2guIFRoaW5rIHNjYWxsb3BzLCBwcmF3bnMsIHN0ZWFtZWQgbXVzc2VscyBvciBmaXNoIHRhY29zLi4gCkJlZm9yZSBwcmVzY3JpYmluZyBhbnl0aGluZywgYSBob21lb3BhdGhpYyB2ZXRlcmluYXJpYW4gd2lsbCBxdWVzdGlvbiB5b3UgYWJvdXQgeW91ciBkb2cncyBsaWZlc3R5bGUsIGRpZXQsIGFuZCBiZWhhdmlvci4gCkhvd2V2ZXIsIHRoZSBtb3N0IGxpa2VseSBkb3duc2lkZSB0byB0aGVzZSBhY3J5bGljIGFkZCBvbnMgaXMgaW5mZWN0aW9uLCB3aGljaCBjYW4gcmVzdWx0IGZyb20gaW1wcm9wZXIgYXBwbGljYXRpb24sIHRoZSB0ZWNobmljaWFuIHVzaW5nIHVuc3RlcmlsaXplZCB0b29scywgb3IgdGhlIG5haWxzIGJlaW5nIGphcnJlZCBsb29zZSBkdXJpbmcgZXZlcnlkYXkgYWN0aXZpdGllcy4gSWYgdGhleSBzZXBhcmF0ZSBmcm9tIHlvdXIgbmF0dXJhbCBuYWlscywgdGhlIHBvY2tldCB0aGF0IGNhbiBmb3JtIGlzIGFuIG9wZW4gaW52aXRhdGlvbiBmb3IgYmFjdGVyaWFsIG9yIGZ1bmdhbCBpbmZlY3Rpb24uIE5haWwgZnVuZ3VzIChvciBvbnljaG9teWNvc2lzKSB0aHJpdmVzIGluIHRoZSB3YXJtLCBtb2lzdCBlbnZpcm9ubWVudCBiZXR3ZWVuIGZhdWx0eSBzZWFscyBhbmQgY2FuIGxlYWQgdG8gZGVmb3JtZWQgbmFpbHMgdGhhdCBhcmUgZGlzY29sb3JlZCwgdGhpY2sgYW5kIHJvdWdoLiAKVGhlIHJlbGlnaW91cyByaWdodCBGYW1pbHkgQ291bmNpbCBoYXMgbG9uZyBiZWVuIGEgZm9lIG9mIGV4cGFuZGVkIGdhbWJsaW5nLCBidXQgaXQgcmFyZWx5IGlzIHJlbHVjdGFudCB0byBpZGVudGlmeSBpdHNlbGYuIApTaGUgdHJpZXMgYWdhaW4sIGFuZCBpdCB3YWtlcyB1cCBpbiBhIGdydW1weSBtb29kLiAKSGUgd2FzIG1hZCB5b3UgZGlkbid0IHBsYXkgdGhlIHBhcnQgaGUgaGFkIGluIGhpcyBoZWFkLiAKV2hhdCBkbyB5b3UgbWVhbiBieSBiZXJuaWUgc3VwcG9ydCBydW5uaW5nIGRlZXA/IERvIHlvdSBtZWFuIGhpcyB2b3RpbmcgZmFucyBzdXBwb3J0IGhpbSBzbyBzdHJvbmdseT8gSWYgdGhhdCB3aGF0IHlvdSBtZWFuIHRoZW4gSSBzYXkgd2hhdCB0aGUgdm90ZXJzIHdhbnQgbWFrZXMgbGl0dGxlIGRpZmZlcmVuY2UgYXMgb2J2aW91cyBmcm9tIHdoYXQgaGFwcGVuaW5nIHJpZ2h0IG5vdy4gCkdldCBhIGZyZWUgZG93bmxvYWQgZm9yIE9wZXJhdGluZyBzeXN0ZW1zIHNvZnR3YXJlIGluIHRoZS4gClNvbWUgbWF5IHF1ZXN0aW9uIHRoZSBFNDMncyBsZWdpdGltYWN5IGFzIGFuIEFNRyBwcm9kdWN0LCBlc3BlY2lhbGx5IGdpdmVuIHRoZSBmYWN0IHRoYXQgaXQgbGFja3MgYW4gZWFyZHJ1bSBzaGF0dGVyaW5nLCBoYW5kIGJ1aWx0IGVuZ2luZSB0aGF0IGhvbm91cnMgdGhlIG9sZCBBTUcgcGhpbG9zb3BoeSBvZiAib25lIG1hbiwgb25lIGVuZ2luZS4iIEZvcnR1bmF0ZWx5LCB0aGUgdHdpbiB0dXJibyBWNiB1bmRlciB0aGUgaG9vZCBpcyBwbGVudHkgcG93ZXJmdWwgZm9yIGp1c3QgYWJvdXQgYW55IHNjZW5hcmlvLiBBIHNsaWNrIDkgc3BlZWQgYXV0b21hdGljIGRlbGl2ZXJzIHF1aWNrIGdlYXIgY2hhbmdlcyBib3RoIHNtb290aGx5IGFuZCBzZWFtbGVzc2x5LiAKQnV0IHRoaXMgZG9lc24gbmVjZXNzYXJpbHkgc2lnbmFsIGxvbmcgdGVybSB0cm91YmxlIGZvciB0aGUgaVBob25lIGJ1c2luZXNzIGFzIGEgd2hvbGUsIGFjY29yZGluZyB0byBDcmVkaXQgU3Vpc3NlLiBUaGUgcGxhbnMgbGV0IEFtZXJpY2FucyBwYXkgZm9yIGFuIGlQaG9uZSBpbiBtb250aGx5IGluc3RhbGxtZW50cyAoVVMkMzYuNTggZm9yIHRoZSA2NEdCIGlQaG9uZSA2UykgYW5kIHVwZ3JhZGUgdG8gYSBuZXcgaVBob25lIGV2ZXJ5IHllYXIuIENyZWRpdCBTdWlzc2Ugc2F5cyB0aGVzZSBuZXcgaW5zdGFsbG1lbnQgcGxhbnMgd2lsbCBhY2NlbGVyYXRlIHRoZSByYXRlIGF0IHdoaWNoIHBlb3BsZSB1cGdyYWRlIHRoZWlyIGlQaG9uZXMsIGEgdGhlb3J5IGJhY2tlZCB1cCBieSBpdHMgcmVzZWFyY2guLiAKIlRocm91Z2guIHRoaXMgd2VlayBhbmQgZWFybHkgeWVzdGVyZGF5IGFmdGVybm9vbiBvdXIgaW52ZXN0aWdhdGlvbiBzdGFydGVkIHRvIGRpcmVjdCBvdXJzZWx2ZXMgdG8gdGhlIGRhdWdodGVyLCIgaGUgc2FpZC4KRGVzcGl0ZSB0aGUgZWxpbWluYXRpb24sIEtldmluIGlzIHRha2luZyBoaXMgcm9sZSBvbiB0aGUganVyeSBleHRyZW1lbHkgc2VyaW91c2x5IGFuZCB3aWxsIGJlIHZvdGluZyBmb3IgdGhlIGhvdXNlZ3Vlc3Qgd2hvIHBsYXllZCB3aXRoIHRoZSBtb3N0IG11bHRpIGZhY2V0ZWQgc3RyYXRlZ3kuIEkgc3RpbGwgaW4gdGhlIGdhbWUuIEkgaGF2ZSBhIHZvdGUgYW5kIGl0IHdpbGwgaW5mbHVlbmNlIHdobyB3aWxsIHdpbiB0aGUgdGl0bGUgb2YgQmlnIEJyb3RoZXIgQ2FuYWRhIHNlYXNvbiB0aHJlZSBhbmQgdGhhdCBtZWFucyBhIGxvdCB0byBtZS4gS2V2aW4gaGFzIGhpZ2ggaG9wZXMsIHRoYXQgZXZlbiB0aG91Z2ggaGUgd2FzIHVuYWJsZSB0byBtYWtlIGl0IHRvIHRoZSBmaW5hbGUsIHRoYXQgaGUgYmUgcmVtZW1iZXJlZCBhcyB0aGUgY3VubmluZyBwbGF5ZXIgd2hvIGZlbGwgdmljdGltIHRvIGFuIHVucHJlY2VkZW50ZWQgdHdpc3QuIHdhbnQgQ2FuYWRhIHRvIHJlbWVtYmVyIG1lIGFzIGEgZ3V5IHRoYXQgZ2F2ZSBldmVyeXRoaW5nLiBJIGxlZnQgbXkgaGVhcnQgYW5kIHNvdWwgaW4gdGhhdCBob3VzZSBhbmQgdGhhdCB3aHkgSSBmZWVsIHNvIGRlZmxhdGVkIHRvZGF5LiBJIGVuam95ZWQgdGhpcyBleHBlcmllbmNlIHRvIHRoZSBmdWxsZXN0IGV4dGVudC4gQnJvdGhlciBDYW5hZGEgY29udGludWVzIG9uIFN1bmRheXMsIE1vbmRheXMgYW5kIFdlZG5lc2RheXMgb24gR2xvYmFsLgpJIG5vdCBzdXJlLiBJIGhhdmUgcGVyaGFwcyBhIGRvemVuIHRpbGUgbWFudWZhY3R1cmVyIGNhdGFsb2dzIGZyb20gYWJvdXQgdGhpcyBwZXJpb2QgKDE5MzAgYW5kIG5vbmUgaGF2ZSBzdHJ1Y2sgbWUgYXMgc3Ryb25nbHkgYXMgdGhpcyBvbmUgZG9lcyBpbiBpdHMgInJlbGF0aW9uIiB0byBWYW5kZXJwb2VsLiAKTm90IHRoZSBtb3N0IHBlcnNvbmFsIGV4cGVyaWVuY2UgSSBoYWQsIG5vciB0aGUgZ3JlYXRlc3QgYm9keSBvciB0aWdodGVzdCBwdXNzeSwgYnV0IGEgZ29vZCwgcHJvZmVzc2lvbmFsIHBlcmZvcm1hbmNlLjcvMTAuIApJbnN1cmFuY2UgZGVkdWN0aWJsZSBkZXRlcm1pbmVzIHRoZSBvdXRjb21lIGZvciByZXBhaXJzIHRvIHN0cmF0YQpUaGlzIFRydXRoIENvbW1pc3Npb24sIGxlZCBieSBteSBvd24gU2VuYXRvciwgUGF0cmljayBMZWFoeSAoVlQpLCBpcyBhbiBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBwYXJ0IG9mIHRoZSBjbGVhbnNpbmcgcHJvY2VzcyB0aGF0IG11c3QgdGFrZSBwbGFjZSB0byByZW1vdmUgdG9ydHVyZSBmcm9tIG9mZmljaWFsIFVTIHBvbGljeS4gCldoYXQgYW4gdW5ncmF0ZWZ1bCBicmF0IHNoZSBpcy4gCkkgaGF2ZSBhIGhhbGYgYnJvdGhlciBhbmQgc2lzdGVyIEkgaGF2ZSBubyByZWxhdGlvbnNoaXAgd2l0aCwgYmVjYXVzZSBteSBtb3RoZXIgZGlkbiB3YW50IG1lIHRvIGludGVyYWN0IHdpdGggdGhlIG90aGVyIHdvbWFuIGtpZHMuIApOb3QgY29tcHJvbWlzaW5nIGEgdG9kZGxlcnMgaW1tdW5lIHN5c3RlbSB3aXRoIDMgZGlmZmVyZW50IHZhY2NpbmVzIGFsbCBhdCBvbmNlIHNlZW1zIGxpa2UgYSBubyBicmFpbmVyIHRvIG1lLiAKVGhleSBkZWJhdGVkIGl0IGluIGRldGFpbCBhbmQgZGVjaWRlZCBleHBsaWNpdGx5LCBieSBhIGxhcmdlIG1hcmdpbiwgdGhhdCBPdHRhd2EgZGlkIG5vdCB3YW50IGl0LiAKSG93ZXZlciwgSSBkaXNjdXNzZWQgdGhpcyB3aXRoIGEgY3VycmVudCBmcmllbmQgb25lIGV2ZW5pbmcgYXMgd2Ugd2Fsa2VkIGRvd24gbWVtb3J5IGxhbmUuIFRoZXkgc3VnZ2VzdGVkIHRoYXQgbWF5YmUgaXQgYmVzdCBub3QgdG8gYnJpbmcgdGhpcyB1cDsgcGVyaGFwcyB0aGlzIGNsYXNzbWF0ZSBpcyBkb2luZyBiZXR0ZXIgYW5kIEkgbWF5IGJyaW5nIHVwIHNvbWUgb2xkIG1lbW9yaWVzIHRoYXQgdGhlIHBlcnNvbiBtYXkgaGF2ZSBmb3Jnb3R0ZW4gKG9yIHdvdWxkIHJhdGhlciBmb3JnZXQpLCBhbmQgbXkgY29tbWVudHMgY291bGQgbWFrZSB0aGluZ3Mgd29yc2UuLiAKSSBzcGVudCBhIG1lbW9yYWJsZSBzdW1tZXIgYXQgSW50ZWwsIGFuZCB0aGUgSW50ZWwgQUkgbGFiICBhbmQgd29ya2luZyBvbiBuZXVyYWwgbmV0d29ya3MgZm9yIHRoZSBJbnRlbCBtYW51ZmFjdHVyaW5nIHByb2Nlc3MuLiAKSGV1dGUgYmVnaW5udCBzaWUgd2llZGVyLCBkaWUgUnV0YSBkZWwgR2FsbG8sIGRpZSBrdWxpbmFyaXNjaGUgUnVuZHJlaXNlIGR1cmNoIGRhcyBBcmlkYW5ldGFsLiBCZXJlaXRzIGltIDExLiBKYWhyIGdpYnQgZXMgZGllc2UgU29tbWVyIEFrdGlvbiwgYmVpIGRlciBSZXN0YXVyYW50cywgVGFzY2FzLCBCYXJzIHVuZCBDYWZzIEdzdGUgZWlubGFkZW4sIHR5cGlzY2ggcGFsbWVyaXNjaGUgdW5kIGtyZWF0aXZlIFRhcGEgS3JlYXRpb25lbiB6dSBrb3N0ZW4gdW5kIHp1IGJld2VydGVuLiBEYXp1IGdpYnQgZXMgZWluIEdldHJuayB1bmQgZGFzIHVtIHVuZ2xhdWJsaWNoZSAyLDUwICEKT3V0bG9vayBXb3JrIGZvciBtYXNzYWdlIHRoZXJhcGlzdHMgaXMgZXhwZWN0ZWQgdG8gaW5jcmVhc2UgYnkgMjAgcGVyY2VudCBiZXR3ZWVuIDIwMTAgYW5kIDIwMjAsIGZhc3RlciB0aGFuIHRoZSBhdmVyYWdlIG9jY3VwYXRpb24sIGFjY29yZGluZyB0byB0aGUgc3RhdGlzdGljcyBidXJlYXUuIFRoZSBzdGF0ZXMgYXJlIGluY3JlYXNpbmdseSByZXF1aXJpbmcgZm9ybWFsIGxpY2Vuc2luZyBvZiBtYXNzYWdlIHRoZXJhcGlzdHMsIGdpdmluZyBtb3JlIGxlZ2l0aW1hY3kgdG8gbWVkaWNhbCBtYXNzYWdlIGZvciBwYWluIHJlbGllZi4gUG9wdWxhdGlvbiBhZ2VzLCBidXQsIHNpbWlsYXIgdG8gb3RoZXIgcHJhY3RpdGlvbmVycywgbWVkaWNhbCBtYXNzYWdlIHRoZXJhcGlzdHMgaW4gaG9zcGl0YWxzIGFuZCB0aGVyYXB5IGNlbnRlcnMgd2lsbCBnZW5lcmFsbHkgb25seSByZWNlaXZlIHBhcnQgdGltZSBwb3NpdGlvbnMuIApCdXQgaGUnbGwgbm90IHdoaW1wZXIuIEhlJ2xsIGFjY2VwdCB0aGVzZSAgIG9mIHRoZSAiZXN0ZWVtIiBpbiB3aGljaCBoZSBpcyBoZWxkLCBzbWlsZSwgYnJhdmVseSBhbmQga2VlcCBwbHVnZ2luZzsgUGVyaGFwcyBTdW5kYXkgbW9ybmluZywgKG1vc3QgRGFkcyB3b24ndCBldmVuIGtub3cgdGhlICdkYXkgYmVlbiBzZXQgYXNpZGUgZm9yJ3RoZW0pIGhlIHdpbGwgYmUgSSB0aW1lIHNoYWxsIGdvLCBJZiB3aXRoIGpveSB5b3VyIGFnZSBzaGFsbCBzaGluZSwgdGhleSEgdGhlICJob21lIG9mIEFpci4gClJlYWQgb24gYW5kIGZpbmQgb3V0Li4gClRoZW4geW91IHBsdWNrIHdpdGhlaXRoZXIgeW91ciB0aHVtYiBvciB5b3VyIHBvaW50ZXIgZmluZ2VyLCB3aGF0ZXZlciB5b3UgZmVlbGNvbWZvcnRhYmxlIHdpdGguIApJdCB3b3VsZCBiZSB3cm9uZyBmb3IgbWUgdG8gcnVuIGlmIEkgaW50ZW5kZWQgdG8gZG8gdGhhdCB3aXRob3V0IHRlbGxpbmcgcGVvcGxlLiJDYWxlbmRhciA5IFNhdDEwIFN1bjExIE1vbjEyIFR1ZTEzIFdlZCBNYW5pbG93IExhcyBWZWdhczogVGhlIEhpdHMgQ29tZSBIb21lISBXZXN0Z2F0ZSBMYXMgVmVnYXMgQ2FzaW5vLiAKQXV0aXNtL2FzcGVyZ2VycyB0aGF0IG1ha2VzIGl0IHRvdWdoIHRvIHNvY2lhbGl6ZSBub3JtYWxseT8gNyBldXJvIGNvZmZlZS4gCiJUaGUgY2x1YnMgZGlkIHJlc3BvbmQgdG8gdGhlIHBvbGljeSBzaG9ja3MgYW5kIGl0IGRlcGVuZGVkIG9uIHRoZWlyIGZpbmFuY2lhbCBjYXBhY2l0eSBvbiBob3cgdGhleSBjb3VsZCByZXNwb25kLCIgaGUgc2FpZC4gCklSTCwgdGhlIG9ubHkgbWFqb3IgY29uZmxpY3QgdGhhdCBhaXJzaGlwcyB3ZXJlIHVzZWQgaW4gd2FzIFdXSSwgd2hlcmUgdGhlaXIgZnJhZ2lsaXR5IGFuZCB2dWxuZXJhYmlsaXR5IHRvIGFudGkgYWlyY3JhZnQgZmlyZSAoYW5kIGxhdGVyIHRvIGRlZmVuZGluZyBmaWdodGVycykga2VwdCB0aGVtIGZyb20gYmVpbmcgdXNlZCBlZmZlY3RpdmVseSBvbiB0aGUgZnJvbnQgbGluZXMgd2hlcmUgZmxhayBndW5zIGFib3VuZGVkLiAKQnV0IG1pbmltYWxpc20gaXMgbm90IGFtYmllbnQgbXVzaWMgICBpdCBkZW1hbmRzIHRvIGJlIGxpc3RlbmVkIHRvLCBpdCBjYW4ndCBiZSBhYnNvcmJlZCBwYXNzaXZlbHkuIApJIGNvdWxkIGhhdmUgYmVlbiBhIGhvYXJkZXIgb3IgYW4gYWJ1c2VyLiAKTGV0J3Mgbm90IGZvcmdldCBob3cgaG93IG5vYmxlIHdlIGFyZS4gSXQncyBlbm91Z2ggdG8gcmVtaW5kIHRoYXQgUG9sYW5kIGF0dGFja2VkIEN6ZWNoaWEgYmVmb3JlICghKSB0aGUgd2FyIFdJVEggdGhlIE5hemkgR2VybWFueSEhISBBbmQgdGhlbiBzdXJwcmlzZSwgc3VycHJpc2Ugbm8gb25lIGNvbWVzIHRvIGhlbHAgdXMsIHdoZW4gdGhlIE5hemlzIGF0dGFja2VkIHRoZSBwb29yLCBpbm5vY2VudCwgdmljdGltIFBvbGVzIC4KSSBhIGJpdCBjb25mbGljdGVkIG9uIGV4cG9zaW5nIGFsbCBvZiB0aGVtLiAKU2Vsb24gdW5lIHNvdXJjZSBwcm9jaGUgZGUgbCdlbnF1dGUsIGxlcyBkaXJlY3RldXJzIGRlcyBjYXNpbm9zIFBhcnRvdWNoZSBkZSBDYW5uZXMsIEJhbmRvbCAoVmFyKSBldCBMYSBHcmFuZGUgTW90dGUgKEhyYXVsdCkgZm9udCBwYXJ0aWUgZGVzIHBlcnNvbm5lcyBpbnRlcnJvZ2VzLiBVbmUgc2VwdGltZSBwZXJzb25uZSwgaW50ZXJwZWxsZSBnYWxlbWVudCwgbidhIGZpbmFsZW1lbnQgcGFzIHQgcGxhY2UgZW4gZ2FyZGUgIHZ1ZS4gTGVzIGVucXV0ZXVycyBkdSBzZXJ2aWNlIGNlbnRyYWwgZGVzIGNvdXJzZXMgZXQgZGVzIGpldXgsIGNoYXJncyBkZXMgaW52ZXN0aWdhdGlvbnMsIGxlcyBzb3Vwb25uZW50IGQ/YXZvaXIgdG91Y2ggZGVzIGNvbW1pc3Npb25zIGRhbnMgbGUgY2FkcmUgZGUgY2Ugc3lzdG1lIG9jY3VsdGUuCldoZW4gYXNrZWQgaWYgaGUgd2FzIGdvaW5nIHRvIHdyaXRlIGEgYm9vaywgYXMgdGhlIG90aGVyIGRyYWdvbnMgaGF2ZSwgQ3JveG9uIHNhaWQgaXQgZGlkbiBpbnRlcmVzdCBoaW0uIFNhaWQgVHJlbGl2aW5nLCB3aG8gaXMgNzIsIHRvbyB5b3VuZyB0byB3cml0ZSBhIGdvZGRhbW4gYm9vay4gV2FpdCB0aWxsIHlvdSBnZXQgc29tZSBleHBlcmllbmNlLi4gCkEgZGVhbCBhdCB0aGUgU2FuZHMgYXQgR3JhY2UgQmF5IFJlc29ydCBpbiBUdXJrcyBDYWljb3MgdXJnZXMgZGFkcyB0byAiQ2FzaCBpbiBZb3VyIEtpZHMuIiBEYWRzIHdobyB0cmF2ZWwgd2l0aCB0aGVpciBjaGlsZHJlbiBvdmVyIEZhdGhlciBEYXkgZ2V0ICQxMDAgcGVyIGtpZCAoMTYgb3IgeW91bmdlcikgb2ZmIHRoZWlyIHJlc29ydCBiaWxsLiBEYWQgY2FuIGNhc2ggaW4gdXAgdG8gZm91ciBraWRzIGZvciBhIG1heGltdW0gJDQwMCBvZmYgdGhlaXIgc3RheSBhdCB0aGUgZmFtaWx5IGZyaWVuZGx5IHJlc29ydHMuIFRoaXMgZGVhbCBpcyB2YWxpZCBmb3Igc3VpdGUgYm9va2luZ3Mgb2YgZm91ciBuaWdodHMgb3IgbW9yZSB0aGF0IGZhbGwgb3ZlciBGYXRoZXIgRGF5IChKdW5lIDE2KS4uIApJZiBvdmVydXNlZCwgbm9uIHN0ZXJvaWRhbCBhbnRpIGluZmxhbW1hdG9yeSBkcnVncywgYW5kIHRoZSBtb3JlIHBvd2VyZnVsIHByZXNjcmlwdGlvbiBkcnVncywgd2lsbCBjYXVzZSBjaHJvbmljIGluZmxhbW1hdGlvbiBhbmQgZGFtYWdlIHRoZSBsaXZlciBhbmQgZ2FzdHJvaW50ZXN0aW5hbCB0cmFjdC4gVGhlc2UgZHJ1Z3MgYWxzbyBoYXZlIGEgc2lnbmlmaWNhbnQgbmVnYXRpdmUgZWZmZWN0IG9uIGNhcnRpbGFnZSBhbmQgam9pbnQgaGVhbHRoLCBsZWFkaW5nIHRvIGNocm9uaWMgaW5mbGFtbWF0aW9uIGluIHRoZSBqb2ludHMuQSByZWNlbnQgY29uZmVyZW5jZSBvbiBDaHJvbmljIERpc2Vhc2UgYW5kIEluZmxhbW1hdGlvbiBpbiBCZWxsZXZ1ZSwgV2FzaGluZ3RvbiB0aGF0IHdhcyBob3N0ZWQgYnkgRHIuIE1hcmsgU2NoYXVzcyBicm91Z2h0IHRvZ2V0aGVyIHNvbWUgb2YgdGhlIGJyaWdodGVzdCBtaW5kcyB3b3JraW5nIHRvIHByZXZlbnQgY2hyb25pYyBpbmZsYW1tYXRpb24uIApBbiBpZGVhbCB0cmlhdGhsb24gd29ya291dCBwcm9ncmFtIGNvbnRhaW5zIGJvdGggdHlwZXMgb2YgdHJhaW5pbmcsIHdpdGggdGhlIG1ham9yaXR5IGJlaW5nIGxvdyBpbnRlbnNpdHkuLiAKSXQgaXMgYSBjaG9yZW9ncmFwaGVkIHBlcmZvcm1hbmNlIHRob3NlIGNvbnRyb2xsZXJzIHB1dCBvbiBldmVyeSBkYXkgdG8gbWFrZSBzdXJlIHlvdSBnZXQgdG8gd2hlcmUgeW91IG5lZWQgdG8gYmUgaW4gYSBzYWZlIG1hbm5lci4gVGhleSB0aW1lIGRlcGFydHVyZXMgYW5kIGFycml2YWxzIGhvdXJzIGF3YXksIHRvIGtub3cgdGhlIGV4YWN0IG1pbnV0ZSBzb21lb25lIHdpbGwgYmUgbGVhdmluZyBvciBsYW5kaW5nIGF0IHRoZWlyIGFpcnBvcnQgKGluIGJpZ2dlciBjaXRpZXMsIGFpcnBvcnRzIGV0YykuIApBcyBhIGdpcmwsIEkgY291bGQgY29uY2VpdmUgYSBmdXR1cmUgY2FyZWVyIGFzIGFuIGFydGlzdCBvciBhc3Ryb25hdXQsIGJ1dCB3YXNuIG9uIHRoZSByYWRhci4gUGVvcGxlIGRpZCB3b3JrIGluIG5vbiBzdGVyZW90eXBpY2FsIGpvYnMsIGJ1dCB0aGV5IHdlcmUgb2Z0ZW4gYnVyZGVuZWQgd2l0aCBwYXRyb25pemluZyBxdWFsaWZpZXJzLCBzdWNoIGFzIG51cnNlIG9yIGxhd3llci4gVGhlIEFjYWRlbWllIGRlY2lzaW9uLCBqb3VybmFsaXN0IEZhdXN0aW5lIFdvaGxmYXJ0IHR3ZWV0ZWQ6IGZlbWluaXN0cyBvdXRzaWRlIG9mIEZyYW5jZSwgZmlnaHRpbmcgdG8gYmUgYWxsb3dlZCBnZW5kZXIgbmV1dHJhbCBvciBldmVuIG1hbGUgd29yayB0aXRsZXM7IHRoaXMgbWF5IHNlZW0gbGlrZSBhIHN0ZXAgaW4gdGhlIHdyb25nIGRpcmVjdGlvbi4gCkkgZGFtbiBuZWFyIGNhbid0IGdvIGEgZGF5IHdpdGhvdXQgaGVhcmluZy9zZWVpbmcgZG9nIHdoaXN0bGVzIGFuZCBvdXRyaWdodCByYWNpc20gZnJvbSB0aGUgcmlnaHQuIEV2ZW4gdGhlIG1pbm9yaXR5IG9mIHJpZ2h0IHdpbmdlcnMgdGhhdCBhcmVuJ3Qgb3Blbmx5IGFwcGxhdWRpbmcgcmFjaXNtIGFyZW4ndCBtdWNoIGJldHRlciBiZWNhdXNlIHVubGlrZSB0aGUgb3RoZXIgc2lkZSwgdGhleSBlaXRoZXIgd29uJ3QgY29uZGVtbiBpdCBvciBpZiB0YWtlcyB0aGVtIGZvcmV2ZXIgdG8sIGxpa2UgdGhleSBuZWVkIGEgY291cGxlIG9mIGRheXMgdG8gbXVsbCBpdCBvdmVyIGV2ZW4gd2hlbiBpdCdzIG9idmlvdXMuLiAKVGhlIGRlYWxlciB3aWxsIG1ha2Ugc3VyZSB0aGF0IHlvdSBoYXZlIHRoZSByaWdodCBudW1iZXIgYW5kIHN3ZWVwIHRoZW0gaW50byB0aGUgcG90Li4gCkVzcGVjaWFsbHkgd2l0aG91dCBhbnkgc3RyYXRlZ3kgZ3VpZGVzLiBUaGV5IHdlIGFtYXppbmcgYW5kIGltbWVyc2l2ZSwgYW5kIGFyZSBzdGlsbCBwcmV0dHkgZnVuLCBqdXN0IHZlcnkgZGF0ZWQuLiAKTWF5YmUgYXNrIHRoZSBob3N0ZWwgZGVzayBpZiB0aGV5IGhhdmUgYSBzYWZlIGlmIHlvdSByZWFsbHkgd29ycmllZC4gSSBsZWZ0IGJhY2twYWNrcyBpbiBob3N0ZWwgY2xvc2V0cyBmb3Igb3ZlciBhIHllYXIgYmVmb3JlIGkgY291bGQgcmV0dXJuIGZvciBpdCwgdGhlIGJpZ2dlc3QgcHJvYmxlbSB3YXMgZmluZGluZyBpdCBpbiB0aGUgcGlsZSBvZiBiYWdzIG90aGVycyBsZWZ0IGZvciBldmVuIGxvbmdlci4KQm90aCBzaWRlcyB3ZXJlIHBhcnRpY2lwYXRpbmcgaW4gdmlvbGVudCBwdXJnZXMgYmVmb3JlaGFuZCBubyBvbmUgdG9sZCB0aGVtIHRvIGRvIHRoYXQuIApBIGxvdCBvZiBmaWdodGluZyBnYW1lcywgeW91IGdldCBzdXBlciBoaWdoIHNraWxsIGNlaWxpbmdzIHdoaWxlIHRoZSBtYXRjaGVzIGFyZSBzdGlsbCBlbmpveWFibGUgZm9yIHBlb3BsZSB3aG8ga25vdyBhbG1vc3Qgbm90aGluZyBhYm91dCB0aGUgZ2FtZS4gClRoaW5ncyBsaWtlIHN1aWNpZGUgcmF0ZXMgYW5kIHNlbGYgaGFybSByYXRlcywgc28gaXQgY2FuIGtpbGwuLiAKT2lsIGFsbG93cyB5b3VyIGhhbmRzIHRvIG1vdmUgZnJlZWx5IG92ZXIgdGhlIGJvZHkgZHVyaW5nIG1hc3NhZ2UuIApXaGVuIHBlb3BsZSBvdmVyZm9sZCBhdCB0aGVzZSBzdGFjayBkZXB0aHMsIHRoZSBibGluZHMgYW5kIGFudGVzIHRoZXkgZ2l2aW5nIHlvdSBpcyBhIGh1Z2UgcGVyY2VudGFnZSBvZiB5b3VyIHN0YWNrLiAKQXNrZWQgd2hlbiB0aGUgQnVmZnMgbG9zdCB0aGUgY29uZmlkZW5jZSBhbmQgc2VsZiBiZWxpZWYgdGhleSBjYXJyaWVkIGludG8gdGhlIHNlYXNvbiwgTWNDYXJ0bmV5IHNhaWQsICJJIGRvbid0IGtub3cgdGhhdCBpdCdzIGdvbmUgYXdheSwgYnV0IHdlJ3JlIHJlYWxpemluZyB0aGVyZSdzIGEgd2hvbGUgb3RoZXIgbGV2ZWwgd2UgY2FuIHJlYWNoIGFuZCB0aGF0IHdlIHdpbGwgcmVhY2guIgooVGhvdWdoIHdlIGNhbiByZWFsaXplIHRoYXQgdGhlbSBkaXNhcHBlYXJpbmcgbWF5IG1lYW4gdGhhdCB0aGV5IGRvbiBsb3ZlIHVzIG9yIGRpc3Jlc3BlY3Qgb3VyIGZyaWVuZHNoaXAsIHNvIHRoZW4gd2UgZ2V0IG1hZCBhbmQgbW92ZSBvbikuIApZb3UgY2FuIGZpbmQgc29tZSBwb2tlciBwcm90ZWN0b3JzLCBzb21lIHN0aWNrZXJzIGFuZCBzb21lIG1hcmtlcnMuIApUaGV5IGRldmVsb3AgdGVjaCBhbmQgcHV0IGl0IGludG8gdmFyaW91cyBkaWZmZXJlbnQgcHJvZHVjdHMgd2hpY2ggdWx0aW1hdGVseSB3aWxsIGJlIGNvbmRlbnNlZCBpbnRvIGZld2VyIHByb2R1Y3RzLiAKQ2hpbGRyZW4gbWFzc2FnZSBpcyBhcHBsaWNhYmxlIHdpZGVseSwgc3VjaCBhcyBpbmZhbnRpbGUgZGlhcnJoZWEsIHZvbWl0LCBiZWxseWFjaGUsIGNvbnN0aXBhdGlvbiwgaW5mYW50aWxlIG1hbG51dHJpdGlvbiwgY2F0Y2hpbmcgYSBjb2xkIGFuZCBoYXZpbmcgYSBmZXZlciwgY291Z2gsIHdob29waW5nIGNvdWdoLCBhc3RobWEsIGluZmFudGlsZSBjb252dWxzaW9uLCBub2N0dXJuYWwgZW51cmVzaXMsIHJpY2tldHMgZGlzZWFzZSwgbmlnaHQgY3J5LCB0aGUgc2VxdWVsYSBvZiBwb2xpb215ZWxpdGlzLCBhbmQgc28gb24uIApCbGVuZHRlYyB0d2lzdGVyIGphciBzb2x2ZXMgdGhpcyBwcm9ibGVtLiAKRXZlbnR1YWxseSwgVmF1Z2huIHR1cm5lZCBoaXMgYXR0ZW50aW9uIHRvIG9uZSBnaXJsIHdpdGggYSBzaG9ydCBibG9uZCBwb255dGFpbCBhbmQgYSBjb3dib3kgaGF0LiAKQnV0IGJlIGZvcmV3YXJuZWQgaWYgeW91IGRvbiBvcGVyYXRlIHlvdXIgYnVzaW5lc3MgaW4gYSBjb21tZXJjaWFsIG1hbm5lciBvciBpdCBkZWVtZWQgdGhhdCB0aGVyZSBpcyBhIHNpZ25pZmljYW50IHBlcnNvbmFsIGVsZW1lbnQgYXNzb2NpYXRlZCB3aXRoIHlvdXIgc28gY2FsbGVkIGFueSBsb3NzZXMgeW91IGluY3VyIGZyb20gdGhhdCBidXNpbmVzcyBtYXkgYmUgZGVuaWVkIGJ5IHRoZSB0YXhtYW4uLiAKV2VsbCwgbm8uIElmIHlvdSBzaWduIGFuIGFncmVlbWVudCBubyBvbmUncyBnb2luZyB0byB0ZWxsIHlvdSBpdCdzIHdyb25nLiBPdXIgbGF3IGFsbG93cyBmb3IgcGFydGllcyB0byByZWFjaCBhbiBhZ3JlZW1lbnQgd2l0aG91dCBjb3VydCBpbnZvbHZlbWVudC4KSW4gZmFjdCwgdGhlcmUgbWlnaHQgbm90IGhhdmUgYmVlbiBhbnkgd2hhdHNvZXZlciBhbmQgSSBkb24gdGhpbmsgdGhhdCBhbiB1bnJlYWxpc3RpYyB2aWV3cG9pbnQuIApUaGVyZSdzIGFub3RoZXIgY2x1c3RlciBvZiBWaWN0b3JpYW4gaG9tZXMgaW4gYSBzbWFsbCBvbmUgc3RvcCB0b3duIG5lYXJieSBjYWxsZWQgQ29idXJuIHdoaWNoIHNlZW0gcmVhbGx5IG91dCBvZiBwbGFjZSBnaXZlbiBpdHMgcnVyYWwgZmFybWxhbmQgbG9jYXRpb24gYW5kIHRoZSBtb2Rlc3QgZmFybWhvdXNlcyBpbiB0aGUgdmFsbGV5LiBIYWQgdG8gZG8gc29tZSBkaWdnaW5nIHRvIGZpbmQgb3V0IGl0IHdhcyBvbmNlIGEgcmFpbGhlYWQgYW5kIGZvbGtzIHdpdGggbW9uZXkgbGl2ZWQgdGhlcmUgYXQgb25lIHRpbWUuCkJ1dCBldmVyeSBvbmUgb2YgdGhlc2Ugc3VjY2Vzc2VzIHN0YXJ0ZWQgd2l0aCBmYWlsdXJlcywgc3RhcnQgb3ZlcnMgYW5kIHBlcnNpc3RlbmNlLiBJdCB0YWtlcyB0aW1lIGEgbG90IG9mIHRpbWUuLiAKT24gdGhlIE1vb24gSnVsaWFuIGFuZCBPcnRoaXMgYXJlIGNhcHR1cmVkIGJ5IHRoZSBWYSBHYS4gClRoZXkgYXJlIGNyZWF0aW5nIHZpc2liaWxpdHkgYW5kIHNwYWNlIGZvciB0aGVtc2VsdmVzICAgbm90IGp1c3QgZmlnaHRpbmcgZm9yIGFja25vd2xlZGdlbWVudCwgYnV0IGJ1aWxkaW5nIHRoZWlyIG93biBzdGFnZXMgYW5kIGhpcmluZyB0aGVpciBvd24gbWljcyB0byBhZmZpcm0gdGhlbXNlbHZlcyBhbmQgdGhlaXIgcGVlcnMuIApTYXlpbmcgdGhhdCBzZW1pIGZpeGVkIGFtbXVuaXRpb24gZXhpc3RzIGluIG9yZGVyIHRvIGZpdCBpbnNpZGUgYSB0YW5rIHR1cnJldCBpcyBsaWtlIHNheWluZyBBS00gbWFnYXppbmVzIHdlcmUgaW52ZW50ZWQgdG8gb3BlbiBiZWVyIGJvdHRsZXMuIApUaGVKYWNrYWw4IFtNXSAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpCdXQgdG8gYW5zd2VyIHlvdXIgcXVlc3Rpb24sIHllcyBJIHRoaW5rIHlvdSBzaG91bGQgYmUgYmx1ZmYgY2F0Y2hpbmcgYnkgY2hlY2tpbmcgYmVoaW5kIG9uIHRoZSB0dXJuIGFuZCBsaWtlbHkgY2hlY2tpbmcgYmVoaW5kL2NhbGxpbmcgb24gdGhlIHJpdmVyLiBObyBuZWVkIHRvIGNyZWF0ZSB0aGlzIHNwb3QuCkJ1dCBteSB3aG9sZSBzY2hvb2wgY2FyZWVyIChub3QgaW5jbHVkaW5nIGNvbGxlZ2UpLCB0ZWFjaGVycyB3ZXJlIGFsd2F5cyBzdGVybmx5IHRlbGxpbmcgdXMgdG8gc2l0IGRvd24sIGJlIHF1aWV0LCBzdGF5IGZvY3VzZWQsIGRvbiB0YWxrIHRvIG90aGVyIHN0dWRlbnRzIGluIGNsYXNzLCBzdGFyZSBkaXJlY3RseSBhdCB0aGUgdGVhY2hlciBhdCBhbGwgdGltZXMsIGhhdmUgZXZlcnl0aGluZyBkb25lIG9uIHRpbWUsIGJlY2F1c2Ugd2hlbiB5b3UgZ2V0IHRvIHRoZSBSZWFsIFdvcmsgV29ybGQsIGJvc3NlcyBhcmUgZ29pbmcgdG8gd2FudCBhbGwgdGhhdCBhbmQgbW9yZS4gV2hpY2ggdHVybmVkIG91dCB0byBiZSBhYm91dCBhcyB0cnVlIGFzIG15IGZpZnRoIGdyYWRlIHRlYWNoZXIgbGVjdHVyaW5nIG1lIG9uIG15IGN1cnNpdmUgYmVjYXVzZSAiaW4gaGlnaCBzY2hvb2wgdGhleSBnb2luZyB0byBtYXJrIHlvdSBkb3duIGV2ZW4gbW9yZSBpZiB5b3UgZG9uIHdyaXRlIGluIGN1cnNpdmUgb24geW91ciB0ZXN0cy4iIChUaGV5IGRpZCBub3QuKQpXb3VsZCBhIHBpbG90IG9yIGRvY3RvciBqdXN0IG5vdCBwcm92aWRlIHRoZWlyIHByb2Zlc3Npb25hbCBzZXJ2aWNlIGJlY2F1c2UgdGhlaXIgcGF0aWVudHMgb3IgcGFzc2VuZ2VycyBhcmUgdG9vIGRpZmZpY3VsdD8gTm8sIGJlY2F1c2UgcGVvcGxlIHdvdWxkIGRpZS4gQnV0IGJlY2F1c2UgZWR1Y2F0aW9uYWwgb3V0Y29tZXMgYXJlbiBhcyByZWFkaWx5IG9ic2VydmFibGUsIHRoZXkgYXJlIGxlc3MgaW1wb3J0YW50PyBOby4gWW91ciByb2xlIGluIHNoYXBpbmcgZnV0dXJlIHNvY2lldGllcyBhbmQgZmFjaWxpdGF0aW5nIHRoZSBncm93dGggb2YgaW5kaXZpZHVhbHMgaXMgdW5kZXJ2YWx1ZWQgaW4gbWFueSBzb2NpZXRpZXMuClRoZSB3b3JsZCBvZiBoaWdoIHN0YWtlcyB1bmRlcmdyb3VuZCBwb2tlciBnYW1lcyBpbnZvbHZpbmcgY2VsZWJyaXRpZXMgYW5kIGJpbGxpb25haXJlcyBoYXMgYmVlbiBhIGNsb3NlbHkgZ3VhcmRlZCBzZWNyZXQgdW50aWwgbm93LiBUaGUgbmV3IGJvb2ssICJNb2xseSdzIGdhbWUiIGp1c3Qgb3V0IHRvZGF5LCBpcyBtYWtpbmcgaGVhZGxpbmVzIHdpdGggYmlnIHN0b3JpZXMgaW4gIlZhbml0eSBmYWlyIiBhbmQgIlBlb3BsZSIgbWFnYXppbmUuIApPZGVyIGltIGVsZWdhbnRlbiBHZXNjaCBDaGlhZG8sIHdvIG5hY2ggZWluZW0gQnJhbmQgaW0gSmFocmUgMTk4OCB6d2FyIGtyIGFiZXIgbmljaHQgZmwgc2FuaWVydCB3dXJkZS4gUm9tYW50aXNjaCB2ZXJrbCB3IG1hbiBkYXMsIHdhcyBtYW4gaW4gTGlzc2Fib24gYW50cmlmZnQsIHdvaGwgYWxzIG1vcmJpZGVuIENoYXJtZSBiZXplaWNobmVuLiAKV2h5IGlzIGV2ZXJ5Ym9keSBzdHVubmVkIGJ5IHBvbGl0aWNhbCBjb3JydXB0aW9uLiBUaGlzIGhhcyBhbHdheXMgaGFwcGVuZWQsIGFuZCBpdCB3aWxsIGFsd2F5cyBjb250aW51ZSB0byBoYXBwZW4uIApGdWxsIHdvcmtpbmcgdG8gaW5zdGFsbCBhbmQgYWN0aXZhdGUgV2luZG93cyA3IHdpdGhvdXQgY3JhY2suIFdpbmRvd3MgNyBMb2FkZXIgaXMgYSB0b29sIHRoYXQgYWN0aXZhdGVzIHlvdXIgV2luZG93cyA3IGNvcHkgaW4gc2Vjb25kcywgcGVybWFuZW50bHkuIApXaXRob3V0IGhhdmluZyB0byBjaGFuZ2UgYW55dGhpbmcuIApUaGUgYmVlcnMgYXJlIHZ5IGNoZWFwIGluIFRQLCBqdCBsaWtlIGJ1eWluZyBhIGJpZyBidGwgb2YgbWluZXJhbCB3YXRlciBpbiBzcG9yZS4gCllvdSB3aWxsIGFsc28gZmluZCB0aGF0IHRoZXNlIGNoaXBzIGhhdmUgdGhlIHVuaXF1ZSBlZGdlc3BvdCBkZXNpZ24gYW5kIHRoYXQgb24gdG9wIG9mIHRoYXQsIHRoZXkgYWxzbyBoYXZlIHRoZSBzb2Z0IGZlZWwgb2YgdGhlIGNsYXkgc3VyZmFjZSB0aGF0IGxldHMgdGhlbSBoYXZlIHRoZSBzb3VuZCBhbmQgY29sb3JhdGlvbiBvZiBhIHJlYWwgY2FzaW5vIGNoaXAuIFlvdSdsbCBmaW5kIHRoYXQgdGhlc2UgY2hpcHMgaGF2ZSBhIGdyZWF0IGxvb2sgYW5kIGZlZWwsIGFzIHdlbGwgYXMgYSByZWNlc3NlZCBjZW50ZXIgdGhhdCBhbGxvd3MgeW91IHRvIGluc2VydCBhIGN1c3RvbSBkZXNpZ25lZCAxIGluY2ggbGFiZWwuIFlvdSB3aWxsIGFsc28gaGF2ZSB5b3VyIGNob2ljZSBvZiBzZXZlbiBhc3NvcnRlZCB0d28gdG9uZSBjb2xvcnMuIApJdCB3YXMgZXllIG9wZW5pbmcgZm9yIG1lLCB3YXRjaGluZyBpdCBmcm9tIHN0YXJ0IHRvIGZpbmlzaCwgYW5kIEkgc3RpbGwgZmVlbCBlZXJ5IHRoaW5raW5nIGFib3V0IGhvdyBjYWxtIGFuZCBxdWlldCBldmVyeXRoaW5nIHJldmVydGVkIHRvIGFmdGVyIHRoZXkgdG9vayBoaXMgYm9keSBhd2F5LiBJdCB3YXMgbGlrZSB0aGUgbW9zdCBob3JyaWJsZSB0aGluZyBoYWRuJ3QganVzdCBoYXBwZW5lZC4gVGhhdCBzaW5nbGUgbW9tZW50IHdhcyBzcGxpY2VkIG91dCBmcm9tIGEgcGljdHVyZSBwZXJmZWN0IGRheS4gCkZvciB0aG9zZSByZWFzb25zLCB5b3Ugd2FudCB0byB0dXJuIHRvIGNhc3QgaXJvbiB3aGVuIGl0IHRpbWUgdG8gc2VhciBtZWF0LiAKTGF3bWFrZXJzIGFyZSBub3cgdW5hbmltb3VzbHkgb3Bwb3NlZCB0byBiYW5raW5nIHJlZm9ybS4gClNvbWUgbG9va2VkIGF0IGl0IGFzIGEgZmFtaWxpYXIgcGF0dGVybiBpbiBNb2RpIGlsbHVzb3J5IHBvbGl0aWNzLi4gCkVuZCBvZiBzdG9yeS4gCkFjdHJlc3MgQW5uYSBHcmFoYW0gSHVudGVyIGhhcyBhbGxlZ2VkIHRoYXQgSG9mZm1hbiBncm9wZWQgaGVyIGFuZCBtYWRlIGluYXBwcm9wcmlhdGUgY29tbWVudHMgd2hlbiBzaGUgd2FzIGEgMTcgeWVhciBvbGQgaW50ZXJuIG9uIHRoZSBzZXQgb2YgdGhlIDE5ODUgVFYgbW92aWUgIkRlYXRoIG9mIGEgU2FsZXNtYW4uIgpJIGtuZXcgaGUgaGFkIHNvbWV0aGluZyBzdHJvbmcgaXQgd2FzIHdyaXR0ZW4gYWxsIG92ZXIgaGlzIGZhY2UuIApNYXliZSBpZiBoZSBvbmx5IHdvcmtlZCBvbiB0aGUgaW4gZ2FtZSBpbnRlcmZhY2U/IFRoYXQgcHJldHR5IHVzYWJsZSwgYnV0IGluIHRoZSA3aXNoIHllYXJzIEkgcGxheWVkIHRoZSBnYW1lLCB0aGUgbGF1bmNoZXIgVUkgaGFzIG5ldmVyIGJlZW4gZ29vZCwgYW5kIG9iamVjdGl2ZWx5IHdvcnNlIHNpbmNlIHRoZSBjaGFuZ2UsIHN0aWxsIGhhcyBudW1lcm91cyBsb2FkaW5nIGJ1Z3MgYW5kIGVycm9ycy4gClRoZXkgaHVuZyBvdXQgdG9nZXRoZXIsIGFuZCBhbGwgdGhleSBkaWQgd2FzIHBsYXkgcG9rZXIgYW5kIHRhbGsgYWJvdXQgcG9rZXIuIApUaGUgZGV2ZWxvcGVyIGVuZGVkIHVwIGJ1aWxkaW5nIGhpcyBidWlsZGluZyBhcm91bmQgdGhlIG9sZCBsYWR5IGhvdXNlLiAKSGUgYWxzbyBzYWlkLCBpbiByZXNwb25zZSB0byBhIHF1ZXN0aW9uIG9uIERpcmVjdCBvZiBoZXIgbWVudGlvbmluZyBTQSwgdGhhdCBzaGUgaGFkIHNhaWQgb25jZSAieW91IG5ldmVyIGd1ZXNzIHdobyBJIHRvb2sgcGhvdG9zIGZvciIgKHBhcmFwaHJhc2VkKSwgbWVhbmluZyBTQSwgd2hpY2ggbGVkIHRvIGEgY29udmVyc2F0aW9uIGFib3V0IGhlciBzYWZldHkgaW4gZ2VuZXJhbCwgdHJhdmVsaW5nIGFyb3VuZCB0aGUgY291bnRyeSBhbG9uZSBhcyBzaGUgZGlkLiAKU2Vjb25kIGRlZ3JlZSBtdXJkZXIgYnkgYW4gYWxsIG1hbGUganVyeSBsYXN0IEZyaWRheS4gCkZpcnN0LCBpdCBhbGxvd3MgeW91IHRoZSBwb3NzaWJpbGl0eSBvZiBnZXR0aW5nIGEgZ3JlYXQgdmFsdWUgd2hlbiB0aGUgY3JpY2tldHMgY29tZSBlYXJseS4gSW4gYSAxMiB0ZWFtIGxlYWd1ZSwgMjc2IHBsYXllcnMgd2lsbCBiZSBwdXQgdXAgZm9yIGF1Y3Rpb24uIApXaXRoIGhlciBjYXJhbWVsIHNraW4gYW5kIGdpZ2FudGljIHNtaWxlLCBLaGFsaWZhIHN0b29kIG91dCBmcm9tIHRoZSBwb3JuIHN0YXIgY3Jvd2QsIHdoaWNoIGlzIHN0aWxsIGRvbWluYXRlZCBieSBibG9uZCwgYmx1ZSBleWVkIEplbm5hIEphbWVzb24gY2xvbmVzIGFuZCBhbGwgbmF0dXJhbCwgd2lsbCBvIGJydW5ldHRlcy4gSG93ZXZlciwgd2hhdCB0cnVseSBzZXQgS2hhbGlmYSBvbiBoZXIgd2F5IHRvIGJlY29taW5nIGFuIGludGVybmF0aW9uYWwgcGhlbm9tZW5vbiB3YXMgdGhlIGZhY3QgdGhhdCBzaGUgc29tZXRpbWVzIHBlcmZvcm1lZCBpbiBhIGhpamFiLCB0aGUgdHJhZGl0aW9uYWwgTXVzbGltIGhlYWQgY292ZXJpbmcuIApUaGlzIGJpdGNoIGlzIGp1c3Qgc3R1cGlkIGFuZCBpbiB0byBhIHdlaXJkIGZldGlzaC4uIAooSSBjb2xsYXBzZWQgZnJvbSBzaG9jayBvbnRvIG15IGtuZWVzIGxpa2UgYSBmdWNraW5nIHNvYXAgb3BlcmEgY2hhcmFjdGVyKS4gClRoZSBwcm9ibGVtIGlzIHRoZSBNTEIgaXNuIHRoZSBORkwgYW5kIGl0IG5vdCB3b3JraW5nIG91dCBhcyB3ZWxsIGFzIHRoZXkgZXhwZWN0ZWQgd2hpY2ggaXMgd2h5IHRoZSBZYW5rZWVzIGFuZCBhIGZldyBvdGhlcnMgYXJlIGRvaW5nIHdoYXRldmVyIHRoZXkgY2FuIHRvIGdldCB0aGUgbW9uZXkgdGhleSB0aG91Z2h0IHRoZXkgd291bGQgYWxyZWFkeSBiZSBzd2ltbWluZyBpbi4uIApNdXJyYXkgY2x1YnMgdGhyb3cgc3VwcG9ydCBiZWhpbmQgTGV2ZXNxdWUgZmFtaWx5CkNvb21lcyAobGVmdCkgc2FpZCB0aGUgbGVzcyBmb3JtYWwgZXZlbnRzIG9uIHRoZSBjYWxlbmRhciBjYW4gYmUganVzdCBhcyBpbXBvcnRhbnQgYXMgdGhlIGhlYWRsaW5lcnMuIEhlIGVhZ2VyIHRvIHNlZSBjb25uZWN0aW9ucyBtYWRlIGFuZCBpZGVhcyBleGNoYW5nZWQgb3ZlciByb29mdG9wIGNvY2t0YWlscy4gT3IgYXJvdW5kIHRoZSBwb2tlciB0YWJsZS4gClszXTIuIAozLiBBbnkgc2VlbWluZ2x5IGRpc2d1c3RlZCBvciByZWx1Y3RhbnQgd2FnZXIgbWVhbnMgYSBzdHJvbmcgaGFuZC4gClJlZCByZWJvb3QgaW4gcGFydGljdWxhciBpcyBncm9zcyBmb3IgdGhpcyBzdHJhdGVneSBiZWNhdXNlIGlmIHlvdSBoaXQgdGhlbSB3aXRoIGl0IHlvdSBvbmx5IG5lZWQgdG8gd29ycnkgYWJvdXQgc3BlbGxzIGFuZCBtb25zdGVyIGVmZmVjdHMgd2hpY2ggZmVlbCBsZXNzIGRhbmdlcm91cyB0byBtZSByaWdodCBub3cuLiAKVGhlIGlkZWEgb2YgY29uZnJvbnRpbmcgYW4gb3Bwb3NpbmcgZm9yY2Ugc3VnZ2VzdHMgdGhhdCB0aGUgZXhwcmVzc2lvbiBtYXkgZGVyaXZlIGZyb20gYSBzcG9ydCBzdWNoIGFzIHdyZXN0bGluZy4gCkkgdGhpbmsgQW1tYSB0YXJnZXRlZCBoZXIgdmljdGltcyBib3RoIGJlY2F1c2UgdGhleSByZWNlaXZlZCBhdHRlbnRpb24gZnJvbSBBZG9yYSBvciBDYW1pbGxlLCBBTkQgYmVjYXVzZSB0aGV5IHdlcmUgZGlmZmVyZW50LiAKVGhhdCB0d2VudHkgZml2ZSBidXkgaW5zIGZvciBsaXZlIDEvMiBhbmQgaXQgbWF5IHNlZW0gYWdncmVzc2l2ZSBjb21wYXJlZCB0byB5b3VyIG9ubGluZSBiYW5rcm9sbCBtYW5hZ2VtZW50LCBidXQgeW91IGluIGFub3RoZXIgd29ybGQgbm93LiBUaGUgd29ybGQgb2YgTE9MIGxpdmUgcG9rZXIuIApBbnkgcGxheWVyIGx1Y2t5IGVub3VnaCB0byBlbGltaW5hdGUgYSBTaG9vdGluZyBTdGFyIHdpbGwgcmVjZWl2ZSBhICQyLDUwMCBib251cyAuIApGaW5kaW5nIHRoZSByaWdodCB0YWJsZSB0byBwbGF5IG9uIHdpbGwgdGFrZSBzb21lIHRpbWUgYW5kIGVmZm9ydCBmcm9tIHlvdXIgc2lkZSwgYnV0IHdpbGwgZGVmaW5hdGVseSBiZSB3b3J0aCBpdCBpZiB5b3UgYXJlIHNlcmlvdXMgb2YgbWFraW5nIGEgbGl2aW5nIHBsYXlpbmcgdGhpcyBncmVhdCBhbmQgY29tcGxleCBnYW1lLgpTbyBJIGRlY2lkZWQgaW4gYW4gYWN0IG9mIGZlYXIgdG8geWVsbCBvdXQgIndobyB0aGUgZnVjayBpcyB0aGVyZSIuIEV2ZW4gYWZ0ZXIgc2F5aW5nIHRoaXMgd2UgY291bGQgc3RpbGwgaGVhciB0aGUgZm9vdCBzdGVwcyBhbmQgZXZlbiB0dXNzbGluZyB0aHJvdWdoIG15IGJhZy4gClJpdmFsaW5nIHRoZSBicm90aGVycyBNY01pbGxlbiBpbiB0aGUgY3V0aWUgcGllIGRpdmlzaW9uIGFyZSBKdXN0aW4gS2FuZXcgYW5kIGhpcyBidWRkeSBaZXYgR2xhc3NlbmJlcmcsIHdobyBoYXMgQXNwZXJnZXIncyBzeW5kcm9tZS4gVGhlIGFkb3JhYmx5IGFzdHV0ZSBaZXYgc2FpZCBoZSBkaWRuJ3QgZ2V0IGEgIndhcm0gbG92aW5nIGZlZWxpbmciIGZyb20gdGhlIHBzZXVkbyBwaGlsYW50aHJvcGljIHBva2VyIGdhbHMgZ2F2ZSBoaXMgb3duIGphY2tldCB0byBhIHJhaW4gZHJlbmNoZWQgYW5kIG9idmlvdXNseSBmcmVlemluZyBsb2NhbCBtYW4gaW4gVmlldG5hbS4gWmV2IHdhcyBsYXRlciBkdWJiZWQgdGhlIER1Y2sgV2hpc3BlcmVyIGJ5IGhpcyBwYXJ0bmVyIHdoZW4gaGUgZGVtb25zdHJhdGVkIGhpcyAiYXdlIGluc3BpcmluZyBwb3dlciIgZHVyaW5nIGEgYmlyZCBoZXJkaW5nIGNoYWxsZW5nZS4gRm9ybWVyIChidXQgbm9uY29udHJvdmVyc2lhbCkgTWlzcyBBbWVyaWNhIEVyaWNrYSBEdW5sYXAgaGFkIGEgbW9yZSBmcnVzdHJhdGluZyBleHBlcmllbmNlIHJvdW5kaW5nIHVwIHRoZSBsaXR0bGUgcXVhY2tlcnMgd2hpbGUgaHViYnkgQnJpYW4gS2xlaW5zY2htaWR0IHdhaXRlZCBpbiB0aGUgd2luZ3MgYW5kIGFubm91bmNlZCB0byB0aGUgZm93bCwgIkkga25vdyB3aGF0IEknbSBoYXZpbmcgZm9yIGRpbm5lciEiClNlcCAyNSwgMjAxOCAuIEhvd2V2ZXIsIHRoZXJlIGFyZSB3YXlzIG9mIGdldHRpbmcgT2ZmaWNlIG9uIFdpbmRvd3MgMTAgZm9yIGZyZWUsIC4gClRvIGxpdmUgd2l0aCBwYWluOiB3aGF0IE9seW1waWMgYXRobGV0ZXMgY2FuIHRlYWNoIHVzIGlzIG1vcmUgdGhhbiBvbmUgdGhpbmcsIiBleHBsYWlucyBEci4gSmVmZnJleSBNb2dpbCwgdGhlIGhlYWQgb2YgdGhlIFBhaW4gR2VuZXRpY3MgTGFiIGF0IE1jR2lsbCBVbml2ZXJzaXR5LiBJdCdzIGEgc2Vuc2F0aW9uLCBsaWtlIHZpc2lvbiBvciB0b3VjaDsgaXQncyBhbiBlbW90aW9uLCBsaWtlIGFuZ2VyIG9yIHNhZG5lc3M7IGFuZCBpdCdzIGFsc28gYSAiZHJpdmUgc3RhdGUiIHRoYXQgY29tcGVscyBhY3Rpb24sIGxpa2UgaHVuZ2VyLkZvciBhdGhsZXRlcywgYWxsIG9mIHRoZXNlIGVmZmVjdHMgbWluZ2xlIHRvZ2V0aGVyIGluIGRpZmZlcmVudCB3YXlzIGRlcGVuZGluZyBvbiB0aGUgbmF0dXJlIG9mIHRoZSBwYWluIHRoZXkncmUgZXhwZXJpZW5jaW5nIGFuZCB0aGUgZGVtYW5kcyBvZiB0aGVpciBwYXJ0aWN1bGFyIHNwb3J0ICAgdGhlIHN1ZGRlbiBzaG9jayBvZiBhIHN0aWZmIGJvZHkgY2hlY2sgdmVyc3VzIHRoZSByZWxlbnRsZXNzIGJ1cm4gb2Ygc3VzdGFpbmVkIGVmZm9ydC5Tb21lIGluZGl2aWR1YWwgdmFyaWF0aW9uIGluIHBhaW4gc2Vuc2l0aXZpdHkgaXMgZ2VuZXRpYyAgIE1vZ2lsIHBlZ3MgdGhlIGZyYWN0aW9uLCB2ZXJ5IGxvb3NlbHksIGF0IGEgYml0IGxlc3MgdGhhbiA1MCBwZXIgY2VudC4gCkhlcmUgaXMgYSBicmllZiBvdmVydmlldyBvZiB0aGUgcHJpbWFyeSBwZXJmb3JtYW5jZSBhc3BlY3RzIG9mIHRoZSBwcm9wb3NlZCBtb2R1bGVzIGFzIHByb3ZpZGVkIHRvIHN0YWtlaG9sZGVycyBwYXJ0aWNpcGF0aW5nIGluIHRoZSByZXZpZXcuIE9ubHkgbW92ZSB3aXRoaW4gYSByYW5nZSB0aGF0IGlzIGNvbWZvcnRhYmxlIGFuZCBrZWVwIGhlYWQgbGV2ZWwgdG8gcHJldmVudCBuZWNrIHN0cmFpbi4KUm9ja3Npbm8gcmFjZXMgdG8gZnJvbnQgb2YgcmVnaW9uYWwgZ2FtYmxpbmcgcGFjawpUaGVyZSBpcyBubyB3YXkgdGhhdCBHcmFuZG1hc3RlciAyIGhhcyBhYm91dCAyIHRpbWVzIHRoZSBIUCBjb21wYXJlZCB0byBHcmFuZG1hc3RlciAxLiAKVGhlIGdyb3VwJ3MgZXhlY3V0aXZlIGRpcmVjdG9yLCBSb2QgR2lsdGFjYSwgc2FpZCBmaXJlYXJtIG93bmVyc2hpcCwgdW5saWtlIHNlYXRiZWx0IGxhd3MgYW5kIG90aGVyIHNpbWlsYXIgaXNzdWVzIHRoYXQgZG9jdG9ycyBoYXZlIHdlaWdoZWQgaW4gb24sIGlzICJpbmNyZWRpYmx5IGNvbXBsZXguIgpDb25jbHVzaW9uOiBUaGVzZSBkYXRhIHN1Z2dlc3QgdGhhdCBpbW1lcnNpb24gYXQgYm90aCB0ZW1wZXJhdHVyZXMgcmVzdWx0ZWQgaW4gc2ltaWxhciB3aG9sZSBsaW1iIGJsb29kIGZsb3cgYnV0LCBwYXJhZG94aWNhbGx5LCBtb3JlIGJsb29kIHdhcyBkaXN0cmlidXRlZCB0byB0aGUgc2tpbiBpbiB0aGUgY29sZGVyIHdhdGVyLiAKRHVlIHRvIHRoaXMgY2FzZSdzIGV4dGVuc2l2ZSBoaXN0b3J5LCB0aGVyZSBpcyBhIGJlbmVmaXQgdG8gaGF2aW5nIGV4aXN0aW5nIGNsYWltcyBkZXZlbG9wZWQgb3IgbGl0aWdhdGVkIHdoaWxlIHRoZXkgYXJlIHJlbGF0aXZlbHkgZnJlc2gsIHJhdGhlciB0aGFuIHBvc2l0aW9uaW5nIHRoZSBjbGFpbXMgdG8gYmUgcHJvY2VkdXJhbGx5IGJhcnJlZCBpbiBhIGZ1dHVyZSBwcm9jZWVkaW5nLiAKIldlIGNob3NlIEFubmEgYmVjYXVzZSBzaGUgYSB0cmVuZHksIG1vZGVybiBnaXJsLCIgdGhlIE5ldyBZb3JrIFBvc3QgcXVvdGVkIEFuZ2VsYSBXYXRlcnMsIGEgcHVibGljaXN0IGZvciBaZWRhLCB0aGUgY29tcGFueSB0aGF0IHByb2R1Y2VkIHRoZSBhcHBsaWN0aW9uLCBhcyBzYXlpbmcuCiJUaGUgaWRlYSBvZiBkaXJlY3RpbmcgaXMgbm90IGFib3V0IHN1Y2Nlc3MgZm9yIG1lIHBlcnNvbmFsbHksIGl0IGFib3V0IHB1dHRpbmcgbW9yZSBwaWVjZXMgb24gdGhlIGJvYXJkLCIgTGFyc29uIHNhaWQuIApIb3cgdGhlIGhlbGwgZG8geW91IGV4cGVjdCAyIHBhcmVudHMgdG8gZ28gYWdhaW5zdCBhIG11bHRpIG1pbGxpb24gY29tcGFueSB0aGF0IGNhbiBoaXJlIFRIRSBCRVNUIGxhd3llcnMgaW4gdGhlIHdvcmxkLiAKVGhlIHBob3RvIGlzIGFjY29tcGFuaWVkIGJ5IHRoZSB0ZXh0IHNoZWV0IChiZWxvdykuIApJZiBJIGZpeCB0aGUgY29tcG9uZW50ICh0byBhdm9pZCBieSAwIGV4Y2VwdGlvbnMpLCByZSBHQUMgdGhlIGNvbXBvbmVudCBhbmQgYm91bmNlIHRoZSBCaXpUYWxrIGhvc3QsIEkgY2FuIHJlc3VtZSB0aGUgb3JjaGVzdHJhdGlvbiBpbnN0YW5jZS4gVGhhdCBiZWNhdXNlIHRoZSBsYXN0IGF2YWlsYWJsZSBwZXJzaXN0ZW5jZSBwb2ludCB3YXMgdGhlIGluaXRpYWwgUmVjZWl2ZSBTaGFwZSBzbywgdGhlIG9yY2hlc3RyYXRpb24gcGlja2VkIHVwIGZyb20gdGhlcmUsIHRodXMgcnVubmluZyB0aGUgZmlyc3QgdHJhY2Ugc3RhdGVtZW50IGFnYWluLiBJZiBJIHJlc3VtZSB0aGF0IHdvcmtmbG93LCB0aGVuIHRoZSBvcmNoZXN0cmF0aW9uIHdpbGwgcGljayB1cCBXSEVSRSBJVCBMRUZUIE9GRi4gCllvdXIgc2VsZmxlc3MgYXBwcm9hY2ggdG8gZXZlcnl0aGluZyBmcm9tIHRoZSBodW5kcmVkcyBvZiBsaXZlcyB5b3VyIGNhcmVlciBoYXMgdG91Y2hlZCwgdG8geW91ciBvd24gY2hpbGRyZW4sIGhhdmUgbWFkZSBzdWNoIGEgZGlmZmVyZW5jZSBhbmQgYXJlIHNvIHVuYmVsaWV2YWJseSBpbnNwaXJpbmcgdG8gbWUuIEkgYW0gY29tZm9ydGVkIHRvIGtub3cgdGhhdCB0aGUgYWJzb2x1dGUgYmVzdCBpbiBtZSBpcyBhIGRpcmVjdCByZXN1bHQgb2YgdGhlIG1vdGhlciBJIGhhdmUsIGFuZCBJIGhvcGUgdG8gY29udGludWUgdG8gd29yayB0byBiZSBhIGNyZWRpdCB0byB5b3VyIGJlbG92ZWQgbmFtZSwgbXkgbG92aW5nIG1vdGhlci4gSWYgSSBjb3VsZCBvbmx5IHdyYXAgbXkgYXJtcyBhcm91bmQgeW91IGFuZCByZW1vdmUgdGhpcyBwYWluIHlvdSdyZSBleHBlcmllbmNpbmcgSSB3b3VsZCwgdGhlIHdheSB5b3UgaGF2ZSBjb21mb3J0ZWQgdXMgeW91ciB3aG9sZSBsaWZlIHdoZW4gd2UgbmVlZGVkIHN0cmVuZ3RoLiAKSSB3ZW50IGFuZCBnb3QgZWR1Y2F0ZWQgaW4gdGhlIGNyYWZ0IG9mIGhhaXIgc3R5bGluZyBhbmQgY29sb3VyaW5nLCBJIHB1dCBpbiAzMDAwIGhvdXJzIG9mIGFwcHJlbnRpY2VzaGlwLCBJIHdlbnQgYW5kIHNwZW50IHRpbWUgYW5kIG1vbmV5IG9uIHNwZWNpYWxpemVkIGNsYXNzZXMgb24gdGVjaGlxdWVzLiAKSSBjYW4ndCBwb2ludCBvdXQgYW55IGJsYWNrIHJlcHVibGljYW5zIGxpa2UgdGhhdCBhdG0sIGJ1dCBJIGFsc28gZG9uJ3QganVzdCBhc3N1bWUgdGhleSBkb24ndCBleGlzdC4gClNlbi4gRGVicmEgUGxvd21hbiwgUiBIYW1wZGVuLCBhcG9sb2dpemVkIHRvIHRoZSBvcHBvbmVudHMsIHNheWluZyB0aGUgaW50ZW50IG9mIHRoZSBjb21taXR0ZWUgd2FzIG5vdCB0byBnaXZlIGEgZ3JlZW4gbGlnaHQgdG8gYWxsb3cgSW50ZXJuZXQgc2FsZXMgYnV0IHRvIGFsbG93IHRoZSBkZXZlbG9wbWVudCBvZiBhIHByb3Bvc2FsIGZvciB0aGUgbmV4dCBzZXNzaW9uIG9mIHRoZSBMZWdpc2xhdHVyZSB0byBjb25zaWRlci4KVGVycmUgZG9sdHJlcG8gICBjYW50aW5hIGRpIGNhc3RlZ2dpbyBhIHdpbmUgbWFraW5nIGNlbnRyZSBpbi4gIkxhIG5hdXRpY2EgbCdhcnRlIGNoZSBpbnNlZ25hIGlsIG1vZG8gZGkgY29uZHVycmUgdW5hIG5hdmUgcGVyIGxvIHZhc3RvIG9jZWFubywgLiBRdWVzdG8gbWFudWFsZSBub24gcHJldGVuZGUgZGkgY3JlYXJlIGx1cGkgZGkgbWFyZSwgbWEgc29sYW1lbnRlIGRpLiAKU2VhcmNoIGFuZCBsaXN0ZW4gdG8gZnJlZSAuIFdlIGhhdmUgMzQ0OTMgUmFwaWRzaGFyZSBsaW5rcyBhYm91dCBhcmlzdG9jcmF0IG1rNSByb21zLiBBbGwgZmlsZXMgZm9yIGFyaXN0b2NyYXQgbWs1IHJvbXMgYXJlIGluIHJlbGV2YW50IG9yZGVyLgpHcmFjZSBhbmQgZnJhbmtpZSBjcmFja3MgbWUgdXAgZXZlcnl0aW1lISBIYXZlIHlvdSBjaGVja2VkIG91dCBCZXR0ZXIgVGhpbmdzIHlldD8gTm90IHN1cmUgd2hhdCB5b3Ugc2l0dWF0aW9uIGlzLCBzbyBoYXJkIHRvIHNheSBleGFjdGx5IHdoYXQgd2lsbCBvciB3b24gYmUgcmVsYXRhYmxlIGFuZCBhbXVzaW5nIHZzLiBUcmlnZ2VyaW5nIG9mIHRoZSB3YXRlcndvcmtzIDspIGJ1dCB0aGVyZSBhIGxvdCBvdXQgdGhlcmUsIGxvb2sgZm9yIHlvdXIgc2l0dWF0aW9uLiBJIGhhZCBhIGdmIHRoYXQgY3JhY2tlZCBvdXQgb24gUmViYSBlcGlzb2RlcyBiZWNhdXNlIHNoZSB3YXMgd29ya2luZyB0byBlc3RhYmxpc2ggbmV3IHJlbGF0aW9uc2hpcHMgd2l0aCB0aGUgZXggYW5kIG5ldyB3aWZlIGR1ZSB0byB0aGUga2lkIGZhY3RvciBhcyB3ZWxsIGFzIGFub3RoZXIgYnVkZHkgd2hvIHRob3VnaHQgVGhlIEV4ZXMgd2FzIGJlc3Qgc3VpdGVkIGZvciBoaXMgY29udGV4dC4uIApIb3dldmVyLCBpdCBoYXMgeWV0IHRvIGJlIGFzc2Vzc2VkIHdoZXRoZXIgZWZmZWN0cyBvdXRsYXN0IGFjdXRlIGludG94aWNhdGlvbi4gVGhlIHByZXNlbnQgc3R1ZHkgYWltZWQgdG8gYXNzZXNzIHRoZSBzdWIgYWN1dGUgZWZmZWN0cyBvZiBwc2lsb2N5YmluIG9uIGNyZWF0aXZlIHRoaW5raW5nLCBlbXBhdGh5LCBhbmQgd2VsbCBiZWluZy4gCkhlIHdvdWxkIG5lZWQgdG8gZ2V0IGEgc29saWQgaGl0IHRoZSBmaXJzdCB0cnkgdG8gd2luIHRoaXMuIAoiUmlnaHQgdG8gd29yayIgZG9lc24gYWxsb3cgeW91IHRvIGZpcmUgcGVvcGxlIGZvciByZWFzb25zIHRoYXQgYXJlIGlsbGVnYWwgdW5kZXIgc3RhdGUgb3IgZmVkZXJhbCBsYXcuIFRoYXQgaW5jbHVkZXMgaWxsZWdhbCBmb3JtcyBvZiBkaXNjcmltaW5hdGlvbiwgcmV0YWxpYXRpb24sIGludGVyZmVyZW5jZSB3aXRoIHRoZSBleGVyY2lzZSBvZiBsZWdhbCByaWdodHMgKHN1Y2ggYXMgcmVxdWVzdGluZyBGTUxBIGxlYXZlLCBvciBkZW1hbmRpbmcgeW91ciBwYXkpLiBTaW5jZSBhbGwgb2YgdGhlc2UgcHJvdGVjdGlvbnMgZXhpc3QgaW4gc29tZSBmb3JtIGF0IHRoZSBmZWRlcmFsIGxldmVsLCB0aGVyZSBpcyBubyBzdWNoIHRoaW5nIGFzIGEgInJpZ2h0IHRvIHdvcmsiIHN0YXRlIHRoYXQgY2FuIGZpcmUgeW91IHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzIHdpdGhvdXQgZXZlciBmYWNpbmcgcmVwZXJjdXNzaW9ucy4gQW5kLCBubywgY291cnRzIGRvIG5vdCBibGluZGx5IGFjY2VwdCB0aGF0IHlvdSB3ZXJlIGZpcmVkIGZvciBsZWdpdGltYXRlIGJ1c2luZXNzIHJlYXNvbnMgcmlnaHQgYWZ0ZXIgeW91IHBvaW50ZWQgb3V0IHRoYXQgeW91ciBlbXBsb3llciB3YXNuIHBheWluZyB5b3VyIHdhZ2VzIGR1ZS4KSSBzYWlkIG5vLiAKV2UgY29udHJvbCBvdXIgZW1vdGlvbnMgYW5kIG91ciBkZXNpcmVzLiAKT25jZSB5b3UgZ2V0IG1vbWVudHVtIHlvdSBhcmUgbGl0ZXJhbGx5IHByaW50aW5nIG1vbmV5IGFuZCBpdCBzdXJyZWFsLiBJdCBqdXN0IHRha2VzIGEgaHVnZSBsZXZlbCBvZiBtYXR1cml0eSB0byB2aWV3IHBva2VyIGFzIGEgam9iLiAKV2hhdCBoYXBwZW5zIHdoZW4geW91IHRha2UgYmVuem9zIGlzIHlvdSB0ZWFjaCB5b3VyIEdBQkEgcmVjZXB0b3JzIHRvIGNhbG0gZG93biBmcm9tIHRoZSBtZWRpY2luZSBhbmQgbm90IGJ5IHRoZW1zZWx2ZXMuIApIZSBhbHNvIGRpc2N1c3NlZCB0aGUgbGVhZGVyc2hpcCBjaGFsbGVuZ2Ugb2YgdHJhbnNmb3JtaW5nIEluZm9zeXMncyBjdWx0dXJlIHdpdGhvdXQgYWJhbmRvbmluZyBpdHMgaW5ub3ZhdGl2ZSByb290cyBvciB0aGUgdmlzaW9uIG9mIGl0cyBmb3VuZGVycy4uIApKZSB2b3VzIGRvbm5lIGwgZCByZXN0YXVyYW50IGF2ZWMgc2VydmV1c2VzIHNleHkuIEMgZmFjaWxlIGRlIGZhaXJlIGxhIGRtb25zdHJhdGlvbiBxdSB5IGEgYmllbiB1bmUgYWN0aXZpdCBub24gY29uZm9ybWUuIE9uIGVudHJlIGRhbnMgbGVzIHJlc3RhdXJhbnRzIGV0IG9uIHZvaXQgdW5lIHNlcnZldXNlIGRudWRlLiBEYW5zIGxlIGNhcyBkIHNhbG9uIGRlIG1hc3NhZ2UsIHBvdXIgZW4gZmFpcmUgbGEgZG1vbnN0cmF0aW9uLCBpbCBmYXV0IGNvbnN0YXRlciBsIE9uIG5lIHBldXQgcGFzIGVudm95ZXIgdW4gaW5zcGVjdGV1ciBmYWlyZSBsZSB0cmF2YWlsIGRlIGxhIHBvbGljZSwgZGl0IGlsLgpUaGUgY291cnQgcmVhc29uZWQgdGhhdCB0aGUgQURBIGRlZmluZXMgImlsbGVnYWwgZHJ1ZyB1c2UiIGJ5IHJlZmVyZW5jZSB0byBmZWRlcmFsIHJhdGhlciB0aGFuIHN0YXRlIGxhdyBhbmQgaW5kaXZpZHVhbHMgd2hvIHVzZWQgbWVkaWNpbmFsIG1hcmlqdWFuYSB2aW9sYXRlZCBmZWRlcmFsIGxhdywgdGh1cyBmYWxsaW5nIHdpdGhpbiB0aGUgQURBJ3MgaWxsZWdhbCBkcnVnIGV4Y2x1c2lvbi4gSXQgcmVtYWlucyB1bmNsZWFyIGhvdyBmZWRlcmFsIGNvdXJ0cyB3aWxsIGhhbmRsZSBtZWRpY2FsIGV4YW1zIGFuZCBpbnF1aXJpZXMgY29uY2VybmluZyBtZWRpY2luYWwgbWFyaWp1YW5hLiBJbiBvdGhlciB3b3JkcywgdGhhdCBjb3VydCBvcGluaW9uIGlzIG5vdCB0aGUgZmluYWwgd29yZC4gCklOIFRIRSBQSE9UTyBBTkQgQ09NSU5HIFVQOiBEQU5OWSBBTkQgREVCSSBCUk9PS1MgTGlnaHRob3VzZSBDaHJpc3RpYW4gRmVsbG93c2hpcCwgNzAyIENvbHVtYmlhIFN0LiwgQXVnLiA3IERhbm55IGFuZCBEZWJpIEJyb29rcyBicmluZyB0aGVpciBOb3J0aCBBbWVyaWNhbiB0b3VyIHRvIEthbWxvb3BzIG9uIEF1Zy4gNyBhdCBMaWdodGhvdXNlIENocmlzdGlhbiBGZWxsb3dzaGlwLCA3MDIgQ29sdW1iaWEgU3QuIApBIGRydWcgdHJpYWwgY2FsbGVkIElTSVMgc291Z2h0IHRvIGRpc3Byb3ZlIHRoZSBlZmZlY3RzIG9mIG1hZ25lc2l1bS4gCiJJdCB3aWxsIG5vdCByZSBvcGVuLCIgaGUgc2FpZC4gIkkgd291bGQgYmUgcmF0aGVyIGRvd24gaGVyZSBzYXlpbmcgc29tZXRoaW5nIGVsc2UgaW5zdGVhZCBvZiB0ZWxsaW5nIHBlb3BsZSB0aGV5IGhhdmUgbG9zdCB0aGVpciBqb2JzLiIgVGhlIDQwIGpvYnMgdG8gZ28gYXJlIGEgY29tYmluYXRpb24gb2YgZnVsbCB0aW1lLCBwYXJ0IHRpbWUgYW5kIGNhc3VhbHMuIApJIGxpa2VkIGhvdyBDbGFyYSB3YXNuIHBlcmZlY3QsIGFuZCB3YXMgcHJldHR5IGVtb3Rpb25hbGx5IHVuYXZhaWxhYmxlLCBidXQgc28gd2FzIGhlLiAKQ2V0dGUgYXR0cmlidXRpb24gZXN0IGFubnVsZSBwYXIgbCd0YWJsaXNzZW1lbnQgZCd1biBsaWVuIGRlIGZpbGlhdGlvbiAoYWN0ZSBkZSBuYWlzc2FuY2UgcmV0cm91diBvdSBuYWlzc2FuY2UganVkaWNpYWlyZW1lbnQgZGNsYXJlKS4uIApBZ2Fpbiwgbm8gZGlldCBpcyBtYWdpYy4gCkJ1dCB0aGVzZSBjb3VudHJpZXMgeW91IGFyZSBwcm9iYWJseSByZWZlcnJpbmcgdG8gcGVyc2VjdXRlIHBlb3BsZSBmb3IgYWxsIGtpbmRzIG9mIHJlYXNvbnMuIEJlaW5nIGluIGEgY2VydGFpbiByZWxpZ2lvdXMgZ3JvdXAgY2FuIGdldCB5b3UgbXVyZGVyZWQuIApJdHMgYSBsb3Qgb2YgdGhpbmdzIHRoYXQgYnJvdWdoIFNlbm9sJ3MgZG93bmZhbGwgd2l0aCB0aGUgZmFucywgaSBzdGlsbCByZXNwZWN0IGhpbSwgYW5kIHdvbnQgc2hpdCB0YWxrIGhpbSBvbmNlIGhlIGxlYXZlcywgYnV0IGluIHRoaXMgY3VycmVudCBzdGF0ZSBpIHdhbnQgaGltIHRvIGp1c3QgcmVzaWduLkZpZ1NpZGVHICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29Eb2Vzbid0IGhhdmUgdG8gYmUgYW5ncnkgYW55bW9yZT8gVGVsbCB0aGF0IHRvIGV2ZXJ5b25lIHRoYXQga2lsbGVkIGhpbSBmb3IgUmV2aXZhbC4gCjE4LCB0aGUgbGl0dGxlIGJveSBoYWQgYSAxMDQgZGVncmVlIHRlbXBlcmF0dXJlLi4gCldlIGxpdmVkIGluIEFpcmRyaWUgd2Ugd291bGQgaGF2ZSBwb2tlciBuaWdodCBldmVyeSBGcmlkYXkgbmlnaHQgYW5kIHdlIGhhZCBhIGNvcmUgZ3JvdXAgb2YgZnJpZW5kcyB0aGF0IEkgaGF2ZSBrbm93biBzaW5jZSBraW5kZXJnYXJ0ZW4gY29tZSwgc2hlIHNhaWQuIEZyaWVuZCBvZiBtaW5lLCBUaW0gWW91bmcsIGhhZCBhIGpvYiB3b3JraW5nIGF0IHRoZSBhaXJwb3J0IGRlbGl2ZXJpbmcgYmFncywgYW5kIG9uZSBuaWdodCBoZSBnb3QgYSBjYWxsIHRvIGRlbGl2ZXIgYSBiYWcuIApUaGlzIGlzIGEgY3JpdGljYWwgc3RlcCBpbiByZWR1Y2luZyBsb25nIHRlcm0sIGRpc2FibGluZyBteW9mYXNjaWFsIHBhaW4gc3luZHJvbWVzIGFuZCBqb2ludCByZXN0cmljdGlvbnMuCldoZW4geW91IGxpdmUgdGhlcmUgeW91IHRlbmQgdG8gdGFrZSBmb3IgZ3JhbnRlZCB0aGUgb3V0ZG9vcnMgYW5kIHRoaW5ncyBsaWtlIFJlZCBSb2NrcywgdGhlIE1vdW50YWlucyBhbmQgYWN0dWFsIHRoaW5ncyB0byBkbyBpbiB0b3duIGFuZCBhcm91bmQgdGhlIGFyZWEuIApJIGdvdCBhcyBmYXIgYXMgYmVpbmcgYWJsZSB0byBjcmVhdGUgdGFibGUgb2JqZWN0cyB0aGF0IGhhZCBhbGwgb2YgdGhlIGNoaXBzdGFjayAvIHBvdCBzaXplIC8gcGxheWVyIHN0YXRzIGluZ3JhaW5lZC4gCkV2ZW4gY29uc3VsdGVkIGEgZnVuZyBzaHVpIGV4cGVydCwgc2F5cyBEaGlsbG9uLCBmb2xsb3dlZCB0aGVpciByZWNvbW1lbmRhdGlvbiB0byBhZGp1c3QgdGhlIGhvdXNlIG51bWJlciBmb3IgdGhlIG1vc3QgYXVzcGljaW91cyBhZGRyZXNzLiBob21lIGJsZW5kcyB0aGUgdHJhZGl0aW9uYWwgYW5kIGNvbnRlbXBvcmFyeSBpbiBmcmVzaCBuZXcgd2F5cy4gVGhlIG1vZGVybiwgdW5mdXNzeSBwYW5lbCB3b3JrIGFuZCBjb250ZW1wb3JhcnkgbW91bGRpbmdzLCB0aGUgdW5kZXJzdGF0ZWQgdmF1bHRlZCBjZWlsaW5ncywgYW5kIHRoZSBiYWxhbmNlZCBlZmZlY3Qgb2Ygc2ltaWxhciBkZXNpZ24gZWxlbWVudHMgaW4gZGlmZmVyZW50IG1hdGVyaWFscyB3b3JrIHRvZ2V0aGVyIHRvIGNyZWF0ZSBhIGdyYWNpb3VzIHNwYWNlIHRoYXQgZmVlbHMgc29saWQgYnV0IG5ldmVyIGhlYXZ5LCBwb2xpc2hlZCBidXQgbmV2ZXIgcHJldGVudGlvdXMuIFdpdGggaXRzIGxvbmcgbGlzdCBvZiBxdWFsaXR5IGZlYXR1cmVzIGFuZCB1bmNsdXR0ZXJlZCBzcGFjaW91c25lc3MsIHRoZSBob3VzZSBvZmZlcnMgYSBsdXh1cnkgbGlmZXN0eWxlIHRoZSB3aG9sZSBmYW1pbHkgY2FuIGVuam95LgpTTyBXSEFUIERPRVMgSVQgRE8/IElUIExBWVMgVEhFIE1PU1QgRUdHUyBPVVQgT0YgRVZFUllUSElORy4gClRoZSB0b3VyIGRlc2sgY2FuIGFycmFuZ2UgYWN0aXZpdGllcyBzdWNoIGFzIGlzbGFuZCBob3BwaW5nIGFuZCBmYW1pbHkgdHJla3MuIEEgc2NoZWR1bGVkIHNodXR0bGUgc2VydmljZSBjb25uZWN0cyB0aGUgcmVzb3J0IHdpdGggdGhlIGZhYmxlZCBuaWdodHNwb3RzIG9mIFBhdG9uZyBhbmQgS2Fyb24uIFRoZSByZXNvcnQgaXMganVzdCBvbmUgaG91ciBkcml2ZSBhd2F5IGZyb20gdGhlIGFpcnBvcnREZWFyIGhlbGVuY04zNDEwQVIsIFRoYW5rIHlvdSBmb3Igc3RheWluZyB3aXRoIHVzLCBJIHNvcnJ5IHRvIHJlYWQgdGhhdCBhIHN0YXkgd2FzIG5vdCB0byB5b3VyIGV4cGVjdGF0aW9ucy4gCklmIHlvdSBldmVyIHdhbnQgdG8gaGF2ZSBhIG1hdHVyZSwgYWR1bHQsIHNleHVhbCByZWxhdGlvbnNoaXAgd2l0aCB3b21lbiB0aGVuIHN0b3AgcHJhY3RpY2luZyBob3cgdG8gTk9UIGRvIGl0LiAKRXZlbnR1YWxseSBzb21lb25lIGluIHRoZSBncm91cCB3aWxsIGFzayBzb21ldGhpbmcgcmVtb3ZpbmcgdGhlIG5lZWQgZm9yIG1lIHRvIGNvbWUgdXAgYW5kIHN0YXJ0IHRoZSBjb252ZXJzYXRpb24uIApJdCBpcywgaG93ZXZlciwgaG9tZSB0byBBc3BlcnMgQ2FzaW5vLCBhIDY1LDAwMCBzcXVhcmUgZm9vdCBnYW1pbmcgc3BhY2Ugd2l0aCB3YWxsIHRvIHdhbGwgc2xvdCBtYWNoaW5lcywgNTUgdGFibGUgYW5kIHBva2VyIGdhbWVzLCBhbmQsIG9uIHRoZSB3ZWVrZW5kIEkgbWFkZSBhbiBpbXByb21wdHUgYXBwZWFyYW5jZSBhdCB0aGUgODg4UG9rZXIgTElWRSBGZXN0aXZhbCBMb25kb24gTWFpbiBFdmVudCBpbiB0aGUgcG9rZXIgcm9vbSBsYXN0IE9jdG9iZXIsIGhlYXZpbmcgd2l0aCBodW1hbml0eSBhbmQgb3V0IHRoZXJlIG9wdGltaXNtLiAKQnV0IHdobyBrbm93cy5BbHNvLCB0aGF0IGV4dHJlbWUgb2YgYSBoZWlnaHQgaXMgbm90IGltcG9zc2libGUgdG8gYXR0YWluIG5hdHVyYWxseS4gUm9hZGhvZyBpcyB0aGUgc2FtZSBzaXplIGFzIEFuZHIgdGhlIEdpYW50IGluIGhpcyBwcmltZS4gQW5kciBnaWdhbnRpc20gd2FzIGNhdXNlZCBieSBhbiB1bnRyZWF0ZWQgcGl0dWl0YXJ5IGdsYW5kIHR1bW91ciB0aGF0IG92ZXJwcm9kdWNlZCBncm93dGggaG9ybW9uZS4gVGhlIHNhbWUgaGFwcGVuZWQgdG8gUGF1bCBXaWdodC9CaWcgU2hvdywgYnV0IGhlIHVuZGVyd2VudCBzdXJnZXJ5IHRvIHJlbW92ZSBpdCwgbGltaXRpbmcgaGlzIGhlaWdodCBhdCAyLjE2bS83IEkgY2FuIHNlZSBhIHNpbWlsYXIgdGhpbmcgbWF5IGhhdmUgaGFwcGVuZWQgd2l0aCBSb2FkaG9nL1JlaW4uVGhlIFVOIHJld2FyZGVkIE1vcnJpc29uIGZvciBoaXMgY29udHJpYnV0aW9ucyBieSBtYWtpbmcgaGltIE92ZXJ3YXRjaCBmaXJzdCBvZmZpY2lhbCBjb21tYW5kZXIuIApJcyBub3QgTXIuIE1vc3NlcmkgZGVzaXJlIHRvIGdldCBzb21lIGhvdCB3ZWF0aGVyIGluIFZlZ2FzLCBkZWZlbnNlIGF0dG9ybmV5IE1pY2hhZWwgQmFjaG5lciBzYWlkIGF0IGEgTWF5IGhlYXJpbmcgd2hlcmUgTW9zc2VyaSB0cmF2ZWwgcmVzdHJpY3Rpb25zIHdlcmUgbGlmdGVkLiBKdXN0IHdhbnRzIHRvIGVuZ2FnZSBpbiBoaXMgbGl2ZWxpaG9vZCwgd2hpY2ggaXMgYSBsZWdhbCBhY3Rpdml0eSBoZSBoYXMgZG9uZSBmb3IgbWFueSwgbWFueSB5ZWFycy4gClNvY2lhbCBTZWN1cml0eSBBZG1pbmlzdHJhdGlvbidzIERlYXRoIE1hc3RlciBGaWxlIGFuZCBpdCBpcyB1c2VkIGJ5IHRoZSBTb2NpYWwgU2VjdXJpdHkgQWRtaW5pc3RyYXRpb24gZm9yIGNvb3JkaW5hdGluZyBiZW5lZml0cy4gCkFsbCBvZiB0aGUgbWFzdGVyIHRlYWNoZXJzLCBldmVuIHRoZSBsZWdlbmRhcnkgaW5zdHJ1Y3RvcnMgaW4gSmFwYW4sIHdlcmUgb3BlbiB0byB0aGUgc2hvdydzIGNvbmNlcHQuIEl0IHdhcyBhIGNoYW5jZSB0byBzaG93Y2FzZSBhbiBhcnQgZm9ybSB0aGF0J3Mgdml0YWwgdG8gdGhlaXIgY3VsdHVyZS4gCjUuOSAoNzgzNykuIE1pY3Jvc29mdCBXb3JkIDIwMTAgaXMgYSBkb2N1bWVudCBlZGl0aW5nIHNvZnR3YXJlLCBpZGVhbCBmb3Igc3R1ZGVudHMgYW5kIC4gSXQncyBwcmltYXJpbHkgdXNlZCBmb3Igd3JpdGluZyBhbmQgY3JlYXRpbmcgZG9jdW1lbnRzIGFuZCBpcyBwYXJ0IG9mIHRoZSBNaWNyb3NvZnQgT2ZmaWNlIHNvZnR3YXJlIHBhY2thZ2UuIEZyZWUgaW52b2ljZSB0ZW1wbGF0ZSBmb3IgY2xvdGhpbmcgc3RvcmUvc2hvcC4gTWljcm9zb2Z0IFdvcmQsIHRoZSB3b3JkIHByb2Nlc3NvciBudW1iZXIgMSBpbiB0aGUgd29ybGQsIGlzIGhlcmUgdG8gaGVscCB5b3UgaW4gYWxsIHlvdXIgd29yay4gCkkgc3VwcG9zZSB5b3UgY291bGQgYXJndWUgdGhhdCB0aGUgYWRkZWQgY2hpcHMgaGVscCB5b3UgdGhyb3VnaG91dCB0aGUgdG91cm5hbWVudCwgYnV0IHlvdSBzdGlsbCB3b3VsZG4gcmVjZWl2ZSB0aGUgZnVsbCAyNSBmcm9tIHRoZSBib3VudHkuIAoiU3BlZWQgaXMgbXkgbWFpbiBhc3NldCwgSSBmZWVsIGxpa2UsIiBoZSBzYWlkLiAiSSB1c2VkIHRoYXQgb24gc3BlY2lhbCB0ZWFtcyBhIGxvdC4gClRoZSBIYXJyb2QgZmFtaWx5IGhhcyBhbHNvIHJlcGFpZCAkOTgyLDAwMC4gCldlIGxvb2sgYmFjayBhdCBvdXIgYW5jZXN0b3JzLCBiZWNhdXNlIHdlIHJlc3BlY3Qgb3RoZXIgY3VsdHVyZXMgbXVjaCBiZXR0ZXIgdGhhbiBBbWVyaWNhbiBjdWx0dXJlIGhhcyBldmVyIGJlZW4gcmVzcGVjdGVkLi4gClJlZWQgZGllZCBpbiAxOTkyIGFmdGVyIGEgYnJpZWYgYmF0dGxlIHdpdGggY29sb24gY2FuY2VyLi4gClZvcnBhbGdsb3JwICAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaGUgY29hbCBtaW5lcyBpbiB0aGUgYXJlYSBoYWQgYSBiYXNpYyBwcm9ibGVtOiBob3cgdG8gY2hlYXBseSBhbmQgZWZmZWN0aXZlbHkgdHJhbnNwb3J0IHRoZSBjb2FsIGZyb20gdGhlIG1pbmVzIG9uIHRvcCBvZiB0aGUgbW91bnRhaW4gdG8gdGhlIHBvcnQgaW4gTWFjaCBDaHVuaywgc29tZSAxOCBtaWxlcyBkb3duaGlsbC4gCkludGVyZXN0aW5nbHksIGVwaWNhdGVjaGluIHdhcyBlc3BlY2lhbGx5IGVmZmVjdGl2ZSBpbiBlbmhhbmNpbmcgbWVtb3J5IGZ1bmN0aW9uIGFuZCBzeW5hcHRpYyBwbGFzdGljaXR5IHdoZW4gY29tYmluZWQgd2l0aCB2b2x1bnRhcnkgZXhlcmNpc2UgWzEyXS4gCldlIHByYWN0aXNlIHJlZGRpcXVldHRlIGhlcmUgICBpZiBzb21lYm9keSBpcyBiZWluZyBoZWxwZnVsLCB1cHZvdGUgdGhlbSEgQW5kIGRvbiBkb3dudm90ZSBqdXN0IGJlY2F1c2UgeW91IGRvbiBhZ3JlZSAgIHJlcGx5IGFuZCB0ZWxsIHRoZW0gd2h5IHlvdSBkaXNhZ3JlZSBpbnN0ZWFkIG9mIGJlaW5nIGEgY293YXJkLgpJIG1lYW4gZnVjaywgdGhlIGNhbXB1cyBhdCB0aGUgTW91bnQgaXMgYmFyZSBjb25jcmV0ZSB0aGUgZGF5IGFmdGVyIGEgc3Rvcm0gYWxtb3N0IGFsd2F5cy4gQmVjYXVzZSB0aGV5IGhhdmUgY3Jld3MgdGhhdCBhY3R1YWxseSBkbyB0aGVpciBqb2IuClRoaXMgZmluZGluZyBzdWdnZXN0cyB0aGF0IHRoZSBuZW9uaWNvdGlub2lkcyBhcmUgY2F1c2luZyBzb21lIG90aGVyIGtpbmQgb2YgYmlvbG9naWNhbCBtZWNoYW5pc20gaW4gYmVlcyB0aGF0IGluIHR1cm4gbGVhZHMgdG8gQ0NELi4gCkJ1dCBub3cgdGhlcmUgYXJlIGxvdHMgb2YgcmVzb3VyY2VzIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSBpbnRlcm5ldC4gCjIwMDEgYW50aHJheCBhdHRhY2tzCkF0IHRyaWFsLCB0aGUgdGF4cGF5ZXIgd2FzIHVuYWJsZSB0byBwcm9kdWNlIGEgVDIyMDAuIApUaGUgbW9vZCBpbiB3aGljaCB0aGUgbW92aWUgb3BlbnMgYWxzbyBtYXR0ZXJzLiAKV2hhdCB5b3UganVzdCByZWFkIGFyZSB0aGUgYmFzaWMgdGhpbmdzIHlvdSBuZWVkIHRvIHVuZGVyc3RhbmQgaW4gcGxheWluZ2ZyZWUgVGV4YXMgaG9sZGVtIHBva2VyLiAKTXVja2xlc2hvb3QgaXMgYSBiaXQgYmlnZ2VyLCBoYXMgYSA1LzEwIGdhbWUgaW4gYWRkaXRpb24gdG8gMS8zIGFuZCAzLzUsIGJ1dCBBdWJ1cm4gaXMgYSBiaXQgb2YgYSBzaGFkeSBhcmVhLiBTdGlsbCwgdXN1YWxseSBnb29kIGdhbWVzIHRoZXJlIGZyb20gd2hhdCBJIGhlYXJkLgoiT2J2aW91c2x5LCB0aGVyZSdzIHRoZSBjYXNpbm8gYW5kIHRoZSBSaXR6LiAKU21va2luZyBpcyBhbHNvIG5vdCBhIHByb2JsZW0gYXQgYWxsLiBEb24gd29ycnkgdG9vIG11Y2gsIGFuZCBlbmpveSB5b3VyIHN0YXkhIEl0IGEgZ3JlYXQgY2l0eSwgZXNwZWNpYWxseSBpbiB0aGUgc3VtbWVyLiBQcmV0dHkgZWFzeSB0byBtYWtlIGZyaWVuZHMgaGVyZS5UaGF0IGludGVyZXN0aW5nIGJlY2F1c2UgSSBmaW5kIFNoYWtlc3BlYXJlIG11Y2ggZWFzaWVyIHRvIHJlYWQgdGhhdCB0aGUgTmliZWx1bmdlbmxpZWQgZXZlbiB0aG91Z2ggSSBhIG5hdGl2ZSBzcGVha2VyIG9mIEdlcm1hbi4gCk15IFRyaWJ1dGUgaXMgLiAuIC4gYXdhcmQgd2lubmluZyBzZXJ2aWNlClRob3NlIHNlcnZlcnMgd2hpY2ggZGlkbiB3YW50IHRvIGJlIGZvdW5kLiAKTGV0IHNheSBzaGUgY2FsbGluZyBoaW0gYSB0b24sIGhlIGNvdWxkIGV2ZW4gY2hhbmdlIGhpcyBvdXRnb2luZyB2b2ljZSBtZXNzYWdlIHRvICJIaSwgdGhpcyBpcyBTTyBMZWF2ZSBhIE1lc3NhZ2UuIApJIGtub3cgSSBiZSBhbm5veWVkIGFzIGhlbGwgdGhvdWdoLCBhcyBJIGFsd2F5cyB0aGluayAiT2ggYnV0IHdoYXQgaWYgc2hlIHJlYWRzIHRoaXM/IiB3aGVuIEkgY29tbWVudCBhYm91dCBsaXRlcmFsbHkgYW55dGhpbmcuIApFdmVuIHdpdGhvdXQgdGhvc2UsIGlmIHlvdSBjYW4gaGFuZGxlIERpYWJsbyAzIHlvdSBjYW4gaGFuZGxlIHJ1bmVzY2FwZSBjb21iYXQgZWFzaWx5IGFuZCBkbyBhYm91dCBoYWxmIHRoZSBib3NzZXMgd2l0aCBvbmx5IDUgNyBrZXliaW5kcy4gTWF5YmUgZXZlbiBsZXNzIGlmIHlvdSBsZXQgdGhlIGdhbWUgZmlyZSBhbGwgeW91ciBhYmlsaXRpZXMgZm9yIHlvdSAoVGhlcmUgYXJlIDMgb3B0aW9ucywgZnVsbHkgbWFudWFsLCBzZW1pIGF1dG9tYXRpYyBhbmQgZnVsbCBhdXRvbWF0aWMuIApJbiBjYXNlIGFueSBlcnJvciBvY2N1cmluZyB3aXRoaW4gdGhlIGxvb3AsIEkgYW0gc2VuZGluZyB0aGUgZmlsZSB0byBhIHBlcnRpY3VsYXIgZm9sZGVyIHdpdGggZXJyb3IgaW5mbyBhcHBlbmRlZCB3aXRoIHRoYXQgcmVjb3JkLi4gCk1vc3QgaW1wb3J0YW50bHksIGhpdCB5b3VyIHNob3RzLiBLbm93IHRoZSBzdHJlbmd0aCBvZiB5b3VyIHdlYXBvbnMgYW5kIHdoYXQgd29ya3MgYmVzdCBmb3IgeW91LiBTb21lIGhhdmUgYSBjcmF6eSBzcHJlYWQsIHNvbWUgYXJlIG9uIHBvaW50IGFsbCB0aGUgdGltZS4gCkluIGRlbiBlcnN0ZW4gYWNodCBNb25hdGVuIGRlcyBKYWhyZXMgc3RpZWcgZGllIFphaGwgZGVyIGJlcm5hY2h0dW5nZW4gdW0gZHJlaSBQcm96ZW50LiAKV2hlbiBjaG9vc2luZyBhbiBvbmxpbmUgcG9rZXIgc2l0ZSB0byBwbGF5IGF0LCBvbmUgb2YgdGhlIG1vc3Qgd2FudGVkIGZlYXR1cmVzIGludm9sdmVzIGtub3dpbmcganVzdCBob3cgbWFueSBwbGF5ZXJzIGFyZSByZWdpc3RlcmVkIGluIHRoZSBzaXRlLiBOYXR1cmFsbHksIHlvdSB3YW50IHRoZSBvbmxpbmUgcG9rZXIgc2l0ZSBvZiB5b3VyIGNob2ljZSB0byBoYXZlIGEgaGlnaCBtZW1iZXJzaGlwIHJhdGUgYmVjYXVzZSB0aGF0IG1lYW5zIHlvdSBhbHdheXMgaGF2ZSBvcHBvbmVudHMgYXZhaWxhYmxlIHRvIGZhY2UgeW91IGF0IGFueSB0aW1lIG9mIHRoZSBkYXkgd2hlbmV2ZXIgdGhlIHVyZ2UgdG8gcGxheSBwb2tlciBzdHJpa2VzIHlvdSB3aXRoIHN1Y2ggYSBoaWdoIG1lbWJlcnNoaXAgcmF0ZSwgeW91IGFsc28gaGF2ZSB0aGUgbHV4dXJ5IHRvIGNob29zZSB3aGljaCB0eXBlIG9mIHBva2VyIHBsYXllciB5b3UgcHJlZmVyIHRvIGdvIGFnYWluc3QuIApBbmQgaXQgbm90IGxpa2UgSSB3b3VsZCB2b2x1bnRlZXIgdG8gc2hvdCBjYWxsLCBJIHVzdWFsbHkgZGlkIGl0IHdoZW4gbm8gb25lIHdvdWxkLiAKSSB3b3JrZWQgaW4gdGhlIHNlcnZpY2UgaW5kdXN0cnkgc28gSSB1bmRlcnN0YW5kIG5vdCBiZWluZyB3YW50ZWQgdG8gYmUgdHJlYXRlZCBwb29ybHkgYW5kIGFtIG9mdGVuIHZlcnkgY29yZGlhbCBhbmQgdGhhbmtmdWwgZm9yIHBlb3BsZSdzIGVmZm9ydHMgdG8gd2hpY2ggSSByZWNlaXZlIGxpdHRsZSBjb3JkaWFsaXR5IGluIHJlc3BvbnNlLiAKV2hhdCBnaXZlcz8gVGhleSB1c2VkIHRvIGJlIHRoaXMgcmVsYXRpdmVseSB1bmtub3duIHNlcnZpY2UgdGhhdCBub3QgbWFueSBwZW9wbGUgdXNlLCBJIHJlbWVtYmVyIGRvd25sb2FkaW5nIG9uZSBhIGNvdXBsZSB5ZWFycyBhZ28gdG8gcGxheSBmYWxsb3V0IDQgZWFybHkgbG9sLiBCdXQgc2luY2UgSSdkIHNheSBOb3ZlbWJlciB0aGV5J3ZlIGJlZW4gZXZlcnl3aGVyZSwgSSBjYW4ndCB0aGluayBvZiBhIHJlYXNvbiB3aHkgdGhleSB3b3VsZCBiZSBwdXNoZWQgc28gaGFyZCBidXQgdGhlcmUgaGFzIHRvIGJlIHNvbWUgcmVhc29uLCBjb3VsZCBpdCBqdXN0IGJlIHNjaG9vbCBraWRzIHRyeWluZyB0byBwbGF5IEZvcnRuaXRlIG9uIHRoZWlyIGJsb2NrZWQgc2Nob29sIFdpRmk/LiAKRmVicnVhcnkgMjI6IEEgZmV3IGRheXMgb2xkIGJhYnkgZ2lyYWZmZSBzdGlja3Mgb3V0IGl0cyB0b25ndWUgYXQgdGhlIE9wZWx6b28gaW4gS3JvbmJlcmcgaW4gdGhlIFRhdW51cyByZWdpb24sIHdlc3Rlcm4gR2VybWFueSwgb24gRmVicnVhcnkgMjIsIDIwMTEuIFRoZSBiYWJ5IHBhbmRhIGlzIHRvIGJlIGNhbGxlZCBGdSBIdSwgb3IgSGFwcHkgVGlnZXIgaW4gTWFuZGFyaW4sIHRoZSB6b28gYW5ub3VuY2VkIG9uIE5vdmVtYmVyIDIyLCAyMDEwLiAKQWN0dWFsbHkgSSBoYWQgYSB0d28gd2VlayBzdHJldGNoIGluIElwaWFsZXMgd2hlcmUgSSB3b24gYWJvdXQgJDc1MDAuIEFjdHVhbGx5IEkgd2FzIHN0YWtlZCBzbyBJIHdvbiAkMTUsMDAwIGJ1dCBvbmx5IGdvdCB0byBrZWVwIGhhbGYgb2YgaXQuIApBbnkgdHdvIHBvaW50IHBpZXJjaW5nIHRoYXQgaXMgbWVhbnQgdG8gYmUgY29ubmVjdGVkIGJ5IGEgc2luZ2xlIHBpZWNlIG9mIGpld2VscnkgcmVxdWlyZXMgYSBzaWduaWZpY2FudCBsZXZlbCBvZiBza2lsbCBhbmQgdGVjaG5pcXVlIHRvIHBpZXJjZS4gCkhhdmUgeW91IGFjdHVhbGx5IHNwZW50IHNvbWUgdGltZSBvbiB0aGUgRWFzdCBTaWRlPyBJdHMgdGhlIG5ldyBTb3V0aCBTaWRlLiBJIHdhcyBzaG9ja2VkIHdoZW4gSSBjYW1lIGJhY2sgYW5kIHNhdyB3aGF0IGEgbWVzcyBpdCBoYXMgYmVjb21lIGFuZCBpZiB5b3Ugd2FudCBhIGdvb2QgaWRlYSBvZiB3aGF0IGl0cyBsaWtlLCBjaGVjayBvdXQgdGhlIEZyeXMgb24gS29sYiBhbmQgMjJuZCwgb3IgYW55cGxhY2Ugb24gR29sZiBMaW5rcy4gTW9zdCBvZiB0aGUgc2Nob29scyhhdCBsZWFzdCBUVVNEKSBhcmUgRCByYXRlZCBvciB3b3JzZSwgYW5kIHRoZSBzdGFuZGFyZCB1bmlmb3JtIHNlZW1zIHRvIGJlIG92ZXJzaXplZCBwaiBwYW50cyB3aXRoIHNvbWUgcmFuZG9tIGdoZXR0b2l6ZWQgY2FydG9vbiBjaGFyYWN0ZXIgYW5kIHN0cmV0Y2hlZCB0byBpdHMgbGltaXRzIHNwYW5kZXggd2l0aCB0aGUgZHVubGFwIGRpc2Vhc2Ugb24gc2hvdyBmb3IgYWxsLiBUaGUgZ3V5cyBhcmVudCBtdWNoIGJldHRlciB3aXRoIHN1cGVyb3ZlcnNpemVkIGJhc2tldGJhbGwgc2hvcnRzLCBnbyBhaGVhZHMgd2l0aCBzb2NrcywgYW5kIHNvbWUgb2ZmIGJyYW5kIGJhc2tldGJhbGwgamVyc2V5IHN0cmV0Y2hlZCB0byB0aGUgbWF4IHRvIGNvdmVyIHRoZSB3ZWxmYXJlL2JlZXIgYmVsbHkuCkRvZXMgYW55b25lIGhhdmUgYW55IGdvb2QgcmVzb3VyY2VzIG9uIG92ZXJiZXR0aW5nIHN0cmF0ZWd5IG9yIGp1c3QgYSBiZXQgc2l6aW5nIGluIGdlbmVyYWw/IEkgcmFuIGEgYnVuY2ggb2YgZGlmZmVyZW50IHBpbyBzaW1zIGFuZCBJIHN0aWxsIGNhbid0IGZpZ3VyZSBvdXQgZXhhY3RseSB3aGVuIGl0IGxpa2VzIG92ZXJiZXR0aW5nIGFuZCB3aGVuIGl0IGRvZXNuJ3QuIEluIGdlbmVyYWwgdGhlcmUgc2VlbXMgdG8gYmUgYSBjb3JyZWxhdGlvbiBiZXR3ZWVuIG91ciBlcXVpdHkgcmFuZ2UgdnMgcmFuZ2UgYW5kIGxpa2VsaWhvb2Qgb2Ygb3ZlcmJldHRpbmcgYnV0IHRoZXJlIGFyZSBhIGxvdCBvZiBleGNlcHRpb25zIGFuZCBJJ20ganVzdCBub3Qgc2VlaW5nIHRoZSBwYXR0ZXJuIGZ1bGx5LiBXaXRoIHRoZSByYW5nZXMgSSBhc3NpZ25lZCBpbiBvbmUgaGFuZCwgUGlvIGJldCBmbG9wIG92ZXJiZXQgdHVybiBJUCBvbiBUaDZoMmQgIG9mZnN1aXQgMiBvciAzIG9uIHRoZSB0dXJuIGJ1dCBkaWQgbm90IG92ZXJiZXQgb24gYW4gb2Zmc3VpdCBBIHR1cm4gd2hlbiB0aGUgQSBpcyBldmVuIGJldHRlciBmb3Igb3VyIGVxdWl0eSB0aGFuIHRoZSAyIG9yIDMuIApCdXQgeWVzLCB0aGlzIGRvZXNuIGJlbG9uZyBvbiB0aGUgc3VicmVkZGl0LCB3aGljaCBpcyB3aHkgSSBoYXZlIGRlbGV0ZWQgdGhlIGNvbW1lbnRzLiBBbmQgbmVpdGhlciBkbyB5b3VyIHJldG9ydHMsIEkgd2FnZXIuCkZsYXZvdXJzIGZlYXR1cmVkIGluIFRoYWlsYW5kIGluY2x1ZGUgTm9yaSBTZWF3ZWVkLCBCYXNpbCwgU3F1aWQsIFNwaWN5IENoaWxpIFNxdWlkLCBTZWFmb29kIGFuZCBNYXlvbm5haXNlLCBhbmQgU3BpY3kgU2VhZm9vZC4gSW4gVGhhaWxhbmQsIHRoZXJlIGFyZSBDbGFzc2ljLCBTb3VyIENyZWFtIE9uaW9uLCBDaGVlc2UgT25pb24sIE1leGljYW4gQmFyIEIgUSwgYW5kIEphcGFuZXNlIE5vcmkgU2Vhd2VlZC4gVGVtcG9yYXJ5IGludGVybmF0aW9uYWwgZmxhdm91cnMgaGF2ZSBhbHNvIGJlZW4gaW50cm9kdWNlZCwgc3VjaCBhcyBGcmVuY2ggTWF5b25uYWlzZSwgQmFsc2FtaWMgVmluZWdhciBhbmQgU2FsdCAoRW5nbGFuZCksIEdhcmxpYyBTb2Z0IFNoZWxsZWQgQ3JhYiAoSG9uZyBLb25nKSwgU295IFNhdWNlLCBTYWxtb24gVGVyaXlha2kgKEphcGFuKSwgTG9ic3RlciwgQmFjb24gQ2hlZXNlIChBbWVyaWNhKS4gCkVuIGVmZmV0LCBsYSBncm9zc29waG9iaWUgbWRpY2FsZSBlc3QgdHJzIHJwYW5kdWUgZXQgYmFzZSBzdXIgZGVzIGNvbm5haXNzYW5jZXMgZXJyb25lcy4gSWwgbid5IGEgcGFzIGRlIHJnbGVzLCBqJ2FpIGRqIHBhcmwgZGUgbGEgZGlmZnJlbmNlIGVudHJlIHBvaWRzIGV0IHNhbnQuIApUaGVpciBjdXN0b21lciBzZXJ2aWNlIGlzIG9mIHVubWF0Y2hlZCBwZXJmZWN0aW9uLiAKSSBhbSBub3QgcHJvdGVjdGluZyBwcmllc3Qgd2hvIHJhcGUsIEkganVzdCBzYXlpbmcgdGhhdCB0aGVyZSBpcyBhICJydWxlIiB0aGF0IG1ha2VzIHRoaW5ncyB3b3JzZS4KTXkgYWR2aWNlIHdvdWxkIGJlIG5vdCB0byBib3RoZXIgZm9yY2luZyBpdC4gCkFub3RoZXIgcG9zdGVyIGhhcyBtZW50aW9uZWQgdGhhdCwgYnV0IEkga25vdyBvdGhlciBwZW9wbGUgd2hvIGhhdmUgYmVlbiB0b2xkIHRoZSBzYW1lLiAKT3V0IG9mIG5vd2hlcmUgb25lIGRheSwgc2hlIHN0YXJ0ZWQgc3BvdXRpbmcgb2ZmIGFsbCBvZiB0aGlzIE1vcm1vbiBwcm9wYWdhbmRhLiAKU28sIGZvciBleGFtcGxlLCBpZiBzb21lb25lIGhhcyBhIGhlYXJ0IGF0dGFjayB0aGVpciBibG9vZCB2ZXNzZWwgdGhhdCBzdXBwbGllcyB0aGUgaGVhcnQgZ2V0cyBjbG9nZ2VkIG9mZi4gCllvdSBjYW4gY2FuY2VsIE1pcmFnZSB1bHRpbWF0ZSBJbnZpc2liaWxpdHksIGFuZCB0aGUga25vY2tkb3duIHNoaWVsZCBpcyBhbHdheXMgdmlzaWJsZSwgZXZlbiBpZiB5b3UgYXJlbiB0byByZWl0ZXJhdGUgdGhlIGZpcnN0IHBhcnQ6IG9uY2UgeW91IGFjdGl2YXRlZCBNaXJhZ2UgdWx0aW1hdGUsIHlvdSBiZXR0ZXIgcGxhbiBhIHBsYWNlIHRvIGhpZGUgb3IganVzdCBib29rIGl0IG91dCBvZiB0aGUgd2F5IG9mIGVuZW1pZXMgYmVjYXVzZSB5b3UgY2FuIGRvIGFueXRoaW5nIG9uY2UgeW91IHByZXNzIHRoYXQgYnV0dG9uLiBZb3UgaGF2ZSB0byB3YWl0LCBldmVuIGlmIHlvdSBqdXN0IHdhbnQgdG8gaGVhbCBvciByZWNoYXJnZSBzaGllbGRzLiBUaGF0IG5vdCB0byBzYXkgaXQgYSBiYWQgdWx0LCBNaXJhZ2Ugc3RpbGwgZ2V0cyBhIGxvdCBvZiBtaWxlYWdlIG91dCBvZiBpdCBhcyBib3RoIGFuIGVzY2FwZSBidXR0b24gYW5kIGEgZmxhbmtpbmcgdG9vbCwgYnV0IGRvbiBnbyBzdHJhaWdodCBpbnRvIHRoZSBlbmVteSB0ZWFtIHdoZW4geW91IGludmlzaWJsZSBiZWNhdXNlIGEpIHlvdSBhcmVuIGVudGlyZWx5IGludmlzaWJsZSwgYW5kIGIpIHlvdSBoYXZlIHRvIHdhaXQgZm9yIHRoZSB1bHQgdG8gd2VhciBvZmYsIGFuZCBldmVuIHRoZW4geW91IGhhdmUgdG8gYWN0dWFsbHkgcmVhZHkgeW91ciB3ZWFwb24uLiAKRnJpZW5kcyBmb3JldmVyISBKZW5uaWZlciBBbmlzdG9uLCBMaXNhIEt1ZHJvdywgQ291cnRlbmV5IENveCwgTWF0dCBMZUJsYW5jIGFuZCBEYXZpZCBTY2h3aW1tZXIgY2FtZSB0b2dldGhlciB0byBob25vciB0aGVpciBGcmllbmRzIGRpcmVjdG9yIEphbWVzIEJ1cnJvd3MgbWFraW5nIE11c3QgU2VlIFRWOiBBbiBBbGwgU3RhciBUcmlidXRlIHRvIEphbWVzIEJ1cnJvd3MgcHJvYmFibHkgdGhlIG9ubHkgdGVsZXZpc2VkIEZyaWVuZHMgcmV1bmlvbiB3ZSdsbCBldmVyIGdldCB0aG91Z2ggaXQgZGlkbid0IGZlYXR1cmUgdGhlIGNvbXBsZXRlIHNldC4gTWF0dGhldyBQZXJyeSB3YXMgaW4gcGxheSByZWhlYXJzYWxzIGluIExvbmRvbiwgYnV0IGhpcyBwcmVzZW5jZSB3YXMgY2VydGFpbmx5IGZlbHQuIApJIGEgZ2Fzc3kgZmVsbG93IHNvIEkgdXN1YWxseSBoYXZlIGEgZ29vZCBmYXJ0IG9mIHR3byBzYXZlZCBmb3IgbXkgc21va2UgYnJlYWtzLiBNeSBjbyB3b3JrZXIgdGhpbmtzIG15IGZhcnRpbmcgaXMgaGlsYXJpb3VzIChhcyBkbyBJKSBzbyBpdCBhbiBvbmdvaW5nIGpva2UgZm9yIHVzLiAKVGhhdCBuaWdodCwgSWJyYWhpbSB0b29rIHVzIHRvIHRoZSBvbmUgYmFyIGluIHRvd24sIGFuIElyaXNoIFB1YiBuZWFyYnkuIFdlIHdlcmUgZHJpbmtpbmcgUGV0cmEgYmVlciwgd2hpY2ggb3VyIHdhaXRlciAiSm9zZXBoIiAobGlrZWx5IFl1c2VmIHNpbmNlIGhlIHdhcyBFZ3lwdGlvbikga2VwdCB0ZWxsaW5nIHVzICI4JSEiIChhbGNvaG9sIGNvbnRlbnQpIGV2ZXJ5IHRpbWUgaGUgaGFuZGVkIG9uZSBvdmVyLiAKV2h5IGNhbiB3ZSBzcHJlYWQgdGhlIGltbWlncmF0aW9uIG51bWJlcnMgbW9yZSBldmVubHkgYWNyb3NzIGNvdW50cmllcz8gV2h5IGNhbiB3ZSBzZXJpb3VzbHkgZW5mb3JjZSBsYW5ndWFnZSBsYXdzPwpTaGUgcGxlYWRzIHdpdGggaGltIG5vdCB0byBhY2NlcHQgQWxiZXJ0J3MgZHVlbCwgYW5kIGhlIHJlYWxpemVzIGhvdyBoZSBoYWQgbm8gcXVhbG1zIGFib3V0IGtpbGxpbmcgQWxiZXJ0IGluIGl0LiBGdXJ0aGVybW9yZSwgc2hlIHRlbGxzIEFsYmVydCBhYm91dCBEYW50ZXMnIHRydWUgcGFzdCwgd2hpY2ggaGUgdGhlbiBjYWxscyBvZmYgdGhlIGR1ZWwuIApUaGF0IGhhcHBlbmVkIGFmdGVyIHRoZSBlbGVjdGlvbiBvZiAxODM2LCBtb3JlIHRoYW4gMTUwIHllYXJzIGVhcmxpZXIuIE5vdGUgdG8gTWlrZSBQZW5jZTogSXQncyBwcmV0dHkgcmFyZS4uIApUd28gc3Rvb2Qgb3V0IGVzcGVjaWFsbHksIGFuZCBvbmUgd2FzIGEga25vY2tvdXQgKG9idmlvdXNseSB0aGUgb25lIEkgY2hvc2UpLiAKUG9wdWxhciBpbnRlcmVzdCBpbiBtdWx0aXBsZSBwZXJzb25zIHNoYXJpbmcgYSBzaW5nbGUgZHJlYW0gY2FuIGJlIHRyYWNlZCB0byBmaWxtcyBzdWNoIGFzICJJbmNlcHRpb24sIiB3aGljaCBpcyBiYXNlZCBvbiBzY2llbmNlIGZpY3Rpb24vZmFudGFzeS4gCkFsbCBhdmFpbGFibGUgb255b3V0dWJlLiAoU2VhcmNoaW5nIG9ubGluZWZvciBtb3JlIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBzaG91bGQgeWllbGQgbW9yZSkuIApTbyBldmVuIGlmIHdlIGNvbmZpbmUgaXQgdG8gb25seSB0aG9zZSB0d28gb3V0Y29tZXMgKGFuZCBub3QgY29uc2lkZXIgaG93IGl0IHdvdWxkIHJ1aW4gaGlzIGNhcmVlciwgZm9yIGV4YW1wbGUpLCB3ZSB0YWxraW5nIGFib3V0IGtpZHMgZG8gc3Rlcm9pZHMgYmFkbHkgYW5kIHRvbyB5b3VuZyB2cy4gTmV3IGxpZnRlcnMgbWlzdGFrZW5seSB0aGluayB0aGV5IGNhbiBnZXQgYXMgYmlnIGFzIGhpbSB1bnRpbCB0aGV5IGdvIG9uIHRoZSBpbnRlcm5ldCBhbmQgbGVhcm4gc29tZXRoaW5nIFlvdSB0aGluayB0aGUgbGF0dGVyIGlzIHdvcnNlPyEuIApMJ2FydGljbGUgMzkgaW5kaXF1ZSA6ICBMZXMgY29uc3VscyBzb250ICB2aWUgOiAgIElscyBzb250IG1lbWJyZXMgZHUgU25hdCwgZXQgbGUgUHJzaWRlbnQgLiAKVGhlIG9zY2lsbGF0aW9ucyBtYWtlIHlvdXIgYm9keSBmZWVsIGxpa2UgaXQgd2VpZ2hzIG1vcmUgbGlrZSB3aGVuIHlvdSdyZSBpbiBhbiBlbGV2YXRvciBhbmQgaXQgcXVpY2tseSByaXNlcyBjcmVhdGluZyBhIGdyZWF0ZXIgZ3Jhdml0YXRpb25hbCBmb3JjZSBhbmQgdGhlcmVmb3JlIG1vcmUgd29yayBmb3IgdGhlIG11c2NsZXMsIENvZWxobyBzYXlzLiAKSnVtcCB0byBjb250ZW50bXkgc3VicmVkZGl0cwpHb29nbGUgSW5uYXRlIFBob2JpYXMuIFNldmVyYWwgc3R1ZGllcyBoYXZlIGJlZW4gZG9uZSB0aGF0IHByb3ZlIHRoYXQgYSBjcmlja2V0IHdobyB3YXMgZXhwb3NlZCB0byBhIHNwaWRlciwgaGVyIG9mZnNwcmluZyB3aWxsIGJlIHNjYXJlZCBvZiB0aGVtIGV2ZW4gaGF2aW5nIG5ldmVyIGVuY291bnRlcmVkIG9uZSB0aGVtc2VsdmVzLiAKU3RvcCBiZWluZyBzbyBuYWl2ZS4gQ2hpbmEgaGFzIGJlZW4gdGhlIGxhcmdlc3QgYWdncmVzc29yIGFuZCBpbnZhZGVyIGluIGhpc3RvcnkuCk9kZXIgc28uIApUaGlzIGRhcmsgdGhyaWxsZXIgaXMgc28gcmVsZW50bGVzc2x5IHN0eWxpc2ggdGhhdCBpdCdzIGRpc3RyYWN0aW5nLiAKV2UgbWV0IGEgbWFuIHdpdGggYSBob29rIGZvciBhIGhhbmQgYW5kIHNoZSBzcHJpbnRlZCB1cCB0byBoaW0gdG8gYXNrIGhpbSBpZiBoZSB3YXMgQ2FwdGFpbiBIb29rLiAKVGhlbiB0aGUgY2hpbiBhbmQgbGlwIG11c2NsZXMuIApXZSBvZnRlbiBqb2tlIGhvdyBsdWNreSB3ZSBhcmUgdG8gZ2V0IHRvIGNob29zZSBvdXIgZmFtaWx5LiAKSW4gYWxsIG9mIHBsYXlpbmcsIG15IGRvd25zd2luZ3MgaGF2ZSBiZWVuIGNvbnNpc3RlbnRseSB3b3JzZSBvdmVyIHRpbWUuIENvbnNpc3RlbnRseSBwbGF5aW5nIDEvMy82IHVuY2FwcGVkIDI1aHJzIGEgd2VlayB3aXRoIGEgZ29vZCBqb2IuIFN0dWR5aW5nIHF1aXRlIGEgYml0IGFuZCBiZWluZyBzZXJpb3VzIGFib3V0IG15IGdhbWUuIDMwJSBvZiBteSB0aW1lIHBsYXlpbmcgYXJlIGxpdmUgc21hbGwvbWlkIHN0YWtlcyBNVFQncywgc28gSSBkZWFsIHdpdGggYSBiaXQgbW9yZSB2YXJpYW5jZSB0aGFuIHRoZSBhdmVyYWdlIGNhc2ggZ3JpbmRlci4gKzU1ayBvdmVyIDIuNSB5ZWFycyAoc2luY2UgSSBzdGFydGVkIHRyYWNraW5nIGluIHRoZSBhcHApIGlzIGdvb2Qgc2lkZSAkLiBEZWFsaW5nIHdpdGggdGhlIGRvd25zd2luZ3MgYXJlIHRvdWdoLgpBbHMgTHVuYSBZb2dhIGJ1bmcgYmlldGV0IHNpY2ggZGllIEt1c2NoZWxtYXNzYWdlIGFuOgpNaWtla2w5MSAgMSBwb2ludCAgc3VibWl0dGVkIDI4IGRheXMgYWdvCkl0IGlzIGJlbGlldmVkIHRoYXQgV2FybmUgYW5kIGZvcm1lciB3aWZlIFNpbW9uZSBDYWxsYWhhbiBwbGFubmVkIHRvIGJ1aWxkIGEgZmFtaWx5IGhvbWUgb24gdGhlIHByb3BlcnR5IGZvbGxvd2luZyByZXBvcnRzIHRoZWlyIHJvbGxlcmNvYXN0ZXIgcmVsYXRpb25zaGlwIGhhZCBiZWVuIHJldml2ZWQuCkV2ZW4gd29yc2UsIGl0IGlzIHVzdWFsbHkgdmVyeSBkaWZmaWN1bHQgdG8gd29yayB3aGVuIHlvdXIgaGFuZHMgYXJlIHN3b2xsZW4uIApUaGV5IGhhdmUgYmVlbiBzbyB0aG9yb3VnaCB3aXRoIGFsbCB0aGVpciBjaGVja3MsIHdlIGFyZSByZWFsbHkgcGxlYXNlZCB3aXRoIHRoZSB0cmVhdG1lbnQgdGhhdCBQZXRlIGhhcyByZWNlaXZlZCBzbyBmYXIuIEV2ZXJ5IG1vcm5pbmcgYSBncm91cCBvZiBhYm91dCBlaWdodCBudXJzZXMgY29tZSB0byBzZWUgUGV0ZSB0byBjaGVjayBvbiBoaW0sIHRoZW4gdGhlIHRlYW0gb2YgZml2ZSBkb2N0b3JzIGFycml2ZSB0byBhc2sgYSBmZXcgcXVlc3Rpb25zIGFuZCBtYWtlIHN1cmUgaGUgaXMgZmVlbGluZyBva2F5LCBhbmQgdG8gZXhwbGFpbiBpbiBkZXRhaWwgd2hhdCB0aGUgbmV4dCBzdGVwIGlzLiBEciBXYW5nIHNhaWQgaGUgd2lzaGVkIGhlIGhhZCBzZWVuIFBldGUgZm91ciB5ZWFycyBhZ28gYmVjYXVzZSBoZSBjb3VsZCBoYXZlIHByZXZlbnRlZCBzbyBtdWNoIHRpc3N1ZSBkYW1hZ2UgKGJ1dCBoaW5kc2lnaHQgaXMgYSBnb29kIHRoaW5nLCBpc24ndCBpdD8pLiAKQnkgbGF0ZSBBcHJpbCBvciBlYXJseSBNYXksIHRoZSB0dWJlcnMgd2lsbCBoYXZlIHJvb3RlZCB3ZWxsIGFuZCBncm93biBpbnRvIHN0dXJkeSBwbGFudHMgZm9yIHNldHRpbmcgb3V0IGludG8gdGhlIGdhcmRlbiBvciBvdXRkb29yIGNvbnRhaW5lcnMgaW4gdGhlIHdhcm10aCBvZiBsYXRlIHNwcmluZy4KV2UgcHJlcGFyZWQgYSBkaXNoIHRvIGJyaW5nIHRoYXQgd2FzIGNvbXBsaWFudCwgYW5kIGhhZCBiaWcgcGxhbnMgdG8ganVzdCBzdGljayB0byBvdXIgZGlzaCwgYnV0IHdlIGdvdCB0aGVyZSBhbmQgdGhlcmUgd2VyZSBtb3VudGFpbnMgb2YgdGhlIG1vc3QgYW1hemluZyBGaWxpcGlubyBmb29kLiAKVGhlIGRpbmluZyB0YWJsZSBjYW4gc2VhdCBhIGZhbWlseSBvZiA2IGZvciBkaW5uZXIsIGFuZCBjYW4gc2VhdCA4IHBva2VyIHBsYXllcnMuIEl0J3MgdmVyeSBlYXN5IHRvIGZpdCBpbnRvIHlvdXIgZGluaW5nIHJvb20gYW5kIHVzZSBmb3IgYSBmcmlkYXkgb3Igc2F0dXJkYXkgbmlnaHQgaGFuZ291dCBzcG90IHdpdGggZ3V5cyBvciBnYWxzLiAKJDI1ICQzNS4gCkkgbmV2ZXIgc2VlbiB0aGlzIGtpdCBiZWZvcmUgaW4gbXkgbGlmZS4gQXBwYXJlbnRseSwgbXkgc2lzdGVyIHdlbnQgaW50byBoZXIgYmVkcm9vbSBhbmQgZGlzY292ZXJlZCBpdCBvdXRzaWRlIG9mIGhlciB3aW5kb3cgcHJvcHBlZCB1cCBsaWtlIHNvbWVvbmUgaGFkIHNldCBpdCB0aGVyZS4gT2gsIGFsc28sIGhlciBiZWRyb29tIGlzIG9uIHRoZSAybmQgZmxvb3IuIApObyBwdXJlIGltYWdlIHBvc3RzICAgTWVtZXMsIGV0Yy4sIG11c3QgYmUgY29udGFpbmVkIHdpdGhpbiBhIHNlbGYgcG9zdC4gKEV4YW1wbGUuKS4KU3R1ZGVudHMgbXVzdCBjb21wbGV0ZSBnZW5lcmFsIGVkdWNhdGlvbiByZXF1aXJlbWVudHMgaW4gYWRkaXRpb24gdG8gbnVyc2luZyBjbGFzc2VzIHRvIGVhcm4gdGhlIGRlZ3JlZS4gCkFuZCB0aGlzIGNvbXBhcmlzb24gZ2V0cyBldmVuIHdvcnNlIGlmIHlvdSByZXBsYWNlIE1jRG9uYWxkcyBqb2Igd2l0aCBhIGpvYiBlYXJuaW5nICQyMCBvciBldmVuICQxNSBhbiBob3VyLi4gCk5vdyBvdmVyIGEgbW9udGggYW5kIGEgaGFsZiBhZnRlciB0aGUgaW5pdGlhbCBpbmp1cnkgSSdtIG9ubHkgYWJsZSB0byByaWRlIHN0ZWFkeSBmbGF0IG1pbGVzLCBidXQgSSBjYW4ndCByZWFsbHkgcHVsbCB1cCB3aXRoIG15IGxlZnQgbGVnICh0aGUgc2FtZSBzaWRlIEkgc3RyYWluZWQgdGhlIGFkZHVjdG9yIG9uKS4gU28gSSBjYW4gcmlkZSB0byBrZWVwIG1lIHNhbmUsIGJ1dCBpdCdzIG5vdCBldmVuIHRoYXQgdXNlZnVsIGZvciBiYXNlIG1pbGVzLCBhbmQgSSdtIHRoaW5raW5nIEknbSBqdXN0IGRlbGF5aW5nIGdldHRpbmcgdG8gMTAwJS4KV2UgaGF2ZSBhIGRpbmVyIGF0IHRoZSBob3VzZSB3aG8gaXMgc2Vuc2l0aXZlIHRvIHJlYWxseSBzcGljeSBmb29kcyBzbyB3ZSBlaXRoZXIgbWFrZSBhIHNlcGFyYXRlIGJhdGNoIG9mIHNwaWN5IHgxMCBvciBmb2N1cyBvbiBvdGhlciBmbGF2b3JzIGxpa2Ugd2UgZGlkIGhlcmUuIApFbW1hIE1jS2VvbiBsaWZ0ZWQgaGVyIHRoaXJkIHRpdGxlIG9mIHRoZSBtZWV0LCB3aW5uaW5nIHRoZSAxMDBtIGZyZWUgaW4gNTMuMzAgd2l0aCBmZWxsb3cgQXVzc2llIEJyaXR0YW55IEVsbXNsaWUgc2Vjb25kIGluIDUzLjc3LgpUb28gbXVjaCB0aHlyb2lkIGhvcm1vbmUgdHlwaWNhbGx5IGNhdXNlcyB0aGUgbWV0YWJvbGlzbSB0byBnbyBpbnRvIG92ZXJkcml2ZS4gClRoZSBOSEwgaXMgc3RpbGwgaGlzIHByZWZlcnJlZCByb3V0ZTogaWYgaGUgZGlkbid0IHNwZW5kIHRocmVlIHNlYXNvbnMgaW4gdGhlIEtITCwgaGUgd291bGQgaGF2ZSBjYXVnaHQgdXAgd2l0aCBHb3JkaWUgSG93ZSBpbiB0aGUgZ2FtZXMgcGxheWVkIHN0YXRpc3RpY3MuIEhlJ3MgY2xvc2Ugbm93LCBKYWdyIHNhaWQsIGFuZCBpdCB3b3VsZCBiZSBhIHBpdHkgbm90IHRvIHJlYWNoIGl0LiBPZiBjb3Vyc2UsIHRoZXJlJ3Mgbm8gY2hhbmNlIHNvIGZhciBhcyBnb2FscyBzY29yZWQgYXJlIGNvbmNlcm5lZC4KV2hhdGV2ZXIgdGhhdCB0aGluZyBpcyB0aGF0IHRoZXkgZ2V0IGZyb20gd29ya2luZyB3aXRoIG1lIGlzIHVzdWFsbHkgZ29pbmcgdG8gYmUgYW4gaW50cmluc2ljIG5lZWQgZm9yIHRoYXQgY2xpZW50LiAKQW5kIHRvIG1lLCBpdCBpcyB0aGUgZGVodW1hbml6YXRpb24gYW5kIHRoZSBzaWxlbmNpbmcgb2YgYSBwYXJ0aWN1bGFyIHBhaW4gYW5kIHN1ZmZlcmluZyBvZiBwZW9wbGUsIHNob3VsZCBub3QgYmUgb2sgYW5kIG5vcm1hbC4gClRoaXMgdmlkZW8gaWxsdXN0cmF0aW9uIGV4ZWN1dGVzIHRoZSB0aG91Z2h0cyBvZiB0aGUgd2lubmVycyB0byB0aGUgbmV3IGNoYWxsZW5nZXJzLiBBIGNvbXBsZXRlIG5ld2JpZSBjYW4gbGVhcm4gdGhlIG1vc3QgdW5pcXVlIHRlY2huaXF1ZSBvZiBwb2tlciBvdmVybmlnaHQgd2l0aCB0aGUgY29sbGVjdGlvbiBhdCBob21lLiBXZWxsLCB0aGlzIERWRCBkb2VzIG5vdCBlbnN1cmUgd2luIGluIGV2ZXJ5IGdhbWUgeW91IHBsYXkuIEJ1dCB5b3UnbGwgc2VlIGltcHJvdmVtZW50IGluIGFsbW9zdCBubyB0aW1lLiBFYWNoIG9uZSBvZiB0aGVtIGhhcyBiZWNvbWUgdGhlIHJvbGUgbW9kZWwgaW4gdGhlIHBva2VyIHRhYmxlcyBhY3Jvc3MgdGhlIGNvdW50cnkuIFRvZGQgQnJ1bnNvbiBpcyBhbHNvIGEgaGlnaCByYW5rZWQgcG9rZXIgcHJvZmVzc2lvbmFsIHdobyBsZWFybmVkIHRoZSB1bmlxdWUgbWV0aG9kcyBmcm9tIGhpcyBmYXRoZXIgbGVnZW5kYXJ5IHBva2VyIHBsYXllciBEb3lsZSBCcnVuc29uLiBNaWtlIE1hdHVzb3cgaXMgdGhlIG1vc3QgYXR0cmFjdGl2ZSBhbmQgY2hhcm1pbmcgcG9rZXIgY2hhbXBpb24gZXZlci4KSGUgaXMgYW4gaWNvbiBpbiB0aGUgcGFpbiBtYW5hZ2VtZW50IHdvcmxkIGFuZCB0aGUgd29ybGQgb2YgYW5hdG9taXN0cy4gCiJXaGF0IGhhcyBjaGFuZ2VkIGlzIHRoZSB1bmNlcnRhaW50eSBpbiB0ZXJtcyBvZiB3aGF0IHdpbGwgYmUgaW4gdGhlIGxlZ2lzbGF0aW9uLCBpZiBhbmQgd2hlbiBpdCdzIHRhYmxlZCwgYW5kIHNvIHdlIGRvIG5lZWQgdG8gdGhpbmsgYWJvdXQgb3VyIHJlc3BvbnNlIHRvIHRoYXQsIiBzaGUgc2FpZC4KRGlmZmVyZW5jZXMgQmV0d2VlbiBhbiBSTVQgYW4gTE1UCk1ldHJvaWQgRnVzaW9uIChHQkEpU3RpbGwgYSBnb29kIGdhbWUsIGJ1dCBhIGJpZyBkaXNhcHBvaW50bWVudCBhZnRlciBwbGF5aW5nIFpNLiBJIGRvbid0IG1pbmQgbGluZWFyIGdhbWVzIGJ1dCBpbiB0aGF0IGNhc2UgSSByZWFsbHkgcHJlZmVyIGl0IGlmIGl0IGp1c3QgY3V0IG91dCB0aGUgZXhwbG9yaW5nIGFuZCBiYWNrdHJhY2tpbmcgYWx0b2dldGhlciBhbmQgc3R1Y2sgdG8gYSBzdGFnZSBiYXNlZCBzdHJ1Y3R1cmUuIFBhY2luZyBmZWx0IG9mZiB3aXRoIHRoZSBjb25zdGFudCBkYXRhIHJvb20gdmlzaXRzLiBCb3NzIGZpZ2h0cyB3ZXJlIGFubm95aW5nIHRvbyAgIG1vcmUgZGlmZmljdWx0IHRoYW4gWk0gYnV0IG5vdCBpbiBhIHdheSB0aGF0IGZlZWxzIGZhaXIgb3IgaW50ZXJlc3RpbmcuIEtlcHQgZHJlYWRpbmcgZW5jb3VudGVyaW5nIHRoZSBuZXh0IGJvc3MgcmF0aGVyIHRoYW4gbG9va2luZyBmb3J3YXJkIHRvIGl0LiBGYW50YXN0aWMgYXRtb3NwaGVyZSwgcHJlc2VudGF0aW9uIGFuZCBzb3VuZHRyYWNrIHRob3VnaC4gT3ZlcmFsbCwgZ2VuZXJhbGx5IGZlbHQgbGlrZSB0aGUgRGFyayBTb3VscyAyIG9mIDJEIE1ldHJvaWRzLgpCZW50b25pdGUgY2xheSAoYXZhaWxhYmxlIGF0IHlvdXIgbmF0dXJhbCBmb29kIHN0b3JlKSBwb3VsdGljZXMgYXJlIG9mIGdyZWF0IGhlbHAgZm9yIG1vcmUgcGFpbmZ1bCBzdGluZ3Mgb3IgYml0ZXMuIApJIGFtIGEgbmF0aXZlIEVuZ2xpc2ggc3BlYWtlciBsaXZpbmcgaW4gYSBub24gbmF0aXZlIEVuZ2xpc2ggc3BlYWtpbmcgY291bnRyeS4gCkxpZnQgdGhlIHJhbWVraW4gb2ZmIHRoZSBwbGF0ZSwgYWxsb3dpbmcgdGhlIGN1c3RhcmQgdG8gc2xpZGUgb3V0LiAKVG9kYXksIGl0IGhhcyBleHBhbmRlZCB0byBvdmVyIDgwIGNvdW50cmllcywgbW9zdGx5IGxlYXN0IGRldmVsb3BlZCBhbmQgZGV2ZWxvcGluZyBlY29ub21pZXMsIGFzIEJlaWppbmcgc2Vla3MgdG8gYm9sc3RlciBpdHMgTWFkZSBpbiBDaGluYSAyMDI1IGluZHVzdHJpYWwgcG9saWN5LiBUaGUgbHVyZSBvZiB0aGUgQlJJIGlzIGF0dHJpYnV0ZWQgbGFyZ2VseSB0byB0aGUgaW5mb3JtYWwgbmF0dXJlIG9mIHRoZSBkZWFscyBCZWlqaW5nIG5lZ290aWF0ZXMgd2l0aCBwYXJ0bmVyIHN0YXRlcywgd2l0aCBhdHRyYWN0aXZlIGxvYW4gdGVybXMgYW5kIHNhbnMgcG9saXRpY2FsIHN0cmluZ3MuIFRoZWlyIG9wYXF1ZSBuYXR1cmUgaGFzIHNwdXJyZWQgY3JpdGljaXNtIHRoYXQgcmVjaXBpZW50cyByaXNrIGJlaW5nIHB1c2hlZCBpbnRvIGEgZGVidCB0cmFwLiAKSXRzIHdvcnRoIGEgdHJ5IHRvIGJyaW5nIHRoZW0gaWYgdGhhdCdzIHdoYXQgeW91J3JlIHdhbnRpbmcgdG8ga25vdy4gClZpY3RvcmlhbiBHb3RoaWMgQm9keSBIb3Jyb3JUaGUgU3RyYW5nZSBDYXNlIG9mIERyIEpla3lsbCBhbmQgTXIgSHlkZSBiZWdhbiBhbiBlcmEgd2hpY2ggc2F3IHRoZSBwZXJmZWN0aW9uIG9mIHRoZSBWaWN0b3JpYW4gZ290aGljIGJvZHkgaG9ycm9yIG5vdmVsLCB3aXRoIGEgc2ltaWxhciBhcnRpc3RpYyBtb3ZlbWVudCBrbm93biBhcyBGaW4gZGUgc2ljbGUgb3JpZ2luYXRpbmcgaW4gRnJhbmNlLiBTaW1pbGFyIHRoZW1lcyBhcmUgZm91bmQgaW4gT3NjYXIgV2lsZGUncyBUaGUgUGljdHVyZSBvZiBEb3JpYW4gR3JheSAoMTg5MSksIGluIHdoaWNoIGEgbWFuIGxlYWRzIGFuIGluY3JlYXNpbmdseSBkZWJhdWNoZWQgbGlmZXN0eWxlLCB3aXRoIHRoZSBjb25zZXF1ZW5jZXMgdHJhbnNmZXJyZWQgdG8gYSBwYWludGluZywgYW5kIFRoZSBJc2xhbmQgb2YgRG9jdG9yIE1vcmVhdSAoMTg5NikgYnkgSEcgV2VsbHMsIHdoZXJlIGEgZG9jdG9yIGNoYW5nZXMgYmVhc3RzIGludG8gbWVuLi4gCklzIHRoZXJlIGFueSBkZWJhdGUgdGhhdCBwaHlzaWNhbCBtb25vcG9saWVzIG9wcHJlc3MgY29uc3VtZXJzPyBJcyB0aGVyZSBhbnkgcXVlc3Rpb24gdGhhdCBzYWlkIG9wcHJlc3Npb24gYmVnaW5zIGJlZm9yZSBhYnNvbHV0ZSBtb25vcG9seSBpcyBhY2hpZXZlZD8gSXMgdGhlcmUgYW55IHF1ZXN0aW9uIHRoYXQgb2xpZ29wb2xpZXMgcmVzdWx0IGluIHRoZSBzYW1lIG5lZ2F0aXZlIGNvbnNlcXVlbmNlcyAoYWxiZWl0IHBvc3NpYmx5IHRvIGEgbGVzc2VyIGV4dGVudCk/ClRoZSBlbnRpcmUgcHJvcGVydHkgb2NjdXBpZXMgNjcgYWNyZXMgYW5kIHNldmVyYWwgb2YgdGhlIG1hbnNpb24gcm9vbXMgbWF5IGJlIHZpZXdlZCBhcyBwYXJ0IG9mIGEgQ2xhc3NpYyBNYW5zaW9uIFRvdXIsIGZyb20gQXByaWwgdGhyb3VnaCBTZXB0ZW1iZXIsIGluIGFkZGl0aW9uIHRvIGhvbGlkYXkgdG91cnMgZnJvbSBPY3RvYmVyIHRocm91Z2ggRGVjZW1iZXIsIGluIGFkZGl0aW9uIHRvIHNwZWNpYWx0eSB0b3VycyB0aGF0IGFyZSBoZWxkIG9uIHNlbGVjdCB3ZWVrZW5kcyBmcm9tIE1heSB0aHJvdWdoIFNlcHRlbWJlci4gTHluZGh1cnN0IGFsc28gaG9zdHMgYSBudW1iZXIgb2Ygc3BlY2lhbCBldmVudHMsIGluY2x1ZGluZyBpdHMgU3VtbWVyIEphenogQ29uY2VydHMgZnJvbSBKdWx5IDUgQXVndXN0IDIzIGFuZCBDcmFmdHMgYXQgTHluZGh1cnN0IGZlYXR1cmluZyBtb3JlIHRoYW4gMjc1IGFydGlzdHMgYW5kIGNyYWZ0c3Blb3BsZSBmcm9tIFNlcHRlbWJlciAxNCAxNi4uIApJdCBjZW50cmVzIG9uIHlvdW5nIHJvb2tpZSBEZXRlY3RpdmUgSmV0ZXIgKEJlYXUgTWlyY2hvZmYpLCB3aG9zZSByZWNlbnQgYnVzdCBoYXMgZWxldmF0ZWQgaGltIHRvIHRoZSByYW5rcyBvZiB0aGUgZWxpdGUgY29wcyAoUm9uIFBlcmxtYW4sIFRpdHVzIFdlbGxpdmVyLCBHaWFuY2FybG8gRXNwb3NpdG8sIFJvbiBFbGRhcmQgYW5kIENvcmV5IExhcmdlKSB3aG8gbWVldCBmb3IgYSB3ZWVrbHkgcG9rZXIgZ2FtZS4gQXQgaGlzIGZpcnN0IG5pZ2h0IHdpdGggdGhlbSwgZWFjaCByZWNvdW50cyBoaXMgbW9zdCBpY29uaWMgY2FzZSwgYW5kIGFmdGVyd2FyZHMgSmV0ZXIgc3RhZ2dlcnMgb3V0IGEgYml0IHRpcHN5LCBydW5uaW5nIGludG8gaGlzIHVuZGVyYWdlZCBnaXJsZnJpZW5kIEFteSAoSGFsc3RvbiBTYWdlKSB3aG8gaXMgYmVpbmcgbWVuYWNlZCBieSBhIG1hbiAoTWljaGFlbCBFa2x1bmQpIGluIGEgdGVycmlmeWluZyBtYXNrLiAKSXQgc29tZXRpbWVzIGEgbXVjaCBiZXR0ZXIgb3V0Y29tZSB0aGFuIGJlaW5nIGJyb3VnaHQgdG8gdGhlIEVSIGFuZCBiaWxsZWQgZm9yIGp1c3QgZm9yIGEgc2FsaW5lIGRyaXAgYW5kIG1vbml0b3JpbmcuSSBjdXJyZW50bHkgdHJ5aW5nIHRvIGxvc2UgZmF0IHdoaWxlIGdhaW5pbmcgbXVzY2xlLiBJIGJlZW4gZG9pbmcgdGhpcyBmb3IgYWJvdXQgOCBtb250aHMgc28gZmFyIGFuZCBsb3N0IGFib3V0IDQwIGxicyBvZiBmYXQgYW5kIGdhaW5lZCBhIGZhaXIgYW1vdW50IG9mIG11c2NsZSB0aHJvdWdob3V0LiBTbyBJIGtpbmQgb2YgZm91bmQgd2hhdCB0ZW5kcyB0byB3b3JrIGZvciBtZSB0byByZWFjaCBteSBnb2Fscy5Nb3JlIHRoYW4gb25lIHBlcnNvbiwgaW5jbHVkaW5nIG15IGZyaWVuZCB3aG8gaXMgYSBQVCwgaGFzIHN1Z2dlc3RlZCB0aGF0IEkgc3RvcCBvciBhdCBsZWFzdCByZWR1Y2UgbXkgY2FyZGlvIGJlY2F1c2UgaXQga2lsbGluIG0gb3IgZXZlbiB1c2luZyBtdXNjbGUgZm9yIGVuZXJneSBpbnN0ZWFkIG9mIGZhdC5JIDUgMTgwbGJzLiAKRm9yIHllYXJzLCB3ZSd2ZSBiZWVuIGhvbGRpbmcgcG9rZXIgdG91cm5hbWVudHMsIGdldCB0b2dldGhlcnMsIGFuZCBldmVuIGRhaWx5IGNvbnRlc3RzIGZvciBldmVyeW9uZSB0byBlbmpveS4gV2hpbGUgbWFueSBwZW9wbGUgd2lsbCB0YWxrIGFib3V0IHRoZSBsZWdhbGl0eSBpc3N1ZXMsIHdlIGRvIGl0IGJlY2F1c2Ugd2UgYm90aCB3b3JrIGZyb20gaG9tZSBhbmQgJDEgZnJvbSBlYWNoIGFudGUgZ29lcyB0byB2YXJpb3VzIGNoYXJpdGllcy4gSXQncyBmdW4sIHdlIGdldCB0byBoZWxwIG90aGVycywgYW5kIGl0IGNvbnN0YW50bHkga2VlcHMgdXMgYnVzeS4gSG93ZXZlciwgeW91J3JlIHN0aWxsIHByb2JhYmx5IHdvbmRlcmluZyB3aHkgd2UgY2hvc2UgdGhlIE1ldGFsIDggUm93IENhc2lubyBUYWJsZSBDaGlwIFRyYXkgd2l0aCBDb3ZlciBhbmQgTG9jay4KVGhlcmUgaXMgYSBmcmVlcm9sbCBydW5uaW5nIGFsbCB0aGUgdGltZSBvbiB0aGUgaW50ZXJuZXQuIEluIG1vc3Qgb2YgdGhlbSB0aGUgd2hvbGUgcHJpemVwb29sIGlzIGFyb3VuZCBvbmUgaHVuZHJlZCBkb2xsYXJzLiAKQWxzbywgdGhlIGpvYnMgdGhhdCB3ZSB3b3VsZCBub3Qgbm9ybWFsbHkgdGhpbmsgb2YsIGxpa2UgZG9jdG9ycywgbGF3eWVycywgbGVnYWwgcmVzZWFyY2hlcnMgdGhlIG1lY2hhbml6YWJsZSBwYXJ0cyBvZiB0aGVzZSBqb2JzIHdpbGwgZ28gdG8gQUkuLiAKRG9uJ3QgZ2l2ZSB5b3VyIHJlYWwgYWRkcmVzcy4gKEZ1bGwgQW5zd2VyKS4gClN1cHQuIApLbm93IHlvdXIgbGVhZ3VlIHJ1bGVzOiBFeGFtcGxlOiBMQUJSIGFuZCBUb3V0IFdhcnMgaGF2ZSB1bmxpbWl0ZWQgZGlzYWJsZWQgbGlzdHMuIApPciB0byBwdXQgaXQgbW9yZSBzaW1wbHk6ICJTd2l0Y2ggU2FsZXMgPiBTdGVhbSBzYWxlcyIgZG9lc24gbWVhbiAiU3dpdGNoIGV4cG9zdXJlID4gU3RlYW0gRXhwb3N1cmUiIG9yIHRoYXQgIkV4cG9zdXJlIGlzIHRoZSByZWFzb24gZm9yIGJldHRlciBzYWxlcyBvbiBTd2l0Y2giLiAKQWxzbywgSSByZWFsbHkgbG9va2luZyBmb3J3YXJkIHRvIHNlZWluZyB3aGF0IGNvbXBhbmllcyBsaWtlIEZvcmQsIFZvbGtzd2FnZW4sIENocnlzbGVyLCBldGMgYXJlIGdvaW5nIHRvIGRvIHdpdGggdGhlc2UgbXVsdGlwbGUgYmlsbGlvbiBkb2xsYXIgaW52ZXN0bWVudHMgaW4gRVZzIGFuZCBzb2Z0d2FyZS4gVGhlIGVsZWN0cmljIEYgMTUwIGNvdWxkIGJlIG1hc3NpdmVseSBwb3B1bGFyIGluIEFtZXJpY2EsIGFuZCB0aGF0IGp1c3Qgb25lIGV4YW1wbGUuIApJIGFtIGZhaXJseSBhZ3Jlc3NpdmUgaW4gdGhlIHdhdGVyLCBidXQgdmVyeSBmcmllbmRseS4gSSBnZXQgbWluZSB3aXRob3V0IGhvcGVmdWxseSBtYWtpbmcgdG9vIG1hbnkgZW5lbWllcy4gQ29tcGxpbWVudCBzb21lb25lIG9uIHRoZSB3YXZlIHRoZXkganVzdCBnb3QuIAoiUmVhbGx5LCByZWFsbHkgZXZpbCI/IFVudGlsIHNvbWVvbmUgY2FuIGdpdmUgbWUgYSBjbGVhciBtZXRyaWMgZm9yIGV2aWwsIEknbSBnb2luZyB0byBzdGljayB3aXRoIHRoZSBudW1iZXJzIGFzIHRoZSBiZXN0IHBlcnNwZWN0aXZlLiBTZXZlbiBtaWxsaW9uIG11cmRlcmVkIGlzIHdvcnNlIHRoYW4gc2l4IG1pbGxpb24gbXVyZGVyZWQsIGFuZCBnaXZlbiB0aGUgY2hvaWNlIGJldHdlZW4gdGhlIHR3byBJIHdvdWxkIGNob29zZSBzaXggbWlsbGlvbiB0byBiZSBtdXJkZXJlZC4gSHVtYW4gc3F1ZWFtaXNobmVzcyBpcyB3aGF0IG1ha2VzIHVzIHVuY29tZm9ydGFibGUgd2l0aCB0aGlzIGRlY2lzaW9uLiAKU2VlIGRvaW5nIGFjaWQgcHV0cyB5b3UgaW50byB0aGVzZSBsb29wcyB0aGF0IHlvdSBmZWVsIGxpa2UgeW91IGNhbid0IGNvbnRyb2wgYW5kIGl0IG1hZGUgbWUgdmVyeSBhbnhpb3VzIGF0IHNvbWUgcG9pbnRzIGJlY2F1c2UgSSBmZWx0IGxpa2UgSSB3YXMgZ29pbmcgdG8gYmUgdHJhcHBlZCBmb3JldmVyLi4gClNvIGV2ZXJ5b25lIHdhbnRlZCB0byBrbm93LCAiV2h5IE5pY2FyYWd1YT8iLiBPciwgY29udmVyc2VseSwgSSBoZWFyZCBhIGxvdCBvZiwgIkhvcGUgeW91IGNvbWUgYmFjayBhbGl2ZSIgb3IgIllvdSBjYW4gYm9ycm93IG15IEtldmxhciB2ZXN0Ii4gQXMgaXMgdXN1YWxseSB0aGUgY2FzZSwgdGhlIG1vcmUgd2FybmluZ3MgSSBnZXQgZnJvbSBBbWVyaWNhbnMsIHRoZSBjb3VudHJ5IGlzIHRoYXQgbXVjaCBuaWNlci9zYWZlci9mcmllbmRsaWVyIGV0Yy4gQW5kIHRydWUgdG8gZm9ybSwgTmljYXJhZ3VhbnMgd2VsY29tZWQgdXMgd2l0aCBvcGVuIGFybXMgYW5kIHdlcmUgbG92ZWx5IGFuZCBob25lc3QgcGVvcGxlLgpCdXQgU2NoZWNodGVyLCBhIFBva2Vyc3RhcnMgcGxheWVyLCBkaWQgbm90IHN0YXJ0IHRoZSBkYXkgd2VhcmluZyBhbnkgUG9rZXJzdGFycyBhcHBhcmVsIG9yIGxvZ29zLgpJIGF2b2lkIHRoZSBWZW5ldGlhbi4gSXQgYSBncmVhdCBwb2tlciByb29tIGJ1dCB0aGUgZ3V5IHdobyBvd25zIHRoZSBjYXNpbm8sIFNoZWxkb24gQWRlbHNvbiwgaXMgcHJldHR5IGV2aWwgYW5kIGRvZXNuIGRlc2VydmUgeW91ciBtb25leS4gClNvbWUgcGVvcGxlIGFyZSBleHRyZW1lbHkgdW5sdWNreSBsaWtlIG15c2VsZiBhbmQgdGhlIGJhY3RlcmlhIGNyb3NzZXMgdGhlIGJsb29kIGJyYWluIGJhcnJpZXIgYW5kIGVudGVycyB0aGUgQ05TIHdoaWNoIGNhdXNlcyBpbnRlbnNlIGNvbnN0YW50IHBhaW4sIHNvbWV0aW1lcyBwYXJhbHlzaXMsIGFuZCBkZWNyZWFzZXMgYnJhaW4gZnVuY3Rpb24uIApNb3N0IGdhbWVzIG9uIHRoZSBORVMgYXJlIGJvcmRlcmluZyB1bnBsYXlhYmxlIHRoZXNlIGRheXMsIGp1c3QgYmVjYXVzZSB0aGV5IHdlcmUgcHJpbWl0aXZlIG9yIGRlc2lnbmVkIHRvIGRyYWluIHBvY2tldHMgYW5kIHRpbWUuIApUaGV5IGFyZSBsaWtlIFQgUmV4OiBzdHVwaWQsIHBlcmhhcHMsIGJ1dCBiaWcsIG1lYW4sIGFuZCByZWFsbHkgcG93ZXJmdWwuIFRoZSBHT1AgY2Fubm90IGlnbm9yZSB0aGVtIGFueW1vcmUgdGhhbiBodW1hbnMgY291bGQgaGF2ZSBpZ25vcmVkIFQgUmV4LCBpZiBpbiBmYWN0IHdlIGhhZCBpbmhhYml0ZWQgdGhlIHBsYW5ldCBhdCB0aGUgc2FtZSB0aW1lLCB3aGljaCB3ZSBkaWRuIGxlYWRzIHVzIHRvIHRoZSByZWFsIGlkaW9jeTogdGhlIGlkZWEgdGhhdCBwb2xpdGljcyBjYW4gYmUgcnVuIGJ5IG1vbmV5IGFuZCBub3QgYmUgYSBjb25ncmVzcyBvZiBpZGlvdHMuIApJIHdhcyBzbyBmYXNjaW5hdGVkIGNsb3NlIHRoaXMgcHJlcGFyZSB0aGF0IEkgZm9yZ290IGFib3V0IG92ZXIgYW5kIG92ZXIgYWdhaW4sIG9uIHRvdWNoaW5nIGEgY29udmV5YW5jZSBibG9ja2FnZSAuIE1yLiBTbGlnaHRseSBzdXBlcmlvciB0byBiZWZvcmUgdW56aXBwZWQgdGhlIGRyZXNzIGFuZCBwdXQgaGlzIGhhbmQgb24gbXkgY2hlc3QuLiAKRG8gdGhlIHdvbWVuIHlvdSBnbyBvbiBkYXRlcyB3aXRoIGtub3cgeW91IG5ldmVyIGJlZW4gaW4gYSBMVFI/IE1heWJlIHRoYXQgaXMgYWxzbyBzb21ldGhpbmcgdGhhdCBpcyB0dXJuaW5nIHRoZW0gb2ZmLCBpbiB3aGljaCBjYXNlLCBwZXJoYXBzIHlvdSBjb3VsZCBiZSB2YWd1ZSBhYm91dCBpdC4gCkluIGdlbmVyYWwsIGFueXRoaW5nIHRoYXQgY2hhbmdlcyBkdXJpbmcgcHViZXJ0eSB0byBkaXNwbGF5IG1hdHVyaXR5IGFuZCBhYmlsaXR5IHRvIGJlYXIgY2hpbGRyZW4uIApXZSBib3RoIGZlbHQgbGlrZSB3ZSBjb3VsZCBmb3JjZSBlYWNoIG90aGVyIHRvIGdpdmUgdXAgc29tZXRoaW5nIHNvIGltcG9ydGFudCBhcyBpdCB3b3VsZCBiZSB1bmZhaXIuIEl0IHN1Y2tlZCBhdCB0aGUgdGltZSBidXQgc2luY2UgdGhlbiwgd2UndmUgYmVlbiBmaW5lIGFuZCBzdGlsbCBzdGF5ZWQgZnJpZW5kcyAoeWVzLCBzdHJpY3RseSBmcmllbmRzKS4uIApXaGlsZSBtb3N0IFRoYW5rc2dpdmluZyB0cmF2ZWxlcnMgd2lsbCBmaWdodCBmb3Igb3ZlcmhlYWQgYmlucyBhbmQgZ28gaG91cnMgd2l0aG91dCBhIHNuYWNrIG9yIHJvb20gdG8gc3RyZXRjaCB0aGVpciBsZWdzLCBsaWZlIGluIGZpcnN0IGNsYXNzIGlzIHN0cmVzcyBmcmVlLiAKVGhpcyBOZXR3b3JrIGlzIG5vdCBkaXJlY3RlZCB0byBhbnlvbmUgeW91bmdlciB0aGFuIDEzIGFuZCBpcyBvZmZlcmVkIG9ubHkgdG8gdXNlcnMgMTMgeWVhcnMgb2YgYWdlIG9yIG9sZGVyLiAKRHVzdCBvZmYgeW91ciBkYW5jaW5nIHNob2VzIGFuZCBnZXQgeW91ciBTYWxzYSBtb3ZlcyByZWFkeS4gClRoZSBwbGF5ZXJiYXNlIGFuZCB0b3RhbCBudW1iZXIgb2YgZW1wbG95ZWVzIGRvZXMgbm90IHNheSBhbnl0aGluZyBhYm91dCB0aGUgbnVtYmVyIG9mIHJlcG9ydHMgdGhleSBnZXQgcGVyIGRheSBvciB0aGUgbnVtYmVyIG9mIGVtcGxveWVlcyB0aGV5IGhhdmUgZm9yIGN1c3RvbWVyIHN1cHBvcnQuIFdpdGggeW91ciByZWFzb25pbmcsIGEgZ2FtZSB3aXRoIDQwayBwbGF5ZXJzIHNob3VsZCBvbmx5IG5lZWQgb25lIGVtcGxveWVlIHRvIGRvIGN1c3RvbWVyIHN1cHBvcnQvIGZpeCBidWdzLyByZWxlYXNlIG5ldyBjb250ZW50Ly4KRG8geW91L2NhbiB5b3UgZ2V0IHRoYXQgd2hpbGUgcHJlZ25hbnQgdG9vPyBJIGRvbiBrbm93IHRoZSBsYXN0IHRpbWUgSSBoYWQgYSBNTVIgc2hvdC4gClRoZSBnYW1lIGVuZHMgb25jZSBhIHBsYXllciByZWFjaGVzIG9yIGV4Y2VlZHMgYSBjZXJ0YWluIHNjb3JlLCBzdWNoIGFzIDI1IG9yIDUwIHBvaW50cy4KV2UgaGFkIHRvIHNlbmQgb2ZmIG91ciBzd2VldCBvbGQgZG9nIGFuZCBvdXIgc3dlZXQgb2xkIGNhdCBqdXN0IGEgZmV3IG1vbnRocyBhcGFydCBsYXN0IHllYXIuIEJvdGggd2VyZSBwb3B1bGFyIGF0IHRoZSB2ZXQgb2ZmaWNlLCB3aXRoIGFsbCBvZiB0aGUgdGVjaHMsIG51cnNlcywgYW5kIHRoZSBvdGhlciBkb2MgY29taW5nIGluIHRoZSByb29tIHRvIHZpc2l0IHdoZW4gZWl0aGVyIHdhcyB0aGVyZS4gT3VyIGxhc3QgdmlzaXRzIHdpdGggZWFjaCBvZiB0aGVtIHRoZXJlLCBhcyB0aGV5IHdlcmUgc2VudCBvbiBhIGtpbmRlciBwYXRoLCB3ZSBoYWQgdGhlIHRoZSB3aG9sZSBzdGFmZiBjb21pbmcgaW4gb25lIGJ5IG9uZSB0byBnaXZlIHRoZW0ga2lzc2VzIGFuZCBodWdzLCBtYW55IG9mIHRoZW0gY3J5aW5nLCBvbmUgb2YgdGhlbSBiYXdsaW5nLiBUaGUgY2FyZHMgd2UgcmVjZWl2ZWQgaW4gdGhlIG1haWwgYWZ0ZXJ3YXJkLCB3aXRoIHBlcnNvbmFsIG5vdGVzIGFuZCBsZXR0ZXJzIGZyb20gdGhlIHN0YWZmIG1lbWJlcnMsIHRoZXkgYXJlIHNvIHRyZWFzdXJlZCB0byB1cy4KRm91bmRlZCBpbiAxOTc2LCB0aGUgU290aGVieSBJbnRlcm5hdGlvbmFsIFJlYWx0eSBicmFuZCBpcyBhIHVuaXF1ZSBsdXh1cnkgbmV0d29yayBvZiBicm9rZXJhZ2UgYWdlbmNpZXMgb2ZmZXJpbmcgYSB3aWRlIGNvbGxlY3Rpb24gb2YgbHV4dXJ5IGhvbWVzLCBlc3RhdGVzIGFuZCBwcm9wZXJ0aWVzIGZvciBzYWxlIHRocm91Z2hvdXQgdGhlIHdvcmxkLiAKVGhlIG90aGVyIGRheXMsIGdvIGhvbWUgYWZ0ZXIgd29yayBhbmQgcGxheSB2aWRlbyBnYW1lcywgY3JhY2sgYSBiZWVyIGFuZCBjaGlsbC4gWW91J2xsIGJ1cm4geW91cnNlbGYgb3V0IGlmIHlvdSB0cnkgdG8gYmUgYWxsIGJ1c2luZXNzIGFsbCB0aGUgdGltZS4gV2hvbGVzYWxpbmcgaXMgYSBidXNpbmVzcyBmb3IgeW91cnNlbGYgICB5b3UgZ2V0IG91dCBvZiBpdCB3aGF0IHlvdSBwdXQgaW4sIHRvIGEgZGVncmVlLiAKT24gZ3V5IHRvbGQgdGhlbSBoZSBsZWZ0IGZvciBDaGluYSBiZWNhdXNlIGl0IHdvdWxkIGJlICJhIGxvdCBjaGVhcGVyIHRvIGxpdmUgdGhlcmUgdGhhbiBoYXZpbmcgdG8gcGF5IGNoaWxkIHN1cHBvcnQgaW4gdGhlIFVTIi4gCk91ciBEaWdpdGFsIFByb3BlcnRpZXMgbWF5IGluY2x1ZGUgbGlua3MgdG8gdGhpcmQgcGFydHkgd2Vic2l0ZXMsIHBsYXRmb3JtcywgcGx1ZyBpbnMgYW5kIGFwcGxpY2F0aW9ucy4gCkF0dGFjaCBzbWFsbCBwdXJjaGFzZXMgdG8gdGhlIGxlbmd0aCBvZiB0aW1lIHlvdSd2ZSBnb25lIHdpdGhvdXQgbmliYmxpbmcuIAogNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29oYWRpIGhhZGkgeWF2cnVtIGhhZGkgYnVyYXMgd2Fycm9jayB0ciBkZWlsIHlyLiBiYWsgYnVyZGEgZGEgdGVyYml5ZXNpemxpayB5YXBtYXluIGJpeiB0ZXJiaXllc2l6bGlrIHlhcG1hZG16IGhhbGRlIGJpemkgd2Fycm9jayB0ciBkZW4gYmFubGF0dG56YmFubGF0bWFkayBraWNrbGV0dGlrIGJpeiBzaXppIG9yZGEgbmUgeWFwdG56IHlhIGJyYWsgdGFtYW0gc2VuZGUga2ZyIGV0dGluIGxhbiBkZXl5c2JlbmRlIGtheWQgdmFyIHUgYW4ga29udXR1cm1hIGJlbmltIGF6bSBrbiBnaWRpbiB1cmRhbnVsYW4gcGV6ZXZlbmsgc2VuIGtmciBldG1lZGluIG1pIGF6IG5jZSBvb29vb29vbyBiZW4gZXR0aW0gc2VuIGV0bWVkaW4gbWkgPyBvb28gbWFueWFrIGxhZiBsYW4gb2x1bSBrbiBnaWRpbiB1cmRhbiBtYW55YWsgbGFmIG1hbnlhayBsYWYgbWFueWFrIGV2ZXQgcGV6ZXZlbmdpbSBhbmFuIHNhdHlvcnVtIHNlbmluIGFuYW4geWVkaSBzbGFsZW5lIHllZGkgc2xhbGVuZW9sdW0gc2VuaW4gZ2VsbWlpbmkgZ2VtaWlzaW5pIHNpa2VyaW0gYmFrIHRiZSB5YXJhcHBpIHlhcmFzcmFsbGFoIGxhbiBvbG0ga24gZ2lkaW4gdXJkYW4gYmFrIGFoaW4sIGFoaW4gYmVuaW0gYXptIGJvem1heW4gb2x1bSBhaGluIHNpa3NpbiBzZW5pIGhhZGkga24gZ2lkaW4gdXJkYW4gL2NhcHNsb2NrLyBzZW5pbiBhbmFuIGF2cmFkbiBzaWtlcmltIG9yb3NwdWNvY3V1IGtnaXRsYW4gYW5hbm4ga2xsIGFtbiBzaWtlcmltIHNpa3RpcmdpdCAvY2Fwc2xvY2svIGtteW9tIGFtbmEga29kdXVtdW4gb2x1LiAKUGV0ZXJtYW4gYW5kIE1ycy4gCk15IHVuZGVyc3RhbmRpbmcgb2YgcGFnZSA5IG9mIHBhcGVyIEkgcG9zdGVkIHdhcyB0aGF0IHRoZSBsb2cgcG9zdGVyaW9yIHN1cmZhY2Ugd2FzIGJlaW5nIGV4cGxvcmVkIHJhdGhlciB0aGFuIHRoZSBwb3N0ZXJpb3Igc3VyZmFjZS4gV2hlbiB5b3UgZmluZCB0aGUgcG9zdGVyaW9yIGZvciB0aGlzIHByb2JsZW0gYnkgdGhlIGdyaWQgYXBwcm94aW1hdGlvbiB3ZSBhcmUgbGVmdCB3aXRoIGp1c3QgYSBzaW5nbGUgbmFycm93IHBlYWsgcmF0aGVyIHRoYW4gcmlwcGxlcyB0aGF0IGFwcGVhciBpbiB0aGUgbG9nIHBvc3RlcmlvciBzdXJmYWNlIGFzIHByZXNlbnRlZC4KRWFjaCBjb3VudHJ5J3MgZmlyc3QgZm91ciBwbGF5ZXJzIGhhdmUgYmVlbiByZWxlYXNlZCwgd2l0aCBhIGZpZnRoICJ3aWxkY2FyZCIgc3BvdCB0byBiZSBmaWxsZWQgaW4gdGhlIG5lYXIgZnV0dXJlLiAKTm93IHRoYXQgd2UgaGF2ZSBkaXNjdXNzZWQgcG90IG9kZHMsIGl0IGlzIHRpbWUgdG8gc2VlIGhvdyBtdWNoIHlvdSBoYXZlIGxlYXJuZWQuIEluIHRoZSBuZXh0IHNlY3Rpb24sIHlvdSB3aWxsIGJlIHByZXNlbnRlZCB3aXRoIHRocmVlIGhhbmRzIGFuZCBhc2tlZCB0byBjYWxjdWxhdGUgeW91ciBvd24gcG90IG9kZHMuClNvIHdoYXQga29yZWFuIGFkdWx0cyBhY3QgbGlrZSBraWRzIElOIFdFU1RFUk4gUE9WLiAKVG8ga2VlcCBhIHZlcnkgbG9uZyBzdG9yeSBzaG9ydCwgYW4gaW5mZWN0aW9uIGF0dGFjaGVkIGl0c2VsZiB2ZXJ5IGRlZXBseSBhbmQgYWdncmVzc2l2ZWx5IHRvIHRoZSBoYXJkd2FyZSBpbiBteSBzcGluZS4gCldpciBiZXJlaXRzIGRpZXNlIFdpc3NlbnNjaGFmdCBnZXRhbiBnbGVpY2h3b2hsIHZlcmJyaW5nZW4gdmllbCBaZWl0IGZyIFNpZSBwZXJzbmxpY2guCkdyYWR1YWxseSwgYnV0IHN1cmVseS4gCkluIHRoZSAxOXRoIGNlbnR1cnksIHRoZSBNYXJjaCBvZiBpbmR1c3RyaWFsaXphdGlvbiBhbmQgZXhwbG9pdGF0aW9uIG9mIHJlc291cmNlcyB3YXMgbGl0ZXJhbGx5IGNvZGlmaWVkIGludG8gYSBub3Rpb24gb2YgIk1hbmlmZXN0IERlc3RpbnkiIGluIEFtZXJpY2EuCkluIGFueSBjYXNlIHdoYXQgZXZlcnlvbmUgc2hvdWxkIHdhdGNoIG91dCBmb3IgaXMgU2NhbSBlbWFpbHMgYW5kIG1lc3NhZ2VzIGluIGZhY2Vib29rIHdoZXJlIHlvdSBhcmUgc3Vwb3NlIHRvIGJlIGF3YXJkZWQgb3IgYmFuZWQgZm9yIGFueSByZWFzb24sIGFuZCB5b3UgYXJlIGFza2VkIHRvIGNsaWNrIGEgbGluayB0byB2ZXJpZnkgeW91ciBhY2NvdW50LCB3aGVyZSB5b3Ugd291bGQgbmVlZCB0byBsb2dpbiBvZiBjb3Vyc2U7IHdoZW4geW91IGxvZ2luIHRvIHRoYXQgbGluayB5b3UgZG9uJ3QgYWN0dWFsbHkgdmVyaWZ5IGFueXRoaW5nIHlvdSBqdXN0IGdpdmUgb3V0IHlvdXIgcGFzc3dvcmQgYW5kIGFjY291bnQgdG8gc29tZSBoYWNrZXJzLiBUaGUgd2Vic2l0ZSBtYXkgbG9vayB2ZXJ5IHdlbGwgbGlrZSBmYWNlYm9vayBvciBhbnkgb3RoZXIga2luZCBvZiBzZWN1cml0eSBpbnZlbnRlZCB3ZXNiaXRlLiAKSWYgd2UgZHJhdyBhIHRyaWFuZ2xlIHRvIGRlY29tcG9zZSB0aGUgZm9yY2UsIHdlIHdpbGwgc2VlIHRoYXQgaXQganVzdCBtYWtlcyBhIDMwLzYwLzkwIHRyaWFuZ2xlLiBUaHVzLCB0aGUgeSBjb21wb25lbnQgb2YgdGhlIGZvcmNlIGlzIHNxcnQoMikvMiBvZiB0aGUgb3JpZ2luYWwgZm9yY2UuIFNpbmNlIHRoZXJlIGFyZSB0d28gb2YgdGhlc2UgeSBjb21wb25lbnRzIGFkZGVkIHRvZ2V0aGVyLCB3ZSBjYW4gc2F5IHRoYXQgdGhlIHRvdGFsIGZvcmNlIGlzCldpdGggaXRzIHN0YWluZWQgZ2xhc3Mgd2luZG93cyAgbWFkZSBieSBSZWVwaGFtIGJhc2VkIElhbiBQb2NrbGluZ3RvbiAgIG9uIHRoZSB3YXksIGFuZCBhIGNvc3kgaW50ZXJpb3IgZGVjb3IsIE5pZ2VsIGlzIGZpdHRpbmcgdGhlIHdhZ2dvbiBvdXQgd2l0aCBhIHdhc2hzdGFuZCwgY2FycGV0LCBkb3VibGUgYmVkIGFuZCBob21lIGZvcmdlZCBpcm9ud29yayBmZWF0dXJlcyBzdWNoIGFzIGN1cnRhaW4gcG9sZXMsIHRvYXN0aW5nIGZvcmtzIGFuZCBib29rIHJlc3RzLiBCdXQgcHJvYmFibHkgbm90IGVsZWN0cmljYWwgbW9kIGNvbnMuLiAKRHVyaW5nIHRoZSBkYXkgYSAkMTAgdGFibGUgc2hvdWxkIGJlIHJ1bm5pbmcuIEJ1c2llciB0aW1lcyB5b3UgbWF5IHNlZSBhICQxMCwgJDE1LCBhbmQgJDI1IGFjdGlvbiBydW5uaW5nLgpTZWVpbmcgdGhvc2Ugd29yZHMgc2NhcmVzIG1lLiBHb3QgZGlhZ25vc2VkIEguIFB5bG9yaSBiYWNrIGluIEphbnVhcnksIHdhcyBvbiBhIDE0IGRheSB0cmlwbGUgYW50aWJpb3RpYyBwcmV2IHBhYywgaWUuIApIaXN0b3JpY2FsIGZhc2hpb24uIApHZXQgcmlkIG9mIHlvdXIgY3JlZGl0IGNhcmRzLCBsZXQgc29tZW9uZSBlbHNlIGJlIGluIGNoYXJnZSBvZiB5b3VyIG1vbmV5LCBoYXZlIHRoZSBiYW5rIG1ha2UgYXV0b21hdGljIHBheW1lbnRzIGZvciB5b3UsIGNsb3NlIG9ubGluZSBiZXR0aW5nIGFjY291bnRzLCBhbmQga2VlcCBvbmx5IGEgbGltaXRlZCBhbW91bnQgb2YgY2FzaCBvbiB5b3UuVGltZTogRXZlbiBvbmxpbmUgZ2FtYmxpbmcgY2Fubm90IG9jY3VyIGlmIHlvdSBkb24gaGF2ZSB0aGUgdGltZS4gCk1vdmUgeW91ciBmaW5nZXJzIGFyb3VuZCB0aGUgdG9wIG9mIGhlciBoYW5kLCB0cnlpbmcgdG8gbWFzc2FnZSBldmVyeSBhcmVhLiAKSWYgdGhlIHRocmVhZHMgb24geW91ciBiYXJyZWwgYXJlIG5vdCBjb25jZW50cmljLCB5b3UnbGwgaGF2ZSB0byBnZXQgdGhlIGJhcnJlbCBjdXQgcmV0aHJlYWRlZCwgdGhlbiBoYXZlIHRoZSBEQSBrZXltbyBmbGFzaCBoaWRlciBwaW5uZWQgd2VsZGVkLiBBbHNvIHNlcmlvdXNseSBjb25zaWRlciBnZXR0aW5nIGEgS05TIGFkanVzdGFibGUgZ2FzIHBpc3RvbiBmb3IgdGhlIFdBU1IuIEl0IG1ha2VzIGEgZGlmZmVyZW5jZSB1bnN1cHByZXNzZWQsIGFuZCBpdCdzIGh1Z2UgZm9yIHNob290aW5nIHN1cHByZXNzZWQuIApHb29kIEh1bnRpbmchLiAKQW55IGZvcm0gb2YgZ2FtYmxpbmcsIHlvdSBuZWVkIGEgc3Ryb25nIHN0b21hY2ggYW5kIHlvdSBuZWVkIHRvIGhhdmUgYSB2ZXJ5IGNvb2wgaGVhZCBhYm91dCB0aGUgdXBzIGFuZCBkb3duLCBoZSBzYWlkLiBUaGlzIGd1eSB3YXMgYSBtaWxsaW9uYWlyZSwgaXQgcXVpdGUgcG9zc2libGUgaGUgd2FzIG5vdCBib3RoZXJlZCBieSB0aGUgdXBzIGFuZCBkb3duLiBIZSBwcm9iYWJseSBoYWQgc3RlZWwgbmVydmVzIGFuZCB3YXMgYSBkaWZmaWN1bHQgcGVyc29uIHRvIG1vdmUgZW1vdGlvbmFsbHkuIApJZiB5b3UgcGxheSBhZ2FpbnN0IHRoZSBzYW1lIG9wcG9uZW50cyByZWd1bGFybHkgdGhlbiB5b3UgcHJvYmFibHkga25vdyB0aGVpciB0ZWxscyBhbmQgdGhlIHdheSB0aGV5IHBsYXkuIEFuZCBhcyBhIHJlc3VsdCwgeW91ciBnYW1lIGlzIGRpZmZlcmVudCB0byB0aGUgd2F5IHlvdSB3b3VsZCBwbGF5LCBzYXkgZm9yIGV4YW1wbGUsIGluIGEgY2FzaW5vIGFnYWluc3Qgc3RyYW5nZXJzLiBSZWFkaW5nIHlvdXIgb3Bwb25lbnRzIGlzIGFjdHVhbGx5IGEgc2tpbGwgdGhhdCBub3QgYWxsIG9mIHVzIGNhbiBtYXN0ZXIuIApJbiBtYWtpbmcgbW9kZXJuIGNoaXBzLCBhIGxhcmdlIGRvcGVkIGNyeXN0YWwgb2Ygc2lsaWNvbiBhYm91dCA0IGZlZXQgbG9uZyBhbmQgYSBmb290IGluIGRpYW1ldGVyIGlzIGdyb3duLCB0aGVuIHNsaWNlZCB3aXRoIGRpYW1vbmQgc2F3cyBpbnRvIDEgZm9vdCBkaWFtZXRlciAwLjUgbW0gdGhpY2sgd2FmZXJzLiBVc2luZyBhIHByb2Nlc3Mgb2YgcGhvdG9saXRob2dyYXBoeSBhcmVhcyBhcmUgbWFya2VkIG9mZiBmb3IgY2hhbmdpbmcgZG9waW5nLCBpbnN1bGF0aW5nLCBvciBtZXRhbGxpemluZy4gQXMgbWFueSBhcyAzIGRvemVuIHBob3RvbGl0aG9ncmFwaGljIHN0ZXBzIG1heSBiZSBuZWVkZWQgdG8gcHJvZHVjZSBhIGNpcmN1aXQuIApCZXR0eSBhbmQgSmltJ3MgTmV3IFllYXIncyBFdmUgcGFydGllcyB3ZXJlIGZhbW91cyBmb3IgdGhlaXIgbGFyZ2UgYXR0ZW5kYW5jZSBhbmQgU2NvdHRpc2ggZGFuY2luZy4gCkZpcnN0IG9mZiwgYSBzdHVkZW50IGlzIGdlbmVyYWxseSBub3QgZW5jb3VyYWdlZCB0byB0YWtlIGFuIGludGVybnNoaXAgdGhlaXIgZnJlc2htYW4geWVhci4gCkNhcm9seW4gQ3JhbmtzaGF3LCBtb3RoZXIgb2YgRGFycmlvbiBNb2ZmYXQsIGFuIDE4IHllYXIgb2xkIHNob3QgdG8gZGVhdGggaW4gU2VwdGVtYmVyLCBpcyBwaWN0dXJlZCBGcmlkYXksIE5vdmVtYmVyIDksIDIwMTguClRoZXJlIGEgcmVmZXJlbmNlIHRvIHRoZSBCZXJnZ2Vpc3QgaW4gdGhlIDE5ODAgZWRpdGlvbiBvZiBUaGUgR2VybWFuIExlZ2VuZHMgb2YgdGhlIEJyb3RoZXJzIEdyaW1tLCB2b2wgSSwgcGFnZSAzMTcuIFdlIHNlZSB0aGF0IHRoZSBCZW56IGNhcnMgYW5kIGFpcmNyYWZ0IGFyZSBtYWtpbmcgdGhlaXIgd2F5cyBlYXNpbHkgYXJvdW5kIHRoZSBNb3VudGFpbiBTcGlyaXQsIHdobyBhdCB0aW1lcyBpcyBkZXBpY3RlZCBhcyBhIGRpZmZpY3VsdCBhbmQgY29udGVudGlvdXMgZW50aXR5LiAKVGhlc2Ugc2VydmljZXMgd2lsbCBzZXQgeW91IGFwYXJ0IGZyb20gb3RoZXIgc3BhIGhvdXNlcy4gCkF0IHRoZSB0aW1lIENyIFNhbGliYSBzYWlkIHdoaWxlIGEgcHJpdmF0ZSBvcGVyYXRvciBvZiB0aGUgZ29sZiBjb3Vyc2UgY291bGQgaGF2ZSB0aGVtLCBpdCB3b3VsZCBiZSAnJ2lycmVzcG9uc2libGUnJyBmb3IgdGhlIGNvdW5jaWwgdG8gZG8gc28uIApUaGV5IHJlYWxseSBxdWl0ZSBwb3dlcmZ1bCBhbmQgdGhlIGJlc3QgcGFydCBpcyB0aGF0IHRoZXkgYXJlIGxhbmd1YWdlIGFnbm9zdGljLCBzbyB5b3VyIHdvcmtmbG93IGRvZXNuIGhhdmUgdG8gY2hhbmdlIGJldHdlZW4gbGFuZ3VhZ2VzLi4gClJpZGVycyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBldmVudGFkZGVkIHRoYXQgdGhlIGZlbGxvd3NoaXAgYW5kIHdvbmRlcmZ1bCBwZW9wbGUgeW91IGNhbiBtZWV0IHdoaWxlIGJpa2luZyBmb3IgYWdvb2QgY2F1c2UgaXMgYWx3YXlzIGEgcGx1cy4uIApGYW1vdXMgImFjdGl2aXN0IGludmVzdG9yLiI0Ny4gRXJpYyBTY2htaWR0LCQ5LjQgYmlsbGlvbi4gCkhlIGlzIHRoZSBlbGRlciBzdGF0ZXNtYW4gb2YgdGhlIHBva2VyIHdvcmxkLCBhIGZhdGhlciBmaWd1cmUgdG8gdGhlIGdhbWUgd2hvIGhhcyB3aXRuZXNzZWQgZmlyc3RoYW5kIHRoZSBzdGFnZ2VyaW5nIHRyYW5zZm9ybWF0aW9uIHRoYXQgcG9rZXIgaGFzIHVuZGVyZ29uZSBpbiB0aGUgbGFzdCBzaXh0eSB5ZWFycy4gTm93IGluIGhpcyBsYXRlIHNldmVudGllcywgRG95bGUgcmVtYWlucyBjb21wZXRpdGl2ZSBpbiB0aGUgYmlnZ2VzdCBjYXNoIGdhbWVzIGFuZCB0b3VybmFtZW50cyBpbiBMYXMgVmVnYXMuIApTbGVlcHl0aW1lIEdvcmlsbGEgTXVzZXVtICAgT2YgTmF0dXJhbCBIaXN0b3J5OiBJIHVzZWQgdG8gaGF2ZSB0aGlzIGFsYnVtIHllYXJzIGFnbywgc29sZCBpdCB0byBhIGZyaWVuZCwgd2hvIHRoZW4gc29sZCBpdCB0byBteSBjb3VzaW5nIHdobyBzb2xkIGl0IGJhY2sgdG8gbWUgbGFzdCB3ZWVrLiAKV2hpbGUgaXQgaGFyZCB0byBhcmd1ZSB3aXRoIHlvdSBhdCB0aGlzIHBvaW50LCBJIHN0aWxsIGFtIGhvbGRpbmcgb3V0IGhvcGUuIEkgcmVhbGx5IGZlZWwgdGhhdCBoZSBpcyBpbiBoaXMgaGVhZCByaWdodCBub3cuIEkgZG9uIGtub3cgaWYgaXQgaXMgTGVCcm9uIGJlaW5nIHRoZXJlIG9yIGlmIHRoZXJlIGlzIHNvbWV0aGluZyBpbiBoaXMgcGVyc29uYWwgbGlmZSBjb250cmlidXRpbmcgdG8gaGlzIHRoaW5raW5nLCBidXQgaGUgaGFzIG5vIGNvbmZpZGVuY2UgcmlnaHQgbm93LiAKSSB3YXMgb3JpZ2luYWxseSBpbiByb3cgMyAoZmlyc3QgY2xhc3MpIGJ1dCB0aGV5IHN3aXRjaGVkIG1lIHRvIHJvdyAyMiB3aXRoIFdlbmRpLiAKT3ZlcnZpZXcgZm9yIFp6U2h5Ckkgd2FzIG9uIGEgMTAgaG91ciBidXMgcmlkZSBmcm9tIEFtc3RlcmRhbSB0byBCZXJsaW4gYW5kIG91ciByZXN0IHN0b3Agd2FzIGluIEdlcm1hbnksIGZvcmdldCBleGFjdGx5IHdoZXJlIHRob3VnaC4gSSB3YXMgdGlyZWQgYW5kIHRoaXJzdHkgYW5kIGNhcmVsZXNzbHkgYm91Z2h0IGEgYmlnIGJvdHRsZSBvZiB3YXRlci4gCkFuZCB0aGUgd2hvbGUgIkEgbGF3ID0vPSBwb3dlciBnaXZlbiB0byBhIGdyb3VwIHRvIGNvbnRyb2wgdGhlIHN5c3RlbS4iIEp1c3QgZG9lc24gcGFyc2UgZm9yIG1lLiAKVGhhdCBpc24gcmVtb3RlbHkgdHJ1ZS4gClRyZW5kcyBpbiB0aGUgbWFya2V0IHBsYWNlIGFsc28gc2hvdyBtb3JlIGFuZCBtb3JlIHBlb3BsZSBvcHQgZm9yIHRoZSBhdXRvbWF0aWMuLiAKT25lIG9mIHRoZSBvbGRlc3QgcmVtYWluaW5nIGJ1aWxkaW5nIHN0cnVjdHVyZXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgdGhhdCB3YXMgbWFkZSBmcm9tIHRoZXNlIHRpbiB0aWxlcy4gClBvaW50IGlzIG5vdCB0b28gdGhpbmsgdG9vIG11Y2guIEtub3cgc29tZSBiYXNpYyBmb29kcyB5b3Ugc2hvdWxkIGNvbnN1bWUgbW9yZSBhbmQgdGhhdHMgaXQuIApVbmNyZWRpdGVkIGlkZWEgaW4gdGhlIEZsb3dlcnMgYXJ0aWNsZSBjYWxsZWQgZm9yIGEgYSBzZXJpZXMgb2YgY29ubmVjdGVkIG1lY2hhbmlzbXMgaG9sZGluZyB3aGl0ZSBzaGVldHMgb3ZlciBhIDIwMCB4IDEwIG1pbGUgKCEpIHNlY3Rpb24gb2YgRmVkZXJhbCBkZXNlcnQgbGFuZHMsIHRoZSBtb3ZlbWVudHMgb2YgdGhlIHNoZWV0cyBjb25kdWN0ZWQgYnkgNjAwIGxhcmdlIG1vdG9ycywgbWFraW5nIHVzZSBvZiB0aGUgc2VnbWVudGVkIHNoZWV0cyB0byBzZW5kIG1lc3NhZ2VzIHZpYSBNb3JzZSBjb2RlLiAKV2hlbiBpdCBjb21lcyB0byBvbmxpbmUgZ2FtZXMsIHByYWN0aWNhbGx5IGV2ZXJ5b25lIGlzIGdvaW5nIGNyYXp5LiBPdmVyIDY0JSBvZiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uIGFyZSBnYW1lcnMgaW4gdGhlIFVTLiAKVGhlIHJlc3VsdCBpcyB0aGUgZHVjdGluZyBwbHVnczsgdGhlIGV4aGF1c3Qgc2F0dXJhdGVzIHRoZSBsaW50IHRyYXBwZWQgaW4gdGhlIGR1Y3QsIHRoZSBkdWN0cyBsZWFrIGFuZCB0aGUgY2VpbGluZ3MgaW4gb3VyIHVuaXRzIGFyZSBhbGwgYmVpbmcgZGFtYWdlZC4uIApTbyB0aGUgaWRlYSB3YXMgc3BhcmtlZC4gClRoYXQgcmVhbGx5IGFncmVlcyB3aXRoIHRoZSBnaXN0IG9mIGEgbG90IG9mIHRoZSByZXNlYXJjaCB0aGF0IHdlIGhhdmUgZG9uZS4uIApNYXRhIGxvb2tlZCBhIGRpZmZlcmVudCBwbGF5ZXIgYXQgdGVuLiBXYXMgZmFudGFzdGljLCBnYXRoZXJpbmcgdGhlIGJhbGwgcXVpY2tseSwga2VlcGluZyBob2xkIG9mIGl0IHVuZGVyIHByZXNzdXJlLCBleGNlbGxlbnQgcGFzc2luZy4gQSBsb3Qgb2YgcGVvcGxlIGhlcmUgd2VyZSBzYXlpbmcgaGUgd2FzIHdhc3RlZCBvdXQgcmlnaHQgYW5kIGhlIGp1c3QgY29uZmlybWVkIHRoYXQgdG9uaWdodC4gClZveWV6IGwnYXV0aXNtZSwgb24gbHVpIGFzc2lnbmUgMzYgY2F1c2VzLCBsYSBwb3Jvc2l0IGludGVzdGluYWxlIGV0IGxlIGdsdXRlbiwgbGVzIHZhY2NpbnMgIGwnYWx1bWluaXVtLCBwb3VyIGQnYXV0cmVzIGNlIHNvbnQgbGVzIHBlc3RpY2lkZXMsIGRhbnMgY2VydGFpbnMgY2FzIGlsIGV4aXN0ZSB1bmUgY2F1c2UgaW5mZWN0aWV1c2UgZXQgaidlbiBwYXNzZS5MZW9uIHRpcmVzIGRlIGNvbnRhY3RzIHBhciBtYWlsIGV0IChwbHVzIHJhcmVtZW50KSBwYXIgdGxwaG9uZUEgc3VwcG9zZXIgcXVlIGplIG1lIG1ldHRlICBkb25uZXIgZGVzIGNvbnN1bHRhdGlvbnMsIGplIHNhaXMgcXUnaWwgbWUgZmF1ZHJhaXQgZCdhYm9yZCBwYXNzZXIgdW5lIGhldXJlIGF1IG1vaW5zIHZvaXJlIHVuZSBoZXVyZSBldCBkZW1pZSAgbCdjb3V0ZXIgcmFjb250ZXIgc29uIGhpc3RvaXJlLiBVbmUgaGlzdG9pcmUgZmFpdGUgZCdlcnJhbmNlcyBiYXNlcyBzdXIgZGVzIGlkZXMgcHJjb251ZXMgZXQgc2ltcGxpc3RlcyBycGFuZHVlcyBwYXIgbGVzIG1lcmRpYXMgZGUgdG91dGVzIHNvcnRlIChyZXZ1ZXMgZm1pbmluZXMgZW4gdHRlKSBhdmFudCBkJ2FjY3JvY2hlciB1biBkdGFpbCBzaWduaWZpY2F0aWYsIGRlcnJpcmUgdG91dCBjZSAiZm9pbiIsIGR0YWlsIHN1c2NlcHRpYmxlIGRlIG0nZW5nYWdlciBub24gcGFzIGZvcmNtZW50IHN1ciBsYSBib25uZSBwaXN0ZSBtYWlzIHN1ciBsYSBtb2lucyBtYXV2YWlzZS5KZSB2b2lzIGJpZW4gY29tbWVudCBhIGNlIHBhc3NlIHF1YW5kLCBwYXIgdGxwaG9uZSwgamUgdmllbnMgIG0naW50cmVzc2VyICB1biBjYXMgcG91ciBlc3NheWVyIGRlIGxlIGRicm91aWxsZXIuIEplIG4naW1hZ2luZSBwYXMgZCdhcnJvbmRpciBtZXMgZmlucyBkZSBtb2lzIGRlIG1vZGVzdGUgcmV0cmFpdCBhdmVjIGNldHRlIHByYXRpcXVlIGVuIGNhYmluZXQgZGFucyBsYSBtZXN1cmUgbyBpbCBtZSBmYXVkcmFpdCB1c2VyIDkwJSBkZSBtb24gbmVyZ2llICBuZXV0cmFsaXNlciBkZXMgaWRlcyBwcmNvbnVlcy4gCklNTyBpdCBpcyBhIGRhbmdlcm91c2x5IHJhZGljYWwgcG9saXRpY2FsIGRldmljZSB0aGF0IHJlYWRzIGxpa2UgYSBwcm9ncmVzc2l2ZXMgd2lzaCBsaXN0LiBJdCBsdW1wcyB0aGUgb2JqZWN0aXZlcyBvZiBjbGltYXRlIGNoYW5nZSB3aXRoIG90aGVyIGFnZW5kYXMgbGlrZSBndWFyYW50ZWVkIHdhZ2VzIGZvciBldmVyeW9uZSwgdW5pb24gcmlnaHRzLCB0aGUgZ2VuZGVyIHdhZ2UgZ2FwLCByYWNpc20sIHByb3RlY3RpbmcgY29tbXVuaXRpZXMgb2YgY29sb3IuIEl0J3Mgbm90IHRoYXQgSSBkb24ndCBhZ3JlZSB3aXRoIHRob3NlIHRoaW5ncyBhbmQgd2FudCB0aGVtIHRvbywgYnV0IEkgdGhpbmsgaXQgaXMgZGFuZ2Vyb3VzIHRvIHRpZSB0aGVtIHRvZ2V0aGVyIGxpa2UgdGhpcyBiZWNhdXNlIHlvdSBwb2xpdGljaXplIGNsaW1hdGUgY2hhbmdlIGFuZCB5b3UgYWxpZW5hdGUgdGhlIHJpZ2h0IGFuZCBtb2RlcmF0ZSBwb2xpdGljaWFucy4gClNvIEkgZ3Vlc3MgSSBrbm93IG9mIEdyZWVuIExhbnRlcm4gYnV0IG5vdCByZWFsbHkgYW55dGhpbmcgb3RoZXIgdGhhbiBoZSBleGlzdHMuRXZlbiB0aGUgcm9ib3QgZ3V5IGZyb20gSnVzdGljZSBMZWFndWUgSSBkaWRuIHJlYWxseSBrbm93LkplbmtpbnNkMDggIDEzIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvSXQgYSBncmVhdCBmZWVsaW5nIGZvciBzdXJlLiBTb21lIG9mIG91ciBpbXByb3ZlZCBwbGF5IChsaWtlIFJlZ2dpZSBoZWFsdGggYW5kIEdhbGxvd2F5IGltcHJvdmVkIHNob290aW5nKSBmZWVscyBsaWtlIGl0IG9uIHNoYWt5IGdyb3VuZDsgYnV0IG90aGVyIHBhcnRzIGxpa2UgVGhvbiBlZmZpY2FjeSBmcm9tIGRlZXAsIEx1a2UgbW9yZSBhc3NlcnRpdmUgcGxheSwgYW5kIEJyb3duIGltcHJvdmVkIHZpc2lvbiBhbmQgcGxheW1ha2luZyBhcmUganVzdCBwdXJlIGpveSB0byBzZWUuIApTdWdhciBpbiBhbnkgZm9ybSBvciByZWZpbmVkIGNhcmJvaHlkcmF0ZXMgKHdoaXRlIGZvb2QpIGRyaXZlcyB0aGUgZ29vZCBjaG9sZXN0ZXJvbCBkb3duLCBjYXVzZSB0cmlnbHljZXJpZGVzIHRvIGdvIHVwLCBjcmVhdGVzIHNtYWxsIGRhbWFnaW5nIGNob2xlc3Rlcm9sIHBhcnRpY2xlcywgYW5kIGNhdXNlcyBtZXRhYm9saWMgc3luZHJvbWUgb3IgcHJlIGRpYWJldGVzLiAKTHVvbmdvIGZpbmlzaGVkIGluIDYzNHRoIHBvc2l0aW9uIGluIHRoZSBNYWluIEV2ZW50IGF0IHRoZSA0M3JkIFdvcmxkIFNlcmllcyBvZiBQb2tlciBpbiAyMDEyLiBBbHRob3VnaCBmaW5pc2hpbmcgaW4gdGhlIDYwMCdzIG1heSBub3Qgc291bmQgbGlrZSBhIG1ham9yIGFjY29tcGxpc2htZW50LCB0aGUgZmFjdCB0aGF0IEx1b25nbyBtYW5hZ2VkIHRvIG91dGxhc3QganVzdCB1bmRlciA2LDAwMCBwbGF5ZXJzIGF0IGEgdG91cm5hbWVudCB3aGVyZSB0b3AgYW1hdGV1cnMgY2hhbGxlbmdlIHRoZSBiZXN0IHBva2VyIHBsYXllcnMgb24gdGhlIHBsYW5ldCwgQm9iYnkgTG91IHNob3VsZCBiZSBwcm91ZCBvZiBoaXMgYWNjb21wbGlzaG1lbnQuClRoZSB0aGluZ3MgdGhhdCBzdHJ1Y2sgbWUgdGhlIG1vc3Qgd2FzIGhvdyBkZXNwZXJhdGUgZXZlcnlvbmUgd2FzIHRoYXQgR2VybWFueSBwYXkgdGhlaXIgd2FyIGRlYnQgZnJvbSBXV0kgYW5kIGF2b2lkIGFub3RoZXIgd2FyLiAKUHV0IGFsbCBneW0gZXF1aXBtZW50IGF3YXkgd2hlbiB5b3UgZG9uZSB3aXRoIGl0LgpBaCwganVzdCBjb3AgdGhpbmdzLiBJIG1lYW4sIHdoYXQgdGhlIHdvcnN0IHRoaW5nIGEgY2xlYXJseSBtZW50YWxseSB1bnN0YWJsZSBwZXJzb24gY291bGQgZG8sIHJpZ2h0PwpMaWtlIHNvbWUgZ3V5IHNheWluZyBzb21lIEVuZ2xpc2ggc3dlYXIgd29yZHMgYW5kIGxhdWdocyBpdCBvZmY/ICJGdXV1a2trIHl1dXV1LCBoYWhhaGEiLiBIZWFyZCBpdCBzZXZlcmFsIHRpbWVzLiAKSGFkZmllbGQgZ3JlZXRpbmdzLCBoYW5kZWQgb2ZmIGNvdXJ0ZXN5IG9mIFNhcm5pYSBNYXlvciBNaWtlIEJyYWRsZXkuIENocmlzIEhhZGZpZWxkIGxhdW5jaCBpbnRvIHNwYWNlIChpdCBhIHR3byBkYXkgam91cm5leSB0byB0aGUgSVNTKSB0YWtlcyBwbGFjZSBvbiBXZWRuZXNkYXkgbW9ybmluZyAoRGVjLiAKSXQgaXMgY2FsbGVkIGEgZ3VhcmFudGVlZCB0b3VybmFtZW50IHNpbmNlIHRoZXJlIGlzIGEgZ3VhcmFudGVlZCBwcml6ZSBwb29sIGFuZCBpdCBkb2Vzbid0IG1hdHRlciBob3cgbWFueSBwYXJ0aWNpcGFudHMgYXJlIGluIHRoZSB0b3VybmFtZW50LiAKV2UgZ29pbmcgdG8gbG9zZSBtaWxsaW9ucyBpbiB0YXggYWJhdGVtZW50cyBhbnl3YXlzLCB0aGUgc2FsZSB3YXNuIHJlYWxseSBhIGdyZWF0IGRlYWwsIGFuZCBpcyB0aGF0IHNob3J0IHRlcm0gYm9vbiB3b3J0aHdoaWxlIHdoZW4gdGhlIHByb3BlcnR5IHdvdWxkIG9ubHkgaW5jcmVhc2UgaW4gdmFsdWU/CkZ1c2sgbWFrYXIgdGEgYnJ1a2FyIHNpbiBhZmZyIGZyIG1pZGRhZyBvY2ggZXR0IHJlbmRlenZvdXMgbWVkYW4gZHUgciBib3J0YS4gClRoZSBtYW55IGxpbmVzIGFyb3VuZCBoaXMgZXllcyBzaG93ZWQgdGhlIHNpZ25zIG9mIGhpcyBsaWZlc3R5bGUgd2hpY2ggc29tZXRpbWVzIG1pcnJvcmVkIHRoZSBtZW4gaW4gaGlzIHNvbmdzLiAKVXBkYXRlZCBHdWlkZSB0byBCZWF0aW5nIHRoZSBNaWNyb3MKSSdsbCBiZSBtYXJyaWVkIDIzIHllYXJzIHRoaXMgSGFsbG93ZWVuLCBrbm93IGhvdyBteSBzcG91c2UgcHJvcG9zZWQ/IFB1dCB0aGUgcmluZyBpbiBhIGxpdHRsZSBwbGFzdGljIGdyZWVuIHdpdGNoIGJhc2tldCBmdWxsIG9mIGNhbmR5IGFuZCBoYW5kZWQgaXQgdG8gbWUgd2hlbiBJIHdhcyBzdHVkeWluZywgSSBhbG1vc3QgYXRlIHRoZSBkYW1uIHJpbmcgYmVjYXVzZSBJIHdhc24ndCBwYXlpbmcgYXR0ZW50aW9uLiBObyBvbmUgd2FzIGFyb3VuZCwgbm8gcGhvdG8sIG5vIHZpZGVvLCBqdXN0IHVzLCBhIHRpbnkgcGxhc3RpYyB3aXRjaCBhbmQgc29tZSBjaG9jb2xhdGVzLi4gClRoZXkgd2FudCB0byBjaGVjayB0byBzZWUgaWYgeW91IGFyZSBjYXJyeWluZyBhbnkgc3RvbGVuIHdlYXBvbnMgYnV0IHdpdGhvdXQgYW55IHByb2JhYmxlIGNhdXNlIHRoZXkgY2Fubm90IHNlYXJjaCB5b3VyIHZlaGljbGUgb3IgeW91ciBwcm9wZXJ0eS4gTXkgaW5zdHJ1Y3RvciB0b2xkIG1lIG9mIGEgc2NlbmFyaW8gd2hlcmUgb25lIGNvcCB3YXMgYXBwcm9hY2hpbmcgYSBjYXIgYWhlYWQgb2YgYW5vdGhlciBvZmZpY2VyIHdoZW4gdGhlIGRyaXZlciBkZWNsYXJlZCBoZSBoYWQgYSBmaXJlYXJtIHRoZSBvZmZpY2VyIGFza2VkIGZvciB0aGUgZmlyZWFybS4gCklmIHlvdSBpbnRvIHRoYXQgeW91IGNhbiBkbyBhIGJ1bmdlZWp1bXAgb3Igc2t5IHdhbGsgdGhlcmUgMjMzIG1ldGVycyB1cCBpbiB0aGUgc2t5Li4gCk15IGNvIG9wIGJ1eXMgZnJvbSBhIHBsYWNlIHRoYXQgbm90IG9ubHkgc2VsbHMgdGhlIHR5cGljYWwgYmVlZiBhbmQgY2hpY2tlbiwgdGhleSBhbHNvIHNlbGwgdHVya2V5IG5lY2tzLCBjaGlja2VuL2R1Y2sgZmVldCwgYWxsIHNvcnRzIG9mIGJlZWYgYm9uZXMsIGFuZCBvdGhlciByYW5kb20gdGhpbmdzLiAKWW91ciBhcmd1bWVudCBkb2VzbiBob2xkIHdhdGVyIHVubGVzcyB5b3UgbWFrZSBhIGxhcmdlIHN1bSBvZiB3YXRlciBhbmQgSSBiZXQgJDIwIHlvdSBhbHJlYWR5IGtub3cgdGhpcyB5b3Vyc2VsZiBhbmQgeW91IGFnYWluc3QgaW5jb21lIHRheGVzIGJlY2F1c2UgeW91IGhhdGUgdGF4ZXMgaW4gZ2VuZXJhbC4gClNpZERyaXZlciB1CkJkODRhNTc0MzEuIFNhbmdoYXJzaCBhdXIgdmlqYXkgM2dwIG1vYmlsZSBtb3ZpZSBkb3dubG9hZGluc3RtYW5rIC4gCklsbG5lc3Mgd2FzIG9uIE9jdC4gCk9wcG9uZW50cyBvZiB0aGUgTmFuY3kgVG9kZCBQb2tlciBQYWxhY2UgY29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IHN0aWxsIHVuZGVyZ29pbmcgcmV2aWV3IGZvciBzaWduYXR1cmUgc3VmZmljaWVuY3kgYnkgdGhlIHNlY3JldGFyeSBvZiBzdGF0ZSBhbmQgc3RpbGwgaW4gdGhlIGZpZWxkIGZvciBtb3JlIHNpZ25hdHVyZXMgZWFybGllciBoYWQgY29udGVzdGVkIHRoZSBsZWdhbGl0eSBvZiBwbGFjaW5nIHRoZSBtZWFzdXJlIG9uIHRoZSBiYWxsb3QgZm9yIGEgdmFyaWV0eSBvZiBmbGF3cyBpbiB0aGUgYmFsbG90IHRpdGxlIGFuZCBjb250ZW50Lk9wcG9uZW50cyByYWlzZWQgYW50aSB0cnVzdCBxdWVzdGlvbnMgYW5kIGltcGFjdCBvbiBleGlzdGluZyBjYXNpbm9zIGF0IHRoZSBTb3V0aGxhbmQgYW5kIE9ha2xhd24gcmFjZXRyYWNrcy4gVGhlIG9wcG9zaXRpb24gaXMgZnVuZGVkIGJ5IFNvdXRobGFuZCBhbmQgdGhleSBoaXJlZCBhIG1ham9yIExpdHRsZSBSb2NrIGxhdyBmaXJtLCBXcmlnaHQgTGluZHNleSBhbmQgSmVubmluZ3MsIHRvIGFyZ3VlIHRoZSBjYXNlIHRvIHRoZSBhdHRvcm5leSBnZW5lcmFsLk5vdyBUb2RkIGhhcyBmaWxlZCBoZXIgYW5zd2VyLCBhbm90aGVyIGV4dGVuc2l2ZSBicmllZiBieSBhIG1ham9yIExpdHRsZSBSb2NrIGxhdyBmaXJtLCBXaWxsaWFtcyBhbmQgQW5kZXJzb24uIFRoZSBmaXJtIGhhcyBiZWVuIGFkdmlzaW5nIFRvZGQgYW5kIGhlciBiYWNrZXJzIGluIEJyYW5zb24sIE1vLiwgZnJvbSB0aGUgb3V0c2V0LlRvZGQncyBsYXd5ZXIgbmF0dXJhbGx5IHNheXMgaGVyIGFtZW5kbWVudCBpcyBsZWdhbCwgdGhhdCBhcmd1bWVudHMgYXR0YWNraW5nIGl0IGFyZSBpbmNvcnJlY3Qgb3IgcHJlbWF0dXJlIGFuZCB0aGF0IHRoZSBhbWVuZG1lbnQgZG9lcyBOT1QgdGhyZWF0ZW4gZXhpc3RpbmcgZ2FtYmxpbmcgYXQgdGhlIFNvdXRobGFuZCBhbmQgT2FrbGF3biBjYXNpbm9zLiAKTiBDaGFtYnJlIG1peHRlIDogRm9ybWF0aW9uIGRlIGxhIENvdXIgZGUgY2Fzc2F0aW9uIGNvbXBvc2UgZGUgbWFnaXN0cmF0cyBhcHBhcnRlbmFudCBhdSBtb2lucyAgdHJvaXMgY2hhbWJyZXMgZGUgbGEgQ291ciAoYXUgbWluaW11bSAxMyBtYWdpc3RyYXRzLCBsZSBwcmVtaWVyIHByc2lkZW50IGV0IHBvdXIgY2hhcXVlIGNoYW1icmUgbGUgcHJzaWRlbnQsIGxlIGRveWVuLCB1biBjb25zZWlsbGVyKS4gU2Egc2Fpc2luZSBlc3Qgb2JsaWdhdG9pcmUgZW4gY2FzIGRlIHBhcnRhZ2UgZ2FsIGRlcyB2b2l4IGRhbnMgdW5lIGNoYW1icmUuIFNhIHNhaXNpbmUgZXN0IGZhY3VsdGF0aXZlIGxvcnNxdSd1bmUgYWZmYWlyZSBwb3NlIHVuZSBxdWVzdGlvbiByZWxldmFudCBkZXMgYXR0cmlidXRpb25zIGRlIHBsdXNpZXVycyBjaGFtYnJlcywgbG9yc3F1J3VuZSBhZmZhaXJlIGEgcmV1IG91IGVzdCBzdXNjZXB0aWJsZSBkZSByZWNldm9pciBkZXMgc29sdXRpb25zIGRpdmVyZ2VudGVzLgpXaGVuIGhlIHB1c2hlZCBtZSBJIGp1c3QgZGlkbiBtb3ZlICh0YXIgYmFieSkuIEhlIGdldHMgYWxsIHBpc3NlZCBhbmQgZGVtYW5kcyB0aGF0IEkgbW92ZSBhbmQgSSBqdXN0IGlnbm9yZSBoaW0uIApPbiB0aGUgY292ZXIgb2YgVGltZSdzIE9jdC4gNSwgMTk1OSwgaXNzdWUsIENvbGUgd2Fzbid0IGhvbm9yZWQgZm9yIHRoZSBzbWFsbCBibG9jayBWIDggb3IgdGhlIENvcnZldHRlLiBJbnN0ZWFkLCBoZSB3YXMgaGFpbGVkIGFzIHRoZSBmYXRoZXIgb2YgdGhlIHJlYXIgZW5naW5lIENvcnZhaXIuCkRBTk5ZIE1jSHVnaCBhcnJpdmVkIGJhY2sgb24gSXJpc2ggc29pbCBsYXN0IEZyaWRheSBhdCB0aGUgZW5kIG9mIGEgd2VlayBoZSBub3QgbGlrZWx5IHRvIGZvcmdldC4gSGlzIGhvbGlkYXkgaW4gRW5nbGFuZCBoYWQgYmVlbiBzaG9ydGVyIHRoYW4gcGxhbm5lZCBidXQgaGUgd2FzbiBjb21wbGFpbmluZy4gClRoaXMgbGVhZHMgdG8gbW9yZSBzaW1wbGUgYW5kIG5vbiB2aW9sZW50IHJldmVsYXRpb24gb2YgdGhlIHZpbGxhZ2UuIApUaGVpciBmYWNpbGl0eSBpcyBub3cgd2F5IGJldHRlciBkb3dudG93bi4uIApJJ20gc28gZXhjaXRlZCBmb3IgdGhpcyBpbnRlcnZpZXcgYmVjYXVzZSBJJ3ZlIGtub3duIEppbSBXYW5nIGZvcmV2ZXIuIApJbiBjZXJ0YWluIGNpcmN1bXN0YW5jZXMsIHRoZSBVbml2ZXJzaXR5J3MgdHJhdmVsIGluc3VyYW5jZSBtYXkgbm90IHNhdGlzZnkgdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgZGVzdGluYXRpb24geW91J3JlIHZpc2l0aW5nLCBhbmQgeW91IG1heSBiZSByZXF1aXJlZCB0byBwdXJjaGFzZSBpbiBjb3VudHJ5IG1lZGljYWwgaW5zdXJhbmNlLklmIHlvdSByZXF1aXJlIGEgbGV0dGVyIGNvbmZpcm1pbmcgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIG9mIHRoZSBVbml2ZXJzaXR5J3MgdHJhdmVsIGNvdmVyLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbCB0byB0aGUgTGVnYWwgYW5kIFJpc2sgSGVscGRlc2sgaW5jbHVkaW5nIHRoZSBkYXRlcyBhbmQgZGV0YWlscyBvZiB5b3VyIHRyYXZlbC5TdGFmZiBhcmUgYWZmb3JkZWQgdXAgdG8gMTgwIGRheXMgb2YgY292ZXIuIApUaGVyZSBubyByZWFzb24gdG8gYmV0IGxhcmdlIG9uIHRoZSBmbG9wIGluIGhhbmQgMS4gCkEgc3RyYWlnaHQgZmx1c2ggb25seSB3aW5zIHRoZW0gdGhlIG11Y2ggc21hbGxlciBiYWQgYmVhdCBqYWNrcG90LiBUaGUgcnVsZXMgYXJlIHNsaWdodGx5IGRpZmZlcmVudCBhdCB0aGUgTUdNIEdyYW5kIERldHJvaXQgYW5kIEdyZWVrdG93bi4gVGhlIGJhZCBiZWF0IGphY2twb3QgY2FuIGJlIGhpdCBpZiBhIHBsYXllciBmb3VyIG9mIGEga2luZCBsb3NlcyB0byBhIHN0cmFpZ2h0IGZsdXNoLiAKIkl0J3Mgc29ydCBvZiBsaWtlIHRoZSBKRksgdGhpbmc6ICdBc2sgbm90IHdoYXQgeW91ciBjb3VudHJ5IGNhbiBkbyBmb3IgeW91OyBhc2sgd2hhdCB5b3UgY2FuIGRvIGZvciB5b3VyIGNvdW50cnkuJyBXZSBsb29rIGF0IHRoYXQgb24gYSBsb2NhbCBsZXZlbC4gCiJEZXMgcmVsYXRpb25zIGRlIGNvbmZpYW5jZSBlbnRyZSBwb3B1bGF0aW9uIGV0IHBvbGljZSBkb2l2ZW50IHRyZSBydGFibGllcyIgYSB0IGlsIG1hcnRlbC4gSWwgYSBhbm5vbmMgcXVlIGRhbnMgbGUgY2FkcmUgZGVzIDEwIDAwMCBwb3N0ZXMgcHJ2dXMgc3VyIGxhIGR1cmUgZHUgcXVpbnF1ZW5uYXQsIGxlIDE4ZSBhdXJhIGxlcyBlZmZlY3RpZnMgbmNlc3NhaXJlcy4gCkNhbiB3ZSBzd2F5IG90aGVycyB3aXRoIG91ciBlbW90aW9uYWwgb3Bpbmlvbj8gUGVyaGFwcywgd2UgY2FuIHRyeS4gClNvIGxldCBpZ25vcmUgdGhlIHN0YXRpc3RpY2FsIGV2aWRlbmNlIHByb3ZpbmcgaGUgaXMgdGhlIHNhbWUgcGxheWVyLCBhbmQgaW5zdGVhZCB0cnVzdCB0aGUgc2NvdXRpbmcgcHJvd2VzcyBvZiAvdS9tcnR3b3RhcC4KRnJlbmNoIHByZXNpZGVudCBOaWNvbGFzIFNhcmtvenkgaW5zaXN0cyB0aGF0IHN1Y2ggcmVsaWdpb3VzIGdhcmIgaGFzIG5vIHBsYWNlIGluIHNlY3VsYXIgRnJhbmNlIGFuZCB0aGF0IGl0IG9wcHJlc3NpdmUgdG8gd29tZW4uIFNlZW1zIHJhdGhlciBpcm9uaWMgdGhhdCBhIG1hbiBtYXJyaWVkIHRvIGZvcm1lciBzdXBlcm1vZGVsIGFuZCB0aGUgbXVjaCB5b3VuZ2VyIENhcmxhIEJydW5pIGlzIHdvcnJpZWQgYWJvdXQgd2hhdCBpcyBvcHByZXNzaXZlIHRvIHdvbWVuLiAKSSB3YWl0ZWQgdW50aWwgc3VwZXIgbGF0ZSAobWlkbmlnaHQpIGFuZCBsZWZ0IGEgdm9pY2VtYWlsIHNheWluZyBJIGFjY2VwdGVkIGFub3RoZXIgcG9zaXRpb24uIApPbmUgb2YgbXkgY2F0cyB3aWxsIGVtcGxveSBzaW1pbGFyIHRhY3RpY3Mgd2hlbiBvbmUgb2Ygb3VyIG90aGVyIGNhdHMgaXMgaW4gYSBzcG90IHNoZSB3YW50cy4gClNvIGl0IGEgbWlzc2VkIGJ1c2luZXNzIG9wcG9ydHVuaXR5IGF0IHRoZSB2ZXJ5IGxlYXN0LiBBbmQgaXQgd2lsbCBjb3N0IHRoZW0gc2VydmVyIHNwYWNlIG9yIGh1bWFuIGxhYm9yIHRvIHRyYW5zZmVyIHRoYXQgZGF0YSB0byB0aGUgQ2l0eS4gVmlkZW8gZmlsZXMgYXJlIGh1Z2UgYW5kIHRyYW5zZmVycmluZyB0aGVtIGlzbiBmcmVlLi4gCk15IHdvcnN0IGVwaXNvZGUgd2FzIHdoZW4gdGhlIHdhdGVyIGdvdCBtaXhlZCB3aXRoIHRoZSBtdWNvcyBpbiBteSB0aHJvYXQuIEkgdHJpZWQgdG8gcmVndXJnaXRhdGUgdGhlIGZvb2Qgb25seSB0byBoYXZlIHRoZSB0aGljayBtdWNvcyBpbXBlZGUgbXkgYWlyd2F5LiBJIHRob3VnaHQgSSB3YXMgZ29pbmcgdG8gYXNwaXJhdGUgbXkgb3duIG11Y29zIGludG8gbXkgbHVuZ3MgYW5kIGRpZSBvZiBhc3BoeXhpYXRpb24uIEF0IHRoZSB0aW1lIEkgd2FzIHdhdGNoaW5nIG15IHR3byB5b3VuZyBjaGlsZHJlbi4gSSBjYWxsZWQgdGhlIGZpcmUgZGVwYXJ0bWVudC4gV2hlbiB0aGV5IGdvdCB0byB0aGUgZG9vciwgSSBhbnN3ZXJlZCB3aXRoIGJsb29kc2hvdCB3YXRlcnkgZXllcyBmcm9tIHdyZXRjaGluZyBzbyBoYXJkLiBJIHRvbGQgdGhlbSB3aGF0IHdhcyBnb2luZyBvbi4gSSB3YXMgY29tcGxldGVseSBibHVudCBhbmQgc2FpZCB5b3UgYXJlIGhlcmUgZm9yIG15IGNoaWxkcmVuIGluIGNhc2UgbXkgYWlyd2F5IGdldHMgYmxvY2tlZCBhbmQgaWYgaXQgZG9lcywgeW91IGdldCBwcmFjdGljZSBvbiBpbnR1YmF0aW5nIGluIHRoZSBmaWVsZC4gVGhleSB3ZXJlIHBpc3NlZC4KSG93ZXZlciwgZm9yIGEgdmFyaWV0eSBvZiByZWFzb25zLCBzb21lIG9mIHdoaWNoIEkgZGV0YWlsIGhlcmUsIFRTSCBsZXZlbHMgYXJlIG5vdCB1dHRlcmx5IHJlbGlhYmxlIGZvciBhc3Nlc3NpbmcgdGh5cm9pZCBmdW5jdGlvbi4KVGhvc2UgZm9yd2FyZHMsIHdpdGggZmV3IGV4Y2VwdGlvbnMsIHdlcmUgYWxsIGxvY2FsIG1lbiwgcGxheWluZyBmb3IgdGhlIGxvdmUgb2YgdGhlIGdhbWUsIGJ1dCBpbiB0aGUgdHdvIHRlYW1zIHdlcmUgaGlnaGx5IHBhaWQgY29hY2hlcywgYXBwYXJlbnRseSBjb250ZW50IHRvIGFsbG93IHRoZSBmb3J3YXJkcyBjbG9zZSB0aGUgZ2FtZSB1cCBhbmQgYmF0dGxlIGl0IG91dCBpbiB0aGUgd29yc3QgdHlwZSBvZiBzcGVjdGFjbGUgZnJvbSB0aGUgc3VwcG9ydGVycyBwb2ludCBvZiB2aWV3LiAKQXNrIHlvdXIgZ2lybGZyaWVuZCB0byBjaG9vc2Ugd2hpY2ggbWFzc2FnZSBvaWwgb3IgbG90aW9uIHNoZSB3b3VsZCB3YW50IHlvdSB0byB1c2UuIEFwcGx5IGFuIGFtcGxlIGFtb3VudCBvZiB0aGlzIHRvIHRoZSBwYWxtcyBvZiB5b3VyIGhhbmQgYW5kIHJ1YiB0b2dldGhlciB0byBjcmVhdGUgZW5vdWdoIGhlYXQuIFRoZW4gcnViIHlvdXIgcGFsbXMgb24geW91ciBnaXJsZnJpZW5kJ3MgYmFjayB3aGlsZSBzaGUncyBseWluZyBkb3duIG9uIGhlciBiZWxseS4gQXNrIHlvdXIgZ2lybGZyaWVuZCBpZiB0aGUgcHJlc3N1cmUgeW91ciBhcmUgcHV0dGluZyBvbiBoZXIgYmFjayBpcyBlbm91Z2ggb3IgaWYgeW91IG5lZWQgdG8gYWRkIG1vcmUuIFN0YXJ0IG1hc3NhZ2luZyBoZXIgYmFjayB1c2luZyBzbG93LCBzb2xpZCBzdHJva2VzLiBNb3ZlIGZyb20gaGVyIGJhY2sgdG8gaGVyIHNob3VsZGVycyBhbmQgdGhlbiB0byBoZXIgbG93ZXIgYmFjay4gVG8gbWFzc2FnZSB0aGlzIGFyZWEgb2YgaGVyIGJhY2ssIGl0IGlzIGJlc3QgdG8gdXNlIHlvdXIgdGh1bWJzLiBPbmNlIHlvdSdyZSBkb25lIG1hc3NhZ2luZyBoZXIgYmFjaywgY292ZXIgdGhlIGFyZWEgd2l0aCBhIHNoZWV0LgpUaGUgY2hhbGxlbmdlIGZvciBkb2N0b3JzIGlzIHRvIGZvcm0gbG9uZyB0ZXJtIHJlbGF0aW9uc2hpcHMgd2l0aCBwZW9wbGUgd2hvc2Ugdmlld3MgYXJlIG5vdCBpbml0aWFsbHkgICBvciBub3QgZXZlciAgIGFsdGVyZWQgYnkgZXZpZGVuY2VEci4gSmFuZSBGaW5sYXkgaGFkIG1lYXNsZXMgYXMgYSBjaGlsZCwgYnV0IGluIGEgc2Vuc2Ugc2hlIHdhcyBsdWNreS4KQWZ0ZXIgQnVya2UgYW5kIEhhcmUgYXJlIGNhdWdodCwgSmVreWxsIGJlY29tZXMgc28gZm9jdXNzZWQgb24gaGlzIHdvcmsgaGUgYmVjb21lcyBKYWNrIHRoZSBSaXBwZXIsIGJlbGlldmluZyB0aGF0IGFzIGhpcyB1bHRpbWF0ZSBnb2FsIGlzIGZvciB0aGUgYmVuZWZpdCBvZiBhbGwgaHVtYW5pdHksIGl0IGlzIHdvcnRoIHRoZSBzYWNyaWZpY2Ugb2YgdGhlIGRlYXRocyBvZiBhIGZldyBzdHJlZXR3b3JrZXJzLCBwcm9zdGl0dXRlcyBhbmQgZmFsbGVuIHdvbWVuLiAKU29jaW9sb2d5LCBsaWtlIGFsbCBhY2FkZW1pYyBkaXNjaXBsaW5lcywgaXMgZW1iZWRkZWQgaW4gcG93ZXIuIEJ1dCB1bmxpa2UgbW9zdCBkaXNjaXBsaW5lcywgaXQgYWxzbyBwcm92aWRlcyB0aGUgdG9vbHMgdG8gdW5jb3ZlciB0aGUgcG93ZXIgYmVoaW5kIG91ciBjbGFpbXMsIHRvIGJlIHJlZmxleGl2ZSBhYm91dCB0aGUgc29ydCBvZiBrbm93bGVkZ2Ugd2UgcHJvZHVjaW5nLiBBbmQgaWYgdGhlIHNvY2lvbG9naXN0IGNhbm5vdCBkbyBpdCBoaW1zZWxmLCB0aGVuIHRoZSByZWFkZXJzIG9mIGl0IG11c3QuIFJlZ2VuZXJ1cyBjYW4gZW5jb3VyYWdlIGhpcyBzdHVkZW50cyB0byBnZXQgbWFycmllZCwgYnV0IEkgd2lsbCBjb250aW51ZSB0byBlbmNvdXJhZ2UgbWluZSB0byBiZSBza2VwdGljYWwgb2YgbWFycmlhZ2UgYXMgZ292ZXJubWVudCBwb2xpY3ksIGxldCBhbG9uZSBwZWRhZ29naWNhbCBvdXRjb21lLgpNYW5kcmlsbCBtb25rZXlzIGFyZSBwZXJoYXBzIHRoZSBtb3N0IGZhbW91cyBleGFtcGxlLCB3aXRoIHZpdmlkIG1hcmtpbmdzIG9uIHRoZWlyIGZhY2UgYW5kIGJvdHRvbSB0aGF0IHNpZ25hbCB0aGVpciBwb3NpdGlvbiBpbiB0aGUgZ3JvdXAgc3RyaWN0IGhpZXJhcmNoeTsgdGhlIGZpdHRlciwgYW5kIG1vcmUgZG9taW5hbnQgYW4gaW5kaXZpZHVhbCBpcywgdGhlIHJlZGRlciBoZSBhcHBlYXJzLiAKRm9ybWVyIGNsZXJrIG9mIHByaXZ5IGNvdW5jaWwgR29yZG9uIE9zYmFsZGVzdG9uIGtub3duIGZvciBkaXBsb21hY3kKSSBiZWVuIHRyeWluZyB0byBnZXQgYSBqb2IgaW4gZ2FtZSBkZXYgb3IgdmZ4IGRvaW5nIGFueXRoaW5nIEkgY2FuIGRvIChtb3N0bHkgM2QgbW9kZWxpbmcgdGV4dHVyaW5nKSBmb3IgYSB3aGlsZSBub3csIHRoZXJlIGJlZW4gYSBmZXcgdGVjaCBhcnQgcm9sZXMsIFFBIGFuZCBzdHVmZi4gM0Qgd2hhdCBJIGRvIGJlc3QsIGFuZCBteSBlbmQgZ29hbCBpcyB0byBiZSBhbiBlbnZpcm9ubWVudCBhcnRpc3QsIGJ1dCByaWdodCBub3cgSSB1cCBmb3IgYW55dGhpbmcgSSBjYW4gZG8uIEkgaGF2ZSBwcmV0dHkgZXh0ZW5zaXZlIGtub3dsZWRnZSBvZiB0aGUgdmFyaW91cyB0b29scyBpbiBnYW1lIGVuZ2luZXMgKEkgbW9zdCBmYW1pbGlhciB3aXRoIENFViwgYnV0IGhhdmUgYmVlbiB3b3JraW5nIG1vcmUgaW4gVUU0KSwgaGF2ZSB1c2VkIHN1YnN0YW5jZSBkZXNpZ25lciBhIGJpdCwgYnV0IG5vdCBuZWFybHkgYXMgbXVjaCBhcyBJIHdpc2ggSSBjb3VsZC4gClRlYW0gMSB3aW5zIGluIE9UIDE5IDE3LiAKRXZlcnlib2R5IGluIHByaXNvbiBuZWVkcyBib29rcyBhbmQgbW9yZXNvLCBwc3ljaG90aGVyYXB5LiBGcmFua2x5LCBjb25jZXB0cyBsaWtlICJibGFtZSwiIGFuZCB0aGUgdGhpbmtpbmcgdGhhdCBzb21lIHBlb3BsZSBkb24gZGVzZXJ2ZSB0byBnZXQgYmV0dGVyIG9yIGRvIGRlc2VydmUgdG8gYmUgcHVuaXNoZWQgd2hpbGUgYWxyZWFkeSBpbmNhcmNlcmF0ZWQsIGdldCBzbnVmZmVkIG91dCBwcmV0dHkgcXVpY2sgd2hlbiB5b3Ugc3R1ZHkgdGhlIGJyYWluIGFuZCByZWFsaXplIHRoZXkgZG9uIG1ha2Ugc2Vuc2Ugb3V0c2lkZSBvZiBwcmltYWwgbG9naWMuClNoZSB3b3JrZWQgaW4gdGhlIEJsdWUgQmVsbCBTYWxvb24sIEJpbGwgVGlsZ2htYW4ncyBUdXJmIEV4Y2hhbmdlLCBhbmQgdGhlIFJlYXZlcyBCcm90aGVycyBDYXNpbm8uLiAKSW50ZXJuYXRpb25hbCBzaXRlczogQ2hpbmEgTWFsYXlzaWEgU2luZ2Fwb3JlIEhvbmcgS29uZyBJbmRvbmVzaWEgVGhhaWxhbmQgUGhpbGlwcGluZXMgSW5kaWEgSW50ZXJuYXRpb25hbCBwcm9wZXJ0aWVzLgoiTGV0IHRoZSBOUkwgYmUgdGhlIHBva2llcyBkb21pbmF0ZWQgY29kZSAuIHdlIGFyZSBub3QgdGhlIE5STCwgd2UgYXJlIGJldHRlciB0aGFuIHRoYXQsIiBoZSBzYWlkLiBMb3NzZXMgYnkgbG9jYWwgZ292ZXJubWVudCBhcmVhIHNhdyBCcmltYmFuayB0b3AgdGhlIGxlYWd1ZSB0YWJsZSB3aXRoICQxMzQuMTQgbWlsbGlvbiBkb3duIGZyb20gJDE0My4wNSBtaWxsaW9uIHRoZSBwcmV2aW91cyB5ZWFyLi4gCkJvdGggb24gbGFyZ2UgYW5kIHNtYWxsIHNjYWxlcy4gCkEgY2hpbGQgc2hvdWxkIG5vdCBiZSBwdW5pc2hlZCBmb3IgYmVpbmcgaHVuZ3J5LiBFdmVuIGlmIHNoZSB3YXMgZWF0aW5nIGF0IDEwLCAxMCB0byA0IGlzIGEgbG9uZyB0aW1lIGFuZCBzaGUgbWlnaHQgbmVlZCBhbm90aGVyIHNuYWNrLiBJIGVhdCBldmVyeSAyIHRvIDMgaG91cnMsIGdvaW5nIDggd291bGQgYmUgdG9ydHVyZS4gSSB3b3VsZCBiZSBwaHlzaWNhbGx5IHNpY2sgYW5kIGRpenp5LiBJIHdvdWxkIG5vdCB3YW50IG15IGNoaWxkIHRvIGdvIHRocm91Z2ggdGhhdCB3aGVuIGZvb2QgaXMgYXZhaWxhYmxlLiAKSXQgaGFzIHNpbmNlIGJlZW4gdGhlIGhvbWUgdG8gc2V2ZXJhbCBjb21wYW5pZXMgaW5jbHVkaW5nIFRoZSBEdXN0YmFuZSBDb21wYW55IGFuZCBtb3N0IHJlY2VudGx5IHRoZSBLb3JlYW4gR2FyZGVuIHJlc3RhdXJhbnQuVGhlIGJ1aWxkaW5nIGhhcyBiZWVuIGhvbWUgdG8gTGVzIEFtaXMgZHUgRnJvbWFnZSBzaW5jZSAyMDA5LiAKVGhlIGNhdmVhdCBoZXJlIGlzIEkgZG9uIGtub3cgbXVjaCBhYm91dCB3aHkgcGVvcGxlIG1pZ2h0IGh1bnQgYWxsaWdhdG9ycy4KQmFjaGVsb3IncyBEZWdyZWVMaWNlbnNlZCBwcmFjdGljYWwgbnVyc2VzIGNhbiB0YWtlIGEgYnJpZGdlIHByb2dyYW0gYXQgYSBmb3VyIHllYXIgY29sbGVnZSB0byBlYXJuIGEgYmFjaGVsb3Igb2Ygc2NpZW5jZSBkZWdyZWUgaW4gbnVyc2luZyAoQlNOKS4gU3R1ZGVudHMgbXVzdCBjb21wbGV0ZSBnZW5lcmFsIGVkdWNhdGlvbiByZXF1aXJlbWVudHMgaW4gYWRkaXRpb24gdG8gbnVyc2luZyBjbGFzc2VzIHRvIGVhcm4gdGhlIGRlZ3JlZS4gCkZ1cnRoZXJtb3JlLCBhIGxhcmdlciBwZXJjZW50YWdlIG9mIHN0dWRlbnRzIHdobyB0YWtlIG9uIGxvYW5zIHdpbGwgZHJvcCBvdXQgYW5kIG5ldmVyIGZpbmlzaCBjb2xsZWdlLiBNYWtlcyBzZW5zZSAgeW91IHRha2Ugb24gbG9hbnMgYmVjYXVzZSB5b3UgcG9vciwgeW91IGFsc28gdGFrZSBvbiBhIGpvYiBvciB0d28sIGhhdmUgdHJvdWJsZSBmaW5kaW5nIGEgcGxhY2UgdG8gbGl2ZSBuZWFyIGNhbXB1cywgY29tbXV0ZSBsb25nIGRpc3RhbmNlcywgZXRjLiBBbmQgbm90IHN1cnByaXNpbmdseSwgeW91IGRyb3Agb3V0Li4gClRvIGJlIGZyYW5rLCBJIGxvb2tlZCBhdCBhIGxvdCBvZiB0aGUgcHJvZmlsZXMgdGhhdCBJIHdvdWxkIGNvbWUgYWNyb3NzIG9uIFR3aXR0ZXIsIHNjYW4gdGhlIGJpby9mZWVkIGFuZCBteSBpbW1lZGlhdGUgdGhvdWdodCBvbiBtb3N0IG9mIHRoZW0gd2FzICJmcmF1ZCIuIApHcmVlY2UgYWxzbyBwbGFubmVkIGNoYW5nZXMgdG8gaXRzIEludGVybmV0IGdhbWluZyBsYXdzIGluIGhvcGVzIG9mIHRhcHBpbmcgaW50byB0aGUgZXN0aW1hdGVkIDQuMyBiaWxsaW9uIChVUyQ1LjggYmlsbGlvbikgSW50ZXJuZXQgZ2FtaW5nIGJsYWNrIG1hcmtldC4uIApIZSBkb2VzbiByaWRlIHRoZSBzdWJ3YXkgZXZlcnlkYXk6Ck15IGRhdWdodGVyIHdhcyBib3JuIGVuIGNhdWwsIHRoZSBsYWJvciB3YXMgcmVhbGx5IGZhc3QgYW5kIHJlbGF0aXZlbHkgcGFpbmxlc3MgYW5kIGJlY2F1c2UgdGhlIHdhdGVyIGRpZG4gYnJlYWsgSSB3YXNuIGZ1bGx5IGF3YXJlIGl0IHdhcyBiYWJ5IHRpbWUgeWV0LiBTaGUgd2FzIHZlcnkgY2xvc2UgdG8gYmVpbmcgYSB0b2lsZXQgYmFieSBidXQgSSBjbHVlZCBpbiBhbmQgZ290IGluIHRoZSBiYXRoIHdpdGggb25seSAzIG1pbnV0ZXMgdG8gc3BhcmUuIE9uZSBwdXNoIGFuZCBzaGUgY2FtZSBvdXQgd2l0aCBhIG1lbWJyYW5lIGFsbCBvdmVyLCBJIHJlbWVtYmVyIGJlaW5nIHdvcnJpZWQgaXQgc3VmZm9jYXRlIGhlciBzbyBwdWxsZWQgaXQgb2ZmIGltbWVkaWF0ZWx5LCB0cnVseSBpdCB3YXMgdGhlIGxlYXN0IHJlbWFya2FibGUgcGFydCBvZiBoZXIgYmlydGgsIGJ1dCBhcHBhcmVudGx5IGl0IHN1cHBvc2VkIHRvIGJlIGdvb2QgbHVjay4KQWxzbyBhcyB5b3Ugd2lsbCBiZSBwbGF5aW5nIG9ubGluZSwgdGhlIHNvZnR3YXJlIHVzZWQgZm9yIHBsYXkgYW5kIHRoZSBncmFwaGljIHVzZXIgaW50ZXJmYWNlIHNob3VsZCBiZSB1c2VyIGZyaWVuZGx5LiBUaGUgb3RoZXIgdGhpbmcgdGhhdCBkaWZmZXJlbnRpYXRlcyBnb29kIHNvZnR3YXJlIGZyb20gdGhlIG90aGVycyBpbiBvbmxpbmUgcG9rZSwgaXMgdGhlIGFtb3VudCBvZiBkaXNrIHNwYWNlIGl0IHVzZXMgb24geW91ciBjb21wdXRlci4gCk1hZ29yeWVuICA3NCBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkkgYWdyZWUgd2l0aCB5b3Ugb24gc29tZSBzdGFuZHMgYnV0IGRlZmluaXRlbHkgbm90IGFsbC4gCkZpcmVmaWdodGVycyBjb250aW51ZSB0byBiYXR0bGUgc3R1YmJvcm4gYmxhemUKWW91IGNhbid0IGNvbnRyb2wgeW91ciBtb3RoZXIuIFNoZSBpcyBnb2luZyB0byBiZSB3aG8gc2hlIGhhcyBhbHdheXMgYmVlbi4gCklzIGl0IGJlY2F1c2UgSSBhIFBDIGdhbWVyPyBJIG1lYW4gSSBuZXZlciBzZWVuIGFuIGlzc3VlIHdpdGggdGhlIGdyYXBoaWNzIGNhcGFiaWxpdGllcyBvciBoYWQgZXZlbiBvbmUgYnVnLiBUaGUgU3RhcmZpZWxkIHRhbGsgaGFzIG1hZGUgbWUgdW5kZXJzdGFuZCB0aGluZ3MgYSBsaXR0bGUgZGlmZmVyZW50bHkgbm93LiBXaGVuIFRvZGQgcmVwZWF0ZWRseSBtZW50aW9ucyB0aGF0IGl0IHVzLCB3ZSBiZWluZyBhbWJpdGlvdXMgYWxsdWRpbmcgdG8gdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBCR1MsIEkgd291bGRuIGJlIHN1cnByaXNlZCBpZiBjb25zb2xlcyBhcmUgd2hhdCBrZWVwIGNhdXNpbmcgQkdTIHN0dWRpb3MgdG8gZHVtYiBkb3duLiAKU2hlIHNhaWQgQmFpbGV5IHRoZW4gcHVsbGVkIGEgaGFuZGd1biBmcm9tIGhpcyBhbmtsZSBob2xzdGVyLiBTaGUgcmVjYWxsZWQgc2VlaW5nIGhpbSBjb2NrIHRoZSB3ZWFwb24gYW5kIHRoZW4gcG9pbnQgYXQgdGhlIG90aGVyIG1hbiwgd2hvc2UgYmFjayB3YXMgdHVybmVkIGF0IHRoZSB0aW1lLgpZb3Ugd2FudCB0byBtYWtlIHN1cmUgdGhhdCB5b3UncmUgY29tcGxldGVseSBhd2FyZSBvZiB3aGF0IHlvdXIgdGF0dG9vIHJlcHJlc2VudHMgYW5kIHdoYXQgaXQgc3RhbmRzIGZvci4gCkluIGFuIG9kZGx5IGZhbWlsaWFyIHNlcXVlbmNlLCBEZWFuIG9mZmVycyBoaXMgc291bCBmb3IgU2FtJ3MgbGlmZSBiYWNrLCBhbmQgZGVtb25raW5kIGFncmVlcyB0byByYWlzZSBTYW0gYW5kIGtlZXAgRGVhbiBhbGl2ZSBmb3IgYW5vdGhlciB5ZWFyLCBhZnRlciB3YXRjaGluZyBNeSBCbG9vZHkgVmFsZW50aW5lIDNEIGFuZCBkZXRlcm1pbmluZyB0aGF0IGFuIGFjdGluZyBjYXJlZXIgaXMgZm9yZXZlciBvdXQgb2YgaGlzIHJlYWNoLi4gCkxldmVsIDYwL2NvbXBsZXRlZCBhbmQgdW5zdWJzY3JpYmVkIHVzZXIgaGVyZS4KV2hhdGV2ZXIgc3R5bGUgeW91ciBvcHBvbmVudCBlbXBsb3lzLCBoYXZlIGEgc3R5bGUgdGhhdCBjYW4gY291bnRlciB0aGVpciBnYW1lLiAKRG9lcyB0aGUgcG9rZXIgcm9vbSBwcmlvcml0aXplIHNhZmV0eSBhbmQgcHJpdmFjeT8gV2hlbiB5b3UgZGVjaWRlIHRvIGVudGVyIHlvdXIgaW5mb3JtYXRpb24gYW5kIGNyZWRpdCBjYXJkIG51bWJlciwgZG9lcyB0aGUgcG9rZXIgcm9vbSBhc3N1cmUgeW91IG9mIHRoZSBzYWZldHkgb2Ygc3VjaCBpbmZvcm1hdGlvbiBhbmQgdGhhdCB0aGVzZSB3aWxsIG5vdCBiZSBzb2xkPyBBc2lkZSBmcm9tIHBlcnNvbmFsIGluZm9ybWF0aW9uLCBvdGhlciB0aGluZ3MgeW91IG5lZWQgdG8gY29uc2lkZXIgYXJlIHRoZSBmb2xsb3dpbmcgIERldGVybWluZSB3aGF0IHByb3RlY3Rpb24gdGhleSBlbmZvcmNlIHN1Y2ggdGhhdCB0aGUgc29mdHdhcmUgYmVpbmcgdXNlZCBpbiB0aGUgcG9rZXIgcm9vbSBjYW5ub3QgYmUgbWFuaXB1bGF0ZWQgYW5kIHRoYXQgdGhlaXIgc2VydmVycyBhcmUgc2VjdXJlLiAKU2EgbXJlIGV0IG1vaSBub3VzIGVmZm9yb25zIGRlIGxlIHNvdXN0cmFpcmUgYXUgZ3JpZmZlcyBkZSBzYSBzb2V1ciBldCBqJ2luc2lzdGUgcG91ciBxdSdpbCBkbW5hZ2UgbWFpcyBpbCBsJ2Vudm9pZSBib3VsZXIuTiBhdSBsZW5kZW1haW4gZGUgbGEgZ3VlcnJlLCBqJ2FpIHQgZW4gY29uZmxpdCBvdXZlcnQgYXZlYyBtb24gcHJlLCB1biBpbmRpdmlkdSBjZXJ0ZXMgYmllbiBzb3VzIHRvdXQgcmFwcG9ydHMsIHNvY2lhbGVtZW50IHBhcmxhbnQgY2FyIGlsIGVzdCBkZXZlbnUgTWFpcmUgZCd1biBwZXRpdCBwYXRlbGluIGV0IHRhaXQgZXN0aW0gZGFucyB0b3V0ZSBsYSByZ2lvbiBhdSBwb2ludCBkJ2F2b2lyIGV1IHBsdXNpZXVycyBjZW50YWluZXMgZGUgcGVyc29ubmVzIChkb250IHVuZSBtYWpvcml0IGRlIHBlcnNvbm5hbGl0cyBwb2xpdGlxdWVzIGV0IGFkbWluaXN0cmF0aXZlcykgIHNvbiBlbnRlcnJlbWVudC4gCkRlY2sgb2YgRGljZSBtYWtlcyBkaWNlIGdhbWVzIHRoYXQgd29yayBsaWtlIGNhcmQgZ2FtZXM6IFdpdGggbmluZSBkaWNlLCBwbGF5ZXJzIGNhbiByb2xsIHN0cmFpZ2h0cywgZmx1c2hlcyBhbmQgZnVsbCBob3VzZXMsIGFzIGlmIHRoZXkgd2VyZSBwbGF5aW5nIHBva2VyLgpJIGp1c3QgdW5zdXJlIHdoaWNoIHJlc29ydCBpcyB0aGUgbW9zdCBzdWl0YWJsZSBhbmQgb3BlbiB3aXRoIG1hbnkgd2ludGVyIGFjdGl2aXRpZXMuIFNvbWV0aGluZyBsaWtlIEZhbGxzIENyZWVrPy4gClN0YWNrcyByYW5nZSBmcm9tIENIRiA1MDAgdG8gMiwwMDAuIApGb2xkaW5nIGlzIGEgbW92ZSB0aGF0IGlzIGRvbmUgYnkgYSBsb3Qgb2YgZXhwZXJ0IHBsYXllcnMgYW5kIGl0IGlzIHVzZWQgYnkgcHJvZmVzc2lvbmFscyBhcyBhIHN0cmF0ZWd5LiAKWW91IG1pZ2h0IGJlIHNvIGF1dGlzdGljIHRoYXQgeW91IHJlYWxseSBkb3duIHZvdGVkIG1lIGZvciB0aGF0IHJlYXNvbiwgYnV0IEkgZG9uIGJ1eSBmb3IgYSBzZWNvbmQgdGhhdCB0aGF0IHdoYXQgbW9zdCBvZiB0aGUgbmVnYXRpdml0eSB3YXMgYSByZXNwb25zZSB0by4gCkxldCBtZSB0ZWxsIHlvdSwgYXMgSSBsYXkgdGhlcmUgb24gbXkgc2Vjb25kIGZsaWdodCwgSSB0aG91Z2h0ICJJZiBJIGRpZSBub3csIEknbGwgYmUgaGFwcHkiLiAKIkEgbmV3IGdlbmVyYXRpb24gb2Ygc3BhY2UgZmxpZ2h0IHN0YXJ0cyBub3cgd2l0aCB0aGUgYXJyaXZhbCBvZiBTcGFjZVgncyBDcmV3IERyYWdvbiB0byB0aGUgU3BhY2UgU3RhdGlvbiwiIE5BU0EgQWRtaW5pc3RyYXRvciBKaW0gQnJpZGVuc3RpbmUgdHdlZXRlZC4gaGFzIGJlZW4gaGl0Y2hpbmcgcmlkZXMgdG8gYW5kIGZyb20gdGhlIHNwYWNlIHN0YXRpb24gYWJvYXJkIFJ1c3NpYW4gU295dXogc3BhY2VjcmFmdC4gSW4gdGhlIG1lYW50aW1lLCBOQVNBIGlzIHBheWluZyB0d28gY29tcGFuaWVzICAgU3BhY2VYIGFuZCBCb2VpbmcgICB0byBidWlsZCBhbmQgb3BlcmF0ZSBpdHMgbmV4dCBnZW5lcmF0aW9uIG9mIHJvY2tldCBzaGlwcy4KV2h5IFRocmVlV29ya3MgQXBwbGUgQ2hpcHMgY2F1Z2h0IHRoZSBleWUgb2YgSmltIFRyZWxpdmluZwpFU0guIApTbyBubywgbm90IHdvcnRoIGl0LiBJZiB5b3Ugd2FudCB0byBnbyB0aGF0IHJvdXRlLCB5b3UgY2FuIGRvIGl0IHlvdXJzZWxmIGZvciBmcmVlLiBCdXQgZXZlbiB0aGF0IGlzbiB3b3J0aCBpdC4KTXkgaHVzYmFuZCBhbmQgSSB3b3JrZWQgb3V0IGEgc2NoZWR1bGUgdGhhdCBhbGxvd2VkIGJvdGggb2YgdXMgYXQgbGVhc3QgNiA3IGhvdXJzIG9mIGNvbnNlY3V0aXZlIHVuaW50ZXJydXB0ZWQgc2xlZXAuIEkgc2xlcHQgZnJvbSA3cG0gIDNhbSBhbmQgaGUgd2VudCB0byBiZWQgYXQgM2FtIHVudGlsIDEwYW0gb3Igc28uIApFRElUOiBpdCB3b3VsZCBzZWVtIHRoYXQgYW1hem9uIGRlY2lkZWQgdG8gaGF2ZSBvbmUgb2YgdGhlaXIgImZsYXNoIHNhbGVzIiBkdXJpbmcgdGhlIHRpbWUgdGhhdCBJIGRlY2lkZWQgdG8gdGFsayBhYm91dCBpdC4gVW5mb3J0dW5hdGVseSwgdGhlIHRpbWVyIGZvciB0aGUgJDU1IE5ldEdlYXIgUjY3MDAgIm5pZ2h0aGF3ayIgaGFzIGV4cGlyZWQuIApUaGUgdGhpcmQgdmFyaWFudCBvZiBlYXJuaW5nIG1vbmV5IGlzIHRvdXJuYW1lbnRzIHdpdGggZnJlZSBlbnRyYW5jZSBkZXNpZ25lZCB0byBhdHRyYWN0IG5ldyBwbGF5ZXJzIGFuZCBrZWVwIG9sZCBvbmVzLiBJdCBjYW4gYmUgYSB0b3VybmFtZW50IG9uIG9uZSB0YWJsZSB3aXRoIGEgcHJpemUgZnVuZCBvZiAkMTAgb3IgaXQgY2FuIGJlIGEgdG91cm5hbWVudCBmb3IgJDMwMDAwIHdpdGggdGhlIGZpcnN0IGJvbnVzIG9mICQ2MDAwIChhdCBwcmVzZW50IHRoZSBoaWdoZXN0IGZ1bmQgb2YgZnJlZSByb2xsIGlzICQxMDAwMDAhCldpdGggdGhlIHNtYWxsZXN0IGNoYW5jZSB0aGF0IEZhYmlvIGFuZCBEYW4gbWlnaHQgdGFrZSBKZWZmIHVwIG9uIGhpcyBnZW5lcm91cyBvZmZlciB0byBvdXN0IEhvbGx5IGluc3RlYWQsIEphbmUgdm90ZWQgZm9yIFNhc2guCkJlZm9yZSBpdCB3YXMgdGFrZW4gb2ZmbGluZSBvbiBGcmlkYXksIHRoZSBzcGEncyBXZWIgc2l0ZSBhZHZlcnRpc2VkIGEgInZhcmlldHkgb2YgbWFzc2FnZSBtb2RhbGl0aWVzLCIgaW5jbHVkaW5nICJUb2t5byBVbHRpbWF0ZSA0IEhhbmQsIiBhbG9uZyB3aXRoIGEgMTAgcGVyY2VudCBkaXNjb3VudCBmb3IgZmlyc3QgdGltZSBjdXN0b21lcnMgYW5kICJmcmVxdWVudCBndWVzdCIgcGFja2FnZXMuCkhlIGxlZnQgaG9tZSBhdCAxNSAianVzdCB0byB0cnkgYW5kIGdldCBhaGVhZCBhbmQgZG8gc29tZXRoaW5nLiBJIGtub2NrZWQgb24gYSBsb3Qgb2YgZG9vcnMuIgpUbyBiZSBmYWlyLCBIeWRybyBGbGFzayB3YXMgdmVyeSBjb3JkaWFsIGJ1dCBpdCBzdGlsbCBzZWVtcyBhIGJpdCB1bm5lY2Vzc2FyeSBzaW5jZSBJIHdhcyBub3QgY2xhaW1pbmcgdG8gYmUgdGhlbS4gSSB0cnkgdG8gY2xlYXJseSBkaXN0aW5ndWlzaCB0aGF0IG91ciBhY2Nlc3NvcnkgYWRkcmVzc2VzIG15IHBlcmNlaXZlZCBmbGF3IGluIHBhcnQgb2YgdGhlaXIgcHJvZHVjdCB3aGljaCBJIGRvbiB0aGluayB3b3VsZCBjb25mdXNlIHRoZSBwdWJsaWMgaW4gdGhpbmtpbmcgdGhhdCBJIGFtIHJlcHJlc2VudGluZyB0aGUgY29tcGFueS4gTG9sLCBJIG5haXZlbHkgZ290IGV4Y2l0ZWQgd2hlbiBJIHNhdyB0aGUgbWVzc2FnZSwgdGhhdCB0aGV5IHdhbnRlZCB0byB0YWxrIHRvIG1lIGFib3V0IG15IGludmVudGlvbi4gClJ1c3NpYSBoYXMgZXZlcnl0aGluZyBmcm9tIGNvbW11bmlzdHMgdG8gbW9uYXJjaGlzdHMuIFllcywgdGhvc2UgcGFydGllcyB1c3VhbGx5IGdldCBsaXR0bGUgc3VwcG9ydCwgYnV0IHRoYXQgaW4gaXRzZWxmIGlzIG5vdCBldmlkZW5jZSBvZiBkaWN0YXRvcnNoaXAuIFRoZSBVUyBvbmx5IGhhcyBhIGNob2ljZSBiZXR3ZWVuIHRoZSBEZW1vY3JhdHMgYW5kIFJlcHVibGljYW5zICAgZG9lcyB0aGF0IG5vdCBwYXNzIGFzICJsaW1pdGVkIHBvbGl0aWNhbCBwbHVyYWxpc20iPwpQaG90byBGcmFtZSBTdHVkaW8gZm9yIE1hYyBPUyBYLCBkb3dubG9hZCBiZXN0IGFsdGVybmF0aXZlIHNvbHV0aW9ucyBjYXJlZnVsbHkgY2hvc2VuIGJ5IC4gRm90b3IgUGhvdG8gRWRpdG9yIFBob3RvIEVmZmVjdCBDb2xsYWdlIE1ha2VyIEZyZWUgLiBLZXkgRmVhdHVyZXM6IEh1Z2UgcGFsZXR0ZSBvZiBoaWdoIHF1YWxpdHkgZmlsdGVycyBhbGxvd3MgeW91IHRvIGdldCB0aGUgZXhhY3QgZWZmZWN0IHlvdSB3YW50LiAKSWYgdGhlIG90aGVyIHBsYXllciBzaG93cyBoaXMgaGFuZCBhbmQgeW91IGNhbm5vdCBiZWF0IGhpbSwgeW91IGNhbiBnZW5lcmFsbHkganVzdCB0aHJvdyB5b3VyIGhhbmQgYXdheSB3aXRob3V0IHNob3dpbmcuIApIaWdoIFNjaG9vbCBTcG9ydHMgU2NlbmUgTmV3cyBmcm9tIHRoZSBwcmVwIHNwb3J0cyBzY2VuZSwgd3JpdHRlbiBieSBTdW4gc3RhZmYuIApJdCB3YXMgYW4gYXBvbG9neSB0aGF0IHNhaWQgdGhlICJ0aGllZiIgd2FzIGluIGRpcmUgbmVlZCBvZiBxdWljayB0cmFuc3BvcnRhdGlvbiBhbmQgc28gaGUgImJvcnJvd2VkIiB0aGUgZmlyc3QgY2FyIGhlIGZvdW5kIHdpdGggdGhlIGtleXMgaW5zaWRlLiAKRHJ1Z3Mgd2hpY2ggYWN0aXZhdGUgZG9wYW1pbmUgcmVjZXB0b3JzIGRpcmVjdGx5IHVzdWFsbHkgY2F1c2Ugdm9taXRpbmcuIFJlbWVtYmVyLCB0aGUgYnJhaW4gaXNuIGp1c3QgYSBiaW9jaGVtaWNhbCBzb3VwLiAKQWZ0ZXIgc2V2ZXJhbCBkYXlzIHdpdGggbm8gcmVzcG9uc2UgZnJvbSBoZXIgcGFyZW50cywgQ2F0aGVyaW5lIGJlZ2FuIHRvIHdvcnJ5IGFuZCBjYWxsZWQgYW4gZW1wbG95ZWUgb2YgdGhlIENhc3RsZXdvb2QgQ291bnRyeSBDbHViLCB3aGVyZSB0aGV5IGxpdmVkLCB0byBnbyBjaGVjayBvbiB0aGVtLiBUaGlzIHJlc3VsdGVkIGluIGEgOTExIGNhbGwgdG8gcG9saWNlLiBCb3RoIEVybmVzdCBhbmQgQ2hhcmxlbmUgU2NoZXJlciB3ZXJlIGZvdW5kIGJydXRhbGx5IG11cmRlcmVkIGluc2lkZSB0aGVpciBob21lIGF0IDE4IENhc3RsZXdvb2QgRHJpdmUuLiAKIlRoZSBtdXNjbGVzIHdpbGwgcmVsYXggYW5kIGhlciBoZWFkIHdpbGwgZHJvcCBpbnRvIHlvdXIgaGFuZHMuIApBcmdlbnRpbmEgKDg5dGggcGxhY2UpLCBCcmF6aWwgKDU1dGggcGxhY2UpLCBSb21hbmlhICgyMm5kIHBsYWNlKSBhbmQgVmVuZXp1ZWxhICgzM3JkIHBsYWNlKSBhbGwgaGFkIHRoZWlyIGJlc3QgbWFpbiBldmVudCBmaW5pc2hlcyB0byBkYXRlIGluIGxhc3QgeWVhcidzIHRvdXJuYW1lbnQuIApIb3cgY2FuIGEgY2hpbGQgdGhlbiBwYXNzIGFuZCBwcm9jZWVkIHRvIHRoZSBuZXh0IGdyYWRlIGlmIGhpcyBtYXJrcyB3ZXJlIGRldGVyaW9yYXRpbmcsIGJ1dCBoaXMgeWVhciBtYXJrIGFjY29yZGluZyB0byBzYXNhbXMsIHBhc3MgaGltLi4gCkluIHRoaXMgY2FzZSwgdGhlIG9ubHkganVzdGlmaWNhdGlvbiBhcHBhcmVudCBpcyB0aGF0IHRoZSBjb21wYW55IGRvZXMgbm90IHRoaW5rIHRoYXQgbWVuIHNob3VsZCBnaXZlIG1hc3NhZ2VzIHRvIG1pbm9ycyB3aGlsZSB3b21lbiBjYW4gb25seSBkbyBzbyBpbiB0aGUgcHJlc2VuY2Ugb2YgdGhlIG1pbm9yJ3MgcGFyZW50KHMpLiBUaGF0IGJlbGllZiBkb2VzIG5vdCByaXNlIHRvIGEgQkZPUS4gU28gZXZlbiBpZiB0aGUgcnVsZXMgd2VyZSByZXZlcnNlZCwgaXQgd291bGQgc3RpbGwgYmUgZGlzY3JpbWluYXRvcnkuLiAKVGhhdCB3YXMgYSBnb29kIHJlYWQsIHRoYW5rcy4gSXQgaXMgdHJ1ZSB0aGF0IHByaXZhdGUgcmFpbHdheSAob3IgZXZlbiBidXMgbmV0d29ya3MpIG1heSBub3Qgd29yayBzbyB3ZWxsIGluIHN1YiB1cmJhbiBvciBydXJhbCB0b3ducy4gCkF0IHRoaXMgcG9pbnQgaXQgbm90IHJlYWxseSBhIGdyZWF0IFJPSSByZWxhdGl2ZSB0byByaXNrIGFuZCBlZmZvcnQgdW5sZXNzIHRoZSBwcm9wZXJ0eSB2YWx1ZSBjb250aW51ZXMgdG8gYXBwcmVjaWF0ZSAod2hpY2ggc2VlbXMgdW5saWtlbHkpLiBBZGRpdGlvbmFsbHkgc2VsbGluZyBhIHByb3BlcnR5IGlzIGEgbG90IG1vcmUgd29yayBhcyBhIG5vbiByZXNpZGVudCBzbyBhdCB0aGlzIHBvaW50IEkgcHJvYmFibHkganVzdCBnb2luZyB0byBzaXQgb24gaXQgdW50aWwgc3VjaCBhIHRpbWUgSSBtb3ZlIGJhY2sgb3IgcG9zc2libHkgd2hlbiBteSBtb3J0Z2FnZSBjb21lcyB1cCBmb3IgcmVuZXdhbC4uIApZb3UncmUgdGhlIG9uZSB0cmlnZ2VyZWQgYnkgc29tZSBkdWRlJ3MgU29BIGtleWNoYWluLiBUaGF0LCB0byBtZSwgc291bmRzIGxpa2UgdGhlIGxvd2VzdCBjb21tb24gZGVub21pbmF0b3Igb2YgYnV0dGh1cnQuIApSZWFzb25zIGZvciB0aGVpciBvYmplY3Rpb24gYXJlIGZlYXJzIHRoYXQgdGhlIHdvcmtlcnMgd291bGQgY29tbWl0IGNyaW1lIGluIHRoZSBhcmVhLCBzZWR1Y2UgdGhlaXIgbWFpZHMgYW5kIGRhbXBlbiBwcm9wZXJ0eSBwcmljZXMgdGhlcmUuCkxpa2UgbGF0ZXIgb24gdGhlIHdlYnNpdGUgd2hlbiBpdCB0YWxrZWQgYWJvdXQgc2N1cnZ5IGFuZCBob3cgdmFjY2luZXMgbWFkZSBpdCB3b3JzZSBldmVuIHRob3VnaCB3ZSBhbGwga25vdyBzY3VydnkgaXMganVzdCBhIHZpdGFtaW4gZGVmaWNpZW5jeSBhbmQgZG9lc24ndCBoYXZlIGEgdmFjY2luZS4KR2FsbGVyeSBQYXJrbGFuZDogT25lIFllYXIgTGF0ZXJPbmUgWWVhciBBbm5pdmVyc2FyeSBPZiBEZWFkbHkgU2hvb3RpbmcgQXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIEluIFBhcmtsYW5kLCBGbG9yaWRhUEFSS0xBTkQsIEZMT1JJREEgICBGRUJSVUFSWSAxNDogRGV2b24gRnVsbGVyIHB1dHMgYSBwbGFudCBpbiB0aGUgZ3JvdW5kIGF0IGEgZ2FyZGVuIHNldHVwIGluIG1lbW9yeSBvZiB0aG9zZSBsb3N0IGR1cmluZyBhIG1hc3Mgc2hvb3RpbmcgYXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIG9uIEZlYnJ1YXJ5IDE0LCAyMDE5IGluIFBhcmtsYW5kLCBGbG9yaWRhLiBBIHllYXIgYWdvIG9uIEZlYi4gMTR0aCBhdCBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgMTQgc3R1ZGVudHMgYW5kIHRocmVlIHN0YWZmIG1lbWJlcnMgd2VyZSBraWxsZWQgZHVyaW5nIHRoZSBtYXNzIHNob290aW5nLiAoUGhvdG8gYnkgSm9lIFJhZWRsZS9HZXR0eSBJbWFnZXMpCkxhc3Qgd2VlayxQZXJyeSBjYWxsZWQgdGhlIHByb2dyYW0gYSBQb256aSBzY2hlbWUgYW5kIGEgIm1vbnN0cm91cyBsaWUiLgpBIGZldyB3ZWVrcyBhZnRlciBoZSBkcm92ZSBoZXIgdG8gd29yayBoZSB0b2xkIG1lIHRoYXQgc2hlIGFic29sdXRlbHkgcmF2ZWQgYWJvdXQgaG93IHNtYXJ0IEkgd2FzIGluIHRoZSBjbGFzc2VzIHdlIGhhZCB0b2dldGhlciBhbmQgaG93IHNoZSBhY3R1YWxseSBoYWQgaXNzdWVzIHNheWluZyBzb21ldGhpbmcgYmVjYXVzZSBzaGUgZmVhcmVkIHRoYXQgaXQganVzdCB3b3VsZG4gY29tcGFyZS4gCkl0IHJlYWxseSBpcy4gRG8geW91IHJlYWxseSB3YW50IHNvbWVvbmUgaW4gb2ZmaWNlIHRoYXQganVzdCBjYXJlcyBhYm91dCBoaW0gb3IgaGVyc2VsZj8gRG8geW91IHdhbnQgc29tZW9uZSB0aGVyZSB3aG8gaXMganVzdCBpbiBpdCBmb3IgdGhlIG1vbmV5IGFuZCBwZXJrcz8gRG9uIHlvdSB3YW50IHNvbWVvbmUgd2hvIGlzIGdvaW5nIHRvIGhlbHAgY3JlYXRlIGEgc29jaWV0eSB3aGVyZSBldmVyeW9uZSBpcyBlcXVhbCBhbmQgbm8gb25lIGlzIGFidXNlZCBub3QgZXZlbiBhIGJ1ZyBjcmF3bGluZyBvbiB0aGUgZ3JvdW5kLiAKTXVjaCBtb3JlIHRoYW4gZm91ciBjb25jcmV0ZSB3YWxscywgdGhlIFJpc3NvbGUgaG9sZHMgYSBtdWx0aXR1ZGUgb2YgbWVtb3JpZXMuIApBa28gc3RlIHByYXhpLCB1bWllc3RuZW5pZSBpcHUgem5vdmEgYSB6bm92YSwgYnVkZSByb3p2amEgdnphaCBzIHZhZSBkZXRla3RvciBrb3ZvdiBhIHBvdG9tIGFoa28gcm96cG96biBzaWdubG9tIHByZSB6bGF0byB2IHJ6bnljaCBoYmthY2ggYSBwb2RtaWVua2FjaC4uIAoyLjEgRnJlZSBWZXJzaW9uCkFmdGVyIGhlIHN1ZmZlcmVkIGEgc3Ryb2tlIG9uIGEgZmxpZ2h0IHRvIEhhd2FpaSBpbiAxOTk4LCBFaWZlcm1hbiBtb3ZlZCBpbnRvIEJvbm5pZSdzIGhvbWUgYW5kIHNoZSBiZWNhbWUgaGlzIHByaW1hcnkgY2FyZWdpdmVyLiAKQ29tbWVudHMgYW5kIGNvbnRleHR1YWxpemF0aW9uIG1hdHRlci4gRXZlbiBpZiBhbiBpbWFnZSBvZiBhIG1pbm9yIGlzIFNGVywgaWYgdGhlIGNvbW1lbnRzIGFuZCBkaXNjdXNzaW9uIGFyb3VuZCB0aGF0IGltYWdlIGFyZSBzdWdnZXN0aXZlLCB0aGVuIGEgdmlvbGF0aW9uIGlzIGNyZWF0ZWQuIFRoaXMgaXMgd2h5IHlvdSBtYXkgaGF2ZSBzZWVuIFNGVyBwaG90b3MgY29tZSBkb3duIHVuZGVyIHRoaXMgcG9saWN5LgpMb29raW5nIGZvcndhcmQgdG8gdGhpcyB5ZWFyIHRob3VnaCBJIGdvbm5hIHB1dCBpbiBtYXhpbXVtIGVmZm9ydCB0byBsb3NlIHdlaWdodCBhZ2Fpbi4gClNvIHRoZSBmZWFyIGlzIHZlcnkgcmVhbCBhbmQgaXQgbm90IGJlY2F1c2Ugb2YgaG93IGxpa2VseSBpdCBpcyB0byBoYXBwZW4gc3RhdGlzdGljYWxseSBidXQgdGhhdCB5b3UgY2FuIGVuZCB1cCBpbiBvbmUgb2YgdGhlc2Ugc3BhY2VzIHdoZXJlIHlvdSBoYXZlIG5vIGNoYW5jZSBvZiBqdXN0aWNlLiAKRWR1Y2F0aW9uIHNob3VsZCBiZSBhZmZvcmRhYmxlIHRvIGFueW9uZSB3aG8gcXVhbGlmaWVzIGFuZCBzaG91bGQgbm90IHJlcXVpcmUgYSBsaWZldGltZSBvZiBkZWJ0LiAKWW91IHNob3VsZCBnZXQgYSByZWFkaW5nIHdpdGggYSBtYW5ibyBvciBob3VuZ2FuIHRvIGRldGVybWluZSBpZiB5b3UgaGF2ZSBhbnkgc3Bpcml0cyB3aXRoIHlvdSBhbmQgaWYgeW91IHNob3VsZCBzZXJ2ZSB0aGVtLCBhbmQgdGhlIHByaWVzdC9lc3MgY2FuIHRlYWNoIHlvdSBob3cgdG8gZ2V0IHN0YXJ0ZWQuIEkgb2ZmZXIgdGhlc2UgdHlwZXMgb2YgcmVhZGluZ3M7IEkgY2FuIGRvIHRoZW0gYnkgcGhvbmUgb3IgU2t5cGUgaWYgeW91IGRvbiBsaXZlIGluIHRoZSBCb3N0b24sIE1BLCBVU0EgYXJlYS4gUE0gbWUgZm9yIGRldGFpbHMuLiAKWW91IGFyZSBhIHRydWx5IGluY3JlZGlibGUgYW5kIHRhbGVudGVkIGFydGlzdC4uIApKb2luIHRoZSBodW5kcmVkcyBvZiBPa2xhaG9tYSBEaXZvcmNlZCBTaW5nbGVzIGFscmVhZHkgb25saW5lIGZpbmRpbmcgbG92ZSBhbmQgZnJpZW5kc2hpcCB3aXRoIHNpbmdsZXMgaW4gTmVhciBNZSEgTW91bnRhaW4gU2luZ2xlcyBoYXMgc2h1dCBkb3duLCBhcyBvZiBTZXB0ZW1iZXIgMjAxOCwgYWZ0ZXIgYXBwcm9hY2hpbmcgZG9taW5pY2FuIHNleHkgd29tZW4gMTAgeWVhcnMgb2Ygc3VjY2Vzc2Z1bCBvcGVyYXRpb24uIEFkdWx0RnJpZW5kRmluZGVyIGlzIHRoZSBwbGFjZSB0byBiZSBmb3IgZnJlZSBzZXggYW5kIGhvb2t1cHMgd2l0aCBsb2NhbCBtaWxmIGluZGlhbmFwb2xpcyBmdWNrIGJ1ZGRpZXMgTG9va2luZyBmb3Igb3ZlciA1MCBkYXRpbmc/IFJlYWQgNTYgQm9va3MgUmV2aWV3cyAgIEFtYXpvbi4gCk9yIGEgMTkgeWVhciBvbGQgZ2lybCwiIENyb29rIHNhaWQuIApXaGV0aGVyIERhaW1sZXJDaHJ5c2xlcidzIFRodXJzZGF5IGFubm91bmNlbWVudCB0aGF0IGl0IG1heSBiZSBzZXZlcmluZyB0aWVzIHdpdGggdHJvdWJsZWQgSmFwYW5lc2UgYXV0b21ha2VyIE1pdHN1YmlzaGkgTW90b3JzIGlzIGEgcGxveSB0byBtb3RpdmF0ZSB0aGUgb3RoZXIgRGFpbWxlckNocnlzbGVyJ3MgYW5ub3VuY2VtZW50IHRoYXQgaXQgd2lsbCBiZSBzZXZlcmluZyB0aWVzIHdpdGggdHJvdWJsZWQgYXV0b21ha2VyIE1pdHN1YmlzaGkgTW90b3JzIHdpbGwgc3VyZWx5IGJlIGRldmFzdGF0aW5nIGZvciB0aGUgSmFwYW5lc2UgY29tcGFueS4gKFBob3RvOiBBbGV4YW5kcmEgU3RyYXViLCBDYW5hZGlhbiBBdXRvIFByZXNzKSBzaGFyZWhvbGRlcnMgaW52b2x2ZWQgdG8gY29vcGVyYXRlIGluIGl0cyByZXN0cnVjdHVyaW5nIHBsYW5zLCBvciBhIHJlYWxpemF0aW9uIHRoYXQgaXRzIGNvcmUgYnJhbmRzLCBNZXJjZWRlcyBCZW56IGFuZCBDaHJ5c2xlciwgbmVlZCBhbmQgZGVzZXJ2ZSBtb3JlIGF0dGVudGlvbiBhbmQgbW9uZXksIGNhbid0IGJlIHNhaWQgZm9yIHN1cmUuIApBY2NvcmRpbmcgdG8gdGhlIENvbG9yYWRvIEZhbGxlbiBGaXJlZmlnaHRlcnMgRm91bmRhdGlvbiB3ZWJzaXRlLCB0aGUgdHJpYnV0ZSBob25vcnMgZmlyZWZpZ2h0ZXJzIHdobyBoYXZlIGxvc3QgdGhlaXIgbGl2ZXMgcHJvdGVjdGluZyB0aGUgbGl2ZXMgYW5kIHByb3BlcnR5IG9mIHRoZSBwZW9wbGUgb2YgQ29sb3JhZG8uCk1lbiB0aHJhc2ggd29tZW4gYXQgdGVubmlzLiBBbWF0ZXVyIG1hbGUgc29jY2VyIHRlYW1zIHRocmFzaCBwcm9mZXNzaW9uYWwgZmVtYWxlIHNvY2NlciB0ZWFtcy4gCk9uIERlYy4gCkZhbGxhY3kgb2YgVHJhZGl0aW9uYWwgT2RkcyBUaGlua2luZwpIZSB3YXMganVzdCBzYXlpbmcgdGhlIE1hbmFmb3J0IGNhc2UgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGF0LiIuIApNZXNzaW5nIHdpdGggdGhlbSBvbiBhIHNlbWkgcmVndWxhciBiYXNpcyBpcyBqdXN0IHBhcnQgb2Ygb3duaW5nIGEgZ3VpdGFyIGxpa2UgY2hlY2tpbmcgdGhlIGFpciBwcmVzc3VyZSBpbiB5b3VyIHRpcmVzIGlzIGZvciBhIGNhci4uIApBcyBvdGhlcnMgaGF2ZSBwb2ludGVkIG91dCwgeW91IGNhbiBtYWtlIDYway95ZWFyIGJ5IGp1c3QgZ3JhZHVhdGluZyB3aXRoIGEgaGFsZiBkZWNlbnQgZGVncmVlIGZyb20gYSBoYWxmIGRlY2VudCBzY2hvb2wuIGJ1dCBpbiBvcmRlciB0byBtYWtlIHRoYXQgc2FtZSBpbmNvbWUgZnJvbSBzb2xlbHkgb25saW5lIHBva2VyLCB5b3UgaGF2ZSB0byBiZSBhIHByZXR0eSBnb29kIHBsYXllci4gSW4gb3RoZXIgd29yZHMsIEkgZ3Vlc3Mgd2hhdCBJIHNheWluZyBpcyB0aGF0IHRoZXJlIGVhc2llciB3YXlzIHRvIG1ha2UgdGhlIHNhbWUgaW5jb21lLCB3aXRoIHNpZ25pZmljYW50bHkgbGVzcyByaXNrLgoiVGhpcnR5IHNpeCBwZW9wbGUgZGllZCBpbiBhIHNpbmdsZSByb29tIHdoaWxlIHBvbGljZSB3ZXJlIG9ubHkgcGVydXNpbmcgYSBzaW5nbGUgZ3VubWFuLiBUaGVyZSBhcmUgcXVlc3Rpb25zIGFib3V0IHRoZSBzcHJpbmtsZXIgc3lzdGVtIGluIHRoZSByb29tOyBob3cgY29tZSB0aGUgY2FycGV0cyB3ZXJlIGZsYW1tYWJsZTsgYW5kIHJlYWxseSwgd2hhdCB0b29rIHRoZSBzbyBsb25nIHRvIGF0dGVuZCB0byB0aGUgdmljdGltcywgbW9zdCBvZiB0aGVtIGJlaW5nIGhvdGVsIGd1ZXN0cz8iCk5vdCBvbmx5IHRoYXQsIGJ1dCB5b3UgZ2F2ZSBoaW0gYSBwcmljZSB0aGF0IGlzIGdvaW5nIHRvIGdldCBjYWxsZWQgc28gc28gb2Z0ZW4uIEhlIGp1c3QgaGFzIHRvIGNhbGwgJDU3MCB3aXRoIHRoZSBwb3QgY3VycmVudGx5IGF0ICQxMjEwLiBIZSBnb2luZyB0byBoYXZlIHRvIGNhbGwgaGVyZSB3aXRoIGhhbmRzIGFzIGJhZCBhIEsgaGlnaCAod2l0aCBkcmF3cykgYW5kIHlvdSBob2xkaW5nIDYgaGlnaC4gCldlIGFsd2F5cyBmcmV0IG92ZXIgbmV3IHRoaW5ncywgYnV0IHNvIGZhciwgaXQgaGFyZCB0byBzZWUgYSBzb2NpYWwgZG93bnNpZGUgdG8gdGhlIEludGVybmV0LiAKSnVzdCBsaWtlIFRBIGFuZCBtdWx0aWZpZHVzIGluIHRoZSBiYWNrLCB0aGUgYWx0ZXJlZCBtdXNjbGUgYWN0aXZhdGlvbiBpcyBhIHJlc3VsdCBvZiB0aGUgcGFpbiwgbm90IHRoZSBjYXVzZSwgYW5kIHlvdSBqdXN0IG5lZWQgdG8gZ2xvYmFsbHkgc3RyZW5ndGhlbiB0aGUgbXVzY2xlcyB0byBtYWtlIGEgZGlmZmVyZW5jZSAoaW4gdGhlIGNhc2Ugb2YgVk1PLCBqdXN0IHN0cmVuZ3RoZW4gdGhlIHF1YWRzIGluIGdlbmVyYWwhKSA0IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQnJldyBDaXR5IGNoZWNraW5nIGluLiAKV2Uga25ldyB3ZSB3YW50ZWQgdG8gZ2V0IG1hcnJpZWQgYWZ0ZXIgMyBtb250aHMuIAozKSBMb3JldHRhOiAxODMwIDE5MzAsIDEwMEUuIFJvbSwgMjYgeW8sIHNsaWdodGx5IHNhZ2d5IEIgY3VwLCBsb25nIGJydW5ldHRlLCBmYWlybHkgcHJldHR5LCBzbGltLCBtb2RlbCwgMTY1Y20sIGZpdmUgbW9udGhzIGF0IFNoYXJrcywgY2FuIGtpc3MgZXZlbiBmb3IgMzAgbWluIDUwIEUgc2Vzc2lvbnMuIApBZnRlciB0aGF0IHdpbiBJIHdhcyBtb3RpdmF0ZWQgdG8gZ3JpbmQgYWdhaW4gYW5kIGxlYXJuIGFuZCBwb2tlciB3YXMgRlVOLiBJIHJlZGVkaWNhdGVkIG15c2VsZiBhbmQgcmVhbGx5IGdvdCBhIGxvdCBiZXR0ZXIuIFBsYXlpbmcgSFUgd2FzIHRoZSB0dXJuaW5nIHBvaW50IGluIG15IHBva2VyIGNhcmVlci4gCkdyYWQgc2Nob29sICAgYWguIERpZCB5b3UgZ3JhZHVhdGU/IFdoYXQgZGlkIHlvdSBzdHVkeT8gSSBnb3QgYSBNQkEgYmFjayBpbiAxOTk0LiAKUnVzc2lhIGFuZCBTeXJpYSBoYXZlIGJlZW4gb2NjYXNpb25hbGx5IGJvbWJpbmcgdGhlIG5vbiBJU0lTIHJlc2lzdGFuY2UsIGFuZCBSdXNzaWFuIG1lcmNlbmFyaWVzIGhhdmUgYmVlbiBwdXJwb3NlbHkgYXR0YWNraW5nIFVTIGVuY2FtcG1lbnRzLCBzYXlpbmcgSSBjb3VsZCBzd29ybiB0aGV5IHdlcmUgSVNJUy4gTkFUTyBwcmVzZW5jZSBlbWJlZGRlZCB3aXRoIHRoZSBLdXJkcyBoYXMgcHJldmVudGVkIFJ1c3NpYSBhbmQgU3lyaWEgZnJvbSBvdXRyaWdodCB3aXBpbmcgdGhlbSBmcm9tIHRoZSBtYXAuIFdpdGggdGhlIFVTIHJldHJlYXRpbmcgYW5kIGJ5IHJlbW92aW5nIGFsbCB0aGUgRnJlbmNoIGNpdGl6ZW4gSVNJUyBQT1dzIGZyb20gU3lyaWEsIFJ1c3NpYSBhbmQgU3lyaWEgY2FuIHN0YXJ0IGNhcnBldCBib21iaW5nIHRoZSBLdXJkcyB3aXRob3V0IHdvcnJ5aW5nIGFib3V0IGtpbGxpbmcgVVMgc29sZGllcnMgYW5kIEZyZW5jaCBjaXRpemVucyBpbiBjb2xsYXRlcmFsIGRhbWFnZSwgSVNJUyBvciBub3QuLiAKU3RhdGlzdGljcyBDYW5hZGEncyBuZXcgdGFsbHkgb2YgZWNvbm9taWMgb3V0cHV0IHNob3VsZCBwcm9tcHQgZ3V0IGNoZWNrcyBhbGwgb3ZlciBPdHRhd2EsIGZyb20gdGhlIGNlbnRyYWwgYmFuayB0byB0aGUgUHJpbWUgTWluaXN0ZXIncyBPZmZpY2UgdG8gdGhlIG9wcG9zaXRpb24gYmVuY2hlcy4gRXZlcnlvbmUgYXBwZWFycyB0byBoYXZlIG92ZXJlc3RpbWF0ZWQgQ2FuYWRhJ3MgYWJpbGl0eSB0byBnZW5lcmF0ZSBlY29ub21pYyBncm93dGggd2l0aG91dCB0aGUgbml0cm91cyBib29zdCBvZiB6ZXJvIGludGVyZXN0IHJhdGVzLiAKQXMgYSB0ZWVuYWdlciBJIGhhZCBhIHJlY3VycmluZyBuaWdodG1hcmUgdGhhdCBJIHdhcyBhdCBhIHRyYWluIHN0YXRpb24sIG9wZW5pbmcgb25lIG9mIHRob3NlIGxvY2tlcnMgd2hlcmUgeW91IGNhbiBsZWF2ZSB5b3VyIGx1Z2dhZ2UsIGFuZCBpdCBjb250YWluZWQgbXkgZmF0aGVyLCBoYWNrZWQgdG8gcGllY2VzLgpUaGUgQmh1dHRvIGZhbWlseSBoYXMgaGFkIGJhZCBsdWNrIHdpdGggdW5uYXR1cmFsIGRlYXRoLCBmb3IgZXhhbXBsZSwgaW4gdGhlIGNhc2Ugb2YgQmlsYXdhbCdzIHVuY2xlcywgTXVydGF6YSBhbmQgU2hhaG5hd2F6LCBzb25zIG9mIFpBIEJodXR0by4gU2hhaG5hd2F6IGRpZWQgYXQgMjYgaW4gSnVseSAxOTg1LCBpbiBOaWNlLCBGcmFuY2U7IGhpcyBmYW1pbHkgY2xhaW1lZCBoZSB3YXMgcG9pc29uZWQuIApJZiB5b3Ugd2lzaCB0byBkaXNjdXNzIHNvbWV0aGluZyByZWxhdGVkIHRvIHRoZSBzdWJyZWRkaXQgaXRzZWxmIHRoZW4gcGxlYXNlIHV0aWxpc2UgdGhlIHN0aWNraWVkIFttZXRhXSBwb3N0cyBwcm92aWRlZCBvciBzZW5kIHRoZSBtb2RlcmF0b3JzIGEgbW9kbWFpbCBpZiBpdCBpcyB1cmdlbnQgb3IgcHJpdmF0ZQpUaGVyZSBhcmUgNTEgY2FyZHMgbGVmdCwgMTIgb2Ygd2hpY2ggYXJlIGZhdm91cmFibGUsIHNvIHRoZSBwcm9iYWJpbGl0eSB0aGF0IHdlJ2xsIGdldCB0d28gY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBpcyAoNTIgLyA1MikgICgxMiAvIDUxKSA9IDQgLyAxNy4uIApUaGUgbWFsbCBpbiBHcmVlbiBIaWxscyBoYXMgYSBsb3Qgb2YgaGlnaGVyIGVuZCBjbG90aGluZyBzdG9yZXMgaWYgeW91IGNhbiBnZXQgb3V0IHRoZXJlLiAKWW91cmUgaW4gc3VwZXIgYnVzeSBwbGFjZXMgYW5kIHJpZGluZyBsaWtlIHlvdXJlIGFuIGFnZ3Jlc3NpdmUgcmlkZXIgd2hvIGJlZW4gZG9pbmcgdGhpcyBmb3IgeWVhcnMuIApUaGF0IGNvdW50cyBhcyBwYXJ0aWNpcGF0aW5nLiAKQWNjb3JkaW5nbHksIHBvbGljZSBoYWQgYXJyZXN0ZWQgMjkgcGVvcGxlLCBidXQgdGhlIG1hZ2lzdHJhdGUgaGFkIHNvb24gZ3JhbnRlZCB0aGVtIGJhaWwuLiAKUm9obSBsb3ZlZCBCZXJsaW4gZ2F5IHNjZW5lIGFuZCBtZW4sIG1lbiwgbWVuLiAKRG9ua2luQXJvdW5kICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkl0IGlzIGFsbCB0b28gZWFzeSB0byBpbWFnaW5lIGEgd29ybGQgd2hlcmUgYSBnb3Zlcm5tZW50IHNwb25zb3JlZCBmb3JtIG9mICJpZGVudGlmaWNhdGlvbiIgd291bGQgYmUgcmVxdWlyZWQgdG8gdXNlIGFueSBmb3JtIG9mIGVsZWN0cm9uaWMgcGF5bWVudC4gCkRlcGFydG1lbnQgb2YgRW5lcmd5LiAKTWlzcyBNYXJpZSBTdG9jaywgWW9yaywgc3BlbnQgdGhlIHdlZWsgZW5kIHdpdGggaGVyIHBhcmVudHMsIE1yLiBhbmQgTXJzLiBTLiBXLiBTdG9jay4gSGFycnkgQWxiZXJ0LCBQaGlsYWRlbHBoaWEsIHNwZW50IGxhc3Qgd2VlayB3aXRoIGhpcyBtb3RoZXIsIE1ycy4gU2FyYWggRFFVQlQgUEFSRE9OIEFsYmVydC4gTXJzLiBMZWFoIEJha2VyLCBFYXN0IEJlcmxpbiwgd2hvIGhhZCBiZWVuIHNwZW5kaW5nIHNvbWUgdGltZSB3aXRoIGhlciBkYXVnaHRlciwgTXJzLiBNci4gYW5kIE1ycy4gVy4gClRvcnR1cm91cyByZWdpbWUgYmVoaW5kIE1lZ2hhbidzIGdsb3NzeSBtYW5lCldoYXQgd2UgcGVyY2VpdmVkIGFzIGEgZmlnaHQgYWdhaW5zdCBjb21tdW5pc3Qgd29ybGQgcnVsZSwgdGhlIFZpZXRuYW1lc2Ugc2F3IGFzIGFub3RoZXIgZmlnaHQgZm9yIGluZGVwZW5kZW5jZS4gClRoaXMgc3Bhc20gY2F1c2VzIGEgcGVyc29uIHRvIHRha2UgYSBzaG9ydCwgcXVpY2sgYnJlYXRoIHRoYXQgaXMgdGhlbiBpbnRlcnJ1cHRlZCBieSB0aGUgY2xvc2luZyBvZiB0aGUgZXBpZ2xvdHRpcyAoYSBmbGFwIHRoYXQgcHJvdGVjdHMgdGhlIGdsb3R0aXMsIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSB2b2NhbCBjb3JkcykuIApUaGVuLCBwZnJlYWsgc2hvdyB3aWxsIHRha2UgY2VudGVyIHN0YWdlISBwZnJlYWsgc2hvdyBpcyBrbm93biBhcyB0aGUgcHJlbWllcmUgcGFydHkgYmFuZCBvZiB0aGUgbWlkd2VzdCEgZXhwZWN0IG5vbiBzdG9wIGVudGVydGFpbm1lbnQgZnJvbSB0aGlzIHZlcnkgcG9wdWxhciBiYW5kIGZyb20gc3RhcnQgdG8gZmluaXNoISB0aGV5IHdpbGwgcGxheSBhbGwga2luZHMgb2YgbXVzaWMgZnJvbSByb2NrIHRvIGZ1bmsgdG8gZGlzY28gdG8gcmFwISBhcyBmb3Igc2F0dXJkYXkncyBmZWF0dXJlZCBsaXZlIGVudGVydGFpbm1lbnQsIHRoZSBmZXN0aXZhbCBpcyBnb2luZyBjb3VudHJ5ISB3ZSBhcmUgcGFydG5lcmluZyB3aXRoIHd0aGkgaGkgOTkgcmFkaW8gdG8gYnJpbmcgdHdvIHJpc2luZyBjb3VudHJ5IG11c2ljIGFydGlzdHMgYW5kIGhpZ2ggZW5lcmd5IGVudGVydGFpbm1lbnQgdG8gdGhlIGJpZyBzdGFnZSEgZ2FycmV0dCBiaWdncywgd2lsbCBzdGFydCB0aGluZ3Mgb2ZmIG9uIHNhdHVyZGF5IHdpdGggaGlzIGRpc3RpbmN0aXZlIGNvdW50cnkgc291bmQsIGZvbGxvd2VkIGJ5IHRoZSBiaWcgZnVuIGJhbmQsIGEgaGlnaCBlbmVyZ3kgIm5ldyBpbmZvcm1hdGlvbiBvbiB0aGUgd2VzdCB0ZXJyZSBoYXV0ZS4gCklmIHlvdSBsZWF2ZSB5b3VyIGNhcmRzIHVucHJvdGVjdGVkLCB0aGUgZGVhbGVyIG1pZ2h0IG11Y2sgdGhlbSAobWl4IHdpdGggZGlzY2FyZHMpIGJ5IG1pc3Rha2UsIGFuZCB0aGVyZSBpcyBubyB3YXkgeW91IGNhbiByZXRyaWV2ZSB0aGVtLiAKRGVsaWJlcmF0ZWx5IG1ha2UgdGhpbmdzIHBsZWFzYW50IGFuZCByZWxheGluZyB0aHJvdWdoIHB1dHRpbmcgYSBmZXcgZmxvd2Vycywgc3dlZXQgc2NlbnRlZCBjYW5kbGUsIHNvZnQgYnV0IGNoZWVyZnVsIG11c2ljLCBhbmQgY29sb3JmdWwgcGljdHVyZXMuIFRoaXMgaXMgYSBsb3ZpbmcsIHNvb3RoaW5nLCBhbmQgY2FyaW5nIHdheSB0byB0aGFuayB5b3VyIHdpZmUgZm9yIGFsbCB0aGUgZWZmb3J0cyBzaGUgZXhlcnRlZCB0byBrZWVwIHlvdXIgcmVsYXRpb25zaGlwIHdpdGggeW91ciBraWRzIHNtb290aCBhbmQgaGFwcHkuIEJlbG93IGFyZSB0aGUgc3RlcHMgdG8gc2hvdyB5b3VyIGxvdmUsIGFwcHJlY2lhdGlvbiBhbmQgYWZmZWN0aW9uIHRvIHlvdXIgd2lmZSB0aHJvdWdoIGEgcmVzdGZ1bCBtYXNzYWdlLi4gClRoZW4gdGhlIHJlcXVpcmVkIHByb2JhYmlsaXR5IGlzIDI4IC8gNTIgPSA3IC8gMTMuLiAKQW5kIGFmdGVyIGJvdGggQmFlbCBhbmQgS2ltYXJpcyBWaWRhciB0cmFzaGVkIGVhY2ggb3RoZXIsIE1hY2t5IGdvZXMgZm9yIHRoZSBIYWlsIE1hcnkgYXBwcm9hY2ggKGFzIGlmIGhpcyBrYW1pa2F6ZSBjaGFyZ2UgZGVlcCBpbnRvIFJ1c3RhbCBmbGVldCB3YXNuIEhhaWwgTWFyeSBlbm91Z2gpIGFuZCBkcmFnZ2VkIGhpcyBtb3J0YWxseSBpbmp1cmVkIGFyc2UgYXMgaGUgdHJpZXMgdG8gYXNzYXNzaW5hdGUgUnVzdGFsIHdpdGggaGlzIHNpZGVhcm0uIE5hdHVyYWxseSwgR2FlbGlvIGlzIHRoZXJlIHRvIHN0b3AgaGltLCBzaG90cyBhcmUgZmlyZWQsIHRoZXkgaGFkIG9uZSBsYXN0IHRhbGsgYW5kIE1hY2t5IHBhc3NlcyBhd2F5IGEgZmFpbGVkIHRyYWl0b3IgdG8gR2phbGxhcmhvcm4uIApPaCwgYW5kIGZpbmQgc29tZSBleCBtZW1iZXJzIG9mIHRoYXQgY2h1cmNoLiBZb3UgbGVmdCBhIHdvcmxkIGFsbCB5b3VyIGNoaWxkaG9vZCBtZW1vcmllcyBhcmUgaW4gZm9yIGEgd29ybGQgdGhhdCBjYW4gcmVsYXRlIHRvIHRoZW0gYXQgYWxsLgoiSXNuJ3QgaXQgdGltZSB0byBnbyBob21lPyIgc2FpZCBTdGVwYW4gQXJrYWR5ZXZpdGNoLgpUaGUgYmVzdCBhcmUgMTAwJSBjbGF5IGNoaXBzLCBidXQgdGhlc2Ugd2lsbCBiZSBmYWlybHkgZXhwZW5zaXZlLiAKVG8gb3ZlcmNvbWUgeW91ciBnYW1ibGluZyBwcm9ibGVtcywgeW91IGFsc28gbmVlZCB0byBhZGRyZXNzIHRoZXNlIGFuZCBhbnkgb3RoZXIgdW5kZXJseWluZyBjYXVzZXMgYXMgd2VsbC4gVGhlIGZpcnN0IHN0ZXAgaXMgdG8gc2VwYXJhdGUgdGhlIG15dGhzIGZyb20gdGhlIGZhY3RzIGFib3V0IGdhbWJsaW5nIHByb2JsZW1zOk15dGhzIEZhY3RzIGFib3V0IEdhbWJsaW5nIFByb2JsZW1zTXl0aDogWW91IGhhdmUgdG8gZ2FtYmxlIGV2ZXJ5IGRheSB0byBiZSBhIHByb2JsZW0gZ2FtYmxlci5GYWN0OiBBIHByb2JsZW0gZ2FtYmxlciBtYXkgZ2FtYmxlIGZyZXF1ZW50bHkgb3IgaW5mcmVxdWVudGx5LkZhY3Q6IFByb2JsZW1zIGNhdXNlZCBieSBleGNlc3NpdmUgZ2FtYmxpbmcgYXJlIG5vdCBqdXN0IGZpbmFuY2lhbC5GYWN0OiBHYW1ibGluZyBwcm9ibGVtcyBhZmZlY3QgcGVvcGxlIG9mIGFsbCBsZXZlbHMgb2YgaW50ZWxsaWdlbmNlIGFuZCBhbGwgYmFja2dyb3VuZHMuRmFjdDogUHJvYmxlbSBnYW1ibGVycyBvZnRlbiB0cnkgdG8gcmF0aW9uYWxpemUgdGhlaXIgYmVoYXZpb3IuRmFjdDogUXVpY2sgZml4IHNvbHV0aW9ucyBtYXkgYXBwZWFyIHRvIGJlIHRoZSByaWdodCB0aGluZyB0byBkby4gUHJvYmxlbSBnYW1ibGVycyBhbHNvIHR5cGljYWxseSBkZW55IG9yIG1pbmltaXplIHRoZSBwcm9ibGVtIGV2ZW4gdG8gdGhlbXNlbHZlcy4gCkluIFBoYXNlIDIgdGhvdWdoIGFnYWluc3QgdGhhdCBtb2RkZWQgUkZTIHRoYXQgbG9icyAoZnJvbSBsZWZ0IHRvIHJpZ2h0KSBEdWFsIEJyZWFjaCBtaXNzaWxlIGxhdW5jaGVyICgyIHBvaW50cyBlYWNoKS4gSHVsbCBNaXNzaWxlIExhdW5jaGVyICgyIHBvaW50cyBidXQgNCB3aGVuIGl0IGhpdHMgYW4gZW1wdHkpLiBBbmQgYSBiaWcgSW9uIHRoYXQga25vY2tzIGRvd24gdHdvIHNoaWVsZHMgb24gYSBoaXQuIEkganVzdCBkaWRuIHJlYWxseSBzdGFuZCBhIGNoYW5jZS4KSXQncyBqdXN0IHlvdSBhbmQgeW91ciBwb2tlciBnYW1lIHNraWxscy4uIApJbW1lZGlhdGVseSBzZWxlY3QgRVhJVEdBTUUsLiAKQXVzIGRpZXNlbSBBbmxhc3MgaGF0IGRpZSBORk8gZWluIEp1YmlsdW1zZmFocnJhZCBoZXJhdXNnZWdlYmVuLiBFaW4gRXhlbXBsYXIgZGllc2VyIGxpbWl0aWVydGVuIFNvbmRlcmF1ZmxhZ2UgaGF0IGVpbmVuIFdlcnQgdm9uIGNhLiAxMC4wMDAgRXVybyB1bmQgd2lyZCBhdXNzY2hsaWVzc2xpY2ggYW4gIkZyZXVuZGUiIGRlciBORk8gdmVya2F1ZnQuIFp1bSBMaWVmZXJ1bWZhbmcgZGVzIEZhaHJyYWRzIGdlaHJlbiB6ZWhuIEVwbyBTcHJpdHplbiBzb3dpZSBlaW5lIFNwZXppYWxoYWx0ZXJ1bmcgZnIgZGFzIEZhaHJyYWQuIERpZSBIYWx0ZXJ1bmcgaXN0IGZyIGRyZWkgU3ByaXR6ZW4gYXVzZ2VsZWd0LCBkaWUgZGlyZWt0IHdocmVuZCBkZXIgRmFocnQgaW5qaXppZXJ0IHdlcmRlbiBrbm5lbi4gICAgICAgIE9yaWdpbmFsIEp1YmlsdW1zZmFocnJhZCBkZXIgTkZPCkkgdGhpbmsgeW91IGNvdWxkIGFsc28gZ2V0IGEgbG90IGJldHRlciBxdWl0ZSBlYXNpbHkgaWYgeW91IGhhdmVuIHRyYWluZWQgYSBsb3QuIApCZWZvcmUgSSBpbnRlcnZlbmUsIHNvbWVvbmUgaGFzIGJlYXRlbiBtZSB0byBpdCwgYnV0IHNoZSdzIGluc2lzdGVudCBzaGUncyBjYXVzaW5nIG5vIGhhcm0uIApKdXN0IGJlY2F1c2UgSSBkb24gc2F5IGFueXRoaW5nLiBJIGRvIHRoaXMgYmVjYXVzZSBpZiBJIGV2ZW4gcmVwbHkgdG8gdGhlIGZsYW1lIGluIHNvbWUgd2F5LCBJIHdpbGwgZ2V0IHJlcG9ydGVkLiAKRm9yIGRldGFpbHMgb24gbW9kZXJhdGlvbiBwcm9jZWR1cmVzLCBzZWUgdGhlSWYgaGlzdG9yeSBzdHVkaWVzIG91ciBwYXN0IGFuZCBzb2NpYWwgc2NpZW5jZXMgc3R1ZHkgb3VyIHByZXNlbnQsIHdoYXQgaXMgdGhlIHN0dWR5IG9mIG91ciBmdXR1cmU/IEZ1dHVyZShzKSBTdHVkaWVzIChjb2xsb3F1aWFsbHkgY2FsbGVkICJmdXR1cmUocykiIGJ5IG1hbnkgb2YgdGhlIGZpZWxkIHByYWN0aXRpb25lcnMpIGlzIGFuIGludGVyZGlzY2lwbGluYXJ5IGZpZWxkIHRoYXQgc2Vla3MgdG8gaHlwb3RoZXNpemUgdGhlIHBvc3NpYmxlLCBwcm9iYWJsZSwgcHJlZmVyYWJsZSwgb3IgYWx0ZXJuYXRpdmUgZnV0dXJlKHMpLgpNb3Jlb3ZlciwgYSBtb3JhbCBib29zdCBhcyBhbiBhd2FrZW5pbmcgZG9lc24gbWFrZSBzZW5zZSBhcyB0aGUgdGVybSBpbXBsaWVzIHRoYXQgdGhleSBhcmUgdXBncmFkaW5nIHBlcm1hbmVudGx5LiBNb3JhbCBib29zdHMgKHdoaWxlIHN0cm9uZyBhbmQgcmVhc29uYWJsZSkgYXJlIHRlbXBvcmFyeS4gMCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KV2hhdCBpZiB0aGUgcmVhbCBkYW5nZXIgdG8gQW1lcmljYW4gZGVtb2NyYWN5IGlzIG5vdCB3b3JraW5nIGNsYXNzIGFuZCBpZ25vcmFudCB3aGl0ZSBmb2xrcyB3aG8geWVsbCB0aGluZ3MgbGlrZSAia2VlcCB0aGUgZ292ZXJubWVudCBvdXQgb2YgbXkgTWVkaWNhcmUiIGJ1dCBhIGdyb3VwIG9mIGVsaXRlIGFuZCBleHRyZW1lbHkgd2VhbHRoeSAiZ3JlYXQgd2hpdGVzIiB3aG8gd291bGQgbmV2ZXIgbWFrZSBhIHB1YmxpYyBzcGVjdGFjbGUgb2YgdGhlbXNlbHZlcyBvbiB0aGUgZXZlbmluZyBuZXdzPy4gCkNlIG1kZWNpbiBhbXJpY2FpbiBkaXZpc2EgbGUgY29ycHMgZW4gZGl4IHpvbmVzLCBjb21wcmlzZXMgZW50cmUgbGEgdHRlIGV0IGxlcyBkb2lndHMsIGFpbnNpIHF1ZSBsZXMgb3J0ZWlscy4gU2Vsb24gbHVpLCBsIGNpcmN1bGFudCBkYW5zIGNlcyB6b25lcyB0cmF2ZXJzZSBsZSBjb3JwcyBqdXNxdSBwb2ludHMgcmZsZXhlcyBkZXMgbWFpbnMgZXQgZGVzIHBpZWRzLiBFdW5pY2UgRC4gSW5ncmFtIGR2ZWxvcHBhIHVsdHJpZXVyZW1lbnQgbGVzIHRyYXZhdXggZGUgRml0Z2VyYWxkIGVuIGNyYW50IGxhIFJmbGV4b2xvZ2llLCBzb3J0ZSBkZSBtYXNzYWdlIHBhciBjb21wcmVzc2lvbiBxdWkgc2UgY29uY2VudHJlIHByZXNxdWUgZXhjbHVzaXZlbWVudCBzdXIgbGVzIHBpZWRzLCBldCBxdWkgZGlmZnJlICBwZWluZSBkZSBsYSBtdGhvZGUgY2hpbm9pc2Ugb3JpZ2luZWxsZS4KQW55IGV2ZW50LCBJIHNoYXJlIHRoaXMgbm93IGZvciB0aGUgZ3JhcGhpY3MsIGFuZCB0aGUgTWFuaGF0dGFuIERlc3Ryb3llZCBtYXAuIAoiV2UgYWxyZWFkeSBoYXZlIGtub3duIHdoYXQgb3VyIGxpbWl0cyBhcmUsIGFzIGhhdmUgdGhlIGxvY2FscyBwdWJzLiIKVGhlIGNvb2xlc3QgZmVlbGluZyBvZiBteSBsaWZlIHRvIGNvbWUgYmFjayBhbmQgZ2V0IHJlZGVtcHRpb24sIE1hcnRpbiB0b2xkIFBvc3RtZWRpYSBOZXR3b3JrIGp1c3QgbW9tZW50cyBhZnRlciBoaXMgaW1wcmVzc2l2ZSB3aW4uIE1lYW5zIGV2ZXJ5dGhpbmcgdG8gbWUuIApCYWd1ZXR0ZSAoZ2x1dGVuIGZyZWUsIGlmIG5lZWRlZCksIGZvciBzZXJ2aW5nClNpZ24gaW4uIE1haW4gbWVudS4gMTAwMCBLbml0dGluZyBQYXR0ZXJucyBCb29rIChKYXBhbmVzZSkgUGFwZXJiYWNrIEZlYnJ1YXJ5IDEsIDE5OTIuIGJ5IE5paG9uIC4gYSBLaW5kbGU/IEdldCB5b3VyIEtpbmRsZSBoZXJlLCBvciBkb3dubG9hZCBhIEZSRUUgS2luZGxlIFJlYWRpbmcgQXBwLiBNYXkgMTQsIDIwMTggLiBBIGtuaXR0aW5nIHBhdHRlcm4gYm9vayBieSBzaXN0ZXJzIE1lZ2FuIE5vZGVja2VyIGFuZCBLYXRpZSBXaWxsaWFtcyAuIEFsc28sIGl0J3MgZnJlZSEgLiB0byByZWNlaXZlIGRpZ2l0YWwgZG93bmxvYWRzIGZvciBQaXAgUGluIGtuaXR0aW5nIHBhdHRlcm4gUERGcyByYW5naW5nIGZyb20gYSBzaW5nbGUgLiAKTGVzIGdsaXNlcywgY2F0aGRyYWxlcyBldCBwYXJvaXNzZXMgbm9uIGFsaW5lcywgbmNlc3NhaXJlcyBhdSBjdWx0ZSwgc29udCByZW1pc2VzICBsYSBkaXNwb3NpdGlvbiBkZXMgdnF1ZXMgOyBtYWlzIGF1Y3VuIHRyb3VibGUgbmUgc2VyYSBhcHBvcnQgYXV4IGRyb2l0cyBkZXMgcHJvcHJpdGFpcmVzIGRlcyBiaWVucyBlY2Nsc2lhc3RpcXVlcyBhbGlucyAoQXJ0aWNsZXMgWElJIGV0IFhJSUkpLiAKVGhlIHVsdHJhIHJpY2ggaGF2ZSBuZXZlciBnaXZlbiBhIHNoaXQgYWJvdXQgdGhlIGNvbW1vbiBtYW4gYW5kIHRoZXkgbmV2ZXIgd2lsbC4gQnV0IHNvbWVob3csIHBvb3IgcGVvcGxlIGFyZSBzdGlsbCBob3BlZnVsIHRoYXQgdGhlIHVsdHJhIHJpY2ggY2FyZSBhYm91dCB0aGVtLiAKV2lsbGlhbSBTLiBTaWd1cmQgQW5kZXJzb24gcmVxdWVzdGVkIGZlZGVyYWwgYWlkIGZvciB0aGUgc3RhdGUncyBmbG9vZCAgcmF2YWdlZCBNaXNzb3VyaSBWYWxsZXksIGkgR292LiBWYWwgUGV0ZXJzb24gZGVjbGFyZWQgYSBzbGF0ZSBvZiBlbWVyZ2VuY3kgaW4gdGhlIE5lYnJhcyAga2EgZmxvb2Qgem9uZSBhbmQgR292LiAKSSB1bmRlcnN0YW5kIHlvdXIgY29uY2VybnMsIGJ1dCBJIHRoaW5rIHlvdSBhcmUgbWlzcmVwcmVzZW50aW5nIHdoYXQgaGFwcGVuZWQuIFBoaWwgd2FzIGVxdWFsbHkgb3V0cmFnZWQgYWJvdXQgd2hhdCB3ZW50IG9uIGF0IEZ1bGwgVGlsdCwgYW5kIHN0aWxsIGhhcyBhIHN0cm9uZyByZXB1dGF0aW9uIGluIHRoZSBwb2tlciBjb21tdW5pdHkgKGJvdGggRGFuIENvbG1hbiBhbmQgQnJpYW4gUmFzdCwgb3VyIHR3byBvdGhlciBwcm8gd2VyZSB2ZXJ5IGV4Y2l0ZWQgdG8gd29yayB3aXRoIFBoaWwpLiBIaXMgc3RyYXRlZ2ljIHZhbHVlIGlzIHVucXVlc3Rpb25hYmxlIGluIGhpcyBhYmlsaXR5IHRvIGNvbm5lY3QgdXMgdG8gYW55b25lIGluIHRoZSBpbmR1c3RyeSwgYXMgd2VsbCBhcyBwbGFuIGluIG91ciBvd24gZXZlbnRzLgpXaHkgbm90IGp1c3QgYmFuIHRoZSBwZW9wbGUgd2hvIGRvIHRoaXMgc2hpdCBmcm9tIGhhdmluZyBBTlkgSEFORCBpbiBBTlkgY29ycG9yYXRpb24gYXQgYWxsPyBObyBzdGFydGluZyBpdCwgbm8gY29uc3VsdGluZywgbm8gY28gZm91bmRpbmcsIG5vIG1lZXRpbmdzLiBOb3RoaW5nLiBJIGhhdmUgdGhpcyBzdHJhbmdlIGZlZWxpbmcgdGhhdCB0aGV5IGFsbCBoYXZlIG1vcmUgdGhhbiBlbm91Z2ggbW9uZXkgc2l0dGluZyBhcm91bmQgdG8gZ2V0IGJ5LgpJZiBJIG5ldmVyIHRhbGtlZCB0byBoZXIgaW4gdGhlIGZpcnN0IHBsYWNlLCBzaGUgd291bGQgaGF2ZSBqdXN0IHN0YXllZCBhIGhhcHB5IG1lbW9yeSBmcm9tIG15IGNoaWxkaG9vZC4gCk5vdCB0aGUgZ3V5IHlvdSByZXBsaWVkIHRvIGJ1dCBncm4gaXMganVzdCBzaG9ydCBmb3IgImdyYWluIiwgd2hpY2ggcmVmZXJzIHRvIHRoZSBtYXNzIG9mIHRoZSBwcm9qZWN0aWxlLgoiSWYgaGUgZ2V0cyB0aHJvdWdoIGZ1bGwgdHJhaW5pbmcgYXMgd2UgZXhwZWN0LCBoZSdsbCBiZSBhdmFpbGFibGUgdGhpcyB3ZWVrZW5kLiIKQSBjb3VwbGUgb2YgbW9udGhzIGFnbyB3ZSBoYWQgYSByZWxhdGl2ZSB2aXNpdCB1cyBpbiBHZXJtYW55IHdobyBncmV3IHVwIGluIHRoZSBVUyBhbmQgaGUgZ290IGhpcyBkcml2ZXJzIGxpY2Vuc2UgdGhlcmUuIEhlIHdhcyBkcml2aW5nIHVzIGhvbWUgb25lIGV2ZW5pbmcgd2hlbiBoZSBqdXN0IGlnbm9yZWQgYSByZWQgbGlnaHQgYW5kIHR1cm5lZCBsZWZ0LiAKU28geW91IGNhbiBhbHdheXMgZ2V0IHRoZXJlIGJ1dCB0aGVyZSdzIGEgZmFzdCB0cmFjayBmb3IgdGhlIGNsZXZlci4gCkkgd291bGQgYmUgdG90YWxseSBwZXR0eSBpZiBzaGUgYnJvdWdodCB0aGUgZWFycmluZ3MgdXAgaW4gZnJvbnQgb2YgZmFtaWx5IG9yIGEgbGFyZ2UgZ3JvdXAgYW5kIHBvaW50IG91dCBob3cgc2lnbmlmaWNhbnQgb2YgYSBwdXJjaGFzZSBpdCB3YXMgZm9yIERIIHRvIGdldCB0aGVtIGZvciB5b3UgYW5kIGhvdyBpbnNpZ25pZmljYW50IG9mIGEgcHVyY2hhc2UgaXQgaXMgZm9yIGhlciB0byBtYWtlIGlmIHNoZSBTSUwgYm90aCBnb3QgdGhlbSB3ZWVrcyBhcGFydC4gCiJJIGxvb2tlZCBhdCBoaW0gYW5kIHNhaWQgeW91IGdvdCBpdD8gSGUgbG9va2VkIGF0IG1lIGFuZCBzYWlkLCB5b3UgZ290IGl0PyBBbmQsIHdlIGJvdGggcm9sbGVkIG91ciBoYW5kcyBvdmVyIGFuZCB3ZSB3ZW50IGNyYXp5LiBXZSBzdGFydGVkIGp1bXBpbmcgdXAgYW5kIGRvd24gYW5kIGRhbmNpbmcsIiBUYWxsZW50IHNhaWQuICJUaGUgd2hvbGUgcm9vbSBncmF2aXRhdGVkIHRvIG91ciB0YWJsZS4iCklmIGRlc2lyZWQsIG1lbW9yaWFsIGRvbmF0aW9ucyBjYW4gYmUgbWFkZSB0byB0aGUgTWVsYW5vbWEgTmV0d29yayBvZiBDYW5hZGEgb3IgdGhlIEF1dG9pbW11bmUgRGlzZWFzZSBGb3VuZGF0aW9uIG9mIENhbmFkYS4gCkhvbmVzdGx5IEkgd291bGQgbmV2ZXIgaGF2ZSBhc3N1bWVkIG15IHdpZmUgYm91Z2h0IG1lIGEgbWFzc2FnZSB3aXRoIGEgaGFwcHkgZW5kaW5nLiBCdXQgZXZlbiBpZiBzaGUgZGlkIEknZCBwcm9iYWJseSBzdGlsbCBwYXNzIG9uIGl0IHNpbmNlIGl0J3MgaWxsZWdhbCBhbmQvb3Igd2hpbGUgSSBkb24ndCBldmVyIHRoaW5rIG15IHdpZmUgd291bGQgZG8gaXQsIGNvdWxkIGJlIHNvbWUga2luZCBvZiBhIGZ1Y2tlZCB1cCB0ZXN0Li4gCk9uY2UgYSBtb250aCBmb3IgNiBtb250aHMgdGhpcyBoYXBwZW5lZCAoNiBkaWZmZXJlbnQgeCByYXlzIG5vIG1hdHRlciBob3cgbXVjaCBJIGluc2lzdGVkIGl0J3Mgbm90IGEgYm9uZSBpc3N1ZSkgZmluYWxseSBzZW50IG1lIHRvIGFuIG9ydGhvcGVkaWMgc3VyZ2VvbiB3aG8gb3JkZXJlZCBhbiBNUkkgYW5kIGZvdW5kIHRoZSBpc3N1ZSBpbiBsZXNzIHRoYW4gNSBtaW5zIG9mIGJlaW5nIGluIGhpcyBvZmZpY2UuIApZb3UgZ2V0IHdoYXQgeW91IHBheSBmb3IuIApBbGwgU0FScyBzaG91bGQgYmUgbWFkZSBpbiB3cml0aW5nIHRvIHRoZSAuIApIZXJlIHRoZSBsaWdodCBhZ2FpbiBnZXRzIHJlZmxlY3RlZCBkb3duLCBhIGxpdHRsZSBiZWhpbmQgKDEgc2Vjb25kIGJlaGluZCkgdGhlIGxpZ2h0IGZyb20gcG9pbnQgQS4gCkhlIGhhcyB3YWl0ZWQgd2l0aCBob3VycyBvZiBvcHBvcnR1bml0eSwgYnV0IGhlJ2xsIG9ubHkgdGFrZSB0aGUgcmlzayBvbmNlIHdlJ3ZlIGxlZnQgdGhlIGhvdXNlLiAKVGhlIG1vc3F1ZSByYWlkIHNldCBvZmYgd2lkZXNwcmVhZCBjb3VudGVyYXR0YWNrcyBieSBtaWxpdGFudHMgdGhhdCBhZGRlZCB0byBNdXNoYXJyYWYncyB1bnBvcHVsYXJpdHkuCkFuZCBJIGhhdmUgYSBzdXBlciBoaWdoIHByb2ZpbGUgam9iISBJJ20ganVzdCBzbyBhbmdyeSBhbGwgdGhlIHRpbWUuIEhlIGRvZXMgY2xlYW4gYW5kIGRvIHRoaW5ncyBmb3IgdGhlIGhvdXNlLCBidXQgaGUganVzdCBzYXlzIGhlJ3Mgbm90IGdvb2QgYXQgdGFraW5nIGNhcmUgb2YgdGhlIGJhYnkgYW5kIEkgYW0uIEFuZCB3aGVuIGhlJ3Mgbm90IGFuZ3J5IGF0IG1lIGZvciBub3QgY2xlYW5pbmcgbW9yZSB3aGlsZSBJJ20gZG9pbmcgYWxsIHRoZSBjaGlsZCBjYXJlIGFuZCBpbmNvbWUgZ2VuZXJhdGlvbiwgaGUncyBkZXByZXNzZWQgYmVjYXVzZSBoZSdzIG5vdCB3aGVyZSBoZSB3YW50cyB0byBiZSBpbiBsaWZlIGFuZCBsaXRlcmFsbHkgd2Fsa2luZyBhcm91bmQgdGhlIGhvdXNlIGNyeWluZyBzbyBJIGhhdmUgdHdvIGNyeWluZyBib3lzIHRvIGRlYWwgd2l0aC4gCkRyeSBuZWVkbGluZyBhbmQgb3RoZXIgZm9ybXMgb2Ygbm94aW91cyBzdGltdWxhdGlvbiBhcmUgaGVscGZ1bCBpbiB0YWtpbmcgY2FyZSBvZiBrbm90cy4gU2V2ZXJhbCBtYXNzYWdlIHRlY2huaXF1ZXMgY2FuIGJlIGNvbnNpZGVyZWQgZm9ybXMgb2Ygbm94aW91cyBzdGltdWxhdGlvbi4gQ2hpcm9wcmFjdGljIG1hbmlwdWxhdGlvbiBhbmQgbW9iaWxpemF0aW9uIGZyb20gcGh5c2ljYWwgdGhlcmFwaXN0cyBjYW4gYWxzbyBiZSB0aHJvd24gaW50byB0aGUgbWl4LiAKQnV0IG9uZSBncm91cCB3YXMgZ2x1dGVuIGZyZWUgYW5kIHRoZSBvdGhlciBncm91cCBkaWV0IHdhcyA0LjUgcGVyY2VudCBnbHV0ZW4uCkV2ZW50dWFsbHksIHlvdSByZWFjaCBhIHBvaW50IHdoZXJlIHlvdSBoYXZlIHRoZSB0ZWNobmlxdWVzIGRvd24uIFlvdSBub3cgYXQgdGhlICJnb29kIGd1aXRhcmlzdCBpbXByb3Zpc2luZyBmcm9tIHN0YXJ0IHRvIGZpbmlzaCBldmVyeSB0aW1lIiBzdGFnZS4gTm93IGNvbWVzIHRoZSB0aW1lIHRvIGxlYXJuIHNvbWUgc29uZ3MuIApFZG1vbmQgRGFudGVzLCBjb25zdW1lcyB3aG9sbHkgYnkgdmVuZ2VhbmNlLCBwbGFucyB0byBicmluZyBkb3duIGhpcyBiZXRyYXllcnMuIFlvdSBhcmUgY29ycmVjdCwgYXMgdGhlc2UgcGxhbnMgZW5kIHVwIHJ1aW5pbmcgaW5ub2NlbnQgcGVvcGxlJ3MgbGl2ZXMgYW5kIGV2ZW4gdGhvc2Ugd2hvIGhlIGxvdmVzIGFuZCBhcmUgaW1wb3J0YW50IHRvIGhpbS4gSG93ZXZlciB0aGlzIGlzIGFuIGluY3JlZGlibHkgYmlnIHBsb3QgcG9pbnQsIGFuZCB0aGUgbWFpbiBkcml2aW5nIGZvcmNlIGluIGhpcyBjaGFyYWN0ZXIgYXJjIGFuZCBzdG9yeSBhcyBhIHdob2xlLCBhcyB0aGVyZSdzIGEgcG9pbnQgd2hlcmUgRWRtb25kIERhbnRlcyByZWFsaXplcyB0aGF0IGhlIGFjdHVhbGx5IGhhZCBnb25lIHdheSB0b28gZmFyIGluIHRoZSBuYW1lIG9mIHZlbmdlYW5jZSBhbmQgbG9zdCBoaXMgaHVtYW5pdHkuIApUaGV5IGxhcmdlbHkgY29waWVkIEZvcmVydW5uZXIgZGVzaWducyB0aGV5IHN0dW1ibGVkIHVwb24gYW5kIGJlY2F1c2Ugb2YgdGhlaXIgcmVsaWdpb3VzIGF0dGFjaG1lbnQsIHdvdWxkbiBpbXByb3ZlIG9yIGlubm92YXRlIHdpdGggdGhlbS4gQXQgb25lIHBvaW50LCBzb21lIFNwYXJ0YW5zIHRha2UgY29udHJvbCBvZiBhIENvdmVuYW50IGZyaWdhdGUgYW5kIENvcnRhbmEgdXNlcyBpdCB0byBvYmxpdGVyYXRlIHNldmVyYWwgb3RoZXIgZXF1aXZhbGVudCBjb3ZlbmFudCBmcmlnYXRlcyBiZWNhdXNlIHRoZSB3ZWFwb24gYW5kIHNoaWVsZCBzeXN0ZW1zIHdlcmUgc28gdW5kZXIgb3B0aW1pemVkIHNoZSBjb3VsZCBpbW1lZGlhdGVseSBpbXByb3ZlIHBlcmZvcm1hbmNlIHNldmVyYWwgdGltZXMgb3ZlciBqdXN0IGJ5IHR3ZWFraW5nIHNvbWUgdGhpbmdzLlNvIHllYWggdWx0aW1hdGVseSBIdW1hbml0eSB3YXMgb24gdGhlIGJldHRlciB0cmFqZWN0b3J5IGJlY2F1c2UgdGhleSB3ZXJlIGFnZ3Jlc3NpdmVseSBpbm5vdmF0aW5nIGFuZCBkZXZlbG9waW5nIG9uIGV2ZXJ5dGhpbmcgdGhleSBoYWQsIHRob3VnaCB0aGVpciBzdXJ2aXZhbCBhdCBFYXJ0aCB3YXMgbGFyZ2VseSBiZWNhdXNlIHRoZSBDb3ZlbmFudCBDaXZpbCBXYXIgZ2F2ZSB0aGVtIHRoZSBicmVhdGhpbmcgcm9vbSB0byBzZWl6ZSB0aGUgaW5pdGlhdGl2ZS5KZXJpa1RlbG9yaWFuICAyMyBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29UaGlzIGlzIGZhaXJseSBjb21tb24sIGhpc3RvcmljYWxseS4gQ2l0aWVzIG9mdGVuIG91dGdyZXcgdGhlaXIgd2FsbHMgYW5kIG9ubHkgYSBzbWFsbCBwYXJ0IG9mIHRoZSBjZW50ZXIgb2YgdGhlIGNpdHkgd2FzIHByb3RlY3RlZCwgdXN1YWxseSB3aXRoIHJlc291cmNlIHN0b3JhZ2UsIHRoZSBnb3Zlcm5tZW50LCBhbmQgaG9tZXMgb2YgdGhlIHdlYWx0aHkgaW5zaWRlLiAKQSBwcml2YXRlIGRpbmluZyByb29tIGluIHRoZSBTZXZlbiBDaGVmcyBCdWZmZXQgcmVzdGF1cmFudCBpcyBpZGVhbGx5IHN1aXRlZCBmb3IgbGFyZ2VyIGdyb3VwcywgVHJpY2FubyBzYWlkLCB3aGlsZSBzbWFsbGVyIHBhcnRpZXMgY2FuIGNob29zZSBhIGRpbmluZyBleHBlcmllbmNlIHRoYXQgaXMgbW9yZSBsYSBjYXJ0ZS4gCkludmFzaXZlIEh1bWFuIEJyYWluIFN0aW11bGF0aW9uIGluIENvZ25pdGl2ZSBOZXVyb3NjaWVuY2UKVGhlIGFsbGVnZWQgcHJpdmlsZWdlZCBpbmZvcm1hdGlvbiBpbnZvbHZlcyBhY3F1aXNpdGlvbnMgdGhhdCBpbmNsdWRlIFVTJDQuOSBiaWxsaW9uIGRlYWwgZm9yIFBva2VyU3RhcnMgaW4gMjAxNCB0aGF0IHRyYW5zZm9ybWVkIHRoZSBmb3JtZXIgTW9udHJlYWwgZmlybSBpbnRvIHRoZSB3b3JsZCBsYXJnZXN0IG9ubGluZSBwb2tlciBjb21wYW55LgpMaW1pdCBteSBzZWFyY2ggdG8gci9rb3JlYXVzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpUaGF0IG1lYW5zIG1ha2luZyBzdXJlIHRoZXkgdW5kZXJzdGFuZCBsaW1pdHMsIG1ha2luZyBzdXJlIHRoZXkgZ29uZSB0aHJvdWdoIHNvbWUgc2hpdCBzbyB0aGF0IHRoZXkga25vdyB0aGV5IGNhbiBnZXQgdGhyb3VnaCBzaGl0LCBhbGwgdGhhdCBoYXJkIGFzcyBzdHVmZiwgYnV0IGFsc28gbWFraW5nIHRoZW0gY29uZmlkZW50IGFuZCBzZWxmIGFzc3VyZWQgYW5kIGFibGUgdG8gZmluZCB3aGF0IHRoZXkgbG92ZS4gSG93IHRmIGFtIEkgc3VwcG9zZWQgdG8gZG8gYm90aD8gSGVsbCwgaG93IGFtIEkgc3VwcG9zZWQgdG8gZG8gdGhlIHNlbGYgYXNzdXJlZCBzdHVmZiBhdCBhbGw/IEkga25vdyBob3cgdG8gYmUgYSBoYXJkIGFzcywgSSBkb24ga25vdyB3dGYgSSBkb2luZyBvbiB0aGUgY29uZmlkZW50IHNpZGUuIApJZiB5b3UgaW50ZXJlc3RlZCBpbiBSZWZsZXhvbG9neSwgdGFrZSByZWZsZXhvbG9neS4gSXQgY2hlYXAgZW5vdWdoLCBhbmQgeW91IGNvdWxkIGRlZmluaXRlbHkgc2NvcGUgb3V0IHRoZSBtYXJrZXQuClNoZSBjb3VsZCBiZSBwaHlzaWNhbGx5IGhhcm1lZC4uIApEbyB0aGUgd2hpdGUgdGhpbmcKWW91IG5lZWQgdG8gZG8gd2hhdCBBdGF0cmsgaGF2ZSBkb25lIGFuZCBicmVhayBkb3duIHRob3NlIHdvcmRzIGNvdmVyaW5nIHBlb3BsZSBtaW5kcyB0byBlZHVjYXRpb24gc2V0cyBpbi4uIApUaHJlZSBjaGlsZHJlbiBzaG90IGluIG9uZSB3ZWVrIGluIEFrcm9uLCBwb2xpY2Ugc2F5IFRocmVlIGNoaWxkcmVuIHNob3QgaW4gb25lIHdlZWsgaW4gQWtyb24sIHBvbGljZSBzYXkgT3ZlciBhIHNwYW4gb2YgZml2ZSBkYXlzLCB0aHJlZSBjaGlsZHJlbiBpbiBBa3JvbiB1bmRlciB0aGUgYWdlIG9mIGZpdmUgeWVhcnMgb2xkIHdlcmUgaG9zcGl0YWxpemVkIGZvciBndW5zaG90IHdvdW5kcywgYWNjb3JkaW5nIHRvIHBvbGljZS4gdG8gbm9vbiBhdCBTZXZlcmFuY2UgSGFsbCBhdCBFYXN0IEJvdWxldmFyZCBhbmQgRXVjbGlkIEF2ZW51ZSBpbiBDbGV2ZWxhbmQuIFRoZSBjb2xsZWN0aW9uIGVmZm9ydCwgdGhlIGJyYWluY2hpbGQgb2YgYSBDbGV2ZWxhbmQgY291bmNpbG1hbiB0aGF0IGludm9sdmVzIHNldmVyYWwgYXJ0cyBvcmdhbml6YXRpb25zLCBoYXMgYWxyZWFkeSBnYXRoZXJlZCBtb3JlIHRoYW4gMzAwIGluc3RydW1lbnRzIHRoYXQgd2lsbCBiZSBkaXN0cmlidXRlZCB0byBjaGlsZHJlbi4KSSBvcmRlcmVkIG1pbmUgYmFjayBpbiBPY3RvYmVyIGFuZCBmaW5hbGx5IGp1c3QgZ290IGFyb3VuZCB0byBkb2luZyB0aGUgc2FtZSB0aGluZyBhZnRlciBEb2NrZXIgaW5nIG15IHNlcnZlciBiZWhpbmQgVHJhZWZpay4gSGF2aW5nIHRoZSBzYW1lIGlzc3VlcyBhcyB3ZWxsIHdpdGggWiBXYXZlIHdvcmtpbmcgZmxhd2xlc3NseSBidXQgWmlnYmVlL1poYSBpcyBoYXZpbmcgaXNzdWVzIGFuZCBub3QgZXZlbiBjb25uZWN0aW5nIHRvIHRoZSBzdGljay4gSSByZWFkIHRoYXQgc29tZSBvZiB0aGUgcmVjZW50bHkgcHVyY2hhc2VkIEhVU0JaQiAxcyBoYXZlIGEgZGVmZWN0IGluIHRoZSBaaWdiZWUgZmlybXdhcmUgZnJvbSBhIGJhZCBiYXRjaC4KRmF0YWwgc2hvb3RpbmcgYXQgU2FnaW5hdyBUb3duc2hpcCBwb2tlciBnYW1lIHJ1bGVkIGp1c3RpZmlhYmxlCkRvbid0IGdvIG9uIGEgYmxpbmQgZGF0ZS4gTm90IG9uIFZhbGVudGluZSdzLiBUb28gbXVjaCBwcmVzc3VyZSBvbiBpdCwgZXZlbiBpZiB5b3UgdGhpbmsgaXQncyBub3QgYW5kIGlmIHlvdSBkb24ndCByZWFsbHkgbGlrZSB0aGUgZ3V5IG9yIGhlIGRvZXNuJ3QgbGlrZSB5b3UsIHlvdSdsbCBvbmx5IGZlZWwgbGlrZSB5b3UncmUgZGVzdGluZWQgdG8gZGllIGFsb25lLgpUaGUgdHdvIHJlYWRpbmdzL3BhbmVscyBhcmUgdGl0bGVkIEZ1bm55IEZlbWluaXN0cyBhbmQgVGhlIFZhc3QgSW5zY2FwZTogV3JpdGluZyBBYm91dCBNZW50YWwgSGVhbHRoLiAKV2hlbiBMYWR5IEdhZ2Egd2FzIGluIGhpZ2ggc2Nob29sIChoZXIgcmVhbCBuYW1lIGJ0dyBpcyBTdGVmYW5pIEdlcm1hbm90dGEpLCBzaGUgZGlkbid0IGZpdCBpbiB3aXRoIHRoZSByZXN0IG9mIHRoZSBzdHVkZW50cyBhbmQgd2FzIGNvbnNpZGVyZWQgYSAiZnJlYWsiLiAKSSBub3Qgc2F5aW5nIGNvZGRsZSB0aGVtLiBJIHNheWluZyB0aGF0LCBmcm9tIHRoZSBtb21lbnQgeW91ciBjaGlsZHJlbiBhcmUgYm9ybiwgZXZlcnkgZGVjaXNpb24geW91IG1ha2UgaW4gbGlmZSBzaG91bGQgYWxzbyBoYXZlIHRoZW0gaW4gbWluZC4gQSBwYXJlbnQgd2hvIGRlY2lkZXMgdGhhdCB0aGV5IGdvaW5nIHRvIHNlbGwgdGhlaXIgaG91c2UgYW5kIGdvIG9uIGZhbmN5IHZhY2F0aW9ucyBpcyBzb21lb25lIHdobyBkZWNpZGVkIHRoYXQgdGhleSBhcmUgbm8gbG9uZ2VyIGEgcGFyZW50LgpNYW55IG9mIHRoZXNlIHBhdGllbnRzIGRhdGUgdGhlaXIgZ2FzdHJvaW50ZXN0aW5hbCBwcm9ibGVtcyBiYWNrIHRvIGVhcmx5IGNoaWxkaG9vZCwgYmVmb3JlIHRoZWlyIHBzeWNob2xvZ2ljYWwgc3ltcHRvbXMgYmVnYW4sIFBhc3JpY2hhIGFuZCBoaXMgY29sbGVhZ3VlcyB3b25kZXJlZCBpZiB0aGUgZGlnZXN0aXZlIGRpc3R1cmJhbmNlcyBjb3VsZCBpbnN0ZWFkIGJlIGNhdXNpbmcgdGhlIG1vb2QgZGlzb3JkZXJzLi4gCldoZW4geW91IHJlYWQgdGhlIGRlc2NyaXB0aW9uIG9mIGEgYm9vaywgeW91IGFsc28gY2FuIHNlZSAid2hhdCBvdGhlciBwZW9wbGUgd2hvIG9yZGVyZWQgdGhpcyBib29rIGFsc28gcHVyY2hhc2VkLiIgVGhhdCBpcywgeW91IGNhbiBzZWUgdGhlIHJlbGF0ZWQgYm9va3MgdGhhdCBwZW9wbGUgYXJlIGFjdHVhbGx5IGJ1eWluZy4gRm9yIGV4YW1wbGUsIGlmIERlbGwgdHJhY2tzIGVhY2ggY29tcHV0ZXIgdGhyb3VnaCB0aGUgbWFudWZhY3R1cmluZyBhbmQgc2hpcHBpbmcgcHJvY2VzcywgY3VzdG9tZXJzIGNhbiBzZWUgZXhhY3RseSB3aGVyZSB0aGVpciBvcmRlciBpcyBhdCBhbnkgdGltZS4gVHJhZGl0aW9uYWwgbWFpbCBvcmRlciBjb21wYW5pZXMgaW50cm9kdWNlZCB0aGUgY29uY2VwdCBvZiBzaG9wcGluZyBmcm9tIGhvbWUgaW4geW91ciBwYWphbWFzLCBhbmQgZSBjb21tZXJjZSBvZmZlcnMgdGhpcyBzYW1lIGx1eHVyeS4gCkluIENoaW5lc2UgRml2ZSBFbGVtZW50IHRoZW9yeSwgSG9yc2UgaXMgaW4gdGhlIEZpcmUgZ3JvdXAuIEhvcnNlIG1vbnRoIGlzIGluIHRoZSBtaWRkbGUgb2Ygc3VtbWVyLiAKTm8gcGlyYWN5LiBBZHZvY2F0aW5nLCBhc2tpbmcgZm9yLCBvciBnaXZpbmcgYWR2aWNlIG9uIGhvdyB0byBwaXJhdGUgaXMgcHJvcGhpYml0ZWQuIExpbmtpbiB0byBwaXJhY3kgY2VudHJpYyBzdWJzIGFsc28gcHJvaGliaXRlZC4KQWx0aG91Z2ggb2YgY291cnNlIHRoZXJlIGFyZSBnZW5lcmFsIHRydXRocyBhYm91dCBtZW4gYW5kIHdvbWVuIGFuZCBob3cgdGhleSBpbnRlcmFjdCwgaW5kaXZpZHVhbCBwZW9wbGUgYW5kIG1hcnJpYWdlcyB3aWxsIHdvcmsgYWxsIHRoYXQgb3V0IGluIGRpZmZlcmVudCB3YXlzLiBFeGFtcGxlcyBsaWtlIHRoZSBPUCBoZWxwIHRoZSB0aGVvcnkgc2hpbmUgdGhyb3VnaCBpbiByZWFsIGxpZmUgY29udGV4dC4iOU9yIGRvIHlvdSBub3Qga25vdyB0aGF0IHRoZSB1bnJpZ2h0ZW91cyB3aWxsIG5vdCBpbmhlcml0IHRoZSBraW5nZG9tIG9mIEdvZD8gRG8gbm90IGJlIGRlY2VpdmVkOiBuZWl0aGVyIHRoZSBzZXh1YWxseSBpbW1vcmFsLCBub3IgaWRvbGF0ZXJzLCBub3IgYWR1bHRlcmVycy4gCllvdSBjYW4gYWx3YXlzIHBsYXkgcG9rZXIgZG93bmxvYWRzIGZvciBmcmVlIHdoaWxlIHlvdSBsZWFybiB0aGUgYmFzaWNzIG9mIHRoZSBnYW1lLiAKVGhlIGtleSBkaWZmZXJlbmNlIGZvciBSYXkgUmljZSAoYW5kIEh1bnQgcmVhbGx5KSB3YXMgdGhhdCB0aGVyZSB3YXMgYSB2aWRlbyBvZiB0aGUgaW5jaWRlbnQgdGhlIGJyYWluIHByb2Nlc3NlcyBzZWVpbmcgdGhlIGluY2lkZW50IGRpZmZlcmVudCBmcm9tIGhlYXJpbmcgYWJvdXQgaXQsIGFuZCBpcyBsZXNzIGxpa2VseSB0byBmb3JnZXQgb3IgaWdub3JlIGl0Li4gClRoZSBsYXcgd2FzIHdheSB0b28gbG9uZyBmb3IgYW55b25lIHRvIGtub3cgd2hhdCB0aGUgaGVsbCB3YXMgZ29pbmcgb24gd2l0aCBpdC4gClBva2VyIEdhbWUgVmFyaWF0aW9ucwpFdmVyeSBvbmUuIEV2ZW50dWFsbHkgc2hlIHNheSB0aGUgb25lIHlvdSB3ZXJlIGdvaW5nIHRvIHBpY2sgYW5kIGVpdGhlciBpdCB3aWxsIHJ1aW4gaXQgZm9yIHlvdSBvciBzaGUgY2xhaW0gc2hlIGNhbWUgdXAgd2l0aCBpdC4uIApFeC4gU29vbiBKdW5nIGxpbmUgZnJvbSBFdHVkZSBIb3VzZSwgQmx1YmVycnkgbGluZSBmcm9tIElubmlzZnJlZSwgZXRjLnBobGVlOTIxICA4IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ290aGVyZSBhcmUgc29vb28gbWFueSBjbGluaWNzIGhlcmUgaW4ga29yZWEgdGhhdCBpIHRoaW5rIGl0IGlzIGhhcmQgdG8gc2F5IHdoaWNoIGlzIHRoZSAiYmVzdCIgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIHNvbWV0aGluZyBsaWtlIGxhc2VyIHRyZWF0bWVudCAod2hpY2ggaW1vIGRvZXNuIHJlYWxseSBkZXBlbmRlbnQgYSB3aG9sZSBsb3Qgb24gc2tpbGwpbW9zdCBnaXJscyBoZXJlIGluIGtvcmVhIHdpbGwganVkZ2UgYmFzZWQgb2ZmIG9mIHByaWNlIHNpbmNlIHByZXR0eSBtdWNoIGFsbCB0aGUgcGxhY2VzIGFyZSB0aGUgc2FtZS5teSByZWNvbW1lbmRhdGlvbiBpcyB0byBzaG9wIGFyb3VuZCwgY29tcGFyZSBwcmljZXMsIGFuZCB0YWxrIHRvIGEgZmV3IHBsYWNlcy4gVGhleSB3aWxsIGFsbCBoYXZlIHNvbWUgc29ydCBvZiBTTlMgYWNjb3VudCBmb3IgeW91IHRvIGNvbnRhY3QueW91IGNhbiBQTSBtZSBpZiB5b3Ugd2FudCBtb3JlIGluZm8uW2RlbGV0ZWRdICA2IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ29JIGhlYXJkIHRoYXQgS29yZWEgcmVwIGNsb3RoaW5nIGlzIGJldHRlci4gClNvIEkgc29ydCBvZiBncmV3IHVwIGluIEFJLiBCYWNrIHRoZW4gaXQgd2FzIHRoZSBBSSB3aW50ZXI7IHBlb3BsZSBkaWQgbm90IHJlYWxseSB3YW50IHRvIGJlIGFzc29jaWF0ZWQgd2l0aCBBSS4gaXMgaW4gYSBwYXJ0IG9mIEFJIGNhbGxlZCBUdXJpbmcgcHJvdmluZywgbG9naWNhbCByZWFzb25pbmcsIGFuZCBzbyBvbi4gSSBhbHNvIHdvcmtlZCBpbiBuZXVyYWwgbmV0d29ya3MgYW5kIG1hY2hpbmUgbGVhcm5pbmcuIEkgc3BlbnQgYSBtZW1vcmFibGUgc3VtbWVyIGF0IEludGVsLCBhbmQgdGhlIEludGVsIEFJIGxhYiAgYW5kIHdvcmtpbmcgb24gbmV1cmFsIG5ldHdvcmtzIGZvciB0aGUgSW50ZWwgbWFudWZhY3R1cmluZyBwcm9jZXNzLgpUaGVuIHlvdSBncm93IHVwIHNvbWUgbW9yZSBhbmQgaG9wZWZ1bGx5IGNvbWUgZG93biBhbmQganVzdCBhY2NlcHQgdGhhdCAnbm90IGJlaW5nIHRoYXQgc3BlY2lhbCcgaXMgbm90IHRoZSBzYW1lIGFzIG5vdCBiZWluZyBpbXBvcnRhbnQuIApJdCBub3QgdGhhdCBoZSBpbW1hdHVyZSwgaXQgdGhhdCBoZSBhIGhhdGVmdWwsIGlnbm9yYW50LCBseWluZywgY2hlYXRpbmcsIGh5cG9jcml0aWNhbCwgcGllY2Ugb2Ygc2hpdCBjb3dhcmRseSBiaWdvdCwgd2l0aCBhIGN1bHQgZm9sbG93aW5nIG9mIGlnbm9yYW50IHJlZG5lY2sgdHJhc2guIApHc3VwYW50aGVyMjQgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClRoYXQncyBmaW5lLCBqdXN0IHBsZWFzZSBidXkgZnJvbSB0aGUgc3RvcmVzIHdoZXJlIHdlJ3JlIHJlZ2lzdGVyZWQgc28gSSBjYW4gcmV0dXJuIHRoZW0gYW5kIGJ1eSB0aGUgc3R1ZmYgd2UgYWN0dWFsbHkgd2FudCB3aXRob3V0IGFueSBoYXNzbGUuIApJdCBtb3ZpbmcgaW50byB1bmtub3duIHRlcnJpdG9yeSB0aGF0IGNyZWF0ZXMgbmV3IHNraWxscywgdGFsZW50cywgYW5kIGFiaWxpdGllcyB0aGF0IHVsdGltYXRlbHkgbWFrZSB0aGUgZW50cmVwcmVuZXVyIHN1Y2Nlc3NmdWwuLiAKSXQgaXNuIGFib3V0IGRlZmVhdGluZyB0aGUgZXZpbHMgb2YgY2FwaXRhbGlzbSBhbnkgbW9yZTogUnVzc2lhIGlzIG5vdyBpbiBhIHJvYmJlciBiYXJvbiBzdGFnZSBvZiBjYXBpdGFsaXN0IGRldmVsb3BtZW50IHRoYXQgd291bGQgbWFrZSAyMXN0IGNlbnR1cnkgQW1lcmljYW5zIGJsYW5jaC4gTm8sIGl0IGp1c3QgYWJvdXQgdGVycml0b3J5IGFuZCBnZW9wb2xpdGljYWwgY2xvdXQuIApPdGhlciB0aGFuIHRoYXQgSSBoYXZlIGFuIG9mZmljZSBqb2Igd2hlcmUgSSBzaXQgbW9zdCBvZiB0aGUgZGF5IGFuZCBvbmx5IGV4ZXJjaXNlIEkgZ2V0IGlzIHBvd2VybGlmdGluZyB3b3JrIGluIHRoZSBneW0uIE15IGNhcmRpby9lbmR1cmFuY2UgaXMgcmF0aGVyIHNoaXQgcmlnaHQgbm93LkkgdGhpbmsgSSBsdWNrZWQgb3V0IGdlbmV0aWMgd2lzZSBob25lc3RseS4gTXkgZW50aXJlIGZhbWlseSBpcyByZWFsbHkgYmlnIGJ1dCB3ZSBhbGwgaGF2ZSBnb29kIGJsb29kIHByZXNzdXJlLCBsb3cgY2hvbGVzdGVyb2wsIG5vIGhpc3Rvcnkgb2YgZGlhYmV0ZXMsIGV0Yy5JIGRvIGVhdCB2ZXJ5IGNsZWFuLCBJIGp1c3QgZWF0IGEgbG90IGFuZCBoYXZlIGEgcmF0aGVyIHNlZGVudGFyeSBsaWZlIHN0eWxlIHJpZ2h0IG5vdy5UaGF0IGJlaW5nIHNhaWQgSSBkbyBoYXZlIG90aGVyIGhlYWx0aCByZWxhdGVkIGlzc3VlcyBjcm9wcGluZyB1cCBmcm9tIG15IHNpemUgc28gYW0gZ29pbmcgdG8gYmUgY3V0dGluZyBkb3duIHRvIHRvIGFib3V0IDE0NSAxNTAga2cgdGhpcyBzdW1tZXIgdG8gc2VlIGhvdyBJIGZlZWwuIApFYXJseSBkYXlzIHdlcmUgdG91Z2gsIGhlIGNvbmNlZGVkLCBJIHdvdWxkbiB3YW50IG15IGtpZHMgdG8gZ28gZG93biB0aGUgc2FtZSByb3V0ZSBhcyBtZS4uIApPdmVydmlldyBmb3IgTm9GcmljdGlvbgpVbmlxdWUgRmVhdHVyZXMgb2YgTmV0RW50IEdhbWVzClByaW9yIHRvIHRoZSBSZWFsIE1lZGlhIFJlYWwgQ2hhbmdlIEN5YmVyYnVsbHlpbmcgQ29uZmVyZW5jZSBmaWFzY28sIG9uZSBvZiB0aGUgbG9jYWwgTG9yZHMgb2YgRm9ybSBhcHByb2FjaGVkIE5vcnRoZXJuIFN0YXIgZWRpdG9yLCBEYXZpZCBLaXJrcGF0cmljayB0byBzZWUgaWYgdGhlIHBhcGVyIHdvdWxkIHJ1biBzdG9yaWVzIGFib3V0IFVuaXZlcnNhbCBNZWRpY2luZS4gS2lya3BhdHJpY2sgd2FzIHJlbHVjdGFudCBzZWVpbmcgdGhlIGN1bHQgaGFkIHRocmVhdGVuZWQgdGhlIHBhcGVyIHdpdGggbGVnYWwgYWN0aW9uIGZvciB3cml0aW5nIHRoYXQgU2VyZ2UgY2xhaW1zIHRvIGJlIGFibGUgdG8gY3VyZSBjYW5jZXIsIGFuZCB0aGUgcGFwZXIgaGFkIGVycm9uZW91c2x5IHByaW50ZWQgdGhhdCBCZW5oYXlvbiBhbmQgaGlzIHNvbnMgcHJhY3RpY2UgRXNvdGVyaWMgQnJlYXN0IE1hc3NhZ2UuIFRoZSBwYXBlciBzaG91bGQgaGF2ZSBjaGVja2VkIHRoZWlyIGZhY3RzIGJlZm9yZSBnb2luZyB0byBwcmVzcy4gQ3VydGlzIEJlbmhheW9uIG9ubHkgcHJhY3RpY2VzIFV0ZXJ1cyBNYXNzYWdlLCBhbmQgd2hpbGUgU2VyZ2UgdGVsbHMgZXZlcnlvbmUgaGUgb25seSBwZXJmb3JtZWQgQnJlYXN0IG1hc3NhZ2Ugb24gaGlzIGNhcHRpdmUgcGFydG5lciwgd2Ugc2hvd24gdGhlIHBob3RvZ3JhcGhpYyBldmlkZW5jZSBvZiBoaXMgaGFuZHMgb24gY2hlc3RzIGFuZCBib3R0b21zLCBhbmQgaG93IGhlIGdvZXMgZm9yIHRoZSBnZW5pdGFscyBvZiBzZXh1YWwgYWJ1c2UgdmljdGltcyBhcyB3ZWxsLgpNbWUgQnJpZ2l0dGUgQmFyZ2VzLiAgbCdwb3F1ZSwgamUgbid0YWlzIHBhcyBlbmNvcmUgZHB1dGUgISBMJ2VuamV1IGR1IGRiYXQgc3VyIGxlIFBBQ1MgdGFpdCBxdWUgbGVzIGNvdXBsZXMgaG9tb3NleHVlbHMgYWllbnQgbGVzIG1tZXMgZHJvaXRzIHF1ZSBsZXMgY291cGxlcyBodHJvc2V4dWVscy4gUXVlIGxldXIgbWFucXVlIHQgaWwgYXVqb3VyZCdodWkgIHBhcnQgbGEgcm9iZSBkZSBtYXJpZSA/IEF1IG5vbSBkZSBsJ3ZvbHV0aW9uIGRlcyBtdXJzLCBub3RyZSBzb2NpdCwgZG9udCBsZXMgZm9uZGVtZW50cyBsYXF1ZXMgZXQgcnB1YmxpY2FpbnMgc29udCB0YWJsaXMgZGVwdWlzIGRlcyBzaWNsZXMsIGRldnJhIHQgZWxsZSBwcmVuZHJlIGVuIGNvbXB0ZSwgY29tbWUgbCdhIGRpdCBtb24gY29sbGd1ZSwgZCdhdXRyZXMgcHJhdGlxdWVzIHNleHVlbGxlcyAgIGV0IHBvdXJxdW9pIHBhcyBsZSBtYXJpYWdlIGF2ZWMgbGVzIGFuaW1hdXggb3UgbGEgcG9seWdhbWllLCBzaSBkJ2F1dHJlcyByZWxpZ2lvbnMgcHJlbm5lbnQgbGUgcGFzIHN1ciBub3RyZSB0cmFkaXRpb24ganVkbyBjaHJ0aWVubmUgPy4gCklmIHlvdSBsaXZlIGluIHNvbWUgcmlkaWN1bG91cyBidWJibGUgb2YgbGVmdCB3aW5nZXJzLCBsaWtlIEFtc3RlcmRhbSBvciBVdHJlY2h0IG9yIGEgY29sbGVnZSBjYW1wdXMsIGl0IG1pZ2h0IGVzY2FwZSB5b3VyIHZpZXcgd2hhdCB0aGUgYWN0dWFsIHNlbnRpbWVudCBvZiB5b3VyIGNvdW50cnkgaXMuIApObyBhdHRlbXB0IGlzIG1hZGUgdG8gZ2l2ZSBoaW0gYSBjcmVkaWJsZSBtb3RpdmF0aW9uIG9yIG1ha2UgaGltIGludGVyZXN0aW5nIG9uIGFueSBsZXZlbC4gSGUgaXMgYSBnZW5lcmljIGJhZCBndXkuIChIaXMgcmVhc29uIGZvciBnZW5vY2lkZTogQmVjYXVzZSBpdCBtYWtlcyBoaW0gZmVlbCBnb29kLikuIApBbmQgdGhlIHdob2xlICJBIGxhdyA9Lz0gcG93ZXIgZ2l2ZW4gdG8gYSBncm91cCB0byBjb250cm9sIHRoZSBzeXN0ZW0uIiBKdXN0IGRvZXNuIHBhcnNlIGZvciBtZS4gSSBoYXZlIG5vIGNsdWUgd2hhdCB5b3UgYXJlIHRhbGtpbmcgYWJvdXQuIApEcml2ZUJ5UmFuZG9tSW5mbyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCk9ubHkgY2VydGFpbiBtYXNzYWdlIHRlY2huaXF1ZXMgaGF2ZSByZWxheGluZyBlZmZlY3RzIG9uIHlvdXIgbmVydm91cyBzeXN0ZW0uIApXaGVyZSBpcyBldmVuIG9uZSBzcGVjaWZpY2F0aW9uIG51bWJlciB0aGF0IGRlZmluZXMgdGhlIG9mIGl0cyBvdXRwdXQgcG93ZXIuIApUb3dhcmQgdGhlIGVuZCBvZiB0aGUgbm92ZWwsIGFzIHdlIGJyYWNlIG91cnNlbHZlcyBmb3IgdGhlIGluZXZpdGFibGUsIE15cmlhbSwgb2JsaXZpb3VzIHRvIHdoYXQncyBpbXBlbmRpbmcsIG11c3QgY29uZnJvbnQgTG91aXNlIGFib3V0IGhlciBtb3JlIGV4dHJlbWUgaG91c2Vob2xkIGVjb25vbWllcy4gCldoZW4geW91IGFkZCBpbiB0d28gZGVja3Mgb2YgY2FyZHMsIGRpY2UgZm9yIGFsdGVybmF0ZSBnYW1lcywgYW5kIHRoZSBhYmlsaXR5IHRvIGNob29zZSBiZXR3ZWVuIDUgY29sb3JzLCBpdCB3YXMgcmVhbGx5IGEgbm8gYnJhaW5lci4gR3JhbnRlZCwgeW91IGNhbid0IGdldCB0aGUgZnVsbCBlZmZlY3QgdW50aWwgeW91J3JlIGFibGUgdG8gaGF2ZSB0aGVtIHJpZ2h0IGluIGZyb250IG9mIHlvdS4gCklmIHlvdSBhcmUgc28gbXVjaCBjb25jZXJuZWQgYWJvdXQgdGhpcyBsZWdhbGl0eSBpc3N1ZSwgeW91IG11c3QgYmUga2VlbiB0byBnZXQgbmV3IGluZm9ybWF0aW9uIG9uIHRoZSBzdWJqZWN0LCBvciB5b3UgY2FuIGF2b2lkIHBsYXlpbmcgdGhlIGdhbWUgYWx0b2dldGhlciBzaW5jZSwgeW91IHdvbiBiZSBhYmxlIHRvIGVuam95IHRoZSBnYW1lIGlmIHlvdSBhcmUgd29ycmllZCBhYm91dCB0aGlzIGlzc3VlIGFsbCB0aGUgdGltZS4uIApIb3dldmVyLCB0aGUgZm91bmRhdGlvbiB3b3VsZCBub3QgY2xhcmlmeSB3aGV0aGVyIHRoZSBOQ0YgaXMgZnVuZGVkIGJ5IHRoZSBtYWluIGNoYXJpdHkgb3IgaW5kZXBlbmRlbnRseSwgd2hpY2ggd291bGQgaGF2ZSBhbiBpbXBhY3Qgb24gdGhlIGRpc3RyaWJ1dGlvbiBhbmQgZXhwZW5zZSBjYWxjdWxhdGlvbnMuIApJdCBpcyB0aGVuIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgZWFjaCBwYXJ0aWNpcGFudCB0byBhY2N1cmF0ZWx5IGd1ZXNzIGFzIG1hbnkgaXRlbXMgYXMgcG9zc2libGUuIApUaGUgbWFpbiBpZGVhIG9mIHRoaXMgdGhlcmFweSB3b3VsZCBiZSB0byBoYXZlIG1hbmFnZSB0aGUgbXVzY3VsYXIgdGlzc3VlcyBhbHNvIHJlZ2FyZGluZyBzb2Z0ZW4gdGhlIGJvZHkgdGlzc3Vlcy4gClRoZXkgc2FpZCB0aGV5IGNhbiBnbyBhaGVhZCBhbmQgcGF5IGZvciB0aGUgcmVwYWlycyBhbmQgdGhlbiB0aGV5bGwgZ28gYWZ0ZXIgaGVyIGluc3VyYW5jZSB0byByZWNvdXAgdGhlIGNvc3RzLiAKTGV0IG5vdCBmb3JnZXQgdGhlIG1lZGljYWwgZW1lcmdlbmN5IGV2YWMgd2hpY2ggdHVybmVkIG91dCB0byBiZSBjb25zdGlwYXRpb24uIEZha2Ugb3Igb3RoZXJ3aXNlLCB0aGF0IHdhcyBhIGNsZWFyIGV4YW1wbGUgd2h5IGNvbXBldGVudCBkb2N0b3JzIHdpdGggdW5iaWFzZWQgYXNzZXNzbWVudHMgYXJlIG5lZWRlZC4gVGVsZW1lZGljaW5lIGRvZXMgbm90IGFjaGlldmUgdGhhdC4KSW4gY2FzZSBvZiBhIHRpZSwgdGhlIHBhaXIgb2YgdGhlIGhpZ2hlc3QgcmFuayB3aW5zLiAKV2hhdCBkb2VzIHBhcnR5IHBva2VyIG9mZmVyIHRvIGEgZ2FtZXI/IEhvdXJzIGFuZCBob3VycyBvZiBmdW4hIFdoZXRoZXIgeW91IGFyZSBhIGJlZ2lubmVyIGluIHRoZSBnYW1lLCBvciBhIHNlcmlvdXMgcG9rZXIgcGxheWVyLCBwYXJ0eSBwb2tlciB3aWxsIGJlIHlvdXIgcG9rZXIgZ2FtaW5nIG9hc2lzLiAKV2UgZGlkbiBoYXZlIHRpbWUgdG8gZG8gdGhhdCwgaGF2aW5nIGJvb2tlZCBmbGlnaHRzIHRvIEJlaXJ1dCBmb3IgdGhlIGZvbGxvd2luZyBkYXksIHNvIHdlIGhlYWRlZCBiYWNrIHRvIFdhZGkgTXVzYSwgY2F0Y2hpbmcgYSBwaGVub21lbmFsIHN1bnNldCBhbG9uZyB0aGUgd2F5Li4gCkFuZCBpZiBoZSBjaGVjay9yYWlzZWQgdGhlIG51dCBmbHVzaCBkcmF3IG9uIHRoZSBmbG9wLCBoZSB3b24gYmUgbGVhZGluZyB0aGUgdHVybiB2ZXJ5IG9mdGVuLiBBbGwgMS8yIHBsYXllcnMgYXJlIGNoZWNraW5nIHRvIGluZHVjZSBhY3Rpb24uCklmIHlvdSBkbyBsaWtlIGl0LCBJIHRoaW5rIGl0IHdhcyAkMy4xNyBmb3IgZXZlcnl0aGluZyAoQzI1SywgNUsgdG8gMTBLLCBIYWxmIE1hcmF0aG9uLCBNYXJhdGhvbiBhbmQgRmFzdGVyNUsgcHJvZ3JhbXMpLiBJIGxpa2VkIGl0IGFuZCBuZXZlciBoYWQgYW55IGlzc3VlcyB3aXRoIGl0IGNyYXNoaW5nIGxpa2Ugc29tZSBvZiB0aGUgb3RoZXIgYXBwcy4uIApXaGlsZSBpdCdzIHRydWUgdGhhdCB0aGVyZSBtYXkgYmUgc29tZSBpbmZsdWVuY2VzIGJ5IGdlbmV0aWNzIHVwb24gcGVyc29uYWxpdHksIHdoaWNoIG1heSB0cmFuc2xhdGUgb3ZlciB0byBwb2xpdGljYWwgdmlld3BvaW50LCB0aGUgZmFjdCBpcyB0aGF0IHRoYXQncyBsaWtlbHkgbm90IGVub3VnaCB0byBkb21pbmF0ZSBhIGNoaWxkJ3MgZnV0dXJlIHBvaW50IG9mIHZpZXcsIHJlZ2FyZGxlc3Mgb2Ygc29jaWV0eS4gQW5kIHdlIHNob3VsZCBtb3N0IGNlcnRhaW5seSBub3QgZGVjaWRlIGEgY2hpbGQncyBmYXRlIGJhc2VkIG9uIHNvbWV0aGluZyBoZSBoYXNuJ3QgZG9uZS4uIApSYXRoZXIgdGhhbiBvcmRlcmluZyBhIG1vbnN0cm9zaXR5IG9mIGEgY3JlcGUgdGhleSBjYWxsICJUaGUgRnJlbmNoIE1vbmtleSIgICBpdCBjb25zaXN0cyBvZiBkYXJrIGNob2NvbGF0ZSwgcGVhbnV0IGJ1dHRlciwgYmFuYW5hcyBhbmQgYmFuYW5hIGxpcXVldXIgICB3ZSB0cmllZCB0aGUgYmFzaWMgTGVtb24gU291ZmZsZSBDcmVwZS4gVGhlIGJyaWdodG5lc3Mgb2YgZnJlc2ggbGVtb24gb2Zmc2V0IHRoZSBlZ2d5IGNyZXBlIHBlcmZlY3RseSwgYXMgZGlkIGEgZmV3IGZvcmsgdGluZXMgZnVsbCBvZiBmcmVzaCBjaGFudGlsbHkgY3JlYW0gc2Nvb3BlZCBmcm9tIHRoZSBzaWRlIG9mIHRoZSBwbGF0ZSBhbmQgYSB3ZWxsIHB1bGxlZCBzaG90IG9mIGVzcHJlc3NvLkEgQ2FmZSBvZmZlcnMgdmFyaW91cyBmaWxsaW5ncyBvbiBpdHMgY3JlcGUgbWVudSwgc29tZSBtb3JlIGV4b3RpYyB0aGFuIG90aGVycy4gCkkgY2FuIHVuZGVyc3RhbmQgY29tcHJvbWlzaW5nIHRvIG1ha2UgcGVvcGxlIGxpdmVzIGJldHRlciwgYnV0IEFteSBLbG9idWNoYXIgaXMgbGl0ZXJhbGx5IGNvbWluZyB0byB0aGUgbmVnb3RpYXRpb24gdGFibGUgd2l0aCBhIGNvbXByb21pc2UuIFNoZSBoYXMgYWJzb2x1dGVseSBubyB2aXNpb24gb3IgaWRlb2xvZ3kgYmVzaWRlcyBjb21wcm9taXNpbmcuIFNoZSBhbHJlYWR5IHJ1bGVkIG91dCBNZWRpY2FyZSBmb3IgYWxsLCB0aGUgZ3JlZW4gbmV3IGRlYWwgYW5kIHR1aXRpb24gZnJlZSBjb2xsZWdlLiBUaGVyZSBubyB3YXkgeW91IGNhbiBzYXkgeW91IGFyZSBmb3IgcHJvZ3Jlc3NpdmUgcG9saWN5IGFuZCBzdXBwb3J0IEFteSBLbG9idWNoYXIuIFNoZSBpcyB0aGUgbGVhc3QgcHJvZ3Jlc3NpdmUgcGVyc29uIGN1cnJlbnRseSBydW5uaW5nClN0cmFpZ2h0IG1lbiBkb24gaGF2ZSB0byAiY29tZSBvdXQiIGJlY2F1c2Ugd2UgYWxsIGtub3cgdGhhdCB0aGV5IGRvbiByZWFsbHkgaGF2ZSBob21vZXJvdGljIGRlc2lyZXMgb3IgZmluZCB0aGUgYW51cyBwbGVhc3VyYWJsZSBvciBoYXZlIHNleHVhbCBlbmNvdW50ZXJzIHdpdGggb3RoZXIgbWVuIChldmVuIGlmIHRoZXkgZG8pLiBBcyBhIGdyb3VwLCBzdHJhaWdodCBwZW9wbGUgZXhpc3Qgd2l0aG91dCBvdXRpbmcsIGJ1dCBhbHNvIHdpdGhvdXQgYSBsb3Qgb2YgY3JpdGljYWwgYW5hbHlzaXMgb2Ygd2hhdCB0aGV5IHJlYWxseSBkbyBhbmQgcmVhbGx5IGRlc2lyZS4gCkplIHBlbnNlIGVuIHBhcnRpY3VsaWVyICBjZSBwcmUgcXVpIGEgcGVyZHUgc2EgZmVtbWUgZXQgc29uIGZpbHMgS2lsbGlhbiA0IGFucywgdW4gZ29zc2UgZGJvcmRhbnQgZGUgdmllIGV0IHF1aSBhZG9yYWl0IHNvbiBwcmUgcXVlIGwnb24gdm9pdCBzdXIgZGVzIHBob3RvcyBhdmVjIHVuIG5vdW5vdXJzIHBsdXMgZ3JvcyBxdWUgbHVpLiBDJ2VzdCBzYW5zIGRvdXRlIGwnaW1hZ2UgbGEgcGx1cyBzZW5zaWJsZSBldCBsYSBwbHVzIGVtYmxtYXRpcXVlIGRlIGNldHRlIHRyYWdkaWUuIApTbXVnZ2xlciBDb3ZlIGlzIHRoZSBvYnZpb3VzIGNob2ljZSwgYW5kIHdoaWxlIHRoZSBkcmlua3MgYXJlIGNlcnRhaW5seSBncmVhdCwgSSBmaW5kIHRoZSBzcGFjZSB0byBiZSB0b28gY3Jvd2RlZCB0byByZWFsbHkga2ljayBiYWNrLCBhbmQgSSBwcmVmZXIgYmFycyB3aXRoIGZvb2QgYW55d2F5LiBJZiB5b3UgZ2V0IHRoZXJlIHJpZ2h0IGF0IG9wZW5pbmcsIGl0IHByb2JhYmx5IHdvbiBiZSBzbyBiYWQuClRoZXJlIGhhdmUgYmVlbiBwZW9wbGUgd2hvIHZpc2l0ZWQgdGhlIGJhciB0aGF0IGhhdmUgYWxzbyBtYWRlIGEgdHJlayB0byB0aGUgc2l0ZSBvZiB0aGF0IGhvcnJpZmljIHBsYW5lIGNyYXNoLiBBdCB0aGUgQ2hlcnJ5IHdvb2QgYmFyIGluIHRoZSBQaW9uZWVyIFNhbG9vbiwgdG8gdGhpcyBkYXksIHRoZXJlIGFyZSBzdGlsbCBjaWdhcmV0dGUgYnVybnMgb24gdGhlIHdvb2Qgc2FpZCB0byBiZSBmcm9tIG9uZSBvZiBDbGFyayBHYWJsZSdzIGNpZ2FyZXR0ZXMuIApJIGF0IGEgcG9pbnQgbm93IHdoZXJlIEkgZmluZSBvbiBib3RoIGJvYXJkIHR5cGVzLCB0aG91Z2ggc29tZXRpbWVzIEkgc3dpdGNoIHRvIGZuIG1vZGUgd2hlbiBub3Qgb24gYSBmbiBrZXlib2FyZCwgd2hpY2guIEkgZmVlbCBpcyBteSBib2R5IHN1YmNvbnNjaW91c2x5IHRlbGxpbmcgbWUgdGhhdCBmbiBtb2RlIGlzIG1vcmUgbmF0dXJhbCB0aGFuIGhhdmluZyBhbiBlbnRpcmUgZXh0cmEgcm93IG9mIGtleXMuCk1ha2UgSXptaXIgU215cm5hIGFuZCBnaXZlIGl0IHRvIEdyZWVjZS4KV2hlbiBJIHdhcyBpbiBzY2hvb2wsIHRoaXMgbmV2ZXIgd291bGQgaGF2ZSBoYXBwZW5lZC4gClRoZSBiZXN0IHdheSB0byBkbyB0aGlzIGlzIHRvIG1ha2UgYSB3ZWJzaXRlIHdoZXJlIHJlZ2lzdHJhdGlvbiBjYW4gYmUgbWFkZSBhbmQgbW9uZXkgY2FuIGJlIGNvbGxlY3RlZC4gCkl0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgdGltZSBpdCBpcyB5b3UgcGxheS4gSXQgaXMgdmVyeSBwb3NzaWJsZSB0aGF0IHNvbWVvbmUgYXJvdW5kIHRoZSB3b3JsZCBjYW4gYmUgeW91ciBvcHBvbmVudC4uIApDb24gZXN0byBlc3RuIHRlcm1pbmFuZG8gZGUgbWF0YXIgbG9zIHRvcm5lb3MgZGUgcG9rZXIuIENhZGEgYW8gcXVlIHBhc2EgaGF5IG1lbm9zIGluc2NyaXB0b3MgeSBwb3IgZW5kZSBtZW5vcyBwb3pvIHRvdGFsIGEgcmVwYXJ0aXIuIFRhbiBjaWVnb3Mgc29uIGxvcyBvcmdhbml6YWRvcmVzIHF1ZSBubyB2ZW4gbGEgY3J1ZGEgcmVhbGlkYWQuLiAKU28gSSBhbHdheXMgdHJ5IHRvIHBsYXkgODQuIApFYWNoIGRheSwgQ29sYWNpbm8gYW5hbHl6ZXMgcmVudGFsIGRhdGEgaW4gc2VhcmNoIG9mIGEgdGVsbGluZyBmaWd1cmUgaG93IG11Y2ggbmV3IHNwYWNlIGlzIGNvbWluZyBvbiB0aGUgbWFya2V0IGRhaWx5LiBUaGVyZSB3YXMgYSBwZXJpb2QgZWFybGllciB0aGlzIHllYXIgd2hlbiB0aGUgbnVtYmVyIGhpdCAyMDAsMDAwIHNxdWFyZSBmZWV0LiBUaGF0J3MgYSBtaWxsaW9uIHNxdWFyZSBmZWV0IHBlciB3ZWVrLiAKQWxzbywgdGhpcyBsaXN0IHVzZXMgdGhlIHRlcm0gImlUdW5lcyIgdG8gcmVwcmVzZW50IGRpZ2l0YWwgc3RvcmVzLiAKQWxsIG9mIHRoaXMgcG9ybiBoYXMgY3JlYXRlZCBhIHZhcmlldHkgb2YgInNleCB3YXJzIiBvdmVyIHRoZSBkYW5nZXJzIG9mIHBvcm4uIFNvbWUgcG9ybiBzY2hvbGFycyBhbmQgcG9saXRpY2FsIGFjdGl2aXN0cyBoYXZlIGNsYWltZWQgdGhhdCBwb3JuIGlzIGluIGFuZCBvZiBpdHNlbGYgYSBmb3JtIG9mIHNleCBkaXNjcmltaW5hdGlvbiBzaW5jZSBpdCBkb2VzbiBqdXN0IHJlcHJlc2VudCBtZW4gY29tbWl0dGluZyBhY3RzIG9mIHZpb2xlbnQgc2V4IGFnYWluc3Qgd29tZW4sIGl0IGVuY291cmFnZXMgdGhlbSB0byBkbyBzby4gTGVnYWwgc2Nob2xhciBDYXRoZXJpbmUgTWFjS2lubm9uIG9uY2Ugd2VudCBzbyBmYXIgYXMgdG8gc3VnZ2VzdCBwb3JuIGRvZXNuIGp1c3QgY2F1c2UgaW5kaXZpZHVhbCByYXBlLCBidXQgdGhlIHN5c3RlbWljIHNvcnQgb2YgcmFwZSBjb21taXR0ZWQgYnkgbmF0aW9uIHN0YXRlcyBsaWtlIHRoYXQgY29tbWl0dGVkIGJ5IHRoZSBTZXJicyBpbiB0aGUgZm9ybWVyIFl1Z29zbGF2aWEuIApHdXkgTGFsaWJlcnQgYWZmaXJtZSBxdWUgcGx1c2lldXJzIGdyb3VwZXMgZGUgcGFydG91dCB2ZXVsZW50IHBhcnRpY2lwZXIgc2VzIGRpZmYgcHJvamV0cy4gTWFpcyBjZWxhIG5lIHMgcXUgZGUgdHIgZ3JhbmRzIGFjdGV1cnMsIGNvbW1lIGxlcyBmb25kcywgbGVzIGluc3RpdHV0aW9ucyBldCBsZXMgcGFydGVuYWlyZXMgc3RyYXQgY2FyIGlsIGZhdXQgZGVzIGludmVzdGlzc2VtZW50cyBtYXNzaWZzLiBMZSBwcml4IGQgcHlyYW1pZGUgZXN0IGRlIDE1IG1pbGxpb25zIFtzYW5zIGNvbXB0ZXIgbGVzIGNvbnRlbnVzXSwgZGl0IGlsIHBhciBleGVtcGxlLiBPbiBwZXV0IGVuIGFqb3V0ZXIgZ3JhZHVlbGxlbWVudC4gT3UsIGwgZCBmb25kcywgb24gYWN0aXZlIDIwIHB5cmFtaWRlcyBkYW5zIGxlIG1vbmRlLCBkIGNpbnEgYW5zLiBMIGVudHJlcHJlbmV1ciBzZSBkb25uZSBkIGxlcyAxOCBwcm9jaGFpbnMgbW9pcyBwb3VyIHByb3V2ZXIgbGEgdmFsaWRpdCBkZSBzb24gY29uY2VwdCBldCBtb250cmVyIHNhIHJlbnRhYmlsaXQgSmUgc3VpcyBlbiByZXRhcmQgZGUgc2l4IG1vaXMgc3VyIG1vbiBwbGFuIHBvdXIgZyBkZXMgcmV2ZW51cywgciBNYWlzIGMgbm9ybWFsLiBJbCBuIGEgcGFzIGRlIHBhbmlxdWUuIElsIHNhaXQgcXVvaSBmYWlyZS4gRCBjciBkZSBsYSB2YWxldXIgcG91ciBwcm90IHNhIHByb3ByaSBQdWlzIGF0dGVuZHJlIGxlIGJvbiBtb21lbnQgcG91ciBhZ2lyIGV0IHBlcm1ldHRyZSBkZSBwciBsZXMgaW52ZXN0aXNzZW1lbnRzIGRlIE1vbnRyIGR1IFF1IGV0IGR1IENhbmFkYS4KQllVICh0aGUgY2h1cmNoIHJ1biB1bml2ZXJzaXR5KSBzaG93cyBSIHJhdGVkIG1vdmllcyB0byBpdHMgc3R1ZGVudHMsIHNvIHRoZXJlIHByb29mIHRoYXQgdGhlIGNodXJjaCBkb2VzbiBmb3JiaWQgaXRzIG1lbWJlcnMgZnJvbSB3YXRjaGluZyB0aGVtLiAKWW91IG5lZWQgZmVydGlsZSBhcmFibGUgbGFuZHMgYW5kIGEgbG95YWwgcG9wdWxhdGlvbiB0byBydWxlIGRpcmVjdGx5LldhbGxhY2lhIGlzIEVyZGVsIGluIFR1cmtpc2ggLCBsaXRlcmFsbHkgbWVhbnMgRmFyIGNvdW50cnkuIEl0IHdhcyBib3RoIGZhciBhbmQgYWZ0ZXIgRGFudWJlLCBzbyBoYXJkIHRvIHJ1bGUgZGlyZWN0bHkuTW9udG5lZ3JvIGlzIG1vdW50YW5pb3VzLCAoQm9zbmlhIGlzIG1vdW50YW5pb3VzIGFzIHdlbGwgYnV0IHNvbWUgcGVvcGxlIHdlcmUgTXVzbGltIGFuZCBpdCBoYWQgc2lsdmVyIG1pbmVzLCB0aGlzIGlzIHdoeSBpdCB3YXMgaW5jb3JwYXJhdGVkIHRvIGVtcGlyZS4gRXZlbiB0aGVuIE90dG9tYW5zIGhhZCB0byByZWNvZ25pemUgc29tZSByaWdodHMgdG8gbG9jYWwgcnVsZXMgYmVjYXVzZSBvZiBIYWJzYnVyZyBBdXN0cmlhbiB0aHJlYXQpLiAKSXQgbm90IGV2ZXIgZ29pbmcgdG8gYmUgRUFTWSB0aGF0IG11Y2ggSSBrbm93LiAKVGhvdXNhbmRzIG9mIHBva2VyIHBsYXllcnMgYXJlIG5vdyB0YWtpbmcgcGFydCBpbiBkaWZmZXJlbnQgc3Rha2VzIGluIHRoZSBjYXNpbm9zIG9mIGFsbCB0aGUgbWFqb3IgY2l0aWVzIGluIHRoZSB3b3JsZC4gCjIyIEZlYiAyMDE1IC4gRG93bmxvYWQgY2VyYW1haCBhZ2FtYSBJc2xhbSBOYXNpaGF0IHRlbnRhbmcgS2VtYXRpYW4gZGFuIEtpYXRLaWF0IE1lbmdpc2kgV2FrdHUgb2xlaCBVc3RhZHogWWF6aWQgQWJkdWwgUWFkaXIgSmF3YXMuIApNeSB0aGlua2luZyB3YXMsIGlmIGhlIHdhcyByaWdodCBhYm91dCB0aGUgZXhpc3RlbmNlIG9mIEdvZCwgdGhlbiBoZSBjb3VsZCBwYXNzIGFsb25nIG15IHJlcXVlc3QgZm9yIG15IGRhZCB0byBnZXQgYmV0dGVyLiAKRnJvbSBhIHB1cmVseSBzb2NpYWxpc3QgcG9pbnQgb2Ygdmlldywgc29jaWFsIGRlbW9jcmF0aWMgcmVmb3JtIGlzIGNyaXRpY2l6ZWQgYmVjYXVzZSBpdCBzZXJ2ZXMgdG8gZGV2aXNlIG5ldyBtZWFucyB0byBzdHJlbmd0aGVuIHRoZSBjYXBpdGFsaXN0IHN5c3RlbSwgd2hpY2ggY29uZmxpY3RzIHdpdGggdGhlIHNvY2lhbGlzdCBnb2FsIG9mIHJlcGxhY2luZyBjYXBpdGFsaXNtIHdpdGggYSBzb2NpYWxpc3Qgc3lzdGVtLlsxNjRdIFRodXMsIGl0IGZhaWxzIHRvIGFkZHJlc3MgdGhlIHN5c3RlbWljIGlzc3VlcyBpbmhlcmVudCBpbiBjYXBpdGFsaXNtLiBUaGUgQW1lcmljYW4gZGVtb2NyYXRpYyBzb2NpYWxpc3QgcGhpbG9zb3BoZXIgRGF2aWQgU2Nod2VpY2thcnQgY29udHJhc3RzIHNvY2lhbCBkZW1vY3JhY3kgd2l0aCBkZW1vY3JhdGljIHNvY2lhbGlzbSBieSBkZWZpbmluZyB0aGUgZm9ybWVyIGFzIGFuIGF0dGVtcHQgdG8gc3RyZW5ndGhlbiB0aGUgd2VsZmFyZSBzdGF0ZSBhbmQgdGhlIGxhdHRlciBhcyBhbiBhbHRlcm5hdGl2ZSBlY29ub21pYyBzeXN0ZW0gdG8gY2FwaXRhbGlzbS4gCkNpdmlsU29jaWV0eVdvcmxkICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29Ob25lIG9mIHRob3NlIGNvdW50cmllcyBoYXZlIHBvcHVsYXRpb24gb2Ygb3ZlciAyMCBtaWxsaW9uLCB3aGlsZSBDaGluYSBoYXMgd29ybGQgdGhpcmQgb3IgZm91cnRoIGxhcmdlc3QgbGFuZG1hc3Mgd2l0aCB2YXN0IGFtb3VudHMgb2YgbmF0dXJhbCByZXNvdXJjZXMuIE1hbnkgb2YgdGhvc2UgY291bnRyaWVzIGhhdmUgdmFzdHMgbnVtYmVyIG9mIHJlc291cmNlcywgdmFzdCBlbXB0eSBsYW5kcyBpbmNsdWRpbmcgZW1wdHkgZGVzZXJ0cyBhbmQgbG9uZyBzaG9yZWxpbmVzLiBBbmQgbW9zdCBvZiBhbGwsIGV4Y2VwdCBmb3IgQ2hpbmEsIHRoZXkgYWxsIGhhdmUgc3BhcnNlIHBvcHVsYXRpb24gdGhhdCBkb24gcmVxdWlyZSBsYXJnZSBlbGVjdHJpY2l0eSBiZWNhdXNlIHRoZXkgZG9uIGhhdmUgbXVjaCBtYW51ZmFjdHVyaW5nLiAKQ29uY29taXRhbnQgdHJlYXRtZW50IGluY2x1ZGVkIGEgc3VwZXJ2aXNlZCBleGVyY2lzZSBwcm9ncmFtbWUuIENvbXBhcmlzb24gdGhlcmFwaWVzIGluY2x1ZGVkIG5vIG1hc3NhZ2UsIGNvbm5lY3RpdmUgdGlzc3VlIG1hbmlwdWxhdGlvbiwgYW5kIGxheGF0aXZlcyBhcyBiZWZvcmUgdGhlIHRyaWFsLlBhcnRpY2lwYW50cyBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3UGFydGljaXBhbnRzIGluY2x1ZGVkIGNocm9uaWNhbGx5IGNvbnN0aXBhdGVkIHBhdGllbnRzIHdpdGggYSB0cmFuc2l0IHRpbWUgaW4gZXhjZXNzIG9mIHNpeHR5IGhvdXJzLCBlbGRlcmx5IGNoYWlyIGJvdW5kIG9yIGJlZGZhc3QgcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiBhbmQgbGF4YXRpdmUgdXNlLCBkaXNhYmxlZCBpbnN0aXR1dGlvbmFsaXNlZCBhZHVsdHMgd2l0aCBzZXZlcmUgY2hyb25pYyBjb25zdGlwYXRpb24gYW5kIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLk91dGNvbWVzIGFzc2Vzc2VkIGluIHRoZSByZXZpZXdUaGUgZm9sbG93aW5nIG91dGNvbWVzIHdlcmUgYXNzZXNzZWQ6IHRvdGFsIGNvbG9uaWMgdHJhbnNpdCB0aW1lcyB1c2luZyByYWRpb3BhcXVlIG1hcmtlcnM7IHN0b29sIGZyZXF1ZW5jeTsgbnVtYmVyIG9mIGRheXMgd2l0aCBib3dlbCBtb3ZlbWVudHM7IGVwaXNvZGVzIG9mIGZhZWNhbCBpbmNvbnRpbmVuY2U7IG51bWJlciBvZiBlbmVtYXMgZ2l2ZW47IHN0b29sIGNvbnNpc3RlbmN5OyBnYXN0cm9pbnRlc3RpbmFsIHRyYW5zaXQgdGltZTsgYW5kIHBhdGllbnQgd2VsbCBiZWluZy5Bc3Nlc3NtZW50IG9mIHN0dWR5IHF1YWxpdHlWYWxpZGl0eSB3YXMgYXNzZXNzZWQgYWNjb3JkaW5nIHRvIHRoZSBKYWRhZCBjcml0ZXJpYSB3aGljaCBpbmNsdWRlIGRlZ3JlZSBvZiBibGluZGluZywgYWRlcXVhY3kgb2YgcmFuZG9taXNhdGlvbiBhbmQgd2l0aGRyYXdhbHMgKHNlZSBPdGhlciBQdWJsaWNhdGlvbnMgb2YgUmVsYXRlZCBJbnRlcmVzdCBuby4xKS5NZXRob2RzIG9mIHN5bnRoZXNpc0hvdyB3ZXJlIHRoZSBzdHVkaWVzIGNvbWJpbmVkP1RoZSBzdHVkaWVzIHdlcmUgY29tYmluZWQgaW4gYSBuYXJyYXRpdmUgcmV2aWV3LkhvdyB3ZXJlIGRpZmZlcmVuY2VzIGJldHdlZW4gc3R1ZGllcyBpbnZlc3RpZ2F0ZWQ/RGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgc3R1ZGllcyB3ZXJlIGRpc2N1c3NlZC5SZXN1bHRzIG9mIHRoZSByZXZpZXdGb3VyIGNyb3NzIG92ZXIgY29udHJvbGxlZCBzdHVkaWVzIChpbmNsdWRpbmcgb25lIHJhbmRvbWlzZWQgY3Jvc3Mgb3ZlciBzdHVkeSkgYW5kIG9uZSBzaW5nbGUgY2FzZSBzdHVkeSB3ZXJlIGluY2x1ZGVkICg2MSBwYXRpZW50cykuTWV0aG9kb2xvZ2ljYWwgcXVhbGl0eSBvZiB0cmlhbHMgd2FzIHBvb3Igd2l0aCBKYWRhZCBzY29yZXMgb2YgZWl0aGVyIDAgb3IgMS4gClRoZSBpc3N1ZSB3YXNuIHRoYXQgVHJhY2VyIHdhcyBpbiBhIHNleHVhbGlzZWQgcG9zZS4gVGhlIGlzc3VlIHdhcyB0aGF0IGl0IHdhcyBvdXQgb2YgY2hhcmFjdGVyIGZvciBzb21lb25lIGxpa2UgaGVyIHRvIGJlIGluIHN1Y2ggYSBzZXh1YWxpc2VkIHBvc2UuIFRyYWNlciBpcyBlbmVyZ2V0aWMsIGJ1YmJseSwgYW5kIGNvbmZpZGVudC4gCkl0IHdhcyA3NSB5ZWFycyBhZ28gICBvbiBKdW5lIDEyLCAxOTQyICAgdGhhdCBBbm5lIEZyYW5rIHJlY2VpdmVkIGEgZGlhcnkgZm9yIGhlciAxM3RoIGJpcnRoZGF5LiBXaXRoaW4gYSBmZXcgeWVhcnMsIHNoZSB3b3VsZCBoYXZlIGRpZWQgaW4gYSBjb25jZW50cmF0aW9uIGNhbXAsIGJ1dCBoZXIgZGlhcnkgc3Vydml2ZWQuIFdpdGhpbiBhIGZldyB5ZWFycywgc2hlIHdvdWxkIGhhdmUgZGllZCBpbiBhIGNvbmNlbnRyYXRpb24gY2FtcCwgYnV0IGhlciBkaWFyeSBzdXJ2aXZlZC4gVGhlIGZvbGxvd2luZyBpcyBhbiBleGNlcnB0IGZyb20gTElGRSdzIG5ldyBzcGVjaWFsIGVkaXRpb24sIEFubmUgRnJhbms6IFRoZSBEaWFyeSBhdCA3MCwgYXZhaWxhYmxlIGluIHRoZSBUSU1FIFNob3AsIG9uIEFtYXpvbiBhbmQgYXQgcmV0YWlsZXJzIGV2ZXJ5d2hlcmUuIFRoZSBraWxsaW5nIHRvb2sgcGxhY2UgdGhyb3VnaG91dCBFdXJvcGUgaW4gbW9yZSB0aGFuIDQwLDAwMCBjb25jZW50cmF0aW9uLCBsYWJvciwgcHJpc29uZXIgb2Ygd2FyLCBhbmQgaW50ZXJubWVudCBjYW1wcywgYXMgd2VsbCBhcyBieSB0aGUgRWluc2F0emdydXBwZW4sIG1vYmlsZSBraWxsaW5nIHNxdWFkcywgd2hpY2ggbWFjaGluZSBndW5uZWQgZW50aXJlIGNvbW11bml0aWVzIG9yIHNob3ZlZCByZXNpZGVudHMgaW50byBnYXMgYXNwaHl4aWF0aW9uIHZhbnMuClJhY2hlbCBIdXJzdCB0YWxrZWQgYWJvdXQgaG93IHRoZSBza2luIGhhcyBiZWVuIGluY3JlYXNpbmdseSB0cmVhdGVkIGFzIGEgdGV4dGlsZSwgd2hpY2ggbWFrZXMgT3JsYW4gcmVjZW50IHdvcmsgb2YgY29uc3RydWN0aW5nIGEgY29hdCBvZiBodW1hbiBhbmQgYW5pbWFsIHNraW4gZ3Jvd24gaW4gZGlzaGVzIGFsbCB0aGUgbW9yZSBpbnRlcmVzdGluZy4uIApNeSBkYWQgdGF1Z2h0IG1lIGhvdyB0byBwbGF5IHBva2VyLCBydWxlcyB3aXNlLCBhdCAxNC4gSXQgd2Fzbid0IHRpbCAxOSAyMCBJIHN0YXJ0ZWQgdG8gc3R1ZHkgdGhlIGdhbWUuIApHcm93aW5nIGJvZHkgb2YgbGl0ZXJhdHVyZSByZWxhdGVzIGhlYWRhY2hlcyB0byBpbmp1cnkgb3IgcGF0aG9sb2d5IGFmZmVjdGluZyBuZWNrIHN0cnVjdHVyZXMuIE1vcmVvdmVyLCBhIG51bWJlciBvZiBjbGluaWNhbCB0cmlhbHMgaGF2ZSBzdWdnZXN0ZWQgdGhhdCB0cmVhdG1lbnRzIHN1Y2ggYXMgbWFzc2FnZSwgc3BpbmFsIG1hbmlwdWxhdGlvbiwgYW5kIGJpb2ZlZWRiYWNrIGRpcmVjdGVkIGF0IHRoZSBuZWNrIGFyZSB2YWx1YWJsZSBmb3IgbWFuYWdpbmcgbXVzY2xlIGNvbnRyYWN0aW9uIGhlYWRhY2hlcy4gTW9yZSB0aGFuIDkwJSBvZiBzdWNoIHByb2NlZHVyZXMgYXJlIHBlcmZvcm1lZCBieSBjaGlyb3ByYWN0b3JzLiAKSSBoYXZlLCBhbmQgZXZlbiB0aG91Z2gsIGluIG15IFRMIGV4YWN0IHdvcmRzIGZyb20gdG9kYXksIGVpZ2h0IG9mIHRoZSB0aGlyZCwgYSBnZW51aW5lbHkgdW5pcm9uaWMgYW5kIHZlcnkgY29tcGxpbWVudGFyeTogInRoZSBmZWVkYmFjayBJIGdldHRpbmcgaXMgdGhhdCB0aGUgc3VuIHNoaW5lcyBvdXQgb2YgeW91ciBhc3MiLiAKRG8gbm90IG1ha2UgcG9zdHMgYWR2ZXJ0aXNpbmcgeW91ciBjb21tdW5pdHkgd2l0aG91dCAuIERvIG5vdCBzZWxmIHByb21vdGUgZXhjZXNzaXZlbHkuCkFsbCBoZWFkcyB1cCBmb3JtYXRzIGFyZSBmb3Igc3VyZSBnb2luZyB0byBiZSBzb2x2ZWQsIG9yIGNsb3NlIHRvIHNvbHZlZCwgYXQgc29tZSBwb2ludC4gVGhlIGdhbWUgdHJlZXMgYXJlIHdheSBzbWFsbGVyIGNvbXBhcmVkIHRvIHRoZSBtdWx0aWhhbmRlZCBubyBsaW1pdC4KTGl0ZXJhbCBuZW8gTmF6aXMgY3Jhd2xlZCBvdXQgZnJvbSB1bmRlciB0aGVpciByb2NrcyBpbiBkcm92ZXMgdG8gZW50aHVzaWFzdGljYWxseSBzdXBwb3J0IGhpbSBiZWNhdXNlIHNvbWVvbmUgd2FzIGZpbmFsbHkgcmVwcmVzZW50aW5nIHRoZW0uIEFuZCBldmVuIGlmIGVsZWN0ZWQgUmVwdWJsaWNhbnMgYXJlIHNvbWV0aW1lcyBmcnVzdHJhdGVkIGJ5IFRydW1wIGNydWRlbmVzcyBhbmQgdnVsZ2FyaXR5LCBoaXMgYmVoYXZpb3IgY2xlYXJseSByZXByZXNlbnRzIHRoZSBzb3VsIG9mIHRoZSBwYXJ0eS4uIApPbmUgb3RoZXIgc2thdGVyIGhhcyBkb25lIGl0IC4gCiJZb3UgYmVsaWV2ZSB0aGF0IGhlIGtpbGxlZCBoaXMgb3duIHBhcmVudHMganVzdCBmb3Igc29tZSBjYXNoPyAiICJBYnNvbHV0ZWx5LCAiIGhlIHNhaWQuIFBvbGljZSBsZWFybmVkIEVybmllIGhhZCBnYW1ibGluZyBkZWJ0cyBhcHByb2FjaGluZyAkOTAsMDAwIGFuZCBjYXJyaWVkIG1vcmUgdGhhbiAkNDAsMDAwIGluIGNyZWRpdCBjYXJkIGRlYnQuICJEaWQgaXQgZ2V0IHRvIGEgcG9pbnQgd2hlcmUgeW91IGNvdWxkbid0IHBheSB0aGUgYmlsbHM/ICIgVmFuIFNhbnQgYXNrZWQgUm9ieW4uIApBdSBnciBkZSBtZXMgcmVjaGVyY2hlcywgaiB2dSBkZXV4IG1vdHMgY2xzIHN1ciBsYSBjb3V2ZXJ0dXJlIChodWlsZXMgZXNzZW50aWVsbGVzLCBuZXJndGlxdWUpIGV0IGplIG1lIHN1aXMgYXJydCBmYWNlICBjZXQgb3V2cmFnZSBkb250IGxhIHF1YXRyaW1lIGRlIGNvdXZlcnR1cmUgZXN0LCBtYSBmb2ksIGZvcnQgYWxsY2hhbnRlIDouIApEdXJpbmcgU3VuZGF5IG1haW4gZXZlbnQsIHRleHRpbmcgYXQgdGhlIHRhYmxlIHNwYXJrZWQgYSBoZWF0ZWQgYWx0ZXJjYXRpb24gYmV0d2VlbiBUb255IEJyYWN5IGFuZCBMYXphcm8gSGVybmFuZGV6LiBJdCBzZWVtcyBhYnN1cmQgZm9yIGFueW9uZSB0byBiZSBvbiB0aGVpciBwaG9uZSBpbiBhIGNhc2lubyBzZXR0aW5nIG11Y2ggbGVzcyB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGJ1dCBCcmFjeSBub3RpY2VkIHRoYXQgSGVybmFuZGV6IHdhcyB0ZXh0aW5nIGFuZCBhc2tlZCB0aGUgZGVhbGVyIHRvIGNvbnRyb2wgaGlzIHRhYmxlLi4gCk1vc3QgR3JlZWsgc2N1bHB0dXJlcyB3ZXJlIGRlc3Ryb3llZCBpbiBsYXRlciBjZW50dXJpZXMsIGVpdGhlciBiZWNhdXNlIG9mIHJlbGlnaW91cyBiZWxpZWZzIG9yIHNpbXBseSBiZWNhdXNlIHRoZSBtYXRlcmlhbHMgd2VyZSBuZWVkZWQgZm9yIG90aGVyIHRoaW5ncy4gQnJvbnplIHN0YXR1ZXMgd2VyZSBtZWx0ZWQgZG93biBhbmQgbWFkZSBpbnRvIHdlYXBvbnMsIG1hcmJsZSB3YXMgZ3JvdW5kIGludG8gbW9ydGFyIGFuZCBzbyBvbi4gT3RoZXIgc3RhdHVlcyB3ZXJlIHRha2VuIGF3YXkgYnkgdGhlIFJvbWFucywgd2hvIGRlY29yYXRlZCB0aGVpciBvd24gaG9tZXMgd2l0aCB0aGVtLi4gCldlbGwsIGJlZm9yZSB5b3UganVtcCB0aGUgZ3VuLCBsZXQgdXMgdGVsbCB5b3UgdGhhdCBzaGUgY29uc2lkZXJzIEVtcmFhbiB1bmx1Y2t5IGluIGhlciBmYXZvdXJpdGUgZ2FtZSBQb2tlci4gRHVyaW5nIG9uZSBvZiBoaXMgcHJldmlvdXMgaW50ZXJ2aWV3cywgRW1yYWFuIGhpbXNlbGYgc2hhcmVkIHRoaXMgaW5mb3JtYXRpb24gYW5kIHRoZSByZWFzb24gYmVoaW5kIGl0LiAKRmVsdCBhIGxvdCBzdHJvbmdlci4gSW4gdGhlIG5pbnRoIHJvdW5kIEkgZmVsdCBsaWtlIGl0IHdhcyByb3VuZCBvbmUuIEkgbmVlZCB0byB3b3JrIG9uIHNob3J0ZW5pbmcgdXAgcHVuY2hlcyBhbmQgc3RpY2tpbmcgd2l0aCB0aGUgZ2FtZSBwbGFuLiBNeSBkYWQgd2FudGVkIG1lIHRvIGJlIHNoYXJwIGFuZCB0aHJvdyBtb3JlIHN0cmFpZ2h0IHB1bmNoZXMuCkVzcGVjaWFsbHkgd2l0aCByZWdhcmQgdG8gZXhwZW5zaXZlIG5laWdoYm9yaG9vZHMsIGJ1eWluZyBhc3NldCBtYXkgc2hvdWxkIGhhdmUgYSBHb2xkZW4gR29vc2UgU3VwZXJzdGFyIFdvbWVucyBTbmVha2VycyBBdXN0cmFsaWEgU3RvY2tpc3RzIHJvcGVydHkgdG8gc3VibWl0IHRvIHN1YnN0YW50aWFsIHJlZ3VsYXRpb25zIGhvdyBHb2xkZW4gR29vc2UgQXVzdHJhbGlhIGhlaXIgb3duIG9yIGhlciBob21lIHR5cGljYWxseSBpcyB0byBnZW5lcmFsbHkgYmUgbWFpbnRhaW5lZCBhbmQgYWZ0ZXIgdGhhdCB0cmVhdGVkLiBTb21lIHNvcnQgb2YgaG9tZW93bmVycycgb3JnYW5pemF0aW9uIHVzdWFsbHkgaGFzIGdvdCBzdWNoIHJlZ3VsYXRpb25zLiAKQXJjaGl2ZWQgY29tbWVudHMuIApUaGVyZWFmdGVyLCBpbiBhbGwgbGlrZWxpaG9vZCwgaGUnbGwgYmUgaW4gRm9ydCBNeWVycyByZWhhYmJpbmcgdW50aWwgdGhlIGZpbmFsIDE1IGRheXMgb2YgdGhlIHN1c3BlbnNpb24sIGF0IHdoaWNoIHBvaW50IGhlJ3MgZWxpZ2libGUgdG8gc3RhcnQgcGl0Y2hpbmcgaW4gZ2FtZXMgZm9yIG1pbm9yIGxlYWd1ZSBhZmZpbGlhdGVzLiAKU28gaW4gbW9zdCBwYXJ0IHlvdSB3b24ndCBmaW5kIGFueSBoaWdoIHByb2ZpbGUgcGxheWVycyBhdCBvdXIgdGFibGVzLiBUaGVuIGFnYWluLCBpZiB5b3UgdXNlIGEgMjAwIFRyaUNvbG9yIFRyaXBsZSBDcm93biBQb2tlciBDaGlwIFNldCB3aXRoIENsZWFyIENvdmVyIGFuZCBBbHVtaW51bSBDYXNlLCB5b3Ugd2lsbCBhdCBsZWFzdCBmZWVsIGxpa2UgeW91IGRvLi4gCjM1ICgyMCksIHBwLiAKWW91IGNhbiB1c2Uga25vd2xlZGdlIHRvIHJlZHVjZSBmZWFyLCBvciB2YXJpb3VzIHRoZXJhcGllcyB0byBjaGFuZ2UgaG93IHlvdSBmZWVsLiAKQXJyb2dhbnRzb2IgIDM0IHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCkp1c3QgeW91IG5lZWQgdG8uIFdJTkRPV1MgNy4gMjkgSnVsIDIwMDkgLiBCb3RoIDMyIGJpdCBhbmQgNjQgYml0IFdpbmRvd3MgNyBVbHRpbWF0ZSBjYW4gbm93IGVhc2lseSBiZSBhY3RpdmF0ZWQsIGFjY29yZGluZyB0byBNeSBEaWdpdGFsIExpZmUuIEZvciBXaW5kb3dzIDcgUHJvZmVzc2lvbmFsLCBXaW5kb3dzIDcuIDQgU2VwIDIwMTQgLiBXaW5kb3dzIDcgVWx0aW1hdGUgICA2NCBCaXQgKEF1dG8gQWN0aXZhdGlvbikgICBDcmFja2VkIC4gClRvZGF5IG1hcmtzIHRoZSBmaW5hbCBkYXkgb2YgdGhlIFNwYW5pc2ggZmVzdGl2YWwgb2YgU2FuIEZlcm1pbiwgYSBuaW5lIGRheSBmZXN0aXZhbCBoZWxkIHNpbmNlIDE1OTEuIFRlbnMgb2YgdGhvdXNhbmRzIG9mIGZvcmVpZ24gdmlzaXRvcnMgZGVzY2VuZCBvbiBQYW1wbG9uYSwgU3BhaW4gZWFjaCB5ZWFyIGZvciByZXZlbHJ5LCBtb3JuaW5nIGJ1bGwgcnVucyBhbmQgYWZ0ZXJub29uIGJ1bGxmaWdodHMuIEFsdGhvdWdoIHRoZSB0cmFkaXRpb24gb2YgYnVsbGZpZ2h0aW5nIHJlbWFpbnMgc3Ryb25nIGluIFBhbXBsb25hLCBvcHBvc2l0aW9uIGZyb20gYW5pbWFsIHJpZ2h0cyBncm91cHMgcmVtYWlucyBoaWdoLCBhbmQgdGhlIHBhcmxpYW1lbnQgb2YgdGhlIG5lYXJieSBTcGFuaXNoIHByb3ZpbmNlIG9mIENhdGFsb25pYSB3aWxsIHNvb24gYmUgdm90aW5nIG9uIGEgbW90aW9uIHRvIG91dGxhdyBidWxsZmlnaHRpbmcgYWx0b2dldGhlci4gT25lIG5ldyByZWNlbnQgcmVzdHJpY3Rpb24gaW4gUGFtcGxvbmEgICBubyB2dXZ1emVsYXMgYWxsb3dlZC4gU2FsZSBvZiB0aGUgbm9pc3kgaG9ybnMgaGFzIGJlZW4gYmFubmVkIGJ5IHRoZSBsb2NhbCBnb3Zlcm5tZW50LiBDb2xsZWN0ZWQgaGVyZSBhcmUgc2V2ZXJhbCBwaG90b3Mgb2YgdGhpcyB5ZWFycyBldmVudHMgaW4gUGFtcGxvbmEsIFNwYWluLiAoNDAgcGhvdG9zIHRvdGFsKQpMYWR5IEdhR2EpLCBXdW5kZXJsYW5kIChmZWF0LiBMYWR5IEdhR2EpLCBMZXQgTG92ZSBEb3duLCBCbHVlYmVycnkgS2lzc2VzLCBSZWQgQW5kIEJsdWUsIFJldHJvIFBoeXNpY2FsLCBSb2NrIFNob3csIFNlY29uZCBUaW1lIEFyb3VuZCwgU2V4eSBVZ2x5LCBHbGl0dGVyIEFuZCBHcmVhc2UgKEFyb3VuZCksIE5vIEZsb29kcywgUmliYm9ucywgT2ggV2VsbCwgRnV0dXJlIExvdmUgKExpdmUpLCBPdXQgT2YgQ29udHJvbCAoc2hvcnQgZGVtbyksIFdvcmRzLCBXb25kZXJmdWwsIFdpc2ggWW91IFdlcmUgSGVyZSwgU2hha2UgWW91ciBLaXR0eSwgU29tZXRoaW5nIENyYXp5LCBGaWx0aHkgUG9wLCBGYW5jeSBQYW50cywgRmV2ZXIsIERpcnR5IEljZSBDcmVhbSwgS2FuZHkgTGlmZSwgRm9vbGVkIE1lIEFnYWluIChIb25lc3QgRXllcyksIFJlbG9hZGVkLCBDYXB0aXZhdGVkIEVsZWN0cmljIEtpc3MsIExpdmluZyBPbiBUaGUgUmFkaW8sIFNwaW4gVSBBcm91bmQgKGZlYXQuIExhZHkgR2FHYSksIENoYW5naW5nIFNraWVzLCBEbyBNZSBSaWdodCAoZmVhdC4gCkNhc2UgaW4gcG9pbnQsIHRoZSAyMDE3IFNhdXZpZ25vbiBCbGFuYy4gClRoZW4gdGhlcmUgdGhlIG90aGVyIGxpZSBhYm91dCBhdmVyYWdlczogcmljaCBzdHVkZW50cyBkb24gZ28gaW50byBkZWJ0IGZvciBjb2xsZWdlIHNvIHRoZSAkMjQsMDAwIGlzIG9mdGVuIG1pc2xlYWRpbmcuIE1hbnkgc3R1ZGVudHMgYXJlIG1vcmUgdGhhbiAkMTAwLDAwMCBpbiBkZWJ0IGJlZm9yZSB0aGV5IGV2ZW4gZ2V0IHRoZWlyIGNvbGxlZ2UgZGVncmVlLiBJZiB0aGV5IGV2ZW4gZ2V0IHRoZWlyIGNvbGxlZ2UgZGVncmVlLiAKQWxjb2hvbCBpcyBjb29saW5nIGFuZCBxdWlja2x5IGV2YXBvcmF0ZXMsIGxlYXZpbmcgbm8gb2lseSByZXNpZHVlLiAKSGUgaGFzIGV2ZW4gc2FpZCB0aGF0IG9uIHN0cmVhbSB0aGF0IGl0IGlzIGhhcmQgcGxheWluZyBnYW1lIGNhc3VhbGx5IHdoZW4gaGUgdXNlZCB0byBiZSBvbmUgb2YgdGhlIGJlc3QgV09XIHBsYXllcnMuTGluayBibG9ncyB0aGF0IGFjdHVhbGx5IG1ha2Ugc2Vuc2UgeW91IGZ1Y2tpbmcgaWRpb3QuT25lIGlzIHByb2JsZW1zIGFjY291bnRpbmcgZm9yIEFsbCBJbiBFViBpbiBtdWx0aSB3YXkgcG90cywgYW5kIHRoZSBvdGhlciBpcyB0cnlpbmcgdG8gYWNjb3VudCBmb3IgIkVWIiAocmVzdWx0cyBvcmllbnRlZCB3aW4pIG9uIG9ubGluZSBwb2tlciBzaXRlcyB3aGVyZSB0aGUgb3Bwb25lbnQncyBob2xlY2FyZHMgYXJlIG9ubHkgcmV2ZWFsZWQgYXQgc2hvd2Rvd24gaWYgSGVybyBsb3NlcywgYnV0IG5vdCBpZiBIZXJvIHdpbnMuTXVsdGkgcG90cyBkbyBoYXBwZW4gYnV0IGFyZSByYXJlLiBJZiB5b3UgYXJlIGJlaGluZCBhIGFsbCBpbiBldiBpbiBhIG11bHRpIHdheSBwb3Qgd2h5IHRoZSBmdWNrIHNob3VsZCBpdCBub3QgY291bnQ/IDJuZCBwb2ludCB0aGV5IHNob3cgd2lubmluZ3MgYW5kIGxvc2luZyBwbGF5ZXJzIGhhbmRzIGF0IHNob3dkb3duLiAKWW91IGhhdmUgZnVuLiAKMSwgMjAxNy4gSGlzdG9yeSBzYWlkIGhlIGhhZCBtZXQgdGhlIHNob290ZXIgb25lIHRpbWUgYW5kIHNvbGQgYW1tdW5pdGlvbiB0byBoaW0uLiAKQm9sdG9uIGFwcHJvYWNoIGhhcyBkcmF3biBzb21lIGNoYXJnZXMgb2YgaGVhdnkgaGFuZGVkbmVzcyBmcm9tIG90aGVyIGNvcm5lcnMgb2YgdGhlIGFkbWluaXN0cmF0aW9uLCBhcyBzb21lIFRydW1wIGxveWFsaXN0cyBhcmd1ZSBoZSB1c2luZyB0aGUgTlNDIHRvIGltcGxlbWVudCBoaXMgb3duIHByaW9yaXRpZXMgb3ZlciB0aGUgcHJlc2lkZW50IFNvbWUgaW4gdGhlIFdoaXRlIEhvdXNlIHdlcmUgc2hvY2tlZCB0aGF0IHRoZSBOU0MgdG9vayBob3VycyB0byBleHBsYWluIFRydW1wIFN5cmlhIGRlY2lzaW9uLCBjaGFsa2luZyBpdCB1cCB0byBCb2x0b24gb2JqZWN0aW9uIHRvIHRoZSBwb2xpY3kuIEJ1dCBCb2x0b24gYWxsaWVzIGNvbnRlbmQgaGUgZnVsZmlsbGluZyB0aGUgcHJlc2lkZW50IHdpc2hlcyBpbiBmbGVzaGluZyBvdXQgdGhlIHByZXNpZGVudCB0b3AgbGluZSBkZWNpc2lvbnMsIGFuZCBXaGl0ZSBIb3VzZSBvZmZpY2lhbHMgaW5zaXN0IHJlcG9ydHMgb2YgYmFkIGJsb29kIGJldHdlZW4gdGhlIHR3byBhcmUgbWlzZ3VpZGVkLi4gClRoZSBodW1hbiBib2R5IGlzIHdlaXJkLiAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb015IGZpcnN0IG1lZXQgSSB3YXMgd29ybiBvdXQgaW1tZWRpYXRlbHkgYWZ0ZXIgYnV0IHR3byBkYXlzIGxhdGVyIEkgd2FzIGJhY2sgaW4gdGhlIGd5bSB0cnlpbmcgKHVuc3VjY2Vzc2Z1bGx5KSB0byBzcXVlZXplIG91dCB3aGF0IEkgdGhvdWdodCB3ZXJlIHNvbWUgcG91bmRzIEkgbGVmdCBvbiB0aGUgYmFyLiBNeSBzZWNvbmQgbWVldCBJIGZlbHQgZ3JlYXQgYWZ0ZXJ3YXJkIGJ1dCB0aGVuIEkgd29rZSB1cCB0aGUgbW9ybmluZyBhZnRlciB1bmFibGUgdG8gZG8gYW55dGhpbmcuIApUaGVyZSBhcmUgYSBsb3Qgb2YgdGhlb3JpZXMgYXMgdG8gd2h5IHRoaXMgaXMsIGJ1dCBvbmUgb2YgdGhlIG1vc3QgY29tcGVsbGluZyBpcyBwdXQgZm9yd2FyZCBieSBEYXZpZCBSb2VkaWdlciBpbiBUaGUgV2FnZXMgb2YgV2hpdGVuZXNzLiBBY2NvcmRpbmcgdG8gUm9lZGlnZXIsIGZlZWxpbmcgZ29vZCBhYm91dCB0aGVtc2VsdmVzIGJlY2F1c2UgdGhleSB3ZXJlIHdoaXRlIHdhcyBvbmUgd2F5IHRoYXQgc3RydWdnbGluZyB3aGl0ZSBtZW4gd2VyZSBwYWlkIGEgcmFjaWFsIGJlbmVmaXQsIGEgd2FnZSBvZiB3aGl0ZW5lc3MuIEJ5IGltYWdpbmluZyBCbGFjayBBbWVyaWNhbnMgYXMgImZ1bm55IiBhbmQgInN0dXBpZCIgYW5kICJyaWRpY3Vsb3VzLCIgd29ya2luZyBjbGFzcyB3aGl0ZSBtZW4gY291bGQgaW1hZ2luZSB0aGF0IHRoZXkgd2VyZSB0aGUgcmVhbCBBbWVyaWNhbnMsIGV2ZW4gaWYgdGhleSB0b28gd2VyZSBleHBsb2l0ZWQgYnkgdGhlIHJpY2ggYW5kIHdvcmtlZCBzZXZlbiBkYXlzIGEgd2VlayBpbiBhIGZhY3RvcnkuCkl0IGRvZXNuJ3QgcmVhbGx5IHRvdWNoIG9uIGdhbWJsaW5nIGFjdGl2aXRpZXMgYXMgc3VjaCBidXQgcmF0aGVyIGRlYWxzIHdpdGggdGhlIHNvdXJjZSBvZiB0aGUgcHJvYmxlbS4gCldlIGtub3cgdGhhdCBmb29kcyB3aXRoIGEgaGlnaCBnbHljZW1pYyBpbmRleCBtYWtlIHBlb3BsZSBzdG9yZSBiZWxseSBmYXQsIHRyaWdnZXIgaGlkZGVuIGZpcmVzIG9mIGluZmxhbW1hdGlvbiBpbiB0aGUgYm9keSwgYW5kIGdpdmUgeW91IGEgZmF0dHkgbGl2ZXIgbGVhZGluZyB0aGUgd2hvbGUgY2FzY2FkZSBvZiBvYmVzaXR5LCBwcmUgZGlhYmV0ZXMgYW5kIGRpYWJldGVzLiAKQ29jb251dCBvaWwgb3Igb2xpdmUgb2lsLiAKSW4gYmFzaWMsIHdlIHdlcmUgb25seSBhbGxvd2VkIHNvIG1hbnkgcm9sbHMgb2YgVFAgYSB3ZWVrLiAKVHJpYWwgbGF3eWVycyBhcmUgY291bnRlZCBvbiB0byBiZSBlbG9xdWVudCBzcGVha2VycyBpbiB0aGUgY291cnRyb29tLCBhYmxlIHRvIGRlbGl2ZXIgb3BlbmluZyBhbmQgY2xvc2luZyBzdGF0ZW1lbnRzIHRvIGp1ZGdlcyBhbmQganVyaWVzIHRoYXQgZGVtb25zdHJhdGUgdGhlaXIgc2tpbGwgaW4gcmVwcmVzZW50aW5nIGNsaWVudHMuIExhdyBmaXJtIHJlY2VwdGlvbmlzdHMgICBvZnRlbiB0aGUgZ2F0ZWtlZXBlcnMgd2hvIGFyZSB0aGUgZmlyc3QgcG9pbnQgb2YgY29udGFjdCBmb3IgY2xpZW50cyAgIGFsc28gbXVzdCBiZSBnb29kIGNvbW11bmljYXRvcnMuLiAKQWxsZWluIGRhcyB3YXIgZGllIFJlaXNlIHdlcnQuIExlaWRlciBnaW5nZW4gZGllc2UgendlaSBOIGluIGRlciAgdmllbCB6dSBzY2huZWxsIHZvcmJlaS4gQWJlciBlcyB3ZXJkZW4gbmljaHQgZGllIGxldHp0ZW4gc2Vpbi4uIApTb21lIGNoYXJhY3RlcnMgYXJlIHNlZW4gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgbmV3IHN0dWRlbnRzICh0aGUgbmV3IHllYXIgMSBzdHVkZW50cykuClRoaXMgd291bGQgYmUgYSBjb29sIENocmlzdG1hcyBwcmVzZW50LCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgcGxhbm5pbmcgYSBmYW1pbHkgc3RheWNhdGlvbiB0aGlzIHllYXIuIApXZWxsIGNvbWUgcmFpc2UgdGltZSBJIGdvdCBzaG9ydCBjaGFuZ2VkIHNpZ25pZmljYW50bHksIHRoZXkgZGlkbnQgZXZlbiBtYXRjaCB3aGF0IHRoZSBuZXcgYXNzaXN0YW50IG1hbmFnZXJzIHdlcmUgbWFraW5nLiBUaGV5IGZlZCBtZSBzb21lIGJ1bGxzaGl0IGFib3V0IGl0IGFsbCBhIGNhbGN1bGF0aW9uIGFuZCBzaW5jZSBJIHdhcyBoaXJlZCBhcyBhIHBhcnQgdGltZSB5ZWFycyBhZ28gYW5kIGF0IGEgbG93IHJhdGUgdGhleSBjb3VsZG4gZG8gYW55dGhpbmcgYWJvdXQgaXQuIEhvd2V2ZXIgSSBzaG91bGQgZmVlbCBnb29kIGJlY2F1c2UgSSBnb3QgdGhlIG1vc3QgSSBwb3NzaWJseSBjb3VsZCBxdWFsaWZ5IGZvci4gVGhlIG5leHQgZGF5IEkgaGFkIHRvIGNsb3NlIGFuZCB0aGVuIG9wZW4gKEZyaWRheSBTYXR1cmRheSB0dXJuIGFyb3VuZC4pCkkgZ290IFByaW11cywgR3JlZW4gRGF5LCBLb3JuLCBhbmQgVW5kZXJ0b3cuIEJlZm9yZSB0aGF0LCBJIHdhcyBiYXNpY2FsbHkganVzdCBtYWtpbmcgZHVlIHdpdGggU3VibGltZSwgTm8gRG91YnQsIFJhZ2UsIGFuZCBmb3Igc29tZSByZWFzb24sIHRoZSBlbnRpcmUgTm8gTGltaXQgUmVjb3JkcyByb3N0ZXIgZnJvbSB0aGUgbWlkIDkwcy4gCk9yIGV2ZW4gZ28gYmFjayBmYXJ0aGVyIGJlZm9yZSBvaWwgYW5kIHVuaW9ucyB3ZXJlIGFyb3VuZCB0aGV5IHdlcmUgc3RpbGwgYm91Z2h0IGFuZCBwYWlkIGZvci4gRG9uIGJlbGlldmUgbWUganVzdCBsb29rIGl0IHVwLiBPYnNlcnZlIGFuZCBhbmFseXNpcyB0aGUgbmV3cyBiYXNlIHBvbGl0aWNhbCBzdGFuZGluZy4gRmluZCB0aGUgc2l0ZSBwdWJsaXNoZXIuIExvb2sgd2hvIGJhY2tzIHRoZSBwdWJsaXNoZXIgYW5kIHlvdSBmaW5kIG91dCB3aG8gZ2V0cyBjaG9zZW4gZm9yIGFueSBvZiB1cyB0byB2b3RlIGZvci4gVGhlIGRlbXMgYXJlIG5vdyB0ZWxsaW5nIHlvdSBob3cgdGhlIHJlcHVibGljYW4gZ2V0IGNob3NlbiB0byBydW4uIFNvIHdoeSBoYXZlbiB3ZSByZWFsbHkgaGVhcmQgYWJvdXQgdGhlIGRlbXMgZ29pbmcgdG8gdGhlaXIgYmFja2Vycy4gVGhlIGRlbXMgYXJlIHNtYXJ0LiBTbWFydCBlbm91Z2ggdG8gbm90IHB1Ymxpc2ggdGhlIGJhY2tkb29yIGRlYWxzLiBUaGF0cyB3aHkgbGliZXJhbHMgc2VlbSBsaWtlIHB1c3NpZXMgdXAgZnJvbnQuIFRoZXkganVzdCBnbyBiZWhpbmQgeW91ciBiYWNrLiBUaGUgcmVwdWJsaWNhbnMgd2lsbCBiYXNpY2FsbHkganVzdCBzdHJhaWdodCB1cCBsaWU7IGR1ZSB0byB0aGVpciBiYXNlIG5vdCB1bmRlcnN0YW5kaW5nIHdoYXQgaXMgcmVhbCBvciBmYWtlLiBUaGF0IGlzIHdoeSBpbmRlcGVuZGVudHMgZG9uIHZvdGUuIFRvIGxldCB5b3UgYm90aCBhcmd1ZSBzbyB0aGUgcmVzdCBvZiB1cyBjYW4gYWN0dWFsbHkgZ2V0IHNoaXQgZG9uZS4gQ2F1c2UgaXQgc2VlbXMgdG8gbWUgbm9ib2R5IGZyb20gZWFjaCBwYXJ0eSB0cnVseSBnZXRzIHNoaXQgZG9uZS4gRXNwZWNpYWxseSB0aGVpciBjb25zdGl0dWVudHMuIEVuZCByYW50LiBBbnlvbmUgYmFja2luZyBhbnlvbmUgYmVzaWRlcyBzYW5kZXJzIHJlYWxseSBpcyBhbiBpZGlvdC4gVG8gZ2V0IGJhY2sgb24gdG9waWMuIEhpbGFyeSBpcyBhIGh5cG9jcml0ZS4gU2hlIGJhc2ljYWxseSBpcyBmb3IgaW5jcmVhc2VkIHN1cnZlaWxsYW5jZS4gQW55b25lIGJ1dCBtZSBmaW5kIGl0IG9kZCB0aGF0IFNoZSB3b3VsZCBzdXBwb3J0IHN1cnZlaWxsYW5jZSBvbiB1cywgeWV0IGhhdmUgaGVyIG93biBzZXJ2ZXIuIFNoZSBnZXRzIGEgcHJpdmF0ZSBzZXJ2ZXIgdGhlbiBkZWxldGVzIHRoZSBlbWFpbHMuIFNoaXQgaWYgaXQgd2FzIGFueSBvZiB1cy4gSnVzdCBmb3IgZGVsZXRpbmcgdGhlIGVtYWlscy4gV291bGQgaGF2ZSBiZWVuIGRlc3RydWN0aW9uIG9mIGV2aWRlbmNlLiBEb24gZXZlbiBnZXQgbWUgc3RhcnRlZCBvbiBqZWIgYnVzaC4KQnV0IGRldGFpbHMgdGhhdCBoYXZlIHN1cmZhY2VkIHNvIGZhciBhYm91dCB0aGUgb25lIHRpbWUgSVJTIGFnZW50IGFuZCBzb24gb2YgYSBub3RvcmlvdXMgYmFuayByb2JiZXIsIGFyZSBjbHVlcywgYXQgbGVhc3QsIHRvIGhpcyBtaW5kc2V0LiAKVGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBvZiBob3cgdHJ1bHkgYW5kIHNlcmlvdXNseSBwYXRob2xvZ2ljYWwgdGhpcyBndXkgaXMuIApBdCB0aGUgZW5kIG9mIHRoZSBkYXkgYSBwaWVjZSBvZiBwYXBlciB3aXRoIGEgZ3JhZGUgd2lsbCBhbHdheXMgYmUgbW9yZSBjcmVkaWJsZSB0aGFuIGEgc2VsZiBwYWNlZCBmcmVlIG9ubGluZSBjbGFzcyBidXQgb24gYW4gaW5kaXZpZHVhbCBiYXNpcyBmb3Igd2hpY2ggbWVhbnMgbW9yZSB0byBhIGhpcmluZyBtYW5hZ2VyLiAKKDEpIFNjb3BlCkFzIG91dHNwb2tlbiBhcyBoZSBpcyB0YWxsLCBSdWhhbmVuIGpvaW5zIHRoZSBBZCBMaWIgcG9kY2FzdCB0b2RheSB0byBkaXNjdXNzIGFsbCBvZiB0aGF0IGFuZCBtb3JlICAgbm90IG9ubHkgdGhlIGN1cnJlbnQgc3RhdGUgb2YgVEJXQSwgYnV0IG9mIGFnZW5jaWVzIGluIGdlbmVyYWwuIEhlJ3MgYnVsbGlzaCBvbiBoaXMgc2hvcCwgd2hpY2ggY29tZXMgd2l0aCB0aGUgdGVycml0b3J5LCBidXQgaGFzIHNvbWUgd29yZHMgb2YgY2F1dGlvbiBmb3IgZXZlcnlvbmUuCldoYXQgaWYgeW91IGFyZSBzdXJyb3VuZGVkIGJ5IHRveGljIHBlb3BsZSwgYW5kIGlmIHlvdSBkaWQgbm90IGRlZmVuZCB5b3Vyc2VsZiBtZW50YWxseSBieSBhc3N1bWluZyB0aGUgd29yc3QgIGlmIHlvdSBkaWRuIGFzc3VtZSB0aGUgd29yc3QgdGhlbiB5b3Ugc3VmZmVyIG1vcmUuIApZb3UgbW9zdCBsaWtlbHkgbmV2ZXIgc2VlIHRoaXMgaGFwcGVuIGVpdGhlci4uIApbbWFzcXVlcl0uIApObywgdGhlcmUgd2FzIG5vdCBhIGhvbGUsIGp1c3QgYSBmbG9vciEgU2hlIHByYWN0aWNhbGx5IGZsb29kZWQgaXQhIGhlciBpbnRlcmVzdGluZyBiYXRocm9vbSBzdG9wLCB3ZSBoZWFkZWQgdG8gRWtsaW5namkgICB0aGUgbW9zdCBtYWduaWZpY2VudCB0ZW1wbGUgSSBoYXZlIGV2ZXIgc2Vlbi4gSXQncyBhIFNoaXZhIHRlbXBsZSwgb3IgcmF0aGVyIGEgZ3JvdXAgb2YgdGVtcGxlcy4gCk15IHBvc3Qgd2FzIHZlcnkgc2hvcnQsIGJ1dCB5b3UgYXBwZWFyIHRvIGhhdmUgc2tpcHBlZCB0aGUgZW50aXJlIGZpcnN0IGhhbGYgd2hlcmUgSSBzcGVjaWZpY2FsbHkgbWVudGlvbiB0aGF0IEkgaGF2ZSB1bmRlcmdvbmUgdGhlcmFweS4gSW4gZmFjdCwgSSBoYXZlIHVuZGVydGFrZW4gbXVsdGlwbGUgZm9ybXMgb2YgcHN5Y2hpYXRyaWMgdGhlcmFweSwgaW5jbHVkaW5nIENCVC4gCkluIG15IGV4YW1wbGUgSSB3b3VsZCBub3QgYmUgdGlyZWQgYmVjYXVzZSBpbiB0aGlzIG5ldyB0aW1lbGluZSBJIG5ldmVyIHRyaWVkIHRvIHB1bmNoIHlvdS4gU28ga2lsbGluZyBtZSBkdXJpbmcgdGhvc2UgMTBzIHdvdWxkIGJlIHVzZWxlc3MgYmVjYXVzZSBpdCB3b3VsZCBiZSBjYW5jZWxsZWQuSWxLYXBpdGFubyAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ290aGlzICJlbmxpZ2h0ZW5lZCBjZW50cmlzdCIgY291bnRlciBqZXJrIGlzIGJlY29taW5nIG1vcmUgb2YgYSBjaXJjbGUgamVyay4gCkRlbm4gbWFuIGVpZ25ldCBzaWNoIG5pY2h0IG51ciBHcnVuZGtlbm50bmlzc2UgaW4gTWFuZGFyaW4gYW4gKHdhcyBzaWNoIGltIExlYmVuc2xhdWYgaGV1dHp1dGFnZSBpbW1lciBndXQgbWFjaHQpLCBzb25kZXJuIGxlcm50IGF1Y2ggdmllbCBDaGluZXNpc2NoZSBHZXNjaGljaHRlIHVuZCBLdWx0dXIuIApJdCBjb2xsZWN0cyBzdG9yaWVzIGZyb20gaGVyIGVpZ2h0IHByZXZpb3VzbHkgcHVibGlzaGVkIGJvb2tzLiBQcmludC9leHBvcnQuIApZZXAsIHRob3NlIEJyb3duIFJlY2x1c2UuIFRoZSBvbmVzIHRoYXQgY2FuIGNhdXNlIG5lY3JvdGljIGZsZXNoIChsaXRlcmFsbHkgc2tpbiByb3R0aW5nIHNvcmVzKS4gClRoZXkgaGF2ZSB0aGUgd29tZW4gc2l0dGluZyBhdCB0aGUgd2luZG93cyBvZmZlcmluZyB0aGVpciBzZXJ2aWNlIHRvIHBlb3BsZSBpbiB0aGUgc3RyZWV0LCBidXQgdGhlcmUgYXJlIHVzdWFsbHkgbW9yZSBsYWRpZXMgaW5zaWRlLiBZb3UgdGFsayB0byB0aGUgbGFkeSwgYWdyZWUgb24gc2VydmljZSBhbmQgcHJpY2UgYW5kIHRoZW4gZ28gaW5zaWRlIGhlciByb29tIGFuZCBkbyB0aGUgZGVlZC4gClNvIGV2ZXJ5IG90aGVyIGdhbWUgb3Igc28gSSB3b3VsZCBwdXJwb3NlbHkgbWFrZSBodWdlIG1pc3Rha2VzLiAKSGUgc2F5cyB0aGUgY2hpbGRyZW4gMTMsIENoYXJsb3R0ZSwgMTEsIExpbmNvbG4sIDgsIGFuZCBKb3NlcGhpbmUsIDYganVzdCBhcyBoYXBweSBwbGF5aW5nIHdpdGggcm9ja3MgYW5kIHNoZWxscyBvbiB0aGUgYmVhY2ggYXMgdGhleSB3b3VsZCBiZSB3aXRoIGFueSBvZiB0aGVpciB0b3lzIGF0IGhvbWUuIFRoZXkgcGVyZmVjdGx5IGhhcHB5IGxpdmluZyBpbiBhIDUwMCBzcXVhcmUgZm9vdCB2aWxsYSBpbnN0ZWFkIG9mIHRoZWlyIG11Y2ggbGFyZ2VyIGhvdXNlIGluIE9udGFyaW8uIFdoZW4gdGhleSBmaXJzdCBtb3ZlZCB0byB0aGUgaXNsYW5kLCB0aGV5IHdlcmUgbGl2aW5nIGluIGEgYm9hdCBhbmNob3JlZCBvZmZzaG9yZS4gCiJSaWdodCBub3cgdGhleSdyZSBzdGlsbCBmaWdodGluZyB3aXRoIGEgaGFuZCB0aWVkIGJlaGluZCB0aGVpciBiYWNrIGFuZCBJIHdvdWxkIG5vdCBiZSBzaG9ja2VkIHRvIHNlZSBhIGxvdCBvZiBtb3ZlbWVudCBvbmNlIHRoYXQgaGFwcGVucy4gCkkgc2F5IGZpbGwgdGhlIHRhbmsgZXZlcnkgdGhyZWUgaG91cnMgd2l0aCBudXRyaWVudCBkZW5zZSBmb29kcy4gUHJvdGVpbiBzaGFrZXMuIERlbGljaW91cyBhdm9jYWRvIHRvYXN0LiBDYW4gd2UgZWF0IHRoaXM/IE1heWJlIGR1cmluZyB0aGUgYnJlYWsuIFByb3RlaW5zLiBQcm90ZWluIGJhcnMuIENoaWNrZW4uIFlvdSB3YW50IHRvIGZpbGwgdGhlIHRhbmsgaW4gYSBoZWFsdGh5IHdheS4gVGhpcyBpcyBub3QgYWJvdXQgZ2V0dGluZyBmYXN0IGZvb2QgYW5kIHBpbGluZyB0aGUgbnVtYmVyIG9uIHRoZSBzY2FsZSBnb2luZyB1cC4gCk9iYW1hIGhhcyB0YWtlbiB0aGUgbWFuZGF0ZSB0aGF0IHByb2dyZXNzaXZlcyB3b3JrZWQgdGhlaXIgaGVhcnRzIG91dCB0byBnaXZlIGhpbSwgYW5kIHVzZWQgaXQgdG8gZ3V0IHRoZSBpZGVhcyB0aGF0IHByb2dyZXNzaXZlcyBoYXZlIGhlbGQgbW9zdCBkZWFyLiAKLiIuIApUaGUgU2hvd2Rvd24gVG8gZGV0ZXJtaW5lIHRoZSB3aW5uZXIsIHRoZSBwbGF5ZXJzIG1heSB1c2UgYW55IGNvbWJpbmF0aW9uIG9mIHRoZWlyIHR3byBob2xlIGNhcmRzIGFuZCB0aGUgZml2ZSBjYXJkcyBvbiB0aGUgIkJvYXJkIiAoVGFibGUpIHRvIGZvcm0gdGhlIGhpZ2hlc3QgZml2ZSBjYXJkIGhhbmQuIEluIHNvbWUgcmFyZSBjYXNlcyB0aGUgYmVzdCBoYW5kIHdpbGwgYmUgdGhlIGZpdmUgY2FyZHMgb24gYm9hcmQuIERvbid0IGNvdW50IG9uIHRoaXMgaGFwcGVuaW5nIHRvbyBvZnRlbi4gSW4gdGhhdCBjYXNlIHRoZSBhY3RpdmUgcGxheWVycyB3aWxsIHNwbGl0IHRoZSBwb3QuIEEgc2l4dGggY2FyZCBpcyBuZXZlciB1c2VkIHRvIGJyZWFrIGEgdGllLiAuClRoZSBTZW5hdGUgYmlsbCAoU0IgOCkgd291bGQgY2hhbmdlIGFsbCB0aGF0LiBJdCB3b3VsZCBhbGxvdyBzbG90IG1hY2hpbmVzIGF0IGRvZyBhbmQgaG9yc2UgdHJhY2tzIGFuZCBwb2tlciByb29tcyBpbiBEdXZhbCBhbmQgc2V2ZW4gb3RoZXIgY291bnRpZXMgb3V0c2lkZSBvZiBTb3V0aCBGbG9yaWRhIHdoZXJlIGxvY2FsIHZvdGVycyBoYXZlIGFwcHJvdmVkIHJlZmVyZW5kdW1zLiBUaGUgU2VuYXRlIGdhbWJsaW5nIGJpbGwgd291bGQgYWxzbyBhbGxvdyB0aGUgU2VtaW5vbGUgVHJpYmUgdG8gb2ZmZXIgY3JhcHMgYW5kIHJvdWxldHRlIGF0IGl0cyBjYXNpbm9zIGFuZCBpdCB3b3VsZCBhbGxvdyBTb3V0aCBGbG9yaWRhIHRyYWNrcyB0byBhZGQgYmxhY2tqYWNrLiAKQXJyYW5nZSB0aGUgdHVya2V5IG9uIHRvcCBvZiB0aGUgdmVnZ2llcyBhbmQgcmVmcmlnZXJhdGUgb3Zlcm5pZ2h0IHVuY292ZXJlZC4gWWVzLCB0aGF0J3MgcmlnaHQsIHVuY292ZXJlZC4gVGhpcyB3aWxsIGhlbHAgdGhlIHNraW4gZHJ5IG91dCBhbmQgYmVjb21lIHJlYWxseSBicm93biBhbmQgY3Jpc3B5LiBNYWtlIHN1cmUgdGhhdCB0aGVyZSBpcyBubyByYXcgZm9vZCBuZWFyIHRoZSB0dXJrZXkgaW4gdGhlIHJlZnJpZ2VyYXRvci4gQWZ0ZXIgcmVmcmlnZXJhdGluZyBvdmVybmlnaHQsIHRoZSB0dXJrZXkgaXMgcmVhZHkgdG8gZ28gaW4gdGhlIG92ZW4uUHJlaGVhdCB0aGUgb3ZlbiB0byAyMzBQdXQgNDY1bWwgY2hpY2tlbiBzdG9jayBhbmQgMjQwbWwgYXBwbGUgY2lkZXIgaW4gdGhlIGJvdHRvbSBvZiB0aGUgcm9hc3RpbmcgcGFuLiAKSXQgZWx1ZGVkIGhpbSBkdWUgdG8gZXZlbnRzIGJleW9uZCBoaXMgY29udHJvbC4gCktlcHQgdGhlIGJsdWZmIGdvaW5nIHdoZW4gaGUgc2FpZCBoZSB3YXMgc3VwZXIgY2xvc2UgYW5kIEkgdG9sZCBoaW0gIkkgd2FzIGhvcGluZyIuIApBcyBpdCBpcywgSSBqdXN0IHB1bGxlZCBhIGNvdXBsZSBpbiAvbmV3IGp1c3Qgbm93IGZvciBpdCwgYnV0IHRoaXMgaXMgb24gdGhlIGZyb250IHBhZ2UgYW5kIGF0IHRoZSBjZW50ZXIgb2YgZXZlcnlvbmUgYXR0ZW50aW9uLgpEZWplYW4gc2F5cywgc28gZmFyLCB0aGUgb3duZXIgb2YgUGhpbCBCcmFkeSdzIGZhY2VzIDExNyB2aW9sYXRpb25zIGFuZCB0aGF0IG51bWJlciB3aWxsIGxpa2VseSBnbyB1cC4gQWNjb3JkaW5nIHRvIERlamVhbiwgdGhlIG1pbmltdW0gZmluZSBmb3IgZWFjaCB2aW9sYXRpb24gaXMgJDEwMC4gRG8gdGhlIG1hdGgsIGFuZCB0aGF0J3MgbW9yZSB0aGFuICQxMSwwMDAuIEFsc28sIGRlcGVuZGluZyBvbiB0aGUgc2V2ZXJpdHkgb2YgdGhlIHZpb2xhdGlvbnMsIHRoZSBiYXIncyBsaXF1b3IgbGljZW5zZSBjb3VsZCBiZSBzdXNwZW5kZWQgb3IgcmV2b2tlZC4KVGhpcyBpcyBhIHN0cm9uZyBoYW5kLCBwYXJ0aWN1bGFybHkgaWYgdGhlIGJvYXJkIGRvZXNuJ3QgY29tZSB1cCB3aXRoIGEgcG9zc2libGUgbG93Llt0IHQgdCB0XSBQbGF5IGZvdXIgaGlnaCBjYXJkcywgZXZlbiB3aXRoIGEgcGFpciBvciB0d28gcGFpcnMuIEFzIHlvdSBnYWluIGV4cGVyaWVuY2UgYW5kIGxlYXJuIHlvdXIgb3Bwb25lbnRzJyBwbGF5aW5nIHN0eWxlcyBhbmQgaGFuZCBzZWxlY3Rpb24sIHlvdSBjYW4gcGxheSBhIGZldyBtb3JlIHN0YXJ0aW5nIGhhbmRzLiAKTm9uIG1lZGljaW5hbCBjYW5uYWJpcyBiZWNhbWUgbGVnYWwgaW4gQ2FuYWRhIG9uIE9jdG9iZXIgMTcsIDIwMTguIFRoZSBudW1iZXIgb2YgcGVvcGxlIGVtcGxveWVkIGluIGNhbm5hYmlzIHJlbGF0ZWQgam9icyBpbiBOb3ZlbWJlciB3YXMgMTAsNDAwLCBhbiBpbmNyZWFzZSBvZiA3LDUwMCAoKzI2NiUpIGZyb20gMTIgbW9udGhzIGVhcmxpZXIuIApBbHNvLCBoZSBtdXN0IGhhdmUgbGllZCB3aGVuIGZpbGxpbmcgb3V0IHRoZSA0NDczIGZvcm0gcmVxdWlyZWQgYnkgRkZMcyB0byBwdXJjaGFzZSBhIGZpcmVhcm0gYW5kIHN0YXJ0aW5nIHRoZSB0aHJlZSBkYXkgd2FpdGluZyBwZXJpb2QgYmVmb3JlIGNvbXBsZXRpbmcgdGhlIHB1cmNoYXNlIHRyYW5zYWN0aW9uIHdpdGggdGhlIGd1biBkZWFsZXIuLiAKODcgKDUpLCBwcC4gCk15IGZhdm9yaXRlIGdhbWUgZXZlciBieSBhIHdpZGUgbWFyZ2luLiBMb3ZlIHRoZSBlbmRpbmcsIHRoZSBnYW1lIGRvZXMgc3VjaCBhIGdvb2Qgam9iIGJ1aWxkaW5nIHRoZWlyIHJlbGF0aW9uc2hpcCB0aHJvdWdob3V0IHRoYXQgeW91IHJlYWxseSB1bmRlcnN0YW5kIGhvdyBtdWNoIEpvZWwgbG92ZXMgaGVyIGFuZCBjYW4ndCBsb3NlIGhlciBsaWtlIGhlIGxvc3QgaGlzIGRhdWdodGVyLiAKSSBnZXQgbGFzdCB0aW1lIEkgaGFkIGEgbGFyZ2UgZ3JpZCBPcmUgRGV0ZWN0b3IgYnV0IHRoZXJlIGRvbiBldmVuIHNlZW0gdG8gYmUgdGhvc2UgZGFyayBwYXRjaGVzIG9uIHRoZSBzdXJmYWNlIHRoYXQgaW5kaWNhdGUgb3JlLiBEaWQgdGhleSBjaGFuZ2UgdGhpcyBvciBhbSBJIGp1c3QgcmVhbGx5IHVubHVja3k/LiAKVGhlIGNoZW1pc3RyeSBDaGFzdGFpbiBhbmQgRWxiYSBnZW5lcmF0ZSBpZ25pdGVzIFNvcmtpbidzIHNwZWN0YWN1bGFyIHdvcmRzLCBob25pbmcgdGhlIHNjZW5lcyB0byBhIHJhem9yJ3MgZWRnZS5BbHRob3VnaCB5b3UgY2FuIGRpc21pc3MgIk1vbGx5J3MgR2FtZSIgYXMgZGlzY29ubmVjdGVkIHJpY2ggcGVvcGxlIGRvaW5nIHJpY2ggcGVvcGxlIHRoaW5ncywgU29ya2luJ3Mgd29yZHBsYXkgbWVsZHMgd2l0aCB0aGUgZ3JvdW5kZWQgcGVyZm9ybWFuY2VzIHRvIG1ha2UgdGhlIGZpbG0gcmVsYXRhYmxlIG9uIG90aGVyIGxldmVscy4uIApUbyBzZWUgYWxsIG9mIG91ciBhcnRpY2xlcyBvbiBwb2tlciBydWxlcyBhbmQgYWR2aWNlLCBnbyB0byBvdXIgbWFpbiBhcnRpY2xlIG9uIEhvdyBUbyBQbGF5IFBva2VyLiAKSHlwb2dseWNlbWlhIHJlcXVpcmVzIGltbWVkaWF0ZSBhdHRlbnRpb24uIElmIGxlZnQgdW50cmVhdGVkLCBoeXBvZ2x5Y2VtaWEgY2FuIGRldmVsb3AgaW50byBpbnN1bGluIHNob2NrLCB3aGljaCBtYXkgbGVhZCB0byBjb21hIGRlYXRoICgzLDQpLiBJZiBoeXBvZ2x5Y2VtaWEgaXMgY29uZmlybWVkLCBmb2xsb3cgdGhlIHN0ZXBzIGJlbG93LiBJZiB0aGUgYWJvdmUgc2lnbnMgc3ltcHRvbXMgYXJlIG5vdCByZWxhdGVkIHRvIGh5cG9nbHljZW1pYSwgQ0FMTCA5MTEuCiJUaGFuayB5b3UgRW1lcmFsZC4gSSBhbSBzb3JyeSBpdCB3YXNuIHlvdS4iClByb2JhYmx5IHdhbGtzIHN0cmFpZ2h0IGF0IHRoZW0gd2hpbGUgQURTIHdoZW4gdGhleSByZWFsaXplIHRoZXkgc2hvdWxkIGhhdmUgcnVzaGVkLkNvbXBsYWluIGFib3V0IGhvdCBkcm9wcyB3aXRoIGEgc3RhdGVtZW50IGxpa2UgIkkgd2FudCB0byB3aW4iVGhleSBhcmUgdGhpcyB3YXkgYmVjYXVzZSB0aGV5IGhhdmVuIHBsYXllZCB0b25zIG9mIGdhbWVzIHdoZXJlIHRoZXkgaGFkIHRvIGxvb3QgYSBndW4gYW5kIGhhbGYgYSBtYWdhemluZSBvZiBhbW1vIG9mZiBvZiB0aGVpciB2aWN0aW1zIDQgdGltZXMgaW4gYSByb3cgZHVyaW5nIGEgbXVsdGkgcGFydHkgZ3VuIGZpZ2h0LCB0aGV5IGhhdmVuIGhhZCB0byBraWxsIDYrIHBlb3BsZSBhbGwgdHJ5aW5nIHRvIGtpbGwgdGhlbSBhdCB0aGUgc2FtZSB0aW1lIHdpdGggZ3VucyB0aGF0IGFyZSBiYWQgb3IgdGhleSBkb24gbGlrZSwgdGhleSBoYXZlbiBoYWQgdG8gcmFjZSBhcm91bmQgdGhlIGFyZWEgZG9kZ2luZyBidWxsZXRzIHRvIGZpbmQgYSBndW4gd2hlbiB0aGVyZSBhcmUgNisgcGVvcGxlIHdpdGggZ3VucywgYW5kIHRoZXkgc3VyZSBhcyBmdWNrIGhhdmUgbmV2ZXIgZXZlbiBjb25zaWRlcmVkIGNoYW5uZWxpbmcgTmVvIGFuZCBjbHV0Y2hpbmcgb3V0IDIga2lsbHMgb24gZ3VuIHdpZWxkaW5nIHBsYXllcnMgd2l0aCB0aGVpciBmaXN0cyBhbmQgbm8gYXJtb3IgYXMgYmVpbmcgYSBwb3NzaWJpbGl0eSBsZXQgYWxvbmUgZGV0ZXJtaW5lIHdoZW4gdGhhdCBpcyB0aGVpciBvbmx5IG9wdGlvbi4gVGhleSBhcmVuIHVzZWQgdG8gdGhlIHByZXNzdXJlLkFueW9uZSBjYW4gc25lYWsgYXJvdW5kIGFuZCBnZXQgdG9wIDEwLCB0b3AgMywgdG9wIHdoYXRldmVyIGl0IGlzIGZvciBhbnkgQlIuIApTVC4gCkkgZG8gdGhpbmsgRG9uIE5lbHNvbiB0aW1lIGlzIHNob3J0IHdpdGggdGhlICwgaWYgTGFjb2IgY2FuIGZpZ3VyZSBvdXQgaG93IHRvIHB1bGwgdGhhdCBtb3ZlIG9mZiB3aXRoIHRyYWluaW5nIGNhbXAgc2l0IHRvIHN0YXJ0IGJlZm9yZSBoZSBhbmQgR3ViZXIgb2ZmaWNpYWxseSB0YWtlIG92ZXIuClRoaXMgbWFrZXMgbWUgZXZlbiBoYXBwaWVyIHdoZW4gdGhpcyBoYXBwZW5zIEkgYW0gbm90IHN1cnByaXNlZCB0aGF0IHRoZSBsb29rIG9mIGJlaW5nIHNvIHJlbGF4ZWQgYW5kIGNvbnRlbnQgaXMgZW5vdWdoIHRvIG1ha2UgdGhlbSBlbnJhZ2VkLi4gCkJ1dCB0aGUgbGVhdmluZyBwbGF5ZXJzIHdvbiBiZSBjb21pbmcgYmFjaywgaGVhcnRoc3RvbmUgaXMgc3RpbGwgdGhlcmUsIE1URyBhcmVuYSBpcyBhc3NlcnRpbmcgaXQgcHJlc2VuY2UgZm9yIG1vcmUgaGFyZGNvcmUgcGxheWVycy4gCklmIHlvdSBoYXZlIDMgNCBhbmQgb3Bwb25lbnQgaGFzIDQgNSBhbmQgZmxvcCBhbmQgdHVybiBjb21lIG91dCA0IDQgMiBLLCB5b3UgYXJlIHRlY2huaWNhbGx5ICJiZWhpbmQiIGFzIG9mIHRoZSB0dXJuIGJ1dCBldmVyeSBjYXJkIGV4Y2VwdCBmb3IgdGhlIHRocmVlIHJlbWFpbmluZyA1J3MgcmVzdWx0cyBpbiBlaXRoZXIgYSB0aWUgb3IgeW91IHdpbm5pbmcuCkNvbW1lbnQgZW4gc29udCBpbHMgYXJyaXZzIGwgPyBFbiBzdXBlcnBvc2FudCB1bmUgY2FydG9ncmFwaGllIGJpbyBsY3Ryb25pcXVlIGRlcyBodWlsZXMgZXNzZW50aWVsbGVzIGVtcGxveWVzIGV0IGxlcyBjaW5xIGxtZW50cywgaWxzIG9udCBvYnRlbnUgY2VjaSA6Ck5laXRoZXIgb2YgdGhlbSBzdHJpa2UgbWUgYXMgcGFydGljdWxhcmx5IHN0cmFuZ2UuIApJdCBpcyBhIDEwIGxhbmUgaGlnaCBzcGVlZCAoNjAwIHNhY2hldCAvbWluKSBmb3IgZ2VscyAvIGxvdGlvbnMgYW5kIGVkaWJsZSBvaWwga2luZCBvZiBwcm9kdWN0LiAKS2lkcyBnbyB0byB0aGUgYW11c2VtZW50IHBhcmsgZm9yIHRoZSBhbmQgd2hlbiB0aGUgZmFtaWx5IGdldHMgYmFjayB0byB0aGUgaG90ZWwgRGFkIGlzIHRhbGsgIGluZyBhYm91dCBob3cgaGUgZGlkIGF0IHRoZSBibGFjayAgamFjayBhbmQgTW9tIGlzIHRhbGtpbmcgYWJvdXQgaG93IHNoZSBkaWQgYXQgdGhlIHNsb3RzLiAKQ3JvY3MgYXJlbiB0aWdlcnMsIGFuZCB3aGlsc3QgZGFuZ2Vyb3VzLCB3aXRoIHJlc3BlY3QgYW5kIGV4cGVyaWVuY2UgeW91IGNhbiBiZSB2ZXJ5IGNsb3NlIHRvIHRoZW0gd2l0aG91dCByaXNrLiBJIHVzZWQgdG8gd2FsayBpbnRvIGVuY2xvc3VyZXMgd2l0aCBodW5kcmVkcyBvZiBjcm9jcywgbnVkZ2UgdGhlbSBhd2F5IHdpdGggc3RpY2tzLiBXYXMgaXQgYSBzaWxseSB0aGluZyB0byBkbyBhcm91bmQgY2FtZXJhcy4gCkFkZCB0byBpdCBnYXkgcGVvcGxlLCBhbmQgZXZlcnkgb3RoZXIgdHlwZSBvZiBtaW5vcml0eS4gT2YgY291cnNlLCBpdCB3b3VsZG4gc3RhcnQgd2l0aCBsb2NraW5nIHVwLiBJdCB3b3VsZCBzdGFydCB3aXRoIGJpbGxzIHRvIGxpbWl0IHRoZWlyIHZvdGluZyByaWdodHMsIGxpbWl0IHRoZWlyIGFjY2VzcyB0byBlZHVjYXRpb24sIGV0Yy4gCkdldCBzb21lIHJlc3QuIFdoZW4geW91ciBtdXNjbGVzIGZlZWwgdGlyZWQgYW5kIHNvcmUsIHNraXAgYSBkYXkgYW5kIGxldCB5b3VyIGJvZHkgcmVzdC4gRHVyaW5nIHlvdXIgd29ya291dCwgZ2l2ZSB5b3Vyc2VsZiBzb21lIHRpbWUgdG8gdGFrZSBicmVha3Mgc28geW91IGNhbiBsZXQgdGhlIGxhY3RpYyBhY2lkIGJ1aWxkIHVwIGdvIGF3YXkuIApMYSBCaWJsZSBlc3Qgc2VtYmxhYmxlIDogbCdoaXN0b2lyZSBkJ0lzcmFsIGVzdCBlbGxlIGV4YWN0ZSA/IE5vbi4gTCdoaXN0b2lyZSBlc3QgZWxsZSBmYXVzc2UgPyBOb24gcGx1cywgbW1lIHMnaWwgZXN0IGRpZmZpY2lsZSBkJ3RhYmxpciBsYSBwYXJ0IGR1IHJlbCBldCBjZWxsZSBkZSBsJ2ludGVycHJ0IGVtYmVsbGksICcncGFyYWJvbGlzJycuIEMnZXN0IGNldHRlICJwYXJhYm9saXNhdGlvbiIgcXVpIHBlcm1ldCBhdXNzaSBkZSBwYXNzZXIgZHUgcGFydGljdWxpZXIgIGwndW5pdmVyc2VsLiBMJ2hpc3RvaXJlIGFsb3JzIGVzdCBlbGxlIHZyYWllID8gT3VpLCBkYW5zIGxhIG1lc3VyZSBvIGVsbGUgcmV0cmFjZSBsJ2hpc3RvaXJlIGQndW4gcGV1cGxlLCB0ZWxsZSBxdSdpbCBsJ2EgY29tcHJpc2UgZW4gcmVsYXRpb24gc2luZ3VsaXJlIGF2ZWMgc29uIERpZXUgOyBldCBhdXNzaSBkYW5zIGxhIG1lc3VyZSBvIGNlIHF1ZSBkaXQgY2V0dGUgaGlzdG9pcmUgZGUgY2V0dGUgcmVsYXRpb24gbm91cyBwYXJsZSAgbm91cyBldCAgbm90cmUgcHJvcHJlIGhpc3RvaXJlLCBldCBwZXV0IGNsYWlyZXIgbm90cmUgcHJzZW50IGV0IG5vdHJlIGF2ZW5pci4gRGV2ZW5pciB2cmFpZSBwb3VyIG5vdXMuCkFueXdheSwgSSBub3QgYW4gZXhwZXJ0LiBUaGlzIGlzIG1vc3RseSBqdXN0IHBlcnNvbmFsIG9ic2VydmF0aW9uLCBidXQgSSBkaWQgdXNlZCB0byB3b3JrIGluIGEgbm9uIHByb2ZpdCB3aXRoIGxvdyBpbmNvbWUgZm9sa3MuIEkgaW50ZXJhY3RlZCB3aXRoIHNvbWUgZm9sa3Mgd2hvIHN0YXllZCBhdCB0aGUgc2hlbHRlciwgb3IgcmVjZWl2ZWQgZnJlZS9yZWR1Y2VkIGhvdXNpbmcgaW4gb3VyIGFyZWEuIEkgdGFsa2VkIHRvIHNvbWUgb2YgdGhlbSBhbmQgbWFueSBhcmUgZGVjZW50IHBlb3BsZSB3aG8gZGVzZXJ2ZSB0byBiZSBzYWZlIGFuZCBmZWQuIFdlIGNhbiBhYnNvbHV0ZWx5IGV4aXN0IHRvZ2V0aGVyLgpCZWNhdXNlIGl0IGJ1bGxzaGl0IHRlcm1pbm9sb2d5LiBUaGlzIGlzIGp1c3QgdG94aWNpdHkuIE9uZSBvZiBtYW55IHdheXMgdG8gYmUgdG94aWMuIEFyZSB5b3UgZ29pbmcgdG8gc2l0IGhlcmUgYW5kIHRyeSB0byB0ZWxsIG1lIHRoYXQgdGhlIE9OTFkgcmVhc29uIHRoYXQgbWVuIGZlZWwgbGlrZSB0aGV5IGNhbiBjcnkgb3Blbmx5IGlzIGJlY2F1c2Ugb2Ygb3RoZXIgbWVuPyBIYXZlIHlvdSBldmVyIGFjdHVhbGx5IHRhbGtlZCB0byBhIHdvbWFuIGFib3V0IGhvdyB0aGV5IGZlZWwgd2hlbiBhIG1hbiB0aGV5IG1ldCByZWNlbnRseSBjcmllcyBpbiBwdWJsaWM/IFRyeSBnb2luZyBvdXQgb24gYSBmZXcgZGF0ZXMsIGFuZCBvbiBlYWNoIGRhdGUgdGFsayBhYm91dCBzb21ldGhpbmcgdGhhdCBtYWtlcyB5b3UgZW1vdGlvbmFsIGFuZCBzdGFydCB3ZWVwaW5nLiBTZWUgaG93IG1hbnkgb2YgdGhlbSB3YW50IGEgc2Vjb25kIGRhdGUuIElzIHRoYXQgdG94aWMgZmVtaW5pbml0eT8gTm8sIGJlY2F1c2Ugbm8gb25lIHVzZXMgdGhhdCB0ZXJtLCBiZWNhdXNlIGl0IHdvdWxkIGJlIHNlZW4gYXMgaW5zdWx0aW5nIHRvIHdvbWVuLCBiZWNhdXNlIGl0IGZ1Y2tpbmcgaXMuIFRveGljaXR5IGlzIGp1c3QgdG94aWNpdHkuIEl0IGRvZXNuIG5lZWQgdG8gaGF2ZSB0aGUgIm1hc2N1bGluaXR5IiBhdHRhY2hlZCB0byBpdC4gQWxsIHRoaW5ncyBjYW4gYmUgdG94aWMuIEZvcm1zIG9mIG1hc2N1bGluaXR5IGNhbiBiZSwgZm9ybXMgb2YgZmVtaW5pbml0eSBjYW4gYmUsIHRoaW5ncyB0aGF0IGhhdmUgbm90aGluZyB0byBkbyB3aXRoIGdlbmRlciBjYW4gYmUgdG94aWMuIFRocm93aW5nIHRoZSB3b3JkIG1hc2N1bGluaXR5IGludG8gaXQgdG8gZGVzY3JpYmUgbWVuIGJlaW5nIHRveGljIHRvIG90aGVyIG1lbiBpcyBpZGlvdGljLiBJdCBpcyBwb2ludGxlc3MuIFVubGVzcyB5b3Ugd2FudCB0byBzdGFydCBjYWxsaW5nIGl0IHRveGljIGZlbWluaW5pdHkgd2hlbiB3b21lbiBhcmUgYml0Y2hlcyB0byBvdGhlciB3b21lbiwgYnV0IEkgd291bGRuIGV4cGVjdCBhbnkgc29ydCBvZiBjb25zaXN0ZW5jeSBmcm9tIGFueW9uZSB3aG8gdXNlcyB0aGF0IHRlcm0uCldoZW4geW91IGhhdmUgcmVhcGVkIHRoZSBmcnVpdHMgb2YgeW91ciBkZWNpc2lvbiwgeW91IGNhbiBkZWNpZGUgdG8gc3RheSBvciB0byBnby4gCkEgbGF3eWVyIGZvciBTdGV2ZW5zb24gYXBwZWFyZWQgaW4gY291cnQgaW4gTmV3bWFya2V0IG9uIFRodXJzZGF5IG1vcm5pbmcuIFNoZSBpcyBzY2hlZHVsZWQgdG8gYXBwZWFyIG5leHQgb24gTm92LiAxNS4KRXJuZXN0IFNjaGVyZXIgSnVuaW9yIHN1ZmZlcmVkIHNpeCBibG93cyB0byB0aGUgaGVhZCBhbmQgc2l4IHN0YWIgd291bmRzLiAKSSB3b3VsZG4gdHJ5IG1ha2luZyBoaW0gc3RheSB1cCwgeW91IGp1c3QgZ29ubmEgaGF2ZSBhIGJhbmFuYXMgYXNzIG92ZXJ0aXJlZCBraWQgd2hvIGlzIGEgdG90YWwgbW9uc3Rlci4gSSBtZWFuLCBpdCBjb3VsZCB3b3JrLCBJIHN1cHBvc2UuIAoxMCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnb1dlIGRhdGVkIGZvciBhIHdoaWxlLCBhbmQgc3RpbGwgaG9va2VkIHVwIG9jY2FzaW9uYWxseSBhZnRlciAiYnJlYWtpbmcgdXAuIiBBbHRob3VnaCBzaGUgd2FzIGNvbnZlbnRpb25hbGx5IG9ubHkganVzdCBhYm92ZSBhdmVyYWdlIGluIGxvb2tzIHRoZSB3YXkgc2hlIGNhcnJpZWQgaGVyc2VsZiwgdGFsa2VkLCBhY3RlZCBhbmQganVzdCBleGlzdGVkIG1hZGUgbWUgZmFsbCBoZWFkIG92ZXIgaGVlbHMgZm9yIGhlci5BZnRlciBiZWluZyB0b2dldGhlciBhcyBhIGNvdXBsZS8iZnJpZW5kcyIgZm9yIGVpZ2h0IG1vbnRocyBzaGUgd2VudCBvdmVyc2VhcyB0byBmaW5pc2ggaGVyIGRlZ3JlZSAoc2hlIHdhcyB0YWtpbmcgYSBnYXAgeWVhciBhZnRlciBzb21lIG1lc3NlZCB1cCBzdHVmZiBoYXBwZW5lZCB0byBoZXIpIGFuZCBhbHRob3VnaCB3ZSB0YWxrZWQgbGVzcyB3ZSB3ZXJlIHN0aWxsIGFmZmVjdGlvbmF0ZSAoaW4gYSBub24gc2V4dWFsIHdheSkgd2l0aCBlYWNoIG90aGVyLkkgbWV0IHVwIHdpdGggaGVyIG92ZXIgdGhlIHN1bW1lciBhbmQgc2hlIG1hZGUgaXQgcXVpdGUgY2xlYXIgZnJvbSB0aGUgc3RhcnQgdGhhdCBzaGUgd2FudGVkIHRvIGJlIGZyaWVuZHMsIG5vdCAiZnJpZW5kcyIgd2l0aCBhbGwgdGhlIHNleHVhbCBpbnRpbWFjeSB0aGF0IGNhbWUgd2l0aCBiZWluZyAiZnJpZW5kcy4iIFNoZSB3YW50ZWQgdG8gaG9vayBtZSB1cCB3aXRoIGEgZnJpZW5kIG9mIGhlcnMgYW5kIEkgZW5kZWQgdXAgZGF0aW5nIGhlciBmcmllbmQgZm9yIHRoZSBwYXN0IDggb3Igc28gbW9udGhzLkkgd2FudCB0byBzZWUgaGVyIGFzIGp1c3QgYSBmcmllbmQgYnV0IHRvIGJlIGhvbmVzdCBJIHN0aWxsIGhhdmUgcXVpdGUgYSBsb3Qgb2YgZmVlbGluZ3MgZm9yIGhlci5TbyB3aGF0IGFtIEkgZG9pbmc/IEkgbm90IHRhbGtpbmcgdG8gaGVyLCBhdCBsZWFzdCBub3QgZm9yIG5vdy4gSW4gdGhlIGZ1dHVyZSB3aGVuIG15IGZlZWxpbmdzIGhhdmUgZGllZCBkb3duIEkgaG9wZSB0aGF0IHdlIGNhbiBoYW5nIG91dCBzb21ldGltZSBhbmQganVzdCBiZSBmcmllbmRzIGJ1dCBhdCB0aGUgbW9tZW50IEkgZmVlbCB0aGF0IGlmIEkgdGFsayB0byBoZXIgaXQgd29uIGJlIGhlbHBmdWwgdG8gbXlzZWxmIG9yIG1vcmUgaW1wb3J0YW50bHkgaGVyIG9yIG15IGdpcmxmcmllbmQuV2l0aCB5b3Vyc2VsZiBPUCBtYXliZSB5b3UgY291bGQgdHJ5IGRhdGluZyBvdGhlciB3b21lbj8gTWF5YmUgd2hlbiB5b3UgYXJlIHNlZWluZyBzb21lb25lIGVsc2UgeW91ciBmZWVsaW5ncyBmb3IgaGVyIHdpbGwgc3RhcnQgdG8gbGVzc2VuLiAKSWwgcGV1dCB0b21iZXIgYmVhdWNvdXAgcGx1cyBkZSBuZWlnZSBzdXIgbGEgdmlsbGUsIG1haXMgY2VsbGUgY2kgc2UgY29tcGFjdGUgdW5lIGZvaXMgYXUgc29sIGF1IGZpbCBkdSB0ZW1wcy4uIApEZWFsIHdhcyB3aGl0ZSBob3N0YWdlcyBnZXQgcmV0dXJuZWQuIFRoZXkgZGlkIG5vdCBkbyB0aGF0LiAKQnkgRGF2aWQgR3JhbnQgKFJhbmRvbSBIb3VzZSwgJDQ0Ljk5KQpGaW5hbGx5LCBpZiB5b3VyIGFwYXJ0bWVudCBvciBhYm9kZSBpcyBzbWFsbGVyIGFuZCB5b3Ugb25seSB3YW50IHRvIHB1bGwgdGhpcyB0eXBlIG9mIHRhYmxlIG91dCB3aGVuIHRoZSBnYW5nIGlzIG92ZXIgZm9yIGEgZ2FtZSwgYnV0IHlvdSBkb24ndCBoYXZlIHJvb20gZm9yIGl0IHRvIGJlIHNldCB1cCBhbGwgdGhlIHRpbWUsIGEgcm91bmQgZm9sZGluZyBjYXJkIHRhYmxlIGlzIGdvaW5nIHRvIGJlIHBlcmZlY3QgZm9yIHlvdXIgc2l0dWF0aW9uIGJlY2F1c2UgeW91IGNhbiBzZXQgaXQgdXAgd2hlbiB5b3UgbmVlZCBpdCBhbmQgZm9sZCBpdCBhd2F5IGFuZCB0dWNrIGl0IGluIGEgY29ybmVyIG9yIGNsb3NldCB3aGVuIHlvdSBkb24ndC4gU28gdGFrZSBzb21lIHRpbWUgdG8gZG8gc29tZSByZXNlYXJjaCBvbiB0aGUgSW50ZXJuZXQgdG8gZmluZCB0aGUgcGVyZmVjdCByb3VuZCBmb2xkaW5nIGNhcmQgdGFibGUgZm9yIHlvdXIgbmV4dCBwb2tlciBnYW1lLgpFdXJvcGUgaXMgcmVzb3VyY2UgZGVwZW5kZW50IGFuZCBsb29raW5nIGZvciBzdGFibGUsIGRlcGVuZGFibGUgbG9uZyB0ZXJtIHByb3ZpZGVycyBvZiBvaWwsIGdhcyBhbmQgb3RoZXIgcmVzb3VyY2VzLiBDYW5hZGEgbWVldHMgdGhlc2UgY3JpdGVyaWEgcGVyaGFwcyBiZXR0ZXIgdGhhbiBhbnkgb3RoZXIgZ2xvYmFsIHByb2R1Y2VyIGFuZCBpcyBzZWFyY2hpbmcgZm9yIHByb3NwZXJvdXMsIGxvbmcgdGVybSBidXllcnMuCk9uZSBvZiB0aGVtIGlzIGluIGZpbmFuY2lhbCB0cm91YmxlIHRvby5BbmQgeWV0IGhlcmUgd2UgYXJlLCBkZWFsaW5nIHdpdGggYW4gYXBwYXJlbnRseSBndWlsdHkgTUogYXMgZmFyIGFzIHRoZSBtZWRpYSBhcmUgY29uY2VybmVkLiAKSWYgeW91J3JlIGxpa2UgbWUsIHlvdSBzcGVuZCBhIGxvdCBvZiB0aW1lIHJlYWRpbmcgdGhlIGxpc3Qgb2YgaW5ncmVkaWVudHMgb24gZWFjaCBiYWcgYW5kIGNhbiBvZiBkb2cgZm9vZC4gCkFuZCBmb3Igd2hhdCBtdXN0IGhhdmUgYmVlbiB0aGUgZmlyc3QgdGltZSBpbiB0ZW4geWVhcnMsIG15IGJhY2sgZnVsbHkgY3JhY2tlZC4gCkhlJ2xsIHN0b3AgYXQgbm90aGluZyB0byBmaW5kIHRoZSBjaGlsZHJlbiwgYnV0IGhvdyBmYXIgaXMgdG9vIGZhcj8gQXNpZGUgZnJvbSBvbmUgcmlkaWN1bG91cyBjaGFyYWN0ZXIgbmFtZSAoc2VyaW91c2x5LCBMb2tpPyksIHRoaXMgbW92aWUgbG9va3MgcmVhbGx5IHNvbGlkLi4gClRoaXMgaXNuIHByb3BhZ2FuZGEsIHNoZSBsaXRlcmFsbHkgc2FpZCB0aGF0LCBJIHNhaWQgbm90aGluZyBhYm91dCBXV0lJSSBvciB3aGF0IGhlciBwbGFucyBhcmUsIG9yIGFueXRoaW5nIGFib3V0IHRoZSBtZWRpYSwganVzdCB0aGF0IHNoZSBzdGF0ZWQgaGVyc2VsZiB0aGF0IHNoZSB3YW50cyB0byBnbyB0byB3YXIgd2l0aCBSdXNzaWEuIApXaHkgZG9uIHdlIG1ha2UgaXQgc28gY29tcGxpY2F0ZWQgYW5kIGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kIGZvciB0aG9zZSBwZXNreSBwb2xpdGljaWFucyB0aGF0IHRoZXkgbmV2ZXIga25vdyB3aGF0IGhpdCB0aGVtLiAKVGhlIHR1cm4gd2FzIGEgc2l4IGFuZCB3ZSBib3RoIGNoZWNrZWQuIFRoZSByaXZlciB3YXMgYSBmb3VyLiBJIG1hZGUgYSBkZWZlbnNpdmUgMjAsMDAwIGJldCBhbmQgRmVsZG1hbiBpbW1lZGlhdGVseSBtb3ZlZCBtZSBhbGwgaW4gZm9yIG15IGxhc3QgODUsMDAwLiAKQnV0IHdlIHRlbmQgZmlndXJlIG91dCBvbmUgcGVyc29uIHdobyBpcyB0aGUgIml0IiBwZXJzb24gZm9yIHRoZSBtb3ZlbWVudC4gCkkgaGF2ZSBqdXN0IGJlY29tZSBkaXNpbGx1c2lvbmVkIHdpdGggdGhpcyBjb3VudHJ5IGFuZCB0aGUgd2F5IHRoaW5ncyB3b3JrIGhlcmUuIApBbHNvLCBJIGhhZCBhIGZldyAoZmV3KSBob2xkaW5ncyB0aGF0IG5ldmVyIGZlbGwgdG8gbXkgY29zdCBiYXNpcy4uIApJdCBkb2VzbiBtZWFuIHRoYXQgaW5kaXZpZHVhbHMgd2l0aCBjZXJ0YWluIHRpdGxlcyBhcmUgbGVnYWxseSBib3VuZCB0byBrZWVwIHRoZWlyIGNsaWVudHMgYmVzdCBpbnRlcmVzdHMgaW4gbWluZCB3aGVuIGV4ZWN1dGluZyB0cmFkZXMgb3IgZ2l2aW5nIGFkdmljZS4gClBob3RvIEVmZmVjdHMgU3R1ZGlvIDIuMyBzZXJpYWwga2V5IGdlbiAuIApJIGxvdmUgdHVydGxlIGFuZCBKSiwgYnV0IEkgdGhpbmsgdGhhdCBTbmVha3kgYW5kIG5vdGFibHkgWmV5emFsIGFyZSBqdXN0IGFib3ZlIHRoZW0uIApJZiB5b3UgYXJlIHRoZSBvbmx5IHBlcnNvbiB0byB3aW4gdGhlIGphY2twb3QsIHRoZW4geW91IGdldCBhbGwgb2YgaXQuIElmIDIgKHR3bykgcGVvcGxlIHdvbiB0aGUgamFja3BvdCwgdGhlbiB0aGV5IGVhY2ggZ2V0IGhhbGYgb2YgaXQuIApZb3UgY2FuIGJ1aWxkIHRoZSB3YWxsIDEwMCBmZWV0IGhpZ2hlciB3aXRoIG5vIGdhcHMgICBpdCBzb2x2ZXMgemVybyBwcm9ibGVtcy4uIApNYSBjb25uYWlzc2FuY2UgZGUgbGEgY3Vpc2luZSBqYXBvbmFpc2UgYXZhaXQgY29tbWVuYywgaWwgeSBhIGJpZW4gbG9uZ3RlbXBzIChwbHVzIGRlIHZpbmd0IGFucy4pLCBwYXIgbGEgZGNvdXZlcnRlIGRlcyBicm9jaGV0dGVzICh5YWtpdG9yaSkgZGFucyB1biByZXN0YXVyYW50IHByb2NoZSBkZSBtb24gYnVyZWF1IGQnYWxvcnMuIFB1aXMgc29udCB2ZW51cyBsZXMgc3VzaGkuIFB1aXMgdG91dGUgbGEgZGl2ZXJzaXQgZGUgbGEgY3Vpc2luZSBqYXBvbmFpc2UsIGZhbWlsaWFsZSBvdSBkZSByZXN0YXVyYW50LCBzaW1wbGUgb3Ugc29waGlzdGlxdWUuIApBdCBmaXJzdCwgSSBkaWRuIHJlYWxseSBrbm93IGhvdyB0byBxdWlja2x5IGFzc2Vzcywgc28gSSBhc2tlZCBhIGxvdCBvZiBxdWVzdGlvbnMuIEkgYWN0dWFsbHkgc3BlbmQgYSBsb3Qgb2YgdGltZSBmb3IgdGhlIGluaXRpYWwgaW50YWtlLCBzb21ldGltZXMgdXAgdG8gNDUgbWludXRlcy4gSSBkbyBmaXJzdCBzZXNzaW9ucyBmb3IgdHdvIGhvdXJzLCBiZWNhdXNlIG9mIHRoYXQgbG9uZyBpbnRha2UuIEkgcmVhbGx5IGdldHRpbmcgdG8ga25vdyB0aGVpciB3aG9sZSBwaWN0dXJlIGFuZCB0aGlzIGJ1aWxkcyBsb3RzIG9mIHJhcHBvcnQgcXVpY2tseS4KSSBwdXQgaXQgaW4gdGhlIHRvcCB0aWVyIHdpdGggTW9uc3RlciBhbmQgQ293Ym95IEJlYm9wLiBJdCBpcyBhIHNlcmlvdXMgY29tcGV0aXRvciBmb3IgYmVzdCBhbmltZSBzZXJpZXMgb2YgYWxsIHRpbWUuClRoZSBudW1iZXIgYXNjZW5kaW5nIGZyb20gSGVhdmVuIDExIDExIDEyIGlzIE5vdmVtYmVyIDExLCAyMDEyLiAKU29tZSBwZWRkbGVycyBtYXkgaGF2ZSwgYnV0IGl0IGlzIG5vdCBkZWZpbml0ZWx5IGdvb2QgcXVhbGl0eSBpdGVtcy4gClRoaXMgaXMgYSBtb3JlIHByaXZhY3kgY29tcGxpYW50IGFwcHJvYWNoIHRvIFRWIGFkdmVydGlzaW5nIGJlY2F1c2UgcGVyc2lzdGVudCBJRHMgYW5kIGF1ZGllbmNlIHF1YWxpZmllcnMgYXJlbid0IHByb3BhZ2F0ZWQgb3V0c2lkZSBTa3kgb3IgVmlyZ2luJ3MgZm9vdHByaW50cyB0aGUgY29tcGFuaWVzIHJldGFpbiBjb250cm9sIG9mIHRoZWlyIGRhdGEgYXQgYWxsIHRpbWVzLCBldmVuIGluIGFub255bWl6ZWQgZm9ybXMuCkkgYmVlbiB0aGlzIHRpcmVkIGJlZm9yZSBidXQgSSBuZXZlciBmZWx0IHRoaXMgY29ja3RhaWwgb2YgYWltbGVzcywgc3Bpbm5pbmcgbXkgd2hlZWxzLCBhbmQgZXhoYXVzdGVkIGJlZm9yZSBpbiBhIHdheSB0aGF0IG1ha2VzIG1lIGFzayAid2hhdCB0aGUgZnVjayBpcyB0aGUgcG9pbnQgb2YgYWxsIG9mIHRoaXMgd29yayIgd2hlbiB0aGVyZSBwZW9wbGUgb2xkZXIgdGhhbiBtZSBkb2luZyBteSBqb2IgYW5kIGhhdmUgYmVlbiBkb2luZyBteSBqb2IgZm9yIHRoZSBwYXN0IGZldyBkZWNhZGVzLiAKSGFzIGJlZW4gdGhlIGJpZ2dlc3Qgc3RvY2sgcHJvbW90aW9uLiBSaWNoYXJkIER1bnRhcywgQmVybmFyZCBBc3MgKExWTUgpLCBNYXJpY2EgIlRyYWN5IiAoQmxpc3MsIFJlbWVkIFNvYXBlciBEdWUgUGVyIFNob2UpLCBIeWF0dCAoR3JhbmQgSHlhdHQsIEFuZGF6LCBlciBhbCksIE1hcnJpb3R0IChTdC4gCkkgYmVlbiB1bmVtcGxveWVkIGZvciBhIHdoaWxlIG5vdyBzbyB0aGlzIGlzIGdyZWF0IG5ld3MuIAoxMCBocnMgYWdvICsgQnkgTWljaGFlbCBTYW5naWFjb21vLCBUaGUgUGxhaW4gRGVhbGVyTWVuIGFycmVzdGVkIGFmdGVyIGVhdGluZyBzb21ldGhpbmcgdGhhdCBtYWRlIHRoZW0gJ25vdCBmZWVsIHJpZ2h0JzogU29sb24gcG9saWNlIGJsb3R0ZXIgTWVuIGFycmVzdGVkIGFmdGVyIGVhdGluZyBzb21ldGhpbmcgdGhhdCBtYWRlIHRoZW0gJ25vdCBmZWVsIHJpZ2h0JzogU29sb24gcG9saWNlIGJsb3R0ZXIgVGhlIFNvbG9uIHBvbGljZSBibG90dGVyIHRoaXMgd2VlayBpbmNsdWRlcyBhbiBpdGVtIGluIHdoaWNoIHR3byBNYXBsZSBIZWlnaHRzIG1lbiB3ZXJlIGFycmVzdGVkIGZvciBkcnVnIHBvc3Nlc3Npb24gYWZ0ZXIgdGhleSByZXBvcnRlZCB0aGF0IHRoZXkgZGlkIG5vdCAnZmVlbCByaWdodCcgYWZ0ZXIgZWF0aW5nIGEgaG9tZW1hZGUgYnVuIGNvbnRhaW5pbmcgdGhlIGRydWcgVEhDLiBQb2xpY2UgYXJyZXN0ZWQgdGhlIGJ1cmdsYXIsIGEgQ2xldmVsYW5kIG1hbiwgNDUuIFNlbmF0b3IgZnJvbSBDYWxpZm9ybmlhLCBpcyB0aGUgZmlyc3Qgb2YgdGhlIDE0IGRlY2xhcmVkIDIwMjAgRGVtb2NyYXRpYyBwcmVzaWRlbnRpYWwgY2FuZGlkYXRlcyB0byBzY2hlZHVsZSBhIHZpc2l0IHRvIHRoZSBCdWNrZXllIFN0YXRlLiAKVGhlIFdpZG93cyBTb25zIGFyZSBhbiBpbnRlcm5hdGlvbmFsIGdyb3VwIG9mIG1vdG9yY3ljbGUgZW50aHVzaWFzdHMsIGNvbXByaXNlZCBvZiBGcmVlbWFzb25zLiBJdCB3YXMgZm91bmRlZCBpbiAxOTk4IHdpdGggdGhlIG9yaWdpbmFsIHB1cnBvc2Ugb2YgcHJvdmlkaW5nIGFpZCBhbmQgYXNzaXN0YW5jZSB0byB0aGUgb3JwaGFucyBhbmQgd2lkb3dzIG9mIE1hc3RlciBNYXNvbnMuLiAKRGlzY292ZXIgdGhlIFVuY2xlYXIgSGlzdG9yeSBvZiBQb2tlcgpUaGUgTEVDIGFsc28gaG9zdHMgdGhlIFNpbmdsZSwgRG91YmxlIGFuZCBUcmlwbGUgQSB0b3VybmFtZW50cyB0aGlzIHdlZWssIGFuZCB0aGUgb25seSB0b3Agc2VlZCB0byBhZHZhbmNlIGZyb20gdGhlIGZvdXIgbGV2ZWxzIHRvIHRoZWlyIGZpbmFsIGlzIHRoZSBEb3VibGUgQSBOby4gMSBDaGFybGVzIEhheXMgUmFpbm1ha2VycyBvZiBQcmluY2UgUnVwZXJ0LCB3aG8gd2lsbCBmYWNlIHRoZSBOby4gYW5kIGZlYXR1cmVzIHRoZSBOby4gOSBOb3J0aCBEZWx0YSBIdXNraWVzIGFnYWluc3QgdGhlIE5vLiAyIFZlcm5vbiBQYW50aGVycy4gd2l0aCB0aGUgTm8uIDQgQ3JlZG8gQ2hyaXN0aWFuIEtvZGlha3Mgb2YgTGFuZ2xleSB0YWtpbmcgb24gdGhlIE5vLiAyIEtlbG93bmEgQ2hyaXN0aWFuIEtuaWdodHMuCkJvdGggb2YgbXkgZnJpZW5kcyBpbW1lZGlhdGVseSBqYW1tZWQgdXAuIApNb3N0IGNhc2lub3Mgd2lsbCBjYXNoIGEgcGVyc29uYWwgY2hlY2sgd2l0aCBubyBjaGFyZ2UuIApBbG1vc3Qgc2l4dHkgUmVzZWFyY2hlcnMsIGdpdmUgb3IgdGFrZSwgYXJlIHJlcHJlc2VudGVkIGhlcmUuIApJdCdzIHRoZSB0cnVlLCBiZXdpbGRlcmluZyBzdG9yeSBvZiB0aGUgbmlnaHRtYXJlIG9mIGEgc21hbGwgdG93biBvYnNlc3NlZCB3aXRoIGRlbGl2ZXJpbmcganVzdGljZSwgYW5kIHRoZSBiaXphcnJlIGRyZWFtIG9mIGEgcG9vciwgdW5lZHVjYXRlZCBtYW4gYWNjdXNlZCBvZiBtdXJkZXIgYSBjYXNlIHRoYXQgY2hpbGxpbmdseSBwYXJhbGxlbHMgdGhlIG9uZSwgb2NjdXJyaW5nIGluIHRoZSB2ZXJ5IHNhbWUgdG93biwgY2hyb25pY2xlZCBieSBKb2huIEdyaXNoYW0gaW4gVGhlIElubm9jZW50IE1hbi4uIApBY2NvcmRpbmcgdG8gYSBzdHVkeSBieSB0aGUgQW1lcmljYW4gUG9saXRpY2FsIFNjaWVuY2UgQXNzb2NpYXRpb24sIGJ5IDE5OTAsIHRoZSBVUyBoYWQgdGhlIG1vc3QgdW5lcXVhbCBpbmNvbWUgZGlzdHJpYnV0aW9uIG9mIGFueSBpbmR1c3RyaWFsaXplZCBjb3VudHJ5QW5kIHlldCBBbWVyaWNhbnMga2VwdCBvbiBkcmVhbWluZy4gCg==|<---