--->|VGhlIGZpcnN0IGlzIHRoYXQgd2hpbGUgeW91IHRoaW5rIHlvdSBtaWdodCBoYXZlIGFuIGVkZ2UsIHlvdSBwcm9iYWJseSBkb24gVGhhdCBmaW5lLiAKRG9pbmcgNS8zLzEgZm9yIGJlZ2lubmVycyBhbmQgSSBkb24gZmVlbCBsaWtlIEkgbWFraW5nIHByb2dyZXNzIG9uIG15IHNxdWF0cy4gSSBtYWtpbmcgcHJvZ3Jlc3Mgb24gYmVuY2ggKGxpa2UgZG9pbmcgb25lIG1vcmUgcmVwIGR1cmluZyB0aGUgc2Vjb25kIHdvcmtvdXQgb2YgZWFjaCB3ZWVrIGFuZCB0cnlpbmcgdG8ga2VlcCB0aGUgcmVwcyBjb25zdGFudCBmb3IgdGhlIGZpcnN0IGFuZCBzZWNvbmQgd29ya291dCBvZiBlYWNoIHdlZWsgd2hlbiBJIG1vdmUgdXAgdGhlIG5leHQgd2Vlay4gRGVhZGxpZnRzIGFuZCBPSFAgaGF2ZSBiZWVuIG1ha2luZyBwcm9ncmVzcyBidXQgT0hQIGlzIHNsb3dlciBhbmQgZGVhZGxpZnQgaXMgYXZlcmFnZSBJIHdvdWxkIHNheS4gCk1heSAyNDogRmFjZWJvb2sgZGVsaXZlcnMgb24gaXRzIHByb21pc2UgdG8gYnVpbGQgYW4gYXJjaGl2ZSB0byBkaXNjbG9zZSBhbGwgcG9saXRpY2FsIGFkcy4KVGhlbiB5b3UgaGF2ZSBjaGVhdGluZy4gCkhlcmVpbiBsaWVzIHRoZSBsZXNzb24gZm9yIHRoZSBnb3Zlcm5tZW50Li4gCkFydGljbGUgZXhwbGFpbmVkIHRoYXQgeWVhcnMgYWdvLCBGcmVuY2ggbWVkaWNhbCBwcm9mZXNzb3IgUm9iZXJ0IE1haWduZSB0byBiZWxpZXZlIHRoYXQgbWFueSBoZWFkYWNoZXMgb3JpZ2luYXRlZCB3aXRoIGEgc3RydWN0dXJhbCBwcm9ibGVtIGluIHRoZSBuZWNrLiAKMTMuIFQgKCBDb29raWVzIFByZXNzZSB2b3VzIGluZm9ybWUgcXUgb3UgcGx1c2lldXJzIHQgKCBjb29raWVzIHBldXZlbnQgcGxhYyBzdXIgbGUgZGlzcXVlIGR1ciBkZSBsIHBhcnRpciBkdXF1ZWwgdm91cyBuYXZpZ3VleiBzdXIgbGUgU2l0ZSB3ZWIuIExlcyB0IGVudm95IGR1IFNpdGUgd2ViIG4gcGFzIHBvdXIgb2JqZXQgZGUgdm91cyBpZGVudGlmaWVyLiBJbHMgZW5yZWdpc3RyZW50IGRlcyBpbmZvcm1hdGlvbnMgcmVsYXRpdmVzIGxhIG5hdmlnYXRpb24gc3VyIGxlIFNpdGUgd2ViIGVmZmVjdHUgcGFydGlyIGRlIGwgc3VyIGxlcXVlbCBlc3Qgc3RvY2sgbGUgdCBFbiBhdWN1biBjYXMsIGxlcyB0IG4gcG91ciBvYmpldCBkIGRlcyBpbmZvcm1hdGlvbnMgcGVyc29ubmVsbGVzIG5vbWluYXRpdmVzIHZvdXMgY29uY2VybmFudC4gVm91cyBwb3V2ZXogdm91cyBvcHBvc2VyIGwgZGVzIHQgc3VyIGxlIGRpc3F1ZSBkdXIgZGUgbCBwYXJ0aXIgZHVxdWVsIHZvdXMgbmF2aWd1ZXogc3VyIGxlIFNpdGUgd2ViIGVuIG1vZGlmaWFudCBsZXMgb3B0aW9ucyBkZXMgbG9naWNpZWxzIGRlIG5hdmlnYXRpb24gZmlndXJhbnQgc3VyIGxlZGl0IG9yZGluYXRldXIuCldoZW4gcG9saWNlIGFycml2ZWQsIHRoZXkgZm91bmQgYSBkcml2ZXdheSBjb3ZlcmVkIGJ5IHNldmVyYWwgZmVldCBvZiBzbm93IGFuZCBhIGNhciBjb21wbGV0ZWx5IGJ1cmllZC4gVGhlcmUgd2VyZSBubyBzaWducyB0aGF0IGFueW9uZSBoYWQgYmVlbiBpbiBvciBvdXQgZm9yIHNvbWUgdGltZS4KSXQgd2lsbCBubyBsb25nZXIgYmUgY2FsbGVkIG1vdXNzZS4gSXQgaXMgb25seSBtb3RoZXIgbWlsay4gSXQgaGFzIGFsd2F5cyBiZWVuIHNvLi4gCldlIG1hZGUgc3VyZSB0aGVyZSB3YXMgYWx3YXlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIGZvcm11bGEgaW4gaGVyIGJvdHRsZSBhbmQgd2F0ZXIgaW4gaGVyIHNpcHB5IGN1cC4gV2hlbiBzaGUgdHVybmVkIG9uZSwgd2UgZ2F2ZSBoYWxmIGZvcm11bGEgYW5kIGhhbGYgY293cyBtaWxrLiBTaGUgdG9vayBmaW5lIHRvIGl0LiBTbyB3ZSBzdHJhaWdodCB1cCBnYXZlIGhlciBjb3dzIG1pbGsgYW5kIHdhcyBoYXBweSB0byBiZSByaWQgb2YgZm9ybXVsYS4gQ293cyBtaWxrIHdhcyBsaWtlIG5vIGNoYW5nZSBhdCBhbGwgc28gd2UgaW50cm9kdWNlZCBhbm90aGVyIGNoYW5nZSBhbmQgZ2F2ZSBoZXIgbWlsayBpbiBoZXIgc2lwcHkgY3VwIGFuZCBuZXZlciBsb29rZWQgYmFjay4gU2hlIGhhc24ndCBoYWQgdGhlIGJvdHRsZSBzaW5jZS4KVGhlIGRvbWluYW50IHJlbGlnaW9uIGluIHRoZSBhcmVhIHdhcyBwcm90ZXN0YW50LiAKVGhlIHNpbXBsZXN0IGFuYWxvZ3kgaXMgInRoaW5rIG9mIHRoZSBoYXJkZXN0IHRoaW5nIHlvdSBjb3VsZCBldmVyIGRvICAgdGhlbiBkb3VibGUgaXQiLkJlaW5nIGNhbW91ZmxhZ2VkIGlzbid0IHNleHlXaGlsZSB0aGUgc3RlcmVvdHlwaWNhbCBmaWxtIHNob3Qgc2VlcyB0aGUgaGVybyBibGVuZCBzZWFtbGVzc2x5IGludG8gdGhlIGJhY2tncm91bmQsIGl0IGRvZXNuJ3Qgc2hvdyB0aGUgZGlzY29tZm9ydCBvZiBzd2VhdGluZyBsaWtlIGEgY2hlYXAgYmVlZiBzYWxhZCB3aGlsZSBseWluZyBhd2t3YXJkbHkgaW4gc3Bpa3kgZ29yc2UgYnVzaGVzLCB3aXRoIHR3aWdzLCBsZWF2ZXMgYW5kIGJyb2tlbiBicmFuY2hlcyBzY3JhcGluZyBhbmQgc2NvcmluZyB5b3VyIHNraW4sIGxlYXZpbmcgeW91IGZlZWxpbmcgbGlrZSB5b3UgaGF2ZSBiZWVuIG1pc3RyZWF0ZWQgYnkgYSBzZXh1YWxseSBmcnVzdHJhdGVkIExhYnVybnVtLllvdSBiZWNvbWUgYmlsaW5ndWFsUm95YWwgTWFyaW5lcyB0YWxrICJKYWNrc3BlYWsiICAgYSBOYXZhbCBsaW5nbyB3aGVyZSB0b2lsZXRzIGFyZSAiaGVhZHMiLCBhbmQgc3RlYWsgYW5kIGtpZG5leSBwdWRkaW5ncyAiYmFiaWVzIGhlYWRzIi4gQ29udmVyc2VseSwgYWN0dWFsIGhlYWRzIGJlY29tZSAiZ3JpZHMiLCAibmFwcGVycyIgb3IgImZhdCBvbmVzIi4gCkRpZCB5b3UgY2hlY2sgdGhlIHRyaWFsIHRyYW5zY3JpcHRzPyBJZiBzbywgeW91IG5vdyBrbm93IHRoYXQgdGhlIHN0YXRlIG5ldmVyIGNsYWltZWQgdGhhdCBidWxsZXQgd2VudCB0aHJvdWdoIFRlcmVzYSBza3VsbC4gCkkgbGVmdCBhIGNvbW1lbnQgInRiaCwgbm90aGluZyBzcGVjaWFsLiIKVGhpcyBhcnRpY2xlIHdpbGwgaGVscCB5b3UuIApUb2RheSwgSHVhd2VpIGhhcyBiZWNvbWUgdGhlIG1vc3QgaW1wb3J0YW50LCBhbmQgbW9zdCBjb250cm92ZXJzaWFsLCB0ZWxlY29tcyBzdXBwbGllciBpbiB0aGUgd29ybGQsIHdpdGggZ2xvYmFsIHJldmVudWVzIG9mIG1vcmUgdGhhbiAkMTAwYm4gbGFzdCB5ZWFyLiBJdHMgcmlzZSBoYXMgdHJpZ2dlcmVkIGZlYXJzIGluIHRoZSB3ZXN0IG92ZXIgQ2hpbmEncyBjb250cm9sIGFuZCBhbGxlZ2VkIG1hbmlwdWxhdGlvbiBvZiBuYXRpb25hbCBjb21tdW5pY2F0aW9ucyBuZXR3b3Jrcy4KVGhpcyB5ZWFyIG15IGdvYWwgaXMgdG8gcmVhZCAyNiBib29rcy4gSSd2ZSByZWFkIDQgc28gZmFyLiBUaGUgNXRoIEkgYnJpZWZseSBzdGFydGVkIGxhc3QgbmlnaHQgaXMgVGhlIFN1YnRsZSBBcnQgb2YgTm90IEdpdmluZyBhIEZjay4gQm91Z2h0IHRoaXMgYm9vayBhZ2VzIGFnbyBidXQgbmV2ZXIgZ290IGFyb3VuZCB0byByZWFkaW5nIHBhc3QgdGhlIGZpcnN0IDIwIHBhZ2VzIG9yIHNvLgpEZSBHZW1lZW50ZSB0b2NoIGdvZWQgd2VyayB2ZXJyaWNodD8gRXIgaW50ZXJlc3NhbnQgdm9vciB2b29yIGVlbiBJQU1BLCBhbHMgZXIgdG9ldmFsbGlnIGVlbiBBbXN0ZXJkYW1zZSBicmFuZHdlZXIgbWFuIG9wIHJlZGRpdCB6aXQgZGllIGVlbiBvbmFmaGFua2VsaWprZSBpbnNpZGUgdmlldyBrYW4gZ2V2ZW4uLiAKQ2hlcmlzaGVkIGdyYW5kbW90aGVyIG9mIDUgYW5kIGdyZWF0IGdyYW5kbW90aGVyIG9mIDMuIFNpc3RlciBvZiBCcnVjZSBXaGVhdGNyb2Z0LiAKRGVudHN1IEFlZ2lzIEdyb3VwIFByZXNpZGVudCBvZiBCcmFuZCBTb2x1dGlvbnMgTWF0dCBTZWlsZXIgaHVuZyB1cCBoaXMgc3VpdCBpbiB0aGUgZnJvbnQgb2YgYSBwbGFuZSwgYWxsIHRoZSB3aGlsZSB0aGlua2luZyB0byBoaW1zZWxmLCAiVGhpcyBpcyBhIGJhZCBpZGVhLiBJJ20gZ29pbmcgdG8gZm9yZ2V0IHRoaXMuIi4gCkNvbWJhdGluZyBleHRyZW1pc20gaXMgY2VydGFpbmx5IGEgY29tcGxpY2F0ZWQgaXNzdWUuIApXaW5uYVZlZ2FzIGlzIHRoZSBTaW91eGxhbmQgbnVtYmVyIG9uZSBkZXN0aW5hdGlvbiBmb3IgZnVuIGFuZCBleGNpdGVtZW50ISBXaW4gYmlnIGF0IG92ZXIgODUwIHNsb3QgYW5kIHZpZGVvIHBva2VyIG1hY2hpbmVzLiBUcnkgeW91ciBsdWNrIGF0IG9uZSBvZiB0aGUgbGl2ZSBwb2tlciwgQmxhY2tqYWNrLCBSb3VsZXR0ZSBhbmQgQ3JhcHMgdGFibGVzLiBHZXQgcmVhZHkgdG8geWVsbCwgIkJJTkdPISIgYmVjYXVzZSBXaW5uYVZlZ2FzIGlzIHRoZSBiZXN0IHBsYWNlIGFyb3VuZCBmb3Igc29tZSBsaXZlbHkgQmluZ28uIApFdmVuIGlmIGluIHlvdXIgaGVhZCB5b3UgZG9uIGxpa2UgaG93IHlvdSBsb29rIHlvdSBoYXZlIHRvIGJlbGlldmUgdGhhdCBieSBiZWluZyBhIGdvb2QgcGVyc29uIG90aGVycyB3aWxsIGJlIGF0dHJhY3RlZCB0byB5b3UuIFVnbHkgaW5uYXJkcyBtYWtlIHVnbHkgcGVvcGxlLCBhbmQgdGhlIHJldmVyc2UgaXMgYWxzbyB0cnVlLiAKNiBSb2FkIGluIFJpY2htb25kLkluIERlY2VtYmVyLCB0aGUgQ2l0eSBvZiBSaWNobW9uZCBjaGFuZ2VkIGl0cyBieWxhd3MgdG8gbGltaXQgdGhlIG1heGltdW0gc2l6ZSBvZiBhIGhvdXNlIGluY2x1ZGluZyBnYXJhZ2UgYW5kIHJlc2lkZW50aWFsIGFjY2Vzc29yeSBidWlsZGluZ3MgdG8gNDAwIHNxLiAKSGUgZG9taW5hdGVkIHRoZSBzcG9ydCBmcm9tIDE5MTIgdW50aWwgYWJvdXQgMTkzMCwgd2lubmluZyAxMzggb2YgMTkyIHRvdXJuYW1lbnRzIGluIHRoYXQgcGVyaW9kLCBhbmQgY29tcGlsaW5nIGEgbWF0Y2ggcmVjb3JkIG9mIDkwNyA2Mi4gCkxlc3MgcGluayB0aGFuIHRoZSBwYXN0eSB3aGl0ZSBmb2xrIG9mIHRoZSBCcml0aXNoIElzbGVzLCBsZXNzIGhlYWx0aHkgbG9va2luZyB0aGFuIHRoZSBTY2FuZGluYXZpYW5zLiBLaW5kIG9mIGEgdHJhbnNsdWNlbnQgdW5kZWFkIHByZXNlcnZlZCBsb29rIGJ1dCBjYW4gc3RpbGwgZ2V0IGEgZ3JlYXQgdGFuIHRoYXQgc2hvY2tzIHBlb3BsZSBpZiB0aGV5IHNlZSB0aGUgY29udHJhc3QuIApBbnlvbmUgd2lzaGluZyB0byBsZWFybiB0aGUgdGltZWxlc3MgYXJ0IG9mIHNlbGYgcHJvbW90aW9uIGNhbiBkbyBubyBiZXR0ZXIgdGhhbiBsZWFybiBhdCBoaXMgZmVldC4gVG9vIG9mdGVuIGhlIHNvdW5kcyBsaWtlIGFuIEFtZXJpY2FuIGFwcGVuZGFnZSwgYW4gZXh0ZW5zaW9uIG9mIHRoZSBTdGF0ZSBEZXBhcnRtZW50LCBubyBkb3VidCBhbiBhc3NldCBpbiBBbWVyaWNhbiBleWVzIGJ1dCBhIGJpdCBvZiBhIGxpYWJpbGl0eSBmb3IgdXMuIApNYXNzZXVycyB3aG8gaGF2ZSBnb25lIHRvIG1hc3NhZ2Ugc2Nob29scyBoYXZlIGhhZCBlcm90aWNpc20gc3RyaXBwZWQgYXdheSBhbmQgb25lIGxhcmdlIHNjaG9vbCBpbiBOZXcgWW9yayBoYXMgYmVlbiBpbnN0cnVtZW50YWwgaW4gd3JpdGluZyBtYXNzYWdlIHJlZ3VsYXRpb25zLiBTdWNoIG1hc3NldXJzIHNlZSBUYW50cmljIHdvcmsgYXMgdW53b3J0aHkgb2YgdGhlaXIgInByb2Zlc3Npb24sIiBiZXNtaXJjaGluZyB0aGUgcHVyaXR5IG9mIHRoZWlyIHZhbmlsbGEgd29yay4gCkRvbid0IGxldCB0aGF0IGJlIHlvdSEgSGF2ZSBzb21lIG1vbmV5IHNhdmVkIHVwIGZvciBhIHJhaW55IGRheSBpbiBjYXNlIHlvdSBiZWNvbWUgYSBsaXR0bGUgdG9vIGFkZGljdGVkIHRvIHRoZSBnYW1lIGFuZCBoYXBwZW4gdXBvbiBhbiB1bmZvcnR1bmF0ZSBsb3Npbmcgc3RyZWFrLi4gClRoZXkgdXNlZCB0byBjYWxsIGl0IHRoZSAxMDAgZGF5IGNvdWdoIGJlY2F1c2UgdGhhdCBob3cgbG9uZyBpdCBsYXN0cywgYW5kIHRoZXJlIGlzIG5vdGhpbmcgeW91IGNhbiBkbyB0byBlYXNlIHRoZSBjb3VnaC4gWW91IGxpdGVyYWxseSBjYW4gYnJlYXRoZSB3aGVuZXZlciB5b3UgY291Z2ggaXQgaXMgdGVycmlmeWluZy4gCkJ5IE1hcmNoIDE4OTgsIGFzIHRoZSBDcnV0Y2h5IFB1c2ggZ2F0aGVyZWQgc3RyZW5ndGgsIFZhbGVudGluZSBoYWQgZWFybmVkIGhpcyBmaXJzdCBjb252aWN0aW9uIGZvciBhc3NhdWx0aW5nIHBvbGljZSAgIHR3byBwb2xpY2VtZW4sIGluIGZhY3QuIEhlIHdhcyByZXNpc3RpbmcgYXJyZXN0IGFmdGVyIGZsZWVpbmcgYW4gZWFybGllciBzY3VmZmxlIHdpdGggcG9saWNlIGludm9sdmluZyBnYW5nIG1hdGVzIFdpbGxpYW0gV2Fsc2ggYW5kIFBldGVyIFN1bGxpdmFuIGluIFF1ZWVuc2JlcnJ5IFN0cmVldCwgTm9ydGggTWVsYm91cm5lLgpNaXN0ZXIgTWFrZXIgaGFzIHBhY2tlZCB0aGUgTWFrZXJtb2JpbGUgd2l0aCBldmVyeXRoaW5nIGhlIG5lZWRzLCBhcyB3ZWxsIGFzIGhpcyBraXRjaGVuIGZyaWRnZSB3aGljaCB3aWxsIGJlIGFkb3JuZWQgd2l0aCBmYW4gcGljdHVyZXMuClRoaXMgaGFzIGJlZW4gYSBjb250cmlidXRpb24gdG8gdGhlIHdob2xlIFNvY2lhbCBXb3JrIFByb2dyYW0sIGFzIGZhY3VsdHkgbWVtYmVycyBhbHNvIHBvc3QgaW5mb3JtYXRpb24gb2YgZ2VuZXJhbCBpbnRlcmVzdCB0byBTb2NpYWwgV29yayBzdHVkZW50cyBvbiB0aGUgbGlzdCBzZXJ2ZS4uIApSZWxldmFudCBkZXRhaWxzIG9mIHRoZSBpbmRpdmlkdWFsIHN0dWRpZXMgd2VyZSBwcmVzZW50ZWQgaW4gdGFidWxhciBmb3JtYXQuIFZhbGlkaXR5IHdhcyBhc3Nlc3NlZC4gR2l2ZW4gdGhlIGhldGVyb2dlbmVvdXMgbmF0dXJlIG9mIHRoZSBzdHVkaWVzLCBhIG5hcnJhdGl2ZSByZXZpZXcgd2FzIGFwcHJvcHJpYXRlLkdpdmVuIHRoZSBwb29yIHF1YWxpdHkgb2YgdGhlIHByaW1hcnkgc3R1ZGllcyBhbmQgdGhlIHNtYWxsIHNhbXBsZSBzaXplcyBjYXV0aW9uIGlzIGFkdmlzZWQgaW4gY29uc2lkZXJpbmcgYW55IGNvbmNsdXNpb25zIGJhc2VkIG9uIHRoaXMgZXZpZGVuY2UuIGxheGF0aXZlcykuIApJbiAxMDA5LCBQcmluY2UgV3VsZm5vdGgsIGNvbW1hbmRlciBvZiBtYW55IG9mIHRoZSBzaGlwcywgdHVybmVkIHBpcmF0ZSBhbmQgZmxlZCwgcmVzdWx0aW5nIGluIHRoZSBldmVudHVhbCBsb3NzIG9mIHRoZSBlbnRpcmUgZmxlZXQuLiAKV2hlbiBJIHdhcyAxOCBtZSBhbmQgYSBidW5jaCBvZiBteSBmcmllbmRzIHdlbnQgdG8gU3BhaW4gZm9yIGEgZmV3IHdlZWtzLiBBbW9uZ3N0IHRoZSBwZW9wbGUgdGhlcmUgd2FzIG15IGV4IGdmIChleCBhdCB0aGUgdGltZSB0b28pLiAKT29naWVfYm9vZ2llX215QlVHUyAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQW5kIGFzIHRoZSBTTyB0cnlpbmcgdG8gaGVscCBoaW0sIHBsZWFzZSBkbyBub3QgYWRkIHRvIHRoZSBwcmVzc3VyZSBvciBnaXZlIGluIHRvIGJhcmdhaW5pbmcuIHlvdSBjYW4gb25seSBiZSBzdXBwb3J0aXZlIG9yIG5vdCBzdXBwb3J0aXZlLiB0aGVyZSBpcyBubyBncmV5IGFyZWEuIGJlaW5nIHRvbyB1bmRlcnN0YW5kaW5nIGFuZCBhbiBlbmFibGVyIGdpdmVzIGhpbSBleGN1c2VzLiBiZWluZyBhIHBlc3NpbWlzc3RpYyBzdHJlc3NvciBpcyBvbmx5IGFkZGluZyB0byB0aGUgcHJlc3N1cmUgKGFuZCBzbW9rZXJzIGxpa2UgdG8gc21va2Ugd2hlbiB3YWl0aW5nIG9yIGZlZWxpbmcgc3RyZXNzZWQpLiBsZWFybiB3aGF0IGhpcyB0cmlnZ2VycyBhcmUgYW5kIGJlIHRoZXJlIHBhc3NpdmVseSBhcyBhIHN1cHBvcnRpbmcgdm9pY2UgaW5zdGVhZCBvZiB0cnlpbmcgdG8gImFjdGl2ZWx5IiBjb250cm9sIGhpcyBhY3Rpb25zLiBpZiBoZSBxdWl0cyB3aGVuIHlvdSBhcmUgYXJvdW5kLCB0aGUgcHJlc3N1cmUgYW5kIHRlbXB0YXRpb24gaXMgZXZlbiB3b3JzZSB3aGVuIHlvdSBhcmVudCB0aGVyZS4gaWYgaGUgcXVpdHMgZm9yIHlvdSwgdGhlbiBoZSB3aWxsIHNtb2tlIGFnYWluIHdoZW4geW91IGFyZSBnb25lLgpJIGhhZCBubyBpbnRlbnRpb24gb2YgYmVjb21pbmcgYSBibGFja2phY2sgZGVhbGVyLCBidXQgSSBpbW1lZGlhdGVseSBrbmV3IHRoZSBjYXNpbm8gd2FzIHdoZXJlIEkgYmVsb25nZWQuIApCb3NtYW4sIHRoZSBJQ1UsIE1lZGljYWwgZmxvb3IsIFNvdXRobGFrZSdzIENhdGggTGFiIGFuZCBDQ1UgYW5kIHRoZSBFUiBkZXBhcnRtZW50cy4gClRoZW4gd2hlbiB3ZSBidXkgc29tZXRoaW5nLCB3ZSBnZXQgYSBkZWxpY2lvdXMgYnVyc3Qgb2YgZG9wYW1pbmUgaW4gdGhlIGJyYWluLi4gClZlcm1vbnQgaXMgYSBsYW5kIG9uY2UgZGVzY3JpYmVkIGJ5IENvbmRpIFJpY2UgYXMgIlRoZSBQZW9wbGVzIFJlcHVibGljIG9mIFZlcm1vbnQsIiBhIHBsYWNlIHdpdGggYSBDb25ncmVzc2lvbmFsIGRlbGVnYXRpb24gdGhhdCBoYXMgY29uc2lzdGVudGx5IHN0b29kIHVwIHRvIHRoZSBCdXNoIGFkbWluaXN0cmF0aW9uIGNyaW1lcywgYSBkZWxlZ2F0aW9uIHdpdGggYXQgbGVhc3Qgb25lIG9wZW5seSBzb2NpYWxpc3QgbWVtYmVyIChCZXJuaWUgU2FuZGVycykgYW5kIHBvc3NpYmx5IHR3byAoUGV0ZXIgV2VsY2gpLiBBbmQgeWV0LCBzb21laG93IHRoZSBQZW9wbGVzIFJlcHVibGljIG9mIFZlcm1vbnQgQ29uZ3Jlc3Npb25hbCBEZWxlZ2F0aW9uIGJlaGF2ZXMgZXhhY3RseSBsaWtlIHRoZSByZXN0IG9mIHRoZSBEZW1zIHdobyBiZWhhdmUgZXhhY3RseSBsaWtlIHRoZSByZXN0IG9mIFJlcHVibGljYW5zIHdoZW4gaXQgY29tZXMgdG8gbWFraW5nIHN1cmUgb3VyIGVjb25vbXkgaXMgYmFzZWQgb24gd2FyIGFuZCBjb3Jwb3JhdGUgaW50ZXJlc3RzLgpWb2ljaSBxdWVscXVlcyBpbmRpY2F0aW9ucyBzdXIgY2Ugbm91dmVhdSBsaXZyZSBkcyAgcHJzZW50IGRpc3BvbmlibGUgIGxhIHZlbnRlIC4uIApFaW5lbiBNb21lbnQgc3B0ZXIgYmV0cmF0IGVpbmUganVuZ2UgRnJhdSBkYXMga2xlaW5lIEJyby4gU2llIHdhciBNaXR0ZSB6d2FuemlnLCBzY2hsYW5rLCBtaXQgc2NodWx0ZXJsYW5nZW4sIGJsb25kZW4gSGFhcmVuLiBJaHJlIEtsZWlkdW5nIHdhciBzY2hpY2sgYWJlciB1bmF1ZmZsbGlnOiBKZWFucywgQmx1c2UsIFNhbmRhbGVuLgpTY29vYnlkb29hbWkgIDIwMyBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvClRoaXMgY2FuIGJlIGhlbHBmdWwgZm9yIHJlY3JlYXRpb25hbCBwbGF5LCBnZXR0aW5nIGEgZmVlbCBmb3IgdGhlIGdhbWUgYW5kIHRoZSBoYW5kcy4gClRvIGFsbCB0aGF0IGtuZXcgTWFyeSwgc2hlIHdhcyBhIGtpbmQsIGdlbmVyb3VzLCBhbmQgY29uc2lkZXJhdGUgZnJpZW5kLiBTaGUgc2hvd2VkIGdyZWF0IGludGVyZXN0IGluIHBlb3BsZSwgd2FzIGEgZ29vZCBsaXN0ZW5lciwgd2FzIHRob3VnaHRmdWwsIGFuZCBodW1ibGUuIApaeW5nYSBQb2tlciBIYWNrZXIgR2V0cyBUd28gWWVhcnMgaW4gSmFpbApUaHVyc2RheSBuaWdodCwgdGhlIDIzIHllYXIgb2xkIGFpcm1hbiBiZWdhbiBhIHRvdXIgb2YgT2FrbGFuZCB0YXZlcm5zLCBjZWxlYnJhdGluZyBoaXMgcmUgZW5saXN0bWVudCBpbnRvIHRoZSBBaXIgRm9yY2UuIApTZXZlcmFsIG90aGVyIG9mZmljZXJzLCBpbmNsdWRpbmcgYSBzdXBlcnZpc29yLCByZXNwb25kZWQuUG9saWNlIGZvdW5kIHRoZSBvYmplY3QgdGhlIG1hbiB3YXMgaG9sZGluZyB3YXMgYSBkZXZpY2UgdXNlZCB0byBwaWNrIHVwIHRyYXNoLCBhbmQgdGhlIG1hbiB3YXMgbm90IHRpY2tldGVkIG9yIGFycmVzdGVkLlRoZSBidWlsZGluZyBhdCAyMzMzIEFyYXBhaG9lIEF2ZS4gSXMgaWRlbnRpZmllZCBhcyBOYXJvcGEgVW5pdmVyc2l0eSBzdHVkZW50IGhvdXNpbmcsIGFuZCB0aGUgc2Nob29sIGhhcyBjb25maXJtZWQgdGhlIG1hbiBpbiB0aGUgdmlkZW8gaXMgYSBzdHVkZW50IGF0IHRoZSB1bml2ZXJzaXR5LkluIGEgdmlkZW8gb2YgdGhlIGluY2lkZW50IHBvc3RlZCB0byBzb2NpYWwgbWVkaWEgYnkgYSBtYW4gd2hvIHNhaWQgaGUgbGl2ZXMgd2l0aCB0aGUgcGVyc29uIGNvbnRhY3RlZCBieSBwb2xpY2UsIHRoZSBtYW4gY2FuIGJlIGhlYXJkIHRlbGxpbmcgcG9saWNlIGhlIGlzIG9uIGhpcyBvd24gcHJvcGVydHkgYW5kIGlzIGp1c3QgcGlja2luZyB1cCB0cmFzaC4iSSBsaXZlIGhlcmUsIiB0aGUgbWFuIGNhbiBiZSBoZWFyZCBzYXlpbmcgaW4gdGhlIHZpZGVvLiAiSSBhbSBwaWNraW5nIHVwIGdhcmJhZ2UgZnJvbSBteSAoZXhwbGV0aXZlKSBwb3JjaC4iQW4gb2ZmaWNlciBjYW4gYmUgaGVhcmQgYXNraW5nIHRoZSBtYW4gdG8gInB1dCB0aGUgb2JqZWN0IGRvd24sIiB3aGlsZSB0aGUgbWFuIHJlcGxpZXMgIkRvbid0IChleHBsZXRpdmUpIHRlbGwgbWUgd2hhdCB0byBkbywiIGFuZCBzYXlzLCAiSSBoYXZlIGEgcmlnaHQgdG8gYmUgZG9pbmcgdGhpcy4iIEF0IG9uZSBwb2ludCwgc29tZW9uZSBjYW4gYmUgaGVhcmQgc2F5aW5nLCAiSXQncyBsaWtlbHkgeW91IGdvdCBwcm9maWxlZC4iVGhlIHBlcnNvbiB3aG8gcG9zdGVkIHRoZSB2aWRlbyBkZWNsaW5lZCB0byBjb21tZW50IGF0IHRoaXMgdGltZS5BdWxhYmF1Z2ggc2FpZCBwb2xpY2UgY291bGQgbm90IHByb3ZpZGUgYW55IGZ1cnRoZXIgZGV0YWlscyBhYm91dCB0aGUgaW5jaWRlbnQgZHVyaW5nIHRoZSBpbnZlc3RpZ2F0aW9uLCB3aGljaCBpcyBleHBlY3RlZCB0byB0YWtlIDYwIHRvIDkwIGRheXMuIApFVSAgIEVzdGFibGlzaGVkIFVuaXZlcnNlOiBCYXNlZCBvbiBleGlzdGluZyBmaWN0aW9uCjIpIFRoZSBzdG9jayBBQkMgaG9sZHMgdXAgYXQgYSB2YWx1ZSBsYXJnZXIgdGhhbiAkNTAsIGxldCBzYXkgJDEwMDAwMC4gClRoZSB0aGluZyB3aXRoIHBpbyBhbmQgdGhpcyBnb2VzIGZvciBhbGwgc3Rha2VzLCB5b3Ugd2lsbCBuZXZlciBldmVyIHBsYXkgYXQgYSBjb3JyZWN0IGZyZXF1ZW5jeSBjb21wYXJlZCB0byBwaW8gdXNpbmcgMy80IHNpemluZ3Mgb24gZXZlcnkgYm9hcmQgYW5kIGV2ZXJ5IHN0cmVldC4gd2hhdCBpdCB3aWxsIGRvIHRob3VnaCBpcyBnaXZlIHlvdSBhIGZvdW5kYXRpb24gYW5kIG1ha2UgeW91IHJlYWxpemUsIG9rIGkgbmVlZCB0byBkbyB4IG9uIHkgYm9hcmQgYnV0IHRoZW4geW91IGFsc28gbmVlZCB0byBmYWN0b3IgeW91ciBvcHBvbmVudCwgbGV0IHNheSB5b3VyIG9wcG9uZW50IGNiZXRzIDEwMCBwZXJjZW50IGFuZCBndG8gaXMgYy9yaW5nIGEgYm9hcmQgNDAgcGVyY2VudCBvZiB0aGUgdGltZSB5b3UgY2FuIHByb2JhYmx5IHVzZSB0aGF0IHN0cmF0ZWd5IHRvIGMvciB3aXRoIGEgbXVjaCBoaWdoZXIgZnJlcXVlbmN5IGFzIHlvdSBiZSBleHBsb2l0aW5nIHlvdXIgb3Bwb25lbnQgdGhhdCB3YXkuCkkgZW5kZWQgdXAgcXVpdHRpbmcgbXkgam9iIGFuZCBJIG1vdmVkIHRvIGEgZGlmZmVyZW50IHN0YXRlIGFuZCBsaXRlcmFsbHkgc3RhcnRlZCBvdmVyLiAKTXkgKGV4KWdpcmxmcmllbmQgYW5kIEkgd2hlcmUgaW4gV2lsZHdvb2QgYSBmZXcgd2Vla3MgYWdvIGZvciB0aGUgZm91cnRoIG9mIEp1bHkgd2Vla2VuZCwgd2Ugd2VyZSBjYW1waW5nIHdpdGggc29tZSBmcmllbmRzIGluIGF0IERyaWZ0d29vZCBqdXN0IGEgc2hvcnQgZHJpdmUgYXdheSBhbmQgd2Ugd2FudGVkIHRvIHNlZSBmaXJld29ya3MuIEkgaGFkIG5ldmVyIGJlZW4gdGhlcmUgYmVmb3JlLiBXZSBnb3QgdG8gdGhlIGJvYXJkd2FsayBhdCBqdXN0IGFib3V0IDEwcG0sIHRoZSBiZWFjaCB3YXMgImNsb3NlZCIgYnV0IHJlYWxseSB0aGVyZSB3YXMgbm8gb25lIG9yIGFueXRoaW5nIHN0b3BwaW5nIHVzIHNvIG9udG8gdGhlIGJlYWNoIHdlIHdlbnQuIApBIGp1ZGdlLCBhbiBlbnRyZXByZW5ldXIsIGEgY29udmljdGVkIGZlbG9uIG9yIHRocmVlLiAKSW4gdGhlIEdhcmRlbiBvZiB0aGUgT2dyZSBpcyBhYm91dCBzZXggYWRkaWN0aW9uIHRoZSB3YXkgdGhhdCBUaGUgUGVyZmVjdCBOYW5ueSBpcyBhYm91dCBhIG11cmRlcm91cyBudXJzZW1haWQuIEFzIHdpdGggaGVyIHNlY29uZCBub3ZlbCwgc2hlIGRyZXcgZnJvbSB0aGUgbmV3cyBmb3IgaW5zcGlyYXRpb24sIGJ1dCBhZ2Fpbiwgd2hhdCBhcHBlYWxlZCB0byBoZXIgYWJvdXQgdGhlIHN0b3J5IGlzIG5vdCB3aGF0IHlvdSBtaWdodCB0aGluay4gVGhlIGJvb2sgaXMgY2VydGFpbmx5IHNhbGFjaW91cyAgIGl0IGNvbmNlcm5zIGEgd29tYW4gd2hvc2UgZml4YXRpb24gb24gc2V4IGlzIG9ic2Vzc2l2ZSwgZmFuYXRpY2FsICAgYnV0IGxpa2UgVGhlIFBlcmZlY3QgTmFubnksIGl0IGJyYXplbmx5IHJlc2lzdHMgY29udmVudGlvbiwgcHJlZmVycmluZyB0byBiZSBvYnN0aW5hdGUgYW5kIGFnZ3Jlc3NpdmUgaW4gbGlldSBvZiBsaWtlYWJsZS4gIlNoZSB3YXMgdGhlIG9uZSB3aG8gYXNrZWQgZm9yIGl0LCIgU2xpbWFuaSB3cml0ZXMgb2YgdGhlIGhlcm8sIEFkbGUsIHRoZSBtb3JuaW5nIGFmdGVyIGFuIGFsbCBuaWdodCB0cnlzdC4gIlNoZSB0aG91Z2h0IHNoZSBjb3VsZCB0YWtlIGl0LiBTaGUgaXMgbWFycmllZCwgYSBtb3RoZXIsIHdpdGggYW1iaXRpb25zLCB2YWd1ZSBidXQgcmVzdGxlc3MsIHRvIGRvIG1vcmUsIGFueXRoaW5nIG1vcmUuIFNsaW1hbmkgd3JpdGVzIG9mIGhlciBjb250ZW1wdCBmb3Igd29yayBhbmQgZmFtaWx5LCBoZXIgcm9jayBkZXB0aCBhcGF0aHksIHdpdGggYSBjYW5kb3VyIHRoYXQgbXVzdCBtYWtlIGhlciByZWFsIGxpZmUgaHVzYmFuZCB3aW5jZS4gTW9yZSBwYWluZnVsIHRvIHJlYWQgb2YgdGhhbiBBZGxlJ3MgbWFzb2NoaXN0aWMgZXNjYXBhZGVzIHdpdGggbG92ZXJzIHVua25vd24gYXJlIHRoZSBlbmRsZXNzIG11bmRhbmUgZGF5cyBzaGUgZW5kdXJlcyBpbiB0aGUgY29tcGFueSBvZiB0aGUgdW5yZW1hcmthYmxlIHBlb3BsZSB3aG8gbG92ZSBoZXIsIHN1cmdlb24gcGFydG5lciBSaWNoYXJkIGFuZCBpbmZhbnQgc29uIEx1Y2llbi4KSWYgeW91J3ZlIG5ldmVyIGhhZCBhIFNhY3JlZCBTcG90IE1hc3NhZ2Ugb3IgTGluZ2FtIE1hc3NhZ2UgZG9uZSBiZWZvcmUsIHlvdSByZWFsbHkgRE8gbmVlZCB0byB0cnkgdGhpcy4gCk9uZSBpbXBvcnRhbnQgd2F5IHRvIGFzc2lzdCB5b3VyIGltbXVuZSBzeXN0ZW0gaXMgYSBseW1waGF0aWMgbWFzc2FnZSB0aGF0IHVzZXMgZXNzZW50aWFsIG9pbHMuIEx5bXBoIG5vZGVzIGFyZSBsb2NhdGVkIGFyb3VuZCB0aGUgYm9keSwgcGFydGljdWxhcmx5IGluIHRoZSB0aHJvYXQsIGdyb2luLCBicmVhc3RzLCBhbmQgdW5kZXIgdGhlIGFybXMuIFRoZXkgYXJlIGxpa2UgZmlsdGVyaW5nIGNlbnRlcnMgZm9yIGNsZWFuc2luZyB0aGUgYmxvb2QuIFRoZSBseW1waGF0aWMgc3lzdGVtIG1vdmVzIGNlbGx1bGFyIGZsdWlkIHRocm91Z2ggdGhlIHN5c3RlbSwgY2xlYW5zaW5nIHRoZSBib2R5IG9mIHdhc3RlIHByb2R1Y2VkIGJ5IHRoZSBib2R5J3MgbWV0YWJvbGljIGZ1bmN0aW9ucy4gTGVtb24sIHJvc2VtYXJ5LCBhbmQgZ3JhcGVmcnVpdCBhcmUgZXNwZWNpYWxseSBnb29kIGF0IHN0aW11bGF0aW5nIG1vdmVtZW50IGFuZCBzdXBwb3J0aW5nIHRoZSBjbGVhbnNpbmcgYWN0aW9uLiBBIGx5bXBoYXRpYyBtYXNzYWdlIGludm9sdmVzIGRlZXAgc3Ryb2tlcyB0aGF0IHdvcmsgZnJvbSB0aGUgZXh0cmVtaXRpZXMgdG93YXJkIHRoZSBoZWFydC4gWW91IGNhbiBldmVuIGRvIHRoaXMgb24geW91cnNlbGYuIFJ1YiB0aGUgb2lsIHVwIHlvdXIgYXJtcyB0byB0aGUgbHltcGggbm9kZXMgaW4geW91ciBhcm1waXRzLiBGcm9tIHRoZSBjZW50ZXIgb2YgeW91ciBjaGVzdCwgcnViIGFnYWluIHRvd2FyZCB0aGUgYXJtcGl0LCBhbmQgdGhlbiBkb3duIHlvdXIgbmVjay4gTWFzc2FnZSB5b3VyIGxlZ3MgZnJvbSB5b3VyIGZlZXQgdXAgdG8gdGhlIGdyb2luLiBPbiB0aGlzIHBhZ2UsIHlvdSB3aWxsIGZpbmQgYWxsIG9mIG91ciBoZXJiIHByb2ZpbGVzIGFuZCBpbnN0cnVjdGlvbnMgZm9yIHRyZWF0aW5nIG1lZGljYWwgcHJvYmxlbXMgd2l0aCBoZXJiYWwgcmVtZWRpZXMuClVubGljZW5zZWQgY29tbWVyY2lhbCB1c2Ugb2YgU2Nvb3AgQ29udGVudCBpcyBleHByZXNzbHkgcHJvaGliaXRlZCBieSBTY29vcCBTdWJzY3JpYmVyIFNlcnZpY2VzIExpbWl0ZWQgOjMuMy4xLiBDb21tZXJjaWFsIHVzZXJzIGluY2x1ZGUgY29tcGFuaWVzLCBvcmdhbmlzYXRpb25zLCBpbnN0aXR1dGlvbnMsIHBhcnRuZXJzaGlwcywgZ292ZXJubWVudCBkZXBhcnRtZW50cywgYXNzb2NpYXRpb25zIGFuZCBzb2NpZXRpZXMsIHRydXN0cyBhbmQgb3RoZXIgZW50aXRpZXMsIHdoZXRoZXIgcmVnaXN0ZXJlZCBvciB1bnJlZ2lzdGVyZWQsIHByaXZhdGUgb3IgcHVibGljLCBhbmQgd2hldGhlciBmb3IgcHJvZml0IG9yIG5vdCBmb3IgcHJvZml0IHRoYXQgdXNlIFNjb29wIENvbnRlbnQgaW4gYW55IHByb2Zlc3Npb25hbCBjYXBhY2l0eS4zLjMuMi4gClRoZXkgbGVhcm50IGZyb20gcG9rZXIgcGxheWVycyB0aGF0IHdlcmUgbW9yZSBhZHZhbmNlZCBhbmQgZGlzY292ZXJlZCBoaWRkZW4gdHJhaXRzIHRoYXQgbWFrZSB0aGVtIHRoZSBiZXN0LiBIZXJlIGFyZSB0aHJlZSBoaWRkZW4gdHJhaXRzIEkgaGF2ZSBkaXNjb3ZlcmVkIHRoYXQgc2VwYXJhdGVzIGFtYXRldXJzIGFuZCBwcm9mZXNzaW9uYWxzLiBUaGVzZSB0aHJlZSB0cmFpdHMgd2lsbCBkcmFtYXRpY2FsbHkgaW5jcmVhc2UgeW91ciBlYXJuaW5ncy4gCkEgZnJpZW5kIGludml0ZWQgeW91IHRvIGhhbmcgb3V0IGluIGEgZ3JvdXAsIGFuZCBnb3QgaXJyaXRhdGVkIHdoZW4geW91IGRpZCBqdXN0IHRoYXQuLiAKV2hlbiBDQiBzZW50IGhlciBib3lmcmllbmQgdG8gZ28gZ2V0IGl0LCB0aGUgUEYgQ2hhbmcncyBzdGFmZiBzYWlkIHRoYXQgbm8gb25lIHR1cm5lZCBpbiBhbnl0aGluZyBsaWtlIHRoYXQgYW5kIGxpa2UgdGhhdCB0aGUgU3RhcmJ1Y2tzIGdpZnQgY2FyZCBzaGUgcmVhbGx5IHdhbnRlZCB3YXMgbG9zdC4uIApTa2lsbHMgVG8gSW5zdHJ1Y3QgQ1BSIGluc3RydWN0b3JzIG5lZWQgZ29vZCBzcGVha2luZyBza2lsbHMuIFlvdSBtdXN0IHNwZWFrIGluIGEgY2xlYXIgYW5kIGxvdWQgdm9pY2UsIHNvIHlvdXIgc3R1ZGVudHMgY2FuIGhlYXIgYW5kIHVuZGVyc3RhbmQgeW91ciBpbnN0cnVjdGlvbnMuIFJlbmVlIFBoaWxsaXBzIGhhcyBiZWVuIGEgUmVkIENyb3NzIGNlcnRpZmllZCBDUFIgaW5zdHJ1Y3RvciBmb3IgbW9yZSB0aGFuIDIwIHllYXJzLiAKSVBHJ3MgV2ViZXIgU2hhbmR3aWNrIHRoaXMgd2VlayBhbm5vdW5jZWQgaXQncyBsYXVuY2hpbmcgVW5pdGVkIE1pbmRzLCBhIGdsb2JhbCBtYW5hZ2VtZW50IGNvbnN1bHRhbmN5LiBUaGUgcHJhY3RpY2UgY29tYmluZXMgdGhlIGZpcm0ncyAiRW1wbG95ZWUgRW5nYWdlbWVudCBDaGFuZ2UgTWFuYWdlbWVudCIgcHJhY3RpY2Ugd2l0aCBVbml0ZWQgTWluZHMgU3dlZGVuLiBVbml0ZWQgTWluZHMgd2lsbCBiZSBsZWQgYnkgS2F0ZSBCdWxsaW5nZXIsIGZvcm1lcmx5IHRoZSBnbG9iYWwgaGVhZCBvZiB0aGUgZW1wbG95ZWUgZW5nYWdlbWVudCBhbmQgY2hhbmdlIG1hbmFnZW1lbnQgcHJhY3RpY2UuClRleGFzIHJlcXVpcmVzIGFwcGxpY2FudHMgdG8gb2J0YWluIDUwMCBob3VycyBvZiB0cmFpbmluZy4gCkl0IHRyZWF0aW5nIHRyYW5zIHdvbWVuIGxpa2Ugc2hpdCwgYmVpbmcgc2VsZmlzaCBpbiBiZWQgYW5kIG9ubHkgYmVpbmcgaW50ZXJlc3RlZCBpbiBvdXIgcGVuaXMgdGhhdCBtYWtlcyBzb21lb25lIGEgY2hhc2VyLgpQb2NrZXQgQWNlcyBkb2VzIG5vdCBqdXN0IGNyZWF0ZSBzaG9ydCBmb3JtIGNvbnRlbnQ7IGVhY2ggZXBpc29kZSBvZiBpdHMgcG9wdWxhciB0aXRsZXMgICBMaXR0bGUgVGhpbmdzIG9yIEFkdWx0aW5nICAgaXMgYXBwcm94aW1hdGVseSAyNSBtaW51dGVzIGxvbmcuIApXZSd2ZSBhbHNvIHJvdW5kZWQgdXAgdGhlIGJlc3Qgb2YgRG91Z2xhcycgd3JpdGluZyBmcmVlbHkgYXZhaWxhYmxlIGFyb3VuZCB0aGUgd2ViLCBpbmNsdWRpbmcgYW4gYXJ0aWNsZSB3cml0dGVuIGZvciBUaGUgU3VuZGF5IFRpbWVzIGluIDE5OTkgdXJnaW5nIHBlb3BsZSB0byBlbWJyYWNlIHRoZSB3ZWIgZW50aXRsZWQgSG93IHRvIFN0b3AgV29ycnlpbmcgYW5kIExlYXJuIHRvIExvdmUgdGhlIEludGVybmV0LiBUaGVyZSBpcyBhbHNvLCBjb3VydGVzeSBvZiB0aGUgb2ZmaWNpYWwgRG91Z2xhcyBBZGFtcyB3ZWJzaXRlLCBBIFBlZGFudCdzIEd1aWRlIHRvIHRoZSBTaWduaWZpY2FudCBFdmVudHMgb2YgdGhlIE1pbGxlbm5pdW0gYW5kIGEgc2hvcnQgc3RvcnkgYmFzZWQgb24gYW4gb3JpZ2luYWwgc2tldGNoIHdyaXR0ZW4gYnkgQWRhbXMgYW5kIGhpcyBmcmllbmQsIE1vbnRoeSBQeXRob24gc3RhciBHcmFoYW0gQ2hhcG1hbiwgVGhlIFByaXZhdGUgTGlmZSBvZiBHZW5naGlzIEtoYW4uLiAKU29vbiBhZnRlciB0YWtpbmcgb2ZmaWNlLCBNci4gCkkgdGhpbmsgaXQgcmVhbGx5IHZlcnkgaW50ZXJlc3RpbmcgdGhhdCBhbHRob3VnaCB3ZSBkb24ga25vdyB0aGUgd2hvbGUgc3RvcnkgeW91IGhhdmUgdGhlIGZhdGhlciBwYWludGVkIGFzIHRoZSBiYWQgZ3V5LiBTb21ldGltZXMgdGhlIGtpZHMgYXJlIHRoZSBhc3Nob2xlLiBXaG8gdG8gc2F5IHRoYXQgdGhlIGV4IHdpZmUgZGlkbiBhbGllbmF0ZSB0aGUgZmF0aGVyIGFuZCBhZnRlciB5ZWFycyBvZiBiZWluZyB0cmVhdGVkIGxpa2Ugc2hpdCBieSBoaXMgZXggYW5kIGhpcyBzb24gd2hvIHRvb2sgaGlzIG1vbSBzaWRlIGhlIGdhdmUgdXAgb24gYSByZWxhdGlvbnNoaXA/V2l0aG91dCBhIHNpZ25pZmljYW50IGFtb3VudCBvZiBkZXRhaWwgZnJvbSBib3RoIHNpZGVzIHRoZXJlIG5vIHdheSB0byBrbm93IGlmIHRoZSBmYXRoZXIgcmVxdWVzdCB3YXMgYSBkaWNrIG1vdmUgb3Igbm90LiAKV2llIGdlbmF1IG1hbiBkYXMgdW1zZXR6ZW4gc29sbCwgaXN0IGFsbGVyZGluZ3Mgc2Nod2llcmlnLiAKSSBoYXZlIGxpdGVyYWxseSBiZWVuIGNhc3VhbGx5IGJyYWluc3Rvcm1pbmcgdGhpcyBleGFjdCBjb25jZXB0IGp1c3Qgd2l0aGluIG15IG93biBpbWFnaW5hdGlvbiBmb3IgMTUrIHllYXJzIGJ1dCBJIGRpZG4ndCBldmVyIGFjdHVhbGx5IGRvIGFueSByZXNlYXJjaCBpbnRvIGhvdyBvdGhlcnMgaGF2ZSBvdXRsaW5lcyBlbGVtZW50IHN5c3RlbXMuIEZvciBzbyBsb25nIEkgY291bGRuJ3QgcXVpdGUgZmlndXJlIG91dCBleGFjdGx5IGhvdyB0aGUgc2Vjb25kYXJ5IGVsZW1lbnRzIHNob3VsZCBmaXQgaW4sIG9yIHdoZXJlIGxpZ2h0IGFuZCBkYXJrIHdvdWxkIGdvLiBMb29raW5nIGF0IHlvdXJzLCBpdCdzIGxpa2UgeW91J3ZlIHVubG9ja2VkIHRoZSByZXN0IG9mIHRoZSBwaWN0dXJlIEkgY291bGRuJ3QgZmlndXJlIG91dCBvbiBteSBvd24uIEkgbG92ZSB0aGlzLCB0aGFuayB5b3Ugc28gbXVjaCBmb3Igc2hhcmluZy4KT0ssIGl0IG9idmlvdXMgd2h5IHRoZXkgbmVlZCB0aGF0IGJ1dCBhIHNvZnRlciB0eXBlIHdvdWxkIGJlIGJldHRlciBiZWNhdXNlIGl0IHNvdW5kcyByYXRoZXIgY2xpbmljYWwgdG8gaGVhciB0aGUgcnVzdGxpbmcgb2YgcGxhc3RpYyBiZWxvdyB5b3VyIGhlYWQgb3IgYm9keS44LzEwLiAKSSB3ZW50IHRvIHRoZSB1bml2ZXJzaXR5IG9mIENvbm5lY3RpY3V0IGluIFN0b3JycyBDVCwgbm90IHRvbyBmYXIgZnJvbSBzYW5keSBob29rIGF0IHRoZSB0aW1lIG9mIHRoZSBzaG9vdGluZy4gSXQgd2FzIGZpbmFscyB0aW1lIGFuZCBJIHdhcyBpbiBteSBkaW5pbmcgaGFsbCBzdHVkeWluZyBhbmQgaGF2aW5nIHNvbWUgYnJlYWtmYXN0LiBBIGdpcmwgd2Fsa2luZyBieSBub3RpY2VkIHRoZSBjb3ZlcmFnZSwgZHJvcHBlZCBoZXIgdHJheSBhbmQgY3J1bXBsZWQgdG8gdGhlIGdyb3VuZCwgY3J5aW5nIGFuZCBzY3JlYW1pbmcgIm15IHNpc3RlciBnb2VzIHRoZXJlLCBteSBzaXN0ZXIuIiBIZXIgZnJpZW5kcyBzY29vcGVkIGhlciB1cCBhbmQgcXVpY2tseSBodXJyaWVkIGhlciBvdXQgb2YgdGhlIGRpbmluZyBoYWxsLiAKVGhlIG1pY3Jvc2NvcGljIG1hbGFzc2V6aWEgZnVuZ3VzLCBhIG5vcm1hbCBpbmhhYml0YW50IG9uIGEgaGVhbHRoeSBodW1hbiBoZWFkLCBmZWVkcyBvbiB0aGUgZmF0dHkgb2lscyBzZWNyZXRlZCBieSBoYWlyIGZvbGxpY2xlcyBpbiB0aGUgc2NhbHAuIApJIHN0aWxsIHVzZSB0aGUgY2cgbWV0aG9kIGJlY2F1c2UgSSBsaWtlIHRoZSB3YXkgaXQgbWFrZXMgbXkgaGFpciBsb29rICAgYnV0IEkgZGVmaW5pdGVseSBnZXR0aW5nIGl0IHRvIGRvIHRoaW5ncyB0aGF0IGFyZSBub3QgZnVsbHkgbmF0dXJhbCwgbXVjaCBsaWtlIHN0cmFpZ2h0ZW5pbmcgaXQgaW4gbXkgb3Bpbmlvbi4uIApBbHNvIFRCRCBpcyB3aGF0IHBldCBwcm9qZWN0cyBtaWdodCBiZSBzaGFyZWQgd2l0aCB0aGUgcGVvcGxlIG9mIEJvdWxkZXIuIEdyZWVuIHNob3QgZG93biB0aGUgaWRlYSBvZiBhIGNpdHkgd2lkZSBkZXBsb3ltZW50IG9mIEdvb2dsZSBGaWJlciBvciBzZWxmIGRyaXZpbmcgY2FycywgYnV0IHNhaWQgc29tZSAiY29vbCBwcm9qZWN0cyIgd2VyZSBpbiB0aGUgd29ya3MgdGhhdCB0aGUgY29tcGFueSB3YXMgIm5vdCByZWFkeSB0byBhbm5vdW5jZS4iCkFsc28uIGkgd2FzIGdldHRpbmcgYmFjayBwYWluIHdoZW5ldmVyIGkgZGlkIHJhY2sgcHVsbHMgdW50aWwgaSBib3VnaHQgYW4gaW56ZXIgMTNtbSBiZWx0LiBJIGZpbmQgaSBjYW4gYnJhY2UgbXkgY29yZSBhIGxvdCBlYXNpZXIgd2l0aCB0aGUgYmVsdC4gaSBiYXNpY2FsbHkganVzdCBmbGV4IGFuZCBwdXNoIG15IGJlbGx5IGludG8gdGhlIGJlbHQuIElzIHRoaXMgbm9ybWFsPyBJIHdhcyBvbmx5IHJhY2sgcHVsbGluZyA0MCB0byA1MGtnIGJlZm9yZSBpIGJvdWdodCBhIGJlbHQuIHRvbmlnaHQgd2l0aCB0aGUgYmVsdCBpIGRpZCAxMTBrZy4KR28gaW4gYXJtZWQgd2l0aCB0aGUgY29uZmlkZW5jZSB0aGF0IHRoZXJlIGFyZSBvdGhlciBvcHBvcnR1bml0aWVzIG91dCB0aGVyZSBhbmQgeW91IGRvbid0IGhhdmUgdG8gcHV0IGFsbCB5b3VyIGVnZ3MgaW4gdGhpcyBiYXNrZXQuIApIZSB3YXMgcHJlZGVjZWFzZWQgYnkgaGlzIHdpZmUgb2YgNjAgeWVhcnMsIEV2ZWx5biBUb25raW4uIERvdWcgd2FzIGFuIGFtYXppbmcgRGFkIHRvIGhpcyBjaGlsZHJlbiBDYXJvbGUgKFRlcnJ5KSBLZXlzLCBDaHJpcyAoU2FuZHJhKSBMYW5nbWFpZCBhbmQgU2FuZGkgKFJpY2spIFZpbmNlbnQuIEhlIHdhcyB0aGUgcHJvdWQgR3JhbmRwYSBvZiBTaGFubm9uIEtleXMgKEdhcmV0aCBTaW1vbnMpIG9mIEVuZ2xhbmQsIEx5bmRzYXkgKExDRFIgQ2hyaXMpIEJvbHRvbiBvZiBDb2xvcmFkbywgVVNBOyBMYXVyZW4gS2V5cyBvZiBKYXBhbjsgQWltZWUgTGFuZ21haWQgQ2FsaWZvcm5pYSwgVVNBOyBhbmQgU2FyYWggKERhbikgR2xpY2ttYW4gb2YgT047IGFuZCBHcmVhdCBHcmFuZHBhIG9mIEV2aWUgQm9sdG9uIGFuZCBBbm5hYmVsIEdsaWNrbWFuLiAKQWxzbyAgIGxvbmcgdGVybSBzdG9yeS4gSSBkb24gbGlrZSBjYXNlcyBvZiBwZW9wbGUgImdvaW5nIG51dHMiIHdpdGhvdXQgYW55IGFjdHVhbCByZWFzb24uIGlmIHRoZXkgc3Vydml2ZWQgdGhhdCBsb25nLgpZZXN0ZXJkYXkgb25lIG9mIHRoZSBob21lbGVzcyBtZW4gd2hvIHN0YW5kcyBuZWFyIG15IGJ1aWxkaW5nIHllbGxlZCBhdCBtZSBmb3IgYmVpbmcgYSByaWNoIGJpdGNoLiAKQW5kIG5vdyB3ZXJlIG1ha2luZyBib296ZXkgZHJpbmtzIHNvIEkgZ2V0IHRvIHBsYXkgYXJvdW5kIHdpdGggY29mZmVlIGFuZCBib296ZS4gSSBsb3ZlIGl0LiAKTXkgM3lvIEJTIExPVkVTIHRoZW0uIAoiSSBhbSBwbGVhc2VkIHRoYXQgdGhlIGp1ZGdlIGFja25vd2xlZGdlZCBpbiBjb3VydCB0aGF0IEkgd2FzIGEgdHJ1dGhmdWwgd2l0bmVzcy4KVGhlbiBJJ2Qgbm90IGFsbG93IGhlciB0byBiZWhhdmUgaW4gdGhpcyBtYW5uZXIgdG8geW91LiBJdCdzIGxpa2UgaWYgeW91ciB0YWxraW5nIHRvIHlvdXIga2lkcywgdGhlIG1vbWVudCB0aGV5IGdldCBkaXNyZXNwZWN0ZnVsIHRoZSBjb252ZXJzYXRpb24gZW5kcyB1bnRpbCB0aGV5IGNhbG0gZG93biBhbmQgYXBvbG9naXNlIGFuZCBhcyB3aXRoIGNoaWxkcmVuLCBZT1UgSEFWRSBBIFVOSVRFRCBGUk9OVC4gCkknbSBhIGZhbiBvZiBCb2xseXdvb2QgYW5kIEhpbmRpIGxhbmd1YWdlIG1vdmllcywgc28gaXQncyBub3QgbGlrZSBJIGNhbWUgaW4gZXhwZWN0aW5nIGl0IHRvIGJlIGEgaGFwcHkgbW9kZXJuIHJvbSBjb20uIApOZXcgdG8gdGhpcyB5ZWFyIGV2ZW50cyB3aWxsIGJlIHRoZSBmb3VyIHdoZWVsZXIgcm9kZW8sIHdoZXJlIHBhcnRpY2lwYW50cyB3aWxsIGNvbXBldGUgaW4gYSB2YXJpZXR5IG9mIGV2ZW50cyBpbiB0aGUgcm9kZW8gYXJlbmEuIEV2ZW50cyBvZmZlcmVkIHdpbGwgaW5jbHVkZSB0aGUgbXVkIGJvZyBydW4sIGJsaW5kZm9sZCByYWNlIGFuZCBiYXJyZWwgcnVuLgpOZXh0IGluIHRoZSBvcmRlciBvZiBwb2tlciBoYW5kcyBpcyBhIFN0cmFpZ2h0LiBBIFN0cmFpZ2h0IGlzIGEgc2VyaWVzIG9mIGZpdmUgY29uc2VjdXRpdmUgY2FyZHMgb2YgYW55IHN1aXQsIGZvciBleGFtcGxlIDkgMTAgSiBRIEsuIApUaGVpciBvZmZlbnNlIHdhcyBzdGFsZSBhbmQgc3RhZ25hbnQgd2l0aCBGbGFjY28sIHRoZWlyIHJlY29yZCB3YXMgYmFkIGVub3VnaCB0aGF0IHRoZSBSYXZlbnMgb3duZXIgc3RhcnRlZCBwdWJsaWNseSBoaW50aW5nIGF0IG1vdmluZyBvbiBmcm9tIEhhcmJhdWdoLiAKVGhlIFJORyBpcyBjb25zdGFudGx5IGV2b2x2aW5nIHRoZSBnYW1lIGFuZCB0aGUgb3V0Y29tZSBpcyBmdW4uIApJdCBhIGp1ZGdlbWVudCBjYWxsLiAKUGFyY2UgcXVlLCBwb3VyIHF1ZSBjZXR0ZSBwZW5zZSBzb2l0IHZpdmFjZSwgaWwgbmUgZmF1dCBzaW1wbGVtZW50IHBhcyBzICBjZSBxdWUgZGUgZ3JhbmRzIGNoYW50cmVzIG9udCBkaXQgcGFyIGxlIHBhc3MuIFNvaXQsIGlsIGVzdCBib24gZGUgcHJlbmRyZSBjb25uYWlzc2FuY2UgZGUgbGV1cnMgcGFyb2xlcyBzaSBkc3V0ZXMgcXUgcHVpc3NlbnQgcGFyKHRyZSkuIApXaGVuIGNhc3RpbmcgdGhlIHNob3csIHRoZSBwcm9kdWNlcnMgc291Z2h0IGFuIGludGVyZXN0aW5nIGRpY2hvdG9teSBiZXR3ZWVuIHRoZSB0d28gY29tcGV0aXRvcnMuIFNtaXRoIHdhc24ndCBmb3VuZCB0aHJvdWdoIHRoZSBhZCAgIHRoZSBwcm9kdWNlcnMgY2FsbGVkIGEgaml1aml0c3Ugc2Nob29sIGxvb2tpbmcgZm9yIE1NQSBmaWdodGVycywgYW5kIGl0IGhhcHBlbmVkIHRvIGJlIHRoZSBzY2hvb2wgU21pdGggd29ya2VkIGF0LiBIZSB3YXMgYXZhaWxhYmxlIGFuZCBzZXQgdXAgYSBwaG9uZSBpbnRlcnZpZXcgd2l0aCBzaG93IGNyZWF0b3IgQW15IFJhcHAuIApXaGVuIGEgaW5jb2luZyBtZXNzYWdlIGZhaWxzIHNjaGVtYSB2YWxpZGF0aW9uIGluIHRoZSBkaXNhc3NlbWJsZSBzdGFnZSBvZiB0aGUgcmVjZWl2ZSBwaXBlbGluZSwgaXQgdGhyb3dzIG9uIGV2ZW50bG9nIGxpa2UKQXMgc29tZW9uZSB3aG8gd29ya3MgaW4gYSByZXN0YXVyYW50LCB5b3Ugc2hvdWxkIHRyZWF0IGV2ZXJ5IGd1ZXN0IHdpdGggY2FyZS4gU2FtZSBnb2VzIGZvciBkaWV0IHNvZGEgdnMgcmVndWxhciwgZGVjYWYgY29mZmVlIHZzIHJlZ3VsYXIuIApTbyBzdXJlLCBpdCBhbGwgdWx0aW1hdGVseSBzZXJ2ZWQgc29tZSBraW5kIG9mIHB1cnBvc2UsIGJ1dCB5b3UgY291bGQganVzdCBhcyBlYXNpbHkgaGF2ZSBvdXRzb3VyY2VkIHRoZSBqb3VybmFsIHdyaXRpbmcgdG8gaGVhcnRicm9rZW4gdGVlbmFnZSBnaXJscyBhbmQgY2FsbGVkIGl0IGEgZGF5LiBNb3N0IGZhbnMgd291bGQgbmV2ZXIgaGF2ZSBub3RpY2VkIHRoZSBkaWZmZXJlbmNlLiBJdCB0b29rIGEgdHJ1bHkgZGVkaWNhdGVkIGFydGlzYW4gdG8gbG9vayBhbGwgdGhpcyBjcmF6eSBpbiB0aGUgZXllIGFuZCBzYXksICJJIHdhbnQgeW91IGluc2lkZSBtZS4iLiAKQykgSm9uYXRoYW4gQmFsZHdpbiBpcyBmaWxtaW5nIHRoZSBjb25mZXJlbmNlIHRoaXMgeWVhciB3aXRoIHRoZSBzdXBwb3J0IG9mIGhpcyB3aWZlIEhlaWRpLgpPcGVuIHRoZSBicm93c2VyIGFuZCBzaWduIGluIG9uIG15c3BhY2UuIApMZWdhbCBzZWNyZXRhcmllcyBuZWVkIHRvIGJlIGFibGUgdG8gcmVhZCBhbmQgc3ludGhlc2l6ZSBtYXRlcmlhbCB0aGV5IHJlY2VpdmUgZnJvbSB0aGVpciBzdXBlcnZpc29ycyBhbmQgbWFuYWdlci4gUmVjb3JkcyBjZW50ZXIgZW1wbG95ZWVzIHNob3VsZCBiZSBjYXBhYmxlIG9mIGFuYWx5emluZyBjYXNlIGZpbGVzIHRvIGRldGVybWluZSBob3cgYmVzdCB0byBtYWludGFpbiBjbGllbnQgaW5mb3JtYXRpb24gYW5kIGxlZ2FsIG1hdGVyaWFscy4gVGhleSBzaG91bGQgYmUgYWRlcHQgYXQgY2xhc3NpZnlpbmcgbGlicmFyeSBob2xkaW5ncyBhbmQgYW5hbHl6aW5nIHBvdGVudGlhbCBjb25mbGljdHMgcmVsYXRlZCB0byB0aGUgcmVwcmVzZW50YXRpb24gb2YgY2xpZW50cy4uIApBZnRlciBhbGwsIEN5cHJ1cyBpcyBhIEV1cm9ncm91cCBjbGllbnQgc3RhdGUgcmlnaHQgbm93LCBhbmQgaGFzIHdvdW5kIHVwIGluIHRoaXMgc29ycnkgcGxhY2UgYXMgYSByZXN1bHQuIElmIGl0IHBvcHMgdGhlIHJlZCBwaWxsLCBpdCB3aWxsIGhhdmUgZXNzZW50aWFsbHkgbm8gYXV0b25vbXkgZm9yIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmUgaW4gYW55IGNhc2UuIEl0J3MgYWxzbyBlYXN5IHRvIGltYWdpbmUgdGhhdCBQdXRpbidzIFJ1c3NpYSB2aWV3cyBpdHMgcmVsYXRpb25zIHdpdGggdGhlIEVVIGFzIHNvbWV0aGluZyBvZiBhIHplcm8gc3VtIGdhbWUuIApPVEYgeW91ciBiZXQgaXMgZmluZSBpIGxpa2UgdGhlIGxlYWQgYW5kIHRoZSBhbW91bnQuIApSZWFwZXIgaXMgdGhlIGxlYWRlciBvZiBMb3MgTXVlcnRvcywgb3IsIHdhcyBhbnl3YXksIGFuZCBoaXMgTWFyaWFjaGkgc3VpdCB3YXMgaGlzIExvcyBNdWVydG9zIG91dGZpdC4gCldobyBpcyB0aGUgZ3JlYXRlc3QgbWFsZSBsYXduIHRlbm5pcyBwbGF5ZXIgZXZlciBpbiBoaXN0b3J5PwpJcyB0aGVyZSBhIHJpZ2h0IGFuZCBhIHdyb25nPyBJZiBzbyB0aGVuIHRoZXJlIG11c3QgYmUgc29tZXRoaW5nIHRvIGJ1aWxkIHRoYXQgcmlnaHQgb3Igd3Jvbmcgb24uIApUbyBmaW5kIHRoaXMgcGFydGljdWxhciBwbGFjZSwgSSBjaGVja2VkIG91dCByZXZpZXdzIG9uIGEgc2l0ZSBJIGZvdW5kIHVzaW5nIEdvb2dsZS5QcmlvciB0byB1c2luZyByYXRpbmcgc2l0ZXMsIGl0IHdhcyBqdXN0IHRyaWFsIGFuZCBlcnJvci4gCklmIHlvdSBzaWduIHVwIGFuZCBzdGFydCBiZXR0aW5nIHdpdGggVGl0YW4gQmV0IHRvZGF5IHlvdSB3aWxsIGJlIHJld2FyZGVkIHdpdGggLy8kMTAgaW4gZnJlZSBiZXRzLiAxOCsuIAo3IFNlcCAyMDE3IC4gCkZhbnMgb2Ygc3RhbmQgdXAgY29tZWR5ICAgYW5kIGZyZWUgYmVlciAgIHNob3VsZCBib29rIHRpY2tldHMgdG8gb25lIG9mIHRoZXNlIEdvb2QgR29vZCBDb21lZHkgc2hvd3MuIFNpeCBjb21lZGlhbnMgd2lsbCBkZWxpdmVyIGFuIGhvdXIgb2YgbGF1Z2hzIGZvciBzaW5nbGVzLCBjb3VwbGVzLCBhbmQgYmV5b25kLiAKVGhlIEIgMjYgc2tpbiB3YXMgYW4gYWx1bWludW0gYWxsb3kgc2FuZHdpY2ggd3JhcHBlZCBhcm91bmQgYSBob25leWNvbWIgc3RydWN0dXJlLiBIZWFkIE1hcmF1ZGVyIHdhcyB0aGUgZmlyc3QgV1dJSSBhaXJjcmFmdCB0byB1c2UgcGxhc3RpYyBvbiBhIGxhcmdlIHNjYWxlLgpJbiBKdW5lIDIwMDggb24gYmVoYWxmIG9mIGZvdXIgbG9jYWwgY2xlcmd5ICAgdGhlIFJldi4gRHIuIFRob21hcyBBLiBTdW1tZXJzLCBSYWJiaSBTYW5mb3JkIFQuIE1hcmN1cywgdGhlIFJldi4gRHIuIFJvYmVydCBNLiBLbmlnaHQgYW5kIHRoZSBSZXYuIERyLiBOZWFsIEpvbmVzIGFzIHdlbGwgYXMgdGhlIEhpbmR1IEFtZXJpY2FuIEZvdW5kYXRpb24gYW5kIHRoZSBBbWVyaWNhbiBBcmFiIEFudGkgRGlzY3JpbWluYXRpb24gQ29tbWl0dGVlLgpXaGF0IGRvIHlvdXIgZnJpZW5kcyBhbmQgZmFtaWx5IHRoaW5rIG9mIHlvdXIgbG92ZXI/IFJlYWN0IHRvIGVhY2ggaW4gdGhlIHNhbWUgbWFubmVyICAgYSBib3JpbmcgdGhhbmtzLiAKICBBY3RlcyBjb2xsZWN0aWZzIDogaWxzIHNlIGNhcmFjdHJpc2VudCBwYXIgdW5lIHBsdXJhbGl0IGRlIGRjbGFyYXRpb25zIGRlIHZvbG9udHMgY29uY29yZGFudGVzIGVuZ2FnZXMgZGFucyBsYSByYWxpc2F0aW9uIGQndW5lIG9wcmF0aW9uIGp1cmlkaXF1ZSBxdWkgZXN0IGducmFsZW1lbnQgZGUgZHJvaXQgcHVibGljIChleC4gOiB2b3RlIGQndW5lIGxvaSwgbGVjdGlvbiBkJ3VuIHBhcmxlbWVudGFpcmUsIHJmcmVuZHVtKSwgbWFpcyBxdWkgcGV1dCB0cmUgYXVzc2kgZGUgZHJvaXQgcHJpdiAoZXguIApJdCBjYW4gYmUgcHV0IGxpa2UgdGhpczogdGhlIENhcHMgYXJlIGluIGEgZGVlcCwgZGVlcCBob2xlLCBhbmQgdGhleSBoYXZlIGEgc2hvdmVsLiBUaGV5IGNhbiBlaXRoZXIgZGlnIHRoZW1zZWx2ZXMgb3V0LCBvciBwdWxsIGluIHRoZSBkaXJ0IG9uIHRoZWlyIGhlYWRzIGFuZCBidXJ5IGEgc2Vhc29uIHRoYXQgaGFzIHdoaXBzYXdlZCBiZXR3ZWVuIGJyaWxsaWFudCBwZXJmb3JtYW5jZXMgYW5kIGJhZmZsaW5nbHkgYmFkIG9uZXMuCkhlIGRpZCBpdCBmb3IgbmVhcmx5IGEgbWlsbGlvbiBkb2xsYXJzLiAKQnkgdGhlIHRpbWUgdGhlIHRyYWRpbmcgc2Vzc2lvbiBjbG9zZWQgb24gVGh1cnNkYXksIHdoZW4gR29sZG1hbiBzb2xkLCB0aGUgc3RvY2sgd2FzIGRvd24gdG8gVVMkNzguNzUgICBjb2xsYXBzaW5nIHVuZGVyIHRoZSBwcmVzc3VyZSBvZiBhdHRhY2tzIG9uIGl0cyBidXNpbmVzcyBtb2RlbCBhbmQgdGhlIHJldmVsYXRpb24gb2YgaXRzIGNsb3NlIHJlbGF0aW9uc2hpcCB3aXRoIGEgc2hhZHkgc3BlY2lhbHR5IHBoYXJtYWN5IGNhbGxlZCBQaGlsaWRvci4gU2Vucy4gQ2xhaXJlIE1jQ2Fza2lsbCAoRCBNaXNzb3VyaSkgYW5kIFN1c2FuIENvbGxpbnMgKFIgTWFpbmUpIGFubm91bmNlZCB0aGF0IHRoZXkgYXJlIGxhdW5jaGluZyBhIGJpcGFydGlzYW4gaW52ZXN0aWdhdGlvbiBpbnRvIFZhbGVhbnQgYW5kIG90aGVyIHBoYXJtYWNldXRpY2FsIGZpcm1zIGZvciBwcmljZSBnb3VnaW5nLi4gClBhcnQgb2YgYSBsb25nIHNlcmllcyBvbiBCbGFuaywgRW1wdHksIGFuZCBNaXNzaW5nIFRoaW5ncwpKb2huIEN5bm4gd29uIHRoZSBzZXJpZXMgbWFycXVlZSBubyBsaW1pdCBUZXhhcyBIb2xkIG1haW4gZXZlbnQgU3VuZGF5IGluIExhcyBWZWdhcywgc3Vycm91bmRlZCBieSBhIGNoZWVyaW5nIGNyb3dkIHRoYXQgaW5jbHVkZWQgaGlzIGRhZC4gSGUgZWxpbWluYXRlZCBUb255IE1pbGVzIG9uIHRoZSA0NDJ0aCBoYW5kIG9mIHRoZSBmaW5hbCB0YWJsZSwgYWZ0ZXIgcGxheWluZyAxOTkgaGFuZHMganVzdCBhZ2FpbnN0IGVhY2ggb3RoZXIgd2l0aCBicmlja3Mgb2YgJDEwMCBiaWxscyBhbmQgYSBnb2xkIGJyYWNlbGV0IGF0IHRoZSB0YWJsZS4KT25jZSBoYWQgYSBtaWRkbGUgYWdlZCB3aGl0ZSB3b21hbiBhc2sgd2hhdCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBmbGF2b3JzIG9mIGxhdHRlcyB3ZXJlLiAKRXZlbiB1bnNvbGQgb24gdGhlIHNoZWx2ZXMgeW91IG9mdGVuIGZpbmQgdGhlbSB3aXRoIHNwbGl0IGFuZCBjb2xsYXBzZWQgY29ybmVycy4gUXVhbGl0eSBpcyAyLzUgYW5kIHRoYXQgYSBiaXQgZ2VuZXJvdXMuLiAKRGFuIFdlc3QsIHRoZSBzdGF0ZSBjb21tYW5kZXIgb2YgdGhlIERlcGFydG1lbnQgb2YgVGV4YXMgVkZXLCBzYXlzIHRoZWlyIHN3ZWVwc3Rha2VzIGhhdmVuJ3QgYmVlbiB3ZWxjb21lIGV2ZXJ5d2hlcmUgZWl0aGVyLgpTaW5jZSB0aGVuIHRoZSBzcGVlZHMgaGF2ZSBiZWVuIGZpbmUuIApJdCBpcyBpbXBvcnRhbnQgdG8ga25vdyBob3cgZWZmZWN0aXZlIGFuZCBlZmZpY2llbnQgdGhlIHBva2VyIHNlcnZpY2Ugb2Ygb25lIHNpdGUgZ29lcy4gWW91IHdpbGwgYWxzbyBrbm93IGhvdyBiaWcgYW5kIGdyZWF0IGEgcG9rZXIgc2l0ZSBpcyBpZiB0aGUgc2VydmljZSBvcGVyYXRvcnMgYW5zd2VyIGluIGEgdGltZWx5IGFuZCByZXNwZWN0ZnVsIG1hbm5lci4gQ3VzdG9tZXIgc2VydmljZSBpcyBpbXBvcnRhbnQuIApCdXQgaWYgeW91IHVuZGVyc3RhbmQgdGhlIGN1bHR1cmFsIGZvcmNlcyB0aGF0IGFyZSBhdCBwbGF5IHVuZGVyc2VydmVkIGF1ZGllbmNlLCB0aGUgcmFwaWRseSBleHBhbmRpbmcgaW5mbHVlbmNlIG9mIEFzaWFuIGN1bHR1cmUgYW5kIHRoZSBwb3dlciBvZiB0aGUgZ2xvYmFsIGJveCBvZmZpY2UsIHRoaXMgJDMwIG1pbGxpb24gbW92aWUgZG9lc24gc2VlbSBsaWtlIG11Y2ggb2YgYSBnYW1ibGUgYXQgYWxsLiBJbiBmYWN0LCBpdCBzZWVtcyBkZXN0aW5lZCB0byBiZSBhIGhpdC4gCkl0IGlzIGNhbGxlZCAiVGhlIEZhbWUgTW9uc3RlciIsIG9yIHNob3J0bHkga25vd24gYXMgIlRoZSBGYW1lIi4gCiJNYWpvcml0eSIgaXMgYSB3ZWxsIGRlZmluZWQgd29yZC4gSXQgbWVhbnMgaGF2aW5nIG1vcmUgb2YgIm9uZSB0aGluZyIgdGhhbiBhbGwgdGhlICJvdGhlciB0aGluZ3MiIGNvbWJpbmVkLiA1NiBtaWxsaW9uIGlzIG5vdCBtb3JlIHRoYW4gMTQ0IG1pbGxpb24uIFdoZW4geW91IHNheSBhICJtYWpvcml0eSBvZiBCcmF6aWxpYW5zIiwgeW91IGhhdmUgdG8gY29uc2lkZXIgYWxsIHRoZSBCcmF6aWxpYW5zICAgZXZlbiB0aGUgb25lcyB3aG8gY2Fubm90IHZvdGUgKGNoaWxkcmVuL2VsZGVybHkvaWxsaXRlcmF0ZSksIHRob3NlIHdobyBhYnN0YWluZWQsIHRob3NlIHdobyBzcG9pbGVkIHRoZWlyIHZvdGVzLiBBbGwgdGhvc2UgcGVvcGxlIGFyZSBCcmF6aWxpYW5zLgpTb21lIHBvdGVudGlhbCB0aGVyYXBpZXMgYXJlIHN0aWxsIGJlaW5nIGV2YWx1YXRlZCBmb3Igc2FmZXR5IGFuZCBlZmZlY3RpdmVuZXNzLCB3aGlsZSBvdGhlcnMgaGF2ZW4ndCBiZWVuIHNlcmlvdXNseSBldmFsdWF0ZWQgYXQgYWxsLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIGlzIGN1cnJlbnRseSBmaW5lIHR1bmluZyBpdHMgZ3VpZGVsaW5lcyBmb3IgY29zbWVjZXV0aWNhbHMsIHByb2R1Y3RzIG1hcmtldGVkIGFzIGNvc21ldGljIHBoYXJtYWNldXRpY2Fscy4gU29tZSBjZWxsdWxpdGUgcHJlcGFyYXRpb25zIGFuZCB0cmVhdG1lbnRzIGZhbGwgaW50byB0aGlzIGNhdGVnb3J5LiAKIkRvbid0IGxldCB0aGUgcXVlc3Rpb24sICdXaGF0IGRvIHlvdSBzZWUgeW91cnNlbGYgZG9pbmcgaW4gZml2ZSB5ZWFycycgc3RyZXNzIHlvdSBvdXQuIApTaGFkb3c3NzYgICA1IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvClJlbWVkaWFsIG1hc3NhZ2UgaGVscHMgcGVvcGxlIGRlYWwgd2l0aCBjaHJvbmljIHBhaW4gYW5kIG11c2NsZSB0ZW5zaW9uLiBUaGUgdGVjaG5pcXVlcyB1c2VkIHJlcHJlc2VudCBhIHdheSBvZiByZWxlYXNpbmcgdHJpZ2dlciBwb2ludHMgYW5kIGJyZWFraW5nIGRvd24gYWRoZXNpb25zLiBJdCByZWR1Y2VzIHRoZSBtdXNjbGUgdGVuc2lvbiBhbmQgaXQgaGVscHMgYXQgaW5jcmVhc2luZyB0aGUgam9pbnQgbW9iaWxpdHkuIApBcyBhIG1lY2hhbmljIEkgcmVhbGx5IGhhdmUgY29tZSB0byBhcHByZWNpYXRlIHRoZSBhYnN1cmQgYW1vdW50IG9mIHByb2dyZXNzIHRoYXQgaGFzIGJlZW4gbWFkZSBmdW5jdGlvbmFsbHksIG9mdGVuIHdpdGhpbiB0aGUgc3BhY2Ugb2YgYSBjb3VwbGUgeWVhcnMgd2hlcmUgYSBtYXNzaXZlIHBhcnQgb2YgaG93IGEgYmlrZSB3b3JrcyBpcyBjb21wbGV0ZWx5IHJlZGVzaWduZWQuLiAKTHVkZmx1IHUKSXQgdGhlIGVkZ2Ugb2YgdGhlIHdvcmxkIGJ1dCBpdCBmZWVscyBsaWtlIGEgd2hvbGUgZGlmZmVyZW50IG9uZS5JZiB5b3UgZG8gbWFrZSBpdCB1cCBiZSBzdXJlIHRvIHByZXBhcmUgdGhvcm91Z2hseSBhbmQga25vdyBob3cgdG8gZHJpdmUgb24gZ3JhdmVsIHJvYWRzIHRoYXQgc2hpZnQgYW5kIGNoYW5nZSBkYWlseS4gV2Ugd2VyZSBsdWNreSBlbm91Z2ggdG8gaGF2ZSBhIDR4NCB3aXRoIHdpbnRlciB0aXJlcywgbGlnaHQgYmFycywgYW5kIGVub3VnaCB3ZWlnaHQgZG93biBvbiBpdCB0byBub3QgaGF2ZSBhbnkgaXNzdWVzLCBidXQgb24gb3VyIHdheSBiYWNrIHdlIHBhc3NlZCBhbiBvdmVydHVybmVkIFJWIHRoYXQgaGFkIGJlZW4ganVzdCByaXBwZWQgdG8gc2hyZWRzLiAKUGFydCBJOiBNZW50YWwgQWJpbGl0eSBUZXN0IChNQVQpLCBhbmQgLiBUaG9zZSB3aG8gZ2V0IHF1YWxpZmllZCBhbiBlbnRlciB0aGUgU2Vjb25kIExldmVsIE5hdGlvbmFsIEV4YW0uIApTbyBubywgdGhpbmtpbmcgd2Ugc2hvdWxkIGhhdmUgaXQgZG9lc24gbWVhbiB0aGlua2luZyB3ZSBzaG91bGQgZmlyZSBpdCwgaXQganVzdCBtZWFucyBsZXR0aW5nIG90aGVyIHBlb3BsZSB0aGluayB0aGVyZSBlbm91Z2ggb2YgYSBjaGFuY2UgdGhhdCB3ZSB3b3VsZCB0aGF0IHRoZXkgZG9uIGZ1Y2sgd2l0aCB1cy4gCllvdSBnZXQgdGhlIHBpY3R1cmUuIApJbHMgb250IGNlY2kgZW4gY29tbXVuIHF1J2lscyBzZSBib3VjaGVudCBsZXMgb3JlaWxsZXMgcG91ciBuZSBwYXMgZW50ZW5kcmUgbGEgYnRpc2UgZGNoYW5lIGV0IGxhIGd1ZXVsZXJpZSBicnV5YW50ZSBkdSBib3VyZ2VvaXMgZG1vY3JhdGUuLiAKTm8gdGhpcyBzdHVmZiByZWFsbHkgZXhpc3RzIGFuZCBpcyBvdXQgdGhlcmUuIApQbGFjZSBhIGN1c2hpb24gb3Igc29mdCBqYWNrZXQgKHNvbWV0aGluZyBzb2Z0IGFuZCBmbGF0KSB1bmRlciB0aGUgcGVyc29uJ3MgaGVhZCB0byBrZWVwIGl0IGluY2xpbmVkIHRvIHByb3RlY3QgdGhlIGhlYWQgZHVyaW5nIHRoZSBzaGFraW5nIHBoYXNlIG9mIHRoZSBzZWl6dXJlLgpJbCByZXNwb25zYWJpbGUgZGVsbCdpbml6aWF0aXZhIHNpIGZhIGNhcmljbywgcHJldmlhIGFwcHJvdmF6aW9uZSBkZWwgRGlyZXR0aXZvLCBkaSBzdGFiaWxpcmUgdGFsZSBxdW90YSBlIGxlIG1vZGFsaXQgZGkgcGFydGVjaXBhemlvbmUuClRoZSA0IG1haW4gdHlwZXMgb2YgcG9rZXIgcGxheWluZyBzdHlsZXMgYXJlOgpQcm9mZXNzaW9uYWwgcGV0IHNpdHRlcnMgY2FyZSBmb3IgcGV0cyBpbiB0aGUgcGV0cycgb3duIGhvbWVzLCBnaXZpbmcgdGhlbSB3YXRlciwgZm9vZCwgYW5kIGF0dGVudGlvbiBvbmNlIG9yIHR3aWNlIGRhaWx5IGZvciBhYm91dCBhbiBob3VyIGF0IGEgdGltZSB3aGlsZSB0aGVpciBvd25lcnMgYXJlIGF3YXkuIEhvbGlkYXlzIGFuZCBzdW1tZXIgbW9udGhzIGFyZSB0aGUgYnVzaWVzdCBzZWFzb25zLCB3aXRoIGVhcmx5IG1vcm5pbmcgYW5kIGxhdGUgZXZlbmluZyBob3VycyB0eXBpY2FsIGZvciB0aGVzZSBwZXQgam9icywgc2F5cyBBbGkgTydDb25ub3IsIGEgcGV0IHNpdHRlciBhbmQgb3duZXIgb2YgSW5rbydzIEV4ZW1wbGFyeSBQZXQgQ2FyZSBTZXJ2aWNlcyBpbiBOYXBsZXMsIEZsYS4gClZpbGxhZ2UgcGVvcGxlIGFyZSBub3QgdHlwaWNhbGx5IHdvcnJpZWQgYWJvdXQgdGhpcywgc2VlaW5nIGl0IGFzIG5vcm1hbCBhbmQgb3JkaW5hcnkgdGhhdCBwZW9wbGUgc2hvdWxkIGZlYXIgdGhlaXIgZ29kcy4uIApCZWZvcmUgaGltIHBvcHVsYXJpemluZyB0aGUgdGVybSwgdmVyeSBmZXcgcGVvcGxlIGluIHRoZSBVUyBrbmV3IHRoYXQgd29yZCwgYW5kIGFmdGVyd2FyZHMgdGhleSBvbmx5IGtuZXcgb2YgaXQgdGhyb3VnaCBBbnNsaW5nZXJzIHJhY2lzdCB1c2FnZSBvZiB0aGUgd29yZCB0aHJvdWdoIGhpcyBwcm9wYWdhbmRhLCBjcmVhdGluZyBhIHN0cm9uZyBhc3NvY2lhdGlvbiB0aGF0IHN0aWxsIGV4aXN0cyB0byB0aGlzIGRheSBhbmQgaGFzIGNvbnRpbnVlZCB0byBiZSBwcm9wYWdhdGVkIHRocm91Z2ggdGhlIHdhciBvbiBkcnVncy4uIApUaGVyZSB3ZXJlIHNvbWUgcmVwYWlycyB0aGF0IG5lZWRlZCB0byBiZSBkb25lIGFuZCB0aGUgc2VsbGVyIGFuZCByZWFsdG9ycyBwYWlkIHRvIGhhdmUgdGhlbSBjb21wbGV0ZSBzbyB0aGUgZGVhbCBjb3VsZCBnZXQgZG9uZS4gCllvdSB3b3VsZG4ndCBldmVuIGFja25vd2xlZGdlIGZvciBhIHNlY29uZCB0byBidXkgaXQgLi4gCkNoYXJnZXJzIGhhdmUgYmVlbiBpbnN0YWxsZWQgZm9yIFRlc2xhIGVsZWN0cmljIGNhcnMsIGFuZCB0aGVyZSBpcyB1c3VhbGx5IGEgbGluZSB0byB1c2UgdGhlbS4gClRoZSBhY2Ugb2Ygc3BhZGVzIGNhcmQgd2FzIGFsc28gdXNlZCBkdXJpbmcgd2FycywgbW9zdCBjb21tb25seSBpbiBXb3JsZCBXYXIgSUkgYW5kIHRoZSBWaWV0bmFtIHdhci4gRHVyaW5nIFdXSUksIEFtZXJpY2FuIHNvbGRpZXJzIHdvdWxkIHBhaW50IGl0IG9uIHRoZWlyIGhlbG1ldCBmb3IgZ29vZCBsdWNrLiBJbiBmYWN0LCBhbGwgZm91ciBjYXJkIHN1aXRzIHdlcmUgdXNlZCB0byBoZWxwIGlkZW50aWZ5IHRoZSBBbWVyaWNhbiBzb2xkaWVycywgaW5jbHVkaW5nIHRoZSBkaWFtb25kLCBjbHViLCBhbmQgaGVhcnQuIER1cmluZyB0aGUgVmlldG5hbSB3YXIsIGl0IHdhcyB1c2VkIHRvIHN0cmlrZSBmZWFyIGluIHRoZSBWaWV0bmFtZXNlLiBJdCB3YXNuJ3QgdW5jb21tb24gZm9yIGFjZSBvZiBzcGFkZXMgY2FyZHMgdG8gYmUgcGxhY2VkIG9uIGRlcGFydGVkIFZpZXRuYW1lc2Ugc29sZGllcnMuIEluIHNvbWUgY2FzZXMsIHRob3VzYW5kcyBvZiBjYXJkcyB3b3VsZCBiZSBwbGFjZWQgaW4gZmllbGRzIGZvciB0aGUgVmlldG5hbWVzZSwgdGhlIGFjZSBvZiBzcGFkZXMgc3ltYm9saXplZCAuIEFzIHlvdSBjYW4gc2VlLCBpdCB3YXMgdXNlZCBhcyBhIHBzeWNob2xvZ2ljYWwgd2VhcG9uLgpHcmFudGVkLiBTaW1pbGFyIHRvIEluc2lkZSBPdXQsIGl0IGRvZXMgbm90IHBvcnRyYXkgdGhlIG1pbmRzIG9mIEF1dGlzdGljIHBlb3BsZSBjb3JyZWN0bHksIGJ1dCByYXRoZXIgaW4gYSBzaW1wbGlmaWVkIG1hbm5lciBpbiBvcmRlciB0byB0ZWxsIGEgc3RvcnkgdGhhdCBpcyBhcHBlYWxpbmcgdG8gdGhlIG1hc3Nlcy4gCk5leHQsIHB1c2ggdGhlIDIgc3RhY2tzIHRvZ2V0aGVyIHdoaWxlIGxpZnRpbmcgdXAgb24gdGhlIGNoaXBzIHdpdGggeW91ciBtaWRkbGUgZmluZ2VyIHNvIHRoZSBjaGlwcyBsYWNlIHRvZ2V0aGVyIGFuZCBmb3JtIGEgc3RhY2sgb2YgNi4gV2hlbiB5b3UncmUgZmluaXNoZWQsIHNwbGl0IHRoZSBzdGFjayBhbmQgcmVwZWF0LiBUbyBsZWFybiBob3cgdG8gc2h1ZmZsZSAzIHN0YWNrcyBvZiBwb2tlciBjaGlwcywgc2Nyb2xsIGRvd24hLiAKQWxsVGh5U2luc1JlbWVtYmVyZWQgIDE3NyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCklmIHlvdSBhbHJlYWR5IHN0aW11bGF0aW5nIGFuZCBjaGFsbGVuZ2luZyB5b3Vyc2VsZiwgYnJhaW4gdHJhaW5pbmcgaXMgdW5saWtlbHkgdG8geWllbGQgcmVsaWFibGUsIHN1c3RhaW5hYmxlIGltcHJvdmVtZW50cywgb3IgZ2VuZXJhbGl6YXRpb24gdG8gZGFpbHkgZnVuY3Rpbm9pbmcuIFRoaXMgY2FuIG9jY3VyIGZvciByaWdodCBoYW5kZXJzIHRvbywgYnV0IGl0IG1vcmUgY29tbW9uIGluIGxlZnRpZXMuIApDaGlsZHJlbiB1bmRlciB0aGUgYWdlIG9mIDEzIGFyZSBub3QgYWxsb3dlZCB0byBjcmVhdGUgYW4gYWNjb3VudCBvciBvdGhlcndpc2UgdXNlIHRoZSBTZXJ2aWNlcy4gCkJ1Y2tleWVzMDIwMiAgNCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KRW5qb3kgYmVpbmcgZmVkIHNoaXQgZnJvbSB0aGF0IG9yYW5nZSBtb3JvbiBhbmQgcHJhaXNpbmcgdGhlIHRhc3RlLiAKSkNKMjAxNSAgMSBwb2ludCAgc3VibWl0dGVkIDkgZGF5cyBhZ28KSGUgc3R1Y2sgZml2ZSBvciBzaXggc21hbGwsIGJhcmVseSBwZXJjZXB0aWJsZSBuZWVkbGVzIGF0IHN0cmF0ZWdpYyBwb2ludHMgb3ZlciBteSBib2R5LCBpbmNsdWRpbmcgdGhlIHRvcCBvZiBteSBoZWFkLiBFYWNoIHNwb3QsIGhlIHNhaWQsIHdhcyBhbG9uZyBhICJtZXJpZGlhbiIgcmVsYXRlZCB0byB0aGUgcmVnaW9uIHdoZXJlIEkgZmVsdCB0aWdodG5lc3MuIFRoZXNlIGhlIGtlcHQgaW4gbWUgZm9yIGFib3V0IDEwIG1pbnV0ZXMuCklmIHlvdSBhcmUgZmVlbGluZyB0aGF0IHlvdSBkb24ndCBrbm93IHdoaWNoIG9uZSB0IG8gYnV5LCB5b3Ugc2hvdWxkIGF2b2lkIGJlaW5nIGJpYXNlZCB3aXRoIHRoZSBhZHZlcnRpc2VtZW50cyBhbmQgcmVhZCB0aGUgcmV2aWV3cyBvdXQuIApMaXBvc2xpbSBhY3RpdmF0ZXMgbGlwb2x5c2lzLCBtYWtpbmcgeW91ciBmYXQgY2VsbHMgYXBwZWFyIHNtYWxsZXIuIAozKSBJIGxpdmVkIGluIE9uZGluZSBmb3IgYSB3aGlsZSwgYW5kIHdoZXRoZXIgb3Igbm90IHlvdSBnZXQgYSBzaGFyZWQgcm9vbSwgeW91IHdpbGwgYmUgc2hhcmluZyBhIGJhdGhyb29tIGFuZCBraXRjaGVuIHdpdGggdGhlIGRvcm0gcm9vbSBuZXh0IHRvIHlvdS4gVGhlIGJ1aWxkaW5nIHdhcyBidWlsdCBpbiB0aGUgNjBzLCBhbmQgaXQgbm90IHRvbyBiYWQsIElmIEkgcmVtZW1iZXIgY29ycmVjdGx5IHRoZXJlIGlzIG5vIEFDIGluIHRoZSByb29tIGl0c2VsZiwgYnV0IGl0IGRvZXNuIGdldCB0b28gaG90IGluIHRoZSBidWlsZGluZyBkdXJpbmcgdGhlIHN1bW1lci4uIApOZXh0IHRoaW5nIGhlIHRlbGxzIG1lIHRvIGdldCBvdXQgb2YgdGhlIHZlaGljbGUuIApBZnRvbiBCYXN0aWFuIEVuY2UKQ2lhb2JhY2hzICAxIHBvaW50ICBzdWJtaXR0ZWQgMjEgaG91cnMgYWdvClRoZSB0ZXJtIHlvdXIgbG9va2luZyBmb3IgaXMgYSBiYWNrZGVhbCwgc29tZW9uZSBnaXZlcyB5b3UgdGhlIG1vbmV5IGVxdWl2YWxlbnQgdG8gdGhlIGJ1eSBpbiBvZiB0aGUgdG91cm5hbWVudCBhbmQgeW91IGdpdmUgdGhlbSB0aGUgNTAlIG9mIHlvdXIgZWFybmluZ3MgKG9yIG90aGVyIGFtb3VudHMpIG4gbnUgdGFrZSB0dXJucyBoaXR0aW5nIGVhY2ggb3RoZXIgYmVjYXVzZSBwb2tlciBpcyBhIGNhbnQgcmVhZCBteSBjYW50IHJlYWRzIG15IG5vIG9uZSBjYW4gcmVhZCBteSBwb2tlciBmYWNlIC4gWW91IG1heSBuZWVkIHRvIHZlcmlmeSB5b3VyIGlkZW50aXR5LCBidXQgSSBkaWQgaXQgYW5kIGhhZCB2ZXJ5IGdvb2QgcmVzdWx0cy4gKEZ1bGwgQW5zd2VyKQpIaWVyb25kZXIgc3RhYW4gZGUgemV2ZW4gY29tcGV0ZW50aWVnZWJpZWRlbiwgem9hbHMgYmVzY2hyZXZlbiBkb29yIGRlIEtOR0YgcmljaHRsaWpuIHZvb3IgaGV0IGJlcm9lcHNwcm9maWVsICgxKSwgZW4gZGUgYmlqYmVob3JlbmRlIGNvbXBldGVudGllcyB6b2FscyBnZWZvcm11bGVlcmQgZG9vciBkZSBjb21wZXRlbnRpZWJlc2NocmlqdmluZyB2YW4gZGUgSG9nZXNjaG9vbCB2YW4gQW1zdGVyZGFtICgyKS4gUGVyIGNvbXBldGVudGllZ2ViaWVkIHppam4gZXIgZHVzIHZlcnNjaGlsbGVuZGUgY29tcGV0ZW50aWVzIG9wZ2VzdGVsZCwgZGV6ZSBjb21wZXRlbnRpZXMgYmVzY2hyaWp2ZW4gZGUgaGFuZGVsaW5nZW4gZW4gdmVyZWlzdGVuIGRpZSB2YWxsZW4gb25kZXIgaGV0IGJpamJlaG9yZW5kZSBjb21wZXRlbnRpZWdlYmllZC4gCkEuIApNcyBXaGl0ZSBoYXMgdHJla2tlZCB0byBtb3N0IGNvcm5lcnMgb2YgdGhlIEFwcGxlIElzbGUgdG8gc3BydWlrIHRoZSBwb2xpY3ksIGFsb25nIHdpdGggYSAkNTYwIG1pbGxpb24gaGVhbHRoIHBhY2thZ2UgICBkdWJiZWQgaGVyIG51bWJlciBvbmUgcHJpb3JpdHkuIEZlZGVyYWwgTGFib3IgbGVhZGVyIEJpbGwgU2hvcnRlbiBmbGV3IGRvd24gZm9yIHRoZSBwYXJ0eSBMYXVuY2VzdG9uIGNhbXBhaWduIGxhdW5jaCBidXQgZGlkbiBiYWNrIE1zIFdoaXRlIGFudGkgcG9raWVzIHN0YW5jZSBvdXRyaWdodC4gCldoeSBkb2VzIHRoaXMgcmVzdHJpY3Rpb24gaGVscCBhbnl0aGluZz8gSW4gYSBmdW5jdGlvbmFsIGxhbmd1YWdlIHlvdXIgZnVuY3Rpb25zIG9mdGVuIHRha2UgZnVuY3Rpb25zIGFzIGFyZ3VtZW50cywgYmVpbmcgYWJsZSB0byByZWFzb24gYWJvdXQgd2hhdCBzb21lIGZ1bmN0aW9uIHlvdSBnaXZlbiBjYW4gZG8gYmVoaW5kIHlvdXIgYmFjayBpcyBhbiBpbXBvcnRhbnQgcHJpbmNpcGxlLCBhbmQgYWRtaXRzIGEgdG9uIG9mIHBvd2VyIHdoZW4gaXQgY29tZXMgdG8gcmVhc29uaW5nIGFib3V0IG5vdCBqdXN0IHlvdXIgY29kZSBidXQgdGhlIGNvZGUgeW91IGFyZSBnaXZlbi4KRGlzdGlsbGVycyBoYXZlIGFscmVhZHkgcHJvZHVjZWQgc29tZSBleGNlcHRpb25hbCBwcm9kdWN0cywgd2l0aCBtYW55IG1vcmUgaW4gdGhlIHdvcmtzLi4gClRoaXMgd2lsbCBlbmFibGUgeW91IHRvIGNvbnRhY3QgZGlyZWN0bHksIGFueSBvZiB0aGUgcHJhY3RpdGlvbmVycyB0byBmaW5kIG91dCB3aGF0IHRoZXkgY2FuIG9mZmVyIGluIHJlc3BlY3Qgb2YgeW91ciBuZWVkcyBhbmQgaG93IHRoZWlyIGFwcHJvYWNoIG1heSBiZW5lZml0IHlvdS4gCkhlIGFsc28gcmVwb3J0ZWQgdGhhdCBoZSB3YXMgb2ZmZXJlZCBhIGNlcnRpZmljYXRlIG9mIGFwcHJlY2lhdGlvbiwgd2hpY2ggaGUgZGVjbGluZWQuIFRoZSBUd2l0dGVyIHVzZXIgZW5kcyBoaXMgc3Rvcnkgd2l0aCB0aGlzIGNvbW1lbnQicGVvcGxlIHNob3VsZG50IGdpdmUgYSBmbHlpbmcgZnVjayB3aGF0IG90aGVycyB0aGluay4gClNhaGRldiwgYSBtZWRpY2FsIGRvY3RvciBieSB0cmFpbmluZywgYXJndWVkIGluIGhpcyBkZWZlbmNlIHRoZSB3b21hbiBoYWQgaW52aXRlZCBoaW0gdG8gZXhhbWluZSBoZXIgYnJlYXN0IGFuZCBnZW5pdGFsIGFyZWFzIGJlY2F1c2Ugc2hlIGhhZCBwcm9ibGVtcyB3aXRoIHRoZW0sIGJ1dCBzYWlkIGhlIGhhZCBkZWNsaW5lZC4gV2l0bmVzc2VzLCBvbmUgU2FoZGV2J3Mgd2lmZSwgc2FpZCB0aGUgd29tYW4gaGFkIGxlZnQgdGhlIHByZW1pc2VzIHNtaWxpbmcgYW5kIHNlZW1lZCBmaW5lLgpJIHVzZWQgdG8gcGlyYXRlIGV2ZXJ5dGhpbmcgYW5kIGtpbmQgb2YgYmFsa2VkIGF0IHRoZSBmYWN0IHRoYXQgbXkgY293b3JrZXIgcGFpZCBmb3IgYSBtdXNpYyBzZXJ2aWNlLiAKVG9vIG11Y2ggZmx1b3JpZGUgZm9yIGtpZHMgY2FuIGxlYWQgdG8gYSBjb25kaXRpb24gY2FsbGVkIGVuYW1lbCBmbHVvcm9zaXMsIHdoZW4gdGhlIHRvb3RoIGVuYW1lbCBiZWNvbWVzIGRpc2NvbG9yZWQuIEl0J3MgcmVjb21tZW5kZWQgdGhhdCBjaGlsZHJlbiBhZ2VzIDIgYW5kIHVuZGVyIG5vdCB1c2UgZmx1b3JpZGUgdG9vdGhwYXN0ZSBhdCBhbGwuIApUaGUgbWFya2V0IGZvciBmaXNoIG9pbCBzdXBwbGVtZW50cyBkYXRlcyBiYWNrIG1vcmUgdGhhbiB0d28gY2VudHVyaWVzIHRvIHdoZW4gQnJpdGlzaCBmaXNoZXJtZW4gc3RhcnRlZCBzZWxsaW5nIHRoZSBvaWwgb296aW5nIGZyb20gY29kIGxpdmVycyBhcyBhIG1pcmFjbGUgY3VyZSBmb3IgbWFueSBhaWxtZW50cy4gVG9kYXksIGZpc2ggb2lsIGlzIGVuam95aW5nIGEgcmVuYWlzc2FuY2UgZm9yIGEgc2xldyBvZiBwdXJwb3J0ZWQgaGVhbHRoIGJlbmVmaXRzLCBmcm9tIHJlZHVjaW5nIGNob2xlc3Rlcm9sIGFuZCBsZXNzZW5pbmcgYXN0aG1hIHRvIHRyZWF0aW5nIGRyeSBza2luIGFuZCBzbG93aW5nIGFnaW5nLiBCdXQsIHJhdGhlciB0aGFuIHBvdXJpbmcgY3J1ZGUgb2lsIHByb2R1Y3RzIGZyb20gYSBkZWNhbnRlciwgbW9zdCBwZW9wbGUgbm93YWRheXMgdGVuZCB0byBnZXQgdGhlaXIgaGVhbHRoIHByb21vdGluZyBvbWVnYSAzcyBpbiB0aGUgZm9ybSBvZiBzcXVpc2h5IGdlbCBjYXBzdWxlcyBjb250YWluaW5nIHJlZmluZWQgZmF0dHkgYWNpZHMsIHdoaWNoIGhhdmUgZ3Jvd24gdG8gYmVjb21lIHRoZSB0aGlyZCBtb3N0IHBvcHVsYXIgZGlldGFyeSBzdXBwbGVtZW50IGluIHRoZSBVUy4KV2hpbGUgc29tZSB3ZXJlIGFkIGFuZCBjb3Jwb3JhdGUgZmlsbW1ha2Vycywgb3RoZXJzIGluY2x1ZGVkIGRvY3VtZW50YXJ5IG1ha2VycyBhcyB3ZWxsIGFzIGZpbG0gZW50aHVzaWFzdHMuIApUaGUgV2l0Y2hlciAzIGlzIHRoZSBoaWdoZXN0IHJhdGVkIGFmdGVyIGNvbXBsZXRpbmcgSFpEIGZvciBnb29kIHJlYXNvbiwgaXRzIHN0b3J5IGFuZCBjaGFyYWN0ZXJzIGhhdmUgYSBsb3Qgb2YgZ3JlYXQgZGVwdGggYWx0aG91Z2ggdGhlIHN0b3J5IGlzIG11Y2gsIG11Y2ggZGFya2VyLiAKUmVsYXggYW5kIGdpdmUgaXQgdGltZS4gCkZ1bGwgZGlzY2xvc3VyZSwgSSBoZWxwIHJ1biB0aGVzZSBjcnVpc2VzLCBidXQgY291bGQgYW5zd2VyIGEgZmV3IG9mIHlvdXIgcXVlc3Rpb25zIGZyb20gV1BUIHBlcnNwZWN0aXZlLiAKVGlmZmFueSBnZXRzIHNlcmlvdXMgYWJvdXQgc291cmNpbmcKRGFzIEJ1Y2ggc2VsYnN0IGZuZ3QgZ2xlaWNoIG1pdCBkZW4gbWF0aGVtYXRpc2NoZW4gRmVpbmhlaXRlbiBhbiwgZGllIGZyIFNpdCBhbmQgR29zIHNlaHIgd2ljaHRpZyBzaW5kLiBEYWJlaSB3aXJkIGFsbGVzIHNlaHIgZWluZmFjaCBkYXJnZXN0ZWxsdCB1bmQgbmljaHQgdW5udGlnIGtvbXBsaXppZXJ0IGdlbWFjaHQuIApFZGl0OiBBbiBpbXBsaWNhdGlvbiBvZiBhbGwgb2YgdGhpcyBpcyB0aGF0IGFzIHRpbWUgZ29lcyBieSAoYXNzdW1pbmcgcGFja3MgYXJlIHVzZWQgYXMgZW50cnkgZmVlcyBhbmQgdGhhdCBwZW9wbGUgbGlrZSBwbGF5aW5nIGZvciBzdGFrZXMpIGNhcmRzIHdpbGwgYmVjb21lIGRpcnQgY2hlYXAuIEFzIHBsYXllcnMgd2lsbCBrZWVwIG9wZW5pbmcgcGFja3MgdG8gZ2V0IGludG8gdG91cm5hbWVudHMgYWZ0ZXIgaGF2aW5nIGFscmVhZHkgY29tcGxldGVkIHRoZWlyIGNvbGxlY3Rpb24uIFRoZSBleHRyYSBjYXJkcyB3aWxsIHRoZW4gYmUgc29sZCBvbiB0aGUgbWFya2V0LCBpbmNyZWFzaW5nIHRoZSBzdXBwbHkuIApObyBhbXVzZW1lbnQgcGFya3MsIG5vIGdvIGthcnQgdHJhY2tzLCBubyBtYWxscy4gCldobyBrbm93cyB3aGF0IHlvdSBtYXkgZW5kIHVwIGZpbmRpbmc/IEp1c3QgZG9uJ3QgcnVzaCB0byBnZXQgYSB0YXR0b28uIE1hbnkgaGF2ZSBtYWRlIHRoaXMgc2FtZSBtaXN0YWtlIGFuZCB0aGV5IG5vdyByZWdyZXQgdGhhdCBkZWNpc2lvbi4gVGFrZSB5b3VyIHRpbWUgYW5kIG1ha2Ugc3VyZSB5b3Uga25vdyB3aGF0IHlvdSB3YW50LiAKU29KZW5uaWZlclNheXMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpQbGF5b2ZmIFJ1bGVzMTIuIE5vIGFwcHJlY2lhdGlvbiB0aHJlYWRzLCB1bmxlc3MgdGhleSBjb250cmlidXRlIGluIHNvbWUgd2F5IHRvIHRoZSBkaXNjdXNzaW9uIHZpYSBhbmFseXNpcywgbWVtZXMsIGV0Yy4uIApTaSBiaWVuIHNlZ3VyYW1lbnRlIG5vIHRvZG8gaGl6byBjbGljayBkZWwgdG9kbywgbGFzIGJhc2VzIHNlZ3VyYW1lbnRlIHMuIApEb24gcHJlc3N1cmUgeW91cnNlbGYgYnkgY29tcGFyaW5nIHlvdXIgc2tpbGxzIHRvIG90aGVyIHBsYXllcnMgVGhhdCBhIGZ1dGlsZSBleGVyY2lzZS4gCk15IGFybSBjb3VsZCBub3Qgc3RyYWlnaHRlbiBvdXQgYW5kIEkgaGFkIG5vIHVzZSBpdCBtb3ZlbWVudCBpbiBteSBmaW5nZXJzLiAKTGV0IHNlZSwgaW4gQW1lcmljYSB3ZSBkb24gcmVhbGx5IG91dHJpZ2h0IHNheSAiSSBsaWtlIHlvdSIgb3IgIkkgbG92ZSB5b3UiIHVubGVzcyB3ZSBiZWVuIHRvZ2V0aGVyIGZvciBhIGxpdHRsZSBiaXQgYWxyZWFkeSBpbiBhIHJlbGF0aW9uc2hpcC4gSSBoYXZlIHRvIGtub3cgbW9yZSBhYm91dCB0aGUgc2NlbmUsIHRoZSBlcXVpdmFsZW50IHRvICJJIGZhbmN5IHlvdSIgaXMgbW9yZSBjb250ZXh0dWFsLiBJIHNhdyBpbiB0aGUgY29tbWVudHMgdGhhdCAiSSBmYW5jeSB5b3UiIGlzIGxpa2Ugc2F5aW5nICJJIHdhbnQgdG8gaGF2ZSBzZXggd2l0aCB5b3UiIHdoaWNoIGlzIHVzdWFsbHkgZXhwcmVzc2VkIG1vcmUgaW4gYWN0aW9uIGluIEFtZXJpY2EsIGFuZCBpdCBjYW4gZ2V0IHBlb3BsZSBpbiB0cm91YmxlLi4gCkRldCBlciBwIHRpZGUgIGYgcnlkZGV0IGxpdHQgb3BwLiAKRHVyYW50IGNlcyBwcmVzcXVlIHF1aW56ZSBhbm5lcywgZGUgbWRlY2luIGRlIHZpbGxlLCBDYXppbiBkZXZpZW50IG1kZWNpbiBkZSBjYW1wYWduZS4gRXQgYyBkdXJhbnQgY2VzIGFubmVzIHF1ZSB2YSBzIGVuIHNvbiBlc3ByaXQgbGEgc3RydWN0dXJlIGRlIHNvbiB1dnJlIG1hamV1cmUsIFRyYWl0IHByYXRpcXVlIGV0IHJhaXNvbm4gZGVzIHBsYW50ZXMgbWRpY2luYWxlcyBpbmRpZ25lcy4gRW4gMTg0NywgaWwgZXN0IHJjb21wZW5zIHBhciBsYSBTb2NpdCByb3lhbGUgZGUgTWRlY2luZSBkZSBNYXJzZWlsbGUgcG91ciB1biBtbW9pcmUgcXVpIG4gcXUgYmF1Y2hlIGRlIHNvbiB0cmFpdCwgbGVxdWVsIHBhcmF0cmEsIGRhbnMgc2EgcHJlbWlyZSBkaXRpb24sIGVuIDE4NTAuIApIZXJvIHJhaXNlcyAyLjV4IFVURyBhbmQgZ2V0cyAyIGNhbGxlcnMgd2l0aCBBS3NzLiBCb2FyZCBydW5zIG91dCBUSjYgb25lIGNsdWIuIApZb3UgbWF5IHJlYWxpemUgdGhhdCB5b3UgYXJlIG1pc2NvdW50aW5nIGFuZCB5b3UgYWN0dWFsbHkganVzdCBtYWludGFpbmluZyByaWdodCBub3csIHRoYXQgb2sgYW5kIHlvdSBjYW4gZml4IGl0Li4gCk9idmlvdXNseSAxIHdvdWxkIGltbWVkaWF0ZWx5IGRlc3Ryb3kgdGhlIGVudGlyZSBjYXNlIGFnYWluc3QgU0EuIApJIHdlbGNvbWUgdGhlIGxvd2VyIHByaWNlcy4gClNoZSBoYWQgbm8gZmF1bHQgb2YgaGVyIG93biwgd2hpY2ggaGUgcmVhbGl6ZXMsIGJ1dCBoZSByZWFsaXplcyB0b28gbGF0ZSB0aGF0IGhpcyB2ZW5nZWFuY2Ugb24gaGVyIGh1c2JhbmQgYWZmZWN0ZWQgaGVyLiBNZXJjZWRlcyBhbHNvIGhhcHBlbnMgdG8gYmUgb25lIG9mIHRoZSBwZW9wbGUgdGhhdCBlbmRzIHVwIHNhdmluZyBEYW50ZXMgZnJvbSBmYWxsaW5nIGZ1cnRoZXIuIFNoZSBwbGVhZHMgd2l0aCBoaW0gbm90IHRvIGFjY2VwdCBBbGJlcnQncyBkdWVsLCBhbmQgaGUgcmVhbGl6ZXMgaG93IGhlIGhhZCBubyBxdWFsbXMgYWJvdXQga2lsbGluZyBBbGJlcnQgaW4gaXQuIApDb25zaWRlcmluZyBob3cgQXRsdXNVU0Egc3R1Y2sgd2l0aCB0aGVpciB0cmFuc2xhdGlvbiBvZiBQNCAoSSBtZWFuIGEgbG90IG9mIHRoaW5ncyB3b3VsZG4gbWFrZSBzZW5zZSBpZiB0aGV5IHN1ZGRlbmx5IGNhbGxlZCB0aGUgY2hhcmFjdGVyIHRyYW5zKSB0aGV5IHByb2JzIHdpbGwgZG8gdGhlIHNhbWUgdGhpbmcgaGVyZS4gCldoaWxlIEluZGV4IElJSSBpcyBzdWNoIGEgYm90Y2hlZCBhYm9ydGlvbiBvZiBhbiBhZGFwdGF0aW9uIHRvIHRoZSBwb2ludCB0aGF0IGl0IG1ha2VzIHNvbWUgb2YgdGhlIHJlYXNvbmluZyBhIGJpdCB3ZWFrZXIgaXQgaW1wb3J0YW50IHRvIG5vdGUgdGhhdCB0aGVzZSBydWxlcyBjYW4gb25seSByZWFsbHkgd29yayBvbiBhIHN1YnJlZGRpdCB3aWRlIGJhc2lzLiAKTGlrZSBpdCBvciBub3QsIHRoZSB1c2Ugb2YgZHJvbmVzIGhhcyBkZWNpbWF0ZWQgQWwgUWFlZGEgYW5kIGhhcyBraWxsZWQgZG96ZW5zIG9mIGxlYWRlcnMgb2YgSVNJUy4gV2hldGhlciB0aGF0IGFjdHVhbGx5IHVzZWZ1bCBvciBub3QsIHdvcnRoIHRoZSBwcmljZSBvZiBpbm5vY2VudCBsaXZlcyBvciBub3QsIHdvcnRoIHNhY3JpZmljaW5nIHRoZSBwcml2YWN5IG9mIG1pbGxpb25zIG9mIHBlb3BsZSBpcyBhbm90aGVyIGRlYmF0ZS4gQnV0IHBlcnNvbmFsbHkgSSBwcmVmZXIgdGFyZ2V0ZWQgZHJvbmUgc3RyaWtlcyBvdmVyIGZ1bGwgc2NhbGUgaW52YXNpb25zIGluIG9yZGVyIHRvIGZpbmQgYSBzaW5nbGUgbWFuLCBvciBkbyB5b3UgdGhpbmsgQWZnaGFuaXN0YW4gd2FzIGEgc3VjY2Vzcz8KSSBzYWlkIHdoYXQgSSBzYWlkIGFib3ZlIGJlY2F1c2UgSSBwYXJ0aWN1bGFybHkgaW50ZXJlc3RlZCBpbiBBd2FrZW5pbmcgYW5kIGRoYXJtYSBmb3IgYWxsLiBUaGVyZSBhIHByaWNlIGJhcnJpZXIgYW5kIG5vbmUgb2YgdGhlIHByYWN0aXRpb25lcnMgSSBtZXQgb3Iga25vd24gd2FudCB0byBjbGFpbSBhd2FrZW5pbmcgb3Igc2VlayBhd2FrZW5pbmcgaW4gdGhpcyBsaWZldGltZS4gSW4geW91ciB2aWV3IHdoYXQgaGF2ZSB5b3UgZ2FpbmVkIGFuZCBsZWFybmVkIGZyb20gdGhlIHByYWN0aWNlPy4gCklmIHlvdSByZWx5IG9uIGVuZXJneSBibGFzdHMsIHlvdSBjYW4gZ2V0IGF3YXkgd2l0aCBqdXN0IGZvY3VzaW5nIG9uIGNvbiBiZWNhdXNlIGl0cyBlYXNpZXIgdG8gaGl0LiBQaHlzaWNhbCBibGFzdGVycyBoYXZlIHRvIGFsc28gcHVtcCBkZXggdG8gY29tcGVuc2F0ZSBmb3IgMy80IEJBQi4gSnVzdCB0byBtYWtlIGl0IHRvIGNsZWFyIHRob3VnaCwgSSBhbSBub3Qgc2F5aW5nIHBoeXNpY2FsIGJsYXN0ZXJzIGFyZSBvbiBwYXIgd2l0aCBlbmVyZ3kgYmxhc3RlcnMgaW4gdGhlIGdhbWUgKHRoZXkgYXJlbiBlbmVyZ3kgYmxhc3RlcnMgYXJlIHdheSBhaGVhZCksIGp1c3QgdHJ5aW5nIHRvIGV4cGxhaW4gaG93IHRvIG1ha2UgS2FsbGlrZSBoaXQgYSBiaXQgbW9yZS4uIApEb3VibGUgQm9udXMgUG9rZXIKRmFpdGVzIGVuIGwnZXhwcmllbmNlIGV0IHZvdXMgam91cnMgc2UgZHJvdWxlcm9udCBiaWVuIGRpZmZyZW1tZW50LiBKZSByZW5jb250cmUgc291dmVudCBkZXMgcGVyc29ubmVzIHN0cmVzc2VzLCB0cnMgbW90aXZlcywgZmF0aWd1ZXMuIApFbGVuY2VsaSBhbmxhciBzdW5hbiBveXVuIGF5biB6YW1hbmRhIGRvYSB2ZSBhYSBzZXZnaXNpbmkgZGUgb2N1a2xhcmEgYWxhZC4gVGl5YXRyb251biB5YW4gc3JhIG9jdWtsYXJuIGJ5ayBiaXIga2V5aWZsZSBpemxlZGlpIHNpaGlyYmF6IHZlIHl6IGJveWFtYSBldGtpbmxpa2xlcmkgZGUgb2N1a2xhcmEgZS4uIApBIGp1ZGdlIGNhbiBnZXQgYSByZXByaW1hbmQsIHdoaWNoIGRvZXNuIGRvIG11Y2ggZXhjZXB0IGFsbG93IGZvciBoaW0gdG8gYmUgYmxhc3RlZCBpbiB0aGUgcHJlc3MuIElmIGhlIGFjdHVhbGx5IHZpb2xhdGVzIHRoZSBqdWRpY2lhbCBjb2RlIG9mIGNvbmR1Y3Qgb3Igc2VyaW91c2x5IGhhcm1zIHRoZSBqdWRpY2lhbCBpbnRlZ3JpdHksIHRoZW4gaGUgY291bGQgYmUgY2Vuc3VyZWQgYW5kIHBvc3NpYmx5IGZhY2Ugc29tZSBzb3J0IG9mIGEgY29ycmVjdGl2ZSBhY3Rpb24uIApJZiB0aGUgcHJpY2Ugd2FzIGFuIGlzc3VlIHRoZXkgd291bGQgaGF2ZSBhc2tlZCBmb3IgbGVzczsgdGhleSBkaWRuICQxMDAgaXMgbm90IHRvbyBoaWdoIGlmIGl0IGlzIHdlbGwgZG9uZS4gCkkgY2FsbGVkIG91dCB0aGUgcGxheWVyIHdobyBmb2xkZWQgdGhlIEFjZSwgd2hvIGNvbmZpcm1lZCBhbmQgc2FpZCBzb21ldGhpbmcgdG8gdGhlIGVmZmVjdCBvZiAic29ycnkgYWJvdXQgdGhhdCwgSSBiZSBtb3JlIGNhcmVmdWwgaW4gdGhlIGZ1dHVyZSIuIAoxMDAsMDAwIENhbG9yaWUgQmFyc01lcmkgKE15Q2Fyb2xpbmFCYWJpZXMpMSBwYWNrYWdlIEdlcm1hbiBjaG9jb2xhdGUgY2FrZSBtaXgzLzQgY3VwIGJ1dHRlciwgbWVsdGVkMS8zIGN1cCBldmFwb3JhdGVkIG1pbGs2IG91bmNlcyBjaG9jb2xhdGUgY2hpcHMxIGN1cCBjaG9wcGVkIG51dHM1MCBjYXJhbWVsczEvMyBjdXAgZXZhcG9yYXRlZCBtaWxrTWl4IHRvZ2V0aGVyIHRoZSBjYWtlIG1peCwgYnV0dGVyIGFuZCAxLzMgY3VwIGV2YXBvcmF0ZWQgbWlsay4gU3ByZWFkIGhhbGYgb2YgdGhpcyBtaXh0dXJlIGluIGEgMTN4OSBpbmNoIHBhbi4gQmFrZSBmb3IgNiBtaW51dGVzIGF0IDM1MEYuIApIZSBzYXlzIGV4YWN0bHkgdGhpcyB0byB0aGUgcGxheWVyIHRvIG15IHJpZ2h0IHdobyB3YXMgcmVhbGx5IHF1aWV0IGFuZCBzZWVtZWQgbGlrZSBhIG5pY2UgZ3V5LiAKTmV2ZXIgb25jZSBhc2tlZCBmb3IgcGFpbiBtZWRzLCBuZXZlciBvbmNlIGFza2VkIGZvciBub3RlcyBvZmYgb2Ygd29yay4gCkl0IGlzIHVuZGVyc3RhbmRhYmxlIHRoYXQgaXQgd291bGQgc2VlayB0aGVzZSB0aGluZ3MsIGhhdmluZyBoYWQgaXRzIGltYWdlIGRyYWdnZWQgdGhyb3VnaCB0aGUgbXVkIGJ5IHRoZSBmYWcgZW5kIG9mIHRoZSBNdXNoYXJyYWYgeWVhcnMsIGFzIGhlIGFsaWVuYXRlZCBhbmQgYW50YWdvbmlzZWQgbWlsbGlvbnMgd2l0aCBoaXMgYnVsbHlpbmcgb2YgdGhlIENoaWVmIEp1c3RpY2UsIGFuZCBoaXMgY29udGVtcHQgZm9yIGNpdmlsaWFuIGluc3RpdHV0aW9ucy5UaGUgY2FwaXRhbGlzdCBlbGl0ZSwgZ3VpZGVkIGJ5IGNyb255IGNhcGl0YWxpc20sIGlzIGEgdHdvIGZhY2VkIG1vbnN0ZXIuIApUaGUgd2luZCBjb21pbmcgaW4gZ3VzdHMgbWFkZSBpdCBzZWVtIHRvIGJlIHN0cm9uZ2VyIHRoYW4gdGhlIG9mZmljaWFsIHJlYWRpbmdzLiBXaXRoIHRoaXMgY29uZGl0aW9uIGFyaXNpbmcgZWFybHkgaW4gdGhlIG1vcm4gaW5nIG1hbnkgd2VyZSB1bmFibGUgdG8gc2xlZXAgYW5kIHRoZSBmYWN0IHRoYXQgdGhlIHBvd2VyIGxpbmVzIHdlcmUgY29uc3RhbnRseSBzaG9ydGluZyBvdXQgbWFkZSB0aGUgZXZlbmluZyBzZWVtIG1vcmUgdGVycmlhYmxlIHRoYW4gd291bGQgYmUgdGhlIGNhc2Ugb3RoZXJ3aXNlLiAKVGhhdCBjYXN0IGhpbSBhcyBvdXIgdGFyZ2V0IG1hcmtldCwgYW5kIGJ5IHRoZSBlbmQgb2YgdGhlIGFmdGVybm9vbiB3ZSBnb3QgdGhpcyBwb29yIGd1eSB0byBkcmluayBzbyBtdWNoIGxlbW9uYWRlIGl0IGEgd29uZGVyIGhpcyBibGFkZGVyIGRpZG4gYnVyc3QuIApJdCBkb2VzbiBtYXR0ZXIgaWYgeW91IGdvIGZvciBkcmlua3Mgd2l0aCBlc2NvcnRzIGF0IHRoZSB0aG91c2FuZHMgb2YgZGlydHkgcyBvbiB0aGUgcmVnLCBiZWNhdXNlIHRoYXQgZ3V5cyB0aW1lIGFuZCBpdCBiZWhpbmQgY2xvc2VkIGRvb3JzLiAKVGhvdSBkZXN0cm95ZWRlc3Qgb2Ygb2xkIHRoZSBncmVhdCBzYWNyaWZpY2Ugb2YgRGFrc2hhLiAKVGhleSBkb24gbWVhbiBhbnkgaGFybS4gCkl0IGdyZWF0IHlvdXIgZnJpZW5kIGlzbiBhIGZhbiBvZiBwcm9oaWJpdGlvbiBidXQgYSBzcGVjaWFsaXplZCBkb2N0b3IgaW1tZWRpYXRlbHkganVtcGluZyB0byBob3cga3JhdG9tICJjYW4gUkVBTExZIGZ1Y2sgeW91IHVwIiBhbnl0aW1lIGl0IG1lbnRpb25lZCBpIGZlZWwgaXMgZXhhY3RseSB0aGUgdHlwZSBvZiB0aGluZyBhbnRpIGRydWcgcGVvcGxlIHVzZSB0byB0cnkgdG8gYmFuIGl0LiBpdCBhY3R1YWxseSBmdW5ueSB0byBtZSwgeW91IHNlZSBpdCBtb3N0bHkgYXMgcGVvcGxlIHVuZGVycmVwb3J0aW5nIGl0cyBlZmZlY3RzICgiaXQgaGFybWxlc3MiKSB3aGVyZWFzIGZyb20gbXkgcG92IGkgbW9yZSB3b3JyaWVkIGFib3V0IHBlb3BsZSAobmFtZWx5IHBvbGl0aWNpYW5zIGZ1bmRlZCBieSBiaWcgcGhhcm1hKSBkZW1vbml6aW5nIGl0LgpUaGlzIGlzIGJlY2F1c2UgbGFyZ2UgcGVyY2VpdmVkIGRlZmljaXRzIGNvdWxkIGVpdGhlciBiZSAibWFkZSB1cCIgdGhyb3VnaCBhbm90aGVyIGRheSwgaW5jb3JyZWN0IHRyYWNraW5nIG9mIGludGFrZS9leGVyY2lzZSwgb3Igb3RoZXIgcmVhc29ucy4gSWYgeW91IGhhdmUgbW9yZSB0aGFuIGEgZmV3IHdlZWtzIG9mIGludGVuc2UgbG9zcywgdGhvdWdoLCBJIGNoZWNrIGluIHdpdGggYSBkb2N0b3IgdG8gbWFrZSBzdXJlIHRoYXQgeW91ciB0aHlyb2lkIGFuZCBob3Jtb25lcyBhcmUgYWxsIG9wZXJhdGluZyBhcyB0aGV5IHNob3VsZC4uIApUaGVyZSBoYWQgdG8gYmUgYSBjb3VwbGUgaHVuZHJlZCBwZW9wbGUgdGhlcmUuIFdlbGwgdGhlIGxpZ2h0cyBkaW0gdGhlIHByb2plY3RvciBnb2VzIG9uIGFuZCB0aHIgZ3V5IHN0YXJ0cyB0YWxraW5nIGFib3V0IG1vbmV5IGFuZCBtb25leSBtYW5hZ2VtZW50LiAKSW5jcmVhc2VkIHByZXNzdXJlIHdhcyBhc3NvY2lhdGVkIHdpdGggd29yc2Ugb3V0Y29tZXMuCk1vc3QgZG9ncyBjb21lcyBmcm9tIGluZHVzdHJpYWwgZmFjdG9yaWVzIHdoZXJlIHRoZXkgYnJlZWQgZG9ncyBsaWtlIGhlbGwuIFRoZSB3aG9sZSBwcm9jZXNzIGlzIGV4dHJlbWVseSB1bmh5Z2llbmljIGFuZCBiYXJiYXJpYy4gSXQgaXMgaGFyZCB0byBkZXNjcmliZSB0aGUgYXRyb2NpdGllcyB3aXRoIG15IHBvb3IgRW5nbGlzaCBzbyBpZiB5b3Ugd2FudCB0byBzZWUgaXQgY2hlY2sgdGhpcyBvdXQuIApXaGF0IGEgcGFpbiAoaXQgaXMgdG8gY29sbGVjdCBhbmQgY2FzaCBjaGVja3MpLiBBZ2Fpbiwgd3RmPz8uIApBcmUgeW91IHVzaW5nIGEgdGVtcCBzZXJ2aWNlPyBjaGVjayB3aXRoIHlvdXIgdGVtcCBzZXJ2aWNlIGJlZm9yZSB5b3UgZG8gYW55dGhpbmcgeW91IHNlZW4gaGVyZS4gVGhleSBsaWtlIHRvIGhhbmRsZSBuZWdvdGlhdGlvbnMgYXMgd2VsbC4gSWYgZWl0aGVyIGNvbXBhbnkgdGFrZXMgeW91ciBiZWhhdmlvciB0aGUgd3Jvbmcgd2F5LCBpdCBjb3VsZCBraWxsIHRoZSBvZmZlciBhbmQgbWlnaHQgYmUgYSB2aW9sYXRpb24gb2YgYW4gYWdyZWVtZW50IHlvdSBzaWduZWQgd2l0aCB0aGUgdGVtcCBzZXJ2aWNlLiAKVGF0c2NobGljaCB3YXIgYW0gVG9kZXN0YWcgVGhhaWxhbmQgd2llIGdlbGhtdC4gRXMgd2FyIHVuZ2VtZWluIHN0aWxsIHVuZCBydWhpZy4gSW0gRmVybnNlaGVuIHd1cmRlbiBrZWluZSBTdGF0ZW1lbnRzIGdlYnJhY2h0LiBFcyBsaWVmIGVuZGxvcyBkb2t1bWVudGFyaXNjaGVzIEZpbG1tYXRlcmlhbCBiZXIgZGFzIExlYmVuIEtuaWcgQmh1bWlib2xzLiBOdXIgdW50ZXJicm9jaGVuIHZvbiBUYWZlbG4gYXVmIGRlbmVuIGRpZSBUcmF1cmlnZSBOYWNocmljaHQgYmVrYW5udCBnZWdlYmVuIHd1cmRlLgpXaXIgaGFiZW4gZWluZW4gT25saW5lc2hvcCwgdW5kIGhhdHRlbiBmcmhlciBhYiB1bmQgenUgUHJvYmxlbWUgbWl0IExhc3RzY2hyaWZ0YmV0cnVnLiBBbHNvIFdhcmUgbGllZmVybiBsYXNzZW4sIExhc3RzY2hyaWZ0IHp1cmNrYnVjaGVuIGxhc3NlbiwgV2FyZSBiZWhhbHRlbi4gWnUgOTAlIHZlcm1laWRlbiB3aXIgZGFzLCBpbmRlbSB3aXIgZWluZmFjaCBiZWkgQmVzdGVsbHVuZ2VuIG1pdCBMYXN0c2NocmlmdCAzIFRhZ2UgbWl0IGRlbSBWZXJzYW5kIHdhcnRlbiwgb2IgZXMgd2VnZW4gbWFuZ2VsbmRlciBEZWNrdW5nIHp1cmNrZ2VidWNodCB3aXJkLiAKIkkgZmVsdCBjYWxtLiBJIG1lYW4sIHdlIGhhdmUgc3VjaCBhIGdyZWF0IGdyb3VwIG9mIGd1eXMsIHN1Y2ggYSBncmVhdCBjb2FjaGluZyBzdGFmZiwiIEZvbGVzIHNhaWQuICJXZSBmZWx0IGNvbmZpZGVudCBjb21pbmcgaW4sIGFuZCB3ZSBqdXN0IHdlbnQgb3V0IHRoZXJlIGFuZCBwbGF5ZWQgZm9vdGJhbGwuIgpTaGUgY2xhaW1zIHRoYXQgaGVyIG1hcmUgd2FzIHN0b2xlbiBmcm9tIGhlci4uIApJIHdhcyB0ZXJyaWZpZWQuIEhlIHRoZW4gZ290IGFueSBtdXR1YWwgZnJpZW5kcyB3ZSBoYWQgdG8gInJlYXNvbiIgd2l0aCBtZS4gCkFsdGhvdWdoIHRoaXMgY2FuIGhhcHBlbiBpbiBhZHZhbmNlZCBjYXNlcywgc29tZSBwZW9wbGUgd2l0aCB0aGUgaW5pdGlhbCBzdGFnZXMgb2YgY2FuY2VyIG1heSBmZWVsIHNob3J0bmVzcyBvZiBicmVhdGggYW5kIHBhaW4gd2l0aCB0aWdodG5lc3MgaW4gdGhlIGNoZXN0LiAKWW91IGNhbiBhbHNvIHNlZSBkZXNjcmlwdGlvbnMgdGhlcmUgb2YgaG93IHdlIGNhbWUgdXAgd2l0aCB0aGUgb3B0aW9ucyB3ZSBpbmNsdWRlZCBpbiB0aGlzIHZvdGUuIFRMO0RSIHdlIHRyaWVkIHRvIGRyYXcgdm90ZSBvcHRpb25zIGRpcmVjdGx5IGZyb20gdGhlIGZlZWRiYWNrIHdlIHJlY2VpdmVkLiAKW0Jhc2VkIG9uIEJvYmJ5IHNlZWluZyBoZXIgYmVmb3JlIGhlIHRvb2sgYSBzaG93ZXIgYW5kIG5vdCBzZWVpbmcgaGVyIHdoZW4gaGUgbGVmdCBqdXN0IG1pbnV0ZXMgbGF0ZXJdLiAKSGUgZm9yIHN1cmUgbmVlZGVkIHRoaXMgYWRyZW5hbGluZSBraWNrIGFuZCB3YW50ZWQgdG8gYmUgdGhlIGdyZWF0IGhlcm8uLiAKVGhleSBvdmVyaHlwZSB0aGVtIGFuZCBvdmVyZXhwb3NlZCB0aGVtIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUgd2l0aCBubyBzdG9yeWxpbmUvYSBtZWFuaW5nbGVzcyBzdG9yeWxpbmUgYW5kIHRoZW4gYWJhbmRvbiB0aGVtIGZyb20gdHYgZm9yIGEgd2hpbGUgYmVjYXVzZSB0aGV5IGhhdmUgbm90aGluZy4gCkl0IGhhZCB0YWtlbiBtZSBmb3VyIHllYXJzIHRvIHRha2UgaGVyIHN3aW1taW5nIGFnYWluIGJlY2F1c2UgSSBoYWQgYSBwYW5pYyBhdHRhY2sgZXZlbiB0aGlua2luZyBhYm91dCBpdC4KQWxzbywgdGhlIGZ1Y2sgd291bGQgdGhleSBjaGFyZ2UgdGhlIHBsYXllcnMgd2l0aD8gaSBpbWFnaW5lIGFuICJpbGxlZ2FsIGdhbWJsaW5nIiBjaGFyYWdlIHdvdWxkIGVpdGhlciBnZXQgdGhyb3duIG91dCBvciBsb3dlcmVkIHRvIHNvbWV0aGluZyBzdHVwaWRseSBpbnNpZ25pZmljYW50IGluIGNvdXJ0LiBjcmF6eSBzaGl0IHRob3VnaCBPUApMb29rIHdobyBiYWNrcyB0aGUgcHVibGlzaGVyIGFuZCB5b3UgZmluZCBvdXQgd2hvIGdldHMgY2hvc2VuIGZvciBhbnkgb2YgdXMgdG8gdm90ZSBmb3IuIFRoZSBkZW1zIGFyZSBub3cgdGVsbGluZyB5b3UgaG93IHRoZSByZXB1YmxpY2FuIGdldCBjaG9zZW4gdG8gcnVuLiAKQmVmb3JlIGJhYnksIERIIChkZWFyIGh1c2JhbmQpIHdvdWxkIGhvc3QgcG9rZXIgbmlnaHRzIGZvciBoaXMgYnVkZGllcyBhdCBhIHB1Yi4gVGhlIGJhdG9uIHdhcyBoYW5kZWQgdG8gYW5vdGhlciBmcmllbmQgYnV0IERIIChkZWFyIGh1c2JhbmQpIHRvbGQgbWUgbGFzdCB3ZWVrICJJJ20gZ29pbmcgYmFjayB0byBwb2tlciBuaWdodHMiLiBOb3Q6IGNhbiBpLCBsZXQncyB3b3JrIGl0IG91dCwgbm90aGluZyEgSnVzdCAiIEkgYW0gYW5kIHRoYXQncyBpdCIuIApXZSBwdXQgaXQgYmFjaywgYW5kIHRoaW5ncyBnb3QgYmV0dGVyIGFnYWluLiBJIHdpc2ggdGhhdCBydWxlIHdlcmVuIG5lY2Vzc2FyeSwgYnV0IHVuZm9ydHVuYXRlbHkgaXQgaXMuIElmIHRoZSBzdWJyZWRkaXQgd2VyZSBwcml2YXRlIG9yIG11Y2ggc21hbGxlciwgd2Ugd291bGRuIG5lZWQgaXQsIGJ1dCB3ZSByZWFsbHkgZG8uLiAKQW5kIHllcywgc29tZSBwZW9wbGUgd29uIHRha2UgYSBoaXQgdG8gdGhlaXIgbGlmZXN0eWxlLCBidXQgc28gd2hhdD8gSWYgbGl2aW5nIHdpdGggeW91ciBwYXJlbnRzIHdvcmtzIGZvciB5b3UsIGFuZCB0aGUgYWx0ZXJuYXRpdmUgaXMgdG8gbGl2ZSBpbiBhIHNoaXQgaG9sZSB3aXRoIHBlb3BsZSB5b3UgZG9uIGtub3csIHdoYXQgaXMgc28gYmFkIGFib3V0IHN0YXlpbmcgYXQgaG9tZT8gTXkgZnJpZW5kIGxpdmVkIHdpdGggaGlzIHBhcmVudHMgdW50aWwgaGUgd2FzIGFsbW9zdCAzMC4gCkZvY3VzIG9uIHRoZSBwcmVzZW50IGluc3RlYWQgb2YgdGhlIHBhc3QuIFdoYXQgSSBtZWFuIGJ5IHRoYXQgaXMgdHJlYXQgdGhpcyBsaWtlIGFueSBvdGhlciBGV0IgYXJyYW5nZW1lbnQgd2l0aCBzb21lb25lIHRoYXQgeW91IGtub3cgdG8gYmUgdW50cnVzdHdvcnRoeSBpbiBhIHJlbGF0aW9uc2hpcC4gClRoaXMgbWVhbnMgeW91IGNhbiB3YWl0IHVudGlsIHlvdSBoYXZlIGEgc3Ryb25nIGhhbmQgYW5kIGp1c3QgYm9tYiBpdC4gClRoZW4gSSBzdGFydGVkIHRyeWluZyB0byBmaWd1cmUgb3V0IHdoeSBJIGZyaXR0ZXJlZCBhd2F5IGV2ZXJ5IGRvbGxhciBJIGdvdCBpbiBteSBwYXljaGVjay4gCldlIGFyZSBwcmV0dHkgZGFybmVkIGZyaWVuZGx5LiBBbHNvIHRvdWdoIGFuZCBoYXJkIHdvcmtpbmcuIFRoZSBwcm92aW5jZSB3YXMgYWxtb3N0IGJhbmtydXB0IHJpZ2h0IGJlZm9yZSB0aGUgZWxlY3Rpb24sIGJ1dCB0aGUgZ292ZXJubWVudCBpcyBjbGFpbWluZyB0aGUgYnVkZ2V0IHdpbGwgYmUgYmFsYW5jZWQuIFdlIGN1cnJlbnRseSBoYXZlIDYgYWN0aXZlIHBvbGl0aWNhbCBwYXJ0aWVzLCBzbyB0aGF0IG1ha2VzIHRoaW5ncyBpbnRlcmVzdGluZy4KU2hlIHdvdWxkIGJyaW5nIHByZXNlbnRzIGFsbCB0aGUgdGltZS4gUmFiYml0cywgc25ha2VzLCBzcXVpcnJlbHMsIG1pY2UsIG1vbGVzLCBmcm9ncyBldGMuIApCcmFoLCBZb3Ugc2VlbWVkIHRvIG5lZWQgdGhlIGJyZWFrZG93biB0aGF0IHRoaXMgb25lIHNjaWVudGlzdCBkaWQuIEJ1dCB0aGVyZSBhcmUgY291bnRsZXNzIGV4YW1wbGVzIG9mIGdvdnQgZnVuZGluZyBhbGxvd2luZyB0aGUgYmFzaWMgYnVpbGRpbmcgYmxvY2tzIC4gClRWIGxvdmVzIG1lIGJlY2F1c2Ugb2YgbXkgbmFtZSwgQnV0bGVyIHNhaWQsIHJlZmVycmluZyB0byBoaXMgZmFtb3VzIG1vdmllIGNvdW50ZXJwYXJ0IGZyb20gV2l0aCBUaGUgV2luZC4gCk1pc3MgaXQgYnkgYSBoYWxmIGFuIGluY2gsIHlvdSBsb29zZSBhYm91dCAxMCB5YXJkcywgYnkgYW4gaW5jaCAyMCB5YXJkcyBhbmQgc28gb24uIENvbnZlcnNlbHksIGlmIHlvdSBjYW4gZ2FpbiBlbm91Z2ggY29udHJvbCBvZiB0aGUgY2x1YiB0byBoaXQgdGhlIGJhbGwgZXZlbiBhIGhhbGYgaW5jaCBjbG9zZXIgdG8gdGhlIHN3ZWV0IHNwb3QsIHlvdSB3aWxsIG5vdCBvbmx5IGVuam95IGEgZGlzdGFuY2UgaW5jcmVhc2UgdGhhdCBjb21lcyB3aXRoIGEgbW9yZSBzb2xpZCBpbXBhY3QsIGJ1dCB5b3Ugd2lsbCBiZSBtb3JlIGxpa2VseSB0byBrZWVwIHRoZSBiYWxsIG9uIHRoZSBmYWlyd2F5LiAKQXMgYW4gQW1lcmljYW4geW91IHNob3VsZCBmdWxseSB1bmRlcnN0YW5kIHRoZSBjb25zdGl0dXRpb24gYW5kIHdoYXQgYSBvcGluaW9uIGlzIGZvciBhIHByaXZhdGUgY29tcGFueSBjb21wYXJlZCB0byBsYXdzIGNyZWF0ZWQgdG8gdGFrZSBwZW9wbGUncyByaWdodHMgYXdheS4gClRoZSBQZWVyIFJldmlldyBwcm9jZXNzIGhhcyBmb3VyIG1haW4gc3RlcHM6V3JpdGUgWW91ciBFbnRyeSAgIGEgUmVzZWFyY2hlciB3cml0ZXMgYW4gRW50cnkgdGhhdCBpcyBzdWl0YWJsZSBmb3IgdGhlIEVkaXRlZCBHdWlkZTogdGhlIEFwcHJvdmVkIHZlcnNpb24gb2YgaDJnMi5TdWJtaXQgWW91ciBFbnRyeSAgIHRoZSBSZXNlYXJjaGVyIHN1Ym1pdHMgdGhlaXIgRW50cnkgdG8gUGVlciBSZXZpZXcuR2V0IEFjY2VwdGVkICAgdGhlIEVudHJ5IGlzIFBpY2tlZCBieSBhIFNjb3V0LCBhY2NlcHRlZCBieSB0aGUgaDJnMiBHdWlkZSBFZGl0b3JzIGFuZCBoZWFkcyBvZmYgZm9yIGluY2x1c2lvbiBpbiB0aGUgQXBwcm92ZWQgdmVyc2lvbiBvZiB0aGUgc2l0ZS5QZWVyIFJldmlldyBpcyBub3QgdGhlIHBsYWNlIGZvciBFbnRyaWVzIHRoYXQgYXJlIHVuZmluaXNoZWQsIHdvcmtzIGluIHByb2dyZXNzLCByYW50cywgZmljdGlvbiwgb25lIGxpbmVycywgam9rZXMgb3IgcGVyc29uYWwgdGhlb3JpZXMuV3JpdGluZyBhbiBFbnRyeUlmIHlvdSdyZSB3cml0aW5nIGFuIEVudHJ5IGZvciBQZWVyIFJldmlldywgaXQgbmVlZHMgdG8gYmUgc3VpdGFibGUgZm9yIGluY2x1c2lvbiBpbiB0aGUgQXBwcm92ZWQgcGFydCBvZiB0aGUgc2l0ZS4gWW91IGNhbiBiZSBzdXJlIG9mIHRoaXMgYnkgZm9sbG93aW5nIG91ciBXcml0aW5nIEd1aWRlbGluZXMuIApHcmVhdCBmb3Igc3R1ZGVudHMgYW5kIHByb2Zlc3Npb25hbHMgd2hvIHdhbnQgdG8gc3RheSwgYmFkIGZvciB1bmVkdWNhdGVkIHdvcmtlcnMsIHRob3NlIHRoYXQgZG9uIHNwZWFrIEtvcmVhbiwgYW5kIGlsbGVnYWwgd29ya2VycyBnYW1pbmcgdGhlIHN5c3RlbS4uIApUaHJlZSBtYWpvciB2aWxsYWluIHByb3RhZ29uaXN0cyBvbiBhIHZhcmllZCBzY2FsZSBvZiB2aWxsYWlueSAoYnV0IHdoeSBjYW4gSSBvbmx5IHdyaXRlIHZpbGxhaW4gcHJvdGFnb25pc3RzPz8gTXkgaGVyb2VzIGVuZCB1cCBzbyBib3JpbmchKSBhbmQgY291bnRsZXNzLiAKU28gbm93IEkgd2VudCBiYWNrIHRvIG15IHNjaGVtYSB0byBjb252ZXJ0IGl0IHRvIGEgcmVjb2duaXplZCBzY2hlbWEuIFlvdSBkbyB0aGlzIGJ5IHNldHRpbmcgdGhlIEVudmVsb3BlIHByb3BlcnR5IHRvIGFuZCBzZXR0aW5nIHRoZSBCb2R5IFhQYXRoIG9uIHRoZSByb290IG5vZGUuIEluIG15IGNhc2UsIHRoZSBCb2R5IFhQYXRoIHNob3VsZCBwb2ludCB0byB0aGUgcm9vdCwgc2luY2Ugd2Ugd2FudCBldmVyeXRoaW5nIHVuZGVyIGl0ICh0aGUgVGVtcEN1c3Qgbm9kZSBpbnN0YW5jZXMpIHRvIGJlIHlhbmtlZCBvZmYuIEkgYWxzbyBzZXQgdGhlIE1heCBPY2N1cnMgb24gdGhlIFRlbXBDdXN0IG5vZGUgdG8gMS4KSnVzdGFjaGlsbGRheSAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpUaG91Z2h0cz8gR2l2ZW4gdGhpcyBib2FyZCBpcyBzbyBiYWQgZm9yIG15IHJhbmdlLCBtYXliZSBhIGNoZWNrIGlzIGJlc3Qgb24gdGhlIGZsb3AsIGVzcGVjaWFsbHkgc2luY2UgSSBoYXZlIHRoZSBLcy4gVGhhdCB3YXkgSSBzdHJlbmd0aGVuIG15IGNoZWNraW5nIHJhbmdlIHdoZW4gSSBoYXZlIEFLLiAKQmFyYmllIGNvbGxhcHNlIHdpbGwgc2lnbmFsIHRoZSBjb2xsYXBzZSBvZiB0aGUgQW1lcmljYW4gRW1waXJlIGp1c3QgbGlrZSBoZXIgYXJyaXZhbCBpbiB0aGUgRWFzdCBzaWduYWxlZCB0aGUgY29sbGFwc2Ugb2YgdGhlIFNvdmlldCBFbXBpcmUuLiAKS25veCwgQ2hyaXMgQnJvd24gYW5kIHByb2R1Y2VyIFBobGlwIFNhdGNoZWxsIGxvc3QgdGhlaXIgam9icyBhdCB0aGUgQnV6eiBpbiB0aGUgYWZ0ZXJzaG9jayBvZiBTYXRjaGVsbCBhbGxlZ2VkbHkgaGFuZGluZyBvdXQgcG9ybm9ncmFwaGljIHZpZGVvcyBhdCBhIEdheSBQcmlkZSBwYXJhZGUgaW4gQ29ud2F5IG9uIEp1bmUgMjcsIGluY2x1ZGluZyBhbGxlZ2VkbHkgZ2l2aW5nIG9uZSB0byBhIDE2IHllYXIgb2xkLiBLbm94LCB0aG91Z2ggaGUgd2FzIGF0IGEgbGFrZSBob3VzZSB3aXRoIGZyaWVuZHMgdGhhdCB3ZWVrZW5kLCBhcHBhcmVudGx5IHdhcyBkaXNtaXNzZWQgYnkgS0FCWiBvd25lciBQaGlsaXAgSm9uc3NvbiBiZWNhdXNlIGhlIGxlZCB0aGUgTW9ybmluZyBCdXp6IHNob3cuIEJyb3duIHdhcyBpbiBDb253YXkgd2l0aCBTYXRjaGVsbCB0aGUgZGF5IG9mIHRoZSBwYXJhZGUuClN1bnNjcmVlbnogIDggcG9pbnRzICBzdWJtaXR0ZWQgMjUgZGF5cyBhZ28KT24gRnJpZGF5LCB3aGVuIHRoZSBhbGxlZ2F0aW9ucyBhZ2FpbnN0IEtyYWZ0IHdlcmUgZmlyc3QgbWFkZSBwdWJsaWMsIGEgc3Bva2VzbWFuIHNhaWQsICJXZSBjYXRlZ29yaWNhbGx5IGRlbnkgdGhhdCBNci4gS3JhZnQgZW5nYWdlZCBpbiBhbnkgaWxsZWdhbCBhY3Rpdml0eS4gQmVjYXVzZSBpdCBpcyBhIGp1ZGljaWFsIG1hdHRlciwgd2Ugd2lsbCBub3QgYmUgY29tbWVudGluZyBmdXJ0aGVyLiIKUHJpYmJzMyAgMjggcG9pbnRzICBzdWJtaXR0ZWQgOSBtb250aHMgYWdvCkl0IGZlZWxzIGxpa2UgSSBoYXZlIGxlc3MgdGhhbiBhIGRlY2FkZSB3aXRoIGhlciBub3csIGV2ZW4gdGhvdWdoIEkga25vdyBoZXIgcGFyZW50cyBhZ2VzIGRvbiBuZWNlc3NhcmlseSBoYXZlIGEgY29ycmVsYXRpb24gdG8gd2hhdCBhZ2Ugc2hlIHdpbGwgbWFrZSBpdCB0bywgc2ltcGx5IGJlY2F1c2Ugb2YgYmV0dGVyIGFjY2VzcyB0byBtZWRpY2FsIGNhcmUuIEkgc3RpbGwgZ2V0IGdyZWF0IHN3b29waW5nIHN1cmdlcyBvZiBhbnhpZXR5IHRoaW5raW5nIGFib3V0IHRoZSBmdXR1cmUgYW5kIGhlciBhZ2UuLiAKWWVhaC4gSSBnZXQgdGhhdC4gSSBjb3VsZG4gZXhwbGFpbiBhbmQgaXQgYmUgcG9zdGVkLiBJIGhhZCBhIGNvdXBsZSBvZiByZXRpcmVkIE5GTCBwbGF5ZXJzIGZvbGxvdyBtZSBhbmQgd2hlbiBJIHRoYW5rZWQgb25lIGEgZ3V5IHBvc3RlZCBwcm9vZiB0aGF0IEFudHdhbiBPZGVtcyB3YXMgaGFja2VkLiBIZSBhc2tlZCBoaW0gb24gRmFjZWJvb2sgbWVzc2VuZ2VyIGFuZCBoZSBzYWlkIGl0IHdhc24gaGltLiBGb3IgbW9yZSBwcm9vZiwgaGFzIGFza2VkIGZvciBhIHBpY3R1cmUgb2YgaGltIGhvbGRpbmcgMyBmaW5nZXJzIHVwIGFuZCBoZSBhY3R1YWxseSBkaWQgaXQuIEFnYWluIHNhaWQgaXQgd2FzbiBoaW0gb24gdGhlIGFjdGl2ZSBUd2l0dGVyIGFjY291bnQuIEFwcGFyZW50bHksIGhhY2tlcnMgYXJlIGxvb2tpbmcgZm9yIGluYWN0aXZlIHZlcmlmaWVkIGFjY291bnRzLCB0YWtpbmcgb3ZlciB0aGVtLCBhbmQgdHJ5aW5nIHRvIGluaXRpYXRlIGRlYWxzIGFuZCBjbyB0cmFjdHMgdGhyb3VnaCB0d2l0Y2ggYW5kIHN0dWZmLiBTZXQgdXAgR29GdW5kTWUgd2l0aCBhIHNvYiBzdG9yeSwgaG9waW5nIHRvIGdldCBwYWlkIG9mZiB0aGVpciBmYW1lLiBFdmVuIHRob3VnaCBBbnR3YW4gYXBwYXJlbnRseSBkb2VzbiBjYXJlIGVub3VnaCB0byBmb2xsb3cgdXAgb24gaXQsIEkgd29uZGVyaW5nIGlmIEFudG9uaW8gQnJ5YW50IGNhcmVzIHRoYXQgcGVvcGxlIGFyZSB1c2luZyBoaXMgbmFtZSB0byBzY2FtIHBlb3BsZSBhbmQgY29tcGFuaWVzLiBKdXN0IHNlZWluZyBpZiB0aGlzIGhhcyBzcHJlYWQgb3IgaGFzIGEgdHJlbmQuIFRoZXkgaGF2ZSBhbG90IG9mIGZvbGxvd2Vycy4KQWRkaXRpb25hbGx5LCBpZiBJIGludGVydmlldyB5b3UgYW5kIHRlbGwgeW91IHdlIHdpbGwgYmUgaW4gY29udGFjdCwgZG8gbm90IGNhbGwgbXkgc3RvcmUgZXZlcnkgZGF5IGFuZCBhc2sgbWUgaWYgSSBtYWRlIGEgZGVjaXNpb24uIApUaGVyZSBpcyBidXQgSSBkb24ndCByZW1lbWJlci4gU3RheWluZyBvbiBGYWNlYm9vayhzdGF5IG9uIHRoZSB3ZWJzaXRlIEkgZGlkbid0IHdlbnQgYW55d2hlcmUgZWxzZSkgYW5kIGxvb2tpbmcgZm9yIGl0IHdoaWxlIHBsYXlpbmcgdGhlIGdhbWUsIHlvdSB3b3VsZCBwcm9iYWJseSBmaW5kIHRoZSBzdXJ2ZXkuIEJhc2ljYWxseSBhbGwgeW91IHRvIGRvIHdhcyByZWdpc3RlciBhbmQgcGxheSB0d28gdHJpdmlhIGdhbWVzLihEaWRuJ3QgbWF0dGVyIGlmIHlvdSBhbnN3ZXJlZCBpdCB3cm9uZyBvciBub3QpLiAKUmVhbGx5PyBJIGFsd2F5cyB0aG91Z2h0IHRoZXkgd291bGQgYmUgY29vbCBvbiB0aGUgaW5zaWRlIGxpa2UgbG90cyBvZiB3aW5kb3dzLCBoaWdoIGNlaWxpbmdzLiBUaG91Z2ggSSBjYW4gYWxzbyBzZWUgaG93IHRoZXkgY291bGQgc3Vjay4gV2Ugc3RheWVkIGF0IHRoZSBMdXhvciBpbiBWZWdhcyBvbmNlIGFuZCBnb3QgYSBqYWN1enppIHN1aXRlIGJ1dCBzaW5jZSBpdCB3YXMgcHlyYW1pZCBzaGFwZWQsIHRoZSByb29tIHdhcyBzbWFsbCBhbmQgY3V0IG9mZiBhdCBhbiBhbmdsZSBzbyBpdCB3YXMgaW1wcmVzc2l2ZSBvbiB0aGUgb3V0c2lkZSBidXQgdGlueSBvbiB0aGUgaW5zaWRlLiAKTm9ib2R5IExpa2VzIENlc2FyClRoZXJlIHdpbGwgYWx3YXlzIGJlIG9uZXMgd2hvIHNlbGwgc2hhZHkgcHJvZHVjdHMgZXZlcnl3aGVyZSBidXQgdGhvc2Ugd2l0aCBhIGdvb2QgbWVzc2FnZSBhbmQgY29uY2VwdCB1c3VhbGx5IHdvbiBydWluIHRoZWlyIGZhbiBiYXNlIHdpdGggdGhhdC4gTWF5YmUgeW91IGZvbGxvd2luZyBzb21lIHNoYWR5IGluZmx1ZW5jZXJzIT8gTXkgYmVzdCBhZHZpY2UgaXMgc3RvcCBiZWluZyBhIGZvbGxvd2VyIGFuZCBzdGFydCBjcmVhdGluZywgc28gc29tZXRoaW5nIHlvdSBsb3ZlIGFuZCBmaW5kIGxlZ2l0IHdheXMgdG8gbW9uZXRpemUuLiAKUGVyc29uYWxseSwgaSBsaWtlIHRvIGJlIHZlcnkgY2xlYXIgd2l0aCBteSBzb24gYWJvdXQgd2hvc2Ugc2lkZSBJJ20gb24gYW5kIGhvdyBlZmZlY3RpdmUgSSBjYW4gYmUuIEkgd2lsbCBuZWl0aGVyIGNvbmZpcm0gbm9yIGRlbnkgdGhhdCBvbmNlLCB3aGVuIG15IHNvbiBtZW50aW9uZWQgYSBsaXR0bGUgZ2lybCBjYWxsaW5nIGhpbSB3ZWFrIGJlY2F1c2UgaGUgYXNrZWQgaGVyIHRvIHN0b3AgaGl0dGluZyBoaW0sIEkgYXNrZWQgaWYgaGUgdGhvdWdodCBoZSBoYWQgaXQgY292ZXJlZC4gQmVjYXVzZSwgaWYgaGUgZGlkbid0LCBtb21teSBjb3VsZCBhbmQgd291bGQgdGFrZSB0aGF0IGxpdHRsZSBiaXRjaCBkb3duLiAKQSBtYXNzYWdlIGNvc3RzICQyIHBlciBtaW51dGUgd2l0aCB0aGUgY29tcGFueSBhbmQgdGhlcmFwaXN0IHNwbGl0dGluZyB0aGUgZmVlLCBMYXlvZyBzYWlkLiBUaGVyYXBpc3RzIGFsc28gcmVjZWl2ZSB0aXBzLgpBcyBwbGF5ZWQsIGZsb3AgY2hlY2sgYmFjayBpcyBmaW5lIHRvIGtlZXAgdGhlIHBvdCBzbWFsbGVyIGFuZCBwb3NzaWJseSBpbmR1Y2Ugd29yc2UgaGFuZHMgdG8gYmV0IHR1cm4uIApTaGUgbmVlZHMgYSB0d2VhaywgYnV0IHNsb3cgaW1tdW5pdHkgaXNudCB0aGUga2V5LiBUaGUga2V5IGlzIGhvdyBzaGl0dHkgaGVyIDEgYW5kIDMgYXJlLiBQZW9wbGUgYW5kIHRoZSBkZXZzIG5lZWQgdG8gdW5kZXJzdGFuZCB0aGF0IG1ha2luZyBzb21lIGdvZHMgYWJpbGl0aWVzIGluc3RhbnRhbmVvdXMgdnMgaW5jcmVkaWJseSBzbG93IGFuZCBlYXN5IHRvIGRvZGdlIG5lZWQgdG8gYmUgYWNjdXJhdGVseSByZXdhcmRlZC9wdW5pc2hlZC4KSSBzdXJlIGxvdHMgb2YgcmVwdWJsaWNhbnMgaGF0ZWQgdGhvc2UgdGFwZXMsIGJ1dCB0aGV5IGRpZG4gIlBPVFVTIEhpbGxhcnkgQ2xpbnRvbiIgaGF0ZSBpdC4gClZvaWNpIGNlIHF1J2lsIHkgYSAgc2F2b2lyIHN1ciBsZSBwYW5nYSA6IExlIE1rb25nIGVzdCBsJ3VuIGRlcyBmbGV1dmVzIGxlcyBwbHVzIGNvbnRhbWlucyBkZSBsYSBwbGFudGUuIExlcyBwYW5nYXMgc29udCBpbmZlY3RzLCAgaGF1dHMgbml2ZWF1eCwgZGUgdmVuaW5zIGV0IGJhY3RyaWVzIChhcnNlbmljLCByc2lkdXMgaW5kdXN0cmllbHMgdG94aXF1ZXMgZXQgZGFuZ2VyZXV4LCBzb3VzIHByb2R1aXRzIGR1IHNlY3RldXIgaW5kdXN0cmllbCBlbiBwbGVpbmUgY3JvaXNzYW5jZSksIG10YXV4IGNvbnRhbWlucywgcGhub2xzIHBvbHkgY2hsb3JzIChQQ0IpIG91IEREVCBldCBsZXVycyAoRERUcyksIGNobG9yYXRlOyBkZXMgY29tcG9zYW50cyByZWxhdGlvbm5zIChDSExzKSwgaGV4YWNobG9yb2NpbG94YW5lLCBpc29tcmVzIChIQ0hzKSBldCBoZXhhIGNobG9yb2JlbnpuZSAoSENCKS4gSWxzIHNvbnQgYWxpbWVudHMgYXZlYyBkZXMgcG9pc3NvbnMgbW9ydHMsIGRlcyByZXN0ZXMgZCdvcyBldCBhdmVjIHVuZSBmYXJpbmUgZCdBbXJpcXVlIGR1IFN1ZCwgbGUgbWFuaW9jIGV0IGRlcyByc2lkdXMgZGUgc29qYSBldCBncmFpbmVzLiAKSSBoYWQgYmVlbiBjb3ZlcmVkIGluIGZyZXNoIGJydWlzZXMgYWxsIG92ZXIgbXkgdGhpZ2hzIGFuZCBJIHdhcyBzbyBzb3JlIEkgd2FzIGFsbW9zdCBzd29sbGVuIHNodXQuIApZb3VyIG1hc3NhZ2UgdGhlcmFwaXN0IG1heSB3YW50IHRvIG1hc3NhZ2UgeW91IHdoaWxlIHlvdSBsYXkgb24geW91ciBzaWRlLiBIb3dldmVyLCBhIG5ldyBwaWxsb3cgbm93IGFsbG93cyBwcmVnbmFudCB3b21lbiB0byBsaWUgb24gdGhlaXIgc3RvbWFjaHMgd2hpbGUgZ2V0dGluZyBtYXNzYWdlZC4gCkVuZGVkIHVwIGZpbmlzaGluZyB0aGUgZGF5IHN0b3BwaW5nIGJ5IG15IHNjaWVuY2UgdGVhY2hlciByb29tIHNpbmNlIHNpbmNlIEkga25ldyBoZSBoYXZlIHR3ZWV6ZXJzIHRvIHJlbW92ZSB0aGUgZ3JhcGhpdGUgYW5kIGl0IHdhcyBvbiB0aGUgd2F5IHRvIHRoZSBudXJzZSBvZmZpY2UgYW55d2F5cy4gClRoZSB0b3duIG9mIE5ldmFkYVRoZSBkZWNpc2lvbiB0aGF0IEh1c3RvbiBtYWRlIHdhcyB0aGF0IHRoZXNlIHR3byBjaGlsZHJlbiB3b3VsZCBiZSBicm91Z2h0IHVwIGF3YXkgZnJvbSB0aGUgSG9sbHl3b29kIGxpZmUgc3R5bGUuIApXaGF0IHlvdSBkbyBpcyBzdG9wIGVhdGluZyBhcyBtdWNoIGZvb2QgYXMgeW91IHVzZWQgdG8uIFlvdSB0YWtlIGluIGZld2VyIGNhbG9yaWVzIHRoYW4geW91IGV4cGVuZCBhbmQgYm9vbSwgeW91IGxvc2Ugd2VpZ2h0LiAKTm93LCB5b3UgaGF2ZSB0byByZW1lbWJlciB0aGlzIHdhcyBiYWNrIGluIHRoZSBhbmNpZW50IGRheXMsIGJhY2sgYmVmb3JlIGNyeXB0byBhbmQgTVJTQSBhbmQgZnVja2luZyBwYXJ2byBvciB3aGF0ZXZlciBoYWQgc3Bhd25lZCBhbGwgb3ZlciwgYmVmb3JlIGxpa2UuIDcwMDAgcGVvcGxlIGEgeWVhciB3ZXJlIGF0dGVtcHRpbmcgYSB0aHJ1LiBJIG1hZGUgbXkgZW50aXJlIHRocnUgd2l0aCBuZXh0IHRvIHplcm8gdHJlYXRtZW50IGFuZCBkaWRuIGdldCBzaWNrLCBidXQgeW91IHdvdWxkbiBjYXRjaCBtZSB0cnlpbmcgdGhhdCBzaGl0IGZvciBhbnl0aGluZyBub3cuIFdpdGggYXMgbWFueSBwZW9wbGUgYXMgYXJlIG9uIHRoYXQgdHJhaWwsIGRyaW5raW5nIHVudHJlYXRlZCB3YXRlciBpcyBsaWtlIGNydWlzaW5nIHVwIHNoaXQgY3JlZWsgd2l0aCBhIHR1cmQgdGhhdCBkb3VibGVzIGFzIHlvdXIgcGFkZGxlIGFuZCB5b3VyIHdhdGVyIGJvdHRsZS4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkZyb2NoIHNheXMgaGUgY291bGRuJ3QgZmlnaHQgR29sb3ZraW4gYXQgbWlkZGxld2VpZ2h0LiBJdCdzIGEgYml0IG11Y2ggZm9yIEZyb2NoIHRvIGJlIGFza2luZyBHb2xvdmtpbiB0byBtb3ZlIHVwIHR3byBlbnRpcmUgZGl2aXNpb25zIGluIG9yZGVyIHRvIGZpZ2h0IGEgZ3V5IHdobyBoYXNuJ3QgYmVlbiBpbnNpZGUgdGhlIHJpbmcgZm9yIHR3byB5ZWFycyBub3cuIEZyb2NoJ3MgbGFzdCBmaWdodCB3YXMgYWdhaW5zdCBHZW9yZ2UgR3JvdmVzIGluIE1heSAyMDE0LgpUaGVyZSBpcyBubyBDYW5keSBDcnVzaCBpbnN0YWxsZWQgYnkgZGVmYXVsdC4gVGhlIGFwcCBzdG9yZSBkb2VzbiBhc2sgZm9yIGEgY3JlZGl0IGNhcmQuIApBYm91dCBhbiBob3VyIHBhc3NlZCBhbmQgbXkga2lkIHdhcyBzbm9yaW5nIHNvIEkgd2VudCBiYWNrIG91dCBhbmQgSSBzYXQgb24gdGhlIGNvdWNoIHdpdGggZ3V5IChidXQgbm90IG5leHQgdG8gaGltKS4gTmV4dCB0aGluZyBJIGtub3cgSSBoZWFyIHNvYmJpbmcuIEkgbG9vayBvdmVyIGFuZCB0aGlzIGR1ZGUgaXMganVzdCBjcnlpbmcuIApMaXRlcmFsbHkgdGhlIHRvcCBwb3N0IHJpZ2h0IG5vdyBpcyBzYXlpbmcgYSBtb2QgaXMgYSBoZXJvIGZvciBsZWF2aW5nIHVwIGEgcG9zdCB3aGVyZSB0aGUgZW50aXJlIGpva2UgaXMgImJsYWNrIHBlb3BsZSBhcmUgdGhpZXZlcyIsIHRoYXQgcG9zdCBpcyBhbHNvIHF1aXRlIGhpZ2ggdXAgb24gdGhlIGZyb250IHBhZ2UuIApNb3N0IGtpZHMganVzdCB3YW50IHRvIGRvIHdoYXRldmVyIHRoZSBoZWxsIHRoZXkgd2FudCwgSSBoYXZlIDIga2lkcyBhbmQgYWxsIHRoZXkgd2FudCB0byBkbyBpcyBwbGF5IG91dHNpZGUsIEkgZ28gdG8gc2Nob29sIGZ1bGwgdGltZSBhbmQgSSBnb3R0YSBzYXkgdGhvc2UgcGVvcGxlIGluIHNjaG9vbCB0aGF0IHdvcmsgZnVsbCB0aW1lIHNvbWV0aW1lcyAyIDMgam9icyBhbmQgaGF2ZSB0byBwYXkgYmlsbHMsIHdvcnJ5IGFib3V0IGZhbWlseSwgZnJpZW5kcyBhbmQga2VlcCB1cCB3aXRoIHNjaG9vbCBzbyB0aGV5IGNhbiBnZXQgYW4gZXZlbiBoaWdoZXIgZWR1Y2F0aW9uIGlzIHNvbWV0aGluZyBJIHdpbGwgbmV2ZXIgdW5kZXJzdGFuZC4gCkhlcmUgaXMgYSBiZXR0ZXIgZXhhbXBsZSBzaW5jZSB5b3Ugc2VlbSB0byBiZSB0byBkZW5zZSB0byBjb21wcmVoZW5kIHRoaXMuIENoaWNrIGZpbCBhIG5ldmVyIGJyb2tlIGFueSBsYXdzLiBUaGV5IGFzIGEgY29tcGFueSB0b29rIGEgc3RhbmNlIHdoZW4gaXQgY2FtZSB0byB0aGVpciB2aWV3cy4gCkhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gZGlzdGluZ3Vpc2ggdGhlbXNlbHZlcywgYnV0IG5vdCBtdWNoIG9mIG9uZSwgaGUgc2FpZC4gUG9pbnQgb2YgZGlmZmVyZW50aWF0aW9uIGlzIHRoYXQgdGhlIGRvd250b3duIGNhc2lubyBpcyBhIGZ1bGwgc2VydmljZSBjYXNpbm8gd2l0aCBhIGZ1bGwgY29tcGxlbWVudCBvZiBnYW1lcy4gSG93ZXZlciwgdGhhdCBhY2NvdW50cyBmb3Igb25seSAxMCUsIG5vIG1vcmUgdGhhbiAxNSUgb2YgdGhlIG92ZXJhbGwgZ2FtaW5nIHJldmVudWUgYW5kIHRoYXQgaGFzIGhpZ2hlciBsYWJvciBjb3N0cyAodGhhbiBlbGVjdHJvbmljIGdhbWVzKS4gCkRvbmFsZHNvbiBhbmQgYSBjbyBhY2N1c2VkIGxlZnQgYW5kIHRoZSB0aWNrZXR3YXMgaGFuZGVkIG92ZXIgdG8gcG9saWNlLiBTaGUgd2FzIGFycmVzdGVkIGF0IHRoZSB2ZW51ZSB0d28gZGF5cyBsYXRlciBhbmQgYWRtaXR0ZWQgc2hlIGhhZCBnaXZlbiB0aGUgdGlja2V0IHRvIGEgY28gYWNjdXNlZCB0byBjYXNoIG91dC4gCkkgbm90IGVpdGhlci4gVGhhdCBwZXJzb24gaXMgZG93biBiZWNhdXNlIHRoZXkgYmVsaWV2ZSB0aGV5IHRocmV3IGEgcGVyZmVjdCBsaWZlIGF3YXkgb3ZlciBwb2tlci4gVGhlIGlkZWEgdGhhdCB0aGVpciBsaWZlIHdhc24gcGVyZmVjdCwgdGhhdCBpcyB3YXMgbWlzc2luZyBzb21ldGhpbmcsIGV2ZW4gaWYgdGhleSBkaWRuIHJlYWxpemUgaXQsIGFuZCB0aGF0IHdoeSB0aGV5IHR1cm5lZCB0byBwb2tlciBhbmQgY291bGRuIHN0b3AsIHJlbGlldmVzIHNvbWUgb2YgdGhlaXIgYnVyZGVuLiAKTXkgY3VycmVudCBydWxlc2V0IHVzZXMgYW4gYXR0cmlidXRlICsgc2tpbGwgc3lzdGVtLiBBdHRyaWJ1dGVzIGFyZSB0aGUgc2V2ZW4gdmlydHVlcyBvZiBCdXNoaWRvLCBhbmQgcmFuZ2UgZnJvbSAwIDcuIApIb3cgZm9vbGlzaCBjYW4geW91IHJlYWxseSBiZSB0byBiZWxpZXZlIHlvdSBoYXZlIHNvbWUgb2JqZWN0aXZlIG92ZXJ2aWV3IG9mIG91ciBqb2luZWQgaGlzdG9yeT8gQW5kIEkgZG9uIGNhcmUgdGhhdCB5b3UgaGFsZiBJcmlzaCwgc28gYXJlIGhhbGYgdGhlIERvbmFsZCBsb3ZpbmcgY2xvd25zIHRoYXQgdmlzaXQgaGVyZSBjbGFpbWluZyB0byBiZSBtb3JlIElyaXNoIHRoYW4gd2UgYXJlLiAKVGhlcmUgd2FzIG5vIGluZmx1ZW5jZSBvZiBtZW50YWwgcHJlc3N1cmUgb24gZGVjaXNpb24gbWFraW5nIHVuZGVyIHVuY2VydGFpbml0eS4gClRoaW5rIG9mIGl0IGFzIGFja25vd2xlZGdpbmcgaHVtYW5zIGhhdmUgZGlmZmVyZW50IGNoYXJhY3RlcnMuRGVzcGl0ZSB0aGF0LCBob3cgKGlmIHRoZSBjb25jZXB0cyB3ZXJlIHRydWUpIHdvdWxkIHRoYXQgYmUgdXNlZnVsP0lmIHlvdSBrbm93IHdoYXQgdHJhaXRzIGFyZSBzZWxlY3RlZCBmb3IgaW4gcG9zaXRpdmUgc29jaWFsIGVuY291bnRlcnMgeW91IGNhbiBjdWx0aXZhdGUgdGhlbS4gSWYgeW91IGtub3cgd2hhdCB1bmF0dHJhY3RpdmUgeW91IGNhbiBtaW5pbWl6ZSBpdC5Eb24geW91IHRoaW5rIGl0IHBvc3NpYmxlIHRoZXkgd2VyZSBleGFnZ2VyYXRpbmcgYXNwZWN0cyBvZiB0aGUgY29tbWVudGFyeSB0byBtYWtlIGl0IHNlZW0gbGlrZSB0aGV5IGhhZCBhIGNsZWFyIHZpc2lvbj9JdCBwb3NzaWJsZSBidXQgSSBzZWUgYWJzb2x1dGVseSBubyByZWFzb24gdG8gdGhpbmsgdGhhdCBvdmVyIHRoZSBzaW1wbGVyIGV4cGxhbmF0aW9uLiAKQSBhIGxvbmd0ZW1wcyB0b3VybiBkYW5zIG1hIHR0ZSwgaidhaSByZWZ1cyBsZXMgdmlzaXRlcyBwcmlvZGlxdWVzIG9ibGlnYXRvaXJlcyBqdXNxdScgc29uIGRwYXJ0LgpFdmVyeW9uZSBpbnZvbHZlZCBpbiB0aGlzIGZpbG0gc2F5cyB0aGV5IGhvcGUgaXQgd2lsbCBwYXZlIHRoZSB3YXkgZm9yIGEgSG9sbHl3b29kIHRoYXQgYWxsb3dzIG1hbnkgbW9yZSBzdG9yaWVzIGFib3V0IEFzaWFuIEFtZXJpY2Fucywgd2l0aCBkaWZmZXJlbnQgcGVyc3BlY3RpdmVzLCBib2R5IHR5cGVzIGFuZCBldGhuaWMgYmFja2dyb3VuZHMuIApJZGsgaXQncyByZWFsbHkgZWFzeSB0byBnZXQgZGlzY291cmFnZWQgd2hlbiBpdCdzIGRpZmZpY3VsdCBlbm91Z2ggdG8gbWFrZSB5b3Vyc2VsZiBhc2sgZm9yIGhlbHAgYW5kIHRoZW4gd2hlbiB5b3UgZG8geW91IGNhbid0IGZpbmQgYW55b25lIHRvIGhlbHAuLiAKV29ycnlpbmcgaXMgbm90IGEgYmFkIHRoaW5nOyB0aGUgbGFjayBvZiB3b3JyeSBpcyB3aGF0IGlzIHRyb3VibGluZy4gTW9zdCBmYWlsZWQgaW52ZXN0b3JzIG5ldmVyIHdvcnJpZWQgYWJvdXQgZmFpbHVyZS4gSW5zdGVhZCwgdGhleSBwbGFubmVkIHRvIGZhaWwuCkl0J3MgcG9zc2libGUsIHlvdSBqdXN0IGhhdmUgdG8gZ2l2ZSB1cCB0aGUgbHV4dXJpZXMgd2UncmUgdXNlZCB0byBpbiBvdXIgMjAncywgaW5jbHVkaW5nIGVhdGluZyBvdXQgYSBsb3QsIGRyaXZpbmcgbmV3ZXIgY2FycywgYW5kIGV4cGVuc2l2ZSBjb25zdW1lciBwcm9kdWN0cy4gWWVzLCB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byBoYXZlIGEgY2hpbGQgQU5EIGNvbnRpbnVlIHlvdXIgY3VycmVudCBsaWZlc3R5bGUsIGJ1dCByYXJlbHkgaXMgdGhhdCBwb3NzaWJsZSBhbnl3YXkuIApPdXIgc2Vjb25kIGhhbmQgdGhvdWdoIHB1dCB1cyBpbiBhIHZlcnkgc3Ryb25nIHBvc2l0aW9uIGFzIHdlIHJlYWNoZWQgNzAgaW5jbHVkaW5nIGEgMTYgc3BhcmUgZnJvbSBCb29tIEJvb20gQmVubmV0dC4gVGhpcyBtYW5hZ2VkIHRvIHB1bGwgMTMgcGlucy4gClRoZSBwb2ludHMgbWVudGlvbmVkIGFib3ZlIGFyZSBqdXN0IGEgZmV3IHRoaW5ncyB0byBiZSBjb25zaWRlcmVkIHdoaWxlIHlvdSBhcmUgb24gYSBodW50IHRvIGZpbmQgdGhhdCBwZXJmZWN0IG9ubGluZSBwb2tlciBzaXRlLiBJZiB5b3UgZGVjaWRlIHRvIHRha2UgdGhlIGFib3ZlIHRpcHMgaW50byBjb25zaWRlcmF0aW9uLCB0aGUgY2hhbmNlcyBvZiB5b3UgZmluZGluZyBhIHZlcnkgZ29vZCBvbmxpbmUgcG9rZXIgc2l0ZSBpcyByZWFsbHkgaGlnaC4gQSB3ZWJzaXRlIHdoZXJlIHlvdSBjYW4gcGxheSBwb2tlciBhbmQgZmVlbCBsaWtlIGF0IGhvbWUuLiAKSSB3b3VsZCByZXNlYXJjaCB0aGUgImltYWdvIiB0aGF0IGRpc2N1c3NlcyB0aGUgZmFjdCB0aGF0IHdlIG9mdGVuIGFyZSBhdHRyYWN0ZWQgdG8gcGVvcGxlIHdobyB3b3VsZCBoZWxwIHVzIGltaXRhdGUgdGhlIGxvdmUgd2UgZXhwZXJpZW5jZWQgaW4gb3VyIGNoaWxkaG9vZC4gTXkgZGFkIHdhcyBhIGRvdWNoZSBzbyBJIHN0cnVnZ2xlIHdpdGggYmVpbmcgYXR0cmFjdGVkIHRvIGFzc2hvbGVzLCBiZWNhdXNlIHRoYXQgd291bGQgcmVwbGljYXRlIHRoZSBwYXR0ZXJucyBJIGZlbHQgYXMgYSBjaGlsZC4gVGhpcyBpcyBhbGwgZGVlcGx5IHN1YmNvbnNjaW91cyBieSB0aGUgd2F5LCB3ZSBhcmVuJ3QgaW52b2x2ZWQgaW4gdGhlIGNob2ljZS4KSW4gcmVjZW50IHllYXJzIEFsaWNlIHRvb2sgZGVsaWdodCBpbiBoZXIgY293IGNvbGxlY3Rpb24uIApUaGVyZSBhcmUgbWFueSBmb3JtcyBvZiB5b2dhLCBtYW55IG9mIHdoaWNoIHVzZSB2YXJpb3VzIHBvc2VzIHRoYXQgaW5jb3Jwb3JhdGUgc3RyZXRjaGluZyBhbmQgYnJlYXRoaW5nIGV4ZXJjaXNlcyB0byBpbnRlZ3JhdGUgbWluZCwgYm9keSwgYW5kIHNwaXJpdC4gCkxlcyBwaWRtaWVzIG9udCByZ3Jlc3Mgc3VydG91dCBlbiByYWlzb24gZGVzIHByb2dycyBkZSBsJ2h5Z2luZS5Db21tZW50IGZhaXJlID9VbiBhbWkgcXVpIGEgYWNoZXRlciBsYSBsaXN0ZSBkZXMgY291cnJpZWxzIGRlcyBwYXJsZW1lbnRhaXJlcyAgdW5lIHNvY2l0IHRhaXQgcHJ0ICBsYSBjb21tdW5pcXVlciAgbCdpbnRyZXNzIG1haXMgY2VsYSBuJ2EgcGFzIHQgbmNlc3NhaXJlLiAKVGhleSdyZSBzdXBwb3NlZCB0byB0YXN0ZSBsaWtlIGEgY29tYmluYXRpb24gb2YgYXNwYXJhZ3VzIGFuZCBva3JhIHdpdGggdGhlIHNuYXAgb2YgZ3JlZW4gYmVhbnMsIGFsdGhvdWdoIEkgZmluZCB0aGV5IHJlYWxseSBoYXZlIGEgdW5pcXVlIGZsYXZvciBvZiB0aGVpciBvd24uIFVuZm9ydHVuYXRlbHkgaGFydmVzdGluZyB0aGVtIGluIG15IG93biB5YXJkIHByb3ZlcyBkaWZmaWN1bHQ7IG5vdCBiZWNhdXNlIHRoZXkgZG9uJ3QgZ3JvdyB3aGVyZSBJIGxpdmUgKHRoZXkgZG8pLCBidXQgYmVjYXVzZSBvbmUgb2YgbXkgZG9ncyBpcyBhbHNvIHF1aXRlIGZvbmQgb2YgZmVybnMuLiAKU28gRG9vZ2llIGRpZCB3aGF0IGFueSBzZWxmIHBvc3Nlc3NpbmcsIDE4IHllYXIgb2xkIHBoeXNpY2lhbiB3b3VsZCBkby4gSGUgZ3JhYmJlZCBhIGNvbmRvbSwgaGlzIGdpcmxmcmllbmQgYW5kLCB3aXRoIHRoZSBzYW1lIHByb2RpZ2FsIGFjdW1lbiB0aGF0IHdvbiBoaW0gYSBwbGFjZSBvbiB0aGUgaG9zcGl0YWwgc3RhZmYsIGpvaW5lZCB0aGUgY2x1YiBvZiBzZXh1YWxseSBhY3RpdmUgdGVlbnMuICAgbGFzdCB3ZWVrLiBJdCBpcywgYXBwYXJlbnRseSwgYSB0cmVuZCBvZiB3aGljaCB3ZSdsbCBiZSBzZWVpbmcgbW9yZS4KVGhlIFdhdGVyIENsdWIgaXMganVzdCBzdGVwcyBmcm9tIHRoZSBCb3JnYXRhIGFuZCBzaG93Y2FzZXMgMTgsMDAwIHNxdWFyZSBmZWV0IG9mIGV2ZW50IHNwYWNlLCB3aXRoIHJvb20gZm9yIHVwIHRvIDUwMCBndWVzdHMuIApGb3IgYW55IG90aGVyIGdhbWUsIHRoZSBBaG9sZSBzdGFydHMuIApUbyBmaW5pc2ggaXQgb2ZmIEkgdXNlZCBhIGlvbmljIGV4Y2hhbmdlIGNvbHVtbiBidXQgdGhhdCBhIGxpdHRsZSBtb3JlIHRlY2huaWNhbCB3aGljaCB5b3UgY2FuIHJlYWQgYWJvdXQgaGVyZS4uIApIb3NwaXRhbHMgYXJlIGNsYXNzZWQsIGFuZCBub3QgYWxsIHJlZ2lvbnMgaGF2ZSBhbGwgcmlnaHQgcmVzb3VyY2VzIGR1ZSB0byBwb3B1bGF0aW9uIChvciB0aGUgbGFjayBvZikuIApTaXR0aW5nIGF0IG15IHNoaXR0eSBkZXNrIGNoYWlyLCBJIGdyYWJiZWQgbXkgYW5kIGluc3RlYWQgb2YgcGlja2luZyB1cCB3aGVyZSBJIGxlZnQgb2ZmLCBJIHdhcyBqdXN0IGZsaXBwaW5nIHRocm91Z2ggdGhlIHBhZ2VzLiAKVHdvIGRpZmZlcmVudCBwYWlycyBvZiBvbGl2ZSBncmVlbiBwYW50cy4gRm9yZXZlciAyMSBhbmQgU2hlSW4uCllvdSBtaWdodCBiZSB0aGlua2luZyB0aGF0IG1vbWVudCB3aGVuIHRoZSBkZWFsZXIgc2xvd2x5IGRyYWdzIHRoZSAzNTcgZnJvbSB0aGUgZGVjayB0byByZXZlYWwgdGhhdCB5b3UgaGF2ZSBpbiBmYWN0LCBmbG9wcGVkIHRoZSBqb2ludCwgYnV0IHlvdSB3b3VsZCBiZSB3cm9uZy4uIApBcyBtYXkgYmUgZXhwZWN0ZWQsIGlmIHlvdSBoYXZlIGFuIGVudGlyZSBnYW1lIHJvb20gZGVkaWNhdGVkIHRvIHBva2VyLCB0aGFuIHlvdSBhcmUgbGlrZWx5IHRvIHdhbnQgc2V2ZXJhbCBkZWNrcyBvZiBjYXJkcyB0byBwdXQgaW4gdGhlIHJvb20uIFRoaXMgbWF5IGV2ZW4gaW5jbHVkZSBjYXJkcyB3aXRoIHNwZWNpYWwgc2lnbmlmaWNhbmNlIHRvIHRoZW0uIEZvciBleGFtcGxlLCBpZiB5b3UgaGFwcGVuIHRvIGdvIHRvIGEgcG9wdWxhciBjYXNpbm8sIGl0IG1heSBiZSBwb3NzaWJsZSBmb3IgeW91IHRvIHRha2UgaG9tZSB0aGUgZGVjayB5b3UgdXNlZCBkdXJpbmcgYSBnYW1lLiBBbHRlcm5hdGl2ZWx5LCB5b3UgbWF5IGZpbmQgYWxsIGtpbmRzIG9mIHNwZWNpYWxpemVkIGRlY2tzIG9ubGluZS4KQXJlIHNraWxsZWQgZW5vdWdoIHRvIHJlY29nbml6ZSB0aGUgbWlzdGFrZXMuIApUaGUgYmlsbCwgd2hpY2ggaGFzIDExIGNvIHNwb25zb3JzIGluY2x1ZGluZyBzZXZlbiBEZW1vY3JhdHMsIHdhcyBtZXQgd2l0aCBhcHByb3ZhbCBmcm9tIHRoZSBQb2tlciBQbGF5ZXJzIEFsbGlhbmNlLCBhIFdhc2hpbmd0b24gYmFzZWQgZ3JvdXAgb2YgcG9rZXIgZW50aHVzaWFzdHMgZnVuZGVkIGluIHBhcnQgYnkgUG9rZXJTdGFycyBhbmQgRnVsbCBUaWx0IHRocm91Z2ggYW4gSW50ZXJuZXQgZ2FtYmxpbmcgYXNzb2NpYXRpb24gaW4gQ2FuYWRhLgpJdCBpcyBhbHNvIHBvc3NpYmxlIHRvIHBhY2thZ2Ugc2V2ZXJhbCBzZXJ2aWNlcyB0b2dldGhlciBhbmQgc2VsbCB0aGVtIGFzIGEgcGFja2FnZS4gClNvIHdlIHNob3VsZCB0aGFuayB0aGUgZ3V5IGZvciB0cnlpbmcgdG8gYnVpbGQgdXAgb3VyIHRvdXJpc20uIElzIGlzIHVuZGVuaWFibGUgdGhhdCBPcGVyYXRpb24gSG9sZCB0aGUgTGluZSBkaWQgaW4gZmFjdCByZWR1Y2UgY3JpbWUuIApJIGtub3cgc29tZSBwZW9wbGUgd2hvIGFyZSBpbiBub3cgYW5kIGl0IHNlZW1zIGEgbG90IHdvcnNlLCBlc3BlY2lhbGx5IG1vcmFsZSB3aXNlLiAKVGhlcmUgaXMgbm8gImZyZWVkb20gb2YgbW92ZW1lbnQgbGF3LiIgRnJlZWRvbSBvZiBtb3ZlbWVudCBpcyByZWNvZ25pemVkIGFzIGEgY29uc3RpdHV0aW9uYWwgcmlnaHQsIGhvd2V2ZXIgdGhlICJsYXciIHlvdSByZWZlciB0byBpcyBhcnRpY2xlIDQgb2YgdGhlIEFydGljbGVzIG9mIENvbmZlZGVyYXRpb24sIHdoaWNoIHdlcmUgcmVwbGFjZWQgYnkgdGhlIGNvbnN0aXR1dGlvbiBpbiAxNzg5LgpJZiB5b3UgYWx3YXlzIGxvb2sgZm9yIGxvZ2ljYWwgZXhwbGFuYXRpb25zLCBvZGRzIGFyZSB5b3UgZ29ubmEgaGF2ZSBhIGJhZCB0aW1lLiBNZWluZSBCZW9iYWNodHVuZzoibmljaHQgc3plbmVmcmVtZCIgc3RpbW10IHNjaG9uLCBpc3QgYWJlciB6aWVtbGljaCB3ZWl0IGdlZmFzc3QuIApJbiBteSBjbGFzc2VzIEkgbWV0IGEgbG90IG9mIG1pbm9yaXRpZXMgd2hvIGhhZCBhbHNvIG5ldmVyIGdyYWR1YXRlZCBoaWdoIHNjaG9vbC4gSSBsaXN0ZW5lZCB0byBteSBjb3Vuc2Vsb3IgYW5kIGdvdCB0byBrbm93IHRoZW0gYW5kIHJlYWxpemVkIHdoYXQgYSBoYXJkIGxpZmUgdGhleSBoYWQuIEJlZm9yZSwgSSB0aG91Z2h0IHRoYXQgdGhleSB3ZXJlIGp1c3QgbGF6eSBhbmQgc29sZCBkcnVncyBmb3IgZWFzeSBtb25leS4gClNvIEkgaGF2ZSBhIGR1bWIgYXNzIHF1ZXN0aW9uICBJIG9ubHkganVzdCBnb3QgYXJvdW5kIHRvIHdhdGNoaW5nIEF2ZW5nZXJzOiBJbmZpbml0eSB3YXIgYmVjYXVzZS4gSSBkdW5uby4gQW55d2F5LCB3aHkgd2FzIHRoYW5vcyBsaWtlIHBoeXNpY2FsbHkgc3Ryb25nZXIgdGhhbiBodWxrIGF0IHRoZSBzdGFydD8gVGhhdCBzZWVtZWQgcmVhbGx5IG91dHJhZ2VvdXMuIApCZXR0ZXIgZWF0IGl0LiAKWWVhaCwgY2xhd3MgYXJlIGZ1Y2tpbmcgc2NhcnkgYXMgaGVsbC4gVGhvc2UgdGhpbmdzIGFyZSBwdXJlIGRlc3RydWN0aW9uLiBTbyBpcyB0aGUgbW91dGggb2YgdGhlIGRvZ3MgbWVudGlvbmVkIGFuZCBvdGhlciBiaWcgYnJlZWRzLiBUaGUgcGFpbiB0aHJlc2hvbGQgb2YgYSBsb3Qgb2YgdGhlc2UgYW5pbWFscyBpcyBoaWdoLiBQbGVudHkgb2YgcGVvcGxlIGhhdmUgc3RvcmllcyBvZiBob3cgdGhlaXIgY2F0IHN3aXBlZCBhdCBhIEdlcm1hbiBTaGVwaGVyZCBhbmQgdGhlIGRvZyB3ZW50IHNjYW1wZXJpbmcgYXdheS4gSSBhbHNvIHNlZW4gaGFwcGlseSBibG9vZGllZCBkb2dvcyBhZnRlciBhIGJvYXIgaHVudCBhbmQgaXRzIGduYXJseSBhcyBmdWNrLiBXaGVuIG15IDY1IHBvdW5kIGRvZyB3b3VsZCBnZXQgaW50byBhZ2dyZXNzaXZlIGZpZ2h0cyBvdmVyIGEgcGlnIGVhciwgSSBkb24gcmVhbGx5IHdhbnQgdG8ga25vdyB3aGF0IGl0IGlzIGxpa2Ugd2l0aCBhIFR1cmtpc2ggTWFzdGlmZiBsb3NpbmcgaXRzIHNoaXQuIENvdWdhcnMgYXJlbiByb2FtaW5nIGFyb3VuZCBnZXR0aW5nIGludG8gZmlnaHRzLiBUaGV5IGFyZSBzdGVhbHRoIGh1bnRlcnMuIFRoZXkgd291bGQgYWxtb3N0IG5ldmVyIGZpbmQgdGhlbXNlbHZlcyBpbiBhIHNpdHVhdGlvbiB3aGVyZSB0aGV5IGFyZSBmaWdodGluZyBhbiBhbmltYWwgb2YgZXF1YWwgc2l6ZS4gQSBnb29kIGNvdXBsZSBnYXNoZXMgYW5kIHRoZXkgYXJlIHByb2JhYmx5IHdpbm5pbmcsIGJ1dCBpZiBhIG1hc3RpZmYgZ290IGEgaG9sZCBvZiB0aGF0IG5lY2sgYW5kIGNsYW1wZWQgZG93biwgdGhhdCBjb3VsZCBlYXNpbHkgYmUgbGlnaHRzIG91dC4KSSByb2NrIHdoYXQgSSBsaWtlIHRvIGNhbGwgYSB2ZXJ5IGZhbmN5IGhvYm8gc3R5bGUuIFRoZSBUaGF2bmFpcmlhbiBTYXJvdWVsIGxvb2tzIGZhbmN5IGFuZCB0aGUgTG9yZCB5dWthdGEgaGFzIG5pZnR5IHBhdHRlcm5zIG9uIGl0LCBidXQgaGUganVzdCBsZWF2ZXMgdGhlIGZyb250IG9wZW4gYW5kIHJlZnVzZXMgdG8gY2hhbmdlIG91dCBoaXMgaGFnZ2FyZCBsb29raW5nIEF1cmkgc2FuZGFscyBmb3Igc29tZXRoaW5nIGNsZWFuZXIuIFRoZSBtZXNzaW5lc3Mgb2YgdGhlIHBvbnl0YWlsIGFuZCB0aGUgcmVzdCBvZiBoaXMgaGFpciBmYWxsaW5nIHdoZXJldmVyIGl0IGRvZXMsIHJlYWxseSBoZWxwcyB0byBzZWxsIHRoZSBob2JvIHdhbmRlcmVyIGxvb2suIApJdCB0aGF0IGhlIGxpa2UgdG8gYmUgYWJsZSB0byByZW50IGl0IG91dCBhdCBhIGZhaXIgcHJpY2UsIEkgaW50ZXJwcmV0ZWQgdGhhdCBhcyBtZWFuaW5nIGxlc3MgdGhhbiBtYXJrZXQsIHByZXN1bWFibHkgYmVjYXVzZSBpdCBuaWNlIHRvIGhhdmUgdGVuYW50cyB3aG8gbGl2ZSBvbiB5b3VyIHByb3BlcnR5IHdpdGggeW91LCBhcHByZWNpYXRlIHlvdSBmb3IgYmVpbmcgZmFpciB0byB0aGVtIGFuZCBub3QgZ291Z2luZyB0aGVtLiAKSXMgaXQgYSBzaXR1YXRpb24gd2hlcmUgdGhlc2UgdHlwZXMgb2YgcGVvcGxlIGFyZSBzdGlsbCBjbGVhbmVkIHVwIGVub3VnaCB0byB3aGVyZSBJIHdvdWxkbid0IGV2ZW4ga25vdyB0aGV5J3JlIGhvbWVsZXNzPwpJIHdhbnQgNUcsIGFuZCBldmVuIDZHLCB0ZWNobm9sb2d5IGluIHRoZSBVbml0ZWQgU3RhdGVzIGFzIHNvb24gYXMgcG9zc2libGUuIApIaXMgZGF1Z2h0ZXIgc29vbiBjb25mZXNzZWQgYWxsLCBldmVuIHNob3dpbmcgaW52ZXN0aWdhdG9ycyBob3cgc2hlIGNhcnJpZWQgb3V0IHRoZSBjb24uIEhhcnJvZCB3YXMgY2hhcmdlZCBhIHllYXIgbGF0ZXIgYW5kIHBsZWFkZWQgZ3VpbHR5IG9uIGhlciBmaXJzdCBkYXkgaW4gY291cnQsIGJ1dCBkaXNwdXRlZCB0aGUgZGVwYXJ0bWVudCBzdWdnZXN0aW9uIHNoZSBuaWNrZWQgc29tZXdoZXJlIGluIGV4Y2VzcyBvZiAkMS41IG1pbGxpb24uIEZhc3QgZm9yd2FyZCB0byBNYXJjaCB0aGlzIHllYXIgYW5kIGJvdGggcGFydGllcyBhZ3JlZWQgb24gdGhlICQ4MDAsMDAwIGZpZ3VyZS4gClRoaXMgaXMgZXNwZWNpYWxseSBkaWZmaWN1bHQgYmVjYXVzZSBub25lIG9mIHVzIGtub3cgd2hhdCBzeXN0ZW0geW91IHVzaW5nLiBJIGFzc3VtZSBpdCBpbnZvbHZlcyBkaWNlIGFuZCBzdGF0cywgYnV0IGQyMCwgZ3VycHMsIGFuZCBmYXRlIGFyZSBhbGwgZ29pbmcgdG8gcGxheSBjb21wbGV0ZWx5IGRpZmZlcmVudGx5IGFuZCB3b3VsZCByZXF1aXJlIHJhZGljYWxseSBkaWZmZXJlbnQgc3lzdGVtcy4KVGhhdCBiZWluZyBzYWlkLCBpZiBJIHdlcmUgYXR0ZW1wdGluZyB0byBjb21lIGJhY2sgdG8gR2FtYml0IGFmdGVyIHRoZSBsb3ZlIGhhdGUgcmVsYXRpb25zaGlwIEkgaGF2ZSB3aXRoIGl0LCBhbmQgSSBzYXcgdGhhdCBib3NzIG1lbHQgb24gdGhlIG90aGVyIHRlYW0sIGl0IHdvdWxkIGxpa2VseSBiZSB0aGUgbGFzdCBtYXRjaCBJIHBsYXllZCBpbiB0aGUgbW9kZS4KVGhlIDQgc3RhciBXZXN0Z3JvdmUgSG90ZWwgaXMgc2l0dWF0ZWQgaW4gdGhlIGJlYXV0aWZ1bCB2aWxsYWdlIG9mIENsYW5lIGluIENvdW50eSBLaWxkYXJlLiBMb2NhdGVkIGp1c3QgYSAzMCBtaW51dGUgZHJpdmUgZnJvbSBEdWJsaW4gQ2l0eSBDZW50cmUsIHRoZSBob3RlbCBpcyB3aXRoaW4gZWFzeSBhY2Nlc3Mgb2YgYm90aCB0aGUgTTcgYW5kIE00IG1vdG9yd2F5cyBhbmQgaXMgdGhlIGlkZWFsIGxvY2F0aW9uIGZvciBhIHN0YXkgaW4gQ291bnR5IEtpbGRhcmUuIFlvdSB3aWxsIGJlIHNwb2lsZWQgZm9yIGNob2ljZSB3aXRoIGEgd2lkZSB2YXJpZXR5IG9mIHRoaW5ncyB0byBkbyBpbiB0aGUgbG9jYWwgYXJlYSwgZnJvbSBzaG9wcGluZyBpbiBuZWFyYnkgS2lsZGFyZSBWaWxsYWdlIE91dGxldCBDZW50cmUsIHRoZSBXaGl0ZXdhdGVyIFNob3BwaW5nIENlbnRyZSBhbmQgTmV3YnJpZGdlIFNpbHZlcndhcmUgb3IgdmlzaXRpbmcgZmFtaWx5IGF0dHJhY3Rpb25zIHN1Y2ggYXMgdGhlIElyaXNoIE5hdGlvbmFsIFN0dWQgSmFwYW5lc2UgR2FyZGVucywgTHVsbHltb3JlIEhlcml0YWdlIERpc2NvdmVyeSBQYXJrIGFuZCBtdWNoIG1vcmUuIApCbHVmZnMgYXJlIHZlcnkgaGFyZCB0byBmaW5kIGZvciB2aWxsYWluLiAKV2h5IHdvdWxkIHNoZSBjaGlwIGF3YXkgYXQgeW91dCBzZWxmIGNvbmZpZGVuY2U/IEJlY2F1c2UgaXQgYW4gaW5zaWRpb3VzIHRoaW5nIHRoYXQgZ2lybHMgZG8gdG8gZ3V5cyB3aG8gZG9uIGV2ZXIgc2hvdyBtYXNjdWxpbmUgYW5nZXIgYW5kIGNhbGwgdGhlbSBvbiB0aGVpciBidWxsc2hpdC4gR3V5cyB3aG8gYXJlIHN3ZWV0IGJmcy4gVGhleSBmZWVsIGEgc2FkaXN0aWMgdXJnZSB0byBkZXN0cm95IHRoYXQgZ29vZG5lc3MuIFRoZXkgdHJ5IHRvIGdpdmUgdGhlbSBhIGdsaW1wc2Ugb2YgdGhlIGNvbXBldGl0aW9uIGFuZCBzZWUgaWYgdGhleSBmZWVsIGh1bWlsaWF0ZWQuClRvIGJlIGZhaXIgaXQgdG9vayB0aGVtIG92ZXIgYSBtb250aCB0byByZXBseSBhbmQgdGhleSB3ZXJlIG5vdCByZWZ1bmQgdGhlaXIgcmlkaWN1bG91cyAkNjAgc2hpcHBpbmcgYW5kIHNhaWQgdGhleSB3ZXJlIGdvaW5nIHRvIGRlZHVjdCB0aGUgY29zdCBvZiByZXR1cm4gc2hpcHBpbmcgdG9vLgpJdCBtaWdodCBiZSB3b3J0aHdoaWxlIGZvciBhbGwgdGhvc2Ugd2hvIHN5bXBhdGhpemUgd2l0aCB0aGUgb2NjdXBpZXJzIG9mIFp1Y2NvdHRpIFBhcmsgYW5kIG90aGVyIHBsYXphcyBhbmQgc3F1YXJlcyBhcm91bmQgdGhlIGNvdW50cnkgdG8gbGVhcm4gZnJvbSB0aGUgZXhhbXBsZSBvZiB0aGUgQ2hyaXN0bWFzIFNlYWxzIGNhbXBhaWduLiAKU28gaXQgYWJvdXQgdHJ5aW5nIG5ldyB0aGluZ3MgYW5kIGV4cGVyaW1lbnRpbmcsIHBsdXMgbG90cyBvZiBjb21tdW5pY2F0aW9uLi4gCltkZWxldGVkXSAgMzYgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KU28ga29tbXQgbWFuIHZvbiBLc3RlIChTYW50YSBDcnV6IGRlIExhIFBhbG1hKSB6dSBLc3RlIChQdWVydG8gZGUgVGF6YWNvcnRlKSwgZHVyY2ggYWxsZSBLbGltYXpvbmVuIGRlciBJbnNlbCB1bmQgZHVyY2hxdWVydCBhdWYgZGVyIEZhaHJ0IGVpbmUgVmllbGZhbHQgdm9uIHVudGVyc2NoaWVkbGljaGVuIExhbmRzY2hhZnRlbi4gQmVsb2hudCB3aXJkIGRpZSBsYW5nZSBGYWhydCBtaXQgdG9sbGVuIEF1c2JsaWNrZW4gYW4gdmllbGVuIEF1c3NpY2h0c3B1bmt0ZW4gdW5kIHdlbm4gbWFuIGF1ZiBoYWxiZXIgSGhlIGRlbiBFaW5kcnVjayBiZWtvbW10LCBkYXMgV2V0dGVyIHZlcnNjaGxlY2h0ZXJ0IHNpY2gsIGthbm4gZXMgc2VpbiwgZGFzcyBtYW4gc2ljaCBpbiBkZW4gTmViZWxuIGRlcyBSZWdlbndhbGRlcyBiZWZpbmRldCB1bmQgd2VuaWdlIE1pbnV0ZW4gc3B0ZXIgd2llZGVyIGJlciBkZW4gV29sa2VuIGRlbiBzdHJhaGxlbmRlbiBTb25uZW5zY2hlaW4gZ2VuaWVzc2VuIGthbm4uLiAKRXNwZWNpYWxseSBpZiB0aGUgb2ZmZW5kaW5nIHBhcnR5IHNlZXMgdGhlIGVycm9yIG9mIGhpcyB3YXlzIGFuZCBzaG93cyBwcm9ncmVzcyBpbiBiZWluZyB0cnVzdHdvcnRoeSwgbW9yZSBidXNpbmVzcyBvcHBvcnR1bml0aWVzIGNhbiBkZXZlbG9wIGFzIGEgcmVzdWx0IGJlY2F1c2UgeW91IG1heSB1bmRlcnN0YW5kIGVhY2ggb3RoZXIgYmV0dGVyIHRoYW4gYmVmb3JlLiAKU2FkaWU6IEhlIGRvZXNuJ3QgbGlrZSB0byBjb21tdW5pY2F0ZSwgZG9jdG9yLiBIZSdzIGFuIGVuZ2luZWVyLCB5b3Uga25vdywgdmVyeSByZXByZXNzZWQuIFRhY2l0dXJuIE1pZHdlc3QgYnkgd2F5IG9mIG5vcnRoZXJuIEV1cm9wZSwgZWFybmVzdCwgc2h5LCBhIGxpdHRsZSBodW1vcmxlc3MuCklmIHlvdSdyZSBsb29raW5nIGZvciBhIGNvaW4gdHJheSwgeW91IG1heSBiZSBsb29raW5nIGZvciBhIHdoaWxlLiAKV2hlbiBib2FyZCBnYW1lcnMgZ2V0IHRvIHRoZSBHYW1lciBsZXZlbCB0aGV5IHRlbmQgdG8gYmUgaW50byB0aGUgbW9yZSBjb21wbGV4IGFuZCBvYnNjdXJlIGdhbWVzLCBtYW55IG9mIHdoaWNoIGNhbiBiZSBhIGxvdCBvZiBmdW4gZm9yIG5vbiBHYW1lcnMgYXMgd2VsbC4gSWYgTW9ub3BvbHkgaGFzIGxvc3QgaXRzIGx1c3Rlciwgb3IgeW91IHdhbnQgdG8gc3RlcCBpdCB1cCBmcm9tIFJJU0ssIHlvdSBjb3VsZCB0cnkgb3V0IFNldHRsZXJzIG9mIENhdGFuIG9yIEF4aXMgYW5kIEFsbGllcy4uIApKcm9ja3ogIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCk91ciBCZWFjaGNvbWJlciBSZXN0YXVyYW50IGZlYXR1cmVzIGF3ZXNvbWUgVGV4IE1leCBkaXNoZXMsIGFzIHdlbGwgYXMsIGEgc2VsZWN0aW9uIG9mIGV4Y2VsbGVudCBUaGFpLCBXZXN0ZXJuLCBhbmQgU2VhZm9vZCBCQlEuIE91ciBNYWQgQnVsbCBCZWFjaCBCYXIgb2ZmZXJzIGEgdGVycmlmaWMgYXRtb3NwaGVyZSB3aXRoIGF3ZXNvbWUgdmlld3MgYW5kIGRlbGljaW91cyBjb2NrdGFpbHMuIApGb3IgTGFib3VyIHBvbGl0aWNpYW5zIHNlZWtpbmcgYW4gaW50ZWxsZWN0dWFsIHRvdWNoc3RvbmUsIHRoZXJlIGlzIG5vIHNhZmVyIHBsYWNlIHRvIGdvIHRvIHRoYW4gTm9ybWFuIEtpcmssIHdob3NlIGxlZ2FjeSBhbmQgbGVnZW5kIGhhdmUgbGFzdGVkIGZhciBsb25nZXIgdGhhbiB0aGUgMjEgbW9udGhzIGhlIHNwZW50IGluIHBvd2VyIGJldHdlZW4gMTk3MiBhbmQgaGlzIGRlYXRoIGluIDE5NzQuIApGcm9tIER1bmdlb24sIElzc3VlIDIwODogQSBiYW5kIG9mIGdvYmxpbiBwaXJhdGVzIGhhdmUgc3RvbGVuIGEgc2hpcCwgYW5kIGFyZSByYWlkaW5nIHRvd25zIHVwIGFuZCBkb3duIHRoZSBTaWx2ZXJ3cmFjayBDb2FzdCAoYW4gYXJlYSB0aGF0IGNhbiBiZSBpbnNlcnRlZCBpbnRvIGFueSBjYW1wYWlnbiBzZXR0aW5nKS4gCkl0IHNhZCwgYnV0IGl0IGFsc28gZW5kcyBhIGxvdCBvZiBzdWZmZXJpbmcgYW5kIHBhaW4gdGhhdCBwZW9wbGUgaGF2ZSBiZWVuIGxpdmluZyB3aXRoIGZvciB5ZWFycyAoSSBhbHNvIHdvcmsgd2l0aCBhIG1vc3RseSBnZXJpYXRyaWMgY2hyb25pY2FsbHkgaWxsIHBhdGllbnQgcG9wdWxhdGlvbikuLiAKQSB0eXBpY2FsIHBheW1lbnQgcmFuZ2VzIGZyb20gNSBjZW50cyB0byAyMCBjZW50cyBwZXIgY2xpY2suIEFmZmlsaWF0ZSBsaW5rcyByZXByZXNlbnQgdGhlIG1pZGRsZSBncm91bmQgYmV0d2VlbiBiYW5uZXIgYWRzIGFuZCBjb21taXNzaW9uIGJhc2VkIGFmZmlsaWF0ZSBwcm9ncmFtcy4gCkVNRyB3YXMgbm9ybWFsaXplZCB0byBpc29tZXRyaWMgTVZDIChFTUcoTVZDKSkgZHVyaW5nIGtuZWUgZmxleGlvbiBhbmQgZXh0ZW5zaW9uLCBhbmQgaW5hY3Rpdml0eSB0aHJlc2hvbGQgb2YgZWFjaCBtdXNjbGUgZ3JvdXAgd2FzIGRlZmluZWQgYXMgOTAlIG9mIEVNRyBhY3Rpdml0eSBkdXJpbmcgc3RhbmRpbmcgKDIuNTEuNyUgb2YgRU1HKE1WQykpLgpJJ3ZlIG5ldmVyIHVuZGVyc3Rvb2QgaXQsIGJ1dCBpdCBkb2Vzbid0IG1hdHRlciBiZWNhdXNlIHRoZXkgYXJlIG9idmlvdXNseSBub3Qgc2VyaW91cyBlbm91Z2ggYWJvdXQgc2VsbGluZyB0aGVpciBob3VzZS4gCkkgZ2V0IHdoYXQgeW91IHRyeW5hIHNheSBpbiB0aGF0IHdlYXJpbmcgcGVhcmxzLCBhIHN0ZXJlb3R5cGljYWxseSB3b21lbiBhY2Nlc3NvcnksIHRvIG1vY2sgd29tZW4gY2FuIGJlIHNlZW4gYXMgc2V4aXN0LiAKIkJ1dCBQYXJrZXIgcmVqZWN0cyB0aGUgIlNvdXRoIFBhcmsgQ29uc2VydmF0aXZlIiBsYWJlbCAgIGFzIHdlbGwgYXMgdGhlIG5vdGlvbiB0aGF0IGhlIGNhbiBvbmx5IGNob29zZSBiZXR3ZWVuIGxpYmVyYWwgYW5kIGNvbnNlcnZhdGl2ZS4gSW4gYW4gaW50ZXJ2aWV3IHdpdGggSW4gRm9jdXMgbWFnYXppbmUgKE9jdG9iZXIgNCwgMjAwNCksIGhlIHNhaWQsICJXaGF0IHdlJ3JlIHNpY2sgb2YgICBhbmQgaXQncyBnZXR0aW5nIGV2ZW4gd29yc2UgICBpczogWW91IGVpdGhlciBsaWtlIE1pY2hhZWwgTW9vcmUgb3IgeW91IHdhbm5hIGZraW4nIGdvIG92ZXJzZWFzIGFuZCBzaG9vdCBJcmFxaXMuIFdlIGZpbmQganVzdCBhcyBtYW55IHRoaW5ncyB0byByaXAgb24gdGhlIGxlZnQgYXMgd2UgZG8gb24gdGhlIHJpZ2h0LiBQZW9wbGUgb24gdGhlIGZhciBsZWZ0IGFuZCB0aGUgZmFyIHJpZ2h0IGFyZSB0aGUgc2FtZSBleGFjdCBwZXJzb24gdG8gdXMuIiIKRGlkIHlvdSBldmVyIHdvbmRlciB3aHkgRHVzdGluIEhvZmZtYW4gd2FzIHNvIGdvb2QgYXQgd2lubmluZyBibGFja2phY2sgaW4gdGhlIG1vdmllIFJhaW4gbWFuPyBXZWxsLCBoaXMgY2hhcmFjdGVyJ3Mgc2l0dWF0aW9uIHdhcyBkaWZmZXJlbnQgYnV0IHRoZSBhcHByb2FjaCB3YXMgYWxsIGFib3V0IGhhdmluZyBtb3JlIGluZm9ybWF0aW9uIHRoYW4gdGhlIGhvdXNlLiBLbm93bGVkZ2UgaXMga2V5IGFuZCBiZWluZyBhYmxlIHRvIGtlZXAgdHJhY2sgb2YgdGhlIHN0YXRzLCBvZGRzLCBhbmQgb3V0cyBhcmUgY3J1Y2lhbCB0byBiZWluZyBzdWNjZXNzZnVsIGluIEhvbGRlbS4gU29tZSBhcmUgZ29vZCwgc29tZSBiYWQsIGJ1dCBvdmVyYWxsLCBpZiB5b3UncmUgaW4gdGhlIGdhbWUgbG9uZyBlbm91Z2ggaXQgd2lsbCBoYXBwZW4uIApUaGUgYmlnIGFkdmFudGFnZSB0byBGcmVlIE9ubGluZSBQb2tlciBpcyB0aGF0IGl0IHdpbGwgZ2l2ZSB5b3UgYSBjaGFuY2UgdG8gcHJhY3RpY2UgdW50aWwgeW91IGFyZSByZWFkeSBmb3IgdGhlIGJpZyBsZWFndWVzLiAKVGhlcmUgaXMgemVybyBldmlkZW5jZSB0aGF0IEJhYnMgd2FzIGEgTWVsaXNzYSBwdXNoZWQgaGVyIGNoaWxkcmVuIGludG8gZGFuY2UsIGFzIE1lbGlzc2EgaGFzIHdpdGggTWFkZGllIE1hY2tlbnppZSBaaWVnbGVyLiBNZWxpc3NhIGh1c2JhbmQgZXZlbiBsZWZ0IE1lbGlzc2EgZHVlIHRvIGhlciBvYnNlc3Npb24gd2l0aCB0aGVpciBkYXVnaHRlciBkYW5jZSBjYXJlZXIuIFRoZSBaaWVnbGVyIGdpcmxzIGhhdmUgaGFkIHRhbGVudCBmcm9tIGEgeW91bmcgYWdlLCBmcm9tIGEgc2tpbGwgdGhhdCB3YXMgZGV2ZWxvcGVkIGF0IGEgeW91bmcgYWdlLiBUaGVyZSByZWFsbHkgaXMgbm8gY29tcGFyaXNvbiBoZXJlIGJldHdlZW4gdGhlIFppZWdsZXIgZ2lybHMgYW5kIFdXVC4gWUVBSCwgV1dUIGlzIG1vcmJpZGx5IG9iZXNlLiBTbyB3aGF0LgpUaGUgdGhpbmcgaXMsIHBvb3JseSBlZHVjYXRlZCBwZW9wbGUgd2hvIGRvbiB1bmRlcnN0YW5kIG9yIGNhcmUgYWJvdXQgbnV0cml0aW9uIGJ1dCBzdGlsbCBlYXQgbWVhdCBhcmUganVzdCBhcyBwcm9uZSB0byB2aXRhbWluIGRlZmljaWVuY2llcywgb2YgZGlmZmVyZW50IGtpbmRzLiAKQ29udGludWUgYnJlYXRoaW5nIHdoaWxlIHlvdSBzdHJldGNoLiAKVGhlIGRyaXZlciB3YXMgZHJ1bmsgYW5kIGhpdCBhIGJyb2tlbiBkb3duIHRydWNrIGluIENoYXJsb3R0ZSBDb3VudHkuIlRoZSB0cnVjayBzbGljZWQgaW50byB0aGUgdmVoaWNsZSBsaWtlIGEgY2FuIG9wZW5lciwiIHNoZSBzYWlkLCB0aG91Z2ggc2hlIHJlbWVtYmVycyBub3RoaW5nIG9mIHRoZSBjcmFzaC4gCkkgaGF2ZSBiZWVuIG1vbGVzdGVkIGFzIGEga2lkIG9uIGFuZCBvZmYgYnkgZGlmZmVyZW50IHBlb3BsZSBhbmQgZXZlbiBwZW9wbGUgb2YgbXkgb3duIGFnZSBncm91cC4gSSB3b3VsZCBzYXkgdGhlIHJhbmdlIHdvdWxkIGJlIGxpa2UgNCAyMS4gSSAyMyBub3cuIApBdCB0aGUgc2FtZSB0aW1lLCB0aGUgdW5tYW5hZ2VhYmxlIGRvbWVzdGljIGRlYnQgc2VydmljaW5nIGxpYWJpbGl0aWVzIHRoYXQgaGF2ZSBiZWNvbWUgdGhlIHNpbmdsZSBsYXJnZXN0IGJ1ZGdldGFyeSBleHBlbmRpdHVyZSBpdGVtIGRvIG5vdCBhcHBlYXIgdG8gYm90aGVyIGVpdGhlciBvZiB0aGVtLiAKUGVyaGFwcyB0aGlzIGlzIHRoZSBiaWcgdGVjaG5vbG9neSB0aGF0IHRoZSBhbmNpZW50cyBoYWQsIGFjY2VzcyB0byB0aGUgSW50ZXJuZXQgb2YgdGhlIHVuaXZlcnNlLiBJdCB3YXMgY2FsbGVkIGFsbCBzb3J0cyBvZiBuYW1lcyBidXQgaXQgdGhlIHF1YW50dW0gaG9sb2dyYXBoaWMgZG9oaWNreSwgbm90IEdvZC4gCk5ldmFkYSdzIGxhcmdlc3QgY2FzaW5vcyByZXBvcnQgJDEuMiBiaWxsaW9uIGxvc3MgaW4gZmlzY2FsIDIwMTggTmV2YWRhIGxhcmdlc3QgY2FzaW5vcyBsb3N0ICQxLjIgYmlsbGlvbiBkdXJpbmcgdGhlIGZpc2NhbCB5ZWFyIHRoYXQgZW5kZWQgSnVuZSAzMCBkZXNwaXRlIHNlZWluZyByZWNvcmQgcmV2ZW51ZXMsIGJyaW5naW5nIHRvIGFuIGVuZCBhIHR3byB5ZWFyIHN0cmVhayBvZiBwb3N0ZWQgcHJvZml0cyAuCkZvciBpbnN0YW5jZSwgaWYgd2UgYXNrIGhvdyB3ZSBjYW4gaW5jcmVhc2UgY29tcGV0aXRpdmVuZXNzLCB3ZSB3aWxsIHRyeSB0byBjb21lIHVwIHdpdGggYSB3aW5uaW5nIGZvcm11bGEuIElmIHRoZSBmb3JtdWxhIGlzIHJpZ2h0LCB0aGUgb2JqZWN0aXZlIHdpbGwgYmUgYWNoaWV2ZWQuIApNeSBmaXJzdCBtb3RvcmN5Y2xlIHdhcyBhIDE5NDMgS251Y2tsZWhlYWQgSGFybGV5IERhdmlkc29uLiBXaGVuIEkgZm91bmQgdGhlIGJpa2UgZm9yIHNhbGUgSSBoYWQgbm8gbW9uZXksIGJ1dCBJIGtuZXcgSSB3YW50ZWQgdGhpcyBkcmVhbSBtYWNoaW5lLiBJIHdhc24ndCBtYWtpbmcgZW5vdWdoIG1vbmV5IHRvIHBheSBmb3IgaXQgc28gSSBuZWVkZWQgYSBwbGFuLiAKIDYgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1RoZXJlIGlzIHByZWNlZGVudCBmb3IgY2hpbGRyZW4gb2YgYSBUYXJnIGFuZCBub24gVGFyZyB1bmlvbiBoYXZpbmcgYSBtaXggb2YgdHJhaXRzLiAKWW91IGNhbiB1c2UgYSA0IDZ4IGJpZyBibGluZCBvcGVuIGFzIHlvdXIgc3RhbmRhcmQgcmFpc2UgZGVwZW5kaW5nIG9uIHRoZSBnYW1lIGFuZCBob3cgbXVjaCBhY3Rpb24geW91IGdldC4uIApTdGVwIDE6IHBpY2sgdXAgdGhlIHBob25lLiAKUmlnaHQ/IEhpc3RvcmljYWxseSwgZHVyaW5nIHRpbWVzIG9mIGEgc3Ryb25nIGVjb25vbXkgdGhlIGRlZmljaXQgZ3Jvd3MgYW5kIGR1cmluZyBhIGRlcHJlc3Npb24gdGhlIGRlZmljaXQgc2hyaW5rcy4gClttb3JlIGluc2lkZV0uIAoiV2Ugc2VlIHRoYXQgdGhlIG51bWJlciBvZiBzaWduIHVwcyBhbmQgZGVwb3NpdHMgYXJlIG1vcmUgb3IgbGVzcyB0aGUgc2FtZSBidXQgdGhlIGF2ZXJhZ2UgZGVwb3NpdCBhbW91bnQgaGFzIGRyb3BwZWQgYnkgMzAlIiBzYXlzIGNhc2lubyBtYW5hZ2VyIEFmc2hpbiBFcnRhbmluLiAiQXMgYSByZXN1bHQgb2YgdGhhdCB3ZSBoYXZlIHRvIGNhdGVyIHRvIGEgbWFya2V0IGJhc2VkIG9uIHNtYWxsZXIgZGVwb3NpdHMuIgpHYW1ibGluZyBhZGRpY3Rpb24gZXhwZXJ0IENoYXJsZXMgTGl2aW5nc3RvbmUgc2F5cyBwb2tlciBtYWNoaW5lcyBhcmUgZGFtYWdpbmcgdGhlIHN0YXRlJ3MgZWNvbm9teS4gUGljdHVyZTogUmljaGFyZCBKdXBlCk5vIGluZGljdG1lbnQgb2YgaGVyIGFzIHBlcnNvbi4gClRoaXMgc2hvdWxkIGdldCB5b3Ugc3RhcnRlZCwgYW5kIGFzIGxvbmcgYXMgeW91IHN0YXkgb24gdG9wIG9mIHlvdXIgZm9ybXMgZXRjLCB5b3Ugc2hvdWxkIGJlIGZpbmUuIEkgYmVsaWV2ZSB5b3UgY2FuIGNvb3JkaW5hdGUgdGhpcyBzaWRlIHdpdGggVHJhY3kgSG9mZm1hbiBhcyB3ZWxsLi4gCkkgb25seSBmaW5hbGx5IGZpZ3VyZWQgb3V0IHRoYXQgYSBzcXVhdHRlciB3YXMgbGl2aW5nIHVwIHRoZXJlIGFmdGVyIEkgcmVzY3VlZCBhIGRvZy4gVGhlIGF0dGljIGhhZCBhbHdheXMgYmVlbiBsb2NrZWQgZnJvbSB0aGUgaW5zaWRlIGFuZCBpdCBuZXZlciBjcm9zc2VkIG15IG1pbmQgdGhhdCBzb21lb25lIGNvdWxkIGJlIHNxdWF0dGluZy4gCkl0IHJlcXVpcmVzIHByZW1pdW0gZ2FzIGFuZCBmYW5jeSBoaWdoIHBlcmZvcm1hbmNlIHRpcmVzLiBJdCB3YXMgbGl0ZXJhbGx5IGRlc2lnbmVkIGZvciByYWNpbmcgb3JpZ2luYWxseSwgYW5kIHlvdSBjYW4gc3RpbGwgZ2V0IHRoZSBKb2huIENvb3BlciBXb3JrcyB1cGdyYWRlcyBmb3IgdGhhdCBzYW1lIHB1cnBvc2Ugb24gdG9kYXkgbW9kZWxzLiAKTGV0J3Mgc2F5IHlvdSB3YW50IHRvIGVzdGltYXRlIGZlYXR1cmVzIGluIGhvdXJzLCBzbyBhIGZlYXR1cmUgdGhhdCBoYXMgYW4gZXN0aW1hdGUgb2YgNCB3aWxsIHRha2UgNCBob3VycyB0byBjb21wbGV0ZSwgYnkgb25lIHBlcnNvbiwgc28geW91IGFzc2lnbiBzdWNoIGFuIGVzdGltYXRlIHRvIGFsbCB0aGUgZmVhdHVyZXMuIApTdGFuZGluZyBpbiB0aGUgZG9vcndheSwgSmFjayBwYXVzZWQgZm9yIGEgbW9tZW50LiBJdCB3YXMgbGlrZSBjcm9zc2luZ292ZXIgaW50byBhbm90aGVyIGRpbWVuc2lvbiwgYSBsZWFwIHRocm91Z2ggc3BhY2UgYW5kIHRpbWUuIFRoZSBob3VzZXdhcyBleGFjdGx5IGFzIGhlIHJlbWVtYmVyZWQuIEV2ZXJ5IHN0ZXAgaGVsZCBtZW1vcmllcy4gRXZlcnkgcGljdHVyZSxldmVyeSBwaWVjZSBvZiBmdXJuaXR1cmUuIEphY2sgc3RvcHBlZCBzdWRkZW5seSB3cm9uZywgSmFjaz8gaGlzIE1vbSBhc2tlZC4KSXQgdG9vayBtZSA1IG1vbnRocyB0byBsZWFybiBob3cgdG8gZmFsbCBhc2xlZXAgYW5kIHN0YXkgb24gbXkgYmFjaywgc28gcGVyc2lzdGVuY2UgaXMgdGhlIGtleS4gTW9yZSBwaWxsb3dzIHVuZGVyIHlvdXIga25lZXMgb3IgcGxhY2luZyB5b3VyIGFybXMgYXJvdW5kIGEgcGlsbG93IG9uIHlvdXIgY2hlc3QgaGVscGVkIG1lLCBhcyBkaWQgInByYWN0aWNpbmciIHdoZW4gSSBkaWRuJ3QgaGF2ZSB0byBnZXQgdXAgZWFybHkgdGhlIG5leHQgbW9ybmluZy4gCkJ1dCBpbWFnaW5lIGhvdyBzaG9ja2VkIEkgd2FzIHRvIGZpbmQgb3V0IHRoYXQgSSBoYWQgYmVlbiBzcGVlZGluZyBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCBhbiBob3VyIGxhdGVyIEkgd2FzIGJlaW5nIHB1bGxlZCBvdmVyIGZvciBpdCEgSW4gdHlwaWNhbCBNaWRkbGUgRWFzdGVybiBmYXNoaW9uLCB0aGV5IGNvdWxkIG5vdCBoYXZlIGJlZW4gbmljZXIgYW5kIGV2ZW4gYWZ0ZXIgd2UgcGFpZCB0aGUgJDIwIHRpY2tldCB3ZSB3ZXJlIGFsbCBmcmllbmRzLCB3YXZpbmcgYW5kIHNtaWxpbmcuLiAKRHVyaW5nIG9uZSBvZiBoaXMgcHJldmlvdXMgaW50ZXJ2aWV3cywgRW1yYWFuIGhpbXNlbGYgc2hhcmVkIHRoaXMgaW5mb3JtYXRpb24gYW5kIHRoZSByZWFzb24gYmVoaW5kIGl0LiAKVG8gbWUgdGhlIHZhbHVlIG9mIHRoaXMgaXMgdGhhdCB0aGVzZSBzb2NpYWwgbWVkaWEgcGxhdGZvcm1zIGFyZSBzdGlsbCBmYWlsaW5nIGFuZCB0aGUgcmVwbGFjZW1lbnRzIGFyZSBiZWluZyBib3VnaHQgbm90IG1hZGUuIFRoZXJlIHdhcyB0aGlzIHNlbnRpbWVudCA1IHllYXJzIGFnbyB0aGF0IGZhY2Vib29rIGdvdCBpdCByaWdodCBhbmQgdGhhdCBpdCBoYWQgaW50ZWdyYXRlZCBlbm91Z2ggdG8gYmUgYSBtb2Rlcm4gZml4dHVyZS4gVGhpcyBnb2VzIHRvIHNob3cgdGhhdCBzb2NpYWwgbWVkaWEgaGVnZW1vbnkgaXNuIHF1aXRlIGEgdGhpbmcgeWV0LgpFdmVyeW9uZSBzdGFydHMgd2l0aCAxLDAwMCBpbiB0b3VybmFtZW50IGNoaXBzLCBhbmQgdGhlIGJsaW5kcyBzdGFydCBhdCAxMC8yMCAobWVhbmluZyAkMTAgZm9yIHRoZSBzbWFsbCBibGluZCBhbmQgJDIwIGZvciB0aGUgYmlnIGJsaW5kKS4gVGhlIGJpZyBhbmQgc21hbGwgYmxpbmRzIGFyZSBmb3JjZWQgYmV0cyBkZXNpZ25lZCB0byBwdXQgc29tZSBtb25leSBhdCBzdGFrZSBhbmQgc3RpbXVsYXRlIGJldHRpbmcuIApCYXRocm9vbXMgZmVhdHVyZSBzb2FrZXIgdHVicywgZnJhbWVsZXNzIGdsYXNzIHNob3dlcnMgYW5kIGxhcmdlIGZvcm1hdCB3YWxsIGFuZCBmbG9vciB0aWxlcy4uIApUaGUgb25lIGZvb2QgaXRlbSBJIHdpc2hlZCBJIGhhZCB3aGlsZSB0aGVyZSB3YXMgcGVhbnV0IGJ1dHRlciEgSXQgd291bGQgaGF2ZSBiZWVuIHdvcnRoIHRoZSB3ZWlnaHQvc3BhY2UgaW4gbXkgYmFnIHRvIGJyaW5nIGl0Li4gCkNsaWNrIG9uICdEZWFsJyBhbmQgZml2ZSBjYXJkcyB3aWxsIGFwcGVhciBvbiB5b3VyIHNjcmVlbi4gCk5pIGlzIHNsdW1wZWQgb24gdGhlIGZsb29yIG9mIHRoZSBiYW1ib28gaHV0LiBMZWdzIGNyb3NzZWQgYW5kIGFybXMgZm9sZGVkLiAKQXMgZm9yIHRoZSBjb3BzL2NpdmlsaWFucyByYW1taW5nIHRoZWlyIGNhcnMgYXQgT2wgUmV4IGFua2xlcy4gSSBnb3QgYSBsaXR0bGUgdGFsZS4KSnVzdCAzMCBkYXlzIGFnbyB5b3Ugd2VyZSBhbGwgYnVtbWVkIGFib3V0IGxvc2luZyBhdCAxLzIgSG9sZCBhbmQgdGhlbiBoaXR0aW5nIGEgc2xvdCB3aW4gZm9yICQxMjAwIHNvIHlvdSBjb3VsZCB0YWtlIGl0IHRvIGEgZGlzcGVuc2FyeSBzaW5jZSB5b3Ugd2VyZSBzbyBzdG9rZWQgZm9yIHRoZSBiaWcgd2luIFlvdSBkZWxldGVkIHRoYXQgdGhyZWFkIGluIHRoZSBsYXN0IGhvdXIuIApIZSBpcyBqdXN0IHRoZSBtb3N0IHBhdGhldGljYWxseSByaWRpY3Vsb3VzLiBPbiBiZWhhbGYgb2YgaGlzIFppb25pc3QgY291c2lucywgaGUgaXMganVzdCBlbGF0ZWQgdG8gc2VlIGEgU2F1ZGkgcHJpbmNlIG9ic2VxdWlvdXMgdG8gd2hpdGUgY29sb25pYWxpc3RzLCB3aGlsZSBib21iaW5nIGFuZCBzdGFydmluZyB0aGUgWWVtZW5pIG5hdGl2ZXMgdG8gZGVhdGguLiAKRGVzaWduOiBXZSBleGFtaW5lZCA3NjY0IGFkdWx0IHBhcnRpY2lwYW50cyBmcmVlIG9mIGtub3duIGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UgaW4gdGhlIFByZXZlbnRpb24gb2YgUmVuYWwgYW5kIFZhc2N1bGFyIEVuZCBTdGFnZSBEaXNlYXNlIChQUkVWRU5EKSBzdHVkeSBhIHByb3NwZWN0aXZlIHBvcHVsYXRpb24gYmFzZWQgY29ob3J0IHN0dWR5LiBVcmluYXJ5IG1hZ25lc2l1bSBleGNyZXRpb24gd2FzIG1lYXN1cmVkIGluIDIgYmFzZWxpbmUgMjQgaCB1cmluZSBjb2xsZWN0aW9ucy4KSW4gMjAwNSwgU2hpcG1hbiwgYSBkaXNxdWFsaWZpZWQgZHJpdmVyLCBzdG9sZSBhIHBpY2t1cCB0cnVjayBpbiBIYWdlcnN2aWxsZSBhbmQsIHdoZW4gU2l4IE5hdGlvbnMgUG9saWNlIHNwb3R0ZWQgaGltLCBoaXQgYSBwYXJrZWQgYm9hdCBhbmQgYSB0cmVlIGJlZm9yZSBiZWluZyBjaGFzZWQgZG93biBieSB0aGUgY29wcy4KRGFucyBjZSBjYWRyZSwgZWxsZSBhIHBvdXIgbWlzc2lvbiBkZSBwcnZlbmlyIGxlIGpldSAiZXhjZXNzaWYiIGV0IGxlcyByaXNxdWVzIGQnYWRkaWN0aW9uLi4gCldpdGgnbGVkZ2luZycsIHlvdSB1c2UgYSBzbWFsbCB1bmlzZXggdmlicmF0b3IsIGFsc28ga25vd24gYXMgYSAnYnVsbGV0JyB0byB0aWNrbGUgeW91ciBob3Qgc3BvdHMgdW50aWwgeW91J3JlIG5lYXIgdG8gY2xpbWF4LCB0aGVuIHRha2UgdGhlIHRveSBvZmYgeW91ciBib2R5IGFuZCBwYXNzIGl0IHRvIHlvdXIgcGFydG5lciB3aGlsZSB5b3UgY29vbCBkb3duLCBlZGdpbmcgYXMgYSBwYWlyLgpBZHVsdCBDb250aW51aW5nIEVkdWNhdGlvbgoiVG8gYmUgYSBtZW50YWwgcGF0aWVudCBpcyBub3QgdG8gZGllLCBldmVuIGlmIHlvdSB3YW50IHRvICAgYW5kIG5vdCBjcnksIGFuZCBub3QgaHVydCwgYW5kIG5vdCBiZSBzY2FyZWQsIGFuZCBub3QgYmUgYW5ncnksIGFuZCBub3QgYmUgdnVsbmVyYWJsZSwgYW5kIG5vdCB0byBsYXVnaCB0b28gbG91ZCAgIGJlY2F1c2UsIGlmIHlvdSBkbywgeW91IG9ubHkgcHJvdmUgdGhhdCB5b3UgYXJlIGEgbWVudGFsIHBhdGllbnQgZXZlbiBpZiB5b3UgYXJlIG5vdC4iICBSYWUgVW56aWNrZXIgIDE5ODQgQSBsb25ndGltZSBjaXZpbCByaWdodHMgYWR2b2NhdGUgYW5kIG1lbWJlciBvZiB0aGUgTmF0aW9uYWwgQ291bmNpbCBvbiBEaXNhYmlsaXR5IHN0YXJpbmcgaW4gMTk5NQpJIGRpZCBmaW5kIGEgc2ltaWxhciBvbmUgb24gQW1hem9uLCBhbmQgdGhlIGNvbXBhbnkgaXMgNDAgeWVhcnMgb2xkLCBzbyB5b3VycyBjb3VsZCBiZSBhbiBvbGRlciB2ZXJzaW9uIG9mIHRoaXM6LiAKSW4gaGlzIHNlY29uZCBzZWFzb24gd2l0aCB0aGUgY2x1YiwgQWxsZWdyaSB3YXMgcHJhaXNlZCBmb3IgcmVidWlsZGluZyB0aGUgdGVhbSBmb2xsb3dpbmcgdGhlIGRlcGFydHVyZSBvZiBzZXZlcmFsIGtleSBwbGF5ZXJzLCBzdWNoIGFzIFBpcmxvLCBWaWRhbCBhbmQgVGV2ZXo7IGFuZCBmb3IgaGlzIHJvbGUgaW4gaW5zcGlyaW5nIEp1dmVudHVzIHRvIGEgY29tZWJhY2sgdG8gZGVmZW5kIHRoZSBsZWFndWUgdGl0bGUsIHdoaWNoIGluY2x1ZGVkIGEgMTUgbWF0Y2ggd2lubmluZyBzdHJlYWsgYWZ0ZXIgYSBuZWdhdGl2ZSBzdGFydC4gQWx0aG91Z2ggYSAxIDAgZGVmZWF0IHRvIFNhc3N1b2xvIG9uIDI4IE9jdG9iZXIgMjAxNSBsZWZ0IHRoZW0gaW4gMTJ0aCBwbGFjZSwgMTEgcG9pbnRzIGZyb20gdGhlIHRvcCBvZiB0aGUgdGFibGUgYWZ0ZXIgdGhlaXIgZmlyc3QgMTAgbGVhZ3VlIG1hdGNoZXMsIEp1dmVudHVzIHdlbnQgdW5iZWF0ZW4gaW4gdGhlaXIgbmV4dCAyNSBmaXh0dXJlcywgd2lubmluZyAyNCBvZiB0aGVtIGFuZCBmaW5pc2hlZCB0aGUgc2Vhc29uIGFzIDIwMTUgMTYgU2VyaWUgQSBjaGFtcGlvbnMgd2l0aCB0aHJlZSBnYW1lcyB0byBzcGFyZS4gCkFydW0gZ2l2ZXMgUGFjIG9wdGlvbnMsIGFuZCBQYWNxdWlhbyBwaWNrcyBhbmQgY2hvb3NlcyB3aG8gaGUgd2FudHMgdG8gZmlnaHQgYmFzZWQgb24gcmlzaywgZmluYW5jaWFsIHJld2FyZCwgYW5kIG5hbWUgcmVjb2duaXRpb24uIApQZW9wbGUgZXhwZXJpZW5jZSBjb25zY2lvdXMgZXBpc29kZXMgb2Ygc2xlZXAgcGFyYWx5c2lzIHdoZW4gdGhleSd2ZSB3b2tlbiB1cCwgYnV0IHRoZWlyIGJyYWluIGhhc24ndCBjYXVnaHQgdXAgdG8gdGhlIGZhY3QgdGhleSdyZSBhd2FrZSwgc28gUkVNIHNsZWVwIHN0aWxsIGNvbnRpbnVlcyBhbmQgeW91IHJlbWFpbiBwYXJhbHl6ZWQsIGJ1dCBhd2FrZSwgYW5kIHNvbWV0aW1lcyBoYWxsdWNpbmF0aW5nLiAKVGhpcyBpcyBhY3RpdmUgZHV0eSwgdGhleSBhcmUgdW5kZXIgTmF2eSBtZWRpY2FsLiAKSSBnbyB0byBzbGVlcCBhdCBuaWdodCB0aGlua2luZyBhYm91dCB0aGUgY2FzZS4gTXVsbCBvdmVyIGl0IHdoZW4gSSB3YWtlIHVwLiBJdCBzZWVtcyB0byBtZSB0aGF0IGluIEFiZXJuZXRoeSBibGFuZCBhbmQgZnVuY3Rpb25hbCBjb3VydHJvb20gKGZsZWNrZWQgYmx1ZSBjYXJwZXQsIGEgYmxvbmQgd29vZCBiYXIgdGFibGUsIHJvd3Mgb2YgbGlnaHRzIHJlY2Vzc2VkIGludG8gYSBsb3cgY2VpbGluZykgYSBjb21wbGV0ZWx5IGNvbXBlbGxpbmcgaHVtYW4gZHJhbWEgaXMgdW5mb2xkaW5nLiAKSFNTOiBNQVNTQUdFLCBSRUlLSSBBTkQgUE9MQVJJVFkgSE9XIERPIFlPVSBERUNJREUgV0hJQ0ggTU9EQUxJVFkgVE8gVVNFP0kgdXNlIGEgbG90IG9mIGludHVpdGlvbiB3aXRoIG15IHdvcmsuIEkgY2FuIGxvb2sgYXQgc29tZW9uZSBhbmQgZGV0ZXJtaW5lIHdoZXJlIGFuZCB3aGF0IHRoZXkgbmVlZCB0byBiYWxhbmNlIHRoZWlyIGVuZXJneSBhbmQgY2xlYXIgYW55IGJsb2NrYWdlcy4gU29tZXRpbWVzIEkgdXNlIGEgY29tYmluYXRpb24uIEkgbG92ZSB0aGF0IQpVc3VhbGx5LCB5b3UnbGwgaGF2ZSB0byBjb21wbGV0ZSBhIHNob3J0IHRyYWluaW5nIHByb2dyYW0sIHdoaWNoIHlvdSBtaWdodCBiZSBhYmxlIHRvIGNvbXBsZXRlIGF0IGhvbWUsIGFuZCB0aGVuIHBhc3MgYW4gZXhhbSBmb3Igbm90YXJ5IHB1YmxpYyBsaWNlbnNpbmcuIFlvdSBjYW4gc2VlayBsaWNlbnNpbmcgaW5mb3JtYXRpb24gZnJvbSB5b3VyIHN0YXRlJ3MgY291cnQgcmVwb3J0aW5nIGJvYXJkIG9yIGEgc2ltaWxhciBhZ2VuY3kuIApZb3Ugc2l0IHRoZXJlIGZvciBob3VycyB3YWl0aW5nIGZvciB0d28gQWNlcywgYW5kIHdoZW4gSSBnb3QgdGhlbSBJIHRocmV3IHRoZW0gc3RyYWlnaHQgaW4gdGhlIG11Y2ssIGJlY2F1c2UgSSBoYWQgdG8gZmluaXNoIGluIHRoZSBtb25leS4uIApIb3dldmVyLCBpZiBtb3JlIHRoYW4gcGVyc29uIGhhcyBpdCwgdGhlIHdpbm5lciBpcyBkZXRlcm1pbmVkIGJ5IHRoZSByYW5raW5nIG9mIHRoZSBmaXJzdCBzZXQgY29tcG9zZWQgb2YgdGhyZWUuIApBbHNvIEkgd2VudCBpbnRvIGZyZWUgcGxheSBhIGxvdCBtb3JlIHRvIGRvIHdvcmxkIGV2ZW50cyBhbmQgY29sbGVjdCBtYXRzLiAKSSB3YXMgaW4gdGhlIHNhbWUgc2l0dWF0aW9uIChFMiB0byBGMikgYW5kIEkgZ290IDAgcG9pbnRzIGZvciB0YXggYW5kIHByb2Zlc3Npb25hbCBleHBlcmllbmNlIGFuZCBpdCBjYW1lIG91dCB0byBleGFjdGx5IDgwIHBvaW50cyB3aXRoIDEgb2YgdGhvc2UgcG9pbnRzIGZyb20gNTAgaG91cnMgb2Ygdm9sdW50ZWVyaW5nLi4gCk1vc3Qgb2YgdGhlIHBsYXllcnMgd2hvIHJldHVybmVkIGZyb20gaW5qdXJ5IGhhdmUgYmVlbiBwbGF5aW5nIHBvb3JseSBzaW5jZSB0aGV5IHJldHVybmVkLCBtb3N0IG5vdGljZWFibHkgRm9yc2JlcmcuIAoiQW1lcmljYSIgaXMgbm90IG9uZSBwZXJzb24uIFRoZSBwcmVzaWRlbnQgY2hhbmdlcyBldmVyeSA0IHRvIDggeWVhcnMuIFRoZXJlIGFyZSBnb3Zlcm5tZW50cyBhdCBldmVyeSBsZXZlbCBmcm9tIGNpdHksIHRvIGNvdW50eSwgdG8gc3RhdGUgYW5kIHRoZXkgY291bGQgYWxsIGZ1bmRhbWVudGFsbHkgZGlzYWdyZWUgb24gaG93IHRvIGJlc3QgcnVuIHRoZWlyIG5lY2sgb2YgdGhlIHdvb2RzLiAKU21hbGwgYnVzaW5lc3MgdGF4IGN1dHMgKHdoaWNoIGFyZSBhY3Jvc3MgdGhlIGJvYXJkKS4gCkJ1dCAxMSBvZiB0aGVpciBmaW5hbCAxNCBnYW1lcyBhcmUgYWdhaW5zdCBXZXN0ZXJuIENvbmZlcmVuY2UgdGVhbXMsIGFuZCBzaXggb2YgdGhvc2UgYXJlIGF0IGhvbWUuCkluIGNhc2UgeW91IGhhdmUgYSBoYW5kIG9mIEtpbmdzIG9yIGJldHRlciwgeW91IHdpbGwgYmUgYXdhcmRlZCBhIHByaXplIGFjY29yZGluZyB0byB0aGUgUGF5dGFibGUuIApDb21lIGluIGFuZCBtZWV0IG91ciBORVcgbWFzc2FnZSB0aGVyYXBpc3QgTWFyeVRvIGFsbCBvdXIgbG95YWwgbWFzc2FnZSBjbGllbnRzIHdlIGFyZSBub3cgb2ZmZXJpbmcgZGlzY291bnQgcHJvZ3JhbS4gCkMnZXN0IGltcG9ydGFudCBwb3VyIGx1aSBlbiB0YW50IHF1ZSBjaGVmIGNhciBpbCBlc3RpbWUgcXVlIGxlcyBkZXV4IGV4dHJtaXRzIGR1IHJlcGFzIGRvaXZlbnQgdHJlIGZvcnRlcy4gCkVtaWx5IFN0cmF1YmUgb2YgTG9zIEFuZydlbGVzIGFuZCBFZC4gClRoaXMgc2l0dWF0aW9uIEkgd291bGQgYmV0IDEvMyBwb3QgZm9sZCB0byBhIGphbSB1bmxlc3MgdmlsbGFpbiBibHVmZiByYWlzZXMgcml2ZXJzIGF0IGEgdmVyeSBoaWdoIHJhdGUgd2hpY2ggaW4gMS8yIGlzIGEgbW9zdCBuZXZlciB0aGUgY2FzZS4gSW4gZmFjdCwgaWYgaGUgcmFpc2VzIHlvdSBvbiB0aGUgcml2ZXIgeW91IGNhbiBleHBlY3QgaGltIHRvIGhhdmUgaXQgYWx3YXlzLiBJIG1lYW4gamFtbWluZyBmb3IgdmFsdWUgaXMgYW4gb3B0aW9uIGJ1dCBJIGRvbid0IHRoaW5rIGhlJ3MgY2FsbGluZyB5b3VyIGphbSB3aXRoIGFuIG92ZXIgcGFpciAoaGlzIG1vc3QgbGlrZWx5IGhvbGRpbmcgYmVzaWRlcyBBSy9BUSkgdW5sZXNzIGhlIGhhcyB0aGUgQWhBeC4gT3RoZXJ3aXNlIGFuIGFsbCBpbiBsaW1pdHMgaGltIHRvIGZ1bGwgaG91c2VzIGFuZCBiZXR0ZXIgZmx1c2hlcy4gSGUgY291bGQgbWF5YmUgY2FsbCB3aXRoIHN0cmFpZ2h0cyBidXQgaGUgd291bGQgaGF2ZSB2ZXJ5IGZldyBvZiB0aGVtIGNvbXBhcmVkIHRvIGhpcyBvdmVyIHBhaXJzIGFuZCBhbmQgQUsuCkkgd291bGQgd2FpdCAyIHdlZWtzIGJlZm9yZSBjYWxsaW5nIHlvdXIgZG9jdG9yLiBJbiBteSBleHBlcmllbmNlIDIgd2Vla3MgMSBtb250aCBpcyBob3cgbG9uZyB0aGV5IGxpa2UgdG8gc2VlIGJlZm9yZSBjaGFuZ2luZyBhIG1lZC4gSSB3b3VsZCByZWNjb21lbmQgY2FsbGluZyB0aGVtIGFuZCAxMCBtZyAyeCBwZXIgZGF5IGlzIGEgbG93ZXIgZW5kIGRvc2Ugc3VpdGFibGUgZm9yIGEgY2hpbGQuIApJZiB5b3VyIG9wcG9uZW50IGlzIHRoZSB2aWN0aW0sIGxldCB5b3VyIGNvbnNjaWVuY2UgYmUgeW91ciBndWlkZTsgbWFueSBzZWUgbm8gZXRoaWNhbCBkaWxlbW1hIGluIHJlbWFpbmluZyBzaWxlbnQuIApQYWNrYWdlIERlYWxzQ2FzaW5vIGhvdGVscyB0eXBpY2FsbHkgZ2l2ZSBmcmVlIHJvb21zICAgYW5kIGEgaG9zdCBvZiBvdGhlciBmcmVlYmllcyBsaWtlIHJlc3RhdXJhbnQgbWVhbHMgICB0byBmYXZvcmVkIGdhbWJsZXJzLiBUaGVzZSBmcmVlYmllcyBhcmUgcmVmZXJyZWQgdG8gYXMgImNvbXBzLiIgQ2FzaW5vcyBoYXZlIHN5c3RlbXMgaW4gcGxhY2UgdG8gaWRlbnRpZnkgdGhlIHBsYXllcnMgd2hvIHdhcnJhbnQgcmVjZWl2aW5nIHRoZW0sIGFuZCB0aGV5IHJld2FyZCB0aGVtIGFjY29yZGluZ2x5IHNvIHRoZXkga2VlcCBjb21pbmcgYmFjayB0byB3YWdlciB0aGVpciBkb2xsYXJzLiAKU21hbGxwYXVsMTk4MCAgMTkgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpXZWxsIHRoZXJlIGlzIG5vdCBtdWNoIHN0cmF0ZWd5IGZvciBjb3J2ZXR0ZSBjbGFzcyBhbmQgeW91IHNob3VsZCBhZHZhbmNlIHBhc3MgdGhlIHVzZWZ1bG5lc3Mgb2YgaXQgcXVpdGUgZmFzdC4gClNvLCBpZiB5b3UgaW1hZ2luZWQgc29tZSBjcmF6eSBzaGVuYW5pZ2FucyBpbnZvbHZpbmcgYSBjcmFuZSwgcm9wZXMsIGJveGVzIGFuZCBuZXRzLCBub3cgeW91IGNhbiEgU28sIGluc3RlYWQgb2YgdGhlIGNvbmZsaWN0IGdvaW5nIHN0cmFpZ2h0IHRvIGluaXRpYXRpdmUgYXR0YWNrIGF0dGFjayBjYXN0IHNwZWxsIHlvdSBjYW4gZG8gc29tZXRoaW5nIGVsc2UgZW50aXJlbHksIHRoYXQgd2lsbCBtYWtlIGZvciBhIG11Y2ggbW9yZSBpbnRlcmVzdGluZyBlbmNvdW50ZXIuIEkgd2lsbCBnaXZlIGl0IHRoZSBzYW1lIG1lY2hhbmljYWwgZWZmZWN0aXZlbmVzcyBhcyBjYXN0aW5nIHNwZWxscyBvciBzd2luZ2luZyBzd29yZHMuClRoYXQgYmVpbmcgc2FpZCwgdGhlIHByb2Nlc3MgaXMgZGlmZmVyZW50IGZvciBldmVyeW9uZS4gRmlyc3QgdGhpbmcgeW91IHNob3VsZCBiZSBkb2luZyBpcyBldmFsdWF0aW5nIHRoZSB0YWJsZSBhbmQgc2VlaW5nIGhvdyBhIHN0YW5kYXJkIHBsYXllciBhdCB0aGVzZSBjYXNoIGdhbWVzIHBsYXlzLiBBcmUgdGhleSBvcGVuaW5nIHdlYWtlciBoYW5kcz8gQXJlIHRoZXkgY2FsbGluZyBsaWdodD8gQXJlIHRoZSBmb2xkaW5nIHRvbyBtdWNoPyBFdGMsIGV0Yy4gRXZlcnkgcG9rZXIgcGxheWVyIHNlZXMgZmxhd3MgaW4gb3RoZXIgZ2FtZXMgYmV0dGVyIHRoYW4gdGhlaXIgb3duLiBCdXQgc2VlaW5nIHRoZWlyIGZsYXdzIHdpbGwgaGVscCB5b3UgcmVjb2duaXplIHlvdXIgZmxhd3MuCkkga25vdyB0aGF0IGtpbmQgb2YgdmFndWUsIHNvIGxldCBtZSBnaXZlIHNvbWUgZXhhbXBsZXMuIApJdCBhIHNpZGVzaG93IHNvIGRhbmdlcm91cyB0aGVyZSBhcmUgb25seSBhIGZldyBkb3plbiBmdWxsIHRpbWUgcHJvZmVzc2lvbmFscywgYWNjb3JkaW5nIHRvIHRyYWRlIGFzc29jaWF0aW9uIFN3b3JkIFN3YWxsb3dlcnMgQXNzb2NpYXRpb24gSW50ZXJuYXRpb25hbCAoU1NBSSkuIApXaHkgZG8gd29tZW4gc3RheSB3aXRoIGFidXNpdmUgbWVuPyBCZWNhdXNlIHRoZXkgYXJlIG1hc3RlcmZ1bCBhdCBtYW5pcHVsYXRpbmcgd29tZW4gaW50byBkaXN0cnVzdGluZyBldmVyeW9uZSBidXQgdGhlIGFidXNlciwgaXNvbGF0aW5nIHRoZW0sIGFuZCBkZXN0cm95aW5nIHRoZWlyIHNlbGYgZXN0ZWVtLiBTaGUgZWl0aGVyIGNvbXBsZXRlbHkgYmVhdGVuIGRvd24sIG9yIGEgbmFyY2lzc2lzdGljIHBzeWNob3BhdGguIApBIGwgZnJhaXMsIGxhIGJlcmNlIGNvbW11bmUgcGV1dCBwYXJmb2lzIHByb3ZvcXVlciBkZXMgaXJyaXRhdGlvbnMsIGRlcyB2c2ljdWxlcyBkb3Vsb3VyZXVzZXMsIGRlcyBkZXJtaXRlcyBkZSBjb250YWN0IChkZXJtYXRpdGUgZGVzIHBycyBwYXIgZXhlbXBsZSkgY2hleiBsZXMgcGVyc29ubmVzIHNlbnNpYmxlcy4gVG91cyBsZXMgbW90cyBwYXNzcyBlbiBncmFzIHNvbnQgZCBpbHMgcGVybWV0dGVudCB1bmUgbnVhbmNlIGV0IHZpdGVudCBhdXRhbnQgcXVlIGZhaXJlIHNlIHBldXQgZGUgY3JvaXNlciBsYSByb3V0ZSBkZSBwcm9wb3MgZXh0cm1pc3RlcywgZG9ubmFudCBsIHF1ZSBjZWxhIHNlIHBhc3NlIHRvdWpvdXJzIGFpbnNpIGNoZXogdG91cyBsZSBtb25kZS4gCklmIHlvdSdyZSBhIGhhcmRjb3JlIHBva2VyIGVudGh1c2lhc3QgYW5kIHdhbnQgdG8gcGxheSBvbiBhIHByb2Zlc3Npb25hbCBwb2tlciBnYW1lIHRhYmxlIHRoYXQgdGhlIHByb3MgaW4gVmVnYXMgcGxheSBvbiwgdGhlbiB5b3UgY291bGRuJ3QgYXNrIGZvciBhIGJldHRlciBwb2tlciB0YWJsZSB0aGF0J3MgZ29pbmcgZm9yIGEgY2hlYXAgcHJpY2Ugb25saW5lLiAKSSBkb24gc3VwcG9ydCBUcnVtcCwgYnV0IEkgY2FuIHRvdGFsbHkgc2VlIGhvdyBoZSBjYW4gdXNlIHRoZXNlIGlzc3VlcyB0byBpbnZhbGlkYXRlIGFueXRoaW5nIENvaGVuIHNheXMgdGhhdCBjYW4gYmUgaW5kZXBlbmRlbnRseSB2ZXJpZmllZC4gSXQgY2FuIGNsZWFybHkgYmUgdXNlZCB0byBnYWx2YW5pemUgaGlzIGJhc2UgYWdhaW5zdCBhbGwgb2YgdGhlIHRlc3RpbW9ueS4gCkN1cmlvdXMgd2hhdCBwb3NpdGlvbnMgdGhleSBoYXZlIHRoYXQgd291bGQgcmVxdWlyZSBtb3JlIHRoYW4gNTIgaG91cnMgb2Ygd29yayBhIHdlZWsgYnV0IHdoaWNoIGNvdWxkbiBiZSBzb2x2ZWQgYnkgaGlyaW5nIG5ldyBlbXBsb3llZXMuIEZvciBhY2NvdW50YW50cyBJIGtub3cgdGhhdCB0YXggc2Vhc29uIGxlYWRzIHRvIHNlcmlvdXMgb3ZlcnRpbWUgYnV0IGRvbiBrbm93IGlmIGJhbmtzIHNlZSBhIHNpbWlsYXIgc2l0dWF0aW9uLiBBbWVyaWNhJ3MgdW51c3VhbGx5IGhpZ2ggaW5jb21lIGluZXF1YWxpdHkgYWxzbyBtZWFucyBtb3ZpbmcgdXAgdGhlIHBheSBzY2FsZSBjYW4gZmVlbCBwYXJ0aWN1bGFybHkgdXJnZW50LiAKVGhpcyB5ZWFyR29vZGJ5ZSBmcmllbmQsIEkgcGxlYXNlIGhvcGUuIApUaGUgc2V0dXAgZm9yIGEgY291cGxlcyBtYXNzYWdlIGlzIHByZXR0eSBzdGFuZGFyZDogTWFzc2FnZSB0YWJsZXMgYXJlIHBsYWNlZCBuZXh0IHRvIGVhY2ggb3RoZXIgaW4gYSAiY291cGxlcyBzdWl0ZSIgc28geW91IGFuZCB5b3VyIGxhZHkgY2FuIGdldCBtYXNzYWdlcyBhdCB0aGUgc2FtZSB0aW1lLiBBdCBzb21lIHNwYXMsIHRoZSBtYXNzZXVzZXMgd2lsbCBkbyBhIGNob3Jlb2dyYXBoZWQgbWFzc2FnZSBzbyBib3RoIHBlb3BsZSBnZXQgdGhlIHNhbWUgZXhwZXJpZW5jZSBhdCB0aGUgc2FtZSB0aW1lLiAKVGhleSBhbHNvIGNyYWNrZWQgdGhlIGNlbnRlciBjb25zb2xlL2Rhc2hib2FyZCBob3VzaW5nIHdoZW4gdGhleSByZW1vdmVkIHRoZSBzY3JlZW4gYW5kIGRpZG4gZmVzcyB1cCB0byBpdC4gQ2hyeXNsZXIgd2FzIHN1cGVyIHNoYWR5IGFuZCBkaWRuIGluZm9ybSBteSBwYXJlbnRzIHRoYXQgdGhlaXIgMjAxNyBQYWNpZmljYSB3YXMgZnJvbSB0aGUgMXN0IGhhbGYgb2YgMjAxNyBhbmQgdGhlcmVmb3JlIGRpZG4gaGF2ZSB0aGUga2ljayB0byBvcGVuIGRvb3JzLCBvciB0aGUgVUNvbm5lY3Qgd2l0aCBBcHBsZSBDYXJQbGF5IGxpa2UgdGhlIDJuZCBoYWxmIG9mIDIwMTcgbW9kZWxzIGhhZCwgYnV0IHRoYXQgbm90IHJlY2FsbCByZWxhdGVkLi4gCkR1Y2tEcmFnb24gdQpUaGUgYmVzdCB3YXkgdG8gcHJldmVudCBhIGhhbmduYWlsIGlzIHRvIHRha2UgY2FyZSBvZiB5b3VyIGhhbmRzLiAKTWFueSBoYXZlIHVzZWQgdGhlIGh1bGxhYmFsb28gb3ZlciB0aGUgS2VycnkgTHVnYXIgQmlsbCB0byBjYWxsIGZvciBhIHF1aWNrIGVuZCB0byBIYXFxYW5pJ3MgY2FyZWVyIGF0IHRoZSBQYWtpc3RhbmkgRW1iYXNzeSBjb3JyZWN0bHkgcG9pbnRpbmcgb3V0IEhhcXFhbmkncyBvcmdhbmljIHJldnVsc2lvbiB0byBzb21lIG9mIHRoZSBiYXNpYyBmb3VuZGF0aW9uYWwgZWxlbWVudHMgb2YgUGFraXN0YW5pIHN0YXRlaG9vZC4gCllvdSBjYW4gbmFiIHRoaXMgc29uZyBmcm9tIHZhcmlvdXMgb3V0bGV0cy9Zb3V0dWJlLiA1MikgUG9rZXIgRmFjZS8gU3BlZWNobGVzcy8gWW91ciBTb25nIHcvIEVsdG9uIEpvaG4uIApUaGV5IGdvdCBmaXJlZCBmb3IgYmVpbmcgbm9uIGNvbXBsaWFudCBpbiB0aGVpciBjYXJlLiBZb3UgY2FuIGtlZXAgaGVscGluZyBzb21lb25lIHdobyBpcyBkZWFkc2V0IG9uIHNhYm90YWdpbmcgdGhlbXNlbHZlcy4KVGhlcmUgYXJlIGRvZyB3aG8gYXJlIHRyYWluZWQgdG8gc2VhcmNoIGZvciBsaXZpbmcgcGVvcGxlIChTZWFyY2ggYW5kIFJlc2N1ZSBkb2dzKSwgYW5kIHRoZXJlIGFyZSBjYWRhdmVyIGRvZ3Mgd2hvIGFyZSB0cmFpbmVkIHRvIHNlYXJjaCBmb3IgZGVjYXlpbmcuClBvbGVuIGhhYmVuIEp1ZGVuIGVybW9yZGV0LCBkaWUgbmFjaCBkZXIgQmVmcmVpdW5nLCBhdXMgZGVuIEtacyB6dXJja2thbWVuLiAKT24gYSBtb3JlIHBlcnNvbmFsIGxldmVsLCBiaW9zIHdpdGggYmlibGUgcXVvdGVzLCBzb25nIGx5cmljcyBvciAiREovRU5UUkVQUkVORVVSIi4gUGhvdG9zIGhvbGRpbmcgYSBmaXNoIG9yIGluIGh1bnRpbmcgZ2Vhci4gSG9sZGluZyBhIGJhYnkgYW5kIG5vdCBzcGVjaWZ5aW5nIHRoYXQgaXQgaXNuJ3QgdGhlaXJzLiAKQWNjb3JkaW5nIHRvIGUgbWFpbHMgYW1vbmcgcG9saWNlIGFuZCBwcm9zZWN1dG9ycyBvYnRhaW5lZCBieSBUaGUgTmV3cywgdGhlIGhvdXNlIGhhcyBiZWVuIGEgY29uc2lzdGVudCBzb3VyY2Ugb2YgY29tcGxhaW50cy4KTGVnb2xhZCAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCk9rYXksIHNvIGl0IGJhZCB3aGVuIHlvdSBiZWhpbmQuIEFsc28sIHRoZXJlIGFyZSBleHBlbnNpdmUgY2FyZHMgb3V0IHRoZXJlIHRoYXQgYWJzb2x1dGVseSB3aWxsIGNsYXcgeW91IGJhY2sgaW50byBhIGdhbWUgd2hlcmUgeW91IG9uIHRoZSBicmluayBvZiBsb3NpbmcuIEFueSBiaWcgY3JlYXR1cmUgY2FuIHNvbWV0aW1lcyBiZSBlbm91Z2gsIHdoZXJlYXMgdGhpcyB3aWxsIGp1c3QgYWx3YXlzIGJlIGEgc3RvbmUgYmxhbmsgYXQgd29yc3QgYW5kIGEgNiBtYW5hIGZvZyBhdCBiZXN0IHdoZW4geW91IGJlaGluZC4gClNvbWUgaW50ZXJlc3RpbmcsIGZhaXIgb2JzZXJ2YXRpb25zLiBJIGFncmVlIHdpdGggeW91IHRoZXJlIGlzIG1vcmUgdG8gc2VlIHRoYXQgaXNuIG9uIHRoZSByZWNvbW1lbmRhdGlvbiBsaXN0LCBhbmQgSSB0aGluayBhIGxvdCBvZiB0aGUgYmVzdCB0aGluZ3MgdG8gZG8gdGFrZSBhIGxpdHRsZSBtb3JlIHBsYW5uaW5nIG9yIGhlbHAgdGhhbiBpcyByZWFzb25hYmx5IGF2YWlsYWJsZSB0byBtb3N0IHBlb3BsZS4gSXQgc291bmRzIGxpa2UgeW91IHNhdyB0b28gbWFueSBtYXJrZXRzIGFuZCBwYWxhY2VzLiAKMTcgQXByIDIwMTAgLiAKVXN1YWxseSwgSSBlbmQgdXAgc3VwcG9ydGluZyBmYXIgbW9yZSB0aGFuIEkgd2FudCB0byAocGFja2FnZXMgZG9uJ3QgY2hhbmdlIGFsbCB0aGF0IG11Y2gpLCBidXQgdGhleSdyZSBub3Qgb2ZmaWNpYWxseSBzdXBwb3J0ZWQuLiAKVGhlIGZvYW0gZHJlbmNoZWQgZmFicmljcyBhbmQgdGhlIG5hdHVyYWwgaG90IHNwcmluZ3MgYmVuZWF0aCB0aGUgYmF0aGhvdXNlIGNvbWJpbmUgdG8gZ2l2ZSB5b3UgYSBkZWVwIGNsZWFuLiAKIlNvbWUgZGF5IHNvb24sIHBlcmhhcHMgaW4gZm9ydHkgeWVhcnMsIHRoZXJlIHdpbGwgYmUgbm8gb25lIGFsaXZlIHdobyBoYXMgZXZlciBrbm93biBtZS4gClRoZSBvbmx5IHBlb3BsZSB3aG8gYXJlIHJlbGV2YW50IGFyZSB0aGUgdXNlcnMgYW5kIHRoZSBtaW5lcnMsIHVzZXJzIGJlY2F1c2UgdGhleSBhcmUgdGhlIG9uZXMgd2hvIGdpdmUgdGhlIGNvaW4gdmFsdWUsIGFuZCBtaW5lcnMgYmVjYXVzZSB0aGV5IGFyZSB0aGUgb25lcyBtYWludGFpbmluZyB0aGUgc3lzdGVtLiBBbmQgYnkgaW5jZW50aXZlcywgTWluZXJzIGZvbGxvdyB0aGUgdXNlcnMgd2lzaGVzLCBvciBlbHNlIHRoZXkgcHJvZHVjZSBhIHByb2R1Y3QgdGhhdCB0aGV5IGNhbiBub3Qgc2VsbC4gCkEgdHJpYWwgb2Ygbm9uZGlhYmV0aWMgcGF0aWVudHMgYWdlZCA2NSB5ZWFycyBhbmQgb2xkZXIgZm91bmQgdGhhdCB0aG9zZSB3aG8gcmVjZWl2ZWQgNzAwIElVIG9mIHZpdGFtaW4gRCAocGx1cyBjYWxjaXVtKSBoYWQgYSBzbWFsbGVyIHJpc2UgaW4gZmFzdGluZyBwbGFzbWEgZ2x1Y29zZSBvdmVyIDMgeWVhcnMgdmVyc3VzIHRob3NlIHdobyByZWNlaXZlZCBwbGFjZWJvLlsyNF0KV291bGQgbG92ZSB0byBzZWUgdGhlIGRpYW1vbmQgd2l0aCBNYXJ0aWFsIGFuZCBSYXNoZXJzIGluIGZyb250IG9mIGhpbS4uIApQZXJoYXBzIHBlb3BsZSB3ZXJlIGp1c3QgZG9pbmcgYSBsb3Qgb2Ygc2VyZW5kaXBpdG91cyBkcml2aW5nIGFzIGFuIG9yZ2FuaXplZCBjcmV3LiBJbiBhbnkgZXZlbnQgSSBwcmV0dHkgc3VyZSB0aGF0IEkgbm90IHNlZW4gcGxhbnMgZm9yIGEgbW90b3IgbG9kZ2Ugb2YgdGhpcyBzaXplLCBhbmQgdGhvdWdodCB0byBzaGFyZSBpdCwgZmluZGluZyBpdCBpbiB0aGUgcGFnZXMgb2YgUG9wdWxhciBNZWNoYW5pY3MgZm9yIE9jdG9iZXIgMTkyMi4gCkpvc2UgaXMgYSBwaGVub21lbmFsIGZpZ2h0ZXIsIGl0IHN0aWxsIHNob3duIGluIGhpcyBtYXRjaGVzLiBCdXQgbGV0IG5vdCByZWFkIGludG8gaXQgdG9vIG11Y2ggYWJvdXQgaGlzIHR3byBsb3NzZXMgdG8gTWF4LlNheSB0aGF0IHRoZXJlIGlzIGEgNjAlIHByb2JhYmlsaXR5IHRoYXQgYW55IHJhbmRvbSBqdWRnZSB3b3VsZCBncmFudCBIb2xsb3dheSB0aGUgZGVjaXNpb24uIE5vdywgZ2l2ZW4gdGhlIGZhY3QgdGhhdCAyLzMganVkZ2VzIGdyYW50IEJlcm11ZGV6IHRoZSBkZWNpc2lvbiwgd2hhdCBpcyB0aGUgcHJvYmFiaWxpdHkgdGhhdCB0aGUgb3RoZXIgMiBqdWRnZXMgd291bGQgImNvcnJlY3QiIHRoZSBkZWNpc2lvbj9Bc3N1bWluZyBldmVyeXRoaW5nIGlzIGluZGVwZW5kZW50LCAuNiAgLjYgPSAuMzYsIHNvIG9ubHkgYSAzNiUgY2hhbmNlIG9mIGhlbHBpbmcuVGhpcyBhbGwgZmFpbHMgdG8gbWVudGlvbiB0aGF0IGp1ZGdlcyBsaWtlbHkgZG8gbm90IG1ha2UgYmFkIGRlY2lzaW9ucyBpbiBhIHZhY3V1bS4gCkl0IGNlcnRhaW5seSBmZWVscyBjb21wb3NlZCBhbmQgcGxhbnRlZCB3aGVuIGh1c3RsZWQsIGJ1dCwgZm9yIHNvbWUsIHRoZSByaWRlIG1pZ2h0IGNvbWUgb2ZmIGFzIGEgdGFkIGZpcm0uIApBZ2FpbnN0IHRoaXMgYmFja2Ryb3AsIHdoYXQgaXMgdW5mb3J0dW5hdGVseSBvdmVybG9va2VkIGFyZSBXaWxsaWFtIFNsaW0gdGFjdGljYWwgYW5kIHN0cmF0ZWdpY2FsIHRoaW5raW5nIGFuZCBza2lsbCB3aGljaCBtYWtlcyBoaW0gYSBkeW5hbWljLCBmbGV4aWJsZSwgYW5kIGZhc2NpbmF0aW5nIGNvbW1hbmRlciB0byBzdHVkeS4gU2Nob2xhcnMgd2hvIGhhdmUgc3R1ZGllZCBTbGltIHdvdWxkIGJlIGVhZ2VyIHRvIHBvaW50IG91dCBoaXMgbWFzdGVycGllY2Ugb2Ygc3RyYXRlZ3kgYW5kIHNraWxsOiBPcGVyYXRpb24gRXh0ZW5kZWQgQ2FwaXRhbC4KSW4gbXkgd29yc3QgdGltZXMgYmVmb3JlIHRoaXMgdGltZSBJIG5ldmVyIHdlbnQgb24gYSBzdHJldGNoIGxpa2UgdGhpcy4gRXZlcnl0aGluZyB0aGF0IGNvdWxkIGJvdW5jZSB0aGUgb3RoZXIgd2F5IGhhcy4gaXMgdHJ5aW5nIHRvIHN0YXkgcG9zaXRpdmUsIGJ1dCB5b3UgY2FuIHRlbGwgaXQgYm90aGVyaW5nIGhpbSBhIGJpdC4gVGhlcmUgYXJlIHN1YnRsZSBzaWducywgbGlrZSBkdXJpbmcgYSBwb3dlciBwbGF5IGRyaWxsIGluIHByYWN0aWNlIE1vbmRheSB3aGVuIGhlIHdlbnQgYWxsIGx1bWJlcmphY2sgb24gdGhlIGNyb3NzYmFyLCBzbWFzaGluZyBoaXMgc3RpY2sgaW50byBmb3VyIHBpZWNlcyBhbmQgZmlyaW5nIHRoZSByZW1haW5zIGludG8gdGhlIGVtcHR5IGJlbmNoLiBUaGVuIGhlIGdyYWJiZWQgYSBuZXcgc3RpY2ssIHVzZWQgaXQgZm9yIGEgY291cGxlIG9mIG1pbnV0ZXMgYW5kIHNtYXNoZWQgdGhhdCBvbmUgaW4gaGFsZiBvdmVyIHRoZSBib2FyZHMuCkhhdmluZyBiZWVuIGluIGN1c3RvZHkgc2luY2UgSnVuZSA2LCBOaWNob2xzJyB0ZXJtIHdpbGwgZXhwaXJlIG9uIFNlcHRlbWJlciA1LiBQb2xpY2Ugc2FpZCBOaWNob2xzIGVudGVyZWQgdGhlIHB1YiBhcm91bmQgbHVuY2ggdGltZSBhbmQgYmVnYW4gcGxheWluZyB0aGUgIlF1ZWVuIG9mIHRoZSBOaWxlIiBtYWNoaW5lLCBrbm93biBhcyBOby4xOC4gClBhbGluIGFwcGVhcmFuY2UgaGFzIGRyaXZlbiBzb21lIG9mIHRoYXQgY3JpdGljaXNtLiBTaGUgcnVtb3JlZCB0byBiZSBnZXR0aW5nICQxMDAsMDAwIGZvciBoZXIga2V5bm90ZS4KSGVsbG8hIEknbSByZWFsbHkgc29ycnkgdG8gaGVhciB0aGlzIGlzIGhhcHBlbmluZyB0byB5b3UsIHRoZSBmZnhpdiBjb21tdW5pdHkgaXMgdXN1YWxseSBwcmV0dHkgZ29vZCBidXQgaXQgZG9lcyBoYXZlIGl0cyBtb21lbnRzIG9mIGJlaW5nIHJvdHRlbi4KWW91IGRvbid0IG5lY2Vzc2FyaWx5IGhhdmUgdG8gYmUgYSB3b29kc21hbiB0byBwdWxsIG9mZiB0aGUgaHVudGluZyB0aGVtZSwgYnV0IGl0IGRlZmluaXRlbHkgbWFrZXMgdGhpbmdzIG1vcmUgbGVnaXQgKGFuZCBpbmNyZWFzZXMgdGhlIGNvb2wgZmFjdG9yKSBpZiB5b3UgYWN0dWFsbHkga2lsbGVkIHRob3NlIGRlZXIgeW91cnNlbGYuIFlvdSBjYW4gY3JlYXRlIHlvdXIgaHVudGluZyBsb2RnZSBpbiB0aGUgZm9ybSBvZiBhIGhpZ2ggZW5kIGxvZyBjYWJpbiwgd2l0aCBhIHJvYXJpbmcgZmlyZXBsYWNlLCBiZWFyc2tpbiBydWdzIGFuZCBsb3RzIG9mIHRvcCBzaGVsZiB3aGlza2V5LCBvciB5b3UgY2FuIGdvIGxvd2Jyb3cgd2l0aCBsb3RzIG9mIGNhbW91ZmxhZ2UgYW5kIGNoZWFwIGJlZXIgaW4gdGhlIG1pbmkgZnJpZGdlLi4gClRoZW4gZmluZCBjb3ZlciBhbmQgc3RheSBpbiB0aGUgbmV3IGNpcmNsZSBhcyBtdWNoIGFzIHBvc3NpYmxlLiAKRGVudFJhbmRvbURlbnQgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KWWVhaCB0aGVyZSBpcyBtYW55IHdheXMgdG8gcG9wIGEgZG9vciwgYW5kIHlvdSBzaG91bGQga25vdyBhIGZldywgYnV0IGtub3dpbmcgMSBvciAyIHdpdGggeW91ciBleWVzIGNsb3NlZCB3aWxsIGFsbW9zdCBhbHdheXMgd29yayB3aGVuIHNoaXQgc3RhcnRzIGhpdHRpbmcuLiAKV2UgYWxsIHRhc2tlZCB3aXRoIGRlY2lkaW5nIGhvdyB0byBhY3QsIG9yIHdoZXRoZXIgdG8gYWN0IGF0IGFsbC4gClN1cmUsIEJldHR5J3MgcGVyZm9ybWluZyBmb3IgY3JlZXBzIG9uIHRoZSBpbnRlcm5ldCwgIkJpdHRlcnN3ZWV0IFN5bXBob255IiBpcyBhIHdlaXJkIHNvbmcgY2hvaWNlIGZvciBhIDE2IHllYXIgb2xkJ3MgY29uZmlybWF0aW9uIGFuZCBBcmNoaWUncyBkb3VibGUgbGlmZSBvZiBGQkkgaW5mb3JtYW50IGFuZCBIaXJhbSdzIG1vYnN0ZXIgbWVudGVlIGlzIGdldHRpbmcgYSBsaXR0bGUgb3V0IG9mIGhhbmQsIGJ1dCBhbGwgb2YgdGhpcyBtYWRuZXNzIHNlZW1zIHRvIGJlIGZpbmFsbHkgZmFsbGluZyBpbnRvIHBsYWNlIGluIGEgd2F5IHdlIGFjdHVhbGx5IGRpZG4ndCBleHBlY3QuIFdlIGFsd2F5cyBsb3ZlIHRoaXMgc2lsbHkgc2hvdywgYnV0IHRvbmlnaHQgbWlnaHQgaGF2ZSBiZWVuIHRoZSBiZXN0IGVwaXNvZGUgaW4gYSB3aGlsZS4uIApCYWc6IDJuZCBvcHRpb24gICBUcmFqZWN0b3J5IDM1TCBpbiB4cGFjIChtb3JlIHdhdGVyIHJlc2lzdGVudCBmYWJyaWMgc3RpZmYgICBlYXNpZXIgdG8gcGFjayBzdGFibGUgcGFjayBpbiB0aGUgbW9ybmluZzsgbXkgcGljaykgb3IgRHluZWVtYS9VSE1XUEUgKG1vcmUgZHVyYWJsZSBidXQganVzdCBhIGxpdHRsZSBpbiBub3JtYWwgdXNlKQpHb29nbGUgZG9lc24ndCBsaWtlIGl0IGJlY2F1c2UgR29vZ2xlIG93bnMgQW5kcm9pZCwgQXBwbGUncyBtYWluIGNvbXBldGl0aW9uIGluIHRoZSBtb2JpbGUgZGV2aWNlIG1hcmtldCwgYW5kIGFjY2VwdGluZyB0aGF0IGlQaG9uZXMgZGVzZXJ2ZSBhbiBhdXRvbWF0aWMgc3BvdCBpbiBtb3N0IChpZiBub3QgYWxsKSBuZXcgY2FycyBtZWFucyBhY2NlcHRpbmcgYW5kIGNvbmNlZGluZyB0aGF0IEFuZHJvaWQgcGhvbmVzIGRvIG5vdC4gCklmIHlvdSBkb24gc2VlIFlPVVIgc3RhdGUgbGlzdGVkLCB5b3UgZ29sZGVuLiBFdmVuIGlmIHlvdSBsaXZlIGluIG9uZSBvZiB0aG9zZSBlbGV2ZW4gc3RhdGVzLCB5b3UgY2FuIHN0aWxsIHJlY29yZC4gRWl0aGVyIHlvdSB3YXJuIGhlciBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjb252ZXJzYXRpb24sIG9yIGl0IG5vdCBMRUdBTExZIEFETUlTU0FCTEUuVGhlIHdhcm5pbmcgY291bGQgc291bmQgbGlrZSwgIkhpIERhbW15ISBXZSBiZWVuIGhhdmluZyBzb21lIGlzc3VlcyB3aXRoIGNhbGxlcnMgc2F5aW5nIHdlaXJkIHRoaW5ncyBsYXRlbHkgc28gREggYW5kIEkgcHV0IGEgcmVjb3JkaW5nIGFwcCBvbiBvdXIgZGV2aWNlcy4gCkJlZW4gbWFueSB0aW1lcyBhbmQgbmV2ZXIgbGVmdCBub3QgaGFwcHkuIApGb2xsb3dpbmcgaGlzIG5lYXIgbWlyYWN1bG91cyBzdXJ2aXZhbCBvZiB0ZXN0aWN1bGFyIGNhbmNlciwgaW4gMTk5OCBBcm1zdHJvbmcgcmV0dXJuZWQgdG8gY3ljbGluZyB3aXRoIGEgdmVuZ2VhbmNlLiAKR2VuZXJhbCBtYW5hZ2VyIEVtbWEgQ29sZW1hbiB0b2xkIFRoZSBTdW5kYXkgQWdlIHRoZSBmb3VuZGF0aW9uIGhhZCBub3QgcHJvZHVjZWQgYSAyMDE0IGZpbmFuY2lhbCByZXBvcnQgYmVjYXVzZSBubyBkb25hdGlvbnMgd2VyZSBtYWRlIHRvIGNoYXJpdGllcyBieSB0aGUgZm91bmRhdGlvbiB0aGF0IHllYXIuIEJ1dCB0aGUgZGVjaXNpb24gYnkgdGhlIGZvdW5kYXRpb24gdG8gZHJvcCBpdHMgY29uZmlkZW50aWFsaXR5IGFwcGxpY2F0aW9uIGxlZCB0aGUgQUNOQyB0byBhdXRvbWF0aWNhbGx5IHB1Ymxpc2ggdGhlIGZvdW5kYXRpb24gYW5udWFsIHJlcG9ydCwgd2hpY2ggaGFzIGJlZW4gb24gZmlsZSB3aXRoIHRoZSByZWd1bGF0b3IgZm9yIG1vcmUgdGhhbiBlaWdodCBtb250aHMuIApJIGhhdmUgZ290dGVuIHNvIGludG8gdGhpcywgSSBib3VnaHQgc2FmZXR5IGV5ZXMgYW5kIGVtYnJvaWRlcnkgdGhyZWFkLiBJIGFtIGxlYXJuaW5nIGhvdyB0byBtYWtlIGV5ZXMgd2l0aCB0aGUgSmFwYW5lc2UgZ2lybHMgaGVscC4gCklmIG1vZGVyYXRvcnMgZ28gaW4gdGhlcmUsIHRoZXkgYXJlIHRha2luZyB0aW1lIG91dCBvZiB0aGVpciBkYXkgdG8gdHJ5IHRvIGhlbHAgdXNlcnMgYW5kIGV4cGxhaW4gc29tZXRoaW5nLklmIGFsbCB0aGV5IGFyZSBtZXQgd2l0aCBpcyBpbmNvaGVyZW50IHJhZ2UsIHJlcGVhdGVkIGNvbXBsYWludHMgZnJvbSB0aGUgc2FtZSB1c2VycywgdGhyb3dhd2F5cyB3aXRoIG5vIC9yL2xvbCBwb3N0IGhpc3RvcnksIHBlcm1hYmFubmVkIHVzZXJzLCBhbmQgdGhlIGxpa2UsIHRoZXJlIGlzIG5vIHJlYXNvbiBmb3IgdGhlIG1vZGVyYXRvcnMgdG8gcGFydGljaXBhdGUuSWYgbW9kZXJhdG9ycyBkbyBub3QgcGFydGljaXBhdGUsIHRoZSB2YWx1ZSBvZiB0aGUgc3VicmVkZGl0IGdvZXMgZG93bi4gSG93ZXZlciwgSSBkbyBub3QgYmxhbWUgcGVvcGxlIGZvciBub3Qgd2FudGluZyB0byBpbnRlcmFjdCBpbiBhbiBlbnZpcm9ubWVudCB3aGVyZSB0aGV5IGFyZSBub3QgYXBwcmVjaWF0ZWQgZm9yIGdpdmluZyBpbmZvcm1hdGlvbiB3aGVyZSBpdCBpcyBhc2tlZCBmb3IuSSB0aGluayBJIGluIGFncmVlbWVudCB3aXRoIHlvdSBvbiB0aGUgdmFzdCBtYWpvcml0eSBvZiB3aGF0IHlvdSBzYXkuIEFzIHNvbWVvbmUgd2hvIGhhcyB3b3JrZWQgYSBwaG9uZSBsaW5lLCBJIGNhbiBkZWZpbml0ZWx5IHVuZGVyc3RhbmQgbm90IHdhbnRpbmcgdG8gZGVhbCB3aXRoIGFuZ3J5IHBlb3BsZS5UaGUgZmxpcHNpZGUgb2YgdGhhdCBjb2luIGlzIHRoYXQgbW9kcyBzb21ldGltZXMgZW50ZXIgYSB0aHJlYWQgd2l0aCBjYXVzdGljYWxseSBzYXJjYXN0aWMgb3IgdW5oZWxwZnVsbHkgdW5pbnNpZ2h0ZnVsIGNvbW1lbnRzLiAKVW5mb3J0dW5hdGVseSBmb3IgbXlzZWxmLCBJIGRvIHNvbWV0aW1lcyBnZXQgY2F1Z2h0IHVwIGluIHRoZSBmdXJvciBvZiBpbmRpZ25hdGlvbiBhbmQgbGVuZCBteSB2b2ljZSB0byB0aGUgbmFycm93IG1pbmRlZCByYWJibGUgcm91c2VycywgdG8gZGVueSBzbyB3b3VsZCBwbGFjZSBtZSBvbiBsb29zZSBmb290aW5nIGluZGVlZC4gSHVtYW4gbmF0dXJlIGxlbmRzIGl0c2VsZiB0byByZWZsZXhpdmUsIGVtb3Rpb25hbCByZXNwb25zZXM7IGVub3VnaCBwZW9wbGUgc2VsZiBhZG1pbmlzdGVyaW5nIGxpdG11cyB0ZXN0aW5nIGtlZXBzIHRoZSByZXN0IG9mIHVzIGluIGNoZWNrIGZvciB0aGUgbW9zdCBwYXJ0LiBZb3UgY291bGQgImFjcXVpcmUiIHNvbWUgZnJvbSBhIGNvbnN0cnVjdGlvbiBzaXRlLCBvZiBldmVuIGdvIGR1cmluZyB0aGUgZGF5IGFuZCBhc2sgZm9yIGEgc2NyYXAgcGllY2UuIApMaWtlIHNvbWVvbmUgZWxzZSBzYWlkICBubyBraXNzaW5nLCBqdXN0IHBsZWFzdXJpbmcgaGltLiBZb3UgY2FuIGFsd2F5cyBsb29rIHVwIHNvbWUgaGFuZGpvYiB0ZWNobmlxdWVzIHdoaWNoIGFyZSBncmVhdCBmb3IgYnJlYWtzIGluIGEgYmxvd2pvYi4gKE15IGZhdm91cml0ZSBpcyBtYWtlIGEgaG9sZSBpbiB5b3VyIGZpc3RzIGFuZCBnaXZlIHRoZSBtb3Rpb24gYnkgdGFraW5nIHlvdSBsZWZ0IGhhbmQsIHN0cm9rZSBkb3dud2FyZHMgb24gaGlzIHNoYWZ0LCB0aGVuIHJpZ2h0IGhhbmQgaW1tZWRpYXRlbHkgYWZ0ZXIgIGRvd253YXJkcyAgdGhlbiBsZWZ0IGhhbmQgZG93bndhcmRzLCB0aGVuIHJpZ2h0IGFuZCBsZWZ0LiAKTGF3cyB3ZXJlIHBhc3NlZCAoaW4gZmFjdCwgbW9zdCBzdGF0ZXMgb25seSBnb3Qgc2V4IG9mZmVuZGVyIHJlZ2lzdHJpZXMgaW4gdGhlIDE5OTBzIGFmdGVyIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgdGhyZWF0ZW5lZCBsb3NzIG9mIGZ1bmRpbmcgaWYgdGhleSB3ZXJlbiBlc3RhYmxpc2hlZCksIFRWIHNob3dzIGFuZCBtb3ZpZXMgd2VyZSBtYWRlLCBlZHVjYXRpb25hbCBwcm9ncmFtcyB3ZXJlIGludmVudGVkLiBUaGUgcmVzdWx0IHdhcyBwYW5pYy4gClNvIG11Y2ggb2YgaG93IHdlIHRoaW5rIGlzIHJvb3RlZCBpbiBvdXIgbGFuZ3VhZ2UsIGluIG91ciBpZGVhIG9mIGZvcm0gYW5kIHN5bnRheCwgdGhhdCB0aGlua2luZyBvdXRzaWRlIG9mIHRoZXNlIGFsbW9zdCBsZWF2ZXMgdXMgd2l0aCBubyB0b29scyB0byBzaGFyZSBvdXIgb2JzZXJ2YXRpb25zLiAKU3RldmUgS2luZyBzaG91bGQgaGF2ZSBiZWVuIHJlbW92ZWQgeWVhcnMgYWdvLCBidXQgZGVtb25pemluZyB0aGUgcGVvcGxlIHRoYXQgdm90ZWQgZm9yIGhpbSB3aWxsIG5vdCB3aW4gdGhlbSB0byB5b3VyIHNpZGUuIApJbiBvdGhlciBicmFuZGVkIHZpZGVvIG5ld3MsIFNhbXN1bmcgaXMgYmVnaW5uaW5nIHRvIHJldHVybiB0byBpdHMgdXN1YWwgdWJpcXVpdHksIHdpdGggdHdvIHNsb3RzIHRoaXMgd2VlaywgYW5kIFByb2N0ZXIgR2FtYmxlJ3MgIlRoYW5rIHlvdSwgTW9tLCIgdGhyaXZlcyBhcyBNb3RoZXIncyBEYXkgYXBwcm9hY2hlcy4gRWFjaCBjYW1wYWlnbiBpcyBtZWFzdXJlZCBieSBUcnVlIFJlYWNoLCBhbiBNUkMgYWNjcmVkaXRlZCBtZXRyaWMgdGhhdCBpbmNsdWRlcyB2aWV3cyBmcm9tIGJyYW5kIGRyaXZlbiBhbmQgYXVkaWVuY2UgZHJpdmVuIHNvY2lhbCB2aWRlbyBjbGlwcy4gVGhlIGRhdGEgYXJlIGNvbXBpbGVkIHVzaW5nIHRoZSBwYXRlbnRlZCBWaXNpYmxlIE1lYXN1cmVzIHBsYXRmb3JtLCBhIGNvbnN0YW50bHkgZ3Jvd2luZyByZXBvc2l0b3J5IG9mIGFuYWx5dGljIGRhdGEgb24gaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgdmlkZW9zIHRyYWNrZWQgYWNyb3NzIGh1bmRyZWRzIG9mIG9ubGluZSB2aWRlbyBkZXN0aW5hdGlvbnMuLiAKUG93ZXJmdW5rICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgaG91cnMgYWdvClRoYXQgd2hlbiB0aGVpciBpbnRlbnRpb25zIGJlY2FtZSBjbGVhci4gClRoZSBjb3N0IG9mIG1lZGljaW5lIGlzIHdheSB0b28gaGlnaC4gVGhlIHByb2ZpdCBtYXJnaW5zIG9uIGhlYWx0aGNhcmUgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGlzIGluc2FuZS4gV2hhdCBjYW4gY29zdCBsZXNzIHRoYW4gYSBkb2xsYXIgdG8gcHJvZHVjZSBjYW4gYmUgY2hhcmdlZCBhdCBhIGh1bmRyZWQgZG9sbGFycy4gVGhpcyB3b3VsZCBtYWtlIGhlYWx0aGNhcmUgaW5zYW5lbHkgZXhwZW5zaXZlIGlmIGFtZXJpY2Egc3dpdGNoZXMgdG8gYSBzaW5nbGUgcGF5ZXIgc3lzdGVtIGFuZCB0aGUgVVMgY291bGQgdmVyeSB3ZWxsIHJlZ3VsYXRlIHRoZSBjb3N0IG9mIGhlYWx0aGNhcmUgYnV0IGhlYWx0aGNhcmUgaW50ZXJlc3QgZ3JvdXBzIHdvdWxkIGxvYmJ5IHRvIGtlZXAgdGhlIHByb2ZpdCBtYXJnaW5zIHNvIGEgdW5pdmVyc2FsIGhlYWx0aGNhcmUgc3lzdGVtIHdvdWxkIHN0YXkgZXh0cmVtZWx5IGV4cGVuc2l2ZS4gSGVhbHRoY2FyZSBjb3N0cyBhcmUgYWxzbyBkcml2ZW4gaGlnaGVyIGJlY2F1c2UgdGhlIEFtZXJpY2FuIHBvcHVsYWNlIGlzIHZlcnkgdW5oZWFsdGh5IGFuZCB0aGUgY29zdCB0byB0YWtlIGNhcmUgb2YgZXZlcnlvbmUgd291bGQgYmUgYXN0cm9ub21pY2FsLiBUaGUgaGVhbHRoIGluc3VyYW5jZSBpbmR1c3RyeSBpcyBhbHNvIG5vdyB0b28gYmlnIHRvIHRha2UgZG93bi4gSGVhbHRoY2FyZSBpcyBhYm91dCAxNy45JSBvZiBzcGVuZGluZyBhbmQgY3JlYXRpbmcgYSBzaW5nbGUgcGF5ZXIgaGVhbHRoY2FyZSBzeXN0ZW0gd291bGQgYmUgZGV0cmltZW50YWwgdG8gdGhlIGVjb25vbXkgYW5kIGV2ZXJ5b25lIHdobyB3b3JrcyBmb3IsIG9yIGhhcyBtb25leSBpbiwgdGhlIGhlYWx0aGNhcmUgaW5kdXN0cnkuIEkgZm9yIG9uZSBkb24ndCBzdXBwb3J0IHVuaXZlcnNhbCBoZWFsdGhjYXJlLiBOb3QgYmVjYXVzZSBJIGRvbid0IHN1cHBvcnQgdGhlIGNvbmNlcHQsIEkgZG8gbGlrZSB0aGUgaWRlYSBvbiBwYXBlciwgYnV0IGJlY2F1c2UgdGhlIGRhbWFnZSBhbmQgdHJhZGUgb2ZmcyBhcmUgbm90IHdvcnRoIHRoZSBvdXRjb21lLgpNb3N0IG9mIHRoZSBncmFkdWF0aW5nIHN0dWRlbnRzIGF0IG15IHByb2dyYW0gYXJlIHNlbGxpbmcgdGhlaXIgc2NvcGVzIHRvIGluY29taW5nIHN0dWRlbnRzICAgZnJvbSB2ZXJ5IGxvdyBlbmQgQURDcyB0byB0aGUgbW9zdCBleHBlbnNpdmUgYnJhbmRzLiBJIHRoaW5rIHRoZSBjb25zZW5zdXMgaXMgdGhhdCBpdCB1bmxpa2VseSAobm90IG1lYW5pbmcgSU1QT1NTSUJMRSkgdGhhdCB5b3Ugd2lsbCB1c2UgaXQgYWZ0ZXIgc2Nob29sIHNpbmNlIG1vc3QgY2xpbmljcyBoYXZlIHRoZWlyIHJvb21zIHN0b2NrZWQuIFRoZSBnb29kIG5ld3MgaXMsIGl0IHByb2JhYmx5IGdvbm5hIGJlIGVhc3kgdG8gc2VsbCB3aGljaGV2ZXIgb25lIHlvdSBkZWNpZGUgdG8gZ2V0IGJhY2sgdG8gYW4gaW5jb21pbmcgc3R1ZGVudCBpbiBhIGNvdXBsZSBvZiB5ZWFycyBhdCBhIHNsaWdodGx5IGRpc2NvdW50ZWQgcmF0ZS4KVmVyc3VzIGxlYWRpbmcgYSBsaWZlIG9mIG1hdGVyaWFsaXNtIGFuZCBleHBlY3RpbmcgdGhhdCB5b3Ugd29uIHJlZ3JldCBpdCBhcyB5b3UgYXBwcm9hY2ggdGhlIGxhdHRlciBoYWxmIG9mIGxpZmUuIFNvbWUgcGVvcGxlIGFyZSBmaW5lIHdpdGggdGhpcywgYnV0IEkgYXJndWUgbW9zdCBhcmUgbm90LiBJbiAyMCB5ZWFycyB0aGVyZSBhcmUgZ29pbmcgdG8gYmUgYSBsb3Qgb2YgdmVyeSB1bmhhcHB5IGNoaWxkbGVzcyBtaWRkbGUgYWdlZCBtaWxsZW5uaWFsIHdvbWVuLgpJIGNyb3NzZWQgdGhlIG1hcmsgMzAgc2Vjb25kcyBmcm9tIGZhaWxpbmcgdGhlIHJ1biwgY29sbGFwc2VkIHRvIG15IGtuZWVzLCBhbmQgd3JldGNoZWQgdmlvbGVudGx5LiAKRURJVDogVGhlIGV2ZW50IGluIHF1ZXN0aW9uIGlzIGEgU3R1ZGVudCBbc2ljXSBEYXkgYXQgSmFtc2lsIFN0YWRpdW0sIGFuZCBpdCB3YXMgbGFzdCBTYXR1cmRheSwgc28gZm9ydHVuYXRlbHkgeW91IG1pc3NlZCBpdC4gVGhlIGV2ZW50IHdhcyBob3N0ZWQgYnkgdGhlIEludGVybmF0aW9uYWwgWW91dGggRmVsbG93c2hpcCwgd2hpY2ggaXMgcGFydCBvZiB0aGUgR29vZCBOZXdzIE1pc3Npb24sIGEgQ2hyaXN0aWFuIGN1bHQuIApJbiB0aGUgaW50ZXJlc3Qgb2YgY29tbW9uIG9iamVjdGl2ZXMgYW5kIGludGVybmF0aW9uYWwgc3RhYmlsaXR5LCB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgdGhlIEtpbmdkb20gaGF2ZSByZXBlYXRlZGx5IG92ZXJsb29rZWQgbWFqb3IgZGlzYWdyZWVtZW50cy4gTm93IHBsYXllcnMgb24gYm90aCBzaWRlcyBhcmUgd2FybmluZyBvZiBhIGJyZWFraW5nIHBvaW50Li4gCkl0IHdhcyBhdCB0aGlzIHBvaW50IHRoYXQgb3VyIHN1cGVydGlsdGluZyBmcmllbmQgZ3JhYmJlZCBoaXMgcmFja3Mgb2YgY2hpcHMgKHRoYXQgd2VyZSBzdGlsbCBpbiBmcm9udCBvZiBoaW0pIGFuZCBhdHRlbXB0ZWQgdG8gc3ByaW50IG91dCBvZiB0aGUgcm9vbS4KSXQncyBleHRyYSBzcGVjaWFsIGJlY2F1c2UgSSB3b3JrIGF0IGEgc29mdHdhcmUgY29tcGFueSBpbiB0aGUgY2l0eSwgYW5kIGFzIHN1Y2gsIG1hbnkgb2YgdGhlIHBlb3BsZSBhcmUgZnJvbSBwbGFjZXMgbGlrZSBDQS4gVGhleSBMT1ZFIHRoZSBsb3cgY29zdCBvZiBsaXZpbmcgYW5kIGhvdyBtYW55IG1vdmllcyBhcmUgZmlsbWVkIGhlcmUsIHlldCB0aGV5IGRvbid0IHJlYWxpemUgaXQncyBiZWNhdXNlIG9mIG91ciBsb3cgdGF4ZXMgdGhhdCB0aG9zZSB0aGluZ3MgYXJlIGhhcHBlbmluZyBhdCBhbGwuLiAKQWxzbywgaGUgdGVsZWdyYXBoZWQgdGhlICJwbG90IHR3aXN0IiBmcm9tIHRoZSB2ZXJ5IGJlZ2lubmluZywgd2hpY2ggaXMgb25lIG9mIG15IHBldCBwZWV2ZXMuIApXZSBuZWVkIG5vdCBvbmx5IHByZXZlbnQgZGlzZWFzZSBidXQgYWxzbyBwcmV2ZW50IHRoZSB3cm9uZyB0eXBlIG9mIGNhcmUuLiAKUG9vcmx5IHdyaXR0ZW4gYW5kIGRldmVsb3BlZCBjaGFyYWN0ZXIuIEEgYnJpbGxpYW50IGluZmFudCBuZXVyb3N1cmdlb24gcmlkaW5nICJvbGQgbGFkeSIgd2l0aCBhIHdoYWNrIGEgZG9vIGFybXMgZGVhbGVyIHdpdGggYmFnZ3kgamVhbnMgYW5kIGEgbXVsbGV0PyBDaGlsZCBwbGVhc2UuClRoZSB0aGluZyBhYm91dCB0aGUgc2FuIGZlcm5hbmRvIGdhbWUgaXMgeW91IHdhbnQgdG8gY29tZSBiZWZvcmUgdGhlIG1lc2FzIG9wZW4gc28gdGhhdCB5b3UgY2FuIHB1dCB5b3VyIG5hbWUgb24gdGhlIGxpc3QuIEkgdGhpbmsgdGFibGVzIG9wZW4gYXQgbm9vbiBvciBzb21ldGhpbmcgYW5kIHRoZSBnYW1lIHN0YXJ0cyBhdCB3aGVuZXZlciAycG0uIApGb3IgYSBzY2hvb2wgY29udGVzdCwgUGFkZG9jayBhbmQgb3RoZXIgc3R1ZGVudHMgd2VyZSBhc3NpZ25lZCB0byBkZXNpZ24gYnJpZGdlcyB1c2luZyBubyBtb3JlIHRoYW4gYSBzcGVjaWZpZWQgYW1vdW50IG9mIHdvb2QgYW5kIG5vIGdsdWUsIGluIGEgYmlkIHRvIGJ1aWxkIHRoZSBzdHJvbmdlc3Qgc3RydWN0dXJlLgpJJ3ZlIGJlZW4gYSBjb3NtZXRvbG9naXN0IGZvciAyOCB5ZWFycy4gSSBzcGVjaWFsaXplIGluIGNvbG9yLCBoaWdobGlnaHRzLCBhbmQgY29ycmVjdGl2ZSBjb2xvci4gCkFwcGFyZW50bHkgcGVvcGxlIGRvIHJlYWQgdGhlc2UuIEdvb2QgbmV3cyBmcm9tIHRoZSBwaHlzaW8gd2hvIHdvcmtlZCBvdXQgInllYXJzIG9mIG5lZ2xlY3QgaW4gbXkgR2x1dGV1cyBNZWRpdXMiLiAKV2hlbiB5b3UgYXJlIGxvZ2dlZCBpbiB5b3VyIFRpdGFuIEJldCBhY2NvdW50LCBhdCB0aGUgdG9wIHJpZ2h0IHlvdSB3aWxsIHNlZSBhIGJ1dHRvbiBzYXlpbmcgT3BlbiBDYXNoaWVyIHdpdGggYW4gaWNvbiBvZiBhIGNvaW4gbmV4dCB0byBpdC4gV2hlbiB5b3UgY2xpY2sgb24gaXQgeW91IHdpbGwgYmUgdGFrZW4gdG8gdGhlIGNhc2hpZXIgd2hlcmUgeW91IGNhbiByZWdpc3RlciB5b3VyIGNyZWRpdCBjYXJkIChpZiB5b3UgYXJlIHVzaW5nIG9uZSBmb3IgdHJhbnNhY3Rpb25zKSwgY2hvb3NlIHlvdXIgcHJlZmVycmVkIHBheW1lbnQgbWV0aG9kIGFuZCBtYWtlIGRlcG9zaXRzIGFuZCB3aXRoZHJhd2Fscy4gCkxlcyB0ZXh0ZXMgZm9udCBwYXJmb2lzIHJmcmVuY2UgIGRlcyBjaG5lcyBxdWkgZGZpZW50IG5vdHJlIGltYWdpbmF0aW9uOiBhaW5zaSBBbmdlbG8gZGUgR3ViZXJuYXRpcyB2b3F1ZSB0IGlsIGxlIGNhcyBkIGNobmUgZG9udCBsZSB0cm9uYyBtZXN1cmFpdCBkaXggbXRyZXMgZGUgZGlhbXRyZSwgdW4gYXV0cmUgcXVpIHBvdXZhaXQgYWJyaXRlciBzb3VzIHNlcyBicmFuY2hlcyAzMDAgY2F2YWxpZXJzIGF2ZWMgbGV1cnMgY2hldmF1eCAoOSkuIENlIHF1aSBwZXV0IG5vdXMgYXBwYXJhdHJlIGNvbW1lIGRpc3Byb3BvcnRpb25uIHBhcmNlIHF1ZSBzYW5zIGRvdXRlIGZhbnRhaXNpc3RlICgxMCksIGQgcXVlIGxlcyBjaG5lcyB0bW9pbnMgZGUgdGVsbGVzIGFzc2VydGlvbnMgbmUgY291cmVudCBwYXMgbGVzIHJ1ZXMsIG5lIHNlcmFpdCBjZSBxdSBGcmFuY2U6IHBhciBleGVtcGxlLCBsZSBjaG5lIHBkb25jdWwgZCAoU2VpbmUgTWFyaXRpbWUpIGVzdCB1biByaWdvbG8gYXZlYyBzZXMgc2V1bGVtZW50IDIsNSBtIGRlIGRpYW10cmUgIHVuIG10cmUgZHUgc29sISBTYWNycywgY2VzIGFyYnJlcyB0YWllbnQgcHJvdGdzIGNvbnRyZSBsIGV0IGwgY29uZGFtbmFpdCBmcm9pZGVtZW50IGNlbHVpIHF1aSBzIGF0dGFxdWFpdCwgZCBxdWUgZHUgYm9pcyBkZSBjaG5lIGwgdGlyYWl0IGxlcyBvYmpldHMgc2FjcnMgZXQgdm90aWZzLiAKSSB3b3JrZWQgaGFyZCBpbiBzY2hvb2wsIHB1dCBteXNlbGYgdGhyb3VnaCB0b3VnaCBkZWdyZWVzIGFuZCBiZWNhbWUgc21hcnQgYW5kIHdlbGwgcmVhZC4gSSBnb3QgaW50byBjb21lZHkgYW5kIGJlY2FtZSBmdW5ueS4gClRoaW5ncyBmZWVsIGxlc3MgYW5kIGxlc3Mgc3VzdGFpbmFibGUuLiAKUG9zdHVyZSBtYXkgUHJlZGljdCBGdXR1cmUgRGlzYWJpbGl0eQpQYXJ0aWFsbHksIEkgbWlnaHQgZ2l2ZSBoaW0gQXNReCgyKSwgQXNKeCgyKSwgUXNBeCgyKSwgYW5kIEpzQXgoMikgICBjb21ib3MgdGhhdCBoYWQgbGl0dGxlIHNob3dkb3duIHZhbHVlIG9uIHRoZSB0dXJuIHRoYXQgbWlnaHQgaGF2ZSBzaG92ZWQgdGhlcmUgYXQgYSBjZXJ0YWluIGZyZXF1ZW5jeS4gU28gdGhhdCBhcm91bmQgMjUgY29tYm9zIG9mIHZhbHVlIGFzIGFuIGVzdGltYXRlLi4gCkFuZCBpIGhlYXJkIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiBoYXMgYSAic3RpZ21hIiBsaWtlIGl0IGlzIG1vc3RseSBmb3IgcG9vciBwZW9wbGUsIGRydWcgYWRkaWN0cywgaG9tZWxlc3MgcGVvcGxlIGV0Yy4uIAoiVGhlcmUgd2lsbCBiZSBhIHllYXIgbG9uZyByZWNlc3Npb24gaW4gMjAxNi8xNyBpZiB3ZSB2b3RlIExlYXZlLiIgTm9wZS4KQSBsIGZyYWlzLCBsYSBiZXJjZSBjb21tdW5lIHBldXQgcGFyZm9pcyBwcm92b3F1ZXIgZGVzIGlycml0YXRpb25zLCBkZXMgdnNpY3VsZXMgZG91bG91cmV1c2VzLCBkZXMgZGVybWl0ZXMgZGUgY29udGFjdCAoZGVybWF0aXRlIGRlcyBwcnMgcGFyIGV4ZW1wbGUpIGNoZXogbGVzIHBlcnNvbm5lcyBzZW5zaWJsZXMuIFRvdXMgbGVzIG1vdHMgcGFzc3MgZW4gZ3JhcyBzb250IGQgaWxzIHBlcm1ldHRlbnQgdW5lIG51YW5jZSBldCB2aXRlbnQgYXV0YW50IHF1ZSBmYWlyZSBzZSBwZXV0IGRlIGNyb2lzZXIgbGEgcm91dGUgZGUgcHJvcG9zIGV4dHJtaXN0ZXMsIGRvbm5hbnQgbCBxdWUgY2VsYSBzZSBwYXNzZSB0b3Vqb3VycyBhaW5zaSBjaGV6IHRvdXMgbGUgbW9uZGUuIApSaWdodCBub3csIHRoZSBpbnRlcmVzdCByYXRlIG9uIGZpdmUgeWVhciBUcmVhc3VyeSBib25kcyBpcyBiZWxvdyB0aGUgcmF0ZSBvbiB0aHJlZSB5ZWFyIGJvbmRzLCBidXQgcmF0ZXMgb24gZXZlbiBsb25nZXIgdGVybSBib25kcyBhcmUgc3RpbGwgaGlnaGVyLi4gCkJlaW5nIGhlbGQgY2FwdGl2ZSBmb3IgZm91ciBkYXlzIHdpdGggbm8gZm9vZCBvciB3YXRlciwgdGhlIGJhdHRlcmVkIHdvbWFuIHdhcyByZXNjdWVkIGFmdGVyIE9iaXJlayB3YXMgYWJsZSB0byB0YWxrIGhlciB3YXkgb3V0LiAKWW91IGVudGl0bGVkIHRvIGZlZWwgaG93ZXZlciB5b3UgbGlrZSwgYW5kIGF0IHRoZSBlbmQgb2YgdGhlIGRheSB5b3UganVzdCBhbm90aGVyIHN0cmFuZ2VyIHRvIG1lLiBMaWtlIEkgc2FpZCwgSSBoYXZlbiBnb3R0ZW4gdG8gdGFsayB0aGUgZXhwZXJpZW5jZSBvdXQgd2l0aCB0b28gbWFueSBwZW9wbGUgaW4gbXkgbGlmZSwgYW5kIEkgcmF0aGVyIHJ1YiBzdHJhbmdlcnMgd2hvIG5ldmVyIHNlZSBtZSBpcmwgdGhlIHdyb25nIHdheSB0aGFuIGJ1cmRlbiBwZW9wbGUgY2xvc2UgdG8gbWUgd2l0aCB0aGUga25vd2xlZGdlIG9mIGhvdyBhIHRyaXAgSSB3YXMgcmVhbGx5IGV4Y2l0ZWQgZm9yIHR1cm5lZCBvdXQgdG8gYmUgYW4gZXhlcmNpc2UgaW4gd2h5IHlvdSBzaG91bGRuIG1lZXQgeW91ciBoZXJvZXMgdW5sZXNzIHlvdSBva2F5IHdpdGggYmVpbmcgZGlzYXBwb2ludGVkLiBJIHRvbGQgb25seSBhIGxpdHRsZSBvZiB3aGF0IGhhcHBlbmVkIHRvIG15IGRhZCwgYW5kIEkgd2FzIGhhbGYgd29ycmllZCBoZSB3YXMgZ29pbmcgdG8gZmx5IG91dCB0aGVyZSBhbmQgcHVuY2ggaGVyLiAKU3VyZS4gCkxFIGhhcyBkYW5jZWQgYXJvdW5kIGl0LCBhbmQgSSd2ZSBzZWVuIHNvIG1hbnkgcGVvcGxlIHBvc3QgYW4gYXJ0aWNsZSBmcm9tIGEgZmV3IGRheXMgYWZ0ZXIgdGhlIG11cmRlcnMgdGhhdCBzYXlzIHRoZXkgY29sbGVjdGVkIGRuYSBmcm9tIHRoZSBzY2VuZS4gSSBkb24ndCB0aGluayB0aGV5IHJlYWxpemUgdGhhdCBqdXN0IG1lYW5zIHRoZXkgdG9vayBpdGVtcyBpbiBmb3IgdGVzdGluZywgbm90IHRoYXQgdGhleSB3ZXJlIGFibGUgdG8gY29tZSB1cCB3aXRoIGEgcHJvZmlsZS4uIAo3KSBLZWVwIGluIG1pbmQsIHdlIGZvbGxvdyBib3RoIHRoZSBydWxlcyBvZiBSZWRkaXQgaXRzZWxmIGFuZCBvdGhlciBwb2tlciBzaXRlcy4gRG8gbm90IGFzayBmb3IgYW55IHR5cGUgb2YgZ2hvc3Rpbmcgd2hpbGUgcGxheWluZyBhbmQgZm9sbG93IFJlZGRpdCB1c2VyIGFncmVlbWVudC4KRG93bmxvYWQgZGUgRmlsbWVzIEdyIERvd25sb2FkIGRlIFByb2dyYW1hcywgRG93bmxvYWQgZGUgSm9nb3MsIERvd25sb2FkIGRlIE0gV2FsbHBhcGVycywgUmV2aXN0YXMgZSBUViBvbmxpbmUhClJ1YWRoYW4yMzAwICAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpSYWtlZCBzdGFnZXMgd2VyZSBncmVhdCBmb3IgbGV0dGluZyBhIGZsYXQgYXVkaWVuY2Ugc2VlIHRoZSB3aG9sZSBzdGFnZSBidXQgdGhlIHJlcXVpcmVkIHN0cmFuZ2UgbW92ZW1lbnRzIHRvIGF2b2lkIHRoZSBhcHBlYXJhbmNlIG9mIGxpbXBpbmcgb3Igc3R1bWJsaW5nLiBJdCB3YXMgYWxzbyBhdCB0aGlzIHRpbWUgdGhhdCBtb3JlICJtb2Rlcm4iIHRoZWF0cmVzIHdlcmUgYmVpbmcgYnVpbHQgd2l0aCB0aGUgdGVycmFjZWQgYXVkaWVuY2Ugc2VhdGluZyB0aGF0IHdlIGFyZSB1c2VkIHRvLi4gCkRvIHdoYXRldmVyIHlvdSB3YW50IHdpdGggeW91ciBoYWlyLiBNeSBjb21tZW50IHdhcyBzcGVjaWZpY2FsbHkgYWJvdXQgcHV0dGluZyBvbiBhIGxpdHRsZSBiaXQgb2YgbWFrZXVwLiAKQWZ0ZXIgeW91J3ZlIHdvcmtlZCB1cCBhbiBhcHBldGl0ZSwgc3RvcCBpbiBmb3IgYSBjb21wbGltZW50YXJ5IGx1bmNoIChleGNsdWRpbmcgaG9saWRheXMpLiBGb3IgYSBxdWljayBzbmFjayBzdG9wIHRocm91Z2ggdGhlIGxvYmJ5IGZvciBsZW1vbmFkZSBhbmQgY29va2llcyBhcyBhbiBhZGRlZCB0cmVhdC4gQmVmb3JlIGRpbm5lciwgbW9zZXkgZG93biB0byB0aGUgcmVzdGF1cmFudCBmb3IgaGFwcHkgaG91ciBuaWdodGx5IHdoaWxlIG92ZXJsb29raW5nIHRoZSBHdWxmIENvYXN0J3MgbW9zdCBiZWF1dGlmdWwgYmVhY2hlcyBhbmQgY29sb3JmdWwgc3Vuc2V0cy5IZXkhIEkndmUgcHJldmlvdXNseSBzdGF5ZWQgaGVyZSBidXQgaXQncyBiZWVuIGEgZmV3IHllYXJzLiAKNS4gcmljZSwgd2hlYXQsIHNwZWx0LCByeWUsIGhhdmUgZXhjZXB0aW9uYWxseSBoaWdoIGxldmVscyBvZiBkZWZlbnNpdmUgZ2x5Y29wcm90ZWlucyBrbm93biBhcyBsZWN0aW5zLCB3aGljaCBmdW5jdGlvbiBtdWNoIGxpa2UgdGhvcm5zLiBMZWN0aW5zIGFyZSwgYnkgZGVzaWduLCBwYXJ0aWN1bGFybHkgcmVzaXN0YW50IHRvIGRlZ3JhZGF0aW9uIHRocm91Z2ggYSB3aWRlIHJhbmdlIG9mIHBIIGFuZCB0ZW1wZXJhdHVyZXMuIChDb29raW5nIGRvZXNuJ3QgaGVscCB1cykKQSB2aXNpdCB0byB0aGUgdmV0ZXJpbmFyaWFuIG1heSBiZSBpbiBvcmRlci4gCklmIHlvdSBkZWNpZGUgdG8gZ28gZm9yIE5vIExpbWl0ICwgeW91IG1pZ2h0IHdhbnQgdG8gY2hlY2sgb3V0IHRocmVlIGJvb2sgc2VyaWVzIEhhcnJpbmd0b24gb24gIGFuZCBhIGJvb2sgTm8gTGltaXQgUG9rZXIgICBUaGVvcnkgYW5kIFByYWN0aWNlLiBIYXZpbmcgcmVhZCBxdWl0ZSBhIG1hbnkgYm9va3Mgb24gcG9rZXIsIEkgY2FuIHNheSB0aGVzZSBib29rcyBjb21iaW5lZCB3aXRoIHRoZSBUaGVvcnkgb2YgUG9rZXIgYXJlIHF1aXRlIGVub3VnaC4uIApBdCB0aGlzIHBvaW50IGl0IHJlbWFpbnMgdW5jbGVhciB3aGV0aGVyIHRoZSBzdXNwZWN0IGZpcmVkIGFsbCBvZiB0aGUgZ3Vuc2hvdHMgb3Igd2hldGhlciB0aGUgdmljdGltIG1heSBoYXZlIHJldHVybmVkIGZpcmUuCk11bHRpcGxlIGFzc2F1bHQgYWNjdXNlcnMuIApIZSdsbCBuZXZlciBrbm93IHRoYXQgSSB3YXMgYmx1ZmZpbmcsIGJ1dCBoZSBzdXJlIGtuZXcgdGhhdCBJIHdvbiB0aGUgcG90Li4gCkkgc2VyaW91c2x5IGp1c3QgdGhpbmsgeW91IGFyZSBhIE1lc3NlciBhbG9uZSB0eXBlIHRob3VnaCB3aGVyZSB5b3UgY2FuIHNhdmUgeW91ciBtb25leS4gClRoaXMganVzdCByZW1pbmRlZCBhYm91dCBzb21ldGhpbmcgbXkgaHVzYmFuZCBhbmQgSSBkaWQgbGFzdCB5ZWFyLiBXZSBsaXZlIGEgaGFsZiBhIGJsb2NrIGF3YXkgZnJvbSBhIHBvcHVsYXIgcGFyay4gClVuZSBmZW1tZSB2ZW5haXQgc2UgcGxhaW5kcmUgcXVlIHNhIGZpbGxlIGRlIDE2IDE3IGFucyBmcnF1ZW50ZSB1biBnYXJvbiBtYWpldXIgZGUgcGx1cyBkZSAyMCBhbnMuIApJIGhhdmUganVzdCByZWFkIHlvdXIgY29tbWVudCBhbmQgd2lsbCB0aHJvdyBpbiBteSBpbXByZXNzaW9ucy4gRnJvbSB0aGUgbG9jYXRpb24gb2YgcGFpbiB5b3UgZGVzY3JpYmUsIG9uZSBwb3NzaWJpbGl0eSBpcyB0aGF0IHRoZSBpbml0aWFsIGluanVyeSB3YXMgYW4gYWRkdWN0b3Igc3RyYWluIHdpdGggcmFkaWF0aW9uIGJleW9uZCB0aGUga25lZSBqb2ludC4gRHVlIHRvIHRoZSBkZWNyZWFzZWQgcmVsYXRpdmUgY29udHJpYnV0aW9uIG9mIHRoZSBoaXAgYWRkdWN0b3JzIGluIGN5Y2xpbmcsIEkgYmVsaWV2ZSB0aGlzIGlzIGxlc3MgbGlrZWx5LiAKQnV0IHRoZXNlIGFyZSB3aGF0IFRydW1wIHJlZmVycyB0byBhcyAic2hpdGhvbGUiIGNvdW50cmllcy4uIApXZSB3YW50ZWQgdG8gdGFrZSB0aGF0IHJvdXRlIGJ1dCBzaW5jZSBteSBkYXVnaHRlciBzdGlsbCB3YWtlcyB0byBudXJzZSB3ZSB3b3VsZG4gYmUgYWJsZSB0byBnZXQgYW55IGRlZmluaXRpdmUgaW5mb3JtYXRpb24gYW5kIEkgY2FuIGdldCBhbnlvbmUgdG8gaGVscCB3aXRoIG15IGtpZHMgb24gdGhlIE1vbmRheSBhZnRlciB0aGUgdGVzdC4gSSBiZWVuIHdhaXRpbmcgdG8gZ2V0IG15IHNsZWVwIHN0dWR5LCBjYXJkaW9sb2d5LCBNUkksIG5ldXJvbG9neSwgZ2FzdHJvZW50ZXJvbG9neSwgYW5kIHBhaW4gbWFuYWdlbWVudCBhcHBvaW50bWVudHMsIHNpbmNlIEF1Z3VzdCAoc2xlZXAvZ2FzdHJvKSwgT2N0b2JlciAoY2FyZGlvbG9naXN0KSwgYW5kIE5vdmVtYmVyIChNUkkvTmV1cm8pLCBiZWNhdXNlIEkgZG9uIGhhdmUgYW55IHRpbWUgYW5kIG5vIGhlbHAgd2l0aCBteSBraWRkb3MuIApMb3NpbmcgdGhlIHdhci4gClRoYXQgdGhpbmcgcHJvYmFibHkgY29zdCBEYXZpZCBhIHByZXR0eSBwZW5ueS4gCkZyb20gdGhlIGJlZ2lubmluZyBvZiBvdXIgcmVsYXRpb25zaGlwLCBJIGtuZXcgdGhhdCBoZSBoYWQgYSBwYXNzaW9uIGZvciBnb2xmIGFuZCBwbGF5aW5nIHBva2VyLiAKSWYgeW91IHdpbiBvbmUsIHlvdSBnbyB1cCBvbmUgb3IgdHdvLiAKSXQncyBsaWtlIGlmIFRvbnkgTW9udGFuYSBvcmRlcmVkIGEgcGFydHkgY2Fsem9uZSBhbmQgdGhlbiBtYWRlIHRoZSBkZWxpdmVyeSBndXkgc3RhbmQgdGhlcmUgYW5kIHdhdGNoIGhpbSB0YWtlIGEgYmF0aCBpbiBoaXMgZ2lhbnQgSmFjdXp6aSB0dWIgYmVmb3JlIGFncmVlaW5nIHRvIHBheSBmb3IgaXQuIApNYWxnciB0b3V0IGNldCBhYnVzLCBsZSBtb3RldXIgYSBzZXVsZW1lbnQgcHJvZHVpdCAxIGNoIGRlIG1vaW5zIGV0IGZvdXJuaSBsZSBtIGNvdXBsZSBlbiByZXRvdXJuYW50IHN1ciBsZSBkeW5hbW9tIGFwciBzb24gdm95YWdlIGVuIGVuZmVyLiBVbiBzZXVsIGRlIHNlcyBjeWxpbmRyZXMgcGVyZGFpdCBkZSBsIGRhbnMgdW5lIHByb3BvcnRpb24gZGUgMTMlLCBjZSBxdWkgcmVxdWllcnQgZyB1bmUgdiBhcHByb2ZvbmRpZSBvdSBsZSByZW1wbGFjZW1lbnQuIApQcm9mZXNzaW9uYWxzOiBwbGVhc2UgYW5zd2VyIHRoZSBwcm9maWxlIHF1ZXN0aW9ucyBzbyBwcm9maWxlcyBjYW4gYmUgc2VhcmNoZWQgYnkgbG9jYXRpb24gYW5kIGJvZHl3b3JrIHR5cGUuIEFsc28gYmUgc3VyZSB0byBpbmNsdWRlIGNvbnRhY3QgaW5mb3JtYXRpb24gc28gbm9uIG1lbWJlcnMgY2FuIHJlYWNoIHlvdSBlYXNpbHkuIEV2ZXJ5b25lOiBwbGVhc2UgdGFnIGFsbCBwaG90b3Mgb3IgdmlkZW9zIHlvdSBwb3N0IGJ5IHN1YmplY3Qgb3Iga2V5d29yZCBzbyB0aGV5IGNhbiBiZSBzZWFyY2hlZC4gClJhbmdlZCB3ZWFwb25zIGFyZSBwb3dlcmZ1bCBhbmQgeW91IGNhbiBvZnRlbiB0YWtlIG91dCBtdWx0aXBsZSBlbmVtaWVzIGJlZm9yZSB0aGV5IGV2ZW4gd2FsayBvdmVyIHRvIHlvdS4gWW91IGFsc28gZG9uIHdhbnQgdG8gYmUgdG91Y2hpbmcgc29tZSBlbmVtaWVzIHVudGlsIHlvdSBtdWNoIHN0cm9uZ2VyIChsaWtlIGdoYXN0cyBvciB0aG9zZSBncmV5IHRoaW5ncyBpbiB0aGUgY2xvYWt3b29kKS4gClRyYWRpdGlvbmFsIElyaXNoIE11c2ljIEJvdWxkZXIgSXJpc2ggTXVzaWMgaXMgYSBnYXRoZXJpbmcgb2YgbXVzaWNpYW5zIGRlZGljYXRlZCB0byBwbGF5aW5nIHRoZSB0cmFkaXRpb25hbCBtdXNpYyBvZiBJcmVsYW5kLiBBIGxpdmVseSBtaXggb2YgamlncywgcmVlbHMsIHBvbGthcyBhbmQgc29uZ3MuIApQdXR0aW5nIGl0IGFsbCB0b2dldGhlciwgb3VyIHByb2JhYmlsaXR5IGlzIDMxMiAvIDEzMjYgPSA0IC8gMTcsIGNvbmZpcm1pbmcgb3VyIHByZXZpb3VzIGFuc3dlci4uIApNZWV0dXBzIG1heSBpbmNsdWRlIHdhbGtzLCBib3dsaW5nLCBldmVuaW5nIG1lYWxzIG9yIGdldCB0b2dldGhlcnMgYXQgZmVzdGl2YWxzIG9yIGNvbmZlcmVuY2VzLiBXZSBkbyBub3QgcHJvdmlkZSByZWZ1bmRzIG9yIGNyZWRpdHMgZm9yIHRob3NlIHdobyBjYW5ub3QgYXR0ZW5kIGJ1dCB3ZSB3aWxsIHVzZSB0aGlzIGtub3dsZWRnZSB0byBhdHRlbXB0IHRvIGtlZXAgdGhlIHJhdGlvcyBldmVuLiBZb3UgaGF2ZSBhIHNwZWVkIGludHJvZHVjdGlvbiBmb3IganVzdCB0aHJlZSBtaW51dGVzIHRvIGZpbmQgb3V0IGFzIG11Y2ggYWJvdXQgZWFjaCBvdGhlciBhcyBwb3NzaWJsZS4gCldlIHNlYXJjaGVkIGFuZCByZXZpZXdlZCBhIGxvdCBvZiB0aGVzZSB0aXBzIGFuZCBoZXJlIGlzIHRoZSBsaXN0IG9mIFRleGFzIEhvbGQnZW0gcG9rZXIgcHJhY3RpY2UgcG9pbnRlcnMgd2UgZm91bmQgdGhhdCB5b3UgbmVlZCB0byBrbm93IGlmIHlvdSBhcmUganVzdCBhIGJlZ2lubmVyLiBUYWtlIHRvIGhlYXIgdGhlc2UgcG9rZXIgcHJhY3RpY2UgdGlwcyBhbmQgeW91IGNhbiBhY3R1YWxseSBiZSBhIGdvb2QgcG9rZXIgcGxheWVyIHNvbWVkYXkuIApUaGUgcHJvYmxlbSBpcyB0aGF0IGxpa2UgV2FsbCBTdHJlZXQsIHRoZSBwZW9wbGUgaW4gY2hhcmdlIHNlZSBub3RoaW5nIHdyb25nIHdpdGggcHJvZml0aW5nIGZyb20gZGVidC4gQW5kIGxpa2UgV2FsbCBTdHJlZXQsIHBlb3BsZSB0aGluayB0aGV5IGRlc2VydmUgdGhlc2Ugc2FsYXJpZXMgZXZlbiB0aG91Z2ggdGhleSBjb21wbGV0ZWx5IG91dCBvZiBsaW5lIHdpdGggd2hhdCBzdHVkZW50cyBjYW4gYWN0dWFsbHkgYWZmb3JkLiBBbmQgbGlrZSBXYWxsIFN0cmVldCwgbWFueSB1bml2ZXJzaXR5IGFkbWluaXN0cmF0aW9ucyBhY3Qgc3VycHJpc2VkIGF0IHRoZSBhbmdlciBmcm9tIGJlbG93Li4gCkkgdXNlZCB0byB0aGluayB0aGlzIHdheSBidXQgaXQgYmVuZWZpdHMgbG9zaW5nIHBsYXllcnMgYW5kIG5lZ2F0aXZlbHkgZWZmZWN0cyB0aGUgd2luIHJhdGUgb2Ygd2lubmluZyBwbGF5ZXJzLiAKS3RlbnNrYXAgZWZ0ZXIgZW4gYWZmciAgIGtuc2xvciBhdiB0dml2ZWwKSWYgeW91IGhhdmUgbmV2ZXIgcGxheWVkIGJlZm9yZSwgbWFrZSBzdXJlIHRoZXkgaGF2ZSB0dXRvcmlhbHMgZm9yIHRoZSBkaWZmZXJlbnQgdHlwZXMgb2YgcG9rZXIsIGEgIkhvdyB0byBQbGF5IFBva2VyIEdhbWVzIiBzZWN0aW9uIGluIGFkZGl0aW9uIHRvIGEgcmFua2luZyBvZiBwb2tlciBoYW5kcy4gCkkgdGhpbmsgeW91ciBiaWdnZXN0IHByb2JsZW0gaGVyZSBpcyB5b3UgYXJlIHZlcnkgcGFzc2l2ZS4gSXQgYmVlbiBhIG1vbnRoIGFuZCBhcyBmYXIgYXMgSSBjYW4gdGVsbCBmcm9tIHdoYXQgeW91IHNhaWQsIHlvdSBzdGlsbCBoYXZlbiBzYWlkIHRvIHlvdXIgYmVzdCBmcmllbmQvbW90aGVyIG9mIGNoaWxkIHlvdSB3YW50IHRvIGJlIGdvZG1vdGhlciB0byAiSGV5LCB3aGF0IHRoZSBoZWNrIGhhcHBlbmVkIHRvIG15IGludml0ZSB0byB5b3VyIGJhYnkgc2hvd2VyPyBXYXMgaXQgbG9zdCBpbiB0aGUgbWFpbD8gRGlkIHlvdSBqdXN0IG5vdCB3YW50IG1lIHRoZXJlPyBXaGF0IGdvaW5nIG9uPyIKT3IgbWF5YmUgdGhleSBoYXZlIHRvIGRlc3Ryb3kgYmFiYXUgaGltc2VsZi4gCkFuZ2xlIHNob290aW5nIGRvZXNuIHJlYWxseSBib3RoZXIgbWUgdGhhdCBtdWNoIGJlY2F1c2UgSSBkb24gcmVhbGx5IGZhbGwgZm9yIGFueSBvZiB0aGUgdHlwaWNhbCB0cmlja3MuIApTZWZ0b24gaXMgY29ycmVjdCBhYm91dCBvdXIgY3VycmVudCBkYW1hZ2luZ2RlcGVuZGVuY3kgb24gb2lsLCBnYXMgYW5kIG1pbmVyYWxzIGJ1dCBoaXMgZGVwZW5kcyBtaXNzZXMgc29tZSBodWdlIGFzcGVjdHMgb2YgdGhlIGRlYmF0ZS4gClNvIGhhYmUgaWNoIGpldHp0IG5vY2ggZWluZW4gRnJldW5kIHVuZCBpY2ggZ2xhdWJlIGVyIGhhdCBzaWNoIHNvZ2FyIGVpbiB3ZW5pZyBpbiBtaWNoIHZlcmxpZWJ0LCBvYndvaGwgZXIgaW4gV2llbiBlaW5lIEhhdXNrYXR6ZSBoYXQgIGhpZXIgYXVmIExhIFBhbG1hIGlzdCBlciBhdWYgZGVuIEh1bmQgZ2Vrb21tZW4gIG1laW5lbSB0cmV1ZW4gSHVuZGVibGljayBrb25udGUgZXIgbmljaHQgd2lkZXJzdGVoZW4uIE1hbmNobWFsIG5laG1lIGljaCBpaG4gc29nYXIgenUgQXVzZmxnZW4gb2RlciB6dW0gV2FuZGVybiBtaXQuClRoaXJkbHksIHBheSBhdHRlbnRpb24gdG8gdGhlIGZvb2RzIGFuZCBiZXZlcmFnZXMgeW91IGNvbnN1bWUuIFRoaW5rIGFib3V0IGhvdyB0aGV5IHRhc3RlLiBGb3IgaW5zdGFuY2UsIHdoaWNoIGZsYXZvciBlbGVtZW50cyBkaXN0aW5ndWlzaCBhIHN0cmF3YmVycnkgZnJvbSBhIGdyYXBlPyBHbyB0aHJvdWdoIHlvdXIgc3BpY2UgY2FiaW5ldCBhbmQgc25pZmYgZWFjaCBvbmUuIFRoaW5rIGFib3V0IHdoYXQgZWFjaCBzbWVsbHMgbGlrZSBhbmQgd2hhdCBtYWtlcyBpdCB1bmlxdWUuCkRhcyBnZWhlIGxhbmdmcmlzdGlnIGF1ZiBLb3N0ZW4gZGVyIFF1YWxpdHQuIApUaGUgZGVmaW5pdGlvbiBvZiBhIGNvdmFsZW50IGJvbmQgaXMgJ2Egc2hhcmVkIHBhaXIgb2YgZWxlY3Ryb25zJyBzbyB0d28gcGFpcnMgbWFrZXMgYSBkb3VibGUgYm9uZCBhcyBpbiBjYXJib24gZGlveGlkZSBhbmQgdGhyZWUgc2hhcmVkIHBhaXJzIG1ha2VzIGEgdHJpcGxlIGJvbmQgYXMgaW4gYSBuaXRyb2dlbiBtb2xlY3VsZS4gSWYgeW91IGFyZSBidXJuaW5nIHJvY2tldCBmdWVsIHN1Y2ggYXMgaHlkcmF6aW5lIE4ySDQgYW5kIGZvcm1pbmcgbml0cm9nZW4sIHlvdSBhcmUgbWFraW5nIHZlcnkgc3Ryb25nIGJvbmRzIGFuZCBzbyByZWxlYXNpbmcgYSBsYXJnZSBhbW91bnQgb2YgZW5lcmd5LiAoRnVsbCBBbnN3ZXIpLiAKSXQncyBnb2luZyB0byB0YWtlIG1lIGEgd2hpbGUgdG8gZ2V0IHVzZWQgdG8gYWxsIHRoZSBnYWRnZXRzIHNpbmNlIEkndmUgbmV2ZXIgaGFkIGEgY2FyIHRoYXQgZXZlbiBoYWQgYXV0b21hdGljIGxvY2tzIG9yIHdpbmRvd3MuICBJIHRvb2sgbXkgZG9nIHRvIHRoZSBncm9vbWVyIHRvZGF5IGFuZCB3YXMgYWJsZSB0byBmaXQgaGVyIGtlbm5lbCBpbiB0aGUgYmFjayBhbmQgcGljayB1cCBncm9jZXJpZXMgd2l0aG91dCBmb2xkaW5nIHRoZSBzZWF0cyBkb3duLiBCYXNpY2FsbHkgYSBkcmVhbSBjb21lIHRydWUuLiAKRGV0cm9pdCBUaWdlcnMgTmV3cyBBbmQgVXBkYXRlcwpBbGwgdGhlIHdheSB0aHJvdWdoIHRoZSBjbG91ZCwgc29tZSBvZiB0aGUgbGlnaHQgaXMgZ2V0dGluZyByZWZsZWN0ZWQgZG93bndhcmRzIHRvd2FyZCB0aGUgdmlld2VyLi4gCkl0IHdhcyBoaXMgYnVkZGllcyBBcnRodXIgYW5kIEFyY2hpZS4gIkFyY2hpZSBsb3ZlcyB0aGUgQ293Ym95cywgYW5kIEFydGh1ciBoYXRlcyB0aGVtLiBFdmVyeWJvZHkga25vd3MgaG93IGJhZCBBcnRodXIgaGF0ZXMgdGhlIENvd2JveXMsIiBDYXJhd2F5IHRvbGQgbWUuIEl0IHRvb2sgbW9udGhzIHRvIGNvbmZpcm0gd2hldGhlciBBcnRodXIgYW5kIEFyY2hpZSB3ZXJlIGV2ZW4gcmVhbCBwZW9wbGUgKHRoZXkgYXJlKSwgYnV0IHRoZSBjb3BzIGRpZG4ndCBjb21lIGZvciB0aGVtLiBUaGV5IGNhbWUgYmVjYXVzZSBDYXJhd2F5IGNhbGxlZCB0aGUgY2hpZWYgb2YgcG9saWNlIHRvIHNheSBoaXMgd2lmZSB3YXMgY2hhc2luZyBoaW0gd2l0aCBhIGtuaWZlLi4gClRoaXMgaXNuJ3Qgd2hhdCB5b3UgdGhpbmsuIEl0J3MgbmFtZSBwcm9iYWJseSBpc24ndCBldmVuICJSaW5nIFRvc3MsIiBidXQgc2luY2UgdGhlIHByZW1pc2UgaXMgdG8gc3dpbmcgYSByaW5nIHRpZWQgdG8gYSByb3BlIHRvd2FyZCBhIGhvb2sgb24gYSBiZWFtLCBpdCBzZWVtcyBhcHByb3ByaWF0ZSBlbm91Z2guClRoZSBzdGFuZCB0b29rIGNhcmUgb2YgYmFzaWMgbW92ZW1lbnQsIEFkcmlhbiBjb3VsZCB0ZXN0IHRvIHNlZSBpZiB0aGUgZ2FtZSBoZWxkIHVwIHVuZGVyIHNldmVyYWwgaG91cnMgb2YgcGxheSwgYW5kIE1pY3Jvc29mdCBmaW5hbGx5IGRpc2NvdmVyZWQgYSBkZW1vZ3JhcGhpYyB0aGF0IGdhdmUgYSBzaGl0IGFib3V0IHRoZSBLaW5lY3QuLiAKTW9udHJlYWwgcG9pc2VkIHRvIG92ZXJ0YWtlIFZhbmNvdXZlciBhcyBDYW5hZGEncyBzZWNvbmQgbGFyZ2VzdCBob3VzaW5nIG1hcmtldApXYXMgdGhhdCBhIHByb2R1Y3Qgb2YgdGhlIGNvbXBldGl0aW9uIG9yIGRpZCBNY0tlZSBjb21wbGFpbnQgZW5kIHVwIHNlcnZpbmcgYXMgYSByYWxseWluZyBwb2ludCBmb3IgYSBMb25kb24gdGVhbSB0aGF0IGhhZCBwZXJmb3JtZWQgYXQgYW4gdW5ldmVuIGxldmVsIHRoZSBwYXN0IG1vbnRoPyBZb3UgbmV2ZXIga25vdy4gSXMgYSBwb3B1bGFyIGtpZCBpbiB0aGUgcm9vbSwgRGFsZSBIdW50ZXIgc2FpZC4gCkEgeWVhciBsYXRlciB0aGUgQ29tbWl0dGVlIHRvIEVuZCBFbGRlciBIb21lbGVzc25lc3Mgb3BlbmVkIEJpc2hvcCBTdHJlZXQsIHRoZSBmaXJzdCBvZiBzaXggcmVzaWRlbmNlcywgd2hpY2ggaG91c2VzIDEzMCBlbGRlcnMuIApPbmx5IExpbmRhIEhhbWlsdG9uLCBKZXNzaWNhIEJpZWwsIGFuZCBIaWxsYXJ5IFN3YW5rIGNvbWUgdG8gbWluZCB3aGVuIGl0IGNvbWVzIHRvIHN1Y2Nlc3NmdWxseSBsb29raW5nIGxpa2UgYSB2ZXJ5IHN0cm9uZyB3b21hbi4gCldoZW4gaW4gZ29vZCBodW1vdXIgaGUgaGFkIHNldmVyYWwgdHJpY2tzLCB3aGljaCBJIGtub3cgdG8gaGF2ZSBiZWVuIHNlbGYgdGF1Z2h0LCBhbmQgdGhlIHNvbGUgb2JqZWN0IG9mIHdoaWNoIHdhcyBldmlkZW50bHkgdG8gZXhjaXRlIGxhdWdodGVyLiAKWW91IHJlbWVtYmVyIHRoYXQgdGhlIGd1biB3ZW50IG9mZi4gClNvbGljaXRvcnMuIApOb3Qgb25seSBkb2VzIHRoZSBwYXNzcG9ydCByZXF1aXJlbWVudCBtYWtlIG1vdmVtZW50IGJhY2sgYW5kIGZvcnRoIGFjcm9zcyB0aGUgYm9yZGVyIG1vcmUgZGlmZmljdWx0LCBidXQgaXQgY2hhbmdlcyB0aGUgc3ltYm9saWMgd2VpZ2h0IG9mIHRoZSBib3JkZXIgaXRzZWxmLiAKQnV0IGFzIGlzIG9mdGVuIHRoZSBjYXNlLCB0aGluZ3MgY2FuIGNoYW5nZSBhZnRlciB0YXBpbmcuIApCZWZvcmUgaGlzIGRlYXRoIHRob3VnaCwgaGUgaGFkIHN1ZmZlcmVkIHllYXIgcm91bmQgZnJvbSBza2luIGFsbGVyZ2llcyB0aGF0IG1hZGUgaGltIHNtZWxsIGJhZC4gSGUgaGFkIHRvIGhhdmUgc3BlY2lhbCBkaWV0IGFuZCB0b29rIHBpbGxzIHJlZ3VsYXJseS4gCjcuIEEgcXVpY2sgY2FsbCBtZWFucyBhIGRyYXdpbmcgaGFuZCBtb3N0IG9mIHRoZSB0aW1lLgpUaG91Z2ggYSBtb3RoZXIgd2lsbCBhcHByZWNpYXRlIHN1Y2gga2luZCBvZiBnaWZ0IGJhc2tldCwgc2hlIHdpbGwgYXBwcmVjaWF0ZSBpdCBtb3JlIGlmIHlvdSBwZXJzb25hbGl6ZSB5b3VyIGdpZnQgdG8gdGhlbS4gSXQgd2lsbCBiZSBoZWxwZnVsIGlmIHlvdSB0aGluayBvdXQgb2YgdGhlIGJveCBhbmQgc3RhcnQgbWFraW5nIHlvdXIgb3duIHZlcnNpb24gb2YgYSBnaWZ0IGJhc2tldC4gRm9sbG93IHRoaXMgZ3VpZGUgc28geW91IGNhbiBjcmVhdGUgYSB1bmlxdWUgYW5kIHBlcnNvbmFsaXplZCBiYXNrZXQgdGhhdCB0aGUgbW90aGVyIHdpbGwgc3VyZWx5IGxvdmU6LiAKVGhlc2UgYXJlIGJpZyB0aXRsZXMgYW5kIHRoZSBjb21wYW5pZXMgd2lsbCB3YW50IGJpZyBuYW1lIGdhbWVzIGZvciB0aGVpciBuZXcgY29uc29sZXMgcmVsZWFzZSB0byBoZWxwIHdpdGggc2FsZXMsIGVzcGVjaWFsbHkgd2l0aCB0aGUgaGlnaCBwcmljZSB0YWcgdGhleSB3aWxsIGxpa2VseSBoYXZlLiBBcyBhIHNpZGUgbm90ZSwgSSBhbHNvIHRoaW5rIEdob3N0cyBvZiBUc3VzaGltYSB3aWxsIGJlIGEgbmV4dCBnZW4gcmVsZWFzZSBmb3IgUGxheVN0YXRpb24uLiAKSSB0cmllZCBzeXN0ZW0gcmVzdG9yZSB0byBtYWtlIGV2ZXJ5dGhpbmcgYmFjayBpbiBvcmRlcmJ1dCBkb2VzIG5vdCB3b3JrLiBVbmlibHVlIERyaXZlcnNjYW5uZXIgMTUgcmVwb3J0ZWQgdGhhdCA4IGRyaXZlcnMgd2VyZSBvdXQgb2YgZGF0ZSw0IG9mIHRoZW0gbGFiZWxsZWQgYXMgImFuY2llbnQiLiAKIkhlIHdhcyBhbHdheXMgc28gamVhbG91cywiIHNoZSBzYWlkLiAiSGUgdGhvdWdodCBJIHdhcyBnb2luZyB0byBnbyBvdXQgYW5kIGZpbmQgYW5vdGhlciBtYW4sIGJ1dCBJIGRpZG4ndC4iCkJ1dCBJIHJhaXNlZCBoaW0gNTAwIGFueXdheSwgYW5kIGhlIHByb21wdGx5IHdlbnQgYWxsIGluIHdpdGggYW5vdGhlciByYWlzZS4gSSBzaG93ZWQgbXkgOXMgYW5kIHRoZSB0d28gdGltZXMgd29ybGQgY2hhbXAgZXhpdGVkIHN0YWdlIGxlZnQuIApBVDogV2hlbiAiRmxhc2ggQm95cyIgY2FtZSBvdXQgbGFzdCB5ZWFyIHRoZXJlIHdhcyBhIHNlbnNlIHRoYXQgeW91IGV4cG9zaW5nIHRoZSBoaWdoIGZyZXF1ZW5jeSB0cmFkaW5nIHN5c3RlbSBtaWdodCBjaGFuZ2UgdGhlIHN5c3RlbS4gSGF2ZSB5b3Ugc2VlbiBhbiBpbXBhY3QgaW4gdGhlIHdheSB5b3UgZXhwZWN0ZWQgb3ZlciB0aGUgbGFzdCB5ZWFyPwpUaGVyZSBpc24gYSBzY2VuYXJpbyB3aGVyZSB0aGlzIGlzIGFueXRoaW5nIGJ1dCBpbnN1bHRpbmcgdG8gaGVyIGFuZCBtYWtlcyBpdCBjbGVhciBhcyBkYXkgeW91IGFyZSBhIHN0cmFpZ2h0IHVwIEFBQSBncmFkZSBkdW1iIGR1bWIuClRoZSBjcmVkaXQgZm9yIHRoaXMgaW5nZW5pb3VzbHkgY2hvcmVvZ3JhcGhlZCBCb2xseXdvb2Qgc3R5bGUgdmVudHVyZSBnb2VzIGVudGlyZWx5IHRvIE5hcmVuZHJhIE1vZGksIHdobyBmcm9tIHRoZSB2ZXJ5IGZpcnN0IGRheSBhZnRlciBhc3N1bWluZyBoaXMgb2ZmaWNlIGhhcyBiZWVuIGluIHRoZSBkcml2ZXIgc2VhdCwgbm90IG9ubHkgY29udHJvbGxpbmcgdGhlIGluIElzbGFtYWJhZCBieSBrZWVwaW5nIGl0IGNvbnN0YW50bHkgaW4gYSByYXRoZXIgdGhhbiBtb2RlIGJ1dCBhbHNvIG1hbmFnaW5nIGFsbW9zdCBldmVyeSBkZXZlbG9wbWVudCBpbiBJbmRpYSBQYWtpc3RhbiByZWxhdGlvbnMuIApUUkFHSUMgTE9TUzogSmFtZXMgIkppbW15IiBTaGF3IGRpZWQgcXVpY2tseSBmb2xsb3dpbmcgYSBzZXZlcmUgYXR0YWNrIGF0IGp1c3QgMjcgeWVhcnMgb2xkIGluIE5vdmVtYmVyIDIwMTUuIEhlIHRvb2sgVmVudG9saW4sIGJ1dCBpdCBkaWQgbm90aGluZy4gUGljdHVyZTogSkFNRVMgV0lMVFNISVJFCkZhbWlsaWFsIDogY2UgY2hhbmdlbWVudCBwZXV0IHRyZSByZWwgYXZlYyBsJ3RhYmxpc3NlbWVudCBkJ3VuIGxpZW4gZGUgZmlsaWF0aW9uIChyZWNvbm5haXNzYW5jZSBkJ3VuIGVuZmFudCBzb3VzIFggb3UgdW5lIGFkb3B0aW9uKSA7IGxhIGRlc3RydWN0aW9uIGQndW4gdGVsIGxpZW4gKHJ2b2NhdGlvbiBkJ3VuZSBhZG9wdGlvbiBzaW1wbGUpIG91IHVuZSBzaW1wbGUgbW9kaWZpY2F0aW9uIGRlIGNlIGxpZW4uIApNYW55IGRvZ3MgYXJlIG5vdCBoeXBlcmFjdGl2ZS4gTXkgZG9nIHNsZWVwcyBtb3N0IG9mIHRoZSBkYXkgYW5kIGlzIGZyaWVuZGx5IGJ1dCBjYWxtLiBIeXBlcmFjdGl2aXR5IGlzIGEgYnJlZWQgdGhpbmcgYnV0IGlzIG5vdCB0cnVlIG9mIGRvZ3MgaW4gZ2VuZXJhbC4gTWFueSBicmVlZHMgYXJlIGEgcXVpdGUgZG9zaWxlLgpDb25zY2lvdXMgY3JlYXRpdml0eSBoYXBwZW5zIHdoZW4gdGhlIGVnbyBpZGVudGlmaWNhdGlvbiBubyBsb25nZXIgcHJldmVudHMgbGlmZSBmcm9tIGNlbGVicmF0aW5nIGl0c2VsZi5NeSB2aXNpb24gb2YgdGhlIGZ1dHVyZTpUaGUgcHVycG9zZSBvZiBsaWZlIGZvciB0aGUgaHVtYW4gYm9keS9taW5kIGlzIG5vdCB0byBiZSBhIHByZWRpY3RhYmxlLCBwcm9ncmFtZWQgcmVwZXRpdGlvbiBvZiBvdGhlciBpZ25vcmFudCBwZW9wbGVzIGJlbGlldmVzLCBrbm93bGVkZ2Ugb3IgYmVoYXZpb3JzLCBidXQgdG8gYmUgYSB0ZW1wb3JhcnkgdG9vbCB0byBtYW5pZmVzdCBhbmQgZXhwcmVzcyB0aGUgcHJlc2VuY2Ugb2YgYXdhcmVuZXNzLCB0aGUgdW5jb25kaXRpb25hbCBsb3ZlLCB0aGUgYmxpc3MsIHRoZSBwZWFjZSwgdGhlIGZvcm1sZXNzIGZvcm0gb2YgbGlmZSB0aGF0IHdlIGFyZS5JIGFtIHJlYWxseSBnb29kIGF0OkFzc2lzdGluZyBwZW9wbGUgaW4gdW5kZXJzdGFuZGluZyB0aGUgc3ViY29uc2Npb3VzIG1pbmQgYW5kIGl0cyBwcm9ncmFtbWluZyBhbmQgaW4gdXRpbGl6aW5nIHRoZWlyIGludGVsbGlnZW5jZSBhbmQgdGhlIGZpdmUgc2Vuc2VzIG9mIHRoZSBib2R5IHRvIGNsZWFybHkgZGlzY292ZXIgdGhlIGlsbHVzaW9uIG9mIGlkZW50aWZpY2F0aW9uIHdpdGggYm9keSwgZW1vdGlvbnMgYW5kIG1pbmQuIApEb21vbmthenUgdQpIZSB3YWxrZWQgYXdheS4uIApUbDtkcjsgSSBzYXkgZ28gd2l0aCBzb25pYyBEU0wuIApUaGUgZWdncyB3ZXJlIDZtaW5zIGFuZCAyMHNlY29uZHMgaW4gcm9sbGluZyBib2lsIHdhdGVyIGluIGEgUmFtZW4gTG9yZCBicmluZSBvdmVybmlnaHQuIFRoZSBtZXRob2QgaW4gaGlzIGxhdGVzdCBhcnRpY2xlClNoZSBqdXN0IGdldHMgbWUuIEFuZCBpIGdldCBoZXIuIEFuZCB3ZSBjYW4ganVzdCBnZXQgdG8gdGhlIHZlcnkgY29yZSBvZiBvdXIgYmVpbmdzIHRvZ2V0aGVyLiAKV2FsYSBwYSBkdW4geXVuZyBtZ2EgbWlkd2lmZS9rb21hZHJvbmEgbmEgbmFnb29mZmVyIG5nIHJhc3BhIG9uIHRoZSBzaWRlLiBUaGUgb25seSByZWFsIGRlY2lzaW9uIHBvaW50IGhlcmUgaXMgd2hldGhlciBvciBub3QgdGhlIHBlb3BsZSB3aG8gd2FudCB0byBoYXZlIHRoZWlyIGJhYmllcyBhYm9ydGVkIHdpbGwgYmUgYWJsZSB0byBkbyBpdCBzYWZlbHkuLiAKVGhyb3cgaW4gdGhlIGZhY3QgdGhhdCBtYW55IHNsb3QgbWFjaGluZXMgICBwcmltYXJpbHkgdGhvc2Ugd2l0aG91dCBhIHByb2dyZXNzaXZlIGphY2twb3QgICBwYXkgcHJvcG9ydGlvbmF0ZWx5OyB0aGF0IGlzLCB0aGUgcmV0dXJuIGZvciBvbmUgcXVhcnRlciBwbGF5ZWQgaXMgb25lIHRoaXJkIG9mIHRoZSByZXR1cm4gZm9yIHRocmVlIHF1YXJ0ZXJzIHBsYXllZCwgeW91ciAkMjAgbWlnaHQgZ2V0IHlvdSBzZXZlcmFsIGhvdXJzIG9mIGVudGVydGFpbm1lbnQuIEJ1dCB1bmxpa2UgZ29pbmcgdG8gYSBtb3ZpZSwgcGxheSBvciBzcG9ydGluZyBldmVudCwgdGhpcyBpcyBlbnRlcnRhaW5tZW50IHRoYXQgY291bGQgc2VlIHlvdSB3YWxraW5nIGF3YXkgd2l0aCBhIHByb2ZpdC4gCkFzIGlzIGFwcGFyZW50IGZyb20gdGhpcyBjYXNlLCB0aGUgaW1wbGljYXRpb25zIG9mIG93bmVyc2hpcCBvZiBwcm9wZXJ0eSBhbmQgdGhlIHJvdXRlIHRvIG93bmVyc2hpcCBhcmUgb2Z0ZW4gdW5leHBlY3RlZGx5IGZhciByZWFjaGluZy4gV2hlbmV2ZXIgYSBjaGFuZ2Ugb2Ygb3duZXJzaGlwIGlzIGNvbnNpZGVyZWQsIGFsbCBwYXJ0aWVzIHRvIHRoZSB0cmFuc2FjdGlvbiBzaG91bGQgbWFrZSB0aGVpciBpbnRlbnRpb25zIGFuZCBnb2FscyBjbGVhci4gV2l0aCB0aGF0IGluZm9ybWF0aW9uIGluIG1pbmQsIHRoZSB0cmFuc2FjdGlvbiBjYW4gYmUgcHJvcGVybHkgc3RydWN0dXJlZCBhbmQgcmVjb3JkZWQgdG8gYXZvaWQgYW55IGZ1dHVyZSB1bmNlcnRhaW50eS4gCjE1LiAKUGVvcGxlIGJlaW5nIHNodXQgdXAgaXMgdGhlIHByb2JsZW0uIApJIGRvbid0IGhhdmUgdGhlIHRpbWUgb3IgcGF0aWVuY2UgdG8gZG8gdGhhdC4gSSBnZXQgdXAgaW4gdGhlIG1vcm5pbmdzLCBhbmQgZ28gdG8gbXkgY29tcHV0ZXIgYW5kIHVzdWFsbHkgc3BlbmQgYW4gaG91ciBvbmxpbmUuIApIb3dldmVyLCB0aGV5IHNob3VsZG4ndCBiZSBvdmVyIGNvbmZpZGVudC4gCkRpY2sgd2FzIGluc3RydW1lbnRhbCBpbiBjcmVhdGluZyBTaW1zIENsZW1lbnQgRWFzdG1hbiBhbmQgYXNzaXN0ZWQgaW4gcnVubmluZyB0aGF0IGZpcm0gZm9yIDEyIHllYXJzLiBIZSByZXRpcmVkIGluIDIwMTEgZnJvbSBNaWxsZXIgVGhvbXBzb24gTExQIExhdyBGaXJtIGFmdGVyIHByYWN0aWNpbmcgbGF3IGZvciA1NiB5ZWFycy4gSGUgaGFkIGEgc3RlbGxhciBjYXJlZXIgYW5kIHJlbHVjdGFudGx5IHJldGlyZWQgZnJvbSBoaXMgcGFzc2lvbiBhdCA4MiB5ZWFycyBvbGQuIApUaGUgdHJ1dGgsIGhvd2V2ZXIsIGlzIHRoYXQgbW9zdCBzdHJhdGVnaWVzIHNob3duIGluIG1vdmllcyBtYXkgbm90IHJlYWxseSBiZSByZWFsLiBUaHVzLCB5b3UgbmVlZCB0byBlbnN1cmUgdGhhdCB5b3UgbGVhcm4gVGV4YXMgSG9sZCBlbSBzdHJhdGVnaWVzIGZyb20gcmVhbCBleHBlcnRzIGJlZm9yZSBwbGF5aW5nIFRleGFzIEhvbGQgRW0uLiAKIldlIGp1c3QgZGlkbid0IHBsYXkgd2VsbCBlbm91Z2gsIiBjYXB0YWluIERpb24gUGhhbmV1ZiBzYWlkLiAiSSBkb24ndCB0aGluayB5b3UgY2FuIHNheSBtdWNoIG1vcmUgdGhhbiB0aGF0LiBXZSBkaWRuJ3QgZG8gZW5vdWdoIG9mIHRoZSBsaXR0bGUgdGhpbmdzIGFnYWluc3QgYSB0ZWFtIHRoYXQgYWx3YXlzIGNvbWVzIGhhcmQuIFRoZXkgcGxheSB2ZXJ5IGRpc2NpcGxpbmVkIHRvIHRoZWlyIHN5c3RlbSwgdGhleSBoYXZlIGZvciBhIGxvbmcgdGltZSwgYW5kIHdlIGp1c3Qgd2VyZW4ndCBnb29kIGVub3VnaC4iCkJ1cmdveW5lJ3MgY2hhbGxlbmdlcyBCZWZvcmUgYXBwZWFyaW5nIG9uIHRoZSBzaG93LCBCdXJnb3luZSBoYWQgYmVlbiB3b3JraW5nIG9uIG9wZXJhdGlvbnMgYW5kIHN5c3RlbXMgZm9yIGEgbXVsdGkgdW5pdCBidXNpbmVzcyBmb3IgdHdvIHllYXJzLiAKRE8gTk9UIExFVCBUSEVNIFRISU5LIFRIQVQgVEhFWSBDQU4gVVNFIEJPVEggU1RBRkYgQkFUSFJPT01TIEpVU1QgQkVDQVVTRSBUSEUgV09NRU4gQkFUSFJPT00gSEFTIExPTkdFUiBMSU5FUy4gQWxzbywgc3RvY2sgdXAgb24gdml0YW1pbiBDLkRvIHlvdSBrbm93IHdoaWNoIGdyYWRlIHlvdSB3b3VsZCBsaWtlIHRvIHRlYWNoPyBJIHRha2UgaXQgeW91IGFyZSBzb21lIGhvdXJzIGludG8gYSBmZXcgcHJhY3RpY3Vtcy4gClRoZXkgY2FuIGJlIGdyb3NzIHRvZ2V0aGVyLCBsZWFybiB0b2dldGhlciwgYW5kIGhlbHAgZWFjaCBvdGhlciBiZWNvbWUgcGFydCBvZiB0aGUgY29tbXVuaXR5LiBZb3VyIGRhdWdodGVyIHdpbGwgcXVpdCB0aGUgbWludXRlIHNoZSBoaXRzIHB1YmVydHkgYW5kIHJlYWxpemVzIHNoZSBkb2VzbiBoYXZlIGFueXRoaW5nIGluIGNvbW1vbiB3aXRoIDM5IGhvcm55IGJveXMuLiAKQXQgdGhlIHNhbWUgdGltZSwgY3JpbWUgYW5kIHZpb2xlbmNlIGNvbnRpbnVlIHRvIHJpc2UgaW4gdGhpcyBuYXRpb24uIExhc3QgbW9udGggd2FzIHRoZSBkZWFkbGllc3QgSnVseSBpbiAxMCB5ZWFycyBmb3IgdGhlIGNpdHkgb2YgQ2hpY2FnbywgYW5kIHBvbGljZSBvZmZpY2VyIHNob290aW5nIGRlYXRocyBmb3IgdGhlIGNvdW50cnkgYXMgYSB3aG9sZSB3ZXJlIHVwIGFuIGFzdG91bmRpbmcgNzggcGVyY2VudCBkdXJpbmcgdGhlIGZpcnN0IGhhbGYgb2YgdGhpcyB5ZWFyLgpMZWJzdCBkdSBhdWVyaGFsYiBkZXIgVVNBIGRhbm4gc3BpZWxlIG9ubGluZSBQb2tlci4gCkhhZCBmb3VuZCB0aGUgUm9zZXR0YSBzdG9uZS4gCkkgd2lzaCB3ZSBsaXZlZCBpbiBhIHNvY2lldHkgdGhhdCB0b29rIG1vcmUgb2YgdGhhdCBhcHByb2FjaC4gSG93ZXZlciwgSSB3b3JrZWQgZm9yIHRpcHMgZHVyaW5nIGNvbGxlZ2Ugc28gSSBub3Qgd2lsbGluZyB0byBwdXNoIG15IGFnZW5kYSBvbiB0aGUgZW1wbG95ZWUgd2hvIGlzIGxpa2VseSBkZXBlbmRlbnQgdXBvbiB0aGUgdGlwcyB0byBnZXQgYnkuLiAKV2UgYXJlIGZvcmdldHRpbmcgdGhhdCB5b3VyIGNvc3RzIGFyZSBnb2luZyB0byBiZSBzaWduaWZpY2FudGx5IGhpZ2hlciB0aGFuIGEgdHJhZGl0aW9uYWwgcGh5c2ljYWwgdGhlcmFwaXN0IGJlY2F1c2UgeW91IGFyZSBtb2JpbGUuIApOYW5jeSBQb2xpa29mZgpZZXMgc29tZSBvZiB0aGVzZSBzY29yZXMgYXJlIGxpa2VseSB0cm9sbGluZy4gCk15IGNvbnNwaXJhY3kgaXMgdGhhdCB0aGVyZSBpcyBhIGFnZW5kYSB0aGF0IGFnZW5kYSBjYW4gYmUgYSBibGluZCBleWUgb3IgYSBoZWxwIGluIG1vdmluZyB0aGUgc3R1ZmYgaW4uIE5vYm9keSB3YW50IGZlbnQgYnJvIHRoZXJlIG5vIHN1cHBseSBhbmQgZGVtYW5kIGZvciBmZW50IHNvIHdoeSBpcyB0aGUgc2hpdCBzdGlsbCBtb3ZpbmcgaW4geW91IG1lYW4gdG8gdGVsbCBtZSBhaCBzdGVhZHkgZmVudCBmcmVlIEggZGVhbGVyIHdvdWxkbid0IG1ha2UgbW9yZSBtb25leSB0aGVuIGEgZmVudCBkZWFsZXIgYnJvIGxldCBtZSBnZXQgbXkgaGFuZHMgb24gc29tZSBoIHRoYXQncyBub3QgdG8gbXVjaCBjdXQgYW5kIGZlbnQgZnJlZSBJIGJldCBjdXN0b21lcnMgd291bGQgYiB5b3Ugd2lsbGluZyB0byBwYXkgZm9yIGFoIHBpZWNlIG9mIG1pbmQgdGhlcmUncyBzbyBtYW55IHRoaW5ncyB0aGUgZ292ZXJubWVudCBjYW4gZG8gdG8gY3VydmUgdGhlIGZlbnQgZXBpZGVtaWMgYnV0IGl0J3Mgbm90IGJlaW5nIGR1bWIgdGhlIGZhY3QgdGhhdCB0aGV5IHN0aWxsIHVzZSBmZW50IG92ZXJkb3NlcyB0byBtYWtlIGl0IHNlZW0gbGlrZSBhbGwgb3BpYXRlIGlzIGFoIHByb2JsZW0KQmFsbGVyX3VuaWNvcm4gIDEyMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVG8gZW5zdXJlIGNvbWZvcnQsIGl0IGlzIGltcG9ydGFudCB0aGF0IHRoZSBkaWNlIHBpZWNlcyBmb3IgeW91ciBlYXJyaW5ncyBhcmUgbWluaWF0dXJlcy4gCk5vLCBiZWNhdXNlIGEgZ2Vub2NpZGUgcmVxdWlyZXMgbXVyZGVyb3VzIGludGVudC4gVGhlcmUgaXMgYSByZWFzb24gdGhhdCB0aGVyZSBpcyBubyBoaXN0b3JpY2FsIGNvbnNlbnN1cyBmb3IgbGFiZWxsaW5nIHRoZSBHcmVhdCBIdW5nZXIgYXMgYSBnZW5vY2lkZSwgeW91IGZpbmQgdGhhdCBwcmFjdGljYWxseSB0aGUgb25seSBhY2FkZW1pY3Mgd2hvIGFkdm9jYXRlIHRoaXMgYXJlIGVpdGhlciBJcmlzaCBvciBJcmlzaCBBbWVyaWNhbnMgd2l0aCBhbiBheGUgdG8gZ3JpbmQuIFRoZSBkaXNjaXBsaW5lIGFzIGEgd2hvbGUgKGluY2x1ZGluZyBtYW55IElyaXNoIGhpc3RvcmlhbnMpIGRvZXMgbm90IHNlZSB0aGUgZmFtaW5lIGFzIG1lZXRpbmcgdGhlIHN0cmljdCBkZWZpbml0aW9uIG9mIGdlbm9jaWRlLi4gCkVuZ2xpc2ggTGFuZ3VhZ2UgTGVhcm5lcnMgY2FuIHVzZSBHb29nbGUgVHJhbnNsYXRlIGJ1dCBJIHdhdGNoIHRoYXQgdGhleSBhcmVuIHBsYXlpbmcuIApCdXQgdGhlIFJSU1AgZGVhZGxpbmUgKE1hcmNoIDEgdGhpcyB5ZWFyKSBzaG91bGRuIGNhdXNlIHlvdSB0byBydXNoIGludG8gYnV5aW5nIHNvbWV0aGluZyB0aGF0IGR1cGxpY2F0ZXMgd2hhdCB5b3UgYWxyZWFkeSBoYXZlLCBvciB5b3UgZG9uIHVuZGVyc3RhbmQuLiAKQSBwb2tlciBwbGF5ZXIgaGFzIGFsc28gYmVjb21lIGFuIGludGVybmF0aW9uYWwgc3RhciB0b2RheS4gClNvIE1jTGFyZW4gYXJlIHBpbm5pbmcgdGhlaXIgaG9wZXMgb24gdGhlIGJhbiBvbiBvZmYgdGhyb3R0bGUgYmxvd24gZGlmZnVzZXJzIGxldmVsbGluZyB0aGUgcGxheWluZyBmaWVsZCB0aGlzIHdlZWtlbmQsIGdpdmVuIHRoYXQgbW9zdCBhY2NlcHQgdGhhdCB0aGUgYmx1ZSBjYXJzIGRlcml2ZSBhIGxhcmdlIGNodW5rIG9mIHRoZWlyIGFlcm9keW5hbWljIGFkdmFudGFnZSBmcm9tIHRoYXQgcGFydCBvZiB0aGUgY2FyLiBCdXQgZXZlbiBpZiB0aGF0IHByb3ZlcyB0byBiZSB0aGUgY2FzZSwgSGFtaWx0b24gaGFzIGEgbW91bnRhaW4gdG8gY2xpbWI7IGF0IHRoaXMgbWlkcG9pbnQsIFZldHRlbCBoYXMgMTg2IHBvaW50cyB0byBoaXMgOTcsIHdpdGggMjc1IGxlZnQgdG8gd2luLi4gCkVhY2ggY2FzZSwgZWFjaCB2YWx1YXRvciwgc3VwcG9zZWRseSBhY3RpbmcgaW5kZXBlbmRlbnRseSwgc3VnZ2VzdGVkIHZhbHVlcyB0aGF0IGJlbmVmaXR0ZWQgdGhlIHBvc2l0aW9uIG9mIHRoZSBwYXJ0eSB3aG8gaGFkIGhpcmVkIGhpbSwgc2hlIHdyb3RlLiAKTGlrZSBhIGxpbWIgSSBhbSBkdWUgdG8gbW92ZSBuZXh0IHllYXIgcm91bmQgYWJvdXQgTWF5IHRpbWU/IFNvIEkgYW0gbG9va2luZyB0byBkbyBhbiBJTSByYWNlIGVhcmx5IHNlYXNvbi4gV2l0aCBObzEgZGF1Z2h0ZXIgbm93IGluIE5aIGZvciBoZXIgZ2FwIHllYXIgd2UgYXJlIGxvb2tpbmcgdG8gaGF2ZSBhIGZhbWlseSB2aXNpdCB0aGVyZSBlYXJseSBpbiB0aGUgeWVhciBhbHNvLiBGaW5lIEkgaGVyZSB5b3Ugc2F5LCBqdXN0IGRvIElNIE5aISBUaGF0IHdhcyB0aGUgaW5pdGlhbCBwbGFuIGJ1dCBiZWluZyBvbiBNYXJjaCA2VEggdGhlIHRpbWluZyBpc24gZ3JlYXQgYXMgRWFzdGVyIGhvbHMgYXJlIG5vdCB1bnRpbCBBcHJpbCB3aGVuIHdlIGNhbiBhbGwgdmlzaXQ/IFNvIG15IGN1cnJlbnQgdGhvdWdodHMgYXJlIHRoYXQgSSB3aWxsIGdvIHRvIGRvIHRoZSBDb3VudHJ5IEVuZXJneSBJTSBBdXN0cmFsaWEgb24gMjggTWFyY2guIFRoYXQgd2F5IEkgY291bGQgbmlwIGRvd24gYSB3ZWVrIGFoZWFkIG9mIHRoZSBmYW1pbHksIEkgY2FuIHRpY2sgb2ZmIGFub3RoZXIgSU0gYW5kIHRoZW4gaG9wIGFjcm9zcyB0byBOWiBhbmQgbWVldCB0aGUgZmFtaWx5IGZvciAzIHdlZWtzIHJlY292ZXJ5IGluIE5aPz8/IFdvdWxkIGxvdmUgdG8gam9pbiBhIGJpZyBwdXNoIHRvIFN3aXR6ZXJsYW5kIGhvd2V2ZXIsIEkgaGF2ZSB0cmllZCB0byBkbyBhbiBJTSBpbiB0aGUgbWlkZGxlIG9mIGEgcG9zdGluZyBhbmQgaXQgZG9uIHdvcmshCk5vIGVudHJ5IHRvIHNjaG9vbHMsIGNoaWxkIGNhcmUgb3IgcHVibGljIGZhY2lsaXRpZXMgd2l0aG91dCBiZWluZyB2YWNjaW5hdGVkLiBBbHNvIG5vIGZpbmFuY2lhbCBiZW5lZml0cy5UaGUgb25seSBwZW9wbGUgd2hvIHNob3VsZCBiZSBleGVtcHQgYXJlIHRob3NlIHdpdGggbWVkaWNhbCByZWFzb25zLiBUaGUgb3ZlcmFsbCBzYWZldHkgb2YgdGhlIHB1YmxpYyBzaG91bGQgb3V0d2VpZ2ggYW55IHJlbGlnaW91cyByZWFzb25zLi4gCldoeSBhcmUgeW91IGFnYWluc3QgQ3VydmVzPyBJIHVzZWQgdG8gZ28gdG8gb25lIGFuZCBsb3ZlZCBpdC4gSXQgaW5jb3Jwb3JhdGVzIGJvdGggY2FyZGlvIGFuZCBzdHJlbmd0aCB0cmFpbmluZyBhbmQgcGVvcGxlIHdlcmUgYWx3YXlzIGZyaWVuZGx5IGJ1dCB0aGV5IG1vc3RseSBsZWZ0IHlvdSBhbG9uZS4gCk9uY2UgdGhlIG1hbiBleHBsYWluZWQgdGhhdCBoZSBoYWQgYmVlbiBjdXR0aW5nIHRocm91Z2ggdGhlIHdvbWFuJ3MgY2xvdGhlcyBpbiBvcmRlciB0byB1c2UgdGhlIEFFRCwgaGUgd2FzIG5vdCBxdWVzdGlvbmVkIGFueSBmdXJ0aGVyLlRoZSBtYW4gd2FzIGxhdGVyIGluZm9ybWVkIHRoYXQgICB0aGFua3MgdG8gaGlzIGJyYXZlcnkgYW5kIHF1aWNrIHRoaW5raW5nLCBub3QgdG8gbWVudGlvbiBjb3JyZWN0IHVzZSBvZiB0aGUgQUVEICAgdGhlIHdvbWFuIGhhZCBzdXJ2aXZlZC4gClN0dWRlbnQgY2hpbWluZyBpbjsgSSBzdXBwb3J0IHRoaXMgbWVudGFsaXR5IHdpdGggdmlnb3IgYW5kIGVudGh1c2lhc20uIFN0b3JpZXMgbGlrZSB0aGlzIGFyZW4gaGlnaGxpZ2h0ZWQgZW5vdWdoIGFzIGl0IGlzOyBzcGVjaWZpY2FsbHkgYWxsIHNwZWNpYWwgZWR1Y2F0aW9uIHN0dWRlbnRzIHN1Y2Nlc3Mgc3RvcmllcywgYW5kIG5vdCBqdXN0IG1pbm9yaXR5IHNwZWNpYWwgZWQuIApMaW1pdCBUZXhhcyBIb2xkZW0gUG9rZXIKVGhlcmUgIm5vIGZsb3Agbm8gZHJvcCIgaXQgYmVjb21lcyBtdWNoIG1vcmUgYXBwZWFsaW5nIHRvIDMgYmV0LCBub3Qgb25seSB0byB0YWtlIGRvd24gdGhhdCBwb3Qgd2l0aCBubyByYWtlLCBidXQgYWxzbyB0byBidWlsZCBpdCBldmVuIHNvIHlvdSBkb24gc2VlIGEgZmxvcC4KVGhpcyB3aWxsIG1lYW4geW91IG1ha2Ugc3VyZSB5b3UgYXJlIG5vdCBmb2xkaW5nIG9yIGNhbGxpbmcgdG9vIG9mdGVuLi4gCkJvdGggdGltZXMgSSBzZWVuIEJpZ2Zvb3QgY29pbmNpZGVkIHdpdGggdGhlIGh1Z2UgZmxvY2tzIG9mIHNoZWVwIGJlaW5nIG1vdmVkIGFyb3VuZCBpbnRvIHNvbWUgcmVtb3RlIGdyYXppbmcgYXJlYXMuIFRoZSBzaGVlcCBoZXJkZXJzIHRlbmQgdG8gaWdub3JlIGluanVyZWQgYW5pbWFscyBhbmQgbGVhdmUgdGhlbSBiZWhpbmQgYXMgdGhlIGZsb2NrIG1vdmVzIG9uLiAKSSBkb24gZXZlbiBrbm93IHdoYXQgdGhhdCBtZWFucy4gQ2FwaXRhbGlzbSBhbmQgc29jaWFsaXNtIGFyZSBkaWZmZXJlbnQgZGltZW5zaW9ucyBhbmQgaGF2ZSBubyBvdmVybGFwcGluZyBjb25jZXB0cz8gVGhhdCBtb3N0bHkgZmFsc2UuIFRoZSBjZW50cmFsICAgcG9zc2libHkgb25seSAgIHRlbmV0IG9mIHNvY2lhbGlzbSBpcyBhdCBvZGRzIHdpdGggb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBmYWNldHMgb2YgbW9zdCBjYXBpdGFsaXN0aWMgZWNvbm9taWMgc3lzdGVtcy4KT3duZXJzIHdpbGwgYmUgbm90aWZpZWQgbmV4dCBtb250aCB3aGVuIHRoZXkgY2FuIHNjaGVkdWxlIGFuIHVwZGF0ZSB0byB0aGUgYnJha2Ugc3lzdGVtIHNvZnR3YXJlLgpZb3VyIGVtcGxveWVyIGNhbiBORVZFUiByZXF1ZXN0IHRoaXMgcmVjb3JkIGhpbXNlbGYuIApUaGUgYmlnZ2VzdCB3b3JkIGlzICJZb3UiOyBzZWNvbmQgYmlnZ2VzdCBpcyAic2hvdWxkIi4gSWYgeW91IGFyZSB3aXRoIGEgY2hhcmFjdGVyIGRpc29yZGVyZWQgcGVyc29uIHdobyB3aWxsIGNvbnN0YW50bHkgaGVhciB0aGVtIHNheWluZy4gIllvdSBhcmUgcGFyYW5vaWQiICJZb3UgYXJlIHRoZSBvbmUgd2l0aCB0aGUgcHJvYmxlbS4iICJZb3Ugc2hvdWxkIHRha2UgY2FyZSBvZiB5b3VyIGtpZHMgIllvdSBzaG91bGQgc3RvcCBibGFtaW5nIG1lIiAiWW91IG5lZWQgdG8gZGVjaWRlIHdoYXQgaXMgYmVzdCBmb3IgdGhlIGtpZHMuIiAiWW91IHNob3VsZCBsaXN0ZW4gdG8gd2hhdCBJIHNheS4iIElmIHRoZXNlIHdvcmRzIGFyZSB1c2VkIGVub3VnaCwgaXQgY2FuIGhhdmUgYW4gZWZmZWN0IG9uIGV2ZW4gdGhlIHN0cm9uZ2VzdCB3aWxsZWQgcGVyc29uLiAKUmVkX0dhbGlyYXkgIDE5IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQXQgbGVhc3Qgbm90IGluIHRoZSBVU0EuIApJdCB3YXMgdW5jbGVhciB3aGF0IHBvbGl0aWNhbCBwdWxsIE1jQ2FpbiBjb3VsZCBtdXN0ZXIuIApXZSBhcmUgbGl2aW5nIGluIHRyb3VibGluZyB0aW1lcywgeWV0IG1hbnkgcGVvcGxlIHNlZW0gdG8gaWdub3JlIHRoZSBzaWducy4gQ29tcGxhY2VudCBpbiB0aGVpciBmYWl0aCwgdGhleSByZWFzc3VyZSB0aGVtc2VsdmVzIHRoYXQgdGhlIGVjb25vbXkgaXMgYmV0dGVyLCB1bmVtcGxveW1lbnQgaXMgYmV0dGVyLCBpdCB3b3VsZCBzZWVtIHRoYXQgdGhlIHJpZ2h0IGp1ZGdlcyBhcmUgYmVpbmcgYXBwb2ludGVkIHRvIHRoZSBTdXByZW1lIENvdXJ0IGFuZCBzbyBvbi4gCkZvdXIgUkNUcyAobj0xODUpIHdlcmUgaW5jbHVkZWQgLgpJIGhhZCB0cmllZCB0byBzd2l0Y2ggbXkgcGVyc29uYWwgcGhvbmUgdG8gVGVsdXMgd2hlbiBteSBjb21wYW55IGhhZCBhIHNpZ25pZmljYW50IGRpc2NvdW50IGJ1dCBldmVuIHRoZSBjb21taXNzaW9uZWQgY29ycG9yYXRlIHNhbGVzIHJlcCB0b2xkIG1lIEkgd2FzIGJldHRlciBvZmYgc3RheWluZyB3aXRoIEZpZG8gcHJpY2V3aXNlIGJlY2F1c2UgdGhleSBjb3VsZG4ndCBiZWF0IHdoYXQgSSB3YXMgcGF5aW5nIGZvciA0R0Igb2YgZGF0YS4gCkFuZCB0aGUgZmlsbSBkb2VzIGV2ZW50dWFsbHkgbW92ZSBvdXQgaW50byB0aGUgYWN0dWFsIHdvcmxkLCB1bmRlcnNjb3Jpbmcgd2l0aCBoZWF2eSBoYW5kIHRoZSBob25lc3R5ICAgdGhlIGh1bWJsZSByZWFsaXR5ICAgb2YgdGhlIGFyaXN0b2NyYXQgZmFybWVyIExldmluIChEb21obmFsbCBHbGVlc29uKSBhbmQgaGlzIGNvbm5lY3Rpb24gdG8gdGhlIGxhbmQuIApUaGlzLiBJdCBmZWVscyBsaWtlIGEgbWFqb3JpdHkgKG5vdCBhbGwpIG9mIHB2cCBiYXNlZCBnYW1lIG1vZGVzIChnYW1iaXQgcHJvYmFibHkgbm90KSBhcmUgZGVjaWRlZCBieSB3aGF0IGNsYXNzIGFuZCBnZWFyIHlvdXIgcnVuLiBPbmUgZXllZCBtYXNrIGJlaW5nIGFuIGV4YW1wbGUuIApBIGNvbXB1dGVyIG1lbW9yeSBjaGlwIGlzIHRoZSBkZXZpY2UgdGhhdCByZXBsYWNlZCAoaW4gdGhlIGVhcmx5MTk3MHMpIHRoZSBtYWduZXRpYyBjb3JlIG1lbW9yeSBpbiBjb21wdXRlcnMgKHRoYXQgaGFkIGJlZW4gdXNlZHNpbmNlIHRoZSBlYXJseSAxOTUwcykuIENvbXB1dGVyIG1lbW9yeSAob2YgYW55IHR5cGUpIHNlcnZlcyB0aGUgZnVuY3Rpb24gb2Ygc3RvcmluZ2luc3RydWN0aW9ucyBhbmQgZGF0YSBpbnNpZGUgdGhlIGNvbXB1dGVyIHRoYXQgaXQgd2lsbCBuZWVkZnJlcXVlbnQgYW5kIHJhcGlkIGFjY2VzcyB0by4gKEZ1bGwgQW5zd2VyKQpUaGUgcHJvY2Vzc2VkIGZvb2QgaW5kdXN0cnkgY29uY2VybiBmb3IgcHJvZHVjdGlvbiBlZmZpY2llbmN5IGFuZCBwZXJjZXB0aW9uIG9mIGNvbnN1bWVyIGRlbWFuZHMgaGFzIGZvY3VzZWQgb24gdGhlIGJvdHRvbSBsaW5lIHdpdGggdGhlIHVzdWFsIGRpc3JlZ2FyZCB0byBuZWdhdGl2ZSBoZWFsdGggY29uc2VxdWVuY2VzLgpTY2hvb2wgd2lsbCBhbHdheXMgaGF2ZSB0aGUgdW5pdmVyc2FsIHByZXN0aWdlIGZhY3RvciB3aGlsZSBwbGF5aW5nIHBva2VyIHdvbid0LiBXZSBqdXN0IGNpcmNsZSBqZXJrIGFyb3VuZCBwcm9zIHdobyBhcmUgc3Rha2VkL2JhY2tlZC9zcG9uc29yZWQgYW5kIG1lbWUgYWxsIHRoZSB0aW1lLiBJdCdzIGEgZmFsc2UgZHJlYW0gZm9yIHVzIG5lcmRzLiBOb3QgZXZlcnlvbmUgaXMgZ29pbmcgY2FyZSBhYm91dCB5b3VyIGdpcmFmZmUuCkFuZCB5ZXMsIEkgYWJvdXQgdG8gYWRkcmVzcyB0aGUgc2V4L3NleHVhbCByZXByb2R1Y3Rpb24gcGFydC4gQnJlYXN0cyBhcmUgc2Vjb25kYXJ5IHNleCBjaGFyYWN0ZXJpc3RpY3MuIFRoZXNlIGFyZSBub3QgaW52b2x2ZWQgaW4gc2V4dWFsIHJlcHJvZHVjdGlvbi4gCklzIHRoYXQgc29tZXRoaW5nIHRoYXQgY2VydGFpbiB5ZWFzdCBzdHJhaW5zIGRvPyBJcyB0aGF0IHdoeSB0aGUgU2Fpc29uIHllYXN0cyBhdHRlbnVhdGUgaGlnaGVyPyBPciBqdXN0IHRoaXMgcGFydGljdWxhciBuZXcgaHlicmlkIHllYXN0IHN0cmFpbj8KUG91aSBzYSB6byBza3Nlbm9zdCBkcnVoY2guIApUaGF0IG1vcmUgb2YgYSBzdHJpbmcgb2YgYXNzZXJ0aW9ucyB0aGFuIGEgbG9naWNhbCBwcm9vZi4gQXNzZXJ0IHRoYXQgZXZlcnl0aGluZyBtdXN0IGV4aXN0IGZvciBhIHJlYXNvbi4gRnJvbSB0aGF0IHdlIGNhbiBjb25jbHVkZSB0aGF0IGlmIEdvZCBleGlzdHMsIHRoZW4gaGUgbXVzdCBleGlzdCBmb3IgYSByZWFzb24uIEFzc2VydCB0aGF0IHRoZSByZWFzb24gZm9yIEdvZCBleGlzdGVuY2UgbXVzdCBiZSBbaW5zZXJ0IHdoYXRldmVyIHlvdSBtYXkgdGhpbmsgb2ZdLgpIVE1MIGlzIGEgbGFuZ3VhZ2Ugb2Ygc3VmZmljaWVudCBjb21wbGV4aXR5IHRoYXQgaXQgY2Fubm90IGJlIHBhcnNlZCBieSByZWd1bGFyIGV4cHJlc3Npb25zLiAKVGhlbiBoZSBraWxsZWQgaGltc2VsZi4gClNvbWUgc3RlYW0gcm9vbXMgYXJlIGRpZmZlcmVudCBhbmQgcG9zdCBydWxlcyBvdXRzaWRlIHdpdGggaW5zdHJ1Y3Rpb25zLkRvbiBsZWF2ZSB0aGUgZG9vciBnYXBpbmcgd2lkZSBvcGVuIG9uIHN0ZWFtIHJvb21zIG9yIHNhdW5hcy5Eb24gY29tZSBpbnRvIHRoZSBzYXVuYSBkdXJpbmcgYW4gYXVmZ3VzcyBvciB5b3UgYXR0cmFjdCB0aGUgaXJlIG9mIGV2ZXJ5b25lIGluc2lkZS4gClRoZXJlIGFyZSBzdGlmZiBwZW5hbHRpZXMsIG9mIGFzIG11Y2ggYXMgJDEwMCwwMDAsIGZvciBub24gY29tcGxpYW5jZS4KVHVybnMgb3V0IGhlIGp1c3QgaGFkIG1lIGNvdmVyZWQuIApHaGlzbGFpbmUgTWF4d2VsbCBoYXMgZGVuaWVkIGFsbGVnYXRpb25zIG9mIGVuYWJsaW5nIGFidXNlLi4gCkV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhvc2UgZmFjdG9ycyBpcyBzb21ldGhpbmcgdGhhdCB1c3VhbGx5IHJhaXNlcyBzYWxhcnkgb3IgcHJpY2UuIApJZiB5b3UgZG9uIHdhbnQgdG8gYmUgYW5ub3llZCBieSBwZW9wbGUgcG9pbnRpbmcgb3V0IHRoZSBmbGF3cyBpbiB5b3VyIHRoaW5raW5nLCBkb24gcG9zdCB0aGVtIHB1YmxpY2x5LgpPdGhlcnMgc2F5IHlvdSBuZWVkIHRvIGJlIGFnZ3Jlc3NpdmUgZnJvbSB0aGUgc3RhcnQgYW5kIGFjY3VtdWxhdGUgY2hpcHMuCk9uIGRlZmVuY2UsIENvbm5vciBDYXJyaWNrIHdpbGwgYmUgYSBoZWFsdGh5IHNjcmF0Y2ggZm9yIHRoZSBmb3VydGggY29uc2VjdXRpdmUgZ2FtZS4KVGhhdCBzdGF0ZW1lbnQgaXMgYSBiaXQgaHlwZXJib2xpYywgYnV0LCBmb3IgZXhhbXBsZSwgU3VtZXJpYW4sIEV0cnVzY2FuLCBhbmQgQmFzcXVlIGFyZSBhbGwgd2VsbCBrbm93biBsYW5ndWFnZSBpc29sYXRlcyBpbiB0aGUgTWVkaXRlcnJhbmVhbiBvZiBhbnRpcXVpdHkgICB3aGljaCBtZWFucyB0aGF0IG5vIG90aGVyIGxhbmd1YWdlcyBoYXZlIGV2ZXIgYmVlbiBkZW1vbnN0cmF0ZWQgdG8gYmUgcmVsYXRlZCB0byB0aGVtc2VsdmVzLgpJIHRyaWVkIHNvIGhhcmQgdG8gZ2l2ZSBoaW0gZXZlcnl0aGluZyBJIGNhbiBhbmQgaGUgYmVlbiBzbyB1bnJlc3BvbnNpdmUgYW5kIHNlZW1zIGxpa2UgaGUgZG9lc24gdmFsdWUgaG93IGhhcmQgSSB0cmllZCBhbmQgaXQgZGlmZmljdWx0IHRvIGRlYWwgd2l0aCBiZWNhdXNlIEkganVzdCB3YW50IGhpbSB0byBiZSBoYXBweSBidXQgaGUgb25seSBzaG93cyB1cCB3aGVuIHRoZXJlIG1vbmV5IG9yIGJ1Y2tldCBsaXN0IGl0ZW1zLiAKTXkgUENQIHRyZWF0ZWQgbWUgZm9yIHllYXJzIGFuZCBoYWQgbWUgb24gb3h5Y29kb25lLiAKT3ZlciB0aGUgbmV4dCB0d28geWVhcnMsIGl0IG1pc3NlZCB2YXJpb3VzIGRlYWRsaW5lcyB0byBnZXQgdGhlIGNhciBpbnRvIHByb2R1Y3Rpb24sIHdoaWNoIGl0IGFjY29tcGxpc2hlZCBpbiBNYXJjaCB0aGlzIHllYXIuCkF2b2lyIGRlcyBlbmZhbnRzIHF1YW5kIG9uIGVzdCBncm9zc2UKQ2VydGFpbmx5IGhpcyBncmFuZGZhdGhlciBwbGF5ZWQgaGVyZWJ5IGFuIGltcG9ydGFudCByb2xlLgpUb3RhbGx5IGFncmVlLiBUaGUgZmlyc3QgaGFsZiBvZiB0aGUgc2Vhc29uICh1cCB0aWwgZXAgNikgaGFkIG1lIHByZXR0eSBlbnRocmFsbGVkIGFuZCBJIGZlbHQgdGhlIHBhY2luZy93cml0aW5nIHdhcyBwcmV0dHkgb24gcG9pbnQuIApVbmQgZGVyIFN0cmFuZCB3aXJkIG5pY2h0IGJld2FjaHQuIEF1Y2ggZmVobGVuIFNjaGF0dGVuIHNwZW5kZW5kZSBCdW1lIG9kZXIgUGFsbWVuICAgZWluIGVjaHRlciBOYXR1cnN0cmFuZCAgIG9mdCBoYXQgbWFuIGRlbiBnYW56ZW4gU3RyYW5kIGZyIHNpY2ggYWxsZWluIS4uIApZZXMsIHlvdSBjYW4gcGxheSBQb2tlciBmb3IgZnJlZSBvZiBjaGFyZ2Ugd2l0aG91dCBkZXBvc2l0aW5nIGFueW1vbmV5LiAKS2F5ZSBpc24ndCB3cm9uZy4gRnJvbSBzaGlydHMgdG9jb2ZmZWUgbXVncyB0byB0YXR0b29zLCBDaGljYWdvYW5zIGhhdmUgcHJvdWRseSBlbWJsYXpvbmVkIHRoZWlyIGJsdWUgYmFycyBhbmQgcmVkIHN0YXJzICAgcmVwcmVzZW50YXRpdmUgb2YgdGhlIGNpdHkncyBnZW9ncmFwaHkgYW5kIGhpc3RvcnkgICBvbiB2aXJ0dWFsbHkgYW55IGF2YWlsYWJsZSBjYW52YXNzIGFjcm9zcyB0aGUgY2l0eS4gSW4gMjAxMywgQ2hpY2FnbyBtYWdhemluZSBjaXRlZCB0aGUgZmxhZydzICJzaW1wbGUsIGJvbGQgZGVzaWduIiBhcyB0aGUgbWFpbiByZWFzb24gaXQgaGFkIGJlY29tZSBzbyB1YmlxdWl0b3VzLi4gClRoZSB0aGlyZCBwZXJzb24gbXVzdCBoYXZlIGEgYmlydGhkYXkgdGhhdCBpcyBkaWZmZXJlbnQgZnJvbSB0aGUgZmlyc3QgdHdvOiB0aGUgcHJvYmFiaWxpdHkgb2YgdGhpcyBoYXBwZW5pbmcgaXMgMzYzLzM2NS4gV2UgbmVlZCB0byBtdWx0aXBseSB0aGUgcHJvYmFiaWxpdGllcyBzaW5jZSB0aGUgZXZlbnRzIGFyZSBpbmRlcGVuZGVudDsgdGhlIGFuc3dlciBmb3IgMyBwZW9wbGUgaXMgdGh1cyAzNjQvMzY1ICAgMzYzLzM2NS4gWW91IHNob3VsZCBub3cgYmUgYWJsZSB0byBzb2x2ZSBpdCBmb3IgNCBwZW9wbGUuIApJIGhhdmUgc2VlbiBzb21lIG9uIHRyZWUgdHJ1bmtzIGEgbGl0dGxlIGZhcnRoZXIgZnJvbSB0aGUgbGFrZSwgYW5kIHRoZXJlIHdhcyBvbmUgcmlnaHQgb3ZlciBteSBzaG91bGRlciBpbiB0aGUgb3V0aG91c2Ugb25jZS4gQ2hyaXN0LCB0aGF0IGZyZWFrZWQgbWUgb3V0LiAKQW1hZXppbmdqZXcgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkZyYW5rbHksIEkgdGhpbmsgdGhhdCBhIGdyZWF0IGRlYWwgb2YgdGhpcyBhbnhpZXR5IHdpbGwgcmVzb2x2ZSwgb25jZSBzaGUgaXMgYWJsZSB0byByZXNvbHZlIGhlciBpbm5lciBmZWVsaW5ncy4gSSBhbSBzdXJlIHNoZSBsb3ZlcyB5b3UuIApJIHBsYXkgdmlkZW8gZ2FtZXMgd2l0aCBteSBmcmllbmRzIGFzIHdlbGwsIGFuZCB3ZSBjb3VsZCBwbGF5IGZvciBhcyBtYW55IGhvdXJzIGluIGEgZGF5IGFuZCBoYXZlIHRoZSBzYW1lIGVuam95bWVudCBlYWNoIHRpbWUuIApJIHN1Z2dlc3Qgd3JpdGluZyBhIGluIHRoZSBsaWZlIG9mIHdpdGhpbiB5b3VyIHVuaXZlcnNlLiBXaGV0aGVyIHRoaXMgYmUgYWJvdXQgeW91ciBwcm90YWcgb3IgdmlsbGFpbiBvciBqdXN0IHNvbWUgYXZlcmFnZSBqb2UgZGVhbGluZyB3aXRoIHRoZSBjbGltYXRlIG9mIHlvdXIgdW5pdmVyc2UuIE9idmlvdXNseSwgdGhlcmUgc29tZXRoaW5nIGludGVyZXN0aW5nIGluIHlvdXIgaWRlYSwgc29tZSBjb25mbGljdCB0aGF0IGRldmlhdGVzIGZyb20gdGhlIG5vcm0sIHNvIGNyZWF0ZSBhIHNtYWxsIHN0b3J5IG9mIHNvbWVvbmUgZGF5IGFuZCBob3cgaXQgd291bGQgYmUgYWZmZWN0ZWQgYnkgdGhpcyBjb25mbGljdC4gCkEgY29tcGxldGVseSBkZXJlZ3VsYXRlZCBjYW1wYWlnbiBmaW5hbmNlIHN5c3RlbSB3aWxsIGJlIHNvbWV0aGluZyB3ZSBoYXZlIG5ldmVyIHNlZW4gYmVmb3JlLiBBbHRob3VnaCB0aGVyZSBpcyBtb3JlIGFuZCBtb3JlIGluZmx1ZW5jZSBmcm9tICJzb2Z0IG1vbmV5IiBpbiBVUyBwb2xpdGljcywgdGhlcmUgaGFzIGJlZW4gYXQgbGVhc3Qgc29tZSBlZmZvcnQgdG8gY29udHJvbCBjYW1wYWlnbiBmaW5hbmNpbmcuIFdoZW4gQ29uZ3Jlc3MgbWVtYmVycyByZXByZXNlbnQgdGhlIGludGVyZXN0cyBvZiBhIGNvbXBhbnkgZnJvbSB3aG9tIHRoZXkgcmVjZWl2ZSBjb250cmlidXRpb25zLCBsaWtlIEVucm9uIGZvciBleGFtcGxlLCB0aGV5IGNhbiBhbmQgc29tZXRpbWVzIGFyZSBwcm9zZWN1dGVkLi4gCkEgY2xlYXIgcGF0dGVybiBlbWVyZ2VkOiBEZXNwaXRlIGludGVuc2UgY29tcGV0aXRpb24sIHNvbWUgdHJhZGVycyB0b29rIGhvbWUgbXVjaCBtb3JlIHRoYW4gb3RoZXJzLiAKTWlycm9ycyBsZXQgeW91IG1vdmUgdGhyb3VnaCB0aW1lLiAKQnlEbyB5b3Uga25vdyBob3cgdG8gcGxheSBUZXhhcyBIb2xkJ2VtPyBEbyB5b3Uga25vdyBhYm91dCBPbWFoYT8gSW4gc3BpdGUgb2YgdGhlIGFzc29ydG1lbnQgb2YgZnJlZSBwb2tlciBnYW1lcyBvZmZlcmVkIG9ubGluZSB0b2RheSwgVGV4YXMgSG9sZCdlbSBhbmQgdmFyaWV0aWVzIG9mIE9tYWhhIHJlbWFpbiB0aGUgbW9zdCBwcm9taW5lbnQgY2xhc3NpY3MuIApUaGVyZSBhcmUgbG90cyBvZiBnYW1lcyBJIGRvbiBuZWVkIHRvIHB1dCB0aGF0IG11Y2ggdGltZSBhbmQgZWZmb3J0IHRvIHdpbiwgYW5kIEkgaGF2ZSBubyBpZGVhIHdoeSBGb3J0bml0ZSBCUiBzaG91bGQgYmUgYW4gZXhjZXB0aW9uLiBDYWxsIG1lIGEgZnJlYWtpbmcgY2FzdWFsIGJvdCBpZiB5b3Ugd2lzaCwgYnV0IGF0IGN1cnJlbnQgc3RhdGUgZm9ydG5pdGUgaXMgZ2V0dGluZyBtb3JlIGZydXN0cmF0aW5nIHRvIHBsYXkgcmF0aGVyIHRoYW4gZW50ZXJ0YWluaW5nIHdpdGggZXZlcnkgcGF0Y2guIEhvcGVmdWxseSByYW5rZWQgbW9kZSBmaXhlcyB0aGF0LCBiZWNhdXNlIHRoZSBpZGVhIG9mIGFkZGluZyBmdW5ueSB0aGluZ3MgKHN3b3JkLCBwbGFuZXMsIGM0LCBndWlkZWQgcnBnLCBub24gb3ZlcmhlYXRpbmcgbWluaWd1bikgb2J2aW91c2x5IGZhaWxlZC4gYnkgd2lubmluZyB5b3UgY2FuIHVuZGVyc3RhbmQgbm90IG9ubHkgdGhlICJWaWN0b3J5IHJveWFsZSIsIGJ1dCBhbHNvIGEgc2ltcGxlIGZpZ2h0IHdpbi4KQ2FuYWRpYW5fSW5maWRlbCAgMCBwb2ludHMgIHN1Ym1pdHRlZCA4IGhvdXJzIGFnbwpKQykuIApJdCBlbmFibGVzIHRoZSBhcHBsaWNhdGlvbiBvZiB0b3VjaCBzZW5zaW5nIG5vdCBvbmx5IHdpdGggZGlmZmVyZW50IGZvcmNlIGxldmVscyB0aGF0IGNhbiByZWNvZ25pemUgdG91Y2ggYW5kIHByZXNzIHdoaWxlIHRoZSB1c2VyIGlzIHBsYXlpbmcgZ2FtZXMsIGJ1dCBhbHNvIGNhcGFibGUgb2Ygd29ya2luZyB3aXRoIHdhdGVyIG9yIGdsb3Zlcy4gQXQgdGhlIHNhbWUgdGltZSwgaXQgaGFzIGluc3RhbnQgaGFwdGljIGZlZWRiYWNrLCB3aGljaCBicmluZ3MgdXNlciBhIGZ1bGwgSGFuZCBoZWxkIGdhbWUgY29uc29sZSBleHBlcmllbmNlLCB0b3RhbGx5IGV4Y2VlZGluZyB0aGVpciBleHBlY3RhdGlvbnMuLiAKSW4gYWRkaXRpb24sIHN0ZXJvaWQgZHJ1Z3MgYmxvb2QgdHlwZXMgYW5kIG90aGVyIGNoYXJhYyAgYWRtaW5pc3RlcmVkIGZvbGxvd2luZyB0aGUgdGVyaXN0aWNzIHNpbWlsYXIgdG8gUmljaGFyZCdzLCB0byBkaW1pbmlzaCB0aGUgU3VyZ2VyeSBvbiB0aGUgdHJhbnNwbGFudCBwYSAgdGllbnRzIHdhcyByb3V0aW5lLiBNb3JlIHRoYW4gMjAwIGhhdmUgYmVlbiBkb25lIGF0IHRoZSBjbGluICBpYywgYnV0IGZpbmRpbmcgdGhlIGNvcnJlY3QgcGEgIHRpZW50cyBpcyBjb21wbGljYXRlZC4gTXJzLiAKT2JzZXJ2ZSB0aGVtIGFzIGlmIHRoZXkgd2VyZSBsaWtlIHJ1c2hpbmcgd2F0ZXIuIEEgdHVyYnVsZW50LCBwb3dlcmZ1bCwgcmFwaWQgZmlsbGVkIHdpdGggcm9ja3MgYW5kIGRyb3BzIGNhbiBlYXNpbHkga2lsbCB5b3Ugb3IgYXQgbGVhc3Qgc2VyaW91c2x5IGluanVyZSB5b3UgaWYgeW91IHRyeSB0byBzd2ltIGluIGl0LiBZb3UgY2Fubm90IHJlYWNoIHRoZSBvdGhlciBzaWRlLCBhbmQgc3dpbW1pbmcgYWdhaW5zdCB0aGUgY3VycmVudCwgYW5hbG9nb3VzIHRvIHJlcHJlc3NpbmcsIGlzIHRvbyBleGhhdXN0aW5nIGFuZCBjb21wbGV0ZWx5IHVuc3VzdGFpbmFibGUuIAoxMCkgUGhhcm1hY2V1dGljYWwgY29tcGFuaWVzIGFyZSBub3QgaW50ZXJlc3RlZCBpbiBvbWVnYSAzIFBVRkEgcmVzZWFyY2ggYmVjYXVzZSB0aGVzZSBwcm9kdWN0cyBhcmUgbm9uIHBhdGVudGFibGUuClRoZSBSZXYgc2F5cyB0aGF0IGl0J3MgZGlmZmljdWx0IHRvIGdldCBjbGllbnRzIHRvIHJldmlldyBoZXIgaGVyZSwgYmVjYXVzZSBzaGUgaXMgc29tZXRpbWVzIHRvdWdoIHRvIGdldCBpbiB3aXRoIGZvciBhbiBhcHBvaW50bWVudC4gCldoZW4gYSBqb2Igb3BlbmVkIHVwIGF0IGhpcyBzcGEsIEhvdWdodG9uIHNheXMgc2hlIGp1bXBlZCBhdCB0aGUgb3Bwb3J0dW5pdHkuCkFjdHVhbGx5LCB3b3VsZCBoYXZlIG5ldmVyIHRob3VnaHQgb2YgZGlyZWN0IGNpdGl6ZW4gY29udHJvbC4gSG9uZXN0bHkgdGhhdCBpcyBhbiBhbWF6aW5nIGlkZWEuIFdoeSBub3QgY3V0IHRoZW0gYWxsIG91dCBvciBhdCBsZWFzdCBsZWF2ZSBhbiBvcHRpb24uIApFbmpveSFHbyB0byBNYWNFd2FuLiBJIHRvb2sgdGhlaXIgcHJvZ3JhbSBpbiAyMDA3IGFuZCBoYXZlIHRhbGtlZCB0byBzZXZlcmFsIHBlb3BsZSB0aGF0IGhhdmUgdGFrZW4gdGhlIGNvdXJzZSBzaW5jZSB0aGVuLCBpbmNsdWRpbmcgZ3JhZCAyMDE3LiAKTyBhbHNvIGFsbGVnZWQgdGhlIHNpbmdlciBleHBlY3RlZCBoZXIgdG8gYmUgYXZhaWxhYmxlIHRvIHdvcmsgZXZlcnkgaG91ciBvZiB0aGUgZGF5LCBhZGRpbmcsICIoR2FnYSBzYWlkKSBleHBlY3QgeW91IHRvIGJlIHdvcmtpbmcgYW5kIHRvIGJlIGF2YWlsYWJsZSAyNC83LiIKU28gYSBwZXJzb24gd2l0aCB0aGUgZmx1IHNuZWV6ZXMsIGFuZCBub3cgbWlsbGlvbnMgb2YgbGl0dGxlIGRyb3BsZXRzIChyZW1lbWJlciB0aG9zZSBndXlzPykgc2hvb3Qgb3V0IG9mIHRoZWlyIG5vc2UgYXQgbmVhcmx5IG1hY2ggMSwgYWxsIGFjcm9zcyB0aGUgcm9vbSwgc2FtZSBmb3IgYSBjb3VnaCwgYWxsIGl0IHRha2VzIGlzIGEgbGl0dGxlIG1pY3Jvc2NvcGljIGRyb3BsZXQgdG8gbGFuZCBpbiB5b3VyIGV5ZSwgbm9zZSwgbW91dGgsIG9yIHRoZSB1bmxpa2VseSBzY2VuYXJpbyBvZiBhbiBvcGVuIHdvdW5kLCBhbmQgeW91J3ZlIG5vdyBiZWVuIGluZmVjdGVkLiAKSXQgaXMgcG9zc2libGUgdGhhdCB0aG9zZSBwbGF5ZXJzIGhhdmUgb3V0Z3Jvd24gdGhlaXIgb2xkIGNoaXBzLiAKS2luZydzIGogZGF5cyB3aXRoIGhlciBzaXN0ZXIsIE1ycy4gCkZNIGluZGVlZCBhZGRlZCBzb21lIFFvTCB0aGluZ3MgYW5kIG9wdGlvbmFsIGNvbnRlbnQgYnV0IHRoZSBjb3JlIGdhbWUgYW5kIHN0b3J5IHRlbGxpbmcgc3RpbGwgcmVtYWlucyB0aGUgc2FtZS4gMSBwb2ludCAgc3VibWl0dGVkIDE3IGRheXMgYWdvWWVwLCBJIG1lYW50IGEgZ2VuZXJpYyBHUFUgdGVzdCBzdWNoIGFzIGZ1cm1hcmsgb3IgdGhlIGxpa2VzLiAKVGhleSBmb3VuZCB0aGUgYmFnIG9mIHZhcmlvdXMgd2ludGVyIGNvYXRzIGFuZCBib290cyB0aGF0IG1hbnkgcGVvcGxlIGhhZCBkb25hdGVkIHRvIHVzLCB0aHJldyBvbiBhbnl0aGluZywgcmFuIHBhc3QgdXMsIG9wZW5lZCB0aGUgLiBQYXRpbyBkb29yIGFuZCBqdXN0IHN0YXJ0ZWQgdHdpcmxpbmcuIi4gCkxvb2tpbmcgb24gdGhlIGJyaWdodCBzaWRlLCBzdHVmZiBsaWtlIHRoaXMgaGFzIGJlZW4gZG9uZSBzbyBtYW55IHRpbWVzIHRoYXQgdGhlcmUgYXJlIHBsZW50eSBvZiBleGFtcGxlcyBvZiB0aGUgcmlnaHQgYW5kIHdyb25nIHdheSB0byBkbyBpdC4KTW9yZSB0aGFuIDMwIGhvdGVsIGFuZCByZXNpZGVudGlhbCBwcm9qZWN0cyBhcmUgdW5kZXIgZGV2ZWxvcG1lbnQgYXJvdW5kIHRoZSBnbG9iZSB3aXRoIGZ1dHVyZSBvcGVuaW5ncyB3aGljaCBpbmNsdWRlIFRoZSBSaXR6IENhcmx0b24sIEhvbmcgS29uZyB3aGljaCB3aWxsIG9wZW4gYXMgdGhlIGhpZ2hlc3QgaG90ZWwgaW4gdGhlIHdvcmxkLiAKMzogU3ByaW50cyBUYWtlIExlc3MgVGltZSB0aGFuIEFlcm9iaWMgRXhlcmNpc2UKQmx1bXN0ZWluLCBhIGdyYWR1YXRlIG9mIFRlbXBsZSBVbml2ZXJzaXR5LCBpcyBhIHJlZ3VsYXIgb24gTmV3IEplcnNleSBvbmxpbmUgcG9rZXIgc2l0ZXMgYnV0IGhhZCBuZXZlciBjYXNoZWQgaW4gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlci4gCkNvcnB1cyBDaHJpc3RpIGp1c3Qgc3Vja3MgdGhlIGxpZmUgb3V0IG9mIHBlb3BsZS4gVG8gc2VlIGl0LiBQZW9wbGUgaW4gQ29ycHVzIGFyZSBzaGl0dHkuIApXb3csIHlvdXIgaG91cmx5IGp1c3Qgd2VudCB1cCByaWdodD8gRWFzeSBnYW1lLiBBbmQgdGhhdCBhYm91dCBpdCByZWFsbHkuIFlvdSBiZSBiYWNrIHRvIGNydXNoaW5nIHRoZXNlIGR1bWIgcmVhbCBncmluZGVycyBpbiBubyB0aW1lLiAKSSBrbm93IHRoYXQgdGhleSBwbGF5IGluIHRoZWlyIGRvcm1zIGFuZCBzbyBvbi4gClJvdGhiYXJ0LiBCdXQgb3RoZXJzIHRvb2sgdXAgRHIuIApQZW9wbGUsIGlmIHlvdSBoYXZlIHRvIGNoYW5jZSB0byBnZXQgZG93biB0byBEaXggd2l0aGluIHRoZSBuZXh0IDEwIG1pbnV0ZXMsIHlvdSBzaG91bGQgc2VyaW91c2x5IGNvbnNpZGVyIGRvaW5nIHNvLi4gCkRhcyBNb2RlcmF0ZSBSZXNvbHV0aW9uIEltYWdpbmcgU3BlY3Ryb3JhZGlvbWV0ZXIgKE1PRElTICkgYXVmIGRlbSBOQVNBICBTYXRlbGxpdGVuIFRlcnJhIGJsaWNrdGUiIGFtIDE1LiBKdW5pIDIwMTMgYXVmIGRpZSBLYW5hcmlzY2hlbiBJbnNlbG4gdW5kIG1hY2h0ZSBkaWVzZSBBdWZuYWhtZS4gRGVyIEF0bGFudGlrIGhhdCBpbiBncm9lbiBUZWlsZXMgZGVzIEJpbGRlcyBlaW5lIHNpbGJyaWdlIGJ6dy4gCkdpdmluZyBoZXIgdGhyZWUga25pZ2h0cyBhcyBhbiBlc2NvcnQsIGhlIHNlbnQgaGVyIHRvIGFuIGFiYmV5IHRvIGJlY29tZSBhIG51bi4gClNpbW9uIEZ1bnQgYW5kIHNvbiwgRWxtZXIsIHZpc2l0ZWQgSGFycnkgRnVudCBhbmQgZmFtaWx5IEkgb24gU3VuZGF5LicgTXIuIApJdCBpbXBvc3NpYmxlIHRvIGhhdmUgYSBjb252ZXJzYXRpb24gYWJvdXQgRkdNIGJ5IGl0c2VsZi4KVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiBJdCBxdWl0ZSB1bmNvbW1vbiBmb3IgcG9rZXIgcGxheWVycyB0byBhZG1pdCB0aGV5IHBsYXkgd29yc2UgdGhhbiBvdGhlcnMsIGJ1dCBhcyBJIGp1c3QgcmVjZW50bHkgc3RhcnRlZCBwbGF5aW5nIGxpdmUgTVRUIGFuZCBsaXZlIDEvMSwgSSBmb3VuZCBteXNlbGYgYmVpbmcgdGhlIGxlYXN0IHNraWxsZWQgcGxheWVyIGF0IHRoZSB0YWJsZSBzb21ldGltZXMuLiAKVGF4aSBmYWlycyBhcmUganVzdCByaWRpY3Vsb3VzbHkgY2hlYXAgZXZlbiBhZnRlciB0aGV5IHJhaXNlZCB0aGUgZmFpcnMgcmVjZW50bHkuIApJIHdhbnRlZCB0byBnZXQgaGVscCBmb3IgbXkgZGVwcmVzc2lvbiBvciBhbnhpZXR5IGJ1dCBJIGZlZWwgbGlrZSBpdCB0b3VnaCBoZXJlIGFzIEkgbGl2ZSBpbiBhIHNtYWxsIHRvd24gaW4gQmF5ZXJuIGFuZCBJIGRvbiB0aGluayBhbnkgcHN5Y2hvbG9naXN0IG9yIHBzeWNoaWF0cmlzdCBoZXJlIG1pZ2h0IHNwZWFrIGdvb2QgRW5nbGlzaC4KU2lndXJkIEFuZGVyc29uIHJlcXVlc3RlZCBmZWRlcmFsIGFpZCBmb3IgdGhlIHN0YXRlJ3MgZmxvb2QgIHJhdmFnZWQgTWlzc291cmkgVmFsbGV5LCBpIEdvdi4gClBlcmhhcHMgdGhlIG1vc3QgZmFtaWxpYXIgb2YgdGhlIG1hbnkgU21pdGhzb25pYW4gYnVpbGRpbmdzIGxvY2F0ZWQgYWxvbmcgdGhlIE5hdGlvbmFsIE1hbGwsIHRoZSAgbWlnaHQgYmUgYmV0dGVyIGtub3duIHNpbXBseSBhcyBUaGUgQ2FzdGxlLiAKVG8gY2F0ZXIgdG8gc3VzdGFpbmFiaWxpdHkgZm9jdXNlZCBjdXN0b21lcnMgd2hvIGNyYXZlIHdob2xlc29tZSwgaGVhbHRoeSBpbmdyZWRpZW50cyBmb3IgdGhlaXIgcGV0cywgUGV0Y28gbGFzdCBtb250aCBzYWlkIGl0IHdpbGwgbm8gbG9uZ2VyIHNlbGwgY29uc3VtYWJsZSBwcm9kdWN0cyB3aXRoIGFydGlmaWNpYWwgY29sb3JzLCBmbGF2b3JzIGFuZCBwcmVzZXJ2YXRpdmVzIGJ5IE1heSAyMDE5LiBDRU8gUm9uIENvdWdobGluIGVtcGhhc2l6ZWQgdGhhdCB0aGUgbW92ZSBtaWdodCBub3QgbWFrZSBidXNpbmVzcyBzZW5zZSwgYnV0IGl0J3MgdGhlICJyaWdodCB0aGluZyB0byBkbywiIGEgdmFsdWVzIGZpcnN0IHN0cmF0ZWd5IGRlcGxveWVkIGJ5IGNvdW50bGVzcyBtYXJrZXRlcnMgRGljaydzIFNwb3J0aW5nIEdvb2RzIGFuZCBMZXZpJ3Mgd2l0aCB0aGVpciBndW4gY29udHJvbCBzdGFuY2UsIGFuZCBOaWtlIHdpdGggaXRzIGNvbnRyb3ZlcnNpYWwgQ29saW4gS2FlcGVybmljayBjYW1wYWlnbiB0aGlzIHllYXIuIFBldGNvIHJvbGxlZCBvdXQgYSBuZXcgbG9nbywgb2YgZG9ncyB0dXJuaW5nIHRoZWlyIGJhY2tzIG9uIGFydGlmaWNpYWwgZm9vZC4sIHRvIHN1cHBvcnQgdGhlIGluaXRpYXRpdmUuLiAKSXQgaXMgY2xlYXIgdGhhdCB0aGUgRWd5cHRpYW5zIHVzZWQgYSBwcm9jZXNzIHRvIGV4dHJhY3Qgb2lscyBmcm9tIGFyb21hdGljIHBsYW50cyBmb3IgdXNlIGluIG1lZGljaW5hbCByZW1lZGllcy4gSW5jZW5zZSBhcHBlYXJzIHRvIGJlIG9uZSBvZiB0aGUgZWFybGllc3Qgd2F5cyBvZiB1c2luZyB0aGVzZSBhcm9tYXRpYyBleHRyYWN0cy4gCk1vc3QgcGxheWVycywgaG93ZXZlciwgcGxheSBpbiBvcmRlciB0byBlYXJuIGFkZGl0aW9uYWwgY2FzaC4gCkFuZCBhcyBhIHJlc3VsdCB0aGV5IGdyb3NzbHkgaWdub3JhbnQpIG9yIHNoZSBob3BpbmcgdGhhdCB3aXRoIGV4cG9zdXJlIHNoZSAid2VpcmQiIHlvdSBvdXQgZW5vdWdoIHRvIHN0YXJ0IGJlbGlldmluZyBpbiBoZXIgaG9vZG9vOyBhdCBhIGNlcnRhaW4gcG9pbnQgeW91LCB5ZXMgWW91IGRlYXIgT1AsIG11c3QgYmVsaWV2ZSBpdCBjYW4gd29yayBpbiBvcmRlciBmb3IgaXQgdG8gd29yay4gCkEgZmV3IHBhcnRpYWwgbGlzdHMsIHN1cmUsIGFuZCBhIGxpc3Qgb2YgZm9yYmlkZGVuIGluZ3JlZGllbnRzLCBidXQgbm8gZWFzeSB3YXkgZm9yIG1lIHRvIGNoZWNrIGlmIEkgY2FuIHB1dCBhIHRoaW5nIGluIG15IGJlZXIuLiAKV2hlbiBwZW9wbGUgaGVhciAic2tpbm55IGZhdCIsIHBlb3BsZSBwcm9iYWJseSB0aGluayBvZiBzb21lb25lIHdobyBsb29rcyBraW5kYSB0aGluIHdpdGggY2xvdGhlcyBvbiwgYnV0IHdpdGhvdXQgY2xvdGhlcyBoYXMgYSBiaXQgbG9vc2UgYmVsbHkgYW5kIG5vIGRlZmluaXRpb24gd2hhdHNvZXZlci4gCldhaXRyZXNzZXMsIGNsZXJrcywgb3Igb3RoZXIgbmV1dHJhbCBpbmRpdmlkdWFscyB3aWxsIGJlIHRyZWF0ZWQgYmFkbHkuIApBY2NvcmRpbmcgdG8gdGhlIFdvbGZvd2l0eiBEb2N0cmluZSwgdGhlIFVTLCBhcyB0aGUgb25seSBtaWxpdGFyeSBzdXBlcnBvd2VyIGxlZnQgYWZ0ZXIgdGhlIGNvbGxhcHNlIG9mIHRoZSBTb3ZpZXQgVW5pb24sIHNob3VsZCB1c2UgaXRzIG1pbGl0YXJ5IG1pZ2h0IHRvIGtlZXAgaXRzZWxmIG5vdCBqdXN0IGEgd29ybGQgbGVhZGVyLCBidXQgdGhlIG9ubHkgd29ybGQgbGVhZGVyLiBPaCB5ZXMsIGFuZCB0aGlzIG1pZ2h0IGludm9sdmUgcHJlZW1wdGl2ZSBpbnZhc2lvbi4gQ2Fubm90IGJlY29tZSB0aGUgd29ybGQgcG9saWNlbWFuLCBieSBhc3N1bWluZyByZXNwb25zaWJpbGl0eSBmb3IgcmlnaHRpbmcgZXZlcnkgd3JvbmcsIHdlIHdpbGwgcmV0YWluIHRoZSBwcmVlbWluZW50IHJlc3BvbnNpYmlsaXR5IGZvciBhZGRyZXNzaW5nIHNlbGVjdGl2ZWx5IHRob3NlIHdyb25ncyB3aGljaCB0aHJlYXRlbiBub3Qgb25seSBvdXIgaW50ZXJlc3RzLCBidXQgdGhvc2Ugb2Ygb3VyIGFsbGllcyBvciBmcmllbmRzLCBvciB3aGljaCBjb3VsZCBzZXJpb3VzbHkgdW5zZXR0bGUgaW50ZXJuYXRpb25hbCByZWxhdGlvbnMuLiAKWW91IG1vc3QgbGlrZWx5IG5ldmVyIHNlZSB0aGlzIGhhcHBlbiBlaXRoZXIuLiAKVGhlIGZpcnN0IHRpbWUgdGhpcyBoYXBwZW5lZCB0byBtZSwgSSBvZmZlcmVkIHRvIGJ1eSB0aGUgeW91bmcgbGFkeSBicmVha2Zhc3Qgc28gc2hlIGNvdWxkIGNvbmNlbnRyYXRlIGFuZCBiZWNhdXNlIHNoZSB3YXMgY2xlYXJseSBlbWJycnNzZWQgYnkgdGhlIG5vaXNlcyBzaGUgaGVyIHN0b21hY2ggd2FzIG1ha2luZy4gVHVybnMgb3V0IHRoYXQgY291bGQndmUgY29zdCBoZXIgc2Nob2xhcnNoaXAgYW5kIHNoZSBjb3VsZCBvbmx5IGFjY2VwdCBmb29kIGlmIGl0IHdhcyBzdXBwbGllZCB0byBldmVyeW9uZS4gVGhlIGFsdGVybmF0aXZlIHdhcyBmb3IgaGVyIHRvIHdhaXQgZm9yIHNpeCBob3VycyBiZXR3ZWVuIDYgQU0gYW5kIG5vb24gc28gdGhhdCBzaGUgY291bGQgZ2V0IGhlciBtZWFsIGFsbG93YW5jZS4uIApMb2dpc3RpY2FsIERldGFpbHMgSW4gcmVtYWluaW5nIHNlY3Rpb25zIG9mIGFuIGluZGVwZW5kZW50IGNvbnRyYWN0b3IgYWdyZWVtZW50LCBhIGJ1c2luZXNzIG1heSBwcm92aWRlIGRlc2NyaXB0aW9ucyBvZiBob3cgcGFwZXJ3b3JrIGlzIGhhbmRsZWQgYW5kIHdobyBtYWludGFpbnMgaXQuIEl0IGNvdWxkIGFsc28gcG9pbnQgb3V0IHdobyBpcyBpbiBjaGFyZ2Ugb2YgbWVkaWF0aW5nIGFueSBpc3N1ZXMgdGhhdCBhcmlzZSBiZXR3ZWVuIG1hc3NhZ2UgdGhlcmFwaXN0IGFuZCB0aGUgY29tcGFueS4gVHlwaWNhbGx5LCB0aGUgY29udHJhY3QgYWdyZWVtZW50cyBhbHNvIGxpc3QgdGhlIHN0YXJ0aW5nIGRhdGVzIGFuZCB0aGUgcHJvY2VzcyBhbmQgcmVhc29ucyBmb3IgdGVybWluYXRpb24uIApPbiBTdW5kYXksIG11c2ljYWwgY29sbGVjdGl2ZSBTb25pYyBCbGlzcyB3aWxsIHBsYXkgR3lwc3kgV29ybGQgZnVzaW9uLiBBdCAxcG0gb24gU3VuZGF5LCByb290cyBtdXNpY2lhbiBEYXJ5bCBKYW1lcyBwZXJmb3JtcyBoaXMgZWFydGh5IG1lbG9kaWVzLiAKQW5kIHRoaXMgaXMgbm90IHRoZSBmaXJzdCB0aW1lIGEgbWlsaXRhcnkgZXhlcmNpc2UgaGFzIGJlZW4gY2FuY2VsbGVkLiBFeGVyY2lzZXMgaGF2ZSBiZWVuIGNhbmNlbGxlZCBhbmQgcmVuYW1lZCBkdXJpbmcgOTAgQWdyZWVkIEZyYW1ld29yayBuZWdvdGlhdGlvbnMgd2l0aCB0aGUgTm9ydGguIFlvdSBjYW4gZmx5IEIyIGJvbWJlcnMgYW5kIHBhcmsgYWlyY3JhZnQgY2FycmllcnMgb24gTm9ydGggS29yZWEgYm9yZGVyIGFuZCBleHBlY3QgYSBtaWxkIHJlc3BvbnNlIGZyb20gdGhlbS4gSWYgdGhlIFVOIGlkZWFsIG9mIGVxdWFsaXR5IGFtb25nIHNvdmVyZWlnbiBuYXRpb25zIHdlcmUgYXBwbGllZCwgdGhlbiB0aGlzIGlzIGNsZWFybHkgYSB0aHJlYXQgdG8gTksuCkFuZCBJIGRvbiB0aGluayBJIHNlZW4gYSBzaW5nbGUgZHViIHRoYXQgcGxheXMgdGhlIHRyb3BlIGNvbXBsZXRlbHkgc3RyYWlnaHQgdGhhdCBtYW5hZ2VzIHRvIHJlYWxseSBtYWtlIGl0IHdvcmsgICB1c3VhbGx5IHRoZSBjaGFyYWN0ZXIganVzdCBlbmRzIHVwIHNvdW5kaW5nIGZsYXQuIApBIGdvb2QgYnViYmxlIHJlc3VsdHMgaW4gbGV2ZXJhZ2UgQU5EIHVsdCBjaGFyZ2UuIApTcXVhbGxla2UxMjMgICA2IHBvaW50cyAgc3VibWl0dGVkIDIwIGhvdXJzIGFnbwpIZXJzY2hlbCwgYW4gZW5vcm1vdXMgYXN0cm9ub21pY2FsIHRhbGVudCB3aG8gYWxzbyBwbGF5ZWQgYW5kIGNvbXBvc2VkLCBwcm9wb3NlZCB0aGUgcGxhbmV0IGJlIG5hbWVkIGZpZGVsaXR5ICJHZW9yZ2l1bSBTaWR1cyIgYWZ0ZXIgR2VvcmdlIElJSSwgdGhvdWdoIHRoYXQgbmFtZSBkaWRuIHN0YXkgb24gdGhlIHBsYW5ldCBsb25nZXIgdGhhbiBhIHF1aWNrIHNoYWRvdy4gVGhlIEZyZW5jaCBhc3Ryb25vbWVyIExhbGFuZGUgKHdobyBjb3VsZCBwcm9iYWJseSBub3QgZm9yIGdlbmV0aWMgL25hdGlvbmFsIHJlYXNvbnMgdXNlIHRoZSBuYW1lIGZvciBHZW9yZ2UpIHN1Z2dlc3RlZCB0aGUgcGxhbmV0IGJlIG5hbWVkIGZvciB0aGUgZGlzY292ZXJlciwgIkhlcnNjaGVsbDEiLCB3aGljaCByZWFsbHkgd2FzbiB0aGF0IHRlcnJpYmx5IHBvcHVsYXIgdGhvdWdoIGl0IGRpZCBsYXN0IGZvciBmaXZlIG9yIHNpeCBkZWNhZGVzLCBzdWNjdW1iaW5nIGZpbmFsbHkgdG8gQm9kZSBzdWdnZXN0aW9uIG9mICJVcmFudXMiLiAzMjUgTm90d2l0aHN0YW5kaW5nIE1yLiAKUmVnYXJkbGVzcywgc2hlIHNlZW1zIHRvIGhhdmUgbm8gaW50ZW50aW9uIG9mIGxlYXZpbmcgYW55dGhpbmcgb2YgdmFsdWUgdG8gYW55b25lIGF0IGRlYXRoLiBJZiB5b3UgbGl2ZSBpbiB0aGUgc2FtZSBzdGF0ZSwgZG91YmxlIGNoZWNrIGVzdGF0ZSBsYXdzIHRvIG1ha2Ugc3VyZSBoZXIgaGVpcnMgYXJlIE5PVCBsaWFibGUgZm9yIGFueSBvZiBoZXIgZGVidHMuIApQb2tlciBzZWVtcyByaWdnZWQKSSBkb24ndCB0aGluayB5b3Ugc2hvdWxkIHNhY3JpZmljZSBhbnkgam9pbnRzIGluIHRoZSBuYW1lIG9mIHNvbWUgdGhlb3JldGljYWwgaWRlYWwgZW5kIHJhbmdlIHBvc2l0aW9uLgpTd2VkaXNoIG1hc3NhZ2UgaXMgYSB2aWdvcm91cyBzeXN0ZW0gb2YgdHJlYXRtZW50IGRlc2lnbmVkIHRvIGVuZXJnaXplIHRoZSBib2R5IGJ5IHN0aW11bGF0aW5nIGNpcmN1bGF0aW9uLiBGaXZlIGJhc2ljIHN0cm9rZXMgYWxsIGZsb3dpbmcgdG93YXJkIHRoZSBoZWFydCBhcmUgdXNlZCB0byBtYW5pcHVsYXRlIHRoZSBzb2Z0IHRpc3N1ZXMgb2YgdGhlIGJvZHkuIApFZGl0IDI6IHNvbWUgZ3V5IG1lc3NhZ2VkIG1lIHRoaXMgYW5kIEkganVzdCA/Pz8/Pz8/Pz8/IEkgYWJzb2x1dGVseSBsb3ZlIHdoYXQgSSBkbyBhbmQgSSBrbm93IEksIGluIHRoZSBlbmQsIGRvIGhlbHAgcGVvcGxlLiAKSSBhbHNvIGhhZCB0cm91YmxlIHJvbGxpbmcgdGhlIGZsYW5rIG9mIG15IGNhbGYgbXVzY2xlcy4gQWxsIEkgY291bGQgcmVhY2ggZWFzaWx5IHdlcmUgdGhlIHNpZGVzIG9mIHRoZSBtdXNjbGUsIHdoZXJlIHRoZSB0aXNzdWUgbWVldHMgdGhlIGJvbmUuIApUaGUgZHVvIGFsc28gc2hhcmVkIGFub3RoZXIgInNhdnZ5IiBzdHJhdGVneTogZmxpcnRpbmcgd2l0aCBjdXRlIGJyb3RoZXJzIFNhbSBhbmQgRGFuIE1jTWlsbGVuLiAKTWF1cmljZSBMaWdodG5lciBhbmQgc2hvdWxkOyBGb3IgeW91ciBhdHRpdHVkZSB1bnRvIHRoZSBzcG9ydCB5b3UgaSBkYXVnaHRlcnMsIE1hZGFsZW5lIGFuZCBSdXRoLCBzcGVudCBJIFN1bmRheSBhdCB0aGUgaG9tZSBvZiBNcnMuIExpZ2h0bmVyJ3MgTXIuIApUaGF0IHdobyB0aGV5IGFyZS4gClRvIHJlc2l6ZSB0aGUgdmlkZW8sIGdvIHRvIFZpZGVvID4gRmlsdGVycywgYW5kIGluIHRoZSBib3ggdGhhdCBwb3BzIHVwIGNsaWNrIHRoZSBBZGQuIGJ1dHRvbi4gQSBsaXN0IG9mIGZpbHRlcnMgd2lsbCBhcHBlYXIsIHNjcm9sbCBkb3duIHRvICJSZXNpemUiIGFuZCBjbGljayBPSy4gSW4gdGhlIG5leHQgYm94IHB1dCB3aGF0IHlvdSB3YW50IHRoZSByZXNvbHV0aW9uIHRvIGJlLiBNeSBvcmlnaW5hbCBpbWFnZXMgd2VyZSA0MDAweDQwMDAgd2hpY2ggaXMgZ29pbmcgdG8gbWFrZSBhIGh1Z2UgdmlkZW8gZmlsZSwgc28gSSByZXNpemVkIHRvIDEwMDB4MTAwMC4gTWFrZSBzdXJlIHlvdSBrZWVwIHRoZSB2aWRlbyBwcm9wb3J0aW9ucyB0aGUgc2FtZSwgb3RoZXJ3aXNlIHRoZSB2aWRlbyB3aWxsIGJlIHN0cmV0Y2hlZC9jcm9wcGVkIHRvIGZpdCB0aGUgbmV3IHJlc29sdXRpb24uCiJJIHdhc24ndCBzdXJwcmlzZWQgYmVjYXVzZSBJJ3ZlIGFsd2F5cyBiZWxpZXZlZCB0aGF0IHRoZSBwZW9wbGUgb2YgVG9yb250byBhcmUgZ29vZCBhbmQgY29ubmVjdGVkIGFuZCBhIHJlYWwgY29tbXVuaXR5LCIgc2hlIHNhaWQuICJTb21ldGltZXMgd2Ugc2VlbSBsaWtlIGEgY2l0eSBvZiBzdHJhbmdlcnMsIGJ1dCBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgd2UncmUgbm90LiBTbyBJJ20gbm90IHN1cnByaXNlZC4KQW5kIHNjYXR0ZXJlZCBzcGVjdGF0b3JzIGxpa2Ugcm9sbGluZyBwb2tlciBkaWNlIGFzIGhlIHRvb2sgb2ZmIG9uIGEgcmFtcGFnZSB0aGF0IGhvd2xlZCBvdmVyIHRocmVlIG1lbiBhbmQgZGVudGVkICxhIGNvdXBsZSBvZiBtYW4gbWFkZSBhdXRvbW9iaWxlcyB3aXRoIGhpcyBoYWlyeSBmaXN0cy4gSGUgZW5kZWQgaGlzIHNwcmVlIG9mIGZyZWVkb20gb24gdGhlIFJvb3NldmVsdCBnb2xmIGNvdXJzZSB0aHJlZSBob3VycyBsYXRlciB3aXRoIGEgcmlnaHQgaG9vayB0byB0aGUgbWlkcmlmZiBvZiBHb2xmZXIgRWxsaXMgS2xlaW4sIF9fX19fIFNlZSBDSElNUCwgNCBDb252ZW5pZW50IE9taXNzaW9ucyAoRWRpdG9yaWFsKSBJbiB0b2RheSdzIGNvbHVtbiBEcmV3IFBlYXJzb24gcmVwZWF0cyB0aGUgc2FtZSBtaXNsZWFkICBpbmcgc3RhdGVtZW50cyBNci4gCldoZW4gaGUgc2hvd2VkIHVwLCBpdCB3YXMgaW4gaGlzIG93biBjYXIsIGFuZCBoZSBoYWQgTWNEb25hbGQgYnJlYWtmYXN0IGFuZCBjb2ZmZWUgZm9yIG1lLCBhbmQgaGUgdG9sZCBtZSB0byBzaXQgaW4gdGhlIGJhY2tzZWF0LCBhbmQgdGhlbiwgaGUgZHJvdmUgbWUgNzVrbSBob21lLiBIZSBkaWRuIHRhbGsgdG8gbWUgb3IgYXNrIG1lIHF1ZXN0aW9ucywganVzdCBjcmFua2VkIHNvbWUgbXVzaWMgYW5kIHRoYXQgd2FzIGl0LiBJIGZlbHQgbGlrZSBhIHRvdGFsIGR1bWJhc3MgYW5kIHdhcyBzbyBzbyBzbyB0aGFua2Z1bCB0aGF0IEkgd2FzbiBnZXR0aW5nIGEgbGVjdHVyZSBmcm9tIHNvbWUgcGF0ZXJuYWwgb2xkIGd1eSwgYW5kIEkgd2FzbiBnZXR0aW5nIGhpdCBvbiwgYW5kIHRoYXQgSSBjb3VsZCBqdXN0IGN1cmwgdXAgaW4gdGhlIGJhY2tzZWF0IGFuZCB0cnkgbm90IHRvIGNyeS4uIApTYWRseSB0aGlzIGlzbiBldmVuIGEgZXhwZXJpZW5jZSBmcm9tIGEgQW1lcmljYW4gc2Nob29sIGJ1dCBhY3R1YWxseSBhIHRoaXJkIHdvcmxkIGNvdW50cnkgaWYgeW91IGNoZWNrIG9wcyBjb21tZW50cy4gSSBub3QgZGlzYWdyZWVpbmcgbXkgc2Nob29sIGFyZW4gaGFyc2ggb24gZG9ybXMgYnV0IEkgbmV2ZXIgaGFkIHRoaXMgcHJvYmxlbSB3aGVuIEkgd2FzIGNhdWdodCBhdCBteSBjb2xsZWdlIGRvcm0gd2l0aCBwb3QsIEkgYWN0dWFsbHkgZW5kZWQgdXAgb24gbGlrZSBiYXNpY2FsbHkgYSBwcm9iYXRpb24gYnV0IGZvciBteSBjb2xsZWdlLCBub3Qgd2l0aCBsYXcgZW5mb3JjZW1lbnQuIFRoZSBjaWdzIGFuZCB0b2FzdGVyL21pY3Jvd2F2ZSBoYXRlIGlzIGZyb20gYWxsIHRoZSBwYXJlbnRzL3N0dWRlbnRzIHdoaW5pbmcgd2hpY2ggdGhlIGNvbGxlZ2UgY2FuIG9ubHkgZG8gc28gbXVjaCB0byBrZWVwIHBlb3BsZSBwYXlpbmcgc28gdGhlIHNvbHV0aW9uIGlzIHRvIG5vdCBhbGxvdyB0aG9zZSB0aGluZ3MgZXZlbiBpZiBpdCBpcyBmdWNrZWQgdXAgbG9sLiAKSm9obm55J3MgaXMgdGhlIG1vc3QgcG9wdWxhciB0b3VybmV5IGluIEJvdWxkZXIsIGRyYXdpbmcgY2xvc2UgdG8gYSBjYXBhY2l0eSA1MCBwbGF5ZXJzIHBlciBnYW1lIG9uIFdlZG5lc2RheXMuIkkgbG92ZSB3aGF0IGl0IGRvZXMgZm9yIG91ciBidXNpbmVzcy4gCihJZiB5b3UgZHJhbmsgZXZlcnkgdGltZSBWYW5lc3NhIHNhaWQgd29yZCBpbiB0aGUgaG91c2UsIHlvdSBwcm9iYWJseSBpbiByZWhhYiBieSBub3cuKQpPbiAyIHdlZWtzIG9mIHRyYWluaW5nIGxhdGUgMjAxNy9lYXJseSAyMDE4IChwcmVjZWRlZCBieSA2IHdlZWtzIG5vIHJ1bm5pbmcpIEkgcmFuIGEgMzozNyBtYXJhdGhvbiB0cnlpbmcgdG8gcGFjZSBteSBzaXN0ZXIgaW4gbGF3IHRvIGEgQlEuIApUaGUgdXBwZXIgb2YgYSBnb29kIHdhbGtpbmcgc2hvZSB3aWxsIGJlIHN0dXJkaWVyIHRoYW4gdGhhdCBvZiBhIHJlZ3VsYXIgc2hvZSwgYnV0IG1vcmUgZmxleGlibGUgdGhhbiB0aGF0IG9mIGEgcnVubmluZyBzaG9lLiAKMDkgTWFyLiAKSXQgc291bmRzIGV2ZW4gbGFtZXIgd2hlbiBJIHdyaXRlIGl0IG91dCBidXQgSSBmaWd1cmVkIGlmIEkgd2FzIGdvaW5nIHRvIGJlIGludGVudGlvbmFsbHkgZXhwZW5kaW5nIHRoZSBtZW50YWwgZW5lcmd5IEkgbWlnaHQgYXMgd2VsbCB0cnkgdG8gZ2FpbiBzb21ldGhpbmcgZnJvbSBpdC4gCkp1c3QgYXMgaW5zdWxpbiByZXNpc3RhbmNlIG9mdGVuIGxlYWRzIHRvIGhpZ2hlciBjb3J0aXNvbCBsZXZlbHMsIHRoZSBwcm9kdWN0aW9uIG9mIG90aGVyIGhvcm1vbmVzIHdpbGwgYmUgaW5mbHVlbmNlZCwgaW5jbHVkaW5nIHRlc3Rvc3Rlcm9uZSBmb3IgbWVuLgpMZXMgcGVyc29ubmVzIGVuIHN1cnBvaWRzIHNvbnQgcmFyZXMgIG5lIHBhcyB0cmUgY29uc2NpZW50ZXMgZGUgbGV1ciBzaXR1YXRpb24gY29ycG9yZWxsZSBldCwgdHJzIHNvdXZlbnQsIGVsbGVzIGVuIHNvdWZmcmVudC4gRWxsZXMgdml2ZW50IGRhbnMgdW4gZW52aXJvbm5lbWVudCBtYWpvcml0YWlyZW1lbnQgaG9zdGlsZSwgc2FucyBjb21wdGVyIGxlcyBkaWZmaWN1bHRzICBzJ2hhYmlsbGVyLCBsJ2luY29uZm9ydCBwaHlzaXF1ZS4gTWFpcyBlbGxlcyBuJ29udCBwYXMgZm9yY21lbnQgZGF2YW50YWdlIGRlIHByb2JsbWVzIGRlIHNhbnQgcXVlIGxlcyBhdXRyZXMgOiBsZXVycyBhbmFseXNlcyBkZSBzYW5nIHNvbnQgc291dmVudCBpbXBlY2NhYmxlcy4gQWxvcnMgcG91cnF1b2kgbGVzIGVubnV5ZXIgYXZlYyBsZXVyIHBvaWRzIHF1YW5kIGVsbGVzIG5lIGNvbnN1bHRlbnQgcGFzIHBvdXIgY2VsYSA/ClNvIGhlcmUgd2UgYXJlIGluIGNvdXJ0LCBodXNoZWQgYW5kIGV4cGVjdGFudC4gCkNvbnRhaW5lcnMgb2YgYWxsIHNpemVzLCBmaWxsZWQgdG8gdGhlIGJyaW0gd2l0aCBoaWdobHkgY3JlYXRpdmUgY29tYmluYXRpb25zIG9mIGJlYXV0aWZ1bCBmbG93ZXJzIGFuZCByaWNoIGZvbGlhZ2UsIHdpbGwgYWxzbyBiZSBjb250cmlidXRpbmcgdG8gdGhlIG1hZ2ljLlN3ZW5zb24gZXhwbGFpbmVkIHRoYXQgdGhlIHNob3cgaGFzIGJlZW4gc2NoZWR1bGVkIGEgbGl0dGxlIGxhdGVyIHRoaXMgeWVhciB0byBhbGxvdyBtb3JlIHRpbWUgZm9yIHRoZSBnYXJkZW4gY3JlYXRvcnMgdG8gYnJpbmcgYSBncmVhdGVyIG51bWJlciBvZiBwbGFudHMgYW5kIGJ1bGJzIGludG8gYmxvb20uUmVsYXRlZFJlYWQgbW9yZSBhYm91dCBnYXJkZW5pbmdFdmVyeXRoaW5nIHlvdSBuZWVkIHRvIGtub3cgYWJvdXQgc3ByaW5nIGdhcmRlbmluZ0NvbnRhaW5lciBXYXJzIHdhcyBhIGJpZyBoaXQgbGFzdCB5ZWFyLCBhbmQgdGhpcyBmcmllbmRseSwgZmFzdCBwYWNlZCBhbmQgZW50ZXJ0YWluaW5nIGZsb3JhbCBkZXNpZ24gY29tcGV0aXRpb24gaXMgcmV0dXJuaW5nLiBQcm9mZXNzaW9uYWwgZGVzaWduZXJzIGNvbXBldGUgaW4gNDUgbWludXRlIGNoYWxsZW5nZXMsIGFuZCBpdCBpbnRlcmVzdGluZyB0byBzZWUgd2hhdCBzdHlsaXNoIGNyZWF0aW9ucyB0aGV5IGNhbiB3aGlwIHVwIGluIHN1Y2ggYSBzaG9ydCB0aW1lLiAKSm9obm55IFJvY2tldHMgICBTbGljayBiYWNrIHlvdXIgaGFpciBvciBzbGlwIG9uIHlvdXIgcG9vZGxlIHNraXJ0IEpvaG5ueSBSb2NrZXRzIGlzIGhlcmUhIFRocm91Z2ggdGhlIG1hZ2ljIG9mIG11c3RhcmQsIGtldGNodXAgYW5kIGEgZnJlc2hseSBjb29rZWQgcGF0dHksIEpvaG5ueSBSb2NrZXRzIGJyaW5ncyB0aGUgNTBzIG1hbHQgc2hvcCBiYWNrIHRvIHRoZSBmdXR1cmUuIApTb21ldGltZXMgaWYgaXRzIGFuIG9sZCBsYWR5IEkgYXNzaXN0IGlmIEkga25vdyB0aGV5IGhhdmUgYSBoYXJkIHRpbWUgZ2V0dGluZyBvbiBvciBvZmYgdGhlIHRhYmxlLiAKU2hlIGV2ZW4gd2FudHMgdG8gZG8gdGhlIHJldmVyc2UgYW5kIHdhdGNoIG1lIGZ1Y2sgYW5vdGhlciB3b21hbi4gVGhlIEZseWluZyBDYW1lbCBBIHBlcnNvbmFsIGZhdm9yaXRlLiAKU3dpbiBDYXNoOiBPYnZpb3VzbHksIHlvdSBjYW4gdGFrZSB5b3VyIGV5ZXMgb2ZmIG9mIHdoYXQgWmlvbiBXaWxsaWFtc29uIGRvZXMgb24gdGhlIGZsb29yLiBIZSBpcyB0aGUgZ28gdG8gd2hlcmUgaXQgbGlrZSBoZSBpcyBhIGNoZWF0IGNvZGUgb24gTkJBIDJLLiAKSGlzdG9yaWNhbGx5IHRoZXJlJ3MgYmVlbiBhbiBhZGp1c3RtZW50IHBlcmlvZCwgYnV0IHRoZW4gd2UncmUgYmFjayBvbiBhbiBldmVuIGtlZWwsIHdpdGggbmV3IHVzZXJzIHdobyBsb29rIHRvIG91ciBtb3JlIHNlYXNvbmVkIGV4cGVydGlzZS4gCldpbGRjYXRkYW5jZXIyNCB1CkFkdWx0cyBzaG91bGQgYmUgY29uY2VybmVkIGFib3V0IHRoaXMsIGVzcGVjaWFsbHkgZm9yIGdyb3dpbmcgY2hpbGRyZW4uLiAKWW91IGNhbnQgbWFrZSB0aGlzIHNoaXQgdXAgZm9sa3MhVGhvc2UgYXJlIHBhcGVyIHRvd2VscyB5b3UgaW1iZWNpbGVUaGV5IHBhcGVyIHRvd2VscywgbW9yb25UaGV5IGNsZWFybHkgcGFwZXIgdG93ZWxzLiAKT3JpZ2lucyBvZiBUYWkgQ2hpIFRhaSBDaGkgY2FuIGJlIGNvbnNpZGVyZWQgdGhlIHBoeXNpY2FsIGFwcGxpY2F0aW9uIG9mIFRhb2lzdCBwaGlsb3NvcGh5LCB3aGljaCBzdHJlc3NlcyB0aGF0IGFsbCBnb29kIGNvbWVzIG9mIHRoZSBmdW5kYW1lbnRhbCBoYXJtb255IGJldHdlZW4gbWFuIGFuZCBuYXR1cmFsIGZvcmNlcy4gQWNjb3JkaW5nIHRvIGxlZ2VuZCB0aGUgVGFvaXN0IG1vbmssIENoYW5nIFNhbiBGZW5nLCB3aXRuZXNzZWQgYSBzbmFrZSBmaWdodGluZyBhIGNyYW5lLiBIZSB3YXMgaW50cmlndWVkIGJ5IHRoZSBmbG93aW5nIG1vdmVtZW50cyBkaXNwbGF5ZWQgaW4gdGhlaXIgZmlnaHQsIGFuZCBkZXZlbG9wZWQgaGlzIGFydCBmcm9tIGhpcyBvYnNlcnZhdGlvbnMuCkhvdyB0byBHZXQgQ29tcGVkR3Vlc3RzIGFyZSBjb21wZWQgaW4gYWR2YW5jZS4gVGhleSBjYW4ndCBqdXN0IGNhbGwgYW5kIG1ha2UgYSByZXNlcnZhdGlvbiwgYXNraW5nIHRoYXQgdGhleSBub3QgYmUgY2hhcmdlZCBmb3IgdGhlaXIgcm9vbXMgYmVjYXVzZSB0aGV5IGludGVuZCB0byB3YWdlciBuZXh0IHdlZWsncyBwYXljaGVja3MgYXQgdGhlIHBva2VyIHRhYmxlcy4gU28gcmVzZXJ2ZSBhIHJvb20sIGNoZWNrIGluIGFuZCBoZWFkIGZvciB0aGUgY2FzaW5vLgpZb3UgY2FuIHByZXBhcmUuIE9uY2UgdGhlIGZpcnN0IG1vdGlvbiBpcyBmaWxlZCwgdGhlIG90aGVyIHNpZGUgdHlwaWNhbGx5IGhhcyBvbmx5IHR3byB3ZWVrcyB0byByZXNwb25kIHRvIGl0LiBTbyB0aGUgZmlyc3QgZmlsZXIgY2FuIHRha2UgYXMgbXVjaCB0aW1lIGFzIHRoZXkgbmVlZCB0byBwcmVwYXJlIChmaW5kIGEgbGF3eWVyLCBjb2xsZWN0IGRvY3VtZW50cywgbGluZSB1cCB3aXRuZXNzZXMpLCB3aGVyZWFzIHRoZSByZXNwb25kaW5nIHBhcnR5IGhhcyB0byBnZXQgYWxsIG9mIHRoaXMgZG9uZSBpbiB0d28gd2Vla3MuLiAKSGFkIHBlb3BsZSBhbGwgb3ZlciBNaXNzb3VyaSAoYW5kKSBhbGwgb3ZlciB0aGUgY291bnRyeSB3ZWlnaGluZyBpbiBvbiB0aGlzIGl0IGhlYXJ0d2FybWluZyB0byBrbm93IHRoYXQgdG9ucyBvZiBwZW9wbGUgdGhyb3VnaG91dCB0aGUgc3RhdGUgdW5kZXJzdGFuZCB0aGlzIGlzIG5vdCBhY2NlcHRhYmxlLCBOZXdtYW4gdG9sZCB0aGUgU3QuIExvdWlzIFBvc3QgRGlzcGF0Y2ggb24gTW9uZGF5LiAKV2hlbiBjb2xsZWN0aW5nIExhcyBWZWdhcyBjYXNpbm8gcG9rZXIgY2hpcHMsIGl0IGlzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3UgYXJlIGdldHRpbmcgYXV0aGVudGljIHBva2VyIGNoaXBzLiAKT24gVGh1cnNkYXksIHRoZSBPUEMgd2lsbCBhc2sgdGhlIEZsb3JpZGEgUHVibGljIFNlcnZpY2UgQ29tbWlzc2lvbiB0byBtYWtlIGhlZGdpbmcgbG9zc2VzIGEgY2VudHJhbCBpc3N1ZSBkdXJpbmcgdGhlaXIgYW5udWFsIGRlYmF0ZSBvdmVyIHV0aWxpdHkgZWxlY3RyaWMgcmF0ZXMuIEFuZCB0aGUgY291bnNlbCdzIG9mZmljZSwgd2hpY2ggcmVwcmVzZW50cyByYXRlcGF5ZXJzIGJlZm9yZSB0aGUgUFNDLCBzYWlkIGxvc3NlcyBzaG91bGQgYmUgbm90ZWQgaW4gdGhlIGFnZW5jeSdzIGFubnVhbCBvcmRlciB0aGF0IHNldHMgdGhvc2UgcmF0ZXMuIFRoYXQgd2F5LCBpdCBzYXlzLCBjb25zdW1lcnMgd2lsbCBzZWUgdGhlIHJpc2suCkhvcm1vbmFsIGFuZCBtZXRhYm9saWMuIApFdmVuIHdoZW4gaXQgY29tZXMgdG8gdGhlIGNvdXJ0IGhlYXJpbmdzIGJsYWNrIHBlb3BsZSBhcmUgOS8xMCBtb3JlIGxpa2VseSB0byBnZXQgYSBoaWdoZXIgc2VudGVuY2UgdGhhbiB0aGUgd2hpdGUgY291bnRlciBwYXJ0cyBjb21taXR0aW5nIHRoZSBzYW1lIGNyaW1lLiBGb3IgZXhhbXBsZSBzYXkgdHdvIG1lbiBhcmUgY2hhcmdlZCB3aXRoIGFnZ3JhdmF0ZWQgYXNzYXVsdC4gCldoYXQgT3VyIFNleCBTb3VuZHMgU2F5IEFib3V0IFVzCkkgZG9uIHRoaW5rIEkgZXZlciBiZWVuIHdpdGggYW55b25lIHdobyB3YW50ZWQgdG8gZmxhZ3JhbnRseSBraXNzIHdpdGggYSBidW5jaCBvZiBwZW9wbGUgd2F0Y2hpbmcsIHF1aXRlIHRoZSBvcHBvc2l0ZS4gCk5vdCBzYXlpbmcgZXh0cmF2YWdhbnQgd2VhbHRoIGlzIGdvb2QuIEJ1dCwgZnVuZGFtZW50YWxseSwgdGhlIGlkZWEgeW91IGp1c3QgY29udGludWUgb24gYXMgbm9ybWFsIGlzIGFzaW5pbmUuIApBbmF0b21pemV0aGF0IHUKSnVzdCBsb29raW5nIGZvciBzb21lIHRob3VnaHRzIHNpbmNlIEkndmUgb2J2aW91c2x5IGJlZW4gbG9zaW5nIGFzIG9mIGxhdGUuIEkgc3RhcnRlZCBwbGF5aW5nIHBva2VyIDEuNSB5ZWFycyBhZ28gd2l0aCBteSBmcmllbmRzIGF0IHNjaG9vbCBmb3Igcm91Z2hseSBhbiBob3VyIGEgZGF5IGR1cmluZyBicmVhay4gQXMgdGhlIHRpbWUgd2VudCBvbiBJIHN0YXJ0ZWQgd2F0Y2hpbmcgcG9rZXIgdmlkcyB0byBnZXQgdGhlIGZ1bmRhbWVudGFscyBhbmQgc29vbiBhZnRlciBJIHN0YXJ0ZWQgdG8gZG8gbXVjaCBiZXR0ZXIgYW5kIHByb2JhYmx5IHdvbiBvciBjYW1lIGluIHNlY29uZCBvdXIgbWluaSB0b3VybmFtZW50cyA4MCUgb2YgdGhlIHRpbWUuLiAKVGhlcmUgYXJlIG1pbGxpb25zIG9mIHdheXMgdGhlIGh1bWFuIGNvbmRpdGlvbiBjb3VsZCBiZSBpbXByb3ZlZCwgbW9zdCBhcmUgYWRtaXJhYmxlLCBmZXcgYXJlIHByb2ZpdGFibGUuIApDb250cmFyeSB0byBwb3B1bGFyIGJlbGllZiwgb3VyIGRpc2xpa2Ugb2Ygd29tZW4gYW5kIG1pbm9yaXRpZXMgaW4gb3VyIHZpZGVvIGdhbWVzIGlzIGdlbmVyYXRlZCBieSBvdXIgbG92ZSBmb3IgaGlzdG9yeSwgd2UgZG8gbm90IGhhdGUgdGhlbSAianVzdCBiZWNhdXNlIiBhcyBzb21lIG9mIHlvdSBtaWdodCBiZWxpZXZlLiAKSSBhbSBmZWVsaW5nIGEgYml0IHdlYXJ5LiBDbGVhcmx5IEknbSBub3QgYXMgeW91bmcgYXMgSSBvbmNlIHdhcy4gClRoZXkgZGlkbid0IGV2ZW4gbmVlZCBydW5hd2F5IGhpdCBzaG93cyBhYm91dCBmaXJlaG9zZSBkcmlua2luZy4gClRoZSBldmVudCBpcyBiZWluZyBvcmdhbmlzZWQgYnkgdGhlIEFjb21iIGJhc2VkIEd1eSBGcmFuY2lzIEJvbmUgQ2FuY2VyIFJlc2VhcmNoIEZ1bmQuClRoYXQgbGlrZSBhc2tpbmcgd2h5IHdlIGNhbiBoYXZlIGEgY29udmVyc2F0aW9uIGFib3V0IE1hcmxib3JvIExpZ2h0cyBjYXVzaW5nIGNhbmNlciB3aXRob3V0IHBlb3BsZSBtZW50aW9uaW5nIG90aGVyIHRvYmFjY28gcHJvZHVjdHMuIEl0IGFsbCB0aGUgc2FtZSBpc3N1ZS4gUGVvcGxlIGp1c3QgbmVlZCB0byBzdG9wIGN1dHRpbmcgc2hpdCBvZmYgb2YgYmFiaWVzLiBUaGUgcmVhc29uIHBlb3BsZSBicmluZyB1cCBjaXJjdW1jaXNpb24gc28gbXVjaCBpcyB0aGF0IHVubGlrZSBGR00gY2lyY3VtY2lzaW9uIGlzIHN0aWxsIHdpZGVseSBwcmFjdGljZWQgaW4gdGhlIFVTLiBJZiBjaXJjdW1jaXNpb24gd2FzbiBhIGh1Z2UgcHJvYmxlbSBpbiB0aGUgVVMsIHBlb3BsZSB3b3VsZG4gYnJpbmcgaXQgdXAgd2hlbiB5b3Ugc3RhcnQgdGFsa2luZyBhYm91dCBob3cgaG9ycmlibGUgaXQgaXMgdG8gY2hvcCBvZmYgcGFydHMgb2YgY2hpbGRyZW4gZ2VuaXRhbHMsIGJ1dCBhcyBsb25nIGl0IGNvbnRpbnVlcyB0byBoYXBwZW4gb24gYSBkYWlseSBiYXNpcyBpbiBBbWVyaWNhIHlvdSBjYW4gZXhwZWN0IEFtZXJpY2FucyBhcmUgZ29pbmcgdG8gYnJpbmcgaXQgdXAgd2hlbmV2ZXIgdGhlIHRvcGljIG9mIGN1dHRpbmcgaGVhbHRoeSBiYWJ5IHBhcnRzIGNvbWVzIHVwLiBJdCB3b3VsZCBiZSB3ZWlyZCBpZiBpdCB3YXNuIGJyb3VnaHQgdXAuClNpbmNlIHRoZXJlIGFyZSAzMiB0aWxlcyBpbiBwYWkgZ293LCB0aGVyZSBhcmUgMTYgcGFpcnMgb2YgdGlsZXMgaW4gdG90YWwuIApSZWNlbnQgeWVhcnMsIG51bWVyb3VzIG1lZGljYWwgc3R1ZGllcyBoYXZlIGNvbmZpcm1lZCB0aGUgZXNzZW50aWFsIHJvbGUgb2YgbWFuaXB1bGF0aW9uIGFuZCBtb3Rpb24gaW4gdGhlIG1haW50ZW5hbmNlIG9mIGRpc2MgaGVhbHRoLCBqb2ludCBsdWJyaWNhdGlvbiAoc3lub3ZpYWwgZmx1aWQpLCBhbmQgYXJ0aWN1bGFyIGNhcnRpbGFnZSBudXRyaXRpb24uIApTbywgdGhhdCBiYXNlIHBvaW50IGlzIGEgZ29vZCBzcG90IHRvIGh1bnQuLiAKSG93ZXZlciB5b3UgY2hvb3NlIHRvIGludGVycHJldCB0aGlzIHdheSBvZiB0aGlua2luZywgdGhlIGJlbmVmaXRzIG9mIGl0cyBhcHBsaWNhdGlvbiBhcmUgY2xlYXIgdG8gbWFueS5CeSBjbGVhcmluZyBlbmVyZ3kgcGF0aHdheXMgY2FsbGVkIGx1byAoIGFuZCByZW1vdmluZyBibG9ja2FnZXMgdGhhdCBjYXVzZSBwYWluIGFuZCBkaXNlYXNlLCBxaSBjYW4gYmUgYmFsYW5jZWQuIENoaW5lc2UgVHVpbmEgKCBtYXNzYWdlIHByYWN0aXRpb25lcnMgaWRlbnRpZnkgcGF0aHdheXMgd2l0aCBsaW1pdGVkIGZsb3cgYW5kIHVzZSBoYW5kIHByZXNzdXJlIHRvIHJlc3RvcmUgaGFybW9ueSBhbmQgZW5lcmd5IGNpcmN1bGF0aW9uLlRoaXMgc2VtaW5hciBhaW1zIHRvIGludHJvZHVjZSB0aGUgdGhlcmFwZXV0aWMgYmVuZWZpdHMgb2YgVHVpbmEgbWFzc2FnZSBhbmQgZXhwbGFpbiBob3cgaXQgaGVscHMgYmFsYW5jZSBvdXIgaGVhbHRoIGhvbGlzdGljYWxseS4gRnJvbSAyMDE0IDIwMTYsIGhlIHdvcmtlZCBhcyBhIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUgKFRDTSkgZG9jdG9yIGFuZCB0YXVnaHQgcmVndWxhciBjb3Vyc2VzIGF0IExvbmRvbiBTb3V0aCBCYW5rIFVuaXZlcnNpdHkgQ2xpbmljLCB3aGVyZSBDaGluZXNlIE1lZGljaW5lIGlzIGJlaW5nIHRhdWdodCBhcyBhIGRlZ3JlZSBwcm9ncmFtbWUsIGFjY3JlZGl0ZWQgYnkgdGhlIEJyaXRpc2ggQWN1cHVuY3R1cmUgQWNjcmVkaXRhdGlvbiBCb2FyZC5NciBDaGFvIFlhbiBpcyBhIHF1YWxpZmllZCBsaWNlbnNlZCBUQ00gcHJhY3RpdGlvbmVyIHdpdGggc2lnbmlmaWNhbnQgZXhwZXJpZW5jZSBpbiB0cmVhdGluZyBiYWNrIHBhaW4sIGluc29tbmlhIGFuZCBzdHJva2Ugc2VxdWVsLiAKQ1BoYXJvYWggdQpQdXQgdGhlIHdhc2hpbmcgYmFzaW4gcmlnaHQgbmV4dCB0byBpdC4KMTNCb29rcywgTGl0ZXJhdHVyZSwgYW5kIFdyaXRpbmcKSGF2ZSBhbGwgZHJpbGwgbWVtYmVycyBzdGFydCB0YXBwaW5nIHRoZWlyIHJpZmxlcyBvbiB0aGUgZ3JvdW5kLCBhcyB0aGUgMiBzcGlubmVycyBnZXQgdXAgYW5kIHNwaW4gbGVmdHMgd2hpbGUgbWFyY2hpbmcgdG93YXJkcyBlYWNoIG90aGVyLiBVcCB0byB5b3UgdG8gY2hvb3NlIHdoYXQgdG8gZG8gZnJvbSB0aGVyZS4uIApUaGlzIGZvcm0gb2YgY2hlYXRpbmcgaXMgdmVyeSBoYXJkIGZvciB0aGUgaG91c2UgdG8gZGV0ZWN0LCBhbmQgaGFyZGVyIHN0aWxsIGZvciBpbmRpdmlkdWFsIHBsYXllcnMuCk9uZSBkYXksIGhlIHN0YXJ0ZWQgcGFja2luZy4gTm90IGluIGFueSBzZW5zaWJsZSBvcmRlciwgYnV0IHN0dWZmIGxpa2UgcGxhdGVzLCBzb2Nrcywgc29tZSBib29rcywgYSBiaXQgb2YgdHJhc2guIFlvdSBrbm93LCB0aGUgZXNzZW50aWFscy4gV2UgdHJpZWQgdG8gZXhwbGFpbiB0byBoaW0gdGhhdCB3ZSB1bmRlcnN0YW5kLCBidXQgdGhhdCBhIG1vdmUgaXNuIHZpYWJsZSBpbiBzbyBtYW55IHdheXMuIEhlIHdvdWxkbiBoYXZlIGFueSBvZiBpdC4gVGhlbiBvbmUgZGF5LCBqdXN0IGFzIHN1ZGRlbmx5LCBoZSBzdGFydGVkIHVucGFja2luZy4gSGUgaGFkIG1vdmVkLCBpbiBoaXMgbWluZC4gSGUgd291bGQgc2l0IG9uIHRoZWlyIGJhbGNvbnkgYW5kIGxvb2sgb3V0IG92ZXIgb3VyIHRpbnkgY2l0eS90b3duLCBidXQgd2hhdCBoZSB3YXMgbG9va2luZyBhdCB3YXMgdGhlIHJpdmVyIGFuZCB2aWxsYWdlIHdoZXJlIGhlIGdyZXcgdXAuCldoZW4gYSBwZXJzb24gYXNrcyB0aGUgVGhlb3Rva29zLCBvciBhbnkgb3RoZXIgc2FpbnQsIHRvIHByYXkgZm9yIHRoZW0sIGl0IGlzIGp1c3QgbGlrZSB3aGVuIHdlIGFzayBmb3IgYW55b25lIGVsc2UgdG8gcHJheSBmb3IgdXMuIApGaXJzdCBub3RlOiBBIHBsYW50IGJhc2VkIGRpZXQgSVMgTk9UIHZlZ2FuaXNtLiAKWW91ciB2aWRlb3MgdGVuZCB0byBmb2N1cyBvbiAiaG93IHRvIHBsYXkgcG9rZXIgY29ycmVjdGx5IiwgdXN1YWxseSBtZWFuaW5nIHRoZSBvcHRpbWFsIGJhbGFuY2Ugb2YgYmx1ZmZzIGFuZCB2YWx1ZSBiZXRzIHNvIHlvdXIgb3Bwb25lbnQgY2FuIGV4cGxvaXQgeW91LiBBIGxvdCBvZiB0aGUgcmVhbGx5IGludGVyZXN0aW5nIHNoaXQgeW91IHNhaWQgaXMgaW4gd2hpY2ggaGFuZHMgdG8gdXNlIGluIHdoaWNoIHJhbmdlcyBhbmQgZ2V0dGluZyBpbnRvIHRoZSBkZXRhaWxzIG9mIHdoYXQgdGhvc2Ugb3B0aW1hbCByYW5nZXMgbG9vayBsaWtlLiAKSSB3b3VsZG4ndCBwaWNrIHVwIHRiaC4gCkZXSVcgSSBkb24gaG93IGRvZXMgc2lua2luZyBtb3JlIGVmZm9ydCBpbnRvIG91ciBCIGFuZCBDIHRlYW1zIGJlbmVmaXQgbWU/IEJ1dCBpdCB3b3VsZCBiZW5lZml0IHRoZSBsZWFndWUgc28gbXVjaCFCdXQgeWVhaCwgSSB3b3VsZCByYXRoZXIgYmUgdG9sZCBoYXJkIHRydXRocyAoYXMgbG9uZyBhcyB0aGV5IGxpa2UsIHVzZWZ1bCBqdXN0IHNheWluZyBtZWFuIHNoaXQgdG8gc2F5IGl0IGlzIG5vdCBhcHByZWNpYXRlZCkgdGhhbiBhbnl0aGluZyBlbHNlLkkgYWxzbyBhIHN1cGVyIG1lZWsgYW5kIG5vbiBjb25mcm9udGF0aW9uYWwgaHVtYW4gdGhhdCB3aHkgSSBtYWRlIGEgdGhyb3dhd2F5IGFjY291bnQgdG8gYXNrIGZvciBhZHZpY2Ugb24gcmVkZGl0IGluc3RlYWQgb2YgdGFsa2luZyB0byBteSBvd24gdGVhbW1hdGVzLiAKT25jZSB5b3UgaGF2ZSBjb21wbGV0ZWQgYSBwcm9ncmFtLCB5b3Ugd2lsbCByZWNlaXZlIGEgY2VydGlmaWNhdGUgb2YgY29tcGxldGlvbiBmcm9tIEF1YnVybiBVbml2ZXJzaXR5IG9yIGdvIG9uIHRvIHNlZWsgaW5kdXN0cnkgY2VydGlmaWNhdGlvbi4gCkNvbW11bmljYXRpb24gaXMgdGhlIGZvdW5kYXRpb24gb2YgYSBnb29kIGNsaWVudC92ZXRlcmluYXJpYW4gcmVsYXRpb25zaGlwLiAKS2VsbGVyIEF0IExhcmdlOiBXaGF0IElzIE1hc3NhY2h1c2V0dHMgTG9va2luZyBGb3IgSW4gQSBQcmVzaWRlbnRpYWwgTm9taW5lZT9Kb24gS2VsbGVyIGlzIGpvaW5lZCBieSBNYXNzYWNodXNldHRzIERlbW9jcmF0aWMgUGFydHkgY2hhaXJtYW4gR3VzIEJpY2tmb3JkLgpJdCdzIG9ubHkgYWJvdXQgYW4gaG91ciBmcm9tIE1vbnRyZWFsLCBidXQgQ2FuYWRhJ3Mgb2xkZXN0IGRlc3RpbmF0aW9uIHNwYSBmZWVscyBibGVzc2VkbHkgcmVtb3RlLCB0aGFua3MgdG8gaXRzIHNldHRpbmc6IDMxNSBhY3JlcyBvZiBwb25kcywgd2lsZGZsb3dlciBtZWFkb3dzLCBhbmQgZ3JvdmVzIG9mIGNlZGFyLCBwaW5lLCBhbmQgYmlyY2ggdHJlZXMuIFRoZSA0MyByb29tcyBhcmUgZGl2aWRlZCBhbW9uZyBzZXZlbiBidWlsZGluZ3MgYWNyb3NzIHRoZSBwcm9wZXJ0eSwgZnJvbSBhIGJhcmUgYm9uZXMsIHNvbGFyIHBvd2VyZWQgd29vZCBjYWJpbiB0aGF0IHNsZWVwcyB0d28gdG8gdGhlIHNwYSdzIG9yaWdpbmFsIGVpZ2h0IHJvb20gRnJlbmNoIHN0eWxlIHN0b25lIGhvdXNlLCBlcXVpcHBlZCB3aXRoIGEgZmlyZXBsYWNlIGFuZCBsb3VuZ2UuIFNvbWUgdGhlcmFwaXN0cyBoYXZlIGJlZW4gd2l0aCB0aGUgcmV0cmVhdCBmb3IgbW9yZSB0aGFuIDE1IHllYXJzIHVudXN1YWwgaW4gdGhlIHNwYSB3b3JsZCBhbmQgdGhlIHN0YWZmJ3MgY2VydGlmaWVkIGtpbmVzaW9sb2dpc3RzIHdpbGwgaGVscCB5b3UgbWFrZSB0aGUgbW9zdCBvZiB0aGUgcHJvcGVydHkncyBuaW5lIHBsdXMgbWlsZXMgb2YgaGlraW5nIHRyYWlscy4uIApGdWNrIHRoaXMgZ3V5LlNtb2tlZF9QZWFzYW50VGVhbSAyMDkgICBSZWFsIE5pbmphIFNoaXQhIDU3IHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvV2hlbiBhIGZpZ2h0ZXIgbG9zZXMgYWZ0ZXIgbW92aW5nIHVwLCBpdCBzZWVtcyBsaWtlIG5vIG9uZSBldmVyIGNvbnNpZGVycyAibWF5YmUgaGUgZ290IG91dCBmb3VnaHQiLCBvbmx5IHRoZSBzaXplIG1hdHRlcnMuIApFRElUOiBJIGFtIHRoZSBwZXJzb24gdGhhdCBib3VnaHQgYW4gb2xkIGhvdXNlIHRoYXQgYmFzaWNhbGx5IHN0YXJ0ZWQgYmVjYXVzZSBvZiB0aGlzLiBUaGUgb2xkIG93bmVycyByZW50ZWQgaXQgb3V0IGFuZCB0aGlzIGhhcHBlbmVkLiBUaGUgY2l0eSBjYW1lIGFuZCBpbnNwZWN0ZWQgaXQgYnV0IHBpY2tlZCBvbiBFVkVSWSBPVEhFUiB0aW55IHRoaW5nIHdyb25nIHdpdGggdGhlIGhvdXNlLiBJIG1lYW4gRVZFUllUSElORy4gdGhlIGxhbmRsb3JkIHRocmV3IGluIHRoZSB0b3dlbCBzb2xkIHRoZSBob3VzZSBmb3IgcGVubmllcyBhbmQgbm93IHdlIGZpeGluZyBpdCB1cCB0byBjYWxsIGhvbWUuCiJHZXR0aW5nIGEgY3V0IiBkb2VzbiBiZWdpbiB0byBkZXNjcmliZSBob3cgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGxhYm9yLCBjYXBpdGFsLCBhbmQgY2FwaXRhbCBvd25lcnNoaXAgYWN0dWFsbHkgZnVuY3Rpb25zLiBDYXBpdGFsaXN0cyBkb24gImdldCBhIGN1dCIgb2YgdGhlIHZhbHVlIHByb2R1Y2VkIGJ5IHRoZWlyIGVxdWlwbWVudC4gSWYgdGhhdCB3ZXJlIHRoZSBjYXNlLCB0aGV5IHdvdWxkIHN0b3AgImdldHRpbmcgYSBjdXQiIG9uY2UgdGhlIHZhbHVlIG9mIHRoZSBlcXVpcG1lbnQgaGFkIGJlZW4gcmVjb21wZW5zZWQuIAooVGhpcyByb3VnaGx5IGR1cGxpY2F0ZXMgdGhlIGVmZmVjdCBvZiB0aGUgTWFzdGVycyBhbmQgSm9obnNvbiB0ZWNobmlxdWUsIG9ubHkgaW50ZXJuYWxseS4gQnkgdGhlIHdheSwgYSBtaW5vcml0eSBzY2hvb2wgb2YgdGhvdWdodCBzdWdnZXN0cyB0aGF0IHNvbWUgbWVuIHByZWZlciB0byByZWxheCB0aGUgUEMgbXVzY2xlIGF0IGhpcyBwb2ludC4pLiAKVGVhcnMgc3RyZWFtaW5nIGRvd24gbXkgZmFjZS4gCkkgd291bGQgYXJ0aWN1bGF0ZSBpdCBhIGJpdCBkaWZmZXJlbnRseS4gQ2hpbmEgaXMgYWxyZWFkeSBhIHJlZ2lvbmFsIGhlZ2Vtb24gaW4gdGhlIHNlbnNlIG9mIGJlaW5nIHRoZSBzaW5nbGUgbW9zdCBwb3dlcmZ1bCBjb3VudHJ5IGluIGl0cyByZWdpb24sIG9mIEVhc3QgQXNpYW4uIEhvd2V2ZXIsIHRoZSBVUyBpcyBtb3JlIHRoYW4ganVzdCB0aGF0LCBtb3JlIG9mIGdsb2JhbCBoZWdlbW9uLCB0aGUgbGVhZGVyIG9mIHRoZSBmcmVlIHdvcmxkLCBpbiBubyBzbWFsbCBwYXJ0IGR1ZSB0byBpdCBtb3JlIHByb2dyZXNzaXZlIGFuZCBzdXN0YWluYWJsZSByZWxhdGlvbnNoaXBzIHdpdGggc21hbGxlciBhbmQgbGVzcyBwb3dlcmZ1bCBwYXJ0bmVycy4gCkRvbiBsZXQgeW91ciBvcHBvbmVudCBkZXZlbG9wIGxvdHMgb2YgcGllY2VzIHF1aWNrZXIgdGhhbiB5b3UhLiAKQW5kIGV2ZW4gaWYgdGhhdCBoYXBwZW5zIGl0IGlzIGxpa2VseSB0aGF0IHdlIHdvdWxkIHN0aWxsIGJlIG9uZSBvZiB0aGUgd29ybGQgbW9zdCBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgY2l0aWVzLCBhcyB3ZSBiZSB2ZXJ5IHZlcnkgbG93IG9uIHRoZSBlbmVyZ3kgZXhwZW5kZWQgcGVyIHBlcnNvbiBhbmQgdmVyeSB2ZXJ5IHZlcnkgbG93IG9uIHRoZSBjb25jcmV0ZSBwZXIgcGVyc29uLiBEZXNwaXRlIGxpdmluZyBpbiBhIGNvbmNyZXRlIGNpdHksIHdlIEkgOTkgc3VyZSB1c2UgbGVzcyB0aGFuIG1vc3Qgb3RoZXIgY2l0aWVzLCBiZWNhdXNlIHJvYWRzIGFuZCBwYXJraW5nIGFyZSBraWxsZXJzLCBhbmQgd2UgZG9uIGhhdmUgbXVjaCBvZiBlaXRoZXIgYmVjYXVzZSB3ZSBsaXZlIHNvIGNsb3NlIHRvZ2V0aGVyLgpOb2JvZHkgc2FpZCB0byBpZ25vcmUgYWxsIG90aGVyIGFzcGVjdHMsIGJ1dCByZXNlYXJjaCBhbmQgZXZpZGVuY2UgaGFzIHNob3duIHRoYXQgZWNvbm9taWMgaW5qdXN0aWNlIGlzIGF0IHRoZSByb290IG9mIHRoZSBwcm9ibGVtLiBGb2N1c2luZyBoZWF2aWx5IG9uIHRoYXQgd2lsbCByZXNvbHZlIG11Y2gsIGlmIG5vdCBtb3N0LCBvZiB0aGUgb3RoZXIgaXNzdWVzLiBUcmVhdCB0aGUgcm9vdCBjYXVzZSBvZiB0aGUgcHJvYmxlbSwgbm90IGp1c3QgdGhlIHN5bXB0b21zLgpQaXhlbDkxNyAgMTMgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkl0IGp1c3QgYSBwYWluIGluIHRoZSBuZWNrLiAKQWxsIHRoZSB3b21lbiBiZWdnZWQgbXkgdW5jbGVzIHRvIHdhc2ggdGhlIGRpc2hlcyB3aGVuIHRoZXkgYnJpbmcgb3ZlciBkaW5uZXIuIFRoZWlyIHJlc3BvbnNlPyAiV2h5PyBJdCdzIGhlciBob3VzZSBhbmQgc2hlIHdhbnRzIHRvLiBJJ20gc3BlbmRpbmcgdGltZSB3aXRoIGRhZC4gSSdtIG5vdCBnb2luZyB0byBpbnRlcnJ1cHQgdGhhdC4iCkkga25ldyB0aGlzIHdhcyB0aGUgY3Jhenkgc3RhdGljIHdvbWFuLiBUaGUgbWFuIGxvb2tlZCBraW5kIG9mIG9mZmVuZGVkIGFuZCBlbmRlZCB1cCB3YWxraW5nIHRvIHRoZSBvdGhlciBlbmQgb2YgdGhlIGNhcnJpYWdlLiBBIGZldyBzdG9wcyBsYXRlciBhIHdvbWFuIGlzIHN0YW5kaW5nIG5leHQgdG8gY3Jhenkgc3RhdGljIHdvbWFuIGFuZCB0aGUgc2FtZSB0aGluZyBoYXBwZW5zLCBzaGUgYXNrcyB0aGUgd29tYW4gaWYgc2hlIGNhbiBhY3R1YWxseSBzdGFuZCBuZXh0IHRvIGhlciBpbnN0ZWFkIG9mIGJlaGluZCBoZXIuIApDb25zaWRlciBwaWNraW5nIG9uZSBvZiB0aGUgbGVhc3QgaGFybWxlc3MsIHRvcGljYWwsIG5hdHVyYWwgaG9tZSB0cmVhdG1lbnQgcmVtZWRpZXMgKHRoZSBraW5kIHlvdSB3aGlwIHVwIGF0IGhvbWUpLCBhbmQgdHJ5IGl0IG9uIHlvdXIgc2NhbHAgZm9yIGF0IGxlYXN0IDMwIGRheXMgYW5kIHNlZSB3aGF0IGhhcHBlbnMuIApWaWtpbmdzIGJlZ2luIDIwMTggYXMgY2xhc3Mgb2YgbGVhZ3VlCkFuZCB3aGVudGhleSBhcmUsLiBJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiAKU2lyVG9hc3R5bXVmZmluICA2IHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnbwpTZXMgY29yZGVzIHRhaWVudCBmYWl0ZSBkZSB0cmlwZXMgZGUgY2hhdCBldCBDaGFnYWxsIGEgcmVwcnNlbnQsIHNpIGplIG5lIG0nYWJ1c2UsIGxlIGp1aWYgZXJyYW50IG11bmkgZGUgY2V0IGluc3RydW1lbnQgcGFzIGNhdGhvbGlxdWUgZHUgdG91dCAhQ2UgcGF1dnJlIFJvbGxhbmQgYXVyYWl0IGR1IGNvbnN1bHRlciB1biBhdXRldXIgZmFpc2FudCBwcm9mZXNzaW9uIGRlICJyYXRpZXIiIHZvaXJlIHRscGhvbmVyICB1biBjZXJ0YWluICJKZWFuIERhbmllbCIgcXVpIGx1aSBhdXJhaXQgdml0IGRlIHNlIGpldGVyIGRhbnMgbGEgZ3VldWxlIGR1IGxvdXAuIENlbHVpIGwgZG9pdCBhdm9pciBkZXMgYW5jdHJlcyBqdWlmcyBkYW5zIHNvbiBhcmJyZSwgY2UgcXVpIHZhdXQgaW5maW5pbWVudCBtaWV1eCBxdWUgZGVzIHNpbmdlcyAoY2FyIGxlcyB2cmFpcyBqdWlmcyBvbnQgbGUgc2VucyBkZSBsYSBkcmlzaW8sIHNvbiB2cml0YWJsZSBibGF6ZSBmaWd1cmFudCBkYW5zIHVuIHJwZXJ0b2lyZSBkZSBub21zIGNlbnMgY29ycmVzcG9uZHJlICBkZXMgbGlnbmVzIGlzcmFsaXRlcy4gCkluIHRoZSBzb2FwIG9wZXJhIHRoYXQgaXMgTGVCcmV0b24gRmxhdHMsIG1heWJlIGl0IHdpbGwgd29yazogYSBmaW5hbCBob3VyIGF0dGVtcHQgYXQgaGlnaCBsZXZlbCwgZXhwZXJ0IG1lZGlhdGlvbiBiZXR3ZWVuIHBhcnRpZXMgdGhhdCBmaXJzdCBzcGFycmVkLCB0aGVuIGR1ZyBpbnRvIHRyZW5jaGVzIGFuZCBsb2JiZWQgZXhwbG9zaXZlIGxhd3N1aXRzLCB3aXRoIGFuIE5ITCBkcmVhbSBpbiBwZXJpbCBhbmQgYSAkNCBiaWxsaW9uIHBsYW4gc2xpZGluZyBvZmYgdGhlIHRhYmxlLgpPbiB0aGUgRGVhbGVyIFBva2VyIENhcmQgUHJvdGVjdG9yIGNhbiBoZWxwIHRoZW0gYSBsb3QgdG8gaW1wcm92ZSBvbiBwZXJzb25hbCBsZXZlbCB0aGF0IGhhcyBhY3R1YWxseSBpbmNyZWFzZWQgdGhlIHNhbGVzIG9mIHRoZSBwb2tlciBtZXJjaGFudHMgb3V0IHRoZXJlLiBUaGUgcG9rZXIgZmFucyBhcmUgYWxzbyBlbnRpY2luZyB0aGUgcG9rZXIgbWVyY2hhbnRzIHRvIHNlbGwgdGhlc2UgcHJvZHVjdHMgYmV5b25kIHRoZWlyIGxvY2FsIG1hcmtldC4gVGhleSBhcmUgdHJ5aW5nIHRvIHB1cmNoYXNlIGVhY2ggYW5kIGV2ZXJ5IHBva2VyIHByb2R1Y3RzIHJpZ2h0IGZyb20gdGhlIG1hcmtldC4gCjMuIE5vIHNwYW1taW5nLiBZb3UgbXVzdCBsZWF2ZSA3MiBob3VycyBiZXR3ZWVuIGV2ZXJ5IHBvc3QuIFRoaXMgaW5jbHVkZXMgYnV0IGlzIG5vdCBsaW1pdGVkIHRvLCBwb3N0aW5nIHlvdXIgY29tbXVuaXR5IGV2ZXJ5d2hlcmUgYW5kIGNvbnN0YW50bHkgbWFraW5nIHJlY3J1aXRtZW50IHBvc3RzIGV2ZXJ5IGhvdXIgb2YgdGhlIGRheS4KVGhlIE5GTCBzYXlzIGl0IGlzIGF3YXJlIG9mIHRoZSBhcnJhbmdlbWVudCBhbmQgaGFzIHRha2VuIG5vIGFjdGlvbiwgZGVzcGl0ZSBxdWVzdGlvbnMgZnJvbSBzb21lIHNwZWNpYWxpc3RzIGluIHNwb3J0cyBsYXcgYW5kIGVjb25vbWljcyBhYm91dCB3aGV0aGVyIHRlYW1zIHNob3VsZCBwYXkgZm9yIHNlcnZpY2VzIGJ5IGZvciBwcm9maXQgY29tcGFuaWVzIG93bmVkIGJ5IHRoZWlyIGFjdGl2ZSBwbGF5ZXJzIGFuZCB3aGV0aGVyIHRoZSByZWxhdGlvbnNoaXAgcHJvdmlkZXMgdmFsdWUgdG8gQnJhZHkgdGhhdCBzaG91bGQgYmUgY291bnRlZCBhZ2FpbnN0IHRoZSBjbHViIHNhbGFyeSBjYXAuCldlIHdpbGwgYmUgdGhlcmUgZm9yIHR3byB3ZWVrcyBhbmQgaGF2ZSBhIGxvdCBwbGFubmVkLiAKQ29uc2lkZXIgcm90YXRpbmcgdG91cm5hbWVudHMsIHdoZXJlIHRoZSBsb3NlcnMgZnJvbSB0aGUgZmlyc3QgdG91cm5hbWVudCAoYXMgd2VsbCBhcyBsYXRlIGFycml2YWxzKSBjYW4gaW1tZWRpYXRlbHkgc3RhcnQgYW5vdGhlciB0b3VybmFtZW50LiBUaGlzIHByZXZlbnRzIGFuIGVhcmx5IGtub2Nrb3V0IGZyb20gcnVpbmluZyBzb21lYm9keSdzIG5pZ2h0LgpIZXJtYW4gd29ya2VkIGZvciBPdGlzIFByZXNzdXJlIENvbnRyb2wgaW4gSG9iYnMsIE5NLCBPaWwgQ2l0eSwgTEEgYW5kIFZpdmlhbiwgTEEuIApUaGFuayB5b3UgdmVyeSBtdWNoLkFuZCB3aGF0IHdhcyBpdCBhYm91dCBhbGwgdGhvc2UgZnVsbCBjb3Vyc2UgeWVsbG93cyBmb3IgZXZlcnkgbGl0dGxlIGluY2lkZW50IHNvbWV3aGVyZSBvbiB0aGUgdHJhY2s/IFNpbmNlIHdoZW4gZG8gd2UgaGF2ZSBGQ1kgZm9yIGEgc2luZ2xlIGNhciBzaXR0aW5nIGluIHRoZSBncmF2ZWwgc29tZXdoZXJlPy4gCjJoIHR1cm5lZC4gCihQaG90bzogUGF0cmljayBKb2huc3RvbiwgUE5HKWhlbHBlZCB0aGF0IHdlIHN0dWNrIGFyb3VuZC4gV2Ugc3RpbGwgbGl2aW5nIGhlcmUgYW5kIHdlIGNhbiBjb21lIGRvd24gYXMgbXVjaCBhcyB3ZSBjYW4gYW5kIHdoZW5ldmVyIHdlIHdhbnQgdG8uIFdlIHNlZSB0aGUgZ3V5cyBhIGxvdCBhbmQgdGFsayB0byB0aGUgY29hY2hlcyBhbmQgdGhlIHN0YWZmOyBpdCBzdGlsbCBmZWVscyBsaWtlIHdlIHN0aWxsIGhhdmUgdGhhdCBwYXJ0IG9mIHRoZSBsaWZlLCB3aGljaCBpcyB3aGF0IEkgdGhpbmsgbW9zdCBndXlzIG1pc3Mgd2hlbiB0aGV5IGRvbmUuIApLbmlyc2NoZW4gdW5kIEtuYWNrZW4gYmVpbSBEcmVoZW4gZGVzIEtvcGZlcwpMYXJnZXIgb3IgYXRobGV0aWMgbWVuIHdobyBwcmVmZXIgU3BvcnRzIG1hc3NhZ2Ugd29yayBhbmQgdGhvc2Ugb2YgeW91IHdobyBwcmVmZXIgYSBTZW5zdWFsIEVyb3RpYyB0b3VjaCwgSSBoYXZlIHlvdSBjb3ZlcmVkLiBQcml2YWN5IGFuZCByZWxheGluZyBtdXNpYyBwcm92aWRlZC4gCkkgcmVmbGVjdCBvbiB3aGF0IEkgZGlkIHdyb25nIHRoYXQgd291bGQgd29uIG1lIHRoZSBnYW1lLiBJdCBpcyBhIGNvbW1vbiB0cmFpdCBmb3IgcGVvcGxlIHRvIGJsYW1lIGV2ZXJ5dGhpbmcgYnV0IHRoZW1zZWx2ZXMgd2hlbiB0aGluZ3MgZ28gd3JvbmcuLiAKV2UgZG8gbm90IHRyYWNrIG9yIHN0b3JlIGEgcmVjb3JkIG9mIHRob3NlIGNvbW1lbnRzIG9yIGFjdGlvbnMuU29jaWFsIE1lZGlhIEZlYXR1cmVzIGFuZCBXaWRnZXRzOiBPdXIgV2ViIFNpdGVzIGluY2x1ZGVzIFNvY2lhbCBNZWRpYSBGZWF0dXJlcywgc3VjaCBhcyB0aGUgRmFjZWJvb2sgTGlrZSBidXR0b24sIGFuZCBXaWRnZXRzLCBzdWNoIGFzIHRoZSBTaGFyZSBUaGlzIGJ1dHRvbiBvciBpbnRlcmFjdGl2ZSBtaW5pIHByb2dyYW1zIHRoYXQgcnVuIG9uIG91ciBzaXRlLiBUaGVzZSBGZWF0dXJlcyBtYXkgY29sbGVjdCB5b3VyIElQIGFkZHJlc3MsIHdoaWNoIHBhZ2UgeW91IGFyZSB2aXNpdGluZyBvbiBvdXIgc2l0ZSwgYW5kIG1heSBzZXQgYSBjb29raWUgdG8gZW5hYmxlIHRoZSBGZWF0dXJlIHRvIGZ1bmN0aW9uIHByb3Blcmx5LiAKTGV0IG1lIHN0YXJ0IG91dCBieSBzYXlpbmcgSSBoYXZlIG5vdGhpbmcgYWdhaW5zdCBtZWx0cywgSSBqdXN0IGhhdGUgdGhlaXIgYXNzb2NpYXRpb24gd2l0aCBzYW5kd2ljaGVzIHRoYXQgYXJlIG5vdCBncmlsbGVkIGNoZWVzZXMuIEFkZGluZyBjaGVlc2UgdG8geW91ciB0dW5hIHNhbmR3aWNoPyBJdCBjYWxsZWQgYSBUdW5hIG1lbHQuIFRvdGFsbHkgZGlmZmVyZW50LiBXYW50IHRvIGFkZCBiYWNvbiBhbmQgc29tZSBwcmV0ZW50aW91cyBicmVhZCBjcnVtYnMgd2l0aCBzcGluYWNoPyBJIGRvbiBrbm93IHdoYXQgdGhlIGhlbGwgeW91IGNhbGwgdGhhdCBidXQgaXQgbm90IGEgZ3JpbGxlZCBjaGVlc2UuIApTaGUgd2FzIGxpa2UgMTUgb3Igc29tZXRoaW5nIGF0IHRoZSB0aW1lLiAKR29pbmcgdG8gbHVuY2ggaXMgbm90IGEgZGF0ZS4gVHVybmluZyB1cCBhbmQgZmxpcnRpbmcgYXQgbHVuY2ggaXMgbm90IGEgZGF0ZSwgYW5kIGlzIGNyZWVweS4gWW91IG1ha2UgeW91ciBpbnRlbnRpb25zIGNsZWFyIGZyb20gdGhlIHN0YXJ0IGFuZCBiZSBob25lc3QgYWJvdXQgaXQuIFNlZSBhYm92ZSBhYm91dCBhc2tpbmcgaGVyIG9uIGEgZGF0ZS4KTGlrZSBldmVyeSBvdGhlciBnYW1lIFBva2VyIHRvdXJuYW1lbnRzIHRvbyBoYXZlIGNlcnRhaW4gc3BlY2lmaWVkIHJ1bGVzIGFib3V0IHRoZSBzdHJ1Y3R1cmluZyBvZiBwcml6ZXMsIGZlZXMgYW5kIGJldHRpbmcuIFRob3NlIHdobyB3aW4gaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gdGFrZSBtaWxsaW9ucyBiYWNrIHRvIHRoZWlyIGhvbWVzLiAKU2hvb3RpbmcgY29tbXVuaXR5IG1vdXJucyB0aGUgbG9zcyBvZiBhIHNoaW5pbmcgc3RhciwiIHRoZSBidXNpbmVzcyBzYWlkIG9uIGl0cyBGYWNlYm9vayBwYWdlIGFsb25nc2lkZSBhIHBob3RvZ3JhcGggb2YgQ2hvLiAKT24gZm9yZWlnbiBhaXJsaW5lcywgdGhlIGdvb2QgbGlmZSBpcyBldmVuIGJldHRlci4KQSBkZW1vbnN0cmF0aXZlIGh5cG90aGV0aWNhbDogTXkgY29sbGVhZ3VlIGF0IHdvcmsgaXMgYXJyZXN0ZWQgZm9yIGFzc2F1bHQuIFRoZSBjb21wbGFpbmluZyB3aXRuZXNzIChnZW5lcmFsbHkgdGhlIG9ubHkgbmVjZXNzYXJ5IHdpdG5lc3MgaW4gYW4gYXNzYXVsdCB0cmlhbCwgb3RoZXIgdGhhbiByZXNwb25kaW5nIGxhdyBlbmZvcmNlbWVudCkgaXMgc2V0IHRvIHRlc3RpZnkgdG9tb3Jyb3cuIEl0IGp1c3Qgc28gaGFwcGVucyB0aGF0IEkgYW0gYXdhcmUgdGhhdCB0aGUgY29tcGxhaW5pbmcgd2l0bmVzcyBoYWQgYmVlbiBjaGVhdGluZyBvbiBoZXIgaHVzYmFuZCB3aXRoIG15IGNvbGxlYWd1ZS4gSSBzZW5kIGhlciBhIG1lc3NhZ2UgdGhhdCBzYXlzICJJIHdvbmRlciBpZiB5b3VyIGh1c2JhbmQga25vd3MgeW91IHdlcmUgY2hlYXRpbmcgb24gaGltISBIZSBsZWFybiBzbyBtdWNoIHRvbW9ycm93ISIgUmVzdWx0OiBJIGdvIHRvIGphaWwuIE9yIGF0IHRoZSB2ZXJ5IGxlYXN0IGdldCBjb252aWN0ZWQgYW5kIGdldCBzZW50ZW5jZWQgdG8gcHJvYmF0aW9uIChJIGEgd2hpdGUgYXR0b3JuZXkgd2l0aCBubyBwcmV2aW91cyByZWNvcmQsIHNvIHRoaXMgaXMgbW9yZSBsaWtlbHkpLgpNYXR0aGlhcyBpcyBleHBlY3RlZCB0byBhZGQgZGVwdGggdG8gdGhlIEF2YWxhbmNoZSBpbiB0aGVpciBwbGF5b2ZmIHB1c2gsIFNtaXRoIHdpbGwgcmVwb3J0IHRvIHRoZSBBSEwgTWFybGllcyB3aGVyZSBMYW1vcmllbGxvIGV4cGVjdHMgdGhlIDIyIHllYXIgb2xkIHdpbGwgYWRkIGRlcHRoIGF0IGNlbnRyZS4uIApTcGFtbWFjaGluZSB1CllvdSB3YW50IHRvIGZvcmNlIHNlY3VsYXJpc20gb24gcGVvcGxlIGp1c3QgbGlrZSBNQiBjbGFpbXMgdG8gd2lzaCB0byBlbmZvcmNlIElzbGFtaWMgbGF3IG9uIHBlb3BsZS4gWW91IGJvdGggaGF2ZSBhIGNlcnRhaW4gd29ybGR2aWV3IHlvdSB0aGluayBwZW9wbGUgc2hvdWxkIGJlIGNvbXBlbGxlZCB0byBmb2xsb3csIHlvdSBqdXN0IGRpZmZlcmVudCBmYWNlcyBvZiB0aGUgc2FtZSBjb2luLgpJdCBhbGwgb24gdGhlIGljZSwgS2VrYWxhaW5lbiBzYWlkIGF0IE1vbmRheSBHTSBtZWV0aW5ncyB3aGVuIGFza2VkIGFib3V0IHRoZSBCbHVlIEphY2tldHMgYXR0aXR1ZGUgYXQgdGhlIGRlYWRsaW5lLiAKU2hpbm8gbWF5IGJlIGFzIGJsaW5kIGFzIGV2ZXIsIGJ1dCBJIHRoaW5rIEV1Z2VuZSBpcyBmaW5hbGx5IHVuZGVyc3RhbmRpbmcgYSBsaXR0bGUgdGhhdCB0aGUgc2l0dWF0aW9uIHRoZXkgYXJlIGluIGlzIGFzIG11Y2ggdGhlaXIgaXNzdWUgYXMgaXQgaXMgT3JnYSByZWFzb24gdGhhdCBJIGxpa2UgdGhpcyBzY2VuZSB3aXRoIEV1Z2VuZSBpcyBiZWNhdXNlIGl0IGNvbnRyYXN0cyB3ZWxsIHdpdGggdGhlIGVhcmxpZXIgc2NlbmUgb2YgRW5naW5lZXIgcHVsbGluZyB1cCBEYW5lIGFuZCBQb21wYWRvdXIgZGlzY3Vzc2lvbiBhYm91dCBob3cgVGVra2FkYW4gbmVlZHMgbW9yZSBndXlzIGxpa2UgdGhlbS4gClRlbGwgaGltIGV2ZXJ5dGhpbmcuIERvIG5vdCBob2xkIGJhY2suIEhpcyByZWFjdGlvbiB3aWxsIGJlIHZlcnkgdGVsbGluZyBvbiB3aGV0aGVyIHlvdSBzaG91bGQgZXhwb3NlIHlvdXIga2lkcyB0byBoaW0uLiAKSXQgcmVhbGx5IGFsbCBkZXBlbmRzIG9uIHlvdXIgc2VyaW91cyBsZXZlbCBmb3IgZWRpdGluZy4gQXJlIHlvdSBhbiBhbWF0ZXVyL3BybyAod2hpY2ggYnkgdGhlIHF1ZXN0aW9uIHlvdSBwb3NlZCB0aGlzIGlzIGEgbm8pLCB0aGVuIG5vLiAKVGVzdGlmeWluZyB0byB0aGUgd29uZGVyZnVsIHVucHJlZGljdGFiaWxpdHkgb2YgVG91cm5hbWVudCBwb2tlciwgb25saW5lIGhvdHBvdCAic3BhcmNlIiB3YXMgYSB2ZXJ5IGVhcmx5IGNhc3VhbHR5LCBhcyBoZSB0cm9kIGEgdGhpbiBsaW5lIHRyeWluZyB0byBhbWFzcyBhIGJ1bGx5aW5nIHN0YWNrLCB0aGUgZHJlYWRmdWxseSB1bmx1Y2t5ICJEck1hcmJsZXMiIHdhcyBjb29sZXJlZCB0d2ljZSwgdGhlIGZpcnN0IHRpbWUgd2hlbiBoaXMgQWNlcyByYW4gaW50byBBIDcgb24gYSBmbG9wIG9mIDcgNyA4LiBXaG9vcHMuLiAKVGhleSB1c2UgdG8gaGF2ZSBlcXVpcG1lbnQgdG8gcHJvamVjdCBzbGlkZXMvbW92aWVzLiBCdXQgYWZ0ZXIgdGhlIGF1ZGl0b3JpdW0gdXBkYXRlLCBpdCB3YXNuIHVzZWZ1bCBhbnltb3JlIHNvIHRoZXkgZ2F2ZSBpdCB0byB0aGUgQm95cyBTY291dHMgdG8gc3RvcmUgdGhlaXIgc3R1ZmYgYW5kIHRoZXkgY2FuIHN0aWxsIHNob3cgc2xpZGUgbW92aWVzICh5b3Uga25vdyB0aGUgb25lcyB0aGF0IGdvIGRpbmcgd2hlbiB5b3UgbWFudWFsbHkgbWFrZSBpdCBnbyB0byB0aGUgbmV4dCBzbGlkZSkuIApJIGNvdWxkbiBleHBsYWluIGFuZCBpdCBiZSBwb3N0ZWQuIEkgaGFkIGEgY291cGxlIG9mIHJldGlyZWQgTkZMIHBsYXllcnMgZm9sbG93IG1lIGFuZCB3aGVuIEkgdGhhbmtlZCBvbmUgYSBndXkgcG9zdGVkIHByb29mIHRoYXQgQW50d2FuIE9kZW1zIHdhcyBoYWNrZWQuIApBbGwgb2YgdGhvc2Ugd2VyZSBpbmNyZWRpYmx5IHBhaW5mdWwgYW5kIGV4aGF1c3RpbmcgYXQgZmlyc3QsIGJ1dCBoYXZpbmcgdG8gZG8gdGhlc2UgdGhpbmdzIGV2ZXJ5IHdlZWsgb3IgZXZlcnkgZGF5LCBhbmQgYmVpbmcgaW4gYW4gZW52aXJvbm1lbnQgd2hlcmUgSSBjb3VsZCB3b3JrIHRocm91Z2ggbXkgaW5oaWJpdGlvbnMgd2l0aCBnb29kIGZyaWVuZHMsIGhlbHBlZCBtZSBnZXQgdXNlZCB0byBpdC4gClRoZXNlIEVQIG9mIHNwZWNpYWwgbmVlZHMgY2hpbGRyZW4vYWR1bHRzIGRvbiByZWFsaXplIHRoYXQgdGVhY2hpbmcgdGhlbSBib3RoIGJvdW5kYXJpZXMgYW5kIHByb3BlciBncmVldGluZ3MgcHJvdGVjdCB0aGVpciBjaGlsZCBhcyB3ZWxsLiAKVW4gcG91bGV0IGF1IGN1cnJ5IGltcHJ2dSA6IGlsIHkgYSBxdWVscXVlcyBqb3VycywgamUgbGlzIGVuIGxpZ25lIHVuIGFydGljbGUgZHUgbWFnYXppbmUgZHUgTW9uZGUgbyBYYXZpZXIgRGVuYW11ciByYWNvbnRlICJzb24iIHBvdWxldCBhdSBjdXJyeS4gRXQgdm9pbCBxdWUgamV1ZGksIGRlIHJldG91ciBkJ3VuZSBydW5pb24gYXZlYyBtZXMgY29sbGd1ZXMgZW4gYmFubGlldWUgc3VkLCBjaGVyY2hhbnQgbyBkamV1bmVyIHRhcmRpdmVtZW50LCBqZSB0b21iZSBzdXIgdW4gdHdlZXQgbyBpbCBhbm5vbmNlIHF1ZSBjJ2VzdCBsZSBqb3VyIGR1IHBvdWxldCAobGUgY2hlZiBzZSByZXBvc2UsIGxlcyBjdWlzaW5pZXJzIEdhbmVzaCBldCBSYWphaCBwcmVubmVudCBsZSByZWxhaXMpLiBKZSByYWdpcywgaWwgbWUgcnNlcnZlIHVuZSB0YWJsZSBldCBtZSB2b2lsIHBldSBkZSB0ZW1wcyBhcHJzLCBhdHRhYmxlIGV0IG1lIHJnYWxhbnQgZGUgY2UgcG91bGV0IGFyY2hpIHBhcmZ1bSwgYXZlYyB1biByaXogYmFzbWF0aSBleGNlbGxlbnQgZXQgZGVzIGNhcm90dGVzIHJhZnJhY2hpc3NhbnRlcy4gCkZvciBkZXRhaWxzIG9mIGFsbCBvdXIgdm9sdW50ZWVyIHNjaGVtZXMsIGNoZWNrIG91dCB0aGUgdm9sdW50ZWVycyBwYWdlLgpUYWxrIHRvIHNvbWUgb2YgdGhlIFdZIHJhY2UgZGlyZWN0b3JzIGZvciB0aXBzLCBwb3NzaWJseSBhbHNvIHJlYWNoIG91dCB0byBzb21lIFJEIGluIFBvY2F0ZWxsbyAoZm9yIGV4YW1wbGUsIEVsIFZhcXVlcm8gTG9jbyBpbiBBZnRvbiBvciBTY291dCBNb3VudGFpbiBVbHRyYSBpbiBQb2NhdGVsbG8pLiAKQnkgRGF2aWQgR3JhbnQgKFJhbmRvbSBIb3VzZSwgJDQ0Ljk5KQpUaGlzIHBhZ2UgaXMgY29uc2lkZXJlZCB0byBiZSBhIGJsb2csIGJ1dCBwbGVhc2UgYmVsaWV2ZSBtZSB3aGVuIEkgc2F5IEkgZG8gbm90IGNvbnNpZGVyIG15c2VsZiBhIGJsb2dnZXIuIApUaGUgVVMgZGVjcmVlZCBhIGxhdyByZWNlbnRseSBiYW5uaW5nIGJhbmtzIGZyb20gZGVhbGluZyB3aXRoIG9ubGluZSBwb2tlciBjb21wYW5pZXMuIApXZSBtYXkgbmV2ZXIgaGF2ZSBldmlkZW5jZSB0aGF0IE1pY2hhZWwgSmFja3NvbiBzZXh1YWxseSBhYnVzZWQgV2FkZSBSb2Jzb24gYW5kIEphbWVzIFNhZmVjaHVjayBhdCBOZXZlcmxhbmQgUmFuY2ggd2hlbiB0aGV5IHdlcmUgYm95cywgYXMgdGhlIHR3byBjb252aW5jaW5nbHkgYWxsZWdlIGluIEhCTyBmb3VyIGhvdXIgZG9jdW1lbnRhcnkgTGVhdmluZyBOZXZlcmxhbmQuIApQb3N0ZWQgYnkgQW5kcmV3IEp1bHkgMTQsIDEwIDAxOjM1IFBNClBva2VyIGlzIGJvb21pbmcuIEFuZCBtYW55IHBlb3BsZSBwbGF5IGZyZWUgcG9rZXIgZ2FtZXMgb25saW5lLiBUaGV5IHBsYXkgZnJlZSBwb2tlciBmb3IgZnVuIHdpdGggcGxheSBtb25leSBjaGlwcyBhbmQgaGF2ZSBub3RoaW5nIGJ1dCBmYW1lIHRvIGdhaW4uIEJ1dCB0aGVyZSBhcmUgYWxzbyBmcmVlIHBva2VyIHRvdXJuYW1lbnRzIGFuZCBmcmVlIG9ubGluZSBwb2tlciBnYW1lcyB3aXRoIHJlYWwgbW9uZXkgcHJpemVzLiBBbG1vc3QgZXZlcnkgcG9rZXIgcm9vbXMgaXMgb2ZmZXJpbmcgcG9rZXIgZnJlZXJvbGxzLiAKSGUgY2FtZSBmcm9tIGEgbG9uZyBsaW5lIG9mIGludGVyZXN0aW5nIGZvcmViZWFycy4gSGlzIG1vdGhlciBncmFuZGZhdGhlciwgV2lsbGlhbSBSaWNoYXJkc29uLCB3YXMgYSBDaXZpbCBXYXIgaGVybywgd2hvIGxvc3QgYW4gYXJtIGF0IENoYW5jZWxsb3JzdmlsbGU7IHdoaWxlIGEgbXVjaCB0YWxrZWQgYWJvdXQgZmFtaWx5IHJlbGF0aXZlLCBKb2huIEdvcmUsIHdhcyBhIGNvd2JveSwgYSBzYWxvb24gb3duZXIsIGEganVkZ2UgYW5kIHByb2Zlc3Npb25hbCBnYW1ibGVyLCBhbmQgYSBjb25maXJtZWQgYWxjb2hvbGljIHdobywgZHVyaW5nIG9uZSBjcmF6eSBuaWdodCwgYWN0dWFsbHkgd29uIHRoZSB0b3duIG9mIE5ldmFkYSBpbiBhIHNlbnNhdGlvbmFsIHBva2VyIGdhbWUuLiAKIllvdSBkb24ndCByZWFsbHkgY2FyZSBhYm91dCBNci4gTWFuYWZvcnQncyBiYW5rIGZyYXVkLCIgc2FpZCBFbGxpcywgd2hvIGlzIGtub3duIGZvciBiZWluZyBjb21iYXRpdmUgd2l0aCBhdHRvcm5leXMgaW4gaGlzIGNvdXJ0cm9vbS4gIllvdSByZWFsbHkgY2FyZSBhYm91dCBnZXR0aW5nIGluZm9ybWF0aW9uIE1yLiAKR2V0IGZ1Y2tlZCBoYXZpbmcgY2hpbGRyZW4gc2hvdWxkbiBiZSBhIHJpZ2h0IGl0IG5vdCBzb21ldGhpbmcgdG8gbWFrZSB5b3UgZmVlbCBiZXR0ZXIgYWJvdXQgaG93IHNoaXR0eSB5b3VyIGxpZmUgaXMuIEl0IGZ1Y2tlZCB0byB0aGluayAiSSB3YXMgZmVsdCBhIHNoaXQgaGFuZCBzbyBJIGJldHRlciBoYXZlIDMga2lkcyBzbyB0aGV5IGRvbiBtaXNzIG91dCBvbiBhIHNoaXR0eSBsaWZlIi4gSXQgYSBmdWNraW5nIHBlcnNvbiBhbmQgdGhlIGZhY3QgdGhhdCBwYXJlbnRzIGRvbiBldmVuIGhhdmUgdGhlIGJlc3QgaW50ZXJlc3Qgb2YgdGhlaXIgY2hpbGQgdG8gYnJpbmcgdGhlbSBpbnRvIHBvdmVydHkgaXMgZnVja2VkIGVub3VnaC4KUG9vciB1cywgd2UganVzdCBuZWVkIG1vcmUgbW9uZXkgYW5kIHdlIGNhbiBkbyBnb29kIGZvciB5b3UgYWxsLiAKT2YgY291cnNlIHRoYXQgd2hhdCB0aGV5IHNhdyBkdXJpbmcgaGVyIHNoZWx0ZXIgaW50YWtlIFNoZSB3YXMgcHJvYmFibHkgdGVycmlmaWVkISBCdWJzIHdhcyBvbiB0aGUgZXV0aCBsaXN0IGZvciBoYXZpbmcgcmVuYWwgZmFpbHVyZS4gV2UgZ290IGhpcyBibG9vZHdvcmsgcmVkb25lLiBIZSBqdXN0IGhhZCBhIFVUSSAoYnV0IHNob3dlZCBhcyBraWRuZXkgZmFpbHVyZSBkdWUgdG8gc3RyZXNzKS4gVGhlIG90aGVyIHB1cCB0aGF0IHdhcyBicm91Z2h0IGluIHdpdGggaGltIHdhcyBvbiB0aGUgZXV0aCBsaXN0IGZvciBoYXZpbmcgY2FuY2VyLiBTaGUgd2FzIHB1bGxlZCBieSBhIGxvY2FsIHJlc2N1ZSB0aGF0IEkgdm9sdW50ZWVyIHdpdGggYW5kIHNoZSBoYWQgYSBtYXNzIHRoYXQgd2FzIHJlbW92ZWQsIHdoaWNoIHdhcyBub3QgY2FuY2Vyb3VzLiBJdCB2ZXJ5IHNhZCB0byB0aGluayBob3cgbWFueSBvZiB0aGVzZSBiYWJpZXMgYXJlIGJlaW5nIHB1dCBkb3duIGR1ZSB0byBiZWluZyBtaXNkaWFnbm9zZWQuClRoZSBzZWFyY2ggd2FzIG5vdCByZXN0cmljdGVkIGJ5IGxhbmd1YWdlIGFuZCBpbmNsdWRlZCBhIHNlYXJjaCBmb3IgdW5wdWJsaXNoZWQgbWF0ZXJpYWwuIApBbHNvIGEgcGxhY2UgbGlrZSB0aGF0IHdpbGwgaGF2ZSBzZWN1cml0eSBhbmQga2VlcCBvdGhlciBjcmltZXMgYXNzb2NpYXRlZCB3aXRoIHByb3N0aXR1dGlvbiBjbGFtcGVkIGRvd24uIEFsc28gdGhlIG1heW9yIG9mIHRoZSBjb3VudHkgc2VhdCBnb3QgYXJyZXN0ZWQuIApWZWdhcyBpc24ndCB0aGUgcGxhY2UgdG8gc2V0IHVwIHNob3AuIFRvbyBtYW55IHdhbm5hYmUgcG9rZXIgcHJvcyBhbmQgdGhlIGFjdGlvbiBpc24ndCB0aGVyZS4gCkF0aGVpc3QgaGFwcHkiIHR5cGUgb2Ygd2F5LCBidXQgaW4gdGhlIHdheSB0aGF0IHRoZSBtZW1iZXJzIG9mIHRoZSBjaHVyY2ggYXJlIGRlY2lkaW5nIHdoYXQgdGhleSB3YW50IHRoYXQgY2h1cmNoIHRvIGJlLiAKSGUgbm90IGEgcGFydCBvZiB5b3VyIGZ1dHVyZSwgYW5kIGhlIG5vdCBnb2luZyB0byBnaXZlIHlvdSBhIGNoYW5jZSBhdCBhIHRpdGxlIHJ1biB0aGlzIHllYXIuIApZb3UgbWlnaHQgYmUgYW4gYXZpZCBhdGhsZXRlIG9yIG1vcmUgb2YgYW4gb2NjYXNpb25hbCBneW0gcmF0LCBidXQgcmVnYXJkbGVzcyBvZiB3aGF0IHlvdXIgYWN0aXZpdGllcyBhcmUsIHRoZXJlIGlzIGEgZml0bmVzcyB0cmFja2VyIG91dCB0aGVyZSBmb3IgeW91ciBoZWFsdGggbmVlZHMuIApSZWNlbnQgcmVzZWFyY2ggaW5kaWNhdGVzIHRoYXQgdGhlIGVmZmVjdHMgb2YgZXhlcmNpc2Ugb24gdGhlIGJyYWluIGNhbiBiZSBlbmhhbmNlZCBieSBjb25jdXJyZW50IGNvbnN1bXB0aW9uIG9mIG5hdHVyYWwgcHJvZHVjdHMgc3VjaCBhcyBvbWVnYSBmYXR0eSBhY2lkcyBvciBwbGFudCBwb2x5cGhlbm9scy4gVGhlIHBvdGVudGlhbCBzeW5lcmd5IGJldHdlZW4gZGlldCBhbmQgZXhlcmNpc2UgY291bGQgaW52b2x2ZSBjb21tb24gY2VsbHVsYXIgcGF0aHdheXMgaW1wb3J0YW50IGZvciBuZXVyb2dlbmVzaXMsIGNlbGwgc3Vydml2YWwsIHN5bmFwdGljIHBsYXN0aWNpdHkgYW5kIHZhc2N1bGFyIGZ1bmN0aW9uLiBPcHRpbWFsIG1haW50ZW5hbmNlIG9mIGJyYWluIGhlYWx0aCBtaWdodCBkZXBlbmQgb24gZXhlcmNpc2UgYW5kIGludGFrZSBvZiBuYXR1cmFsIHByb2R1Y3RzLi4gCldoZW5ldmVyIHlvdSdyZSBkb2luZyBzb21ldGhpbmcgY29ycmVjdGx5IGFmdGVyIGhhdmluZyBkb25lIGl0IGluY29ycmVjdGx5IGluIHRoZSBwYXN0LCBsZXQgd2hvZXZlciBpcyB3YXRjaGluZyBrbm93LiBGb3IgZXhhbXBsZTogIlRoZSByZWFzb24gSSBrbm93IHRvIHByZXNzIHRoaXMgYnV0dG9uIGlzIGJlY2F1c2UgdGhpcyBoYXBwZW5lZCB0byBtZSB3aGVuIEkgZmlyc3Qgc3RhcnRlZCBvdXQsIGFuZCBJIG1hZGUgdGhlIG1pc3Rha2Ugb2YgcHJlc3NpbmcgdGhlIGJsdWUgYnV0dG9uLCB0aGlua2luZyAnVGhpcyB3aWxsIHNodXQgZG93biB0aGUgc3lzdGVtLCB3aGljaCBzaG91bGQgcmVzb2x2ZSB0aGUgaXNzdWUnIGFuZCBJIGZvdW5kIG91dCAgIHRoZSBoYXJkIHdheSAgIHRoYXQgaXQgbWFrZXMgdGhlIGlzc3VlIGV2ZW4gd29yc2UhIi4gCk5ldXJvc2NpZW5jZSBsYWJzIGFsbCBvdmVyIHRoZSB3b3JsZCBwcm92aWRlIHZhbHVhYmxlIGtub3dsZWRnZSBhYm91dCBob3cgd2UgZmVlbCwgdGhpbmssIGFjdCwgYW5kIGludGVyYWN0IHdpdGggb3RoZXJzLiBXaXRoaW4gbmV1cm9zY2llbmNlLCB3aGljaCBJIGJlbGlldmUgd2lsbCByZXZvbHV0aW9uaXplIGxlYWRlcnNoaXAgZGV2ZWxvcG1lbnQgYWdlbmRhcyBhbmQgdGhlIGNvYWNoaW5nIG9mIGxlYWRlcnMsIHRoZXJlIGlzIGFuIHVuZGVyc3RhbmRpbmcgYWJvdXQgYW4gYXBwcm9hY2ggYWltaW5nIHRvIGV4cGxhaW4gb3VyIHN1YmplY3RpdmUgYW5kIGludGVycGVyc29uYWwgbGl2ZXMuIApNYWRDaHJpcyB1CicnQmV0d2VlbiBhcHByb3hpbWF0ZWx5IDE5NjggYW5kIDE5NzUgd2hpbHN0IEZhdGhlciBCcm9jayB3YXMgYW4gYXNzaXN0YW50IHByaWVzdCBhbmQgcHJpZXN0IHdpdGhpbiB0aGUgZGlvY2VzZSBvZiBNYWl0bGFuZCBOZXdjYXN0bGUsIGhlIGVuZ2FnZWQgaW4gYSByYW5nZSBhbmQgcGF0dGVybiBvZiBiZWhhdmlvdXJzIHdpdGggYW5kL29yIHRvd2FyZHMgSm9obiBhbmQgUGF1bCBQYXJtZXRlciB3aG8gd2VyZSBjaGlsZHJlbiBhdCB0aGUgdGltZSwnJyB0aGUgQ2h1cmNoIGludmVzdGlnYXRpb24gZm91bmQuIApWaWxsYWluIGhhcyB0byBjYWxsIDExMDAwIHRvIHdpbiB0aGUgMjkwMDAgaW4gdGhlIHBvdCwgcGx1cyB0aGUgcG9zc2liaWxpdHkgb2YgdXAgdG8gODIwMDAgbW9yZSAodGhlIHJlc3Qgb2YgaGlzIHN0YWNrKSBpZiBoZSBjYWxscy4gCkN1dCBteSBleWV0b290aCBvbiBTdGVwaGVuIEtpbmcsIGFzIGZhciBhcyBib29rcyBnbywgYnV0IHRoZSBtb3ZpZSB0aGF0IGNvbnZpbmNlZCBtZSB0aGF0IGhvcnJvciBtb3ZpZXMgY291bGQgYmUgZnVuIHdhcyBGcmVkZHkgdnMgSmFzb24uIEkgaGFkIHRlcnJpYmxlIG5pZ2h0bWFyZXMgYXMgYSBraWQgc28gSSBhdm9pZGVkIGFueXRoaW5nIHJlbW90ZWx5IHNjYXJ5IHVudGlsIG15IHRlZW5zLCB3aGVyZSBJIHdhcyBwZWVyIHByZXNzdXJlZCBpbnRvIHNlZWluZyBGdkouIApXaGF0IGNvdWxkIHBvc3NpYmx5IGZvcmNlIGhlciB0byBkbyB0aGF0IG1vcmUgdGhhbiBUb21tZW4gZGVhdGg/CldpdGhpbiBhIGNvdXBsZSBvZiBob3VycyBvZiBwdWJsaXNoaW5nIGFuIGFydGljbGUgaW4gdGhlIEZUIGFubm91bmNpbmcgdGhhdCBJIHdhcyByZXRyYWluaW5nIGFzIGEgbWF0aHMgdGVhY2hlciBhbmQgdXJnaW5nIGJvcmVkIGJhbmtlcnMgdG8gY29tZSB3aXRoIG1lLCAxMDAgYXBwbGljYXRpb25zIGhhZCBwb3VyZWQgaW4uIFRoZXkgYWxsIHdhbnRlZCBhIGNoYW5nZSBmcm9tIHdoYXQgdGhleSB3ZXJlIGRvaW5nLiAKMS4gT3VyIGluY3JlYXNpbmdseSBwb29yIGRpZXQsIGluY2x1ZGluZyBub3Qgb25seSBwb29yIHF1YWxpdHkgZm9vZCBpbiB0aGUgZm9ybSBvZiBmYXN0IGZvb2QsIGJ1dCBnZW5ldGljYWxseSBtb2RpZmllZCBmb29kLCBhbmltYWwgcHJvZHVjdHMgdGFpbnRlZCB3aXRoIGNoZW1pY2FscywgZHJ1Z3MgYW5kIGhlYXZ5IG1ldGFscywgbm90IHRvIG1lbnRpb24gdGhlIGRlY3JlYXNlZCBpbmdlc3Rpb24gb2YgcHVyZSwgb3JnYW5pYyBmcnVpdHMgYW5kIHZlZ2V0YWJsZXMgaXMgdmVyeSBsaWtlbHkgY3JlYXRpbmcgYW4gYWR2ZXJzZSBlZmZlY3Qgb24gdGhlIGhlYWx0aCBvZiBvdXIgaW50ZXN0aW5lcy4KSSBzdGlsbCBhIGxpdHRsZSBjb25mdXNlZCBvbiB0aGUgc3dvcmQgaGF0ZS4gSSBoYXZlbiBwbGF5ZWQgdGhhdCBtdWNoIHNpbmNlIGl0IGJlZW4gb3V0LCBidXQgbWludXMgdGhlIGVhcmx5IGdhbWUgZmlnaHQgb3ZlciBpdCwgaXQgc2VlbXMgbGlrZSBhIGpva2Ugd2VhcG9uLiBFdmVyeSBzY2VuYXJpbywgaW4gc29sb3MgYW5kIGR1b3MsIHdlIGhhdmUga2lsbGVkIGl0LiAydjIgZW5kIGdhbWUsIGVhc3kgd2luIGJlY2F1c2Ugd2UgZmxldyBhcm91bmQgd2l0aCBiYWxsb29ucyBhZnRlciBsYXNlcmluZyB0aGUgbm9uIHN3b3JkIGd1eS4gU3dvcmQganVzdCBqdW1wZWQgYXJvdW5kIHdpdGggbm8gY2hhbmNlIHRvIGRvIGRhbWFnZS4gSXQgc2VlbXMgbGlrZSBhIGhvcGVsZXNzIHdlYXBvbiBzaW5jZSB5b3UgaGF2ZSB0byBkcm9wIGV2ZXJ5dGhpbmcgZWxzZS4gSSBzYXcgdGhlIHZpZGVvIGluIHRoZSB0b3VybmFtZW50LCBidXQgaXQgc2VlbXMgbW9yZSBsaWtlIHBlb3BsZSB3ZXJlIGhhbmRpbmcgaGltIHRoZSBraWxscy4gNzUgZGFtYWdlL3N3aXBlIGlzIHN0cm9uZywgYnV0IGRvZXNuIGEgdGFjdGljYWwgc2hvdGd1biBvdXQgRFBTIHRoYXQ/IFRoZSBsZWFwIGhhcyBwbGVudHkgb2YgbGFnIG9uIHRoZSBlbmQgdG8gaGl0IGEgY291cGxlIHNob3RzLiBJdCBub3QgYSBvbmUgc2hvdCB3ZWFwb24gaWYgeW91IGhhdmUgc2hpZWxkLiBUaGUgb25seSB0aGluZyBpdCBzZWVtcyB0byBiZSBnb29kIGZvciBpcyBkaXNydXB0aW9uLCBzbyBtYXliZSBpdCBiZSBzb2xpZCBpbiBzcXVhZHMuIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KSWYgdGhleSBhcmUgZ29pbmcgdG8gdGFrZSBteSBtb25leSwgeW91IGRhbW4gd2VsbCBhdHRlbXB0IHRvIHNwZW5kIGl0IHdoZW4gcHJlc2VudGVkIG9uIGFyZ3VhYmxlIGEgdG9wIDEwIHBsYXllci4gCkZpbmFsbHksIHlvdSdsbCBob3BlZnVsbHkgbm90ZSB0aHJlZSB0aGluZ3Mgb24gdGhlIEdlcm1hbiBzaWRlIHdoaWNoIHdvdWxkIG1ha2UgaXQgbXkgcHJlZmVycmVkIHNpZGUgdG8gZGVjb2RlOi4gClRhaGFyIFNpbGsgUm9hZCAgIEEgbGl0dGxlIFhpbmppYW5nIHBsYWNlLiBUaGV5IG5hYW4gaXMgYSBiaXQgZmx1ZmZ5IGJ1dCB0aGUgcmVzdCBvZiB0aGUgZm9vZCBpcyBuaWNlLCB0aGUgY29sZCBub29kbGVzIEkgbG92ZSwgdmVyeSBzb3VyIGFuZCBzcGljeSwgYW5kIGdvb2QgdmFsdWUuCkRlY2lzaW9uIG1ha2luZyB1bmRlciBtZW50YWwgcHJlc3N1cmUgaXMgZXhwbG9yZWQgaW4gdGhpcyBzYW1wbGUuIER1cmluZyBwZXJmb3JtYW5jZSBhbiBhdGhsZXRlIGVuY291bnRlcnMgYSB3aWRlIGFycmF5IG9mIG1lbnRhbCBwcmVzc3VyZXM7IHRoZXNlIGluY2x1ZGUgdGhlIHBzeWNob2xvZ2ljYWwgaW1wYWN0IG9mIGVycm9ycywgbmVnYXRpdmUgZmVlZGJhY2ssIGFuZCByZXF1aXJlbWVudHMgZm9yIHN1c3RhaW5lZCBhdHRlbnRpb24gaW4gYSBkeW5hbWljIGVudmlyb25tZW50IChBbnNoZWwgYW5kIFdlbGxzLCAyMDAwOyBNZWxsYWxpZXUgZXQgYWwuLCAyMDA5KS4gCkRheSB0aGV5IHRvb2sgcG9zc2Vzc2lvbiwgaGUgcHJvcG9zZWQuIE5ndXllbiBhY2NlcHRlZC4gT3ZlciB0aGUgeWVhciB0aGF0IHRoZXkgbGl2ZWQgdGhlcmUsIHRoZXkgY3JlYXRlZCBhIHNpbXBsZSwgYmVhdXRpZnVsIGFuZCBmdW5jdGlvbmFsIHNwYWNlIHRoYXQgc3VpdHMgdGhlaXIgbGlmZXN0eWxlLCBhY2NvbW1vZGF0ZXMgdGhlaXIgZ3Vlc3RzLCBhbmQgZXh1ZGVzIHdhcm0gY29uZ2VuaWFsaXR5Li4gCkhlIHZlcnkgd2lkZSwgc28gd2UgYWx3YXlzIG1ha2Ugc3VyZSAzIDQgZmluZ2VycyBjYW4gZ28gaW4gY29tZm9ydGFibHkgYmVmb3JlIHRyeWluZyBpdCB3aXRoIHRoZSByZWFsIHRoaW5nIGFuZCB1c2UgcGxlbnR5IG9mIGx1YmUuIApUaGUgc3BlbmRpbmcgbGVzcyB0aW1lIGF0IHRoZSBob3VzZSBzb3VuZHMgbGlrZSBhIGdvb2QgaWRlYS4gSSBhbHJlYWR5IGZpbmlzaGVkIGNvbGxlZ2UsIHNvIEkgc3RpbGwgbG9va2luZyBmb3IgYSBqb2IuIEluIHRoZSBtZWFudGltZSBzb21ldGltZXMgSSBnbyB0byB0aGUgc3RvcmVzIG9yIHRvIGVhdCB0byBhdm9pZCBzcGVuZGluZyB0b28gbXVjaCBhcm91bmQgaGVyLiAKSXN0IGRpZSBHZWJ1cnQgdm9yYW5nZXNjaHJpdHRlbiwga2FubiBJaHIgUGFydG5lciBtaXQgZGVyIEhhbmR3dXJ6ZWwgZGVuIHVudGVyZW4gVGVpbCBkZXIgV2lyYmVsc3VsZSwgZGllIExlbmRlbmdlZ2VuZCwgbWFzc2llcmVuLiBVbSBkZW4gV2VoZW4gZXR3YXMgZW50Z2VnZW4gc2V0emVuIHp1IGtubmVuLCB3aXJkIGVyIGpldHp0IG1laHIgS3JhZnQgYnJhdWNoZW4gdW5kIHN0cmtlciBkcmNrZW4gbXNzZW4uIApBbHNvICAgd2VyZSB0aGVyZSAxMyBvdGhlciBmYXJ0aXN0cyByZWdpc3RlcmVkIHRvIFJlZGRpdD8gSW1wcmVzc2l2ZS4gR29vZCB0byBzZWUgdGhlIHRyYWRlIHRocml2ZXMuCldoYXRldmVyIHRoYXQgd2FzLiBJIHdvdWxkIHRyeSB0byBmZWVsIHRoZSB3b3JsZCBhcm91bmQgbWUgYmVjYXVzZSB0aGUgdHJlZXMgYW5kIHRoZSBwbGFudHMgYW5kIHRoZSBza3kgd2VyZW4gdHJ5aW5nIHRvIHRha2UgYW55dGhpbmcgZnJvbSBtZSwgd2VyZW4gdHJ5aW5nIHRvIG1ha2UgbWUgZG8gYW55dGhpbmcsIHdlcmVuIHRyeWluZyB0byBtb3ZlIG1lIGFib3V0IGluIHRoZWlyIGxpdmVzIHRvIHBsYXkgYSBwYXJ0LiAKSGVsbCwgaW4gbm93IGRlbGV0ZWQgY29tbWVudHMgaW4gdGhpcyB0aHJlYWQgdGhlIE9QIGRpc2N1c3NlZCBob3cgbGl0dGxlIHRoZSBhY3R1YWwgc2ljayBwZXJzb24gaW4gdGhpcyB2aWRlbyBoYXMgdG8gZG8gd2l0aCBhbnl0aGluZyBhdCB0aGlzIHBvaW50LiAKIldlIGRlbGl2ZXIgY3VzdG9taXplZCBzZXJ2aWNlIHRvIHRoZSBoaWdoZXN0IHN0YW5kYXJkcyBmb3Igb3VyIE1lbWJlcnMgYW5kIHdlIGFudGljaXBhdGUgdGhlaXIgbmVlZHMuIFdlJ3JlIGFsbCBhYm91dCB0YWtpbmcgcmlza3MgICB0cnlpbmcgc29tZXRoaW5nIGRpZmZlcmVudCBpZiB3ZSB0aGluayBpdCB3aWxsIGltcHJvdmUgc2VydmljZS4gV2UgY2VsZWJyYXRlIHN1Y2Nlc3MgYW5kIGxlYXJuIGZyb20gZmFpbHVyZS4iCkF0IHRoZSBlbmQgb2YgdGhlIGRheSwgaWYgQW1lcmljYW4gYnVzaW5lc3NlcyAobGlrZSBNYXIgQSBMYWdvKSBkaWQgZGlkbiBoaXJlIGlsbGVnYWwgaW1taWdyYW50cywgYW5kIEFtZXJpY2FucyBkaWRuIHB1cmNoYXNlIGRydWdzIGZyb20gYWNyb3NzIHRoZSBib3JkZXIsIHRoZXJlIHdvdWxkIGJlIG5vIG1hcmtldCBmb3IgaWxsZWdhbCBpbW1pZ3JhdGlvbi4gCkdpdmVuIEJsYWlyIFJlZXZlJ3Mgc3Ryb25nIHBlcmZvcm1hbmNlIHBvZXQgYmFja2dyb3VuZCwgdGhpcyBpcyBhIGJvb2sgdG8gYmUgcmVhZCwgaW5kZWVkIGNoYW50ZWQsIE9VVCBMT1VELiAKSSBvbmNlIGtuZXcgYSBwZXJzb24gd2hvIGZlbHQgbGlrZSB0aGV5IG5lZWRlZCB0byBjaGVhdCBiZWNhdXNlIHRoZXkgZmVsdCBsaWtlIHRoYXQgaXMgdGhlIG9ubHkgd2F5IHRoZXkgY2FuIHdpbi4gT3RoZXIgcGVvcGxlIGp1c3QgY2hlYXQgYmVjYXVzZSBjYW4sIG9yIGJlY2F1c2UgdGhleSBhcmUgcmVhbGx5IGdvb2QgYXQgaXQuIApNb3JlIEFydGljbGVzIFJpdmVyYm9hdCBDYXNpbm9zIGluIElvd2EgTG9kZ2luZyBOZWFyIEZveHdvb2RzIENhc2lubyBIb3RlbHMgTmVhciBUaXB0b24sIE1pc3NvdXJpIEluZGlhbmEncyBSaXZlcmJvYXQgQ2FzaW5vcyBIb3RlbHMgQ2FzaW5vcyBpbiBUdW5pY2EgSG90ZWxzIEFyb3VuZCBIb3JzZXNob2UgQ2FzaW5vIGluIFNvdXRoZXJuIEluZGlhbmEKSWYgd2Ugd2FudCB0byB1c2UgUmFua2VkIENob2ljZSBWb3RpbmcsIGl0IHNob3VsZCBvbmx5IHRha2UgcGxhY2UgYXQgdGhlIEROQy4gU28sIHZvdGVycyB3b3VsZCByYW5rIHRoZSBjYW5kaWRhdGVzIGFuZCB0aGUgZGF0YSB3b3VsZCBiZSB1c2VkLCBpZiB0aGUgRE5DIGRvZXNuIHByb2R1Y2UgYSBub21pbmVlIG9uIHRoZSBmaXJzdCBiYWxsb3QuIEFmdGVyIHRoZSBmaXJzdCBiYWxsb3QsIHRoZSBjYW5kaWRhdGUgd2l0aCB0aGUgZmV3ZXN0IGRlbGVnYXRlcyB3b3VsZCBiZSByZW1vdmVkIGFuZCBoaXMvaGVyIHNlY29uZCBjaG9pc2VzIHdvdWxkIGJlIHJlZGlzdHJpYnV0ZWQgdG8gdGhlIG90aGVyIGNhbmRpZGF0ZXMgICBhbmQgdGhpcyB3b3VsZCBiZSBkb25lIHVudGlsIHdlIGhhdmUgc29tZW9uZSB3aXRoIDUwJSsxLgpUaGUgbWVkaWEgY2FsbHMgdGhpcyBsaXR0bGUgaG9uZXlwb3QgbGF3eWVyIGEgS3JlbWxpbiBsYXd5ZXIuIFB1dGluIGZpcmVkIGhlciBodXNiYW5kIGZvciBiZWluZyBhIGNyb29rIGludm9sdmVkIHdpdGggeWV0IGFub3RoZXIgQ2xpbnRvbiBjcmltZSBjYWJhbCBzY2FtLCB3aXRoIFJ1c3NpYW4gUmFpbHJvYWRzLiBUaGVpciBwbGFuIHdhcyB0byB0YWtlIGRvd24gUHV0aW4gYW5kIFRydW1wIGF0IHRoZSBzYW1lIHRpbWUuIApTaGUgc2FpZCwgZ2V0IHVwIGFuZCBtYWtlIHVzIGFsbCBicmVha2Zhc3QuIEkgZm9yIG9uZSBhbSBzdGFydmluZy4gCk9oLCBzbyBhIHN0cmFpZ2h0IG1hbiBjYW4gbWFycnkgR29kL0plc3VzIGFuZCBpdCBubyBob21vLCBidXQgaWYgYSBnYXkgbWFuIGRldm90ZXMgaGltc2VsZiB0byBhIG1hc2N1bGluaXplZCBjaHVyY2gsIGl0IGhvbW8/IGNvbmZ1c2luZywgdG8gc2F5IHRoZSBsZWFzdCwgYnV0IG5vdCBuZWFybHkgYXMgZGFuZ2Vyb3VzIGFuZCBqdXN0IHBsYWluIG1lYW4gc3Bpcml0ZWQgYXMgYmxhbWluZyBwZWRvcGhpbGlhIG9uIGhvbW9zZXh1YWxpdHkuIENvbmZsYXRpb24gb2YgcGVkb3BoaWxpYSBhbmQgY2hpbGQgbW9sZXN0YXRpb24gaXMgbG9uZyBzdGFuZGluZyBvdXIgY3VsdHVyZSBhbmQgaGFzIHJlc3VsdGVkIGluIGEgdmFyaWV0eSBvZiBtZWFuIHNwaXJpdGVkIGxhd3MsIGZyb20gYmFycmluZyBnYXkgbWVuIGFuZCBsZXNiaWFucyBmcm9tIHRlYWNoaW5nIHlvdW5nIGNoaWxkcmVuIGFuZCBhZG9wdGlvbiB0byBiYXJyaW5nIGdheSBtZW4gZnJvbSB0aGUgQm95IFNjb3V0cy4uIApJIHRoaW5rIHlvdSBtYXkgYmUgbWlzdW5kZXJzdGFuZGluZyB3aGF0IHRoYXQgc3RhdCBpcy4gSWYgeW91IGdvIGFsbCBpbiB3aXRoIEFLIGFnYWluc3QgQVEsIHlvdSB3aWxsIGhhdmUgNzMuNiUgZXF1aXR5LiBJZiB5b3UgZ290IGludG8gdGhpcyBzaXR1YXRpb24gYW5kIHdvbiB0aGUgcG90LCBsZXQgc2F5IGl0IHdhcyB5b3VyICQxMDAgdG8gdGhlaXIgJDEwMCBmb3IgYSB0b3RhbCBwb3Qgb2YgJDIwMCwgdGhlbiB5b3VyIGdyYXBoIHdpbGwgZ28gdXAgYnkgJDEwMCwgYW5kIHlvdXIgYmIvMTAwIHdpbnJhdGUgd2lsbCBhZGp1c3QgYWNjb3JkaW5nbHkuIApXaGlsZSB0aGUgZGFkIHdhcyBsb2FkaW5nIGl0IG9uIHRvcCBvZiB0aGVpciB2ZXJ5IG9sZCBjYXIgSSB3YXMgY2hhdHRpbmcgd2l0aCB0aGVpciBzb24gdGhhdCBjYW1lIHdpdGguIEhlIHdhcyBwcm9iYWJseSAxMCBvciAxMS4gCkkgZG9uIGhhdmUgYSBjZWxsIHBob25lIGF0IHRoZSB0aW1lLCB0aGVyZSBubyBvbmUgYXJvdW5kIHRvIHNlZSB3aGF0IGdvaW5nIG9uLiAKSGUgdGhpbmtzIExhYm9yIGxvb2tzIHRoZSBnb29kcyBpbiBGcmFua2xpbiBhbmQgd2lsbCBob2xkIHR3byBzZWF0cyBpbiBEZW5pc29uLCBhbmQgYmVsaWV2ZXMgT3Bwb3NpdGlvbiBMZWFkZXIgUmViZWNjYSBXaGl0ZSBjb3VsZCBjYXJyeSB0d28gY2FuZGlkYXRlcyBvdmVyIHRoZSBsaW5lIHdpdGggaGVyIHN1cnBsdXMgdm90ZXMuIApJIHdhcyBoZWF2aWx5IGludm9sdmVkIHdpdGggdGhlaXIgZmF2b3JpdGUgY2hhcml0eSwgZ29sZmVkIHdpdGggb3VyIHB1cmNoYXNpbmcgY291bnRlcnBhcnRzIGF0IG91dGluZ3MsIHNlbnQgdGhlbSBlbWFpbHMgYWJvdXQgbWFueSBvZiB0aGUgaW1wcm92ZW1lbnRzIG91ciBjb21wYW55IG1ha2luZyB0byBvdXIgbWFudWZhY3R1cmluZyBwcm9jZXNzZXMgYW5kIHRvIG91ciByZXNlYXJjaCAoc2VudCBTTUVzIHdoaXRlcGFwZXJzKS5XaGlsZSB0aGVzZSBhY3Rpdml0aWVzIGtlcHQgdXMgdG9wIG9mIG1pbmQsIG11Y2ggb2YgdGhlIHdvcmsgaW52b2x2ZWQgd2FzIHJlYWxseSBnZXR0aW5nIG91ciBTTUVzIGluIGZyb250IG9mIHRoZWlyIFNNRXMgYW5kIGtlZXBpbmcgcHVyY2hhc2luZyBpbiB0aGUgbG9vcCBhcyBvdXIgYmlkIHByb2dyZXNzZWQuIApVcCB0byB5b3UsIGlmIHlvdSB3YW5uYSBrZWVwIHlvdXIgcHJvZmlsZXMgc2VwZXJhdGUgdGhhdCBmaW5lIGFuZCBJIGdldCB0byB5b3UgaW4gZHVlIHRpbWUgcmVnYXJkbGVzcy4gCkJlIHN1cmUgbm90IHRvIG1pc3Mgb3V0IG9uIE1vbmRheSBQb2tlciBOaWdodHMgYW5kIFRyaXZpYSBldmVyeSBXZWRuZXNkYXkgd2l0aCBHZXJyeSBCeXJvbiwgYXMgd2VsbCBhcyB0aGVpciBXZWRuZXNkYXksIEZyaWRheSBhbmQgU3VuZGF5IG1lYXQgcmFmZmxlcy4gVGhlaXIgd2Vla2x5IGFjdGl2aXRpZXMgYXJlIGJyaW1taW5nIHdpdGggZW5kbGVzcyBlbnRlcnRhaW5tZW50IG9wdGlvbnMsIHdpdGggdGhlaXIgQmluZ28gYW5kIEJyaWRnZSBDbHVicyBkcmF3aW5nIGEgY29uc2lzdGVudCBjcm93ZCBvZiBlbnRodXNpYXN0aWMgbG9jYWxzIHRoYXQgYWRkcyB0byB0aGUgd2FybSBhbmQgZnJpZW5kbHkgYXRtb3NwaGVyZSBhdCBQb3J0IENpdHkuCkRhbnMgbGUgY2FkcmUgZCd1bmUgdHJpYnVuZSwgcHVibGllIGNlIGx1bmRpIDE1IG9jdG9icmUgZGFucyBsZSBOZXcgWW9yayBNYWdhemluZSwgbCdhY3RyaWNlIGF1c3RyYWxpZW5uZSBkZSA1MSBhbnMgcmV2aWVudCBsb25ndWVtZW50IHN1ciBzYSByZWxhdGlvbiBhdmVjIHNvbiBhbmNpZW4gbWFyaSwgbCdhY3RldXIgYW1yaWNhaW4gVG9tIENydWlzZS4gClVuZm9ydHVuYXRlbHksIHRoZXJlIG5vIHRpbWUgdGFibGUgYW5kIGl0IGNvdWxkIGJlIGF3aGlsZSBhcyB0aGVzZSBpbnZlc3RpZ2F0aW9ucyBhcmUgY292ZXJpbmcgYSBsb3Qgb2YgaW5mb3JtYXRpb24sIGFuZCBhcyB3aXRoIGV2ZXJ5dGhpbmcgcmVsYXRlZCB0byB0aGUgZ292ZXJubWVudCwgaXQgZ29pbmcgdG8gdGFrZSBhIGxvbmcgdGltZS4uIApSYW5kb21HYW1lcjIwMDAgIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClNwaWVsZSBtaXQgdmVyc2NoaWVkZW5lbiBTcGllbGVybi4gU29sY2hlLCBkaWUgZnIgZGljaCBiZXJlY2hlbmJhciBzaW5kLCBkaWUgbmljaHQgYmVyZWNoZW5iYXIgc2luZCwgZGllIGltbWVyIGFuIGRlcnNlbGJlbiBTdHJhdGVnaWUgZmVzdGhhbHRlbiwgb2RlciBzb2xjaGUsIGRpZSBnYXIga2VpbmUgU3RyYXRlZ2llIGhhYmVuICAgc3BpZWxlIGdlZ2VuIGRpZSBnZXNhbXRlIFBhbGV0dGUgZGVyIHZlcnNjaGllZGVuc3RlbiBDaGFyYWt0ZXJlLiBUcmlmZnN0IGR1IGF1ZiBlaW5lbiBHZWduZXIsIGRlciBzdHJrZXIgc3BpZWx0IGFscyBkdSwgZGFubiBzY2hpZWUgZGljaCBhdWYgaWhuIGVpbiB1bmQgc3BpZWxlIGlobiBzb2xhbmdlLCBiaXMgZHUgZ2VuYXVzbyBzdGFyayBzcGllbHN0LgpUaG91Z2ggd2UgaGFkbiBhc2tlZCBmb3IgaGlzIHJlbW92YWwgb3IgcmVzaWduYXRpb24sIChTaW5jbGFpcikgdG9vayBpdCB1cG9uIHRoZW1zZWx2ZXMuIApEb2VzIHJveWFsIGZsdXNoIGRldG94IGRyaW5rIHdvcms/ClVzZXRoZXNlICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpBc3N1bWluZyB0aGUgdHJlbmRzIHNlZW4gYXJvdW5kIHRoZSB3b3JsZCBhcyBwb29yIGFyZWFzIG1vZGVybml6ZSBjYW4gYmUgYXBwbGllZCB0byB0aGUgYXJlYXMgc3RpbGwgbW9kZXJuaXppbmcuIFRoZSB0cmVuZCBpcyB2ZXJ5IHN0cm9uZywgYXMgY29uZGl0aW9ucyBpbXByb3ZlIHlvdSBoYXZlIGEgZ2VuZXJhdGlvbiB0aGF0IGhhcyBtYW55IG1hbnkgY2hpbGRyZW4gYW5kIGJhc2ljYWxseSBhbGwgb2YgdGhlbSBzdXJ2aXZlLiAKSW4gdGhlIGNhc2Ugb2YgdHdvIHN0cmFpZ2h0IGZsdXNoZXMgZHVyaW5nIG9uZSBoYW5kLCB0aGUgb25lIGNvbnRhaW5pbmcgdGhlIGhpZ2hlc3QgY2FyZCBpcyB0aGUgd2lubmVyLiAKTm92ZW1iZXIgMDggMjAxN0VtYWlsVHdpdHRlclBpbnRlcmVzdEZhY2Vib29rUG9rZXIgc2V0cyBBZnRlciAyMCB5ZWFycyBvZiBoYW5kY3JhZnRpbmcgZnVybml0dXJlIGZvciBjbGllbnRzIGluY2x1ZGluZyBDYWx2aW4gS2xlaW4sIFJhbHBoIExhdXJlbiBhbmQgUGFyayBMYW5lJ3MgR3Jvc3Zlbm9yIEhvdXNlIGhvdGVsLCBtYXN0ZXIgd29vZHdvcmtpbmcgY29tcGFueSBMYW5jZWxvdCBMYW5jYXN0ZXIgV2hpdGUgYmVnYW4gbWFraW5nIHBlcnNvbmFsaXNlZCBwb2tlciBzZXRzIChmcm9tIDUwLDAwMCkgdGhhdCBjYW4gaW5jb3Jwb3JhdGUgYSBmYW1pbHkgY3Jlc3QsIHRva2VucyBvZiBtZW1vcmFiaWxpYSwgb3IgaGF2ZSB0aGVpciB2ZW5lZXJzIGFuZCBsaW5pbmdzIG1hdGNoZWQgdG8gdGhvc2Ugb2YgYSB5YWNodCwgY2FyIG9yIGludGVyaW9yIGRlc2lnbiBzY2hlbWUuIERldmVsb3BlZCB1bmRlciB0aGUgZ3VpZGFuY2Ugb2YgdGhlIGhlYWQgb2YgcG9rZXIgYXQgTGVzIEFtYmFzc2FkZXVycyBnYW1pbmcgY2x1YiwgZWFjaCBzZXQgaXMgbWFkZSBieSBhIHRlYW0gb2YgYXJ0aXNhbnMgZHJhd24gdG9nZXRoZXIgZnJvbSBhY3Jvc3MgdGhlIEJyaXRpc2ggSXNsZXMsIGFuZCBldmVyeSBwYXJ0IG9mIHRoZSBib3ggYW5kIGl0cyBjb250ZW50cyBjYW4gYmUgY3VzdG9taXNlZCwgZnJvbSB0aGUgbmFtZXBsYXRlIHRvIHRoZSBmZWV0IG9yIHRoZSBoYW5kbGVzLCBhbmQgZXZlbiB0aGUgYWxsIGltcG9ydGFudCBjaGlwcy4gQ0FNSUxMQSBBUENBUi4gCkJvYiBCb3VnaG5lciBhbmQgdGhlIEhpZ2gKSXQgd2FzIGNyaXRpY2l6ZWQgYmVmb3JlIGEgc2luZ2xlIHNjZW5lIHdhcyBzaG90IGZvciB0aGUgY2FzdGluZyBvZiBCcml0aXNoIE1hbGF5c2lhbiBhY3RvciBIZW5yeSBHb2xkaW5nIGFzIE5pY2sgYW5kIEphcGFuZXNlIEJyaXRpc2ggQXJnZW50aW5lIGFjdG9yIFNvbm95YSBNaXp1bm8gYXMgQXJhbWludGEgTGVlLiAKSnVzdCByZWFsbHksIHJlYWxseSBnb29kIGZyb20gc3RhcnQgdG8gZmluaXNoLiAKVG8gZG8gdGhhdCB5b3UnbGwgbmVlZCB0byBtYWtlIHRoZSBjb2RlICJyZW1lbWJlciIgdGhhdCBpdCBoYWQgdHJpZWQgYzQgc28gaW4gbmV4dCBpdGVyYXRpb24gaXQgc2hvdWxkIHNraXAgYzQgYW5kIGxvb2tzIGZvciBvdGhlciB0aWxlcyB3aXRoIHZhbHVlID09IDQuIApBcmxlbmUgRGlja2luc29uIGFuZCBKaW0gVHJlbGl2aW5nIHdlcmUgaW1wcmVzc2VkIGFuZCBvZmZlcmVkICQ1MCwwMDAgZm9yIGEgNTAlIHN0YWtlLiBIZSBhY2NlcHRlZCBhbmQgdGhlIGRlYWwgaXMgc3RpbGwgaW4gZHVlIGRpbGlnZW5jZS4gCldlIHdlcmUgYWxzbyBhIHRyYWluaW5nIHN0b3JlIHNvIEkgd291bGQgYmUgdHJhaW5pbmcgYWxsIHRoZSBuZXcgYXNzaXN0YW50IG1hbmFnZXJzIHRoYXQgd2VyZSBoaXJlZCB0aHJvdWdob3V0IHRoZSBkaXN0cmljdC4gCkEganVkZ2UsIGFuIGVudHJlcHJlbmV1ciwgYSBjb252aWN0ZWQgZmVsb24gb3IgdGhyZWUuIFRvIG1lIGl0IGJldHRlciB0byB3aW4gb3IgbG9zZSBxdWlldGx5LiBQZW9wbGUgd2hvIHRhbGsgYSBsb3QgdGVuZCB0byB0YWxrIG1vcmUgYWZ0ZXIgYSB3aW4uIApHZXQgYSByZWFsIHNpdHRlci4gCkhyZXIgenUgZGVuIE9seW1waXNjaGVuIFNwaWVsZW4gMjAwOApBcmUgeW91IGEgY2FyZCBsb3Zlcj8gRG8geW91IHdhbnQgdG8gZWFybiB0aGUgdW5saW1pdGVkIG1vbmV5IGluIGEgdmVyeSBzaG9ydCBwZXJpb2Qgb2YgdGltZT8gWWVzPyBJdCBtYXkgYmUgcXVpdGUgaGFyZCBmb3IgdGhlIG9uZSB3aG8gd2FudHMgdG8gZWFybiB0aGUgaHVnZSBidWNrcyBvZiBtb25leSBidXQgc3RpbGwgdW5hYmxlIHRvIGdldCB0aGUgc2FtZSBidXQgaXQgaXMgbm90IGltcG9zc2libGUgYXQgYWxsLiAKRXZlbiBFdGhlcmVhbCBBYnNvbHV0aW9uIHdvbiBoZWxwIHlvdSBtdWNoIHRoZW4uIApObyBtYXR0ZXIgaG93IHNraWxmdWwgeW91IGFyZSwgaWYgeW91IGxhY2sgZGlzY2lwbGluZSwgdGhlbiwgeW91IG1pZ2h0IGFzIHdlbGwgc2F5IGdvb2RieWUgdG8gdGhlIHRob3VnaHQgdGhhdCB5b3UgY2FuIHdpbiBhdCBIb2xkZW0uIApCb2JieSBsZWF2ZXMgd2l0aCBhIHVuYW5pbW91cyB2b3RlIGFuZCBJIHBhdHRpbmcgbXlzZWxmIG9uIHRoZSBiYWNrLiAKSnVzdCBnb3QgYmlsbCBmcm9tIG9uZSBvZiB0aG9zZSBzbWFsbCBFUiBmYWNpbGl0aWVzIChteSBzbWFsbCB0b3duIGhhcyBsaWtlIDUgb2YgdGhlbSkuIEkgaGFkIHN1cGVyIGJhZCBwYWluIGluIG15IHNpZGUuIApGaWd1cmUgb3V0IHRoZSB0cmlnZ2VyLiBJZiB5b3UgY2FuIGZpZ3VyZSBvdXQgd2hhdCB0cmlnZ2VyZWQgdGhlIG1hcmtpbmcgdG8gc3RhcnQsIHlvdSBjYW4gcG90ZW50aWFsbHkgZml4IHRoZSBpc3N1ZSBhbmQgc3RvcCB0aGUgbWFya2luZy4gVHJ5IHRvIGRldGVybWluZSB3aGVuIHRoZSBzcHJheWluZyBiZWdhbiBhbmQgd2hhdCBjaGFuZ2VzIG9jY3VycmVkIGR1cmluZyB0aGlzIHRpbWUgaW50ZXJ2YWwuIApBbHNvIHdvdW5kIHVwIGNoYXR0aW5nIHdpdGggcmFuZG9tIGxvY2FscyBhbmQgYSBCcmF6aWxpYW4gY291cGxlIGFzIG9uZSBkb2VzIHdoaWxlIG9uIHZhY2F0aW9uLCBidXQgbWFuIEkgc3RpbGwgcmVtZW1iZXIgaG93IG1pbmQgb3BlbmluZyB0aGF0IGNvbGQgYnJldyB3YXMuLiAKSWYgdGhlIHRyaXAgbmVlZHMgdG8gYmUgY2FuY2VsbGVkLCBDYW1wdXMgVHJhdmVsIHdpbGwgcmVjb3JkIHRoZSB2YWx1ZSBvZiB0aGUgYWlyZmFyZSBvbnRvIGEgcmVnaXN0ZXIgaW4gdGhlIHRyYXZlbGxlcnMgbmFtZSBmb3IgZnV0dXJlIHRyYXZlbC4gSG93ZXZlciwgaW4gbGluZSB3aXRoIHN0YW5kYXJkIGFpcmxpbmUgcHJhY3RpY2UsIGlmIGEgZmxpZ2h0IGlzIGNhbmNlbGxlZCB3aXRoaW4gMjQgaG91cnMgb2YgZGVwYXJ0dXJlLCB0aGUgZmFyZSB3aWxsIG5vdCBiZSBjcmVkaXRlZCBieSB0aGUgYWlybGluZS4KNTAgY2VudCBwaWVjZSBzZXQgd2l0aCBhIHNtYWxsIGJsdWUgYW5kIHdoaXRlIE5pY2FyYWd1YW4gZmxhZy4gCkFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudGRpZ2l0YWwgc3RvcmVzLiBZZXQgaXQgbW9zdCBsaWtlbHkgcG9zc2libGUgYW55dGhpbmcgb24gImlUdW5lcyJjYW4gYmUgZm91bmQgb24gVmlueWwvQ0QgZm9yIGhpZ2hlciBxdWFsaXR5LiBJbiBhZGRpdGlvbiwgdGhlIHRlcm0ieW91dHViZSIgdGhyb3VnaG91dCB0aGUgbGlzdCBpcyB1c2VkIGhlcmUgdG8gbWVhbiB5b3V0dWJlIGl0c2VsZixidXQgYWxzbyAidGhlIGludGVybmV0IiBpbiBnZW5lcmFsLiBJIHN0aWxsIGxpc3RlbiB0byBHYUdhIGJ1dCBhdCB0aGlzIHBvaW50IGl0cyBzaW1wbGUgdG8ga25vdyBhbGwgaGVyc29uZ3MgYnkgbGlzdGVuaW5nIHRvIGhlciBhbGJ1bXMuIApIb3dldmVyIGlmIHlvdSBsZXQgZ3Jhdml0eSBkbyBhbGwgeW91ciB3b3JrIGFuZCBqdXN0IGZvY3VzIG9uIGltcHJvdmluZyB5b3VyIHJlbGVhc2UsdGltaW5nIGFuZCBmb2xsb3cgdGhyb3VnaCB0aGF0IGlzIHNvbWV0aGluZyB0aGF0IGlzIHZlcnkgcmVwZWF0YWJsZS4gCkZvciBlYWNoIGRlZ3JlZSBvZiByb3RhdGlvbiB5b3UgdHJhdmVyc2UgMS8zNjB0aCBvZiB0aGUgZ2VhcnMgcGVyaW1ldGVyLiBXaXRoIHR3byBnZWFycyB0b3VjaGluZyBsaWtlIGluIHRoaXMgcHJvYmxlbSwgdGhleSB3aWxsIGFsbCBzcGluIHdpdGggdGhlIHNhbWUgcGVyaW1ldGVyIHZlbG9jaXR5LCBidXQgd2l0aCBkaWZmZXJlbnQgcm90YXRpb25hbCB2ZWxvY2l0eS4gClRoaXMgbWVhbnMgdGhhdCBpcm9uaWNhbGx5LCBDb250aW5lbnRhbCBsYW5ndWFnZXMgbGlrZSBHYXVsaXNoIHdlcmUgZ3JhbW1hdGljYWxseSBtb3JlIHNpbWlsYXIgdG8gTGF0aW4gdGhhbiBDZWx0aWMgbGFuZ3VhZ2VzIGxpa2UgT2xkIElyaXNoLCBhbmQgZXZlbiBzaGFyZWQgb3RoZXIgbGluZ3Vpc3RpYyBmZWF0dXJlcyB3aXRoIHRoZSBmb3JtZXIgdGhhdCBhcmUgYWJzZW50IGluIHRoZSBsYXR0ZXIgKHN1Y2ggYXMgYSBjb25qdWdhdGVkIGZvcm0gb2YgdGhlIHZlcmIgYmUgICBHYXVsLiBFc3RpIHZzLiAKSSBkb24ndCB3YW50IHRvIHdhc3RlIG15IHRpbWUgZ29pbmcgdG8gbWVldCB3aXRoIHRoZW0gaWYgdGhlcmUgaXMgbm8gd2F5IEkgd291bGQgYmUgYWJsZSB0byBidXkgdGhlIGhvdXNlIGZvciB3aGF0IEkgd291bGQgbmVlZCB0byBidXkgaXQgZm9yLiBUaGUgd2F5IHRvIGFwcHJvYWNoIHRoaXMgcXVlc3Rpb24sIGlzIHRvIGp1c3QgYXNrIGl0IGxpa2UgeW91IGRpZCB0aGUgcXVlc3Rpb24gYWJvdXQgaG93IG1hbnkgYmVkcm9vbXMgdGhlIGhvdXNlIGhhcy4gCkFzayBoZXIgd2hhdCBoZXIgY29uY2VybnMgYXJlLiAKTm9ib2R5IGlsbHVzdHJhdGVzIHRoZSBHb2FuIGNhc2lubyBkaWxlbW1hIGJldHRlciB0aGFuIHRoZSBjdXJyZW50IEdvYSBDTSBNYW5vaGFyIFBhcnJpa2FyIHdobyB3YXMgc3dlcHQgdG8gcG93ZXIgd2l0aCB0aGUgZmlyc3QgY2xlYXIgbWFqb3JpdHkgaW4gdHdvIGRlY2FkZXMsIDE4IG1vbnRocyBhZ28sIGFmdGVyIGhlIGhhZCBjYW1wYWlnbmVkIG9uIGEgcGxhbmsgd2hpY2ggcHJvbWlzZWQgdG8gY2xvc2UgZG93biBhbGwgY2FzaW5vcyBpbiB0aGUgc3RhdGUgYmVjYXVzZSB0aGV5IHdlcmUgR29hbiBjdWx0dXJlLiAKQm90aCBsaXZlZCBpbiBNb29yZSwgT2tsYWhvbWEsIG5pbmV0eSBtaWxlcyBhd2F5LiBEcml2aW5nIHRoZSBwaWNrdXAgdHJ1Y2sgdGhhdCBwdWxsZWQgaW4gd2l0aCB0aGVtIHdhcyB0aGVpciB1bmNsZSwgR2VuZSBXaGVsY2hlbCwgd2hvIGxpdmVkIGp1c3QgZWFzdCBvZiBBZGEsIGluIGEgdmlsbGFnZSBjYWxsZWQgTG92ZSBMYWR5LiBUaGV5IHdlcmUgcGxhbm5pbmcgdG8gcGxheSBwb2tlciB0aGF0IGV2ZW5pbmcsIGFuZCB0aGV5IG5lZWRlZCBzb21lIGNoYW5nZS4uIApUaGlzIGlzIHdoYXQgbWFrZXMgcG9rZXIgc3VjaCBhbiBpbnZvbHZlZCBhbmQgaW50ZXJhY3RpdmUgZ2FtZSBvZiBzdHJhdGVneSAgIHNtaWxlIG9yIGZyb3duIGF0IHRoZSB3cm9uZyB0aW1lLCBhbmQgeW91IG1heSBlbmQgdXAgZ2l2aW5nIHRoZSBnYW1lIGF3YXkuIE9oLCBhbmQgaWYgeW91IGRpZG4ndCBrbm93IGl0IGFscmVhZHkgICBhICJjYXJkc2hhcnAiIGlzIGFuIGV4cGVydCBjYXJkIGdhbWUgcGxheWVyLiAKUG9pc29uaW5nLiBCaW9mcmVlemUgaXMgbm90IG1lYW50IHRvIGJlIGluZ2VzdGVkIGJ1dCB0byBiZSBhcHBsaWVkIG9uIGFyZWFzIG9mIHRoZSBib2R5IHRoYXQgYXJlIGV4cGVyaWVuY2luZyBwYWluLiAKQnV0IHRoZSBmYWN0IHJlbWFpbnMgdGhhdCBhIHNtYWxsIGRlYmF0ZSBpbiB0aGUgTmF0aW9uYWwgQXNzZW1ibHkgY2xlYXJlZCB0aGUgbWlzdCBmb3Igd2hpY2ggdGhlIGdvdmVybm1lbnQgd2FzIHJlY2VpdmluZyBmbGFrIGZvciBhbG1vc3QgYSB3ZWVrLiBIZXJlaW4gbGllcyB0aGUgbGVzc29uIGZvciB0aGUgZ292ZXJubWVudC4uIApUaGVyZSBhIGdvb2QgcmVhc29uIHlvdSBkb24gZmluZCBUb3lzIFIgVXMgaW50ZXJlc3RpbmcuIGl0IGJlY2F1c2UgaXQgZm9yIGNoaWxkcmVuLiBpZiB5b3UgaGF2ZSBhIHJlYWwgaW50ZXJlc3QgaW4gcGxheWluZyB3aXRoIGtpZHMgdG95cyBpbiBhZHVsdGhvb2QgdGhlbiB5b3UgaGF2ZSBtaXNzZWQgc29tZXRoaW5nLiB5b3Ugc2hvdWxkIGhhdmUgcHJvZ3Jlc3NlZCB0byBiaWdnZXIgYnkgbm93LgpXaGVuIG9ic3RydWN0aW9uIG9mIGp1c3RpY2UgaXMgYW4gaXNzdWUgaW4gZXZlcnkgb3RoZXIgaW52ZXN0aWdhdGlvbiBvZiBhIHByaXZhdGUgb3IgcHVibGljIG9mZmljaWFsLCB0aGUgc3ViamVjdCBpcyBhbHdheXMgaW50ZXJ2aWV3ZWQgYnkgdGhlIEZCSS4gQW5kIHR5cGljYWxseSwgdGhleSBhcmUgcHJvc2VjdXRlZCBmb3IgdGhlaXIgbGllcyBpbiB0aGF0IGludGVydmlldy4gQmVpbmcgcHJlc2lkZW50IGRvZXNuIG1lYW4geW91IGhhdmUgdGhlIHJpZ2h0IHRvIG5vdCBiZSBxdWVzdGlvbmVkLi4gCkhlciBhbmdlbGljIHZvaWNlIGlzIHN0dW5uaW5nLiBOb3Qgb25seSBpcyBzaGUgYSBzZWFzb25lZCBkaXZhIHdobyBoYXMgcmlnaHRmdWxseSBlYXJuZWQgaGVyIHRvcCBzcG90IGFzIG9uZSBvZiB0aGUgZ3JlYXRlc3QgZmVtYWxlIHBvcCBzaW5nZXJzIG9mIHRoZSAyMDAwcywgYnV0IHNoZSBpcyBvbmUgb2YgdGhlIGdyZWF0ZXN0IHZvY2FsaXN0cyBvZiBhbGwgdGltZS4uIApJdCdzIG5vdCBhY2N1cmF0ZS4gCkZMQVNIIEVGRkVDVCBvZiBhIGh5ZHJvZ2VuIGJvbWIgMSwwMDAgdGltZXMgbW9yZSBwb3dlcmZ1bCB0aGFuIHByZXNlbnQgYm9tYnMgd291bGQgYmUgcmVsYXRpdmVseSBncmVhdGVyIHRoYW4gaXRzIGJsYXN0IGVmZmVjdC4gVGhlIEhpcm9zaGltYSBib21iIGNhdXNlZCBmYXRhbCBidXJucyBhdCBkaXN0YW5jZXMgdXAgdG8gNCwwMDAgdG8gNSwwMDAgZmVldCAoc21hbGwgY2lyY2xlKS4gQSBoeWRyb2dlbiBib21iIHdvdWxkIGNhdXNlIGZhdGFsIGJ1cm5zIGF0IGRpc3RhbmNlcyBvZiAyMCBtaWxlcyBvciBtb3JlIChsYXJnZSBjaXJjbGUpLiBUaGUgaW5oYWJpdGFudHMgb2YgQ2hpY2FnbyBhbmQgaXRzIHN1YnVyYnMgY291bGQgdGh1cyBiZSB3aXBlZCBvdXQuCkZpbmFsbHksIGFuZCBtb3N0IGltcG9ydGFudGx5LCB0aGUgZ2FtZSBwbGF5IG1pZ2h0IGJlIGEgYml0IGZhc3QgdG8gZm9sbG93LCBhbmQgdGhlcmUgaXMgYSB2ZXJ5IGdvb2QgY2hhbmNlIHlvdSB3aWxsIGRpZSBhdCBzb21lIHBvaW50IGluIHRoZSBkdW5nZW9uLiBUaGVyZSBhcmUgNyByb29tcy4gSSBkbyBteSBiZXN0IHRvIGtlZXAgeW91IGFsaXZlIHVudGlsIGF0IGxlYXN0IHRoZSBsYXRlciByb29tcywgYnV0IG9uY2UgeW91IGFyZSAiZGVhZCIsIHlvdSBrZWVwIGdvaW5nIHRocm91Z2ggdGhlIGR1bmdlb24sIGJ1dCBhcmVuIGFsbG93ZWQgdG8gcGFydGljaXBhdGUgaW4gdGhlIHB1enpsZXMgb3IgY29tYmF0cy4gSSBkbyBoYXZlIGEgdG9rZW4gdGhhdCBhbGxvd3MgZGVhZCBwbGF5ZXJzIHRvIGNoYXQgd2l0aCBsaXZpbmcgcGxheWVycyBhdCBsZWFzdC4KVGhlcmUgaXMgYnV0IEkgZG9uJ3QgcmVtZW1iZXIuIApsaXN0ZW4gb3IgbGVhcm4gZnJvbSBlYWNoIG90aGVyClVnaCBteSBtb20gc3RhcnRlZCBmYWtlIGNyeWluZyBvbiBGYXRoZXIncyBEYXkuIApTdWRkZW5seSBhcyBJIGx5aW5nIHRoZXJlIEkgZmVlbCB3YXJtLCB3ZXQsIGxpcXVpZCBzcXVpcnQgb250byBteSBiYWNrIG92ZXIgdGhlIHRvd2VsIGFuZCBvdmVyIG15IHNpbmdsZXQuIEl0IHdhcyBhIG5vIG9pbCBtYXNzYWdlLCBhbmQgSSBoYXZlIGhhZCBhIGJveWZyaWVuZCBmb3IgdHdvIHllYXJzIGluIHRoZSBwYXN0LCBJIGtub3cgd2hhdCB0aGF0IHN0dWZmIGZlZWxzIGxpa2UgbGFuZGluZyBhbnl3aGVyZSBvbiBteSBib2R5LiBJIHRoZW4gaGVhcmQgaGltIHppcCB1cCBoaXMgcGFudHMgYW5kIGF0IHRoaXMgcG9pbnQgaW0gY29tcGxldGVseSBmcm96ZW4gYW5kIGRpc2d1c3RlZCBhbmQgc2NhcmVkIHRoaW5raW5nIGhvdyB2dWxuZXJhYmxlIEkgYW0uIApGb3IgQm9laG5lciBhbmQgdGhlIGJveXMgb24gdGhlIEdPUCBzaWRlLCBpdCB3YXMgdGhlIGdyZWF0IGxlYWRlcnNoaXAgdGVzdCBzdWJwbG90LiBIZSB3b3VsZCBwcm92ZSBob3cgdG91Z2ggaGUgd2FzLCBkZW1vbnN0cmF0ZSBoaXMgbGVhZGVyc2hpcCBtZXR0bGUsIGdldCBlcXVhbCB0aW1lIHdpdGggdGhlIHByZXNpZGVudCwgYW5kIGV2ZW4gbG9vayBwcmVzaWRlbnRpYWwuIApNeSBkYWQgd2FzIGNvbnN0YW50bHkgYXQgd29yayBvciBvbiBidXNpbmVzcyB0cmlwcy4gCkRlY2lkZWQgdG8gcmVhbGx5IHNob3cgd2hhdCB3YXMgcG9zc2libGUgaW4gT250YXJpbywgTXIuICBXaGlsZSB0aGVpciBjb21taXRtZW50IHRvIHN1c3RhaW5hYmlsaXR5IGlzIGFsd2F5cyB0b3Agb2YgbWluZCwgdGhlaXIgZm9jdXMgb24gb3JnYW5pYyBncmFwZSBncm93aW5nIGFuZCB3aW5lbWFraW5nIGlzIGVxdWFsbHkgYSBmdW5jdGlvbiBvZiB0YXN0ZS4gVGhpbmsgaXQgbWFrZXMgYmV0dGVyIHdpbmUuIApFaXRoZXIgY2FuIGJlIHNlbGYgZW1wbG95ZWQgb3IgYSBzbWFsbCBidXNpbmVzcyBvd25lci4gU2hlIHNwZWNpYWxpemVzIGluIG1lZGljYWwgYW5kIGhlYWx0aCB0b3BpY3MsIGFzIHdlbGwgYXMgY2FyZWVyIGFydGljbGVzIGFib3V0IGhlYWx0aCBjYXJlIHByb2Zlc3Npb25zLiBHcmVlbndvb2QgaG9sZHMgYW4gQXNzb2NpYXRlIG9mIFNjaWVuY2UgaW4gbnVyc2luZyBmcm9tIFNoYXN0YSBDb2xsZWdlLi4gCjI1IFBpYXp6b2xsYSBUYW5nb3MgZm9yIFRydW1wZXQgYW5kIFBpYW5vIHBkZiBlbiBlcHViIGZyZWUgMjUgUGlhenpvbGxhIFRhbmdvcyAuIExlIG1kZWNpbiBtYWxnciBsdWkgaXMgYW4gb3ByYSBjb21pcXVlIGluIHRocmVlIGFjdHMgYnkgQ2hhcmxlcyBHb3Vub2QgdG8gYSBGcmVuY2ggLiAKVGhlIENhZmV0ZXJpYSAgIEdvb2QgZm9vZC4gRmFzdC4gVGhlIG91dGxldHMgb2YgVGhlIENhZmV0ZXJpYSBzZXJ2ZSB0YXN0eSBjaG9pY2VzLCBhbmQgcGxlbnR5IG9mIHRoZW0sIHdpdGggbWluaW11bSBmdXNzIGFuZCBtYXhpbXVtIHNhdGlzZmFjdGlvbi4gSW5jbHVkZXM6IExldHR1Y2UgSGVhZCwgVG9ueSBMdWtlJ3MsIEJlbgpJIGtlZXAgaGVyIGluc2lkZSBidXQgbXkgaG91c2VtYXRlIGhhcyBiZWVuIGxldHRpbmcgaGVyIG91dCB3aGVuIEkgbm90IGhvbWUuIApUaGUgcmVzdCBvZiB0aGUgdGFyZ2V0cyB3ZXJlIHNldCBvbiBzbWFsbGVyIHByb2dyYW1zIHdpdGggaGlnaGVyIGNvbmZpZGVuY2UgbGV2ZWxzLlRoZSBjb25maWRlbmNlIHdhcyBzbyBsb3cgYmVjYXVzZSB3ZSBoYWQgY29tcGV0aXRvcnMgY29taW5nIGludG8gdGhlIHNwYWNlIHdpdGggYSBkaWZmZXJlbnQgdmFsdWUgcHJvcG9zaXRpb24gYW5kIG1hbmFnZW1lbnQgc2F3IHVzIGxvc2luZyB0aGUgYmlkLkkgc3BlbnQgYSBsYXJnZSBhbW91bnQgb2YgdGltZSBhbmQgZWZmb3J0IGJ1aWxkaW5nIGNvbmZpZGVuY2Ugd2l0aCBjdXN0b21lciBzdGFrZWhvbGRlcnMgaW4gZW5naW5lZXJpbmcsIHB1cmNoYXNpbmcsIGFuZCBwcm9ncmFtIG1hbmFnZW1lbnQuIEkgd2FzIGhlYXZpbHkgaW52b2x2ZWQgd2l0aCB0aGVpciBmYXZvcml0ZSBjaGFyaXR5LCBnb2xmZWQgd2l0aCBvdXIgcHVyY2hhc2luZyBjb3VudGVycGFydHMgYXQgb3V0aW5ncywgc2VudCB0aGVtIGVtYWlscyBhYm91dCBtYW55IG9mIHRoZSBpbXByb3ZlbWVudHMgb3VyIGNvbXBhbnkgbWFraW5nIHRvIG91ciBtYW51ZmFjdHVyaW5nIHByb2Nlc3NlcyBhbmQgdG8gb3VyIHJlc2VhcmNoIChzZW50IFNNRXMgd2hpdGVwYXBlcnMpLldoaWxlIHRoZXNlIGFjdGl2aXRpZXMga2VwdCB1cyB0b3Agb2YgbWluZCwgbXVjaCBvZiB0aGUgd29yayBpbnZvbHZlZCB3YXMgcmVhbGx5IGdldHRpbmcgb3VyIFNNRXMgaW4gZnJvbnQgb2YgdGhlaXIgU01FcyBhbmQga2VlcGluZyBwdXJjaGFzaW5nIGluIHRoZSBsb29wIGFzIG91ciBiaWQgcHJvZ3Jlc3NlZC4gCkFuZCBpbmRlZWQsIHRoaXMgaXMgdGhlIGlkZWEgYmVoaW5kIHRoZSBTZWN1cml0eSBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBwdXNoIGZvciBhbiBpbnRlZ3JhdGVkIHN0b2NrIG1hcmtldCBjYWxsZWQgdGhlIE5hdGlvbmFsIE1hcmtldCBTeXN0ZW0sIG9yIE5NUy4gCkFsbCBXYXRjaCBUaGlzISBwb3N0cyBtdXN0IGJlIHRleHQgb25seSwgb3ZlciAxNTAwIGNoYXJhY3RlcnMsIGFuZCBpbmNsdWRlIFtXVCFdIGluIHRoZSBzdWJqZWN0LgpJIHJlYWxpemUgdGhhdCB0aGVyZSBhIGxvdCBvZiBhbnRpIFNwYW5pc2ggc3BlYWtlcnMgdGhvdWdodCBpbiB0aGlzIGNvdW50cnkgcmlnaHQgbm93LCBidXQgdHJ5IGNoYW5naW5nIHRoZSB2YXJpYWJsZXMuIElmIHRoZSBjb252ZXJzYXRpb24gd2VyZSBnb2luZyBvbiBiZXR3ZWVuIHR3byBTd2VkaXNoIHNwZWFraW5nIG9yIFN3YWhpbGkgc3BlYWtpbmcgb3IgS2xpbmdvbiBzcGVha2luZyBzdHVkZW50cywgd291bGQgYSBzaW1pbGFyIHB1bmlzaG1lbnQgaGF2ZSBiZWVuIGRlbGl2ZXJlZD8KT2xkIFJpeWEgUmFqa3VtYXIgaW4gQnJhbXB0b24KSSBub3RpY2UgaG93IG11Y2ggYmV0dGVyIHBlb3BsZSBzZWVtIHRvIHRyZWF0IG1lIHRoYW4gdGhleSB0cmVhdCBvdGhlciBpbW1pZ3JhbnRzIGZyb20gSW5kaWEsIENoaW5hLCBUdXJrZXksIGVjdC4gCkZpbGVkIFVuZGVyOiBMb2NhbCwgUGhvdG8gR2FsbGVyaWVzClRoZXkgYWxzbyBrbm93IE5hdG8gbG9naXN0aWNhbCBzdXBwbHkgbGluZSB0byBLYWJ1bCBydW5zIHRocm91Z2ggS2FyYWNoaSAobW9yZSB0aGFuIGhhbGYgb2YgZXZlcnl0aGluZyBOYXRvIGVhdHMsIGRyaW5rcywgYW5kIHNob290cyBhcnJpdmVzIHZpYSBLYXJhY2hpIGRlc3BpdGUgaW50ZW5zZSBlZmZvcnRzIHRvIGZpbmQgYWx0ZXJuYXRpdmVzKS4KSW4gQWxiZXJ0YSwgYSBjb3VwbGUgd2UgY2FsbCBNYXJ5LCAzNywgYW5kIFJhbHBoLCA0NSwgYXJlIHJhaXNpbmcgdGhlaXIgY2hpbGQsIEV0aGFuLCBhZ2UgMi4gQm90aCByZXNlYXJjaGVycyBpbiBjb21tdW5pY2F0aW9ucywgdGhleSBicmluZyBob21lICQ4LDU2MyBwZXIgbW9udGggYW5kIGFkZCAkMTI1IGZyb20gdGhlIENhbmFkYSBDaGlsZCBCZW5lZml0IGZvciB0b3RhbCBtb250aGx5IGRpc3Bvc2FibGUgaW5jb21lIG9mICQ4LDY4OCBwZXIgbW9udGguIFRoZXkgbG9vayBmb3J3YXJkIHRvIG1vdmluZyBmcm9tIHRoZWlyIHByZXNlbnQgJDM4MCwwMDAgY29uZG8gdG8gYSAkNTAwLDAwMCBob3VzZSwgYnV0IHRoZXkgaGVzaXRhdGUgZm9yIGZlYXIgdGhhdCB0aGVpciBtZWFucyB3aWxsIG5vdCBzdXBwb3J0IGl0LiAKU29tZSBtZXNzYWdlcyBhbHNvIGltcGx5IHRoYXQgS2lyayBiZWxpZXZlcyB0aGF0IHNoZSB3YXMgdXNlZCB0byBoZWxwIGNsb3NlIHRoZSAkNDUwIG1pbGxpb24gY28gZmluYW5jaW5nIGRlYWwgZm9yIFBhY2tlciBhbmQgUmF0bmVyJ3MgUmF0UGFjIEVudGVydGFpbm1lbnQuCkhlIGlzIGNoZWNraW5nIHRoZSB0dXJuIHdpdGggYSBoYW5kIHdpdGggc2hvd2Rvd24gdmFsdWUuIApKb2IgUmVxdWlyZW1lbnRzIEluZGl2aWR1YWwgcmVxdWlyZW1lbnRzIHZhcnkgYnkgc3RhdGUgYW5kIGNvcnJlY3Rpb25hbCBmYWNpbGl0eSwgYnV0IHRoZXJhcGlzdHMgYXJlIG9mdGVuIHJlcXVpcmVkIHRvIHBhc3Mgb3JhbCBhbmQgd3JpdHRlbiBjb21wZXRlbmN5IGV4YW1zLCBhIGRydWcgdGVzdCBhbmQgYSBiYWNrZ3JvdW5kIHRlc3QuIAoxLiAKQW5kIENvcm5lbGwgc29jaW9sb2d5IGRvY3RvcmFsIHN0dWRlbnQgS3lsZSBTaWxlciwgc2FpZCB0aGF0IHRoZSBsaWtlbHkgcmVhc29uIGZvciBzdWNoIGEgdHJlbmQgY291bGQgYmUgdGhhdCB0aGUgbXVsdGlwbGUgd2lucyBhcmUgbGlrZWx5IGZvciBzbWFsbCBzdGFrZXMsIGFuZCB0aGUgbW9yZSB5b3UgcGxheSwgdGhlIG1vcmUgbGlrZWx5IHlvdSB3aWxsIGV2ZW50dWFsbHkgYmUgd2FsbG9wZWQgYnkgb2NjYXNpb25hbCA/IiBidXQgc2lnbmlmaWNhbnQgPyIgbG9zc2VzLgpZZXMsIHRoZXJlIGEgZ3JlYXQgbWl4IG9mIHBhY2VzIGZyb20gM2hyIGZvbGtzIGFsbCB0aGUgd2F5IHRvIDUrcnVuL3dhbGsgZ3JvdXBzLiBJIHdhcyBpbiBvbmUgb2YgdGhlIHNsb3dlc3QgcnVuIGdyb3VwcyBsYXN0IGZhbGwgKGFuZCB3YXMgdXN1YWxseSB0aGUgb25seSBndXkgaW4gbXkgZ3JvdXApLiBJIGZvdW5kIHRoYXQgYmVpbmcgcHV0IGludG8gYSBwYWNpbmcgZ3JvdXAgKGJhc2VkIG9uIHJlY2VudCByYWNlIHJlc3VsdHMpIGhlbHBlZCBtZSB3aXRoIHBhY2luZyBpc3N1ZXMgYSBsb3QuIApPZnRlbiwgZW1wbG95ZXJzIGFyZSB3aWxsaW5nIHRvIGZvb3QgdGhlIGJpbGwgYmVjYXVzZSBoZWFsdGggYW5kIHdlbGxuZXNzIGRpcmVjdGx5IGFmZmVjdCBwcm9kdWN0aXZpdHkgYW5kIHByb2ZpdHMuLiAKSSB3b3VsZCBzdGF5IGluIGRlYXJpbSBkb25nIG5ldyBhcnQgdG93biwgaGl0IHVwIGNoYW5nZGVva2d1bmcgYW5kIHRoZSBjYWZlcyBiZWhpbmQgZ3lvbmdib2tndW5nLiAKSSBkaWRuIGtub3cgaG93IGJhZGx5IGl0IHdhcyBnb2luZyB0byBodXJ0IHVudGlsIHdlIHdlcmUgYWN0dWFsbHkgZnVsbHkgaW50aW1hdGUgICBhbmQgbWFycmllZCwgc28gdGhlcmUgd2FzIG5vIGVuZGluZyB0aGUgcmVsYXRpb25zaGlwIGJlZm9yZSBpdCBwcm9ncmVzc2VkLCBhbHRob3VnaCBJIGxvdmVkIGhpbSBzbyBtdWNoIGV2ZW4gdGhlbiwgYW5kIGl0IGZlbHQgc28gZGVzdGluZWQgdGhhdCBJIGNhbiBpbWFnaW5lIEkgd291bGQgaGF2ZSBlaXRoZXIgd2F5LiAKQW5kIHRoZXkgc3VjY2VlZGVkLiAKVGhpcyBoYXMgY2hhbmdlZCB0aGUgdmlld3Mgb2YgdGhlIHNwb3J0cyBtZXJjaGFudHMgYXQgdGhlIHNhbWUgdGltZS4gClN0cmV0Y2ggZ29hbDogc29tZXRoaW5nIGFraW4gdG8gYSBzeW5jIGtpbGwgZGF3biBvZiB3YXIgdXNlZCB0byBkby4gQSBmbGFzaHkgYXMgZnVjayB3YXkgdG8ga2lsbCBlbmVtaWVzLgpJIGRvIGZlZWwgbGlrZSBpbiBhIGNvdXBsZSB5ZWFycyBtb3N0IGNhZmVzIGFyZSBnb2luZyB0byBiZSBtb3N0bHkgc2VsZiBvcmRlciBraW9za3Mgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHRoZSB0cmFkaXRpb25zIGRpbmluZyBoYWxscy4gCkFsc28sIEkgZmVsdCBsaWtlIGluc3RhbGxpbmcgdGhlIHJhZGlvIHdhcyBwcmV0dHkgc3RyYWlnaHQgZm9yd2FyZC4gSSBhIGJpdCBjb25mdXNlZCB3aHkgaXQgc291bmRzIGxpa2UgdGhlcmUgc28gbXVjaCByb29tIGZvciBlcnJvcnMuIEl0IGZlbHQgbGlrZSB0aGUgcG93ZXIgYnV0dG9uIHRoaW5neSBvbiBhIGNvbXB1dGVyLiAKUHJvbW90aW9ucyBhcmUgYXZhaWxlZCB0byBwbGF5ZXJzIG9uIGEgd2Vla2x5IGJhc2lzLiAKRjNmIGlzIHN0aWxsICs1IG1hbi4gSG9uZXN0bHkgaGVyIGJlc3QgY29tYm8gc3RhcnRlcnMgYXJlIG1hZ2ljIDQgYW5kIGZmNC4gSGVyIHB1bmlzaGVzIGFyZSBoZWxsYSBnb29kIGFuZCBodXJ0IGxpa2UgaGVsbCwgaSBsaWtlIHRvIHVzZSBkYjQsIGRmMSBhbmQgMywyIChvbmx5IGlmIGkga25vdyBpdHMgZ29ubmEgY29ubmVjdCkgYWxvdC4KSSBhbHNvIHNwZW5kIGxlc3MgdGltZSB0cnlpbmcgdG8gY2hhbmdlIG90aGVyIHBlb3BsZSAoSSBob3BlISkgYW5kIG1vcmUgdGltZSBtb2R1bGF0aW5nIG15IG93biByZXNwb25zZXMuLiAKSSBnb2luZyB0byBwbGF5IDI1ayBhdCAyNW5sLCBvciB1bnRpbCBJIGhpdCBhIDMwIDM1Qkkgcm9sbCBmb3IgNTBubCwgdGFrZSBhIHdlZWsgb2ZmIGZvciBkZWRpY2F0ZWQgYW5hbHlzaXMsIGFuZCBtb3ZlIHVwLiBJIHdpbGwgY29udGludWUgbXkgZGVkaWNhdGVkIHN0dWR5IGFsb25nIHRoZSB3YXkuClRoZSBFY29ub21pc3QgYXJ0aWNsZSBub3RlcyB0aGF0ICJvbmx5IDclIG9mIGdyYWR1YXRlcyBmcm9tIEluZGlhJ3MgNSw1MDAgYnVzaW5lc3Mgc2Nob29scyBhcmUgZW1wbG95YWJsZSB1cG9uIGdyYWR1YXRpb24iLi4gCk5vdCBleGFjdGx5IG1hbGljaW91cyBjb21wbGlhbmNlIGJ1dCBoZXIgZmFjZSB3aGVuIHNoZSBjYW1lIGJhY2sgdG8gZ2V0IG1lIHdhcyBwcmljZWxlc3MuLiAKQmVhdG9uIG1vdGhlciwgUGF1bGEsIGFsc28gc3RydWdnbGVzIHRvIGtlZXAgaGVyc2VsZiBncm91bmRlZC4KU29uZ3MgZnJvbSBoZXIgc2VsZiB0aXRsZWQgdGhpcmQgYWxidW0gcnVsZWQgdGhlIEhvdCAxMDAgZWFybHkgaW4gdGhlIGRlY2FkZSwgYmVmb3JlIGFuZCBhZnRlciBoZXIgdHJhZ2ljIHBhc3NpbmcgaW4gMjAwMS4gCkluIG1ham9yIGNpdGllcyBJTEEgaXMgb25lIG9mIFZpZXRuYW0gYmV0dGVyIGtub3cgY29tcGFuaWVzLCB0aGF0IG9uZSBvZiB0aGUgcmVhc29ucyBpdCBzY29yZXMgT0sgaGVyZSwgcGVvcGxlIGhhdmUgaGVhcmQgb2YgaXQgYW5kIHRoaW5rIGl0IHdvdWxkIGJlIGEgZ29vZCBwbGFjZSB0byB3b3JrLiBEb2VzbiBtZWFuIGl0IGlzLCBiaWdnZXIgaXNuIGFsd2F5cyBiZXR0ZXIuClByb2JhYmx5IGV2ZW4gbGVzcyB0aGFuIHRoYXQgYmVjYXVzZSBJIGRvbiBldmVuIHRoaW5rIHRoZXkgcmVwb3J0IHRob3NlIHRpY2tldCBub24gcGF5bWVudCB0byBjcmVkaXQgYnVyZWF1LiBBbHNvIG5leHQgdGltZSBkb24gZ2l2ZSB0aGVtIHlvdXIgSUQgdGhvc2UgZmFyZSBlbmZvcmNlbWVudCBwZW9wbGUgYXJlIG5vdCBwb2xpY2Ugb2ZmaWNlcnMgdGhleSBjYW4gbm90IGRldGFpbiB5b3UgaW4gYW55IHdheS4gCltzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgNCBtaW51dGVzIGFnb0JlZm9yZSBteSBodXNiYW5kIHNhaWQgaXQsIGhlIHdhcyBjbGVhcmx5IG1vcmUgYW5kIG1vcmUgZW50aHVzaWFzdGljIGFib3V0IHRhbGtpbmcgdG8gbWUgZXZlcnkgdGltZS4gQ29udmVyc2F0aW9uIGZsb3dlZCBtb3JlIGFuZCBtb3JlIGVhc2lseSBhbmQgZ290IGJvdGggbW9yZSBmdW4gYW5kIGxpZ2h0IGhlYXJ0ZWQgYW5kIG1vcmUgbWVhbmluZ2Z1bC4gClRoYW5rIHlvdSBEci4gRGFuIE11cnBoeSBmb3IgdGhpcyBhcnRpY2xlLgpJIG5ldmVyIGV2ZW4gYm91Z2h0IHRoYXQgc2hlIHdhcyBhdCBoaXMgYXBhcnRtZW50LiBUaGVyZSBpc24gYW55IGV2aWRlbmNlIGZvciBpdC4gSGUgd2FzIHRoZSBvbmUgdGhhdCB3YXMgbWFraW5nIHBsYW5zIGFuZCBnb2luZyBvdXQgb2YgaGlzIHdheSB0byBiZSBhcm91bmQgaGVyIGluIHRoZSB3ZWVrcyBsZWFkaW5nIHVwIHRvIGhlciBhYmR1Y3Rpb24uIApUaGUgZ3JhdmVsIG92ZXIgbXkgc2VwdGljIHRhbmsgaXNudCBhIHByb2JsZW0gZm9yIHRoZSBsb2NhbCBsYXcuIGFzIGxvbmcgYXMgaSBkb250IHBlcm1hbmVudGx5IGNvdmVyIGl0IHdpdGggc29tZXRoaW5nIGxpa2UsIGNvbmNyZXRlLCBvciBhIGJ1aWxkaW5nLiB0aGUgdG93bnNoaXAgcmVhbGx5IGRvbnQgY2FyZSB3aGF0IGkgZG8gb24gbXkgcHJvcGVydHkuIGFzIGkgc2FpZCAsIGkgbGl2ZSBpbiBhIHByZXR0eSBzbWFsbCBhcmVhLCB0aGUgbGF3cyBhcmVudCByZWFsbHkgdmFzdC4gd2hpY2ggaXMgdGhlIG9ubHkgcmVhc29uIG15IG5laWdoYm9yIGhhcyBiZWVuIGFibGUgdG8gZ2V0IGF3YXkgd2l0aCBsZXR0aW5nIGhlciBkb2cgZnJlZSByb2FtLgo=|<---