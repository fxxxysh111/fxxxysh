--->|SWYgeW91IHdhbnQgdG8gd2luIGV2ZXJ5IGdhbWUgb2YgYSBwbGF5aW5nIGNhcmQsIHRoaXMgRGl3YWxpIHRoZW4gdXNlIEhpZGRlbiBsZW5zIGZvciBwbGF5aW5nIGNhcmRzLFBsYXlpbmcgY2FyZHMgU29vdGggU2F5ZXIsUG9rZXIgY2hlYXQgY29udGFjdCBMZW5zLCBIaWRkZW4gbGVucyBpbiBQaG9uZSwgY2hlYXRpbmcgcGxheWluZyBjYXJkcyBhbmQgbWFya2VkIGNhcmQuCkJlc2lkZXMgYSBoYWxmIHNjYWxlIHJlY3JlYXRpb24gb2YgdGhlIEVpZmZlbCBUb3dlciwgd2hpY2ggaXMgZXF1aXZhbGVudCB0byBhIDM4IHN0b3JleSBidWlsZGluZywgdGhlIEZyZW5jaCBlbGVtZW50IGlzIHZpc2libGUgaW4gdGhlIHJlc3RhdXJhbnRzIHRoYXQgb2ZmZXIgY3Vpc2luZSB0eXBpY2FsIG9mIHRoZSBvZiBsaWdodHMgYWxvbmdzaWRlIHRoZSBjYWtlcyBhbmQgcGF0aXNzZXJpZXMuIFRoZSBhcmNoaXRlY3R1cmUgYm9hc3RzIG9mIGEgZG9tZSBpbnNwaXJlZCBmcm9tIEwgTmF0aW9uYWwgZGVzIEludmFsaWRlcywgYSB3YXRlciBmb3VudGFpbiBpbnNwaXJlZCBmcm9tIEZvbnRhaW5lIGRlcyBNZXJzLCBnaWxkZWQgZG9vcnMgYW5kIGZhY2FkZSBpbnNwaXJlZCBmcm9tIFBhbGFpcyBHYXJuaWVyIGFuZCBhIGh1Z2Ugc2hvcHBpbmcgYXJlYSBvZmZlcmluZyB0aGUgbGF0ZXN0IGluIGZhc2hpb24uIApXZSBnb3QgaXQgZnJlZSBhYm91dCB0ZW4geWVhcnMgYWdvIGZyb20gYSBjaHVyY2ggdGhhdCB3YXMgdXBncmFkaW5nIHRoZWlyIG93bi4uIApMZWFuIG9uIGxvdmVkIG9uZXMgaW4gdGhpcyBkaWZmaWN1bHQgdGltZS4gCkVhY2ggd291bGQgbGlrZSB0aGUgdmVoaWNsZSB0byBwcm92aWRlIHRoZSBtYXhpbXVtIHByb3RlY3Rpb24gZm9yIHRoZSBvY2N1cGFudCB3aXRoIHRoZSBtaW5pbXVtIG1hdGVyaWFsIGRhbWFnZSB0byB0aGUgdmVoaWNsZXMgZHVyaW5nIGEgY29sbGlzaW9uLgoiSSB0cmllZCB0byBhdm9pZCB0YWtpbmcgYmxvb2QgcHJlc3N1cmUgbWVkaWNhdGlvbiB0aGF0IHdlcmUgcmVjb21tZW5kZWQuIiBoZSBzYWlkLiAKQnVybnR3aW5nIHUKSSBlYXQgYW4gb3JnYW5pYyBkaWV0IGFuZCBubyBzdWdhciBvciBjYWZmZWluZSB3aGljaCBhZ2dyYXZhdGUgbWVudGFsIGlsbG5lc3MuIFRoYXQgc2FpZCwgYXMgc29tZW9uZSB3aG8gaXMgdmVyeSBjbG9zZSB0byBoZXIgb2xkZXIgc2lzdGVyIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCB3ZSBub3cgbGl2ZSBvdmVyIDEsMDAwIG1pbGVzIGFwYXJ0LCBJIGhpZ2hseSByZWNvbW1lbmQgdGhhdCB5b3UgdHJ5IHRvIGRvIHRoZSBmb2xsb3dpbmcgMTEgdGhpbmdzIHdpdGggeW91ciBzaXN0ZXIgYmVmb3JlIHRoZSB0d28gb2YgeW91IHJlYWNoIDMwLiAKSSBqdXN0IGNyeS4gTXkgZmlyc3QgY2hpbGQgd2FzIGEgbGl0dGxlIGdpcmwsIGFuZCB3ZSBsb3N0IGhlciBhdCAxOCBtb250aHMgdG8gdW5leHNwYWluZWQgaGVhcnQgZmFpbHVyZShIYXBwZW5lZCBhdCBkYXljYXJlLikgQmVjYXVzZSBvZiBteSBzb25zIGhlYXJ0IHByb2JsZW0sIHdlJ3ZlIGNvbWUgdmVyeSBjbG9zZSB0byBsb3NpbmcgaGltIGEgZmV3IHRpbWVzLiAKSHVudGluZyBhcyBhIG1lYW5zIHRvIGZlZWQgYW5kIHByb3ZpZGUgZm9yIHlvdXIgZmFtaWx5IGlzIGEgbmF0dXJhbCBhY3QsIGJ1dCBrbm93bGVkZ2UgYWJvdXQgaXQgaXMgYmVnaW5uaW5nIHRvIGZhZGUgZnJvbSBvdXIgc29jaWV0eS4gU28sIGJlbG93IHdlIHdpbGwgZGlzY3VzcyBob3cgdG8gaHVudCBhIGRlZXIgYW5kIHVzZSBldmVyeSBzaW5nbGUgcGFydCBvZiB0aGUgYW5pbWFsIGZvciBhIGJlbmVmaXQgdG8geW91cnNlbGYgYW5kIHRoZSBsYW5kLi4gCkxvdmUgMyBURHMgbGVhZCBTdGFuZm9yZCBwYXN0IE5vLiA5IFdhc2hpbmd0b24gMzAgMjJXYXNoaW5ndG9uIHYgU3RhbmZvcmRQQUxPIEFMVE8sIENBICAgTk9WRU1CRVIgMTA6IE15bGVzIEdhc2tpbiA5IG9mIHRoZSBXYXNoaW5ndG9uIEh1c2tpZXMgaXMgdGFja2xlZCBieSBRdWVudG9uIE1lZWtzIDI0IG9mIHRoZSBTdGFuZm9yZCBDYXJkaW5hbCBhdCBTdGFuZm9yZCBTdGFkaXVtIG9uIE5vdmVtYmVyIDEwLCAyMDE3IGluIFBhbG8gQWx0bywgQ2FsaWZvcm5pYS4gCk5vdCBqdXN0LCAiaG93IGRpZCB0aGUgZ3Jvd3RoIG9mIGludGVybmF0aW9uYWwgdHJhZGUgY29udHJpYnV0ZSB0byB0aGUgZW1waXJlIGxhdGVyIHdlYWtuZXNzPyIgYnV0ICJob3cgZGlkIHRoZSBncm93dGggb2YgaW50ZXJuYXRpb25hbCB0cmFkZSBpbXBhY3QgY29udGVtcG9yYXJ5IE90dG9tYW4gc29jaWV0eT8iLiAKSGUgd291bGQgY2xhaW0gbm90IHRvIHJlbWVtYmVyIGhlciBiZWNhdXNlIGhlIHdhcyBmb2N1c2luZyBvbiBoaXMgc3R1ZGllcy4gClRoZXkgaGFkIG5vIGlkZWEgdGhhdCBoZSB3YXMgbWFycmllZCwgdGhhdCBoZSBoYWQgYSBzb24uIApBIHJlcGxhY2VtZW50IHJlc2lzdG9yIGFzc2VtYmx5IHJ1bnMgYWJvdXQgJDMwIGFuZCBpcyBwcmV0dHkgZWFzeSB0byByZXBsYWNlLiBJZiBpdCBmYWlscyBhZ2FpbiwgeW91IHNob3VsZCBwcm9iYWJseSBjaGVjayB0aGUgY3VycmVudCBkcmF3IG9mIHRoZSBibG93ZXIgbW90b3IuIChJZiB5b3UnciBoYW5keSwgeW91IGNhbiBhbHNvIHJlcGFpciBpdCB5b3Vyc2VsZiBmb3IgYSBjb3VwbGUgb2YgYnVja3MgYnkgZ2V0dGluZyBhIHRoZXJtYWwgZnVzZSBmcm9tIFJhZGlvIFNoYWNrIGFuZCBjcmltcGluZyBpdCBpbiBwbGFjZSBvZiB0aGUgb2xkIGZ1c2UuIChUaGVzZSB0aGVybWFsIGZ1c2VzIGFyZSBpbnNpZGUgc2V2ZXJhbCBhcHBsaWFuY2VzLCBzdWNoIGFzIG1pY3Jvd2F2ZXMgdG8gcHJvdGVjdCB0aGVtIGZyb20gZ2V0dGluZyB0b28gaG90LikgKEl0IGlzIGluc2lkZSB0aGUgYXNzZW1ibHkgICBiZW5kIHRoZSBmb3VyIHRhbmdzIHN0cmFpZ2h0IGFuZCBwdWxsIHRoZSBjb3ZlciBvZmYgZm9yIGFjY2VzczsgYmUgc3VyZSB0byBwdXQgaXQgYmFjayB0b2dldGhlci4pIChGdWxsIEFuc3dlcikKQnV0IHBlciBhbiBlZGljdCBmcm9tIFN0ZXBoYW5pZSBNY01haG9uIHRoaXMgd2VlaywgYSBsb3NzIHdvdWxkIGN1dCBoZXIgb3V0IG9mIHRoZSBwaWN0dXJlIGFuZCBsZWF2ZSBGbGFpciB0byBmYWNlIHRoZSBjdXJyZW50IGNoYW1waW9uIG9uZSBvbiBvbmUuLiAKTGV3ZXJrZSByYWxsaWVzIE1pY2hpZ2FuIFN0YXRlIG92ZXIgTm8KSW4gaGVyIGNhc2UgSSB0aGluayBpZiBzaGUgaGFkIHNpZ25lZCBwb3dlciBvZiBhdHRvcm5leSB0byBhbnlib2R5IGl0IHdvdWxkIGhhdmUgYmVlbiBDdXJyeSwgd2hvIGxpa2VseSB3b3VsZCBoYXZlIGFsbG93ZWQgaGVyIHRvIGNvbWUgaG9tZSBiYXNlZCBvbiB3aGF0IGp1c3QgaGFwcGVuZWQuIApCZWluZ3MgaGlzIGZhbWlseSBoYWQgbm8gaWRlYSB0aGF0IGhpcyBwaG9uZSB3YXMgaW4gaGlzIGFzcywgdmlicmF0aW9uIG9uLCB0aGV5IGJlZ2luIGNhbGxpbmcgaGltIG9uZSBhZnRlciBhbm90aGVyLiBUaGlzIGNhdXNlcyB0aGUgcGhvbmUgdG8gd3JpZ2dsZSBmdXJ0aGVyIHVwd2FyZHMgaW50byB0aGUgcGF0aWVudCwgcHJvbXB0aW5nIGVtZXJnZW5jeSBzdXJnZXJ5IGFuZCBzb21lIHZlcnkuIAoiSWYgdGhlIGNvbW11bml0eSBsaWtlcyBpdCwgYW5kIHRoZXkgY29tZSwgdGhleSByaWRlIGF0IHRoZSBjb252ZW50aW9uIGNlbnRyZSBhbmQgdGhleSBzYXkgJ1RoaXMgaXMgZ3JlYXQuIEl0J3MgY29tZm9ydGFibGUuIEl0J3MgZmFzdC4gSXQncyBhd2Vzb21lLicgV2VsbCwgdGhlcmUgYXJlIG90aGVyIHBsYWNlcyBpdCBjYW4gZ28sIiBEYXZpcyBzYWlkLgpTdHJhdGVneSBhcmUgdmVyeSBpbXBvcnRhbnQgdG8gcGxheSB0aGUgZ2FtZS4gCkEgZmV3IGhpZ2hsaWdodHM6IEJ1cmdlciBLaW5nIHNlcnZlcyB1cCBhIGZyZXNoIDE1IHNlY29uZCBjdXQgb2YgYSBzcG90IGZvciBpdHMgSGFsbG93ZWVuIHRoZW1lZCBOaWdodG1hcmUgS2luZyBidXJnZXIgKEFkIEFnZSdzIEFsZXhhbmRyYSBKYXJkaW5lIHByZXZpZXdlZCB0aGUgY2FtcGFpZ24gbGFzdCB3ZWVrLikgQ2FsbCBvZiBEdXR5OiBCbGFjayBPcHMgNCBnZXRzIGh5cGVkIGluIGEgY2luZW1hdGljIFBsYXlTdGF0aW9uIGFkLiBBbmQgVGlkZSBzZXJ2ZXMgdXAgYSBjb3VwbGUgbW9yZSBvZiBpdHMgbWV0YSBUaWRlIGFkcyBvbmUgc3RhcnJpbmcgVHJveSBBaWttYW4gYW5kIE1pa2UgUGVyZWlyYSwgdGhlIG90aGVyIHN0YXJyaW5nIERlc2hhdW4gV2F0c29uIHRoYXQgYXJlIGFib3V0IFRpZGUgYWRzLgpUaGVyZSB3aWxsIGJlIG90aGVyIGhpa2Vycy4gCkluIGRpZmZlcmVudCBlcmEncyB0aGVyZSBvYnZpb3VzbHkgYXJlIGRpZmZlcmVudCB2aW9saW5pc3RzIHdobyBjYW4gYmUgY29uc2lkZXJlZCBhcyB0aGUgbW9zdCBmYW1vdXMgaW4gdGhlIHdvcmxkLiBJdCdzIGxpa2Ugd2l0aCBtdXNpYyBpbiBnZW5lcmFsIHRoYXQgb25lIG1pZ2h0IGxpa2UgdGhlIHZpcnR1b3NpdHkgb2Ygb25lIHBlcmZvcm1lciBvdmVyIHRoZSBvdGhlci4gCkkgaGF2ZSByaWRpY3Vsb3VzIGFueGlldHkuIApUaGUgYnVpbGRpbmcgaXMgc2l0dWF0ZWQgbmV4dCB0byB0aGUgbGFrZSwgYW5kIHRoZSB2aWV3IGlzIHJlYWxseSBuaWNlLiBGb3IgbWUgaXQgd2FzIHZlcnkgY29uZnVzaW5nLCBidXQgSSB3YXMgb25seSB0aGVyZSBmb3IgYSBmZXcgZGF5cy4gClJlYWRpbmcgYSBzb2xpZCBwb2tlciByZXZpZXcgb2YgdGhpcyB0eXBlIHdpbGwgZ3JhbnQgeW91IHRoZSBvcHBvcnR1bml0eSB0byBicm93c2UgdGhyb3VnaCBhIG11bHRpdHVkZSBvZiBvbmxpbmUgcG9rZXIgYm9udXNlcyB0aGF0IHN1aXQgeW91ciBwcmVmZXJlbmNlcyB3aXRoaW4ganVzdCBhIGZldyBtaW51dGVzIG9mIHlvdSB0aW1lLiAKQnV0IGFsbW9zdCBhbnkgb3RoZXIgdGltZSB0aGlzIGhhbmQgc3VmZmVycyBmcm9tIG1hc3NpdmUgcmV2ZXJzZSBpbXBsaWVkIG9kZHMuIApKJ2FpIHQgY29udmllICBwYXJ0aWNpcGVyICBsJ21pc3Npb24gR3JhbmQgQmllbiBWb3VzIEZhc3NlIHN1ciBGcmFuY2UgSW50ZXIsIHBvdXIgcGFybGVyIGRlcyB0eXJhbm5pZXMgYWxpbWVudGFpcmVzLCBzdWpldCBxdWkgbSdlc3QgY2hlciwgY2YgbGUgc291cyB0aXRyZSBkZSBtb24gbGl2cmUuIFVuZSBkZSBtZXMgcGhyYXNlcyBxdWkgYSB0IHBhcnRhZ2UgZXQgdm91cyBkb25uZSB1bmUgaWRlIGR1IGNvbnRlbnUgOiAiTCdhbGltZW50YXRpb24gcGFyZmFpdGUgbidleGlzdGUgcGFzLCBpbCBmYXV0IG1hbmdlciBkZSB0b3V0LCBzZSBsaWJyZXIgbGEgdHRlIGRlIHRvdXRlcyBsZXMgaW5qb25jdGlvbnMsIHNlIGZhaXJlIGNvbmZpYW5jZSwgbmUgcGFzIGF2b2lyIHBldXIgZGUgbGEgbGliZXJ0IGFsaW1lbnRhaXJlIi4uIApJIGFncmVlIEkgZG9uIHdhbnQgdG8gYnVpbGQgYSBodWdlIHBvdCB3aXRoIFRUIG91dCBvZiBwb3NpdGlvbiB0byAyIG9mIHRoZSAzLiAKUGVvcGxlIGxpa2UgeW91IHdobyBhcmUgc28gaG9wZWxlc3NseSBkZXBlbmRlbnQgb24gdGhlIHN5c3RlbSB0ZW5kIHRvIGRvIHNvIHdoZW4geW91IHRoaW5rIGl0IGJlaW5nIHRocmVhdGVuZWQuIApOb3cgaXMgbm90IHRoZSB0aW1lIHRvIGJ1eSwgdGhlIHRpbWUgdG8gYnV5IGEgc3RvY2sgaXMgd2hlbiBpdCBpcyB0cmVuZGluZyB1cC4uIApXZSBrbm93IGJldHRlciB0aGFuIGFueW9uZSB5b3UgZG9uJ3QgZGVjaWRlIHdoYXQgc29tZW9uZSBjYWxscyB5b3UgYmFzZWQgb24gc29tZSBpbnRlcm5hbCBmb3JjZS4gSXQncyBvdXRzaWRlIG9mIHlvdXIgY29udHJvbC4gV2hhdCB5b3UgZG8gY29udHJvbCBpcyB3aGF0IHlvdSBnaXZlIHRvIHRoZSB3b3JsZC4KR3V5IHNpdHMgZG93biBmb3IgbWF5YmUgMyBob3VycyB3aXRoIHVzLCBjbGVhcnMgdGhlIGVudGlyZSB0YWJsZSBvZiB0aGVpciBoaWdoZXIgZGVub21pbmF0aW9ucywgZ2V0cyBhIGNoaXAgZmlsbCwgYW5kIHRoZW4gYW5vdGhlciwgYW5kIHRoZW4gYW5vdGhlci4gTG9zdCBtYXliZSAzIG9yIDQgaGFuZHMuIFRpcHMgdGhlIGRlYWxlciAkMTAwIGFuZCB3YWxrcyBhd2F5IHdpdGggc29tZXdoZXJlIGFyb3VuZCA1NmssIGluIFdlbmRvdmVyIGxvbC4uIApIZSBnaXZlcyBhIGJyaWVmIGJhY2tncm91bmQgZm9yIHRoZSBmaXJzdCA2IG1pbnV0ZXMuIElmIHlvdSBmaW5kIHlvdXJzZWxmIGNvbXBlbGxlZCB0byBkbyBzbyBJIHJlY29tbWVuZCBmaW5pc2hpbmcgdmlkZW8uIEhlIG1ha2VzIGl0IHZlcnkgY2xlYXIgdGhhdCBoZSBnaXZpbmcgaGlzIG93biBwZXJzb25hbCBleHBlcmllbmNlLCBhbmQgdGhhdCBvZiBoaXMgZGF1Z2h0ZXIuIEZyb20gdGhlIHBvaW50IG9mIGFuIHVuaW5mb3JtZWQgY2l0aXplbiBhbmQgbm90aGluZyBtb3JlLgpUaGUgYmVzdCB3YXMgdGhlIHJvYWQgYnkgaGlzIGhvdXNlLCBpdCB3YXMgdGhlIHJpdmVyLCBhbmQgd2hlbmV2ZXIgYSBjYXIgd291bGQgZ28gYnkgaXQgd291bGQgcmVwcmVzZW50IHNvbWUgU2FoYWdzICh3YXRlciBtb25zdGVycykganVtcGluZyBvdXQuIApIaXMgYnVzdG91dCBoYW5kIGluIHRoZSAkNSBGVCB3YXMgYW5vdGhlciB0aGF0IHNlZW1lZCBzcG90dHkgdG8gbWUuIEFzIDIgaW4gY2hpcHMsIGhlIHNob3ZlZCBBVHMgVVRHIGludG8gdGhlIGNoaXAgbGVhZGVyIEJCIGFuZCBnb3QgY2FsbGVkL2J1c3RlZCBieSB0aGUgQkIgODguIEkga25vdyBoZSB3YXMgdW5sdWNreSBoZXJlIHRvIG5vdCBvbmx5IGdldCBjYWxsZWQsIGJ1dCBhbHNvIHRvIGxvc2UgdGhlIGZsaXAuIEFsbCB0aGUgc2FtZSwgd2hlbiB0aGUgb25seSBzdGFjayB0aGF0IGNvdmVycyB5b3UgaXMgaW4gdGhlIEJCLCB3b3VsZG4gYSBtaW4gcmFpc2UgYmUgd2lzZXIgdGhlcmU/CiAxNSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBob3VycyBhZ29BIGZldyBwZW9wbGUgZnJvbSBteSBncm91cCBzdGFydGVkIHNuZWFraW5nIFplbGRhIHJlZmVyZW5jZXMgaW50byBvdXIgZ2FtZSwgc28gaGVyZSBteSBjb250cmlidXRpb24sICJXdWxmIiB0aGUgc2hpZnRlciBkcnVpZCEgSGUgYmFzZWQgb24gTGluayBmcm9tIFR3aWxpZ2h0IFByaW5jZXNzLCBhbmQgaGUgdXNpbmcgYSBnZW50bHkgaG9tZWJyZXdlZCBTaGlmdGVyIGludGVycHJldGF0aW9uIGJlY2F1c2UgbXkgRE0gYW5kIEkgYXJlIGJvdGggc3Vja2VycyBmb3IgYSBtb3JlIGNsYXNzaWMgd2VyZXdvbGYuSGlzIHN0b3J5IGluIGJyaWVmIGlzIHRoYXQgaGUgdXNlZCB0byBoZXJkIHNoZWVwLCBoZSBzZXJ2ZWQgYSBQcmluY2VzcyBvZiB0aGUgR2xvYW1pbmcgQ291cnQgaW4gdGhlIGZleXdpbGQgZm9yIGEgZmV3IHllYXJzLCBoZSBkb2VzbiBrbm93IGhvdyB0byB0YWxrIHRvIHBlb3BsZSBhbnltb3JlLCBhbmQgaGUgYml0IGEgZG9nIG9uY2UuSWYgeW91IHdhbm5hIGZpbmQgbWUgb3V0IGluIHRoZSB3aWxkIEkgRVhSb29rIGV2ZXJ5d2hlcmUsIGJ1dCBtb3N0bHkgVHdpdHRlci5adWhraXJNb2x0ZW5mbGFyZSAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ29UaGFua3MhIEkgZGlkbid0IG1lYW4gdG8gb3ZlcnN0ZXAgb3IgZGlzbWlzcyBhbnlvbmUgd2hvIGhhcyBjcml0aWNpc207IEkgd2VsY29tZSBnb29kIG9waW5pb25zIHdoZXRoZXIgdGhleSBhcmUgcG9zaXRpdmUgb3IgbmVnYXRpdmUuIEkganVzdCBoYXRlIGJsYXRhbnQgY3JpdGljaXNtIGJlY2F1c2UgdGhleSB3ZXJlIGlnbm9yYW50IHRvIHdoYXQgaXMgZ29pbmcgb24gb3IgYmVjYXVzZSBpdHMgYSBEQyBmaWxtLkl0J3Mgd2h5IGZvciBtZSwgSSB3YW50IHRvIHNlZSBIZW5yeSBDYXZpbGwgU3VwZXJtYW4gICBldmVuIGlmIGl0cyBmb3Igb25lIG1vcmUgdGltZSAgIGJlY29tZSB0aGUgc3ltYm9sIG9mIEhvcGUgdGhlIGhvdXNlIG9mIEVsIHN0b29kIGZvci5UZWRkeUJ1Z2JlYXIgIDEwIHBvaW50cyAgc3VibWl0dGVkIDI5IGRheXMgYWdvVGhlIG1haW4gaXNzdWUgaXMgc3RydWN0dXJhbC4gCkluIDIwMDMsIHdoZW4gSSBmaXJzdCBlbmNvdW50ZXJlZCB0aGUgS2lja2luZyBmb3IgQ2hyaXN0IG1pc3Npb24sIHRoaW5ncyB3ZXJlIHByZXR0eSBncmltLiAKVGhlcmUgaXMgc2ltcGx5IG5vIHdheSBmb3IgbG9jYWwgYmFrZXJzIHRvIG1ha2UgbG9hdmVzIG9mIHdoaXRlIGJyZWFkIGFuZCBzZWxsIGl0IGZvciAkMiBhbmQgdHVybiBhIHByb2ZpdC4gCkdyb3d0aCB3YXMgaW4gdGhlIGNhcmRzIGZvciBCb2IgUm9ocm1hbgpGYXQgQm9yaXM6IEEgdGVybSBhbW9uZyBSdXNzaWFucyBvcmdhbml6ZWQgY3JpbWUgbWVtYmVycyBmb3IgYSBzY2FtbWVyIHdobyB3aWxsIHBvc2UgYXMgYW4gYXR0cmFjdGl2ZSB3b21hbiBvbmxpbmUsIHNlZHVjaW5nIGhpcyB0YXJnZXQgaW50byBhY2NlcHRpbmcgZGVsaXZlcnkgb24gamV3ZWxyeSBvciBvdGhlciBsdXh1cnkgZ29vZCBhbmQgc2VuZGluZyB0aGUgaXRlbSB0byBFdXJvcGUuIFRoaXMgYWxsb3dzIHRoZSB0aGllZiB0byBoaWRlIGhpcyBpbnZvbHZlbWVudCBpbiBidXlpbmcgZXhwZW5zaXZlIG1lcmNoYW5kaXNlIHdpdGggYSBzdG9sZW4gY3JlZGl0IGNhcmQuLiAKSGlzIGFpbXMgYXJlIHF1ZXN0aW9uYWJseSBnb29kLCBhbmQgaGUgZG9lc24gZ28gYWZ0ZXIgaW5ub2NlbnRzIG9yIGVuZ2FnZSBpbiBoaWdoIGNvbGxhdGVyYWwgZGFtYWdlIGFjdGlvbnMuIEhvd2V2ZXIsIGhlIGVuam95cyBjYXVzaW5nIHBhaW4sIGFuZCB3aWxsIHRvcnR1cmUgYSB0YXJnZXQuIEhlIG5vdCBjb25jZXJuZWQgd2l0aCB0aGUgcmlnaHRuZXNzIG9mIGhpcyBhY3Rpb25zLCBvbmx5IHRoYXQgdGhleSBkZXN0cm95IHBlb3BsZSBoZSBoYXRlcy4gCkxhdGVyLCBtYW55IHdlZWtlbmRzIHdlcmUgc3BlbnQgb24gdGhlIGdvbGYgY291cnNlLiAKVGhlIHJ1bGUgb2YgbGF3IGhhcyBnb25lIG91dCB0aGUgd2luZG93IHRvby4gCkFsbCBvZiB0aG9zZSBza2V0Y2h5IHJlZGZsYWcgdGhpbmdzIGhhdmUgYmVlbiBkZWJ1bmtlZCBvdmVyIGFuZCBvdmVyIGFnYWluLCBhbmQgbm9uZSBvZiB0aGVzZSAibXVsdGlwbGUgYWNjdXNlcnMiIGFyZSByZWxpYWJsZS4gQW5kIGluIGZhY3QsIHRoZSB2YXN0IG1ham9yaXR5IG9mIHRoZXNlICJNdWx0aXBsZSBhY2N1c2VycyIgd2VyZSBuZXZlciBjb250YWN0ZWQgYnkgdGhlIGRvY3VtZW50YXJ5IGFuZCBkaWRudCBldmVuIGtub3cgdGhlaXIgbmFtZXMgd2VyZSBldmVuIHVzZWQuIFNvbWUgb2YgdGhlc2UgIkFjY3VzZXJzIiBMaXRlcmFsbHkgc3VlZCB0aGVzZSBndXlzIHRvIGdldCB0aGVtIHRvIHN0b3AgYnJpbmdpbmcgdGhlbSBpbnRvIGl0LiAKSSBzdXBwb3NlIG15IGZ1Y2thcm91bmQgdHJhaW5pbmcgaGVscGVkIG1lIG1haW50YWluIHNvbWUgc2VtYmxhbmNlIG9mIHN0cmVuZ3RoLCBidXQgSSBmZWx0IGxpa2UgSSBtYWRlIGEgbG90IG9mIHByb2dyZXNzIHJlYWxseSBxdWlja2x5IHdoZW4gSSBjb3VsZCBmb2N1cyBvbiBpdCBhZ2FpbiBzaW5jZSBJIGFscmVhZHkgaGFkIGEgYmFzZSBvZiBzdHJlbmd0aC4uIApXaGF0IGlzIHlvdXIgaXNzdWU/IEZmcy4gCldlIGhhZCBzdXJ2ZXlzLCBhcyBldmVuIHJlY2VudCBhcyAyIG1vbnRocyBhZ28gYW5kIHdlIHBvc3RlZCB0aGUgcmVzdWx0cyBoZXJlOklmIHlvdSBsb29raW5nIGZvciBhIHBsYWNlIHRvIGRpc2N1c3MgdGhpbmdzIHdpdGggcHJpbWFyaWx5IEtvcmVhbnMsIHNvcnJ5IHRoaXMgaXNuIGl0LCBub3QgdGhhdCBpdCAibWVhbnQiIHRvIGJlIHRoYXQgd2F5LCBpdCBqdXN0IGhvdyBpdCB3b3JrcyBvdXQgd2l0aCB0aGUgZGVtb2dyYXBoaWNzIG9mIHJlZGRpdC4gSSBub3Qgc3VyZSB3aHkgeW91IHdvdWxkIGNvbWUgdG8gYSBwcmltYXJpbHkgRW5nbGlzaCBsYW5ndWFnZSB3ZWJzaXRlIGZvciB0aGF0IHdoZW4gdGhlcmUgYXJlIHRvbnMgb2YgS29yZWFuIGxhbmd1YWdlIGJvYXJkcyBvdXQgdGhlcmUuIFRoZXJlIGFsc28gL3IvaGFuZ3VrLCB3aGljaCBpcyBhIEtvcmVhbiBsYW5ndWFnZSBzdWIsIGJ1dCBpdCBzbG93IGJlY2F1c2UgS29yZWFuIGNpdGl6ZW5zIHdobyBoYXZlbiBsaXZlZCBhYnJvYWQgb3ZlcndoZWxtaW5nbHkgZG9uIGtub3cgd2hhdCByZWRkaXQgaXMuLiAKQSBwdXJwbGUgcDkwIGNhbiBlbGltaW5hdGUgYSAxMDAvMTAwIHBsYXllciBpbiAxIHNlY29uZCBpZiB0aGV5IHB1dCB0aGUgbXV6emxlIG5leHQgdG8geW91ciBza3VsbC4gClRoZW4gWW91IGdvbm5hIHJlYWxpemUgaG93IHRoYXQgcHVzaCBodXJ0IGd1eXMgbGlrZSBIaXJvb2tpIEdvdG8sIGFuZCB5b3UgZ29ubmEgcmVncmV0IGV2ZXIgZW5qb3lpbmcgdGhpcyBzdHVwaWQgZnVja2luZyBtZW1lIG9mIGEgd3Jlc3RsZXIuLiAKTWljaGVsYSBNYXJ6YW5vIHJwb25kIDpNYWxoZXVyZXVzZW1lbnQsIG9uIGNvbnRpbnVlICBhdm9pciBjb21tZSBwb2ludCBkZSByZnJlbmNlIGNlbnRyYWwgbGUgcmVnYXJkIGRlcyBob21tZXMuIApTY290dCBvZiBPeGZvcmQsIE1JIGhhZCB0aGUgbG9zaW5nIGhhbmQgYW5kIHRvb2sgaG9tZSB0aGUgYmlnZ2VzdCBzaGFyZSBvZiB0aGUgamFja3BvdCBhdCAkNDI3LDQ1Mi41Mi4gClRyeSBnZXR0aW5nIGEgYmVkLCBvciB3b3JzZSB3b3JraW5nIHRoZXJlLiBZb3UgY2hhbmdlIHlvdXIgdHVuZS4gCkkgd2F0Y2ggYW5kIG9ic2VydmUgYXMgZXZlcnlvbmUgaXMgZGlmZmVyZW50LiBPbmUgdGhpbmcgSSBsZWFybmVkIGluIHBva2VyIGlzIHRoYXQgeW91IHBsYXkgZWFjaCBoYW5kLiBEb24gbGV0IHRoZSB5b3VyIHBlcmNlcHRpb24gb2YgdGhlIG90aGVyIHBsYXllciBpbmR1Y2UgeW91IHRvIG1ha2UgYSBiYWQgZGVjaXNpb24uIApLb2FsYXMgdQpIb3BlIHlvdSBmZWVsIGJldHRlciBzb29uLi4gCldlIG5lZWQgdG8gYWR2YW5jZSB0aGVzZSByZWxhdGlvbnNoaXBzIGJlY2F1c2UgZ29pbmcgZm9yd2FyZCwgdGhlc2UgYXJlIG91ciBjdXN0b21lcnMgdGhhdCB3ZSB3aWxsIGdldCBpbnRvIHByb2R1Y3Rpb24gdmVoaWNsZXMgd2l0aC4gClRoZSBNU2MgaXMgcGVyc29uYWwgYW5kIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCwgbm90IHdhc3RlZCB0aW1lLiBZb3UgYXQgYSB1bmlxdWUgcG9pbnQgaW4geW91ciBsaWZlIHdoZXJlIG1vdmluZyB0byBhbm90aGVyIGNvdW50cnkgaXMgZWFzeS4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMSBob3VyIGFnb1RoaXMgaXMgd2hhdCBJIGRpZG4gcXVpdGUgZ2V0LiBSZWFsIE1hZHJpZCBzaG91bGQgaGF2ZSBzY29yZWQgbW9yZS4gVGhleSBoYWQgc29tZSBhbWF6aW5nIGNoYW5jZXMgdG8gcHV0IHRoaXMgZ2FtZSB0byBiZWQgc2V2ZXJhbCB0aW1lcy4gQnV0IFNvbGFyaSBrbmV3IFJlYWwgTWFkcmlkIGRpZG4gaGF2ZSBhIGdyZWF0IHN0cmlrZXIgYW5kIGhlIGtuZXcgdGhleSBhcmUgdW5zdGFibGUgaW4gZGVmZW5zZS4gCkNlcnRhaW5seSBoaXMgZ3JhbmRmYXRoZXIgcGxheWVkIGhlcmVieSBhbiBpbXBvcnRhbnQgcm9sZS4KTGUgQW5uZSBQZXJlaXJhLCA0NywgZXhwbGFpbmVkIHRoYXQgaXQgd2FzIG9uIGhlciAiYnVja2V0IGxpc3QiIHRvIHNlZSBNYW5kZWxhIGF0IGxlYXN0IG9uY2UgaW4gaGVyIGxpZmUuCkwgVGhlIExpZmUgYW5kIFdvcmtzIG9mIFNpciBEYXZpZCBMZWFuIENCRSBpcyBvbiBkaXNwbGF5IGluIHRoZSBCYXRlbWFuIEdhbGxlcnksIENhcm5mb3J0aCBTdGF0aW9uIEhlcml0YWdlIENlbnRyZSwgYW5kIGFkbWlzc2lvbiBpcyBmcmVlLiBUaGUgcGVybWFuZW50IGV4aGliaXRpb24gZHJhd3MgdG9nZXRoZXIgaW5mb3JtYXRpb24sIHBob3RvZ3JhcGhzIGFuZCBmaWxtIGRvY3VtZW50YXJpZXMgZnJvbSB0aGUgRGF2aWQgTGVhbiBGb3VuZGF0aW9uLCB0aGUgQnJpdGlzaCBGaWxtIEluc3RpdHV0ZSwgdGhlIEJCQyBhbmQsIG1vc3QgaW1wb3J0YW50bHksIERhdmlkIExlYW4ncyBzb24gUGV0ZXIsIGdyYW5kc29uIE5pY2sgYW5kLiAKVGhpcyBpcyBjb25zaWRlcmVkIGFzIHRoZSBiZXN0IHByb2R1Y2VkIGJvb2sgb24gVGV4YXMgSG9sZCdlbSB0b3VybmFtZW50cy4gCk1ham9yIEVtcGxveWVycyBUaGUgc2Vjb25kIGxhcmdlc3QgZW1wbG95ZXIgb2YgbWFzc2FnZSB0aGVyYXBpc3RzIGlzIHRoZSBCTFMgY2F0ZWdvcnkgb2Ygb3RoZXIgaGVhbHRoIHByYWN0aXRpb25lcnMsIHdoaWNoIGluY2x1ZGVzIGNoaXJvcHJhY3RvcnMnIG9mZmljZXMuIEluIDIwMTIsIG1hc3NhZ2UgdGhlcmFwaXN0cyBpbiB0aGVzZSBhbHRlcm5hdGl2ZSBoZWFsdGggb2ZmaWNlcyBhdmVyYWdlZCAkMjAuODcgcGVyIGhvdXIsIG9yICQ0Myw0MTAgcGVyIHllYXIsIGZ1bGwgdGltZS4gCkx1a2UgRG9uYWxkLCB0aGUgd29ybGQncyBudW1iZXIgb25lIGdvbGZlciwgbWlzc2VzIHRoZSBncmVlbiBieSBhIG1pbGUgYXMgaGUgcGxheXMgZnJvbSBhbW9uZ3N0IHRoZSAyNTBmdCBoaWdoIHNhbmQgZHVuZXMgaW4gQWJ1IERoYWJpJ3MgTGl3YSBEZXNlcnQgYXQgdGhlIGVudHJhbmNlIHRvIFJ1YiBBbCBLaGFsaSAoVGhlIEVtcHR5IFF1YXJ0ZXIpIGF0IHRoZSBBYnUgRGhhYmkgR29sZiBDbHViIG9uIEphbnVhcnkgMjQsIDIwMTIgaW4gQWJ1IERoYWJpLCBVbml0ZWQgQXJhYiBFbWlyYXRlcy4gKERhdmlkIENhbm5vbi9HZXR0eSBJbWFnZXMpLiAKWW91IGNhbiB0YXN0ZSBpdCBpbiB5b3VyIG1vdXRoLCBmZWVsIGl0IGluIHlvdXIgZXllcyBhbmQgdXAgeW91ciBub3NlIGFuZCBpdCdzIG5vdCBwbGVhc2FudC4gV2UgYXJlIGp1c3Qgc28gbHVja3kgaW4gQXVzdHJhbGlhICAgSSBjYW4ndCB3YWl0IHRvIHNlZSBhIHBhdGNoIG9mIGJsdWUgYW5kIG91ciBwcmV0dHkgY2xvdWRzIGJhY2sgaG9tZSEgVGhlcmUgYXBwZWFycyB0byBiZSBubyByb2FkIHJ1bGVzLCBqdXN0IGFzIGZhc3QgYXMgeW91IGNhbiBhbmQgcHVzaCBpbiBvciBtaXNzIG91dC4gCllvdXIgcGxheSBpcyBtYWduaWZpZWQgb24gYW4gaW50ZXJuZXQgY2FzaW5vLiAKVGFraW5nIHRvbyBtdWNoIHBhaW4gbWVkaWNhdGlvbiB0byBjdXJlIGEgaGVhZGFjaGUgY2FuIGhhdmUgdGhlIG9wcG9zaXRlIHJlc3VsdCBhbmQgY2F1c2UgeW91IHRvIHN1ZmZlciBmcm9tIGhlYWRhY2hlcy4gWW91IGNhbiB0YWtlIHN0ZXBzIHRvIHByZXZlbnQgb3IgcmVkdWNlIHRoZSBvY2N1cnJlbmNlIG9mIHBvc3R1cmUgcmVsYXRlZCBoZWFkYWNoZXMuCkZvciBzdGFydGVycywgSSBsaWtlIHRoZSBicmllZiBNZXRhIFNuYXBzaG90cyBmcm9tIHRoZSBmb2xrcyBvdmVyIGF0IFNuZWFrZG9vci4gCkNoaW5hLCBUQ00gYW5kIFdNIGhhdmUgY29leGlzdGVkIGZvciBtb3JlIHRoYW4gMjAwIHllYXJzIGFuZCBib3RoIHR5cGVzIG9mIG1lZGljYXRpb24gYXJlIGxpY2Vuc2VkIGFzIHBhdGVudCBtZWRpY2luZSBhbmQgYXJlIHdpZGVseSBhdmFpbGFibGUgYXQgcGhhcm1hY2llcywgaG9zcGl0YWxzIGFuZCBvdGhlciBvdXRsZXRzLCB0aGUgcmVzZWFyY2hlcnMgd3JpdGUuIApMZWdlIGRpciBlaW5lbiBOb3Rncm9zY2hlbiB6dXIgU2VpdGUuIE1hbmNoZSBTcGllbGVyIHNwaWVsZW4gYmVpIGVpbmVtIFNwaWVsLCBiZWkgZGVtIEtubmVuIGdlZnJhZ3QgaXN0LCBlaW5mYWNoIG5pY2h0IGNsZXZlciBnZW51Zy4gRGllIHZlcmxpZXJlbiBkYW5uIGlociBrb21wbGV0dGVzIEdlbGQgbWl0IGVpbmVyIEhhbmQsIHZvbiBkZXIgc2llIGRhY2h0ZW4sIGRhc3Mgc2llIGRlciBncm9lIEdld2lubmVyIHNlaW4gd3JkZS4gRGllIGdlaGVuIGRhbm4gb2huZSBlaW5lbiBDZW50IGluIGRlciBUYXNjaGUgbmFjaCBIYXVzZSB1bmQgbXNzZW4gaWhyZSBGcmV1bmRlIGFuYmV0dGVsbi4gRGFzIHBhc3NpZXJ0IGRpciBuaWNodCEgU3BhcmUgZGlyIGVpbmUgUmVzZXJ2ZSBmciBzY2hsZWNodGUgWmVpdGVuIGFuIGZhbGxzIGRpY2ggZGFzIFNwaWVsIG1hbCB6dSBzZWhyIGluIHNlaW5lbiBCYW5uIHppZWhlbiBzb2xsdGUgdW5kIGR1IGluIFNhY2hlbiBHbGNrIG1hbCBlaW5lIGVjaHRlIER1cnN0c3RyZWNrZSBoYXN0LgpBIFVTIG1pbGl0YXJ5IHdpbGxpbmcgdW5yZXNlcnZlZGx5IHR1cm4gYWdhaW5zdCB0aGUgY2l0aXplbnMgPSBhIGZ1Y2tlZCBjaXRpemVucnkuIFRoZSBwcm9ibGVtcyB0aGV5IGhhZCBpbiBBZmdoYW5pc3RhbiBhbmQgVmlldG5hbSB3b3VsZCBiZSBzaWduaWZpY2FudGx5IGhhcmRlciB0byBvdmVyY29tZSBkb21lc3RpY2FsbHkuIFdoZW4geW91IGRyb3AgYSBib21iIG9uIGEgaHV0IGluIEFmZ2hhbmlzdGFuIHlvdSBkb24gaGF2ZSB0byBjb25zaWRlciB0aGUgY29zdCBvZiByZWJ1aWxkaW5nIHRoZSBpbmZyYXN0cnVjdHVyZSBhbmQgZGVwbGV0aW5nIHlvdXIgdGF4IGJhc2UuIFRoZXkgY2FuIGJlICJ1bnJlc2VydmVkbHkiIGJ5IHZlcnkgZGVmaW5pdGlvbi4KQ2hpbmEgaGFzIGJlZW4gaW5jcmVhc2luZ2x5IGFnZ3Jlc3NpdmUgYWdhaW5zdCBOb3J0aCBLb3JlYSBvdmVyIHRoZSBsYXN0IGNvdXBsZSBvZiB5ZWFycyBpbiBhbiBhdHRlbXB0IHRvIHJlaWduIGluIHRoZWlyIHBvc3R1cmluZyBhbmQgZGFuZ2Vyb3VzIHRocmVhdHMuIAoyNSBtYXNzYWdlcyBvciBzbyBhIHdlZWsgaXMgY29uc2lkZXJlZCBmdWxsIHRpbWUgZm9yIGEgbWFzc2FnZSB0aGVyYXBpc3QsIHRob3VnaCBJIHdvbiBiZSBtYWtpbmcgd2hhdCBJIHVzZWQgdG8uLiAKSXNsYW5kIHZpZXcgaXMgYWRkaW5nIDQzLDAwMCBhZGRpdGlvbmFsIHNxdWFyZSBmb290YWdlIG9mIGdhbWluZyBzcGFjZS4gClNpa2thIGV4cGxhaW5lZCB0aGUgemVybyBkaXN0YW5jZSBjb25jZXB0IGFuZCBob3cgaXQgZml0cyBpbnRvIGhpcyBzdHJhdGVneSBmb3IgSW5mb3N5cy4gClBhY2lmaWMgUG9rZXIgaXMgb3BlcmF0ZWQgYnkgQ2Fzc2F2YSBFbnRlcnByaXNlcyAoR2licmFsdGFyKSBMdGQuIEEgcmVnaXN0ZXJlZCBjb21wYW55IGluY29ycG9yYXRlZCBhbmQgbG9jYXRlZCBpbiBHaWJyYWx0YXIgKGNvbXBhbnkgcmVnaXN0cmF0aW9uIG51bWJlciA4Mzk2MSkuCkRlbm4gb2J3b2hsIGljaCBnbGF1YmUsIGRhc3Mgc2llIG1pY2ggbGllYnQsIGZobGUgaWNoIG1pY2ggbmljaHQgZ2VsaWVidC4gU2llIHplaWd0IGVzIGVpbmZhY2ggbmljaHQsIHdpcmt0IGthbHQgdW5kIGJlcmVjaG5lbmQuIFJhdGlvbmFsIGJldHJhY2h0ZXQgaXN0IGRhcyBlaW5mYWNoIGlocmUgQXJ0LCBhYmVyIGljaCBtZWluZSwgZnJoZXIgaHR0ZSBzaWUgZGllIGZ0ZXIgZmFsbGVuIGxhc3NlbiBiZWkgbWlyLiBJY2ggaGFzc2UgZXMuT3BlbiB0aGUgZm9sZGVyIHdoZXJlIHRoYXQgVHdpdGNoIGluc3RhbmNlIHdhcyBjcmVhdGVkLkxhdW5jaCBNdWx0aU1DID4gQ3JlYXRlIHRoZSBNaW5lY3JhZnQgKyBGb3JnZSBpbnN0YW5jZS5PcGVuIHRoZSBmb2xkZXIgd2hlcmUgdGhhdCBNdWx0aU1DIGluc3RhbmNlIHdhcyBjcmVhdGVkLkNvcHkvUGFzdGUgdGhlIGZpbGVzIGZyb20gVHdpdGNoIGZvbGRlciB0byBNdWx0aU1DIGZvbGRlci5MYXVuY2ggdGhlIE11bHRpTUMgaW5zdGFuY2UuSWYgSSBwbGFubmluZyBvbiBrZWVwaW5nIHRoYXQgbW9kcGFjayBsb25nIHRlcm0gSSB1c2UgYSBzeW5jIHByb2dyYW0gYmV0d2VlbiB0aG9zZSB0d28gZm9sZGVycy4gClRoZSB3aG9sZSBjeWNsZSBkZXNjcmliZWQgaGVyZSBjYW4gdGFrZSAyMCBtaW51dGVzLCBvciBpdCBjYW4gdGFrZSBvbmUgb3IgbW9yZSBob3Vycy4gSWYgeW91IGhhdmUgbmV2ZXIgbWVkaXRhdGVkIGJlZm9yZSwgdGhlbiB0cnkgMiBvciAzIG1pbnV0ZXMgb2YgbW92ZW1lbnQsIGZvbGxvd2VkIGJ5IDUgbWludXRlcyBvciBzbyBvZiBtZWRpdGF0aW9uIGFuZCBhIGNvdXBsZSBvZiBtaW51dGVzIGJyaW5naW5nIHlvdXJzZWxmIGJhY2sgdG8gdGhlIGhlcmUgYW5kIG5vdy4gCkRpZCB5b3UgZGlyZWN0IGFueSBvZiB5b3VyIHdpbm5pbmdzIHRoZXJlLCBvciB0byBhbnkgb3RoZXIgc2Vuc2libGUgaW52ZXN0bWVudHM/IFRoZSBidXNpbmVzcyBsdWNraWx5IHRha2VzIGNhcmUgb2YgaXRzZWxmIGJ1dCBpdCBoYXMgaGVscGVkIG1lIG91dCB3aXRoIGxvb2tpbmcgZm9yIGEgaG9tZSBzbyB0aGF0J3Mgd2hlcmUgYSBsb3Qgd2lsbCBwcm9iYWJseSBiZSBwdXQgdG93YXJkcy4gRGlkIHlvdSBnZXQgYW55IGdvb2QgYWR2aWNlIG9uIHdoYXQgdG8gZG8gd2l0aCB0aGUgd2lubmluZ3M/IERpZCB5b3UgZ2V0IGFueSBiYWQgYWR2aWNlPyBOb3QgcmVhbGx5LCBJIHRoaW5rIGV2ZXJ5b25lIHdhcyBqdXN0IHNvIGhhcHB5IHNvbWVvbmUgZnJvbSB0aGUgYXJlYSBoYWQgYSBzdG9yeSBsaWtlIHRoYXQuIApUaGV5IHBsYXkgd2l0aGluIHRoZSBydWxlcywgbm90IHNlZWsgc3BoZXJlcyBvZiBpbmZsdWVuY2UsIHRyYWRlLCBiYXJ0ZXIsIGRvIHdoYXRldmVyIGlzIG5lY2Vzc2FyeSB3aXRoaW4gdGhlIHJ1bGVzLiBCdXQgdGhlIG90aGVyIHNjZW5hcmlvICAgaWYgc29tZXRoaW5nIGdvZXMgd3JvbmcgYW5kIHRoZXJlIGFyZSBkaWZmaWN1bHRpZXMsIGlmIHRoZXkgdHJ5IHRvIGNyZWF0ZSBhbiBFYXN0IEFzaWEgQmxvYyB0aGF0IGxlYWRzIHRvIHJlZ2lvbmFsIHJpdmFscmllcyAgIHRoZW4geW91IGhhdmUgYW4gdW5zdGFibGUgd29ybGQuLiAKSG93IHRvIFBsYXkgQmxhY2tqYWNrIHdpdGggQ2hlYXQgU2hlZXRzClRoZSBSYXRpb25hbCBHcm91cCBvcGVyYXRlcyBnYW1pbmcgYW5kIHJlbGF0ZWQgYnVzaW5lc3NlcyBhbmQgYnJhbmRzIGluY2x1ZGluZyBQb2tlclN0YXJzLCBGdWxsIFRpbHQgUG9rZXIgYW5kIHRoZSBFdXJvcGVhbiBQb2tlciBUb3VyLiBUaGVzZSBicmFuZHMgY29sbGVjdGl2ZWx5IGZvcm0gdGhlIGxhcmdlc3QgcG9rZXIgYnVzaW5lc3MgaW4gdGhlIHdvcmxkIGNvbXByaXNpbmcgb25saW5lIHBva2VyIGdhbWVzIGFuZCB0b3VybmFtZW50cywgbGl2ZSBwb2tlciBjb21wZXRpdGlvbnMsIGFuZCBwb2tlciBwcm9ncmFtbWluZyBjcmVhdGVkIGZvciB0ZWxldmlzaW9uIGFuZCBvbmxpbmUgYXVkaWVuY2VzLgpNeSBzZXggZHJpdmUgYXQgdGhpcyBwb2ludCBpcyBtdWNoIGhpZ2hlciB0aGFuIGhpcyB1bmZvcnR1bmF0ZWx5IGFuZCBJJ20gdGhlIG9uZSB0aGlua2luZyAid2FzIHRoYXQgYSBzaWdoLCBtYXliZSBoZSBpc24ndCBpbnRlcmVzdGVkIi4uIApUaGF0IHNhaWQsIEkgZ2l2ZSBQQlAgYSBzaG90IGxhdGVyIHRvZGF5Li4gCllvdXIgbGF3biB3aXRoIG5vbiBuYXRpdmUgc3BlY2llcywgbGlrZSBncmFzcyBhbmQgcGV0dW5pYXMgdGhhdCByZXF1aXJlIGh1Z2UgYW1vdW50cyBvZiB3YXRlci4gCmJsdWZmIGFtYXRldXIgaW4gcG9rZXIgdG91cm5hbWVudApBbHNvIGRvbnQgdGFwIHRoZSB0YW5rIG1hbi4gMS80IDEvM3JkIHBvdCB3b3VsZCBiZSBhIGdvb2Qgc2l6aW5nIGFzIHRoaXMgaXMgYSB2ZXJ5IGRyeSByYWdnZWR5IGJvYXJkIHRoYXQgZmF2b3JzIG91ciByYW5nZSBoZWF2aWx5IHNvIHdlIGNhbiBiZXQgMTAwJSBvZiBvdXIgcmFuZ2Ugc21hbGwgcHJvZml0YWJseSB3ZSBwcm90ZWN0IG91ciBhaXIgYW5kIGNhcCBoaXMgcmFuZ2UgaWYgaGUgZG9lc250IHgvciBiZWNhdXNlIGhlIGlzIGZvcmNlZCB0b28gZG8gaXQgbW9yZSBtYXRoZW1hdGljYWxseSBhZ2FpbnN0IHRoaXMgc2l6aW5nLiBBZ2FpbnN0IGEgbGFyZ2Ugc2l6aW5nIGhlIGNhbiBtb3JlIGVhc2lseSB0cmFwIGJlY2F1c2UgaGUgY2FuIGdldCBpdCBpbiB3aGlsZSB0cmFwcGluZyBpbnN0ZWFkIG9mIGZvcmNpbmcgbW9yZSBtb25leSBpbnRvIHRoZSBwb3QuLiAKVmFjY2luZXMgYXJlIG5vdCBtYWdpYy4gQXMgSSBtZW50aW9uZWQgYmVmb3JlLCBpdCB0YWtlcyBtdWx0aXBsZSBzaG90cyBvdmVyIHllYXJzIGZvciB0aGVtIHRvIHdvcmssIGFuZCBjaGlsZHJlbiBhcmUgbW9yZSBzdXNjZXB0aWJsZSB0byBkaXNlYXNlcyBieSBkZWZhdWx0Li4gCkFuZCB3aGVuIGNhc2hpbmcgYSBjaGVjayBmb3IgdGhlIGZpcnN0IHRpbWUgdGhleSB3aWxsIGFzayBmb3IgeW91ciBzb2NpYWwgc2VjdXJpdHkgbnVtYmVyICwgYnV0IGlmIHlvdSBkb24ndCBoYXZlIG9uZSAsIGRvbid0IHdvcnJ5LCBnaXZlIHRoZW0gdGhlIG9uZSB5b3VyIHdvcmsgd2l0aC4gKEZ1bGwgQW5zd2VyKS4gCkltbyBoZSBjb3VsZCBiZSB0aGUgYmVzdCBzdXBlcmhlYXZ5IG92ZXIgREsgaW4gdGhlIGxvbmcgcnVuLCBhbmQgcm4gaGUncyBhdCBsZWFzdCB0aGUgMm5kIGJlc3Qgc3VwZXJoZWF2eS4gClJvbiBhbHNvIGxlYXZlcyBoaXMgcGFyZW50cyBSb24gU3IuIGFuZCBTdXNhbm5lIG9mIEZvcnQgTXllcnMsIEZsYS47IHR3byBicm90aGVycywgRGFuIChBZXJlYWwpIE1hcnRpbiBvZiBQb2xhbmQsIGFuZCBNaWNoYWVsIChSYWZhZWxhKSBNYXJ0aW4gb2YgQm9jYSBSYXRvbiwgRmxhLjsgYXMgd2VsbCBhcyBlaWdodCBuaWVjZXMgYW5kIGZpdmUgbmVwaGV3cy4KQmVjYXVzZSB0aGUgYm9keSdzIHdlaWdodCBwdXRzIHByZXNzdXJlIG9uIHRoZSB0b2UgYW5kIGFua2xlIGpvaW50cywgdGhlIGZvb3QgaXMgbW9yZSBzdXNjZXB0aWJsZSB0byBhcnRocml0aXMuIENocm9uaWMgYXJ0aHJpdGlzIG1heSByZXF1aXJlIGFua2xlIHN1cmdlcnkgdG8gcmVjb25zdHJ1Y3QgdGhlIGpvaW50IHdoZW4gbWVkaWNhdGlvbnMgYW5kIHBoeXNpY2FsIHRoZXJhcHkgbm8gbG9uZ2VyIHdvcmsuLiAKODkgQWJzLiAxIERTR1ZPIGVyZm9sZ3QsIHp1IHdpZGVyc3ByZWNoZW4uIApGYWlyYmFua3MgRGFpbHkgTmV3cyBNaW5lciBBcmNoaXZlcwpUcmVsaXZpbmcgc2FpZCwgaXQgaGFyZCB0byBjb21wZXRlLiBJIGxvb2tlZCBhdCB0aGUgbWFyZ2luLCBJIGhhZCB0byBhc2ssIGRvZXMgaXQgbWFrZSBzZW5zZSBmb3IgbWUgYXMgYW4gaW52ZXN0b3IgYXQgNTAlIGlmIHRoZSBwcm9maXQgaXMgb25seSAkMyBwZXIgYm90dGxlPyBPbmUgb2YgdGhlIHByb2JsZW1zIHdpdGggdGhpcyBtb2RlbCBpcyB0aGF0IHRoZXkgYXJlIGdpdmluZyB1cCBhIGxvdCB0byBoYXZlIGl0IG1hbnVmYWN0dXJlZCBieSBhIHRoaXJkIHBhcnR5LiBJdCBoYXJkIHRvIG1ha2UgbW9uZXkgdW5sZXNzIHlvdSBtYWtlIHRoZSB2b2RrYSB5b3Vyc2VsZi4gCklmIHlvdSBnZXQgZmxhdHRlZCwgdGhlIG90aGVyIGNhbGxlcnMgbWF5IGZsYXQgYW5kIHlvdSdsbCBiZSBvb3AgaW4gYSAzIGJldCBwb3QuIApSZWlraSBJIGF0dHVuZW1lbnQxMS4gCllvdSBzaG91bGQgYWx3YXlzIHRydXN0IGEgbmF0aXZlIHNwZWFrZXIsIGV2ZW4gaWYgdGhlaXIgcG9pbnQgaXMgY291bnRlcmludHVpdGl2ZSBhbmQgdGhleSBjYW4gZXhwbGFpbiBpdC4gVGhlIHRoaW5nIGlzLCBncmFtbWFyIGl0c2VsZiBpc24gbG9naWNhbCBpbiBhIG1hdGhlbWF0aWNhbCB3YXkuIE1vcmUgb2Z0ZW4gdGhhbiBub3QsIHlvdSB3b24gZmluZCBhIHJlYXNvbiBhcyB0byB3aHkgc29tZXRoaW5nIGlzIHRoZSB3YXkgaXQgaXMsIHlvdSBzaW1wbHkgaGF2ZSB0byBhY2NlcHQgaXQuIApFYWNoIG9mIHRoZXNlIHR5cGVzIGhhcyBhZHZhbnRhZ2VzIGFuZCBkaXNhZHZhbnRhZ2VzIG92ZXIgdGhlIG90aGVycy4gCkFzIHNvb24gYXMgdGhlIGZpcnN0IHNwZXJtIGJ1cnJvd3MgdGhyb3VnaCB0aGUgZWdnJ3MgcHJvdGVjdGl2ZSBjb2F0aW5nIGFuZCBlbnRlcnMgdGhlIGN5dG9wbGFzbSBpdCByZWxlYXNlcyBhbiBlbnp5bWUgdGhhdCBpbmNyZWFzZXMgdGhlIGxldmVsIG9mIGNhbGNpdW0gaW5zaWRlIHRoZSBjZWxsLiAKKEZ1bGwgQW5zd2VyKS4gCkJlc2lkZXMgdGhlIG9idmlvdXMgdGhpbmdzIGxpa2UgYmFkIGF2YWlsYWJpbGl0eSBhbmQgcG9vciBzcGVsbGluZywgbXkgYmlnZ2VzdCByZWQgZmxhZyBpcyBoYXZpbmcgYSBsb3Qgb2Ygam9iIGhpc3RvcnkgaW4gYSBzaG9ydCB0aW1lIGZyYW1lLiAKUmV2ZW51ZXMgd2VyZSQxNzQsNDA1LjA1LiAKRnVydGhlcm1vcmUgbWVuIG9mdGVuIGdldCBpbnZhbGlkYXRlZChvciB3b3JzZSBvc3RyYWNpemVkKSBqdXN0IGZvciBoYXZpbmcgZXhwZXJpZW5jZXMgYW5kIG9waW5pb25zIHRoYXQgbWF5IG5vdCBtZXNoIHdpdGggZmVtaW5pc3QgaGFyZGxpbmVycy4gCldlbmRpIGh5cG90aGVzaXplZCB0aGF0IHRoaXMgaXMgcHJvYmFibHkgd2h5IGZvciBzdWNoIGEgcG9vciBjb3VudHJ5LCBJbmRpYW5zIGFyZSBxdWl0ZSBoYXBweSBhbmQgZGVwcmVzc2lvbiBoZXJlIGlzIGxvdyAoYWx0aG91Z2ggcmlzaW5nIHdpdGggdGhlIG91dHNvdXJjaW5nIG9mIGpvYnMgdG8gSW5kaWEpLiBVbmxpa2UgaW4gc29tZSBvdGhlciBkZXZlbG9waW5nIGNvdW50cmllcywgcGVvcGxlIGRvbiB3YXN0ZSB0aGVpciB0aW1lIGFuZCBtb25leS4gCkFDQ1VFSUwgZXQgUExBTiBEVSBTSVRFIDEuIApZb3UgaGF2ZSA0MiBwb2ludHMuIENvaW5zIHRvIG5leHQgcG9pbnQ6IDI0LiIgQWZ0ZXIgdGhlIHJlcXVpcmVkIG51bWJlciBvZiBjb2lucyBoYXZlIGJlZW4gcGxheWVkLCBhbm90aGVyIHBvaW50IHdpbGwgYmUgYWRkZWQgdG8gdGhlIHBsYXllcidzIHRvdGFsLiAKQW5kIGFsbCBvZiB0aGlzIGlzIGhhcHBlbmluZyB3aGlsZSB3ZSBnbyBhYm91dCBvdXIgYnVzaW5lc3MsIGZhciBlbm91Z2ggcmVtb3ZlZCBmcm9tIGFueSBvZiB0aGVzZSBjaXJjdW1zdGFuY2VzIGFuZCBzaXR1YXRpb25zIHRoYXQgd2UgYXJlIGFibGUgdG8gaWdub3JlIHRoZWlyIGV4aXN0ZW5jZSBhbmQgcmVtYWluIGx1a2V3YXJtIGFib3V0IHRoZXNlIHByb2JsZW1zIGFuZCB0aGVpciBzb2x1dGlvbnMuLiAKTGUgc2VydmljZXNlcnZpY2UgZGUgbGEgY29tbWVyY2lhbGlzYXRpb24gZGVzIGFyY2hpdmVzIGRlIExhIFByZXNzZSBvZmZyZSBnYWxlbWVudCBsYSBwb3NzaWJpbGl0IGQnYWNxdXJpciBkZXMgcmVwcm9kdWN0aW9ucyBpbXByaW1lcyBpbXByaW1lcyBvdSBudW1yaXF1ZXMgZHUgcXVvdGlkaWVuIExhIFByZXNzZS4gClRoaXMgKG9yIHNpbWlsYXIgaW5uZXJicmVlZGluZykgaXMgbGlrZWx5IHRydWUgZm9yIHRoZSB2YXN0IG1ham9yaXR5IG9mIGh1bWFucy4gTGV0IGp1c3QgbG9vayBhdCB5b3VyIHBhcmVudHMuIEluIHRoZSB2ZXJ5IHVubGlrZWx5IGNoYW5jZSB0aGF0IG5laXRoZXIgb2YgdGhlbSBoYXMgYW55IGNyb3NzIGJyZWVkaW5nIGluIHRoZWlyIHBhc3QgMTggZ2VuZXJhdGlvbnMsIHRoYXQgbWVhbnMgdGhhdCBlYWNoIG9mIHRoZW0gaGFzIG92ZXIgMSBtaWxsaW9uIGRpZmZlcmVudCBhbmNlc3RvcnMgdGhhdCBhcmUgMTh0aCBncmVhdCBncmFuZHBhcmVudHMuLiAKIllvdSBiZWxpZXZlZCBoZXIgYmVjYXVzZSBzaGUgd2FzIHlvdXIgZGF1Z2h0ZXIsIiBoZSBzdWdnZXN0cywgcGVlcmluZyBvdmVyIGhpcyBnbGFzc2VzLiAKVGhlIFQ0IHJlcGxhY2VtZW50IGhhZCBzbGlnaHRseSBpbXByb3ZlZCBoZXIgZmF0aWd1ZSBhbmQgZHJ5IHNraW4sIGJ1dCBub3QgaGVyIGFpciBodW5nZXIuIApLZXB0IHNub3diYWxsaW5nLiBUaGUgc2FtZSB0aW1lLCBNci4gCkJhY2sgRW5kIFNhbGVzIFlvdSBjYW4gYWxzbyBtYWtlIG1vbmV5IGJ5IHNlbGxpbmcgbWFzc2FnZSBwcm9kdWN0cyB0byB5b3VyIGNsaWVudHMuIApBY2NvcmRpbmcgdG8gdGhpcywga29yZWFuIGxhc3QgbmFtZSBpcyBtb3JlIHZhcmlvdXMgdGhhbiB5b3UgdGhpbmssIDE1IG5hbWVzIG1ha2UgdXAgMi8zIG9mIHBvcHVsYXRpb246IGtpbSwgeWksIHBhcmssIGNoZSwgamVvbmcsIGthbmcsIGpvLCB5b29uLCBqYW5nLCBpbSwgaGFuLCBvaCwgc2VvLCBzaGluLCBrd29uLiAKVmlvbGEgRGF2aXMgd2FzIGJvcm4gaW4gTm92YSBTY290aWEgaW4gMTkxNC4gCkxha2VzZWFzaWRlICAzOTUgcG9pbnRzICBzdWJtaXR0ZWQgMTUgaG91cnMgYWdvCk92ZXJ2aWV3IGZvciBHeW1ub3MKTWVudGlvbmVkIHJ1bm5pbmcgdHJhY2ssIGFuZCBJIGhvbmVzdGx5IGRvbiBrbm93IGhvdyBtdWNoIGh1bmdyaWVyIGV4ZXJjaXNlIGlzIG1lYW50IHRvIG1ha2UgeW91IGJ1dCBJIGhhZCBtb3JlIHN1Y2Nlc3MgbG9zaW5nIHdlaWdodCB0aGlzIHRpbWUgYXJvdW5kIHRoYW4gYW55IHRpbWUgaW4gaGlzdG9yeSwgYW5kIEkgcGFydGlhbGx5IGNyZWRpdCBub3QgZXhlcmNpc2luZy4gSSBmaW5kIHRoYXQgd2hlbiBJIGFtIHdhdGNoaW5nIG15IGRpZXQgYW5kIEkgdHJ5IHRvIGluY2x1ZGUgZXhlcmNpc2UsIEkgYmVjb21lIGEgcmF2ZW5vdXMgYmVhc3QuIFRoaXMgdGltZSwgbXkgaHVuZ2VyIGxldmVscyBoYXZlIGJlZW4gbXVjaCBtb3JlIHN0YWJsZS4KQmVpbmcgb3BlbiB0byBuZWdvdGlhdGlvbiBzaG91bGQgaGVscCB5b3UgZmVlbCBvdXQgdGhlIG1hcmtldCBpbnRlcmVzdCBsZXZlbCBhbmQgZXhwZWN0YXRpb24gb2YgcHJpY2UuIApJdCdsTFJhbSwgYnV0IFByZXRmeSBMaWtlIEl0IHdpbGwgYmUganVzdCBkdWNreSB0aGlzIG1vcm4gIGluZywgdGhlIHdlYXRoZXJtYW4gcHJlZGljdGVkLiAKQnV0IHRoYXQgbm90IGdvaW5nIHRvIGhhcHBlbi4gClF1aWNrZmlyZSBjb3VudGVyIGNoZXJyeSBwaWNraW5nOyBGaXNoIGFuZCBjaGlwcyBpcyBmdWNraW5nIGRlbGljaW91cywgYW5kIGJvdGggb3VyIGNvdW50cmllcyBtYWtlIHNvbWUgZGlzZ3VzdGluZ2x5IHVuaGVhbHRoeSBmb29kcyBNciBEZWVwIEZyaWVkIEJ1dHRlci4gU2NvdXNlIGlzIGEgZnVja2luZyBhY2NlbnQgZnJvbSB0aGUgc2hpdGVuZCBvZiBtZXJzZXksIG5vdCBhIGZvb2QsIGxpa2UgbWUgc2F5aW5nICJIaWxseWJpbGx5PyBTb3VuZHMgbGlrZSBhIHNoaXQgY29vayB0aGF0IGNhbiBvbmx5IGNvbWUgdXAgd2l0aCBtdXNoIi4gQW5kIGl0IHNvdW5kcyBsaWtlIHNvbWVvbmUgaGFzIG5ldmVyIGhhZCBlaXRoZXIgYSB5b3Jrc2hpcmUgcHVkZGluZyBvciBhIHNvdWZmbCwgbm90IHN1cmUgd2hpY2guIExldCBtZSBrbm93IHdoZW4geW91ciBjb3VudHJ5IGNvbWVzIHVwIHdpdGggc29tZXRoaW5nIG9yaWdpbmFsIHRoYXQgaXNudCBzb21lIGZyYW5rZW5zdGVpbiBmdWNraW4gTWNSaWIgc2hpdGUuCkxlc3NTa2lsbGVkQWxCb3JsYW5kICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCk5hcmNpc3Npc3RpYyBtb20gd29uJ3Qgc3RvcCB0ZWFjaCBteSBiYWJ5IHNoZSdzCkkgcmVtZW1iZXIgb3VyIGxhc3QgbW9tZW50cyBvbiBoZXIgYmlydGhkYXkgRmViLiAKQXNpZGUgZnJvbSBzdHJpY3QgcnVsZXMgZ292ZXJuaW5nIHRoZSBwb2tlciBwbGF5LCB0aGVyZSB3ZXJlIGNsZWFyIGd1aWRlbGluZXMgb24gdGhlIHN0cmlwcGluZyBlbGVtZW50ICAgbW9zdCBpbXBvcnRhbnRseSB0aGF0IGVhY2ggcGxheWVyIHN0YXJ0ZWQgdGhlIG1hdGNoIGJ5IHdlYXJpbmcgZml2ZSBpdGVtcyBvZiBjbG90aGluZyBzdXBwbGllZCBieSB0aGUgb3JnYW5pc2Vycy4KU29pdCA1IGhhYi9rbSkgNC8gSnVhbiBkZSBOb3ZhICg0IGttLCAxNSBoYWIuIFNvaXQgMy44IGhhYi9rbSkgNS8gVHJvbWVsaW4gKDEga20sIDUgaGFiLikgQ2VzIGxlcyBzb250IHBsYWNlcyBzb3VzIGwnYXV0b3JpdCBkdSBNaW5pc3RyZSBjaGFyZyBkZXMgZHBhcnRlbWVudHMgZXQgdGVycml0b2lyZXMgZCdvdXRyZSBtZXIgLiAKQW4gZWR1Y2F0aW9uIHRoYXQgb25seSB0ZWFjaGVzIHBlb3BsZSBob3cgdG8gZG8gYSBqb2IgbGVhZHMgdG8gdGhlIHByb2R1Y3Rpb24gb2YgYSBoaWdobHkgc2tpbGxlZCwgaGlnaGx5IHJlcGxhY2VhYmxlIGxhYm9yIGZvcmNlLiAKV2hldGhlciBvciBub3QgaGUgd2lsbCBnZXQgdGhhdCBtb25leSBpcyBhbm90aGVyIHF1ZXN0aW9uIGJ1dCBldmVyeXRoaW5nIEkgc2FpZCB3YXMgMTAwJSB0cnVlLiAKTWFueSBjb250cmFjdG9ycyBpbiB0aGUgYXJlYSB3b3VsZCBzdGFydCBhbiBlbmdpbmVlciBpbiB0aGUgbG93IDYwcy4uIApUaGlzIGJpcmQgdmlldyBvZiB0aGUgTllDL0Vhc3QgSmVyc2V5IGFyZWEgd2FzIGZvdW5kIGluIGEgcmFyZSBwYW1waGxldCBwcm9kdWNlZCBieSB0aGUgb2xkIE5vcnRoIFJpdmVyIEJyaWRnZSBDb21wYW55IGluIDE5MzcuIFRoZSBpbWFnZSB3aGljaCBpcyB3aWRlbHkgZXhwYW5kYWJsZSBhbmQgZm91bmQgaW4gYSBwYW1waGxldCBmb3IgYSBwcm9qZWN0IGVudGl0bGVkIExpbmRlbnRoYWwgQnJpZGdlIGFuZCBUZXJtaW5hbHMsIENvbmRlbnNlZCBTdGF0ZW1lbnQxIHNob3dzIHRoZSBjaXR5IGZyb20gYSBjb25zaWRlcmFibGUgaGVpZ2h0IHdpdGggYSBsb25nIGFuZCBvYmxpcXVlIHZpZXcsIGhvdmVyaW5nIG5vcnRoIG9mIEhvYm9rZW4gb24gdGhlIEplcnNleSBzaWRlIHdpdGggYSB2aWV3IGV4dGVuZGluZyB0byBhbGwgb2YgU3RhdGVuIElzbGFuZCwgd2hpY2ggY292ZXJzIGEgZGlzdGFuY2Ugb2YgYWJvdXQgMTggbWlsZXMuIEhlYWRpbmcgZWFzdCAobGVmdCkgaW4gdGhpcyBzb3V0aGVybHkgdmlldyB3ZSBzZWUgbW9zdCBvZiBNYW5oYXR0YW4sIHRoZW4gYWJvdXQgYWxsIG9mIEJyb29rbHluLCBoaWdobGlnaHRpbmcgYXQgQ29uZXkgSXNsYW5kLiBJdCBpcyBhIGN1cmlvdXMgYW5kIGRlbGlnaHRmdWwgdmlldy4KQ2FzdCBpcm9uIHNraWxsZXRzIG9mdGVuIGhhdmUgYW5nbGVkIGluc3RlYWQgb2Ygcm91bmRlZCBzZWFtcyBiZXR3ZWVuIHRoZSBzaWRlcyBhbmQgYm90dG9tIHNvIHRoYXQgeW91IGdldCBhIHNoYXJwZXIsIG1vcmUgc3RhYmxlIGNvcm5lciBvbiB0aG9zZSBiYWtlZCBnb29kcy4uIApGdXJ0aGVybW9yZSwgdHJlYWRtaWxsIHRyYWluaW5nICgxNSBtaW4gcGVyIGRheSBmb3IgNyB3ZWVrcykgaW1wcm92ZWQgbGVhcm5pbmcgaW4gdGhlIE1vcnJpcyB3YXRlciBtYXplIGluIGFnZWQgcmF0cyBbMzhdLiAKV2l0aCB0aGUgYWR2YW5jZXMgaW4gdGVjaG5vbG9neSwgZ2FtaW5nIGFuZCBhd2FyZW5lc3MsIGFsbCBmb3JtcyBvZiBPbWFoYSBQb2tlciBhcmUgYmVjb21pbmcgbW9yZSBhbmQgbW9yZSBwb3B1bGFyIHdoaWNoIGNhbiBiZSBzZWVuIGZyb20gdGhlIGluY3JlYXNpbmcgb25saW5lIHBva2VyIHJvb21zLiBNb3N0IG9mIHRoZXNlIHdlYnNpdGVzIGhhdmUgYWxsIHRoZSB2YXJpYXRpb25zIG9mIHRoZSBnYW1lIGF2YWlsYWJsZSB3aGV0aGVyIGl0IGlzIFBvdCBMaW1pdCBPbWFoYSwgUG90IExpbWl0IE9tYWhhIEhpIExvLCBPbWFoYSBUb3VybmFtZW50cyBhbmQgZml4ZWQgbGltaXQgdmFyaWF0aW9ucyBvZiB0aGUgc2FtZSBnYW1lcy4gQnV0IHRoZSBwb2ludCBoZXJlIGlzIGhvdyB0byBkZWNpZGUgd2hpY2ggd2Vic2l0ZSBiZXN0IHN1aXRzIHlvdXIgc3R5bGUgb2YgcGxheS4KSSBsb3ZlIHRoZSBzbWVsbCBvZiBmcmVzaCBicmV3ZWQgY29mZmVlLiBBcyBJIGdldCBvdXQgb2YgdGhlIHNob3dlciwgSSBjYWxsIHRvIHlvdS4gSSBzYXkgb3V0IGxvdWQsICdXaWxsIHlvdSBtYWtlIG1lIGEgY3VwPycgVGhlbiBJIHJlbWVtYmVyIHlvdXIgZ29uZS4uIApPbiBhbiBhdmVyYWdlIDYgaG91ciBuaWdodDogMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvSnVzdCBzdGFydGVkIGxpZnRpbmcgbGl0ZXJhbGx5IDMgd2Vla3MgYWdvIChGZWJydWFyeSAxNikuIEp1c3QgYXMgYSBjb21wbGV0ZSBiYWxscGFyayBlc3RpbWF0ZSwgaG93IGxvbmcgZG8geW91IHRoaW5rIHRoaXMgbWlnaHQgdGFrZT8gSSBkb2luZyBHcmV5c2t1bGwgTFAuQWxzbywgSSBrbm93IHRoYXQgSSBhaGVhZCBvZiBteXNlbGZBIGJlZ2lubmVyIGFuZCBzaG91bGRuIHdvcnJ5IGFib3V0IHRoaXMgc3R1ZmZTaG91bGQganVzdCBmb2N1cyBvbiBnZXR0aW5nIHN0cm9uZ2VyIGFuZCBpZ25vcmUgcXVhbGlmeWluZyB0b3RhbHNCdXQgSSB3YW50IHRoYXQgc29ydCBvZiBnb2FsIGp1c3QgZm9yIGZ1biBhbmQgZm9yIHNvbWV0aGluZyB0byB3b3JrIHRvd2FyZHMuIApCZXNpZGVzIGZvb3RiYWxsLCBob3JzZSByYWNpbmcgaXMgdGhlIG5leHQgbW9zdCBwb3B1bGFyIHNwb3J0IGF0IGJldDM2NSB3aGVyZSB0aGUgaHVnZSBzZWxlY3Rpb24gaW5jbHVkZXMgYW55IHJhY2luZyBldmVudCBpbiB0aGUgVW5pdGVkIEtpbmdkb20gYW5kIHRoZSB0b3AgcmFjZXRyYWNrcyBmcm9tIFVTQS4gVGhlcmUgYXJlIGxvdHMgb2YgaG9yc2UgcmFjaW5nIHNwZWNpYWxzIHRoYXQgeW91IG5lZWQgdG8ga2VlcCBhbiBleWUgb24uTGl2ZSBJbiBQbGF5IEJldHRpbmdiZXQzNjUgaXMgb25lIG9mIHRoZSBsZWFkZXJzIGZvciBpbiBwbGF5IGJldHRpbmcgbWFya2V0cyB3aXRoIGFuIGltcHJlc3NpdmUgY292ZXJhZ2UsIHNvbWV0aGluZyB5b3UgY2FuIG5vdGljZSBmb3IgeW91cnNlbGYgaW5zdGFudGx5IGR1cmluZyBhbiBhdmVyYWdlIGJ1c3kgbWF0Y2ggZGF5LiAKIlVsdGltYXRlbHksIGl0IGRvZXNuJ3QgcmVhbGx5IG1hdHRlciB3aGVyZSBJIGVuZCB1cCwiIHNhaWQgdGhlIDI1IHllYXIgb2xkIEhheHRvbiwgd2hvIGN1cnJlbnRseSBsaXZlcyBpbiBMYXMgVmVnYXMuIApDb3VsZCBoZSBiZSBhIE5lcGhldywgbWF5YmUgQWJlcmZvcnRoIGhhZCBhIHNvbiBhbmQgaXQgd2Fzbid0IGp1c3QgQXJpYW5hJ3MgZGVhdGggdGhhdCBtYWRlIHRoZW0gc28gZGlzdGFudCBpbiB0aGUgSFAgc2VyaWVzLiAKT24gSG9nYW4gc2VsbGluZyBoaW0gb3V0OiAiV2hlbiBJIHN1ZWQgVmluY2UsIHdlIGhhZCB0byBkZXBvc2UgaGltLiBPbiB0aGUgd2F5IG91dCwgSSB0b2xkIG15IGxhd3llciB0aGUgc3RvcnkgYW5kIGluIGRlcG9zaXRpb24sIHlvdSBjYW4gYnJpbmcgdXAgYW55dGhpbmcuIEFuZCBJIHNhaWQsICdpZiB5b3UgY2FuLCBEYXZpZCBbT2xzZW5dLCBmaW5kIG91dCB3aG8gcmF0dGVkIG1lIFtvdXRdLicgSSBzYWlkLCAnZmluZCBvdXQgd2hvIHJhdHRlZCBtZSBbb3V0XSB0aGF0IGRheSBiZWNhdXNlIGl0IHdhcyBvbmUgb2YgdGhlIGJveXMgYmVjYXVzZSB0aGVyZSB3ZXJlIG5vIGFnZW50cyB0aGVyZS4gCkEgdHVybiBpbiBmb290YmFsbGluZyBmb3J0dW5lIGlzIHVyZ2VudGx5IHJlcXVpcmVkLiBUaGUgbmVlZCBpcyBncmVhdCBub3cgdG8gc3VtbW9uIHVwIGEgcGVyZm9ybWFuY2Ugb2YgZGVmaWFuY2UsIHNwaXJpdCBhbmQgYWdncmVzc2lvbi4gCk1vc3Qgb2YgbXkgZXhwZXJpZW5jZSB3aXRoIHRoZSBlbmdpbmUgY29tZXMgZnJvbSB0aGUgU3Bpcml0IG9mIDc3IGdhbWUsIHNvIEkgYmUgdXNpbmcgYSBsb3Qgb2YgdGhlIHRlcm1zIHVzZWQgdGhlcmUgaW4gdGhpcyBzdWdnZXN0aW9uLi4gCkkgd291bGQgYmUgd2lsbGluZyB0byBiZXQsIGRvbGxhcnMgdG8gZG9udXRzLCB0aGF0IHRoZXksIGFuZCBzdWJzZXF1ZW50IGdlbmVyYXRpb25zLCB3aWxsIGVuZCB1cCBjb250cmlidXRpbmcgbW9yZSB0byB0aGUgQ2FuYWRpYW4gZWNvbm9teSB0aGFuIGl0IHdpbGwgY29zdCB0byBwcm9jZXNzIGFuZCBoZWxwIHRoZW0gc2V0dGxlLi4gCkkgc3VwcG9zZSBvbmUgZ29vZCBwb2ludCB0byBhbGwgb2YgdGhpcyB0aG9yb3VnaCBkaWdnaW5nIGFuZCBuYXZlbCBnYXppbmcgYnkgTmV3IFlvcmsgcHVibGljYXRpb25zIGlzIHRoYXQgd2Uga25vdyBkYW1uIHdlbGwgaG93IHRoZXkgdGhpbmsuIApUaGUgcHJlc2lkZW50IGF0IEJsaXp6YXJkIGF0IHRoZSB0aW1lIChjYW50IHJlbWVtYmVyIGhpcyBuYW1lKSBkaWQgZXZlcnl0aGluZyBpbiBoaXMgcG93ZXIgdG8ga2VlcCB0aGUgaW5mbHVlbmNlIG9mIEFjdGl2aXRpb24gYXdheSBmcm9tIHRoZSBkZXZlbG9wbWVudCBvZiBvdmVyd2F0Y2ggb3RoZXJ3aXNlIHRoZSBnYW1lIHdvdWxkIGhhdmUgcmVsZWFzZWQgYSB5ZWFyIHRvbyBlYXJseSBhcyBhIGJyb2tlbiBidWdneSBtZXNzIGFuZCBxdWlja2x5IGZvcmdvdHRlbiBhYm91dC4gCldoYXQgb3RoZXIgY2hvaWNlIGRvIEkgaGF2ZT8uIApUaGUgYWNjZXNzaWJpbGl0eSBvZiBnYW1lcyBpcyBzaW1wbHkgY29udmVuaWVudC4gCkkgdGhpbmsgd2UgY2FuIGFncmVlIHRvIGRpc2FncmVlIG9uIFN0YWxpbi4gTXkgcmVhZGluZyBpbmRpY2F0ZXMgdGhhdCBTdGFsaW4gd2FzIGFib3V0IGFzIG1hZCBhcyBhIGhhdHRlciwgc28gdGhlIGZhY3QgdGhhdCBoZSBjbGFpbWVkIGhlIGRpZG4gd2FudCBhbnkgdGVycml0b3JpYWwgZXhwYW5zaW9uIGlzIG5vdCBwYXJ0aWN1bGFybHkgc3Ryb25nIGV2aWRlbmNlIGhlIGFjdHVhbGx5IGRpZG4gSSBhbHNvIHN1Z2dlc3QgdGhhdCB0aGUgd2UgdGhlIGJhZGRpZXMgcHJvYmxlbSBwZXJrcyB1cCB3aGVuZXZlciBmb2xrcyBzdGFydCBnZXR0aW5nIGFsbCBhbm5leCB5LiAKQnV0IEkgcmVhbGl6aW5nIGEgeWVhciBsYXRlciB0aGF0IHRoZXkgY29uc3RhbnRseSBnbyBvbiBhYm91dCBtaXNzaW5nIHVzIGFuZCB3aGVuIHdlIHRyeSB0byBkbyB0aGluZ3Mgd2l0aCB0aGVtLCB3ZSBnZXQgbm90aGluZyBiYWNrLiAKVGhlIHN0YW5kYXJkIG9mIHRoZSBnYW1lIHBsYXllZCBoZXJlIGlzIGFsc28gdmVyeSBoaWdoLi4gCiJEYXRhIGZyb20gdGhlIGFpcnBsYW5lJ3MgZmxpZ2h0IGRhdGEgcmVjb3JkZXIgKEZEUikgc2hvd2VkIHRoYXQgdGhlIGFpcnBsYW5lJ3MgcmlnaHQgZWxldmF0b3Igd2FzIHBvc2l0aW9uZWQgZnVsbCB0cmFpbGluZyBlZGdlIGRvd24gKFRFRCkgd2hlbiB0aGUgZmxpZ2h0IGNyZXcgZmlyc3QgcG93ZXJlZCB1cCB0aGUgYWlycGxhbmUgb24gdGhlIGRheSBvZiB0aGUgYWNjaWRlbnQgYW5kIHJlbWFpbmVkIHRoZXJlIHRocm91Z2hvdXQgdGhlIGFjY2lkZW50IHNlcXVlbmNlLiBBbiBhaXJwbGFuZSBwZXJmb3JtYW5jZSBzdHVkeSAoYmFzZWQsIGluIHBhcnQsIG9uIEZEUiBkYXRhKSBjb25maXJtZWQgdGhhdCB0aGUgYWlycGxhbmUgZGlkIG5vdCByZXNwb25kIGluIHBpdGNoIHdoZW4gdGhlIGNhcHRhaW4gcHVsbGVkIG9uIHRoZSBjb250cm9sIGNvbHVtbi4gQmFzZWQgb24gdGhlIHN0dWR5J3MgY29tcGFyaXNvbiB3aXRoIGEgcHJldmlvdXMgdGFrZW9mZiwgdGhlIE5hdGlvbmFsIFRyYW5zcG9ydGF0aW9uIFNhZmV0eSBCb2FyZCAoTlRTQikgZGV0ZXJtaW5lZCB0aGF0IHRoZSBhaXJwbGFuZSdzIGxhY2sgb2Ygcm90YXRpb25hbCByZXNwb25zZSB0byB0aGUgY29udHJvbCBjb2x1bW4gaW5wdXQgZGlkIG5vdCBiZWNvbWUgYXBwYXJlbnQgdG8gdGhlIGNhcHRhaW4gaW4gdGltZSBmb3IgaGltIHRvIGhhdmUgc3RvcHBlZCB0aGUgYWlycGxhbmUgb24gdGhlIHJ1bndheS4KRGllIEluaGFsdGUgdW5zZXJlciBTZWl0ZW4gd3VyZGVuIG1pdCBncnRlciBTb3JnZmFsdCBlcnN0ZWxsdC4gClNoZSB1c2VzIHNvY2tzIGJlY2F1c2UgaXQgY292ZXJzIGhlciBlbnRpcmUgaGFuZC4gClRoZXJlIGEgcnVsZSwgaWYgeW91IG1lZXQgb25lIGFzcyBob2xlIGluIGEgZGF5LCB0aGF0IHBlcnNvbiBpcyBhbiBhc3MgaG9sZS4gSWYgZXZlcnlvbmUgeW91IG1lZXQgaW4gYSBkYXkgaXMgYW4gYXNzIGhvbGUsIHlvdSB0aGUgYXNzIGhvbGUuIEkgaG9uZXN0bHkgZmVlbCBsaWtlIHNoZSBpcyBqdXN0IGp1bXBpbmcgb24gdGhlIEhhcnZleSBXZWluc3RlaW4gdHJhaW4sIGFuZCBoZSBuZXZlciBhY3R1YWxseSBpbnRlcmFjdGVkIHdpdGggaGVyLiAKSnVzdCB0byByZWFsbHkgaGFtbWVyIGhvbWUgdGhvc2UgIk9oLCBncm93IHVwLiIgdmliZXMKMTowMyBJIHB1bGwgb3V0IHRoZSBjb2ZmZWUgcG90ClRoZXknbGwgcmVhbGl6ZSB0aGF0IHRoZWlyIHdpdGggYSBsaXZpbmcgcGVyc29uIGFuZCB0aGF0IHdpbGwgZXhjaXRlIHRoZW0gYmV5b25kIHdvcmRzLiAKTGltaXQgVGV4YXMgSG9sZCBFbSBSZXZpZXcKMTNIb29kZWRIaXBwaWVzICAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwooMikgVGhhdCBmb3IgdGhlIExvTSBtb2RzIHRvIGZpZ3VyZSBvdXQuIApFa3N0YXNlIGF1ZiBNYWRlaXJhCkNsZWFuIFVwIEFmdGVyIFlvdXJzZWxmIFdoZXRoZXIgeW91J3JlIHNuYWNraW5nIGF0IHlvdXIgZGVzayBvciBjb29raW5nIGEgbWVzc3kgbWVhbCBpbiB0aGUgb2ZmaWNlIGtpdGNoZW4sIGFsd2F5cyBjbGVhbiB1cCBhZnRlciB5b3Vyc2VsZi4gVGhpcyBpbmNsdWRlcyBidXNpbmcgeW91ciB0YWJsZSBvciBkZXNrLCBwdXR0aW5nIHRyYXNoIGluIGFwcHJvcHJpYXRlIHJlY2VwdGFjbGVzLCB3aXBpbmcgZG93biB5b3VyIHRhYmxlIG9yIGRlc2sgYW5kIGRvaW5nIGRpc2hlcyB5b3UgdXNlIGZyb20gY29tbW9uIGFyZWFzLiBEb24ndCBsZWF2ZSBsZWZ0b3ZlciBmb29kIGluIHRoZSBzaGFyZWQgcmVmcmlnZXJhdG9yIGZvciB0b28gbG9uZy4gCkxlcyBjb29raWUgbWFya2V0aW5nIC8gY29va2llIGRlIHRpZXJzIC8gY29va2llcyBzb3VtaXMgYXUgY29uc2VudGVtZW50IHV0aWxpc3MgcG91ciByZWN1ZWlsbGlyIGRlcyBpbmZvcm1hdGlvbnMgc3VyIGxlcyBzaXRlcyB3ZWIgdmlzaXRzIHBhciBsJ3V0aWxpc2F0ZXVyLiBDZXR0ZSBjb2xsZWN0ZSBlc3QgZmFpdGUgZGFucyB1biBidXQgcHVibGljaXRhaXJlIGFmaW4gZGUgY3JlciBkZXMgcHVibGljaXRzIGNpYmxlcyAgZGVzdGluYXRpb24gZGVzIHV0aWxpc2F0ZXVycy4KSWYgeW91IGFzayBtZSB0aGF0ICJJZiBBbHRlciBFZ29zIGFyZW4gdG8gYmUgaW1wbGVtZW50ZWQgaW4gQ0NDIHJlcnVuLCB0aGVuIHdobyB0aGV5IGFyZT8iLCBteSBhbnN3ZXIgaXMgd291bGQgYmUgUmFuaSBWSUlJIG9yIEhha3VubyBLaXNoaW5hbWkuIApTbyBtYXliZSBpdCB0aW1lIHdlIEFtZXJpY2FucyB0YWtlIHRoZSBwdXJzdWl0IG9mIGhhcHBpbmVzcyBiYWNrIGludG8gb3VyIG93biBoYW5kcz8gSXQgdGltZSB0byBhZG1pdCB0aGF0IHdvcmtpbmcgYWxsIHRoZSB0aW1lIGlzIGEgZGVhZCBlbmQgZm9yIGV2ZXJ5b25lIGJ1dCB0aGUgcGVvcGxlIHdobyBvd24gdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24uIFdlIHNob3VsZCBkZW1hbmQgbm90IGp1c3QgYW4gZW5kIHRvIGVuZGxlc3Mgd2FyLCBub3QganVzdCBoZWFsdGggY2FyZSBmb3IgYWxsIGFuZCBzb21lIHJlZ3VsYXRpb24gb2YgdGhlIGdyZWVkIHRoYXQgY29tZXMgd2l0aCB1bnJlZ3VsYXRlZCBjYXBpdGFsLCBidXQgcGFpZCB2YWNhdGlvbiBhbmQgZGF5IG9mZiBsYXdzLCBtYXhpbXVtIGhvdXJzIGZvciB3b3JrIHdlZWtzLCBhbmQgYSBjaGFuY2UgdG8gdHVybiBvdXIgZnJvd25zIHVwc2lkZSBkb3duLi4gCkNhbiBsaXZpbmcgb2ZmIHRoZSBsYW5kIGJlbmVmaXQgeW91ciBoZWFsdGgKQXJ0aWNsZXMgbmVlZCB0byBoYXZlIGJlZW4gd3JpdHRlbiB3aXRoaW4gdHdvIHdlZWtzIG9mIGl0cyBzdWJtaXNzaW9uIGRhdGUuCk9uIFBpbmtldHQgU21pdGgncyBzaG93LCBXb29kcyBzb3VnaHQgdG8gY291bnRlciBzb2NpYWwgbWVkaWEgc3BlY3VsYXRpb24gb3ZlciB3aGF0IGhhcHBlbmVkIHdpdGggVGhvbXBzb24gd2hlbiBzaGUgYW5kIGEgZ3JvdXAgb2YgZ2lybGZyaWVuZHMgd2VudCB0byBhIHBhcnR5IGF0IHRoZSBiYXNrZXRiYWxsIHBsYXllcidzIExvcyBBbmdlbGVzIGhvbWUgYWZ0ZXIgYSBuaWdodCBvdXQuCkxpdGVyYWxseSBubyBleHBsYW5hdGlvbiBiZXlvbmQgdGhhdC4gWW91IGNhbiBiZSBzaWNrZXIgb3IgbW9yZSBhbnl0aGluZyBiZWNhdXNlIHRoZXkgYXJlIGV4cGVyaWVuY2luZyBtb3JlIGFuZCBtb3N0Li4gCkkgdGhpbmsgZHVhbGluZyBhdCA5IGlzIGEgYml0IG9mIGEgd2FzdGUsIGhvbmVzdGx5LiBUaGUgb25seSBiZW5lZml0IG9mIGRvaW5nIHRoYXQgaXMgdGhhdCB5b3UgZ2V0IHRvIGJlIGEga2Vuc2FnZSBpbnN0ZWFkIG9mIGp1c3QgYSBtYWdlIGZvciBob3dldmVyIGxvbmcgaXQgdGFrZXMgdG8gZ2V0IGZyb20gbGV2ZWwgMTAgdG8gMTQuIE91dHNpZGUgdGhhdCB3aW5kb3cgb2YgdGltZSwgeW91IGFsd2F5cyBiZXR0ZXIgb2ZmIGR1YWxpbmcgYXQgMTMuLiAKSSdtIHRhbGtpbmcgc3VwZXIgYmFzaWMgZmVhdHVyZXMgbGlrZSBmbGFjIHN1cHBvcnQgb3IgaG90IGN1ZSBidXR0b25zIChzb21ldGhpbmcgdGhhdCBleGlzdHMgb24gYWxsIGxldmVscyBvZiBnZWFyIGVsc2V3aGVyZSkgb3IgcGxhdHRlciB0ZW5zaW9uIGFkanVzdG1lbnQuSXQncyBmaW5lIGJlY2F1c2UgdGhhdCdzIGhvdyB0aGV5IGRvIHRoaW5ncywgYnV0IHRoZSBiYWNrbGFzaCBpcyBzdGFydGluZyB0byBncm93IGFuZCB0aGUgY29tcGV0aXRpb24gaXMgbm90IHNhZGRsaW5nIHRoZW1zZWx2ZXMgd2l0aCB0aGUgYXJ0aWZpY2lhbCBsaW1pdGF0aW9ucyAoYmVjYXVzZSB0aGV5IGNhbid0IGFmZm9yZCB0byBkbyB3aGF0IHBpb25lZXIgZG9lcykuQnV0IHRoZXJlIHdpbGwgYmUgYWx3YXlzIGFuIGFybXkgb2YgZmFuYm95cyBkZWZlbmRpbmcgdGhlaXIgZGVjaXNpb25zIGp1c3QgYmVjYXVzZSBpdCdzIHBpb25lZXIsIG9yIGRpc2NvdW50aW5nIHRoZSBjb21wZXRpdGlvbiBiZWNhdXNlIGl0J3Mgbm90ICAgZXZlbiBpZiB0aGV5IHJlYWRpbHkgYWNrbm93bGVkZ2UgdGhhdCB0aGUgb3RoZXIgZ2VhciBpcyBiZXR0ZXIuQ3VycmVudGx5LCBwZW9wbGUgYXJlIGJpdGNoaW5nIHRoYXQgcGlvbmVlciBpc24ndCBsaXN0ZW5pbmcgdG8gdGhlaXIgY3VzdG9tZXJzIGFuZCBiaXRjaGluZyBhYm91dCB0aGUgcHJpY2UgYmVpbmcgdG9vIGhpZ2gsIHlldCB0aG9zZSBzYW1lIHBlb3BsZSByZWZ1c2UgdG8gYnV5IGFueXRoaW5nIGVsc2UuIApQYXJ0eSAsIE5vYmxlICwgR2FtZWJvb2tlcnMgLCBUaXRhbiAsIGJ3aW4gIHVuZCBFdmVyZXN0ICB3YXJ0ZW4gamV3ZWlscyBtaXQgYXR0cmFrdGl2ZW0gIEJvbnVzIHVuZCB3ZWl0ZXJlbiBBbmdlYm90ZW4gYXVmIGlocmUgIEt1bmRlbi4KQ2F0ZSBCbGFuY2hldHQgaXMgaG90IGFzIGZ1Y2suIApIZXIgTWFqZXN0eSdzIEdvdmVybm1lbnQKSGUgc2FpZCBtYWtlIGFuIG9mZmVyLiAKTCBUaGUgTGlmZSBhbmQgV29ya3Mgb2YgU2lyIERhdmlkIExlYW4gQ0JFIGlzIG9uIGRpc3BsYXkgaW4gdGhlIEJhdGVtYW4gR2FsbGVyeSwgQ2FybmZvcnRoIFN0YXRpb24gSGVyaXRhZ2UgQ2VudHJlLCBhbmQgYWRtaXNzaW9uIGlzIGZyZWUuIFRoZSBwZXJtYW5lbnQgZXhoaWJpdGlvbiBkcmF3cyB0b2dldGhlciBpbmZvcm1hdGlvbiwgcGhvdG9ncmFwaHMgYW5kIGZpbG0gZG9jdW1lbnRhcmllcyBmcm9tIHRoZSBEYXZpZCBMZWFuIEZvdW5kYXRpb24sIHRoZSBCcml0aXNoIEZpbG0gSW5zdGl0dXRlLCB0aGUgQkJDIGFuZCwgbW9zdCBpbXBvcnRhbnRseSwgRGF2aWQgTGVhbidzIHNvbiBQZXRlciwgZ3JhbmRzb24gTmljayBhbmQgTWFyZ2FyZXQgQmFydG9uLCB3aG8gcGxheWVkIEJlcnlsIGluIEJyaWVmIEVuY291bnRlci4uIApBdWYgZGVtIFdlZyB2b20gU3R1aGwgenVyIFRyZSwgbmFjaGRlbSBzaWUgZGllIHRpZWZlIFN0aW1tZSBtaXQgZGVuIFdvcnRlbiBEaWUgTmNoc3RlIGJpdHRlIiBnZWhydCBoYXR0ZSwgbGllZiBlcyBpaHIgaGVpc3MgdW5kIGthbHQgZGVuIFJja2VuIGhpbnVudGVyLiAKSXQncyBva2F5IHRvIGV4cHJlc3MgeW91ciBjb25jZXJuIGFib3V0IGhlci4gClRoZSBDYXJsIFMuIApGcm9tIDQgaG91cnMgSSBoYXZlIHBsYXllZCBhdCB0aGUgd3lubiB0aGUgZ3V5IGJsb2NrZWQgdGhlIHNlYXQgdGhlIGVudGlyZSB0aW1lIGFuZCBwbGF5ZWQgYXQgbWF4aW11bSAxIGhvdXIuKFdpdGggMTUgcGxheWVycyBvbiB0aGUgd2FpdGluZyBsaXN0KS4gCkF0IHRoZSBtb21lbnQsIHRoZXJlIGFyZW4ndCBtYW55IG9wdGlvbnMuIApCYWNrIFJvdzogTWljaGFlbCBLZWxseSwgQ3JvdWdod2VsbCwgKFBvcmtlciBDbGFzc2ljIEdyb3VwKSBLZXZpbiBEd3llciAoRGV2ZWxvcG1lbnQgQWR2b2NhdGVzIGZvciBUdWFtIFN0YWRpdW0sIChEQUZUUykgTWljayBGaW5uZXJ0eSwgKEFiaWxpdHkgV2VzdCkgQ2xsciBTZWFuIENhbm5leSwgKEJlbGNsYXJlIFN5bGFuZSBDb21tdW5pdHkgQ291bmNpbCkgRGF2aWQgTyAoTW9uZ29sIFJhbGx5IFRlYW0pIEZyb250IFJvdzogRGF2aWQgQ29sbGlucywgKEppZ3NhdykgU2lvYmggQ2Fycm9sbCwgQWN0IGZvciBNZW5naXRpcywgT2xsaXZlciBSb2JpbnNvbiwgT3JnYW5pc2VyLCBBbm5hIENvbmJveSwgKFNlbmlvciBKdW5pb3IgVHJpYmVzIFN3aW1taW5nIENsdWIpIFNyLiBNYXJnYXJldCBNY0ZhZGRlbiwgKEJvaGVybW9yZSBHcm91cCkgUGV0ZXIgQ29ubm9sbHksIChCYWRvaXJpIGFuIENsYWRhaWdoKSBhdCB0aGUgTGF1bmNoIG9mIHRoZSBSZWhhYiBQZW9wbGUgb2YgdGhlIFllYXIgQXdhcmRzIHdoaWNoIHRha2VzIHBsYWNlIG9uIHRoZSA2dGggRmVicnVhcnkgaW4gdGhlIEdhbHdheSBCYXkgSG90ZWwuIFBob3RvOiBKb2UgVHJhdmVycy4uIApCdXQgd2hlbiBJIHdlbnQgdG8gQW1lcmljYSBhbmQgQ2FuYWRhIGl0IGhvbmVzdGx5IGZlbHQgbGlrZSBoZWFsdGh5IGZvb2RzIGxpa2Ugc21vb3RoaWVzLCBmdWxsIGdyYWluIGJyZWFkLCBudXRzLCBmaXNoIGV0YyB3ZXJlIGEgbG90IG1vcmUgZXhwZW5zaXZlLCBidXQgc3R1ZmYgbGlrZSBEb3JpdG9zLCBjb2NhIGNvbGEgYW5kIGNhbmR5IHdhcyByaWRpY3Vsb3VzbHkgY2hlYXAuIApBIHNtYWxsIGNhciB2aWV3ZXIgcHJvZ3JhbSB3aGljaCBjYW4gaGVscCB3aXRoIHNraW5uaW5nIGZvciBMRlMgY2Fycy4gCklsIG5lIGZhdWRyYWl0IHBhcyBzZXVsZW1lbnQgdW4gd2VibWVzdHJlIG1haXMgcXVlbHF1J3VuIHF1aSBzb2l0IGNhcGFibGUgZGUgdHJpZXIgZXQgZCdvcmdhbmlzZXIgbCdpbmZvcm1hdGlvbi4gSWwgbidlc3QgcGFzIHF1ZXN0aW9uIHF1ZSBqZSBwdWlzc2UgbSdlbiBjaGFyZ2VyLiBKZSBsJ2FpIGRpdCwgcG91ciAzNiAwMDAgcmFpc29ucyBqZSBuZSB2ZXV4IHBhcyB0cmUgb2JsaWcgZGUgbWUgc3BjaWFsaXNlciBkYW5zIGxlIGRvbWFpbmUgZGVzIHZhY2NpbmF0aW9ucy4gSmUgc3VpcyBjb250cmUgOiBvbiBwZXV0IHBhcmZhaXRlbWVudCBzJ2VuIHBhc3Nlci4gCk92ZXJhbGwsIDcuNS8xMC4gS2luZ2RvbSBIZWFydHMgSUkgcmVtYWlucyBhcyBteSBmYXZvcml0ZS4KIkl0J3Mga2luZCBvZiBhbWF6aW5nIGhvdyBmYXIgd2UndmUgY29tZSBhbGwgdGhlIHN1ZGRlbiwiIFN0ZWVuc3RyYSBzYXlzLiAiV2hlbiB3ZSBzdGFydGVkIG9uIHRoaXMsIHBlb3BsZSBsaWtlIFtTZW5hdGUgTWFqb3JpdHkgTGVhZGVyXSBNaXRjaCBNY0Nvbm5lbGwgaGFkIGEgYmVlZiB3aXRoIHVzLiAKR2FuZ3MgbGlrZSB0aGUgQ3JpcHMgd2FzIGZvcm1lZCBieSB5b3V0aCBzZWVraW5nIHRvIGVtdWxhdGUgdGhlIEJsYWNrIFBhbnRoZXJzIGJ1dCBsYWNraW5nIHRoZSBudWFuY2VkIGFuZCBtYXR1cmUgZXhwZXJpZW5jZWQgbGVhZGVyc2hpcCB0aGUgQmxhY2sgUGFudGhlcnMgaGFkKHRoZWlyIGxlYWRlcnMgaGF2aW5nIGJlZW4gaW1wcmlzb25lZCBmb3Igb25lIHJlYXNvbiBvciBhbm90aGVyKS4gCkluIE5vdmVtYmVyIDIwMTcsTGluZHNheSBTaGVwaGVyZCwgYXRlYWNoaW5nIGFzc2lzdGFudGF0V2lsZnJpZCBMYXVyaWVyIFVuaXZlcnNpdHl3aG8gc2hvd2VkIGEgdmlkZW8gb2YgUGV0ZXJzb24gY3JpdGlxdWUgb2YgQmlsbCBDIDE2IGluIGhlciAiQ2FuYWRpYW4gQ29tbXVuaWNhdGlvbiBpbiBDb250ZXh0IiBjbGFzcywgd2FzIHJlcHJpbWFuZGVkIGJ5IGZhY3VsdHkgbWVtYmVycywgd2hvIHNhaWQgdGhhdCBzaGUgbWF5IGhhdmUgdmlvbGF0ZWQgQmlsbCBDIDE2IGJ5IHNob3dpbmcgdGhlIHZpZGVvIGFuZCBob2xkaW5nIGEgZGViYXRlLiBDb21tZW50aW5nIG9uIHRoZSBpbmNpZGVudCwgVW5pdmVyc2l0eSBvZiBUb3JvbnRvIGxhdyBwcm9mZXNzb3JCcmVuZGEgQ29zc21hbm5vdGVkIHRoYXQgdGhlQ2FuYWRpYW4gSHVtYW4gUmlnaHRzIEFjdCh3aGljaCBDIDE2IGFtZW5kZWQpIGRvZXMgbm90IGFwcGx5IHRvIHVuaXZlcnNpdGllcywgYW5kIHRoYXQgaXQgd291bGQgYmUgdW5saWtlbHkgZm9yIGEgY291cnQgdG8gZmluZCB0aGF0IHRoZSB0ZWFjaGluZyBhc3Npc3RhbnQgYWN0aW9ucyB3ZXJlIGRpc2NyaW1pbmF0b3J5IHVuZGVyIHRoZSBjb21wYXJhYmxlIHBvcnRpb25zIG9mIHRoZU9udGFyaW8gSHVtYW4gUmlnaHRzIENvZGUuLiAKRXhjaXRlZCB0byBob25vdXIgdGhlIHBsYXllcnMsIFJhbm52aWpheSBzYWlkIGluIGEgc3RhdGVtZW50OiAiSSBoYXZlIGFsd2F5cyBiZWxpZXZlZCBpbiBzdXBwb3J0aW5nIGV4Y2VsbGVuY2UsIGluIGFueSBhbmQgZXZlcnkgcGFydCBvZiBsaWZlLiBUaGlzIHRpbWUgSSBoYXZlIGdvdCBhbiBvcHBvcnR1bml0eSB0byBob25vdXIgZXhjZWxsZW5jZSBpbiB0aGUgUG9rZXIgaW5kdXN0cnkgYW5kIEkgYW0gZXF1YWxseSBleGNpdGVkIGFzIG11Y2ggYXMgdGhlIGZhbnMgb3IgdGhlIHBlb3BsZSBhcmUuLiAKTm93LCBpZiB5b3UgZG9uJ3Qga25vdyBob3cgdG8gcGxheSBmaXZlIGNhcmQgZHJhdyBwb2tlciwgaXQncyByZWFsbHkgc2ltcGxlOiB5b3Ugbm93IGNob29zZSBhbnkgbnVtYmVyIG9mIHRob3NlIGZpdmUgY2FyZHMgdG8gZGlzY2FyZC4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnb25vdCByZWFsbHkuIApBcmUgbm93IG9uIHRoZSBzdWJtaXQgcGFnZS4gRHVlIHRvIHpvbmluZyByZWd1bGF0aW9ucywgYW5kIHByb3BlcnR5IGNvc3RzLCB0aGVzZSBidXNpbmVzc2VzIGFyZSBwcmV0dHkgbXVjaCBsdW1wZWQgdG9nZXRoZXIuIFNhbHQgTGFrZSBDaXR5IHpvbmluZyBvbmx5IGFsbG93cyBtYXNzYWdlIHBhcmxvcnMgdGhhdCBhcmUgTk9UIGNvbm5lY3RlZCB0byBhIG1lZGljYWwgdXNlIHRvIGJlIHBsYWNlZCB3aXRoaW4gYSBzcGVjaWZpYyBhcmVhIGNhbGxlZCBhIGNvbW1lcmNpYWwgY29ycmRpb3IuIApJIHdpc2ggSSBjb3VsZCBzdXBwb3J0IGJ1c2luZXNzZXMgdGhhdCBjb25kdWN0ZWQgdGhlbXNlbHZlcyBpbiBhIHdheSBJIGNvdWxkIHJlc3BlY3QsIGJ1dCBJIGNhbiBmaW5kIHRoZW0uIApBcyBmYXIgYXMgbWV0aGFuZSBnb2VzIE5BU0EgaGFzIHNvbWUgZmluZGluZ3Mgb24gdGhlIGNhdXNlcyBvZiB0aGUgbWV0aGFuZSBpbmNyZWFzZS4KMyBXYXlzIHRvIFBsYXkgUGFpIEdvdyBQb2tlcgpMQVRCIGhhcyBzb21lIGNyYXp5IGFjdGlvbiwgYW5kIHRoZSBiZXN0IHBsYXllcnMgYXJlIG9uIHRoZSBGcmlkYXkgc3RyZWFtLiBUaGF0IGJlaW5nIHNhaWQsIHRoZSBwbGF5cyB0aGF0IHRoZSBGcmlkYXkgcGxheWVycyBkbyBhcmVuIHN0dWZmIHRoYXQgSSB3b3VsZCBwdWxsIGluIHRoZSBsb2NhbCAxLzIgZ2FtZS4uIApNb250cmVhbCB0byBsYXVuY2ggcG90aG9sZSByZXBhaXIgYmxpdHogYW1pZCBtaWxkZXIgd2Vla2VuZCB3ZWF0aGVyCkxvZm90ZW4gdHJhaWxzIEkgY291bGQgaGF2ZSB3YWxrZWQgaGFkIEkgaGFkIHRpbWUuIFNvIGl0IGdvZXMuLiAKQWRkIGNob2NvbGF0ZSBjaGlwcyBhbmQgc3RpciB1bnRpbCBtZWx0ZWQuIExldCBzdGFuZCAxMCBtaW51dGVzIHRvIGNvb2wuIEFkZCByZW1haW5pbmcgaW5ncmVkaWVudHMuIApJbiB0aGlzIHR5cGUgb2YgcG9rZXIgZ2FtZSB0aGUgYmV0dGluZyBpcyBsaW1pdGVkIHRvIGEgcHJlZGVmaW5lZCBhbW91bnQuIApBZnRlciBhIHdoaWxlIGl0IGhhcyB0byBlaXRoZXIgYmVjb21lIGJhY2tncm91bmQgbm9pc2Ugb3IgSSBjYW5ub3QgZ2V0IGFueXRoaW5nIGRvbmUuIFNvIGZvciBtZSBpdCBpcyBhIGNvcGluZyBtZWNoYW5pc20gdGhhdCBJIHRha2UgdG9vIGZhci4gCiJBIGxvdCBvZiBlbnRlcnRhaW5tZW50IGluIG91ciBzb2NpZXR5IGlzIHBhc3NpdmUuIAo0LiBUaGlzIHBvcHVsYXIgVmljdG9yaWFuIGludGVyZXN0IGFuZCBwYXN0aW1lIHdhcyBjcmVhdGVkIG91dCBvZiBtb3N0bHkgZHVzdCwgc3RpY2tzLCBhbmQgdGhpbiBhaXIgYnkgRnJhbnogSm9zZXBoIEdhbGwgKDE3NTggMTgyOCkgYW5kIEpvaGFubiBHYXNwYXIgU3B1cnpoZWltICgxNzc2IDE4MzIpLgpMZSBjb3VycyBlc3QgZ3JhdHVpdC4gQSBsYSBjaGFyZ2UgZGUgbCd0dWRpYW50IGVuIGRidXQgZGUgcHJlbWlyZSBhbm5lLCBpbCBuJ3kgYSBxdWUgbCdhY2hhdCBkJ3VuIHNldWwgbWFudWVsIGQndW5lIHRyZW50YWluZSBkJ2V1cm9zIHF1aSBzZXJ0IGRlIGdyYW1tYWlyZSBldCBkZSBsZXhpcXVlIGF2ZWMgZGUgdHJzIG5vbWJyZXV4IGV4ZXJjaWNlcy4gVW4gbGl2cmV0IGRlIGNvcnJpZyBkZSBjZXMgZXhlcmNpY2VzIGVzdCBjb21wcmlzIGRhbnMgbGUgcHJpeCBkdSBtYW51ZWwuIApIb3dldmVyLCB0aGVyZSBhcmUgbmVnYXRpdmVzIHRvIGRlYWxpbmcgcG9rZXIgYW5kIGFjY29yZGluZyB0byB0aGUgd2Vic2l0ZSwgeW91IGhhdmUgdG8gaGF2ZSBzb21lIHByZXR0eSB0aGljayBza2luLi4gCiAxMSBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvSSBuZXZlciBkby4gMS4gWW91IGFyZSB1c3VhbGx5IGF0IGEgcmFuZ2UgZGlzYWR2YW50YWdlLiAKT3RoZXIgdGhhbiBjaGVja2luZyB0aGUgcmVnaXN0cnksIHlvdSBjYW4gYWxzbyBnZXQgYSBsaXN0IG9mIGluc3RhbGxlZCBhcHBsaWNhdGlvbnMgdXNpbmcgdGhlIFdpbjMyX1Byb2R1Y3QgQ2ltIGNsYXNzLCB3aXRoIHRoZSBHZXQgQ2ltSW5zdGFuY2UgY21kbGV0LgpUaGUgb3duZXJzIG9mIG1hbnkgdHJhY2tzICAgYWxvbmcgd2l0aCBnaG9zdCB0cmFja3MgdGhhdCBub3cgb2ZmZXIgb25seSBzaW11bGNhc3QgcmFjaW5nICAgYXJlIGhvcGluZyB0byBzdXJ2aXZlIGxvbmcgZW5vdWdoIGZvciBzdGF0ZXMgdG8gbGV0IHRoZW0gZHJvcCB0aGUgZmFjYWRlIG9mIGRvZyByYWNpbmcgYWx0b2dldGhlciBhbmQganVzdCBydW4gY2FzaW5vcy5MYXdtYWtlcnMsIG1pbmRmdWwgb2YgdGhlIGludGVyZXN0cyBvZiBkZWVwIHBvY2tldGVkIGNhc2lubyBvcGVyYXRvcnMgd2hvIGRvbid0IHdhbnQgdGhlIHVuZmV0dGVyZWQgY29tcGV0aXRpb24sIHNlZW0gdG8gaGF2ZSBvdGhlciBpZGVhcy5MYXN0IHllYXIsIFdlc3QgVmlyZ2luaWEgbGF3bWFrZXJzIHJlamVjdGVkIGEgYmlsbCBwdXNoZWQgYnkgb25lIG9mIHRoZSBzdGF0ZSdzIHR3byBkb2cgdHJhY2tzIHRvIGN1dCBpdHMgbGljZW5zaW5nIGZlZXMgYnkgbW9yZSB0aGFuIGhhbGYgYW5kIHRvIHJlZHVjZSB0aGUgbWluaW11bSBudW1iZXIgb2YgcmFjZSBkYXlzLlR3byBtb250aHMgYWdvLCBJb3dhIEdvdi4gCkhvcGVmdWxseSB3ZSBCcmFuY2ggb3V0IGFuZCBicmluZyBhIGJ1cyBvciB0d28gaW4gYXQgc29tZSBwb2ludC4gCkxpbmsgZG8gTWljcm9zb2Z0IE9mZmljZSAuLiAKSXQgaGFzIGJlZW4gcGFja2FnZWQgaW4gYSBiZWF1dGlmdWwgd2F5IHdoaWNoIHdpbGwgYXR0cmFjdHMgeW91IHRvIGJ1eSBpdCBvciBmb3IgZ2lmdGluZyBpdCB0byB5b3VyIHNwZWNpYWwgb25lLiBJdHMgYmxhY2sgb3V0c2lkZSBhbmQgc2xlZWsgYm9keSBmZWF0dXJlIGFyZSBtYWRlIGluIGEgbW9kZXJuIHN0eWxpc2ggd2F5IHRoYXQgd2lsbCBkZWZpbml0ZWx5IGdyYWIgeW91ciBhdHRlbnRpb24gYW5kIG1ha2UgeW91IGZhbGwgaW4gbG92ZSB3aXRoIGl0IHdoZW4geW91IHdpbGwgbG9vayBhdCBpdCBmb3IgdGhlIGZpcnN0IHRpbWUuIApJIGFsc28gc2VlbiBob3cgdGhlIG1lbnRhbGl0eSBvZiB3aW5uaW5nIHBsYXllcnMgaGFzIGNoYW5nZWQuIEl0IHVzZWQgdG8gYmUgYSBnaWFudCBwYXJ0eSB3aGVyZSBwbGF5ZXJzIHRob3VnaHQgdGhlcmUgd2FzIHRoaXMgZW5kbGVzcyBwb29sIG9mIGZpc2ggbW9uZXkuIE5vdywgaXQgYSBjdXR0aHJvYXQgd29ybGQgd2hlcmUgZXZlcnkgcmVnIGZpZ2h0cyBmb3IgZXZlcnkgZmlzaCB0aGF0IHNob3dzIHVwIGluIGFueSBmb3JtIChhdCBsZWFzdCBtc25sIGFuZCB1cHdhcmRzLiAKQyBmYWNpbGUgZGUgZmFpcmUgbGEgZG1vbnN0cmF0aW9uIHF1IHkgYSBiaWVuIHVuZSBhY3Rpdml0IG5vbiBjb25mb3JtZS4gCkRlYWx0IFFzUWMgaW4gVVRHKzEsIFVURyBmb2xkcyBhbmQgSSBvcGVuIHRvIDhrLCBnZXQgb25lIGNhbGxlciBpbiBNUCB3aXRoIGEgcHJldmlvdXNseSB1bmtub3duIHBsYXllciwgYW5kIGluIG15IG1pbmQgSSBnaXZlIGhpbSBhIDIwJSBvZiBoYW5kcyBjYWxsaW5nIHJhbmdlIChBQSA1NSwgQUtzIEEzcywgS1FzIEs3cywgUUogUThzLCBKVCBKOXMsIEFLbyBBOW8sIEtRbyBLVG8sIFFKbykgLgpTaG91bGQgYmFua2VycyB3aG8gcHJvZml0IG9mZiB0aGUgbWlzZXJ5IG9mIG1pbGxpb25zIG9mIHBlb3BsZSBhbmQgdGhlbiBwYXkgdGhlbXNlbHZlcyByZWNvcmQgc2FsYXJpZXMgYmUgZXhlY3V0ZWQ/IFllcyBvciBuby4KSGFkIGEgdmVyeSBnb29kIGxhdWdoIGF0IHRoaXMgb25lLCBCbHVlR2FtZXIuIEp1c3QgcGljdHVyaW5nIHRoYXQgcG9vciBTT0Igc3R1Y2sgdGhlcmUsIG9uIGEgbGFkZGVyLiAKU2hlIGFuIGFtYXppbmcgaHVtYW4gYmVpbmcuIEFuZCBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIHBhc3QgNiBvciA3IHllYXJzIChzaGUgMjYgbm93KSwgc2hlIGhhcyBtYWRlIHRoZSB0cmFuc2Zvcm1hdGlvbiBmcm9tICJraWQgc2Vla2luZyBhbiBpZGVudGl0eSIgdG8gImZ1bGwgZmxlZGdlZCBhZHVsdCB3aXRoIHN0cm9uZ2x5IGhlbGQgYmVsaWVmcyBhbmQgZ29hbHMiLiAKVGhleSBsb3ZlIHRoYXQgeW91J3JlIGxpa2UgdGhlIGxpdmUgdmVyc2lvbiBvZiBLYW1hIFN1dHJhIGFuZCBmZWVsIGNvbWZvcnRhYmxlIGNvbWluZyB0byB5b3UgZm9yIGFkdmljZS4gQ28gd3JpdHRlbiBieSBDb3VydG5leSBLaXJob2ZmIGFuZCBTdGV2ZW4gQ3Jvd2RlciBXb21lbiBtYXkgYmUgZHJhd24gdG8gYSBzZXh5IEJvbmQgdHlwZSBpbiBhIG1vdmllLCBidXQgdGhpcyBpcyBoYXJkbHkgdGhlIHNvcnQgb2YgbWFuIHRoZXkgYXJlIGhvcGVmdWxseSBhdHRyYWN0ZWQgdG8gaW4gcmVhbCBsaWZlLiBZb3VyIGNvbmZpZGVuY2UgaXMgb2ZmIHRoZSBjaGFydHMgSG93IG1hbnkgdGltZXMgZG8gd2UgaGVhciBmcm9tIG1lbiB0aGF0IGNvbmZpZGVuY2UgaXMgc2V4eT8gWW91IGp1c3QgbmVlZCB0byBzdGFuZCBmaXJtIHdpdGhpbiB5b3VyIGhlYXJ0LCBoYXZpbmcgY29tcGxldGUgZmFpdGggaW4geW91cnNlbGYuIApZb3UgY2FuIGFsc28gdXNlIHRoaXMgdG8gcmVtb3ZlIHRoZSBzY3JhdGNoZXMgb24geW91ciBtaXJyb3IuIFlvdSBjYW4gYnV5IGdsYXNzIHBvbGlzaGluZyBraXRzIGZyb20gdGhlIGhhcmR3YXJlIHN0b3JlLiAKWy5dIFRoZSBhdmVyYWdlIGNhcnBldGEgY29udGFpbmVkIHJvdWdobHkgMjAgcGFnZXMgYnV0IG1hbnkgd2VyZSBtb3JlIGV4dGVuc2l2ZTogdGhlIGZpbGUgb24gUGVkcm8gQWxiaXp1IENhbXBvcyBmaWxsZWQgdHdvIGJveGVzIHdpdGggNCw3MDAgcGFnZXMuIFRoZSBpbmZvcm1hdGlvbiBmb3VuZCBpbiB0aGUgY2FycGV0YXMgaW5jbHVkZWQgc2Nob29sIHRyYW5zY3JpcHRzOyBlbXBsb3ltZW50IGhpc3Rvcnk7IHBvbGl0aWNhbCBhZmZpbGlhdGlvbnM7IGNsdWIgbWVtYmVyc2hpcHM7IGJhbmsgYWNjb3VudHM7IHByb3BlcnR5IGhvbGRpbmdzOyB0YXhlcyBwYWlkOyBmYW1pbHkgYW5kIG1hcml0YWwgcmVjb3JkczsgdHJhdmVsIGhpc3Rvcnk7IGF1dG8gcmVnaXN0cmF0aW9uIGFuZCBsaWNlbnNlIHBsYXRlczsgbWVldGluZ3MgYXR0ZW5kZWQ7IHB1YmxpY2F0aW9ucyB3cml0dGVuIG9yIHJlY2VpdmVkLiBUaGV5IGFsc28gaW5jbHVkZWQgcGVyc29uYWwgaW5mb3JtYXRpb246IGZyaWVuZHMsIGJ1c2luZXNzIHBhcnRuZXJzLCBzZXh1YWwgcGFydG5lcnMsIG1pc3RyZXNzZXMsIGdpZ29sb3MsIGRlYnRvcnMsIGNyZWRpdG9ycywgcGVyc29uYWwgbGV0dGVycyAoaW50ZXJjZXB0ZWQgYXQgdGhlIHBvc3Qgb2ZmaWNlKSwgcmVjb3JkZWQgcGhvbmUgY2FsbHMsIHBob3Rvcywgd2VkZGluZyBsaXN0cywgbGF1bmRyeSB0aWNrZXRzIGFuZCAibWlzY2VsbGFuZW91cyBpdGVtcy4iCkZvciBldmVyeW9uZSB3aG8gZG9lcyBldmlsIGhhdGVzIHRoZSBMaWdodCwgYW5kIGRvZXMgbm90IGNvbWUgdG8gdGhlIExpZ2h0IGZvciBmZWFyIHRoYXQgaGlzIGRlZWRzIHdpbGwgYmUgZXhwb3NlZC4gQnV0IGhlIHdobyBwcmFjdGljZXMgdGhlIHRydXRoIGNvbWVzIHRvIHRoZSBMaWdodCwgc28gdGhhdCBoaXMgZGVlZHMgbWF5IGJlIG1hbmlmZXN0ZWQgYXMgaGF2aW5nIGJlZW4gd3JvdWdodCBpbiBHb2QuIiJPS19jbG91ZGNvbXB1dGlucSAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28uIApIb3cgd291bGQgdGhhdCBjYXVzZSBhIHByb2JsZW0gYW5kIGJlIHJlYWxseSBzdHVwaWQsIGFzIHlvdSBzYWlkPyBQbGVhc2UgZXhwbGFpbiBhbmQgYWxzbyB3aHkgeW91IHRoaW5rIHlvdSBjYW4gZ2V0IGEgVFJDIHdpdGhvdXQgYSBqb2IuCldoYXQgaXMgdGhlIGhpZ2hlc3QgY2FyZCBpbiBhIHBhY2sgb2YgY2FyZHM/ClRoaXMgaXNuIGEgY2lyY2xlIGplcmsgZm9yIHR3byByZWFzb25zLiBGaXJzdCwgYXMgSSBleHBsYWluZWQsIHRoZXkgYXJlIGV4cGxhaW5pbmcgdGhlaXIgZXhwZWN0YXRpb24sIHdoaWNoIHJlcXVpcmVzIG5vIHN1cHBvcnQgZnJvbSBhbnkgZGF0YSBhdCBhbGwuIApUaGUgb25seSBzaWduIG9mIHRlY2hub2xvZ3kgaW4gdGhlIHdhaXRpbmcgcm9vbSBpcyBhIGxhbmRsaW5lIHRlbGVwaG9uZSBvbiBoZXIgZGVzay4uIApEaXN0dXJiYW5jZXMgaW4gbW90b3IgY29udHJvbCBjYW4gYmUgcGVyc2lzdGVudCBhbmQgbGVhdmUgdGhlIGFyZWEgdnVsbmVyYWJsZSB0byByZSBpbmp1cnkgcmVjdXJyZW5jZS4KVGhlcmUgaXMgYSBzdGFydHVwIHRoYXQgaXMgdXNpbmcgQUkgdG8gbG9vayBhdCA2NiB2YXJpYWJsZSBvZiBpbmR1c3RyaWFsIG1hY2hpbmVyeSBhbmQgZWxlY3RyaWNhbCB0cmFuc2Zvcm1lcnMgdG8gcHJlZGljdCBmYWlsdXJlcywgaW50ZWxsaWdlbnRseSBkZXBsb3kgbWFpbnRlbmFuY2UgdGVhbXMgbW9yZSBlZmZpY2llbnRseSwgYW5kIHJlcGxhY2UgdGhlbSBiZWZvcmUgdGhleSBmYWlsLiBXaGlsZSB0aGlzIHdpbGwgbm90IGRpcmVjdGx5IHRha2Ugam9icywgYWxsb3dpbmcgYSBtYWludGVuYW5jZSB0ZWFtIHRvIGJlIGV4dHJlbWVseSBtb3JlIGVmZmljaWVudCB3aWxsIGRpc3BsYWNlIHdvcmtlci4uIApIZWxsIG1heWJlIEltIGhlbHBpbmcgc29tZW9uZSBlbHNlIHNwYXJrIHVwIHRoZWlyIGxvdmUgbGlmZSEgaGFoYS4gU28gZmFyIEkgb3dlIERIIChkZWFyIGh1c2JhbmQpIGEgaGFuZGpvYiwgYSBiaiAsYSBzdHJpcCB0ZWFzZSBhbmQgYSBidW5jaCBvZiBoaWNrZXlzLiAKVGhlcmUgd2lsbCBiZSBmZXdlciBicmlja3Mgb2YgY2FzaCBwaWxlZCBhdG9wIHRoZSBwb2tlciB0YWJsZSB3aGVuIHRoZSBuZXh0IHdpbm5lciBvZiBwb2tlciBNYWluIEV2ZW50IGlzIGNyb3duZWQgaW4gTm92ZW1iZXIuIEEgZ3VhcmFudGVlZCAkMTAgbWlsbGlvbiB0b3AgcHJpemUgaXMgbm8gbG9uZ2VyIGEgY2VydGFpbnR5IHNpbmNlIHRvcCBwb2tlciBwbGF5ZXJzIHRvbGQgc2VyaWVzIG9mZmljaWFscyB0aGV5IHdvdWxkIHJhdGhlciBzZWUgbW9yZSBwZW9wbGUgd2luIG1vbmV5LCBpbiB0aGlzIGNhc2UgdGhlIGxhc3QgMSwwMDAgcGxheWVycyBzdGFuZGluZy4gU3ByZWFkaW5nIHRoZSB3ZWFsdGggaXMgbGlrZWx5IHRvIGRyb3AgdGhlIHRvcCBwcml6ZSBjbG9zZXIgdG8gJDggbWlsbGlvbiBpZiB0aGUgc2FtZSBudW1iZXIgb2YgcGVvcGxlIHdobyBlbnRlcmVkIGxhc3QgeWVhciBkbyBzbyBhZ2Fpbi4KTm9ib2R5IGtub3dzIHRoZSB0cnVlIHZhbHVlIG9mIHRoZSBjYXJkIGV4Y2VwdCBmb3IgdGhlIHBsYXllciBoaW1zZWxmLiAKSGUgbm8gc2F2aW9yLCBsaWtlIHNvbWUgcGVvcGxlICh3aG8gc2hvdWxkIGJlIGxhYmVsbGVkIHdpdGggYW4gZXF1YWwgYW5kIG9wcG9zaXRlIHN5bmRyb21lKSB0aGluay4gCjUuIFNpZ24gYSBsZWFzZS4gT3JhbCBhZ3JlZW1lbnRzIGFyZSBsZWdhbCwgYnV0IGEgd3JpdHRlbiBsZWFzZSBwcm92aWRlcyB5b3UgYW5kIHRoZSB0ZW5hbnQgd2l0aCBtb3JlIHNlY3VyaXR5IGFuZCBhIGNsZWFyZXIgcGljdHVyZSBvZiBlYWNoIHBlcnNvbidzIHJlc3BvbnNpYmlsaXRpZXMuIFlvdSBjYW4gZmluZCBsZWFzZSBhZ3JlZW1lbnRzIG9uIHRoZSBJbnRlcm5ldCwgYW5kIGlmIHlvdSB3YW50IHRvIG1ha2UgaXQgbW9yZSBzcGVjaWZpYywgeW91IGNhbi4gU29tZSBhc3BlY3RzIG9mIGNvbW1vbiBsZWFzZSBhZ3JlZW1lbnRzOiBFYWNoIHBhcnR5IG11c3QgZ2l2ZSAzMCBkYXlzJyBub3RpY2UgYmVmb3JlIGVuZGluZyB0aGUgYWdyZWVtZW50OyB0aGUgYW1vdW50IG9mIHJlbnQgYW5kIGRlcG9zaXQgaXMgbGlzdGVkOyB0aGUgcmVudGVyJ3MgdXNlIGZvciB0aGUgcHJvcGVydHkgaXMgZGVmaW5lZDsgYW5kIHdobyBpcyByZXNwb25zaWJsZSBmb3IgdXBrZWVwIGFuZCBtYWludGVuYW5jZSBpcyBzcGVsbGVkIG91dC4gSW4gc29tZSBzdGF0ZXMsIHRoZSBzZWN1cml0eSBiYWxhbmNlIG11c3QgYmUga2VwdCBpbiBhbiBlc2Nyb3cgYWNjb3VudCB3aGVyZSBpdCBjYW4gYWNjcnVlIGludGVyZXN0LiBZb3UgaGF2ZSB0byByZXR1cm4gdGhlIHNlY3VyaXR5IGRlcG9zaXQgdW5sZXNzIHRoZSByZW50ZXIgZGFtYWdlcyB0aGUgcHJvcGVydHksIGFuZCBpZiBoZSBkb2VzLCB5b3UgaGF2ZSB0byBpbmZvcm0gaGltIGJ5IGNlcnRpZmllZCBtYWlsIHdoeSB5b3UgYXJlIG5vdCByZXR1cm5pbmcgdGhlIGRlcG9zaXQuClRoZSBjbHViIHdvdWxkbiB0YWtlIGVtLCBidXQgYSBjb3VwbGUgb2YgdGhlIHN0cmlwcGVycyB3b3VsZC4gCkQuIFRoZSBnYW1lIHBsYW4uIFRoZSBhYm92ZSBnaXZlcyBoaW0gdGhlIHBpZWNlcyB0byBwbGF5IHRoZSBOIGRpbWVuc2lvbmFsIGNoZXNzIGhlIHJlYWxseSBkb2VzIGR1cmluZyB0aGUgZ2FtZS4KSXQncyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IGV2YWx1YXRpbmcgaGFwcGluZXNzIGlzbid0IGEgaGlnaGx5IHByZWNpc2Ugc2NpZW50aWZpYyB1bmRlcnRha2luZy4gRm9yIG9uZSB0aGluZywgaGFwcGluZXNzIGlzIGEgc3ViamVjdGl2ZSB0ZXJtLCBhbmQgdGhlcmUncyBubyB1bml2ZXJzYWwgbWVhc3VyZW1lbnQgZm9yIGl0LiBUaG91Z2ggc29tZW9uZSBzbWlsZXMgb24gdGhlIG91dHNpZGUsIGl0IGRvZXNuJ3QgbWVhbiB0aGF0IGhpcyBvciBoZXIgYXBwYXJlbnQgam95IHJlZmxlY3RzIGludGVybmFsbHkuIApVbmRlciBTTkFQLCByZWNpcGllbnRzIGFyZSBnaXZlbiBhbiBhdmVyYWdlIG9mICQ0IHBlciBwZXJzb24sIHBlciBkYXkgdG8gc3BlbmQgb24gZm9vZC4uIApJZiBpZiB0aGUgT1AgZG9lc24ndCBoYXZlIHRpbWUgdG8gaGFuZyBvdXQgbW9yZSBtYXliZSB0aGVyZSBpc24ndCBtdWNoIG9uZSBvbiBvbmUgY29udmVyc2F0aW9uIGVpdGhlci4gSURLIEkga2luZCBvZiBzZWUgdGhpcyBsaWtlIHNvbWUgb2YgbXkgZmFtaWx5IHJlbGF0aW9uc2hpcHMgd2hlcmUgd2UgaGFuZyBvdXQgYXQgYWxsIHRoZSBmYW1pbHkgZ3JvdXAgZXZlbnRzIGJ1dCB3aXRoIG9ubHkgYSBmZXcgZG8gSSBoYXZlIGEgY2xvc2VyIHJlbGF0aW9uc2hpcCBpbiB0aGF0IHdlIGNoYXQgYW5kIGhhbmcgb3V0IHNlcGFyYXRlIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGZhbWlseS4KQSB5ZWFyIGdvZXMgYnkgZmFzdCBhbmQgaXQgc2VlbXMgbGlrZSBvbmNlIHlvdSBoYXZlIGEgc29saWQgeWVhciBvZiBnb29kIGV4cGVyaWVuY2UgaXQncyBhIGxvdCBlYXNpZXIgdG8gYXQgbGVhc3Qgc3RhcnQgZ2V0dGluZyBpbnRlcnZpZXdzLi4gCkJlZm9yZSB0aGUgcHJlc3MgY29uZmVyZW5jZSBhdCBDcm93biwgc2hlIGhhZCBiZWVuIHRvbGQgaGVyIGVtcGxveW1lbnQgY29udHJhY3Qgd291bGQgbm90IGNvbnRpbnVlIHBhc3QgRmVicnVhcnkgb25jZSB0aGUgZnVuZGluZyBkZWFscyB3ZXJlIGxvY2tlZCBpbiBhbmQgdGhlIHBva2VyIHRvdXJuYW1lbnQgZnVuZHJhaXNlciB3YXMgb3ZlciAgIGluZm9ybWF0aW9uIHNoZSB3YXMgbm90IHRvIGRpc2Nsb3NlIHB1YmxpY2x5LiBTb3VyY2VzIHNheSBDb2xlbWFuICJwcm90ZXN0IiByZXNpZ25hdGlvbiBhbmQgdGhlIGZvdW5kYXRpb24gb25nb2luZyBwcm9ibGVtcyB3aXRoIHRoZSByZWd1bGF0b3IgY2F1c2VkIHNpZ25pZmljYW50IGRpc3F1aWV0IGFtb25nIHRoZSBmb3VuZGF0aW9uIGZpbmFuY2lhbCBiYWNrZXJzLCBhbWJhc3NhZG9ycyBhbmQgc29tZSBib2FyZCBtZW1iZXJzLiBXYXJuZSwgd2hvIGluaXRpYWxseSBkZW5pZWQgQ29sZW1hbiB3YXMgbGVhdmluZywgbGF0ZXIgY29uY2VkZWQgdGhlIGZvdW5kYXRpb24gd2FzICJsb29raW5nIGF0IGFsbCBvcHRpb25zIGJ1dCBub3RoaW5nIGhhcyBiZWVuIGRlY2lkZWQiLiAKVGhleSBoYXZlIGEgY2hhcnRlciBtZW1iZXJzaGlwIG9mIDExNCBNci4gV09NQU4gT0YgTU9PU0UgVE8gSE9MRCBDQVJEIFBBUlRZIFdFRE5FU0RBWSBUaGUgV29tZW4gb2YgdGhlIE1vb3NlIHdpbGwgaG9sZCBhIGNhcmQgcGFydHkgV2VkbmVzZGF5LCBGZWIgIHJ1YXJ5IDEydGggaW4gdGhlIE1vb3NlIEhhbGwuIFRoZXkgcGxhbiB0byBoYXZlIGJyaWRnZSwgIjUwMCIgcGlub2NoZWwgYW5kIHBva2VyLiAKQW5kIHdvdWxkIGxpdGVyYWxseSBjcnkgYWJvdXQgaGF2aW5nIHRoZSBzbWVsbCBvbiBoZXIuLiAKIkNlcmFtaWMgd2FzIGEgc3VycHJpc2UgaW4gdGhhdCB3ZSBmb3VuZCB0aGUgbW9zdCBoYXJtZnVsIG1pY3Jvb3JnYW5pc21zIHByZXNlbnQsIiBDYXJyb2xsIHNheXMuIApKb2huIFBhcm1ldGVyJ3MgbGF3eWVyLCBKb2huIEVsbGlzLCBzYWlkIGl0IHdhcyBkaWZmaWN1bHQgdG8gc2VjdXJlIHByb3NlY3V0aW9ucyBpbiBoaXN0b3JpYyBjaGlsZCBzZXggYWJ1c2UgY2FzZXMsIGFuZCAnJ3RoaW5ncyB3ZW50IHByZXR0eSBiYWRseSB3cm9uZycnIHdpdGggdGhlIEJyb2NrIGNhc2UuICcnVGhlIGRhbWFnZSBzdWZmZXJlZCBieSB2aWN0aW1zIG9mIHNlcmlvdXMgY2hpbGRob29kIGFidXNlIG1ha2VzIGl0IGV4dHJlbWVseSBkaWZmaWN1bHQgZm9yIHRoZW0gdG8gZ2V0IGNvbnZpY3Rpb25zLCcnIE1yIEVsbGlzIHNhaWQuIEZvcm1lciBNYWl0bGFuZCBOZXdjYXN0bGUgZGlvY2VzZSBjaGlsZCBwcm90ZWN0aW9uIG9mZmljZXIgSGVsZW4gS2VldmVycyBzYWlkIHNoZSB2b21pdGVkIGJlc2lkZSBoZXIgY2FyIGFmdGVyIGhlYXJpbmcgSm9obiBQYXJtZXRlcidzIGFsbGVnYXRpb25zIGluIFNlcHRlbWJlciAyMDA3LiAKV2UgYXJlIGhlcmUgdG8gaGVscCB5b3UgZ2V0IGEgc3RhcnQgaW4gcGxheWluZyB0aGUgZ2FtZSBvZiBjcmFwcy4gCkFMU086R29yZG9uIENhbXBiZWxsICAgT24gd2h5IHdlIHNob3VsZG4ndCBzdXBwb3J0IHRoZSBVUyBsZWQgY291cCBpbiBWZW5lenVlbGEKU3RhcnRzIHdhbGtpbmcuIApFaWxlZW4gZXZlbiBwYXduZWQgaGVyIGdvbGQgYW5kIGRpYW1vbmQgd2VkZGluZ3MgcmluZ3MsIHNvbWV0aGluZyBzaGUgc3dvcmUgc2hlIHdvdWxkIG5ldmVyIGRvLiBTaGUgaGFzIHNpbmNlIHBhaWQgYSBoZWZ0eSBwcmljZSB0byBnZXQgdGhlbSBiYWNrLiBTaGUgc2hhbWVmdWxseSBhZG1pdHMsICJJIGFtIGFuIGFkZGljdGl2ZSBnYW1ibGVyLiIgSW4gdGhlIHBhc3QgZmV3IHllYXJzLCBFaWxlZW4gc2F5cyBzaGUgaGFzIGdhbWJsZWQgYXdheSBoZXIgZmFtaWx5IGVudGlyZSBsaWZlIHNhdmluZ3MuIApUaGVyZSBtdXN0IGJlIG90aGVycyB3aG8gaGF2ZSBtdWNoIG1vcmUgc2VyaW91cyBwcm9ibGVtcyB0aGFuIG1lLiBPbmUgZm9jdXNpbmcgdGVjaG5pcXVlIHRoYXQgY2FuIGJlIHVzZWZ1bCB3aGVuIHRoZSBwZXJzb24gaXMgdW5hYmxlIHRvIGV4cHJlc3Mgd2h5IHRoZXkgYXJlIHVwc2V0LCBvciBpcyBjb25mdXNlZCBpcyB0byBhc2sgdGhlIHBlcnNvbiB0byB1c2UganVzdCBvbmUgd29yZCB0byBkZXNjcmliZSBoaXMvaGVyIHByb2JsZW0uIApQZW5uem9pbCBPaWwgNDAwIGF0IExhcyBWZWdhcyAzIDMgMTlBVVRPIFVTIE5BU0NBUiBQRU5OWk9JTCA0MDBOQVNDQVIgZmFuIFRhbWkgVmVybW90ZSBwcmVwYXJlcyB0byB0YWtlIGEgcGhvdG8gb2YgdGhlIFVuaXRlZCBTdGF0ZXMgQWlyIEZvcmNlIFRodW5kZXJiaXJkcyBhcyB0aGV5IGZseSBvdmVyIGZhbnMgYmVmb3JlIHRoZSBzdGFydCBvZiB0aGUgUGVubnpvaWwgNDAwIHJhY2UgYXQgTGFzIFZlZ2FzIE1vdG9yIFNwZWVkd2F5IG9uIE1hcmNoIDMsIDIwMTkgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuICAgVGVucyBvZiB0aG91c2FuZHMgYXR0ZW5kZWQgdGhlIFBlbm56b2lsIDQwMCwgYW4gYW5udWFsIE5BU0NBUiBDdXAgU2VyaWVzIHJhY2UuIApNeSBkYXVnaHRlciBvZnRlbiBnZXRzIG91dCBvZiBiZWQgYW5kIHdhbnRzIHRvIGhhbmcgb3V0IHdpdGggbWUgd2hlbiBJIHNpdHRpbmcsIGJ1dCB3ZSB0YWxrZWQgYWJvdXQgaXQgYW5kIEkgdGVsbCBoZXIgaXRzIG9rIGlmIHNoZSB3YW50cyB0byBqb2luIG1lLCBzaXR0aW5nIHF1aWV0bHkgbmV4dCB0byBtZS4gU2hlIGRvZXMgdGhpcyBzb21ldGltZXMgYW5kIGl0cyBhIG5pY2UgZmVlbGluZy4gClBlb3BsZSBkb24gcXVldWUgcHJvcGVybHkgYW5kIGFsd2F5cyBzdGFuZCBvbiBib3RoIHNpZGVzIG9mIHRoZSBlc2NhbGF0b3IgZXRjLkFuZCBob3cgYWJvdXQgdGhlIG1pc29neW55IG9mIFdhbiBDaGFpPyBTZW5kIHRob3NlIGRpcnR5IGV4cGF0cyBob21lLiAKIkkgdGhpbmsgdGhhdCBpcyB1bmZvcnR1bmF0ZWx5IGEgcHJvYmxlbSB3aXRoaW4gb3VyIGluZHVzdHJ5IGFuZCBvbmUgdGhhdCB3ZSBhcmUgdHJ5aW5nIHRvIGVyYWRpY2F0ZS4gVG8gdXNlIG1hc3NhZ2UgYXMgYSBmcm9udCBpcyByZWFsbHkgdW5zY3J1cHVsb3VzIGFuZCB3ZSBhcyBhIHNjaG9vbCBhbmQgYXMgcHJvZmVzc2lvbmFscyBhcmUgYWN0aXZlbHkgdHJ5aW5nIHRvIGVsaW1pbmF0ZSB0aGF0IGZyb20gb3VyIGluZHVzdHJ5LiJPJ05laWwgYW5kIExpdSB3ZXJlIGdyYW50ZWQgdGVtcG9yYXJ5IGxpY2Vuc2VzIGJ5IHRoZSBjb3VuY2lsIGluIEZlYnJ1YXJ5IHBlbmRpbmcgYSBzaXggbW9udGggcmV2aWV3LiAKSG5saWNoIHdpZSBnZWdlbiBCdXJnd2VpbnRpbmcgc3RhcnRldGVuIHdpciBmYXN0IHBlcmZla3QgdW5kIGdpbmdlbiBtaXQgMjQ6NCBuYWNoU2V0enJ1bmRlIDEgaW4gRmhydW5nLiBJbSBuY2hzdGVuIER1cmNoZ2FuZyBqZWRvY2gga29ubnRlIGxlZGlnbGljaCBMdWthcyBzZWluZSBQYXJ0aWUgZ2V3aW5uZW4sIHNvIGRhc3MgZGllIEJsYWNrRG9ncyB2b3IgZGVyIGVudHNjaGVpZGVuZGVuIDMuIFNldHpydW5kIGFiZXIgbm9jaCBrbmFwcCBtaXQgNCBQdW5rdGVudm9ybGFnZW4gbGFnZW4uIApUaGVyZSBpcyBhIHNoaXQgdG9uIG9mIGNvbnRleHQgbWlzc2luZyBoZXJlLCB0aG91Z2ggKHdoeSB0aGUgc29uIHNpZGVkIGluIHRoZSBkaXZvcmNlLCB3aHkgdGhleSBkaXZvcmNlZCBpbiB0aGUgZmlyc3QgcGxhY2UgZXRjKS4gV2UgYWxzbyBjYW4ga25vdyBpZiB0aGUgc29uIHdhcyBhd2FyZSBvZiBoaXMgZmF0aGVycyBpbW1pbmVudCBwYXNzaW5nLCBpZiBoZSB3YXMsIHdoeSBub3QgcmVhY2ggb3V0IHRvIGhpbSB0aGVuPyBQYXRjaCB0aGluZ3MgdXAgYW5kIGFsbCBpcyBmaW5lIGFuZCBkYW5keS4gCkxpa2UgQ2VwZWssIERheCBCdXJnb3MsIHdobyB3b3JrcyB3aXRoIENvbW11bml0eSBDeWNsZXMsIGlzIG9wdGltaXN0aWMgYWJvdXQgd2hhdCB0aGUgZGF5IGNvdWxkIG1lYW4gZm9yIHRoZSBmdXR1cmUuCkFuZCB0aGF0cyBub3QgZGVjZW50cmFsaXplZCBwb2tlci4gV2hhdGV2ZXIgaXMgeW91ciBwZXJzb25hbCB3YWxsZXQgdGhleSBzaG91bGQgbm90IGJlIGFibGUgdG8gdG91Y2ggYW5kIHdoYXQgaXMgaW4gdGhlIHBsYXllcnMgd2FsbGV0cyBzaG91bGQgYmVsb25nIHRvIHlvdS4gClRoZSBiZXN0IHdheSB0byBtYW5hZ2UgbWFyaXRhbCBmaW5hbmNlcyBpcyB0byBwdXQgZXZlcnl0aGluZyBpbnRvIG9uZSBwb3QsIHRoZW4gaGF2ZSBzZXBhcmF0ZSBhY2NvdW50cyBmb3IgZWFjaCBwZXJzb24gd2l0aCB0aGVpciBidWRnZXRlZCBjdXQgb2YgdGhlIG1vbnRobHkgbW9uZXkuIEVxdWFsIGFtb3VudHMsIG5vdCB0aGlzICJJIG1ha2UgbW9yZSBzbyBJIGdldCBtb3JlIiBzdHVmZi4gQWxsIGZpbmFuY2lhbCBkZWNpc2lvbnMgaW4gdGhlIG1haW4gcG90IGdldCBkZWNpZGVkIG9uIHRvZ2V0aGVyLCB3aXRoIHRoZSBvbmUgd2hvJ3MgYmV0dGVyIGF0IGZpbmFuY2VzIG1hbmFnaW5nIGl0LiAKQSBqdWRnZSB3YXMgbGVmdCBzY3JhdGNoaW5nIGhpcyBoZWFkIGZvbGxvd2luZyBzdGF0ZW1lbnRzIGJ5IEpvaG4gU3RlcGhlbiBDbGFyayBMZW1heSBhbmQgQmlhbmNhIFJvamFzIExhdHJhdmVyc2UsIHdobyBpcyB0aGUgcG9rZXIgcHJvIGV4IGdpcmxmcmllbmQuCkdlbnRsZW1hbiBKb2xlIGFuZCB0aGUgUmVkIFF1ZWVuIGJ5IExvaXMgTWNNYXN0ZXIgQnVqb2xkICgyMDE2KTsgU2xhbnRlZCBKYWNrIGJ5IE1hcmsgTC4gCiAgVGhlIGNoaWVmIGV4ZWN1dGl2ZSBvZiB0aGUgTkhMIE5ldyBKZXJzZXkgRGV2aWxzIGFuZCBOQkEgUGhpbGFkZWxwaGlhIDc2ZXJzIGRvZXNuIGJlbGlldmUgdGhlIHRlYW1zIHdpbGwgYmUgY2FzdCBpbiBhIGJhZCBsaWdodCBieSBhZ3JlZWluZyB0byBhIG11bHRpeWVhciBzcG9uc29yc2hpcCBkZWFsIHdpdGggb25lIG9mIHRoZSB3b3JsZCBsZWFkaW5nIG9ubGluZSBwb2tlciBjb21wYW5pZXMuCkxpbWl0IG15IHNlYXJjaCB0byByL2pvcmRhbnVzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpLaW0gS2FyZGFzaGlhbiBwbGF5aW5nIFBva2VyIHdpdGggbWlycm9yZWQgc3VuZ2xhc3NlcwpJIGFza2VkIHdoYXQgd291bGQgc3BlY2lmaWNhbGx5IGJlIENocmlzdGlhbiBhYm91dCBpdC4gClZlcnkgc3RhYmxlLCByZWxpYWJsZSwgYW5kIGVhc3kgdG8gdXNlIG9uY2UgeW91IGdvdCB1c2VkIHRvIG5vdCBoYXZpbmcgYSBtb3VzZS4gCkxvb2tpbmcgYXQgeW91cnMsIGl0J3MgbGlrZSB5b3UndmUgdW5sb2NrZWQgdGhlIHJlc3Qgb2YgdGhlIHBpY3R1cmUgSSBjb3VsZG4ndCBmaWd1cmUgb3V0IG9uIG15IG93bi4gClN3ZWV0LCBJIGhpdCBteSBmbHVzaCwgYnV0IEkgd2FzIGxvb2tpbmcgYXQgdGhlIGZsb3AgdGhpbmtpbmcgImZ1Y2ssIGhlIGdvdCBhIGJvYXQgb3IgYW4gQSBoaWdoIGZsdXNoLiBJIGZ1Y2tlZCIuIEkgdGhvdWdodCBhYm91dCBpdCBmb3IgYWJvdXQgdHdvIG1pbnV0ZXMsIHRoZW4gdGhhdCBmZWVsaW5nIG9mIHNoZWVyIHNob2NrL3N1cnByaXNlL3N0dXBpZGl0eS9qb3kgcm9sbGVkIGRvd24gbXkgc3BpbmUgd2hlbiBJIHJlYWxpemVkICJob2x5IHNoaXQsIEkgaGF2ZSBhIHN0cmFpZ2h0IGZsdXNoLiAKVGhlIHBpbGxvd3MgZmVlbCBtb2Rlcm4geWV0IGFyZSBwbGF5ZnVsIGFuZCBmdW4gbG9vayBncmVhdCBvbiBhIHNvZmEgYnV0IGFyZSBhbHNvIHBlcmZlY3QgZm9yIGFmdGVybm9vbiBuYXBzIGFuZCBidWlsZGluZyBmb3J0cy4gClRoZXJlIGlzIGEgbWlsaXRhcnkgYW5kIGZpcnN0IHJlc3BvbmRlciBjdWx0dXJlIG9mICJ0cmFpbiB0aHJvdWdoIHBhaW4sIiBhbmQgbWVtYmVycyBtYXkgZmVlbCBvdXRjYXN0IGlmIHRoZXkgc2l0IG91dCB0cmFpbmluZyBvciBhIG1pc3Npb24uIFBoeXNpY2FsIHRyYWluaW5nIChQVCkgb2Z0ZW4gYmVjb21lcyBhIHByaW1hcnkgbWV0aG9kIG9mIHN0cmVzcyByZWxpZWYsIGFuZCB0aGV5IGNhbiBiZWNvbWUgYWRkaWN0ZWQgdG8gdHJhaW5pbmcgYW5kIHJlZnVzZSB0byBtaXNzIFBULCBldmVuIHdoZW4gaW4gcGFpbi4gU2luY2UgcGh5c2ljYWwgYWN0aXZpdHkgaXMgYSBsaWZlc3R5bGUsIGFzIHNlcnZpY2UgbWVtYmVycyBncm93IG9sZGVyIHRoZXkgd2FudCB0byBwcm92ZSB0aGV5IGhhdmUgbm90IGxvc3QgdGhlaXIgZWRnZS4gCkEgaGlnaCBjb25jZXB0LCBsb3cgcHJvZmlsZSwgbWVkaXVtIHJhbmdlIGJhbGxpc3RpYyBtaXNzaW9uYXJ5LiAKQW5kIEkgaGF2ZSBmb3VuZCB0aGUgd2VpcmRlc3QgdGhpbmdzIGluIG91ciB5YXJkLiBOb3cgdGhhdCBpdCB3aW50ZXIgYW5kIHRoZSBiYWNreWFyZCBqdW5nbGUgaXMgbGVzcyBBbWF6b25pYW4sIEkgYmVlbiBhYmxlIHRvIGdldCBpbiB0byBjbGVhciBvdXQgZGVicmlzLCBsaW1iIHVwIGJ1c2hlcyBhbmQgdHJ5IHRvIG1ha2UgdGhpbmdzIGEgbGl0dGxlIG1vcmUgbGFuZHNjYXBlZC4gSSBmb3VuZCBhIGhhbmdpbmcgbGFudGVybiBpbiBhIHRyZWUuIApDaGVyaXNoZWQgUGFwYSB0byBEYW5pZWwsIEtldmluLCBNZWdoYW4sIEVtaWx5LCBNYXR0aGV3LCBBbmRyZXcsIEthdGhyeW4sIEFhcm9uLCBNaWNoZWxsZSwgSmVmZnJleSwgS2F5bGEsIEphY29iLCBTZXJlbml0eSBhbmQgR3JlYXQgIFBhcGEgdG8gTWFkaWx5biwgU29waGlhLCBOb2hsYW4gYW5kIFRvbmkgQW5uLiAKSSBvbmNlIGFnYWluIHJlYWxpemUgdGhhdCBJIHJhdGhlciBsaXZlIGluIHRoZSBFVS4gCkkga25vdyBmb3IgbWUgY29sbGVnZSBoYWQgbWUgc2hvb2sgYnV0IGEgbW9yZSBkaXN0YW50IGFwcHJvYWNoIGJ5IG15IHBhcmVudHMgaGVscGVkIG1lIHRvIGdyb3cgdXAgYW5kIHVuZGVyc3RhbmQgdGhhdCBJIHdhbnRlZCB0byBpbXByZXNzIHRoZW0gbm90IHRoYXQgSSBoYWQgdG8uIE1heWJlIGhlIG5lZWRzIHRvIGxlYXJuIGJ1dCBJIGNhbiBzZWUgaG93IGl0J3MgZnJ1c3RyYXRpbmcgd2hlbiB5b3UncmUgdGhlIG9uZSBwYXlpbmcgZm9yIGl0Li4gCkFsc28gb24gdGhlIGxvYmJ5IGxldmVsIGlzIHRoZSBwYXRpc3NlcmllLCBNaSBZdWUsIG9mZmVyaW5nIGZyZXNobHkgYmFrZWQgYnJlYWRzLCBjb29raWVzLCBjYWtlcywgY2hvY29sYXRlcyBhbmQgYSB3aWRlIHJhbmdlIG9mIEZyZW5jaCBwYXN0cmllcy4gR3Vlc3RzIGluIHRoZSBob3RlbCBvciBuZWFyYnkgbmVpZ2hib3Job29kIGNhbiBjaG9vc2UgdG8gZGluZSBpbiBvciBzaW1wbHkgb3JkZXIgdG8gZ28uClRoZSByZXN1bHRzIHdlcmUgYmVhdXRpZnVsICBsaWtlIHRoZSBwZXJmZWN0bHkgc2N1bHB0ZWQgZmxlc2ggbWFkZSB0aG91Z2h0ICBhIHJvb20gZnVsbCBvZiB0ZWFjaGVycyBhbmQgc3R1ZGVudHMgdGhpbmtpbmcgY3JpdGljYWxseSBhYm91dCB0aGUgcGxhc3RpYyBib2R5LiBDcmVzc2lkYSBIZXllcyB0YWxrZWQgYWJvdXQgaG93IGFsbCBjb3NtZXRpYyBzdXJnZXJ5IGlzIHBhcnQgb2YgdGhlIHJhY2lhbGl6ZWQgcHJvamVjdCBvZiAicGFzc2luZyIgZXZlbiB0aG91Z2ggd2hlbiB3aGl0ZSBwZW9wbGUgdHJ5IHRvIGxvb2sgd2hpdGVyLCBpdCBuZXZlciBub3RlZCBhcyBzdWNoLiBSYWNoZWwgSHVyc3QgdGFsa2VkIGFib3V0IGhvdyB0aGUgc2tpbiBoYXMgYmVlbiBpbmNyZWFzaW5nbHkgdHJlYXRlZCBhcyBhIHRleHRpbGUsIHdoaWNoIG1ha2VzIE9ybGFuIHJlY2VudCB3b3JrIG9mIGNvbnN0cnVjdGluZyBhIGNvYXQgb2YgaHVtYW4gYW5kIGFuaW1hbCBza2luIGdyb3duIGluIGRpc2hlcyBhbGwgdGhlIG1vcmUgaW50ZXJlc3RpbmcuCk9mIGNvdXJzZSB5b3UgYWxzbyBtdXN0IHJlYWxpemUsIHRoYXQgd2l0aCBiaXBvbGFyIElJIHlvdSBoYXZlIHBlcmlvZHMgb2YgZGVwcmVzc2lvbiwgbWFuaWEsIEFORCBub3JtYWxjeS4gTm90IGV2ZXJ5b25lIGV2ZW4gZ2V0cyB0byB0aGUgcG9pbnQgb2Ygbm9ybWFsIHBlcmlvZHMuIE9mIGNvdXJzZSwgdGhlbiwgeW91IHdlcmUgYWJsZSB0byB3b3JrIGhhcmQgYW5kIHRha2UgY29udHJvbCwgYnV0IHdoYXQgYWJvdXQgdGhlIHBlb3BsZSB3aXRoIG1ham9yIGNocm9uaWMgZGVwcmVzc2lvbiB0aGF0IGFyZW4ndCBhYmxlIHRvIGdldCB0byB0aGF0IHBvaW50IGJlY2F1c2UgdGhleSBsaXRlcmFsbHkgZG9uJ3QgaGF2ZSB0aGUgbW9ub2FtaW5lcyB0bz8KU2hlIG1hZGUgYW4gYXBwZWFyYW5jZSBhdCB0aGUgQ29sbGVnZSBQYXJrIGNvdXJ0aG91c2UgZm9yIGEgYmFpbCBoZWFyaW5nIGFmdGVyd2FyZCBhbmQgd2FzIHJlbGVhc2VkIG9uICQyLDAwMCBiYWlsLgpQb2tlciBpcyBnYWluaW5nIGEgbG90IG9mIG1lZGlhIGF0dGVudGlvbi4gVFYgZ2FtZXMgc2hvd3MsIGhpZ2ggcHJvZmlsZSB0b3VybmFtZW50cyBhbmQgdGhlIHRyYWRpdGlvbmFsIHBvcnRyYXlhbCBvZiBwb2tlciBpbiBmaWxtIGFuZCBUViBnaXZlcyB0aGUgZ2FtZSBhIGdsYW1vcm91cywgZXhjaXRpbmcgaW1hZ2UuClRoZSBsYXN0IHllYXIsIHRoZXJlIHJlYWxseSBoYXMgYmVlbiBub3RoaW5nIG5ldyBmb3Igc2FsZSwgaGUgc2FpZC4gbGFzdCBwcm9qZWN0IHdhcyBhdCBBbGJlcm5pIG9uIFJvYnNvbiBhbmQgaXQgd2FzIHNlbGxpbmcgYXQgdGhlICQzLDAwMCBhIHNxdWFyZSBmb290IHBsdXMgcmFuZ2UuIGhhdmUgYmVlbiBob3ZlcmluZyBhcm91bmQgdGhlICQyLDAwMCBzcXVhcmUgZm9vdCByYW5nZS4gUGVvcGxlIGFyZSBkcmF3biB0byBpdHMgZXhjZWxsZW50IGxvY2F0aW9uIGFuZCB2aWV3cyBvZiB0aGUgd2F0ZXIgYW5kIG1vdW50YWlucyBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgcHJvamVjdCBpcyBzaXR1YXRlZCBpbiBhIHBvY2tldCB0aGF0IGlzIGEgYml0IHJlbW92ZWQgZnJvbSB0aGUgaHVzdGxlIGFuZCBidXN0bGUgb2YgdGhlIHJlc3Qgb2YgdGhlIFdlc3QgRW5kLiB3aG9sZSBpZGVhIGlzIHRoYXQgeW91IGFyZSBjbG9zZSB0byB3b3JrLCB3aGVyZSB5b3UgZWF0IGFuZCB3aGVyZSB5b3UgZW50ZXJ0YWluLCB5ZXQgaW4gYSByZWFsbHkgbmljZSBuZWlnaGJvdXJob29kLCBoZSBzYWlkLgpOb3Qgb25seSBpcyB0aGlzIGRlYnQgY3Jpc2lzLCB0aGF0IHNvIG1hbnkgaW4gdGhlIFVTIGZlZWwgZGVlcGx5IGFuZCBwZXJzb25hbGx5LCBub3Qgb24gdGhlIFJlcHVibGljYW4gYWdlbmRhLCBidXQgdGhlaXIga2FtaWthemVzIGhhdmUgZXZlbiBmb3VnaHQgc3VjY2Vzc2Z1bGx5IHRvIG5ldXRlciBwcm9wb3NlZCByZWZvcm1zIHRvIHByb3RlY3QgY29uc3VtZXJzLiBGb3IgZXhhbXBsZSwgdGhleWhhdmUgbWFuYWdlZCB0byBmb3JjZSB0aGUgYWRtaW5pc3RyYXRpb24gdG8gYWJhbmRvbiBIYXJ2YXJkIFByb2Zlc3NvciBFbGl6YWJldGggV2FycmVuLCB3aG8gbGVkIHRoZSBmaWdodCBmb3IgYSBmb3JtYXRpb24gb2YgYSBnb3Zlcm5tZW50IGFnZW5jeSB0byBzdG9wIHRoZSBhYnVzZXMgYnkgYmFua3MgYW5kIGNyZWRpdCBjYXJkIGNvbXBhbmllcy4uIApBcHBseSBmb3IgYW4gSDFCIHZpc2EsIGFuZCBzZWUgaWYgeW91IGFyZSBncmFudGVkIG9uZSBiYXNlZCBvbiB5b3VyIGFjY29sYWRlcyBhbmQgY2VydGlmaWNhdGlvbnMuIFRoZSBzYWxhcmllcyBhcmUgYWx3YXlzIHZlcnkgY29tcGV0aXRpdmUgYW5kIHlvdSBjYW4gbGVnYWxseSBzZW5kIHF1aXRlIGEgYml0IG9mIG1vbmV5IGJhY2sgaG9tZSB3aXRob3V0IHRoZSBJUlMgb3IgTlNBIGJhdHRpbmcgYW4gZXllLiAKQmFyeWxhIGFsb25lIG9yIHRvIE1yLiAKTG9zIGthbWlrYXplcyBkZWwgcG9rZXIKVGhleSB3ZXJlIHRoZSBvbmx5IG9uZXMgd2l0aCBsb2NrcyBvbiB0aGVpciBkb29ycy4gU2hlIHdvdWxkIHdlYXIgamV3ZWxlZCBwbHVncyBhbmQgdGVsbCB1cyBhYm91dCBob3cgbXVjaCBpdCB0dXJuZWQgaGVyIG9uIGtub3dpbmcgdGhleSB3ZXJlbiBhd2FyZSwgb3IgdGhleSB3ZXJlIGF3YXJlLCBlY3QuIApUaGVzZSBhcmVuIHF1aXRlIHRoZSBzYW1lIGdlbnJlIGFzIHRoZSBnYW1lcyB0aGF0IHlvdSBtZW50aW9uZWQsIGJ1dCBJIGRvIGhhdmUgYSBjb3VwbGUgcmVjb21tZW5kYXRpb25zIHRoYXQgaGF2ZSBncmVhdCBzdG9yeSwgdHdpc3RzLCBhbmQgYXJlIHF1aXRlIGVhc3khIEhhdmUgeW91IHRyaWVkIGVwaXNvZGljIGdhbWVzIG9yIGludGVyYWN0aXZlIGZpbG1zPyBUaGV5IGFyZW4gZXZlcnlvbmUgY3VwIG9mIHRlYSBidXQgdGhleSBtaWdodCBiZSB3b3J0aCB0cnlpbmchIEJleW9uZCBUd28gU291bHMgd2FzIGEgcmVhbGx5IGVuam95YWJsZSBnYW1lIGZ1bGwgb2YgdHdpc3RzIGFuZCBteXN0ZXJ5LiBBbm90aGVyIGV4dHJlbWVseSBwb3B1bGFyIG9uZSBpcyBMaWZlIGlzIFN0cmFuZ2UuIApUaGVyZSB3ZXJlIHRocmVlIGpvYnMgYWxsIG1heWJyIDMwIG1pbnV0ZXMgYXdheSBhdCBkaWZmZXJlbnQgQ291bnR5IE1hcmtldCBzdG9yZXMsIHNvIEkgc2NoZWR1bGVkIG9uZSBlYWNoIGZvciB0dWVzZGF5IHRocm91Z2ggdGh1cnNkYXkuIFRoZSBzdW5kYXkgYmVmb3JlIEkgY2FsbGVkIGFoZWFkIHRvIG1ha2Ugc3VyZSB0aGV5IHJlY2VpdmVkIHRoZSBwcm9kdWN0IGFuZCBub25lIG9mIHRoZSBzdG9yZXMgaGFkLiAKSW4gb3RoZXIgd29yZHMsIHRoZSB0YXhwYXllciBtdXN0IGVzdGFibGlzaCB0aGF0IHRoZWlyIHByZWRvbWluYW50IGludGVudGlvbiBpcyB0byBtYWtlIGEgcHJvZml0IGZyb20gdGhlaXIgYnVzaW5lc3MgYWN0aXZpdHkgYW5kIHRoYXQgdGhlIGFjdGl2aXR5IGJlZW4gY2FycmllZCBvdXQgaW4gYWNjb3JkYW5jZSB3aXRoIG9iamVjdGl2ZSBzdGFuZGFyZHMgb2YgYnVzaW5lc3NsaWtlIGJlaGF2aW91ci4gCk9oIHJlYWxseT8gU28gZGF0aW5nL3JlbGF0aW9uc2hpcHMgZG9lc24gaW52b2x2ZSBidXlpbmcgZGlubmVyLCBkcmlua3MsIGdpZnRzLCB0aWNrZXRzIHRvIHNob3dzLCBjbG90aGVzLCBmbG93ZXJzLCBqZXdlbHJ5PyBPciBwZXJoYXBzIHlvdXIgbW9zdCB2YWx1YWJsZSBhc3NldCBvZiBhbGwsIHRpbWU/IFBlcmhhcHMgeW91IGFyZSBhIGdyYWR1YXRlIG9mIExleWtpcyAxMDEgYW5kIGhhdmUgbGVhcm5lZCB0byBzcGVuZCBtaW5pbWFsIGNhc2guIEJ1dCBldmVuIHRoZW4sIHlvdSBzdGlsbCBzcGVuZGluZyBtb25leS4gCklmIHlvdSB3YW50IHRvIGJlIHRoZSB3aW5uZXIgYXQgYWxsIGNhcmRzIGdhbWVzIGJ1dCB5b3VyIGx1Y2sgaXMgbm90IGF0IHlvdXIgc2lkZSBhbmQgeW91IGtlZXAgbG9zaW5nIHRoZW4geW91IGNhbiB1c2UgaGlkZGVuIGxlbnMgcGxheWluZyBjYXJkcyBhbmQgcG9rZXIgY2hlYXQgbGVucyBmb3IgYW50aWNpcGF0aW5nIHRoZSBjYXJkcyBhbmQgdGhlLgpJIHJlYWxseSBkb24ga25vdyBob3cgdG8gc3RhcnQuCkhvdyB0byBBY3RpdmF0ZSBXaW5kb3dzIDcgV2l0aG91dCBhIEtleS4gCkRlcGVuZGluZyBvbiB0aGUgYW1vdW50IG9mIHBsYXllcnMsIHRoZSBjYXJkcyBtYXkgYmUgZGVhbHQgdW5lcXVhbGx5LgpUaGVyZSB3YXMgbm8gZGlmZmVyZW5jZSBiZXR3ZWVuIE1UIGFuZCBOU1BFQyBpbiBudW1iZXJzIG9mIHBhcnRpY2lwYW50cyByZXNwb25kaW5nIHRvIHRyZWF0bWVudCAoT1IgMC41MSwgOTUlIENJOiAwLjE0LCAxLjkyKS4gClNlYW4gQ29ubm9yIGpvYiBhcyBtYW5hZ2VyIGlzIHN1cmVseSB0aGUgbW9zdCB1bmVudmlhYmxlIGluIHRoZSBkb21lc3RpYyBnYW1lLiBObyBtYW5hZ2VyIGluIHRoZSBjbHViIGhpc3RvcnkgaGFzIGhhZCB0byBkZWFsIHdpdGggc3VjaCBhIHNlcmllcyBvZiBtaXNmb3J0dW5lIGFuZCBzdGlsbCByZXR1cm4gdG8gd29yayBjaGFyZ2VkIHdpdGggdGhlIHRhc2sgb2YgbGlmdGluZyBtb3JhbGUgYW5kIGNvbnZpbmNpbmcgaGlzIHRyb29wcyB0aGV5IGNhbiBlZmZlY3QgYSBwb3NpdGl2ZSBjaGFuZ2UgaW4gdGhlIGNsdWIgZm9ydHVuZXMuLiAKSGUgc2F5cyBiZWZvcmUgSSBldmVuIGZpbmlzaCBzYXlpbmcgYWxsIGluICJJIENBTEwgQkxJTkQiLi4gCkFjYWRlbWljIEpvYiBPcHBvcnR1bml0aWVzIEFjYWRlbWljIEFmZmFpcnMgQ3VycmljdWxhciBBZmZhaXJzIE9mZmljZSBvZiBEaXZlcnNpdHkgQWZmYWlycyBFbWVyZ2VuY3kgUHJlcGFyZWRuZXNzIEluZHVzdHJ5IFJlbGF0aW9ucwpJIHVzZSB0byB0ZWFjaCBhdCBhIHNjaG9vbCBhbmQgdGhleSBoYWQgdG8gZG8gc29tZSByZW5vdmF0aW9ucyBpbiBiYWNrIG9mIHRoZSBhdWRpdG9yaXVtLiAKT24gYSBtb3JlIHNlcmlvdXMgbm90ZSB5b3UndmUgZ290IFJvdW5kZXJzIHdpdGggTWF0dCBEYW1vbiBhbmQgSm9obiBNYWxrb3ZpYy4gWW91IGNhbiB3YXRjaCB0aGUgZmluYWwgc2NlbmUgYmVsb3cgKFNwb2xpZXIgYWxlcnQsIG5hdGNoKSBhbmQgaXQncyB3b3J0aCBub3RpbmcgdGhhdCB0aGUgZHJhbWEgb2YgdGhhdCBzY2VuZSBpcyByZXBlYXRlZCBhbGwgb2YgdGhlIHRpbWUgaW4gdGhlIHJlYWwgZGVhbCB3aGljaCBpcyB3aHkgdGhlIGdhbWUgaXMgc28gYXR0cmFjdGl2ZS4uIApUaGUgc29sdXRpb24gd2FzIHRvIGZpbmQgdGhlIHN3ZWV0IHNwb3QgZm9yIGVhY2ggdGVtcGVyYXR1cmUgcmF0aW5nOiBtb3JlIGRlbnNlbHkgZmlsbGVkIGJhZmZsZSB0aGF0IHdvbiBhbGxvdyBkb3duIG1pZ3JhdGlvbiwgYnV0IHN0aWxsIGFsbG93cyBwcm9wZXIgbG9mdC4gVG8gdXMsIHdoZW4gaG9yaXpvbnRhbCBiYWZmbGVzIGFyZSBkb25lIHJpZ2h0LCB0aGV5IGFyZSB0aGUgd2F5IHRvIGdvIUxpZ2h0ZXIgYmFja3BhY2sgKGR1aCksIHRob3VnaCB0aGUgRXhvcyA1OCBpcyBhIHZlcnkgZ29vZCBwYWNrLlNtYWxsZXIgdHJhc2ggYmFnLCB5b3UgYXJndWFibHkgb25seSBuZWVkIHRvIGtlZXAgdGhlIGJhZyBhbmQgY2xvdGhlcyBkcnkuIApJbiBvdGhlciB3b3JkcywgcmVsYXRpdmUgc2tpbGwgbGV2ZWxzIG9mIHBsYXllcnMgYXQgdGhlIHRhYmxlLi4gCldhZ29uZXIgaW5zaXN0cyB0aGF0IEJ1aWNrIGhhcyBhIGZ1dHVyZSwgYW5kIGhlIGlzIGNvYXhpbmcgZGVhbGVycyB0byBncm91cCB0aGVpciBCdWljaywgUG9udGlhYyBhbmQgR01DIGZyYW5jaGlzZXMgdW5kZXIgb25lIHJvb2YuIE5vdyBHTSBtdXN0IGNyZWF0ZSBzb21lIHByb2R1Y3RzIGZvciB0aGVtIHRvIHNlbGwuCkxhdGVyLCB0aGUgdmljdGltIHdhcyBicm91Z2h0IGJhY2sgdG8gVG9yb250byB2aWEgR3VlbHBoIGFuZCBhbGxlZ2VkbHkgZm9yY2VkIHRvIHByb3ZpZGUgc2V4dWFsIHNlcnZpY2VzIHRvIGpvaG5zIGluIEJyYW1wdG9uIGFuZCBUb3JvbnRvLgpQZXUgYXZhbnQgbGEgY3Jtb25pZSBkIHByb3ByZW1lbnQgZGl0ZSwgc291cyBsZXMgZGlyZWN0aXZlcyBkdSBwcmUsIGwgW2RlcyBib3VsZWF1eF0gYSBsaWV1IGRhbnMgbGEgZm9ydCBvIHNvbnQgZW50ZXJycyBsZXMgaGFiaXRhbnRzIGR1IHZpbGxhZ2UuIENlcyBhcmJyZXMgYWJyaXRlbnQgbGVzIG1lcyBkZXMgYW5jdHJlcyBxdWkgc29udCBhaW5zaSBjb252aXMgIGxhIGZ0ZSAoMSkuIE9uIGZpY2hlIHNvbGlkZW1lbnQgZW4gdGVycmUgbGVzIGJvdWxlYXV4IGNvdXBzLiAKVGhpcyBpcyB3aGVyZSB0aGUgc2tpbGxzIHlvdSBsZWFybmVkIGFzIGEgd2ViIGRldmVsb3BlciB3aWxsIGNvbWUgaW50byBwbGF5LiAKRmVsdCBsaWtlIGZpeGluZyBteSBib2R5IHdhcyB0aGUgcHVycG9zZSBvZiBhbGwgbXkgeWVhcnMgb24gcGxhbmV0IEVhcnRoIGFuZCB0byBzb21lIGV4dGVudCwgdGhhdCBpcyBzdGlsbCB0cnVlLCBzaGUgYWRkcy4gb24gbG92aW5nIG15c2VsZiBhbmQgYWNjZXB0aW5nIG15IGJvZHkuIFByZXNlbnRpbmcgbXlzZWxmIHdpdGggc29tZSByYWRpY2FsIHNlbGYgbG92ZSBpcyB0aGUgcHVycG9zZSBvZiBteSBkYXlzIG9uIHRoaXMgcGxhbmV0LiBJIHRyaWVkIHNvbWUgd2F5cyBmb3IgZGVjYWRlcyBhbmQgbm93IEkgdHJ5aW5nIGEgdmVyeSwgdmVyeSBkaWZmZXJlbnQgYXBwcm9hY2ggZm9yIGEgYmV0dGVyIGZ1dHVyZSBmb3IgbWUuClllcywgaWYgeW91IGdvIHRvIHlvdXIgc3RvcmFnZSBpdCBnaXZlcyB5b3UgdGhlIG9wdGlvbiB0byB0cmFuc2ZlciB5b3VyIHBva21vbiBmcm9tIHlvdXIgRFMsIGlmIHlvdSBnZXQgcG9rbW9uIGluIGRpYW1vbmQvcGVhcmwgYWZ0ZXIgeW91ciBmaXJzdCB0cmFuc2ZlciBqdXN0IHRyYW5zZmVyIGFnYWluIGl0IHVwZGF0ZXMgeW91ciBjb2xsZWN0aW9uLiBIb3dldmVyIG9ubHkgdGhlIHBva21vbiBmcm9tIG9uZSBnYW1lIGNhcmQgY2FuIGJlIHVzZWQuIApTdHJpbmcgQmV0cwpIb3dldmVyLCB0aGV5IGFyZSBsb3ZpbmcgdGhlaXIgdGltZSBvbiB0aGUgaXNsYW5kIHNvIG11Y2ggaGUgbm90IHN1cmUgd2hlbiBvciBpZiB0aGV5IHdpbGwgbW92ZSBiYWNrLiBEaXRjaGluZyB0aGUgZGFpbHkgY29tbXV0ZSBhbmQgdGhlIHdoaXJsd2luZCBvZiBhY3Rpdml0aWVzIGluIENhbmFkYSBoYXMgYWxsb3dlZCB0aGUgZmFtaWx5IHRvIHNwZW5kIG11Y2ggbW9yZSB0aW1lIHRvZ2V0aGVyIG9uIGEgZGFpbHkgYmFzaXMsIHdoZXRoZXIgaXQgaGF2aW5nIGEgYmVhY2ggY2FtcGZpcmUsIHN3aW1taW5nLCBvciBleHBsb3JpbmcgdGhlIGlzbGFuZC4gVGhleSBmaW5kIHRoZSBwYWNlIG9mIGxpZmUgbXVjaCBsZXNzIHN0cmVzc2Z1bC4KQXV0cmUgYm9ubmUgbm91dmVsbGUsIGxhIFBQIG1hdHJpc2UgZHNvcm1haXMgbGUgcGhub21uZSBkZXMgc2F1dmV0dGVzIGRlIGxhIFBvcnRlIE1vbnRtYXJ0cmUgZXQgbGUgY2FyciBkZXMgYmlmZmlucyByZXRyb3V2ZSBzYSBmb25jdGlvbi4gSWwgbid5IGEgcGx1cyBkZSAgZnJvbnRpcmUgIGF2ZWMgbGEgU2VpbmUgU2FpbnQgRGVuaXMgY2FyIGxlcyBmb3JjZXMgZGUgcG9saWNlIG5hdGlvbmFsZSBldCBtdW5pY2lwYWxlIGRlIFNhaW50IE91ZW4gb250IHQgbXV0dWFsaXNlcy4gCllvdSBzYXZlZCB5b3VyIG1vbmV5LCBpc24ndCBpdD8gQW5kIG9uY2UgeW91IGhhdmUgZ290IHRvIGJ1eSBhIGZldyBtb3JlIGluIHRoaXMgbG9uZyB0aW1lIHBlcmlvZCwgeW91IGNhbiBidWlsZCB5b3VyIG93biBjb2xsZWN0aW9uIGFuZCBicmFuZC4gQ3JlYXRpbmcgeW91ciBvd24gYnJhbmQgaXMgdmVyeSBpbXBvcnRhbnQgZm9yIGEgbGVhZGluZyBwb2tlciBwbGF5ZXIgd2hvIHdhbnRzIHRvIGVuc3VyZSBoaXMgc3Ryb25nIHByZXNlbmNlIGluIHRoZSBwb2tlciB3b3JsZC4uIApUaGF0IGlzIHdoYXQgaSBtZWFudCBieSBleHRyYSB0aGluLCBhcyBpbiBUYW1peWEgRXh0cmEgVGhpbiBwbGFzdGljIGNlbWVudCwgYnV0IHBsYXN0aWMgY2VtZW50IGRvZXNudCBtYWtlIGl0IGFueSBlYXNpZXIgc2luY2UgeW91IGhhdmUgdG8gZ3JpcCBpdCBsaWtlIGEgTUZlciB1bnRpbCB0aGUgcGFydHMgd2VsZCB0b2dldGhlciBjbGVhbmx5LCBhbmQgdGhlbiBjbGVhbiB1cCBhZnRlcndhcmRzLCB3aGljaCBjYW4gYmUgcmVhbGx5IGJhZCBvbiBzb21lIG1pbmlzLiBBcyBTdWJtaXNzaXZlT2N0b3B1cyBtZW50aW9uZWQsIEdXIGNhbiBwdXQgdGhlIHNlYW0gbGluZXMgaW4gdmVyeSBiYWQgcG9zaXRpb25zIGxpa2UgaW4gdGhlIG1pZGRsZSBvZiBzaG91bGRlciBwYWRzLiAKU2VsYW5qdXRueWEsIEFuZGEgaGFydXMgbWVtZXJpa3NhIHNpdHVzIHBva2VyIHBlcmluZ2thdC4gS2FtYXIgcG9rZXIgYmlhc2FueWEgcGVyaW5na2F0IGRlbmdhbiBtZW1lbmFuZ2thbiBwZW1haW4gcG9rZXIuIFBlcmluZ2thdCBtZXJla2EgZGl0dWxpcyBkYXJpIHBlbmdhbGFtYW4gcHJpYmFkaSBkYW4gcGVuZ2FtYXRhbiBkYW4gZGlhbmdnYXAgZGFwYXQgZGlwZXJjYXlhLiBTaXR1cyB5YW5nIGtyZWRpYmVsIGJpYXNhbnlhIGFrYW4gbWVtaWxpa2kgYm9udXMgcGVuZ2FudGFyIHVtdW0gYXRhdSBtZW5hd2Fya2FuIGtyZWRpdCB0ZXJoYWRhcCBBbmRhIHNpZ24gdXAuIEluaSBzYW5nYXQgZGlhbmp1cmthbiB1bnR1ayBtZW11bGFpIGthcmVuYSByaXNpa28gYXdhbCB5YW5nIHJlbGF0aWYgcmVuZGFoLiBEaSBhbnRhcmEgc2l0dXMgYmViZXJhcGEgYmFpayBkaW5pbGFpLCBzaXR1cyBwb2tlciBvbmxpbmUgSW5kb25lc2lhIHRlbGFoIHBvcHVsZXIgdW50dWsgZ2FtZXIuCjIuIEhhdmUgYSBzeXN0ZW1hdGljLCBzdHJhdGVnaWMgcHJvY2VzcyBpbiBwbGFjZSB0aGF0IGlzIGRlc2lnbmVkIGluIGEgcHJlZGljdGFibGUsIHN1c3RhaW5hYmxlLCBhbmQgY29udGludW91cyBtYW5uZXIgdG8gYnJpbmcgaW4gcHJvc3BlY3RzIGFuZCBmaXJzdCB0aW1lIGJ1eWVycy4gWW91IGtlZXAgYWR2YW5jaW5nIGFuZCBlbmhhbmNpbmcgdGhlbSBmb3J3YXJkIHRvIHJlY3VycmluZyBwdXJjaGFzZXMgaW4gYSBwcmVkaWN0YWJsZSBlbm91Z2ggbWFubmVyIHRoYXQgeW91IGNhbiBsb29rIGF0IHlvdXIgbnVtYmVycyB0b2RheSBhbmQgYWNjdXJhdGVseSBwcmVkaWN0IHdoYXQgeW91ciBidXNpbmVzcyB3aWxsIGJlIGxpa2UgaW4gOTAgZGF5cywgMTAwIGRheXMsIG9yIHNvbWUgb3RoZXIgdGltZSBmcmFtZS4gClRoZSBsaXN0IGdvZXMgb24gYW5kIG9uIGJ1dCB0aGUga2lja2VyIGlzIHRoZSBsYXN0IG9uZSBJJ20gZ29ubmEgcG9zdCBvbiB0aGlzIHRocmVhZDsuIApCdXQgdGhhdCBmYW1pbHkgYWx3YXlzIHRob3VnaHQgdGhleSB3ZXJlIG11Y2ggYmlnZ2VyIHBvdGF0b2VzIHRoYW4gdGhleSByZWFsbHkgd2VyZS4gCihQaG90byBjcmVkaXQ6IFdMT1Mgc3RhZmYpLiAKU2VlaW5nIHRob3NlIHdvcmRzIHNjYXJlcyBtZS4gR290IGRpYWdub3NlZCBILiBQeWxvcmkgYmFjayBpbiBKYW51YXJ5LCB3YXMgb24gYSAxNCBkYXkgdHJpcGxlIGFudGliaW90aWMgcHJldiBwYWMsIGllLiAKQnkgSmFtZXMgU21pdGggVGhlIGFyZ3VtZW50IHRoYXQgc29tZWhvdyBDYXNpbm8gaXMgdG8gYmUgZGlzY2FyZGVkIGJlY2F1c2UgaXQ/cyA/TWFydGluIFNjb3JzZXNlIHJlbWFraW5nIEdvb2RmZWxsYXMgaW4gTGFzIFZlZ2FzPywgaXMgMjEgYW1vbmcgdGhlIHBsYXllcnMgc3RpbGwgaW4gdGhlIGhhbmQgYXQgdGhlIHNob3dkb3duIHdpbGwgc3BsaXQgdGhlIHBvdC4gVGlwcyBXYXJuaW5ncyBJZiB5b3Ugd2FudCB0byBwcmFjdGljZSBhIHBva2VyIHRvdXJuYW1lbnQgb25saW5lLCB1c2VkIHRvIGJlIGhhbGZ3YXkgYmlnICAgbGlrZSBFdmVyY2xlYXIgICBwbGF5ISBJIGhvcGUgeW91IGVuam95IHlvdXIgdHJpcCBkb3duIG1lbW9yeSBsYW5lIHdoaWxlIHdhbGtpbmcgYXJvdW5kIGluIHRoZSBIYXJkIFJvY2sgaXQsIGFsb25nIHdpdGggdGhyZWUgc2hyaW1wIGFuZCBtYXNoZWQgcG90YXRvZXMgb24gdGhlIHNpZGUuIAogY2VzIHBhbGllcnMsIHF1aSBzb250IGF1IG5vbWJyZSBkZSB0cm9pcywgY29ycmVzcG9uZGVudCB1bmUgdm9sdXRpb24gZGVzIG10aG9kZXMgZGUgY29sbGFib3JhdGlvbiBldCB1bmUgY3JhdGlvbiBkJ2luc3RydW1lbnRzIGluZGl0cyAocGFyIGV4ZW1wbGUgbGEgY3JhdGlvbiBkZSBmaWNoaWVycyBkZSBzY3VyaXQgaW50cmlldXJlIGRlIG5vdXZlbGxlIGducmF0aW9uLCBsYSBwcm9kdWN0aW9uIGRlIGRvY3VtZW50cyB2YWx1YXRpZnMgZGUgbGEgbWVuYWNlIGV0IGxlIGR2ZWxvcHBlbWVudCBkdSBwcmluY2lwZSBkZSBkaXNwb25pYmlsaXQpLiBQYXJhbGxsZW1lbnQgIGNlbGEsIGRlcyBvcmdhbmlzbWVzIHNwY2lmaXF1ZXMgc29udCBjcnMgOiBsZXMgb3JnYW5pc2F0aW9ucyBhdXhpbGlhaXJlcy4gCkluIG15IGNhc2UsIEkgbmV2ZXIgd2FzIGhhcHB5IGxpdmluZyBoZXJlIChVdGFoKSwgYnV0IGhhZG4gYmVlbiBhbnl3aGVyZSBlbHNlIHRoYXQgc2VlbWVkIGxpa2UgaXQgd291bGQgYmUgYW4gb3ZlcmFsbCBpbXByb3ZlbWVudC4gTXkgc2hvcnQgc3RvcnkgaXMgdGhhdCBhZnRlciBzcGVuZGluZyAgMi41IG1vbnRocyBpbiBLb3JlYSBhbmQgZmlndXJpbmcgb3V0IGhvdyBtb3N0IGRhaWx5IGxpZmUgdGhpbmdzIHdvcmsgKGFzIG11Y2ggYXMgb25lIGNhbiBpbiB0aGF0IHRpbWVmcmFtZSksIG15IGV4cGVyaWVuY2UgYXMgYSBmb3JlaWduZXIgaGFzIGJlZW4gb3ZlcndoZWxtaW5nbHkgcG9zaXRpdmUuIEV2ZXJ5IHRpbWUgSSBjb21lIGJhY2sgZnJvbSBLb3JlYSBJIGFjdHVhbGx5IGZlZWwgbGlrZSBJIGxlYXZpbmcgYnkgcmV0dXJuaW5nIHRvIG15IGJpcnRoIHBsYWNlLiBUaGVyZSBhcmUgZGVmaW5pdGVseSBzZXJpb3VzIGRvd25zaWRlcyBsaWtlIHRoZSBhd2Z1bCBhaXIgcXVhbGl0eSwgY29zdCBvZiBiZWVmLCBwb2xpdGljYWwgY3JhemluZXNzICh0aG91Z2ggd2UgaGF2ZSBwbGVudHkgb2YgdGhhdCBoZXJlIHRvbykgYnV0IHdlaWdoaW5nIHByb3MgYW5kIGNvbnMgaXQgaXMgY2xlYXIuCkFmdGVyIGFsbCwgdGhpcyB3YXMgYSBwZXJzb24gInByaXZhdGUiIGxpZmUuIApZb3UgY2FuIHNlZWsgbGljZW5zaW5nIGluZm9ybWF0aW9uIGZyb20geW91ciBzdGF0ZSdzIGNvdXJ0IHJlcG9ydGluZyBib2FyZCBvciBhIHNpbWlsYXIgYWdlbmN5LiAKTXkgZ2lybGZyaWVuZCBsaXZlcyBkb3duIHRoZXJlIChob3BlZnVsbHkgaSB3aWxsIHRvbywgc29vbikgYW5kIHNoZSB0cmllZCBmb3IgZGF5cyBhbmQgZGF5cyB0byBnZXQgaGVyIG1vbSB0byBsZWF2ZS4gc2hlIGxpdmVzIHdpdGggaGVyIHBhcmVudHMsIGhlciBzaXN0ZXIgYW5kIGFsbCB0aGVpciBwZXRzLCBhbmQgaGVyIGZhdGhlciB3YXMgb3V0IG9mIHRvd24gZHVyaW5nIHRoZSB3aG9sZSB0aGluZywgYW5kIHNoZSBjb3VsZG4ganVzdCBsZWF2ZSB0aGVtIHNvIHNoZSBzdHVjayBhcm91bmQuCkkgd2FzIG9uIGEgZmFtaWx5IHZhY2F0aW9uIHRvIEF0bGFudGEsIGFib3V0IDE5NzIuIFdlIHdlbnQgdG8gdmlzaXQgc29tZSBjb3VzaW5zIG9mIG15IGdyYW5kbW90aGVycy4gVHdpbiBzaXN0ZXJzLCBuZXZlciBtYXJyaWVkLCBpbiB0aGVpciA4MCBUaGUgaG91c2Ugd2FzIGluIGEgcnVuZG93biBuZWlnaGJvdXJob29kLiAKVGhpcyBwcm9jZXNzIHlpZWxkcyBhbiBleGNpdGluZyBhbmQgd29uZGVyZnVsIGFycmF5IG9mIGNvbG9ycyBvbiB5b3VyIHBva2VyIHRhYmxlLiAKNC4gVGhlIFVzZXIgICB1c3VhbGx5IHRoZXNlIHBsYXllcnMgYXJlIHByZXR0eSBsb3ZhYmxlLiBJbiBvdXIgY2FzZSwgd2VlZCBpcyB0aGUgZHJ1ZyBvZiBjaG9pY2UgZm9yIG91ciB1c2VyIHBsYXllcnMsIHRob3VnaCBxdWl0ZSBhIGZldyBkcmluayB0b28uIApZb3Uga25vdyB3aGF0PyBJIGFtIG9rYXkgd2l0aCB0aGlzLiBHaXZlIHRoZW0gYSB0YXN0ZSBvZiB0aGVpciBvd24gbWVkaWNpbmUuIApFdmVyIHNpbmNlIExlc2xpZSBMYW1wb3J0IHB1Ymxpc2hlZCB0aGUgc2VtaW5hbCBwYXBlciBvbiBpdCBpbiAxOTgyLCByZXNlYXJjaGVycyBoYXZlIGJlZW4gd29ya2luZyBvbiBpdCB0aXJlbGVzc2x5LiAKU28gc2hlIGdyZXcgaGVyIGhhaXIgb3V0IGJldHdlZW4gTWFyaWFuIGR5aW5nIGFuZCBiZWluZyBhc3NhdWx0ZWQuTm90aGluZyBpcyBtZW50aW9uZWQgYWJvdXQgZHJvcHBpbmcgb3V0IG9mIGNoZWVybGVhZGluZy4oUGxlYXNlIHNvbWVvbmUgY29ycmVjdCBtZSBpZiBJIGdvdCBhbnl0aGluZyB3cm9uZylGcm9tIHdoYXQgSSBjYW4gcmVtZW1iZXIsIEFtbWEgaXMgYXJyZXN0ZWQsIHB1dCBpbnRvIGEgamFpbC9pbnN0aXR1dGlvbiB1bnRpbCBzaGUgMTgsIGJ1dCBpdCBzdWdnZXN0ZWQgc2hlIGJlIGxvY2tlZCB1cCBiZXlvbmQgdGhhdC4gCkkgdGhpbmsgeW91IGxvb2sgY3V0ZSwgSSBsaWtlIHRoZSBoYWlyeW5lc3MgOykgQWxzbyBJIHRoaW5rIHlvdSBsb29rIHZlcnkgZ29vZCBmb3IgeW91ciB3ZWlnaHQsIEkgZG9uIGtub3cgaWYgeW91IHRhbGwgYnV0IGl0IGxvb2tzIGxpa2UgaXQgZGlzdHJpYnV0ZWQgbmljZWx5LiAKRXZlcnkgZGF5IEknZCBnbyBwbGF5IGFuZCB3YWxrIG91dCBpbiB1dHRlciBhd2UuIEkgcmVtZW1iZXIgaGF2aW5nIHplcm8gY29uZmlkZW5jZSBpbiBteSBoYW5kcyBubyBtYXR0ZXIgaG93IHN0cm9uZyB0aGV5IHdlcmUuIApNYXJ5IEVhc3RtYW4sIDgwLCBzYWlkIFJvc2VuYmVyZyBoYW5kZWQgaGVyIGEgbGV0dGVyIGFzIHNoZSBoZWFkZWQgb3V0IHRvIHNob3AgdGhlIG1vcm5pbmcgb2YgdGhlIHNob290aW5nLiBFYXN0bWFuIHNhaWQgc2hlIGxlZnQgdGhlIGxldHRlciBpbiBoZXIgYXBhcnRtZW50IGFuZCBkaWRuJ3QgcmVhZCBpdCB1bnRpbCBsYXRlciAgIGFmdGVyIHNoZSByZXR1cm5lZCB0byBmaW5kIHRoZSBidWlsZGluZyBhIGNyaW1lIHNjZW5lLgpMYXdyZW5jZSBBdmVudWUgRWFzdCBmcm9tIFdhcmRlbiwgYWxsIHRoZSB3YXkgZG93biB0byBEb24gTWlsbHMsIGhhcyBvbmx5IGJlZW4gY2xlYXJlZCBvbiBvbmUgc2lkZSBzaW5jZSBKYW51YXJ5LiBUaGUgb25seSByZW1vdmFsIGhhcyBiZWVuIHByaXZhdGUsIGFuZCBDTiBhcyBhbHdheXMgaGF2ZSBkb25lIGZ1Y2sgYWxsIHRvIHJlbW92ZSBzbm93IHRoZXkgcHVzaCBvZmYgdGhlIHJhaWwgYnJpZGdlcyBvbiBMYXdyZW5jZS4gVGhlcmUgYSAzZnQgaGlnaCBpY2Ugd2FsbCBhZnRlciB0aGUgQ1BSIG92ZXJwYXNzIG9uIExhd3JlbmNlLCBwdXNoZWQgZG93biB0aGUgaGlsbCBieSB0cmFpbnMuLiAKSSBkaWQgZXZlcnl0aGluZyBmb3IgeW91LCBJIHBhaWQgZm9yIHBhcnQgb2YgeW91ciBjb2xsZWdlLCBJIGFsd2F5cyBiZWVuIHRoZXJlIGZvciB5b3UuIi4gCkkgYmVnIHRvIGRpZmZlciwgb3Zlcmx5IHBvc2l0aXZlIHJldmlld3MgY2FuIG9mdGVuIGJlIHByb21vdGlvbmFsLiBXaGVuIHNvbWVvbmUgY29tbWVudHMgZG9lcyB3aGF0IGl0IHN1cHBvc2VkIHRvIGRvIGl0IGFwcGVhbHMgdG8gbWUgbW9yZSBhcyBiZWluZyBob25lc3QuClRoZXkgY29tZSBpbiBoZXJlIHdpdGggYSBndW4sIGFuZCB0aGV5IHN0YXJ0IHNob290aW5nIGF0IHVzLCB3aGF0IHdvdWxkIHlvdSBkbz8iLiAKUGVhY2UgaXMgY29taW5nLiBJdCdzIGNsZWFyIG5vdy4gCiJEYW5uIGhhYmUgd2lyIGpldHp0IGRpZSBWb3JhYmtscnVuZ2VuIGJlZW5kZXQiIGVyZmZuZXRlIGVyIGlociwgdW5kIEhlbGVuIHNwcnRlIGZybWxpY2ggZGllIEVybGVpY2h0ZXJ1bmcsIGRhc3MgZGllc2UgcGVpbmxpY2hlIEJlZnJhZ3VuZyBlbmRsaWNoIHp1IEVuZGUgaXN0LiBDYXJsb3MgYmx0dGVydGUgbm9jaG1hbHMgaW4gZGVuIFBhcGllcmVuLCBkYW5uIHNhaCBlciB3aWVkZXIgenUgaWhyIGhpbmJlciB1bmQgc2FndGU6ICJPaCwgZGEgaXN0IG5vY2ggZWluZSBSdWJyaWssIGRpZSB3aXIgdmVyZ2Vzc2VuIGhhYmVuLiBXYW5uIGhhdHRlbiBzaWUgaWhyZW4gbGV0enRlbiBPcmdhc211cywgd2VubiBzaWUgZGllIFNlbGJzdGJlZnJpZWRpZ3VuZyBhdXNzZXIgQWNodCBsYXNzZW4/Ii4gV2llZGVyIHdhciBIZWxlbiBkaWUgRnJhZ2UgcGVpbmxpY2g6ICJEYXMgaXN0IGxuZ2VyIGhlciwgSGVyciBEb2t0b3IiLiAiSGFiZW4gc2llIGRlbm4gbmljaHQgcmVnZWxtc3NpZyBiZWltIFZlcmtlaHIgZWluZW4gT3JnYXNtdXM/IiBoYWt0ZSBDYXJsb3MgbmFjaC4gIkxlaWRlciBuZWluLCBIZXJyIERva3RvciwgZGVzaGFsYiBrb21tZSBpY2ggamEgenUgSWhuZW4uIEljaCBoYWJlIGZhc3QgbmllIGVpbmUgT3JnYXNtdXMsIGF1Y2ggd2VubiBtaWNoIGRlciBNYW5uIHNlaHIgenJ0bGljaCB2ZXJ3aG50LiBVbmQgaWNoIGhhYmUgZ2VkYWNodCwgc2llIGtubnRlbiBtaXIgZGFiZWkgaGVsZmVuIi4KVGhlcmUgYXJlIGFsc28gc29tZSB2ZXJ5IGdvb2QgZ3JvdXBzIG91dCB0aGVyZSwgeW91IGp1c3QgbmVlZCB0byBhc2sgYSBodW5kcmVkIHF1ZXN0aW9ucyBhbmQgRE8gTk9UIGJlIGltcHJlc3NlZCB3aXRoIGNyZWRlbnRpYWxzIG9mIHRyYWluaW5ncyBkb25lLCBpdCBqdXN0IG1lYW5zIHRoZXkgZG8gbm90IGhhdmUgYSBuYXR1cmFsIGZsYWlyIGFuZCBoYWQgdG8gbGVhcm5iIGl0IGp1c3QgdGhlIHdheSB5b3UgYXJlICwgIHNvIHRoZXkgYXJlIG5vdCBnb29kIHRlYWNoZXJzIGF0IGFsbC4gWW91IG5lZWQgc29tZW9uZSB3aXRoIGV4cGVyaWVuY2Ugb2Ygd2hhdCBpcyBiZWluZyB0YXVnaHQuIEFzIGV4cGVyaWVuY2UgY291bnRzIGZvciBhIGdyZWF0IGRlYWwuLiAKQW5kIHRoZSBhbHVtaW51bSBjYXNlIHRoYXQgaXQgY29tZXMgd2l0aCBpcyBhbm90aGVyIGh1Z2UgcGx1cy4gVGhlIGNhc2Ugd2lsbCBkZWZpbml0ZWx5IHByb3RlY3QgdGhlIGNoaXBzIGZyb20gZXJyYW50IHdlYXIgYW5kIHRlYXIgd2hpY2ggaXMgYSBtaXRpZ2F0aW5nIGZhY3RvciBpbiBlbnN1cmluZyB0aGUgY2hpcHMgd2lsbCBsYXN0IGEgbG9uZyB0aW1lLiBZb3Ugd2lsbCBiZSBtYWtpbmcgYW4gaW52ZXN0bWVudCB3aGVuIHlvdSBwdXJjaGFzZSB0aGVzZSBjb2xsZWN0aWJsZSBjaGlwcyBhbmQgeW91IHdhbnQgeW91ciBpbnZlc3RtZW50IHRvIGxhc3QgYSBsb25nIHRpbWUuIApMZXMgdGV4dGVzLCBxdWkgc2Vyb250IGVuc3VpdGUgZXhhbWlucyAgbCdBc3NlbWJsZSwgY29tcHJlbm5lbnQgZ2FsZW1lbnQgdW5lIGFjdHVhbGlzYXRpb24gZHUgc3RhdHV0IGQnYXV0b25vbWllIGRvbnQgYm5maWNpZSBsYSBQb2x5bnNpZS4gSWxzIHBydm9pZW50IHBhciBleGVtcGxlIGQnZW5jb3VyYWdlciBsYSBjb29wcmF0aW9uIGVudHJlIGxlcyBjb21tdW5lcyBldCBsYSBjb2xsZWN0aXZpdCBkZSBsYSBQb2x5bnNpZSBmcmFuYWlzZSwgbm90YW1tZW50IHBvdXIgbGUgcmVjb3V2cmVtZW50IGRlcyBpbXB0cyBsb2NhdXggZXQgbCdleGVyY2ljZSBjb25jb21pdGFudCBkZSBjZXJ0YWluZXMgY29tcHRlbmNlcyAocG9saXRpcXVlIGRlIGxhIHZpbGxlLCBwcm90ZWN0aW9uIGV0IG1pc2UgZW4gdmFsZXVyIGRlIGwnZW52aXJvbm5lbWVudCwgZXRjLikuLiAKUHJzZW50ZXogdm91cyBhdSBjb3VycyBkZSBzZWNvbmRlIGFubmUKQWxzbywgYmVmb3JlIGFueW9uZSBnZXRzIG9mZmVuZGVkLCB5b3UgdmVyeSB3ZWxsIG1heSBiZSBpbiB0aGF0IDEwJSB3aG8gdXNlcyB5b3VyIHNraWQgcGxhdGVzIG9uIHlvdXIgYnJhbmQgbmV3IHRydWNrIGFuZCB0aGF0IGdyZWF0LiAKRnJvbSBwcm92aWRpbmcgYW5kIHJlY2VpdmluZyBhIGdvb2QgdGhlcmFwZXV0aWMgbWFzc2FnZSB0byBob3cgdG8gZGlzY292ZXIgdGhlIGJlc3QgbWFzc2V1c2UuIFN0dWR5IG9uIS4gCkZvdXIgT2YgYSBLaW5kCldvbHZlcmhhbXB0b24gV2FuZGVyZXJzIEZDV29sdmVzIGZhbnMgYXJlIGFsbCBzYXlpbmcgdGhlIHNhbWUgdGhpbmcgYWZ0ZXIgRWRlbiBIYXphcmQgcmVzY3VlcyBDaGVsc2VhSXQgd2FzIGxhdGUsIGxhdGUgaGVhcnRicmVhayBmb3IgV1dGQyBhdCBTdGFtZm9yZCBCcmlkZ2UKT25lIG9mIHRoZSBjb29sZXN0IHRoaW5ncyBhYm91dCBiZWluZyBhbiBOR1MgRXhwbG9yZXIgdG8gbWUgaXMgbXkgZmVsbG93IEV4cGxvcmVycy4gVGhlc2UgYXJlIGFtYXppbmcgcGVvcGxlIGRvaW5nIGluY3JlZGlibGUgd29yayBpbiBhIGh1Z2UgYXJyYXkgb2YgZmllbGRzLiBUaGV5J3JlIHBob3RvZ3JhcGhlcnMsIGZpbG1tYWtlcnMsIHNjaWVudGlzdHMsIGRhbmNlcnMsIGFydGlzdHMsIHRlYWNoZXJzLCBldGMuIFdoYXQgdW5pdGVzIHRoZW0vdXMgaXMgcGFzc2lvbiBhIGRlZXAgcGFzc2lvbiB0byB0YWtlIG91ciB3b3JrIGZ1cnRoZXIgZXZlcnkgZGF5LCB0byBrZWVwIGdldHRpbmcgb3V0IGJlZCBlYWNoIG1vcm5pbmcgYW5kIHdvcmtpbmcgYXQgaXQgZXZlbiBpbiB0aGUgZmFjZSBvZiBodWdlIG9ic3RhY2xlcy4gSSBjYW4ndCB0ZWxsIHlvdSBob3cgbWFueSB0aW1lcyBJIGdldCB1cCwgY3J1aXNlIHRocm91Z2ggdGhlIGhvcnJpYmxlIGhhdGUgbWFpbCB0aGF0IGNvbWVzIGludG8gbXkgZW1haWwsIG9yIGxvb2sgYXQgbXkgc3R1ZGVudCBsb2FucyBhbmQgd29uZGVyIGlmIEkgc2hvdWxkIHF1aXQgZG9pbmcgZmllbGR3b3JrICh3aGljaCBkb2VzIG5vdCBwYXkpIGFuZCBnZXQgYSByZWFsIDkgNSBqb2IsIG9yIG1pc3MgYW5vdGhlciBmcmllbmQgY2VsZWJyYXRpb24gYmVjYXVzZSBJJ20gb24gYSBwbGFuZSBzb21ld2hlcmUgZ29pbmcgdG8gdGVhY2ggc29tZW9uZSBhYm91dCBjbGltYXRlIGNoYW5nZSB0aGlzIGlzIGFsbCBoYXJkIHN0dWZmLiBCdXQgSSBrZWVwIGRvaW5nIGl0LCBiZWNhdXNlIEkgYmVsaWV2ZSBpbiB0aGUgd29yayBJIGRvLiBBbmQgc28gZG8gbXkgZmVsbG93IE5HUyBleHBsb3JlcnMuIEFuZCwgaG9uZXN0bHksIHNvIGRvIHlvdS4KU3RldmVuQXJ2aXYgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpJIG5vdGljZWQgbXkgbWV0YWwgZGV0ZWN0b3IgZ2F0aGVyaW5nIGR1c3QgaW4gdGhlIGNvcm5lciBvZiB0aGUgc2hlZC4gCklESyB0aGV5IG1ha2luZyBhIGJsYWNrIHdpZG93IG1vdmllIHNvIGF0IGxlYXN0IGl0IGRvZXNuIGxvb2sgbGlrZSBhIG9uZSBvZmYgZ2ltbWljay4uIApUaGF0IHByb2JhYmx5IG1ha2VzIGhlciBjYXBhYmxlIG9mIGRlZmVhdGluZyBtb3N0IGZpY3Rpb25hbCBjaGFyYWN0ZXJzIHdpdGggYW55IHBoeXNpY2FsIHZ1bG5lcmFiaWxpdHksIHllcy4gQWx0aG91Z2ggaGVyIGltbW9ydGFsaXR5IGRvZXMgbm90IGNvbWUgd2l0aCBhbnkgcmVnZW5lcmF0aXZlIGNhcGFjaXR5LCBhcyBkZXNwaXRlIGhlciBpbmFiaWxpdHkgdG8gZGllIHNoZSBET0VTIHN0aWxsIGFwcGVhciB0byBhZ2UuIApDYXRjaCB0aGUgZmVycnkgYmFjaywgYW5kIGluc3RlYWQgb2YgY2xpbWJpbmcgdGhlIGJyaWRnZSwgY2xpbWIgdG8gdGhlIFB5bG9uIGxvb2tvdXQuIApUaGUgd2FnZXIgcmVxdWlyZW1lbnQgaXMgZXhwcmVzc2VkIGJ5IHRoZSBudW1iZXIgb2YgcGxheWVkIGRlYWxzIG9yIHRoZSBhbW91bnQgb2YgYmV0IG1vbmV5Li4gCkkgdHJpZWQgZ3JvY2VyeSBwaWNrIHVwIHR3aWNlIGFuZCB3YW50IHRvIGRvIGl0IG1vcmUuIFdoYXQgaXMgbGlrZSB3aXRoIGRlbGl2ZXJ5PyBBcmUgZ3JvY2VyaWVzIGRlbGl2ZXJlZCB3aGVuIHRoZXkgc2F5IGl0IHdpbGw/Ckhvd2V2ZXIgd2l0aCB0aGUgbGFyZ2UgbnVtYmVycyBpbiBhIGdyb3VwIHJpZGluZyBzZXZlcmFsIHJpZGVycyBhY3Jvc3MgdGhlIGxhbmUsIHRoZW4gbW92aW5nIGludG8gdHdvIGNvbHVtbnMgd2hlbiB0aGUgcmlkZXJzIHRoaW5rIGl0IGlzIHNhZmUgZm9yIGEgY2FyIHRvIHBhc3MsIGl0IGlzIHN0aWxsIGRhbmdlcm91cyBhbmQgSSB3aWxsIG5vdCBwdXQgbXlzZWxmIG9yIG15IGNhciBpbiBkYW5nZXIuIEkgYW0gb25lIG9mIHRoZSBkcml2ZXJzIHRoYXQgd2lsbCBnZXQgdGFpbGVkIGFuZCBob25rZWQgYXQgYmVjYXVzZSBJIHdpbGwgbm90IHBhc3MgdGhlIGJpa2VycyBpZiBub3QgY2xlYXJseSBzYWZlLiBPdGhlciBkcml2ZXJzIGRvIGFzIHdlbGwuIApUaGF0IG1lYW5zIHlvdSBtaWdodCBiZSBhYmxlIHRvIHNhdmUgbW9yZSB0YXggYnkgaGF2aW5nIHRoZSBzcG91c2Ugd2l0aCB0aGUgbG93ZXIgbmV0IGluY29tZSwgYW5kIHRoZSBzbWFsbGVzdCB0aHJlZSBwZXIgY2VudCB0aHJlc2hvbGQsIG1ha2UgdGhlIGNsYWltLiBSZXRpcmVkIGNvdXBsZXMsIHdobyB1c2UgcGVuc2lvbiBzcGxpdHRpbmcgdG8gZGV0ZXJtaW5lIHdoaWNoIHdpbGwgYmUgdGhlIGxvd2VyIGluY29tZSBzcG91c2UsIHNob3VsZCBiZSBwcmVwYXJlZCB0byBzd2l0Y2ggdGhlaXIgbWVkaWNhbCBleHBlbnNlIGNsYWltIGFjY29yZGluZ2x5Li4gCkkgZmVlbCBhIGxvdCBvZiB0aGF0IHN0ZW1zIGZyb20gaGVyIG93biBndWlsdCB0aGF0IHNoZSBjYW4gbm90IGZhY2UuIEkgYW0gdGhlIGVsZGVzdCBvZiBmb3VyIGNoaWxkcmVuLCBhbmQgd2Ugd2VyZSBhbGwgc2VwYXJhdGVkIGFuZCB0YWtlbiBhd2F5IGZyb20gaGVyIHdoZW4gSSB3YXMgYWJvdXQgNyB5ZWFycyBvbGQgYnkgY2hpbGQgc2VydmljZXMsIGFuZCBzZW50IHRvIGxpdmUgd2l0aCBvdXIgZmF0aGVycy4gCkFsbCB0aGF0IGxlZCB0byBhIHNlYXJjaCBmb3Igd2hhdCByZWFsbHkgbWF0dGVycy4KU2VsYnN0IGRpZSBDU1Ugd2FyIGZyaGVyIG1hbCBlaGVyIGxpbmtzIChuYXRybGljaCBqZXR6dCB3aXJ0c2NoYWZ0bGljaCBhbnN0YXR0IHNvemlhbCkgYXVmZ3J1bmQgZGVyIHZpZWxlbiBjaHJpc3RsaWNoZW4gR2V3ZXJrc2NoYWZ0ZW4gdW5kIEJhdWVybnZlcmJuZGUgZGllIGRhbWFscyBUZWlsIGRlciBDU1Ugd2FyZW4uCkEgc3VpdGNhc2UgZGVzaWduZWQgdG8gbW92ZSBhbG9uZ3NpZGUgeW91IHdoZXJldmVyIHlvdSBnby4gVGhlICJzbWFydCcnIGx1Z2dhZ2UsIGNhbGxlZCBPdmlzLCBjb21lcyBlcXVpcHBlZCBpdCB3aXRoIGZpdmUgc21hbGwgY2FtZXJhcyB0aGF0IGFyZSBzdXBwb3NlZCB0byB1c2UgInJlY29nbml0aW9uJycgdGVjaG5vbG9neSB0byBrZWVwIHRhYnMgb24geW91IGV2ZW4gaW4gYSBjcm93ZC4gCkl0IG5vdCBnb2luZyB0byBjaGFuZ2UgeW91ciBsaWZlIG9yIGFueXRoaW5nLCBidXQgaXQgYW5vdGhlciBtZXRyaWMgdGhhdCB5b3UgY2FuIHVzZSBpbiBjb21iaW5hdGlvbiB3aXRoIG90aGVyIG1ldHJpY3MgdG8ganVkZ2UgcGFjZSwgZWZmb3J0LCByZWNvdmVyeSwgZml0bmVzcyBpbXByb3ZlbWVudHMsIHRyYWluaW5nIGxvYWQsIGV0Yy4gCkFsc28gbWFrZXMgYSBiaWcgZGlmZmVyZW5jZSBhZ2FpbnN0IGNsZWF2ZS4gClllYXIsIHdlIGdvaW5nIHRvIGVsaW1pbmF0ZSB0aGUgcmlzay4gCk9uIHRoZSBDb24gc2lkZSwgbW9zdCB3ZWJzaXRlcyBkbyBub3QgZGVsaXZlciBpbiBwcm9wZXIgdGltZS4gCkhvbWVvcGF0aHkuIApSZXNwYXduLCB5b3UgaGF2ZSBtYWRlIGEgZ2FtZSB0aGF0IGlzIGhlbHBpbmcgbWUgdGhyb3VnaCBzb21lIHRvdWdoIHRpbWVzIHJpZ2h0IG5vdyBhbmQgaXQgaXMgdGhlIG1vc3QgZnVuIEkgaGFkIHdpdGggYSBzaG9vdGVyIGluIHByb2JhYmx5IGEgZGVjYWRlLiBJIG1lYW4gSSBwbGF5ZWQgVGl0YW5mYWxsIDIgYnV0IEkgd2FzIHJlYWxseSBsYXRlLCBhbmQgd2hhdCB5b3UgZ290IGdvaW5nIG9uIGhlcmUgaXMgYW1hemluZy4gMiBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvUHJvYmFibHkgbmVlZCB0byBzdGFydCBmaW5kaW5nIHlvdSBzb21lIHN1aXRhYmxlIHNxdWFkIG1hdGVzIHNvIHlvdSBjYW4gZ3JvdyBhbmQgZ2V0IGJldHRlci4gCkxvb2tpbmcgdG8gcmVjcnVpdCBob3JkZSBLYXp6YWsgcHJvdmlkZXMgZ29sZApMaWtlIG1vc3QgY2xpZW50cywgV2lsc29uIHVzdWFsbHkgc3RheXMgZm9yIGEgd2Vlay4gCkEgZmV3IHllYXJzIGxhdGVyLCBCYXJiaWUgYXJyaXZlZCBpbiBNb3Njb3cuIEEgc3RvcmUgb3BlbmVkIHRoYXQgb25seSBzb2xkIEJhcmJpZXMgYXMgd2VsbCBhcyBib29rcyBhYm91dCBoZXIsIGxpa2UgQmFyYmllIGluIFJ1c3NpYS4uIApUaGV5IGhhdmUgYSByYW5nZSBvZiBudW1iZXJzIGluIHNwZWNpZmljIGRyaWxscyBmb3IgZWFjaCBwb3NpdGlvbiBhbmQgdGhleSB3YW50IHRvIHZlcmlmeSB0aGUgZ3V5cyB3aXRoIGdvb2QgdGFwZSBhcmUgaW4gdGhhdCBwb3dlciBiYW5kLiAKTXkgZmF2b3VyaXRlIHRpbWUgb2YgdGhlIHllYXIsIHNoZSBsYXVnaHMuIApUbyBtYWtlIHVwIGZvciB0aGUgc2hvcnRhZ2Ugb2YgdGhpcyBzdGFwbGUgb2YgbG9jYWwgbmV3c3BhcGVyaW5nOi4gCiJob3cgY2xvc2UgYXJlIHRoZXNlIHJpdHVhbHMgdG8gQ2hyaXN0aWFuaXR5PyIgVGhlIG1vcmUgY2xvc2UsIHRoZSBtb3JlIGl0ICJjb3VudHMiIGFzIGEgcmVsaWdpb24sIHRoZSBmdXJ0aGVyIGF3YXksIHRoZSBsZXNzLCBldGMuKS4gClBsYXRpbnVtIFNwb3J0cyBCb29rIGhhcyBiZWVuIG9wZXJhdGluZyBmb3IgYSBudW1iZXIgb2YgeWVhcnMsIHBvbGljZSBzYWlkIGF0IHRoZSBuZXdzIGNvbmZlcmVuY2UuIEFuIGludml0YXRpb24gdG8gdGhlIE1hcmtoYW0gZXZlbnQgcG9zdGVkIHRvIEZhY2Vib29rIFN1bmRheSBuaWdodCBkZXNjcmliZWQgaXQgYXMgdGhlIGVpZ2h0aCBhbm51YWwgU3VwZXIgQm93bCBwYXJ0eSBvcmdhbml6ZWQgYnkgdGhlIGVudGVycHJpc2UuIEl0IHdhcyBzZXQgdG8gZmVhdHVyZSBhbiBvcGVuIGJhciwgZGlubmVyLCBkb29yIHByaXplcyBhbmQgYSBjYWxlbmRhciBzaWduaW5nIGJ5IFBsYXlib3kgY2VudHJlZm9sZHMuLiAKSXQncyB2ZXJ5IGludGVyZXN0aW5nIHdvcmsgYW5kIEkgYWN0dWFsbHkgbG9vayBmb3J3YXJkIHRvIHdvcmsgZXZlcnkgZGF5IGJlY2F1c2UgSSBmaW5kIHRoZSBwcm9ncmVzcyBvZiBvdXIgcHJvamVjdHMgZXhjaXRpbmcuIApBbmQgSSBkb24ga25vdyBpZiB0aGUgU291dGhlcm4gVGhyaWZ0IGlzIHN0aWxsIG91dCB0aGF0IHdheSBidXQgSSBhbHNvIGhhZCBnb29kIGx1Y2sgYXQgdGhhdCBvbmUuLiAKRURJVDogWW91IHNob3VsZCBsb29rIGF0IG15IGxhdGVyIGNvbW1lbnQgZm9yIG1vcmUgY29udGV4dCwgYnV0IEFXUyBpcyBub3QgYSBtb25vcG9seSwgaXQgb2J2aW91c2x5IGdvdCBjb21wZXRpdGlvbiwgYnV0IGl0IGlzIHVuZGVyc3RhbmRhYmxlIGZlZWxpbmcgdGhhdCBpdCBnb3QgYW4gb3ZlcndoZWxtaW5nIHNoYXJlIG9mIHRoZSBtYXJrZXQgZXZlbiBpZiB0aGF0IGFtb3VudCBpcyByZWFsbHkgc29tZXRoaW5nIGxpa2UgMzMlLgpXaGlsZSB0aGVyZSBhcmUgbm8gc3R1ZGllcyB0byBwcm92ZSB0aGF0IHRoZXJlIGlzIGEgZGlyZWN0IHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGZhc2NpYSBhbmQgdHJpZ2dlciBwb2ludHMsIEkgaGF2ZSBoZWFyZCBjbGluaWNpYW5zIHdobyB1c2UgZmFzY2lhbCB0ZWNobmlxdWVzNiByZW1hcmsgdGhhdCB1cG9uIHJlbGVhc2luZyB0aGUgZmFzY2lhLCB0aGUgdHJpZ2dlciBwb2ludHMgZGlzYXBwZWFyZWQuCkkgZG9uIGNhcmUgaWYgeW91IGJlbGlldmUgbWUuIEV2ZXJ5b25lIGluIHRoZSBjbGFzcyBsYXVnaGVkIG91ciBhc3NlcyBvZmYgYXQgaG93IGF1ZGFjaW91cyBhbmQgd2VsbCBkb25lIGl0IHdhcywgYW5kIHRoZSBnaXJsIHNoZSB3YXMgc2luZ2luZyB0byBjb3VsZG4gc3RvcCBjcnlpbmcgYW5kIGxhdWdoaW5nLCBhbmQgSSBsb3ZlZCBpdCBTTyBGVUNLSU5HIE1VQ0guIFlvdSBjYW4gaW1hZ2luZSBob3cgd2UgYWxsIHJlYWN0ZWQgd2hlbiBzaGUgc2FpZCB5ZXMsIGl0IHdhcyBtYXNzIGNoYW9zIGFuZCBjZWxlYnJhdGlvbi4gOikKTW9zdCAyIGd1biBhbmQgc29tZSAzIGd1biBjb21wZXRpdGlvbnMgaGF2ZSBhcm1vcmVkIG9yICtQIG9yIHNvbWUgdmFyaWF0aW9uIG9mIGRpdmlzaW9uIHRoYXQgcmVxdWlyZXMgZnJvbnQgYW5kIGJhY2sgYXJtb3JlZCBwbGF0ZXMuIApJbHMgYXZhaWVudCB1biBsaWVuIHByaXZpbGdpIGF2ZWMgbCBjYXIgbGVzIHZhcGV1cnMgZHUgY2hhbnZyZSBhdXhxdWVsbGVzIGlscyB0YWllbnQgc291bWlzIGxlcyB5IGZhaXNhaWVudCB2b3lhZ2VyICAoMTApLCBjZSBxdWkgZXhwbGlxdWUgcXVlLCBtbWUgc2FucyB0cmUgY29yZGllcnMsIGxlcyBzb3JjaWVycyB1dGlsaXNhaWVudCBsZXMgcHJvcHJpdHMgbmFyY290aXF1ZXMgZHUgY2hhbnZyZSBkYW5zIGxhIHBycGFyYXRpb24gZCBldCBkZSBmdW1pZ2F0aW9ucywgbW95ZW5zIHBhciBsZXNxdWVscyBpbHMgY2hlcmNoYWllbnQgIGVudHJlciBlbiBjb250YWN0IGF2ZWMgbGVzIGZvcmNlcyBtYWdpcXVlcy4gCkJlIG5pY2UgdG8geW91ciBoYWlyOiBpdCBpcyBkZWxpY2F0ZSBhbmQgc2hvdWxkIGJlIHRyZWF0ZWQgYXMgc3VjaC4gTW9pc3R1cml6ZSBpdCwgZG9uIHNsZWVwIHdpdGggaXQgaW4gYSBidW4gb3IgcG9ueXRhaWwsIGFuZCBrZWVwIGxpZ2h0IG9uIHRoZSB3YXNoaW5nOyBpZiB5b3UgYWJzb2x1dGVseSByZXF1aXJlIGEgZHJ5IHNoYW1wb28sIGdldCBhIGdlbnRsZSBhbmQvb3IgY2xlYW5zaW5nIG9uZSB0byBwcmV2ZW50IGJ1aWxkIHVwLiBZb3UgZG9uIHdhbm5hIGdvIHRocm91Z2ggYWxsIHRoZSB0cm91YmxlIG9mIGdldHRpbmcgdGhpcyBib21iIGFmIHNoYW1wb28gb25seSB0byBjbG9nIHRob3NlIHBvcmVzIHJpZ2h0IGJhY2sgdXAgd2l0aCBzb21lIHJldGlyZW1lbnQgaG9tZSBzbWVsbGluZyBEb3ZlIGJ1bGxzaGl0LiAKIDE2IHBvaW50cyAgc3VibWl0dGVkIDE1IGhvdXJzIGFnb05lZWtvIGhhcyB2ZXJ5IGVhc3kgYWNjZXNzIHRvIGhhcmQgY3Jvd2QgY29udHJvbCAgIE90aGVyIEFEQ3Mgd2l0aCBDQyBhcmUgYWxsIHNpdHVhdGlvbmFsLCBYYXlhaCBoYXMgdG8gc3RhY2sgaGVyIGZlYXRoZXJzLCBWYXluZSBoYXMgdG8gY29uZGVtbiBpbnRvIHRoZSB3YWxsLCBBc2hlL1ZhcnVzIGhhdmUgdG8gaGl0IGFuIGFycm93IChBbmQgaXRzIHRoZWlyIHVsdCksIGV0YyBldGMuVGhlIGJyb2tlbiBidWZmIG9ubHkgcmVhbGx5IGhpZ2hsaWdodGVkIHRoZSBpc3N1ZSAgIE5lZWtvIGFzIGFuIGFkYyBpcyBleHRyZW1lbHkgc2FmZSAgIEhlciBXICh3aGljaCBjb3N0cyBubyBtYW5hKSBtYWtlcyBoZXIgYWxsIGJ1dCBpbW11bmUgZnJvbSBnYW5rcywgc2hlIGhhcyAyIHNwZWxscyB3aXRoIHdoaWNoIHNoZSBjYW4gZmFybSBzYWZlbHkgKFdoaWNoIGFsc28gZG91YmxlIGFzIGEgc25hcmUgdG8gcHJldmVudCBnYW5rcyBhbmQgc2VjdXJlIGtpbGxzKSBhbmQgaGVyIHVsdCBicmluZ3MgYSBzZWNvbmQgZm9ybSBvZiBoYXJkIGNjIHRvIGEgZmlnaHQgKFdoaWNoIGFsc28gZG91YmxlcyBhcyBhIGRlZmVuc2l2ZSB0b29sIGluIGdhbmtzL2ZpZ2h0cykuSGVyIHJhbmdlIGlzIHRoYXQgb2YgbW9zdCBhZGNzIChWYXluZSwgSmhpbiwgTUYsIERyYXZlbikgd2hpY2ggYWxsb3dzIGhlciBwZXJmZWN0bHkgZmluZSBhdXRvIHRyYWRlcywgd2hpY2ggY29tYmluZWQgd2l0aCB0aGUgcmVzdCBvZiB0aGUga2l0IGlzIGp1c3QgcHJldHR5IGFidXNpdmUuVGhlcmUgYSByZWFzb24gaXQgZmVlbHMgZ29vZCA6KSAyMSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIHdhdGNoZWQgS2F5bGUgb3ZlciBhIGZldyBkYXlzIG5vdywgYW5kIGV4cGVyaWVuY2VkIEtheWxlIGluIHNldmVyYWwgZGlmZmVyZW50IGxhbmVzIGFzIHdlbGwgYXMgaW4gdGhlIGp1bmdsZS5IZXIgZWFybHkgZ2FtZSBpcyBhY3R1YWxseSBhdHJvY2lvdXMuIApUaGUgYnJ1c2ggZmVlbHMgY29tZm9ydGFibGUgdG8gaG9sZCBhbmQgaXMgbm90IHNvIGhlYXZ5IGFzIHRvIGdpdmUgeW91IGFybSBhY2hlIHdoZW4geW91IGRvIHRoZSBiYWNrIG9mIHlvdXIgaGVhZC4gRG9pbmcgbXkgaGFpciB0YWtlcyBsb25nZXIgdGhhbiB1c3VhbCAgIDEzIG1pbnV0ZXMgYXMgb3Bwb3NlZCB0byB0aGUgbm9ybWFsIGZpdmUgICBidXQgdGhhdCdzIHByb2JhYmx5IGJlY2F1c2UgSSBoYXZlIG15IG5vcm1hbCByb3V0aW5lIGRvd24gdG8gc3VjaCBhIGZpbmUgYXJ0Li4gCkZvciBleGFtcGxlLCB0ZXN0cyBzaG93IHRoYXQgdGhlc2UgbmFyd2hhbHMgY2FuIGRldGVjdCBjaGFuZ2VzIGluIHdhdGVyIHNhbGluaXR5IHdpdGggdGhlaXIgdG9vdGggc2FiZXJzLiBIb3cgaXMgbWVhc3VyaW5nIHNhbHQgY29udGVudCBhbnl0aGluZyBvdGhlciB0aGFuIGNvbXBsZXRlbHkgdXNlbGVzcyBmb3IgYW55b25lIG5vdCB3b3JyaWVkIGFib3V0IGh5cGVydGVuc2lvbj8gSXQgdHVybnMgb3V0IHRoYXQgY2hhbmdlcyBpbiBzYWxpbml0eSBhZmZlY3Qgd2hlbiB3YXRlciBmcmVlemVzLiAKSSB3YWxrZWQgYXdheSBhbmQgY29udGludWVkIHdpdGggbXkgc2hvcHBpbmcsIGFuZCBJIGhlYXJkIGhpbSBjaHVja2xlIGFzIEkgd2Fsa2VkIG9mZi4gV2hlbiBJIGNhbWUgdG8gcGF5IGZvciBteSBzdHVmZiB1cCBmcm9udCBJIHNhdyBoaW0gdHJ5aW5nIHRvIHdhbGsgb3V0IHRoZSBkb29ycyB3aXRoIGxpa2UgZmlmdGVlbiBNaWxreSBXYXlzIGluIGhpcyBoYW5kcyB3aXRob3V0IHBheWluZy4gVGhlIGdpcmwgYXQgdGhlIGNvdW50ZXIgd2FzIHZlcnkgbmljZSBhYm91dCBpdCBhbmQgcHJvZmVzc2lvbmFsLCBhbmQgd2FzIGxpa2UgIlNpciwgeW91IG5lZWQgdG8gcGF5IGZvciB0aG9zZSBmaXJzdC4iIEF0IGZpcnN0IGhlIGtlcHQgcHJldGVuZGluZyB0byBiZSB0aXJlZCBhbmQgbm90IGhlYXIgaGVyLCBidXQgZXZlbnR1YWxseSB0dXJuZWQgYmFjayBhcm91bmQgYW5kIGJyb3VnaHQgdGhlbSB0byB0aGUgY291bnRlci4gCkl0J3MgY2FsbGVkIHRoZSB1bmR5aW5nIGxhbmRzLiBUaGVyZSBtb3N0IGxpa2VseSB0cnlpbmcgdG8gc2F5IHRoYXQgdGhleSB3YW50IHRvIGdldCBvdXQgb2YgdGhlIHdvcmxkIGFuZCBnbyB0byBoZWF2ZW4uIApUaGF0J3MgdmVyeSBjcmVlcHkgb2YgaGltLiAKQXV0YW50IGxlIGJ0aW1lbnQgZXN0IGxhaWQgZGUgbCdleHRyaWV1ciwgYXV0YW50IGxhIHZ1ZSBzdXIgbWVyIHF1J2lsIHByb3Bvc2UgZXN0IG1hZ25pZmlxdWUuIApJIGJlbGlldmUgdGhleSBoYXZlIG9uZSByZWFsbHkgYmlnIHRvdXJuYW1lbnQuIApJZiBpdCBkb2VzbiB3b3JrIGFmdGVyIGEgZmV3IHNwaW5zLCB0cnkgYWRqdXN0aW5nIHlvdXJzZWxmIG9yIHJpZGluZyBvZmYgYW5kIGNvbWluZyBiYWNrLiBEb250IHNob290IHRoZSBtb29zZSBmcm9tIHRoZSBjbGlmZiwgYmVjYXVzZSBpZiB5b3UgZG8gaXQgd2lsbCBiZSByb3R0ZW4gYnkgdGhlIHRpbWUgeW91IGdldCB0byB0aGUgY2FyY2Fzcy4gQWZ0ZXIgSSBkaWQgdGhpcywgaXQgc2VlbWVkIHRvIGZpeCB0aGUgbW9vc2Ugc3Bhd25zIGluIG15IGdhbWUgYXMgSSByYW4gaW50byBhbm90aGVyIG9uZSBub3QgbG9uZyBhZnRlci4gCkZhcm0gd29ya2Vycy4gUm9vZmVycy4gSG91c2VrZWVwZXJzLiAKSSBkb24ndCBkaXNhZ3JlZSB0aGF0IGhlIGRvZXMgc2VuZCBvdXQgcHJvIEJyZXhpdCBwcm9wYWdhbmRhLiAKS2VsbHkgYW5kIE1pY2hpZ2FuIGNvbW1pdCBOb2xhbiBSdW1sZXIgYXQgdGFja2xlLCBIb2JhbiBoYXMgb25lIG9mIHRoZSBhcmVhJ3MgbW9zdCBpbXBvc2luZyBvZmZlbnNpdmUgbGluZXMuV2hvIGhhcyBOb3J0aGVhc3QgT2hpbydzIGJlc3QgZGVmZW5zZT8gSFMgZm9vdGJhbGwgTW9uZGF5IG1vcm5pbmcgUUIgV2hvIGhhcyBOb3J0aGVhc3QgT2hpbydzIGJlc3QgZGVmZW5zZT8gSFMgZm9vdGJhbGwgTW9uZGF5IG1vcm5pbmcgUUIgZml0LiAKIkkgd29ya2VkIGZvciBzZXZlcmFsIHllYXJzIGFzIGEgZnJlZWxhbmNlIHJlcG9ydGVyIGFuZCB3aGVuIEkgZmluYWxseSBnb3QgdGhlIGNvdmV0ZWQgam9iICAgdGhlIHVuaW9uIGpvYiAgIHRoYXQgd2UgYXJlIGFsbCBsb29raW5nIGZvciBzb21ldGhpbmcga2luZCBvZiBkaWVkIGZvciBtZSBhbmQgSSByZWFsaXplZCBzb21ldGhpbmcgYWJvdXQgbXlzZWxmLCIgV2FsbG5lciBleHBsYWluZWQuICJJIGZpbmQgdGhlIGNoYWxsZW5nZSBvZiBoYXZpbmcgdG8gY29tcGxldGVseSByZWludmVudCBhbmQgZmluZCB3b3JrIGlzIGZhciBtb3JlIGludGVyZXN0aW5nIGFuZCBtb3JlIHJld2FyZGluZy4iLiAKSG8gTGVlIFNoaXQuIApCdXQgaXQgZ290IG1lIHRoaW5raW5nIGFib3V0IG90aGVyIHBlb3BsZSB3ZSBjb3VsZCBkZWJhdGUga2lsbGluZy4gTGlrZVNob3VsZCB3b21lbiBsaXZpbmcgdW5kZXIgdGhlIFRhbGliYW4gYmUgc3RvbmVkIHRvIGRlYXRoIGZvciBicmVha2luZyBTaGFyaWEgbGF3PyBZZXMgb3Igbm8/U2hvdWxkIHN1c3BlY3RlZCB0ZXJyb3Jpc3RzIGJlIHRvcnR1cmVkPyBXaGF0IGFib3V0IGNvbnZpY3RlZCBvbmVzPyBZZXMgb3Igbm8uSSB0aGluayBpdCBjbGVhciB3aGVyZSB0aGlzIGlzIGdvaW5nLiBTZXJpb3VzIGpvdXJuYWxpc20gZGVtYW5kcyB0aGF0IHdlIGFzayB0aGVzZSBxdWVzdGlvbnMuU2hvdWxkIHBvbGl0aWNpYW5zIHdobyBwdXJwb3NlZnVsbHkgbGllIHRvIHN0YXJ0IHdhcnMgb2YgYWdncmVzc2lvbiBiZSBleGVjdXRlZCB3aXRob3V0IHRyaWFsPyBBZnRlciBhIHRyaWFsPyBZZXMgb3Igbm8uLiAKV2UgdGFsa2VkIGFib3V0IGl0IG1hbnkgdGltZXMgb3ZlciB0aGUgeWVhcnMgYW5kIHdoaWxlIGhlIHN0aWxsIGJlIG9wZW4gdG8gaGF2aW5nIGtpZHMsIGhlIHRvbGQgbWUgaGUgcmF0aGVyIGJlIHdpdGggbWUsIGtpZHMgb3Igbm90LiAKTmltcm9kPyBHcmVhdCBodW50ZXIgaW4gdGhlIEJpYmxlLCBhbmQgbmV2ZXIgbWVhbnQgYXMgYW4gaW5zdWx0LCB1bnRpbCBCdWdzIEJ1bm55IGNhbWUgYXJvdW5kLiAiVGlnaHQiIG9yICJzd2VldCIgYXMgc3lub255bXMgZm9yICJjb29sIiB1bnRpbCByZWNlbnQgZ2VuZXJhdGlvbnMuIFdvcmRzIGFuZCBwaHJhc2VzIGNhbiBjaGFuZ2UgYXQgYSBtb21lbnQgbm90aWNlLCB3aGV0aGVyIHlvdSBhcHByb3ZlIG9mIGl0IG9yIG5vdC4uIApIb3dldmVyLCB0aGVyZSBhcmUgY3JlYW1zIGZvciBib3RoIHRoZSBoYW5kcyBhbmQgdGhlIGN1dGljbGVzIHRoYXQgY291bGQgcHJldmVudCB0aGVtIGZyb20gZHJ5aW5nIG91dCBpbiBmaXJzdCBwbGFjZS4gClRoZXkgd2VyZSBhbGwgdmVyeSBuaWNlIGFuZCB3ZSBoYWQgYSBnb29kIHRpbWUgdGFsa2luZyBkdXJpbmcgZGlubmVyLgpBcyBNYW4gb2YgdGhlIFdvb2RzIGRyb3BwZWQgb24gRmVicnVhcnkgMiwgaXQgYmVjYW1lIGNsZWFyIHRoYXQgVGltYmVybGFrZSB3YXMgcmlnaHQsIHRoaXMgd2Fzbid0IGEgc3RyYWlnaHQgdXAgY291bnRyeSBhbGJ1bSwgYW5kIG5vdCBvbmx5IGJlY2F1c2Ugb2YgdGhlIGluY2x1c2lvbiBvZiAiRmlsdGh5IiBhbmQgIlN1cHBsaWVzLiIgQnV0IGl0IHN1cmUgaXMgc29tZXRoaW5nIGFkamFjZW50IHRvIGl0LiBMZXQncyBjYWxsIGl0IGZpZGRsZSBmdW5rLgpVbmxpa2UgdGhlIHN0cmFpZ2h0IGZsdXNoLCB0aGUgb3JkaW5hcnkgZmx1c2ggaXMgY29tcG9zZWQgb2YgNSByYW5kb21seSBzZXF1ZW5jZWQgY2FyZHMgdGhhdCBzaGFyZSBhIHN1aXRlL3NoYXBlLiBTbywgaXQgY291bGQgYmUgNCw2LDcsOCw5IGFsbCBvZiB0aGVtIGhlYXJ0cy4gClRoaW5rIGFib3V0IHRoZSB0aW1pbmcgb2YgZXZlcnl0aGluZywgd2hhdCBzb3J0cyBvZiBlcXVpcG1lbnQgeW91IG5lZWQsIHdoYXQgc3BhY2VzIGFyZSBhdmFpbGFibGUgZm9yIHlvdSB0byBkbyBldmVyeXRoaW5nLCBhbmQgcGxhbiBvdXQgYXMgbXVjaCBvZiB5b3VyIGRheSBhcyBwb3NzaWJsZS4gQmUgc3VyZSB0byBwbGFuIG9uIHRoaW5ncyBub3Qgd29ya2luZyBvdXQgYXMgd2VsbCwgaXQgbmV2ZXIgZG9lcyBwZXJmZWN0bHkuLiAKSmFtZXMgaXMgcXVpY2sgdG8gY2FsbCwgYW5kIEkgZm9sbG93IHN1aXQuIFRoZSBuZXh0IGNhcmQgd2lsbCB0ZWxsIGFsbC4KU3QgUGllcnJlIGRlYnV0ZWQgb24gdGhlIGJpZyBzdGFnZSB3aXRoIGEgdW5hbmltb3VzIGRlY2lzaW9uIHdpbiBvdmVyIEthcm8gUGFyaXN5YW4gYXQgVUZDIDQ2IGluIDIwMDQuIEhlIHdvbiBoaXMgZmlyc3Qgd2VsdGVyd2VpZ2h0IGNoYW1waW9uc2hpcCB2aWEga25vY2tvdXQgb3ZlciBNYXR0IEh1Z2hlcyBhdCBVRkMgNjUgaW4gMjAwNi4KVGhlcmUgcGxlbnR5IGF0IHN0YWtlLiBDb3JkaXNoIGVudmlzaW9ucyBhICQxIGJpbGxpb24gZW50ZXJ0YWlubWVudCBjb21wbGV4IGNlbnRlcmVkIG9uIGFuIG9wdWxlbnQgc2xvdHMgaGFsbC4gVGhlIGRldmVsb3BlciB0aGlua3MgdGhpcyBjb3VsZCBiZSB0aGUgbW9zdCBwcm9maXRhYmxlIGdhbWluZyBsb2NhdGlvbiBvbiB0aGUgRWFzdCBDb2FzdC4KRXZlcnkgb3RoZXIgbWFqb3IgaW5kdXN0cmlhbGl6ZWQgZWNvbm9teSBhbHJlYWR5IGhhcyBhIFZhbHVlIEFkZGVkIFRheCBzbyBpdCBzaG91bGQgbm90IGJlIGEgbWFqb3IgaXNzdWUuIFRoZSBWQVQgdGhhdCBJIHByb3Bvc2luZyBpcyBsb3dlciB0aGFuIHRoYXQgb2YgbW9zdCBvdGhlciBtYWpvciBlY29ub21pZXMgICBoYWxmIHRoZSBhdmVyYWdlIEV1cm9wZWFuIGxldmVsIGZvciBleGFtcGxlLiBUaGUgcmVhbCBxdWVzdGlvbiBpcywgaG93IHdvdWxkIGVudHJlcHJlbmV1cnMgcmVzcG9uZCB0byBoYXZpbmcgZXZlcnkgYWR1bHQgY29uc3VtZXIgZ2V0dGluZyBhbiBhZGRpdGlvbmFsICQxMiwwMDAgb2YgYnV5aW5nIHBvd2VyIHBlciB5ZWFyIEFORCBoYXZpbmcgYSBndWFyYW50ZWVkIGluY29tZSBvZiAkMTIsMDAwIGEgeWVhciBvbmVzZWxmPyBXZSB3b3VsZCBzZWUgYW4gZXhwbG9zaW9uIG9mIGVudHJlcHJlbmV1cnNoaXAgb24gYSBzY2FsZSB0aGF0IHdlIGhhdmUgbmV2ZXIgc2Vlbi4gCkQnYWlsbGV1cnMsIEJhY2hlbGFyZCBuZSBkaXNhaXQgaWwgcGFzIHF1J3VuZSAgb2RldXIgWyBlc3QgbGUgY2VudHJlIGQndW5lIGludGltaXQgID8uIApSeW9rbyBTZWtpZ3VjaGksIHNhbnMgY2Vzc2UgZW4gcGFydGFuY2UgcG91ciBkJ2F1dHJlcyBjb250cmVzLCBhdmFpdCB0cnMgZ2VudGltZW50IGFjY2VwdCBkZSBwcmVuZHJlIHVuIG1vbWVudCBwb3VyIHJwb25kcmUgIG1lcyBxdWVzdGlvbnMgaWwgeSBhIHF1ZWxxdWVzIHNlbWFpbmVzLiBTZXMgcnBvbnNlcyBjb25maXJtZW50IHNvbiB0ZW1wcmFtZW50IGN1cmlldXggZXQgc29uIGxpZW4gc2luZ3VsaWVyIGF1IG1hbmdlci4gCkZpcnN0IG9mZiwgbWFyaWp1YW5hIGlzIGEgU2NoZWR1bGUgSSBjb250cm9sbGVkIHN1YnN0YW5jZSB1bmRlciBmZWRlcmFsIGxhdywgd2hpY2ggbWVhbnMgdGhhdCBpdCBpcyBnZW5lcmFsbHkgaWxsZWdhbCBhdCB0aGUgZmVkZXJhbCBsZXZlbCBhbmQgaXMgaWxsZWdhbCBpbiBhbGwgNTAgc3RhdGVzLiBTaW5jZSBmZWRlcmFsIGxhdyBoYXMgc3VwcmVtYWN5IG92ZXIgYWxsIHN0YXRlcywgdGhpcyBpbGxlZ2FsaXR5IG1lYW5zIHRoYXQgaXQgdGVjaG5pY2FsbHkgb3ZlcnJpZGVzIGJvdGggQ08gYW5kIFdBIHN0YXRlIGxhd3MgbWFraW5nIG1hcmlqdWFuYSBpbGxlZ2FsLiBTbyB5ZXMsIGl0IGlzIHRlY2huaWNhbGx5IGlsbGVnYWwuIEhvd2V2ZXIsIHRoaXMgaXMgZXhjZXB0ZWQgaW4gcHJhY3RpY2UuIENvbnNlcXVlbnRseSwgZGVzcGl0ZSBpdCBpbGxlZ2FsaXR5LCB0aGUgYWNjZXB0ZWQgdXNlIGFuZCBsZWdhbGl0eSBhdCBhIHN0YXRlIGxldmVsIGFsbG93cyBjYXNlcyBpbiB0aGlzIHJlYWxtIHRvIGludGVyYWN0IHdpdGggb3RoZXIgbGVnYWwgZG9jdHJpbmVzLgpGb3IgcGVvcGxlIHdobyBsaWtlIHRvIHRocm93IGFyb3VuZCB0aGUgd29yZCAiYmlnb3QiIGV2ZXJ5IGZpdmUgbWludXRlcywgdGhleSBwcmV0dHkgYmlnIG9uZXMgdGhlbXNlbHZlcy4gVGhlIGV4YW1wbGUgeW91IGdhdmUgaXMgYSBwZXJzb24gd2hvIGNsZWFybHkgYWN0cyBxdWVlciBvbiBwdXJwb3NlLiAKVGhhdCB3aHkgSSBpbmNsdWRlZCB0aGUgbGFzdCBwYXJhZ3JhcGggb2YgdGhlIGFjdHVhbCBzdHVkeSBhcyB3ZWxsLiBUaGUgbGFuZ3VhZ2UgdGhlcmUgaXMgYSBiaXQgdHJpY2t5IGJ1dCBkb2VzIG5vdCBzYXkgZGVmaW5pdGl2ZWx5IHdoYXQgaXMgc3RhdGVkIGFzIGZhY3QgaW4gQ05OIGhlYWRsaW5lIGZhciBhcyBJIGNhbiB0ZWxsLiBUaGUgUnViZWxsYSB2YWNjaW5lIGRvZXMgc2hlZCBmb3IgYSBjZXJ0YWluIHRpbWUgcGVyaW9kIGxhc3QgSSBjaGVja2VkLiBWYWNjaW5lcyB0aGF0IHNoZWQgY2FuIGNhdXNlIHRoZSBhY3R1YWwgZGlzZWFzZS4gSWYgdGhhdCBkaXNlYXNlIGlzIFJ1YmVsbGEgdGhlbiBvbmUgY2FuIG1ha2UgdGhlIGNvbmNsdXNpb24gdGhlIFJ1YmVsbGEgdmFjY2luZSBjb3VsZCBjYXVzZSBhdXRpc20gdmlhIFJ1YmVsbGEuIFRoZSBvbmx5IHRoaW5nIEkgZ2V0IGZyb20gdGhlIGNvbmNsdXNpb24gb2YgdGhlIHN0dWR5IGlzIHRoYXQgdGhlcmUgaXMgbm8gaW5jcmVhc2VkIHJpc2sgd2l0aCBNTVIgdmFjY2luZSBhYm92ZSB0aGUgcmlzayBub3JtYWxseSBhc3NvY2lhdGVkIHdpdGggY2F0Y2hpbmcgUnViZWxsYSB3aGljaCBtYXkgdGhlbiB0cmlnZ2VyIGF1dGlzbS4KSSB0aGluayBpbiB5b3VyIGNhc2UsIHlvdSBtaWdodCBoYXZlIGJlZW4gYWJsZSB0byB3b3JrIHRocm91Z2ggaXQgaWYgc2hlIGhhZCBhZG1pdHRlZCBpdCBvbmNlIHlvdSBmb3VuZCB0aGUgYmxvZyBwb3N0LCBiZWVuIGhvbmVzdCBhYm91dCB3aGVyZSB5b3UgZ3V5cyB3aGVyZSBpbiB5b3VyIHJlbGF0aW9uc2hpcCBhbmQgd2h5IHNoZSBkaWQgaXQsIGFuZCBhc2tlZCBpZiB5b3UgY291bGQgZm9yZ2l2ZSBoZXIgYW5kIHRhbGsgYWJvdXQgaXQgaW4gdGhlcmFweS4gQnV0IHNoZSBkaWRuIFNoZSBpbnN0ZWFkIGJsYW1lZCB5b3UgZm9yIHNub29waW5nLCBjbGFpbWVkIGl0IHdhcyB0byB0cmFwIHlvdSwgYW5kIHRocmVhdGVuZWQgdG8ga2lsbCBoZXJzZWxmIGlmIHlvdSBsZWZ0LgpNb3N0IGNhc2lubyBnYW1lIHBsYXllcnMgZG8gaXQgZm9yIGVudGVydGFpbm1lbnQuIElmIHlvdSBhcmUgYWZ0ZXIgcHJvZml0cywgeW91IGNhbid0IGFmZm9yZCB0byBpbnZlc3QgeW91ciB0aW1lIGluIGp1c3QgYWJvdXQgYW55IGdhbWUuIE1vc3Qgb2YgdGhlIGdhbWVzIGFyZSBkZXNpZ25lZCB0byBtYWtlIHRoZSBob3VzZSBwcm9maXRhYmxlIGFueXdheS4gSWYgeW91IGFyZSBub3QgY2FyZWZ1bCwgbWFraW5nIHByb2ZpdHMgdGhyb3VnaCBnYW1ibGluZyB3aWxsIGJlIGRpZmZpY3VsdC4KQW5vdGhlciB0aGluZyB0aGF0IHlvdSBuZWVkIHRvIHRoaW5rIGFib3V0IGJlZm9yZSB5b3UgcGljayB1cCBhIGZvbGRpbmcgb3ZhbCBwb2tlciB0YWJsZSBpcyB0aGUgc3BhY2UgdGhhdCB5b3UgaGF2ZSB3aGVuIHRoZSB0YWJsZSBpcyBzZXQgdXAuIE5vdCBvbmx5IGRvZXMgdGhlIHJvb20gaW4gcXVlc3Rpb24gbmVlZCB0byBoYXZlIGVub3VnaCBzcGFjZSBmb3IgdGhlIHRhYmxlLCB5b3Ugd2lsbCBmaW5kIHRoYXQgaXQgbmVlZHMgdG8gaGF2ZSBhIGZhaXIgYW1vdW50IG9mIHNwYWNlIGZvciB0aGUgY2hhaXJzIGFzIHdlbGwuLiAKVGhleSBkaWcgdXAgdGhlIGVudHJpZXMgYW5kIGhhbGxzIG9mIGRpdmVycyBtZW4uIApJdCBtb3JlIG9yIGxlc3MgdHdvIFhQIGJhcnMgd2l0aCA2IHNsb3RzIGVhY2gsIG9uZSBmb3Igcm9sZXBsYXkgWFAsIG9uZSBmb3IgY29tYmF0IFhQLiAKQW5hbHlzdCBSb2IgU3RhbGxhcmQgb2YgVmVydGljYWwgUmVzZWFyY2ggUGFydG5lcnMgd2FzIG5vdCBlbnRpcmVseSBjb252aW5jZWQuIEluIGEgbm90ZSB0byBpbnZlc3RvcnMgV2VkbmVzZGF5LCBoZSB3cm90ZSB0aGF0IGlmIEJvZWluZyB3ZXJlIHB1cmVseSBhIGRlZmVuc2UgY29tcGFueSByZXBvcnRpbmcgY2hhcmdlcyBvZiBuZWFybHkgJDcwMCBtaWxsaW9uIGFsb25nIHdpdGggZWFzeSBhc3N1cmFuY2VzIHRoYXQgdGhlc2UgZml4ZWQgcHJpY2UgY29udHJhY3RzIHdpbGwgd29yayBvdXQgd2VsbCBsYXRlciwgZG9uJ3QgdGhpbmsgdGhlaXIgc2hhcmVzIHdvdWxkIGhhdmUgYmVlbiB1cC4gYmVjYXVzZSBvZiB0aGUgc3RyZW5ndGggb2YgdGhlIGNvbW1lcmNpYWwgamV0IHNpZGUgb2YgdGhlIGJ1c2luZXNzLCBoZSBhZGRlZCB0aGF0IG1vbWVudHVtIGluIChjYXNoIGZsb3cpIGNvbnRpbnVlcyB0byBrZWVwIGludmVzdG9ycyBvbiBzaWRlLgpJZGluYSBjb250aW51ZXM6ICJJIGRvbid0IGtub3cgaWYgSSdsbCBiZSBiYWNrLiBJIHdvdWxkIGNlcnRhaW5seSBsb3ZlIHRvIGFuZCB0aGV5IGhhdmUgZGlzY3Vzc2VkIGl0LiAKVGl0bGVzIGZvciBuZXdzIHBvc3RzIHNob3VsZCBpZGVhbGx5IGJlIGFzIGNsb3NlIHRvIHRoZSB0aXRsZSBvZiB0aGUgcmVwb3J0IGFzIHBvc3NpYmxlLiBGb3IgZXhhbXBsZSwgd29tZW4gd2hvIHdvcmsgaW4gcmVzdGF1cmFudHMgb3IgaW4gYmVhdXR5IHNhbG9ucyBpbiByZWQgbGlnaHQgZGlzdHJpY3RzIHdlcmUgaW5jbHVkZWQgYXMgImVhcm5pbmcgYSBsaXZpbmcgZnJvbSB0aGUgc2V4IHRyYWRlIiBiZWNhdXNlIHRoYXQgd2FzIHdoYXQgc3VwcG9ydGVkIHRoZWlyIGJ1c2luZXNzLiBJdCBiZWVuIGxvbmcga25vd24gdGhhdCBrb3JlYSBoYXMgb25lIG9mIHRoZSBiaWdnZXN0IHByb3N0aXR1dGlvbiBpbmR1c3RyaWVzIGluIGFzaWEgKGJpZ2dlciB0aGFuIHRoYWlsYW5kIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgZ2lybHMgaW52b2x2ZWQpLiAKVGhlIHNraW4gaW4geW91ciBmcmVzaGx5IHN0cmV0Y2hlZCBmaXN0dWxhIGlzIGEgbGl0dGxlIG1vcmUgZnJhZ2lsZSB0aGFuIGEgaGVhbGVkIHBpZXJjaW5nIG9yIHN0cmV0Y2guIApUaGUgbmV3IHN0YXRlIHdpZGUgZWZmb3J0IHNlZWtzIHRvIGVzdGFibGlzaCBhdCBsZWFzdCBvbmUgZ2VuZGVyIG5ldXRyYWwgYmF0aHJvb20gZmFjaWxpdHkgaW4gZWFjaCBtaWRkbGUgc2Nob29sIGFuZCBoaWdoIHNjaG9vbCBpbiBWZXJtb250IGJ5IHdvcmtpbmcgd2l0aCBsb2NhbCBHYXkvU3RyYWlnaHQgQWxsaWFuY2UgKEdTQSkgZ3JvdXBzLCBzY2hvb2wgYWRtaW5pc3RyYXRvcnMgYW5kIHBvbGljeSBtYWtlcnMuIE9mdGVuLCBnZW5kZXIgbmV1dHJhbCBiYXRocm9vbXMgYXJlIG9uZSBzdGFsbCB1bmlzZXggZmFjaWxpdGllcy4KIkF1ZHJleSBNaWRkbGV0b24gaXMgYSBCaWcgQnJvdGhlciBzdXBlciBmYW4gd2hvIGFwcGxpZWQgb25saW5lLCBsaWtlIG1hbnkgb3RoZXIgaG9wZWZ1bCBIb3VzZWd1ZXN0cywgYW5kIHdhcyBvcGVuIGFib3V0IGhlciB0cmFuc2l0aW9uIGluIHRoZSBhcHBsaWNhdGlvbiBwcm9jZXNzLCIgYSBDQlMgc3Bva2VzcGVyc29uIHNhaWQgaW4gYSBzdGF0ZW1lbnQuICJJdCBpcyBjdXN0b21hcnkgZm9yIEJpZyBCcm90aGVyIEhvdXNlZ3Vlc3RzIHRvIHNoYXJlIHBlcnNvbmFsIG5ld3MgaW5zaWRlIHRoZSBob3VzZSwgYW5kIEF1ZHJleSBwbGFucyB0byBkaXNjdXNzIGhlciBzdG9yeSB3aXRoIHRoZSBIb3VzZWd1ZXN0cyBpbiBoZXIgb3duIHdvcmRzIGR1cmluZyB0aGUgcHJlbWllcmUgZXBpc29kZSBvbiBXZWRuZXNkYXksIEp1bmUgMjQuIi4gCkNveW90ZVJhdmVuICA0IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpBZGRpdGlvbmFsbHksIHRoZXNlIHBva2VyIHNldHMgY2FuIGJlIHVzZWQgaW4gYSB2YXJpZXR5IG9mIG90aGVyIGdhbWVzIGluY2x1ZGluZyBibGFja2phY2sgYW5kIHJvdWxldHRlLiBUaGVyZWZvcmUsIHdoZW4gbWFraW5nIGFuIGludmVzdG1lbnQgaW4gdGhlIHB1cmNoYXNlIG9mIGNhc2lubyBzdHlsZSBwb2tlciBjaGlwcyBzZXQgeW91J3JlIGdldHRpbmcgY2hpcHMgd2l0aCB0aGUgdmVyc2F0aWxpdHkgdG8gYmUgdXNlZCBpbiBhIG51bWJlciBvZiBkaWZmZXJlbnQgZ2FtZXMuCkZyZXF1ZW50IFRWIGFuZCBXZWIgc3VyZmVycyAoc2l0dGVycykgaGF2ZSBoaWdoZXIgcmF0ZXMgb2YgaHlwZXJ0ZW5zaW9uLCBvYmVzaXR5LCBoaWdoIGJsb29kIHRyaWdseWNlcmlkZXMsIGxvdyBIREwgY2hvbGVzdGVyb2wsIGFuZCBoaWdoIGJsb29kIHN1Z2FyLCByZWdhcmRsZXNzIG9mIHdlaWdodC4gClNoZSBzaW5ncyBoZXIgb3duIHNvbmdzIGxpa2Ugd2Ugc2luZyBoZXIgc29uZ3MgaW4gdGhlIGNhciB3aGVuIHdlJ3JlIGFsb25lLCB3aGljaCBpcyB0byBzYXkgc2hlIGJlbHRzIHRoZW0gYXQgdGhlIHRvcCBvZiBoZXIgbHVuZ3MuIApBbGwgb2YgdGhhdCB3YXMgZ3JlYXQgYXMgbG9uZyBhcyBpdCBob3VzaW5nIHByaWNlcyB3ZXJlIHJpc2luZyBhbmQgaXQgd2FzIGludmVzdG9yIHR5cGVzIHRha2luZyBvdXQgdGhlIGxvYW5zLiAKVGhpcyBpbmNsdWRlcyByZXNwb25kaW5nIHdpdGggYW4gaW5zdWx0IHRvIHNvbWVvbmUgd2hvIGluc3VsdGVkIHlvdS4gSWYgeW91IGluc3VsdCBiYWNrLCB5b3UgbWF5IGFsc28gZ2V0IGEgcmVtb3ZhbC93YXJuaW5nLiBSZXBvcnQgYW55IHZpb2xhdGlvbnMgb2YgSW5jaXZpbGl0eSB1c2luZyB0aGUgcmVwb3J0IGJ1dHRvbiBpbnN0ZWFkLgpUcnVseVN0dXBpZE5ld2IgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpZb3UgY2FuIGRvIHdoYXQgQmlnIFRpbiBGb2lsIHdhbnRzIGFuZCBiZWxpZXZlIHRoYXQgc2hpdCBmcm9tIHRoZSBib3R0b20gb2YgeW91ciBoZWFydC4gT3IgeW91IGNhbiBkbyB3aGF0IEkgZG8gYW5kIGdldCBhbmdyeSB0aGF0IHRoZXNlIGZ1Y2tpbmcgdGhpbmdzIGFyZSBuZXZlciBwdXQgdG8gZ29vZCB1c2UuIApBdXRvbWFrZXIuIApIZWxsbyAvdS9GcmFnaWxlU25laywgdGhhbmtzIGZvciBwb3N0aW5nIHRvIC9yL0Jvc3NmaWdodC4gVW5mb3J0dW5hdGVseSB5b3VyIHBvc3QgaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6CkRvbid0IHRyeSB0byBqb2xseSBoZXIgYWxvbmcgb3IgYWN0IGFzIGlmIGl0cyBzb21ldGhpbmcgc2hlIHNob3VsZCBiZSBhYmxlIHRvIHN3aXRjaCBvZmYuIApIaXMgZXhwbGFuYXRpb24gaXMgcmVhc29uYWJsZSBhbmQgZ29pbmcgbHVtcCBpcyBzb21ldGhpbmcgcGVvcGxlIGRvLiBObyBvbmUga25vd3MgYnV0IExhd2xlci4gQW5kIGlmIGl0IHdhcyBldmVuIGNsb3NlIHRvIGJlaW5nIHRpZ2h0LCBoZSBtaWdodCBub3QgZXZlbiBrbm93LgpIZXJlIGFyZSBhIGNvdXBsZSBvZiBwaWN0dXJlcy4gVGhlIG9uZSBvbiB0aGUgbGVmdCBpcyB0aXRsZWQgIlZhZ2luYSBhcyBQZW5pcyIgZnJvbSBzdXBlciBjb29sIGFuYXRvbWlzdCBBbmRyZWFzIFZlc2FsaXVzIDE1NDMgYm9vayBEZSBodW1hbmkgY29ycG9yaXMgZmFicmljYSAoT24gdGhlIEZhYnJpYyBvZiB0aGUgSHVtYW4gQm9keSksIGFuZCB0aGUgb25lIG9uIHRoZSByaWdodCBpcyBJdGFsaWFuIHN1cmdlb24gVmlkdXMgVmlkaXVzIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHZhZ2luYSBhbmQgdXRlcnVzIGZyb20gRGUgYW5hdG9tZSBjb3Jwb3JpcyBodW1hbmkgKDE2MTEpLi4gCkkgY291bGRuIHVuZGVyc3RhbmQgd2hhdCBzaGUgcmVwbGllZCBidXQgc2hlIHdlbnQgYmFjayB0byBnaXZpbmcgbWUgYSBiYWQgbWFzc2FnZS4gCiJJIGZlZWwgbGlrZSBteXNlbGYgZm9yIHRoZSBmaXJzdCB0aW1lIGV2ZXIsIiBzaGUgdG9sZCBSb2xsaW5nIFN0b25lIGluIE9jdG9iZXIsIGFmdGVyIHRoZSBhbGJ1bSBkZWJ1dGVkIGF0IE5vLiAxIGluIEF1Z3VzdC4gCkNoaXJvcHJhY3RvcnMgY2xhaW1lZCB0aGUgQU1BIHdhcyB0cnlpbmcgdG8gc251ZmYgb3V0IHRoZSBjb21wZXRpdGlvbiB3aXRoIGZlYXIgdGFjdGljcyBhbmQgYm9ndXMgcmVzZWFyY2guIApUaGUgQ1BDcyB3b3VsZCBhbG1vc3QgY2VydGFpbmx5IG1pc3MgdGhlc2UgYXQgcmlzayBjYXNlcyBhbmQgY2F1c2UgbGlmZSB0aHJlYXRlbmluZyBkZWxheXMgdG8gdGhlIHdvbWFuIHJlY2VpdmluZyB0cmVhdG1lbnQuIApSQUxFSUdIIENvbXBsZXRlIGFuZCB1dHRlciBkb21pbmF0aW9uLgpBdCB0aGlzIGFnZSwgZm9yIGV4YW1wbGUsIGNoaWxkcmVuIG9mdGVuIGRyb3AgdGhpbmdzIHNpbXBseSB0byBzZWUgd2hhdCB3aWxsIGhhcHBlbi4gQXMgdGhleSBjb21lIHRvIGFwcHJlY2lhdGUgYSBjb25zaXN0ZW50IHJlc3VsdCBpbiB0aGUgYWN0IG9mIGRyb3BwaW5nIG9iamVjdHMgdGhleSBiZWdpbiB0byBiZWNvbWUgbW9yZSBjcmVhdGl2ZSBpbiB0aGVpciBvYmplY3QgbWFuaXB1bGF0aW9uLCBub3cgZW5nYWdpbmcgaW4gdGhyb3dpbmcgYm90aCBzb2Z0bHkgYW5kIGZvcmNlZnVsbHksIGJvdW5jaW5nIHRveXMgb2ZmIHdhbGxzIG9yIHRocm93aW5nIHRoZW0gZG93biBzdGFpcnMuIEluIHRoZXNlIG5ldyBleHBlcmltZW50cyB3ZSBzZWUgYWNjb21tb2RhdGlvbi4gSWYgYSBjaGlsZCBsZXQncyBnbyBvZiBhIGhlbGl1bSBiYWxsb29uIGFuZCwgY29udHJhcnkgdG8gdGhlaXIgc2NoZW1hLCB3YXRjaGVzIHJpc2UgaW5zdGVhZCBvZiBmYWxsIHRoaXMgaXMgYWxzbyBhbiBleGFtcGxlIG9mIGFjY29tbW9kYXRpb24uCldoZW4gd2UgY2FuIGZpbmFsbHkgYnJlYWsgb3V0IHRoZSBjb29raWVzIGFuZCBtaWxrICAgbm90IGZvciBwcm9maXQgIGJ1dCB0byBjZWxlYnJhdGUgb3Vyc2VsdmVzIGFzIGEgY29tbXVuaXR5IG9mIGNpdGl6ZW5zIHdobyBhcmUgYWxsIGluIHRoaXMgdG9nZXRoZXIuLiAKSSB3YXMgZnVsbHkgYXdhcmUgb2YgdGhlIHJpc2tzIEkgd2FzIHRha2luZyBhbmQgd2FzIGFjdHVhbGx5IGxhdWdoaW5nIG15IGFzcyBvZiBpcmwgYXQgaG93IHF1aWNrbHkgbXkgaGVsIGRpZWQuIEkgaGFkIGp1c3QgY2xpY2tlZCBvbiB0aGUgZW1wbG95bWVudCBoaXN0b3J5IG9mIHRoZSBzYWJyZSBwaWxvdCB0aGF0IGdvdCBpbml0aWFsIHRhY2tsZSB3aGVuIEkgc2F3IGJ1YmJsZSBnbyB1cC4gCllvdSBoYXZlIHNvIG1hbnkgaGFyZCB3b24sIGJ1dCBhbWF6aW5nIGluc2lnaHRzIGludG8gaG93IG5hcmNpc3Npc3RpYywgY29udHJvbGxpbmcgYWJ1c2VycyBhcmUgYWJsZSB0byBzdWJ0bHkgZ2FzbGlnaHQsIGxpZSwgY2Fqb2xlIGFuZCBwb3dlciB0cmlwIHRoZWlyIHdheSBpbnRvIGFsd2F5cyBrZWVwaW5nIHBvd2VyIGFuZCBjb250cm9sLCBhbGwgdGhlIHdoaWxlIG1haW50YWluaW5nIGFuIGluZnVyaWF0aW5nIGZhY2FkZSBvZiBwbGF1c2libGUgZGVuaWFiaWxpdHkuIFRoZSB3b3JzdCBpcyB3aGVuIHRoZXkgdXNlIHRoZWlyIGZha2UgYXNzIGNhbG0gZGVtZWFub3IgYW5kIENoZXNoaXJlIENhdCBzbWlsZSB0byBtYWtlIG90aGVycyBkb3VidCB5b3VyIHNhbml0eS4uIApBbGwgaW4gYWxsIEkgbWVhbnQgbm8gZGlzcmVzcGVjdCwgSSB3YXMganVzdCBzYXlpbmcgdGhhdCB0aGUgZmFjdCB0aGF0IHRoaXMgd2hvbGUgdGhpbmcgaXMgYSBiaWcgZGViYXRlIChldmVuIG5vdywgYmV0d2VlbiB1cykgaXMgd2hhdCBhbm5veXMgYWJvdXQgQW1lcmljYS4gRm9yIHdoYXQgaXQncyB3b3J0aCwgSSBkb24ndCBsaWtlIENhbmFkYSBtdWNoIGVpdGhlcgpJIGxpa2UgeW91ciB0aGlua2luZyBhYm91dCBpbnRlcmVzdGluZyB0aGluZ3MgdG8gZG8sIEkgbG92ZSB0byBnbyBvdXQgb24gYSBkYXRlIHdpdGggeW91LCBidXQgbG9naXN0aWNzIGFyZSBtb3JlIGltcG9ydGFudCBkZXBlbmRpbmcgb24gd2hhdCB5b3Ugd2FudCB0byBhY2NvbXBsaXNoIHdpdGggdGhpcyBnaXJsLiAKRnJlbmNoZnJ5MTkxICA0NiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KU28sIGhlcmUgd2hhdCBoYXBwZW5lZDogd2Ugd2VyZSBvZmZlcmluZyBhIGZlZWQgb2YgL3IvbmVvZ3JhcGh5IHBvc3RzIG9uIHRoZSAvci9jb25sYW5ncyBvZmZpY2lhbCBEaXNjb3JkIHNlcnZlciwgc28gdGhhdCB1c2VycyB3aG8gd2VyZSBpbnRlcmVzdGVkIGluIHRoZSBzdWJyZWRkaXQgY291bGQga25vdyB3aGVuIGEgdGhlcmUgd2FzIGEgbmV3IHBvc3QuIFdlJ3ZlIGJlZW4gcnVubmluZyBhIGZlZWQgb2YgL3IvY29ubGFuZ3MgZm9yIHF1aXRlIGEgd2hpbGUgbm93IGFzIHdlbGwgKGFuZCBpbiBmYWN0LCBoYWQgdG8gYW1lbmQgb3VyIEF1dG9Nb2QgZm9yIHRoZSBzYW1lIGlzc3VlIG9jY3VycmVudCBvbiAvci9uZW9ncmFwaHkpLiBUaGUgd2hvbGUgc2V0dXAgaXMgcXVpdGUgc2ltaWxhciB0byBhIG11bHRpcmVkZGl0IGluIG1hbnkgcmVzcGVjdHM6IGl0IGFsbG93ZWQgbW9yZSBpbnRlZ3JhdGlvbiBpbnRvIHRoZSBjb21tdW5pdHksIHBhcnRpY3VsYXJseSBhcyAvci9uZW9ncmFwaHkgd2FzIHBvc2l0aW9uZWQgYXMgdGhlIGRlc3RpbmF0aW9uIGZvciBzY3JpcHQgcG9zdHMsIGFmdGVyIHdlIGRlY2lkZWQgdG8gbm8gbG9uZ2VyIGFsbG93IHRoZW0gb24gL3IvY29ubGFuZ3MuLiAKRGl2aW5nIGhhcyBzYXZlZCBJdGFseSBmcm9tIHR3byBjb3VudHJpZXMgd2hvc2UgY29tYmluZWQgcG9wdWxhdGlvbiBpcyBoYWxmIG9mIHRoZWlycyBhbmQgZm9yIHdoaWNoIGZvb3RiYWxsIHJhbmtzIGFzIHJvdWdobHkgdGhlIDV0aCBvciB3b3JzdCBtb3N0IHBvcHVsYXIgc3BvcnQuIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1RoZXJlIHdhcyBhIG1pbnVzY3VsZSBhbW91bnQgb2Ygc2hpcnQgcHVsbGluZyB0aGVyZSwgbm8gbW9yZSB0aGFuIHdoYXQgdGhlIEl0YWxpYW4gcGxheWVycyBkaWQgdGhlbXNlbHZlcyBpbiB0aGlzIGdhbWUgYW5kIG90aGVycy4gClRoZSByZWFsIGNoYWxsZW5nZSBpcyBob3cgdG8gcmVhY2ggdGhlbS4uIApWaXNpdGF0aW9uIHdpbGwgYmUgZnJvbSA1OjAwICAgNzowMCBQTSBvbiBGcmlkYXksIFNlcHRlbWJlciAxNCwgMjAxOCBhdCB0aGUgTGVucm9vdCBNYWV0em9sZCBGdW5lcmFsIEhvbWUsIDEyMDkgRS4gCkhvcnJpYmxlIHRveGljIGZyaWVuZCB3aG8gb25seSBldmVyIHRhbGtlZCBhYm91dCBoZXJzZWxmLiAKWW91IGhhdmUgcmVhZCwgaXQgaXMgQ1JJVElDQUwgdGhhdCB5b3UgYXNrIHlvdXIgcGh5c2ljaWFuIHRvIGRvIGEgY29tcHJlaGVuc2l2ZSB0aHlyb2lkIHBhbmVsLiAKSSBzcGVudCB0aGUgdGhyZWUgZGF5cyBzb2FraW5nIGFuZCBkZXNhbGluYXRpbmcgdGhlIGRyaWVkIGNvZCwgY2hhbmdpbmcgdGhlIHdhdGVyIGV2ZXJ5IHR3ZWx2ZSBob3VycyBhbmQgZmx1ZmZpbmcgaXQgYmFjayB1cC4gCjEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29EZWZpbml0ZWx5IE5UQS4gSXQgc291bmRzIGxpa2UgeW91ciBkYWQgaGFzbiBldmVuIGFwb2xvZ2l6ZWQgYW5kIHlvdSBhcmUgbm90IGluIGEgcGxhY2Ugd2hlcmUgeW91IGNhbiBldmVuIGhhbmRsZSBoaXMgcHJlc2VuY2Ugc28gSSBkb24gc2VlIHdoeSB5b3Ugd291bGQgd2FudCBoaW0gdGhlcmUgb24geW91ciBoYXBwaWVzdCBkYXkuIEhvbmVzdGx5LCBoZSBvbmx5IGNhbGxlZCBiZWNhdXNlIHlvdXIgbW9tIG5vdGlmaWVkIGhpbS4gCklmIHlvdSBleGVyY2lzZSwgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZXhlcmNpc2UgcHJpY2UgYW5kIHRoZSBmYWlyIG1hcmtldCB2YWx1ZSBpcyB0YXhlZCBhcyBpbmNvbWUgKG9ubHkgNTAlIG9mIGl0LCB0aG91Z2gsIGJlY2F1c2UgaXQgYSBDQ1BDLikuIElmIHRoZXJlIG5vIG1hcmtldCBmb3IgdGhlbSwgc28geW91IGhhdmUgdG8gc2l0IG9uIHRob3NlIHNoYXJlcyB1bnRpbCBzb21ldGhpbmcgaGFwcGVucyAoSVBPLCBzaGFyZSBzYWxlKSB0aGVuIHRoZSB2YWx1ZSBpcyB0YXhlZCBhcyBjYXBpdGFsIGdhaW5zLiBJZiB5b3UgaG9sZCB0aGVtIGZvciB0d28geWVhcnMgb3IgbW9yZSwgeW91IGNhbiB0YWtlIGFkdmFudGFnZSBvZiB5b3VyICQ3NTBrIGxpZmV0aW1lIGNhcGl0YWwgZ2FpbnMgdGF4IGV4ZW1wdGlvbi4uIApMaWZlLiBKdXN0IGJlY2F1c2Ugb25lIG1ldGhvZCBoZWxwZWQgb25lIGtpZCBzdGF5IG9mZiB0aGUgc21va2VzLCBkb2Vzbid0IG1lYW4gaXQgd29ya3MgZm9yIGV2ZXJ5b25lIGVsc2UuLiAKV2h5IHRoZSBiZXN0IFJSU1Agc2Vhc29uIHN0cmF0ZWd5IG1heSBiZSB0byB0YWtlIFJSU1Agc2Vhc29uIG91dCBvZiB0aGUgZXF1YXRpb24gYWx0b2dldGhlcgpTbyB3aHkgZGlkIFBhY3F1aWFvIHJlZnVzZSB0byB0YWtlIHRoZSBkYW1uZWQgdGVzdHM/IFBhY3F1aWFvIGtub3dzLCB0aGUgcmVzdCBvZiB1cyBjYW4gb25seSBzcGVjdWxhdGUuIEkgZmVlbCB0aGF0IGl0IGlzIGEgY29tYmluYXRpb24gb2YgdGhpbmdzLiAKSSBjYW4gb25seSBhc3N1bWUgaGUgaXNuJ3Qgd2lubmluZyBJIG1lYW4gaWYgaGUgd2FzIG1ha2luZyA1LDAwMCBkb2xsYXJzIGEgd2VlayB5b3VyIG9ubHkgaXNzdWUgd291bGQgYmUgdGhlIGZlbWFsZSBjb250YWN0LiAKQnV0IEkgaW1hZ2luZSBpcyBob2xkaW5nIHRoZWlyIGNhcmRzIHRpZ2h0bHkgYW5kIHRyeWluZyB0byBzbG93bHkgcm9sbCBvdXQgYSB3b3JraW5nIGltcHJvdmVkIFNpcmkuIApUaGUgMjYgeWVhciBvbGQgdHJ1Y2sgZHJpdmVyIGhhcyBiZWVuIGNoYXJnZWQgd2l0aCBmb3VyIG9mZmVuY2VzIGluY2x1ZGluZyBuZWdsaWdlbnQgZHJpdmluZyBvY2Nhc2lvbmluZyBkZWF0aCBhbmQgZmFjZXMgY291cnQgaW4gT2N0b2Jlci4gQSBtaW51dGUncyBzaWxlbmNlIHdhcyBkZWRpY2F0ZWQgdG8gTXIgUGVydHplbCBhdCB0aGUgSHVtZSBMZWFndWUgZmluYWxzIGF0IFdhbGJ1bmRyaWUgdG9kYXkgYW5kIExvY2toYXJ0IHByZXNpZGVudCBCb2IgTWF0aGV3cyBzYWlkIHRoZXJlIHdhcyAiYSBsb3Qgb2YgZ3JpZXZpbmciIGJldHdlZW4gcGxheWVycy4gIkZyb20gYSBjb21tdW5pdHkgcGVyc3BlY3RpdmUsIHdlJ3ZlIGxvc3QgYSBsZWdlbmQsIiBoZSBzYWlkLiAKQW5kIGFzIHRoZXJlIGFyZSBjcmVkaWJsZSBmZWFycyBmb3IgcmVxdWlyaW5nIGl0LCBJIHdvdWxkIHN0aWxsIGJlIGFnYWluc3QgaXQuIApJYW4gYW5kIEphbWllJ3MgcmVsYXRpb25zaGlwIGlzIG9uZSBvZiBteSBmYXZvcml0ZXMuIApJdCBsaWtlIHlvdSBqdXN0IHJlZnVzZSB0byByZWFkIHRoZSBXaWtpIGFydGljbGUgYW5kIGhvdyBpdCBlbmNvbXBhc3NlcyBsaXRlcmFsbHkgZXZlcnl0aGluZyB5b3Ugc2F5aW5nLiBBbmQgeW91IHNheWluZyBpdCBhcyBpZiBpdCBpbnZhbGlkYXRlcyBhbnl0aGluZyBJIHNhaWQuIApQcm9mZXNzaW9uYWxseSBydW4gaG91c2UgZ2FtZXMgb3ZlciByYWtlIGFuZCB1bmRlcmRlbGl2ZXIgdG9vLiBZb3VyIGhvbWUgZ2FtZXMgd2l0aCB0aGUgYnJvbWllcyB3aG8gYXJlIGRvbmtzIGFyZSBtZWguIApUaGUgaW1wbGljYXRpb24gdGhlcmUgaXMgdGhlIHNleCB3YXMgY29uc2Vuc3VhbCBiZWNhdXNlIHNoZSB3YXMgd2VhcmluZyBzZXh5IHVuZGVyd2VhciwgdGhlcmVmb3JlIHNoZSB3YXMgbG9va2luZyBmb3Igc29tZW9uZSB0byBoYXZlIHNleCB3aXRoLiBJdCBpcyBpcnJldmVsYW50IHdoYXQgaGVyIHVuZGVyd2VhciBsb29rZWQgbGlrZSBiZWNhdXNlIGV2ZW4gaWYgc2hlIHdhcyBsb29raW5nIHRvIGhhdmUgc2V4IHdpdGggc29tZW9uZSB0aGF0IGRvZXNuIG1lYW4gaXQgd2FzIHRoZSBkZWZlbmRhbnQgYW5kIGlmIGl0IHdhcyBpdCBkb2VzbiBtZWFuIHNoZSBjb3VsZG4gY2hhbmdlIGhlciBtaW5kIGFib3V0IHNleC4KVGhlaXIgbmV0IGNvZGUgaXMgc28gZnVja2luZyBidXN0ZWQgdGhhdCB0aGVpciBzZXJ2ZXJzIGNhbiBmaWx0ZXIgb3V0IHdoYXQgYXJlIHZlcnkgb2J2aW91c2x5IGR1cGxpY2F0ZSByZXF1ZXN0cywgYW5kIGl0IHRoZSBwbGF5ZXJzIGZhdWx0PyBJdCBoYXJkIHRvIGV4cGxhaW4gdG8gc29tZW9uZSB3aG8gaXNudCBpbnRvIHNvZnR3YXJlIGV4YWN0bHkgaG93IGVncmVnaW91cyB0aGF0IGlzLiAKT2gsIG5vICguIFRvIG1lIGJlY2F1c2UgY3VzaGlvbmluZyBvZiB0aGUgYXJyYXksIGFuZCBjbGFtcHMgd2l0aCBhIGNoYWluIG9mIGF3ZnVsIHN0aWNrLCBhcyBpZiBJIHdlcmUga2ljayBvZmYgbmFrZWQuIApVdmEsIGEgMjcgeWVhciBvbGQgbWFzc2FnZSB0aGVyYXBpc3QsIHdhcyBoZWFyZCBzaG91dGluZyB0aGF0IHRoZSBjb21wZXRpdGlvbiB3YXMgYSBmYXJjZSBhbmQgY2xhaW1pbmcgdGhhdCB0aGUgd2lubmVyJ3MgYnV0dCB3YXMgc3VyZ2ljYWxseSBlbmhhbmNlZC4KVGV0cmFjeWNsaW5lIGFuZCBkb3h5Y3ljbGluZSBhcmUgc2xpZ2h0bHkgbW9yZSBlZmZlY3RpdmUgYnV0IGhhdmUgc29tZSBzaWRlIGVmZmVjdHMuIE1pbm9jeWNsaW5lIHNlZW1zIHRvIGhhdmUgdGhlIGxlYXN0IHJpc2sgb2YgcmVzaXN0YW5jZSBhbmQgaXMgdGh1cyB0aGUgYmVzdCBvcHRpb24sIGJ1dCBpdHMgcG90ZW50aWFsIHNpZGUgZWZmZWN0cyBhcmUgc28gbmVnYXRpdmUgaXQncyB1c3VhbGx5IGEgbGFzdCByZXNvcnQuLiAKVGhlbiB3ZSBnZXQgdG8gdGhlIHBhcnQgd2hlcmUgcGVvcGxlIHN0YXJ0IHRvIGRpdmVyZ2UgaW4gaW50ZXJwcmV0YXRpb24uIFdoZW4gdGhlIHdvcmtlcnMgcmV2b2x0ZWQgTWFyeCBiZWxpZXZlZCB0aGV5IHdvdWxkIGZvcm0gc29tZXRoaW5nIGNhbGxlZCB0aGUgImRpY3RhdG9yc2hpcCBvZiB0aGUgcHJvbGV0YXJpYXQiLiBUaGlzIGJvZHkgd291bGQgYmFzaWNhbGx5IHRyYW5zaXRpb24gdGhlIHNvY2lldHkgdG8gQ29tbXVuaXNtLiAKUXVhbGl0YXRpdmUgQ2FyZWVyIEFzc2Vzc21lbnQgUXVhbGl0YXRpdmUgYXNzZXNzbWVudHMgZm9jdXMgb24geW91IGFzIGFuIGluZGl2aWR1YWwgYW5kIGFpbSB0byBhc3Nlc3MgeW91ciBwZXJjZXB0aW9ucyBhbmQgcHJlZmVyZW5jZXMgYWJvdXQgeW91ciB3b3JrIGxpZmUuIFRoZXkgbWF5IGludm9sdmUgaW5mb3JtYWwgdGVzdHMgb3IgZGlzY3Vzc2lvbnMgcmF0aGVyIHRoYW4gZm9ybWFsIHRlc3RzLiAKQWxsZWluZSBzaW5kIHdpciBzY2h3YWNoLCBnZW1laW5zYW0gc2luZCB3aXIgbWVocmVyISB6aXZpbGNvdXJ0YWdlIGFsbGVpbmVzaW5kd2lyc2Nod2FjaCBvdHRvaGFmdGlna2VpdGFic2NoYWZmZW4uIAoiSmVmZnJleSBwcmV5ZWQgb24gZ2lybHMgd2hvIHdlcmUgaW4gYSBiYWQgd2F5LCBnaXJscyB3aG8gd2VyZSBiYXNpY2FsbHkgaG9tZWxlc3MuIEhlIHdlbnQgYWZ0ZXIgZ2lybHMgd2hvIGhlIHRob3VnaHQgbm8gb25lIHdvdWxkIGxpc3RlbiB0byBhbmQgaGUgd2FzIHJpZ2h0LCcnIHNhaWQgQ291cnRuZXkgV2lsZCwgd2hvIHdhcyAxNCB3aGVuIHNoZSBtZXQgRXBzdGVpbi4KWW91ciBhc3NlcnRpb24gdGhhdCB0aGVyZSBpcyAiYWxtb3N0IG5ldmVyIGFueSBuZWVkIiBmb3IgTVJJIGNvbnRyYXN0IGlzIGFic3VyZDsgaXQgaXMgZXNzZW50aWFsIGZvciBlYXJseSBkZXRlY3Rpb24gb2YgY2FuY2VyIGFuZCBtb25pdG9yaW5nIG11bHRpcGxlIHNjbGVyb3Npcy4gCkEganVtYm90cm9uIHdpbGwgYWlyIHRoZSBNaW5uZXNvdGEgQm95cyBTdGF0ZSBIaWdoIFNjaG9vbCBIb2NrZXkgVG91cm5hbWVudCwgd2hpY2ggaXMgdGFraW5nIHBsYWNlIHJpZ2h0IG5leHQgZG9vciBhdCB0aGUgWGNlbCBFbmVyZ3kgQ2VudGVyLiBBbGwgYWdlcy4gCk5vdyB0dXJuIHRoZSBzb2NrIHRvIHRoZSBiYWNrIHNpZGUuIE5vdyB5b3UgbXVzdCBwaWNrIHVwIHRoZSBzdGl0Y2hlcyBzbyB0aGF0IHRoZSBwaXBpbmcgY2FuIGJlIGtuaXR0ZWQgdG9nZXRoZXIuIApUaGUgSVBBIHRvZGF5IHNhaWQgdGhhdCBldmVyIHNpbmNlIGl0IG1vdmVkIHRoZSBoaWdoIGNvdXJ0IGxhc3QgeWVhciwgdGhlIHBvbGljZSByYWlkZWQgb3ZlciBoYWxmIGEgZG96ZW4gcG9rZXIgY2x1YnMgaW4gdGhlIHN0YXRlIGFuZCBmb3JjZWQgdGhlbSB0byBzaHV0IGRvd24uIEl0IHNvdWdodCBhbiBpbnRlcmltIHJlc3RyYWluaW5nIG9yZGVyIGFnYWluc3QgdGhlIHBvbGljZS4KIlRoZXkgaGF2ZW4ndCBiZWVuIHRoZSBtb3N0IGZ1biB0aGluZyBpbiB0aGUgd29ybGQsIGJ1dCBpdCdzIHBhcnQgb2YgdGhlIHByb2Nlc3MsIiBoZSBzYWlkLgpNZW50aW9uZWQgcnVubmluZyB0cmFjaywgYW5kIEkgaG9uZXN0bHkgZG9uIGtub3cgaG93IG11Y2ggaHVuZ3JpZXIgZXhlcmNpc2UgaXMgbWVhbnQgdG8gbWFrZSB5b3UgYnV0IEkgaGFkIG1vcmUgc3VjY2VzcyBsb3Npbmcgd2VpZ2h0IHRoaXMgdGltZSBhcm91bmQgdGhhbiBhbnkgdGltZSBpbiBoaXN0b3J5LCBhbmQgSSBwYXJ0aWFsbHkgY3JlZGl0IG5vdCBleGVyY2lzaW5nLiBJIGZpbmQgdGhhdCB3aGVuIEkgYW0gd2F0Y2hpbmcgbXkgZGlldCBhbmQgSSB0cnkgdG8gaW5jbHVkZSBleGVyY2lzZSwgSSBiZWNvbWUgYSByYXZlbm91cyBiZWFzdC4gClNvbWUgaW4gcHVibGljLCBzb21lIHBlcmhhcHMgbm90LiBMb29rIGF0IG1vc3QgY29tZWR5IGZyb20gdGhlIDkwcyBsaWtlIEtpZHMgaW4gdGhlIEhhbGwgLyBJbiBMaXZpbmcgQ29sb3IgLyBEYW5hIENhcnZleSBzaG93LiBUaGVyZSBhIGxvdCBvZiBzaGl0IHRoYXQganVzdCB3b3VsZG4gZmx5IHRoZXNlIGRheXMuIApJbiB0aGUgc29jaWFsIG1lZGlhIHBvc3QsIEtpYSBBbmRlcnNlbiwgUGV0ZXJzZW4ncyBkYXVnaHRlciwgdGhhbmtlZCBzdGFmZiBmb3IgbG9va2luZyBhZnRlciBNYXJsZXkgYW5kIGdldHRpbmcgaGltIGJhY2sgdG8gdGhlIGZhbWlseSBzYWZlbHkuCk15IGZhbWlseSByYWlzZWQgbWUgY2F0aG9saWMsIEkgY2hhbmdlZCBteSBtaW5kIGF0IGFyb3VuZCAxNSBhbmQgdGhlbiBzdGFydGVkIHRvIGJlbGlldmUgYWdhaW4gd2hlbiBJIHJlYWxpemVkIGl0IGdhdmUgbWUgY29tZm9ydC4gCkNhdCBIdWxiZXJ0IHN0YXJ0ZWQgZ2FtYmxpbmcgZm9yIGEgbGl2aW5nIDQwIHllYXJzIGFnby4gQSBibGFja2phY2sgcGxheWVyIGluIGhlciAyMHMsIHNoZSBiZWNhbWUgc28gc2tpbGxlZCBhdCB3aW5uaW5nIG1vbmV5IGZyb20gY2FzaW5vcywgc2hlIHdhcyBzb29uIHZlcnkgdW5wb3B1bGFyIHdpdGggdGhlbSBhbGwgYXJvdW5kIHRoZSBVUyEgQ2F0IHRvb2sgdXAgcG9rZXIgaW4gdGhlIDE5ODBzIGFuZCB3YXMgb25lIG9mIHRoZSBmaXJzdCB3b21lbiB0byBicmVhayBpbnRvIHRoZSByYW5rcyBvZiBwcm9mZXNzaW9uYWwgY2FyZCBwbGF5ZXJzLiBUaGUgR2FtZSBTaG93IE5ldHdvcmsgY2FsbGVkIGhlciAidGhlIGJlc3QgZmVtYWxlIGdhbWJsZXIgb24gZWFydGguIiBOb3cgcmV0aXJlZCwgQ2F0IHNheXMgc2hlIGlzIG5vdCBzdXJlIHRoYXQgc2hlIHdvdWxkIGxlZ2FsaXNlIGdhbWJsaW5nIGluIGEgc3RhdGUgdGhhdCBkaWQgbm90IGhhdmUgaXQgICBhcyBpdCBjYW4gcnVpbiBzbyBtYW55IGxpdmVzLi4gCkFmdGVyIHdlIGxlZnQgTmFnZGEsIHBvb3IgSmVzcyBoYWQgdG8gdXNlIHRoZSByZXN0cm9vbS4gSGVyIGZpcnN0IHB1YmxpYyByZXN0cm9vbSBleHBlcmllbmNlIHdhcyBvZiBhIGJhdGhyb29tIHRoYXQgd2FzIGEgZmxvb3IuIApKb2huIEFiZXJuZXRoeSwgdGhlIE5TVyBjb3JvbmVyLCBpcyBncmV5IGhhaXJlZCBhbmQgZ3JhdmVsIHZvaWNlZCwgYSBwaGxlZ21hdGljIGNoYXJhY3RlciB3aG9zZSBjYXJlZXIgaGFzIGluY2x1ZGVkIHRoZSBpbnF1ZXN0IGludG8gdGhlIGRlYXRocyBvZiBzaXggc2FpbG9ycyBpbiB0aGUgMTk5OCBTeWRuZXkgdG8gSG9iYXJ0IHlhY2h0IHJhY2UgYW5kIGNvIG9yZGluYXRpbmcgdGhlIGlkZW50aWZpY2F0aW9uIGFuZCByZXR1cm4gb2YgYm9kaWVzIGFmdGVyIHRoZSAyMDAyIEJhbGkgYm9tYmluZ3MuIApUaGUgV1NPUCBkb2VzIGdvdmVybiB0aGUgdXNlIG9mIGxvZ29zLCBob3dldmVyLCBieSBlbmZvcmNpbmcgYSBydWxlIHRoYXQgc3RhdGVzIHBsYXllcnMgY2Fubm90IGRyYXN0aWNhbGx5IGFsdGVyIHRoZWlyIGFwcGVhcmFuY2Ugb25jZSBwbGF5IGJlZ2lucyBlYWNoIGRheS4KT3RoZXIgd2VsbCBrbm93biBvbmxpbmUgcG9rZXIgdmFyaWFudHMgaW5jbHVkZSBGaXZlIENhcmQgRHJhdywgRGV1Y2UgdG8gU2V2ZW4gVHJpcGxlIERyYXcsIENvdXJjaGV2ZWwsIFJhenogYW5kIExvd2JhbGwsIGFtb25nIG90aGVycy4gQmVmb3JlIGVtYmFya2luZyBpbiBhIGRlbWFuZGluZyBvbmxpbmUgcG9rZXIgYWR2ZW50dXJlLCBtYWtlIHN1cmUgeW91J3JlIGZhbWlsaWFyIHdpdGggYWxsIHRoZSBzdWJ0bGV0aWVzIG9mIGEgcGFydGljdWxhciBnYW1lIHZhcmlhbnQgeW91IHdpc2ggdG8gdGFrZSBwbGVhc3VyZSBpbi4KVG8gdGhlIHBvaW50IHdoZXJlIEkgZ2V0dGluZyBhdHRpdHVkZSBmcm9tIGhpbSBldmVyeSB0aW1lIHdlIHRhbGsgYmVjYXVzZSBJIGRvbiB3YW50IHRvIGdvIG91dCBhbmQgaGFuZyB3aXRoIGhpbS4gCkxpbCcgS2ltIFdlIGFyZSByZWFsbHkgZGlnZ2luZyBMaWwgS2ltIGluIHRoaXMgY29tcGV0aXRpb24uIE90aGVyIHRoYW4gc29tZSBxdWVzdGlvbmFibGUgZmFjaWFsIGV4cHJlc3Npb25zLCBzaGUgd29yZSB0aGF0IHNhbWJhIGxpa2UgYSBzZWNvbmQgc2tpbi4gVGhlaXIgYmVzdCB5ZXQsIGFuZCBCcnVubyBvZmZlcmVkIHVwIHRoZWlyIGZpcnN0IDkuClRoZSBvbGQgR29vZCBCdWlsZGluZ3MgaGF2ZSBmZWx0IHRoZSBwaW5jaCBmcm9tIGEgYmV2eSBvZiBuZXcgbHV4dXJ5IGNvbmRvcyB3aXRoIHRhc3RlZnVsIGRlc2lnbiBlbGVtZW50cyAoc3VjaCBhcyBsaW1lc3RvbmUgZmFhZGVzIGluc3RlYWQgb2YgZ2xhc3MpIGFuZCB2YXN0bHkgc3VwZXJpb3IgYW1lbml0aWVzLiBXaGF0J3MgbW9yZSwgY29uZG9zIGRvbid0IGhhdmUgaW50cnVzaXZlIGNvIG9wIGJvYXJkcywgd2hpY2ggZGlzc2VjdCBhbiBhcHBsaWNhbnQncyBmaW5hbmNpYWxzIHRvIGFuIGVtYmFycmFzc2luZyBkZWdyZWUuIE5vdyB0aGUgdHJhZGVyIHdobyB3YW50cyB0byBsaXZlIGluIGhpcyBidXNpbmVzcyByaXZhbCdzIGJ1aWxkaW5nIGRvZXNuJ3QgaGF2ZSB0byBwdWxsIGhpcyBwYW50cyBkb3duIHRvIGdldCBpbi4gCkNhbWUgb3ZlciBmcm9tIEJlbGZhc3QsIE5vcnRoZXJuIElyZWxhbmQsIEkgaGF2ZSBiZWVuIGluIGJ1c3ksIGFuZCBJIGhhdmUgYmVlbiBpbiBub3RoaW5nLiBJIGxpa2UgdGhlIG5vdGhpbmcuCldoZW4gaGUgd2FzIGluIHRoZSBtaWxpdGFyeSBkdXJpbmcgdGhlIFNlY29uZCBXb3JsZCBXYXIsIE1jTmFtYXJhIHB1c2hlZCBmb3IgdGhlIGRldmFzdGF0aW5nbHkgZWZmZWN0aXZlIGZpcmVib21iaW5nIG9mIFRva3lvLiAKU3RyZW5ndGggcHJvdmlkZXMgYSBwaHlzaWNhbCBkYW1hZ2UgaW5jcmVhc2UgYW5kIGFkZGl0aW9uYWwgTGlmZS4gCklmIHlvdSBub3QgZ29pbmcgdG8gYW55IG90aGVyIGNhc3RsZSwgSSBoaWdobHkgcmVjb21tZW5kIG5vdCBza2lwcGluZyBPc2FrYSBjYXN0bGUuIApEb3plbnMgb2YgUkJzIGNhbiBkbyB3aGF0IGhlIGRvZXMuIApUaG91Z2ggdGhlcmUgYXJlIHNvbWUgdmFyaWF0aW9ucyBpbiB0aGUgcnVsZXMgb2YgYm90aCB0aGUgZ2FtZXMsIGJ1dCBmdW4gYW5kIGV4Y2l0ZW1lbnQgYXJlIG5vdCBjb21wcm9taXNlZC4gVG8gYWRkIHRvIHRoZSB2YXJpZXR5LCBPbWFoYSBQb2tlciBoYXMgbWFueSB2YXJpYW50cyB3aGljaCBtYWtlIGl0IGFsbCBtb3JlIGludGVyZXN0aW5nIGFuZCBwb3B1bGFyLi4gCkEgZGl2aXNpb24gYmVuY2ggb2YgSnVzdGljZXMgUk0gU2F3YW50IGFuZCBTYXJhbmcgS290d2FsIHNhaWQsICJIb3cgY2FuIHBva2VyIGJlIGEgZ2FtZSBvZiBza2lsbD8gWW91IHNpbXBseSBnZXQgdGhlIGNhcmRzIGFuZCBvcGVuIGl0LCBhbmQgaWYgY2hhbmNlIGJlLCB5b3Ugd2lsbCB3aW4uIgpJZiB0aGVyZSBpcywgc3BlY2lhbCBlcXVpcG1lbnQgY2FuIGJlIHVzZWQgdG8gaWRlbnRpZnkgaXQuLiAKSSBqdXN0IHN0YXJ0aW5nIHRvIHRoaW5rIHRoZSBmcmFuY2hpc2UgaGFzIGEgbG9zZXIgbWVudGFsaXR5LiAKSSByZW1lbWJlciB3aGF0IGEgZ3JlYXQgZnJpZW5kIEZyZWQgd2FzIHRvIG15IGxhdGUgaHVzYmFuZCBUZXJyeSBIYW5zb24uIApJIG5vdCBzYXlpbmcgSSBkaXNsaWtlIEtvcmVhbnMgb3IgTGF0aW5vcyBvciB3aGF0ZXZlciBidXQgZ2l2ZW4gdGhlIG9wcG9ydHVuaXR5IEkgZ29pbmcgdG8gaGFuZ291dCB3aXRoIHBlb3BsZSB3aG8gaGF2ZSB0aGUgc2FtZSBpbnRlcmVzdHMgYW5kIGhvYmJpZXMgYXMgbWUuIFNwZWFrIHRoZSBzYW1lIGxhbmd1YWdlIGFzIG1lLiAKSG93IHdvdWxkIG9uZSBkaWFnbm9zZSBFUE0gaWYgdGhlIHRlc3RzIGFyZSBzbyB1bnJlbGlhYmxlPyBBbmQgSXZlIHJlYWQgYSBsb3Qgb2YgYW5lY3RvZGVzIHdoZXJlIHRoZSBob3JzZSB3YXMgdHJlYXRlZCBmb3IgbGFtZW5lc3MgYWdhaW4gYW5kIGFnYWluIHdpdGggbm8gcmVzdWx0IG9ubHkgdG8gZmluZCBpdCB3YXMgRVBNIGluIHRoZSBlbmQuV2VsbCwgZmlyc3QgSSBzYXkgYSBzcGluYWwgdGFwIHdvdWxkIGJlIGluIG9yZGVyIGFzICAgcHJldmlvdXNseSBtZW50aW9uZWQgICBibG9vZCB0aXRyZXMgYXJlIGNvbnNpZGVyZWQgYWJzb2x1dGVseSB1c2VsZXNzIGJ5IHRoZSBtYWpvcml0eSBvZiB2ZXRzICh5b3UgY2FuIEdvb2dsZSBtZSBvbiB0aGF0KS4gClVnaCwgSSBzb3JyeSB5b3UgaGF2ZSB0byBkZWFsIHdpdGggdGhpcywgbXkgaHVzYmFuZCBhbmQgSSBoYWQgc29tZXRoaW5nIHNpbWlsYXIgaGFwcGVuIHdoZW4gd2Ugd2VyZSBpbiBhIGRpZmZlcmVudCBuZWlnaGJvcmhvb2QsIGJ1dCBpdCB3YXMgYW4gb3ZlcnNpemVkIGJsdWUgaGVlbGVyIHdobyBjb3VsZCBqdW1wIGEgNiBmb290IHdvb2RlbiBmZW5jZSBsaWtlIGhlIHdhcyBhIGNhdC4gQXQgdGhlIHRpbWUsIHRoZSBuZWlnaGJvciBpbiBxdWVzdGlvbiBkaWRuIGtub3cgd2hvIHdhcyBjYWxsaW5nIG9uIGhpcyBkb2csIHNvIEkgbmV2ZXIgaGFkIHRvIGRlYWwgd2l0aCBoaW0gZGlyZWN0bHkuIE15IGJlc3QgYWR2aWNlOiB0aGVzZSBwZW9wbGUgYXJlIG5ldmVyIGdvaW5nIHRvIGJlIHJlYXNvbmFibGUgb3IgbG9naWNhbCwgc28gZG9uIGdldCBpbnRvIGFyZ3VtZW50cyB3aXRoIHRoZW0uIEV2ZXJ5IHRpbWUgdGhleSB0cnkgdG8gdGFsayB0byB5b3UsIGp1c3QgcmVwZWF0IG92ZXIgYW5kIG92ZXI6ICJ5b3VyIGRvZyBpcyBkYW5nZXJvdXMsIGFuZCBJIHByb3RlY3RpbmcgbXlzZWxmIiBvciBzb21ldGhpbmcgc2ltaWxhciwgYW5kIGV4dHJhY3QgeW91cnNlbGYgZnJvbSB0aGUgY29udmVyc2F0aW9uLgpDZWxpbmUgRGlvbnMgc29uIGNhcHR1cmVkIHRoZSBoZWFydCBvZiBDYW5hZGEgd2l0aCBldWxvZ3kgdG8gUmVuCllldCBhcyBPUCBkZXNjcmliZWQsIGhpcyBzaXN0ZXIgd291bGQgZ2V0IGluc2FuZWx5IG1hZCBpZiB0aGUgZm91bmQgb3V0IGhlciBzb24gaGFkIGJlZW4gZWF0aW5nIG1lYXQuIFNoZSBpcyBiYXNpY2FsbHkgcHVzaGluZyBoZXIgb3duIHBvbGl0aWNhbCBhZ2VuZGEgb250byBoZXIgY2hpbGQgd2hpY2ggaXMgc29tZXRoaW5nIEkgcGVyc29uYWxseSBjYW4gbmV2ZXIgZ2V0IGJlaGluZC4gSSBob25lc3RseSB0aGluayBpdCdzIHBlcmhhcHMgZXZlbiBPUHMgcmVzcG9uc2liaWxpdHkgdG8gaW50ZXJ2ZW5lIGFuZCBzdG9wIGhlciBuZXBoZXcgYmVpbmcgaW5kb2N0cmluYXRlZCBsaWtlIHRoaXMuIApIZSBhZGRlZDogYmVlbiBzdHVjayBpbiB0aGlzIHRvd24gZm9yIGEgdmVyeSBsb25nIHRpbWUgb3ZlciBtZSwgYW5kIEkgcmVhZHkgdG8gbGV0IGdvIHNvIHRoZSBjaXR5IGNhbiBtb3ZlIG9uLiBQZW9wbGUgaGVyZSBhcmUgc3VmZmVyaW5nLCB0aGV5IGh1cnRpbmcgYW5kIGEgZ3JlYXQgZGVhbCBvZiB0aGF0IGh1cnQgSSBhY2NlcHQgZnVsbCByZXNwb25zaWJpbGl0eSBmb3IuIEkgYXBvbG9naXplZCB0byBldmVyeW9uZSB3aG8gd2lsbCBsaXN0ZW4sIGJ1dCBpdCBuZXZlciBzZWVtcyB0byBnZXQgaGVhcmQuIHdlbnQgb24gdG8gc2F5IGVzcGVjaWFsbHkgaW4gdGhlIEFmcmljYW4gQW1lcmljYW4gY29tbXVuaXR5IGtub3cgdGhleSBub3Qgc3VwcG9zZWQgdG8gY3J5IG9yIGRvd24sIGRlc2NyaWJpbmcgd2hhdCBoZSBwcm9qZWN0ZWQgYXMgY29uZmlkZW5jZSB0aGF0IHdhcyBtaXNyZWFkIGFzIHJlYWxseSwgcmVhbGx5LCByZWFsbHkgbWVzc2VkIHVwLCBoZSBzYWlkLCBhZGRpbmcgaGUgdGFrZXMgZnVsbCByZXNwb25zaWJpbGl0eSBmb3IgYWxsIGhpcyBhY3Rpb25zLCBpbmNsdWRpbmcgbHlpbmcgYWJvdXQgdGhlIGFmZmFpciB3aXRoIGZvcm1lciBjaGllZiBvZiBzdGFmZiBDaHJpc3RpbmUgQmVhdHR5LiBIZSBzYWlkIGhlIGluaXRpYWxseSBmZWx0IGhpcyBhY3Rpb25zIHdlcmUgcHJpdmF0ZSwgYnV0IGZpbmFsbHkgaXQsIHNheWluZyBoZSBrbm93cyBoZSBicm9rZSB0aGUgdHJ1c3Qgb2YgdGhlIHB1YmxpYy4gV2hlbiBoZSBmaW5hbGx5IGl0LCBoZSBzYWlkIGhlIHN0YXJ0ZWQgZW5qb3lpbmcgbGlmZSBmb3IgdGhlIGZpcnN0IHRpbWUgd2hpbGUgaW4gVGV4YXMgd2l0aCBoaXMgd2lmZSBhbmQgdGhyZWUgc29ucy4KV2Ugd2lsbCBiZSBtYWtpbmcgbWFueSBvdGhlciBncmVhdCBpbXByb3ZlbWVudHMgdG9vISBXZSBoYXZlIHJlY2VudGx5IGFkZGVkIGFsbW9zdCA0MDAgYnJhbmQgbmV3IG1hY2hpbmVzIHRvIHRoZSBmbG9vciBhbmQgaGF2ZSBiZWVuIHBheWluZyBvdXQgbGlrZSBjcmF6eSEgV2UgaG9wZSB0aGF0IHlvdSBhcmUgYWJsZSB0byBjb21lIGJhY2sgdG8gc2VlIHdoYXQgaXMgaGFwcGVuaW5nIGF0IEdyZWVrdG93biFSZXBvcnQgcmVzcG9uc2UgYXMgaW5hcHByb3ByaWF0ZVRoYW5rIHlvdS5SZXZpZXdlZCBEZWNlbWJlciAxMiwgMjAxMyBHcmVhdCBwbGFjZSwgZ3JlYXQgY29tcHMsIG5pY2UgaG90ZWwuVGhpcyBpcyBteSBEZXRyb2l0IEdvIFRvLiBJIGRvbid0IGZlZWwgc2FmZSBhdCBNb3RvcmNpdHksIE1HTSBpcyBWRVJZIHN0aW5neSB3aXRoIGhvdGVsIG9mZmVycyAoYW5kIHRoZSBtYWNoaW5lcyBhdCBNR00gYXJlIEhPUlJJQkxFIHRpZ2h0ISEhKS4gClBhcnQgb2YgdGhlIHJlYXNvbiBpcyBwaHlzaWNhbDogQmVjYXVzZSB3b21lbidzIGJvZGllcyBoYXZlIGEgbGlnaHRlciBib25lIHN0cnVjdHVyZSB0aGFuIG1lbidzIGJvZGllcywgdGhlIGJvbmVzIGluIHRoZWlyIGZlZXQgYXJlIG5vdCBhcyBzdHJvbmcgYW5kIGFyZSB0aGVyZWZvcmUgbW9yZSBzdXNjZXB0aWJsZSB0byBjZXJ0YWluIGJvbmUgcHJvYmxlbXMsIGluY2x1ZGluZyBidW5pb25zIGFuZCBmcmFjdHVyZXMuIApUaGUgY2xhc3NpYyBleGFtcGxlIGlzIHRoYXQgb2YgZHJhd2luZyB0byBhIGZsdXNoICAgaWYgaW4gYSBwYXJ0aWN1bGFyIGhhbmQgeW91IGhhdmUgYSAxIGluIDQgY2hhbmNlIG9mIG1ha2luZyB5b3VyIGZsdXNoIHdpdGggdGhlIHJlbWFpbmluZyBjYXJkIHRvIGJlIGRlYWx0LCBhbmQgdGhhdCB3b3VsZCBnaXZlIHlvdSB0aGUgYmVzdCBoYW5kLCB0aGVuIHlvdSBzaG91bGQgbm90IGNvbnRpbnVlIHVubGVzcyB5b3Ugd2lsbCBiZSBnZXR0aW5nIHRoZSBwcm9wZXIgb2RkcyAoZGlyZWN0IGFuZCBpbXBsaWVkKS4gCkdvb2QgcG9zdC4gU29tZSB0aG91Z2h0czogMSkgTm90b3JpZXR5IG1hdHRlcnMgYnV0IGlzIG9ubHkgb25lIGZhY3RvciB0byBwcm9iZSAiYmFkIGZhaXRoLiIgU2hvdWxkIFN0ZXZlbiBoYXZlIGdyZWF0ZXIgcmlnaHRzIHRoYXQgb3RoZXIgZGVmZW5kYW50cyBqdXN0IGJlY2F1c2UgaGUgZmFtb3VzPyBEb2VzIGhpcyBmYW1lIG1ha2UgaXQgbW9yZSBsaWtlbHkgdGhhdCB0aGVzZSBib25lcyB3ZXJlIGV4Y3VscGF0b3J5PyAyKSBUaGUgU3RhdGUgY29udGludWVkIHRvIHJlcHJlc2VudCB0byBaZWxsbmVyIHNoZSBjb3VsZCB0ZXN0IHRoZSBib25lcyBzaW1wbHkgYmVjYXVzZSB0aGV5IHRob3VnaHQgdGhleSBoYWQgdGhlbS4gCk5lZWQgdG8gcmVtZW1iZXIgdGhhdCB0aGUgbWVuIGFuZCB3b21lbiBmcm9tIFdvcmxkIFdhciBJLCBiZWNhdXNlIHRoZXJlIHdlcmUgd29tZW4sIHNldCB0aGUgc3RhbmRhcmQgZm9yIG1haW50YWluaW5nIHBlYWNlIGFuZCBmcmVlZG9tIGZvciBlYWNoIGNvbmZsaWN0IGZyb20gdGhlbiBvbi4gNzYsIGEgbWVtYmVyIG9mIHRoZSBXaW5kc29yIFZldGVyYW5zIE1lbW9yaWFsIFNlcnZpY2VzIENvbW1pdHRlZSwgc2FpZCBhdHRlbmRhbmNlIGF0IFJlbWVtYnJhbmNlIERheSBzZXJ2aWNlcyBoYXMgYmVlbiB1cCBvdmVyIHRoZSBsYXN0IGZpdmUgeWVhcnMuLiAKV2hhdCdyZSB0aGUgZnVuZGFtZW50YWwgRG9taW5vUVEiPkRvbWlub1FRIFRleGFzIHBva2VyIHJ1bGVzIGVtcGxveWVkIGJ5IHRoZSBwcm9mZXNzaW9uYWxzIHRvIHByb2R1Y2UgYSBzdGFibGUgaW5jb21lIG9ubGluZT8gV2VsbCwgdGhlIGZ1bmRhbWVudGFscyBrZXkgdG8geW91ciBzdWNjZXNzIGlzIGxpa2VseSB0byBiZSBiYW5rcm9sbCBtYW5hZ2VtZW50LiBKdXN0IHdoYXQncyBiYW5rcm9sbCBtYW5hZ2VtZW50PyBJdCBpcyB0aGUgbWV0aG9kIG9mIG1hbmFnaW5nIHlvdXIgYmFua3JvbGwgYW5kIHRyZWF0aW5nIGl0IHJlYWxseSBsaWtlIHlvdXIgaW5kaXZpZHVhbCBjaGlsZC4gWW91IG1heSBuZWVkIHRvIGFwcGVhciBhZnRlciB5b3VyIGJhbmtyb2xsIGFuZCBtYWtlIGNlcnRhaW4gdGhhdCB5b3UgZG8gbm90IGxvc2UgaXQuLiAKSW5jb21lIHBlIGNhcGl0YSAyLiBIdW1hbiBEZXZlbG9wbWVudCBJbmRleCAzLiAKU28gSSBkaWQgd2hhdCBhbnlvbmUgd291bGQgZG8gaW4gbXkgcG9zaXRpb24sIEkgd2VudCB1cCBhbmQgc2FpZCAiQWN0dWFsbHkgY2FuIEkgZ2V0IGEgY3VwIG9mIGljZSBmb3IgbXkgUGVwc2k/IiBTbyB0aGF0IEkgY291bGQganVzdCBnaXZlIGl0IHRvIHRoZSBsYWR5IHdobyBuZWVkZWQgaWNlLgpCdXQgd2hhdCBleGFjdGx5IHNob3VsZCB3ZSBjYWxsIHRoaXMgd29ybGQ/IENvbW11bmlzbSBoYXMgYmVlbiBzdWxsaWVkIGJ5IHRoZSBTb3ZpZXRzIGFuZCBDaGluZXNlLiBTb2NpYWxpc20gc2VlbXMgbGlrZSBhIGNvbXByb21pc2Ugc3BhY2Ugc3Rha2VkIG91dCBieSBjb3VudHJpZXMgYXMgZW1iZWRkZWQgaW4gY2FwaXRhbGlzbSBhcyBGcmFuY2UgYW5kIFNwYWluLiAKVGhlIGxvYmJ5IGlzIGEgd2lkZSwgdGFsbCwgc3BhY2lvdXMgYW5kIHdlbGwgbGl0IHJvb20uIFRoZSBnaXJscyBhcmUgYXJyYW5nZWQgdG8gdGhlIGxlZnQgYXMgeW91IHdhbGsgaW4sIHdpdGggYSBsYXJnZSBmaXNoYm93bCBzZWxlY3Rpb24gbm90IGluIGZyb250IG9mIGdsYXNzIGJ1dCBzYXQgb24gdGllcmVkIHN0YWlycywgYW5kIHNpZGVsaW5lcnMgdG8gdGhlIGxlZnQgb2YgdGhlbS4gWW91IGNhbiBzaXQgb24gYSBjb3VjaCB0byB0YWtlIGluIHRoZSB2aWV3LiBPciwgc2hvdWxkIHlvdSBmb3Igc29tZSByZWFzb24gYmUgaGVyZSBmb3IgbW9yZSB0aGFuIG9uZSB0aGluZywgdGhlcmUgaXMgYSBzdXNoaSByZXN0YXVyYW50IHRvIHRoZSByaWdodCBvZiB0aGUgZ2lybHMuClBsdXMgbGFyZ2VtZW50LCBhdSBkZWwgZCBzZXVsZSBjb25zaWRyYXRpb24gZCBwdXJlbWVudCBtYWdpcXVlLCBsIGVzdCByZWxhdCBwYXIgSGlwcG9jcmF0ZSwgRGlvc2NvcmlkZSBldCBHYWxpZW4sIGNlIHF1aSBlc3QgY2VydGFpbmVtZW50IGxhIHByZXV2ZSBxdWUgbCBhIHBvcyBsZSBwaWVkIHN1ciBsZSBzb2wgZXVyb3BlbiBiaWVuIGF2YW50IGxlIGRidXQgZGUgbm90cmUgcmUuIExlcyBHcmVjcyBhbmNpZW5zIGNvbXBvc3JlbnQgdW4gcmVtZGUgIGJhc2UgZCBkZSBmZW5vdWlsIGV0IGRlIHJhY2luZSBkZSB2ZXJ2ZWluZSBhZmluIGRlIGNvbWJhdHRyZSBsYSBzdHJpbGl0IGZtaW5pbmUuIApTb21lIHdvdWxkIGJlIHRheGFibGUsIHNvIHRoYXQgd291bGQgbGVhdmUgYWJvdXQgJDEsMzAwIG5ldCwgRWdhbiBzYXlzLiBUaGF0IHdvdWxkIG1ha2UgdGhlaXIgdG90YWwgYWZ0ZXIgdGF4IG1vbnRobHkgaW5jb21lICQxMCwwMDAsIHdoaWNoIGlzIHRoZWlyIHRhcmdldC4gClRoZXkgY29sb25pemVkIG1vc3QgdGhlIGdvZGRhbW4gd29ybGQgdGhyb3VnaCBnZW5vY2lkZSBhbmQgc2xhdmVyeS4gCiJJIHdhbnRlZCB0byBqdXN0IGhhdmUgaGltIGNsZWFyIGhpbXNlbGYuIApUcmFmZmljIERpcmVjdG9yIFNwYSByZWNlcHRpb25pc3RzIG1hbmFnZSBjdXN0b21lciBzZXJ2aWNlLCB0ZWNobmljaWFucycgc2NoZWR1bGVzIGFuZCB3aGF0IHRoZSBpbmR1c3RyeSBjYWxscyAidGhlIGZsb3cuIiBUaGUgZmxvdyBpcyB0aGUgcHJvY2VzcyBvZiB3aGF0IGhhcHBlbnMgdG8gY3VzdG9tZXJzIGZyb20gdGhlIG1vbWVudCB0aGV5IGVudGVyIHRoZSBzcGEgdW50aWwgdGhleSBsZWF2ZS4gUmVjZXB0aW9uaXN0cyBncmVldCBjbGllbnRzIHVwb24gYXJyaXZhbCwgY29uZHVjdCBzcGEgdG91cnMgYW5kIGZhY2lsaXRhdGUgcmVxdWVzdHMgZm9yIGluZm9ybWF0aW9uIGFuZCBhbWVuaXRpZXMuIFRoZXkgbWFuYWdlIHRpbWUgYXMgd2VsbCBhcyBwZW9wbGUuIApXaGVuIG5vdCByZWxheGluZyBhdCB0aGUgYmVhY2ggb3Igc2VlaW5nIHRvcCBhdHRyYWN0aW9ucyBsaWtlIEJpc2NheW5lIE5hdGlvbmFsIFBhcmssIExpdHRsZSBIYXZhbmEsIHRoZSBMaW5jb2xuIFJvYWQgc2hvcHBpbmcgZGlzdHJpY3QgYW5kIHRoZSBuZWFyYnkgRXZlcmdsYWRlcyBOYXRpb25hbCBQYXJrLCB2aXNpdG9ycyBjYW4gZGluZSBhdCBsZWFkaW5nIHNwb3RzIGxpa2UgTWFuZ28gVHJvcGljYWwgQ2FmIEdsb3JpYSBFc3RlZmFuIExhcmlvcyBvbiB0aGUgQmVhY2gsIEJhemFhciBieSBjZWxlYnJpdHkgY2hlZiBKb3MgQW5kciBSZWQgdGhlIFN0ZWFraG91c2UgYW5kIEdpYW5uaSBhdCB0aGUgVmlsbGEgYXQgdGhlIGV4dHJhb3JkaW5hcnkgVmlsbGEgQ2FzYSBDYXN1YXJpbmEgdGhlIGZvcm1lciByZXNpZGVuY2Ugb2YgZmFzaGlvbiBkZXNpZ25lciBHaWFubmkgVmVyc2FjZS4gCldvbGxvbmdvbmcgTG9yZCBNYXlvciBHb3Jkb24gQnJhZGJlcnkgd2lsbCBvcGVuIHRoZSBzcGVjaWFsIGV2ZW50LCB3aGljaCBtYXJrcyB0aGUgc3RhcnQgb2YgUmVzcG9uc2libGUgR2FtYmxpbmcgV2VlayAyMDE2Li4gCiJFdmVyeSBsZXZlbCBvZiB0aGUgbWFya2V0LCBmcm9tIHRoZSBibHVlc3Qgb2YgY29sbGFyIHRvIHRoZSB3aGl0ZXN0LCB3YXMgcmVhZHkgdG8gdHJhZGUgdXAuIApPbiBTdW5kYXksIE1heSAyMCwgdGhlIDE1dGggQW5udWFsIFNhbmRoaWxscyBQb2tlciBSdW4sIHNwb25zb3JlZCBieSBhbmQgYmVuZWZpdHRpbmcgQUJBVEUgb2YgQ29sb3JhZG8gYW5kIERpc3RyaWN0IE9uZSwgc3RhcnRlZCBhdCBSaXZlcnNpZGUgUGFyayB3aXRoIGNsb3VkeSB0byBwYXJ0bHkgY2xvdWR5IHNraWVzIGtlZXBpbmcgdGhlIGF0dGVuZGFuY2UgZG93biBhIGJpdCB0aGlzIHllYXIgd2l0aCAxNDAgcGFydGljaXBhbnRzLiBUaGlzIGFubnVhbCBldmVudCB0b29rIHJpZGVycyBhbmQgcGFzc2VuZ2VycyB0byBzZXZlcmFsIHBvcHVsYXIgYXJlYSBzdG9wcyBpbmNsdWRpbmcgdGhlIENsdWIgVGFwIFJvb20gYW5kIE5pY2sncyBQbGFjZSBhdCB0aGUgUXVlZW4gTG91bmdlIGluIGRvd250b3duIEZvcnQgTW9yZ2FuLCBub3J0aCBvbiBIaWdod2F5IDUyIHRvIEhpZ2h3YXkgMTQsIHRoZW4gdG8gSG9vdGVuYW5pZXMgYW5kIEhlbnJ5J3MgUHViIGFuZCBDbHViIGluIFN0ZXJsaW5nLCB0aGUgcmVzdCBzdG9wIGluIE90aXMgYW5kIERvbGl0dGxlJ3MgYW5kIHRoZSBDb3JuZXJzdG9uZSBDb2ZmZWUgU2hvcCBpbiBBa3Jvbi4gVGhlIGVuZCBwb2ludCwgd2l0aCBhIG1lYWwgcHJlcGFyZWQgYnkgTmV3IEZyZWVkb20gQ2h1cmNoLCB3YXMgZ3JhY2lvdXNseSBob3N0ZWQgYnkgSm9obiBhbmQgUGF1bGEgQnVjaGFuYW4gYXMgaXQgaGFzIGluIHRoZSBwYXN0IHNldmVyYWwgeWVhcnMuIEV2ZXJ5b25lIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHJ1biByZWNlaXZlZCBhIHBva2VyIGhhbmQsIHQgc2hpcnQsIGFuZCBhIG1lYWwgYXQgdGhlIGVuZCBhbG9uZyB3aXRoIGRvb3IgcHJpemVzIGRvbmF0ZWQgYnkgQUJBVEUgbWVtYmVycyBhbmQgbWVyY2hhbnRzIGZyb20gbm9ydGhlYXN0ZXJuIENvbG9yYWRvLgpZb3UgbXVzdCBhbHNvIGF2b2lkIGhhdmluZyB0aGUgcHJvZHVjdCBjb21lIGludG8gY29udGFjdCB3aXRoIHlvdXIgZXllcyBvciBtdWNvdXMgbWVtYnJhbmVzLi4gClRoZXJlIGFyZSBwcm9ncmFtcyBwZW9wbGUgY2xhaW0gdG8gYmUgYWJsZSB0byBjaGVhdCB3aXRoIHRoYXQgYXJlIHNhaWQgdG8gZmluZCBwYXR0ZXJucyB0byB0aGUgcmFuZG9tbmVzcywgYnV0IHRoZXkgb2Z0ZW4gZmFpbCBhbmQgbGlrZWx5IG9ubHkgd29yayBpZiBsdWNreS4gSXQgY2F1c2VzIHRoZXNlIHBsYXllcnMgdG8gcGxheSBtdWNoIGJldHRlciB3aGVuIHRoZXkgdXNlIHRoaXMgaW5mb3JtYXRpb24uIEJ1dCB5b3UgY2FuIHVzZSB0aGVzZSB0b29scyBhcyB3ZWxsIGFzIGltcHJvdmUgaW4gZ2VuZXJhbCBhdCBwb2tlci4gKEZ1bGwgQW5zd2VyKQpTb21lIHBsYXllcnMgaGF2ZSAxMCBvciBtb3JlIGFjY291bnRzLiAKVGhlcmUgaXMgb25lIG90aGVyIGRvY3VtZW50IHRoYXQgaXMgY3JpdGljYWwgaW4gdGhhdCBpdCBhbHNvIGltcGFjdHMgdGhlIGFubnVhbCB0YXggcmV0dXJuIG9mIHRoZSBzdHJhdGEgY29ycG9yYXRpb24uIFdpdGhpbiBlaWdodCB3ZWVrcyBhZnRlciB0aGUgZmlzY2FsIHllYXIgZW5kLCB0aGUgc3RyYXRhIGNvcnBvcmF0aW9uIG11c3QgcHJlcGFyZSBhIGZpbmFuY2lhbCBzdGF0ZW1lbnQgdXBkYXRlZCB0byB0aGUgZW5kIG9mIHRoZSBmaXNjYWwgeWVhci4gVGhpcyBzdGF0ZW1lbnQgaXMgY3JpdGljYWwgYmVjYXVzZSBpdCBhbHNvIHNldHMgdGhlIGNsb3NpbmcgYmFsYW5jZXMgb2YgeW91ciBhY2NvdW50cyBmb3IgZWFjaCBmaXNjYWwgeWVhciBhbmQgaXMgdml0YWwgd2hlbiBjb25kdWN0aW5nIGFuIGF1ZGl0IG9yIGZpbmFuY2lhbCByZXZpZXcuCkNhbiB5b3UgcGxheSBvbmxpbmUgcG9rZXIgb24gYW4gaVBhZApIZSBzYWlkIFNtb2xsZXR0IG1haW50YWlucyBoaXMgaW5ub2NlbmNlLiAKQSBtYW5hZ2VyIGlzIHVzdWFsbHkgYSBtYW5hZ2VyIGJlY2F1c2UgdGhleSBoYXZlIGFjcXVpcmVkIHRoZSBrbm93bGVkZ2UgYW5kIGFiaWxpdHkgdG8gbWFrZSB0b3VnaCBidXNpbmVzcyBkZWNpc2lvbnMgYW5kIHRoZXkgYXJlIGhlbGQgdG8gYSBoaWdoZXIgc3RhbmRhcmQgdGhhbiB0aGUgZW1wbG95ZWUgYXQgdGhlIHJlZ2lzdGVyLCBzbyBpZiB0aGV5IGZ1Y2sgdXAsIHlvdSBiZXR0ZXIgYmVsaWV2ZSB0aGF0IG1hbmFnZXIgaXMgZ29pbmcgdG8gZ2V0IG1vcmUgdGhhbiBhIGZpcm0gdGFsa2luZyB0byBhYm91dCBpdC4gCkkgdGhpbmsgdGhhdCB0aG9zZSB0aGluZ3MgYXJlIGltcG9ydGFudDsgaG93ZXZlciwgc28gbWFueSBwZW9wbGUgZ3JvdyB1cCBub3Qga25vd2luZyBiYXNpYyBhbmQgc2ltcGxlIHRoaW5ncyB0aGF0IHdvdWxkIHNhdmUgdGhlbSB0aW1lIGFuZCBtb25leS4gSSBtZWFuLCBJIG9ubHkgMzAgeWVhcnMgb2xkLCBidXQgSSBjb21lIGZyb20gYSBsb25nIGxpbmUgb2YgY3JlYXRpdmUgd29tZW4gYW5kIG1lbiB3aG8gY29tYmluZWQgYm90aCBpbm5vdmF0aW9uIGxlYXJuZWQgc2tpbGxzIHRvIHNhdmUgdGltZSBhbmQgbW9uZXkuIEkgbGVhcm5lZCBzb21lIHNpbXBsZSBzdGl0Y2hlcyBhbmQgY29va2luZyBza2lsbHMgZnJvbSBteSBtYXRyaWFyY2hzLCB0aGVuIEkgc3RhcmVkIGRvaW5nIG15IG93biByZXNlYXJjaC4gClRoZSBOYXRpdmUgZGlyZWN0IHRvIGNvbnN1bWVyIGRlb2RvcmFudCBicmFuZCBQIGFjcXVpcmVkIGxhc3QgeWVhciByZWNlbnRseSBtb3ZlZCBpbnRvIFRhcmdldCwgbXVjaCBsaWtlIFAgcml2YWwgSGFycnkncyBoYXMgbW92ZWQgaW50byBUYXJnZXQgYW5kIFdhbG1hcnQuCllvdSBjb3VsZG4gYm90aGVyIHlvdXIgYXNzIGlmIGl0IGxlYXZlcyB5b3VyIGNvdW50cnkgYnV0IHlvdSBoYXZlIHRoZSBuZXJ2ZSB0byBleHBlY3Qgb3RoZXIgcGVvcGxlIGluIHRoZSB3b3JsZCBhZG9wdCB0byB5b3VyIHZhbHVlcyBhbmQgYmVsaWVmcy4uIApIb3dldmVyLCBpbnZlc3RpbmcgaW4gUG9rZXIgbm93IGZyb20gc2NyYXRjaCB3b3VsZCBiZSBhIGJpZyByaXNrIGluIG15IG9waW5pb24uIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCk5hdHVyZSBlbmdpbmVlcnMsIHdpdGhpbiBhbGwgc3BlY2llcywgYSBzZXQgb2YgZGVmZW5zZXMgYWdhaW5zdCBwcmVkYXRpb24sIHRob3VnaCBub3QgYWxsIGFyZSBhcyBvYnZpb3VzIGFzIHRoZSB0aG9ybnMgb24gYSByb3NlIG9yIHRoZSBob3JucyBvbiBhIHJoaW5vY2Vyb3MuClNwZXo6IHRoYXQgc2FpZCwgdGhpcyBpcyBzdXBlciBpbnRlcmVzdGluZyBzY2llbmNlLCB0aGFua3MgT1AuCkEgcXVpY2sgY2FsY3VsYXRpb24gc2F5cyBJIGhhdmUgYSAxNiUgY2hhbmNlIHRvIGhpdCBteSBzdHJhaWdodCBpZiBJIGdvIHRvIHRoZSB0dXJuLCBhbmQgYSAzMiUgY2hhbmNlIHRvIHdpbiBpZiBJIGdvIHRvIHRoZSByaXZlci4gRGVwZW5kaW5nIG9uIHdoYXQgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcsIGFuZCB3aGF0IHRoZXkgaGF2ZSBoYXMgYWxyZWFkeSBoaXQsIHlvdXIgb2RkcyB3aWxsIGNoYW5nZS4gSW4gdGhlIGFib3ZlIGV4YW1wbGUgaWYgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcgcG9ja2V0IEFBLCBhbmQgaGFzIGEgbWFkZSBzZXQsIHlvdSBzdGlsbCBoYXZlIGEgMjclIGNoYW5jZSB0byB3aW4gaWYgeW91IGdvIHRvIHRoZSByaXZlci4gCkJ1ZCBMaWdodCBpcyBub3cgdHJ5aW5nIHRvIHVwIHRoZSBhbnRlIGJ5IHByaW50aW5nIGEgbW9yZSBjb21wcmVoZW5zaXZlIGJsYWNrIGFuZCB3aGl0ZSAiU2VydmluZyBGYWN0cyIgbGFiZWwgdGhhdCBpbmNsdWRlcyBhIGJpdCBtb3JlIGluZm9ybWF0aW9uIGFuZCBtb3JlIGNsb3NlbHkgcmVzZW1ibGVzIHRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIG1hbmRhdGVkIGxhYmVscyBmb3IgcGFja2FnZWQgZm9vZHMuIFRoZSBleHRyYSBpbmZvcm1hdGlvbiBpbmNsdWRlcyBkZXRhaWxzIGxpa2UgdHJhbnMgZmF0IGFuZCBhZGRlZCBzdWdhcnMsIGFzIHdlbGwgYXMgaW5ncmVkaWVudHMsIHdoaWNoIGZvciBCdWQgTGlnaHQgYXJlIHdhdGVyLCBiYXJsZXksIHJpY2UgYW5kIGhvcHMuIEJ1ZCBMaWdodCB3aWxsIHByaW50IHRoZSBpbmZvcm1hdGlvbiBvbiBzZWNvbmRhcnkgcGFja2FnaW5nLCBsaWtlIHRoZSBjYXJkYm9hcmQgYm94ZXMgdGhhdCBob3VzZSAxMiBwYWNrcywgYnV0IG5vdCBvbiBpbmRpdmlkdWFsIGNhbnMgYW5kIGJvdHRsZXMuLiAKQW5kIHlvdSBtaWdodCBiZSB3b25kZXJpbmcgaG93IGEgdGVhY2hlciBjb3VsZCBldmVyIGNyb3NzIGEgbGluZSBsaWtlIHRoYXQuIApBYmRvbWluYWwgZGlzY29tZm9ydCBhbmQgYmxvYXRpbmcpIGhhdmUgd2hlYXQgKGFzIHdlbGwgYXMgb3RoZXIgZm9vZHMgaW5jbHVkaW5nIGNvdydzIG1pbGspIHJlbW92ZWQgZnJvbSB0aGUgZGlldCBbMl0uIAoxMjcsIHBwLiAKSW4gMjAwNywgdGhlIEZCSSBoYWQgcHJlcGFyZWQgYSA1MyBwYWdlIGZlZGVyYWwgaW5kaWN0bWVudCBjaGFyZ2luZyBFcHN0ZWluIHdpdGggc2V4IGNyaW1lcyB0aGF0IGNvdWxkIGhhdmUgcHV0IGhpbSBpbiBmZWRlcmFsIHByaXNvbiBmb3IgbGlmZS4gQXR0b3JuZXkgQWxleGFuZGVyIEFjb3N0YSBzaWduZWQgb2ZmIG9uIGEgbm9uIHByb3NlY3V0aW9uIGFncmVlbWVudCwgd2hpY2ggd2FzIG5lZ290aWF0ZWQsIHNpZ25lZCBhbmQgc2VhbGVkIHNvIHRoYXQgbm8gb25lIHdvdWxkIGtub3cgdGhlIGZ1bGwgc2NvcGUgb2YgRXBzdGVpbidzIGNyaW1lcy4gCiJBIE1hZGVhIEZhbWlseSBGdW5lcmFsIiB0b29rIHNlY29uZCBwbGFjZSBhdCB0aGUgZG9tZXN0aWMgYm94IG9mZmljZSB3aXRoIGFuIGVzdGltYXRlZCAkMjcgbWlsbGlvbiwgYSB0aGlyZCBiZXN0IGZvciB0aGUgMTUgeWVhciBvbGQgZnJhbmNoaXNlLiBUaGUgIk1hZGVhIiBmaWxtcyBoYXZlIG5ldmVyIGJlZW4gYWxsIHRoYXQgcG9wdWxhciB3aXRoIGNyaXRpY3MgICB0aGlzIG9uZSBzcGxhdHRlcmVkIG91dCB3aXRoIGEgMjQgcGVyY2VudCBvbiBSb3R0ZW4gVG9tYXRvZXMgICBidXQgYXVkaWVuY2VzIGhhdmUgbmV2ZXIgc2VlbWVkIHRvIGNhcmUuIApJdCBub3QgZGVhZCwgYW5kIHRob3NlIG51bWJlcnMgd291bGQgYmUgZmluZSBmb3IgYSBzbWFsbCBpbmRpZSBnYW1lIG9yIG90aGVyd2lzZSBuaWNoZSBnZW5yZSwgYnV0IGZyb20gYSBtYWpvciwgcmVwdXRhYmxlIGRldmVsb3BlciBsaWtlIFZhbHZlLCBpdCBwcmV0dHkgZW1iYXJyYXNzaW5nLiBBdXRvIENoZXNzLCBvbiB0aGUgb3RoZXIgaGFuZCwgaXMgc3VjaCBhIG1hc3NpdmUgb3V0IG9mIG5vd2hlcmUgc3VjY2VzcyB0aGF0IGlmIHdlIHNlcGFyYXRlZCBpdCBmcm9tIERvdGEgMiwgaXQgd291bGQgYmUgdGhlIDR0aCBtb3N0IHBsYXllZCBnYW1lIG9uIFN0ZWFtLgpJbiAyMDE3LCBhbiBMTkcgcG93ZXIgcGxhbnQgaW4gQnVuZGFuZywgR3llb25nZ2ksIGVtaXR0ZWQgNDYgZ3JhbXMgb2YgZHVzdCBwZXIgbWVnYXdhdHQgaG91ciAgIGFsbW9zdCB0aHJlZSB0aW1lcyB0aGUgMTYgZ3JhbXMgZnJvbSBTYW1jaGVvayBHcmVlbiBQb3dlciwgS29yZWEncyBncmVlbmVzdCBjb2FsIHBvd2VyIHBsYW50IGluIEdhbmd3b24uQSBiaWcgZmFjZSBwYWxtIGFuZCBhIG1vYW4uIApUaGVzZSBkYXlzLCBwb2tlciBpcyBiZWNvbWluZyBtYWluc3RyZWFtLiAKSSBoYWQgb25lIHRhYmxlIG9uZSBtb3JuaW5nIHRoYXQgZmVsdCBsaWtlIHRoZSBiZXN0IEkgaGFkIGJlZW4gYXQgaW4gb3ZlciAxMCB5ZWFycy4gClNldmVyYWwgZ3JvdXBzIHNwZW50IHRoZSBkYXkgcmFsbHlpbmcgb24gdGhlIHN0ZXBzIG9mIHRoZSBTdXByZW1lIENvdXJ0LCBnaXZpbmcgdGhlIGJ1aWxkaW5nJ3Mgc3RvbnkgZmFjYWRlIGEgY2Fybml2YWwgYXRtb3NwaGVyZSBhcyBtb3JlIHRoYW4gMTAwIHBlb3BsZSBnYXRoZXJlZCB1bmRlciBzdW5ueSBza2llcyB0byBleHByZXNzIHRoZWlyIG9waW5pb25zLgpDYXN0bGViYXIgVG93biBDb3VuY2lsIGRlY2lkZWQgdG8gYXBwbHkgZm9yIHRoZSBpbmp1bmN0aW9uIHNpbmNlIGl0IGNvbnNpZGVyZWQgdGhhdCBhIHdhcyBub3QgYSByZXRhaWwgZGV2ZWxvcG1lbnQuIApUaGF0IHRoZSBiZXN0IHN5c3RlbSwgYmVjYXVzZSB0aGUgZGVlcGVyIHlvdSBnbywgdGhlIGJldHRlciBwbGF5ZXJzIHdpbGwgc3RpbGwgYmUgYWxpdmUsIGJlY2F1c2UgdGhleSB3b24gaGF2ZSBiZWVuIGVsaW1pbmF0ZWQgYnkgYSBwbGF5ZXIgb2Ygc2ltaWxhciBza2lsbC4uIApUaGUgZGVhbCBTaGUgYXNrZWQgZm9yICQxMjUsMDAwIGZvciBhIDEwJSBzdGFrZSwgdmFsdWluZyB0aGUgY29tcGFueSBhdCAkMS4yNSBtaWxsaW9uLiAKV2hlbiBJIHdhcyBzdHVkeWluZyBzcGlyaXR1YWwgaGVhbGluZywgSSB3YXMgYWxzbyB0YXVnaHQgdGhhdCB3ZSBoYXZlIGEgcGVyY2VudGFnZSBvZiBuZWdhdGl2ZSBhbmQgYSBwZXJjZW50YWdlIG9mIHBvc2l0aXZlIGxlc3NvbnMgaW4gYSByZWxhdGlvbnNoaXAgd2l0aCBzb21lb25lIChhbmQgc29tZSBoYXZlIG9ubHkgbmVnYXRpdmUgbGVzc29ucykuIFRoZSBwb3NpdGl2ZSBleHBlcmllbmNlcyBhcmUgcmVmbGVjdGVkIGluIHRoZSB0aWUgb2YgdW5jb25kaXRpb25hbCBsb3ZlIGFuZCB0aGUgbmVnYXRpdmUgbGVzc29ucyBmb3JtIGFuIGVuZXJnZXRpYyBzdHJ1Y3R1cmUgdG9vLiAKSSBwcmV0ZW5kZWQgdG8gYmUgYSB2ZWxvY2lyYXB0b3IgdW50aWwgSSB3YXMgMTIuIEkgYSBoYXBwaWx5IG1hcnJpZWQsIGZ1bmN0aW9uaW5nIGFkdWx0IHdobyB3b3JrcyBhdCBhIGxhdyBmaXJtLgpCdXQgYXMgc2xvdCBtYWNoaW5lIGNhc2lub3MgZ3JvdyBhbmQgYWRkIHRhYmxlIGdhbWVzIHN1Y2ggYXMgcG9rZXIgYW5kIGNyYXBzLCBhIHNtYWxsZXIgcGVyY2VudGFnZSBvZiB0aGVpciBwcm9maXRzIGFyZSBnb2luZyB0byB0aGUgZWR1Y2F0aW9uIGZ1bmQsIGZyb20gNDguNSBwZXJjZW50IGluIDIwMTEgdG8gMzcuMyBwZXJjZW50IGluIDIwMTUsIGFjY29yZGluZyB0byB0aGUgY29tbWlzc2lvbiBkYXRhLgpBbmQgdG8gbWFrZSBjb21tZXJjaWFscyBmb3IgYSBob3NwaXRhbC4uIApIb3VzdG9uIGlzIGFsc28gY2VudHJhbGx5IGxvY2F0ZWQgd2l0aCBhIG1ham9yIGFpcnBvcnQgZm9yIGVhc3kgYWNjZXNzIHRvIG90aGVyIHBhcnRzIG9mIHRoZSBjb3VudHJ5LCBWZWdhcyBmbGlnaHRzIGFyZSAkMTUwIG9yIGxlc3Mgcm91bmQgdHJpcCwgYW5kIE1leGljbyBDaXR5IGlzICQxNTAgMjAwIHJvdW5kIHRyaXAgZm9yIHRyYXZlbGluZyBmb3IgV0NPT1AsIFNDT09QLCBldGMuIApJIHRoaW5rIEkgd2FzIG1vc3Qgc3RyZXNzZWQgdGhvc2UgZmlyc3QgZmV3IHdlZWtzIGFmdGVyIGJyaW5naW5nIGhlciBob21lIGZyb20gdGhlIE5JQ1UuIApUaGUgc2VhdCBpcyBjdXJyZW50bHkgaGVsZCBieSBSb21haW5lIExlZSwgdyBobyBjaG9zZSBub3QgdG8gcnVuIGZvciByZSBlbGVjdGlvbi5JbmN1bWJlbnQgRGlzdHJpY3QgNCBTdXBlcnZpc29yIEhhcmxhbiBIYW5zZW4sIGEgUmVwdWJsaWNhbiwgd2lsbCBhZ2FpbiBieSBjaGFsbGVuZ2VkIGJ5IFN1c2FuIEsuIFNrb3cuIHdobyB3YXMgbm9taW5hdGVkIGJ5IHBldGl0aW9uIHRvIGhhdmUgaGVyIG5hbWUgb24gdGhlIGJhbGxvdC4gU2tvdyBsb3N0IHRvZ3JhbnQgZnVuZGluZy4gVGhleSBhcmUgcmVxdWVzdGluZyAkMihYKSwoWFgpIGluIEdyZWF0IFBsYWNlcyBmdW5kaW5nLCB3aXRoICQ4KFgpLChYWCkgZnVuZGVkIHRocm91Z2ggbG9jYWwgb3B0aW9uIHNhbGVzIHRheCByZXZlbnVlcyxIdW1ib2xkdCBDb3VudHkgTWVtb3JpYWwgSG9zcGl0YWwgcGxhbnMgYSAkMSBtaWxsaW9uIGFkZGl0aW9uIGFuZCByZW1vZGVsaW5nIHByb2plY3Qgb2YgdGhlIGhvc3BpdGFsJ3Mgc3VyZ2ljYWwgc3VpdGUuIApQb3N0IHlvdXIgcXVlc3Rpb24gICBzdHVwaWQgb3Igb3RoZXJ3aXNlICAgaGVyZSB0byBnZXQgYW4gYW5zd2VyLiBBbnlvbmUgY2FuIHBvc3QgYSBxdWVzdGlvbiBhbmQgdGhlIGNvbW11bml0eSBhcyBhIHdob2xlIGlzIGludml0ZWQgYW5kIGVuY291cmFnZWQgdG8gcHJvdmlkZSBhbiBhbnN3ZXIuIApCZSBvcGVuIGFuZCBob25lc3Qgd2l0aCB5b3VyIHdpZmUuIElmIHNoZSBpcyB3aWxsaW5nLCBzZWVrIG1hcnJpYWdlIGNvdW5zZWxpbmcuIEl0IGltcG9ydGFudCB0byBuaXAgdGhlc2UgcHJvYmxlbXMgaW4gdGhlIGJ1ZC4gQW5kLCBubywgeW91IGRvIG5vdCBsZWF2ZSB5b3VyIGhvbWUgd2hlbiB5b3VyIGluIGxhd3MgdmlzaXQgQW1lcmljYS4gVGhleSBzdGF5IGluIGEgaG90ZWwsIHdoaWNoIHRoZXkgcGF5IGZvciB0aGVtc2VsdmVzLiBLZWVwIHlvdXIgd2FsbGV0IGluIHlvdXIgYmFjayBwb2NrZXQuIFRoZXkgZGlkbiBhcHByZWNpYXRlIGFueSB0aGluZyB5b3UgZGlkIGZvciB0aGVtIG9yIHBhaWQgZm9yLiBZb3VyIERXIG5lZWQgdG8gcHV0IGhlciBwYXJlbnRzIG9uIGFuIGluZm9ybWF0aW9uIGRpZXQuIFNoZSBkb2VzbiB0ZWxsIGFueXRoaW5nIHRoYXQgZG9lc24gY29uY2VybiB0aGVtLiBHb29kIGx1Y2shCkZldyBwZW9wbGUgSSBrbm93IG9mIHRoaW5rIEkgY29ja3ksIGJ1dCBpdCBzaW1wbHkgdGhhdCB3aGVuIEkgd29ya2luZyBvdXQsIG9yIHBsYXlpbmcgYSB2aWRlb2dhbWUsIG9yIHJ1bm5pbmcsIG9yIGFueXRoaW5nIGVsc2UgSSBkbywgSSB0aGluayBvZiBob3cgSSBnb3QgbXlzZWxmIHRoZXJlLCB3aXRob3V0IHNvbWVvbmUgaGVscCBvciBlbmNvdXJhZ2VtZW50LiBJIHdhcyB0aGUgc2hvdWxkZXIgdG8gbGVhbiBvbiwgc29tZWJvZHkgdG8gbGlzdGVuLiAKVGhlIHJhcmUgZ29hbGllIHdobyBkaWRuJ3QgaGVzaXRhdGUgdG8gZHJvcCBoaXMgZ2xvdmVzLCBFbWVyeSB3YXMgaW52b2x2ZWQgaW4gbXVsdGlwbGUgYWx0ZXJjYXRpb25zIG9uIHRoZSBpY2UsIGluY2x1ZGluZyBvbmUgaW4gMjAwNyBpbiB3aGljaCBoZSBzY3VmZmxlZCB3aXRoIEJ1ZmZhbG8gU2FicmVzIGdvYWxpZSBNYXJ0aW4gQmlyb24uCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gS1EsIHBhaXJzLCBzdWl0ZWQgY29ubmVjdG9ycykuIApPdmVydmlldyBmb3IgS2FuZHVsClNhdyBoaW0gYSBjb3VwbGUgc3ByaW5nIHRyYWluaW5ncyBsYXRlciBhbmQgaGUgc3RvcHBlZCBmb3IgYXV0b2dyYXBocyBvbiBiYWNrZmllbGRzLCBhIHJhcml0eS4gR290IGhpcy4gClRoZXJlIHdpbGwgYmUgb3RoZXIgaGlrZXJzLiBUaGUgZmFydGhlciB5b3UgZ28sIHRoZSBtb3JlIHlvdSB3aWxsIHNlZS4gSSBzdGFydGVkIG9uIE1heSAyOHRoIGFuZCB3ZW50IHByZXR0eSBmYXN0LiBUaGUgZmlyc3QgZmV3IGRheXMgdGhlcmUgd2VyZW4gdGhhdCBtYW55LCBtYXliZSA1IDEwIHBlciBkYXkgYW5kIEkgd2FzIGRvaW5nIHByZXR0eSBiaWcgbWlsZXMgdG8gY2F0Y2ggdGhhdCBtYW55IHBlb3BsZS4gQnkgdGhlIHRpbWUgSSBnb3QgdG8gS00gSSBmZWx0IGxpa2UgSSBoYWQgbW9zdGx5IGNhdWdodCB0aGUgbWFpbiBidWxrIG9mIHBlb3BsZS4KQWZ0ZXIgYWxsLCB5b3UgY2FuIHdpbiBhdCB0aGUgY2FzaW5vcyB0b28sIGF0IGxlYXN0IGZvciBhIHdoaWxlLiBCdXQgZXZlbnR1YWxseSwgYSBzeXN0ZW0gdGhhdCBpcyBtZWFudCB0byBleHRyYWN0IHdlYWx0aCBmcm9tIG1vc3Qgb2YgdXMgdG8gcHJvZHVjZSBodWdlIHByb2ZpdHMgZm9yIGEgaGFuZGZ1bCAoY2FzaW5vcywgY29uc3VtZXIgY2FwaXRhbGlzbSkgd2lsbCBub3QgYmUgYWJsZSB0byBzdXN0YWluIHVzLiAKVW5kZXIgdGhlc2UgY2lyY3Vtc3RhbmNlcywgeW91IG1pZ2h0IGNvbmNsdWRlIHRoYXQgaXQgd2lsbCBiZSBhIGdvb2QgaWRlYSB0byBoYXZlIHBsYXN0aWMgcG9rZXIgcGxheWluZyBjYXJkcyB3aXRoIGZsYWdzIG9yIGZpcmV3b3JrcyBvbiB0aGUgYmFjay4uIApUaGUgcmVzdWx0IGZvbGxvd2VkIGEgdHJhZGUgZGVmaWNpdCBvZiAkMi4wIGJpbGxpb24gaW4gTm92ZW1iZXIuCkFuZCBzZWUgd2hhdCB0aGV5IGFkdmlzZSB5b3UgdG8gZG8uIE5vdywgb2YgY291cnNlIHlvdSBjYW4gbWVldCBhIGRpc2hvbmVzdCBtYW5hZ2VyIHdobyB3aWxsIGxldCB5b3UgZG8gd2F5IG1vcmUgd2l0aG91dCB1bHRpbWF0ZWx5IHJld2FyZGluZyB5b3UgZm9yIGl0LCBidXQgSSBiZWxpZXZlIHRoYXQgbWFueSBtYW5hZ2VycyB3aWxsIHJlY29nbmlzZSB5b3VyIGRyaXZlIGFuZCB3aWxsIGF0IHRoZSB2ZXJ5IGxlYXN0IHdhbnQgdG8gc2VlIHdoYXQgeW91IGNhcGFibGUgb2YuSW4gTmVkZXJsYW5kIG1hZyBqZSB2cmlqIHdlaW5pZyBnZWxkIGlubGVnZ2VuIGluIGVlbiBwZW5zaW9lbnBvdGplLiBTdGVsIGRhdCBqZSA1MC4wMDAgZXVybyBwZXIgamFhciB2ZXJkaWVudCAoYnJ1dG8pLCBkYW4gbWFnIGplIGluIHRvdGFhbCA1MDAwIGV1cm8gYmVsYXN0aW5ndnJpZW5kZWxpamsgb3B6aWogbGVnZ2VuIHZvb3IgamUgcGVuc2lvZW4uKE5CIFZlZWwgbWVuc2VuIG1vZXRlbiBhbCBpbmxlZ2dlbiB2aWEgaHVuIHdlcmsgICB6b2FscyBqaWogYmlqdm9vcmJlZWxkIHdhYXJzY2hpam5saWprICJnZWR3b25nZW4iIGlubGVndCBiaWogQmVGcmFuayAgIGRhdCBiZWRyYWcgZ2FhdCBhbCBhZiB2YW4gaGV0IHRvdGFhbCB3YXQgamUgYmVsYXN0aW5ndnJpZW5kZWxpamsgaW4ga2FuIGxlZ2dlbikuTm91LCBhbHMgamUgdmVydnJvZWdkIG1ldCBwZW5zaW9lbiB3aWx0LCBkYW4gd2lsIGplIG1lZXN0YWwgcGVyIGphYXIgd2VsIHZlZWwgbWVlciBvcHppaiBsZWdnZW4gZGFuIDUwMDAgZXVybyB2YW4gNTAuMDAwIGV1cm8gYnJ1dG8gaW5rb21lbi5aZWxmIGxlZyBpayBkYWFyb20gbWF4aW1hYWwgaW4gaW4gbWlqbiBwZW5zaW9lbnBvdGplcyAob3AgaGV0IHdlcmssIGVuIG9tZGF0IGlrIGRhYXJuYSBub2cgd2F0IGphYXJydWltdGUgb3ZlcmhvdWQsIG9vayBub2cgYmlqIGVlbiBwZW5zaW9lbmJlbGVnZ2luZ3NyZWtlbmluZyBkaWUgaWsgemVsZiBnZW9wZW5kIGhlYikuIApTcG9ydHMgY2x1YiBwcmVzaWRlbnQgUm9iIFdpbGxpYW1zIGNvdWxkbid0IGJlIGNvbnRhY3RlZCBmb3IgY29tbWVudCB5ZXN0ZXJkYXkuCkRpZSBHb3JpbGxhcyBsZWJlbiBpbiBGYW1pbGllbi4gCkkga25ldyBhIGd1eSBsaWtlIHlvdS4gSSBjb3VsZG4ndCB1bmRlcnN0YW5kIGhpbSBhdCBhbGwgYW5kIHRvbGQgaGltIHRvIGJ1cm4gZXZlcnl0aGluZyBhbmQgZ2V0IGEgbmV3IGdpcmxmcmllbmQgYW5kIGFsbCB0aGUgdXN1YWwgYWR2aWNlLiBXaWZlIGNoZWF0ZWQgb24gaGltIGFuZCBsZWZ0IGhpbSB0byB0YWtlIGNhcmUgb2YgaGlzIHR3byBraWRzIGFsb25lLiAKTWFrZSBhbiBlZmZvcnQgdG8gc3BlbmQgdGltZSB3aXRoIHlvdXIgZnJpZW5kLiBQZW9wbGUgd2l0aCBsb3cgc2VsZiBlc3RlZW0gb2Z0ZW4gbGFjayB0aGUgaW5pdGlhdGl2ZSB0byBtYWtlIHBsYW5zIHdpdGggc29tZW9uZS4gCkkga25vdyBzb21lIGNvbXBhbmllcyBsaWtlIE5pa2UgbGV0IHlvdSBkbyBjdXN0b20gc25lYWtlcnMgYnV0IHRoYXQgYSBwYXJ0IG9mIHRoZWlyIGJ1c2luZXNzIG92ZXIgdGhlIGxvbmcgaGF1bC4gCk9LLCBrZWVwIHRoaW5raW5nIHRoYXQsIGJ1dCBJIGFsd2F5cyBmb3VuZCBhIHdheSB0byBvdmVyY29tZSBzdHVmZi4gCkFuIGVuZ2luZSBmbHVzaCAoaW4gcmVnYXJkIHRvIGFuIG92ZXJkdWUgb2lsIGNoYW5nZSkgaXMgYW4gYWRkaXRpdmUgdGhhdCBpcyBwdXQgaW50byB0aGUgY3JhbmtjYXNlLiBVc3VhbGx5IHRoZXNlIHRha2UgMyA1IG1pbnV0ZXMgb2YgdGhlIHZlaGljbGUgaWRsaW5nIHRvIGRpc3NvbHZlIGd1bS9zbHVkZ2UvdmFybmlzaCBkZXBvc2l0cyB0aGF0IGJ1aWxkIHVwIHdoZW4geW91IGdvIG92ZXIgdGhlIHJlY29tbWVuZGVkIGludGVydmFsLiBTb21lIHJlY29tbWVuZCB1c2luZyB0cmFuc21pc3Npb24gb2lsIGluc3RlYWQgb2YgYSBicmFuZCBvZiAnZW5naW5lIGZsdXNoJy4gClJlaWtpIGlzIG5vdCByZWxhdGVkIGluIGFueXdheSBzaGFwZSBvciBmb3JtIHRvIGFueSByZWxpZ2lvbiEgSSBjYW5ub3Qgc3RyZXNzIHRoaXMgZW5vdWdoISBJdCBpcyBub3QgYSByZWxpZ2lvbi4gSXQgaXMgbm90IGFib3V0IEdvZCBvciBiZWxpZWYsIG9yIGFueXRoaW5nIGxpa2UgdGhhdC4gCk1vZGVyYXRpb24gaW4gdGhpcyBncm91cCBpcyBhbHdheXMgYmlhc2VkIEZPUiB0aGUgT1AgKHRoZSBwZXJzb24gd2hvIG1hZGUgdGhlIHBvc3QgICBub3QgdGhlIGNvbW1lbnRlcnMpLiAKQnV0IHdlIG5lZWQgdG8gYmUgbW9yZSBjbGluaWNhbCBvbiBvdXIgY2hhbmNlcy4iLiAKSXQgZnVubnkgdGhhdCBoZSB3YWxrZWQgYWJvdXQgcGlyYXRlcyBldmVuIHRob3VnaCB0aGVyZSBhcmUgYSB0b24gb2Ygc3RyZWFtZXJzIHdobyBoYXZlIHNob3duIHVzaW5nIGNyYWNrZWQgZ2FtZXMsIHN0b2xlbiBtb3ZpZXMsIGRpcmVjdGx5IHN0ZWFsaW5nIG90aGVyIHBlb3BsZSBjb250ZW50IGJ5IHdhdGNoaW5nIHRoZWlyIHZpZGVvcyBpbiBmdWxsIHdpdGhvdXQgbXVjaCBjb21tZW50cy9lZHVjYXRpb24gb3IgYW55IEZhaXIgVXNlIGNhc2UuIApUaGUgcGFkZGluZyBhbmQgZmVsdCBhcmUgdGFwZWQsIHRhY2tlZCBvciBzdGFwbGVkIHVuZGVybmVhdGggdGhlIHRhYmxlIHRvcC4gVGhlIHBhZGRpbmcgaXMgc3VwcG9zZWQgdG8gbWFrZSBpdCBlYXNpZXIgdG8gbGlmdCB0aGUgY2FyZHMgZnJvbSB0aGUgdGFibGUgd2hpbGUgdGhlIHBsYXN0aWMgZ3VhcmRzIHRoZSB0YWJsZSBmcm9tIHNwaWxscy4gWW91IGNhbiBhbHNvIG1ha2UgYSBwb3J0YWJsZSBwb2tlciB0YWJsZSB0b3AuIEp1c3QgYnkgYSBzaGVldCBvZiBwbHl3b29kIHdpdGggdGhlIGZvbGxvd2luZyBkaW1lbnNpb25zOiBmb3VyIGZlZXQgYnkgZWlnaHQgZmVldC4gU3RhcGxlIHRoZSBwYWRkaW5nIGFuZCB0aGUgZmVsdCBhbmQgeW91J3JlIHJlYWR5IHRvIGJldCB5b3VyIEZyYW5rbGlucyBhd2F5LiBUaGUgcG9ydGFibGUgcG9rZXIgdGFibGUgaXMgZWFzeSB0byBtYWludGFpbiBzaW5jZSB5b3UgY2FuIGtlZXAgaW4gdGhlIGJhc2VtZW50IG9yIGluIHRoZSBnYXJhZ2UuIEp1c3QgbWFrZSBzdXJlIHRvIGd1YXJkIGl0IGFnYWluc3QgbW9pc3R1cmUgYW5kIGhlYXQgYXMgdGhlIHdvb2QgbWF5IHdhcnAuIFdoZW4geW91IGFyZSByZWFkeSB0byBwbGF5LCBqdXN0IHBsYWNlIHRoZSBwb3J0YWJsZSBwb2tlciB0YWJsZSB0b3Agb250byB0aGUgZGluaW5nIHRhYmxlIGFuZCBpdCdzIHRpbWUgdG8gcGxheS4KWnVuYWhtZSAocmljaHR1bmcpID0gKGRpcmVjdGlvbiB3aXRoKSBpbmNyZWFzZXMKRGlkIHlvdSBoYXBwZW4gdG8gY2F0Y2ggdGhlIGZyb250IHBhZ2UgdGhyZWFkIGF3aGlsZSBiYWNrLCBhYm91dCBob3cgYW50aSBsaXR0ZXJpbmcgY2FtcGFpZ25zIHdlcmUgY3JlYXRlZCB0byBzaGlmdCBibGFtZSBmcm9tIHdhc3RlZnVsIGluZHVzdHJpZXMgb250byBjb25zdW1lcnMsIHNvIHRoYXQgdGhvc2UgaW5kdXN0cmllcyB3b3VsZG4gYmUgcmVndWxhdGVkPyBJdCByZWFsbHkgY2hhbmdlZCBteSB0aGlua2luZyBvbiB0aGlzLiBJdCBwb2ludGxlc3MgdG8gYXNrIHRlbnMgb2YgbWlsbGlvbnMgb2YgcGVvcGxlIHRvIGNoYW5nZSB0aGVpciBiZWhhdmlvciB3aGVuIHlvdSBjb3VsZCBqdXN0IHB1dCBjb21wbGV0ZWx5IHJlYXNvbmFibGUsIGNvbW1vbiBzZW5zZSwgYmVuZWZpY2lhbCB0byBhbGwgcmVndWxhdGlvbnMgb24gYSBoYW5kZnVsIG9mIGluZHVzdHJ5IHByYWN0aWNlcyBhbmQgc29sdmUgdGhlIHByb2JsZW0gYXQgaXRzIHJvb3QuIFRoZSBzYW1lIHRoaW5nIGNhbiBiZSBhcHBsaWVkIHRvIG91ciBwb2xpdGljYWwgc2l0dWF0aW9uOyBldmVuIGlmIFJlcHVibGljYW4gdm90ZXJzICJzaG91bGQiIGJlIGJsYW1lZCBiYXNlZCBvbiBzb21lIGFic3RyYWN0IGFyZ3VtZW50LCBpdCBjb21wbGV0ZWx5IGltcHJhY3RpY2FsIHRvIGRvIHNvLiAKUGVyaGFwcyBpdCBhbGwgYmVnYW4gd2l0aCBDbGludG9uPyBUaGF0IHdoZW4gdGhlIExld2luc2t5IHNjYW5kYWwgb2NjdXJyZWQgYW5kIG1hbnkgb2YgdGhlIHNhbWUgUmVwdWJsaWNhbnMgd2hvIGFyZSBiZWluZyBjYXVnaHQgdG9vayBhIHN0YW5kIG9uIHRoZSBzYW5jdGl0eSBvZiBtYXJyaWFnZSwgYnV0IGl0IHdhcyBhbHNvLCBqdXN0IGEgZmV3IG1vbnRocyBiZWZvcmUgdGhlIExld2luc2t5IHNjYW5kYWwsIHRoYXQgdGhlIERlZmVuc2Ugb2YgTWFycmlhZ2UgQWN0IHBhc3NlZC4KTXkgc3RvbWFjaCBpc3N1ZXMgc3Vic2lkZWQuIApJIGhhdmUgbmV2ZXIgaGVhcmQgb2YgdGhpcyBnYW1lLiBpdCBzb3VuZHMgdmVyeSBpbnRlcmVzdGluZy4gSSB3aWxsIHNoYXJlIGl0IHdpdGggbXkgaHVzYmFuZCBhbmQgc2VlIGlmIGhlIHdhbnRzIHRvIHRyeSB0byBwbGF5LgpIZSB3YXMgdGhyaWxsZWQgdG8gY2F0Y2ggaXQgbGl2ZSBpbiBDYW5hZGEubG92ZSB0aGUgZ2FtZSBhbmQgc2VlaW5nIGl0IHBsYXllZCBhdCBhIHByb2Zlc3Npb25hbCBsZXZlbCBpcyBqdXN0IGphdyBkcm9wcGluZywgaGUgc2FpZC4gd2F5IEkgbGlrZSB0byB0aGluayBvZiBpdCBpcywgaWYgeW91IGFyZSBhIGZvb3RiYWxsIGZhbiBhbmQgeW91ciBmYXZvdXJpdGUgdGVhbSBnb2VzIHRvIHRoZSBTdXBlciBCb3dsLCB3b3VsZCB5b3UgYWN0dWFsbHkgd2FudCB0byBnbyB0byB0aGUgU3VwZXIgQm93bD8gSSB3b3VsZCBzYXkgeWVzLiAKVGhlIHJlYWx0b3IgYm9hcmQgd2FybmVkIG9mIHRoZSBwb3RlbnRpYWwgY29uc2VxdWVuY2VzIG9mIGFueSBmdXJ0aGVyIGRlY2xpbmVzLCBzYXlpbmcgdGhlIHN1YnN0YW50aWFsIGRyb3AgaW4gc2FsZXMgY29tcGFyZWQgd2l0aCB0aGUgMjAxNiBwZWFrIGhhcyB0cmFuc2xhdGVkIGludG8gYSB0byB0aGUgZWNvbm9teSBpbiB0aGUgYmlsbGlvbnMgb2YgZG9sbGFycy4KQTogTm8uIFlvdSBvbmx5IG5lZWQgYSBGYWNlYm9vayBhY2NvdW50IHRvIGNvbW1lbnQuCkJ1dCBtb3JlIHJlY2VudGx5LCBhIHRlY2huaXF1ZSBjYWxsZWQgZm9hbSByb2xsaW5nIGhhcyBmb3VuZCBhIHBsYWNlIGluIHN0dWRpb3MgYW5kIGhvbWUgZml0bmVzcy4gQWxzbyBkdWJiZWQgInNlbGYgbXlvZmFzY2lhbCByZWxlYXNlLCIgZm9hbSByb2xsaW5nIGlzIGEgZm9ybSBvZiBzZWxmIG1hc3NhZ2UgdGhhdCBsaXRlcmFsbHkgZW1wbG95cyByb2xsZXJzIG1hZGUgb2YgZm9hbSB0byByZWR1Y2UgdGVuc2lvbiBpbiB0aGUgZmFzY2lhLCBhIHRoaW4gbWVtYnJhbmUgY292ZXJpbmcgdGhlIGJvZHkncyBtdXNjbGVzLiBTdGlsbCBjb25mdXNlZD8gWW91J3JlIG5vdCBhbG9uZS4gCkVsZWN0cmljIGZlbmNlcyBoYXZlIHZlcnkgbG93IGFtcGVyYWdlLCBhIHF1aWNrIHNlYXJjaCBzYXlzIDEwIEEgKG1pY3JvYW1wKS4gQSBtaWNyb2FtcCBpcyAxLzEsMDAwLDAwMHRoIG9mIG9uZSBhbXBlcmUuIEEgbWlsbGlhbXAgKG1BKSBpcyAxLzEwMDB0aCBvZiBvbmUgYW1wLgpTYWZldHkgYW5kIFdlbGxiZWluZyBIU1cgRkFRcwpJIGEgbGl0dGxlIGxhdGUgdG8gdGhlIGdhbWUsIGJ1dCBJIGhhdmUgZm91bmQgdGhlIHRyYWZmaWMgcGxhbm5pbmcgZGVwYXJ0bWVudCBpbiBBYWNoZW4gdG8gYmUgdmVyeSBoZWxwZnVsIGFuZCBhcHByb2FjaGFibGUuCkRvd250dXJuIGlzIGEgdGhpbmcgb2YgdGhlIHBhc3QuIAo5KSBEb24gZm9yZ2V0IHRoZSByZXN0IG9mIGhlciBib2R5LiBTdGltdWxhdGluZyBvdGhlciBwYXJ0cyBvZiBoZXIgYm9keSBkdXJpbmcgYW5hbCBzZXggY2FuIGhlbHAgbWFrZSBoZXIgZmVlbCBtb3JlIHJlbGF4ZWQgYW5kIHByb3ZpZGUgYSBncmVhdGVyIHRocmlsbCBmb3IgYm90aCBvZiB5b3UuIFdoaWxlIHRocnVzdGluZyBpbiBhbmQgb3V0LCByZWFjaCBhcm91bmQgYW5kIGZpbmdlciBoZXIgY2xpdG9yaXMuIFdoaWxlIG9yZ2FzbSBtYXkgb2NjdXIgcHVyZWx5IGZyb20gdGhlIGFuYWwgc2V4LCB0aGlzIGFkZGVkIHN0aW11bGF0aW9uIHdpbGwgbGVhZCB0byBhIG1vcmUgaW50ZW5zZSBzZXh1YWwgZXhwZXJpZW5jZS4KSGUgaGFzIGEgbG90IG9mIHdlYWtlciBBIGFzIHdlbGwgYXMgcGFpciB0aGF0IGp1c3QgcGlja2VkIHVwIHN0cmFpZ2h0IG9yIGZsdXNoIGRyYXdzIGxpa2UgSlQgc3VpdGVkIG9yIFQ5IHN1aXRlZC4uIApJdCdzIGEgcHJvZmVzc2lvbmFsIHNldCEgTWFuLCBJJ20gdGVsbGluZyB5b3UgaWYgdGhpcyBpc24ndCBhbHJlYWR5IGV4Y2l0aW5nIHlvdSwgeW91J3JlIG5vdCBhIHBva2VyIHBsYXllci4gTm90IGEgdmVyeSBzZXJpb3VzIG9uZSwgYW55d2F5Li4gCkkgYW0gYSBwbGFubmVyLiAKSSB0aGluayB0aGUgdGhpbmdzIHRoYXQgQkMgaXMgdGhlIFN0YW5maWVsZCBzd2VhdGVyLiBIZWF2eSB3ZWlnaHQgd29vbCwgdGhlIGJlc3QgcGVpY2Ugb2YgY2xvdGhpbmcgeW91bGwgZXZlciBuZWVkIHdvcmtpbmcgaW4gdGhlIGJ1c2guIEl0cyBzeW5vbnltb3VzIHdpdGggQkMgZm9yZXN0cnkgYW5kIGZpc2hpbmcgYW5kIEkgaGF2ZW4gc2VlbiBpdCBhbnl3aGVyZSBlbHNlLiAKSXQgaXMgdXN1YWxseSBncmVhdGx5IGV4YWdnZXJhdGVkIGFuZCB5b3UgY2FuIGVhc2lseSBkZXRlY3Qgd2hlbiBzb21lb25lIGlzIHJlYWxseSBuZXJ2b3VzLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVDb21wYXJpbmcgQ3JlZGl0IENhcmQgT2ZmZXJzCktlZXAgVGFsa2luZyAoZXZlbiB3aGVuIGl0J3MgaGFyZCkgTWFyaW9uZXR0ZSBPYnN0ZXRyaWNzICJNb3RoZXIgTG9kZSBvZiBQYWluIiBNaXNzIFVuaXZlcnNlIE1ha2UgQmVsaWV2ZSBMaWZlIGFzIFJvbGxlcmNvYXN0ZXIgU2hhY2tsaW5nIExhYm9yaW5nIElubWF0ZXMgV29yZCBTZWFyY2ggICAobW9yZSkgV2hhdCBQZW9wbGUgQXJlIEFza2luJyBXb3JkIFNlYXJjaCAgIFdoYXQgUGVvcGxlIEFyZSBBc2tpbicgV2F2ZXMgb2YgRmxlc2ggUmFuZG9tIFN0dWZmICAgR29ubmEgQmUgRnVuISAoTk9UKSBhICJTdHVwaWQgR2lybCIgV2F0Y2ggIkdvb2QgTW9ybmluZyBBbWVyaWNhIiBJJ3ZlIERvbmUgU29tZSAoRVIpIFRpbWUgRXRoaWNzIFBhdGllbnQgQWR2b2NhdGVzIEJyZWFzdGZlZWRpbmcgS2F0cmluYSBTdG9yaWVzIFNoYXBlIG9mIGEgTW90aGVyIFZhY2NpbmF0aW9ucyBQZWRpYXRyaWMgR3JhbmQgUm91bmRzICAgSnVseSAxNSwgMjAwNiBCYWJ5IGluIHRoZSBCcmVlemUgICBhIHdvbmRlcmZ1bCBIQkFDIHN0b3J5IFRoZSBTdW4gUG9zdHBhcnR1bSBTdWljaWRlIEFydGljbGUgTGV0J3MgTG9vayBhdCBUaG9zZSBTZWFyY2ggVGVybXMgR3JhbmQgUm91bmRzICAgSnVseSAxMXRoLCAyMDA2IER1bXBpbmcgV2F0ZXIgVGhlcmFweSBIZWF2eSBXZWlnaHQgRmlnaHQgV2hhdCBNYWtlcyBQbGFjZW50YXMgSGVhbHRoeSAob3Igbm90KSBXb3JkIFNlYXJjaCAgIFZlbGFtZW50b3VzIEluc2VydGlvbiBXb3JkIFNlYXJjaCAgIEhlYWx0aHkgUGxhY2VudGEgV2hhdCBEbyBJIEtub3csIEFueXdheT8gR3JhbmQgUm91bmRzICAgSnVseSA0dGgsIDIwMDYgV29yZCBTZWFyY2ggICBIb3cgdG8gV2VhbiBXb3JkIFNlYXJjaCAgIFJpcGUgQ2Vydml4IFdvcmQgU2VhcmNoICAgQmFieSBXaXRob3V0IE94eWdlbiBXb3JkIFNlYXJjaCAgIEhvbWUgQmlydGggQW5hbGdlc2ljcyBJZiBhIFNjaGVkdWxlZCBDZXNhcmVhbiBpcyBOZWNlc3NhcnkgTG93IEFGSSAoTlNUL0JQUCkgRmF0IFZhZ2luYXMgTGV0J3MgQWxsIEhhdmUgVkJBbUNzISBXb3JkIFNlYXJjaCAgIHBvc3RlcmlvciBjZXJ2aXggRmFzdGluZyBQbGFjZW50YSBhbmQgVG9uZ3VlIFBzeWNoIFdyaXRlcyBCbG9nZ2luZyAgIEVzc2F5cyBvciBTdHJlYW1zIG9mIENvbnNjaW91c25lc3M/IE5ldyBPcmxlYW5zIFZCQUMgU3RvcnkgR3JhbmQgUm91bmRzIFBvc3RlZCAgIDYvMjcvMDYgUmVmbGVjdGlvbnMgb24gTmV3IE9ybGVhbnMgUml0dWFscyBIdW1hbml6aW5nIGFuIE9CL0dZTiBWaXNpdCBZb25pIFBvd2VyZnVsIENvbW1lbnQgVGhhdCBNdXN0IGJlIFNoYXJlZCBObyEgR2VvZ3JhcGhpY2FsIEZhdCBHcmFuZCBSb3VuZHMgICBJIGdvdCBpbiEgS2VsbHkgUmlwYSAgIE5ldyBPcmxlYW5zIEwgU3RhZmZpbmcgRWNzdGF0aWMgQmlydGggSXQncyBhIChWQkFDKSBHaXJsISBMYWJvciwgTWF5YmU/IENpY2FkYXMgUHJlIC9FYXJseS9Qcm9kcm9tYWwgTGFib3IgUmVmdXNhbCBGb3JtcyBCb3JkZXIgUGF0cm9sIExlYXJucyAiRW1lcmdlbmN5IiBDaGlsZGJpcnRoIElmIEkgV2VyZSBpbiBhIERldmVsb3BpbmcgQ291bnRyeS4gCkFuZCBJIHBsYXkgbW9yZSB0aGFuIG1vc3QuIEkgZmluYWxseSBmb3VuZCA3LDEwSlEgZG91YmxlIHN1aXRlZCBvbiBteSBiaWcgYmxpbmQgYW5kIHJlIHJhaXNlZCBSb2JlcnQgV2lsbGlhbXNvbidzIHJhaXNlLiAKSSB3ZW50IHRvIHRoYXQgcGxhY2UgYW5kIGFsbW9zdCBkaWQgc29tZXRoaW5nLiBJIGFza2VkIGlmIGEgbnkgcHJvYmxlbSBJIGhhZCB0YWtlbiBjZXJ0YWluIG1lZGljaW5lICxubywgbm8uIFRoZW4ganVzdCBiZWZvcmUgZG9pbmcgaXQgY2FtZSBhIGZvcm0gdG8gc2lnbiBzYXlpbmcgaSBoYWQgTk9UIHRha2VuIHJlY2VudGx5IHRoZSBtZWRpY2luZSBJIGp1c3QgYXNrZWQgYWJvdXQuIApCdXQgb25lIHRoaW5nJ3MgZm9yIHN1cmUsIHRoZXkgbWF5IG5ldmVyIGtub3cgd2hhdCB3ZSBoZWxkIGVpdGhlci4uIApTdGFydCBIZXJlIHdpdGggSmltbXkgQ2h1cmNoIGVwaXNvZGUgdG8gZ2V0IHRoZSBvdmVydmlldyAoaXRzIGFuIGF3ZXNvbWUgbGlzdGVuLikKSSd2ZSB2b2x1bnRlZXJlZCBzb21lIHRpbWUgb24gdHdvIGRpZmZlcmVudCBnb2F0IGZhcm1zIGFuZCBnb2F0cyBhcmUgcmVhbGx5IG5lYXQgYW5pbWFscy4gT24gb25lIGZhcm0sIHRoZSBtaWxrIHByb2R1Y2luZyBmZW1hbGVzIHdvdWxkIGV2ZW4gbGluZSB1cCB0byBiZSBtaWxrZWQgaW4gb3JkZXIgb2Ygb2xkZXN0IHRvIHlvdW5nZXN0LiBUaGV5IHdlcmVuJ3QgdHJhaW5lZCB0byBkbyB0aGlzLCB0aGF0J3MganVzdCB3aGF0IHRoZXkgY2hvc2UgdG8gZG8uIEFuZCB0aGUga2lkcyBhcmUgYWRvcmFibGUgd2hlbiB0aGV5J3JlIGFsbCBnYXRoZXJlZCBhcm91bmQgdGhlIG1pbGsgYnVja2V0LiA5IG9mIHRoZW0gd2lsbCBkcmFpbiBhIDUgZ2FsbG9uIGJ1Y2tldCBpbiBhYm91dCA0NSBzZWNvbmRzLiBTb21lIG9mIHRoZSBhZHVsdHMgd291bGQgZXZlbiBsZXQgeW91IGxlYXNoIHRoZW0gdXAgYW5kIHRha2UgdGhlbSBmb3IgYSB3YWxrLCBqdXN0IHdhdGNoIG91dCBmb3IgdGhlIGhvcm5zLgpUaGUgZmFjdCB0aGF0IGJsaW5kcyBlc2NhbGF0ZSBkdXJpbmcgYSB0b3VybmFtZW50IGFuZCB0aGVyZSBhcmUgb25seSBhIHNldCBudW1iZXIgb2YgY2hpcHMgaW4gcGxheSBtYWtlcyB0b3VybmFtZW50IHBsYXkgc29tZXdoYXQgZGlmZmVyZW50IHRoYW4gbGl2ZSBnYW1lIHBsYXkuIApJIHdvdWxkIHNheSB0aGF0IG1vc3QsIGlmIG5vdCBuZWFybHkgYWxsLCBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVycyAocmVhZDogcGVvcGxlIHdobyBwYXkgdGhlaXIgaG91c2UgcGF5bWVudCB3aXRoIHRoZWlyIHdpbm5pbmdzKSBhcmUgbm90IGFkZGljdGVkIGluIHRoZSBjbGFzc2ljYWwgc2Vuc2UuLiAKWW91IG1lbnRpb25lZCBoYXZpbmcgaXNzdWVzIHdpdGggdGhlIHRvdWNoIHNjcmVlbjsgaXMgaXQgc3RpbGwgdW51c2FibGU/IElzIHVzaW5nIGEgbW91c2UgdGhlIG9ubHkgd29ya2Fyb3VuZC4/CkF0aGxldGljcyBhcyBhIHdob2xlIGFyZSBhIHBvc2l0aXZlIG91dGxldCB0aGF0IHRlYWNoZXMgbWFueSBjb29wZXJhdGl2ZSBza2lsbHMuIFRoZXJlIGFyZSBhIGZldyBjcmF6aWVzIGFtb25nIHNwb3J0cyBwYXJlbnRzIHRoYXQgd291bGQgbGVuZCB0aGVtc2VsdmVzIHRvIGFuIGFwdCBjb21wYXJpc29uLCBidXQgdGhlcmUgaXMgbGl0dGxlIG9mIHJlYWwgdmFsdWUgaW4gYmVhdXR5IHBhZ2VhbnRzIG9uIHRoZSB3aG9sZS4gVGhleSBhcmUgZXhwbGljaXRseSB0aGUgdmFsdWF0aW9uIG9mIHBoeXNpY2FsIGJlYXV0eSBpbiBhIGNvbXBldGl0aXZlIGVudmlyb25tZW50LiBXaGlsZSBpdCBuaWNlIHRvIGJlIHJlY29nbml6ZWQgZm9yIGhhdmluZyBhbiBhZXN0aGV0aWNhbGx5IHBsZWFzaW5nIGJvZHkgYW5kIGZhY2UsIGl0IGhhcmRseSBzb21ldGhpbmcgdGhhdCBoYXMgdGhlIGNhcGFjaXR5IHRvIHRlYWNoIGFueSBsaWZlIHNraWxscy4gU3BvcnRzLCBvbiB0aGUgb3RoZXIgaGFuZCwgY2FuIHRlYWNoIG1hbnkgc2tpbGxzLCBub3QgdG8gbWVudGlvbiBiZWluZyBnZW5lcmFsbHkgYSBoZWFsdGhpZXIgcGh5c2ljYWwgcHVyc3VpdC4KTGVhcm4gdG8gZHJhdyBhdHRlbnRpb24gd2hlbiB5b3UgZGFuY2U6IFBsYXkgeW91ciBmYXZvcml0ZSBtdXNpYyBhdCBob21lIGFuZCBkYW5jZSwgZGFuY2UsIGRhbmNlIGZvciBob3dldmVyIGxvbmcgeW91IHdhbnQuIFB1dCBhIG1pcnJvciBpbiBmcm9udCBvZiB5b3UuIApPbmUgdGhpbmcgdGhhdCBiZWNvbWUgbW9yZSBhcHBhcmVudCBhcyBzb2Z0d2FyZSBsaWtlIHNub3dpZSBhbmQgc29sdmVycyB0YWtlIG92ZXIgaXMgdGhhdCB3aGVuIHRoZXJlIHN0aWxsIGEgbG90IG9mIGNhcmRzIHRvIGNvbWUgKGFrYSBwcmVmbG9wKSBpcyB0aGF0IHRoZSBsaW5lIGJldHdlZW4gImJsdWZmcyIgYW5kICJ2YWx1ZSIgZ2V0cyB2ZXJ5IGJsdXJyZWQuIFNub3dpZSBkb2VzbiAzIGJldCBoYW5kcyB0aGF0IHdvcmsgYmV0dGVyIGFzIGEgY2FsbCwgb3IgYXJlICBldiB0byAzIGJldC4gRXhjZXB0IGluIHJpdmVyIHNwb3RzLCBhbiBvcHRpbWFsIHN0cmF0ZWd5IHdpbGwgcmFyZWx5IGJlIGhhdmluZyBkaWNob3RvbWllcyBvZiBibHVmZnMgYW5kIHZhbHVlIHRoYXQgcHNldWRvIEdUTyBzdHJhdHMgb2YgMjAxMyB1c2VkIHRvIHRoaW5rIHdlcmUgZ29vZApIYW1ibGluJ3Mgb3duIHJlc2VhcmNoIGZyb20gMjAxNyBjb25jbHVkZXMgdGhhdCBQQk0gaXMgYWNoaWV2YWJsZSBhY3Jvc3MgdGhlIGJyb2FkZXIgNjAwIDEwMDBubSByYW5nZSwgYW5kIG5vdCBqdXN0IHdpdGhpbiB0aGUgdHdvIGxpbWl0ZWQgcGFyYW1ldGVycywgb3IgcGVha3MsIHRoYXQgSm9vdnYgY2l0ZXMgaW4gdGhlaXIgc3R1ZHkgZnJvbSAxOTk2LiAKMjYgSnVsIDIwMTYgLiBBdXRvZGVzayBUIFNwbGluZXMgUGx1ZyBpbiBmb3IgUmhpbm8gaGVscHMgZGVzaWduZXJzIGNyZWF0ZSBzbW9vdGgsIC4gCk91ciBwcm9wZXJ0eSBtYW5hZ2VyIGFkdmlzZWQgdGhlIHN0cmF0YSBjb3Jwb3JhdGlvbiBpdCBoYXMgbm8gY2hvaWNlIGJ1dCB0byBhcHBseSB0aGUgc2NoZWR1bGUgb2YgdW5pdCBlbnRpdGxlbWVudCByZWdpc3RlcmVkIGluIHRoZSBMYW5kIFRpdGxlIFJlZ2lzdHJ5LiAKNiBhdCBNb3RvckNpdHkgQ2FzaW5vIEhvdGVsLCB0aGUgY2hhcml0eSBwb2tlciB0b3VybmFtZW50IHdpbGwgZ2l2ZSBmYW5zIGFuIG9wcG9ydHVuaXR5IHRvIGdvIGhlYWQgdG8gaGVhZCB3aXRoIFJlZCBXaW5ncyBwbGF5ZXJzIGFuZCBhbHVtbmkgaW4gYSBnYW1lIG9mIFRleGFzIEhvbGQgJ0VtIHdpdGggYSBncmFuZCBwcml6ZSBvZiAkNSwwMDAgY2FzaCB0byB0aGUgd2lubmVyIG9mIHRoZSB0b3VybmFtZW50LiBGYW5zIGNhbiByZXNlcnZlIGEgc2VhdCBpbiB0aGUgdG91cm5hbWVudCBieSBtYWtpbmcgYSAkNDAwIGRvbmF0aW9uIHRvIHRoZSBSZWQgV2luZ3MgRm91bmRhdGlvbi4gCkFuZCB3ZSBjYW4gZ2V0IHRoYXQgbW9uZXkgYmFjay4gCkkgbWFkZSBhIEhhbmQgYW5kIFN0YXRzIFRyYWNrZXIgZm9yIExpdmUgUG9rZXIKTWlhbWkgSGlzdG9yaWMgUHJlc2VydmF0aW9uIEJvYXJkIFZvdGVzIEFnYWluc3QgUGxhbiBUbyBSZWRldmVsb3AgSGlzdG9yaWMgQ29jb251dCBHcm92ZSBQbGF5aG91c2VBIG1ham9yIGRlY2lzaW9uIHdhcyBtYWRlIHRoaXMgd2VlayBhYm91dCB0aGUgZnV0dXJlIG9mIHRoZSBoaXN0b3JpYyBDb2NvbnV0IEdyb3ZlIFBsYXlob3VzZS4KRmxldGNoZXIgZXQgYWwgKDIwMTYpIGNvbmR1Y3RlZCBhIHN0dWR5IHdpdGggaW5wYXRpZW50cyBhbmQgb3V0cGF0aWVudHMgd2hvIHdlcmUgcmVjZWl2aW5nQ0lIIHNlcnZpY2VzIHRocm91Z2ggdGhlIFZBLiAKUGVvcGxlIGFsc28gZm9yZ2V0IHRoYXQgbmF0aW9uYWxpdHkgY29tZXMgaW50byBwbGF5IGhlcmUsIHdoZXJlYXMgQW1lcmljYW5zIGFyZSBhbHdheXMgb3ZlciB0aGUgdG9wIGFuZCBleHRyZW1lbHkgb3V0IHRoZXJlLCBJY2VsYW5kZXJzIGFyZW4gYXQgYWxsLiBUaGV5IHVzdWFsbHkgbW9yZSBpbnRyb3ZlcnRlZCwga2VlcCB0byB0aGVtc2VsdmVzIGFuZCB0aGVpciB3YXlzIG1pZ2h0IGNvbWUgb2ZmIGFzIGFudGkgc29jaWFsIHRvIEFtZXJpY2FucyBiZWNhdXNlIHRoZXkgYmVsaWV2ZSBldmVyeSBlbW90aW9uIGFuZCBmZWVsaW5nIG11c3QgYmUgb3V0IHRoZXJlIGFuZCBub3RpY2VkIGJ5IG90aGVycyBpbiBvcmRlciB0byBhY3R1YWxseSBtYXR0ZXIuIFRoZSBBQyBsYXN0IHllYXIgd2FzIGEgZ29vZCBleGFtcGxlIG9mIHR5cGljYWwgQW1lcmljYW4gZXhhZ2dlcmF0ZWQgd2F5cyB3aGVuIHRoZSBjcm93ZCByYW5kb21seSBzdGFydGVkIHNob3V0aW5nICJVU0EgVVNBIFVTQSIgb24gU2hhdyB0aGlyZCBkZWFkbGlmdC4gVGhpcyBpcyBzZWVuIGFzIGNvbXBsZXRlbHkgcmlkaWN1bG91cyBiZWhhdmlvciBieSBvdGhlciBjb3VudHJpZXMsIGFuZCB0aGlzIGJhcnJpZXIgaXMgd2h5IHBlb3BsZSBzZWVtIHRvIHRoaW5rIFRob3IgaXNuIHN1cHBvcnRpdmUganVzdCBiZWNhdXNlIGhlIGlzbiBqdW1waW5nIGluIHRoZSBhaXIgYW5kIGNsYXBwaW5nIHdoaWxlIGNyeWluZyB3aGVuIGEgZmVsbG93IHN0cm9uZ21hbiBjb21wbGV0ZXMgYSBsaWZ0LgpCbG9vZCBTdWdhciBDb250cm9sIEltcHJvdmVkIGJ5IFdlaWdodCBUcmFpbmluZwpNb3N0IG9mIHRoZSBraWRzIHJlY2FudGVkIG9yIHdlcmUgZm91bmQgdG8gYmUgc3RyYWlnaHQgdXAgbHlpbmcuIApJbmdyYW0gd2FzIGFtb25nIDEwIFNhaW50cyBwbGF5ZXJzIHdobyBzYXQgb24gdGhlIGJlbmNoIGR1cmluZyB0aGUgYW50aGVtIGJlZm9yZSB0aGVpciB3aW4gb3ZlciB0aGUgQ2Fyb2xpbmEgUGFudGhlcnMgbGFzdCBTdW5kYXkgb24gYSBkYXkgb2YgdW5wcmVjZWRlbnRlZCBwcm90ZXN0cyBhbW9uZyBORkwgcGxheWVycyBpbiByZXNwb25zZSB0byBjb21tZW50cyBieSBQcmVzaWRlbnQgRG9uYWxkIFRydW1wLiBIZSBjcnVkZWx5IHNhaWQgYXQgYSBwb2xpdGljYWwgcmFsbHkgdGhhdCBoZSB3YW50cyBvd25lcnMgdG8gZmlyZSBhbnkgcGxheWVyIHdobyAiZGlzcmVzcGVjdHMgb3VyIGZsYWcuIi4gCkhlIHNhaWQgaGUgYmUgd2F5IGhhcmRlciBvbiBoaW1zZWxmIHRoYW4geW91IGNhbiBldmVyIGJlLCBzYWlkIEhpdGNoY29jay4gClRoZSB0aXRsZSBjaGFyYWN0ZXIsIGFsdGhvdWdoIG5vdCBLcmVlIGJ5IGJpcnRoLCBpcyBmaWdodGluZyBvbiB0aGUgS3JlZSBzaWRlIGFsb25nIHdpdGggWW9uIFJvZ2cgYW5kIGhpcyB0ZWFtLiAKV2VkZ2F0YWJvIHUKSXQgb25seSB0aGUgcHVibGljIHNjaG9vbHMgdGhhdCByZXF1aXJlIGl0LCBpbW1pZ3JhdGlvbiBjb3VsZG4gY2FyZSBsZXNzLiBZb3Ugd29uIGdldCBzZW50IHRvIGEgS29yZWFuIHByaXNvbiBmb3IgdGVzdGluZyBwb3NpdGl2ZSBmb3IgSElWLCBsb2wuIApUaGUgYm9vayAiTG92ZSBhbmQgUmVzcGVjdCIgaGVscGVkIG1lIHNlZSBob3cgcGFyZW50cyB3YW50IHJlc3BlY3QgYW5kIGNoaWxkcmVuIGxvdmUsIGFuYWxvZ291cyB0byB0aGUgaHVzYmFuZCBhbmQgd2lmZSBkeW5hbWljLiBTb21ldGltZXMgb2YgY291cnNlIGhvdyBJIGV4cHJlc3MgbXkgbG92ZSBpcyBzZXR0aW5nIGJvdW5kYXJpZXMgYW5kIGxpbWl0cyAoVGhlIEZhdGhlciBkaXNjaXBsaW5lcyB0aG9zZSBIZSBsb3ZlcykgRm9yIG15IHNvbiB3aG8gaXMgaGF2aW5nIHNvbWUgc3Ryb25nIGJ1cnN0cyBvZiBlbW90aW9uIGFzIGhlIGdyb3dzLCBnaXZpbmcgaGltIHRhc2tzIGFuZCBtYWtpbmcgaGltIGZlZWwgdXNlZnVsIGFuZCBuZWVkZWQgKGFsb25nIHdpdGggcGh5c2ljYWwgYWZmZWN0aW9uKSBtYWtlcyBoaW0gZmVlbCBsb3ZlZC4gCk9rYXkgd2l0aCB0aGUgYXJ0aWNsZSBvaWwgYW5kIG9saXZlIG9pbCBjYW4gbW9kaWZ5IGluc3VsaW4gcmVzaXN0YW5jZSBhbmQgcGxhc21hIGRlc2FjeWwgZ2hyZWxpbiBpbiByYXRzCldhcyBub3QgYWxsb3dlZCB0byBnbyB0byBhbiBPYmd5biBmb3IgdGVycmlibGUgcGVyaW9kIHBhaW4uIE15IG1vbSBkcm92ZSBieSBhbmQgc3RhbGtlZCBtZSBhdCBteSBwbGFjZSBvZiB3b3JrIHdoZW4gSSB3YXMgaW4gaGlnaCBzY2hvb2wgYmVjYXVzZSBzaGUgd2FzIGNvbnZpbmNlZCBJIHdhcyBoYXZpbmcgc2V4LiAKVGhlIGZpcnN0IHN0dWR5IEkgbGlua2VkIHRvIEkgdGhpbmsgaXMgbW9zdGx5IGludGVyZXN0aW5nLCBhcyBpdCBzaG93cyBhbiBpbmNyZWFzZSBpbiBkZWF0aCBkdWUgdG8gY2FuY2VyIG92ZXIgdGltZS4gU28sIGV2ZW4gb3V0c2lkZSBvZiBteSBjbGFpbSB0aGF0IHRoZSBsaWZlIHNwYW4gY2hhbmdpbmcsIGl0IHNob3dzIHRoYXQgY2FuY2VyICh0aGUgb3RoZXIgcGFydCBvZiBteSBjbGFpbSkgc2VlbXMgdG8gYmUgaW1wYWN0aW5nIGNhdXNlIG9mIGRlYXRoIGluIEdvbGRlbiBSZXRyaWV2ZXJzLgpQbGF5IGlzIGl0IG93biBkZXZlbG9wbWVudCBhbmQgbm90IHNpbXBseSBhIHdhc3RlIG9mIHRpbWUgaW4gdGhlIHdheSB0byBhZHVsdGhvb2QKQVBQIG1lbWJlcnNoaXAgYWxzbyBtZWFucyB0aGF0IG1lbWJlcnMgYXJlIGV4cG9zZWQgdG8gb3Bwb3J0dW5pdGllcyBmb3IgY29udGludWluZyBlZHVjYXRpb24sIHNvIHlvdSB3aWxsIGxpa2VseSBmaW5kIHNvbWVvbmUgd2l0aCBhbiBoaWdoZXIgbGV2ZWwgb2Yga25vd2xlZGdlIGFuZCBhbiBpbnRlcmVzdCBpbiBsZWFybmluZyAgIG9yIGF0IGxlYXN0IGZhY3R1YWwgaW5mb3JtYXRpb24uLiAKSXQgZmVlbHMgcmVhbGx5IHdyb25nIHRvIGVuam95IGl0IHNvIG11Y2gsIGJ1dCBnb29kIGdvZCBJIHJlYWxseSBkby4gCk1hcmsgaXQgb24geW91ciBjYWxlbmRhciBwbGFuIHRvIGF0dGVuZCB0aGlzIGZ1biBkYXkhIENMVUIgTEVOR1RIIFdoYXQgaXMgaXQsIGFuZCB3aHkgc2hvdWxkIHdlIGNhcmUgQWwgRGF2aWUsIFByb2Zlc3Npb25hbCBDbGFzcyAiQSIgQ2x1YiBGaXR0ZXIvQ2x1YiBNYWtlciA5MCUgb2YgYWxsIGRyaXZlcnMgc29sZCBpbiBnb2xmIHNob3BzIHRvZGF5IGFyZSB0b28gbG9uZyBmb3IgbW9zdCBwbGF5ZXJzLiBNb3N0IGdvbGZlcnMgYmVsaWV2ZSB0aGF0IGxvbmdlciBsZW5ndGggZHJpdmVycyB3aWxsIGhpdCB0aGUgYmFsbCBmYXJ0aGVyLiAKT2huZSBCZXppZWh1bmdlbiBpc3QgZGFzIHNjaHdpZXJpZy5EaWUgRnJhdSB2ZXJhcnNjaHQgZGFzIGdhbnplIExhbmQsIGhhdCBiZXJhbGwgbnVyIEJhdXN0ZWxsZW4gb2ZmZW4sIHZvbSBXb2hudW5nc2JhdSBiZXIgZGllIEJ1bmRlc3dlaHIgYmlzIHp1ciBncm9lbiBncm9lbiBTdGV1ZXJyZWZvcm0sIGRlciBCYWhuLCBkZW0gRGlnaXRhbCwgZGVtIFJlY3ljbGluZ3N5c3RlbSB1bmQgdW5kIHVuZCB1bmQgdW5kVW5kIHdhcyBtYWNoZW4gZGllIGdhbnplbiBNZXJrZWx3aGxlcj8gRGllIHdobGVuIGRpZSBlaW5mYWNoIHdlaXRlciwgd2VpbCBtaXQgZGVyIFJlZ2llcnVuZyBNZXJrZWwgMyB3aXJkIGRhcyBhbGxlcyAgIHZlcnNwcm9jaGVuICAgYmVob2Jlbiwgd2FzIGhoaCBkaWUgVm9yZ25nZXIgLiAKUGFydCBvbmUgd2FzIGRvbmUgKENpdmlsIFN1aXQpLiBOT1csIHRoZXkgSEFEIHRvIGVsaW1pbmF0ZSBCcmVuZGFuIGFzIGEgd2l0bmVzcyBmb3IgQXZlcnksIHNvIHRoYXQgZXhhY3RseSB3aGF0IHRoZXkgZGlkLiAKSnVzdCBEYW5jZSBtYWRlIHBlb3BsZSBzZWUgd2hhdCBnZW5yZSBvZiBtdXNpYyBzaGUgbWFkZSBhbmQgaGVyIG11c2ljYWwgY2FwYWNpdHkuIApJIGFsc28gYXNrIFlPVSBzcGVjaWZpY2FsbHkgaW4gdGhpcyBxdWVzdGlvbiBiZWNhdXNlIEkgc3ViYmVkIHRvIHlvdXIgYmxvZywgSSBlbmpveSB3aGF0IHlvdSB3cml0ZSBhbmQgSSBhbSB2ZXJ5IGludGVyZXN0ZWQgdG8gaGVhciB5b3VyIHRob3VnaHRzIG9uIHRoZSBtYXR0ZXIuCkRheXMgU2VyaWVzTWluZCBNYXR0ZXJzUm9hZCBSZXNwZWN0IFNlcmllcwpUaGUgYXV0b21ha2VyIGFsc28gaGFzIHVuZGVydXRpbGl6ZWQgcGxhbnRzIGl0IGNvdWxkIHJldG9vbCBpbiBvcmRlciB0byBwcm9kdWNlIHRoZSBFcXVpbm94IGluIHRoZSBVbml0ZWQgU3RhdGVzLiBCdXQsIGEgR00gb2ZmaWNpYWwgZmFtaWxpYXIgd2l0aCB0aGUgY29udHJhY3QgbmVnb3RpYXRpb25zIHNhaWQgdGhlIGF1dG9tYWtlciBoYXMgbm90IG1hZGUgYSBkZWNpc2lvbiBvbiB0aGUgZnV0dXJlIG9mIENBTUksIGJ1dCB0aGF0IHRoZSB0aW1lIGZyYW1lIGZvciBnZXR0aW5nIGEgZGVhbCBkb25lIGlzIG5hcnJvd2luZy4KSXQgd2FzIGEgcG93ZXJmdWwgc3RhdGVtZW50LCBzeW1ib2xpY2FsbHkgZGVjbGFyaW5nIHRoZSB3b21lbidzIGRlc2lyZSBmb3IgdGhlaXIgZmVtaW5pbmUgcG93ZXIgdG8gYnVyc3Qgb3V0IG9mIGl0cyBwYXRyaWFyY2hhbCByZXN0cmFpbnRzIGFuZCBib3VuY2UgZnJlZSwgbm8gbG9uZ2VyIGNvbmZpbmVkIGJ5IHRoZSBsYWNlIGFuZCBzcGFuZGV4IG9mIHRyYWRpdGlvbmFsIHNvY2lhbCBtb3Jlcy4uIApXaGVuIGEgZG9jdG9yIGFncmVlcyB0byBiZWNvbWUgImluIG5ldHdvcmsiLCB0aGV5IGFncmVlLCB1bmRlciBjb250cmFjdCB0byBjZXJ0YWluIGRvbGxhciBhbW91bnRzIGZvciBjZXJ0YWluIHByb2NlZHVyZXMgYW5kIHZpc2l0cy4gVGhhdCBhZ3JlZWQgYW1vdW50IGlzIGNvbnNpZGVyZWQgcGF5bWVudCBpbiBmdWxsIGFuZCBubyBvdGhlciBiaWxsaW5nIGNhbiBiZSBtYWRlIGJ5IHRoZSBwcm92aWRlci4KSGkgZ3V5cyEgTmVlZCBoZWxwIHdpdGggc21hbGwgYnVtcHMgb24gY2hpbiBhcmVhLiBJIGJlZW4gZGVhbGluZyB3aXRoIHRoaXMgZm9yIHNldmVyYWwgeWVhcnMgIGV2ZW4gd2hlbiBteSBza2luIGlzIHN1cGVyIGNsZWFyIG15IGNoaW4gaGFzIHRoZXNlIHNtYWxsIHJlZCBidW1wcyBvbiBpdC4gVGhleSBsb29rIGxpa2UgaXJyaXRhdGlvbiBhbmQgdGhleSBraW5kYSBoYXZlIHB1cyBpbiB0aGVtIGJ1dCB0aGV5IG5ldmVyIGZsYXJlIHVwIG1vcmUgdGhhbiB0aGVzZSBzbWFsbCBwdW1wcy4gU29tZSBvZiB0aGVtIGNvbWUgdG8gYSBzbWFsbCB3aGl0ZWhlYWQsIGJ1dCBzb21lIGp1c3Qgc3RheSBzbWFsbCBhbmQgcmVkLiBJIGJlZW4gdG8gYSBkZXJtYXRvbG9naXN0IGFuZCB0aGV5IHRob3VnaHQgaXQgd2FzIHBlcmlvcmFsIGRlcm1hdGl0aXMgYnV0IGF2b2lkaW5nIFNMUyB0b290aHBhc3RlIGhhc24gZG9uZSBhbnl0aGluZy4gQ3VyaW91cyBpZiBhbnlvbmUgaGFzIGFueSBvdGhlciB0aG91Z2h0cy4KSGF2ZSB5b3UgdHJpZWQgcHV0dGluZyBkcm9wcyBvZiBvaWwgb24gdGhlIHN0aWNrIGJlZm9yZSBhcHBseWluZyBpdD8gSSBmaW5kIHRoaXMgcmVhbGx5IGhlbHBzIG9uIGFueSBzdGljay9kcmllciBwcm9kdWN0LCBvciB3aGVuIEkgd2FudCB0byBsb29rIGRld3ksIGFuZCBJIGEgc3VwZXIsIHN1cGVyIG9pbHkgZ2FsLiBZb3UganVzdCBtaWdodCBuZWVkIGEgbG90IG1vcmUgb2lsIGlmIHlvdSBvbiB0aGUgb3Bwb3NpdGUgZW5kIG9mIHRoZSBzcGVjdHJ1bSEuIApOY2hzdGVzIEphaHIsIDIwMTUgd2lyZCBlcyB3aWVkZXIgc293ZWl0IHNlaW4uIEJpdHRldCBtYW4gZGllIEp1bmdmcmF1IHVtIGRpZSBFcmZsbHVuZyBlaW5lcyBIZXJ6ZW5zd3Vuc2NoZXMgdW5kIHpuZGV0IGVpbiBLZXJ6bGVpbiBhbiAoaGV1dHp1dGFnZSBicmVubnQgZGFubiBlaW4gTEVEIExtcGNoZW4gYXVmIGVpbmVyIFBsYXN0aWtrZXJ6ZSApLCBrYW5uIG1hbiBzaWNoZXIgc2VpbiwgZGFzcyBkaWVzZXIgaW4gRXJmbGx1bmcgZ2VodC4gClRoaXMgY291cnNlIHdpbGwgdGVhY2ggeW91IGhvdyB0byBhdm9pZCByb29raWUgbWlzdGFrZXMgYW5kIGtlZXAgeW91ciBlbW90aW9ucyBpbiBjaGVjayBkdXJpbmcgYSBnYW1lLiAKU2Vjb25kLCBoZSBsb29rZWQgYXQgdGhlIGNhc3VhbCBzaG9lcyBJIHdhcyB3ZWFyaW5nLCBzYW1lIHByb2JsZW0gICBJIHNlZW0gdG8gd2VhciB0aGlzIHNlY3Rpb24gb2YgYWxsIG15IHNob2VzIG91dCByYXRoZXIgcXVpY2tseS4gClNhbnRhIENydXogZGUgTGEgUGFsbWEsIG1pdCBkZW0gZ3J0ZW4gSGFmZW4gZGVyIEluc2VsLCBpc3QgZWluZSBrbGVpbmUgdmVyc2NobGFmZW5lIFN0YWR0LCBpbiBkZXIgYmVyZWl0cyB1bSAyMTowMCBVaHIgZGllIEZ1Z25nZXJ6b25lIGxlZXJnZWZlZ3QgaXN0LiAKQWZ0ZXIgeWVhcnMgd2l0aG91dCBhbnkgY29tbXVuaWNhdGlvbiBmcm9tIHRoZSAvci9jb25sYW5ncyBtb2RlcmF0aW9uIHRlYW0sIEkgcmVjZWl2ZWQgYSBtZXNzYWdlIGZyb20gL3UvQWRhcmFpbiB0ZWxsaW5nIG1lIHRoYXQgSSBuZWVkZWQgdG8gc2V0IHVwIEF1dG9Nb2RlcmF0b3IgdG8gZmlsdGVyIG91dCBwb3N0cyBvbiAvci9uZW9ncmFwaHkgdGhhdCBjb3VsZCBjYXVzZSBwcm9ibGVtcyB3aXRoIHRoZWlyIERpc2NvcmQgd2ViaG9va3MuClNvIG15IHNpdHVhdGlvbiBpcyBJIHNhdCBpbiBiZWZvcmUsIGJ1dCBraW5kYSBmb3Jnb3QgaG93IG15IHBvc3RlcmlvciBmZWx0LiBCdXQgYW55d2F5cy4gCkplZG84OSAgNiw2NzMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpZb3UgY2F0Y2ggYSBnbGltcHNlIG9mIHlvdXJzZWxmIGluIHRoZSBtaXJyb3IgYW5kLCB3aGF0IGlzIHRoYXQsIGEgcGltcGxlPyBDaGFuY2VzIGFyZSBnb29kIGl0IGlzICAgYW4gZXN0aW1hdGVkIDE3IG1pbGxpb24gb2YgeW91ciBmZWxsb3cgQW1lcmljYW5zIGFyZSBhbHNvIHNjcnV0aW5pemluZyBhY25lIGluIHRoZWlyIG1pcnJvcnMgW3NvdXJjZTogTmVtb3Vyc10uIEJ1dCBsb29rIGEgbGl0dGxlIGNsb3NlciBhdCB0aGF0IHJlZCBzcG90ICAgaXQgbWF5IG5vdCBiZSBhIHBpbXBsZSBhdCBhbGwsIGJ1dCByYXRoZXIgcmVkLCBpbmZsYW1lZCBza2luLiAKVGhlcmUgbm8gcG9pbnQgc3RheWluZyBvbiB0aGUgYnJhY2tldCB5b3UgaW4sIHlvdSBuZWVkIHRvIHByb2dyZXNzIHNvb25lciBvciBsYXRlciBzbyBnbyBmb3Igd2hhdCBJIHRvbGQgeW91IHdoaWNoIGlzIHRoZSBiZXN0IGJyYWNrZXQgdG8gYmUgaW4gb25jZSB5b3UgYWJsZSB0byBnZXQgNzBzLgpFc3RhYmxpc2ggZ3JvdW5kIHJ1bGVzIGZvciBwYXJ0aWNpcGF0aW9uIGluIGEgZGlzY3Vzc2lvbi4gSW4gb3JkZXIgZm9yIGEgZGlzY3Vzc2lvbiB0byBiZSBlZmZlY3RpdmUsIHN0dWRlbnRzIG5lZWQgdG8gdW5kZXJzdGFuZCB0aGUgdmFsdWUgb2YgYWN0aXZlbHkgbGlzdGVuaW5nIHRvIHRoZWlyIHBlZXJzLCB0b2xlcmF0aW5nIG9wcG9zaW5nIHZpZXdwb2ludHMsIGFuZCBiZWluZyBvcGVuIG1pbmRlZC4gVGhleSBhbHNvIG5lZWQgdG8gcmVjb2duaXplIHRoZSBpbXBvcnRhbmNlIG9mIHN0YXlpbmcgZm9jdXNlZCBhbmQgZXhwcmVzc2luZyB0aGVtc2VsdmVzIGNsZWFybHkuIApEMyBoYWQgdGhlIGdyZWF0ZXN0IHN0cmF0ZWdpc3Qgb2YgdGhlIGJ1cm5pbmcgaGVsbHMgdGVsbGluZyB5b3UgZXhhY3RseSB0aGUgbmV4dCBzdGVwIG9uIGhpcyBwbGFuIHRvIGJyZWFrIGludG8gQmFzdGlvbiBLZWVwLCB0byBjaXRlIG9uZSBvZiB0aGUgc3Rvcnkgc2hvcnRjb21pbmdzLiAKVGhhdCBlbmhhbmNlZCBwZXJjZXB0aW9uIHdvdWxkIHRoZW4gbGVuZCBpdHNlbGYgdG8gbmV3IGZvcm1zIG9mIHNvY2lhbCBzaWduYWxsaW5nLiBSZWQgc2tpbiBjYXVzZWQgYnkgYmxvb2QgcHVtcGluZyBuZWFyIHRoZSBzdXJmYWNlIG9mIHRoZSBza2luIGlzIGFuIGltcG9ydGFudCBzaWduIG9mIGRvbWluYW5jZSBmb3IgbWFueSBwcmltYXRlcy4gTWFuZHJpbGwgbW9ua2V5cyBhcmUgcGVyaGFwcyB0aGUgbW9zdCBmYW1vdXMgZXhhbXBsZSwgd2l0aCB2aXZpZCBtYXJraW5ncyBvbiB0aGVpciBmYWNlIGFuZCBib3R0b20gdGhhdCBzaWduYWwgdGhlaXIgcG9zaXRpb24gaW4gdGhlIGdyb3VwIHN0cmljdCBoaWVyYXJjaHk7IHRoZSBmaXR0ZXIsIGFuZCBtb3JlIGRvbWluYW50IGFuIGluZGl2aWR1YWwgaXMsIHRoZSByZWRkZXIgaGUgYXBwZWFycy4gClRoZXJlIGlzIGEgcG9wdWxhciBpbmZvcm1hdGlvbmFsIHByb2R1Y3QgYXJvdW5kIHRoZSBJbnRlcm5ldCB0aGF0IGFjdHVhbGx5IHRlYWNoZXMgeW91IEhvdyBUbyBSdW4gQSBUZXhhcyBIb2xkZW0gUG9rZXIgVG91cm5hbWVudC4gQWNjb3JkaW5nIHRvIHdoYXQgd2UgaGF2ZSBnYXRoZXJlZCwgaXQgZG9lc24ndCBtYXR0ZXIgaWYgeW91IGhhdmUgdHJpZWQgeW91ciBoYW5kIGF0IHRoaXMgYmVmb3JlIG9yIGV2ZW4gdW5kZXJzdGFuZCBIb3cgdG8gUGxheSBmb3IgdGhhdCBtYXR0ZXIsIG9yIGp1c3Qgd2FudCB0byBtYWtlIG1vcmUgcHJvZml0cyB0aGV5IGNhbiBzaG93IHlvdSB0aGUgcm9wZXMgd2VsbCBiZXlvbmQgdGhlIFJ1bGVzLiAKV2UgZG8gd2hhdCB3ZSBjYW4gdG8gc29tZXRpbWVzIG1ha2UgZW5kcyBtZWV0LCBidXQgdGhpcyBhcnJhbmdlbWVudCBtYWtlcyBpdCBsZXNzIHN0cmVzc2Z1bCBmb3IgYm90aCBvZiB1cy4gCldlIGp1c3QgY29tcGxldGVkIGEgZGVhbCB3aXRoIEh5dW5kYWksIGFzIHlvdSBrbm93LiBUaGV5IGFyZSBiZWdpbm5pbmcgdG8gdGFrZSBpdCBpbnNpZGUgW2luc3RlYWQgb2Ygb3V0c291cmNpbmcgd2l0aCBKTSBidXQgd2UgaGFkIGEgZ3JlYXQgcnVuIHdpdGggSHl1bmRhaSBhbmQgd2Ugd2lsbCBjb250aW51ZSB0byB3b3JrIHdpdGggdGhlbSBhcyB0aGVpciBwb3J0Zm9saW8gcnVucyBvZmYuIApBdCBzb21lIHBvaW50IGluIGh1bWFuIGhpc3RvcnksIHRoZXkgd2lsbCBsb29rIGJhY2sgb24gdGlwcGluZyBhbmQgdGhpbmsgaXQgd2FzIGEgcmlkaWN1bG91cyBjb25jZXB0IGFuZCBiaXphcnJlIGhvdyB3ZSBqdXN0IGFjY2VwdGVkIGl0IGFzIGEgd2F5IG9mIGxpZmUuIFRoZXJlIGFyZSBnb2luZyB0byBiZSB0aGluZ3Mgc2hlIHN0cnVnZ2xlcyB3aXRoIHRoYXQgeW91IG5ldmVyIHdvdWxkIGhhdmUgZXhwZWN0ZWQuIFlvdSB3aWxsIHNlZSBoZXIgZG8gc29tZXRoaW5nIG9uZSBkYXksIGJ1dCBiZSBpbmNhcGFibGUgb2YgaXQgYW5vdGhlci4gCkl0IG5lZWRlZCB3b3JrIGJ1dCBub3RoaW5nIGxpa2UgYSBzaW5raG9sZSwgdGhlIHNlbGxlciB3YXMgbW90aXZhdGVkLCBUaGUgc2VsbGVyIHNhaWQgaGUgd291bGQgc2VsbCBhdCBldmVuIGEgbXVjaCBsb3dlciBwcmljZSBpZiBoZSBjb3VsZCBnZXQgdGhlIG1vbmV5IGluIDMgZGF5cy4gCkl0J3MgcG9zc2libGUgdG8gZmFrZSBhIGdsYXNzIHdhbGsgb3IgdG8gYm9vc3QgeW91ciBjaGFuY2VzIG9mIGNvbXBsZXRpbmcgaXQgd2l0aG91dCBpbmp1cnkuIEJyZWFrYXdheSBnbGFzcywgYWxzbyBrbm93biBhcyBzdWdhciBvciBjYW5keSBnbGFzcywgaXMgYW4gZWFzeSB0byBzaGF0dGVyIHN1YnN0aXR1dGUgZm9yIHJlYWwgZ2xhc3MuIFdoZW4geW91IHNlZSBhbiBhY3RvciBicmVhayBhIGJvdHRsZSBvdmVyIHNvbWVvbmUncyBoZWFkLCB0aGUgYm90dGxlIGlzIHVzdWFsbHkgbWFkZSBmcm9tIGNhbmR5IGdsYXNzLiAKVGhlIHBoeXNpb2xvZ2ljYWwgZWZmZWN0cyBvZiBUcmFuc2NyYW5pYWwgRWxlY3RyaWNhbCBTdGltdWxhdGlvbiBkbyBub3QgYXBwbHkgdG8gcGFyYW1ldGVycyBjb21tb25seSB1c2VkIGluIHN0dWRpZXMgb2YgQ29nbml0aXZlIE5ldXJvbW9kdWxhdGlvbi4gTmV1cm9wc3ljaG9sb2dpYS4uIApGb3IgeW91LCBvbiB5b3VyIHBob25lIC8gc29jaWFsIG1lZGlhLCBzaGUgaXMgYmxvY2tlZCAxMDAlLiBDYWxscyBhcmUgZWl0aGVyIGJsb2NrZWQgb3Igc2VudCBzdHJhaWdodCB0byB2b2ljZW1haWwsIHdoZXJlIHlvdSBkZWNpZGUgdG8gbGV0IFNPIGxpc3RlbiB0byB0aGVtIG9yIGRlbGV0ZSB0aGVtIG91dHJpZ2h0IHBlcmlvZGljYWxseS4gClBlb3BsZSBhcmUgYmVpbmcgcmVmdXNlZCB0cmVhdG1lbnQgYnkgdGhlaXIgaW5zdXJhbmNlIGNvbXBhbmllcy4gClRoZXNlIDYgZGlzZWFzZXMga2lsbCBtb3JlIHRoYW4gODAlIG9mIHVzIGJlZm9yZSB3ZSBnZXQgdG8gcmVhY2ggYSByaXBlIG9sZCBhZ2UuCk1vc3Qgb2YgdGhlIHdvbWVuIG9uIHRoZSByZXNpZGVuY2Ugc3RhZmYgdGhvdWdodCBoZSBnb3Qgd2hhdCBoZSBkZXNlcnZlZC4iSm9obiBGLiAKRm91bmRlZCBpbiBBdWd1c3QgMjAwOCBieSBEYW5pZWwgU2hpcHRvbiwgbm93IGNvIGZvdW5kZXIgYW5kIENFTyBvZiBCaXRNZXRob2QsIGFuZCBoaXMgd2lmZSBBYmJpZSwgZm9ybWVyIGFyY2hpdGVjdCBub3cgc3RheSBhdCBob21lIG1vbSwgSW1wcm9tcHR1IFN0dWRpbyBleGlzdGVkIG5vdCBvbmx5IHRvIGhvdXNlIGVudHJlcHJlbmV1cnMgYW5kIHN0YXJ0dXBzIGJ1dCB0byBiZSBhIHBhcnQgb2YgYW5kIGNyZWF0ZSBjb21tdW5pdHkgYW1vbmdzdCB0aG9zZSBpbmRpdmlkdWFscy4gSW4gYWRkaXRpb24gdG8gdGhlIGRhaWx5IGFjdCBvZiBjb3dvcmtpbmcgd2l0aCBhIGRpdmVyc2Ugc2V0IG9mIGluZGl2aWR1YWxzLCB0aGV5IGFjY29tcGxpc2hlZCB0aGlzIGdvYWwgdGhyb3VnaCB0aGVpciBvd24gcHJvZ3JhbW1pbmcgYXMgd2VsbCBhcyBvcGVuaW5nIHRoZWlyIGRvb3JzIHRvIG90aGVyIGNvbW11bml0eSBldmVudHMuCiJWb2x1bnRhcnkgYWRtaW5pc3RyYXRpb24gbWlnaHQgYmUgZm9yIHRocmVlIG1vbnRocywgaXQgbWlnaHQgYmUgMTIgbW9udGhzLCB0aGUgYWRtaW5pc3RyYXRvciBtaWdodCBkZWNpZGUgdGhlcmUgaXMgbm8gZnV0dXJlLiAKRGhvbmkgaGFzIGJlZW4gYSBub3RvcmlvdXNseSBzbG93IHN0YXJ0ZXIgaW4gVDIwIGNyaWNrZXQgb2YgbGF0ZSwgYnV0IGhlIHRlZWQgb2ZmIHJpZ2h0IGF3YXkgb24gV2VkbmVzZGF5IG5pZ2h0LiBIZSBkYXNoZWQgZG93biB0aGUgdHJhY2sgdG8gaGlzIHNlY29uZCBiYWxsIGFuZCBjYXJ0ZWQgUGF3YW4gTmVnaSBvdmVyIG1pZHdpY2tldCBmb3Igc2l4LiBBZ2FpbnN0IENoYWhhbCwgUm95YWwgQ2hhbGxlbmdlcnMgQmFuZ2Fsb3JlJ3MgZ3VuIGJvd2xlciwgdGhvdWdoLCBEaG9uaSBhZG9wdGVkIGEgbW9yZSBtZWFzdXJlZCBhcHByb2FjaCBhbmQgc2NvcmVkIHNldmVuIG9mZiBzZXZlbi4uIApCdXQgZ29vZCBqb2Igb24gZGVyYWlsaW5nIHRoaXMuIEkgbmV2ZXIgYnJvdWdodCB1cCB0aGUgc3ViamVjdCBvZiBpbmNlbHMgaGVyZSAgIC91L3QwXzBsIGlzIHRoZSBvbmUgd2hvIGRpZC4KRGF2aWQgQWxhbiBHcmllcjogSXQgd2FzIGJhbGxyb29tIG9yIGJ1c3QgZm9yIEdyaWVyLCB3aG8gaGFkIHRvIGRlY2lkZSB3aGV0aGVyIGhlIHdhbnRlZCB0byBiZSBhIHNob3dtYW4gb3IgYSByZWFsIGNvbnRlbmRlci4gCkJvdWdodCBpbiBmb3IgJDEwMCwgZ3JpbmRlZCBteSB3YXkgdXAgdG8gYWJvdXQgJDQwMCBhZnRlciBhIGZldyBob3VycywgdGhlbiBjb29sZXJlZCB0d28gcGVvcGxlIGluIGEgMyB3YXkgcG90IHRvIGdldCB1cCB0byAkMTIwMC4gUmlnaHQgYWZ0ZXIgdGhhdCBwb3QgaSBzdGFydGVkIHJhY2tpbmcgdXAsIGRpZG4gZXZlbiB0aXAgdGhlIGRlYWxlciBiZWNhdXNlIGkgZGlkbiBrbm93IGl0IHdhcyBhIGN1c3RvbSB0byBkbyB0aGF0IChJIHdhcyBqdXN0IHZpc2l0aW5nIFVTQSBhdCB0aGUgdGltZSkgYW5kIHdlbnQgYW5kIGNhc2hlZCBvdXQgYW5kIHdlbnQgZm9yIGEgc21va2UuClRoYXQncyBhd2Vzb21lISBIZSBzZWVtcyBsaWtlIGEgY29vbCBndXkuIApCZXdhcmV0aGVnYXAgIDQ0NSBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkkgZmVlbCBhIGJpdCBvZGQgd3JpdGluZyBoZXJlLiAKQ2VzIHN0YWdlcyBzZSBkcm91bGVudCBlbiBwZXRpdHMgZ3JvdXBlcyAodW5lIGRvdXphaW5lLCBlc3NlbnRpZWxsZW1lbnQgbGVzIG1tZXMpIGF2ZWMgdW4gZHZlbG9wcGVtZW50IHJlbGF0aW9ubmVsIHRycyByaWNoZSBldCB1biByZXRvdXIgb2JsaWcgc3VyIHNvaSBwZXJ0dXJiYW50IGV0IGVuIG1tZSB0ZW1wcyBxdWkgbm91cyBwZXJtZXQgZCdhdmFuY2VyICBncmFuZHMgcGFzIC4gVW4gc3RhZ2UgZW4gZGVob3JzIGRlcyBzZW50aWVycyBiYXR0dXMgIGZycXVlbnRlciBwYXIgdG91cyBsZXMgcGFzc2lvbm5zIGRlcyB0cmFpdGVtZW50cyBkZSBsYSBzcGhyZSBVcm9neW5jbyEgTmUgcGFzIHZlbmlyICBjZSBzdGFnZSBwb3VyIHkgdHJvdXZlciB1biBlbnNlaWduZW1lbnQgY2xhc3NpcXVlICwgbWNhbmlxdWUgLiBJbCBmYXV0IHNlIGxhaXNzZXIgcG9ydGVyIC4gCk9uY2UgeW91ciBiZWxseSBnZXRzIGxhcmdlLCB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byBsaWUgb24geW91ciBzdG9tYWNoIHdpdGhvdXQgaGVscC4gClRoZSByZWh5ZHJhdGlvbiBjbGF1c2UgZm9yIG9uZSB3b3VsZCBiZSBhIG1pc3Rha2UuIEtlbGwgaXMgaGFwcHkgd2l0aCBuZXcgdHJhaW5lciBKb2huIEZld2tlcyBhbmQgcGh5c2ljYWxseSBoZSBsb29rZWQgYnJpbGxpYW50LCB0aGUgYmVzdCBJJ3ZlIHNlZW4gaGltLCBidXQgY2FuIGhlIHJlYWxseSBtYWtlIHdlbHRlcndlaWdodD8gVGhleSB3ZXJlIGNvbnNpZGVyaW5nIGNvbWluZyBpbiBhdCAxNDdsYnMganVzdCB0byBwcm92ZSBhIHBvaW50LCBidXQgdG8gd2hvPwpOZXR3b3JraW5nIGNvdmVyYWdlIHdpbGwgaW5jcmVhc2UuIFdpcmVsZXNzIG5ldHdvcmtzIHdpbGwgYWN0IGFzIHRoZSBwcmltYXJ5IGFjY2VzcyBwb2ludCBmb3IgbW9zdCBkZXZpY2VzLiAKUmVtb3ZlIHRoZSByYWNrIGZyb20gdGhlIHJvYXN0aW5nIHBhbi4gUGxhY2UgdGhlIHJvYXN0aW5nIHBhbiBvdmVyIG1lZGl1bSBoZWF0IG9uIHRoZSBzdG92ZXRvcCAoeW91IG1heSBuZWVkIHR3byBidXJuZXJzKSBhbmQgYnJpbmcgdGhlIGp1aWNlcyB0byBhIHNpbW1lci4gCldlIGxpdmVkIDE0MDAgbWlsZXMgYXdheSBhbmQgc2hlIGlzIG15IGNsb3Nlc3QgZnJpZW5kIChub3QgZ2VvZ3JhcGhpY2FsbHksIG9idmlvdXNseSkgc28gYWxtb3N0IGFsbCBvZiBvdXIgY29tbXVuaWNhdGlvbnMgYXJlIGZhY2Vib29rIGNoYXQgYW5kIHNreXBlLi4gCkhlcmUgYXJlIGp1c3QgYSBmZXcgb2YgdGhlIGxlc3NvbnMgSSd2ZSBsZWFybmVkIHdoaWxlIGJlaW5nIGEgaG9ycmlibGUgYm9zcyBpbiB0aGUgcmluZyBhbmQgaG93IGRvaW5nIHRoZSBvcHBvc2l0ZSBoZWxwcyBtZSBiZSB0aGUgYmVzdCBib3NzIEkgY2FuIGJlIG91dHNpZGUgb2YgaXQuLiAKSXMgdGhlcmUgYSBsaW1pdCB0byB0aGUgImFsbCBpbiIgYXR0aXR1ZGUgZm9yIFRleGFzIEhvbGQnRW0gdG91cm5hbWVudHMgYmVpbmcgd2F0Y2hlZCBieSB0aGUgcHVibGljPyBXaXRoIHJldGFpbCBzYWxlcywgcmVjb3JkIHJhdGluZ3MgZm9yIHRlbGV2aXNpb24gYW5kIGNhYmxlIHBsdXMgYmlnIGJ1c2luZXNzIHBvdXJpbmcgbWlsbGlvbnMgaW50byBpdCwgdGhlIHRyZW5kIGlzIHN0aWxsIGNsZWFybHkgcmVmbGVjdGluZyB0aGUgdXBzd2luZy4gQW5kIGlmIHN0YXRlIGxlZ2lzbGF0aW9uIG1vdmVzIGluIGZhdm9yIG9mIHJlZ3VsYXRpb24gb2YgdGhlIG9ubGluZSBnYW1ibGluZyBpbmR1c3RyeSBmb3IgdGhlIHRheCByZXZlbnVlLCBpdCBtaWdodCBub3QgZ28gYXdheSBhbnl0aW1lIHNvb24uIApJIHN0b3BwZWQgYXQgU2FuIEFsYmVydG8gQ2FmICh0aGV5IGhhdmUgMiAzIG90aGVyIGxvY2F0aW9ucyBpbiB0aGUgY291bnRyeSkgICBJIGhhZCBhIGNvbGQgYnJldyBmb3IgdGhlIGhlbGwgb2YgaXQgKEkgYWxtb3N0IGFsd2F5cyBvcmRlciBsYXR0ZXMgb3IgbW9jaGFzKSwgYW5kIGl0IHdhcyBpbmNyZWRpYmx5IGxpZ2h0LCBmbGF2b3JmdWwgYW5kIHNvIHN3ZWV0IHRoYXQgSSBoYWQgdG8gYXNrIGlmIHRoZXknZCBwdXQgYW55IHN1Z2FyIGluIGl0LCB3aGljaCB0aGV5IGhhZG4ndC4gCkNlbnRyZSBkZSBCcmVzdCBEcGFydGVtZW50IFJFTSAoUmVzc291cmNlcyBwaHlzaXF1ZXMgZXQgY29zeXN0bWVzIGRlIGZvbmQgZGUgTWVyKSBVbml0IGRlIFJlY2hlcmNoZSAgIEdvc2NpZW5jZXMgTWFyaW5lcyBCUCA3MCAyOTI4MCBQTE9VWkFORSBUZWw6KzEgMiA5OCAyMiA0MiA0MApUaGF0IG1heSBiZSBtb3JlIGluZm8gdGhhbiB5b3Ugd2FudGVkLCBidXQgdGhhdCBpcyBhIHZlcnkgY29vbCB0aGluZyB0aGF0IHRoZXkgaGF2ZSBhbmQgSSBob3BlIHlvdSBjYW4gaGFuZyBvbnRvIGl0IGZvciBhIGxvbmcgdGltZTsgaXQgbG9va3MgbGlrZSBpdCBpcyBpbiBnb29kIHNoYXBlIGZvciBiZWluZyBhbG1vc3QgYSBjZW50dXJ5IG9sZC4KTHVuZ2U6IEZyb20gYSBzdGFuZGluZyBwb3NpdGlvbiwgd2l0aCB5b3VyIGZlZXQgdG9nZXRoZXIgYW5kIHRvZXMgcG9pbnRpbmcgZm9yd2FyZCwgImx1bmdlIiBmb3J3YXJkIHdpdGggeW91ciByaWdodCBmb290LiBLZWVwIHlvdXIga25lZXMgYmVudCBhbmQgeW91ciBjaGVzdCB1cCBhcyB5b3UgbHVuZ2UuIEJlIHN1cmUgeW91ciByaWdodCBoZWVsIHN0cmlrZXMgdGhlIGZsb29yIGJlZm9yZSB0aGUgcmVzdCBvZiB0aGUgZm9vdC4gCiJBIGxvdCBvZiBndXlzIHdlcmUgZW1vdGlvbmFsIFthc10gdGhleSB3ZW50IHRvIG1lZXQgaGltIG9uIHRoZSBzdGVwcywiIFBldGVyc29uIHNhaWQuICJJIHdhcyBwYWRkaW5nIHVwIHNvIEkgY291bGRuJ3Qgam9pbiB0aGVtLiBJJ20gcHJldHR5IGJ1bW1lZCBhYm91dCB0aGF0LiBCdXQgaXQgd2FzIHJlYWxseSBlbW90aW9uYWwsIGVzcGVjaWFsbHkgZm9yIHRoZSBndXlzIHdobyBoYXZlIHBsYXllZCB3aXRoIGhpbSBmb3IgYSBsb25nIHRpbWUuIEhlIGhhcyByYWlzZWQgdGhlIGJhciBhcyBmYXIgYXMgYWxscm91bmRlcnMgYXJlIGNvbmNlcm5lZC4gSXQgd2FzIGdyZWF0IHRvIHNlZS4iCkZpcnN0IEFtZW5kbWVudCB0byB0aGUgVW5pdGVkIFN0YXRlcyBDb25zdGl0dXRpb24KRGVhciBNaXNzIE5vc2UKVHJvdHogZGVzIG1vZGVybmVuIEFtYmllbnRlcyBncmVpZmVuIHZlcnNjaGllZGVuZSBNb3RpdmUgdW5kIE1hdGVyaWFsaWVuIHRyYWRpdGlvbmVsbGUgRWluZmxzc2UgYXVmLCBzbyB6dW0gQmVpc3BpZWwgZGVyIHRya2lzY2hlIE1hcm1vciwgZGVyIGluIGdlc2Nod3VuZ2VuZW4gRm9ybWVuIGRpZSBCZGVuIGRlciBncm96Z2lnZW4gZmZlbnRsaWNoZW4gRmxjaGVuIHppZXJ0LiAKR29pbmcgdG8gZG8gYSBab21iaWUgRHVzdCB0eXBlIGNsb25lIGJ1dCBJIGFtIHBsYW5uaW5nIG9uIHNwbGl0IGJhdGNoaW5nIGl0IHRvIHBsYXkgYXJvdW5kIHdpdGggZHJ5IGhvcHBpbmcgYSBiaXQuCkludHJvZHVjdGlvbiB0byBIb3cgdGhlIEdvb2dsZXBsZXggV29ya3MKQmUgY29uY2VybmVkLiBQcm90ZWN0IHlvdXJzZWxmLi4gCkJ1dCB0aGUgY2xhc2ggb2YgY3VsdHVyZXMgICB0aGVpcnMgYW5kIG91cnMgICBpcyBhIHRlYWNoYWJsZSBtb21lbnQgZm9yIG1lLiBObyBtYXR0ZXIgaG93IGNvbXBsZXggb3VyIGF3YXJlbmVzcyBvZiBnZW5kZXIsIHJhY2UsIGFuZCBuYXRpb25hbCBpZGVudGl0eSBpcywgdGhlIGtpbGxpbmcgb2Ygd29tZW4gZm9yIGJlaW5nIGRpc29iZWRpZW50IGlzIGFsd2F5cyB3cm9uZy4gCkknbSBvbGQgZW5vdWdoIHRvIHJlbWVtYmVyIHRoZSBjb250cm92ZXJzeSBpbiAxOTY3IHdoZW4gdGhlIFZpY2UgQ2hhbmNlbGxvciB0cmllZCB0byBiYW4gbWl4ZWQgZmxhdHRpbmcuIEluIHJldHJvc3BlY3QgaXQgY2FuIGJlIHNlZW4gYXMgdGhlIGxvY2FsIHN0YXJ0IG9mIGEgcGVyaW9kIG9mIG1ham9yIHNvY2lhbCBjaGFuZ2Ugd2hlbiBzdHVkZW50cyBzdGFydGVkIHRvIGFzc2VydCB0aGVpciByaWdodHMsIGFuZCB0aGUgdW5pdmVyc2l0eSByZWx1Y3RhbnRseSBzdGFydGVkIHRvIG1vZGVybml6ZS4uIApXZSB3b24ndCBiZSBhYmxlIHRvIGFjdGlvbiB0aGVtIGFsbCBhdCBvbmNlLCBidXQgd2Ugd2lsbCBkbyB3aGF0IHdlIGNhbi4gClRoZXkgaGF2ZSBkb25lIGlzIGJhc2ljYWxseSBwbGF5ZWQgYWxsIHRoZWlyIGNhcmRzIGF0IG9uY2UsIEplc3NvcCBzYXlzLiAKTm8gc2VyaWFsIG51bWJlciBvbiBzdHJhaWdodCBlZGdlLCByZXByb2R1Y2VyIGNsaXBzIGhhdmUgdHdvIHNjcmV3cyBlYWNoLCBBdXRvbWF0aWMgLiAKIlRoZSBDQkEgY29uc3BpcmFjeSB3YXMgYSBwcm9sb25nZWQgZnJhdWQgb2YgYnJlYXRodGFraW5nIHByb3BvcnRpb25zLCIgSnVkZ2UgTGFjYXZhIHNhaWQuICJUaGUgbGV2ZWwgb2YgZmFsc2lmaWNhdGlvbnMgYW5kIHNvbWUgb2YgdGhlIGRvY3VtZW50YXRpb24gc3VwcGxpZWQgdG8gdGhlIENCQSB3YXMgaGlnaCBhbmQgdGhlIGFjdGlvbiBvZiBnaXZpbmcgaXQgdG8gdGhlIGJhbmsgYXVkYWNpb3VzLiIgSnVkZ2UgTGFjYXZhIHNhaWQgdGhlIGJhbmsgZGlkIG5vdCBleGVyY2lzZSBkdWUgZGlsaWdlbmNlIGFuZCBwbGFjZWQgYSBoaWdoIGxldmVsIG9mIHRydXN0IGluIGEgbW9iaWxlIGxlbmRlciBuYW1lZCBFcHBzLCB3aG8gaGFkIHNpbmNlIGRpZWQuICJJdCB3YXMgYSB0cnVlIGNyaW1pbmFsIGNvbnNwaXJhY3ksIGEgbWVldGluZyBvZiBtaW5kcyBiZXR3ZWVuIHlvdSAoWmFpYSkgYW5kIEpvcmRhbm91LiIgQXVzdHJhbGlhbiBBc3NvY2lhdGVkIFByZXNzLiAKT0sgeW91J3JlIGFza2luZywgYnV0IGhvdyB3aWxsIHRoYXQgbWFrZSBtZSB3ZWFsdGh5PwpUaGUgb2ZmZXJpbmcgd2FzIGNvbXBsZXRlZCB0aHJvdWdoIGEgc3luZGljYXRlIG9mIGFnZW50cyBsZWQgYnkgQ2FuYWNjb3JkIEdlbnVpdHkgQ29ycCBhbmQgd2hpY2ggaW5jbHVkZWQgRGVzamFyZGlucyBTZWN1cml0aWVzIEluYy4KSWYgeW91IHdhbnQgdG8gY2hhbmdlIHRvIHVzaW5nIHN0b3J5IHBvaW50cyBpbnN0ZWFkIG9mIGR1cmF0aW9uLCB5b3UganVzdCBnb3QgdG8gc3RhcnQgZXN0aW1hdGluZyBpbiBzdG9yeSBwb2ludHMuIElmIHlvdSBzdGFydCBjaGFuZ2luZyB0aGUgc2NhbGUgZnJvbSBvbmUgdG8gdGhlIG90aGVyIHRoZW4gdmVsb2NpdHkgYmV0d2VlbiBzY2FsZXMgaXMgbm90IGdvaW5nIHRvIGJlIGNvbXBhcmFibGUgKGllIGRvbnQgZG8gaXQpLiAKQmVjYXVzZSBpdCBuZXZlciBiZXR3ZWVuIHRoZSBkZWFsZXJzIGFuZCB0aGUgY2FzaW5vLiBJZiB0aGUgY2FzaW5vcyBtYWtpbmcgbGVzcyBtb25leSB0aGUgZmluZCBhIHdheSB0byBnZXQgaXQgZnJvbSB0aGUgcGxheWVycy4gSXQgbGlrZSB0YXhlcy4gCkluIEFtZXJpY2EsIGZhY3RvcmllcyBzd2l0Y2hlZCBvdmVyIHRvIG1ha2luZyBtdW5pdGlvbnMgZWFybHkgaW4gdGhlIHdhciBiZWNhdXNlIHRoZSBtaWxpdGFyeSB3YXMgYnV5aW5nIHRob3NlIG11bml0aW9ucyBhdCBhdHRyYWN0aXZlIHByaWNlcy4gCkFyb21hdGhlcmFweSBpcyBjb21tb25seSB1c2VkIHRvIGFsbGV2aWF0ZSBzdHJlc3MsIGJ1dCBpdCdzIGFsc28gdXNlZnVsIGluIHRyZWF0aW5nIHNsZWVwIGRpc29yZGVycy4gCkF0IHN0YWtlIGZvciBMeW5jaCwgd2hvIGlzIGluIHRoZSBtaWRzdCBvZiBhIHN0b3J5bGluZSBrbmVlIGluanVyeSwgaXMgYSBzaG90IGF0IFJvdXNleSB0aXRsZSBpbiB0aGUgbWFpbiBldmVudCBvZiBXcmVzdGxlTWFuaWEuIFdpdGggYSB3aW4gb3ZlciBDaGFybG90dGUgRmxhaXIsIHNoZSB3aWxsIHB1bmNoIGhlciB0aWNrZXQgdG8gYSB0aHJlZSB3YXkgZGFuY2Ugd2l0aCBUaGUgUXVlZW4gYW5kIFJvdXNleSBhdCBNZXRMaWZlIFN0YWRpdW0uIApEZW5uIHZvbiBBdGhlbiBhdXMgZiBrZWluZSBGIGF1ZiBkaWUgU3BvcmFkZW4uIFdvbWl0IGFiZXIgenVtaW5kZXN0IHNjaG9uIGVpbm1hbCBnZWtsIHcgZGFzcyBlcyBzaWNoIGJlaSBkZW4gU3BvcmFkZW4gdW0gZ3JpZWNoaXNjaGUgSW5zZWxuIGhhbmRlbHQuIApJIHVuZGVyc3RhbmQgdGhlICJpdCB3YXMgaGVyIGNob2ljZSB0byBoYXZlIGtpZHMsIG5vdCBteSBjaG9pY2UgdG8gaGVhciBhIGNyeWluZyBiYWJ5IiBhcmd1bWVudCBidXQgSSBkb24gYnV5IGl0LiBTaGUgYW5kIGhlciBiYWJ5IGhhdmUganVzdCBhcyBtdWNoIHJpZ2h0IHRvIHRoZSBmbGlnaHQgYXMgYW55IG90aGVyIHBheWluZyBjdXN0b21lciwgYW5kIGlmIHdlIGNhbiBtYWtlIHNvY2lhbCBhbGxvd2FuY2VzIGZvciBhIGNyeWluZyBiYWJ5LCB0aGVuIGl0IG5vIHdvbmRlciBvdXIgc29jaWV0YWwgYmlydGhyYXRlcyBhcmUgcGx1bW1ldGluZy4gQW4gYWlycGxhbmUgaXNuIGEgbGlicmFyeSBub3IgYSBob3RlbDsgaXQgYSBtb2RlIG9mIHRyYW5zcG9ydCBmb3IgaHVuZHJlZHMgb2YgdmFyaW91cyB0eXBlcyBvZiBwZW9wbGUsIGluY2x1ZGluZyBsaXR0bGUgYmFiaWVzIHdobyBsaWtlbHkgaGFkIHRoZWlyIHJvdXRpbmUgZGlzcnVwdGVkIG5vdCB0byBtZW50aW9uIGFyZSBzZWFsZWQgaW4gYSB2ZXJ5IGRyeSBhaXIgZW52aXJvbm1lbnQgd2l0aCBtYWpvciBmbHVjdHVhdGlvbnMgaW4gYWlyIHByZXNzdXJlIG9uIHNlbnNpdGl2ZSBlYXJzLgpObyBzdWNoIGx1Y2sgdGhleSBhbGwgaGF2ZSBsaXZlcy4gUGVvcGxlIGFyZSBhbHdheXMgdG9vIGJ1c3kgd2hlbiBzb21lb25lIHJlYWxseSBuZWVkcyBhIGRpc3RyYWN0aW9uIGZyb20gcmVhbGl0eS4uIApZb3VyIGhlYXJ0IGlzIHNldCBvbiBQb2xlIEJyaWRnZSwgQ2hpZWYgTW91bnRhaW4gVGF4aSBhbmQgaXMgcmVsaWFibGUgYW5kIGluIG15IGV4cGVyaWVuY2UgYXJlIGdvb2QgZHVkZXMgd2hvIHdpbGwgZ2l2ZSB5b3UgYSBsb3Qgb2YgbmF0aXZlIGhpc3Rvcnkgb24gdGhlIGFyZWEgaWYgeW91IGFzayAoWW91IGFyZSBwcm9iYWJseSBsb29raW5nIGF0IGEgbWluaW11bSBvZiAkMTAwIG9uIHRoYXQgY2FiIHJpZGUpLiBJZiB5b3Ugd2FudGVkIHRvIGF2b2lkIHRoZSB3aG9sZSBoaWtlIG5vcnRoIHRvIHRhZyB0aGUgYm9yZGVyIGRlYWwsIENoaWVmIE1vdW50YWluIFRheGkgd2lsbCBhbHNvIHRha2UgeW91IGludG8gQ2FuYWRhIHRvIHN0YXJ0IGluIFdhdGVydG9uIHNvIHlvdSBhcmUganVzdCBoaWtpbmcgc291dGggYWZ0ZXIgdGhlIGNoZWNrIGluIHdpdGggY3VzdG9tcyBhdCBHb2F0IEhhdW50LiBTaW5jZSB0aGV5IGFyZSBiYXNlZCBpbiBTdC4gCldoZXJlOiBIYW1pbHRvbiBTdC4gYW5kIEJpbGwgQ3VydGlzIFNxdWFyZUJvdGggYSBncmVhdCBmcmVlIGZhbWlseSBldmVudCBhbmQgYSBkYXRlIG5pZ2h0IHN0cm9sbCwgdGhpcyBpcyB0aGUgMTAgeWVhciByZXVuaW9uIG9mIHRoZSBsaWdodCBhcnQgdGVjaG5vbG9neSBzaG93Y2FzZSB0aGF0IHJhbiAyMDA5IHRvIDIwMTIuIFRha2luZyBwbGFjZSBvbiBIYW1pbHRvbiBTdHJlZXQgYmV0d2VlbiBEcmFrZSBhbmQgRGF2aWUgYW5kIHdlbGwgYXMgYSBzdXJwcmlzZSBzcG90IGF0IHRoZSBDYW5hZGEgTGluZSBSb3VuZGhvdXNlIFN0YXRpb24sIHRoZXJlIHdpbGwgYmUgbnVtZXJvdXMgaW5zdGFsbGVkIGxpZ2h0IGRpc3BsYXlzIHRvIGVuam95LiBBbW9uZyB0aGUgZGlzcGxheXMgaXMgRmxvdyAocGljdHVyZWQpLCBhIGxhcmdlIHNjdWxwdHVyZSB3aXRoIDIsMDAwIGNvbnRyb2xsYWJsZSBsaWdodHMgdGhhdCByZWFjdCB0byBtdXNpYy4gVGhlIGF1ZGllbmNlIGNhbiBhbmltYXRlIHRoZSBsaWdodHMgYWxvbmcgdG8gdGhlIHR1bmVzIHdpdGggYW4gb2xkIHNjaG9vbCBhbmFsb2cgam95c3RpY2suIE1hbnkgb2YgdGhlIGV4aGliaXRzIGhhdmUgaW50ZXJhY3RpdmUgYXNwZWN0cy4gU2hpbmUgb24sIHlvdSBjcmF6eSBuZWlnaGJvdXJob29kLgpXaGVuIHlvdSBiZWdpbiB0byByZXZpZXcgdGhlIGV2aWRlbmNlIHN0YWNrZWQgdXAgYWdhaW5zdCB3aG9sZSBncmFpbnMsIGl0IGJlY29tZXMgcmF0aGVyIHNlbGYgZXZpZGVudCB0aGF0IG91ciByZWxpYW5jZSBvbiB3aGVhdCBhbmQgb3RoZXIgZ3JhaW5zIG1heSBiZSBvbmUgb2YgdGhlIHByaW1hcnkgY3VscHJpdHMgZm9yIHRoZSBwb29yIGhlYWx0aCBvZiBzbyBtYW55LgpWaW9sYXRlZERvbHBoaW4gIDUyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KTG9zaW5nIHRoYXQgY2hpbGQgaXMgbm90IGEgcG9zaXRpb24geW91IHdhbnQgdG8gZmluZCB5b3Vyc2VsZiBpbi4iLiAKV2F5IHNtYWxsZXIuIGlzIGRpZmZpY3VsdCB0byBwdXQgaW50byB1bmRlcnN0YW5kYWJsZSB0ZXJtcyBvbiBob3cgInNtYWxsIiB0aGF0IHNtYWxsIGlzOiBhdG9taWMgbnVjbGV1cyBpcyBzb3J0IG9mIDEvMTAsMDAwdGggb2YgdGhlIGF0b20sIGFuZCBhIHByb3RvbiBvciBuZXV0cm9uIHNtYWxsZXIgc3RpbGwsIGFuZCB0aGVuIHRoZSBxdWFyayBzbWFsbGVyIHRoYW4gdGhhdCwgdW50aWwgcGVyaGFwcyBpdCBiZWNvbWVzIGEgU2V1c3NpYW4gZXhlcmNpc2Ugd2l0aCBmdXR1cmUgZGlzY292ZXJpZXMgc2hvd2luZyB0aGF0IGFmdGVyIGV2ZXJ5dGhpbmcgaXMgc2FpZCBhbmQgZG9uZSB0aGF0IGl0IGlzIHR1cnRsZXMgYWxsIHRoZSB3YXkgZG93bi4gClNvIHRoZSBvbmx5IHdheSBhIGhpZ2hlc3QgcGF5aW5nIG1lbWJlciBnZXRzIGEgcmVkdWN0aW9uIGlzIHdpdGggYSByZWZlcnJhbCwgd2hpbGUgYW55b25lIGVsc2Ugd2hvIGp1c3QgYXNrcyB0byB1cGdyYWRlIHRoZWlyIG1lbWJlcnNoaXAgZ2V0cyBpdCBhdCBhIHJlZHVjZWQgcmF0ZSBsb3dlciB0aGFuIHRoZSBoaWdoZXN0IHBheWluZyBtZW1iZXIuIFR3byB5ZWFycyB3aXRoIHRoZW0uIApJdCdzIGEgc2lsZW50IHN0cnVnZ2xlLiBXaGF0IHRoZSBtYXNzIGFwcGVhcnMgdG8gYmUgZ29pbmcgdGhyb3VnaCBpcyBhbiBhdHRlbnRpb24sIG9yIGxhY2sgb2YgYXR0ZW50aW9uLCBkaXNvcmRlci5NYXliZSB0byB0cnkgdG8gZmlndXJlIGl0IG91dDsgdGVsbCB5b3Vyc2VsZiB5b3UgbG92ZSB5b3UsIGFuZCB0aGF0IHlvdSBhcmUgaGFwcHkuIApUaGUgZGlmZmVyZW5jZSBpcyBpbiBhc3NhdWx0IHdpdGggYSB3ZWFwb24gdnMgYXNzYXVsdCB3aXRoIGEgZGVhZGx5IHdlYXBvbi4gRm9yIGV4YW1wbGUgbXkgd2VhayBhc3MgcHVuY2hlcyB3b3VsZCBiZSBhc3NhdWx0IHdpdGggYSB3ZWFwb24uIE1pa2UgVHlzb24gcHVuY2hlcyB3b3VsZCBiZSBhc3NhdWx0IHdpdGggYSBkZWFkbHkgd2VhcG9uLiBBbnlvbmUgd2l0aCBlbm91Z2ggbWFydGlhbCBhcnRzIHRyYWluaW5nIHdvdWxkIGJlIGhlbGQgYWNjb3VudGFibGUgYnkgdGhlIGNvdXJ0IGZvciBub3QgYXR0ZW1wdGluZyB0byBkZWVzY2FsYXRlIG9yIGF2b2lkIGNvbWJhdC4gVGhhdCBub3QgdGhlIG9ubHkgY2lyY3Vtc3RhbmNlIHdoZXJlIHNvbWVvbmUgd291bGQgYmUgY2hhcmdlZCB3aXRoIEFEVyB0aG91Z2guIFdoZXRoZXIgb3Igbm90IHNvbWVvbmVzIGZpc3RzIGNvdWxkIGJlIGNvbnNpZGVyZWQgZGVhZGx5IHdvdWxkIGJlIHRoZSBkZWJhdGUgYmV0d2VlbiB0aGUgcGxhaW50aWZmIGFuZCBkZWZlbmRhbnQuClRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGFuIGFjZSB3aGVuIG9uZSBjYXJkIGlzIHJhbmRvbWx5IHBpY2tlZCBmcm9tIGEgcGFjayBpcyA0LzUyID0gMS8xMy4gKEZ1bGwgQW5zd2VyKS4gCk9uIHNvbWUgb2YgbXkgaG9iYmllcywgZXNwZWNpYWxseSBGYW5kb21zLCBJIHRlbmQgdG8gZ28gaW50byB3aGF0IEkgY2FsbCAibW9kZXMiIGZvciBtb250aHMgYXQgYSB0aW1lLiBJIGhhdmUgYSBidW5jaCBvZiBGYW5kb21zIHRvIHBpY2sgZnJvbSBhbmQgdGhleSB1c3VhbGx5IGNvbWUgYWJvdXQgZnJvbSBhIGxhcmdlIGV2ZW50IGluIHRoZSBGYW5kb20sIG9yIGFmdGVyIEkgZmlyc3QgZGlzY292ZXJlZCBpdC4gCkZhc3QgYm93bGVyIFNoYXVuIFRhaXQgbWFkZSBoaXMgVGVzdCBkZWJ1dCBkdXJpbmcgdGhlIEFzaGVzIHNlcmllcyBvZiAyMDA1IGFuZCB3YXMgcmVhc29uYWJseSBhc3N1cmVkIHRocm91Z2hvdXQuIFVuZm9ydHVuYXRlbHksIGFzIGEgcmVzdWx0IG9mIGluanVyaWVzIGFuZCBiYWQgbHVjaywgdGhlIGJvd2xlciB3b3VsZCBvbmx5IGV2ZXIgcGxheSBvbmUgbW9yZSBUZXN0IG1hdGNoIGZvciBBdXN0cmFsaWEuIEhlIGlzIG1hcnJpZWQgdG8gYW4gSW5kaWFuIHN3aW1zdWl0IG1vZGVsIE1hc2hvb21hIFNpbmdoYSBhbmQgcmVjZW50bHkgcGxheWVkIGluIHRoZSBBdXN0cmFsaWFuIEJpZyBCYXNoIFQyMCBMZWFndWUuIEVuZ2xpc2ggY291bnR5IHNpZGUgRXNzZXggaGF2ZSBhbHNvIHNpZ25lZCBoaW0gdXAgZm9yIHRoZSBUMjAgQmxhc3QgdGhpcyBzZWFzb24uCkRlc3BpdGUgbXkgc3VwcG9ydCBhbmQgYWR2b2NhdGluZyBmb3IgaGltIHdpdGggaGVhbHRoIGNhcmUgcHJvZmVzc2lvbmFscyBhbmQgaGlzIGZhbWlseS4gSSBhbHNvIGEgc29jaWFsIHdvcmtlciBzbyBJIGdvbm5hIGJlIHRoYXQgZ2lybCwgYnV0IGFzIEkgc3RhcnRlZCBteSBjYXJlZXIgSSBncmV3IG1pc2VyYWJsZSBhbmQgZXZlbnR1YWxseSBmZWx0IHNvIGJ1cm50IG91dCBJIHdhcyBnZXR0aW5nIGRlcHJlc3NlZC4gCiJZb3UgY2FuIGRvIHRoYXQsIGp1c3QgdGhyb3cgbnVtYmVycyBvdXQgYWJvdXQgaG93IG11Y2ggeW91IGFyZSBnb2luZyB0byByYWlzZSBhbmQgZG9uYXRlIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGZ1dHVyZSwiIGEgc291cmNlIGNsb3NlIHRvIFdhcm5lIHNhaWQuICJGdWxmaWxsaW5nIHRoYXQgcHJvbWlzZSBjb3VsZCBoYXZlIHB1dCB0aGUgc29sdmVuY3kgb2YgdGhlIGZvdW5kYXRpb24gYXQgcmlzay4iIERlc3BpdGUgdGhlIHByb2JsZW1hdGljIG1hdGhzLCB0aGUgZmluYW5jaWFsIHBsZWRnZSB3YXMgdGhlIGNlbnRyZXBpZWNlIGluIGEgc2VyaWVzIG9mIGFubm91bmNlbWVudHMgbWFkZSBhdCBhIHByZXNzIGNvbmZlcmVuY2UgYXQgQ3Jvd24gQ2FzaW5vIG9uIERlY2VtYmVyIDIxLiAKQSBsaXR0bGUgYml0IG9mIGEgaGlzdG9yeSBsZXNzb24gZm9yIHlvdS4gQmVmb3JlIHRoZSAxOTcwcywgbm8gb25lIGNhcmVkIGFib3V0IGhlcnBlcy4gSXQgd2FzIGEgdGhpbmcgdGhhdCBzb21ldGltZXMgaGFwcGVuZWQgYW5kIG5vIG9uZSByZWFsbHkgdGhvdWdodCB0d2ljZSBhYm91dC4gCkZpbmQgdGlwcyBhbmQgbW9yZSBpbmZvIGF0IEplc3NpY2EgQXJtYnJ1c3Rlci4gClN1YnNlcXVlbnRseSwgSSBhbSByZXF1aXJlZCB0byBzZW5kIHRoZSBiYWxhbmNlIGJhY2sgaW50byBlc2Nyb3csIHdoaWNoIHdpbGwgYmUgcmVmdW5kZWQgdG8gdGhlIHNlbGxlci4gClRoZSBzcG9ydHMgYmV0dGluZyBzZXJ2aWNlIGNhbiBiZSB1c2VkIHdpdGggdGhlIGhlbHAgb2YgYW55IG1vYmlsZSBoYW5kc2V0LlNwb3J0cyBhbmQgSW4gUGxheVdpdGggYWxsIHRoZSB0cmFkaXRpb25hbCBmb3JtcyBvZiBiZXR0aW5nIFVuaWJldCBjYW5ub3Qgc3VycHJpc2UgeW91IG9yIGNvdWxkIGl0PyBXaXRoIGFuIGFtYXppbmcgcmFuZ2Ugb2YgZXhvdGljcyBhbmQgc3BlY2lhbCBiZXRzIHRoYXQgd2VyZSB0YWlsb3JlZCBhY2NvcmRpbmcgdG8gdGhlIHRlbmRlbmNpZXMgb2YgVW5pYmV0J3MgcHVudGVycywgVW5pYmV0IGNhbiBzdXJwcmlzZSB5b3UgZm9yIHN1cmUuIApYeHJ1cnV4eCAgNTIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCllvdSBnaXZlIDMgbGlua3MsIGFsbCBnb2luZyBiYWNrIHRvIHRoZSBzYW1lIHRoaW5nOiBDb25zY3JpcHRlZCBtZW4gaW4gbm9ydGhlcm4gRXVyb3BlIGhhdmUgYmVlbiB0YWtpbmcgdGhlIHRlc3RzIGxlc3Mgc2VyaW91c2x5LiBXaGVuIEkgd2FzIGNvbnNjcmlwdGVkIGF0bGVhc3QgaGFsZiB0aGUgZ3JvdXAgcnVzaGVkIHRocm91Z2ggdG8gZWl0aGVyIGdldCBsb3cgc2NvcmVzIG9uIHB1cnBvc2UgKHRvIGF2b2lkIGJlaW5nIGRyYWZ0ZWQpIGFuZC9vciB0byBnZXQgaG9tZSBmYXN0ZXIuIApUaGUgbGFuZCB3b3VsZCBhbGxvdyBmb3IgdGhlIGRldmVsb3BtZW50IG9mIDQyIGhvdXNpbmcgbG90cyB3aGljaCBpdCBpcyBob3BlZCB3aWxsIG1ha2UgYSBwcm9maXQgb2YgJDVtaWxsaW9uIG9uY2UgZGV2ZWxvcG1lbnQgY29zdHMgYXJlIHRha2VuIGludG8gYWNjb3VudC4gCk15IHBvaW50IHRvIE9QIGlzIG5vdCB0cnlpbmcgdG8gc2F5ICJ5b3UgYmUgZmluZSB3aXRoIHNvbWUgbWVkcyIgYnV0IG1vcmUgInlvdSBub3QgZ29pbmcgdG8gYmUgYSBkcnVnZ2VkIG91dCB6b21iaWUgaWYgeW91IGdldCBoZWxwLiBZb3UgYmUgYW4gdW5tb3RpdmF0ZWQgZ3JleSBibG9iIGlmIHlvdSBkb24ga2VlcCBvbiB0aGlzIGhvcnJpYmxlIGpvdXJuZXkgeW91IGFscmVhZHkgc3RhcnRlZCIKVGxkcjsgaGVyIGluc3RhbnQgaG9uZXN0eSBjYW4gYmUgdHJ1c3RlZCBpbW8KUG9tb25hIGNhcnJpZXMgYSBwcnVuaW5nIGtuaWZlIGluIG9uZSBoYW5kIGFuZCB0aGUgaG9ybiBvZiBwbGVudHkgaW4gdGhlIG90aGVyLiBXaGlsc3Qgd2UgdGFrZSBzdG9jayBhbmQgcmVtb3ZlIHdoYXQgd2Ugbm8gbG9uZ2VyIG5lZWQsIGl0IGlzIHNvbWV0aW1lcyB0aGUgZWFzaWVyIHBhdGggdG8gdGhpbmsgbmVnYXRpdmVseSByYXRoZXIgdGhhbiBwb3NpdGl2ZWx5LiBXaGlsc3Qgd2Ugc3RydWdnbGUgd2l0aCBsZXR0aW5nIGdvIGF0IHRpbWVzLCBvdXIgbmF0dXJhbCByZXNlcnZlcyBvZiBwb3NpdGl2ZSBwbGVudHkgbWF5IHdhbmUgYW5kIHdlIG1heSBmZWVsIHN0YWduYW50IGZvciBhIHRpbWUuIApMb3VpcywgTWlzc291cmkgb24gSnVuZSA4LCAyMDEyLCBkdXJpbmcgYSBwcmUgbWVldCB3YXJtIHVwIGR1cmluZyBoZXIgZmxvb3Igcm91dGluZS5TaGUgZGlkIHRocmVlIGZsaXBzIGluIHRoZSBhaXIsIGxhbmRlZCBvbiBoZXIgYmFjaywgYW5kIGhpdCBoZXIgaGVhZCBzbyBoYXJkIHRoYXQgaGVyIG5hc2FsIGJvbmUgZnJhY3R1cmVkIGFuZCBzaGUgd2FzIGxlZnQgd2l0aCBhIHNldmVyZSBjb25jdXNzaW9uLi4gClRoZSBkaWZmZXJlbmNlIGJldHdlZW4gY2FzaW5vIHN0eWxlIGdhbWluZyBhbmQgcG9rZXIgaXMgdGhhdCB0aGUgY2FzaW5vIGhhcyBzZXQgdXAgdmFyaW91cyB3YXlzIGZvciB5b3UgdG8gd2FnZXIgbW9uZXksIGFnYWluc3QgdGhlIG9kZHMsIGhvcGluZyBmb3Igc29tZSBlYXN5IG1vbmV5LiBXaGVuIHlvdSBhcmUgcGxheWluZyBwb2tlciAoYW5kIEkgZG9uIG1lYW4gMyBDYXJkIFBva2VyLCBDYXJyaWJlYW4gU3R1ZCwgZXRjLiwgSSBtZWFuIHRyYWRpdGlvbmFsIHBva2VyLCBwbGF5ZWQgYWdhaW5zdCBsaXZlIG9wcG9uZW50cykgeW91IGFyZW4gcGxheWluZyBhZ2FpbnN0IHRoZSBjYXNpbm8sIHlvdSBhcmUgcGxheWluZyBhZ2FpbnN0IG90aGVyIHBlb3BsZSBqdXN0IGxpa2UgeW91LiBBbiBlZHVjYXRlZCwgZGlzY2lwbGluZWQgcGxheWVyIGhhcyBhIGJpZyBlZGdlIGFnYWluc3QgYSBwbGF5ZXIgd2hvIGlzIHRoZXJlIGZvciBzaW1wbGUgcmVjcmVhdGlvbiwgb3IganVzdCB0byBnYW1ibGUsIHdpdGhvdXQgcmVnYXJkIGZvciBvZGRzIGFuZCBwcm9iYWJpbGl0eS4gQWZ0ZXIgdGhlIGZpcnN0IHRpbWUgeW91IHZpc2l0LCB5b3Uga25vdyBleGFjdGx5IGhvdyBtdWNoIGlzIHRoZSBtYXhpbXVtIHlvdSBsb3NlIGVhY2ggdGltZSB5b3UgcGxheSwgYW5kIG9uY2UgaW4gYSB3aGlsZSB5b3Ugd2luLiBCdXQgeW91IFdJTEwgbG9zZSwgdW5sZXNzIHlvdSBvbmx5IHBsYXkgYWdhaW5zdCBvdGhlciBnYW1ibGVycyBhbmQgYXJlIG11Y2ggYmV0dGVyIHRoYW4gdGhleSBhcmUsIGJlY2F1c2Ugb3ZlciB0aGUgbG9uZyBoYXVsIGV2ZXJ5Ym9keSBnZXRzIGFzIG1hbnkgZ29vZCBhbmQgYmFkIGNhcmRzIGFzIGV2ZXJ5Ym9keSBlbHNlIGFuZCB0aGUgaG91c2UgdGFrZXMgYSBwZXJjZW50YWdlIHRvIGNvdmVyIGV4cGVuc2VzLgpJdCBpbnRlcmVzdGluZy4gU2luY2UgSSBkbyBnZW5lYWxvZ3kgSSBhbHNvIGFza2VkIG15c2VsZiBtYW55IHRpbWVzIGhvdyBmYXIgYmFjayB3ZSBjYW4gZ28uIExpa2Ugd2hhdCBpcyB0aGUgbG9uZ2VzdCBibG9vZGxpbmUgd2UgY2FuIHRyYWNlIChub3QgZHluYXN0eSwgbm90IHJveWFsLCBhbnkgZmFtaWx5KT8gVGhlIGFuc3dlcnMgdGhhdCBJIGZvdW5kIHdhcyBDb25mdWNpdXMgYW5kIFJhbXNlcyBJSSAocGVvcGxlIGZvdW5kIG91dCB0aGV5IGFyZSBsaWtlbHkgZGVzY2VuZGFudHMgZnJvbSBoaW0sIGhlIGhhZCAxMDAgY2hpbGRyZW4pLiBFdmVuIGlmIHRoYXQgd3JvbmcsIEkgdGhpbmsgdGhlIG9sZGVzdCBsaW5lcyB3ZSBjYW4gdHJhY2UgYmFjayBhcmUgdGhvc2UgdG8gRWd5cHQgYmVjYXVzZSwgd2VsbCwgd2Uga25vdyBwZW9wbGUgdGhhdCBsaXZlZCBpbiBFZ3lwdCBpbiB0aGF0IHRpbWUgWEQgVGhleSBhcmUgZ29pbmcgdG8gbWFrZSBtb3JlIEROQSBhbmFseXNpcyBvZiBFZ3lwdGlhbiBraW5ncyBhbmQgd2Ugd2lsbCBiZSBhYmxlIHRvIHByb29mIGl0LiBCeSB0aGUgd2F5IHRoZSBvbGRlc3QgcHJvdmVuIHJlbGF0aW9uIHdhcyBmb3VuZCBpbiBteSBzdGF0ZSBpbiBHZXJtYW55LiBETkEgYW5hbHlzaXMgb2Ygc2tlbGV0b25zIHNob3dlZCB0aGF0IHBlb3BsZSBpbiBhIG5lYXJieSB2aWxsYWdlIGFyZSBkaXJlY3QgZGVzY2VuZGFudHMgb2YgMywwMDAgeWVhcnMgb2xkIHBlb3BsZS4gVGhleSBldmVuIG1hZGUgcGljdHVyZXMgb2YgaG93IHRoZXNlIGFuY2VzdG9ycyBsb29rZWQgbGlrZSB3aGVuIHRoZXkgd2VyZSBhbGl2ZS4gUHJldHR5IGNvb2whCkhlIGFsc28gZm91bmQgc2VuaW9yIGxlYWRlcnMgYXBwcm9hY2hhYmxlIGFuZCBzdXBwb3J0aXZlICAgZXZlbiB3aGVuIHdvcmtpbmcgaW4gYSByZWdpb25hbCBvZmZpY2UuICJBbmQgdGhleSBwdXNoIHRoZWlyIHBlb3BsZSB0byBncm93IGFuZCBkZXZlbG9wLCIgc2F5cyBUaGVpc2VuLiAiVGhleSBjaGFsbGVuZ2UgeW91IHRvIGdldCBvdXQgb2YgYSBsaW5lYXIgY2FyZWVyIHBhdGggYW5kIHRoaW5rIGFib3V0IHNraWxsIHNldHMgeW91IG1heSBub3Qga25vdyB5b3UgaGFkLCIgaGUgYWRkcy4gClNlbWkgYmx1ZmZpbmc6IFNlbWkgYmx1ZmZpbmcgaXMgYSB3YXkgdG8gd2luIGEgaGFuZCBpbiB0d28gd2F5cy4gQSBzZW1pIGJsdWZmIGxldHMgeW91IGVpdGhlciB3aW4gdGhlIGhhbmQgdGhlcmUgYW5kIHRoZW4gb3Igd2luIHRoZSBoYW5kIGJ5IGhpdHRpbmcgeW91ciBoYW5kLiBZb3Ugc2hvdWxkIHVzZSB0aGUgc2VtaSBibHVmZiB3aGVuIHlvdSBoYXZlIGEgZmx1c2ggZHJhdyBvciBhIHN0cmFpZ2h0IGRyYXcuIApXaGVuIGl0IGNvbWVzIHRvIGdhbWJsaW5nIGFkZGljdGlvbnMsIERyLiBDYXNzZWwgc2F5cyBtYWxlcyBhcmUgbW9yZSBsaWtlbHkgdG8gZ2V0IGhvb2tlZCBvbiB0aGUgdGFibGUgZ2FtZXMgbGlrZSBwb2tlciBhbmQgcm91bGV0dGUgd2hpbGUgd29tZW4gdGVuZCB0byBncmF2aXRhdGUgdG93YXJkIHNsb3QgbWFjaGluZXMuClRvIGNyZWF0ZSB0aGlzIGFydGljbGUsIDI0IHBlb3BsZSwgc29tZSBhbm9ueW1vdXMsIHdvcmtlZCB0byBlZGl0IGFuZCBpbXByb3ZlIGl0IG92ZXIgdGltZS4gCllvdSBzZWUgaG93IHF1aWNrbHkgSSB3YXMgYWJsZSB0byB0eXBlIGl0IG91dCwgc28gaXQncyBub3QgbGlrZSBpdCB0YWtlcyB1cCB0b28gbXVjaCBzcGFjZSB0byBiZSBhIGNvbnN0cnVjdGl2ZSBlbGVtZW50IGluIGEgRnVsbCBUaWx0IFBva2VyIHJldmlldy4uIApTbWFsbGVyIHBva2VyIHNpdGVzIGFsc28gaGF2ZSB0aGVpciBvd24gYWR2YW50YWdlcy4gRm9yIGV4YW1wbGUsIHRoZXkgbWlnaHQgaGF2ZSBmZXdlciBwZW9wbGUgb25saW5lIGJ1dCB0aGV5IGFyZSBnZW5lcmFsbHkgYW1hdGV1cnMuIFRoZXJlZm9yZSwgaXQgY2FuIGJlIHdvcnRoeSB0byBwbGF5IHdpdGggZmV3IGFuZCBtb3N0bHkgdGVycmlibGUgcG9rZXIgcGxheWVycy4gCk1vc3Qgc2NpZW50aWZpYyBmaWVsZHMgaGF2ZSBiZWVuIG1hZGUgb3ZlciB3aXRoIGEgcmV2b2x1dGlvbmFyeSB0aGVvcnkgYXQgbGVhc3Qgb25jZSBpbiByZWNlbnQgY2VudHVyaWVzLiBTdWNoIG1ha2VvdmVycywgb3IgcGFyYWRpZ20gc2hpZnRzLCByZW9yZGVyIG9sZCBrbm93bGVkZ2UgaW50byBhIG5ldyBmcmFtZXdvcmsuIApUcmFkZSBjaGF0IGlzIGEgbWVzcyBhbmQgdG8gdXNlIHRoYXQgdG8gc2F5IHRoYXQgIm9oIGJ1dCB0ZWNobmljYWxseSBwbGF0IGlzIGZyZWUiIGlzIGtpbmRhIGRpc2hvbmVzdC4uIApMb3cgbWVtYmVyc2hpcCBudW1iZXJzIGhhZCBhbHNvIGhhZCBhbiBpbXBhY3QgICB0aGUgY2x1YiBoYXMgMTc3NSBtZW1iZXJzLiAiSSBrbm93IHlvdSBndXlzIGRvIHRoZSBiZXN0IHlvdSBjYW4sIGJ1dCB3ZSBkbyBuZWVkIGZyZXNoIGZhY2VzLCIgTXIgV2lsbGlhbXMgdG9sZCB0aGUgbWVldGluZy4gIkkga25vdyB0aGUgbWVtYmVycyB3aG8gYXJlIGxveWFsIGFuZCB0aGUgd29yayB0aGV5IGRvLCBidXQgbWF5YmUgd2UgbmVlZCB0byBjaGFuZ2UgZGlyZWN0aW9uIGFuZCBnZXQgbmV3IHBlb3BsZSB0byBjb21lIGluIGFuZCBoYXZlIGEgbG9vay4gClBvdXJxdW9pIGFsaW1lbnRlciB1biBkYmF0IHBvbGl0aXF1ZSB2b2lyZSB1bmUgY3Jpc2UgcG9saXRpcXVlLCBhbG9ycyBxdWUgbCdvbiBuJ2VzdCBtbWUgcGFzIGNlcnRhaW4gZGUgc29uIGludHJ0LiAKTmVpbiwgZHUgZGFyZnN0IGtlaW5lbiBCbGljayBkYXJhdWYgd2VyZmVuLiAKQ2hpbmEgaXMgZG9taW5hdGluZyBBZnJpY2EgaW4gd2F5cyB0aGF0IEtpbmcgTGVvcG9sZCB3b3VsZCBoYXZlIGJlZW4gamVhbG91cyBvZi4gVGhleSBhcmUgbG9hbiBzaGFya2luZyB0aGUgdGhpcmQgd29ybGQgYW5kIHRoZW4gb3duaW5nIGl0LiBUaGV5IGFyZSBidXlpbmcgcG9ydHMgbGVmdCBhbmQgcmlnaHQsIGV2ZW4gc2V0dGluZyB1cCBtaWxpdGFyeSBjb3VnaHJlc2VhcmNoY291Z2ggaW4gQW50YXJjdGljYS4gVGhleSBlZmZlY3RpdmVseSBvd24gdGhlIFBhbmFtYSBDYW5hbCAodGhhbmtzIGppbW15IGNhcnRlcikgYW5kIGFyZSBub3QgYSBzaWduYXRvcnkgdG8gU1RBUlQsIHNvIHRoZWlyIG51a2VzIGFyZSBzdWJzdGFudGlhbGx5IG1vcmUgY2FwYWJsZSBpbiB0aGUgTUlSViBkZXBhcnRtZW50IHRoYW4gVVMgbnVrZXMuIFRoZSBvbmx5IHRoaW5nIHN0b3BwaW5nIHRoZWlyIHdvcmxkd2lkZSBpbmZsdWVuY2UgaXMgYSBzdHJvbmcgVVNBLiBBbGwgdGhleSBuZWVkIGlzIGEgd2VhayBvciBjb21wbGlhbnQgVVMgYWRtaW5pc3RyYXRpb24gYW5kIHRoZXkgd2lsbCBiZSB0aGUgd29ybGRzIHByaW1hcnkgc3VwZXJwb3dlci4gVGhleSBzdG9sZSB0aGUgYmFja2dyb3VuZCBjaGVja3MgZm9yIGxpdGVyYWxseSBldmVyIHNpbmdsZSBwZXJzb24gdGhhdCBldmVyIGhhZCBhIHNlY3VyaXR5IGNsZWFyYW5jZSBhbmQgaGF2ZSBpbnRlbCBzZXJ2aWNlcyB0aGF0IGFyZSB0aGUgYmVzdCBmdW5kZWQgb24gZWFydGguCkEgZmV3IG1vbWVudHMgbGF0ZXIsIHRocmVlIG1vcmUgb2ZmaWNlcnMgZW50ZXIgdGhlIHN0b3JlLiBUd28gb2YgdGhlbSBhcHBlYXIgdG8gaGF2ZSB0aGVpciB3ZWFwb25zIGRyYXduLiBPbmUgb2YgdGhlIG9mZmljZXJzIHRoZW4gY2lyY2xlIHMgYmVoaW5kIHRoZSBmcm9udCBkZXNrIGFuZCBwb2ludCBzIHRoZSBtb3VudGVkIHNlY3VyaXR5IGNhbWVyYSB0b3dhcmQgdGhlIGNlaWxpbmcuCkplIHBvdXJyYWlzIHJzdW1lciBjZWxhIGRlIGZhb24gdHJzIHN1YmplY3RpdmUgZW4gcXVlbHF1ZXMgbW90cyBjbHMsIGxlIGhhc2FyZCBkZSBsYSBwcm9ncmFtbWF0aW9uIG5lIG1lIGZhaXNhbnQgcGFzIHBlcmNldm9pciBsZXMgbW1lcyBzdXIgbGVzIGRldXggam91cnMgOgpNeSBmaXJtIGRvZXMgbm90IHNwb25zb3IgQiBTY2hvb2wuClRob3NlIHRoYXQgYXJlIHN0aWxsIGFyb3VuZCwgb2YgY291cnNlLk5vdyBJIHN1cmUgeW91IHNheWluZyAieWVhaCwgYnV0IHlvdW5nIGNvbnNlcnZhdGl2ZXMgYXJlIHRha2luZyB0aGVpciBwbGFjZS4iIFNvbWUsIGJ1dCBpbiBGbG9yaWRhIHBlb3BsZSB1bmRlciA0NSBvbmx5IHZvdGVkIGZvciBUcnVtcCBhYm91dCAzOCUuIApTZSB2b2Mgbm8gdGVtIHByb3ZhIHNsaWRhLCBtdWl0b3MgaG9tZW5zIG1lbnRpcmEgZW5nYW5vIGUgdG9ybmFyIHNlIGhpc3RyaWFzIG91IHZhaSBjaGFtIGxvIGxvdWNvLiAKQnV0IHRoZSBkYW5nZXJzIG9mIHN1Y2ggYW4gaW50ZXJ2aWV3IG1pZ2h0IG91dHdlaWdoIGFueSBiZW5lZml0cyBpZiBLZWxseSBsb2NrZWQgaGltc2VsZiBpbnRvIGEgcGFydGljdWxhciBkZWZlbmNlLCBUaGlhZ2FyYWphaCBzYWlkLCBhZGRpbmc6ICJIZSBtYXkgbm90IGtub3cgYWxsIHRoZSBldmlkZW5jZSBhZ2FpbnN0IGhpbS4iCk1pbmUgYXJlIGVzcGVjaWFsbHkgZnVja2VkIGNhdXNlIEkgaGFkIGEgY2hhbGxlbmdlIHdpdGggc29tZSBmcmllbmRzIGluIGRpc2NvcmQgdG8gZmluZCB0aGUgbW9zdCBvYnNjdXJlIGFuZCB3ZWlyZCBzaGl0IG9uIFlvdXR1YmUgb25jZSwgYW5kIEkgc3BlbnQgYSBsb3Qgb2YgdGltZSBpbiByL2RlZXBpbnRveW91dHViZSwgc28gSSBnZXQgcmVjb21tZW5kZWQgYWxsIG1hbm5lciBvZiBub25zZW5zaWNhbCBnYXJiYWdlLiBUaGF0IG1vc3RseSBteSBmYXVsdCwgdGhvdWdoIGxvbC4gClN0cmljdGx5IHRhbGtpbmcgdmFsdWF0aW9uLCBCaXRjb2luJ3MgbWFya2V0Y2FwIGlzIGF0IGFsbW9zdCBhIGJpbGxpb24gZG9sbGFycy4gCk5ldmVydGhlbGVzcywgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIHlvdSBzaG91bGQga25vdyBhYm91dCBtb25leSBtYW5hZ2VtZW50IHdoaWxlIHBsYXlpbmcgcG9rZXIgaXMgdGhhdCB1bnRpbCB5b3UgYmVjb21lIGEgY29uc2lzdGVudCB3aW5uZXIsIGl0IGRvZXNuJ3QgbWF0dGVyIGhvdyBiaWcgeW91ciBiYW5rcm9sbCBpczsgdGhlIG9ubHkgdGhpbmcgdGhhdCBtYXR0ZXJzIGlzIGhvdyBtdWNoIHlvdSBoYXZlIHRvIGxvc2UuIApUbyBtZSBJIGp1c3QgZmVsdCBsaWtlIEkga25ldyB3aGF0IEkgd2FzIGdvaW5nIHRvIGdldCBldmVyeSBlcGlzb2RlIHNvIEkgZGVjaWRlZCB0byBzdG9wIGxpc3RlbmluZy4gClRoYXQgbGVhcm5pbmcgaXMgZGlmZmVyZW50IGZvciBldmVyeW9uZSwgYnV0IGZvciBtZSBpdCB3YXMgdHJ1bHkgbGVhcm5pbmcgaG93IHRvIHByYWN0aWNlIHNlbGZsZXNzbmVzcywgZXZlbiBpZiBpdCdzIG5vdCAxMDAlIGFsdHJ1aXN0aWMuIEkgYWxzbyBnb3QgYSBkb2csIHNvIHRoYXQgZ2F2ZSBtZSBzb21ldGhpbmcgZWxzZSB0byBmb2N1cyBteSB0aG91Z2h0cyBvbiwgaW5zdGVhZCBvZiBmb2N1c2luZyBvbiBteXNlbGYuIERvbid0IGxldCB0aGlzIHRocmVhZCB0dXJuIGludG8gYSBjaXJjbGUgamVyayBvZiBob3BlbGVzc25lc3MuIApJbiBwcmFjdGljZSwgeW91IHNob3VsZCBiZSBmaW5lLiBKdXN0IGtlZXAgYW4gZXllIG91dCBhbmQgdHJ5IHRvIHJlY29nbml6ZSBpdGVtcyB5b3UgaGF2ZSBkaWZmaWN1bHR5IHdpdGguClRoZSBlbmFibGluZyBoZXIga2lkcyB0byBiZSBhc3Nob2xlcyB0aGluZyBpcyB3aGF0IHJlYWxseSBnZXRzIG1lIGhlYXRlZC4gU2hlIGRlZmluaXRlbHkgaXMgZW5hYmxpbmcgdGhlbSwgZnVzc2luZyBhdCB0aGVtIG9yIG5vLiBUaGV5IG1heSBnZXQgeWVsbGVkIGF0IGJ1dCB0aGVyZSBpcyBubyBmb2xsb3cgdGhyb3VnaCwgbm8gcmVwZXJjdXNzaW9ucyBvbiB0aGVpciBhY3Rpb25zLiBNeSBodXNiYW5kIGFuZCBJIGN1dCB0aWVzIHdpdGggYSBjb3VwbGUgd2hvIGhhdmUgMyBob3JyaWJsZSBraWRzIHdobyB3b3VsZG4gc3RvcCB0aGlzIGtpbmQgb2YgYmVoYXZpb3IuIEF0IGEgcGFydHkgYXQgb3VyIGhvdXNlIHRoZXkgZHVtcGVkIGJsb3dpbmcgYnViYmxlcyBpbnRvIG91ciBraWRkaWUgcG9vbCBhbmQgZ290IGludG8gaXQsIHNvYWtpbmcgdGhlbXNlbHZlcyBhbmQgc3BsYXNoaW5nIHRoZSBvdGhlciBraWRzLCB0aGVuIHJhbiBhcm91bmQgaW5zaWRlIHRoZSBob3VzZSBnZXR0aW5nIHNvYXB5IHdhdGVyIGV2ZXJ5d2hlcmUuIFRoZSBwYXJlbnRzIHllbGxlZCBidXQgZGlkIGFic29sdXRlbHkgbm90aGluZyB0byBzdG9wIHRoZW0gb3IgaGVscCBjbGVhbiB1cCB0aGUgbWVzcy4KTEFDT0I6IFRoZXJlIHdlcmUgcHJvYmFibHkgdGhyZWUgZ3V5cyB0aGF0IHdlcmUgcHJldHR5IG11Y2ggdGhlIGJlc3QgcG9pbnQgZ3VhcmRzIGluIGhpZ2ggc2Nob29sIGluIHRoaXMgYXJlYSBhdCB0aGF0IHRpbWUgYW5kIEplcmVteSBMaW4gd2FzIHByb2JhYmx5IHRoZSBiZXN0IG9mIHRoZW0uIEFuZCBteSBzb24gKEtpcmspIHdhcyByaWdodCB0aGVyZSB3aXRoIGhpbS4gSSd2ZSB3YXRjaGVkIHRoZW0gcGxheSBhZ2FpbnN0IGVhY2ggb3RoZXIgYW5kIEkndmUgY29hY2hlZCBhZ2FpbnN0IGhpbSBzaW5jZSBoZSB3YXMgdGhpcyBoaWdoLi4gCldoeSBkaWQgdGhleSBmb3JnZXQgdG8gZGlzY3VzcyB0aGF0IHJlYWxpdHkgZGVmaW5lZCBieSBudW1iZXJzPyBXaGF0IGRvZXMgYSBLb2JsZW56IHJlZ3VsYXRvciBkbz8gUHJvdGVjdCBmcm9tIHNvbWV0aGluZyB0aGF0IGRvZXMgbm90IGV4aXN0ICAgdGhhdCBkb2VzIG5vdCBjYXVzZSBkYW1hZ2UuIApJbiBhIGZldyBzdGFyayBsaW5lcywgc2hlIGNhbiBpbnZva2Ugc29tZSBpbmRlbGlibGUgZHJlYWQgb3IgbWVuYWNlLCBhbmQgZmluZCBpbiB0aGUgYmFuYWwgc29tZSBlbHVzaXZlIHRocmVhdCBsdXJraW5nLiBUb3dhcmQgdGhlIGVuZCBvZiB0aGUgbm92ZWwsIGFzIHdlIGJyYWNlIG91cnNlbHZlcyBmb3IgdGhlIGluZXZpdGFibGUsIE15cmlhbSwgb2JsaXZpb3VzIHRvIHdoYXQncyBpbXBlbmRpbmcsIG11c3QgY29uZnJvbnQgTG91aXNlIGFib3V0IGhlciBtb3JlIGV4dHJlbWUgaG91c2Vob2xkIGVjb25vbWllcy4gCkFzIGxvbmcgYXMgeW91IGRvbiBiZWhhdmUgY3JlZXBpbHkgYWJvdXQgaXQsIHlvdSBjYW4gc2ltcGx5IGlnbm9yZSBpdCAgIG1vc3QgdGltZXMgYW55IGRlY2VudCB0aGVyYXBpc3Qgd2lsbCBkbyB0aGUgc2FtZSwgaXQgbm90IHRoZWlyIGpvYiB0byBtYWtlIHlvdSBmZWVsIGF3a3dhcmQgYWJvdXQgaXQuIAoiSSBrbm93IHRoZSBHTSBleGVjdXRpdmVzIHZlcnksIHZlcnkgd2VsbCwgYW5kIHRoZXkncmUgcmVkIGZhY2VkIGFuZCBqdXN0IHdpc2ggdGhlIGRldmlsIHRoZXkgY291bGQgZ2V0IG91dCBvZiB0aGlzIHRoaW5nIHdpdGhvdXQgaXQgY29zdGluZyB0aGVtIGFuIGFybSBhbmQgYSBsZWcuIk1leWVycywgYW4gaW5kdXN0cnkgdmV0ZXJhbiwgb25jZSBoZWFkZWQgQW1lcmljYW4gTW90b3JzIENvcnAuVGhlIGVhcmxpZXN0IGRhdGUgYWdyZWVkIGZvciBGaWF0IEF1dG8ncyBzYWxlIHBhc3NlZCBsYXN0IHdlZWsuIEFuZCBpdHMgcGFyZW50LCB3aGljaCBpbmR1c3RyeSBzb3VyY2VzIHNheSBpcyBzb3JlbHkgaW4gbmVlZCBvZiBjYXNoLCBjYW4gZWl0aGVyIGRlbWFuZCB0aGF0IEdNIGJ1eSBGaWF0IEF1dG8gZmxhdCBvdXQgb3IgZ2l2ZSBpdCBhIGxhcmdlIHBheW1lbnQgdG8gZ28gYXdheS4iVGhleSdyZSBwbGF5aW5nIGhpZ2ggc3Rha2VzIHBva2VyLCIgc2FpZCBEYXZpZCBDb2xlLCBoZWFkIG9mIHRoZSBDZW50ZXIgZm9yIEF1dG9tb3RpdmUgUmVzZWFyY2ggaW4gQW5uIEFyYm9yLCBNaWNoaWdhbi5HTSBpbnNpc3RzIHRoYXQgRmlhdCBicmVhY2hlZCB0aGUgdGVybXMgb2YgdGhlIHNvIGNhbGxlZCAibWFzdGVyIGFncmVlbWVudCIgYmV0d2VlbiB0aGUgdHdvIGNvbXBhbmllcyB3aGVuIGl0IHNvbGQgb2ZmIGEgNTEgcGVyY2VudCBzdGFrZSBpbiB0aGUgZmluYW5jZSBhcm0gb2YgRmlhdCBBdXRvLkdNIHNwb2tlc3dvbWFuIFRvbmkgU2ltb25ldHRpIHJlaXRlcmF0ZWQgdGhhdCBwb3NpdGlvbiB0aGlzIHdlZWsuIApJIHdvdWxkIHJlYWNoIG91dCB0byBSb2dlcnMgYW5kIHJlbWluZCB0aGVtIHBvbGl0ZWx5IHRoZXkgaW5jb252ZW5pZW5jZWQgeW91IGFuZCB5b3Ugd2VyZSB3aXRob3V0IHNlcnZpY2UgZm9yIHR3byBkYXlzIHRoYXQgeW91IHBhaWQgZm9yLCBSb2dlcnMgdHlwaWNhbGx5IGhhcyBhIHJ1bGUgdGhhdCBpZiB0aGUgc2VydmljZSBpcyBhZmZlY3RlZCB0aGUgbW9udGhseSBjaGFyZ2UgZ2V0cyBkaXZpZGVkIGJ5IHRoZSBkYXlzIG91dCBvZiBzZXJ2aWNlIGFuZCByZWltYnVyc2VkLi4gClRoZSBmaXZlIFN1cHJlbWUgQ291cnQganVzdGljZXMgdW5hbmltb3VzbHkgdXBoZWxkIHRoZSBDb3VydCBvZiBBcHBlYWwncyBkZWNpc2lvbiBvbiB0aGUgY2FzZSwgd2l0aCBMb3JkIEh1Z2hlcyBzYXlpbmcgaXQgd2FzIGVzc2VudGlhbCB0aGF0IHB1bnRvIGJhbmNvIHJlbWFpbmVkIGEgZ2FtZSBvZiBwdXJlIGNoYW5jZSB3aXRoIG5laXRoZXIgdGhlIGNhc2lubyBub3IgdGhlIHBsYXllciBiZWluZyBhYmxlIHRvIGJlYXQgdGhlIHJhbmRvbW5lc3Mgb2YgdGhlIGNhcmRzIHRoYXQgd2VyZSBkZWFsdC4KRmxvcmlkYSBpcyBqdXN0IEZsb3JpZGEuIApXZWxsLCB0aGF0IGFuZCBzdXBwcmVzc2luZyBzbGF2ZSByZWJlbGxpb25zLCB3aGljaCB3YXMgYSBtYWpvciBjb25jZXJuIGluIHRoZSBzb3V0aGVybiBzdGF0ZXMuIApObyBtYXR0ZXIgd2hpY2ggdHlwZSBvZiBtYXNzYWdlIHlvdSB1c2UgdGhlcmUgYXJlIG1hbnkgYXZhaWxhYmxlIG91dCB0aGVyZS4gCkFuIGFuYWx5c2lzIG9mIHNwZW5kaW5nIGluIENhdGVnb3J5IDIgc3BlbmRpbmcgbGFzdCBmaW5hbmNpYWwgeWVhciBmb3VuZCB0aGF0ICQzNy45IG1pbGxpb24gd29ydGggb2YgY2xhaW1zIHdlcmUgc3VibWl0dGVkIGJ5IGNsdWJzIGZvciAic3BvcnQiLiBUaGUgbmV4dCBoaWdoZXN0IHdhcyAkNy4xIG1pbGxpb24gZm9yICJjb21tdW5pdHkgYWN0aXZpdGllcyIsIGZvbGxvd2VkIGJ5ICQzLjQgbWlsbGlvbiBmb3IgImNsdWIgZmFjaWxpdGllcyIuIEl0IGZvdW5kIHNvbWUgb2YgdGhlIHNwZW5kaW5nIHdhcyBxdWVzdGlvbmFibGUsIHN1Y2ggYXMgJDMxMSwwMDAgdG8gdXBncmFkZSBnb2xmIG1hY2hpbmVyeSB0byBlbnN1cmUgY29tcGxpYW5jZSB3aXRoIHdvcmtwbGFjZSBoZWFsdGggYW5kIHNhZmV0eSBsYXdzLiAKVGhlIFdhbHQgRGlzbmV5IENvbXBhbnkKQmlnIG9wZW4gZmxvb3IgcGxhbi4gClF1YWxpZnlpbmcgZm9yIGRpc2FiaWxpdHkgdGF4IGNyZWRpdCBhbiB1cGhpbGwgYmF0dGxlIGZvciBtYW55IGFtaWQgc3Bpa2UgaW4gQ1JBIHJlamVjdGlvbnNXaGVuIGRpc2FiaWxpdHkgaW5zdXJhbmNlIHBheW91dHMgYXJlIG5vdCBhY3R1YWxseSB0YXggZnJlZUF0dGVudGlvbiB3ZWFsdGh5IHNwb3VzZXM6IFlvdXIgZmFtaWx5IHRydXN0IHdvbiBhbHdheXMgc2F2ZSB5b3Ugd2hlbiBkaXZpZGluZyBhc3NldHMgaW4gYSBzZXBhcmF0aW9uVGhlIHRydXN0IGdvdCBpdHMgbmFtZSBmcm9tIGFuIE9udGFyaW8gY291cnQgZGVjaXNpb24gaW52b2x2aW5nIGEgZmF0aGVyIHdobyBlc3RhYmxpc2hlZCBhIGZ1bGx5IGRpc2NyZXRpb25hcnkgdHJ1c3QgZm9yIGhpcyBkYXVnaHRlci4gVGhlIE9udGFyaW8gZ292ZXJubWVudCB0cmllZCB0byBsb29rIHRocm91Z2ggdGhlIHRydXN0IHN1Y2ggdGhhdCB0aGUgZGF1Z2h0ZXIgd291bGQgYmUgZGlzcXVhbGlmaWVkIGZyb20gY2VydGFpbiBhc3NldCB0ZXN0ZWQgZ292ZXJubWVudCBiZW5lZml0cy4gVGhlIGNvdXJ0IHJ1bGVkIGluIGhlciBmYXZvdXIsIGZpbmRpbmcgdGhhdCB0aGUgYXNzZXRzIGRpZCBub3QgYmVsb25nIHRvIGhlci4uIApIZSBzYWlkIHRoZSBiYW5kaW5nIHN5c3RlbSAgaW4gd2hpY2ggbG9jYWwgZ292ZXJubWVudCBhcmVhcyBhcmUgY2xhc3NpZmllZGFjY29yZGluZyB0byBmYWN0b3JzIHN1Y2ggYXMgdGhlIHBlciBjYXBpdGEgZ2FtaW5nIG1hY2hpbmUgZXhwZW5kaXR1cmUgYW5kIHNvY2lvIGVjb25vbWljIHN0YXRpc3RpY3MgIHdhcyBhbHJlYWR5IGluIHBsYWNlIHRvIGFzc2VzcyB0aGUgaW1wYWN0IG9mIGFuIGluY3JlYXNlIGluIHBva2VyIG1hY2hpbmVzLiBCdXQgTXIgVG9vbGUgd2FudGVkIHRvIGVtcGhhc2lzZSB0aGF0IGNsdWJzIGdpdmUgYmFjayB0byB0aGUgY29tbXVuaXR5LiAiSXQgbWF5IGJlIGEgcGxhY2Ugd2hlcmUgcGVvcGxlIGNhbiBnbyBhbmQgZW5qb3kgYSBxdWlldCBiZWVyLCBlbmpveSB0aGUgcmVzdGF1cmFudCwgaXQgbWlnaHQgYmUgd2hlcmUgMThzIGFuZCAyMXN0cyBhbmRzcGVjaWFsIGV2ZW50cyBhcmUgaGVsZCwiIGhlIHNhaWQuLiAKV2l0aCBob21lYnJldyBzdHVmZiBldmVyeXRoaW5nIGlzIGluIHlvdXIgaGVhZCwgYW5kIGlmIHlvdSBkb250IGhhdmUgYW4gcHJld3JpdHRlbiBhbnN3ZXIgZm9yIHNvbWV0aGluZyB5b3UganVzdCBpbXByb3YuIApBIGZlbWFsZSBwZXJzcGVjdGl2ZS8iPkFuYWwgU2V4IGZyb20gYSBGZW1hbGUgUGVyc3BlY3RpdmUgZGVzY3JpYmVzIHdoYXQgYW5hbCBzZXggZmVlbHMgbGlrZSBmb3IgYSB3b21hbi4gClRoZSBzdW1taXQsIHBsYW5uZWQgZm9yIFNpbmdhcG9yZSwgb2ZmZXJzIGEgaGlzdG9yaWMgY2hhbmNlIGZvciBwZWFjZSBvbiB0aGUgcGVuaW5zdWxhICAgYnV0IGFsc28gdGhlIHJpc2sgb2YgYW4gZXBpYyBkaXBsb21hdGljIGZhaWx1cmUgdGhhdCB3b3VsZCBhbGxvdyB0aGUgTm9ydGggdG8gcmV2aXZlIGFuZCBhZHZhbmNlIGl0cyBudWNsZWFyIHdlYXBvbnMgcHJvZ3JhbS4KSGUgbGVhdmVzIGFuZCBCb2JieSBsb29rcyBjb25jZXJuZWQuIFRoZXJlJ3MgYSBsb3Qgb2YgY29uY2VybiBpbiB0aGlzIGVwaXNvZGUgb2YgSG9va2VyLiBZb3UgY2FuIHRlbGwgYmVjYXVzZSBwZW9wbGUgYXJlIGZyb3dueS4gTWVhbndoaWxlLCB0aGUgY2hpY2sgY29wIHdobyBmcm96ZSBpcyBhdCBob21lIGFuZCB0aGUgdHdvIGNvcHMgd2hvIHBhc3NlZCBIb29rZXIgZWFybGllciBhbmQgYW5vdGhlciBndXkgc25lYWsgaW50byBoZXIgeWFyZC4gVGhleSB0b3NzIGFuIG9wZW4gYnVja2V0IG9mIHllbGxvdyBwYWludCB0aHJ1IGhlciB3aW5kb3dzIGFuZCBzdGFydCBtYWtpbmcgYm9rIGJvayBzb3VuZHMgYW5kIGNhbGxpbmcgaGVyIGNoaWNrZW4uIApJbiBjaXR5IGFmdGVyIGNpdHkgU3QuIApXaGF0IE9iYW1hIGlzbiBzYXlpbmcsIHdoYXQgdGhlIFRpbWVzIHJlZnVzZXMgdG8gcHJpbnQgaW4gdGhlIHBhZ2VzIG9mIGl0cyBPcCBFZCBzZWN0aW9uLCBpcyB0aGF0IG1hbnkgImV4cGVydHMiIG5vdCBvbmx5IHN1cHBvcnQgZW5kaW5nIHRoZSB3YXIsIGJ1dCBiZWxpZXZlIG9ubHkgYnkgdGhlIFVTIHdpdGhkcmF3aW5nIGZyb20gdGhlIHJlZ2lvbiBpcyBzdGFiaWxpdHkgcG9zc2libGUuIENvcnJ1cHRpb24sIGxhY2sgb2YgdHJ1c3QgaW4gZ292ZXJubWVudCwgZXRjLikuIEV2ZW4gdWx0cmEgY29uc2VydmF0aXZlIEdlb3JnZSBXaWxsIGlzIGFyZ3VpbmcgZm9yIGZld2VyIHRyb29wcywgbm90IG1vcmUuLiAKQnVyZ295bmUgYWNrbm93bGVkZ2VzIHRoZXJlIGFyZSBwbGVudHkgb2YgbW9tIGFuZHBvcCBzdGFydHVwcyB0cnlpbmcgdG8gY29tcGV0ZSB3aXRoIEZyb2dib3gsIGJ1dCBtYWludGFpbnMgaXQgaGFyZGVyIGZvciBzbWFsbCBvcGVyYXRvcnMgdG8gcHJvdmlkZSBwcm9wZXIgY3VzdG9tZXIgc2VydmljZS4gVGhlIGNvc3Qgb2YgcmVudGluZyBib3hlcyBpcyBhYm91dCB0aGUgc2FtZSBhcyBwdXJjaGFzaW5nIGNhcmRib2FyZCBib3hlcyBhbmQgaW5jbHVkZXMgcGljayB1cCBhbmQgZGVsaXZlcnkuIFNpbmNlIEZyb2dib3ggaXMgYWJvdXQgc2VsbGluZyBjb252ZW5pZW5jZSBhbmQgcmVsaWV2aW5nIHRoZSBzdHJlc3Mgb2YgbW92aW5nLCBleHBhbnNpb24gb25seSBpbmNyZWFzZXMgdGhlIGNvbnZlbmllbmNlZmFjdG9yYmVjYXVzZSB0aGUgYm94ZXMgY2FuIG5vdyBtb3ZlIGFyb3VuZCBmcm9tIGNlbnRyZSB0byBjZW50cmUuLiAKTXkgbWF0ZSBzYXlzIHRvIG1lIGJldHRlciBzdG9wIHRhbGtpbmcgbm93LCBpZiBIYXJraW5zIHNlZXMgdXMgaGUgZ28gZnVja2luZyBhcGVzaGl0ISB0aGlzIG5ldyBleHByZXNzaW9uIHRpY2tsZWQgbWUgc28gYmFkLCB3aXRoIHZpc2lvbnMgb2YgYSBnb3JpbGxhIGdvaW5nIHNoaXQgc21hc2hpbmcgdXAgc29tZSBwbGFjZSBhbmQgcHJvYmFibHkgdGhyb3dpbmcgdHVyZHMgYXJvdW5kIHdhcyB0b28gbXVjaCBmb3IgbWUgYW5kIEkgY291bGQgbm90IHN0b3AgbGF1Z2hpbmcgYXMgdGhlIGFzc2VtYmx5IHN0YXJ0ZWQuLiAKSWYgeW91ciBjYXJkcyBhcmUganVzdCBzaXR0aW5nIG91dCBpbiB0aGUgb3BlbiwgeW91IGFyZSBzdWJqZWN0IHRvIHR3byBwb3NzaWJsZSBkaXNhc3RlcnMuIEZpcnN0LCB0aGUgZGVhbGVyIG1heSBzY29vcCB0aGVtIHVwIGluIGEgYmxpbmsgYmVjYXVzZSB0byBsZWF2ZSBvbmUncyBjYXJkcyB1bnByb3RlY3RlZCBpcyBhIHNpZ25hbCB0aGF0IHlvdSBhcmUgZm9sZGluZy4gU2Vjb25kLCBhbm90aGVyIHBsYXllcidzIGNhcmRzIG1heSBoYXBwZW4gdG8gdG91Y2ggeW91cnMgYXMgdGhleSBmb2xkLCBkaXNxdWFsaWZ5aW5nIHlvdXIgaGFuZCBhbmQgeW91ciBpbnRlcmVzdCBpbiB0aGUgcG90LiAKIlRoZXJlJ3Mgbm8gc3VjaCB0aGluZyBhcyBhIHBlcmZlY3QgYm9keSBvciBwZXJmZWN0IHNpdHVhdGlvbiwgc28gSSByZWNvbW1lbmQgdGhhdCBwZW9wbGUgc2ltcGx5IHNob3cgdXAsIGNvbW1pdCBhbmQgc2VlIHdoYXQgaGFwcGVucy4iQWNyb3lvZ2EgYW5kIHNvY2lhbCBtZWRpYUFjcm95b2dhIGlzIGEgcmVsYXRpdmVseSBuZXcgcHJhY3RpY2UsIHNvIHRoZSBhY3JveW9nYSBjb21tdW5pdHkgaGFzIHJlbGllZCBoZWF2aWx5IG9uIHNvY2lhbCBtZWRpYSB0aHJvdWdob3V0IHRoZSBwYXN0IGRlY2FkZSBmb3IgcHJvbW90aW9uIGFuZCB0byBjb25uZWN0IGxpa2UgbWluZGVkIGluZGl2aWR1YWxzLiAiQmVmb3JlIHRoZXJlIHdlcmUgY2xhc3NlcywgdGhlcmUgd2VyZSBpbnN0cnVjdGlvbmFsIHZpZGVvcyBvbiBZb3VUdWJlLCIgSGViYXJkIHNheXMuIApEaWUgTWFrbGVyIHdvbGxlbiBhdWNoIGRlbiBWZXJrYXVmIGFuIGVpbmVuIEVuZGludmVzdG9yIGluIGRpZSBXZWdlIGxlaXRlbi4uIApUcnVtcCBzZWVtcyB0byBiZSBoYXJkIGxpbmUgc3VwcG9ydGVyIG9mIElzcmFlbCBhbmQgZW5lbXkgb2YgSXJhbiwgcmVjb2duaXppbmcgSmVydXNhbGVtIGFzIGNhcGl0YWwsIHJlaW5zdGF0aW5nIHNhbmN0aW9ucyBhbmQgYW55dGhpbmcuIApUaGUgZW50aXJlIHRvd24gd2FzIG93bmVkIGJ5IG9uZSBjb21wYW55LiBUaGUgcGVvcGxlIHdobyBsaXZlZCB0aGVyZSBoYWQgbm8gY2hvaWNlIGJ1dCB0byBiZSBpbiBhIHByaXZhdGUgc3BhY2UuIFRoYXRzIG5vdCB0aGUgc2FtZSBmb3IgaW50ZXJuZXQuCkNvbmZ1c2luZyBhZiBpIGtub3cuLiAKVHdvIGV2ZW50cyB0aGlzIHdlZWsgbWFrZSB0aGUgc2NoaXpvcGhyZW5pYyBuYXR1cmUgb2YgdGhpcyBQcmVzaWRlbnQgdmlzaWJsZSBmb3IgYWxsIHRvIHNlZS4gVGhlIEdvb2QgT2JhbWEgb24gdGhlIGVjb25vbXkuIFRoZSBCYWQgT2JhbWEgb24gdGhlIHdhcnNPbmU6IFdoYXQgYXJlIHdlIHRvIG1ha2Ugb2YgdGhlIGZhY3QgdGhhdCBPYmFtYSwgZmluYWxseSBwaXNzZWQgb2ZmIGF0IHRoZSBncmVlZCBvZiBiYW5rZXJzLCB3YW50cyB0byBpbXBvc2UgYSBmZWUgb24gInJpc2t5IGludmVzdG1lbnRzIiB0aGF0IHdpbGwgbWFrZSBzdXJlIHRoZSB0YXhwYXllcnMgYXJlIHBhaWQgYmFjayBhdCBsZWFzdCAkOTAgQmlsbGlvbiBvZiB0aGUgJDExNyBCaWxsaW9uIGluIFRBUlAgbW9uZXkgdGhhdCBpcyBzdGlsbCBvdXRzdGFuZGluZy4gCkluIGxpdmUgaW0gc3VycHJpc2VkIHlvdSBmb2xkZWQgb3V0IDIgcGVvcGxlLiBJZiBnb2luZyB0byAzIGJldCBsaXZlIG1ha2UgaXQgJDIwMCB0aGV5IGhhdmUgdG8gY2FsbCAkMTc1IGludG8gJDMxMiBwb3QsIGJ1dCBidXR0b24gaXMgZ29pbmcgdG8gZ28gYWxsIGluIHdpdGggYSBsb3Qgb2YgaGFuZHMgc28gSSB3b250IGRvIGl0IHRoZXJlLkkga25vdyB0aGVyZSBhcmUgcGVvcGxlIHdobyBsb3ZlIDMgYmV0dGluZyBsaXZlIGEgbG90LCBidXQgSSBqdXN0IHRoaW5rIHlvdSBnZXQgbW9yZSB2YWx1ZSBkb2luZyBpdCByYXJlbHkuUm9ubmllIGlzIHRoZSBtb3N0IG9idmlvdXMuIApJdCBpcyBqdXN0IGxpa2UgMyBtaW51dGVzIG9mIGhpbSByYW50aW5nIGludG8gYSBjYW1lcmEgaW4gdGhlIGRhcmsuIEkgaGF2ZSBhYnNvbHV0ZWx5IG5vIGlkZWEgd2hhdCB0aGUgaGVsbCB0aGlzIHdhcy4gClN0cmFpZ2h0OiBBIHN0cmFpZ2h0IGNvbnNpc3RzIG9mIGZpdmUgY2FyZHMgb2YgYW55IHN1aXQgaW4gb3JkZXIuIEZvciBleGFtcGxlOiBRIEogVCA5IDguIEFzIHdpdGggdGhlIG90aGVyIGhhbmRzLCBpbiB0aGUgZXZlbnQgb2YgdHdvIHN0cmFpZ2h0cywgdGhlIG9uZSB0aGF0IHN0YXJ0cyB3aXRoIHRoZSBoaWdoZXN0IHJhbmsgd2lucy4gQWNlcyBjYW4gYmUgdXNlZCBhcyBhIGhpZ2ggY2FyZCBhYm92ZSBhIGtpbmcgb3IgYXMgYSBsb3cgY2FyZCBiZWxvdyBhIHR3byB0byBtYWtlIGEgc3RyYWlnaHQuIFlvdSBjYW4ndCwgaG93ZXZlciwgdXNlIGEga2luZywgYWNlLCB0d28gc2VxdWVuY2U7IGFuZCBhbiBhY2UgYmVsb3cgYSB0d28gY2Fubm90IGJlIHVzZWQgYXMgdGhlIGhpZ2ggY2FyZC4KUmVhZCBQYXJ0IE9uZSBvciB0aGUgaW50cm9kdWN0aW9uIHRvIHRoZSBtaWxpdGFyeSBhbmQgb3RoZXIgdGFjdGljYWwgYXRobGV0ZXMgaGVyZS4gKDIwMTcpLiBVc2Ugb2YgSW50ZWdyYXRpdmUgTWVkaWNpbmUgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgTWlsaXRhcnkgSGVhbHRoIFN5c3RlbS4gCk04NTVBMSBpcyB0aGUgc2FtZSBncmFpbiB3ZWlnaHQgYXMgTTg1NS4gCk15IHN0YW5jZSBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRoZSB3b3JkcyB0aGF0IHlvdSBwdXQgaW4gbXkgbW91dGggYW5kIGV2ZXJ5dGhpbmcgdG8gZG8gd2l0aCB3aGF0IEkgYWN0dWFsbHkgc2FpZCwgd2hpY2ggd2FzIHRoYXQgbm9uIG5hdGl2ZXMgc2hvdWxkbiBiZSBoaXJlZCB0byB0ZWFjaCBFbmdsaXNoLiAKQW55IHBlcnNvbiB3aG8gcHJvdmlkZXMgdGhlaXIgcGVyc29uYWwgaW5mb3JtYXRpb24gdGhyb3VnaCB0aGlzIE5ldHdvcmsgcmVwcmVzZW50cyB0aGF0IHRoZXkgYXJlIDEzIHllYXJzIG9mIGFnZSBvciBvbGRlci4uIApUaGlzIGFsbG93cyB0aGUgUFQgdG8gc2VlIDMgNCBjbGllbnRzIGFuIGhvdXIsIHdoaWxlIHN0aWxsIGdpdmluZyB0aGUgY2xpZW50cyBhbiBob3VycyB3b3J0aCBvZiB0cmVhdG1lbnRzLiBIb3dldmVyLCBwaHlzaW8gZXhlcmNpc2VzIGFyZSB0b28gZm9jdXNlZCBvbiBpbmRpdmlkdWFsIGJvZHkgc2VnbWVudHMsIGFuZCBwZXJmb3JtZWQgYXQgYSBsZXZlbCB0aGF0IGRvZXMgbm90IHN0aW11bGF0ZSBwZXJtYW5lbnQgYW5kIHN1c3RhaW5hYmxlIHN0cmVuZ3RoIGdhaW5zIGluIGFueW9uZSBidXQgdGhlIGNyaXBwbGVkIGFuZCB0aGUgZWxkZXJseS4gCkJ5IGxldmVyYWdpbmcgYXZhaWxhYmxlIHRlY2hub2xvZ3ksIGJyYW5kcyBjYW4gc3VjY2VlZCBhdCBkZWxpdmVyaW5nIGEgbW9yZSBwZXJzb25hbGl6ZWQgYW5kIGNvbm5lY3RlZCBleHBlcmllbmNlLiAKTW9qb3NvZnQgUGhvdG8gRnJhbWUgU3R1ZGlvIDIuOTYgTGljZW5zZSBLZXkuIEErIEEgLiAKIkknbGwgc3RheSBpbiBGbG9yaWRhIGlmIEkgZ28gdG8gRmxvcmlkYSBNRCBhbmQgeW91IGNhbiB0cnVzdCB0aGF0IGJlY2F1c2UgbXkgZW50aXJlIGxpZmUgaGFzIGJlZW4gaGVyZSEiLiAKRWFjaCBwbGF5ZXIgaXMgZGVhbHQgZml2ZSBjYXJkcyBhbmQgZ2V0cyB0byBleGNoYW5nZSBvbmUgb3IgbW9yZSBvZiB0aG9zZSBjYXJkcyBmb3IgYW4gZXF1YWwgbnVtYmVyIG9mZiB0aGUgdG9wIG9mIHRoZSBkZWNrLiAKV2VsbCBpdCB0dXJuZWQgb3V0IHRoYXQgdGhpcyBtYW4gZGlzY292ZXJlZCBhIHBsb3QgdG8ga2lsbCBoaW0gZnJvbSBzb21lIGxvY2FsIHBlb3BsZSBhbmQgd2FzIGZvcmNlZCB0byBmbGVlLiBIZSB0YXVnaHQgbWUgYWJvdXQgdGhlIHNpdHVhdGlvbiBpbiBNeWFubWFyLCBhbmQgYWJvdXQgaG93IGhpcyBuZXBoZXcgd2FzIHNlZWtpbmcgcmVmdWdlZSBzdGF0dXMgYXMgd2VsbCwgaGF2aW5nIGJlZW4gdGFrZW4gZnJvbSBoaXMgdmlsbGFnZSBieSBtZW1iZXJzIG9mIHRoZSBUYXRtYWRhdyAoTXlhbm1hciBtaWxpdGFyeSkgYW5kIGZvcmNlZCB0byBiZSBhIGh1bWFuIHNoaWVsZCwgd2Fsa2luZyB0aHJvdWdoIG1pbmVmaWVsZHMgYWhlYWQgb2YgdGhlIHRyb29wLCBldGMuIApIb2xkIHlvdXIgYXNzZXRzIGFuZCBpZiB5b3UgZm91bmQgZ3VpbHR5IHRoZXkgYXVjdGlvbiBpdCBvZmYuIEl0IG9mdGVuIGEgY29wIHdobyBidXlzIHRoZXNlIHRoaW5ncyBhbmQgdGhlbiB0dXJucyBhcm91bmQgdG8gc2VsbCB0aGVtIGZvciBtb3JlIG1vbmV5LiAKSXQncyBhIGdvb2QgcG9pbnQsIGJ1dCB5b3UgbmVlZCB0byB1bmRlcnN0YW5kIHRoZSBtaW5kIHNldCBvZiB0aGUgYXZlcmFnZSBkcnVnIGRlYWxlciwgdGhpcyBpcyB0aGUgd2F5IHRoZXkgbWFrZSB0aGVpciBsaXZpbmcsIHN1cHBvcnQgdGhlaXIgZmFtaWxpZXMsIHRoZXkgaGF2ZSBubyBvdGhlciBjYXJlZXIsIGFuZCBpZiB0aGV5IGRvbid0IHNlbGwgdGhlIER1ZGUgZG9wZSwgbmV4dCBndXkgZG93biB0aGUgYmxvY2sgd2lsbCwgYW5kIG5vIG9uZSB0b2xkIHRoZSBEdWRlIHRvIGdldCBob29rZWQgb24gaXQgaW4gdGhlIGZpcnN0IHBsYWNlLiBKdXN0IGZpbGxpbmcgYSBuZWVkIHRoYXQgZXhpc3RzIGFuZCB0aGF0IHNvbWVvbmUgZWxzZSB3aWxsIGZpbGwuIERlYWxlciBnb2VzIHRvIGphaWwgb3IgZ2V0cyBraWxsZWQsIHRoZXJlIHdpbGwgYmUgYSBuZXcgZ3V5IHNlbGxpbmcgdG8gaGlzIG9sZCBjdXN0b21lcnMgYmVmb3JlIGhpcyBvYml0dWFyeSBpcyBydW4uIEl0J3MgYnVzaW5lc3MuCk5vdCBoYXJkLCBob3dldmVyLCBmb3IgdGhpcyBEaG9uaS4gVGhlIHZpbnRhZ2UgRGhvbmkuIEhlIGJlbnQgaGlzIGJhY2sga25lZSwgcmVhY2hlZCBvdXQgZm9yIHRoZSBiYWxsLCBvcGVuZWQgdGhlIGZhY2Ugb2YgdGhlIGJhdCwgYW5kIHNjeXRoZWQgaXQgb3ZlciBwb2ludCBmb3Igc2l4LiBUaGF0IGl0IGNsZWFyZWQgdGhlIGJvdW5kYXJ5IHdhcyBkb3duIHRvIERob25pJ3Mgc2hlZXIgcG93ZXIuIFNpcmFqIHdhcyBnb2JzbWFja2VkLiBUaGUgQ2hpbm5hc3dhbXkgU3RhZGl1bSB3YXMgZ29ic21hY2tlZC4gVGhlIENoZW5uYWkgU3VwZXIgS2luZ3MgZHVnb3V0IHdhcyBnb2JzbWFja2VkLiBUaG9zZSB3aG8gZG91YnRlZCB3aGV0aGVyIERob25pIHN0aWxsIGhhZCBpdCB3ZXJlIGdvYnNtYWNrZWQuIEhlIHVsdGltYXRlbHkgZmluaXNoZWQgaXQgICBsaWtlIG9ubHkgaGUgY2FuICAgd2l0aCBhIG1pZ2h0eSBzaXggb3ZlciB3aWRlIGxvbmcgb24sIHdoaWNoIGV2b2tlZCBtZW1vcmllcyBvZiB0aGF0IHNob3QgdGhhdCB3b24gSW5kaWEgdGhlIDIwMTEgV29ybGQgQ3VwLgpJbiBhbiBpZGVhbCB3b3JsZCB5b3Ugd291bGQgd2FudCB0byB1c2UgeW91ciBwb2tlciBjYWxjdWxhdG9yIGFsb25nc2lkZSBQb2tlciBQcm9waGVjeS4gClNwZW50IHNvbWUgdGltZSBpbiBCYW5na29rLCBiZXR3ZWVuIHRoZSB0cmFpbiBpbiB0aGUgY2l0eSBhbmQgb3Zlcmx5IGFnZ3Jlc3NpdmUgVHVrIFR1ayBkcml2ZXJzLCBJIHdhbGtlZCBhbG1vc3QgZXZlcnl3aGVyZS4gRm91bmQgYSBwbGFjZSBuZWFyIHdoZXJlIEkgd2FzIHN0YXlpbmcgdGhhdCBkaWQgYW4gYW1hemluZyBqb2Igb24gdGhlIGZlZXQgICBhZnRlciBhIGZldyBkYXlzIG9mIHdhbGtpbmcsIHRoZXkgd29yayB0aGVpciBtYWdpYyBhbmQgYWxsIHRoZSBhY2hlcyB3b3VsZCBiZSBnb25lLiBHcmVhdCBzdHVmZi4uIApJIHRoaW5rIHRoZSBiaWdnZXN0IHdlYWtuZXNzIG9mIHRoZSBTdGFyVmlwZXIgaXMgdGhlIGxhY2sgb2YgYSBldmFkZSBhY3Rpb24gKGFuZCB0aGUgaGlnaCBjb3N0IG9mIHRoZSBzaGlwIG9mIGNvdXJzZSkuIEdldHRpbmcgYSBmcmVlIGV2YWRlIGhhcyBtYWRlIHRoZSBEZWZlbmRlciBhIHRlcnJvciBvbiB0aGUgdGFibGUsIGFuZCB3aGlsZSBJIGRpc2xpa2UgY29weWluZyBmaXhlcyBmcm9tIG90aGVyIHNoaXBzLCBzb21ldGhpbmcgc2ltaWxhciBzaG91bGQgaGVscCB0aGUgU3RhclZpcGVyLiAKVGhlIGRlbnNpdHksIGRpc3RyaWJ1dGlvbiBhbmQgbW9ycGhvbG9neSBvZiBtdXNjbGUgc3BpbmRsZXMgd2VyZSBzdHVkaWVkIGluIHN1cGVyaW9yIG9ibGlxdWUgY2FwaXRpcywgaW5mZXJpb3Igb2JsaXF1ZSBjYXBpdGlzIGFuZCByZWN0dXMgY2FwaXRpcyBwb3N0ZXJpb3IgbWFqb3IgYW5kIG1pbm9yIHN1YiBvY2NpcGl0YWwgbXVzY2xlcy4KQSByZXBsYWNlbWVudCByZXNpc3RvciBhc3NlbWJseSBydW5zIGFib3V0ICQzMCBhbmQgaXMgcHJldHR5IGVhc3kgdG8gcmVwbGFjZS4gSWYgaXQgZmFpbHMgYWdhaW4sIHlvdSBzaG91bGQgcHJvYmFibHkgY2hlY2sgdGhlIGN1cnJlbnQgZHJhdyBvZiB0aGUgYmxvd2VyIG1vdG9yLiAoSWYgeW91J3IgaGFuZHksIHlvdSBjYW4gYWxzbyByZXBhaXIgaXQgeW91cnNlbGYgZm9yIGEgY291cGxlIG9mIGJ1Y2tzIGJ5IGdldHRpbmcgYSB0aGVybWFsIGZ1c2UgZnJvbSBSYWRpbyBTaGFjayBhbmQgY3JpbXBpbmcgaXQgaW4gcGxhY2Ugb2YgdGhlIG9sZCBmdXNlLiAKQWxsIHRoaXMgaW5uYXRlIEFydGlzdHJ5IGFuZCB0ZWNobmljYWwgYnJpbGxpYW5jZSBjb21iaW5lZCB3aXRoIGEgcmFyZSBhbmQgZXhxdWlzaXRlIGVtb3Rpb25hbCBxdWFsaXR5IGhhcyBtYWRlIGhpbSBhIHVuaXF1ZSBTaGVobmFpIFBsYXllciB3aGljaCBkaWZmZXJzIGZyb20gb3RoZXJzLiBIZSBoYXMgY29tcGxldGVseSByZXZvbHV0aW9uaXplZCB0aGUgdGVjaG5pcXVlIGFuZCBhcHByb2FjaCBvZiBTaGVobmFpIFBsYXlpbmcuIExva2VzaCBoYXMgcGVyZm9ybWVkIGFsbW9zdCBpbiBhbGwgbWFqb3IgbXVzaWMgZmVzdGl2YWxzIGluIEluZGlhIGFuZCBhYnJvYWQuIApEZSBmbGVzdGUgSG9sbHl3b29kIGJlcm10aGVkZXIgb2cgc2xnZXJlIGhhciBhbGxlcmVkZSBmaW5wdWRzZXQgdGVrbmlra2VuIG1lZCBhdCBob2xkZSBlbiBwb2tlciBmYWNlIG9nIG9waG9sZGVyIHNpZyBzdGFkaWcgaSBlbiBzdHJyZSBmb3JoaW5kcmluZyAobWVkIHNhZ2VuIG9tIHNsYWRkZXIgcmVkZXQgZmlsbSBzdGplcm5lciksIGVsbGVyIGh2aXMgZGUgZnIgYXQgdmlkZSBub2dldCBoZWx0IGkgbW9kc3RyaWQgbWVkIGRlcmVzIHB1bmt0IChtZWQgZm9sayBpIGRlbiBzYWxnIGluZHVzdHJpKS4KSW4gbXkgNiB5ZWFycyBvZiBkb2luZyB0aGlzLCBpdmUgZG9uZSBpdCBUV0lDRSB1bmRyYXBlZC4gCk5leW1hbiBoYWQgYSBoYWJpdCBvZiBwdXR0aW5nIGhvbWV3b3JrIGFzc2lnbm1lbnRzIHVwIG9uIHRoZSBibGFja2JvYXJkIGF0IHRoZSBzdGFydCBvZiBjbGFzcy4gClRoaXMgZGlzZWFzZSBpcyB0aGUgd29yc3QuIEFuZCB3ZSBhbGwgaGFkIG1vbWVudHMgdGhhdCB3ZSBuZXZlciBnZXQgYmFjayBmcm9tIGl0LiBUaGVyZSBhcmUgaG91cnMgYW5kIGhvdXJzIG9mIG15IHRpbWUgSSBuZXZlciBnZXQgYmFjayBiZWNhdXNlIG9mIGl0IGFuZCBJIGNvbnN0YW50bHkgZW52eSBvdGhlciBwZW9wbGUgd2hvIGxpdmUgYSBub3JtYWwgbGlmZS4gCkkgcmVtZW1iZXIgaGUgZ290IGtub2NrZWQgb3V0IGZpcnN0IGFuZCB0aGVyZSB3ZXJlIG9ubHkgZm91ciBvZiB1cyBwbGF5aW5nLiBTdG9jayBhbmQgTWljaGVsIEJlcmdlcm9uLiBNaWNoZWwgVGhlcnJpZW4gZ290IHNvIG1hZCBhYm91dCBsb3NpbmcuIApObyBwZXJzb25hbCBhdHRhY2tzLCBuYW1lIGNhbGxpbmcsIG9yIGJ1bGx5aW5nLiBFeGVyY2lzZSBlbXBhdGh5LiBSZXNwZWN0IGJvdW5kYXJpZXMuIE5vIHNsdXJzIG9yIHZpY3RpbSBibGFtaW5nLiBEb24gZG93bnZvdGUuIFNwZWFrIHdpdGggeW91ciB1cHZvdGVzLgpObyBwcmUgcGFja2FnZWQgbWVhdCBmb3IgaGVyKS4gCkZvciB0aGUgc3VtbWl0IHRoYXQgZW5kZWQgd2l0aG91dCBhbiBhZ3JlZW1lbnQsIiBSb2RvbmcgU2lubXVuLCB0aGUgbmV3c3BhcGVyIG9mIHRoZSBOb3J0aCBydWxpbmcgV29ya2VycyBQYXJ0eSwgc2FpZCBpbiBhIGNvbW1lbnRhcnkuIEluIGEgY29sbGFib3JhdGlvbiBiZXR3ZWVuIE5BU0EgYW5kIHRoZSBFdXJvcGVhbiBTcGFjZSBBZ2VuY3kgR2FpYSBvYnNlcnZhdGlvbiBjcmFmdCwgYSB0ZWFtIG9mIGV4cGVydHMgY2FsY3VsYXRlZCBvdXIgZ2FsYXh5IHRvIGJlIGFyb3VuZCAxLjUgdHJpbGxpb24gc29sYXIgbWFzc2VzLiBIaWdoIHJlc29sdXRpb24gc2F0ZWxsaXRlIGltYWdlcyByZXZpZXdlZCBieSAgb24gV2VkbmVzZGF5IGFsc28gc2hvd2VkIHRoYXQgdGhlIG1hZHJhc2EsIHNhaWQgdG8gYmUgcnVuIGJ5IG1pbGl0YW50IGdyb3VwIEphaXNoIGUgTW9oYW1tYWQsIGFwcGVhcnMgdG8gYmUgc3RpbGwgc3RhbmRpbmcgYW5kIHZpcnR1YWxseSB1bmNoYW5nZWQgZnJvbSBhbiBBcHJpbCAyMDE4IHNhdGVsbGl0ZSBwaG90byBvZiB0aGUgZmFjaWxpdHkuIApJbiAyMDAyLCB0d28geWVhcnMgYWZ0ZXIgdGhlIHJlbGVhc2Ugb2YgdGhlIHRoaXJkIGVkaXRpb24gb2YgRCBXaXphcmRzIG9mIHRoZSBDb2FzdCwgdGhlIGdhbWUncyBwdWJsaXNoZXIsIHB1dCBvdXQgYSBjYWxsIGZvciB0aGUgY3JlYXRpb24gb2YgYSBuZXcgd29ybGQgICBhIGZhbnRhc3kgc2V0dGluZyB3aGVyZSBnYW1lcnMgY291bGQgcnVuIEQgY2FtcGFpZ25zLiAKQWxsIGNsdWJzIGFyZSBzdHVkZW50IGluaXRpYXRlZCBwcm9ncmFtcyB0aGF0IGFyZSBhZG1pbmlzdGVyZWQgYnkgVUNMQSBSZWNyZWF0aW9uLiAKWW91IGtub3csIHRoZSBlc3NlbnRpYWxzLiBXZSB0cmllZCB0byBleHBsYWluIHRvIGhpbSB0aGF0IHdlIHVuZGVyc3RhbmQsIGJ1dCB0aGF0IGEgbW92ZSBpc24gdmlhYmxlIGluIHNvIG1hbnkgd2F5cy4gCldlIG1peCB0cmFkaXRpb24gYW5kIGlubm92YXRpb24sIGtlZXBpbmcgdGhlIGhlcml0YWdlIGFzcGVjdHMgd2hpbGUgbW92aW5nIHdpdGggdGhlIHRpbWVzLiAKVGhlIHNjb3V0aW5nIHJlcG9ydHMgZnJvbSBTbWFydCBhbmQgWWFidXNlbGUgYm90aCBzdWdnZXN0ZWQgSG9yZm9yZCdzIGEgZm9yY2UuCjAxMTMgNDExNCBXYWxudXQgMDEyMSAxNTU3IENoZXJyeSBBc3NlbWJseSByZXF1aXJlZCAwMTAxICAzMzYxIE5hdHVyYWwgQ2hlcnJ5IDAxMDEgMzM3MCBNYWZjdSBPYWsgQXNzZW1ibHkgcmVxdWlyZWQgd2l0aGluIG91ciBkZWxpdmVyeSB3aXRoIGYgSTFhbSA2cG0gU2FtIHRvbiBTb3V0aCBCYXkgYW5kIEJyZXdlcnRvbiBSb2FkcyA0NTIgNTY4OCBFcmllIEJvdWxldmFyZCBFYXN0IGFuZCBLaW5uZSBSb2FkIDQ0OTQ2MTAgMSBRZmZsY2VNYXggd2l0aCBGdW1sdHVyZU1hbiBXZXN0IEdlbmVzc2VlIFN0cmVldCBhbmQgV2VzdGxpbmQgUm9hZCBza3hpIGkga2lMTWIgb3IgY2hlY2tzIGkgb24gb25lIGl0ZW0gb25yeS4gCldoaWxlIGl0IGRlZmluaXRlbHkgc2VlbXMgaGlnaCwgSSdtIG5vdCBzdXJlIHdoYXQgeW91IGV4cGVjdGVkIHdpdGhvdXQgb3V0bGluaW5nIGEgY29udHJhY3Qgb3IgbXV0dWFsbHkgYWdyZWVkIHRlcm1zPyBJIHRoaW5rIHRoZSBhZHZpY2UgdGhhdCB5b3UncmUgZ2V0dGluZyB0byBqdXN0IHNocnVnIG9mZiBhIGZyaWVuZHNoaXAgYmVjYXVzZSB5b3UgZGlkbid0IGhhdmUgYSBjb250cmFjdCBhbmQgYXJlIG5vdyB2YWd1ZWx5IHVuaGFwcHkgd2l0aCB0aGUgd29yayBpcyByZWFsbHkgc3RyYW5nZS4gWW91IGNvbW1pdHRlZCB0byBwYXlpbmcgaGVyICQxNzAwLCBzZWN1cmluZyBhIHJhdGUgeW91IGFncmVlIGlzIGxvd2VyIHRoYW4gbWFya2V0IHJhdGUsIGJ1dCBkaWQgbm90IGdldCBldmVuIGEgbG9vc2UgY29udHJhY3Qgb2Ygc2VydmljZXMgcmVuZGVyZWQuIApPZiAkMSwzNTUgcGVyIG1vbnRoLiAKV2UgY2VsZWJyYXRlIG9yIGZlZWwgZXZlbiBtb3JlIGRpc2d1c3RlZCB0aGF0IFdhc2hpbmd0b24gY2Fubm90IGV4dHJhY3QgaXRzZWxmIGZyb20gdGhlIGdyaXBzIG9mIFdhbGwgU3QuIApOZXZlcnRoZWxlc3MsIHlvdSBjYW4gbm90IGJlIHNlcnZlZCBhYnNvbHV0ZWx5IGZyZWUgZHJpbmtzOyB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byB3YXRjaCB0aGUgZ2FtZSB5b3UndmUgZ290IHdhZ2VyZWQgb24gZnJvbSBiaWcgVHYgc2NyZWVuczsgeW91IG1heSBuZWl0aGVyIHNlZSB0aGUgZmFjaWFsIGV4cHJlc3Npb25zIG9mIHRoZSBwb2tlciBvcHBvbmVudHMgbm9yIHRvIGhlYXIgdGhlIHNvdW5kcyB3aXRoIHRoZSBjb2lucyBmYWxsIGZyb20gdGhlIHNsb3QgbWFjaGluZSBvbmNlIHlvdSBoaXQgdGhlIGh1Z2UgamFja3BvdC4uIApXb3csIHdoYXQgYW4gZXBpc29kZS4gU28sIG15IGNvbnNwaXJhY3kgdGhlb3J5IGlzIHRoYXQgaXQgbm8gYWNjaWRlbnQgdGhhdCB0aG9zZSBHaWxlYWQgc2VjdXJpdHkgZ3V5cyBjYXVnaHQgTmljayBhbmQgSnVuZSBhdCB0aGUgc2FmZSBob3VzZSB3aGVyZSB0aGV5IHdlbnQgdG8gbWVldCBIYW5uYWguIE15IGFzc3VtcHRpb24gd2FzIG9ubHkgc3RyZW5ndGhlbmVkIGJ5IHRoZSB3aWRlIHBhbm5pbmcgc2hvdCBhdCB0aGUgZW5kIG9mIHRoZSBlcGlzb2RlIHRoYXQgc2hvd3MgdGhlIGhvdXNlIGlzIGVzc2VudGlhbGx5IGluIHRoZSBtaWRkbGUgb2YgYW4gaXNvbGF0ZWQgYXJlYSBhdCB0aGUgdG9wIG9mIGEgc25vd3kgbW91bnRhaW4gd2l0aG91dCBtYW55IGhvdXNlcyBvciBwZW9wbGUgYXJvdW5kLCBtZWFuaW5nIHRoYXQgdGhlIGZhY3QgdGhhdCB0aGUgc2VjdXJpdHkgZ3V5cyBjYXVnaHQgTmljayBhbmQgSnVuZSBsaWtlIDMgbWludXRlcyBhZnRlciB0aGV5IGNhbWUgb3V0c2lkZSBhbmQgbGVzcyB0aGFuIDE1IG1pbnV0ZXMgYWZ0ZXIgdGhleSBhcnJpdmVkIGF0IHRoZSBzYWZlIGhvdXNlIGlzIGF3ZnVsbHkgY29udmVuaWVudCB0aW1pbmcuCldpdGggNDUwLDAwMCBBdXN0cmFsaWFucyBwbGF5aW5nIHRoZSBnYW1lIChvciBzcG9ydCkgZWFjaCB3ZWVrLCBob3dldmVyLCBpdCBwcm9iYWJseSB0aW1lIHRvIGdpdmUgcG9rZXIgYSBzb2xpZCBkZWZpbml0aW9uIGluIGFuIGVyYSB3aGVuIG5ld3NwYXBlcnMgYXJlIGJhdHRsaW5nIHRvIGx1cmUgbW9yZSByZWFkZXJzLiBUaGUgYmFycmllciB0byBwcm9tb3RpbmcgcG9rZXIgcmVtYWlucyB0aGUgaW5jaXRlbWVudCB0byBnYW1ibGUsIHdoaWNoIGlzIGlsbGVnYWwuIExlYWRpbmcgb25saW5lIHBva2VyIHdlYnNpdGVzIGFyZSBub3QgYWxsb3dlZCB0byBhZHZlcnRpc2UsIGFsdGhvdWdoIGNsZXZlciBhZG1pbmlzdHJhdG9ycyBhcmUgY3JlYXRpbmcgZnJlZSB0byB1c2UgYWZmaWxpYXRlZCBzaXRlcyB0aGF0IGNhbiBiZSBwcm9tb3RlZCBpbiBtYWluc3RyZWFtIG1lZGlhIHRvIGx1cmUgcGxheWVycyB0byB0aGVpciBtZW1iZXJzaGlwIGJhc2VkIG9wZXJhdGlvbnMuIApUaGV5IGFyZSBlYXN5IHRvIGRvIG9uIGEgY2FycGV0IG9yIHJ1Zy4gR2x1dGVhbCBzdHJldGNoZXMgYXJlIGZhaXJseSBzaW1wbGUgYW5kIHBlcnNvbiBzcGVjaWZpYy4gSWYgeW91IGhhdmUgc2lnbmlmaWNhbnQgZ2x1dGVhbCBpbmZsZXhpYmlsaXR5LCB3aGljaCBpcyBtb3JlIGxpa2VseSBpbiBzb21lb25lIHdpdGggYnVyc2l0aXMsIHRoZW4geW91IG5lZWQgdG8gc3BlbmQgbW9yZSB0aW1lIHN0cmV0Y2hpbmcsIHBhcnRpY3VsYXJseSB3aGVyZSB0aGVyZSBpcyB0aGUgZ3JlYXRlc3QgcmVzaXN0YW5jZSBvciBkaXNjb21mb3J0IGR1cmluZyBzdHJldGNoaW5nLiAKV2UgZmluaXNoIGVhY2ggb3RoZXIgc2VudGVuY2VzLCB3ZSBib3RoIGtub3cgZWFjaCBvdGhlcnMgcmVhY3Rpb24gdG8gc3R1ZmYuIApNRVRIT0RTOiBNYWxlIHdlYW5pbmcgV2lzdGFyIHJhdHMgd2VyZSByYW5kb21seSBkaXZpZGVkIGludG8gZm91ciBncm91cHMgb2YgSEZEcywgaGlnaCBmYXQgYnV0dGVyIChIRiBCKSwgaGlnaCBmYXQKVGhlIGZpbmFsICJub3cgd2hlcmUgaW4gdGhlIHdvcmxkIGRpZCB0aGV5IGdvPyIgd2FzIG1lYW50IGFzIGlmIHdlIGFyZSBpbiBhIHBsYXkgYW5kIHRoZSBhY3RvcnMgaGF2ZSBsZWZ0IHRoZSBidWlsZGluZy4gU2luY2UgSSBoYWQgdG8gd3JpdGUgdGhpcyBlZGl0LCBpdCBzZWVtcyBteSBodW1vciB3YXMgcG9vcmx5IGRvbmUuIFBsZWFzZSBhY2NlcHQgbXkgc2luY2VyZSBhcG9sb2dpZXMuLiAKQXQgdHJpYWwgaGUgdGFsa2VkIGFib3V0IGhvdyBtdWNoIHNoZSB3YXMgInJ1bm5pbmciIGhlcmUgYW5kIHRoZXJlLCBmb3IgQVQsIGFuZCB0aGF0IGhlIHRob3VnaHQgc2hlIHdhcyBvdmVyIGV4dGVuZGluZyBoZXJzZWxmIGFuZCB0b2xkIGhlciBzbywgYnV0IHRoYXQgInRoYXQgd2hhdCBzaGUgbGlrZWQiIChiZWluZyB2ZXJ5IGJ1c3kpLiAKSSBhbHNvIHVuZGVyc3RhbmQgdGhhdCB0aGlzIGlzIHZlcnkgbXVjaCBhICJob21lIGdhbWUgdGhhdCBoYXBwZW5zIHRvIGhhdmUgYW4gYXVkaWVuY2UiLCBhbmQgSSB3b3VsZCBiZSBseWluZyBpZiBJIHNhaWQgdGhhdCBzb21lb25lIHdhdGNoaW5nIG1lIGFuZCBteSBmcmllbmRzIHBsYXlpbmcgRG5EIHdvdWxkbiBhbHNvIGhhdmUgdGhlc2Ugc2FtZSBjcml0aXF1ZXMuU29tZSBiYWNrZ3JvdW5kIG11c2ljIHdvdWxkIGJlIG5pY2UsIEkgdW5kZXJzdGFuZCB0aGF0IHlvdSBndXlzIGRvbiBoYXZlIHBlcm1pc3Npb24gdG8gdXNlIGNlcnRhaW4gc291bmR0cmFja3MgbGlrZSBDUiBkb2VzLCBidXQgc29tZXRoaW5nIHdvdWxkIG1ha2Ugdmlld2luZyBtb3JlIHBsZWFzdXJhYmxlLlBob25lIHVzYWdlL2NvbnN0YW50IGNvbnZlcnNhdGlvbi4gCkFGQUlLIGhlIGhhcyBubyBkZWJ0cyBvciBiaWxscyB0aGF0IHdlIGFyZSBhd2FyZSBvZi4gSSBzcG9rZSB3aXRoIHRoZSBzaXN0ZXIgYW5kIHNoZSBpcyBhd2FyZSBoZSBoYXMgcGFzc2VkIGFuZCBpcyBvbmx5IGFza2luZyBmb3Igc29tZSBvZiBoaXMgYXNoZXMgYWZ0ZXIgdGhlIGNyZW1hdGlvbiBhbmQgaXMgbm90IGludGVyZXN0ZWQgaW4gaGlzIHBlcnNvbmFsIHByb3BlcnR5LCBhc3NldHMsIG9yIGxlZnRvdmVyIG1vbmV5IGZyb20gYmFuayBhY2NvdW50cywgYW55dGhpbmcgbW9uZXRhcnkuIApBbmJpZWRlcnVuZyBhbmQgZ2FueiBSZWNodHNhdWVuCkZyYW5jaGlzaW5nIGRvZXNuIHN0b3AgdGhlIHBvc3NpYmlsaXR5IG9mIHNlbGxpbmcgeW91ciBzcG90LiBJZiB5b3UgaGF2ZSBhIHN1cmUgc3BvdCwgeW91IGNhbiBnZXQgbW9yZSByZXNzb3VyY2UuIFRlYW1zIHdobyB3b24gaW52ZXN0LCB3aWxsIGJlIGRvbWluYXRlZCBieSB0aG9zZSB3aG8gZG8gZXZlbiBtb3JlIHRoYW4gbm93LiBZb3UgbWFrZSBhIGxvdCBtb3JlIG1vbmV5IHdoZW4geW91IHdpbm5pbmcgc28gSSBkb3VidCB0aGF0IHlvdSB3aWxsIGdldCBvd25lcnMgdGhhdCB3b24gY2FyZSBiZWNhdXNlIGl0IHdvbiBiZSBwcm9maXRhYmxlIGZvciB0aGVtLgpUcmVhdG1lbnQgZm9yIFN0aWZmIEZpbmdlcnMgU3RpZmYgZmluZ2VyIGpvaW50cyBpbiB0aGUgbW9ybmluZyBjYW4gYmUgdHJlYXRlZCB1c2luZyByZWNvbW1lbmRlZCBSQSBtZWRpY2F0aW9ucy4gU29tZSBvZiB0aGUgd2lkZWx5IHVzZWQgb3ZlciB0aGUgY291bnRlciBtZWRpY2luZSBmb3IgYXJ0aHJpdGlzIGluY2x1ZGUgTmFwcm94ZW4gU29kaXVtIGFuZCBJYnVwcm9mZW4uIApJbiBhZGRpdGlvbiwgdGhpcyB0eXBlIG9mIHBva2VyIHRhYmxlIGNsb3RoIGlzIGVzcGVjaWFsbHkgY3V0IGFuZCBkZXNpZ25lZCB0byBhY2NvbW1vZGF0ZSB0aGUgc2l6ZSBvZiBhIHN0YW5kYXJkIG9yIG9jdGFnb25hbCBwb2tlciB0YWJsZS4gV2hldGhlciB5b3Ugb3JkZXIgeW91ciBzcGVlZCBjbG90aCBmcm9tIGEgbG9jYWwgcG9rZXIgc3VwcGx5IG1lcmNoYW50IG9yIGZyb20gYSB3ZWJzaXRlLCB5b3UnbGwgcmVjZWl2ZSBhIHN3YXRoZSBvZiBtYXRlcmlhbCB3aGljaCBpcyB0aGUgbnVtYmVyIG9mIGNob3NlbiB1bml0cyAoeWFyZHMpIGxvbmcgYnkgZmlmdHkgbmluZSBpbmNoZXMgd2lkZS4gWW91J2xsIGZpbmQgaXQgcHJpY2VkIG91dCBieSB0aGUgbGluZWFyIHlhcmQuLiAKV2Ugd2VyZSBvbmNlIHNvcGhpc3RpY2F0ZWQgZW5vdWdoIHRvIGZha2UgaXQgaWYgd2UgZGlkbid0IGZlZWwgaXQuCkFuZCBob3cgdGhlIGhlbGwsIGluIDIwMTUsIGFyZSB3ZSBldmVuIGRpc2N1c3NpbmcsIGluIGVmZmVjdCwgd2hldGhlciBMR0JUIGZvbGtzIGNhbiBidXkgYSBmcmlnZ2luIGhhbWJ1cmdlciBvciBzZWUgYSBkb2N0b3I/ClRoZSBtYW4gd2hvIGJlYXQgTGFzIFZlZ2FzIGF0IGJsYWNramFjawpOb3Qgb25seSB0aGF0LCBidXQgdW5saWtlIG1vc3Qgb3RoZXIgYnJhbmNoZXMgb2YgdGhlIEJvUywgdGhlIE1pZHdlc3QgY2hhcHRlciBhbGxvd3MgcmVjcnVpdHMgZnJvbSB0cmliYWxzLCBib2xzdGVyaW5nIHRoZWlyIG51bWJlcnMgZnVydGhlci4gT25lIG9uIG9uZSwgYSBrbmlnaHQgb3IgYSBodW1hbm9pZCByb2JvdCBtYXkgbG9zZSB0byBhbiB1cGdyYWRlZCBzZWN1cml0cm9uIGJ1dCB0aGUgQ291cmllciBtZW4ganVzdCBjYW4ga2VlcCB1cCB3aXRoIHRoZSBudW1iZXJzIHRoZSBXYXJyaW9yIGNhbiBwdW1wIG91dC4uIApJbiB0aGlzIHN5c3RlbSwgeW91IGFyZSBhcyBnb29kIGFzIHRoZSBzdHJvbmdlc3QgY29kZXIgb24geW91ciB0ZWFtLiBXaGljaCByZWFsbHksIHJlYWxseSwgcmVhbGx5IHN1Y2tzLCBiZWNhdXNlIHNvbWUgcGVvcGxlIGxpdmUsIGJyZWF0aGUsIGFuZCBzbGVlcCBwcm9ncmFtbWluZy4gQW5kIEkgZG9uIGJsYW1lIHRoZXNlIHBlb3BsZSwgdGhleSBhcmUganVzdCBmb2xsb3dpbmcgdGhlaXIgcGFzc2lvbnMuCk9uZSBwYXRpZW50IHJlcG9ydGVkIHRoYXQgaGUgdXNlZCBjb2NvbnV0IG9pbCBvbiBoaXMgaGFpciBhbmQgc2NhbHAgZm9yIGEgeWVhciBhbmQgZHVyaW5nIHRoYXQgdGltZSBoaXMgaGFpciBiZWNhbWUgdGhpY2tlciBhbmQgaGUgaGFkIG1vcmUgb2YgaXQgb24gdGhlIHRvcCBvZiBoaXMgaGVhZCB3aGVyZSBoZSBoYWQgYmVlbiByZWNlZGluZyBhIGJpdDsgaXQncyBnb29kIGFzIGEgaGFpciBnZWwgdG9vLiBHb29kIGNpcmN1bGF0aW9uIHRvIHRoZSBzY2FscCBpcyBpbXBvcnRhbnQuIE1ha2Ugc3VyZSB0byB0ZXN0IGFsbCB0aGVzZSBob21lIHJlbWVkaWVzIG9uIGEgc21hbGwgYXJlYSBmaXJzdCBhbmQgY2hlY2sgd2l0aCB5b3VyIGRvY3RvciBvciBza2luIGRvY3RvciBiZWZvcmUgdHJ5aW5nIGFueSBuYXR1cmFsIGhvbWUgcmVtZWR5IGlmIGl0IGluY2x1ZGVzIGFueSBpcnJpdGF0aW5nIGluZ3JlZGllbnRzLgpJIHNlZW4gdGhpcyByZXBlYXRlZGx5IGFzIGFuIGlzc3VlIGZvciBOZXcgWW9yayBwdWJsaWNhdGlvbnMgZnJvbSB0aGUgUG9zdCB0byB0aGUgVGltZXM6IGEgcmVwZWF0ZWQgYmVsaWVmIHRoYXQgTmV3IFlvcmtlcnMgYXJlIFRIRSBBbWVyaWNhbnMuLiAKTG9naW5UaGlzIGlzIG5lY2Vzc2FyeSB0byBzaWduIGluIHRvIHRoZSBIdWJQYWdlcyBTZXJ2aWNlLiAKRmlyc3QgZGF5LCBJIHdhcyBidXN5IHB1bGxpbmcgd2lyZXMgYW5kIGhhZCBvbmUgb2YgdGhlIG90aGVyIGd1eXMgcHV0IHRoZSBqYWNrcyBvbiB0aGUgbmV3bHkgcHVsbGVkIHdpcmVzLiAKSXQgZmFyIHRvbyBlYXJseSB0byBzYXkgYW55dGhpbmcgYWJvdXQgTVZTIG9yIEVTQiBidXQgbmVpdGhlciBzaG93ZWQgYW55dGhpbmcgdGhhdCB3b3VsZCBzdWdnZXN0IHdoYXQgeW91IHNheWluZy4gVGhlIG9uZSBwcm9taXNpbmcgdGhpbmcgaXMgTVZTIHZlcnRpY2FsIHNwZWVkLCBhbmQgaWYgd2UgYWN0dWFsbHkgcnVuIHBsYXlzIHRvIHV0aWxpemUgdGhhdCBoZSBjb3VsZCBiZSBhIGdvb2Qgb3ZlciB0aGUgdG9wIHRocmVhdC4gVGhvc2UgYXJlbiB0aGUgdHlwZSBvZiBndXlzIHRoYXQgbWFrZSBhbiBvZmZlbnNlIHRob3VnaCwgdGhleSBqdXN0IG9jY2FzaW9uYWwgaG9tZSBydW4gaGl0dGVycy4uIApUaGF0IGlzIGEgZ3JlYXQgaWRlYS4gTXkgUENQIHRyZWF0ZWQgbWUgZm9yIHllYXJzIGFuZCBoYWQgbWUgb24gb3h5Y29kb25lLiBJIG5ldmVyIGZhaWxlZCBhIGRydWcgdGVzdCBvciBwaWxsIGNvdW50LiAKMTdrLCBhIHllYXIgb2YgbXkgbGlmZSB0cmF2ZWxpbmcgdG8gY291cnQsIDcgbW9udGhzIHBpc3NpbmcgaW4gYSBjdXAuIEZvdW5kIG91dCBhYm91dCB0aGUgbGF3IHlvdSBhcmUgY2xhaW1pbmcgZXhpc3RzIDIgeWVhcnMgYWZ0ZXIgbXkgY29udmljdGlvbi4gCkluIHNob3J0LCBpbiBzbWFsbCBzYW1wbGUgc2l6ZXMgdGhlIHZhcmlhbmNlIGluIHlvdXIgdGVhbXMgYXJlIG1hc3NpdmUgYW5kIHRoZSBzd2luZ3MgeW91ciBTUiBjYW4gbWFrZSBldmVuIGlmIHlvdSBwbGF5aW5nIHlvdXIgQSBnYW1lIGNhbiBiZSByZWxhdGl2ZWx5IGJpZy4gWW91IGNhbiBub3Qgc29ycnkgYWJvdXQgeW91ciB0ZWFtbWF0ZXMsIHlvdSBjYW4gb25seSB3b3JyeSBhYm91dCB3aGF0IGlzIGluIHlvdXIgY29udHJvbCB3aGljaCBpcwpUaGlzIHJlc3VsdGVkIGluIGV2ZXJ5b25lIHJlZmVycmluZyB0byBtZSBhcyAidGhlIHNlcmlhbCBraWxsZXIiIGFuZCBhc3N1bWluZyB0aGF0IEkgd2FzIG9uIGFsbCBvZiB0aGUgZHJ1Z3MgaW4gdGhlIHVuaXZlcnNlLiAKSSBtZWFuLCBtYXliZSBpZiBULiBELiAKTW9yZ2FuIFN0YW5sZXkgYW5kIFBKVCBQYXJ0bmVycyBJbmMuIGFjdGVkIGFzIGZpbmFuY2lhbCBhZHZpc2VycyB0byBTdGFycyBHcm91cCwgd2hpbGUgRGV1dHNjaGUgQmFuayBBRywgR29sZG1hbiBTYWNocyBHcm91cCBJbmMuLCBNYWNxdWFyaWUgR3JvdXAgTHRkLiBhbmQgTW9yZ2FuIFN0YW5sZXkgcHJvdmlkZWQgdGhlIGNvbW1pdHRlZCBkZWJ0IGZpbmFuY2luZy4KSGUgc2F3IG1hbnkgY29tcmFkZXMgZGllIGFuZCBmZWx0IGd1aWx0eSBiZWNhdXNlIGhlIGp1c3QgbG9zdCBoaXMgYXJtLiBNeSBncmFuZG1vdGhlciB0b2xkIG1lIGhvdyBkZXByZXNzZWQgaGUgd2FzIHdoZW4gaGUgY2FtZSBiYWNrLi4gCk5hdGl2ZSBBbWVyaWNhbiBtYW4gd2Fsa3MgaW50byB0aGVpciBncm91cCwgYmFuZ2luZyBkcnVtIGFuZCBjaGFudGluZyB0b28gKHN0dWRlbnRzIHRob3VnaHQgaGUgd2FzIGpvaW5pbmcgaW4gc28gdGhleSB0dXJuZWQgdXAgdGhlIHZvbHVtZSkKT24gdGhlIG9uZSBoYW5kLCBzaGUgbWFpbnRhaW5zIHRoYXQgc2hlIGFuZCBoZXIgb25seSBkYXVnaHRlciBoYXZlIGFuIG9wZW4sIGhvbmVzdCByZWxhdGlvbnNoaXAuIApPdXIgdG91cm5hbWVudHMgYXJlIHN0cnVjdHVyZWQgdXNpbmcgY2FzaW5vIGZvcm1hdCBhbmQgYmxpbmQgc3RydWN0dXJlcyB0byBwcmVwYXJlIHBsYXllcnMgdG8gcGxheSBpbiBtYWpvciB0b3VybmFtZW50cyBpbiBjYXNpbm9zLiBXaW4gbmlnaHRseSBwcml6ZXMgYW5kIGVhcm4gcG9pbnRzIHRvIHF1YWxpZnkgZm9yIG91ciBzZWFzb24gdG91cm5hbWVudHMgd2hlcmUgeW91IGNhbiB3aW4gYmlnIGNhc2ggYW5kIHByaXplcy4gClNvIHBsZWFzZSBldmFsdWF0ZSB5b3VyIHNpdHVhdGlvbnMgbW9yZSByZWFsaXN0aWNhbGx5LiBOdW1iZXIgb25lLCBwb2tlciBpcyBsZWFndWVzIGhhcmRlciB0aGFuIHdoYXQgaXQgdXNlZCB0byBiZSBpbiAyMDA3LiBUaGUgYXZlcmFnZSAxMDBubCBwbGF5ZXIgdG9kYXkgY291bGQgZWFzaWx5IGJlYXQgMTAwMG5sIGJhY2sgdGhlbi4gTW9uZXkgaXMgbXVjaCBoYXJkZXIgdG8gZWFybiBub3cuCkEgYmFyIGNhbGxlZCBMb2NhbCBmaXJzdCB0aW1lIEkgd2VudCB3YXMgZHVyaW5nIHRoZSBkYXkgYW5kIHRoZSBzZXJ2aWNlIHdhcyBzbG93IGJ1dCB3aGF0ZXZlci4gCkluIHRoZSBmaXJzdCBoYW5kIEkgd2FzIGRlYWx0LCBJIG1hZGUgdG9wIHR3byBwYWlyIHdpdGggS0ogKG9yIHNvbWV0aGluZyBvZiB0aGUgbGlrZXMpIGluIGEgbXVsdGl3YXkgbGltcGVkIHBvdCBmb3IgYSBkb3VibGUgdXAgKyBjaGFuZ2UuIEkgd2FzIGhhcHB5IHdpdGggdGhhdCwgSSB3YW50ZWQgdG8gbGVhdmUuIApJbnNlcnRpb24gb2YgaW5kd2VsbGluZyBjYXRoZXRlclJlbW92YWwgb2YgZm9yZWlnbiBib2R5IGZyb20gZXllCkFuZCBXYWxzaCwgVi4gMjAxNS4gTm9uIEludmFzaXZlIEh1bWFuIEJyYWluIFN0aW11bGF0aW9uIGluIENvZ25pdGl2ZSBOZXVyb3NjaWVuY2U6IEEgUHJpbWVyLiAKV2hhdCB3b3VsZCB5b3VyIE5vLiBJdCBvZmZlcnMgcm9wZSBjb3Vyc2VzLCB0cmFtcG9saW5lcyBhbmQgZXNjYXBlIHJvb21zLCBhcyB3ZWxsIGFzIGZvb2QgYW5kIGRyaW5rLiBUaGUgUmVjIFJvb20gbG9jYXRlZCBhdCBNYXNvbnZpbGxlIFBsYWNlLCBvd25lZCBieSBlbnRlcnRhaW5tZW50IGdpYW50IENpbmVwbGV4LCBpcyBwZXJoYXBzIGEgbW9yZSBkaXJlY3QgdGhyZWF0LCB3aXRoIGJpbGxpYXJkcywgYXhlIHRocm93aW5nLCBhcmNhZGUgYW5kIHZpcnR1YWwgcmVhbGl0eSBnYW1lcywgbGl2ZSBiYW5kcyBhbmQgc2hvd3MsIHRvIG5hbWUgYSBmZXcgb2ZmZXJpbmdzLgpBbmQgaXQgaGFzLiBUaGVyZSBhcmUgbWlsbGlvbnMgb2YgaG9tZXMgZ29pbmcgaW50byBmb3JlY2xvc3VyZS4gCk5pY2h0IG51ciBkaWUgZXh0cmVtZSBIaXR6ZSBpc3Qgdm9yZXJzdCBtYWwgdm9yYmVpLCBsZWlkZXIgYXVjaCBtZWluZSBHbGNrc3N0cmhuZSAgV2llIGljaCBlcyBqYSBzY2hvbiBpbSB2b3JsZXR6dGVuIFBvc3QgYW5nZWtuZGlndCBoYWJlLCBpc3QgZXMgamV0enQgYXVjaCBlaW5nZXRyb2ZmZW4uIEplZGVyIFN1cGVybGF1ZiBoYXQgbGVpZGVyIGF1Y2ggZWlubWFsIGVpbiBFbmRlISBTZWl0IHp3ZWkgVGFnZW4ga2FubiBpY2gga2VpbmUgSGFuZCBtZWhyIGdld2lubmVuLCBtZWluZSBEcmF3cyBrb21tZW4gbmljaHQgYW4sIG1laW5lIFBvY2tldCBQYWlycyB3ZXJkZW4gYWxsZXNhbXQgZ2VzY2hsYWdlbiB1bmQgZGllIEdlZ25lciB0cmVmZmVuIG5hY2ggYmVsaWViZW4uLiAKSSBjYW4gc2VuZCBhIHNlY3VyZSBtZXNzYWdlIHRvIG15IGRvY3RvciB3aG8gd2lsbCBzZW5kIGl0IG92ZXIgd2l0aG91dCBhbiBhcHBvaW50bWVudCBiZWNhdXNlIGhlIGtub3dzIG9mIHRoZSBhbGxlcmd5LiBCZUluIHJlZ2FyZHMgdG8gdGhlIGdlbmVyaWMgRXBpUGVuIEkgYmUgc3VycHJpc2VkIGlmIHlvdSBjb3VsZG4gZmluZCBpdCBhdCBhbnkgcGhhcm1hY2llcyBuZWFyIHlvdS4uIApCZWNhdXNlIEkgcmVmZXJyaW5nIHRvIGluIHRoZSBwYXN0IDYwIHllYXJzLCBvciB3aGF0ZXZlciB0aW1lbGluZSBpcyBuZWNlc3NhcnkgdG8gbWFrZSBpdCB0cnVlLiAKUmlnaHQgbm93IEkganVzdCB1c2luZyB0aGVzZSAuIFdoaWNoIHdvcmsgd2VsbCBvbiBzb21lIHR5cGVzIG9mIGljZSwgYnV0IG5vdCBvdGhlcnMuIEVzcGVjaWFsbHkgd2hlbiB0aGVyZSBzbGljayBpY2UgY292ZXJlZCBpbiBmcmVzaCBmbHVmZnkgc25vdy4gClNhZGx5LCB0aGlzIHRyZW5kIGRpZCBub3QgbGFzdCB0b28gbG9uZywgYW5kIHRoZSBHcmVhdCBEZXByZXNzaW9uLCBhcyB3ZWxsIGFzIFdvcmxkIFdhciBJSSwgbWFkZSBpdCBzZWVtIGxpa2UgdGhlIHJvbGxlciBjb2FzdGVyIGZhZCBoYWQgZW5kZWQsIHdpdGggY29hc3RlcnMgYmVpbmcgZGVtb2xpc2hlZCBhdCBhbiBhbGFybWluZyByYXRlLiAKTW9zdCBvZiB0aGUgZ2FtZSBzdXBwbGllcnMgaW5jb3Jwb3JhdGUgYSBsaXZlIGNoYXQgb3B0aW9uIGludG8gdGhlaXIgcHJvZHVjdHMgc28gdGhhdCBwYXJ0aWNpcGFudHMgY2FuIGludGVyYWN0IGFuZCBjb21tZW50IG9uIHRoZSBnYW1lLCBicm9hZGVuaW5nIHRoZWlyIGV4cGVyaWVuY2UuIEJ5IHVzaW5nIHRoZSBjaGF0IG9wdGlvbiB5b3UgY2FuIGV2ZW4gY29tbXVuaWNhdGUgd2l0aCB0aGUgZGVhbGVycyB3aG8gd2lsbCBhbHdheXMgYmUgZnJpZW5kbHkgYW5kIHN1cHBvcnRpdmUuIE5vdCB0byBtZW50aW9uIHRoZWlyIGF0dHJhY3RpdmUgYXBwZWFyYW5jZSBhbmQgcGxlYXNhbnQgZGVtZWFub3IuIApBYm92ZSBhbGwgcmVtZW1iZXIgdGhhdCBpbiBPbWFoYSwgaGFuZHMgYXJlIHZlcnkgY2xvc2UgdG9nZXRoZXIgaW4gdmFsdWUsIHNvIGJldCBtb3JlIGFuZCBjYWxsIGxlc3MuLiAKRXhwZWN0IHRoYXQgYXQgZnVsbCwgdW5jdXJ0YWlsZWQgcHJvZHVjdGlvbiBjYXBhY2l0eSB0aGUgY2FsbCBvbiBvaWwgYnkgcmFpbCBzZXJ2aWNlcyBpbiBXZXN0ZXJuIENhbmFkYSB3aWxsIHN1cnBhc3MgNTAwIDYwMCwwMDAgYnBkIGJ5IG1pZCAyMDIwIGJlZm9yZSBMaW5lIDMgY2FuIGVudGVyIHNlcnZpY2UsIEpvaG5zdG9uIHdyb3RlIGluIGEgbm90ZS4KRmluYWxseSwgcGVyaGFwcyB0aGUgY29vbGVzdCBmZWF0dXJlIG9mIEdyb3VwIFBsYXkgaXMgdGhhdCBpdCBhbGxvd3MgZm9yIG11bHRpcGxheWVyIGdhbWVzIHRvIGJlIHBsYXllZCBvbiBzZXZlcmFsIHBob25lcyBzaW11bHRhbmVvdXNseS4gT2YgY291cnNlLCBvbmx5IHN1cHBvcnRlZCBnYW1lcyB3b3JrICAgdGhlcmUgd2FzIGEgcG9rZXIgYW5kIHB1enpsZSBnYW1lcyBwcmVsb2FkZWQgb24gb3VyIHVuaXQgd2l0aCBBc3BoYWx0NyBhbmQgR3VuIEJyb3Mgb2ZmZXJlZCBhcyBvdGhlciBnYW1lcyB0aGF0IHN1cHBvcnQgR3JvdXAgUGxheSBtdWx0aXBsYXllci4KR3JlYXQgdmlkZW8gbGluayBhdCBib3R0b20gb2YgdGhlIHBhZ2UgRnV6eiBzcGVlY2ggU2FyYW4gd3JhcCh3aGljaCBmcm9tIHRoZSBzdG9yZSBjb21lcyBpbiBwaWVjZXMpICAgeW91ciBib2RpZXMgRkFTQ0lBIGlzIG1vcmUgbGlrZSBhIGNvbnRpbnVvdXMgZmFicmljIGNvdmVyaW5nIGV2ZXJ5dGhpbmcgaW4geW91ciBib2R5IHdpdGggbm8gaWRlbnRpZmlhYmxlIGJlZ2lubmluZyBvciBlbmQuRmFzY2lhIGdvZXMgdGhyb3VnaG91dCB5b3VyIHdob2xlIGJvZHlzbyB0ZW5zaW9uIG9yIHRyYXVtYSBpbiBvbmUgcGFydCBvZiB5b3VyIGJvZHkgd2lsbCBvZnRlbiBhZmZlY3QgYW5vdGhlciBwYXJ0IG9mIHlvdXIgYm9keS5NeW9mYXNjaWFsIFJlbGVhc2UgaXMgYSBzb2Z0IHRpc3N1ZSAoTXVzY2xlIGFuZCBGYXNjaWEpIHRyZWF0bWVudCBmb2N1c2VkIGF0IGJyZWFraW5nIHVwIHNvZnQgdGlzc3VlIGFkaGVzaW9ucyAoc2NhciB0aXNzdWUpLiAKRGV0IGVyIGdyZWl0IGF0IGRlIGZyIGRpc3NlIHBlbmdlbmUgbnIgc2l0dWFzam9uZW4gZXIgc29tIGRlbiBlciwgbWVuIGRldCBlciBodmVya2VuIHJldHRmZXJkaWcgZWxsZXIgZm9ydXRzaWdiYXJ0ICBnanJlIGRldCBwIGRlbm5lIG10ZW4uIApTaGUgZmVsdCBzaGUgd2FzIGVudGl0bGVkIHRvIHRoZSBhdHRlbnRpb24gb2YgaGVyIG1vdGhlciBhbmQgbGF0ZXIgQ2FtaWxsZS4gCkxhIGNlc3NhdGlvbiBkZSBjZSBmaW5hbmNlbWVudCBwb3VycmFpdCBhY2NscmVyIGwnZXNjYWxhZGUgZXh0cm1pc3RlIGV0IGNvbmZsaWN0dWVsbGUgZGFucyBsYSByZ2lvbiBkdSBQcm9jaGUgT3JpZW50LiAgc291dGVuaXIgZmluYW5jaXJlbWVudCB1biBFdGF0IHF1aSBzb21icmUgZGFucyB1biBleHRyZW1pc21lIGRhbmdlcmV1eCBldCBkdmVsb3BwZSBkZXMgaWRlcyBhcHBlbGFudCBhdSBjb25mbGl0IG5lIHBldXQgcGFzIHRyZSBhZG1pcy4gCkkgbm93IGhhdmUgdG8gcGF5IHVwIHRvICQxNC4wMCBwZXIgY2xpY2shISBJIGRvbid0LiBUaGVuSSB0eXBpY2FsbHkgcGF1c2UgbXkgYWRzIGZvciBhYm91dCBhIHdlZWsgYW5kIHRoZW4gc3RhcnQgYWxsIG92ZXJ3aXRoIG5ldyBhZHMuIApCeSBzd2l0Y2hpbmcgYmV0d2VlbiB0aGUgdHdvIGFudGVubmFzIGF0IGFuIGF1ZGlvIHJhdGUgaXQgc3VwZXJpbXBvc2VzIGEgdG9uZSBvbiBhIHJlY2VpdmVkIHNpZ25hbCB3aGVuIGRldGVjdGVkIGJ5IGFuIEZNIHJlY2VpdmVyLiBJZiBvbmUgYW50ZW5uYSBpcyBjbG9zZXIgdG8gdGhlIHRyYW5zbWl0dGVyIHRoYW4gdGhlIG90aGVyLCB3aGVuIGl0IGlzIHN3aXRjaGVkIGluIHRoZSBSRiBzaWduYWwgaXMgYXQgYSBkaWZmZXJlbnQgdm9sdGFnZSB0aGFuIHdoZW4gdGhlIG90aGVyIGFudGVubmEgaXMgc3dpdGNoZWQgaW4uIApGb3JtYW50IHVuIGNvdXBsZSB1bmkgKG1hcmlhZ2Ugb3UgMiBhbm5lcyBkZSB2aWUgY29tbXVuZSkgOwpJbiBteSBvcGluaW9uLCBpdCBpcyBiZWNhdXNlIEtvcmVhbnMgaGF2ZSBuZXZlciBmb3VnaHQgYW5kIHdvbiB0aGVpciBvd24gaW5kZXBlbmRlbmNlLiAKQSBUeXBpY2FsIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUgVHJlYXRtZW50IFBsYW4KSSB2aXNpdGVkIE15YW5tYXIgc29vbiBhZnRlciwgYW5kIEkgbWFkZSBhIGNydWNpYWwgY2hhbmdlIGluIG15IGJlbGllZnM6IHRvIHJlc3BlY3QgcGVvcGxlIGFuZCBub3QgbG9vayBhdCB3aGF0IHRoZXkgYmVsaWV2ZSwgaWdub3JpbmcgdGhlIHBoeXNpY2FsIG5lZWQuIEkgd291bGQgd29yayB0byBhbGxldmlhdGUgc3VmZmVyaW5nIGluIHRoZSB3YXlzIHRoYXQgSSBjb3VsZCwgYmVjYXVzZSBpdCdzIG5vdCBnb29kIGVub3VnaCB0byBzZWUgdGhlIHdvcmxkIHRocm91Z2ggYmxpbmtlcmVkIGV5ZXMuCk15IGJyb3RoZXIgZHJvdmUgYXJvdW5kIGZvciBhIHJlYmVsIGZsYWcgbGljZW5zZSBwbGF0ZSBmb3Igb3ZlciBhIGRlY2FkZS4gTXkgYnJvdGhlciBoYXMgbm90IGFuZCBpcyBub3QgYSByYWNpc3QgaW4gYW55IG1lYXN1cmUuCld5bm4gZGVuaWVkIGFsbCB0aGUgYWNjdXNhdGlvbnMgdG8gdGhlIHBhcGVyLCBjbGFpbWluZyBpdCB3YXMgYWxsIGEgc21lYXIgY2FtcGFpZ24gYnkgaGlzIGV4IHdpZmUgRWxhaW5lIFd5bm4uCkVsZXBoYW50cGhhbGx1cyB1CjMuKSBUaGUgcHJvZHVjdCBhcnJpdmVkIGxhdGUgYW5kIGRhbWFnZWQsIEkgbmV2ZXIgb3BlbmVkIGl0IGJ1dCB0aGUgYm94IGl0IHdhcyBzaGlwcGVkIGluIGhhZCBtdWx0aXBsZSBob2xlcy4KT3RoZXIgdGhhbiB0aGF0IGhhZCBhIHRyaXAgb3ZlcnNlYXMgYnV0IG5vdGhpbmcgZWxzZS4gQmUgaG9uZXN0LCBoYXZlIHlvdSBnb3QgYW55IG9mIHRoZSB3aW5uaW5ncyBsZWZ0PyBIYSBoYSB5ZXMgbHVja2lseSBJJ20gMzAgbm93IGFuZCBub3QgMjAsIG90aGVyd2lzZSBJIHByb2JhYmx5IHdvdWxkbid0LiBZb3UgaGFkIHNldCB1cCBhIHJ1cmFsIG1lcmNoYW5kaXNpbmcgYnVzaW5lc3MgaW4gTHVjaW5kYWxlIHdpdGggeW91ciBzaXN0ZXIgTWVsaXNzYSBzaG9ydGx5IGJlZm9yZSB5b3VyIHdpbi4gCkNvZGVudGlmeSBiYXNlZCBzeXN0ZW0gaGFzIGNsb3NlIGxpbmtzIHRvIHRoZSB0b2JhY2NvIGluZHVzdHJ5LCB3aGlsZSB0YXggc3RhbXAgc3lzdGVtcyB3ZXJlIGRldmVsb3BlZCBpbmRlcGVuZGVudGx5LiAKVGhleSBsb29rIGNvbXBsZXRlbHkgc3RvY2sgbm93LiBJdCB0b29rIGFib3V0IDExIGRheXMgdG8gYXJyaXZlIGZyb20gQ2hpbmEsIHdoaWNoIGlzIHByZXR0eSBxdWljayBmb3IgQWxpRXhwcmVzcy4uIApZZXQgb2xkZXIgc3VwcG9ydGVycyB3aWxsIGhhcmtlbiBiYWNrIHRvIGFuIGVyYSB3aGVyZSB0aGUgZ3JvdW5kIHVuaW52aXRpbmcgc3Vycm91bmRzIGhlbHBlZCBmb3N0ZXIgYSBsb2NhbCBzZW5zZSBvZiByZXNpbGllbmNlIGluIGhvbWUgdGVhbXMgYW5kIGluY2l0ZWQgdW5lYXNlIGFuZCBkaXNjb21mb3J0IGluIHZpc2l0aW5nIHNpZGVzLiBXaGlsZSBzZWVraW5nIGNvbWZvcnQgZnJvbSBoaXN0b3J5IGFuZCB0cmFkaXRpb24gaXMgYSBkdWJpb3VzIGV4ZXJjaXNlLCB0aGF0IHNlbnNlIG9mIFRlcnJ5bGFuZCBiZWluZyBhIGJhc3Rpb24gb2YgR2Fsd2F5IHNwaXJpdCBtdXN0IHVyZ2VudGx5IGJlIHJlY3JlYXRlZC4uIApPUCBoYXMgZWl0aGVyIGhhZCB0aGUgY29udmVyc2F0aW9uIHdpdGggaGlzIHdpZmUgaW4gdGhlIHBhc3QgYWJvdXQgaW5maWRlbGl0eSBhbmQgbWFnaWNhbGx5IGZvcmdvdCBhYm91dCBpdCBvciB0aGV5IG5ldmVyIGhhZCB0aGlzIHRhbGsgYW5kIGhlIGp1c3QgYXNzdW1lZCBzaGUgYmUgb2sgd2l0aCBpdC4gCkFpcnBhcmlmLCBhc3NvY2lhdGlvbiBkZSBzdXJ2ZWlsbGFuY2UgZGUgbGEgcXVhbGl0IGRlIGwnYWlyIGVuIGxlIGRlIEZyYW5jZSwgcHJ2b2l0IHBvdXIgYXVqb3VyZCdodWkgdW4gZHBhc3NlbWVudCBkdSBzZXVpbCBkJ2luZm9ybWF0aW9uIGV0IGRlIHJlY29tbWFuZGF0aW9uLCBsZSBwcmZldCBhIGRvbmMgZmluYWxlbWVudCBkY2lkIGxhIG1pc2UgZW4gcGxhY2UgZGUgbGEgY2lyY3VsYXRpb24gZGlmZnJlbmNpZSAgbCdpbnRyaWV1ciBkdSBwcmltdHJlIGRsaW1pdCBwYXIgbCdBODYgOiBzZXVscyBsZXMgdmhpY3VsZXMgbXVuaXMgZCd1bmUgdmlnbmV0dGUgQ3JpdCdBaXIgZGUgY2xhc3NlIDAgIDMgcG91cnJvbnQgY2lyY3VsZXIgZGFucyBjZSBwcmltdHJlLiBMJ29ibGlnYXRpb24gZGUgY29udG91cm5lbWVudCBwYXIgbGEgRnJhbmNpbGllbm5lIGRlcyB2aGljdWxlcyBlbiB0cmFuc2l0IGRvbnQgbGUgUFRBQyBleGNkZSAzLDUgdG9ubmVzLiAKRWR1Y2F0aW9uIGlzIGEgYnVzaW5lc3MsIHRoZXkgaGF2ZSBldmVyeSBpbmNlbnRpdmUgdG8gdGVsbCB5b3UgeW91IGdvaW5nIHRvIGVhcm4gbW9uZXkgd2l0aCB0aGVpciBkZWdyZWUuIFRoaXJkIHBhcnR5IHZlcmlmeS4uIApFbmdsYW5kIGluIHBva2VyIGdhbWUgd2l0aCBkZXZpbCBvbmNlIGFnYWluCkhvd2V2ZXIsIGlmIHRoYXQgbm90IHRoZSBjYXNlIGFuZCB5b3UgdHJ5aW5nIHRvIG1heGltaXplIHZhbHVlLCB0aGVuIHRoZSBub3JtYWwgcmVjb21tZW5kYXRpb24gd291bGQgYmUgdG8gZ28gbG93ZXIgd2l0aCBjbGFyaXR5IGFuZCBlaXRoZXIgc2F2ZSBzb21lIG1vbmV5IG9yIGdvIGJpZ2dlciBpbiBzaXplLiAKSGUgaGl0IHJvY2sgYm90dG9tIHNob3J0bHkgYWZ0ZXIgdGhhdCwgYnV0IGl0IHR1cm5zIG91dCB0aGF0IGlzIHdoYXQgaXQgdG9vayBmb3IgaGltIHRvIHNlZSB0aGluZ3MgY291bGQgYmUgZGlmZmVyZW50LiBIZSBzdGFydGVkIGF0dGVuZGluZyB3ZWVrbHkgdGhlcmFweSBzZXNzaW9ucywgZ2V0dGluZyB0aGUgbWVkcyByaWdodCBhbmQgQWx5c3NhLCBhIGtpbmQgc291bCBhbmQgZnJpZW5kIG9mIGEgZnJpZW5kIGV2ZW4gaGVscGVkIGhpbSBnZXQgYSBqb2IgZGVsaXZlcmluZyBkYWlyeSBwcm9kdWN0cyB0byBsb2NhbCBidXNpbmVzc2VzLiBIZSBmaW5hbGx5IGZlbHQgbGlrZSB0aGluZ3Mgd2VyZSB0dXJuaW5nIGFyb3VuZCBhbmQgdGhhdCBzb21lZGF5LCBzb29uLCBoZSBtaWdodCBiZSBhYmxlIHRvIHByb3ZlIHRvIGhpcyBleCB0aGF0IGhlIHdhcyBub3cgY2FwYWJsZSBvZiBiZWluZyBhIHBhcnQgb2Yga2lkcyBsaXZlcyBpbiB0aGUgd2F5IHNoZSBhbHdheXMgaG9wZWQgaGUgY291bGQuIApOaWdodHMgb3V0IEkgbGlrZSB0byBnbyBvdXQgd2l0aCB0aGUgYm95cywgaGF2aW5nIGZ1bjsgSSBhIGJpdCBvZiBhIGxhZC4gCkkgc2hvdWxkIGJlIGdyYXRlZnVsIGZvciBqdXN0IHRoaXMgcGhvbmUgY2FsbCBiZWNhdXNlIHNoZSBpc24ndCBhbGxvd2VkIHRvIHRlbGwgbWUgYW55dGhpbmcuIFNvIGZhciBhbGwgSSBrbm93IGlzIGhlIGhhcyBhIG1lbnRhbCBpbGxuZXNzIGFuZCB0aGF0IGhlIHdhbnRzIHVzIGRlYWQuIAoyLiBEbyBOT1QgY29tcGxhaW4gIlRoYXQgbm90IGNyZWVweSEiIGluIHRoZSBjb21tZW50cyBvciBpbiBwb3N0IHRpdGxlcy4gRGVmYW1hdGlvbiBvZiB0aGUgc3VicmVkZGl0IGl0c2VsZiBhbmQgdGhvc2Ugd2hvIGRpc3JlZ2FyZCB0aGUgc2lkZWJhciBydWxlcyB3aWxsIGJlIGJhbm5lZCBwZXJtYW5lbnRseS4gQXMgYSBjb3VudGVyYmFsYW5jZSBhZ2FpbnN0IHJ1bGUgMiwga2VlcCBpbiBtaW5kIHRoYXQgZGlmZmVyZW50IHBlb3BsZSBhcmUgY3JlZXBlZCBvdXQgYnkgZGlmZmVyZW50IHRoaW5ncywgYW5kIHN1c3BlbnNpb24gb2YgZGlzYmVsaWVmIGhlbHBzIHRoZSBhdG1vc3BoZXJlLiBKdXN0IGRvd252b3RlIGFuZCBtb3ZlIG9uLCBvciB1cHN0YWdlIHRoZW0gYnkgc3VibWl0dGluZyBzb21ldGhpbmcgZXZlbiBjcmVlcGllci4gWW91IG5vdGljZSB0aGUgbG91ZGVzdCBjb21wbGFpbmVycyBuZXZlciBhY3R1YWxseSBzdWJtaXQgYW55dGhpbmcgZ29vZCB0aGVtc2VsdmVzLiBUaGUgaGVhbHRoIG9mIGFueSBzdWJyZWRkaXQgZGVwZW5kcyBvbiB1c2VycyBsaWtlIHlvdSBzdWJtaXR0aW5nIHF1YWxpdHkgY29udGVudCBhbmQgdGhlIGNvbW11bml0eSB2b3Rpbmcgd2lzZWx5LgpTSURFLiAKT3IgZXZlbiBieSBicnV0ZSBmb3JjaW5nIG15c2VsZiBhd2FrZS4gClRoZXJlIHdhcyBvbmUgb2YgdGhvc2UgYWxsIG9yZ2FuaWMgZmFtaWxpZXMgaGVyZSBmb3IgYSB0aW1lLCBoYWQgYSBzZXZlcmVseSBhdXRpc3RpYyBzb24uIApFYXJseSBpbiB0aGUgZHJhZnQgaWYgeW91IGFyZSBiaWRkaW5nIG9uIGEgZ3V5IHRoYXQgaXMgbGlrZWx5IHRvIGdvIGF0ICQzMCBhbmQgdGhlIGJpZGRpbmcgaXMgJDE1IG9yICQxNiwgYmFuZyBpdCB0byAkMjUuIApNYXliZSB3ZSBoYXZlIHRpbWUgZm9yIGEgZmluYWwgZHJpdmUgZm9yIGEgZmllbGQgZ29hbCwgbWF5YmUgbm90LiBFaXRoZXIgd2F5LCB3b3JzdCBjYXNlIHNjZW5hcmlvIGlzIG92ZXJ0aW1lICh1bmxlc3MgUGF0cyBnbyBmb3IgMiwgd2hpY2ggaXMgdW5saWtlbHkpLiAKQW5kIHRoaXMgYWxzbyBleHBsYWluIHdoeSB5b3Ugd291bGRuIGRvIEFOWVRISU5HIGV4Y2VwdCBkb2RnZSBteSBmaXN0LCBsaWtlIGtpbGxpbmcgbWUuIApXaGVuIGl0IGNvbWVzIHRvIFRleGFzIEhvbGQgRW0gUG9rZXIgQ2hpcHMsIHlvdSBhcmUgc3VyZSB0byB3YW50IG9uZXMgdGhhdCBoYXZlIHRoZSB0cmFkZW1hcmsgZW1ibGVtcywgYXMgd2VsbCBhcyB0aGUgbW9zdCBwb3B1bGFyIGNvbG9ycy4gClRoZXkgY291bGQgaGF2ZSBiZWVuIG9uZSBvciB0d28gbW9yZSBnb2FscyB1cCwgYnV0IHdlIHRocmV3IG91ciBib2RpZXMgaW4gdGhlcmUsIGFuZCBHcmVnIEZsZW1pbmcga2VwdCB1cyBpbiB0aGUgZ2FtZS4gCklmIHlvdSBjYW4gZXNjYXBlIGVtYm9kaW1lbnQgdGhyb3VnaCBjbGFpbXMgdG8gYSBzdXBlcmlvciB3YXkgb2Yga25vd2luZywgeW91IHdpbGwuIApNb2RzIHJlc2VydmUgdGhlIHJpZ2h0IHRvIHJlbW92ZSBjb250ZW50IG9yIHJlc3RyaWN0IHVzZXJzIHBvc3RpbmcgcHJpdmlsZWdlcyBhcyBuZWNlc3NhcnkgaWYgaXQgaXMgZGVlbWVkIGRldHJpbWVudGFsIHRvIHRoZSBzdWJyZWRkaXQgb3IgdG8gdGhlIGV4cGVyaWVuY2Ugb2Ygb3RoZXJzLiBBbGwgdXNlcnMgYXJlIGV4cGVjdGVkIHRvIGJlIHJlc3BlY3RmdWwgdG8gb3RoZXIgdXNlcnMgYXQgYWxsIHRpbWVzLiBQZXJzb25hbCBhdHRhY2tzIG9yIGNvbW1lbnRzIHRoYXQgaW5zdWx0IG9yIGRlbWVhbiBhIHNwZWNpZmljIHVzZXIgb3IgZ3JvdXAgb2YgdXNlcnMgd2lsbCBiZSByZW1vdmVkIGFuZCByZWd1bGFyIG9yIGVncmVnaW91cyB2aW9sYXRpb25zIHdpbGwgcmVzdWx0IGluIGJhbnMuLiAKVW4gcHJvYmxtZSBQYXlwYWwgYSB0IGxldi4gClN0b3BwaW5nIGEgQ2hlYXQKMVRCIG9mIHNwYWNlIGNvc3RzIDIuNTAkIGEgbW9udGggb24gT25lRHJpdmUuIEFuIGF2ZXJhZ2UgdXNlciB3b3VsZCBwcm9iYWJseSBzdHJ1Z2dsZSB0byB1c2UgdGhpcyB1bmxlc3MgdGhleSBzb21lIHNvcnQgb2YgYXVkaW9waGlsZSAvIHZpZGVvZ3JhcGhlci4gT25lRHJpdmUgaXMgYWxyZWFkeSBidWlsdCBpbnRvIHlvdXIgZmlsZSBleHBsb3JlciBvbiBXaW5kb3dzIHdoaWNoIHByYWN0aWNhbGx5IGV2ZXJ5IGF2ZXJhZ2UgdXNlciBoYXMuIFVubGVzcyBvZiBjb3Vyc2UgdGhpcyBpcyBhaW1lZCBhdCBlbnRlcnByaXNlcyBhbmQgbm90IHRoZSBhdmVyYWdlIEpvZSBpbiB3aGljaCBjYXNlIGhvdyBtYW55IHViYmV5IGJveGVzIGFyZSBwZW9wbGUgZ29pbmcgdG8gaGF2ZSB0byBidXkgdG8gc3VwcGx5IHRoaXMgZGVtYW5kLiBBIGJ1c2luZXNzIHRoYXQgcmVudGluZyBjbG91ZCBzdG9yYWdlIG5lZWRzIGEgaGVsbCBvZiBhIGxvdCBzcGFjZSBhbmQgSSBub3Qgc3VyZSBob3cgYSBjb3VwbGUgb2YgY3J5cHRvIGhvYmJ5aXN0cyBwdXJjaGFzaW5nIDIwMCQgMXRCIGRyaXZlcyB3aWxsIHN1cHBseSB0aGlzLgpGb3IgTWFyeCwgb3VyIGxpdmVkIGV4cGVyaWVuY2VzICBsaWtlIGJlaW5nIGEgTGF0aW5hIG9yIGJlaW5nIGEgd29ya2VyICBzaGFwZSB3aGF0IHdlIGtub3cgYW5kIHRoZXJlZm9yZSBvZnRlbiBnaXZlIHVzIGEgbW9yZSBhY2N1cmF0ZSBzZW5zZSBvZiB3aGF0IGlzIHJlYWxseSBnb2luZyBvbiBpbiB0aGUgd29ybGQgc2luY2UgYSB3b3JrZXIgb3IgYSBMYXRpbmEgb3IgYSB3b3JraW5nIGNsYXNzIExhdGluYSBzZWVzIHRoZSB3b3JsZCBhcyB0aGUgcnVsaW5nIGNsYXNzZXMgc2VlIGl0ICh3ZSBhbGwgZG8pIGFuZCBhbHNvIGZyb20gaGVyIG93biBzdGFuZHBvaW50IGFuZCB0aGVyZWZvcmUgaGFzIGEgZG91YmxlIChvciB0cmlwbGUpIGNvbnNjaW91c25lc3MuIApCdXQgRHVyYW50IGlzbid0IGNvbWluZyB0byBob25vciBDb2xsaXNvbi4gRHVyYW50IGlzIGNvbWluZyB0byBoZWxwIGhpbXNlbGYuCkZpcnN0bHksIHRoZSB0aW1lIHNwYW4gZm9yIHdoaWNoLCBDaHJpcyBoYWQgYmVlbiBwbGF5aW5nIHdhcyBhcyBzaG9ydCBhcyBvZiB0aHJlZSB5ZWFycyBhbmQgd2hlbiB0aGUgZXZlbnQgb2YgMjAwMyBoYXBwZW5lZCB0byBvY2N1cjsgaGUgaGFkIG5ldmVyIGNvbWUgYWNyb3NzIGEgbGl2ZSBwb2tlciB0b3VybmFtZW50IGluIGhpcyBlbnRpcmUgbGlmZSB0aWxsIHRoZW4uIFRoZSBuZXh0IGdyYXZlIGNhdXNlIHdhcyB0aGF0IGhlIHdhcyBhYmxlIHRvIGVudGVyIGludG8gdGhlIGZpbmFscyBvZiB0aGUgZXZlbnQgdGhyb3VnaCBhbiBvbmxpbmUgcG9rZXIgZ2FtZSBmb3IgYW4gYWNjdW11bGF0ZWQgZGVhbCBvZiAkNDAuLiAKSGUgd2VwdCBkdXJpbmcgYSAxOTkzIGludGVydmlldyB3aXRoIE9wcmFoIFdpbmZyZXkgYXMgaGUgYWNjdXNlZCBoaXMgZmF0aGVyIG9mIHBoeXNpY2FsIGFidXNlLiAKSWYgaXQgZGF0YSwgbWFrZSBpdCBhIHNjcmlwdCB0aGF0IHNhdmVzIHRvIGEgdmFyaWFibGUsIHRoZW4gYWRkIGl0IHRvIFNjcmlwdHNUb1Byb2Nlc3MgaW4geW91ciBtYW5pZmVzdCBsaWtlIC91L2V4cGFuc2l2ZUVkdW1hY2F0aW9uIHJlY29tbWVuZGVkLgpLdWxiYW4gIDEyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhhdCBsYXd5ZXIsIEp1c3RpbiBNYXJpbm8sIGlzIGRlZmVuZGluZyB0aGUgUGFwZXIgRmFjdG9yeSBIb3RlbCBpbiBMb25nIElzbGFuZCBDaXR5LCBRdWVlbnMsIGFnYWluc3QgYSBCcm9va2x5biBmZWRlcmFsIGNvdXJ0IHN1aXQgZmlsZWQgYnkgQW5kZXJzb24gYW5kIExlZS4KQW5kIGZvciB0aGF0IEkgbG9va2luZyBmb3Igb3RoZXIgcGVvcGxlIG9waW5pb25zLi4gCkxlIHJnaW1lIG1kaXRyYW5lbiBuJ2VzdCBwYXMgaWRlbnRpcXVlIGF1IHJnaW1lIGNydG9pcywgZXQgbGVzIENydG9pcyBtYW5nZWFpZW50IG5vcm1tZW50IGRlIHBldGl0cyBlc2NhcmdvdHMsIGplIG5lIHNhaXMgc2kgY2VsYSBhIGpvdSBzdXIgbGV1ciBsb25ndml0IG1haXMgdW5lIGZvaXMgZGUgcGx1cyBsZXMgdm9ndWVzIHNpbXBsaXN0ZXMgcXVpIGRpc3BlbnNlbnQgZGUgcmZsY2hpciBzb250IG5nYXRpdmVzLiBFbiBjZSBxdWkgY29uY2VybmUgRGUgTG9yZ2VyaWwsIGplIGx1aSByZXByb2NoZSBkZSBuJ2F2b2lyIHBhcyBjaGVyY2ggcGx1cyBhdmFudCBzdXIgY2UgZmFjdGV1ciBaIGFjdGlmIGRlcnJpcmUgbGUgY2hvbGVzdHJvbCBkYW5zIGNlcnRhaW5zIGNhcyBkJ2V4Y3MuIEwndW4gZCdldXggZXN0IGluZHViaXRhYmxlbWVudCBsYSBscChhKS4gClRoZSBzZWNvbmQgcGxhbiBpcyBWSVAgICB5b3UgbmVlZCB0byBwYXkgc21hbGwgZmVlIGV2ZXJ5IG1vbnRoIGluIG9yZGVyIHRvIHN0YXkgVklQIGJ1dCB0aGlzIG9wZW5zIGEgbG90IG9mIGRpZmZlcmVudCBvcHBvcnR1bml0aWVzLiBGaXJzdCBvZiBhbGwgVklQIG1lbWJlcnMgcmVjZWl2ZSBzcGVjaWFsIFRvdXJuYW1lbnQgUG9pbnRzIHRoYXQgY2FuIGJlIHVzZWQgYXMgYnV5IGluLiAKUG9saXRpY3MgYW5kIHRveGljIHBlb3BsZSBhcmUgbWFueSB0aW1lcyB1bmF2b2lkYWJsZSB1bmxlc3MgeW91IHN0YXJ0IHlvdXIgb3duIHRoaW5nLiAKQSBsb3Qgb2YgdGhpcyBjb3VsZCBzaW1wbHkgYmUgc29sdmVkIGJ5IGF1dG9tb2RlcmF0b3Igd3JpdGluZyBhIGNvbW1lbnQgdW5kZXIgcG9zdHMgdGhhdCB3ZXJlIGF1dG9yZW1vdmVkIHRoYXQgc2FpZCBzb21ldGhpbmcgdG8gdGhlIHR1bmUgb2YuIApUaGUgbWFuIHRvbGQgaGltIHRoYXQgaWYgaGUgcmVwb3J0ZWQgdGhpcyB0byBhbnlvbmUsIGhlIGJlIGtpbGxlZC4gCkplZmZyZXkgU2tyb2xsIEViYXlKZWZmcmV5IFNrb2xsIGlzIGEgQ2FuYWRpYW4gYm9ybiBlbmdpbmVlciBhbmQgYnVzaW5lc3NtYW4gd2hvIGxpdmVzIGluIExvcyBBbmdlbGVzLCBDYWxpZm9ybmlhLlsxXSBIZSB3YXMgdGhlIGZpcnN0IGVtcGxveWVlIGFuZCBhbHNvIGZpcnN0IHByZXNpZGVudCBvZiBpbnRlcm5ldCBhdWN0aW9uIGZpcm0gZUJheSwgYW5kIHVzZWQgdGhlIHdlYWx0aCB0aGlzIGdhdmUgaGltIHRvIGJlY29tZSBhIHBoaWxhbnRocm9waXN0IGFuZCB0byBmb3VuZCB0aGUgaW5kZXBlbmRlbnQgbW92aWUgcHJvZHVjdGlvbiBjb21wYW55IFBhcnRpY2lwYW50IE1lZGlhLiAKWW91IGNhbiBiZSBhIGRpY2sgdG8gd2hvbWV2ZXIsIGJ1dCB0aGUgbGFuZGxvcmQgaXMgbm90IHRoZSBhc3Nob2xlIGZvciBoYXZpbmcgZ29vZCBpbnRlbnRpb25zLiAKQUZBSUsgb21idWRzbWFuIGlzIGEgbGFzdCByZXNvcnQsIEkndmUgaGFkIGx1Y2sgdXNpbmcgdGhlIEJCQiBmb3IgY29tcGxhaW50cyBzbyB5b3UgY2FuIHBvc3NpYmx5IHRyeSB0aGVtLi4gCnJhcGV1dGVzIGVuIG9udCByYXMgbGUgYm9sIGRlIGxhIHNvbGxpY2l0YXRpb24gc2V4dWVsbGUKTm8gbG92ZSBmb3IgIm5pY2UiIGRyaXZlcnMgaGVyZS4gCiJ0aGUgaHlwZSBpcyBnb25lIiB3aGF0IGEgbGF1Z2hhYmxlIGFzc2VydGlvbi4gRG8geW91IGxpdmUgdW5kZXIgYSByb2NrLCBnbyB0YWtlIGEgbW9tZW50IHRvIHJldmlldyBhbGwgdGhlIGFydGljbGVzIGNsZWFyaW5nIHBvaW50aW5nIHRvIG1hcmlqdWFuYSBiZWluZyBkZWNyaW1pbmFsaXplZCBhbmQgcmVndWxhdGVkIGluIHRoZSBVUy4gUmlnaHQgbm93IGlzIHN0aWxsIGEgZ3JlYXQgb3Bwb3J0dW5pdHkgZm9yIHRob3NlIG9uIHRoZSBzaWRlbGluZXMuIApUaGUgaW50cmlndWUuIFRoZSB0ZW5zaW9uIHRoYXQncyBidWlsdCBvdmVyIHRoZSB5ZWFycy4gQnV0IHlvdSBoYXZlIHRvIHRoaW5rIG9mIGl0IHRoaXMgd2F5Li4gCkhlIHdvbiBhIGxvdC4gCkkgdGhpbmsgdGhpcyBhcnRpY2xlIGRvZXMgYSBnb29kIGpvYiBvZiBwb2ludGluZyBvdXQgaXNzdWVzIHdpdGggdGhlIG1ldHJpYyB0aGF0IGlzIGJlaW5nIHVzZWQgdG8gbWFrZSB0aGUgY2xhaW0gdGhhdCBwb3ZlcnR5IGlzIGRlY3JlYXNpbmcuIEEgYmV0dGVyIG1ldHJpYyB3b3VsZCBiZSB0aGUgcGVyY2VudGFnZSBvZiB0aGUgd29ybGQgcG9wdWxhdGlvbiB0aGF0IGlzIHN1ZmZlcmluZyBmcm9tIG1hbG51dHJpdGlvbiwgb3IgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIHdvcmxkIHBvcHVsYXRpb24gdGhhdCBpcyBiZWluZyBkaXNwbGFjZWQgYnkgd2FyIG9yIGNvbmZsaWN0cywgb3IgdGhlIHBlcmNlbnRhZ2Ugb2YgY2hpbGRyZW4gdGhhdCBkaWUuIElmIGJlaW5nIHB1bGxlZCBvdXQgb2YgbWVhbnMgYW55dGhpbmcsIGl0IGhhcyB0byBiZSBpbiByZWxhdGlvbiB0byBpbXByb3ZpbmcgdGhlIHF1YWxpdHkgb2YgbGlmZSBvZiB0aGUgcGVvcGxlIHdpdGggbGVzcyByZXNvdXJjZXMgZ2xvYmFsbHkuLiAKNHRoIEFubnVhbCBTdGVlbCBIb3JzZSBSYWxseQpMaWtlIG5lYXJpbmcgc3VpY2lkYWwgbGV2ZWxzLCBvbmx5IGEgeWVhciBhbmQgYSBoYWxmIG9yIHNvIGFmdGVyIEkgZ290dGVuIG91dCBvZiB0aGUgaG9zcGl0YWwgZm9yIHN1aWNpZGFsIGlkZWF0aW9uLiAKTWFueSBjb21wYW5pZXMgYXJlIGFsbG93aW5nIHRoZWlyIGN1c3RvbWVycyB0byBwdXJjaGFzZSBQb2tlciBCcmFjZWxldCBQb2tlciBDYXJkIFByb3RlY3RvciB0aGlzIHdheS4uIApCdXQgaGUgZGlkbiBKb3NoIGxlYXJuZWQgZnJvbSBoaXMgbWlzdGFrZXMsIHJlZ3JvdXBlZCwgYW5kIGNhbWUgYmFjayB0byBidWlsZCBhIHdlYnNpdGUgc28gdGhlIHJlc3Qgb2YgdXMgY291bGQgYXZvaWQgaGlzIG1pc3Rha2VzLi4gCkFyZSB5b3UgZXZlbiBiZWluZyBzZW5zaWJsZSByaWdodCBub3c/IEFjY2lkZW50YWxseSBzYWx2YWdpbmcgc29tZXRoaW5nIGlzIGNvbXBsZXRlbHkgZGlmZmVyZW50LiBJIGhhZCBiZWVuIGVhZ2VybHkgYW50aWNpcGF0aW5nIGEgcmVkIGl0ZW0gZm9yIGRheXMuIHRoaXMgd291bGRuIGp1c3QgYmUgYSBtaXMgY2xpY2svbWlzIHJlYWQgc2FsdmFnZSwgSSBoYXZlIHRvIGNvbXBsZXRlbHkgaWdub3JlIHRoZSByZWQgYmVhbSwgaWdub3JlIHRoZSByZWQgYm9yZGVyZWQgaXRlbSBpbiBteSBpbnZlbnRvcnksIGlnbm9yZSB0aGUgcmVkIGJvcmRlcmVkIGl0ZW0gYXQgdGhlIGJsYWNrc21pdGguIEkgaGF2ZSB0byBpZ25vcmUgZXhhY3RseSB3aGF0IEkgd2FzIGFudGljaXBhdGluZyB0aHJlZSB0aW1lcyBpbiBhIHJvdwpEcm9waGxpeCB1CkFsc28sIGluIHRlcm1zIG9mIHRoZSBpZGVhIHN0ZWFsaW5nLiBJJ20gdmVyeSBzb3JyeSB0byBzYXkgYnV0IHlvdSdyZSBiZWluZyBwbGF5ZWQvbWFuaXB1bGF0ZWQuIFlvdSBoYXZlIGNsZWFybHkgcHV0IGZhciB0b28gbXVjaCB0cnVzdCBpbiB0aGlzIHBlcnNvbi4gSSBob25lc3RseSB3b3VsZG4ndCB0cnVzdCB0aGVtIGZyb20gdGhlIGZpcnN0IHNpZ25zLiBJIGhhdmUgYmVlbiBpbiBhIHNpbWlsYXIgYm9hdCBhbmQgbGVhcm5lZCB0byBjdXQgdGhlIHBlcnNvbiBvZmYgY29tcGxldGVseSB0aGFuIGZlZWQgdGhlbSB0aGluZ3MgdGhleSdyZSBpbmNhcGFibGUgb2YgY3JlYXRpbmcgdGhlbXNlbHZlcyAoSSdtIGFuIGFydGlzdCBzbyBJIHRha2UgdGhpcyB2ZXJ5IG11Y2ggdG8gaGVhcnQuKSBZb3UgbmVlZCB0byBjdXQgaGVyIG9mZi4KQW50b251bHJpY2ggIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpBdCB0aGUgZW5kIG9mIHlvdXIgcHJlc2VudCByZXBseSB5b3Ugc2VlbSB0byBiZSBmb2N1c2luZyBvbiB0aGUgaWRlYSBvZiBwYXJhbm9pYSBhbmQgaG93IGl0IGhhcyByZXN1bHRlZCBpbiBhIGRpc3VuaXR5IGluIHRoZSBVUywgYSBkaXN1bml0eSB3aGljaCB5b3UgYXBwZWFyZWQgdG8gYXJndWUgaW4geW91ciBvcmlnaW5hbCBjb21tZW50IGRvZXMgbm90IGV4aXN0IGluIG1vcmUgcG9wdWxvdXMgbmF0aW9ucy4gQnV0IGVhcmxpZXIgaW4geW91ciBwcmVzZW50IHJlcGx5IHlvdSBvdXRsaW5lIHNvbWUgY2F1c2VzIG9mIGRpc3VuaXR5IGluIG1vZGVybiBJbmRpYSwgc2VlbWluZ2x5IHVuZGVyY3V0dGluZyB3aGF0IGFwcGVhcmVkIHRvIGJlIHlvdXIgb3JpZ2luYWwgYXJndW1lbnQuIFVsdGltYXRlbHksIGlzIHRoZSBwb3NpdGlvbiByZWR1Y2libGUgdG8gc29tZSB2ZXJzaW9uIG9mIHRoZSBzdGF0ZW1lbnQgInBvcHVsb3VzIG5hdGlvbnMgY2FuIGhhdmUgZnVja2VkIHVwIGludGVybmFsIGR5bmFtaWNzIGZvciBteXJpYWQgcmVhc29ucyI/IFRoYXQgSSBjYW4gZG8gYWdyZWUgd2l0aCwgZXZlbiBhcyBJIHJlbWFpbiB1bmNvbnZpbmNlZCBvZiB0aGUgbGFjayBvZiBkb21lc3RpYyB1bnJlc3QgaW4gb3RoZXIgbGFyZ2UgbmF0aW9ucy4uIApUaGUgdHJ1dGggb2YgdGhlIG1hdHRlciBpcyB0aGF0IHRoaXMgaXMgYSB0YWJsZSB0aGF0IGlzIGRlc2lnbmVkIHRvIGJlIHBsYXllZCBvbiwgYW5kIHlvdSB3aWxsIGJlIGFibGUgdG8gc2VlIHRoYXQgcXVpdGUgaGFuZGlseSB3aGVuIHlvdSBhcmUgbG9va2luZyBhdCB0aGUgMTAwIHBlcmNlbnQgd29vZCBmZWx0IHN1cmZhY2UuIApBIGxvdCBvZiB0aGluZ3Mgd2VudCB3cm9uZyBhZnRlciB0aGF0IGJvb2sgYW5kIEkgd2FzIGNvbnRlbXBsYXRpbmcgdGhlIG5hdHVyZSBvZiBsdWNrLiBXZSBkb24ndCBhcHByZWNpYXRlIGx1Y2sgaW4gbGlmZSB3aGVuIHRoaW5ncyBhcmUgZ29pbmcgd2VsbC4gCjEpIFByZXBhcmF0aW9uLiAKSGUgd2lubmluZywgZWNvbm9teSBpcyBib29taW5nLCBhbmQgdGhlaXIgbGl2ZXMgYXJlIHRpcCB0b3AuLiAKVGhlIG1vc3QgcmVhbGlzdGljIG9wdGlvbiBJIHNlZSBmb3IgbXkgZnV0dXJlIGlzIGZpbmFsbHkgd29ya2luZyB1cCB0aGUgZ3V0cyB0byBwdWxsIHRoZSB0cmlnZ2VyIGFuZCBlbmQgbXkgbGlmZSwgYnV0IEkgZG91YnQgSSBldmVyIHdpbGwuIApIZWFydGhzdG9uZSBpcyByYW5kb20gYXMgZnVjayBzbyBhbnlvbmUgY2FuIGJlICJnb29kIiBhdCBpdCBpZiB0aGV5IHBheSBmb3IgZGVja3MuIFRoZXJlIGlzIG9ubHkgc28gbWFueSBnb29kIGRlY2tzIHRoYXQgY2FuIGJlIG1hZGUgYW5kIGlmIHlvdSBkb250IHNwZW5kIG1vbmV5IG5vdyB5b3UgY2Fubm90IHdpbiBhdCBoZWFydGhzdG9uZS4gClRoaXMgdGFjdGljIG1heSBtYWtlIHlvdSBjcmluZ2UsIGJ1dCBrZWVwIGFuIG9wZW4gbWluZCwgV2FnYXNreSBlbmNvdXJhZ2VzLiBHb2luZyBjYXNoIG9ubHkgd2hlbiB5b3UgaGVhZCB0byB5b3VyIGxvY2FsIHN1cGVybWFya2V0IGZvcmNlcyB5b3UgdG8gc3RpY2sgdG8geW91ciBidWRnZXQsIGVzcGVjaWFsbHkgaWYgeW91IGxlYXZlIHlvdXIgY2FyZHMgYmVoaW5kIGFuZCBvbmx5IGJyaW5nIHRoZSBhbW91bnQgb2YgbW9uZXkgeW91IGFsbG9jYXRlZCBmb3IgZ3JvY2VyaWVzIGZvciB0aGF0IHBhcnRpY3VsYXIgc2hvcHBpbmcgdHJpcC4uIApTbyBJIG1hZGUgdGhlIGFydGlzdCBza2V0Y2ggdXAgc29tZSBmYWtlIGxvb2tpbmcga2FuamkgSSB0aGVuIHRvb2sgaXQgYW5kIHNob3dlZCBpdCB0byBhIGhhbmRmdWwgb2YgcGVvcGxlIHRoYXQga25vdyBNYW5kYXJpbiwgS29yZWFuLCBhbmQgSmFwYW5lc2UsIGFuZCB0aGV5IGFsbCBzYWlkIGl0IHdhcyBqdXN0IGEgbWl4ZWQgdXAgYmxvYiBvZiBjcmFwLiAKQWxsIG9mIHRoYXQgZG9uZSB3aXRoIGEgc3RhYmxlIGJhc2UuIApBbmQgaWYgbm90LCBpZiBoZSBkb2Vzbid0IHNlZSB1cyBnZXR0aW5nIG1hcnJpZWQgYW5kIGlmIGhlIGRvZXNuJ3Qgc2VlIGhhdmluZyBjaGlsZHJlbiBzb21ld2hlcmUgaW4gYSByZWFzb25hYmxlIHRpbWUgZnJhbWUgZm9yIG1lLCB0aGVuIEknbSBnb2luZyB0byBoYXZlIHRvIGRlY2lkZSBvbiBjb21wcm9taXNpbmcgb3IgbW92aW5nIG9uLiBUaGF0J3Mgd2hhdCBJIG5lZWQgdG8gZG8sIGZvciBteSBkcmVhbSwgYW5kIGZvciB0aGUgc2FrZSBvZiBib3RoIG9mIG91ciB0aW1lLiBJIGdlbnVpbmVseSB0aGluayB0aGF0J3Mgd2hhdCB5b3UgbmVlZCB0byBkbyAgb3RoZXJ3aXNlIHlvdXIganVzdCBzdHJlc3NpbmcsIGtlZXBpbmcgaXQgdG8geW91cnNlbGYgKHdoaWNoIGhlIG1heSBldmVudHVhbGx5IGJlIGFibGUgdG8gZGV0ZWN0KSwgYW5kIGdldHRpbmcgbm93aGVyZS4uIApCZWZvcmUgeW91IHRyYXZlbCB5b3UgZmlsbCBvdXQgYSBmb3JtIHRoYXQgc2F5cyAiSGV5LCBJIGdvdCBzb21lIGZsdXRlcyBtYWRlIG91dCBvZiBiYW1ib28iIGFuZCB0aGV5IHNlbmQgeW91IGEgcGVybWl0IHNheWluZyAiQ0JQIGd1eXMsIGJhbWJvbyBmbHV0ZXMgYXJlIG9rYXksIGxldCB0aGVtIHRocm91Z2giLiAKRnJvbSBhIFBJTyBwZXJzcGVjdGl2ZSwgT09QIHNob3VsZCBiZSBjaGVja2luZyBoaXMgd2hvbGUgcmFuZ2Ugb24gdGhpcyBmbG9wLiBJUCB3aWxsIG1peCB3aXRoIEpUc3MgYnV0IHByb2JhYmx5IHByZWZlcnJpbmcgdG8gZ2V0IHdpdGggQmRGZC4gWW91ciBzaXppbmcgaXMgc2xpZ2h0bHkgc21hbGwgZm9yIHRoaXMgdGV4dHVyZSwgaGFsZiBwb3Qgd291bGQgYmUgYmV0dGVyIGJ1dCBpc24ndCBnb2luZyB0byBjaGFuZ2UgdGhlIEVWIHRoYXQgbXVjaC4gCkl0IGFsc28gaW5jbHVkZXN3aGVyZSB5b3UgY2FuIGFjcXVpcmUvbGlzdGVuIHRvIHRoZW0uIFRvdGFsIG9uIHRoaXMgbGlzdDogMTEwIDEgMTQpICJCb3JuIFRoaXMgV2F5IChPcmlnaW5hbEFsYnVtKSAiOiBNYXJyeSBUaGUgTmlnaHQvQm9ybiBUaGlzV2F5L0dvdmVybm1lbnQgSG9va2VyL0p1ZGFzL0FtZXJpY2Fuby9IYWlyL1NjaGVpZSAvIEJsb29keSBNYXJ5IC8gQmFkIEtpZHMvSGlnaHdheSBVbmljb3JuIChSb2FkIFRvIExvdmUpL0hlYXZ5TWV0YWwgTG92ZXIvWW8gYW5kIEkvVGhlIEVkZ2UgT2YgR2xvcnkuIEdldCB0aGlzIG5ld2VzdCBhbGJ1bWZyb20gaVR1bmVzISAxNSkgUmV0cm8gRGFuY2VGcmVhayAuIApBbmQgaXQgYWxzbyBmdW5ueSwgbGVnaXRpbWF0ZWx5IGZ1bm55LCBiZWNhdXNlIHBlb3BsZSB3aG8gc2hhcmUgaGVyIGV4cGVyaWVuY2VzIGFuZCB0aG9zZSB3aG8gZG9uIGNhbiBib3RoIGxhdWdoIGF0IHRoZSBpbnRlcmVzdGluZyB3YXkgc2hlIHZpZXdzIGFuZCBjb25jZXB0dWFsaXNlcyB0aGUgd29ybGQgdGhyb3VnaCBodW1vdXIsIHdoZXRoZXIgb3Igbm90IHdlIGxpdmVkIHRocm91Z2ggYW5kIHRob3VnaHQgYWJvdXQgd2hhdCBzaGUgdGFsa2luZyBhYm91dCBvciBub3QuU28gdG8gc2F5IHRoYXQgZXhwZXJpZW5jZSBoYXMgbm8gYWZmZWN0IG9uIHdoZXRoZXIgYSBqb2tlIGlzIGdvb2Qgb3Igbm90IGlzIHBsYWlubHksIG9idmlvdXNseSBmYWxzZS4gRGlmZmVyZW50IHBlb3BsZSBoYXZlIGRpZmZlcmVudCBzdWJqZWN0aXZlIGV4cGVyaWVuY2VzIGFuZCB2aWV3cG9pbnRzIHdoaWNoIG1lYW5zIHRoZXkgd2lsbCBmaW5kIGRpZmZlcmVudCB0aGluZ3MgZnVubnkuIFRoZSBwb2ludCBpcyB0aGF0IGEgZGFyayBqb2tlIHRoYXQgbWFrZXMgbGlnaHQgb2YgYSBzZXJpb3VzIGFuZCB0cmF1bWF0aWMgc2l0dWF0aW9uIG9yIGV4cGVyaWVuY2UgbWF5IG9yIG1heSBub3QgYmUgZnVubnkgZm9yIHBlb3BsZSB3aG8gaGF2ZW4gYmVlbiB0aHJvdWdoIHRoYXQsIGJ1dCBmb3IgcGVvcGxlIHdobyBoYXZlIGxpdmVkIHRocm91Z2ggaXQsIGlmIHRoZSBwZXJzb24gdGVsbGluZyB0aGUgam9rZSBpc24gb25lIG9mIHRoZW0sIGZyb20gdGhlaXIgc3ViamVjdGl2ZSBwZXJzcGVjdGl2ZSB0aGF0IGpva2UgaXMgcHJvYmFibHkgZ29pbmcgdG8gbWlzcmVwcmVzZW50IHRoZSBzaXR1YXRpb24sIHdoaWNoIGlzIHByb2JhYmx5IGdvaW5nIHRvIGJlIGNhcmVsZXNzIGFuZCB1cHNldHRpbmcgYW5kIHVsdGltYXRlbHkgbm90IGZ1bm55IGZvciB0aGVtLiAKQnV0IGFwcGFyZW50bHkgdGhlc2UgYXJlIHRoZSBzYW1lIGNvbnRyYWN0IHNvbGRpZXJzIHRoYXQgZm91Z2h0IGluIElyYXEgb3Igd2hhdGV2ZXIgYW5kIHdvdWxkIG11cmRlciBhbmQgcmFwZSBhbmQga2lkbmFwIGxvY2Fscy4gCiJBbW9uZyBvdGhlciB0aGluZ3MsIHdlIGhhdmUgc2hvd24gYSBzdHJvbmcgZWZmZWN0IG9mIGNsaW1hdGUgY2hhbmdlIG9uIHRoZSB0aW1pbmcgb2YgYnJlZWRpbmcsIiBzYWlkIEJpcmtoZWFkLCAid2l0aCBicmVlZGluZyBiZWNvbWluZyBwcm9ncmVzc2l2ZWx5IGVhcmxpZXIgYmV0d2VlbiAxOTcwcyBhbmQgMjAxMCIuIFRoZSBzdG9ybXMgaW4gRmVicnVhcnkgcmVzdWx0ZWQgaW4gaGlnaCBtb3J0YWxpdHkgYW1vbmcgZ3VpbGxlbW90cy4gIldlIHJlY29yZGVkIGEgdGhyZWVmb2xkIGluY3JlYXNlIGluIHRoZSBkZWF0aHMgb2Ygb3VyIHJpbmdlZCBiaXJkcyBvbiBTa29tZXIuIApTYWRseSB0aGF0IHRvIGJlIGV4cGVjdGVkLiBJZiB0aGV5IG91dHNvdXJjZSAobGlrZWx5KSBpdCBndWFyYW50ZWVkIHRoZXkgZG9uIGhhdmUgYW55IGV4cGVyaWVuY2Ugb3IgcXVhbHMgaW4gbWVudGFsIGhlYWx0aCBzdXBwb3J0LiBNb3N0IG91dHNvdXJjZSBzdGFmZiBhcmUgcHJldmlvdXNseSByZXRhaWwgYW5kIGhhdmUgYWJvdXQgYXMgbXVjaCBza2lsbCBhdCBjcmlzaXMgc3VwcG9ydCBhcy4gCkJBUlRMRVNWSUxMRSwgT2tsYS4gKEtUVUwpIFRoZXJlIG5vdGhpbmcgaHVtYmxlIGFib3V0IHRoZSBiZWdpbm5pbmdzIG9mIHRoZSBGcmFuayBQaGlsbGlwcyBSYW5jaCwgV29vbGFyb2MuIEJ1aWx0IG9uIHRoZSByb2NreSBibHVmZnMgYWJvdmUgdGhlIGJsdWUgd2F0ZXIgb2YgQ2x5ZGUgTGFrZSBpbiBPc2FnZSBDb3VudHksIFBoaWxsaXBzIGRyZWFtIGJlY2FtZSByZWFsaXR5LiBPbiBtb3JlIHRoYW4gMyw3MDAgYWNyZXMsIHRoZSBsb2RnZSBpcyB0aGUgY2VudGVycGllY2UuCkFydHMgb2ZNaWRkbGUgQWdlcyBUaGUgY3VsdHVyZSB0aGF0IHRvZGF5IGlzIGtub3duIGFzICdHcmVlayBBbnRpcXVpdHknIGxhc3RlZCBmcm9tIGFib3V0IDEwMDAgQkMgdG8gMUJDIChBVUMxIDc1MykuIEluIGZhY3QgdGhlcmUgd2FzIG5vIGNvbW1vbiBzdGF0ZSBvZiAnR3JlZWNlJyBhdCB0aGF0IHRpbWUsIGJ1dCBhIGNsdXN0ZXIgb2Ygc21hbGwgc2VwYXJhdGUgc3RhdGVzLiBEZXNwaXRlIHRoaXMsIGEgY29tbW9uIHN0eWxlIGluIGFydHMgc3RpbGwgZGV2ZWxvcGVkIGluIHRoZSBlYXN0ZXJuIE1lZGl0ZXJyYW5lYW4gYXJlYS4gCihQcml2YWN5IFBvbGljeSlGZWF0dXJlc0dvb2dsZSBDdXN0b20gU2VhcmNoVGhpcyBpcyBmZWF0dXJlIGFsbG93cyB5b3UgdG8gc2VhcmNoIHRoZSBzaXRlLiAoUHJpdmFjeSBQb2xpY3kpR29vZ2xlIE1hcHNTb21lIGFydGljbGVzIGhhdmUgR29vZ2xlIE1hcHMgZW1iZWRkZWQgaW4gdGhlbS4gClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKUG9rZXIgTmlnaHQgRGVzc2VydHMKVGhlIEZCSSBrZXB0IHRoZSBwaG9uZSB0YXBzIHJ1bm5pbmcgdW50aWwgQXVnLiAKVGhhdCBsaWtlIGV4Y3VzaW5nIGJhZCBhY3RpbmcgZnJvbSBzb21lb25lIHBsYXlpbmcgYSB2aWxsYWluLiBMaWtlIHNlcmlvdXNseSwgVGFpY2hpIGlzbiB0aGF0IGdvb2QuIEhlIGEgQmxvYmJ5IGR1ZGUgd2l0aCBubyBtb2JpbGl0eSB0aGF0IGZvciBzb21lIHJlYXNvbiwgUmVkZGl0IGV4cGVjdHMgdG8gdGFrZSBzZXJpb3VzbHkgYXMgYSBiYWQgZ3V5LgpBIENlbGVicmF0aW9uIG9mIExpZmUgd2lsbCBiZSBoZWxkIGF0IFN0LiAKQ0VPIE5laWwgQnJ1Y2UsIHdobyBhc3N1bWVkIGxlYWRlcnNoaXAgaW4gMjAxNSwgaGFzIHJlcGVhdGVkbHkgc2FpZCB0aGUgb3JnYW5pemF0aW9uIGhhcyB0dXJuZWQgb3ZlciBhIG5ldyBsZWFmLCBhbmQgdGhhdCBhIHByb3NlY3V0aW9uIGF0IHRoaXMgZGF0ZSB3b3VsZCBvbmx5IHB1bmlzaCBlbXBsb3llZXMuIE9uZSB0aGlyZCBvZiBTTkMgTGF2YWxpbiAkOS4zIGJpbGxpb24gaW4gcmV2ZW51ZXMgaW4gMjAxNyBjYW1lIGZyb20gQ2FuYWRhLCBkb3duIGZyb20gcm91Z2hseSA2MCBwZXIgY2VudCBvZiByZXZlbnVlIGluIDIwMTQuIEFuYWx5c3RzIGVzdGltYXRlIHRoYXQgdXAgdG8gb25lIGhhbGYgb2YgaG9tZSB0dXJmIHJldmVudWVzIHN0ZW0gZnJvbSBmZWRlcmFsIGNvbnRyYWN0cy4uIApIZSBsYXRlciB3ZW50IG9uIHRvIG1hcnJ5IGhlciAoc28gc2hlIGhpcyBub3cgd2lmZSksIGFuZCB0aG91Z2ggSSBoYXZlbiBoZWFyZCBhbnkgbmV3cyBhYm91dCBoaW0gaW4gYSBjb3VwbGUgb2YgeWVhcnMsIHRoZSBsYXN0IEkgaGVhcmQgdGhleSB3ZXJlIGhhcHB5LiBKdXN0IGxpa2UgSSBhbSB2ZXJ5IGhhcHB5IHdpdGggbXkgY3VycmVudCBib3lmcmllbmQuIApOZXh0LCBjb25zaWRlciBnZXR0aW5nIGEgcG9rZXIgdGFibGUuIFdoaWxlIHRoZSBkaW5pbmcgcm9vbSB0YWJsZSBtYXkgd29yaywgeW91IGNhbiBhZGQgZ3JlYXRseSB0byB5b3VyIGdhbWUgYnkgaGF2aW5nIGEgZ2VudWluZSBob2xkZW0gcG9rZXIgdGFibGUuIFRoZXkgY29tZSBpbiBhbGwgcHJpY2UgcmFuZ2VzLiAKVmFsZW50aW5lIERheSwgd2hhdCBjb3VsZCBiZSBiZXR0ZXIgdGhhbiB0ZWxsaW5nIHRoZSBwb29yIGJsb2tlIHNpdHRpbmcgYWNyb3NzIGZyb20geW91IHRoYXQgeW91IGhhdGUgaGlzIGNsb3RoZXMsIGhpcyBub3NlLCBhbmQgaGlzIGVudGlyZSBwYXRoZXRpYyBleGlzdGVuY2UuIApJIGtuZXcgaXQgd2FzIGJleW9uZCBhIGxvbmcgc2hvdCBiZWNhdXNlIGhlIGxvc3Qgc28gbXVjaCB2YWx1YWJsZSB0aW1lIGhlIGNhbiBnZXQgYmFjay4gClRoaXMgd291bGQgc2VlIHRoZSBudW1iZXIgb2YgcG9raWUgbWFjaGluZXMgZHJvcCBmcm9tIDI2IG1hY2hpbmVzIHRvIGFyb3VuZCAyMC4KRm94IG5ldHdvcmsgYW5kIHRoZSBzdHVkaW8gdGhhdCBwcm9kdWNlcyBFbXBpcmUgaGFkIG5vIGltbWVkaWF0ZSBjb21tZW50IG9uIHRoZSBsYXRlc3QgaW5kaWN0bWVudC4uIApCdXNpbmVzcyBBcnRpY2xlcyAgSnVseSAyNywgMjAwOQo=|<---