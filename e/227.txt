<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="home page-template page-template-template page-template-full-width-slider page-template-templatefull-width-slider-php page page-id-28 single-author">
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-P2JJ6Z" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <div class="hfeed site" id="page">
   <div class="menu-more" id="menu-more">
    <div class="more-navigation" id="more-navigation" role="navigation">
     <ul class="util-first">
      <li class="util">
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li class="util">
       [link]
       
      </li>
      <li class="util">
       [link]
       
      </li>
      <li class="util">
       [link]
       
      </li>
     </ul>
     <ul>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <ul>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <ul>
      <li>
       [link]
       
      </li>
      <li>
       <a href="/officeofresearch/">
        For Researchers
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
     <ul>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <ul class="util-last">
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </div>
   </div>
   <header class="site-header" id="masthead" role="banner">
    <div class="header-background">
    </div>
    <div class="site-branding" id="site-branding">
     <h1>
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
     <h2>
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <p>
      <em>
       [ahref]
       
      </em>
     </p>
    </div>
    <div class="navbar" id="navbar">
     <nav class="navigation main-navigation" id="site-navigation" role="navigation">
      <div class="menu-more-toggle">
       [link]
       
      </div>
      <div class="search-toggle">
       [ahref]
       
      </div>
      <div class="search-form-wrapper">
       <form action="/search" autocomplete="off" class="search-form" id="nav-search" method="get" ref="form" role="search">
        <label>
         <span class="screen-reader-text">
          Search for:
         </span>
         <button type="submit">
          Go
         </button>
        </label>
        <ul class="search-collection">
         <li>
          <label for="search-site">
           This site
          </label>
         </li>
         <li>
          <label for="search-all">
           All UWM
          </label>
         </li>
        </ul>
        <div id="nav-suggestions">
        </div>
       </form>
      </div>
      <h3 class="menu-toggle">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      [ahref]
      
      <div class="menu-main-navigation-container">
       <ul class="nav-menu" id="menu-main-navigation">
        <li class="main-menu-item menu-item-even menu-item-depth-0 homebutton menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-28 current_page_item" id="nav-menu-item-242">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [ahref]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-243">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [ahref]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-244">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [link]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-245">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [link]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-246">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [ahref]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-247">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [link]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-248">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [link]
         
        </li>
        <li class="main-menu-item menu-item-even menu-item-depth-0 menu-item menu-item-type-post_type menu-item-object-page" id="nav-menu-item-249">
         <div class="menu-toggle-child">
          <i>
          </i>
         </div>
         [ahref]
         
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </header>
   <div class="site-main" id="main">
    <div class="home-page-slider">
     <div class="full-width-slider-wrapper ">
      <div class="ml-slider-3-10-2 ml-slider-pro-2-9-2 metaslider metaslider-flex metaslider-30 ml-slider" style="max-width: 965px; margin: 0 auto;">
       <div id="metaslider_container_30">
        <div id="metaslider_30">
         <ul class="slides">
          <li class="slide-34 ms-image" style="display: block; width: 100%;">
          </li>
          <li class="slide-146 ms-image" style="display: none; width: 100%;">
          </li>
          <li class="slide-32 ms-image" style="display: none; width: 100%;">
          </li>
          <li class="slide-145 ms-image" style="display: none; width: 100%;">
          </li>
          <li class="slide-33 ms-image" style="display: none; width: 100%;">
          </li>
          <li class="slide-150 ms-image" style="display: none; width: 100%;">
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div class="content-area" id="content">
      <div class="full-page-content site-content" id="primary" role="main">
       <article class="post-28 page type-page status-publish hentry" id="post-28">
        <div class="entry-content ">
         <hr/>
         <h3 style="text-align: center">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <h4 style="margin-top: 0px;text-align: center">
          BOSS is safe ride service available to UWM students, operating every day between the hours of 6 pm and 2 am during the traditional academic calendar. Students may get a ride within the area of our boundaries, which are Capitol Dr. to the north, MLK/3rd St. to the west, Brady St. to the south, and Lake Michigan to the east. BOSS is completely funded through segregated fees, there are no additional charges to use the service.
         </h4>
         <p>
          <li>[ahref]</li>[search]<li>[link]</li>[search]<li>[link]</li><li>[link]</li><li>[link]</li>
         </p>
         <h1 style="text-align: center">
          <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
         </h1>
         <hr/>
         <h1 style="margin-top: 0px;text-align: center">
          [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
         </h1>
         <p>
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[search]<li>[search]</li><li>[link]</li>[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[link]</li>[link]<li>[ahref]</li>
         </p>
         <h3 style="text-align: center">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <hr/>
         <h3 style="text-align: center">
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
        </div>
       </article>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0229
  </b>
 </body>
</html>
<p>
 Off-Campus Shuttle
 <br>
  [search][link][link]<li>[search]</li><li>[link]</li>[link]
 </br>
 7 am – 6 pm Monday – Friday
 <br>
  [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
 </br>
 (Service to and from University Services and Research Building, School of Freshwater Sciences, Global Water Center, Zilber School of Public Health)
</p>
<p>
 <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
</p>
<p>
 Off-Campus Shuttle
 <br/>
 7 am – 7 pm Monday – Friday
 <br>
  <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li>[search][link][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
 </br>
 (Service to and from University Services and Research Building only)
 <br/>
</p>
<hr/>
<h3 style="text-align: center">
 [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
</h3>
<p>
 **Please note: the need for professional cleaning of a vehicle due to bio-hazardous or excessive waste will result in a $150 fee charged to the rider.  Failure to pay the fee will result in an academic hold placed on the rider’s account.**<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][search][search]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>
</p>
<footer class="entry-meta">
</footer>
<div class="col-sm-12 widget_text widget" id="text-3">
 <div class="textwidget">
  <footer class="footer">
   <section>
    <aside>
     <div class="footer-logo">
      [link]
      
     </div>
    </aside>
    <article>
     B.O.S.S. is funded through student segregated fees as appropriated by the UWM Student Association.
    </article>
   </section>
  </footer>
 </div>
</div>
<footer class="site-footer" id="colophon" role="contentinfo">
 <div class="site-info">
  <div class="meta">
   <h2>
    <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
   </h2>
   <ul class="footer-social">
    <li>
     [ahref]
     
    </li>
    <li>
     [link]
     
    </li>
   </ul>
   <div class="menu-main-navigation-container">
    <ul class="footer-nav" id="menu-main-navigation-1">
     <li class="homebutton menu-item menu-item-type-post_type menu-item-object-page menu-item-home current-menu-item page_item page-item-28 current_page_item menu-item-242" id="menu-item-242">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-243" id="menu-item-243">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-244" id="menu-item-244">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-245" id="menu-item-245">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-246" id="menu-item-246">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-247" id="menu-item-247">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-248" id="menu-item-248">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-249" id="menu-item-249">
      <a href="/boss/employment-opportunities/">
       Employment
      </a>
     </li>
    </ul>
   </div>
   <p class="footer-copyright">
    ©2018 University of Wisconsin-Milwaukee
   </p>
  </div>
  <div class="footer-tagline">
  </div>
 </div>
 <div class="backtotop">
  [ahref]
  
 </div>
</footer>
