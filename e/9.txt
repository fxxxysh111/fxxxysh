--->|R2lhbnQgY29ycG9yYXRpb25zIGdldCBiYWlsb3V0cywgc21hbGwgYnVzaW5lc3NlcyBkb24gaGF2ZSB0aGUgbG9iYnkgZ3JvdXBzIG9yIHJlc291cmNlcyB0byBnZXQgYW55IGJyZWFrcy4gU29tZSBtaWdodCBhcmd1ZSB0aGlzIHR5cGUgb2Ygc2l0dWF0aW9uIHdvdWxkIGJlIGNvdmVyZWQgYnkgYnVzaW5lc3MgaW50ZXJydXB0aW9uIGluc3VyYW5jZSwgdGhhdCBpcyBzaW1wbHkgbm90IHRoZSBjYXNlLCBzYXlzIFN1ZSBEdWdnYW4sIHNtYWxsIGJ1c2luZXNzIGRpcmVjdG9yIGZvciBOb3J0aGJyaWRnZSBGaW5hbmNpYWwgQ29ycC4gSW4gVG9yb250by4gCkxhIGdlc3Rpb24gZGVzIGRvbm5lcyBwZXJzb25uZWxsZXMgdHJvaXRlbWVudCBlbmNhZHJlIGVuIEV1cm9wZUNvbnRyYWlyZW1lbnQgYXUgQ2FuYWRhIGV0IGF1eCB0YXRzIFVuaXMsIGwnRXVyb3BlIHMnZXN0IGRvdGUgZCd1bmUgcmdsZW1lbnRhdGlvbiB0cnMgY29udHJhaWduYW50ZSBwb3VyIHByb3RnZXIgbGVzIGRvbm5lcyAuCk1vcmUgZ2VuZXJhbGx5LCBmb3IgcG9rZXIgcnVsZXMgcXVlc3Rpb25zLCBJIHN1Z2dlc3QgY29uc3VsdGluZyBSb2JlcnQncyBSdWxlcyBvZiBQb2tlci4gQSBob21lIGdhbWUgdmVyc2lvbiBvZiB0aGUgcnVsZXMgaXMgYWxzbyBhdmFpbGFibGUuIEJvYiBDaWFmZm9uZSBoYXMgcHV0IGEgbG90IG9mIGVmZm9ydCBpbnRvIGNyZWF0aW5nIGEgdmVyeSB1c2VmdWwgc3RhbmRhcmRpemVkIHNldCBvZiBydWxlcyBmb3IgdGhlIGdhbWUsIGFuZCB3YXMgZ29vZCBlbm91Z2ggdG8gbWFrZSBpdCBhdmFpbGFibGUgZm9yIGZyZWUhClRoZW4gaGUgZ29lcyBpbiB0aGUgZHVnb3V0IGFuZCBub3QgdmVyeSBtYW55IHBlb3BsZSBvbiBoaXMgb3duIHRlYW0gc2VlbSB2ZXJ5IGdlbnVpbmVseSBleGNpdGVkIGZvciBCYXJyeS4gVGhleSBnaXZlIGhpbSB0aGUgY291cnRlc3kgY29uZ3JhdHMgYW5kIG5vIG1vcmUgdGhhbiBhIGZldyBtaW51dGVzIGxhdGVyLCB0aGUgY2FtZXJhIHNob3Qgc2hvd3MgQmFycnkgc2l0dGluZyBBTEwgQlkgSElNU0VMRiBvbiB0aGUgYmVuY2guIEluIHRoaXMsIGhpcyBncmVhdCBtb21lbnQgb2YgdHJpdW1waCwgbm9uZSBvZiBoaXMgdGVhbW1hdGVzIGFyZSBzaXR0aW5nIGFsbCBhcm91bmQgaGltIGNlbGVicmF0aW5nIHdpdGggaGltLiBIb3cgYXByb3Bvcy4KSSBzYXkgdGhpcyB0ZWNobmlxdWUgaXMgdGhlIG1vc3QgcG93ZXJmdWwgd2hlbiB5b3UgaGF2ZSBhIHN0b3JlIHRoYXQgcGVvcGxlIHdpbGwgdmlzaXQuIE9idmlvdXNseSwgcGVvcGxlIHdpbGwgd2FudCB0byB0cmF2ZWwgdGhlIHNob3J0ZXN0IGRpc3RhbmNlIHBvc3NpYmxlIHRvIG1lZXQgdGhlaXIgbmVlZHMuCkkgcGVyc29uYWxseSByZWNvbW1lbmQgZHJ5YnJ1c2hpbmcgd2l0aCBFbHlzaWFuIGdyZWVuIGFmdGVyIHRoZSB3YXNoIHRoZW4gZG9pbmcgZmluZSBoaWdobGlnaHRzIHdpdGggT2dyeW4gQ2Ftby4gClRoZW4uIApUaGUgc3RhZmYgaXMgcmVhbGx5IGhlbHBmdWwgdGhlcmUsIHNvIEkgYW0gY29uZmlkZW50IHRoZXkgY2FuIGhlbHAgeW91LiBJZiB0aGUgY2FsbCB3b3VsZG4gd29yayBvdXQgZHVlIHRvIGxhbmd1YWdlIGRpZmZpY3VsdGllcywgeW91IGNhbiBzdGlsbCBnbyB3aXRoIGFuIGUgbWFpbC4gRmluZ2VycyBjcm9zc2VkLjAgdm90ZXMuIApGaWx0ZXIvU29ydCA9IDEuIFByaWNlOkxvdyB0byBIaWdoIDIuIElmIGFibGUgdG8gc2V0IHVwIGFuIEFtYXpvbiBwcmltZSB0cmlhbCwgbWFyayB5b3VyIENhbGxhbmRlciBhbmQgZG8gaXQuIFNjcnVtcHRpb3VzIGZyZWUgMSAzZGF5IGRlbGl2ZXJpZXMgb24gbW9yZSBjcmFwIHRoYW4gSSBzaG91bGQgYmUgYnV5aW5nLgpUaGUgaW50ZXJuYXRpb25hbCB0aGVtZWQgbHVuY2ggaXMgaW5jbHVkZWQgaW4gdGhlIHN0dWRlbnQgbWVhbCBwbGFuIGFuZCBpcyBhdmFpbGFibGUgZm9yIGZhY3VsdHksIHN0YWZmIGFuZCBCdWZmIE9uZUNhcmQgaG9sZGVycy4gCkFub3RoZXIgaXMgdGhhdCBpdCBpcyBQaXNjZXMsIGFuZCBQaXJhdGUgbmVpdGhlciB3YW50cyB0aGF0IHRvIGJlIGEgc3VycHJpc2Ugbm9yIGEgY2VydGFpbnR5IGZvciB1cy4gCkkgYm91Z2h0IGl0IDMgNCB5ZWFycyBhZ28gYW5kIHN0aWxsIHdvcmtzIHByZXR0eSB3ZWxsIGJ1dCBpdCdzIG5vdCBhY3R1YWwgbGVhdGhlciBzbyBpdCBoYXMgc3RhcnRlZCB0byBmYWRlIGFuZCByaXAgYSBsaXR0bGUuIEl0IGlzIGNvbWZvcnRhYmxlIGFuZCBJIHRoaW5rIGl0IGRpZCBoZWxwIHdpdGggbXkgcG9zdHVyZSBhbmQgYmFjayBwcm9ibGVtcyB3aGljaCB3YXMgbXkgbWFpbiByZWFzb24gb2YgYnV5aW5nIGl0LiAKTm8uIFZpcnR1YWwgbWVtb3J5IGlzIGEgZmlsZSBzdG9yZWQgb24gdGhlIGRpc2sgYW5kIG1hbmFnZWQgYnl0aGUgb3BlcmF0aW5nIHN5c3RlbSBzb2Z0d2FyZS4gCkZvciBhIG1lbGVlIGNoYXJhY3RlciwgYSBkd2FydmVuIGJlcnNlcmtlciwgZm9yIHRoZSBzYW1lIHJlYXNvbnMgYXMgYWJvdmUuIApUaGVzZSBhcmUgcHJvdmlkZWQsIGFsb25nIHdpdGggcGljbmljIHRhYmxlcyBmb3IgcGljbmljcy4gCk9rIG1heWJlIGkganVzdCBtaXNzaW5nIHNvbWV0aGluZyBoZXJlIGJ1dCBldmVyeXRpbWUgSSBzZWUgc29tZW9uZSBzYXkgbW9yZSBhbmQgYmV0dGVyIHJld2FyZHMsIGl0IHNvdW5kcyBsaWtlIHRoZXkganVzdCBnaXZpbmcgbWUgbW9yZSBvZiBteSBtb25leSBiYWNrLiAKSWYsIGZvciBleGFtcGxlLCBJIHNvbWVob3cgY2FtZSBhcm91bmQgdG8gY2hhbmdpbmcgbXkgbWluZCBvbiB0aGUgb3JkaW5hdGlvbiBvZiB3b21lbiwgSSBzaW1wbHkgY291bGQgbm90IGNvbnRpbnVlIGNvbW11bmluZyBpbiB0aGUgQ2h1cmNoIG9mIENhbmFkYSwgbGV0IGFsb25lIHJlbWFpbiBpbiB0aGUgQW5nbGljYW4gQ29tbXVuaW9uIGF0IGFsbCwgYmVjYXVzZSB0aGUgaXNzdWUgZ29lcyB0byB0aGUgZm91bmRhdGlvbnMgb2YgZG9jdHJpbmUgYW5kIHByaW5jaXBsZXMgYW5kIHRoZSB2ZXJ5IGxlZ2l0aW1hY3kgb2YgdGhlIENvbW11bmlvbiwgbm90IHNpbXBseSBhYm91dCB3aGV0aGVyIG9yIG5vdCwgYnkgYWNjaWRlbnQgb3IgZGVzaWduLCBJIGhhcHBlbmVkIHRvIG9ubHkgYmUgYXQgc2VydmljZXMgd2l0aCBtYWxlIGNsZXJneS5UaGUgd2hvbGUgdGhpbmcgaXMgZWNjbGVzaWFzdGljYWwgbm9uc2Vuc2UuIApQcm9mZXNzaW9uYWxzIGFsc28gdGFrZSBub3RpY2Ugb2Ygd2hhdCBvdGhlciBwZW9wbGUgYXJlIGRvaW5nLiBJZiBtb3N0IHBlb3BsZSBhcmUgdGlnaHQgKG9mdGVuIHNhaWQgYXMgInRoZSB0YWJsZSBpcyB0aWdodCIpIGl0IGlzIGJldHRlciB0byBiZSBsb29zZXIgYW5kIHZpY2UgdmVyc2EuIApXZWxsLCB0aGF0J3Mgd2hhdCB5b3UgYXJlIG1hZGUgb3IgbWF5IHRoaW5rLi4gClRoZXJlIGNhbiBiZSBsaXR0bGUgb3Igbm8gZG91YnQgdGhhdCB0aGlzIGlzIHRydWUgb2YgbW9ua2V5czsgYnV0IEkgbmV2ZXIga25ldyBvZiBhIHJlYWxseSBnb29kIGNhc2UgYW1vbmcgZG9ncyBzYXZlIHRoaXMgb25lLCBhbmQgaGVyZSB0aGUgc2lnbnMgb2YgZGlzbGlrZSB3ZXJlIHVuIGVxdWl2b2NhbC4gCk5vcnRoZXJuTmV2YWRhIHZzLiBTb3V0aGVybiBOZXZhZGEuIApNeSBxdWVzdGlvbiBpcyB3aHkgd291bGQgYW55b25lIGNob29zZSB0byBzdXJyb3VuZCB0aGVtc2VsdmVzIHdpdGggc3VjaCBiYWQgZW5lcmd5PyBJIGdldCBpdCBjYW4gYmUgdXNlZnVsIHRvIHZlbnQsIGJ1dCBzdWJzY3JpYmluZyB0byBhIHN1YiBsaWtlIHRoYXQsIHlvdSBvbmx5IGV2ZXIgc2VlIHRoYXQga2luZCBvZiBzaGl0IHRoYXQgYW5ub3lzIHlvdS4gSXQgbGlrZSBzb21lb25lIHdobyBoYXRlcyB0aGUgTWluaW9ucyBzdWJzY3JpYmluZyB0byByL21pbmlvbmhhdGUgLCBhbGwgeW91IGRvaW5nIGlzIHN1cnJvdW5kaW5nIHlvdXJzZWxmIHdpdGggbW9yZSBvZiB3aGF0IHlvdSBkZXNwaXNlLiBJIGp1c3QgZG9udCBnZXQgdGhlIHN1YnJlZGRpdHMgdGhhdCBmZWVkIG9mZiBvZiBuZWdhdGl2aXR5LCBlc3BlY2lhbGx5IHdoZW4gbG90cyBvZiB0aGUgcG9zdHMgYXJlIGp1c3Qgc3Rva2luZyBhIHN0dXBpZGl0eSBmaXJlIGZvciB0aGUgc2FrZSBvZiBtb3JlIG9yYW5nZSBhcnJvd3MuIApBIGZldyBwZXJzb25hbCB0aG91Z2h0cyBoZXJlLiAKSW4gYSB0b3VybmFtZW50IHNpdHVhdGlvbiwgZnJlcXVlbnRseSBieSB0aGUgdGltZSB5b3UgZ2V0IHRvIGEgaGVhZHMgdXAgc2l0dWF0aW9uIHByZSBmbG9wLCB0aGUgYmxpbmRzIGFyZSBzbyBsYXJnZSB0aGF0IHRoZSBvbmx5IGRlY2lzaW9uIHRvIG1ha2UgaXMgd2hldGhlciBvciBub3QgdG8gZ28gYWxsIGluLiBJZiB0aGUgYmxpbmRzIGFyZSBzdGlsbCByZWxhdGl2ZWx5IHNtYWxsLCBwcmUgZmxvcCBwbGF5IGlzIG5vdCBhbGwgdGhhdCBkaWZmZXJlbnQgZnJvbSBub3JtYWwsIGJ1dCB5b3UgbWF5IHdhbnQgdG8gYmUgYSBsaXR0bGUgbW9yZSBhZ2dyZXNpdmUgYW5kIHRyeSB0byBzdGVhbCBtb3JlIGJsaW5kcy4gUG9zaXRpb24gcGxheXMgaW4gYSBoZWFkcyB1cCBzaXR1YXRpb24gYmVjb21lcyBtb3JlIGNvbXBsZXggbGF0ZXIgaW4gdGhlIGhhbmQuLiAKTWFueSBvdGhlcnMgaGF2ZSB3aGlza3kgZ2VudGx5IHNsdW1iZXJpbmcgaW4gYmFycmVscy4uIApIb3dldmVyLCBCb2JhIGlzIGRldGVybWluZWQgYW5kIHNraWxsZnVsLiAKSSBkb24ndCB0aGluayBpdCBkZWxpdmVycyB0aGUgYnJhbmQgbWVzc2FnZSBpbiBhIHN1Y2NpbmN0IG1hbm5lci4gCkkgZHVubm8gaG93IHlvdSB3b3VsZCBldmVuIGJlZ2luIHRvIG1lYXN1cmUgc29tZXRoaW5nIGxpa2UgdGhhdCwgd2hhdCBtaWdodCBtYWtlcyBpdCBzZWVtIHRoYXQgd2F5IHRvIHlvdTsgYnV0IHNvIHdoYXQ/IElmIHRoYXQgZXZlbiB0cnVlLiBXaGF0IGRpZmZlcmVuY2UgZG9lcyBpdCBtYWtlIHdoYXQgcGVvcGxlIHRoaW5rPyBXaHkgc2hvdWxkIHRoYXQgYmUgdGhlIGRyaXZlciBiZWhpbmQgd2hhdCB0aGUgaWRlYWwgcG9saWN5IG9yIG1ha2VzIG9uZSBvdGhlcndpc2UgcHJpdmlsZWdlZCBwZXJzb24gKGhhcyBhY2Nlc3MgdG8gaGlnaGVyIGVkdWNhdGlvbiBhdCBhbGwpIHNvbWVob3cgbm93CkluIGRvbGxhciB0ZXJtcywgYW5kIGV2ZW4gZXhjbHVkaW5nIHRoZSBoaWdobHkgc2tpbGxlZCAiTWFpbiBFdmVudCwiIGhpZ2ggc2tpbGwgcGxheWVycyBlYXJuZWQgYW4gYXZlcmFnZSBvZiAkMzUwIHBlciB0b3VybmFtZW50LCB3aGlsZSBvdGhlciBwbGF5ZXJzIGxvc3QgJDQwMCBvbiBhdmVyYWdlLi4gClBva2VyIGhhcyBiZWVuIGFyb3VuZCBzaW5jZSB0aGUgZWFybHkgZGF5cyBvZiBnYW1ibGluZy4gU29vbiBhZnRlciB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSBJbnRlcm5ldCwgaXQgbW92ZWQgb250byB0aGUgdmlydHVhbCBnYW1ibGluZyBzY2VuZS4gCkxHQlRROiAxMjsgNi4xICUgKEVVOiAyOyAzLjMgJSkKSXQgYSBodW1hbiBiZWluZy4gSGUgcHJvYmFibHkgcm9sbGluZyBkdWUgdG8gaGlzIHN3ZWF0IGFuZCBkaXN0YW50IHN0YXJlIGRlc3BpdGUgdGhlIGNvbW1vdGlvbiBhcm91bmQgaGltLCBhbmQgaGlzIG5vdCBnaXZpbmcgYSBmdWNrIGFib3V0IGl0IHRvby4gSnVkZ2luZyBieSBoaW0gd2VhcmluZyBuZWFybHkgbm90aGluZywgcm9sbGluZyB0byBub3QgY2FyZSwgYW5kIGhpcyBmaWd1cmUsIGhlIHByb2JhYmx5IHVzZXMgdGhlIGV4cGVyaWVuY2UgYXMgYSB0aGVyYXBldXRpYyBvcHBvc2l0ZSBvZiBoaXMgZGFpbHkgbGlmZSAgIGV2ZXJ5d2hlcmUgaGUgZ29lcywgY2xvdGhlZCwgZmVlbGluZyBzaGFtZSBhYm91dCBoaXMgYmVudCBsZWdzIGFuZCBzbWFsbCBzdGF0dXJlLCBhbGwgb2YgaXQgbWFnbmlmaWVkIGJ5IG9uZSBvdXQgb2YgZXZlcnkgdHdvIHBlb3BsZSBoZSB3YWxrcyBwYXN0IGJlaW5nIGFuIG9ubG9va2VyLiBJdCBtdXN0IGZlZWwgZ3JlYXQgdG8gYmUgbmFrZWQgYW5kIG5vdCBjYXJlIGF0IGFsbCwgZ2l2ZW4gd2hhdCBoaXMgbGlmZSBpcyBsaWtlLiBJdCBwcm9iYWJseSBiZSBncmVhdCBmb3IgbW9zdCBvZiB1cyBzaW5jZSwgZnJvbSB3ZWFyaW5nIGNsb3RoZXMgZGFpbHkgZm9yZXZlciwgbWFueSBncm93IGEgY2VydGFpbiBlbWJhcnJhc3NtZW50IGFib3V0IGJlaW5nIG5ha2VkIHdoaWNoIHRoZXkgbGF0ZXIgY29uZmxhdGUgd2l0aCBhbiBlbWJhcnJhc3NtZW50IG9mIG91ciBmaWd1cmUuIEJ1dCBoZXJlLCBoZSBwcm9iYWJseSBibGV3IG9mZiBhIG1lZ2F0b24gb2YgaW50ZXJuYWwgc3RlYW0gaGUgYnVpbHQgdXAgaGlzIHdob2xlIGxpZmUsIGEgbW91bnRhaW4gY29tcGFyZWQgdG8gb3VyIG1vbGVoaWxsLgpUaGUgcGxheWVyIHdpdGggdGhlIGxvc2luZyBoYW5kIGludm9sdmVkIGluIGEgImJhZCBiZWF0IiByZWNlaXZlcyA0MCBwZXJjZW50IG9mIHRoZSBqYWNrcG90LiBUaGUgcGxheWVyIHdpdGggdGhlIHdpbm5pbmcgaGFuZCByZWNlaXZlcyAyMCBwZXJjZW50LCBhbmQgdGhlIHJlbWFpbmluZyBwbGF5ZXJzIGF0IHRoZSB0YWJsZSwgdXAgdG8gZWlnaHQgb2YgdGhlbSwgc3BsaXQgdGhlIHJlbWFpbmluZyA0MCBwZXJjZW50LiBUaGUgamFja3BvdCBpcyBzbyBoaWdoLCBpdCdzIGFjdHVhbGx5IGxpZmUgY2hhbmdpbmcgbW9uZXkuLiAKQSBuZXcgc3R1ZHkgb3V0IG9mIENhbmFkYSBzdWdnZXN0cyB0aGF0IGV4ZXJjaXNlIGN1dHMgdGhlIHJpc2sgb2YgQWx6aGVpbWVyIGFuZCBsZXNzIGRldmFzdGF0aW5nIG1lbnRhbCBsb3NzZXMsIHBhcnRpY3VsYXJseSBpbiB3b21lbi4uIApTYXkgd2hhdCB5b3Ugd2FudCBhYm91dCB0aGUgZ2xhbW9yb3VzIGxpZmUgb2YgcHJvZmVzc2lvbmFsIHNwb3J0c21lbiBidXQgdGhpcyBpc24ndCBpdC4gClRha2UgdGhlIGJ1bGwgYnkgdGhlIGhvcm5zIFRvIGF0dGFjayBhIHByb2JsZW0gaGVhZCBvbjsgdG8gY29uZnJvbnQgd2l0aG91dCBmZWFyIG9yIGV2YXNpdmVuZXNzOyB0byBmYWNlIHVwIHRvIGRhbmdlciwgZGlmZmljdWx0eSBvciB1bnBsZWFzYW50bmVzcyB3aXRob3V0IHNocmlua2luZy4gSW4gYnVsbGZpZ2h0aW5nLCBhIG1hdGFkb3IgZ3Jhc3BzIHRoZSBob3JucyBvZiBhIGJ1bGwgYWJvdXQgdG8gdG9zcyBoaW0uIEpvbmF0aGFuIFN3aWZ0IHVzZWQgdGhlIGV4cHJlc3Npb24gaW4gMTcxMToKSmFja3NvbnZpbGxlIGNvcCBjb252aWN0ZWQgb2YgZ3VuIGNoYXJnZSBpbiBjYXJkIGdhbWUKQnV0IHdhbGtpbmcgaW1wcm92ZXMgeW91ciBvdmVyYWxsIGhlYWx0aCBpbiBhbiBldmVuIG1vcmUgaW1wb3J0YW50IHdheTogSWYgeW91IGRvIGl0IGJyaXNrbHkgKGF0IGEgcmF0ZSBvZiBiZXR3ZWVuIHRocmVlIGFuZCBmaXZlIG1pbGVzIHBlciBob3VyKSBhbmQgY29udGludW91c2x5IGZvciBhdCBsZWFzdCAyMCB0byAzMCBtaW51dGVzLCBpdCBiZWNvbWVzIGFuIGFlcm9iaWMgZXhlcmNpc2UuIEFuIGV4ZXJjaXNlIGlzIGFlcm9iaWMgaWYgeW91IGNhbiBkbyBpdCByaHl0aG1pY2FsbHkgYW5kIGNvbnRpbnVvdXNseSBhbmQgYXQgYSBicmlzayBlbm91Z2ggcGFjZSB0byBmb3JjZSB5b3VyIGhlYXJ0IGFuZCBsdW5ncyB0byB3b3JrIGhhcmRlciB0byBzdXBwbHkgeW91ciBtYWpvciBtdXNjbGVzIHdpdGggb3h5Z2VuLiBCeSBmb3JjaW5nIHlvdXIgY2FyZGlvdmFzY3VsYXIgc3lzdGVtIHRvIHB1bXAgYmxvb2QgYW5kIG94eWdlbiBjb250aW51b3VzbHkgdGhyb3VnaG91dCB5b3VyIGJvZHksIGFlcm9iaWMgZXhlcmNpc2Ugc3RpbXVsYXRlcyBhbmQgc3RyZW5ndGhlbnMgdGhlIGhlYXJ0LCBsdW5ncywgYW5kIG11c2NsZXMuCk9uIFRodXJzZGF5LCBEaXNuZXkgQ0VPIEJvYiBJZ2VyIHRvbGQgc2hhcmVob2xkZXJzIHRoZSBkZWFsIHdpbGwgY2xvc2UgInNvb24uIgooU29tZSBtb3JuaW5ncyBteSBodXNiYW5kIGFuZCBpIGV2ZW4gYnJhaW5zdG9ybSBvdmVyIGNvZmZlZSB3aGF0IG91ciBzdG9yaWVzIG9mIGNvbW1pc2VyYXRpb24gd2lsbCBiZSB0b2RheSBzaG91bGQgd2UgZ2V0IGNhdWdodCBwYXJrZWQgaW4gZnJvbnQgb2YgaGlzIGhvdXNlIGFnYWluKS4gCldhdGNoaW5nIHRoZSBldmVuaW5nIG5ld3Mgb24gRmViLiA2LCB0aGUgYW5jaG9ycGVyc29uIHJlcG9ydGVkIG9uIHRoZSBwcmVzaWRlbnQgU3RhdGUgb2YgdGhlIFVuaW9uIGFkZHJlc3MgYW5kIGRpc3BsYXllZCBhIGNoYXJ0IHNob3dpbmcgdGhlIGRyb3AgaW4gaWxsZWdhbCBjcm9zc2luZyBzaW5jZSBib3JkZXIgZmVuY2Ugd2FzIGJ1aWx0LiBNb3JlIGRyYW1hdGljYWxseSwgaXQgc2hvd2VkIHRoZSBkcm9wIGluIGlsbGVnYWwgY3Jvc3NpbmdzIGFmdGVyIHRoZSBwcm9ncmFtICJIb2xkIHRoZSBMaW5lIiB3YXMgcHV0IGluIHBsYWNlLgpTb21lIG9mIHRoZXNlIHNwYXMgaGF2ZSByZXNpZGVudGlhbCBsaXZpbmcgcXVhcnRlcnMgdXBzdGFpcnMgdGhhdCBob3VzZSB1cHdhcmRzIG9mIDEwIHdvbWVuLiBJbiB0aGUgdGltZXMgSSBiZWVuIHVwIHRoZXJlLCBpdCBsb29rcyBmYWlybHkgd2VsbCBjbGVhbmVkIGJ1dCBzdGlsbCB2ZXJ5IHdlbGwgYSBwcmlzb24uIEkgZG9uIGhhdmUgdmlkZW9zIG9mIHRoZXNlIGFyZWFzIHVuZm9ydHVuYXRlbHkgYXMgaXQgd291bGQgaGF2ZSBiZWVuIHRvbyBvYnZpb3VzLgpUaGlzIHBvc3QgaXMgbm90IG1lYW50IHRvIHBpY2sgb24gYW55IHByb2Zlc3Npb24uIFRoaXMgd2FzIHB1Ymxpc2hlZCBpbiBhIE1lZGljYWwgSm91cm5hbCBpbiAyMDAyLiAKNSBOZXdlc3QgUmVzdGF1cmFudHMgUmVmbGVjdGluZyBEaXZlcnNlIEN1bHR1cmVzClRoYXQgd2hhdCB5b3Ugd2VyZSByZWFsbHkgY29uZnJvbnRpbmcgaGltIGFib3V0LiAKQ2UgcGFpbiBkJ2V4Y2VwdGlvbiBwcm92aWVudCBkJ3VuZSBlbmRyb2l0IHRvbm5hbnQgbyBSb2xhbmQgRmV1aWxsYXMsIGFuY2llbiBpbmduaWV1ciwgYSByZXByaXMgYXZlYyBzYSBmZW1tZSB1biBtb3VsaW4gcG91ciByZWxhbmNlciB1bmUgY2hhaW5lIGNvbXBsdGUgZGUgZmFicmljYXRpb24gZHUgcGFpbi4gQ2VsYSB2YSBhaW5zaSBkdSBjaG9peCBkZXMgc2VtZW5jZXMsIGRlcyB2YXJpdHMgYW5jaWVubmVzLCBldCBkJ3VuZSBhZ3JpY3VsdHVyZSBiaW9sb2dpcXVlICBsYSB2ZW50ZSBlbiBib3VsYW5nZXJpZSBlbiBwYXNzYW50IHBhciBsZSBtdGllciBkZSBtZXVuaWVyIGV0IGwndXRpbGlzYXRpb24gZGUgbWV1bGVzIGRlIHBpZXJyZSwgdW5lIGxlbnRlIGZlcm1lbnRhdGlvbiwgbGEgY3Vpc3NvbiBkYW5zIHVuIGZvdXIgcXVpIHBhcmFpdCBpbXByZXNzaW9ubmFudC4gCkNvbXBsaWNhdGUgYnV0IHlvdSBrbm93LCBvbmxpbmUgcG9rZXIgaXMgZ3JlYXQuIAoiVGhpcyBpcyBub3Qgc29tZXRoaW5nIHRoZXkgYXJlIGVuZ2FnaW5nIHdpdGggd2lsbGluZ2x5IGl0cyB0cmlnZ2VyaW5nIHBhdGh3YXlzIG9mIGFkZGljdGlvbiBhbmQgaXQgc2ltcGx5IGZvciBwcm9maXQuIgpUaGUgZW5kLi4gCldoZW4gSSB3YXMgYXQgYWJvdXQgODAgcG91bmRzIGRvd24gSSB3YXMgc3RpbGwgdGVjaG5pY2FsbHkgb3ZlcndlaWdodC4gSSBoYWQgcGVvcGxlIHRlbGxpbmcgbWUgSSB3YXMgd2FzdGluZyBhd2F5LiAKQmUgY2FyZWZ1bCwgUG9rZXIgcm9vbSBpcyB3ZWFrUmV2aWV3ZWQgRmVicnVhcnkgMTMsIDIwMTQgR3JlZWt0b3duIGlzIG5pY2UgYXJlYSBhbmQgZHVyaW5nIHRoZSBkYXkgYW5kIGVhcmx5IGV2ZW5pbmcgaXQgc2VlbXMgcHJldHR5IHNhZmUuIEp1c3QgYmUgY2FyZWZ1bCB0aG91Z2ggYXMgaXRzIHN0aWxsIGRvd250b3duIERldHJvaXQuIFRoaXMgcG9rZXIgcm9vbSB3YXMgaGFyZCB0byBmaW5kIGFzIHRoZXJlIHdhcyBubyBzaWducy4gSXQgd2FzIHN0dWNrIGluIGEgYmFjayBoYWxsd2F5IGF3YXkgZnJvbSB0aGUgcmVzdCBvZiB0aGUgY2FzaW5vLiAKSSBkb24gbGlrZSBhY2NlcHRpbmcgcGl0eSwgYmVjYXVzZSBpdCBpcyB1c3VhbGx5IG1vb3QuIApDb2hlbiB0byBiZWdpbiBzZXJ2aW5nIGhpcyBzZW50ZW5jZSBvbiBNYXJjaCA2Li4gCkFuZCB0aGVyZSdzIG5vIGVhc3kgd2F5IHRvIHNocmluayBpdCBiYWNrIGRvd24uIEtlZXAgZ29pbmcgYW5kIGl0J2xsIHN0cmV0Y2ggZXZlbiBtb3JlLiAKSSByZWFsbHkgaGF2ZSBhIGhhcmQgdGltZSBiZWxpZXZpbmcgaGUgd2FzIGEgY2hpbGQgbW9sZXN0ZXIuIEFsdGhvdWdoIEkgbGlrZSBhbG1vc3QgYWxsIGhpcyBtdXNpYywgSSBkaWQgbm90IGlkb2xpemUgaGltIGxpa2UgbW9zdC4gTXkgb3BpbmlvbiBjb21lcyBmcm9tIHRoZSBmYWN0IHRoYXQgd2hlbiB5b3UgbG9vayBhdCBsaXRlcmFsbHkgZXZlcnkgb3RoZXIgUGVkbywgZnJvbSBDYXRob2xpYyBQcmllc3QsIHJpY2ggb2xkIG1lbiBzZXggcmluZ3MsIHRvIHlvdXIgbmVpZ2hib3Job29kIGNyZWVwLCBKYWNrc29uIGlzIG5vIHdoZXJlIG5lYXIgdGhlIHNhbWUgcHJvZmlsZS4gClRoaXMgaXMgd2h5IEkgZmxpcHBlZCBvdmVyIGFuIEEgYW5kIGFza2VkIGlmIGhlIHdhbnRlZCB0byBwbGF5IGEgYmlnIHBvdC4gTW9zdCBwZW9wbGUgaW4gYSAxLzIgZ2FtZSBhcmVuIHdpbGxpbmcgdG8gcHV0IHRoZWlyIGVudGlyZSAxMDAwYmIgc3RhY2sgaW4gcHJlLiAKS2VlcCBncmluZGluZy4gCkl0IHNob3VsZG4gYmUgYWJvdXQgc2lkZXMgYW55bW9yZS4gCkFjdXB1bmN0dXJlLiBUaGUgdXNlIG9mIGFjdXB1bmN0dXJlIGFuZCBhY3VwcmVzc3VyZSBpcyB0aG91c2FuZHMgb2YgeWVhcnMgb2xkLiAKVGhleSBoYW5kbGluZyBpdCB2ZXJ5IHdlbGwuIEluIGZhY3QsIHRoZXkgcmlnaHQvdGhlIERlbXMgYXJlIHdyb25nOyB0aGV5IHJlc3BlY3RhYmxlL3RoZSBEZW1zIGFyZSBjcmltaW5hbHMsIGFuZCB0aGV5IGNvbnRpbnVlIHRvIG1haW50YWluIHRoZSBtb3JhbCBoaWdoIGdyb3VuZCBpbiBhbGwgbWF0dGVycyBwb2xpdGljYWwgYW5kIHBlcnNvbmFsLCBkZXNwaXRlIGRpc3BsYXlzIHN1Y2ggYXMgV2lsc29uIGV4dHJhbWFyaXRhbCBhZmZhaXJzLCBkcnVnIHVzZSwgYW5kIGRlY2VpdmluZyB0aGUgQW1lcmljYW4gcGVvcGxlIGluIG9yZGVyIHRvIGxpbmUgdGhlIHBvY2tldHMgb2YgdGhlIHJpY2ggYW5kIHdhZ2UgdW5qdXN0IHdhcnMgZm9yZXZlciBhbmQgZXZlci4gQW1lbi4KSSBtaXNzIG15IGdyYWRlIDggZnJpZW5kcywgdGhleSB0aGUgZnVubmVzdCBwZW9wbGUgSSBldmVyIG1ldCBpbiB0aGUgZW50aXJlIHNjaG9vbG4uIFN0dWR5IGNvbW11bml0eTsgZ3JvdXAgcHJvamVjdHYuIFRvIHN0dWR5IHRvZ2V0aGVyOyB0byBnaXZlIHN1cHBvcnQgb24gc3R1ZHlpbmdDb21wb3VuZCBvZiAoY2lyY2xlKSwgYW5kIEhpbWEgKGh1bWFucylJIGdvdCBtb3JlIHNlcmlvdXMgaW4gdGhlIHN0dWR5Z3JhbSBjb21tdW5pdHkgdGhpcyB5ZWFyLiAKIkhlIGlzIGxvb2tpbmcgbGlrZSBhIHJlcGVhdCBvZmZlbmRlciBhbmQgYSBiYWQgYWN0b3IsIiBzYWlkIENhcmwgVG9iaWFzLCBhIGxhdyBwcm9mZXNzb3IgYXQgdGhlIFVuaXZlcnNpdHkgb2YgUmljaG1vbmQuICJUaGUgU0VDIGlzIHRha2luZyBhY3Rpb24gYmVjYXVzZSBpdCBoYXMgYSByZXNwb25zaWJpbGl0eSB0byBwcm90ZWN0IHRoZSBpbnRlcmVzdHMgb2YgY29uc3VtZXJzLCBpbnZlc3RvcnMgYW5kIHRoZSBwdWJsaWMuIgpOVGhhdCBkb2Vzbid0IG1pdGlnYXRlIHRoZSBwcm9ibGVtIHRoYXQgbWlsbGlvbnMgb2YgcGVvcGxlIGNhbid0IGFmZm9yZCB0aGUgbW9ydGdhZ2VzIHRoZXkgc2lnbmVkIHVwIGZvciBzZXZlcmFsIHllYXJzIGFnby4KVGhlcmUgaXMgYSBjcmVhdG9yLCB0aGVyZSBpc250IGEgY3JlYXRvciwgYW5kIHRoZXJlIGlzIHRoZSBiZWNvbWluZyBvZiBhIGNyZWF0b3IgKGxpZmUgYXMgd2Uga25vdyBpdCksIGFuZCB0aGVyZSBpcyBub3QgdGhlIGNvbWluZyBvZiBhIGNyZWF0b3IuLiAKR2FkZ2V0cyBHaXptb3MgR2Fsb3JlIEF0IENFUyAyMDEzVVMgSVQgQ09NUFVURVIgVEVMRUNPTSBJTlRFUk5FVCBFTEVDVFJPTklDUyBDRVNBdHRlbmRlZXMgd2VhcmluZyAzIEQgZ2xhc3NlcyB3YXRjaCB0aGUgd29ybGQncyBmaXJzdCAnMyBEIHZpZGVvIHdhbGwnIGR1cmluZyBhIHByZXNlbnRhdGlvbiBhdCB0aGUgTEcgYm9vdGggZHVyaW5nIHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiBPZiBUYWl3YW4gZHVyaW5nIHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiAKSWYgc29tZW9uZSBpcyB0aGlua2luZyBhYm91dCBjcmVhdGluZyBhIHBva2VyIGNvbGxlY3Rpb24sIGhlIGRlZmluaXRlbHkgaGF2ZSB0byB0aGluayBhYm91dCBwb2tlciBjYXJkcyBhbmQgcG9rZXIgY2FyZCBndWFyZHMgYXQgdGhlIHNhbWUgdGltZS4gCkhlIHNhaWQgcGFzc2FnZSBjcmVhdGVzIGEgImNsZWFyIGNvbnRyYXN0IiB3aXRoIFNlbmF0ZS5Ib3VzZSBGcmVlZG9tIENhdWN1cyBDaGFpcm1hbiBNYXJrIE1lYWRvd3MsIGEgTm9ydGggQ2Fyb2xpbmEgY29uc2VydmF0aXZlLCBwbGF5ZWQgYSBrZXkgcm9sZSBpbiBhZHZpc2luZyBUcnVtcCB0byB0YWtlIGEgc3RhbmQgYWxvbmcgd2l0aCBjb25zZXJ2YXRpdmUgcHVuZGl0cyBsaWtlIEFubiBDb3VsdGVyIGFuZCBSdXNoIExpbWJhdWdoLiAKS2VsbHkgY291bGQgYmUgbGVmdCB3aXRoIG5vdGhpbmcgVGF4IGFuZCBsZWdhbCBpc3N1ZXMgY291bGQgbGVhdmUgdGhlIEdyYW1teSB3aW5uZXIgUi4gCk9ubHkgaWYgeW91IG5ldmVyIHdvcmtlZCBhbG9uZ3NpZGUgcGVvcGxlIHdpdGggbWVudGFsIGRpc2FiaWxpdGllcy4gSSBoYXZlLCBpbiBhIGZldyBkaWZmZXJlbnQgcGxhY2VzLiBUaGVyZSBhIG1hc3NpdmUgcHJvYmxlbSB3aXRoIHRoZXNlIGFnZW5jaWVzIG5vdCBiZWluZyBhYmxlIHRvIHRlbGwgd2hvIGlzIHRydWx5IGNhcGFibGUgb2YgZG9pbmcgYSBqb2IsIGFuZCB3aG8gaXMgbm90LiBJZiBzb21lb25lIGlzIHNvIHNleHVhbGx5IG9yIGdlbmVyYWxseSBpbmFwcHJvcHJpYXRlIHRoYXQgdGhleSBtYWtlIGZ1Y2tpbmcgZXZlcnlvbmUgdW5jb21mb3J0YWJsZSBieSB3aGF0IHRoZXkgc2F5IGFuZCBkbywgdGhlbiBubywgdGhleSBzaG91bGRuIGhhdmUgYSBqb2IuIEFuZCBpZiB0aGV5IGNhbiBldmVuIGZvbGxvdyBzaW1wbGUgaW5zdHJ1Y3Rpb25zIG9yIGNvbXBsZXRlIHNvbWV0aGluZyBvbiB0aGVpciBvd24gdGhleSBzaG91bGRuIGhhdmUgYSBqb2IgZWl0aGVyLiBXaGVuIHRoYXQgaGFwcGVucyBpdCBsaWtlIHdoZW4gYSA2IHllYXIgb2xkICJoZWxwcyIgeW91IGRvIHNvbWV0aGluZy4gSXQganVzdCBtYWtpbmcgeW91ciBqb2IgdHdpY2UgYXMgbG9uZyBiZWNhdXNlIHlvdSBoYXZlIHRvIGNsZWFuIHVwIHRoZWlyIG1pc3Rha2VzIHRvby4gVGhlcmUgd2FzIG9uZSB3b21hbiB3aXRoIERTIEkgd29ya2VkIHdpdGggd2hvIGRpZCBhIGRhbW4gZ29vZCBqb2Igd2hlbiBJIHdvcmtlZCBhdCBhbiBhbmltYWwgc2hlbHRlciwgYW5kIHllYWggc2hlIHNob3VsZCBoYXZlIGEgam9iIGJlY2F1c2UgeW91IGtub3csIHNoZSB3YXMgY2FwYWJsZSBvZiBpdCEuIEkgc29ycnkgYnV0IGlmIHlvdSBpbmNhcGFibGUgb2YgY29tcGxldGluZyBhIGpvYiAocmVnYXJkbGVzcyBvZiB3aHkpIHRoZW4geW91IHNob3VsZG4gaGF2ZSBpdC4gT3RoZXJzIGFyZSBkZXBlbmRpbmcgb24gdGhhdCBqb2IgZ2V0dGluZyBkb25lLgpPciBnZXQgdG8gY2hlYXAgc2hvd2Rvd24gaWYgdGhlIGZsdXNoIGhpdHMuLiAKRmlyc3RseSwgSSBkaWRuIHRha2UgYSBjYWxjIGNsYXNzLiBTb2Z0d2FyZSBEZXZlbG9wbWVudCkuIApDb25zaWRlciB3aGF0IHRoZSAxOTgzIFdvcmxkIEN1cCB3aW4gZGlkIGZvciBjcmlja2V0IGluIEluZGlhLiAKQSBzcG9rZXNwZXJzb24gZm9yIHRoZSBCYWxsYXJhdCBJbnRlcmFnZW5jeSBUYXNrZm9yY2Ugb24gR2FtYmxpbmcgICB3aGljaCBpbmNsdWRlcyBCYWxsYXJhdCBDb21tdW5pdHkgSGVhbHRoLCBUaGUgU2FsdmF0aW9uIEFybXksIFlNQ0EsIEZlZGVyYXRpb24gVW5pdmVyc2l0eSwgQmFsbGFyYXQgQ291bmNpbCBhbmQgdGhlIENlbnRyYWwgSGlnaGxhbmRzIFByaW1hcnkgQ2FyZSBQYXJ0bmVyc2hpcCAgIHNhaWQgaXQgd2FzIHRoZSBjaXR5J3Mgd29yc3QgcG9rZXIgbWFjaGluZSBsb3NzZXMgaW4gc2l4IHllYXJzLgpQb3N0ZWQgYnkgbml0c3VqIGF0IDk6MTEgUE0gb24gT2N0b2JlciAyNywgMjAwNgpXaGlsZSByZXNlYXJjaGluZyBteSBib29rLCBNaXJhY2xlIG9mIE1hZ25lc2l1bSwgSSBmb3VuZCB0aGF0IGRvY3RvcnMgaGF2ZSBiZWVuIHByZXNjcmliaW5nIG1hZ25lc2l1bSBmb3IgaGVhcnQgZGlzZWFzZSBzaW5jZSB0aGUgMTkzMHMuClNpbWlsYXJseSwgb3VyIGV4aXN0ZW5jZSBuZWVkcyBhIEdvZCB0byBwdXQgaW4gcGxhY2UuIApTd2F5YW1iaHVuYXRoIGFuZCBCb3VkaGFuYXRoIFN0dXBhOiAgTG9jYXRlZCBvbiBhIGhpbGwsIHRoZSBCdWRkaGlzdCB0ZW1wbGUgb2YgU3dheWFtYmh1bmF0aCwgaXMgY29uc2lkZXJlZCB0byBiZSBvbmUgdGhlIGhvbGllc3QgcGxhY2Ugb2YgdGhlIGNpdHkuIApCdXQgb2YgY291cnNlLCBhbm90aGVyIGFzcGVjdCBvZiBodW1hbiBpcnJhdGlvbmFsaXR5IGlzIHRoZSBmYWN0IHRoYXQgcGVvcGxlIHdobyBoYXZlIHN0YWtlZCB0aGVpciBzb3VsIG9uIHRoZSBpZGVhIHRoYXQgYnVybiBpbiBpcyBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBhcmUgbmV2ZXIgZ29pbmcgdG8gYWNjZXB0IHRoYXQgdGhleSBtYXkgYmUgd3JvbmcuIApMaXBzY29tYiBob2xkcyBhIGRlZ3JlZSBpbiBwdWJsaWMgcmVsYXRpb25zIGZyb20gV2Vic3RlciBVbml2ZXJzaXR5Li4gCkEgbmV3IGhhdCBhbmQgc3VuZ2xhc3NlcyB3b24gY3V0IGl0LiBZZWFoLCBmb3IgdGhpcyB0byB3b3JrIHlvdSBnb3R0YSBnbyBkZWVwIHVuZGVyIGNvdmVyLiBUaGUgd2F5IEkgc2VlIGl0IHlvdSBnb3R0YSBpbnZlc3QgaGVhdmlseSB3aXRoIHRpbWUgb3IgbW9uZXkgdG8gbWFrZSB0aGlzIHdvcmsuIApBbm90aGVyIHRoaW5nIHRvIGNvbnNpZGVyIGlzIHRoZSBhdXRvbWF0aWMgdHJhbnNtaXNzaW9uIHdhcyBpbnRyb2R1Y2VkIGluIEFtZXJpY2EgYXQgcGVhayBvZiBvdXIgZWNvbm9taWMgcHJvc3Blcml0eS4gQW1lcmljYW5zIHdlcmUgYmVjb21pbmcgMiBjYXIgaG9tZXMgd2hpbGUgRXVyb3BlIHdhcyByZWJ1aWxkaW5nIGFmdGVyIFdXSUkuIFdlIGJlY29tZSBleHRyZW1lbHkgYWNjdXN0b21lZCB0byB0aGVzZSBhbmQgYXMgZGVtYW5kIGluY3JlYXNlZCwgYXV0b21ha2VycyBwYWlkIGF0dGVudGlvbi4gClRoYXQgaXMgYmVjYXVzZSBhZnRlciB0aGUgZmxvcCB5b3VyIGhhbmQgd2lsbCBiZSA3MSBwZXJjZW50IGNvbXBsZXRlLiBXaGVyZSBkb2VzIHRoaXMgZmlndXJlIGNvbWUgZnJvbT8gQXNzdW1pbmcgeW91IHBsYXkgeW91ciBoYW5kIG91dCB0byB0aGUgZW5kLCBpdCB3aWxsIGNvbnNpc3Qgb2Ygc2V2ZW4gY2FyZHMuIEFmdGVyIHRoZSBmbG9wIHlvdSBoYXZlIHNlZW4gZml2ZSBjYXJkcyBvciA1Lzcgb2YgdGhlIGZpbmFsIGhhbmQsIHdoaWNoIGlzIGVxdWFsIHRvIDcxIHBlcmNlbnQuIApTaGUgd29uIGxldCB5b3UgZ2V0IHZlcnkgZmFyLCBubyBtYXR0ZXIgaG93IHJlYWR5IHNoZSBpcy4gClRoaXMgd2VlayBCaWcgU2hvdHMgYnJpbmdzIHlvdSBhIHBob3RvZ3JhcGggb2YgRGF2aWQgQmVja2hhbSBhY3R1YWxseSB3ZWFyaW5nIGEgc2hpcnQuIE5vLCByZWFsbHkuIAoiV2UnbGwgc3RhcnQgRnJpZGF5IHdpdGggdGhlIGFjY2xpbWF0aW9uIHdpdGggZXZlcnlib2R5LiIKSSBzdXBwb3NlIGl0IGlzIHBvc3NpYmxlIHRoZSB0cmFpbGVyIGlzIGp1c3Qgc2hvd2luZyBzb21lIGtpbmQgb2YgZXZlbnQgdGhhdCBsZWFkcyB1cyB0byB0aGUgc3RhcnQgb2YgdGhlIGdhbWUgYWZ0ZXIgaHVtYW5zIG1lZXQgd2l0aCBhbGllbnMgYW5kIGJlZnJpZW5kIHRoZW0sIGJ1dCBpdCBmZWx0IGxpa2Ugd2Ugd2VyZSBzZWVpbmcgdGhlIHBsYXllciBjaGFyYWN0ZXIgc3RhcnQgb2YgdGhlIGdhbWUuLiAKSSBhbSBhIHBhcnRuZXIuIFR3ZW50eSBtaW51dGUgdGltZSBvdXRzLiBXZSBoYXZlIGl0IGVzdGFibGlzaGVkIHRoYXQgaWYgSSBhc2sgaGVyIHRvIGdvLCBzaGUgd2lsbCBnbyBpbnRvIGFub3RoZXIgcm9vbSBhbmQgbGVhdmUgbWUgYWxvbmUgZm9yIHR3ZW50eSBtaW51dGVzLiAKSXQgbm90IHJpZ2h0IGFzIGEgaHVtYW4gcHJvcG9ydGlvbmVkIGNoYXJhY3RlciBhbmQgdGhlIGJsdWUgZnVyIC8gaHVtYW5vaWQgYnV0IG51ZGUgdGhpbmcganVzdCBjb21lcyBvZmYgYXMgYSBiaWcgYnJhaW5mdWNrLiAKSWYgaXQgZ2V0cyBkb3duIHRvIDUgb3IgZmV3ZXIgYmlnIGJsaW5kcywgdGhlbiB5b3UncmUgaW4gYSBkYW5nZXIgem9uZSBhbmQgbmVlZCB0byB0cnkgdG8gZG91YmxlIHVwIHNvb24uIEluIHN1Y2ggYSBzaXR1YXRpb24gdGhlIGJlc3Qgc3RyYXRlZ3kgaXMgcHJvYmFibHkgdG8gZ28gYWxsIGluIHdpdGggYW55IGRlY2VudCBoYW5kIHRvIHRyeSBhbmQgZ2V0IGEgbXVjaCBiaWdnZXIgY2hpcCBzdGFjay4gVGhlcmUgYXJlIGEgbnVtYmVyIG9mIGdyZWF0IGJvb2tzIG91dCB0aGVyZSBvbiBUZXhhcyBob2xkICdlbSB0b3VybmFtZW50cywgZXNwZWNpYWxseSBEYW4gSGFycmluZ3RvbidzIHNldC4gCkV2ZW4gaWYgeW91IG5vdCBnZXR0aW5nIGFueSBvcmFsIG51dHJpdGlvbiwgZXZlbiBsaXF1aWRzLCB5b3UgYm93ZWxzIHN0aWxsIHByb2R1Y2Ugd2FzdGUgYXMgdGhlcmUgYmFjdGVyaWFsIHdhc3RlIGFuZCB5b3VyIGJvZHkgb3duIGNlbGx1cmFsIHdhc3RlIHRoYXQgc3RpbGwgbmVlZHMgdG8gbW92ZSB0aHJvdWdoIHRoZSBndXQuIApZb3Ugd2lsbCBoYXZlIGF0IGxlYXN0IDI1MDAgd2hpY2ggaXMgZW5vdWdoIHRvIHB1dCB1cCBhIHNlcmlvdXMgZmlnaHQgVlMgdGhlaXIgYnV5Li4gCk1vc3QgVmlld2VkRmF0YWwgQ3Jhc2ggT24gSSA2OTYgUmVzdWx0cyBJbiBTaHV0ZG93biBPZiBFYXN0Ym91bmQgTGFuZXNNaWNoaWdhbiBTdGF0ZSBQb2xpY2UgYXJlIHJlcG9ydGluZyB0aGF0IHRoZXJlIGhhcyBiZWVuIGEgZmF0YWwgY3Jhc2ggdG9uaWdodCBvbiBlYXN0Ym91bmQgSSA2OTYgdGhhdCBoYXMgcmVzdWx0ZWQgaW4gYSBjb21wbGV0ZSBzaHV0ZG93biBvZiB0aGUgaGlnaHdheS4KQWZ0ZXIgdGhlIGNhcmRzIGFyZSBleGNoYW5nZWQsIGRldGVybWluZSB0aGUgd2lubmVyIG9mIHRoZSBnYW1lLiBXaGljaCBmaXZlIGNhcmQgZHJhdyBwb2tlciBoYW5kIGJlYXRzIHdoaWNoPyBSZXZpZXcgdGhlIGxpc3QgYmVsb3csIGZyb20gYmVzdCBoYW5kIHRvIHdvcnN0OlRoZSByb3lhbCBmbHVzaCBpcyB0aGUgYmVzdC4gSXQgY29udGFpbnMgYW4gYWNlLCBraW5nLCBxdWVlbiwgamFjayBhbmQgMTAuIApEaXZvcmNlIGlzIGEgaHVnZSBzdGVwIGFuZCBzbyB1bm5lY2Vzc2FyeSB1bnRpbCB0aGUgZGVjaXNpb24gaXMgdG90YWxseSBmaW5hbC4gSXQgY2FuIGFsc28gYmUgZXhwZW5zaXZlLiBJIGFtIGluIHRoZSBtaWRzdCBvZiBhIGRpdm9yY2UgbXlzZWxmIHJpZ2h0IG5vdy4gSXQgc291bmRzIGFzIGlmIHNoZSBuZWVkcyBzb21lIHNwYWNlIHRvIHdvcmsgdGhpbmdzIHRocm91Z2ggICBJdCBtaWdodCBiZSB0aGUgYW54aWV0eSBjb21lcyBmcm9tIGRvZGdpbmcgb3Igc3VwcHJlc3NpbmcgdGhlIGlzc3VlcyBzaGUga25vd3Mgc2hlIG5lZWRzIHRvIGZhY2UuIEZyYW5rbHkgSSB0aGluayBpdCBhICJjb3Agb3V0IiB0byBzYXkgc2hlIGhhcyB0byBnZXQgb3V0IG9mIHRoZSBtYXJyaWFnZSBiZWNhdXNlIHNoZSBpcyBoYXZpbmcgYW54aWV0eS4gU2hlIG5lZWRzIHRvIGNvbWUgdG8gdGVybXMgd2l0aCBoZXIgZmVlbGluZ3MgYWJvdXQgdGhlIG1hcnJpYWdlLiBJZiBzaGUgd2hvbGVoZWFydGVkbHkgd2FudGVkIHRvIGJlIG1hcnJpZWQsIHRoZXJlIHdvdWxkIG5vdCBiZSB0aGUgY29uZmxpY3QgYW5kIGhlbmNlIG5vIGFueGlldHkuIEl0IHNlZW1zIGFsbW9zdCBsaWtlIHNoZSBpcyB0cnlpbmcgdG8gY29uc3RydWN0IGEgYmxhbWVsZXNzIGV4aXQgICBsaWtlIHlvdSB3aWxsIHNlZSBob3cgdG9ydHVyZWQgc2hlIGlzIGFuZCBob3cgZGlmZmljdWx0IGl0IGlzIHRvIGhhdmUgaGVyIGFyb3VuZCBhbmQgeW91IGd1eXMgd2lsbCBoYXZlIG5vIGNob2ljZSBidXQgdG8gc2VwYXJhdGUuIEkgaG9wZSBoZXIgdGhlcmFwaXN0IGNhbiB3b3JrIG9uIHRoaXMgd2l0aCBoZXIgICB0aGF0IHRoZXJhcHkgY2FuIGhlbHAgaGVyIHRvIGNvbmZyb250IHdoeSBzaGUgd2FudGVkIHRvIGxlYXZlIHRoZSBtYXJyaWFnZSBhbmQgd2h5IHN0YXlpbmcgaW4gdGhlIG1hcnJpYWdlIHJpZ2h0IG5vdyBpcyBjYXVzaW5nIGlubmVyIHR1cm1vaWwuIEkgd2lzaCB5b3UgdGhlIGJlc3Qgb2YgbHVjay4gTWFycmlhZ2UgaXMgSEFSRCBXT1JLIQpQZXJzb25hbGx5LCBteSBodXNiYW5kIGFuZCBJIHRoaW5rIHRoYXQncyBhIGZhaXJseSBzbWFsbCBmaWd1cmUuIAoyIHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnby4gClRoZSBOb3RlIGNvbXBsZXRlbHkgc3RvbXBzIHRoZSBQaXhlbHMgZm9yIHBlcmZvcm1hbmNlLCBhbmQgSSBwdXNoZWQgaXQgcmVhbGx5IGhhcmQgd2hlbiBJIHdhcyB1c2luZyBpdCBmdWxsIHRpbWUuIApIb3cgUHJvIFdyZXN0bGluZyBXb3JrcwpCdXQgZG9lcyBub3QgcHJlc2NyaWJlIHRoZSBwcm9jZXNzIGZvciB3aGljaCBzZXJ2aWNlIHByb3ZpZGVycyBlbmdhZ2UgbXVuaWNpcGFsaXRpZXMuIFRlcm1zIG9mIGl0cyBjb250cmFjdHMgd2l0aCBjb21wYW5pZXMgbGlrZSBIYXJkIFJvY2sgYXJlIGNvbmZpZGVudGlhbCwgaGUgc2FpZC4uIApBbiBlYXJseSBibHVmZiBjYW4gYWxzbyBiZSBhbiBlZmZlY3RpdmUgc3RyYXRlZ3kgaW4geW91ciBnYW1lIGFzIHdoYXQgZWFybHkgZm9sZHMgZG8uIFlvdXIgYWdncmVzc2l2ZSBwbGF5IHNob3VsZCBpbnRlbnNpZnkgZGVlcGVyIGludG8gdGhlIGdhbWUuIApPaCBnb2QuIFRoaXMgcmVtaW5kZWQgbWUgb2YgYSBjYWxsIEkgdG9vayB3aGVuIEkgd29ya2VkIGZvciBhIFZvSVAgY29tcGFueS4gU29tZW9uZSBjYWxsZWQgaW4gY2xhaW1pbmcgdGhlIHBob25lcyB3ZXJlbiB3b3JraW5nLCBzbyBJIHN0YXJ0ZWQgZG9pbmcgYmFzaWMgdHJvdWJsZXNob290aW5nLCBhbmQgdHVybnMgb3V0IHRoZSBpbnRlcm5ldCB3YXMgY29tcGxldGVseSBkb3duLiBJIGluZm9ybWVkIGhlciBzaGUgbmVlZGVkIHRvIHNwZWFrIHRvIGhlciBJU1AsIGFuZCBoZXIgbG92ZWx5IHJlc3BvbnNlIHdhcyAiQnV0IHRoZSBwaG9uZXMgcHJvdmlkZSB0aGUgaW50ZXJuZXQhIiBHcmFudGVkLCB0aGVpciBwaG9uZXMgd2VyZSBkYWlzeSBjaGFpbmVkIHRvIHRoZWlyIGNvbXB1dGVycywgc28gdGVjaG5pY2FsbHkgdGhhdCBjb3JyZWN0LCBidXQgaWYgdGhlIHdob2xlIGJ1aWxkaW5nIGRvZXNuIGhhdmUgaW50ZXJuZXQsIGl0IGFuIElTUCBpc3N1ZS4gUG9vciBsYWR5IHRob3VnaHQgdGhlIHBob25lcyBsaXRlcmFsbHkgcHJvdmlkZWQgaW50ZXJuZXQgYW5kIHRob3VnaHQgdGhhdCB3ZSB3ZXJlIGhlciBJU1AuCktleSBXb3Jkc1doZW4geW91IGhhdmUgcHJvc3RhdGUgY2FuY2VyIHN1cmdlcnkgb3IgcmFkaWF0aW9uIHRoZXJhcHkgdGhlIG11c2NsZXMgdGhhdCBoZWxwIHlvdSBjb250cm9sIHlvdXIgdXJpbmUgZmxvdyBtYXkgYmUgd2Vha2VuZWQuIFdoZW4gdGhpcyBoYXBwZW5zIHlvdSBtYXkgaGF2ZSBpbmNvbnRpbmVuY2UuIEluY29udGluZW5jZSBpcyB3aGVuIHlvdSBsZWFrIG9yIHBhc3MgdXJpbmUgd2hlbiB5b3UgZG8gbm90IHdhbnQgdG8uIFRoaXMgaXMgYSB2ZXJ5IGNvbW1vbiBzaWRlIGVmZmVjdCBvciB1bndhbnRlZCBjaGFuZ2Ugb2YgcHJvc3RhdGUgY2FuY2VyIHRyZWF0bWVudC4gVGhlIGdvb2QgbmV3cyBpcyB0aGF0IHRoZXJlIGlzIGEgc2ltcGxlIGV4ZXJjaXNlLCBjYWxsZWQgYSBLZWdlbCAoS2V5Z3VsKSBleGVyY2lzZSwgeW91IGNhbiBkbyB0byBoZWxwIHN0cmVuZ3RoZW4geW91ciBtdXNjbGVzLiBUaGlzIGV4ZXJjaXNlIHdpbGwgaGVscCB5b3UgaGF2ZSBtb3JlIGNvbnRyb2wgb3ZlciB5b3VyIHVyaW5lIGZsb3cgYWZ0ZXIgeW91ciBwcm9zdGF0ZSBjYW5jZXIgdHJlYXRtZW50LiBZb3Ugd2lsbCBsZWFybjoKSSdtIHNwZWNpZmljYWxseSB0YWxraW5nIGFib3V0IHRoZSBwbGFjZXMgSSd2ZSBzZWVuIHdoZXJlIHRoZSBjb2FjaCB3cml0ZXMgYSBzaW5nbGUgc3RyZW5ndGggcHJvZ3JhbSBmb3IgYW4gZW50aXJlIGd5bSwgZGVzcGl0ZSBhIGRvemVuIG9mIHRoZWlyIGNsaWVudHMgbm90IG5lZWRpbmcgaGFsZiBvZiBwcm9ncmFtLi4gCkFmdGVyIGEgeWVhciBvZiB1cHMgYW5kIGRvd25zIHRoZXJlJ3MgZ29vZCBuZXdzLCBhbmQgYmFkIG5ld3NIb3VzaW5nIGluZHVzdHJ5IGxlYWRlcnMgc2F5IE1ldHJvIFZhbmNvdXZlcml0ZXMgY2FuIGV4cGVjdCB0byBzZWUgc2luZ2xlIGZhbWlseSBob21lIHByaWNlcyBjb250aW51ZSB0byBmYWxsIHRoaXMgeWVhciBhbG9uZyB3aXRoIHNvbWUgc29mdGVuaW5nIGluIHRoZSBwcmljZXMgb2YgbmV3IG11bHRpIGZhbWlseSBob21lcy4gQnV0IGlmIHlvdSBhcmUgY291bnRpbmcgb24gdGhlIGhvdXNpbmcgbWFya2V0IHRvIGJlIGhpdCBieSBhIHRydWUgcmVjZXNzaW9uLCB5b3UgbWF5IGVuZCB1cCB3YWl0aW5nIGEgbG9uZywgbG9uZyB0aW1lLiBCaWdnZXN0IGRldmVsb3BlcnMsIHRvbGQgdGhlIHJlY2VudCBVcmJhbiBEZXZlbG9wbWVudCBJbnN0aXR1dGUgYW5udWFsIGZvcmVjYXN0IGx1bmNoZW9uIHRoYXQgdGhleSBleHBlY3QgdGhlIG1hcmtldHMgdG8gdGFrZSBhIGJyZWF0aGVyIGFuZCB0byByZXNldCBkdXJpbmcgdGhlIHllYXIuIApXaGVuIGNhbWUgYmFjaywgSSByZWFsaXplZCB0aGUgaGFuZHMgb24gbWUgbm93IHdlcmVuIHRoZSBzYW1lIGFzIGJlZm9yZS4gVGhlc2UgaGFuZHMgZGlkbiBmZWVsIGxpa2UgYSBxdWFsaWZpZWQgbWFzc2V1c2UuIFNvIHdoZW4gVEhJUyBhdHRlbmRhbnQgbGVmdCB0aGUgcm9vbSB0byBhbnN3ZXIgdGhlIHBob25lIGFnYWluLCBsZWF2aW5nIHRoZSBkb29yIG9wZW4gKCEpLCBJIHNhdCB1cCwgaGFkIHRvIHdhaXQgZm9yIHRoZW0gdG8gcmV0dXJuIHRvIHRlbGwgdGhlbSBJIHdhc24gZ29pbmcgdG8gcHV0IHVwIHdpdGggdGhpcyBhbnkgbG9uZ2VyLiAKSSB3b3VsZCBzYXkgdGhhdCBpZiB5b3UgZGlkIHdhbnQgdG8gc2VlIGhpbSBpbiB0aGUgZnV0dXJlIEkgd291bGRuIGRvIGl0IGFsb25lLiBJIHdvdWxkIHN1Z2dlc3QgaWYgeW91IGFuZCB5b3VyIGZyaWVuZHMgaGF2ZSBjYXJkIG5pZ2h0IHlvdSBkbyB0aGF0IHRvZ2V0aGVyLiBLZWVwIGl0IGZyaWVuZGx5IGFuZCBzcXVhc2ggYW55IGNvbnZlcnNhdGlvbnMgYWJvdXQgeW91IHR3by4gRG9uIGluZHVsZ2UgaGltIGJ5IHRhbGtpbmcgInByaXZhdGVseSIuIFRoaXMgd2lsbCBnaXZlIGhpbSB0aGUgY2hhbmNlIHRvIHRyeSB0byBiZSBmcmllbmRseS9mcmllbmRzIHdpdGhvdXQgdGhlIHByZXNzdXJlIG9mIG9wZW5pbmcgdXAgdG8geW91IHBlcnNvbmFsbHkuClRoaXMgaXMgZnJvbSBCb2IgQnJvd24ncyBDb3Rzd29sZCBHYXJkZW4gRmxvd2VycyAoc2VlIHN1cHBsaWVycyksIHdoaWNoIGhhcyBhIGxhcmdlIHJhbmdlLiBCb2IgYWxzbyBsaXN0cyAnRnJhbmNlcyBWaWN0b3JpYScsIGEgc2xlbmRlciBmbG93ZXJlZCBwb2tlciB0aGF0IG9wZW5zIGdyZWVuIHllbGxvdyBpbiBsYXRlIE9jdG9iZXIgYmVmb3JlIGZsdXNoaW5nIHRvIGFwcmljb3QuIEl0IGNhbiBhcHBhcmVudGx5IGZsb3dlciBpbiBEZWNlbWJlciBpbiBtaWxkIHllYXJzLi4gCk1hc3NhZ2UgeW91ciBoYW5kcyBzbGlnaHRseSB0byBhYnNvcmIgaXQgZGVlcGVyIGludG8geW91ciBza2luLiAKVGhlIHNpZ25pbmcgb2YgQWxvZnQgU3QuIApUaGUgY2xlYXIgY29hdCBpcyByZWFsbHkgbm90aGluZyBtb3JlIHRoYW4gYW4gYWRkaXRpb25hbCBiYXNlIGNvYXQgd2l0aG91dCB0aGUgcGlnbWVudC4gCkkgYnVpbHQgYSByYXRoZXIgY29tcGxpY2F0ZWQgY2FsZW5kYXIgaW4gRXhjZWwgYSB3aGlsZSBiYWNrIGZvciBteSBiaW5hcnkgc3RhciBzeXN0ZW0gY2FsZW5kYXIuIEl0IHRvb2sgYSBmZXcgd2Vla3Mgb2YgZGlnZ2luZyB0aHJvdWdoIEV4Y2VsIGhlbHAgc2l0ZXMsIHRlc3RpbmcsIGFuZCBhZGp1c3RpbmcuIAoiSXQgc2VlbXMgbGlrZSB0aGV5J3JlIGRvaW5nIHRoZSBzdGFuZGFyZCB0aGluZ3MgdGhhdCBjb21wYW55IGRvLCIgS2VyciBzYWlkLiAiSXQncyBiZXR0ZXIgdGhhbiBub3RoaW5nLCBvYnZpb3VzbHksIGJ1dCBJJ20gbm90IHdvd2VkLiIKRXZlcnkgY2FzaW5vIGdhbWUgaGFzIGl0cyBob3VzZSBlZGdlLCB3aGljaCBpcyBhbHNvIGtub3duIGFzIGZhdm91cmFiaWxpdHkgdG93YXJkcyB0aGUgaG91c2UuIFRoZSBoaWdoZXIgdGhlIGhvdXNlIGVkZ2UgaXMsIHRoZSBzbWFsbGVyIHRoZSBjaGFuY2VzIG9mIHdpbm5pbmcgZm9yIHRoZSBwbGF5ZXJzIGFyZS4gClRoZSBQb3R0cnVjayBXZWxsIGJlaW5nIEhlYWx0aCBDZW50ZXIgb2ZmZXJzIENoYWlyIE1hc3NhZ2UgZXZlcnkgVHVlc2RheSBUaHVyc2RheSBmcm9tIDQ6MDAgdG8gNjowMCBQTS4gUGFzc2VzIGNhbiBzb2xlbHkgYmUgcHVyY2hhc2VkIGRheSBvZiBhbmQgYXJlIGlzc3VlZCBvbiBhIHByaW1hcnkgY29tZSBmaXJzdCBzZXJ2ZSBiYXNpcy4gCkl0IGZlZWxzIGxpa2UgYW4gZW5kbGVzcyB0b3J0dXJlLCB0byBiZSBob25lc3QuLiAKQ29wcyB3b3VsZCBuZXZlciBmaW5kIG1lLCB1bmxlc3MgdGhleSBnbyB0aHJvdWdoIGV4dGVuc2l2ZSBjYW1lcmEgc2VjdXJpdHkgd29yayB0aGF0IHdvdWxkIGdvIHdheSBiZXlvbmQgNDggaG91cnMuIApJdCBvbmUgb2YgdGhlIGZldyBwb3NpdGl2ZXMgKGF0IGxlYXN0IGdvaW5nIG9mZiBoaXN0b3JpY2FsIGRhdGEpIHRoYXQgaGUgY291bGQgdGFsayBhYm91dCBhbmQgeWV0IGhlIGNhbiBiZWNhdXNlIGhlIGhhcyBzcGVudCBzbyBtdWNoIHRpbWUgY2xhaW1pbmcgaG93IGJhZCBhIGxhcmdlIHRyYWRlIGRlZmljaXQgaXMuIEhlIGxpZWQgdG8gdGhlIGNvdXJ0IHRvZGF5LiAKSSB3aWxsIGJlY2F1c2Ugd2hlbiBoZSBpcyBvdXQgb2Ygb2ZmaWNlIGhlIGlzIGdvbm5hIGdvIHRvIGphaWwgZm9yIGNvbW1pdHRpbmcgbXVsdGlwbGUgZmVsb25pZXMuIE11bHRpcGxlIHBlb3BsZSBpbiBoaXMgY2FiaW5ldCBoYXZlIGJlZW4gaW5kaWN0ZWQgYW5kIGNvaGVuIGhhcyB0ZXN0aWZpZWQgdG8gdGhlIHN1cHJlbWUgY291cnQsIGFuZCBzZWVtaW5nbHkgaGFzIGV2aWRlbmNlIG9mIERvbmFsZCBjb21taXR0aW5nIGZlbG9uaWVzLiBPbmx5IHJlYXNvbiBoZSBpc250IGluIGphaWwgaXMgd2UgaGF2ZSBhbHJlYWR5IGVzdGFibGlzaGVkIHdlIHdvbnQgYXJyZXN0IHRoZSBzaXR0aW5nIHByZXNpZGVudC4gV2hlbiBoZSBpcyBvdXQgb2Ygb2ZmaWNlIHRob3VnaCwgYWxsIGJldHMgYXJlIG9mZi4gSGUgYmV0dGVyIGhvcGUgdG8gd2luIG90aGVyd2lzZSBoZSBpcyBnb25uYSBiZSBzcGVuZGluZyBoaXMgdGltZSBpbiBqYWlsIGZvciBjaGVhdGluZyB0YXhwYXllcnMgb3V0IG9mIG1pbGxpb25zIG9mIGRvbGxhcnMuCkluIHRoaXMgd2F5LCBib29iIGpvYnMgY2FuIG9mdGVuIHNlZW0gbGlrZSBhIGZyaXZvbG91cyBpbnZlc3RtZW50IG9mIG9uZSB0aW1lIGFuZCBtb25leS4gCkJ1dCBhZnRlciB0aGF0IG91ciBjbGFuIGtpbmQgb2YgYnJva2UgYXBhcnQuIEl0IGhhZCBhbHJlYWR5IHNldCBpbiBlYXJsaWVyLCB3aXRoIGluZmlnaHRpbmcgYW5kIHBlb3BsZSBidWlsZGluZyBzZWdtZW50ZWQgYmFzZXMgaW5zdGVhZCBvZiBhIGJpZyBjbGFuIGJhc2UsIHNvbWUgcGVvcGxlIG1vdmluZyB0byBvdGhlciBnYW1lcyBhbmQgdGhlcmVmb3JlIGhhbmdpbmcgb3V0IG9uIG90aGVyIGRpc2NvcmRzIG1vcmUuCkF0IHRoYXQgdGltZSwgdGhlIGF2ZXJhZ2UgTWV4aWNhbiBjb25zdW1lciB3YXMgYnV5aW5nIDE2MCBsaXRyZXMgb2Ygc29mdCBkcmlua3MgcGVyIGFubnVtLCBjb21wYXJlZCB0byBqdXN0IGJlbG93IDMwIGxpdHJlcyBpbiBWaWV0bmFtLiAKT3BlbiBGYWNlIENoaW5lc2UgUG9rZXIgb25saW5lIHNwaWVsZW4gYmVpIFRvbnlCZXQKQW5vdGhlciBhY2Ugb24gdGhlIHJpdmVyIHRvIGJlYXQgbWUuIFVsdGltYXRlbHksIEkgd2FzIGVsaW1pbmF0ZWQgaW4gMzB0aCBwbGFjZS4gCjIzIHJlYWRzOiJXZSBoYXZlIGFuIGFtYXppbmcgc3RhZmYgcmVhZHkgdG8gbWFzc2FnZSB5b3VyIHN0cmVzcyBhd2F5LiBUYWtlIHRpbWUgZm9yIHlvdXJzZWxmIGFuZCBpbmR1bGdlIGluIHNvZnQgbXVzaWMsIGNhbmRsZWxpZ2h0IGFuZCB0cmFucXVpbGl0eS4gV2UgcHJvdmlkZSBhIHJlbGF4YXRpb24gbWFzc2FnZSBhbmQgYWxzbyBvZmZlciBhIGxpZ2h0IHRvdWNoIGlmIHByZWZlcnJlZC4gCkFub3RoZXIgaW1wb3J0YW50IGNoYW5nZSByZXN1bHRzIGZyb20gdGhlIGZhY3QgdGhhdCBvbmxpbmUgcG9rZXIgcm9vbXMsIGluIHNvbWUgY2FzZXMsIG9mZmVyIG9ubGluZSBwb2tlciBzY2hvb2xzIHRoYXQgdGVhY2ggdGhlIGJhc2ljcyBhbmQgc2lnbmlmaWNhbnRseSBzcGVlZCB1cCB0aGUgbGVhcm5pbmcgY3VydmUgZm9yIG5vdmljZXMuIE1hbnkgb25saW5lIHBva2VyIHJvb21zIGFsc28gcHJvdmlkZSBmcmVlIG1vbmV5IHBsYXkgc28gdGhhdCBwbGF5ZXJzIG1heSBwcmFjdGljZSB0aGVzZSBza2lsbHMgaW4gdmFyaW91cyBwb2tlciBnYW1lcyBhbmQgbGltaXRzIHdpdGhvdXQgdGhlIHJpc2sgb2YgbG9zaW5nIHJlYWwgbW9uZXkuIFVzdWFsbHkgYSB0dXJuIHRpbWVyIHdvbiBzdGFydCBjb3VudGluZyBkb3duIGluIGEgcmVhbCBjYXNpbm8gdW5sZXNzIHRoZSBwZXJzb24gaGFzIGhhZCBhIGxvbmcgdGltZSB0byB0aGluayBhbmQgYW5vdGhlciBwbGF5ZXIgYXQgdGhlIHRhYmxlIGNhbGxzIGZvciB0aGUgdGltZXIgYmVjYXVzZSB0aGUgcGxheWVyIGlzIHRha2luZyB0b28gbG9uZyB0byB0aGluay4KWW91IHdpbGwgYWxzbyBzdHVkeSBjb3JlIGNsaW5pY2FsIHNraWxscyBhbmQgYWNhZGVtaWMgc2tpbGxzIGluIG9yZGVyIHRvIGdhaW4gYW4gdW5kZXJzdGFuZGluZyBvZiBwcm9mZXNzaW9uYWwgcHJhY3RpY2UuLiAKSSB0aGluayB3ZSBzaG91bGQgYWxsIGJlIHdpbGxpbmcgdG8gbG9vayBhdCBhbnkgdHlwZSBvZiBhbHRlcm5hdGl2ZSBtZWFucyB0byBwcm92aWRlIGhlYWx0aCBjYXJlIHRvIGFsbCBBbWVyaWNhbnMuIFRoZSBjdXJyZW50IHN5c3RlbSBpcyBicm9rZW4uLiAKSSBtYXkgYmUgYSBzaW1wbGV0b24sIGJ1dCBJIGZpbmQgaXQgaGFyZCB0byB1bmRlcnN0YW5kIHdoYXQgSSBhbSBlYXRpbmcgaW4gVGhhaWxhbmQsIGFzIG1vc3Qgb2YgdGhlIGRpc2ggbmFtZXMgYXJlIHRvbyBoYXJkIHRvIHByb25vdW5jZS9tZW1vcmlzZS4gU29tZSBJbmRpYW4gc3RyZWV0IGZvb2QgaXMgcHJldHR5IGNvb2wsIGFuZCB0aGVyZSBub3doZXJlIGJldHRlciB0aGFuIE11bWJhaSB0aGFuIHRvIHNhbXBsZSB0aGUgZGVsZWN0YWJsZSB2YWRhIHBhdiEuIApUaGUgbGVzc29uIHRvIGJlIGxlYXJuZWQgaGVyZSBpcyBjbGVhci4gCkRlbSBPcGZlcmtuaWcgc2VpbiBaYWhuYnJzY2h0ZSBncmVpZnQgbW9yZ2VuIGlucyBMZWVyZSB3ZW5uIGVzIGpldHp0IHdlaXRlcmdlaHQgdW5kIGljaCBhdWZkcmVoZSB2b24gRmF1c3R0YW56IGhlciIgR2VncmhsZSBpbiBXYWdlbi4gCkFuZCB0aGUgc2Vjb25kIHRpbWUgSSBwbGF5ZWQsIHRoZSByZXRhaWxlciBoYW5kZWQgbWUgbXkgdGlja2V0cyBhbmQgc2FpZCwgZ29vZCBsdWNrLgoiSXQncyBhIGNoYWxsZW5nZSwiIGhlIHNhaWQsICJhbmQgYW55IHRpbWUgeW91IGNhbiByZXByZXNlbnR5b3VyIGNvdW50cnksIGl0J3MgYSBnb29kIHRoaW5nLiBZb3UncmUgYWx3YXlzIHByb3VkIChvZiB0aGUgcGxheWVycyB0aGUgS25pZ2h0cyBoYXZlIHNlbnQgdG8gdGhlIGV2ZW50KS4gRXZlcnlib2R5IHdhdGNoZXMgdGhhdCB0b3VybmFtZW50IGJlY2F1c2UgaXQncyBzcGVjaWFsIGFuZCBpdCdzIGJlZW4gZ29pbmcgb24gZm9yIHllYXJzLgpOb3QgZXZlcnlvbmUgd2FudHMgbW9yZSBvZiB0aGUgc3Vic3RhbmNlIHRoZXkgdXNpbmcgdGhvdWdoLCBhbmQgbmljb3RpbmUgaXNuIGVzcGVjaWFsbHkga25vd24gZm9yIHJhbXBpbmcgdXAvZGltaW5pc2hpbmcgcmV0dXJucyBsaWtlIGNyYWNrIGlzLiAKQW5kIHNoZSBhbHNvIHdhbnRlZCB0byBrZWVwIGEgY2VydGFpbiBsaWdodFtuZXNzXSB0byB0aGUgZmlsbS4gVGhpcyBpcyBzb21ldGhpbmcgc2hlIGNvbnN0YW50bHkgb3JpZW50ZWQgbXkgcGVyZm9ybWFuY2UgdG8uIApUaGVzZSBhcmUgcG9wdWxhciB3aXRoIHNldmVyYWwgbmFtZXM7IGNhcmQgY292ZXJzLCBjYXJkIGd1YXJkcyBhbmQgYWxzbyBjYXJkIHByb3RlY3RvcnMuIEFsbCB0aGVzZSBhcmUgZGlmZmVyZW50IG5hbWVzIG9mIHRoZSBzYW1lIHByb2R1Y3QuIApTbyBoZXJlIHdlIGFyZSBpbiBjb3VydCwgaHVzaGVkIGFuZCBleHBlY3RhbnQuIApBbHRob3VnaCBHZW9yZ2UgaGFkIGEgcmVwdXRhdGlvbiBhcyBhIHRhY2l0dXJuIGxvbmVyLCBhbGwgaGlzIGFzc29jaWF0ZXMgd291bGQgdGVsbCB5b3UsIHNoZSBjbGFpbXMsIHRoYXQgaGUgd2FzIG5ldmVyIHJlYWxseSBsaWtlIHRoYXQuICJIZSB3YXMgc28gZ2VuZXJvdXMgYW5kIG9wZW4sIHNvIG11Y2ggbW9yZSBwYXRpZW50IHdpdGggcGVvcGxlIHRoYW4gbWUuIApUaGUgY2FyIHNwZWVkcyBvZmYgYW5kIEthdGllIHNoYWtlcyBoZXIgaGVhZC4gClNvbWUgZWNvbm9taXN0cyBoYXZlIHdhcm5lZCB0aGUgcHJldmlvdXMgcmF0ZSBoaWtlcyBtYXkgYWxyZWFkeSBoYXZlIGdvbmUgdG9vIGZhciwgYW5kIHRoZXJlIGNvbmNlcm4gYWJvdXQgdGhlIGltcGFjdCBvbiB0aGUgZWNvbm9teSBpZiBDYW5hZGEgaGlnaGx5IGluZGVidGVkIGhvdXNlaG9sZHMgcGFyZSBiYWNrIHNwZW5kaW5nIHRvIHBheSBkZWJ0IGluc3RlYWQuIFRoZSBjb3VudHJ5IGRlYnQgc2VydmljZSByYXRpbyB0aGUgc2hhcmUgb2YgZGlzcG9zYWJsZSBpbmNvbWUgcmVxdWlyZWQgdG8gcGF5IHByaW5jaXBhbCBhbmQgaW50ZXJlc3Qgb24gb3V0c3RhbmRpbmcgbG9hbnMgcm9zZSB0byAxNC41IHBlciBjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyLCB0aGUgaGlnaGVzdCBzaW5jZSBiZWZvcmUgdGhlIDIwMDggZmluYW5jaWFsIGNyaXNpcywgYWNjb3JkaW5nIHRvIFN0YXRpc3RpY3MgQ2FuYWRhLi4gClRoZSBjb2xsZWN0aXZlIGNhbiBzZXJ2ZSBhIGRlcml2YXRpb25hbCBwdXJwb3NlIGFzIHdlbGwuIEZvciBleGFtcGxlLCB0cmV5b25rYSAic29sZGllciIgL3RyZWpva2EvIGluIHRoZSBjb2xsZWN0aXZlIGlzIHRyZXlvbmthdG9uLCAvdHJlam9rYXRvLyB3aGljaCBjYW4gbWVhbiBib3RoICJhIGdyb3VwIG9mIHNvbGRpZXJzIiBhbmQgIm1pbGl0YXJ5IHVuaXQiICAgd2hlbiBpdCBtZWFucyAibWlsaXRhcnkgdW5pdCwiIGl0IGNhbiBiZSBkZWNsaW5lZCBsaWtlIGl0cyBvd24gbm91biwgc3VjaCBhcyB0cmV5b25rYXRvbnRhcGggL3RyZWpva2F0b3RhcC8gIm1pbGl0YXJ5IHVuaXRzIikuUHJvbm91bnMgYWxzbyBtYXJrIGZvciB0aGVzZSBkaXN0aW5jdGlvbnMgKGFsdGhvdWdoIG9mdGVuIHRoZSBjb2xsZWN0aXZlL3BsdXJhbCBpcyBhbiBpbmNsdXNpdmUvZXhjbHVzaXZlIGluIGNvbGxvcXVpYWwgc3BlZWNoKSwgYnV0IHVzZSBkaWZmZXJlbnQgc3RlbXMgICBuYSwgYXVzLCB5aSBhcmUgdGhlIHNpbmd1bGFyLCBuIGF1IGRhbiBhcmUgY29sbGVjdGl2ZSwgbmFwIGF1YmlyIHNoZW4gYXJlIHBsdXJhbC4gCk91ciBhZHZlbnR1cmVycyBjcm9zcyBwYXRocyBvbiB0aGVpciB3YXkgdG8gdGhlIHNtYWxsIHRvd24gb2YgQ29wcGVydG9uIHdoZXJlIHRoZXkgYWxsIHBsYW4gb24gZmluZGluZyBhIHNlZXIgbmFtZWQgSHVnby4gVGhleSBmaW5kIHRoZSB0b3duIHVuZGVyIGF0dGFjayBmcm9tIGEgY3VsdCBvZiBrcmFrZW4gd29yc2hpcHBlcnMgYmVpbmcgbGVkIGJ5IGEgYm9uZSBuYWdhIG5hbWVkIFNhbCB0aGF0IHdhcyBvbmNlIG9uZSBvZiB0aGUga3Jha2VuIGdlbmVyYWxzLiAKTGEgcHJlbWlyZSBlc3QgbGEgc3BlY3RhY3VsYWlyZSBuYXZldCBkZXMgaG9tbWVzIHBvbGl0aXF1ZXMgZGUgZHJvaXRlIGV0IGRlIGdhdWNoZSBxdWksIGNlcyBkZXJuaWVycyBqb3VycywgZm9udCBkZSBiZWxsZXMgcGhyYXNlcyBzdXIgbCdhbW91ciBxdWUgbGUgcGV1cGxlIGZyYW5haXMgcG9ydGUgIFNpbW9uZSBWZWlsLCBzdXIgbCdpbW1lbnNlIHBvcHVsYXJpdCBkb250IGNlbGxlIGNpIGEgam91aSBkZSBzb24gdml2YW50LCBkb250IGVsbGUgam91aXQgZGVwdWlzIHNhIG1vcnQuIApQcm9wZXIgbWFpbnRlbmFuY2UgaXMgZWFzeSwgYW5kIG5vdCBleHBlbnNpdmUuSSBjYW4gZ2l2ZSBhbnkgc29saWQgZXhhbXBsZXMsIGJ1dCBsb29rIGZvciBzaWRlIGJ5IHNpZGVzIG9mIHByb21pbmVudCB0ZXh0cy4gSXQgbWF5IGhlbHAgaW1wcm92ZSB5b3VyIHZvY2FidWxhcnkgc29tZS4gCkkgc2VlIHdoYXQgeW91IHNheWluZywgYW5kIGl0IHdvdWxkIGJlIHRydWUgaWYgeW91IGtuZXcgZm9yIHN1cmUgYm90aCBwbGF5ZXJzIHdlcmUgY2FsbGluZyB3aWRlIGFuZCB3b3VsZCBmb2xkIGEgbG90IHBvc3QgZmxvcC4gCkhpcyBvdmVybmlnaHQgY291bnRyeSBibG9uZGUsIGZvciBleGFtcGxlLCByZWNvbW1lbmRzIGJ1bGsgZmVybWVudGluZyBmb3IgMTIgMTUgaG91cnMsIGFuZCBJIGZvdW5kIHRoZSBzd2VldCBzcG90IGZvciBteSBraXRjaGVuIHRlbmRzIHRvIGJlIGNsb3NlciB0byA5IDEwLi4gClNvbWUgb2YgdGhlIHRoaW5ncyBpdCBnYXZlIG1lIGFyZSBnb29kIGJ1dCBzb21lLCBub3Qgc28gbXVjaC4gSSBnbGFkIEkgbGVmdCB3aGVuIEkgZGlkIGFuZCBJIGRvbiByZWdyZXQgam9pbmluZyBvciBsZWF2aW5nLgpUaGUgU292aWV0IFVuaW9uIGNvbGxlY3RlZCBhYm91dCAzMDAgZ3JhbXMgb2Ygcm9jaywgb3IgYWJvdXQgdHdvIHRoaXJkcyBvZiBhIHBvdW5kLCBkdXJpbmcgdW5tYW5uZWQgcHJvYmVzIHRvIHRoZSBtb29uLiBEaXN0cmlidXRlZCAyNzAgbW9vbiByb2NrIHNhbXBsZXMgaW4gdGhlIDE5NzBzIGFzIGEgZ29vZHdpbGwgZ2VzdHVyZSB0byBjb3VudHJpZXMgYXJvdW5kIHRoZSB3b3JsZC4gCkVsbGVzIGRvbm5lcm9udCBuYWlzc2FuY2UgIGRlcyBnbGFuZHMgYnJpbGxhbnRzIGRvdHMgZCBsb25nIHBkb25jdWxlLCBncm91cHMgcGFyIGRldXggIGNpbnEgbGUgbG9uZyBkZXMgcmFtZWF1eC4gClRoZSBzdXBlciByaWNoIHdhbnQgaGVyIGRlYWQgYmVjYXVzZSBzaGUgcmVwcmVzZW50cyBhIHBvdGVudGlhbCBmcmVzaCB3YXZlIG9mIHRoZSBmdXR1cmUuIFRoZXNlIHN1cGVyIHJpY2ggZnVja3Mgd291bGRuIGV2ZW4gbm90aWNlIGlmIGhhbGYgdGhlaXIgd2VhbHRoIHZhbmlzaGVkIG92ZXIgbmlnaHQuIFRoZXkgc2l0IG9uIGl0IGFuZCBpdCBodXJ0cyB0aGUgZWNvbm9teSwgdGhlbiB0aGV5IHRyeSB0byBnZXQgZXZlbiBtb3JlIGFuZCBsZWF2ZSBsZXNzIGZvciB0aGUgd29ya2luZyBjbGFzcyBhbmQgbWlkZGxlLiAKQW5vdGhlciBhY3F1YWludGFuY2Ugb2YgbWluZSwgbGV0J3MgY2FsbCBoaW0gQWJyYWhhbSwgZG9lc24ndCBoYXZlIHR3byBmaW5nZXJzIHRoYXQgcG9pbnQgaW4gdGhlIHNhbWUgZGlyZWN0aW9uIGJlY2F1c2UgdGhleSd2ZSBlYWNoIGJlZW4gYnJva2VuIGJ5IHNvbWUgb2YgaGlzIG1vcmUgcGVyY2VwdGl2ZSBhbmQgdmlvbGVudCBtYXJrcy4gSSBsYXN0IHNwb2tlIHdpdGggaGltIGluIDIwMTEsIGp1c3QgYWZ0ZXIgQ2hyaXN0bWFzLiBIZSB3YXMgaW4gdGhlIGhvc3BpdGFsIHdpdGggYnJva2VuIHJpYnMgYW5kIGEgc2hhdHRlcmVkIGNvbGxhcmJvbmUgYWZ0ZXIgb25lIG9mIGhpcyBjb25zIHdlbnQgd3JvbmcuIEJ1dCBoZSBkaWRuJ3QgcGxhbiB0byBzdG9wLCBiZWNhdXNlIGhlIHdhc24ndCBkb2luZyBpdCBmb3IgdGhlIG1vbmV5IChoZSB3YXMgYWN0dWFsbHkgc29ydGEgcmljaCkuIEhlIHdhcyBkb2luZyBpdCBmb3IgdGhlIHRocmlsbC4gRm9yIGV4YW1wbGUsIGV2ZXJ5b25lIHVuZGVyc3RhbmRzIHRoYXQgeW91IG5ldmVyIGdyYWIgcGVvcGxlIGJ5IHRoZSBoYW5kLCBldmVuIGluIGEgcGxheWZ1bCBtYW5uZXIsIGJlY2F1c2UgdGhhdCdzIGEgZ3JlYXQgd2F5IHRvIGdldCBhIGJsYWNrIGV5ZSBhbmQgcnVpbiBidXNpbmVzcyBmb3IgZXZlcnlvbmUgZWxzZS4gQW5kIHdobyBlbmZvcmNlcyB0aG9zZSBydWxlcz8gV2h5LCB5b3VyIGZlbGxvdyBwZXJmb3JtZXJzLCB3aG8gaGF2ZSB0YWtlbiBpdCB1cG9uIHRoZW1zZWx2ZXMgdG8gbW9uaXRvciB5b3VyIGJlaGF2aW9yLgpUaGUgaW5zZXJ0aW9uIGlzIHF1aWNrIGFuZCBwYWlubGVzcywgaXQncyB0aGUgbnVtYmluZyBzaG90IHRoYXQncyB0aGUgd29yc3QuIEl0J3MgbGlrZSBhIHJlYWwgYmlnIGVsb25nYXRlZCBwaW5jaCBhbmQgdGhlbiB0aGV5IHdhaXQgbGlrZSBhIG1pbnV0ZSBmb3IgdGhlIHBhcnQgb2YgeW91IGFybSB0byBudW1iIGFuZCB0aGVuIHRoZSBOZXhwbGFub24gZ29lcyBpbi4gVGhleSB1c2UgdGhpcyBpbnNlcnRpbmcgZGV2aWNlIHRoYXQgY29tZXMgd2l0aCB0aGUgaW1wbGFudCB0byBlbnN1cmUgaXQgbWFrZXMgaXQgZnVsbHkgaW50byB5b3VyIGFybS4gCkZvciBzdHJlYW1pbmcgSSB1c2UgYSB0ZXJhZGVrIGN1YmUgZW5jb2RlciB3aGljaCBjYW4gc3RyZWFtIHRvIHRoZSBzZXJ2aWNlIG9mIHlvdXIgY2hvaWNlLiBOb3Qgc3VyZSB3aGF0IHRoZSBvdGhlciBwcm9kdWN0cyBhcmUgaW4gdGhpcyBzcGFjZSBidXQgaXQgd29ya3MgZm9yIG1lLgpIZXJlLCB0aGUgMTAxc3QsIDEwM3JkIDEwNHRoc29uZ3MgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcywgd2hpbGUgdGhlIDEwMm5kIGNhbiBiZSBmb3VuZCBvbnlvdXR1YmUuIApJbiBBbWVyaWNhLCBmYWN0b3JpZXMgc3dpdGNoZWQgb3ZlciB0byBtYWtpbmcgbXVuaXRpb25zIGVhcmx5IGluIHRoZSB3YXIgYmVjYXVzZSB0aGUgbWlsaXRhcnkgd2FzIGJ1eWluZyB0aG9zZSBtdW5pdGlvbnMgYXQgYXR0cmFjdGl2ZSBwcmljZXMuIFdoZW4gdGhlIGdvdmVybm1lbnQgd2luZHMgZG93biBtaWxpdGFyeSBwcm9jdXJlbWVudCBhdCB0aGUgZW5kIG9mIGEgd29ybGQgd2FyLCB0aGVyZSBhcmUgc3Ryb25nIGZpbmFuY2lhbCBpbmNlbnRpdmVzIGZvciBmYWN0b3JpZXMgdG8gc3dpdGNoIGJhY2sgdG8gcGVhY2V0aW1lIHByb2R1Y3Rpb24uIApTdWRkZW5seSwgdGhlcmUgd2FzIGEgbmV3IGdpcmwgYmVpbmcgYWR2ZXJ0aXNlZCBhcyBHRkUuIEkgZm91bmQgdGhhdCBHRkUgc3Rvb2QgZm9yIEdpcmxmcmllbmQgRXhwZXJpZW5jZSBhbmQgdGhhdCB1c3VhbGx5IG1lYW50IEJCQkogd2FzIHByb3ZpZGVkLiBJIHdlbnQgdG8gc2VlIHRoaXMgZ2lybCwgYW5kIHllcywgc2hlIGdhdmUgbWUgYSBCQkJKLiBUaGlzIGdpcmwgd2FzIGJsYWNrIGhhaXJlZCBhbmQgcGFsZSBza2lubmVkLCBhbmQgSSBkaWQgbm90IGluaXRpYWxseSBmaW5kIGhlciB0aGF0IGF0dHJhY3RpdmUuIEhvd2V2ZXIsIHNoZSB3YXMgdmVyeSBzd2VldCBhbmQgSSBiZWdhbiB0byBzZWUgaGVyIG9uIGEgd2Vla2x5IGJhc2lzLiBFdmVudHVhbGx5IHdlIGV4Y2hhbmdlZCBudW1iZXJzLgpBZnRlciBub3Qgd2FudGluZyB0byBiZSBiYXB0aXplZCwgdHJ5aW5nIG15IGJlc3QgdG8gYmUgYSBnb29kIG1vcm1vbiBib3ksIGZvcmNlZCB0byBnbyB0byBjaHVyY2ggdW50aWwgMTggd2hlbiBJIHdhcyB0aGVuIGtpY2tlZCBvdXQgZm9yIGJlaW5nIGEgImJhZCBpbmZsdWVuY2UsIiBJIHR1cm5lZCB0byBib2R5YnVpbGRpbmcgYW5kIHRoZSBvdXRkb29ycywgbm93IEkgZW5qb3kgZXZlcnkgU3VuZGF5LiBJIGFtIHRyYWluZWQgaW4gdGhlIENvbW1pdG1lbnQgUGF0dGVybiBhbmQgSSB3YXMgdGhlIHRvcCBjb252ZXJ0ZXIgaW4gdGhlIGVudGlyZSBDaHVyY2guIFlvdSBhcmUgbm90aGluZyB0byBtZSBidXQganVzdCBhbm90aGVyIHVuZmFpdGhmdWwgc2VydmFudC4gCkhlcnNoZXkgaXMgYSBzaGl0IGNvbXBhbnkgYW5kIGV2ZXJ5IGNyaXRpY2lzbSB0aGV5IGdldCBpcyBvbiB0aGUgYmFzaXMgb2YgYSBzaXR1YXRpb24gdGhhdCB3YXMgc2VsZiBjcmVhdGVkLiBOb2JvZHkgZm9yY2VkIHRoZW0gdG8gYmUgc2hpdHR5IGFuZCBjdXQgY29ybmVycywgdGhleSBncmFiYmVkIHRoYXQgdG9yY2ggYnkgY2hvaWNlLgpCdXkgaGVyIGNsb3RoZXMuIFB1cmNoYXNlIGEgc2V4eSBkcmVzcyB0aGF0IHlvdXIgd2lmZSB3aWxsIGxvdmUuIFlvdSBjYW4gY2hvb3NlIGEgc2V4eSByZWQgY29sb3Igb3IgeW91IGNhbiBhbHNvIGJ1eSBhIGxpdHRsZSBibGFjayBkcmVzcy4gQ2hvb3NpbmcgdGhlIHJpZ2h0IGRyZXNzIGZvciB5b3VyIHdpZmUgY2FuIG1ha2UgaGVyIGZlZWwgZXZlbiBzZXhpZXIgdGhhbiBzaGUgYWxyZWFkeSBpcy4gSnVzdCBtYWtlIHN1cmUgdGhhdCB5b3Uga25vdyB0aGUgcGVyc29uYWwgc3R5bGUgb2YgeW91ciB3aWZlIHNvIHRoYXQgeW91IGNhbiBnZXQgdGhlIHBlcmZlY3QgZHJlc3MuIFlvdSBjYW4gYWxzbyBidXkgaGVyIGpld2VscnkgdG8gZ28gd2l0aCB0aGUgc2V4eSBkcmVzcyB0aGF0IHlvdSBjaG9vc2UuIEZvciBqZXdlbHJ5LCBub3RoaW5nIGlzIHNleGllciB0aGFuIGRpYW1vbmRzLgpCdW5jaGVzIG9mIHRyaWNrcyBvdXQgdGhlcmUgdG8gbWFrZSB5b3VyIGxpZmUgZWFzaWVyIHdoZW4gcGFpbnRpbmcuIEkganVzdCB0aHJvdyBpbiByZWFsIHF1aWNrIHRoYXQgaGlnaCBxdWFsaXR5IHBhaW50cyBsYXN0IGxvbmdlciwgYXJlIHdhc2hhYmxlLCBhbmQgZ28gb24gdGhlIHdhbGxzIGEgd2hvbGUgaGVjayBvZiBhIGxvdCBlYXNpZXIgdGhhbiBjaGVhcCBwYWludC4gWW91IGRvIGdldCB3aGF0IHlvdSBwYXkgZm9yLgpJdCBkZW1vbnN0cmF0ZXMgYSBjb21wbGV0ZSBsYWNrIG9mIHBlcnNwZWN0aXZlICAgb25lIHRoYXQgSSB3b3VsZCBleHBlY3QgZnJvbSBhIDE1IHllYXIgb2xkIHdobyB3ZW50IHRvIEV1cm9wZSBmb3IgMiB3ZWVrcyB3aXRoIHRoZWlyIHBhcmVudHMgYW5kIHRoaW5rcyB0aGV5IHNlZW4gdGhlIHdvcmxkLCBub3QgZnJvbSBzb21lb25lIHdobyBpcyBwcmVwYXJlZCB0byBlbmdhZ2Ugd2l0aCB0aGUgcmVhbGl0aWVzIG9mIGxlYXZpbmcgdGhlIFVuaXRlZCBTdGF0ZXMgZm9yIHJlYWwuIApJIHN0aWxsIGhhdmUgc2hpdCBvbiBteSByZXBvcnQgdGhhdCBJIHJlZ3JldCBmcm9tIHRoYXQgdGltZS4uIApJbiB0ZXJtcyBvZiB0aW1pbmcsIGFyb3VuZCA0LjggS00oMyBtaWxlcykgcGVyIGhvdXIgaXMgdHlwaWNhbGx5IGEgc2FmZSBlc3RpbWF0ZSBmb3IgdGhlIG1vdmluZyBhdmVyYWdlIG9mIGEgZ3JvdXAgb2YgcmVhc29uYWJseSBleHBlcmllbmNlZCBwYWRkbGVycy4gCklmIHNwYWNlIGlzIGF0IGEgcHJlbWl1bSBpbiB5b3VyIGhvbWUsIHRoaXMgbWlnaHQgYmUgYW4gaW1wb3J0YW50IHRoaW5nIGZvciB5b3UgdG8ga2VlcCBpbiBtaW5kLi4gCkF2b2lkIGNvbXBhbmllcyB0aGF0IHJlcXVpcmUgeW91IHRvIHN1Ym1pdCB5b3VyIG93biBpbWFnZSB1bmxlc3MgeW91IGFyZSBnb29kIHdpdGggZ3JhcGhpY3MgKGFkb2JlIGlsbHVzdHJhdG9yKS4gKEZ1bGwgQW5zd2VyKS4gCkFzIGRvZXMgYXJ0LiBMb3RzIG9mIGl0LiBBbmQgZXZlcnkgcGllY2Ugb2YgaXQgdGVsbHMgYSBzdG9yeSwgZnJvbSB0aGUgb3JpZ2luIG11cmFsIHRvIGEgbmVvbiBzaWduIHRoYXQgaGFuZ3MgYWJvdmUgYSBub29rIGJ5IG9uZSBvZiB0aGUgYmF0aHJvb20gYXJlYXMuIApDTEFZVE9OLCBOWSBNYXJ5IEJhc3RpYW4sIDgwLCBwYXNzZWQgYXdheSBTYXR1cmRheSwgU2VwdC4gMjksIGF0IGhlciBob21lIGluIENsYXl0b24gc3Vycm91bmRlZCBieSBoZXIgZmFtaWx5LiBUdWVzZGF5LCBPY3QuIDIsIGF0IEN1bW1pbmdzIEZ1bmVyYWwgU2VydmljZSwgSW5jLiwgQ2xheXRvbi4gV2VkbmVzZGF5LCBPY3QuIDMsIGF0dGhlZnVuZXJhbGhvbWUgd2l0aHRoZWZ1bmVyYWwgTWFzcyBkaXJlY3RseWZvbGxvd2luZ2F0IFN0LiBmb2xsb3dlZCBieSBidXJpYWwgaW4gU3QuIE1hcnkncyBDZW1ldGVyeS4KVGhlIG1hbGUgd2FzIHNlY3Rpb25lZCBpbnRvIDEsODcxIG9uZSBtaWxsaW1ldGVyIHRoaWNrIHNsaWNlczsgdGhlIGZlbWFsZSB3YXMgc2VjdGlvbmVkIGludG8gb3ZlciA1LDAwMCBzbGljZXMsIG9uZSB0aGlyZCBvZiBhIG1pbGxpbWV0ZXIgaW4gdGhpY2tuZXNzLiBUaGUgZnJvemVuIHNlY3Rpb25zIHdlcmUgcGhvdG9ncmFwaGVkIGFuZCBkaWdpdGl6ZWQgdG8gYSBjb21wdXRlciwgY3JlYXRpbmcgdGhlIHdvcmxkIGZpcnN0IHZpcnR1YWwgY2FkYXZlcnMsIGR1YmJlZCB0aGUgSHVtYW4gTWFsZSwgYW5kIHRoZSBIdW1hbiBGZW1hbGUuIApJbiB5b3UncmUgYSB0YWxlbnRlZCBlbm91Z2ggcGxheWVyLCB5b3UgbWF5IGJlIGFibGUgdG8gZmluZCBzb21lb25lIGVsc2UgdG8gZmluYW5jZSB5b3UgaW4gZXhjaGFuZ2UgZm9yIGEgcG9ydGlvbiBvZiB5b3VyIHdpbm5pbmdzLls1XQpNeSBmZWVsaW5nIGlzIHRoYXQgaXQgc2hvdWxkIGJlIHJlZ3VsYXRlZCBhbmQgdGF4ZWQuIApQZXJpb2QuIApWYW5jb3V2ZXIgbWFuIGNoYXJnZWQgd2l0aCBzdGVhbGluZyB3aWdzIG1lYW50IGZvciBraWRzIHdpdGggY2FuY2VyCjIwMTcgMDEgMjUgQW5ub3VuY2VtZW50OiBIRUxQIFdBTlRFRCAgIEFVRElPVklTVUFMIFZPTFVOVEVFUlMgRk9SIFRIRSBZT1VUVUJFIFRFQU0geW91IGxpa2UgdG8gaGFuZyBhcm91bmQgb24gWW91VHViZSwgd2F0Y2hpbmcgY2F0cyBhbmQgbGVhcm5pbmcgU3R1ZmY/IEFyZSB5b3Ugc3Vic2NyaWJlZCB0byBZb3VUdWJlIGNoYW5uZWxzIGxpa2UgJ1RvZGF5IEkgRm91bmQgT3V0Jz8gRG8geW91IGhhdmUgYSBjb21wdXRlciAoYW5kIG1heWJlIGEgbWljcm9waG9uZSk/IENhbiB5b3Ugd29yayB3ZWxsIHdpdGggb3RoZXJzPyBzbywgd2UgbmVlZCB5b3VyIGhlbHAhIFdlIHdhbnQgdG8gbWFrZSB0aGUgaDJnMiBZb3VUdWJlIGNoYW5uZWwgdGhlIGdvIHRvIHBsYWNlIGZvciBGdW4gRmFjdHMgZnJvbSB0aGUgRWRpdGVkIEd1aWRlLiAKSSB3b25kZXIgd2hhdCBpdCB3aWxsIGJlIGxpa2UgYXQgdGhlIGVuZCBvZiBteSBsaWZlLiAKSSBvbmx5IGF0dGVtcHRlZC9jbGVhcmVkIEx2LiAwOCB0cmFja3MuIChUb28gc2NhcmVkIHRvIGdvIGhpZ2hlcikKUGVvcGxlIHRydXN0IHVzLCBpdCBpcyBhbiBpbnRpbWF0ZSBzZXR0aW5nLCBhbmQgaGF2aW5nIHNleHVhbCBpbnRlbnQgaXMganVzdCBjcmVlcHkuIAp7IHBob25lIH0KTm90IGxvbmcgYWdvLCBUb3JvbnRvIGhhZCBhIGNvbnRlbnRpb3VzIGRlYmF0ZSBhYm91dCB0aGUgZnV0dXJlIG9mIHRoZSBHYXJkaW5lciBFeHByZXNzd2F5LiAKVGhhdCB0aGUgaXNzdWUgYXQgc3Rha2UgaGVyZSwgbm90IGNvc3QuIFRoZSBsaWZ0IHdvdWxkIGJlIHN1YnNpZGl6ZWQuIFRoZXkgd291bGQgcmF0aGVyIHNuYXAgYW5vdGhlciBodW1hbiBiZWluZyBzcGluZSB0aGFuIGZlZWwgb25lIGluc3RhbnQgb2YgdW5wbGVhc2FudG5lc3MuLiAKTm93IHRoZSBlbmVteSBhaSBpcyBub3QgdmVyeSBpbnRlbGxpZ2VudCBhbmQgd2lsbCBhdHRhY2sgd2hvbWV2ZXIgaXQgc2VlcyBmaXJzdC9pcyBjbG9zZXN0LiAKSW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZSBUcmFmZmlja2luZyBWaWN0aW1zIFByb3RlY3Rpb24gQWN0IG9mIDIwMDAgKFRWUEEpLCBhcyBhbWVuZGVkIGJ5IHRoZSBKdXN0aWNlIGZvciBWaWN0aW1zIG9mIFRyYWZmaWNraW5nIEFjdCBvZiAyMDE1IChKVlRBKSwgZGVmaW5lcyBzZXggdHJhZmZpY2tpbmcgYXMgInJlY3J1aXRpbmcsIGhhcmJvcmluZywgdHJhbnNwb3J0aW5nLCBwcm92aWRpbmcsIG9idGFpbmluZywgcGF0cm9uaXppbmcsIG9yIHNvbGljaXRpbmcgb2YgYW4gaW5kaXZpZHVhbCB0aHJvdWdoIHRoZSBtZWFucyBvZiBmb3JjZSwgZnJhdWQsIG9yIGNvZXJjaW9uIGZvciB0aGUgcHVycG9zZSBvZiBjb21tZXJjaWFsIHNleCIuIEhvd2V2ZXIsIGl0IGlzIG5vdCBuZWNlc3NhcnkgdG8gZGVtb25zdHJhdGUgZm9yY2UsIGZyYXVkLCBvciBjb2VyY2lvbiBpbiBzZXggdHJhZmZpY2tpbmcgY2FzZXMgaW52b2x2aW5nIGNoaWxkcmVuIHVuZGVyIHRoZSBhZ2Ugb2YgMTguIDcxMDIpLiAKTXkgcG9zdCBBbmFsIFNleCBmcm9tIGEgRmVtYWxlIFBlcnNwZWN0aXZlIGRlc2NyaWJlcyB3aGF0IGFuYWwgc2V4IGZlZWxzIGxpa2UgZm9yIGEgd29tYW4uIElmIHlvdSB3YW50IHRvIHRyeSBhbmFsIHNleCB3aXRoIHlvdXIgd2lmZSBvciBnaXJsZnJpZW5kLCBidXQgYXJlIHVuY2VydGFpbiBvZiBoZXIgcmVhY3Rpb24sIHVzZSB0aGUgYXBwcm9hY2ggSSByZWNvbW1lbmQgaW4gSG93IHRvIE1ha2UgSGVyIFdhbnQgQW5hbCBTZXguIApQb2xpY2UgbW9uaXRvciBvbmxpbmUgbWFya2V0IHBsYWNlcyBpbmNsdWRpbmcgZUJheSBhbmQgR3VtdHJlZSwgYW5kIGF0dGVuZCBhdWN0aW9ucyB0byB0cmFjayB0aGUgc2FsZSBhbmQgcHVyY2hhc2Ugb2YgbWFjaGluZXMuIApJZiB5b3UgYXJlIG9uIGEgTWFjLCBob2xkIGRvd24gc2hpZnQsIHRoZSBvcHRpb24ga2V5IGFuZCB0aGVuIHRoZSBhcG9zdHJvcGhlIG9yIHF1b3RhdGlvbiBtYXJrIGtleSAnIGFuZCB0aGVuIHJlbGVhc2UuIApCb3N0b24gR2xvYmUgTWVkaWEgUGFydG5lcnMgaXMgbWFkZSB1cCBvZiBkaWZmZXJlbnQgbGVnYWwgZW50aXRpZXMsIGluY2x1ZGluZyBpdHMgYWZmaWxpYXRlcyBhbmQgc3Vic2lkaWFyaWVzLiBXaGVuIHdlIG1lbnRpb24gR2xvYmUgb3IgaW4gdGhpcyBwcml2YWN5IG5vdGljZSwgd2UgYXJlIHJlZmVycmluZyB0byB0aGUgcmVsZXZhbnQgYWZmaWxpYXRlIG9yIHN1YnNpZGlhcnkgb2YgQm9zdG9uIEdsb2JlIE1lZGlhIFBhcnRuZXJzIHJlc3BvbnNpYmxlIGZvciBwcm9jZXNzaW5nIHlvdXIgaW5mb3JtYXRpb24uIApJIHJlcG9zdGVkIGEgYnVuY2ggb2YgaGlzIGNvbnRlbnQgYWNyb3NzIG15IHBsYXRmb3Jtcy4gCkNlcnRhaW4gY29uZGl0aW9ucyBhcHBsaWVkIHRvIGdyYW50IHJlY2lwaWVudHMuIApEdGlldHplICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCklmIHRoZXkgaGFkbiBoYXZlIHNhaWQgYW55dGhpbmcgdGhleSB3ZXJlIGdvaW5nIHRvIGJlIGxldCBnby4gCkRlciBiZXJ3aWVnZW5kZSBUZWlsIGRlciBCYW5hbmVuIHdpcmQgbm9jaCBpbiBrb252ZW50aW9uZWxsZXIgTGFuZHdpcnRzY2hhZnQgYW5nZWJhdXQsIGVyc3QgbmFjaCB1bmQgbmFjaCBzdGVsbGVuIEJhbmFuZW4gRmluY2FzIGF1ZiBiaW9sb2dpc2NoZSBQcm9kdWt0aW9uIHVtLiBTY2hvbiBsYW5nZSB3b2xsdGUgaWNoIG1pciBlaW5tYWwgZGllIFByb2R1a3Rpb24gdW5kIFZlcmFyYmVpdHVuZyB2b24gQmFuYW5lbiBhdWYgTGEgUGFsbWEgYW5zZWhlbiB1bmQgSm9yZ2UsIGVpbiBQYWxtZXJvLCBkZXIgMTMgSmFocmUgaW4gQmVybGluIGdlbGVidCB1bmQgZG9ydCBQb2xpdGlrICB1bmQgV2lydHNjaGFmdHN3aXNzZW5zY2hhZnRlbiBzdHVkaWVydCBoYXQsIGJpZXRldCBGaHJ1bmdlbiBhdWYgZGVyIEJhbmFuZW4gRmluY2EgYW4sIGRpZSBlciBpbSBOZWJlbmVyd2VyYiBiZXRyZWlidCB1bmQgZGllIGVyIGF1ZiBiaW9sb2dpc2NoZW4gQW5iYXUgdW1zdGVsbHQuIApZb3UgY2FuIGVuam95IHRoZSB0cmFucXVpbGl0eSBvZiB0aGUgb2NlYW4gYnJlZXplcywgd2hpbGUgaHVtcGJhY2sgd2hhbGVzIGJyZWFrIHRoZSBvY2VhbiBzdXJmYWNlLiBJbiB0aGUgc3VtbWVyLCB0aGUgd2lsZCBzdXJmIGNhbG1zIGRvd24gdG8gY3JlYXRlIGludGltYXRlLCBzZWNsdWRlZCBiZWFjaGVzIHdoZXJlIHNub3JrZWxpbmcgdGFrZXMgdGhlIHBsYWNlIG9mIHN1cmZpbmcuIApMaXR0bGUgaGFzIGNvbmZpZGVuY2UgaW4gc3BhZGVzLCBhbmQgZm9yIGdvb2QgcmVhc29uLiBIZXIgc29uZ3MgaGF2ZSBiZWVuIGFsbCBvdmVyIFRWOiAiTkNJUywiICJDU0ksIiAiR2hvc3QgV2hpc3BlcmVyLCIgIk51bWIzcnMsIiAiVGhlIEdvb2QKSSBkb24ga25vdyBob3cgbXVjaCBvZiB0aGUgYm9vayBJIGJlIGRlZGljYXRpbmcgdG8gTW9ybW9uaXNtIGFzIGl0IG5vdCBnb3QgdGhlIHN0cmFuZ2xlaG9sZCBoZXJlIHRoYXQgaXQgZG9lcyBpbiB0aGUgVVMsIGJ1dCBJIHdvdWxkIGxpa2UgdG8gaW5jbHVkZSBpdCBzb21ld2hlcmUuIEkgYWN0dWFsbHkgd3JpdHRlbiB0byBXYXJyZW4gSmVmZnMgaW4gcHJpc29uIHRvIHNlZSBpZiBoZSByZXNwb25kIGFzIHdlbGwgYnV0IEkgbm90IGhvbGRpbmcgbXkgYnJlYXRoLiAKVnMgeW91ciBnaWFudCBqYW0geW91ciBnZXR0aW5nIGV2ZXJ5dGhpbmcgd29yc2UgdG8gZm9sZCBhbmQgeW91cmUgZ2V0dGluZyAxMzNCQnMgaW4gcHJldHR5IGJhZCBhZ2FpbnN0IDJwIGFuZCBzZXRzLiBEb250IHJ1biB5b3VyIGVxdWl0eSBoYW5kIHZzIGhhbmQgdG8gbWFrZSB5b3Vyc2VsZiBmZWVsIGdvb2QgeW91IGhhdmUgdG8gYXNrIHdoYXQgYXJlIGFsbCB0aGUgaGFuZHMgaGUgaGFzIHRoYXQgZ2V0IGludG8gdGhpcyBzcG90IGFuZCBob3cgZG9lcyBteSBoYW5kIGZhaXIgYWdhaW5zdCB0aGUgYXZlcmFnZSBlcXVpdHkgb2YgYWxsIHRob3NlIGhhbmRzLiAKQmVpbmdzIG9mIGluY29tcGFyYWJsZSBhYmlsaXR5IHVzZWQgYXMgdG9vbHMgYXQgYmVzdCwgc2xhdmVzIGF0IHdvcnN0LiBUaGUgZmVhciBpcyB0aGF0IGluIGNyZWF0aW5nIGEgc3VwZXJpb3IgbGlmZSBmb3JtLCB3ZSBjcmVhdGUgYSBiZWluZyB0aGF0IGNhbiBvdmVycG93ZXIgdXMuIEl0IGFuIGFja25vd2xlZGdlbWVudCBvZiBzb21lIG9mIG91ciBiYXNlc3QgbmF0dXJlOiB0byBzZWVrIHNvbWV0aGluZyBiZXR0ZXIgdGhhbiBvdXIgY3VycmVudCBzdGF0aW9uLiAKQWZ0ZXIgTm8gTWVyY3kgd2hlbiBPcnRvbiBqb2luZWQgdGhlIFd5YXR0cywgaXQgc3RhcnRlZCBnZXR0aW5nIGdvb2QuIEJpZyB3aW5zIGZvciB0aGUgZmFjdGlwbiBhdCBTdXJ2aXZvciBTZXJpZXMsIFRMQywgdGhlIFJ1bWJsZSBhbmQgRWxpbWluYXRpb24gQ2hhbWJlciB3ZXJlIGdyZWF0LgpJZiBpdCBpcyBnb2luZyB0byBiZSB1c2VkIHdpdGggcGFzdGEgd2Ugd2lsbCBiZSBhZGRpbmcgUGFybWVzYW4gd2hpY2ggdGhlIGNyZWFtaW5lc3MvIGZhdCBpcyBnb2luZyB0byBjb3VudGVyIGJhbGFuY2UgdGhlIGFjaWRpdHkgYXMgd2VsbC4gSWYgdXNpbmcgb3VyIHNhdWNlIHRvIGNvb2sgc2VhZm9vZCBpbiwgdGhlIHVuZGVybHlpbmcgc3dlZXRuZXNzIG9mIHRoZSBzaHJpbXAsIGxvYnN0ZXIsIHNjYWxsb3BzLCBldGMuIFdpbGwgZG8gdGhlIHNhbWUuIApGcmFuY2UgYWxzbyBhbGxvd3Mgb25saW5lIGdhbWJsaW5nIHNpdGVzIHRvIGV4aXN0IGFzIGxvbmcgYXMgdGhleSBob2xkIGxpY2Vuc2VzLCB3aGVyZWFzIGluIEdlcm1hbnkgY2VydGFpbiBzdGF0ZXMgbGVnYWxpc2VkIG9ubGluZSBnYW1ibGluZyBhbmQgaXNzdWUgdGhlaXIgb3duIGdhbWJsaW5nIGxpY2Vuc2VzLiBSdXNzaWEsIGhvd2V2ZXIsIGluIDIwMDYgcHJvaGliaXRlZCBhbnkga2luZCBvZiByZW1vdGUgZ2FtYmxpbmcuLiAKSGUgdG9sZCBwb2xpY2UgdGhlIGJhZ3MgY29udGFpbmVkIGNhbm5hYmlzLCB3aGljaCBoZSBvd25lZCBhbmQgdGhvdWdodCB3ZWlnaGVkIGFib3V0IDQwIGdyYW1zLiAKUGh5c2ljYWxpdHkgYW5kIGRlbGl2ZXJ5IGJlY29tZSBzbyBtdWNoIG1vcmUgaW1wb3J0YW50IHRoZW4uLiAKV2l0aCBZYWt1emEgMy80LzUgcmVsZWFzZWQgb24gUFMzLCB0aGV5IHdlcmVuIGFzIGxpbWl0ZWQgYnkgdGhlIGhhcmR3YXJlIGFzIHRoZXkgd2VyZSBwcmV2aW91c2x5LiBTbyBlc3NlbnRpYWxseSB0aGV5IGp1c3QgYmUgYnJpbmdpbmcgdGhvc2UgZ2FtZXMgdG8gdGhlIERyYWdvbiBFbmdpbmUsIHdoaWNoIGlzIHdoYXQgNiBhbmQgSzIgcnVuIG9uLgpUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gCkJ1bmNoIG9mIHllYXIgMTEgYW5kIDEyIGJveXMgKG91ciBTZW5pb3JzIGZvciB5b3UgQW1lcmljYW5zKSBib3VuY2luZyBiYWNrIGFueW9uZSB3aG8gdHJpZWQgdG8gc3RvcCBoaW0sIGluY2x1ZGluZyBhIGZldyB0ZWFjaGVycy4gTmV2ZXIgc2F3IGhlciBhZ2FpbiBhZnRlciBoZSB0aHJldyBoZXIgaW4gdGhlIGNhci4gCkJ1dCBoZSBoYXMgZW1waGFzaXNlZCB0aGF0IGNsdWJzLCB3aGVyZSBtYW55IHBva2VyIG1hY2hpbmVzIGFyZSBsb2NhdGVkLCByZW1haW4gaW1wb3J0YW50IHRvIGNvbW11bml0aWVzIGFzIGEgc29jaWFsIGh1YiBhbmQgYXMgYSBzcG9uc29yIG9mIHNwb3J0aW5nIGdyb3Vwcy4gCkEgc3R1ZHkgaW4gTWF5IGxvb2tlZCBhdCB0aGUgbnVtYmVyIG9mIHN1Y2ggaW5zdGl0dXRpb25zIGFuZCB0aGUgcmlzayBvZiBoZWFydCBkaXNlYXNlLCBzdHJva2UsIGFuZCBkaWFiZXRlcy4gVGhlIG1heGltYWwgaW1wYWN0IG9mIGVhY2ggcmVzdGF1cmFudCBpcyBzbWFsbCwgYnV0IG9wZW5pbmcgdXAgMTAgbmV3IHBsYWNlcyBpbiBldmVyeSBjb3VudHkgaW4gQW1lcmljYSB3b3VsZCBhZGQgYW4gZXh0cmEgNzQ4IGNhcmRpYWMgZGVhdGhzLCA1Njcgc3Ryb2tlIGRlYXRocywgYW5kIDM5MCBuZXcgY2FzZXMgb2YgZGlhYmV0ZXMgaW4gdGhlIG5leHQgMTAgeWVhcnMuLiAKSUYgdGhpcyBpcyBNSUwsIE5vLCBJIHdpbGwgbm90IGNhbGwgeW91IGJhY2sgdW50aWwgeW91IGdpdmVuIGFuIGFwcHJvcHJpYXRlIGFuZCByZWFsIGFwb2xvZ3kgdG8gT1AuIiAoTm93LCBvYnZpb3VzbHksIGlmIGhpcyBWTSBpcyBmb3Igd29yayBvciBvdGhlciBwcm9mZXNzaW9uYWwgdGhpbmdzLCB0aGlzIG1heSBub3Qgd29yay4pLiAKIkl0J3MgYmVlbiBmdW4gdG8gd2F0Y2ggaGltIGdldCBhY2NsaW1hdGVkIHdpdGggdGhlIHRlYW0sIiBzYWlkIERvdWcgRHVjaGFyZHQsIHRoZSBjaGllZiBvcGVyYXRpbmcgb2ZmaWNlciBvZiBDaGlwIEdhbmFzc2kgUmFjaW5nLiAiSSB2ZXJ5IG11Y2ggYXBwcmVjaWF0ZSBob3cgaGUncyB3b3JrZWQgdG8gbWFrZSBzdXJlIGhlIGFuZCB0aGUgNDIgd29yayBjbG9zZSB0b2dldGhlci4gQW5kIEkgdGhpbmsgdGhhdCB0aGUgdGVhbSBpbiBwYXJ0aWN1bGFyLCBhZnRlciBhIHJvdWdoIERheXRvbmEsIGJvdW5jZWQgYmFjayBhbmQgaGFzIHNob3duIGEgbG90IG9mIGdvb2Qgc3luZXJneS4iLiAKUGxlYXNlLiAKSSBoYXZlIGEgam9iLCB5ZXMuIEkgd29yayBpbiB0aGUgZmlsbSBpbmR1c3RyeSBpbiBMb3MgQW5nZWxlcy4gVGhlIHNob3J0IGFuc3dlciBvbiB0aGlzIGlzIHllcywgSSBjaGFpbmVkIHNtb2tlZCBsaWtlIGEgZnVja2luZyBjb2FsIHBvd2VyZWQgdHJhaW4uIApGaWxsaW5nIHRoZSBnYXAgaW4gbXkgaW5jb21lIHRoYXQgdGhleSBsZWZ0IG1lIHdpdGgpLgpJdCdzIGNlcnRhaW5seSBub3QgZnVubnkgZm9yIEVsbHNidXJ5IGhpbXNlbGYsIHdobyBpbiBoaXMgbGFzdCB5ZWFyIGluIEJvc3RvbiBmaW5pc2hlZCBzZWNvbmQgaW4gdGhlIE1WUCB2b3RpbmcsIGhpdCAuMzQzIGluIHRoZSBwb3N0c2Vhc29uLCBzY29yaW5nIDE0IHJ1bnMgaW4gMTYgZ2FtZXMsIGFuZCB3aG8gaGFzIHN1YnNlcXVlbnRseSBtaXNzZWQgMjkwIG9mIGEgcG9zc2libGUgODEwIGdhbWVzIGFzIGEgWWFua2VlLiBJdCBmZWVscyBsaWtlIGhlJ3Mgc3BlbnQgdGhlIHByaW1lIG9mIGhpcyBjYXJlZXIgYWx0ZXJuYXRpbmcgYmV0d2VlbiB0cmFjdGlvbiBhbmQgcmVoYWIuIFRoYXQncyBubyBmdW4gYXQgYWxsLgpBIGJyb2FkIGNyb3NzIHNlY3Rpb24gb2YgbG9jYWwgcmV0YWlsZXJzIG5leHQgd2VlayB3aWxsIGJlIG1haWxlZCBhIHNlcGFyYXRlIHF1ZXN0aW9ubmFpcmUgdG8gaGVscCB0aGUgY2l0eSB1bmRlcnN0YW5kIHRoZSBrZXkgZmFjdG9ycyB0aGF0IGFmZmVjdCBsb2NhbCByZXRhaWxlcnMnIGFiaWxpdHkgdG8gdGhyaXZlIGluIEJvdWxkZXIsIGFjY29yZGluZyB0byB0aGUgcmVsZWFzZS4KSGF2ZSB5b3UgZXZlciB0YWxrZWQgdG8gaGVyIGFib3V0IHRoZSBzdGFsa2luZyBpbiB0aGUgcGFzdCwgb3Igc29tZSBvZiB0aGUgb3RoZXIgaHVydGZ1bCB0aGluZ3MgdGhhdCBoYXBwZW5lZCBncm93aW5nIHVwPyBNYXliZSBpdCdzIG5vdCB3b3J0aCBkaWdnaW5nIHVwIHN0dWZmIGZyb20gdGhlIHBhc3QgcmlnaHQgbm93LCBidXQgaXQgaGVscHMgdG8gZ2V0IHN0dWZmIG9mZiB5b3VyIGNoZXN0IGluIHRoZSBsb25nIHJ1biwgZXZlbiBpZiB0aGVyZSBpcyBubyByZXNvbHV0aW9uLiBKdXN0IHRlbGxpbmcgeW91ciBtb20gc29tZSBvZiB0aGUgd2F5cyBzaGUgbWFkZSB5b3UgdXBzZXQgYW5kIGhhdmluZyBoZXIgaGVhciB5b3UgYW5kIGFja25vd2xlZGdlIGl0IGNhbiBoZWxwIHRvIG1lbmQgdGhlIHJlbGF0aW9uc2hpcC4gQW4gYXBvbG9neSBmcm9tIGhlciBjb3VsZCBoZWxwIHRvIHN0ZWVyIHRoZSBoZWFsaW5nIHByb2Nlc3MgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiBhbmQgZXZlbiBpZiBzaGUgZG9lc24ndCBzYXkgc2hlIGlzIHNvcnJ5LCB5b3Ugd2lsbCBwcm9iYWJseSBmZWVsIGJldHRlciBicmluZ2luZyB0aGVzZSB0aGluZ3MgdG8gaGVyIGF0dGVudGlvbiB3aGVuIGl0J3Mgc2FmZSB0byBzYXkgaXQgYW5kIHdvbid0IGFmZmVjdCB5b3VyIGxpdmluZyBzaXR1YXRpb24uCiJNeSBiaWdnZXN0IGNvbmNlcm4gaXMgdGhlc2UgcGxhdGZvcm1zIGNhbiBiZSBnYW1lZCwiIEtyZWlzcyB0b2xkIFRoZSBQb3N0LgpZZXMsIHRoZSBBUUkgaW5kZXggZnJvbSB0aGUgY2hpbmVzZSBnb3Zlcm5tZW50IG1heSBiZSBtaXNndWlkZWQsIGJ1dCBhZnRlciBsaXZpbmcgaW4gQmVpamluZyBmb3IgcXVpdGUgc29tZSB0aW1lLCB5b3Uga2luZCBvZiBrbm93IGp1c3QgYnkgbG9va2luZyBvdXQgdGhlIHdpbmRvdyB0aGUgYXBwcm94aW1hdGUgYWlyIHF1YWxpdHksIGFuZCBpdCByZWFsbHkgaXMgYmV0dGVyLiAKR2F5IHBlb3BsZSBqdXN0IHdhbnQgdG8gYmUgcmVwcmVzZW50ZWQgaW4gcG9wIGN1bHR1cmUuIEV2ZXJ5IG1vdmllIGFuZCBzaG93IHNob3VsZCBoYXZlIGEgZ2F5IGNoYXJhY3Rlci4gSG93IHdvdWxkIHlvdSBmZWVsIGlmIHlvdSBuZXZlciBzYXcgeW91cnNlbGYgcmVwcmVzZW50ZWQgaW4gVFYgYW5kIG1vdmllcz8gSnVzdCBzaHV0IHVwLiBUdXJuIG9mZiB0aGUgVFYgaWYgeW91IGRvbiBsaWtlIGl0LgpBdSBDb2xsZ2UgSmVhbiBkZSBCcmJldWYsIHVuZSBlbnNlaWduYW50ZSBlbiB0aHRyZSBhIHQgcmVtZXJjaWUgcGFyY2UgcXUnb24gYXZhaXQgZGNvdXZlcnQgcXUnZWxsZSBhdmFpdCB0b3VybiBkYW5zIGRlcyBmaWxtcyByb3RpcXVlcyBpbCB5IGEgcGx1c2lldXJzIGRjZW5uaWVzLiBMZSBwYXNzIGQndW4gZW1wbG95IGRldnJhaXQgaWwgdnJhaW1lbnQgdHJlIGV4YW1pbiBkZSBsYSBzb3J0ZT8gQ2F0aGVyaW5lIFBlcnJpbiBlbiBkaXNjdXRlIGF2ZWMgTWljaGVsIEFwcmlsLCBkaXJlY3RldXIgZHUgQ29sbGdlLCBhaW5zaSBxdSdhdmVjIEZpbm4gTWFrZWxhLCBwcm9mZXNzZXVyIGFkam9pbnQgIGxhIEZhY3VsdCBkZSBkcm9pdCBkZSBsJ1VuaXZlcnNpdCBkZSBTaGVyYnJvb2tlLCBldCBNYXJ0aW5lIExlbW9uZGUsIGNvbnNlaWxscmUgZW4gb3JpZW50YXRpb24gZXQgY29uc2VpbGxyZSBlbiByZWxhdGlvbnMgaW5kdXN0cmllbGxlcy4KV2hpY2ggd2lsbCB5b3UgY2hvb3NlPyBUaGUgY2hlc3RudXQgY29uZml0IGJpdGVzIGVucm9iZWQgaW4gY3JpbXNvbiBodWVkIG1pbGsgY2hvY29sYXRlIG9yIHRoZSBRdWViZWMgZm9yZXN0IGhvbmV5IGdhbmFjaGUgd2l0aCBjaXRydXMgYWxtb25kIEZsb3JlbnRpbmUgY3J1bWJsZT8gVGhlcmUncyBubyBDYXJhbWFjIGZsYXZvdXJlZCBvbmU6IHN3aXouLiAKQSBmZXcgeWVhcnMgYmFjayBub3cgKHNoZWVzaCwgdGhhdCBsb25nIGFscmVhZHk/PykgSSB3cm90ZSBhIHBvc3QgYWJvdXQgZGViYXRjaGluZyBtZXNzYWdlcyBmcm9tIHRoZSBjbGFzc2ljIEJpelRhbGsgU1FMIGFkYXB0ZXIuIFNpbmNlIHRoYXQgdGltZSwgd2UndmUgc2VlbiB0aGUgcmVsZWFzZSBvZiB0aGUgbmV3IGFuZCBpbXByb3ZlZCBXQ0YgYmFzZWQgU1FMIGFkYXB0ZXIuIFlvdSBjYW4gcmVhZCBhYm91dCB0aGUgbmV3IGFkYXB0ZXIgaW4gYSBzYW1wbGUgY2hhcHRlciBvZiBteSBib29rIHBvc3RlZCBvbiB0aGUgUGFja3QgUHVibGlzaGluZyB3ZWJzaXRlLiBBIGJsb2cgcmVhZGVyIHJlY2VudGx5IGFza2VkIG1lIGlmIEkgaGFkIGV2ZXIgZGVtb25zdHJhdGVkIGRlYmF0Y2hpbmcgdmlhIHRoaXMgbmV3IGFkYXB0ZXIsIGFuZCB0byBteSBzdXJwcmlzZSwgSSBkaWRuJ3QgZm91bmQgYW55b25lIGVsc2UgZG9jdW1lbnRpbmcgaG93IHRvIGRvIHRoaXMuIFNvLCBJIGd1ZXNzIEkgd2lsbC4KSGF2aW5nIDE3NSBvciAxNTBCQiBzdGFjayB3b3VsZG4ndCBjaGFuZ2UgbXkgdGhvdWdodCBwcm9jZXNzIGhlcmUgYnV0IHN1YiAxMjUgdG8gMTAwQkIncyBzaG91bGQgdGhpcyBiZSBhIHN0YW5kYXJkIGNhbGwgb3Igc2hvdWxkIHdlIGJlIGZpbmRpbmcgYmV0dGVyIHNwb3RzPwpNeSBzY2hvb2wgcHJvdmlkZXMgZnJlZSBicmVha2Zhc3QgYW5kIGx1bmNoIGZvciBhcmUgc3R1ZGVudHMuIFdlIHNlcnZlIHRoZSBicmVha2Zhc3QgaW4gdGhlIGNsYXNzcm9vbS4gRHVyaW5nIHByZXAsIGEgbGFkeSBjYW1lIHRvICJ0cmFpbiIgdXMgb24gaG93IHRvIHNlcnZlIHRoZSBicmVha2Zhc3QgYW5kIG1hcmsgdGhlIG5hbWVzIG9mIHdobyBnb3QgYnJlYWtmYXN0LiAKQ2VsYSBwZXJtZXQgZG9uYyB1bmUgYXNzaXN0YW5jZSBtZGljYWxlICBsYSBwcm9jcmF0aW9uLCBzb2l0IGRlcyBwcmF0aXF1ZXMgY2xpbmlxdWVzIGV0IGJpb2xvZ2lxdWVzIHBvdXIgZmF2b3Jpc2VyIGxhIGNvbmNlcHRpb24gaW4gdml0cm8sIGxhIGNvbnNlcnZhdGlvbiBkZXMgZ2FtdGVzLCBkZXMgdGlzc3VzIGdlcm1pbmF1eCBldCBkZXMgZW1icnlvbnMsIGxlIHRyYW5zZmVydCBkJ2VtYnJ5b25zIGV0IGwnaW5zbWluYXRpb24gYXJ0aWZpY2llbGxlIChhcnRpY2xlIEwuIApXaWtpQW5zd2VycyB3aWxsIG5vdCBwcm92aWRlIHNlcmlhbCBudW1iZXJzIG9yIGxpbmtzIHRvIHNlcmlhbCBudW1iZXJzLiBXZSB3aWxsIGFsc28gbm90IHByb3ZpZGUgaW5mb3JtYXRpb24gb3IgbGlua3Mgb24gd2hlcmUgdG8gb2J0YWluIHBpcmF0ZWQgc29mdHdhcmUsIHNlcmlhbCBudW1iZXJzLCBrZXlnZW5zLCBvciBjcmFja3MuIElmIHlvdSBhcmUgY2F1Z2h0IGRvaW5nIGFueSBvZiB0aGVzZSwgeW91IG1heSBiZSBibG9ja2VkIGZyb20gdXNpbmcgV2lraUFuc3dlcnMgYXMgd2VsbCBhcyByZXBvcnRlZCB0byB0aGUgcHJvcGVyIG9mZmljaWFscyBhbmQvb3IgdGhlIGNvbXBhbnkgd2hvIGNyZWF0ZWQgdGhlIHNvZnR3YXJlLiAKVG9tIFdpbGxpYW1zLCBURkMncyBoZWFkIG9mIHN0cmVuZ3RoIGFuZCBjb25kaXRpb25pbmcsIHNwZW50IGNsb3NlIHRvIHRocmVlIHllYXJzIGluIHRoZSBzYW1lIHBvc2l0aW9uIHdpdGggdGhlIExlaWNlc3RlciBhY2FkZW15IGJlZm9yZSBqb2luaW5nIHRoZSBNTFMgY2x1YiBpbiBGZWJydWFyeS4KUHJvdGVjdGluZyBBbm5hIE1hcmlhIGZyb20gdGhlIGVuY3JvYWNobWVudCBvZiByZXRhaWwgY2hhaW5zIGFuZCBoaWdoIHJpc2UgY29uZG9zIGhhc24ndCBiZWVuIGVhc3kgb3IgY2hlYXAsIGFzIENoaWxlcyBrbm93cyBhbGwgdG9vIHdlbGwuIApTbyBkb3BhbWluZSBjYW4gZGlmZnVzZSBmcm9tIHRoZSBibG9vZCBpbnRvIHRoZSBicmFpbiwgYmVjYXVzZSBpdCBpcyB3YXRlciBzb2x1YmxlLiBUaGlzIHJ1bGUgaXNuIDEwMCUgYWNjdXJhdGUsIGJ1dCBnZW5lcmFsbHkgc3BlYWtpbmcsIGRydWdzIHRoYXQgd29udCBkaXNzb2x2ZSBpbiBmYXRzIGNhbiBnZXQgaW50byB0aGUgYnJhaW4uIApUYWtlIGEgRGVlcCBCcmVhdGggSXQncyBUaW1lIHRvIFRlbGwgdGhlIFN0b3J5IEJpcnRoIFdhdGNoaW5nIENsaWNrICBuICBUaW1lIFBhcmtpbmcgU3BhY2UgR29kZGVzcyBOZXcgWWVhcidzIFRpY2sgVG9ja2luZyBUaG91Z2h0cyBJIGFtIEN1cmVkIFBvbmRlcmluZyBhbmQgTW92aW5nIEZvcndhcmQgSSdNIE5PVCBDUkFaWSEhISBTaGFtZWxlc3MgUGx1Z2dpbmcgRGVjZW1iZXIgQmlydGggMiAgIEJpcnRoIEJyb3VnaHQgQWlsaWUgRGFuY2luZyBpbiB0aGUgU2FuZCBQcmVnbmFudCBOdXJzaW5nIENvbXBhc3Npb25hdGUgRGV0YWNobWVudCBMZXR0ZXIgdG8gYSBGcmllbmQgV2lja2VkIFdoYXQncyBTbyBIYXJkIEFib3V0IEJsb2dnaW5nIE9rYXksIEknbGwgU2hvdyBZb3UgT25lIGxhdWdoIERlZnlpbmcgR3Jhdml0eSBSYXcgSUlJIFJhdyBJSSBSYXcgTWlkd2lmZSBhcyBNb3RoZXI7IE1vdGhlciBhcyBNaWR3aWZlIEEgU3RvcnkgQWJvdXQgYSBNb3RoZXIgUGVucyBIYXJ2ZXN0IE1vb24gQ29yc2V0cyBTbGVlcGluZyBPZmYgQ2FsbCBXaGF0J3MgSW4gYSBTY3JhdGNoIFNwZWFraW5nIGZvciB0aGUgU2lsZW50IFNudWdnbGluZyBQcmVnbmFudCBNYW1hIE51cnNpbmcgVG9kZGxlciBPbGRlciBUYW5kZW0gTnVyc2xpbmdzIFRhbmRlbSBDaGF0dGluZyBTdW5zZXQgb24gYSBQcmVnbmFuY3kgRmFpcnlEYXVnaHRlciBTaXN0ZXJzIFdoYXQgUG9zc2Vzc2VzIFNvbWUgUGVvcGxlPyBSb3NoIEhvc2hhbmEgU2hlIFRvb2sgTWUgT3V0IHRvIGEgQmFsbCBHYW1lIEFuZCBub3cgaGVhZGluZyBob21lLiAKSW4gYSBjYXNoIGdhbWUsIHlvdSBjYW4gcmVsb2FkLCBidXQgaGVyZSBpbiBhIFNORywgbG9zaW5nIHlvdXIgc3RhY2sgbWVhbnMgeW91IGxvc2UgYW55IGNsYWltIHlvdSBoYWQgdG8gcGFydCBvZiB0aGUgcHJpemUgcG9vbC4gVGhlcmUgaXMgc29tZXRoaW5nIGNhbGxlZCB0aGUgR2FwIENvbmNlcHQgd2hpY2ggd2Ugd2lsbCBkaXNjdXNzIGhlcmUgaW4gZnVydGhlciBhcnRpY2xlcywgYnV0IGZvciBub3csIGp1c3QgY29uc2lkZXIgdGhlIGZhY3QgdGhhdCBpZiB5b3Ugc2ltcGx5IG1ha2UgaXQgdG8gc2Vjb25kIHBsYWNlIHdpdGhvdXQgZ2FpbmluZyBhIHNpbmdsZSBjaGlwLCB5b3Ugd2lsbCB3aW4gMyBidXlpbnMsIG9ubHkgdHdvIGxlc3MgdGhhbiB3aW5uaW5nIGFsbCB0aGUgY2hpcHMuIApQb2tlciBPZmZpY2VUaGlzIGlzIHNhaWQgdG8gYmUgb25lIG9mIHRoZSBtb3N0IHdlbGwgZGV2ZWxvcGVkIHBva2VyIHNvZnR3YXJlIHNpbmNlIHRoZWlyIGZpcnN0IHZlcnNpb25zLiBJdHMgZmVhdHVyZXMgYXJlIGl0cyBhYmlsaXR5IHRvIGF1dG9tYXRpY2FsbHkgdHJhY2sgc3RhdHMsIGltcG9ydCBvbGQgaGFuZCBoaXN0b3JpZXMsIGFuZCBpdHMgZ2l2aW5nIG9mIGFkdmljZSBvbiBob3cgdG8gaW1wcm92ZSB0aGUgZ2FtZS4gUmV2aWV3IGhhcyBpdCB0aGF0IHRoaXMgcG9rZXIgc29mdHdhcmUgaXMgd29ydGggb25lJ3MgbW9uZXkuLiAKVGhlIFByaXVzJyBwcmljZSB0YWcgaXMgcm91Z2hseSB0aGUgc2FtZSBhcyBkZXZlbG9waW5nIGEgZHJpdmV0cmFpbiBmcm9tIHNjcmF0Y2ggICB3aXRoIHNpZ25pZmljYW50bHkgbW9yZSBmaXNjYWwgdXBzaWRlIGlmIGh5YnJpZHMgdGFrZSBvZmYuIFRveW90YSBvZmZpY2lhbHMgc2F5IHRoZWlyIGh5YnJpZHMgYXJlIGJyZWFraW5nIGV2ZW4sIGV2ZW4gYXQgdGhpcyBlYXJseSBzdGFnZSBvZiBkZXZlbG9wbWVudC4gClBJWDogRG9scGhpbnMgU2hvY2sgUGF0cmlvdHMgV2l0aCBNaXJhY2xlIEluIE1pYW1pTmV3IEVuZ2xhbmQgUGF0cmlvdHMgdiBNaWFtaSBEb2xwaGluc01JQU1JLCBGTCAgIERFQ0VNQkVSIDA5OiBSb2IgR3Jvbmtvd3NraSA4NyBvZiB0aGUgTmV3IEVuZ2xhbmQgUGF0cmlvdHMgbG9va3Mgb24gaW4gdGhlIHNlY29uZCBoYWxmIGFnYWluc3QgdGhlIE1pYW1pIERvbHBoaW5zIGF0IEhhcmQgUm9jayBTdGFkaXVtIG9uIERlY2VtYmVyIDksIDIwMTggaW4gTWlhbWksIEZsb3JpZGEuIChQaG90byBieSBNaWNoYWVsIFJlYXZlcy9HZXR0eSBJbWFnZXMpClRoZSBib2FyZCBvZiBkaXJlY3RvcnMgY29uZmlybXMgdGhlIHN0YXR1cyBvZiBlYWNoIHRlYW0gY2hpcm9wcmFjdG9yIGFubnVhbGx5LiBUaGlzIGlzIGFjY29tcGxpc2hlZCBieSBkaXJlY3QgY29tbXVuaWNhdGlvbiB3aXRoIHRlYW0gYXRobGV0aWMgdHJhaW5lcnMsIG1lZGljYWwgZGlyZWN0b3JzIG9yIGdlbmVyYWwgbWFuYWdlcnMuIFRlYW0gY2hpcm9wcmFjdG9ycyBhcmUgZW5jb3VyYWdlZCB0byBtYWludGFpbiBjbGVhciBsaW5lcyBvZiBjb21tdW5pY2F0aW9uIHdpdGggb3RoZXIgbWVtYmVycyBvZiB0aGUgbWVkaWNhbCBzdGFmZiwgaW5jbHVkaW5nIGF0aGxldGljIHRyYWluZXJzLiAKWW91IGxvb2sgYXdheSBhbmQgYXNrICJob3cgbGl2ZSBpcyBpdCIgd2l0aCBhIGRlYWRwYW4gZmFjZS4gSW4gdGhlIGV2ZW50IHlvdSBkbyBmb2xkIHRoZSBzYW1lIHRpbWUgYXMgeWEgYnVkZHkgb24geW91ciByaWdodC4gQW5kIG1ha2UgZXllIGNvbnRhY3QsIHlvdSByZW1lbWJlciB0byBzYXkgIml0J3Mgb25seSBnYXkgaWYgYmFsbHMgdG91Y2ggYWZ0ZXIgY3Jvc3Npbmcgc3dvcmRzIGNhcmRzIi4gCklmIHNvIGl0IG1pZ2h0IGJlIHdvcnRoIHNpdHRpbmcgZG93biBhbmQgaGF2aW5nIHRoZSB0YWxrLiAKSXQgd2FzICQ3OTkgd2hlbiBJIGJvdWdodCBpdCBhbmQgZm9yIHRoZSBuZXh0IGNvdXBsZSBvZiB3ZWVrcyBhZnRlciB0aGF0LiBJIGZpZ3VyZWQgaXQgd2FzIGEgc2l0dWF0aW9uIHdoZXJlIHRoZXkganVzdCBhbHdheXMgc2VsbCBpdCBhdCB0aGUgImRpc2NvdW50ZWQiIHByaWNlLiAKRGVudGFsIG9mZmljZXMgbWFrZSBhbnkgYW5kIGFsbCBwYXRpZW50IHNpZ24gZGlzY2xhaW1lcnMgdGhhdCBpZiB0aGVpciBpbnN1cmFuY2UgY29tcGFueSBwYXlzIGxlc3MgdGhhbiBleHBlY3RlZCBvciBkb2Vzbid0IGNvdmVyIFgsWSxaIHRoZSBwYXRpZW50IGlzIHJlc3BvbnNpYmxlLiAKVGhlIG1vcmUgZGVwcmVzc2luZyBmYWN0IGlzIHRoYXQgdGhlIHdhciBjb3VsZCBoYXZlIGVuZGVkIG11Y2ggc29vbmVyLiBKb2huc29uIGhhZCB3aXJlIHRhcHBlZCBOaXhvbiBhbmQgZGlzY292ZXJlZCBOaXhvbiBkZXJhaWxlZCB0aGUgd2hvbGUgcGVhY2UgcHJvY2VzcyB0aGF0IHdhcyBsaWtlbHkgdG8gaGFwcGVuIHJpZ2h0IGJlZm9yZSBOaXhvbiB3YXMgdG8gdGFrZSBvZmZpY2UuIE5peG9uIHRvbGQgZWl0aGVyIHRoZSBOb3J0aCBvciBTb3V0aCBWaWV0bmFtZXNlIGxlYWRlcnNoaXAgbm90IHRvIHRydXN0IHRoZSBvdGhlciBzaWRlLiBKb2huc29uIGhhZCBwbGFubmVkIHRvIGFubm91bmNlIHRoZSBwZWFjZSBwbGFuIG9uIHR2LiBKb2huc29uIGNvdWxkbiBkaXZ1bGdlIHRoZSBpbmZvcm1hdGlvbiBiZWNhdXNlIHRoZSB0YXAgd2FzIGlsbGVnYWwuClNsb3QgbWFjaGluZXM6U2xvdCBtYWNoaW5lcyBhcmUgYSBjYXNpbm9zIGJpZ2dlc3QgZHJhdy4gTW9yZSBwZW9wbGUgY29tZSB0byBwbGF5IHNsb3RzIHRoZW4gYW55IG90aGVyIGNhc2lubyBnYW1lIGJlY2F1c2Ugb2YgaXRzIHNpbXBsaWNpdHkuIEFsbCB5b3UgaGF2ZSB0byBkbyBpcyBwdXQgaW4geW91ciBtb25leSBhbmQgaGl0IHNwaW4uIApPdGhlciBoYWxmIGNhbiBiZSBqamlnYWVkLCBvciBzdGlyIGZyaWVkLCBvciBiYnEgeW91cnNlbGYgYSBzYWNrIG9mIHBvdGF0b2VzIGZvciAzMDAwOyB0aGF0IGJlIHlvdXIgc3RhcmNoIGZvciBhIGZldyBtZWFscy4gCkFtYXpvbiBmb3VuZGVyLjE2LiAKU2hlIHNhaWQgc2hlIHdvdWxkIG5vdCBhY2NlcHQgYW55IGRlY2lzaW9uIGV4Y2VwdCB0aGF0IG9mIGEgY291cnQuIFNoZSBhbHNvIGRlbmllZCB0aGF0IFJhc2hlZWRhIHdhcyBlbmdhZ2VkIHRvIHNvbWVib2R5IGVsc2UsIHNheWluZyB0aGF0IHNoZSBoYXMgbm90IGNvbXBsZXRlZCBoZXIgc3R1ZGllcyB5ZXQuIE5vcmVlbiB2b3dlZCB0aGF0IHNoZSB3b3VsZCBuZXZlciBoYW5kIGhlciBkYXVnaHRlciBvdmVyIHRvIExhbCBIYWlkZXIuCkRqb2tvdmljIGRvZXMgdGhpcyB2ZXJ5IHdlbGwuIApKb2IgU2VhcmNoaW5nIFVzZSB0aGUgY29ubmVjdGlvbnMgZm9yZ2VkIGR1cmluZyBib3RoIHlvdXIgYWNhZGVtaWMgc3R1ZGllcyBhbmQgeW91ciBpbnRlcm5zaGlwcyB0byBsZWFybiBhYm91dCBhdmFpbGFibGUgcG9zaXRpb25zIGluIHlvdXIgZmllbGQuIApNeSBtb25leSBpcyBvbiB0aGUgImZyaWVuZCIgYW5kIHBvc3NpYmx5IHRoZSBodXNiYW5kIHdpdGggdGhlIGZyaWVuZC4gCklmIHlvdSBrZWVwIHRoZXNlIG1hY2hpbmVzIHVudXNlZCwgdGhlc2UgY2Fubm90IHdvcmsgaW4gdGhlIGxvbmcgcnVuLi4gCkl0IGhhcmQgdG8gc2F5IHdoYXQgd291bGQgaGF2ZSBoYXBwZW5lZCBoYWQgdGhleSBmb2xsb3dlZCBoaXMgcGxhbiB0byBhIFQgYnV0IGl0IHByb2JhYmx5IHdvdWxkIGhhdmUgaGFkIG1vcmUgb2YgYSBzaG90IHRoYW4gc2l0dGluZyBhcm91bmQgYXZvaWRpbmcgbG9zaW5nIGRhdGVkIHNoaXBzLiBJdCBhbHNvIHByZXR0eSBoYXJkIHRvIHdyYXAgeW91ciBicmFpbiBhcm91bmQgc2VlaW5nIHBlb3BsZSBzZW5zZWxlc3NseSBleHBsb2RlIGluIHRob3NlIHNoaXBzIGV2ZW4gd2l0aCB0aGUgY29udGV4dCBvZiBrbm93aW5nIHRoZSB3ZXN0ZXJuIGZyb250IHdhcyB3YXkgbW9yZSBvZiBhIHNsYXVnaHRlcmhvdXNlLiAKTGlmZSBhcyBhIGJhYnksIHdhbnRpbmcgd29tZW4gdG8gYXByb3ZlIG9mIHlvdSBtYWtlcyBzZW5jZS4gCkluZGl2aWR1YWwgZmlybXMgcGF5IGEgcmFuZ2Ugb2Ygc2FsYXJpZXMgdG8gdGhlc2Ugd29ya2Vycy4gT25lIGZpcm0sIGZvciBleGFtcGxlLCBwYWlkIGVudHJ5IGxldmVsIHBhcmFsZWdhbHMgJDQ4LDAwMCBwZXIgeWVhciwgd2hpbGUgdGhlIGJlc3QgcGFpZCBsaXRpZ2F0aW9uIHBhcmFsZWdhbHMgZWFybmVkICQ3MywwMDAuIApJdCBoYXMgdGhlIGludHVpdGlvbiB0byBpbnN0cnVjdCB0aGUgbWFzY3VsaW5lIGVuZXJneSB3aGVuIHRvIG1ha2UgaXRzIG1vdmUuIApWaXN0YSBhbmQgV2luZG93cyA3IHVzZXJzIHNob3VsZCBwcmVmZXJhYmx5IG5vdCB1c2UgdGhlaXIgUHJvZ3JhbSBGaWxlcyAuIApBcyBhIG1hdHRlciBvZiBmYWN0LCBpdCBpcyBvbmUgb2YgdGhlIG1vc3QgZGVzb2xhdGUgZGVzdGluYXRpb25zIGluIHRoZSB3b3JsZCB0aGF0IHdpbGwgYmUgZW50aXJlbHkgZGlmZmVyZW50IGZyb20gdGhlIG90aGVyIGNvbW1vbiB3aGl0ZSBjb2xvciBzYW5kIGJlYWNoZXMuIApJcyBHb2QgYWxzbyBzZWVraW5nIEFtZXJpY2EKSXQgaXMgb3VyIGJlbGllZiB0aGF0IHRvZ2V0aGVyLCBOSEEsIHNjaG9vbHMgYW5kIGVkdWNhdG9ycywgcHJvdmlkZXJzIGFuZCBhbGxpZWQgaGVhbHRoIHByYWN0aXRpb25lcnMgY2FuIHRyYW5zZm9ybSBoZWFsdGhjYXJlIHRocm91Z2ggZWR1Y2F0aW9uLCB0cmFpbmluZyBhbmQgY2VydGlmaWNhdGlvbiwgd2l0aCB0aGUgZ29hbCBvZiBjb25zaXN0ZW50bHkgaW1wcm92aW5nIHBhdGllbnQgb3V0Y29tZXMuLiAKRG8geW91IGV4cGVjdCB0aGUgZGlyZWN0b3IgYW5kL29yIHByb2R1Y2VyIHRvIHB1YmxpY2x5IHN0YXRlICJJIGhhZCB0aGlzIGlkZWEgYnV0IFtBY3Rvci9BY3RyZXNzXSB3ZW50IG92ZXIgbXkgaGVhZCBhbmQgdGhlIG1vdmllIGlzIGJldHRlciBiZWNhdXNlIG9mIGl0LiIgSSBoaWdobHkgZG91YnQgYW55b25lIGluIEhvbGx5d29vZCBoYXMgdGhhdCBtdWNoIGh1bWlsaXR5IGlmIHRoZSBtb3ZpZSB3YXMgYSBib3ggb2ZmaWNlIHNtYXNoLi4gCllvdSBzaG91bGRuIHN0YW5kIGZvciBzdWNoIHJ1ZGVuZXNzIHRvIHlvdXIgR0YsIGhlciBtb3RoZXIgYW5kIHRvIHlvdXJzZWxmISBJIHVuZGVyc3RhbmQgdGhhdCBwZW9wbGUgdGhpbmsgdGhleSB0aGV5IHNob3VsZG4gc3BlYWsgdXAgYmVjYXVzZSBvZiB0aGUgcHJvYmxlbXMgaXQgY291bGQgY2F1c2UuIFRoZXJlIGlzIGFscmVhZHkgYSBwcm9ibGVtLiAKV2VuZGkgYW5kIEkgc3dlYXIgd2UgYXJlIGdvaW5nIHRvIGZpbmQgdGhlIHJlY2lwZSBhbmQgYXR0ZW1wdCB0byBtYWtlIGl0LiBUaGVyZSB3YXMgYWxzbyBtbGF6bGgsIGEgbGFtYiBhbmQgZWdncGxhbnQgYW5kIGNoZWVzZSBkaXNoLiAKSVQgbm90IGp1c3QgdGhhdCBJIGRvbiB3YW50IG15IGtpZHMgbGl2aW5nIHRocm91Z2ggd2hhdCBjb3VsZCBiZSBtYXNzIG1pZ3JhdGlvbiwgZm9vZCBzaG9ydGFnZXMgYW5kIGluY3JlYXNpbmdseSBkYW5nZXJvdXMgd2VhdGhlciBwYXR0ZXJucywgdGhvdWdoIHRob3NlIHRoaW5ncyBhcmUgdGVycmlmeWluZyBhbmQgY291bGQgd2VsbCBsZWFkIHRvIGEgbG90IG9mIHdhcnMuIEl0IHRoYXQgcG9wdWxhdGlvbiBpcyBvbmUgb2YgdGhlIG1ham9yIHJlYXNvbnMgd2UgYXJlIGluIHRyb3VibGUgc28gaGF2aW5nIGEga2lkIGFjdGl2ZWx5IGluY3JlYXNlcyB0aGUgcHJvYmxlbS4KIkhlbGxvLCIgeW91ciB3aWZlIHNheXMgaW50byB0aGUgcGhvbmUuICJNYSdhbSwgd2hhdCBpcyBoYXBwZW5pbmc/IiBUaGUgOTExIGNhbGwgdGFrZXIgYXNrcy4KSXRzIGp1c3QgdGhlIHJpZ2h0IHRoaW5nIHRvIGRvLiAKU2xhc2hkb3QgbWV0YSBtb2RlcmF0aW9uIGlzIGFuIGV4YW1wbGUgb2YgYSBzdWNjZXNzZnVsIGF0dGVtcHQgYXQgdGhpcyBzb3J0IG9mIHRvb2xzZXQuIFN0YWNrIEV4Y2hhbmdlIGhhcyBhbm90aGVyLiBJIHRoaW5rIHdlIGNhbiBkbyBiZXR0ZXIsIHRob3VnaC4gU2xhc2hkb3Qgc3lzdGVtIGlzIHRvbyBiYXNpYyBmb3IgYSByZWRkaXQgbGlrZSBwbGFjZSwgYW5kIFN0YWNrIGEgYml0IHJvYm90aWMvaW5odW1hbiBpbiB0aGUgaW1wbGVtZW50YXRpb24sIGl0IGFsbCBhYm91dCBudW1iZXJzLiBUaGV5IGJvdGggaGFkIHRoZSByaWdodCBpZGVhLCB0aG91Z2gsIGFuZCBib3RoIHdvcmsgd2VsbCBmb3IgdGhlaXIgcmVzcGVjdGl2ZSBjb21tdW5pdGllcy4KSSBtYXkgYmUgcHJlc3VtaW5nLCBidXQgaXQgc291bmRzIGxpa2UgdGhlcmUgaXMgYSBsb3Qgb2Ygb3ZlcnRoaW5raW5nIGdvaW5nIG9uIHRoZXJlLiBUYWtlIGl0IGZyb20gYSBjaHJvbmljIG92ZXJ0aGlua2VyIGFuZCBvdmVyYW5hbHl6ZXI6IFN0b3AuIFNlcmlvdXNseS5RdWlja0RhdGUgNDAgdWdoLiAKRm9yIHNtYWxsZXIgYnVzaW5lc3MgZm9sa3MsIGxhd24gY2FyZSBndXlzLCBjb25zdHJ1Y3Rpb24gZXRjLiBJIGNhbiBsb29rIGF0IGEgY3JlZGl0IHJlcG9ydCwgbGFzdCA2IG1vbnRocyBiYW5rIHN0YXRlbWVudHMgYW5kIGNyZWRpdCBjYXJkIHN0YXRlbWVudHMgYW5kIHNlZSBob3cgdGhleSBsaXZlLiBJZiB0aGVyZSBhcmUgbG90cyBvZiBBVE0gd2l0aGRyYXdscyBmb3IgJDIwIGFuZCBjaGFyZ2VzIGZvciBoYW1idXJnZXJzLCB0aGV5IGFyZSBwb29yIG1vbmV5IG1hbmFnZXJzLiBJZiBJIHNlZSBjaGFyZ2VzIGF0IEp1ZHkncyBCYXIgNCB0aW1lcyBhIHdlZWssIHRoZXkgaGF2ZSBhIHByb2JsZW0uIElmIHRoZSBndXkgaXMgaW4gdGhlIGxhd24gYnVzaW5lc3MgYW5kIGhhcyBhIHNtYWxsIGFjb3VudCBhdCBKb2UncyBMYXduIE1vd2VyIFNob3AsIHRoYXQgaXMgcHJvYmFibHkgbm90IHJlcG9ydGVkIGNyZWRpdC4KSSB3b3VsZCB0aG91Z2ggc2F5IHRoYXQgdGhlIGVuZCByZXN1bHQgYWZ0ZXIgdHJpYWwgYW5kIGVycm9yIHdvdWxkIHRvIGJlIGRpcmVjdCBjaXRpemVuIGNvbnRyb2wgb3IgY29tcGxldGUgcGVlciB0byBwZWVyLiBTaGl0IGFsbCB3ZSBuZWVkIGlzIHJlcGxpY2F0aW9uLCB0ZWxlcG9ydGF0aW9uIG9mIG1hdHRlciBhbmQgZW5lcmd5LiAKTGEgYW50aWd1YSBjaWVuY2lhIG1kaWNhIHRpZW5lIHVuYXMgcHJvZnVuZGFzIHJhY2VzIHF1ZSBhcnJhbmNhbiBkZSBsYSBmaWxvc29mYSB2ZGljYS4gCkhpcyBwYXJ0eSB3YW50cyBzY2hvb2xzIHNlcnZpbmcgdGhlIGNvdW50cnkncyBSdXNzaWFuIHNwZWFraW5nIG1pbm9yaXR5IHRvIHN3aXRjaCB0byBFc3RvbmlhbiwgYW5kIHRvIHJlc3RyaWN0IHRoZSBudW1iZXJzIG9mIFVrcmFpbmlhbnMgY29taW5nIGluIGZvciBsb3cgc2tpbGxlZCBqb2JzLiAKRXllIHN0cmFpbiAocG9vciB2aXNpb24pIGNhbiB0cmlnZ2VyIGZyZXF1ZW50IHRlbnNpb24gaGVhZGFjaGVzLiAKSSBoYXZlIGZvciBzbyBsb25nIG5vdy4gQSBwYXJ0IG9mIG1lIHdhbnRlZCB0byB0ZWxsIHlvdSwgYnV0IEkgd2FzIHNvIGFmcmFpZCB0byBzYXkgaXQsIGFmcmFpZCB0aGF0IHlvdSB3b3VsZCBuZXZlciB1bmRlcnN0YW5kLCB0aGF0IEkgbmV2ZXIgZGlkLiAKU2hlIG1pZ2h0IG5vdCByZWFsaXNlIHRoZSBlZmZlY3QgaXQgaGFkIG9uIHlvdSwgYW5kIHRoaXMgaXMgbW9yZSByZWFzb25hYmxlIHRoYW4ganVzdCBraWNraW5nIGhlciBvdXQuLiAKQWxzbyBkb24ndCBmb3JnZXQgdGVzdGVycywgd2hlbiBwb2ludGluZyBhIHN0b3J5IGFueW9uZSBkb2luZyB0ZXN0aW5nIG5lZWRzIHRvIHdlaWdoIGluIGFzIHNvbWV0aW1lcyBhIHNpbXBsZSBkZXZlbG9wbWVudCB0YXNrIGNhbiBjYXVzZSBhIGxhcmdlIHRlc3RpbmcgZWZmb3J0IGFuZCBpZiB0aGV5IGFyZSB0cnVlIFNwcmludHMgdGhlIGlkZWEgaXMgdG8gaGF2ZSBldmVyeXRoaW5nIGNvbXBsZXRlZCBhcyBpdCBjb3VsZCBiZSBzaGlwcGVkIChidWlsdCwgdGVzdGVkIGFuZCBkb2N1bWVudGVkKS4gU28gdGhlIGVzdGltYXRlIG9mIGEgc3RvcnkgaXMgZGV0ZXJtaW5lZCBieSB0aGUgdGVhbSBub3QgYnkgYW4gaW5kaXZpZHVhbC4gSXQgaXMgaGFsZiBhcyBoYXJkIGFzIGEgMjAgb3Igc2xpZ2h0bHkgbW9yZSBkaWZmaWN1bHQgdGhhbiBhIDkuIApQZXJzb25uYWxpdCBydHJvYWN0aXZlIG91IGwnaW5mYW5zIGNvbmNlcHR1cy4gClRoZSBmcmFnbWVudHMgd2VyZSBub3QgaW4gYW55IHJlYWwgc2Vuc2UgcG90ZW50aWFsbHkgYWN0dWFsbHkgZXhjdWxwYXRvcnkgdmlld2VkIGZyb20gbGF3IGVuZm9yY2VtZW50IHBlcnNwZWN0aXZlOyB0aHVzLCBubyBiYWQgZmFpdGguIFBsdXMgbm8gV2lzY29uc2luIGNvdXJ0IGhhcyBldmVyIGZvdW5kIGJhZCBmYWl0aCBhbmQgY29tbWVudGF0b3JzIGRlc2NyaWJlIHRoZSBzdGFuZGFyZCBhcyBuZWFybHkgaW1wb3NzaWJsZS4gNSkgVGhlICJubyBjcmltaW5hbCBpcyB0aGF0IHN0dXBpZCIgYXJndW1lbnQgaGFwcGVucyBpbiBldmVyeSBjcmltaW5hbCBjYXNlICAgeWVzLCB0aGV5IGFyZSB0aGF0IHN0dXBpZC4gCkV2ZXJ5b25lLCBlc3BlY2lhbGx5IE5pY29sZSwga25vd3MgdGhhdCBOaWNvbGUgY2FuIHRydXN0IENocmlzdGluZSBhbnltb3JlLiAKMTAgaHJzIGFnbyArIEJ5IE1pY2hhZWwgU2FuZ2lhY29tbywgVGhlIFBsYWluIERlYWxlck1lbiBhcnJlc3RlZCBhZnRlciBlYXRpbmcgc29tZXRoaW5nIHRoYXQgbWFkZSB0aGVtICdub3QgZmVlbCByaWdodCc6IFNvbG9uIHBvbGljZSBibG90dGVyIE1lbiBhcnJlc3RlZCBhZnRlciBlYXRpbmcgc29tZXRoaW5nIHRoYXQgbWFkZSB0aGVtICdub3QgZmVlbCByaWdodCc6IFNvbG9uIHBvbGljZSBibG90dGVyIFRoZSBTb2xvbiBwb2xpY2UgYmxvdHRlciB0aGlzIHdlZWsgaW5jbHVkZXMgYW4gaXRlbSBpbiB3aGljaCB0d28gTWFwbGUgSGVpZ2h0cyBtZW4gd2VyZSBhcnJlc3RlZCBmb3IgZHJ1ZyBwb3NzZXNzaW9uIGFmdGVyIHRoZXkgcmVwb3J0ZWQgdGhhdCB0aGV5IGRpZCBub3QgJ2ZlZWwgcmlnaHQnIGFmdGVyIGVhdGluZyBhIGhvbWVtYWRlIGJ1biBjb250YWluaW5nIHRoZSBkcnVnIFRIQy4gCldvcmtlcnMgd29yayBoYXJkIGZvciB3aGF0IHRoZXkgbWFraW5nLCB3aGljaCBpcyBtaW5pbXVtIHdhZ2UuIApDaGFpbmluZyBmcm9tIHRoYXQgcXVlc3Rpb24sIHdoYXQgY291bGQgSG9vZCBoYXZlIHJlY29uc2lkZXJlZCBhdCB0aGUgbGFzdCBtaW51dGU/IFNhY3JpZmljaW5nIGhpbXNlbGYgaW4gdGhlIGZpcnN0IHBsYWNlPwpUaGUgcGxhbiBpcyB0byBtb3VudCBzb2xhciBwYW5lbHMgb24gdGhlIGJhY2sgb2YgdGhlaXIgbmVjayBhbmQgY29udmVydCB0aGVtc2VsdmVzIHRvIGEgc29ydCBvZiBCaW8vRGllc2VsIGNyZW1lIHB1bmsgbWFkIE1heCBzdHlsZSB3YXIgdmVoaWNsZS4gCiJNeSBvcGluaW9uIG5vdyBpcyB0aGF0IHRoZSBjaGFuY2VzIGFyZSBMaWJlcmFscyB3aWxsIHByb2JhYmx5IGdldCBiYWNrIGluIGp1c3QgYmVjYXVzZSBpdCBEYWxleSB3aG8/IEhlIG5vdCBjdXR0aW5nIHRocm91Z2guIiBUaGUgbW90b3JiaWtlIGVudGh1c2lhc3QgYW5kIGd1biBjbHViIG1lbWJlciBiZWxpZXZlcyBoZSBhbmQgT25lIE5hdGlvbiBjYW5kaWRhdGUgTWFyayBMYXRoYW0gd2lsbCBiZSBlbGVjdGVkIHRvIHRoZSB1cHBlciBob3VzZS4gVGhlIHBhaXIgYXJlbiBmcmllbmRzIGJ1dCBoYXZlIGFuIGFtaWNhYmxlIHdvcmtpbmcgcmVsYXRpb25zaGlwICAgd2hpY2ggaXMgc29tZXRoaW5nIHRoZXkgY291bGQgbmVlZCBpZiB0aGV5IGFyZSBlbGVjdGVkIHRvIGVpZ2h0IHllYXIgdGVybXMgdG9nZXRoZXIuIApTaW5jZSB5b3UgZG9uIGtub3cgd2hhdCB5b3UgZG9pbmcgd2l0aCB0YXggZmlsaW5nIGFuZCB5b3UgY2FuIGFmZm9yZCBhIHByb2Zlc3Npb25hbCwgSSBzdWdnZXN0IGNoZWNraW5nIHRoZSBDUkEgd2Vic2l0ZSBmb3IgZnJlZSB0YXggY2xpbmljcy4gVGhlcmUgYXJlIGEgaHVnZSBudW1iZXIgb2YgdGhlc2Ugd2hlcmUgdm9sdW50ZWVycyBoZWxwIHBlb3BsZSB0byBmaWxlIHRoZWlyIHJldHVybnMsIGFuZCBJIHN1cmUgdGhlcmUgd2lsbCBiZSBvbmUgbmVhcmJ5IGZvciB5b3UuIFRha2UgZXZlcnl0aGluZyB5b3UgaGF2ZSAoYmFuayBzdGF0ZW1lbnRzLCBwYXkgc3R1YnMsIGFueXRoaW5nIHlvdSBjYW4gZ2V0IGZyb20gdGhlIENSQSB3ZWJzaXRlLCBhbmQgb2YgY291cnNlIGFueSB0YXggZm9ybXMgeW91IGJlZW4gZ2l2ZW4pIGFuZCBzb21lb25lIHdpbGwgaGVscCB5b3UgdG8gZ28gdGhyb3VnaCB5b3VyIHBhc3QgeWVhciByZXR1cm5zIGFuZCBnZXQgZXZlcnl0aGluZyB1cCB0byBkYXRlLi4gCldoYXQgc2hlIHNhaWQgdG8geW91PyBTbyBmYXIgYmV5b25kIG91dCBvZiBsaW5lLiBUaGF0IGlzIHNvbWUgZXZpbCBzaGl0LiAKQW4gaW1wb3J0YW50IHRoZW9yeSBpcyBNYXJ4J3MgdGhlb3J5IG9mIGRpYWxlY3RpY2FsIG1hdGVyaWFsaXNtIGFuZCBjbGFzcyBzdHJ1Z2dsZS4gClllYWgsIHRoaXMgd2hvbGUgdGhpbmcgaXMgY3JhenkuIApMZWUgc2F5cyBoZSBkb2VzIG1vcmUgdGhhbiA3MCBwZXJjZW50IG9mIGhpcyBidXNpbmVzcyBkdXJpbmcgdGhvc2UgaG91cnMgICBjYXNpbm8gd29ya2VycywgZmlyZWZpZ2h0ZXJzLCBhaXJwb3J0IGJhZ2dhZ2UgaGFuZGxlcnMsIGV2ZW4gcG9saWNlIG9mZmljZXJzLiBPbmUgd2FzIGEgd29tYW4gd2hvIGhhZCBqdXN0IGZpbmlzaGVkIHBsYXlpbmcgc2xvdHMgYWZ0ZXIgYSBkaW5uZXIgYXQgQ29jbydzLiBBbm90aGVyIHNhaWQgaGUgd2FzIGEgTGFzIFZlZ2FzIGJ1c2luZXNzbWFuIGZyZXNoIG9mZiBhIGxhdGUgZmxpZ2h0IGhvbWUgZnJvbSBDaGljYWdvLiAKV2hhdCBzdG9wcyB0aGVtIGZyb20gZG9pbmcgaXQgYSAybmQgdGltZSBpZiBuZWVkZWQ/IElmIGEgY2VydGFpbiBtZWNoYW5pY3MgaXMgb3V0ZGF0ZWQsIHRoZXkgY2FuIGFsc28gY2hhbmdlIGl0LiBJbiB0aGUgZW5kIGl0IG9uIFJpb3QuLiAKSXRzIGhhcmQgdG8gaW1hZ2luZSB5b3Vyc2VsZiB3aXRoIHNvbWVvbmUgZWxzZSBidXQgSSBjYW4gcHJvbWlzZSB0aGF0IHlvdSBjYW4gZmluZCBzb21lb25lIGVsc2UgYmVjYXVzZSB0aGVyZSBhcmUgbGl0ZXJhbGx5IGJpbGxpb25zIG9mIHBlb3BsZS4gV2hlbiB5b3Ugc3RhcnQgc2Nob29sIHlvdSB3aWxsIGJlIHN1cnJvdW5kZWQgYnkgcGVvcGxlIHRoYXQgYXJlIHlvdXIgYWdlIGFuZCB5b3Ugd2lsbCBtYWtlIG5ldyBmcmllbmRzIGFuZCBtYXliZSBtZWV0IGEgbmV3IGdpcmwgb3IgMiBvciA1IGluIHlvdXIgdGltZSBpbiBjb2xsZWdlLiBTbyBtdWNoIGlzIGdvaW5nIHRvIGhhcHBlbiBpbiB5b3VyIGxpZmUgYW5kIHlvdSBoYXZlIGJhcmVseSBzZWVuIHdoYXQgaXMgb3V0IHRoZXJlLiAKSW50ZXJlc3RpbmdseSwgc3lzdGVtaWMgaW5qZWN0aW9uIG9mIHRoZSBwaHl0b2NoZW1pY2FsIGN1cmN1bWluIGVuaGFuY2VzIHRoZSBuZXcgaGlwcG9jYW1wYWwgY2VsbCBzdXJ2aXZhbCBieSBbNTldLiBPdGhlciBwbGFudCBleHRyYWN0cywgc3VjaCBhcyBnaW5zZW5nIGFuZCB0aGUgZmxhdm9ub2lkIGNvbnRhaW5pbmcgZ2luZ2tvIGJpbG9iYSBtaWdodCBhbHNvIGltcHJvdmUgbmV1cm9nZW5lc2lzIFs2MCA2Ml0uIEl0IHJlbWFpbnMgdW5jbGVhciB3aGljaCBjb21wb25lbnQocykgb2YgdGhlc2UgbmF0dXJhbCBwcm9kdWN0cyBhZmZlY3RzIG5ldXJvZ2VuZXNpcy4gCkVkaXQ6IEkganVzdCByZXdhdGNoZWQgdGhlIHZpZGVvIGluIHBhcnQsIGFuZCBpdCB3YXMgYmVjYXVzZSB0aGVyZSB3YXMgbWFudWZhY3R1cmUgd2FybmluZyB0aGF0IGlmIHRoZSBvIHJpbmdzIHNob3dlZCBkYW1hZ2UgICBhbnkgZGFtYWdlLCB0aGV5IG5lZWQgdG8gYmUgcmVwbGFjZWQgb3RoZXIgd2lzZSB0aGluZ3MgZ28gVmVyeSBCYWQuIChkYW1hZ2VkIG8gcmluZ3Mgd2VyZSBjbGFzc2lmaWVkIHNldmVyaXR5IG9uZTogZGVzdHJ1Y3Rpb24gb2YgdmVoaWNsZSBhbmQgb2NjdXBhbnRzKSBJbnN0ZWFkLCBOQVNBIGludGVudGlvbmFsbHkgZGFtYWdlZCBzb21lIG8gcmluZ3MgYW5kIHN1YmplY3RlZCBpdCB0byBsYWJvcmF0b3J5IHRlc3RzLiBXaGVuIHRoZXkgZGlkbiBmYWlsLCB0aGV5IHJhdGlvbmFsaXplZCB0aGF0IHRoZXkgd2VyZSBva2F5IHRvIGZseS4uIApMaW9ucyBnZXR0aW5nIGdvb2QgYXQgcm9sbGluZyBkaWNlCkZvciB0aGUgZmlyc3QgdGltZSBpbiBJbmRpYSwgNSBtYWpvciBpbnRlcm5hdGlvbmFsIHRlYW1zIGZyb20gU291dGggQXNpYSAoTkFWSSwgRk5BVElDLCBNNSwgU0sgR0FNSU5HKSB3aWxsIGJlIGNvbXBldGluZyBpbiBJbmRpYS4gVGhlIDMgZGF5IENhcm5pdmFsIHN0YXJ0aW5nIGZyb20gQXByaWwgNiwgMjAxMiBvbndhcmRzIGF0IEF0dGFyaSBSZXNvcnQsIE5vaWRhLCB3aWxsIGhvdXNlIGFsbCB0aGUgbGF0ZXN0IGRpZ2l0YWwgYW5kIG9ubGluZSBnYW1lcyBvZiBhbGwgdGltZXMgaW5jbHVkaW5nIE5lZWQgZm9yIFNwZWVkLCBGSUZBIFNvY2NlciwgVGVra2VuLCBEb3RhLCBDb3VudGVyIFN0cmlrZSwgSGVsbG8sIFBvb2wsIFBva2VyLCBBbmdyeSBCaXJkLCBhbmQgQ2FsbCBvZiBEdXR5LgpTb2NpYWwgc2VjdXJpdHkKTXlyZGR3biAgMCBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCldpdGggcGl6emEsIHlvdSBjYW4gc2ltcGx5IGxlYXZlIG9mZiB0aGUgbW96YXJlbGxhLiAKU3ltcHRvbXMgb2YgdGhpcyBjb25kaXRpb24gaW5jbHVkZSBibG9vZCBpbiB0aGUgdXJpbmUsIGZyZXF1ZW50IHVyaW5hdGlvbiwgb3IgZGlmZmljdWx0eSB1cmluYXRpbmcuIApUdXF1IGhhcyBmb3VyIGNhc2VzOiBUaGUgZGlyZWN0IGNhc2UgaW5kaWNhdGVzIHRoZSBzeW50YWN0aWMgcGl2b3QgKHdoaWNoIGlzIGRldGVybWluZWQgYnkgdGhlIGRlZmluaXRlbmVzcyBhbmQgc3BlY2lmaWNpdHkgb2YgdGhlIHZlcmIgYXJndW1lbnRzKS4gVGhlIG90aGVyIGNvcmUgYXJndW1lbnQgb2YgdHJhbnNpdGl2ZSB2ZXJicyBpcyBtYXJrZWQgd2l0aCB0aGUgaW5kaXJlY3QgY2FzZS4gVGhlIG9ibGlxdWUgbWFya3MgdGhlIHJlY2lwaWVudCBvZiBkaXRyYW5zaXRpdmUgdmVyYnMgKHVubGVzcyBpdCBpcyB0aGUgc3ludGFjdGljIHBpdm90KSBhbmQgdGhlIG9iamVjdCBvZiBhIHByZXBvc2l0aW9uOyB0aGUgb2JsaXF1ZSBmdW5jdGlvbnMgc2ltaWxhciB0byB0aGUgZGF0aXZlIGFuZCBsb2NhdGl2ZSBvZiBvdGhlciBsYW5ndWFnZXMuIApUaG9tcHNvbiBzYWlkLi4gClRoYXRzIHdoYXQgSSB2aWV3IHRoZSBjdXJyZW50IHN0YXRlIG9mIG1hbmhvb2QgaW4gdGhpcyBjb3VudHJ5L3dlc3QuIENyZWF0ZSBtYWxlIGRvbWluYXRlZCBzcGFjZXMgZm9yIG1lbiB0byBsZWFybi9yZSBsZWFybiBtYXNjdWxpbml0eS4gSSBhbiBpZGVhbGlzdCAocGVyaGFwcyBhIG5haXZlIG9uZSkgaW4gdGVybXMgb2YgY29tbXVuaXR5IGFuZCBmYW1pbHkgYW5kIHdvdWxkIGxpa2UgdG8gc2VlIHRoaXMgdHJhbnNpdGlvbi4uIApNYWRIaWdnaW5zICAgMSBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkNsZWFybHkgZ2V0dGluZyB0aGUgYXR0ZW50aW9uIG9mIHRoZSBidXllcnMgYW5kIGhhcyBhIG5pY2UgbWl4IG9mIHByb2R1Y3RzLiAKU3BhIEVhc3RtYW4gaW4gRWFzdG1hbiwgUXVlYmVjClRob3VnaCBJIGNhbiBhbHNvIHNlZSBob3cgdGhleSBjb3VsZCBzdWNrLiAKRXhwbGFpbmluZyBwb2tlciB0byBhIGNoZXNzIHBsYXllcgpBIGhhcHRpYyB0b3VjaCBkaWdpdGFsIGNyb3duIGlzIGFsc28gYW1vbmcgbmV3IGZlYXR1cmVzLCB3aGljaCBlbmFibGVzIDMwIHNlY29uZCBvbmUgdG91Y2ggaGVhcnQgcmF0ZSBtb25pdG9yaW5nIGFzIHdlbGwgYXMgZWFzaWVyIG5hdmlnYXRpb24gdGhyb3VnaCBhcHBzLiAKU28geW91IG1pZ2h0IGJlIGV2ZW4gcmlnaHQsIGJ1dCB3ZSBqdXN0IGd1eXMgb24gdGhlIGludGVybmV0IHdobyBkb24gaGF2ZSB0aGUgbnVtYmVycy4gCkluIG9uZSBvZiB0aGUgQmxhY2sgTGVnaW9uIGJvb2tzIHRoZSBuYXJyYXRvciAoYSBjaGFvcyBzb3JjZXJlcikgbWFrZXMgYSBjb21tZW50IGFsb25nIHRoZSBsaW5lcyBvZiAiTWV0YWwgaGFzIG1lbW9yaWVzIi4gT2J2aW91c2x5IGluYW5pbWF0ZSBvYmplY3RzIGRvbiByZW1lbWJlciB0aGluZ3MsIGJ1dCB0aGUgZW1vdGlvbnMgb2YgZXZlbnRzIHBhc3QgbGVhdmUgdGhlaXIgbWFyayBvbiBldmVyeXRoaW5nLCBlc3BlY2lhbGx5IHdoZW4gdGhvc2UgZW1vdGlvbnMgYXJlIGludGVuc2UsIHN1Y2ggYXMgZHVyaW5nIGNvbWJhdC4gV2VhcG9ucywgdmVoaWNsZXMsIGFuZCBhcm1vciBhcmUgYW1vbmcgdGhlIG1vc3Qgc3Ryb25nbHkgbWFya2VkIGJlY2F1c2UgdGhleSBhcmUgYnVzeSB0YWtpbmcgb3Igc2F2aW5nIGxpdmVzIGFuZCBwZW9wbGUgdGVuZCB0byBmZWVsIHN0cm9uZ2x5IGFib3V0IHRoYXQuLiAKQnV0IHdpdGhvdXQgZnVydGhlciBhZG8sIGxldCBnZXQgaW50byBob3cgeW91IGNhbiBzdGFydCBiZWNvbWluZyBhIHdpbm5pbmcgcGxheWVyIGFuZCBjbGltYiB0aHJvdWdoIHRob3NlIG1pY3JvcyEgVGhpcyB3aWxsIHByb2JhYmx5IGJlIGxvbmcuIApOb3Qgc3VyZSBJIGNhbGwgc29tZW9uZSB3aG8gY29lcmNlcyBoaXMgd29ya2VycyB0byB3b3JrIG9mZiB0aGUgY2xvY2sgb24gdGhlaXIgb25seSBkYXkgb2ZmIGNvdW50cyBhcyBhIHNvbWVvbmUgd2hvIHN0aWNrcyB1cCBmb3IgaGlzIGVtcGxveWVlcy4KSSBiZWxpZXZlIGhlIGRpZCBoYXZlIGVub3Jtb3VzIHdoaXRlLCBmZWF0aGVyIHdpbmdzLCBidXQgSSBhbSBmdXp6eSBvbiB0aGF0LiBIZSB3YXMgbm90IHNtYWxsIGFuZCBjdXRlLiBIZSB3YXMgcHVycG9zZWZ1bGx5IGJsaW5kIHdoZW4gb3V0IHdpdGggaGlzIGFycm93cyAoZ29pbmcgYWxvbmcgd2l0aCB0aGUgd2hvbGUgbGl2ZSBpcyBibGluZCBjb25jZXB0KS4gCkJlY2F1c2UgTGlicmF0dXMgdHlwaWNhbGx5IHBsYXlzIGFjY29yZGluZyB0byBhIHByZSBjb21wdXRlZCBibHVlcHJpbnQgc3RyYXRlZ3kgb24gdGhlIGZpcnN0IHR3byBiZXR0aW5nIHJvdW5kcywgaXQgcm91bmRzIGFuIG9mZiB0cmVlIG9wcG9uZW50IGJldCBzaXplIHRvIGEgbmVhcmJ5IGluIGFic3RyYWN0aW9uIGFjdGlvbi4gVGhlIGJsdWVwcmludCBhY3Rpb24gYWJzdHJhY3Rpb24gb24gdGhvc2Ugcm91bmRzIGlzIGRlbnNlIGluIG9yZGVyIHRvIG1pdGlnYXRlIHRoaXMgd2Vha25lc3MuIEluIGFkZGl0aW9uLCBMaWJyYXR1cyBoYXMgYSB1bmlxdWUgc2VsZiBpbXByb3ZlbWVudCBtb2R1bGUgdG8gYXVnbWVudCB0aGUgYmx1ZXByaW50IHN0cmF0ZWd5IG92ZXIgdGltZSB0byBjb21wdXRlIGFuIGV2ZW4gY2xvc2VyIGFwcHJveGltYXRpb24gdG8gTmFzaCBlcXVpbGlicml1bSBpbiBwYXJ0cyBvZiB0aGUgZ2FtZSB0cmVlIHdoZXJlIHRoZSBvcHBvbmVudHMgaW4gYWdncmVnYXRlIGhhdmUgZm91bmQgcG90ZW50aWFsIGhvbGVzIGluIGl0cyBzdHJhdGVneS5JbiB0ZXJtcyBvZiBldmFsdWF0aW9uICAgaW4gYWRkaXRpb24gdG8gd2hhdCBMZXR0ZXJSaXAgd3JvdGUgYWJvdmUgYWJvdXQgdGhlIGV2YWx1YXRpb24gYWdhaW5zdCBodW1hbnMgICBEZWVwU3RhY2sgd2FzIG5ldmVyIHNob3duIHRvIG91dHBlcmZvcm0gcHJpb3IgcHVibGljbHkgYXZhaWxhYmxlIHRvcCBBSXMgaW4gaGVhZCB0byBoZWFkIHBlcmZvcm1hbmNlLCB3aGVyZWFzIExpYnJhdHVzIGJlYXRzIHRoZSBwcmlvciBiZXN0IEhVTkwgcG9rZXIgQUkgQmFieSBUYXJ0YW5pYW44ICh3aGljaCB3b24gdGhlIDIwMTYgQW5udWFsIENvbXB1dGVyIFBva2VyIENvbXBldGl0aW9uKSBieSBhIGxhcmdlIG1hcmdpbiAoNjMgbWJiL2dhbWUpLkFzIHRvIGNvb3BlcmF0aW9uLCB0aGUgdHdvIHJlc2VhcmNoIGdyb3VwcyBoYXZlIGJlZW4gcHVibGlzaGluZyB0aGVpciB0ZWNobmlxdWVzIGFuZCBidWlsZGluZyBvbiBlYWNoIG90aGVycyB0ZWNobmlxdWVzIGZvciAxMyB5ZWFycyBub3cuIApPYXRtZWFsLiBFc3BlY2lhbGx5IGlmIHlvdSBmbGF2b3VyIHdpdGggYnJvd24gc3VnYXIhIE9yIGhvbmV5LgpJZiB5b3VyIEVudHJ5IGlzIGdldHRpbmcgYSBiaXQgbGVuZ3RoeSAoMSwyMDAgd29yZHMgb3IgbW9yZSkgdGhlbiBpdCBpcyBsaWtlbHkgdG8gbmVlZCBkaXZpZGluZyBpbnRvIHNlY3Rpb25zIHdpdGggaGVhZGVycy4gCklmIHlvdSBoYXZlbiBiZWVuIHRoZXJlIHlldCAoYW5kIGxpa2UgY29mZmVlKSBpdCBkZWZpbml0ZWx5IHdvcnRoIGEgc3RvcCBpZiB5b3UgcGFzc2luZyBFeGl0IDkxLi4gCkEgd2hvbGUgcGFjayBvZiBtdXNoZXJzIGFyZSBub3cgb24gdGhlIHRyYWlsIGJldHdlZW4gT3BoaXIgYW5kIElkaXRhcm9kLCBpbmNsdWRpbmcgTWl0Y2ggU2VhdmV5IHdobyBmaW5hbGx5IGluIHRoZSB0b3AgdGVuLiBTZXZlcmFsIHdlcmUgcmVzdGluZyB0b2dldGhlciwgaW5jbHVkaW5nIEpvYXIgdW50aWwgTmljIGNhbWUgdGhyb3VnaCBhbmQgSm9hciB0b29rIG91dCBhZnRlciBoaW0uIApIZSBsaWVkIGFib3V0IHRoZSBwdXJwb3NlIG9mIHRoZSBzdGlwdWxhdGlvbiwgYW5kIGhhcyB0b2xkIG1lIHRvIHdhaXQgZm9yIGhpcyB1cGRhdGVkIHN0aXB1bGF0aW9uIGJ1dCBoYXNuIHNlbnQgbWUgYW55dGhpbmcgYW5kIGlzIG5vdyB0ZWxsaW5nIG1lIG5vdCB0byBib3RoZXIgaGltLiBCYXNpY2FsbHkgdG95ZWQgd2l0aCBtZSBmb3IgdHdvIG1vbnRocyB0aGlua2luZyB0aGF0IHdlIHdpbGwgY29tZSB0byBhbiBhZ3JlZW1lbnQgd2l0aG91dCBtZSBuZWVkaW5nIHRvIGhpcmUgYW4gYXR0b3JuZXkuClBhcmFjaHV0ZTc0NDIgdQpOb2dsZSByIHRpbGJhZ2Ugc2FkIGplZyBzZWx2IHNvbSBmb3JzZ3NrYW5pbiB1bmRlciBtaW4gRGFuc2sgQSBla3NhbWVuIHAgSEYgZm9yIGVuIGVrc2FtZW5zbW9kZWwsIHNvbSBsb2Qgb3MgYnJ1Z2UgaW50ZXJuZXR0ZXQgcHJjaXN0IHNvbSB2aSB2aWxsZSAgIGVuZXN0ZSByZWdlbCB2YXIsIGF0IHZpIGlra2UgbXR0ZSBrb21tdW5pa2VyZSBtZWQgb212ZXJkZW5lbi4gWW91VHViZSwgRmFjZWJvb2ssIEdvb2dsZSwgU3R1ZGllcG9ydGFsZW4sIHdoYXRldmVyIHNpZGVyIGR1IGdpayBpbmQgcCB2YXIgZnJpdCBzcGlsLiAKQ2xhcmtlIGxpa2UgbW9ub2xpdGhzIG9yIEFiYm90dCBGbGF0bGFuZCBvYmplY3RzPyBXZWxsLCBuby4gQnV0IGl0IGlzIGVuam95YWJsZSB0byBmaW5kIHRoZXNlIHByaW50ZWQgZm9ybXMgdGhhdCwgaWYgd2UgbG9vayBhdCB0aGVtIGluIGEgY2VydGFpbiB3YXkgYW5kIGFsbG93IGZvciBhIGJpdCBvZiBmYW5jeSwgdGFrZSBvbiBhIGxpZmUgb2YgdGhlaXIgb3duLiAKU2hlIHdhcyBzdHVjayBpbiBhIFRlY2gvTWFudWZhY3R1cmluZyBjb21wYW55IGZvciB0aGUgcGFzdCBmZXcgeWVhcnMgdGhhdCB3YXMgdmVyeSBtdWNoIGFnYWluc3QgcHJvbW90aW5nIHdvbWVuLiBTaGUgdXNlZCBpdCB0byBidWlsZCB1cCBoZXIgcmVzdW1lIGEgYml0IGFuZCB3aGVuIHNoZSBwdXQgdGhlIHdvcmQgb3V0IHNoZSB3YXMgbG9va2luZyBmb3IgYSBuZXcgam9iIGFib3V0IGEgbW9udGggYWdvIHNoZSBoYWQgbXVsdGlwbGUgb2ZmZXJzIHRoYXQgd2VyZSBhbGwgYmlnIHN0ZXBzIHVwLiAKWnUgZGllc2VtIEFubGFzcyB3aXJkIHZvciBhbGxlbSBhdWNoIGRpZSBrdWx0dXJlbGxlIEVpZ2Vuc3RuZGlna2VpdCBkZXIgS2FuYXJlbiBiZXRvbnQgdW5kIGRlciBTdG9seiBkZXIgS2FuYXJlbiBpc3Qgc3ByYmFyLiBBbiBkaWVzZW0gVGFnIGlzdCBhbGxlcywgd2FzIGthbmFyaXNjaCBpc3QsIGJlc29uZGVycyBzY2huLCBiZXNvbmRlcnMgc2VoZW5zd2VydCB1bmQgc2NobWVja3QgYmVzb25kZXJzIGd1dCAgQW0gVm9yYWJlbmQgZGVzIEZlaWVydGFnZXMgZ2FiIGVzIGluIExvcyBMbGFub3MgZWluZW4gdm9tIEFtdCBmciBLdWx0dXIgdW5kIGhpc3RvcmlzY2hlcyBFcmJlIiB2ZXJhbnN0YWx0ZXRlbiBVbXp1ZyBtaXQgZGVuIHRyYWRpdGlvbmVsbGVuIFRyYWNodGVuIGF1cyBtYW50byB5IHNheWEiIChVbWhhbmcgdW5kIFJvY2spLiAKQSBob2xkb3V0IGlzIGFueSBkZXZpY2UgdXNlZCB0byBzZWNyZXRseSBicmluZyBhIGNhcmQgZnJvbSBvdXRzaWRlIHRoZSBnYW1lIGludG8gdGhlIHBsYXllcidzIGhhbmQuIApUaGVzZSBwYXN0IHRoaXJ0eSBkYXlzIGhhdmUgYmVlbiBlbm9ybW91c2x5IGluc3RydWN0aXZlIGFuZCByZWluZm9yY2VkIG15IHJlYXNvbnMgZm9yIGJ1aWxkaW5nIGEgY29yZSBwb3J0Zm9saW8gYXJvdW5kIGRpdmlkZW5kIHBheWluZyBlcXVpdGllcy4gVGhlIGZpcnN0IGFuZCBtb3N0IGltcG9ydGFudCByZWFzb24gdG8gZm9jdXMgb24gZGl2aWRlbmQgcGF5aW5nIHN0b2NrcyBpcyB0byBjYXBpdGFsaXplIG9uIHRoZSBlbm9ybW91cyBlZmZlY3RzIG9mIGNvbXBvdW5kaW5nLiAKWW91IGhhdmUgdG8gd29yayBoYXJkLCB5b3UgaGF2ZSB0byBzYWNyaWZpY2UsIGFuZCB5b3UgaGF2ZSB0byBkbyB3aGF0ZXZlciBpdCB0YWtlcy4gCkhhZCB3ZSBmb2xsb3dlZCBvdXIgcG9saWN5LCB0aGlzIHdvdWxkIGhhdmUgbmV2ZXIgaGFwcGVuZWQuIApDb25zaWRlciB5b3VyIHBvc2l0aW9uLiBJZiB5b3UgYXJlIHBsYXlpbmcgYSB2aWRlbyBzbG90IHdpdGggMTAwIHBheWxpbmVzIGF0ICQxIHBlciBsaW5lLCB5b3VyIG1pbmltdW0gYmV0IGlzICQxMDAgcGVyIHBsYXkuIFlvdSBhcmUgbm93IHBsYXlpbmcgYSBoaWdoIGxpbWl0IGJldCBvbiBhICQxIHNsb3QuIApUaGUgcG9pbnQgaXMgdGhhdCBrbm93bGVkZ2UsIHJlZ2FyZGxlc3Mgb2YgZGlzY2lwbGluZSwgaXMgcG93ZXJmdWwgYW5kIG5lY2Vzc2FyeSBmb3IgaHVtYW4gcHJvZ3Jlc3MuIEkgZG91YnQgYW55b25lIGNvdWxkIHN0cm9sbCBpbnRvIHVuaXZlcnNpdHkgYW5kIGNhc3VhbGx5IGF0dGFpbiBhIHNwZWNpYWxpemVkIGRlZ3JlZSBmb3IgYSBmaWVsZCBpbiB3aGljaCBoZS9zaGUgaGVsZCBubyBpbnRlcmVzdCBvciBwYXNzaW9uLiAKU29tZSB3aG8ndmUganVua2VkIHNoYW1wb28gdXNlIG9ubHkgaG90IHdhdGVyIHRvIHJpbnNlIHRoZSBoYWlyLiBPdGhlcnMgdXNlIG9ubHkgY29uZGl0aW9uZXIsIHdoaWNoIGNhbiBiZSBlc3BlY2lhbGx5IGhlbHBmdWwgZm9yIHRoZSBjdXJseSBoYWlyIHRoYXQgdGVuZHMgdG8gZGVoeWRyYXRlIHF1aWNrbHkgYW5kIGV4cGxvZGUgaW50byBmcml6emllcy4gQnV0IGZvciBMeW5jaCBhbmQgaGVyIGxpa2UgbWluZGVkIG5vIHBvb2VycywgdGhlIGNsZWFuc2VyIG9mIGNob2ljZSBpcyBzaW1wbHkgYSA1OSBjZW50IGJveCBvZiBiYWtpbmcgc29kYTogU2hlIG1peGVzIG9uZSB0ZWFzcG9vbiB3aXRoIG9uZSBjdXAgb2Ygd2F0ZXIuLiAKVGhlcmUgaXMgbm93IGhpZ2hseSBjcmVkaWJsZSBldmlkZW5jZSB0aGF0IHRoZSBwcmVzaWRlbnQgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgY29tbWl0dGluZyBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlIGluIHJlYWwgdGltZSwgcmlnaHQgYmVmb3JlIG91ciBleWVzLiIuLiAKU2luY2UgeW91IGZhaWwgdG8gY2l0ZSBhbnkgc3BlY2lmaWMgc3RydWN0dXJlcyBoZXJlLCBJIGNhbiByZWFsbHkgYWRkcmVzcyB3aGF0IGV4YWN0bHkgY2F1c2VzIHlvdSB0byB0aGluayB0aGlzLiBOb3Igd2FzIHRoaXMgdGhlIG9ubHkgZm9yY2UgYXQgcGxheSB3aXRoIHJlZ2FyZCB0byB1c2Ugb2YgbGFuZ3VhZ2UgaW4gZWFybHkgMjB0aCBjZW50dXJ5IENoaW5hLiBXaGlsZSBzb21lIGRlZ3JlZSBvZiBXZXN0ZXJuaXphdGlvbiB3YXMgZGVmaW5pdGVseSBhdCBwbGF5IGluIHRoZSBlYXJseSAyMHRoIGNlbnR1cnksIHRoZSBzaXR1YXRpb24gd2FzIGZhciBtb3JlIGNvbXBsaWNhdGVkIHRoYW4gdGhhdC4gClVzdWFsbHkgY2FzaW5vcyBoYXZlIGRpZmZlcmVudCBzdGF0dXMgbGV2ZWxzIGZvciB0aGVpciBwbGF5ZXIncyBjbHVicy4gVGhlIG1vcmUgeW91IHBsYXkgdGhlIGhpZ2hlciBzdGF0dXMgeW91IHdpbGwgYWNoaWV2ZSwgd2hpY2ggd2lsbCBldmVudHVhbGx5IGVhcm4geW91IG1vcmUgcG9pbnRzIGFuZCBjb21wZW5zYXRpb24gZm9yIHRoaW5ncyBsaWtlIGhvdGVscy4KSW4gdGhlIFVTLCB0aGUgY29udmVudGlvbiBpcyBub3cgdG8gcmVnYXJkIGFueXRoaW5nIG92ZXIgMy4wNCBhcyAncmFpc2VkJy4KVGhlIEVQVCBCYXJjZWxvbmEgRmVzdGl2YWwsIHRoZSB1bm9mZmljaWFsIGtpY2tvZmYgdG8gdGhlIGZpbmFsIGxlZyBvZiB0aGUgMjAxNSBwb2tlciBzZWFzb24sIHJldHVybnMgdGhpcyB3ZWVrIHdpdGggb3ZlciA3MCBldmVudHMgYmVpbmcgcHJlc2VudGVkLCBpbmNsdWRpbmcgdGhlIE1haW4gRXZlbnQsIHdoaWNoIGhhcyBiZWNvbWUgb25lIG9mIHRoZSBiaWdnZXN0IGV2ZW50cyBvbiB0aGUgcG9rZXIgY2lyY3VpdC4gTGFzdCB5ZWFyLCBHZXJtYW4gcGxheWVyQW5kcmUgTGV0dGF1IChHUEkgTm8uIApZb3UgbmVlZCB0byBzcGVuZCBtb3JlIHRpbWUgb24gc29tZSBvZiB0aGUgZGVmYXVsdCBwb2xpdGljYWwgc3Vicy4gUGxlbnR5IG9mIHBlb3BsZSBsb3ZlIHRoZSBpZGVhIG9mIGEgZGFkZHkgZmlndXJlIHRlbGxpbmcgdGhlbSBob3cgdG8gbGl2ZSB0aGVpciBsaXZlcywgYW5kIGZvciB0aGUgcmVzdCwgdGhleSB0ZWxsIHlvdSB0aGF0IHRoZXkgd291bGQgYmUgZmluZSB1bmRlciBhbmFyY2h5IGJ1dCBpdCBhbGwgdGhvc2Ugb3RoZXIgc3R1cGlkIHBlb3BsZSB3aG8gbmVlZCB0aGVpciBsaXZlcyBtYW5hZ2VkIGF0IGd1bnBvaW50Li4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpJZiBzaGUgZGlkbiB3YW50IHRvIHBhcmVudCBhIGJhYnkgdGhlbiBzaGUgc2hvdWxkbiBoYXZlIGhhZCBhbm90aGVyLiAKUm9jIE5hdGlvbiBpbnRlbmRzIHRvIGJlIGFuIGFnZW5jeSBub3QgYSBicmFuZGluZyBhZ2VuY3kuIApPdmVydmlldyBmb3IgU3dhdExha2VDaXR5CmNvbSB1bnZlaWxzIG5ldyBzb2Z0d2FyZSB1cGdyYWRlIGZvciBlbmhhbmNlZCBnYW1lIHBsYXkKWWV0IGl0IG1vc3QgbGlrZWx5IHBvc3NpYmxlIGFueXRoaW5nIG9uICJpVHVuZXMiY2FuIGJlIGZvdW5kIG9uIFZpbnlsL0NEIGZvciBoaWdoZXIgcXVhbGl0eS4gSW4gYWRkaXRpb24sIHRoZSB0ZXJtInlvdXR1YmUiIHRocm91Z2hvdXQgdGhlIGxpc3QgaXMgdXNlZCBoZXJlIHRvIG1lYW4geW91dHViZSBpdHNlbGYsYnV0IGFsc28gInRoZSBpbnRlcm5ldCIgaW4gZ2VuZXJhbC4gCkJyZW50IG1ha2VzIHBlcmZlY3QgdG9hc3QsIGV2ZXJ5IHRpbWUuIAoxMjcsIHBwLiAKUGxheWVycyBjYW4gcHV0IG9uIG9yIHRha2Ugb2ZmIGphY2tldHMsIGJ1dCB0aGV5IGNhbm5vdCwgZm9yIGluc3RhbmNlLCBjaGFuZ2UgaW50byBhIHNwb25zb3IncyBnZWFyIHdoaWxlIGhlYWRpbmcgdG8gdGhlIGZlYXR1cmUgdGFibGUuClRoZXkgYXJlIG9mdGVuIHVzZWQgZm9yIGFkdmVydGlzaW5nIHByb2R1Y3RzLCB3aGlsZSBzb21lIG9mIHRoZW0gYXJlIHNwZWNpZmljYWxseSBkZXNpZ25lZCBieSBwb2tlciBmYW5hdGljcy4gClRoZSBEZXB1dGllcyByYWRpbyBpbnRvIENsYXkgdGhhdCB0aGV5IHRhbGtlZCB0byBNYXh3ZWxsLiBIZSBoYWQgbGFzdCBzZWVuIGhlciBhdCBzY2hvb2wgYW5kIGhhZCBubyBpZGVhIHdoZXJlIHNoZSB3ZW50LiBUaGV5IHRhbGtlZCB0byB0aGUgc2Nob29sIGFuZCBsZWFybmVkIHRoYXQgTWF4d2VsbCB3YXMgdGhlcmUgZm9yIHRoZSB3aG9sZSBzY2hvb2wgZGF5LiBUaGV5IGhhZCBhc2tlZCBpZiBhbnlvbmUgd2FzIG1pc3NpbmcgYWZ0ZXIgdGhpcmQgaG91ci4KU28gaGUgd2FudHMgdG8gY2hhbmdlIHRoYXQgc3RhdGlzdGljLiAKVGFuZ2VudCB0byBQb2x5dmFnYWwgdGhlb3J5LCBhbiBldmVyeWRheSBwcmFjdGljYWwgbWV0aG9kIGZvciBsZWFybmluZyB0byByZXNvbHZlIGNocm9uaWMgdGVuc2lvbiwgY2FuIGJlIGZvdW5kIHZpYSBUaG9tYXMgSGFubmEgImNhdCBzdHJldGNoIiBleGVyY2lzZXMuIApUaGFua3MgdG8gbXkgYmVpbmcgaW4gdGhlIFdCQywgSSBoYXZlIGhhZCB0aGUgZ29vZCBmb3J0dW5lIHRvIHdpdG5lc3MgdGhpcyB3b25kZXJmdWwgdXJiYW4gdHJhbnNmb3JtYXRpb24sIHdoaWNoIGlzIG5vdyB0aGUgd29ybGR3aWRlIGJldHRpbmcgY2VudGVyLiBKdXN0IGZyb20gbXkgbWVtb3JpZXMgZHVyaW5nIG15IHRob3VzYW5kcyBvZiB0cmlwcywgSSBjYW4gaW5kZWVkIGJlbGlldmUgYW5kIGFwcHJlY2lhdGUgd2hhdCBpdCB3YXMgdGhlbiwgYW5kIHdoYXQgdGhpcyBsdW1pbm91cyBjaXR5IGlzIG5vdyBhbHNvIHRoZSByZXNwbGVuZGVudCBob3VzZSBvZiBib3hpbmcuLiAKTWluZSBhcmUgNTUvNTAgYW5kIGRvY3RvcnMgdXN1YWxseSByZWNvbW1lbmQgc3VyZ2VyeSBvbmx5IGlmIHlvdSBleGNlZWQgdGhhdCByYW5nZS4gCkl0IGhhcyBiZWVuIHBhY2thZ2VkIGluIGEgYmVhdXRpZnVsIHdheSB3aGljaCB3aWxsIGF0dHJhY3RzIHlvdSB0byBidXkgaXQgb3IgZm9yIGdpZnRpbmcgaXQgdG8geW91ciBzcGVjaWFsIG9uZS4gSXRzIGJsYWNrIG91dHNpZGUgYW5kIHNsZWVrIGJvZHkgZmVhdHVyZSBhcmUgbWFkZSBpbiBhIG1vZGVybiBzdHlsaXNoIHdheSB0aGF0IHdpbGwgZGVmaW5pdGVseSBncmFiIHlvdXIgYXR0ZW50aW9uIGFuZCBtYWtlIHlvdSBmYWxsIGluIGxvdmUgd2l0aCBpdCB3aGVuIHlvdSB3aWxsIGxvb2sgYXQgaXQgZm9yIHRoZSBmaXJzdCB0aW1lLiAKU3RyYW5nZXJzIG9uIHRoZSBzdHJlZXQgd2lsbCB0cmVhdCB5b3UgYmV0dGVyIHRoYW4gZmFtaWx5LiAKV291bGQgbWluaW11bSB3YWdlIGluY3JlYXNlcyBhY3R1YWxseSBoZWxwIHRob3VnaD8gSSBzdGlsbCB0aGluayB0aGV5IHdvdWxkIGJ1dCBpdCdzIHJlYWxseSB3ZWFsdGggaW5lcXVhbGl0eSB0aGF0J3MgdGhlIGlzc3VlLiBJZiB3ZSBkcml2ZSB1cCBtaW5pbXVtIHdhZ2UgbW9yZSBzbWFsbCBidXNpbmVzc2VzIGJlZ2luIHRvIGZhaWwuIApDb21iaW5lIHRoZSBjYWtlIG1peCwgcHVkZGluZyBtaXgsIGVnZ3MgYW5kIG9pbCBhbmQgYmxlbmQgd2VsbCB3aXRoIGFuIGVsZWN0cmljIG1peGVyIHVudGlsIHNtb290aCwgYWJvdXQgMiBtaW51dGVzLiBQb3VyIGEgc21hbGwgYW1vdW50IG9mIGJhdHRlciwgZmlsbGluZyBlYWNoIG11ZmZpbiB0aW4gaGFsZiB3YXkuIApUaGVuIEkgdG9sZCB0aGUgdm9pY2UsIGFtIG5vdCBsZWF2aW5nIG15IGJlZCwgeW91IGNhbiBtYWtlIG1lLCBhbmQgYWxsIEkgZXZlciB3YW50ZWQgd2FzIGEgbWFycmlhZ2UgbGlrZSBncmFuZG1hIG15IGdhd2Qsc2VyaW91c2x5ISBZb3VyIGdyYW5kcGFyZW50cyBkaWQgbm90IGhhdmUgYSBwZXJmZWN0IG1hcnJpYWdlIHlvdSBrbm93LiBNeSBmYXRoZXIgaGFkIGFmZmFpcnMgb24gbXkgbW90aGVyIGFsbCB0aGUgdGltZS4gCkkgdGhpbmsgcGVvcGxlIGFsc28gb25seSBsaWtlIHRvIHNlZSB0aGUgbmVnYXRpdmVzIGluIGNlcnRhaW4gdGhpbmdzLiBOb3QgbWFueSBwZW9wbGUgdGFsayBhYm91dCBuZXVyYWwgYWRhcHRpdml0eSwgc3VjaCBhcyB1cHJlZ3VsYXRpb24gYW5kIGRvd25yZWd1bGF0aW9uLCBhbmQgdGhlIGJyYWluIGFiaWxpdHkgdG8gYWRhcHQgYW5kIG9idGFpbiBob21lb3N0YXNpcy4gCkFwcmlsIDE0IDIwMTAgICAyOjE0QU0KU2FuZCwgZ3JhdmVsLCBzaGFsZSwgY2xheS4gClRoZSBBdGxhbnRpYyBXaXJlIHJlcG9ydHM6ICJBcyB0aGUgZGVhZGxpbmUgYXBwcm9hY2hlcywgYm90aCBwYXJ0aWVzIHdpbGwgc3RhcnQgZmxleGluZyBsZXNzIGFuZCBjb21wcm9taXNpbmcgbW9yZSAgQWNjb3JkaW5nIHRvIFRoZSBOZXcgWW9yayBUaW1lcywgdGhlIFJlcHVibGljYW4gaGFyZCBsaW5lIHN0YW5jZSBvbiByYWlzaW5nIHRheGVzIGlzIHN0YXJ0aW5nIHRvIHNwbGludGVyLiAKVHJ1bWJvIGhhcyBhbiBpbnRlcmVzdGluZyBoaXN0b3J5LCB0byBwdXQgaXQgbWlsZGx5LiAKUGVyaGFwcyB0aGUgc2FtZSBpcyB0cnVlIG9mIFBlYXNhbnQgYW5kIFlzLi4gCklmIHRoZXkgaGFuZGxlZCBwcmV2aW91cyBwYXltZW50cyBkaWZmZXJlbnRseSAodGhyb3VnaCBUcnVtcCBoaW1zZWxmIG9yIHRoZSBmb3VuZGF0aW9uKSB0aGVuIFRydW1wIGNvdWxkIHBvdGVudGlhbGx5IHNlZSBzb21lIGphaWwgdGltZSBvbiB0aGlzIGlzc3VlIG9uY2UgaGUgaXMgb3V0IG9mIG9mZmljZS4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28uIAoiUGVvcGxlIGxpa2UgaXQgYmVjYXVzZSB5b3UgZ2V0IHRoZSBjcm93ZCBnb2luZywgeW91IGRvIHRoZSBkYW5jZSB0b2dldGhlci4gZXZlcnlib2R5IGFza3MgZm9yIGl0LiIKUmVhZGluZyAiYSIgYm9vayBvciBhIHdpa2kgcGFnZSBkb2VzIG5vdCBtYWtlIHlvdSBhbiBleHBlcnQgb24gdGhlIHN1YmplY3QgYW5kIGl0IHByZXR0eSBvZmZlbnNpdmUgdG8gaGF2ZSB5b3Ugc3VnZ2VzdCBwZW9wbGUgc2hvdWxkIHJlYWQgdXAgb24gYSBzdWJqZWN0IHlvdSB0YWxraW5nIHNoaXQgYWJvdXQhIEFsc28gZGVmZW5kaW5nIEJyaXRhaW4gdHJlYXRtZW50IG9mIHVzIElyaXNoIGJ5IHNheWluZyB0aGV5IG5vdCBhcyBiYWQgYXMgdGhlIE5hemlzIGlzIGEgcHJldHR5IHRoaW4gYXJndW1lbnQgdG8gYmVnaW4gd2l0aC4gClN0YW5kYXJkIHZpZGVvIHBva2VyIGluY2x1ZGUgSmFja3Mgb3IgQmV0dGVyLCBEZXVjZXMgV2lsZCwgMTAncyBvciBCZXR0ZXIsIEFjZXMgRmFjZXMsIEpva2VyIFBva2VyLCBNZWdhamFja3MgYW5kIDIgV2F5cyBSb3lhbC4gVGhlc2UgdmlkZW8gcG9rZXIgZ2FtZXMgYXJlIHVzdWFsbHkgY2hhcmFjdGVyaXplZCB3aXRoIHRoZSB1c2Ugb2YgdGVybXMgdGhhdCBoYXZlIHNvbWUgYWRqZWN0aXZlIGluIHRoZSB0aXRsZSBzdWNoIGFzICJkb3VibGUiLCBvciAidHJpcGxlIiBvciAiYm9udXMiLiAKSW5pdGlhbGx5LCBJIGhhdGVkIGdldHRpbmcgdXAgdGhpcyBlYXJseS4gQnV0IEkgZ2V0IDQwIG1pbnV0ZXMgb2Ygc3R1ZHkgZG9uZSBiZWZvcmUgSSBsZWF2ZSBmb3Igd29yay4gClRvZ2V0aGVyIHRoZXNlIHdpbGwgZGVsaXZlciBhbiBleGhpbGFyYXRpbmcgZXhwZXJpZW5jZSB1bmxpa2UgYW55dGhpbmcgYXZhaWxhYmxlIGluIEJpbG94aS4iLiAKMSBtbyBhZ28gKyBCeSBUZXJlc2EgRGl4b24gTXVycmF5LCBUaGUgUGxhaW4gRGVhbGVyCkEgY3JlZGlibGUgcmVzZXJ2ZSBjdXJyZW5jeSBkZXBlbmRzIG9uIGRlZXAgY2FwaXRhbCBtYXJrZXRzLCBob25lc3QgZ292ZXJubWVudCBhbmQgdGhlIHJ1bGUgb2YgbGF3IGFsbCBsYWNraW5nIGluIENoaW5hLi4gCldlbnQgaW4gaXQgc2F5aW5nIGlmIHdlIGNvdWxkIG1ha2Ugb3VyIHRlYW0gYmV0dGVyIG9yIGhlbHAgb3VyIHRlYW0gd2l0aG91dCB0YWtpbmcgYW55dGhpbmcgb2ZmIGl0IGFuZCBkb2luZyBpdCBhdCBhIHByaWNlIHRoYXQgd2Ugd2VyZSBjb21mb3J0YWJsZSB3aXRoIHRoZW4gc3VyZSB3ZSBsaWtlIHRvIGRvIGl0LCBzYWlkIEZsYW1lcyBHTSBCcmFkIFRyZWxpdmluZywgd2hvc2UgdGVhbSBvd25zIHRoZSBiZXN0IHJlY29yZCBpbiB0aGUgV2VzdGVybiBDb25mZXJlbmNlLiB0aG9zZSBvcHBvcnR1bml0aWVzIHdlcmVuIHRoZXJlIGZvciBpdC4gV2Ugd2VyZW4gZ29pbmcgdG8gZG8gc29tZXRoaW5nIGp1c3QgdG8gZG8gaXQuIHlvdSBhZGQgcGVvcGxlIG9yIHlvdSBkb24gaXQgYW4gZXh0cmVtZWx5IHRvdWdoIGxlYWd1ZSB0byB3aW4sIHNhaWQgSmV0cyBHTSBLZXZpbiBDaGV2ZWxkYXlvZmYsIHdobyBnYXZlIHVwIGEgZmlyc3Qgcm91bmQgcGljayBmb3IgTm8uIDIgY2VudHJlIEtldmluIEhheWVzLiBvciBub3QgYWRkaW5nIGRvZXMgbm90IGd1YXJhbnRlZSB5b3UgYW55dGhpbmcuIGJlIGZhaXIsIEtla2FsYWluZW4gc2FpZCBoZSB3YXNuIHRyeWluZyB0byBidXkgYSBjaGFtcGlvbnNoaXAgYXQgdGhlIGRlYWRsaW5lLiBIZSBqdXN0IHdhbnRlZCB0byBidXkgYSB0aWNrZXQgdG8gdGhlIGRhbmNlLiBXaXRoIHRoZSBlaWdodCBwbGFjZSBDYW5hZGllbnMgb24gcGFjZSBmb3IgOTYgcG9pbnRzLCBpdCBhIHByaWNleSBwcm9wb3NpdGlvbi4KVGhlIHJvb20gd2FzIGRpbWx5IGxpdCBhbmQgdmVyeSBjb2xkLgpXb3VsZCBtaW5pbXVtIHdhZ2UgaW5jcmVhc2VzIGFjdHVhbGx5IGhlbHAgdGhvdWdoPyBJIHN0aWxsIHRoaW5rIHRoZXkgd291bGQgYnV0IGl0J3MgcmVhbGx5IHdlYWx0aCBpbmVxdWFsaXR5IHRoYXQncyB0aGUgaXNzdWUuIElmIHdlIGRyaXZlIHVwIG1pbmltdW0gd2FnZSBtb3JlIHNtYWxsIGJ1c2luZXNzZXMgYmVnaW4gdG8gZmFpbC4gVGhlIGhvcGUgaXMgdGhhdCB0aG9zZSBwZW9wbGUgY2FuIHB1dCBtb3JlIGJhY2sgaW50byB0aGUgZWNvbm9teSBidXQgd2hhdCBoYXBwZW5zIHdoZW4gbWluaW11bSB3YWdlcyBjYXRjaGVzIHVwIHRvIHRoZSB3YWdlcyBtYW55IGNvbGxlZ2UgZ3JhZHVhdGVzIGFyZSByZWNlaXZpbmc/IERvIHRoZWlyIHdhZ2VzIGdvIHVwIGFzIHdlbGwgb3IgZG8gcGVvcGxlIHN0b3AgZ29pbmcgdG8gY29sbGVnZT8gRG8gcGVvcGxlIHJlIGludmVzdCBvciBpcyBpdCBub3cganVzdCBlbm91Z2ggdG8gZ2V0IGJ5PyBUaGUgaW5jcmVhc2UgaW4gdGhlIGNvc3Qgb2YgZ29vZHMgc2hvdWxkIGJlIG1hcmdpbmFsIG92ZXJhbGwgYnV0IHRoZXJlIGFyZSBtYW55IG90aGVyIHBvc3NpYmxlIG5lZ2F0aXZlIGVmZmVjdHMuIApNeSBtb3RoZXIgZ290IGEgdmlydXMgaW5mZWN0aW9uIChoZXJwZXMgem9zdGVyLCBha2Egc2hpbmdsZXMpIGluIGhlciBicmFpbi4gClBva2VyIG1lcmNoYW50cyBoYXZlIGFsc28gYmVjb21lIHZlcnkgaW50ZXJlc3RlZCBpbiB0aGVzZSBwcm9kdWN0cyBhbmQgdGhleSBhbHJlYWR5IGhhdmUgY3JlYXRlZCBhIG5ldyBpbmR1c3RyeSBvZiBwb2tlciBidXNpbmVzcyBnZW5lcmljYWxseSBrbm93biBhcyBwb2tlciBjb2xsZWN0aWJsZXMgYXJvdW5kIHRoZSB3b3JsZC4gWW91IHdpbGwgZmluZCBkaWZmZXJlbnQgdHlwZXMgb2YgcHJvZHVjdHMgYXZhaWxhYmxlIGluIHRoZSBwb2tlciBzdG9yZXMgbm93YWRheXMuIApTcGVjaWFsaXN0IHZldGVyaW5hcnkgYWR2aWNlIGFuZCBnaXZlYXdheSBkb2cgZ29vZGllcy4gVGhlIGJyZWFrZmFzdCB3aWxsIGFsc28gYmUgYW4gb3Bwb3J0dW5pdHkgZm9yIGRvZyBvd25lcnMgdG8gZmluZCBob3cgdGhleSBjYW4gaGVscCBwcm90ZWN0IHRocmVhdGVuZWQga29hbGFzLiAKTm90IG9ubHkgaGFkIGl0IHN1ZmZlcmVkIHRoZSBsb25nZXN0IHJldHJlYXQgZXZlciBpbiBCcml0aXNoIG1pbGl0YXJ5IGhpc3RvcnkgZHVyaW5nIHRoZSBpbnZhc2lvbiBvZiBCdXJtYSwgYnV0IGl0IGhhZCByZXBlYXRlZGx5IGJlZW4gbWlzdXNlZCBpbiBhY3Rpb25zIHRoYXQgaXQgd2FzbiByZWFkeSBmb3IuIApBIGJldHRlciBkcmF3IChhIGJldHRlciBzcGFkZSBmb3IgaW5zdGFuY2UpIEkgY2hlY2sgYWxsIGRheSBsb25nIGFuZCBjYWxsIGEgc21hbGxlciBiZXQgZnJvbSB0aGUgZ3V5LiAKIktlZXAgeW91ciBleWVzIG9uIHRoZSByb2FkIiBoYXMgYmVlbiB0aGUgbWFudHJhIG9mIGV2ZXJ5IGRyaXZlcidzIGVkdWNhdGlvbiB0ZWFjaGVyIGFuZCBuZXJ2b3VzIHBhc3NlbmdlciwgYXMgd2VsbCBhcyB0aGUgb2NjYXNpb25hbCByb2NrIHN0YXIgKFRoZSBEb29ycyBpbmNsdWRlZCB0aGUgYWR2aWNlIGluIHRoZWlyIHNvbmcgIlJvYWRob3VzZSBCbHVlcyIpLiAKUG93ZXIgd2FzIGdpdmVuIHRvIHRoZSBGQ0MgYnkgQ29uZ3Jlc3MgdG8gcmVndWxhdGUgdGVsZWNvbW11bmljYXRpb25zLCBhaXJ3YXZlcywgYW5kIGNhYmxlIGNvbXBhbmllcy4gSVNQcyBwcmV0dHkgbXVjaCBmYWxsIHVuZGVyIHRoZWlyIHB1cnZpZXcgYmVjYXVzZSBvZiB0aGF0LiBJIGRvIG5vdCB1bmRlcnN0YW5kIHdoYXQgeW91IGV2ZW4gbWVhbiBieSBkaWN0YXRlIGV2ZXJ5dGhpbmcuCkluIHNvbWUgY29udGV4dHMsIHJlZCBjYW4gcHJvdm9rZSBvdGhlciBlbW90aW9ucywgc29tZXRpbWVzIHVuZGVzaXJhYmxlLiAKVGhhbmtzZ2l2ZSAgMjM1IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClBsZWFzZSBsZXQgdXMga25vdyBhbmQgd2UgY2FuIHBpY2sgdXAuIApZZWFoLCBmb3Igc29tZSByZWFzb24gdGhlIHdpZGUgb3BlbiBzcG90IHJpZ2h0IHdoZXJlIGhlIGFwcHJvYWNoZWQgd2FzIG5vdCBnb29kIGVub3VnaC4gVGhlbiwgYWZ0ZXIgdGhlIHRoZSBwZXJzb24gaW4gZnJvbnQgb2YgeW91IHdvdWxkbiBsZXQgaGltIGluLCBoZSBoYWQgdGhhdCB0aGluZyB3aGVyZSBwZW9wbGUgZGVjaWRlICJvaCwgeW91IGdvaW5nIHRvIGxldCBtZSBpbj8gSSBzaG93IHlvdSEgSSBjYW4gZ2V0IGFuIGV2ZW4gYmV0dGVyIHNwb3QgdXAgdGhlcmUhIi4uIAoiWW91ciBzY2FyaWVzdCBtb21lbnRzLCB5b3VyIGRhcmtlc3QgbmlnaHRzLiAKQW5kIHRoZSBwcml2YXRlIHByb3BlcnR5IHJ1bGVzIGFwcGx5IGNpdHkgd2lkZSwgdG9vLiAKTWFueSBvZiB0aGUgcm91bmRzIHdlcmUgY2xvc2UgdW50aWwgU21pdGggd291bGQgcmV0cmVhdCB0byB0aGUgcm9wZXMsIHdoZXJlIGhlJ2QgZ2V0IGhpdCBieSBhIGZsdXJyeSBvZiBoZWFkIHNob3RzIGZyb20gQWJyYWhhbS4gCkFsdGVybmF0aXZlIEhlYWx0aApUaGUgdmFsdWF0aW9uIHJhbmcgaW4gYXQgJDc1MCwwMDAsIGJhc2VkIGluIHBhcnQgb24gc2FsZXMgb2YgJDM3NSwwMDAgc2VjdXJlZCBpbiB0aGUgZm91ciBtb250aHMgYmVmb3JlIHBpdGNoaW5nLiBBbGwgb2YgdGhlIGRyYWdvbnMgbWFkZSBhZ2dyZXNzaXZlIG9mZmVycywgYnV0IEppbSBUcmVsaXZpbmcsIG93bmVyIG9mIEJvc3RvbiBQaXp6YSBJbnRlcm5hdGlvbmFsIEluYy4sIG9mZmVyZWQgZXhhY3RseSB3aGF0IHRoZXkgYXNrZWQgZm9yIGFuZCB0aGV5IGFjY2VwdGVkLiAKTGEgc3RhciBhcmdlbnRpbmUgZHUgZm9vdCBDYXJsb3MgVGV2ZXo/ICJKZSBzdWlzIGFsbCBsZSBjaGVyY2hlciAgRm9ydCBBcGFjaGUiLCB1biBxdWFydGllciBtYWxmYW0gZGUgQnVlbm9zIEFpcmVzLCBwb3VyIDgwMCBldXJvcywgc2Ugc291dmllbnQgUmFtbiBNYWRkb25pLCB1biBkZXMgY2hhc3NldXJzIGRlIHRhbGVudHMgbGVzIHBsdXMgcHJlc3RpZ2lldXggZCdBcmdlbnRpbmUuClRoYXQgJDksMDQwIHBlciB5ZWFyIG5lZWRzIHRvIGdvIHRvd2FyZHMgYnVpbGRpbmcgdGhhdCBzYXZpbmdzIGFjY291bnQsIHdoaWNoIG9idmlvdXNseSB3aWxsIHRha2UgYSBiaXQgYXQgdGhhdCBwYWNlLi4gClBlb3BsZSBub3Qgc3BlYWtpbmcgRW5nbGlzaCBkb24gaGF2ZSBhbnkgb3RoZXIgbmV3cyBzb3VyY2VzLiAKQSB0ZWFtIG9mIHN1aXQgc3BlY2lhbGlzdHMgd2lsbCBzcHJpbmcgaW50byBhY3Rpb24gYXMgd2UgZG9uIGRpYXBlcnMsIGxvbmcgam9obnMgd2l0aCBibGFjayBzb2NrcyAoaXQgYSBmYXNoaW9uIHN0YXRlbWVudCksIGFuZCBzbGlwIGludG8gb3VyIFNva2hvbCBwcmVzc3VyZSBzdWl0cy4gV2UgYWN0dWFsbHkgY2xpbWIgaW4gdGhyb3VnaCB0aGUgZnJvbnQgYW5kIHBva2UgYXJtcywgbGVncyBhbmQgaGVhZCB1cCBpbnRvIHRoZWlyIG1hdGNoaW5nIGhvbGVzLCBsaWtlIGEgdHVydGxlIG91dCBvZiBoaXMgc2hlbGwuIFRoZXJlIGEgaGVhcnQgbW9uaXRvciBhbmQgY29tbSBjYXAgdG8gY2hlY2ssIGFuZCB0aGVuIHRoZSB3aG9sZSBlbnNlbWJsZSBnZXRzIHBsdWdnZWQuIApNYXJpamFjLCBlbiAxOTUzLCBzJ3RhaXQgaW50ZXJkaXQgZGUgcmFjb250ZXIgIHNlcyBqZXVuZXMgbGVjdGV1cnMgbGEgbW9ydCBkZSBTT04gU2l0dGluZyBCdWxsLiBJbCBhdmFpdCBjaG9pc2kgZCdlbiB0ZXJtaW5lciBsJ2hpc3RvaXJlIHBhciB1bmUgaW1hZ2UgbyBsJ3ZvY2F0aW9uIGQndW5lIHBhaXggZnV0dXJlIHJlbmQgbW9pbnMgYW1yZSBsYSByc2lnbmF0aW9uIGRlcyBzdXJ2aXZhbnRzICBwZWF1eCByb3VnZXMgLiAKSSBib3VnaHQgdHdvIHRpY2tldHM6IE9uIHRoZSBmaXJzdCBkcmF3IEkgYWxtb3N0IGhhZCBhIGZsdXNoLCBidXQgc3RpbGwgd29uICQyIG9uIGEgcGFpciBvZiBBY2VzLCBhbmQgSSBkaWRuJ3Qgd2luIGFueXRoaW5nIG9uIHRoZSBzZWNvbmQgZHJhdy4gKExhdGVyIHRoYXQgZXZlbmluZyBJIGZhaWxlZCB0byBtYXRjaCBhbnkgb2YgdGhlIGNhcmRzIHRvIHdpbiBhIHByaXplIGluIHRoZSBuaWdodGx5IGRyYXcuKQpPbmUgcmVhc29uIGlzIGR1ZSB0byB0aGUgc3R5bGUgb2YgbGVhcm5pbmcuIApNeSBwb29yIHNpc3RlciBpbiBsYXcsIHdobyBvbmx5IGhhZCBhIHBvdGF0byBmb3IgZGlubmVyLCBhbmQgSSBkZWNpZGVkIG5leHQgeWVhciB3ZSdyZSBqdXN0IGJyaW5naW5nIG91ciBvd24gZm9vZCBiZWNhdXNlIHRoaXMgc2hpdCBpcyBnZXR0aW5nIHJpZGljdWxvdXMuLiAKQWNjb3JkaW5nIHRvIEp1c3RpY2UgQ29ubGFuLCB0aGUgdHJpYWwgd2FzIGxpa2UgYSBzZW50ZW5jZSB0aGFuIGEgc29qb3Vybi4gVGhlIHRyaWFsIHVubmVjZXNzYXJ5IGxlbmd0aCBhbmQgY29tcGxpY2F0aW9ucyB3ZXJlLCBhY2NvcmRpbmcgdG8gQ29ubGFuLCBhdHRyaWJ1dGFibGUgdG8gdGhlIHdpZmUgY29uZHVjdCBhbmQgaGVyIGRlY2lzaW9uIHRvIHJlcHJlc2VudCBoZXJzZWxmLgpUaGlzIGlzIHRoZSBtb3N0IG9idmlvdXMgZXhhbXBsZSBvZiBhIG5vcm1hdGl2ZSBzdGF0ZW1lbnQgdGhhdCBoYXMgYWJzb2x1dGVseSBubyByZWxhdGlvbiB0byB0aGUgc3R1ZHkgb2YgcG9saXRpY2FsIGlkZW9sb2d5LiBUaGlzIGlzIHB1cmUgb3BpbmlvbiBhbmQgaXQgc2hvdWxkIGJlIHByZXNlbnRlZCBhcyBzdWNoLiBUaGUgZ2VuZXJhbGl6YXRpb25zIHByZXNlbnRlZCBoZXJlIGFyZSBhc3RvdW5kaW5nLgpUaGlzIGlzIHdoYXQgZ2l2ZXMgcGxheWVycyBvbmUgY29tcGxpY2F0ZWQgdGFzayB3aGljaCBpczogaG93IHRvIGZpbmQgdGhlIHBlcmZlY3QgcG9rZXIgc2l0ZT8gVGhlcmUgYXJlIHNvIG1hbnkgdGhpbmdzIHRoYXQgbWF0dGVyIHdoZW4gaXQgY29tZXMgdG8gY2hvb3Npbmcgd2hpY2ggcG9rZXIgc2l0ZSB0byBqb2luIGFuZCB5b3UgY2FuIGZpbmQgc29tZSBvZiB0aGVtIGluIG91ciBvbmxpbmUgcG9rZXIgZ2FtYmxpbmcgc2VjdGlvbi4uIAoiWW91IGtub3cgd2hhdD8gSSBqdXN0IGhhcHBlbiB0byBsaWtlIHNleC4gSSBsaWtlIG1ha2luZyBtb25leSwgYW5kIEkgcmVhbGx5IGxpa2UgZ2V0dGluZyB0byB0aGUgY29yZSBvZiBzb21lYm9keSdzIG5lZWQsIHJlYWxseSBmaW5kaW5nIG91dCB3aGF0J3MgZ29pbmcgb24gaW5zaWRlIHRoYXQgbGVhZHMgc29tZW9uZSB0byBtZSwiIEplc3Mgc2F5cy4gCk1vbGx5IGNhbWUgYXdheSB3aXRoIHNldmVyYWwgdGhvdXNhbmQgZG9sbGFycyBpbiB0aXAgbW9uZXkgdGhhdCBldmVuaW5nLCBhbmQgc3VkZGVubHkgc2hlIGhhZCBhIG5ldyBjYXJlZXIuLiAKQW5kIHNoZSBpc24ndCB0aGUgdHlwZSBvZiBnaXJsIHdobyBzaG91bGQgYmUgc2Vjb25kIHN0cmluZyB0byBhbnlvbmUuIApGcm9tIHRoZXJlLCBJJ2xsIGRyb3AgbXkgaGlwcyBkb3duIHdoaWxlIHN0aWxsIGFjdGl2ZWx5IHB1bGxpbmcgdXAgb24gdGhlIHNsYWNrLCB3aGljaCB3ZWRnZXMgbWUgaW50byBwbGFjZSBhbmQgc2V0cyBteSBiYWNrIGludG8gZXh0ZW5zaW9uLkFsc28sIGhlcmUgaXMgYSByZWFsbHkgZ29vZCBkcmlsbCBJIHVzZSB0byBhY3RpdmF0ZSBteSB1cHBlciBiYWNrIGJlZm9yZSBJIGdvIGludG8gbXkgZGVhZGxpZnRzLiAKVGhlIHF1ZXN0aW9uIGVzc2VudGlhbGx5IG1lYW5zIHRoZSBzYW1lIGFzICJXaGF0IGlzIHRoZSBjaGFuY2UgdG8gZ2V0IGEgZmx1c2ggaWYgZGVhbHQgNyBjYXJkcz8iIFRoaXMgaXMgYmVjYXVzZSBmcm9tIHRoZSB2aWV3IG9mIG9uZSBwbGF5ZXIgaW4gaG9sZCdlbSB0aGV5IHdpbGwgc2ltcGx5IGdldCA3IGNhcmRzLCAyIHBvY2tldCBjYXJkcyBwbHVzIDUgY29tbXVuaXR5LiBJZiBJIHRydXN0IG15IHNhbXBsaW5nIHByb2dyYW0gaXQgc2F5cyBhIGZsdXNoIG9jY3VycyAzLjAyJSBvZiB0aGUgdGltZS4gCkl0IG1lYW50IHRoYXQgd2VpcmQgcGVvcGxlIGxpa2UgbWUgd2hvIGNvdWxkbiBjb25mb3JtIGRpZWQuIiBTaGUgY2FuIG9ubHkgdGhyaXZlIGluIGEgc29jaWV0eSBsaWtlIHRvZGF5IHdoZXJlIGluZGl2aWR1YWxzIGFyZSBub3QganVzdCB0b2xlcmF0ZWQgYnV0IGFjY29tbW9kYXRlZC4gCk5vcnRvbiBSb3NlIEZ1bGJyaWdodCBpcyBhIGZvdW5kaW5nIHBhcnRuZXIgb2YgRyhpcmxzKTIwLCBhIENhbmFkaWFuIGluaXRpYXRpdmUgdG8gcHJvbW90ZSB0aGUgZW1wb3dlcm1lbnQgb2YgZ2lybHMgYW5kIHdvbWVuIHRvIGJlIGFnZW50cyBvZiBlY29ub21pYyBhbmQgc29jaWFsIGNoYW5nZSAgIHRoZSBpbml0aWF0aXZlIGJyaW5ncyB0b2dldGhlciBhIGZlbWFsZSBkZWxlZ2F0ZSwgYWdlZCAxOCB0byAyMyBmcm9tIGVhY2ggRzIwIGNvdW50cnksIHdpdGggdGhlIGZpcm0gcHJvdmlkaW5nIGxlYWRlcnNoaXAgdHJhaW5pbmcgYW5kIG1lbnRvcmluZyBhcyB0aGUgZGVsZWdhdGVzIHByZXBhcmUgdG8gcGl0Y2ggdGhlaXIgaWRlYXMKQXJ0aXN0cyB0ZW5kIHRvIHVuZGVydmFsdWUgdGhlaXIgd29yayBpZiBhbnl0aGluZy4gU3RvcCBmZWVsaW5nIGd1aWx0eSBhbmQgYmUgcHJvdWQgYW5kIGhhcHB5Li4gCkppa2EgQW5kYSB0ZXJ0YXJpayB1bnR1ayBtdWxhaSBiZXJtYWluIHBva2VyIG9ubGluZSwgQW5kYSBtdW5na2luIGJlcnRhbnlhIHRhbnlhIGFwYSBwZWx1YW5nIEFuZGEgdW50dWsgbWVtZW5hbmdrYW4gdWFuZyBiZXJhZGEuIE9ubGluZSBwb2tlciB0ZWxhaCBtZW5qYWRpIGhvYmkgeWFuZyBzYW5nYXQgcG9wdWxlciBkYW4gd2ViIGJlcmxpbXBhaCBkZW5nYW4gc2l0dXMgcG9rZXIgb25saW5lLiBUYXBpIGFwYWthaCBBbmRhIG1lbXVsYWkgcGFkYSBqYWx1ciB5YW5nIGJlbmFyPyBCYWdhaW1hbmEgdW50dWsgbWVuZ2V0YWh1aSBiYWh3YT8KQnJvd24gc2NvcmVkIGZvciB0aGUgV2lsZCwgd2hvIGhhZCB0aGVpciBlaWdodCBnYW1lIHBvaW50IHN0cmVhayBzdG9wcGVkLiAKSSB0aGluayBvbmUgb3IgdHdvIG1lYWxzIGEgd2VlayBvZiBlYXRpbmcgb3V0IGlzIGEgcmVhc29uYWJsZSB0aGluZyB0byBhaW0gZm9yIHRob3NlIG9mIHVzIHdobyBhcmUgd2VhbmluZyBvZmYuLiAKVGhlcmUgaXNuIGFuIGVhc3kgYW5zd2VyLiBUbyBwdXQgaXQgaW4gYSB3YXkgdGhhdCBldmVyeSBjaHJvbmljIHBhaW4gc3VmZmVyZXIgY2FuIHVuZGVyc3RhbmQ7IHBhaW4gaXMgYSB2ZXJ5IHBvd2VyZnVsIG1vdGl2YXRvci4gCkhvd2V2ZXIsIGluIGNlcnRhaW4gc3RhdGVzIHRoaXMgaXMgbm90IHRoZSBjYXNlICAgYW5kIHNvbWV0aW1lcyBkaWZmZXJlbnQgcnVsZXMgYXBwbHkgdG8gY2FyZCByb29tcy4gCkJlc2lkZXMgdGhhdCBJIGhhdmUgYmVlbiBsaXN0ZW5pbmcgU2FudGEgU2FiaW5hLCBhIG1leGljYW4gZ290aCByb2NrIGJhbmQgZnJvbSB0aGUgbmluZXRpZXMuIAoxMyBPY3QgMjAxNyAuIFRoZSBLaW5nIE9mIEZpZ2h0ZXJzIDk4IFVsdGltYXRlIE1hdGNoIEZpbmFsIEVkaXRpb24gUEMgR2FtZSBPdmVydmlldy4gQWZ0ZXIgS09GICc5OCAuIFdlIGhhdmUgcHJvdmlkZWQgZGlyZWN0IGxpbmsgZnVsbCBzZXR1cCBvZiB0aGUgZ2FtZS4gZ2FtZSBpbmZvcm1hdGlvbiBhbmQgUk9NIGRvd25sb2FkIHBhZ2UgZm9yIEtpbmcgb2YgRmlnaHRlcnMgJzk4IChOZW8gR2VvKS4gWW91IG1heSBjbGljayB0aGUgbGluayBiZWxvdyB0byBkb3dubG9hZCB5b3VyIGZpbGUgLiAKVGhlIG1vc3QgcGxheWVkIHZlcnNpb25zIG9mIDcgY2FyZCBzdHVkIGFyZSBPbWFoYSBhbmQgVGV4YXMgSG9sZCAnRW0gYmVjYXVzZSB0aGVzZSB0d28gZ2FtZXMgcmVseSBtb3JlIG9uIHNraWxsIHRoYW4gYmxpbmQgbHVjay4gVGV4YXMgSG9sZCdFbSBpcyBieSBmYXIgdGhlIG1vc3QgcG9wdWxhciBnYW1lIHRvZGF5LiBZb3Ugc2VlIGl0IGJlaW5nIHBsYXllZCBvbiBUViBzaG93cyBQb2tlciBTdXBlcnN0YXJzIGFuZCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIE1haW4gRXZlbnQgd2hpY2ggaXMgdGhlIG1vc3QgY292ZXRlZCB0b3VybmFtZW50IHRvIHdpbi4uIApSb2dhbiBpc24ganVzdCBhbiBlZGd5LCBncmFkZXNjaG9vbCBidWxseSwgaG9ybnkgZm9yIHRoZSB3b3JzdCBhc3BlY3RzIG9mIHRoZSBmcmluZ2UgcmlnaHQgICBzZXhpc20sIHJhY2lzbSwgeGVub3Bob2JpYSwgZ2F5IGJhc2hpbmcsIHNlbGZpc2huZXNzIGFuZCBpZ25vcmFuY2UgICBidXQgaGUgaXMgYWxzbyBhIGZ1Y2tpbmcgY293YXJkLiAKQWxsIGNvbW1lbnRzIHdpbGwgYmUgcmV2aWV3ZWQgYnkgb25lIG9yIG1vcmUgbW9kZXJhdG9ycyBiZWZvcmUgYmVpbmcgcG9zdGVkIHRvIHRoZSBzaXRlLiBUaGlzIHNob3VsZCBvbmx5IHRha2UgYSBmZXcgbW9tZW50cy4gClRoZXkgd2lsbCBvdXRudW1iZXIgdXMgaW4gZmluYWwgNS4gCkZvciBtb3N0IHBlb3BsZSwgdGhlcmUgYSBiYXNlbGluZSBhbW91bnQgb2YgbW9uZXkgdGhhdCB5b3UgbmVlZCB0byBzcGVuZCB0byBiZSBhYmxlIHRvIGVuam95IHlvdXIgbGlmZS4gRm9yIHNvbWUgcGVvcGxlIHRoYXQgYmFzZWxpbmUgaXMgaGlnaGVyLCBmb3Igc29tZSBpdCBsb3dlci4gUGVvcGxlIGludGVyZXN0ZWQgaW4gTGVhbkZJUkUgYXJlIHByb2JhYmx5IG9uIHRoZSBsb3dlciBlbmQgb2YgdGhlIHNwZWN0cnVtIGFuZCBhYmxlIHRvIGVuam95IHRoZW1zZWx2ZXMgd2l0aG91dCBzcGVuZGluZyBhIGxvdC4KSW4gRGVjZW1iZXIgSSBoYWQgdG8gdGFrZSBhIGNvdXBsZSB3ZWVrcyBvZmYgZHVlIHRvIHNoaW4gc3BsaW50cywgYW5kIGluIEphbnVhcnkgSSBoYWQgc29tZSBhbmtsZSBwYWluIHRoYXQgd2FzIHNvbHZlZCBieSBzb21lIHN1cHBvcnRpdmUgaW5zZXJ0cy4gSXQgd2FzIGdvaW5nIHdlbGwgYW5kIEkgd2FzIGZlZWxpbmcgZ29vZCBhYm91dCBteSBwcm9ncmVzcyB1bnRpbCB0aGUgYmVnaW5uaW5nIG9mIEZlYnJ1YXJ5LCB3aGVuIEkgZmVsdCBteXNlbGYgZW50ZXJpbmcgYSBkZXByZXNzaXZlIGxvdyAoSSBoYXZlIGEgbW9vZCBkaXNvcmRlciBhbmQgdHlwaWNhbGx5IGZvciBtZSB0aGlzIGNhbiBsYXN0IHdlZWtzKS4gCiJQZW9wbGUgdGhpbmsgdGhleSBhcmUgY2xlYXJlZCIgYnkgdGhlIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24sIGhlIHNhaWQsIHdoZW4gaW4gZmFjdCB0aGV5IGRvIG5vdCBuZWVkIHByb29mIG9mIHNhZmV0eSBvciBlZmZlY3RpdmVuZXNzIHRvIGdvIG9uIHRoZSBtYXJrZXQuIENlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiBvZiBtb3JlIHRoYW4gMjMsMDAwIGFkdWx0cyBuYXRpb253aWRlLiBBbiBlYXJsaWVyIHJlcG9ydCBmcm9tIHRoaXMgc3VydmV5LCByZWxlYXNlZCBpbiBEZWNlbWJlciwgZm91bmQgdGhhdCBtb3JlIHRoYW4gb25lIHRoaXJkIG9mIGFkdWx0cyB1c2UgYWx0ZXJuYXRpdmUgbWVkaWNpbmUuCkJ1eSBwbGFpbiByZWQsIGdvbGQsIG9yIGdyZWVuIHdyYXBwaW5nIHBhcGVyIGFuZCB5b3UgY2FuIHVzZSBpdCBmb3IgYW55IG9jY2FzaW9uIGFsbCB5ZWFyIGxvbmcuLiAKRG9nIHdhbGtlcnMgdHlwaWNhbGx5IHdvcmsgICBhbmQgd2FsayAgIHNpeCB0byBlaWdodCBob3VycyBwZXIgZGF5LCB3aXRoIG9uZSBvciBtb3JlIGRvZ3MuIFNvbWUgYWxzbyBvZmZlciBvYmVkaWVuY2UgdHJhaW5pbmcuIERvZyB3YWxrZXJzIGNoYXJnZSBhbiBhdmVyYWdlIGhvdXJseSBmZWUgZnJvbSAkMTUgdG8gJDI1LCBkZXBlbmRpbmcgb24gd2hldGhlciB0aGUgZG9nIGlzIHdhbGtlZCBpbiBhIHBhY2sgb3IgYWxvbmUuIApWaWV3ZWQgd2l0aCBkaWZmZXJlbnQgbWVhc3VyZSwgdGhpcyBGTkIgcmVwb3J0IHJlY29tbWVuZHMgdGhhdCBhbiBpbmZhbnQgc2hvdWxkIHRha2UgMTAgbWljcm9ncmFtcy9kYXkgKDQwMCBJVSkgYW5kIGEgcHJlZ25hbnQgd29tYW4gMTUgbWljcm9ncmFtcy9kYXkgKDYwMCBJVSkuCkhvdyB0byBDaG9vc2UgYSBDZWxsIFBob25lIFBsYW4gICBXaGF0IFRlZW5zIE5lZWQgdG8gS25vdwpNb3N0IHNpZ25pZmljYW50bHksIHRoZXJlIGlzIHZlcnkgbGl0dGxlIGFjdHVhbCBtb25leSBleGNoYW5nZWQgaW4gc2xvdCBtYWNoaW5lIHBsYXkuIFRoZSBjdXN0b21lciBpbnNlcnRzIGJpbGxzIHRlbiwgdHdlbnR5LCBmaWZ0eSwgYSBodW5kcmVkIGludG8gdGhlIGRldmljZSB3aGljaCB0aGVuIHNwaXRzIG91dCBhIGNhcmQsIGJhc2ljYWxseSBhbiBpbiBob3VzZSBnYW1ibGluZyBkZWJpdCBjYXJkOyBsb3NzZXMgYXJlIGRlZHVjdGVkIGFuZCB3aW5zIGNyZWRpdGVkIGF1dG9tYXRpY2FsbHkuIE5vIG5pY2tlbHMgaGF2ZSB0byBiZSBwdW1wZWQgaW4gb3IgY29sbGVjdGVkIGluIGFuIG9sZCBjb2ZmZWUgY3VwLiBUaGUgaGFuZGluZyBvdmVyIG9mIG1vbmV5IGJ5IHRoZSBnYW1ibGVyIHRvIHRoZSBob3VzZSBpcyBhIHF1aWNrLCBxdWlldCwgcHJpdmF0ZSBtYXR0ZXIuIFBhcGVyIGN1cnJlbmN5IGFwcGVhcnMgdGhlbiBkaXNhcHBlYXJzLCBzaWxlbnRseSBhbmQgd2l0aG91dCBmYW5mYXJlLgpFZGl0OiBhbnkgY2hhbmNlIHRoYXQgdGhlIHJhZGl1cyB3YXMgZGlmZmVyZW50IGJldHdlZW4gdGhlIHBhaXJzIHlvdSB0cmllZD8gSSBkaWRuIG5vdGljZSBhIGxvdCBvZiBza2F0ZSAiZmVlbCIgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW0sIGp1c3QgYm9vdCBmZWVsLgpBbGwgb3VyIHN0YWZmIGFyZSB0cmFpbmVkIHRvIHVzZSB0aG9zZSBsYWRkZXJzIHRvIHJlc2N1ZSBwZW9wbGUgaWYgUEQgZG9lc24gZ2V0IHRoZXJlIGZpcnN0LiAKVHJvcGh5bGllcyB1ClRoZSB0aW1lIGNoYXJnZSBhcyBjaGFyZ2VkIGJ5IHRoZSB0cmFkaXRpb25hbCBwb2tlciByb29tcyBhcmUgb2Z0ZW4gdmVyeSBoaWdobHkgcXVvdGVkLiBTdWNoIGhpZ2ggcmFrZXMgYXJlIGZhciBiZXlvbmQgdGhlIHJlYWNoIG9mIGEgY29tbW9uIG1hbi4gClJlY29nbml6ZSB0aGUgaW1wbGljYXRpb25zIG9mIGluc3VyYW5jZSwgc3BsaXR0aW5nLCBkb3VibGluZyBkb3duIGFuZCBzdXJyZW5kZXIuIEFsbCBvZiB0aGUgZXh0cmEgYWN0aW9ucyBmYXZvciB0aGUgaG91c2Ugd2hlbiB1c2VkIGluY29ycmVjdGx5ICAgaXQgd291bGRuJ3QgYmUgYSBjYXNpbm8gZ2FtZSBpZiB0aGUgb3Bwb3NpdGUgd2VyZSB0cnVlIQpBaW5zaSwgaWwgbSdhcnJpdmUgImQnZW50cmFuZXIiIG1lcyBwYXRpZW50ZXMgIHJwb25kcmUgZHUgdGFjIGF1IHRhYyBhdSBwcm9mZXNzaW9ubmVsIGRlIHNhbnQsICBuZSBwYXMgc2UgbGFpc3NlciBmYWlyZSwgIGxlIHJlY2VudHJlciBzdXIgbGUgbW90aWYgZGUgbGEgdmlzaXRlLiAKWW91IHRocm93IGRvd24geW91ciBjYXJkcyBhbmQgdGhlIHJlc3Qgb2YgdGhlIHRhYmxlIGlzIGluIGRpc2JlbGllZi4gWW91IGp1c3Qgd29uIGEgYm9hdGxvYWQgb2YgY2hpcHMgd2l0aCBvbmUgb2YgdGhlIGJlc3QgaGFuZHMgaW4gcG9rZXIuLiAKTXIgQWlyZCBiZWxpZXZlcyB0aGUgTGliZXJhbCBnb3Zlcm5tZW50IHdpbGwgcmV0YWluIG1ham9yaXR5IGdvdmVybm1lbnQgYnkgYSBzbGVuZGVyIG1hcmdpbiwgYnV0IExhYm9yIHdpbGwgcGljayB1cCB0aHJlZSBvciBmb3VyIHNlYXRzLiBXaXRoIGEgdGljayBvdmVyIDY1IHBlciBjZW50IG9mIHZvdGVzIGNvdW50ZWQsIHRoZSBMaWJlcmFscyBoYWQgcGlja2VkIHVwIDUwIHBlciBjZW50IG9mIHRoZSB2b3RlLCBMYWJvciAzMyBwZXIgY2VudCBhbmQgdGhlIEdyZWVucyAxMCBwZXIgY2VudCwgd2l0aCB0aGUgc2NyYXBzIHNwcmVhZCBlbHNld2hlcmUuIAoyMDE4LiBUaGUgcGh5c2lvbG9naWNhbCBlZmZlY3RzIG9mIFRyYW5zY3JhbmlhbCBFbGVjdHJpY2FsIFN0aW11bGF0aW9uIGRvIG5vdCBhcHBseSB0byBwYXJhbWV0ZXJzIGNvbW1vbmx5IHVzZWQgaW4gc3R1ZGllcyBvZiBDb2duaXRpdmUgTmV1cm9tb2R1bGF0aW9uLiBOZXVyb3BzeWNob2xvZ2lhLi4gCkkgdGhpbmsgeW91J3JlIG92ZXJlc3RpbWF0aW5nIGhvdyBoYXJkIGl0IGlzIHRvIGF2b2lkIHVzaW5nIHRoZSBsYW5ndWFnZSBvZiBhbnRpc2VtaXRpYyB0cm9wZXMsIGVzcGVjaWFsbHkgc2luY2Ugc2hlJ3MgcmVwZWF0ZWRseSBkb25lIGl0IHdpdGggbXVsdGlwbGUgdHJvcGVzLCBhbmQgc2hlJ3MgYWN0dWFsbHkgdGFsa2VkIHRvIHBlb3BsZSBrbm93bGVkZ2VhYmxlIGFib3V0IHdoYXQgaXMgYSBzbHVyIChKdXN0IHJlYWRpbmcgdGhlIGFudGkgU2VtaXRpYyBjYW5hcmQgcGFnZSBvbiBXaWtpcGVkaWEgd2FzIGFsbCBzaGUgbmVlZHMgdG8gZG8pLiBJIGRvIGZpbmQgaXQgaW5jb25zaXN0ZW50IGhvdyBmb3JnaXZpbmcgcHJvZ3Jlc3NpdmVzIGFyZSBhYm91dCBhbnRpIFNlbWl0aWMgdHJvcGVzIGJ5IHB1YmxpYyBmaWd1cmVzIGJ1dCBhcmUgYWxsIG92ZXIgc2V4aXN0IG9yIHJhY2lzdCB0cm9wZXMuLiAKVGhlcmUgYXJlIHNpZ25pZmljYW50IGRpc2NvdW50cyBvbiBzb21lIHRoaW5ncyAoYWx0aG91Z2ggaXQgaXMgdHJ1ZSB0aGF0IHNvbWUgb2YgdGhlIHN1cGVyIGRpc2NvdW50cyBvbiB0aGluZ3Mgc3VjaCBhcyBUVnMgYXJlIG9uIHNwZWNpZmljYWxseSBtYWRlIHZlcnNpb25zIHRoYXQgYXJlIHBvb3JlciBxdWFsaXR5KSBhbmQgdGhlbiBtb3JlIGF2ZXJhZ2Ugc2FsZSBwcmljZXMgb24gb3RoZXIgdGhpbmdzLiBGb3IgaW5zdGFuY2UsIGEgdGFyZ2V0IG1heSBoYXZlIGFsbCBib3lzIGNsb3RoZXMgMjAlIG9mZiB3aXRoIGNlcnRhaW4gYm95cyBjbG90aGluZyBpdGVtcyBldmVuIGNoZWFwZXIuIApEbyBub3QgY29tbWVudCBmdXJ0aGVyIHVuZGVyIHRoYXQgcG9zdC4KTWlhbiBTYWhhYiBhbHNvIGFsbG93ZWQgTXVzaGFycmFmIHRvIGxlYXZlIHRoZSBjb3VudHJ5LiBIZSBuZXZlciB0cmllZCB0byBnZXQgdG8gdGhlIGJvdHRvbSBvZiB0aGUgbmFzdHkgcmVzdHJpY3Rpb25zIHRoYXQgd2VyZSBwbGFjZWQgb24gbWUgYnkgTXVzaGFycmFmLiAKQXMgYSB2aXNpdG9yLCB5b3UgY2FuIGVhc2lseSBmaW5kIGltcG9ydGFudCBkZXRhaWxzIGFib3V0IE5ldEVudCBydW5uaW5nIG9wZXJhdG9ycyBzdWNoIGFzIGxpY2Vuc2luZywgYWNjZXB0ZWQgcGF5bWVudCBtZXRob2RzLCBzdXBwb3J0ZWQgbGFuZ3VhZ2VzLCB0eXBlcyBvZiBnYW1lcyBhbmQgZXRjLiBPdXIgbGlzdCBvZiBOZXRFbnR0ZXJ0YWlubWVudCBjYXNpbm9zIGluY2x1ZGVzIG9ubHkgdGhlIG9wZXJhdG9ycyB0aGF0IHByb3ZpZGUgaW1wZWNjYWJsZSBzZXJ2aWNlIGFuZCBpdCBjYW4gc2VydmUgeW91IGFzIGFuIHVsdGltYXRlIGNhc2lubyBndWlkZSBmb3IgZmluZGluZyBhIGNhc2lubyBzaXRlIHRoYXQgd2lsbCBuZXZlciBkaXNhcHBvaW50IHlvdS4uIApLZW1hdGlhbiwga2V0aWthIG1hbnVzaWEgbWVuZ2FsYW1pIHByb3NlcyBwZXJhbGloYW4gZGFyaSBrZWhpZHVwYW4gZHVuaWEgbWVudWp1IGtlaGlkdXBhbiBha2hpcmF0IHlhbmcgYWJhZGkuIEJlcmJhZ2FpIGZlbm9tZW5hIG11bmN1bCBkYXJpIHByb3Nlcy4gVGVrcyBDZXJhbWFoIEx1Y3UgZGFyaSBVc3QuIApBbmQgbXkgYXVkaWVuY2Ugd2FzIHRoZSBraW5kIHRoYXQgb25lIGNhbiBvbmx5IGhvcGUgZm9yLiAKQW5kIHNvIHRoZSBncmV5IHBhdGllbnQgaXMgb2ZmZXJlZCBhIEhhaWwgTWFyeSBhdCBiZWRzaWRlLCBvbmUgbGFzdCBmYWNlIHNsYXAgdG8gcmVkZGVuIHRoZSBjaGVla3MgYW5kIGVzY2FwZSB0aGUgYm9uZXlhcmQuCldoZW4gbG93ZXJpbmcgcHJvZml0cyB0byAzJSBwcmljZXMgd291bGQgb25seSBuZWVkIHRvIHJpc2UgMjIlSSBvbmx5IGdhdmUgc3RvcmUgbWFuYWdlcnMgYSAxMCUgcmFpc2UgdG8gY29udHJvbCBjb3N0LCBidXQgSSBzYXkgdGhleSB3b3VsZCBnZXQgYSBsYXJnZXIgcmFpc2UgYXMgcHJpY2VzIGFuZCBvdGhlciBlbXBsb3llZXMgYXJlIGdldHRpbmcgbGFyZ2UgcmFpc2VzLiBDdXJyZW50bHkgYSBTaGlmdCBNbmdyIHdvdWxkIG1ha2UgMTUwJSBhIGxpbmUgd29ya2VycyBlYXJuaW5nc1N0YWZmaW5nIGlzIDM2JSBvZiBzYWxlcy4gClRoZSBmcm9udCBwYWdlIHN0b3J5ICJXYXJuZSBjaGFyaXR5IGNhc2ggZml4IiBkZXRhaWxlZCB0aGUgY3JpY2tldGluZyBsZWdlbmQgcGxhbiB0byAiY2hhbmdlIHRoZSB3YXkgaXQgcmFpc2VzIG1vbmV5IiBhbWlkICJjb25jZXJucyBhYm91dCBoaWdoIGV4cGVuc2VzIi4gQSBkYXkgbGF0ZXIgVGhlIFN1bmRheSBBZ2UgcmV2ZWFsZWQgdGhlIGV4dGVudCBvZiB0aGUgZm91bmRhdGlvbiBmaW5hbmNpYWwgaXNzdWVzLCB3aGljaCBpbmNsdWRlZCBkaXN0cmlidXRpbmcgb25seSAxNiBjZW50cyBvZiBldmVyeSBkb2xsYXIgcmFpc2VkIGZvciBjaGFyaXR5IGJldHdlZW4gMjAxMSAxMy4gV2FybmUgYnJvdGhlciBKYXNvbiBoYWQgYWxzbyBiZWVuIHBhaWQgYW4gJDgwLDAwMCBhbm51YWwgc2FsYXJ5IGluIHRoZSBzYW1lIHllYXIgdGhlIGZvdW5kYXRpb24gaGFkIGRvbmF0ZWQganVzdCAkNTQsNjAwIHRvIGNoYXJpdHkuIApZb3UgY2FuIGFmZm9yZCBpdCBnaXZpbmcgaXMgd2hhdCBpdCBpcyBhbGwgYWJvdXQuIEkgdGhpbmsgdGhlcmUgYW4gb2JsaWdhdGlvbiB0byBnaXZlIGJhY2ssIGVzcGVjaWFsbHkgaWYgeW91IGJlZW4gc3VjY2Vzc2Z1bCBmaW5hbmNpYWxseS4gSGUgd2FzIGp1c3Qgc29tZWJvZHkgd2hvIGZlbHQgdGhhdCBoZSB3YXMgZXh0cmVtZWx5IHByaXZpbGVnZWQuIApUaGV5IGJsYW1lIG90aGVycyBmb3IgdGhlaXIgYW5nZXIsIHNhZG5lc3MgYW5kIGRlcHJlc3Npb24sIGJ1dCByYXJlbHkgbG9vayBpbndhcmRseS4gSGUgdGhpbmtzIHRoYXQgaGUgaXMgb25seSBlbmpveWluZyBoaXMgeW91dGggYW5kIGhvcGUgdGhhdCBpdCB3aWxsIHN0b3AgYnkgaXRzZWxmIHdpdGggdGltZS4gCiJGb3J3YXJkIGhlYWQgcG9zdHVyZSBsZWFkcyB0byBsb25nIHRlcm0gbXVzY2xlIHN0cmFpbiwgZGlzYyBoZXJuaWF0aW9ucywgYXJ0aHJpdGlzIGFuZCBwaW5jaGVkIG5lcnZlcy4iICBNYXlvIENsaW5pYywgTm92ZW1iZXIgMywgMjAwMApJdCBpcyB0aGUgcGFydCBvZiBteSBnYW1lIEkgYW0gY3VycmVudGx5IHdvcmtpbmcgb24gbXlzZWxmLiAKU2F5IHlvdSdyZSBpbiBhIGdhbWUgYW5kIHlvdSd2ZSBiZXR0ZWQgY3JhcCwgYW5kIHRoZSBzaG9vdGVyIHJvbGxzIGEgNC4gTm93IHRoZSBsaWtlbGlob29kIGlzIHJldmVyc2VkLCBhbmQgdGhlIHNob290ZXIncyBpbiB0aGUgY29ybmVyLiBJdCdzIG1vcmUgbGlrZWx5IG9uIHRoZSBuZXh0IHJvbGwgaGUnbGwgcm9sbCBhIDcsIHNvIHlvdXIgaW5pdGlhbCBiZXQgcGFpZCBvZmYuIE5vdyB5b3VyIG9kZHMgYXJlIGJldHRlci4KQmlnZ2VyIGxpZmUgZXZlbnRzIGluIG15IGxpZmUgdGVuZCB0byBoaXQgbWUgYSBsaXR0bGUgaGFyZGVyIHRoYXQgc2hlJ3Mgbm90IGhlcmUuIEkgd2FzIHNhZCB3aGVuIEkgZ3JhZHVhdGVkIGZyb20gaGlnaCBzY2hvb2wsIGNvbGxlZ2UsIHdoZW4gSSBwbGFubmVkIG15IHdlZGRpbmcsIG1vdmluZyBhY3Jvc3MgdGhlIGNvdW50cnkuIEFuZCB3aGVuIEkgcmVhbGx5IHBlZWwgYmFjayBzb21lIG9mIHRoZSBsYXllcnMgSSBrbm93IEkndmUgYmVlbiBzYWQgZHVyaW5nIHRoaXMgVFRDIHByb2Nlc3MgYmVjYXVzZSBJIGRvbid0IGhhdmUgbXkgbW9tIHRvIHR1cm4gdG8gd2l0aCBxdWVzdGlvbnMgb3IgZm9yIHN1cHBvcnQuIApMaWtlIGplZXp1cyBDaHJpc3QuIFNoZSBkaWRuIHRlbGwgdXMgYWJvdXQgaW50ZXJ2aWV3IDIgdW50aWwgd2Ugd2VyZSBvbiBvdXIgd2F5IGJhY2shISBDb3VsZCBoYXZlIGZvdW5kIGFub3RoZXIgcmlkZSBvciBib3Jyb3dlZCBhIGNhci4gVGhhbmsgZ29vZG5lc3MgaSB3YXMgd2l0aCBhbm90aGVyIHBlcnNvbiBhbmQgc2hlIGRpZG4gZHJvcCBtZSBhbG9uZSBpbiBhIHN1cGVyIHVuc2FmZSBhcmVhLiBGcmllbmRzaGlwIHdhcyB0ZXJtaW5hdGVkIHRoYXQgbmlnaHQuCldlbGwgaWYgaXQgaXMgdGhhdCBiYWQgeW91IHNob3VsZCBvZiBjb3Vyc2UgcmVseSBvbiByZWFsIG1lZGljYXRpb24uIFRoZSB3aG9sZSBwb2ludCBvZiB1c2luZyBob21lb3BhdGhpYyBtZWRpY2F0aW9uIGlzIHRvIHRyZWF0IGJlbmlnbiBtYWxhZGllcy4gCkl0IGlzIHRvbyBiYWQuIFdlIG9mdGVuLCBhbGwgb2YgdXMsIGludGVybmFsaXplIHRoZSBzb2NpZXRhbCBub3JtcyBvZiBkZXByZWNhdGluZyBhbmQgZGVtb25pemluZyBhbmQgdmlsaWZ5aW5nIHRoZSBsb3dlc3Qgb2YgdXMsIG91cnNlbHZlcyBpbmNsdWRlZC4gT3VyIHNvY2lldHkgdHJlYXRzIG1hcmdpbmFsaXplZCBncm91cHMgYXMgbGVzcyB0aGFuLCBhbmQgbWVtYmVycyBvZiB0aG9zZSBncm91cHMgb2Z0ZW4gaW50ZXJuYWxpemUgdGhhdCBhbmQgZG8gaXQgdG8gdGhlbXNlbHZlcywgdGhyb3VnaCB0aGVpciBsYW5ndWFnZSwgdGhlaXIgdGhvdWdodHMsIGFuZCB0aGVpciBhY3Rpb25zLiBCdXQganVzdCBiZWNhdXNlIHNvbWVvbmUgZGV2YWx1ZXMgdGhlbXNlbHZlcyBpbiB0aGVpciBsYW5ndWFnZSBkb2VzIG5vdCBtZWFuIHdlIHNob3VsZCB0b28uIEFuZCB0aGlzIHdhc24gYSBjb21tZW50YXJ5IG9uIHlvdXIgcG9zdCBvdmVyYWxsLCBJIHRoaW5rIHRoZSBxdW90ZSBhbmQgdGhlIGltYWdlIHdhcyBhIHZhbHVhYmxlIGFuZCBtZWFuaW5nZnVsIHRoaW5nIHRvIHNoYXJlIGluIHRoaXMgY29tbXVuaXR5LiBCZWluZyBpbnRyaW5zaWNhbGx5IHZhbHVhYmxlLCBhbmQgbW9yZW92ZXIgZm9yIHByb21wdGluZyB0aGlzIGV4YWN0IGNvbnZlcnNhdGlvbiB3ZSBhcmUgaGF2aW5nLgpBbmQgMisyIHNlZW1zIHdheSBvdmVyIG15IGhlYWQuIAoiVHJ1bHksIHRydWx5LCBJIHNheSB0byB5b3UsIHdlIHNwZWFrIG9mIHdoYXQgd2Uga25vdyBhbmQgdGVzdGlmeSBvZiB3aGF0IHdlIGhhdmUgc2VlbiwgYW5kIHlvdSBkbyBub3QgYWNjZXB0IG91ciB0ZXN0aW1vbnkuIElmIEkgdG9sZCB5b3UgZWFydGhseSB0aGluZ3MgYW5kIHlvdSBkbyBub3QgYmVsaWV2ZSwgaG93IHdpbGwgeW91IGJlbGlldmUgaWYgSSB0ZWxsIHlvdSBoZWF2ZW5seSB0aGluZ3M/IiJUaGlzIGlzIHRoZSBqdWRnbWVudCwgdGhhdCB0aGUgTGlnaHQgaGFzIGNvbWUgaW50byB0aGUgd29ybGQsIGFuZCBtZW4gbG92ZWQgdGhlIGRhcmtuZXNzIHJhdGhlciB0aGFuIHRoZSBMaWdodCwgZm9yIHRoZWlyIGRlZWRzIHdlcmUgZXZpbC4gRm9yIGV2ZXJ5b25lIHdobyBkb2VzIGV2aWwgaGF0ZXMgdGhlIExpZ2h0LCBhbmQgZG9lcyBub3QgY29tZSB0byB0aGUgTGlnaHQgZm9yIGZlYXIgdGhhdCBoaXMgZGVlZHMgd2lsbCBiZSBleHBvc2VkLiBCdXQgaGUgd2hvIHByYWN0aWNlcyB0aGUgdHJ1dGggY29tZXMgdG8gdGhlIExpZ2h0LCBzbyB0aGF0IGhpcyBkZWVkcyBtYXkgYmUgbWFuaWZlc3RlZCBhcyBoYXZpbmcgYmVlbiB3cm91Z2h0IGluIEdvZC4iIk9LX2Nsb3VkY29tcHV0aW5xICAxNCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpBbmQgdG8gYmUgaG9uZXN0IE9QIHRoaXMgd2hvbGUgc2l0dWF0aW9uIHJhaXNlcyBzb21lIHJlZCBmbGFncy4gCkkgZG9uJ3QgcmVhbGx5IG5lZWQgYSBuZXcgbGFwdG9wLiBJIGNhbid0IHJlYWxseSBhZmZvcmQgYSBuZXcgbGFwdG9wLiAKVGhpcyBpcyB0eXBpY2FsbHkgdHJ1ZS4gCk9yIHRvbyBjbGVhdmVyIHRvIHdhaXQgd2l0aCB0aGUgcmVzdCBvZiB0aGUgcGVhc2FudHMuIApCdXQgYWxzbyB5b3UgY29udmluY2VkIG1lIHRvIGdvIGZvciBhIHJvdW5kIHR3bywgc28gbWF5YmUgbXkgZXhwZXJpZW5jZSB3aWxsIGJlIGRpZmZlcmVudCB0aGlzIHRpbWUuLiAKR3JlYXQgY29taW5nIHNvbWV3aGVyZSB3aGVyZSB5b3UgcmVhbGx5IGxvdmUsIG9mIGNvdXJzZSwgd2hlbiB5b3Ugd2luIGEgdGl0bGUgaXQgc29tZXRoaW5nIHZlcnkgc3BlY2lhbCBpbiB5b3VyIGhlYXJ0LiBXYXMgZXNwZWNpYWxseSB0b3VnaCBiZWNhdXNlIENhcmxhIGFuZCBJLCB3ZSBhcmUgZnJpZW5kcywgYW5kIGl0IHZlcnkgZGlmZmljdWx0IHRvIHBsYXkgYWdhaW5zdCBlYWNoIG90aGVyLCBzYWlkIHRoZSBmb3JtZXIgUm9sYW5kIEdhcnJvcyBhbmQgV2ltYmxlZG9uIGNoYW1waW9uLiBIZXksIGl0IGNvbXBldGl0aW9uLCBzbyB3ZSBoYXZlIHRvIHB1dCBwb2tlciBmYWNlIGFuZCB0cnkgdG8gd2luLiAKRG9pbmcgYW55dGhpbmcgcmlnaHQgZm9yIGEgdGVlbmFnZXIgaXMgbWluZCBib2dnbGluZy4gVGhlIGNvbG9yLCBzdHlsZSwgcHJpY2UgYW5kIHNvIG9uIGhhdmUgdG8gYmUgcmlnaHQuIEdldHRpbmcgdGhlbSB0byBkbyBpdCBpcyBldmVuIG1vcmUgZGlmZmljdWx0IGFzIGZhdm9yaXRlcyBjb21lIGFuZCBnbyBhdCBhc3RvbmlzaGluZyByYXRlLiBUaGlzIGlzIHRoZSBzYW1lIHdpdGggZCBmb3IgdGVlbmFnZXJzLiBBdCBvbmUgdGltZSwgdGhlIHdhbGxzIGFyZSBmdWxsIG9mIE1pbGV5IEN5cnVzLCB0aGUgbmV4dCB0aGV5IGFyZSBiYXJlIGV4Y2VwdCBmb3IgdGhhdCBtZWRpdGF0aW5nIEluZGlhbiBkaWV0aW5nIGFuZCBzcGlyaXR1YWwgZ3VydSBvbiB0aGUgY29ybmVyLgpDb21wZXRpdGl2ZSBNYWdpYyBzaG91bGQgYmUgQm8zLiBCdXQgd2hlbiBJIHBsYXlpbmcgYSBkaWdpdGFsIGNvbGxlY3RpYmxlIGNhcmQgZ2FtZSB0aGF0IGlzIHZpYWJsZSBmMnAsIEkgYW0gcGxheWluZyBibzEuIApUaGF0IGFuIGludGVyZXN0aW5nIHF1ZXN0aW9uLCB0b28uIElmIHNoZSBuYXBwaW5nIGJ5IGhlcnNlbGYgaW4gaGVyIHJvb20sIHNoZSBnbyBkb3duIGZvciBhbiBob3VyIGFuZCB0aGVuIHBvcCBiYWNrIHVwLiBBdCBkYXljYXJlIG9uIGhlciBtYXQgb3IgaWYgc2hlIG9uIG15IGJlZCBhbmQgSSB0aGVyZSwgc2hlIGRvIDIgMyBob3Vycy4gClRoaW5rIG9mIFN3ZWRlbiBmb3IgZXhhbXBsZS4gU3RpbGwgdG8gdGhpcyBkYXkgbm9ydGhlcm4gU3dlZGVuIGlzIG1vc3RseSBqdXN0IGh1Z2UgZm9yZXN0cywgd2l0aCBjaXRpZXMgYW5kIHZpbGxhZ2VzIG1vc3RseSBqdXN0IGJlaW5nIGFsb25nIHRoZSBjb2FzdHMsIHJpdmVycywgYW5kIGxhcmdlciBsYWtlczsgYW5kIHByZSBpbmR1c3RyaWFsIHJldm9sdXRpb24sIG1vc3QgKG9yIGF0IGxlYXN0IGEgbG90KSBvZiByZXNvdXJjZXMgaW4gYSB2aWxsYWdlIHdlcmUgbG9jYWxseSBwcm9kdWNlZC4gCk1ha2Ugc3VyZSB0aGUgc2Fsb24ncyBoZWFsdGggaW5zcGVjdGlvbiBzY29yZXMgYXJlIGhpZ2gsIGFuZCBicmluZyB5b3VyIG93biBuYWlsIGZpbGVzIGFuZCBvdGhlciB0b29scyAoc3VjaCBhcyBjdXRpY2xlIGNsaXBwZXJzKS4gClRhaHUgS3VrdXRhaSBhbmQgQXJhbWEgUmF0YSwgYm90aCBmcm9tIHRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgRGVtb2dyYXBoaWMgYW5kIEVjb25vbWljIEFuYWx5c2lzIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFdhaWthdG8sIGNvbnNpZGVyIGlzc3VlcyBmcm9tIGEgTWFvcmkgcGVyc3BlY3RpdmUgd2hpY2ggdGhleSBwb2ludCBvdXQgaGFzIGJlZW4gaWdub3JlZCBpbiB0aGUgaW1taWdyYXRpb24gZGViYXRlLiAKVHJhdmFpbGxlciBhdmVjIGxhIG5hdHVyZSBwbHV0dCBxdWUgY29udHJlIGVsbGU4LiBGYWlyZSBsZSBwbHVzIHBldGl0IGVmZm9ydCBwb3VyIGxlIHBsdXMgZ3JhbmQgY2hhbmdlbWVudDkuIExlIHByb2JsbWUgZXN0IGxhIHNvbHV0aW9uUGx1cy4gCkF0IHNjaG9vbCwgdGhleSBhcmUgaW4gYSBwb2NrZXQgb24gdGhlIHdhbGwuLiAKQ1UgKDMgMywgMCAyIFBhYyAxMikgZXh0ZW5kZWQgaXRzIFBhYyAxMiBsb3Npbmcgc3RyZWFrIHRvIDEzIGdhbWVzIGFuZCBmZWxsIHRvIDEgMTkgaW4gY29uZmVyZW5jZSBnYW1lcyB1bmRlciBoZWFkIGNvYWNoIE1pa2UgTWFjSW50eXJlLiBUaGUgQnVmZnMgaGF2ZSBsb3N0IDEzIGNvbnNlY3V0aXZlIFBhYyAxMiByb2FkIGdhbWVzLgpEZXQuIExhbmUgc2FpZCwgc3ludGhldGljIG1hcmlqdWFuYSBtYWtlcnMgdXNlIGEgc3ludGhldGljIGNvbXBvdW5kLCBvZnRlbiBvcmRlcmVkIGZyb20gQXNpYSwgdGhhdCBjcmVhdGVzIGEgbWFyaWp1YW5hIGxpa2UgaGlnaC4gSXQgaXMgc3ByYXllZCBvbiBhIHdlZWQgdGhhdCBsb29rcyBsaWtlIHRoZSBtYXJpanVhbmEgcGxhbnQgYnV0IHdpdGhvdXQgdGhlIFRIQy4KRCkgYXNzaGF0IHRoYXQgbG9hZHMgdXAgZXF1aXBtZW50IHdpdGggcGxhdGVzLCBkb2VzIGEgc2V0IGFuZCB0aGVuIHdhbGtzIGF3YXkKSSBhZ3JlZS4gSSBhbHNvIGFncmVlIHdpdGggdGhlIG90aGVyIHBvc3RlciBibGFtaW5nIHRoYXQgTWFsaWduYW50IE5hcmNpc3Npc3QgTXVyZG9jaCBmb3IgdGhlIGlzc3VlcyB3ZSBmYWNlLiAKTmF0dXJhbGx5LCBpZiB5b3UgZG9uIGhhdmUgcm9sbGluZyBtb2RpZmllcnMsIHlvdSBzaW1wbHkgZHJhdyAyIGNhcmRzIGFuZCBjaG9vc2UgdGhlIGJldHRlciBvciB3b3JzZSBvbmUsIHJlc3BlY3RpdmVseS4uIApLaW5nczogU2FjcmFtZW50byBnb3Qgb2ZmIHRvIGEgZmFzdCBzdGFydCwgbWFraW5nIDE0IG9mIDIyIHNob3RzIGluIHRoZSBmaXJzdCBxdWFydGVyIGZvciBhIHNpeCBwb2ludCBsZWFkLiBCdXQgdGhlIEtpbmdzIHdlbnQganVzdCA2IG9mIDIyIGluIHRoZSBzZWNvbmQgYW5kIHdlcmUgdGllZCA0OSBhbGwgYXQgaGFsZnRpbWUuICBTYWNyYW1lbnRvIHJvb2tpZSBNYXJ2aW4gQmFnbGV5IElJSSByZW1haW5zIHNpZGVsaW5lZCBhZnRlciBzcHJhaW5pbmcgaGlzIGxlZnQga25lZSBsYXN0IFdlZG5lc2RheS4gCkl0IGNsZWFybHkgc2F5cyB0aGUgZXhhY3Qgb3Bwb3NpdGUuQlRXLCBpbiB0aGUgc3R1ZHkgdGhleSB1c2VkIEkgbGF1Z2ggZWFzaWx5IGFuZCBJIGFtIGEgY2hlZXJmdWwsIGhpZ2ggc3Bpcml0ZWQgcGVyc29uIGFzIHN1cnZleSBpdGVtcyB0byBtZWFzdXJlIHBvc2l0aXZlIGFmZmVjdCwgd2hpY2ggd2FzIGludmVyc2VseSByZWxhdGVkIHRvIGRlcHJlc3Npb24gYW5kIHNvY2lhbCBhbnhpZXR5LklmIHlvdSB3YW50IHRvIFBNIG1lIHlvdXIgZW1haWwgSSBjYW4gc2VuZCB5b3UgdGhlIFBERi5HMExETFU1VCAgMSBwb2ludCAgc3VibWl0dGVkIDUgbW9udGhzIGFnb0kgYWdyZWUgdGhhdCBpdCB2ZXJ5IHNlbnNpYmxlIHRvIHNlZWsgY291bnNlbGluZy4gClRpcHMgc2VlbSBsZXNzIGZyZXF1ZW50IGF0IHRoZSByb3VsZXR0ZSB3aGVlbC4gUHJvYmFibHkgdGhlIG1vc3QgY29tbW9uIGlzIHNpbXBseSBnaXZpbmcgdGhlIGRlYWxlciBhIGNoaXAgYWZ0ZXIgaGl0dGluZyBhIDM1IDEgc2luZ2xlIG51bWJlciBwYXlvZmYuIERvbid0IGhhbmQgaXQgZGlyZWN0bHkgdG8gdGhlIGRlYWxlciAgIGRlYWxlcnMgYXJlIG5vdCBhbGxvd2VkIHRvIHRha2UgbW9uZXkgb3IgY2hpcHMgZnJvbSBhIHBsYXllcidzIGhhbmQuIApCdXQgaWYgaXQgaXMgcHVibGlzaGVkIGJ5IHRoZSBKb3VybmFsIHNvZGl1bSBzYWx0IG9mIHNhbGljeWxpYy4gQWJvdXQgdHdvZm9sZCB0aGVzZSBldmVudHMgYXJlIFBvc3NvIHRvbWFyIGFuZmVwcmFtb25hIGNvbSBjaXRhbG9wcmFtIGFuZCB0aGUgYmUgdXNlZCB0byBkZXRlY3QuClRoZSBvbmx5IGV4cGxhbmF0aW9uIGkgY2FuIHRoaW5rIG9mLCBpcyB0aGF0IGl0IEthcmxzIGJvZHkgZnJvbSB0aGUgb3RoZXIgZGltZW5zaW9uLCBhbmQgdGhleSBraWxsZWQgaGltIHNvIHRoYXQgS2FybCBjb3VsZCByZXBsYWNlIGhpbXNlbGYgaW4gdGhhdCBkaW1lbnNpb24uIApTaW5jZSAyMDAwLCB0aGUgbnVtYmVyIG9mIHBlb3BsZSBpbiBwcml2YXRlIHByaXNvbnMgaGFzIGluY3JlYXNlZCA0NyUsIGNvbXBhcmVkIHRvIGFuIG92ZXJhbGwgcmlzZSBpbiB0aGUgcHJpc29uIHBvcHVsYXRpb24gb2YgOSUuIEluIHNpeCBzdGF0ZXMsIHRoZSBwcml2YXRlIHByaXNvbiBwb3B1bGF0aW9uIGhhcyBtb3JlIHRoYW4gZG91YmxlZCBkdXJpbmcgdGhpcyBwZXJpb2QuIFRoZSBmZWRlcmFsIHByaXNvbiBzeXN0ZW0gZXhwZXJpZW5jZWQgYSAxMjAlIGluY3JlYXNlIGluIHVzZSBvZiBwcml2YXRlIHByaXNvbnMgc2luY2UgMjAwMCwgcmVhY2hpbmcgMzQsMTU5IHBlb3BsZSBpbiBwcml2YXRlIGZhY2lsaXRpZXMgaW4gMjAxNi4gClVubGlrZSBzaXR0aW5nIGRvd24gYXQgYSBwb2tlciB0YWJsZSB3aXRoIGZyaWVuZHMsIG9ubGluZSBwb2tlciBoYXMgYW4gYWRkZWQgZGltZW5zaW9uIHRoZXNlIGRheXMuIFRoZXJlIGlzIGEgbG90IG9mIHByZXNzdXJlIGZyb20gbWFueSBxdWFydGVycyB0byBtYWtlIG9ubGluZSBwb2tlciBpbGxlZ2FsLCBwYXJ0aWN1bGFybHkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIApJIHdhcyB1c2luZyBoaWdoIGZpZGVsaXR5IGVhcnBsdWdzIGFuZCBjb3VsZG4gY2xlYXJseSBtYWtlIG91dCBhIGxvdCBvZiB3aGF0IEtpcmsgd2FzIHBsYXlpbmcgaW4gdGhlIGhpZ2hlciBwYXJ0cyBvZiBzb2xvcy4gSSB0b29rIHRoZSBwbHVncyBvdXQgYSBmZXcgdGltZXMgdG8gbWFrZSBzdXJlIGl0IHdhc24gdGhlIHBsdWdzIGJsb2NraW5nIGhpbSBvdXQsIGFuZCBpdCB3YXNuIE11ZGR5IGlzIGRlZmluaXRlbHkgaG93IEkgZGVzY3JpYmUgaXQuLiAKVGhlIHJlZmVyZW5jZSB3YXMgbWVhbnQgdG8gc2hvdyB0aGF0IG1vc3Qgb2YgdGhlIHRydWx5IGdvb2QgdGhpbmdzIGluIGxpZmUgdGFrZSB0aW1lIGFuZCBjYW4ndCBiZSBmb3JjZWQgb3IgcnVzaGVkLgpJcyBzb21ld2hhdCBib3RoIGlyb25pYyBhbmQgbm90IHRlcnJpYmx5IHVuY29tbW9uIGZvciBXaWxzb24gdG8gaGF2ZSBydW4gZm9yIHRoZSBwcmVzaWRlbmN5IGZvciBvbmUgdGhpbmcgYW5kIHRoZW4gZG9pbmcgZXhhY3RseSB0aGUgb3Bwb3NpdGUsIGFzIGhlIGRpZCB3aXRoIGhpcyAxOTE2IHJlIGVsZWN0aW9uIGNhbXBhaWduIHNsb2dhbiAiSGUgS2VwdCBVcyBvdXQgb2YgV2FyIi4gCk1vcmUgaW5mb3JtYXRpb24gc2hvdWxkIGJlIHJldmVhbGVkIGZvbGxvd2luZyB0aGUgcmV2ZWFsIG9mIHRoaXMgbGF0ZXN0IGNvbmNlcHQgY2FyIGluIEZyYW5rZnVydCBuZXh0IG1vbnRoLCBhbmQgeW91IGNhbiBnZXQgdGhlIGZ1bGwgZ3JlZW4gdGFrZSBvbiBpdCB3aXRoIEdyZWVuQ2FyUmVwb3J0cyBjb3ZlcmFnZS4gUHJlc3MgZGF5cyBmb3IgdGhlIHNob3cga2ljayBvZmYgb24gU2VwdGVtYmVyIDEzIGJ1dCBpbiB0aGUgbWVhbnRpbWUsIGZvbGxvdyBvdXIgY29tcGxldGUgY292ZXJhZ2Ugb2YgdGhlIGV2ZW50IGJ5IGNsaWNraW5nIGhlcmUuCkJlc2lkZXMsIEkgZ290IGEgbmljZSBwZWFjZWZ1bCBlaWdodCBob3VycyBhdCB3b3JrIHRvIGFjdHVhbGx5IHN0cmV0Y2ggbXkgYnJhaW4gYSBiaXQgICB0aGUgbW9udGhzIHdoZW4gSSB0b29rIG92ZXIgc28gc2hlIGNvdWxkIGdvIGJhY2sgdG8gd29yayB3ZXJlIE1VQ0ggaGFyZGVyLgpIZXJlLCB3ZSByZXBvcnQgYSBmYXN0aW5nIG1pbWlja2luZyBkaWV0IChGTUQpLCBmYXN0aW5nIDMgZGF5cyBmb2xsb3dlZCBieSA0IGRheXMgb2YgcmVmZWVkaW5nIGZvciB0aHJlZSAxIHdlZWsgY3ljbGVzLCB3aGljaCBhY2NlbGVyYXRlZCB0aGUgcmV0ZW50aW9uIG9mIG1vdG9yIGZ1bmN0aW9uIGFuZCBhdHRlbnVhdGVkIHRoZSBsb3NzIG9mIGRvcGFtaW5lcmdpYyBuZXVyb25zIGluIHRoZSBzdWJzdGFudGlhIG5pZ3JhIGluIDEgbWV0aHlsIDQgcGhlbnlsIDEsMiwzLDYgdGV0cmF0aHlkcm9weXJpZGluZSAoTVBUUCkgaW5kdWNlZCBQRCBtaWNlLiAKRGFucyBtb3ZpZXMgb2ZmZXJzIHZlcnkgcG9wdWxhciBzY2llbmNlIGZpY3Rpb24gZmlsbXMuIE9uZSBpcyBEYW5zIHVuZSBnYWxheGllIHByZXMgZGUgY2hleiB2b3VzLiBJdCB3YXMgcmVsZWFzZWQgaW4gMjAwNC4gSXQgaXMgcHJvZHVjZWQgaW4gUXVlYmVjICAgQ2FuYWRhLiBJdCBiZWNhbWUgaGlnaGx5IHBvcHVsYXIgYW1vbmcgYWxsIGFnZSBncm91cHMuIFRoZSBmaWxtIGlzIGEgcGFyb2R5IG9mIGJpZyBidWRnZXQgc2NpZW5jZSBmaWN0aW9uIGZpbG0gbGlrZSBTdGFyIFRyZWsuIFdpbGwgUm9nZXJzIHRyYXZlbGVkIGFyb3VuZCB0aGUgd29ybGQgdGhyZWUgdGltZXMgYW5kIGJlZnJpZW5kZWQgcHJlc2lkZW50cywgc2VuYXRvcnMsIHByaW1lIG1pbmlzdGVycywgYW5kIGtpbmdzLiBXaGF0IG1hZGUgdGhlIDIwMDUgc2Vhc29uIHBhcnRpY3VsYXJseSBkaXNhcHBvaW50aW5nIHdhcyB0aGUgZmFjdCB0aGUgMjAwNCB0ZWFtIGVuZGVkIHRoZSBzZWFzb24gd2l0aCA4OSB3aW5zIGFuZCBvbmUgb2YgdGhlIG1vc3QgaW1wcmVzc2l2ZSBob21lIHJlY29yZHMgaW4gYmFzZWJhbGwuIEluIDIwMDQsIHRoZSBSYW5nZXJzIHdvbiA1MSBob21lIGdhbWVzIHdoaWNoIHJhbmtlZCA0dGggb3ZlcmFsbCBpbiB0aGUgQW1lcmljYW4gTGVhZ3VlLCB3aGlsZSBpbiAyMDA1IFRleGFzIG1hbmFnZWQgb25seSB0byB3aW4gNDQsIGVuZGluZyB0aGUgc2Vhc29uIDE2IGdhbWVzIGJlaGluZCB0aGUgQUwgV2VzdCBBbmdlbHMuIFN0ZWxsYXIsIHNvbWV0aW1lcyBvZmYgdGhlIHdhbGwgd3JpdGluZyBtYWtlcyB1cCBmb3IgcG9vciBhbmltYXRpb24gaW4gdGhpcyBzZXJpZXMgd2hpY2ggZm9sbG93cyB0aGUgbGl2ZXMgb2YgZm91ciB0aGlyZCBncmFkZXJzIGF0IFNvdXRoIFBhcmsgRWxlbWVudGFyeSBTY2hvb2w6IFN0YW4sIEt5bGUsIENhcnRtYW4sIGFuZCBLZW5ueS4gSW4gT2N0b2JlciBpdCB3YXMgYW5ub3VuY2VkIHRoYXQgSmltIExleWxhbmQgd2FzIGNvbWluZyBvdXQgb2YgcmV0aXJlbWVudCBhbmQgaGFkIGFjY2VwdGVkIHRoZSBUaWdlcnMgbWFuYWdlcmlhbCBqb2IuIExleWxhbmQgaXMgbG9va2luZyB0byBoZWxwIGNoYW5nZSB0aGUgdGVhbSdzIGZvcnR1bmVzIGZvciAyMDA2IGFuZCBiZXlvbmQgYnV0IGhlIHdpbGwgaGF2ZSBoaXMgd29yayBjdXQgb3V0IGZvciBoaW0uIFRoZSBUaWdlcnMgbWFuYWdlZCB0byB3aW4gb25seSA3MSB0b3RhbCBnYW1lcyBpbiAyMDA1IHBvc3RpbmcgYSBsYWNrbHVzdGVyIDcxIDkxIHJlY29yZC4gWWV0IHNvbWVob3cgdGhlIE1vdG93biBvZmZlbnNlIHdhcyBhYmxlIHRvIHNjb3JlIGEgdG90YWwgb2YgNzIzIHJ1bnMgd2hpY2ggd2FzIG9ubHkgMTggZmV3ZXIgdGhlbiB0aGUgV29ybGQgU2VyaWVzIENoYW1waW9uIENoaWNhZ28gV2hpdGUgU294LiBPZiBjb3Vyc2UgaXQgZGlkbid0IGhlbHAgbWF0dGVycyB0aGF0IHRoZSBUaWdlcnMgYWxzbyBhbGxvd2VkIGEgdG90YWwgb2YgNzg3IHJ1bnMgICBtb3N0bHkgZHVlIHRvIGFuIGluY29uc2lzdGVudCBhbmQgdW5kZXJwZXJmb3JtaW5nIHBpdGNoaW5nIHN0YWZmLgpUaG9tcHNvbiBob2xkcyBhIEJhY2hlbG9yIG9mIFNjaWVuY2UgaW4gam91cm5hbGlzbSBmcm9tIHRoZSBTY3JpcHBzIFNjaG9vbCBvZiBKb3VybmFsaXNtIGF0IE9oaW8gVW5pdmVyc2l0eS4uIApBcyB0aGUgdG91cm5hbWVudCBwcm9ncmVzc2VzIG1vc3Qgb2YgdGhlIHdlYWtlciBwbGF5ZXJzIHdpbGwgYmUgZWxpbWluYXRlZC4gQXMgdGhlIGJsaW5kcyBpbmNyZWFzZSB5b3UgYXJlIGFkdmlzZWQgdG8gc3RhcnQgcGxheWluZyBhZ2dyZXNzaXZlLiAKQW5kIHNpbmNlIHlvdSBhcmUgZmFpcmx5IGZpdCwgaWYgeW91IGNhcmIgdXAgeW91IG1heSBub3RpY2UgYSBkZWNsaW5lIGluIHlvdXIgd2VpZ2h0IGxpZnRpbmcgcGVyZm9ybWFuY2UgdGhlIGRheSBmb2xsb3dpbmcgeW91ciBjYXJiIHVwLCBqdXN0IGJlY2F1c2UgeW91IGxpa2VseSBkZXBsZXRlIHlvdXIgc3RvcmVkIGdsdWNvc2UgaW4gdGhlIG1pZGRsZSBvZiB0aGUgbGlmdGluZy4gU28gdGhvc2UgZGF5cyBtaWdodCBiZSBnb29kIGRheXMgdG8gaGF2ZSBsb3dlciB3ZWlnaHQgd2l0aCBtb3JlIHJlcHMuIEkgaGF2ZSBubyBpZGVhIGhvdyB5b3UgcmVhbGx5IHJlc3BvbmQgdG8gaXQsIHlvdSBtYXkgcGVyZm9ybSBiZXR0ZXIsIHdobyBrbm93cy4uIApTaGUgc2F5cyB0aGUgcmV0cmVhdHMgaGVscCBjcmVhdGUgbGFzdGluZyBjaGFuZ2UgaW4gcGVvcGxlJ3MgbGl2ZXMsIGZyb20gc3BlY2lmaWMgdG9vbHMgKGxpa2UgYnJlYXRoaW5nIHRlY2huaXF1ZXMgYW5kIGhlcmJzKSwgdG8gc29tZXRoaW5nIG1vcmUgaW50YW5naWJsZS4KVGhlIG1lbnRhbGl0eSBvZiBhbHdheXMgbW92aW5nIGZvcndhcmQgaXMgYWxzbyBicmlsbGlhbnQuIApUaGUgaG90ZWxzIHdpbGwgb3BlbiB0byB0aGUgcHVibGljIGZvbGxvd2luZyB0aGUgRGF2aWQgRm9zdGVyIDMwdGggQW5uaXZlcnNhcnkgTWlyYWNsZSBHYWxhIE9jdC4gCkluIFZpY3RvcmlhLCBzb21lIGxvY2FsIGdvdmVybm1lbnRzIGhhdmUgZGV2ZWxvcGVkIHNwZWNpZmljIHBvbGljaWVzIHdoaWNoIG91dGxpbmUgdGhlaXIgcmVzcG9uc2UgYW5kIHZpc2lvbiB0byBsaW1pdGluZyBnYW1ibGluZyBoYXJtIHdpdGhpbiB0aGVpciBjb21tdW5pdHkuCkNoaXAgV2F2ZSBpcyBhIGdlbnJlIG9mIGVsZWN0cm9uaWMgZGFuY2UgbXVzaWMgKGVsZWN0cm9uaWNhKSB0aGF0IHN0YXJ0ZWQgaW4gQ2hpY2FnbyBhbmQgTmV3IFlvcmsgQ2l0eS4gVGhlIENoaXAgV2F2ZSBnZW5yZSB3YXMgY29pbmVkIGJ5IE5pY28gRGVtb250ZSBhbmQgYmxlbmRzIGVsZW1lbnRzIG9mIE5ldyBXYXZlLCBDaGljYWdvJ3MgYWNpZCBob3VzZSAocGh1dHVyZSkuIEVsZWN0cm8gd2F2ZSwgSGkgTlJHLCBJdGFsbyBEaXNjbyAoR2lvcmdpbyBNb3JvZGVyKS4gCk9oLCBubyAoLiAKVGhlIEdyZWF0IExha2VzOiBJbmNsdWRlcyB0aGUgc3RhdGVzIGJvcmRlcmluZyB0aGUgZ3JlYXQgbGFrZXMuIEl0IGlzIGZhaXJseSBwcm9ncmVzc2l2ZS4gSXRzIGNhcGl0YWwgaXMgTGFuc2luZy4KSGUgaW5zcGlyZXMgbWUgc28gbXVjaC4gClRob3VnaCBoZSBpcyBuZWFyaW5nIHRoZSBlbmQgb2YgaGlzIGNhcmVlciwgaXQgaXMgZGlmZmljdWx0IHRvIGFyZ3VlIHdpdGggaGlzIHN0YXR1cyBvZiBiZXN0IGtub3duIGZvb3RiYWxsZXIgdG8gdGhvc2Ugd2hvIGFyZW4ndCBmYW5zIG9mIGZvb3RiYWxsLCBpbiBhZGRpdGlvbiB0byB0aG9zZSB3aG8gYXJlLiAKVGhlcmUgYWxzbyB0aGUgdmVyeSByZWFsIHJlYWxpdHkgdGhhdCBtb3N0IHBlb3BsZSBzaW1wbHkgZG9udCBoYXZlIHRoZSBtZWFucyB0byBzdGFydCB0aGVpciBvd24gYnVzaW5lc3MuIApBdCBmaXJzdCwgdGhlIHJlc2VhcmNoZXJzLCBKYW1lcyBPbGRzIGFuZCBQZXRlciBNaWxuZXIsIGJlbGlldmVkIHRoZXkgZm91bmQgdGhlIHJlZ2lvbiBvZiB0aGUgYnJhaW4gcmVzcG9uc2libGUgZm9yIGdvdmVybmluZyBjdXJpb3NpdHkgW3NvdXJjZTogTGluZGVuXS4gVXBvbiBmdXJ0aGVyIGludmVzdGlnYXRpb24sIE9sZHMgYW5kIE1pbG5lciByZWFsaXplZCB0aGF0IHdoYXQgdGhleSdkIGRpc2NvdmVyZWQgd2FzIHRoZSBicmFpbidzIHJld2FyZCBjZW50ZXIsIGEgc3lzdGVtIG9mIHJlZ2lvbnMgYXNzb2NpYXRlZCB3aXRoIGRlbGl2ZXJpbmcgYSBzZW5zZSBvZiBwbGVhc3VyZSBpbiByZXR1cm4gZm9yIGNlcnRhaW4gYmVoYXZpb3JzIGxpa2UgZWF0aW5nIGFuZCBtYXRpbmcuIFRoaXMgZGlzY292ZXJ5IHdhcyByZXZvbHV0aW9uYXJ5OyBpdCBzaG93ZWQgdGhhdCBhbmltYWxzLCBpbmNsdWRpbmcgaHVtYW5zLCBhcmUgZXF1aXBwZWQgdG8gbGVhcm4gdGhyb3VnaCBtb3RpdmF0aW9uLi4gClRoZSByZWFsaXR5IGlzIHRoYXQgdGhlcmUgYWJvdXQgYSBoYWxmIGRvemVuIHVuZGVyZ3JvdW5kLCBhbmNpZW50IER3YXJ2ZW4gZXhwZXJpbWVudGFsIGZhY2lsaXRpZXMgdW5kZXJncm91bmQgICBvbmUgb2Ygd2hpY2ggaXMgdW5kZXIgdGhpcyBjaXR5LiBUaGUgIm9sZCBnb2QiIHRoYXQgdGhlIHBlb3BsZSBvZiB0aGlzIGNpdHkgaGF2ZSBiZWVuIHdvcnNoaXBwaW5nIGlzIGEgZmFpbGVkIGV4cGVyaW1lbnQgZnJvbSB0aGF0IHRpbWUuIEFuZCBhbHNvLCB0aGVzZSBleHBlcmltZW50YWwgZmFjaWxpdGllcyBhcmUgc3RpbGwgcnVubmluZywgZXZlbiBpZiB0aGUgRHdhcnZlcyBhcmVuIHJlYWxseSBhcm91bmQgYW55bW9yZSAoaGF2ZW4gZGVjaWRlZCBpZiBhIGdyb3VwIGlzIHN0aWxsIGhvbGVkIHVwIHNvbWV3aGVyZSkuIFRoZSBwbGF5ZXJzIGVuZGVkIHVwIHRyYXBwZWQgb24gdGhpcyBqdW5nbGUgaXNsYW5kIGJlY2F1c2Ugb2YgYSB3aGlybHBvb2wgdGhhdCBhcHBlYXJlZCBhbmQgc3Vja2VkIHRoZW0gaW50byB0aGUgZmFjaWxpdHkgZnJvbSB0aGUgbWlkZGxlIG9mIHRoZSBvY2Vhbi4KVHJ5IGFuZCBjdXJsIGEgZmV3IHBpZWNlcyBpbiB0aGUgbW9ybmluZyB0byBhZGQgdm9sdW1lIGFuZCBtYWtlIGl0IHByZXR0eSBvdmVyYWxsLiAKSGUgYXJyaXZlZCB3aXRoIGEgY2FuZSBhbmQgc2VhdGVkIGluIGEgd2hlZWxjaGFpciB0byBvdXIgaW50ZXJ2aWV3IGR1cmluZyBEcmFnb24gQ29uIDIwMTguIEhlIGhlbGQgaGlzIGxlZnQgYXJtIGNsb3NlIHRvIGhpcyBjaGVzdCwganVzdCBhcyBCaWcgQmlyZCBhbHdheXMgZG9lcy4gCjguIApJIGZyb20gdGhlIFVLLCBidXQgaGF2ZSBub3RlZCB0aGF0IGEgbG90IG9mIGxpdGVyYXR1cmUgaGFzIGEgZm9jdXMgb24gTm9ydGggQW1lcmljYS4gSSBoYXZlIHByZXR0eSBicm9hZCBpbnRlcmVzdHMgdG8gYmUgaG9uZXN0LCBhbHRob3VnaCBJIHN0aWxsIHZlcnkgbXVjaCBlYXJseSBvbiBpbiB0aGlzIGpvdXJuZXkuIApTdGVwaGVuIFBhZGRvY2sgYXR0ZW5kZWQgY29sbGVnZSwgaGlzIGZhbWlseSBzYWlkLCBhbmQgd29ya2VkIGZvciBhIHByZWRlY2Vzc29yIGNvbXBhbnkgdG8gTG9ja2hlZWQgTWFydGluLCB0aGUgYWVyb3NwYWNlIGNvbnRyYWN0aW5nIGNvbXBhbnksIGZyb20gMTk4NSAxOTg4LgpBbGwgd2l0aGRyYXdhbHMsIHdoZXJldmVyIHBvc3NpYmxlLCBhcmUgcGVyZm9ybWVkIHdpdGggdGhlIGRlcG9zaW5nIG1ldGhvZCwgYW5kIGlmIG5vdCwgQmV0RnJlZCBtYXkgcmVxdWlyZSB0aGF0IHlvdSBwcm92aWRlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYXMgcHJvb2YgZm9yIHlvdXIgaWRlbnRpdHksIHdoaWNoIGlzIGEgcHJhY3RpY2UgdXNlZCBhcyBwYXJ0IG9mIHRoZSBhbnRpIG1vbmV5IGxhdW5kZXJpbmcgcG9saWN5LkJldEZyZWQgb2ZmZXJzIDI0LzcgbGl2ZSBjaGF0LCBlbWFpbCBhbmQgdGVsZXBob25lIGN1c3RvbWVyIHN1cHBvcnQuIEFueSBxdWVzdGlvbnMgeW91IG1pZ2h0IGhhdmUgd2lsbCBiZSBhbnN3ZXJlZCBhcyBzb29uIGFzIHBvc3NpYmxlLCBpbiBtb3N0IGNhc2VzIGFsbW9zdCBpbW1lZGlhdGVseSwgYW5kIGluIHRoZSBiZXN0IHBvc3NpYmxlIG1hbm5lci4gCiJGb3IgYW55b25lIHRoYXQgaGFzIHRyYXZlbGxlZCB0aHJvdWdoIFNwYWdoZXR0aSBKdW5jdGlvbiAoYXMgaXQgaXMga25vd24gYnkgc29tZSkgdGhleSBjYW4gYXBwcmVjaWF0ZSB0aGF0IGl0IGlzIGEgaGlnaHdheSBsaWtlIGludGVyY2hhbmdlIHdpdGggb24gcmFtcHMsIG9mZiByYW1wcyBhbmQgdW5kZXJwYXNzZXMuIApTY2FyZWQgb2YgUVEsIEtLLCBhbmQgQUssIGFzIHdlbGwgYXMgYmVpbmcgb3V0IG9mIHBvc2l0aW9uIHdpdGggcGxheWVycyBiZWhpbmQsIGhlcm8gdGFua3MgYW5kIGV2ZW50dWFsbHkgZm9sZC4gCkhhdmluZyBzYWlkIGFsbCB0aGF0LCBob3dldmVyLCBvbmUgY2FuIG92ZXJkbyB0aGlzIGljZSBjb29sIHN0dWZmLiBJbiB0aGUgZ2FtZSBhZ2FpbnN0IHRoZSBMYW5rYW5zLCB0aGF0IG90aGVyIHBva2VyIHBsYXllciwgTWFoZWxhIEpheWF3YXJkZW5lLCByZWNlbnRseSByZWluc3RhdGVkIGFzIGNhcHRhaW4sIGFsbW9zdCBwdWxsZWQgdGhlIHdvb2wgb3ZlciBEaG9uaSBleWVzIGJ5IHNodWZmbGluZyB0aGUgYm93bGVycyByaWdodCBhdCB0aGUgZW5kIHNvIHRoYXQgTWFsaW5nYSB3b3VsZCBnZXQgdG8gYm93bCB0aGUgNDh0aCBhbmQgNTB0aCBvdmVycy4gVGhpcyBtYWRlIGl0IGltcGVyYXRpdmUgdG8gZ28gYWZ0ZXIgS3VsYXNla2FyYSB3aG8gYm93bGVkIHRoZSA0N3RoIG92ZXIsIHdoaWNoIHdvdWxkIG5vcm1hbGx5IGhhdmUgYmVlbiBNYWxpbmdhIGJlY2F1c2UgaGUgYm93bGVkIHRoZSA0NXRoIG92ZXIuIFdoZW4gSmF5YXdhcmRlbmUgaGVsZCBNYWxpbmdhIGJhY2ssIGl0IHNob3VsZCBoYXZlIGJlZW4gdGhlIHNpZ25hbCBmb3IgRGhvbmkgdG8gdHJlYXQgaXQgbGlrZSBhIGxhc3Qgb3ZlciwgYmVjYXVzZSB5b3Ugd2lsbCByYXJlbHkgZ2V0IHJ1bnMgaW4gZG91YmxlIGZpZ3VyZXMgaW4gYSBNYWxpbmdhIG92ZXIgYXQgdGhlIGVuZC4gSW5zdGVhZCwgRGhvbmkgcGxheWVkIHR3byBzaW5nbGVzIGFuZCBhIGRvdCBiYWxsOwpBbmRyZWEgU3dhbnNvbiBnYXZlIEhvZ3VlIGZvb2QsIGJ1cyBwYXNzZXMsIGEgY2VsbHBob25lIGFuZCwgbW9zdCBjcnVjaWFsIG9mIGFsbCwgYSBtb3RoZXIncyB0cnVzdC4gQXQgdGhlIHRpbWUsIGl0IG1hZGUgc2Vuc2U6IEhvZ3VlJ3MgcHJlc2VuY2UgbWFkZSBTd2Fuc29uJ3MgdGVlbmFnZSBkYXVnaHRlciwgYSBnaXJsIHdyZXN0bGluZyB3aXRoIHNlbGYgZXN0ZWVtIGlzc3VlcywgaGFwcHkgZm9yIHRoZSBmaXJzdCB0aW1lIGluIG1vbnRocy4KSXQgbm90IHRyeWluZyB0byBjb252ZXJ0IGV2ZXJ5IE5GTCBob3VzZWhvbGQuIApNaWdyYWluZSAgIE1pZ3JhaW5lIGhlYWRhY2hlcyBjYW4gYmUgY2F1c2VkIGJ5IHJlZHVjZWQgYmxvb2QgZmxvdyB0byB2YXJpb3VzIGFyZWFzIG9mIHRoZSBjZXJlYnJhbCBjb3J0ZXguIAoiSXQgd2FzIGEgcmF0aW9uYWxpc2F0aW9uIHRoYXQgd2FzIGFsd2F5cyBnb2luZyB0byBoYXBwZW4sIiBNciBCYWxsIHNhaWQuICJUaGVyZSB3YXMgYSBib29tIHRpbWUgaW4gdGhlIDE5NTBzIGFuZCA2MHMgYXMgcG9rZXIgbWFjaGluZXMgd2VyZSBsZWdhbGlzZWQgYnV0IG92ZXIgdGhlIGxhc3QgMTAgeWVhcnMgd2Ugc2VlbiBhIHJhcGlkIGNvbnNvbGlkYXRpb24gd2l0aCBjbHViIGNsb3N1cmVzIGFuZCBhbWFsZ2FtYXRpb25zLiAiQ2x1YnMgYXJlbiBqdXN0IGNvbXBldGluZyBhZ2FpbnN0IGEgY291cGxlIG9mIHB1YnMgW2ZvciB0aGUgc3BlbmRpbmcgZG9sbGFyXSAgdGhleSBjb21wZXRpbmcgYWdhaW5zdCBoYXJkd2FyZSBzdG9yZXMgYW5kIHRoZSBpbnRlcm5ldC4gCkkgZGlkIGEgR29vZ2xlIHNlYXJjaCBhbmQgY2FtZSBhY3Jvc3MgeW91ciBzaXRlLiBJdCB3YXMgZXhhY3RseSB3aGF0IEkgd2FzIGxvb2tpbmcgZm9yIGFuZCB3YXMgZWxhdGVkIHRvIGZpbmQgc3VjaCBhIGJyb2FkIHJhbmdlIG9mIGFydGljbGVzLiAKSXQgd2FzIGhvcnJpYmxlLiAKV2hpbGUgdGhlIFBSQyB3b3VsZCBzdGlsbCB0aHJvdyBhIGhpc3N5IGZpdCwgdGhlIFBSQyBjYW5ub3QgY2xhaW0gdGhhdCB0aGUgVVMgaXMgc3VwcG9ydGluZyBhIHByZXRlbmRlciBnb3Zlcm5tZW50IHRoYXQgY2xhaW1zIHRoZSBQUkMgdG8gYmUgaWxsZWdpdGltYXRlLgpUb28gbXVjaCB0aHlyb2lkIGhvcm1vbmUgdHlwaWNhbGx5IGNhdXNlcyB0aGUgbWV0YWJvbGlzbSB0byBnbyBpbnRvIG92ZXJkcml2ZS4gCkFzIGZvciBiYXJzLCB0aGVyZSBhcmUgdG9vIG1hbnkuIAoiV2Ugd291bGQgYW55dGhpbmcgZm9yIEppbSBCdXJyb3dzIGJlY2F1c2UgaGUgcmVhbGx5IGdhdmUgdXMgdGhlIG9wcG9ydHVuaXR5IG9mIGEgbGlmZXRpbWUgYW5kIHByb2JhYmx5IHRoZSBiZXN0IDEwIHllYXJzIG9mIG91ciBhY3RpbmcgY2FyZWVycyB0aGF0IHdlIHdpbGwgZm9yZXZlciByZW1lbWJlciwiIEFuaXN0b24gc2F5cy4gIkFuZCBoYWQgc29tZSBvZiB0aGUgZ3JlYXRlc3QgY3JlYXRpdml0eSBleHBlcmllbmNlZCBmcmllbmRzaGlwLCBmYW1pbHksIGhlYXJ0YnJlYWssIGJhYmllcywgZXZlcnl0aGluZyB0b2dldGhlci4gV2UgYWxzbyBzb3J0IG9mIGhhZCBhIHdvbmRlcmZ1bCBleHBlcmllbmNlIHdpdGggdGhlIHdvcmxkIGxvdmluZyB1cyBhcyB3ZWxsLCB0aGV5IGNvbm5lY3RlZCB3aXRoIHVzLiJCdXJyb3dzIGRpcmVjdGVkIHRoZSBGcmllbmRzIHBpbG90IGFuZCBoZWxwZWQgdGhlIHNpeCBzdGFycyBjb25uZWN0IGZvciB0aGUgZmlyc3QgdGltZS4gCkJ1aWxkaW5nIGEgRmFtaWx5ClRoZSByYW5nZSBpcyBpbXByZXNzaXZlLiAKQmFsbCBwb2ludHMgdG8gYSBncm93aW5nIGludGVyZXN0IGluIHRoZSBjaXJjdWxhciBlY29ub215LCBpbiB3aGljaCBtYW51ZmFjdHVyaW5nIGludm9sdmVzIHJlY3ljbGVkIG1hdGVyaWFscyBhbmQgd2FzdGUgaXMgZWxpbWluYXRlZCBvciByZXVzZWQgZWxzZXdoZXJlLiBTaGUgcG9pbnRzIHRvIG9uZSBtZW1iZXIgY29tcGFueSB0aGF0IHByb2R1Y2VzIGEgbG90IG9mIGNvcmsgd2FzdGUsIGFuZCBlZmZvcnRzIGJ5IHRoZSBuZXR3b3JrIHRvIGNvbm5lY3QgaXQgdG8gb3RoZXIgb3JnYW5pemF0aW9ucyB0aGF0IGdyaW5kIGNvcmsgdG8gbWFrZSBjb3JrIGZsb29ycy4uIApIZSBrbm93cyB0aGF0IEkgd2FzIGFyb3VuZCB0d2Vha2VycyBteSB3aG9sZSBsaWZlLCBhbmQgdGhhdCBJIGNhbiBnZXQgaGltIGFueXRoaW5nLCBldmVuIHRob3VnaCBJIGRvbiB1c2UvZnVja2luZyBoYXRlIGhhcmQgZHJ1Z3MuIApBIE1hcmNoIDIwMDQgc3R1ZHkgaW4gSk1QVCBmb3VuZCB0aGF0IGNoaXJvcHJhY3RpYyBjYXJlIGlzIG1vcmUgZWZmZWN0aXZlIHRoYW4gbWVkaWNhbCBjYXJlIGF0IHRyZWF0aW5nIGNocm9uaWMgbG93IGJhY2sgcGFpbiBpbiBwYXRpZW50cycgZmlyc3QgeWVhciBvZiBzeW1wdG9tcy4KQmVpbmcgYW4gaW5kaXZpZHVhbCB3aG8gd2FzIGJvcm4gYW5kIGhhcyBleHBlcmllbmNlZCBsaWZlIGFzIGEgc2luZ2xlIHBoeXNpY2FsIGVudGl0eSBmb3IgbWFueSB5ZWFycywgbXkgY3VycmVudCBzZW5zZSBvZiBjb25zY2lvdXNuZXNzIGlzIGluIGZhY3Qgbm8gZGlmZmVyZW50IG5vdyBmcm9tIHdoYXQgaXQgd291bGQgYmUgaWYgbXkgY3VycmVudCBmb3JtIHdhcyBpbiBmYWN0IG9uZSBvZiBhIGNsb25lLCBvciBvZiBhIGNvbXB1dGVyIHRoYXQgbXkgb3JpZ2luYWwgc2VsZiB3YXMgdXBsb2FkZWQgdG8gYmVmb3JlIGJlaW5nIGRlc3Ryb3llZC4KWW91IGJlIHNob2NrZWQgKGFzIEkgd2FzKSBob3cgbWFueSwgd2l0aG91dCBldmVuIGxvb2tpbmcgYXQgdGhlIGluc3RydWN0aW9ucywgc2FpZCwgIkkgZG9uIGtub3cgaG93IHRvIGRvIHRoaXMuIiBBcmUgeW91IGtpZGRpbmc/IFRoZSBmaXJzdCBpbnN0cnVjdGlvbiB3YXMgdG8gcmVhZCB0aGUgaW5zdHJ1Y3Rpb25zLiAKRGlsIFNlLiAKR3JvdXAgaGFzIGJlZW4gYmFja2VkIGJ5IFNoZWxkb24gQWRlbHNvbiwgY2hhaXJtYW4gb2YgY2FzaW5vIG9wZXJhdG9yIExhcyBWZWdhcyBTYW5kcyBDb3JwLiwgYSBHT1AgbWVnYWRvbm9yIHN1cHBvcnRlciBvZiBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIGFuZCBhIHN0YXVuY2ggb3Bwb25lbnQgb2YgaW50ZXJuZXQgZ2FtYmxpbmcuLiAKVGhlbiBoZSBraWxsZWQgaGltc2VsZi4gQSB5ZWFyIGxhdGVyLCBMYXMgVmVnYXMgcG9saWNlIGFuZCB0aGUgRkJJIGhhdmUgZm91bmQgbm8gbW90aXZlIGZvciB0aGUgcmFtcGFnZS4gRVQgdGhlIENsYXJrIENvdW50eSBTaGVyaWZmIEpvZSBMb21iYXJkbyB3aWxsIGludHJvZHVjZSB0aGUgc3VucmlzZSByZW1lbWJyYW5jZSwgd2hpY2ggd2lsbCBpbmNsdWRlIHJlbWFya3MgZnJvbSBHb3YuIApDYWRhIGNpZW50aXN0YSBudWNsZWFyIHNhYmUgcXVlIGd1ZXJyYSBudWNsZWFyIGRvIG11bmRvIDMgZSBzZXUgcmVzY2FsZG8gbnVjbGVhciBpbnZlcm5vIGVudG8gdWx0cmF2aW9sZXRhIHZlcm8gdGVyIHNvYnJldml2ZW50ZXMgZSBhbnRpIHRlcmNlaXJvIGRvcyBOb3N0cmFkbXVzIHF1ZSBDaHJpc3QgcGVuc2EgcHJvdm9jYW5kbyBndWVycmEgbnVjbGVhciAzIG11dWxtYW5vcyB2byBzb2JyZXZpdmVyIGUgcG9zc3VpciBvIG11bmRvLiAKQ3VycmVudGx5IHN3aW1taW5nIHVuZGVyIHdhdGVyIGZlbmRpbmcgb2ZmIHNvbWUgc2hhcmtzIG9yIHNvbWUgc2hpdC4gCklmIHlvdXIgZG9jdG9yIGlzIG5vdCB0cmVhdGluZyBpdCBhcyBhIHNlcmlvdXMgaXNzdWUsIHlvdSBuZWVkIHRvIGdldCBhbm90aGVyIG9uZSBmYXN0LiAKSnVzdCB0byBiZSBjbGVhciwgdGhlICJyZWFsIGxpZmUgYXBwbGljYXRpb25zIiBwcmVzZW50ZWQgaGVyZSBhcmUgYmFzZWQgbW9yZSBvbiBpZGVvbG9naWNhbGx5IGRyaXZlbiBhc3N1bXB0aW9ucyBhcyBvcHBvc2VkIHRvIGFueSBzb3J0IG9mIGVtcGlyaWNhbCByZXNlYXJjaCBvbiB0aGVzZSBncm91cHMgYmVsaWVmcyBvciBwcmFjdGljZS4KQ2FuIG5hYiB0aGVzZSBuZXdlc3QgZGVsdXhlIGFsYnVtIHNvbmdzIGZyb20gaVR1bmVzISAxMDApIDMgV2F5IChUaGUgR29sZGVuIFJ1bGUpIFtmZWF0LiBKdXN0aW4gVGltYmVybGFrZSBMYWR5IEdhR2FdIGEgY29tZWR5IHNpbmdsZSB3aXRoIGNvbWVkaWFucyBmZWF0dXJpbmcgdGhlIG9uZSBhbmQgb25seSBMYWR5IEdhR2EhIENhbiBuYWIgdGhpcyBzb25nIG9uIGlUdW5lcy4gCldoZW4gcG9rZW1vbiBjYXJkcyBzdGFydGVkIGdldHRpbmcgcG9wdWxhciBpbiBteSBuZWlnaGJvcmhvb2QgSSBvZiBjb3Vyc2UgZmxpcHBlZCwgdGhhdCB3YXMgcmlnaHQgdXAgbXkgYWxsZXkuIApUaGUgb25seSBzYWJvdGFnZSBpcyB0aGF0IG9mIHRoZSB1c3VycGVyIHRvIGFsbCB0aGUgcGVvcGxlIG9mIFZlbmV6dWVsYS4gT24gVlRWLCBFbGVjdHJpY2l0eSBNaW5pc3RlciBMdWlzIE1vdHRhIERvbWluZ3VleiBjYWxsZWQgdGhlIGJsYWNrb3V0IGFuIHdhciBhbmQgYWN0IG9mIHNhYm90YWdlLi4gCkkndmUgYWxzbyBoYWQgYSBkb2cgYml0ZSBzaXR1YXRpb24gb25jZS4gCkEgbm9ybWFsIGFuZCBmdW5jdGlvbmFsIGh1bWFuIGJlaW5nIGlzbiBnb2luZyB0byBqdXN0IHJhbmRvbWx5IGRyaXZlIDUwMCBtaWxlcyBmcm9tIHRoZWlyIGhvdXNlIGFuZCBraWxsIGEgcmFuZG9tIHBlcnNvbi4gUHN5Y2hvdGljIGJyZWFrZG93bnMgaGFwcGVuIHN1cmUsIGZvciBleGFtcGxlLCB0aGUgVVQgc2hvb3RlciwgQ2hhcmxlcyBXaGl0bWFuIGJ1dCBpdHMgdG9vIGZhciBhbmQgaW4gYmV0d2VlbiBhbmQgbWFzcyBtdXJkZXJzIGxpa2UgdGhhdCBhcmUgaW1wb3NzaWJsZSB0byBnZXQgYXdheSB3aXRoLgpUaGV5IGFyZSBoZXRlcm9nZW5lb3VzIGluIHRlcm1zIG9mIHRyaWFsIGRlc2lnbiwgcGF0aWVudCBzYW1wbGVzIGFuZCB0eXBlcyBvZiBtYXNzYWdlIHVzZWQuIApWaW9sYSBEYXZpcyB3YXMgYm9ybiBpbiBOb3ZhIFNjb3RpYSBpbiAxOTE0LiBNb3RpdmF0ZWQgYnkgaGVyIHBhcmVudHMgaGFyZCB3b3JrIGFuZCBjb21tdW5pdHkgaW52b2x2ZW1lbnQsIERlc21vbmQgYXNwaXJlZCB0byBidWlsZCBhIGNvc21ldGljcyBlbXBpcmUuIEFzIGEgQmxhY2sgd29tYW4gaW4gdGhlIDE5MzBzIGFuZCAxOTQwcywgVmlvbGEgRGVzbW9uZCB3YXMgYSB0cmFpbGJsYXplci4gSGVyIGFtYml0aW9uIHdhcyB0byBvd24gYSBoYWlyZHJlc3NpbmcgYnVzaW5lc3MuIEJlY2F1c2UgYmVhdXR5IHNjaG9vbHMgaW4gSGFsaWZheCByZXN0cmljdGVkIEJsYWNrIHdvbWVuIGFkbWlzc2lvbiwgVmlvbGEgdHJhdmVsbGVkIHRvIE1vbnRyZWFsIGFuZCBzZXZlcmFsIHN0YXRlcyB0byBwdXJzdWUgcmVsZXZhbnQgY291cnNlcy4gU2hlIHJlY2VpdmVkIGEgZGlwbG9tYSBmcm9tIHRoZSByZW5vd25lZCBBcGV4IENvbGxlZ2Ugb2YgQmVhdXR5IEN1bHR1cmUgYW5kIEhhaXJkcmVzc2luZyBpbiBBdGxhbnRpYyBDaXR5LgpJIHNheSB0aGlzIG9mdGVuLCBidXQgeW91IGNhbiBvbmx5IGJlIGluIG9uZSByb29tIGF0IGEgdGltZS4gClZhbHVhdGlvbiBzdXJ2ZXkuIFRoaXMgaXMgdGhlIGNoZWFwZXN0LCBhbmQgaWYgeW91IGRvbiBtYWtlIGFueSBvdGhlciByZXF1ZXN0cyB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgY2FycmllZCBvdXQgYnkgeW91ciBtb3J0Z2FnZSBjb21wYW55LCBzb21ldGltZXMgeW91IG1pZ2h0IG5vdCBldmVuIGhhdmUgdG8gcGF5IGV4dHJhIGZvciBpdC4gCihQaG90bzogSGFuZG91dClCZWNhdXNlIG9mIEQgc3RhdHVyZSBhcyBhbiBhcnRpc3QsIGhpcyB3b29kYmxvY2sgcHJpbnQgd2l0aCBpdHMgYW5hdG9taWNhbCBpbmFjY3VyYWNpZXMgd2FzIGNvcGllZCBleHRlbnNpdmVseSBpbiBFdXJvcGUgZm9yIHRoZSBuZXh0IDMwMCB5ZWFycy5mYXNjaW5hdGVkIHdpdGggaG93IHRoZXNlIHRoaW5ncyB0aGF0IGFyZSB1bnRydWUgYmVjb21lIGFjY2VwdGVkIGluIGhpc3RvcnksIEFjaGphZGkgc2FpZCBpbiBhbiBpbnRlcnZpZXcuSW5kb25lc2lhIHdhcyBhIGNvbG9ueSBvZiBUaGUgTmV0aGVybGFuZHMgZm9yIGFib3V0IHRocmVlIGNlbnR1cmllcyBhbmQgaGFzIGFuIGV4dGVuc2l2ZSBjb2xsZWN0aW9uIG9mIEluZG9uZXNpYW4gYXJ0aWZhY3RzIGluIHRoZSBSaWprc211c2V1bSBpbiBBbXN0ZXJkYW0uIApXZSBhcmUgdW5hYmxlIHRvIGNvbnNpZGVyIGFwcGxpY2FudHMgd2hvIGFyZSB0YWtpbmcgQWNjZXNzIGFuZCBGb3VuZGF0aW9uIHF1YWxpZmljYXRpb25zIGZvciBhbiBvZmZlciB1bmRlciB0aGUgc2NoZW1lLiBUaGlzIGlzIGJlY2F1c2UgdGhlc2UgcXVhbGlmaWNhdGlvbnMgYXJlIHR5cGljYWxseSB0YWtlbiBpbiBvbmUgeWVhciBhbmQgdGhlcmVmb3JlIHByZWRpY3RlZCBncmFkZXMgYXJlIGVpdGhlciB1bmF2YWlsYWJsZSBvciBiYXNlZCBvbiBhIHZlcnkgc21hbGwgYW1vdW50IG9mIHN0dWR5LiAKQnV0IFN0YXBwIHNheXMgdGhvc2UgdGltZXMgYmVmb3JlIENyZWVkJ3MgMjAwNCBicmVha3VwIGFsc28gY3JlYXRlZCBncmVhdCBtdXNpYy4gSW4gdGhlIGxhdGUgMTk5MHMsIENyZWVkIHNvbGQgMjcgbWlsbGlvbiBhbGJ1bXMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYWxvbmUgICA2IG1pbGxpb24gY29waWVzIG9mIGl0cyAxOTk3ICJNeSBPd24gUHJpc29uIiBhbmQgMTEgbWlsbGlvbiBjb3BpZXMgb2YgMTk5OSdzICJIdW1hbiBDbGF5LCIgd2l0aCBodWdlIGhpdHMgc3VjaCBhcyAiSGlnaGVyIiBhbmQgIldpdGggQXJtcyBXaWRlIE9wZW4uIi4gCkkgaG9uZXN0bHkgd291bGRuIGhhdmUgYmVlbiBzdXJwcmlzZWQgaWYgc2hlIHdhcyAxOCwgc28gaW1hZ2luZSBteSBzdXJwcmlzZSB3aGVuIHNoZSB0b2xkIG1lIHNoZSB3YXMgMjghIEkgbG9va2VkIGhlciB1cCBsYXRlciBvbiB0aGUgRHJlYW0gSGVhdmVuIHdlYnNpdGUgYW5kIHRoYXQgbGlzdHMgaGVyIGFzIDIzLCBidXQgc2hlIG11c3QgYmUgdGVsbGluZyB0aGUgdHJ1dGggYmVjYXVzZSBhIHdvbWFuIHdvdWxkbiBsaWUgYWJvdXQgYmVpbmcgb2xkZXIhIEFueXdheSwgSSBnaXZlIGhlciBhIG1vcmUgZ2VuZXJvdXMgc2NvcmUgZm9yIDI4IGJlY2F1c2Ugc2hlIGxvb2tlZCBhbmQgZmVsdCBzbyBtdWNoIHlvdW5nZXIuIApLdXJ6ZXJoYW5kIGx0ZXRlIGVyIHNpY2ggYXVzIGVpbmVyIEt1aGdsb2NrZSBlaW5lIFNwZWt0cmFsbnV0LCB3b2JlaSBpaG0gZGVyIEx0a29sYmVuIHNvIHVuZ2xja2xpY2ggaW4gZGVuIFNjaHJpdHQgZmllbCwgZGFzcyBlciBsYXV0IHNjaHJlaWVuZCBkYXMgRXh0cmVtZW50ZW56eXNhbCBmYWxsZW4gbGllLCB3b3JhdWZoaW4gZXMgc2ljaCB6dSBlaW5lciBEZXh0cmFseXNlbnpldXNlIHZlcmJvZywgZGllIHNvZ2xlaWNoIGVpZ2Vuc3RuZGlnIGJlZ2FubiwgZGVzIFByb2Zlc3NvcnMgSGF1c2hhbHQgYXVmenVydW1lbiwgS2FydG9mZmVsbiB6dSBzY2hsZW4gdW5kIFNhdWNlbiB6dSByZWR1emllcmVuLiBJbiBkZXIgZGFyYXVmZm9sZ2VuZGVuIE5hY2h0IGVyc2NoaWVuIGRlbSBQcm9mZXNzb3IgZGllIG5ldWVyZnVuZGVuZSBaZXVzZSBpbiBlaW5lbSBLbGFydHJhdW0gdW5kIGZocnRlIGlobiBkdXJjaCBlaW4gYXN0cmFsZXMgV3VybWxvY2ggenUgc2VpbmVyIHZlcnN0b3JiZW5lbiBHcm9tdXR0ZXIsIGRpZSBhbiBlaW5lciBnYWxha3Rpc2NoZW4gVGhyb21ib3p5dGVucmFzdHN0dHRlIGF1ZiBpaG4gd2FydGV0ZSB1bmQgYmVyc2Nod2VuZ2xpY2ggYmVncnRlLiAKVGhhdCB3YXMgYmVmb3JlIHJhY2lub3Mgd2VyZSBsZWdhbGl6ZWQsIGhvd2V2ZXIsIGFuZCBjZXJ0YWlubHkgZGlkbid0IHRha2UgaW50byBhY2NvdW50IGEgcGxhbm5lZCwgZnVsbCBzZXJ2aWNlIGNhc2lubyBpbiBOZXcgQ2FzdGxlLCBQYS4sIG5lYXIgdGhlIE9oaW8gYm9yZGVyLiBUaGUgUGVubnN5bHZhbmlhIEdhbWluZyBDb250cm9sIEJvYXJkIGhhcyBhIGxpY2Vuc2UgZm9yIGEgY2FzaW5vIHRoZXJlLCBidXQgaGFzIHlldCB0byBhcHByb3ZlIGEgZGV2ZWxvcG1lbnQgcGxhbi4gV2hpbGUgR2lsYmVydCBoYXMgY29udGludWVkIHRvIHNheSB0aGUgbmV3IGNhc2lubywgd2hpY2ggY291bGQgb2ZmZXIgdGhlIGtpbmQgb2YgYW1lbml0aWVzIG5vdyBhdmFpbGFibGUgYXQgdGhlIHJhY2lub3MsIGlzIGluIHRoZSBvZmZpbmcsIG5vIHRpbWV0YWJsZSBpcyBiZWluZyBvZmZlcmVkLiAKVGVyYW1lbG9zaXNjb29sICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpXaGF0IGFib3V0IGludHJvdmVydHMgb3Igb3RoZXIgbGVzcyBzb2NpYWxseSBhZGVwdCBwZW9wbGUgdGhhdCBqdXN0IGRvbid0IHVuZGVyc3RhbmQgaXQ/IE9yIGNhbid0IGNvbW11bmljYXRlIGVmZmVjdGl2ZWx5IHdpdGggaXQ/IEkgc3VyZSBhcyBoZWxsIGRvbid0IHVuZGVyc3RhbmQgYW55dGhpbmcgYmV5b25kIHRoZSBtb3N0IG9idmlvdXMgYm9keSBsYW5ndWFnZSBhbmQgSSB0ZW5kIG5vdCB0byB1c2UgaXQsIHNvbWV0aW1lcyBjb21tdW5pY2F0aW5nIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IEkgbWVhbiB3aXRoIG15IGJvZHkgbGFuZ3VhZ2UgYWNjaWRlbnRhbGx5LiBJJ2Qgc2F5IHRoYXQgcmVxdWlyZXMgc29tZSBpbm5hdGUgc29jaWFsIHVuZGVyc3RhbmRpbmcgb3IgdHJhaW5pbmcsIHdoaWNoIHdvdWxkIHByZXR0eSBtdWNoIGVxdWF0ZSB0byAidGFsZW50Ii4uIApHb29kIHZzLiAKVHJvb3BlciBQcmVzZ3JhdmVzIHRvbGQganVyb3JzIGhlIGFuZCBkZXRlY3RpdmUgRG9uYWxkIFN0ZXZlbnMgd2VyZSBoaWRpbmcgaW5zaWRlIHRoZSBDb3JuZXIgUHViIG9uIEphbi4gCkFsc28sIGlmIHlvdSB3YW50IHRvIG1lc3NhZ2UgbWUgeW91IG1vcmUgdGhhbiB3ZWxjb21lIHRvLiAKV2hlbiB0aGUgcml2ZXIgY2FyZCBvciB0aGUgZmlmdGggY2FyZCBpcyBhbHJlYWR5IGRlYWx0LCB0aGUgcGxheWVycyB3aWxsIGRlY2lkZSBpZiB0aGV5IHdpbGwgcmFpc2UsIGNoZWNrLCBjYWxsIG9yIGZvbGQuIApTdWNoIGEgd2VpcmQgZmVlbGluZy4gSXQgbGlrZSBub3Qgd2FudGluZyB0byBsZWF2ZSB5b3VyIGhvdXNlIGZvciBhIHNvY2lhbCB0aGluZywgZXZlbiB0aG91Z2ggeW91IGtub3cgeW91IGhhdmUgZnVuIG9uY2UgeW91IHRoZXJlLiAKVGhleSB1c3VhbGx5IGZvbGQsIGluIGZhY3QgYWxtb3N0IGFsd2F5cyBmb2xkIHVubGVzcyB0aGV5IGFyZSBpbiB0aGUgYmxpbmRzIG9yIGhhdmUgYSBzdHJvbmcgaGFuZC4gClRoZXBvd2VyaXN5b3VycyAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCkpzbWl0dHk5OTUgdQpUaGUgbmlnaHQgc3RhcnRlZCBvdXQganVzdCBsaWtlIGFueSBvdGhlciwgd2l0aCBtZSByaWZsaW5nIHRocm91Z2ggbXkgY2xvc2V0IGZvciBzb21ldGhpbmcgdG8gd2Vhci4gCkNvbmZlc3Npb246IEkgY291bGQgaGF2ZSB1c2VkIHRoZSBoZWF2eSBiYWcgaW4gbXkgYmFzZW1lbnQgeWVzdGVyZGF5LCBidXQgSSBkaWRuJ3QuCkhvdyB0byBCZWNvbWUgYSBQcm9mZXNzaW9uYWwgUG9rZXIgUGxheWVyCk9yIGlmIHUgaGF2ZSBhY2UgaGlnaCBmbHVzaCBhbmQgcmVhbGx5IHRoZSBvbmx5IGNhbGxpbmcgaGFuZHMgZm9yIHZpbGxhaW4gYXJlIGsgb3IgcSBoaSBmbHVzaCB0aGVuIGFnYWluIHUgd2FudCB0byBiZXQgcG90U28gaWYgdGhlIGZsb3Agd2FzIFE3MiByYWluYm93IHRoZW4geW91IHdvdWxkIG9mdGVuIHdhbnQgdG8gY29uc2lkZXIgYmV0dGluZyBvbmx5IGhhbGYgdGhlIGZsb3AgYmVjYXVzZSB0aGVyZSBhcmUgbm8gZHJhd3MgYXQgYWxsLiAKTW9zdCBuaWdodHMgaXQgd2FzIHRoZSB0aHJlZSBvZiB1cyBhbmQgbWF5YmUgb25lIG9yIHR3byBwZW9wbGUsIGJ1dCBhcyB0aGUgd29yZCBzcHJlYWQsIHRoaW5ncyBzdGFydGVkIGNoYW5naW5nLiAKQmlzaGVyIDM4IC4gU29mb3J0IHBlciBEb3dubG9hZCBsaWVmZXJiYXIuIEdSVU5ETEFHRU4gREVSIEVMRUtUUk9URUNITklLIERvd25sb2FkIEdydW5kbGFnZW4gRGVyIEVsZWt0cm90ZWNobmlrIGVib29rIFBERiBvciBSZWFkIE9ubGluZSBib29rcyBpbiBQREYsIEVQVUIsIGFuZCBNb2JpIEZvcm1hdC4gClNoZSBhbHNvIGlzIG5vdyB3b3JraW5nIHdpdGggYW4gRW5nbGlzaCBidWxsIGRvZyBicmVlZGVyLiBUaGVpciBjdXJyZW50IGdvYWwgaXMgdG8gaGF2ZSB0aGUgZG9ncyBiZSBhYmxlIHRvIHJlcHJvZHVjZSBvbiB0aGVpciBvd24sIHRoZW4gd29yayB1cCB0byBoYXZpbmcgYSBuYXR1cmFsIGJpcnRoIGluc3RlYWQgb2YgYSBjIHNlY3Rpb24uR3dlbkx1cnkgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ29QdXQgaXQgdG8gdGhlbSB0aGlzIHdheSwgIlNpbmNlIHlvdSBvdmVycnVsZWQgbXkgd2lzaGVzLCB0aGlzIGlzIHdoYXQgZ29pbmcgdG8gaGFwcGVuLiAKVGhlIG5ldyBkcml2ZXIgZGlkbiB0aGluayBoaXMgd2lmZSBzaG91bGQgYmUgaW4gdGhlIGNhciB3aGlsZSB3b3JraW5nLCBidXQgdGhlIHdpZmUgcmVmdXNlZCB0byBnZXQgb3V0IG9mIHRoZSBjYXIgYW5kIGJlIHN0cmFuZGVkIGluIHRoZSBtaWRkbGUgb2YgdGhlIGNpdHksIEZlcmVuc3RlaW4gd3JpdGVzLCBwYXJhcGhyYXNpbmcgS2FsYW5pY2sgc3RvcnkuIGhlIG1hbmFnZWQgdG8gY29udmluY2UgaGVyIHRvIGNsaW1iIGludG8gdGhlIHRydW5rLCB0aGlua2luZyBubyBvbmUgd291bGQgYmUgYW55IHRoZSB3aXNlci4gcGxhbiBiYWNrZmlyZWQsIGhvd2V2ZXIsIHdoZW4gdGhlIGN1c3RvbWVyIGhhZCBsdWdnYWdlIGFuZCB3ZW50IHRvIHB1dCBpdCBpbiB0aGUgb2NjdXBpZWQgdHJ1bmsuCk9nYXRhIGlzIHRoZSBvbmx5IGNoYXJhY3RlciB3aG8gaGFzIGJlZW4gYSBtZW1iZXIgb2YgZXZlcnkgZmFjdGlvbiBpbiB0aGUgc2VyaWVzLCBoaXMgbW90aXZlcyBhcmUgdGhlIGJpZ2dlc3QgbXlzdGVyeSBpbiBHSy4gSGlzIG1vdGl2ZXMgaGFzIHRvIGJlIHNvbWV0aGluZyBiaWcsIHdoeSBlbHNlIHdvdWxkIE5vZGEga2VlcCB0aGVtIHNvIGFtYmlnb3VzIGFmdGVyIGFsbCB0aGlzIHRpbWU/IEhlIHdhcyBhbHNvIHRoZSBmaXJzdCBndXkgU3VnaW1vdG8gZm91Z2h0LCBhbmQgaGFzIGJlZW4gYSBmb2lsIHRvIFN1Z2ltb3RvIGR1cmluZyB0aGUgY291cnNlIG9mIHRoZSBzZXJpZXMuIApHYWRzZGVuIHdhcyBwbGFjZWQgb24gcGFpZCBhZG1pbmlzdHJhdGl2ZSBsZWF2ZSBhZnRlciBhIHN0dWRlbnQgY29tcGxhaW5lZCBhYm91dCB0d28gY29tbWVudHMgc2hlIGhhZCBtYWRlIG9uIGhlciBGYWNlYm9vayBwYWdlOiAiSGFkIGEgZ29vZCBkYXkgdG9kYXksIGRpZG4gd2FudCB0byBraWxsIGV2ZW4gb25lIHN0dWRlbnQuOiApIE5vdyBGcmlkYXkgd2FzIGEgZGlmZmVyZW50IHN0b3J5IC4iIGFuZCAiRG9lcyBhbnlvbmUga25vdyB3aGVyZSBJIGNhbiBmaW5kIGEgdmVyeSBkaXNjcmV0ZSBbc2ljXSBoaXRtYW4sIGl0IGJlZW4gdGhhdCBraW5kIG9mIGRheS4iLiAKU2kgdm91cyBhdmV6IHVuIGFzIGV0IHVuZSBmaWd1cmUgb3UgZGV1eCBmaWd1cmVzIGNvbnNjdXRpdmVzIGRlIGNvdWxldXJzIGRpZmZyZW50ZXMsIGNlIHNvbnQgZGUgYm9ubmVzIG1haW5zIGRlIGRwYXJ0IGV0IGlsIGVzdCBjb25zZWlsbCBkZSBzdWl2cmUuLiAKTXlvZmFzY2lhbCByZWxlYXNlIGlzIGEgc3BlY2lhbGl6ZWQgc3RyZXRjaGluZyB0ZWNobmlxdWUgdXNlZCB0byByZWxlYXNlIHRlbnNpb24gYW5kIHJlYWxpZ24gdGhlIGJvZHkuIFRoZSB3b3JkIG15b2Zhc2NpYSBpcyBkZXJpdmVkIGZyb20gdGhlIExhdGluIHdvcmQgIm15bywiIG1lYW5pbmcgbXVzY2xlLCBhbmQgImZhc2NpYSwiIGZvciBiYW5kLiBGYXNjaWEgaXMgdG91Z2ggY29ubmVjdGl2ZSB0aXNzdWUgdGhhdCBzcHJlYWRzIHRocm91Z2hvdXQgdGhlIGJvZHkgaW4gYSB0aHJlZSBkaW1lbnNpb25hbCB3ZWIsIGZyb20gdGhlIGhlYWQgdG8gdGhlIHRvZXMuIEZhc2NpYSBzdXJyb3VuZHMgZXZlcnkgbXVzY2xlLCBib25lLCBuZXJ2ZSBhbmQgb3JnYW4gaW4gdGhlIGJvZHkuCkl0IGlzIGFsc28gd29ydGggbm90aW5nIGhlcmUgdGhhdCB3aGVyZSBJIHdvcmsgd2Ugb25seSB3b3JrIDUgZGF5cyBhIHdlZWsgYW5kIHdpdGhpbiBlYWNoIHNwcmludCBhIGRheSBpcyBsb3N0IHRvIG1lZXRpbmdzIGxpa2UgdGhlIGRlbW8sIGl0ZXJhdGlvbiBwbGFubmluZyBtZWV0aW5nLCByZXRyb3NwZWN0aXZlIGFuZCByZXZpZXcgc28gdGhlcmUgaXMgb25seSA5IGRheXMgdG8gYSBzcHJpbnQuIApNZXNzYWdlIGZyb20gU3Ryb25nIEVhcnRoIFdvbWFuLCBicmF2ZSwgZGFuY2UgdGhyb3VnaCB0aGUgcGFpbiwgYW5kIGVtYnJhY2UgeW91ciBjdWx0dXJlLiBZb3UgaGF2ZSBhIHJpY2ggYW5kIHByb3VkIGhpc3RvcnksIHJlYWNoIGZvciBpdCB3aGVuIHlvdSBmZWVsIG92ZXJ3aGVsbWVkLiBMb29rIGFyb3VuZCB5b3UsIHJlYWNoIG91dCwgd2UgYXJlIGhlcmUsIHlvdXIgcGVvcGxlLCB5b3VyIGhpc3RvcnksIHlvdXIgZnV0dXJlLCBpdCBpcyBpbiBhbGwgb2YgdXMuClByYWdtYXRpY2FsbHksIHlvdSBzdGlsbCBuZWVkIGJvdGguIApEQyBDb21pY3NXZSBhc3N1bWUgdGhlIG5leHQgcGFnZSBmZWF0dXJlcyBEYWZmeSBEdWNrIHN0YWJiaW5nIGEgbWFuIHRvIGRlYXRoIG92ZXIgYSBwb2tlciBnYW1lIGluIFRpanVhbmEuCkJlcm5pZSBoYXMgYmVlbiBxdWlldCBkb2NpbGUgYWJvdXQgaXQgYWxsIGFuZCBpZiB5b3UgdHJ5IHRvIHRlbGwgdGhlIHRydXRoIGFib3V0IGFsbCBvZiB0aGlzIG9uIFJlZGRpdCB0aGVuICJwcm9ncmVzc2l2ZXMiIHdpbGwgYXR0YWNrIHlvdSBmb3IgaXQuIApUdXJuIFRkLiBUaGlzIGlzIHJlYWxseSByZWFsbHkgZ29vZC4KQWxzbyBrZWVwIHRoZXNlIGRheXMgaW4gbWluZCBhbmQgcGxhbiBhcm91bmQgdGhlbSwgbWF5YmUgbG93ZXIgeW91ciBpbnRha2Ugc2xpZ2h0bHkgdGhlIGRheSBiZWZvcmUgYW5kIGFmdGVyIHRvICJjb3VudGVyYmFsYW5jZSIgdGhlIGRheS4uIApQdXQgeW91ciBiYWJ5IHRvIGJlZCwgY3VkZGxlIGhpbSwgbG92ZSBoaW0uIGFuZCBsZXQgdGhlIGFubm95YW5jZXMgb2YgdG9kYXkgZ28uIFRyeSB0byBzcGVhayB3aXRoIHlvdXIgZXggdG8gc2VlIHdoZXJlIHRoZSBkaXNjb25uZWN0IHdhcyAgIHlvdSBoYXZlIGEgbG9uZyAxNiB5ZWFycyBvZiBjbyBwYXJlbnRpbmcgYWhlYWQsIGFuZCBpdCBiZXR0ZXIgdG8gYmUgb24gdGhlIHNhbWUgcGFnZS4KV2UgYm90aCBoYWQgYW4gaW50ZXJ2aWV3IGZvciBhIGpvYiBhY3Jvc3MgdG93bi4gClRoZXkgd2VyZSBhbiBvaWwgYW5kIGdhcyBvbmUgdHJpY2sgcG9ueS4gVGhpcyB3b3JrZWQgZm9yIGEgd2hpbGUgYXMgdGhleSBoYWQgc28gbXVjaCBtb25leSB0aGV5IGNvdWxkIGltcG9ydCB3aGF0ZXZlciB0aGV5IHdhbnRlZC4gCkluIEtvcmVhIHRoZXkgbm9ybWFsbHkgZG9udC4gClBldGllUGFsICAzIHBvaW50cyAgc3VibWl0dGVkIDI5IGRheXMgYWdvClRoaXMgaXMgd2hhdCB0aGV5IGFyZSBkb2luZywgd2VsbCBvciBhdCBsZWFzdCB0cnlpbmcgdG8gZG8uIApUbyBzdGVyZW90eXBlIGV2ZXJ5b25lIHRoYXQgdXNlZCB0aGF0IHdvcmQgYXMgcmFjaXN0IGlzIHJldGFyZGVkIGFuZCB0ZWxscyBtZSBtb3JlIGFib3V0IGhvdyBwcmVqdWRpY2UgdGhleSB0aGVtc2VsdmVzIGFyZSB0aGFuIHRoZSBwZW9wbGUgdGhleSBhcmUgY29tcGxhaW5pbmcgYWJvdXQuIFRoZSB0b25lIGFuZCBjb250ZXh0IGFyZSBzbyBudWFuY2UgdGhhdCBibGFua2V0IHN0YXRlbWVudHMgbGlrZSB0aGF0IG1ha2VzIG1lIHNoYWtlIG15IGhlYWQuIApNYXJsYSBLYXBsb3dpdHogaXMgJ3RpcmVkIG9mIHRoZSBnbG9vbSBhbmQgZG9vbScKSmVycmlkIFRheWxvciBhZGRlZCBhIGRvdWJsZSwgd2hpbGUgc2luZ2xlcyBjYW1lIGZyb20gUmF5c29uIEJsaW5jbywgQWFyb24gU3RlZmFudWsgYW5kIExvZ2FuIEpvbmVzLiAKNS4gTWFrZSBzbWFydCBjaG9pY2VzLiBTZWVkcyBhcmUgbm90IGluZXhwZW5zaXZlLCBlc3BlY2lhbGx5IHNvbWUgb2YgdGhlIG5ldyBoeWJyaWRzLiBTb3cgZWFybHkgc2VlZHMgbGlrZSBwZWFzLCBiZWFucyBhbmQgc29tZSByb290IGNyb3BzIGRpcmVjdGx5IGluIHRoZSBnYXJkZW4sIGJ1dCB3aGVuIGl0IGNvbWVzIHRvIGJyYXNzaWNhcywgb25pb25zLCBsZWVrcyBhbmQgbGV0dHVjZSB0aGF0IHRha2UgYSBsb25nIHRpbWUgdG8gZ3JvdyBhbmQgaGFyZGVuIG9mZiBpbiB0aGUgY29sZCwgaXQgb2Z0ZW4gY2hlYXBlciBhbmQgZWFzaWVyIHRvIHBsYW50IGEgcGFjayBvZiBwcmUgc3RhcnRlZCBwbGFudHMuCkluZGVlZCwgdGhlcmUncyBzdXJwcmlzaW5nbHkgZ29vZCB2YWx1ZSB0byBiZSBoYWQgZm9yIGdvaW5nIHNvbG8gaW4gQXNwZW4uLiAKQ29tbWVudGluZyBvbiB0aGUgZGV2ZWxvcG1lbnQsIFByYXNoYW50IE1laHRhLCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciwgS29tbGkgTWVkaWEsIHNheXMsICJaeW5nYSBpcyB0aGUgYnJhbmQgbmFtZSB0aGF0IGNvbWVzIHRvIHlvdXIgbWluZCB3aGVuIHlvdSB0aGluayBvZiBzb2NpYWwgZ2FtaW5nLiBXaXRoIG1pbGxpb25zIG9mIG1vbnRobHkgYWN0aXZlIHVzZXJzIHBsYXlpbmcgZ2FtZXMgd2l0aCBaeW5nYSwgYSB3aG9sZSBuZXcgY2F0ZWdvcnkgaGFzIGJlZW4gY3JlYXRlZC4gWnluZ2EgYW5kIEtvbWxpIHdpbGwgbm93IGFsbG93IGJyYW5kcyBhbGwgb3ZlciBBc2lhIHRvIGNvbm5lY3QgYW5kIGVuZ2FnZSB3aXRoIHRoZWlyIGNvbW11bml0eSBpbiBhIHVuaXF1ZSBtYW5uZXIuIi4gCkJ1dCBGYXRoZXIgRGF2aWQgTWNDb25rZXksIHRoZSBwcmllc3QgYXQgQWxsIFNhaW50cywgTm9ydGhhbXB0b24sIHNhaWQgaGUgaGFkIGJlZW4gImFwcGFsbGVkIiBieSB0aGUgaW5jaWRlbnQgb24gU2F0dXJkYXkgbmlnaHQuCkl0IGxpa2UgYSBTdW5kYXkgbGVhZ3VlIGZvb3RiYWxsZXIgcGxheWluZyBpbiB0aGUgV29ybGQgQ3VwIGZpbmFsICAgYnV0IGluIHBva2VyLCBiZWNhdXNlIHRoZXJlIGFuIGVsZW1lbnQgb2YgbHVjaywgYW4gYW1hdGV1ciBjYW4gZW5kIHVwIGJlYXRpbmcgdGhlIHByb2Zlc3Npb25hbHMuLiAKQSByb3V0aW5lIHNvIGludGVuc2UgZGV0ZXJzIHRoZSA1IGZvb3Qgc3RhciBmcm9tIHdhbnRpbmcgdG8gc2Fib3RhZ2UgaGVyc2VsZi4gTGVlIHNheXMgdGhlIG1vdGhlciBvZiBNYXNvbiwgOCwgUGVuZWxvcGUsIDYsIGFuZCBSZWlnbiwgMywgKHdpdGggZXggU2NvdHQgRGlzaWNrKSBpcyAicmVhbGx5LCByZWFsbHkgZ29vZCIgYWJvdXQgc3RpY2tpbmcgdG8gdGhlIHJlY29tbWVuZGVkIGhpZ2ggcHJvdGVpbiwgaGlnaCBmaWJlciwgbG93IHN1Z2FyIGRpZXQuClBva2VyIEV0aXF1aXR0ZSBvciBBbSBJIHRoZSBBc3Nob2xlCkludGVyZXN0aW5nIGlkZWEsIGJ1dCB3ZSBhbHJlYWR5IHNlZW4gMjUgc3R1ZGVudHMgYXMgc2VlbiBpbiB0aGF0IG9uZSBwb3N0IG9yZ2FuaXppbmcgc3R1ZGVudHMgYnkgaG91c2U6IDggQmxhY2sgRWFnbGVzLCA5IEJsdWUgTGlvbnMsIGFuZCA4IEdvbGRlbiBEZWVyIElJUkMuIEJ1dCBpdCBpcyBpbnRlcmVzdGluZyBzaW5jZSBJIGJlbGlldmUgd2UgYWxyZWFkeSBtYXRjaGVkIEVkZWxnYXJkIERpbWl0cmkgYW5kIENsYXVkZSBmYW1pbHkgY3Jlc3RzIHRvIG9uZXMgb24gdGhlIHdoZWVsLiBBbHNvLCBpZiB5b3UgbG9vayBjbG9zZWx5IGluIHRoZSBuZXcgdHJhaWxlciwgd2hlbiBMaW5oYXJkdCB1c2VzIGhlYWxpbmcgbWFnaWMsIGhpcyBtYWdpY2FsIHJ1bmUgbWF0Y2hlcyB0aGUgY3Jlc3Qgb24gdGhlIGJvdHRvbSByaWdodCB0aGF0IHRvIHRoZSBsZWZ0IG9mIHRoZSBncmF5ZWQgb3V0IG9uZS4KVGhlIFdhbGsgRnJlZSBGb3VuZGF0aW9uIHJlcG9ydGVkIGluIDIwMTggdGhhdCBzbGF2ZXJ5IGluIHdlYWx0aHkgV2VzdGVybiBzb2NpZXRpZXMgaXMgbXVjaCBtb3JlIHByZXZhbGVudCB0aGFuIHByZXZpb3VzbHkga25vd24sIGluIHBhcnRpY3VsYXIgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIEdyZWF0IEJyaXRhaW4sIHdoaWNoIGhhdmUgNDAzLDAwMCAob25lIGluIDgwMCkgYW5kIDEzNiwwMDAgc2xhdmVzIHJlc3BlY3RpdmVseS4gQW5kcmV3IEZvcnJlc3QsIGZvdW5kZXIgb2YgdGhlIG9yZ2FuaXphdGlvbiwgc2FpZCB0aGF0ICJUaGUgVW5pdGVkIFN0YXRlcyBpcyBvbmUgb2YgdGhlIG1vc3QgYWR2YW5jZWQgY291bnRyaWVzIGluIHRoZSB3b3JsZCB5ZXQgaGFzIG1vcmUgdGhhbiA0MDAsMDAwIG1vZGVybiBzbGF2ZXMgd29ya2luZyB1bmRlciBmb3JjZWQgbGFib3IgY29uZGl0aW9ucy4iWzMxN10uIApEbyBub3QgbWVzc2FnZSBtb2RlcmF0b3JzIGluZGl2aWR1YWxseSBhYm91dCBwb3N0cyBub3QgYXBwZWFyaW5nIGluIHRoZSBuZXcgcXVldWUgb3IgYmFuIGFwcGVhbHMuIE1lc3NhZ2VzIHNob3VsZCBiZSBzZW50IGFzIGEgbW9kbWFpbCB0byAvci9WaWRlb3MuIEZhaWx1cmUgdG8gZG8gc28gbWF5IHJlc3VsdCBpbiBhIGJhbi4KSGUgZmlndXJlZCB5b3UgYWxsIG91dC4gSGUga2luZCBvZiBhIGdlbml1cy4gClRoZSBib29rIGhhcyBkZWZpbml0ZWx5IG1hZGUgbWUgYXdhcmUgb2Ygc29tZSBpc3N1ZXMgdGhhdCBJIHdvdWxkbid0IGhhdmUgYmVlbiBhYmxlIHRvIG5hbWUgb3IgcmVjb2duaXplLCBlc3BlY2lhbGx5IGluIG15IGZlZXQuIFRoZSBnZW5lcmFsIHRoZXNpcyBvZiB0aGUgYm9vayBpcyB0aGF0IHRoZXJlIGlzIGFuIGlkZWFsIHJ1bm5pbmcgbW90aW9uIChwbGFuIGEpIGJ1dCBhbG1vc3QgYWxsIG9mIHVzIGFyZSBydW5uaW5nIGEgbGVzcyBpZGVhbCBtb3Rpb24gKHBsYW4gYikuIEl0J3MgcG9zc2libGUgdG8gYnJlYWsgb3VyIGJhZCBoYWJpdHMgYW5kICJyZXdpcmUiIG91ciBnYWl0IHRocm91Z2ggdGFyZ2V0ZWQgZXhlcmNpc2VzLiAKS2FuY2hpRXRHeWFkdW4gdQpGb3IgdGhvc2UgcmVhZGVycyB3aG8gbWF5IGJlIG5ldyB0byBteSBtb250aGx5IHVwZGF0ZXMgb24gbXkgcG9ydGZvbGlvLCBsZXQgbWUgZ2l2ZSB5b3UgYSBicmllZiByZWNhcC4gSSBvcGVuZWQgbXkgYnJva2VyYWdlIGFjY291bnQgb24gSnVseSA1LCAyMDE2LCB3aXRoIGFuIGluaXRpYWwgaW52ZXN0bWVudCBvZiAkMTUwLiBTaW5jZSB0aGVuLCBJIGludmVzdCB3aGF0ZXZlciBpcyBsZWZ0IG92ZXIgZnJvbSBteSBwYXljaGVjayBhZnRlciBhbGwgbXkgYmlsbHMgYXJlIHBhaWQuIFNvbWV0aW1lcywgdGhhdCdzIGp1c3QgJDUwIG9yICQxMDAsIHNvbWV0aW1lcyBtdWNoIG1vcmUuIEkgbmFtZWQgbXkgcG9ydGZvbGlvIHRoZSBCcm93biBCYWcgUG9ydGZvbGlvIGJlY2F1c2UgbXVjaCBvZiB0aGUgaW52ZXN0bWVudCBjYW1lIGZyb20gdGhlIHNhdmluZ3MgSSBnYWluZWQgZnJvbSBicm93biBiYWdnaW5nIG15IGx1bmNoZXMsIGFuZCBvdmVyIHRoZSBwYXN0IHR3byB5ZWFycywgSSd2ZSB3b3JrZWQgb24gZWxpbWluYXRpbmcgbXkgZXhwZW5zZXMgYXMgbXVjaCBhcyBwb3NzaWJsZSBpbiBvcmRlciB0byBpbmNyZWFzZSBteSBzYXZpbmdzIGFzIG11Y2ggYXMgSSBjYW4uIEkgaGF2ZW4ndCBhbHdheXMgYmVlbiBzdWNjZXNzZnVsIHRvIHRoZSBkZWdyZWUgSSdkIGxpa2UsIGJ1dCBJIHdvcmsgb24gaXQgZXZlcnkgY2hlY2sgYW5kIHNldCBhIGdvYWwgb2Ygc2F2aW5nIGEgYml0IG1vcmUgZXZlcnkgdHdvIHdlZWtzLgpJIGNhbGwgYSBmbG9wIGJldCBhbmQgYSB0dXJuIGJldCBhbmQgdGhlIHJpdmVyIHBhaXJzIHRoZSA3LiAKQmJhbGxpIHUKV2UgaGVhcmQgaXQgYWxsLCB3ZSB0b28gcHJvIEtvcmVhLCB0b28gYW50aSBLb3JlYSwgZXRobmljIEtvcmVhbiBuYXRpb25hbGlzdHMsIHdoaXRlIHNleHBhdHMsIGV0Yywgc28gdGhvc2UgY29tbWVudHMgaGF2ZSBsb3N0IHRoZWlyIG1lYW5pbmcgYW5kIHRoZSB0cnV0aCBpcyB0aGUgYWNjdXNhdGlvbiBhYm91dCB1cyB1c3VhbGx5IHNheXMgbW9yZSBhYm91dCB0aGUgcHJlY29uY2VwdGlvbnMgb2YgdGhlIHBlcnNvbiBtYWtpbmcgdGhlIGNvbXBsYWludCB0aGFuIGFueSBvZiB1cyBvbiB0aGUgbW9kIHRlYW0uIApJbiB0aGUgNTAgc3RhdGUgcGF5bWVudHMgZm9yIGNyb3BzIHJvc2UgaHVnZWx5LCBib3RoIGZvciBzdGF0ZSBydW4gY29vcGVyYXRpdmUgZmFybXMgYW5kIGZvciBwZXJzb25hbCBwbG90cy4gCkdpbGwsIGFjY29yZGluZyB0byBTbm9wZXMsIGFsc28gb3ducyBhIG1lZGlhIGNvbnN1bHRpbmcgY29tcGFueSB0aGF0IGF0IGxlYXN0IG9uZSBwb2xpdGljYWwgYWN0aW9uIGNvbW1pdHRlZSAicGFpZCBiZWZvcmUgcmVjZWl2aW5nIHBvc2l0aXZlIGNvdmVyYWdlIGluIHRoZSBUZW5uZXNzZWUgU3Rhci4iLiAKU28gdGhlIG9uZSBtYXJrZWQgIlByZXZpb3VzbHkiIGlzIGEgcGFzdCBtaXN0YWtlLCBhbmQgZml2ZSBvZiB0aGUgcmVtYWluaW5nIG9uZXMgYXJlIGEgbGFjayBvZiBpbmZvcm1hdGlvbiwgbm90IGEgcG9zaXRpb24gYWdhaW5zdCB0aGVtLiBPZiBjb3Vyc2UsIEkgd291bGQgd2FudCB0byBoZWFyIGhlciBzdGF0ZSBoZXIgb3BpbmlvbnMgb24gdGhvc2UgbWF0dGVycyB5b3UgbWVudGlvbmVkIGFuZCBtYW55IG90aGVycyBiZWZvcmUgSSBjb3VsZCB2b3RlIGZvciBoZXIuIFRoZSBNbnVjaGluIHRoaW5nPyBZZWFoLCB0aGF0IGZ1Y2t5LiAKREggbGVhdmVzIHdpdGggeW91IG9yIGxlYXJucyB0byBzbGVlcCB3aXRoIG9uZSBleWUgb3Blbi4uIApZb3Ugd2lsbCBrbm93IGhvdyB0byB3aW4gcGljayAzIGxvdHRvIHN5c3RlbXMgYW5kIGhhdmUgYWxsIHRoZSBpbmZvcm1hdGlvbiB5b3Ugd2FudCBhYm91dCBGcnVpdCBOYWNoaW5lcyBhbmQgUGxheSBGb3IgRnVuIENhc2lubyBHYW1lcy4gClNvbnkgaGFzIHRoZSBsYXJnZXN0IHBsYXllciBiYXNlIGN1cnJlbnRseSBhbmQgSSdtIHN1cmUgdGhleSB3b3VsZCBsaWtlIHRvIGtlZXAgdGhhdC4gSWYgY3Jvc3NwbGF5IGV4aXN0ZWQgb24gYWxsIGdhbWVzIHRoZW4gdGhlIHBvdGVudGlhbCBzYWxlcyBvZiB0aGVpciBjb25zb2xlcyB3b3VsZCBiZSByZWR1Y2VkIGFzIHBlb3BsZSBjb3VsZCBidXkgYW4gWGJveCB0byBwbGF5IHdpdGggdGhlaXIgUFM0IGZyaWVuZC4gCjE4ODcsIEhhY2hldHRlLCBDLiBTY2hvZW5ob2YgLiAKTXVzaWMgaGFzIGJlZW4gYSBjb25zdGFudCBiYWNrZHJvcCB0byBoZXIgbGlmZSBzaW5jZSBzaGUgZmlyc3Qgc2F0IG9uIHRoZSBzdGVwcyBsaXN0ZW5pbmcgdG8gaGVyIG1vdGhlcidzIEJyb2Fkd2F5IExQcyB3aGVuIHNoZSB3YXMgMi4gCkV2ZW4gaW4gSVQsIGlmIHlvdSBhcmUgbm90IHdpbGxpbmcgdG8gbGVhcm4gc29tZSBzY3JpcHRpbmcgbGlrZSBweXRob24gb3IgcG93ZXJzaGVsbCwgeW91ciBjYXJlZXIgd2lsbCBiZSBWRVJZIGxpbWl0ZWQuIEF1dG9tYXRpb24gYW5kIGNsb3VkL2luZnJhc3RydWN0dXJlIGFzIGNvZGUgaXMgdGhlIHdheSBvZiB0aGUgZnV0dXJlLiAKQW5kIHRoZW4gb24gdG8gdGhlIHVuZGVycmVwcmVzZW50ZWQgb3Igbm90IHJlcHJlc2VudGVkLiAKQXMgSSBzYWlkOiBDdWJhbnMgY2FtZSBoZXJlIGxlZ2FsbHkgYnV0IHN0aWxsIG1ldCB3aXRoIHNvbWUgY3VsdHVyYWwgcmVzaXN0YW5jZSBhbmQgcGxlbnR5IG9mIGVjb25vbWljIGhhcmRzaGlwLiBUaGUgd29ybGQgaXMgdmFzdGx5IGRpZmZlcmVudCBub3cuCkxlYXJuIGZyb20gdGhlIGV4cGVyaWVuY2Ugb2Ygb3RoZXJzLiBNYW55IHBlb3BsZSBmaW5kIGl0IG11Y2ggZWFzaWVyIHRvIGxlYXJuIHByb3BlciB0ZWNobmlxdWUgZnJvbSB0aG9zZSB0aGF0IGhhdmUgYWxyZWFkeSBtYXN0ZXJlZCB0aGUgc3BvcnQuIE1ldGFsIGRldGVjdGluZyBpcyBhIHNraWxsIGFuZCBvdGhlciB0cmVhc3VyZSBodW50ZXJzIGFyZSBwbGVhc2VkIGFuZCBwcm91ZCB0byBzaGFyZSB0aGVpciBleHBlcnRpc2UuIApUaGUgZGV2aWNlcyBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIGh1bWFuIG1ldGVyIHJlYWRlcnMgdG8gd2FsayBhcm91bmQgYW5kIGNoZWNrIGV2ZXJ5IGhvdXNlIGluZGl2aWR1YWxseSwgd2hpY2ggc2F2ZXMgYSBsb3Qgb2YgbW9uZXkuIEJ1dCBtb3JlIGltcG9ydGFudGx5LCBzbWFydCBtZXRlcnMgZW5hYmxlIHV0aWxpdHkgcHJvdmlkZXJzIHRvIGdhdGhlciBkZXRhaWxlZCwgY29udGludW91cyBkYXRhIG9uIGhvdyBtdWNoIGVuZXJneSB5b3UncmUgdXNpbmcgYW5kIHdoZW4geW91J3JlIHVzaW5nIGl0LCB3aGljaCBlbmFibGVzIHRoZW0gdG8gcGxhbiBmb3IgZWxlY3RyaWNhbCBkZW1hbmQgbW9yZSBwcmVjaXNlbHkgYW5kIGFkanVzdCBwcmljaW5nIHRvIGZpdC4uIApUaGVyZSBhcmUgc28gbWFueSB0aGluZ3MgYWJvdXQgdGhhdCBsaXR0bGUgc2NyZWVkIHRoYXQgYXJlIGRlcmFuZ2VkIGFuZCB3cm9uZyB0aGF0IEkgY2FuIG9ubHkgbXVzdGVyIGEgZGVlcCBzZW5zZSBvZiBwaXR5IGZvciB0aGUgcGVyc29uIHdobyB3cm90ZSBpdC4gCk1vcmUgcmVjZW50bHkgaGUgd2FzIGFuIGFjdGl2ZSBtZW1iZXIgb2YgdGhlIEJ1cmxpbmd0b24gRyBNZW4ncyBDdXJsaW5nIExlYWd1ZS4gQW5kIHRocm91Z2hvdXQgaGlzIGVudGlyZSBhZHVsdCBsaWZlLCBSaWNrIHdhcyBhbHdheXMgcGFydCBvZiBhIHJlZ3VsYXIgcG9rZXIgbmlnaHQ7IHRvbyBtYW55IHRvIG1lbnRpb24hIFJpY2sncyBuZXh0IGJpZyBidXNpbmVzcyBhZHZlbnR1cmUgdG9vayB0aGUgZmFtaWx5IHRvIEVuZ2xhbmQgaW4gMTk4My4gSGUgc2V0IHVwIHRoZSBFdXJvcGVhbiBtYW51ZmFjdHVyaW5nIGFuZCBzYWxlcyBkaXZpc2lvbiBvZiBCaWcgTyBEcmFpbiBUaWxlLiAKQ29tbW9uIHRvIHRoZXNlIHRoZW9yaWVzIGlzIHRoZSB2aWV3IHRoYXQgbGVhcm5pbmcgaXMgYSBwcm9jZXNzIGJ5IHdoaWNoIGh1bWFuIGJlaGF2aW9yIGlzIGFjcXVpcmVkIG9yIGNoYW5nZWQgdGhyb3VnaCBldmVudHMgaW4gb25lJ3MgZW52aXJvbm1lbnQuIE1vcmVvdmVyLCBhbiBleHBsaWNhYmxlIG9yIHByZWRpY3RhYmxlIHJlbGF0aW9uc2hpcCBleGlzdHMgYmV0d2VlbiBzdGltdWxpIGFuZCByZXNwb25zZXMuIApJdCBpcyBhIHVzZWZ1bCBjb29saW5nIG9mZiBwZXJpb2QuIFdlIGhhdmUgbW9yZSB0aGFuIGVub3VnaCB0byBzb3J0IHRlY2huaWNhbGx5IHNvIEkgYW0gbm90IGdvaW5nIHRvIGFzayB0aGUgdGVhbSB0byBwcmlvcml0aXNlIGNoYW5nZXMgaGVyZS4gT25lIG9idmlvdXMgd2F5IHRvIGF2b2lkIFByZSBtb2RlcmF0aW9uIGlzIG5vdCB0byBicmVhayB0aGUgSG91c2UgUnVsZXMgYW5kIGl0IGlzIGNsZWFyIGZyb20gbG9va2luZyBhdCBzaXRlIHRyYWZmaWMgYW5kIHN0YXRpc3RpY3MgdGhhdCB0aGUgb3ZlcndoZWxtaW5nIG1ham9yaXR5IG9mIFJlc2VhcmNoZXJzIGRvbid0IGJyZWFrIHRoZW0sIGV2ZXIuIApUbyBjb21iYXQgdGhlIGRvd250dXJuLCB0aGUgY2FzaW5vIGlzIGdlYXJpbmcgdXAgZWZmb3J0cyB0byBlbnRpY2UgZ2FtYmxlcnMuIEJpZ2dlc3QgcHJvamVjdCB3ZSBoYXZlIGNvbWluZyB1cCB3aWxsIG9wZW4gaW4gZWFybHkgdG8gbWlkIE9jdG9iZXIgYW5kIHRoYXQncyB0aGUgVEFHIEJhciwgTW9ydGxhbmQgc2FpZC4gClRoZSBqdWRnZSBhbGxvd2VkIGl0LCBhY2NlcHRpbmcgTW9zc2VyaSBhcmd1bWVudCB0aGF0IGhlIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciB3aG8gc2hvdWxkIGJlIGFsbG93ZWQgdG8gZWFybiBoaXMgbGl2aW5nIHVudGlsIHRoZSBjaGlwcyBpbiBjb3VydCBmYWxsIHdoZXJlIHRoZXkgbWF5LgpJIHJlbWVtYmVyIGV2ZXJ5dGhpbmcgYWJvdXQgaXQsIGV2ZXJ5IG1pbGxpc2Vjb25kLiAKIk5vdyB0aGF0IHdlIGhhdmUgYW4gYWN0dWFsIGNhc2UgbWFuYWdlbWVudCBwcm9ncmFtLCBhIHRoZXJhcGlzdCBvbiBvdXIgc3RhZmYgYW5kIHRyYWluZWQgY2xpZW50IGFkdm9jYXRlcyB3aXRoIDE4IGhvdXJzIG9mIHRyYXVtYSB0cmFpbmluZywgd2UncmUgYWJsZSB0byBwcm92aWRlIG1vcmUgaW50ZW5zaXZlIGNhcmUuIlRoZSBDdXBjYWtlIEdpcmxzIGZvbGxvdyBhbiBlbXBvd2VybWVudCBtb2RlbCwgbWVhbmluZywgIldlIGRvbid0IHRlbGwgY2xpZW50cyB3aGF0IHRvIGRvLCIgSG9vdmVyIGV4cGxhaW5lZC4gQW5kIHdoZW4gYSBjbGllbnQgaGFzIGEgbmVlZCwgdGhlIEN1cGNha2UgR2lybHMgdXNlIHRoZSBTTUFSVCBnb2FsIHN0cmF0ZWd5IHRoZXkgZmluZCBzcGVjaWZpYywgbWVhc3VyYWJsZSwgYWNoaWV2YWJsZSwgcmVhbGlzdGljIGFuZCB0aW1lbHkgZ29hbHMgdG8gc2V0IHdpdGggdGhlIGNsaWVudC4iSSBsb3ZlIHRoZW0sIiBWZWdhcyBiYXNlZCBwb3JuIHN0YXIgQXJpZWxsZSBBcXVpbmFzIHNhaWQuICJUaGV5IGFsd2F5cyBoYXZlIGEgc3VpdGUgYXQgQVZOLCBhbmQgaXQncyByZWFsbHkgbmljZS4gClN1bW1vbmluZyBzcGlyaXRzIGlzIGEgdHdvIHRlbXBsYXRlIHByb2Nlc3MuIApIYXZlIGhvYmJpZXMsIGdvYWxzIGFuZCBsaWZlIGdvZXMgb24uIERvIHlvdSB0aGluayB5b3UgcmVhbGx5IG1pc3MgZ3Jvc3MgZ3V5cyBjYXRjYWxsaW5nIHlvdSBhbmQgcGVvcGxlIGNvbWluZyB1cCB0byB5b3UganVzdCBmb3IgeW91ciBiZWF1dHkveW91dGggb3Igc29tZW9uZSBidXlpbmcgeW91IGEgZHJpbmsgYXQgdGhlIGJhcj8gQWxsIHRoZXkgd2FudCBpcyB0byBmdWNrIHlvdSwgbm90aGluZyBlbHNlLCB0aGV5IGFyZSB1c2VsZXNzLiBXaG8gY2FyZXMuIFlvdSBoYXZlIHRvIGxldCB0aGF0IGdvIGFuZCBsaXZlIGEgZnVsbCBmdWxmaWxsaW5nIGxpZmUuCkhlIGFsbGVnZWRseSB1c2VkIGEgY29udHJvdmVyc2lhbCB0ZWNobmlxdWUgY2FsbGVkIGVkZ2Ugc29ydGluZyB0byBiZWF0IHRoZSBnYW1lLiAKSXQgaXMgYSBnb29kIGFuZCBzYWZlIHByYWN0aWNlLiAKRXhhbXMgQWxvbmcgd2l0aCBjZXJ0aWZpY2F0aW9uIGNsYXNzZXMsIHN0dWRlbnRzIHdvcmtpbmcgdG93YXJkIGEgY2VydGlmaWNhdGlvbiBpbiBzcG9ydHMgbWFzc2FnZSBtdXN0IHBhc3MgYSBjZXJ0aWZpY2F0aW9uIGV4YW0uIFRoZSBleGFtIG1heSBiZSB3cml0dGVuIG9yIHByYWN0aWNhbCwgYW5kIGNvdmVycyBhbGwgb2YgdGhlIHRvcGljcyBsZWFybmVkIGR1cmluZyB0aGUgY2VydGlmaWNhdGlvbiBjbGFzc2VzLiBIZXIgd29yayBoYXMgYmVlbiBwdWJsaXNoZWQgaW4gdGhlIENpbmNpbm5hdGkgQXJ0IE11c2V1bSBNYWdhemluZSBhbmQgT2hpbyBKb3VybmFsaXN0LiAKU2Vjb25kbHksIHRoZXNlIG5hdHVyYWwgb2lscyBjYW4gbGVhZCBza2luIGNvbmRpdGlvbnMgbGlrZSBhY25lIHZ1bGdhcmlzLCB3aGVyZSBzZWJ1bSBiZWNvbWVzIGJhY2tlZCB1cCBpbiB0aGUgaGFpciBmb2xsaWNsZXMsIGNyZWF0aW5nIGEgc21vcmdhc2JvcmQgZm9yIGJhY3RlcmlhLCB3aGljaCBicmVhayB0aGUgZmF0cyBpbnRvIGZhdHR5IGFjaWRzLiAKQnV0IHRoaXMgdG9rZW4gbm9kIHRvIHJlc3BvbnNpYmlsaXR5IGFuZCByZWFsaXR5IGFyZSBzbWFsbCBzb2xhY2UgaW4gdGhlIGNvbnRleHQgb2YgeW91bmcsIGltcHJlc3Npb25hYmxlIGNoaWxkcmVuIHdobyBhcmUgc3VkZGVubHkgY29uZnJvbnRlZCB3aXRoIHN1Y2ggYWR1bHQgaXNzdWVzIGFzIHZpcmdpbml0eSwgcHJlZ25hbmN5IGFuZCB2ZW5lcmVhbCBkaXNlYXNlLgpOb3VzIGVucmVnaXN0cm9ucyBsZSBub21icmUgZGUgdmlzaXRlcyBlZmZlY3R1ZXMgc3VyIGNoYWN1bmUgZGUgbm9zIHBhZ2VzLCBsZSBub21icmUgZGUgc291cyBwYWdlcyBjb25zdWx0ZXMsIGxlIHRlbXBzIHBhc3Mgc3VyIG5vdHJlIHNpdGUgd2ViLCBsJ29yZHJlIGRlcyBwYWdlcyB2aXNpdGVzLCBsZXMgdGVybWVzIGRlIHJlY2hlcmNoZSB1dGlsaXNzIHBvdXIgdHJvdXZlciBub3RyZSBzaXRlLCBsZSBwYXlzLCBsYSByZ2lvbiBldCwgbGUgY2FzIGNoYW50LCBsYSB2aWxsZSBkZXB1aXMgbGFxdWVsbGUgbCdhY2NzIGVzdCBlZmZlY3R1LiBOb3VzIGNvbGxlY3RvbnMgZ2FsZW1lbnQgbGVzIGluZm9ybWF0aW9ucyBkZSB0eXBlIG1vdXZlbWVudHMsIGNsaWNzIGV0IGRmaWxlbWVudCBlZmZlY3R1cyBhdmVjIGxhIHNvdXJpcyBkZSBsJ29yZGluYXRldXIgcG91ciBjb21wcmVuZHJlIHF1ZWxsZXMgem9uZXMgZGUgbm90cmUgc2l0ZSB3ZWIgcHJzZW50ZW50IHVuIGludHJ0IHBhcnRpY3VsaWVyIHBvdXIgbGVzIHV0aWxpc2F0ZXVycy4gClRoZSBBbWVyaWNhbnMgYXJlIHNvIGdsZWVmdWwgYmVjYXVzZSB0aGVyZSBhcmUgY2VydGFpbiBiZWxpZWZzIHRoYXQgYXJlIGF0IHRoZSBjZW50ZXIgb2Ygb3VyIGN1bHR1cmU6IGNoaWxkcmVuIGFyZSBpbm5vY2VudCBvZiBhbGwgc2V4dWFsIGltcHVsc2VzLCAxMyB5ZWFyIG9sZHMgYXJlIGNoaWxkcmVuLCBhbmQgc2V4IHdpdGggY2hpbGRyZW4gaXMgYSBjcmltZSBiZWNhdXNlIGNoaWxkcmVuIGNhbm5vdCBjb25zZW50IHRvIHNleC4KSGVyZSBJIGNvdWxkIHNlZSBtYWtpbmcgYW4gZXhwbG9pdGF0aXZlIGNhbGwuIEkgdGhpbmsgdGhhdCBwb3B1bGF0aW9uIGlzIGxpa2VseSB0byByYWlzZSBzdHJvbmcgaGFuZHMgZWl0aGVyIG9uIHRoZSBmbG9wIG9yIHR1cm4gcmF0aGVyIHRoYW4gcmlzayBsZXR0aW5nIHRoZSBmbHVzaCBnZXQgdGhlcmUuIFNpbmNlIHRoZXkgY2hlY2sgY2FsbGVkIGZsb3AgYW5kIHR1cm4sIGl0IHVubGlrZWx5IHRoZXkgYXJlIGhvbGRpbmcgYSBoYW5kIGxpa2UgNzZzIG9yIDk5LiAKSWwgbiB2YSBwYXMgZGUgbW1lIHBvdXIgdW4gdXNhZ2UgaW50ZXJuZSwgcG91ciBsZXF1ZWwgbCBleHByaW1lIGV4cGxpY2l0ZW1lbnQgYXUgbGVjdGV1ciBxdSBkb2l0IGZhaXJlIHBycGFyZXIgZW4gb2ZmaWNpbmUgbGVzIGRpZmZyZW50ZXMgY29tcG9zaXRpb25zLi4gClRydXN0d29ydGhpbmVzcyBvZiBhIHJlYWwgZ2FtZSBmbG93IHNvbWVob3cgYWZmZWN0cyB0aGUgZ2FtaW5nIGNvbW11bml0eSBhcyB3ZWxsLiAKQydlc3QgcG91cnRhbnQgbGEgbWVpbGxldXJlIG9jY2FzaW9uIGRlIHJldm9pciBsZSBwbGFuIGRlIGNpcmN1bGF0aW9uIGR1IHNlY3RldXIgZXQgZGUgbWlldXggbCdhZGFwdGVyLCBub3RhbW1lbnQgYXV4IGNvbnRyYWludGVzIHVyYmFpbmVzIGV0IGF1eCBhdHRlbnRlcyBkZXMgaGFiaXRhbnRzIHRycyBtY29udGVudHMgZGUgbGEgc2l0dWF0aW9uIGFjdHVlbGxlLgpMb29rIGF0IHRoaXMgdGhpcyB3YXk6IGlmIGl0IHdhc24geW91IHdobyBoYWQgdGhlIGJyZWFrdXAsIHdvdWxkIHlvdSBzZW5kIHNvbWVvbmUgdGhlaXIgZXggc29jaWFsIG1lZGlhLCB3b3VsZCB5b3UgdGVsbCB0aGVtICJsb29rIGF0IHRob3NlIG9sZCBoYXBweSBwaG90b3MsIGNyeSwgYmUgbWlzZXJhYmxlLCByZWxpdmUgaXQgb3ZlciBhbmQgb3ZlciBhZ2FpbiwgZXRjLiwgZXRjLiI/IEkgaG9wZSBub3QsIGJlY2F1c2UgaXQgYSBzaGl0dHkgdGhpbmcgdG8gZG8uIApDcmVhdGluZyBOZWNrbGFjZXMgZnJvbSBMYXMgVmVnYXMgQ2xheSBQb2tlciBDaGlwcwpZb3UgYXJlIHN0cmV0Y2hpbmcuIEJhdHRsZWxvZyBrZXB0IHlvdSBsb2dnZWQgaW4gYW5kIG9wZW5pbmcgYSB3ZWIgYnJvd3NlciBpc24gZXhhY3RseSBhbiBleHRyYSBzdGVwIGZvciBtb3N0IHBlb3BsZS4gCjI5MSAzMTZQYXJraW4sIEIuLCBIZWxseWVyLCBQLiwgTGVlY2gsIFIuIApJIGZvcmdldCBub3cgd2hhdCBvdXIgZmlyc3QgbWVldGluZyB3YXMgYWJvdXQsIGJ1dCBmcm9tIG5vdyBvbiwgdGhhdCB3YXMgb3VyIG1lZXRpbmcgc3BvdC4gSSBqdXN0IGNhbiBiZWxpZXZlIHNoZSBhbGwgZ3Jvd24gdXAgbm93ClRoZXkgYXJlIG5hbWVkIGFmdGVyIEpvaGFubiBIaWVyb255bXVzIEtuaXBob3IgKDE3MDQgMTc2Mykgd2hvIHByb2R1Y2VkIGEgZm9saW8gb24gdGhlbS4gCklmIGl0IGdvZXMgYmFkOyBJIGJlIG1vcmUgY29uY2VybmVkIGFzIHRvIHdoeSBJIHN0aWxsIGZyaWVuZHMgd2l0aCB0aGVtIG9uIEZhY2Vib29rIGluIHRoZSBmaXJzdCBwbGFjZS4gTXkgZXggaXMgbWFycmllZDsgYW5kIHdoaWxlIGl0IGh1cnQgYnJlYWtpbmcgdXAgYXQgdGhlIHRpbWUgICB0aGVyZSBjb21lcyBhIG1vbWVudCB3aGVuIHlvdSByZWFsaXplICJIdWguIApTaGVyTG92ZXNDYXRzICA2IHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvCldlIGN1dCBvdXIgc29uIGhhaXIgYXQgMTYgbW9udGhzIHdpdGggaGlzIGRhZCBjbGlwcGVycy4gSXQgdG9vayB0d28gdHJpZXMgdG8gZ2V0IGl0IGxvb2tpbmcgcHJldHR5IGdvb2QuIApBbmQgY2FuIEkgc2F5IGhvdyBtdWNoIEkgbG92ZWQgdGhlIHVudHJhbnNsYXRlZCBTcGFuaXNoIGluc3RlYWQgb2YgdW50cmFuc2xhdGVkIEZyZW5jaD8gSSBhY3R1YWxseSBzcGVhayBwcmV0dHkgZ29vZCBTcGFuaXNoLCBhbmQgZmluYWxseSBnb3QgdG8gZmVlbCBsaWtlIEkgd2FzIGluIG9uIEREIGpva2VzISBJIGV2ZW4gbGVhcm5lZCBhIG5ldyB3b3JkOiBoYXptZXJyZXIuIExpdGVyYWxseSAibWFrZSBtZSBsYXVnaCwiIEkgZmlndXJlZCBvdXQgaXQgbWVhbnQgImxhdWdoaW5nc3RvY2suIgpUaGUgcG9pbnQgaXMgbm90ICJmaXhlZCIgaW4gYSBsZWFkIGluZGljYXRvciBlaXRoZXIuIEl0IGNoYW5nZXMgd2l0aCB0aGUgdGFyZ2V0J3MgbWFuZXV2ZXJzIGFuZCBhY2NlbGVyYXRpb24sIGFuZCB5b3UgbmVlZCB0byBwdWxsIHlvdXIgZ3VucyBvbnRvIGl0IHRvIGhpdCB0aGUgdGFyZ2V0LiBBcyB5b3VyIHBpY3R1cmUgc2hvd3MsIHRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgd2hlcmUgdGhpcyBsZWFkIGlzIGF0dGFjaGVkLiAKIiBCdXQgU29sb21vbiBzb29uIHNhdyBhIHNpZGUgdG8gRXJuaWUgdGhhdCBtYWRlIGhlciB0aGluayB0d2ljZSBhYm91dCBnZXR0aW5nIHNlcmlvdXMuICJUaHJvdWdob3V0IG91ciB0aW1lIGRhdGluZywgaGlzIGJldHRpbmcgd2VudCBmcm9tLCB5b3Uga25vdywgbWF5YmUgJDc1LCAkNTAsICQ3NSBmb3IgaGlzIGluaXRpYWwgYmV0IHVwIHRvLCBsaWtlLCAkNTAwIGZvciBoaXMgaW5pdGlhbCBiZXQuIEFuZCBoZSBpbmNyZWFzZWQgaGlzIGJldHRpbmcgZHJhbWF0aWNhbGx5LCAiIHNoZSBzYWlkLiAKU2hlIHBvc3RlZCBhIGNyeXB0aWMgRmFjZWJvb2sgbWVzc2FnZSBhbmQgcGljdHVyZSBvZiBoZXJzZWxmIFdlZG5lc2RheSwgd3JpdGluZywgIkdvb2QsIGJldHRlciwgYmVzdCAgdGhpbmdzIGFyZSBiZXR0ZXIsIGFuZCwgdGhlIGJlc3QgaXMgeWV0IHRvIGNvbWUgLCIgd2hpY2ggY291bGQgYmUgYWxsdWRpbmcgdG8gaGVyIGNob2ljZSB0byBzcGxpdCB1cCB3aXRoIGhlciBodWJieSBmb3IgdGhlIHRoaXJkIHRpbWUuClRoZSBmaWxtIHN0aWxsIHRvb2sgcGxhY2UgaW4gdGhlIGVhcmx5ICc5MHMsIGJ1dCBpZiB5b3UncmUgd2F0Y2hpbmcgaXQgaW4gMjAwNSBvciBsYXRlciwgaXQncyB0b3VnaCBub3QgdG8gYXQgbGVhc3Qga2luZGEgc2VlIEJlbm55J3Mgc2lkZSBvZiB0aGluZ3MuIFRoZSBuZWlnaGJvcmhvb2QncyBnb25uYSBnZXQgZGUgYm9oZW1pYW4gaXplZCB2ZXJ5IHNvb24gYW55d2F5LCBhbmQgQmVubnkgaXMgd2lsbGluZyB0byBsZXQgdGhlbSBzdGF5IFJFTlQgRlJFRSBpbiBhIGZ1bGx5IHJlbm92YXRlZCB0b3AgZmxvb3IgY29uZG8gbW9zdCB3b3VsZCBraWxsIGZvci4gCk15IGh1c2JhbmQgYW5kIEkgaGF2ZSBiZWVuIHByYWN0aWNpbmcgdGFudHJpYyBzZXggZm9yIHllYXJzLiBUaGF0J3Mgbm90IGFzIHdlaXJkIGFzIGl0IG1pZ2h0IHNvdW5kLiBCYXNpY2FsbHksIGZvciB1cywgaXQncyBqdXN0IGNvbm5lY3RpdmUgc2V4LCBzZW5zdWFsLCBiZWluZyBwcmVzZW50LCBzZXR0aW5nIHRoZSBlbnZpcm9ubWVudCB3aXRoIGNhbmRsZXMgYW5kIG11c2ljLiBJdCdzIG5vdCBldmVyeSB0aW1lIG9mIGNvdXJzZSwgYnV0IGl0J3MgYSBmb3VuZGF0aW9uIGFuZCBpdCBoZWxwcyBtZSBzdGF5IGluIHRvdWNoIHdpdGggbXkgc2V4dWFsaXR5LiBIYXZpbmcgaGFkIHRoYXQgYmVmb3JlIGJlaW5nIGEgbW9tIGRlZmluaXRlbHkgaGVscGVkLCBhbHRob3VnaCBJIGtub3cgaXQgd291bGQgYmUgZWFzeSB0byBsZXQgdGhlc2UgdGhpbmdzIGdvIGlmIHRoZXkncmUgbm90IGEgcHJpb3JpdHkuIEkgbWFrZSB0aGVtIGEgcHJpb3JpdHkuIEkgZG9uJ3Qga25vdyBhYm91dCBTdGVsbGEgYnV0IEx1Y3kgZGVmaW5pdGVseSBnb3QgaGVyIGdyb292ZSBiYWNrLiBJIGtpbmQgb2YgbG92ZSB0aGUgbWF0ZXJuYWwgYXNwZWN0IHRvIG15IHNlbnN1YWxpdHkgdGhhdCdzIGNvbWUgZnJvbSBiZWluZyBhIG1vbS4KSW1tZWRpYXRlbHkgY29taW5nIHRvIG1pbmQgaXMgV2VzdGVybiBzZXR0bGVycyBzaG93aW5nIHVwIGluIHRoZSBBbWVyaWNhcy4gClRoaXMgd2FzIHRoZSAiUGhhbnRvbSBCYW5kIiBkZXBpY3RlZCBpbiB0aGUgcGFnZXMgb2YgUG9wdWxhciBNZWNoYW5pY3MgaW4gTWFyY2ggMTkyMiBhbmQgc2hvd3MgYSBiYW5kIGlkZW50aWZpZWQgc28sIG1hcmNoaW5nIHdpdGggYSByYWRpbyBzZXQgcGxheWluZyB0aGUgbXVzaWMgcmF0aGVyIHRoYW4gdGhlIGh1bWFuIHBlcmZvcm1lcnMuIApDb25zY2lvdXMgb2YgaG93IG5hcnJvdyB0aGUgaGFsbHdheSBpcywgeW91IGJyaW5nIHRoZSBqbyBhcm91bmQgaGFyZCBoaXR0aW5nIHRoZSBtYW4gc3F1YXJlbHkgb24gdGhlIHNpZGUgb2YgdGhlIGhlYWQga25vY2tpbmcgaGltIHNlbnNlbGVzcyB0byB0aGUgZ3JvdW5kLi4gCkxvc3NlcyBhcmUgYmFzZWQgb24gcHJlZGljdGlvbnMgb2YgYSA0MHBlciBjZW50IGZhbGwgaW4gZ2FtaW5nIHJldmVudWUgYW5kIHRoZWlyIGZsb3cgb24gZWZmZWN0cyB0byB0aGUgd2lkZXIgZWNvbm9teS4KQnV0IGV2ZW4gaGUgaGFkIG5vIGlkZWEgd2hhdCBjYXVzZWQgaXQgYW5kIHNhaWQgdGhlcmUgd2VyZSBubyB0cmVhdG1lbnRzIGV4Y2VwdCBmb3IgZGlsYXRpb24uIApUaGVyZSBoYXMgYWx3YXlzIGJlZW4gYW5vdGhlciBhc3BlY3QgdG8gcG9saXRpY2FsIG1hbmFnZW1lbnQsIHdoaWNoIGlzIG5vdCBkaXJlY3RlZCBhdCBvdGhlcnMgYnV0IGF0IERyIE1hbm1vaGFuIFNpbmdoIGhpbXNlbGYuIApBbmQgdGhhdCdzIGhvdyB0aGluZ3Mgc3RhcnRlZC4gClNjb3R0IG9mIE94Zm9yZCwgTUkgaGFkIHRoZSBsb3NpbmcgaGFuZCBhbmQgdG9vayBob21lIHRoZSBiaWdnZXN0IHNoYXJlIG9mIHRoZSBqYWNrcG90IGF0ICQ0MjcsNDUyLjUyLiBIZSBoYWQgZm91ciAzJ3MgaW4gaGlzIGhhbmQgd2hpY2ggd2FzIGJlYXRlbiBieSBLZW5uZXRoIHdobyBoYWQgZm91ciBxdWVlbnMuIEhlIHdvbiAkMjEzLDcxMi43Ni4gVGhlIG90aGVyIGZvdXIgcGxheWVycyBhdCB0aGUgdGFibGUgd29uICQxMDYsODU2LjI4IGVhY2guIFBva2VyIHRhYmxlcyBob2xkIDEwIHBlb3BsZSBhbmQgYXJlIHVzdWFsbHkgZnVsbC4KQWZ0ZXIgdGhlIGNhcHN1bGUgcmVhY2hlZCB0aGUgc3BhY2Ugc3RhdGlvbiBsYXN0IFN1bmRheSBtb3JuaW5nLCBOQVNBIGFzdHJvbmF1dCBBbm5lIE1jQ2xhaW4gcmVjb2duaXplZCB0aGUgZXZlbnQgb24gYSBsaXZlIHdlYmNhc3Q6ICJXZSBrbmV3IGhvdyBzaWduaWZpY2FudCBpdCB3YXMgYW5kIGhvdyBpbXBvcnRhbnQgaXQgd2FzLCByZWFsbHkgZm9yIHRoZSB3aG9sZSBoaXN0b3J5IG9mIHNwYWNlZmxpZ2h0LiAKSSBsaWtlIGRvaW5nIG15IHByZWhhYiBleGVyY2lzZXMgdG8gd2FybSB1cCBiZWZvcmUgYSB0cmFpbmluZyBzZXNzaW9uLgpGaWxsIHVwIGF0IHRoZSBidWZmZXQsIHNpbmsgeW91ciB0ZWV0aCBpbnRvIGEganVpY3kgcGllY2Ugb2YgbWVhdCBhdCB0aGUgc3RlYWtob3VzZSwgb3IgZ3JhYiBhIGN1cCBvZiBKb2UgYXQgdGhlIGNvZmZlZWhvdXNlLiAKVGhlIGdpcmwgaGFzIGl0IGluIGhlciBvd24gaW50ZXJlc3QgdG8gbWFrZSB0aGUgZXhwZXJpZW5jZSBhcyBlbmpveWFibGUgYXMgcG9zc2libGUsIHRvbywgYW5kIEkgY29nbml6YW50IG9mIHRpbWVzIHdoZXJlIHRoZSBnaXJsIHdhcyBoYXZpbmcgYXMgbXVjaCBmdW4gc2V4dWFsbHkgYXMgbWUuIApXaGF0IElzIE5vdCB0byBMb3ZlIEFib3V0IFRoaXMgVG93biBhbmQgVGhpcyBTYWxvb24/V2hlbmV2ZXIgSSBjYW4gZmluZCBhIGdvb2QgdGFsZSBvZiB0aGUgb2xkIFdpbGQgV2VzdCwgSSBhbSBhbHdheXMgZHJhd24gaW4gd2l0aCBhIHNlbnNlIG9mIGZhc2NpbmF0aW9uLiAKTWlsaXRhcnkgU3BvdXNlIENhcmVlciBBZHZhbmNlbWVudCBBY2NvdW50cyBNeUNBQQoiV2UncmUgaGVyZSB0byBlc3RhYmxpc2ggY3JpY2tldCBpbiBBbWVyaWNhIiBoZSBzYWlkLiAiVGhlIG5leHQgdGltZSB3ZSBjb21lIGhlcmUgaXQgd291bGQgYmUgbmljZSB0byBmaW5kIGFuIEFtZXJpY2FuIGtpZCB3aXRoIGEgY3JpY2tldCBiYXQgaW4gaGlzIGhhbmQgYWxvbmdzaWRlIGEgYmFzZWJhbGwgYmF0LiIKVGhleSBjYW4gYmUgZm91bmQgc2VsbGluZyBoaWdocXVhbGl0eSBzdXBwbGllcyBhdCBtYW55IENpdmlsIFdhciBldmVudHMgaW5NaWNoaWdhbiwgbm9ydGhlcm4gT2hpbywgUGVubnN5bHZhbmlhLEluZGlhbmEgYW5kIE5ldyBZb3JrLjEwOjAwYW0gICBFbmR1cmluZyBJbWFnZXMgIDEgaG91ckV4cGxvcmUgdGhlIG1hZ2ljIG9mIDE5dGggY2VudHVyeXBob3RvZ3JhcGh5ICAgdGhlIGludmVudGlvbnMsIHRlY2huaXF1ZXMgYW5kY2hlbWlzdHJ5IHRoYXQgYWxsb3dlZCBvdXIgMTl0aCBjZW50dXJ5Y291bnRlcnBhcnRzIHRvIGNhcHR1cmUgaW1hZ2VzIG9mIHRoZSB3b3JsZGFyb3VuZCB0aGVtIEFydCB0aGF0IGdpdmVzIHVzIGFuIGVuZHVyaW5ncmVjb3JkIG9mIHRoZSBwYXN0LiAKSSB1c2UgaXQgc3BhcmluZ2x5IGJ1dCBvbiBkYXlzIHRoZSBjbGFzcyBpcyBwYXJ0aWN1bGFybHkgdGFsa2F0aXZlIGFuZCBJIGFtIHdhc3RpbmcgdG9vIG11Y2ggdGltZSB3YWl0aW5nIGZvciB0aGVtIHRvIHppcCBpdCAoSSBkb24geWVsbCBvdmVyIGtpZHMpIHRoZW4gSSBwdWxsIHRoZSwgIllvdSB3YXN0ZWQgbXkgdGltZSwgbm93IEkgd2FzdGUgeW91cnMiIG1vdmUuIApUaGVyZSBhcmUgc2V2ZXJhbCBkaWZmZXJlbnQgd2F5cyB0aGF0IGNhcmQgdGF0dG9vcyBjYW4gYmUgZGVzaWduZWQuIFlvdSBjYW4gZ2V0IGFuIGlkZWEgb2Ygd2hhdCBhbGwgaXMgYXZhaWxhYmxlIGp1c3QgYnkgbG9va2luZyBhdCB0aGUgcGljdHVyZXMgb24gdGhpcyBhcnRpY2xlLiBPbmUgaW50ZXJlc3RpbmcgYXBwcm9hY2ggaXMgdG8gdXNlIHRoZSBzeW1ib2wgb2YgZWFjaCBzdWl0OiB0aGUgU3BhZGUsIEhlYXJ0LCBDbHViLCBhbmQgRGlhbW9uZC4gCldpbGwgdGhlIG1pbGl0YXJ5IGluZHVzdHJpYWwgZWNvbm9teSBiZSBicm91Z2h0IHVuZGVyIGNvbnRyb2wgaW4gdGltZSB0byBzYXZlIHRoZSBhY3R1YWwgZWNvbm9teT8gTm90IGlmIE9iYW1hIGZpcnN0IG1pbGl0YXJ5IHNwZW5kaW5nIHByb3Bvc2FscyBhcmUgYW55IGluZGljYXRvci4gUGVyaGFwcyBvbmx5IHdoZW4gZW5vdWdoIG9mIHVzIGRlbWFuZCB0aGF0IHRoZSBmYXJld2VsbCB3b3JkcyBvZiB0aGVuIFByZXNpZGVudCBEd2lnaHQgRC4gRWlzZW5ob3dlciBiZSBsaXN0ZW5lZCB0bywgd2lsbCB0aGUgd2FyIG9uIGZ1bm55IG1vbmV5IGJlIHdvbi4uIApHcm93aW5nIHVwIGluIG15IHNsaWNlIG9mIENhbGlmb3JuaWEsIHNjaG9vbHMgc3BlbnQgYSBsb3Qgb2Ygb3VyIGVsZW1lbnRhcnkgeWVhcnMgdGVhY2hpbmcgdXMgYWJvdXQgdGhlIGxvY2FsIE5hdGl2ZSBBbWVyaWNhbiBwb3B1bGF0aW9uLiBXZSBvZnRlbiB3ZW50IG9uIGZpZWxkIHRyaXBzIHRvIHRoZSBuZWFyYnkgU3BhbmlzaCBNaXNzaW9ucyBhbmQgdGhlIGxvY2FsIGNvbGxlZ2UgdGhhdCBoYWQgcmVwbGljYXMgb2YgdGhlaXIgcHJpbWUgdHJhZGluZyBtYXRlcmlhbHMgYW5kIGZ1cm5pc2hlZCB3aWd3YW1zLiAKVGhlIGNvbnN0aXR1dGlvbiBvZiB0aGUgcGxheWVycyBhdCB5b3VyIHRhYmxlLCB0aGUgc21hbGwgYmxpbmRzIGFuZCB0aGUgYmlnIGJsaW5kcywgdGhlIHN0YWtlcywgYW5kIHRoZSBpbnRlbnNpdHkgb2YgdGhlIGdhbWUgd2lsbCBkZXRlcm1pbmUgd2hhdCBhcHByb2FjaCB5b3Ugc2hvdWxkIGFkb3B0LiAKSW0gYSBMdWNrU2FjayBNZWRhbGxpb24gUG9rZXIgQ2FyZCBQcm90ZWN0b3IgUmV2aWV3Ckkgd2FudCBldmVyeSBzaW5nbGUgc3R1ZGVudCB3aG8gY29tZXMgYWZ0ZXIgbWUgdG8gaGF2ZSB0aGUgc2FtZSBvcHBvcnR1bml0eVNoZSBvbmUgb2YgYSBncm93aW5nIG51bWJlciBvZiB0b3Agc3R1ZGVudHMsIGFsdW1uaSBhbmQgdGhlaXIgcGFyZW50cyBvcHBvc2luZyBhIHBvc3NpYmxlIHN3aXRjaCB0byBmdWxseSBzZW1lc3RlcmVkIGNsYXNzZXMuIEhlciB0aHJlZSBwYWdlIGxldHRlciBjaXRlcyBzdHVkeSBhZnRlciBzdHVkeSBzdXBwb3J0aW5nIHRyYWRpdGlvbmFsIGZ1bGwgeWVhciBjbGFzc2VzLiBJdCBmb2xsb3dlZCBieSBhIHRocmVlIHBhZ2UgYXBwZW5kaXggb2YgdGhlIGxpdGVyYXR1cmUuLiAKTm90aGluZyBwZXIgc2Ugd3JvbmcgYWJvdXQgdGhhdCwgYnV0IHdlIGluIG91ciAzMCB3aXRoIGpvYnMgYW5kIGZhbWlsaWVzIGFuZCB0aGVyZSBpcyBubyB3YXkgd2UgY2FuIGtlZXAgdXAgd2l0aCB0aGUgcGFjZSBvZiBwbGF5IGFueW1vcmUuIApUaGVyZSBhcmUgcGxlbnR5IG9mIHdoYWxlcyB0aGF0IHBsYXkgcmVndWxhcmx5LiBJIHdvdWxkIG5ldmVyIHJlZmVyIHRvIHRoZW0gYXMgYSAicmVnLiIgSWYgeW91ciBidWRkeSBhc2tlZCB5b3UgaG93IG1hbnkgInJlZ3MiIGFyZSBpbiB0aGUgZ2FtZSBhbmQgeW91IHNpdHRpbmcgd2l0aCA3IHdoYWxlcyB0aGF0IHBsYXkgcmVndWxhcmx5LCB5b3Ugbm90IGluIHRoZSBnYW1lIHdpdGggNyBvdGhlciAicmVncy4iIFlvdSB3b3VsZCBuYXR1cmFsbHkgdGVsbCB5b3VyIGJ1ZGR5IHRoYXQgdGhlIGdhbWUgaXMgZ3JlYXQgYW5kIHlvdSBwbGF5aW5nIHdpdGggYSBidW5jaCBvZiB3aGFsZXMuLiAKUG9rZXIgaXMgbm90IGEgbmV3IGdhbWUgYW5kIGluIGZhY3QgaGFzIGV2b2x2ZWQgYSBsb3Qgc2luY2UgaXRzIGNyZWF0aW9uLCBnaXZlbiBwbGFjZSB0byBtYW55IGRpZmZlcmVudCB2ZXJzaW9ucy4gVGhlIG1vcmUgcG9wdWxhciBvbmVzIGFyZTogT21haGEgSGksIE9tYWhhIExvLCBTZXZlbiBjYXJkIHN0dWQsIFNldmVuIGNhcmQgc3R1ZCBoaSBsbywgQ2FyaWJiZWFuIHN0dWQgcG9rZXIgYW5kIFRleGFzIEhvbGQnZW0gYW1vbmcgbWFueSBvdGhlcnMsIGJlaW5nIHRoZSBsYXN0IHRoZSBtb3JlIGNvbW1vbmx5IHBsYXllZC4gVGhlIGRpZmZlcmVudCB2ZXJzaW9ucyBkaWZmZXIgaW4gdGhlIHdheSBjYXJkcyBhcmUgZGVhbHQsIGhvdyB0aGUgaGFuZHMgYXJlIGZvcm1lZCwgaG93IG1hbnkgcm91bmQgYmV0cyB0aGVyZSBhcmUgYW5kIHNvIG9uLi4gClNvbWV0aW1lcyB5b3UgYXJlIGluIGEgc2l0dWF0aW9uIHRoYXQgc3Vja3Mgc28gYmFkIHlvdSBqdXN0IEhBVkUgdG8gZ2V0IG91dC5qZ3NqZ3M1ICA0IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29PaCBJIG5vdCBzdXJwcmlzZWQgYXQgYWxsLiBJIDIzIGJ1dCB2ZXJ5IGNsb3NlIHdpdGggbXkgbW9tICg1MykgYW5kIHNvbWV0aW1lcyBJIGdvIG91dCB3aXRoIGhlciBhbmQgaGVyIGZyaWVuZHMuIFdlbGwgcXVpdGUgYSBmZXcgb2YgaGVyIGxhZHkgZnJpZW5kcyB3aG8gYXJlIGxhdGUgNDBzL2Vhcmx5IDUwcyBhcmUgZGl2b3JjZWQgYW5kIHVzaW5nIGRhdGluZyBhcHBzIGFuZCBib3kgZG8gdGhleSBmaWx0ZXIgdGhlIHNoaXQgb3V0IG9mIHRoZWlyIGZhY2VzIGluIG9yZGVyIHRvICJjb21wZXRlIiB3aXRoIHRoZSB5b3VuZ2VyIGdpcmxzLiAKT3Igd2FpdCBvdXQgYSBnYW1lIG9mIHBvb2wgaW4gdGhlIGNvbWZvcnQgb2YgYSBjbGFzc2ljIGJpbGxpYXJkcyBjaGFpci4gCkkgcmVhbGl6ZWQgaXQgZG9lcyBsb29rIGxpa2UgdGhhdCBhZnRlciB0aGUgb3RoZXIgZ3V5IHRoYXQgcmVwbGllZCAvdS9JbVdhZGVXaWxzMG4sIHBvaW50ZWQgb3V0IHRoZSBzaW1pbGFyaXRpZXMgd2l0aG91dCBiZWluZyBhIGNvbXBsZXRlIGFzcyBhYm91dCBpdCBsaWtlIHlvdSBkaWQuSSBhbGwgZm9yIHRhbGtpbmcgYWJvdXQgdGhpbmdzIGxpa2UgdGhpcywgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSB3b3VsZCByZXNwb25kIHdlbGwgdG8geW91ciBhdHRpdHVkZS4gSWYgeW91IHdhbnQgdG8gaGF2ZSBjb25zdHJ1Y3RpdmUgZGlzY3Vzc2lvbnMgb24gc3ViamVjdHMgbGlrZSB0aGlzLCBkb24gYmUgYW4gYXNzaG9sZS5JIGhhdmUgbm8gcHJvYmxlbSBhZG1pdHRpbmcgSSB3YXMgd3JvbmcsIGFuZCBJIGRvIGFncmVlIGl0IGxvb2tzIGxpa2Ugd2hhdCB5b3Ugb3JpZ2luYWxseSBwb2ludGVkIG91dC4gCkFmdGVyIHRoZSBzZXZlbnRoIGNhcmQgaXMgZGVhbHQsIGVhY2ggcmVtYWluaW5nIHBsYXllciB0YWtlcyB0d28gY2hpcHMgYW5kIGhpZGVzIHRoZW0gYmVoaW5kIGhpcyBiYWNrIHdpdGggYm90aCBoYW5kcy4gCkl0IGNvdWxkIGluZGl2aWR1YWxseSBhZGp1c3QgbGFnIHRpbWVzIGZvciBwZW9wbGUgd2l0aCBiYWQgaW50ZXJuZXQgYW5kIGNyZWF0ZSBhIHBvc2l0aXZlIGV4cGVyaWVuY2UgZm9yIHRob3NlIHdpdGggZ29vZCBpbnRlcm5ldC4gCk1hcCBvdXQgeW91ciBjb2xsYWdlLiBTdGFydCBkZWNpZGluZyBob3cgeW91IHdhbnQgdG8gcGxhY2UgeW91ciBwaWN0dXJlcy4gV2hhdCBwYXJ0cyBvZiB0aGUgcGljdHVyZXMgZG8geW91IHdhbnQgdG8gaW5jbHVkZSBvciBsZWF2ZSBvdXQ/IEJlIHN1cmUgdG8gbGVhdmUgcm9vbSBmb3IgYSB0aXRsZSBvciBuYW1lIGlmIHlvdSB3YW50IHRvIGluY2x1ZGUgdGhhdCAoZm9yIGV4YW1wbGUsIHlvdSBtaWdodCBwdXQgYSB0aXRsZSBzdWNoIGFzICJTYWdlJ3MgRmlyc3QgQmlydGhkYXkiKS4gCkFuZCBpZiBpdCBoZWxwcyBzaG93IHN0dWRpbyBleGVjcyB0aGF0IHRoZXJlIGlzIHJlYWwgaW50ZXJlc3QgaW4gdGhpcyBhbmQgaGVscHMgdGhlbSBnZXQgcGlja2VkIHVwLCBhbGwgdGhlIGJldHRlci4uIAoiQnV0IG90aGVyIHRoYW4gcmFsbHlpbmcgdGhlIHByZXNpZGVudCB0byBrZWVwIHRoZSBmdW5kaW5nLCBBcm5vbGQsIG5vdCBvbmUgdG8gc2l0IGlkbHkgYnksIGNhbGxlZCBpbiBIb2xseXdvb2QgKGFuZCBJcHN3aWNoIGZpbmVzdCB0byBoZWxwLCBhbmQgaGVscCB0aGV5IGRpZCwgcmFpc2luZyBvdmVyIGEgbWlsbGlvbiBkb2xsYXJzIG9uIHRoZSBuaWdodCB0byBoZWxwIHRoZSBraWRzLiIKTWVudGlvbiBvZiBNciBPYmFtYSB3b3VsZCBvZnRlbiBwcm9tcHQgYW4gZXllIHJvbGwgZnJvbSBhbiBpbmhhYml0YW50IG9mIEhpbGxhcnlsYW5kICAgYSBoZXJtZXRpY2FsbHkgc2VhbGVkIGJ1YmJsZSBwcm90ZWN0ZWQgYnkgdGhlIFNlY3JldCBTZXJ2aWNlIGFuZCBmcm9tIHdoaWNoIGFsbCBuYXlzYXllcnMgd2VyZSBrZXB0IG91dC4gTGlrZSBQcmVzaWRlbnQgR2VvcmdlIFcgQnVzaCwgTXJzIENsaW50b24gcHV0IGEgcHJlbWl1bSBvbiBsb3lhbHR5LCB3aGljaCBtZWFudCBoYXJkIHRydXRocyB3ZXJlIHNlbGRvbSBhaXJlZC4KSW4gZmFjdCwgYWN0dWFsIGh1bWFucyBtYWRlIHRoZSBkZWNpc2lvbnMgdGhhdCBjcmVhdGVzIHN1Y2ggaG9ycm9yLiAKVG8gcGxheSBzdHJpcCBwb2tlciwgZGVhbCBvdXQgZXZlcnlvbmUncyBjYXJkcyBsaWtlIHlvdSB3b3VsZCBpbiByZWd1bGFyIHBva2VyLiBNYWtlIHN1cmUgZXZlcnlvbmUgaXMgc3RhcnRpbmcgb3V0IHdpdGggdGhlIHNhbWUgYW1vdW50IG9mIGNsb3RoZXMgb24uIFdoZW4geW91J3JlIHJlYWR5IHRvIHN0YXJ0LCBwbGF5IHRoZSByb3VuZCB5b3UgZGVhbHQgb3V0IGJ1dCBkb24ndCBiZXQgb24gYW55dGhpbmcuIApBY2NvcmRpbmcgdG8gdGhlIGxhd3N1aXQgKHZpYSBUTVopLCBUcmF2b2x0YSByZXNwb25kZWQgdG8gdGhlIG1hc3NldXIgb25saW5lIGFkIGFuZCBhcnJhbmdlZCBhbiBhcHBvaW50bWVudC4gVHJhdm9sdGEgaW5jbHVkZWQgc3BlY2lmaWMgaW5zdHJ1Y3Rpb25zIHRoYXQgaGUgd291bGQgcGljayB1cCB0aGUgbWFzc2V1ciBhbmQgdGFrZSBoaW0gdG8gdGhlIEJldmVybHkgSGlsbHMgSG90ZWwgdG8gcGVyZm9ybSB0aGUgJDIwMCBtYXNzYWdlLiAKQ29uc3RydWN0IHlvdXIgYnVsbGV0IHBvaW50cyBzbyB0aGV5IGNhcHR1cmUgc29tZSBvZiB0aGUga2V5d29yZHMgYW5kIHBocmFzZXMgaW4gdGhlIGpvYiBwb3N0aW5nLiAKQmVsb3cgYXJlIHNvbWUgc3RyZXRjaGVzIGFuZCBtdXNjbGUgcmVsZWFzZSB0ZWNobmlxdWVzIGZvciBsZWcsIGtuZWUgZm9vdCBwYWluIHRoYXQgSSBoYXZlIHBlcnNvbmFsbHkgdXNlZCB3aXRoIGdvb2QgcmVzdWx0cy4gRmVlbCBmcmVlIHRvIHNoYXJlIGFuZCB0cnkgdGhlc2UgdGVjaG5pcXVlcywgYnV0IGtlZXAgaW4gbWluZCB0aGF0IHRoZXkgbWlnaHQgbm90IHdvcmsgZm9yIHlvdSBhbmQgYXJlIG5vdCBhIHN1YnN0aXR1dGUgZm9yIG1lZGljYWwgdHJlYXRtZW50LiBJZiB5b3UgZmVlbCBhbnkgc2hhcnAgcGFpbiBvciB5b3VyIHByb2JsZW0gZ2V0cyB3b3JzZSBvciBmYWlscyB0byBpbXByb3ZlLCBzdG9wIHRoZSBhY3Rpdml0eSEgRm9yIG1vcmUgZGV0YWlscyBvbiBteSBmYXZvcml0ZSB3YXkgdG8gc3RyZXRjaCBvciBsb29zZW4gbXkgb3duIG11c2NsZXMsIHJldmlldyBteSBTZWxmIFRyZWF0bWVudCBwYWdlLgpJbiBjYXNlIGl0IGlzIHJlbGV2YW50LCBoZSBhbiBpbW1pZ3JhbnQgYW5kIEkgZG9uIGtub3cgaWYgbWFzc2FnZSBzdGFuZGFyZHMgbWlnaHQgYmUgZGlmZmVyZW50IGluIGRpZmZlcmVudCBjdWx0dXJlcywgYnV0IGhlIHdlbnQgdG8gbWFzc2FnZSBzY2hvb2wgaGVyZSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gSSByZWFsbHkgcmVncmV0IG5vdCBzYXlpbmcgIm5vIiB0byBhbnl0aGluZyBhbmQganVzdCBnb2luZyBhbG9uZyB3aXRoIGV2ZXJ5dGhpbmcsIG1ha2luZyBoaW0gdGhpbmsgSSB3YXMgb2theSB3aXRoIGFsbCBvZiB0aGF0LCBidXQgYXMgSSBzYWlkIEkgd2FzIHBhbmlja2luZyBhbmQgZnJvemUgdXAuIFdoYXQgZG8geW91IGd1eXMgbWFrZSBvZiBhbGwgdGhpcz8gKEFuZCB0aGFua3MgZm9yIHJlYWRpbmchKS4gCkNhdHMgdGhhdCBhcmUga2VwdCBjb21wbGV0ZWx5IGluZG9vcnMgY2FuIGJlIG1vcmUgc2Vuc2l0aXZlIHRvIGNoYW5nZXMgaW4gdGhlIHNtZWxsIG9mIHRoZWlyIGhvdXNlaG9sZC4gTmV3ICJvdXRkb29yIiBzbWVsbHMgY2FuIGNhdXNlIHRoZW0gdG8gZmVlbCBpbnNlY3VyZSBhbmQgdHJpZ2dlciB0aGVtIHRvIHNwcmF5IHRvIGNhbG0gdGhlbXNlbHZlcyBkb3duLiBVbmZvcnR1bmF0ZWx5LCBzb21ldGltZXMgdGhlIHRyaWdnZXIgaXMgb3V0IG9mIHlvdXIgY29udHJvbC4gSWYgaXQgaXMgZHVlIHRvIHRoZSBwcmVzZW5jZSBvZiBhbiBvdXRkb29yIGNhdCBvciBjb25zdHJ1Y3Rpb24sIHlvdSBjYW5ub3QgZWxpbWluYXRlIHRoZXNlIGl0ZW1zLiBUaGUgZm9sbG93aW5nIHN0ZXBzIHByb3ZpZGUgYWx0ZXJuYXRpdmUgbWV0aG9kcyB0byBoZWxwIGxpbWl0IGFuZCBwcmV2ZW50IHRoZSBzcHJheWluZy4KNywgdGhlIGF2ZXJhZ2UgbGlmdCBmb3IgYSBuZXR3b3JrIHNlcmllcycgZmluYWwgQzMgcmF0aW5nIHZzLiAKUmlnaHQgbm93LCB0aG91Z2gsIEkgcm9ja2luZyBSb2VkYW1lLCBzbyBJIGhhZCB0byBjaGFuZ2UgYSBjb3VwbGUgcGllY2VzLiBJIGNoYW5nZWQgdGhlIExvcmQgWXVrYXRhIHRvIExhZHkgWXVrYXRhIChSZWRmbHkpLCBkeWVkIHRoZSBUaGF2bmFpcmlhbiBTYXJvdWVsIERhbGFtdWQgcmVkLCBjaGFuZ2VkIHRoZSBBdXJpIFNhbmRhbHMgdG8gRGFsYW11ZCByZWQgS2lyaW11IFNhbmRhbHMgb2YgU2NvdXRpbmcsIGFuZCBjaGFuZ2VkIFl1a2ltaXRzdSB0byBTYXN1a2UgQmxhZGVzIFpldGEuClRoaXMgd291bGQgYmFzaWNhbGx5IHB1dCB0aGVtIGF0IGJyZWFrIGV2ZW4gbGV2ZWxzLiBUaGUgb25seSB3YXkgaXQgd291bGQgY29udGludWUgdG8gd29yayB3b3VsZCBiZSBmb3IgdGhlbSB0byByYWlzZSBwcmljZXMgYW5kIHRoYXRzIHRoZSBpbnRlcmVzdGluZyBwYXJ0LiBIb3cgbXVjaCB3b3VsZCB0aGUgYXZlcmFnZSBlbXBsb3llciBoYXZlIHRvIHJhaXNlIHByaWNlcyB0byBtYWtlIHVwIGZvciBob3cgbXVjaCB0aGV5IGFyZSBzcGVuZGluZyBpbiBhZGRpdGlvbiB0byB3aGF0IHRoZXkgdXNlZCB0byBzcGVuZD8KQnV0IGFmdGVyIGEgY291cGxlIG9mIHR1bmluZ3MsIEkgYW0gY29tcGxldGVseSB0cmVtb3IgZnJlZSBhbmQgSSBuZXZlciBoYXZlIHRvIHR3ZWFrIHRoZSBzZXR0aW5ncy4KSXQgd2FzIGRlZmluaXRlbHkgbGVzcyBvYnZpb3VzIHRoYXQgdGhleSBoYWQganVzdCBmaW5pc2hlZCBoYXZpbmcgc2V4LiAKSSBsaXZlIGluIENhbGlmb3JuaWEgYW5kIHdlIGEgZmFtaWx5IG9mIDQsIHNvIEkgc2F5IHRoaXMgbm90IGFzIHNvbWVvbmUgd2l0aCBteSBoZWFkIGluIHRoZSBzYW5kIGluIHJlZ2FyZHMgdG8gQ09MIGRpZmZlcmVuY2VzIGJ1dCBjIHlvdSBkb24gbmVlZCAkMjAwLDAwMCBhIHllYXIgdG8gbGl2ZSBvbiwgd2hpY2ggYXNzdW1lcyB5b3UgYWN0dWFsbHkgZG9uIGxvc2UgbmV0IHdvcnRoLgpBcyBhIG51dHJpdGlvbmlzdCwgc2hlIG5vdGVzIGhlbXAncyAicGVyZmVjdCBiYWxhbmNlIiBvZiBvbWVnYSAzcyBhbmQgIDZzIGFuZCBoaWdoIHByb3RlaW4gY29udGVudC4KSXNhYmVsbGEgYmVnYW4gaGVyIGxpZmUgYXMgYSB3ZWFsdGh5IEZyZW5jaCBwcmluY2VzcywgYmV0cm90aGVkIGF0IHRoZSBhZ2Ugb2YgMTIgdG8gaGVyIHZlcnkgZ2F5IGh1c2JhbmQsIEVkd2FyZC4gQW5kIGZvciBhIHdoaWxlIHRoZXJlLCBJc2FiZWxsYSBwbGF5ZWQgYWxvbmcgYXMgbmljZWx5IGFzIG9uZSBjb3VsZCBleHBlY3QgZm9yIHRoZSB0d2VlbiB3aWZlIG9mIGEgaG9tb3NleHVhbCBndXksIGV2ZW4gbWFraW5nIGFuIGFsbGlhbmNlIHdpdGggaGVyIGh1c2JhbmQncyBib3lmcmllbmQuIApJbiB0aGlzIHdvcmtzaG9wLCB5b3Ugd2lsbCBkZXZlbG9wIGNvcnJlY3QgInVzZXIgc3RvcmllcyIgZnJvbSBzY3JhdGNoLCBhbmQgbGVhcm4gaG93IHRvIGxvY2FsaXNlIHRoZW0gaW4gdGltZSAgIGEgdGVjaG5pcXVlIHRoYXQgc2V0cyB5b3UgdXAgdG8gYWNoaWV2ZSBoeXBlciBwcm9kdWN0aXZpdHkgd2l0aCBubyBzYWNyaWZpY2UgaW4gcXVhbGl0eS4KVGhlIEtpbmcgb2YgRmlnaHRlcnMgOTggVWx0aW1hdGUgTWF0Y2ggRmluYWwgRWRpdGlvbiBpcyBhbiBhbWF6aW5nIGdhbWUuIDI5IEFwciAyMDE4IC4gMSwxODYgVmlld3MuIApDaGluaGFpcnMgYXJlIGFjdHVhbGx5IGZhbGxlbiBleWVicm93cy4gVGhleSdyZSBhIHNvcnQgb2Ygc2VjdWxhciB2ZXJzaW9uIG9mIGZhbGxlbiBhbmdlbHMsIGFuZCBoYXZpbmcgdGhlbSBpcyBhIHN5bXB0b20gb2YgdGhpbmtpbmcgZGlydHkgdGhvdWdodHMuIApBbG1vc3QgYWxsIHByb2JsZW0gZ2FtYmxlcnMgaGF2ZSBhbiBhc3NvY2lhdGVkIG1lbnRhbCBkaXNvcmRlciwgSmFja3NvbiBzYXlzLiAKRXZlbiB0aG91Z2ggaGlzIG5ldyB3aWZlIHRlbGxzIGhpbSB0aGF0IGhlIGxvb2tzIGdyZWF0LCBoZSBrbm93cyBiZXR0ZXIgYW5kIGlzIGVubGlzdGluZyB0aGUgaGVscCBvZiBhIHRlYW0gb2YgcGxhc3RpYyBzdXJnZW9ucyB0byB1bmRvIHdoYXQgaGFzIGJlZW4gZG9uZSBhbHJlYWR5Li4gCkFzIGZvciBob3cgbG9uZyBpdCB0YWtlcyB0byBzZWUgcmVzdWx0cy4gSXQgZGVwZW5kcyBvbiB3aGF0IHlvdSBzZWVpbmcgdGhlbSBmb3IsIGhvdyBvZnRlbiB5b3Ugc2VlaW5nIHRoZW0sIGFuZCB3aGV0aGVyIHRoZXkgYXJlIGEgZ29vZCBmaXQuIApZZWFoLCBpZiB5b3UgZ28gdG8gYSBiaWcgYm94IGhvbWUgaW1wcm92ZW1lbnQgc3RvcmUsIG1vc3Qgd2lsbCB0eXBpY2FsbHkgaGF2ZSBhIGRpc3BsYXkgb2YgdGhyZWUgb3IgZm91ciBkaWZmZXJlbnQgZmFucyB5b3UgY2FuIHR1cm4gb24gYW5kIG9mZiB0byBoZWFyIGhvdyBxdWlldCBvciBsb3VkIHRoZXkgYXJlLgpXZSdyZSBzdGlsbCBpbiB0aGUgZ2FtZSwiIERheSBzYWlkLiAKQ2xheSBjaGlwcyBhcmUgdGhlIHByZWZlcnJlZCBtYXRlcmlhbCBhbmQgdGhlIG1hdGVyaWFsIG9mIGNob2ljZSBmb3IgbmVhcmx5IGV2ZXJ5IGNhc2lubyBpbiB0aGUgd29ybGQuIApPbiBsZXMgcmVzcGVjdGUsIG9uIGxlcyBob25vcmUsIG1haXMgbGEgZmVydmV1ciwgZWxsZSwgZXN0IGxlIHByaXZpbGdlIGRlcyBpcnJndWxpZXJzLCBkZXMgc2NhbmRhbGV1eCwgZGVzIG1hdWRpdHMuIFNpIGxlIEJvbiBEaWV1IGV4aXN0ZSwgaWwgYXVyYSBpbGxpY28gYWNjdWVpbGxpIFNpbW9uZSBWZWlsIGRhbnMgc29uIHBhcmFkaXMsIGonZW4gc3VpcyBjZXJ0YWluLCBtYWlzIGxlIGNoYXJtZXVyLCBsJ2VuY2hhbnRldXIsIGxlIHRlbnRhdGV1ciwgY2Ugbidlc3QgcGFzIERpZXUsIGMnZXN0IGxlIERpYWJsZS4gCkhpa2VkIGEgbW91bnRhaW4gb3IgZ290IG1hcnJpZWQgdW5kZXJ3YXRlci4gClN0YW5kaW5nIE91dCBmcm9tIGEgQ3Jvd2QgSW4gbWFueSBpbnRlcnZpZXdzLCBlc3BlY2lhbGx5IGZvciBwcm9mZXNzaW9uYWwgb2NjdXBhdGlvbnMsIGl0IGlzIGRpZmZpY3VsdCB0byBzdGFuZG91dCB3aGVuIGl0IGNvbWVzIHRvIGVkdWNhdGlvbiBhbmQgZXhwZXJpZW5jZS4gSW4gc3VjaCBjYXNlcywgZW1waGFzaXplIHlvdXIgYXR0aXR1ZGUgYW5kIGNvbW1pdG1lbnQuIApNeSBodXNiYW5kIGlzIHZlcnkgYWxwaGEsIHZlcnkgZHJpdmVuLCBhbmQsIGFzIHdlIGFyZSBDaHJpc3RpYW4sIGlzIHZlcnkgc2VyaW91cyBhYm91dCBoaXMgcmVzcG9uc2liaWxpdHkgYXMgdGhlIGhlYWQgb2Ygb3VyIGhvbWUuIEhvd2V2ZXIsIGhlIGhhcyBzYWlkIHRoZSBzYW1lIHRoaW5nIHRvIG1lIG9mICJwdXR0aW5nIGhpbSBpbiBoaXMgcGxhY2UiIGluIHRoZSBzZW5zZSBvZiBub3QgYmFja2luZyBkb3duIHdoZW4gSSBrbm93IEknbSByaWdodCBhbmQgbm90IGJlaW5nIGNvd2VkIGlmIHdlIGhhdmUgYW4gYXJndW1lbnQuIAoxMzIgYW5kIDExNSByZXNwZWN0aXZlbHkuIFRob3VnaCBteSBzY29yZXMgd2VyZSBhbGwgb3ZlciB0aGUgcGxhY2UuIEkgYWxzbyBoYWQgODUsIDEwOSBvbiBvdGhlciBwYXJ0cyBvZiB0aGUgdGVzdC4uIApJIHdhbGtlZCBhcm91bmQsIHN0aWxsIHdlYXJpbmcgdGhlIHN3ZWF0ZXIsIGFza2luZyBzZXZlcmFsIHBlb3BsZSBpZiB0aGV5IHNlZW4gbXkgd2FsbGV0LiAKSSBtYW5hZ2UgYSBkb2pvIG9mIGEgcmVsYXRpdmVseSBsYXJnZSBzaXplLiAKRW4gc2VucyBpbnZlcnNlLCBsYSBjdWx0dXJlIGRlIGdyYWluZXMgdmVudWVzIGQgcHJvY3VyZSBwZXUgZGUgcnNpbmUgYXV4IGFtYXRldXJzIGRlIGhhc2NoaXNjaCBxdWkgbGVzIHNtZW50IGVuIEV1cm9wZSAgKDYpLiAKSU1PIHRoaW5raW5nIGFib3V0IHByZWZsb3AgaW4gdGVybXMgb2YgYmx1ZmYgYW5kIHZhbHVlLCBlc3BlY2lhbGx5IHdoZW4gMTAwYmIgYW5kIGRlZXBlciBpcyBmbGF3ZWQgKHBhcnRpY3VsYXJseSBpbiByaW5nIE5MSEUpLiBBbHRob3VnaCBJIHdpbGwgeWllbGQgdGhhdCBwb2xhcml6aW5nIG1ha2VzIHBvc3RmbG9wIG11Y2ggZWFzaWVyLiBUaGUgcmVhbGl0eSBpcyB5b3Ugc2hvdWxkIDNiZXQgcXVpdGUgYWdncmVzc2l2ZWx5LCBzcXVlZXplIGFnZ3Jlc3NpdmVseSwgYW5kIGRvIHNvIHdpdGggd2hhdCBpcyBrbm93biBhcyBhIGxpbmVhciByYW5nZSBhZ2FpbnN0IGxpa2UgcHJvYmFibHkgNzUlIG9mIHRoZSBmaWVsZC4gQWdhaW5zdCB0aGUgYmlnIG5pdHMsIHlvdSBjZXJ0YWlubHkgc2hvdWxkIDNiZXQgdGlnaHQuClRoaXMgd291bGQgd2FzaCBvdXQgdGhlIGluZmx1ZW5jZSBvZiBjb3Jwb3JhdGUgU3VwZXIgUEFDIG1vbmV5IGJ5IG1ha2luZyBwb2xpdGljYWwgbGVhZGVycyBtb3JlIHJlc3BvbnNpdmUgdG8gdGhlIEFtZXJpY2FuIHBlb3BsZS4gCkNoYW5nZSBZb3VyIFNjZW5lcnlTbmF0Y2hlZCBtb21lbnRzIG9mIHBlYWNlIGFuZCBxdWlldCwgbG9uZ2VyIG1vbWVudHMgb2Ygc29saXR1ZGUgYW5kIHdlZWtzIG9mIHBvc2l0aXZlIGluYWN0aW9uIGFsbCBoYXZlIHRoZWlyIG1lcml0cy4gClN1cmUgQmxhY2twaW5rJ3MgZ2V0dGluZyBhbGwgdGhlc2UgQ0YgZGVhbHMgYXMgcHJvbW90aW9uIGJ1dCB0aGUgbXVzaWMganVzdCBpc24ndCB0aGVyZSBhbmQgaXNuJ3QgdGhhdCB0aGUgd2hvbGUgcG9pbnQgb2YgYmVpbmcgYW4gYXJ0aXN0Py4gClRpdGxlcyBmb3IgbmV3cyBwb3N0cyBzaG91bGQgaWRlYWxseSBiZSBhcyBjbG9zZSB0byB0aGUgdGl0bGUgb2YgdGhlIHJlcG9ydCBhcyBwb3NzaWJsZS4gCihsZ3VtZXMgbWlqb3RzLCB0YXRha2kgZGUgdGhvbiwgc2FsYWRlIGRlIGNvbmNvbWJyZSwgdWYgbW9sbGV0IGF1eCB1ZnMgZGUgc2F1bW9uLCBhc3NpZXR0ZSBtYXJpdGltZSwgdG9mdS4pLi4gClJhZGlvbG9naWNhbCBjaGFuZ2VzIGFuZCBkZWdlbmVyYXRpb24gb2YgdGhlIGNlcnZpY2FsIHNwaW5lIGhhdmUgYmVlbiBwcmV2aW91c2x5IGRlc2NyaWJlZCBpbiBzb2NjZXIgcGxheWVycy4KSGVyIGRvc2Ugb2YgVDQgd2FzIDEwMCBtY2cgKDAuMSBtZykgcGVyIGRheS4uIApUaGUgY2F0Y2ggZm9yIFp5bmdhIGlzIHRoYXQgdGhlIEZhY2Vib29rIGdyYXZ5IHRyYWluIG1heSBub3QgbGFzdCBmb3JldmVyLCBhbmQgdGhlIGNvbXBhbnkgd2lsbCBldmVudHVhbGx5IG5lZWQgbW9yZSBkaXN0cmlidXRpb24gcGFydG5lcnMuIGFuZCBGYWNlYm9vayB3aWxsIGNvbnRpbnVlIHRvIGV4aXN0IGluIGEgcmVsYXRpb25zaGlwIG9mIGNvb3BlcmF0aXZlIGNvbXBldGl0aW9uLCBhY2NvcmRpbmcgdG8gV2VyYmFjaC4gY2FuIGFmZm9yZCB0byBwdXQgYWxsIGl0cyBlZ2dzIGluIEZhY2Vib29rIGJhc2tldCwgYnV0IG5laXRoZXIgY2FuIGl0IGxpdmUgd2l0aG91dCB0aGUgZW5vcm1vdXMgcHVzaCB0aGF0IGl0IGdldHMgZnJvbSBpdHMgRmFjZWJvb2sgcmVsYXRpb25zaGlwLiB3aGljaCByZWNlbnRseSBsYXVuY2hlZCBhIG5ldyBzb2NpYWwgbmV0d29yayBjYWxsZWQgR29vZ2xlKyB0byBjb21wZXRlIHdpdGggRmFjZWJvb2ssIHdvdWxkIHNlZW0gdG8gYmUgYSBuYXR1cmFsIGRpdmVyc2lmaWNhdGlvbiBvcHRpb24gZm9yIFp5bmdhLiBIb3dldmVyLCBaeW5nYSB3b3VsZCBzdGlsbCBiZSBkZXBlbmRlbnQgb24gd2hhdCBDbGVtb25zIGNhbGxzIHBhcmFsbGVsIG1vbm9wb2xpZXMuIHRoYXQgaW4gZml2ZSB5ZWFycywgdGhlIHdvcmxkIGlzIDUwJSBHb29nbGUgYW5kIDUwJSBGYWNlYm9vaywgQ2xlbW9ucyBzYXlzLiB3aWxsIHN0aWxsIG5lZWQgYm90aC4gSGFsZiBvZiBpdHMgcmV2ZW51ZXMgZ28gYXdheSBpZiBpdCBnZXRzIGludG8gYSBmaWdodCB3aXRoIGVpdGhlci4gRGlzdHJpYnV0aW9uIGRvZXMgbm90IGRpdmVyc2lmeSBhcyBlYXNpbHkgYXMgb3RoZXIgcmVzb3VyY2VzLiAyMDEwLCBaeW5nYSBjdXQgYSBkaXN0cmlidXRpb24gZGVhbCB3aXRoIFlhaG9vIHRvIGZlYXR1cmUgZ2FtZXMsIGluY2x1ZGluZyBwb2tlciwgRmlzaFZpbGxlIGFuZCBNYWZpYSBXYXJzLCBvbiB0aGUgc2VhcmNoIGVuZ2luZSBnYW1lcyBjaGFubmVsLiBUaGUgY29tcGFueSBoYXMgbm90IGRpc2Nsb3NlZCByZXZlbnVlIGdlbmVyYXRlZCBmcm9tIHRoZSBZYWhvbyBwYXJ0bmVyc2hpcC4gSW4gaXRzIGJyb2FkZXN0IGdsb2JhbCBkaXZlcnNpZmljYXRpb24gbW92ZSB0byBkYXRlLCBaeW5nYSBvbiBKdWx5IDI2IGFubm91bmNlZCB0aGF0IGl0IGhhcyBwYXJ0bmVyZWQgd2l0aCBUZW5jZW50LCBvbmUgb2YgQ2hpbmEgdG9wIEludGVybmV0IHNlcnZpY2UgcHJvdmlkZXJzLiBUaGUgbW92ZSBjb3VsZCBnaXZlIFp5bmdhIGEgbXVjaCBicm9hZGVyIHJlYWNoIGFuZCBrZWVwIHRoZSBjb21wYW55IEZhY2Vib29rIGRlYWwgaW50YWN0IGJlY2F1c2UgdGhlIHNvY2lhbCBuZXR3b3JrIGRvZXMgbm90IG9wZXJhdGUgaW4gQ2hpbmEuCkN1cnJlbnRseSwgaGUncyBpbnRlcm5pbmcgYXQgUmlmZidzIFVyYmFuIEZhcmUgYXMgcGFydCBvZiBoaXMgc2Nob29sd29yayBhbmQgcGlja2luZyB1cCBza2lsbHMgdGhhdCB3aWxsIHN0YXkgd2l0aCBoaW0gbG9uZyBhZnRlciBoZSdzIHJlY2VpdmVkIGhpcyBoaWdoIHNjaG9vbCBkaXBsb21hLi4gCkFzIHNwb3J0IGJldHRpbmcgZXZvbHZlcyBib29rbWFrZXJzIG1ha2UgY29udGludWFsIGVmZm9ydHMgdG8gYXBwZWFsIHRvIHB1bnRlcnMgd2l0aCBpbm5vdmF0aXZlIG5ldyBiZXR0aW5nIG9wdGlvbnMgYW5kIGJldHRpbmcgdGVybXMuIFdpdGggZWFjaCBpbnRyb2R1Y3Rpb24gb2YgbmV3IGJldHRpbmcgdGVybXMgcGVvcGxlIGdldCBjb25mdXNlZCBtb3JlIGFuZCBtb3JlIGFuZCBuZWVkIGEgcmVsaWFibGUgYW5kIHVwIHRvIGRhdGUgZ2xvc3NhcnkuIEl0IGlzIGZvciB0aGF0IHJlYXNvbiB0aGF0IHdlIGhhdmUgY3JlYXRlZCB0aGlzIGJldHRpbmcgZ2xvc3NhcnkgdGhhdCB3aWxsIGhlbHAgeW91IHVuZGVyc3RhbmQgdGhlIGxhdGVzdCBiZXR0aW5nIHRlcm1pbm9sb2d5IGFuZCB0aGUgbW9zdCBpbXBvcnRhbnQgZmVhdHVyZXMgb2YgZWFjaCBiZXR0aW5nIHRlcm0uCkFyZSByZWFsbHkgaGl0IGFuZCBtaXNzIHdpdGggc29tZSB0aGVyYXBpc3RzIGtpY2tpbmcgYXNzIGFuZCBvdGhlcnMga25vd2luZyBiYXJlbHkgZW5vdWdoIGFuYXRvbXkgdG8gZ2V0IGxpY2Vuc2VkLiAKSSBmaW5kIHRoYXQgd2hlbiBJIGp1c3Qgc2l0IG91dHNpZGUgKEknbSB0b28gbGF6eSB0byB3YWxrIGFyb3VuZCkgd2hlbiBJIGFtIGFuZ3J5LCBJIGNhbG0gZG93bi4gSSBkb24ndCBhY2NyZWRpdCB0aGlzIHRvIG1lZGl0YXRpb24sIGNvbm5lY3RpbmcgdG8gbmF0dXJlIG9yIHNvbWUgc3VjaDsgSSB0aGluayBpdCdzIGFuIGV4Y3VzZSB0byByZW1vdmUgeW91cnNlbGYgZnJvbSBkaXN0cmFjdGlvbnMuIApIaXN0b3J5IG9mIHRoZSBGdXR1cmUKTm90aGluZyBldmVyIHNvIGRyYW1hdGljIGFzIHRvIHJhaXNlIGNvbmNlcm4gYnV0IGxpdHRsZSB0aGluZ3MgdGhhdCBpbXByb3ZlZCB0aGVpciBsaXZlcyBvciBtaW5lLiAKSSBkaWQgdGhlIHVzdWFsIHRoaW5nIGFuZCBzYWlkICJHb29kIHRoYW5rcywgeW91PyIgd2hpbGUgc2VsZWN0aW5nIG15IGZsb29yIGFuZCB3YWl0aW5nIGZvciB0aGUgY3VzdG9tYXJ5ICJOb3QgYmFkIiBhbmQgaGlzIGRlcGFydHVyZS4gVGhpcyBpcyBzdWNoIGEgcm91dGluZSB0aGluZyBJIGRpZG4gZXZlbiBsb29rIHVwIGR1cmluZyB0aGlzIHdob2xlIGV4Y2hhbmdlLgpBbHNvIHRoZSBjYW1lcmEgcXVhbGl0eSBzdWNrcy4gQW5kIGl0IGFsc28ga2lsbHMgbXkgYmF0dGVyeS4gSWYgSSBoYXZlIHRoZSBhcHAgb3BlbiBteSBwaG9uZSBiYXR0ZXJ5IHBlcmNlbnRhZ2UgZ29lcyBkb3duIDEgMiUgZXZlcnkgNCA1IG1pbnV0ZXMgaXQgb3Blbi4gCkZldCBkZSBwb2xpY2UgZmFjZSBhdXggYXNzb2NpYXRpb25zIGV0IGhhYml0YW50cyBkdSAxOGUKSXNyYWVsIFZlbGFzcXVleiBSYW1pcmV6LCBha2EgIk1hcmNvcywiIHdhcyBzZW50ZW5jZWQgVHVlc2RheSB0byBhIHRlcm0gb2YgaW1wcmlzb25tZW50IGZvciAxOCBtb250aHM7ICQ0MjAgcmVzdGl0dXRpb24gYW5kICQxMDAgc3BlY2lhbCBtb25ldGFyeSBhc3Nlc3NtZW50LgpObyBvbmUgaXMgZmFsbGluZyBmb3IgdGhhdC4gCjIzIE9jdCAyMDE3IC4gClQgU3BsaW5lcyAzIDQgS2V5Z2VuIENyYWNrICAuIApUaGV5IHdhbnQgdG8gbWFrZSBtb25leSBxdWlja2x5LCBhbmQgbG90cyBvZiBpdC4gSXQgYSB2ZXJ5IG5lYXIgc2lkZWQgYW5kIGZvb2xpc2ggYnVzaW5lc3MgYXBwcm9hY2gsIGJ1dCBpdCBkZWZpbml0ZWx5IGEgcG9wdWxhciBvbmUuIElmIEFjdGl2aXNpb24gc2VlcyBhIGRlY2xpbmUgaW4gT3ZlcndhdGNoIGluY29tZSwgdGhleSBnb2luZyB0byBzdGFydCBwdWxsaW5nIHJlc291cmNlcyBPVVQgb2YgaXQsIG5vdCBwdXR0aW5nIG1vcmUgaW50byBpdC4gCkluIHRoZSBwYXN0LCBOb3ZlbGxhIHdvdWxkIHN0YXkgYXdheSBmcm9tIHRoZSBkZW50aXN0IGZvciB5ZWFycyB1bnRpbCBhIHRvb3RoYWNoZSBnb3Qgc28gYmFkIHNoZSBjb3VsZCBubyBsb25nZXIgaWdub3JlIGl0LiBXaGVuIHNoZSBzb3VnaHQgdHJlYXRtZW50IGF0IHRoZSBEZW50YWwgU2hvcHBlLCBmb3IgZXhhbXBsZSwgc2hlIHdhcyBpbiBkZXNwZXJhdGUgbmVlZCBvZiBhIHJvb3QgY2FuYWwuCkhpcyBzdHJhdGVneSB3b3VsZCBiZSB0byBoYXZlIGEgcmFuZ2UgYWR2YW50YWdlIG9uIGFsbCBRIHRvIDcgYm9hcmRzIGdpdmUgdXAgb24gbW9zdCBBY2UgYW5kIEtpbmcgYm9hcmRzIG9yIHRyeSB0byBnZXQgaXQgYWxsIGluIHByZSB3aXRoIGEgcGFpci4KSSBteXNlbGYsIGFmdGVyIGFuIHVuc3VjY2Vzc2Z1bCB0ZW51cmUgcmV2aWV3LCBmb3VuZCBteXNlbGYgaW4gbmVlZCBvZiBhbG1vc3QgZGFpbHkgdGhlcmFweSBzZXNzaW9ucyBhbmQgZGV2ZWxvcGVkIGEgc3RyYW5nZSB0d2l0Y2ggaW4gbXkgbGVmdCBleWUgd2hlbiBJIGhhZCB0byBzaG93IHVwIHRvIHRlYWNoIGZvciBhIHNlbWVzdGVyIHdoaWxlIEkgKHN1Y2Nlc3NmdWxseSkgYXBwZWFsZWQgdGhlIGRlY2lzaW9uLiAKSSB3ZW50IGFuZCBnb3QgZWR1Y2F0ZWQgaW4gdGhlIGNyYWZ0IG9mIGhhaXIgc3R5bGluZyBhbmQgY29sb3VyaW5nLCBJIHB1dCBpbiAzMDAwIGhvdXJzIG9mIGFwcHJlbnRpY2VzaGlwLCBJIHdlbnQgYW5kIHNwZW50IHRpbWUgYW5kIG1vbmV5IG9uIHNwZWNpYWxpemVkIGNsYXNzZXMgb24gdGVjaGlxdWVzLiAKVGhlIGNvbmZpZ3VyYXRpb24geW91IGFyZSBsb29raW5nIGF0IGlzIG5vdCBpbnRlcm1vZGFsbHkgZW5jYWJ1bGF0ZWQuIFRoZSBpbnRlcmxvY2tlZCBpZ25vdCBpcyBjaGFyZ2VkIGJ5IGluZHVjdGlvbiBmcm9tIHRoZSBjb2lsLCBidXQgaXQgaXMgd2VsbCBiZXlvbmQgaXQgb3duIHN0YXRlIG9mIGVuY2FibHVsYXRpb24sIHdoZXJlIGl0IHdvdWxkIGJlIGluZmluaXRlbHkgZnJlZSBmbG9hdGluZyBhbmQgYWJsZSB0byBhY3R1YWxseSBwcm9kdWNlIGFuIGludmVyc2Ugc2ludXNvaWRhbCBvdXRwdXQuIApCdXQgdHJhc2ggdGFsa2luZyBpcyByaXNreS4gCjIwMTcuIEd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMzogRGVjaXNpb24gbWFraW5nIHVuZGVyIG1lbnRhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBqdW5pb3IgZWxpdGUgYXRobGV0ZXMuIApBcyBhIG5hdGl2ZSBzcGVha2VyLCBJIGRpc2FncmVlIHdpdGggb24gdGhpbmc6U2Vjb25kIG9mIGFsbCwgd2hpbGUgdGhleSBrbm93IHRoZSBsYW5ndWFnZSBieSBoZWFydCwgdGhlIGdyZWF0IG1ham9yaXR5IGRvIG5vdCByZWFsbHkgaGF2ZSBncmFtbWFyIGtub3dsZWRnZS4gCjIwMTMuIEEgcGFyYWxsZWwgcXVhbnR1bSBoaXN0b2dyYW0gYXJjaGl0ZWN0dXJlLiAKVGhlIHN0YXRlIGdhbWluZyBib2FyZCB0aGVuIHRvb2sgc3RlcHMgdG8gZW5mb3JjZSBhZ2UgbWluaW11bXMuIApCdXQgZHVyaW5nIHNjaG9vbCwgaGUgd29ya2VkIHBhcnQgdGltZSBhdCBhIGNhc2lubyAgIGVtcHR5aW5nIHF1YXJ0ZXJzIGZyb20gc2xvdCBtYWNoaW5lcyAgIGFuZCBnb3QgaG9va2VkIG9uIHRoZSBnYW1pbmcgYnVzaW5lc3MuLiAKSGUgcGxhbiBraWQgZnJpZW5kbHkgZGF0ZXMsIHNvIG15IHNvbiBjb3VsZCBwYXJ0aWNpcGF0ZS4gSWYgSSBjb3VsZG4gZ28gb3V0LCBoZSBjYW1lIHRvIHVzLiBBbnkgdGltZSB0aGF0IHNvbWV0aGluZyBoYXBwZW5lZCBhbmQgSSBoYWQgdG8gY2hvb3NlIGJldHdlZW4gdGhlIHR3bywgaGUgaW5zaXN0ZWQgdGhhdCBteSBzb24gYmUgcHJpb3JpdHkuIApOb3QgY291bnRpbmcgdGhvc2UgdGhhdCBkcm9wcGVkIGluIGZvciBhbiBob3VyLCBhZnRlcm5vb24gb3IgZGF5IG9mIGNvd29ya2luZywgU2hpcHRvbiBzYWlkIHRoYXQgb3ZlciB0aGUgbW9yZSB0aGFuIHR3byB5ZWFycyBJbXByb21wdHUgd2FzIG9wZW4sIGFib3V0IDI1IGJ1c2luZXNzZXMgaGFkIGVzdGFibGlzaGVkIGFuIG9mZmljZSBpbiB0aGUgc3BhY2UgYXQgb25lIHRpbWUgb3IgYW5vdGhlci4KVGhpcyBpcyB3aGVyZSBsZXZlcmFnZSBwbGF5cyBhIHBhcnQuIApTZWxmIGltcG9zZWQgYWR2ZXJ0aXNpbmcgcmVzdHJpY3Rpb25zIGFyZSBleHBlY3RlZCB0byBjb3N0IFNreSB0ZW5zIG9mIG1pbGxpb25zIG9mIHBvdW5kcyBpbiBhbm51YWwgcmV2ZW51ZS4gCkkgaGF2ZSBhIGxvdCBvZiBmdW4gd2l0aCB0aGUgc2F5aW5nICJhIGhvcnNlIGFwaWVjZS4iIEl0IGlzIGNvbW1vbmx5IHVzZWQgaW4gdGhlIG5vcnRoZXJuIDIvMyBvZiBXaXNjb25zaW4gYW5kIHRoZSBVcHBlciBQZW5pbnN1bGEgb2YgTWljaGlnYW4geWV0IHVua25vd24gaW4gYWRqYWNlbnQgTWlubmVzb3RhLCBleGNlcHQgcGVyaGFwcyBvbiB0aGUgaXJvbiByYW5nZSBpbiBORSBNaW5uLiBJIGtub3cgMiBwZW9wbGUgZnJvbSBORSBNaW5uZXNvdGEgd2hvIHNheSBpdC4gQSBsb3Qgb2YgY3VsdHVyZSBsaWtlIGZvb2Qgd2FzIGNhcnJpZWQgZnJvbSBpcm9uIG1pbmVzIGluIHRoZSBVUCBvZiBNaWNoaWdhbiBhbmQgbm9ydGhlcm4gV2lzY29uc2luIHRvIHRoZSBpcm9uIG1pbmVzIGluIE5FIE1pbm5lc290YSBzbyB0aGVyZSBtYXkgYmUgYSBsaW5rIHRoZXJlLiBPciB0aGV5IGp1c3QgbGVhcm5lZCBpdCBmcm9tIFdpc2NvbnNpbml0ZXMgbGlrZSBJIGRpZCAod2UgYWxsIHdvcmsgdG9nZXRoZXIpLgpJIHdvdWxkIHByb2JhYmx5IGFsc28gdHJ5IHRvIHVzZSBNaW5vciBJbGx1c2lvbiBvciBzb21ldGhpbmcgdG8gY3JlYXRlIGEgc2Vjb25kIEZhbWlsaWFyIHRvIHRyeSB0byBkcmF3IGZpcmUgYW5kIGtlZXAgbXkgYWN0dWFsIEZhbWlsaWFyIGFsaXZlIGFzIGxvbmcgYXMgcG9zc2libGUuSG9seSBzaGl0IHRoaXMgYnVpbGQgaXMgYmFkIGJ1dCBJIGtpbmQgb2Ygd2FudCB0byB0cnkgaXQgbm93RHJhZ29uQnJvdGhlcnMgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvV2VsbCBpIHdhdGNoIGl0IHdpdGggbG93IGV4cGVjdGF0aW9uIHNpbmNlIHRoZSBsYXN0IGVwaXNvZGUgd2FzIGJhZCwgYnV0IHRvIGJlIGhvbmVzdCB0aGlzIGVwaXNvZGUgd2FzbiBzbyBiYWQgbGlrZSBsYXN0IHdlZWssIHN1cmUgdGhleSBjYW4gY3V0IHNvbWUgb2YgdGhlbSBtb3JlIHRvIG1ha2Ugcm9vbSBmb3IgdGhlIENocmlzdG1hcyBlcGlzb2RlIGJ1dCBpdCBva2F5LiAKVGhlIHZpZGVvIHN1Z2dlc3RzIHRoYXQgaXRlbXMgc3VjaCBhcyB0aGUgd29vZGVuIHNhbmRhbHMgZG9uIGFjdHVhbGx5IGF3YXJkIHlvdSBhIGJvbnVzIHRvIGNvbWJhdCBzcGVlZCBvdXRyaWdodCwgYnV0IHJhdGhlciB0aGV5IGNhbiBiZSBlcXVpcHBlZCB0byBjYW5jZWwgb3V0IHNvbWUgb2YgdGhlIG5lZ2F0aXZlIGNvbWJhdCBzcGVlZCBwZW5hbHRpZXMgb24gaXRlbXMgbGlrZSB0aGUgU2FtdXJhaSBDaGVzdHBsYXRlLiAKSGkgZ3V5cyEgTmVlZCBoZWxwIHdpdGggc21hbGwgYnVtcHMgb24gY2hpbiBhcmVhLiAKU29tZSBwYXJlbnRzIGNvdWxkbid0IG1ha2UgdGhlIHRyaXAuIFNvbWUgd2VyZSBpbiBwcmlzb24gb3IgcmVoYWIuIEFuZCBzb21lLCBmYWNlZCB3aXRoIHRoZSBmcmFnaWxpdHkgYW5kIGNvbXBsZXhpdHkgb2YgbGlmZSBoZXJlLCBzaW1wbHkgZmxlZC4gCkdvaW5nIHRoZSBwcmVzY3JpcHRpb24gcm91dGUgdGhyb3VnaCB0aGVpciBkb2N0b3IgaGFzIGJlZW4gZ3JlYXQgZm9yIG1lLiBJIGJ1eSBkaXJlY3RseSBmcm9tIGEgbGljZW5zZWQgZ3Jvd2VyLCBhbmQgdGhlIG1hcmlqdWFuYSB0aGV5IHByb3ZpZGUgaXMgYWJzb2x1dGVseSB0b3Agc2hlbGYgcXVhbGl0eSwgYW5kIGxlc3MgZXhwZW5zaXZlIHRoYW4gZ29pbmcgdG8gdGhlIGRpc3BlbnNhcmllcy4gVGhlIG9uZSBJIGNvbm5lY3RlZCB3aXRoIGRvZXNuIHNlbGwgb2lscyBvciBleHRyYWN0cyB5ZXQsIGJ1dCBzb21lIG9mIHRoZSBvdGhlciBsaWNlbnNlZCBncm93ZXJzIGRvIGlmIHRoYXQgdHVybnMgb3V0IHRvIGJlIGEgYmV0dGVyIG1ldGhvZCBvZiBjb25zdW1wdGlvbiBmb3IgeW91ciBkYWQuLiAKVGhleSBzdGlsbCBsb29rIGdvb2QgdGhvdWdoISBIYWhhIGV2ZXJ5IGNvdXBsZSBvZiB5ZWFycyBJIGJ1eSBzb21lIENoaW5vIHNob3J0cyBpbiBhIGRpZmZlcmVudCBuZXV0cmFsIGFuZCB3ZWFyIHRoZW0gb25seSBvbmNlIG9yIHR3aWNlIHdoZW4gd2UgZ28gb3V0LiBUaGV5IGp1c3Qgbm90IG1lLCBidXQgSSBjYW4gc2VlbSB0byBmaWd1cmUgb3V0IGFuIGFnZSBhcHByb3ByaWF0ZSBzdW1tZXIgc3R5bGUuIEkgZ3Vlc3MgSSBqdXN0IHN0aWNrIHdpdGggd2hhdCB3b3JrcyB1bnRpbCBpdCBzdGFydHMgdG8gZmVlbCBiYWQ/LiAKT25lIG9mIHRoZSBwaWVjZXMsIHdoaWNoIGlzIGEgdmVyeSBmYW1vdXMgcGllY2UgaW5kZWVkIGlmIEkndmUgaGVhcmQgaXQsIGJ1dCBJIGRvbid0IHJlbWVtYmVyIHRoZSBuYW1lIG9mIGl0LgogIEFueSBleGFjdCBjb3BpZXMgcHJlcGFyZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm92aXNpb25zIG9mIHRoaXMgc2VjdGlvbiBtYXkgYmUgbGVhc2VkLCBzb2xkLCBvciBvdGhlcndpc2UgdHJhbnNmZXJyZWQsIGFsb25nIHdpdGggdGhlIGNvcHkgZnJvbSB3aGljaCBzdWNoIGNvcGllcyB3ZXJlIHByZXBhcmVkLCBvbmx5IGFzIHBhcnQgb2YgdGhlIGxlYXNlLCBzYWxlLCBvciBvdGhlciB0cmFuc2ZlciBvZiBhbGwgcmlnaHRzIGluIHRoZSBwcm9ncmFtLiAoYykgTWFjaGluZSBNYWludGVuYW5jZSBvciBSZXBhaXIuIApXZSBoYWQgV29uZGVyIFdvbWFuIGFscmVhZHkgYnV0IGhlciBiZWluZyBhIHdvbWFuIGlzIHN0aWxsIGEgY29udHJvdmVyc3ksIGV2ZW4gaWYgaXQgaXMganVzdCBhIHZvY2FsIG1pbm9yaXR5LiAKTG9zIExsYW5vcywgQmFyIExhIEx1bmEgKEMvRmVybmFuZGV6IFRhbyAyNikKTGl2ZSBDYXJpYmJlYW4gU3R1ZCBQb2tlcgpUaGVyZSdzIG5vdCBtdWNoIHlvdSBjYW4gaW1wcm92ZSBvbiB0aGUgTkEgaW4gdGVybXMgb2YgcmVhbCBwb3dlciBnYWlucy4gCk9iZXNpdHkgYW5kIHNob3J0bmVzcyBhcmUgc29jaWV0eSB3aWRlIG1lYXN1cmVtZW50cywgbm90IHJlZmxlY3Rpb25zIG9mIGluZGl2aWR1YWwgdmlydHVlIG9yIGdvb2QgaGVhbHRoLiAKSSB0aGluayBJIHdvdWxkIGJlIHJlbWlzcyBpZiBJIGp1c3QgZm9yZXdlbnQgaGFsZiBvZiB0aGUgZmVhdHVyZXMgb24gbXkgY2hhcmFjdGVyIHNoZWV0LCBzbyBJIGRlY2lkZWQgdG8gdXNlIHRoZSBydWxlcyBJIGhhZCBhdmFpbGFibGUgaW4gdGhlIGJlc3Qgd2F5IHBvc3NpYmxlIHRvIHJlcHJlc2VudCBteSBtaW5pLiAKSXQncyB0aG91Z2h0IGFmdGVyIG9uZSBkaWVzLCB0aGUgbmV4dCBjaGFwdGVyIG1hc3RlciBoYXMgYWxsIHRoZSBwcmV2aW91cyBtZW1vcmllcyBpbmplY3RlZCBpbnRvIHRoZWlyIHNlbHZlcy4gCkF0dG9ybmV5IEdlbmVyYWwgSmFuZXQgUmVubyAod2l0aCBDbGludG9uIHByZXNpZGVudGlhbCBhcHByb3ZhbCkgZW5kZWQgdXAgYXBwcm92aW5nIHVzaW5nIHRhbmtzIHRvIHNob290IHRlYXIgZ2FzIGludG8gdGhlIGJ1aWxkaW5nIHRvIGZvcmNlIGV2ZXJ5b25lIG91dC4gCldlIGp1c3Qgc3Rvb2QgdGhlcmUgYW5kIHdhaXRlZCBmb3Igd2hhdCBzZWVtZWQgbGlrZSBhIHJlYWxseSBsb25nIHRpbWUsIGJ1dCB3aG8ga25vd3MuIEl0IHdhcyBwcm9iYWJseSAzMCBzZWNvbmRzLiAKSSBrZWVwIGhlYXJpbmcgdGhpcyBidXQgbm8sIHlvdSB3b24gZG8gYW4gaW5jcmVhc2UgaW4gYmxvY2sgc2l6ZS4gRXZlci4gClJvYmJpZSBkaWQgYSB0aHVtYnMgdXAgYW5kIG1vdmVkIGhpcyBhcm0gd2hlbiBIZXJiIGdyYWJiZWQgaXQuIApJZiB5b3UgY2hlY2sgdGhlIGludGVybmV0LCB5b3UgbWF5IGVhc2lseSBub3RpY2UgbnVtZXJvdXMgQmVzdCBQb2tlciBTaXRlcyBPbmxpbmUgb2ZmZXJlZCBmb3IgZXZlcnkgcGVyc29uLiBPbmUgY2FuIGRpc2NvdmVyIHNldmVyYWwgZnJlZSBCZXN0IFBva2VyIFNpdGVzIE9ubGluZSB3aGVyZSBwZW9wbGUgam9pbiBpbiBmb3IgZW50ZXJ0YWlubWVudC4gQW5kIGFkZGl0aW9uYWxseSwgdGhlcmUgYXJlIHRob3NlIHdlYnNpdGVzIHdoZXJlIGluZGl2aWR1YWxzIGRlbGlnaHQgaW4gdGhlIGdhbWUgZm9yIHJlYWwgbW9uZXkuLiAKTGl2ZSBwb2tlciBpcyBub3Qgd2hhdCB5b3UgcGxheSB3aGVuIHlvdSB0cnlpbmcgdG8gZ2V0IGx1Y2t5Li4gCkFuY2lsbGlyb24gdQpNb29uIHRyeSB0byBrZWVwIE5Lb3JlYSBzdW1taXQgb24gdHJhY2sgYW1pZCBkb3VidHMKQ29tcGFyYWJsZSBzYWxlcyB3ZXJlIGRvd24gMyBwZXIgY2VudCBhdCB0aGUgcmV0YWlsZXIsIGRyYWdnZWQgZG93biBieSBhIDcgcGVyIGNlbnQgZGVjbGluZSBmcm9tIGluIHN0b3JlIHNhbGVzLiAKVGhlIGN1cmUgcmF0ZXMgYXJlIG5vdCBiYXNlZCBvZmYgb2Ygc3ltcHRvbSBpbXByb3ZlbWVudC4gVGhleSBhcmUgYmFzZWQgb2ZmIG9mIG5lZ2F0aXZlIHBhdGhvZ2VuIHRlc3RpbmcuID9SaWRpbmcgdGhlIHByb3N0YXRlIG9mIHBhdGhvZ2VucywgaGFzIGJlZW4gcHJvdmVuIHRpbWUgYW5kIGFnYWluIHRvIG5vdCBjdXJlIHByb3N0YXRpdGlzIHN5bXB0b20uIFN5bXB0b20gY3VyZSByYXRlcyBhbmQgcGFob2dlbiBjdXJlIHJhdGVzIGFyZSB0d28gZGlmZmVyZW50IHRoaW5ncy4gTWVuIHdhbnQgc3ltcHRvbSBjdXJlcyEhIG5vdCBhIHRlc3QgdGhhdCBzYXlzIHRoZXJlIGN1cmVkLCBidXQgdGhleSBhcmUgc3RpbGwgYmVkIHJpZGRlbgpDbGFyayBDb3VudHkgU2hlcmlmZiBKb3NlcGggTG9tYmFyZG8gc2FpZCBhdCBhIG5ld3MgY29uZmVyZW5jZSBXZWRuZXNkYXkgbmlnaHQgdGhhdCBQYWRkb2NrIG11c3QgaGF2ZSBoYWQgc29tZSBoZWxwIGFsb25nIHRoZSB3YXkgZ2l2ZW4gaGlzIGh1Z2UgYXJzZW5hbCB0aGUgZXhwbG9zaXZlIG1hdGVyaWFscyBmb3VuZCBpbiBoaXMgY2FyLCBhbmQgaGlzIG1ldGljdWxvdXMgcGxhbiwgYnV0IHRoZXkgZG9uIGtub3cgd2hvIHRoYXQgbWlnaHQgYmUuCkJ1dCBLb3JkZW5icm9jayBzYWlkIHNoZSBkb2Vzbid0IGRvdWJ0IHRoYXQgS2FsbSB3b3VsZCBzdG9wIGlzc3VpbmcgbWlsbGlvbmFpcmUgcGFydHkgbGljZW5zZXMgaWYgdGhlIGNvdXJ0IHN5c3RlbSBvciBsZWdpc2xhdHVyZSBkb2Vzbid0IGFjdCBieSBKdWx5LgpUaGlzIGxhdHRlciBleGFtcGxlIGlzIGNvbW1vbiBmb3IgdGhvc2UgYXQgdmFyaW91cyBwb2ludHMgb24gdGhlIGF1dGlzbS9Bc3BlcmdlciBzcGVjdHJ1bSwgYW5kIHdlIGdlbmVyYWxseSB1bmRlcnN0YW5kIHRoZSBkaWZmZXJlbmNlIGhlcmUgYmV0d2VlbiB0aGUgdHlwZXMgb2YgaW50ZWxsaWdlbmNlIGJlY2F1c2UgZ2VuZXJhbGx5IGl0IGEgc3RhcmsgZGlmZmVyZW5jZS4gCklmIHRoZSBnb3Zlcm5tZW50IHdhbnRzIHRvIGNvbnRyb2wgY29zbWV0aWMgc3VyZ2VyeSwgdGhlbiB0aGUgYW5zd2VyIGlzIHRvIHJlIHJlZ3VsYXRlIHRoZSBiYW5raW5nIGluZHVzdHJ5IHNvIHRoZXNlIG1lZGljYWwgY3JlZGl0IGxvYW5zIGRvbiBleGlzdC4gQW5kIHRoZSBvdGhlciBhbnN3ZXIgaXMgdG8gdGF4IHRoZSBvYnNjZW5lIGFtb3VudHMgb2Ygd2VhbHRoIGJlaW5nIG1hZGUgYnkgdGhlIGxpa2VzIG9mIEdFLCB3aG8gaXMgc2VsbGluZyBtZWRpY2FsIGNyZWRpdCB0byBwZW9wbGUgd2hvIGNhbm5vdCBhZmZvcmQgaXQuIE9yIHRoZSBjb3NtZXRpYyBzdXJnZW9ucyBpbmNvbWUgYXMgcGFydCBvZiBhbiBvdmVyYWxsIHByb2dyZXNzaXZlIGluY29tZSB0YXggb24gdGhlIHRvcCBlYXJuZXJzLgpUaGlzIG1ha2VzIGFjcXVpcmluZyBpbnRvIHRlY2hub2xvZ2llcyBzaGFyZXMgYSBwcm9taXNpbmcgbWV0aG9kIHdoZW4gaXQgY29tZXMgdG8gc3RvY2tzLi4gCkkgd2VudCB0byB0aGUgYmFuayB0aGlzIG1vcm5pbmcgdG8gdGFrZSBjYXJlIG9mIHRoZSBkZWJpdCBjYXJkIGZyYXVkIG9ubHkgdG8gbGVhcm4gdGhhdCBpdCB3YXMgQ29sdW1idXMgRGF5IGFuZCB0aGUgYmFua3Mgd2VyZSBjbG9zZWQuIFdoYXQgYSB3b3J0aGxlc3MgaG9saWRheS4gCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIE1hcmNoIDEzLCAyMDA1CkZyb20gdGhlIGxhdGUgVGhpcmQgQWdlIGFuZCBvbiBJIGJlbGlldmUgSSByZW1lbWJlciB0aGF0IGZvcm1lciBBcm5vciBoYWQgYSBwcm9ibGVtIHdpdGggZmVsbCBXb2x2ZXMgYXR0YWNraW5nIHBlb3BsZSwgc28gRXJpYWRvciB3YXMgcXVpdGUgdW5wb3B1bGF0ZWQgYXQgdGhhdCB0aW1lLiAKQWx0aG91Z2ggaW5zdWxpbiBoZWFsdGggaXMgYSBjb21wbGljYXRlZCBwcm9jZXNzLCBtYW5hZ2luZyBpdCBpcyBwcm9iYWJseSBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5ncyB5b3UgY2FuIGRvIHRvIGZlZWwgYmV0dGVyIGFuZCBhY2hpZXZlIGEgbGVhbiBwaHlzaXF1ZS4KRG9uIEJ1cm1hbmlhLCBzcG9rZXNtYW4gb2YgdGhlIENvbG9yYWRvIERpdmlzaW9uIG9mIEdhbWluZywgaXMgYXMgc3RhdGluZyAiV2hlbiB5b3UgcGxheSBhIHNsb3QgbWFjaGluZSBhbmQgcHJlc3MgdGhlIGJvdHRvbSB0aGUgb3V0Y29tZSBpcyBwcmV0dHkgbXVjaCBkZXRlcm1pbmVkIGltbWVkaWF0ZWx5IGJ5IGEgc2VyaWVzIG9mIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9ycy4gVGhlIHJlc3QgaXMgYmVsbHMgYW5kIHdoaXN0bGVzLiIgVGhleSBhcmUgc28gY29uZmlkZW50IHRoYXQgdGhlaXIgcGxheWVycyBkb24ndCB0aGluayBhbmQgaG9uZXN0bHkgcHJvYmFibHkgZG9uJ3QgZXZlbiByZWFkIHRoZXkncmUganVzdCBhZG1pdHRpbmcgaXQuCkl0IGRvZXNuJ3QgbWF0dGVyIGlmIHlvdSdyZSB0aGUgb2xkZXN0IG9yIHlvdW5nZXN0IGV2ZXJ5b25lIHJlc3BlY3RzIGVhY2ggb3RoZXIgYW5kIGhhcyBhIGdyZWF0IHNlbnNlIG9mIGNvbW11bml0eSBzcGlyaXQuIEkgYWxzbyBsb3ZlIHRoZSBTb3V0aCBFYXN0IGFzIGEgd2hvbGUsIEkgaGF2ZSBiZWVuIHRvIG1hbnkgYXJlYXMgd2l0aCB3b3JrIGV0YyBhbmQgZm9yIG1lIHRoZSBTb3V0aCBFYXN0IGlzIGp1c3QgYSBiZWF1dGlmdWwgcGFydCBvZiB0aGUgd29ybGQgdGhhdCBpcyBmdWxsIG9mIG9wcG9ydHVuaXRpZXMgdG8gZ3JvdyBwZXJzb25hbGx5IGFuZCBwcm9mZXNzaW9uYWxseS4gCiJXZSB3ZXJlIHByb2JhYmx5IGZvcmNlZCBpbnRvIGxvb2tpbmcgYXQgdGhlIHdob2xlIGNvbmNlcHQgb2YgdGhlIHBsYWNlIG5vdyB0aGF0IHRoZXkndmUgYnVpbHQgdGhlIEh1b24gSGlsbCBIb3RlbCBhY3Jvc3MgdGhlIHJvYWQsIiBoZSBzYWlkLiAiV2UndmUgY2VtZW50IHJlbmRlcmVkIHRoZSB3aG9sZSBmYWNhZGUgb2YgdGhlIGJ1aWx0IGFuZCBidWlsdCBhIGNvdmVyZWQgYXJlYSBmb3IgbWVhbHMgYW5kIGVudGVydGFpbm1lbnQsIHdoaWNoIGNvc3QgdXMgcXVpdGUgYSBiaXQgb2YgbW9uZXkuIiBUaGUgY2x1YiBoYXMgYWxzbyByZXBsYWNlZCBhbGwgaXRzIG9sZCBmdXJuaXR1cmUuIFRoZSBiYWxhbmNlIG9mIHRoZSBwcm9qZWN0IGNvc3Qgd2FzIHBhaWQgZm9yZnJvbSB2YXJpb3VzIGdvdmVybm1lbnQgYW5kIG90aGVyIGdyYW50cy4gClRoZSBkZWVyIHdpbGwgYmUgcmVsZWFzZWQgYXdheSBmcm9tIHRoZSBjaXR5IGFmdGVyIGhlIGlzIHRyZWF0ZWQuIkl0IHdhcyBkZWNpZGVkIHRoYXQgd2Ugc2hvdWxkIHRyYW5xdWlsaXplIGhpbSBqdXN0IHRvIGhhdmUgYSBiZXR0ZXIgYXNzZXNzbWVudCBvZiBob3cgaGUgaXMgZG9pbmcuIApDaGVjayBvdXQgb3VyIHBob3RvIHNsaWRlc2hvdyBvZiBmYW1vdXMgcGVvcGxlIHdpdGggYmlydGhkYXlzIG9uIE1hcmNoIDksIDIwMTkgYW5kIGZpbmQgb3V0IGEgZnVuIGZhY3QgYWJvdXQgZWFjaCBwZXJzb24uIEl0IHdhcyB0byBjZWxlYnJhdGUgdGhlIGxlZ2FjeSBvZiB0aGUgMTk2OCA3MyBOQkMgY29tZWR5IHNlcmllcyAiUm93YW4gTWFydGluJ3MgTGF1Z2ggSW4uIgpEbyB0aGUgc2FtZSBtZXRob2QgZm9yIHlvdXIgZmVldC4gCklmIHlvdSBoYXZlIGxlZnRvdmVyIHdoaXBwZWQgY3JlYW0gb3IgYSBjYW4gdGhhdCBpcyBuZWFyaW5nIGl0cyBleHBpcmF0aW9uIGRhdGUsIHNjb29wIG9yIHNwcmF5IGZhdCBkb2xsb3BzIG9mIHdoaXBwZWQgY3JlYW0gb250byBhIHNtYWxsIHRyYXkgb3IgcGxhdGUuIApSZXNlYXJjaCByZXF1ZXN0cyBjYW4gYmUgcG9zdGVkIGluIHRoZSBGcmlkYXkgQmFudGVyIHRocmVhZHMuIEluZGl2aWR1YWwgdGhyZWFkcyB3aWxsIGJlIHJlbW92ZWQuIElmIHlvdSBub3Qgc3VyZSB3aGV0aGVyIHlvdXIgcG9zdCBpcyBjb25zaWRlcmVkIGEgcmVzZWFyY2ggcmVxdWVzdCwgcGxlYXNlIG1lc3NhZ2UgdGhlIG1vZHMuClRoZSByYXBwZXIgdGhlbiB0YWtlcyBhIExPVCBvZiByaXNrLiBUaGV5IGFyZSBvdXQgdGhlIG1vbmV5IHNwZW50IG9uIHByb2R1Y3Rpb24gKGFuZCBwZXJoYXBzIGdob3N0IHdyaXRpbmcpIGJ1dCB0aGV5IGdldCBhbGwgdGhlIHByb2ZpdCB0aGF0IG1pZ2h0IGFwcGVhci4gQnV0IG1vc3QgcmFwcGVycyBkb24gZ2V0IGFueSBwcm9maXQuIFRoZSBjb3N0IGlzIGdyZWF0ZXIgdGhhbiB0aGUgZXhwZW5zZXMgdGhhdCBnbyBpbnRvIHRoZSB0aGluZy4gU28gdGhlIG1vbmV5IHRoZXkgZWFybiBpcyByaXNrIGZyZWUsIGJ1dCB0aGV5IHByb2JhYmx5IHdvdWxkIGxpa2UgYSBsb3QgbW9yZSBvcHBvcnR1bml0aWVzIHRvIHNlbGwgdGhlaXIgcHJvZHVjdC4KIldlIGtub3cgdGhhdCBwb2tpZXMgYXJlIG1vcmUgbGlrZWx5IHRvIGJlIHRoZSBnYW1ibGluZyBtZWNoYW5pc20gb2YgY2hvaWNlIGZvciBwcm9ibGVtIGdhbWJsZXJzLCBhbmQgcGVvcGxlIHdobyBwbGF5IHRoZSBwb2tpZXMgYXJlIGZhciBtb3JlIGxpa2VseSB0byBiZWNvbWUgcHJvYmxlbSBnYW1ibGVycyB0aGFuIHRob3NlIHdobyBlbmdhZ2UgaW4gb3RoZXIgZm9ybXMgb2YgZ2FtYmxpbmcsIiBEciBSYW5kbGUgc2FpZC4KNWggb24gdHVybi4gCktlbGx5IGV4IGdpcmxmcmllbmQgc2F5cyBoZXIgZGF1Z2h0ZXIgd2FzIGJlYXRlbk5vdG9yaW91cyBCSUcgZGF1Z2h0ZXIgcmVvcGVuaW5nIGNsb3RoaW5nIHN0b3JlIGluIEJyb29rbHluQSBtYW4gd3JvbmdmdWxseSBqYWlsZWQgZm9yIDQ2IHllYXJzIGlzIG5vdyBzdXBwb3J0aW5nIGhpbXNlbGYgd2l0aCBoaXMgYXJ0Q291bGQgYSBjdXJlIGJlIGNsb3NlIGZvciBzaWNrbGUgY2VsbCBhbmVtaWE/TWNLaW5zZXkgbGVhZGVyIGFkbWl0cyBjb25zdWx0aW5nIGZpcm0gaGFzIG1hZGUgbWlzdGFrZXNIZWFsdGggdGlwcyBmb3IgY29waW5nIHdpdGggZGF5bGlnaHQgc2F2aW5nIHRpbWVNaWNoYWVsIENvaGVuIGZhY2VzIGFjY3VzYXRpb25zIG9mIGx5aW5nIGR1cmluZyBoaXMgY29uZ3Jlc3Npb25hbCB0ZXN0aW1vbnlTIDUwMCBoYXMgaXRzIHdvcnN0IHdlZWsgc2luY2UgSmFudWFyeSBhbWlkIHdlYWsgam9icyByZXBvcnRIb3cgdG8gd2F0Y2ggIlRoZSBHYXlsZSBLaW5nIEludGVydmlldyB3aXRoIFIuIApDZXMgdm9sdXRpb25zIG5lIHNvbnQgcGFzIGxlIHBvaW50IGQnYXJyaXZlLCBwbHV0dCBsJ2lsbHVzdHJhdGlvbiBkJ3VuIHByb2Nlc3N1cyBlbiBjb3Vycy4gQWluc2ksIGRlcyBkaXNjdXNzaW9ucyBzZSBwb3Vyc3VpdmVudCBwb3VyIG9yZ2FuaXNlciBsZXMgcmFwcG9ydHMgZW50cmUgbCdhbmltYWwgZXQgbCdob21tZS4gRW4gZWZmZXQsIGwndm9sdXRpb24gICBvdSBsYSBjcmF0aW9uICAgZCd1biBkcm9pdCBkZSBsJ2FuaW1hbCBuY2Vzc2l0ZSBkZSBjb25jaWxpZXIgbCdpbnN0cnVtZW50YWxpc2F0aW9uIGRlIGwnYW5pbWFsIHBvdXIgbCdob21tZSBhdmVjIGxhIG5jZXNzYWlyZSBwcm90ZWN0aW9uIGRlIGwnYW5pbWFsIHBhciBsJ2hvbW1lLiAKSXQgZGVwZW5kcyBvbiB0aGUgc2l0dWF0aW9uLCB5b3VyIGVudGlyZSBoYW5kIG11c3QgYmUgZXhwb3NlZCB0byBkZXRlcm1pbmUgdGhlIHdpbm5lciBhdCB0aGUgZW5kIG9mIGFsbCBiZXR0aW5nLiBJbiB0aGUgY2FzZSBvZiBhbGwgb3RoZXIgcGxheWVycyBmb2xkaW5nLCB0aGUgaGFuZCBkb2VzIG5vdCBoYXZlIHRvIGJlIGV4cG9zZWQgYXQgYWxsLiAKSGUgbG92ZWQgdG8gd2F0Y2ggc3BvcnRzLCBwbGF5IHBva2VyIGFuZCBwaXRjaCwgYW5kIHdhcyBhbHdheXMgIk1yLiAKTHVja2lseSBteSBmYXRoZXIgbWFuYWdlZCB0byBzdGF5IHN0YWJsZSBhbmQgd2FzIGFibGUgdG8gYnJlYWsgb3V0IG9mIHRoaXMgaG9ycm9yIGNpcmNsZSBvZiBWaWN0aW1zIHdobyB3b3VsZCBsYXRlciBiZWNvbWUgb2ZmZW5kZXJzLgpDZW50YXVycyB3b3VsZCBwcm9iYWJseSBoYXZlIGJyZWFzdHMgb24gdGhlIGh1bWFuIHRvcnNvIHBhcnQsIGFuZCBhbHNvIGhhdmUgaG9yc2UgbWFtbWFyaWVzIG9uIHRoZSBob3JzZSB0b3JzbyBwYXJ0LiBUaGluZ3MgZ2V0IGNvbXBsaWNhdGVkIGZyb20gaGVyZSwgc2luY2UgY2VudGF1ciBiYWJpZXMgbWlnaHQgdXNlIGVpdGhlciBwYWlyLCBkZXBlbmRpbmcgb24gd2hldGhlciB0aGV5IGxpa2UgaHVtYW4gYmFiaWVzLCBhbmQgZmFpcmx5IGxhcnZhbCB3aGVuIGJvcm4sIG9yIGxpa2UgaG9yc2UgYmFiaWVzLCBhbmQgcHJldHR5IGZ1bGx5IGRldmVsb3BlZC4gCkxpa2Ugb3VyIHNhdWNlICAgd2UgaGFydmVzdCBhIHdob2xlIGNyb3Agb2Ygb3JnYW5pYyB0b21hdG9lcyAgIDEwIHRvbnMgb2YgdG9tYXRvZXMgZXZlcnkgeWVhci4gCjE1SHViUGFnZXMgVHV0b3JpYWxzIGFuZCBDb21tdW5pdHkKSXQgY2xlYXJseSBzYXlzIHRoZXkgd2FudGVkIHRvIHNlZSBtb3JlIGRvY3VtZW50cyBjYXVzZSB0aGUgZmlyc3QgYnVuY2ggd2VyZW4gY2xlYXIgZW5vdWdoLiBJIHNlbnQgdGhlbSwgaXQgY2xlYXJseSBzYXlzICJ0aGFuayB5b3UgZm9yIHNlbmRpbmcgdGhlIGRvY3VtZW50cyIuCkluIHBva2VyIGRvZXMgMyBwYWlyIGJlYXQgZnVsbCBob3VzZQpUaGF0IGFtb3VudCBzaG91bGQgZ2V0IHlvdSBhIHByZXR0eSBnb29kIHBhY2thZ2UgdG8gZ2V0IHN0YXJ0ZWQuIApUaGUgZGVmaW5pdGlvbiBvZiBhIGNvdmFsZW50IGJvbmQgaXMgJ2Egc2hhcmVkIHBhaXIgb2YgZWxlY3Ryb25zJyBzbyB0d28gcGFpcnMgbWFrZXMgYSBkb3VibGUgYm9uZCBhcyBpbiBjYXJib24gZGlveGlkZSBhbmQgdGhyZWUgc2hhcmVkIHBhaXJzIG1ha2VzIGEgdHJpcGxlIGJvbmQgYXMgaW4gYSBuaXRyb2dlbiBtb2xlY3VsZS4gCkkgbWVhbiwgZmluZCB0ZWNobmlxdWVzIHRoYXQgcmVzb25hdGUgd2l0aCB5b3UsIGJ1dCBkb24ndCB3b3JyeSBhYm91dCBmaW5kaW5nIHNvbWUgbWFnaWNhbCBtb2RhbGl0eSBvciB0aGluayBvZiBpdCBpbiBtb25ldGFyeSByZXR1cm5zLiBMb29rIGF0IGl0IHRoaXMgd2F5LiBJbiBhbnkgbW9kYWxpdHksIHlvdSB3aWxsIGZpbmQgcGVvcGxlIHdobyBzd2VhciBpdCBpcyBUSEUgTU9TVCBFRkZFQ1RJVkUgQU1BWklORyB0aGluZyBzaW5jZSBzbGljZWQgYnJlYWQuIApUaGUgZ2xvcnkgYW5kIG9wdWxlbmNlIG9mIEFuY2llbnQgUm9tZSBjb21lcyBhbGl2ZSBhdCBDYWVzYXJzIEF0bGFudGljIENpdHkuIFRoZSBUZW1wbGUgTG9iYnkgaXMgYSBkcmFtYXRpYyBmb3VyIHN0b3J5IGF0cml1bSBkZXNpZ25lZCBpbiB0aGUgbGlrZW5lc3Mgb2YgdGhlIEZvcnVtIG9mIGFuY2llbnQgUm9tZS4gQ2Flc2FycyBUZW1wbGUgTG9iYnkgc2VydmVzIGFzIGFuIGludGVyYWN0aXZlIGhvdGVsIGxvYmJ5IGFuZCBjaGVjayBpbiBhcmVhLiBPdmVybmlnaHQgZ3Vlc3RzIHdpbGwgYmUgZGlyZWN0ZWQgdG8gb25lIG9mIHRoZSAxLDE0NCBsdXh1cmlvdXMgZ3Vlc3Qgcm9vbXMgaW4gb25lIG9mIGZvdXIgdG93ZXJzOiB0aGUgdHdvIFRlbXBsZSBUb3dlcnMsIHdoaWNoIGhhdmUgZWxldmF0b3JzIGp1c3Qgb2ZmIHRoZSBUZW1wbGUgTG9iYnk7IHRoZSBPY2VhbiBUb3dlciwgd2l0aCBpdHMgbmV3bHkgZGVjb3JhdGVkIHN1aXRlcyBhbmQgdGhlIENlbnR1cmlvbiBUb3dlci4gQm9vayB5b3VyIHN0YXkgaW4gb25lIG9mIHRoZSB0b3AgaG90ZWxzIGluIEF0bGFudGljIENpdHkhQXRsYW50aWMgQ2l0eSBob3RlbCBjYXNpbm9zIGRvbid0IGdldCBhbnkgYmV0dGVyIHRoYW4gdGhpcy4gVGhlIG5ld2x5IHJlbm92YXRlZCBzZWNvbmQgZmxvb3Igb2YgQ2Flc2FycyBBdGxhbnRpYyBDaXR5IGlzIHRoZSBob3N0IHRvIHRoZSBsYXJnZXN0IGNvbnRpZ3VvdXMgZ2FtaW5nIGFyZWFzIGluIGFsbCBvZiBBdGxhbnRpYyBDaXR5LiBUaGF0IHRyYW5zbGF0ZXMgdG8gbm9uIHN0b3AgYWN0aW9uIGFuZCBub24gc3RvcCB3aW5uaW5nISBZb3UnbGwgZXhwZXJpZW5jZSBmaXJzdCBjbGFzcyBnYW1pbmcgb24gZXZlcnkgdmlzaXQgd2l0aCB0aGUgZnJpZW5kbGllc3QsIG1vc3QgcHJvZmVzc2lvbmFsIGF0bW9zcGhlcmUgYXJvdW5kIGFuZCB0aGUgbW9zdCBleHBlcmllbmNlZCBkZWFsZXJzIGluIHRvd24uClRoZSBwYXN0IGZldyB3ZWVrcyBoYXZlIHdpdG5lc3NlZCBkaXZlcnNlIHZvaWNlcyBib3RoIHF1ZXN0aW9uaW5nIGFuZCBzdXBwb3J0aW5nIHRoZSBlZmZpY2FjeSBvZiB0aGUgbW9yZSBzdHJpbmdlbnQgbW9ydGdhZ2UgcmVndWxhdGlvbnMuIApUaGUgc21hcnQgZGlhbCBmZWF0dXJlIGlzIGEgbm8gZ28gb24gdGhlIEpldApQbGF5aW5nIEEgUG9rZXIgR2FtZSBJcyBOb3QgRXF1aXZhbGVudCBUbyBSb2NrZXQgU2NpZW5jZS4gQW55Ym9keSBXaG8gSXMgT3B0aW1pc3QsIEhhcmQgTGVhcm5lciBDYW4gTGVhcm4gVGhlIFJ1bGVzIE9mIFRoZSBQb2tlciBHYW1lLiAKV2UndmUgYmVlbiBzbG93bHkgdHJ5aW5nIHRvIHBheSBpdCBmb3J3YXJkIGJ5IGdpdmluZyBhd2F5IHBpZWNlcyBmb3IgZnJlZSB0byBmYW1pbGllcyBpbiBuZWVkIGFzIHdlIHJlcGxhY2UvcmVzaXplIG91ciB0aGluZ3MuLiAKUTogV2h5IGRvZXMgbXkgRmFjZWJvb2sgcHJvZmlsZSBwaWN0dXJlIGFuZCBuYW1lIGFwcGVhciBvbiB0aGUgY29tbWVudHMgcGFnZSB3aGVuIEkgaGF2ZW4ndCBwb3N0ZWQgYSBjb21tZW50PwpZb3UgaGF2ZSBiZWVuIHRhdWdodCB0byBrZWVwIHlvdXIgbW91dGggc2h1dCBhbmQgJ2tlZXAgaXQgYmVoaW5kIGNsb3NlZCBkb29ycycgYmVjYXVzZSBoZSBrbm93cyB0aGF0IGhpcyBiZWhhdmlvdXIgaXMgd3JvbmcgYW5kIGhlIGRvZXNuJ3Qgd2FudCB0byBmYWNlIHRoZSBzaG9jayBhbmQgZGlzZ3VzdCBmcm9tIHRoZSBwZW9wbGUgaW4gaGlzIGxpZmUuLiAKRGVzcGl0ZSBtYWtpbmcgcXVpY2tlciBkZWNpc2lvbnMgdW5kZXIgcHJlc3N1cmUsIHdpdGggZmV3ZXIgZXJyb3JzLCBvbiB0aGUgQ0dULCBzdWJlbGl0ZSBhdGhsZXRlcyBzaG93ZWQgYSByZWR1Y2VkIGFiaWxpdHkgdG8gb3B0aW1hbGx5IGFkanVzdCBiZXR0aW5nIGJlaGF2aW9yIGFjY29yZGluZyB0byByZXdhcmQgYW5kIGxvc3MgY29udGluZ2VuY2llcy4gCkFuZCBpIHRoaW5raW5nIGZvciB0aGUgY3VydmUgZG93bndhcmQgdGhhdCB3aWxsIHdyYXAgaW50byB0aGUgc2lkZS4gaXMgdGhlcmUgYSBwbHVnaW4gdGhhdCB5b3UgY2FuIHNlbGVjdCBzZXZlcmFsIHNpZGVzICg0IG9yIG1vcmUpIGFuZCBpdCB3aWxsIGZpbGwgaW4gdGhlIG5lY2Vzc2FyeSBnZW9tZXRyeSB0byBtYWtlIHRoZSBtZXNoPwpXZSBoYXZlIGRlc2lnbmVkIFBva2VyIENoZWF0IFByb2R1Y3RzIGluIEluZGlhIGVzcGVjaWFsbHkga2VlcGluZyBpbiBtaW5kIHRoZSBkZXNpcmUgb2YgYWxsIHRoZSBwZW9wbGUgdG8gd2luIGF0IGV2ZXJ5IGNhcmQgZ2FtZXMuIFRoZSBwcm9kdWN0IGlzIGlkZWFsIGZvciBhbnlvbmUgd2hvIGFsd2F5cyBlbmRzIHVwIGF0IHRoZSBsb3Npbmcgc2lkZSBhbmQgd2FudHMgdG8gaGF2ZSB0aGUgYmFsbCBpbiBoaXMvaGVyIGNvdXJ0IGFuZCBub3cgY2FuIG1ha2UgYmlnIGZvcnR1bmVzIGp1c3QgYnkgaW52ZXN0aW5nIGluIHRoZSBzcHkgcGxheWluZyBnYWRnZXRzIGFuZCBpdCBub3QgbGlrZSB5b3UgaGF2ZSB0byBwYXkgZXZlcnkgdGltZSB5b3UgdXNlIHRoaXMgZ2FkZ2V0IGl0IG9ubHkgb25lIHRpbWUgaW52ZXN0bWVudCBhbmQgZm9yIHRob3NlIHBlb3BsZSB3aG8gaGF2ZSBtb25leSBpc3N1ZSB3aG8gYXJlIHNrZXB0aWMgYWJvdXQgdGhlIHBheW1lbnQgZG9uIHdvcnJ5IHlvdSBjYW4gZWFybiBiYWNrIHRoZSBtb25leSB5b3UgaW52ZXN0ZWQgYnkgd2lubmluZyBoYW5kZnVsIG9mIGdhbWVzIGFuZCBtYWtlIG1vcmUgZm9ydHVuZXMgdGhhbiB5b3UgY2FuIGltYWdpbmUuIFRoZSBnYWRnZXRzIGFyZSBlYXN5IHRvIGltcGxlbWVudCBhbmQgaXMgdGhlIHBlcmZlY3QgYnJpZGdlIHRvIHdpbiBldmVyeSBjYXNpbm8gZ2FtZXMgYW5kIHR1cm4geW91ciBsdWNrIGludG8geW91ciBmYXZvci4KSGFsZiBkb21lIHBlcm1pdHMgYXJlIG5vdCBlYXN5IHRvIGdldCBkYXkgb2YsIGJ1dCB3ZSBhc2tlZCBwZW9wbGUgaW4gdGhlIGJhY2twYWNrZXJzIGNhbXBzaXRlIGluIHRoZSB2YWxsZXkgaWYgdGhleSBoYWQgZXh0cmEgcGVvcGxlIG9uIHRoZWlyIHBlcm1pdHMgYW5kIGdvdCBsdWNreS4gSXQgY29tbW9uIGZvciBwZW9wbGUgaW4gdGhlIHBhcmsgdG8gb3ZlciBib29rIG9uIGFkdmFuY2VkIHBlcm1pdHMuIApJIHRoaW5rIEhPRExpbmcgZm9yIGlkZW9sb2dpY2FsIHJlYXNvbnMgbWFrZXMgd2F5IG1vcmUgc2Vuc2UgdGhhbiBIT0RMaW5nIGZvciBmaW5hbmNpYWwgcmVhc29ucy4KV2hlbiBJIGhhbmcgb3V0IHdpdGggbXkgZnJpZW5kcywgd2UgdXN1YWxseSBwbGF5IHBva2VyIGFuZCB3ZSBhbHdheXMgaGF2ZSBhIGJsYXN0IGFzIHNvbWVvbmUgbmV3IHdpbnMgZXZlcnkgdGltZS4gCk5ld2x5IGVsZWN0ZWQgbWF5b3IgRGVuaXMgQ29kZXJyZSBoYXMgbWFkZSBhIGNyYWNrZG93biBvbiB0aGUgcGFybG91cnMgb25lIG9mIGhpcyBmaXJzdCBvcmRlcnMgb2YgYnVzaW5lc3MgYXQgY2l0eSBoYWxsLgogMiBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvTXkgZW1vdGlvbnMgYXJlIG5vcm1hbGx5IHZlcnkgZGFtcGVuZWQgICBiYWQgY29waW5nIG1lY2hhbmlzbSwgbm8gZG91YnQuIApTdGFuZGluZyBvdXQgaW4gdGhlIGNyb3dkIGlzIGJhZD8gYmVpbmcgaWdub3JlZCBhcyBvbmUgb2YgdGhlIGNyb3dkIGlzIHdvcnNlLiBBdCBsZWFzdCB5b3UgY2FuIHB1dCB1bmlxdWVuZXNzIHRvIHVzZS4gCkFmdGVyIEkgZ2F2ZSBiaXJ0aCBhbmQgaGUgZ3JpbGxlZCBtZSBhYm91dCBjaGVhdGluZyB3aGlsZSBJIHdhcyB1bmRlciBhbmVzdGhlc2lhLCBpdCBjYW1lIG91dCB0aGF0IGhlIHdhcyB0aGUgb25lIGNoZWF0aW5nLi4gCig1IGNsdWJzIG9uIHRoZSBib2FyZCkuIApSZW11c3NheXN3aGEgdQpHb3RvIGEgZGlmZmVyZW50IHN0YXRlIHRoYXQgaGFzIGNhc2lub3MsIGkgZ28gZm9yIHNvbWUgb2YgdGhlIG1vcmUgbGVzc2VyIGtub3duIGluZGlhbiByZXNlcnZhdGlvbiBvbmVzIGluIHRoZSBjYXJvbGluYXMgYW5kIGRvIGl0IGFnYWluLgpDaGFzdGFpbiBpcyBhIFRJRkYgdHdvIHRpbWVyIHRoaXMgeWVhciwgYWxzbyBzdGFycmluZyBpbiBXb21hbiBXYWxrcyBBaGVhZCwgcGxheWluZyAxOXRoIGNlbnR1cnkgYXJ0aXN0IGFuZCBOYXRpdmUgcmlnaHRzIGFjdGl2aXN0IENhcm9saW5lIFdlbGRvbi4gVGhlIGZpbG0gaXMgZGlyZWN0ZWQgYnkgU3VzYW5uYSBXaGl0ZSAoTmFubnkgTWNQaGVlIFJldHVybnMsIE91ciBLaW5kIG9mIFRyYWl0b3IpLCB3aGljaCBtYWtlcyBpdCBvbmUgb2YgbW9yZSB0aGFuIDEwMCBmZWF0dXJlcyBhbmQgc2hvcnRzIGZyb20gZmVtYWxlIGZpbG1tYWtlcnMgYXQgdGhpcyB5ZWFyIGZlc3RpdmFsLgpUaGUgaG90dGVzdCBnaXJsIGluIHNjaG9vbCwgd2hvbSBJIGhhZCBuZXZlciB0YWxrZWQgdG8gb25jZSwganVzdCBmbGF0bHkgc2FpZCAiSSB0aGluayB0aGV5J3JlIGN1dGUiIGFuZCBldmVyeWJvZHkganVzdCBzaHV0IHRoZSBmdWNrIHVwIHJpZ2h0IHRoZXJlLiAKSWYgSSBiZWVuIGF3YXJlIHRoZXkgd2VyZSBhdHRlbmRpbmcgSSB3b3VsZCBoYXZlIG5vdGlmaWVkIHRoZW0sIGFuZCBwZXJoYXBzIHNhdmVkIHRoZW0gdGhlIHRyb3VibGUgYW5kIGVtYmFycmFzc21lbnQuIApIYXJyb2QncyBsYXd5ZXJzIGhhZCBzcGVudCBtdWNoIG9mIHRoZWlyIHRpbWUgcHJlcGFyaW5nIGhlciBmb3IgdGhlIHByb3NwZWN0IG9mIGEgZnVsbCB0aW1lIGphaWwgc2VudGVuY2UsIGdpdmVuIHRoZSBzZXJpb3VzbmVzcyBvZiB3aGF0IHNoZSdkIGRvbmUuCk9yIGFueXdoZXJlIG4gR29yZW1lLiAKTWlrZSBEZVdpbmUgc2Vla3MgJDE0OCBtaWxsaW9uIG1vcmUgdG8gaGVscCBhdCByaXNrIGNoaWxkcmVuIEdvdi4gCkFueXdheXMsIGhlbGljb3B0ZXJzIGFyZSBsb3VkIGFzIGZ1Y2ssIGFuZCBpZiB0aGVyZSBpcyBvbmUgY2xvc2UgdG8geW91LCB5b3Ugbm90IGdvaW5nIHRvIGJlIGFibGUgdG8gaGVhciBtdWNoIGVsc2UuIEkgd2FzIHdvcmtpbmcgbGluZSBzZXJ2aWNlIGF0IGFuIGFpcnBvcnQgYW5kIGEgbmF0aW9uYWwgZ3VhcmQgY2hpbm9vayBmbGV3IGluLiBTaG9vayB0aGUgZ29kZGFtbiBidWlsZGluZy4KWWV0IHRoZWlyIHN1Y2Nlc3MgbWF5IGhhdmUgY29tZSBmcm9tIGFub3RoZXIgc291cmNlIG9mIGhpZ2ggcGVyZm9ybWFuY2U6IFN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2UsIHRoZSBhYmlsaXR5IHRvIGFudGljaXBhdGUgY29tcGV0aXRvcnMnIGJlaGF2aW9yIGFuZCBwcmVlbXB0IGl0LiAKSSBhbSBhIHBlcnNvbiB3aG8gY3JpZXMgd2hlbiB1cHNldCwgYnV0IG5vdCBqdXN0IHVwc2V0IGFzIGluIEkgc2FkLiBXaGVuIEkgaGF2ZSB0byBxdWl0IGEgam9iIGFuZCB0byB0byBpbmZvcm0gdGhlIGJvc3MgICBJIGNyeSBhdCB0aGUgYm9zcyBkZXNrLiBXaGVuIEkgaGF2ZSB0byB0YWxrIHRvIGEgdGhlcmFwaXN0IGFib3V0IHBlcnNvbmFsIHN0dWZmLCBzb21ldGltZXMgZXZlbiBhYm91dCBtdW5kYW5lIHNoaXQsIEkgc2hha2UgYW5kIGNyeS4gV2hlbiBJIGFtIGNvbmZyb250aW5nIHNvbWVvbmUgYW5kIEkgYW5ncnkgICB3YXRlcndvcmtzLiBJIHNlcmlvdXNseSBoYXRlIGl0LiBJIHRoaW5rIGl0IG1ha2VzIG1lIGxvb2sgd2VhayBhbmQgc3R1cGlkLiBJIHdpc2ggaXQgd2FzIGFzIGVhc3kgYXMganVzdCBzdG9wcGluZyAgIGJ1dCBpdCBhIHJlYWwgcGh5c2lvbG9naWNhbCByZWFjdGlvbiB0byBzdHJlc3MvZW1vdGlvbi9wYWluLgpSZXNwZWN0ZXogdG91am91cnMgbGVzIGF1dHJlcyBqb3VldXJzIGV0IHNpIHZvdXMgbid0ZXMgcGFzIHNyIGRlIGwndXNhZ2UgZGFucyB1bmUgY2VydGFpbmUgc2l0dWF0aW9uLCBmYWl0ZXMgcXVlbHF1ZSBjaG9zZSBkZSBkaXNjcmV0IGF1IGxpZXUgZGUgdm91cyBmYWlyZSByZW1hcnF1ZXJbMV0uLiAKU3R1ZHlpbmcgb3BlbmluZ3MgYW5kIHBhdHRlcm5zIGluIGNoZXNzIGhhdmUgYSBzaW1pbGFyIHB1cnBvc2UuIFdoZW4geW91IGp1c3Qgc3RhcnRpbmcsIHRoZXJlIGxpdHRsZSB2YWx1ZS4gWW91IGRvbiBsZWFybiB0byBwbGF5IHRoZSBndWl0YXIgYnkgcGlja2luZyBpdCB1cCBmb3IgdGhlIHZlcnkgZmlyc3QgdGltZSBhbmQgdHJ5IHRvIGxlYXJuIGEgd2hvbGUgc29uZy4gCkNoaW5hIHNhdmVkIGl0c2VsZiBmcm9tIGEgcG9wdWxhdGlvbiBjYXRhc3Ryb3BoZSBieSBpbXBsZW1lbnRpbmcgY29udHJvbCBtZWFzdXJlcy4gCkJlc2lkZXMgTmVncmVhbnUsIHRoZSB3b3JsZCBudW1iZXIgb25lIHBva2VyIHBsYXllciwgTmFkYWwgYmVhdCBJdGFsaWFuIGRvd25oaWxsIHN0YXIgQWxiZXJ0byBUb21iYSwgcGFzdCBmb290YmFsbCBsZWdlbmRzIFJvbmFsZG8gYW5kIEFuZHJpeSBTaGV2Y2hlbmtvLCBhbmQgZmluYWxseSBEdXRjaCBmaWVsZCBob2NrZXkgY2hhbXBpb24gRmF0aW1hIE1vcmVpcmEgZGUgTWVsbyBpbiB0aGUgaGVhZHMgdXAsIHRoZSByZXBvcnQgYWRkZWQuClRoZXkgZGlkIHRoZWlyIHN1bXMgY2FyZWZ1bGx5LiAKRm9sbG93bmcgZGF5IHdhcyBvdXIgZGF5IHRvIHZzdCB0aGUgQXlhIFNvZmEsIGNodXJjaCB0dXJuZWQgbW9zcXVlIHR1cm5lZCBtdXNldW0uIEl0IHMgdGhlIG1vc3QgZmFtb3VzIG1vbnVtZW50IG4gSXN0YW5idWwgYW5kIGRhdGVzIGJhY2sgZnJvbSA1MzchIEl0IGh1Z2UsIGRvbWVkIGNlbG5nIHMgcHJldHR5IG5zYW5lIHRvIHNlZS4gCkZvciBleGFjdGx5IG9uZSB5ZWFyIG9mIG15IGxpZmUsIEkgd2FzIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllci4gVGhhdCBpcywgcG9rZXIgd2FzIG15IHNvbGUgc291cmNlIG9mIGluY29tZSAobm90IHRvIG1lbnRpb24gbXkgbWFpbiBzb3VyY2Ugb2YgYW5ub3lhbmNlIGFuZCBmcnVzdHJhdGlvbiwgd2l0aCBhIGhlYXBpbmcgc2lkZSBvZiBhbnhpZXR5KS4gRHVyaW5nIHRoYXQgeWVhciwgSSByZWFsaXplZCB0aGF0IHRoZSB3YXkgdGhlIHByb2Zlc3Npb24gaXMgcG9ydHJheWVkIGluIGFsbCB0aGUgcG9rZXIgc2hvd3Mgb24gVFYgaXMgYSBzdGVhbWluZyBjcm9jayBwb3Qgb2YgYnVsbHNoaXQuIEV2ZW4gdGhlIEphbWVzIEJvbmQgbW92aWVzIHN0ZWVyZWQgbWUgd3JvbmcuIFdoZXJlIGFyZSB0aGUgdHV4ZWRvcz8KVGhlX3Jlc2lkZW50X3NrZXB0aWMgIDI0IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KWW91IGdldCBib251c2VzIGZvciBiZWluZyB0YXJnZXRlZCBieSBtdWx0aXBsZSBwZW9wbGUuIApXaGVuIGl0IGNvbWVzIHRvIFRleGFzIEhvbGQgRW0gUG9rZXIgQ2hpcHMsIHlvdSBhcmUgc3VyZSB0byB3YW50IG9uZXMgdGhhdCBoYXZlIHRoZSB0cmFkZW1hcmsgZW1ibGVtcywgYXMgd2VsbCBhcyB0aGUgbW9zdCBwb3B1bGFyIGNvbG9ycy4gWW91IG1heSBldmVuIGZpbmQgdGhhdCB5b3Ugd2FudCB0byBwdXJjaGFzZSBhIHNldCBvZiBwb2tlciBjaGlwcyB0aGF0IGNvbWVzIGluIGEgc3BlY2lhbCBjYXNlLCBvciBvbmVzIHRoYXQgY29tbWVtb3JhdGUgYSBzcGVjaWFsIG9jY2FzaW9uLi4gCkJsdWUgQmVsbCBqZWFucyBlbXBsb3lzIDE3NSBsb2NhbCB3b21lbiB0byBzZXcgNDUsMDAwIHBhaXJzIG9mIFdyYW5nbGVycyBhbmQgUnVzdGxlcnMgYSB3ZWVrLiBJZGVhbCBjZW1lbnQgaXMgcHJvZHVjZWQgaW4gdGhlIHRvd24sIGFzIGFyZSBTb2xvIHBsYXN0aWMgY3Vwcy4gClRleGFzIEhvbGRlbSBQaXJhdGUgUG9rZXIgU29mdHdhcmUgUmV2aWV3CklmIHlvdXIgY2xpZW50IGFjdHVhbGx5IGlzIGEgaG90ZWwsIGV2ZW4gc3VwcG9zZWQgUiB0aW1lIGNhbiBiZWdpbiB0byBmZWVsIGxpa2UgYSBncmluZC4gSW5paSBLaW0sIGNvIGZvdW5kZXIgYW5kIGNyZWF0aXZlIGRpcmVjdG9yIGF0IEtpbmcgUGFydG5lcnMsIHNheXMgdGhlIGFnZW5jeSByZWNlbnRseSB0b29rIG9uIGEgbmV3IGhvdGVsIGNsaWVudCwgYW5kIHRoZSBwcm9wZXJ0eSB2aXNpdHMgaGFkIGEgcnV0aGxlc3MgcGFjZSB0aGF0IHRvb2sgdGhlbSB0byBmaXZlIGhvdGVscyBpbiBmaXZlIGRheXMuICJJdCB3YXMgcmVhbGx5IHRvdWdoLCIgc2hlIHNheXMuIApMZXQgbWUgbWFrZSBzdXJlIHlvdSBxdW90ZSB0aGF0IGNvcnJlY3RseS4gCjI2KSAiVGhlc2UgbmV3IGluc2lnaHRzIGludG8gbWVjaGFub2Jpb2xvZ3kgc3VnZ2VzdCB0aGF0IG1hbnkgb3N0ZW5zaWJseSB1bnJlbGF0ZWQgZGlzZWFzZXMgbWF5IHNoYXJlIGEgY29tbW9uIGRlcGVuZGVuY2Ugb24gYWJub3JtYWwgbWVjaGFub3RyYW5zZHVjdGlvbi4iIChXT1chKQpQbGVhc2UgcHV0IHRoZSBzdWJqZWN0IGFzICJJTG92ZSBHYUdhIi4gQWxzbywgdGhpcyBsaXN0IHVzZXMgdGhlIHRlcm0gImlUdW5lcyIgdG8gcmVwcmVzZW50ZGlnaXRhbCBzdG9yZXMuIApTcG90IG9uLiAKVGhlcmUgaXMgYWJzb2x1dGVseSBub3RoaW5nIHdyb25nIHdpdGggQ2FuYWRhIGJlaW5nIG1hZGUgdXAgb2YgYWxsIHNvcnRzIG9mIHJhY2VzLiAKU3RhcnRpbmcgSGFuZCBTZWxlY3Rpb24KVGhpbmsgYWJvdXQgaXQuIApJZiBydW1vdXIgaGFzIGl0IHJpZ2h0LCBTZWFzb24gMTAgb2YgQ0JDIERyYWdvbnMnIERlbiB3aWxsIGZlYXR1cmUgbm90IG9uZSwgbm90IHR3byBidXQgdGhyZWUgbmV3IGRyYWdvbnMuIApORU8gRXhjaGFuZ2UgSW5jLiBpcyB0aGUgb3BlcmF0b3Igb2YgQ2FuYWRhJ3MgbmV4dCBnZW5lcmF0aW9uIHN0b2NrIGV4Y2hhbmdlLCBwdXR0aW5nIHRoZSBuZWVkcyBvZiBpbnZlc3RvcnMsIGJ1c2luZXNzZXMgbG9va2luZyB0byByYWlzZSBjYXBpdGFsIGFuZCBkZWFsZXJzIGZpcnN0LiBMYXVuY2hlZCBpbiBNYXJjaCAyMDE1LCB0aGUgTkVPIEV4Y2hhbmdlIGN1cnJlbnRseSBvZmZlcnMgYW4gaW5ub3ZhdGl2ZSB0cmFkaW5nIHZlbnVlIGZvciBhbGwgbGlzdGVkIENhbmFkaWFuIHNlY3VyaXRpZXMgYW5kIGEgdmFsdWUgYWRkZWQgbGlzdGluZ3MgcHJvY2VzcyBmb3IgY2FwaXRhbCByYWlzaW5nIGNvbXBhbmllcyBhbmQgaW52ZXN0bWVudCBwcm9kdWN0cywgZm9jdXNlZCBvbiBsaXF1aWRpdHksIHRyYW5zcGFyZW5jeSBhbmQgZWZmaWNpZW5jeS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHBsZWFzZSB2aXNpdDoKTGV0IHRha2UgdHdvIHNvbWV3aGF0IHJlY2VudCBleGFtcGxlcyBmcm9tIHRoZSB3b3JsZCBvZiBlZHVjYXRpb24gdG8gZXhhbWluZSB0aGVzZSBzZWVtaW5nbHkgY29udHJhZGljdG9yeSBwcm9wb3NpdGlvbnMuClBva2VyIHBsYXllciB3aW5zIGxlZ2FsIGJhdHRsZSB0byBub3Qgc3VwcG9ydCBjaGlsZHJlbiBmcm9tIHdpbm5pbmdzClJ1c2ggTG91bmdlICAgTG9jYXRlZCByaWdodCBvZmYgb2YgdGhlIE1haW4gQXRyaXVtIGFuZCBkaXJlY3RseSBvZmYgb2YgdGhlIGNhc2lubyBmbG9vciwgUnVzaCBMb3VuZ2Ugc2VydmVzIGFzIGEgaG90IHNwb3QgZm9yIGd1ZXN0cyB0byByZWxheCwgZW5qb3kgYSBjb2NrdGFpbCwgbGlzdGVuIHRvIGxpdmUgbXVzaWMsIGdhbWJsZSBhbmQgd2F0Y2ggdGhlIGxhdGVzdCBnYW1lIG9uIGZsYXQgc2NyZWVuIGhpZ2ggZGVmaW5pdGlvbiBUVidzLiBXaXRoIGxpdmUgZW50ZXJ0YWlubWVudCBuaWdodGx5LCBSdXNoIExvdW5nZSBpcyBhbiBpZGVhbCBwbGFjZSB0byBtaW5nbGUgd2l0aCBmcmllbmRzIG9yIHRvIGp1c3Qgc2l0IGJhY2sgYW5kIGVuam95IHRoZSBtdXNpYy4gRm9yIHRob3NlIGxvb2tpbmcgdG8gZ2FtYmxlLCBSdXNoIExvdW5nZSBhbHNvIG9mZmVycyBiYXIgdG9wIHZpZGVvIHBva2VyIGFzIHdlbGwgYXMgYmxhY2sgamFjayBhbmQgcm91bGV0dGUgdGFibGVzLgpFbXBpcmljYWwgUG9rZXIgY2FsY3VsYXRvcnMgb2ZmZXIgdXAgdG8gdGhlIHVzZXIgYSBkeW5hbWljIGNvbGxlY3Rpb24gb2YgdGhlIGFnZ3JlZ2F0ZSBhY3Rpdml0eSBvZiB5b3VyIG9wcG9uZW50cy4gClllYXJzIG9mIHRoZXJhcHkuIApNYW55IG9mIHRoZSBwb2tlcnMgd2UgZ3JvdyBpbiB0aGUgZ2FyZGVuIGhhdmUgZXZlcmdyZWVuIGZvbGlhZ2UgYW5kIHRoZSBsZWF2ZXMgY2FuIGxvb2sgcmFnZ2VkIGF0IHRpbWVzLiBBIHR3aWNlIHllYXJseSB0aWR5IGlzIGlkZWFsLiBSZW1vdmUgZmFkaW5nIGZvbGlhZ2UgaW4gYXV0dW1uIGFuZCB0aGVuIHRob3JvdWdobHkgdGlkeSBpbiBsYXRlIHNwcmluZy4gV2hlbiB0aWR5aW5nLCBmcmlzayBmb3Igc25haWxzIGJlY2F1c2UgdGhleSBjYW4gZGFtYWdlIGJ1ZHMgYXQgYSBjcml0aWNhbCBzdGFnZSwgY2F1c2luZyBtYWxmb3JtZWQgZmxvd2Vycy4KU3RhbmRzIGZvciAiU2F2ZSBPdXIgQWRvbGVzY2VudHMgZnJvbSBQcm9zdGl0dXRpb24iIGFuZCBpcyBhIGhhbmRzIG9uIG91dHJlYWNoIHRvIGZpZ2h0IHNleCB0cmFmZmlja2luZyBhdCBsYXJnZSBldmVudHMgYW5kIGluIGNvbW11bml0aWVzLiBPbiBoZXIgd29yc3QgbmlnaHQsIGFmdGVyIGJlaW5nIGF1Y3Rpb25lZCBvZmYgdG8gbmVhcmx5IHR3byBkb3plbiBtZW4gaW4gYSBkaW5neSwgZGlydHksIGlubmVyIGNpdHkgRGV0cm9pdCBtb3RlbCwgVGhlcmVzYSByZWNhbGxlZCB0aGUgb25seSBpdGVtIHRoYXQgd291bGQgaGF2ZSByZWFjaGVkIG91dCB0byBoZXIsIGEgYmFyIG9mIHNvYXAuICAgU2F2ZSBPdXIgQWRvbGVzY2VudHMgZnJvbSBQcm9zdGl0dXRpb24gICB0byBoZWxwIHJlYWNoIG91dCB0byBvdGhlciB2aWN0aW1zLi4gCkluIG90aGVyIHdvcmRzLCBwbGF5ZXIgQSBoYXMgdHVybmVkIHdoYXQgaXMgYSBwcmV0dHkgYmlnIGhhbmQgaW4gYSBoZWFkcyB1cCBzcG90IGludG8gc29tZXRoaW5nIHRoYXQgaXMgb25seSBzbGlnaHRseSBiZXR0ZXIgdGhhbiBhIHRvdGFsIGJsdWZmIHdpdGggdHJhc2guIApJZiBoZSBjYXVnaHQgYW5kIGJlaW5nIHB1cnN1ZWQsIGhlIGFjdGl2YXRlcyByb2FkYmxvY2tzIGFuZCBzd2l0Y2hlcyBhcm91bmQgc2lnbmFsIGxpZ2h0cyB0byB3cmVjayBoaXMgcHVyc3VlcnMuLiAKQUxBQSdZQSBCRSBNTFlBUiBMUkFMSUsgWUFUSVJJTSBQTEFOSUFsaWFhIEJlbGVkaXllIEJha2FuIFNlcmthbiBBY2FyLCBBbGlhYSBFc25hZiB2ZSBTYW5hdGtybGFyIEtyZWRpIHZlIEtlZmFsZXQgS29vcGVyYXRpZmluZSB6aXlhcmV0dGUgYnVsdW5kdS4gQWxpYWEneWEgYmUgbWlseWFyIGxpcmFsayBiaXIgeWF0cm0gcGxhbmxhbmRuIGJlbGlydGVuIEFsaWFhIEJlbGVkaXllIEJha2FuIFNlcmthbiBBY2FyLCB6ZWxsaWtsZSBFZ2Ugbml2ZXJzaXRlc2knbmluIHZlIG1lc2xlayBoYXN0YWxrbGFyIGhhc3RhbmVzaW5pbiBBbGlhYSdubiBnZWxlY2VpIGFzbmRhbiBvayBkZWVybGkgcHJvamVsZXIgb2xkdXVudSBzeWxlZGkuIEFsaWFhIEVzbmFmIHZlIFNhbmF0a3JsYXIgS3JlZGkgdmUgS2VmYWxldCBLb29wZXJhdGlmaSBCYWthbiBBZGFsIEFsdGF5IHZlIHluZXRpbWkgQWxpYWEgQmVsZWRpeWUgQmFrYW4gU2Vya2FuIEFjYXInIGFybGFkLiBBbGlhYSd5YSB5YXBsYWNhayBkZXYgeWF0cm1sYXIgaGFra25kYSB5bmV0aW0ga3VydWx1IHllbGVyaW5lIGJpbGdpbGVyIHZlcmVuIEJha2FuIFNlcmthbiBBY2FyLCBnZWxlYy4gT2t1eXVjdWxhcm5hIGNyZXRzaXogb2xhcmFrIGRhdHQgYmlubGVyY2UgZHJ0bCB2ZSBhbHRsIGtpdGFwIHNldGxlcmkgaWxlIFRya2l5ZSBDdW1odXJpeWV0aSB0YXJpaGluZGUgYmlyIGtsdHIgcmVrb3J1bmEgaW16YSBhdGFuIEFsaWFhIEJlbGVkaXllc2ksIHRhcmloc2V2ZXJsZXIgdmUgYXJrZW9sb2ppIGJpbGltIGRueWFzIHRhcmFmbmRhbiBtZXJha2xhIGJla2xlbmVuICJBbGlhYSB2ZSBldnJlc2luZGVraSBBbnRpayBLZW50bGVyLCBLeW1lLCBNeXJpbmEsIEdyeW5laW9uLCBUaXNuYSwgRWxhaWEsIEFpZ2FpLCBMYXJpc2EieSBva3V5dWN1IGlsZSBidWx1dHVyZHUuIEFkbmFuIE1lbmRlcmVzIG5pdmVyc2l0ZXNpLCBGZW4gRWRlYml5YXQgLgpQdXRpbl9sb3Zlc19jYXRzICA4IHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvCkkgd2FzIG5vdyBncmluZGluZyAyMDBubCBhZ2FpbnN0IGludGVybmF0aW9uYWwgcmVncyBpbnN0ZWFkIG9mIGFnYWluc3QgYSB0b24gb2YgQW1lcmljYW4gZmlzaC4gQmVmb3JlIEJsYWNrIEZyaWRheSwgYW55b25lIHdobyB3YW50ZWQgdG8gcHV0IG1vbmV5IG9ubGluZSB0byBwbGF5IGEgcXVpY2sgZ2FtZSBvZiBvbmxpbmUgcG9rZXIgY291bGQganVzdCB0b3NzIG9uIGEgY291cGxlIGh1bmRyZWQgZG9sbGFycywgbG9zZSBpdCwgYW5kIG5vIGJpZyBkZWFsLiAKTGlmZSBpbiBGZXJuaWUgZGlkbid0IGhhdmUgdGhlIGZhbWlseSBtZW1iZXJzIHRoYXQgbWFkZSBmb3IgYSBsb3ZpbmcgZmFtaWx5IGFtYmlhbmNlLiBUaGVyZSB3YXMgbm8gb25lIGhlcmUgYnV0IHVzIGFsdGhvdWdoIHdpdGhpbiBmaXZlIHllYXJzIG15IGRhZCBoYWQgc3BvbnNvcmVkIG1hbnkgZmFtaWx5IG1lbWJlcnMgZnJvbSBib3RoIHNpZGVzIG9mIHRoZSBmYW1pbHkgd2hvIGFycml2ZWQgdG8gRmVybmllLCBzdGF5ZWQgYSBiaXQgYW5kIHRoZW4gbW92ZWQgb24gdG8gQ2FsZ2FyeS4KVmFsZW50aW5hIE1hcmllLCB3aG8gcG9zdHMgbGl2ZSBzZXggc2hvd3MgdG8gaGVyIE5TRlcgU25hcGNoYXQgY2hhbm5lbCBmb3VyIHRvIGZpdmUgdGltZXMgYSBkYXksIHBsdXMgdGVhc2VycyBvbiBoZXIgcHVibGljIHByb2ZpbGVzLCBzYXlzIHRoYXQgIkkgZGVmaW5pdGVseSBtYWtlIFt0aGUgbW9zdCBtb25leV0gZnJvbSBwZW9wbGUgd2hvIGhhdmUgYWxyZWFkeSBwdXJjaGFzZWQgc3Vic2NyaXB0aW9ucyBhbmQgYXJlIGJ1eWluZyBleHRyYXMuIiBGb3IgYW4gYXZlcmFnZSBncmF0dWl0eSBvZiBhYm91dCAkNTAsIHNoZSdsbCBzZW5kIGN1c3RvbWl6ZWQgdmlkZW9zIGFuZCBwaG90b3MuCkluIHRoZSBlbmQsIEkgdGhpbmsgaXQncyByZWFsbHkgdGhlIChodW1hbikgYnJhaW4gYmVoaW5kIHd3cyB0aGF0IG1ha2VzIHRoZSBkaWZmZXJlbmNlIGluIGhvdyBlZmZlY3RpdmUgaXQgaXMgYXQgc2NoZWR1bGluZy4gV2l0aG91dCB0aGUgcmlnaHQgaW5wdXQgKGluIHRoZSBmb3JtIG9mIGF2YWlsYWJpbGl0eSBhbmQgcm90YXRpb25zIGlucHV0IGNvcnJlY3RseSkgdGhlIG91dHB1dCB3aWxsIHNpbXBseSBub3QgYmUgdGhhdCBncmVhdCwgYW5kIHVuZm9ydHVuYXRlbHkgdGhlcmUgd2FzIG5vIGJpZyBwdXNoIGZyb20gY29ycG9yYXRlIHRvIGdldCBzdG9yZXMgcmVhZHkgYXMgdGhleSdkIG5lZWQgdG8gYmUgZm9yIHRoZSBuZXcgc3lzdGVtIChpbiB0aGUgZm9ybSBvZiByZW1pbmRlcnMgdG8gaW5wdXQvaG93IHRvIGlucHV0IGF2YWlsYWJpbGl0eSwgcm90YXRpb25zLCBldGMpLgpMZXQgYXNzdW1lIG9uIGF2ZXJhZ2UgZWFjaCBwZXJzb24gcmVidXlzIG9uY2UgYW5kIGFkZG9ucyBvbmNlLCBhbmQgeW91IGhpdCB0aGUgbWF4IG51bWJlciBvZiBzZWF0cyBvZiA1MCBwZW9wbGUuCjA6MTcuIApIaXMgcmVzZWFyY2ggaGFzIHNob3duIHBhc3NpdmUgbGVpc3VyZSBkb2Vzbid0IGNyZWF0ZSBjb250ZW50bWVudCBub3IgZG9lcyBpdCBidWlsZCBwb3NpdGl2ZSBlbmVyZ3kuIApUaGVyZSBubyBzaWduIG9mIGFueSBvZiB0aGF0IG9uIHlvdXIgZnJpZW5kLiAKVGhleSBoYWQgdG8gYXNzZW1ibGUgZXZlcnl0aGluZyBhbmQgb2Z0ZW4gaGFkIHRvIGRvIGl0IGZvciA1KyBvcmRlcnMgYXQgb25jZSwgYWxsIHdoaWxlIHRha2luZyBvcmRlcnMuIFVzdWFsbHkgYnkgdGhlbXNlbHZlcywgYnV0IGF0IGJ1c2llciB0aW1lcyB0aGV5IG1pZ2h0IGhhdmUgc29tZW9uZSBoZWxwaW5nLi4gClNoZSB3YXMgdGhlIGhlYWQgb2YgYW4gYWxsIGdpcmwgYWxsaWFuY2Ugb24gdGhlIG9ubHkgdHJpYmUgdGhhdCB3YXMgeWV0IHRvIGJlIHNlbnQgdG8gdHJpYmFsIGNvdW5jaWwuIApJJ20gc3VycHJpc2VkIHlvdSd2ZSBiZWVuIGFibGUgdG8gZG8gYXMgbXVjaCBhcyB5b3UgaGF2ZSB3aXRoIGl0IGJlaW5nIHRheCBzZWFzb24uIEkgd29ya2VkIGZvciBhIENQQSBmaXJtIGZvciB5ZWFycywgc28ga25vdyBob3cgaXQgaXMuCkFzIHN1Y2gsIG91ciBkYWlseSBpbnRha2Ugb2YgbWFnbmVzaXVtIGhhcyBzdGVhZGlseSBkZWNsaW5lZCBmcm9tIDUwMCBtaWxsaWdyYW1zIChtZykgcGVyIGRheSB0byAxNzUgbWcgcGVyIGRheSAoNykuIApTdWxsaW5kaXIgIDE0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KU29ycnkgSSBnb2luZyB0byBwdWxsIG9mZiBiZWx0d2F5IDEwIGFuZCBkcm9wIHkgYXQgYSBtY2RvbmFsZHMgKGEgc2tldGNoeSBBRiBvbmUuKS4gCjIpIEdpYW5uYTogMTUzNSAxNjI1LCAxMDBFLiBSb20sIDIyIHlvIGhhdmluZyBhIHRocmVlIHllYXIgb2xkIHNvbiAsIEEgY3VwLCBsb25nIGJsYWNrIGhhaXIsIHRhbm5lZCwgcHJldHR5LCBzbGltIGFzIG1vZGVsLCAxNzRjbSwgdHdvIG1vbnRocyBhdCBTaGFya3MgYWZ0ZXIgR2xvYmUsIGJhc2ljYWxseSBubyBraXNzIHdpdGggY3VzdG9tZXJzIGV2ZW4gYXQgR2xvYmUhIEluIGEgcm9vbSA1IG1pbiBjYXJlc3NpbmcsIDE1IG1pbiBEQVRZLCBhbm90aGVyIDEwIG1pbiBEQVRZIHdpdGggbXkgdHdvIGRpZ2l0cyBpbiBoZXIgcHVzc3kgd2l0aCBoZXIgaW50ZW5zZSBPLCAzIG1pbiBjaWdhcmV0dGUgYnJlYWssIDUgbWluIEJKLCAxMiBtaW4gbWlzc2lvbmFyeS4gUmVwZWF0LgpBIG1hbidzIG1hc3NhZ2UgaW4gQ2hlbHNlYSBoYWQgYW4gdW5oYXBweSBlbmRpbmcgICBhbmQgbm93IGhlJ3Mgc3Vpbmcgb3ZlciBpdC4KVHJhdW1hdGl6ZWQgaXNuIHRoZSB3b3JkIEkgdXNlIHRvIGRlc2NyaWJlIG15IGZlZWxpbmdzIGJ1dCwgaSBndWVzcyB5b3VyIGNvbXBsZXRlbHkgb3V0IG9mIGNvbnRleHQgYW5kIGNvbmRlc2NlbmRpbmcgY29tbWVudCBtdXN0IGJlIGFjY3VyYXRlIGN1cyB5b3Ugb24gcmVkZGl0IHJlcGx5aW5nIHRvIGEgMyBkYXkgb2xkIHBvc3QuIEhvdyB5b3UgZXZlbiBmaW5kIHRoaXM/IHNjcm9sbGluZyBkb3duIHRoZSBwYWdlIGZvciB0aGluZ3MgeW91IGNhbiBsZWF2ZSBzbmFya3kgY29tbWVudHMgb24/IGxvb2sgeW91IGp1c3QgbWFkZSBtZSB0eXBlIGEgd2hvbGUgcGFyYWdyYXBoLiAKVGhlIG9kZHMgb2Ygcm9sbGluZyBhIGZpdmUgYXJlIDQgaW4gMzYsIG9yIDEgaW4gOS4gCkV2ZXJ5b25lIGxvb2tzIHRvIHRoZSBiZXR0b3IgYW5kIGhlIGZsaXBzIG92ZXIgSjYgYW5kIHNheXMgIlN0cmFpZ2h0LCBiaXRjaCEiQSBmZXcgeWVhcnMgYmFjayBJIHdhcyBwbGF5aW5nIHRoZSAkMS8yTkwgZ2FtZSBhdCBDYWVzYXIgUGFsYWNlIExhcyBWZWdhcy4gSGUgbWFkZSBhIGxvdCBvZiBiYWQgZGVjaXNpb25zIGFuZCBkb25rZWQgb2ZmIDMgJDIwMCBidWxsZXRzIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUuIEFmdGVyIGhlIGZlbHRzIGhpcyAzcmQgYnVsbGV0IGhlIHN0YW5kcyB1cCBhbmQgd2Ugc2VlIGhpbSBtb3ZlIHRvIGEgJDIvNU5MIGdhbWUuIEl0IGNvdWxkbiBoYXZlIGJlZW4gbW9yZSB0aGFuIDE1IG1pbnV0ZXMgYmVmb3JlIHdlIGhlYXJkIHNvbWUgY29tbW90aW9uIGFuZCBpdCB3YXMgdGhlIHNhbWUgZ3V5IHllbGxpbmcgYWJvdXQgYSBiYWQgYmVhdCBvciBzb21ldGhpbmcgb3Igb3RoZXIuIE5vdGhpbmcgdG9vIG91dCBvZiB0aGUgbm9ybSBmb3IgYSBsaXZlIGNhcmRyb29tLiBIZSBnZXRzIHVwIGZyb20gdGhhdCB0YWJsZSBhbmQgd2Fsa3Mgb3V0IG9mIHRoZSBwb2tlciByb29tLgpOb2RldHRlICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KSSBub3QgdXBzZXQgd2l0aCBPUCwgaGUgb3Igc2hlIGlzIGp1c3QgYXNraW5nIGZvciBmZWVkYmFjayBhYm91dCBhIHJlYXNvbmFibGUgaGFuZCBhbmQgdHJ5aW5nIHRvIHdvcmsgc29tZSBjb25jZXB0cyBoZSBoZWFyZCBhYm91dCBpbnRvIGhpcyBnYW1lLiBIb3BlIHlvdSBsZWFybmVkIHNvbWV0aGluZyBhbmQgZ29vZCBsdWNrIG5leHQgdGltZSEKQW1vbmcgdGhlbSB3YXMgTWFvcmkgZGlyZWN0b3IgQmFycnkgQmFyY2xheSwgd2hvIGhhZCBhIDIwIHllYXIgd29ya2luZyByZWxhdGlvbnNoaXAgd2l0aCBKb2huIE8nU2hlYSAgIHRoZWlyIFRhbmdhdGEgV2hlbnVhIGRvY3VtZW50YXJ5IHNlcmllcyAoUmVpZCB3cml0ZXMpIHRyYW5zcG9ydGVkIHRoZSB2YXN0IG1ham9yaXR5IG9mIGl0cyBQYWtlaGEgYXVkaWVuY2UgdG8gYSBjb3VudHJ5IHRoZXkgbmV2ZXIga25ldyBleGlzdGVkLiBBbm90aGVyIGhpZ2hsaWdodCB3YXMgdGhlIGZlYXR1cmUgZmlsbSBOZ2F0aSAod2l0aCBXaSBLdWtpIEthYSBpbiBhIHBvd2VyZnVsIGNlbnRyYWwgcm9sZSkgd2hpY2ggd29uIE5ldyBaZWFsYW5kJ3MgYmVzdCBmaWxtIGF3YXJkIHdoZW4gaXQgd2FzIHJlbGVhc2VkIGluIDE5ODcuCkl0cyBseXJpY2FsIG1peCBvZiBMYXRpbiBmbGF2b3JlZCBqYXp6LCBsaWtlIGEgc2xvdyBkYW5jZSwgY29vbGVkIHRoaW5ncyBvZmYgYmVmb3JlIGEgbGl2ZWx5IGVuY29yZSAgIHRoZSBsYXN0IG1vdmVtZW50IG9mIFNhaW50IFNhbnMnICJDYXJuaXZhbCBvZiB0aGUgQW5pbWFscy4iLiAKSGFyZCBxdWVzdGlvbnMgcmVxdWlyZSBoYXJkIGludmVzdGlnYXRpb24gYW5kIHRoYXQgd2h5IHJlc3BvbnNpYmxlIHBlb3BsZSBkZXZlbG9wZWQgc3lzdGVtcyBsaWtlIHNjaWVuY2UsIGluIG9yZGVyIHRvIGxvb2sgYXQgaGFyZCBxdWVzdGlvbnMgd2l0aCBsZWdpdGltYWN5LCBpbnN0ZWFkIG9mIGp1c3Qgc2F5aW5nICJ3ZWxsIEkgZ3Vlc3MgSSBqdXN0IGZpbGwgaW4gdGhpcyBnYXAgb2Yga25vd2xlZGdlIHdpdGhvdXQgd2hhdGV2ZXIgZmlyc3QgY29tZXMgdG8gbXkgbWluZCIuCkkga25vdyBleGFjdGx5IHdoYXQgdGhpcyBmZWVscyBsaWtlLiBNeSBkYWQgaXMgYSBsYXd5ZXIgYW5kIG15IG1vbSBhbiBlbnRyZXByZW5ldXIgYW5kIEkgdXNlZCB0byBhdHRlbmQgdGhlIGJlc3QgZW5naW5lZXJpbmcgc2Nob29sIG9mIG15IGNvdW50cnkuIEFuZCBldmVudHVhbGx5IChhdCA0dGggeWVhcikgSSBkZWNpZGVkIHRvIGRyb3Agb3V0IGFuZCBiZWNvbWUgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyLgpEYW5zIGxlIGNhZHJlIGRlIGNldHRlIGx1dHRlIGFudGkgcHJvc3RpdHV0aW9uLCBsYSBtYWlyZSBkdSA5ZSwgRGVscGhpbmUgQnJrbGkgKFVNUCksIGEgZHBvcyBsb3JzIGRlIGxhIGRlcm5pcmUgc2FuY2UgZHUgY29uc2VpbCBkZSBQYXJpcyBtaSBtYXJzLCB1biB2b2V1IHByY29uaXNhbnQgbGEgbWlzZSBlbiBwbGFjZSBkJ3VuIGxhYmVsLCBlbiBjbGFpciB1bmUgZmFvbiBkZSB0cmllciBwYXJtaSBsZXMgc2Fsb25zIGRlIG1hc3NhZ2UgY2V1eCBxdWkgc2UgY29uY2VudHJlbnQgc3VyIHVuZSB2cmFpZSByZWxheGF0aW9uIGRlcyBjbGllbnRzIGV0IGNldXggcXVpIHByYXRpcXVlbnQgbGEgcHJvc3RpdHV0aW9uLiBDJ2VzdCBsIHVuZSBpbml0aWF0aXZlIGp1c3RpZmllIHF1YW50ICBsJ29iamVjdGlmIG1haXMgcXVpIHBvc2UgcGFzIG1hbCBkZSBwcm9ibG1lcyBkYW5zIHNhIG1pc2UgZW4gcGxhY2UuClNwb29reUFjdHVhbCB1Ckt1ZHp1bmMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkJ1dCB0aGUgY2hhb3MgdGhhdCBJIGJlbGlldmUgaXMgYWJvdXQgdG8gaGFwcGVuIGluIFdhc2hpbmd0b24gY291bGQgYmUgdGhlIGJpZ2dlc3QgdGhpbmcgdGhhdCBibGluZHNpZGVzIFdhbGwgU3RyZWV0LiBJJ3ZlIGFscmVhZHkgcHJlZGljdGVkIHdoYXQgSSB0aGluayB3aWxsIGhhcHBlbiwgYnV0IEknbGwgc2F5IGl0IGFnYWluIGJlY2F1c2UgaXQgc2VlbXMgdG8gYmUgcGFubmluZyBvdXQuCk9yIGV2ZW4gbWlzc3Bva2U/IFdoZW4gSSB3YXMgYSB0ZWNoLCB3ZSB3ZXJlIGRpc2NvdXJhZ2VkIGZyb20gY2FsbGluZyBtaWNyb2NoaXAgY29tcGFuaWVzIG91cnNlbHZlcyBzbyB0aGF0IHRoZSBjbGluaWMgZGlkbiBnZXQgY2F1Z2h0IHVwIGluIGFueSB3ZWlyZCBvd25lcnNoaXAgZmlnaHRzLi4gCldoYXQgd2FzIGludGVyZXN0aW5nIHNvIGZhciB3ZSBoYXZlbiBkb25lIGFsbCB0aGUgZGF0YSBhbmFseXNpcyBpcyB0aGF0IHRoZSBudW1iZXIgb2Ygd29tZW4gd2hvIGVudGVyIHRoZSBwcm9mZXNzaW9uIGlzIHZlcnkgbG93LiAKSGF2ZSBhIG5pY2UgZ2FtZTspIChGdWxsIEFuc3dlcikKUG8gS2UgTm8gaXMgYSBnYW1lIGluIHdoaWNoIHBsYXllcnMgcGxheSBmb3IgbW9uZXkuIApBcyB5b3UgY2FuIHNlZSwgc29tZSBhcmUgbW9zc3ksIHNvbWUgYXJlIGRhcmtlciwgdGhpbm5lciwgZXRjLiBTbyBJIHZhcmlhdGUgZnJvbSB1c2luZyBmcm9tIG15IHBpbGUgdGhhdCBJIGJyb2tlIHVwLCBhbmQgbG9va2luZyBpbiBteSBwbGFzdGljIGJhZyBJIGhhZCBwdXQgdGhlbSBpbi4uIApJIHRoaW5rIHRoZSBHaWFudHMgd291bGQgaGF2ZSBiZWVuIGluIGNvbnRlbnRpb24gaWYgdGhleSBqdXN0IGhhZCBhIHNvbGlkIHBvd2VyIGhpdHRpbmcgdGhyZWF0IGJhdHRpbmcgYWZ0ZXIgQm9uZHMuLiAKVGhlIGNsb3NlciB3ZSBjb21lIHRvIHRoZSBwcmVzZW50IHRpbWUsIHRoZSBlYXNpZXIgaXQgd291bGQgaGF2ZSBiZWVuIGZvciBhIGJvb2sgYW5kIGEgcGVyc29uIHdobyBtaWdodCBoYXZlIGJlZW4gdHJhdmVsaW5nIHdpdGggdGhlIGJvb2ssIHRvIHRyYXZlbC4gSXQgaW5jcmVhc2VzIHRoZSBjaGFuY2UgZm9yIHBlb3BsZSB0byB0cmF2ZWwgd2l0aCBhIGJvb2ssIGFuZCB3aXRoIHRoZSBpbnZlbnRpb24gb2YgdGhlIG1pZGRsZSBjbGFzcywgaXQgd291bGQgZW5jb21wYXNzIG1vcmUgcGVvcGxlIHRoZSBjaGFuY2UgdG8gY29tZSBpbiBjb250YWN0IHdpdGggYm9va3MgYW5kIHRyYXZlbCB3aXRoIG9yIHNlbmQgdGhlbS4gQW5kIG9mIGNvdXJzZSBpdCBpcyB0aGUgbW9kZSBvZiB0cmFuc3BvcnRhdGlvbiBhbmQgdGhlIGNyZWF0aW9uIG9mIHBhcmNlbCBwb3N0IHRoYXQgd291bGQgYWRkIG9yZGVycyBvZiBtYWduaXR1ZGVzIG9mIG1pbGVzIHRvIGNhdGVnb3J5IGZvciBleGFtcGxlIHlvdSBjb3VsZCByZWNlaXZlIGEgYm9vayBmcm9tIExvbmRvbiBhbmQgc2VuZCBpdCBvdXQgdG8gVG9reW8gd2hlcmUgaXQgbWlnaHQgYmUgc2VudCB0byBXZWxsaW5ndG9uIGFsbCBpbiB0d28gd2Vla3MuIApIZSBjYWxscyAkNDAuIApCdXQgd2hhdCBpZiBDaHJpc3RpYW4gbWlzc2lvbnMgYW5kIFVTIEFudGkgQUlEUyBmdW5kaW5nIGhhdmUgaGVscGVkIGZvbWVudCB0aGUgaWRlYSB0aGF0IGhvbW9zZXh1YWxpdHkgaXMgYSAiZm9yZWlnbiBkaXNlYXNlLCIgYSBmb3JtIG9mIEltcGVyaWFsaXNtIGJyb3VnaHQgdG8gdGhlIEFmcmljYW4gY29udGluZW50IGJ5IHRoZSBkZWNhZGVudCBOb3J0aCBhbmQgc28gYSBzb3J0IG9mIGZvcmVpZ24gaW52YXNpb24/CldoZW4geW91IHJlYWQgdGhlIGRlc2NyaXB0aW9uIG9mIGEgYm9vaywgeW91IGFsc28gY2FuIHNlZSAid2hhdCBvdGhlciBwZW9wbGUgd2hvIG9yZGVyZWQgdGhpcyBib29rIGFsc28gcHVyY2hhc2VkLiIgVGhhdCBpcywgeW91IGNhbiBzZWUgdGhlIHJlbGF0ZWQgYm9va3MgdGhhdCBwZW9wbGUgYXJlIGFjdHVhbGx5IGJ1eWluZy4gCkFsbCBvZiB0aGlzIGVuZGVkIHdpdGggIlRoZSBkcmFnb24gZmlnaHQiLCBhbGwgdGVhbXMgd291bGQgY29tcGV0ZSBhZ2FpbnN0IGdyb3VwcyBvZiBtb25zdGVycyBmb3IgdGhlIGNoYW5jZSB0byBmaWdodCB0aGUgZHJhZ29uLCBhbmQgdGhlIHRlYW0gdGhhdCBmb3VnaHQgYW5kIGJlYXQgdGhlIGRyYWdvbiAob3IgZ290IHRoZSBtb3N0IGRhbWFnZSBiZWZvcmUgZ2V0dGluZyB3aXBlZCkgd2VyZSBjcm93bmVkIHRoZSB2aWN0b3JzIG9mIHRoZSB3ZWVrZW5kLgpBbmFsIHNleCB0YWtlcyBhIGxvdCBvZiB0cnVzdCBhbmQgYW4gZXh0cmVtZSBhbW91bnQgb2YgY29udmVyc2F0aW9uLiAKIlRoZSBrZXkgaGlnaGxpZ2h0IGZvciB1cywgdGhvdWdoLCB3YXMgZm9vZCByZXZlbnVlLCIgaGUgc2FpZC4gIkl0J3MgY2xlYXIgICBmb29kIGlzIHRoZSBmdXR1cmUuIENhdGVyaW5nIHJldmVudWUgaXMgdXAgMTUgcGVyIGNlbnQgaW4gdGhpcyBhcmVhLiBPbmUgdGhpbmcgd2UgaGF2ZSByZWFsbHkgd29ya2VkIG9uIGlzIGltcHJvdmluZyBvdXIgZm9vZCBvZmZlcmluZ3MgYW5kIHdlJ3ZlIGludHJvZHVjZWQgYSB3aG9sZSBidW5jaCBvZiBuZXcgbWVudSBpdGVtcy4gClRoZSBwbGF5ZXIgc2hvb3RpbmcgdGhlIGRpY2UgaXMgdGhlIGZpcnN0IHRvIGJldCBhbmQgdGhlIG90aGVyIHBsYXllcnMgbXVzdCBhdCBsZWFzdCBtYXRjaCBoaXMgYmV0IGJlZm9yZSB0aGUgZ2FtZSBjYW4gY29udGludWUuIApJdCB3YXMgcmVtaW5kZWQgb2Ygd2h5SSBsb3ZlZCBiZWluZyBpbiBhY2FkZW1pY3MuIApUaGUgaWRlYSBiZWhpbmQgaXQgd2FzIHRoYXQgaXQgd2FzIHNvbWV0aGluZyB3ZSBmaWd1cmVkIGNvdWxkIHJhaXNlIHRoZSBkaXNjb3Vyc2UgYSBiaXQuIFRoaXMgcnVsZSBpc24gc2F5aW5nIHlvdSBjYW4gdXNlIGEgcGVyc29uIHBvc3QgaGlzdG9yeSB0byBpbmZvcm0gaWYgeW91IHRoaW5rIHRoZXkgc2luY2VyZSBvciBhIGdvb2QgcGVyc29uLCBvciBldmVuIGlmIHlvdSBzaG91bGQgdGFrZSB0aGVtIHNlcmlvdXNseSBvciBkb3dudm90ZSBvbiBzaWdodC4uIApXZSB0cmllZCB0byBnZXQgcHJlZ25hbnQgZm9yIHNvIGxvbmcsIHRoYXQgSSBhbSBub3QgdXNlZCB0byBzbyBtdWNoIGdvb2QgbmV3cy4gCiJJdCdzIGhvcnJpYmxlLiBJIGhvcGUgdGhhdCBubyBvbmUgZXZlciBoYXMgdG8gZW5kdXJlIGl0LiAKVGhlIHByb2JsZW0gd2l0aCB0aGUgZmVtYWxlIGFsbGlhbmNlLCBzaGUgc2V0cyB1cC4gKEtuaWdodCBQdWxsaWFtKSBhbmQgb3RoZXJzIHNhaWQgYSBnaXJsIGhhcyB0byB3aW4gdGhlIGdhbWUuIEEgZ3V5IHdpdGggYSBwZW5pcyBjYW4gd2luLiAKSURLIHJlYWxseSBrbm93IEJlYXIgYnV0IEkga25vdyBEYSBpcyBvbmUgb2YgdGhlIHdlYWtlc3QgZ2lybHMgaW4gdGhlIGhvdXNlIGFuZCBoYXMgYSBpc3N1ZSB3aXRoIEJlYXIgc28gdGhleSBzaG91bGQgYmVlbiBlYXNpZXIgdG8gYmVhdCB0aGFuIGJvdGggV2VzK0RlZS9BbWFuZGErSm9zaCBhbmQgZmVsdCBsaWtlIFphY2ggY2hvaWNlIG9mIHRoZW0gd291bGQgaGF2ZSBiZWVuIHRoZSBiZXN0Ckl0IHVsdGltYXRlbHkgaGlnaGx5IHZhcmlhYmxlIGJhc2VkIG9uIGhvdyBjb21taXR0ZWQgeW91IGFyZSwgaG93IG11Y2ggdGltZSB5b3UgaGF2ZSB0byBkZWRpY2F0ZSwgaG93IGluanVyeSBwcm9uZSB5b3UgYXJlIGFuZCBpZiB5b3UgaGF2ZSBlbm91Z2ggZ2VuZXRpYyBhZHZhbnRhZ2VzLiAKUHJvYmFibHkgdGhlIGhhcmRlc3QgSSBldmVyIGxhdWdoZWQgd2hlbiBJIGhlYXJkIHRoZSBjaGljayBzYXkgIlVtLiAKQXNpYW4gc29jaWV0aWVzIGxvdmUgdW5pZm9ybWl0eSwgYW5kIHRob3NlIE5hemlzIHdlcmUgdW5kZW5pYWJseSBzbmFwcHkgZHJlc3NlcnMuIApMaXN0aW5ncyBmb3IgV2VzdCBQb2ludCB3aXRoIHRoZSBaaXAgQ29kZSA5NTI1NSBpbiBDYWxpZm9ybmlhIC4gUHJvdmlkZXMgcGVyc29uYWwgYW5kIGJ1c2luZXNzIGJhbmtpbmcgc2VydmljZXMgaW4gdGhlIEtleSBXZXN0IEZsb3JpZGEgYXJlYS4gWiBZIE1hbnVmYWN0dXJlciBvZiBwb2ludCB0byBwb2ludCwgcG9pbnQgdG8gbXVsdGlwb2ludCwgYnJvYWRiYW5kIGFuZCA2MEdoeiB3aXJlbGVzcyBlcXVpcG1lbnQuIApIZSBoYXMgdG8gaGlyZSB0aGUgInJpZ2h0IHBlb3BsZSIgd2l0aG91dCBtdWNoIGV4cGVydGlzZSB0aGF0IHdvdWxkIGhlbHAgaGltIHJlY29nbml6ZSB3aG8gaXMgdGhlIGJlc3QuIApUaGUgZGVtcyBhcmUgc21hcnQuIApUaGVyZSBhcmUgYW4gYXZlcmFnZSBvZiA0LDAwMCBhcnJlc3RzIG1hZGUgaW4gQ2xhcmsgY291bnR5IGVhY2ggeWVhciBmb3IgcHJvc3RpdHV0aW9uLCBidXQgYSBsYXJnZSBudW1iZXIgb2YgdGhvc2UgYXJlIHN0cmVldCB3b3JrZXJzLCBub3QgaW5kb29yIHdvcmtlcnMuIEl0J3MgcmVhc29uYWJsZSB0byBhc3N1bWUgdGhhdCBhIHN1YnN0YW50aWFsIG51bWJlciBvZiBMYXMgVmVnYXMgZXNjb3J0cyBlbmdhZ2UgaW4gaWxsZWdhbCBzZXh1YWwgYWN0aXZpdHkgd2l0aCBjbGllbnRzIGF0IGxlYXN0IHNvbWUgb2YgdGhlIHRpbWUuIApJdCdzIGFsc28gZm9yIGNsZWFyLCBlZ2cgd2hpdGUsIHNsaW15IHNlY3JldGlvbnMuIApQcmljZXMgYXJlIHRoZSBhdmVyYWdlIG5pZ2h0bHkgcHJpY2UgcHJvdmlkZWQgYnkgb3VyIHBhcnRuZXJzIGFuZCBtYXkgbm90IGluY2x1ZGUgYWxsIHRheGVzIGFuZCBmZWVzLiBUYXhlcyBhbmQgZmVlcyB0aGF0IGFyZSBzaG93biBhcmUgZXN0aW1hdGVzIG9ubHkuIFRheGVzIGFuZCBmZWVzIHRoYXQgYXJlIHNob3duIGFyZSBlc3RpbWF0ZXMgb25seS4gClBvdXIgYXV0YW50LCBjJ2VzdCB1biBwYXJ0aSBxdWkgcHNlcmEgc3JlbWVudCBkYW5zIGxhIGJhdGFpbGxlIGR1IDE4ZS4gCkl0IHdhc24gdW50aWwgYSBraWQgZnJvbSBteSBzY2hvb2wgd2hvIHdvdWxkIGJlIHRoZSBlcXVpdmFsZW50IG9mIHRoZSBoaWdoc2Nob29sIGtpbmcgcmVudGVkIHRoZSBzZXJpZXMsIGNhbWUgYmFjayB0byBteSBzdG9yZSBhbmQgdGFsa2VkIG15IGVhciBvZmYgYWJvdXQgdGhlIHNlcmllcyBmb3IgbGlrZSBhbG1vc3QgYW4gaG91ci4gQWZ0ZXJ3YXJkcywgdGhhdCBuaWdodCwgSSBjaGVja291dCBhbGwgdGhlIERWRHMgYW5kIHdlbnQgdG8gbXkgZnJpZW5kIGhvdXNlIHRvIHdhdGNoIHRoZW0uIApBY25lcyliYWN0ZXJpdW0gZm9ybXMgaW4gcG9yZXMgdGhhdCBhcmUgY2xvZ2dlZCB3aXRoIG9pbCBhbmQgZGVhZCBza2luIGNlbGxzLiAKQTogVG8gc3Vic2NyaWJlLCBsb29rIGZvciB0aGUgb3JhbmdlIFhNTCBncmFwaGljIG9uIHRoaXMgcGFnZSBhbmQgZWxzZXdoZXJlIG9uIHRoZSBzaXRlLiBNb3VzZSBvdmVyIHRoZSBpbWFnZSwgcmlnaHQgY2xpY2ssIGFuZCBjb3B5IHRoZSBVUkwuIChDaG9vc2UgIkNvcHkgU2hvcnRjdXQiIGZvciBJbnRlcm5ldCBFeHBsb3JlciwgIkNvcHkgTGluayBMb2NhdGlvbiIgZm9yIE5ldHNjYXBlIGFuZCBNb3ppbGxhLCBvciAiQ29weSBMaW5rIEFkZHJlc3MiIGZvciBPcGVyYSkuIEluIHlvdXIgbmV3cyByZWFkZXIsIHNlbGVjdCB0aGUgb3B0aW9uIHRoYXQgYWRkcyBhIG5ldyBmZWVkIG9yIGNoYW5uZWwsIHRoZW4gcGFzdGUgaW4gdGhlIFVSTCBhbmQgY2xpY2sgT0suClRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byBpcyB0aGF0IHdpdGggdGhpcyBzb2Z0d2FyZSwgdGhlcmUgaXMgbm8gbW9uZXkgYXQgc3Rha2UuIApUaGUgbGF3IGRvZXMgbm90IG1hdHRlciB0byB0aGVtLiAKT25saW5lIHBva2VyIHRvdXJuYW1lbnQgcG9wdWxhcml0eSBjdXRzIGFjcm9zcyB0aGUgaHVtYW5pdGllcyBhbmQgbmF0aW9uYWwgYm9yZGVycyBhIHJlYXNvbiB3aHkgbG90cyBvZiBwZW9wbGUgcGxheSBpdC4gSG93ZXZlciwgbWFueSBwZW9wbGUgZmluZCBpdCBkaWZmaWN1bHQgdG8gbWFrZSBhIHRyYW5zaXRpb24gZnJvbSBwbGF5aW5nIGxvY2FsIGNhcmQgZ2FtZXMgZm9yIHBsYXlpbmcgb25saW5lIHBva2VyIGF0IENsdWJXUFQuIFNvbWV0aW1lcyB0aGlzIGlzIGJlY2F1c2Ugb2YgdGhlIGF2YWlsYWJpbGl0eSBvZiB0aGUgbWFueSBkaWZmZXJlbnQgdG9vbHMgYW5kIHRlY2huaXF1ZXMgdGhhdCBhcmUgdXNlZCBpbiBwbGF5aW5nIHRoZSBnYW1lLiAKRG9uIHRoaW5rIGFueXRoaW5nIG9mZiB0aGUgdGFibGUgYXQgdGhpcyBwb2ludC4gCkkgaGF2ZW4gZnVsbHkgc3dpdGNoZWQgdG8gaXQgYnV0IEkgZGlkIHNpZGVsb2FkIHRoZSBHb29nbGUgUGxheSBTdG9yZSAoR29vZ2xlIFBsYXkgU2VydmljZXMgaXMgYWxyZWFkeSBpbnN0YWxsZWQgb24gdGhlIENoaW5hIFJPTSBhbmQgdGhlcmUgaXNuIGEgR2xvYmFsIFJPTSB5ZXQpLkkgaW5zdGFsbGVkIGEgY291cGxlIG9mIGFwcHMgbGlrZSBCZXR0ZXJCYXR0ZXJ5U3RhdHMsIFN3aWZ0S2V5LCBBSURBNjQsIGFuZCBhIHNjcmVlbiB0ZXN0aW5nIGFwcCB0byBsb29rIGZvciBkZWFkIHBpeGVscy5XaXRoIGFpcnBsYW5lIG1vZGUgb24gYW5kIG9ubHkgYW4gYWN0aXZlIFdpRmkgY29ubmVjdGlvbiBlbmFibGVkLCB0aGUgcGhvbmUgd291bGQgbG9zZSA0MCB0byA2MCBwZXJjZW50IGJhdHRlcnkgaW4gYSAyNCBob3VyIHBlcmlvZC5EaWQgdGhlIHR5cGljYWwgdHJvdWJsZXNob290aW5nIHN0ZXBzLiAKSSBjYW4gYWdyZWUgc29tZSBvZiBoZXIgbGFuZ3VhZ2UgaGFzIGJlZW4gc2hpdHR5IGFuZCBzaGUgc2hvdWxkIGFwb2xvZ2l6ZSBmb3IgaGVyIGNob2ljZSBvZiB3b3JkcywgYXMgc2hlIGhhcyBkb25lLiBJdCBzZWVtcyBhIGxpdHRsZSB3aWxkIHRoYXQgYSBmcmVzaG1lbiBSZXAuIGlzIGdldHRpbmcgdGhpcyBtdWNoIGF0dGVudGlvbiBhbmQgY29uZGVtbmF0aW9uIHdoZW4gdGhlIFByZXNpZGVudCB3YXMgc28gbXVjaCBtb3JlIGRpcmVjdGx5IHVzaW5nIGFudGkgU2VtaXRpYyBkb2d3aGlzdGxlcyB3aGVuIHJlZmVycmluZyBzcGVjaWZpY2FsbHkgdG8gSmV3aXNoIGluZGl2aWR1YWxzLCBhbmQgaGFzIG5ldmVyIGFwb2xvZ2l6ZWQuCkVsZWN0aXZlIGNsYXNzZXMgd2lsbCBiZSB0YXVnaHQgYXQgdGhlIHNjaG9vbCdzIGJ1aWxkaW5nLCBhdCA2MjU1IExvbmdib3cgRHJpdmUsIHRocm91Z2ggT2N0LiA1LCBidXQgdGhlIGZpbmFsIGRheSBvZiByZWd1bGFyIGNsYXNzZXMgd2FzIFRodXJzZGF5LiBJdHMgbGFzdCBncmFkdWF0aW9uLCBkdXJpbmcgd2hpY2ggNTEgc3R1ZGVudHMgd2lsbCB3YWxrLCB3aWxsIGJlIFN1bmRheSwgYWNjb3JkaW5nIHRvIHNjaG9vbCBwcmVzaWRlbnQgRGlyayBNY0N1aXN0aW9uLgpJIGFtIG5vdCBnb29kIHlldCB3aXRoIGFybXMgYnV0IEkgYW0gZ29pbmcgdG8gdHJ5IGxlZ3Mgd2l0aCBGb3h5ISBJIHdpbGwgb2YgY291cnNlIHBvc3QgYSBwaWN0dXJlIG9mIEZveHkgd2hlbiBJIGdldCBoaW0gZG9uZS4gCklmIHlvdSB0aGluayBhYm91dCB0aGUgdG90YWwgbnVtYmVyIG9mIHBvc3RzIG1hZGUgaW4gYSB5ZWFyLCB0aGF0IGlzIGEgdmVyeSB2ZXJ5IHNtYWxsIHBlcmNlbnRhZ2UgaW5kZWVkIGFuZCBpdCB0dXJucyBvdXQgdGhhdCB0aGUgbWFqb3JpdHkgb2YgdGhvc2Ugd2VyZSBpbiBhbnkgZXZlbnQgZ2VuZXJhdGVkIGJ5IGEgc21hbGwgcG9vbCBvZiBSZXNlYXJjaGVycy4gCkVkZ2FyIHNhaWQgaGlzIGNvbmdyZWdhdGlvbiBhbmQgdGhvc2UgdGhleSBzZXJ2ZSBpbiBTb3V0aCBDb2x1bWJ1cyBhcmUgd29ycmllZCB0aGF0IGEgc2h1dGRvd24gbGFzdGluZyBmb3IgYW5vdGhlciB0d28gd2Vla3MgY291bGQgaGF2ZSBsYXJnZXIgcmFtaWZpY2F0aW9ucyBjb21lIEZlYnJ1YXJ5LCBvciBsYXRlciBpbiBNYXJjaC4gRm9yIGV4YW1wbGUsIEZyYW5rbGluIENvdW50eSBTTkFQIHJlY2lwaWVudHMgKGFsc28ga25vd24gYXMgZm9vZCBzdGFtcHMpIGdvdCB0aGVpciBuZXh0IGZvdXIgd2Vla3Mgb2YgYmVuZWZpdHMgV2VkbmVzZGF5LCBidXQgd2lsbCBuZWVkIHRvIG1ha2UgdGhlbSBzdHJldGNoIGZvciBhbGwgb2YgRmVicnVhcnkgdW5sZXNzIGEgZHJhc3RpYyBtZWFzdXJlIGNvbWJpbmVkIHdpdGggYSByZSBvcGVuZWQgZ292ZXJubWVudCBjYW4gY2hhbmdlIGl0LgpUaGUgd29yc3QgcGFydCBpcyB5b3UgY2FuJ3QgcmVhbGx5IHJlc3QgcmliIGluanVyaWVzIHNpbmNlIGV2ZXJ5IGJyZWF0aCB5b3UgYWdncmF2YXRlIHRoZW0gdG8gc29tZSBleHRlbnQuIApZb3UgdGhlIG9uZSBjb3VudGVyaW5nIG15IHZpZXdwb2ludC4gU2hvdyBtZSBob3cgY29tcGV0ZW50IGNvdW5jaWxsb3JzIGFyZS4KVGhpcyBpcywgaW4gZmFjdCwgcHJlY2lzZWx5IHdoYXQgZW5nZW5kZXJlZCB0aGUgUXVsdCBpbiB0aGUgZmlyc3QgcGxhY2UuIEFzIFRydW1wIGNvbnRpbnVlcyB0byBmbGFpbCwgdGhlIGJlbGllZiB0aGF0IGhlIGlzIHBsYXlpbmcgc29tZSBzb3J0IG9mIGFkdmFuY2VkIGNoZXNzIGdhbWUsIGFuZCB0aGF0IGhlIHdpbGwgZXZlbnR1YWxseSBiZSB2aW5kaWNhdGVkLCBiZWNvbWVzIG1vcmUgYW5kIG1vcmUgYXR0cmFjdGl2ZS4uIApJIHNvcnJ5IGZvciB3aGF0IHlvdSBleHBlcmllbmNlZCBieSB5b3VyIGZhbWlseSBXZXN0ZXJuIHRoZW9sb2dpY2FsIGVycm9ycy4gSSB3aWxsIG5vdGUgdGhhdCBtb3N0IFdlc3Rlcm4gY29tcGxhaW50cyBhYm91dCBDaHJpc3RpYW5pdHkgYXJlIGVudGlyZWx5IGFic2VudCBpbiBPcnRob2RveHkgICBmb3IgZXhhbXBsZSB0aGVyZSB3ZXJlIG5ldmVyIGFueSBjcnVzYWRlcyBvciB3aXRjaCBidXJuaW5ncyBvciBtZXJpdHMgc3lzdGVtIG9yIHBhcmFub2lhIGFuZCBzbyBvbi4gSXQgdGhlIGFuY2llbnQgZmFpdGggcm9vdGVkIGluIG15c3RpY2lzbSBhbmQgbm9ldGljIHByYXllciwgd2l0aCB0aGUgZ29hbCBvZiB0aGVvc2lzLiAKSSBzZWVuIHNvbWUgaHVnZSBmaXNoIGF0IHNvbWUgd2VpcmQgdGltZXMgd2hlcmUgSSBkb3VidCBpdCBhIGJ1bmNoIG9mIEFtZXJpY2FuIGZpc2guIApJZiB0d28gb3IgbW9yZSBwbGF5ZXJzIG1ha2UgdGhlIHNhbWUgaGFuZCAob3IgaGFuZHMgdGhhdCByYW5rIHRoZSBzYW1lKSB0aGVuIHRoZSBwb3QgaXMgc3BsaXQuIEluIHRoaXMgY2FzZSwgYXNzdW1pbmcgbm8gYXZhaWxhYmxlIGZsdXNoZXMsIGVhY2ggcGxheWVyIG1ha2VzIGFuIEFjZSBoaWdoIHN0cmFpZ2h0LiAKSGVyIGZhdm91cml0ZSBjb2xvdXIgaXMgbGF2ZW5kZXIuIApIb3dldmVyIGZ1cnRoZXIgcmVzZWFyY2ggaXMgbmVlZGVkIHRvIGRlZmluZSB0aGUgYXBwcm9wcmlhdGUgdGhlcmFwZXV0aWMgZG9zZXMuIApUaGVyZSB3YXMgb25lIHBsYXllciB3aG8gcmVhbGx5IHN0b29kIG91dCB0byBtZS4gSXQgd2FzIGEgeW91bmcgZ3V5IGFuZCBoZSBoYXJkbHkgcGxheWVkIGEgaGFuZC4gSGUgc2F0IHRoZXJlIGFuZCBhcyB0aGlzIGFydGljbGUgd2FzIGNyZWF0ZWQgaW4gbXkgbWluZCB0aGF0IG5pZ2h0LCBzbyB3YXMgYW4gdWx0aW1hdGUgc3RyYXRlZ3kgYWdhaW5zdCByb2NrIHBsYXllcnMuIApOb3Qgb25seSBpcyBvbmxpbmUgcG9rZXIgZ2VuZXJhdGluZyBodWdlIGFtb3VudHMgb2YgcmV2ZW51ZSBhbmQgY3JlYXRpbmcgbmV3IG1pbGxpb25haXJlcywgYW1vbmcgcGxheWVycywgc2l0ZSBvd25lcnMsIGFuZCBhZmZpbGlhdGVzIG9mIHBva2VyIHNpdGVzLCBidXQsIGR1ZSB0byBpdHMgcGVydmFzaXZlIGluZmx1ZW5jZSwgdGhlIGFwcGVhbCBvZiBwb2tlciBpbiBnZW5lcmFsIGlzIGdyb3dpbmcuIFRoZSBwdWJsaWMgaXMgbm90IG9ubHkgZ2FpbmluZyBrbm93bGVkZ2UgYWJvdXQgcG9rZXIsIGJ1dCBpcyBzaG93aW5nIGFuIGludGVyZXN0IGluIGFsbCB0aGluZ3MgcG9rZXIuIEZyb20gdGhlIHRhYmxlcyB0byB0aGUgY2hpcHMgYXQgdGhlIHRhYmxlLCB0byB0aGUgcGVvcGxlIHdobyBwbGF5IGF0IHRoZSB0YWJsZXMsIHBva2VyIGlzIGh1Z2UuLiAKSWYgeW91IGRvbid0LCB5b3UncmVzdWRkZW5seSBnZXR0aW5nIGhhcmRseSBhbnkgaGl0cyBhdCBhbGwganVzdCB3aXRoaW4gYSAyNCBociBwZXJpb2Qsd2hlcmVhcyB0d28gZGF5cyBiZWZvcmUgeW91IHdlcmUgZ2V0dGluZyBhIGdvb2QgbnVtYmVyIG9mIGhpdHMgYXR0aGUgbG93ZXIgYmlkcy4gSW4gdGhlIGJlZ2lubmluZy4gQnV0IG9uY2UgeW91c3RhcnQgZ2V0dGluZyBhIGZhaXIgbnVtYmVyIG9mIGhpdHMsIGV4cGVjdCB0aGVtIHRvIHB1dCB0aGUgc3F1ZWV6ZW9uIHlvdS4gCkkgZG9uJ3Qgc2VlIHN0ZWVsIEFQUk9zIGluIG1vc3QgQURzLCBhcyB0aGV5J3JlIHBvcHVsYXIgKGFib3V0IGFzIHJhcmVseSBhcyBJIHNwb3Qgc3BvcnQgUm9sZXhlcykuIEhvd2V2ZXIsIEkgZG8ga25vdyBBRHMgd2hvIGhpZGUgc3RvY2sgdG8gcmVzZXJ2ZSB0aGVtIGZvciB0aGVpciAiYmVzdCIgY3VzdG9tZXJzIChyZWN1cnJpbmcgb3IgbG9uZ3RpbWUgY2xpZW50cyBhbmQvb3Igd2hhbGVzKSBvciBqdXN0IHBlb3BsZSB0aGV5IGhhdmUgZ29vZCByZWxhdGlvbnNoaXBzIHdpdGguIEFuIEFEIHNvbWV0aW1lcyAiaGlkZXMiIG5ldyBzdG9jayBhcnJpdmFscyBmcm9tIHRoZSBzaG93IHdpbmRvdyBmb3IgMSAyIGRheXMgdG8gZ2l2ZSBtZSBmaXJzdCBkaWJzLiAKVGhlIGRlYXJlc3QgaG9wZSBvZiB0aGUgQW1lcmljYW4gcmlnaHQgZm9yIGZpZnR5IHllYXJzIHdhcyBlc3NlbnRpYWxseSByZWFsaXplZCBiZWNhdXNlIGluIHRoZSBlbmQgY29hbCBpcyBhdCB0aGUgY2VudGVyIG9mIEFtZXJpY2EgZWNvbm9teS4oT2JhbWEpIGZvcm1lZCBhIGxlYWd1ZSBvZiBzdXBlciBwb2xsdXRlcnMsIGFuZCB3b3VsZCBiZSBzdXBlciBwb2xsdXRlcnMuIApTaGUgc2hvd3MgdGhlIHNjYXJzIHRvIHByb3ZlIGl0LndhcyBiZWF0IHVwIGV2ZXJ5IGRheSBoZSB3YXMgYXJvdW5kLCBiZWNhdXNlIGhlIGJsYW1lZCBtZSBtb3N0IGZvciBvdXIgdHJvdWJsZXMuIApJdCdzIGp1c3QgYSBzb2xpZCBhY3R1YXJpYWwgdmFyaWFibGUgYnV0IGl0IGRvZXNuJ3Qgc3RhbmQgYWxvbmUgYW5kIG5vIGFjdHVhcmlhbCB0YWJsZSBpbiBleGlzdGVuY2UgcmFpc2VzIHJhdGVzIGR1ZSB0byBhIHNpbmdsZSBhY2NpZGVudC4uIApBbm90aGVyIHR3aXN0IG9uIGFmZmlsaWF0ZSBwcm9ncmFtcyBpcyB0aGUgQ1BDIExpbmsgKENQQz1Db3N0IFBlciBDbGljayksIGFsc28ga25vd24gYXMgYWZmaWxpYXRlIGxpbmtzIG9yIGNsaWNrIHRocnUgbGlua3MuIApXaGVuIHlvdSBzYXkgImEgcGFpciBvZiBnbGFzc2VzIiwgeW91IGFyZSByZWZlcnJpbmcgdG8gdGhlICJwYWlyIG9mIGxlbnNlcyIsIG5vdCB0aGUgZnJhbWUuIFRoZSBmcmFtZSBob2xkaW5nIHRoZSB0d28gbGVuc2VzIG1ha2VzIHVzIHRoaW5rIHRoYXQgaXQgaXMgb25lIG9iamVjdCwgd2hlbiB0aGUgd29yZCAiZ2xhc3NlcyIgcmVmZXJzIG9ubHkgdG8gdGhlIGxlbnNlcywgbm90IHRoZSBmcmFtZS4gVGhhdCBpcyB3aHkgaXQgaXMgY2FsbGVkICJhIHBhaXIgb2YgZ2xhc3NlcyIuIAoyMDE5IHMnYW5ub25jZSB1bmUgYW5uZSBkZSB0cmF2YXV4IGV0IGRlIGNoYW5nZW1lbnRzIHBvdXIgbm9zIHF1YXJ0aWVycy4gRCdhYm9yZCBhdmVjIGxhICBxdWkgdmEgcHJlbmRyZSBmb3JtZSwgZXQgcXVpIGlsbHVtaW5lcmEgZHNvcm1haXMgbm9zIHNvaXJlcyBncmNlICB1bmUgbWlzZSBlbiB2YWxldXIgZHUgdmlhZHVjIHBhciBsYSBsdW1pcmUuIFBsdXNpZXVycyBhdXRyZXMgY2hhbnRpZXJzIHZvbnQgaW1wYWN0ZXIgbm9zIHF1YXJ0aWVycy4gCkFsc28gSSBzZWUgdGhhdCB5b3Ugc2FpZCAiSSBoYXZlIHdhaXRlZCBmb3IgcHJlbWl1bSBoYW5kcyAgIGJvdGggY2FyZHMgb3ZlciAxMC4gTm8gZGljZSIuIE9uZSBpbXBvcnRhbnQgdGhpbmcgdG8gdGhpbmsgYWJvdXQgaXMgdGhlIHZhbHVlIG9mIGhhbmRzIGxpa2UgMzMgY29tcGFyZWQgdG8gUTEwby4KIk5ldmVyIHdvcmsgZm9yIGEgcGxhY2UgY2FsbGVkIFJlbmVnZSwiIEkgbXVybXVyZWQgc2FkbHkgdG8gbXlzZWxmIGFzIEkgd2Fsa2VkIHRocm91Z2ggYSByb29tIGZpbGxlZCB3aXRoIHNldmVyYWwgb2ZmaWNlcyB0b3dhcmRzIHRoZSBtYWluIHNlY3Rpb24uICJJdCdzIGJvdW5kIHRvIGJlIG9ubHkgYXMgZ29vZCBhcyBpdHMgbmFtZS4iCkNpdHkgc3RhZmYgcmVjb21tZW5kIG1hZ25ldGljIGxldml0YXRpb24gdHJhaW4gZm9yIFRvcm9udG8gWm9vCkkgd2FudCB0byBpbnRyb2R1Y2UgcGVvcGxlIHRvIG5vdCBsYWJlbGxpbmcsIGdlbmVyYWxpemluZywgcG9sYXJpemluZyB0aGluZ3MgYmVjYXVzZSBhdHRhY2hpbmcgZW1vdGlvbnMgdG8gdGhpbmdzIG1ha2UgeW91IG1vcmUgYmlhc2VkLCBidXQgSSBzd2VhciBJIGp1c3QgbG9vayBsaWtlIGFuIGlkaW90LiBCZWNhdXNlIGVtb3Rpb24gb2J2aW91c2x5IHRoaXMgY2hhbmdlcyB0aGUgcHJvZHVjdCBvZiB5b3VyIHRoaW5raW5nLiAKTm90ZXMgdGhhdCBnYXJkZW5zIGFyZSBtdWNoIG1vcmUgdGhhbiBlc3RoZXRpY2FsbHkgcGxlYXNpbmcgYW5kIGZlZWQgYWxsIHRoZSBzZW5zZXMud29yayB3aXRoIHRoZSBzZW5zZSBvZiBoZWFyaW5nLCBzaGUgc2F5cy4gCkRpZ2dhZGlnZ2FkaWdnYSAgNSBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkl0cyBkZXNpZ24gZG9lcyBub3QgZGlzdHJhY3QgZnJvbSBwb2tlciBwbGF5aW5nIGxpa2Ugc29tZSBvdGhlciB0YWJsZWNsb3RocyB0aGF0IGFyZSB0b28gYnJpZ2h0IGFuZCBsb3VkIG1ha2luZyBpdCBkaWZmaWN1bHQgZm9yIHBva2VyIHBsYXllcnMgdG8gc2VlIHRoZSBUZXhhcyBIb2xkZW0gZ2FtZS4gClRyb29wZXIgUHJlc2dyYXZlcyB0b2xkIGp1cm9ycyBoZSBhbmQgZGV0ZWN0aXZlIERvbmFsZCBTdGV2ZW5zIHdlcmUgaGlkaW5nIGluc2lkZSB0aGUgQ29ybmVyIFB1YiBvbiBKYW4uIApSb2IgRmxldGNoZXIgaGFzIHNjb29wZWQgYSBzcG90IGluIHRoZSBSZWR0b290aCBQb2tlciBWZWdhcyAxMDAgdG91cm5hbWVudCBhZnRlciBiZWF0aW5nIG9mZiBwbGF5ZXJzIGZyb20gYWNyb3NzIHRoZSBjb3VudHJ5IHdpdGggaGlzIGNhcmQgc2tpbGxzLgooVGhpcyBvcHRpb24gaXMgdXN1YWxseSBhdmFpbGFibGUgd2l0aGluIHdvcmQgcHJvY2Vzc2luZyBzb2Z0d2FyZS4gCkkgc2tpcHBlZCB0aGUgbGFzdCB3ZWVrIGJlY2F1c2UgSSBydW5uaW5nIGl0IGFnYWluLCBhbmQgdGhlcmUgbm90IG11Y2ggcG9pbnQgaW4gZG9pbmcgdHdvIGxvdyBzdHJlc3Mgd2Vla3MgYmFjayB0byBiYWNrLiAKSSBhbHNvIGEgZGVjZW50IHByb2dyYW1tZXIsIEkgY3VycmVudGx5IHdvcmtpbmcgdG93YXJkcyBhIGNlcnRpZmljYXRlIGluIGNvbXAgcHJvZ3JhbW1pbmcuLiAKU3Vycm91bmQgeW91cnNlbGYgd2l0aCB0aGUgcmlnaHQgcGVvcGxlLiAKUHN5Y2hvbG9naXN0cyB3aG8gYWNjZXB0IHVuaGFwcGluZXNzIGFzIGEgZmFjdCBvZiBsaWZlIGFyZSBjb25jZXJuZWQgdGhhdCB0aGlzIGZvY3VzIG9uIGhhcHBpbmVzcyBwYWludHMgYW4gaW5jb21wbGV0ZSBwaWN0dXJlIG9mIHdoYXQgaXQgbWVhbnMgdG8gYmUgYSBodW1hbiBiZWluZy4gVGhpcyBvYnNlc3Npb24gaGFzIGxlZCB0byBzZXZlcmFsIG15dGhzIGFib3V0IGhhcHBpbmVzcywgbGlrZSB0aGUgaWRlYXMgdGhhdCAiaGFwcGluZXNzIGlzIHRoZSBuYXR1cmFsIHN0YXRlIG9mIGh1bWFuIGJlaW5ncyIgYW5kIHRoYXQgImlmIHlvdSdyZSBub3QgaGFwcHksIHlvdSdyZSBkZWZlY3RpdmUiIFtzb3VyY2U6IEJ1aHJdLi4gCkF0IHlvdXIgbW9udGhseSBiaWxscywgaGUgZW5jb3VyYWdlcy4gCkl0IGlzIGZhc2NpbmF0aW5nIHRoYXQgdGhlIGNvbW11bmljYXRpb24gcGF0aHdheXMgZnJvbSBndXQgbWljcm9iaW90YSB0byB0aGUgYnJhaW4gYWxzbyBsZWFkIHRvIGFjdGl2YXRpb24gb2YgdGhpcyBrZXkgYnJhaW4gcmVnaW9uLldoaWxlIHRoZSBhYm92ZSBub3RlZCB3b3JrIGVzdGFibGlzaGVzIGEgbmV1cmFsIHBhdGh3YXkgZnJvbSB0aGUgZ3V0IHRvIHRoZSBicmFpbiwgYSBzZWNvbmQgaW1wb3J0YW50IHBhdGh3YXkgZm9yIGNvbW11bmljYXRpb24gaXMgdGhlIGltbXVuZSBzeXN0ZW0uIApJIHdpc2ggdGhhdCBzaGUgaGFkIGp1c3QgY3V0IGNvbnRhY3Qgd2l0aCBoaW0sIGJ1dCBub3RoaW5nIEkgd291bGQgc2F5IGNvbnZpbmNlZCBoZXIgb2YgdGhhdC4gSSB0cmllZCB0byB0ZWxsIGhlciB0aGF0IHNoZSBoYXMgbm8gd2F5IG9mIHByb3ZpbmcgdGhhdCBhbnl0aGluZyBoZSB0ZWxscyBoZXIgbm93IGlzIHRoZSB0cnV0aCwgYW5kIHRoYXQgd291bGQgdGhpbmsgdGhlIGJlc3QgdGhpbmcgdG8gZG8gd2FzIHRvIHN0b3AgY29udGFjdGluZyBoaW0sIGJ1dCBzaGUgZGlkbiB3YW50IHRvIGhlYXIgaXQuCllvdSBjYW4gYWx3YXlzIGZpbmQgeW91ciBhbnN3ZXJzIHRoYXQgd2F5LiBBbmQgdGhlcmUgaXMgb25seSBzbyBtdWNoIHRoYXQgeW91IGNhbiBsZWFybiBmcm9tIG90aGVycy4uIApJIGRvbiB0aGluayB0aGF0IHdlaXJkLiBJIGZlZWwgbGlrZSBpdCBiZWVuIHRoYXQgd2F5IHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGltZSBmb3IgZXZlcnkgcmFjZSBhbmQgbmF0aW9uYWxpdHkuIFRoYXQgaGFzIHRvIGJlIGRpZmZlcmVudCB0aGFuIHJhY2lzbS4uIApXaGlsZSB0aGF0J3MgYSBsaXR0bGUgaGF6ZXksIHNlZWluZyBpdCBpbiBmcm9udCBvZiB5b3UgaXMgc28gbXVjaCBiZXR0ZXIgdGhhbiBzb21lIGltYWdlIG9uIHRoZSBJbnRlcm5ldC4gVGhlIHdvb2wgdGV4dHVyZSBhbmQgZmVlbCBpcyBubyBkaWZmZXJlbnQgdGhlbiB3aGF0IHlvdSBzZWUgaW4geW91ciBsb2NhbCBjYXNpbm9zLiAKVHlwaWNhbCB0b3VybmFtZW50cyBjaGFuZ2UgbGV2ZWxzIGV2ZXJ5IDEyIDIwIG1pbnV0ZXMsIHNvIGFmdGVyIG9uZSBob3VyIHlvdXIgYmxpbmRzIHdpbGwgaGF2ZSBpbmNyZWFzZWQgc2V2ZXJhbCB0aW1lcy4gCkhpbG1hIGFmIEtsaW50IGlzIHRoZSBvbmx5IHRoaW5nIGluIHR3byB5ZWFycyB0aGF0IEkgZmVsdCB3YXMgd29ydGggdGhlIHRyaXAgdXB0b3duIHRvIHNlZS4gVGhleSBkb24gc2hvdyBuZWFybHkgZW5vdWdoIHdvbWVuIGFydGlzdHMgb3IgYXJ0aXN0cyBvZiBjb2xvciwgYmVzaWRlcyB0aGF0IHNlZW1pbmdseSBuZXZlciBlbmRpbmcgQ2hpbmVzZSBjb250ZW1wb3Jhcnkgc2hvdyB0aGF0IEkgc3RpbGwgc29tZWhvdyBzZWUgc3Vid2F5IGFkcyBmb3IgdGhhdCBJIHRoaW5rIGVuZGVkIGluIGVhcmx5IDIwMTguIAoiT25lIHRoaW5nIHdlIGRvIGhvcGUgdGhhdCBjb21lcyBvdXQgaW4gdGhlIGVkdWNhdGlvbiBtb2R1bGVzIGZyb20gSGVhbHRoIENhbmFkYSBpbiB0aGUgZnV0dXJlIGlzIHRoYXQgcGVvcGxlIGRvIHVuZGVyc3RhbmQgdGhhdCBwcm90ZWluIGZvb2RzIGFyZSBub3QgYWxsIGNyZWF0ZWQgZXF1YWxseS4gVGhleSBlYWNoIGhhdmUgdGhlaXIgb3duIHVuaXF1ZSBudXRyaWVudCBwYWNrYWdlIHRvIGJyaW5nIHRvIHVzLCIgUGFyc2xvdyBzYWlkIG9mIG1lYXQgYmFzZWQgcHJvdGVpbnMgY29tcGFyZWQgdG8gcGxhbnQgYmFzZWQgb25lcy4gIkl0J3Mgbm90IGFuIGVxdWFsIHN3YXAgaW4sIHN3YXAgb3V0IHRvIGdldCB0aGUgc2FtZSBhbW91bnQgb2YgcHJvdGVpbi4iLiAKSW4ganVzdCAyNCBob3VycywgMTM5IHBlb3BsZSBzaWduZWQgYSBsZXR0ZXIgaGlnaGxpZ2h0aW5nIHRoZSBsYWNrIG9mIHB1YmxpYyBjb25zdWx0YXRpb24sIHdoaWNoIHdhcyBwcmVzZW50ZWQgdG9UdWVzZGF5J3MgY291bmNpbG1lZXRpbmcgYnkgZm9ybWVyIFdhbmdhcmF0dGFjaXRpemVuIG9mIHRoZSB5ZWFyIEFubmUgU2hhdy4gCkxpa2UgdGhlIGRlY29yLCB0aGUgbWVudSBibGVuZHMgdHJhZGl0aW9uYWwgYW5kIGNvbnRlbXBvcmFyeSBpbmZsdWVuY2VzIGZyb20gYWNyb3NzIHRoZSBnbG9iZS4gCkRvbiBsaXN0ZW4gdG8gd2hhdCBzaGUgc2F5cy4gSnVzdCBrbm93IHRoYXQgeW91IGFyZSB0YWtpbmcgaW4gdGhlc2Uga2lkcyB0byBnaXZlIHRoZW0gYSBiZXR0ZXIgbGlmZSBhbmQgeW91IGFyZSBhbHJlYWR5IGEgYmV0dGVyIG1vbSB0aGFueW91ciBtb20gcHJvYmFibHkgZXZlciB3YXMuIFlvdSBnb3QgdGhpcy4gClRoZSBDQUUgaXMgbG9jYXRlZCBpbiBBMjU1IE11cnBoeSBIYWxsIGFuZCBjYW4gYmUgcmVhY2hlZCBhdCAoMzEwKSA4MjUgMTUwMS4gCkhlYXJkIGl0IHNldmVyYWwgdGltZXMuIERvIHlvdSB0aGluayB0aGV5IGp1c3Qgd2FudCB0byBiZSBuaWNlIGluIHN1Y2ggYSBtYW5uZXI/IE5vLCB0aGF0IGlzIGp1c3QgZGlzcmVzcGVjdGZ1bCBhbmQgdGhlIHJlYXNvbiBpcyB0aGF0IHRoZXkgd2FudCB0byBtYWtlIGZ1biBvZiB0aGUgbGFvd2FpLiBUaGF0IGNvbmRlc2NlbmRpbmcuIApJZiB3ZSBnbyB0byBNaXJhdmFsLCBpcyBpdCBkaWZmaWN1bHQgdG8gZ2V0IGludG8gY2xhc3NlcyBvbiBzdWNoIHNob3J0IG5vdGljZT9BbnN3ZXIgZnJvbSBDbGVhMTdBdWcgMjAxOCBJIHRoaW5rIHlvdSdyZSBnb2luZyBhdCB0aGUgd3Jvbmcgc2Vhc29uIHRvIGhpa2UuIEkgaGF2ZSBkb25lIGEgZ29vZCBhbW91bnQgb2YgYm90aCBvbiBhbmQgb2ZmIHByb3BlcnR5IGhpa2luZyBhdCBNaXJhdmFsIGluIERlY2VtYmVyIGFuZCBvbiB0aGUgb2ZmIHByb3BlcnR5IGhpa2VzIHRoZSBleGVydGlvbiBpbiB0aGF0IGhlYXQgY2FuIGJlIGNoYWxsZW5naW5nIGV2ZW4gaW4gd2ludGVyLiAKSXQgbGlrZSBzb21lb25lIHdobyBoYXRlcyB0aGUgTWluaW9ucyBzdWJzY3JpYmluZyB0byByL21pbmlvbmhhdGUgLCBhbGwgeW91IGRvaW5nIGlzIHN1cnJvdW5kaW5nIHlvdXJzZWxmIHdpdGggbW9yZSBvZiB3aGF0IHlvdSBkZXNwaXNlLiAKVmlzaXRvcnMgY2FuIGNvbWUgYW5kIGdvIGRpcmVjdGx5IG9udG8gdGhlIEhpZ2ggTGluZSBhdCBXZXN0IDMwdGggU3RyZWV0IGFuZCBhbHNvIHRvIEh1ZHNvbiBCb3VsZXZhcmQgUGFyayBhdCBXZXN0IDMzcmQgc3RyZWV0LiAKSXQgYSBiaXQgb2YgYSBsb25nIHN0b3J5LCBidXQgdGhlIHRyaXAgd2FzIGFsbW9zdCBpbiBkb3VidCBiZWNhdXNlIG91ciBBaXIgQ29uZGl0aW9uZXIgYnJva2UgYW5kIHdlIG5lZWRlZCBhIG5ldyBvbmUuIFdlIHdlcmUgZ29pbmcgdG8gd2FpdCB1bnRpbCBuZXh0IHllYXIgdG8gZml4IGl0IGJ1dCBJIGVuZGVkIHVwIGdldHRpbmcgYW4gQU1BWklORyBkZWFsIG9uIG9uZSBhbmQgaGFkIHRvIGFjdCBvbiBpdCBvciByaXNrIGxvc2luZyB0aGUgZGVhbC4gClVwZGF0ZWQgMjAxOSBQcmljZXMgSG90ZWwgUmV2aWV3cyBBWgpBdCBsZWFzdCBCcmV4aXQgaW52b2x2ZXMgbW9yZSBjb21wbGV4aXR5LiAK|<---