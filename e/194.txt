--->|KFByaXZhY3kgUG9saWN5KVNvdnJuVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpRmFjZWJvb2sgQWRzVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpQW1hem9uIFVuaWZpZWQgQWQgTWFya2V0cGxhY2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApUbyBtYWtlIHRoZSB3aG9sZSB0aGluZyBldmVuIGZ1bm5pZXIsIG5vdCBpbiB0aGUgaGEgaGEgc2Vuc2UsIGJ1dCBhcyBpbiB0aGUgc29tZXRoaW5nIGFpbiByaWdodCBzZW5zZSwgU291dGggQ2Fyb2xpbmEgRGVtb2NyYXRpYyBSZXByZXNlbnRhdGl2ZSBKYW1lcyBDbHlidXJuIGFjY3VzZWQgdGhlIEdPUCBvZiBwbGFudGluZyBmYWtlIGNhbmRpZGF0ZXMgdG8gcnVpbiB0aGUgRGVtb2NyYXRpYyBwcmltYXJpZXMuIApJIHJvb3QgZm9yIHdob2V2ZXIgYnJpbmdzIHRoZSBtb3N0IGlubm92YXRpdmUgcHJvZHVjdCB0byBtYXJrZXQuIApSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZU9ubGluZSBQb2tlciBSb29tczogVGlwcyBvbiBXb3JraW5nIHRoZSBMb2JieQpZb3VyICJwdXJpdHkiIGlzIG5vdCBhdCByaXNrIGZyb20gdGhlIGxpa2VzIG9mIEFDT1JOLiBBbmQgc2V4IHBhbmljcyBhcmUgbmV2ZXIgYSBnb29kIHdheSB0byBtYWtlIHBvbGljeS4uIApUaGlzIHdlZWsgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQ2VudHJhbCBGbG9yaWRhIHNvbWUgbG9jYWwgd29tZW4gd2hvIHN1ZmZlcmVkIHRocm91Z2ggeWVhcnMgb2YgZm9yY2VkIHByb3N0aXR1dGlvbiBvciBvdGhlciBzZXggYWJ1c2Ugd2lsbCBiZSBzZWVuIGFzIHNvbWV0aGluZyBlbHNlIGVudGlyZWx5OiBhcnRpc3RzLiBTb2xpY2l0b3JzLiAKSW4gYW4gb25nb2luZyBzZXJpZXMgb2YgcG9rZXIgc2VtaW5hcnMgZHVyaW5nIHRoaXMgeWVhcidzIFdvcmxkIFNlcmllcyBvZiBQb2tlciBhdCB0aGUgUmlvLCBDYXJvIGhhcyBkZW1vbnN0cmF0ZWQgaGUgcmVtYWlucyBpbiB0b3AgZm9ybSBtb3JlIHRoYW4gYSBxdWFydGVyIGNlbnR1cnkgYWZ0ZXIgdGhvc2UgaWNvbmljIHBob3RvcyBvZiAidGVsbHMiIHdlcmUgc2hvdCBhdCB0aGUgQmluZ28gUGFsYWNlIChsYXRlciByZW5hbWVkIFBhbGFjZSBTdGF0aW9uKS4KTWlsbGlvbiBpbiBiaWdnZXN0IENhbmFkaWFuIHRlY2ggSVBPIGluIGFsbW9zdCA5IHllYXJzCklnZ3lidSAgNjAyIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvClN0cmlwIEdhdWdlIFZpc2l0b3IgZm9yZWNhc3QgZm9yIExhcyBWZWdhcyB0aGlzIHdlZWtlbmQ6ClZlbmV6dWVsYSB3YXMgb25lIG9mIHRoZSBmZXcgY29sb25pZXMgdGhhdCBhY3R1YWxseSBwcm9kdWNlZCBhIHByb2ZpdCBmb3IgdGhlIEVtcGlyZSwgYW5kIGhhZCBhbiBlbnRyZW5jaGVkLCByaWNoIFdoaXRlIHBvcHVsYXRpb24sIHRoZSBNYW50dWFub3MsIHdobyBiYXNlZCB0aGVpciBkb21pbmFuY2UgaW4gY29udHJvbCBvZiBoYWNpZW5kYXMgYW5kIEJsYWNrIHNsYXZlcnksIGRpc2NyaW1pbmF0aW5nIGFnYWluc3QgRnJlZSBCbGFja3MgYW5kIHRoZSBtaXhlZCByYWNlIFBhcmRvcy4gClRoZSBwaXRjaCBBIGZldyBtb250aHMgYWZ0ZXIgbGF1bmNoaW5nIGEgYmV0YSB2ZXJzaW9uIG9mIEN1c3RvbSBUYXR0b28gRGVzaWduLCBhIHdlYnNpdGUgY29ubmVjdGluZyBjb25zdW1lcnMgd2l0aCB0YXR0b28gYXJ0aXN0cyB0byBjcmVhdGUgb25lIG9mIGEga2luZCB0YXR0b29zLApDb2luY2lkZW5jZSBhbXVzYW50ZSwgYydlc3QgY2V0dGUgYW5uZSBsZSAxMDBlIGFubml2ZXJzYWlyZSBkZSBsYSBzdGF0aW9uLCBxdSdvbiBhdmFpdCBsJ2hhYml0dWRlIGQnYXBwZWxlciBQYXJpcyBQbGFnZS4gCkp1c3QgdHdvIHdlZWtzIGFnbywgZm9yIGhpcyA3OXRoIGJpcnRoZGF5LCA2MCBmcmllbmRzIGFuZCBmYW1pbHkgbWVtYmVycyBqb2luZWQgQXJtZW4gYXQgdGhlIFJvZ2VyJ3MgQ2VudHJlIGluIFRvcm9udG8gZm9yIGEgZ2FtZSBiZXR3ZWVuIHRoZSBCbHVlIEpheXMgYW5kIGhpcyBmYXZvdXJpdGUgY2hpbGRob29kIHRlYW0sIHRoZSBTYW4gRnJhbmNpc2NvIEdpYW50cy4gCihHcmFudGVkLCBzaGUgZGlkIHNwZW5kIGhlciB0cmlwIHNpdHRpbmcgd2l0aCBMd2F4YW5hIFRyb2kgd2hvIGdhdmUgTW9sbHkgZW5vdWdoIGNhbmR5IHRvIG1ha2UgaGVyIHN0b21hY2ggYWNoZS4pQnV0IEtlaWtvIFNJVFMgZG93biBpbiB0aGUgbWlkZGxlIG9mIHRoZSBhaXJsb2NrIHdoaWxlIHBlb3BsZSBhcmUgc3RpbGwgdHJ5aW5nIHRvIGRlcGFydC4gU2hlIGJhcmVseSBzYXlzIGhpIHRvIGhlciBodXNiYW5kLiAKVGhlcmUgaXNuIGEgc2luZ2xlIHRoaW5nIHN0b3BwaW5nIHRoZW0gZnJvbSBkb2luZyB2ZXJ5IGJhZCB0aGluZ3MuIFRoaXMgdGVsbHMgbWUgdGhhdCB0aGlzIGlzbiBhIGd1biBpc3N1ZSBidXQgYSBtZW50YWwgaGVhbHRoIGlzc3VlLiAKTmlnaHQgdHdvLCBnbyBvdXQgYW5kIHRhbGsgdG8gZXZlcnkgZ2lybC4gWW91IHNlZSB3aXRoaW5nIHRoZSBmaXJzdCAzIHNlY29uZHMgb3IgY3V0IGEgbWFyayBpbiB5b3VyIGFybSBiZWNhdXNlIHlvdSBmYWlsZWQgdG8gZG8gYSByZXAsIGVpdGhlciBmaXNjYWxseSBvciBtZXRhcGhvcmljYWxseS4gRXZlcnkgZ2lybCB5b3UgZG9uIGFwcm9hY2ggb3MgeW91IGJlaW5nIEJQLiBZb3UgbWVldCB5b3VyIGZlYXJzIGZhY2UgZmlyc3QgYW5kIGtub3cgd2hlcmUgeW91IGhhdmUgdG8gcHVzaCBhZ2FpbnN0LgpBZnRlciBnZXR0aW5nIHN0YWNrZWQgYWdhaW5zdCBhbiBvdmVycGFpciBvbiBhIGZsb3BwZWQgVFAsIEkgbGVmdCBoZWF2eSBoZWFydGVkIHdpdGggJDcwIGxlZnQuLiAKSXQgaXMgaW1wb3NzaWJsZSB0byBsaXZlIHdpdGhvdXQgdGFraW5nIHRoZSBsaWZlIG9mIHNvbWV0aGluZyBlbHNlLCB3aGV0aGVyIHBsYW50IG9yIGFuaW1hbC4gCkZvcm1lciBFUFQgYW5kIFdQVCBDaGFtcGlvbiBBbmRyZXkgUGF0ZXljaHVrIChHUEkyOTksICA2NCkgaXMgb24gdGhlIGJyaW5rIG9mIGZhbGxpbmcgb3V0IG9mIHRoZSBHUEkzMDAuIApBbGwgdGhlaXIgY2hpbGRlcmVuIGFyZSBrYXRob2xpYyBhc3dlbGwuZmlsYmVydXRoaWUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnb0kganVzdCBkaWQgdGhpcyBmb3IgYSBmcmllbmQuIApTb21lIHBvdGVudGlhbCB0aGVyYXBpZXMgYXJlIHN0aWxsIGJlaW5nIGV2YWx1YXRlZCBmb3Igc2FmZXR5IGFuZCBlZmZlY3RpdmVuZXNzLCB3aGlsZSBvdGhlcnMgaGF2ZW4ndCBiZWVuIHNlcmlvdXNseSBldmFsdWF0ZWQgYXQgYWxsLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIGlzIGN1cnJlbnRseSBmaW5lIHR1bmluZyBpdHMgZ3VpZGVsaW5lcyBmb3IgY29zbWVjZXV0aWNhbHMsIHByb2R1Y3RzIG1hcmtldGVkIGFzIGNvc21ldGljIHBoYXJtYWNldXRpY2Fscy4gCkNhbm5vdCBnaXZlIHVwLiBpcyB0b28gbXVjaCBhdCBzdGFrZS4gY2FuIGFsbCBkbyB0aGluZ3MgIHJpZ2h0IG5vdyAgdG8gcHJvdGVjdCBvdXJzZWx2ZXMgYW5kIG91ciBmdXR1cmVzLiBhcmUgdGVuIG9mIHRoZW0uIHJlYWRlcnMgY2FuIHRoaW5rIG9mIGh1bmRyZWRzLCBtYXliZSB0aG91c2FuZHMsIG1vcmUuIG90aGVyIHdvcmRzLCBJIG1heSBiZSBsZXNzIG5haXZlIHRoYW4gSSB3YXMgYXQgdGhlIGJlZ2lubmluZyBvZiAiQ2xhc3MgV2FyZmFyZSwiIGJ1dCBJIGFuZ3JpZXIgdGhhbiBldmVyIGFuZCBtb3JlIGNvbnZpbmNlZCB0aGF0IFdFIG11c3QgZG8gc29tZXRoaW5nIGFib3V0IGl0MS4gClRoZSBtb3JlIGNvbXBsaWNhdGVkIGNhbGN1bGF0aW9uIGhlcmUgcmVmZXJyZWQgdG8gd2FzbiBpbiAzLjUuIApUaGVyZSBjb21lcyBhIHBvaW50IHdoZXJlIGl0J3Mgbm90IGEgbGFjayBvZiB1bmRlcnN0YW5kaW5nIGFueW1vcmUgdGhvdWdoOyBEYWQncyA2NCB0aGlzIHllYXIgYW5kIGhlJ3MgbWFkZSBhIGh1Z2UgZWZmb3J0IHRvIGxpc3RlbiBhbmQgdHJ5IHRvIHVuZGVyc3RhbmQuIApUaGUgb3RoZXIgcmVhc29uIEkgZG9uJ3QgcmVhbGx5IGxpa2UgZHVkZXMgd2l0aCByZWFsbHkgbmljZSBjYXJzIGlzIHRoYXQgSSBzdGFydGVkIGRhdGluZyBhIGd1eSB5ZWFycyBhZ28gIGhlIGhhZCBhIHZlcnkgbmljZSBzcG9ydHMgY2FyLiBIZSBwaWNrcyBtZSB1cCBzbyB0aGF0IHdlIGNhbiBkcml2ZSB0byBhIGNpdHkgYSBjb3VwbGUgaG91cnMgYXdheSB0byBzZWUgSW1hZ2luZSBEcmFnb25zLiBJIHdhcyBzbyBleGNpdGVkIGFuZCB3ZSdkIGhhZCBhIGNvdXBsZSBzdWNjZXNzZnVsIGRhdGVzLiBXZWxsIHRoZSB3aG9sZSB0aW1lIHRoaXMgZ3V5IGlzIGRyaXZpbmcgbGlrZSBzdWNoIGEgamVyay4gU3BlZWRpbmcsIGdldHRpbmcgdGhlIHR1cmJvIGdvaW5nIGNvbnN0YW50bHksIHRhaWxnYXRpbmcgYW55b25lIHdobyBkYXJlZCBlbnRlciB0aGUgbGVmdCBsYW5lLCBjdXR0aW5nIHBlb3BsZSBvZmYgIHlvdSBnZXQgdGhlIHBpY3R1cmUuClRvZGF5IEkgZ290IHVwLCBJIHN0ZXBwZWQgb250byB0aGUgZ3JpbGwgYW5kIGl0IGNsYW1wZWQgZG93biBvbiBteSBmb290LiBUaGF0IGl0LiBJIGRvbiBzZWUgd2hhdCBzbyBoYXJkIHRvIGJlbGlldmUgYWJvdXQgdGhhdC4uIApUaGVyZSdzIGFsc28gc29tZXRpbWVzIGFuICJhc3NpZ25tZW50IG9mIHJlbnRzIiBkb2N1bWVudCBmb3IgaW52ZXN0b3IgbG9hbnMuIE1heWJlIHNvbWV0aGluZyBlbHNlLCBidXQgdGhlcmUgd2FzIGFsbW9zdCBjZXJ0YWlubHkgc29tZXRoaW5nIGluIHRoYXQgcGFja2FnZSBvZiBkb2N1bWVudHMgYWJvdXQgdGhpcyB0b3BpYy4gV2hhdCBkaWQgdGhhdCBzYXk/LiAKRXZlbiBpZiB0aG9zZSBlbW90aW9ucyBhcmVuIGFyb3VuZCBldmVyeSBkYXkgaXQgY2FuIGFkZCB1cCBhbmQgbmVnYXRpdmVseSBhZmZlY3QgeW91ciByZWxhdGlvbnNoaXAuIApJZiB5b3UgY29uY2VybmVkIGFib3V0IHJlYWN0aW9ucy9jbG9nZ2luZywgdXNlIGEgc2ltcGxlLCBjaGVhcCwgdW5mcmFncmFuY2VkIG5vIGZyaWxscyBtb2lzdHVyaXplci4gCk8nUmVpbGx5J3MgYmxvb2RzdG9jayBhbmQgY2F0dGxlIGJyZWVkaW5nIGhvbGRpbmcgYXQgQ2FzdGxlbWFydGluLCBDbyBLaWxkYXJlLCBpcyBhbHNvIGEgbWFqb3IgYXNzZXQuIEhpcyB3aWZlLCBDaHJ5c3MsIGEgR3JlZWsgc2hpcHBpbmcgaGVpcmVzcywgaGFzIGFzc2V0cyB3b3J0aCA5MDBtLiBPJ1JlaWxseSBqb2luZWQgQW4gQm9yZCBCYWlubmUgaW4gMTk2MiBhcyBnZW5lcmFsIG1hbmFnZXIsIHdoZXJlIGhlIGRldmVsb3BlZCB0aGUgS2Vycnlnb2xkIGJyYW5kLiBIZSBsYXRlciBiZWNhbWUgY2hhaXJtYW4gb2YgSEogSGVpbnosIHN1Y2NlZWRpbmcgSEogSGVpbnogSUkuIE8nUmVpbGx5IG1hZGUgaGlzIGludGVybmF0aW9uYWwgcnVnYnkgZGVidXQgYWdlZCAxOCBhZ2FpbnN0IEZyYW5jZS4gSGlzIHRyeSBzY29yaW5nIHJlY29yZCBzZXQgZHVyaW5nIHRoZSAxOTU1IGFuZCAxOTU5IExpb25zIHRvdXJzIGhhcyBub3QgYmVlbiBlcXVhbGxlZC4KV2VsbCBhbGwgdGhlc2UgcXVlc3Rpb25zIGFyZSBzdGlsbCBmaWVyY2VseSBkZWJhdGVkIGhlcmUgYW5kIG92ZXJzZWFzIGFuZCB5ZXQgdGhlIGFuc3dlcnMgdG8gdGhlbSB3aWxsIGdvIHNvbWUgd2F5IGluIHNoYXBpbmcgb3VyIHJlc3BvbnNlcyB0byBwcm9ibGVtIGdhbWJsaW5nLCBjbGluaWNhbGx5LCBnb3Zlcm5tZW50YWxseSBhbmQgaW5kaXZpZHVhbGx5LgpGbGlwIHJlc2V0cyA/IEkgZGlkIG9uZSBldmVyIGFuZCBsb3N0IHRoZSBnYW1lIGFueXdheS4gSSBkaWQgbGVhcm4gdGhlIGZvbGxvd2luZyBjbGltYmluZyBmcm9tIEQgdG8gQy4gCkZhdGhlcmx5IGxvdmUgSSBnb3QgZm91ciBjaGlsZHJlbiB3aG8gbGl2ZSBpbiB0aGUgbmV4dCB2aWxsYWdlLCBTdGV2ZSwgQ2hyaXMsIE1pY2hhZWwgYW5kIE1hdHRoZXcuIApCcmExblN0dXJnZW9uICAzIHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwo6KCBFdmVuIHRob3VnaCBJIGRvbid0IGtub3cgbXVjaCBhYm91dCBnYW1ibGluZywgSSBoYWQgYSBnb29kIHRpbWUgYW5kIHdvdWxkIGdvIGJhY2sgYWdhaW4uLiAKQ2hpbGRyZW4gaW5jbHVkZWQgaW4gdGhlIHJldmlldyB3ZXJlIHByZSB0ZXJtIGluZmFudHMgYW5kIGNoaWxkcmVuIHdpdGggZGVwcmVzc2lvbiwgcG9zdCB0cmF1bWF0aWMgc3RyZXNzLCBqdXZlbmlsZSByaGV1bWF0b2lkIGFydGhyaXRpcywgYXV0aXNtLCBhc3RobWEsIGF0b3BpYyBkZXJtYXRpdGlzIGFuZCBjeXN0aWMgZmlicm9zaXMuIEFnZSBvZiBjaGlsZHJlbiAoZXhjbHVkaW5nIHByZSB0ZXJtIGluZmFudHMpIHJhbmdlZCBmcm9tIDIgdG8gMTYgeWVhcnMuT3V0Y29tZXMgYXNzZXNzZWQgaW4gdGhlIHJldmlld05vIGluY2x1c2lvbiBjcml0ZXJpYSByZWxhdGluZyB0byBvdXRjb21lcyB3ZXJlIHNwZWNpZmllZC4gT3V0Y29tZXMgcmVwb3J0ZWQgaW4gc3R1ZGllcyBvZiBwcmUgdGVybSBpbmZhbnRzIGluY2x1ZGVkIGluIHRoZSByZXZpZXcgd2VyZSBwb2x5Z3JhcGggcmVhZGluZ3MsIEJyYXplbHRvbiBOZW9uYXRhbCBCZWhhdmlvdXJhbCBBc3Nlc3NtZW50IFNjYWxlIChCTkJBUyksIHdlaWdodCwgVGhvbWFuJ3Mgc2xlZXAvd2FrZSBzdGF0ZSBjcml0ZXJpYSwgZmVlZGluZywgc3Rvb2xpbmcsIGNhbG9yaWMgaW50YWtlLCB0cmFuc2N1dGFuZW91cyBibG9vZCBnYXMgcHJlc3N1cmUsIGFuZCBkYXlzIGluIGhvc3BpdGFsLk91dGNvbWVzIHJlcG9ydGVkIGluIG90aGVyIGNoaWxkcmVuIHdlcmUgZGVwcmVzc2lvbiAobWVhc3VyZWQgYnkgdGhlIFByb2ZpbGUgb2YgTW9vZCBTdGF0ZXMgYW5kIENFUyBEIHNjYWxlKSwgYW54aWV0eSAobWVhc3VyZWQgYnkgdGhlIFN0YXRlIFRyYWl0IEFueGlldHkgSW52ZW50b3J5LCBSZXZpc2VkIENoaWxkcmVuJ3MgTWFuaWZlc3QgQW54aWV0eSBTY2FsZSwgQmVoYXZpb3VyIE9ic2VydmF0aW9uIFNjYWxlKSwgc2FsaXZhcnkgY29ydGlzb2wgbGV2ZWxzLCBjb29wZXJhdGlvbiwgbmlnaHR0aW1lIHNsZWVwLCBtb29kIHN0YXRlIChtZWFzdXJlZCBieSB0aGUgSGFwcHkgRmFjZXMgU2NhbGUpLCBlbW90aW9uYWwgcHJvYmxlbXMgKG1lYXN1cmVkIGJ5IHNlbGYgZHJhd2luZ3MpLCByZWxheGF0aW9uIGxldmVsICh2aXN1YWwgYW5hbG9ndWUgc2NhbGUpLCBwYWluIChWYXJuaS9UaG9tcHNvbiBQYWluIFF1ZXN0aW9ubmFpcmUsIENoaWxkIGFuZCBQYXJlbnQgZm9ybXMpLCBzdGlmZm5lc3MsIG1lYXN1cmVzIG9mIGF1dGlzbSAodG91Y2ggYXZlcnNpb24sIG9mZiB0YXNrIGJlaGF2aW91ciwgb3JpZW50aW5nIHRvIGlycmVsZXZhbnQgc291bmRzLCBzdGVyZW90eXBpY2FsIGJlaGF2aW91cnMsIEF1dGlzbSBCZWhhdmlvdXIgQ2hlY2tsaXN0LCBFYXJseSBTb2NpYWwgQ29tbXVuaWNhdGlvbiBTY2FsZXMgYWN0aXZpdHkpLCBhc3RobWEgbWVhc3VyZW1lbnRzICh2b2NhbGlzaW5nLCBhc3RobWEgYXR0aXR1ZGUsIHBlYWsgYWlyIGZsb3cpLCBjbGluaWNhbCBtZWFzdXJlcyBvZiBkZXJtYXRpdGlzLCBhbmQgcGVhayBhaXIgZmxvdyBpbiBjaGlsZHJlbiB3aXRoIGN5c3RpYyBmaWJyb3Npcy4gClRoaXMgaGFzIG9mdGVuIGJlZW4gcGVyY2lldmVkIGFzIGZsaXJ0aW5nIGV2ZW4gd2hlbiBJIG1lbnRpb24gbXkgYm95ZnJpZW5kLiBCdXQgSSBkb24gYmxhbWUgdGhlIG90aGVyIHBlcnNvbiBmb3IgdGhpbmtpbmcgSSB3YXMgaW50ZXJlc3RlZC4gCkkgd291bGQgcmVhY2ggb3V0IHRvIFJvZ2VycyBhbmQgcmVtaW5kIHRoZW0gcG9saXRlbHkgdGhleSBpbmNvbnZlbmllbmNlZCB5b3UgYW5kIHlvdSB3ZXJlIHdpdGhvdXQgc2VydmljZSBmb3IgdHdvIGRheXMgdGhhdCB5b3UgcGFpZCBmb3IsIFJvZ2VycyB0eXBpY2FsbHkgaGFzIGEgcnVsZSB0aGF0IGlmIHRoZSBzZXJ2aWNlIGlzIGFmZmVjdGVkIHRoZSBtb250aGx5IGNoYXJnZSBnZXRzIGRpdmlkZWQgYnkgdGhlIGRheXMgb3V0IG9mIHNlcnZpY2UgYW5kIHJlaW1idXJzZWQuLiAKVGhlIEVuZ2xpc2ggam91cm5hbGlzdCBUb255IEhvbGRlbiBvbmNlIHNhaWQsICJPbmUncyBjaGFyYWN0ZXIgaXMgbGFpZCBiYXJlIGF0IHRoZSBwb2tlciB0YWJsZS4gVW5sZXNzIHdlIGFyZSBwcmVwYXJlZCB0byBzZWUgb3Vyc2VsdmVzIGFzIG90aGVycyBkbywgZmxhd3MgYW5kIGFsbCwgd2UnbGwgYmUgYSBsb3NlciBpbiBwb2tlciBhbmQgaW4gbGlmZS4iIEVmZmVjdGl2ZSBsZWFkZXJzIGtub3cgdGhlaXIgZW5lcmd5IHByZWZlcmVuY2UsIGJ1dCBjYW4gZmx1aWRseSBtb3ZlIGJhY2sgYW5kIGZvcnRoIGJldHdlZW4gYm90aCBlbmVyZ2llcywgdXNpbmcgdGhlaXIgbWFzY3VsaW5lIGVuZXJneSB0byBkcml2ZSBmb3J3YXJkIGZyb20gdGhlIGZlbWluaW5lIGVuZXJneSBvZiByZWZsZWN0aW9uLiBUaGlzIGlzIGdvb2QgR2VuZGVyIFBoeXNpY3MgICBhY2NvbXBsaXNoaW5nIHlvdXIgZ29hbHMgYnkgcGxheWluZyBhbGwgdGhlIGNhcmRzIGluIHlvdXIgaGFuZC4uIApJdHMgdW5saWtlbHkgb25lIG9mIHRoZW0gd2lsbCBsb3ZlIHlvdS4gCjMxIG9uIHN0dWRlbnQgbG9hbnMgcmVjZWl2ZWQgdW5kZXIgdGhlIENhbmFkYSBTdHVkZW50IExvYW5zIEFjdCwgdGhlIENhbmFkYSBTdHVkZW50IEZpbmFuY2lhbCBBc3Npc3RhbmNlIEFjdCwgdGhlIEFwcHJlbnRpY2UgTG9hbnMgQWN0IG9yIGEgc2ltaWxhciBwcm92aW5jaWFsIG9yIHRlcnJpdG9yaWFsIGdvdmVybm1lbnQgbGF3LiAKVGhlIGNvbXBhbnkgc3RhcnRzIHNlbmRpbmcgdGhlIG1lc3NhZ2UgZHVyaW5nIHRoZSBoaXJpbmcgcHJvY2Vzcywgc2F5cyBDRU8gUGF1bCBQdXJjZWxsLiAiRHVyaW5nIHRoZSBpbnRlcnZpZXcsIEkgbG9vayB0aGVtIGluIHRoZSBleWUgYW5kIHRlbGwgdGhlbSwgSSBkaXNjb3ZlciB0aGF0IHlvdSBhcmUgYSBqZXJrLCBJIGFtIGdvaW5nIHRvIGZpcmUgeW91LCAiIGhlIHNheXMuICJNb3N0IGNhbmRpZGF0ZXMgYXJlbiBmYXplZCBieSB0aGlzLCBidXQgZXZlcnkgbm93IGFuZCB0aGVuLCBvbmUgdHVybnMgcGFsZSwgYW5kIHdlIG5ldmVyIHNlZSB0aGVtIGFnYWluIHRoZXkgZmluZCBzb21lIHJlYXNvbiB0byBiYWNrIG91dCBvZiB0aGUgc2VhcmNoLiIuIApBbGwga2luZHMgb2Ygd2F4LiAKSXQgd2h5IHJlYWwgc2NpZW5jZSBoYXMgbm90IHB1dCBhbnkgZWZmb3J0IGludG8gYWN0dWFsbHkgdHJ5aW5nIHRvIHJlYXNvbiB3aXRoIHBlb3BsZSB3aG8gdGhpbmsgdGhlIGVhcnRoIGlzIGZsYXQuIApJbiBteSBwcm9mZXNzaW9uYWwgYXNzb2NpYXRpb24gbmV3c2xldHRlciwgdGhlcmUgaXMgZ29vZCBuZXdzLiBPYmFtYSBhZG1pbmlzdHJhdGlvbiBoYXMgcmVzdG9yZWQgYWNhZGVtaWMgZnJlZWRvbS4gQWNjb3JkaW5nIHRvIHRoZSBBbWVyaWNhbiBTb2Npb2xvZ2ljYWwgQXNzb2NpYXRpb24sIHRoZSBTdGF0ZSBEZXBhcnRtZW50IGhhcyBydWxlZCB0aGF0IFNvdXRoIEFmcmljYW4gUHJvZmVzc29yIEFkYW0gSGFiaWIgd2lsbCBmaW5hbGx5IGJlIGFsbG93ZWQgdG8gcmVhcHBseSBmb3IgYSB2aXNhLgpUdXJuIHNlZW1zIG9rYXkgICBmbG9wcGVkIHR3byBwYWlycywgc2V0cywgZXRjLiB3aWxsIGNvbnRpbnVlIG9uIHRoYXQgdHVybi4gSSBub3Qgc3VyZSBpZiB5b3UgaGF2ZSBhIHJhbmdlIGFkdmFudGFnZSBhdCB0aGlzIHBvaW50LCBhZ2FpbnN0IHNvbWVvbmUgdGhhdCByYWlzZWQgcHJlIGFuZCBiZXQvY2FsbGVkIGZsb3AuCkkganVzdCB3YW50ZWQgdG8gZ2V0IHRvIHRoZSBzZXguLiAKQWdyZWVzIHdpdGggbXkgdGhlb3J5IHRoYXQgYWxsIGZlbWFsZSBhbGxpYW5jZXMgZG9uIHdvcmsgYmVjYXVzZSB3b21lbiB1c3VhbGx5IGRvbiB0ZW5kIHRvIGJlIHNleGlzdCB0aGV5IGVtYnJhY2UgYWxsIGtpbmRzIG9mIGh1bWFucyBpbiB0aGVpciBhbGxpYW5jZS4gClRvIHRob3NlIHdpdGggbm8gYXBwZXRpdGUgZm9yIGEgbGVuZ3RoeSBkaXNjb3Vyc2UsIGFuZCB3aXRoIGxpbWl0ZWQgYXR0ZW50aW9uIHNwYW4sIEkgc3VtbWFyaXNlIG15IGNvbmNsdXNpb25zIGluIHRoYXQgY29sdW1uIGluIHRoZSBmb2xsb3dpbmcgbGluZXM6CkVzc2VudGlhbCBvaWxzIGFyZSBhbHNvIHRyaWNreS4gTm9uZSBzaG91bGQgYmUgdXNlZCBkdXJpbmcgdGhlIGZpcnN0IHRyaW1lc3RlciwgYW5kIGFsdGhvdWdoIHNvbWUgYXJlIGFsbCByaWdodCBsYXRlciBpbiB0aGUgcHJlZ25hbmN5LCB0aGV5IG5lZWQgdG8gYmUgaGVhdmlseSBkaWx1dGVkIGJlZm9yZSBiZWluZyBhZG1pbmlzdGVyZWQuIApXaGVuIEkgdG9vayBlYXJ0aCBhbmQgc2NpZW5jZSBiYWNrIGluIHVuZGVyZ3JhZCBhcyBteSBmcmVlIGVsY3RpdmUgbXkgcHJvZmVzc29yIGdhdmUgdGhlIGNsYXNzIGEgc3VycHJpc2UgcXVpeiB3aXRoIHRoZSBtYXAgb2YgdGhlIHdvcmxkIGFuZCBhc2tlZCB1cyB0byBtYXJrIGNlcnRhaW4gbWFqb3IgY291bnRyaWVzLiBXaGVuIGV2ZXJ5b25lIGZpbmlzaGVkIGhlIHdlbnQgb3ZlciB0aGUgcXVpeiBhbmQgeWVsbGVkIG91dCBob3cgc29tZSBwZW9wbGUgbWlzcGxhY2VkIGNlcnRhaW4gY291bnRyaWVzIGxpa2UgcGxhY2luZyBSdXNzaWEgaW4gQWZyaWNhICggUHV0aW4gaXMgYmxhY2sgYnR3ICksIG1pc3BsYWNpbmcgQ2FsaWZvcm5pYSBpbiB0aGUgZWFzdCBjb2FzdCwgcHV0dGluZyBWaWV0bmFtIGluIFRoYWlsYW5kLCBhbmQgZXRjLiBJdCB3YXMgYSByZWFsbHkgZnVuIGNsYXNzIGFzIHRoZSBwcm9mZXNzb3Igd2FzIG92ZXJyZWFjdGluZyB3aXRoIGVhY2ggbWlzdGFrZS4KV2UgZG9uIGFsd2F5cyBsaXZlIGluIGEgd29ybGQgd2hlcmUgdGhlcmUgaXMgYSBiYWQgY2hvaWNlIGFuZCBnb29kIGNob2ljZS4gU29tZSBwZW9wbGUgYXJlIGxlZnQgd2l0aCBhIGJhZCBjaG9pY2UgYW5kIHdvcnNlIGNob2ljZS4gCkV2ZW4gcGVvcGxlIHdpdGggYSBsb3Qgb2YgcG9rZXIgY2hpcCB0cmljayBleHBlcmllbmNlIGhhdmUgZGlmZmljdWx0eSB3aXRoIHRoZSB0cmlwbGUgc3RhY2sgc2h1ZmZsZS4gCkJvdGggd2VyZSBjb252aWN0ZWQgYW5kIGZpbmVkICQyMDAgb24gZWFjaCBtYXR0ZXIuCllvdSBjYW4ganVzdCBlYXQgd2hhdGV2ZXIgeW91IHdhbnQgdG8gYnVsayB1cCwgeW91IGRvIG5lZWQgdG8gaGl0IGNlcnRhaW4gY2Fsb3JpZSBhbmQgbnV0cmllbnQgZ29hbHMsIGJ1dCB0aGUgInVuaGVhbHRoeSIgZm9vZHMgeW91ciBmcmllbmQgZWF0cyBhcmUgcHJvYmFibHkgaW4gbGluZSB3aXRoIHRoYXQuIApUaGUgbWVzc2FnZSBib3ggc3BhbnMgdGhlIHdpZHRoIG9mIHRoZSBzY3JlZW4gYW5kIGlzIGp1c3QgdW5kZXIgaGFsZiBhbiBpbmNoIHRhbGwsIGFuZCBpcyBpZGVhbCBpZiB5b3UgZG9uJ3Qgd2FudCB5b3VyIGluY29taW5nIG1lc3NhZ2VzIHRvIGNvdmVyIHVwIHRoZSBidWxrIG9mIGFueSBjb250ZW50IG9uIHlvdXIgaVBob25lIHNjcmVlbi4gCkhlIHRvbGQgaGVyIG5vdCB0byBkYW5jZSBhdCBvdGhlciBwZW9wbGVzJyBmdW5jdGlvbnMgYW55bW9yZS4gSGUgdGhyZWF0ZW5lZCBoZXIgYXMgd2VsbC4gCkphcGFuJ3Mgcm9ib3QgbWFrZXIgVG1zdWsgYW5kIHRoZSBTaG93YSBVbml2ZXJzaXR5IHVudmVpbGVkIHRoZSBkZW50YWwgcGF0aWVudCByb2JvdCB0byBiZSB1c2VkIGZvciBzdHVkZW50IHRyYWluaW5nLCB3aGljaCBpbWl0YXRlcyBodW1hbiByZWFjdGlvbnMgc3VjaCBhcyBjb3VnaGluZywgdG9uZ3VlIG1vdmVtZW50IGFuZCBwYWluIHJlYWN0aW9uLiAKWWVhIHRoaXMgaXNuJ3QgdHJ1ZSBhdCBhbGwgT1AuIExpa2UgdGhlIGNsZWFyZXN0IG9uZSB0aGF0IGlzIGp1c3QgZmxhdCBvdXQgd3JvbmcgaXMgImJvZHkgbGFuZ3VhZ2UiLgoiV2UgZ2V0IGEgY2FzZSB0aGF0IHN0YXlzIG9uIHRoZSBidXMgZm9yIHdoZW4gd2UgZ2V0IHRvIFBhcmlzLiBJdCdzIGdvdCBvbmUgY2hhbmdlIG9mIGNsb3RoZXMgaW4gaXQgZm9yIHdoZW4gSSBtZWV0IG15IHdpZmUsIGJ1dCB0aGF0J3MgcHJldHR5IG11Y2ggaXQsIiBoZSBzYXlzIGJlZm9yZSB0dXJuaW5nIGhpcyBhdHRlbnRpb24gYmFjayB0byBZb3V0dWJlLgpPa2F5IHJlZGRpdCAgbmVlZCB5b3VyIGhlbHAhIEluIFRleGFzLiBJIGFtIGEgbWFycmllZCBmZW1hbGUuIE15IGh1c2JhbmQgYW5kIEkgd2VudCB0byBhIHBvcHVsYXIgbWFzc2FnZSBzdHVkaW8gbGFzdCBuaWdodC4gCk1heWJlLCBidXQgdW5saWtlIEdvVCwgSGFuZG1haWQgVGFsZSBoYXMgTk9UIGZvbGxvd2VkIHRocm91Z2ggb24gdGhpcyBwcm9taXNlLgpIb3dldmVyLCBvbmNlIGFueSBvZiB0aGUgYm90dG9tIGZvdXIgY2FyZHMgaGFzIGJlZW4gcmVwbGFjZWQsIHRoZSB0b3AgdHdvIGNhcmRzIGFyZSBjb25zaWRlcmVkIGZyb3plbiBhbmQgbWF5IG5vdCBiZSByZXBsYWNlZCBhZ2FpbiBmb3IgdGhlIHJlc3Qgb2YgdGhlIHJvdW5kLiBUaGUgYm90dG9tIGZvdXIgY2FyZHMgbWF5IGFsd2F5cyBiZSByZXBsYWNlZC4gClJhcmVseSBnZXRzIGFuIE9tYWhhIGdhbWUgZ29pbmcuIFNvbWV0aW1lcyB0aGUgcGxhY2UgaXMgZmlsbGVkIHdpdGggcmVncyB0aGF0IGRvbiBnaXZlIGFjdGlvbi4gQnV0IG92ZXJhbGwsIGlmIHlvdSBhcmVuIHN1cmUgd2hlcmUgdG8gZ28sIHRoaXMgaXMgdGhlIHNhZmVzdCBiZXQgZm9yIGZpbmRpbmcgYSBnb29kIGdhbWUuLiAKRXN0YWJsaXNoZWQgaW4gMTk1OSwgdGhlIG11c2V1bSBob2xkcyBtb3JlIHRoYW4gMTgsMDAwIG9iamVjdHMgaW4gaXRzIHBlcm1hbmVudCBjb2xsZWN0aW9uLCBpbmNsdWRpbmcgQW1lcmljYW4sIEFzaWFuLCBFdXJvcGVhbiwgTGF0aW4gQW1lcmljYW4sIFdlc3Rlcm4gQW1lcmljYW4gbW9kZXJuIGFuZCBjb250ZW1wb3JhcnkgYXJ0IGFuZCBmYXNoaW9uIGRlc2lnbi4gCkV2ZW4gdGFraW5nIDIsMDAwIElVL2RheSBvZiB2aXRhbWluIEQgd2lsbCBvbmx5IGluY3JlYXNlIHRoZSB2aXRhbWluIEQgbGV2ZWxzIG9mIG1vc3QgcHJlZ25hbnQgd29tZW4gYnkgYWJvdXQgMTAgcG9pbnRzLCBkZXBlbmRpbmcgbWFpbmx5IG9uIHRoZWlyIHdlaWdodC4KSWYgd2Ugd2FudCB0byB1c2UgUmFua2VkIENob2ljZSBWb3RpbmcsIGl0IHNob3VsZCBvbmx5IHRha2UgcGxhY2UgYXQgdGhlIEROQy4gCiJJdCB3YXMgaG9ycmlibGUuICIgQXNrZWQgaWYgc2hlIHdhcyBsaXZpbmcgaW4gZmVhciBvZiBoZXIgaHVzYmFuZCwgUm9ieW4gU2NoZXJlciBzYWlkLCAiWWVhaC4gSSBkaWRuJ3Qga25vdyBpZiBoZSB3YXMgZ29ubmEgY29tZSBnZXQgbWUgb3IgbXkgc29uLiAKV2UgdGVsbCBvdXJzZWx2ZXMgdGhhdCB3ZSBhcmUgZWl0aGVyIHN0cmFpZ2h0IG9yIGdheSwgbWFsZSBvciBmZW1hbGUsIG1hc2N1bGluZSBvciBmZW1pbmluZS4gbGl2ZXMgb2YgaWNlIHNrYXRlcnMsIHN0YXJsZXRzIGFuZCBzb2xkaWVycyByZWFzc3VyZSB1cyB0aGF0IGhldGVyb3NleHVhbGl0eSwgdGhlIGxhc3QgInRydXRoIiBvZiBtb2Rlcm5pdHkgYW5kIGJhcmVseSBjb250ZXN0ZWQgc2l0ZSBvZiBzb2NpYWwgcHJpdmlsZWdlLCB3aWxsIGJlIHN0YW5kaW5nLgpOb3QgdGhhdCAxMiB3YXMgYSBzdXJlIG51bWJlciwgZWl0aGVyISBEZXNwaXRlIGhpcyBoaWdoIHNjb3JlcywgR2lsbGVzIE1hcmluaSBpcyB3YWdpbmcgYSBkYWlseSBiYXR0bGUgYWdhaW5zdCB0ZW5kaW5pdGlzLiBTdGV2ZSBPLCBoYXZpbmcgc3BlbnQgaGlzIHdob2xlIHByb2Zlc3Npb25hbCBjYXJlZXIgaW5qdXJpbmcgaGltc2VsZiBhbmQgYmVpbmcgYmFyZWx5IHJlY292ZXJlZCBmcm9tIGEgcGluY2hlZCBuZXJ2ZSwgaXMgcHJldHR5IG11Y2gga2VlcGluZyBpdCB0b2dldGhlciBub3cgd2l0aCBzdHJpbmcgYW5kIHNjb3RjaCB0YXBlLiBBbmQgU3RldmUgV296bmlhaywgd2hvIGFsbW9zdCBnb3QgdGhlIGJvb3QgbGFzdCB3ZWVrLCBpcyBkYW5jaW5nIG9uIGEgcmVjZW50bHkgcHVsbGVkIGhhbXN0cmluZyBhbmQgYSBsb25nIGZyYWN0dXJlZCBmb290LgpIYWluZXMsIGFjY29tcGFuaWVkIGJ5IGhpcyB0cmFuc2FjdGVkIGJ1c2luZXNzIGluIEhhciAgcmlzYnVyZywgVHVlc2RheS4gTXIuIApJIGFtIHNvIGVuam95aW5nIG15IHRpbWUgY3JvY2hldGluZyB0aGVzZSBjcmVhdHVyZXMuIEkgaGF2ZSBiZWVuIHRyYW5zbGF0aW5nIEphcGFuZXNlICh0aGFuayB5b3UgR29vZ2xlKSBhbmQgbGVhcm5pbmcgaG93IHRvIGNyZWF0ZSBkb2xscyBhbmQgc2VwYXJhdGUgdGhlIGxlZ3MgYW5kIGFybXMuIApNYW55IGV4dHJpbnNpYyBhbmQgaW50cmluc2ljIChlcGkpZ2VuZXRpYyBmYWN0b3JzIGNhbiByZWd1bGF0ZSB0aGUgcHJvZHVjdGlvbiBvZiBuZXcgbmV1cm9ucyBbNDhdLiAKSW4gIlJlL2NvbGxlY3QsIiBNaW5uZWFwb2xpcyBhcnRpc3QgTGV4IFRob21wc29uIGJyaW5ncyBoaXMgZG9jdW1lbnRhcnkgc2Vuc2liaWxpdHkgdG8gYmVhciBvbiBNYXh3ZWxsJ3MgdW5zdW5nLCBwcmVzY2llbnQgcHJhY3RpY2VzLiBGcmlkYXkgdGhyb3VnaCBTdW5kYXkuIEZyZWUuIDY4MSAxN3RoIEF2ZS4gSSBsaWtlIHBsYXlpbmcgaW4gdGhlIHNub3cgYW5kIGRvaW5nIGFsbCB0aGF0IHN0dWZmLCIgc2F5cyBjb21lZGlhbiBhbmQgTWlubmVzb3RhbiBDaGFkIERhbmllbHMgZnJvbSBhIGdvbGYgY291cnNlIGluIEZsb3JpZGEuICJCdXQgdGhpcyB3aW50ZXIsIHdpdGggdGhlIDMwIGJlbG93IGRheXMgYW5kIGEgZm9vdCBvZiBzbm93IGV2ZXJ5IG90aGVyIGRheSwgaGFzIGJlZW4gYSBiaXQgbXVjaC4iIEZvcnR1bmF0ZWx5LCBEYW5pZWxzIGNhbiBlc2NhcGUgdG8gb3RoZXIgcGFydHMgb2YgdGhlIGNvdW50cnkuIAoiUGVvcGxlIHdobyBleHBlcmllbmNlZCBwcm9ibGVtcyB0ZW5kZWQgdG8gYmUgbWFsZXMgYWdlZCAxOCB0byAyOSB3aG8gd2VyZSB1bmVtcGxveWVkLCBzaW5nbGUsIHJlbnRpbmcgYW5kIGhhZCBsb3cgaW5jb21lcywiIGhlIHNhaWQuClN1IGVzdHJhdGVnaWEgcGFyYSBsb3MgdG9ybmVvcyBjb24gcmVidXlzIGVzdGFiYSBjbGFyYSwgcGFnYXIgcG9yIGVsIG1heW9yIG5tZXJvIGRlIGZpY2hhcyBwb3NpYmxlIHkgYXJyaWVzZ2FybGFzIHNpbiBtaWVkbyBhbGd1bm8gaGFzdGEgY29uc3RydWlyIHVuIHN0YWNrIHF1ZSBjb24gc3UgcGVyaWNpYSBwb2tlcnN0aWNhIGxlIGFzZWd1cmFyYSBsbGVnYXIgbGVqb3MgZW4gZWwgdG9ybmVvLiAKSXMgdGhpcyBub3JtYWw/IEkgd2FzIG9ubHkgcmFjayBwdWxsaW5nIDQwIHRvIDUwa2cgYmVmb3JlIGkgYm91Z2h0IGEgYmVsdC4gVG9uaWdodCB3aXRoIHRoZSBiZWx0IGkgZGlkIDExMGtnLi4gClNvbWUgcHJhY3RpdGlvbmVycyBpbmNvcnBvcmF0ZSBlc3NlbnRpYWwgb2lscyBpbnRvIG1hc3NhZ2UsIGhlbHBpbmcgeW91IGFjaGlldmUgYSBtZWRpdGF0aXZlIHN0YXRlIGR1cmluZyB0aGUgc2Vzc2lvbi4gCkRvbid0IGdvIG9uIGEgYmxpbmQgZGF0ZS4gTm90IG9uIFZhbGVudGluZSdzLiBUb28gbXVjaCBwcmVzc3VyZSBvbiBpdCwgZXZlbiBpZiB5b3UgdGhpbmsgaXQncyBub3QgYW5kIGlmIHlvdSBkb24ndCByZWFsbHkgbGlrZSB0aGUgZ3V5IG9yIGhlIGRvZXNuJ3QgbGlrZSB5b3UsIHlvdSdsbCBvbmx5IGZlZWwgbGlrZSB5b3UncmUgZGVzdGluZWQgdG8gZGllIGFsb25lLgoiSSB3YW50IHRvIHNlZSB5b3UsIiBzYWlkIFRvbSBpbnRlbnRseS4gIkdldCBvbiB0aGUgbmV4dCB0cmFpbi4iCkdvb2Z5IGlzIHRoZW4gaW50cm9kdWNlZCBpbiBhbiBhbmltYXRlZCBzZWdtZW50LiAKQ29nZW50IEVudGVydGFpbm1lbnQgTWFya2V0aW5nLCB3aXRoIG9mZmljZXMgaW4gTmV3IFlvcmsgYW5kIExvcyBBbmdlbGVzLCBzcGVjaWFsaXplcyBpbiB0YWxlbnQgcHJvY3VyZW1lbnQsIGluZmx1ZW5jZXIgbWFya2V0aW5nIGFuZCBleHBlcmllbnRpYWwgYWN0aXZhdGlvbnMuIFRoZSBjb21wYW55IG9mZmVycyBwZXJrcyBsaWtlIGFkb3B0aW9uIGFzc2lzdGFuY2UsIGd5bSBtZW1iZXJzaGlwcyBhbmQgQ2xhc3NQYXNzIHN1YnNjcmlwdGlvbnMsIGFuZCB1bmxpbWl0ZWQgcGFpZCB0aW1lIG9mZiBhZnRlciBhIHllYXIgb2YgZW1wbG95bWVudC4gVGhlcmUncyBhbHNvIGEgc2VyaW91cyBlbXBoYXNpcyBvbiBzbmFja2luZzogRW1wbG95ZWVzIGFyZSB0cmVhdGVkIHRvIHNwb250YW5lb3VzIGx1bmNoZXMgZnJvbSBTaGFrZSBTaGFjayBhbmQgQ2hpY2sgZmlsIEEsIG91dGluZ3MgdG8gZ2V0IE51dGVsbGEgbWluaSBjb25lcywgZmllbGQgdHJpcHMgdG8gRWF0YWx5IGFuZCBpbiBob3VzZSBSaXNlIG5pdHJvZ2VuIGNvbGQgYnJldy4gCk9pbCBoZWFkZWQgZm9yIGEgMTAgcGVyY2VudCBzbGlkZSB0aGlzIHdlZWsuVHJ1bXAgaXMgInBsdW5naW5nIHRoZSBjb3VudHJ5IGludG8gY2hhb3MsIiBTZW5hdGUgTWlub3JpdHkgTGVhZGVyIENodWNrIFNjaHVtZXIsIGEgTmV3IFlvcmsgRGVtb2NyYXQsIHRvbGQgcmVwb3J0ZXJzLlRydW1wJ3Mgd2FsbCBwbGFuIGhhZCBkZWVwIHN1cHBvcnQgYW1vbmcgUmVwdWJsaWNhbiB2b3RlcnMsIGJ1dCBhIG1ham9yaXR5IG9mIHRoZSB3aWRlciBlbGVjdG9yYXRlIG9wcG9zZXMgaGltLCBwb2xscyBzaG93LiBUaGUgcHJlc2lkZW50IGhhbW1lcmVkIG9uIHRoZSBib3JkZXIgc2VjdXJpdHkgaXNzdWUgaW4gdGhlIHdlZWtzIGxlYWRpbmcgdXAgdG8gdGhlIE5vdmVtYmVyIG1pZHRlcm0gZWxlY3Rpb25zLCBpbiB3aGljaCBSZXB1YmxpY2FucyBsb3N0IGEgbmV0IDQwIHNlYXRzIGluIHRoZSBIb3VzZSwgdHVybmluZyBvdmVyIGNvbnRyb2wgdG8gRGVtb2NyYXRzLlRoZSBTZW5hdGUgaXMgc2NoZWR1bGVkIHRvIGNvbnZlbmUgYXQgbm9vbiBGcmlkYXkuIApJIGhhdmUgYSBjb2xsZWN0aW9uIG9mIGJhYnkgYWxwYWNhIHlhcm4gcHJvamVjdHMgdGhhdCBJIGRpZG4gbGVhdmUgdGhlIHBhdHRlcm5zIG9yIGhvb2sgc2l6ZSB3aXRoIHRoZW0gd2hlbiBJIHB1dCB0aGVtIGF3YXkgKHJvb2tpZSBtaXN0YWtlKSBzbyBJIGZyb2dnZWQgdGhlbSBhbmQgSSBiZWVuIHN0YXNoIGJ1c3RpbmcgbWFraW5nIGhhdHMgb3V0IG9mLiBJIGRlY2lkZWQgb24gYSByaWJiZWQgc3BpcmFsIGhhdCBwcm9qZWN0IHRoYXQgd29ya2VkIGluIHRoZSBiYWNrIGxvb3Agb25seSB0byBidXN0IGEgbG92ZWx5IGJsdWUgeWFybi4gCkNvb21lcyAobGVmdCkgc2FpZCB0aGUgbGVzcyBmb3JtYWwgZXZlbnRzIG9uIHRoZSBjYWxlbmRhciBjYW4gYmUganVzdCBhcyBpbXBvcnRhbnQgYXMgdGhlIGhlYWRsaW5lcnMuIEhlIGVhZ2VyIHRvIHNlZSBjb25uZWN0aW9ucyBtYWRlIGFuZCBpZGVhcyBleGNoYW5nZWQgb3ZlciByb29mdG9wIGNvY2t0YWlscy4gT3IgYXJvdW5kIHRoZSBwb2tlciB0YWJsZS4gT3Igb3ZlciBhIHdhcm0gc3RhY2sgb2Ygd2FmZmxlcy4gT25lIFdlZWsgS0Mgc2NoZWR1bGUgbWFrZXMgcm9vbSBmb3IgdGhvc2UgdGhpbmdzLCB0b28uCkJhc2VkIG9uIHlvdXIgc2VsZiBhZG1pdHRlZCBhY3Rpb25zLCB5b3UgYWxyZWFkeSBtYWRlIGl0IHZlcnkgY2xlYXIgdG8gU0QgdGhhdCBzaGUgc2Vjb25kIGJlc3QuIApWaWV0bmFtIHNheXMgaW52ZXN0aWdhdGluZyBjYXVzZSBvZiBib2F0IHNpbmtpbmcgaW4gY29udGVzdGVkIHdhdGVyc1ZpZXRuYW0gaXMgc2Vla2luZyBjbGFyaWZpY2F0aW9uIG9mIGhvdyBhIGZpc2hpbmcgYm9hdCBjYW1lIHRvIHNpbmsgdGhpcyB3ZWVrIGluIHRoZSBjb250ZXN0ZWQgU291dGggQ2hpbmEgU2VhLCB0aGUgRm9yZWlnbiBNaW5pc3RyeSBzYWlkIG9uIFNhdHVyZGF5LCBkYXlzIGFmdGVyIGEgbG9jYWwgcmVzY3VlIGFnZW5jeSBzYWlkIGl0IHdhcyByYW1tZWQgYnkgYSBDaGluZXNlIHZlc3NlbC4gVmlldG5hbSBhbmQgQ2hpbmEgaGF2ZSBsb25nIGJlZW4gZW1icm9pbGVkIGluIG1hcml0aW1lIGRpc3B1dGVzIGluIHRoZSBwb3RlbnRpYWxseQpEYXMgcnp0ZW5ldHp3ZXJrIGRlciBORk8gc3RlaHQgdW50ZXIgZGVtIExlaXRzcHJ1Y2ggIkVwbyBmciBBbGxlIiB1bmQgaXN0IGF1Y2ggZGVzaGFsYiB1bnRlciBkZW0gS3Vyem5hbWVuIEVGQSBiZWthbm50LiBEaWUgWmVudHJhbGUgZGVzIE5ldHp3ZXJrcyBiZWZpbmRldCBzaWNoIHNlaXQgdmllbGVuIEphaHJlbiBhbiBkZXIgVW5pdmVyc2l0dHNrbGluaWsgRnJlaWJ1cmcuIApJIGxvdmUgdGhhdCB0aGVyZSBpcyBhIHJpdmFscnkgbm93LiAKV2VsbCwgdGhlIFNpbXMgMyBpc24ndCBvdXQgeWV0LiBJdCBpcyBzZXQgdG8gYmUgcmVsZWFzZWQgb24gSnVuZSAybmQgKGluIEFtZXJpY2EpLiBJIHdvdWxkIGltYWdpbmUgdGhhdCB0aGUgU2ltcyAzIHdpbGwgYmUgYmV0dGVyIHRoYW4gdGhlIFNpbXMgMi4gVGhlIGdyYXBoaWNzIGFyZSBiZXR0ZXIsIGFuZCB0aGUgZ2FtZXBsYXkgaXMgZWFzaWVyLiBBbHNvLCBzaW1zIG5vdyBoYXZlIGZpdmUgcGVyc29uYWxpdHkgdHJhaXRzLiBUaGUgdHJhaXRzIHRoZXkgaGF2ZSBjYXJyeSB0aHJvdWdoIGludG8gZ2FtZXBsYXkuIEV4YW1wbGU6IGEgc2Vuc2l0aXZlIHNpbSB3b3VsZCBwcm9iYWJseSB0YWtlIGV2ZXJ5dGhpbmcgcGVyc29uYWwgKEknbSBndWVzc2luZyB0aGlzIHdvdWxkIG1lYW4gdGhlIHNpbSB3b3VsZCBoYXZlIGEgbmVnYXRpdmUgc2lnbiBhIGxvdCB3aGVuIHRhbGtpbmcgdG8gc29tZW9uZSkgYW5kIGEgbGF6eSBzaW0gd2lsbCBub3QgbGlrZSB0byBjbGVhbiB1cCB0aGVpciBtZXNzZXMuIE92ZXJhbGwsIEknbSBndWVzc2luZyB0aGF0IHRoZSBTaW1zIDMgd2lsbCBiZSBhIGxvdCBiZXR0ZXIgYW5kIGhhdmUgbXVjaCBtb3JlIHRvIG9mZmVyLiAoZWRpdCkgQmVmb3JlIHRoZSBmbG9wIHRoZSBwYWlyIG9mIHRocmVlcyB3aW4gYmVjYXVzZSBhIHBhaXIgaXMgYmV0dGVyIHRoYW4gYSBoaWdoIGNhcmQuIEl0cyBwcmV0dHkgbXVjaCBsdWNrIGFuZCBlaXRoZXIgaGFuZCBpcyBmaW5lLiBJbiB0aGUgbG9uZyBydW4geW91IHdvdWxkIHdhbnQgdGhyZWVzIGV2ZXJ5IHRpbWUsIGFuZCB5b3UsZCBtYWtlIC4wMiUgcHJvZml0LCBidXQgdGhhdCBhbW91bnQgb2YgaGFuZHMgaXNuJ3QgcG9zc2libGUgYW5kIHRoZSBwcm9maXQgaXMgbmVnbGlnaWJsZS4gVGhpcyBvZiBjb3Vyc2UgZG9lc24ndCBpbmNsdWRlIGZvbGQgZXF1aXR5LCBhbG9uZyB3aXRoIG1hbnkgb3RoZXIgZmFjdG9ycy4gVG8gcHV0IGl0IGludG8gc2ltcGxlIHRlcm1zLCBJZiB5b3UgaGF2ZSBBUSBhbmQgeW91IGtub3cgeW91ciBvcHBvbmVudCBoYXMgMzMuIGlmIHRoZSBxdWVzdGlvbiB3YXMgQVEgb3IgOTkgb3Igc29tZXRoaW5nIHRoZSBtYXRoIGlzIHByZXR0eSBzaW1pbGFyIGJ1dCBpdCBjaGFuZ2VzIHRoZSBzZWNvbmQgcGFydCBvZiBteSBhbmFseXNpcyBhIGxpdHRsZS4gU28gaW4gdGhlIEFRIHRvIDMzIHNjZW5hcmlvLjMzIGlzIHN0YXRpc3RpY2FsbHkgYmV0dGVyLCBidXQgSSB3b3VsZCB0YWtlIEFRIDEwIHRpbWVzIG91dCBvZiAxMC4gKEZ1bGwgQW5zd2VyKQpJIG5vdGljZSBhIGJpZyBkaWZmZXJlbmNlIHdpdGggdGhlIDQgcGllY2UgYnV0IGFnYWluIHVwIHRvIHlvdXIgcHJlZmVyZW5jZS4gWW91IG5lZWQgdGhlIDQgcGllY2UgYXQgbmlnaHQgb3IgZWxzZSB5b3Ugd2lsbCBtYWtlIGEgdG9uIG9mIGZsYXNoLiBUaGUgNCBwaWVjZSBhbHNvIGFjdHMgYXMgYSBib29zdGVyIHdoaWNoIHlvdSBtYXkgbmVlZC4KSG93IGRpZCB3ZSBnZXQgdG8gdGhpcyBwb2ludD8gY29tcGxpY2F0ZWQgYW5kLCBhdCB0aGUgc2FtZSB0aW1lLCBraW5kYSBzaW1wbGUuIHRydXRoIGlzIHRoYXQgdGhlIEFtZXJpY2FuIHVuaXZlcnNpdHkgc3lzdGVtIGdvdCBjYXVnaHQgdXAgaW4gTmVvbGliZXJhbCBlY29ub21pYyBwb2xpY2llcyBhcyB3ZWxsIGFzIGEgY3VsdHVyZSBvZiBzcGVuZCwgc3BlbmQsIHNwZW5kIQpBbHNvLCBpZiB5b3Ugd2VhciBoZWF2eSBlYXJyaW5ncywgc3RpY2sgYSBzbWFsbCBzcXVhcmUvY2lyY2xlL292YWwgb2YgYmFuZGFpZCAoanVzdCB0aGUgc3RpY2t5IHBhcnQpIG9uIHRoZSBiYWNrIG9mIHlvdXIgbG9iZSB0byBhZGQgc3VwcG9ydC4gU3RpY2sgdGhlIGVhcnJpbmcgcG9zdCByaWdodCB0aHJ1IGl0LiBJdCBoZWxwcyBwcmV2ZW50IHlvdXIgbG9iZSBmcm9tIHN0cmV0Y2hpbmcgb3V0LCB3aGljaCBjYW4gbWFrZSB5b3UgbG9vayBvbGRlci4KIk9uZSBpbiBzaXggaG9zcGl0YWwgYmVkcyBhcmUgb2NjdXBpZWQgYnkgc29tZW9uZSB3aG8gbmVlZHMgdG8gYmUgaW4gbG9uZyB0ZXJtIGNhcmUgb3IgYXQgaG9tZSBvciBhc3Npc3RlZCBsaXZpbmcsIiBoZSBzYWlkLiAiSXQncyBhIHN5c3RlbSB3aWxkbHkgb3V0IG9mIGJhbGFuY2UuIgpTbHlSZWZlcmVuY2UgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpCdXQgYWZ0ZXIgYSBjb21tdW5pdHkgcmV2aWV3LCBwdWJsaWMgYXJ0IG9mZmljaWFscyBkZWNpZGVkIG9uIHRoZSBjaXR5IG93bmVkIHNpdGUuQW4gaW1hZ2UgZnJvbSB0aGUgcmV2aXNlZCBkZXZlbG9wbWVudCBwZXJtaXQgYXBwbGljYXRpb24gZm9yIDIxMDIgS2VpdGggRHIuIEluIFZhbmNvdXZlciwgd2hlcmUgdGhlIG5ldyBoZWFkcXVhcnRlcnMgZm9yIHRoZSBvcmdhbmljIGZvb2QgY29tcGFueSBOYXR1cmUncyBQYXRoIHdvdWxkIGdvLCBuZXh0IHRvIHRoZSBFYXN0IFZhbiBDcm9zcyBzY3VscHR1cmUuIApIb3RlbCBadWx1ICA1IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KKEZ1bGwgQW5zd2VyKS4gClByaXZhdGUgc2Nob29scyBhcmUgY29tbW9uLCBhbHRob3VnaCB5b3UgY2FuIGZpbmQgcHJvZ3JhbXMgaW4gc29tZSBjb21tdW5pdHkgYW5kIHZvY2F0aW9uYWwgY29sbGVnZXMuIApJIG1ham9yZWQgaW4gZWNvbm9taWNzIGluIHVuZGVyZ3JhZC4gSSB0aGluayBtb3N0IHBlb3BsZSB3b3VsZCBnZXQgbXVjaCBtb3JlIGhhcHBpbmVzcyBhbmQgdXRpbGl0eSBvdXQgb2Ygc2F2aW5nICQzMDAgb3Igc28gb24gdGhlaXIgZ2xhc3NlcyBhbmQgc3BlbmRpbmcgaXQgb24gc29tZXRoaW5nIGVsc2UuIFRoZW4gYWdhaW4sIGJvdGggbXkgd2lmZSBhbmQgSSB0aGluayBzcGVuZGluZyBodW5kcmVkcyBvZiBkb2xsYXJzIG9uIEd1Y2NpIHB1cnNlcyBhbmQgcHJldHR5IG11Y2ggZXZlcnl0aGluZyBlbHNlIGlzIGhvcnJpZmljIHdhc3RlIG9mIG1vbmV5IGFuZCB3b3VsZCByYXRoZXIgc3BlbmQgJDIwIG9uIHRoYXQgc3R1ZmYgb24gdHJpcHMgb3IgY3J1aXNlcyBvciBvdGhlciBsaWZlIGV4cGVyaWVuY2VzOyBWZWJsZW4gYW5kIGNvbnNwaWN1b3VzIGNvbnN1bXB0aW9uIGFuZCBzdWNoLiAKQmFua3JvbGwgTWFuYWdlbWVudC4gSWYgeW91IHdlbnQgYnVzdG8sIHlvdSBvYnZpb3VzbHkgaGF2ZW4gYmVlbiBmb2xsb3dpbmcgYmFua3JvbGwgbWFuYWdlbWVudC4gClRoZSBtb3N0IGxpa2VseSByZXN1bHQgZnJvbSByb2xsaW5nIHR3byBkaWNlIGlzIGEgc2V2ZW4uIFRvIHdpbiBpbiBhICJwb2ludCIgcm9sbCB0aGUgc2hvb3RlciBtdXN0IG5vdyByb2xsIHRoZSBwb2ludCBiZWZvcmUgcm9sbGluZyBhIHNldmVuLiAKT24gdGhlIGVpZ2h0aCB2aXNpdCwgdGhlIHdvbWFuIGFza2VkIEh1ZWhuIHRvIHJlY29tbWVuZCBhIG1hc3NhZ2UgdGhlcmFwaXN0LCBidXQgaGUgaW5zdGVhZCBvZmZlcmVkIHRvIGRvIGl0IGhpbXNlbGYgZGVzcGl0ZSBhY2tub3dsZWRnaW5nIHRoYXQgaXQgd2Fzbid0IGhpcyBzcGVjaWFsdHksIHRoZSBjb21wbGFpbnQgYWxsZWdlcy4gU2hlIGFncmVlZCBiZWNhdXNlIHNoZSB0cnVzdGVkIGhpbSwgaXQgc2FpZC4KTWFueSBvZiB0aGUgc3ViamVjdHMgb2YgdGhlIGJvb2sgd29ya2VkIGluIHRoZSBpbmR1c3RyeSBib3RoIGJlZm9yZSBhbmQgYWZ0ZXIgdGhpcyBtb21lbnRvdXMgZXZlbnQgYW5kIHRoZWlyIHN0b3JpZXMgcmVmbGVjdCBjb21tb24gZXhwZXJpZW5jZXMgb2YgdGhlIHRpbWVzLiAKT2ggYW5kIHRoZXJlIGlzIHRoYXQgb25lIHNlZ21lbnQgb2YgVGhlIENvY2twaXQgd2hpY2ggaXMgYWJvdXQga2FtaWthemUgcGlsb3RzIGFuZCBob3dzIGhvdyBmdWNrZWQgdXAgdGhhdCB3aG9sZSBzaXR1YXRpb24gd2FzLiAKVGV4YXMgSG9sZGVtIGlzIHRoZSBtb3N0IHBvcHVsYXIgdmFyaWFudCBvZiBwb2tlci4gSWYgeW91IGV2ZXIgc2VlIHBva2VyIG9uIHRlbGV2aXNpb24sIGl0J3MgbW9zdCBsaWtlbHkgdGhhdCB5b3UncmUgd2F0Y2hpbmcgYSBUZXhhcyBIb2xkZW0gZ2FtZS4gVGhlIGdhbWUgaXMgYSBjb21iaW5hdGlvbiBvZiBsdWNrIGFuZCBza2lsbCBhbmQgaXQncyB0aGUgdmFyaWFudCB1c2VkIGluIHRoZSBtb3N0IGltcG9ydGFudCBwb2tlciB0b3VybmFtZW50IGluIHRoZSB3b3JsZDogdGhlIG1haW4gZXZlbnQgb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciAoV1NPUCkuCkFueXdheXMsIHRoZXJlIEkgd2FzLCBtaW5kaW5nIG15IGJ1c2luZXNzLCBmaWRkbGluZyB3aXRoIG15IHNxdWF0IHN0YW5jZSBhbmQgd2hhdG5vdCB3aGVuIGEgZ3ltIHNlcnZpY2UgZ3V5IHdhbGtzIHVwIHRvIG1lIGFuZCBvcGVucyB0aGUgY29udmVyc2F0aW9uIHdpdGggIkkganVzdCBnb25uYSBnaXZlIHlvdSBzb21lIHBvaW50ZXJzLiAKSXQgZnVubnkgaG93IHRoaW5ncyBoYXZlIGZsaXBwZWQuIEEgeWVhciBhZ28sIEkgcGxheWVkIG15c3RlcnkgaGVyb2VzIGFsbW9zdCBleGNsdXNpdmVseSwgYmVjYXVzZSBldmVuIHRob3VnaCBJIHJlYWxseSBoYXRlIHRoZSBnYW1lIG1vZGUgKGR1cGxpY2F0ZXMsIHVsdGltYXRlIHN0ZWFtcm9sbCwgZXRjKSwgdGhlIHBlb3BsZSBwbGF5aW5nIGFsbW9zdCBuZXZlciBzYWlkIHNoaXR0eSB0aGluZ3MgaW4gdGhlIGNoYXQuIFRoZSByYXJlIHRveGljIEJTIHdhcyBhbHdheXMgYSBkYXkgb3IgdHdvIGFmdGVyIHRoZSBsb290Ym94ZXMgcmVzZXQsIHdoZW4gYWxsIG9mIHRoZSBjb21wIHBsYXllcnMgd291bGQgY29tZSBpbiB0byBnZXQgdGhlaXIgbG9vdC4gT24gdGhlIG90aGVyIGhhbmQsIFFQIHdhcyBhIG5vbiBzdG9wIGJhdHRsZSBiZXR3ZWVuIHBlb3BsZSB3aG8gcGxheWVkIFFQIGV4Y2x1c2l2ZWx5ICh3aG8gd2FudGVkIHRvIHdpbi9lbmpveSB0aGUgZ2FtZSkgYW5kIHBlb3BsZSB3aG8gd2VyZSBjb21pbmcgZnJvbSBjb21wIHRvIGdvb2YgYXJvdW5kLCBvZnRlbiBtYWtpbmcgaXQgNXY2LgpJIGRvbid0IHdhbnQgaGVyIHRvIHRoaW5rIGkgYW0gdHJ5aW5nIHRvIHRhbGsgaGVyIG91dCBoZXIgZmVlbGluZ3MsIGkgYWxzbyBkb24ndCB3YW50IHRvIG1ha2UgaGVyIHNvdW5kIGd1aWx0eSBvciBhbnl0aGluZyBsaWtlIHRoYXQsIGkgZG9uJ3Qgd2FudCB0byBzb3VuZCBsaWtlIEFuIEFzc2hvbGUgZWl0aGVyLiAKTWFzc2FnaW5nIHRoZSBkZWFsIHRvIGJ1aWxkIGEgZnJhbmNoaXNlClRoZSBuZXh0IHRoaW5nIHlvdSBrbm93LCB5b3UgeWVhcm5pbmcgZm9yIHRoZSBkYXlzIG9mIGJlaW5nIGFibGUgdG8gc2xlZXAgaW4gb3Igc3RheSBvdXQgYWxsIG5pZ2h0Li4gCkNsb3JveCBDTU8gUmV5bm9sZHMgZmluZHMgdHdvIHdheXMgdG8gZmFpbApTaG91bGQgYSBjaGFzc2lzIGdyb3VuZCBiZSBjb25uZWN0ZWQgdG8gdGhlIHBvd2VyIHNvdXJjZSwgaXQgd291bGQgYmUgYSBzdHJhaWdodCBzaG9ydCB0byBncm91bmQgZnJvbSB0aGUgcG93ZXIgc3VwcGx5LiBJZGVudGlmaWNhdGlvbiBvZiBhbGwgdGhlIHdpcmVzIGV4dGVuZGluZyBmcm9tIHRoZSBtb3RvciBzaG91bGQgYmUgaWRlbnRpZmllZCwgYnkgZWl0aGVyIHVzZSBvZiBhbiBvaG0gbWV0ZXIsIGFuZCBpbiBzb21lIGNhc2VzLCB0aGUgb25seSB3YXkgdG8ga25vdyBpcyB0byByZW1vdmUgdGhlIGVuZCBob3VzaW5ncyBhbmQgcGh5c2ljYWxseSBpZGVudGlmeSB3aGVyZSB0aGUgZXh0ZXJuYWwgbGVhZHMgYXJlIGNvbm5lY3RlZCBvbiB0aGUgd2luZGluZ3MuIApJdCBub3QgcHN5Y2hvYWN0aXZlLiAKRGFucyBjZXQgb3V2cmFnZSwgbm91cyBuZSBub3VzIGNvbnRlbnRlcm9ucyBwYXMgZXhjbHVzaXZlbWVudCBkZSBkcmVzc2VyIHVuIGludmVudGFpcmUgbWRpY28gbWFnaXF1ZSBkZSBsYSBmbG9yZSBkb250IEhjYXRlIGVzdCBsYSBtYXRyZXNzZS4gU2ksIGVuIGVmZmV0LCBsZSBqYXJkaW4gZGUgbGEgZGVzc2UgZXN0IGwnYXhlIG1kaWFuIGRlIGNlIHRyYXZhaWwsIGlsIGVzdCBzb3VoYWl0YWJsZSBkZSBwcmNpc2VyIHF1J3VuIGNlcnRhaW4gbm9tYnJlIGQndGFwZXMgcHJhbGFibGVzIGRldnJvbnQgdHJlIGZyYW5jaGllcyBhdmFudCBkZSBwb3V2b2lyIHBudHJlciBhdSBzZWluIGRlIGNlIGphcmRpbi4gQydlc3Qgc3VyIGxhIGJhc2UgZGUgY2V0dGUgdm9sb250IHF1ZSBub3VzIG1ldHRyb25zIGVuIHZpZGVuY2UgbGEgY29ycnVwdGlvbiBkb250IGEgdCB2aWN0aW1lIGxhIGRlc3NlIEhjYXRlIGF1IGZpbCBkZXMgc2ljbGVzLCB1bmUgZGl2aW5pdCBxdSdvbiBhIGFjY3VzIGQndHJlIG1hbGZhaXNhbnRlIGF1IHBvaW50IHF1ZSBsZXMgbm9pcnMgZGVzc2VpbnMgcXUnb24gbHVpIGEgc291dmVudCBwcnRzIG5lIHBvdXZhaWVudCBzZSByYWxpc2VyIHNhbnMgc2VzIHBydGVuZHVzIHRhbGVudHMgZCdlbXBvaXNvbm5ldXNlLiBPciwgbCd0dWRlIG1pbnV0aWV1c2UgZGVzIHBsYW50ZXMgcXVpIHBldXBsZW50IHNvbiBqYXJkaW4gZG1lbnQgY2V0dGUgaWRlOyBlbGxlIGVzdCBhdXNzaSB1biBleGNlbGxlbnQgb3V0aWwgcGVybWV0dGFudCBkZSBudWFuY2VyIGxlcyBwYXJvbGVzIGRlIGNldXggICB0b3VzIGRlcyBob21tZXMgICBxdWkgY2hlcmNocmVudCAgaGFiaWxsZXIgbGEgZGVzc2UgZGVzIG9yaXBlYXV4IGRlIGxhIHZpbGVuaWUsIHF1aXR0ZSAgZW4gZmFpcmUgdW4gYXZhdGFyIGRpYWJvbGlxdWUuCkJ1c2FuIGFuZCBlc2NvcnRzClRoZSBwYXkgY2VpbGluZyBpbiBtYW5hZ2VtZW50IG9yIEJEIHJvbGVzIGlzIHByb2JhYmx5IGhpZ2hlc3QgYXQgbGFyZ2UgY29udHJhY3RvcnMsIGJ1dCBlYXJuaW5nIHRob3NlIGxhcmdlIGJvbnVzZXMgZnJvbSBtdWx0aSBtaWxsaW9uIGRvbGxhciAoc29tZXRpbWVzIHRlbnMgb3IgaHVuZHJlZCBtaWxsaW9uIGRvbGxhcikgY29udHJhY3RzIGlzIGxpa2UgR2FtZSBvZiBUaHJvbmVzLiBJdCB0cmlja3kgd2l0aG91dCBrbm93aW5nIHRoZSBhY3R1YWwgd29yayBPUCBoYXMgYmVlbiBkb2luZyBwcmV2aW91c2x5LCBidXQgSSB0aGluayB3aXRoIDUgeWVhcnMgZXhwZXJpZW5jZSwgT1Agc2hvdWxkIGJlIGxvb2tpbmcgYXQgYSBsZXZlbCAyIHNvZnR3YXJlIG9yIHN5c3RlbXMgZW5naW5lZXIgcG9zaXRpb24gYXQgYXJvdW5kICQ3NWsgb24gdGhlIHNhZmUgc2lkZSwgb3IgYXQgYSBsZXZlbCAzIChlbmdpbmVlciBJSUksICJzdGFmZiBlbmdpbmVlciwiIG9yIGV2ZW4gInNlbmlvciBlbmdpbmVlciwiIGRlcGVuZGluZyBvbiB0aGUgY29tcGFueSkgYXQgJDgwayAkMTAwayBvbiB0aGUgbW9yZSBhbWJpdGlvdXMgc2lkZS4gClRoZSBzYW1lIGlzIHRydWUgb2Ygd2hhdCBjb25zdGl0dXRlcyBhbiBhdHRyYWN0aXZlIG51aXNhbmNlLCBhbHRob3VnaCB0cmFtcG9saW5lcyBhcmUgdGhlIHN0YW5kYXJkIGV4YW1wbGUgbmVhcmx5IGV2ZXJ5d2hlcmUuCkFuZCBoZSBnb2luZyB0byB0dXJuIGRvd24gQlVGRkFMTz8gV2hhdCBhIGNsb3duLiAKS3lyZWFubmlnaHRibG9vZCAgMjAgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KQXN1cmFkbmUgIDQgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpBIFJldmlldyBvZiB0aGUgVGV4YXMgSG9sZCBFbSBQb2tlciBDaGlwIFNldApOb3Qgb25seSB3aWxsIHRoZXkgaGF2ZSBhIHNheSBpbiB0aGVpciBvd24gZmF0ZSwgdGhleSB3aWxsIGhlbHAgZGV0ZXJtaW5lIHRoZSBLaW5nc3RvbiBGbGludCB0dXJ0bGUgcmFjZSBmb3IgZmlyc3QgcGljayBvdmVyYWxsIGFuZCBhbHNvIHRoZSBTYWdpbmF3IFNhdWx0IFN0ZS4gCkluIHRoaXMgdHJlYXRtZW50LCBzbWFsbCBhbW91bnRzIG9mIHRoZSB0cmlnZ2VyIHN1YnN0YW5jZSBhcmUgaW5qZWN0ZWQgaW50byB0aGUgcGF0aWVudC4gCkkgcmVtZW1iZXIgd2hlbiB0aGlzIHRyYWluIHVzZWQgdG8gYmUgZnVuCklmIHlvdXIgc3RhY2sgZ2V0cyB0b28gbG93LCB5b3Ugd2lsbCBiZSBmb3JjZWQgdG8gY2hvb3NlIGEgZ29vZCBzdGFydGluZyBoYW5kIGFuZCBwcm9iYWJseSBiZXQgYWxsIG9mIHlvdXIgY2hpcHMsIGhvcGluZyBubyBvbmUgZWxzZSBoYXMgYSBiZXR0ZXIgaGFuZC4uIApDb21wYW5pZXMgaW5jbHVkaW5nIFRhcGVzdHJ5IChmb3JtZXJseSBDb2FjaCBJbmMuKSBhbmQgTCdPcmFsIFVTQSBmaWxsZWQgMTAgSHVkc29uIFlhcmRzIGZyb20gdGhlIGRheSBpdCBvcGVuZWQgdHdvIHllYXJzIGFnby4gV2FybmVyIE1lZGlhLCBLS1IgYW5kIFdlbGxzIEZhcmdvIFNlY3VyaXRpZXMgYXJlIGNvbWluZyB0byAzMCBIdWRzb24gWWFyZHMuIApUaGVzZSBzb25ncyBhcmUgb24gYW4gYWxidW0gY2FsbGVkICJXYWxtYXJ0IHNvdW5kY2hlY2suIiBUaGUgbGF0dGVyIGZvdXIgc29uZ3MgaGF2ZSAiT3JpZ2luYWwgcGVyZm9ybWFuY2Ugc2VyaWVzIiBpbiB0aGVpciBuYW1lcy4gCiJJIGNhbid0IHB1dCBpdCBpbnRvIHdvcmRzLiAKWW91IHJlYWxseSBkbyBub3QgbmVlZCBtYXBzIGlmIHlvdSBoYXZlIGd1dGhvb2tzIGFuZCBhIGJhdHRlcnkgcGFjay4KT24gbXkgd2FsayBiZXR3ZWVuIG15IG9mZmljZSBhbmQgdW5pb24gc3RhdGlvbiBpbiBDaGljYWdvLCBJIHBhc3MgbXVsdGlwbGUgcGVvcGxlIGFza2luZyBmb3IgbW9uZXkgZm9yIGZvb2QuIEV2ZXJ5ZGF5LCBtb3JuaW5nIGFuZCBldmVuaW5nIHJ1c2ggaG91ci4gClRoYXQgZG9lc24ndCBoYXBwZW4gc28gbXVjaCBhbnltb3JlLCBidXQgaWYgSSB0YWtlIGl0IGR1cmluZyB0aGUgZGF5IEkganVzdCBmZWVsIHdlaXJkIGluIG15IGJvZHkgZm9yIGEgZmV3IGhvdXJzLiBTb21lIGhlYWRhY2hlcyB3aGVuIEkgZmlyc3Qgc3RhcnRlZCBpdCwgYnV0IHRoYXQgc3RvcHBlZCBhZnRlciBhIGZldyB3ZWVrcy4gCkkgdGhpbmsgd2UgY2FuIHNlbGwgc29tZSBpbmhlcml0ZWQgamV3ZWxyeSB0byBjb3ZlciBtb3N0IG9mIHRoZSAkLiAKV2hhdCBpcyBpbnRlcmVzdGluZyBhYm91dCB0aGlzIHN0b3J5IGlzIG5vdCB0aGUgZmFjdCB0aGF0IHRoZXNlIHR3byBzZWxmIGFic29yYmVkIDIyIHllYXIgb2xkcyBhcmUgZ2V0dGluZyBtYXJyaWVkIGFuZCB0aGVyZWZvcmUgd2lsbCBoYXZlIGEgMTAwMHBsdXMgbW9yZSByaWdodHMgYW5kIHByaXZpbGVnZXMgdGhhbiB0aGUgdW5tYXJyaWVkIG1ham9yaXR5IG9mIEFtZXJpY2Fucy4gdGhhdCBvbGQgbmV3cy4gaW50ZXJlc3RpbmcgaXMgdGhlIG1vcmFsIG91dHJhZ2Ugb3ZlciBwdWJsaWMgZmlnaHRpbmcgYmV0d2VlbiBjb3VwbGVzLiAiZXhwZXJ0cyIgb24gbWFycmlhZ2UsIHdlIGxlYXJuIHRoYXQgY291cGxlcyBuZWVkIHRvIHB1dCB1cCBhIHB1YmxpYyBmYWNlIG9mIGhhcm1vbnksIHRvIHNob3cgdGhlbXNlbHZlcyBhcyBhIHVuaXRlZCBmcm9udCwgcmVnYXJkbGVzcyBvZiB3aGF0IHJlYWxseSBnb2luZyBvbi4KU2ltaWxhcmx5LCBkaXN0YW5jZXMgYXJlIG9mdGVuIGdpdmVuIGFzIChmb3IgZXhhbXBsZSkgIm1lZ2FwYXJzZWNzL2giIHdoZXJlICJoIiBpcyBhIHNjYWxpbmcgZmFjdG9yIHRoYXQgZGVwZW5kcyBvbiB5b3VyIGNob3NlbiB2YWx1ZSBmb3IgdGhlIEh1YmJsZSBjb25zdGFudCwgc2V0IHVwIHNvIHRoYXQgaCBpcyBhbHdheXMgYXJvdW5kIDFpc2ggKG1heWJlIDAuNSAyLCBkZXBlbmRpbmcgb24gdGhlIHNwZWNpZmljIGRlZmluaXRpb24pLiBTbyB5b3UgY2FuIHJlYWQgb3V0IGEgdmFsdWUgdGhhdCB2YWd1ZWx5IGluIHRoZSByaWdodCBiYWxscGFyayB0byBnaXZlIHlvdSBhIHNlbnNlIG9mIHRoZSBkaXN0YW5jZSwgYnV0IGZvciBhY3R1YWwgY2FsY3VsYXRpb25zIHlvdSBjYW4gcGx1ZyBpbiB5b3VyIGZhdm91cml0ZSB2YWx1ZSBmb3IgdGhlIEh1YmJsZSBjb25zdGFudCBhbmQgZ2V0IGEgbW9yZSBhY2N1cmF0ZSBkaXN0YW5jZS4uIApUaGUgcmlkZSB3aWxsIGZvbGxvdyB0cmFpbHMgdGhyb3VnaCB0aGUgRGl4aWUgTmF0aW9uYWwgRm9yZXN0IGFuZCBDZWRhciBCcmVha3MgTmF0aW9uYWwgTW9udW1lbnQgYW5kIHdpbGwgaW5jbHVkZSBmaXZlIHN0b3BzIHRvIHBpY2sgdXAgYW5vdGhlciBwbGF5aW5nIGNhcmQuIApUaGF0IHNhaWQsIEkgdGhpbmsgc2V2ZXJhbCBtb3JlIGNoYW5nZXMgbmVlZCB0byBiZSBtYWRlLiAKR29vZCBvbiB5b3UgZm9yIGhlbHBpbmcgYSBmcmllbmQgb3V0IG9mIGEgYmFkIHNpdHVhdGlvbi4gWU9VIGRpZCB0aGF0LiBUaGFua3MgZm9yIGJlaW5nIGEgY29vbCBodW1hbiBiZWluZy4gVGhvdWdoIEknbSBub3Qgc3VyZSBob3cgeW91IG1hbmFnZWQgaXQgd2l0aG91dCBoYXZpbmcgYW4gb2JqZWN0aXZlIG1vcmFsIGNvZGUgL3MuCklmIHlvdSBhcmUgYWZ0ZXIgaGlnaGVyIHN0YWtlIHBva2VyIGNoaXBzIHRoYXQgYXJlIGNvbW1vbiB0byBMYXMgVmVnYXMsIHlvdSB3aWxsIHdhbnQgdG8gc2VlayBvdXQgcHJvZHVjdHMgdGhhdCBhcmUgcmVmZXJyZWQgdG8gYXMgInBsYXF1ZXMiLiBUaGVzZSBhcmUgc2ltaWxhciB0byBjaGlwcyBhcyBmYXIgYXMgZnVuY3Rpb25hbGl0eSwgYnV0IHRoZXkgZGlmZmVyIGluIGFwcGVhcmFuY2UuIFlvdSB3aWxsIGZpbmQgdGhhdCB0aGVzZSBhcmUgcmVsYXRpdmVseSBsYXJnZSBpbiBzaXplLiBJbiBhZGRpdGlvbiB0byB0aGlzLCBpbnN0ZWFkIG9mIGJlaW5nIGNpcmN1bGFyIHNoYXBlZCwgdGhleSBhcmUgbm9ybWFsbHkgc2hhcGVkIGluIGEgcmVjdGFuZ3VsYXIgZmFzaGlvbi4KV2hldGhlciB5b3Ugc2l0IGRvd24gZm9yIGEgZ29vZCBvbGQgZmFzaGlvbmVkIGdhbWUgb2YgcG9rZXIgZXZlcnkgd2Vlaywgb3IgeW91IGRvIGl0IG9uY2UgaW4gYSBibHVlIG1vb24sIHRoZXJlIGlzIGEgZ29vZCBjaGFuY2UgdGhhdCB5b3Uga25vdyBhYm91dCBhIGNlcnRhaW4ga2luZCBvZiBleGNpdGVtZW50IHRoYXQgb25seSBjb21lcyB3aGVuIHlvdSBhcmUgYWJvdXQgdG8gcGxheSBzb21lIGNhcmRzISBJZiB5b3UgYXJlIHNvbWVvbmUgd2hvIGxvdmVzIHRoZSBwb2tlciwgbm8gb25lIG5lZWRzIHRvIHRlbGwgeW91IGFib3V0IHRoZSB0aHJpbGwgdGhhdCBnb2VzIGFsb25nIHdpdGggZ2V0dGluZyB5b3VyIGNhcmRzIGRlYWx0IG91dCB3aXRoIG9uZSBvZiB0aGUgQmVzdCBBdXRvbWF0aWMgQ2FyZCBTaHVmZmxlcnMsIGNoZWNraW5nIG91dCB5b3VyIGhhbmQgYW5kIHJlYWxpemluZyB0aGF0IHlvdSBoYXZlIGEgZnVsbCBob3VzZS4KRnJvbSBteSBleHBlcmllbmNlIHRha2luZyAyIE5PTFMgY2xhc3NlcyBzbyBmYXIgKFdGQSBwYXJ0aWFsIFdGUiksIHRoZXkgZG8gdGhyb3cgQSBMT1Qgb2YgaW5mb3JtYXRpb24gYXQgeW91IHRvIGRpZ2VzdCBpbiBhIHNob3J0IHRpbWUgcGVyaW9kICgyIG9yIDEwIGRheXMpLiBBbmQgYXQgbGVhc3QgZm9yIFdGUiwgdGhlcmUgYXJlIGEgY291cGxlIGRheXMgd2hlcmUgeW91IGFyZSBpbiB0aGUgY2xhc3Nyb29tIHNldHRpbmcgZm9yIHVwIHRvIDE0IGhvdXJzIChtaW51cyBicmVha3MpLiBJIGZlZWwgbGlrZSB0aGUgY2xhc3MgaXMgYWxtb3N0IGdvaW5nIHRvbyBmYXN0LCBidXQgSSB1bmRlcnN0YW5kIHRoZXkgb25seSBoYXZlIGEgc2hvcnQgd2luZG93IHRvIGNvdmVyIG1hbnkgdG9waWNzLiAKQSByb3VnaCBlcXVpdmFsZW50IGluIEVuZ2xpc2ggd291bGQgYmUgYSByZXF1aXJlbWVudCAoYXQgbGVhc3QgY3VsdHVyYWxseSwgYXMgZmFyIGFzIEkga25vdyBub3QgbGVnYWxseSksIHRvIG1lbnRpb24gc29tZXRoaW5nIGxpa2UgInRoZSBjaXR6ZW50cmVzcyIgZXRjLiAKSGUgYWxtb3N0IGFsd2F5cyBkb25rIGJldHMgZnJvbSBPT1AgaWYgaGUgY29ubmVjdHMgd2l0aCB0aGUgYm9hcmQsIGFuZCBoZSB3aWxsIGNhbGwgeW91IGRvd24gb2Z0ZW4gd2l0aCBtaWRkbGUgcGFpcnMgYWNyb3NzIG11bHRpcGxlIHN0cmVldHMgZXZlbiB3aXRoIG92ZXJzIG9uIHRoZSBib2FyZC4gCkogSW5zdXIgTWVkLiAyMDA4OzQwKDMgNCk6MjE4IDI4Li4gCklmIHdlIGRyYXcgYSBjYXJkIGZyb20gYSBzdGFuZGFyZCBwYWNrLCB3aGF0IGlzIHRoZSBwcm9iYWJpbGl0eSB0aGF0IHdlIHdpbGwgZ2V0IGEgcmVkIGNhcmQgd2l0aCBmYWNlIHZhbHVlIHNtYWxsZXIgdGhhbiA1IGJ1dCBncmVhdGVyIHRoYW4gMj8KQSBjbGFzc2ljIHIgZGVsaWNhdGVseSBicm93bmVkIGluIGEgc21hbGwgc2tpbGxldCBhbmQgY3V0IGludG8gc2VydmluZyB3ZWRnZXMgYWxvbmdzaWRlIGEgZHJpZnQgb2YgY3IgZnJhIFNtb2tlZCBjaGVkZGFyIHdhZmZsZXMsIGNyaXNwIGJhY29uIGFuZCBzbGltIHNhdXNhZ2UsIGFsbCBzZXJ2ZWQgd2l0aCBmcmVzaCBjcmFuYmVycnkgcGlzdGFjaGlvIGJyZWFkIGF0IGEgZ2VuZXJvdXNseSBwcm9wb3J0aW9uZWQgd2hpdGUgdGFibGUuLiAKSW4gdGhlIGJhdHRsZSBhZ2FpbnN0IENsYXVkaWNvLCB0aGUgaHVtYW4gcGxheWVycyByYWNrZWQgdXAgbW9yZSB0aGFuICQ3MDAsMDAwIG92ZXIgODAsMDAwIGhhbmRzLCB3aW5uaW5nIGFsbW9zdCBldmVyeSBkYXkgb2YgdGhlIHRvdXJuYW1lbnQuClRoZXJlIGFyZSBvdGhlciBleGFtcGxlcyB3aGVyZSBKdXN0aW4gVHJ1ZGVhdSBnb3Zlcm5tZW50IGhhcyBnaXZlbiBncmFudHMgdG8gaGlyZSBwZW9wbGUgZm9yIGdyb3VwcyB0aGF0IGFyZSwgeW91IGtub3csIGFkdm9jYXRpbmcgZm9yIHRoZWlyIG93biBwYXJ0aWN1bGFyIGlkZW9sb2d5LCBzcGVjaWZpY2FsbHkgZmlnaHRpbmcgYWdhaW5zdCB0aGluZ3MgbGlrZSBwaXBlbGluZXMgYW5kIGJ1aWxkaW5nIG91ciBpbmZyYXN0cnVjdHVyZSB0byBiZSBhYmxlIHRvIGdldCBvdXIgZW5lcmd5IHRvIGludGVybmF0aW9uYWwgbWFya2V0cy4iVGhhdCBib2xkZWQgcGFydCBpcyBlc3BlY2lhbGx5IHNoYWR5LiBIZSBpbXBseWluZyBUcnVkZWF1IGlzIHN0ZWFsaW5nIHRheCBwYXllcnMgbW9uZXkuSSBkb24gYmVsaWV2ZSBTY2hlZXIgbWFuYWdlZCB0byBub3QgaGVhciB0aGUgcGFydCBhYm91dCBjaGlsZCBzYWNyaWZpY2UuIEkgdGhpbmsgaGUgYXZvaWRlZCBkaXJlY3RseSByZXNwb25kaW5nIGl0LCBhbmQgdXNlZCBhIGhvcnJpYmxlLCB1bnRydWUgY29uc3BpcmFjeSB0aGVvcnkgdG8gaGlzIHBvbGl0aWNhbCBhZHZhbnRhZ2UuYXdieDU4ICAyIHBvaW50cyAgc3VibWl0dGVkIDEzIGhvdXJzIGFnb1RoZSBzbyB3aGF0IHlvdSBsb3ZlIHRvZ2V0aGVyIGFkdmljZSBpcyBicmlsbGlhbnQuIApHdWNjaWZlciAyLjAgd2FzIGFuIGFsaWFzIGZvciBhIEdSVSBhZ2VudC4gCkFsZXJ0cyBwYXIgcGx1c2lldXJzIGFkaHJlbnRzIGF1IHN1amV0IGRlIGxhIHRycyBtYXV2YWlzZSB0ZW51ZSBkZSBjZXR0ZSBzdXByZXR0ZSwgbm91cyB5IGF2b25zIGZhaXQgdW4gdG91ciB1biBsdW5kaSBtYXRpbiBpbCB5IGEgdW5lIHBldGl0ZSBxdWluemFpbmUgZGUgam91cnMuIE5vdXMgeSBhdm9ucyB0cm91diBjZSBqb3VyIGwgdW5lIGJvbm5lIHF1YXJhbnRhaW5lIGRlIGRpZmZyZW50cyBwcm9kdWl0cyBmcmFpcyBwcmltcyAoZW4gbXVsdGlwbGVzIGV4ZW1wbGFpcmVzKSwgZGUgbGEgY2hhcmN1dGVyaWUgZW4gcGFzc2FudCBwYXIgZGVzIHBsYXRzIGN1aXNpbnMgZXQgZGVzIHByb2R1aXRzIGxhaXRpZXJzLiBOb3VzIGRjb3V2cmlvbnMgYXZlYyB1biBjZXJ0YWluIGVmZmFyZW1lbnQgZGVzIGRhdGVzIGRlIHByZW1wdGlvbiBkcGFzc2VzIHBvdXIgY2VydGFpbmVzIGRlIDEwIGpvdXJzISBVbmUgc2FsZXQgcGFydGljdWxpcmUgZGFucyBsZXMgYWxsZXMsIGRlcyBiYWNzIHN1cmdlbHMgb3V2ZXJ0cyBldCBtYWwgY2hhcmdzLCB1bmUgYWJzZW5jZSBkZSB0aGVybW9tdHJlIHBvdXIgdnJpZmllciBsYSB0ZW1wcmF0dXJlLiBVbiBjb25zdGF0IGltcHJlc3Npb25uYW50LiBNYWlzLCBjb21tZSBub3VzIHJwb25kYWl0IGFsb3JzIGxlIGdyYW50IDogIGljaSwgYydlc3QgQmFyYnMgISAuIFRvdXQgZW4gYWNjZXB0YW50IGRlIHJldGlyZXIgbGVzIGZhbWV1eCBwcm9kdWl0cy4KT25lIG9mIHRoZSB0dXRvcmlhbHMgbWVudGlvbnMgdGhhdCBlbmVtaWVzIHNjYWxlIG9mZiB5b3VyIHBpbG90IGxldmVsIGFuZCB5b3VyIGdlYXIgc2NvcmUuIApUaG9zZSAkNTAwMCwgJDEwLDAwMCwgJDE1LDAwMCBjaGVja3MgZG9uJ3QgZ2V0IG1lIGdvaW5nLiBJIHNob3VsZCBiZSBjcmFua2luZyAkMTAwLDAwMCsgcGVyIHllYXIgaW5jb21lIHdpdGhvdXQgYSBzZWNvbmQgdGhvdWdodC4gCjYpIFVzZSBqZWxseSBiZWFucyBpbnN0ZWFkIG9mIHBva2VyIGNoaXBzIGZvciBwZW5ueSBhbnRlIHBva2VyLiBKZWxseSBiZWFucyBhcmUgbXVjaCBiZXR0ZXIgdGhhbiB1c2luZyBtYXRjaHN0aWNrcyBzaW5jZSB5b3UgY2FuIGFzc2lnbiB2YWx1ZXMgdG8gZGlmZmVyZW50IGNvbG9yZWQgYmVhbnMuCkJ1eSB5b3VyIGdhbWUgZGF5IEN1YnMgZ2VhciBvbiBsaW5lLCBhcyBpdCB3aWxsIGJlIDUwMHggbW9yZSBleHBlbnNpdmUgYXQgV3JpZ2xleSwgY29uc2lkZXJpbmcgeW91IHdpbGwgbGlrZWx5IGhhdmUgb24gYSBzd2VhdHNoaXJ0IGFuZCBjb2F0LCBidXkgYSBDdWJzIGhhdCByYXRoZXIgdGhhbiBhIFQgc2hpcnQuIFRoZXJlIHdpbGwgYmUgZ3V5cyBvdXRzaWRlIHRoZSBzdGFkaXVtIHNlbGxpbmcgcGVhbnV0cyBhbmQgd2F0ZXIgaWYgeW91IHdhbnQgdGhhdC4sIHRoZXkgYXJlIGFsd2F5cyB0aGVyZSBhbmQgYXJlIGxlZ2l0LCB0aGV5IGFyZW4ndCBnb2luZyB0byByb2IgeW91LiAKRXMgd3VyZGUgbmljaHQgdW0gZmluYW56aWVsbGUgVW50ZXJzdHR6dW5nIGJlaSBkZW4gcGFsbWVyaXNjaGVuIEJlaHJkZW4gYW5nZXN1Y2h0LCBpbSBHZWdlbnRlaWwsIGFsbGUgQXVzZ2FiZW4gd2VyZGVuIGF1cyBTcGVuZGVuIGZpbmFuemllcnQuLiAKTm90IGEgY29wIGJ1dCB3YXMgc2NyZXdpbmcgYSBkaXNwYXRjaCBsYWR5IChzaGUgcmVzcG9uZGVkIHRvIDkxMSBjYWxscykgd2hvIHRvbGQgbWUgaG93IHRvIGRvIHRoZSBwZXJmZWN0IGNyaW1lIGZyb20gaGVyIG9ic2VydmF0aW9ucyBvZiB0aGUgcG9saWNlIGluIGhlciB0b3duOgpJZiBuZWl0aGVyIHBsYXllciBoYXMgYSBoaWdoZXIgaGFuZCB0aGVuIHRoZSBwb3QgaXMgc2ltcGx5IHNwbGl0LiAoRnVsbCBBbnN3ZXIpLiAKUG9rZXIgaGFzIGJlY29tZSBwb3B1bGFyIGluIHRoZSByZWNlbnQgZmV3IHllYXJzLiBJbiBhbGwgdGhlIGxlYWRpbmcgY2l0aWVzIG9mIHRoaXMgd29ybGQsIHBlb3BsZSBhcmUgaW50ZXJlc3RlZCBhYm91dCB0aGlzIHdvbmRlcmZ1bCBnYW1lLiBOb3cgcG9rZXIgaGFzIGJlY29tZSB0aGUgbW9zdCBwb3B1bGFyIGdhbWUgaW4gdGhlIGNhc2lub3MuIApKZSBzdWlzIHJlcGFydGllIGF2ZWMgZGV1eCBmYWJ1bGV1eCBtaWVscyBkZSBzYXJyYXNpbiBsb2NhdXggKGV0IHNhbnMgYXVjdW5lIGFtZXJ0dW1lIHF1ZSBqJ2F2YWlzIHBhcmZvaXMgdHJvdXZlIGRhbnMgY2V0dGUgdmFyaXQgZGUgbWllbCkgZXQgZGVzIGdyYWlucyBzb3VmZmxzIGV0IGNyb3VzdGlsbGFudHMsIHF1ZSBqZSBkaXNzbWluZSBkZXB1aXMgc3VyIGRlcyBib2xzIGRlIHBldGl0IGRqZXVuZXIgb3UgZGVzIHNhbGFkZXMuLiAKRGVubmlzOiBCdXR0b24gYW5kIEFsb25zbyBzdGF5aW5nIE1jTGFyZW4gYm9zcyBSb24gRGVubmlzIHNheXMgaGUncyBrZWVwIHRoZSBzYW1lIHJhY2UgbGluZSB1cCBpbiAyMDE2CkRpZSBwaHlzaW9zd2lzcyBoYXQgc2ljaCBkYWZyIGVpbmdlc2V0enQgZGFzcyBkaWVzZXIgTXVsdGlwbGlrYXRvciAoa2FudG9uYWxlciBUYXhwdW5rdHdlcnQpIGZyIGFsbGUgTWl0Z2xpZWRlciBlcmhodCB3aXJkLiAKIldoZW4geW91J3JlIHlvdW5nIGFuZCBhbiBpbXByZXNzaW9uYWJsZSBnb2FsaWUsIHRoZSBnb2FsaWUgdGhhdCdzIGluIGZyb250IG9mIHlvdSwgeW91IHN0YXJ0IHRvIGFic29yYiBhIGxvdCBvZiB0aGF0LiBBbmQgSSdtIGp1c3QgZm9ydHVuYXRlIHRvIGhhdmUgaGltIG91dCB0aGVyZSBhbmQgbGVhcm4gZnJvbSBoaW0gYW5kIHdhdGNoIGhpbSBvbiBhIGRhaWx5IGJhc2lzLCIgU3BhcmtzIHNhaWQuICJCdXQgYXQgdGhlIHNhbWUgdGltZSwgaXQgbWFrZXMgdGhlIGNvbXBhcmlzb24gdGhhdCBtdWNoIG1vcmUgY2hhbGxlbmdpbmcuIApBbHNvLCBtaWxsaW9uYWlyZSBhdGhsZXRlcyBzdWNrIHNvIGJhZCBhdCBwaWNraW5nIHVwIGNoaWNrcyB0aGV5IHJlc29ydCB0byBwb3Juc3RhcnMgb24gdHdpdHRlciwgdGhpbmtpbmcgdGhleSBiZSBhbiBlYXN5IGZ1Y2s/IEJpZyBzd2luZ3MgY2FuIGxlYWQgdG8gYmlnIG1pc3Nlcy4gSSB0aGluayBpdCBmdW5ueSB3aGVuIHNoZSBkb2VzIHRoaXMsIGFuZCBJIGhvbmVzdGx5IGRvbiBrbm93IHdoeSBwZW9wbGUgZ2V0IG1hZCBhdCBoZXIgZm9yIGl0LiBZb3UgRE0gYSBmdWNraW4gcG9ybiBzdGFyIG5vdCBvbmNlLCBub3QgdHdpY2UsIGJ1dCBGSVZFIHRpbWVzIHdpdGggbm8gcmVzcG9uc2UuIE93biB1cCBkdWRlISEKVGhpcyBtYXkgYmUgaXQ6IFRoZSBuZXh0IFNwbGludGVyIENlbGwgZ2FtZSBjYW4gYmUgYSBNaWNyb3NvZnQgRXhjbHVzaXZlLCB0aHVzIGdldHRpbmcgbmVlZGVkICJyZXNvdXJjZXMiIGZyb20gTWljcm9zb2Z0LCBub3QgVWJpc29mdCBvbmx5LiAKR2FyeSBoZWxkIGEgMTUsNDYwLDAwMCB0byAxMSw4MDUsMDAwIGNoaXAgYWR2YW50YWdlIG92ZXIgaGlzIG9wcG9uZW50IGFuZCBoZSBuZXZlciByZWxpbnF1aXNoZWQgdGhlIGxlYWQuIFRoZSBmaW5hbCBoYW5kIHNhdyBHZW5ldCBwdXQgYWxsIGhpcyBjaGlwcyBpbnRvIHRoZSBwb3Qgd2l0aCBLaW5nIFRlbiBhbmQgR2FyeSBjYWxsZWQgd2l0aCBhIHBhaXIgb2Ygc2V2ZW5zLiBHZW5ldCB3ZW50IGFoZWFkIHdoZW4gYSAxMCBjYW1lIGRvd24gYXMgb25lIG9mIHRoZSBmaXJzdCB0aHJlZSBjb21tdW5pdHkgY2FyZHMuIEJ1dCB3aXRoIHR3byBjYXJkcyB0byBjb21lLCBHYXJ5IGhpdCBhbm90aGVyIDcgdG8gZ2l2ZSBoaW0gdGhlIHdpbm5pbmcgaGFuZC4KUHJlZ25hbnQgd29tZW4sIG1hbnkgY2hpbGRyZW4gYW5kIHNvbWUgcGVvcGxlIHdpdGggaWxsbmVzc2VzIGNhbm5vdCB1c2UgY2VydGFpbiBlc3NlbnRpYWwgb2lscy4gCkhvd2V2ZXIsIHdoZW4geW91IGNhbGwgdGhlbSB0byBleHBsYWluIHlvdXIgc2l0dWF0aW9uLCB0aGV5IGFyZSBqdXN0IG5vdCBpbnRlcmVzdGVkIGluIHlvdS4gVGhleSBsZWF2ZSB5b3Ugd2l0aCBhIG1lc3NhZ2UgbGlrZSB3aWxsIGdldCBpbnRvIHlvdXIgYWNjb3VudCBvdmVyIHRoZSBuZXh0IGZvdXIgd29ya2luZyBkYXlzIEFmdGVyIHRoYXQsIHRoZSB3aG9sZSBtb250aCBwYXNzZXMuLiAKSGVyIGZhdGhlciBpcyBvZiBtaXhlZCBoZXJpdGFnZSAgIGhhbGYgSmFtYWljYW4gaGFsZiBDaGluZXNlLCB3aGlsZSBoZXIgbW90aGVyIGlzIGEgYmxhY2sgSmFtYWljYW4uIApEZWxpZ2h0ZnVsbHlxdWlya3kgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ28KQUZBSUsgaGUgaGFzIG5vIGRlYnRzIG9yIGJpbGxzIHRoYXQgd2UgYXJlIGF3YXJlIG9mLiAKSSBmaW5kIGl0IGJlc3QgdG8gdXNlIHdob2xlIHBlZWxlZCB0b21hdG9lcyBhcyB0aGV5IGNvbnRhaW5lZCBtb3JlIHRvbWF0b2VzIHBlciBjYW4gdGhhbiBwcm9jZXNzZWQgb25lcyhjaG9wcGVkLCBwdXJlZCwgZXRjLiAKQ2hpbGRyZW4gd2VyZSBoZWFsdGh5IGJlZm9yZSB2YWNjaW5lcyB5YSBrbm93LiAKSnVhbiBUcnVxdWkgcG9zZXMgZm9yIGEgcGhvdG8gd2l0aCBoaXMgYmFieSBkYXVnaHRlciBJc2FiZWxsYSBNYXJpZSBhbmQgd2lmZSBMb3JlbmEgYWZ0ZXIgc2hlIGhhZCBhIEMgc2VjdGlvbiBhdCBTdC4gUGF1bCdzIEhvc3BpdGFsIGluIGRvd250b3duIFZhbmNvdXZlciBvbiBXZWRuZXNkYXksIEF1Zy4gCkRlciBzY2h3ZWl6ZXJpc2NoZSBWZXJlaW4gTkVUQVAgKE5ldHdvcmsgZm9yIEFuaW1hbCBQcm90ZWN0aW9uKSBoYXQgYW5nZWJvdGVuIG1pdCBlaW5lbSBUZWFtIGZyIGVpbmUgV29jaGUgYXVmIGRpZSBJbnNlbCB6dSBrb21tZW4gdW0gaGllciBlaW5lIHRpZXJyenRsaWNoZSBBa3Rpb25zd29jaGUgZHVyY2h6dWZocmVuIG1pdCBLYXN0cmF0aW9uZW4gdW5kIFBhcmFzaXRlbmJlaGFuZGx1bmdlbiB2b24gc3RyZXVuZW5kZW4gVGllcmVuLiBEaWVzIHdyZSBlaW5lIHdpbGxrb21tZW5lIGtvc3RlbmZyZWllIEhpbGZlLCBkaWUgTGEgUGFsbWEgZHJpbmdlbmQgYnJhdWNoZW4ga25udGUuIFVtc28gdW52ZXJzdG5kbGljaGVyIGlzdCwgZGFzcyBkaWVzZSBBa3Rpb24gYW4gZGVyIEJyb2tyYXRpZSBzY2hlaXRlcm4ga25udGUuCkluIE5hemkgR2VybWFueSwgRXJuc3QgUm9obSwgb25lIG9mIEhpdGxlciBjbG9zZXN0IGNvbXJhZGVzIGFuZCBsZWFkZXIgb2YgdGhlIFNBLCB3YXMgb3Blbmx5IGdheS4gCjIgNjYpLiAKRGUgbGEgTGV0dHJlIGRlIE0uIApUaGUgb25seSBjYWtlIHBhbiBJIGhhdmUgaXMgb25lIHRoYXQgbG9va3MgbGlrZSB0aXRzLiAKIlRoZSBtZWRpY2FsIHN0dWRlbnRzIHdlcmUgZmluZGluZyB0aGVpciBwYXRpZW50cyBpbiB0aGUgdGhyb2VzIG9mIGV2aWN0aW9uLCIgc2FpZCBCaXNzb25uZXR0ZS4gIlRoZXkgd2VyZSBiZWluZyB0b2xkIGJ5IHRoZWlyIGxhbmRsb3JkcyB0aGF0IHRoZXkgaGFkIHRvIG1vdmUgYmVjYXVzZSB0aGUgaG91c2VzIHdlcmUgYmVpbmcgYm91Z2h0IHVwIGJ5IHRoZSB5b3VuZyBwcm9mZXNzaW9uYWxzIHdobyB3YW50ZWQgdG8gbGl2ZSBpbiB0aGUgU291dGggRW5kLiIKR2xpdHRlclNvbWUgcG9saXNoZXMgaGF2ZSAnZ2xpdHRlcicgICB0aW55IGZyYWdtZW50cyBzdXNwZW5kZWQgaW4gdGhlIHBvbGlzaCB0aGF0IHR3aW5rbGUgaW4gdGhlIGxpZ2h0LiAKIkJlZm9yZSB0aGVyZSB3ZXJlIGNsYXNzZXMsIHRoZXJlIHdlcmUgaW5zdHJ1Y3Rpb25hbCB2aWRlb3Mgb24gWW91VHViZSwiIEhlYmFyZCBzYXlzLiAKVGhlIHBvc3RlcnMgb24gdGhpcyBhcnRpY2xlIHNlZW0gZXh0cmVtZWx5IHNlbGYgYXdhcmUgYW5kIGFydGljdWxhdGUgaW4gdGhlaXIgdGhvdWdodHMgYW5kIGZlZWxpbmdzLiBJIGFza2VkIGhpbSB3aGF0IGhlIHdhbnRlZCBmcm9tIG1lLCBhbmQgYXQgZmlyc3QgaGUgc2FpZCBteSBjb21wYW55LCBhbmQgd2hlbiBJIGFza2VkIGhpbSBpcyB0aGF0IGFsbCwgaGUgc2FpZCBubyBoZSB3YW50ZWQgaXQgdG8gYmVjb21lIG1vcmUgdGhhbiB0aGF0LiAKSGVscCB5b3VyIHBhcnRuZXIgc3RheSBhd2F5IGZyb20gYmVlciwgd2luZSwgd2luZSBjb29sZXJzLCBsaXF1b3IgYW5kIG1peGVkIGRyaW5rcy4gWW91IGNhbiBoZWxwIGJ5IGdpdmluZyBoZXIgaGVhbHRoeSBqdWljZXMgYW5kIHdhdGVyIHRvIGRyaW5rIG9yIGJ5IG1ha2luZyBmdW4gbm9uYWxjb2hvbGljIGRyaW5rcyB0b2dldGhlci4gSWxsZWdhbCBkcnVncyBjYW4gaHVydCB5b3VyIGJhYnkuIEdldCBoZWxwIGZvciB5b3VyIHBhcnRuZXIgaWYgc2hlIHVzZXMgaWxsZWdhbCBkcnVncy4gUHJlc2NyaXB0aW9uIGRydWdzIGFuZCBvdmVyIHRoZSBjb3VudGVyIG1lZGljaW5lcyBjYW4gYWxzbyBodXJ0IHlvdXIgYmFieS4gCkZyb20gb3RoZXIgZG9jdW1lbnRzIHdlIGNhbiBleHBlY3QgdG8gYmUgNiB0byAxMCBwZW9wbGUgaW4gdGhpcyBjZWxsLiBXZSBwdWxsZWQgdGhlaXIgTFVEcyBhbmQgZm91bmQgbm8gYWJub3JtYWwgcGhvbmUgdXNhZ2UgdGhhdCB3b3VsZCBzdWdnZXN0IHRoYXQgdGhleSBhcmUgaG9zdGluZyBndWVzdHMuLiAKV2UgaGF2ZSBub3cgYmVlbiBtYXJyaWVkIDE1IHllYXJzIGFuZCBoYXZlIGEgYmVhdXRpZnVsIGZhbWlseS4gSGUgbmV2ZXIgcHV0IGhpcyBwYXJlbnRzIGJlZm9yZSBtZSBhbmQgSSBoYXZlIGFsd2F5cyBiZWVuIGxveWFsIHRvby4uIApEYXZpZDogV2hhdCB1cCBldmVyeWJvZHkgdGhpcyBpcyBEYXZpZEdyZWVuZSBoZXJlIHdpdGggU2NvdHQgVHJlbmNoLCB5b3VyY28gaG9zdCBmb3IgdGhlIEJpZ2dlclBvY2tldHMgcG9kY2FzdHRvZGF5LiBZb3UgYXJlIGluIGZvciBhIHRyZWF0LiBXZSBoYWRvbmUgb2YgdGhlIG1vc3QgZXhjZXB0aW9uYWwgbWluZCBibG93aW5nY29udmVyc2F0aW9ucyBJIGV2ZXIgaGFkIGluIG15IGxpZmV3aXRoIFdvcmxkIFNlcmllcyBvZiBQb2tlciBicmFjZWxldGNoYW1waW9uIEFubmllIER1a2UuIEkgZG9uIGV2ZW5rbm93IGhvdyB0byBkZXNjcmliZSBob3cgZ29vZCB0aGlzIHNob3dpcywgYnV0IHlvdSBndXlzIGFyZSBpbiBmb3IgYSB0cmVhdC4gVGhpcyBpcyB0aGUga2luZCBvZiB0aGlua2luZyB0aGF0SSB0cmllZCB0byBhcHBseSBvdmVyIHRoZSBjb3Vyc2UgdGhlbGFzdCBmZXcgeWVhcnMsIGJ1dCB3aGVuIEkgcmVhZCBoZXIgYm9va2FuZCBmb3VuZCBpdCBhcnRpY3VsYXRlZCwgdGhlIHdheSB0aGF0c2hlIHdyb3RlIGl0LiBJIHdhcyBsaWtlLCBleGFjdGx5LCB0aGlzIGlzZXhhY3RseSB3aGF0IEkgYmVlbiBzdHJpdmluZyBmb3IgYW5kdGhlc2UgYXJlIGFsbCB0aGUgdGhpbmdzIEkgbmVlZCB0byBkbyB0b2dldCB0byB0aGlzIHdheSBvZiB0aGlua2luZyBhbmRhcHByb2FjaGluZyBidXNpbmVzcyBpbiBsaWZlIGZvciBteWJlbmVmaXQuCkFmcmljYW4gQW1lcmljYW5zIHdvdWxkbiByZSBkaXNjb3ZlciBBdHR1Y2tzIHVudGlsIHRoZSAxODQwcywgYnkgd2hpY2ggdGltZSBoaXMgbmFtZSB3YXMgYmVnaW5uaW5nIHRvIGJlIHRpZWQgdG8gdGhlIHF1ZXN0aW9uIG9mIEFmcmljYW4gQW1lcmljYW4gY2l0aXplbnNoaXAgYnkgYWJvbGl0aW9uaXN0cy4uIApCdXQgQWxsYXdpIHBhaW50ZWQgYSBkaWZmZXJlbnQgcGljdHVyZSBvZiBTYWRkYW0gYmVmb3JlIHRoZSBoZWFyaW5nLgpCdXQgaGUgZG9lc24gaGF2ZSBhIGhpc3RvcmljYWwgZG9nIGluIHRoYXQgZmlnaHQuIApDb25zaWRlciBhcHBseWluZyBmb3IgYSBwYXJraW5nIHBlcm1pdCByZW5ld2FsLiBIYXJpbmdleSdzIGNoYXJnaW5nIHN0cnVjdHVyZSBub3cgbWlycm9ycyB0aGUgRFZMQSBzdHJ1Y3R1cmUgb24gQ08yLiAKVGhlIGVhcmxpZXN0IHZpZGVvIHBva2VyIG1hY2hpbmVzIHdlcmUgaW4gdGhlIG1hcmtldCBpbiB0aGUgbWlkIDE5NzAncy4gSXQgaXMgYmFzaWNhbGx5IGEgY29tYmluYXRpb24gb2YgYSBtb25pdG9yIHRoYXQgcmVzZW1ibGVkIHRoYXQgbXVjaCBvZiBhIHRlbGV2aXNpb24gYW5kIGEgQ1BVIG9yIENlbnRyYWwgUHJvY2Vzc2luZyBVbml0LiBJbiAxOTc5LCB2aWRlbyBwb2tlciBjYW1lIGludG8gdGhlIG1haW5zdHJlYW0gd2l0aCB0aGUgaW50cm9kdWN0aW9uIG9mICJEcmF3IFBva2VyIi4gClRoaXMgbWFzc2FnZSBpcyBwcmVmb3JtZWQgb25seSB3aXRoIGEgZG9jdG9ycyBub3RlIGFuZCBuZXZlciBkdXJpbmcgdGhlIGZpcnN0IHRyaW1lc3Rlci4gVGhlIG1vdGhlciB3aWxsIG9ubHkgYmUgb24gaGVyIHNpZGUgYW5kIGJhY2sgKG9uIGEgd2VkZ2UpIHRvIGhlbHAgcHJvbW90ZSB0aGUgdXBtb3N0IGNvbWZvcnQgYW5kIGJlbmVmaXRzLi4gClRoZXkgY2FuIGJlIHBsYWNlZCBkb3duIGdlbnRseSwgY291bnRlZCBkb3duLCBiYW5nZWQgZG93biwgc2xpZCBmb3J3YXJkLCBldGMuIApNeSBwaXQgd2lsbCBwdWxsIGxpa2UgY3JhenkgYW5kIHNoZSdzIDQ1IGxicyBvZiBhbGwgbXVzY2xlLiAKUG9rZXIgU3RhcnMKSFNTOiBBTllUSElORyBFTFNFIFlPVSBXQU5UIFBFT1BMRSBUTyBLTk9XIEFCT1VUIFlPVSBPUiBZT1VSIFdPUks/VGhhdCBwZW9wbGUgZG8gbm90IGhhdmUgdG8gc3VmZmVyIGluIHBhaW4uIApJIGtuZXcgdGhpcyB3YXMgdGhlIGNyYXp5IHN0YXRpYyB3b21hbi4gVGhlIG1hbiBsb29rZWQga2luZCBvZiBvZmZlbmRlZCBhbmQgZW5kZWQgdXAgd2Fsa2luZyB0byB0aGUgb3RoZXIgZW5kIG9mIHRoZSBjYXJyaWFnZS4gQSBmZXcgc3RvcHMgbGF0ZXIgYSB3b21hbiBpcyBzdGFuZGluZyBuZXh0IHRvIGNyYXp5IHN0YXRpYyB3b21hbiBhbmQgdGhlIHNhbWUgdGhpbmcgaGFwcGVucywgc2hlIGFza3MgdGhlIHdvbWFuIGlmIHNoZSBjYW4gYWN0dWFsbHkgc3RhbmQgbmV4dCB0byBoZXIgaW5zdGVhZCBvZiBiZWhpbmQgaGVyLiAKTW9kZXN0IE1hY2xhcmVuIGJldCB0aGF0IGhlIGNvdWxkIGJyZWFrIHRoZSBvbmUgbmV4dCB0byBpdC4gCkplIG1lIHBlcm1ldCBkZSByYWdpciwgdGFudCBjZWx1aSBxdWkgcmVtYXJxdWEgZGFucyB1biBwcmNkZW50IGNvbW1lbnRhaXJlIGxhIHNvbW5vbGVuY2UgZGVzIENSUy4gSmUgdGllbnMgIHJpdHJlciBjZXR0ZSByZW1hcnF1ZS4gQ2FyIHNpIGxlcyBmb3JjZXMgZGUgbCdvcmRyZSBwZXV2ZW50IGFnaXIgZWZmaWNhY2VtZW50IGVuIHRvdXRlIGRpc2NydGlvbiAoY2VsYSBzZSBjb21wcmVuZCBkYW5zIGJpZW4gZGVzIGFmZmFpcmVzKSBpbCBuJ2VuIGVzdCByaWVuIGRlcyBDUlMgcXVpIG4nb250IGF1Y3VuZSBwYXJ0IGRlIHJlc3BvbnNhYmlsaXQgZGFucyBsZXMgcGV0aXRzIHN1Y2NzIHJlbmNvbnRycyBqdXNxdWUgbC4gTm9uIHNldWxlbWVudCwgbGVzIENSUyBuJ29udCBwYXMgdm9jYXRpb24gIHRyZSBkZXMgYWN0ZXVycyBkZXMgb3ByYXRpb25zIGRlIGRtYW50bGVtZW50IGRlIHJzZWF1eCBkZSB2ZW50ZSBkZSBzdHVwZmlhbnRzIG8gZGUgcHJveG50aXNtZSwgbWFpcyBpbHMgc29udCB1biBsbWVudCBmb3J0IHBvdXIgc2lnbmlmaWVyIHF1ZSBjZSBxdWFydGllciBlc3Qgc291cyB0ZW5zaW9uLiBVbiBDUlMgc2UgbW9udHJlIGV0IG4nYWdpdCBxdWUgdHJzIHJhcmVtZW50LiBMZXVyIHByc2VuY2UgY3IgdW4gc2VudGltZW50IHRyYW5nZSBkJ3RyZSBkYW5zIHVuZSB6b25lIGQnZXhjZXB0aW9uLCBkYW5nZXJldXNlIGV0IGluc2N1cmUsIGNvbnRyYWlyZW1lbnQgIGxhIHByc2VuY2UgZGUgcG9saWNpZXJzICJub3JtYXV4IiBxdWkgZG9ubmVudCBwbHVzIGwnaW1wcmVzc2lvbiBkJ3RyZSBkYW5zIHVuIHF1YXJ0aWVyIGNvbW1lIGxlcyBhdXRyZXMuCldlIGdvdCB3YXkgbW9yZSBnaWZ0cywgZGlhcGVycywgYW5kIGJvb2tzIHRoYW4gaSBleHBlY3RlZC4gCk1pc3MgbWUgd2l0aCB0aGF0IEJTLiBTaGUgaXMgdHJlbWVuZG91c2x5IHJ1ZGUgdG8gcGVvcGxlIHRoYXQgYXNrIGhlciBxdWVzdGlvbnMgdHJ5aW5nIHRvIHVuZGVyc3RhbmQgd2hhdCdzIGdvaW5nIG9uLiAKQWZ0ZXIgcmVsZWFzZSBmcm9tIHByaXNvbiBpbiAxODk3LCBXaWxkZSBzcGVudCBtdWNoIG9mIHRoZSBmaW5hbCB0d28gLiBDaXJxdWUgKDE4ODcgODgpIHRvIHRoZSBkYW5jZXJzIG9mIExlIENoYWh1dCAoMTg4OCA4OSkuIApUaGUgVFRLIGlzIGluc2FuZWx5IGZhc3QgYW5kIHRoZXkgd29uIHVzdWFsbHkgaGF2ZSBhIGxvdCBvZiB0aW1lIHRvIHJlYWN0LiBPbmNlIHRoZXkgZGllLCBmbHkgYmFjayB1cCwgcmluc2UgYW5kIHJlcGVhdC4gWW91IGRvbiBoYXZlIHRvIGJlIGFuIGFjZSB0byBwdWxsIHRoaXMgb2ZmLCBhbmQgbW9zdCBBMkcgcGlsb3RzIGFyZSBtZWRpb2NyZSBhdCBiZXN0Li4gCkZvciBhIHllYXIgYWZ0ZXIgZ3JhZHVhdGlvbiBoZSB0YXVnaHQgaW4gSmFuZXN2aWxsZSBIaWdoIFNjaG9vbCBhbmQgd2FzIHByb21pbmVudCBpbiB0aGUgTGl0dGxlIFRoZWF0ZXIuIApVbmZvcnR1bmF0ZWx5IGFsdGhvdWdoIFNoYW5naGFpIGlzIG9uZSBvZiB0aGUgc2FmZXN0IGNpdGllcywgc2NhbXMgYXJlIGFic29sdXRlbHkgcmlmZSBpbiBDaGluYS4gCkhlIHdhcyBub3QgdGhlIGJlc3QgTHVvbmdvIGF0IHRoaXMgV29ybGQgU2VyaWVzIG9mIFBva2VyLiBIaXMgYnJvdGhlciwgRmFiaW8gTHVvbmdvLCBpcyBzdGlsbCBpbiB0aGUgdG91cm5hbWVudCwgYXMgaGUgb3V0bGFzdGVkIFJvYmVydG8uIFdoZW4gdGhlIGRheSBzdGFydGVkIG9uIERheSA0LCBSb2JlcnRvIGhhZCA5MiwwMDAgY2hpcHMgYW5kIEZhYmlvIGhhZCAzNjAsMDAwIGluIGNoaXBzLiAKVGhpcyBwZXJzb24gY2FuIGdldCBhIG1lY2hhbmljYWwgbGlmdCwgdGhleSBjYW4gYmUgaG9zcGl0YWxpemVkICh3aGVyZSB0aGV5IHdpbGwgYmUgaGFuZGxlZCB3aXRoIGEgbWVjaGFuaWNhbCBsaWZ0KSwgb3IgdGhleSBjYW4sIGV2ZW50dWFsbHksIGRpZS4gCkxvdHMgb2YgdmlkZW8gdHV0b3JpYWxzLiBHcmFwaGljcyBJbnB1dC9PdXRwdXQgUHJvZ3JhbW1pbmcgRXhhbXBsZXMgU2NyaXB0aW5nIFN0YWNrcyBUb29scyBUb29sc2V0cyAuIDI0IE9jdCAyMDE3ICAgNTEgbWluICAgVXBsb2FkZWQgYnkgUmogU3lzdGVtcyA6ICBUaGUgQnJhbmQgb2YgVHJ1c3QgUmV0b3VjaGluZyAuIFJldG91Y2ggc2tpbiBsaWtlIGEgcHJvIHdpdGggdGhlc2UgUGhvdG9zaG9wIHJldG91Y2hpbmcgYWN0aW9ucyB0aGF0IHdpbGwgbGV0IHlvdSBoZWFsLCBtYXR0aWZ5LCBhbmQgYWlyYnJ1c2ggc2tpbiB3aXRoIG9uZSBjbGljay4gCkRvIHRoaXMgYmFjayBpbnRvIHRoZSA1IGdhbGxvbiwgYnJ1c2ggYWxsIHRoZSBwYWludCBmcm9tIHRoZSBidWNrZXQgYmFjayBpbnRvIGNhbi4gCkV2ZW4gdGhlIE5ldyBZb3JrIFRpbWVzIHF1ZXN0aW9uZWQgdGhlIGNyZWRpYmlsaXR5IG9mIE1vZGkncyBxdWlya3kgbW92ZS4gTm90IGRlbnlpbmcgdGhlIHNpZ25pZmljYW5jZSBvZiBNb2RpJ3MgaW1wcm9tcHR1IHRyaXAgdG8gTGFob3JlLCBpdCBzYWlkIHRoZSBJbmRpYW4gbGVhZGVyIGhhcyBpbiB0aGUgcGFzdCBtb3ZlZCBmcm9tIG9uZSBwb2xpY3kgdG8gdGhlIG90aGVyIGFuZCBkZXNjcmliZWQgaXQgYXMgImEgZGlwbG9tYXRpYyBkYW5jZSIuLiAKVGhhdCdzIGJlY2F1c2UgbGFzdCBzdW1tZXIsIFRleGFzIENhcmQgSG91c2UncyBwYXJlbnQgY29tcGFueSBzdWVkIGEgU2FuIEFudG9uaW8gcG9rZXIgcm9vbSBvdmVyIHNvbWUgYWxsZWdlZCB1bmZhaXIgY29tcGV0aXRpb24gdmlvbGF0aW9ucy4gCkl0IGp1bXBlZCBpbnRvIGFjdGlvbiB2ZXJ5IHF1aWNrbHkuIFRoZSBwb3dlciBzdHJ1Z2dsZSBhbmQgTWF4IHBlcnNvbmEgc2VlbWVkIGFyYml0cmFyeSwgYW5kIHRoZSBwdXJwb3NlIG9mIHRoZSBXYXIgQm95cyBldGMuIGxhY2tlZCBleHBsYW5hdGlvbiB0byBtZSAgIHRvd2FyZHMgdGhlIGVuZCBhbmQgd2l0aCBhIGJpdCBvZiB0cml2aWEgc2VhcmNoLCB0aGUgVmFsaGFsbGEgc2VnbWVudCBiZWdhbiB0byBtYWtlIHNlbnNlLgpBbHNvIG5vdCBPUCwgYnV0IG15IHVuZGVyc3RhbmRpbmcgb2YgaHlkcmF0aW9uIGlzIGRpZmZlcmVudCB0byB0aGUgYW5zd2VyIHlvdSd2ZSBhbHJlYWR5IGdvdHRlbi4gSHlkcmF0aW9uIHJlZmVycyB0byB0aGUgcmF0aW8gb2Ygd2F0ZXIgdG8gZmxvdXIuIEhlcmUgaXMgYSBndWlkZSB0byB0aGUgYmFrZXIncyBwZXJjZW50YWdlLCBhIHJ1bGUgZm9yIHNjYWxpbmcgaW5ncmVkaWVudHMgKGxpa2Ugd2F0ZXIpIGJhc2VkIG9uIHRoZSBhbW91bnQgb2YgZmxvdXIuCkJvdGggZWNvbm9taWNzIGFuZCByZXRpcmVtZW50IHBsYW5uaW5nIGFyZSBwcm9uZSB0byBtYWtpbmcgYXNzdW1wdGlvbnMgdGhhdCBhbGwgZmFjdG9ycyByZW1haW4gY29uc3RhbnQsIGZyb20gdGhlIExhdGluLCBjZXRlcmlzIHBhcmlidXMsIG1lYW5pbmcgdGhpbmdzIGVxdWFsLiBUaGUgcHJvYmxlbSB3aXRoIHRoaXMgdHlwZSBvZiBsaW5lYXIgdGhpbmtpbmcgaXMgdGhhdCBjaGFuZ2UgaXMgdGhlIG9ubHkgY29uc3RhbnQgaW4gbGlmZSwgcGFydGljdWxhcmx5IG92ZXIgYSBsb25nIGVub3VnaCB0aW1lIGhvcml6b24uCldlIGhhZCByZWNvcmQgc25vd2ZhbGwgYW5kIHJlY29yZCBsb3cgdGVtcHMsIGluY2x1ZGluZyBzb21lIGduYXJseSB3aW5kLiAKSSBnZXQgYSBuZXcgaGVhZGxhbXAgYmVmb3JlIHRoZSBuZXh0IHRyaXAuIE1pbmUgaXMgMTAgeWVhcnMgb2xkIGFuZCBuZWVkcyB0byBiZSByZXRpcmVkLgpKYXNvbiBNY0dvd2FuLCBsZWZ0LCBhbmQgQ2hyaXN0b3BoZXIgVGFsa2luZ3RvbiBhcHBlYXIgdmlhIHZpZGVvIGZvciB0aGVpciBhcnJhaWdubWVudCBpbiBmcm9udCBvZiBTYWdpbmF3IENvdW50eSBEaXN0cmljdCBKdWRnZSBNLiBSYW5kYWxsIEp1cnJlbnMgb24gVGh1cnNkYXksIE1hcmNoIDE5LCAyMDE0LiBUaGUgdHdvIG1lbiBhcmUgY2hhcmdlZCB3aXRoIGFybWVkIHJvYmJlcnkgYW5kIGNvbnNwaXJhY3kgdG8gY29tbWl0IHRoYXQgY3JpbWUgaW4gYSBNYXJjaCAxMSBhcm1lZCByb2JiZXJ5IG9mIGEgcG9rZXIgZ2FtZSBpbiBhIFNhZ2luYXcgVG93bnNoaXAgYXBhcnRtZW50IHRoYXQgbGVkIHRvIG9uZSBvZiB0aGUgcm9iYmVycyBiZWluZyBzaG90IGFuZCBraWxsZWQuClRvZGF5LCBKaW0gc2hhcmVzIGhpcyBtb25leSB3aW5zIG9uZSB0aW1lIHdheXMgdG8gc2F2ZSBsYXJnZXIgc3VtcyBvZiBtb25leSBvciB3YXlzIHRvIGdldCBtb3JlIGJhbmcgZm9yIHRob3NlIGJ1Y2tzLiBIZSBldmVuIGhhcyBhIHRpcCB3ZSd2ZSBuZXZlciBoZWFyZCBiZWZvcmUhIChXZSdyZSBub3QgZ29pbmcgdG8gcmV2ZWFsIGl0IGhlcmUsIHlvdSdsbCBoYXZlIHRvIGxpc3RlbiEpCk9mZmljZXJzIHJlc3BvbmRlZCB0byBFLiAKVGhleSBhZGQgdHJpbGxpb25zIHRvIG91ciBuYXRpb25hbCBkZWJ0IGFuZCBkZXN0cm95IG91ciBkb21lc3RpYyBhZ2VuZGEuIFdlIGNhbm5vdCBhZmZvcmQgdGhlIGh1bWFuIGNvc3Qgb2YgdGhlc2Ugd2FycywgdGhlIGxvc3Mgb2YgbGl2ZXMgb2Ygb3VyIGJlbG92ZWQgdHJvb3BzIGFuZCB0aGUgZGVhdGhzIG9mIGlubm9jZW50IGNpdmlsaWFucyBpbiBJcmFxLCBBZmdoYW5pc3RhbiBhbmQgUGFraXN0YW4uIi4gClRoZW4gZm9yIHNvbWUgb3RoZXIgZmFtaWx5IG1lbWJlcnMgSSBtYWRlIHRoZXNlIG92ZW5zIHdpdGggYSBsaXR0bGUgc3VycHJpc2UgaW4gdGhlbS4gV2UgdG9sZCB0aGVtIHRoYXQgd2UgZm91bmQgdGhlc2UgY3V0ZSB0aGluZ3MgYW5kIGhhZCB0byBzaGFyZS4gClRIRSBGQUNJTElUWSBJUyBBTUJJRU5UIEFORCBDSEFSTUlORyBXSVRIIFBSSVZBVEUgUEFSS0lORy4gCkJpcm1pbmdoYW0gZ3JhbiBwYXlzIDIgICBhbmQgZW5kcyB1cCBpbiAkOCBNSUxMSU9OIHBva2VyIGdhbWVTaGUgZm91bmQgaGVyc2VsZiBhdCBhdCB0aGUgUmlvIEhvdGVsIGFuZCBDYXNpbm8sIHBpdHRlZCBhZ2FpbnN0IHRoZSBiZXN0ICJIb2xkICdFbSIgcG9rZXIgcGxheWVycyBpbiB0aGUgd29ybGRHZXQgdGhlIGJpZ2dlc3QgZGFpbHkgc3RvcmllcyBieSBlbWFpbFN1YnNjcmliZVNlZSBvdXIgcHJpdmFjeSBub3RpY2VNb3JlIG5ld3NsZXR0ZXJzVGhhbmsgeW91IGZvciBzdWJzY3JpYmluZ1dlIGhhdmUgbW9yZSBuZXdzbGV0dGVyc1Nob3cgbWVTZWUgb3VyIHByaXZhY3kgbm90aWNlQ291bGQgbm90IHN1YnNjcmliZSwgdHJ5IGFnYWluIGxhdGVySW52YWxpZCBFbWFpbEFtb25nIHRoZSBoaWdoIHJvbGxlcnMgZ2F0aGVyZWQgcm91bmQgdGFibGVzIGZvciB0aGUgd29ybGQncyBncmVhdGVzdCBwb2tlciB0b3VybmFtZW50IGNyb2NoZXQgbG92aW5nIEJpcm1pbmdoYW0gZ3JhbiBTaGlybGV5IE1hcnNoYWxsIGN1dCBhbiBpbmNvbmdydW91cyBmaWd1cmUuVGhlIDYyIHllYXIgb2xkLCBtYXJyaWVkIHRvIGFuZ2xpbmcgYWRkaWN0ZWQgcGVuc2lvbmVyIEtlbiwgbGlrZXMgYSBnYW1lIG9mIGNhcmRzLiBIZXIgYmlnZ2VzdCBwb2tlciB3aW4sIHNoZSBzbWlsZXMsIGlzIGFuIGltcHJlc3NpdmUgLiBBbmQgbm8sIHRoYXQncyBub3QgYSBtaXNwcmludC4gCkkgZG8gbm90IHVuZGVyc3RhbmQgd2hhdCB5b3UgbWVhbiBieSAidGhlIG5ldHdvcmsgY2hhbmdlIG9uIHRoZSBjb21wdXRlciBuYW1lLiIgSSBhc3N1bWUgeW91IG1lYW4gdG8gY2hhbmdlIHRoZSBuYW1lIG9uIHRoZSBsb2NhbCBtYWNoaW5lLgpBbmQgb25jZSB0aGVyZSBoYXMgYmVlbiBhY2NlcHRhbmNlLCBpdCB0YWtlcyBvZmYgYSBidXJkZW4uIApBbHNvLCBvdmVyemVhbG91cyBUcnVtcGV0cyB3aWxsIGJlIHRpZWQgdXAgYW5kIGZvcmNlZCB0byBsaXN0ZW4gdG8gMjQgaG91cnMgb2YgTWFyaW8gQmFydGguIApJdCB1bmNsZWFyIHdoZXJlIHRoZSA1MDAwIG5ldXJvcHN5Y2hvbG9naXN0cyBmaWd1cmUgY29tZXMgZnJvbS4gCiBOb3cgcmVtZW1iZXIgdGhlIGxvdyBoYW5kIGlzIHRoZSB3aW5uZXIgYW5kIGZsdXNoZXMgYW5kIHN0cmFpZ2h0cyBkb24ndCBjb3VudCBhcyBoaWdoIGhhbmRzIHNvIGFjZSB0byBmaXZlIGlzIGEgZ29vZCBhcyBpdCBnZXRzLi4gCkNoYXVkaHJ5cyBtYXkgdGVhbSB1cCBhZ2FpbnN0IFByZXNpZGVudCBaYXJkYXJpCldpdGggbW9uZXRhcnkgZXhwYW5zaW9uIGF0IHNldmVyYWwgdGltZXMgdGhlIHJhdGUgb2YgZ3Jvd3RoIG9mIEdEUCwgdGhlIGRlbWFuZCBwdWxsIGluZmxhdGlvbiBoYXMgcmVtYWluZWQgaGlnaCByZWZsZWN0aW5nIGltcHJ1ZGVudCBmaXNjYWwgYW5kIG1vbmV0YXJ5IHBvbGljaWVzLi4gCkF0IHRoZSByYWxseSwgd2Ugc3Rvb2QgZmlybSBpbiBvdXIgY29tbWl0bWVudCB0byBlbnN1cmUgdGhhdCB0cmFuc2dlbmRlciwgaW50ZXJzZXgsIGFuZCBnZW5kZXIgZXhwYW5zaXZlIHBlb3BsZSB3b3VsZCBub3QgYmUgZXJhc2VkLiBZZXQgYnkgZW5hYmxpbmcgaWdub3JhbmNlLCB3ZSdyZSBmYWNpbGl0YXRpbmcgdGhpcyBlcmFzdXJlIGJ5IG91ciBvd24gaGFuZHMuIFdlIGFyZSBwcm92b2tpbmcgZmVhciBhbmQgZGlzdHJ1c3Qgb2YgdGhlIG1lZGljYWwgY29tbXVuaXR5IGluIGEgdnVsbmVyYWJsZSBwYXRpZW50IHBvcHVsYXRpb24sIGFuZCBkZXRlcnJpbmcgdHJhbnNnZW5kZXIgYW5kIG5vbiBiaW5hcnkgcGVvcGxlIGZyb20gYWNjZXNzaW5nIHRoZSBoZWFsdGhjYXJlIHNlcnZpY2VzIHRoYXQgdGhleSBkZXNwZXJhdGVseSBuZWVkLgpCZWNhdXNlIGl0IHdvdWxkICJjaGFuZ2UgaGlzdG9yeSIgdGhlIHdheSB0aGUgRWR3YXJkcyBzdG9yeSBkaWQsIGJ1dCBiZWNhdXNlIGl0IHdpbGwgbWFrZSBteSBjaGVjayBvdXQgbGluZSByZWFkaW5nIGV2ZXIgc28gbXVjaCBtb3JlIGFtdXNpbmcuLiAKSnVuZTogRXBzdGVpbidzIGxhd3llcnMgcmV2aXNpdCBwbGVhIG5lZ290aWF0aW9ucywgYW5kIG9uIEp1bmUgMzAsIEVwc3RlaW4gYXBwZWFycyBpbiBhIFBhbG0gQmVhY2ggQ291bnR5IGNvdXJ0cm9vbS4gSGUgcGxlYWRzIGd1aWx0eSB0byBzdGF0ZSBjaGFyZ2VzOiBvbmUgY291bnQgb2Ygc29saWNpdGF0aW9uIG9mIHByb3N0aXR1dGlvbiBhbmQgb25lIGNvdW50IG9mIHNvbGljaXRhdGlvbiBvZiBwcm9zdGl0dXRpb24gd2l0aCBhIG1pbm9yIHVuZGVyIHRoZSBhZ2Ugb2YgMTguIApUaGlzIHdpbGwgcmVwcmVzZW50IHRoZSBudW1iZXIgb2YgdGltZXMgKGZyZXF1ZW5jeSkgdGhhdCBlYWNoIG51bWJlciBhcHBlYXJzIGluIHRoZSBsaXN0LiAKQ29vbCBwaWMsIGFuZCBrdWRvcyBmb3IgdHJhaW5pbmcgb24gc2VhcmNoIGFuZCByZXNjdWUuLiAKTGFiIFJhdHMgcHJlZmVyIFN1Z2FyIG92ZXIgQ29jYWluZQoiSXQncyBhIHJlYWwgY29uY2VybiB3ZSBoYXZlLCIgSGVycmlmZiBzYWlkLiAiSXQgbW92ZXMgZ2FtYmxpbmcgb3Bwb3J0dW5pdGllcyByaWdodCBpbnRvIHRoZSBiYWNreWFyZCBvZiBwZW9wbGUgd2hvIG1heSBhbHJlYWR5IGhhdmUgYW4gaXNzdWUgd2l0aCBpdC4gVGhlIHByb2xpZmVyYXRpb24gb2YgaXQgaGFzIHVzIGNvbmNlcm5lZC4iIEhlcnJpZmYgYWxzbyB3b3JyaWVzIHRoYXQgYW55b25lIDE4IGFuZCBvdmVyIGNhbiBnYW1ibGUgYXQgdGhlIHZlbnVlcy4gU2hlIHNhaWQgaGVyIG9yZ2FuaXphdGlvbiBoYXMgYWxyZWFkeSBzZWVuIGFuIGluY3JlYXNlIGluIGNvbGxlZ2Ugc3R1ZGVudHMgc2Vla2luZyBoZWxwIGZvciBhZGRpY3Rpb24gYXMgYSByZXN1bHQgb2YgcG9rZXIgcm9vbXMgZG9pbmcgYnVzaW5lc3MgbmVhciBjYW1wdXNlcy4gCklmIGFueWJvZHkgaXMgb24gdGhlIGZlbmNlIGFib3V0IHRoaXMgSSByZWNlaXZlZCBtaW5lIG9uIFdlZG5lc2RheSBhbmQgaXQgaXMgYWJzb2x1dGVseSBibGVtaXNoIGZyZWUuIEkgdG9yZSB0aGUgdGhpbmcgYXBhcnQgYW5kIGNvdWxkIGZpbmQgYW55IGluZGljYXRpb24gb2YgYSBibGVtaXNoLiBJdCBoYXMgdGhlIHNtb290aGVzdCBhY3Rpb24gSSBldmVyIGZlbHQgb24gYW4gQUsgYW5kIHRoZSBiZXN0IHRyaWdnZXIgSSBldmVyIHVzZWQgb24gYW4gQUsgdG9vLiAKV2UgaGF2ZSBoZWFyZCBtdWNoLCBhZ2Fpbiwgb2YgdGhlIG1hbnkgdmlzaXRzIGJ5IGxvYmJ5aXN0cyB0byB2YXJpb3VzIG1pbmlzdGVycyBhbmQgb3RoZXIgb2ZmaWNpYWxzLCBhbGwgb2YgdGhlbSByZWNvcmRlZCBpbiB0aGUgbG9iYnlpc3QgcmVnaXN0cnkuIApUMHRhbGl0YXJpYW4gICA0IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpHb29kIHRoaW5nIHRob3VnaCB3ZSBib3VnaHQgZW5vdWdoIHVuaXRzIGluIGNhc2UgaXNzdWVzIGxpa2UgdGhpcyBvbmUgYXJvc2UuIFdpdGhpbiAxNSBtaW51dGVzIGl0IHdhcyBhcyBnb29kIGFzIG5ldyBhbmQgZXZlcnlvbmUgZW5qb3llZCB0aGUgcmVzdCBvZiB0aGVpciB0aW1lLiBGcm9tIHRoZW4gb24gb3V0LCB0aG91Z2gsIHdlIHdvbid0IGFsbG93IGZvb2Qgb3IgZHJpbmtzIGF0IHRoZSB0YWJsZS4gClRoaXMgcGFydGljdWxhcmFtb3VudCB3aWxsIG5vdCBjb3VudCB0b3dhcmRzIHlvdXIgYmV0IHdpdGhpbiB0aGUgZmlyc3QgY2lyY3VsYXIgb2Z3YWdlcmluZywgdW5saWtlIGJsaW5kcy4gClBlcmhhcHMgbm8gb3RoZXIgbnVtYmVyIGhhcyBiZWVuIG1vcmUgcG9uZGVyZWQsIGV4YW1pbmVkIGFuZCBjYWxjdWxhdGVkIHRoYW4gcGkuIFRoZSB3cml0aW5ncyBkZXNjcmliZWQgaG93IHRvIGNyZWF0ZSBhIHNxdWFyZSBhcmVhIHRoZSBzYW1lIHNpemUgYXMgYSBjaXJjbGUuIAo4KSBFdmVuIE1hcnRoYSBTdGV3YXJ0IHdvdWxkIGFwcHJvdmUgb2YgdXNpbmcgamVsbHkgYmVhbnMgdG8gZGVjb3JhdGUgYSBmbG93ZXIgdmFzZS4gSW5zZXJ0IGEgZmxvd2VyIHZhc2UgaW50byBhIHNsaWdodGx5IGxhcmdlciBjbGVhciB2YXNlOyBmaWxsIGluIHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSB0d28gdmFzZXMgd2l0aCBjb2xvcmZ1bCBqZWxseSBiZWFucy4gQ3JlYXRlIGxheWVycyBvZiBjb29yZGluYXRpbmcgY29sb3JzIG9yIG90aGVyIGRlc2lnbnMgdXNpbmcgdGhlIGJlYW5zLCBhZGQgdGhlIGZsb3dlcnMgYW5kIHdhdGVyIHRvIHRoZSBjZW50ZXIgdmFzZSB3aGVuIHRoZSBjcmVhdGl2ZSB3b3JrIGlzIGRvbmUuCkJlY2F1c2UgSSB3YXMgbm90IGEgdHJhZGUgdW5pb25pc3QuCkVkdWNhdGlvbiBtdXN0IGJlIGZ1bmRlZCBmYWlybHkgYWNyb3NzIGFuIGVudGlyZSBzdGF0ZS4gc3R1ZGVudHMgcmVjZWl2ZSB0aGUgc2FtZSBzcGVuZGluZywgcmVnYXJkbGVzcyBvZiB0aGUgbmVpZ2hib3Job29kIHRoZXkgbGl2ZSBpbi4gbW9yZSBraW5kZXJnYXJ0ZW5zIHdpdGhvdXQgcGFwZXIgYW5kIGNyYXlvbnMgd2hpbGUgaW4gdGhlIG5leHQgdG93biBvdmVyIGtpbmRlcmdhcnRlbnMgaGF2ZSBzdGF0ZSBvZiB0aGUgYXJ0IGNvbXB1dGVycyBhbmQgc3dpbW1pbmcgcG9vbHMuIEVkdWNhdGlvbiB0aGF0IGlzIGZhaXIgYW5kIGVxdWFsIGlzIGEgYmFzaWMgYnVpbGRpbmcgYmxvY2sgb2YgZGVtb2NyYWN5LiAKVGhlIGhvdXNlIGhhcyBhbiBlZGdlIGJlY2F1c2UgdGhlIHBsYXllciBtdXN0IGFjdCBmaXJzdCBhbmQgd2lsbCBsb3NlIGlmIGhlIGJ1c3RzIGJlZm9yZSB0aGUgZGVhbGVyIGRvZXMgdGhlIHNhbWUuLiAKMi4gT25jZSB5b3UgaGF2ZSB0d28gQ2hlYXAgQ2xheSBQb2tlciBDaGlwcywgaXQgaXMgdGltZSB0byBnZXQgb3V0IHRoZSBkcmlsbCB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gdXNlIGZvciB0aGUgcHJvamVjdC4gRmlyc3QsIHlvdSB3aWxsIHdhbnQgdG8gZHJpbGwgYSBzbWFsbCBob2xlIGF0IHRoZSB0b3Agb2YgdGhlIEFsbCBDbGF5IFBva2VyIENoaXBzLiAKTGlnaHRzaG9heCAgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkFuZWNkb3RhbCByZXBvcnRzIGFuZCByZWNlbnQgc3R1ZGllcyBzdWdnZXN0IHRoYXQgYSBzaW5nbGUgYWRtaW5pc3RyYXRpb24gb2YgcHNpbG9jeWJpbiBjYW4gZW5oYW5jZSBzdWNoIHByb2Nlc3NlcyBhbmQgY291bGQgdGhlcmVmb3JlIGJlIGEgcG90ZW50aWFsIHRyZWF0bWVudC4gSG93ZXZlciwgaXQgaGFzIHlldCB0byBiZSBhc3Nlc3NlZCB3aGV0aGVyIGVmZmVjdHMgb3V0bGFzdCBhY3V0ZSBpbnRveGljYXRpb24uIApIZSBhbHNvIHdhcyBvbiBteSBmbGlnaHQgYmFjayB0byBCdXIgc3RhbmsuIApNeSB1bmRlcnN0YW5kaW5nIGlzIHRoZXkgaGF2ZSBiZWVuIHZlcnkgc3VjY2Vzc2Z1bCBpbiBtYWtpbmcgbW9zdCBhcnJlc3RzIHdpdGggbm8gc2hvdHMgZmlyZWQuIApBbmQgYnkgInN1Z2FyLCIgTHVzdGlnIG1lYW5zIG5vdCBvbmx5IHRoZSB3aGl0ZSBncmFudWxhdGVkIHN0dWZmIHRoYXQgd2UgcHV0IGluIGNvZmZlZSBhbmQgc3ByaW5rbGUgb24gY2VyZWFsICAgdGVjaG5pY2FsbHkga25vd24gYXMgc3Vjcm9zZSAgIGJ1dCBhbHNvIGhpZ2ggZnJ1Y3Rvc2UgY29ybiBzeXJ1cCwgd2hpY2ggaGFzIGFscmVhZHkgYmVjb21lIHdpdGhvdXQgTHVzdGlnJ3MgaGVscCB3aGF0IGhlIGNhbGxzICJ0aGUgbW9zdCBkZW1vbml6ZWQgYWRkaXRpdmUga25vd24gdG8gbWFuLiIKRHVyaW5nIGEgcmFjZSBhIGZldyB5ZWFycyBhZ28gSSBnb3QgcmVhbGx5IHNpY2sgZnJvbSBub3QgaGF2aW5nIG11Y2ggd2F0ZXIuIFNvIEkgcnVuIHdpdGggd2F0ZXIgYW5kIGFsc28gZHJpbmsgYXQgZXZlcnkgd2F0ZXIgc3RhdGlvbnMuIApUaGlzIG9mIGNvdXJzZSBlbnN1cmVkIHRoYXQgYWxsIE5pY2FyYWd1YW5zIGJhY2tlZCB0aGUgbWlsaXRhbnQgZ3JvdXAgb2Ygc3R1ZGVudHMgY2FsbGVkICJTYW5kYW5pc3RhcyIuIFRoZXkgb2YgY291cnNlIGluaGVyaXRlZCBhIGNsdXN0ZXIgICBhIGNvdW50cnkgd2hlcmUgaG9tZWxlc3NuZXNzIGFuZCBwb3ZlcnR5IGFuZCBpbGxpdGVyYWN5IHdlcmUgcHJldmFsZW50LiBTbyB0aGUgbmV0IHJlc3VsdCBvZiB0aGlzIHR1cm1vaWwgaXMgdGhhdCBBbWVyaWNhbnMgYXJlIGZlYXJmdWwgb2YgdHJhdmVsaW5nIHRvIE5pY2FyYWd1YSwgYW5kIE5pY2FyYWd1YSBkb2Vzbid0IGhhdmUgZW5vdWdoIHRvdXJpc20gdG8ganVzdGlmeSBidWlsZGluZyB0aGUgdHlwZSBvZiBpbmZyYXN0cnVjdHVyZSB0aGF0IEFtZXJpY2FucyB3b3VsZCBkZW1hbmQvZW5qb3kuIApUbyBwcm9ncmVzcyBoaXMgZXhwZXJpbWVudHMgc28gdGhhdCB0aGV5IHdvcmsgb24gaHVtYW5zLCBKZWt5bGwgbmVlZHMgdG8gaGFydmVzdCBmcmVzaCBmZW1hbGUgaG9ybW9uZXMgZnJvbSBkZWFkIHdvbWVuLiBBdCBmaXJzdCBoZSB2aXNpdHMgbG9jYWwgbW9ydHVhcmllcyBhbmQgbGF0ZXIgZW1wbG95cyB0aGUgc2VydmljZXMgb2YgQnVya2UgYW5kIEhhcmUzIHRvIHByb2N1cmUgaGltIG1vcmUgeW91bmcsIGRlY2Vhc2VkIHdvbWVuIGZvciBoaXMgcmVzZWFyY2guIEhlIGlzIGluaXRpYWxseSB1bmF3YXJlIHRoYXQgdGhleSBhcmUga2lsbGluZyB0aGUgd29tZW4gaW4gb3JkZXIgdG8gZ2V0IHRoZSBib2RpZXMgdGhleSBhcmUgc3VwcGx5aW5nLCB1bnRpbCBoaXMgcmVzZWFyY2ggcmVhY2hlcyBhIGNyaXRpY2FsIG1vbWVudCB3aGVyZSBoZSBpcyByZWFkeSB0byB1c2UgdGhlIHBvdGlvbiBvbiBoaW1zZWxmLgpPaCwgYW5kIHdhdGNoIGFsbCBvZiB0aGUgeW91dHViZXJzIGJpZyBhbmQgc21hbGwgdG8gZGV2ZWxvcCB5b3VyIG9waW5pb25zLiBOb3RoaW5nIHNheWluZyBhIHNtYWxsIHlvdXR1YmVyIGlzbiB3YXRjaGluZyBhIGJpZyB5b3V0dWJlciBhbmQgdGFpbG9yaW5nIHRoZWlyIG1lc3NhZ2UgYWNjb3JkaW5nbHkgaW4gaG9wZXMgb2Ygb25lIGRheSByZWNlaXZpbmcgdGhlIHNhbWUga2luZCBvZiBraWNrYmFja3MgYW5kIGV4cG9zdXJlLiBUYWtlIEFMTCBpbnRlcm5ldCBvcGluaW9ucyB3aXRoIGEgZ3JhaW4gb2Ygc2FsdC4gCklmIGl0IHNvIHB1YmxpYyB0aGVuIHdoeSBoYXZlbiBJIGhlYXJkIG9mIGl0IHVwIHVudGlsIGxhc3Qgd2Vlaz8gTVNNIGRvZXMgbm90IGluZm9ybSB1cyBvZiB0aGlzLiBQdWJsaWMgZWR1Y2F0aW9uIGRvZXMgbm90IGluZm9ybSB1cyBvZiB0aGlzLiBJdCBhIHNpbXBsZSB0aGluZyBoaWRkZW4gaW4gcGxhaW4gdmlldy4gV2l0aCBhbGwgdGhlIGluZm9ybWF0aW9uIG91dCB0aGVyZSBvbiB0aGUgaW50ZXJuZXQsIHRoZXJlIGlzIG5vIHdheSB0byBmZWFzaWJseSBoZWFyIGFib3V0IGV2ZXJ5dGhpbmcuIEl0IGV2ZW4gaGFzIGEgd2lraSBhcnRpY2xlIGFib3V0IGl0IGNpdGluZyBTbm93ZGVuLiBOb25lIG9mIHRoaXMgc2hpdCBpcyBtYWluc3RyZWFtLiBUaGlzIGlzIHNpbXBsZSBzdHVmZiB3ZSBjYW4gYnJpbmcgaW50byB0aGUgcHVibGljIGV5ZSB0aGF0IGlzIGVhc2lseSB2ZXJpZmlhYmxlIGFuZCBob3BlZnVsbHkgc3dheSB0aGVpciB2aWV3cyBvbiB0aGVpciBnb3Zlcm5tZW50LgpUaHJvdWdoIHRvIGNvYWNoaW5nIGF0IHRoZSBoaWdoIHNjaG9vbCBsZXZlbCBpbiBIYW1pbHRvbiBhbmQgd2l0aCBCdXJsaW5ndG9uIE1pbm9yIEZvb3RiYWxsLiBJbiBKYW1haWNhLCBoZSB3YXMgYSBtZW1iZXIgb2YgdGhlIE1vbnRlZ28gQmF5IFJ1Z2J5IENsdWIgYW5kIE1vbnRlZ28gQmF5IFJhY3F1ZXQgQ2x1Yi4gCkRldGVybWluaW5nIFJveWFsIFJ1bWJsZSAyMDExIHdpbm5lciBpcyByZWFsbHkgdG91Z2ggYW5hbHlzaXMuIFdvcmxkIFdyZXN0bGluZyBFbnRlcnRhaW5tZW50IGFscmVhZHkgc2hvd2VkIGxpc3Qgb2YgUm95YWwgUnVtYmxlIHBhcnRpY2lwYW50cyBpbiBvZmZpY2lhbCB2aWRlbyBwcm9tby4gRXZlcnlvbmUgZGVzZXJ2ZXMgdG8gYmUgUm95YWwgUnVtYmxlIHdpbm5lciB0byBnZXQgdGhlIHRpdGxlIHNob3QgYXQgV3Jlc3RsZU1hbmlhLiBIb3dldmVyIHRoZXJlIGlzIG9ubHkgb25lIHN1cGVyc3RhciB3aG8gZ2V0cyB0aGUgdGl0bGUgc2hvdCBvcHBvcnR1bml0eSBhdCBXcmVzdGxlTWFuaWEgWFhWSUkuIEFzIHBlciBXb3JsZCBXcmVzdGxpbmcgRW50ZXJ0YWlubWVudCBoaXN0b3J5LCB3ZSBjYW4ndCBkZXRlcm1pbmUgUm95YWwgUnVtYmxlIDIwMTEgYnV0IGl0IHdpbGwgYmUgcmV2ZWFsZWQgb24gSmFudWFyeSAzMCwgMjAxMS4gKEZ1bGwgQW5zd2VyKQpIZSBhbHNvIG5vdGVkIHRoZSBkaXNjbG9zdXJlIHJlZ3VsYXRpb24gdXNlcyB0aGUgdGVybSBldmVuIHRob3VnaCBtb3N0IHBlb3BsZSBhcmUgbW9yZSBmYW1pbGlhciB3aXRoIHRoZSB0ZXJtIGdlbmV0aWNhbGx5IG1vZGlmaWVkLiBBbmQgaGUgcG9pbnRlZCBvdXQgdGhhdCBjb21wYW5pZXMgY2FuIHByb3ZpZGUgZGlzY2xvc3VyZSB0aHJvdWdoIGNvZGVzIHRoYXQgaGF2ZSB0byBiZSBzY2FubmVkLgpHYW1lIGRldmVsb3BlcnMgYXJlbiBjaG9vc2luZyB0byBkbyB0aGVzZSB0aGluZ3MgYnV0IGluc3RlYWQgdGhleSBoYXZlIHRvIGluIG9yZGVyIHRvIHN1cHBvcnQgdGhlaXIgbGl2ZXMvZmFtaWxpZXMvZXRjLi4gCldoZW4gb2lsIGhvdCwgcHV0IGNoaWNrZW4gaW4sIGFkZCBzcGljZXMsIGNvb2sgdW50aWwgdGhleSBzdGFydCBicm93bi4gClRoZXJlIGFyZSBtYW55IGZyZWUgZ2FtaW5nIGFwcHMgdGhhdCBlYXJuIG1vbmV5IGJ5IGVuY291cmFnaW5nIHVzZXJzIHRvIHB1cmNoYXNlIGl0ZW1zLiBCdXQgdGhlIGxpbmUgYmV0d2VlbiBnYW1pbmcgYW5kIGdhbWJsaW5nIGlzIHN0YXJ0aW5nIHRvIGJsdXIgaW4gYSB3YXkgdGhhdCBpcyBjb25jZXJuaW5nIGZvciBnYW1ibGluZyBleHBlcnRzLCBwb2xpY3kgbWFrZXJzIGFuZCBwYXJlbnRzLgpPbiB0aGUgZmxvcCB0aGUgZGVhbGVyIHdpbGwgcGxhY2UgdGhyZWUgY2FyZHMgb24gdGhlIHRhYmxlLiAKQWxzbyBpbmNsdWRpbmcgQ2hhdGhhbSwgVHJlbmFyeSwgRWJlbiBKdW5jdGlvbiwgV2V0bW9yZSwgYW5kIG1heWJlIGEgZmV3IG90aGVyIHRvd25zIGluIEFsZ2VyLiAKSGF2ZSBsb3RzIG9mIG1vbXMgd2hvIGNvbWUgd2l0aCB0aGVpciBraWRzIGZvciBvdXIgcHJvZ3JhbXMsIGFuZCB0aGV5IGNhbiB0YWtlIHRoaXMgaG9tZS4gClRvIHJ1biB0aGluZ3Mgc21vb3RobHksIHN1cHBseSB5b3Vyc2VsZiB3aXRoIHRoZSBiYXNpYyBwb2tlciBwYXJ0eSBzdXBwbGllcy4gCk1pc3MgRW1lcmFsZCBOb3NlIHdhdGNoZXMgYXMgU2FtdWVsIE1pY2hhZWwgTGl2aW5nc3RvbmUgZHJpdmVzIGF3YXkuIApEaWUgTWVuc2NoaGVpdCB2ZXJkYW1tdGUgZGllIFJlbGlnaW9uIHVuZCBiZXJnYWIgaWhyIFNjaGlja3NhbCBhbiBXaXNzZW5zY2hhZnQgdW5kIFRlY2huaWsuIApPbmUgb2YgdGhlIG1vc3Qgb3V0c3RhbmRpbmcgYWNjb21wbGlzaG1lbnRzIHdhcyB0aGUgc3VjY2Vzc2Z1bCB0aXRsZSBkZWZlbnNlIG9mIHBsYXllciBUaGFuZyBMdXUgd2hlbiBoZSB3b24gdGhlIDIwMDkgV1NPUCBnb2xkIGJyYWNlbGV0IGluIEV2ZW50IDMgT21haGEgSGkgTG93IFNwbGl0IDggb3IgQmV0dGVyLCB3aGljaCB3YXMgdGhlIGxhcmdlc3QgbGl2ZSBPbWFoYSBIaWdoIExvdyBTcGxpdCB0b3VybmFtZW50IGluIGhpc3RvcnkuIApHaXZlIG1lIGtpdHRlbnMsIHVuaWNvcm5zLCBmbG93ZXJzLCBhbmQgY3VwY2FrZXMgb3ZlciB0cnVja3MsIHNrdWxscywgbW90b3JiaWtlcywgYW5kIGxpb25zIGFueSBkYXkhIEFuZCB5ZXQgbm8gb25lIHF1ZXN0aW9ucyBteSBtYXNjdWxpbml0eSBzbyBjbGVhcmx5IHRoZXJlIG5vIGNvbmZsaWN0IGJldHdlZW4gdGhlIHRoaW5ncyBvdXIgc29jaWV0eSBoYXMgYXJiaXRyYXJpbHkgZGVjaWRlZCBhcmUgImdpcmx5IiBhbmQgaGF2aW5nIGEgbWFzY3VsaW5lIGlkZW50aXR5Li4gClRoZSB2YWx1ZXMgYWxpZ24gbmljZWx5ICAgaXQgZ29lcyBiZXlvbmQgbG9va3MgYW5kIGZldGlzaGl6YXRpb24uIENoYW5lbCBJbWFuIENoYW5lbCBJbWFuIHdhcyBib3JuIG9uIDMwdGggTm92ZW1iZXIgaW4gMTk4OSBpbiBMb3MgQW5nZWxzIENhbGlmb3JuaWEuIApTbWFydCBwZW9wbGUgaGF2ZSBsb29rZWQgaW50byB0aGlzCkFzIExlYmFub24gdHJpZWQgdG8gcmVjb3ZlciBmcm9tIHRoZSBDaXZpbCBXYXIsIGl0IHdhcyB0aGUgc2l0ZSBvZiB0aGUgMjAwNiBJc3JhZWwgdnMuIEhlemJvbGxhaCBXYXIuIFdoYXQgbWFrZXMgdGhlIGNvdW50cnkgc28gYW1hemluZyBpcyB0aGF0IGV2ZW4gd2l0aCB0aGlzIGhpc3RvcnksIHRoZSBwZW9wbGUgYXJlIG92ZXJ3aGVsbWluZ2x5IHBvc2l0aXZlIGFuZCBzbyBmcmllbmRseSwgaXQgdW5yZWFsLiBUaGF0IGJlaW5nIHNhaWQsIG1hbnkgTGViYW5lc2UgcGVvcGxlIHdhbnQgdG8gbGVhdmUgTGViYW5vbiB0byB3b3JrIGluIHRoZSBVUywgVUssIEd1bGYgU3RhdGVzIGV0Yy4gaW4gb3JkZXIgdG8gaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gZWFybiBiZXR0ZXIgc2FsYXJpZXMuIFN1cHBvc2VkbHkgdGhlIHJhdGlvIG9mIG1lbiB0byB3b21lbiBpcyBzb21ldGhpbmcgbGlrZSAxOjUuIEFsdGhvdWdoIHRoZSBjb3N0cyBoZXJlIHNlZW0gdG8gYmUgcHJldHR5IEFtZXJpY2FuIChkaW5uZXIgZm9yIDIgaXMgJDMwKSwgc2FsYXJpZXMgYXJlIG5vdCBlcXVhbC4gWW91IGNhbiBoYXZlIGEgbGl2ZSBpbiBtYWlkIChQaGlsaXBwaW5vLCBJbmRpYW4gb3IgRXRoaW9waWFuKSBmb3IgJDIwMCBhIG1vbnRoLgpIZXMgc29tZW9uZSBJIG5ldmVyIHRob3VnaHQgaWQgYmUgd2l0aCwgYnV0IHdoZW4gaXQgZGlkbnQgd29yayBvdXQgd2l0aCBteSBmcmllbmQsIG1lIGFuZCBoaW0gc3RhcnRlZCBkYXRpbmcgb3V0IHNlbmlvciB5ZWFyIG9mIGhpZ2ggc2Nob29sLiBJdHMgYmVlbiBzaXggeWVhcnMgYW5kIHdlIGFyZSBnb2luZyBzdHJvbmchLiAKUHV0IG9uIHNvbWUgcmVsYXhpbmcgbXVzaWMuIFlvdSBjYW4gbGlzdGVuIHRvIHNtb290aCBqYXp6IG9yIGNoaWxsIG91dCBtdXNpYy4gVGhlcmUgYXJlIGEgbnVtYmVyIG9mIGdvb2QgdHJhY2tzIHlvdSBjYW4gY2hvb3NlIGZyb20uIFRyeSB0aGUgQ2FmIERlbCBNYXIgc2VyaWVzIHRoZW4gaW1hZ2luZSB5b3Vyc2VsZiByZWxheGluZyBhdCBhIHBsYWNlIHlvdSBhbHdheXMgd2FudGVkIHRvIHZpc2l0IHdoaWxlIGxpc3RlbmluZyB0byBpdC4KVGhlIHN0b3J5IG9mIENhcm1pbmUgRGlCaWFzZQpZb3UgY291bGQgdHJ5IHNlbmRpbmcgeW91ciBib3NzIGEgcHJvZmVzc2lvbmFsIGVtYWlsIHN0YXRpbmcgdGhhdCBoaXMgY29uZHVjdCBpcyBub3Qgd2FudGVkIGFuZCBhc2tpbmcgaGltIHRvIHN0b3AuIEtlZXAgdGhhdCBpbiB5b3VyIHJlY29yZHMgYXMgd2VsbCBhcyBoaXMgcmVzcG9uc2UuIERvY3VtZW50IGluIHRoZSBmaXJzdCBlbWFpbCBldmVyeXRoaW5nIGhlIGhhcyBkb25lLCBzbGFwcGVkIHlvdXIgYm90dG9tIGFuZCBjb21tZW50ZWQgb24geW91ciBidXN0IGFzIHdlbGwgYXMgYW55dGhpbmcgZWxzZS4uIApUd28gc2V0cyBvZiBkaWNlIHRoYXQgYXJlIGRlc2lnbmVkIGZvciBqZXdlbHJ5IHBpZWNlcyBmb3IgZWFjaCBzZXQgb2YgZWFycmluZ3MxLiBUaGUgZmlyc3QgdGhpbmcgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGRvIHRvIGNyZWF0ZSBhIGZhc2hpb25hYmxlIHNldCBvZiBlYXJyaW5ncyBjcmVhdGVkIGZyb20gQ2xheSBQb2tlciBDaGlwcyBpcyB0byBnYXRoZXIgY2hpcHMgdGhhdCBhcmUgYXR0cmFjdGl2ZSB0byB0aGUgZXllLiAKSW4gdGhlIHNob3BwaW5nIGNlbnRyZSBJIHdhbGtlZCBwYXN0IGEgbWFzc2FnZSBzaG9wIHdpdGggYSB3b21hbiBvdXQgdGhlIGZyb250IChJIGRvbiBsaWtlIGdldHRpbmcgbWFzc2FnZXMgZnJvbSBtZW4pLiAKTm8gbWF0dGVyIGhvdyB0aGV5IHdlcmUgd3JpdHRlbiB3ZWxsLCBubyBtYXR0ZXIgaG93IHRoZXkgY3JlYXRlZCBpbiBhIGdvb2QgaW50dGVsaWdlbmNlLCBubyBib3RzIGNhbiBiZSBzdWNjZXNzZnVsIGFzIHN1Y2ggYXMgYSBwZXJzb24uIEJlY2F1c2UgcG9rZXIgaXMgbm90IG9ubHkgYSBjYXJkIGdhbWUuLiAKVGhlIGNvbGxlY3RpYmxlcyBpbiB0aGUgZ2FtZSBhcmUgbW9yZSB0aGFuIHNvbWV0aGluZyB5b3UgcGljayB1cCBhbG9uZyB0aGUgd2F5IHRvIGluY3JlYXNlIHNjb3JlLCB0aGV5IG9mZmVyIGFuIHVuaXF1ZSBjaGFsbGVuZ2UgZm9yIGVhY2ggbGV2ZWwgYW5kIHJld2FyZCB5b3Ugd2l0aCBzcGVjaWFsIGNoYXJhY3RlcnMgdGhhdCBtYWtlIHRoZSBnYW1lIHBsYXkgdmVyeSBkaWZmZXJlbnRseS4KTGlzdCBvZiBUb3AgUmF0ZWQgUG9rZXIgU2l0ZXMKTWFuYWdlRW5naW5lIEFETWFuYWdlciBQbHVzIDYuMCBrZXlnZW4gb3Iga2V5IGdlbmVyYXRvciBtaWdodCBjb250YWluIGEuIApUaGUgZXh0ZW5kZWQgd2VsbG5lc3MgcmV0cmVhdHMgYXQgSm9obiBEb3VpbGxhcmQncyBMaWZlU3BhIGNhbiBsYXN0IHRocmVlIHRvIDIxIGRheXMuIExpa2UgbW9zdCBjbGllbnRzLCBXaWxzb24gdXN1YWxseSBzdGF5cyBmb3IgYSB3ZWVrLiBCdXQgbGlrZSBhbiBhbmNpZW50IGRheSBzcGEgZm9yIHRoZSBtb2Rlcm4gcGVyc29uLCBjbGllbnRzIGNhbiBhbHNvIGRyb3AgaW4gYW5kIHJlY2VpdmUgcGVyc29uYWxpemVkIHRyZWF0bWVudHMgYmFzZWQgb24gdGhlaXIgbmVlZHMgYW5kIGNvbmRpdGlvbi4gSXQgZm9jdXNlcyBvbiBpbGxuZXNzIHByZXZlbnRpb24gYW5kIHRoZSBib2R5J3MgbmF0dXJhbCBhYmlsaXR5IHRvIGN1cmUuClVzZSB0aG9zZSBzaGFtcG9vcyBhbmQgY29uZGl0aW9uZXJzIGRlc2lnbmVkIHRvIGFkZCBtb2lzdHVyZSB0byB5b3VyIGhhaXIsIGJ1dCBtYXNzYWdlIHRoZW0gb25seSBpbnRvIHlvdXIgaGFpciBhd2F5IGZyb20gdGhlIHNjYWxwLCBub3Qgd2hlcmUgaXQgY29udGFjdHMgYW5kIGludGVyYWN0cyB3aXRoIHlvdXIgc2NhbHAuIE92ZXJ3YXNoaW5nIGEgc2NhbHAgY2FuIGNvbXBlbCB0aGUgYm9keSB0byBzZWNyZXQgbW9yZSBzZWJ1bSBhbnl3YXkuCkNvbXBsYWludDogV2FzIGFibGUgdG8gZG8gb25seSAzIG1pbGVzIG9uIHRyZWFkbWlsbCB0b2RheTsgbXkgcG9zdCBoZXJlIHllc3RlcmRheSBtZW50aW9uZWQgbXkgYW5rbGUgYW5kIGxlZyBwYWluIG9uIHRoZSByaWdodCBzaWRlLiBJIGFsc28gaGFkIElUIGJhbmQgaXNzdWVzIGR1cmluZyBteSBsYXN0IG1hcmF0aG9uIHRyYWluaW5nLiBJIGJlZW4gZG9pbmcgc3RyZXRjaGVzIChJIGZvdW5kIHNvbWUgcGVyb25lYWwgdGVuZGluaXRpcyBzdHJldGNoZXMgb25saW5lIGFuZCBoYXZlIGJlZW4gZG9pbmcgdGhvc2UpLCBpY2luZywgdXNpbmcgbWVudGhvbCBydWIsIGFuZCBJIGdvdCB0aGUgYW5rbGUgd3JhcHBlZCBub3cuIApXaGVuIGEgcGxheWVyIHB1dHMgaW4gMjAlIG9mIHRoZWlyIHN0YWNrIGluIG1vc3Qgc2l0dWF0aW9ucyBhbmQgZXNwZWNpYWxseSBhdCAxLzIsIGl0IHVzdWFsbHkgbWVhbnMgdGhleSBoYXZlIGEgZGVjZW50IGhvbGRpbmcuIFRoaXMgc2l0dWF0aW9uIGlzIG5vIGRpZmZlcmVudC4gCkJlZm9yZSB0aGUgZGVjayBpcyBzaHVmZmxlZCBvciBhbnkgY2FyZHMgYXJlIGRlYWx0IHBsYXllcnMgbmVlZCB0byBnZXQgY29tZm9ydGFibGUgYXJvdW5kIHRoZSB0YWJsZS4gWW91IGRlY2lkZSBvbiB3aG8gdGhlIGRlYWxlciBpcywgYW5kIG9uIHdoYXQgdGhlIHRhYmxlIGxpbWl0IGlzLiBUaGUgdGFibGUgbGltaXQgaXMgdGhlIGxhcmdlc3QgYW1vdW50IHRoYXQgYW55b25lIGNhbiBiZXQgYXQgYW55IHRpbWUuIE9uY2UgdGhlc2UgZ3JvdW5kIHJ1bGVzIGFyZSBkZWNpZGVkIHlvdSBhbGwgdGFrZSBhIHNlYXQgYW5kIHRoZSBkZWFsZXIgc3RhcnRzIHNodWZmbGluZy4KNCkgU2VyaWVzIHBvc3RzIGFyZSBub3QgYWxsb3dlZCwgYnV0IHlvdSBtYXkgcHJvdmlkZSB1cGRhdGVzIHRvIGluY2lkZW50cyB0aGF0IGFyZSBvbiBnb2luZy4KSSBkaWRuJ3Qgd3JpdGUgdGhlaXIgZXNzYXlzIG9yIGV2ZW4gcmVhZHkgdGhlbSBqdXN0IGFza2VkIHRoZW0gdG8gd3JpdGUgdGhlbSBhbmQgaGF2ZSB0aGVtIHRoZSAyIHBhZ2VyIEkgd3JvdGUgdXAgYWJvdXQgbWUuIApUYWtlIHRoZSB0aW1lIHRvIHVuZGVyc3RhbmQgeW91ciBvcHBvbmVudHMgYW5kIGhvdyB0aGV5IHBsYXkuIEtlZXAgbm90ZXMgb24gYWxsIG9mIHRoZSBvcHBvbmVudHMgeW91IGZhY2UgYW5kIGRldmVsb3AgdGhlaXIgcGxheWVyIHByb2ZpbGVzIHNvIHlvdSBjYW4gdXNlIHRoZXNlIG5vdGVzIGluIHRoZSBmdXR1cmUgd2hlbiBmYWNpbmcgdGhlbSBhZ2FpbiBhbmQgYWdhaW4uIFVuY292ZXIgdGhlaXIgdGVsbHMgYXMgd2VsbCBhcyB3aGV0aGVyIHRoZXkgcGxheSBsb29zZSBvciB0aWdodC4gVXRpbGl6ZSB0aGlzIGtub3dsZWRnZSBvZiB5b3VyIG9wcG9uZW50cyB0byBwcmV5IHVwb24gdGhlaXIgd2Vha25lc3Nlcy4gUGF5IGF0dGVudGlvbiB0byBob3cgZnJlcXVlbnRseSBlYWNoIHBsYXllciBzdGF5cyBpbiB0aGUgZ2FtZSB0byB0aGUgUml2ZXIuIEJ5IGRldGVybWluaW5nIHdobyB0aGUgbG9vc2UgYW5kIHdlYWsgcGxheWVycyBhcmUgeW91IGNhbiBmb2N1cyB5b3VyIGVuZXJneSBhbmQgdGltZSBvbiBkZWZlYXRpbmcgdGhlbSBmaXJzdCBhbmQgdXNlIHRoZWlyIHN0YWNrcyB0byBoZWxwIGRlZmVuZCB0aGUgYmV0dGVyIHBsYXllcnMuCkkgd2FudCB0byBtb3ZlIGF3YXkgZnJvbSB0aGUgdG93biBJIGxpdmluZyBhbmQgZ2V0IGEgbmV3IGpvYiBhbmQgdHJ5IGEgZGlmZmVyZW50IGNvbW11bml0eSAodGhlIG9uZSBJIGxpdmUgaXMgdmVyeSBzbWFsbCkuIFRoZXJlIGlzbiByZWFsbHkgbWFueSBwcm9zcGVjdHMgd2hlcmUgSSBsaXZpbmcgbm93LCBzbyBJIGRvbiB0aGluayBmaW5kaW5nIG5ldyB3b3JrIHdoZXJlIEkgYXQgaXMgcmlnaHQuIAooVjEgaXMgZGVmaW5lZCwgaW4gcGFydCwgYXMgdGhlIG1heGltdW0gc3BlZWQgaW4gdGhlIHRha2VvZmYgYnkgd2hpY2ggYSByZWplY3RlZCB0YWtlb2ZmIG11c3QgYmUgaW5pdGlhdGVkIHRvIGVuc3VyZSB0aGF0IGEgc2FmZSBzdG9wIGNhbiBiZSBjb21wbGV0ZWQgd2l0aGluIHRoZSByZW1haW5pbmcgcnVud2F5LikgVGhlIGNoZWNrIGFpcm1hbiwgd2hvIHdhcyB0aGUgcGlsb3QgbW9uaXRvcmluZyAoYW5kIHdhcyBwcm92aWRpbmcgYWlycGxhbmUgZGlmZmVyZW5jZXMgdHJhaW5pbmcgdG8gdGhlIGNhcHRhaW4pLCBxdWVzdGlvbmVkIHRoZSBjYXB0YWluJ3MgZGVjaXNpb24gdG8gcmVqZWN0IHRoZSB0YWtlb2ZmIGFmdGVyIFYxIGJ1dCBhZGhlcmVkIHRvIGNvbXBhbnkgc3RhbmRhcmQgb3BlcmF0aW5nIHByb2NlZHVyZXMgYW5kIGRpZCBub3QgYXR0ZW1wdCB0byBpbnRlcnZlbmUuLiAKWW91IGdvaW5nIHRvIG5lZWQgdG8gYmUgd2lsbGluZyB0byBob25vciB5b3VyIHBhcmVudHMgYXBwcm9hY2ggdGhlbSB3aXRoIGtpbmRuZXNzIGFuZCBodW1pbGl0eS4gClRoZWlyIFdlYiBzaXRlIGFsc28gb2ZmZXJzIGhlbHAgZm9yIHBlb3BsZSBhZGRpY3RlZCB0byBnYW1ibGluZywgb25saW5lIG9yIG9mZi4uIApJIGJlZW4gdGFsa2luZyB3aXRoIHRlYW0gY2FwdGFpbnMvY29tbWFuZGVycyBhbmQgSSBnZXQgdGhlIHNhbWUgdG8gTWFzdGVyIENoaWVmIChvdXIgTlNJKSBhYm91dCBpdCBPdXIgYXJtZWQgY29tbWFuZGVyIGhhcyBiZWVuIHRoZSBzb2xlIHBlcnNvbiB0aGF0IGFjdHVhbGx5IHdhbnRzIHRvIGhlbHAgbWUgb3V0OyBoZSBiZWVuIGVuY291cmFnaW5nIG1lIHRvIGF0dGVuZCB3ZWVrZW5kIGRyaWxscywgYnV0IGV2ZW4gd2l0aCB0aGF0IGV4dHJhIGNvbW1pdG1lbnQgSSBub3Qgc3VyZSBpZiBpdCB3aWxsIGhlbHAgbXkgc2l0dWF0aW9uLgpUaGFua3MgZm9yIHRoZSBhd2FyZCBraW5kIHN0cmFuZ2VyISBBbm90aGVyIHNpbHZlciEgVGhhbmsgeW91IQpEcmFwaW5nIGlzIGFsd2F5cyByZXF1aXJlZCBpbiBhbGwgc2Vzc2lvbnMgdW5sZXNzIHlvdXIgYXJlIHJlY2VpdmluZyBzZXJ2aWNlcyBjb21wbGV0ZWx5IGNsb3RoZWQgb3IgQXNoaWF0c3UsIHdoaWNoIHJlcXVpcmVzIG1pbmltYWwgZHJhcGluZyBhbmQgeW91IG11c3Qgc2lnbiBhIHdhaXZlci4gClRoaXMsIHRob3VnaCwgdGhpcyB3YXMgYSB0ZXN0IG9mIHVwcGVyIGJvZHkgc3RyZW5ndGggYW5kIHNoZWVyIGZvcnRpdHVkZSwgbmVpdGhlciBvZiB3aGljaCBkbyBJIHBvc3Nlc3MgaW4gYW55IGdyZWF0IHF1YW50aXR5LiBQbGVudHkgb2YgYWJsZSBib2RpZWQgcGVvcGxlIGdpdmUgdXAsIGluY2x1ZGluZyBzb21lIGluIG15IG93biB0ZXN0aW5nIGdyb3VwLi4gCkFsc28sIGl0J3MgbWFuZGF0b3J5IGJ5IGdvdmVybm1lbnRzIHRoYXQgb25saW5lIGdhbWJsaW5nIGJlIHN0cmlja2x5IHJlZ3VsYXRlZCBieSB0aGUganVyaXNkaWN0aW9uIGluIHdoaWNoIHRoZSBsaWNlbnNlIGlzIG9idGFpbmVkLgpJZiB5b3UgY2FuIGRvIHNpbXBsZSBzaGFwZXMgeW91IGNhbiBtYWtlIHRoZXNlIGNyZWF0dXJlcyBhbmQgZG9sbHMuIApJIGdhdmUgbXkgY29uY2Vzc2lvbmlzdCBhIHBlcCB0YWxrIGFuZCBzb21lIHBvaW50ZXJzIG9uIGhvdyBJIHdvdWxkIGRlYWwgd2l0aCBhIHNpbWlsYXIgc2l0dWF0aW9uIGluIHRoZSBmdXR1cmUsIGFuZCBoZSBicnVzaGVkIGl0IG9mZiwgYnV0IHdoeSBwZW9wbGUgYXJlIGxpa2UgdGhhdCBJJ2xsIGp1c3QgbmV2ZXIgdW5kZXJzdGFuZC4uIApUaGlzIGlzIGRpZmZlcmVudCB0aGFuIHRoZSBVUywgZm9yIGV4YW1wbGUuIApJIGFzc3VtZSBzbz8gVGhlIGxvY2F0aW9ucyB3ZXJlIGFkZGVkIHZpYSBHb29nbGUgQWRzICA+IEFsbCBDYW1wYWlnbnMgID4gTG9jYXRpb25zIGFuZCBqdXN0IGFkZGluZyBpdCB0aGVyZS4gSSBub3Qgc2VlaW5nIGFueSBvcHRpb24gdG8gaW5kaWNhdGUgYW55IGFkdmFuY2VkIHRhcmdldGluZyBvcHRpb25zIGZvciB0aGlzPwpCbGFrZSBtb3ZlcyBwYXN0IFNhbnRvcm8gYXQgT3BlbgpSTHVjYXMzMDAwIHUKQWdhaW4gbm90IHBlcmZlY3RseSwgYXMgbG9uZyBhcyBodW1hbnMgYXJlIGludm9sdmVkIGluIG1vZGVyYXRpb24gaXQgY2FuIG5ldmVyIGJlIHRydWx5IG9iamVjdGl2ZSwgYnV0IHdlIGhhdmUgaGF2ZSBhIGRvdWJ0IG9yIHF1ZXN0aW9uIHdlIGRpc2N1c3MgYW1vbmdzdCBvdXJzZWx2ZXMgYW5kIHRyeSB0byBjb21lIGFuIGFncmVlbWVudCwgd2hpY2ggaXMgd2hhdCBoYXBwZW5lZCBoZXJlLiBJIGtub3cgdGhlcmUgYXJlIGEgbG90IG9mIGNvbXBsYWludHMgYWJvdXQgdGhlIHN1YiwgYnV0IGFnYWluIEkgdGhpbmsgdGhhdCBtb3JlIGR1ZSB0byB0aGUgcGVyc29uIG1ha2luZyB0aGUgY29tcGxhaW50cyBtaW5kc2V0LiBQZW9wbGUgdGFsayBhYm91dCBwcm9ibGVtcyBvbiB0aGlzIHN1YnJlZGRpdCBhcyBpZiB0aGV5IHN1cGVyIHVuaXF1ZTogaGF2aW5nIG5hdGlvbmFsaXN0cywgYmVpbmcgc28gbmVnYXRpdmUsIGJlaW5nIHRvbyBsaWJlcmFsLCBiZWluZyB0b28gY29uc2VydmF0aXZlLCBldGMsIGJ1dCBhZnRlciBiZWluZyBvbiByZWRkaXQgZm9yIGEgbG9uZyB0aW1lIGFuZCByZWFkaW5nIG1hbnksIG1hbnkgc3VicmVkZGl0cywgSSB0aGluayAvci9rb3JlYSBpcyBwcmV0dHkgYXZlcmFnZS4gCkdvaW5nIHRvIHRoZSBneW0gYWZ0ZXIgYSBzZXNzaW9uIGhlbHBzIGEgbG90IGFuZCBpcyBoZWFsdGhpZXIuLiAKUGVydSBoYXMgTGF5J3MgU2Fib3JlcyBQZXJ1YW5vcyIgKExheSdzIFBlcnV2aWFuIEZsYXZvdXJzKSwgd2l0aCBmbGF2b3VycyBsaWtlIEFuZGVhbiBjaGVlc2UuIFBlcnUgYWxzbyBoYXMgdGhlIExheSdzIERpcHMgYnJhbmQsIHdoaWNoIGluY2x1ZGVzIGEgUGVydXZpYW4gQ3Jpb2xsbyBDaGlsaSBzYXVjZSBzYWNoZXQuIFsgZWRpdCBdIEFzaWEgT25lIGZsYXZvdXIgc29sZCBwcmltYXJpbHkgaW4gc291dGhlcm4gQXNpYSBpcyBjYWxsZWQgIk1hZ2ljIE1hc2FsYSIuIApUaGUgZWlnaHQgdGVhbXMgYXJlIEFobWVkYWJhZCBIZWFydHMsIEphaXB1ciBKZXdlbHMsIFB1bmUgS25pZ2h0cywgS29sa2F0YSBEaWFtb25kcywgQmFuZ2Fsb3JlIFJveWFscywgR29hIEtpbmdzLCBEZWxoaSBBY2VzIGFuZCBNdW1iYWkgQWxsIFN0YXJzLiBTb21lIG9mIHRoZSBub3RhYmxlIG93bmVycyBvZiB0aGUgdGVhbXMgaW5jbHVkZSBhY3RvciBIYXJtYW4gQmF3ZWphLCBwb2tlciBjbHViIG93bmVyIFNoYW1taSBLYXJpcmEsIHByb21vdGVycyBvZiBSYWRpY28gS2hhaXRhbiBhbmQgR2F1cmF2IGthcHVyLgpTZWUgYWxzbzogS2luZyBvZiBEcmFnb25zIEdhbWVzIC4gRG93bmxvYWQgdGhlIGZ1bGwgdmVyc2lvbiAuIEtpbmcgb2YgRmlnaHRlcnMgJzk4IGlzIHRoZSBmaWZ0aCBpbiB0aGUgc2VyaWVzLCBhbmQgaXQgc2hvd3Mgbm8gc2lnbiBvZiBzbG93aW5nIGRvd24gbm93LiAKVGhlIHF1ZXN0aW9uIGlzIHZlcnkgcG9vcmx5IGRlZmluZWQgYW5kIHNvIGNhbm5vdCBiZSBhbnN3ZXJlZC4gSXRpcyBuZWNlc3NhcnkgdG8ga25vdyBob3cgbWFueSBjYXJkcyBhcmUgcGlja2VkIGFuZCB3aGV0aGVyIG9yIG5vdHRoZXkgYXJlIHJlcGxhY2VkIGluIHRoZSBwYWNrIGFmdGVyd2FyZHMuIEl0IGFsc28gZGVwZW5kcyBvbndoZXRoZXIgdGhlIGRlY2sgaXMgd2VsbCBzaHVmZmxlZCBhbmQgdGhlIGNhcmRzIGFyZSBwaWNrZWQgYXRyYW5kb20uIApIZSB3YXMgdHJhaW5lZCBhcyBhIE5pZ2h0YnJvdGhlciB0aGVuIGJyaWVmbHkgdXNlZCBieSBEb29rdSwgdGhlcmVzIGxpdHRsZSBjaGFuY2UgaGUgd2FzIHRyYWluZWQgd2VsbC4gCkJleW9uYykvU28gSGFwcHkgSSBDb3VsZCBEaWUvVGVldGggLiBUaGlzIGlzIHRoZWluZmFtb3VzICJUaGUgRmFtZSBNb25zIGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIEl0J3NoaWdobHkgc3VnZ2VzdGVkIHlvdSBhY3F1aXJlIHRoZSAnZXhwbGljaXQnIHZlcnNpb24gb2YgdGhlYWxidW0uNDYgNTAgKSBQb2tlciBGYWNlICBBY291c3RpYy9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIApIaXMgYWN0aW9ucyBoYXZlIG5vdCBiZWVuIHNldmVyZSBlbm91Z2ggdG8gZ3JvdXAgaGltIGluIHdpdGggdGhhdCBjcm93ZC4gCkJ1dCB0aGUgcHJlc3N1cmUgZm9yIG5lZ2F0aXZlIGludGVyZXN0IHJhdGVzIHRvIGRyaXZlIGNhc2ggb3V0IG9mIGJhbmsgZGVwb3NpdHMgYW5kIGludG8gdGhlIGVjb25vbXkgaXMgYnVpbGRpbmcuIFN3aXR6ZXJsYW5kLCBmb3IgaW5zdGFuY2UsIGhhcyBuZWdhdGl2ZSBjZW50cmFsIHBvbGljeSByYXRlcyB0aGF0IGNvc3QgaXRzIGJhbmtzICQxIGJpbGxpb24gYSB5ZWFyLiAKU3RhZmYgaW5jb3Jwb3JhdGluZyBwZXJzb25hbCB0cmF2ZWwgZGVlbWVkIHRvIGJlIG1vcmUgdGhhbiBpbmNpZGVudGFsIHRvIHRoZSBqb3VybmV5ICgzMCUgYW5kIG92ZXIgb2YgdGhlIHRvdGFsIGpvdXJuZXkpIHdpbGwgYmUgcmVxdWlyZWQgdG8gcGF5IDUwJSBvZiB0aGUgYWlyZmFyZXMuIElmIG5vIHBheW1lbnQgaXMgbWFkZSwgdGhlIEZCVCBhbW91bnQgd2lsbCBiZSBjaGFyZ2VkIGJhY2sgdG8gdGhlIGZhY3VsdHkvZGl2aXNpb24gcmVmZXIgdG8gUHJpdmF0ZSBUcmF2ZWwgRkJUIHdlYnBhZ2UuCkNsaWVudHMgd2l0aCBkaWFiZXRlcyBvciB2YXJpY29zZSB2ZWlucyBzaG91bGQgbm90IGJlIGFsbG93ZWQgdG8gaGF2ZSBhIGhvdCBzdG9uZSBtYXNzYWdlLgpUaGUgdHJpY2sgaXMgM0QgcHJpbnRlZCBvYmplY3RzIGRvbiBhbHdheXMgbG9vayBsaWtlIHRoZSBtb2RlbCBmb2xrcyBzaG93IG9mZi4gU29tZXRpbWVzIHRoZXkgaGF2ZSBzdXBwb3J0cyB0aGF0IHlvdSBuZWVkIHRvIHJlbW92ZSAoY2FuIHByaW50IG9udG8gdGhpbiBhaXIsIGFmdGVyIGFsbCkgYW5kIG9mdGVuIGEgYml0IG9mIHNhbmRpbmcgdG8gc21vb3RoIG91dCB0aGUgc3VyZmFjZSwgbWF5YmUgYSBsaXR0bGUgcGFpbnQsIG90aGVyd2lzZSBpdCByZWFsbHkgaXMgdGhhdCBzaW1wbGUuCklmIHlvdSBsb3NlLCB5b3UgcHV0dGluZyB1cCAkMTAsMjQwIHRvIHdpbiB0aGUgc2FtZSAkNS4gCkFoLCB1cmluYXJ5IHNlZ3JlZ2F0aW9uLiBNb21lbnQgYXQgd2hpY2gsIGFjY29yZGluZyB0byBKYWNxdWVzIExhY2FuLCB3ZSBsZWFybiB3aGV0aGVyIHdlIGFyZSBib3lzIG9yIGdpcmxzLiAKT3ZlcmFsbCBhIHBlcmlvZCBpcyBub3RoaW5nIG1vcmUgdGhhbiB0aGUgZXF1aXZpbGFudCBvZiBhIGZldyB0ZWFzcG9vbnMgcGVyIGRheS4gCkkgbGlzdGVuIHRvIGF1ZGlvYm9va3MgYXQgd29yayBvbiBwb2tlci4gCk91ciBqb2Igd2FzIHRvIHdyaXRlIGFib3V0IGEgZGF5IGluIG91ciBsaWZlIGFuZCB0byB0YWtlIGl0IGZvciB0aGUgd2hvbGUyNCBob3VyczsgdGhlbiB3ZSBoYWQgdG8gY3V0IGl0IGRvd24gd2l0aCBoZWxwIGZyb20gb3VyIGNsYXNzbWF0ZXMuIApNYXliZSBpdCB3YXMgYm9va3MgY2FycmllZCBieSBwZW9wbGUgd2hvIHdlcmUgcHJvZmVzc2lvbmFsIHRyYXZlbGVycyBvciBhdCBsZWFzdCB0cmF2ZWxlZCBhIGxvdCwgbGlrZSBOYXBvbGVvbiBvciBBbGV4YW5kZXIgZ29pbmcgdG8gIndvcmsiLiAKTm93IGNvdW50IGhlYWx0aCBjYXJlLCBmb29kLCB0cmF2ZWwgKGV2ZW4gaWYgaXQncyBieSBidXMpLCBjZWxsIHBob25lLiBZZWFoIGl0J3Mgbm90IGhhcHBlbmluZy4gVGhhdCdzIHdoeSBJIHdvcmsgZnVsbCB0aW1lLCBJJ20gaW4gc2Nob29sLCBJIHF1YWxpZnkgZm9yIGZvb2Qgc3RhbXBzLCBBTkQgbXkgbW9tIGhhcyB0byBwYXkgYWxsIG9mIG15IHJlbnQsIGluc3VyYW5jZSwgYW5kIHBob25lIGJpbGwsIGFuZCBib3VnaHQgbWUgbXkgY2FyLiAKVGhlIEluc3RpdHV0ZSBvZiBVcm9sb2dpYyBPbmNvbG9neSBJbnRlZ3JhdGVkIENhcmUgUHJvZ3JhbSBwcm92aWRlcyBuZXdseSBkaWFnbm9zZWQgdXJvbG9naWMgb25jb2xvZ3kgcGF0aWVudHMgdGhlIG9wcG9ydHVuaXR5IHRvIG1lZXQgd2l0aCByZW5vd25lZCBjYW5jZXIgc3BlY2lhbGlzdHMgYXQgVUNMQSBpbiB0aGUgZmllbGRzIG9mIFVyb2xvZ2ljIFN1cmdpY2FsIE9uY29sb2d5IGFuZCBSYWRpYXRpb24gT25jb2xvZ3kgICBvbiB0aGUgc2FtZSBkYXkgaW4gdGhlIHNhbWUgY2xpbmljLiBVQ0xBIElVTyBwYXRpZW50IGNlbnRlcmVkIGV4cGVyaWVuY2UgYWZmb3JkcyBwYXRpZW50cyBtdWx0aXBsZSBjb25zdWx0cyBvbiB0aGUgc2FtZSBkYXksIGFsbG93aW5nIGZvciB2YXJpb3VzIHBlcnNwZWN0aXZlcyBvbiBkaWFnbm9zaXMgYW5kIHN0YXRlIG9mIHRoZSBhcnQgdHJlYXRtZW50cyB0byBiZSBlYXNpbHkgZ2FpbmVkLiBUaGUgSVVPIEludGVncmF0ZWQgQ2FuY2VyIFByb2dyYW0gaGFzIGxhdW5jaGVkIHdpdGggYSBmb2N1cyBvbiBtZW4gd2l0aCBuZXdseSBkaWFnbm9zZWQgcHJvc3RhdGUgY2FuY2VyLi4gCllvdSBtaWdodCBoYXZlIHRvIGNvbWUgdG8gdGhpcyBjb25jbHVzaW9uIHRocm91Z2ggZGVuaWFsIGFuZCBlcnJvciBidXQgSSBzd2VhciBvbiBteSBtb3RoZXIgbWF0aW5nIG5hbWUgdGhhdCB3aGVuIHlvdSBwdXQgdGhlIHBldGFsIHRvIHRoZSBtZWRhbCB5b3Ugd2lsbCBwYXNzIHdpdGggZmx5aW5nIGNhcnBldHMgbGlrZSBpdCdzIGEgcGVhY2ggb2YgY2FrZS4uIApJIHRoaW5rIHByZWZsb3Agc2l6aW5nIGlzIGZpbmUgYXMgd2VsbCwgYnV0IEkgZG8gYWdyZWUgd2l0aCBKb2huUnVzdHkgdGhhdCB0aGUgcG9zdCBmbG9wIGRlY2lzaW9ucyBoZXJlIGFyZSBub3QgcGFydGljdWxhcmx5IHNpZ25pZmljYW50IHRvIEVWLiBJdCBjYW4gYmUgZWFzeSwgZXNwZWNpYWxseSBpbiBoaW5kc2lnaHQsIHRvIGxvb2sgYXQgYSBoaWdoIHZhcmlhbmNlIHNwb3QgYW5kIHRoaW5rIHRoZXJlIHdhcyBhIGNydWNpYWwgZGVjaXNpb24gcG9pbnQgdGhhdCBkaWN0YXRlcyBhIG1hc3NpdmUgRVYgdHVybmluZyBwb2ludC4gVGhhdCBjYW4gYmUgY2VydGFpbmx5IHRydWUgaW4gc29tZSBjYXNlcywgYnV0IEkgZG9uIHRoaW5rIHRoaXMgaXMgb25lLiAKQWxzbyBiZWluZyB2ZXJ5IGNyZWF0aXZlIGFuZCBleHByZXNzaXZlIHdpdGggd2hhdCB5b3UgZG9pbmcuIEkgY29ubmVjdGVkIHRvIHRoYXQuIApNYXBsZSBXYXRlciBoYXMgcmVjZWl2ZWQgbm9uIEdNTyBhbmQgb3JnYW5pYyBjZXJ0aWZpY2F0aW9ucy4uIApZb3UgY2FuIGFsc28gZmluZCBhbGwgdGhlIGF2YWlsYWJsZSBtb2RlbHMsIHNpemVzIGFuZCBjb2xvcnMgaW4gdGhlIHBvcHVsYXIgb25saW5lIG1hcmtldHBsYWNlcy4gU28sIGRvIGdldCBvbmUgb2YgdGhlIGdyZWF0ZXN0IHNodWZmbGVycyBhdmFpbGFibGUgaW4gdGhlIG1hcmtldCBub3cuIApUbyBxdWFsaWZ5IGZvciB0aGUgdGVhbSwgc2thdGVycyBhcmUgcmVxdWlyZWQgdG8gcGFzcyB0aGUgbWluaW11bSBza2lsbHMgdGVzdCBlc3RhYmxpc2hlZCBieSB0aGUgV29tZW4ncyBGbGF0IFRyYWNrIERlcmJ5IEFzc29jaWF0aW9uIChXRlREQSkuIApPbmNlIGhpcyBsaXR0bGUgaGlzc3lmaXQgcHVuaXNobWVudCAod2hpY2ggaW5jbHVkZWQgdGhlIHNpbGVudCB0cmVhdG1lbnQsIGN1eiB5YSBrbm93LCB0aGF0IGhvdyBtYXR1cmUgd2VsbCBhZGp1c3RlZCBncm93biBhZHVsdHMgaGFuZGxlIHRoZWlyIHByb2JsZW1zKSBsYXN0ZWQgZm9yIHNldmVyYWwgZGF5cywgZHVyaW5nIHdoaWNoIG15IGJpcnRoZGF5IHdhcyBpbmNsdWRlZC4uIApUaG9pZ2ggVGVkIHN0YXRlcyBoZSBvbmx5IHJlY2VpdmVkIDIuIAozcmQgIDI1MApIZSBzcGVudCB0d28gc2Vhc29ucyBpbiBNTFMgYmVmb3JlIGpvaW5pbmcgU3BhaW4ncyBWaWxsYXJyZWFsIENGIGluIEp1bmUgMjAwOC4gCk5vIHN1cnByaXNlLiAKWW91IHNob3VsZG4ndCBiZSB3b3JyeWluZyBhYm91dCBiYWxhbmNpbmcgeW91ciByYW5nZXMgbGl2ZSBhcyBtdWNoIGFzIHlvdSBzaG91bGQgYmUgZm9jdXNpbmcgb24gZXhwbG9pdGluZyBob2xlcyBpbiB5b3VyIG9wcG9uZW50cyBnYW1lLi4gCldlIGtvemVuIHVpdGVpbmRlbGlqayBoZXQgdGVycmFzIHZhbiBoZXQgSXRhbGlhYW5zZSByZXN0YXVyYW50IFNhbiBNYXJjbyB1aXQsIG1ldCBlZW4gbGV1ayB1aXR6aWNodCBvcCBoZXQgY2FmIGFhbiBkZSBvdmVya2FudCB3YWFyIGhlZWwgdmVlbCBzdG9lcmUgbW90YXJkcyB3YXJlbi4gR2VsdWtraWcgbWFhciBkYXQgd2UgaWV0cyBoYWRkZW4gb20gbmFhciB0ZSBraWprZW4sIHdhbnQgaGV0IGdpbmcgdHJhYWcgdm9vcnVpdCBlbiBoZXQgd2FzIG9vayBlZW4gZWVyc3RlIGtlbm5pc21ha2luZyBtZXQgZGUgemVlciBrbGVpbmUgcG9ydGllcyBkaWUgamUgaW4gTW9za291IGtyaWpndC4gR2VsdWtraWcgbWFhciB3YXMgZXIgd2F0IHZlcmRlciBub2cgZWVuIE1jRG9uYWxkcyEgT20ga3dhcnQgbmEgMTAgd2FyZW4gd2UgdGVydWcgb3Agb256ZSBob3RlbGthbWVyIGhldCB3YXMgbm9nIGFsdGlqZCBsaWNodCBidWl0ZW4hLiAKU2F5IHRoaXM6ICJIZXkgQ2luZHksIHlvdSBzZWVtIHByZXR0eSBjb29sLiBJIGxpa2UgdG8gZ2V0IHRvIGtub3cgeW91IGJldHRlci4gR2l2ZSBtZSB5b3VyIG51bWJlciBhbmQgd2UgZ28gb24gYSBkYXRlLiIgQ2FsbCBoZXIgaW4gNCA1IGRheXMsIGFuZCBzYXkgIkhleSBDaW5keSwgbGV0IGdvIG9uIGEgZGF0ZS4gVHVlc2RheSBuaWdodCwgOHBtLCBhdCBNZWwgYmFyIGFuZCBncmlsbGUuIEkgYnV5IHlvdSBhIGRyaW5rLiB5ZWFoPyIgU2hlIGVpdGhlciBhZ3JlZSAoWUVTISksIG1pZ2h0IGNoYW5nZSB0aGUgZGF5L3RpbWUgKFlFUyEpLCBvciB3aWxsIG1ha2UgYW55IG90aGVyIGV4Y3VzZSAoTk8pLiBUaGVuIGdvIG9uIHRoZSBkYXRlIGFuZCBzZWUgaWYgeW91IGhhdmUgYW55dGhpbmcgaW4gY29tbW9uLgoyLiBHbyB0byBTdXBlclBldHMuIDMuIApUaGV5IGFsbCBoYWQgc2tpbGwuIFRoZXkgYWxsIHdlcmUgc21hcnQuIApZb3UgYXJlbiBkcm9wcGluZyB0aGUgZGVidWZmICB5b3UgYXJlIGF2b2lkaW5nIHRha2luZyBhbnkgZnVydGhlciBkYW1hZ2UgZnJvbSBpdCBkZXNwaXRlIGdldHRpbmcgYWRkaXRpb25hbCBzdGFja3MgYW5kIHdheSBwYXN0IHRoZSBkdXJhdGlvbiBvZiBjbG9hay4gSSBhbSBub3QgYXdhcmUgb3IgY2FyZSBob3cgZXhhY3RseSB0aGUgZXhwbG9pdCB3b3JrcyBvciBpcyB0cmlnZ2VyZWQgYnV0IGFzIGZhciBhcyBJIGNhbiB0ZWxsIGZyb20gdGhlIGxvZyBvZiB0aGUgZ3VpbGQgYmVpbmcgbWVudGlvbmVkIGluIHRoaXMgdGhyZWFkIGl0IGFsc28gcmVsaWVzIG9uIHRoZSB1c2Ugb2YgY2xvYWsgYW5kIG1heWJlIG90aGVyIGltbXVuaXRpZXMgYXMgd2VsbCBkdXJpbmcgYSBzcGVjaWZpYyB3aW5kb3cgYW5kIGl0IGRvZXNuIGZ1bmN0aW9uIHRoYXQgd2F5IGluIHRoZSBvdGhlciBwaGFzZXMgb2YgdGhlIGVuY291bnRlci4KVGhlcmUgYXJlIHNvIG1hbnkgdW5rbm93bnMgdGhhdCBpdCBiZSB2ZXJ5IGhhcmQgZm9yIGEgTWFydGlhbiBwaHlzaWNpYW4gdG8gcHJlZGljdCB3aGF0IG1pZ2h0IGhhcHBlbiBvbiB0aGUgam91cm5leSBvciBhZnRlciB0aGUgbGFuZGluZy4gCk8gY29tYmllbiBoZXVyZXVzZSBkdSB2b3lhZ2UgISBRdWVsbGUgYmVsbGUgZmFvbiBkZSByYWNvbnRlciBzZXMgZGlmZnJlbnRzIG10aWVycy4gCk1vcmVvdmVyLCBDQkQgYW5kIFRIQyBzaG93ZWQgZG9zZSBkZXBlbmRlbnQgaW1tdW5vc3VwcHJlc3NpdmUgZWZmZWN0IG9uIGx5bXBob2N5dGVzIGlzb2xhdGVkIGZyb20gcmF0cyBhbmQgcGVyaXBoZXJhbCBibG9vZCBtb25vbnVjbGVhciBjZWxscyAoUEJNQykgaXNvbGF0ZWQgZnJvbSBodW1hbnMgYXMgYXNzZXNzZWQgYnkgbHltcGhvY3l0ZSBwcm9saWZlcmF0aW9uIGFzc2F5IGFuZCBmbG93IGN5dG9tZXRyeSBhbmFseXNpcyBvZiBpbmZsYW1tYXRvcnkgY3l0b2tpbmVzLiBUaGVzZSBlZmZlY3RzIHdlcmUgb25seSBzaWduaWZpY2FudCBhdCBjb25jZW50cmF0aW9ucyBhY2hpZXZlZCBpbiB0aGUgaW50ZXN0aW5hbCBseW1waGF0aWMgc3lzdGVtLCBidXQgbm90IGluIHBsYXNtYSwgZm9sbG93aW5nIG9yYWwgY28gYWRtaW5pc3RyYXRpb24gb2YgY2FubmFiaW5vaWRzIHdpdGggTENULiAKTmVpbCBTdHJhdXNzLiBVbGxzdGVpbiwgTWFuIHdvbWFuIHJlbGF0aW9uc2hpcHMgcGFnZXMuIDkgTWFyIE5laWwgU3RyYXVzcyBEaWUgUGVyZmVrdGUgTWFzY2hlIEVib29rLiBUaGlzIGlzIG5vdCBmaWN0aW9uLiAKMikgaW5zaXN0IHlvdSBnZXQgYSBsYXd5ZXIuSXQgaXMgbm90IGFueW9uZSdzIGpvYiB0byBhc3N1bWUgdGhlIHNldmVyaXR5IG9mIGFuIGFsbGVyZ3kvZGlldGFyeSByZXN0cmljdGlvbi4gClJ5ZGVyIGhhcyB0aGUgc2FtZSBsb29rIG9mIGRlcHJlc3Npb24gb24gaGlzIGZhY2UuIFRoZXkgYm90aCBsb29rIGF0IHRoZSBob3VzZSBhbmQgZHJlYWQgd2hhdCBoYXMgdG8gY29tZSBuZXh0LiAKU29jaWV0eSBpcyBub3RpY2luZyB0aGF0IGFzc3VtcHRpb25zIGFib3V0IHdoYXQgZWFjaCBnZW5kZXIgd291bGQgZW5qb3kgZG9pbmcgYXQgYSB5b3VuZyBhZ2UgaXMgbm90IG5lY2Vzc2FyaWx5IGNvcnJlY3QuIEkgd2FzIHJlYWxseSBpbnRvIG9yaWVudGVlcmluZyB3aGVuIEkgd2FzIGEga2lkIGFuZCBJIHdhcyBhIGdpcmwuIApFYXJsaWVyLCBNb3NzIGhhZCBzYWlkLCAiSSBsaWtlIG15IGNoYW5jZXMgYmV0dGVyIHRoYW4gYW55Ym9keSdzLiAKV2hhdCdzIHRoZSBsZXNzb24/IEl0IGNvdWxkIGJlIHRoYXQgYXR0ZW5kZWVzIGNyYXZlIG1vcmUgd2lkZSByYW5naW5nIGRpc2N1c3Npb25zIGFib3V0IHRpbWVseSB0b3BpY3MuIApTaG9ydGx5IHRoZXJlYWZ0ZXIsIEkgcmVhbGl6ZWQgdGhhdCB3aGF0IEkgaGFkIGJlZW4gZGVzcGVyYXRlbHkgd2FudGluZyB0byBoYXBwZW4gZm9yIGhhbGYgYSB5ZWFyIHdhcyBub3Qgd2hhdCBJIHdhbnRlZCBhdCBhbGwuIApQZW9wbGUgb24gTFNEIGFyZSByZW1hcmthYmx5IGFjY3VyYXRlIGF0IGd1ZXNzaW5nIG90aGVycycgZW1vdGlvbnMsIGFuZCBhcmUgdmVyeSBpbiB0dW5lIHdpdGggdGhlaXIgb3duLiAKQSBmZXcgbW9tZW50cyBsYXRlciBhbm90aGVyIGN1c3RvbWVyIGFwcHJvYWNoZWQgdGhlIG1hY2hpbmUsIHNsaWQgaGlzIGJhbmsgY2FyZCBpbnRvIHRoZSBzbG90IGFzIHVzdWFsLCBlbnRlcmVkIGhpcyBhY2NvdW50IGRldGFpbHMgdmlhIHRoZSBrZXlib2FyZCBhbmQgd2l0aGRyZXcgc29tZSBjYXNoOyBhcyBkaWQgc2V2ZXJhbCBvdGhlciBwZW9wbGUgb3ZlciB0aGUgbmV4dCBmZXcgaG91cnMuIApTdXJ2aXZhbCByYXRlcyBhcmUgbG93IGZvciBhIHJlYXNvbi4gCk1jQ2FsZWIgc3VmZmVycyBmcm9tIGEgZ2VuZXRpYyBuZXVyb2xvZ2ljYWwgZGlzb3JkZXIgdGhhdCBjYXVzZXMgaGlzIGhhbmRzIGFuZCBhcm1zIHRvIHRyZW1vci4KQXQgdGhlIEhlYXJ0IG9mIE1pbmRmdWxuZXNzIEJhc2VkIC4gCkZhbnMgb2Ygc3RhbmQgdXAgY29tZWR5ICAgYW5kIGZyZWUgYmVlciAgIHNob3VsZCBib29rIHRpY2tldHMgdG8gb25lIG9mIHRoZXNlIEdvb2QgR29vZCBDb21lZHkgc2hvd3MuIApJZiB0aGlzIHNvcnQgb2YgYWR2ZXJ0aXNpbmcgZG9lc24gc2NhcmUgZXZlcnkgbWFuIGludG8gd2VhcmluZyBraGFraXMsIHdoYXQgd2lsbD8gQnV0IGFjdHVhbGx5LCBpdCBzdHJhaWdodCwgd2hpdGUgbWVuICh0aGUgdmVyeSBvbmVzIG1vc3QgbGlrZWx5IHRvIHdlYXIgdGhlc2Uga2hha2lzKSB3aG8gc2hvdWxkIGJlIGFmcmFpZCBvZiB0aGlzIGtpbmQgb2YgbWFzY3VsaW5pdHkgbW9yZSB0aGFuIGFueW9uZS4gSXQgZm9yY2VzIHRoZW0gdG8gYmUgImhlcm9lcyIgYW5kIHJlYWxseSBzdXBlciBodW1hbi4gSW5zdGVhZCBvZiByZWxhdGluZyB0byBvdGhlciBodW1hbnMsIHRoZXkgbXVzdCByZWxhdGUgYXMgdGhlICJwYW50cyIgYW5kIGNhbiBuZXZlciBhY3R1YWxseSBiZSB3ZWFrIG9yIGFmcmFpZCBvciBwYXJ0IG9mIGEgZ3JvdXAgIGJ1dCByYXRoZXIgbXVzdCBjaGFyZ2UgYWhlYWQgaW50byBiYXR0bGUgbGlrZSBKb2huIFdheW5lIG9uIFQuLiAKTGV0IGxvb2sgc29mdGx5IG9uIGFsbCBiYWJpZXMgaW4gYWlycGxhbmVzIG9yIGFueSBwdWJsaWMgdHJhbnNpdCBmb3IgdGhhdCBtYXR0ZXIuIExldCB0cmVhdCBldmVyeSBtb3RoZXIgYW5kIGNoaWxkIGFzIGlmIHRoZXkgaGF2ZSBqdXN0IGdpdmVuIHVzIGEgInNvcnJ5LCBoZXJlIGEgc3dlZXQiIHBhY2thZ2UuLiAKVGhlIGVsZWN0cmljaXR5IGhlcmUgd2FzIGJlaW5nIHVzZWQgaW4gcGFydCB0byBhbGVydCAod2hlcmUgImFsZXJ0IiA9ICJzaG9jayIpIHdob2V2ZXIgaXQgd2FzIHRoYXQgd2FzIHNub296aWx5IHNpdHRpbmcgYXQgdGhlaXIgcG9zdCB0byBpbnN0YW50bHkgcGF5IGF0dGVudGlvbiB0byB3aGF0ZXZlciBpdCB3YXMgYmVpbmcgc2lnbmFsZWQgdG8gdGhhdCBwb2ludCBpbiB0aGUgc2VtYXBob3JlIGNoYWluOgpPdWNoLiAKRGFmIG51dHplbiB3aXIgYmVpIHdlbmlnZXIgb3B0aW1hbGVuIFdldHRlcnZlcmggZ2VybmUgZGFzIEFuZ2Vib3QsIHVucyB2b24gZWluZXIgZGVyIGFsdGVuIFN0cmEgZHVyY2ggZGllIFZpZXJ0ZWwgdW5kIGRpZSBIIGZhaHJlbiB6dSBsYXNzZW4uIEFscyBlcyBlaW5tYWwgZ2FyIG5pY2h0IHp1IHJlZ25lbiBhdWZoIHdpbGwsIHNpbmQgd2lyIGRhbWl0IHNvZ2FyIGFuIGRlciBFbmRzdGF0aW9uIGRlciBMaW5pZW4gMjUgdW5kIDI4IGdlbGFuZGV0OiBEZW0gQ2VtaXQgZGVzIFByYXplcmVzLiAKSXQgc2VlbXMgbGlrZSBpdCdzIG1vcmUgdG8gY29udmluY2UgdGhlbXNlbHZlcyBhbmQgdGhlaXIgZWdvcyB0aGF0IHRoZXkncmUgcmlnaHQgcmF0aGVyIHRoYW4gYWN0dWFsbHkgdG8gcmVzcG9uZCB0byBtZS4gCkppbngsIEknbSBzZXR0aW5nIHVwIGEgbGl0dGxlIHNob3AuIEFsdW5kcmEncyBDdXJpb3NpdHkgU2hvcCBBbmQgRHVlbGluZyBBcmVuYS4gClRoZXNlIGRpc29yZGVycyBhcmUgYWZmZWN0aW5nIHlvdW5nZXIgYW5kIHlvdW5nZXIgcGVvcGxlIGluIGdyZWF0ZXIgbnVtYmVycyBldmVyeSB5ZWFyLgpJIGRpZCBhIHRyaXAgYXJvdW5kIEV1cm9wZSB3aXRob3V0IGRyaW5raW5nLCBidXQgdGhhdCB3YXMgbW9yZSB0aGFuIDIwIHllYXJzIGFnbyBpbiBhbiBhZ2Ugd2l0aG91dCBpbnRlcm5ldCBhbmQgc21hcnRwaG9uZXMuIDspCkhlJ3MgYmVlbiBob25vcmVkIHdpdGggdGhyZWUgQ2xhcmlvbiBhd2FyZHMgZm9yIGhpcyBjb3ZlcmFnZSBJbmRpYW4gY2hpbGQgc2xhdmUgbGFib3IsIGF2aWF0aW9uIHNlY3VyaXR5IGFuZCB0aGUgVW5hYm9tYmVyIGNhc2UgYW5kIGEgZmlyc3QgcGxhY2UgbWVkYWwgZm9yIGFuIHVuZGVyY292ZXIgaW52ZXN0aWdhdGlvbiBvZiBhaXJwb3J0IHNlY3VyaXR5IGFzIHdlbGwgYXMgbnVtZXJvdXMgSGVhZGxpbmVyIGF3YXJkcy4uIApGb3Igb3ZlciAyNSB5ZWFycyBzaGUgaGFzIGRldmVsb3BlZCBxdWFsaXR5IHRyYWluaW5nIG1hdGVyaWFscyBmb3IgYSB2YXJpZXR5IG9mIHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyBzdXBwb3J0aW5nIHN1Y2ggY29tcGFuaWVzIGFzIERpZ2l0YWwgRXF1aXBtZW50IENvcnBvcmF0aW9uLCBDb21wYXEgYW5kIEhQLiAKSSB3YXMgMjUgd2l0aCBteSBmaXJzdCBhbmQgSSB3YXMgVEVSUklGSUVEIHRvIHRlbGwgbXkgcGFyZW50cy4gTXkgcGFyZW50cyB3ZXJlIGluIHRoZWlyIGxhdGUgMzBzL2Vhcmx5IDQwcyB3aGVuIHRoZXkgZGVjaWRlZCB0byBoYXZlIHVzLCBhbmQgbXkgbW9tIGhhZCB0b2xkIG1lIG92ZXIgYW5kIG92ZXIgYWdhaW4gdG8gd2FpdCB0byBnZXQgcHJlZ25hbnQgdW50aWwgSSB3YXMgb2xkZXIuIFNvIGhlcmUgSSB3YXMsIDI1IGFuZCBtYXJyaWVkIGdvb2dsaW5nICJob3cgdG8gdGVsbCB5b3VyIHBhcmVudHMgeW91IHByZWduYW50IHdoZW4geW91IHRvbyB5b3VuZy4iIExldCBtZSB0ZWxsIHlvdSwgbm8gb25lIGNhcmVzIGFib3V0IHlvdXIgcHJvYmxlbXMgd2hlbiB5b3UgMjUgYW5kIG1hcnJpZWQuIDpQClZpZXcgZnVsbCBkZXNjcmlwdGlvbi4gCkkgbG92ZSB0aGF0IHBsYWNlLiAKVGhlIGp1c3RpY2Ugc3lzdGVtIGlzbiBkZXNpZ25lZCBmb3IgcGVvcGxlIHdpdGggbm8gbGVnYWwgdHJhaW5pbmcsIHJlZ2FyZGxlc3Mgb2YgaG93IHdlbGwgZWR1Y2F0ZWQgdGhleSBhcmUsIE1hY2ZhcmxhbmUgc2FpZC4gU2VsZiByZXBzIGJvZyBkb3duIHdoYXQgaXMgYWxyZWFkeSBhbiBvdmVyYnVyZGVuZWQgc3lzdGVtIHRocm91Z2ggbm8gZmF1bHQgb2YgdGhlaXIgb3duLgpMaWZlIGlzIHdoYXQgeW91IG1ha2UgaXQuIFBva2VyIGlzIGEgaGFyZCBsaWZlPyB0aGF0IHJlYWxseSByZWFsbHkgc3ViamVjdGl2ZS4gCkFzIHRoZSBPRyBwbGF0Zm9ybSBvZiBzdG9yaWVzIGFuZCBwbGF5ZnVsIEFSIGludGVyYWN0aW9ucywgIGhhcyBiZWVuIHBsYWd1ZWQgYnkgY29weWNhdHMgdGhhdCBoYXZlIHN1Y2Nlc3NmdWxseSBjaGlwcGVkIGF3YXkgYXQgaXRzIHVzZXIgYmFzZS4gClNvbWUgYW5hbHl0aWNzIHByb3ZpZGVycyB3ZSBwYXJ0bmVyIHdpdGggbWF5IHByb3ZpZGUgc3BlY2lmaWMgb3B0IG91dCBtZWNoYW5pc21zIGFuZCB3ZSBtYXkgcHJvdmlkZSwgYXMgbmVlZGVkIGFuZCBhcyBhdmFpbGFibGUsIGFkZGl0aW9uYWwgdG9vbHMgYW5kIHRoaXJkIHBhcnR5IHNlcnZpY2VzIHRoYXQgYWxsb3cgeW91IHRvIGJldHRlciB1bmRlcnN0YW5kIGNvb2tpZXMgYW5kIGhvdyB5b3UgY2FuIG9wdCBvdXQuIEZvciBleGFtcGxlLCB5b3UgbWF5IG1hbmFnZSB0aGUgdXNlIGFuZCBjb2xsZWN0aW9uIG9mIGNlcnRhaW4gaW5mb3JtYXRpb24gYnkgR29vZ2xlIEFuYWx5dGljcyBoZXJlLi4gClBvdCBMaW1pdCBPbWFoYSwgYW5kIHdoYXQgYSBicmVlemUuIEV2ZXJ5IHRpbWUgSSB0YWtlIG9uIEFjZXMsIEkgY3JhY2sgdGhlbS4gTGFkeSBMdWNrIHdhcyB3aXRoIG1lIGFsbCBkYXkuIEkgd2FzIG5ldmVyIGFsbCBpbiwgaGFyZGx5IGV2ZXIgcHV0IGhhbGYgbXkgc3RhY2sgaW4gdGhlIG1pZGRsZSBhbmQgbmV2ZXIgaGFkIG9uZSBwcmVzc3VyZSBjcnVjaWFsIGhhbmQuIEkgbG92ZSBPbWFoYS4gRmluaXNoZWQgdGhlIGRheSB3aXRoIHNlY29uZCBsYXJnZXN0IGNoaXAgc3RhY2sgYmVoaW5kIHRoZSBtYWduaWZpY2VudCBSb2JlcnQgV2lsbGlhbXNvbi4KIkEgbGFtcCBpcyBnb29kIGlmIGl0IGZpdHMgaXRzIHBsYWNlIGFuZCBwcm9kdWNlcyBsaWdodCwiIGhlIHNhaWQuICJDb3N0IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggaXQuIgpPdGhlcndpc2UgbWF5YmUgdGhleSBqdXN0IHRyeWluZyB0byBzb3J0IG91dCBleGFjdGx5IHdoYXQgaGFwcGVuZWQgc3RpbGwsIGFuZCBpZGVhbGx5IHlvdXJzIGdvZXMgdGhyb3VnaCBhcyBub3JtYWwgc29vbi4gClR3byBvdGhlciBwZW9wbGUsIFlvZWwgQWx0bWFuIGFuZCBCZW5qYW1pbiBBaGRvb3QsIGFuZCB0aHJlZSBjb21wYW5pZXMgZmFjZWQgMTggYWRkaXRpb25hbCBjaGFyZ2VzIHN0ZW1taW5nIGZyb20gdGhlIHJlZ3VsYXRvciBpbnZlc3RpZ2F0aW9uIGFuZCBoYWQgYWxzbyBwbGVhZGVkIG5vdCBndWlsdHkuCkkgZGlkbid0IHJlYWxpemUgeW91IHdlcmUgMTYuIApXaXRoIHRoZSBVUyByZXRyZWF0aW5nIGFuZCBieSByZW1vdmluZyBhbGwgdGhlIEZyZW5jaCBjaXRpemVuIElTSVMgUE9XcyBmcm9tIFN5cmlhLCBSdXNzaWEgYW5kIFN5cmlhIGNhbiBzdGFydCBjYXJwZXQgYm9tYmluZyB0aGUgS3VyZHMgd2l0aG91dCB3b3JyeWluZyBhYm91dCBraWxsaW5nIFVTIHNvbGRpZXJzIGFuZCBGcmVuY2ggY2l0aXplbnMgaW4gY29sbGF0ZXJhbCBkYW1hZ2UsIElTSVMgb3Igbm90Li4gClNvbWUgcGVvcGxlIHdpbGwgYmUgd2F5IHRvbyByZWNrbGVzcywgYW5kIG90aGVycyBtaWdodCBiZSB3YXkgdG9vIHBhc3NpdmUuIEl0IGEgZ2FtZSB3aGVyZSB5b3UgZG9uIHdhbnQgdG8gYmUgZmlnaHRpbmcgdG9vIG11Y2gsIGp1c3QgZW5vdWdoIHRvIHRha2UgYWR2YW50YWdlIG9mIHlvdXIgb3Bwb25lbnRzIHdlYWtuZXNzZXMsIGFuZCB0byBrZWVwIHRoZSBwb2ludCBsZWFkZXJzIGluIGNoZWNrLk1vdGhlcm9mVmlvbGVuY2UgIDEyIHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnb0Jsb29kYm9ybmUhIEl0IHRoaXJkIHBlcnNvbiwgbGV0cyB5b3UgaGF2ZSBhIGZlbWFsZSBQQyAoYW5kIGluIGdlbmVyYWwgaGFzIGEgbG90IG9mIGF3ZXNvbWUgZmVtYWxlIGNoYXJhY3RlcnMsIG1vc3Qgb2Ygd2hpY2ggYXJlIGhvcnJpZnlpbmcgZWxkcml0Y2ggbmlnaHRtYXJlIGJvc3NlcyksIHBvaW50cyB5b3UgaW4gdGhlIGdlbmVyYWwgZGlyZWN0aW9uIG9mIHNvbWUgc3VzcGljaW91cyBsb29raW5nIHdlcmV3b2x2ZXMsIGFuZCBzZW5kcyB5b3Ugb2ZmIG9uIGEgcXVlc3QgdG8gc2xheSBhbnl0aGluZyBhbmQgZXZlcnl0aGluZyBpbiB5b3VyIHBhdGgsIHNvIGZ1bGwgb2Ygc3VycmVhbCB0d2lzdHMgYW5kIHR1cm5zIHRoYXQgYnkgdGhlIGVuZCB5b3UgaGF2ZSBmb3Jnb3R0ZW4gYWJvdXQgYWxsIHRoZSB3aXRjaGVzLCB2YW1waXJlcywgRnJhbmtlbnN0ZWluIGNyZWF0dXJlcywgc25ha2UgcGVvcGxlLCBtYWQgcHJpZXN0cywgYW5kIG1pc2NlbGxhbmVvdXMgd2VyZSB0aGluZ3MgYXMgeW91IG9mZiBnYWxsYXZhbnRpbmcgYWdhaW5zdCBhbGwgbWFubmVyIG9mIHVua25vd2FibGUsIGNvc21pYywgSFAgTG92ZWNyYWZ0IHN0eWxlIGVudGl0aWVzICh0aGF0IHlvdSBzdGFiIHRvIGRlYXRoIHdpdGggYSBiaWcgc2lsbHkga25pZmUpLiAKWW91IGNhbiBlYXNpbHkgc2F5ICJJIGZlZWwgYmV0dGVyLCBJIHdhbnQgdG8gZ28gaG9tZSIgYW5kIHRoZXkgbGV0IHlvdSBnby4gCkhlIGRvZXMgZXZlcnl0aGluZyB3aXRoIG9uZSBraWxvIG9mIGZsb3VyIHRvdGFsIGFuZCBpdCBqdXN0IHdhc3RlcyBhIHRvbiBvZiBmbG91ci4gSSB0ZW5kIHRvIDEvNCBoaXMgbGV2YWluIGZlZWRpbmdzIGFuZCAxLzIgaGlzIHJlY2lwZXMuIApZb3UgaGF2ZSBlbm91Z2ggcm9vbSB0byBjcmVhdGUgYSBub3RjaCBhbmQgbWFueSBjb21tZXJjaWFsIGJyYWtlcyBoYXZlIDIgbm90Y2hlcyBjdXQgb3V0IGZvciB0aGF0IHJlYXNvbiwgYW5kIGFsc28gcGVyaGFwcyBzbyB5b3UgY2FuIGFkanVzdCB3aGF0IGRpcmVjdGlvbiB5b3Ugd2FudCB0aGUgY29tcGVuc2F0aW9uIHRvIGdvLiBUaGUgQUtNIG11enpsZSBicmFrZSBpcyBpbnRlbnRpb25hbGx5IG9mZnNldCB0byBhY2NvdW50IGZvciB0aGUgaW1iYWxhbmNlIG9mIHRoZSBib2x0IGNhcnJpZXIsIGFuZCB3aXRoIHRoZSBBS1MgNzQgYmVpbmcgZXZlbiBsaWdodGVyIGl0IG1pZ2h0IG1ha2Ugc2Vuc2UgdG8ganVzdCBydW4gaXQgaW4gdGhlIGN1cnJlbnQgbm90Y2guIEVpdGhlciB3YXksIGlmIHlvdSBjdXQgYSBub3RjaCB5b3UgYmUgZmluZSwgaXQgZG9lc24gdGFrZSBhbnkgbG9hZCBhbmQgeW91IGhhdmUgZW5vdWdoIGNsZWFyYW5jZS4uIApUaGVyZSB3YXMgYSBuZXcgZXhjdXNlIHdpdGggZXZlcnkgbmV3IGxhdW5jaGVyIHRoYXQgaGFkIHRoYXQgZmVhdHVyZS4gQXQgYSBjZXJ0YWluIHBvaW50IEkgc3VyZSB0aGUgb25seSByZWFzb24gdGhleSBkaWRuIGltcGxlbWVudCBpdCB3YXMgb3V0IG9mIHB1cmUgc3BpdGUgYW5kIHBpZyBoZWFkZWRuZXNzLi4gCjUgdG8gQXVnLiA3IEdyYWIgYSBuYXBraW4gICB0aGluZ3MgYXJlIGdldHRpbmcgc2F1Y3kgZG93bnRvd24gdGhpcyB3ZWVrZW5kLiBUaGUgRGF5YnJlYWsgUm90YXJ5IFJpYmZlc3QgcmV0dXJucyB0byBSaXZlcnNpZGUgUGFyayB0b2RheSBpbiBpdHMgZmlmdGggeWVhciwgc2VydmluZyB1cCBob3QsIGdyaWxsZWQgcmlicyBmcm9tIGFsbCBvdmVyIHRoZSBjb3VudHJ5LiAKV2hlbiBoZSBhbmQgSSB3ZXJlIGRhdGluZyBtYW55IHllYXJzIGFnbyB3ZSB3ZXJlIGRyaXZpbmcgZG93biBhIGNvdW50cnkgcm9hZCBhbmQgdGhpcyBjaXR5IGJveSBzYWlkLCAnbG9vayBob3JzZXMuJ0kgc2FpZCAndW1tbSwgdGhvc2UgYXJlIGNvd3MuJyBGcm9tIHRoZW4gb24gaGUgd291bGQgc2VlIGNvd3MgYW5kIHNheSAsICdsb29rLiAKQSBwYWlyIGlzIHdvcnRoIHplcm8gcG9pbnRzIHJlZ2FyZGxlc3Mgb2YgdGhlIGNhcmRzJyB2YWx1ZXMuIEpva2VycyBhcmUgdGhlIGV4Y2VwdGlvbnMgYSBwYWlyIG9mIGpva2VycyBhbHdheXMgc2NvcmVzIG1pbnVzIHNpeCBwb2ludHMuIChBIHBhaXIgaXMgZm9ybWVkIGJ5IHR3byBjYXJkcyBvZiB0aGUgc2FtZSByYW5rIGluIHRoZSBzYW1lIHJvdzoga2luZ3MsIHF1ZWVucywgZXRjLiBTdWl0cyBhcmUgaXJyZWxldmFudC4gQSBwYWlyIG1heSBiZSBmb3JtZWQgb25seSB3aXRoIGJvdGggY2FyZHMgaW4gdGhlIHNhbWUgcm93LikKV2UgaW4gZnVsbCBwYW5pYyBtb2RlIGJlY2F1c2Ugd2UgbG9zdCB0d28gc3RyYWlnaHQgZ2FtZXMgZm9yIHRoZSBmaXJzdCB0aW1lIGFsbCBzZWFzb24gYW5kIGl0IE1hcmNoLiAKRGVwZW5kaW5nIG9uIHZpbGxhaW4gc3R5bGUgb2YgcGxheSBoZSBjb3VsZCBoYXZlIHN1aXRlZCA5eCB3LyBCYWNrZG9vciBGbHVzaCB0cnlpbmcgdG8gZm9sZCBvdXQgYW55IHR3byBvdmVycyB3aGlsZSBzdGlsbCBoYXZpbmcgYSBsb3Qgb2YgZ29vZCB0dXJucyB0byBiYXJyZWwuIE9yLCBhIDUgd2l0aCBhIHBhaXIgb3IgYmFja2Rvb3IgZmx1c2ggZHJhdy4gCklmIHlvdSBhcmUgYmFwdGl6ZWQgYW5kIHRoZSBFbGRlcnMgKG1hbGUgaGVhZHMgb2YgdGhlIGNvbmdyZWdhdGlvbiBjaG9zZW4gYnkgdGhlIGdvdmVybmluZyBib2R5KSBkZWNpZGUgdGhhdCB5b3UgaGF2ZSBjb21taXR0ZWQgYW4gb2ZmZW5zZSwgdGhleSBkZWNpZGUgaWYgeW91IGFyZSByZXBlbnRhbnQgZW5vdWdoLiBJZiBub3QsIHlvdSBhcmUgZGlzZmVsbG93c2hpcHBlZCwgd2hpY2ggbWVhbnMgdGhhdCBubyBtZW1iZXJzIG9mIHRoZSBjb25ncmVnYXRpb24gYXJlIGFsbG93ZWQgdG8gZXZlbiBzcGVhayB3aXRoIHlvdSwgaW5jbHVkaW5nIHlvdXIgZmFtaWx5LiAKSSdtIGEgdmVyeSBnZW5lcm91cyBwZXJzb24uIApHdXkgYm9va3MgYmV0cyByaWdodCBpbiBzYWlkIFRvbSAxNi4gSW4gb24gdGhlIG5pZ2h0IG9mIHRoZSBzY2hvb2wncyBzZW5pb3Igb25lIG9mIHRoZSBhYyAgdGl2aXRpZXMgYXJyYW5nZWQgZm9yIHRoZSBldmVuaW5nIHdhcyBhIG1vY2sgc2V0IHVwIGluc2lkZSBKQU1JUyBVTklWRUdBIENJR05BTCBIZG1lYiBDYXIgdG9kcyBTaG9lcyBERVcxVFQgU1BPUlRTIFJpIDUgUmVwbGFjZW1lbnQgV2luZG93cyB0aGUgY2FmZXRlcmlhLiBTdHVkZW50cyByZWNlaXZlZCBjaGlwcyBhbmQgcGxheWVkIGNhc2lubyBnYW1lcyBsaWtlIGJsYWNramFjayBhbmQgY3JhcHMuIApUaGVyZSBhcmUgdGhyZWUgcmVhc29ucyB0byBleHBsYWluIHRoaXMgZ3Jvd3RoOiBQZW9wbGUgd2FudCBoZWxwIGNsZWFuaW5nIHRoZSBhaXIgaW4gdGhlaXIgaG9tZXM7IHRoZXkgdXNlIHBsYW50cyBmb3IgZCBhbmQgcGxhbnRzIGVuaGFuY2UgdGhlaXIgZW1vdGlvbmFsIHdlbGwgYmVpbmcuIApBb2Z1bmsgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpIb3VzZSBjaG9yZXMgbGlrZSBtb3BwaW5nLCBzd2VlcGluZywgYW5kIHdhc2hpbmcgZGlzaGVzIG92ZXIgdGhlIGNvdW50ZXIgYWx3YXlzIGVuZGVkIHVwIHdpdGggbWUgYmVpbmcgaW4gdGhlIGZldGFsIHBvc2l0aW9uIGZvciBoYWxmIGFuIGhvdXIgaW4gYmVkIGp1c3QgdG8gc3RyZXRjaCBvdXQgdGhlIGNvbXByZXNzaW9uIHBvaW50cy4gCkFnYWluLCBmcm9tIHdoYXQncyBhdmFpbGFibGUsIHdpdGggTktPVEIgc2hlIGNvdWxkJ3ZlIHBlcmZvcm1lZCBpbiBmcm9udCBvZiBiZXR3ZWVuIDEsNTcxIGFuZCAyNywwMTcgcGVvcGxlLCBhbmQgd2l0aCB0aGUgRG9sbHMsIHNoZSBjb3VsZCBoYXZlIHBlcmZvcm1lZCBpbiBmcm9udCBvZiBiZXR3ZWVuIDQsMzIzIGFuZCAyOCwzMDUgcGVvcGxlLiAKIldlJ2QgaGFkIGZhbWlseSB2YWNhdGlvbnMuIFdlIHdvdWxkIGdvIHRvIEJpZyBTdXIuIApZb3UgdGhpbmsgaXQgZGlkIGl0cyBqb2IgIndlbGwiIG9yIGhlIHRob3VnaHQgdGhhdD8gSSBjYW4gYmVsaWV2ZSB0aGF0IGhlIHRob3VnaHQgdGhhdC4gCjExMCkuIApJZiB5b3VyIHNoaWVsZCBkb2VzbiBkcmF3IGFueSByZWFjdGlvbiBmaXJlIGFzIHNvb24gYXMgdGhleSBnbyBpbnRvIHRoZSBhbGllbiB2aXNpb24sIHRoZSBzaG90Z3VuIHdvbiBlaXRoZXIuIApUaGVpciBtZW1vcmFibGUgbmlnaHQgYXQgdGhlIGNhc2lubyBxdWlja2x5IHB1dCB0aGUgY291cGxlIGluIGRhbmdlci4KQnJ1Y2UgQ2FybGluIHJvdXRlIHRvIFVDTEEgQW5kZXJzb24gYXMgYSBwcm9mZXNzb3Igb2YgZmluYW5jZSBtYXkgYmUgb25lIG9mIHRoZSBzY2hvb2wgbW9yZSBjaXJjdWl0b3VzIG9uZXMuIENhcmxpbiwgd2hvIGNvbWVzIGZyb20gYSBmYW1pbHkgb2YgbWVkaWNhbCBwcmFjdGl0aW9uZXJzLCBoYWQgYSBzdWNjZXNzZnVsIGNhcmVlciBhcyBhIHByb2Zlc3NvciBvZiBzdXJnZXJ5IGF0IFdhc2hpbmd0b24gVW5pdmVyc2l0eSBpbiBTdC4gClR3byBwYWlyIHdpbGwgd2luLCBpbiBUZXhhcyBIb2xkZW0nIGhhbmRzIHJhbmtpbmcgdHdvIHBhaXIgaXMgaGlnaGVyIHRoYW4gdGhyZWUgb2YgYSBraW5kLiBUaGUgcmV2ZXJzZSBpcyBmb3IgYWxsIG90aGVyIHR5cGVzIG9mIHBva2VyLiAKQWZ0ZXIgdGhlIG1lbiBoYWQgc2V4IG9uIHRoZSBjbG9jayBmb3IgYSBtb250aCwgRHIuIFdhbGRpbmdlciBhc2tlZCB0aGVtIGlmIHRoZXkgd2VyZSBkaXNzYXRpc2ZpZWQgd2l0aCB0aGVpciB0aW1lIHRvIGVqYWN1bGF0aW9uLiBBbG1vc3QgNDAgcGVyY2VudCBzYWlkIHllcy4gVGhlbiBoZSBhc2tlZCBpZiB0aGV5J2QgYmUgd2lsbGluZyB0byB0YWtlIG1lZGljYXRpb24gdG8gbWFrZSB0aGVtc2VsdmVzIGxhc3QgbG9uZ2VyOyAyMyBwZXJjZW50IHNhaWQgdGhleSB3b3VsZC4gVGhlIG1lbiB3aG8gd2FudGVkIGRydWdzIGxhc3RlZCBhbiBhdmVyYWdlIG9mIDQuOSBtaW51dGVzLiBUaGUgYXZlcmFnZSB0aW1lIGZvciBhbGwgNDc0IG1lbiBpbiB0aGUgc3R1ZHk/IFNpeCBtaW51dGVzLgpNYXJsYm9ybyBhbmQgTWlzc2lvbiBXaW5ub3cgYXJlIGJvdGggY29tcGFuaWVzIG9mIFBoaWxpcCBNb3JyaXMuIFRhYm9jY28gc3BvbnNvcmhpcCBpcyBiYW5uZWQsIGJ1dCB0aGUgY29tcGFueSBNaXNzaW9uIFdpbm5vdyBkb2VzbiBzZWxsIHRhYmFjY28uIGRpcmVjdGx5LiBTbyB0aGV5IGFyZSBpbiBhIGxlZ2FsIGdyZXkgem9uZS4gSSBzYXZlIHlvdSBwbGVudHkgb2YgdGltZTogRm9yIDRLIHlvdSByZWFkIHRoYXQgdGhlcmUgYXJlIGNvbXBsaWNhdGVkIHdheXMgdG8gcGxheSBIRFIgcHJvcGVybHkgdGhyb3VnaCBNUEMgSEQgKyBtQUQgVlIgKyBMQVZBIGV0YyBldGMgZXRjLiBTYXZlIGl0LiBJdCB3aWxsIHBsYXksIGJ1dCBpdCB3b24gYmUgcGVyZmVjdC4gVGFrZSB0aGF0IGV4dGVybmFsIEhERCB5b3UgaGF2ZSwgY29weSB5b3VyIG1vdmllcyB0aGVyZSwgcGx1ZyBpdCBpbnRvIHlvdXIgVFYgYW5kIHVzZSBMRyBvd24gcGxheWVyLiBBbm90aGVyIHdheSBpcyBpbnN0YWxsaW5nIHRoZSBQbGV4IGFwcCBvbiB0aGUgTEcsIGFuZCBhIHNlcnZlciBvbiB0aGUgY29tcHV0ZXIgd2hlcmUgeW91IGhhdmUgdGhlIG1lZGlhLiBUaGlzIGlzIG11Y2ggbW9yZSB1c2VyIGZyaWVuZGx5LCBhbmQgd29uIGhhdmUgdG8gcGx1ZyB1bnBsdWcgeW91ciBIREQgYWxsIHRoZSB0aW1lLgpQcm9zZWN1dGlvbiBhbmQgdGhlIGNoYW5nZXMgd2lsbCBtb2Rlcm5pc2UgdGhlIENyaW1lcyBBY3RKb3VybmFsaXNtIEhhcyBBIFByb2JsZW06IEl0J3MgQ2FsbGVkIENhcGl0YWxpc21NdWNoIGhhcyBiZWVuIHdyaXR0ZW4gb2YgbGF0ZSBhYm91dCB0aGUgJ3Byb2JsZW1zJyBvZiB0aGUgSm91cm5hbGlzbSBpbmR1c3RyeSBhbmQgaW4gcGFydGljdWxhciB0aGUgaW1wYWN0cyBvZiBjb25zb2xpZGF0aW9uIGFuZCBsYXlvZmZzIG9uIGxvY2FsIG5ld3MgY292ZXJhZ2UuIEhvd2V2ZXIsIEkgd291bGQgcHJvcG9zZSB0aGF0IHRvIHRoZSBleHRlbnQgdGhhdCBKb3VybmFsaXNtIGRvZXMgaW4gZmFjdCBoYXZlIGEgcHJvYmxlbSwgdGhhdCBwcm9ibGVtIGlzIHNpbXBseSBhbiBleHRlbnNpb24gb2YgdGhlIG1hcmtldCBmYWlsdXJlcyBvZiBDYXBpdGFsaXNtLiBBbmQgdG8gdGhlIGV4dGVudCB0aGF0IHNvbHV0aW9ucyBleGlzdCwgdGhleSBtdXN0IGJlIHNvbHV0aW9ucyB0aGF0IGFsbG93IGpvdXJuYWxpc20gdG8gbW92ZSBvdXRzaWRlIG9mIHRoZSBicm9rZW4gc3lzdGVtIHRoYXQgaGFzIGNhdXNlZCB0aGlzIHNpdHVhdGlvbi4gCklmIHlvdSBsaWtlIHRvIGZvY3VzIG9uIGJvdGggdGhlICJsb29rIiBhbmQgdGhlICJmZWVsIiBvZiBwbGF5aW5nIGNhcmRzLCB5b3Ugd2lsbCBsaWtlbHkgZmluZCB0aGF0IHBsYXN0aWMgcGxheWluZyBjYXJkcyBhcmUgcGVyZmVjdCBmb3IgdGhlIGJyaWRnZSBnYW1lcyB0aGF0IHlvdSBob3N0IGluIHlvdXIgaG9tZS4uIApIYWQgdG8gcHJldGVuZCB3ZSB3ZXJlIHBsYW5uaW5nIGhlciA3dGggYmlydGhkYXkgZm9yIHRoZSBzZWNvbmQgdGltZS4gClRoZSBjb21tdW5pdHkgd291bGQgdGhyb3cgYW4gYWJzb2x1dGUgZml0LCBlc3BlY2lhbGx5IGlmIHRoaXMgdGhyZWFkIGlzIGFueSBpbmRpY2F0aW9uLldlIGhvcGUgdG8gcGhhc2Ugb3V0IHRoZSB3b3JkIGZvciBtb3JlIGRlc2NyaXB0aXZlLCBsZXNzIG9mZmVuc2l2ZSB0ZXJtcyBhcyB0aW1lIGdvZXMgb24sIGJ1dCBzdWNoIGEgdGFzayBpcyBhbiB1bmRlcnRha2luZyB0aGF0IHJlcXVpcmVzIGEgbGlnaHQgaGFuZCBpbiBvcmRlciB0byBtYWtlIHVzZXJzIG5vdCBmZWVsIGxpa2UgdGhleSBiZWluZyBmaW5nZXJlZCBvdXQgYXMgInRoZSBiYWQgZ3V5LiIgV2Uga25vdyB0aGF0IG1vc3QgcGVvcGxlLCB3aGVuIHRoZXkgdXNlIHRoZSB3b3JkIHRyYXAsIGRvIG5vdCBmZWVsIGxpa2UgdGhleSBzYXlpbmcgYW4gb2ZmZW5zaXZlIHRlcm0uV2UgdW5kZXJzdGFuZCB0aGF0IGludGVudCBpcyBhIHZlcnkgaW1wb3J0YW50IHBhcnQgb2YgbGFuZ3VhZ2UsIGFuZCBzb21lb25lIHdobyBkb2VzIG5vdCBpbnRlbmQgdG8gb2ZmZW5kIGlzIGZhciBsZXNzIGF0IGZhdWx0IHRoYW4gc29tZW9uZSB3aG8gZG9lcywgYnV0IGl0IGFsc28gZG9lc24gY2hhbmdlIHRoZSBmYWN0IHRoYXQgdGhleSBkb24gZ2V0IHRvIGNob29zZSB3aGV0aGVyIHNvbWVvbmUgaXMgaHVydCBieSB0aGVpciB3b3Jkcy4gCkl0IGEga25vd24gZmFjdCB0aGF0IGR1cmluZyB0aGUgcHJvY2VzcyBvZiBkeWluZyBjaGVtaWNhbHMgZ28gbnV0cyBpbiB5b3VyIGJyYWluLiBTYW5lIHBlb3BsZSB3b3VsZCBjYWxsIGl0ICJoYWxsdWNpbmF0aW9uIi4gUmVsaWdpb3VzIHBlb3BsZSBtaWdodCBjYWxsIGl0ICJzcGlyaXR1YWwgZXhwZXJpZW5jZSIuCkZpbmQgb3V0IHdoYXQgdGhlIHBlcnNvbiBub3JtYWxseSBsaWtlcy4gCkFzIGZvciBDYXB0YWluIEppbSwgaGUgd2FzIGEgaGFwcHkgbWFuIHRoYXQgc3VtbWVyLiAKSXNuJ3QgdGhpcyBqdXN0IGEgbG9vcGhvbGUgZm9yIGdhbWJsaW5nPwpEYXNobmluZSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KUmUgcmFpc2UgYW55IG1vZGVzdCBwcmUgZmxvcCByYWlzZQpJIHdoaXRlLCBidXQgYXQgbXkgb2xkIGpvYiBJIHdlbnQgdG8gYSB0d28gZGF5IGRpdmVyc2l0eSB0cmFpbmluZywgYW5kIHNwb2tlIHdpdGggbXkgd29yayBmcmllbmRzIGEgbG90IGFib3V0IGl0IGFmdGVyIHRoYXQuIE9uZSBvZiB0aGUgdGhpbmdzIHRoYXQgcmVhbGx5IGhpdCBtZSBoYXJkIHRoYXQgd2hpdGUgcGVvcGxlIG9mdGVuIGRvbiBub3RpY2UgaXMgbGl0dGxlIHRoaW5ncyB0aGF0IG1ha2UgYmVpbmcgd2hpdGUgc2VlbSBsaWtlICJ0aGUgbm9ybSIgYW5kIGJlaW5nIGEgcGVyc29uIG9mIGNvbG9yIHNlZW0gImRpZmZlcmVudC9zdHJhbmdlL25vdCB0eXBpY2FsIiwgdGhpbmdzIGxpa2UgInNraW4gY29sb3IvbnVkZSIgaW4gY2xvdGhlcyBhbmQgbWFrZXVwIGJlaW5nIGEgcGFsZSBDYXVjYXNpYW4gdG9uZS4gVGhpbmdzIGxpa2UgZG9sbHMgYmVpbmcgbWFqb3JpdHkgd2hpdGUgYW5kIGlmIHRoZXJlIG9uZSBibGFjayBvciBBc2lhbiBvciBIaXNwYW5pYyBvbmUgdGhleSBhcHBsYXVkZWQgZm9yIGJlaW5nIHNvICJkaXZlcnNlIiBldmVuIGlmIDkwJSBvZiB0aGVpciBkb2xscyBhcmUgc3RpbGwgd2hpdGUuIFRoaW5ncyBsaWtlIGEgbW92aWUgd2l0aCBhbiBhbGwgYmxhY2sgY2FzdCBiZWluZyBjcml0aWNpemVkIGZvciAidHJ5aW5nIHRvbyBoYXJkIiBhbmQgd2hhdGV2ZXIgb3RoZXIgc2hpdCB3aGlsZSB0aGVyZSBhcmUgU08gbWFueSBhbGwgd2hpdGUgbW92aWVzIHRoYXQgaGF2ZSBuZXZlciBtYWRlIHRoZSBuZXdzLCBubyBvbmUgY2FyZXMuClRoZSB0cmlja2llc3QgaXMgdGhlIGZvdXJ0aCB0eXBlIHBva2VyIHBsYXllcnMsIHdobyBsb3ZlIHRvIHBsYXkgdGhlIHByaWNpbmcgZ2FtZSBhbmQgaGF2ZSBsZWFybmVkIHRoYXQgaWYgdGhleSBmb2N1cyBvbiBwcmljZSwgdGhleSBjYW4gZ2V0IHZlbmRvcnMgdG8gbGVhdmUgbW9uZXkgb24gdGhlIHRhYmxlIGJ1dCBjb250aW51ZSB0byBwcm92aWRlIGhpZ2ggdmFsdWUgZmVhdHVyZXMgYW5kIHNlcnZpY2VzLiAKUGxheXMgdGlnaHQgYW5kIGFnZ3Jlc3NpdmUuIApNeSBvd24gYXVkaW9sb2dpc3QgKHdobyBpcyBhIHVuaXZlcnNpdHkgaW5zdHJ1Y3RvciBpbiBhdWRpb2xvZ3kpIHRvbGQgbWUgdGhhdCB0aGUgdGhpbmcgd2l0aCBDb3N0Y28gaGVhcmluZyBhaWRzIHdhcyB0aGV5IHdvdWxkbid0IGJlIHRoZSBuZXdlc3QgbW9kZWxzIGJ1dCB0aGUgcHJldmlvdXMgeWVhcidzIGVxdWl2YWxlbnQuIApJIHJlY29tbWVuZCB0aGVtLiBUaGUgcHJvYmxlbSwgaW4gbXkgb3Bpbmlvbiwgd2l0aCB0b29scyBsaWtlIEp1dWwgaXMgdGhhdCB0aGV5IHJlZW5mb3JjZXMgdGhlIGhhYml0LiBUaGUgaGFiaXQgYW5kIHJpdHVhbCBvZiBzbW9raW5nLi4gCk1hdHRoZXcgUGVycnkgd2FzIGluIHBsYXkgcmVoZWFyc2FscyBpbiBMb25kb24sIGJ1dCBoaXMgcHJlc2VuY2Ugd2FzIGNlcnRhaW5seSBmZWx0LiAKV2hpdGUgSG91c2UgYWlkZXMgbWFpbnRhaW5lZCB0aGF0IHRoZSB0d28gaGF2ZSBhIHN0cm9uZyByZWxhdGlvbnNoaXAgaW4gcGFydCBiZWNhdXNlIEJvbHRvbiBoYXMgdHJpZWQgbm90IHRvIGRyYXcgYXR0ZW50aW9uIHRvIHRoZSBjaGFuZ2VzLiAKTXkgYmVzdCBwaWVjZSBvZiBhZHZpY2UgaXMgdG8gZm9sbG93IHRoZSBtaWxlcyBpbiB0aGUgcGxhbi4gUnVuIHRoZSBkYXlzIHlvdSBkb24gZmVlbCBsaWtlIHJ1bm5pbmcgYW5kIGlmIGZvciBzb21lIHJlYXNvbiB5b3UgbWlzcyBhIGRheSBvciBjYW4gY29tcGxldGUgYWxsIHRoZSBtaWxlcyBmb3IgdGhhdCBkYXksIGFkZCBpdCB0byBhIGRpZmZlcmVudCBkYXkgZHVyaW5nIHRoZSB3ZWVrLiBJZiB5b3UgcHV0IGluIHRoZSB0cmFpbmluZyB5b3Ugd2lsbCBzdWNlZWQuIExhc3RseSwgbGlzdGVuIHRvIHlvdXIgYm9keS4gWW91IGFyZSBhIHJ1bm5lci4gRXZlcnlvbmUgY2FuIGdpdmUgeW91IGFkdmljZSBhbmQgeW91IGNhbiByZWFkIGFsbCB5b3Ugd2FudC4gQnV0IHlvdSBrbm93biB3aGVuIHlvdXIganVzdCBzb3JlLCBvciB3aGVuIGl0IG1heSBiZSBhIGJpZ2dlciBpc3N1ZS4gWW91IHdpbGwga25vdyB3aGVuIHlvdSBuZWVkIGVuZXJneSBvciB3YXRlciBhbmQgd2hhdCBvdmVyYWxsIHdpbGwgd29yayBmb3IgeW91LiBHb29kIGx1Y2shCk1hdGNoaW5nIGdyaWQgd2VhcG9ucyB3aXRoIGEgY2xhc3MvY2hhcmFjdGVyIHByb2ZpY2llbmN5IGdpdmUgc3VjaCBhIHNtYWxsIGRhbWFnZSBib29zdCB0aGF0IGlzIHRyaXZpYWwuIEFzIGZvciB0ZWFtIHByb2ZpY2llbmN5LCB0aGlzIGlzIG9ubHkgcmVsZXZhbnQgaWYgeW91IHVzZSBBdG1hL1VsdGltYSBvciBIb2xsb3dza3kgd2VhcG9ucyB3aGljaCByZXF1aXJlIGEgbWF0Y2hpbmcgcHJvZmljaWVuY3kgdG8gd29yaywgb3V0c2lkZSBvZiB0aG9zZSB0aGVyZSBpcyBubyByZWFzb24gdG8gZ28gb3V0IG9mIHlvdXIgd2F5IHRvIGFzc2VtYmxlIGEgdGVhbSB3aXRoIG1hdGNoaW5nIHByb2ZpY2llbmN5LgpTZWUsIHRoYXQgc291bmRzIGNvdW50ZXJpbnR1aXRpdmUgdG8gbWUuIElmIEkgcmVhbGx5IGludG8gd2hhdCBzb21lb25lIGlzIHNheWluZywgdGhlbiBJIG1vcmUgZWFnZXIgdG8gaGVhciB0aGUgcmVzdCBvZiBpdCBhbmQgdGh1cyBsZXNzIHBhdGllbnQgd2l0aCB0aGluZ3MgdGhhdCBnZXQgaW4gdGhlIHdheSBvZiBoZWFyaW5nIHRoYXQgbWVzc2FnZS4gU28gbXkgdGhvdWdodCBwcm9jZXNzIGlzIGJhc2ljYWxseSAiSSBrbm93IHdoYXQgeW91IHNheWluZyBpcyBhd2Vzb21lLCBzbyBwbGVhc2UganVzdCBzcGl0IGl0IG91dCBhbHJlYWR5ISIuIApTdW4gVGltZXMgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIGNoYW5nZSBvciB0ZXJtaW5hdGUgaXRzIERpZ2l0YWwgUHJvZHVjdHMgYXQgYW55IHRpbWUuIElmIFN1biBUaW1lcyB0ZW1wb3JhcmlseSByZWR1Y2VzIG9yIGVsaW1pbmF0ZXMgdGhlIGNoYXJnZSBmb3IgY29udGVudCBvciBhY2Nlc3MgdGhhdCB5b3UgYXJlIGN1cnJlbnRseSBwYXlpbmcgZm9yIHVuZGVyIGRpZmZlcmVudCB0ZXJtcywgeW91IHdpbGwgbm90IHJlY2VpdmUgYSByZWZ1bmQuIApUb2FfSWduaWthICAxIHBvaW50ICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KWW91IGhhdmUgdG8gZ2V0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UganVzdCBkb24gZ2l2ZSBhIHNoaXQgYWJvdXQgYW55dGhpbmcgYW55bW9yZS4gVGhhdCByb2NrIGJvdHRvbSBhbmQgZnJvbSB0aGVyZSBldmVyeXRoaW5nIGlzIGFuIGltcHJvdmVtZW50LiAKTWF4IGhhcyBub3QgdHJhY2tlZCB0aGUgZnVuZHMgY2xvc2VseSBlbm91Z2ggdG8gZGV0ZXJtaW5lIGlmIGhlIGlzIGdldHRpbmcgZ29vZCBwZXJmb3JtYW5jZSBmb3IgdGhlIGFtb3VudCBoZSBwYXlzLiAKT3ZlcnZpZXcgZm9yIFBlbGluMHJlCkFsc28sIHRyeSB0byByZW1lbWJlciB0aGF0IGluIGdhbWJsaW5nIHBva2VyLCB5b3Ugc2hvdWxkIG5ldmVyIGxvc2UgeW91ciB3aW5uaW5ncy4gVHJ5IHRvIGxlYXZlIHRoZSBhcmVhIHdoZW4geW91IGFyZSBhbHJlYWR5IGZpbmlzaGVkLiBEbyBub3Qgc3RheSBsb25nZXIgdGhhbiB5b3UgY2FuIGFmZm9yZC4gWW91IG1pZ2h0IGp1c3QgZW5kIHVwIGdhbWJsaW5nIG1vcmUgbW9uZXkgYW5kIHJpc2tpbmcgbW9yZSBtb25leS4KUHJldHR5IHN0YW5kYXJkIGZvciB0ZWxldmlzaW9uIGF1ZGllbmNlcy4gCkkgc2VlIHN0b3JpZXMgZXZlcnkgZGF5IGFib3V0IHRlYWNoZXJzIHdobyBoYXZlIHJlbGF0aW9uc2hpcHMgd2l0aCBzdHVkZW50cyAgIGluIHRoZSBuZXdzLCBpbiBtb3ZpZXMuIEFuZCB5b3UgbWlnaHQgYmUgd29uZGVyaW5nIGhvdyBhIHRlYWNoZXIgY291bGQgZXZlciBjcm9zcyBhIGxpbmUgbGlrZSB0aGF0LiAKT3ZlcmNvbWluZyB0aGUgTW9uc3RlcjogVGhlIHByb3RhZ29uaXN0IHNldHMgb3V0IHRvIGRlZmVhdCBhbiBhbnRhZ29uaXN0aWMgZm9yY2UgKG9mdGVuIGV2aWwpIHdoaWNoIHRocmVhdGVucyB0aGUgcHJvdGFnb25pc3QgYW5kL29yIHByb3RhZ29uaXN0IGhvbWVsYW5kLiAoSmFtZXMgQm9uZCkKSSB3b3VsZCByYXRoZXIgd2F0Y2ggdGhlIGNvdW50cnkgYnVybiB0aGFuIHNlZSBpdCBpbiB0aGUgaGFuZHMgb2YgdGhlIElzbGFtaXN0cyBhZ2Fpbi4gVGhlIGFybXkgaXMgdGhlIG9ubHkgaG9wZSBhZ2FpbnN0IHRoZW0uIFdlIHNob3VsZG4gYmUgaWRlYWxpc3RpYyBhbmQgYXNwaXJlIGZvciBhIGZ1bGwgd2VzdGVybiBzdHlsZSBsaWJlcmFsIGRlbW9jcmFjeSBpbiBFZ3lwdC4gSXQgd29uIGhhcHBlbiBpbiB0aGUgbmV4dCA1MCB5ZWFycy4KSSBtb3ZlZCB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgd29ybGQgZm9yIGdyYWQgc2Nob29sIGFuZCBteSBodXNiYW5kLiAKUm9sbCBhcyBmYXIgdXAgdG8gdGhlIHB1YmlzIGFzIHlvdSB3YW50LCBhbmQgY29udHJvbCB0aGUgaW50ZW5zaXR5IGJ5IHN1cHBvcnRpbmcgeW91cnNlbGYgbW9yZSBvciBsZXNzLiBXaXRoIHN1Y2ggYSB3aWRlIGNvbnRhY3QsIHlvdSBoYXZlIHRvIGRvIHNvbWV0aGluZyByZWFsbHkgaW1wcmVzc2l2ZSB0byBkYW1hZ2UgeW91cnNlbGYsIGFuZCB0aG9zZSBiaWcgbXVzY2xlcyAoSU1IQkVPKSByZWFsbHkgZG8gcmVzcG9uZCB3ZWxsIHRvIHJvbGxpbmcuIEFsc28sIGNvbnNpZGVyIHJvbGxpbmcgb3V0IHYuIApUaGVyZSBhcmUgYSBmZXcgTEdCVFFJQSsgcGVvcGxlIGluIG15IGV4dGVuZGVkIGZhbWlseSB3aG8gaGFkIG1hcnJpZWQgaW50byBoZXRlcm9zZXh1YWwgcHJlc2VudGluZyBtYXJyaWFnZXMgZWl0aGVyIGZvciBzdXJ2aXZhbCwgb3IgYmVjYXVzZSBpdCB3YXMgdGhlIHBhdGggb2YgbGVhc3QgcmVzaXN0YW5jZSwgc28gSSB3YXMgY29uY2VybmVkIHRoYXQgbXkgYmlzZXh1YWxpdHkgd291bGQgYmUgYWNjZXB0ZWQsIGJ1dCBJIG1heSBiZSBlbmNvdXJhZ2VkIHRvIG9ubHkgZW5jb3VyYWdlIGhldGVyb3NleHVhbCByZWxhdGlvbnNoaXBzLiAKSW4gYWxsIGxpa2VsaWhvb2QsIHlvdXIgb3Bwb25lbnQgaG9sZHMgYW4gYWNlIG9yIGEga2luZywgc28gbWFraW5nIGEgcGFpciB3aWxsIG5vdCBoZWxwLiBZb3VyIG9ubHkgaG9wZSBpcyBtYWtpbmcgYSBzdHJhaWdodC4gCkVmZmVjdGl2ZSBDb21tdW5pY2F0aW9uIFNraWxscyBmb3IgU29jaWFsIFdvcmtlcnMKIldlIHdhbnQgb3VyIHBlb3BsZSB0byB0aGluayBjcml0aWNhbGx5IGFib3V0IGhvdyB0aGluZ3MgaGF2ZSBiZWVuIGRvbmUgaW4gdGhlIHBhc3QgYW5kIGFsd2F5cyBiZSBsb29raW5nIGZvciBpbm5vdmF0aXZlIHdheXMgdG8gaW1wcm92ZSBzZXJ2aWNlLiIuIApBbW9uZyBhbiBhcnJheSBvZiBsaXZpbmcgY29zdHMgY292ZXJlZCBieSB0aGUganVuaW9yIHdlbGZhcmUgZnVuZCBhcmUgc2Nob29sIGZlZXMsIHV0aWxpdHkgYmlsbHMgYW5kIGhvdXNpbmcgZXhwZW5zZXMuCiJBbmQgd2hhdCB0aGlzIGluZGl2aWR1YWwgZW5kZWQgdXAgYmVpbmcgd2FzIHlvdXIgd29yc3QgbmlnaHRtYXJlLCBhcyBmYXIgYXMgYSBzb24gY291bGQgYmUuIApOYWgsIHNvbWV0aW1lcyBwdWJsaWMgYnJvYWRjYXN0aW5nIG9mIGEgZG9uYXRpb24gY2FuIGJyaW5nIGluIG1vcmUgZG9uYXRpb25zICgib2gsIFt4XSBzdXBwb3J0ZWQgdGhpcyBjaGFyaXR5PyBJIHdpbGwgdG9vISIpIG9yIGJlIGFuIGluY2VudGl2ZSB0byBkb25hdGUgbXVjaCBuZWVkZWQgZnVuZHMgKCJJZiBJIGdpdmUgJDVtaWwsIHRoZXknbGwgbmFtZSB0aGUgbGlicmFyeSBhZnRlciBtZSEiKSBJJ20gbm90IHRoZSBzaG91dCBmcm9tIHRoZSByb29mdG9wcyBraW5kIG9mIHBlcnNvbiBteXNlbGYsIGJ1dCBJIGhhdmUgd29ya2VkIGluIG5vbnByb2ZpdHMgYW5kIHlvdSdkIGJldHRlciBiZWxpZXZlIHdoZW5ldmVyIHRoZSB3ZWxsIGxpa2VkIGxvY2FsIGJpbGxpb25haXJlIGNvdXBsZSBtYWtlcyBhICQxbWlsIHBsZWRnZSB0byBvdXIgbm9ucHJvZml0LCB3ZSdyZSBnb2luZyB0byBibGFzdCB0aGUgbmV3cyBmcm9tIGFzIG1hbnkgbWVkaWEgb3V0bGV0cyBhcyBwb3NzaWJsZS4gQW5kIHRoZXkgbGV0IHVzLCBiZWNhdXNlIHRoZXkga25vdyBpdCBicmluZ3MgaW4gbW9yZSBkb25hdGlvbnMuIChUaGV5J3ZlIGFsc28gbWFkZSBkb25hdGlvbnMgb24gdGhlIERMLiBHb29kIGZvbGsuKQpBcyBoZXIgcHJvY2VlZGluZ3MgY29udGludWVkLCBzaGUgcmVmdXNlZCB0byBhcHBlYXIgaW4gY291cnQgdmlhIHZpZGVvIGxpbmsgdGhyZWUgdGltZXMgYW5kIHdhcyBwaHlzaWNhbGx5IHJlbW92ZWQgZnJvbSBoZXIgTWlsdG9uIGFyZWEgamFpbCBjZWxsIG9uIEF1Zy4gMjggYW5kIG9yZGVyZWQgdG8gdW5kZXJnbyBhIG1lbnRhbCBoZWFsdGggYXNzZXNzbWVudC4KMjAgTm92IDIwMDAgLiBWZXJzaW9uIHRvIGEgbHlyaWMgdGhlYXRyZSwgd2hpY2ggaGFkIGRvdWJ0bGVzcyBiZWVuIGhpcyBpbnRlbnRpb24gZnJvbSB0aGUgLiAKTGV0IG1lIGdpdmUgeW91IHNvbWUgYmFja2dyb3VuZCBvbiBMZWJhbm9uLiBGaXJzdCBvZiBhbGwsIGl0IG9ubHkgaGFsZiB0aGUgc2l6ZSBvZiBXYWxlcyAgIG15IGJlc3QgZ3Vlc3MgaXMgdGhhdCBpdCBhYm91dCA4MCBtaWxlcyBub3J0aCB0byBzb3V0aCBhbmQgNDAgbWlsZXMgZWFzdCB0byB3ZXN0ISBMZWJhbm9uIHdhcyB1bmRlciBGcmVuY2ggcnVsZSB1bnRpbCA2MCB5ZWFycyBhZ28uIEFmdGVyIGdhaW5pbmcgaW5kZXBlbmRhbmNlIGluIDE5NDMsIGl0IHdhcyB1bmZvcnR1bmF0ZWx5IHRoZSBzaXRlIG9mIGEgbWFzc2l2ZSBjaXZpbCB3YXIgZnJvbSAxOTc1IDE5OTAgd2hpY2ggcGl0dGVkIENocmlzdGlhbnMgYWdhaW5zdCBNdXNsaW1zLiBUaGUgY291bnRyeSB1c2VkIHRvIGJlIDUwJSBNdXNsaW0gYW5kIDUwJSBDaHJpc3RpYW4gYW5kIG5vdyBpdCBtb3JlIDYwJS80MCUuIFNvbWUgTGViYW5lc2UgZnJpZW5kcyB3ZSBtZXQgd2VyZSB0ZWxsaW5nIFdlbmRpIGFib3V0IHRoZSB3YXIgeWVhcnMsIHdoZW4gYm9tYnMgd291bGQgZHJvcCBhbmQgZXZlcnlvbmUgd291bGQgaGF2ZSB0byBoZWFkIGludG8gdGhlIG1vdW50YWlucy4gT25lIGxlZnRvdmVyIHJlbGljIGZyb20gdGhpcyB0aW1lIGlzIHRoZSBIb2xpZGF5IElubiBpbiBkb3dudG93biBCZWlydXQgd2hpY2ggaXMgc3RydWN0dXJhbGx5IGludGFjdCBidXQgc3RpbGwgbGl0dGVyZWQgd2l0aCBib21iIGFuZCBzbmlwZXIgaG9sZXMuCkkgaGFkIG5vIGludGVudGlvbiBvZiBiZWNvbWluZyBhIGJsYWNramFjayBkZWFsZXIsIGJ1dCBJIGltbWVkaWF0ZWx5IGtuZXcgdGhlIGNhc2lubyB3YXMgd2hlcmUgSSBiZWxvbmdlZC4gU28gcmlnaHQgYWZ0ZXIgdGhlIGNvdXJzZSBJIHF1aXQgbXkgam9iLCBwYWNrZWQgZXZlcnl0aGluZyBJIG93bmVkIGludG8gbXkgSG9uZGEgQ2l2aWMsIGFuZCBoZWFkZWQgb3V0IHdlc3QgdGhyb3VnaCB0aGUgYmlnZ2VzdCBzbm93c3Rvcm0gT2hpbyBoYWQgZXZlciByZWNvcmRlZC4gCkl0IGlzIGNsZWFyIHRoYXQgdGhlIEVneXB0aWFucyB1c2VkIGEgcHJvY2VzcyB0byBleHRyYWN0IG9pbHMgZnJvbSBhcm9tYXRpYyBwbGFudHMgZm9yIHVzZSBpbiBtZWRpY2luYWwgcmVtZWRpZXMuIApXb3JsZCBQb2tlciBGdW5kIEhvbGRpbmdzIChPVENNS1RTOldQRkgpIChPVENNS1RTOkNDUEkpLCBhIGRldmVsb3BlciBvZiBwb2tlciBzcG9uc29yc2hpcCB0b3VybmFtZW50cywgc2lnbmVkIGEgZGVmaW5pdGl2ZSBhZ3JlZW1lbnQgdG8gYWNxdWlyZSBSZWFsRGVjayBmb3IgJDE1bWxuLiBTaGFyZXMganVtcGVkIGluIG1vcm5pbmcgdHJhZGVzLlJlYWxEZWNrIGlzIGEgZ2FtaW5nIHRlY2hub2xvZ3kgY29tcGFueSB3aXRoIGV4Y2x1c2l2ZSBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzIGFuZCBpbnRlcm5ldCBtYXJrZXRpbmcgZXhwZXJ0aXNlLCBMb3MgQW5nZWxlcywgQ2FsaWZvcm5pYSBiYXNlZCBXb3JsZCBQb2tlciBGdW5kIHNhaWQgaW4gYSBzdGF0ZW1lbnQgb24gRnJpZGF5LlJlYWxEZWNrIGhhcyBiZWVuIGluIHRoZSBvbmxpbmUgcG9rZXIgZ2FtZSBkZXZlbG9wbWVudCBzcGFjZSBzaW5jZSAyMDA2IGFuZCBjdXJyZW50bHkgaG9sZHMgdHdvIGlzc3VlZCBwYXRlbnRzIHRoYXQgd2lsbCBicmluZyBhIG5ldyBsZXZlbCBvZiBpbnRlZ3JpdHkgYW5kIHRyYW5zcGFyZW5jeSB0byB0aGUgb25saW5lIHBva2VyIGluZHVzdHJ5LiBJbiBOZXcgWW9yaywgc3RyZXRjaGluZyB0aGlzIHllYXIncyByYWxseSB0byA1NiUuVGhlIHBhdGVudGVkIFJlYWxEZWNrIHBva2VyIHBsYXRmb3JtIHByb3ZpZGVzIHBva2VyIHBsYXllcnMgdGhlIGFiaWxpdHkgdG8gcGxheSByZWFsIHBva2VyIG9uIHRoZWlyIGNvbXB1dGVyIG9yIGludGVybmV0IGVuYWJsZWQgZGV2aWNlIHdpdGggYSBsaXZlIGRlYWxlciBhbmQgcmVhbCBjYXJkcywgd2hpY2ggY3JlYXRlcyBhbiBpbnRlcmFjdGl2ZSBwb2tlciBleHBlcmllbmNlIGVtdWxhdGluZyB0aGUgcmVhbCBjYXJkIGhhbmQgb3V0Y29tZXMgYW5kIHRoZSBvdmVyYWxsIGxpdmUgZGVhbGVyIGV4cGVyaWVuY2UgcGxheWluZyBsaXZlIGF0IGEgY2FzaW5vLlRoZSBSZWFsRGVjayBzeXN0ZW0gY2FuIGhvc3QgcG9rZXIgZ2FtZXMgYnJpbmdpbmcgdG9nZXRoZXIgcGxheWVycyBmcm9tIGFueXdoZXJlIGluIHRoZSB3b3JsZC5BIHBsYW5uZWQgZnV0dXJlIHJlbGVhc2Ugb2YgdGhlIFJlYWxEZWNrIHNvZnR3YXJlIHdpbGwgaW5jbHVkZSBwZWVyIHRvIHBlZXIgKFAyUCkgYXVkaW8gYW5kIHZpZGVvLCBmZWF0dXJlcywgd2hpY2ggYXJlIGFsc28gaW5jbHVkZWQgaW4gb3VyIHBhdGVudCBmaWxpbmcuT25saW5lIHBva2VyIGhhcyBiZWVuIGRlbGl2ZXJlZCBpbiB0aGUgc2FtZSBmb3JtYXQgc2luY2UgdGhlIGluY2VwdGlvbiBvZiB0aGUgaW5kdXN0cnkgb24gSmFudWFyeSAxLCAxOTk4Li4gCkRPIE5PVCBTVElSLiAKIk91ciBQZXJzb25hbCBDb25kdWN0IFBvbGljeSBhcHBsaWVzIGVxdWFsbHkgdG8gZXZlcnlvbmUgaW4gdGhlIE5GTCwiIHRoZSBsZWFndWUgc2FpZCBpbiBhIHdyaXR0ZW4gc3RhdGVtZW50LgpUaGV5IGdpdmUgeW91IGEgc29uZyBhbmQgZGFuY2UgdG8ganVzdGlmeSB0aGVpciBhY3Rpb25zLCBidXQgSSBsb25nIHN1c3BlY3RlZCB0aGlzIGlzIGFuIGV4dG9ydGlvbiBzY2hlbWUgaG9waW5nIGEgcGVyY2VudGFnZSBvZiB1c2VycyBhcmUgdG9vIGludGltaWRhdGVkIHRvIGNvbWUgZm9yd2FyZCwgYW5kIHRoZXkga2VlcCB0aGUgZnVuZHMuIApPbiBteSByZWNlbnQgcmV3YXRjaCBJIGZvdW5kIG15c2VsZiBhY3RpdmVseSBkcmVhZGluZyBpdCBhcyBpdCB1cHNldHMgbWUgc28gbXVjaCEuIApUaGVyZSB3aWxsIGJlIGNoYWxsZW5nZXMgd2l0aCB0aGUgaW5jcmVhc2VkIG51bWJlciBvZiBTS1VzLiAKU2hlIGFsc28gZmFuY2llcyBoZXJzZWxmIGEgZm9vZGllIGFuZCAidGhlIEJleW9uYyBvZiBteSBsaWZlIHN0b3J5LiIgQWNjb3JkaW5nIHRvIGhlciBiaW8sIEF1ZHJleSBjb25zaWRlcnMgaGVyIG1vbSBhbmQgZGFkIGhlciBiZXN0IGZyaWVuZHMgYW5kIGhhcyB3b3JrZWQgYXMgYSBwaXp6YSBkZWxpdmVyeSBwZXJzb24gYW5kIGFuIE1NQSBSaW5nIEdpcmwuLiAKSXQgYWN0dWFsbHkgdG9vayBtZSBhIGNvdXBsZSBvZiBtb250aHMgdG8gZ2V0IGl0IGFsbCBkb3duLiAKRW4gZWZmZXQsIHRvdXMgbGVzIGhpc3RvcmllbnMgYW50aXF1ZXMgdm91cyBkaXJvbnQgcXVlIG5vcyBhbmN0cmVzIHRhaWVudCBhc3NleiBmcmFuY2hlbWVudCAicGRzIiBhdSBib24gc2VucyBkdSB0ZXJtZS4uIApOVEEuIEl0IHdlaXJkIHNoZSBhc2tpbmcuIE1heWJlIHNoZSBoZWFyZCBvZiBhbm90aGVyIG1vdGhlciByZWNlaXZpbmcgYSBnaWZ0PyBNeSBodXNiYW5kIG9jY2FzaW9uYWxseSBidXlzIGhpcyBtb3RoZXIgZmxvd2VycyBvbiBoaXMgYmlydGhkYXkuIApFZGl0OiBhcHBhcmVudGx5IHlvdSBjYW4gZ2V0IHNhbWUgZGF5IHRvdyBwZXIgYWxsIG9mIHRoZSBjb21tZW50cyBiZWxvdy4gSSBnb3QgcmlkIG9mIEFBQSBhIGZldyB5ZWFycyBhZ28gc2luY2UgbXkgaW5zdXJhbmNlIENvIG9mZmVycyByb2Fkc2lkZSBmb3IgY2hlYXBlciwgc28gSSB3YXMgcnVubmluZyBvbiB0aGUgZmlyc3QgR29vZ2xlIGhpdCwgd2hpY2ggd2FzIGZvciBhIEFBQSBjbHViIGluIEFyaXpvbmEuIApUaGUgYmlnZ2VzdCBwcm9ibGVtIGlzIGFjdHVhbGx5IG5vdCB0aGUgTUwgcGFydCwgYnV0IHRoZSBvdGhlciBwbGF5ZXJzLCB0aGUgZGVjbGluaW5nIHJldmVudWUgb2Ygb25saW5lIHBva2VyLCBhbmQgdGhlIGFudGkgYm90dGluZyB3b3JrIGJ5IGV2ZXJ5IG1ham9yIHNpdGUuIApFdmVuIGF0IGJldHRlciBwYXlpbmcgcGxhY2VzIEkgc2VlbiBzdGFmZiByZWR1Y2VkIHRvIHRoZSBwb2ludCB3aGVyZSBJIHdhcyBsaXRlcmFsbHkgc2NoZWR1bGVkIHRvIGJlIGF0IHR3byBwbGFjZXMgYXQgdGhlIHNhbWUgdGltZS4gCkFuZCB0aGUgbGFzdCBvbmUgaW4gVmVnYXMgaGFkIGEgbG90IG9mIHVuc29sZCB0aWNrZXRzLiBJIGhvbmVzdGx5IGJlIHN1cnByaXNlZCBpZiB0aGV5IGV2ZXIgZG8gaXQgYWdhaW4sIGFuZCBpZiB0aGV5IGRvLCBpdCB3b24gYmUgaW4gVmVnYXMuIEZvciB0aGF0IGtpbmQgb2YgZWZmb3J0LCBleHBlY3QgdGhlbSB0byBiZSBpbiBDaGljYWdvIG9yIHNvbWV3aGVyZSBlbHNlIHdpdGggbG90cyBvZiBsb2NhbCBmYW5zIGFuZCBhIHF1aWNrLCBlYXN5IHNlbGxvdXQuCkZpbmFsbHksIEkgYWxzbyBzd2FtIGF0IHZhcmlvdXMgdGltZXMgaW4gdGhlIHllYXIgYW5kIHVzZWQgZmxpcHBlcnMgZm9yIGRpZmZlcmVudCB3b3Jrb3V0cyAgIHRoaXMgbWF5IGFsc28gaGF2ZSBiZWVuIGNvbnRyaWJ1dGluZy4gSW4gbXkgY2FzZSwgcmV0aXJpbmcgdGhlIG9sZCBUaW1lcyBmb3IgbmV3IG9uZXMgbWFkZSB0aGUgYmlnZ2VzdCBkaWZmZXJlbmNlLCBidXQgSSBub3cgcGF5IGF0dGVudGlvbiB0byBhbGwgdGhlIHNob2VzIEkgd2VhciBpbiB0ZXJtcyBvZiBwb3RlbnRpYWwgZnJpY3Rpb24gcG9pbnRzLi4gCldlIHVzZWQgMzUsMjY0IGNsaW5pY2FsIG1lYXN1cmVtZW50cyBvZiBnbHVjb3NlIGxldmVscyBhbmQgMTAsMjA4IG1lYXN1cmVtZW50cyBvZiBnbHljYXRlZCBoZW1vZ2xvYmluIGxldmVscyBmcm9tIDIwNjcgcGFydGljaXBhbnRzIHdpdGhvdXQgZGVtZW50aWEgdG8gZXhhbWluZSB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gZ2x1Y29zZSBsZXZlbHMgYW5kIHRoZSByaXNrIG9mIGRlbWVudGlhLiBQYXJ0aWNpcGFudHMgd2VyZSBmcm9tIHRoZSBBZHVsdCBDaGFuZ2VzIGluIFRob3VnaHQgc3R1ZHkgYW5kIGluY2x1ZGVkIDgzOSBtZW4gYW5kIDEyMjggd29tZW4gd2hvc2UgbWVhbiBhZ2UgYXQgYmFzZWxpbmUgd2FzIDc2IHllYXJzOyAyMzIgcGFydGljaXBhbnRzIGhhZCBkaWFiZXRlcywgYW5kIDE4MzUgZGlkIG5vdC4gV2UgZml0IENveCByZWdyZXNzaW9uIG1vZGVscywgc3RyYXRpZmllZCBhY2NvcmRpbmcgdG8gZGlhYmV0ZXMgc3RhdHVzIGFuZCBhZGp1c3RlZCBmb3IgYWdlLCBzZXgsIHN0dWR5IGNvaG9ydCwgZWR1Y2F0aW9uYWwgbGV2ZWwsIGxldmVsIG9mIGV4ZXJjaXNlLCBibG9vZCBwcmVzc3VyZSwgYW5kIHN0YXR1cyB3aXRoIHJlc3BlY3QgdG8gY29yb25hcnkgYW5kIGNlcmVicm92YXNjdWxhciBkaXNlYXNlcywgYXRyaWFsIGZpYnJpbGxhdGlvbiwgc21va2luZywgYW5kIHRyZWF0bWVudCBmb3IgaHlwZXJ0ZW5zaW9uLi4gCkEgZ3JlYXQgYmlydGhkYXkgcGFydHkgaWRlYSBmb3IgYW4gYWR1bHQgaXMgYnkgaW1pdGF0aW5nIHNvbWUgcG9wdWxhciBvciBoaXQgZXZlbnQsIG1hbmlhIG9yIGV4cGVyaWVuY2UuIEhlcmUgYXJlIG90aGVyIGlkZWFzIHRoYXQgeW91LCB0aGUgY2VsZWJyYW50IGFuZCBndWVzdHMgbWlnaHQgc3VyZWx5IGVuam95LgpQYXJhIHBlbWFpbiBtYXNpbmcgbWFzaW5nIGFrYW4gbWVuZGFwYXRrYW4gZHVhIGJ1YWgga2FydHUgZG9taW5vIHlhbmcga2VtdWRpYW4gYmFydSBkaWJ1a2EgdW50dWsgZGloaXR1bmcgZGFuIG1lbmVudHVrYW4gcGVtZW5hbmdueWEuIFRvdGFsIG5pbGFpIDkgYWRhbGFoIGFuZ2thIHRlcnRpbmdnaSBkYWxhbSBwZXJtYWluYW4ganVkaSBjZW1lIG9ubGluZSwgSmlrYSBCYW5kYXIgbWVuZGFwYXRrYW4gbmlsYWkgOSBtYWthIGJhbmRhciBzdWRhaCAxMDAlIGphZGkgcGVtZW5hbmcgcHV0YXJhbiB0ZXJzZWJ1dCB3YWxhdXB1biBzZW11YSBwbGF5ZXIgZGFwYXQgbmlsYWk5IGRhbiBqaWthIGJhbmRhciBtZW5kYXBhdGthbiBuaWxhaSBkaWJhd2FoIDkgZGFuIHBsYXllciBtZW5kYXBhdGthbiBuaWxhaSA5IG1ha2EgcGxheWVyIGFrYW4gbWVuZGFwYXRrYW4gYmF5YXJhbiAyeCBkYXJpIG5pbGFpIHRhcnVoYW4uIApSYW5nZSBQYXJlbnRpbmcgV29ya3MKRWFjaCBwbGF5ZXIgaXMgZGVhbHQgdHdvIGNhcmRzIGRlYWx0IGZhY2UgZG93bi4gVGhlc2UgY2FyZHMgYXJlIGtub3duIGFzIHRoZSBwbGF5ZXJzIHBvY2tldCBjYXJkcywgYW5kIHRoZXkgYXJlIGZvciB0aGF0IHBsYXllcidzIGV5ZXMgb25seS4gVGhlIGZpcnN0IHJvdW5kIG9mIGJldHRpbmcgYmVnaW5zIHdpdGggdGhlIGRlYWxlciwgYW5kIGVuZHMgd2l0aCB0aGUgcGxheWVyIHRoYXQgbWFkZSB0aGUgYmlnIGJsaW5kLiBUaGUgcGxheWVyIGNhbiBlaXRoZXIgY2FsbCB0aGUgYmV0IG1hZGUgYnkgdGhlIGJpZyBibGluZCwgcmFpc2UgaXQgdG8gYW55IGFtb3VudCBhbGxvd2VkIGJ5IHRoZSBiZXR0aW5nIHJlc3RyaWN0aW9ucywgb3IgZm9sZC4KSSB0aGluayB0aGV5IHRlbmQgdG8gdGFyZ2V0IG1vcmUgZmFuZG9tIHN0dWZmIHRoYW4ga2lkIHN0dWZmLCBJIGhlYXJkIGl0IGEgbG90IHByb2JhYmx5IGFib3V0IGEgeWVhciBhZ28gYXQgYSBndWVzcywgYXQgdGhlIHRpbWUgSSB3YXMgbGlzdGVuaW5nIHRvIGEgbG90IG9mIG5hcnJhdGVkIHN0b3JpZXMgKENyZWVweXBhc3RhLCBTQ1BzIGV0Yywgc3R1ZmYgdGhhdCB3b3VsZCBoYXZlIGEgdGVlbiBhbmQgMjAgc29tZXRoaW5ncyBmb2xsb3dpbmcpIGFuZCB0aGV5IHdlbnQgaGFyZCBmb3IgYSB3aGlsZSBnZXR0aW5nIGFsbCB0aG9zZSBuYXJyYXRvcnMgdG8gZ2l2ZSB0aGVtIHNob3V0IG91dHMuIEkgZW5kZWQgdXAgdHJ5aW5nIGl0IG91dCBiZWNhdXNlIGEgZnJpZW5kIHJlY2NvbWVuZGVkIGl0LiBJdCBkaWRuJ3Qgc2VlbSBsaWtlIHNvbWV3aGVyZSB0aGF0IHdhcyBoZWF2aWx5IG1vZGVyYXRlZCwgdGhlIGNvbW11bml0aWVzIHNlZW1lZCB0byBqdXN0IGJlIHRoZWlyIG93biB0aGluZyBhbmQgSSBjYW4gc2VlIHRoYXQgYmVpbmcgYXR0cmFjdGl2ZSB0byBzb21lLiAKVGhhdCB0aGUgd29yc3QgcXVhcnRlcmx5IHBlcmZvcm1hbmNlIGluIHR3byBhbmQgYSBoYWxmIHllYXJzLCBkb3duIGZyb20gYW5udWFsaXplZCAyIHBlciBjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGFuZCB3ZWxsIGJlbG93IGVjb25vbWlzdCBleHBlY3RhdGlvbnMgZm9yIGEgMSBwZXIgY2VudCBhbm51YWxpemVkIGluY3JlYXNlLi4gCkFjdGluZyBpbiBnb29kIGZhaXRoIGlzIHRoZSBleGNsdXNpdmUgZG9tYWluIG9mIERlbW9jcmF0cy4gQWN0aW5nIGluIGJhZCBmYWl0aCBoYXMgbmV2ZXIgaGFybWVkIGEgUmVwdWJsaWNhbiwgc28gdGhleSBkaXNwZW5zZWQgd2l0aCBhY3RpbmcgaW4gZ29vZCBmYWl0aCBhIGxvbmcgZnVja2luZyB0aW1lIGFnby4gSSBhbSB0aXJlZCBvZiB0aGUgb25lIHNpZGVkbmVzcyBvZiB0aGVzZSBhbmQgZ29vZCBmYWl0aCBhc3BlY3RzIG9mIG92ZXJzaWdodC4gVGhlcmUgbm8gcmVhc29uIGZvciBwcmV0ZW5zZSBvZiB0cnVzdCBoZXJlLiBUaGUgUHJlc2lkZW50IHdhcyBuYW1lZCBhcyBhbiB1bmluZGljdGVkIGNvIGNvbnNwaXJhdG9yIGluIGEgZmVsb255IGxhc3QgbW9udGguIEhpcyBsYXd5ZXIgaXMgZ29pbmcgdG8gamFpbCwgaGlzIE5TQyBDaGFpciBpcyBnb2luZyB0byBqYWlsLCBoaXMgY2FtcGFpZ24gbWFuYWdlciBpcyBpbiBqYWlsLiBXZSBvd2UgdGhlIFRydW1wIEFkbWluaXN0cmF0aW9uIG5vIGRlZmVyZW5jZS4gVHJlYXRpbmcgdGhlbSBhcyB0aG91Z2ggeW91IGV4cGVjdCBnb29kIGZhaXRoIGNvbXBsaWFuY2UganVzdCBtYWtlcyB5b3UgbG9vayBzdHVwaWQuCkhhbGYgZG9tZSBwZXJtaXRzIGFyZSBub3QgZWFzeSB0byBnZXQgZGF5IG9mLCBidXQgd2UgYXNrZWQgcGVvcGxlIGluIHRoZSBiYWNrcGFja2VycyBjYW1wc2l0ZSBpbiB0aGUgdmFsbGV5IGlmIHRoZXkgaGFkIGV4dHJhIHBlb3BsZSBvbiB0aGVpciBwZXJtaXRzIGFuZCBnb3QgbHVja3kuIEl0IGNvbW1vbiBmb3IgcGVvcGxlIGluIHRoZSBwYXJrIHRvIG92ZXIgYm9vayBvbiBhZHZhbmNlZCBwZXJtaXRzLiBZb3UgY2FuIGJhc2ljYWxseSBnZXQgYSBmdWxsIHJlc3VwcGx5IGZyb20gdGhlIGdyb2Nlcnkgc3RvcmUgaW4gWW9zZW1pdGUgVmFsbGV5Li4gCldlIGRpZCBub3QgZ28gaW50byBkZWJ0LiBXZSBkaWQgbm90IGRlbnQgc2F2aW5ncy4gCkF0IHRoZSBlbmQgb2YgdGhlIHJpZGUsIHRoZSBwZXJzb24gd2l0aCB0aGUgYmVzdCBwb2tlciBoYW5kIHdpbGwgd2luIGEgY2FzaCBwcml6ZS5Hb29zZWJlcnJ5IE1lc2EgaXMgYSBwb3B1bGFyIG1vdW50YWluIGJpa2luZyBhcmVhLiAKVGhlcmUgaXMgbm8gY29uc2VudCB3aGVuIHRoZXJlIGlzIGZvcmNlLCB0aHJlYXRzLCBpbnRpbWlkYXRpb24sIG9yIGR1cmVzcy4gQSBwZXJzb24ncyBsYWNrIG9mIHZlcmJhbCBvciBwaHlzaWNhbCByZXNpc3RhbmNlIG9yIG1hbm5lciBvZiBkcmVzcyBkb2VzIG5vdCBjb25zdGl0dXRlIGNvbnNlbnQuIApIZSBhc2tlZCB0aGUgbWFnZSB0byBkcmluayBlbm91Z2ggZm9yIDIgcG9pbnRzIGFuZCBnaXZlIGhpbSB0aGUgcmVzdCBiYWNrLnNvIHRoZSBtYWdlIGRyYW5rIGl0IGFsbCBhbmQgbGF1Z2hlZCBhdCBteSBicm90aGVyLCB0dXJuaW5nIHRvIGhpZ2ggZml2ZSBvdGhlciBwbGF5ZXJzIGZvciBzY3Jld2luZyBteSBicm90aGVyLiBUaGUgRE0gaGFkIGEgaG9ycmlmaWVkIGV4cHJlc3Npb24gd2F0Y2hpbmcgaXQgYWxsIHVuZm9sZC4gQSBjb3VwIGRlIGdyYWNlIGxhdGVyLCB0aGUgcGFydHkgc2xlcHQgd2l0aCBhbGFybSBzcGVsbHMgZ29pbmcuLiAKQmVzaWRlcyB0aGUgb2J2aW91cyB1c2UgaW4gaWxsbmVzcywgUmVpa2kgYWN0aXZlbHkgcHJvbW90ZXMgdGhlIGhlYWxpbmcgcHJvY2VzcyBpbiBtYW55IG90aGVyIHdheXMuIFJlaWtpIGFjdHMgbm90IG9ubHkgb24gdGhlIHBoeXNpY2FsIGxldmVscywgYnV0IGFsc28gYWRkcmVzc2VzIG1lbnRhbCwgZW1vdGlvbmFsLCBhbmQgZW5lcmdldGljIGltYmFsYW5jZXMuIFJlaWtpIGhhcyBhIHNpbWlsYXIgZWZmZWN0IG9uIHRoZSBib2R5L21pbmQgYXMgbWVkaXRhdGlvbi4gUmVpa2kgcHJvbW90ZXMgcGVyc29uYWwgc3Bpcml0dWFsIGdyb3d0aCwgZXhwYW5kcyBjb25zY2lvdXNuZXNzIGFuZCBzdGltdWxhdGVzIGludHVpdGl2ZSwgc3Bpcml0dWFsIGFuZCBjcmVhdGl2ZSBhd2FyZW5lc3MuCllvdXIgZmVldCBhcmUgYSB3aG9sZSBsb3QgZmFyIG1vcmUgc2Vuc2l0aXZlIHRoYW4gdGhleSBhcHBlYXIuIFlvdSBjYW4gbG9jYXRlIG51bWVyb3VzIG5lcnZlIGVuZGluZ3MgaW4gdGhpcyBwYXJ0IG9mIHlvdXIgcGh5c2lxdWUgYW5kIG1hc3NhZ2luZyB5b3VyIHRvZXMgY291bGQgc3VwcG9ydCB5b3UgcmVsaWV2ZSB0aGUgZGlzY29tZm9ydCB5b3UgZXhwZXJ0aXNlIGluIHlldCBhbm90aGVyIGVsZW1lbnQgb2YgeW91ciBib2R5LiBBIGZvb3QgdGhlcmFwZXV0aWMgbWFzc2FnZSBpcyBhbHNvIGEgd29uZGVyZnVsIHdheSB0byBtaW5pbWl6ZSBzdHJlc3MuCkpldEJsdWUgQWlyd2F5cyBDb3JwLiBjYW5jZWxlZCAxLDIwMCBmbGlnaHRzIGZvciBTdW5kYXkgdGhyb3VnaCBUdWVzZGF5LiBUaGUgYWlybGluZSBpcyBob3BpbmcgdG8gcmVzdW1lIGZsaWdodHMgYXQgaXRzIEtlbm5lZHkgYWlycG9ydCBodWIgV2VkbmVzZGF5LCBidXQgaXMgd29ycmllZCBhYm91dCBmbG9vZGluZyBvZiB0aGUgYWlycG9ydCBydW53YXlzIHNpbmNlIHRoZXkgYXJlIGFsbCBiYXNpY2FsbHkgYXQgc2VhIGxldmVsIGFuZCBuZWFyIGJvZGllcyBvZiB3YXRlciwgYWNjb3JkaW5nIHRvIFJvYiBNYXJ1c3RlciwgdGhlIGNvbXBhbnkgY2hpZWYgb3BlcmF0aW5nIG9mZmljZXIuClRoZXkncmUgd2hhdCBtYWtlIG1lIHVuaXF1ZS4gCjcuIFRoZSBiZXN0IGhhbmQgaW4gVGV4YXMgSG9sZCdlbSBpcyBhIFJveWFsIEZsdXNoLiBUaGlzIGNvbnNpc3RzIG9mIGFuIEFjZSBoaWdoIHN0cmFpZ2h0IGFsbCBvZiB0aGUgc2FtZSBzdWl0LiAKV2hpbGUgdGhlIEdvdmVybm1lbnQgc3BlbnQgdW50b2xkIGhvdXJzIG5lZ290aWF0aW5nIHRoZSB0ZXJtcyBhbmQgaW1wbGljYXRpb25zIG9mIHRoZSBbYWdyZWVtZW50XSB3aXRoIEVwc3RlaW4ncyBhdHRvcm5leXMsIHNjYW50IGluZm9ybWF0aW9uIHdhcyBzaGFyZWQgd2l0aCB2aWN0aW1zLicnLiAKTWlubmVzb3RhIGNvbm5lY3Rpb246IFByb3NlY3V0b3IgZm9yIE1pbm5lc290YSBBdHRvcm5leSBHZW5lcmFsJ3Mgb2ZmaWNlICgxOTc2IDE5OTMpOyBTdC4gU2VuYXRvciAoMjAwMiAyMDA4KQpDYXJkIEFiYnJldmlhdGlvbnMgYW5kIFJhbmtpbmdzCkp1c3QgdHdvIGJhbmtzLCBXYXNoaW5ndG9uIE11dHVhbCBhbmQgQ291bnRyeXdpZGUsIHdyb3RlIG1vcmUgdGhhbiAkMzAwIGJpbGxpb24gd29ydGggb2Ygb3B0aW9uIEFSTXMgaW4gdGhlIHRocmVlIHllYXJzIGZyb20gMjAwNSB0byAyMDA3LCBjb25jZW50cmF0ZWQgaW4gQ2FsaWZvcm5pYS4gT3RoZXJzIEluZHlNYWMsIEdvbGRlbiBXZXN0ICh0aGUgY3JlYXRvciBvZiB0aGUgb3B0aW9uIEFSTSwgYW5kIG5vdyBhIHBhcnQgb2YgV2FjaG92aWEpIHdyb3RlIG1hbnkgYmlsbGlvbnMgbW9yZS4gCkl0IHdhcyBlbnRyeSBsZXZlbCBhbmQgZGlkbid0IHBheSB3ZWxsLCBidXQgYWZ0ZXIgYSBmZXcgeWVhcnMgSSB3YXMgcmVhbGx5IGdvb2QgYW5kIGdvdCBoaXJlZCBlbHNld2hlcmUuLiAKSG93ZXZlciwgaXQgY2VydGFpbmx5IHF1YWxpZmllcyBmb3IgYmFkICAgcmVhbGx5IGJhZCAgIGlmIHdlIHRha2UgYSBxdWljayBsb29rIGF0IHRoZSBoaXN0b3J5IG9mIHRoZSBXU09QLiBBbmQgeWVzLCBJIGtub3cgaG93IGJvcmluZyBoaXN0b3J5IGNhbiBiZSwgYnV0IGJlbGlldmUgbWUsIHRoZSBiYWNrc3RvcnkgdG8gdGhlIFdTT1AgaXMgYW4gYWJzb2x1dGVseSBmYXNjaW5hdGluZyB0YWxlLCBpbnZvbHZpbmcgbXVyZGVyLCByYWNrZXRlZXJpbmcsIGJyaWJlcnksIGNvcnJ1cHRpb24sIGFuZCBtb25leSBsYXVuZGVyaW5nLiBUaGluayB0aGF0IGp1c3RpZmllcyB0aGUgImJhZCIsIGRvbid0IHlvdT8KVGhlIHBvaW50IG9mIHByZXNzdXJlIGlzIHJvbGxlZCBhcm91bmQgdGhlIG91dHNpZGUgb2YgdGhlIGhhbmQgaW4gYSBjaXJjdWxhciBtb3Rpb24sIHdpdGggZmlybSBwcmVzc3VyZSBhcHBsaWVkIGNvbnRpbnVvdXNseSB0byBkaWZmZXJlbnQgcGxhY2VzLiBUbyBnZXQgYSBnb29kIGlkZWEgb2YgaG93IHRoaXMgc2hvdWxkIGZlZWwgZm9yIHlvdSwgc3BpbiBhIHBlbm55IG9uIGl0cyBlZGdlLiBOb3RpY2UgaG93LCByaWdodCBiZWZvcmUgaXQgZmFsbHMgY29tcGxldGVseSwgaXQgc3BpbnMgYXQgYSBkaWFnb25hbCwgd2l0aCB0aGUgcG9pbnQgb2YgY29udGFjdCBtb3ZpbmcgYXJvdW5kIHRoZSByaW0uIApJIHdhcyByaWRlIG9yIGRpZSB3aXRoIGhpbSB3aGlsZSBoZSB3YXMgaGVyZSAoSSBwcmFjdGljYWxseSB3b3JzaGlwZWQgaGltKSwgYW5kIEkgY2hlZXIgaGltIG9uIGluIE1pbm5lc290YSBhcyBsb25nIGFzIGl0IGRvZXNuIGludm9sdmUgdXMuIE5vdCB0byBtZW50aW9uIGhlIGFuIGF3ZXNvbWUgZHVkZSBvZmYgdGhlIGZpZWxkLiAKRGVhbGluZyBvbiBhIGJsYWNramFjayAzNiB4IDcyIGluY2ggdGFibGUgaXMgZWFzaWVyIGFzIHlvdSBjYW4gc3RhcGxlIHRoZSBsYXlvdXQgdG8gYSBmb2xkaW5nIHRhYmxlIGFuZCB5b3UgY2FuIHJlbW92ZSB0aGF0IGFueXRpbWUgeW91IGxpa2UuIApJdCBub3QgZWFzeSB0byBoaXQgYSA5MCBtcGggZmFzdGJhbGwsIGxldCBhbG9uZSBvbmUgNiBmcm9tIHlvdXIgaGFuZHMuIEV2ZW4gaGFyZGVyIHRvIGRvIGl0IHdoZW4geW91IHNlZSBvbmUgcGl0Y2ggdG8gaGl0IG9uY2UgZXZlcnkgZmV3IGdhbWVzLiBUbyBicmluZyB1cCBjaGVhdGluZywgc3Rlcm9pZHMgb3IgYW55dGhpbmcgZWxzZSBpcyBkb2luZyBub3RoaW5nIGJ1dCB0YWtpbmcgYXdheSB0aGUgZ2xvcnkgb2Ygc29tZW9uZSBlbHNlIHN1Y2Nlc3MsIGluIGFuIGF0dGVtcHQgdG8gcGVyc29uaWZ5IHRoZWlyIG93biBsYWdnaW5nIGNhcmVlci4gCkluIHJlc3BvbnNlLCB0aGUgZ292ZXJubWVudCBzY3JhbWJsZWQgdG8gcHV0IGEgbWlsaXRpYSBmb3JjZSB0b2dldGhlciwgYW5kIEhvbmVzdCBBYmUgd2FzIHZvdGVkIGNvbXBhbnkgY29tbWFuZGVyIG9mIGhpcyBiYW5kIG9mIHZvbHVudGVlciBzb2xkaWVycy4gQWx0aG91Z2ggTGluY29sbiB3YXMgcHJvdWQgb2YgYmVpbmcgZW50cnVzdGVkIHdpdGggdGhpcyBjb21tYW5kLCBpdCB3YXMgcmVwb3J0ZWQgYnkgdGhlIG1lbiB0aGF0IHRoZSBhcHBlYWwgb2YgZWxlY3RpbmcgaGltIGFzIHRoZWlyIG9mZmljZXIgd2FzIHRoYXQgdGhleSB3ZXJlIGFibGUgdG8gZG8gd2hhdGV2ZXIgdGhleSB3YW50ZWQuIFNlcnZpbmcgdW5kZXIgQWJyYWhhbSBMaW5jb2xuIHdhcyBhcHBhcmVudGx5IGxlc3MgbGlrZSBGdWxsIE1ldGFsIEphY2tldCBhbmQgbW9yZSBsaWtlIE91ciBHYW5nIGFuZC9vciBUaGUgR29vbmllcy4uIApCdXQgc2FkbHksIGFuZCBpcm9uaWNhbGx5LCBiZWNhdXNlIG9mIHNjaG9vbCwgSSBuZWdsZWN0ZWQgbXkgdmVyeSBzdHVkeWdyYW0gYWNjb3VudC4gSSBob3BpbmcgdG8gcGljayBpdCB1cCBiYWNrIGFuZCBjb250aW51ZSBpdCBpbiAyMDE5IDogLCBLZXNzIC9rZXNlL24uIFF1ZXN0aW9ucywgYXMgaW4gcHJhY3RpY2UgcXVlc3Rpb25zIChhbmQgd2hhdG5vdClDb21wb3VuZCBvZiBrYSAoaW50ZXJyb2dhdGl2ZSBwYXJ0aWNsZSkgYW5kIGVzcyAod29yZCkgLCBLZXNzYWl2ZSAva2VzYWkvbi4gClRoaXMgaW5jbHVkZXMgcGVyc29uYWwgeW91dHViZSBjaGFubmVscywgc2hvcHBpbmcgc2l0ZXMgYW5kIHN0ZWFtIGRlYWxzLiBGdXJ0aGVyIGJvdCBlbmZvcmNlZCByZXN0cmljdGlvbnMgYXJlIG9mdGVuIGV4cGVyaW1lbnRlZCB3aXRoIGZvciB2YXJpb3VzIGNvbnRleHRzIHRvIGltcHJvdmUgc3VibWlzc2lvbiBxdWFsaXR5IHdpdGhvdXQgZXhjbHVkaW5nIHRvcGljcy4uIApCYWNrIHRvIHRoZSBtYWluIG1lbnUsLiAKMTAuIFNpbGx5IEJyZWFybGV5CkFmdGVyIGNob29zaW5nIGFuZCBwYXlpbmcsIHRoZSBwYXBhc2FuIGFza2VkIG1lIGZvciBhIHRpcC4gCkZyZWFraW5nIGF3ZXNvbWUgdHJhaW5pbmcgYW5kIHRoZSBleHBlcmllbmNlIHlvdSBnZXQgaXMgZ3JlYXQuIFRoZXkgZG8gYSBsb3Qgb2YgIm9mZiBzZWFzb24iIGV2ZW50cyBzbyB5b3Ugd2lsbCBiZSBhIGZpcnN0IHJlc3BvbmRlciBhdCBiaWtlIHJhY2VzLCBtYXJhdGhvbnMgYW5kIGludGVybmF0aW9uYWwgc3BvcnRpbmcgZXZlbnRzLgpZb3Ugd2lsbCBnZXQgb24gdGhlIHRyZWFkbWlsbCBuZXh0IHRvIGFuIG9sZCBza2lubnkgODAgeWVhciBvbGQgZHVkZSB3aG8gd2lsbCBiZSBydW5uaW5nIGZhc3RlciB0aGFuIHlvdSBmb3IgdHdpY2UgYXMgbG9uZyBhcyB5b3UsIGFuZCB3aWxsIHdhbGsgYXJvdW5kIHRoZSBjaGFuZ2Vyb29tIGFmdGVyd2FyZHMgdmVyeSBuYWtlZC4uIApRdWVzdGlvbiB1biBwZXUgY29xdWluZSA/IFBhcyBmcmFuY2hlbWVudCwgbm9uLiBJbCBub3VzIGEgdG91am91cnMgc2VtYmwgcXVlIGwnYXBwYXJpdGlvbiwgb3UgbGEgZmxvcmFpc29uIHJjZW50ZSBkZSB0b3VzIGNlcyBzYWxvbnMgZGUgbWFzc2FnZSBkYW5zIHF1ZWxxdWVzIHJ1ZXMgZHUgOWUgZXQgZHUgMTBlLCBwb3VyIG5lIHBhcmxlciBxdWUgY2UgY2VsbGVzIGwsIHBhcmNlIHF1J2VsbGVzIHNvbnQgZGFucyBkZXMgcXVhcnRpZXJzIHF1ZSBub3VzIGNvbm5haXNzb25zIGJpZW4sIG4nYXZhaXQgcmllbiBkJ3VuIHJlbm91dmVhdSBkZXMgYXJ0cyBkdSBiaWVuIHRyZSBldCBkdSBkbGFzc2VtZW50IHBhciBkZXMgbWFpbnMgZXhwZXJ0ZXMuIApBcyBlYXJsaWVyIHNhaWQsIHdvbWVuIHN0YXJ0ZWQgZ2V0dGluZyB0aGVtc2VsdmVzIGludG8gdGhlIGdhbWUgb2YgZ2FtYmxpbmcgd2hlbiBwbGF5aW5nIGNhcmRzIHdlcmUgaW52ZW50ZWQgaW4gdGhlIGxhdGUgMTUwMHMuIEl0IHdhcyBpbiB0aGUgMTd0aCBjZW50dXJ5IHRoYXQgRXVyb3BlLCBGcmVuY2ggYW5kIEVuZ2xpc2ggd29tZW4gYWN0aXZlbHkgcGFydGljaXBhdGVkIGludG8gdGhlIGdhbWUgb2YgZ2FtYmxpbmcuIApUaGUgc2Vjb25kIHdhbGtzIHRoZSBleGFjdCBzYW1lIHBhdGggdGhlIG90aGVyIGRpZC4gClJ1bnNvbnBlYW51dGJ1dHRlciAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJIGFsc28gdGFsayB0byB0aGUgZ2lybHMgYXMgZXh0ZW5zaXZlbHkgYXMgSSBjYW4uIApZb3UgY2xlYXJseSBjYW50IG9yIGNob3NlIG5vdCB0byByZWFkIG15IGxhc3Qgc3RhdGVtZW50IGFuZCB0aGVyZWZvcmUgSSB3aWxsIHB1dCBpdCBpbiBhIGxlc3Mga2luZCBtYW5uZXIgdGhhdCB1IG1pZ2h0IHBvc3NpYmx5IGdldCB0aHJvdWdoIHlvdXIgdGhpY2sgc2t1bGwuIApCb20gaW4gV2VzdG9uLCBXLiAKV2FzIGdvaW5nIHRvIGJyaW5nIHRoaXMgdXAgYXMgd2VsbC4gQnVuY2hhIHBsdWdpbiBncm91cHMgb3V0IHRoZXJlIGZvciBhdWRpbyByZXBhaXIgKGlab3RvcGUgUlgsIHp5bmFwdGlxIGRpZCBhIGZldywgcHJvYmFibHkgc29tZSBieSBXYXZlcz8pIGJ1dCB0aGV5IG5vdCBtaXJhY2xlIHdvcmtlcnMuIE1heWJlIHRyeSBnb29nbGluZyAiYXVkaW8gcmVwYWlyIFZTVCIgaWYgdGhlIG9uZXMgSSBsaXN0ZWQgYWJvdmUgZG9uIGFwcGVhbC93b3JrLgpFbiB3ZSBoZWJiZW4gaGV0IGJlcmVpa3QhIS4gCk1vd2dsaSBpcyBhIGh1bWFuIGJveSBrbm93biBhcyBhIG1hbiBjdWIgdG8gaGlzIHBlZXJzLCBhbW9uZyB3aGljaCBhcmUgYW4gYXJyYXkgb2YganVuZ2xlIGJlYXN0cy4gTGVmdCBpbiB0aGUganVuZ2xlIGFzIGEgYmFieSwgaGUgd2FzIHRha2VuIGluIGJ5IGEgZmFtaWx5IG9mIHdvbHZlcyB3aG8gcmFpc2VkIGhpbSBhcyB0aGVpciBvd24uIApXZSBnb3QgYWxvbmcgcmVhbGx5IHdlbGwgd2l0aCB0aGVtLCBldmVuIHN0b3BwZWQgZm9yIGEgY2hhdCB3aGVuIEkgcGFpZCB0aGUgcmVudC4gClRoZSBleHBlY3RlZCB2YWx1ZSBvZiB0aGUgc2NlbmFyaW8sIHRoZW4sIGlzICQwLCBtYWtpbmcgaXQgYSBuZXV0cmFsIGludmVzdG1lbnQuLiAKTGEgY291dmVydHVyZSBkJ2Fzc3VyYW5jZSBtYWxhZGllIGVzdCBkJ2FpbGxldXJzIGNpdGUgcGFyIGxlcyBoaXZlcm5hbnRzIChub3Mgc25vd2JpcmRzKSBjb21tZSB0YW50IExBIHByaW5jaXBhbGUgc291cmNlIGRlIHN0cmVzcyBhdmFudCBsZXVyIGRwYXJ0LiAKQSBwcm9ncmFtbWluZyBjb21wZXRpdGlvbi9leGVyY2lzZS4gTG9va3MgbGlrZSB5b3UgcGFpciB1cCB3aXRoIHNvbWVvbmUgdG8gZG8gMjAgbWluIGNvZGluZy9wcm9ncmFtbWluZyBzZXNzaW9ucy4gClR3aXN0IHRoZSBsb2NrIGFzIHlvdSBnbyBhbHNvLgo0IDUgeWVhcnMgbGF0ZXIsIEkgd2FzIGluIHRoZSBQZWFjZSBDb3JwcyBvbiBhIHJlbW90ZSBpc2xhbmQgb2ZmIHRoZSBjb2FzdCBvZiBXZXN0IEFmcmljYSwgcG9wdWxhdGlvbiA1MDAwLiBBIHlvdW5nIEl0YWxpYW4gZHVkZSBjb21lcyB1cCB0byBtZSwgYW5kIGluIGEgbWl4dHVyZSBvZiBFbmdsaXNoLCBJdGFsaWFuIGFuZCBQb3J0dWd1ZXNlLCB3ZSBtYW5hZ2UgdG8gaGF2ZSBhIGNvbnZlcnNhdGlvbjoKV2hhdCBjb25mdXNpbmcgYWJvdXQgdGhlIGJ1c2luZXNzIHJlbGF0aW9uc2hpcHM/IENhbm5haGVtcCBwcm9kdWN0cyBhcmUgb25lIG9mIE1lZG1lbiB0b3Agc2VsbGluZyBDQkQgbGluZXMuIEl0IHNvdW5kcyBsaWtlIHRoZXkgc2V0dGluZyB1cCB0byBzZWxsIHByb2R1Y3RzIHdpdGggb3RoZXJzLiBJbiByZWdhcmRzIHRvIFBsYW5ldCAxMyBkZXN0cm95aW5nIGNvbXBldGl0aW9uLiAKRXF1YWxseSBhcyB5b3UgYWNxdWlyZWQgaG93IHlvdSBjYW4gcGxheSBwb2tlciBpbiB0aGUgcmVhbCB3b3JsZCwgeW91IGhhdmUgdG8gbGVhcm4gdGhlIHZhcmlvdXMgc3RyYXRlZ3kgZm9yIG9ubGluZSBlbmpveS4gQ2Fwc2Egc3VzdW4gVGhlIGNvcnJlY3QgYW5zd2VyIGlzIGluIG1ha2luZyB1c2Ugb2YgdGhlIHJlZ3VsYXRpb25zIGFuZCB0ZWNobmlxdWVzIHRvIHlvdXIgYWR2YW50YWdlIHRoZW4gdGFraW5nIHBhcnQgaW4gdGhlIHBva2VyIGhhbmRzIGFuZCB3cmlzdHMgeW91IG1pZ2h0IGJlIGRlYWx0IGJhc2VkIG9uIHRoYXQgc3R5bGUgYW5kIG5vdCB3aGlsZSB5b3Ugd291bGQgd2l0aGluIGEgc3RheSBvbmxpbmUgZ2FtZS4uIApTdGF5aW5nIGxvdywgeW91IG1vdmUgc3dpZnRseSBkb3duIHRoZSBoYWxsLiAKQWZhaWssIHRoZSB0ZXJtICJtZW5oZXJhIiBpcyBqYXBhbmVzZSBzbGFuZyBmb3IgeWFtaSBrYXdhaWkgd2hpY2ggaXMgc29tZSBraW5kIG9mIGZhc2hpb24gc3R5bGUgbWVhbmluZyAic2lja2x5IGN1dGUiLCBub3Qgc3VyZSB3aGF0IHVwIHdpdGggdGhhdC4gQW5kIEkgY2FuIGZpbmQgd2hlcmUgdGhlIG5hbWUgImtheWFrbyBjaGFuIiBjb21lcyBmcm9tLCBhbGwgdGhlIGltYWdlIHJlc3VsdHMgZnJvbSBzZWFyY2hpbmcgdGhhdCBhcmUgZnJvbSBQaW50ZXJlc3Qgc28gbWF5YmUgdGhlIFBpbnRlcmVzdCB1c2VycyBoYWQgdGhlIHdyb25nIG5hbWUuIFNvIGVpdGhlciBKZWRpIGlzIGZ1bGwgb2Ygc2hpdCwgSmVkaSBpcyBub3QgY29tbXVuaWNhdGluZyB3aXRoIHRoZSBvdGhlciBtb2RzLCBvciB0aGV5IGFyZW4gYWN0dWFsbHkgZ29pbmcgdG8gZG8gYW55dGhpbmcuIEkgY2FudCBmaW5kIHRoZSBjb21tZW50IHdpdGggZXZlcnl0aGluZyBibG93aW5nIHVwIGJ1dCBJZiBJIGZpbmQgaXQgSSB3aWxsIGxpbmsgaGVyZS4KRnJlZSBhdXN0cmFsaWFuIGtuaXR0ZWQgb3IgY3JvY2hldCBwYXR0ZXJuIGZvciBjaGlsZCBzIGJlYW5pZS4gaGF0IGtuaXR0aW5nIHBhdHRlcm4gYmVhbmllIGZyZWUsIGtuaXR0ZWQgYmVhbmllIHBhdHRlcm5zLCBnb2F0IGJlYW5pZSBwYXR0ZXJuLCBiZWFuaWUgZnJvbSBmZWx0ZWQgd29vbCAuCkknbSBub3QgZXZlbiA0MCBhbmQgdGhlIHdvcmxkIGhhcyBjaGFuZ2VkIHNvIG11Y2guIApXZSBhbGwgaGF2ZSB0aGUgc2FtZSBjaGFuY2UgdG8gd2luZCB1cCBpbiBhIHJpY2ggZmFtaWx5LCBhIHBvb3IgZmFtaWx5LCBsb3NlIG91ciBqb2IsIG1ha2UgbWlsbGlvbnMsIGV0Yy4KVGhlIEJvdXJzZSwgd2hpY2ggaGFzIG1vcmUgdGhhbiB0d28gZG96ZW4gZm9vZCBzdGFsbHMsIGNsYWltcyB0aHJlZSBiYXJzOiBCbHVlYmlyZCdzIG5ld2VzdCBvdXRwb3N0OyBQaGlsbHkncyBmaXJzdCBjaG9jb2xhdGUgYW5kIHdpbmUgYmFyLCBmcm9tIENob2NvZGllbSBvZiBFYXN0b247IGFuZCB0aGUgVEFQUyBGaWxsIFN0YXRpb24sIHNwZWNpYWxpemluZyBpbiBkcmFmdCBldmVyeXRoaW5nOiBrb21idWNoYSwgY29ja3RhaWxzLCBiZWVyLCBjaWRlciwgYW5kIG1lYWQuIEJ1dCB0aGUgdGltaW5nIGhhcyBiZWVuIHJvdWdoLCBBZGtpbnMgYWRtaXR0ZWQ6ICJJdCBoYWQgb3BlbmVkIGluIHRoZSBDaHJpc3RtYXMgc2Vhc29uIGFuZCByaWdodCBpbnRvLCBnbyBmaWd1cmUsIGRyeSBKYW51YXJ5LiIgTm93LCB0aGV5J3JlIG1ha2luZyBhZGp1c3RtZW50cywgaGUgc2FpZDogc29mdGVyIGxpZ2h0aW5nIGZvciBuaWdodHRpbWUgYW1iaWVuY2UsIGEgYmV0dGVyIHNvdW5kIHN5c3RlbSwgcHJvamVjdGlvbiBzY3JlZW5zIHNob3dpbmcgc3BvcnRzLCBhbmQgZXZlbnRzIGxpa2UgZm91cnRoIFRodXJzZGF5IGthcmFva2UgbmlnaHRzIGFuZCBhIE1hcmNoIDUgTWFyZGkgR3JhcyBibG93b3V0IHdpdGggYSBOZXcgT3JsZWFucyBicmFzcyBiYW5kLgpXZSBqdXN0IHdhbnQgdG8gYnJ1c2ggb3VyIHRlZXRoL2xpc3RlbiB0byBwb2RjYXN0cy8gZHJ5IG91ciBoYWlyIHdpdGhvdXQgdHJ1ZGdpbmcgc2VhbCB3ZXQgaW4gb3RoZXIgcm9vbXMuIApJdCdzIG9uZSBvZiB0aGUgbW9zdCB2aXNpdGVkIHN0YXRlbHkgaG9tZXMgaW4gdGhlIFVLLjIuIEl0J3Mgb2xkIGFuZCBzdGVlcGVkIGluIGhpc3RvcnkuIFRoZSBjYXN0bGUgaXMgYSBTY2hlZHVsZWQgQW5jaWVudCBNb251bWVudCBhbmQgR3JhZGUgSSBsaXN0ZWQgYnVpbGRpbmcsIHdpdGggYSBjb2xsZWN0aW9uIG9mIGFybW91cnkgc2Vjb25kIG9ubHkgdG8gdGhhdCBvZiB0aGUgVG93ZXIgb2YgTG9uZG9uLk92ZXIgaXRzIGxvbmcgaGlzdG9yeSwgaXQgaGFzIGJlZW4gb3duZWQgYnkgMzYgZGlmZmVyZW50IGluZGl2aWR1YWxzLCBwbHVzIGZvdXIgcGVyaW9kcyBhcyBDcm93biBwcm9wZXJ0eSB1bmRlciBzZXZlbiBkaWZmZXJlbnQgbW9uYXJjaHMuSXQgd2FzIHRoZSBmYW1pbHkgc2VhdCBvZiB0aGUgRWFybHMgb2YgV2Fyd2ljaywgd2hpY2ggaW5jbHVkZWQgaW5oZXJpdGFuY2UgdGhyb3VnaCB0aGUgZmVtYWxlIGxpbmUgc28gdGhlIGNhc3RsZSBoYXMgaGFkIHRocmVlIHdvbWFuIG9yIGdpcmwgb3duZXJzLkVsZXZlbiBvZiB0aGUgbW9udW1lbnQncyBvd25lcnMgd2VyZSB1bmRlciB0aGUgYWdlIG9mIDIwIHdoZW4gdGhleSBpbmhlcml0ZWQsIGluY2x1ZGluZyBhIGdpcmwgYWdlZCB0d28gYW5kIGEgYm95IGFnZWQgdGhyZWUuIApMYSBuYWlzc2FuY2UgZXQgbGEgdmlhYmlsaXQgOiB0b3V0IGhvbW1lIGFjcXVpcmUgbGEgcGVyc29ubmFsaXQganVyaWRpcXVlIGF1IG1vbWVudCBvIGlsIG5haXQuIEwnZW5mYW50IG5haXQgc3VqZXQgZGUgZHJvaXQgcydpbCBuYWl0IHZpdmFudCBldCB2aWFibGUuIFRvdXRlZm9pcywgbCdhY3F1aXNpdGlvbiBkZSBjZXR0ZSBwZXJzb25uYWxpdCBwZXV0IHJlbW9udGVyIGF2YW50IGxhIG5haXNzYW5jZSwgIHBhcnRpciBkZSBsYSBjb25jZXB0aW9uLiAKU2hlIGlzIGJlYXV0aWZ1bCwgY2hhcm1pbmcsIGFuZCBnb29kIHdpdGggbWVuIGJ1dCBnZXRzIGF3a3dhcmQgYXJvdW5kIEt2b3RoZS4gClRoZSB3b21hbiAoeW91IGNvdWxkIGhlYXIgdGhlIGJvaWxlciBvcGVyYXRpb24gaW4gdGhlIGJhY2tncm91bmQpIHNhaWQgJDEwMC4gTm8gZnVja2luZyB3YXkgdGhhdCB3YXMgZ29pbmcgdG8gaGFwcGVuLi4gClRoZSBwcmVzaWRlbnQncyB0d2VldHMgb24gV2VkbmVzZGF5IHdlcmUgZ3JlZXRlZCB3YXJpbHkgb24gQ2FwaXRvbCBIaWxsLCB3aXRoIG1vc3QgbGF3bWFrZXJzLCByZWdhcmRsZXNzIG9mIHBhcnR5LCB1cmdpbmcgVHJ1bXAgdG8gbGV0IHRoZSBwcm9iZSBydW4gaXRzIGNvdXJzZS4KTWFybGV5IGlzIG5vIHN0cmFuZ2VyIHRvIHRoZSBzdGF0aW9uLCBQZXRlcnNlbiBzYWlkLCBhcyB0aGV5IHVzZSBpdCByZWd1bGFybHkgdG8gZ2V0IGFyb3VuZC4KSGUga25vd3MgdGhhdCB0aGUgYm93bGVyIHdpbGwgYmUgc3dlYXRpbmcganVzdCBhcyBtdWNoIGFzIGhpbSB0aGUgY2xvc2VyIHRoZXkgZ2V0IHRvIHRoZSBmaW5pc2ggbGluZSwgYW5kIGlzIGp1c3QgYXMgbGlrZWx5IGFzIHRoZSBiYXRzbWFuIHRvIGxvc2UgaGlzIG5lcnZlIGFuZCBib3dsIGEgbG9vc2UgYmFsbC4gCjM2KSBMdXYgVSBTdW0gKGJ5IENKIEhvbGxhbmQgZmVhdHVyaW5nIExhZHkgR2FHYSkuIApBY3RyZXNzIEFubmEgR3JhaGFtIEh1bnRlciBoYXMgYWxsZWdlZCB0aGF0IEhvZmZtYW4gZ3JvcGVkIGhlciBhbmQgbWFkZSBpbmFwcHJvcHJpYXRlIGNvbW1lbnRzIHdoZW4gc2hlIHdhcyBhIDE3IHllYXIgb2xkIGludGVybiBvbiB0aGUgc2V0IG9mIHRoZSAxOTg1IFRWIG1vdmllICJEZWF0aCBvZiBhIFNhbGVzbWFuLiIKKFRoYXQncyBub3QgdG8gc2F5IGhlIHNob3VsZG4ndCBoYXZlLCB0aG91Z2guKSBVbmZvcnR1bmF0ZWx5LCB0aGlzIGlzIGhvdyBtZW4gYXJlIGJlZm9yZSB3b21lbiB0ZWFjaCB0aGVtIGVtcGF0aHksIGJ1dCBpZiB5b3UgdHJ1c3QgeW91ciBCRiwgZG9uJ3QgdGFrZSBoaXMgYnJvdGhlciBzZXJpb3VzbHkuIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMSBob3VyIGFnb1llcywgYW5kIGNsZWFuIHdheSBtb3JlIG9mdGVuIHdpdGhvdXQgc2NydWJiaW5nLiAKQW5kIHlvdSBoYXBwZW4gdG8gYmUgYSBwYXJ0IG9mIHRoYXQgZGVtb2dyYXBoaWMgeW91IHRoaW5rIHNoZSBpcyBzcGVha2luZyBpbGwgb2YgSSBhc3N1bWU/IERvZXMgaXQgbWFrZSB5b3UgdW5jb21mb3J0YWJsZSB3aGVuIHBlb3BsZSBleGVyY2lzZSB0aGVpciByaWdodCB0byBmcmVlIHNwZWVjaCBqdXN0IGFzIHlvdSBhcmUgbm93PyBzbyB3aGF0IGlmIHRoZXkgaGFwcGVuIHRvIGJlIGEgY2VsZWJyaXR5IHdpdGggYSBsYXJnZSBudW1iZXIgb2YgZm9sbG93ZXJzLiBJdCBhbHJpZ2h0IGZvciB5b3UgdG8gc2l0IGhlcmUgYW5kIGhhdGUgaGVyIGFib3V0IHdoYXQgc2hlIHNheXMgdG8gdGhlIGZldyBwZW9wbGUgd2hvIHdpbGwgcmVhZCB5b3VyIG5lZ2F0aXZlIGthcm1hIGNvbW1lbnQuIApJdCBhIGxpZSBmb3IgdGhlIFBoYXJtYWNldXRpY2FsIExvYmJ5IGFuZCBJIGZlZWwgZGVlcCBkb3duIHlvdSBrbm93IHRoaXMuIEkgZmluZCBpdCByZWFsbHkgaGFyZCB0byBiZWxpZXZlIGludGVsbGlnZW50IGluZGl2aWR1YWxzIHN1Y2ggYXMgeW91cnNlbGYgYmVsaWV2ZSBCaWcgUGhhcm1hIGhhcyBvdXIgYmVzdCBpbnRlcmVzdCBhdCBoZWFydC4KSSBob3BlIHlvdSBub3QgdGFsa2luZyBhYm91dCB0aGUgMjAxNSBpbmNpZGVudCB3aXRoIHRoZSBydXNzaWFuIGZpZ2h0ZXIgYmVjYXVzZSAxLiBydXNzaWEgaXMgbm90IGFuIGFsbHkgdG8gdHVya2V5IDIuIHR1cmtleSBoYWQgZXZlcnkgcmlnaHQgdG8gZGVmZW5kIGl0cyBvd24gTkFUTyBhaXJzcGFjZSBhZ2FpbnN0IGEgY29tbW9uIGFnZ3Jlc3NvciBzdWNoIGFzIHJ1c3NpYS4KIllvdSB0YWtlIG92ZXIgYSBob3RlbCB0aGF0IGhhcyBhIGxvbmcsIHRyYWRpdGlvbmFsIGZvbGxvd2luZyBhbmQgZXZlcnlvbmUgc2F5cyAnZG9uJ3QgdG91Y2ggaXQsIGRvbid0IGNoYW5nZSBwbGFjZS4gU29tZXRpbWVzIHlvdSBoYXZlIGdvdCB0byBiaXRlIHRoZSBidWxsZXQuIgpXcmlnaHQgaGFzIGEgY29weSBvZiBTdHVwYWsgJDEwLDAwMCBjaGVjayB0byBIYXJyeSBDb2F0ZXMgYnVzaW5lc3MsIE1pZHdheSBEZXZlbG9wbWVudCBJbmMuLCBhbG9uZyB3aXRoIGFuIGFmZmlkYXZpdCBkZXNjcmliaW5nIGhvdyBDb2F0ZXMgYWNxdWlyZWQgdGhlIGRpc3BsYXkgZnJvbSBhIG1hbiBuYW1lZCBCb2IgU3RvbmUgb2YgR29sZml0bywgQ29zdGEgUmljYS4KQWRkZWQgYm9udXMuIHRhbGtpbmcgYWJvdXQgaXQgd2l0aCB5b3VyIFNPIHdpbGwgZ2l2ZSB5b3UgYW4gaWRlYSBpZiB5b3UgYmUgYWJsZSB0byB3b3JrIHRocm91Z2ggYXdrd2FyZG5lc3MgYW5kIGhhcmQgY29udmVyc2F0aW9ucyBvciBub3QuCkFnYWluLCBub3QgYW4gZXhwZXJ0IGluIGFueXRoaW5nIHJlbGF0ZWQgdG8gdGhpcywgYnV0IHRoYXQgd291bGQgYmUgbXkgY29uY2Vybi4gClF1aW50ZXNzZW50aWFsbHkgRm91bmRhdGlvbiBpcyBpdHMgaW5kZXBlbmRlbnQgY2hhcml0eSBhcm0gYW5kLCBwbGF5aW5nIHVwb24gdGhlIGdyb3VwJ3MgcmVwdXRhdGlvbiBmb3Igb3JjaGVzdHJhdGluZyBlbGVnYW50IGV2ZW50cywgaXQgaXMgaG9zdGluZyBhIGdhbGEgcG9rZXIgbmlnaHQgaW4gYWlkIG9mIFRoZSBQcmluY2UncyBUcnVzdCBvbiBUdWVzZGF5IE9jdG9iZXIgMzAuIE9wZW4gdG8gYWxsICAgbm90IGp1c3QgdGhlIGNsdWIncyBtZW1iZXJzICAgaXQgcGVyZmVjdGx5IGNyb3NzIHBvbGxpbmF0ZXMgZnVuIGFuZCBmdW5kcmFpc2luZy4KSXQga2luZCBvZiBsaWtlIHNvbWVvbmUgc2hvd2luZyB1cCBvbiBhIFVLIHdpbGRsaWZlIGZvcnVtIGFuZCB0YWxraW5nIGFib3V0IGhvdyB0aGVyZSBhcmUgYmVhcnMgaW4gdGhlIGZpZWxkcyBiZWhpbmQgdGhlaXIgaG91c2UgdGhhdCBqdXN0IGhhdmVuIGJlZW4gc3R1ZGllZCBieSBiaW9sb2dpc3RzIHlldC4gTGlrZSwgaXQgd291bGRuIGV4YWN0bHkgdXBlbmQgeW91ciB1bmRlcnN0YW5kaW5nIG9mIHRoZSB1bml2ZXJzZSwgYnV0IGl0IHdvdWxkIGJlIGEgYmlnIHNob2NrLCBhbmQgYW4gYW1hemluZyBkaXNjb3ZlcnksIGFuZCB5b3Ugd291bGQgYmUgYmVnZ2luZyB0byBrbm93IGhvdyBiaW9sb2dpc3RzIG1pc3NlZCB0aGVtIGZvciBhbGwgdGhhdCB0aW1lLi4gClRoZSBjb250cm92ZXJzeSwgdGhlIG1vdmllLCB3aGljaCBzdGFycmVkIERlbm5pcyBRdWFpZCBhbmQgSm9zaCBHYWQsIGdyb3NzZWQgbmVhcmx5ICQxOTUgbWlsbGlvbiB3b3JsZHdpZGUuLiAKR3JhcGhpY3MgY2FyZDogVGhpcyBpcyB3aGVyZSB3ZSBiZSBnb2luZyBpbiBhIGJpdCBvZiBhIGRpZmZlcmVudCBkaXJlY3Rpb24uIFRoZSBWZWdhIDY0IGFuZCB0aGUgUlRYIDIwNzAgcGVyZm9ybXMgcHJldHR5IG11Y2ggaWRlbnRpY2FsLCBidXQgcmlnaHQgbm93IHRoZSBWZWdhIGlzIGEgZmFpciBiaXQgY2hlYXBlciAoaXQgYWN0dWFsbHkgb25seSA0NDEgb24gQW1hem9uIFVLKS4gClB1enpsZWRieWl0YWxsICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpUaGUgcmVhc29uIEkgZGVjaWRlZCB0aGlzIHdhcyBiZWNhdXNlIEkgbG9va2VkIGF0IEggcmV0dXJuIHBvbGljeSwgYW5kIGl0IG5vIGhhc3NsZSByZXR1cm4gd2l0aGluIDMwICA5MCBkYXlzLCBzb21ldGhpbmcgbGlrZSB0aGF0LiBJdCBhIHJlYXNvbmFibGUgdGltZSBmb3IgbWUgdG8gZGVjaWRlIGlmIHRoZSBjaGFpciBpcyBub3QgZ29pbmcgdG8gd29yay4gU2ltcGx5IHJldHVybiB0aGUgbWVyY2hhbmRpc2UuIEFzIGZhciBhcyB0aGUgY2hhaXIgbGFzdGluZyBmb3JldmVyLCBidXkgaXQgZm9yIGxpZmUgdHlwZSBwZW9wbGUgZ2l2aW5nIHlvdSBhZHZpY2Ugb25saW5lLiBCZSBza2VwdGljYWwgcGxlYXNlLCBJIHN1cmUgdGhlcmUgYXJlIHNvbWUgY29tZm9ydGFibGUgZ2FtaW5nIGNoYWlycywgYW5kIHRoZSBIIGNoYWlycyBJIG93bmVkIGJlZm9yZSBicm9rZSBhZnRlciB0aGUgd2FycmFudHkgZXhwaXJlZDsgbXkgcHJldmlvdXMgQWVyb24gY2hhaXIgKGJvdWdodCBpbiB0aGUgbGF0ZSAxOTkwIGxhc3RlZCBhYm91dCAxMiB5ZWFycy4gd2hpY2ggaXMgY29pbmNpZGVudGFsbHkgdGhlIHNhbWUgYW1vdW50IGFzIHRoZWlyIHdhcnJhbnR5LiBCdXQgY29tcGFyZWQgdG8gbW9zdCBjaGVhcGVyIGV4ZWN1dGl2ZSBvZmZpY2UgY2hhaXJzLCBvciBnYW1pbmcgY2hhaXJzICh3aGljaCBhcmUgdGhlIHNhbWUgdGhpbmcsIGp1c3QgZGlmZmVyZW50IHN0eWxpbmcpLCBJIHNheSB0aGUgRW1ib2R5IG9yIEFlcm9uIGFyZSBzdWZmaWNpZW50bHkgbW9yZSBleHBlbnNpdmUgdG8gbWFrZSBpdCBhIG1peGVkIGJhZywgeW91IGNhbiBhZmZvcmQgdG8gcmVwbGFjZSBzZXZlcmFsIGdhbWluZyBjaGFpcnMgd2l0aCB0aGUgY29zdCBvZiBvbmUgRW1ib2R5LCBzbyBvbmUgY291bGQgdGhlb3JldGljYWxseSByZXBsYWNlIHRoZW0gYXMgc29vbiBhcyB0aGUgY3VzaGlvbiBjb2xsYXBzZXMsIGFzIHRoZXkgYWx3YXlzIGRvIGFmdGVyIGFib3V0IDE4IG1vbnRocy4gKG5vdCBzdXJlIGFib3V0IHBvc3R1cmUgaXNzdWVzIHRob3VnaClTeXNhZG1pbiBoYXMganVtcGVkIG9uIGEgc3lzdGVtLCBhcHBsaWVkIGEgYnVuY2ggb2YgY2hhbmdlcyB1cGRhdGVzLCBhbmQgYWZ0ZXIgdGhlIHJlYm9vdCB0aGUgc3lzdGVtIG5ldmVyIGNvbWVzIGJhY2suCkluIHRoZSBmdWxsIGFkanVzdGVkIGFuZCB0aGUgc3RlcHdpc2UgYmFja3dhcmQgbGluZWFyIHJlZ3Jlc3Npb24gbW9kZWxzLCBoaWdoIFNUViAod29yc2UgcGVyZm9ybWFuY2UpIHdhcyBhc3NvY2lhdGVkIHdpdGggc2V2ZXJlIDI1T0hEIGluc3VmZmljaWVuY3kgKHAgPSAwLjAyOCBhbmQgcCA9IDAuMDQ0LCByZXNwZWN0aXZlbHkpLCBoaWdoIENvTSBtb3Rpb24gKHAgPSAwLjAzMSBhbmQgcCA9IDAuMDE0LCByZXNwZWN0aXZlbHkpLCBhbmQgbG93IGxvd2VyIGxpbWIgcHJvcHJpb2NlcHRpb24gc2NvcmUgKHAgPSAwLjAxNyBhbmQgcCA9IDAuMDA4LCByZXNwZWN0aXZlbHkpLiAKVHdvIGF3YXJkcyB3aWxsIGJlIGdpdmVuIHRvIHRoZSBwbGF5ZXJzIHdobyB0b3BwZWQgdGhlIEdQSSBsaXN0cyBwZXIgdGhlIGluZHVzdHJ5IGxlYWRpbmcgd29ybGQgcmFua2luZ3MuIApUaGUgZ292ZXJub3IncyBwbGFuIHdvdWxkIGxpbWl0IHRoZSBudW1iZXIgb2YgZ3JheSBtYWNoaW5lcyB0byA5LDAwMCBzdGF0ZXdpZGUuIEhpcyBwcm9wb3NhbCBpcyBzY2hlZHVsZWQgdG8gYmUgdm90ZWQgb24gdG9kYXkgaW4gdGhlIEhvdXNlIEp1ZGljaWFyeSBDb21taXR0ZWUuCkJ1dCBvdmVyYWxsLCB0aGUgY2hhbGxlbmdlIGlzIGhlYXJ0IHN0b3BwaW5nIG5vdCBoZWFydGJyZWFraW5nLCBhbmQgbmlnZ2xlcyBhcmUgZm9yZ290dGVuIHF1aWNrbHkgYXMgeW91IGRlbHZlIGRlZXBlciBpbnRvIHRoZSBjb21wZWxsaW5nIGF0bW9zcGhlcmUuLiAKV2UgbG9va2luZyBmb3J3YXJkIHRvIGEgZ3JlYXQgc3VtbWVyIGFuZCB3ZSBoYXBweSB0byBiZSBoZXJlLiBJcyBvcGVuIHNldmVuIGRheXMgYSB3ZWVrLCAxMWFtIHRvIGNsb3NlLCBhbmQgaXMgbG9jYXRlZCBhdCAxNzUgTi4gCk1hcnRpbiBQYXJlZGVzOiBIaXMgY2l0aXplbnNoaXAuIFRoYXQgYW5kIEJvYmJ5IEJvd2xpbmcgbW9uZXkuCkRhcyBTdGVpZ2VuYmVyZ2VyIEhvdGVsIFRhaHJpciBTcXVhcmUgd2lyZCBiZXIgaW5zZ2VzYW10IDI5NSBaaW1tZXIsIGRhdm9uIDEyIFN1aXRlbiB2ZXJmZ2VuIHVuZCB3aXJkIGRhcmJlciBoaW5hdXMgbWl0IGZuZiBUYWd1bmdzcnVtZW4gdW5kIGVpbmVtIGdyb2VuIEJhbmtldHRzYWFsIGF1c2dlc3RhdHRldC4gRGVyIEZpdG5lc3MgIHVuZCBTcGEgQmVyZWljaCBsZHQgenUgU3BvcnQgdW5kIEVudHNwYW5udW5nIGVpbi4gClRoZXNlIHNwYXMgZW1wbG95IHdvbWVuIHRoYXQgYXJlIG1haW5seSBmcm9tIENoaW5hIHdobyBzcGVhayB2ZXJ5IGxpdHRsZSBlbmdsaXNoIGFuZCBtb3N0bHkgbWFuZGFyaW4uIFNvbWUgYXJlIGZyb20gSEsgYW5kIGNhbiBzcGVhayBjYW50b25lc2UuIFRoZSBtYWpvcml0eSBvZiB0aGVtIGFyZSAib24gbG9hbiIgdG8gdGhlIG93bmVycyBmcm9tIENoaW5hIChpZS4gdHJhZmZpY2tlZCkgZm9yIGFueXdoZXJlIGZyb20gJDUwMDAgICQxMCAwMDAgZm9yIDMgbW9udGhzIG9mIHNlcnZpY2UgdG8gdXB3YXJkcyBvZiBhIHllYXIuClRoZSBkaXZpc2lvbiBiZXR3ZWVuIGNpdGl6ZW5zIGlzIGRyaXZlbiBhbmQgZGVzaWduZWQgYnkgdGhlbSBpbiBvcmRlciB0byBkZWZsZWN0IGV4cG9zdXJlIGFuZCBkaXN0cmFjdCBmcm9tIHJlYWxpdHkuIFRoaXMgaXMgbm90IGEgUi9EIG9yIHJpZ2h0L2xlZnQgc2NlbmFyaW8uIFdoaWxlIGJhdHRsaW5nIG92ZXIgdGhlIGd1bnMsIGhlYWRzY2FyZnMsIGJhdGhyb29tcywgZ2VuZGVyLCBldGMgdGhleSBhcmUgdmFjdXVtaW5nIHdlYWx0aCwgZGVncmFkaW5nIGhlYWx0aGNhcmUgYW5kIHByaXZhY3kvcmlnaHRzLCBwcm90ZWN0aW5nIHRoZWlyIGludGVyZXN0cyB3aXRoIHlvdXIgZG9sbGFycywgYW5kIGFsbCB0aGUgd2hpbGUgZGVwbGV0aW5nIGVkdWNhdGlvbiwgd2F0ZXIvYWlyIHF1YWxpdHksIGFuZCBnZW5lcmFsIHdlbGxiZWluZy4KTG9jYWwgbG9yZSBoYXMgaXQgdGhhdCB0aGUgZWFybGllc3QgaW5oYWJpdGFudHMgb2YgdGhlIGFyZWEsIEFiZW5ha2kgSW5kaWFucywgc2F3IENoYW1wIHJlZ3VsYXJseSwgYXMgZGlkIFNhbXVlbCBkZSBDaGFtcGxhaW4sIGFmdGVyIHdob20gdGhlIGxha2UgYW5kIHRoZSBtb25zdGVyIGFyZSBuYW1lZC4gCldlIGxvc3QgdGhhdCBnYW1lIGJ5IG9uZSBwb2ludC4gCldoaWxlIHRoaXMgbWF5IHNlZW0gbGlrZSBhbiB1bm5lY2Vzc2FyeSBtZWFucyB0byBwcm9tb3RlIHRoZSBDdXN0b20gQ2xheSBQb2tlciBDaGlwcyB0aGF0IHlvdSBvZmZlciwgaXQgY291bGQgcHJvdmUgdG8gYmUgcXVpdGUgcHJvZml0YWJsZSBpbiB0aGUgZW5kLiAKRW1wdHkgY2hhcmN1dGVyaWUgYm9hcmQgaXMgYSBibGFuayBjYW52YXMsIHNheXMgT3lhbWEgY28gb3duZXIgQ2hyaXMgSGFsc2V5IEJyYW5kdC4gaXMgZmFyIG1vcmUgdmlzdWFsbHkgYXBwZWFsaW5nIHRvIGhhdmUgYSB2YXJpZXR5IG9mIGl0ZW1zIHRoYW4gYSBtb3VuZCBvZiB0aGUgc2FtZSBwcm9kdWN0cy4gQWZ0ZXIgYWxsLCBoZSBwb2ludHMgb3V0LCBuZXcgYW5kIGRpZmZlcmVudCBmb29kcyBpcyBvbmUgb2YgdGhlIGdyZWF0IHBsZWFzdXJlcyBvZiBsaWZlLiByZWNvbW1lbmRzIGNyZWF0aW5nIGFuIGFycmFuZ2VtZW50IG9mIGRyeSAgb3Igc2FsdCBjdXJlZCBtZWF0cyBzdWNoIGFzIHByb3NjaXV0dG8sIGphbW9uLCBicmVzYW9sYSBhbmQgdGhlIGxpa2UsIG9uIGEgYm9hcmQgb3IgcGxhdHRlci4gTWl4IGluIHNvbWUgdGFuZ3kgc2FsYW1pcyBhbmQgcmljaCBwIG9yIHRlcnJpbmVzLiBUaGVuIGFkZCBjaGVlc2VzLCBkcmllZCBmcnVpdHMsIG51dHMsIG9saXZlcywgbXVzdGFyZHMgYW5kIHBpY2tsZXMuClJhaWQgcnVicyBtYXNzYWdlIHBhcmxvcnMgd3Jvbmcgd2F5CklmIGJ1c2luZXNzZXMgd2FudCB0byBib25kIHdpdGggdGhlaXIgYXVkaWVuY2UgaW4gYSBnZW51aW5lIHdheSwgdGhleSBoYXZlIHRvIHNvbHZlIGEgcHJvYmxlbSBhbmQgcHJvdmlkZSByZWFsIHZhbHVlIHRoYXQgY3VzdG9tZXJzIGNhbiB0YWtlIGhvbWUuLiAKRmluYWxseSwgdGhlcmUgd2FzIHRoZSBzdHJvbmcgaW1wcmVzc2lvbiBtYWRlIGJ5IE1hZ2RhIFNhbGFyaWNoLCB0aGUgMTk5OSBBdXRvbW90aXZlIE5ld3MgRXVyb3BlIFdvbWFuIG9mIHRoZSBZZWFyLgpUaGlzIGlzIHVuZm9ydHVuYXRlbHkgdHJ1ZS4gClZhbmNpdHkncyBoZWFkIG9mZmljZSBlbXBsb3llZXMgaGF2ZSBjb25zaXN0ZW50bHkgYWNoaWV2ZWQgd2FzdGUgZGl2ZXJzaW9uIHJhdGVzIG9mIG92ZXIgODUlIHRocm91Z2ggYWdncmVzc2l2ZSByZWN5Y2xpbmcgYW5kIGNvbXBvc3RpbmcgcHJvZ3JhbXMgICB0aGUgY3JlZGl0IHVuaW9uIGFsc28gd29ya3MgZGlyZWN0bHkgd2l0aCBsYW5kbG9yZHMgdG8gZW5jb3VyYWdlIHJlY3ljbGluZyBhbmQgYWRkaXRpb25hbCBkaXZlcnNpb24gcHJvZ3JhbXMsIGFuZCBtYWludGFpbnMgYWdncmVzc2l2ZSB3YXN0ZSBhbmQgY29tcG9zdGluZyBwcm9ncmFtcyBhdCA1MCBicmFuY2ggbG9jYXRpb25zCldhbnRlZCB0byBnZXQgaW50byBsYWJvciBvcmdhbml6aW5nLiAKSSBmb3VuZCB0aGF0IGlmIEkgdXNlZCBvbmUgbWVkIG1vcmUgdGhhbiB0d2ljZSBpbiBhIHJvdywgZmxlYXMgd291bGQgYXBwZWFyLiAKU3RhdGUgTGljZW5zZVNvbWUgc3RhdGVzIHJlcXVpcmUgYW55b25lIHdobyBnaXZlcyBmb290IG1hc3NhZ2VzIGZvciBhIHByb2ZpdCB0byBoYXZlIGEgc3RhdGUgaXNzdWVkIG1hc3NhZ2UgdGhlcmFweSBsaWNlbnNlLiBBdCB0aGUgdGltZSBvZiBwdWJsaWNhdGlvbiwgMzQgc3RhdGVzIGRvIG5vdCByZWd1bGF0ZSBvciByZXF1aXJlIGxpY2Vuc2luZyBmb3IgZm9vdCBtYXNzYWdlLiBUbyBnZXQgYSBzdGF0ZSBsaWNlbnNlLCB5b3UgbXVzdCBtZWV0IHRoZSBzdGF0ZSdzIHRyYWluaW5nIHJlcXVpcmVtZW50cywgd2hpY2ggdXN1YWxseSBpbmNsdWRlIGEgc3BlY2lmaWMgYW1vdW50IG9mIHRyYWluaW5nIGhvdXJzLCBhIHdyaXR0ZW4gZXhhbWluYXRpb24gYW5kIHRoZSBsaWNlbnNlIGFwcGxpY2F0aW9uIHByb2Nlc3NpbmcgZmVlLiBUbyBkZXRlcm1pbmUgd2hldGhlciB5b3UgbmVlZCBhIHN0YXRlIGxpY2Vuc2UgdG8gcGVyZm9ybSBmb290IG1hc3NhZ2VzLCBjb250YWN0IHlvdXIgc3RhdGUncyBkZXBhcnRtZW50IG9mIGhlYWx0aCBvciBtYXNzYWdlIHRoZXJhcHkgYm9hcmQuIFRoZSBleGFjdCBuYW1lIG9mIHRoZSByZWxldmFudCBhZ2VuY3kgdmFyaWVzIGJ5IHN0YXRlLgpMYW1iIGFuZCBlaWdodCBvdGhlcnMgYXJlIGFsbCB0aGF0J3MgbGVmdCBmcm9tIGEgZmllbGQgb2YgNiw2ODUgcGxheWVycy4gVGhlIHRvcCBwcml6ZSBpcyAkOC43IG1pbGxpb24uIEFsbCBmaW5hbCB0YWJsaXN0cyBhbHJlYWR5IGhhdmUgcmVjZWl2ZWQgbmludGggcGxhY2UgbW9uZXksIGFib3V0ICQ3ODIsMDAwLgpJZiB5b3Ugd2FudCB0byBwcm9maWxlIGFuZCBzY3JlZW4gcGVvcGxlIHdobyBtaWdodCBub3QgcGF5LCBkbyBpdCB5b3Vyc2VsZiBhdCB0aGUgaG9zdCBhcmVhICAgZG9uIHB1dCB0aGF0IG9uIGEgc2VydmVyLiAKSSBuZXZlciBzZXQgYSBmb3IgaGVyLCBidXQgSSBkaWQgYXNrIHRoYXQgc2hlIGNvbWUgaG9tZSBhdCBhIGRlY2VudCB0aW1lIG9yIG5vdCBjb21lIGhvbWUgdW50aWwgbW9ybmluZy4gCkkgaGF2ZSBjaGVja2VkIHRoZSBzaG9ydCB0ZXJtIHJlbnRhbCBtYXJrZXQsIGFuZCBJIGZvdW5kIHNldmVyYWwgd2hvIG9wZXJhdGUgd2l0aCBhIG9uZSBtb250aCBtaW5pbXVtIHN0YXkuClN0YWNrIGxvc3QuIApUaGUgd2Vic2l0ZSBtYXkgbG9vayB2ZXJ5IHdlbGwgbGlrZSBmYWNlYm9vayBvciBhbnkgb3RoZXIga2luZCBvZiBzZWN1cml0eSBpbnZlbnRlZCB3ZXNiaXRlLlJlYWQgbW9yZTogR2V0IEZhY2Vib29rIFBva2VyIENoaXBzV2hhdCBhcmUgdGhlIHZhbHVlcyBvZiBwb2tlciBjaGlwcz9UaGV5IHJlcHJlc2VudCBtb25leS4gVGhleSBjb21lIGluIGRpZmZlcmVudCB2YWx1ZXMgb2YgbW9uZXkuIERlc3BpdGUgdGhlIHBvcHVsYXJpdHkgb2YgcG9rZXIsIHRob3VnaCwgdmVyeSBmZXcgcGVvcGxlIGtub3cgbXVjaCBhYm91dCBwb2tlciBjaGlwcyBvciB0aGVpciBzdGFuZGFyZCBkZW5vbWluYXRpb25zLiAKSmFwYW5lc2UgUm9ib3QgQ3JhemU5IE1vbnRoIE9sZCBCYWJ5Ym90SmFwYW4ncyBUb2t5byBVbml2ZXJzaXR5IHByb2Zlc3NvciBZYXN1byBLdW5peW9zaGkgdW52ZWlscyBhIDkgbW9udGggb2xkIGJhYnkgcm9ib3QgIk5vYnkiIGF0IGhpcyBsYWJvcmF0b3J5IGF0IHRoZSBUb2t5byBVbml2ZXJzaXR5IG9uIEp1bmUgMTEsIDIwMTAuIFRoZSBiYWJ5IHJvYm90IGhhcyB0d28gY2FtZXJhcyBhbmQgdHdvIG1pY3JvcGhvbmVzIG9uIGl0cyBoZWFkIGFuZCBhbHNvIGVxdWlwcGVkIHdpdGggc29tZSA2MDAgdG91Y2ggc2Vuc29ycyB1bmRlciBpdHMgc2tpbi4gKGNyZWRpdDogSmlqaSBQcmVzcy9BRlAvR2V0dHkgSW1hZ2VzKQpJZiB0aGVyZSBpcyBvbmx5IG9uZSBwYXJ0eSwgdGhlIHByb2Nlc3Mgb2YgY29tbXVuaWNhdGlvbiBpcyBub3QgcG9zc2libGUuIFRoZXJlIHNob3VsZCBiZSBhIG9uZSBtb3JlIHBhcnR5IHRvIHRyYW5zZmVyIG9yIHJlY2VpdmUgdGhlIG1lc3NhZ2UuIApUaGVzZSBwaWVjZXMgYXJlIG5vdCBjb21wb3NlZCBlbnRpcmVseSBvZiBtZXRhbCwgb25seSBhIGNlbnRlciBjb3JlIHBpZWNlIHRoYXQgaXMgbWV0YWwuIApDZSBtYXN0ZXIgcydpbnNjcml0IGRhbnMgY2VzIHJmbGV4aW9ucyBldCBjZXMgdm9sdXRpb25zLi4gCk1lbWVzIGFyZSBzaW5nbGVkIG91dCBoZXJlIGJlY2F1c2UgcGVvcGxlIHZvdGVkIGZvciBhIHRyaWFsIHBlcmlvZCBvbiB0aG9zZSBhbGwgdGhlIHJlc3Qgb2YgdGhlIGZlZWRiYWNrIGFuZCB2b3RpbmcgZmluaXNoZWQgdXAgaW4gbWlkIEZlYi4gV2UgZG8gaXQgYWdhaW4gaW4gZnV0dXJlIChwbGFuIGlzIGV2ZXJ5IHllYXIpIGJlY2F1c2Ugd2Ugd2FudCB0aGUgcnVsZXMgdG8gcmVmbGVjdCB3aGF0IHRoZSBzdWIgYWN0dWFsbHkgd2FudHMsIHNvIHBsZWFzZSBrZWVwIHRoaXMgaW4gbWluZCB0byBzdWdnZXN0IGRvd24gdGhlIHJvYWQuYmlnc2xvdGhvbm15ZmFjZSAgMSBwb2ludCAgc3VibWl0dGVkIDE3IGRheXMgYWdvWSBQZW9wbGUgaW4gaGVyZSBhcmUgc2F5aW5nIHRvIHVzZSB0aGUgYm9hcmRpbmcgZHJvbmUgYW5kIHRoYXQgcmlnaHQsIGJ1dCB0aGVuIGFyZSBhbHNvIHNheWluZyB5b3UgY2FuIGRvIGl0IGlmIGl0IGJyZWFjaGVzIGludG8gYW4gdW5jb25uZWN0ZWQgcm9vbS4gClRoZW4gZGl2aWRlIHRoZXNlIHBlcm11dGF0aW9ucyBieSB0aGUgdG90YWwgbnVtYmVyIG9mIDcgY2FyZCBwZXJtdXRhdGlvbnMgdG8gZ2V0IG91ciBhbnN3ZXI6IDUyMTIxMTEwOTQ3NDYgICg2YzIpIC8gKDUyNTE1MDQ5NDg0NzQ2KSA9IDAuMjk3IC4uIApJIGp1c3QgbGVhcm5lZCB0aGlzIHllc3RlcmRheSB3aGVuIEkgd2FzIHRhbGtpbmcgdG8gb3VyIGNvdW5zZWxvciEgT25jZSBiYWJ5IGFycml2ZXMsIFdJQyBjb3ZlcnMgZXNzZW50aWFsIGZvb2RzIGZvciB5b3UsIGJhYnkgZm9vZCBmb3IgYmFieSwgZXRjLi4gClRoaXMgaXMgS29yZWFuIEhhbnUgYmVlZiAoc28gaXQgaXMgYSBsaXR0bGUgZmFuY3kpLCBidXQgdG90YWxseSB3b3J0aCBpdCBmb3Igb25lIG1lYWwgaGVyZS4gCk9naWx2eSBuYW1lZCBQaXl1c2ggUGFuZGV5IGl0cyBjaGllZiBjcmVhdGl2ZSBvZmZpY2VyLCB3b3JsZHdpZGUsIGVmZmVjdGl2ZSBhdCB0aGUgc3RhcnQgb2YgdGhlIG5ldyB5ZWFyLiBIZSByZXBsYWNlcyBUaGFtIEtoYWkgTWVuZywgd2hvIHdhcyBsZXQgZ28gaW4gSnVseSBvdmVyIHVuc3BlY2lmaWVkIHZpb2xhdGlvbnMgb2YgdGhlIGNvbXBhbnkncyBjb2RlIG9mIGNvbmR1Y3QuIApNeSBzY2hvb2wgd2FzIFRpdGxlIDEgYW5kIHRoZSBzZWNvbmQgYmlnZ2VzdCBzY2hvb2wgZGlzdHJpY3QgaW4gdGhlIHN0YXRlcyBzbyB0aGV5IHRob3VnaHQgaGF2aW5nIG1hbGUgcm9sZSBtb2RlbHMgd291bGQgYmUgZ29vZCBmb3IgdGhlIGtpZHMuIApBIGNvd29ya2VyIHRvbGQgbWUgYSBzdG9yeSBmcm9tIGhlciB0aW1lIHdvcmtpbmcgYXMgYSBzY2hvb2wgbnVyc2UgYW5kIGhlbHBpbmcgc3R1ZmYgYmFja3BhY2tzIHdpdGggZm9vZCB0byBzZW5kIGhvbWUgd2l0aCBjaGlsZHJlbi4gSXQgd2FzIGEgcHJvZ3JhbSB0aGUgc2Nob29sIGhhZCB0aGF0IHByb3ZpZGVkIGZvb2QgdG8ga2lkcyBvbiB3ZWVrZW5kcyBzbyB0aGV5IHdvdWxkbiBoYXZlIHRvIGdvIHdpdGhvdXQuCkdpdmluZyBjb25zdW1lcnMgdGhpcyBmb3J1bSBhbmQgYWNjZXNzIHRvIHNvIG1hbnkgYXJ0aXN0cyBpcyBhIGdyZWF0IGlkZWEuIApJIGxpdmUgaW4gYSBzbWFsbCBjb21tdW5pdHkgaW4gQVouIApXZSdkIGFsc28gbGlrZSB0byBjbGVhciB1cCBvbmUgdGhpbmcgdGhhdCBhcHBlYXJzIHRvIGJlIGNhdXNpbmcgY29uZnVzaW9uIGFyb3VuZCB0aGlzIHBvbGljeSAgIGl0IGlzIG5vdCBhbHdheXMgYSBxdWVzdGlvbiBvZiB0aGUgaW1hZ2UgaXRzZWxmLiAKSXQgZWFybHkgYW5kIEkgc3RpbGwgZ2V0dGluZyBjYWZmZWluZSBkb3duIGlmIGFueXRoaW5nIGRvZXNuIG1ha2Ugc2Vuc2UuIEp1c3QgYXNrIHF1ZXN0aW9ucyBzZWUgaWYgSSBjYW4gaGVscCBleHBsYWluIGJldHRlci4KSnVkaSBPbmxpbmUgaGFzIGJlZW4gbG9uZyBjb25zaWRlcmVkIG9uZSBvZiB0aGUgbGVhZGluZyBjYXNpbm9zIHRoYXQgaGF2ZSBiZWVuIGNyZWF0ZWQuIE1hbnkgbG92ZSB0byBnYW1ibGUgYnV0IGl0IGlzIGEgc29jaWFsIHRhYm9vIGZvciB0aGVpciBsb3ZlZCBvbmVzLiAKWW91J3ZlIGhhZCB0aGlzIHRyYWl0IHNpbmNlIGRheSBvbmUuIApUaGVyZSBhcmUgc2V2ZXJhbCByZWFzb25zIGEgcGVyc29uIGNhbiBnZXQgdGhpbm5lciBvciBnZXQgdGhpbiBvbiBvbmUgc2lkZS4gQSBmZXcgcmVhc29uczogeW91IGFyZSBhdXRvbWF0aWNhbGx5IHRoaW5uZXIgZHVlIHRvIHBhcnRpbmcgdG8gb25lIHNpZGUuIFRoZXJlIGlzIGxlc3MgaGFpciBvbiB0aGF0IHNpZGUuIElmIHlvdSBoYXZlIGZpbmUgaGFpciBvciB2ZXJ5IGN1cmx5IGhhaXIgaXQgY291bGQgYmUgZHJ5IGFuZC9vciBmcmFnaWxlLiBBIGNvdHRvbiBvciBmbGFubmVsIHBpbGxvd2Nhc2Ugd2lsbCBtYWtlIGl0IHdvcnNlLiBHZXQgYSBzaWxrIG9yIHNhdGluIG9yIHNhdGVlbiBwaWxsb3djYXNlLiBPciBnZXQgYSBwcm90ZWN0aXZlIHNpbGt5IGJvbm5ldCBmcm9tIHRoZSBiZWF1dHkgc3VwcGx5LiBBbHNvIGl0IGNhbiBiZSBmcm9tIGVsYXN0aWMgYmFuZHMgd2hlbiB5b3UgcHV0IHVwIHlvdXIgaGFpci4gVGhpbmsgb2YgeW91ciBoYWlyIGFzIGEgZmluZSBmYWJyaWMuIExpa2UgYW4gZXhwZW5zaXZlIGZhYnJpYy4gWW91IHdvdWxkbid0IHVzZSBhbnkgc3Ryb25nIHNvYXAsIHlvdSB3b3VsZCB3YXNoIGluZnJlcXVlbnRseSwgeW91IHdvdWxkIHNxdWVlemUgeW91ciBoYWlyIGRyeSBub3QgcnVmZmxlLCB5b3Ugd291bGQgbm90IHB1dCBpdCBpbiB0aGUgZHJ5ZXIgb3IgcHV0IHN0cm9uZyBoZWF0IG9uIGl0LiBBaXIgZHJ5LgpJdCBpcyBqdXN0IGEgY29pbmNpZGVuY2UsIGV2ZW4gaWYgaXQgaGFwcGVuZWQgaW4gdGhlIHNhbWUgbmlnaHQuIE91ciBkcmVhbXMgYXJlIG15c3RlcmlvdXMgdG8gdXMsIGJ1dCBpdCBpcyBhIG5hdHVyYWwgYmlvbG9naWNhbCBwcm9jZXNzIGFuZCB0aGV5IGFyZSBpbiBubyB3YXkgYSBwcmVkaWN0aW9uIG9mIHRoZSBmdXR1cmUgbm9yIGFuIGluc2lnaHQgaW50byBzb21lIGtpbmQgb2YgaGlkZGVuIGtub3dsZWRnZS4gCkhlIG1hZGUgYSAzIHBvaW50ZXIgZnJvbSB0aGUgbGVmdCBjb3JuZXIgd2hpbGUgZ2V0dGluZyBmbGFncmFudGx5IGZvdWxlZCBieSBLZXZpbiBMb3ZlLiBNY0dydWRlciBtYWRlIHRoZSBlbnN1aW5nIGZyZWUgdGhyb3csIE1pYW1pIHJldGFpbmVkIHRoZSBiYWxsIGJlY2F1c2Ugb2YgdGhlIGZsYWdyYW50LCBhbmQgTWNHcnVkZXIgdGhlbiBtYWRlIGEgMyBmcm9tIHRoZSByaWdodCBjb3JuZXIuIApBIHdob2xlIHBhY2sgb2YgbXVzaGVycyBhcmUgbm93IG9uIHRoZSB0cmFpbCBiZXR3ZWVuIE9waGlyIGFuZCBJZGl0YXJvZCwgaW5jbHVkaW5nIE1pdGNoIFNlYXZleSB3aG8gZmluYWxseSBpbiB0aGUgdG9wIHRlbi4gU2V2ZXJhbCB3ZXJlIHJlc3RpbmcgdG9nZXRoZXIsIGluY2x1ZGluZyBKb2FyIHVudGlsIE5pYyBjYW1lIHRocm91Z2ggYW5kIEpvYXIgdG9vayBvdXQgYWZ0ZXIgaGltLiBNYXJ0aW4gQnVzZXIsIGEgZm91ciB0aW1lIHdpbm5lciwgaXMgb25lIG9mIHRoZSBtdXNoZXJzIG9uIHRoYXQgc3RyZXRjaCBvZiB0cmFpbCwgYnV0IGhlIHRoZSBvbmx5IG9uZSB3aG8gaGFzbiB0YWtlbiBoaXMgMjQgeWV0LiBUaGlzIG1lYW5zIHRoYXQgZGVzcGl0ZSBjdXJyZW50bHkgYmVpbmcgZm91cnRoIGluIG1pbGVhZ2UsIGhlIGdvaW5nIHRvIGxvc2UgdGhhdCBwb3NpdGlvbiBhcyBzb29uIGFzIGhlIHN0b3BzIGZvciBoaXMgMjQgKHByb2JhYmx5IGluIElkaXRhcm9kKSwgYXMgb3RoZXIgdGVhbXMgcGFzcyBoaW0uIFRoaXMgc2h1ZmZsaW5nIGFyb3VuZCBpcyBwcmV0dHkgbm9ybWFsLCB3aGljaCBpcyB3aHkgeW91IGNhbiBhbHdheXMgdHJ1c3QgdGhlIGN1cnJlbnQgZnJvbnRydW5uZXIsIGJ1dCBpdCBhIGdvb2Qgc2lnbiBoZSBwcm9iYWJseSB3b24gd2luIQpOb2JsZSBwZW9wbGUgd2lsbCB1bmRlcnN0YW5kIHRoZSBzeXN0ZW0gYWJvdmUgdGhlbSwgYW5kIHJlY29nbml6ZSBhbmQgYWNrbm93bGVkZ2UgdGhlIHdheSB0aGF0IGl0IGNvbXBlbHMgdGhlbSB0byB0aGluayBhbmQgYWN0Li4gCkl0IGhhcmQgdG8gc2F5IHdoYXQgd291bGQgaGF2ZSBoYXBwZW5lZCBoYWQgdGhleSBmb2xsb3dlZCBoaXMgcGxhbiB0byBhIFQgYnV0IGl0IHByb2JhYmx5IHdvdWxkIGhhdmUgaGFkIG1vcmUgb2YgYSBzaG90IHRoYW4gc2l0dGluZyBhcm91bmQgYXZvaWRpbmcgbG9zaW5nIGRhdGVkIHNoaXBzLiBJdCBhbHNvIHByZXR0eSBoYXJkIHRvIHdyYXAgeW91ciBicmFpbiBhcm91bmQgc2VlaW5nIHBlb3BsZSBzZW5zZWxlc3NseSBleHBsb2RlIGluIHRob3NlIHNoaXBzIGV2ZW4gd2l0aCB0aGUgY29udGV4dCBvZiBrbm93aW5nIHRoZSB3ZXN0ZXJuIGZyb250IHdhcyB3YXkgbW9yZSBvZiBhIHNsYXVnaHRlcmhvdXNlLiAKRmlsaWF0aW9uLiAKSGlnaGVzdCBzdGFrZSBwb2tlciBnYW1lcwpUaGV5IGFyZSB1c2luZyByZWFsIG1vbmV5IGFuZCBwb3RlbnRpYWxseSBzaW5raW5nIG1vcmUgYW5kIG1vcmUgbW9uZXkgaW50byB0aGUgb3Bwb3J0dW5pdHkgdG8gd2luIGEgY292ZXRlZCBpdGVtIHRoYXQgbWlnaHQgaW5jcmVhc2UgdGhlaXIgcGVyZm9ybWFuY2UgaW4gdGhlIGdhbWUuIApOb3QgdGhlIGJlc3QgZm9yIGhlYXQgcmV0ZW50aW9uIElNTyB3aGljaCByZXF1aXJlcyB0b28gbXVjaCBoZWF0IGFuZCBjbGVhbmluZyBiZWNvbWVzIGEgcGFpbiAoNy41LzEwKSBOZXcgZmxhdHRvcCB2MnMgYXJlIHNvbGlkIGJ1dCA0NWRlZyBjYW4gc2lwLiAKU3RhbmRpbmcgaW4gYW4gaG91ciBsb25nIGxpbmUgZm9yIGEgcm9sbGVyIGNvYXN0ZXIuIEkgaGF2ZSByaWRpY3Vsb3VzIGFueGlldHkuIEkgZG9uIGZlYXIgdGhlIHJpZGUsIEkgZmVhciB0aGUgcmlkZSBtYWxmdW5jdGlvbmluZy4gSSB3YXMgc28gc2NhcmVkIGJ1dCBteSBraWRzIHJlYWxseSB3YW50ZWQgbWUgdG8gcmlkZSBpdCB3aXRoIHRoZW0uIEFsbCB0aGUgcGVvcGxlIGFyb3VuZCBtZSBpbiBsaW5lIHdlcmUgc28gc3VwcG9ydGl2ZSwgYW5zd2VyaW5nIG15IHF1ZXN0aW9ucyBhbmQgZ2l2aW5nIG1lIHBlcCB0YWxrcy4gRXZlcnkgY2VsbCBpbiBteSBib2R5IHNhaWQgImJvbHQgYm9sdCBib2x0IGdldCBvdXQgeW91IGdvbm5hIGRpZSIgYXMgdGhleSBzdHJhcHBlZCBtZSBpbiBteSBzZWF0LiBUaGUgcmlkZSB3YXMgYW1hemluZyEhIEFmdGVyd2FyZHMgYWxsIHRob3NlIHN0cmFuZ2VycyB3aG8gaGFkIHNlZW4gbXkgZGVlcCBhbmQgcmVhbCBmZWFyIHdlcmUgcHJvdWQgb2YgbWUgYW5kIGhpZ2ggZml2aW5nIG1lIGFuZCBjb25ncmF0dWxhdGluZyBtZSBhcyB0aG91Z2ggSSBqdXN0IHdyZXN0bGVkIGEgbW91bnRhaW4gbGlvbi4gSXQgbWVhbnQgc28gbXVjaC4KVGhlcmUgaGF2ZSBiZWVuIGV4YW1wbGVzIGluIHJlY2VudCB0aW1lcyB3aGVyZSBkaWN0YXRvcnMgaGF2ZSBjaGFuZ2VkIHRoZSBmYXRlcyBvZiB0aGVpciBuYXRpb25zLiAKQnV0IHlvdSBnb3QgdG8gZWFybiB0aGUgdHJ1c3Qgb2YgdGhlIGZhbnMuIApFdmVuIGZvciBzb21lb25lIGFzIGJpZyBhbmQgYXMgcmljaCBhcyBKYWNraWUgQ2hhbiwgaGUgc3RpbGwgaGFkIHRvIHdhdGNoIGhpcyBzb24gc3BlbmRpbmcgNiBtb250aHMgaW4gamFpbCBmb3Igc21va2luZyB3ZWVkLiAKRGllIFN0cm5kZSBzaW5kIG1pdCBkZXIgYmxhdWVuIEZsYWdnZSBhdXNnZXplaWNobmV0ICAgZGF6dSBnZWhydCBuZWJlbiBlaW5lciBhdXNnZXplaWNobmV0ZW4gV2Fzc2VycXVhbGl0dCB1bmQgZWluZXIgU3RyYW5kd2FjaHQgYXVjaCBlaW5lIEF1c3N0YXR0dW5nIG1pdCBTZXJ2aWNlZWlucmljaHR1bmdlbiB3aWUgV0NzIHVuZCBEdXNjaGVuLiBXaHJlbmQgUHVlcnRvIGRlIFRhemFjb3J0ZSBhdWNoIG1pdCBlaW5lbSAoa2xlaW5lbikgY2hhcm1hbnRlbiBoaXN0b3Jpc2NoZW0gS2VybiAoYWJlciBsZWlkZXIgYXVjaCBzZWhyIGtsb2JpZ2VuIEtzdGVuc2NodXR6YmF1dGVuIHVuZCBlaW5lbSBpbiBkaWUgSmFocmUgZ2Vrb21tZW5lbiwgZXR3YXMgYml6YXJyZW4gV2Fzc2VycGFyaykgYXVmd2FydGV0LCBpc3QgUHVlcnRvIE5hb3MgZWhlciBkYXMgdG91cmlzdGlzY2hlIEdlZ2Vuc3RjayBhdXMgZGVyIFJldG9ydGUsIGRhZnIgbWl0IFBhbG1lbiBhbSBTdHJhbmQgdW5kIGVpbmVyIGZ1bmtlbG5hZ2VsbmV1ZW4gYmFycmllcmVmcmVpZW4gU3RyYW5kcHJvbWVuYWRlIG1pdCBVZm8gTGFuZGVwbGF0emJlbGV1Y2h0dW5nLiAKRWRvYXJkbyBNaXJvZ2xpbyBNYXZydWQgYW5kIFJ1YmluIEJpbyAyMDE2LCBUaHJhY2lhbiBWYWxsZXksIEJ1bGdhcmlhCldpbGxpYW0gVEljbmRyaWNrcywgb2YgaSBNci4gClRoZSBzdHJpY3RlciBydWxlcyByZXF1aXJlcyBib3Jyb3dlcnMgdG8gcHJvdmUgdGhhdCB0aGV5IGNhbiBzZXJ2aWNlIHRoZWlyIHVuaW5zdXJlZCBtb3J0Z2FnZSBhdCBhIHF1YWxpZnlpbmcgcmF0ZSBvZiB0aGUgZ3JlYXRlciBvZiB0aGUgY29udHJhY3R1YWwgbW9ydGdhZ2UgcmF0ZSBwbHVzIHR3byBwZXJjZW50YWdlIHBvaW50cyBvciB0aGUgZml2ZSB5ZWFyIGJlbmNobWFyayByYXRlIHB1Ymxpc2hlZCBieSB0aGUgQmFuayBvZiBDYW5hZGEuIFRoZSBwb2xpY3kgYWxzbyByZWR1Y2VkIHRoZSBtYXhpbXVtIGFtb3VudCBidXllcnMgd291bGQgYmUgYWJsZSB0byBib3Jyb3cgdG8gYnV5IGEgaG9tZS4KSWYgeW91IHNhdyBhbiBpbiBuZXR3b3JrIHByb3ZpZGVyLCBidXQgdGhleSBhcmUgYmlsbGluZyBmb3Igc29tZSBjb2RlIHRoYXQgeW91ciBpbnN1cmFuY2UgZG9lc24gY292ZXIsIHRoZW4geW91IGJlIHJlc3BvbnNpYmxlIGZvciB0aGF0IGFtb3VudCBhcyB3ZWxsLiBZb3UgYWxzbyByZXNwb25zaWJsZSBmb3IgdGhlIGNvaW5zdXJhbmNlIGFuZCBhbnkgZGVkdWN0aWJsZSB5b3UgaGF2ZSB0byBtZWV0IHByaW9yIHRvIHlvdXIgaW5zdXJhbmNlIGNvdmVyaW5nIGFueXRoaW5nLiAKT25lIHRpbWUgdGhvdWdoLCBJIGNvdWxkbiBzdGFuZCBpdCBhbnltb3JlIGFuZCBJIGFza2VkIGhpbSBpZiB3ZSBjb3VsZCBvcmRlciBwaXp6YSBmcm9tIGEgZGlmZmVyZW50IHNob3AsIGJlY2F1c2UgSSB3YXNuIGEgZmFuIG9mIHRoZSBwbGFjZSBoZSBhbHdheXMgb3JkZXJlZCBpdCBmcm9tLiAKSSBiZSBhbiBvbGQgbWFuLCBsYXlpbmcgb24gaGlzIGRlYXRoYmVkLCBmaWxsZWQgd2l0aCByZWdyZXQgYW5kIHJlbW9yc2UgZnJvbSBhIHdhc3RlZCBsaWZlLiAKRmxleGliaWxpdHkgb2YgSGVsb2NzIGNvdWxkIGluY3JlYXNlIGZpbmFuY2lhbCBzeXN0ZW0gdnVsbmVyYWJpbGl0aWVzLCB0aGUgYW5hbHlzdHMgc2FpZC4gdGhlIGV2ZW50IG9mIGEgY29ycmVjdGlvbiwgYm9ycm93ZXJzIGNvdWxkIGZpbmQgdGhlbXNlbHZlcyB3aXRoIGEgZGVidCBsb2FkIHRoYXQgZXhjZWVkcyB0aGUgdmFsdWUgb2YgdGhlaXIgaG9tZSwgd2hpY2ggaXMgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgbmVnYXRpdmUgZXF1aXR5LgpOb3cgaW1hZ2luZSB0aGF0IHlvdXIgaGFuZHMgYXJlIGEgY2xvc2VkIGJvb2ssIGFuZCB5b3VyIHRodW1icyBhcmUgdGhlIHNwaW5lLiAKTGFuZCBiYXNlZCBjYXNpbm8gaGF2ZSBzb21lIGZpbmFuY2lhbCBwcm9ibGVtcyBhbmQgZXNwZWNpYWxseSBpbiBGcmFuY2UuIEEgbG90IG9mIHJlYWwgY2FzaW5vcyBoYXZlIHRvIGJlIGNvbmZyb250ZWQgdG8gYSBsb3Qgb2Ygc2l0dWF0aW9uIHN1Y2ggYXMgcmVjb3ZlcnkgY29tbWVyY2UsIGVjb25vbWljcyBzdXNwZW5zaW9uLiAKQmFzaWNhbGx5LCBJIGdvIHRocm91Z2ggYWxsIGhpc3RvcmljYWwgZ2FtZXMgd2hldGhlciB0aGVyZSBpcyBhIGxpbmUgZm9yIGl0IG9yIG5vdCwgYW5kIGRvIGEgYmFja3Rlc3QgcHJlZGljdGlvbiBhbmQgYWRkIHRoZSByZXN1bHQgdG8gdGhlIGRpc3RyaWJ1dGlvbiBvZiB0aGF0IHByZWRpY3Rpb24uIEZvciBleGFtcGxlIGlmIEkgcHJlZGljdCB0b3RhbCBvZiAxNDUsIGFuZCB0aGUgYWN0dWFsIHRvdGFsIGlzIDE2MCwgSSBhZGQgdGhlIG51bWJlciAxNjAgdG8gdGhlIGRpc3RyaWJ1dGlvbiBvZiAiMTQ1IHByZWRpY3Rpb24iLiBMYXRlciBkdXJpbmcgbGl2ZSBiZXR0aW5nLCB3aGVuIEkgaGF2ZSBhIHByZWRpY3Rpb24gb2YgMTQ1IGFuZCB0aGUgbGluZSBpcyAxNDksIHRoZW4gaXQgYmFzaWMgbWF0aCB0byBjYWxjdWxhdGUgdGhlIGVkZ2UgZ2l2ZW4gdGhlIGRpc3RyaWJ1dGlvbiBvZiAxNDUgcHJlZGljdGlvbnMuLiAKSWYgdGhlcmUgYXJlIG1vcmUgcGxhY2VzIGF2YWlsYWJsZSB0byByZW50LCBhbmQgbGFuZGxvcmRzIGFyZSBzdHJ1Z2dsaW5nIHRvIGVudGljZSBwZW9wbGUgdG8gc2lnbiBhIGxlYXNlIHRoZW4gdGhlcmUgaXMgYW4gYWR2YW50YWdlIHRvIHRob3NlIHRoYXQgbG93ZXIgcHJpY2VzLiBUaGVpciBwcm9wZXJ0eSB3aWxsIHNpdCB1bm9jY3VwaWVkIGZvciBsZXNzIHRpbWUuIE93bmVycyB0aGF0IGRvbiBsb3dlciB0aGVpciBwcmljZXMgaW4gdGhpcyBtYXJrZXQgc2l0dWF0aW9uIHdpbGwgZmluZCB0aGF0IHRoZXkgY2FuIGtlZXAgdGhlaXIgcHJvcGVydGllcyBvY2N1cGllZC4uIApJIGhhdmUgYSBkZWdyZWUgaW4gZmljdGlvbi4gSSBoYXZlbiBkb25lIG11Y2ggd2l0aCBpdC4gCk9uIHRoZSBvdGhlciBoYW5kLCBub25zdGljayBza2lsbGV0cyBhcmUgYmVzdCB1c2VkIGF0IG1lZGl1bSBoZWF0LCBvciBtZWRpdW0gaGlnaCBhdCB0aGUgbWF4LiAKRG9ua2luZyB0dXJucyBhbmQgcml2ZXJzIG9uIGJvYXJkcyB0aGF0IG1hc3NpdmVseSBmYXZvdXIgeW91ciByYW5nZSBpcyB3YXkgbW9yZSBvZiBhIHRoaW5nLCBidXQgZXZlbiB0aGVuIG9ubHkgdXN1YWxseSBkb25lIGJ5IGhpZ2ggc3Rha2VzIHJlZ3Mgd2hvIGRvbmUgYSBsb3Qgb2Ygc29sdmVyIHdvcmsgb3IgY29tcGxldGUgZG9ua3Mgd2hvIGRvbiBrbm93IHdoYXQgdGhleSBkb2luZy4gClRoYXQgZG9lc24ndCBtZWFuIHdoYXQgc2hlIGRvZXMgaXMgbGVnYWw7IHNlbGxpbmcgc2V4IGZvciBtb25leSBpcyBhIG1pc2RlbWVhbm9yIGFuZCBjYXJyaWVzIGEgcGVuYWx0eSBvZiB1cCB0byBhIHllYXIgaW4gcHJpc29uIGFuZCBhIGZpbmUgb2YgdXAgdG8gJDEsMDAwLiBCdXQgdGhlIHN0YXRlIGZvY3VzZXMgbXVjaCBtb3JlIG9mIGl0cyByZXNvdXJjZXMgb24gdGhlIHRyYWZmaWNraW5nIG9mIG1pbm9ycyBhbmQsIGFib3ZlIGFsbCwgdGhlIHRyYWZmaWNrZXJzIHRoZW1zZWx2ZXMuLiAKSSBhbmFseXNlIHdoYXQgdGhlIG1pc3Rha2Ugd2FzLiBEZXRlcm1pbmUgd2hhdCB0aGUgaW1wYWN0IGlzLiBDb25zaWRlciB3aGF0IEkgY291bGQgaGF2ZSBkb25lIGRpZmZlcmVudGx5LiBBcG9sb2dpc2UgaWYgd2FycmFudGVkLiBGaWxlIHRoZSBpbmZvcm1hdGlvbiBhd2F5IGZvciBmdXR1cmUgdXNlLgpTaGUgc3RydWdnbGVkIGdhaW5pbmcgd2VpZ2h0IGZvciB0aGUgZmlyc3QgaGFsZiB5ZWFyIG9mIGhlciBsaWZlLiBJIHN3aXRjaGVkIHRvIGZvcm11bGEgZXhjbHVzaXZlbHkgYXJvdW5kIDQgbW9udGhzIGJlY2F1c2UgSSBjb3VsZG4gdGFrZSBpdCBhbnltb3JlIHdpdGggcHVtcGluZyBhbGwgZGF5IGF0IHdvcmsgYW5kIGZlZWRpbmcgaGVyIG9uIGRlbWFuZCBhdCBuaWdodC4gU2hlIHdhcyBBTFdBWVMgaHVuZ3J5LiAKTm8gdHJvbGxpbmcgaXMgbm93IHBhcnQgb2YgcnVsZSAxIHJhdGhlciB0aGFuIGl0cyBvd24gcnVsZS4gSSB0aGluayBpdCBjb21lcyBkb3duIHRvIHRoZSBzYW1lIHRoaW5nIHRoZW1hdGljYWxseSBhbnl3YXkuCkkgaGF2ZSBsaXRlcmFsbHkgYmVlbiBjYXN1YWxseSBicmFpbnN0b3JtaW5nIHRoaXMgZXhhY3QgY29uY2VwdCBqdXN0IHdpdGhpbiBteSBvd24gaW1hZ2luYXRpb24gZm9yIDE1KyB5ZWFycyBidXQgSSBkaWRuJ3QgZXZlciBhY3R1YWxseSBkbyBhbnkgcmVzZWFyY2ggaW50byBob3cgb3RoZXJzIGhhdmUgb3V0bGluZXMgZWxlbWVudCBzeXN0ZW1zLiBGb3Igc28gbG9uZyBJIGNvdWxkbid0IHF1aXRlIGZpZ3VyZSBvdXQgZXhhY3RseSBob3cgdGhlIHNlY29uZGFyeSBlbGVtZW50cyBzaG91bGQgZml0IGluLCBvciB3aGVyZSBsaWdodCBhbmQgZGFyayB3b3VsZCBnby4gCkl0IHdhcyBsaWtlIEkgd2FzIG9uIGEgYnJlYWthd2F5IGF0IHRoZSBCZWxsIENlbnRyZSBhbmQgdGhlIHdob2xlIGJ1aWxkaW5nIHdhcyBjaGVlcmluZyBteSBuYW1lLiAKVGhlIG5ld3MgaXMgYmV0dGVyIGZvciBUb2J5IE5hbmtlcnZpcyB3aG8gd2lsbCByZXR1cm4gZnJvbSBhIGNvcmtlZCBxdWFkIHRoaXMgd2Vlay4sIHdoaWxlIFJlZWNlIENvbmNhIHdobyBjb3VsZCBhbHNvIHBsYXkgdGhpcyB3ZWVrZW5kIGRlc3BpdGUgaHVydGluZyBoaXMgImdvb2QiIGFua2xlIGluIGhpcyBWRkwgcmV0dXJuLgpCeSB0aGUgbmV4dCBkYXkgKHllc3RlcmRheSksIEkgZGlkbid0IG5vdGljZSBpdCBhbmQgY291bGQgZG8gdG9lIGxpZnRzIHdpdGhvdXQgZmVlbGluZyBhbnl0aGluZy4gSSB3ZW50IGZvciBhIDUgbWlsZSBydW4sIGRpZG4ndCByZWFsbHkgbm90aWNlIGFueXRoaW5nIGR1cmluZyBpdCwgYnV0IGNhbWUgaG9tZSBhbmQgZmVsdCB0aGF0IHR1Z2dpbmcgYWdhaW4gaW4gdGhlIGFyZWEuIFJpZ2h0IG5vdyBJIGNhbiBvbmx5IGZlZWwgaXQgd2hlbiBkb2luZyBhbmtsZSBjaXJjbGVzLiAKUGxheSBhcyBtdWNoIGFzIHBvc3NpYmxlIHRvIGltcHJvdmUgeW91ciBza2lsbHMuIFByYWN0aWNlIHlvdXIgZ2FtZSBvZiBjaG9pY2UgYnkgc2V0dGluZyB1cCBtb2NrIHJ1bnMuIFRyeSB0byBwcmVkaWN0IHRoZSBvdXRjb21lIG9mIGEgcmFjZSBvciBzcG9ydGluZyBldmVudCB3aXRob3V0IHB1dHRpbmcgYW55IGFjdHVhbCBtb25leSBvbiBpdCwgb3Igc2l0IGluIG9uIGEgZmV3IGxvdyBzdGFrZXMgaGFuZHMgb2YgY2FyZHMgd2l0aCBmcmllbmRzLiAKSSBrbm93IEkgb24geWVhciA3IGZpZ2h0aW5nIHRoaXMgU1NJIGJ1bGxzaGl0LiAKRm9ydHkgIGVpZ2h0IHNvbGRpZXJzIHdlcmUgcmVwb3J0ZWQga2lsbGVkLiBBIGZldyBkaWVoYXJkcyBzdGlsbCBoZWxkIG91dCBpbiBvbmUgc2VjICB0aW9uIG9mIHRoZSBjb21wbGV4LCBhbmQgSmFybmFpbCBTaW5naCBCaGluZHJhbndhbGUgd2FzIGJlbGlldmVkIGFtb25nIHRoZW0uIApXaGlsZSBJIGNhbiBzZWUgd2h5LCB0aGlzIHByb2Nlc3MgY2FuIGFjdHVhbGx5IGJlIGRvbmUgd2VsbCBhbmQgZG8gZ29vZC4gClNldWNoZTIzIHUKRGFubiBoYWIgaWNoIG1pY2ggYXVzIExhbmdld2VpbGUgYW4gbmVuICQxMDBOTCBTSCBUaXNjaCBnZXNldHp0IHVuZCBlcnN0bWFsIG5pY2h0cyBiZWtvbW1lbi4gS29ubnRlIGVpbmVuIFNTUyBzdGFja2VuLCBkZXIgaGF0IG1pY2ggYWJlciBpbiBkZXIgZGFyYXVmZm9sZ2VuZGVuIEhhbmQgZXJ3aXNjaHQgdW5kIGljaCB3YXIgd2llZGVyIGJlaSBQbHVzIE1pbnVzIE51bGwgKGVyIGhhdHRlIEtLLCBpY2ggQUogdW5kIGljaCBoYWJlIGlobiBhdWYgVElMVCBnZXNjaHR6dCkuIApNeSBjbGllbnQgd291bGQgbGlrZSB0byBvZmZlciBhIHVuaXF1ZSBjaGFsbGVuZ2UgdG8gYXZvaWQgYW55IG5lZ2F0aXZlIHByZXNzIC8gbWVkaWEgYWdhaW5zdCB5b3VyIGVzdGFibGlzaG1lbnQsIG9yIGFueSBsZWdhbCBzdWl0cyBvciByYW1pZmljYXRpb25zLiAKQWxsZW4uIApJZiBzaGUgd2FzIGNvbnRhZ2lvdXMsIHRoZXJlIHdvdWxkIGFscmVhZHkgYmUgYSBwYW5kZW1pYy4gCkkgYmUgc3VycHJpc2VkIGlmIHRoZXJlIGV2ZW4gYXJlIGFueSBkZWNlbnRseSBsb25nICJzYWZlIiBsaW5lcyBpbiB0aGVzZSBjb25kaXRpb25zLCBpbmNsdWRpbmcgdGhlIGFwcHJvYWNoLiAKUHJvYmxlbSBpcywgaXQgb2ZmZXJzIHVwIGRpZmZlcmVudCBvcGluaW9ucyBhYm91dCB0aGUgc2FtZSBoYW5kLCByYXJlbHkgZ2l2aW5nIGEgY2xlYXIgcmVjb21tZW5kYXRpb24uLiAKV2hhdCB3ZSBqdXN0IGV4cGVyaWVuY2VkIHdhcyBhIG9uY2UgaW4gYSBsaWZldGltZSBtZWx0ZG93bi4gSWYgd2Ugc2VlIHRoYXQgYWdhaW4gaXQgd2lsbCBiZSBiZWNhdXNlIHRoZSBnbG9iYWwgZWNvbm9teSBpcyBpbiBiaWcgdHJvdWJsZS4gUGVyaGFwcyB3aXRoIGFsbCB0aGUgcHJpbnRpbmcgZG9sbGFycyB0aGVyZSBpcyBzb21lIHJpc2sgb2YgcnVuYXdheSBpbmZsYXRpb24uIHNvIHBlcnNvbmFsbHkgSSB0aGluayBpdCBpcyB0aGUgbW9yZSBsaWtlbHkgc2NlbmFyaW8uIAoxMTEgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1doYXQgSSBsaWtlIG1vc3QgYWJvdXQgQ2FwdGFpbiBNYXJ2ZWwgaXMgdGhhdCBldmVuIHRob3VnaCBhdCBmaXJzdCBnbGFuY2UgaXQgc2VlbWVkIGxpa2UgYSAiYmlnIiBtb3ZpZSwgaXQgYWN0dWFsbHkgdmVyeSBpbnRpbWF0ZSBhbmQgY2hhcmFjdGVyIGRyaXZlbi4gCkltbWVkaWF0ZWx5LCBTaWV3ZXJ0IGJlZ2FuIHdhdmluZyBoaXMgYXJtcyBpbiBhdHRlbXB0IHRvIGNham9sZSBoaXMgcGxheWVycyBidXQgdGhlIGh1c2ggdGhhdCBkZXNjZW5kZWQgd2FzIHN5bXB0b21hdGljIG9mIGEgY3Jvd2QgdGhhdCBrbmV3IHRoZSBpbXBsaWNhdGlvbnMuIFdpdGggb25seSBmaXZlIGdvYWxzIGluIHRoZWlyIHByZXZpb3VzIDEyIGhvbWUgZml4dHVyZXMsIHRoZSBjaGFuY2VzIG9mIHRoZW0gc2NvcmluZyB0d28gaW4gdGhlIHJlbWFpbmluZyA4NyBtaW51dGVzIHdlcmUgc2NhbnQuCjlzOWMgaXMgYSBncmVhdCBibHVmZiBoYW5kIHlvdSBkb3VibGUgYmxvY2sgdGhlIG51dHMsIGFuZCBJdmV5IHdvdWxkIGRlZiBwbGF5IDlUcyBsaWtlIHRoaXMuIEhlIGFsc28gYmxvY2tzIHNwYWRlcy4gaSBkb250IHJlbWVtYmVyIGlmIHRoZSBRIGFuZCBKIHdlcmUgYm90aCBzcGFkZXMsIGJ1dCBpIHRoaW5rIG9ubHkgb25lIHdhcy4gU28gSXZleSBjYW4gcG9zc2libHkgaGF2ZSBhIGhhbmQgbGlrZSBBczlzLCBUczlzLCBKczlzLCA5czdzIGJ1dCB0aGF0IG1pZ2h0IGJlIHRvbyBsb29zZS4KS2VlcCB5b3VyIGNlbGwgcGhvbmUgb24gYXQgdGhlIHRhYmxlLgpUaGV5IHdlcmUgYWxsIHRoZXJlIHRvIGhhdmUgYSBnb29kIHRpbWUgdGhvdWdoLCBzbyBpdCB3YXMgYSB2ZXJ5IGZyaWVuZGx5IHNpdHVhdGlvbiAgZXZlbiB3aXRoIG1lIGhhbGYgc2F1Y2VkIGFuZCBuZWVkbGluZyB0aGUgaG9ycmlibGUgcGxheWVyIHRoZSB3aG9sZSB0aW1lIGFzIEkgd2FzIHJlcGVhdGVkbHkgdGFraW5nIHBvdHMgb2ZmIGhpbSAgc2F5aW5nIHNoaXQgbGlrZSwgImFyZSB5b3Ugc3VyZSB5b3UncmUgZ29ubmEgaGF2ZSBlbm91Z2ggbW9uZXkgdG8gZ2V0IGJhY2sgaG9tZT8iSW4gYmV0d2VlbiB0aGUgbmVlZGxpbmcsIEkgaGFkIGJlZW4gZGlzY3Vzc2luZyB3aXRoIG15IGZyaWVuZHMgdGhlIGxpa2VseSBleHBlbnNpdmUgd2VkZGluZyBwbGFucyBteSBzb29uIHRvIGJlIHdpZmUgd2FzIGNvbWluZyB1cCB3aXRoLlNvLCBmaW5hbGx5LCB0aGUgU2NhbmRpbmF2aWFucyBkZWNpZGUgdG8gdGFrZSBvZmYuIAo5OVJUMTAgICAyIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KQW1lcmljYW4gc29sZGllcnMgb24gdGhlaXIgd2F5IHRvIENhbmFkYSBiZWNhdXNlIHRoZXkgd2VyZSBub3QgZ29pbmcgYmFjayB0byBJcmFxIGFuZCB0aGV5IHdlcmUgbm90IGdvaW5nIHRvIHByaXNvbi4gVGhleSB3ZXJlIGFuZ3J5IGFib3V0IHdoYXQgdGhleSBzYXcgYXMgYW4gdW5qdXN0IHdhciBpbiBJcmFxLCBvbmUgdGhhdCB0dXJuZWQgb3V0IHRvIGJlIGJhc2VkIG9uICJtaXNpbmZvcm1hdGlvbiIgKHRoYXQgaXMsIExJRVMpLCB0aGV5IGFsbCBiZWVuIHRoZXJlIGF0IGxlYXN0IG9uY2UsIHNvbWUgb2YgdGhlbSB0d2ljZSwgYW5kIHRoZXkgaGFkIHNlZW4gd2hhdCB0aGV5IHRob3VnaHQgd2FzIGluY3JlZGlibHkgcmFjaXN0IGFuZCBldmVuIHJlbGlnaW91c2x5IG1vdGl2YXRlZCB2aW9sZW5jZSBjb21taXR0ZWQgYWdhaW5zdCBJcmFxaSBjaXZpbGlhbnMgYnkgQW1lcmljYW4gc29sZGllcnMuLiAKU29tZSBvZiB0aGF0IGVxdWlwbWVudCB3b3VsZCBoYXZlIG1hZGUgUnViZSBHb2xkYmVyZyBwcm91ZC4uIApNeSByZWFsaXN0aWMgZ29hbCBpcyB0byBoYXZlIGF0IGxlYXN0IDUwJSBmdW5kZWQgdGhpcyB3YXkuIApUbyB0aG9zZSB3aXRoIG5vIGFwcGV0aXRlIGZvciBhIGxlbmd0aHkgZGlzY291cnNlLCBhbmQgd2l0aCBsaW1pdGVkIGF0dGVudGlvbiBzcGFuLCBJIHN1bW1hcmlzZSBteSBjb25jbHVzaW9ucyBpbiB0aGF0IGNvbHVtbiBpbiB0aGUgZm9sbG93aW5nIGxpbmVzOgpUaGVzZSBnYW1lcyBhcmUgVGV4YXMgSG9sZCAnZW0sIE9tYWhhLCBPbWFoYSBIaS9MbywgU2V2ZW4gQ2FyZCBTdHVkLCBTZXZlbiBDYXJkIFN0dWQgSGkvTG8sIGFuZCA1IENhcmQgRHJhdy4gQW55IHBsYXllciBjb3VsZCB1c2UgZnJvbSB0aGVzZSBkaWZmZXJlbnQgdHlwZXMgb2YgZ2FtZXMgZnJvbSBmcmVlIG9ubGluZSBwb2tlci4gVGhlc2UgZGlmZmVyZW50IG9wdGlvbnMgZm9yIGdhbWVzIG1ha2UgdGhlIGZyZWUgb25saW5lIHBva2VyIHBhY2thZ2UgZXZlbiBtb3JlIGF0dHJhY3RpdmUgYW5kIHRlbXB0aW5nIGZvciBwZW9wbGUuLiAKQmVmb3JlIHlvdSBqdWljZSB0aGUgZnJ1aXQsIGVpdGhlciB1c2UgYSB2ZWdldGFibGUgcGVlbGVyIHRvIHJlbW92ZSBzdHJpcHMgb2YgdGhlIHplc3QgKHRoZSBicmlnaHRseSBjb2xvcmVkIG91dGVyIHBhcnQgb2YgdGhlIHBlZWwpIG9yIGdyYXRlIHRoZSB6ZXN0LiAKSSBhbHNvIGRvbiBnZXQgd2hhdCB5b3UgbWVhbiBieSBvZiB5b3VyIGNvb2xkb3ducyAgdGhlIGZvciB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aGVtIGlzIGp1c3QgK2RhbWFnZSBpbiBvbmUgZm9ybSBvciBhbm90aGVyLiBUaGVyZSBpcyBubyB1bml2ZXJzZSBpbiB3aGljaCBrZWVwaW5nIHRoZW0gb24gQ0QgYXMgbXVjaCBhcyBwb3NzaWJsZSBpc24gb3B0aW1hbC4gCkdldCBpdCBvbiBpVHVuZXMuIApCcm9va2x5biBCcmVlemUsIE5ld2JheSBQcm9wIGFuZCBMZSBEdWMgY291bGQgZ28gd2VsbCBhdCBiaWdnZXIgcHJpY2VzLgpSZW1vdmUgdGhlIGJyb3duIGNydXN0ClRoZXJlIGEgcmVhc29uIHdlIGFsbCBhZ3JlZSB0aGF0IGVkdWNhdGlvbiBpcyBleHRyZW1lbHkgaW1wb3J0YW50LCBhbmQgeW91IGNhbiBmb3JnZXQgdGhhdCBldmVyeSBnZW5lcmF0aW9uIGlzIGJvcm4gd2l0aCAwIGtub3dsZWRnZSBhYm91dCBhbnl0aGluZywgYW5kIHdlIGhhdmUgdG8gY29udGludWFsbHkgcmUgdGVhY2ggYWxsIG9mIHRoaXMgc3R1ZmYgdG8gcGVvcGxlIG9yIGl0IGJlIGVmZmVjdGl2ZWx5IGdvbmUgdW50aWwgc29tZW9uZSB3b3JrcyB0aGVpciB3YXkgYmFjayB1cCB0byBpdCBhdXRvbm9tb3VzbHkuLiAKVG93YXJkIHRoYXQgZW5kIG9mIHRoaXMgY2xpcCB5b3UgaGVhciBtaWNyb3Bob25lcyBwaWNrIHVwIE1pbGVzIHRlbGxpbmcgQ3lubiBzb21ldGhpbmcgYWJvdXQgdGhlIGJyYWNlbGV0IHdpbm5lciBzbG93IHJvbGxpbmcgb24gdGhhdCBsYXN0IGhhbmQsIGJhc2ljYWxseSB0aGUgcG9rZXIgZXF1aXZhbGVudCBvZiBhIGJhc2ViYWxsIGJhdCBmbGlwLgpBcnRpY2xlcyBieSBBZnNoaW4gRXJ0YW5pbiBSZXN1bHRzIDEKSSB0aGluayBpdCdzIGdvaW5nIHRvIGJlIGEgaGVsbCBvZiBhIHNlcmllcy4uIApNaWRkbGUgY2xhc3Mgc3RhdHVzIGlzIG5vIGxvbmdlciBhIGd1YXJhbnRlZSBvZiBhIGdvb2QgZnV0dXJlIGluIGJlZCBvciBpbiBidXNpbmVzcy4gClRoZXNlIGRheXMgbXkgcGFyZW50cyBsaXZlIGluIGEgaG91c2UgaW4gYW4gSE9BLCByaWdodCBhbG9uZ3NpZGUgYSBnb2xmIGNvdXJzZSwgYW5kIHRoZXkgZGVsaWdodGVkIHRoYXQgdGhleSBjYW4ganVzdCBwYXkgYSBtb250aGx5IGZlZSBhbmQgbm90IGhhdmUgdG8gd29ycnkgYWJvdXQgbGFuZHNjYXBpbmcgb3IgYW55IG9mIHRoYXQgc29ydCBvZiBtYWludGVuYW5jZSBhbmQgc3RpbGwgZ2V0IHRvIGxvb2sgYXQgbmljZSBwbGFudHMgYWxsIHRoZSB0aW1lLiBJdCB3b3JrcyBvdXQgcHJldHR5IHdlbGwgZm9yIHRoZW0uLiAKSnVzdGljZSBTYXZhZ2UgY29uZmlybWVkIHRoYXQgd2hlbiBwcm9wZXJ0eSBpcyBvd25lZCBpbiBqb2ludCB0ZW5hbmN5LCBlYWNoIG93bmVyIGhvbGRzIGEgcmlnaHQgb2Ygc3Vydml2b3JzaGlwLiBJbiBvdGhlciB3b3JkcywgaWYgb25lIG93bmVyIGRpZXMsIHRoZSBzdXJ2aXZpbmcgb3duZXIgYXV0b21hdGljYWxseSBvYnRhaW5zIHRoZSBmdWxsIGludGVyZXN0IGluIHRoZSBwcm9wZXJ0eS4uIApDcmFpZ3NsaXN0IGtpbGxlciBnZXRzIGxpZmUgaW4gcHJpc29uClRoZSBIb2xib3VybmUgaXMgZmFiIHRob3VnaC4uIAoiV2UndmUgZ290IHRvIHRoZSBwb2ludCB3aGVyZSB3ZSd2ZSBjdXQgYmFjayBhbGwgd2UgY2FuLiIgVGhlIGNsdWIgaG9wZXMgdG8gc2VsbCB0aGUgbGFuZCBvbiBhICJzYWxlIGFuZCBsZWFzZWJhY2siIGJhc2lzIHNvIGl0IGNhbiBjb250aW51ZSB1c2luZyB0aGUgY2FyIHBhcmsgc3BhY2UuLiAKUGF0aWVudHMgaW4gdGhlIE5ldGhlcmxhbmRzIGFuZCBCZWxnaXVtIHdlcmUgZW5yb2xsZWQgdmlhIGFubm91bmNlbWVudHMgaW4gbWVkaWNhbCBoZWFsdGggY2VudHJlcyBhbmQgdGhyb3VnaCBtZWRpYSBhbm5vdW5jZW1lbnRzLiBSYW5kb21pc2F0aW9uIGluIGJvdGggcGhhc2VzIHdhcyBpbmRpdmlkdWFsbHkgZG9uZSBieSByYW5kb20gc2FtcGxpbmcuIEluIHRoZSBvcGVuIGxhYmVsIHBoYXNlIChmaXJzdCBwaGFzZSksIGNoaWxkcmVuIGFnZWQgNCB0byA4IHllYXJzIHdobyB3ZXJlIGRpYWdub3NlZCB3aXRoIEFESEQgd2VyZSByYW5kb21seSBhc3NpZ25lZCB0byA1IHdlZWtzIG9mIGEgcmVzdHJpY3RlZCBlbGltaW5hdGlvbiBkaWV0IChkaWV0IGdyb3VwKSBvciB0byBpbnN0cnVjdGlvbnMgZm9yIGEgaGVhbHRoeSBkaWV0IChjb250cm9sIGdyb3VwKS4gClBob3RvIEVmZmVjdHMgU3R1ZGlvIDIuMyBzZXJpYWwga2V5IGdlbiAuIE1vam9zb2Z0IFBob3RvIEZyYW1lIFN0dWRpbyAyLjAga2V5IGdlbmVyYXRvci4gUGhvdG8gRnJhbWUgU3R1ZGlvIDEgU2VyaWFsIE51bWJlciBLZXlnZW4gZm9yIEFsbCBWZXJzaW9ucy4gRmluZCBTZXJpYWwgTnVtYmVyIG5vdGljZTogLiBwaG90byBmcmFtZSAyLjVqIDEyMTYgVGltZXMuIFBob3RvIEZyYW1lIE1ha2VyIDIuMyAxNTk2IFRpbWVzLiBGUkVFIENSQUNLIFNPRlRXQVJFUzogTW9qb3NvZnQgUGhvdG8gRnJhbWUgU3R1ZGlvIDIuODUgU2VyaWFsIEtleUNyYWNrIEZyZWUgRG93bmxvYWQuIApBZnRlciB0aGUgd2FyIHRoZSBjb25kaXRpb25zIGNoYW5nZWQgYWdhaW4uIFRoZSB3ZXN0ZXJuIEdlcm1hbiBzb2NpZXR5IGRpZG4gd2FudCB0byBiZSByZW1pbmRlZCBvZiBvciBjb25uZWN0ZWQgdG8gYW55dGhpbmcgcmVsYXRlZCB0byB0aGUgTmF6aXMuIApTcG9ydHMgVmlldyBTZWN0aW9uID5QcmVwcyBPdXRkb29yc0hlIGNvdWxkIGJlIGFzIGhhcmQgYXMgdGhlIGFudmlsIHlvdSBwb3VuZGVkIGFuZCBmZXJyaWVkIGEgaG9yc2VzaG9lIG9uLCBhbmQgYXMgc29mdCBhcyB0aGUgQXBwYWxvb3NhIG1hbmUgdGhhdCB3b3VsZCByZWplY3QgdGhlIHZlcnkgc2hvZSBoZSBtYWRlLiBXaHk/IEJlY2F1c2UgSW5kaWFucyBkb24gc2hvZSB0aGVpciBob3JzZXMsIGJybyEKSSB0b2xkIHRoZW0gd2hhdCB3YXMgZ29pbmcgb24uIEkgd2FzIGNvbXBsZXRlbHkgYmx1bnQgYW5kIHNhaWQgeW91IGFyZSBoZXJlIGZvciBteSBjaGlsZHJlbiBpbiBjYXNlIG15IGFpcndheSBnZXRzIGJsb2NrZWQgYW5kIGlmIGl0IGRvZXMsIHlvdSBnZXQgcHJhY3RpY2Ugb24gaW50dWJhdGluZyBpbiB0aGUgZmllbGQuIFRoZXkgd2VyZSBwaXNzZWQuLiAKQWZ0ZXIgdGhlIGNhcmRzIGFyZSBleGNoYW5nZWQsIGRldGVybWluZSB0aGUgd2lubmVyIG9mIHRoZSBnYW1lLiBXaGljaCBmaXZlIGNhcmQgZHJhdyBwb2tlciBoYW5kIGJlYXRzIHdoaWNoPyBSZXZpZXcgdGhlIGxpc3QgYmVsb3csIGZyb20gYmVzdCBoYW5kIHRvIHdvcnN0OlRoZSByb3lhbCBmbHVzaCBpcyB0aGUgYmVzdC4gSXQgY29udGFpbnMgYW4gYWNlLCBraW5nLCBxdWVlbiwgamFjayBhbmQgMTAuIApPbiBlYXJ0aCwgdmVyeSBzbG93IG1vdmluZyBvYmplY3RzIGJlY29tZSBzdGF0aW9uYXJ5IHZlcnkgcXVpY2tseSBiZWNhdXNlIG9mIGZyaWN0aW9uIHdpdGggdGhlIGdyb3VuZC8gYWlyIHJlc2lzdGFuY2UuIApDIHVuIGRpY3RvbiBxdWkgbmUgc2UgdnJpZmllIGF1Y3VuZW1lbnQgYXUgc3VqZXQgZHUgY2huZSBxdW9pIHF1IGVuIHBlbnNlOiBxdWUgc2EgaGF1dGUgc3RhdHVyZSBuZSBzb2l0IHBhcyBsIHF1aSBvYnNjdXJjaXNzZSBsZSBqdWdlbWVudCBldCBsYSBzYWluZSBvYnNlcnZhdGlvbiwgbmkgbGUgbGlldSBvIGFsbGVyIGFicml0ZXIgc29uIGlnbm9yYW5jZS4gClRoZSBsZWFndWUncyBvd25lcnMgd2lsbCBhbHNvIHRpZSB1cCB3aXRoIGFuIG92ZXIgdGhlIHRvcCBzZXJ2aWNlIHByb3ZpZGVyIHdoaWNoIHdpbGwgc3RyZWFtIHRoZSB0b3VybmFtZW50IGxpdmUuIEJ1dCB3aG8gd2lsbCB3YXRjaCBpdCBvbiBUViBvciBvbiB0aGUgc3RyZWFtaW5nIHBsYXRmb3Jtcz8gIlBlb3BsZSB3aG8gYXJlIGp1c3Qgc3RhcnRpbmcgdG8gcGxheSBwb2tlcjsgdGhleSB3b24ndCBzaXQgZm9yIDMwIGhvdXJzIHRvIHdhdGNoIGVhY2ggYW5kIGV2ZXJ5IGhhbmQgdGhhdCdzIGRlYWx0LiAKV2hldGhlciB5b3UgYXJlIGhhcmRjb3JlLCBjYXN1YWwsIHVsdHJhIGNhc3VhbC4gCllvdSBjbGVhcmx5IGFyZW4gZm9jdXNpbmcgb24gdGhhdCwgb3RoZXJ3aXNlIHlvdSB3b3VsZG4gYmUgc28gZHVtYmZvdW5kZWQgYW5kIGp1c3QgImJhY2sgcGVkZGxpbmciLiAKVGhpcyBoYXMgYmVlbiBnb2luZyBvbiBmb3IgbW9udGhzIHNvIEkgdGFsa2VkIHRvIGV2ZXJ5b25lIGF0IHNvbWUgcG9pbnQgYWJvdXQgdGhlIGhhdHMuIApBbmQgbGlrZSBJIHNhaWQgdGhpcyByZXNwb25zZSBpcyBmb3IgdGhvc2UgbW9yZSBzeW1wYXRoZXRpYyB0byB0aGUgR2F1ZGl5YSBjYXVzZSByYXRoZXIgdGhhbiBhIGRpcmVjdCBzaGFzdHJpYyByZXNwb25zZS4gCldlIGFsc28ga25vdyBob3cgYXVyYSBhcmUgc3VwcG9zZWQgdG8gd29yay4gSWYgYXQgbGVhc3Qgb25lIG1vZGVsIGluIGEgdW5pdCBpcyB0b3VjaGluZyBhbiBhdXJhLCB0aGUgZW50aXJlIHVuaXQgZ2V0cyBpdC4gVGhhdCBpcyB0aGUgc2FtZSBmb3IgcHJldHR5IG11Y2ggZXZlcnkgYXVyYSBhYmlsaXR5IGluIHRoZSBnYW1lLCBhbmQgaXQgc2F5cyBzbyBpbiB0aGUgQlJCIGl0c2VsZi4KVGhhdCdzIGl0ISBBZnRlciB0d28gbW9udGhzIG9mIG5vbiBzdG9wIGFjdGlvbiwgdGhlIFJpbyBBbGwgU3VpdGVzIEhvdGVsIGFuZCBDYXNpbm8gaXMgcXVpZXQgdGhpcyBtb3JuaW5nIGFzIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaXMgb2ZmaWNpYWxseSBkb25lIGZvciB0aGUgc3VtbWVyLiBJdCB0b29rIGVpZ2h0IGRheXMgdG8gZmluZCB3aGljaCBuaW5lIHBsYXllcnMgd2lsbCBjb21lIGJhY2sgdG8gTGFzIFZlZ2FzIGluIE5vdmVtYmVyIGluIG9yZGVyIHRvIGRldGVybWluZSBqdXN0IHdobyB0aGUgbmV4dCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgTWFpbiBFdmVudCBDaGFtcGlvbiB3aWxsIGJlLi4gCkhlIGNhbiB0ZWxsIHlvdSB3aGF0IHRoZSBwb3N0cyBzYWlkLiBUaGF0IGxpdGVyYWxseSB3aGF0IHNoYWRvd2Jhbm5pbmcgZG9lcy4KRm9yIHRoZXNlIHJlYXNvbnMsIGEgbG90IG9mIHBlb3BsZSBncmV3IHVwIGJlbGlldmluZyBwb2tlciBiZWdhbiBpbiBBbWVyaWNhIGluIHRoZSAxOTAwcywgYW5kIHRoZSBvbmx5IHBva2VyIGdhbWUgZXZlciBwbGF5ZWQgd2FzIDUgQ2FyZCBEcmF3LiBBY3R1YWxseSwgYm90aCBhc3N1bXB0aW9ucyBhcmUgZmFsc2UuLiAKR2VtZWluc2FtIGZlaWVybiB1bmQgc3BlbmRlbiAgIHVudGVyIGRpZXNlbSBNb3R0byB3dXJkZW4gYXVmIGRlciBFcmZmbnVuZ3NmZWllciBUb21ib2xhbG9zZSB6dSBqZXdlaWxzIGZuZiBFdXJvIGRhcyBTdGNrIHZlcmthdWZ0IHVuZCBkYXJ1bSBnZWJldGVuLCBhbiBTdGVsbGUgdm9uIEdlc2NoZW5rZW4gZnIgZGllIFNjaHV0enN0YXRpb24gV2F0dGVubWVlciB6dSBzcGVuZGVuLiBEZXIgZWluZ2V0cmFnZW5lIFZlcmVpbiB2ZXJmb2xndCBkYXMgWmllbCwgVmVyc3RuZG5pcyB1bmQgRmFzemluYXRpb24gZnIgZGFzICJrb3N5c3RlbSBXYXR0ZW5tZWVyIiB1bmQgZGllIE5vcmRzZWUgenUgd2Vja2VuLCB1bSBzb21pdCBkZW4gU2NodXR6IHVuZCBkaWUgU2NodXR6YmVyZWl0c2NoYWZ0IGRpZXNlciBMZWJlbnNydW1lIHp1IGVyaGhlbi4gCkdhbWJsaW5nIGV4cGVydHMgZXN0aW1hdGUgdGhhdCAxMCB0byAxNSBwZXJjZW50IG9mIHlvdXRocyB3aG8gZ2FtYmxlIGJlY29tZSBnYW0gIG1lYW5pbmcgdGhleSBzdWZmZXIgc29tZSBsb3NzIG9mIGNvbnRyb2wgb3ZlciB0aGVpciBnYW1ibGluZyBiZWhhdmlvci4gQW5kIGFjY29yZGluZyB0byB0aGUgQ291bmNpbCBvbiBDb21wdWxzaXZlIEdhbWJsaW5nIG9mIE5ldyBvZiB0aG9zZSB3aG8gZXhwZSAgcmllbmNlIG1vcmUgc2V2ZXJlIHByb2JsZW1zIGFuZCBocGNvbWUgcGF0aG9sb2dpY2FsIG1vc3QgYXJlIHBlb3BsZSB3aG8gc3RhcnQgZ2FtICBibGluZyBiZWZvcmUgdGhleSByZWFjaCAxNC4gCkljaCB3cmRlIGRpciBhdWNoIHJhdGVuLCBkaWNoIGVyc3RtYWwgYXVmIGRlbiBTdGFuZGFyZCB6dSBrb256ZW50cmllcmVuLCBkYW1pdCBzb2xsdGVzdCBkdSBkaWNoIGJlcmFsbCB2ZXJzdG5kaWdlbiBrbm5lbi4gCiJUaGUgaGF0ZSB0aGF0IHdlIGdldCBmcm9tIHBlb3BsZSBmb3Igbm8gcmVhc29uLCBqdXN0IHRvIGhhdmUgYSBkaW5uZXIgdGhlcmUuIEl0IHNob3VsZG4ndCB0dXJuIG91dCB0byBiZSBsaWtlIHRoYXQuIgpBYm91dCBhIHdlZWsgbGF0ZXIgbXkgc29jayB0dXJuZWQgdXAgaW4gb3VyIGNvbGxlZ2Ugc3R1ZHkgcm9vbSwgYW5kIEkgd2FzIGxpa2Ugc29ja2traywgaSBiZWVuIGxvb2tpbmcgZm9yIHRoYXQgZXZlcnl3aGVyZSBhbmQgd2Fsa2VkIGFjcm9zcyB0aGUgcm9vbS4gSSB3YXMgZm91cnRlZW4gd2hlbiBJIGZpcnN0IHBsYXllZCBhbmQgYSB2ZXJ5IGdvb2QgcG9rZXIgcGxheWVyLiBJdCB3YXMgKGluZXZpdGFibHkgYXQgdGhhdCBhZ2UpIGd1eXMgdmVyc3VzIGdpcmxzIGFuZCB0aGFua3MgdG8gbWUgd2UgbWFuYWdlZCBub3QgdG8gcHVsbCBvZmYgYSBzaW5nbGUgYXJ0aWNsZSAgIHVudGlsIHRoZSBvbGRlc3QgZ2lybCB0aGVyZSAoYSBzaXh0ZWVuIHllYXIgb2xkKSByZW1vdmVkIGhlciBicmEuIApUaGV5IHBvb3AgaW4gdGhlIHN0cmVldHMsIGluc3RlYWQgb2YgcG9vcGluZyBpbiB0b2lsZXRzLCBhbmQgbWlsbGlvbnMgb2YgSGluZHVzIGJhdGhlIGluIHNvbWUgb2YgdGhlIG1vc3QgZGlzZ3VzdGluZyByaXZlcnMgaW4gdGhlIHdvcmxkLiAKT2YgY291cnNlIHRoYXQgZmFjaWFsbHkgc2Vuc2libGUgbm90aW9uIGlzIGFuYXRoZW1hIHRvIHRob3NlIHdobyBrbm93IGZ1bGwgd2VsbCB0aGF0IHRoZXkgY2Fubm90IGVuYWN0IHRoZWlyIHBvbGljeSBwcmVmZXJlbmNlcyB2aWEgZGVtb2NyYXRpYyBtZWFucy4uIApXaXRoIHRoZSBleGFjdCBzYW1lIG1ldGhvZCwgdGhlIGNhc2lubyBvbmxpbmUgZ2FtZSBpcyB1c3VhbGx5IGF2YWlsYWJsZSBvdmVyIHRoZSBpbnRlcm5ldCBhbmQgc28gbWVuIGFuZCB3b21lbiB1dGlsaXplIHRoZW0gdG8gYXR0YWluIHJldmVudWUgdGhvdWdoIHBhcnRpY2lwYXRpbmcgaW4uIApBbmRlcnNvbiBQcm9mZXNzb3Igb2YgSGlzcGFuaWMgU3R1ZGllcy4gCkxpc3RlbiwgSSBqdXN0IGhhZCB0byB3cml0ZSBhYm91dCB5b3VyIE1ldGFsIDEyIFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2suIE92ZXIgdGhlIHN1bW1lciwgbXkgY2h1cmNoIHdhcyBsb29raW5nIGZvciBhIHdheSB0byBib29zdCB0aGVpciBmdW5kcmFpc2luZyBhYmlsaXRpZXMgYW5kIHdlIHZvdGVkIHRvIGhvbGQgYSBmZXN0aXZhbC4gVGhpcyBtZWFudCB0aGF0IHdlIHdlcmUgZ29pbmcgdG8gaGF2ZSB0byBzcGVuZCBtb25leSB0byBtYWtlIG1vbmV5LiAKQWZ0ZXIgYWxsIHRoZSBDb25zZXJ2YXRpdmVzIGhhdmUgbm93IGhhZCBlaWdodCB5ZWFycyBpbiBnb3Zlcm5tZW50IGFuZCB0aGV5IG1hZGUgcGxlbnR5IG9mIHVucG9wdWxhciBkZWNpc2lvbnMuIFRoZXkgc3R1bWJsZWQgdGhyb3VnaCBjb250cm92ZXJzaWVzLiAKSnVtcGluZyBvbiB0aGUgYWx0ZXJuYXRpdmUgdHJhbnNwb3J0YXRpb24gcXVlc3Rpb24uIE9uZSBvZiB0aGUgcmVhc29ucyB3ZSBnb3QgYSA0IHBhY2sgdG8gTG92ZWxhbmQgdGhpcyB5ZWFyIHdhcyBiZWNhdXNlIHRoZXkgb2ZmZXIgYSBidXMgZnJvbSBVbmlvbiBTdGF0aW9uLiBDb21lIHRvIGZpbmQgb3V0IGl0IHdvdWxkIGJlICQ5MCBmb3IgdGhlIHR3byBvZiB1cywgd2hpY2ggaXMgc28gZXhwZW5zaXZlIEkgcmF0aGVyIGRyaXZlLiBUaGUgdHJhaW4gdG8gV2ludGVycGFyayB3YXMgYWxzbyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSwgJDEyMCB0b3RhbCBhbmQgdGhhdCB0aGUgc2FsZSBwcmljZS4gVGhlIG9ubHkgb3RoZXIgYnVzZXMgSSBjb3VsZCBmaW5kIGxlYXZlIGZyb20gdGhlIGFpcnBvcnQuIElzIHRoZXJlIHJlYWxseSBubyBhZmZvcmRhYmxlIHdheSB0byB0YWtlIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiBmcm9tIGRvd250b3duPwpQaWNrZXQgRmVuY2UKVGhleSBhcmUgQWZyaWthbmVycywgYW5kIGl0IGFib3V0IHRpbWUgd2Ugc3RhcnRlZCBjYWxsaW5nIHRoZW0gdGhhdC4uIApHYXkgbWFycmlhZ2UgYmVjYW1lIHBvcHVsYXIgYmVjYXVzZSBnYXkgcGVvcGxlIHN0YXJ0ZWQgY29taW5nIG91dCBlbiBtYXNzZSBhbmQgdGhlIGF2ZXJhZ2UgQW1lcmljYW4gbm8gbG9uZ2VyIHNhdyB0aGVtIGFzIGFsaWVuLiAKMi4gRmluZCBhIHN1aXRhYmxlIHNpdGUgZm9yIHNlZWQgZ2VybWluYXRpb24uIFRoZSBiZXN0IGxvY2F0aW9uIGlzIGNsb3NlIHRvIGFuIGVhc3Qgb3Igbm9ydGggZmFjaW5nIHdpbmRvdyB3aGVyZSB5b3UgY2FuIG9wZW4gdGhlIHdpbmRvdyB0byBjb29sIHRoaW5ncyBkb3duIGEgYml0LiAKUGxlZGdlIGFsbGVnaWFuY2UgdG8gdGhlIEZsYWcgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSwgYW5kIHRvIHRoZSBSZXB1YmxpYyBmb3Igd2hpY2ggaXQgc3RhbmRzLCBvbmUgbmF0aW9uLCB1bmRlciBHb2QsIGluZGl2aXNpYmxlLCB3aXRoIGxpYmVydHkgYW5kIGp1c3RpY2UgZm9yIGFsbC4gClVzZXMgb2YgSW5mdXNlZCBPaWxzT3RoZXIgaW5mdXNlZCBvaWxzIGNhbiBiZSBtYWRlIGZyb20gcGxhbnRzIGFuZCBsZWF2ZXMsIGFuZCB0aGV5IGFyZSBhbGwgbWFkZSB0aGUgc2FtZSB3YXksIGJ1dCBrZWVwIGluIG1pbmQgdGhhdCB0aGVzZSB3aWxsIHNtZWxsIGRpZmZlcmVudGx5IHRoYW4gdGhlIG9uZXMgeW91IGNhbiBidXkgaW4gc2hvcHMsIHNpbmNlIHRoZXkncmUgbWFkZSBkaWZmZXJlbnRseSAgIGFuZCBzb21lIHdvdWxkIHNheSB0aGV5IHNtZWxsIGJldHRlci4gCkhlIHRhbGtzIGxpa2UgaGlzIDN4IGJldCB3aXRoIEFBIGFuZCBLSyB3YXMgdGhpcyBnZW5pdXMgcGxheSBvciBoaXMgY2FsbCB3aXRoIEFRaGggb24gYSBLSjloaHggYm9hcmQgd2FzIGFtYXppbmcuIApKdXN0IHNlZSBob3cgdGhleSBhZmZlY3Qgb3VyIGV2ZXJ5ZGF5IGxpdmVzOgpUaGUgdG91cm5hbWVudCwgd2l0aCBhIGJ1eSBpbiBvZiAkMjUgKHdpdGggbm8gcmUgYnV5cyksIHdpbGwgYmUgcGxheWVkIGluc2lkZSB0aGUgWXVoYXZpYXRhbSBSb29tIG9mIHRoZSBjYXNpbm8uIAooQWNjb3JkaW5nIHRvIHRoZSBPeGZvcmQgRW5nbGlzaCBEaWN0aW9uYXJ5LCB0aGUgZmlyc3QgdXNlIG9mIHRoZSB3b3JkIGZvciBhIGJ1aWxkaW5nIHdhcyBwcmVjZWRlZCBieSBpdHMgdXNhZ2UgZm9yIGEgdGFsbCBob3JzZSAoMTc4OCksIGEgdGFsbCBib25uZXQgKDE4MDApLCBhIHNoaXAgc2FpbCAoMTgwMSksIGFuIGV4YWdnZXJhdGVkIHN0b3J5ICgxODQwKSwgYW5kIGEgaGlnaCBoaXQgYmFsbCAoMTg0MiksIGJlZm9yZSBpdCBjYW1lIHRvIHJlc3Qgb24gYSBidWlsZGluZyBpbiAxODg0IGFuZCAxODg5LikgVGhlIHNlY3VsYXIgYnVpbGRpbmdzIHdlcmUgbm90IHRhbGxlciB0aGFuIHRoZSBub24gc2VjdWxhciBvbmVzIChsaWtlIHRoZSBSb3VlbiBhbmQgQ29sb2duZSBjYXRoZWRyYWxzKSB1bnRpbCB0aGUgZWFybHkgbmluZXRlZW4gb3VnaHRzLiBTaGUgd3JvdGUgYSBhIGxvdmVseSBhbmQgbXlzdGVyaW91cyBib29rIDE5MDEgKGEgc2Vjb25kIGVkaXRpb24gYXBwZWFyaW5nIHR3byB5ZWFycyBsYXRlcikgY2FsbGVkIFByb2JsZW1zIGZvciB0aGUgTGF5bWFuLCBpbiB3aGljaCBzaGUgc291Z2h0IG5vdCBzbyBtdWNoIHRvIGFuYWx5emUgdGhlIGNvbXBvbmVudHMgb2YgY29sb3IgaXRzZWxmLCBidXQgcmF0aGVyIHRvIHF1YW50aWZ5IHRoZSBvdmVyYWxsIGludGVycHJldGF0aXZlIGVmZmVjdCBvZiBjb2xvciBvbiB0aGUgaW1hZ2luYXRpb24gSSB0aGluay4gSSBrbm93IHRoaXMgc291bmRzIGJlZ2dpbmcgYW5kIHZhZ3VlLCBidXQgSSByZWFsbHkgaGF2ZW4ndCBiZWVuIGFibGUgdG8gbWFrZSBtdWNoIGhlYWR3YXkgaW4gdGhlIHdvcmssIHRob3VnaCBpdCBzZWVtcyB0byBkaXNwbGF5IHRoZSBvY2N1cnJlbmNlIGFuZCBmcmVxdWVuY3kgb2YgZ2VuZXJhbCBjb2xvcnMgaW4gMTAwIGJsb2NrIGRpc3RyaWJ1dGlvbnMuIApBIHRvb3RoYWNoZSBjYXVzZXMgaW5mbGFtbWF0b3J5IHBhaW4sIHNvIGFueSBhbnRpIGluZmxhbW1hdG9yeSBtZWRpY2luZSBzaG91bGQgYmUgYWJsZSB0byByZWR1Y2UgeW91ciBzdWZmZXJpbmcuIApOaWNodCBudXIgZGllIGV4dHJlbWUgSGl0emUgaXN0IHZvcmVyc3QgbWFsIHZvcmJlaSwgbGVpZGVyIGF1Y2ggbWVpbmUgR2xja3NzdHJobmUgIFdpZSBpY2ggZXMgamEgc2Nob24gaW0gdm9ybGV0enRlbiBQb3N0IGFuZ2VrbmRpZ3QgaGFiZSwgaXN0IGVzIGpldHp0IGF1Y2ggZWluZ2V0cm9mZmVuLiBKZWRlciBTdXBlcmxhdWYgaGF0IGxlaWRlciBhdWNoIGVpbm1hbCBlaW4gRW5kZSEgU2VpdCB6d2VpIFRhZ2VuIGthbm4gaWNoIGtlaW5lIEhhbmQgbWVociBnZXdpbm5lbiwgbWVpbmUgRHJhd3Mga29tbWVuIG5pY2h0IGFuLCBtZWluZSBQb2NrZXQgUGFpcnMgd2VyZGVuIGFsbGVzYW10IGdlc2NobGFnZW4gdW5kIGRpZSBHZWduZXIgdHJlZmZlbiBuYWNoIGJlbGllYmVuLi4gCkp1c3QgdHJ5IG91dCBhIGZldyBkaWZmZXJlbnQgY3JhZnRzLCBzdWNoIGFzIHBvdHRlcnkgb3IgYmVhZCBqZXdlbHJ5LCB1bnRpbCB5b3UgZmluZCBvbmUgdGhhdCBlbmpveWFibHkgcGFzc2VzIHRoZSB0aW1lLi4gCldhc2hpbmd0b24gaW4ganVzdCB0aGUgbmV4dCB5ZWFyIHN1ZmZlcmVkIGRlYmlsaXRhdGluZyBpbGxuZXNzZXMgYnJvdWdodCBvbiBieSBkZWNvbXByZXNzaW9uIHNpY2tuZXNzIHRoYXQgY2FtZSBvbiBhcyBhIHJlc3VsdCBvZiBoaXMgZmFtb3VzIGxlYWRlcnNoaXAgYW5kIHBhcnRpY2lwYXRpb24gaW4gZmlnaHRpbmcgYW4gdW5kZXJ3YXRlciBmaXJlIGluIHRoZSBCcm9va2x5biBjYWlzc29uIG9mIHRoZSBncmVhdCBicmlkZ2UuIApCdXQgeWVhaCwgc28gd2Ugd2VyZSB0YWxraW5nIGFib3V0IG1lZGljaW5lISBXaGljaCwgb2YgY291cnNlLCByZW1pbmRlZCBtZSBvZiBhIGZ1biBsaXR0bGUgYml0IGFib3V0IEdhbGVuLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGRvY3RvcnMgb2YgdGhlIGFuY2llbnQgUm9tYW4gd29ybGQuIEdhbGVuIHdhcyBhIGZhc2NpbmF0aW5nIGNoYXJhY3RlciwgYW5kIGhpcyB3cml0aW5nIGlzIGFic29sdXRlbHkgaW5jcmVkaWJsZSAgIGFuZCBJIG1lYW4gdGhhdCBpbiBldmVyeSB3YXkgdGhhdCBpbmNyZWRpYmxlIGNhbiBiZSB0YWtlbi4gSXQgcmVxdWlyZXMgcXVpdGUgYSBzdHJvbmcgc3RvbWFjaCwgdGhvdWdoLCBhbmQgaXQgZ29lcyB0byBzaG93IHRoZSByZWFkZXIgZXhhY3RseSBob3cgZmFyIG91ciBldGhpY3MgaGF2ZSBjb21lIGluIHRoZSBwYXN0IGNvdXBsZSB0aG91c2FuZCB5ZWFycy4gCllvdSBvd24gaGFsZiBvZiBldmVyeXRoaW5nIGFuZCBzbyBkbyBJLgpHcGF0IEJvb2tzIEZyZWUgRG93bmxvYWQgUGRmCkVoLCBhcHBhcmVudGx5IGhlIGZpbmlzaGVkIGhpcyBkZWdyZWUgYW5kIGdvdCBhIGpvYiBhdCBEZWxvaXR0ZSwgc28gaXQgbG9va3MgbGlrZSBoZSBnb3QgdGhlIHB1c2ggaGUgbmVlZGVkIHRvIGNoYW5nZSB1cCB0aGluZ3MuIFNvbWV0aW1lcyBraWRzLCBlc3BlY2lhbGx5IGhpZ2hlciBhY2hpZXZpbmcgb25lcyBmcm9tIHN0cmljdCBiYWNrZ3JvdW5kcywgbWVzcyB1cCBzb21ldGhpbmcgYW5kIGdldCBzdHVjayBpbiBhIGxvb3Agb2YgZmFpbHVyZSBhbmQgcmVncmV0ICAgdGhhdCB3aHkgc29tZXRoaW5nIGxpa2UgU21hcnQgS2lkIFN5bmRyb21lIGV4aXN0cy4gCkkgYWxzbyBub3RpY2VkIHRoYXQgSSBnZXQgbHVja2llciBpbiBkaXN0YW50IHNob3BzIGluIG5vdCBzbyBwb3B1bGF0ZWQgY2l0aWVzLiAKSGFqamkgU2FsbWFuIHRvbGQgaGVyIHRvIHNob3dlciwgcHV0IG9uIGEgZHJlc3MgdGhhdCBjYW1lIG9ubHkgdG8gaGVyIGtuZWUgICBhbiBpbW1vZGVzdCBjaGFuZ2UgZnJvbSBoZXIgbm9ybWFsIHdhcmRyb2JlICAgYW5kIHVzZSBoYWlyIHJlbW92YWwgY3JlYW0gYWxsIG92ZXIgaGVyIGJvZHkuCllvdSB3aWxsIGJlIGEgYmV0dGVyIG1vbSB0aGFuIHRoZSBvbmUgeW91IGhhZC4gQnV0IHRoYXQgZG9lc24gZ3VhcmFudGVlIHlvdXIgY2hpbGQgd29uIHB1c2ggeW91IHRvIHlvdXIgbGltaXRzIHdoZW4gdGhleSBoaXQgdGhlaXIgdGVlbnMuIFdoYXRldmVyIHlvdSBjaG9vc2UgdG8gZG8gd2l0aCB5b3VyIGNoaWxkIGlmIHRoZXkgZXZlciBodWZmIHBhaW50IG9yIGFidXNlIGFsY29ob2wgd2lsbCBjaGFsbGVuZ2UgeW91IGxpa2Ugbm90aGluZyBlbHNlIGluIGxpZmUuIApUaGUgUG9rZXIgUnVuIHdhcyBvcmlnaW5hbGx5IGFuIGV2ZW50IGJpa2VycyBwbGF5ZWQgb3V0IG9uIHRoZWlyIEhhcmxleSwgYnV0IG92ZXIgdGhlIHllYXJzIGl0IGhhcyBiZWVuIGJvcnJvd2VkIGJ5IEJvYXRlcnMsIFJ1bm5lcnMsIEJpY3ljbGlzdCwgQ2FyIGVudGh1c2lhc3QgYW5kIEknbSBzdXJlIGJ5IG90aGVycy4gClRoZXkgdm90ZWQgYWdhaW5zdCBvbmUgb2Ygb3VyIG1vdGlvbnMgYnJvdWdodCBmb3J3YXJkIGJ5IC4gTXVycmF5IFJhbmtpbiB0byBoZWFyIGZyb20gTXMuIFdpbHNvbiBSYXlib3VsZCBhZ2FpbiAuIFRoYXQgd2h5IEkgY2FsbGVkIGZvciBhIHB1YmxpYyBpbnF1aXJ5LiBJdCB3b3VsZCBoYXZlIGluZGVwZW5kZW5jZSwgaXQgd291bGQgaGF2ZSBhIGJyb2FkIG1hbmRhdGUgdG8gaW52ZXN0aWdhdGUgd2hhdCBoYXBwZW5lZCwgYW5kIGFwcG9pbnRpbmcgYSBqdWRnZSB3b3VsZCBnaXZlIHRoZSBwdWJsaWMgaW5xdWlyeSB0aGUgc3RyZW5ndGggYW5kIG1hbmRhdGUgb2YgaW5kZXBlbmRlbmNlLi4gCkhlIGJhcmVseSBtYXRjaCBmaXQsIGhhdmluZyBoYWQgb25seSBvbmUgbGF0ZSBzdWJzdGl0dXRpb24gYWdhaW5zdCBOQUMgc2luY2UgaGlzIHJldHVybiwgYW5kIGhlIGV2ZW4gc2xvd2VyIHRoYW4gTWF6cmFvdWkuc2NhcmZkb250c3RyYW5nbGVtZSAgNDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSWsgaGViIGhldCBkZWJhdCBuaWV0IGdlemllbiwgbWFhciBpcyBoZXQgbmlldCBlZW4gYmVldGplIG51dHRlbG9vcyBvbSBlZW4gZGViYXQgdGUgaG91ZGVuIG1ldCBkZSBsYW5kZWxpamtlIGxpanN0dHJla2tlcnMgdm9vcmFmZ2FhbmQgYWFuIGRlIFByb3ZpbmNpYWxlIFN0YXRlbnZlcmtpZXppbmdlbj8gTWlqIGxpamt0IGhldCBiaWp2b29yYmVlbGQgZWVuIGJldGVyIGlkZWUgb20gb3AgaWVkZXJlIGxva2FsZSBvbXJvZXAgZWVuIGFwYXJ0IGRlYmF0IHRlIGhlYmJlbiBtZXQgbGlqc3R0cmVra2VycyB2b29yIGRlIGRlc2JldHJlZmZlbmRlIHByb3ZpbmNpZS4gCk9uIGFuIGFsYnVtIHNjYWxlLCB0aGUgIk5hcmNvdGljIFN1aXRlIiBpcyBzdGlsbCBvbmUgb2YgbXkgZmF2b3VyaXRlIGV2ZXIgc2V0IG9mIHRyYWNrcyBmcm9tIGFueSBhbGJ1bSBldmVyLCBidXQgdGhlIHdob2xlIGFsYnVtIGlzIGp1c3QgZnVja2luZyBhbWF6aW5nLgpDb25jZXJucyBhbHNvIHdlcmUgbG9kZ2VkIGJ5IGNvbW11bml0eSBwb2xpY2luZyBncm91cHMsIEhlbmRlcnNvbiBvZmZpY2lhbHMgc2FpZCwgZXNwZWNpYWxseSByZWdhcmRpbmcgdGhlIHRpbnRlZCBnbGFzcyB0aGF0IG1ha2VzIGl0IHBvc3NpYmxlIGZvciB0aG9zZSBpbnNpZGUgdGhlIGJ1c2luZXNzZXMgdG8gc2VlIGlmIHBvbGljZSBhcmUgb3V0c2lkZSwgYnV0IGltcG9zc2libGUgZm9yIHBvbGljZSB0byBzZWUgaW4uClN0ZWluYmFjaCBDYXJpbGxvbiAoTmV3c3BhcGVyKSAgIEZlYnJ1YXJ5IDksIDE5ODMsIFN0ZWluYmFjaCwgTWFuaXRvYmEKTHVjayBGcmlkYXkgdGhlIDEzdGggd2lsbCBhbG1vc3QgY2VydGFpbmx5IHByb3ZlIHVubHVja3kgZm9yIG9uZSBzaWRlIG9mIHRoZSBncmVhdCBkaXZpZGUuCllvdSBjYW4gZGVhbCBmb3IgcmVhbCBjYXNoIG9yIGp1c3QgZm9yIGZ1bi4gQXMgcG9rZXIgaXMgcXVpY2tseSBiZWNvbWluZyBhIHNvdWdodCBhZnRlciBhY3Rpdml0eSwgcG9rZXIgcGFydHkgc3VwcGxpZXMgYXJlIGluIGRlbWFuZCBhcyB3ZWxsLi4gCkhlIHdhcyBhIHZlcnkgcmVzcGVjdGVkIGFuZCBob25vcmFibGUgbWFuLiAKSXQgc3Vja2VkLCBidXQgb25jZSB0aGUgaW5zdXJhbmNlIGNsYWltIHdhcyBtYWRlIEkgbW92ZWQgb24uIAo3KSBUaGlzIHN0dWR5IGNvbnNpc3RlZCBvZiA4OTQgY2FzZXMsIG1lZGlhbiBhZ2Ugb2YgNDEgeWVhcnMsIDMyJSB3b21lbi4KQ29sbGluIE1vc2htYW4gaGF0IG1pdCBzZWluZW0gZXJzdGVuIEJ1Y2gsIGRhcyBzaWNoIG1pdCBTaXQgR29zIGJlZmFzc3RlLCBiZXJlaXRzIGJld2llc2VuLCBkYXNzIGVyIHdlaSwgd29yYmVyIGVyIHNjaHJlaWJ0LiBJbiBFeHBlcnRlbmtyZWlzZW4gd2lyZCBkaWVzZXMgQnVjaCBiZXJlaXRzIGFscyBlaW5lcyBkZXIgQmVzdGVuIGF1ZiBkaWVzZW0gR2ViaWV0IGdlaGFuZGVsdC4gTnVuIGxlZ3QgZGllc2VyIEF1dG9yIGFsc28gbWl0IGVpbmVtIHJlaW5lbiBIZWFkcyBVcCBCdWNoIG5vY2ggZWluZW4gZHJhdWYuIERhIGVzIHp1IGRpZXNlbSBUaGVtYSBub2NoIG5pY2h0cyB3aXJrbGljaCBWZXJnbGVpY2hiYXJlcyBhdWYgZGVtIE1hcmt0IGdpYnQsIGtubnRlIE1vc2htYW4gYXVjaCBtaXQgZGllc2VtIFdlcmsgd2llZGVyIGlucyBTY2h3YXJ6ZSBnZXRyb2ZmZW4gaGFiZW4uIFp1ZGVtIGRhcyBIZWFkcyBVcCBTcGllbCBkdXJjaCBkaWUgdmllbGVuIEZlcm5zZWhiZXJ0cmFndW5nZW4gdW5kIGRpZSBzdG5kaWdlIEFjdGlvbiBpbSBNb21lbnQgc2VociBiZWxpZWJ0IGlzdC4gV2FzIGJpZXRldCBkaWVzZXMgQnVjaCBudW4gZGVtIGdlbmVpZ3RlbiBMZXNlciwgZGFzIGVyIG5pY2h0IHNjaG9uIHdlaT8KSSBkb24ndCB0aGluayBoZSBzdGFydGVkIG91dCBhcyBob21lbGVzcywgYnV0IGlmIHNvbWV0aGluZyBoYXBwZW5lZCB0byBoaW0sIGhlIG1pZ2h0IGhhdmUgYmVlbiBicm91Z2h0IHRvIGEgaG9tZWxlc3Mgc2hlbHRlci4gClBhc3NlcyBmcm9tIG9sZCBUb21teSBib3ksIGhlIHNhaWQuIApXb3JsZCBMYXJnZXN0IFBhc3NlbmdlciBQbGFuZSBBcnJpdmVzIEF0IE1JQUFpcmJ1cyBBIDM4MCBMdWZ0aGFuc2EgTGFuZHMgQXQgTUlBMDlBIGNyb3dkIG9mIHBlb3BsZSBsaW5lIFBlcmltZXRlciBSb2FkIHRvIHdhdGNoIHRoZSBoaXN0b3JpYyBsYW5kaW5nLiAoQ0JTNClBIGNyb3dkIG9mIHBlb3BsZSBsaW5lIFBlcmltZXRlciBSb2FkIHRvIHdhdGNoIHRoZSBoaXN0b3JpYyBsYW5kaW5nLiAoQ0JTNCkKU29tZXRpbWVzIHlvdSB3aWxsIHNlZSBwbGF5ZXJzIHRpcCBzZXZlcmFsIGRvbGxhcnMgZm9yIGEgYmlnIHBvdCBvciBhbiBleHRyZW1lbHkgdW5saWtlbHkgc3VjayBvdXQuIApUaGVzZSBhcmUgdGhlIHNvZnRseSBzdWJ2ZXJzaXZlIHRoaW5ncyB0aGF0IGFkZCB1cCBvdmVyIHRoZSBjb3Vyc2Ugb2YgYSBtYXJyaWFnZSwgYW5kIG9mIHBhcmVudGhvb2QsIGludG8gZnJhbmsgY29udGVtcHQgYW5kIGRpc3Jlc3BlY3QuIApUaGV5IGRvbid0IHJ1biBhZnRlciB0aGUgcG90cy4gClNpZ2guIEF0IHRoZSBlbmQgb2YgaXQgYWxsLCB3ZSBzdGlsbCB0ZWFjaCBpbiBPYWtsYW5kLiBXaGljaCBpcyBpbiB0aGUgVVNBLiBBbmQgT2FrbGFuZCBpbmNyZWFzaW5nbHkgZGVzcGlzZXMgaXRzIHBvb3IgYW5kIGRpc2VuZnJhbmNoaXNlZCwgcmVmdXNpbmcgdG8gdXNlIGNpdHkgZnVuZHMgcmVzcG9uc2libHkgZm9yIHRoZSB1bmRlcnNlcnZlZCwgYW5kIEFtZXJpY2EganVzdCBoYXRlcyBraWRzLiBQZXJpb2QuIE5vIGZlZGVyYWwgbWF0ZXJuaXR5IGxlYXZlLCBubyBzdXBwb3J0IGZvciBjaGlsZGNhcmUsIGNoaWxkcmVuIGhlYWx0aCBpbnN1cmFuY2Ugb24gdGhlIGNob3BwaW5nIGJsb2NrIGFsbCB0aGUgdGltZSwgc2Nob29scyBmdW5kZWQgZGlzbWFsbHksIGFuZCBjb2xsZWdlIGNvc3RzIHNreSBoaWdoLiBPbmUgY2hpbGQgaW4gc2V2ZW4gaXMgaW4gcG92ZXJ0eSBpbiBBbWVyaWNhLiBJIGhvbmVzdGx5IGRvbiB1bmRlcnN0YW5kIHdoeSB3ZSBsZXQgb3VyIGNvdW50cnkganVzdCBraWNrIGF0IG91ciBjaGlsZHJlbiBjb25zdGFudGx5LgpSZWdpc3RyYXRpb24gZm9ybXMgYW5kIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gY2FuIGJlIGZvdW5kIG9uIHRoZSBCcmlhbiBIZWFkIFRvd24gd2Vic2l0ZS4gTW9yZSBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUgYnkgY2FsbGluZyB0aGUgQnJpYW4gSGVhZCBUb3duIG9mZmljZXMgYXQgNDM1IDY3NyAyMDI5IG9yIGJ5IGNhbGxpbmcgTG9vc2UgV2hlZWxzIGluIER1Y2sgQ3JlZWsgYXQgNDM1IDY4MiAyNTI2LgpUaGF0J3Mgd2h5IHlvdSBuZWVkIHRvIHRhbGsgd2l0aCB0aGUgYXR0b3JuZXkuIApBYm91dCB5b3VyIGxvYW4sIHRoZSBtb3J0Z2FnZSBwcm9jZXNzLCBjbG9zaW5nIGV0Yy4gClJvc2VHb2xkVGFtcG9uIHUKV2hlbiB0aGV5IHdyb3RlIHRoaXMgb24gdGhlaXIgYXNzaWdubWVudCB0aGV5IHdlcmUgbm90IHJlYWxseSBtZWFuIGJ1dCBJIGRvbiB3YW50IHRoZW0gdG8gZmVlbCB0aGlzIHdheS5UaGUgd2F5IHlvdSB3YW50IHlvdXIgc3R1ZGVudHMgdG8gZmVlbCBzaG91bGQgbm90IG1hdHRlciB3aGF0c29ldmVyLiBJZiB0aGUgc3R1ZGVudHMgd2hvIGFyZSBhZGFtYW50IGFib3V0IHRoZSB2aWV3cyB0aGF0IHRoZXkgZXNwb3VzZSBhcmUgY2FwYWJsZSBvZiBkZWZlbmRpbmcgdGhlbSwgdGhlbiB0aGF0IGdyZWF0IU9uZSBhc3NpZ25tZW50IGluIHBhcnRpY3VsYXIgdGhleSB3cm90ZSBhYm91dCBob3cgSXNsYW0gaGFzIG5vdCBoYWQgYW55IGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHdvcmxkIGFuZCB0aGF0IGl0IGlzIGEgcmVsaWdpb24gb2YgaGF0ZS5JZiB0aGV5IGNhbiBwcm92aWRlIGZhY3RzIHRoYXQgY29ycm9ib3JhdGUgdGhvc2Ugdmlld3MsIHdvdWxkIHlvdSBub3Qgc2F5IHRoZXkgYXJlIGVudGl0bGVkIHRvIHRoZW0/IEFyZSB5b3UgdHJ5aW5nIHRvIHRlYWNoIHRoZW0gdGhlIGNvdW50ZXJhcmd1bWVudHMgdG8gd2hhdCB0aGV5IHRoaW5rLCBvciBhcmUgeW91IHRyeWluZyB0byB0ZWFjaCB0aGVtIGhvdyB0byBhcmd1ZT9JIGFtIGEgbWFsZSBlbGVtZW50YXJ5IHRlYWNoZXIhIElmIEkgaGF2ZSBvbiBwaWVjZSBvZiBhZHZpY2UgZm9yIHlvdSwgaXQgdGhpczpNYWtlIHN1cmUgYWxsIG9mIHRoZSBvdGhlciB0ZWFjaGVycyBrbm93IHRoYXQgdGhlIG1lbiBzdGFmZiBiYXRocm9vbSBpcyBmb3IgbWVuLiAKUG9zdG1lZGlhIHdhbnRzIHRvIGltcHJvdmUgeW91ciByZWFkaW5nIGV4cGVyaWVuY2UgYXMgd2VsbCBhcyBzaGFyZSB0aGUgYmVzdCBkZWFscyBhbmQgcHJvbW90aW9ucyBmcm9tIG91ciBhZHZlcnRpc2VycyB3aXRoIHlvdS4gVGhlIGluZm9ybWF0aW9uIGJlbG93IHdpbGwgYmUgdXNlZCB0byBvcHRpbWl6ZSB0aGUgY29udGVudCBhbmQgbWFrZSBhZHMgYWNyb3NzIHRoZSBuZXR3b3JrIG1vcmUgcmVsZXZhbnQgdG8geW91LiAKQWNuZSBjcmVhbSBkaWRuJ3Qgd29yayBjb25zaXN0ZW50bHkuIEl0IHdhcyBleHBlbnNpdmUgc28gSSB3ZW50IHRvIG1vaXN0dXJpemVyLiBJJ3ZlIG5ldmVyIGhlYXJkIG9mIGJlYXV0eSBib3hlcyBiZWZvcmUsIGJ1dCBldmVyeXRoaW5nIGluIHRoYXQgYm94IHdlcmUgdGhpbmdzIEkgd291bGQgdXNlIHNvIEkgc3ViYmVkLiAKVGhlcmUgYWxzbyB3ZXJlIHNvdW5kIHByb2JsZW1zLiBMaXR0bGUgaW50ZXJydXB0ZWQgdGhlIHRpdGxlIHRyYWNrIG9mZiAiUGFwZXIgRG9sbCIgdG8gc3RhcnQgb3ZlciwgYW5kIGFwb2xvZ2l6ZWQgZm9yIGRvaW5nIGl0Li4gCj4+PiB6dW0gQXJ0aWtlbDogRGVyIFZhdGEgVHlwLiAKSSBiZWxpZXZlIHRoYXQgaW4gdGhlIG5leHQgZmV3IHllYXJzIHRoZXJlIGFyZSBnb2luZyB0byBiZSBkb2N1bWVudGFyaWVzIGFib3V0IHRoZSBSRUFMIGFuZCBwcmVzZW50IGRhbmdlciBvZiBtb2xkIGV4cG9zdXJlLiAKQWx0aG91Z2ggVGhlIEZhbWUgTW9uc3RlciBpcyBub3QgYWxzbyAxIGluIFVTIEJpbGxib2FyZC4gCkluIHlvdXIgZ3JhZHVhdGlvbiBwaWN0dXJlLCB5b3UgbG9vayBncmVhdCBhbmQgaWYgSSB3YXMgMTggSSB0aGluayB0aGF0IHlvdSB3ZXJlIHRvbyBmb2N1c2VkIG9uIHlvdXIgY2FyZWVyIGFuZCB3b3VsZCBoYXZlIG5vIHRpbWUgZm9yIGEgcmVsYXRpb25zaGlwLiBJIHBlcnNvbmFsbHkgcHJlZmVyIG5vIG1ha2V1cCBidXQgYXMgb3RoZXIgcmVkZGl0b3JzIGhhdmUgbWVudGlvbmVkLCB5b3UgY291bGQgdHJ5IGEgZmV3IHZhcmlhdGlvbnMgb2YgbWFrZXVwIGFuZCBzZWUgd2hhdCBzdWl0cyB5b3UgdGhlIGJlc3QuIApJZiB5b3Ugbm90IGRvaW5nIEJsaW5rIHNob3BwaW5nLCB5b3UgY2FuIGNvbXBsYWluIGFib3V0IHRoZSBzdG9yZSBsaW5lICAgdGhvc2UgcGVvcGxlIGFyZSBjaG9vc2luZyB0byBiZSB0aGVyZS4gCk1hc3MgcGhpbGFudGhyb3B5IHRvb2sgb2ZmIGluIGEgd2lkZSB2YXJpZXR5IG9mIGZpZWxkcy4gQ29tbXVuaXR5IGNoZXN0cyBzcHJhbmcgdXAgaW4gZXZlcnkgbWFqb3IgY2l0eSwgYW5kIHRoZSBSZWQgQ3Jvc3MgdG9vayB2b2x1bnRlZXJpc20gYW5kIGdyYXNzIHJvb3RzIHBoaWxhbnRocm9weSB0byBuZXcgbGV2ZWxzIHRvIHN1cHBvcnQgdGhlIHRyb29wcyBhYnJvYWQuIApUaW1pbmcgaW4gYXQgMTggaG91cnMgYW5kIDQ0IG1pbnV0ZXMsIEV2ZW50IDQ5IHdhcyB0aGUgc2Vjb25kIGxvbmdlc3QgZmluYWwgdGFibGUgKHRpbWUgZHVyYXRpb24pIGluIFdTT1AgaGlzdG9yeSB3aXRoIDQ4MCBoYW5kcyBkZWFsdC4gCk92ZXJ0aGVoaWxsdG90aGVsZWZ0ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KVGhlbiwgbmV4dCB0aGUgU2ltKHMpIHdpbGwgYXBwZWFyIGluIHRoZSBmYW1pbHkgYmluIGluIHRoZSBtYWluIG5laWdoYm9yaG9vZC4gQ2xpY2sgb24gdGhlIFNpbShzKSB5b3Ugd2FudCB0byBkZWxldGUsIHRoZW4gY2xpY2sgdGhlIGdhcmJhZ2UgY2FuIGluIHRoZSBsb3dlciByaWdodCBoYW5kIGNvcm5lciBvZiB0aGUgc2NyZWVuLiAKVGhlIG9mZmljaWFsIGFubm91bmNlbWVudCBvZiB0aGUgY29udGVzdCB3aWxsIGJlIG1hZGUgdG9uaWdodCBhdCBUd2l0Y2hDb24sIGEgY29udmVudGlvbiBmb3IgdGhlIGxpdmUgc3RyZWFtaW5nIHBsYXRmb3JtIHRoYXQgaGFzIGJlY29tZSBwb3B1bGFyIHdpdGggdGFibGV0b3AgcGxheWVycy4gClRoZSBleHBlY3RhdGlvbiB0aGF0IHRoZSBob3NwaXRhbCBpcyBleHBlY3RlZCB0byBiZW5kIG92ZXIgYmFja3dhcmRzIHRvIGFjY29tbW9kYXRlIHlvdSBpcyByaWRpY3Vsb3VzLi4gClRyeSBIb3lsZSBDYXNpbm8uCldlIGhpcmVkIG91ciBmaXJzdCBnYW1lIHNlY3VyaXR5IHRlYW0gbWVtYmVyIGJhY2sgaW4gQXVndXN0LiAKSWYgeW91IGhhdmUgYmVlbiB0b2xkIGJ5IHlvdXIgcGh5c2ljaWFuIHRoYXQgeW91ciB0aHlyb2lkIGlzIGZpbmUgYW5kIGhhdmUgbm90IGhhZCB0aGUgYWJvdmUgdGVzdHMgb3JkZXJlZCwgdGhlbiB0aGluayBhZ2Fpbi4gWW91ciBwaHlzaWNpYW4gRE9FUyBOT1QgaGF2ZSBhbGwgdGhlIGZhY3RzLiAKIldlbGwsIHdlIG9ubHkgcGxheSBLb3JlYW4gbXVzaWMgaGVyZSwgYW5kIHlvdSBtaWdodCBiZSB1bmNvbWZvcnRhYmxlLiIgSSBsb3ZlIEtvcmVhbiBtdXNpYyEgTGV0IG1lIGluISAiV2VsbCwgdGhlIGNsaWVudHMgYXJlIEtvcmVhbiBoZXJlLCB5b3UgbWlnaHQgbm90IGZpdCBpbi4iIEkgbG92ZSBpbnRlcmFjdGluZyB3aXRoIEtvcmVhbnMgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIHRoaXMgY3VycmVudCBtb21lbnQsIGxldCBtZSBpbiEgIldlbGwsIHlvdSBoZXJlIGJ5IHlvdXJzZWxmLiBXZSBkb250IHRha2UgcGVvcGxlIGJ5IHRoZW1zZWx2ZXMsIGdvIHRvIHRoZSBjbHViIGFjcm9zcyB0aGUgc3RyZWV0LiIgQW4gaG91ciBsYXRlciBJIHdlbnQgdG8gYSBkaWZmZXJlbnQgY2x1YiAoYWdhaW4gYnkgbXlzZWxmKSBhbmQgYXMgc29vbiBhcyBJIGdvdCB0byB0aGUgZnJvbnQgb2YgdGhlIHF1ZXVlLCAiV2UgYXJlIHNvcnJ5IGJ1dCBuby4iIFl1cCwgZ290IGl0LiAKTG9va2luZyBiYWNrLCBJIGZlZWwgYmFkLiAKV2l0aGVycyBMaWNlbnNlZCBNYXNzYWdlIFRoZXJhcHlIb3RlbHMgbmVhciBIZWFkUGlueiBFbnRlcnRhaW5tZW50IENlbnRlckhvdGVscyBuZWFyIFRoZSBQbGFudGF0aW9uIEdvbGYgQ291bnRyeSBDbHViSG90ZWxzIG5lYXIgU291dGhlcm4gRnJlc2ggRmFybXNIb3RlbHMgbmVhciBHYXRld2F5IFlvZ2EsIExMQ05lYXIgQWlycG9ydHNTb3V0aHdlc3QgRmxvcmlkYSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgSG90ZWxzQ2hhcmxvdHRlIENvdW50eSBBaXJwb3J0IEhvdGVsc05lYXIgQ29sbGVnZXNIb3RlbHMgbmVhciBJVFQgVGVjaG5pY2FsIEluc3RpdHV0ZSAgIEZvcnQgTXllcnMgQ2FtcHVzSG90ZWxzIG5lYXIgSGVyaXRhZ2UgSW5zdGl0dXRlSG90ZWxzIG5lYXIgUGF1bCBNaXRjaGVsbCBUaGUgU2Nob29sIEZvcnQgTXllcnNIb3RlbHMgbmVhciBGbG9yaWRhIEFjYWRlbXlIb3RlbHMgbmVhciBIb2RnZXMgVW5pdmVyc2l0eUhvdGVscyBuZWFyIFJlZ2VuY3kgQmVhdXR5ICAgRm9ydCBNeWVycywgRkxIb3RlbHMgbmVhciBSYXNtdXNzZW4gQ29sbGVnZSAgIEZvcnQgTXllcnMgQ2FtcHVzSG90ZWxzIG5lYXIgU3Vuc3RhdGUgQWNhZGVteSAgIEZvcnQgTXllcnMsIEZMSG90ZWxzIG5lYXIgRmxvcmlkYSBTb3V0aFdlc3Rlcm4gU3RhdGUgQ29sbGVnZUhvdGVscyBuZWFyIEtlaXNlciBVbml2ZXJzaXR5QWxsIEZvcnQgTXllcnMgUmVzdGF1cmFudHNSZXN0YXVyYW50cyBuZWFyIEhhbXB0b24gSW5uIEZ0LiAKRmVlbCB0aGUgc2FtZSB3YXkgYWJvdXQgZHdhcnZlcyB0b28uIFRob3VnaCB0aGV5IGEgbG90IG1vcmUgbGlrZWx5IHRvIGFsbCB1bml0ZSB1bmRlciBhIGJhbm5lciBpbiB0aGUgbmFtZSBvZiAiRHdhcmZkb20iLiBLYXJheiBhIEthcmFrIHNob3VsZCBiZSB0aGUgbmFtZSBvZiB0aGUgZHdhcmYgZmFjdGlvbi4KSGUgYWxzbyBjcml0aWNpemVkIFJ1c3NpYSBmb3IgdXNpbmcgaXRzIHZldG8gYXQgdGhlIFVuaXRlZCBOYXRpb25zIFNlY3VyaXR5IENvdW5jaWwgdG8gYnJpbmcgbW9yZSBjbGFyaXR5IGFib3V0IHRoZSBhdHRhY2suICJTbyBhZ2FpbiwgZ2V0dGluZyB0aGUgZnVsbCB0cnV0aCBhbmQgdGhlIHVzZSBhbiBpbnRlcm5hdGlvbmFsIGxlZ2FsIGFwcHJvYWNoIGFnYWluc3QgdGhlIHVzZSBvZiBjaGVtaWNhbCB3ZWFwb25zIGhhcyBiZWVuIHN0b3BwZWQuIFdlIGdyZWF0bHkgcmVncmV0IHRoaXMsIiBoZSBzYWlkLgpUbyBkZXRlcm1pbmUgaWYgYSB0b3VybmFtZW50IGlzIHdvcnRoIHBsYXlpbmcsIHRoZSBxdWljayBiYWNrIG9mIHRoZSBlbnZlbG9wZSBjYWxjdWxhdGlvbiBpcyAgeCAzMCUgcm9pIGJhc2VkIG9uIHlvdXIgc3RhdHMgZGl2aWRlZCBieSB0aGUgYXZlcmFnZSBudW1iZXIgb2YgaG91cnMgKHdoaWNoIGNoYW5nZXMgYmFzZWQgb24gd2lucmF0ZSBhbmQgdG91cm5hbWVudCBzdHJ1Y3R1cmUpLiBJbiB0aGlzIGNhc2UgdGhlIGxpa2VseSB1cHBlciBlbmQgb2YgeW91ciBleHBlY3RlZCBwcm9maXQgd291bGQgYmUgJDE4L2F2ZyBudW1iZXIgb2YgaG91cnMgcGxheWVkLCB3aGljaCBJIGFzc3VtZSBpcyAyKyBob3VycyBpZiB5b3VyIHJvaSBpcyBnb29kICAgbGVzcyB0aGFuIG1pbmltdW0gd2FnZS4gQnkgd2F5IG9mIGNvbXBhcmlzb24sIEkgaW1hZ2luZSB0aGF0ICQyMC9ob3VyIGlzIGRvYWJsZSBhdCAxLzIgd2l0aCB0aGF0IHJha2Ugc3RydWN0dXJlLi4gCk5vdCBvbmUgdG8gYWJ1c2UgaXQsIGJ1dCBhbHNvIG5vdCBvbmUgdG8gZG8gdG9vIG11Y2ggdGhhdCBoZSBkaWRuIGhhdmUgdG8uLiAKVGhlIGhvbWUgd2FzIHByaXZhdGUsIGNsZWFuLCBmZW1pbmluZSBhbmQgc2FmZS4gVGhlIGNpdHkgd2FzIHB1YmxpYywgbWFzY3VsaW5lLCBkaXJ0eSBhbmQgZGFuZ2Vyb3VzLiAKQWZ0ZXIgYWJvdXQgYW4gaG91ciBwYXNzZWQgYnkgd2UgYWdyZWVkIHRoYXQgdGhlcmUgd2FzIG9ubHkgb25lIHdheSB0byBmaWd1cmUgb3V0IHdobyBoYWQgdGhlIHJpZ2h0IHN0cmF0ZWd5IGFuZCB3aG8gd2FzIHNpbXBseSBvdXQgaW4gbGVmdCBmaWVsZCB3aXRoIHRoZWlyIHRob3VnaHRzLiAKWGF2aWVyIHF1YXJ0ZXJiYWNrIENoYXNlIFdvbGYuIFBsdXMgc2VlIG1vcmUgb2YgT2hpbydzIHRvcCBjb2xsZWdlIHJlY3J1aXRzLCBpbmNsdWRpbmcgSmFja3NvbiBDYXJtYW4gYW5kIFR5cmVrZSBTbWl0aC5NZWV0IHRoZSBPaGlvIEJpZyAxMDEgZm9yIDIwMTc6IHBsYXllcnMgcmFua2VkIDUwIHRvIDI2IE1lZXQgdGhlIE9oaW8gQmlnIDEwMSBmb3IgMjAxNzogcGxheWVycyByYW5rZWQgNTAgdG8gMjYgTWVldCBzb21lIG9mIHRoZSB0b3AgaGlnaCBzY2hvb2wgZm9vdGJhbGwgcGxheWVycyBpbiBPaGlvIGZvciB0aGUgMjAxNyBzZWFzb24sIGluY2x1ZGluZyBTdC4gClRoZSBzY2hvb2xzIHByaW5jaXBhbCB3b24gaGVscCwgYnV0IHRoZSBWUCBzdGFydHMgZXNjb3J0aW5nIG1lIHRvIGFuZCBmcm9tIGNsYXNzZXMsIHNvIGF0IGxlYXN0IHRoZSB5ZWxsaW5nIGF0IG1lIHN0b3BzIGluIHRoZSBoYWxsd2F5cy4gT25lIHdlZWtlbmQgSSBkcml2aW5nIGFuZCBJIG5vdGljZSBteSBjYXIgaXMgd29iYmx5LiAKU3BvcnRzIFZpZXcgU2VjdGlvbiA+UHJlcHMgT3V0ZG9vcnNUaGUgZmlyc3QgQmFzYWx0IEJpa2UgTmlnaHRzIHdpbGwgYmUgaGVsZCBTdW5kYXkgYXQgU3R1YmJpZXMgU3BvcnRzIEJhciBhbmQgRWF0ZXJ5IG9uIEVtbWEgUm9hZC4gVGhlIGV2ZW50IHdpbGwgZmVhdHVyZSBhIHBva2VyIHJ1biBhbmQgcmlkZSBmb3IgbW90b3JjeWNsZSByaWRlcnMuIApUcmFuc0xpbmsgaGFzIHByb3Bvc2VkIHRoYXQgdGhlIE1haW4gTWFyaW5lIEIgTGluZSBidXMgd291bGQgcnVuIGZyb20gTm9ydGggVmFuY291dmVyIHRvIFdlc3QgVmFuY291dmVyLCB3aXRoIHN0b3BzIGluIFdlc3QgVmFuIGF0IFBhcmsgUm95YWwsIDE0dGgsIDIxc3QgYW5kIDI0dGggc3RyZWV0cy4gVGhlIHBsYW4gYWxzbyBzdWdnZXN0cyBtZWFzdXJlcyB0byBpbXByb3ZlIHRyYWZmaWMgb24gTWFyaW5lIERyaXZlLCBzdWNoIGFzIGEgYnVzIG9ubHkgbGFuZSwgcmVtb3Zpbmcgc29tZSBvbiBzdHJlZXQgcGFya2luZyBhbmQgaGF2aW5nIGRlZGljYXRlZCBsZWZ0IHR1cm4gYmF5cy4uIApJbiB0aGUgZW5kLCB0aGUgb25seSB3YXkgZm9yIEphcGFuIHRvIHRydWx5IGVtZXJnZSBmcm9tIGl0cyB0d28gZGVjYWRlcyBvZiBzdGFnbmF0aW9uIGlzIHRocm91Z2ggYSBjcmlzaXMgc3VjaCBhcyBhIGRlZXAgcmVjZXNzaW9uIG9yIGEgYm91dCBvZiBoeXBlcmluZmxhdGlvbiBpZiB0aGUgQk9KIHN0cmF0ZWd5IGdldHMgb3V0IG9mIGhhbmQsIGNvbnRlbmRzIEFsbGVuLiB0aGUgbWVkaXVtIHRlcm0sIEphcGFuIG5lZWRzIHRvIHJhaXNlIGludGVyZXN0IHJhdGVzIHRvIGEgbW9yZSBub3JtYWwgbGV2ZWwuIFRoYXQgd2lsbCBjYXVzZSBhIGJpZyByZWNlc3Npb24gYnV0IGlzIHRoZSBiZXN0IHdheSBvdXQgZm9yIEphcGFuLiBCeSBhIGRlZXAgcmVjZXNzaW9uLCBBbGxlbiBtZWFucyBhIHNpZ25pZmljYW50IGluY3JlYXNlIGluIHVuZW1wbG95bWVudCBhbmQgYmFua3J1cHRjaWVzIGZvciB0aGUgbGVnaW9ucyBvZiBKYXBhbmVzZSBjb21wYW5pZXMgdGhhdCBzaG91bGQgZ28gYmFua3J1cHQsIGJ1dCBoYXZlbiBkdWUgdG8gc3Vic2lkaWVzIGFuZCBvdGhlciBmb3JtcyBvZiBwcm90ZWN0aW9uaXNtIGJ5IGEgZ292ZXJubWVudCB3YXJ5IG9mIGEgcG9zc2libGUgZG9taW5vIGVmZmVjdCBhbmQgc3VyZ2luZyB1bmVtcGxveW1lbnQuIHdvdWxkIGNhdXNlIGdyZWF0IHBhaW4gZm9yIHBlb3BsZS4gT24gdGhlIG90aGVyIGhhbmQsIDIwIHllYXJzIG9mIG5vIGdyb3d0aCBhbHNvIGNhdXNlZCBhIGh1Z2UgYW1vdW50IG9mIHBhaW4sIEFsbGVuIHNheXMuIEFtb25nIHRob3NlIHN1ZmZlcmluZyBhcmUgdGhlIG1hbnkgeW91bmdlciB3b3JrZXJzIGVtcGxveWVkIG9uIHRlbXBvcmFyeSBjb250cmFjdHMsIHdpdGggbG93IHdhZ2VzLCBzY2FudCBiZW5lZml0cyBhbmQgZmV3IGNhcmVlciBwcm9zcGVjdHMgd2hvIG5vdyBhY2NvdW50IGZvciBtb3JlIHRoYW4gYSB0aGlyZCBvZiBKYXBhbiB0b3RhbCBsYWJvciBmb3JjZS4KSSBjYW4gc2VuZCB5b3UgdGhlIHN0dWR5IGlmIHlvdSBuZWVkIG1lIHRvLlZpYmVyemkgaXMgYSBtZWQgdGhhdCBpcyBmb3IgSUJTIEQgbm90IElCUyBDLiAKVW50dWsgYmlzYSBtZW5hbmcgdGVudHUgc2FqYSBidWthbiBoYWwgeWFuZyBtdWRhaCBkYW4gZGlidXR1aGthbiBrZXNhYmFyYW4gZGFuIGtlYmVydW50dW5nYW4gZGFsYW0gcGVybWFpbmFuIGNlbWUgb25saW5lIGluaSwga2ViZXJ1bnR1bmdhbiBtZW5qYWRpIGZha3RvciB1dGFtYSBwZW5lbnR1IGtlbWVuYW5nYW4uIFNhYXQgYmVybWFpbiBqdWRpIGNlbWUgb25saW5lLCBzZWJhaWtueWEgcGFoYW1pIGRhbiBrdWFzYSBhdHVyYW4gYmVybWFpbiBzZWhpbmdnYSBiaXNhIGJlcm1haW4gZGVuZ2FuIGxhbmNhci4gCkhvd2V2ZXIgSSBhbSBjZXJ0YWluIHRoYXQgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgdGhvc2UgSW5kb25lc2lhbiB3b21lbiwgdGhleSB3b3VsZCBwcmVmZXIgcHJvdGVjdGlvbnMgYXMgd2VsbC4gU2FkbHkgdGhleSBkb24gaGF2ZSBtYW55IGdvb2QgY2hvaWNlcy4gClRoZXJlIGlzIGEgcG9zdCBvbiBob3cgdG8gZG8gaXQgd2l0aCB1c2VycyBvbiBoZXJlLlB1cHRlbnRqb2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSB3aXNoIHRoZXJlIHdhcyBhIHdheSB0byBvbmx5IHNob3cgc3R1ZmYgZ3JhYmJlZCBieSBSU1MgdnMgQmF0Y2ggYWRkIGJlY2F1c2UgdGhpcyBncmFwaCB3aWxsIGxvb2sgZGlmZmVyZW50LiBPTUcgYW5kIHRoZSBvdGhlcnMgYmVjYW1lIGZyb250IHJ1bm5lcnMgd2hlbiBJIGdyYWIgYmlnZ2VyIG9sZGVyIHNlcmllcy5JIGp1c3QgZGlkIGEgcXVpY2sgc2VhcmNoIFRWIHNlYXJjaCBvbiBhIHNob3cgdGhhdCBjYW1lIG91dCBpbiAxOTc0IGFuZCB0aGUgb25seSByZXN1bHRzIGFyZSBmcm9tIE9NRywgR0VFSywgYW5kIFNsdWcuIApMYW5nZSBaZWl0IHd1cmRlIGRhcyBQaG5vbWVuIG51ciBiZWxjaGVsdCB1bmQgbmljaHQgZXJuc3RnZW5vbW1lbiwgZXJzdCBkdXJjaCBkaWUgQXJiZWl0ZW4gdm9uIFByb2YuIApXaGF0PyBXaGVyZSBkaWQgeW91IGdldCB0aGF0IGZyb20/IFRoYXQgYWJzdXJkIGFuZCBpbmFjY3VyYXRlLiBJIG5ldmVyIHNhaWQgb3Igc3VnZ2VzdGVkIHRoYXQgYW5kIEkgY2VydGFpbmx5IGRvbiBiZWxpZXZlIHRoYXQuIEkgbWVhbiBldmVuIHRoZSBiZXN0IG9mIHVzIGhhdmUgYXQgbGVhc3Qgb2NjYXNpb25hbCBzZXhpc3QvcmFjaXN0L2NsYXNzaXN0IHRob3VnaHRzICAgd2Ugb25seSBodW1hbiBhZnRlciBhbGwuIApUaGlzIGZvcmNlcyB0aGUgZ2FtZSB0byBoYXZlIHRvIGJyZWFrIGFuZCBiZSBpbnRlcnJ1cHRlZCBzbyBwZW9wbGUgY2FuIGhhdmUgYSBkcmluay4gCk9uZSB0aW1lIHNoZSByaXBwZWQgYSBiaWcgZmFydCBhbmQgaGUgZ2F2ZSBoZXIgdGhpcyByZXZvbHRlZCBsb29rLCB3ZW50IG92ZXIgdG8gImNoZWNrIGhlciBkaWFwZXIsIiBhbmQgdG9sZCB1cyBpbiB0aGUgbW9zdCBkaXNndXN0ZWQgdG9uZSBvZiB2b2ljZSBJIGV2ZXIgaGVhcmQsICJNYW1hIGJvb3BpbmcuIiBXZSBzdGlsbCBzYXkgaXQgdG8gZWFjaCBvdGhlciBwcmV0dHkgcmVndWxhcmx5LiBXZSBnaXZlIGVhY2ggb3RoZXIgd2lja2VkIHNpZGUgZXllIHdoZW4gd2UgZG8uCkFuIEV4YW1wbGVBIHZlcnkgc2ltcGxlIGV4YW1wbGUgY291bGQgYmUgdGhhdCB0aGUgc2NpZW50aXN0IG9ic2VydmVzIHRoYXQgc29tZXRoaW5nIGZhbGxzIG9mZiBhIGRlc2suIFRoZSBoeXBvdGhlc2lzICAgJ1RoaW5ncyBmYWxsIHdoZW4gbm90IHN1cHBvcnRlZCBieSBvdGhlciB0aGluZ3MnICAgc3ByaW5ncyB0byBtaW5kLiBGcm9tIHRoaXMgaHlwb3RoZXNpcyB0aGUgcHJlZGljdGlvbiAgICdJZiBJIGRyb3Agc29tZXRoaW5nIGVsc2UsIGl0IHdpbGwgZmFsbCcgICBjYW4gYmUgbWFkZS4gQW5kIGZpbmFsbHkgdGhlIGh5cG90aGVzaXMgY2FuIGJlIHRlc3RlZCBieSBkb2luZyBleHBlcmltZW50cyB0byB2ZXJpZnkgb3IgY29udHJhZGljdCB0aGUgcHJlZGljdGlvbiwgaWUsIHRoZSBzY2llbnRpc3QgZHJvcHMgdGhpbmdzLgpUaGF0IGlzIGR1ZSB0byBhIGpvaW50IHZlbnR1cmUgYmV0d2VlbiBDYW5hZGlhbiBjb21wYW55IFNoZXJyaXR0IEludGVybmF0aW9uYWwgYW5kIHN0YXRlIG5pY2tlbCBtb25vcG9seSBDdWJhbmlxdWVsLCB3aGljaCBwcm9kdWNlcyBhcm91bmQgNjAgcGVyY2VudCBvZiB0aGUgaXNsYW5kJ3Mgbmlja2VsIHBsdXMgY29iYWx0LCB3aGljaCBpcyB0aGVuIHNoaXBwZWQgdG8gYSBqb2ludCB2ZW50dXJlIGluIENhbmFkYSBmb3IgcmVmaW5pbmcuCk5vIGNoYXJnZXMgd2VyZSBzdWJzdGFudGlhdGVkLiAKUGFyZW50cyB3ZXJlIGJvdGggaG9ycmlmaWVkIGJ5IHRoZSBmYWN0IEkgd2FzIGRvd24gdGhlcmUuIApJZiB0aGUgZGVjayBpcyBmaWxsZWQgd2l0aCBhY2VzLCB0aGVyZSBpcyBoaWdoIGNoYW5jZSB0aGF0IHlvdSBoaXQgYmxhY2tqYWNrLiBXaGVuIHRoZSBwbGF5ZXIgaGFzIGJsYWNramFjaywgdGhlIHBheSBvZmYgb2RkcyBhcmUgMzoyLiBUaGUgZGVhbGVyIHdpbGwgb25seSB3aW4gb24gdGhlIG90aGVyIGhhbmQgaWYgaGUgYWxzbyBnZXRzIGEgYmxhY2tqYWNrLiBUaGF0IHdoeSBhIGRlY2sgZmlsbGVkIHdpdGggYWNlcyBpcyBhbHdheXMgdG8gdGhlIHBsYXllciBhZHZhbnRhZ2UuClRoZSBuZXh0IHR5cGUgaXMgY2FsbGVkIGEgZnVsbCBob3VzZSB3aGVyZWluIHRocmVlIG91dCBvZiB0aGUgZml2ZSBjYXJkcyBpbiB0aGUgcG9rZXIgaGFuZHMgYXJlIG9mIHRoZSBzYW1lIHZhbHVlIHdoaWxlIHRoZSByZW1haW5pbmcgdHdvIGFyZSBhIHBhaXIuIApIZWxsbzogSSBhIG1hbmJvLCBhbmQgSSBjYW4gZ2l2ZSB5b3UgYSBjb3VwbGUgdGlwcyA6KSBWb2RvdSBpcyBub3QgYSByZWxpZ2lvbiB5b3UgY2FuIHByYWN0aWNlIG9uIHlvdXIgb3duOyB5b3UgbmVlZCB0byBiZSBwYXJ0IG9mIGEgY29tbXVuaXR5IGFuZCByZWNlaXZlIGluc3RydWN0aW9uIGZyb20gYSBwcmllc3Rlc3MgKGNhbGxlZCBhIG1hbmJvKSBvciBwcmllc3QgKGhvdW5nYW4pLiBGaXJzdGx5LCB5b3Ugc2hvdWxkIHN0YXJ0IHdvcmtpbmcgd2l0aCB5b3VyIGFuY2VzdG9ycy4gCkNvdXJ0ZXN5IG9mIHRoZSBCb3Vyc2UgUHVyc3VlIEhhcHBpbmVzcywgYSBjb2NrdGFpbCBhdCBCbHVlQmlyZCBEaXN0aWxsaW5nLgpUZXhhcyBwb2tlciBldmVuIGhhcyBkaWZmZXJlbnQgdmVyc2lvbnMsIGFzIHRoZXJlIGFyZSBubyBsaW1pdCwgcG90IGxpbWl0LCBhbmQgZml4ZWQgbGltaXQgdmFyaWF0aW9ucy4gVGhlc2UgYWxsIHJlZmVycmVkIHRvIHZhcmlvdXMgd2FnZXJpbmcgbGltaXRzIGR1cmluZyB0aGUgY291cnNlIG9mIGEgZ2l2ZW4gaGFuZCwgdGhlIGJhc2ljIHJ1bGVzIG9mIHRoZSBnYW1lcyB0aGVtc2VsdmVzIHJlbWFpbmVkIHVuY2hhbmdlZC4gVGhlIG5vIGxpbWl0IHZlcnNpb24gaXMgdGhlIGtpbmQgcGxheWVkIG9uIHRlbGV2aXNpb24uIEl0IGlzIHByb2JhYmx5IHRoZSBtb3N0IGV4Y2l0aW5nIGFuZCB0aGF0IGlzIHdoeSBpdCBnZXRzIHNvIG11Y2ggYWlydGltZS4gSW4gbm8gbGltaXQgcG9rZXIsIGEgcGxheWVyIGNhbiBtYWtlIHRoZSBmYW1vdXMgYWxsIGluIGJldCBhdCBkdXJpbmcgYW55IHJvdW5kIG9mIGJldHRpbmcuIEluIHBvdCBsaW1pdCBwb2tlciwgcGxheWVycyBhcmUgbGltaXRlZCBpbiB0aGVpciB3YWdlcmluZyB0byB0aGUgc2l6ZSBvZiB0aGUgcG9vbCwgb3IgcG90LCB3aGlsZSBiZXR0aW5nLiBGaXhlZCBsaW1pdCBwb2tlciBoYXMgaGFyZCBhbmQgZmFzdCBydWxlcyBhYm91dCBob3cgbXVjaCB5b3UgY2FuIGJldCwgb3IgYSBtdWx0aXBsZSBvZiB0aGUgYW50ZSwgYXMgdGhlIGJldHRpbmcgbGltaXQuCkJvdGggbWVhc3VyZXMgYXJlIGV4cGVjdGVkIHRvIGJlIGRpc2N1c3NlZCBpbiBGcmFua2Z1cnQgb24gVGh1cnNkYXkuLiAKSXRzIGluaXRpYWwgMjAxNiBidWRnZXQgd2FzIGJhc2VkIGFyb3VuZCBmaW5pc2hpbmcgZmlmdGggaW4gdGhpcyB5ZWFyJ3MgQ29uc3RydWN0b3JzIENoYW1waW9uc2hpcCB3aGVyZWFzIHRoZSByZWFsaXR5IGxvb2tzIGxpa2UgbmludGggcGxhY2UuIApTYWx0IExha2UgQ2l0eSB6b25pbmcgb25seSBhbGxvd3MgbWFzc2FnZSBwYXJsb3JzIHRoYXQgYXJlIE5PVCBjb25uZWN0ZWQgdG8gYSBtZWRpY2FsIHVzZSB0byBiZSBwbGFjZWQgd2l0aGluIGEgc3BlY2lmaWMgYXJlYSBjYWxsZWQgYSBjb21tZXJjaWFsIGNvcnJkaW9yLiAKSSBzdXBwb3J0IHRoZSByaWdodCB0byBwbGF5IHBva2VyIG9ubGluZS4gUG9rZXIgaXNuJ3QgZ2FtYmxpbmcuIEl0J3MgYSBob2JieSwgYW4gYWN0aXZpdHksIGEgZ2FtZS4gCiJZZXMgSSBhbSEiIE1pc3MgTm9zZSBzbWlsZWQgaHVnZWx5LiBTaGUga25vd3Mgc2hlIGlzIGRlZmluaXRlbHkgdGhlIGNhdCBtZW93IGluIHRvd24uClRodXMsIGhlIGRyYWlucyB0aGVtLCB3aXRob3V0IGxheWluZyBoYW5kIG9uIHRoZW0uIApJZiB5b3UgdGhpbmsgZ2lhbnQgSVNQcyBsaWtlIENvbWNhc3QsIFZlcml6b24sIFRpbWUgV2FybmVyLCBDaGFydGVyLCBDb3gsIGV0Yy4gQWN0dWFsbHkgY2FyZSBhYm91dCB0aGVpciBjdXN0b21lcnMsIHlvdSBjcmF6eS4gCkFsbCBwb2tlciBwbGF5ZXJzIHdhbGsgYXdheSBhIHdpbm5lciB3aXRoIGEgcGFydGluZyBnaWZ0IGFuZCBhbiBvdmVybmlnaHQgcm9vbSBmb3IgdGhlIG5pZ2h0IG9mIHRoZSB0b3VybmFtZW50LCBjb21wbGltZW50cyBvZiBNb3RvckNpdHkgQ2FzaW5vIEhvdGVsIGZvciB0aGUgcmVnaXN0ZXJlZCBwbGF5ZXIgYW5kIG9uZSBndWVzdC4gVGhlIHRvcCAxMCBmaW5pc2hlcnMgd2lsbCBiZSBhd2FyZGVkIHByaXplcywgaW5jbHVkaW5nICQ1LDAwMCBjYXNoIGZvciB0aGUgZ3JhbmQgcHJpemUgd2lubmVyIGFuZCAkMiw1MDAgY2FzaCBmb3IgdGhlIHNlY29uZCBwbGFjZSBmaW5pc2hlci4gVGhpcmQgcGxhY2Ugd2lsbCByZWNlaXZlIGZvdXIgdGlja2V0cyB0byBhIDIwMTggMTkgUmVkIFdpbmdzIHJlZ3VsYXIgc2Vhc29uIGhvbWUgZ2FtZSBhbmQgZm91cnRoIHRocm91Z2ggMTB0aCBwbGFjZSB3aWxsIHJlY2VpdmUgYW4gYXV0b2dyYXBoZWQsIGdhbWUgdXNlZCBob2NrZXkgc3RpY2sgYnkgYSBSZWQgV2luZ3MgcGxheWVyLgpEb2VzIHRoYXQgbWVhbiB0aGF0IGFsbCBpbmZlcmVuY2VzIGJhc2VkIHVwb24gcmFjZSBhcmUgcmFjaXN0PyBJIHdvdWxkIGFyZ3VlIG5vdCwgYmVjYXVzZSBvZiBleGFtcGxlcyBsaWtlIHRoZSBhYm92ZS4uIApDaHVyY2ggb2YgSmVzdXMgQ2hyaXN0IG9mIExhdHRlcgpPdXIgZmFucyBoZXJlIGxvdmUgaGltIGFuZCBJIGhvcGUgaGUnbGwgd2VhciBhIFRGQyBqZXJzZXkgZm9yIHRoZSByZXN0IG9mIGhpcyBjYXJlZXIsIiBUb3JvbnRvIHByZXNpZGVudCBCaWxsIE1hbm5pbmcgc2FpZCBpbiBhIHN0YXRlbWVudC4gCldoaWxlIGEgbm9ybWFsIHN1c3BlbnNpb24gYnJpZGdlIHJlcXVpcmVzIGV4dGVuc2l2ZSBhYnV0bWVudHMgYW5kIHJhbXBzIHRvIGVuYWJsZSB0aGUgcm9hZCB0cmFmZmljIHRvIHJlYWNoIHRoZSBicmlkZ2UgZGVjayBsZXZlbCBvZiBhbG1vc3QgMTIwIGZlZXQsIE1yLiAKQ29udHJhc3QgaXMgY2VydGFpbmx5IHRoZXJlICgiVGhlcmUgYXJlIGRhcmsgc2hhZG93cyBvbiB0aGUgZWFydGgsIGJ1dCBpdHMgbGlnaHRzIGFyZSBzdHJvbmdlciBpbiB0aGUgY29udHJhc3QuIiBDaGFybGVzIERpY2tlbnMsIFRoZSBQaWNrd2ljayBQYXBlcnMpLCBlc3BlY2lhbGx5IGluIHRoZSBjb3JuZXIgYml0cywgd2hlcmUgb24gY2xvc2VyIGluc3BlY3Rpb24gdGhlIGJsYWNrbmVzcyBpcyByZWFsbHkgbW9yZSB3aGl0ZSB0aGFuIGJsYWNrLiBJbiBhbnkgZXZlbnQsIHRoZSBwcmludCBzdWdnZXN0cyAiY29sb3IiIHRvIG1lIGZvciBubyBnb29kIHJlYXNvbiwgZXhjZXB0IHBlcmhhcHMgdGhhdCBpdCBsb29rcyB2ZXJ5IGNvbGQsIGFuZCBjb2xkIGlzIHN1Z2dlc3RpdmUgb2YgaWNlIGJsdWUsIGFuZCB0aGUgZ29vZCBjb250cmFzdCBmb3IgdGhhdCBpcyB5ZWxsb3cuIApKb3VicmFuIHNhaWQgaXQncyBiZWVuIG5lYXJseSB0d28gbW9udGhzIHNpbmNlIGhpcyBvcGVyYXRpb25zIHdlcmUgb3JkZXJlZCBzdXNwZW5kZWQgYW5kIGhlJ3Mgc3RpbGwgbm90IHJlY2VpdmVkIGEgY29weSBvZiB0aGUgYWZmaWRhdml0IGRldGFpbGluZyB0aGUgcmVhc29ucyBiZWhpbmQgdGhlIHN0YXRlIEdhbWluZyBDb250cm9sIEJvYXJkIGRlY2lzaW9uLiAKRmxvcCAxMCAyIDQgcmFpbmJvdy4KT2YgY291cnNlIGl0IG5vdCBsZWdhbCBmb3IgaGltIHRvIHJ1biBhIGJ1c2luZXNzIGFuZCBlYXJuIGluY29tZSB3aXRob3V0IGRlY2xhcmluZyBpdCBidXQgZGVhdGggaXMgbm90IHRoZSBwZW5hbHR5IGJ1dCBjIGhvdyB3b3VsZCB0aGV5IGV2ZXIgZmluZCBvdXQ/IElmIG9uZSBpbiBhIGJpbGxpb24gdGhlIHRheCBkZXBhcnRtZW50IGZpbmRzIG91dCwgaGUgc2F5IGhlIGp1c3Qgc3RhcnRlZCB0byBzZWUgaWYgdGhlcmUgd2FzIGFueSBtb25leSB0byBiZSBtYWRlLiBUaGV5IHByb2JhYmx5IG9ubHkgY3V0IG9mZiBvbmUgaGFuZCwgc28gSSB3b3VsZG4gc3dlYXQgaXQuCkJlYW1lciBlbmdpbmVzIGhhdmUgZ3JlYXQgbW9kIHN1cHBvcnQuIEFuZCB0aGVpciBjYXJzIGhhdmUgaGVsbGEgYWZ0ZXJtYXJrZXQuIApBbHNvLCB3aGF0IHBlb3BsZSBuZXZlciB0YWxrIGFib3V0IHdpdGggdGlwIGJhc2VkIGVtcGxveW1lbnQgaXMgaW5jZW50aXZlLiAKVGhlcmUgYXJlIHRob3VzYW5kcyBvZiBibHVlIHRsZXMgYW5kIHN0YW5lZCBnbGFzcyB3bmRvd3MsIHdoY2ggcyBob3cgdCBnb3QgdCBuYW1lLiAKQSBsb3Qgb2YgcGVvcGxlIGRvbiBoYXZlIHRoYXQgbWVudGFsaXR5LiBJZiB0aGV5IGRvbiBsaWtlIHNvbWV0aGluZywgdGhleSB3YW50IGl0IHJlbW92ZWQuIEhlbmNlIHdoeSByZWRkaXQgdGVuZHMgdG8gcmVhbGx5IHN1Y2sgbm93IGFuZCBoZWF2eSBoYW5kZWQgY2Vuc29yc2hpcCBpcyBlcm9kaW5nIHdoYXQgc21hbGwgY29tbXVuaXRpZXMgYXJlIGxlZnQgb24gdGhlIHNpdGUuClRoaXMgY29sbGVjdGlvbiBicmluZ3MgdG9nZXRoZXIgbGVhZGluZyBoZWFsdGggZXhwZXJ0cyBmcm9tIGFjcm9zcyB0aGUgcmVnaW9uIGFuZCBpbnRlcm5hdGlvbmFsbHkgdG8gZGlzY3VzcyBoZWFsdGggcHJpb3JpdGllcyBhbmQgaWRlbnRpZnkgZXZpZGVuY2UgYmFzZWQgc29sdXRpb25zIHRvIHNoYXBlIGhlYWx0aCBwb2xpY3kgYW5kIGludGVydmVudGlvbnMuClRoYXQgYnVsbHNoaXQuLiAKSSB3aXNoIHRoYXQgdGhhdCByZWFsbHkgYXdlc29tZSBidXNpbmVzcyBpZGVhIHNoZSBoYWQgYmVmb3JlIHdlIHN0YXJ0ZWQgZGF0aW5nICAgdGhlIG9uZSB0aGF0IGFueXRpbWUgc2hlIHJlYWxseSB0cmllZCB0byBkbyBhbnkgd29yayBvbiBzaGUnZCBnZXQgZnJ1c3RyYXRlZCB3aXRoIGFuZCBiZSBhbnhpb3VzIGFuZCBuZXZlciBiZSBhYmxlIHRvIHByb2NlZWQgd2l0aC4gVGhlIG9uZSB0aGF0IGFueSBtb25leSBzcGVudCBvbiB3YXMgbXkgbW9uZXkgYmVjYXVzZSBJIGFjdHVhbGx5IGJlbGlldmVkIGl0IGNvdWxkIGJlIGEgYmlnIHRoaW5nIChJIGRvbid0IHRoaW5rIGl0IGNhbiBkbyBhbnl0aGluZyBub3csIGJ1dCBhdCB0aGUgdGltZSB0aGUgdHJlbmRzIG1hZGUgc2Vuc2UpLiBJIHdpc2ggdGhhdCBidXNpbmVzcyBpZGVhIGJsb3Nzb21lZCBpbnRvIGEgbXVsdGkgYmlsbGlvbiBkb2xsYXIgaW5kdXN0cnkuLiAKTGEgbm9zdHJhICB1bmEgY29tdW5pdCBkaSBpbmRpdmlkdWkgY2hlIHNpIGRlZGljYW5vIGFsbGEgY3JlYXppb25lIGUgYWwgc29zdGVnbm8gZGkgdW4gYW1iaWVudGUgY2hlIG51dHJlIGUgZmF2b3Jpc2NlIGlsIHJpc3BldHRvLCBsYSBjb25zYXBldm9sZXp6YSBlIGxhIHNwaXJpdHVhbGl0IGNvbWUgc3RpbGUgZGkgdml0YS4gCkxvbmdlciBhbnN3ZXI6IGtpbmRhLiBCYWNrIHdoZW4gSSB3YXMgaGlraW5nIGV2ZXJ5IHdlZWsgSSBrZWVwIHRyYWNrIG9mIGhvdyBsb25nIHRoZSBoaWtlcyB3ZXJlLCBzaW5jZSBJIGNvbnNpZGVyZWQgdGhvc2UgdG8gYmUgYSB0eXBlIG9mIGNyb3NzIHRyYWluaW5nIGFuZCBJIHdhcyBjb25jZXJuZWQgYWJvdXQgb3ZlcmFsbCB0aW1lIG9uIG15IGZlZXQuIEkgZGlkbiBpbmNyZWFzZSBteSBydW5uaW5nIG1pbGVhZ2UgYmFzZWQgb24gdGhlIHRvdGFsIG1pbGVhZ2UgKHJ1bitoaWtlKSwgYnV0IEkgZGlkIHRyeSB0byBtYWtlIHN1cmUgdGhlIHRvdGFsIG1pbGVhZ2UgZGlkbiBzdWRkZW5seSBpbmNyZWFzZSBhcyB3ZWxsLCBhbmQgaWYgSSB3YXMgZ29pbmcgdG8gYmUgZG9pbmcgYSBwYXJ0aWN1bGFybHkgc3RyZW51b3VzIGhpa2UgSSBjb3VudCB0aGF0IGFzIGEgaGFyZCBkYXkuLiAKSXQgZ29lcyBiYWNrIHRvIHRoZSBkaXN0cmFjdGlvbi9pbnRpbWlkYXRpb24gZmFjdG9yLiAoRnVsbCBBbnN3ZXIpLiAKVGhlIFdTT1AgQ2lyY3VpdCdzIGJlbGllZiBpbiB0aGUgQ2xldmVsYW5kIG1hcmtldCBhcyBhbiBleGNpdGluZyBtYXJrZXQgdG8gaG9zdCBhIHNlY29uZCBXU09QIENpcmN1aXQgZXZlbnQgaW4gT2hpbywgaXQgaGFzIGJlZW4gZGV0ZXJtaW5lZCBhZnRlciBmdXJ0aGVyIGR1ZSBkaWxpZ2VuY2UgdGhhdCB0aGUgc3BhY2Ugb3JpZ2luYWxseSBjb25jZXB0dWFsaXplZCB0byBob3N0IGl0IHdpbGwgbm90IGJlIHN1ZmZpY2llbnQgZm9yIHRoZSBndWVzdCBleHBlcmllbmNlIHRoZSBwcm9wZXJ0eSBhbmQgdGhlIFdTT1AgYm90aCBkZXNpcmUgYW5kIHJlcXVpcmUsIGFjY29yZGluZyB0byB0aGUgbmV3cyByZWxlYXNlLiAoVGhlIHRvdXIgYWxyZWFkeSBoYXMgc3RvcHBlZCBpbiBDaW5jaW5uYXRpIHRoaXMgc2Vhc29uLikuIApUaGV5IGVhY2ggZXhwcmVzcyBjb25jZXJuIHRoYXQgdGhlIGZvY3VzIG9uIG1vbGVjdWxhciBiaW9sb2d5IGFuZCBtaWNyb3Njb3BpYyBsZXZlbHMgb2YgZGlzZWFzZSBpZ25vcmVzIG90aGVyIHNpZ25pZmljYW50IGZhY3RvcnMgYXNzb2NpYXRlZCB3aXRoIGhlYWx0aCBhbmQgaWxsbmVzcywgc3VjaCBhcyBwYXRpZW50IGF0dGl0dWRlLCBhbmQgdGhlIGhlYWxpbmcgcG90ZW50aWFsIG9mIGNhcmluZyBhbmQgZW1wYXRoeS4KVGhlbiBpdCBzaWduZWQgYSBkZWFsIHdpdGggSGFyZCBSb2NrLCBwbGFubmluZyBhICQzMjAgbWlsbGlvbiBwcm9qZWN0IGNvbXBsZXRlbHkgYXQgb2RkcyB3aXRoIGFsbCB0aGF0LiAKSGVyIHdvcmsgYXBwZWFycyBvbiBhIHZhcmlldHkgb2Ygc2l0ZXMsIGluY2x1ZGluZyBNb25leUNyYXNoZXJzLCBDaHJvbiwgR29CYW5raW5nUmF0ZXMgYW5kIDh0aCBXYWx0b24gTmV3cyBOb3cuLiAKRGVzcGl0ZSBoaXMgYWR2YW5jaW5nIHllYXJzLCBEb3lsZSBldmVuIGJlY2FtZSBza2lsbGVkIGF0IGludGVybmV0IHBva2VyICh3aXRob3V0IHF1aXRlIG1hdGNoaW5nIGhpcyBiZXR0aW5nIHN0YWtlcyBpbiB0aGUgcmVhbCB3b3JsZCkgYW5kIGFsc28gaGFzIGEgbGFyZ2UgZm9sbG93aW5nIG9mIGRldm90ZWQgcG9rZXIgZmFucyBvbiBUd2l0dGVyLi4gCjMuIEdlbmVzIGFyZSBOT1QgICBpbiBhbmQgb2YgdGhlbXNlbHZlcyAgIHRoZSBjYXVzZSBvZiBjaHJvbmljIGRpc2Vhc2UuCkxlZ2FsYWR2aWNlcXVlc3QgdQpKYWcgZ2pvcmRlIGVuIEdvb2dsZSBza25pbmcgb2NoIGtvbSB2ZXIgZGluIHdlYmJwbGF0cy4gRGV0IHZhciBwcmVjaXMgdmFkIGphZyBsZXRhZGUgZWZ0ZXIgb2NoIHZhciB1cHByeW1kIGF0dCBoaXR0YSBldHQgcyBicmV0dCB1dGJ1ZCBhdiBhcnRpa2xhci4gClRoZSBndWVzdCByb29tIGF0IG15IHBhcmVudHMgY2FiaW4gaGFkIGEgc21hbGwsIG9sZGVyIGJ1dCB2ZXJ5IGNsZWFuIGFuZCBhY3R1YWxseSBjb21mb3J0YWJsZSBmdWxsIHNpemUgYmVkLiBTaW5jZSBtZSBhbmQgbXkgaHVzYmFuZCB1c2UgdGhhdCByb29tIHRoZSBtb3N0IG9uIHdlZWtlbmQgc3RheXMgKHdlbGwgYm90aCB1cyBhbmQgdHdvIExhYnJhZG9yIHJldHJpZXZlcnMgdGhhdCBhcmUgZWFjaCA4MCBsYnMpIHdlIG5lZWRlZCBhIHF1ZWVuIHNpemUgdG8gc2xlZXAgY29tZm9ydGFibHkuIE15IG1vbSBzYWlkIHB1dCBpdCBvbiBDcmFpZ3NsaXN0IGZvciBsaWtlICQ1MCBhbmQgc2VlIGlmIGFueW9uZSBpbiB0aGUgbGl0dGxlIGxvY2FsIHRvd24gd2FzIGludGVyZXN0ZWQuIEEgZmFtaWx5IGNvbnRhY3RlZCBtZSBhbmQgbmVnb3RpYXRlZCB0aGUgcHJpY2UgZG93biB0byAkNDAgYW5kIHRoZW4gc2FpZCB0aGV5IHdlcmUgaGVhZGVkIG92ZXIgdG8gb3VyIGNhYmluIHRvIHBpY2sgaXQgdXAuClRoaXMgbmV0d29yayB3YXMgY3JlYXRlZCB0byBoZWxwIG1lbiAoZ2F5LCBiaSwgdHJhbnMsIHF1ZXN0aW9uaW5nIGFuZCBjdXJpb3VzKSBmaW5kIGFuZCBjb25uZWN0IHdpdGggcXVhbGlmaWVkIHByb2Zlc3Npb25hbCBtYXNzYWdlIHRoZXJhcGlzdHMsIFRhaSBDaGksIFFpIEdvbmcsIG1hcnRpYWwgYXJ0cywgUGlsYXRlcywgeW9nYSBpbnN0cnVjdG9ycywgY2hpcm9wcmFjdG9ycywgcGh5c2ljYWwgdGhlcmFwaXN0cywgb3N0ZW9wYXRocywgcGVyc29uYWwgdHJhaW5lcnMsIGZpdG5lc3MgaW5zdHJ1Y3RvcnMsIGRhbmNlIGluc3RydWN0b3JzLCBBY3VwdW5jdHVyaXN0cywgbnV0cml0aW9uaXN0cywgaGVyYmFsaXN0cywgYW5kIG90aGVyIHR5cGVzIG9mIGJvZHkgd29ya2VycywgdGVhY2hlcnMsIHRyYWluZXJzIGFuZCBoZWFsZXJzIHdpdGhpbiB0aGVpciBsb2NhbCBnYXkvYmkgY29tbXVuaXR5LgpUaGUgb3JnYW5pc2F0aW9uIHR3ZWV0ZWQ6ICJHb29kIHRoYXQgdGhlcmUgYmVlbiBhIGJhY2tsYXNoLiBMb2NhbCBmZW1pbmlzdCBncm91cHMgYXJlIGVzc2VudGlhbCBmb3IgZmlnaHRpbmcgdGhlc2UgbG9jYWwgZmlnaHRzIGFzIHdlbGwuIgpPbiB0aGUgYmVzdCBvZiBkYXlzLCBMeWFyaSBpcyBub3QgYSBwYXJ0aWN1bGFybHkgaG9wZWZ1bCBwbGFjZS4gU2FuZHdpY2hlZCBiZXR3ZWVuIE1hY2hoYXIgQ29sb255LCB3aGljaCByYW5rcyBhbW9uZyB0aGUgd29ybGQgbGFyZ2VzdCBnaGV0dG9lcywgYW5kIHRoZSBoZWFydCBvZiBLYXJhY2hpIGRlZXBseSB1bmRlciBzZXJ2aWNlZCBjZW50cmFsIGJ1c2luZXNzIGRpc3RyaWN0LCBMeWFyaSBpcyBhIGxvdCBmdXJ0aGVyIGZyb20gdGhhbiB0aGUgZGlzdGFuY2Ugd291bGQgc3VnZ2VzdC4gCkkgdGhvdWdodCB0aGUgZHJpdmluZyBwaHlzaWNzIHdlcmUgZnVuIGFuZCBhY3R1YWxseSBtYWRlIGdldHRpbmcgYXdheSBmcm9tIGNvcHMgZmVlbCByZXdhcmRpbmcsIGkgdGhvdWdodCB0aGUgRXVwaG9yaWEgZW5naW5lIHdhcyBvbmUgb2YgdGhlIG1vc3QgcmlkaWN1bG91c2x5IGFkZGljdGl2ZSBpbmNsdXNpb25zIGluIGFueSBnYW1lIGkgZXZlciBwbGF5ZWQgYW5kIGkgaGF0ZWQgdGhlIHdheSB0aGV5IG5lcmZlZCBpdCBpbiBWLCBhbmQgaSB0aG91Z2h0IHRoZSBzdG9yeSB3YXMgbm8gbW9yZSBpbnRydXNpdmUgdGhhbiBhbnkgb2YgUm9ja3N0YXIgZ2FtZXMuIApDaXR5IENvdW5jaWwgU3BlYWtlciBDb3JleSBKb2huc29uLCBhIERlbW9jcmF0LCBjYWxsZWQgdGhlIGluY2lkZW50ICJhcHBhbGxpbmcgYW5kIGhlYXJ0IGJyZWFraW5nLCIgYW5kIGNyaXRpY2l6ZWQgYm90aCB0aGUgcG9saWNlIGFuZCB0aGUgY2l0eSBhZ2VuY3kgd2hlcmUgSGVhZGxleSBoYWQgZ29uZSBmb3IgaGVscC4KT2theSBzbyB0aGUgZHVkZSBpcyBnYXkgYW5kIHRoZXkgYXNzdW1lIGhlIHN1Y2tzIGRpY2ssIGZpbmUgd2hhdGV2ZXIuCkkgd2VudCB1cCB0byB0aGUgcmVjcnVpdGVyLCBJIHNhaWQsICJTaXIsIEkgd2FudCB0byBraWxsLiBJIG1lYW4sIEkgd2FubmEsIEkgV2FubmEga2lsbC4gS2lsbC4gCkZhcnRpbmdwaWdsZXQgdQpXZSBkZWZpbml0ZWx5IHRocml2ZSBvbiBpbnN0YWJpbGl0eS5Ib3cgZG8geW91IHByYWN0aWNlIGFsbCB0aG9zZSBsaW5lcz9JIGFtIGN1cmlvdXMgYWJvdXQgYW55dGhpbmcgYW5kIGV2ZXJ5dGhpbmcuIApJZiBub3QgeW91IGNhbiBvZmZlciBvdGhlciB3YXlzIHRvIGRpZyAgIGNoaWxkcmVuIHNhbmRwaXRzIGZpbGxlZCB3aXRoIHNvaWwgb3IgY2hpbGRyZW4gcGxheSBzYW5kIGFyZSBnb29kLCBhbmQgeW91IGNhbiBlYXNpbHkgcHV0IHRoZW0gaW4gYSBzaGVsdGVyZWQgYXJlYSBvciBjb3ZlciB0aGVtIHdoZW4gbmVjZXNzYXJ5Li4gClRoZSBwbGF5ZXJzIGhhZCBhZ3JlZWQgdG8gYSBjaG9wLCBidXQgdGhlIHJlYnV5IHBlcmlvZCB3YXNuIG92ZXIgeWV0LCBzbyB0aGV5IHdlcmUgdG9sZCB0byB3YWl0IGl0IG91dC4gClRoZSBsYW5kIG9mIEVsdmlzLCBUb255IEJlbm5ldHQsIGFuZCBGcmFuayBTaW5hdHJhLCB0aGUgUmF0IFBhY2ssIEVsdG9uIEpvaG4sIEp1ZHkgR2FybGFuZCBhbmQgTGl6YSBNaW5uZWxsaS4gSXQgaGFzIGJlZW4gYSBsaWZlIGxvbmcgZHJlYW0gb2YgbWluZSB0byBwbGF5IExhcyBWZWdhcy4gSSBhbSBodW1ibGVkIHRvIGJlIGEgcGFydCBvZiBhIGhpc3RvcmljYWwgbGluZSB1cCBvZiBwZXJmb3JtZXJzLCBhbmQgdG8gaGF2ZSB0aGUgaG9ub3Igb2YgY3JlYXRpbmcgYSBuZXcgc2hvdyB1bmxpa2UgYW55dGhpbmcgVmVnYXMgaGFzIGV2ZXIgc2VlbiBiZWZvcmUuIApZZWFyIG9mIHRoZSBSb29zdGVyIGdhbGEgYm9vc3RzIGhvc3BpdGFsIEVSIGNhbXBhaWduCjMpIFBvc3RzIGZvY3VzZWQgb25seSBvbiBzZWxmIGFja25vd2xlZGdlbWVudCBvciBsaWZlIGV2ZW50cyBhcmUgbm90IGFsbG93ZWQgaW4gaW5kaXZpZHVhbCB0aHJlYWRzLiBTaGFyaW5nIGZvciB0aGUgc2FrZSBvZiBzaGFyaW5nIGlzIG5vdCBhbGxvd2VkIG91dHNpZGUgdGhlIGRhaWx5IEdlbmVyYWwgRGlzY3Vzc2lvbi9TZWxmIFByb21vdGlvbiB0aHJlYWRzLiAKOSkgIlRoZXNlIHJlcG9ydHMgcHJvdmlkZSBhIHJhdGlvbmFsZSBmb3Igdml0YW1pbiBEIHN1cHBsZW1lbnRhdGlvbiBpbiB0aGUgcHJldmVudGlvbiBvZiBjb2xkcyBhbmQgaW5mbHVlbnphLiIKV29ybXlkICAyIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCkl0IGEgcGlja2xlLCBidXQgSSBob3BlIHdlIGNhbiBnZXQgdGhyb3VnaCBpdCB3aXRob3V0IGJlaW5nIGlzb2xhdGVkIG9yIGZvcmNlZCBpbnRvIGJlaW5nIGJhbmtydXB0Li4gClRoZSBob2xpc3RpYyBzcGEsIGx1eHVyaW91cyBwb29sIGFuZCBpbnRpbWF0ZSBtZWV0aW5nIHNwYWNlIGNvbWJpbmVkIHdpdGggYSBzb3BoaXN0aWNhdGVkIHZpYmUgYXQgQmFyIFZkYXJhIGFuZCBhIGNhc3VhbCBlYXRlcnkgYW5kIG1hcmtldHBsYWNlIGF0IE1hcmtldCBDYWYgY3JlYXRlIGEgd2FybSBhbmQgaW52aXRpbmcgZW52aXJvbm1lbnQgd2l0aGluIHRoaXMgQUFBIEZvdXIgRGlhbW9uZCBob3RlbC4KVGhlIEpXIE1hcnJpb3R0IEhvdGVsIGZlYXR1cmVzIG92ZXIgMzAwIGV4cXVpc2l0ZSBndWVzdCByb29tczsgaW5jbHVkaW5nIDQ0IHN1aXRlcywgMyBsdXh1cnkgc3VpdGVzIGFuZCBhIHR3byBmbG9vciB2aWxsYS4gClRoZSBhYnNlbmNlIG9mIEdvb2dsZSdzIHNlcnZpY2VzIG1pZ2h0IGRpc2NvdXJhZ2UgdGhlIGRldmVsb3BtZW50IG9mIG90aGVyIEFuZHJvaWQgZXF1aXBwZWQgcGhvbmVzIGZvciBDaGluYSdzIG1hcmtldCwgbGltaXRpbmcgY3VzdG9tZXIgY2hvaWNlcyBhbW9uZyBhIG5ldyBicmVlZCBvZiBtb2JpbGUgZGV2aWNlcyBmYXN0IGdhaW5pbmcgcG9wdWxhcml0eSBpbiBvdGhlciBwYXJ0cyBvZiB0aGUgd29ybGQsIGhlIHNhaWQuClRyb3kgS2VlcGluZywgU291dGhsYW5kJ3MgcHJlc2lkZW50IGFuZCBnZW5lcmFsIG1hbmFnZXIsIHNheXMgU291dGhsYW5kIGlzIGJ1Y2tpbmcgYSBuYXRpb25hbCB0cmVuZCwgZGVzY3JpYmluZyBpdHMgdHJhY2sgYXMgYSAidmVyeSB2aWFibGUsIHByb2ZpdGFibGUgcmFjaW5nIGJ1c2luZXNzLiIgQnV0IHNvbWUgdHJhY2sgb3duZXJzIGxpa2UgQ2Flc2FycyBFbnRlcnRhaW5tZW50LCB3aGljaCBvcGVyYXRlcyB0aGUgQmx1ZmZzIFJ1biBHcmV5aG91bmQgUGFyayBpbiBDb3VuY2lsIEJsdWZmcywgSW93YSB3YW50IHRvIGdldCBvdXQgb2YgdGhlIGRvZyBidXNpbmVzcy4gCkl0IGRvZXNuIGNoYW5nZSBhbnl0aGluZyB0aGF0IHlvdSBhcHBhcmVudGx5IHRoaW5rIGl0IHdvdWxkIGJlY2F1c2UgaXQgb25seSBjaGFuZ2VzIHRoZSBiZWdpbm5pbmcuIFN0YXJ0aW5nIGFzIGEgUHJpc29uZXIgZG9lc24gImxpbWl0IiBhbnl0aGluZyBtb3JlIHRoYW4gYmVpbmcgYSBzaGlwd3JlY2sgdmljdGltIGRvZXMsIGJlY2F1c2UgeW91IGtub3cgeW91IGdvaW5nIHRvIGJlIGV4cGxvcmluZyB2ZXJ5IHNvb24gYW55d2F5Li4gClRoaXMgaGFwcGVuZWQgaW4gQ2FuYWRhLiAKVG8gYXNzdXJlIHN1Y2Nlc3MsIHlvdSBuZWVkIHRvIGhhdmUgbm90IG9ubHkgYSBwb3dlcmZ1bCBjb2xvciBncm91cCBidXQgYWxzbyB0d28gb3IgdGhyZWUgcmFpbHJvYWRzIHRvIGdlbmVyYXRlIGluY29tZSBhbmQgYSBmZXcga2V5IHByb3BlcnRpZXMgdG8gYmxvY2sgdGhlIGZvcm1hdGlvbiBvZiBnYW1lIGJ1c3RpbmcgZ3JvdXBzIGFnYWluc3QgeW91LiAKQ3VycmVudGx5LCB0aGUgZmVkZXJhbCBCdXJlYXUgb2YgUHJpc29ucyBtYWludGFpbnMgdGhlIG5hdGlvbidzIGhpZ2hlc3QgbnVtYmVyIG9mIHBlb3BsZSBtYW5hZ2VkIHVuZGVyIHByaXZhdGUgcHJpc29uIGN1c3RvZHkuIENoYW5nZXMgaW4gcG9saWN5IGF0IHRoZSBEZXBhcnRtZW50IG9mIEp1c3RpY2UgaW4gMjAxNyB0aGF0IGFyZSBsaWtlbHkgdG8gaW5jcmVhc2Ugc2VudGVuY2UgbGVuZ3RoIGFuZCBleHBhbmQgcHJvc2VjdXRpb25zIGZvciBkcnVnIGFuZCBpbW1pZ3JhdGlvbiBvZmZlbnNlcyBtYXkgY29udHJpYnV0ZSB0byB0aGUgZXhwYW5zaW9uIG9mIHByaXZhdGUgZmFjaWxpdHkgY29udHJhY3RpbmcuLiAKU2xlZXAgYW5kIFBhaW4gc2Vuc2l0aXZpdHkgRXVyIEogUGFpbiAyMDExCk1heWJlIHdlIGNhbiBqdXN0IHNlbmQgdGhlIE1CQXMsIHRoZSBNb3J0Z2FnZSBCYW5rZXJzLCBhbmQgYWxsIG9mIFdhbGwgU3RyZWV0IHRvIHJlIGVkdWNhdGlvbiBjYW1wcz8gSG93IGFib3V0IGluIHRoZSBibGlnaHRlZCBuZWlnaGJvcmhvb2RzIHdoZXJlIHRoZXkgYXJlIG1ha2luZyBtb25leSBvZmYgb2Ygc29tZSBvZiBBbWVyaWNhIG1vc3Qgc3RydWdnbGluZyBjaXRpemVucz8gSSBoZWFyIHRoZXJlIHNvbWUgY2hlYXAgcmVhbCBlc3RhdGUgIGVhc2lseSBjb3ZlcnRlZCBpbnRvIEV0aGljcyBmb3IgQmFua2VycyBhbmQgT3RoZXIgQ3JpbWluYWxzIENlbnRlcnMuCk15IGRhdWdodGVyIGlzIHRoZSBzYW1lIGFnZSBhcyBPUCdzIGFuZCBkb2VzIHRoZSBzYW1lIHRoaW5nLiAKVG9ta28gcXVpdCB0ZWFjaGluZyBhbmQgYmVjYW1lIGEgd29ybGQgY2xhc3MgcG9rZXIgcGxheWVyLiBCdXQgbm93IGFsbCBoZSBjYW4gdGhpbmsgb2YgaXMgZ2V0dGluZyBiYWNrIHRvIEZsb3JpZGEgdG8gcGxheSBiYXNlYmFsbCB3aXRoIGhpcyB0aHJlZSBzb25zLiBJcyB0aGF0IHdoeSBoZSBsb3N0IHRvZGF5PyBIZSdzIHdvcnJpZWQgdGhhdCBoZSBpc24ndCB3b3JyaWVkLCBhbm90aGVyIGdvb2QgbWFuIGdvbmUgd3JvbmcuLiAKSW4gdGhlIHBhc3QgdHdlbnR5IHllYXJzLCBBbWVyaWNhbnMgaGF2ZSByZXR1cm5lZCB0byBhbiBlYXJsaWVyIHNleG9sb2d5IG5vdGlvbiBvZiBkZXNpcmUuIApUaGFua3MgZm9yIGhlbHBpbmcgdG8ga2VlcCAvci9sYXdmaXJtIGFzIHJlbGV2YW50LCB1c2VmdWwgYW5kIHNwYW0gZnJlZSBhcyBwb3NzaWJsZS4uIApMZXdpcyBhbmQgZmF0aGVyIEZ1bHRvbiBzaGVlbiB3aGVuIHRoZXkgY3JpdGljaXplIHRoZSBwb3B1bGFyIChhdCB0aGUgdGltZSkgZmFzY2luYXRpb24gd2l0aCBEYXJ3aW5pc20gb3IgRnJldWQgdGhlaXIgY2F1dGlvbiBpcyBhZ2FpbnN0IGV4cGVjdGluZyBzY2llbmNlIHRvIGV4cGxhaW4vZml4IGFsbCBvZiB0aGUgaHVtYW4gY29uZGl0aW9uLiBBbmQgdGhleSB3ZXJlIHJpZ2h0IHRvIGRvIHNvLCBjb25zaWRlcmluZyBob3cgdGhlIE5hemlzIGluY29ycG9yYXRlZCBtaXNpbnRlcnByZXRlZCBzY2llbmNlIGludG8gdGhlaXIgaWRlYWxzIGFuZCBob3cgdGhlIHNvdmlldHMganVzdGlmaWVkIGF0cm9jaXRpZXMgZm9yIHRoZSBncmVhdGVyIGdvb2QgdGhyb3VnaCBjb2xkLCByYXRpb25hbCBjYWxjdWx1cy4gVGhhdCdzIHdoYXQgdGhleSBtZWFuIHdoZW4gdGhleSB0YWxrIGFib3V0IHRoZSBkYW5nZXIgb2YgbWFraW5nIGh1bWFuIHJhdGlvbmFsaXR5IG9yIHNjaWVudGlmaWMgcHJvZ3Jlc3MgYW4gaWRvbC4gCldlIGFyZW4gc28gbXVjaCBvZmZlbmRlZCBvciBhd2t3YXJkIGFib3V0IGFueXRoaW5nIGluIHBhcnRpY3VsYXIsIGJ1dCBvZmZlbmRlZCBhbmQgYXdrd2FyZCBhYm91dCBwb3RlbnRpYWxseSBmZWVsaW5nIG9mZmVuZGVkIGFuZCBhd2t3YXJkLiAKSSBzdXBwb3NlIHlvdSBtZWFuLCBhdCBsZWFzdCBvbmUgb2YgdGhvc2UgbnVtYmVycy4gSnVzdCBjYWxjdWxhdGUgdGhlIHByb2JhYmlsaXR5IG9mIE5PVCBnZXR0aW5nIGFueSBvZiB0aG9zZSwgYW5kIHRha2UgdGhlIGNvbXBsZW1lbnQuIFRoZSBwcm9iYWJpbGl0eSBvZiBub3QgZ2V0dGluZyBhIG9uZSBub3IgYSBmaXZlIG9uIGEgc2luZ2xlIGRpZSBpcyA0LzYgb3IgMi8zLiAKOSlDdXN0b20gbWFkZSBnZW1zdG9uZSBsb2NrZXQgICBub3RoaW5nIHNheXMgJ2Jlc3Bva2UnIGxpa2UgbWFraW5nIHlvdXIgZ2lmdCByZWNpcGllbnQgdHJhdmVsIHRvIEdlcm1hbnkgd2l0aCBqZXdlbGxlciBNb25pY2EgUmljaCAoc2hhbGxvdyBsYXVnaCkgS29zYW5uIHRvIHNlbGVjdCB0aGUgZ2Vtc3RvbmUgeW91J2QgbGlrZSB0byBtYWtlIHlvdXIgb3duIG5lY2tsYWNlLiBXaHkgR2VybWFueT8gV2h5IGNhbid0IHNoZSBlbWFpbCBvdmVyIHNvbWUgb3B0aW9ucz8gV2h5IGNhbid0IHNvbWVvbmUgc3BlbmQgODUsMDAwIHRvIHNlbmQgbWUgdG8gcGljayBhIGdlbXN0b25lIGluIEdlcm1hbnk/LiAKV2hvZXZlciBoYXMgdGhlIFJveWFsIEZsdXNoIGF1dG9tYXRpY2FsbHkgd2lucy4gCkRpc3BhdGNoIGNoaW1lIGNhbWUgdGhyb3VnaCB0aGVpciBzcGVha2VyIGFuZCByZW1pbmRlZCB0aGVtIG9mIHRoZWlyIG1pc3Npb24sIGJ1dCBpdCBjb3VsZCBoYXZlIGJlZW4gYXV0b21hdGVkIGZvciBhbGwgc2hlIGtuZXcsIHRoZXkgaGVhcmQgdGhlIHNhbWUgdGhpbmcgc28gbWFueSB0aW1lcy4gT25jZSBpdCBlbmRlZCB0aGV5IGRyb3ZlIG9uIGZvciBhIGxvbmcgdGltZSwgb25seSBzcGVha2luZyB3aGljaCBkaXNwYXRjaCBuZWVkZWQgdGhlaXIgcm91dGluZSB1cGRhdGVzLi4gCkl0IHdhcyB1bmNsZWFyIHdoZXRoZXIgYXBwcm9wcmlhdGUgc3RlcHMgd2VyZSB0YWtlbiB0byByZWR1Y2UgcmV2aWV3ZXIgZXJyb3IgYW5kIGJpYXMgaW4gdGhlIHJldmlldyBwcm9jZXNzLiAKVHJpZWQgaXQgYWdhaW4gYW5kIGFsc28gZGlkIGEgMmsgcnVuIGF0IGEgcmVkdWNlZCBzcGVlZC4gSSB0aGluayBpdCBzb21ldGhpbmcgSSBjb3VsZCBnZXQgdXNlZCB0byBidXQgSSBkb24gdGhpbmsgSSBldmVyIGJlIGFibGUgdG8gcnVuIGFzIGhhcmQgYXMgaW4gc2hvZXMuIApJZiB0aGUgYmFsbCB3YXMga2VwdCBlYWNoIHRpbWUsIGluIHRoZSBwcmVtaWVyIGxlYWd1ZSBhbG9uZSB0aGF0IHdvdWxkIGJlIDEwIGJhbGxzIFggMjAgdGVhbXMgWCAzOCBnYW1lcyBYIDYgc2Vhc29ucyA9IDQ1LDYwMCBiYWxscy4gRGl2aWRlIGJ5IDIgdG8gYWNjb3VudCBmb3IgdGhlIHRlYW1zIHBsYXlpbmcgZWFjaCBvdGhlciwgcmVzdWx0IGlzIDIyLDgwMCBiYWxscyBpbiBzaXggc2Vhc29ucy4gQ291bGQgdGhlc2UgcmljaCBjbHVicyBhbmQgTmlrZSBhZmZvcmQgdG8gbG9zZSB0aGF0IG1hbnkgYmFsbHM/IFllYWggcHJvYmFibHkuIApUaGVyZSB3YXMgaG9wZSBvZiBjb21wcm9taXNlIHRoaXMgc3VtbWVyIGR1ZSB0byB0aGUgZWZmb3J0IG9mIHN0YXRlIEFzc2VtYmx5bWFuIEFkYW0gR3JheSAoRCBNZXJjZWQpLCB3aG8gc3Bva2UgdG8gMTBOZXdzIGluICJDaGVjayBvciBCZXQiLiBXaGVyZWFzIERlbCBNYXIgaGFkIHByZXZpb3VzbHkgdG9sZCAxME5ld3MgaXQgd291bGQgbm90IHN1cHBvcnQgbGVnYWxpemF0aW9uIHVubGVzcyBpdCB3YXMgYWxsb3dlZCB0byBsYXVuY2ggYSBwb2tlciBzaXRlLCBHcmF5IG5lZ290aWF0ZWQgYSBkZWFsIGluIHdoaWNoIHRyYWNrcyB3b3VsZCBhZ3JlZSBub3QgdG8gcGFydGljaXBhdGUgZGlyZWN0bHkgaW4gb25saW5lIHBva2VyIGluIGV4Y2hhbmdlIGZvciBhIGxhcmdlIGFubnVhbCBwYXlvdXQgZnJvbSBwb2tlciByZXZlbnVlcy4gSG93ZXZlciwgdGhlIGlzc3VlIG9mIFBva2VyU3RhcnMgcGFydGljaXBhdGlvbiB1bHRpbWF0ZWx5IGVuZGVkIHRoZSBjaGFuY2VzIG9mIEdyYXkncyBiaWxsIHBhc3NpbmcgdGhpcyB5ZWFyLCBhbmQgdWx0aW1hdGVseSBsZWQgdG8gYSBzdXJwcmlzaW5nIHJldmVyc2FsLi4gCk1hc3VyZWthciBiZWxpZXZlcyB0aGF0IGtpbmQgb2YgaGlnaCB0ZWNoIHBsYXkgd2lsbCBhdHRyYWN0IG1pbGxlbm5pYWxzLCB3aG8gdGVuZCB0byB3YW50IHRvIGJlIG1vcmUgc29jaWFsIGFuZCBjb25uZWN0ZWQuIFBsYXllcnMgY2FuJ3QgYmUgb24gdGhlaXIgc21hcnRwaG9uZXMsIHN0YW5kaW5nIGFyb3VuZCBhIHJvdWxldHRlIHdoZWVsLCBoZSBzYWlkLiAiVGhhdCdzIGEgZ3JlYXQgbW92ZSBieSBKYWNrLCIgaGUgc2FpZC4gIlRoZSByYWNpbm9zIGFyZW4ndCBhbGxvd2VkIHRvIGRvIHRoYXQuIFN0YWRpdW0gc2VhdGluZyBpcyB0aGUgZnV0dXJlIGZvciB0aGUgZ2FtaW5nIGluZHVzdHJ5LiIKRXQgcXVlbCBib25oZXVyIHRvdXRlIGNldHRlIGFubmUgZCdlbiBwYXJsZXIsIGRlIGxlIHByc2VudGVyLCBkZSByZW5jb250cmVyIGRlcyBwZXJzb25uZXMgaW50cmVzc2VzLCBkJ2F2b2lyIGRlcyByZXRvdXJzIGNoYWxldXJldXggZXQgcGFyZm9pcyB0cnMgbW91dmFudHMuIApJdCBwZWFrZWQgYXQgbnVtYmVyIHRocmVlIGluIERlY2VtYmVyLCBidXQgdGhlcmUgd2FzIG5vIGNoYXJ0IHRoZSBmb2xsb3dpbmcgd2VlayBiZWNhdXNlIG9mIHRoZSBDaHJpc3RtYXMgaG9saWRheXMuIFRoZSBzb25nIGRpZCByZWFjaCAxIG9uIHNvbWUgcmVnaW9uYWwgY2hhcnRzLiAKUmVwdWJsaWNhbiBQYXJ0eSBsZWFkZXIgUGF1bCBJbmdyYW0gcGxlYWRlZCBndWlsdHkgdG8gc2l4IGNvdW50cyBvZiByYXBpbmcgaGlzIGRhdWdodGVycyBhbmQgc2VydmVkIDE0IHllYXJzIGluIGZlZGVyYWwgcHJpc29uLgpJbSBOQVNBIFdldHRiZXdlcmIgdW0gZGllIHNjaG5zdGUgQXVmbmFobWUgZGVyIEVyZGUgYXVzIGRlbSBBbGwgaGF0IHNpY2ggZWluIEJpbGQgZGVyIEthbmFyZW4gaW4gZGVuIGxldHp0ZW4gV29jaGVuIFJ1bmRlIHVtIFJ1bmRlIG5hY2ggdm9ybmUgZ2VzY2hvYmVuIHVtIHNlaXQgaGV1dGUgaW0gRmluYWxlIGRlcyBXZXR0YmV3ZXJicyBFYXJ0aCAyMDE0IHp1IHN0ZWhlbiwgaW4gZGVtIGRpZSBiZXN0ZW4gRm90b2dyYWZpZW4gYXVzIGRlbSBKYWhyIDIwMTMgZ2V3aGx0IHdlcmRlbi4gCkNCQyBNYXJnYXJldCBHYWxsYWdoZXIgYW5kIHlvdXJzIHRydWx5IHNlcnZlZCBhcyBtYXN0ZXIgb2YgY2VyZW1vbmllcy4gU3Rha2VzIHdlcmUgaGlnaCBhcyBwbGF5ZXJzIGNvbXBldGVkIGZvciBicmFnZ2luZyByaWdodHMgYW5kIGNvdmV0ZWQgYWlybGluZSB0aWNrZXRzIHdpdGggV2VzdEpldCBhbmQgUGFjaWZpYyBDb2FzdGFsIEFpci4KRGlhZ25vc3RpYyBhcHByb2FjaGVzIG1heSBsYWNrIHRoZSByZXNvbHV0aW9uIHRvIGRldGVjdCB0aGUgbWljcm9zdHJ1Y3R1cmFsIGNoYW5nZXMgdGhhdCBjYW4gb2NjdXIgaW4gdGhlIGZhY2V0IGNhcHN1bGUgd2l0aG91dCBvdmVydCBjYXBzdWxlIHJ1cHR1cmUgYWZ0ZXIgYSB3aGlwbGFzaCBleHBvc3VyZS4iClRoYXQgbWF5IGJlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gc21hbGwgZG9ncyBhbmQgYmlnIG9uZXMuLiAKVGhlbiwgYm90aCBvZiBteSBmbGdodHMgd2VyZSBwcmFjdGNhbGx5IGVtcHR5ISBJIGhhZCBhIHdob2xlIHJvdyBvZiBzZWF0cyB0byBBbXN0ZXJkYW0gYW5kIGFub3RoZXIgcm93IHRvIElzdGFuYnVsLiAKSG93ZXZlciwgb25jZSB0aGUgYmFzaWNzIGFyZSBtYXN0ZXJlZCwgb25lIGNhbiBlYXNpbHkgbGVhcm4gdGhlIGhpZ2ggcm9wZXMgdGhyb3VnaCBjb250aW51b3VzIHByYWN0aWNlIGFuZCBleHBvc3VyZS4uIApCdXQgaWYgd2UgZ28gcmVhbCBmYXN0IHRoZW4gcmVsYXRpdml0eSB3aWxsIG1lYW4gdGhlIHNpZ25hbHMgc2VlbSB0byB0YWtlIGxlc3MgdGltZSBmcm9tIG91ciBwZXJzcGVjdGl2ZS4gSWYgd2Ugd2VyZSBmbHlpbmcgOTAlIG9mIHRoZSBzcGVlZCBvZiBsaWdodCwgdGhlbiBpdCB3b3VsZCBiZSAxLzNyZCBvZiAxNiBtaW51dGVzICJwaW5nIiBiZXR3ZWVuIHVzLCBmcm9tIG91ciBwZXJzcGVjdGl2ZS4KSW1hZ2luZSBob3cgbWFueSBtb3JlIHRoZXJlIGFyZSB0aGF0IHdlIGRvbid0IGtub3cgYWJvdXQuLiAKSSB3b3JrZWQgYXQgYSBzcGEgdGhhdCB1c2VkIHRvIHJlcXVpcmUgaXRzIHRoZXJhcGlzdHMgdG8gc3RhY2sgc2hlZXRzIChsb2FkaW5nIHVwIGEgdGFibGUgd2l0aCA0IHNoZWV0cywgcmlwcGluZyBvZmYgMiBhZnRlciB0aGUgZmlyc3QgY2xpZW50LCBzbyB0aGUgMm5kIGNsaWVudCdzIHNoZWV0cyBhcmUgYWxyZWFkeSBvbiB0aGVyZSBhbmQgcmVhZHkgdG8gZ28pIGZvciBhIHF1aWNrZXIgcm9vbSBmbGlwIGJldHdlZW4gY2xpZW50cy4gSSB0aG91Z2h0IGl0IHdhcyBuYXN0eSBhbmQgaGF0ZWQgaXQuIApCaW5nZXIgZG9lc24ndCBtaW5kIGdhbWJsaW5nLCBwZXIgc2UsIGJ1dCBoZSBsZWFybmVkIHRoZSBwaXRmYWxscyBvZiBibGFja2phY2sgYXMgYW4gdW5kZXJncmFkdWF0ZSwgd2hlbiBoZSB3cm90ZSBhIGNvbXB1dGVyIHByb2dyYW0gdG8gYmVhdCB0aGUgZ2FtZSB0aHJvdWdoIGNhcmQgY291bnRpbmcgKG9yLCBhcyB0aGUgY2FzaW5vcyBsaWtlIHRvIGNhbGwgaXQsICJjaGVhdGluZyIpIGZvciBoaXMgc2VuaW9yIHByb2plY3QuIFRoZW4gaGUgdHJpZWQgdG8gcHV0IGhpcyBzdHJhdGVneSBpbnRvIHByYWN0aWNlLiAKTm8gYnJvbnplIGlzIG5vdCBhbiBlbGVtZW50LiAiQ3JlYXRpbmciIGFuIGVsZW1lbnQgaXMgbm90IGFuIGVhc3kgdGhpbmcgdG8gZG8uIApBcmUgbm90IGxvY2tlZCBpbnRvIGEgY29udHJhY3QgbGlrZSB5b3UgYXJlIHdpdGggY2VsbHBob25lIG9yIHJlbnRhbCBhZ3JlZW1lbnRzLiAKSSBwbGF5IGFsbW9zdCBhbGwgbXkgdm9sdW1lIG9ubGluZS4gU28gdGhpcyB3YXMgdGhlIGZpcnN0IGxpdmUgdG91cm5hbWVudCBJIHBsYXllZCBpbiBhYm91dCA0IG1vbnRocy4gVGhlIHN0cnVjdHVyZSBvZiB0aGUgdG91cm5hbWVudCBpcyBzdWNoOgpIb3cgdG8gQnV5IHRoZSBSaWdodCBTaG9lcwpUbyBtYWtlIG1hdHRlcnMgZXZlbiBtb3JlIGRpZmZpY3VsdCB0byBmaWd1cmUgb3V0LCB0aGVyZSBhcmUgYSB2YXJpZXR5IG9mIHBlcnNvbnMgdGFraW5nIGhvcm1vbmVzIGZvciBhIHZhcmlldHkgb2YgcmVhc29ucyAgZnJvbSBiaXJ0aCBjb250cm9sIHRvIGEgZGVzaXJlIHRvIGJlIG1vcmUgIm1hc2N1bGluZSIgb3IgbW9yZSAiZmVtaW5pbmUuIiBvdGhlciB3b3JkcywgYmV0d2VlbiBpbnRlcnNleGVkIGJvZGllcywgdHJhbnNnZW5kZXJlZCBib2RpZXMsIGFuZCBoeXBlcmdlbmRlcmVkIGJvZGllcywgaG93IGFyZSB3ZSBzdXBwb3NlZCB0byBmaW5kIGEgbmljZSBzZXBhcmF0aW9uIGJldHdlZW4gbWFsZSBhbmQgZmVtYWxlIGluIHRoZSBmdXR1cmUgd2hlbiB0aGF0IHNlcGFyYXRpb24gd2FzIGFsd2F5cyBmYXIgZnJvbSBzdGFibGU/LiAKSWYgeW91IHdhbnQgdG8gYmUgbWFraW5nIG1vdmVzIGFsbCB0aGUgdGltZSBhbmQgZG9pbmcgbG90cyBvZiBjb29sIHRoaW5ncywgeW91IHdpbGwgbGlrZWx5IGVuZCB1cCBqdXN0IGJlaW5nIGJlc3QgaGFuZGVkIGJ5IGEgYnVuY2ggb2Ygbml0cy50YWtlIGEgbG9vayBhdCBtb3N0IGxvYmJpZXMuIFBsYXllcnMvZmxvcCBhbmQgYXZlcmFnZSBwb3RzIGFyZSBhcyBsb3cgYXMgdGhleSBoYXZlIGV2ZXIgYmVlbi4gCkhvd2V2ZXIsIGF0IHRoaXMgcG9pbnQgeW91IGhhdmUgZ2l2ZW4gdG9vIG11Y2ggaW5mb3JtYXRpb24gYW5kIHRoZXkgd2lsbCBibG93IHVwIGFueSBwaG9uZSBudW1iZXIgeW91IGhhdmUgZ2l2ZW4gd2l0aCBjYWxscyBmcm9tIGV2ZXJ5IHRlbGVtYXJrZXRlciBvbiB0aGUgcGxhbmV0LCBzbyBpZiB5b3UgZ2l2ZSB0aGVtIHlvdXIgY2VsbCBwaG9uZSBudW1iZXIsIHlvdSdyZSBzY3Jld2VkLiBJbiBzaG9ydCwgYXQgdGhlIHZlcnkgbGVhc3QsIGl0J3Mgbm90IHdvcnRoIHRoZSBlZmZvcnQgYW5kIGhlYWQgYWNoZS4gClRoZXJlIGFyZSBhbHNvIGF1dG9tYXRpYyBoYW5kZ3VucywgbWFnYXppbmVzIGNhbiBoYXZlIGFsbCBtYW5uZXIgb2Ygc2l6ZXMgb2YgZXh0ZW5kZWQgbWFnYXppbmUsIHdoaWNoLCBhcmUgZGlmZmljdWx0IHRvIGFxdWlyZSwgdGhvdWdoIG5vdCBpbXBvc3NpYmxlLCBhbmQgb2Z0ZW4gdGhlIGxhcmdlc3QgcGlzdG9sIG1hZ2F6aW5lcyBob2xkIG1vcmUgdGhhbiBhIHJpZmxlIG1hZ2F6aW5lLi4gClRpbGRlcyBpcyBvd25lZCBieSBTcGVjdHJpYSwgYSBDYW5hZGlhbiBub24gcHJvZml0LCBzbyB0aGUgZmluYW5jaWFscyBhcmUgYSBtYXR0ZXIgb2YgcHVibGljIHJlY29yZCAodGhlIDIwMTggZmluYW5jaWFscyBhcmUgb3ZlcmR1ZSBpZiB5b3UgbG9vaywgaXQgYmVpbmcgZmlsZWQgbm93LCBubyBpZGVhIHdoZW4gdGhlIGdvdiB3aWxsIGdldCB0aGVtIHVwKS4gCk1vb3R5Z3JpbWVzIHUKSmVkZXMgZGVyIDUgQXBwYXJ0ZW1lbnRzIHZlcmZndCBiZXIgZWluZSBUZXJyYXNzZSBvZGVyIHp1bWluZGVzdCBlaW5lbiBCYWxrb24gdW5kIGVzIGdpYnQgdmllbCBQbGF0eiBydW5kIHVtcyBIYXVzIHVuZCBkZW4gUG9vbCwgdW0gZGllIFNvbm5lIHVuZCBkaWUgUnVoZSB6dSBnZW5pZWVuLiAKIkhlIGltbWVkaWF0ZWx5IHdlbnQgYW5kIHRhbGtlZCB0byB0aGVpciBzdGF0ZSBnb3Zlcm5tZW50IGNoYWlyLCBhbmQgb2J2aW91c2x5IHRoZSBzYW1lIGNvbnZlcnNhdGlvbiB3YXMgZ29pbmcgb24gb3ZlciBvbiB0aGUgU2VuYXRlIHNpZGUuIEFuZCBhIG51bWJlciBvZiB0aGUgcmVhbGx5IG9iamVjdGlvbmFibGUgYXNwZWN0cyB3ZXJlIGFkZHJlc3NlZCBiZWZvcmUgdGhlIGZpbmFsIGJpbGwgd2FzIHBhc3NlZCwiIFdoZWVsb2NrIHJlY2FsbHMuICJCZWNhdXNlIGl0IG1heSB3ZWxsIGhhdmUgcmVzdWx0ZWQgaW4gYSB2ZXRvIG9mIHRoYXQgYmlsbCwgYW5kIGlmIHRoYXQgYmlsbCBpcyB2ZXRvZWQsIGl0IHByb2JhYmx5IHdvdWxkbid0IGhhdmUgYmVlbiB0aGUgb25seSBiaWxsLiIKQ291cnNlLCB0aGUgb3JwaGFucyBpbiBxdWVzdGlvbiBhbGwgc2VlbSB0byBoYXZlIGhhZCBwYXJlbnRzIGFuZCB0aGUgcGFyZW50cyB3ZXJlIHRvbGQgdGhlaXIgY2hpbGRyZW4gd2VyZSBiZWluZyB0YWtlbiB0byBhIHNjaG9vbCB0byBiZSBlZHVjYXRlZC4gCldoYXQgc29uZ3MgaGFzIExhZHkgR2FnYSB3cml0dGVuPwpJIHdvdWxkIGJlIGNvbnRlbnQgdG8gaGF2ZSB0aGVtIGFzIGEgc3Ryb25nIG9wcG9uZW50LCBidXQgZXZlbiB0aGF0IGRpZG4gd29yayBvdXQgaW4gbXkgZ2FtZXMuIApCbHRydm5zOSAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwooU2VhcmNoaW5nIG9ubGluZSBmb3IgbW9yZSBpZiB5b3UgYXJlIHNvIGludGVyZXN0ZWQgc2hvdWxkIHlpZWxkIG1vcmUpLiAKTXkgZWF0aW5nIHNjaGVkdWxlIGNoYW5nZWQgZHJhc3RpY2FsbHksIG15IGZpcnN0IG1lYWwgZHVyaW5nIHRoZSBzY2hvb2wgd2VlayB3b3VsZCBiZSBhdCAzcG0gZXZlcnlkYXkuIApUaGUgYmVzdCB0aGluZyB5b3UgY2FuIGRvIGlzIGxpbmUgdXAgd2hhdCB0aGUgRU9CIHNheXMgaXMgeW91ciByZXNwb25zaWJpbGl0eSBhbmQgdGhlbiBjb21wYXJlIHRoYXQgd2l0aCB0aGUgYmlsbCBmcm9tIHRoZSBwcm92aWRlci4gCkdEUCB3b3VsZCBiZSAkMS4yIHRyaWxsaW9uIGxhcmdlciwgYW5kIDcuOSBtaWxsaW9uIG1vcmUgQW1lcmljYW5zIHdvdWxkIGhhdmUgam9icy4gCkhvdyBkbyB5b3UgZGVsZXRlIGEgcG9rZXIgYnVkeSBmcm9tIFp5bmdhIFRleGFzIGhvbGRlbT8KV2hlbiBhbGwgdGhlIGZsb3dlcnMgYW5kIG9pbCBhcmUgb3V0IG9mIHRoZSBqYXIsIHRoZW4geW91IGNhbiBwdXQgaXQgYXdheSBmb3Igd2FzaGluZyB1cC4gCkluIHRoZSBzdG9yeSwgdGhlIHJlbnRlcnMgdGVsbCB0aGF0IHRoZXkgaGF2ZSBiZWVuIHRoZXJlIGZvciBhIGNvdXBsZSBvZiBtb250aHMsIGFuZCB0aGUgb2ZmaWNpYWwgY29tbWVudHMgdGhhdCB0aGV5IGNhbm5vdCBwdXJzdWUgYW55dGhpbmcgd2l0aCBhIGxvbmdlciByZW50YWwgcGVyaW9kIHRoYW4gOCB3ZWVrcy4uIApUaGUgUGFudGhlcnMgdG9vayBhIDMgMCBsZWFkIG9uIHNldmVuIHNob3RzIGluIHRoZSBmaXJzdCBwZXJpb2QuIFRoZXkgd2VudCB1cCAxIDAgb24gSHViZXJkZWF1IGdvYWwgNjEgc2Vjb25kcyBpbi4gQmFya292IHBhc3NlZCBmcm9tIGJlaGluZCB0aGUgbmV0IHRvIEh1YmVyZGVhdSBpbiBmcm9udCBhbmQgaGUgc2tpcHBlZCB0aGUgcHVjayBpbnRvIHRoZSBuZXQuCkxvb2tpbmcgZm9yIGEgbGFzdCBtaW51dGUgQ2hyaXN0bWFzIGdpZnQgKGFuZCBob3BpbmcgdG8gYXZvaWQgdGhlIGJpZyBib3ggc3RvcmVzKT8gR2V0IHRoZSB1bmlxdWUgU2hhbmthcmEgQXl1cnZlZGljIHNraW4gY2FyZSBsaW5lJ3MgTWljcm9jcnlzdGFsIEV4Zm9saWF0aW9uIFRyZWF0bWVudCBhcyBhIHN0b2NraW5nIHN0dWZmZXIuCldoYXQgaGFwcGVucyB3aGVuIHNvbWUgZ292ZXJubWVudCBjbGFpbXMgdGhhdCBjb2lucyB0aGF0IGJlbG9uZyB0byBJU0lTIHNob3VsZCBiZSBmcmVlemVkPyBZb3UgdGhpbmsgYW55Ym9keSB3b3VsZCBkaXNhZ3JlZT8gQW5kIHdoYXQgaGFwcGVucyBhZnRlciB0aGF0PyBPbmNlIHlvdSBvcGVuIHRoZSBjYW4gb2Ygd29ybXMsIHRoZXJlIGlzIG5vIGdvaW5nIGJhY2suLiAKRWNob2VkIHRoYXQgYWR2aWNlLiBJdCB0byB0aGUgcHJvcywgc2FpZCBEci4gCkl0IG5vdCBwc3ljaG9hY3RpdmUuIFF1aXRlIGhvbmVzdGx5LCBldmVuIGlmIGl0IHdlcmUgcHN5Y2hvYWN0aXZlLCBEcmF2ZXQgU3luZHJvbWUgZGVzdHJveXMgcXVhbGl0eSBvZiBsaWZlLCBhbmQgdGhhdCB0aGUgYmVzdCBjYXNlIHNjZW5hcmlvLiAKRG9uIG1pc3Rha2Ugc2tlcHRpY2lzbSBmb3IgdGhlIHVuZGVyc3RhbmRpbmcgdGhhdCByZXBlYXRlZCBsaWdodG5pbmcgc3RyaWtlcyBnZXQgcmFyZXIgYW5kIHJhcmVyLCBlc3BlY2lhbGx5IHdoZW4gaXQgaXMgYXR0ZW1wdGVkIGJ5IHRoZSBzYW1lIHBlcnNvbiB2YXN0bHkgZGlmZmVyZW50IGZpZWxkcy4gSSBsb29rIGZvcndhcmQgdG8gYmVpbmcgcHJvdmVuIHdyb25nLgpEaWUgaW4gZGllc2VtIEFydGlrZWwgdmVyd2VuZGV0ZSBHcmFmaWsgd3VyZGUgbWl0IEhpbGZlIGRlcyBSZWNvcmRlcnMgdm9uIFBva2VyIEhhbmQgUmVwbGF5cyBlcnN0ZWxsdC4KV2UgaG9wZSB0aGF0IHRoZSB1bmNvbmRpdGlvbmFsIG9mZmVyIHdpbGwgZGVtb25zdHJhdGUgdG8gdGhlc2Ugb3V0c3RhbmRpbmcgc3R1ZGVudHMgb3VyIGNvbmZpZGVuY2UgdGhhdCB0aGV5IGhhdmUgdGhlIG5lY2Vzc2FyeSBxdWFsaXRpZXMgdG8gZXhjZWwgdGhyb3VnaCBvbmUgb2Ygb3VyIGRlZ3JlZSBwcm9ncmFtbWVzLiAKQWZ0ZXIgdGhlIGZpcnN0IGJldHRpbmcgcm91bmQgaXMgY29tcGxldGUsIGFub3RoZXIgZmFjZSB1cCBjYXJkIGlzIGRlYWx0IHRvIGVhY2ggcGxheWVyIChhZnRlciBhIGJ1cm4gY2FyZCwgc3RhcnRpbmcgd2l0aCB0aGUgcGxheWVyIHRvIHRoZSBkZWFsZXIncyBsZWZ0LCBhcyB3aXRoIGFsbCBzdWJzZXF1ZW50IHJvdW5kcykuIEJldHRpbmcgbm93IGJlZ2lucyB3aXRoIHRoZSBwbGF5ZXIgd2hvc2UgdXBjYXJkcyBtYWtlIHRoZSBiZXN0IHBva2VyIGhhbmQgKHNpbmNlIGZld2VyIHRoYW4gZml2ZSBjYXJkcyBhcmUgZmFjZSB1cCwgdGhpcyBtZWFucyBubyBzdHJhaWdodHMsIGZsdXNoZXMsIG9yIGZ1bGwgaG91c2VzKS4gCkFydGljbGVzIGFib3V0IGEgcmVjZW50IHRvcGljIG1heSBiZSByZW1vdmVkIGlmIHRoZXkgZG8gbm90IGNvbnRyaWJ1dGUgZW5vdWdoIG5ldyBpbmZvcm1hdGlvbi4gQWxzbywgZG9uIGFzayBxdWVzdGlvbnMgdGhhdCBjb3VsZCBiZSBhbnN3ZXJlZCBieSBhIHNlYXJjaCBlbmdpbmUuLiAKSW4gb25lIG9mIHRoZSB2aWRlb3Mgb2YgdGhlIGFycmVzdCwgYSBtYW4sIGFza2luZyB0byBiZSBraWxsZWQsIHN0YW5kcyBieSBhIGRhbWFnZWQgd2hpdGUgcmVudGFsIHZhbiBhbmQgcG9pbnRzIGEgZGFyayBvYmplY3QgdG93YXJkcyB0aGUgb2ZmaWNlci4gVGhlIG9mZmljZXIgcmVmdXNlcyB0byBzaG9vdCBhbmQgcmVwZWF0ZWRseSB5ZWxscyBmb3IgdGhlIG1hbiB0byBnZXQgZG93bi4KVGhlbiwgSSBnb3QgdG8gc2Nob29sIGFuZCBzdHVkaWVkIHBvbGl0aWNhbCBzY2llbmNlIGFuZCBidXNpbmVzcy4gSSBkZWNpZGVkIHRvIHdyaXRlIHBhcGVycyBmcm9tIGEgY29uc2VydmF0aXZlIHZpZXdwb2ludC4gQnV0LCBpdCB3YXMgcmVhbGx5IGhhcmQgdG8gZG8sIGJlY2F1c2UgaXQncyByZWFsbHkgaGFyZCB0byBmaW5kIGFueSBkYXRhIHRoYXQgYmFja3MgdXAgY29uc2VydmF0aXZlIGJ1bGxzaGl0LiAKQ2hlY2sgaW4gaXMgYXQgNzowMCBhbmQgdGhlIGRhdGluZyBiZWdpbnMgYXQgNzoyMC4gCkJyYTFuU3R1cmdlb24gdQpUaGVyZSBhcmUgdHdvIHRyZWF0bWVudHMgdGhhdCB5b3UgY2FuIGNyZWF0ZSB1c2luZyB0aGVzZSBpdGVtcy4gCk1hc3NhZ2UgT2lscyBBbmQgTG90aW9uIFB1cmNoYXNlIGFuIGFzc29ydG1lbnQgb2YgbWFzc2FnZSBvaWxzIGFuZCBsb3Rpb25zIHRvIGFpZCB5b3UgYXMgeW91IG1hc3NhZ2UgeW91ciBjbGllbnRzLiBUcnkgc2NlbnRzIHRoYXQgYXJlIGtub3duIHRvIHByb3ZpZGUgYSBjYWxtaW5nIGVmZmVjdHMsIHN1Y2ggYXMgY2lubmFtb24sIGxhdmVuZGVyLCBzYW5kYWx3b29kLCBjaGFtb21pbGUsIGphc21pbmUsIHJvc2UgYW5kIFlsYW5nIFlsYW5nLiBXaXRoIHRoaXMgdmFyaWV0eSwgeW91IGNhbiBnaXZlIGNsaWVudHMgdGhlIG9wdGlvbiB0byBzZWxlY3QgdGhlIHNjZW50cyB0aGV5IHdhbnQgdXNlZCBkdXJpbmcgdGhlaXIgbWFzc2FnZXMuCkNsZXZlciBjYXNpbm8gcGxheWVycyB1c3VhbGx5IHRyeSB0byByZWFsaXplIHRoZWlyIGNhc2lubyBib251c2VzIHF1aWNrbHkgICBzb21lYm9keSBzdGFrZXMgdGhlIGVudGlyZSBhbW91bnQgb24gY2hhbmNlcywgaW4gdGhlIGhvcGUgdG8gZG91YmxlIGl0IChqdXN0IGltYWdpbmUsIHlvdSBzdGFrZSBhbGwgJDIwMCBvbiBjaGFuY2VzLCB3aXRoIGEgcHJvYmFiaWxpdHkgb2YgNDklIHlvdSdsbCB3aW4gbmVhdCAkMjAwLCB3aXRoIGEgcHJvYmFiaWxpdHkgb2YgNTElIHlvdSdsbCBsb3NlIHlvdXIgJDEwMCBhbmQgJDEwMCBvZiB0aGUgYm9udXMsIHRoYXQgaXMgdG8gc2F5LCBhIHN0YWtlIGhhcyBwb3NpdGl2ZSBtYXRoIGV4cGVjdGFuY3kgZm9yIHlvdSAkMjAwMCw0OSAkMTAwMCw1MT0kNDcpLCBzb21lIGNhc2lubyBwbGF5ZXJzIHVzZSBwcm9ncmVzc2l2ZSBzdHJhdGVnaWVzIG9mIE1hcnRpbmdhbGUgdHlwZS4gCk5hdHVyZSdzIFJvb3QgYWxzbyBzYXlzIHRoZSBDQkQgb2lscyBoYXZlIGRlZXBlciBwZW5ldHJhdGlvbiBvZiB0aGUgbXVzY2xlIGFuZCB0aGUgZWZmZWN0cyBsYXN0IGxvbmdlciB0aGFuIHRyYWRpdGlvbmFsIG1hc3NhZ2Ugb2lsLgpKb2luIGEgbG9jYWwgc3BvcnQgdG8gbWVldCBwZW9wbGUgd2l0aCBzaW1pbGFyIGludGVyZXN0cy4gVGhpcyBpcyBhIGdyZWF0IHdheSB0byBmaWxsIHVwIGVtcHR5IHdlZWtlbmRzLCBlc3BlY2lhbGx5IGlmIHlvdSBlbmpveSBzcGVuZGluZyB0aW1lIHdpdGggcGVvcGxlLiAKSWRrIGFib3V0IHRoZSBzdHVkeSBidXQgSSBsaWtlIG1lbiB3aG8gYXJlIGFzIHNtYXJ0IG9yIHNtYXJ0ZXIuIApUaGUgYmFieSBhbmQgaGVyIHBhcmVudHMgZ2l2ZSBtZSBob3BlLiBUaGV5IHJlbWluZCBtZSB0aGF0IGV2ZW4gbXkgZGFya2VzdCBtb21lbnRzIGRvbid0IGhhdmUgdG8ga2VlcCBtZSBmcm9tIGRvaW5nIHNvbWV0aGluZyBhbWF6aW5nLiBJJ20gaG9waW5nIGl0J3Mgc29tZXRoaW5nIExpdHRsZSBDLiB3aWxsIGtlZXAgaW4gbWluZCwgd2hhdGV2ZXIgY29tZXMgaGVyIHdheS4KVGhleSBjYW4ganVzdCBhcyBlYXNpbHkgZmluZCBnb29kIHJvbGUgbW9kZWxzIGluIHdoaXRlIG1lbi4gCkkgYW0gYSB2ZXJ5IGNoYXR0eSBwZXJzb24gYW5kIHRyeSB0byB0YWxrIGFuZCBrZWVwIHRoZSB0YWJsZSBsaXZlbHkgbW9yZSBvZnRlbiB0aGVuIG5vdCwgYnV0IHRoZXJlIGFyZSBnb2luZyB0byBiZSBzdHJldGNoZXMgb2YgdGltZSB3aGVyZSBJIGxvb2sgbGlrZSB0aGUgbXV0ZSBkaWNrIGluIGEgaG9vZGllIHJvY2tpbmcgaGlzIEFpciBQb2RzLiBJZiBwZW9wbGUgd2VyZSBnb29kIGVub3VnaCB0aGF0IHRoZXkgaGFkIG5vIHJlYXNvbiB0byBkb3VidCB0aGVyZSBwbGF5LCB0aGV5IHdvdWxkbiBiZSBwbGF5aW5nIDEvMy4uIApDbGVhbiB1cCB5b3VyIHNoaXQuIApDbGljayBvbiB0aGUgbGV2ZXIgdG8gdGhlIEZlcnJpcyB3aGVlbC4gU3RlcCAxOiBDbGljayBvbiB0aGUgZmlyc3QgYm9sdCBpbiB0aGUgcm9sbGVyIGNvYXN0ZXIgU3RlcCAyOiBDbGljayBvbiB0aGUgc2lsdmVyIGJ1bXBlciBjYXIgU3RlcCAzOiBDbGljayBvbiB0aGUgYmx1ZSBidW1wZXIgY2FyICh0aGV5IHNob3VsZCBzdGljayB0b2dldGhlciBub3cuIApBcyBwb2xpdGljYWwgZGVjaXNpb25zIG9uIHRoZSBmYXRlIG9mIHRoZSBjaXR5IHB1YmxpYyB0cmFuc2l0IGxvb20sIGVmZm9ydHMgdG8gY2FydmUgdXAgdGhlIGJ1cyByYXBpZCB0cmFuc2l0IHBsYW4gcmFpc2UgYSBsYXJnZXIgcXVlc3Rpb246IElmIEJSVCBmYWxscywgZG9lcyB0aGUgTG9uZG9uIFBsYW4gZ28gd2l0aCBpdD8KVGhlIHBlb3BsZSBhcmUgdGhlIGZyaWVuZGxpZXN0IGFuZCBtb3N0IGhlbHBmdWwgeW91IGV2ZXIgbWVldC4gVGhleSB3YW50IHRvIGtub3cgeW91IGFuZCB3YW50IHlvdSB0byBrbm93IHRoZWlyIHN0b3J5IGFuZCB3aGF0IGluY3JlZGlibGUgc3RvcmllcyB0aGV5IGhhdmUgdG8gdGVsbC4gSXQgdGhlIGVkZ2Ugb2YgdGhlIHdvcmxkIGJ1dCBpdCBmZWVscyBsaWtlIGEgd2hvbGUgZGlmZmVyZW50IG9uZS5JZiB5b3UgZG8gbWFrZSBpdCB1cCBiZSBzdXJlIHRvIHByZXBhcmUgdGhvcm91Z2hseSBhbmQga25vdyBob3cgdG8gZHJpdmUgb24gZ3JhdmVsIHJvYWRzIHRoYXQgc2hpZnQgYW5kIGNoYW5nZSBkYWlseS4gClRoZSBHb29kd2lsbCBvbiBDaGFybG90dGUgUGlrZSBpcyBwcmV0dHkgZ29vZCB0b28uIEFuZCBJIGRvbiBrbm93IGlmIHRoZSBTb3V0aGVybiBUaHJpZnQgaXMgc3RpbGwgb3V0IHRoYXQgd2F5IGJ1dCBJIGFsc28gaGFkIGdvb2QgbHVjayBhdCB0aGF0IG9uZS4uIApBY3R1YWxseSBtYXJpYWNoaSByZWFwZXIgZml0cyBwZXJmZWN0bHkuIE9rIHRoZW9yeSB0aW1lLiBTbyBpbiA3NiBiYWNrc3RvcnkgdmlkZW8gaGUgc2F5cyB0aGF0IGhlICJodW50aW5nIHRob3NlIHdobyBicm91Z2h0IE92ZXJ3YXRjaCBkb3duIi4gCkkgZW5kZWQgdXAgZ2V0dGluZyBhY2NlcHRlZCBpbnRvIGxhdyBzY2hvb2wgaW4gbXkgaG9tZSBzdGF0ZSBhbmQgaW4gYW5vdGhlciBzY2hvb2wgb3V0IG9mIHN0YXRlLiAKKFRoYW5rIGdvb2RuZXNzLCB0aGUgR2lhbnRzIGFubm91bmNlZCB0aGF0IEZyZWQgTGV3aXMgaXMgcGxheWluZyB3aXRoIGEgcGFpbmZ1bCBidW5pb24gYW5kIG5lZWRzIGRheXMgb2ZmIG9uIG9jY2FzaW9uLiBPdGhlcndpc2UsIHdlIGZhbnMgd291bGQgYmUgYW5ncnkgZXZlcnkgdGltZSB3ZSBzZWUgRGF2ZSBSb2JlcnRzIHN0YXJ0IGluIGxlZnQgZmllbGQpLi4gCldlIHNob3VsZCBpbnNpc3Qgb24gYSBjYW5jZWxsYXRpb24gb2YgYWxsIG91ciBBbWVyaWNhbiBkZWJ0IGFuZCBpbnNpc3Qgb24gbXVjaCwgbXVjaCBtb3JlIHRoYW4gdGhlIHBpdHRhbmNlIG5vdyBnb2luZyB0aHJvdWdoIHRoZSBVUyBDb25ncmVzcy4gV2hhdCBpZiB0aGUgSW5kaWFuIGxvYmJ5IG9uIHRoZSBIaWxsIGZsZXhlcyBpdHMgbXVzY2xlcz8gV2Ugc2hvdWxkIHR1cm4gYXJvdW5kIGFuZCBhc2sgaXQgdG8gZmlnaHQgdGhlIGJhdHRsZSBvZiBBZmdoYW5pc3RhbiBvbiBpdHMgb3duLiBUaGlzIHNob3VsZCBub3QgbWVhbiBlbmRpbmcgdGhlIGZpZ2h0IGFnYWluc3QgdGhlIFRhbGliYW4uIFRoYXQgd2UgY2Fubm90IGFmZm9yZCBiZWNhdXNlIHRoZSBhbHRlcm5hdGl2ZSBpcyB1bnRoaW5rYWJsZS4gQnV0IGl0IHNob3VsZCBjZXJ0YWlubHkgbWVhbiBkb2luZyB0aGluZ3Mgb24gb3VyIG93biBhbmQgY3V0dGluZyB0aGUgQW1lcmljYW4gcHJlc2VuY2UgaW4gUGFraXN0YW4gZG93biB0byBzaXplLiBUaGUgQW1lcmljYW5zIGFyZSBvbnRvIGEgZ29vZCB0aGluZy4gVGhleSB3YW50IHRvIGVhdCB0aGVpciBjYWtlIGFuZCBoYXZlIGl0IHRvby4gV2Ugc2hvdWxkIGJlIHByZXNzaW5nIG91ciBvd24gcG9pbnQgb2Ygdmlldy4KIkFuZCBJIGRpZG4ndCBrbm93IHF1aXRlIGhvdyBpdCB3YXMgZ29pbmcgdG8gdHVybiBvdXQsIHJlYWxseS4gSSB3YXNuJ3Qgc3VyZSBleGFjdGx5IHdoYXQgZGlyZWN0aW9uIEkgd2FzIGdvaW5nIGluLCBidXQgSSBrbmV3IEkgZGlkbid0IHdhbnQgdG8ganVzdCByZXBlYXQgbXlzZWxmLiBBbmQgYSBjaGFuY2UgbWVldGluZyB3aXRoIGEgbWFuIGNhbGxlZCBTdGV2ZSBSb2Jzb24gW3RoZSBuZXcgYWxidW0ncyBwcm9kdWNlcl0gZW5kZWQgdXAgd2l0aCBoZSBhbmQgSSB3cml0aW5nIHRoZSBmaXJzdCBzb25nIG9uIHRoaXMgYWxidW0sIGNhbGxlZCAnRGFuZ2Vyb3VzLicgQW5kIGl0IHdhcyBsaWtlIGEgbmF2ZSB0ZWVuYWdlciBwaWNraW5nIHVwIGhpcyBmaXJzdCBlbGVjdHJpYyBndWl0YXIsIGFuZCBpdCBzb3VuZGVkIHJlYWxseSBmdW4uIEFuZCBJIHNhaWQsICdZb3Uga25vdyB3aGF0PyBDYW4gSSBjb21lIGluIHRvbW9ycm93PyBDYW4gd2UgcmVjb3JkIHRoZSBkZW1vPyBBbmQgdGhlIGRlbW8gc291bmRlZCBncmVhdCwgdG9vLiBBbmQgSSBzYWlkLCAnSGV5LCB5b3Uga25vdyB3aGF0PyBJIHdhbnQgdG8gcHVyc3VlIHRoaXMgYSBiaXQgZnVydGhlci4gQW5kIHRoYXQgY2hhbmNlIG1lZXRpbmcsIHRoZSBkYXlzIHR1cm5lZCBpbnRvIHdlZWtzLCB0dXJuZWQgaW50byBtb250aHMgYW5kIG92ZXIgYSB5ZWFyIGxhdGVyLCAnU29tZSBLaW5kIG9mIFRyb3VibGUnIHdhcyBkb25lLiIKSWxsdW1pbmF0aW9uLCBkaXN0b3J0aW9uIGZyZWUgb3B0aWNzIGFuZCBoYW5kc2ZyZWUgY29udmVuaWVuY2UuIFBlcmZlY3QgZm9yIHlvdXIgcHVyc2UsIHRoaXMgVGVuc29yIG1hZ25pZnlpbmcgY29zbWV0aWMgbWlycm9yIGlzIGEgbXVzdCBoYXZlIGZvciBhbnkgbWFrZXVwIG1hdmVuISBOb3cgYXBwbHkgeW91ciBtYWtldXAgaW4gY29vbCBjb21mb3J0IGJlY2F1c2UgdGhlIGZsdW9yZXNjZW50IGJ1bGIgbmV2ZXIgZ2V0cyBob3QuIApCdXQgaGUgaXMgYWxzbyBpbmNyZWRpYmx5IGltbWF0dXJlIGZvciBoaXMgYWdlIGFuZCB0cmllcyBhYnNvbHV0ZWx5IGFueXRoaW5nIHRvIGdldCBhIHJpc2Ugb3V0IG9mIHlvdS4gSGUgd2lsbCBjYWxsIG91dCBzdHVmZiBsaWtlICJ3aGF0IGlzIGFuIG9yZ2FzbT8iLGV0Yy4gCkkga25vdyBzZXZlcmFsIHBlb3BsZSB3aG8ganVzdCBkaWRuIHdhbnQgdGhlaXIgbW90aGVycyB0byBzZWUgdGhlbSBsaWtlIHRoYXQuIEZvciBhIGxvdCBvZiBwZW9wbGUsIGl0IGRvZXNuIGhhdmUgYWxsIHRoYXQgbXVjaCB0byBkbyB3aXRoIHRoZSByZWxhdGlvbnNoaXAgYW5kIG11Y2ggbW9yZSB0byBkbyB3aXRoIHRoZSBwcmVnbmFudCB3b21hbiBwZXJzb25hbCBjb21mb3J0IGxldmVscy4uIApJIHRoaW5rIHNoZSBmaW5kcyBpdCBvZmZlbnNpdmUgdGhhdCBJIHdvbiBjaGFuZ2UgbXkgbGFzdCBuYW1lLiAKVGhlcmUgd2FzIGFuIG9waW5pb24gcGllY2UgeWVzdGVyZGF5IGluIHRoZSBveiBzdXBwb3J0aW5nIGEgYmlnIEF1c3RyYWxpYSBmcm9tIGltbWlncmF0aW9uIGFuZCB0aGUgMi41IG1pbGxpb24gZXh0cmEgcGVvcGxlIGluIFN5ZG5leSBpbiB0aGUgbmV4dCBmZXcgZGVjYWRlcy4KSWYgdGhlIHBob25lIGZpbmRzIGEgZ29vZCBMVEUgc2lnbmFsLCBpdCB3aWxsIHBlcmZvcm0gYSB0cmFja2luZyBhcmVhIHVwZGF0ZSBwcm9jZWR1cmUgYW5kIHJlIGVzdGFibGlzaCB0aGUgYmVhcmVycyBmb3IgZGF0YSBmbG93Li4gCkFsc28sIGlmIGl0IGFueSBjb21mb3J0LCBkYXRhIHNob3dzIGNoaWxkIHBvcm4gdmlld2VycyAodGhhdCBnZXQgYnVzdGVkKSB0aGF0IGhhdmUgbm8gcHJpb3Igc2V4IGFidXNlL2NoaWxkIG1vbGVzdGF0aW9uIHJlbGF0ZWQgY2hhcmdlcyBhbG1vc3QgbmV2ZXIgcGVycGV0cmF0ZSBvbiBpbmRpdmlkdWFsIGNoaWxkcmVuLiBDaGlsZCBwb3JuIHZpZXdlcnMgdGhhdCBoYXZlIG5ldmVyIGdvbmUgYmV5b25kIGJlaW5nIHZpZXdlcnMgdGVuZCB0byBzdGF5IHRoZXJlLiAKVGhpcyBvZiBjb3Vyc2UgZG9lc24ndCBpbmNsdWRlIGZvbGQgZXF1aXR5LCBhbG9uZyB3aXRoIG1hbnkgb3RoZXIgZmFjdG9ycy4gCllvdSBwbGF5aW5nIGNoZXNzLiBIZSBzdHJpa2VzIHVwIGEgY29udm8uICJIZXkgbWFuLCBJIFBzaW9uLiBJdCBtZWFucyBvZiBHb2QgWW91IGZ1Y2sgd2l0aCBhbmltZT8gT2ssIGNvb2wuIFNlZW4gQXBwbGVzZWVkPyBJdCBhYm91dCBhIHNlY3JldCBzb2NpZXR5IG9mIGNlbGVzdGlhbCBNYXNvbnMgd2lwaW5nIGh1bWFuIG1pbmRzIHRvIGNyZWF0ZSBhcnRpZmljaWFsIGh1bWFucy4gQW5kcm9pZHMuIFRoZWlyIGJvZGllcyBmdW5jdGlvbiBhcyBiYXR0ZXJpZXMgdG8gcG93ZXIgdGhlIEZCSSBwcm9ncmFtIGtub3duIGFzIGNvaW50ZWxwcm8uIE1ha2Ugc2Vuc2U/IE9oLCBjaGVja21hdGUuIgpGb3IgdGhyZWUgc3RyYWlnaHQgbW9udGhzLlRoZXkgcmVmdXNlZCB0byBldmVuIGFuc3dlciBjdXN0b21lciBzdXBwb3J0IHRpY2tldHMgZm9yIG1vbnRocy4gCkNoaW5lc2UgVHVpbmEgKCBtYXNzYWdlIHByYWN0aXRpb25lcnMgaWRlbnRpZnkgcGF0aHdheXMgd2l0aCBsaW1pdGVkIGZsb3cgYW5kIHVzZSBoYW5kIHByZXNzdXJlIHRvIHJlc3RvcmUgaGFybW9ueSBhbmQgZW5lcmd5IGNpcmN1bGF0aW9uLlRoaXMgc2VtaW5hciBhaW1zIHRvIGludHJvZHVjZSB0aGUgdGhlcmFwZXV0aWMgYmVuZWZpdHMgb2YgVHVpbmEgbWFzc2FnZSBhbmQgZXhwbGFpbiBob3cgaXQgaGVscHMgYmFsYW5jZSBvdXIgaGVhbHRoIGhvbGlzdGljYWxseS4gRnJvbSAyMDE0IDIwMTYsIGhlIHdvcmtlZCBhcyBhIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUgKFRDTSkgZG9jdG9yIGFuZCB0YXVnaHQgcmVndWxhciBjb3Vyc2VzIGF0IExvbmRvbiBTb3V0aCBCYW5rIFVuaXZlcnNpdHkgQ2xpbmljLCB3aGVyZSBDaGluZXNlIE1lZGljaW5lIGlzIGJlaW5nIHRhdWdodCBhcyBhIGRlZ3JlZSBwcm9ncmFtbWUsIGFjY3JlZGl0ZWQgYnkgdGhlIEJyaXRpc2ggQWN1cHVuY3R1cmUgQWNjcmVkaXRhdGlvbiBCb2FyZC5NciBDaGFvIFlhbiBpcyBhIHF1YWxpZmllZCBsaWNlbnNlZCBUQ00gcHJhY3RpdGlvbmVyIHdpdGggc2lnbmlmaWNhbnQgZXhwZXJpZW5jZSBpbiB0cmVhdGluZyBiYWNrIHBhaW4sIGluc29tbmlhIGFuZCBzdHJva2Ugc2VxdWVsLiAKQWN0dWFsbHkgdGhpcyBpcyB3cm9uZy4gVGhhdCB3YXMgdGhlIGZvcmVjYXN0IG9mIEJvZWluZyBhbmQgQWlyYnVzIGZvciB0aGUgZnV0dXJlLiAKQm9keSBzdG9wcyBidXJuaW5nIGZhdC4gVGhpcyB3b24gYmUgYSBjb25jZXJuIGFzIGxvbmcgYXMgeW91IGhhdmUgYSBkZWZpY2l0LiBJZiB5b3Ugc3RhcnQgZmVlbGluZyBzbHVnZ2lzaCwgdGlyZWQsIGNyYW5reSwgc3VwZXIgaHVuZ3J5LCBvciBsYXppZXIgdGhhbiB1c3VhbCwgdGhvdWdoLCB0aGVzZSBhcmUgc2lnbnMgdGhhdCB5b3VyIGJvZHkgaXMgdHJ5aW5nIHRvIHNsb3cgeW91IGRvd24gdG8gY29tcGVuc2F0ZSBmb3IgdGhlIGxvd2VyIGVuZXJneSBpbnRha2UgYW5kIG1heSBiZSBhIHNpZ24gdG8gYnVtcCB1cCB5b3VyIGNhbG9yaWVzIGEgdG91Y2guIDIgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ28KQnV0IG5vbmUgaW4gVVMgQmlsbGJvYXJkLiBXaGljaCBpcyBhIG1ham9yIGZhaWwuIChGdWxsIEFuc3dlcikuIApJbnNnZXNhbXQga29ubnRlbiBzbyAyLjUwMCwwMCBFdXJvIGZyIGRlbiBTY2h1dHogZGVzIFVuZXNjbyBXZWx0bmF0dXJlcmJlcyBnZXNhbW1lbHQgd2VyZGVuLiBEZW4gZ3JvZW4gU2NoZWNrLCBkZXIgc2ljaCBzZWhyIGJlciBkaWUgU3BlbmRlIGZyZXV0ZS4gTWl0IGRlbSBLYXVmIGRlciBMb3NlIGtvbm50ZW4gZGllIEdzdGUgYWJlciBuaWNodCBudXIgR3V0ZXMgdHVuLCBzb25kZXJuIGF1Y2ggU2NobmVzIGdld2lubmVuLiAKTG9jYXRlZCBpbiBub3J0aGVhc3Rlcm4gU291dGggQ2Fyb2xpbmEsIGFsb25nIGEgc3RyZXRjaCBvZiBiZWFjaCB0aGF0IGV4dGVuZHMgYXMgZmFyIGFzIHRoZSBleWUgY2FuIHNlZSwgdGhpcyB2YWNhdGlvbiByZXNvcnQgZGVzdGluYXRpb24gZmVhdHVyZXMgYSB3aWRlIHJhbmdlIG9mIGxvZGdpbmcgb3B0aW9ucyB0aGF0IHdpbGwgYWNjb21tb2RhdGUgYW55IHRyYXZlbGVyIGJ1ZGdldCwgZnJvbSBsb3cgY29zdCBjYW1wc2l0ZXMgYW5kIGFmZm9yZGFibGUgdmFjYXRpb24gcmVudGFscyB0byBmYW1pbHkgZnJpZW5kbHkgaG90ZWxzIHdpdGggd2F0ZXIgcGFya3MgYW5kIHJlYXNvbmFibHkgcHJpY2VkIDQgc3RhciBob3RlbHMuIApNb3JzZSBoYXMgZGV2aXNlZCBhIGJyaWRnZSB3aGljaCBwZXJtaXRzIG9mIGEgbXVjaCBsaWdodGVyIGNvbnN0cnVjdGlvbiB0aGFuIGEgbm9ybWFsIHN1c3BlbnNpb24gYnJpZGdlIGFuZCBpcywgY29uc2VxdWVudGx5LCBtdWNoIGNoZWFwZXIgdG8gYnVpbGQuIE1yIE1vcnNlIHByb2plY3QgcHJvdmlkZXMgZm9yIHRyYW5zcG9ydGF0aW9uIGFjcm9zcyB0aGUgcml2ZXIgaW4gYSBnaWFudCBwbGF0Zm9ybSwgc3VzcGVuZGVkIGJ5IG1lYW5zIG9mIGNhYmxlcyBmcm9tIGEgdHJvbGxleSBydW5uaW5nIHVwb24gYSBnYW50cnkgYWNyb3NzIHRoZSByaXZlci4gTWVhc3VyaW5nIDQwIFggMTYwIGZlZXQsIHRoZSBwbGF0Zm9ybSBoYXMgdHdvIHN0b3JpZXM6IHRoZSB0b3AgZmxvb3IgaXMgZm9yIHBlZGVzdHJpYW5zIHdoaWxlIHRoZSBib3R0b20gZGVjayBpcyBpbnRlbmRlZCBmb3IgaG9yc2VzIGFuZCBjYXJyaWFnZXMuIApJZiB5b3UgYXJlIGEgYmVnaW5uZXIgYW5kIHdhbnQgdG8gYmVjb21lIFBSTyB0aGlzIHdlYnNpdGUgaXMgZm9yIHlvdS4gCkl0IGFsc28gd2lsbCBiYWNrIGluIHRvIGNvbnZlbnRpb25hbCBwYXJraW5nIHNwYWNlLi4gCkFsb25nIHRoZSBzYW1lIGxpbmVzLCBKb24gU25vdyBkaWRuJ3QgZG8gZW5vdWdoIHRvIHN0b21wIG91dCBkaXNzZW50IHdoZW4gaGUgd2FzIGhlYWQgb2YgdGhlIE5pZ2h0J3MgV2F0Y2ggYW5kIGdvdCBzdGFiYmVkIHRvIGRlYXRoIGZvciBpdDsgdGhhbmtmdWxseSBoZSBsZWFybmVkIGhpcyBsZXNzb24gYW5kIGV4ZWN1dGVkIGFsbCBvZiB0aGVtIHdoZW4gaGUgY2FtZSBiYWNrLkRvY21jZG9uYWxkICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnb1RoZSByZWFsIHJlYWwgcHJvYmxlbSB3YXMgaGUgdGhvdWdodCBoZSBoYWQgdGhlIGNpdHkgd2F0Y2ggaW4gaGlzIHBvY2tldCB2aWEgTGl0dGxlRmluZ2VyIGFuZCBkaWRuIEV2ZW4gTmVkIHdhc24gbmFpdmUgZW5vdWdoIHRvIHRoaW5rIHRoYXQgYSBwaWVjZSBvZiBwYXBlciB3b3VsZCBob2xkIGFueSB3ZWlnaHQgb25jZSBSb2JlcnQgZGllZC4gCklmIG9ubHkgd2UgaGFkIGxlYWRlcnMgaW4gdGhlIFVTIGFuZCBSdXNzaWEgd2hvIHdlcmUgaW50ZXJlc3RlZCBpbiBkaXBsb21hdGljIGdvYWxzIHN1Y2ggYXMgYSBtb3JlIHBlYWNlZnVsIHdvcmxkLiBJbnN0ZWFkLCB3ZSBoYXZlIGEgc2xpZ2h0bHkgbW9yZSBzdHlsaXNoIGFuZCBjaGFybWluZyB2ZXJzaW9uIG9mIER1YmJ5YSBhbmQgUHV0aW4gKHdlbGwsIE9iYW1hIG1vcmUgc3R5bGlzaCBhbmQgY2hhcm1pbmc7IE1lZHZlZGV2IG5vdCBzbyBtdWNoKS4gCkluIHRyYWRpdGlvbmFsIGZsdW9yb3Njb3B5LCB0aGUgZGV0ZWN0b3IgaW5zdGVhZCB3b3VsZCBiZSBmbHVvcmVzY2VudCBtYXRlcmlhbCB0aGF0IGdsb3dzIHdoZW4gdGhlIHggcmF5cyBoaXQgaXQsIGFuZCB5b3Ugd291bGQgY2FzdCBhIHNoYWRvdyB0aGF0IGlzIGRhcmsuIApXZWlobmFjaHRza3JpcHBlbiBoYWJlbiBlaW5lIGdyb2UgVHJhZGl0aW9uIGF1ZiBMYSBQYWxtYS4gSW4gamVkZXIgR2VtZWluZGUgZ2lidCBlcyBlaW5lIG1laHIgb2RlciB3ZW5pZ2VyIGdyb2UgS3JpcHBlLCBpbiBkZXIgbWVpc3QgaW4ga2FuYXJpc2NoZXIgTGFuZHNjaGFmdCBsbmRsaWNoZSBBbGx0YWdzc3plbmVuIG5hY2hnZXN0ZWxsdCB3ZXJkZW4gc293aWUgYmlibGlzY2hlIEdlc2NoaWNodGVuIHVuZCBuYXRybGljaCBkaWUgZWlnZW50bGljaGUgS3JpcHBlIG1pdCBkZW0gSmVzdXNraW5kLCBNYXJpYSB1bmQgSm9zZWYgdXN3LgpPZiBjb3Vyc2UgeW91IG1heSBnZXQgYW1idXNoZWQgYnkgdGhlIGxvY2FsIGVuZW1pZXMgaWYgeW91IHRyeSB0aGF0LCB0aG91Z2guIApUb3BwZWQgb2ZmIHRoZSBnYXMgdGFuayBidXQgd2hlbiB3ZSByZXR1cm5lZCB0aGUgY2FyLCB0aGUgbWFuIGNoZWNrZWQgdGhhdCBsdHRsZSB0YW5rIG4gdGhlIHRydW5rIGFuZCBzYWQgdCB3YXMgZW1wdHkuIFdlIHdlcmUgc28gY29uZnVzZWQuIApTaGVkZGluZyBpcyB0aGUgcHJvY2VzcyBvZiB2aXJ1cyBlcnVwdGluZyBmcm9tIGNlbGxzIGR1ZSB0byBpdHMgcmVwbGljYXRpb24gcHJvY2Vzcy4gVmFjY2luZXMgaW4gdGhlIFVTIGFyZSBhbGwgYWNlbGx1bGFyIG9yIGF0dGVudWF0ZWQsIG1lYW5pbmcgdGhleSBhcmUgaW5jYXBhYmxlIG9mIHJlcGxpY2F0aW9uIG9mIGFueSBzb3J0LiAKSSBxdWl0IHNjaG9vbCBhdCB0aGUgYWdlIG9mIDE0LiAKVGhlIHRoaW5nIGlzLCBwb29ybHkgZWR1Y2F0ZWQgcGVvcGxlIHdobyBkb24gdW5kZXJzdGFuZCBvciBjYXJlIGFib3V0IG51dHJpdGlvbiBidXQgc3RpbGwgZWF0IG1lYXQgYXJlIGp1c3QgYXMgcHJvbmUgdG8gdml0YW1pbiBkZWZpY2llbmNpZXMsIG9mIGRpZmZlcmVudCBraW5kcy4gRWF0aW5nIHByZWRvbWluYW50bHkgY2hlZXNlYnVyZ2VycyBhbmQgZnJpZXMgYW5kIGNlcmVhbCBpc24gaGVhbHRoeSByZWdhcmRsZXNzIG9mIGhvdyBtdWNoIGlyb24gb3IgcHJvdGVpbiB5b3UgZ2V0IGZyb20gdGhlIGJlZWYuIFRoZSBpc3N1ZSB3aXRoIG1hbG51dHJpdGlvbiBpbiBwb3ZlcnR5IHN0cmlja2VuIGNvbW11bml0aWVzIHByb2JhYmx5IGlzbiBnb2luZyB0byBiZSB3b3JzZW5lZCAob3IsIGhvbmVzdGx5LCBhbGxldmlhdGVkKSBieSBzdWRkZW5seSBnb2luZyB2ZWdldGFyaWFuIGR1ZSB0byBoaWdoIG1lYXQgcHJpY2VzLgpBbHNvLCBhIGNsb3VkIG9mIHN0aWdtYSBhbmQgbWlzdW5kZXJzdGFuZGluZyBsaW5nZXJzIG92ZXIgdGhlIGZpZWxkLiBFdmVuIGFzIG1hc3NhZ2UgYW5kIG90aGVyIGZvcm1zIG9mIGFsdGVybmF0aXZlIHRoZXJhcHkgZ2FpbiBhY2NlcHRhbmNlIGluIHRoZSBtZWRpY2FsIGFyZW5hLCBtYW55IHN0aWxsIHJlZ2FyZCBtYXNzYWdlIGFuZCBpdHMgY291c2lucyBhcyBmcmlsbHMgb3Igc2V4dWFsIGVuY291bnRlcnMuCkhnb2VsMDk3NCAgODIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpPbmUgY29uY2x1c2lvbiBmcm9tIHRoaXMgYXJlIHRoYXQgcGllY2VzIG9mIGFybW9yIHN1Y2ggYXMgdGhlIER1c3Rjb2F0IG9yIE5pbmphIFJhZ3MgY291bGQgZ2FpbiB2YWx1ZSBpZiB0aGV5IG1ha2UgaXQgbW9yZSBsaWtlbHkgZm9yIHRoZSBwbGF5ZXIgdG8gY29sbGFwc2UgZHVlIHRvIHN0b21hY2ggZGFtYWdlIGluIGV4Y2hhbmdlIGZvciBkaW1pbmlzaGluZyBkYW1hZ2UgdG8gdGhlIGhlYWQsIGFzIGNoYW5naW5nIHRoZSB2YWx1ZXMgc28gdGhhdCB5b3UgY2FuIHRha2UgMTAgaGl0cyB0byB0aGUgaGVhZCBhbmQgMTAgdG8gdGhlIGNoZXN0IG1pZ2h0IGJlIHN1cGVyaW9yIHRvIGJlaW5nIGFibGUgdG8gdGFrZSAyMCBoaXRzIHRvIHRoZSBjaGVzdCBhbmQgNiB0byB0aGUgaGVhZC4gClNpbmNlIHRob3NlIGVhcmx5IGRheXMgaGUgamV0dGVkIGFyb3VuZCB0aGUgd29ybGQgYW5kIGJlZW4gaW52aXRlZCB0byBldmVudHMgbGlrZSBUaGUgQnJpdHMgYW5kIE1vYm9zIHdoZXJlIGhlIGhhcyB3b3dlZCBiaWcgbmFtZSBzdGFycyB3aXRoIGhpcyBza2lsbHMgICBtYW55IG9mIHdoaWNoIGhhdmUgYmVlbiBjYXB0dXJlZCBvbiBjYW1lcmEgYW5kIGFwcGVhciBvbiB0aGUgWW91VHViZSB3ZWJzaXRlLgpHZSBkaWcgc2psdiAzIDQgdmVja29yIGZyIHNwaW9uZXJpIHRpZC4uIApJbiBTZXB0ZW1iZXIsIHRoZSBtb2RlbCB0b2xkIE1haWxPbmxpbmU6ICdJIHRyeSB0byBrZWVwIGFzIGhlYWx0aHkgYXMgSSBjYW4uIFdpdGggdHJhdmVsbGluZywgaXQncyBoYXJkIHRvIHdvcmsgb3V0LCBJIHRyYXZlbCBhY3Jvc3MgdGhlIHdvcmxkIGJ1dCB0cnkgdG8ga2VlcCBteSByb3V0aW5lLgpCZWluZyBtYW1tYWxzLCBrb2FsYXMgcmFpc2UgdGhlaXIgam9leXMgb24gbWlsayAoYWRtaXR0ZWRseSwgb25lIG9mIHRoZSBsb3dlc3QgbWlsayB5aWVsZHMgdG8gYm9keSByYXRpby4gVGhlcmUgYSB0cmVuZCBoZXJlKS4gCkFzIGFsd2F5cywgdGhlIHJvdyBvZiBSdXNzaWEgd2FzIGFuIGVuaWdtYS4gClNpbXBsZSB0aGluZ3MgbGlrZSBpZiBhIHBlcnNvbiBrZWVwcyBsb29rbmlnIGF0IHRoZWlyIGNhcmRzICAgbm9ybWFsbHkgbWVhbnMgdGhlaXIgaGFuZCBpcyBub3QgdGhhdCBnb29kICAgaWYgdGhleSBoYWQgYWNlcyAgIHRoZXkgd291bGQgcmVtZW1iZXIuIApJbWFnaW5lIHRoZSBvdGhlciB0aGluZ3MgdGhhdCBjb3VsZCBoYXBwZW4gd2hlbiB5b3UgZG9uJ3QgbW92ZSBmb3IsIHNheSwgMTAgd2Vla3MgYXQgYSB0aW1lOiBXaGVuIHlvdSBkb24ndCBwdXQgd2VpZ2h0IG9uIHlvdXIgYm9keSwgeW91ciBib25lcyBkZW1pbmVyYWxpemUgYW5kIGJlY29tZSB3ZWFrZXIsIGxlYWRpbmcgdG8gY29uZGl0aW9ucyBsaWtlIG9zdGVvcG9yb3Npcy4gCkZyb3RoeSBvaWwgbGlrZSB0aGF0IGdlbmVyYWxseSBtZWFucyB0aGF0IHRoZXJlIHdhdGVyIGluIHRoZSBvaWwuIFdoZXRoZXIgdGhlIHdhdGVyIGlzIGp1c3QgZnJvbSBjb25kZW5zYXRpb24gb3IgYSBibG93biBoZWFkZ2Fza2V0IGlzIHByb2JhYmx5IHRoZSBuZXh0IHN0ZXAgdG8gY29uc2lkZXIuClR1bmVyc2hhcmtiaXR0ZW4gdQpNYWtpbmcgbW9uZXkgd2hlbiB0aGUgY2FyZHMgZG9uJ3QgcnVuIHlvdXIgd2F5IGlzIGV4dHJlbWVseSB0b3VnaC4gWW91IG5lZWQgZW5vdWdoIG1vbmV5IHRvIHdlYXRoZXIgdGhlIHZhcmlhbmNlIGFuZCBwYXkgeW91ciBiaWxscyBjb21mb3J0YWJseS4gCk5leHQgdXAsIFhJIDcgYXJlbiBhbGwgdGhhdCBncmVhdCB1bmxlc3MgeW91IGNhbiBhcHBseSB0aGVtIGluIGJ1bGsuIFRoZSBJU0Qgd2lsbCB1c2UgaGlzIHJlZGlyZWN0cyBvbiBhbGwgb2YgdGhlIG90aGVyIGF0dGFja3MsIGFuZCB5b3VyIFhJNyB3b24gYXMgbXVjaCB1c2Ugb3V0IG9mIHRoZW0uCkVpbmUgc3RhcmtlIFF1b3RlIGFsc28gZiBlaW5lbiBTcGllbGVyIGRlciBiZWkgZGVuIEFyaXpvbmEgQ295b3RlcywgZWluZW0gS2VsbGVya2luZCBpbiBkZXIgVGFiZWxsZSwgYXVmIGRpZSBFaXNmbCBkZXIgYmVzdGVuIEVpc2hvY2tleWxpZ2EgZGVyIFdlbHQgYXVmbGllZi4uIApEbyBJIGhhdmUgYSBwbGF0ZSBjYXJyaWVyPyBObywgdGhhdCBub3QgZm9yIG1lLiAKSWYgSSB3YXMgbGVzcyB0aGFuIGEgZGF5IGxhdGVyIEkgd291bGQgaGF2ZSBtZWx0ZWQgbXkgaW5zaWRlcyBhbmQgZGllZCBpbiB0aGUgbmlnaHQuIFRoZSBoZWFkIGRvY3RvciBvZiB0aGUgaG9zcGl0YWwgc2FpZCBpbiB0aGUgMzUgeWVhcnMgb2YgYmVpbmcgYSBkb2N0b3IgaGUgbmV2ZXIgb25lIGhlYXJkIG9mIHN1Y2ggYSB0aGluZyBoYXBwZW5pbmcgYW5kIG15IGFwcGVuZGl4IHdhcyB0YWtlbiB0byB0aGUgbGFiIGZvciBmdXJ0aGVyIHRlc3RpbmcgYW5kIHJlc2VhcmNoLi4gCkkgd29uZGVyIGlmIEkgc2hvdWxkIGJyZWFrIHVwIHdpdGggaGltLiAKVGhhdCdzIHdoYXQgSSBuZWVkIHRvIGRvLCBmb3IgbXkgZHJlYW0sIGFuZCBmb3IgdGhlIHNha2Ugb2YgYm90aCBvZiBvdXIgdGltZS4gClRvIGJlIGdvb2QgYXQgcG9rZXIsIG9yIGJ1c2luZXNzLCB5b3UgaGF2ZSB0byBiZSBnb29kIGF0IGRlY2lzaW9uIG1ha2luZyB1bmRlciB1bmNlcnRhaW50aWVzIHdoZXJlIHNvbWUgdGhpbmdzIHlvdSBrbm93LCBzb21lIHRoaW5ncyB5b3UgZG9uIGFuZCBtdXN0IGZpZ3VyZSBvdXQgZnJvbSB3aGF0IGV2ZXJ5Ym9keSBlbHNlIGlzIGRvaW5nLiAKVW5sZXNzIGV4cHJlc3NseSBzdGF0ZWQgb3RoZXJ3aXNlIGluIHdyaXRpbmcsICgxKSBub3RoaW5nIGNvbnRhaW5lZCBpbiB0aGlzIHN1YnJlZGRpdCB3YXMgaW50ZW5kZWQgb3Igd3JpdHRlbiB0byBiZSB1c2VkLCBjYW4gYmUgdXNlZCBieSBhbnkgdGF4cGF5ZXIsIG9yIG1heSBiZSByZWxpZWQgdXBvbiBvciB1c2VkIGJ5IGFueSB0YXhwYXllciBmb3IgdGhlIHB1cnBvc2VzIG9mIGF2b2lkaW5nIHBlbmFsdGllcyB0aGF0IG1heSBiZSBpbXBvc2VkIG9uIHRoZSB0YXhwYXllciB1bmRlciB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBDb2RlIG9mIDE5ODYsIGFzIGFtZW5kZWQ7ICgyKSBhbmQgRVZFUlkgdGF4cGF5ZXIgc2hvdWxkIHNlZWsgYWR2aWNlIGJhc2VkIG9uIHRoZSB0YXhwYXllciBwYXJ0aWN1bGFyIGNpcmN1bXN0YW5jZXMgZnJvbSBhbiBpbmRlcGVuZGVudCB0YXggYWR2aXNvciB3aXRoIHJlc3BlY3QgdG8gYW55IGZlZGVyYWwgdGF4IHRyYW5zYWN0aW9uIG9yIG1hdHRlciBjb250YWluZWQgaW4gdGhpcyBzdWJyZWRkaXQuIE5vIG9uZSwgd2l0aG91dCBleHByZXNzIHdyaXR0ZW4gcGVybWlzc2lvbiwgbWF5IHVzZSBhbnkgcGFydCBvZiB0aGlzIHN1YnJlZGRpdCBpbiBwcm9tb3RpbmcsIG1hcmtldGluZyBvciByZWNvbW1lbmRpbmcgYW4gYXJyYW5nZW1lbnQgcmVsYXRpbmcgdG8gYW55IGZlZGVyYWwgdGF4IG1hdHRlciB0byBvbmUgb3IgbW9yZSB0YXhwYXllcnMuCk1heWJlIGl0J3MganVzdCBiZWNhdXNlIHRoZXkncmUgeW91bmdlciwgYnV0IHRoZXkgZGVmaW5pdGVseSBjYXJlIG1vcmUgYWJvdXQgcGh5c2ljYWwgdGhpbmdzLi4gCjIwMTMuIEluOiAyMXN0IEludGVybmF0aW9uYWwgQ29uZmVyZW5jZSBvbiBTb2Z0d2FyZSwgVGVsZWNvbW11bmljYXRpb25zIGFuZCBDb21wdXRlciBOZXR3b3JrcyAoU29mdENPTSksIFByaW1vc3RlbiwgMTggMjAgU2VwdC4gCk1vcmUgaW5mb2hlcmUuIEJyaXR0IFJvYnNvbi4gCkNhemluIHBvaW50ZSBkdSBkb2lndCBsZXMgbWFsdmVyc2F0aW9ucyBjb25jZXJuYW50IGxlcyBkcm9ndWVzIHByb3ZlbmFudCBkZSBwYXlzIGxvaW50YWlucyBldCBxdWksIHVuZSBmb2lzIHBhcnZlbnVlcyBkYW5zIGxlcyBvZmZpY2luZXMsIHNvbnQgZGUgYmllbiBtb2lucyBib25uZSBxdWFsaXQgcXUgbGV1ciBkcGFydDsgbm9uIHBhcyBxdWUgbGUgdHJhbnNwb3J0IGVuIGF1cmEgYW1vaW5kcmkgbGEgdmFsZXVyIHRocmFwZXV0aXF1ZSwgbWFpcyBzdXJ0b3V0IHBhcmNlIHF1IHN1Ymlzc2VudCwgZGUgbGEgcGFydCBkZSBtYXJjaGFuZHMgcGV1IHNjcnVwdWxldXgsIHVuZSB0cmFuc2Zvcm1hdGlvbiBwb3VyIGxhcXVlbGxlIGwgZHUgbHVjcmUgbiBwYXMgdHJhbmdlci4gQyBhdXNzaSBsIHBvdXIgQ2F6aW4gZGUgcmVtZXR0cmUgZW4gY2F1c2UgY2V0dGUgaWRlIHJldWUsIHBhcnRpY3VsaXJlbWVudCB0ZW5hY2UgcHVpc3F1IGV4aXN0ZSB0b3Vqb3VycyBlbiBjZSBkYnV0IGRlIFhYSSBtZSBzaWNsZSwgcXVlIGNlIHF1aSBlc3QgZXhvdGlxdWUgZXN0IHBsdXMgZWZmaWNhY2U7IGV0LCBlbiB0cmF2YWlsbGFudCBhdmVjIGRlcyBwcm9kdWl0cyBsb2NhdXgsICBwb3J0ZSBkZSBtYWlucywgaWwgZG1vbnRyZSBsIGRlIGNlIGp1Z2VtZW50IGV0IHByb3V2ZSBhdmVjIGFpc2FuY2UgcXVlIGwgbiBwYXMgZm9yY21lbnQgcGx1cyB2ZXJ0ZSBjaGV6IGxlIHZvaXNpbi4gCk91ciBzdG9yZSBwaG9uZSB3YXMgYnJva2VuIGZvciBhIGZldyBtb250aHMgb3Igc28od2hpY2ggaGFzIGJlZW4gbmljZSBub3QgdGFraW5nIGNhbGxzKSBidXQgaXQgZ2V0cyBhIGxvdCBvZiBxdWVzdGlvbnMgd2h5IHdlIGRvbnQgcGljayB1cCB0aGUgcGhvbmUgd2hlbiB0aGV5IGNhbGwuIE9uZSBwZXJzb24gY2FtZSBieSBhbmQgc2FpZCB0aGV5IGNhbGxlZCBoZXJlIGFuZCB0aGUgbWFuYWdlciB0b2xkIHRoZW0gdGhleSBjb3VsZCBoYXZlIGEgZnJlZSBDaW5uYWJvbiBiZWNhdXNlIHRoZWlycyB3YXMgZHJ5IGFuZCBvbGQuIEkgYXNrZWQgaWYgdGhleSB0YWxrZWQgdG8geChhIHByZXZpb3VzIG1hbmFnZXIgd2hvIG5vIGxvbmdlciB3b3JrcyB0aGVyZSksIHRoZXkgc2FpZCB5ZXMgYW5kIEkgZ2F2ZSB0aGVtIHRoZSBzYXNzaWVzdCAid2VsbCBvdXIgc3RvcmUgcGhvbmUgaGFzbnQgYmVlbiB3b3JraW5nIGZvciBhIGZldyBtb250aHMgc28gdGhhdCBpcyBjbGVhcmx5IGEgbGllLiIgVGhleSBzdG9ybWVkIG9mZiwgSSBmZWx0IGdvb2QgYWJvdXQgdGhlIHJlc3Qgb2YgdGhlIGRheS4KU29ycnkgSSBkaWRuIG1lYW4gdG8gcG9zdCB5ZXQuIApQb3VyIGl0IGluIHRoZSBtb2xkcywgcHV0IGl0IGluIHRoZSBmcmlkZ2UgZm9yIGxpa2UgMTAgbWludXRlcyB0byBzZXQgYW5kIHRoZW4gcG9wIHRoZW0gb3V0IS4gClRoZSBob3JuIGlzIHRoZSBwcmVmZXJyZWQgbWV0aG9kIG9mIGNvbW11bmljYXRpb24gaGVyZS4gU3BlbnQgdGhlIHdob2xlIGRheSBpbiBNdW1iYWkuLiAK|<---