<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, minimum-scale=1, maximum-scale=1, user-scalable=no" name="viewport"/>
 </head>
 <body class="sub sub02" id="culture">
  <div class="wrap" id="top">
   <div id="skip">
    [ahref]
    
   </div>
   <h1>
    <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
   </h1>
   <div id="seoul-common-gnb">
   </div>
   <div class="gnbbox">
    <ul class="gnb_menu login">
     <li>
      [ahref]
      
     </li>
    </ul>
    <ul id="gnb">
     <li class="f1">
      [ahref]
      
     </li>
     <li class="f2">
      [ahref]
      
     </li>
     <li class="f5">
      [link]
      
     </li>
     <li class="f3">
      [ahref]
      
     </li>
     <li class="f4">
      [link]
      
     </li>
     <li class="main">
      [link]
      
     </li>
    </ul>
   </div>
   <div id="facility_select">
    [link]
    
    <ul>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
   </div>
   <div id="nav">
    <h2 class="dp_mb">
     [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
    </h2>
    <ul>
     <li class="menu1">
      [ahref]
      
      <div id="subnav1" style="left:50px;">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </li>
     <li class="menu2">
      [ahref]
      
      <div class="line2" id="subnav2" style="left:-72px; right:0;">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
     </li>
     <li class="menu3">
      [link]
      
      <div id="subnav3">
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
     </li>
     <li class="menu4">
      [link]
      
      <div id="subnav4">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </li>
    </ul>
   </div>
  </div>
  <hr/>
  <div id="container">
   <div class="wrap">
    <div id="lmenu">
     <h2>
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <ul>
      <li class="menu1">
       [ahref]
       
      </li>
      <li class="menu2">
       <a href="/open_content/worldcup/guidance/course.jsp">
        경기장 관람코스
       </a>
      </li>
      <li class="menu3">
       [link]
       
      </li>
      <li class="menu4">
       [ahref]
       
      </li>
      <li class="menu5">
       [ahref]
       
      </li>
      <li class="menu012">
       [link]
       
      </li>
      <li class="menu6">
       [link]
       
      </li>
      <li class="menu7">
       [link]
       
      </li>
      <li class="menu8">
       [link]
       
      </li>
      <li class="menu9">
       [link]
       
      </li>
      <li class="menu010">
       [link]
       
      </li>
      <li class="menu011">
       [link]
       
      </li>
     </ul>
    </div>
    <div id="contents">
     <h2 class="ir">
      <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
     </h2>
     <div id="con_title">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="location_sns">
       <li class="print ir dp_pc">
        [link]
        
       </li>
       <li class="tw ir">
        [link]
        
       </li>
       <li class="facebook ir">
        [ahref]
        
       </li>
       <li class="blog ir">
        <a href="#" onclick="return share('blog');" target="_blank" title="새창열림">
         네이버 블로그로 공유하기
        </a>
       </li>
       <li class="bookmark ir">
        [link]
        
       </li>
      </ul>
      <ol>
       <li>
       </li>
       <li>
        시설이용안내
       </li>
       <li>
        주차 안내
       </li>
      </ol>
     </div>
     <div id="detail_con">
      <p class="tbox margin_b20">
       서울월드컵경기장의 주차장은 서쪽에 위치한 경기장 주차장(537구획)과 동쪽에 위치한 홈플러스 주차장(767구획) 2곳이 있으며 이용 시설에 따라 해당 주차장을 이용하셔야만 할인 혜택을 받으실 수 있습니다.<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <p class="right margin_b10" id="park_txt">
      </p>
      <p>
       [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[link]</li>[ahref][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <map class="dp_pc" id="worldcup_park" name="worldcup_park">
       <area alt="월드컵경기장" coords="74,125,220,161" href="/open_content/worldcup/guidance/park.jsp?location_div=park1#park_txt" shape="rect"/>
       <area alt="난지천공원" coords="8,381,154,417" href="/open_content/worldcup/guidance/park.jsp?location_div=park2#park_txt" shape="rect"/>
       <area alt="평화공원" coords="180,511,324,544" href="/open_content/worldcup/guidance/park.jsp?location_div=park4#park_txt" shape="rect"/>
       <area alt="경기장 주차장(서쪽)" coords="246,311,284,347" href="/open_content/worldcup/guidance/park.jsp?location_div=park5#park_txt" shape="rect"/>
       <area alt="홈플러스 주차장(동쪽)" coords="557,322,595,358" href="/open_content/worldcup/guidance/park.jsp?location_div=park6#park_txt" shape="rect"/>
      </map>
      <div class="list_tab" style="width: 99.5%; border-top: medium none">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="park5">
       <div class="para01">
        <p class="sblet">
         경기장 주차장(서쪽)<li>[link]</li>[search][ahref][search][ahref]<li>[link]</li>
        </p>
        <ul class="para02">
         <li class="ssblet">
          이용대상 : 경기장 관람객,영화관,영화관 2층에 위치한 패스트푸드점,커피전문점,예식장,사우나 이용객
         </li>
         <li class="ssblet">
          운영시간 : 09:00~22:00
         </li>
         <li class="ssblet">
          주차요금 : (평시) 5분당 150원, (경기/행사시) 4시간 5,000원
          <ul>
           <li class="sssblet">
            경차,장애인,국가유공자,저공해차량,다둥이3자녀 차량 50%할인
           </li>
           <li class="sssblet">
            전기차 충전시 : 전기차 충전기 이용시 1시간 면제 이후 50% 할인 적용
            <p class="ssssblet">
             [search]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[link][link]<li>[ahref]</li>
            </p>
           </li>
           <li class="sssblet">
            소형 : 5분당 150원
           </li>
           <li class="sssblet">
            중형 : 5분당 300원 (16~25인승 버스, 2.5~5톤 트럭)
           </li>
           <li class="sssblet">
            대형 : 5분당 450원 (25인승 이상 버스, 5톤 이상 트럭)
           </li>
           <li class="sssblet">
            해당 수익시설 이용차량 : 2시간 이내 주차 시 최대 1,600원 할인
            <br/>
            * 2시간 이후 요금은 5분당 150원
           </li>
          </ul>
         </li>
        </ul>
       </div>
       <div id="map" style="width:100%;height:400px;">
       </div>
      </div>
     </div>
     <div id="data_control">
      <div class="right">
      </div>
      <h2 class="ir">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="control">
       <dl id="control">
        <dt>
         담당부서 :
        </dt>
        <dd>
         서울월드컵경기장운영처
        </dd>
        <dt>
         담당팀 :
        </dt>
        <dd>
         운영팀
        </dd>
       </dl>
       <dl id="control_date">
        <dt>
         전화 :
        </dt>
        <dd>
         02-2128-2002
        </dd>
       </dl>
      </div>
      <div id="satisfy">
       <div class="radio">
        <form action="/open_content/cms/cmsSatisGrade.do;jsessionid=dyw8RUugx22bgHvBQpXBBG4BtunPmfaaXmJpHcUpsFsPOtTuUKyq5xWtlVUdrAlp.etisw2_servlet_user" method="get" onsubmit="return fnSatisGradeChk(this);">
         <p class="title">
          컨텐츠 만족도 평가
         </p>
         <p>
          <li>[ahref]</li>[link]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][ahref]
         </p>
         <ul>
          <li>
           <label class="verygood" for="veryGood">
            매우만족
           </label>
          </li>
          <li>
           <label class="good" for="good">
            만족
           </label>
          </li>
          <li>
           <label class="normal" for="normal">
            보통
           </label>
          </li>
          <li>
           <label class="dis" for="dis">
            불만족
           </label>
          </li>
          <li>
           <label class="verydis" for="veryDis">
            매우불만족
           </label>
          </li>
         </ul>
         <div class="btnBox">
          [link]
          
         </div>
        </form>
       </div>
       <div>
        <form action="/open_content/main/login/loginForm.do" method="post" onsubmit="return fnOninionChk(this);">
         <p>
         </p>
         <p class="title">
          한줄 의견달기[ahref][ahref][ahref]<li>[search]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]
         </p>
         <div class="btnBox">
          [ahref]
          
         </div>
        </form>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <hr/>
  <div id="footer">
   <div class="wrap">
    <h2 class="ir">
     <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
    </h2>
    <ul>
     <li>
      [ahref]
      
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [ahref]
      
     </li>
     <li class="pim">
      <a href="/open_content/main/guidance/pim.jsp" target="_blank" title="새창">
       개인정보처리방침
      </a>
     </li>
     <li>
      [ahref]
      
     </li>
    </ul>
    <address>
     03932 서울시 마포구 월드컵로 240 TEL:02)2128-2002 /
     [ahref]
     
    </address>
    <p>
     Copyright(c) 2015 Seoul Metropolitan Facilities Management Corporation. All Rights Reserved
    </p>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0443
  </b>
 </body>
</html>
