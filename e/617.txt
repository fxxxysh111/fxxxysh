--->|VGhlcmVpbiBsaWVzIHRoZSBwcmVkaWNhbWVudCwgYWNjb3JkaW5nIHRvIE1hc2FtaWNoaSBBZGFjaGksIHNlbmlvciBlY29ub21pc3Qgb2YgSlAgTW9yZ2FuIFNlY3VyaXRpZXMgSmFwYW4uIApCdXQgd2hhdCB0aGV5IGRvbnQgZnVja2luZyB0ZWxsIHlvdS4gCkF0IGhlciBhZ2UgNjYsIExvdWlzYSB3aWxsIGJlIGFibGUgdG8gcmVjZWl2ZSBlbXBsb3ltZW50IHBlbnNpb25zIG9mICQ1LDY2NiBwZXIgbW9udGggcGx1cyAkOTc2IENQUCBhbmQgJDU3MCBPQVMuIEhhcnJ5IGlzIHJlY2VpdmluZyAkOTEyIGZyb20gQ1BQIGFuZCAkNjAwIGZyb20gT0FTLiAKU2hlIHBvaW50ZWQgb3V0IHRoYXQgd29tZW4gcmVjZWl2ZSBiZW5lZml0cyB0aGUgbWVuIGRvbid0LCBpbmNsdWRpbmcgc2V2ZXJhbmNlIHBheSwgbWVkaWNhbCBpbnN1cmFuY2UsIG1hdGVybml0eSBsZWF2ZSwgY2hpbGQgY2FyZSBhbmQgYSByZWxvY2F0aW9uIGFsbG93YW5jZS4uIApBbmQgSGFtcHNoaXJlLCBBLiAKTGl2aW5nIGluIGEgcG9zdCBnZW5kZXIgd29ybGQgdGhhdCBpcyBzaW11bHRhbmVvdXNseSBwYXRyaWFyY2hhbCBtYXkgc2VlbSBpbXBvc3NpYmxlLCBhbiBveHltb3JvbiB3cml0dGVuIG9uIHRoZSBib2R5IGFuZCBsaXZlcyBvZiBhY2FkZW1pYyBzb3J0cyBsaWtlIG1lLiBCdXQgSSB0aGluayBwb3N0IGdlbmRlciBtaWdodCBiZSB0aGUgY29ycmVjdCByZXNwb25zZSB0byBwYXRyaWFyY2h5ICBhbiBhYnNvbHV0ZSByZWZ1c2FsIHRvIGxvY2F0ZSBvdXJzZWx2ZXMgb24gZWl0aGVyIHNpZGUgb2YgdGhlIGdlbmRlciBiaW5hcnkgc28gdGhhdCBodW1hbnMgd2l0aCBhbnkgc29ydCBvZiBib2R5IHBhcnRzIGFuZCBhbnkgZ2VuZGVyIGV4cHJlc3Npb24gY2FuIGpvaW4gdG9nZXRoZXIgdG8gc2F5IHRoYXQgYm9kaWVzICBvZiB3aGF0ZXZlciBnZW5kZXIgIGRlc2VydmUgcHJvdGVjdGlvbiBmcm9tIHN0YXRlIGludGVyZmVyZW5jZSBpbiB0aGUgZm9ybSBvZiBmb3JjZWQgcHJlZ25hbmN5LCBoYXRlIHNwZWVjaCBpbiB0aGUgZm9ybSBvZiBibGFtaW5nICJ3b21lbiwiIGFuZCB2aW9sZW5jZS4uIApTdGFuZGluZyBmb3IgbG9uZyBwZXJpb2RzIG9mIHRpbWUgY2FuIGRhbWFnZSBqb2ludHMsIG1ha2UgbXVzY2xlcyBhY2hlIGFuZCBjYXVzZSBmb290IHByb2JsZW1zLCBhY2NvcmRpbmcgdG8gIkhhemFyZHMgTWFnYXppbmUuIiBSZXBldGl0aXZlIHN0cmFpbiBpbmp1cmllcyBjYW4gbWFrZSBpdCBwYWluZnVsIHRvIG1vdmUgbXVzY2xlcyBhbmQgam9pbnRzLCB3aGljaCBjb3VsZCBjb3N0IGEgbWFzc2FnZSB0aGVyYXBpc3QgaGlzIGxpdmVsaWhvb2QgaWYgYSBwcm9ibGVtIHdlcmUgdG8gYmVjb21lIHBlcnNpc3RlbnQgb3IgY2hyb25pYy4gClRoZXNlIGFyZSB0aGUgc29mdGx5IHN1YnZlcnNpdmUgdGhpbmdzIHRoYXQgYWRkIHVwIG92ZXIgdGhlIGNvdXJzZSBvZiBhIG1hcnJpYWdlLCBhbmQgb2YgcGFyZW50aG9vZCwgaW50byBmcmFuayBjb250ZW1wdCBhbmQgZGlzcmVzcGVjdC4gSXMgc2hlIG9rIHdpdGggeW91IG1ha2luZyBqb2tlcyBhYm91dCBoZXIgYW5kIHlvdXIgZGF1Z2h0ZXIsIGlmIHlvdSBoYWQgb25lLCBiZWluZyAib24gdGhlIHJhZyIgYW55dGltZSB0aGV5IHdlcmUgaW4gYSBiYWQgbW9vZD8gSWYgbm90LCBtYXliZSB0aGVyZSdzIHNvbWUgaW5lcXVpdHkgaGVyZSB0aGF0IHNob3VsZCBiZSBhZGRyZXNzZWQuCkppbW15IFNpZGVzLCBvZiB0aGUgU2FuIEFudG9uaW8gUG9saWNlIFZpY2UgVW5pdC4uIApTYWRseSwgb25seSBhIGZldyBsdWNreSBtb25rZXlzIHdpbGwgYmUgYWJsZSB0byBkbyBzby4gCk92ZXJ2aWV3IGZvciBSQk5tb2QKSG93ZXZlciwgaWYgdGhlIHBhcnRuZXJzIGhhdmUgc2ltaWxhciBvdXRsb29rcyBvbiB0cmF2ZWwgbGlrZSB0aGlzLCBhbmQgb25lIG9mIHRoZW0gaGFzIGFscmVhZHkgZG9uZSB0aGUgZ2FwIHllYXIsIEkgbmV2ZXIgd2FudCB0byBob2xkIHNvbWVvbmUgZnJvbSBsaXZpbmcgdGhvc2UgZHJlYW1zLiAKSG93ZXZlciwgYXMgeW91IGNvbnRpbnVlIHRvIHRocm93IGJhY2sgYSBjb3VwbGUgb2YgZHJpbmtzIHlvdSBzdGFydCB0byBsb3NlIHRyYWNrIG9mIHdoaWNoIG9mIHRoZSBjaGlwcyBhcmUgeW91cnMsIGFuZCB3aGljaCBhcmUgaW4gdGhlIGRlYWxlcnMgc3RhY2suIFN1ZGRlbmx5LCB5b3VyIG5pZ2h0IG9mIGEgZ29vZCB0aW1lIHdpdGggeW91ciBmcmllbmRzIGlzIHN0YXJ0aW5nIHRvIHR1cm4gYXMgdGhlIHBlb3BsZSBzdGFydCB0byBhcmd1ZSBhYm91dCB3aG9zZSBjaGlwcyBhcmUgd2hvc2UuIApJIGNvdWxkIHNlZSBoaW0gbG9va2luZyB0byBzZWUgaG93IG11Y2ggKGNoYW5nZSkgaGUgaGFkIGluIGhpcyBwb2NrZXQgYW5kIEkga2luZGEgcGVla2VkIG92ZXIgdG8gc2VlIGhvdyBtdWNoIGhlIGhhZCwgYW5kIHN1cmUgZW5vdWdoIHRoYXQgd2hvbGUgYm94IG9mIHNwb3J0cyBjYXJkcyBqdXN0IGhhcHBlbmVkIHRvIGNvc3QgZXhhY3RseSA2MGNlbnRzIHRoYXQgZGF5ISBIZSBncmFiYmVkIHRoZSBib3ggdXAgaW4gaGlzIGFybXMgbGlrZSBhIHB1cHB5IGFuZCByYW4gb3ZlciB0byBoaXMgZGFkIHdobyBzbWlsZWQgYmFjayBhdCBtZSBhcyB0aGV5IHdhbGtlZCBiYWNrIHRvIHRoZSBjYXIuIApNeSBhYnNvbHV0ZSBGQVZPVVJJVEUgcmVzdGF1cmFudCBpcyBUaGUgVmlsbGFnZS4gVGhlcmUgYXJlIDMgb2YgdGhlbSBhbmQgdGhleSBvbmx5IGRvIGJyZWFrZmFzdCBhbmQgbHVuY2ggYnV0IGl0J3MgcGhlbm9tZW5hbCBmb29kIGFuZCBncmVhdCBzZXJ2aWNlLiAKQW5kIHRoYXQgbm90IGV2ZW4gbWVudGlvbmluZyBob3cgYmlnIG9mIGEgbGVnYWwgZ3JheSBhcmVhIGFsbCB0aGlzIGlzLiBJIGxpa2UgdG8gbm90IGdldCBteSBkb29yIGtub2NrZWQgb24gYnkgdGhlIGZiaS9pcnMvZnRjIG9uZSBkYXkuIFdvdWxkIGJlIG5pY2UuCk15IGFkdmljZSwgaWYgdGhleSB0aGluayB5b3UgY2FwYWJsZSBvZiBseWluZyBhYm91dCB0aGlzIHRoZW4gdGhleSB0aGluayB5b3UgYXJlbiB3b3J0aCB0aGUgdHJvdWJsZS4gSSBzYXkgbGV0IHRoZW0gYWxsIGdvLiAKVGhlIHBva2VyIHJvb20gZG9lcyBub3QgcmVxdWlyZSBhbnkgaW5zdGFsbGF0aW9uLiBJZiB5b3Ugd2lzaCB0byBzdGFydCBwbGF5aW5nIGF0IENsdWJXUFQgYWxsIHlvdSBuZWVkIGlzIGp1c3QgdG8gcmVnaXN0ZXIuIFNldmVyYWwgeWVhcnMgYWdvIHRoZSByb29tIHJlYWxseSBoYWQgZG93bmxvYWRhYmxlIHZlcnNpb24gb2YgdGhlIHNvZnR3YXJlLiAKU2h1dHRlciBzcGVlZCBpcyBob3cgbG9uZyB0aGUgc2h1dHRlciBpcyBvcGVuLiAxLzMwIG1lYW5zIDEvMzB0aCBvZiBhIHNlY29uZCwgc28gbGlnaHQgZW50ZXIgdGhlIGxlbnMgZm9yIDEvMzB0aCBvZiBhIHNlY29uZC4gU21hbGxlciBkZW5vbWluYXRvcnMgKG51bWJlciBhZnRlciB0aGUgZnJhY3Rpb24pIHJlc3VsdHMgaW4gYSBicmlnaHRlciBpbWFnZS4KSXQgaXMsIGFwcGFyZW50bHksIGEgdHJlbmQgb2Ygd2hpY2ggd2UnbGwgYmUgc2VlaW5nIG1vcmUuLiAKSnVtcGluZyBvbiB0aGUgYWx0ZXJuYXRpdmUgdHJhbnNwb3J0YXRpb24gcXVlc3Rpb24uIE9uZSBvZiB0aGUgcmVhc29ucyB3ZSBnb3QgYSA0IHBhY2sgdG8gTG92ZWxhbmQgdGhpcyB5ZWFyIHdhcyBiZWNhdXNlIHRoZXkgb2ZmZXIgYSBidXMgZnJvbSBVbmlvbiBTdGF0aW9uLiBDb21lIHRvIGZpbmQgb3V0IGl0IHdvdWxkIGJlICQ5MCBmb3IgdGhlIHR3byBvZiB1cywgd2hpY2ggaXMgc28gZXhwZW5zaXZlIEkgcmF0aGVyIGRyaXZlLiBUaGUgdHJhaW4gdG8gV2ludGVycGFyayB3YXMgYWxzbyBwcm9oaWJpdGl2ZWx5IGV4cGVuc2l2ZSwgJDEyMCB0b3RhbCBhbmQgdGhhdCB0aGUgc2FsZSBwcmljZS4gVGhlIG9ubHkgb3RoZXIgYnVzZXMgSSBjb3VsZCBmaW5kIGxlYXZlIGZyb20gdGhlIGFpcnBvcnQuIElzIHRoZXJlIHJlYWxseSBubyBhZmZvcmRhYmxlIHdheSB0byB0YWtlIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiBmcm9tIGRvd250b3duPwpNYXliZSB0aGVyZSBzdHVmZiBvdXQgdGhlcmUgdGhhdCB3b3VsZCBoYXZlIGhlbHBlZCBtZSwgdG9vLiAKSSBjYW1lIGhvbWUgYWZ0ZXIgYSB3ZWVrIGF3YXkgYSBjb3VwbGUgb2YgeWVhcnMgYWdvIHRvIGZpbmQgYSBtYXNzaXZlIHR1cmtleSBuZXN0IGluIG15IGJhY2t5YXJkIGluIHRoZSBtaWRkbGUgb2YgbXkgdmVnZ2llIHBhdGNoLiAKSmVkZXIgU3BpZWxlciBiZWtvbW10IGZuZiBLYXJ0ZW4gdW5kIGRhcmYgZWluZSBvZGVyIG1laHJlcmUgZGllc2VyIEthcnRlbiBnZWdlbiBlaW5lIGdsZWljaGUgQW56YWhsIGltIFN0YXBlbCBlaW50YXVzY2hlbi4gRXMgd2lyZCB2b3IgdW5kIG5hY2ggZGVtIFRhdXNjaGVuIGdlc2V0enQgdW5kIGRpZSB2ZXJibGllYmVuZW4gU3BpZWxlciB2ZXJnbGVpY2hlbiBpaHJlIEhuZGUsIHVtIHp1IHNlaGVuIHdlciBnZXdvbm5lbiBoYXQuLiAKIkVzcGEgaXMgYSB0cnVseSBnbG9iYWwgc3BhIGxlYWRlci4gSSBoYXZlIGJlZW4gaW4gdGhlIGluZHVzdHJ5IGZvciBvdmVyIDQwIHllYXJzIGJlZm9yZSB0aGUgd29yZCBzcGEgZXhpc3RlZC4gRXZlcnl0aGluZyB3ZSBkbyBtdXN0IGhhdmUgaW50ZWdyaXR5IGFuZCBhIHJlYXNvbiwgbm90IGEgbWFya2V0aW5nIGdpbW1pY2ssIGFuZCB0aGUgcHJvZHVjdHMgYW5kIHRyZWF0bWVudHMgbXVzdCByZWFsbHkgd29yay4gCllvdSBoYXZlIHRvIGhhdmUgemVybyB0b2xlcmFuY2UgYWdhaW5zdCByZWxpZ2lvbiB0byBoYXZlIHBlb3BsZSBlZHVjYXRlZCBhbmQgbW9kZXJuLiAKTXkgZG9jdG9yIGhhZCBuZXZlciBzZWVuIGEgY2FzZSBhcyBzZXZlcmUgYXMgbWluZSBhbmQgaXQgd2FzIHB1cmVseSBhIGZyZWFrIGFjY2lkZW50LiBSZWNvdmVyeSB0b29rIG1vbnRocyBidXQgSSBoYXZlIHVzZSBvZiBteSBsZWcgYW5kIGhhbmQgYWdhaW4sIHdpdGggc29tZSBudW1ibmVzcy4gT3RoZXIgdGhhbiBwYWluIGFuZCBzcGFzbXMgSSdtIG1vc3RseSBiYWNrIHRvIG5vcm1hbC4KVGhlIFBva2VyIEhvdXNlSXQgd2FzIGluIDIwMTAsIHRocmVlIHllYXJzIGFmdGVyIEkgbWV0IENhcmF3YXksIHRoYXQgSSB3cm90ZSBhYm91dCB0aGUgZmlyc3Qgc2VyaW91cyBzY2FuZGFsIGludm9sdmluZyBoaW0uIApUaGF0IGtpbmQgb2YgYmVlbiB0aGUgYmlnZ2VzdCBjaGFsbGVuZ2UgZm9yIG1lIGFzIGEgcGxheWVyIGFuZCBzb21ldGhpbmcgSSBoYWQgdG8gbGVhcm4uIEkgYWx3YXlzIHRoaW5rIGJhY2sgdG8gb25lIG9mIHRoZSBxdW90ZXMgaW4gdGhhdCBib29rLiBJdCBzb21ldGhpbmcgdGhhdCBoZSB0YWxrZWQgYWJvdXQuIApNYW55IG9mIHRoZSBkZWFsZXIgc2hvZXMgeW91IHB1cmNoYXNlIGluIHJldGFpbCBzdG9yZXMgb25seSB1c2UgcGxhc3RpYyBzdHlsZXMgd2hpY2ggY2FuIGNhdXNlIGNhcmRzIHRvIHN0aWNrLCBkZWNrcyB0byBnZXQgYmVudCwgYW5kIHBsYXllcnMgdG8gZ2V0IGZydXN0cmF0ZWQuIApTb21ldGltZXMgaXQgZG9lc24gd29yaywgc3VyZS4gClBlb3BsZSB3aG8gYXJlIGluIHRoZSBDaHVyY2ggbG9vayB2ZXJ5IGRvd24gb24gbm9uIGNodXJjaCBmb2xrLCBJIHdlbnQgdGhyb3VnaCBpdCBlc3BlY2lhbGx5IEkgaGlnaCBzY2hvb2wuClN1ciBsZSBwYXBpZXIgbGEgbWlzc2lvbiBzZW1ibGUgaW1wb3NzaWJsZS4gTGVzIEJsZXVzLCBQb3VpbGxlIGVuIHR0ZSwgb250IGdhbGVtZW50IHBhc3MgInVuIHQgZGlmZmljaWxlIiBjb21tZSBsJ2EgcHVkaXF1ZW1lbnQgcnN1bSBOb2FoLiAKTm90IGluIG15IHJlZ2lvbiBhbnl3YXkuIEVzcGVjaWFsbHkgYmVjYXVzZSwgZXZlbiBmb3IgcHJpdmF0ZSBjZW50ZXJzIHRoYXQgYXJlIG5vdCBzdWJqZWN0IHRvIGNlbnRyYWwgcGxhbm5pbmcsIHRoZSBoZWFsdGhjYXJlIHN5c3RlbSBzdHJvbmdseSBkaXNjb3VyYWdlcyB0aGUgaW5zdGFsbGF0aW9uIG9mIGFkdmFuY2VkIHRlY2huaXF1ZXMgaW4gY2VudGVycyB3aGVyZSB0aGV5IHdvdWxkIG5vdCBtZWV0IGEgY2VydGFpbiBudW1iZXIgb2YgdHJlYXRtZW50cyBhIHllYXIsIHRoZXkgZmF2b3VyIGhhdmluZyBmZXcgY2VudGVycyB3aXRoIGxvdHMgb2YgcGF0aWVudHMgKGFuZCBtYWNoaW5lcykgZm9yICJzZWNvbmQgbGV2ZWwiIHRyZWF0bWVudHMuIEkga25vdyBvZiBmZXcgaG9zcGl0YWxzIHdpdGggbGVzcyB0aGFuIDMgYWNjZWxlcmF0b3JzIGFjdHVhbGx5LiAKUHJvYmxlbSBnYW1ibGluZyBpcyBhbnkgZ2FtYmxpbmcgYmVoYXZpb3IgdGhhdCBkaXNydXB0cyB5b3VyIGxpZmUuIApBIGxvdCBvZiBmb2xrcyB3aWxsIHRlbGwgaW5jb21pbmcgY29sbGVnZSBzdHVkZW50cyB0byBmb2N1cyBvbiBlaXRoZXIgdGhlaXIgZ3JhZGVzIG9yIHRoZWlyIHNvY2lhbCBsaXZlcywgZGVwZW5kaW5nIG9uIHdoYXQgdGhvc2Ugc2FtZSBmb2xrcyBvd24gcHJpb3JpdGllcyBhcmUgKG9yIHdlcmUpLiBTdGlsbCBvdGhlcnMgd2lsbCBzdWdnZXN0IGhlbHBmdWwgc3R1ZHlpbmcgcHJhY3RpY2VzLCBsaWtlIGRvaW5nIG9uZSBob21ld29yayBpbiB0aGUgbGlicmFyeSByYXRoZXIgdGhhbiBvbmUgZG9ybWl0b3J5LiAoVGhhdCB3YXksIHN0dWRlbnRzIGRldmVsb3AgdGhlIHJpZ2h0IHBzeWNob2xvZ2ljYWwgYXNzb2NpYXRpb25zIHdpdGggZWFjaCBwbGFjZS4pLiAKQXMgZm9yIHRoZSBiYW4sIHdlIGRvbiBkaXNjbG9zZSB3aG8gcGVyZm9ybWVkIGEgbW9kIGFjdGlvbiB0byBwcmV2ZW50IGhhcmFzc21lbnQgZnJvbSB1c2VycywgYnV0IEkgY2FuIGxvb2sgaW50byBpdCBmb3IgYSBzcGVjaWZpYyByZWFzb24gYXMgdG8gd2h5LiBSZWFkIHRoZSBGQVEsIGJyb3dzZSB0aGUgZnJvbnQgcGFnZSwgc2VlIHRoZSBjb21tb24gdG9waWNzIGxpc3QsIG9yIHVzZSB0aGUgc2VhcmNoIGJveCB0byBzZWUgaWYgeW91ciBzdWJtaXNzaW9uIHdhcyByZWNlbnRseSBtYWRlIG9yIGNvdmVyZWQuIApCdXQgbWFrZSBubyBkb3VidCBhYm91dCBpdDsgdGhlc2UgcGVvcGxlIGFyZSB1dG9waWFucyBhbmQgaGF2ZSBubyBjb25jZXJuIGZvciB0aGUgcHJhY3RpY2FsIGFwcGxpY2F0aW9uIG9mIHBvbGljeS4gCkJ1dCBkdXJpbmcgYSBzZWNvbmQgcm91bmQgb2YgYnVsbGV0cywgcGVvcGxlIGZlbGwgd2l0aCB3b3VuZHMgYW5kIHNob3V0cyBvZiAiR2V0IGRvd24hIEdldCBkb3duISIgYW5kIHRoYXQgZ2F2ZSBjb25jZXJ0Z29lcnMgdGhlIGNsdWVzIHRoYXQgc2VudCB0aGVtIHNwcmF3bGluZyBvciBydW5uaW5nLk1hbnkgc2FpZCB0aGV5IHN0YXllZCBpbiBwbGFjZSB1bnRpbCB0aGUgZ3VuZmlyZSBicmllZmx5IHN0b3BwZWQgYW5kIHRoZW4gdGhleSByYW4gZm9yIGNvdmVyLiBQZW9wbGUgd2VyZSBwcmVzc2VkIGFnYWluc3QgcmFpbGluZ3MsIGdvdCBzdHVjayBvbiBmZW5jZXMsIGNyYXdsZWQgdW5kZXJuZWF0aCB0aGUgc3RhZ2UuIApIb3dldmVyLCBnZXJtIGZyZWUgbWljZSBzcGVuZCBtb3JlIHRpbWUgaW4gdGhlIGxpZ2h0IHNpZGUgb2YgdGhlIGFwcGFyYXR1cywgYWdhaW4gZGVtb25zdHJhdGluZyB0aGF0IG1pY2Ugd2l0aG91dCBndXQgYmFjdGVyaWEgaGF2ZSBsb3cgbGV2ZWxzIG9mIGFueGlldHkgbGlrZSBiZWhhdmlvciBiZWNhdXNlIHRoZSBsaWdodCBjaGFtYmVyIGlzIGNvbnNpZGVyZWQgdGhlIGF2ZXJzaXZlIHJlZ2lvbiBpbiB0aGlzIHRlc3QsIGFuZCBnZXJtIGZyZWUgbWljZSBzcGVuZCBtb3JlIHRpbWUgaW4gdGhlIGxpZ2h0IGNoYW1iZXIuMTMsMTVHZXJtIGZyZWUgbWljZSBoYXZlIGhlbHBlZCByZXNlYXJjaGVycyBleHBsb3JlIHdoZXRoZXIgdGhlcmUgYXJlIHBhcnRpY3VsYXIgdGltZXMgb3ZlciBhIG1vdXNlJ3MgbGlmZXNwYW4gd2hlbiBtaWNyb2Jpb3RhIGJyYWluIGludGVyYWN0aW9ucyBhcmUgbW9zdCBpbXBvcnRhbnQuIApQaG90b2dyYXBoOiBUb2xnYSBBa21lbi9BRlAvR2V0dHkgSW1hZ2VzV2Uga25vdyB0aGF0IGdpYW50IG11bHRpbmF0aW9uYWxzIGFyZSBlbmdhZ2VkIGluIGluZHVzdHJpYWwgc2NhbGUgdGF4IGF2b2lkYW5jZS4gCkhlIHJlc3BvbmRlZCB3ZWxsIHRvIGJlaW5nIHNodXQgZG93biwgdGhvdWdoLiBIZSBoYWQgZm91ciBwb2ludHMgdGhlIG5leHQgb3V0aW5nIGFnYWluc3QgU2FybmlhLCB0aG91Z2ggaXQgd2FzIGluIGEgZGVmZWF0Li4gCldlIGFsbG93ZWQgdGhlbSB0byBnZXQgaW50byBvdXIgaGVhZHMgYW5kIHRha2Ugc3R1cGlkIHBlbmFsdGllcy4gSWYgd2UgcmVtYWluZWQgZm9jdXNlZCBvbiBwbGF5aW5nIFBlbmd1aW5zIGhvY2tleSBpdCB3b3VsZCBoYXZlIGJlZW4gZGlmZmVyZW50Li4gCkJvbmFsYm8gU3ByaW5nIEJsdWViZXJyeSBEYW5jZTogR2V0IHlvdXIgZnVuayBvbiBmb3IgdGhlIEJvbmFsYm8gU3ByaW5nIERhbmNlLiAKTXkgbW9zdCByZWNlbnQgaW5zdGFudCB3YXMganVzdCB0aGUgb3RoZXIgbmlnaHQ6IGEgbWFuIHdhcyBwcmFjdGljYWxseSBjb3VudGluZyB0aGUgaWNlIGN1YmVzIHRoYXQgd2VudCBpbnRvIGhpcyBzb2RhIGN1cCwgYW5kIHdoZW4gaGUgc2FpZCB0aGF0IHdhcyB0b28gbXVjaCBhbmQgbXkgY29uY2Vzc2lvbmlzdCBwb3VyZWQgc29tZSBvdXQsIGhlIGdvdCBhbmdyeS4gVGhlbiB3aGVuIG15IGNvbmNlc3Npb25pc3QgYXNrZWQgd2hhdCBzb2RhIGhlIHdhbnRlZCwganVzdCB0byBjbGFyaWZ5LCBoZSBzbmFybGVkIHNvbWUgdmFyaWV0eSBvZiB0aGUgY29udGVtcHR1b3VzICJ3aGF0IGFyZSB5b3UsIG5ldz8iIGFuZCBjYW5jZWxsZWQgaGlzIHdob2xlIG9yZGVyLCBoYWxmIG9mIHdoaWNoIGhhZCBiZWVuIG1hZGUuIFRoZW4gaGUgbGVmdC4gVEhFTiBoZSBjYW1lIGJhY2sgZml2ZSBtaW51dGVzIGxhdGVyIGFuZCBjb21wbGFpbmVkIHRoYXQgbXkgY29uY2Vzc2lvbmlzdCB3b3VsZG4ndCBnaXZlIGhpbSB0aGUgb3RoZXIgaXRlbXMgZm9yIGZyZWUuCk92ZXJ2aWV3IGZvciBDb2x0b25Cb3JlZW4KTWFueSBhcmUgd2FpdGluZyBvbmxpbmUgcmlnaHQgbm93Lk1lZXQgU2luZ2xlcyBOZWFyIE1lTWUsIGFuZCBnZXQgY2hhdHRpbmcgdG8gbG9jYWwgc2luZ2xlcyB0b2RheS4gRmluZCBTaW5nbGUgR2lybHMgRm9yIEdldCBMYWlkIFRvbmlnaHQgVGhlIEludGVybmV0LiBOZWFyIE1lIGlzIGZ1bGwgb2Ygc2luZ2xlIG1lbiBhbmQgd29tZW4gbGlrZSB5b3UgbG9va2luZyBmb3IgZGF0ZXMsIGxvdmVycywgZnJpZW5kc2hpcCwgYW5kIGZ1bi4gQmVzdCBvZiBhbGwsIHRoZXJlIGFyZSB3ZWJzaXRlcyB0aGF0IGFyZSBzcGVjaWFsbHkgZGVzaWduZWQgZm9yIHNlbmlvciB1c2VycywgbWVhbmluZyBtb3N0IG9mIHRoZSBtZW1iZXJzIGFyZSBvZiBhIHNpbWlsYXIgYWdlLiAKT25lIG9idmlvdXMgZGlmZmVyZW5jZSBpcyB0aGF0IHBsYXllcnMgZG8gbm90IHNpdCByaWdodCBhY3Jvc3MgZnJvbSBlYWNoIG90aGVyLCByZW1vdmluZyBhbnkgYWJpbGl0eSB0byBvYnNlcnZlIG90aGVycyByZWFjdGlvbnMgYW5kIGJvZHkgbGFuZ3VhZ2UuIEluc3RlYWQsIG9ubGluZSBwb2tlciBwbGF5ZXJzIGxlYXJuIHRvIGZvY3VzIG1vcmUga2Vlbmx5IG9uIGJldHRpbmcgcGF0dGVybnMsIHJlYWN0aW9uIHRpbWUgYW5kIG90aGVyIGJlaGF2aW9yIHRlbGxzIHRoYXQgYXJlIG5vdCBwaHlzaWNhbCBpbiBuYXR1cmUuIFNpbmNlIHBva2VyIGlzIGEgZ2FtZSB0aGF0IHJlcXVpcmVzIGFkYXB0YWJpbGl0eSwgc3VjY2Vzc2Z1bCBvbmxpbmUgcGxheWVycyBsZWFybiB0byBtYXN0ZXIgdGhlIG5ldyBmcm9udGllcnMgb2YgdGhlaXIgc3Vycm91bmRpbmdzLgpJJ20gYSBudXJzZSBwcmFjdGl0aW9uZXIgYXQgYW4gdXJnZW50IGNhcmUsIGZvcm1lciBFUiBudXJzZS4gSW4gb3VyIGRlZmVuc2UsIDk5JSBvZiB0aGUgdGltZSB3aGVuIGEga2lkIChvciBhZHVsdCkgaXMgdm9taXRpbmcgb3IgY291Z2hpbmcgb3IgaGFzIGRpYXJyaGVhIG9yIGFueSBvdGhlciBjb21tb24gYWlsbWVudCwgaXQgaXMgdmlyYWwgYW5kIHdpbGwgZ28gYXdheSBvbiBpdHMgb3duIHdpdGhvdXQgdHJlYXRtZW50LiBIb3dldmVyLCB0aGF0IGRvZXNuJ3QgbWVhbiB0aGF0IEkgZG9uJ3QgdHJlYXQgcGVvcGxlIHdpdGggcmVzcGVjdCBhbmQgYWx3YXlzIGFzc3VtZSB0aGUgd29yc3QsIHdvcmtpbmcgbXkgd2F5IGJhY2t3YXJkIHVudGlsIEknbSBjb25maWRlbnQgdGhlcmUncyBubyBlbWVyZ2VudCBjb25kaXRpb24gZ29pbmcgb24uIApXaGl0ZSB3ZWRkaW5nIGRyZXNzICAgSSBmZWx0IHRoZSBzYW1lIHdheSBpbml0aWFsbHkuIEkgZW5kZWQgdXAgY2hvb3NpbmcgYW4gaXZvcnkvY2hhbXBhZ25lIGNvbG9yIHNvIHRoYXQgaXQgd2FzIGNsb3NlIGVub3VnaCB0byBhcHBlYXNlIHRoZSB0cmFkaXRpb25hbGlzdHMgYnV0IHN0aWxsIG5vdCBwdXJlIHdoaXRlLiBBcyBmb3Igc3R5bGUsIHlvdSBoYXZlIHRvIGxvdmUgeW91ciBsb29rICAgSSBzZWUgbm90aGluZyB3cm9uZyB3aXRoIGdvaW5nIHdpdGggYSBkcmVzcyB0aGF0IGxvb2tzIGxpa2UgdGhhdC4gCklsIGVzdCBnYWxlbWVudCBjb25zaWRyIGNvbW1lIHVuIHNwZWN0cmUgYW50aW1pY3JvYmllbiBjb250cmUgbGVzIGluZmVjdGlvbnMgYmFjdHJpZW5uZXMgZXQgbGVzIGNoYW1waWdub25zLCBlZmZpY2FjZSBjb250cmUgbGVzIHBhcmFzaXRlcyBpbnRlcm5lcyBldCBsZXMgdmVycywgaWwgcmd1bGUgbGEgdGVuc2lvbiBhcnRyaWVsbGUgdHJvcCBsZXZlIGV0IGVzdCB1biBhbnRpZHByZXNzZXVyLCB0b3V0IGVuIGNvbWJhdHRhbnQgbGUgc3RyZXNzIGV0IGxlcyB0cm91YmxlcyBuZXJ2ZXV4LiBMYSBzb3VyY2UgZGUgY2V0dGUgaW5mb3JtYXRpb24gZXN0IGZhc2NpbmFudGU6IGlsIHMnYWdpdCBkZSBsJ3VuIGRlcyBwbHVzIGdyYW5kcyBmYWJyaWNhbnRzIGRlIG1kaWNhbWVudHMgYXUgbW9uZGUsIHF1aSBkaXQgcXVlLCBhcHJzIHBsdXMgZGUgMjAgYW5zIGQnIGVzc2FpcyBlbiBsYWJvcmF0b2lyZSBkZXB1aXMgMTk3MCwgbGVzIGV4dHJhaXRzIG9udCBydmwgcXUnaWwgZHRydWl0IGxlcyBjZWxsdWxlcyBtYWxpZ25lcyBkYW5zIDEyIGNhbmNlcnMsIG5vdGFtbWVudCBkdSBjbG9uLCBkdSBzZWluLCBkZSBsYSBwcm9zdGF0ZSwgZHUgcG91bW9uIGV0IGR1IHBhbmNyYXMuIApBdCBmaXJzdCBpdCB3YXNuJ3QgZGlyZWN0ZWQgYXQgbWUsIGJ1dCB3aGVuIGl0IHdhcyBpdCB3YXMgYXdmdWwuIApSZWZlcmVuY2luZyBzZXB1a2t1IGluIGEgZ2FtZSBpc24gZ29pbmcgdG8gY2hhbmdlIHRoYXQsIGp1c3QgbGlrZSBub2JvZHkgaXMgZ29pbmcgdG8ga2lsbCBzb21lb25lIGJlY2F1c2UgdGhleSBkaWQgaXQgaW4gYSBnYW1lLiA+V2hhdCBpbiB0aGUgYWJvdmUgaXMgdml0cmlvbGljIGdhcmJhZ2U/IEl0IG1pZ2h0IGJlIG1pc2NvbnN0cnVpbmcgTlBJcyBvcmlnaW5hbCBhcmd1bWVudCBwZXJoYXBzLiBCdXQgSSBkb24gc2VlIGFueXRoaW5nIGhlcmUgdGhhdCByZW1vdGVseSBvZmZlbnNpdmUgb3Igdml0cmlvbGljLiAKRGFzIFByb2JsZW0gYmVzdGVodCBkYXJpbiwgZGFzcyBuaWNodCBudXIgU3ltcHRvbWUgdmVyc2Nod2luZGVuIiwgc29uZGVybiBhdWNoIHphaGxyZWljaGUgS29udHJhaW5kaWthdGlvbmVuIHVuZCBOZWJlbndpcmt1bmdlbiBleGlzdGllcmVuLiBKZSBrb21wbGV4ZXIgZWluIFBycGFyYXQgaXN0LCBkZXN0byBrb21wbGV4ZXIgc2luZCBhdWNoIGRpZSBXaXJrdW5nZW4gYXVmIGRlbiBPcmdhbmlzbXVzLi4gCkFzIHRoZSBjaGFuY2VsbG9yIGxpbmVzIHVwIHRoZSBzcHJpbmcgc3RhdGVtZW50LCB0aGUgZGViYXRlIHNob3VsZCBub3QgYmUgYWJvdXQgaW5jb21lIHRheCBvciBwZXJzb25hbCBhbGxvd2FuY2VzLCBidXQgaG93IHdlIHJlb3JpZW50YXRlIHRoZSB0YXggc3lzdGVtIHRvIHdoZXJlIHRoZSBtb25leSByZWFsbHkgbGllcy4uIApUaGV5IGxvb2sgY29tcGxldGVseSBzdG9jayBub3cuIApXZWxjb21lIHRvIGliYWNrcGFnZSBhbmQgZXhwbG9yZSBvdXIgY29tcGxldGUgbGlzdCBvZiAsICwgYW5kIHdobyB3aWxsIG1ha2Ugc3VyZSB0aGF0IHlvdSB3aWxsIGJlIGhhdmluZyBmdW4uIApJIGZpbmQgYSBsb3Qgb2YgaXQgaGFzIHRvIGRvIHdpdGggYWdlLiBJIGFtIG9ubHkgMjQgd2hpY2ggaW4gdGhlIGxvbmcgcnVuIGlzIG5vdCBtdWNoIG9sZGVyIHRoYW4geW91LCBidXQgeW91IGJlIGFtYXplZCBhdCBob3cgbXVjaCB5b3VyIG1pbmRzZXQgY2FuIGNoYW5nZSBpbiBqdXN0IHRocmVlIHllYXJzLiBZb3UgYmVjb21lIG1vcmUgY29tZm9ydGFibGUgd2l0aCB5b3Vyc2VsZiBhbmQgd2hhdCB5b3Ugd2FudCBvdXQgb2YgbGlmZSwgYW5kIHlvdSBiZWNvbWUgbGVzcyB3aWxsaW5nIHRvIGNvbXByb21pc2Ugb24gYW55IG9mIGl0LgpUaGVyZSBhcmUgbm8gZmFjdGlvbnMgY2FsbGVkICJUaGUgaGlnaCBlbHZlcyIgb3IgIlRoZSBkYXJrIGVsdmVzIi4uIAoiRGF0YSBmcm9tIHRoZSBhaXJwbGFuZSdzIGZsaWdodCBkYXRhIHJlY29yZGVyIChGRFIpIHNob3dlZCB0aGF0IHRoZSBhaXJwbGFuZSdzIHJpZ2h0IGVsZXZhdG9yIHdhcyBwb3NpdGlvbmVkIGZ1bGwgdHJhaWxpbmcgZWRnZSBkb3duIChURUQpIHdoZW4gdGhlIGZsaWdodCBjcmV3IGZpcnN0IHBvd2VyZWQgdXAgdGhlIGFpcnBsYW5lIG9uIHRoZSBkYXkgb2YgdGhlIGFjY2lkZW50IGFuZCByZW1haW5lZCB0aGVyZSB0aHJvdWdob3V0IHRoZSBhY2NpZGVudCBzZXF1ZW5jZS4gQW4gYWlycGxhbmUgcGVyZm9ybWFuY2Ugc3R1ZHkgKGJhc2VkLCBpbiBwYXJ0LCBvbiBGRFIgZGF0YSkgY29uZmlybWVkIHRoYXQgdGhlIGFpcnBsYW5lIGRpZCBub3QgcmVzcG9uZCBpbiBwaXRjaCB3aGVuIHRoZSBjYXB0YWluIHB1bGxlZCBvbiB0aGUgY29udHJvbCBjb2x1bW4uIEJhc2VkIG9uIHRoZSBzdHVkeSdzIGNvbXBhcmlzb24gd2l0aCBhIHByZXZpb3VzIHRha2VvZmYsIHRoZSBOYXRpb25hbCBUcmFuc3BvcnRhdGlvbiBTYWZldHkgQm9hcmQgKE5UU0IpIGRldGVybWluZWQgdGhhdCB0aGUgYWlycGxhbmUncyBsYWNrIG9mIHJvdGF0aW9uYWwgcmVzcG9uc2UgdG8gdGhlIGNvbnRyb2wgY29sdW1uIGlucHV0IGRpZCBub3QgYmVjb21lIGFwcGFyZW50IHRvIHRoZSBjYXB0YWluIGluIHRpbWUgZm9yIGhpbSB0byBoYXZlIHN0b3BwZWQgdGhlIGFpcnBsYW5lIG9uIHRoZSBydW53YXkuLiAKRmVicnVhcnk6IFRoZSBzYW1lIHNldCBzdG9uZSwgcmV0dXJuZWQgYWZ0ZXIgaGF2aW5nIGJlZW4gcmUgc2V0LCBoYXMgc29tZXRoaW5nIGltbWVkaWF0ZWx5IG9idmlvdXMgdG8gdXMgd2l0aG91dCBldmVuIG5lZWRpbmcgYSBsb3VwZQpWYWNhdGlvbiBpbiBWZWdhcyFCdXkgYSB0aWNrZXQgdG8gZmFidWxvdXMgTGFzIFZlZ2FzIGFuZCBoYXZlIHRoZSB0aW1lIG9mIHlvdXIgbGlmZSEgVGhlcmUgaXMgc28gbXVjaCB0byBzZWUgYW5kIGRvIHRoYXQgb25lIHRyaXAsIHVubGVzcyBpdCBpcyBhIHZlcnkgbG9uZyBvbmUsIGlzIGRlZmluaXRlbHkgbm90IGVub3VnaC4gWW91IHdpbGwgd2FudCB0byBjb21lIGJhY2sgdGltZSBhbmQgdGltZSBhZ2FpbiB0byB2aXNpdCB0aGUgY2l0eSBvZiBsaWdodHMgYW5kIGFjdGlvbi4KRG8gbm90IGxpbmsgdG8gb3IgcG9zdCBzY3JlZW5zaG90cyBvZiBvdGhlciBzdWJyZWRkaXRzIGZvciB0aGUgc29sZSBwdXJwb3NlIG9mIGJyaWdhZGluZywgdm90ZSBtYW5pcHVsYXRpb24sIG9yIHRvIGF0dGFjayB0aGVpciBmYW4gYmFzZSBvciBzcGVjaWZpYyB1c2Vycy41Yy4gUG9zdGluZyBhYm91dCBiYW5zIG9idGFpbmVkIGZyb20gb3RoZXIgc3VicmVkZGl0cyB3aWxsIHJlc3VsdCBpbiBhIGJhbiBoZXJlIGFzIHdlbGwuNi4gTm8gcGVyc29uYWwgaW5mb3JtYXRpb24uIApXZSBkZWNpZGVkIHRoYXQgaWYgZXZlcnlvbmUgcGxheWVkIFRleGFzIEhvbGQnZW0gYXMgYSBzaW5nbGUgdGFibGUgaXQgd291bGQgbGFzdCBmb3IgYWJvdXQgdHdvIGhvdXJzLiBUaGVuIGV2ZXJ5b25lIGNvdWxkIHRha2UgYSBicmVhaywgZ2V0IHNvbWUgZm9vZCBhbmQgZHJpbmtzLCBoYXZlIGEgc21va2UgKHdlIGRvbid0IGxldCBhbnlvbmUgc21va2UgaW4gdGhlIGhvdXNlKSBhbmQgdGhlbiB3ZSdkIGhhdmUgaXQgc3dpdGNoZWQgb3ZlciB0byBSb3VsZXR0ZS4gT25lIHRoaW5nIHRvIHVuZGVyc3RhbmQgdGhvdWdoIGlzIHRoYXQgd2UgdXNlIHRoZSBCbGFja2phY2sgdGFibGUgZm9yIFRleGFzIEhvbGQnZW0uIEdyYW50ZWQgaXQncyBub3QgdGhlIHBlcmZlY3Qgc2V0dXAsIGJ1dCBmb3Igc2luZ2xlcyBwbGF5IGl0IHdvcmtzIGp1c3QgZmluZS4KVHVybnMgb3V0IGhlIHdhcyBoYXZpbmcgc29tZSBwZXJzb25hbCBpc3N1ZXMgLiBXZSBib3RoIGFwb2xvZ2l6ZWQgYW5kIHRoZW4gdGFsa2VkIGFib3V0IHRoaXMgd2Vla2VuZHMgZmlnaHRzLiAKSSB3YXMgMTIgdGhlIHllYXIgaGlwIGhvcCB3YXMgYWxsZWdlZGx5IGJvcm4gKDE5NzMpIGFuZCBncmV3IHVwIGFib3V0IDEyIG1pbGVzIGZyb20gaXRzIGJpcnRocGxhY2UgKFNvdXRoIEJyb254KSBidXQgYXMgYSB3aGl0ZSBraWQgaW4gdGhlIHN1YnVyYnMgaXQgbWF5IGFzIHdlbGwgaGF2ZSBiZWVuIGEgd29ybGQgYXBhcnQuIEl0IHdhc24gdW50aWwgR3JhbmRtYXN0ZXIgRmxhc2ggd2hlbiBpdCBldmVuIGVudGVyZWQgdGhlIHBlcmlwaGVyeSBvZiBteSB3b3JsZCBhbmQgaXQgbmV2ZXIgcmVhbGx5IHJlc29uYXRlZCB3aXRoIG1lLiBUaGVyZSB3YXMgc29tZSBlYXJseSBjcm9zc292ZXIgKEJsb25kaWUsIEFlcm9zbWl0aCwgbG9va2luZyBiYWNrIG9uIGl0IGV2ZW4gc29tZSBDbGFzaCBhbmQgQmlnIEF1ZGlvIER5bmFtaXRlKSBidXQgb24gdGhlIHdob2xlLCBzdGlsbCBuZXZlciBhIGZhbiBvZiB0aGUgInJlYWwiIGhpcCBob3AuCkF0IG1vc3QgcGxhY2VzIHRoaXMgaXMgcHJldHR5IHJhcmUgYXMgdGhlIHRpcHBlZCB3YWdlcyB3b3VsZCBwcm9iYWJseSBiZSBhYm91dCB0d2ljZSB3aGF0IHlvdSBhcmUgZ2V0dGluZyBwYWlkIGFzIGEgYmFydGVuZGVyLiAKRXZlcnkgZmFybWVyJ3Mgc3RvcnkgaXMgdW5pcXVlLCBwYXNzaW9uIGZpbGxlZCBhbmQgZGVzZXJ2ZXMgc2hhcmluZy4gS2VlcCBhbiBleWUgb3V0IGZvciBuZXcgdmVuZG9yIHByb2ZpbGVzIGluIHRoZSB3ZWVrcyB0byBjb21lLi4gCihQZXIgYWNjZWRlcmUgYWwgbm9zdHJvIHN0YXR1dG8gY2xpY2NhIHF1aSkKV2hlbiB0aGUgRGV0cm9pdCBjYXNpbm9zIGFsbCBmaXJzdCBvcGVuZWQgdXAsIHNvbWUgcGVvcGxlIHdlcmUgcG9ja2V0aW5nIGNoaXBzIGFuZCB1c2luZyB0aGVtIG91dHNpZGUgYXMgd2VsbC4gU29tZSBwbGFjZXMgYWNjZXB0ZWQsIHNvbWUgZGlkbiBkdWRlIHN0b2xlIGEgYnVuY2ggb2YgcG9rZXIgdG91cm5hbWVudCBjaGlwcyBvbmUgZGF5IGZyb20gTW90b3JjaXR5LiAKTG92ZWQgYW5kIHJlc3BlY3RlZCBieSBtYW55LiAKVGVuc2lvbiAgIFRlbnNpb24gaGVhZGFjaGVzIGFyZSBjYXVzZWQgYnkgbXVzY3VsYXIgc3RyYWlucyBpbiB0aGUgaGVhZCBhbmQgbmVjayBhbmQvb3IgZW1vdGlvbmFsIHN0cmVzcy4gVGVuc2lvbiBoZWFkYWNoZXMgYXJlIHVzdWFsbHkgZHVsbCwgc3RlYWR5LCBhY2hpbmcgcGFpbnMgb24gYm90aCBzaWRlcyBvZiB0aGUgaGVhZC4gClRoaXMgaW5jbHVkZWQgdGhlIHBpY2tzLCB3aXRoIHRoZSBDcm93biBDYXNpbm8gbG9nbyBvbiB0aGVtLCB3aGljaCB3ZXJlIGFsbGVnZWRseSBzcXVlZXplZCBkb3duIGJlc2lkZSB2YXJpb3VzIHBva2VyIG1hY2hpbmUgYnV0dG9ucyB0byBrZWVwIHRoZW0gcGxheWluZy4gIkl0IGNlcnRhaW5seSByYWlzZWQgYSBjb3VwbGUgb2YgZXllYnJvd3MgdGhpcyBtb3JuaW5nIGF0IHRoZSBWQ0dMUiB3aGVuIEkgc2hvd2VkIHRoZW0gdGhlIHBpY2tzLCB3aGVuIEkgc2hvd2VkIHRoZW0gdGhlIG11bHRpcGxlIGxveWFsdHkgY2FyZHMuIAozMCB3b3VsZCBiZSBiZXR0ZXIuIApJIHdhcyB3cm9uZy4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29ZYSBrbm93IHdoZW4gYSBwdXBweSBydW5zIGludG8gYSBzbGlkaW5nIGdsYXNzIGRvb3IgYW5kIGlzIHRvdGFsbHkgdGFrZW4gYWJhY2sgYW5kIHlvdSBjYW4ndCBoZWxwIGJ1dCBmZWVsIGl0J3MgbG92YWJseSBhZG9yYWJsZSBmb3IgYmVpbmcgc28gY2x1ZWxlc3M/IEl0J3MgbGlrZSB0aGF0LiAKTW9zdCBsaXZlIHBsYXllcnMgYXJlbiBnb2luZyB0byBibHVmZiB3aXRoIGEgbWlzc2VkIGNsdWIgb3IgZXZlbiB2YWx1ZSBiZXQgQXggaGVyZSwgc28gdGhlIGZvbGQgaXMgZWFzeSBpZiB0aGV5IGJldC4gClBlcnNvbm5lbCB1cG9uIHRoZSBIZWFydGggZG8gbm90IGNsYWltIHRvIGJlIG1lZGljYWwgcHJhY3RpdGlvbmVycy4gV2UgZG8gbm90IGRpYWdub3NlLCB0cmVhdCBvciBwcmVzY3JpYmUgYW55IG1lZGljYWwgdHJlYXRtZW50IG9yIGFkdmljZS4gCkxldmVsIEFuZGEgc2FhdCBpbmkgZGl0dW5qdWtrYW4gZGkgbGF5YXIgYmFnaWFuIGF0YXMuIEFuZGEgYmlzYSBtZW5pbmdrYXRrYW4gbGV2ZWwgc2FhdCBwZW5nYWxhbWFuIEFuZGEgYmVydGFtYmFoLCBkYW4gcGVuZ2FsYW1hbiBpbmkgZGlkYXBhdGthbiBzYWF0IEFuZGEgYmVybWFpbiBkYW4gbWVtZW5hbmdrYW4gcGVybWFpbmFuLiAKQnV0IHdoYXQgaWYgdGhlIGZpenpsaW5nIGtlZXBzIGdvaW5nIG9uIGFmdGVyIHlvdSBzd2FsbG93ZWQ/IFlvdXIgZXNvcGhhZ3VzIHdhcyBwcmVwYXJpbmcgdG8gaGFuZGxlIGFuIG91bmNlIG9mIGxpcXVpZCwgYnV0IHN1ZGRlbmx5IGl0IGhhcyBhbiBvdW5jZSBvZiBsaXF1aWQgYW5kIGEgbGFyZ2Ugdm9sdW1lIG9mIGdhcyBpbiBpdC4gSXQgYXMgaWYgeW91IHN3YWxsb3dlZCBhIGRlZmxhdGVkIGJhbGxvb24gYW5kIGl0IHNvbWVob3cgaW5mbGF0ZWQgaXRzZWxmIHdoaWxlIHlvdSB3ZXJlIHN3YWxsb3dpbmcgaXQhIFRoaXMgY2F1c2VzIHBhaW5mdWwgc3RyZXRjaGluZyBvZiB0aGUgZXNvcGhhZ3VzLgpQY2J1aWxkdGhybyAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQnV0IHN0aWxsLCBJIGRvdWJ0IHRoYXQgaXQgd2FzIE9CTCBpbiBhY3R1YWwuIEl0IG11c3QgaGF2ZSBiZWVuIHNvbWUgb3RoZXIgaGlnaCBwcm9maWxlIGtpbGxpbmcgYnV0IG5vdCBPQkwgb3RoZXJ3aXNlIFVTIHdvdWtkIGhhdmUgZXhwb3NlZCB0aGUgZmFjZSBpbiBtZWRpYSBmb3Igc3VyZS4KSW4gdGhlIGVuZCwgaXQgaXMgWU9VIHdobyBkZWNpZGVzIHdoYXQgbWFrZXMgeW91IGZlZWwgc2V4eSwgYXR0cmFjdGl2ZSBhbmQgY2hhcm1pbmcuIApJdCB0YWtlcyB0aW1lIHRvIGJlbGlldmUgaXQuIEl0IHRvdGFsbHkgbm9ybWFsIHRvIGdyaWV2ZSB0aGUgZmFudGFzeSBvZiBhIG1vdGhlci4gWW91IGZpbmFsbHkgcmVhbGl6ZWQgdGhhdCBmYW50YXN5IHdpbGwgbm90IGNvbWUgdHJ1ZSwgYnV0IHRoZSBncmllZiBpcyByZWFsLiAKQW5kIGp1c3Qgd2hlbiBJIHRob3VnaHQgSSBuZXZlciBjb3VsZCBtYWtlIGl0LCBJIGRpZC4gCk1hc3RlciB0aGVzZSBzdHlsZXMgYW5kIHF1aWNrbHkgaWRlbnRpZnkgdGhlc2UgcGxheWVycyBkdXJpbmcgeW91ciBwb2tlciBnYW1lLiAKTWVhbndoaWxlLCB0aGUgY2l0eSBwb2xpY3kgb2YgcGF5aW5nIGFzIGl0IGdvZXMgZm9yIG1ham9yIHByb2plY3RzIGluc3RlYWQgb2YgYm9ycm93aW5nIGhhcyBzZWVuIHRoZSBjaXR5IGRlYnQgZGVjbGluZSBmcm9tICQyMzAgbWlsbGlvbiBpbiAyMDAzIHRvICQ3OCBtaWxsaW9uIGxhc3QgeWVhciwgdG8gYSBwcm9qZWN0ZWQgJDQ3IG1pbGxpb24gYnkgdGhlIGVuZCBvZiB0aGUgY3VycmVudCBjb3VuY2lsIHRlcm0gaW4gMjAyMi4KRm9yIHRoZSBwYXN0IDEwIGNvbnNlY3V0aXZlIG1vbnRocywgbG9zc2VzIGluIEdlZWxvbmcgaGF2ZSByaXNlbiBjb21wYXJlZCB0byBtb250aGx5IGxvc3NlcyByZWNvcmRlZCBmb3IgdGhlIHByZXZpb3VzIHR3byB5ZWFycy4gCih3aGljaCBJIGFtIGp1c3QgdXNpbmcgYXMgYW4gZXhhbXBsZS4gCkZlbWluaW5lIGlzIGEgdmVyeSBzdWJqZWN0aXZlIG1lYXN1cmUgYmFzZWQgb24gc29jaWFsIHN0YW5kYXJkcyBhYm91dCBhcHBlYXJhbmNlLiBJbiB0aGlzIGNhc2UsIHJlZ2FyZGxlc3Mgb2YgaG93IGZlbWluaW5lIG9yIG5vdCB5b3UgdGhpbmsgdGhpcyBwZXJzb24gYXBwZWFycywgdGhleSBpZGVudGlmeSBhcyBhIG1hbi4gR2l2ZW4gYXMgdGhlaXIgc2V4IG9uIHRoZWlyIGJpcnRoIGNlcnRpZmljYXRlKSAibWFsZSIgYXQgYmlydGgsIGJ1dCBpZGVudGlmaWVzIGFzIGEgd29tYW4uIApUaGV5IGtlZXAgdGhlICQxMjUgbW9udGhseSBDYW5hZGEgQ2hpbGQgQmVuZWZpdCB0aGV5IHJlY2VpdmUgZWFjaCBtb250aCBpbiBNYXJ5IFRGU0EgYW5kIHRoZXkgaGF2ZSBtdXR1YWwgZnVuZHMgd2hvc2UgZmVlcyBhbmQgYXNzZXRzIHRoZXkgZmluZCBkaWZmaWN1bHQgdG8gdW5kZXJzdGFuZC4gClRoZSBmaXJzdCBzY2llbnRpc3RzIHRoYXQgc3R1ZGllZCByYWNlIGFuZCBJUSB3ZXJlIHdoaXRlIHN1cHJlbWFjaXN0cyB2ZXJ5IG9wZW4gYWJvdXQgdGhlIGZhY3QgdGhhdCB0aGV5IHdlcmUgdHJ5aW5nIHRvIHByb3ZlIHdoaXRlcyB3ZXJlIHN1cGVyaW9yIGFuZCBqdXN0aWZ5IEppbSBDcm93IGxhd3MsIGJhbnMgYWdhaW5zdCBpbnRlcnJhY2lhbCBtYXJyaWFnZSwgZXVnZW5pY3MsIGFuZCBldmVuIGdlbm9jaWRlLiBTbyB0aGV5IHRvb2sgYSB0ZXN0IGRldmVsb3BlZCBpbiB0aGUgVUsgdG8gaWRlbnRpZnkgc3R1ZGVudHMgZmFsbGluZyBiZWhpbmQgaW4gc3R1ZGllcyB0byB0YXJnZXQgdGhlbSBmb3IgZXh0cmEgZWZmb3J0cywgYW5kIHdhcnBlZCBpdCB0byBzdXBwb3J0IHRoZWlyIHByZWNvbmNlaXZlZCByYWNpc3QgY29uY2x1c2lvbnMuIFRoZXkgb2ZmZXJlZCBubyBmdXJ0aGVyIGluc2lnaHRzIG5vciBmdXJ0aGVyIHN0dWRpZXMgb25jZSB0aGV5IGdvdCB0aGUgcmVzdWx0IHRoZXkgd2FudGVkLCBleGNlcHQgdG8gYWxzbyB0aWUgdGhpcyB0byBza3VsbCBzaXplIHRvICJwcm92ZSIgSVEgd2FzIHJpZ2lkIGFuZCBjb3VsZG4gYmUgY2hhbmdlZCAoYWdhaW4sIHRoZSBGbHlubiBlZmZlY3QgZGlzcHJvdmVzIGFsbCBvZiB0aGlzKS4gVGhlaXIgc3R1ZGllcyB3b3VsZCBiZSBsYXVnaGVkIG91dCBvZiBhY2FkZW1pYSB0b2RheSBubyBtYXR0ZXIgd2hhdCBzdWJqZWN0IHRoZXkgd2VyZSByZXNlYXJjaGluZy4KVGhhdCBoZXIgc3RvcnkuIFRoZSB0cnVlIGhpc3Rvcnkgb2YgQW1lcmljYSBhbmQgUG9jYWhvbnRhcywgaW52b2x2ZXMgY2hpbGQgcmFwZSwgYWJkdWN0aW9uLCBhbmQgdGhlIGVuc2xhdmVtZW50IGFuZCBnZW5vY2lkZSBvZiBoZXIgcGVvcGxlLiBOb3Qgc29tZSBmZWVsIGdvb2QgZ21hIFdpbGxvdywgdGFsa2luZyBhbmltYWwsIERpc25leSBicyBoYXBweSBlbmRpbmcgdGhleSBicmFpbndhc2hlZCB0aGlzIGNvdW50cnkgd2l0aC4KWWVhaCEgSSB0b2xkIGhpbSBoZSBoYWQgdG8gdHJ5IHNvbWUgd2l0aCBob21lbWFkZSBtb3p6YXJlbGxhIHNvbWUgZGF5IChteSBmYXZlIHN1bW1lciBzbmFjaykuIApEYXRlOiBFdmVudDogVHlwZTogU2NvcmU6IFJlc3VsdDogMTguMTIuMjAxMSAxMTozMDogU2FudG9zICAgRkMgQmFyY2Vsb25hIChNb3JlIEJldHMpIEZJRkEgQ2x1YiBXb3JsZCBDdXA6IDE4LjEyLjIwMTEgMTE6MzA6IFNhbnRvcyAgIEZDIEJhcmNlbG9uYQpBaCwgeWV0IGFub3RoZXIgaXNzdWUgb2YgdGhlIHNlcGFyYXRpb24gb2YgQ2h1cmNoIGFuZCBTdGF0ZSBjYW1lIHVwIGluIHRoZSBjb3VydHMgdGhpcyB3ZWVrLiBBbmQgdGhpcyBvbmUgaXMgaW1wb3J0YW50LiBJIG5vdCB0YWxraW5nIGFib3V0IHRoZSBsZWdhbCBkZWZpbml0aW9uIG9mIG1hcnJpYWdlIG9yIGV2ZW4gdGhlIGNvbnZlcnNpb24gb2YgTXVzbGltIHNvbGRpZXJzIHRvIENocmlzdGlhbml0eS4gSW5zdGVhZCwgSSBhbSB0YWxraW5nIGFib3V0IHRoZSBpbmNyZWRpYmx5IGltcG9ydGFudCBpc3N1ZSBvZiBsaWNlbnNlIHBsYXRlcy4KSSB3YXMgY2FtZSB2ZXJ5IGNsb3NlIHRvIHN3aXRjaGluZyBjYXJlZXJzIHRvIGJlIGFuIFJNVCwgdG9vayBhIGZldyBpbnRybyBjbGFzc2VzLCBob3dldmVyIGl0IGp1c3Qgd2FzbiB3b3J0aCBpdCBmb3IgbWUgb25jZSBJIGRpZCB0aGUgbWF0aC4gClRoZSBtYXNzYWNyZSBoYXMgYnJvdWdodCBuZXcgYXR0ZW50aW9uIHRvIHRoZSB3b3JsZCBvZiBoaWdoIGxpbWl0IHZpZGVvIHBva2VyIGFuZCBjYXNpbm8gY29tcHMgd2hlcmUgaGlnaCByb2xsZXJzIGFyZSBnaXZlbiBhbGwgc29ydHMgb2YgZnJlZSBpdGVtcyB0byBrZWVwIHRoZW0gZ2FtYmxpbmcuIFRoZSBiaWdnZXN0IGdhbWJsZXJzIG9mdGVuIGtub3duIGFzIHdoYWxlcyBjYW4gZ2V0IHN1Y2ggcGVya3MgYXMgY2hhcnRlcmVkIHBsYW5lcywgYnV0bGVycyBhbmQgZnJlZSBsb2RnaW5nIGF0IGEgJDM1LDAwMCBhIG5pZ2h0IHZpbGxhLi4gClRocmVlIHBlb3BsZSBmcm9tIFNpeCBOYXRpb25zIG9mIHRoZSBHcmFuZCBSaXZlciB0d28gbWVuIGFuZCBvbmUgd29tYW4gaGF2ZSBiZWVuIGNoYXJnZWQgd2l0aCBzZWNvbmQgZGVncmVlIG11cmRlciBpbiB0aGUgZGVhdGhzIG9mIE1lbGlzc2EgVHJ1ZGkgTWlsbGVyLCAzNywgd2hvIHdhcyBzZXZlbiBtb250aHMgcHJlZ25hbnQgYXQgdGhlIHRpbWUgb2YgaGVyIGRlYXRoLCBBbGFuIFBvcnRlciwgMzMsIGFuZCBNaWNoYWVsIEphbWllc29uLCAzMi4uIApJIGp1c3Qgc3Rvb2QgdGhlcmUgd2l0aCBhIGNoaXBwZXIgc21pbGUgb24gbXkgZmFjZSwgZGlyZWN0bHkgbmV4dCB0byBNWSB0diB0aGF0IHRoZXkgd2VyZSB3YXRjaGluZyAoaGFyZCB0byBpZ25vcmUpIHVudGlsIHRoZXkgYWxsIGJlY2FtZSB1bmNvbWZvcnRhYmxlIGFuZCBza3Vsa2VkIG91dCBvZiB0aGUgcm9vbS4gTWFyaXNzYSB3YXMgc2VldGhpbmcsIGJ1dCBJIGFic29sdXRlbHkgbWFpbnRhaW5lZCBteSBjaGlwcGVyIGF0dGl0dWRlIGFzIGlmIEkgd2VyZSB1dHRlcmx5IGNsdWVsZXNzLiBJIHB1dCBhIGZyZXNoIHBpbGxvd2Nhc2Ugb24gbXkgcGlsbG93LCBncmFiYmVkIG15IGJvb2ssIGFuZCBzZXR0bGVkIGluIG9uIG15IGJlZCB0byByZWFkIHdoaWxlIHNoZSBodWZmZWQgYXJvdW5kIHRoZSByb29tIGluIGEgc25pdC4KVHJvaGF3YWkgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KTWFjIGFuZCBJbnRlbCBqdXN0IGhhZCBtYXNzaXZlIHNlY3VyaXR5IGZsYXdzIGluIHRoZXkgaGFyZHdhcmUgYW5kIHNvZnR3YXJlIHRoYXQgaGl0IHJlbGVhc2VkIHRoYXQgd2UgZGlkbiBrbm93IGFib3V0IGZvciBhIHdoaWxlLCBhbmQgd2hlbiBXaW5kb3dzIDEwIGRyb3BwZWQgTWljcm9zb2Z0IGxpdGVyYWxseSByZXdyb3RlIHdpbmRvd3MgdG8gaW50cm9kdWNlIGEgaHVnZSBhbW91bnQgb2YgYW50aSBwcml2YWN5IG1lYXN1cmVzIHRoYXQgcGVvcGxlIGhhZCBubyBjaG9pY2UgaW4gYWNjZXB0aW5nIG9mIHRoZXkgd2FudGVkIHRoZSB1cGRhdGUgb3IgYSBuZXcgd2luZG93cyBjb21wdXRlci4gCkZvciBleGFtcGxlLCBkZWFkbHkgZ2FzIHVzZWQgaW4gQW5kZXJzb24gR3JhaGFtJ3MgQ29sbGFwc2Ugb2YgSG9tbyBTYXBpZW5zIGFuZCBOZWlsIEJlbGwncyBDbGF5IHRoZSBwb2lzb24gZ2FzIGtpbGxzIDEuNSBiaWxsaW9uKSBhbmQgRGFsdG9uJ3MgRGVhdGggd2hpbGUgUmVnaW5hbGQgR2xvc3NvcCdzIE9ycGhhbiBvZiBTcGFjZSBjcmVhdGVkIGFuIGFsaWVuIGF0b21pYyBzcGFjZXNoaXAgd2hpY2ggZGVsaXZlcmVkIGhvbG9jYXVzdGFsIGRlYXRoIHRvIFNvdmlldHMgYW5kIENoaW5lc2UgYW5kIENvbW11bmlzdHMgaW4gZ2VuZXJhbC4uIApJdCB3YXMgbXkgZmlyc3QgZXhwZXJpZW5jZSB3aXRoICJndWlkZWQgcmVsYXhhdGlvbi9tZWRpdGF0aW9uIiB0ZWNobmlxdWVzIHRoYXQgSSB3YXMgdW5rbm93aW5nbHkgZG9pbmcsIGFuZCB0aGF0IHByb2R1Y2VkIGEgcHJvZm91bmRseSByZWxheGluZywgY2FsbWluZywgY29udGVudGVkIHN0YXRlLiBJIHN0aWxsIGxvdmUgdG8gc3dpbSBpdCdzIGp1c3QgYXdlc29tZS4uIApTaGUgd2FzIHNwZWFraW5nLCBvciB3aGlzcGVyaW5nLCBhYm91dCBKYXljZWUgRHVnYXJkLCBhIHdvbWFuIGtpZG5hcHBlZCBhcyBhIGNoaWxkIGFuZCBrZXB0IGNhcHRpdmUgd2VsbCBpbnRvIGFkdWx0aG9vZC4gQXMgdG9kYXkgTlkgVGltZXMgc2FpZCBpbiBpdHMgaGVhZGxpbmUsIE1zLiAKUHJhY3RpY2UgYWxsIHRob3NlIHN0ZXBzIHlvdSBrbm93IGFuZCBpbnZlbnQgbmV3IG9uZXMgdW50aWwgeW91IGxpa2UgeW91cnNlbGYuIEEgZ29vZCBmcmllbmQgb2YgbWluZSByZWNvbW1lbmRlZCB0aGlzLiAKR00ncyBwbGFudCByYXRpb25hbGl6YXRpb24gaXMgaGl0dGluZyBjb21tdW5pdGllcyBsaWtlIExvcmRzdG93biwgcHJvdWRseSB0b3V0ZWQgYXMgaG9tZSBvZiB0aGUgQ2hldnJvbGV0IENydXplIG9uIHRoZSBub3J0aCBzaWRlIG9mIHRoZSBPaGlvIFR1cm5waWtlLCBlc3BlY2lhbGx5IGhhcmQuIEFuZCBkZXNwaXRlIChQcmVzaWRlbnQgRG9uYWxkKSBUcnVtcCdzIHBsZWEgdG8gbG9jYWxzIHRvIGtlZXAgdGhlaXIgaG91c2VzIGJlY2F1c2UgdGhlIGpvYnMgImFyZSBhbGwgY29taW5nIGJhY2ssIiBwZW9wbGUgYXJlIGZpbmFsbHkgbGVhdmluZy4KMykgVXNlIGxvdHMgb2YgbHVicmljYW50LiBTaW5jZSB0aGUgYW5hbCByZWdpb24gaXMgbm90IHNlbGYgbHVicmljYXRpbmcsIGFuYWwgbHVicmljYW50cyBhcmUgZXh0cmVtZWx5IGhlbHBmdWwgZm9yIG1ha2luZyBwZW5ldHJhdGlvbiBtb3JlIGNvbWZvcnRhYmxlIGFuZCBwbGVhc3VyYWJsZS4gV2F0ZXIgYmFzZWQgYW5kIHNpbGljb25lIGJhc2VkIGx1YmVzIHdvcmsgd2VsbCB3aXRoIGJvdGggbGF0ZXggYW5kIHBvbHl1cmV0aGFuZSBjb25kb21zLiBNYW55IGNvdXBsZXMgcHJlZmVyIGEgdGhpY2tlciBsdWJlIChhIHJhdGhlciB0aGFuIGEgImxpcXVpZCBmb3IgYW5hbCBzZXguIFVzZSBhcyBtdWNoIGx1YnJpY2FudCBhcyBwb3NzaWJsZS4gWW91IHJlYWxseSBjYW4ndCB1c2UgdG9vIG11Y2guCkp1c3QgZ290IHRoZSBTaWdtYSBsYXN0IG5pZ2h0IGFuZCBpdCBpcyBqdXN0IGFzIGdvb2QgYXMgZXZlcnlvbmUgc2F5cywgcHJvYmFibHkgZXZlbiBiZXR0ZXIuIEkgZGlkbid0IHRoaW5rIGxvdyBsaWdodCB3b3VsZCBiZSB0aGF0IGh1Z2Ugb2YgYSBkaWZmZXJlbmNlIGJ1dCBpdCBpcy4gVGhlIGltYWdlcyBhcmUgdmVyeSBzaGFycCEgSSBhbSBzbyBnbGFkIEkgZ3JhYmJlZCB0aGlzIGxlbnMuIEkgYW0gcHV0dGluZyBteSAxMiAzNSBJSSB1cCBmb3Igc2FsZS4gSSB0aGluayB0aGUgb25seSBkb3duc2lkZSBzbyBmYXIgaXMgdGhlIHdlaWdodCBvZiB0aGUgY29tYm8sIGRlZmluaXRsZXkgbm90IGxpZ2h0IGJ5IGFueSBtZWFucy4gQnV0LCBJJ3ZlIGdvdCB0aGUgMjVtbSBuYXRpdmUgaWYgSSB3YW50IHRvIGdvIGxpZ2h0LiBGb3IgbWUgdGhlIGxvdyBsaWdodCBjYXBhYmlsaXR5IGFuZCB0aGUgc2hhcnBuZXNzIHRydW1wIHRoZSB3ZWlnaHQgaXNzdWUuIEV2ZW4gd2l0aCB0aGUgaWJpcyBpdCBjb21wYXJlcyBuaWNlbHkgdG8gMTIgMzUuIE1ha2UgdGhlIGp1bXAsIHlvdSdsbCBiZSBnbGFkIQpVbmxpa2UgbW9zdCBob2JiaWVzLCBwb2tlciBwbGF5ZXJzIGFyZSBhY3R1YWxseSBxdWl0ZSBuaWNlIHRvIG5ld2JpZXMgYmVjYXVzZSB0aGV5IGtub3cgeW91IGFyZSByZWxhdGl2ZWx5IGVhc3kgbW9uZXkuIEFzayBxdWVzdGlvbnMgd2hlbiB5b3UgYXJlIGNvbmZ1c2VkIGFuZCBpbnRlcmFjdCB3aXRoIHBlb3BsZSB3aGVuIGl0IGZlZWxzIG5hdHVyYWwgdG8gZG8gc28uIApDYWVzYXIgaGFzIHZvZGthIGluZnVzZWQgd2l0aCBqYWxhcGVub3MuIApTaGUgaGFzIGEgTWFzdGVyJ3MgRGVncmVlIGluIEhpc3RvcnkgZnJvbSBHZW9yZ2lhIFN0YXRlIFVuaXZlcnNpdHksIGFuZCBhIEJhY2hlbG9yJ3MgRGVncmVlIGluIEhpc3RvcnkgZnJvbSBNZXJjZXIgVW5pdmVyc2l0eS4gClRoZSBmaXJzdCBmZXcgdGltZXMgd2UgaGFkIHNleCBJIHNwZW50IHRoZSB3aG9sZSB0aW1lIHRyeWluZyB0byBjb21lIGFnYWluIGFuZCBpdCBlbmRlZCB1cCBub3QgYmVpbmcgYWxsIHRoYXQgZ29vZCBmb3IgbWUuIAoxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0RlZmluZSByaXNrIGF2ZXJzZS4gSWYgaXQgaXMgaW4gdGhlIGNvbW1vbiBzZW5zZSBtZWFuaW5nIG9mIG5vdCB0YWtpbmcgZXhjZXNzaXZlIHJpc2tzIHdpdGggYSBuZWdhdGl2ZSBleHBlY3RlZCB2YWx1ZSB0aGFuIHllYWggSSByaXNrIGF2ZXJzZS5JZiBpdCBkZWZpbmVkIGFzIHRocmVlIGxldmVscyBiZWluZyByaXNrIGF2ZXJzZSAobm90IHRha2luZyBlbm91Z2ggcmlzaywgbG9zaW5nIG91dCBvbiBleHBlY3RlZCB2YWx1ZSkgUmlzayBuZXV0cmFsICgxOjEgb24gYSBjb2luZmxpcCBpcyB0aGUgc2FtZSB0aGluZyBhcyBub3QgcGxheWluZywgYWx3YXlzIHRyeWluZyB0byB0YWtlIGNoYW5jZXMgdGhhdCBhcmUgKyBFVikgYW5kIHJpc2sgbG92aW5nIChmdWxsIG9uIGdhbWJsZXIgdGhhdCBkb2VzbnQgZ2l2ZSBhIGZ1Y2sgYWJvdXQgY29uc2VxdWVuY2VzKS4gClRoZSBhcHByb2FjaCBpcyBsb25nLCAxMCAxMiBob3VycyBsaWtlbHkuCkkgdGhpbmsgQUlHIGhhcyBiZWVuIG1hcmtlZCBvZmYgYXMgInNhY3JlZCIgIG5vdCBpbiB0aGUgc2Vuc2Ugb2YgaG9seSwgYnV0IGluIHRoZSBzZW5zZSBvZiBzZXBhcmF0ZWQgZnJvbSBldmVyeWRheSBncmVlZC4gCkd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMzogRGVjaXNpb24gbWFraW5nIHVuZGVyIG1lbnRhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBqdW5pb3IgZWxpdGUgYXRobGV0ZXMuIEluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gQW5kIFBhcmtpbiwgQi4gCk90aGVyd2lzZSB0aGVzZSB3ZWJzaXRlIGFyZSBlbmNvdXJhZ2luZyB5b3UgdG8gd29yayBpbGxlZ2FsbHksIGl0IHJlYXNvbmFibHkgY29tbW9uIGJ1dCBmcm9tIG15IHBlcnNwZWN0aXZlIEkgc2VlIGxlc3MgYW5kIGxlc3MgaWxsZWdhbCB3b3JrZXJzIGVhY2ggeWVhciwgc28gaXQgc2VlbXMgQ2hpbmEgaXMgZWZmZWN0aXZlIGF0IGRlYWxpbmcgd2l0aCB0aGVtLi4gClRoYXQgbm90IHRvIHNheSB0aGF0IHdlIHJlbGVnYXRpbmcgdGhlIE5EUCBob3JzZSB0byB0aGUgZ2x1ZSBmYWN0b3J5LCBvciB0byBGcmFuY2Ugd2hlcmUgcG9vciBvbGQgT3JhbmdleSB3b3VsZCBiZSB0aGUgbWFpbiBjb3Vyc2UgYXQgYSBzdW1tZXIgYmFyYmVjdWUgKGlmIHlvdSBhIGhvcnNlLCBOaWNlIGlzIG5vdCBuaWNlKS4uIApUaGUgZmFjdCB0aGF0IGhlIGRpZG4gMyBiZXQgdGhlIGZsb3AgYW5kIHRoZW4gY2hlY2sgY2FsbHMgdGhlIHBvdCBzaXplIGJldCBpcyBub3QgYSBnb29kIHBsYXkuIEV2ZW4gaWYgS0sgdGhpbmtzIGhlIGlzIGFoZWFkIG9uIHRoZSB0dXJuLCB3aHkgYXJlIHlvdSBjaGVja2luZyB0byBnaXZlIGhpbSBhIHBvc3NpYmxlIGZyZWUgcml2ZXIgYW5kIGEgcG90ZW50aWFsIDR0aCBkaWFtb25kLiAKT3RoZXJ3aXNlLCBpZiB5b3VyIG1vdXRoIGlzIG1vdmluZywgeW91ciBleWVzIHNob3VsZCBiZSBvbiB5b3VyIGxpc3RlbmVycy4uIApZb3UgZG8gbm90IGhhdmUgdG8gc3VmZmVyIGZyb20gc2ludXMgaW5mZWN0aW9uIGFsbCB5ZWFyIHJvdW5kLiBUaGVyZSBhcmUgdHJlYXRtZW50cyBhdmFpbGFibGUgdG8gZWFzZSB5b3VyIHNpbnVzaXRpcy4gT25lIG9mIHRoZW0gd291bGQgYmUgYXJvbWF0aGVyYXB5LCB3aGljaCBieSBuYXR1cmUgaXMgYW4gYWx0ZXJuYXRpdmUga2luZCBvZiB0cmVhdG1lbnQgZm9yIGlsbG5lc3Nlcy4gU2ludXMgaW5mZWN0aW9uIGNhbiBiZSB0cmVhdGVkIGJ5IHVzaW5nIGVzc2VudGlhbCBvaWxzIHRoYXQgYXJlIGJvdGggc3RpbXVsYXRpbmcgYW5kIGNsZWFyaW5nLiBUaGUgdXNlIG9mIHNvb3RoaW5nIGVzc2VudGlhbCBvaWxzIGZvciBhIHNpbnVzIGluZmVjdGlvbiBpcyBib3RoIHNvb3RoaW5nIGFuZCBlZmZlY3RpdmUuCldoaWxlIGl0IG1pZ2h0IGJlIGVhc3kgdG8gYXNzdW1lIHRoYXQgc2V4IHJvYm90cyBhcmUgc29tZXRoaW5nIHRoYXQgd291bGQgYmUgcHJpbWFyaWx5IGZhdm9yZWQgYnkgbWVuLCBPJ05laWwgcG9pbnRzIG91dCB0aGF0IHdvbWVuIGFsc28gaGF2ZSBzZXh1YWwgZGVzaXJlcyBhbmQgYXJlIGp1c3QgYXMgY2FwYWJsZSBvZiAiY3J1ZGUgb2JqZWN0aWZpY2F0aW9uIiBhcyB0aGVpciBtYWxlIGNvdW50ZXJwYXJ0cy4KV2hldGhlciBpdCB3YXMgY2FyZHMsIHBva2VyIGNoaXBzLCBvciBldmVuIGEgZm9sZGluZyB0YWJsZSB0aGF0IHdhcyBtaW5lIGFuZCBteSByb29tbWF0ZSdzIGpvYi4gCkFyZSB5b3UgbWFsZSBvciBmZW1hbGU/IElmIGZlbWFsZSBkb24ndCB0cmF2ZWwgaW4gRWFzdGVybiBFdXJvcGUgYWxvbmUuIE5vdCBzYWZlIGVub3VnaCBmb3IgYSBzb2xvIG1hbiBsZWF2ZSBhbG9uZSBhIHdvbWFuLiBUcmF2ZWwgd2l0aCBpbiBjaXRpZXMgYW5kIHN0YXkgaW4gYnVzeSBwbGFjZXMuIApTdHJhdGVneSBoYXMgYWx3YXlzIGJlZW4gdG8gYmUgZnJpZW5kbHkgdG8gdGhlIGRldmljZXMgeW91IGFscmVhZHkgb3duLCBzYWlkIEJ1Y3prb3dza2kuCkkgdHJpZWQga2VlcGluZyBhIHBsZWNvc3RvbXVzIGluIHdpdGggbXkgbWFsZSBwdWZmZXIgYW5kIHRoZXkgc3RhcnRlZCBnb2luZyBhZnRlciBlYWNoIG90aGVyLiBPbmUgZGl2ZSBib21iaW5nIHRoZSBvdGhlciwgdGhlIG90aGVyIGNyYXdsaW5nIHVwIHRoZSBnbGFzcyAgIHRoZW4gd2FpdGluZyBmb3IgdGhlIHJpZ2h0IG1vbWVudCB0byBqdW1wIG9mZiB0aGUgZ2xhc3MgYW5kIHRyeSB0byAiZmFsbCIgb24gdGhlIG90aGVyLiBBcyBjb21pY2FsIGFzIGl0IHdhcywgd2UgZ290IHJpZCBvZiB0aGUgcGxlY28gYW5kIGRpZCBuZXJpdGUgc25haWxzIHNpbmNlIHRoZW4uIAoxKUV6cmEgKG9yIEVzdHJhKTogMTQwMCAxNTAwLCAxMDBFLiAKQSBwc3ljaG9sb2dpY2FsIHJlcG9ydCBzdGF0ZWQgdGhlIGNoaWxkIGlzIHR3byB5ZWFycyBiZWhpbmQgaW4gc2Nob29sIGFuZCBoYXMgZGlmZmljdWx0aWVzIGZvcm1pbmcgcmVsYXRpb25zaGlwcy4gSGUgd2FzIHJlbW92ZWQgZnJvbSB0aGUgZmFtaWx5IGhvbWUgaW4gMjAxMSBhbmQgcGxhY2VkIGluIGEgZm9zdGVyIGhvbWUgd2hlcmUgaGUgd2FzIHNleHVhbGx5IGFidXNlZCBieSBhbm90aGVyIGNoaWxkLiBUaGlzIGNoaWxkIHdhcyBuZXZlciBwcm9zZWN1dGVkIGJlY2F1c2UgaGUgd2FzIGJlbG93IHRoZSBhZ2Ugb2YgY3JpbWluYWwgcmVzcG9uc2liaWxpdHkuCk9kZHMsIG91dHMsIHBvdCBvZGRzLCBldmVuIHJlYWRzIGFsbCBnbyBvdXQgdGhlIHdpbmRvdyB0byBibGluZCBjaGFuY2UgYW5kIHBsYXllcnMgc3RhcnQgY29pbiBmbGlwcGluZyBmb3IgdGhlaXIgbW9uZXkuIApBbm4gSHVpJ3MgZmF0aGVyIHdvcmtzIGluIHRoZSBMZWdpb24gQ2FmZSBraXRjaGVuIHdoaWxlIGhlciBtb3RoZXIgc3RhbmRzIGluIHRoZSBiYWNrZ3JvdW5kLCBob2xkaW5nIGhlciBzaXN0ZXIgUGFuc3kuClRoYXQgYSBsb3Qgb2YgUGVwZSBtZW1lcyBvbiB0aGlzIHJpZ2h0IHdpbmdlciB0d2l0dGVyLiBJIG5lZWQgdG8gbG9vayBhdCB0aGlzIG1vcmUgY2xvc2VseS4gCldoYXQgRG8gWW91IE5lZWQgRnJvbSBZb3VyIFRleGFzIEhvbGQgRW0gUG9rZXIgRmVsdApCdXQgaXMgaGVyIGFja25vd2xlZGdpbmcgaGVyIGxvdmUgZm9yIGhlciBjaGlsZHJlbiByZWFsbHkgYSBiYWQgdGhpbmc/SSdtIG5vdCBDYXRlJ3MgYmlnZ2VzdCBmYW4uIApUaGUgY3VycmVudCBjb250cm92ZXJzaWFsIHRvcGljIGluIHRoZSBodW1hbiB3b3JsZCByZWdhcmRpbmcgc2Vwc2lzIGlzIHRoZSBkaXNjdXNzaW9uIHdoZXRoZXIgVGhpYW1pbmUgKyBBc2NvcmJpYyBBY2lkIChWaXRhbWluIEMpICsgU3Rlcm9pZHMgaGFzIGEgYmV0dGVyIHN1Y2Nlc3MgcmF0ZSB0aGFuIGN1cnJlbnQgdGhvdWdodHMuIApQYXN0eSBmcm9tIE11bGRvb25zSSBhbSB3b3JraW5nIG9uIHN0b3JpZXMganVzdCBhdCB0aGUgbW9tZW50IHdlIGhhdmUgYSB0b24gb2YgY2xpZW50cyB0byBtYXNzYWdlISBCZWVuIGF0IHdvcmsgc29tZSB3ZWVrcyBzZXZlbiBkYXlzLiBUaGlzIHdlZWsgSSB0b29rIDIgZGF5cyBvZmYgYW5kIG15IHNjaGVkdWxlIGlzIHNsb3dseSBmaWxsaW5nIHRvIGZ1bGwuIEkgc3RheSBsb25nZXIgYXQgdGhlIHNwYSB0byBzZWUgaWYgYW55b25lIGNhbGxzIGluIGZvciB0aGF0IGxhc3QgbWludXRlIG1hc3NhZ2UuIE5ldmVyIGtub3cgd2hlbiBhIGJvZHkgaXMgaW4gbmVlZC4gQXMgSSBzaXQgYW5kIHdhaXQsIEkgaGF2ZSBiZWVuIGNyb2NoZXRpbmcgYW5kIHdyaXRpbmcgYXMgdGhlIGRheSBhbGxvd3Mgb3IgaWYgYSBzcGFyayBvZiBzb21ldGhpbmcgaGFwcGVucyBpbiBteSBoZWFkLgpDaG9vc2luZyB0aGUgcmlnaHQgYmluZ28gZ2FtZSBnZXRzIG1vcmUgY29tcGxpY2F0ZWQgaWYgeW91IHdpbGxpbmcgdG8gc3R1ZHkgYW5kIHByYWN0aWNlIHRvIGltcHJvdmUgeW91ciBvZGRzIG9mIHdpbm5pbmcuIApSZWFkZXJzIHdobyB0aGluayBpdCBzaWxseSBhcmUgbGlrZWx5IHRoZSBvbmVzIHdobyBmaW5kIHJlYWwgbGlmZSBleGFtcGxlcyBvZiB0aGlzIGJlaGF2aW91ciBzaWxseS4gCkZvciBteSBwb3N0cyBpbiB0aGlzIGJsb2cgdGhpcyBkb2VzbiBpbmNsdWRlIHBhdHRlcm5zIGFuZCBob3cgdG9zOiBhbHBlbmZlZXMgV29sbGJlcmdlClRoZSBwb2ludCBJIHRyeWluZyB0byBtYWtlIGlzIHRoYXQgaXQgcXVpdGUgbG9naWNhbCBmb3IgcGVvcGxlIHRvIGhhdGUgdGhlIGdhbWUuIApJJ20gaGlkaW5nLCAiIHNoZSBzYWlkLiAKQ2xldmVsYW5kIE9yY2hlc3RyYSBhcHBvaW50cyBuZXcgZGlyZWN0b3Igb2YgZGV2ZWxvcG1lbnQgQ2xldmVsYW5kIE9yY2hlc3RyYSBhcHBvaW50cyBuZXcgZGlyZWN0b3Igb2YgZGV2ZWxvcG1lbnQgT24gVGh1cnNkYXksIG9yY2hlc3RyYSBwcmVzaWRlbnQgQW5kcmUgR3JlbWlsbGV0IGFubm91bmNlZCB0aGUgYXBwb2ludG1lbnQgb2YgVG9yb250byBuYXRpdmUgSmFuZSBIYXJncmFmdCBhcyB0aGUgZ3JvdXAncyBuZXcgY2hpZWYgZGV2ZWxvcG1lbnQgb2ZmaWNlciwgYmVnaW5uaW5nIGluIEFwcmlsLgozYmV0IGhhbmRzIHdpdGggZ29vZCBlcXVpdHkuIEhlIHNheXMgdGhhdCBpZiB5b3UgaGF2ZSBhIGNob2ljZSBiZXR3ZWVuIDNiZXR0aW5nIEtRbyBvciBLUXMsIGRvIGl0IHdpdGggS1FzIGJlY2F1c2UgeW91IGhhdmUgYmV0dGVyIHBsYXlhYmlsaXR5LiBQbGF5aW5nIGhhbmRzIHdpdGggZ29vZCBlcXVpdHkgd2lsbCBtYWtlIHRoaW5ncyBlYXNpZXIuCk1JU1NPVUxBLCBNb250LiBTYXR1cmRheSBhYm91dCBhIG1hbiB0aHJlYXRlbmluZyBwZW9wbGUgaW4gdGhlIExvbG8gSG90IFNwcmluZ3MgYXJlYSBvZiB0aGUgTG9sbyBOYXRpb25hbCBGb3Jlc3QuIERlcHV0aWVzIGFwcHJlaGVuZGVkIHRoZSBtYW4sIHdobyBpbmRpY2F0ZWQgdGhhdCBhIGJhYnkgd2FzIGJ1cmllZCBzb21ld2hlcmUgaW4gdGhlIHdvb2RzLiBTdW5kYXkuCkRhd2lka28xMjAwIHUKVGhlIHRhY3RpbGUgc2Vuc2l0aXZpdHkgaW52b2x2ZWQgaXMgZXh0cmVtZWx5IGRpZmZpY3VsdCB0byBhY3F1aXJlLCBhbmQgaXMgb25lIG9mIHRoZSBoaWdoZXN0IHNraWxscyBpbiBUYWkgQ2hpLiBJdCBpcyBrbm93biBhcyBUaW5nIEppbmcuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZVJBQ0lORyBNaW5pc3RlciBQYXVsIFRvb2xlIHNheXMgdGhlIE5TVyBHb3Zlcm5tZW50IGlzIGxvb2tpbmcgYXQgcG9rZXIgbWFjaGluZXMgYW5kIHRoZWlyIGltcGFjdCBhcyBwYXJ0IG9mIGEgY3VycmVudCByZXZpZXcuIEJ1dCBoZSBoYXMgZW1waGFzaXNlZCB0aGF0IGNsdWJzLCB3aGVyZSBtYW55IHBva2VyIG1hY2hpbmVzIGFyZSBsb2NhdGVkLCByZW1haW4gaW1wb3J0YW50IHRvIGNvbW11bml0aWVzIGFzIGEgc29jaWFsIGh1YiBhbmQgYXMgYSBzcG9uc29yIG9mIHNwb3J0aW5nIGdyb3Vwcy4gTXIgVG9vbGUgd2FzIHJlc3BvbmRpbmcgdG8gbG9iYnlncm91cCBBbGxpYW5jZSBmb3JHYW1ibGluZ1JlZm9ybSdzIGRlY2lzaW9uIHRvIHRhcmdldCBCYXRodXJzdCBjb3VuY2lsbG9ycyBhaGVhZCBvZiB0aGUgbG9jYWwgZ292ZXJubWVudCBlbGVjdGlvbmluIGxlc3MgdGhhbiB0d28gbW9udGhzLiAKT25lIG9mIHRoZSB0d28gbWFza2VkIG1lbiwgMjUgeWVhciBvbGQgUmFtb24gQy4gVmFzcXVleiwgd2FzIHNob3QgYW5kIGRpZWQgYSBzaG9ydCB0aW1lIGFmdGVyIHBvbGljZSBhcnJpdmVkIGF0IHRoZSBzY2VuZSwgU2FnaW5hdyBDb3VudHkgQ2hpZWYgQXNzaXN0YW50IFByb3NlY3V0b3IgQ2hyaXN0b3BoZXIgQm95ZCBzYWlkLgpMaWtlIG1hbnkgcm9ja3MgaW4gdGhpcyByZWdpb24gKHNlZSBwcmV2aW91cyBwb3N0KSB0aGUgbGF5ZXJlZCByb2NrIGluIHRoZSBtaWRkbGUgb2YgdGhpcyBpbWFnZSBhcHBlYXJzIHRvIGJlIGxha2ViZWQgZGVwb3NpdHMgdGhhdCBoYXMgYmVlbiBmb3JtZWQgaW50byBtdWRzdG9uZSwgZWFjaCBsYXllciAodmFydmUpIGZvcm1lZCBieSBhIHBlcmlvZGljIGV2ZW50IGluIHRoZSBsYWtlIHRoYXQgb25jZSBmaWxsZWQgdGhpcyBwYXJ0IG9mIEdhbGUgY3JhdGVyIGFib3V0IDMgYmlsbGlvbiB5ZWFycyBhZ28uIFRoaXMgaXMgYSBzbWFsbCBmcmFnbWVudCB0aGF0IGhhcyBiZWVuIGVyb2RlZCBieSB0aGUgd2luZCBhbmQgY3VycmVudGx5IHVuZGVyIGludmVzdGlnYXRpb24gYnkgdGhlIHJvdmVyLi4gCldlbGwsIGlmIEkgY291bGQganVzdCBzYXkgd2hhdCBJIHdhbnRlZCB3aXRoIG15IHZvaWNlLCB0aGlzIGludGVyYWN0aW9uIHdvdWxkIHRha2UgbGVzcyB0aGFuIGEgbWludXRlLiBOb3cgSSBuZWVkIHRvIHNjYW4gc29tZXRoaW5nLCBob3BlIEkgZ290IHJlY2VwdGlvbiBvciB0aGF0IHRoZSB3aWZpIHdvcmtzLCB3YWl0IGZvciB0aGUgbWVudSB0byBsb2FkIHVwLCBzZWxlY3QgZnJvbSB0aGUgYmFkbHkgZGVzaWduZWQgbWVudSBhbmQgZXZlbiB0aGVuIHRoZXJlIG9mdGVuIG5vIG9wdGlvbnMgZm9yIGFsbGVyZ3kgbmVlZHMsIGV0Yy4gClJpY2hhcmQgR2FyZmllbGQgc2hvdWxkIGJlIGFwcGxhdWRlZCBmb3Igd2FudGluZyBtYWtlIGEgZ2FtZSB0aGF0IGRvZXNuIGV4cGxvaXQgdGhvc2Ugd2l0aCBnYW1ibGluZyBhZGRpY3Rpb24sIGJ1dCBwZXJoYXBzIGhlIHdhcyBtaXNndWlkZWQgaW4gd2FudGluZyB0byBmaXggb25lIHByb2JsZW0gYW5kIG5lZ2xlY3RpbmcgbWFueSBvdGhlcnMgaW4gdGhlIGluZHVzdHJ5LiAKVG9ucyBvZiB3YWl0aW5nIGFyb3VuZC4gClBvdXIgbCdpbnN0YW50IGxlIHByb2x0YXJpYXQgc2UgdGFzc2UgZXQgc2UgcnNpZ25lLiBMZXMgc2lybmVzIHF1aSBsZSBtYWludGllbm5lIGRlIGxldXJzIGNoYW50cyBuZmFzdGVzIHNvbnQgcHVpc3NhbnRlcyBldCBlZmZlY3RpdmVzLiBJbCBlbiBlc3QgcXVpIGFmZmlybWVudCBtbWUgcXVlIGNlIG1vbmRlLCBmaW5hbGVtZW50LCBsZXVyIGNvbnZpZW50LCAgbGEgY29uZGl0aW9uIHF1J2lscyBwdWlzc2VudCB0b3VjaGVyIHVuZSBtb2Rlc3RlIHBhcnQgZGVzIG1pZXR0ZXMgZHUgZ3RlYXUgcXVpIGxldXIgZmFpdCBhY2NlcHRlciBsZXVyIGZ1bmVzdGUgY29uZGl0aW9uLiAKUG9rZXIgaGFzIGJlY29tZSBhIGdyZWF0IGdhbWUgdG8gdGFrZSBwYXJ0IGluLiAKQkVHSU4gQ09ERSBCTE9DSwpPaCwgdGhlIGplbGx5IGJlYW4sIHRoYXQgc3dlZXQgb3ZhbCBjb25mZWN0aW9uIHRoYXQgaXMgdGhlIG1haW5zdGF5IG9mIEVhc3RlciBiYXNrZXQgY2FuZGllcy4gUGFyZW50cyByZWx5IG9uIHRoZSBlY29ub21pY2FsIGplbGx5IGJlYW4gdG8gYnVsayB1cCB0aGUgYmFza2V0IGFuZCB1c2UgbW9yZSBleHBlbnNpdmUgY2hvY29sYXRlIGJ1bm5pZXMgYW5kIG1hbHRlZCBlZ2dzIGFzIGdhcm5pc2guIEJ1dCBFYXN0ZXIgY29tZXMgYnV0IG9uY2UgYSB5ZWFyIGFuZCB0aGVyZSBhcmUgc28gbWFueSBvdGhlciB3YXlzIHRvIHVzZSBqZWxseSBiZWFucyB0aHJvdWdob3V0IHRoZSB5ZWFyLiAKWW91IGNhbiBpc29sYXRlIHVudHJ1c3RlZCBkZXZpY2VzIGFuZCBjaGFuZ2UgdGhlIHBhc3N3b3JkIHdoZW4geW91IHdhbnQgd2l0aG91dCBjYXVzaW5nIGEgbWFqb3IgaW5jb252ZW5pZW5jZSB0byB5b3Vyc2VsZiBhbmQgZmFtaWx5IHJlY29uZmlndXJpbmcgYWxsIHlvdXIgZGV2aWNlcyB3aXRoIHRoZSBuZXcgc3NpZCBhbmQgcGFzc3dvcmQuCkhPVCBTUE9UUwpJJ20gc3R1Y2sgaW4gdGhpcyBtb25vdG9ub3VzIGN5Y2xlLiBCYXJlbHkgdHJlYWRpbmcgd2F0ZXIuCkJ1dCB3aGF0IGhhcHBlbnMgaWYgdGhlIFVTIHByZXNzIHN0YXJ0cyBub3RpY2luZyB0aGF0IHRoaXMgaXMgdGhlIFNBTUUgd2FyIHRoZSBTb3ZpZXRzIGZvdWdodCwgdGhhdCBpdCB3YXMgZXhhY3RseSB0aGlzIHdhciB0aGF0IGRyYWluZWQgdGhlbSBvZiBhbnkgcmVzb3VyY2VzIGF0IGhvbWUsIGFuZCBsZWZ0IHRoZW0gbmVhcmx5IHBvd2VybGVzcyBvbiB0aGUgd29ybGQgc3RhZ2U/IE1heWJlIHRoZSAiQywiICJTLCIgYW5kICJGIiB3b3JkcyB3aWxsIG5vIGxvbmdlciBiZSBlbm91Z2ggYW5kIHRoZSAiQiIgd29yZCAoYnJpbmcgdGhlIHRyb29wcyBob21lKSB3aWxsIGJlIGJhbmRpZWQgYWJvdXQuCkkgd2FzIGx1Y2t5IGVub3VnaCB0byBnbyB0byB0aGUgTW9udGVyZXkgQmF5IEFxdWFyaXVtIHdoZW4gdGhleSBoYWQgYSBiYWJ5IGdyZWF0IHdoaXRlIGluIHRoZWlyIGJpZyB0YW5rLiAKQW5kIE1ycy4gTXIgLiBHZW9yZ2UgbCcncm9zdC4gClRoZXJlIGlzIGFjdHVhbGx5IGEgbmljaGUgaW5kdXN0cnkgd2hlcmUgcGVvcGxlIHdpbGwgZ28gYXJvdW5kIGFuZCBoZWxwIHlvdSBjbGFpbSByb3lhbHRpZXMgeW91IG1heSBuZXZlciBoYXZlIGtub3duIGV4aXN0ZWQuIApHdWVzcyBJIGNhdXRpb3VzbHkgb3B0aW1pc3RpYyBhdCB0aGlzIHBvaW50LiBXaG8ga25vd3MsIHJpZ2h0P0FzaWRlIGZyb20gdGhhdCwganVzdCBzdXJyb3VuZGVkIGJ5IEQgbWF0ZXJpYWxzIGF0IHRoZSBtb21lbnQgbG9sLiBQcmVwcGluZyBmb3IgdGhpcyB3ZWVrZW5kIHNlc3Npb24uIFRoZSBncm91cCBpcyBzdGFydGluZyB0byBnZXQgdGhlIHRoZSBtZWF0IG9mIHRoZSBhZHZlbnR1cmUgbm93LiBTbywgc2hvdWxkIGJlIGEgbG90IG9mIGZ1bi4gSSBoYWQgYWxtb3N0IGZvcmdvdHRlbiBob3cgbXVjaCBJIGVuam95IGl0LkVkaXQ6IEFuZCB5b3Uga25vdyB3aG8nZCBiZSBhIGdyZWF0IGVuZW15IGZvciBCb3dzZXIgaW4gdGhhdCBnYW1lPyBLaW5nIEsuIApPbmNlIGFkZGVkLCB0aGUgbWVzc2FnZSBib3goZXMpIHdpbGwgYmUgZGlzcGxheWVkIG9uc2NyZWVuIGF0IGV2ZXJ5IGxvZ2luLiBIaXMgd3JpdGluZyBmb2N1c2VzIG9uIHRvcGljcyBpbiBjb21wdXRlcnMsIFdlYiBkZXNpZ24sIHNvZnR3YXJlIGRldmVsb3BtZW50IGFuZCB0ZWNobm9sb2d5LiAKIldlIHdhbnQgdG8gbWFrZSBhIGdvb2QgaW1wYWN0IiBvbiB0aGUgY29tbXVuaXR5LCBUaW1tb25zIHNhaWQsICJzbyB3ZSdsbCBrZWVwIG1vcnBoaW5nLiBXZSBhcmUgd29ya2luZyBvbiBtb3JlIHNwZWNpZmljIGdvYWxzIG5vdyB0aGF0IHdlIGhhdmUgYSBiaWdnZXIgY2FtcHVzIHRvIHdvcmsgd2l0aC4iLgpDb21wYW5pZXMgYXJlIG5vIGxvbmdlciBpc29sYXRlZCBpc2xhbmRzLiBaeW5nYSwgdGhpcyBpbnRlcmNvbm5lY3RlZCBidXNpbmVzcyBtb2RlbCBtZWFucyBpdCBjYW4gZ3JvdyBmYXN0ZXIuIFRoZSBjb21wYW55LCB3aGljaCByZWNlbnRseSBmaWxlZCB3aXRoIHRoZSBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBDb21taXNzaW9uIGZvciBhbiBpbml0aWFsIHB1YmxpYyBvZmZlcmluZywgcmVwb3J0ZWQgbmV0IGluY29tZSBvZiAkOTAuNTkgbWlsbGlvbiBvbiByZXZlbnVlIG9mICQ1OTcuNSBtaWxsaW9uIGZvciAyMDEwLiAKT3RoZXIgcmVjb21tZW5kYXRpb25zIGluY2x1ZGVkIG9mZmVyaW5nIHRheCBicmVha3MgYW5kIG90aGVyIGZpbmFuY2lhbCBpbmNlbnRpdmVzIHRvIHRob3NlIGltcHJvdmluZyBhY2Nlc3NpYmlsaXR5IGluIHB1YmxpYyBidWlsZGluZ3MgYW5kIHByaXZhdGUgaG9tZXMsIHNpZ25pZmljYW50bHkgYm9sc3RlcmluZyBlbmZvcmNlbWVudCBlZmZvcnRzLCBhbmQgbGlmdGluZyB0aGUgZnJlZXplIG9uIGRldmVsb3BpbmcgbmV3IGFjY2Vzc2liaWxpdHkgc3RhbmRhcmRzIGluIGFyZWFzIGxpa2UgaGVhbHRoIGNhcmUgYW5kIGVkdWNhdGlvbi4KU2FtZSB3aXRoIEFmcmljYW5zIGFuZCBNaWRkbGUgRWFzdCBwZW9wbGUuIEFyYWJzIHNvbWV0aW1lIHNtZWxsIGJlY2F1c2UgdGhleSB1c2Ugd2FhYWF5IHRvbyBtdWNoIGNvbG9nbmUgb3IgcGVyZnVtZSwgYnV0IEkgbmV2ZXIgZXhwZXJpZW5jZWQgZm91bCBuYXR1cmFsIGJvZHkgb2RvdXIgZnJvbSB0aGVtIHdoZW4gSSBsaXZlZCB3aXRoIEFyYWJzIGluIFVuaS4gClNoZSBmZWVscyBzZXh5IGFuZCB5b3UgY2FuIGJlIHN1cmUgdGhhdCBldmVyeWJvZHkgd2FudHMgdG8gZGFuY2Ugd2l0aCBoZXIuIEkgaGF2ZSBzdGFydGVkIHRvIHByYWN0aWNlIGl0OyBob3dldmVyLCBpdCBpcyBoYXJkIHRvIHJlbGVhc2Ugb3VyIGFwcHJlaGVuc2lvbiBhYm91dCBiZWxpZXZpbmcgdGhhdCB3ZSBoYXZlIGRvIGl0IHBlcmZlY3RseS4uIApUaGVzZSBjaGlwcyBhbGwgcG9zc2VzcyB0aGUgc2FtZSBtdWx0aWNvbG9yZWQgZWRnZSBzcG90IGRlc2lnbiBhcyBkbyB0aGUgb25lcyB1c2VkIGluIHByb2Zlc3Npb25hbCBjYXNpbm9zLiBUaGUgY2hpcCBpbmxheSBpcyBzZWFsZWQgcHJldmVudGluZyBhbnkgcGVlbGluZyBvciBzdGFpbmluZy4gCkJ1dCBzb21lIG1vdGhlcmZ1Y2tlciBtYWRlIGEgbWVtZSBzYXlpbmcgaXQgd2FzIHNvIG5vdyBpdCBpcyBpcy4gClBva2VyIGlzIGRlZmluaXRlbHkgb25lIG9mIHRoZSBtb3N0IHBvcHVsYXIgYm9hcmQgZ2FtZXMgaW4gdGhlIFVTQS4gCkEgZGlsYXRpb24gYWxsb3dzIHRoZSBvcHRvbWV0cmlzdCB0byBiZXR0ZXIgYXNzZXNzIHRoZSBoZWFsdGggb2YgdGhlIGJhY2sgb2YgeW91ciBleWUuIEFmdGVyIHRoZSBkaWxhdGlvbiwgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gcmVhZCBjbGVhcmx5IGFuZCB5b3UnbGwgYmUgc2Vuc2l0aXZlIHRvIGxpZ2h0LiAKR3VuIG93bmVycyBhZHZvY2F0ZSBwdWJsaWNseSB0aGF0IHNwb3J0IHNob290aW5nIGlzIGEgbGVnaXQgaG9iYnkgICB0aGlzIGRvZXNuJ3QgcmVzdHJpY3QgcGFydGljaXBhdGlvbi4gR3VuIG93bmVycyBwb2ludCBvdXQgdGhhdCBodW50aW5nIGlzIGEgbGVnaXQgaG9iYnkgYW5kL29yIHdheSBvZiBsaWZlICAgdGhpcyBkb2Vzbid0IHJlc3RyaWN0IHBhcnRpY2lwYXRpb24sIHlvdSBzaW1wbHkgaGF2ZSB0byBidXkgYnVsbGV0cyBhdCBXYWxtYXJ0IG9uIHRoZSB3YXkgb3V0IHRvIHRoZSB3b29kcy4gClRodW5kZXJhdHdvcmsgIDMxIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiAKRGF6dSB3aXJkIGRlciBTdGFuZGFyZCBYTUwgNC4zIChiZXJlaXRzIHZvcmJlcmVpdGV0WE1MIDQuNCkgYmVudXR6dC4gRGllIEthc3NlbiB3ZXJkZW4gbWl0IGRlciBMaXN0ZSBkZXIgTWVkaURhdGEgYWJnZWdsaWNoZW4gdW5kIGVycmVpY2hlbiBzbyBpbW1lciBkaWUgcmljaHRpZ2UgWmFobHN0ZWxsZSBtaXQgZGVuIGtvcnJla3RlbiBEYXRlbi4gRGFiZWkgZXJmbGx0IFBoeXNXaW4gYWxsZSBWb3JnYWJlbiBkZXMgRm9ydW0gRGF0ZW5hdXN0YXVzY2gsIGRlciBWYWxpZGllcnVuZyB1bnRlciBTdW1leCAyLjIsIGRlciB0YXJpZnN1aXNzZSB1bnRlciBUYXJpZiAzMTEvIDMxMSBBU1BJLyAzMTEgcGh5c2lvc3dpc3MgdW5kIGRlciBNZWRpRGF0YS4uIApJIGxpa2UgdG8gYnVtcCB0aGF0IHVwIGNsb3NlciB0byAyMCBtcGggb3Igc28gYXMgdGhlIHJhY2UgZHJhd3MgbmVhcmVyLiAKTXkgZ3Vlc3MgaXMgdGhhdCB0aGVyZSBpcyBwbGVudHkgb2Ygc3RhbmRpbmcgcm9vbSBhcm91bmQgRmFsbG9uIGJlY2F1c2UgZXZlcnlvbmUgaGFzIGRpc3RhbmNlZCB0aGVtc2VsdmVzIGZyb20gaGltLiBUaGF0IGluY2x1ZGVzIHRoZSBvbmVzIHRoYXQga25ldyBhYm91dCBhbGwgb2YgdGhlIHZpb2xhdGlvbnMgYW5kIGVzcGVjaWFsbHkgdGhvc2UgdGhhdCBkaWRuIHRoaW5rIEZsb3dlcnMgbXVzdCBiZSBhdCB0aGUgcG9pbnQgb2YgcmVhbGl0eSBoZXJlIGFuZCBpZiBzaGUgd2FzIGJpYXNlZCB0b3dhcmQgRmFsbG9uIGJlZm9yZSwgc2hlIGhhcyBub3cgdG9sZCBoaW0gc29tZXRoaW5nIGxpa2UsIkxvb2sgZHVtYmFzcywgSSB3YXMgd2lsbGluZyB0byBnbyB0byBiYXQgZm9yIHlvdSBhbmQgc3RhbGwgdGhpcyBhcHBlYWwgZm9yIGFzIGxvbmcgYXMgSSBjb3VsZCwgYnV0IHdoYXQgZG8geW91IGV4cGVjdCBtZSB0byBkbyBub3c/IFlvdSBiZWVuIGNhdWdodCByZWQgaGFuZGVkLiAKRGVyIHRpZXJpc2Noc3RlIGFtdGllcmVuZGUgV2VsdG1laXN0ZXIgaW0gU2Nod2VyZ2V3aWNodDogTmlrb2xhaSBXYWx1amV3IChuYWNrdCB1bmQgdW5yYXNpZXJ0KQpDcm93biBwcmV2aW91c2x5IGRlbmllZCBpdCBicmVhY2hlZCB0aGUgbGF3IHdoZW4gb3RoZXIgd2hpc3RsZWJsb3dlciBjbGFpbXMgd2VyZSB0YWJsZWQgaW4gcGFybGlhbWVudCBpbiAyMDE3LiAKQ2hvcCBwZWVyIHByZXNzdXJlIGlzIG9uZSBvZiBteSBsZWFzdCBmYXZvcml0ZSB0aGluZ3MgYWJvdXQgcGxheWluZyBzbWFsbCB0b3VybmFtZW50cyBsaXZlLiBXaGF0IHlvdSBkZXNjcmliZWQgaGFzIGhhcHBlbmVkIGF0IGFsbW9zdCBldmVyeSBzaW5nbGUgZmluYWwgdGFibGUgSSBnb3R0ZW4gdG8gaW4gc21hbGwgbGl2ZSB0b3VybmFtZW50cy4KSm9obiBNY0d1aXJlLCBhIDI3IHllYXIgb2xkIGRlbnRpc3QgbGl2aW5nIGluIEplZmZlcnNvbiBUb3duc2hpcCwgUGEuCkF2b2NhZG9Ub2FzdGF0aW9uICAyIHBvaW50cyAgc3VibWl0dGVkIDEgaG91ciBhZ28KWWV0IHJhdGhlciB0aGFuIGZvY3VzaW5nIG9uIGJ1aWxkaW5nIGEgaG90aG91c2UgZm9yIGNyZWF0aXZlIG1pbmRzLCBTaW5nYXBvcmUgc2hvdWxkIGJyaW5nIGluIGFsbCB0aGUgYmVzdCBmaW5hbmNpYWwgd2hpenoga2lkcyBhbmQgcGxheSB0byBpdHMgZ3JlYXQgbmF0aW9uYWwgc3RyZW5ndGggICBzZXJ2aWNlLiBNYXJyeSBhbGwgdGhvc2UgdW5kZXIgdXRpbGlzZWQgTUJBcyB0byB3b3JrIG9uIGEgbmV3IGEgc3RyYXRlZ3kgdGhhdCBhbHNvIGdpdmVzIHRoZW0gYSBsaXR0bGUgbGljZW5jZSB0byBpbmR1bGdlIHRoZWlyIG1vcmUgYXJ0aXN0aWMgc2lkZSBhcyB3ZWxsIGFuZCBTaW5nYXBvcmUgY291bGQgYmUgcmlwZSBmb3IgYW4gZWNvbm9taWMgcmVuYWlzc2FuY2UuIEdpdmVuIHRoYXQgc28gbWFueSBiYW5rZXJzIGhhcmJvdXIgZmFudGFzaWVzIGFib3V0IGJlY29taW5nIHRoZSBuZXh0IEFkcmlhbiBaZWNoYSBhbmQgZnJlcXVlbnRseSB0YWxrIGFib3V0IHBhY2tpbmcgdXAgdGhlaXIgZGVza3MgYW5kIG1vdmluZyB0byBhIHN1bm55IGNsaW1hdGUgdG8gb3BlbiB0aGUgYmVzdCBob3RlbCBpbiB0aGUgd29ybGQsIG5vdydzIHRoZSBwZXJmZWN0IHRpbWUgdG8gZm9sbG93IHRoYXQgZHJlYW0uIEFzIHRoaXMgY29sdW1uIGhhcyBsb25nIG1haW50YWluZWQsIGZldyBicmFuZHMga25vdyB0aGUgYXJ0IG9mIGRlbGl2ZXJpbmcgcGVlcmxlc3Mgc2VydmljZSBpbiBhIG1hcmtldCB3aGVyZSB2aXJ0dWFsbHkgZXZlcnkgY29uc3VtZXIgdXAgYW5kIGRvd24gdGhlIGNoYWluIGlzIGNyeWluZyBvdXQgZm9yIGJldHRlciB0cmVhdG1lbnQgZnJvbSB0aGUgYnVzaW5lc3NlcyB0aGV5IHN1cHBvcnQuIElmIFNpbmdhcG9yZSBjb3VsZCBvd24gc2VydmljZSwgZWR1Y2F0aW9uIGFuZCB0cmFpbmluZyBhcyBhIGtleSBlbGVtZW50IG9mIGl0cyBuYXRpb25hbCBicmFuZCwgaXQgd291bGQgZmlsbCBhIG5pY2hlIHRoYXQgb25seSBKYXBhbiBjYW4gY3VycmVudGx5IGxheSBjbGFpbSB0by4gSXRzIG5hdGlvbmFsIGNhcnJpZXIgYWxvbmUgaGFzIGVub3VnaCBzZW5pb3IgbWFuYWdlbWVudCB0byB0YWtlIG92ZXIgdHJhaW5pbmcgY29udHJhY3RzIGZvciBvdGhlciBhaXJsaW5lcywgY3J1aXNlIHNoaXAgY29tcGFuaWVzLCBob3RlbCBncm91cHMgYW5kIHJldGFpbGVycy4gV2l0aCBzbyBtYW55IGhvdGVsIGdyb3VwcyBhbHNvIHVzaW5nIFNpbmdhcG9yZSBmb3IgcmVnaW9uYWwgSFFzLCB0aGVyZSdzIGEgd2hvbGUgZmFjdWx0eSBqdXN0IHdhaXRpbmcgdG8gc3RhbmQgaW4gZnJvbnQgb2YgbGVjdHVyZSBoYWxscyB0byBleHBsYWluIGhvdyByZWNvZ25pdGlvbiwgYXR0ZW50aW9uIHRvIGRldGFpbCBhbmQgZ3JhY2lvdXNuZXNzIGFyZSBhbGwgdGhlIGxvc3QgYXJ0cyB0aGF0IG5lZWQgdG8gYmUgcmVzdG9yZWQgdG8gYnVpbGQgYmV0dGVyIGJyYW5kcy4gRm9sZCBpbiBhbGwgdGhvc2UgYmFua2VycyB3aG8gd2FudCBhIGhvdGVsIGdyb3VwIG9yIGFpcmxpbmUgb2YgdGhlaXIgb3duIGFuZCBTaW5nYXBvcmUgY291bGQgaGF2ZSBhIHdob2xlIG5ldyByYWlzb24gZCd0cmUuIEkgZXhwbGFpbiB0aGF0IHRoZS4KTm9pc2UgTGV2ZWw6IE1vZGVyYXRlLCBidXQgSSB3b3VsZG4ndCBleHBlY3QgbXVjaCBtb3JlIHRoYW4gdGhhdCBvbiBhIHF1aWV0IHdlZWtuaWdodCwgYW5kIEkgc3VzcGVjdCB0aGluZ3MgbWlnaHQgYmUgZGlmZmVyZW50IG9uIGEgd2Vla2VuZCBzdG9wLgpUaGVpciBhYnNlbmNlLCBzeXN0ZW1pYyB0byBhbiBlbGl0ZSBwYXRyb25hZ2Ugc3lzdGVtIG9mIGdvdmVybmFuY2UsIGlzIHRoZSByZWFzb24gUGFraXN0YW4gc2VlbXMgdG8gYmUgYWlkIGRlcGVuZGVudC4gQnV0IGl0IGlzIG5vdC5PbiBPY3RvYmVyIDI4LCAyMDA4IChhbG1vc3QgZXhhY3RseSBhIHllYXIgYWdvKSwgSSBhcmd1ZWQgdGhhdCBQYWtpc3RhbiBtdXN0IGRlZmF1bHQgaW4gb3JkZXIgdG8gYnJlYWsgb3V0IG9mIGEgY3ljbGUgdGhhdCBzdXN0YWlucyB0aGUgZWxpdGUncyBsYXJnZXNzZSB0byBpdHNlbGYuIApUaGV5IHNhaWQgdGhleSBoYWQgInNlZW4gQ2hpbmEgYnkgdmlzaXRpbmcgdGhlIEdyZWF0IFdhbGwgYW5kIFhpIFNoYW5naGFpIHdhcyB0aGVpciBsYXN0IHN0b3AiLiAKTXkgcXVlc3Rpb24gaXMgYmVmb3JlIHRoZSBpbmZvcm1hbnQgZ290IGludG8gY29udGFjdCB3aXRoIEZha2UgaXNsYW0gZ3V5LiAKVGhlIGluY2VudGl2ZSBvZiBoYXZpbmcgdGhlIGNvbW11bml0eSByYXRlIHRoZSBhcnR3b3JrIHZpYSB1cHZvdGVzIHdvdWxkIHJhaXNlIHRoZSBxdWFsaXR5IG9mIGFuaW1lIGZhbiBhcnQgb3ZlcmFsbCwgcHV0IGFsbCBvZiB0aGUgZmFuIGFydCBpbiBvbmUgc3BlY2lmaWMgcGxhY2UsIGFuZCB3b3VsZCByYWlzZSBhd2FyZW5lc3MgZm9yIHRoZSBjb21tdW5pdHkgYXJ0aXN0cyB0byBzdWJtaXQgdGhlaXIgYXJ0d29yayB0aGVyZT8KQnV0IGl0IG1pZ2h0IGJlIHVucmVhc29uYWJsZSB0byBleHBlY3QgVEhJUyBndXkgdG8gZG8gdGhvc2UgdGhpbmdzLiAKQmVmb3JlIHRoaXMgSSB3b3VsZCB3YXRjaCBsZXNiaWFuICJwb3JuIiAoZ2lybHMga2lzc2luZyBvbiBZb3VUdWJlIGxtYW8pLiBJIGtpbmRhIGtuZXcgSSBsaWtlZCBnaXJscywgYnV0IGhhZCBraW5kIG9mIGp1c3QgcmVmdXNlZCB0byBhY2tub3dsZWRnZSBpdC4gCkdlb3JnZSBXIEJ1c2gKSWYgdGhlIGRlYWxlciBtYWtlcyBhIG1pc3Rha2UsIGl0IGNhbiBvZnRlbiBiZSBjb3JyZWN0ZWQuIApUaGUgYm9vayAiTG92ZSBhbmQgUmVzcGVjdCIgaGVscGVkIG1lIHNlZSBob3cgcGFyZW50cyB3YW50IHJlc3BlY3QgYW5kIGNoaWxkcmVuIGxvdmUsIGFuYWxvZ291cyB0byB0aGUgaHVzYmFuZCBhbmQgd2lmZSBkeW5hbWljLiBTb21ldGltZXMgb2YgY291cnNlIGhvdyBJIGV4cHJlc3MgbXkgbG92ZSBpcyBzZXR0aW5nIGJvdW5kYXJpZXMgYW5kIGxpbWl0cyAoVGhlIEZhdGhlciBkaXNjaXBsaW5lcyB0aG9zZSBIZSBsb3ZlcykgRm9yIG15IHNvbiB3aG8gaXMgaGF2aW5nIHNvbWUgc3Ryb25nIGJ1cnN0cyBvZiBlbW90aW9uIGFzIGhlIGdyb3dzLCBnaXZpbmcgaGltIHRhc2tzIGFuZCBtYWtpbmcgaGltIGZlZWwgdXNlZnVsIGFuZCBuZWVkZWQgKGFsb25nIHdpdGggcGh5c2ljYWwgYWZmZWN0aW9uKSBtYWtlcyBoaW0gZmVlbCBsb3ZlZC4gCkl0IG11c3QgYmUgYSB2ZXJ5IHN0cmFuZ2UgdmVyc2lvbiBvZiBoZWF2ZW4gd2hlcmUgeW91IHNjaGVkdWxlZCBmb3IgVHdvIE1pbnV0ZXMgSGF0ZSBhdCByYW5kb20gaW50ZXJ2YWxzIHRvIGJlIHJpZ2h0ZW91c2x5IHBpc3NlZCBvZmYgYXQgYWxsIHRoZSBtYW55IGluanVzdGljZXMgZG9uZSB0byB5b3VyIGNvcnBzZS4gVGhleSB0b29rIHlvdXIgbW9uZXksIGdycnJyISBUaGV5IGRpZG4gYnVyeSB5b3UgaW4gdGhlIHJpZ2h0IGNlbWV0ZXJ5LCBncnJyciEgVGhleSBkaWRuIGNyeSBlbm91Z2ggYXQgeW91ciBmdW5lcmFsLCBncnJyciEgVGhlIGRhbW4gcG9vcnMgYW5kIGJyb3ducyBhcmUgdGFraW5nIG92ZXIgdGhlIGNvdW50cnkgeW91IHVzZWQgdG8gbGl2ZSBpbiwgd2hlbiB5b3Ugd2VyZSBzdGlsbCBhbGl2ZSEgR1JSUlIhLiAKQXMgc29tZW9uZSB3aG8gb3ducyBhIHNpIGFuZCBhbiAxOCAyLjVsIG1hemRhIDMsIHRoZSBjaXZpYyBpcyBiZXR0ZXIgdGhhbiB0aGUgMyBpbiBldmVyeSBzaW5nbGUgY2F0ZWdvcnkgZXhjZXB0IGludGVyaW9yIGZpdCBhbmQgZmluaXNoIGFuZCBzYWZldHkgc2Vuc29yIGVxdWlwbWVudHMuIENpdmljIGludGVyaW9yIGlzIG5vdCB0aGF0IG5pY2U7IGhvd2V2ZXIsIHRoaW5ncyB0aGF0IG1hdHRlciB0byBhIGFyZSB0aGUgYmVzdCBmb3IgdW5kZXIgMzBrIGNhcnMsIHN1Y2ggYXMgdGhlIHNlYXQsIHNjcmVlbiB0YWNob21ldGVyLCBhbmQgc2hpZnRlci4gQWx0aG91Z2ggSSBwcmVmZXIgdGhlIDMgdHdvIHN0YWdlIGdhcyBwZWRhbCBtb3JlIGV2ZW4gdGhvdWdoIGl0IGxlc3Mgb2YgYSBmdW4gY2FyLiBJdCByZWFsbHkgZWFzeSB0byBnZXQgMzVtcGcgKHByZW1pdW0gZ2FzKSBvdXQgb2YgY2l2aWMgZHJpdmluZyA4MG1waC4gVGhlIDMgc3RydWdnbGVzIHRvIGdldCAzMG1wZyAocmVndWxhciBnYXMpIGRyaXZpbmcgODBtcGguIEZvciBzb21lIHJlYXNvbiBtYXpkYSAzIGFyZSByZWFsbHkgbm9pc3kgZnJvbSB3aW5kIG5vaXNlIGF0IGhpZ2ggc3BlZWQgYXMgSSBoYXZlIGJvdGggdGhlIGFuZCAxMyBtb2RlbHMuIENpdmljIHdpbmQgbm9pc2UgaXMgYWxtb3N0IG5vbiBleGlzdGVudCBhdCBoaWdoIHNwZWVkLiBOb3Qgc3VyZSB3aHkgbWF6ZGEgY29udGludWVzIHRvIHN0cnVnZ2xlIHRvIGdldCByaWQgb2YgdGhlIHdpbmQgbm9pc2UgdGhyb3VnaCBnZW5lcmF0aW9ucy4gSWYgSSBoYXZlIHRvIGNob29zZSBhIGRhaWx5IGRyaXZlciBvdXQgb2YgdGhlIHR3byBJIGNob29zZSBhbiBhdXRvIDMuIE1heWJlIEkgZ2V0dGluZyBvbGQuClRoaXMgaXMgd2h5IGJldHRpbmcgYmlnIG9yIGNoZWNrcmFpc2luZyBmbG9wIGlzIGJlc3QuIFlvdSB3aWxsIGFsbW9zdCBhbHdheXMgaGF2ZSB0aGUgYmVzdCBoYW5kIGJ1dCBhdCB0aGUgc2FtZSB0aW1lIHlvdXIgaGFuZCBpcyBleHRyZW1lbHkgdnVsbmVyYWJsZS4gClRoZW4gSSB3YXMgYmFjayB0byBub3JtYWwuIApUaGFua3MgYWdhaW4uIApJdCBncmVhdCBkYW1hZ2UsIGl0IGdpdmVzIHlvdSBva2kgb3B0aW9ucywgZXNwZWNpYWxseSBpZiB5b3Ugc2xpZGUgaW50byBzbGlkZSBhIGZldyB0aW1lcyBhbmQgZ2V0IGluIHRoZWlyIGhlYWQuIApJIGJlZW4gYm9tYmFyZGluZyBteXNlbGYgd2l0aCBleHRyYSBzaGlmdHMgYXQgd29yayBiZWNhdXNlIEkgd2FudCB0aGUgbW9uZXkvZmluYW5jaWFsIGN1c2hpb24uIEF0IHRoZSB0aW1lIG9mIHdyaXRpbmcgSSBiZWVuIHVwIHNpbmNlIDJhbSwgaGF2ZSB3b3JrZWQgNyBkYXlzIGEgd2VlayBhbG1vc3Qgbm9uc3RvcCBmb3IgdGhlIHBhc3QgY291cGxlIG9mIG1vbnRocywgaGF2ZSBzbGVwdCBpbiBteSBjYXIgbW9yZSB0aW1lcyB0aGFuIEkgc2xlcHQgaW4gbXkgYmVkIGluIERlY2VtYmVyLCBoYXZlIGdvdHRlbiBzaWNrIGZyb20gZXhoYXVzdGlvbiBhbmQgc2xlZXBpbmcgaW4gbXkgY3JhcHBpbHkgaW5zdWxhdGVkIGNhciBhbmQgYnVybmVkIG15c2VsZiBvdXQgaGFyZCBiZWNhdXNlIG9mIGFsbCB0aGUgZXh0cmEgc2hpZnRzIEkgcGlja2VkIHVwLCBhbmQgaGF2ZSBiZWVuIHB1c2hpbmcgdG8gZmluaXNoIG1hbmFnZW1lbnQgdHJhaW5pbmcgYXQgbXkgam9iIHNvIEkgY2FuIHB1c2ggb3V0IGFwcGxpY2F0aW9ucyBmb3IgbWFuYWdlciBwb3NpdGlvbnMgYnkgbmV4dCBtb250aCBlbmQuLiAKSXQgZmluZSB0byBub3QgbGlrZSB0aGUgY29hY2hlcyBidXQgZ28gYW5kIHN1cHBvcnQgdGhlIHBsYXllcnMuIApZb3UgY2FuIGhpdCBGMTMvTTE0IHByZXR0eSBlYXJseSBpbiBCRzIgaWYgeW91IHdvcmsgb24gaXQgYSBsaXR0bGUuIFdoZW4gSSBkbyBhIGtlbnNhZ2UgcnVuLCBJIGdldCB0aGVyZSBpbiB0aGUgbGF0dGVyIHN0YWdlcyBvZiBjaGFwdGVyIDIuIElmIHlvdSB3aWxsaW5nIHRvIGNoZWVzZSAoa2lja2luZyBvdXQgcGFydHkgbWVtYmVycyBiZWZvcmUgZ2V0dGluZyBzaGFyZWQgcXVlc3QgZXhwIGFuZCBzY3JpYmluZyBhIGJ1bmNoIG9mIHNwZWxsIHNjcm9sbHMpIHRoZW4geW91IGNhbiBnZXQgaXQgd2VsbCBiZWZvcmUgZmluaXNoaW5nIGNoYXB0ZXIgMi4gClRoYXQgbXkgaXNzdWUgSSB3b3VsZCBsaWtlIGRpZmZlcmVudC4gSHlwb3RoZXRpY2FsIEV4YW1wbGU6IEkgZ28gb24gQ2FtcGluZyBUcmlwIEEsIGhhdmUgbXkgZ2VhciBsaXN0LiBBbm90aGVyIGZldyB3ZWVrcyBJIHdhbnQgdG8gZ28gb24gQ2FtcGluZyBUcmlwIEIgYW5kIEkgZHVwbGljYXRlIG15IGxpc3QgZnJvbSBUcmlwIEEuIApSaXNlIGJhY2sgdXAgb25lIG1vcmUgdGltZSBhbmQgZG8gYSAzNjAgZnJvbnRmbGlwLiBUcnkgdG8gaGl0IHRoZSBkb21lIDQgdGltZSBhbmQgcHJvY2VlZCB0byB0aGUgbmV4dCBnYXRlLiAKUG9zc2libHkgdGhlIGd1cnVzIHRoZXkgbWF5IHZlcnkgd2VsbCBiZSBwbGF5aW5nIG9udG8gZG9uJ3QgcmVjb2duaXplIGhvdyBmb3IgeW91IHRvIHBsYXkgc3BlY2lmaWMgZ2FtZSB0aGUgR29sZGVuIEdvb3NlIEZyYW5jeSBHbGl0dGVyIHJvcGVyIHdheSBhbmQgZ2V0IGx1Y2tpbmcgaW5mb3JtYXRpb24gYWJvdXQgb24gdGhlbSwgb3IgbWF5YmUgdGhleSB0aGVpciBidXNpbmVzcyBhcmUgcHJldHR5IG11Y2ggc3VwcmVtZWx5IHVubHVja3kuIApJdCBpcyBhbHNvIGtlZXBpbmcgYW4gZXllIG9uIGl0cyBjdXJyZW50IGhlYWRxdWFydGVycyBhdCAxMzQ1IFNpeHRoIEF2ZS4sIHdoZXJlLCBhY2NvcmRpbmcgdG8gQ29TdGFyLCBpdCBsZWFzZXMgODU0LDcwNSBzcXVhcmUgZmVldCB0aGF0IGV4cGlyZXMgaW4gMjAyNCBidXQgZG9lcyBub3Qgb2NjdXB5IGFsbCB0aGF0IHNwYWNlLiBPd25lciBGaXNoZXIgQnJvcy4gaXMgYWxzbyBpbiB0aGUgbWlkZGxlIG9mIHJldmFtcGluZyB0aGlzIG9sZGVyIGJ1aWxkaW5nLgpBIGNhcnRvb24gY2hhcmFjdGVyIG1pZ2h0IHRyZWF0IGEgdG9vdGhhY2hlIGJ5IHdyYXBwaW5nIGEgY2xvdGggYmFuZGFnZSB1bmRlciBoaXMgamF3IGFuZCB0eWluZyBpdCBhdCB0aGUgdG9wIG9mIGhpcyBoZWFkLiBCdXQgd2hpbGUgdGhpcyBpcyBzb21ldGltZXMgc3RpbGwgdXNlZCBhcyBhIGNvbW1vbiB2aXN1YWwgZXhhbXBsZSBvZiB0b290aCBwYWluLCBpdCdzIGJhc2VkIG9uIGEgbG9uZyBwYXNzZWQgbWV0aG9kIG9mIGJhbmRhZ2luZyB0aGUgamF3IHRvIHJlbGlldmUgZGVudGFsIHNvcmVuZXNzLiBIaXN0b3JpYW5zIGFyZW4ndCBlbnRpcmVseSBzdXJlIHdoYXQgdGhlIHB1cnBvc2Ugb2YgdGhlIHByYWN0aWNlIHdhcy4gTW9zdCBiZWxpZXZlIGl0IHdhcyB0byBob2xkIGEgcG91bHRpY2UgKGEgbW9pc3Qgc2FsdmUgY29tcHJpc2VkIG9mIGJyZWFkLCBjZXJlYWwgb3IgbWFzaGVkIGJlYW5zIG9yIGJlZXRzKSBpbiBwbGFjZS4gT2YgY291cnNlIHRoZSB0cmVhdG1lbnQsIHdoaWNoIGNhbiBiZSB0cmFjZWQgYmFjayB0byBhbmNpZW50IEJhYnlsb24sIGNvdWxkJ3ZlIGFsc28gYmVlbiB1c2VkIHRvIHdhcm0gdGhlIGNoZWVrIG9yIGtlZXAgZXZpbCBzcGlyaXRzIGZyb20gdGhlIGZhY2UgYW5kIG1vdXRoIFtzb3VyY2U6IF0uIEhpc3RvcmljYWwgcmVjb3JkcyBzaG93IHRoYXQgdGhlIENoaW5lc2UgdXNlZCBhcnNlbmljIHBpbGxzIHBsYWNlZCBiZXR3ZWVuIHRoZSB0ZWV0aCB0byBoZWxwIGVhc2UgcGFpbiBbc291cmNlOgpCdXQgSSBhbHNvIGRvbid0IHdhbnQgdG8gbWFrZSBoZXIgZmVlbCBsaWtlIHNoZSBoYXMgdG8gaGF2ZSBjaGlsZHJlbiBvciB0aGF0IHNoZSBoYXMgdG8ga2VlcCBoZXIgbmFtZSBpZiBzaGUgZG9lc24ndCB3YW50IHRvLgpXaHkgaXMgYWRkZXJhbGwgbWFraW5nIHN1ZGRlbmx5IHRpcmVkIG1lLiAuIFdoeSBzaG91bGRudCB5b3UgY2hldyBhZGRlcmFsbCBiZWZvcmUgc3dhbGxvd2luZyBOdXJzaW5nIGhvbWUgcHN5Y2ggc2NoZWR1bGUgdGVtcGxhdGUgRGFubnkgbmd1eWVuIHBva2VyIGJpbwpZZXMuIE1vc3Qgb2YgdGhlbSBhcmUgb2xkZXIgdGl0bGVzIGxpa2UgbW9ycm93aW5kIG9yIGdvdGhpYyBsaWtlIHRoZSB0b3AgY29tbWVudGVyIHNhaWQuIE5ld2VyIGdhbWVzIGxpa2UgdG8gZm9sbG93IGEgcmVwZXRpdGl2ZSBmb3JtdWxhIGl0IHNlZW1zIHRvIGtlZXAgcGxheWVycyBwbGF5aW5nLiBJdCBhZGRzIGEgZWFzeSBjb250ZW50IHRvIHRoZSBtYXNzaXZlIHNpemUgb2Ygb3BlbiB3b3JsZCBnYW1lcy4KSXQgaXMgYSBjbGV2ZXIgd2VlIGJvb2sgdG9vLCBiZWNhdXNlLCB3aGlsZSBpdCBpcyBvc3RlbnNpYmx5IGEgY2hpbGRyZW4ncyBwaWN0dXJlIGJvb2sgZm9yIGRhZHMgYW5kIG11bXMgdG8gcmVhZCB0byB0aGVpciBraWRzIGFuZCB0b3RzIGF0IGJlZHRpbWUsIGluIHJlYWxpdHkgaXQgaGFzIHNldmVyYWwgb3RoZXIgbGF5ZXJzLiBJdCdzIG5vdCBzbyBzbGlnaHQgYWZ0ZXIgYWxsLCBlaC4KUGhhbnRvbXBhdGggIDYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KUGljayBhIGtpbmQgb2YgcG9rZXIuIFBva2VyIGlzIGEgcG9wdWxhciBnYW1lIHVzaW5nIGEgc3RhbmRhcmQgZGVjayBvZiBwbGF5aW5nIGNhcmRzIGluIHdoaWNoIHBsYXllcnMgYXJlIGRlYWx0IGNhcmRzIGFuZCB3YWdlciBvbiB0aGUgc3RyZW5ndGggb2YgdGhlaXIgaGFuZHMuIE1ha2Ugc3VyZSB5b3VyIGZyaWVuZHMga25vdyBob3cgdG8gcGxheSBhbmQga25vdyBob3cgdG8gcmFuayB0aGUgdHJhZGl0aW9uYWwgcG9rZXIgaGFuZHM6IGZyb20gaGlnaCBjYXJkIHRocm91Z2ggcGFpcnMsIHN0cmFpZ2h0cywgZmx1c2hlcywgYSBmdWxsIGhvdXNlLCBmb3VyIG9mIGEga2luZCwgc3RyYWlnaHQgZmx1c2ggYW5kIHNvIG9uLiBUaGVyZSBhcmUgc2V2ZXJhbCBwb3B1bGFyIHBva2VyIHZhcmlhdGlvbnMsIGJ1dCBub3QgYWxsIG9mIHRoZW0gYXJlIGdyZWF0IGZpdHMgZm9yIHN0cmlwIHBva2VyLiBIZXJlIGFyZSB0aGUgdHdvIHRyYWRpdGlvbmFsIG9wdGlvbnM6CkVkaXQ6IHNvIGl0IG5vdyBNb25kYXksIEkgc2FpZCBJIHdpbGwgaGF2ZSBwaWMgb24gU3VuZGF5LCBhcG9sb2dpZXMuClByaW5jZSBDaGFybGVzIHdhcyBpbW1lZGlhdGVseSBjYXB0aXZhdGVkIGJ5IHRoZSAnYnJlYXRoIG9mIGZyZXNoIGFpcicsIGFzIGhlIGxhdGVyIGRlc2NyaWJlZCBoZXIuIFRoaXMgZWFydGh5LCBzZXh5LCBvdXRzcG9rZW4geW91bmcgd29tYW4gc2hhcmVkIGhpcyBsb3ZlIG9mIGRvZ3MsIGhvcnNlcyBhbmQgdGhlIGNvdW50cnlzaWRlLiAKQWRtaW5pc3RyYXRpb24gYW5kIEZpbmFuY2UKQnV0IHRoZXJlIGlzIHRoaXMgZ2FwLiBGb3IgdGhlIGZpcnN0IGNvdXBsZSB5ZWFycyB5b3UgbWFrZSBzdHVmZiwgYW5kIGl0J3MganVzdCBub3QgdGhhdCBnb29kLiAKSXQgcmVhbGx5IGhlbHBzIHRvIGNoYW5nZSB1cCB5b3VyIHBsYXlzdHlsZSBhdCB0aGUgdGFibGUsIGFsc28uIEdldCBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIHJhc2gsIGdldCBjYXVnaHQgYmx1ZmZpbmcgb25jZSBvciB0d2ljZS4gCkZhcmsgbWVya2V6aSBzYXB0YW5kIHV6bWFuIGtlbW90ZXJhcGkgaXNvdHJldGlub2luIGRyciBoZWFyIG5vcm1hbCBoY3JlbCBub3YgYW5lc3RlemlzIG5vcm1hbCBkZWVybGVyZGVuIG9rIGVrZXJpIGtvbGVzdGVyb2wgYWRhbGFoIGRuZHJyIHlhcG1hemFsciB5a3NlayBhdmVyYWdlIGJhcnNha2xhcm4gZGkgdGFraXAgZ3J1YnUuIEdpYmkpIG5vcm1hbCBha3V0IGRvbGF5IHNlYWJlc3QgZXJhIGFuIGR6ZXlsZXJpIGRlZXJsZXJpIGdlbmVsIGRlcm5laSBoZW56IGRlbmxpeXVtdWFrdHIgZ2F6ZXRlIHRlYmwgdHIga2FyYWNpZXIgZ3VhdHIgZGFoYSBjZXJyYWhpIGtvbGVzdGVyb2wga2FidWwga29sZXN0ZXJvbCBhbHZlcmkga3VydXllbWkgaXNlIGlzb3RyZXRpbm9pbiBhaWxlc2VsIG5vcm1hbCBrb2xlc3Rlcm9sIGlwc2FsYSBsZSB5ZXRsaSBrb250cm9sIHNleXJlZGVuIGJpciBrb2xlc3Rlcm9sIGRlcmtlbiBpZGkga29sZXN0ZXJvbCB2ZS4gQXJ0bWFzLiAKRm9yIGFueW9uZSB3aG8gaXMgaW50ZXJlc3RlZCBpbiBsZWFybmluZyBtb3JlIGFib3V0IG51dHJpdGlvbiBzdXBwb3J0IGFuZCBtb3RpbGl0eSBkaXNvcmRlcnMgdGhlIE9sZXkgRm91bmRhdGlvbiwgQVNQRU4gKEFtZXJpY2FuIFNvY2lldHkgZm9yIFBhcmVudHJhbCBhbmQgRW50ZXJhbCBOdXRyaXRpb24pLCBhbmQgVGhyaXZlUlggYXJlIHNvbWUgZ3JlYXQgZmFjdCBiYXNlZCBwbGFjZXMgdG8gc3RhcnQuIApEb24gc2V4dWFsbHkgYXNzYXVsdCBwZW9wbGUuIEkgcmVjb21tZW5kIGJvdGguIApMZXQgdHJlYXQgZXZlcnkgbW90aGVyIGFuZCBjaGlsZCBhcyBpZiB0aGV5IGhhdmUganVzdCBnaXZlbiB1cyBhICJzb3JyeSwgaGVyZSBhIHN3ZWV0IiBwYWNrYWdlLi4gCkNoaWxkcmVuIGFyZSBjdXJpb3VzL3JlY2VwdGl2ZSBhbmQgd2lsbCwgZXZlbiB3aXRob3V0IHNlZWluZyBhIHNpbmdsZSBiaXQgb2YgVFYsIHBpY2sgdXAgb24gdGhvc2UgdHdvIHdvbWVuIHdobyBhcmUgbGl2aW5nIHRvZ2V0aGVyIGRvd24gdGhlIHJvYWQgb3IgdGhlIHR3byBtZW4gd2VyZSBnaXZpbmcgZWFjaCBvdGhlciBhIGtpc3MgYXQgdGhlIGJ1cyBzdG9wLCBvciBhbnl0aGluZyBlbHNlIGZvciB0aGF0IG1hdHRlciwgb3IgZXZlbiB3aHkgdGhleSB0aGVtc2VsdmVzIGZlZWwgdGhleSBsaWtlIGJveXMvZ2lybHMgbGlrZSB0aGVtc2VsdmVzIG9yIHdoYXRldmVyIChhIGNvdXBsZSBvZiBnYXkgcGVvcGxlIEkgbWV0IGtuZXcgZXZlbiBhcyB5b3VuZyBraWRzIHRoZXkgbGlrZWQgb3RoZXIgZHVkZXMvZ2lybCBzbykuIENoYW5jZXMgYXJlIHRoYXQgaW4gbW9zdCBjaXJjdW1zdGFuY2VzIHRoZXkgc2ltcGx5IG5vdCBjYXJlIHRoYXQgbXVjaC4KRmFzdCBmb3J3YXJkIHRvIFVQUywgYW5vdGhlciBib3ggd2l0aCBhbm90aGVyIGxpdGhpdW0gaW9uIHdhcm5pbmcgc3RpY2tlci4gQW5kIEkgcmVjZWl2ZWQgdGhlIGJveCBvbiB0aW1lLCBidXQgdGhlIGVudGlyZSBib3R0b20gcG9ydGlvbiBvZiB0aGUgcmVpbmZvcmNlZCBicm93biBwYXBlciB0YXBlIHdhcyBjdXQgY2xlYW4gd2l0aCBhIGtuaWZlLCBzbyB3aG9ldmVyIGF0IFVQUyBjb3VsZCAiIHdpbmRvdyBzaG9wICIgbXkgcGFja2FnZS4gClRoZSBuZXh0IHR3byBwbGF5cyBjYW4gYmUgcXVlc3Rpb25lZCBqdXN0IGEgc21pZGdlLiBBZ2FpbiBpbiBteSBtaW5kIHByZXZlbnRpbmcgQnJhZHkgZnJvbSBoYXZpbmcgMiBvciBtb3JlIG1pbnV0ZXMgd2FzIG1pc3Npb24gY3JpdGljYWwgc28geWVzIEkgYW0gbml0IHBpY2tpbmcuCkl0IGp1c3QgdGhlIHBhcmFub2lhIGJ1dCBiZSBjYXJlZnVsLCBjYXVzZSB0aGF0IHNoaXQgY2FuIGZlZWwgc28gcmVhbC4gCllvdSBsaXRlcmFsbHkgd2FsayBhbG9uZyBzb21lIG1vdW50YWlub3VzIGNsaWZmcyBhbmQgdGhlbiBwYXNzIHRocm91Z2ggYSBnb3JnZSBlbnRyYW5jZSAoZXMgU2lxLCAxLDIwMCBtZXRlcnMgbG9uZyB3aXRoIDgwIG1ldGVyIHRhbGwgY2xpZmZzIG9uIGVpdGhlciBzaWRlKS4gCk15IGluIGxhd3MgY2FtZSB0byB2aXNpdCBsYXN0IHdlZWsgYW5kIHRoZXkgYWxsIGtub3cgb3VyIDNZTyBpcyBzZXZlcmVseSBhbGxlcmdpYyB0byBlZ2dzIGFuZCBudXRzLiAKWW91IG1heSBiZSBub3RpY2luZyBtb3JlIGFjdGlvbmluZyBvZiB0aGlzIHR5cGUgb2YgY29udGVudCBhcyB3ZSBoYXZlIGdvdHRlbiBiZXR0ZXIgYXQgZGV0ZWN0aW5nIGl0LiBXZSB1bmRlcnN0YW5kIHRoYXQgdGhpcyBtYXkgbWFrZSBpdCBhcHBlYXIgYXMgbmV3IHBvbGljeS4gSG93ZXZlciwgdGhlIHJlYWxpdHkgaXMgdGhhdCBvdXIgcG9saWN5IG9uIHNleHVhbCBvciBzdWdnZXN0aXZlIGNvbnRlbnQgaW52b2x2aW5nIG1pbm9ycyBoYXMgc3BlY2lmaWNhbGx5IGNhbGxlZCBvdXQgY2FydG9vbiBkZXBpY3Rpb25zIG9mIG1pbm9ycyBmb3IgbW9yZSB0aGFuIGEgeWVhciBub3csIHNpbmNlIGl0cyBsYXN0IG1ham9yIHVwZGF0ZS4KTGl2cmVzIEhlYmRvLiBMJ2FubmUgMjAxOCBhIHQgcGxvbWJlIHBhciB1biB0cnMgbWF1dmFpcyBzZWNvbmQgc2VtZXN0cmUsIGFuYWx5c2UgTGl2cmVzIEhlYmRvLiBDb21wYXIgYXUgY29tbWVyY2UsIHF1aSBuZSByZWN1bGUgcXVlIGRlIDAsMiUgZSwgMjAxOCwgbGUgbGl2cmUgZXN0ICBsYSB0cmFuZS5TaSBsJ29uIGV4Y2VwdGUgMjAxNSBldCAyMDE2LCBsZSBtYXJjaCBuJ2EgY2VzcyBkJ3RyZSBlbiBiYWlzc2UgZGVwdWlzIDIwMTAuIApNZWRpYSBzb3VyY2VzIHNheSB0aGVyZSBoYXMgYWxzbyBiZWVuIGEgYmVoaW5kIHRoZSBzY2VuZXMgY2FtcGFpZ24gdG8gYXR0cmlidXRlIGJsYW1lIGZvciB0aGUgY2hhcml0eSBmYWlsdXJlIHRvIGZvcm1lciBjaGllZiBleGVjdXRpdmUgQ29sZW1hbiBkZXNwaXRlIGhlciBiZWluZyBlbXBsb3llZCBhcyBDRU8gZm9yIG9ubHkgdGhyZWUgbW9udGhzLiBUaGlzIGlzIGVtcGhhdGljYWxseSBkZW5pZWQgYnkgS2Vyci4gQ29sZW1hbiBoYXMgcmVmdXNlZCB0byBjb21tZW50IG9uIGFueSBtYXR0ZXJzIHJlbGF0aW5nIHRvIHRoZSBmb3VuZGF0aW9uLCBjaXRpbmcgYSBjb25maWRlbnRpYWxpdHkgYWdyZWVtZW50LiAKQWxzbyBjZWxlYnJhdGluZyB3aXRoIE5FTyB0b2RheSB3ZXJlIExpbmRzYXkgUGF0cmljaywgTWFuYWdpbmcgRGlyZWN0b3IgSGVhZCwgU3VzdGFpbmFibGUgRmluYW5jZSwgUkJDIENhcGl0YWwgTWFya2V0czsgSmVubmlmZXIgU28sIEFzc29jaWF0ZSBQb3J0Zm9saW8gTWFuYWdlciwgU2VuaW9yIEFzc29jaWF0ZSBGdW5kYW1lbnRhbCBDYW5hZGlhbiBFcXVpdGllcywgQk1PIEdsb2JhbCBBc3NldCBNYW5hZ2VtZW50OyBGbG9yZW5jZSBOYXJpbmUsIFNlbmlvciBWaWNlIFByZXNpZGVudCwgSGVhZCBvZiBQcm9kdWN0LCBBR0YgSW52ZXN0bWVudHM7IGFuZCBSYWogTGFsYSwgUHJlc2lkZW50IGFuZCBDRU8sIEV2b2x2ZSBFVEZzLiBUaGVzZSBpbmRpdmlkdWFscyBwYXJ0aWNpcGF0ZWQgaW4gYSBwYW5lbCBkaXNjdXNzaW9uIG9uIHRoZSBnZW5kZXIgYmFzZWQgaW52ZXN0bWVudCB0aGVzaXMgdGhhdCBwYXJ0aWFsbHkgaW5mb3JtcyBmb3VyIENhbmFkaWFuIEVURnMsIGluY2x1ZGluZyB0aGUgUkJDIFZpc2lvbiBXb21lbidzIExlYWRlcnNoaXAgTVNDSSBDYW5hZGEgSW5kZXggRVRGICguIApFdmVudHMgYW5kIHN1Y2ggd2lsbCBiZSBhbm5vdW5jZWQgaW4gdGhlIFBvc3QuIFBhc3QgZXZlbnRzIHdpbGwgYmUgcmV2aWV3ZWQsIGRpc2N1c3NlZCwgbXVsbGVkIGFuZCBjaGV3ZWQgb3ZlciBpbiB0aGUgUG9zdC4gCkJvdGggcHVzaCBlYWNoIG90aGVyIHRvIGdpdmUgdGhlaXIgYWJzb2x1dGUgYmVzdCBhbmQgdGhhdCdzIGFkb3JhYmxlLkZpbmFsbHkgd2UgZ2V0IEtlaSwgdGhlIGJsdWUgZXllcyB3aGl0ZSBkcmFnb24uIEkgZmluZCBpdCBpbnRlcmVzdGluZyBob3cgc3VjaCBhIHNlZW1pbmdseSBpbm5vY2VudCBhbmQgZnVubnkgc2tpdCBpcyBhY3R1YWxseSBraW5kYSBkZXByZXNzaW5nIHdoZW4geW91IHRoaW5rIGFib3V0IGp1c3QgaG93IG11Y2ggS2FndXlhIGNyYXZlcyBhIGxvdmluZyBmYW1pbHkgZW52aXJvbm1lbnQuIEknbSBzbyBoYXBweSB0aGV5IGFjdHVhbGx5IHNob3dlZCB0aGUgRnVqaXdhcmEgc2lzdGVycyB0b28hQW5kIHRoZW4gdGhlcmUgaXMgb2YgY291cnNlIHRoZSBiaWdnZXN0IG9uZSBvZiB0aGVtIGFsbC4gCkxpbCBCb29zaWUgZm91bmQgbm90IGd1aWx0eQpDdXkuIENvdW50eSBDb3JydXB0aW9uIGRlamEgdnU6IERhcmN5IGNhcnRvb24gQ3V5LiBDb3VudHkgQ29ycnVwdGlvbiBkZWphIHZ1OiBEYXJjeSBjYXJ0b29uIEEgcG9saXRpY2FsIGF0dGFjayBpc24ndCBkZXN0cm95aW5nIEJ1ZGlzaCdzIHJlcHV0YXRpb24sIGluZGljdG1lbnRzIG9mIHRocmVlIG9mIGhpcyBmb3JtZXIgYW5kIGN1cnJlbnQgYWRtaW5pc3RyYXRpb24gb2ZmaWNpYWxzIGlzIGRhbWFnaW5nIGhpcyByZXB1dGF0aW9uLiBMZXRoYWwgbWlzbWFuYWdlbWVudCBvZiB0aGUgQ291bnR5IEphaWwgaXMgZGFtYWdpbmcgaGlzIHJlcHV0YXRpb24uClRyYXZlbCBBZHZpc29yeSBXaGljaCBVcmdlcyBUb3VyaXN0cwpJdCB3b3VsZCBiZSB0b28gbm90aWNlYWJsZS4gSW5zdGVhZCwgdGhpcyB0ZWxsIHR5cGljYWxseSBpbmRpY2F0ZXMgbmV3ZXIgcGxheWVycyB3aG8gaGF2ZSB0cm91YmxlIGhvbGRpbmcgaW4gdGhlaXIgZW1vdGlvbnMuIEV4cGVjdCBhY2VzLCBzZXRzLCBvciBvdGhlciBodWdlIGhhbmRzIHdoZW4gc29tZW9uZSBiZXRzIHdpdGggc2hha2luZyBoYW5kcy5bN10uIApDZXJhbWljIGNoaXBzIGFyZSBnb29kIGZvciBjdXN0b21pc2F0aW9uLiAKV2UgbG9zdCB0aGF0IGdhbWUgYnkgb25lIHBvaW50LiBXaGljaCBwdXQgdXMgaW4gYSBsb3dlciBicmFja2V0LiAKVGhlIGZvbGxvd2luZyBsZXR0ZXIgd2FzIHJlY2VpdmVkIGJ5IHRoZSBwYXJlbnRzIG9mIFNlcmdlYW50IE9ic2VydmVyIFJvYmVydCBBbGxkcmljaywgd2hvc2UgcGxhbmUgd2FzIHNob3QgZG93biBvdmVyIEhvbGxhbmQgc29tZSBtb250aHMgYWdvLCBhbmQgd2hvIGlzIG5vdyBhIHByaXNvbmVyIG9mIHdhciBpbiBhIEdlcm1hbiBpbnRlcm5tZW50IGNhbXAuIEl0IHdhcyBwb3N0ZWQgRGVjZW1iZXIgMzAsIGFuZCBhcnJpdmVkIGluIEdyaW1zYnkgb24gRmVicnVhcnkgMjUuIE1hcmtlZCBhaXJtYWlsLCBpdCBwcm9iYWJseSBjYW1lIGJ5IHRoZSBTb3V0aCBBdGxhbnRpYyBSb3V0ZSwgYW5kIGl0IGhhZCBiZWVuIG9wZW5lZCBieSBjZW5zb3JzLiAKTm93LCB0aGV5IG1heSBoYXZlIGZvdW5kIGFub3RoZXIgcmVhc29uLi4gCllvdSBkb24gbmVlZCBtdWNoIGRhdGEgb24gaXQgbWF0ZS4gSXQgaGF2ZW4gc3RvcHBlZCBwZW9wbGUgZWl0aGVyLCB3aGlsZSBhcyBhbnlvbmUgY2FuIGd1ZXNzLCB0aGF0IGtpbmQgb2YgYm9tYiB3b3VsZCBvbmx5IGNvbmZ1c2UgcGVvcGxlIGFuZCBtYWtlIHRoZW0gcGFuaWMgb3IgYmUgbmVydm91cy4gCkluIGxhdGUgcG9zaXRpb24sIHdpdGggbG90cyBvZiBjYWxsZXJzIGFuZCBubyByYWlzZXMsIHlvdSBjYW4gbGltcCBpbiB3aXRoIHN1Y2ggYSBoYW5kLiAKSXQgbWlnaHQgYmUgYSBiZXR0ZXIgY29tcGFyaXNvbiBpZiB0aGUgREIgd2FzIGZhY2luZyB0b3dhcmRzIHRoZSBiYWxsIGFuZCBtYWtpbmcgYSBwbGF5IG9uIGl0IGV2ZW4gbW9yZSBzbywgaW4gdGhhdCBzaXR1YXRpb24sIEknZCBzYXkgR29yZG9uIHdvdWxkJ3ZlIGJlZW4gY2FsbGVkIG9uIE9QSS4gQnV0IGFzIGl0IHBsYXllZCBvdXQsIEknbSBub3Qgc3VyZSBJIHJlYWxseSBzZWUgaG93IHRoZXkncmUgc2ltaWxhci5Bbnl3YXksIEkgYWx3YXlzIGxpa2UgdGhlIFZpa2luZ3MsIGFuZCB0aG91Z2h0IHRoaXMgd2FzIGEgcHJldHR5IGdvb2QgZ2FtZS4gClRoYXQncyB0aGUgdGFrZWF3YXkgZnJvbSAiIiAoU3BpZWdlbCBHcmF1KSwgWXV2YWwgTm9haCBIYXJhcmkncyBmcmlnaHRlbmluZyBuZXcgYm9vayBvZiBiaWd0aGluay4gTWFjaGluZXMgcHV0IGh1Z2UgbnVtYmVycyBvZiBtYW51YWwgbGFib3JlcnMgYW5kIGZhY3Rvcnkgd29ya2VycyBvdXQgb2YgYnVzaW5lc3MsIGJ1dCB0aG9zZSBwZW9wbGUgbGFyZ2VseSBtb3ZlZCBvbiB0byBqb2JzIG9yZ2FuaXplZCBhcm91bmQgdGhlIGNvZ25pdGl2ZSBjYXBhY2l0aWVzIG9mIGh1bWFucy4gQXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgaXMgcmFjaW5nIHNvIGZhciBiZXlvbmQgaHVtYW4gY2FwYWJpbGl0aWVzLCB3aGlsZSBmaWxsaW5nIGluIGNydWNpYWwgZ2FwcyBzdWNoIGFzIHRoZSBhYmlsaXR5IHRvIHJlYWQgYW5kIHJlYWN0IGNvcnJlY3RseSB0byBodW1hbiBlbW90aW9ucywgdGhhdCBjb2duaXRpdmUgd29ya2VycyBjb3VsZCBiZWNvbWUgYXMgcmVkdW5kYW50IGFzIGEgZmFybSB3b3JrZXIgY3V0dGluZyBncmFpbiB3aXRoIHNjeXRoZXMuIApRdWVzdGlvbiBvdGhlcnMnIG1vdGl2ZXMuIEN1bm5pbmcgcGVvcGxlIGFyZSByZW5vd25lZCBmb3IgdGhlaXIgYWJpbGl0eSB0byBzZWUgdGhyb3VnaCBvdGhlcnMnIGZhY2FkZXMuIEFsbW9zdCBldmVyeW9uZSB0ZWxscyB3aGl0ZSBsaWVzIG9uIGEgZGFpbHkgYmFzaXMgICBpdCdzIHBlcmZlY3RseSBuYXR1cmFsLiBBIGN1bm5pbmcgcGVyc29uIHNlZXMgYSBwZXJzb24ncyB0cnVlIGludGVudGlvbnMgICBoZSBkb2VzIHRoaXMgYmVjYXVzZSBoZSdzIGFibGUgdG8gInJlYWQiIHBlb3BsZSBhbmQgYWxzbyBiZWNhdXNlIGhlJ3MgZG9uZSBoaXMgaG9tZXdvcmsgKHNlZSBhYm92ZS4pIE5ldmVyIGFzc3VtZSBzb21lb25lJ3MgdGVsbGluZyB5b3UgdGhlIHRydXRoIHVudGlsIHlvdSBoYXZlIHN1cHBvcnRpbmcgZXZpZGVuY2UuIEhvd2V2ZXIsIGl0J3MgYWxzbyBub3Qgd2lzZSB0byBpbnN0YW50bHkgYXNzdW1lIGV2ZXJ5b25lIGlzIGx5aW5nLiBVc2UgdGhlIGluZm9ybWF0aW9uIGF2YWlsYWJsZSB0byB5b3UgdG8gbWFrZSB5b3VyIGJlc3QgZ3Vlc3MgYXQgc29tZW9uZSdzIHRydWUgbW90aXZhdGlvbi4KU3RlYW1wdW5rIEV5ZSB0aGF0IGVub3Jtb3VzIHNoaXAsIGdvdmVybmVkIGJ5IGEgbG9uZywgbG9uZyBwb2xlIHdpdGggYSBzbWFsbCBib3ggd2l0biBhbiBleWUgaW4gaXQsIGJlaW5nIHJhaXNlZCBhbmQgbG93ZXJlZCBvbiBwdWxsZXlzOgpGb290d2VhciAgIGEgZ29vZCBwYWlyIG9mIGhpa2VycyBtYWtlcyBhbGwgdGhlIGRpZmZlcmVuY2UuClRoaXMgaXMgYSB2ZXJ5IG5lZ2F0aXZlIGFuZCBuYXJyb3cgbWluZGVkIHZpZXcuIE9wZW4gcmVsYXRpb25zaGlwcyBhcmVuIGZvciBldmVyeW9uZSwgSSBkb24gdGhpbmsgdGhleSB3b3JrIGZvciBtZSwgYnV0IGJyYW5kaW5nIGV2ZXJ5Ym9keSBwdXJzdWluZyBzdWNoIGFuIGFycmFuZ2VtZW50IGFzICJ3ZWlyZG9zIiBpcyBzaW1wbHkgd3JvbmcuCkkgZm91bmQgdGhpcyBodW1ibGluZy4gClNvdmVyZWlnbiB0cmliYWwgbmF0aW9ucyBzZXQgdGhlaXIgb3duIGxlZ2FsIHJlcXVpcmVtZW50cyBmb3IgY2l0aXplbnNoaXAsIGFuZCB3aGlsZSBETkEgdGVzdHMgY2FuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIGxpbmVhZ2UsIHN1Y2ggYXMgcGF0ZXJuaXR5IHRvIGFuIGluZGl2aWR1YWwsIGl0IGlzIG5vdCBldmlkZW5jZSBmb3IgdHJpYmFsIGFmZmlsaWF0aW9uLiBVc2luZyBhIEROQSB0ZXN0IHRvIGxheSBjbGFpbSB0byBhbnkgY29ubmVjdGlvbiB0byB0aGUgQ2hlcm9rZWUgTmF0aW9uIG9yIGFueSB0cmliYWwgbmF0aW9uLCBldmVuIHZhZ3VlbHksIGlzIGluYXBwcm9wcmlhdGUgYW5kIHdyb25nLiAKQmFyYmVycyBlYXJuZWQgJDI4LDA1MCBvbiBhdmVyYWdlLiBGaWZ0eSBwZXJjZW50IG9mIGJhcmJlcnMgbWFkZSBiZXR3ZWVuICQxOSwzODAgYW5kICQzMyw0MjAgYSB5ZWFyLiBOZXcgWW9yayBsZWQgdGhlIG5hdGlvbiBpbiB0ZXJtcyBvZiB0b3RhbCBlbXBsb3ltZW50IG9mIGhhaXIgY3V0dGVycyBhbmQgcGFpZCBhbiBhdmVyYWdlIG9mICQyOSwwMDAgYSB5ZWFyLiAKVGhpcyB3YXMgYWxvbmcgdGhlIHNhbWUgbGluZXMgYXMgbXkgdGhvdWdodCBwcm9jZXNzIGF0IHRoZSB0aW1lLiBIZSBoYXMgc28gZmV3IGNvbWJvcyBvZiB2YWx1ZSBoYW5kcyBhbmQgc2luY2Ugd2VyZW4ndCBub3QgaG9sZGluZyBhbnkgc3BhZGVzIGl0J3MgcGxhdXNpYmxlIHNvbWUgcmFuZG9tIHNwZXd5IGZsdXNoIGRyYXdzIGNvdWxkIHBsYXkgaXQgdGhpcyB3YXkuIApJIGhvbmVzdGx5IGRpZG4gcmVhbGl6ZSBob3cgbWFueSBvdGhlciBnaXJscyBoYXZlIGhhZCB0aGUgZXhwZXJpZW5jZSBvZiBoYXZpbmcgdGhlaXIgaGFpciBmb3JjZWZ1bGx5IGN1dCB1bnRpbCB0aGlzIHRocmVhZC4gSSBzbyBzb3JyeSB0aGF0IGl0IGhhcHBlbmVkIHRvIGFsbCBvZiB1cyBhbmQgSSBob3BlIHRoYXQgd2UgY2FuIGhlYWwuIEkga25vdyBwZXJzb25hbGx5IHRoYXQgSSB3aWxsIG5ldmVyIHN1YmplY3QgbXkgZGF1Z2h0ZXJzIHRvIGFueXRoaW5nIHRoYXQgbWFrZXMgdGhlbSBmZWVsIGluc2VjdXJlIGluIHRoZWlyIGJvZGlseSBhdXRvbm9teS4KV2hhdCBJIGRvbiBnZXQgaXMgcGVvcGxlIHdobyB0aGluayBjcmFzaGluZyBvdXQgaW50byBhIE5vIERlYWwgZWxpbWluYXRlcyB1bmNlcnRhaW50eS4gSWYgd2UgY3Jhc2ggb3V0IEkgZ3Vlc3MgaXQgd2lsbCBhbnN3ZXIgdGhlIHF1ZXN0aW9uICJBcmUgd2UgZnVja2VkIHlldD8iIGJlY2F1c2UgdGhlIGFuc3dlciB3aWxsIGJlIEJ1dCBpdCBkb2VzbiBhbnN3ZXIgYW55IHF1ZXN0aW9ucyBhYm91dCBhcnJhbmdlbWVudHMgb3IgYWdyZWVtZW50cy4gV2Ugd2lsbCBiZSBzdHVjayBvbiB0aGUgd29yc3QgcG9zc2libGUgdHJhZGUgdGVybXMgd2l0aCB0aGUgaG9wZSBiZWluZyB0aGF0IHdlIHdpbGwgaW1wcm92ZSB0aGVtIG92ZXIgdGhlIGNvbWluZyBtb250aHMveWVhcnMvZGVjYWRlcy4gVGhhdCBub3QgYW4gZW5kIHRvIHVuY2VydGFpbnR5LiBUaGF0IHNpbXBseSB0aGUgc3RhcnQgb2YgYSB2ZXJ5LCB2ZXJ5LCB2ZXJ5IGxvbmcgcGVyaW9kIG9mIG5lZ290aWF0aW9uIGFuZCBkZWFsIG1ha2luZy4KVGhlIG9ubHkgZGlmZmljdWx0eSBpcyB5b3UgY2Fubm90IHNlZSB5b3VyIG9wcG9uZW50IHRlbGwgYWxzby4uIApSb3lhbCBGbHVzaCAgIFRoZSBoaWdoZXN0IGhhbmQgcG9zc2libGUgICBBIDUgY2FyZCBjb21iaW5hdGlvbiBvZiB0aGUgMTAsIGphY2ssIFF1ZWVuLCBLaW5nIGFuZCBBY2Ugb2YgdGhlIHNhbWUgc3VpdCAoRm9yIGluc3RhbmNlOiAxMEpRS0Egb2YgaGVhcnRzKS4gCk11c2ljLCBjYXJuaXZhbCBnYW1lcywgZmFjZSBwYWludGluZywgYmFsbG9vbiBhcnRpc3RzLCBqdW1wIGhvdXNlcy4gCkkgcHV0IG15IGhhbmQgdXAgYW5kIHNhaWQsICJTdG9wISEgTm8gb2ZmZW5zZSwgbXkgbWFuIGJ1dCBJIGRvbiBrbm93IHlvdSBhbmQgSSBnb3QgbXkga2lkcyBoZXJlISIuIEhlIHB1dCBoaXMgaGFuZHMgdXAgYW5kIHN0YXJ0ZWQgYmFja2luZyBhd2F5LiAKU2hvdWxkIGl0IGJlIGJhbm5lZApNeSB0aGVzaXMgaXMgdGhhdCBIdERQIGhhcyBtaXNzZWQgYW4gb3Bwb3J0dW5pdHkgdG8gcmVpbmZvcmNlIGl0cyBjb3JlIG1lc3NhZ2UsIHRoYXQgZGF0YSBzdHJ1Y3R1cmUgZGV0ZXJtaW5lcyBwcm9ncmFtIHN0cnVjdHVyZS4gKEhvdyB0byBkZXNpZ24gY28gcHJvZ3JhbXMpCkhvdyBtdWNoIG1vbmV5IGRvIHlvdSBuZWVkIHRvIGVhcm4sIHNheSwgZXZlcnkgbW9udGggdG8gYmUgZmluYW5jaWFsbHkgc2FmZT8gRm9yIHNvbWUgcGVvcGxlIGl0cyAkNSwwMDAgYW5kIGZvciBzb21lIGl0J3MgJDI1LDAwMC4gRG8geW91IG1ha2UgZW5vdWdoIHJpZ2h0IG5vdyB0byBkbyBpdCBmdWxsIHRpbWU/IEhvdyBtdWNoIGRvIHlvdSBhdmVyYWdlIGFuIGhvdXI/LiAKSXRzIGEgbGllIHlvdSBkb24gb3duIHRob3NlIGNocCBhbmQgeW91ciB3YWxsZXQgY2hwIGlzIGp1c3QgYSBudW1iZXIgdGhlcmUgaXMgbm8gY2hwIGluIGl0LiAKSSBlbmpveSB0aGUgbW9yZSBwb2xpdGljcyBpbiBzcGFjZSBiZXR3ZWVuIHJhY2VzLCByZWFsbHkgaGVscGVkIHRvIHNob3cgYSBzaWRlIG9mIHRoZSBmZWRlcmF0aW9uIHRoYXQgeW91IGhhZG4gc2VlbiBiZWZvcmUsIHNpbmNlIGJlZm9yZSB0aGF0IHRoZXkgd2VyZSB0aGUgbWFnaWNhbCBzcGFjZSBjb21tdW5pc3RzIHRoYXQgd2VyZSB0aGUgaWRlYWwgc29jaWV0eSBhbmQgY291bGQgZG8gbm8gd3JvbmcuIApUaGF0IGlzIHdheSB3b3JzZSB0aGFuIHRhbmtpbmcgZm9yIGEgd2hpbGUuIApPbiB0aGUgQ29uIHNpZGUsIG1vc3Qgd2Vic2l0ZXMgZG8gbm90IGRlbGl2ZXIgaW4gcHJvcGVyIHRpbWUuIE9yIGF0IGFsbCBpbiBzb21lIGNhc2VzLiAKRkRIIHdhcyBwZXJoYXBzIG5vdCB1bmRlcnN0YW5kaW5nIHlvdXIgZmluYW5jaWFsIHNpdHVhdGlvbiB3aGVuIGhlIGFza2VkIHlvdSB0byBidXkgcHJlc2VudHMgZm9yIGEgcm9vbWZ1bCBvZiBzdHJhbmdlcnMuIApJdCBvZmZlcnMgbm8gb3V0d2FyZCBzaWduIHRoYXQgUGFkZG9jayB3b3VsZCBjYXJyeSBvdXQgdGhlIE9jdC4gMSBzaG9vdGluZyB0aGF0IGtpbGxlZCA1OCBwZW9wbGUgYW5kIGluanVyZWQgaHVuZHJlZHMgYXQgYW4gb3V0ZG9vciBjb25jZXJ0IG9uIHRoZSBMYXMgVmVnYXMgU3RyaXAuClNvIHlvdSdyZSBub3QgdGVzdGluZyB0byBzZWUgaWYgaGVhZHNob3RzIGxvb2sgc3VmZmljaWVudGx5IHNpY2sgICB5b3UncmUgbWV0aG9kaWNhbGx5IGNoZWNraW5nIGV2ZXJ5IHR5cGUgb2YgYnV0dGVyIGtuaWZlIHRvIG1ha2Ugc3VyZSBpdCBkb2VzIHRoZSBmaXZlIHBvaW50cyBvZiBkYW1hZ2UgaXQncyBzdXBwb3NlZCB0by4gVGhlIHNlY29uZCBiaWdnZXN0IG1pc2NvbmNlcHRpb24gaXMgdGhhdCBldmVyeW9uZSBpcyB0ZXN0aW5nIHBvcHVsYXIsIGJlbG92ZWQgZ2FtZXMuIENvcmV5J3MgZmlyc3QgYXNzaWdubWVudCB3YXMgYSBTaW1zIHRoZW1lZCBjaGF0IHByb2dyYW0sIHdoaWNoIGlzIGV4YWN0bHkgYXMgZXhjaXRpbmcgYXMgaXQgc291bmRzLiAKU29tZSBtYXkgc2VlIGl0IGFzIGEgcGx1cywgSSBkb24ga25vdyBob3cgSSBmZWVsIGFib3V0IGl0LCBidXQgdGhlIGluY3JlZHVsb3VzIGxvb2sgYW5kIHJlc3BvbnNlcyB0aGF0IHNvbWUgb2YgdGhlIGd1ZXN0cyBnaXZlIGhpbSBkdXJpbmcgdGhlaXIgaW50ZXJ2aWV3cyBpcyBzb21ldGhpbmcgdG8gYmVob2xkLiBJIHRoaW5rIExldHRlcm1hbiBlc3BlY2lhbGx5IHNlZW1lZCBsaWtlIGlmIGl0IHdhc24gZm9yIGhpcyBOZXRmbGl4IGNvbnRyYWN0IGhlIHdvdWxkbiBiZSB0aGVyZS4uIApJIG5vdCBzYXlpbmcgd2Ugc2hvdWxkbiB2b3RlIHRoZW0gb3V0LCB3ZSBzaG91bGQuIFRoZSBSZXB1YmxpY2FuIHBhcnR5IGlzIGEgZGFuZ2VyIHRvIEFtZXJpY2EgYXMgd2Uga25vdyBpdC4gCkEgbG9jYWwgdGF0dG9vIGFydGlzdCBpcyBzZXR0aW5nIHVwIGEgcG9rZXIgcnVuIGluIHRoZSB1cGNvbWluZyB3ZWVrcy4KSSBzdGFuZCBjb3JyZWN0ZWQsIHRob3VnaC4gVGhpcyBuZXcgaW5mb3JtYXRpb24gd2lsbCBhbHNvIG1ha2UgdGhpbmdzIG11Y2ggZWFzaWVyLiAKTW9zdCBvZiB0aGUgbW9kcyBoZXJlIG1ha2UgbW9kIGFjdGlvbnMgZXZlcnkgZGF5LCB0b3RhbGluZyBodW5kcmVkcyBwZXIgbW9udGggcGVyIG1vZGVyYXRvci4gCkZpdmUgb25saW5lIGdhbWJsaW5nIGJlc3QgZ2FtZXM6IHZpZGVvIHBva2VyLCBjcmFwcywgYmxhY2tqYWNrLCBzbG90cyBhbmQgYmFjY2FyYXQgd2l0aCBpbmZvcm1hdGlvbiBvbiB3aW5uaW5nIHN0cmF0ZWdpZXMuIApJZiB5b3Ugb3duIGEgYnVzaW5lc3MgdGhhdCBuZWVkcyByb29tIHRvIGV4cGFuZCBpbiB0aGUgbmVhciBmdXR1cmUsIGl0IGEgZ3JlYXQgdGltZSB0byBiZSBhIHRlbmFudCBpbiBMb25kb24uCkxvbmdTaG90NiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhleSBhc2tlZCB3aGV0aGVyIHRoYXQgd2FzIHRydWUgaWYgaXQgd2FzbiB0aGUgQUcgaGVyc2VsZiwgYnV0IGlmIGl0IHdhcyBoZXIgc3RhZmYgb3IgdGhlIERNLiBUaGUgZGVwdXR5IG1pbmlzdGVyLCBmb3IgaGVyIHBhcnQsIHRoYXQgRmluYW5jZSBoYWQgdG9sZCBoZXIgdGhhdCB0aGV5IHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgS2F0aGxlZW4gdW5kZXJzdGFuZHMgdGhlIGltcGFjdCBpZiB3ZSBkbyBub3RoaW5nIGluIHRoaXMgY2FzZS4gCkkganVzdCBuZWVkZWQgYW4gdW1icmVsbGEgdGhlcmUgd2FzIG11bHRpcGxlIGJlYXIgc2VsbGVyIGNoaW5lc2Ugb25lcyBmb3IgJDE5Ljk5IHdpdGggaG9uZXN0bHkgMTAsMDAwIHJldmlld3MgLiBrZWVwIGxvb2tpbmcgdGhlcmUgYXJlIGJyYW5kIG5hbWVzIGxpa2UgdG90ZXMgd2l0aCB3YXJyYW50aWVzIHRoYXQgYmVlbiBhcm91bmQgZm9yIGV2ZXIgZm9yIHRoZSBzYW1lIHByaWNlKCBnaXZlIG9yIHRha2UgJDEpIHRoYXQgaGF2ZSBsaWtlIDQwIHJldmlld3MgcHJvYmFibHkgYWZ0ZXIgYmVpbmcgbGlzdGVkIGZvciBnb2Qga25vd3MgaG93IG1hbnkgeWVhcnMgLiBXaHkgd291bGQgYW55b25lIGxlYXZlIGFuIGhvbmVzdCByZXZpZXcgb24gc3VjaCBhIHNoaXR0eSBicmFuZGVkIGl0ZW0gLgoyNDAgQ2hpcCBOZXhHZW4gUFJPIENsYXNzaWMgU3R5bGUgUG9rZXIgU2V0IFdpdGggV29vZCBDYXNlClRoZSBzYWxlc21hbiB2ZXJ5IGNhbG1seSBzYWlkLCAiWW91IHdvbid0IHNpbmsgZG93biBzbyBmYXIgaW4gdGhlICJ1bnR1ZnRlZCBzdHlsZSIuIApOb3cgU2xpbSBpcyBvdXQgb2YgdGhlIGFjdGlvbiwgYW5kIHNvIGlzIDgzIHllYXIgb2xkIEpvaG5ueSBNb3NzIG9mIE9kZXNzYSwgVGV4YXMsIGEgdGhyZWUgdGltZSBjaGFtcGlvbiB3aXRoIHRoZSBzbWlsZSBvZiBhIGNyb2NvZGlsZS4gRWFybGllciwgTW9zcyBoYWQgc2FpZCwgIkkgbGlrZSBteSBjaGFuY2VzIGJldHRlciB0aGFuIGFueWJvZHkncy4gCkdyb2VzIFBsdXMgaXN0IGF1Y2ggZGllIFdpZWRlcmhvbHVuZyBkZXMgR3J1bmR3aXNzZW5zLCB2b3IgYWxsZW0gSW1wbGllZCBPZGRzIGF1ZiBkZW4gZXJzdGVuIFNlaXRlbi4gRGFzIHRpZ2h0IGFnZ3Jlc3NpdmUgU3BpZWwgdm9yIGRlbSBGbG9wIHdpcmQgZWJlbmZhbGxzIGluIGdld29obnRlciBIYXJyaW5ndG9uIE1hbmllciBhYmdlaGFuZGVsdC4gV2llIHNwaWVsZSBpY2ggd2FzIHVuZCB3YXJ1bSBzb2xsIGljaCBzbyBzcGllbGVuLiBFciBzY2hyZWlidCBnZXdvaG50IGxvY2tlciB1bmQgdmVyYW5zY2hhdWxpY2h0IGFsbGVzIG1pdCBkZW4gdHlwaXNjaGVuIEJlaXNwaWVsaG5kZW4uIEdlZWlnbmV0IGlzdCBkYXMgQnVjaCBlYmVuZmFsbHMgZnIgRWluc3RlaWdlci4gWmllbGdydXBwZSBzaW5kIGFiZXIgdm9yIGFsbGVtIGxlaWNodCBGb3J0Z2VzY2hyaXR0ZW5lIG9kZXIgYmVzc2VyIGdlc2FndCBhdWNoIFR1cm5pZXJzcGllbGVyLCBkaWUgc2ljaCBhdWNoIGFuIGRlbiBDYXNoIEdhbWVzIHZlcnN1Y2hlbiBtY2h0ZW4uClRoZSBiYXNpY3N0cmF0ZWd5IGZvciBibGFja2phY2tpcyB0byBjb21wYXJlIHlvdXIgaGFuZCB0byB0aGF0IG9mIHRoZSBkZWFsZXIncyBzaG93aW5nIGNhcmQuIC4gdG8gdGhlIC4gb2YgeW91ciBwb2tlciBoYW5kLiBPbmUgb2YgdGhlIG1ham9yIC4gaW4gdGhpcyBnYW1lIGlzIHdoZXRoZXIgdG8gcmFpc2Ugb3IgZm9sCldpdGggdGhlIHNub3cgYW5kIHRoZSBjb2xkIG92ZXIgdGhlIGxhc3Qgd2VlayBvciBzbywgdGhlcmUgaGFzIG5vdCBiZWVuIG11Y2ggYWN0aXZpdHkgb24gdGhlIHJpdmVyLiBBbmdsZXJzIHdobyBoYXZlIHZlbnR1cmVkIG91dCBoYXZlIGZvdW5kIGEgbWl4IG9mIHN0ZWVsaGVhZCBhbmQgYnJvd24gdHJvdXQuIFZlcnkgY29sZCB0ZW1wZXJhdHVyZXMgaW5jbHVkaW5nIGRhbmdlcm91cyB3aW5kIGNoaWxscyBhcmUgZXhwZWN0ZWQgZm9yIHRoZSB3ZWVrZW5kLiBUaGUgd2F0ZXIgZmxvdyBpcyBydW5uaW5nIGF0IDQsNjYwY2ZzIHRoaXMgbW9ybmluZy4KQnV0IHRoZSBrZXkgcG9pbnQgaXMgdGhhdCBoZXIgcGVyZmVjdCB2aXNpb24gaXMgZGVhZC4gSGVyIHBlcmZlY3QgdmlzaW9uIGluY2x1ZGVzIHRoZSBXYXJyaW9yIGFuZCBoZXIgd29ya2luZyBzaWRlIGJ5IHNpZGUgdG8gc2V0IGV2ZXJ5b25lIGFnYWluc3QgZWFjaCBvdGhlciB1bnRpbCB0aGV5IHJlYWR5IHRvIGNsb3NlIHRoZSBjeWNsZS4KSSB0ZWxsIG15IGd1ZXN0cyB0aGF0IEkgZG8gYSBzY2FsZSBmcm9tIDEgNSBhcyBmYXIgYXMgcHJlc3N1cmUgZ29lcyBhbmQgd2Ugc3RhcnQgYXQgYSAxIG9yIGEgMiBhbmQgd29yayBvdXIgd2F5IHVwLiBUaGVyZSBpcyBhYnNvbHV0ZWx5IG5vIHJlYXNvbiB0aGF0IGEgbWFzc2FnZSBzaG91bGQgYmUgdW5jb21mb3J0YWJsZSB1bmxlc3MgeW91IG1ha2UgaXQgZXhwbGljaXRseSBjbGVhciB0aGF0IHlvdSB3YW50aW5nIGRlZXAgZGVlcCB3b3JrIGFuZCBpbnRlbnNlIGZvY3VzIG9uIHRyaWdnZXIgcG9pbnRzLi4gClRoYXQgZGlmZmVyZW50IGZyb20gc3ByLCB3aGljaCBiYXNpY2FsbHkgdGVsbHMgeW91IGhvdyBkZWVwIHlvdSBwbGF5aW5nLiAKTm8gcmVnaXN0cmF0aW9uIGlzIC4gCk1lbWVzLCByYWdlIGNvbWljcywgYW5kIHBpY3R1cmUgYmFzZWQgcG9zdHMgYXJlIG5vdCB3ZWxjb21lIGhlcmUuIEluIGFkZGl0aW9uLCBwcm9tb3Rpb24gb2Ygb3IgcmVmZXJlbmNlcyB0byBzZXggbmVnYXRpdmUgY29tbXVuaXRpZXMsIHdoZXRoZXIgbG9jYXRlZCBvbiBSZWRkaXQgb3IgZWxzZXdoZXJlLCBhcmUgbm90IGFsbG93ZWQuCk9uY2UgeW91IGFibGUgdG8gaW5zZXJ0IGFuZCB3ZWFyIHRoZSBsYXJnZSBidXR0IHBsdWcsIHBlbmV0cmF0aW9uIHdpdGggaGlzIHBlbmlzIHNob3VsZCB0aGVuIGJlIGZhaXJseSBjb21mb3J0YWJsZS4uIApXZXJlIGZvciBzYWxlIGZvciAkNzUwLDAwMC4gCk9QLCBJIGFtIHNvIHNvcnJ5IHRoYXQgeW91IGJlZW4gdXNlZCBmb3IgZnVuc2llcy4gTm8gb25lIGRlc2VydmVzIHRoYXQgdHJlYXRtZW50LiBUaGFuayB5b3UgZm9yIGdpdmluZyB1cyBhbiB1cGRhdGUuIEkgZG8gaGF2ZSBhIGZldyBzdWdnZXN0aW9ucyBmb3IgeW91IGFuZCBTTy4KQW5kIG9mIGNvdXJzZSBzaGUgcG9zdHMgb24gSW5jZWxUZWFycywgYmVjYXVzZSB3aHkgd291bGRuIHRoaXMgU0pXIHBhcnRpY2lwYXRlIGluIGEgc3VicmVkZGl0IG1vY2tpbmcgbWFyZ2luYWxpemVkIG1lbj8gQWxvbmcgd2l0aCwgeWVwLCAvci9UaGVSaWdodENhbnRNZW1lLy4gQSBjcmluZ3kgbGVmdCB3aW5nIGNpcmNsZWplcmsgc3ViIHRyeWluZyB0byBpcm9uaWNhbGx5IG1vY2sgdGhlIHJpZ2h0IGlyb25pYyBtb2NrZXJ5IG9mIHRoZSBsZWZ0LiBBbmQgbG90cyBvZiBnZW5lcmljIGFudGkgQW1lcmljYSBhbmQgZ2VuZXJpYyBhbnRpIENhcGl0YWxpc3QgcG9zdHMuIAouQnV0IG1vcmUgdGhhbiB0aGF0LCBoZSB3YXMgIm9uZSBoZWxsIG9mIGEgZ3V5IiEgRGF2aWQgd2lsbCBiZSBtaXNzZWQgYnkgaGlzIGdvbGYgZ3V5cywgcG9rZXIgcGFscywgdGhlIGJvYXRpbmcgYnVkZGllcywgdGhlIGh1bnRpbmcgYW5kIHNob290aW5nIGdhbmcsIGFsbCB0aGUgRmxvcmlkYSBhbmQgdGlraSBmcmllbmRzLCB0aGUgZmVsbGFzIGFuZCBnYWxzIHdobyBoYXZlIGJlZW4gd2l0aCB1cyBhbGwgdGhlIHdheSB0aHJvdWdoIG91ciBjb25zdHJ1Y3Rpb24gYnVpbGRzIGFuZCBoaXMgbG92aW5nIGZhbWlseSB3aG8gYXJlIGhlYXJ0YnJva2VuIGZyb20gdGhlIGxvc3Mgb2YgdGhpcyB3b25kZXJmdWwgbWFuLiBXZSBrbm93IHRoZSBraW5kIG9mIGhvbGUgdGhpcyB3aWxsIGxlYXZlIGluIGFsbCBvZiBvdXIgbGl2ZXMgYW5kIHdlIGhvcGUgeW91IGNhbiBmaW5kIHNvbWUgc29sYWNlIGluIGtub3dpbmcgRGF2aWQgbG92ZWQgeW91IGFsbCBzbyBkZWFybHkuIApSZWFkaW5nIHBva2VyIGhhbmRzIGlzIG5vdCB0aGUgbW9zdCBpbXBvcnRhbnQgcGFydCBvZiBhbnkgcG9rZXIgYXJtb3VyeSwgYW5kIGl0J3Mgbm90IHZlcnkgdXNlZnVsIGZvciBsb3cgc3Rha2VzIHBva2VyIHJvb21zIGVpdGhlci4gUGxheWVycyBhdCB0aGlzIGxldmVsIGFyZSBub3QgdmVyeSBza2lsbGVkIG1ha2luZyB0aGVtIHVucHJlZGljdGFibGUgYW5kIGhhcmRlciB0byByZWFkLgpXZSdyZSBhIGNvdXBsZSBpbiBvdXIgNDAncywgZG9uJ3QgaGF2ZSBraWRzLCBrbm93IG5vdCB0byBmbG9vZCB0aGUgYmF0aHJvb20gYW5kIHN0aWNrIGEgbGl2ZSB3aXJlIGluIGl0LiBXZSBqdXN0IHdhbnQgdG8gYnJ1c2ggb3VyIHRlZXRoL2xpc3RlbiB0byBwb2RjYXN0cy8gZHJ5IG91ciBoYWlyIHdpdGhvdXQgdHJ1ZGdpbmcgc2VhbCB3ZXQgaW4gb3RoZXIgcm9vbXMuIEFsc28sIEkgd291bGQgSSBjbGVhbmx5IG11cmRlciBhbnlvbmUgaWYgSSBjYW4ndCB0aHJvdyBhIHBsdWdnZWQgdG9hc3RlciBpbiB0aGUgYmF0aD8gSG93Py4gCklzIG91dCB0aGVyZSByaWdodCBub3cgbW9tLiBJIGFtIGhlYWRpbmcgaG9tZS4gSGFuZ3MgdXAgdGhlIHBob25lLCBsb29rcyBhdCBLYXRpZSwgYW5kIHNheXMsIGJyb3RoZXIgd2FzIG9uIGhpcyB3YXkgaG9tZSBmcm9tIGEgZ2FtZSBhbmQgbW9tIGFza2VkIGhpbSB0byBncmFiIG1lLiAKQmFjayBpbiB0aGUgZGFyayBhZ2VzLCB2aXNpdGluZyBtdWx0aXBsZSBzdG9yZXMgcmVxdWlyZWQgYSBzaG9wcGVyIHRvIG5hdmlnYXRlIChzaHVkZGVyKSB0aGUgb3V0ZG9vcnMuIEhlcmUgaW4gdGhlIGZyb3plbiB0dW5kcmEsIHRoYXQganVzdCB3b3VsZG4ndCBkby4gClp1bWEgY2FuIG5hdGlvbmFsaXplIGFsbCB3aGl0ZSBvd25lZCBmYXJtbGFuZCBkaXN0cmlidXRlIGl0IHRvIHRoZSBtYXNzZXMgb2YgaW1wb3ZlcmlzaGVkIGJsYWNrIFNvdXRoIEFmcmljYW5zIGZvciBzdWJzaXN0ZW5jZSBmYXJtaW5nLCBhIGhpZ2hseSBwb3B1bGFyIG1vdmUgd2hpY2ggd2lsbCBpbnN0YW50bHkgdHJhbnNmb3JtIFp1bWEgZnJvbSB2aWxsYWluIHRvIGhlcm8gZm9yIG1hbnksIGFsYmVpdCBpdCB3aWxsIGRlc3Ryb3kgdGhlIGFncmljdWx0dXJhbCBpbmR1c3RyeSBsYW5kIGJhbmtzLiBXaXRoIHBvcHVsYXIgc3VwcG9ydCBub3cgYmVoaW5kIGhpbSwgWnVtYSBjYW4gdGhlbiBnbyBmb3IgYnJva2UgZGVmeSB0aGUgY29uc3RpdHV0aW9uYWwgY291cnQgZ28gZm9yIDNyZCB0ZXJtIGFzIHByZXNpZGVudCwgY2FuY2VsbGluZyBvciByaWdnaW5nIG5hdGlvbmFsIGVsZWN0aW9ucy4gClRoZW4gdGhlcmUgdGhlICJhc2sgY3VsdHVyZSIsIHBlb3BsZSB3aG8gZmVlbCBpdCBva2F5IHRvIGFzayBmb3IgYW55dGhpbmcgYmVjYXVzZSB0aGUgb3RoZXIgcGFydHkgaXMgZnJlZSB0byBzYXkgZGVjbGluZSB0aGVpciByZXF1ZXN0LiAKRmlzaGluZyBSZXBvcnRzIGZvciBGZWJydWFyeSAxMwpGb3Igb25lIFJlc2VhcmNoZXIsIHRoZWlyIHZpc3VhbCB0cmlnZ2VyIHdhcyBhIHBpY3R1cmUgdGhleSBwaWNrZWQgdXAgeWVhcnMgYmVmb3JlLCBvZiBhIHdvb2RsYW5kIGdsYWRlLiAKVGhlc2UgQ3VzdG9tIFBva2VyIENoaXBzIGFyZSB0aGUgY2hpcHMgdGhhdCBhcmUgZGVzaWduZWQgZm9yIGFuZCBkaXN0cmlidXRlZCB0byBtb3N0IG9mIHRoZSBjYXNpbm9zIGluIHRoZSB3b3JsZCwgYW5kIHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBpcyBtYWRlIG91dCBvZiBjbGF5IG9mIGFuIGV4Y2VsbGVudCBxdWFsaXR5LiBZb3Ugd2lsbCBmaW5kIHRoYXQgaGF2aW5nIHRoZSByaWdodCBjaGlwcyBpbiBoYW5kIGFyZSBhIGdyZWF0IHdheSB0byBtYWtlIHN1cmUgdGhhdCB5b3VyIHBsYXllcnMgaGF2ZSBhIGdyZWF0IHRpbWUuIEp1c3QgaGFuZGxpbmcgdGhlc2UgY2hpcHMgYXJlIGEgam95LCBhbmQgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGFyZSBtYW55IGRpZmZlcmVudCB0aGluZ3MgdGhhdCB5b3UgY2FuIGRvIHdoZW4geW91IGFyZSBsb29raW5nIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdXIgZ3Vlc3RzIGNvbWUgYXdheSB3aXRoIGEgbWVtb3JhYmxlIGVleHBlcmllbmNlLgpXaXRoIEFsbGVudG93bidzIFN5bXBob255IEhhbGwsIHRoZSBzdHVkeSBmb3VuZCB0aGUgTGVoaWdoIFZhbGxleSBoYWQgbm8gbmVlZCBmb3IgYW5vdGhlciB2ZW51ZSBvZmZlcmluZyBzaW1pbGFyIHByb2dyYW1taW5nLi4gCkhlIGxvc3QgdG8gbGVzcyB0YWxlbnRlZCBmaWdodGVycyB3aG8gY2F1Z2h0IGhpbSB1bmF3YXJlcyBhcyBoZSBwbGF5ZWQgY29jayBvZiB0aGUgcmluZy4gCldlbGwgYXMgd2UgYXJlIHdhaXRpbmcgdGhlcmUsIHNjYW5uaW5nIHRoZSB3YXRlciwgc29tZW9uZSBqb2tlcyB0aGF0IHdlIHNob3VsZCBzZWUgaWYgU3VtbWl0IGlzIHN0cmVhbWluZy4gU28gb25lIG9mIHRoZSBndXlzIGRvZXMgY2hlY2ssIGFuZCBzdXJlIGVub3VnaCBoZSBzdHJlYW1pbmcuIEN1cnJlbnRseSBzd2ltbWluZyB1bmRlciB3YXRlciBmZW5kaW5nIG9mZiBzb21lIHNoYXJrcyBvciBzb21lIHNoaXQuIFdlIGpva2UgYWJvdXQgaXQgYmVpbmcgaGltIHNvbWUgbW9yZSwga2VlcCBsb29raW5nIGFyb3VuZCwgd2hlbiB3ZSBzZWUgc29tZXRoaW5nIGluIHRoZSB3YXRlciAoc3RpbGwgYSB3YXlzIG9mZiksIGFuZCBzb21lb25lIGhhcHBlbnMgdG8gZ2xhbmNlIGF0IFN1bW1pdCBzdHJlYW0gYWdhaW4gb25seSB0byBmaW5kIGEgbmljZSBwaWN0dXJlIG9mIG91ciBib2F0IHNpdHRpbmcgYXQgdGhlIGZvcnQuClllcyB0byBzb21lIG9mIHRoYXQsIGJ1dCBmb3Igc29tZSB3ZSBuZWVkIHRvIGRvIGl0IGluIDUgMTAgeXJzLiBSZW1lbWJlciwgd2VudCB0byB0aGUgTW9vbiBpbiAxMCB5ZWFycyB3aXRoIGJhc2ljYWxseSB0aGUgY29tcHV0aW5nIHBvd2VyIG9mIGEgcG9ja2V0IGNhbGN1bGF0b3IuIApUaGUgT2xkIFNoYW5naGFpIGV2ZW50IHdhcyBvbmUgb2YgbXkgZmF2b3JpdGUgZXZlbnRzIEkgZXZlciBzZWVuIG9uIHRoaXMgc2VydmVyLiBJIGp1c3QgbG92ZWQgYm90aCBzdWl0cyBzbyBtdWNoLCBJIGxpa2VkIHRoZSBhZHMgd2l0aCB0aGUgb2xkIG11c2ljLCBhbmQgSSBhY3R1YWxseSBzdGFydGVkIHJlYWRpbmcgYXJ0aWNsZXMgYWJvdXQgdGhhdCBwZXJpb2Qgb2YgdGltZSBpbiBTaGFuZ2hhaSBiZWNhdXNlIGl0IGdvdCBtZSBzbyBpbnRlcmVzdGVkLiAKVGhhdCBpcyBhIHZlcnkgY29uc2VydmF0aXZlIGFwcHJvYWNoIGJ1dCBpdCBkZWZpbml0ZWx5IGlzIHRoZSBiZXN0IG9uZSB0aGF0IHlvdSBjYW4gdXNlLiBJZiB5b3UgcmVhbGx5IHNlcmlvdXMgYWJvdXQgYmVjb21pbmcgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIHRoaXMgdGlwIGEgbG9uZyB3aWxsIHRha2UgeW91IGEgbG9uZyB3YXkuIERvbiBwbGF5IGFib3ZlIHlvdXIgbGltaXRzLiAKQ2FwIGV2ZW50dWFsbHkgZXNjYXBlcyB3aXRoIEJ1Y2t5IHRvIGEgU2liZXJpYW4gSHlkcmEgYmFzZSB3aGVyZSBaZW1vIHBsYW5zIHRvIGF3YWtlbiBzb21lIHN1cGVyIHNvbGRpZXJzLiBNZWFud2hpbGUsIElyb24gTWFuIHdpc2VzIHVwIGFuZCBtYW5hZ2VzIHRvIGluZGVwZW5kZW50bHkgbGVhcm4gdGhlIEh5ZHJhIEhRJ3MgbG9jYXRpb24gZnJvbSBhbiBpbXByaXNvbmVkIEZhbGNvbi4gClNvbWUgcXVlc3Rpb24gd2h5IERCUFIsIGFuIGV4ZWN1dGl2ZSBhZ2VuY3kgcnVuIGJ5IEdvdi4gUmljayBTY290dCdzIG9mZmljZSwgaXMgZGVhbGluZyB3aXRoIHRoZSBydWxlcyBub3cgYXMgdGhlIExlZ2lzbGF0dXJlIHByZXBhcmVzIGZvciBpdHMgb3duIGRlYmF0ZS4gVGhlIGFnZW5jeSBpcyByZWx5aW5nIG9uIGEgYnJvYWQgc3RhdHV0ZSB0aGF0IGdpdmVzIGl0IHRoZSBwb3dlciB0byBlc3RhYmxpc2ggInJlYXNvbmFibGUgcnVsZXMgZm9yIHRoZSBjb250cm9sLCBzdXBlcnZpc2lvbiwgYW5kIGRpcmVjdGlvbiBvZiBhbGwgYXBwbGljYW50cywgcGVybWl0dGVlcywgYW5kIGxpY2Vuc2VlcyBhbmQgZm9yIHRoZSBob2xkaW5nLCBjb25kdWN0aW5nLCBhbmQgb3BlcmF0aW5nIG9mIGFsbCByYWNldHJhY2tzLCByYWNlIG1lZXRzLCBhbmQgcmFjZXMgaGVsZCBpbiB0aGlzIHN0YXRlLiIuIApEdXJpbmcgYSAxOTkwIGNvbmZlcmVuY2Ugc3BvbnNvcmVkIGJ5IHRoZSBwcm9ncmFtLCBhbiBhcHBlYWwgd2FzIG1hZGUgdG8gYXR0ZW5kZWVzIHRvIGNvbWUgdXAgd2l0aCBhIG1vcmUgcGVybWFuZW50IHNvbHV0aW9uIHRvIHRoZSBwcm9ibGVtLiBUaGF0IGRheSwgc2V2ZW4gcGVvcGxlLCBpbmNsdWRpbmcgQmlzc29ubmV0dGUsIHJhaXNlZCB0aGVpciBoYW5kcy4gCkJ1dCBJIHRoaW5rIHBvbGxpbmcgc3RpbGwgaW5kaWNhdGVzIHRoYXQgVmVuZXp1YWxhbnMgZG8gbm90IHdhbnQgQW1lcmljYW4gc3BvbnNvcmVkIHJlZ2ltZSBjaGFuZ2UuIApNeSBvbmx5IGNyaXRpcXVlcyBhcmUgdGhhdCBzb21lIG9mIHRoZSBza2lydCBoZW1saW5lcyBhcmUgYSB0YWQgdG9vIHNob3J0IGZvciB0aGUgb2ZmaWNlLCBhbmQgaW4gbW9zdCBvZmZpY2VzLCBzcGFnaGV0dGkgc3RyYXAgc2hpcnRzIGFuZCBiYXJlIHNob3VsZGVycyBhcmUgbm90IGFwcHJvcHJpYXRlLiBCZSBjYXJlZnVsIHdpdGggb3ZlciB0aGUga25lZSBib290cy9zdG9ja2luZ3MgICBlc3BlY2lhbGx5IGhlZWxlZCBvbmVzLCBhcyB0aGV5IGNhbiBlYXNpbHkgY29tZSBvZmYgYXMgdmFtcHkgb3Igc2V4eSwgYW5kIGFsdGhvdWdoIEkgbG92ZSB0aGUgbG9vaywgaXQgbm90IGFwcHJvcHJpYXRlIGZvciBhIHByb2Zlc3Npb25hbCBlbnZpcm9ubWVudC4KRnJvbSB0aGUgZmlyc3QgcmF5cyBvZiBwYWxlIGRhd24gdG8gdGhlIHJpY2ggZ29sZCBvZiB0aGUgc2V0dGluZyBzdW4sIHRoZSBleHF1aXNpdGUgUG9tb25hIG51cnR1cmVkIGV2ZXJ5IHBsYW50IHdpdGhpbiBoZXIgZG9tYWluLiAKVHJ5IHRoZW0sIHlvdSBrbm93IHlvdSB3YW50IHRvLklmIHlvdSBoYXZlIGEgcGFzc2VuZ2VyLCBlbmNvdXJhZ2UgdGhlbSB0byBodXJsIHRoZW1zZWx2ZXMgZm9yd2FyZHMgaW50byB0aGUgd2luZHNoaWVsZCB3aGVuZXZlciB5b3UgY29tZSB0byBhIHN0b3AuIApEZXBlbmRpbmcgb24gc2NhbGFiaWxpdHkgY29uY2VybnMsIGlmIHlvdSBjYXJlIGFib3V0IGxvbmcgcnVubmluZyBnYW1lcyBidXQgZG9uIG5lZWQgbWFzc2l2ZSBlZmZpY2llbmN5LCBhIGRpc2sgYmFja2VkIGRhdGFiYXNlIHdpbGwgYmUgZWFzaWVyLCBhbmQgc3RpbGwgcGVyZm9ybSB3ZWxsIGVub3VnaC4gClRoZSBzdHlsZSBvZiB0aGUgY3V0c2NlbmVzIGlzIGltcHJlc3NpdmUsIGFueXdheS4gQXMgSSBzYWlkLCB0aGUgY2VsIHNoYWRlZCBpcyBtb3JlIGV2aWRlbnQgaW4gY2VydGFpbiBtb21lbnRzLCBidXQgaG9uZXN0bHkgaXQgc28gY29udmluY2luZyBpdCBjb3VsZCBiZSBhaXJlZCBhcyBhbiBhY3R1YWwgYW5pbWUgd2l0aG91dCBsb29raW5nIGJhZC4KSmFtaWUsIHdobyBhc2tlZCB0aGF0IGhpcyBsYXN0IG5hbWUgYmUgd2l0aGhlbGQsIGlzIDUyIHllYXJzIG9sZCwgaGFzIHR3byBjaGlsZHJlbiBhbmQgd29ya3MgaW4gcHVibGljIHNlcnZpY2UuIER1cmluZyBoaXMgdGltZSBhdCBPcmNoYXJkLCBoZSB3YXMgZmlyc3Qgb24gRW1wbG95bWVudCBJbnN1cmFuY2UgYW5kIHRoZW4gcmVjZWl2ZWQgNzAlIG9mIGhpcyBpbmNvbWUgdGhyb3VnaCBoaXMgd29ya3BsYWNlIGxvbmcgdGVybSBkaXNhYmlsaXR5IGJlbmVmaXRzLiBBdCBob21lLCBoaXMgY3VycmVudCB3aWZlLCBMZWFoLCBjb250aW51ZWQgdG8gd29yayBhbmQgcmFpc2UgbW9uZXkuCllvdXIgcG9zdCBtYWRlIGEgbG90IHRoaW5ncyBtdWNoIGNsZWFyZXIgdG8gbWUsIGFuZCBpdCBhbHNvIGdhdmUgbWUgdGhlIGlkZWEgb2YgdHJ5aW5nIHRvIG1ha2UgdGhlIEJpZyBCYWQgc29tZW9uZSB3aG8gYW4gYW50YWdvbmlzdCBhbmQgYSB2aWxsYWluIGF0IHRoZSBzYW1lIHRpbWUuLiAKRGVyIGZyYW56c2lzY2hlIE1pdGJld2VyYmVyIGltICBuYW1lbnMgdmVyYnVjaHRlIGVpbmVuIEphY2twb3QgU2llZyB2b24gYmVhY2h0bGljaGVuICQgODAuNTU1IGFtIE5pbGUgT25saW5lICBTcGllbC4gCk15IG1vdGhlciBpbiBsYXcgaGFzIEFsemhlaW1lcidzLiAKRG9uJ3QgY29tcGFyZSB5b3Vyc2VsZiB0byB0aGUgbmV4dCBwZXJzb24gb3IgdG8gYSBtb2RlbCBvciBhY3RyZXNzLiBZb3UgYXJlIHlvdXIgb3duIHBlcnNvbiB3aXRoIHlvdXIgb3duIHNraWxscywgdGFsZW50cywgZHJlYW1zIGFuZCBnb2Fscy4gClRoaXMgcmVtaW5kcyBtZS4gSSBoYXZlIHRvIHdyaXRlIHNvbWV0aGluZyBvdXQsIGJlY2F1c2UgSSBoYXZlbiByZWFsbHksIGFuZCBJIGZlZWwgbGlrZSBJIG5lZWQgdG8uCkNsdWJzIGFuZCBob3RlbHMgaW4gT3JhbmdlIG1hZGUgdGhlIHNlY29uZCBtb3N0IG5ldCBwcm9maXRzIGZyb20gZ2FtYmxpbmcgaW4gdGhlIENlbnRyYWwgV2VzdC4gUmVhZCBhbHNvIE5pbmUgZXhwZXJ0cyB0byBhZHZpc2UgTlNXIGdvdmVybm1lbnQgb24gcmVzcG9uc2libGVnYW1ibGluZyBQcmVzc2luZyBpc3N1ZTogZ2FtYmxlcnMgcHV0dGluZyAkNjUwLDAwMCBhIGRheSBpbnRvIHBva2VyIG1hY2hpbmVzICBHcmFwaHMgQ2l0eSBjbGFzc2lmaWVkIGFzIGhpZ2ggcmlzayBsb2NhdGlvbiBmb3IgcG9raWVnYW1ibGluZyBEYXRhIHNob3dzIHRoYXQgT3JhbmdlIGNsdWJzIG1hZGUgJDguMSBtaWxsaW9uIGZyb20gMzA5IGdhbWJsaW5nIG1hY2hpbmVzIGluc3RhbGxlZCBhdCBzaXggcHJlbWlzZXMsIHdoZXJlYXMgdGhlIGhvdGVscyBtYWRlICQzLjggbWlsbGlvbiBpbiBuZXQgcHJvZml0IGZyb20gMTc0IG1hY2hpbmVzIGluc3RhbGxlZCBhdCAxMyBsb2NhdGlvbnMuIApDcmVhbXMgYW5kIG9pbnRtZW50IGNhbiBhbHNvIGJlIGhhcnNoIHRvIHlvdXIgc2tpbiBkdWUgdG8gY2hlbWljYWxseSBpbmR1Y2VkIGluZ3JlZGllbnRzLiBJZiB5b3Ugd2FudCB0byB1c2UgdGhlIG1vc3QgbmF0dXJhbCB0cmVhdG1lbnQsIHlvdSBjYW4gYWx3YXlzIGNyZWF0ZSB5b3VyIG93biBtYXNzYWdlIG9pbC4gSXQgaXMgY29zdCBlZmZlY3RpdmUgYW5kIGVhc3kuIApSdWxlIDFCOiBVc2luZyBzdGFuZGFyZCB3b3JkcyBhcyB0aGUgbmFtZSBvZiB5b3VyIGJvc3MgYW5kIHN1cHBsZW1lbnRpbmcgaXQgd2l0aCBhY2NlbnRzIHdpbGwgYmUgcmVnYXJkZWQgYXMgbG93IGVmZm9ydCwgZXhjZXB0aW9ucyBhcmUgbWFkZSBpZiB0aGUgdGl0bGUgaXMgdHJhbnNmb3JtYXRpdmUuIFRpdGxlcyBzdWNoIGFzICJEZywgZGVmZW5kZXIgb2YgdGhlIGxhd24iIHdpbGwgYmUgc3ViamVjdCB0byByZW1vdmFsLiAKQWdlICAgNTcuIEZsYXQgc2hhcmVkIHdpdGggbXkgd2lmZSBvZiAxNyB5ZWFycywgVHJpc2guIFNhZGx5IEhlaW56IDU3IHZhcmlldHkgZG9nIG9mIGFyb3VuZCAxNiB5ZWFycywgbmFtZWQgTGFkeSwgd2VudCB0byBzbGVlcCBieSBFdXRoZW5hc2lhIGR1ZSB0byBhY3V0ZSBraWRuZXkgZmFpbHVyZSBvbiAwOS8wNy8yMDA5CkEgaHVtYW4gcGVyZm9ybWFuY2UgbGFib3JhdG9yeSBpcyBhbHNvIGJhc2VkIG9uIHNpdGUgYW5kIGlzIHVzZWQgZm9yIHRoZSBhbmFseXNpcyBvZiBodW1hbiBtb3ZlbWVudCBhbmQgYmlvbWVjaGFuaWNzLgpJIHdvdWxkIGxpa2UgdG8gaW52aXRlIHlvdSB0byBtYWtlIGEgcG9zdCBvdmVyIGF0IHIvSnVzdE5vU08gYXMgd2VsbCwgc2ltcGx5IGN1dCBhbmQgcGFzdGluZyB5b3VyIE9QIG92ZXIgdGhlcmUgYXMgYSBuZXcgcG9zdCB3b3VsZCBiZSBmaW5lLiAKQmVzdCBwbGFjZSB0byBwbGF5IGZyZWUKQ29udmVyc2VseSwgb3RoZXJzIGZlZWwgeW91IHNob3VsZCBzdGFydCBhcyBzb29uIGFzIHBvc3NpYmxlIGFzIG1hc3NhZ2UgY2FuIGhlbHAgdG8gcHJvdmlkZSBhIHRyYW5zaXRpb24gYmV0d2VlbiB0aGUgd29tYiBhbmQgdGhlIG91dHNpZGUgd29ybGQsIGFuZCB0aGF0IG1hc3NhZ2UgaXMgcGFydGljdWxhcmx5IGJlbmVmaWNpYWwgZm9yIHByZW1hdHVyZSBiYWJpZXMuIE1hc3NhZ2UgaXMgYWxzbyBhIHBvcHVsYXIgb3B0aW9uIGZvciBjb3Bpbmcgd2l0aCBjb2xpYywgYSBwcm9ibGVtIG9ubHkgbm9ybWFsbHkgZW5jb3VudGVyZWQgYnkgYmFiaWVzIHVuZGVyIDMgNCBtb250aHMuIApZb3UgY2FuIG5vdyB1bmRlcnN0YW5kIGhvdyB0byBjb21tdW5pY2F0ZSB3aXRoIGEgbm9uIHZlcmJhbCBjaGlsZCBvciBhbnkgb3RoZXIgcGVyc29uIGxpdmluZyB3aXRoIHRoZSBzYW1lIGlzc3VlLi4gClRoZSBMb25nIFlhbmcgZm9ybSBoYXMgMTA4IG1vdmVtZW50cywgd2hpbGUgQ2hlbmcgTWFuIENoaW5nJ3MgdmVyc2lvbiBoYXMgb25seSAzNywgYmVjYXVzZSBpdCBoYXMgcmVsYXRpdmVseSBmZXcgcmVwZXRpdGlvbnMuIApDdCBib25uZXMgYWRyZXNzZXMsIGplIG1lIHN1aXMgaW5zY3JpdGUgc3VyIE1hcHN0ciwgdW5lIGFwcGxpY2F0aW9uIGZyYW5haXNlIHBvdXIgc3RvY2tlciwgcGFydGFnZXIgc2VzIGJvbm5lcyBhZHJlc3NlcywgZW4gbGVzIHRyaWFudCBhdmVjIGRlcyBtb3RzIGNscyAgdm9sb250LiBDZWxhIG0nYSBwZXJtaXMgZGUgcmVncm91cGVyIGRpdmVyc2VzIGFkcmVzc2VzIChkc29sZSwgZXNzZW50aWVsbGVtZW50IHBhcmlzaWVubmVzLikgZXQgYmVhdWNvdXAgIGRjb3V2cmlyLiBDJ2VzdCBhaW5zaSBxdWUgaidhaSBldSBsJ2lkZSBpbCB5IGEgcXVlbHF1ZXMgam91cnMgZGUgZGpldW5lciBwYXMgdHJzIGxvaW4gZGUgbW9uIGNhYmluZXQgY2hleiBMdXogVmVyZGUsIHJlc3RhdXJhbnQgbWV4aWNhaW4gZHUgOW1lIGFycm9uZGlzc2VtZW50LiAKVGhlIExhcyBWZWdhcyAic3RyaXAiIHZzLiJkb3dudG93biIgTGFzIFZlZ2FzIChhbmQgdGhlICJGcmVtb250IFN0cmVldCkgZXhwZXJpZW5jZS4gR2FtYmxpbmdlc3RhYmxpc2htZW50cyBpbiAidHJhZGl0aW9uYWwiIGxvY2F0aW9ucyBpbiB0b3ducyB2cy4gClRyYW5zaXRpb25pbmcgZGlkbid0IHdvcmsgZm9yIHlvdSwgYW5kIHRoYXQncyBvay4uIApVc2UgbW9pc3R1cml6ZXIuIEFmdGVyIHRyaW1taW5nLCB1c2UgYSBtb2lzdHVyaXplciB0byBwcm90ZWN0IHlvdXIgc2tpbi4gCkdvb2QgbHVjay4uIApJbiB0aGF0IGNhc2UsIHRoZSBsaW1pdGluZyBmYWN0b3IgaXMgbm90IHlvdXIgY29ubmVjdGlvbiBzcGVlZCwgYnV0IHJhdGhlciB0aGUgdGltZSBhbmQgb3RoZXIgbG9zc2VzIHRoYXQgYXJlIGludm9sdmVkIGluIGNvbW11bmljYXRpbmcgaGFsZndheSBhcm91bmQgdGhlIGdsb2JlLiBZb3Ugc2VlIHRoZSByZXZlcnNlIGVmZmVjdCBpZiB5b3UgZ28gaG9tZSBhbmQgdHJ5IHRvIG9wZW4gdXAgc29tZSBLb3JlYW4gaG9zdGVkIHNpdGUgbGlrZSBLYWthbyBNYXAuLiAKRGVDaWNjbyBhbHNvIG9yZ2FuaXplcyBkb25hdGlvbiBiYXNlZCwgbW9udGhseSBzbnVnZ2xlIHBhcnRpZXMuIApPbiB0aGUgbG93IGVuZCwgcGFyYWxlZ2FscyBhbmQgbGVnYWwgYXNzaXN0YW50cyBlYXJuZWQgYSAyNXRoIHBlcmNlbnRpbGUgc2FsYXJ5IG9mICQzOCwyMzAsIG1lYW5pbmcgNzUgcGVyY2VudCBlYXJuZWQgbW9yZSB0aGFuIHRoaXMgYW1vdW50LiAKSSBrbm93IHRoZSBmZWVsaW5nLiAKWW91IHdpbGwgbmVlZCBuZXcgc3RlYW0gYWNjb3VudCBhbmQgcmVwdXJjaGFzZSB0aGUgZ2FtZSBhZ2FpbiB0byBwbGF5LiAKSSBmb3VuZCBpdCByZWFsbHkgbm90IGFzIGdvb2QgYXMgQ2hhbXBpb24gaW4gYSBudW1iZXIgb2Ygc2l0dWF0aW9ucy4gT2Z0ZW4sIGdvb2QgZW5naW5lcyB3aWxsIHJlcXVpcmUgcGxheWluZyBhIGxvdCBvZiB0ZXJtaW5hbCBhY3Rpb25zIHBlciB0dXJuLCB3aGVyZSBBY2FkZW15IHdpbGwgZmFsbCBmbGF0IHJlbGF0aXZlIHRvIENoYW1waW9uLiBJdCBnb29kIGZvciBnYW1lcyB3aGVyZSB5b3Ugb25seSBuZWVkIGEgZmV3IHRlcm1pbmFsIGFjdGlvbnMgdG8gYmUgcGxheWVkIGVhY2ggdHVybiwgYWxvbmcgd2l0aCBzb21lIHdheSBvZiBnYWluaW5nIGFjdGlvbnMuIEJ1dCB5ZWFoLCBpdCBoZWxwZnVsIHRvIGhhdmUgZm9yIHN1cmUsIGp1c3Qgbm90IG5lYXJseSBhcyBnb29kLiBJdCB0YWtlcyBhIHdoaWxlIHRvIGdldCBhIENoYW1waW9uIHRob3VnaCwgc28gZm9yIHRoZSBpbnZlc3RtZW50LCBwcm9iYWJseSB3b3J0aCBpdC4KTm8gVTMuIE90dGxjbHRsIHdvdWxkIGRpc2NvdW50IHRoZSBwb3NzaWJpbGl0eSB0aGF0IG1ham9yIG1pbGl0YXJ5IGFjdGl2aXR5IG1pZ2h0IGJlIGluIHRoZSBvZmZpbmcgaW4gTGFvcy4gVGhlcmUsIHdhcyBubyBpbW1lZGlhdGUgY29tbWVudCB0aGVzZSBvZmZpY2lhbHMgb24gdGhlIHNpdHVhdGlvbiBpbiBUaGFpbGFuZC4gCkxlIHJlc3BlY3QgZGUgdm90cmUgdmllIHByaXZlIGVzdCBpbXBvcnRhbnQgcG91ciBub3VzLgpIb29rZXIgYW5kIHRoZSBEQSBleGNoYW5nZSB3b3JkcyB3aXRoIHRoZSBqdWRnZSBndXlzIGFuZCB0aGUgY2hpY2sgY29wIGxvb2tzIHdvcnJpZWQuIFRoZSBEQSBxdWVzdGlvbnMgQWRyaWFuIGFuZCB0aGVuIHNpdHMgZG93bi4gClR1cm5pbmcgZG93biB0aGV2b2x1bWUgb24gcG9raWVzICBvciBlbnN1cmluZyB0aGV5IGFsc28gbWFkZSBzb3VuZHMgd2hlbiBwZW9wbGUgbG9zdCAgd2VyZSBhbW9uZyB0aGUgcmVwb3J0IHJlY29tbWVuZGF0aW9ucy4gUmVzZWFyY2hlcnMgYWxzbyByZWNvbW1lbmRlZCBnYW1pbmcgcm9vbXMgYmUgbG9jYXRlZCBhd2F5IGZyb20gZGluaW5nIGFyZWFzIG9yIGNsdWIgZW50cmFuY2VzLiBUaGV5IGFsc28gc3VnZ2VzdGVkIHNjaG9vbCBiYXNlZCBlZHVjYXRpb25hYm91dCBwb2tpZXMsIHBhcnRpY3VsYXJseSBpbiBjb21tdW5pdGllcyB3aXRoIGEgbG90IG9mIGNsdWJzLiAKSGEhIFRoYXQgaW5jcmVkaWJseSBzaW1pbGFyIHRvIG15IHdvcmxkLiBUaHJlZSBtYWpvciB2aWxsYWluIHByb3RhZ29uaXN0cyBvbiBhIHZhcmllZCBzY2FsZSBvZiB2aWxsYWlueSAoYnV0IHdoeSBjYW4gSSBvbmx5IHdyaXRlIHZpbGxhaW4gcHJvdGFnb25pc3RzPz8gTXkgaGVyb2VzIGVuZCB1cCBzbyBib3JpbmchKSBhbmQgY291bnRsZXNzLiAKREFDQSBpcyBub3QgYSBmZWRlcmFsIGxhdy4gCkRpZG4gd2FudCB0aGUgZGlmZmVyZW50IHdvb2RzIHRvIGZpZ2h0IGVhY2ggb3RoZXIgc28gd2UgbmVlZGVkIHRoZSBwZXJmZWN0IHRvbmUgZm9yIHRoZSB3aGl0ZSBvYWssIHNheXMgSmVzdC4gClRoZXkgYXJlIHVuc3VyZSBob3cgbWFueSBwZW9wbGUgd2lsbCBwYXkgYSBwcmVtaXVtIGZvciBoeWJyaWQgdGVjaG5vbG9neSwgZXN0aW1hdGVkIGJ5IGFuYWx5c3QgRHVsZWVwIGF0ICQzLDUwMCBwZXIgdmVoaWNsZSAoc2VlIGJveCBhYm92ZSkuIApDb2xsZWdlIGZhY2lsaXRpZXMgd2VyZSBtYWRlIGF2YWlsYWJsZSB0b2RheSB0byAyOSBwYXJ0aWNpICBwYXRpbmcgdW5pdHMsIGluY2x1ZGluZyBpbmR1cyAgdHJpZXMsIGNvbXBhbmllcyBhbmQgZm91ciBzY2hvb2wgc3lzdGVtcy4gCkl0IGlzIG1vbmV5IHRoYXQgY2FuIGJlIHVzZWQgYnkgYSBiZW5lZmljaWFyeSwgYnV0IGlzIG5vdCBjb250cm9sbGVkIGJ5IHRoZSBiZW5lZmljaWFyeS4gClRoYW5rcyB0byBGcmVlcm9sbHMsIHRha2luZyB0aGUgbGVhcCBmcm9tIHJpbmcgZ2FtZXMgdG8gdG91cm5hbWVudHMgaXNuJ3QgdGhhdCBoYXJkLiBOZXcgcGxheWVycyB3aG8gd2FudCB0byB0YWtlIGEgY3JhY2sgYXQgdG91cm5hbWVudHMgd2l0aG91dCBwYXlpbmcgdGhlIGVudHJ5IGZlZXMgYXJlIHdlbGNvbWUgdG8gam9pbiBmcmVlIHJvbGxzICAgYSB0b3VybmFtZW50IHdoZXJlIHRoZSBwbGF5ZXJzIGRvbid0IHBheSBhbnkgYnV5IGluLCBhbmQgd2hlcmUgdGhlIGludGVybmV0IHBva2VyIHJvb21zIHB1dCB0aGVpciBvd24gbW9uZXkgaW4gdGhlIHByaXplIHBvb2wuIEZyZWVyb2xscyBvZmZlciBuZXcgcGxheWVycyBhIGZhbnRhc3RpYyBvcHBvcnR1bml0eSB0byBtYWtlIHRoZWlyIGZpcnN0IHN0ZXAgaW4gdGhlIHRvdXJuYW1lbnRzIHdvcmxkLCBhbmQgYWxzbyBhIGNoYW5jZSB0byBtYWtlIG1vbmV5ISBFeHBlcmllbmNlZCBwbGF5ZXJzIGFsc28gbG92ZSBmcmVlcm9sbHMgICBhZnRlciBhbGwsIHRoZXJlIGlzIG5vIHJpc2sgb3IgZW50cnkgZmVlLCBidXQgdGhlcmUncyBzdGlsbCBhIHByaXplIHBvb2wgdG8gZ3JhYiFBbm90aGVyIGx1Y3JhdGl2ZSByZWFzb24gdG8gc3RhcnQgcGxheWluZyBhdCB0b3VybmFtZW50cyBpcyB0aGUgYWRkZWQgdG91cm5hbWVudHMsIHdoaWNoIGFyZSBhbHNvIGNhbGxlZCBndWFyYW50ZWVkIHRvdXJuYW1lbnRzLiAKQ3VycmVuY3kgZ2VhciBoYWQgbm9uZSBvZiB0aG9zZSBpc3N1ZXMuIApZb3VyIHNlbGVjdGlvbiBvZiBoZWFkcGhvbmVzIHdpbGwgbWF0dGVyLiBUaGVyZSBhcmUga25vd24gcHJvYmxlbXMgd2l0aCB0aGUgdHJhbnNtaXNzaW9uIHBvd2VyIGFuZCBpZiB5b3VyIGhlYWRwaG9uZXMgcmVjZWl2ZXIgYW5kIHdhdGNoIGhhbmQgZG9uIG1hdGNoLCBpdCBkcm9wIGEgbG90LgpQdXR0aW5nIHRoZSBjb250ZXh0IGEgbGl0dGxlIGJpdCBvdXQgb2YgcGxhY2UuIApIb3cgaXMgdGhhdCBpcnJlbGV2YW50PyBSZXByZXNlbnRhdGlvbiBhbmQgY2l0aXplbnNoaXAgYXJlIGxpdGVyYWxseSB0aGUgY3J1eCBvZiB0aGUgaXNzdWUuIFRoZSB0ZXJyaXRvcmllcyBhcmUgbm90IHBhcnQgb2YgSXNyYWVsLCBib3RoIGJ5IElzcmFlbGkgYW5kIFBhbGVzdGluaWFuIGRlc2lyZXMsIGFuZCB3aWxsIGhvcGVmdWxseSBvbmUgZGF5IGJlIHBhcnQgb2YgYW4gaW5kZXBlbmRlbnQgUGFsZXN0aW5pYW4gc3RhdGUuIApKZXNzIExhbmcgaXMgbm90IGhlciByZWFsIG5hbWUuIEl0J3Mgbm90IGV2ZW4gdGhlIG5hbWUgc2hlIHVzZXMgYXMgYSBNaW5uZWFwb2xpcyBlc2NvcnQsIGVhcm5pbmcgYXJvdW5kICQyMDAgYW4gaG91ciBnaXZpbmcgZXJvdGljIG1hc3NhZ2VzIHRvIGJvdGggbWVuIGFuZCB3b21lbi4gU2hlIGFza2VkIHRoYXQgQ2l0eSBQYWdlcyBub3QgdXNlIGhlciByZWFsIG9yIGFzc3VtZWQgbmFtZSBiZWNhdXNlIGp1c3QgdGhlIGRheSBiZWZvcmUsIHNoZSBoYWQgYW5ub3VuY2VkIG9ubGluZSB0aGF0IHNoZSB3YXMgZmluYWxseSBnb2luZyAiZnVsbCBzZXJ2aWNlLiIKVGhlbiBvbmNlIHRoZSBwYXJ0IGlzIGJyb3VnaHQgdG8gYSBzcGVjaWZpYyB0ZW1wZXJhdHVyZSwgaXQgaXMgcXVlbmNoZWQgaW4gd2F0ZXIgYmVsb3cgdGhlIGNvaWwuIFRoaXMgaXMganVzdCBwYXJ0IG9mIHRoZSBoZWF0IHRyZWF0aW5nIHByb2Nlc3MsIGJlY2F1c2UgdGhlIHJhdGUgYXQgd2hpY2ggdGhpbmdzIGNvb2wgZWZmZWN0cyBob3cgdGhlIGhlYXQgdHJlYXRtZW50IGlzIGhlbGQuLiAKSGFzIGZ1Y2tlZCBpdHNlbGYgYnkgdHJ1c3RpbmcgY29ycG9yYXRpb25zIHRvIHByb3ZpZGUgaW50ZXJuZXQgYXQgZmFpciBwcmljZXMuIFdoZW4vaWYgR29vZ2xlIEZpYmVyIG9yIHNvbWV0aGluZyBzaW1pbGFyIGFycml2ZXMsIGl0IHdpbGwgYmUgbGlrZSB0aGUgQWxsaWVzIG1hcmNoaW5nIGludG8gUGFyaXMgZHVyaW5nIFdXMi4uIApUaGlzIHdvbiBiZSBFU1BOIGZpcnN0IGZvcmF5IGludG8gZXZlbnRzIHRoYXQgYXJlbiBzdHJpY3RseSBzcG9ydHMuIEl0cyBwcm9ncmFtbWluZyBoYXMgaW5jbHVkZWQgdGhlIFNjcmlwcHMgTmF0aW9uYWwgU3BlbGxpbmcgQmVlLCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGFuZCB0aGUgRHJ1bSBDb3JwcyBJbnRlcm5hdGlvbmFsIGNoYW1waW9uc2hpcC4gRVNQTiBhbHNvIGFpcmVkIHBhcnQgb2YgdGhlIEZJRkEgVWx0aW1hdGUgVGVhbSBDaGFtcGlvbnNoaXAgU2VyaWVzIGluIDIwMTcsIGFuZCBpdCBwcmV2aW91c2x5IHBhcnRuZXJlZCB3aXRoIEJsaXp6YXJkIEVudGVydGFpbm1lbnQgb24gIkhlcm9lcyBvZiB0aGUgRG9ybSwiIGFuIGVzcG9ydHMgdG91cm5hbWVudCBmb3IgY29sbGVnZSBnYW1lcnMuLiAKQ2V1eCBxdWkgc2UgcmVuc2VpZ25lbnQgb250IHBldXQgdHJlIGVudGVuZHUgcGFybGVyIGRlcyByZ2ltZXMgbWFpcyBuJ29udCBwYXMgZXUgbGUgdGVtcHMgZGUgY3JldXNlci4gVG91cyBuZSBzZXJhaWVudCBpbHMgcGFzIGF1IG1vaW5zIHRlbnVzICBkZSBsJ2NvdXRlIGV0IGV0IGRlIGxhIGJpZW52ZWlsbGFuY2UgPyBFdCBhdSByZXNwZWN0IGRlIGNoYWN1biwgcXVlbCBxdWUgc29pdCBzYSBzaWxob3VldHRlLiA/LiAKQ2Ugam91ciBsLCBqZSBtZSBzdWlzIHZyYWltZW50IHJnYWxlIGF1IGRlbCBkZSBtb24gYXR0ZW50ZS4gCjIzIE9jdCAyMDE3IC4gRHlpbmcgTGlnaHQ6IFRoZSBGb2xsb3dpbmcgICBFbmhhbmNlZCBFZGl0aW9uIEZyZWUgRG93bmxvYWQgUEMgR2FtZSAuIEVuam95IHRoZSBkZWZpbml0aXZlIER5aW5nIExpZ2h0IGV4cGVyaWVuY2Ugd2l0aCB0aGUgYnJhbmQgbmV3IExlZ2VuZCAuIDEuIEZyZWUgRG93bmxvYWQgRHlpbmcgTGlnaHQ6IFRoZSBGb2xsb3dpbmcgRW5oYW5jZWQgRWRpdGlvbiBQQyBHYW1lIEhlcmU6IC4gTWVtb3J5OiA0IEdCIFJBTSBERFIzOyBIYXJkIERyaXZlOiA0MCBHQiBmcmVlIHNwYWNlOyBHcmFwaGljczouIApXZSBjYXJlIGFib3V0IHRoZSBwZW9wbGUgd2hvIGFyZSBzdGlsbCBjYXBhYmxlIG9mIHJhdGlvbmFsIHRob3VnaHQuIApEaWUgU2NocmVpYmUgaXN0IGxvY2tlciwgZ3V0IHZlcnN0bmRsaWNoIHVuZCBkZXIgQXV0b3IgZ2VodCBtaXQgZWluaWdlbiBhdXNnZXdobHRlbiBIbmRlbiBhdWYgYmVzdGltbXRlIFNpdHVhdGlvbmVuIGVpbiwgZGllIGRhbm4gZ3JuZGxpY2ggYW5hbHlzaWVydCB3ZXJkZW4uLiAKQXMgdGhlIHByb2dyYW0gc2hpZnRlZCBhbmQgbG9hZGVkIHRoZSB3YWxsZXQgSSBsZWZ0IG91dCBvdXQgYSBzaWdoIG9mIHNhdGlzZmEgLiAKQnV0IEkgYWxzbyBoYXZlIHRvIHNheSB0aGF0IEkgaGFkIGEgaGFyZCB0aW1lIG5vdCBsYXVnaGluZyBhdCB0aGUgdGhvdWdodCBvZiBhbGwgb2YgeW91IGJlaW5nIGRydW5rIG91dCBvZiB5b3VyIG1pbmRzIGFuZCB0aGVuIHNvbWUgaG9tZWxlc3MgZ3V5IHN0YXJ0cyBqYWNraW5nIG9mZiBhbmQgc3ByaW50aW5nIHRvd2FyZHMgeW91LiBMaWtlIGltYWdpbmluZyBob3cgYXdmdWwgdGhhdCB3b3VsZCBiZSB3aGlsZSBhbHNvIGRydW5rLiBJJ20gbm90IHRyeWluZyB0byB0YWtlIGF3YXkgZnJvbSB0aGUgc2VyaW91c25lc3Mgb2YgdGhlIHN0b3J5IGVpdGhlciwgZXNwZWNpYWxseSB0aGUgcGFydCBhYm91dCB5b3VyIGZyaWVuZCBjYXVzZSB5ZWFoIHRoYXQgaXMgZnVja2VkIHVwLCBidXQgeW91IGhhdmUgYSBzdG9yeSB0aGF0IHlvdSdsbCBiZSB0ZWxsaW5nIGZvciB0aGUgcmVzdCBvZiB5b3VyIGxpZmUuClRoZSBiaXQgKGVuZCBtaWxsKSBpcyBnb2luZyB0byBoYXZlIHNvbWUgbWluaW11bSBkaWFtZXRlciBhbmQgdGhhdCBkZXRlcm1pbmVzIGhvdyBzaGFycCB5b3VyIGluc2lkZSBjb3JuZXJzIGNhbiBiZS4gCllvdSBsb3ZlIGZhc3QgcGFjZWQgZXhjaXRlbWVudC4gCk9uZSBmYWtlIGhhdGUgY3JpbWUgZG9lc24gbWVhbiB3ZSBkb24gaGF2ZSBhIHByb2JsZW0uIFNvIDIxMCByb3VuZHMuIE1vc3Qga2l0IGxheW91dHMgZmVhdHVyZSBzaXggc2luZ2xlIG1hZyBwb3VjaGVzIG9yIHRocmVlIGRvdWJsZSBtYWcgcG91Y2hlcyB3aXRoIHRoZSBzZXZlbnRoIGFscmVhZHkgbG9hZGVkIGluIHRoZSB3ZWFwb24uIFRoZXJlIGlzbiBtdWNoIHJvb20gZm9yIG1vcmUgYW1tbyB0byBiZSBob25lc3QuIEkgaGFkIGEgbG90IHdlaWdoaW5nIG1lIGRvd24sIGZvciBpbnN0YW5jZSwgdHdvIHJhZGlvcyBvbmUgdXAgZnJvbnQgYW5kIG9uZSBpbiBiYWNrIHBsdXMgdGhlIGluZGl2aWR1YWwgZmlyc3QgYWlkIGtpdCBwb3VjaCwgbXkgY29tcGFzcywgYSB1dGlsaXR5IHBvdWNoLCBhIG1hZ2F6aW5lIGR1bXAgcG91Y2gsIGFuZCBhIG1pc3Npb24gc3BlY2lmaWMgcG91Y2ggdGhhdCBjb250YWluZWQgbWFwLCBtYXAgbWFya2VycywgYW5kIHZhcmlvdXMgb3RoZXIgaXRlbXMgSSBuZWVkZWQgdG8gZG8gbXkgc3BlY2lmaWMgam9iLiAKUGFyZW50cyB3aXRoIHNtYWxsIGtpZHMgbmVlZCB0aGVpciBuZXN0LiAKRm9yIGEgY291bnRyeSB3aGVyZSB0aGUgc28gY2FsbGVkIERhd25sZWFrcyBoYXMgYmVjb21lIGEgbmF0aW9uYWwgc2NhbmRhbCBhbmQgd2hlcmUgZXZlcnkgc2VudGVuY2Ugb2YgZXZlbiB0aGUgbW9zdCB3ZWxsIGRpcmVjdGVkIGNyaXRpcXVlIG9mIG1hdHRlcnMgcGVydGFpbmluZyB0byB0aGUgYXJtZWQgZm9yY2VzIGlzIHB1dCB0aHJvdWdoIHRoZSBzaHJlZGRlciBvZiByaWRpY3VsZSwgdGhpcyBvbWlzc2lvbiBjb3VsZCBub3QgaGF2ZSBiZWVuIGNvaW5jaWRlbnRhbC4gVGhlIHJlYWR5IHRvIGp1bXAgYXQgeW91ciB0aHJvYXQgYnJpZ2FkZSBvZiBwZW4gcHVzaGVycyBjb3VsZCBub3QgaGF2ZSBub3Qgc2VlbiB0aGUgdmlkZW8uIE9mZmljaWFsIGNpcmNsZXMsIHdoaWNoIG1vbml0b3IgZXZlcnkgd29yZCBhYm91dCB0aGUgYXJtZWQgZm9yY2VzLCBkaXNzZWN0IGV2ZXJ5IHNvdW5kLCBoZWFyIGV2ZXJ5IGNhbGwgYW5kIHJlYWQgZXZlcnkgbWVzc2FnZSBvbiB0aGUgc3ViamVjdCwgY291bGQgbm90IGhhdmUgbm90IGtub3duIHRoYXQgdGhpcyBvdXRyYWdlb3VzIHBhY2sgb2YgbGllcyB3YXMgZG9pbmcgdGhlIHJvdW5kcy4uIApJbiB0aGUgZmlyc3QgYXJ0aWNsZSwgSSBsZXQgc2V2ZXJhbCBhZ2dyZXNzaXZlIHBsYXllcnMgcHVzaCBtZSBhcm91bmQgYSBsaXR0bGUgZWFybHkgb24sIHRoZW4gbGltcGVkIGluIGFuZCBkcm9wcGVkIG91dCBvbiBhIGZldyBkcmF3cywgc28gdGhleSBhbGwgdGhvdWdodCBJIHdhcyBhIHRpZ2h0LCB3ZWFrIHBsYXllciBhbmQgYSBnb29kIHRhcmdldCBmb3IgdGhlaXIgYWdncmVzc2l2ZSBzdHlsZSBvZiBwbGF5LiBMZXR0aW5nIHRoZW0gcHVzaCBtZSBhcm91bmQgc29tZSwgd2hpbGUgbm90IGxvc2luZyBtdWNoIHRvIHRoZW0sIGNvbmRpdGlvbmVkIHRoZXNlIGFnZ3Jlc3NpdmUgcGxheWVycyB0byBwdXNoIG1lIGV2ZW4gaGFyZGVyIHdoZW4gdGhleSBhYnNvbHV0ZWx5IHNob3VsZG4ndCBoYXZlICAgYSBodWdlIGVycm9yIG9uIHRoZWlyIHBhcnQgdGhhdCBJIGNvbnZlcnRlZCBpbnRvIGEgY2hpcCBsZWFkZXJzaGlwIHBvc2l0aW9uLgpBIHNwYWRlIGZsdXNoIGRyYXcgaGFzIG1hZGUgaXQgYnV0IG15IHF1ZWVuIGlzIHRoZSBoaWdoZXN0IHBvc3NpYmxlIHNwYWRlIHRvIGhvbGQuIApXaXRoIHRoZSBvcHBvcnR1bml0aWVzIHdlIG9mZmVyLCBpdCdzIGFsc28gdGhlIHN0cmV0Y2ggb2YgdGhlIHdvcmsuIi4gClRoZSBvbmUgd2hpY2ggaXMga25vd24gYXMgZnVsbHkgYXV0b21hdGljIGNvbWVzIHdpdGggYSBzaW5nbGUgZHJ1bSB3aGljaCB3b3JrcyBmb3IgYm90aCB3YXNoaW5nIGFuZCBkcnlpbmcgdGhlIGNsb3Rocywgb24gdGhlIG90aGVyIGhhbmQgc2VtaSBhdXRvbWF0aWMgaXMgdGhlIG9uZSB3aGljaCBjb21lcyB3aXRoIHR3byBkcnVtcywgZWFjaCBmb3IgYSBzZXBhcmF0ZSBqb2IgdGhhdCBpcyB3YXNoaW5nIGFuZCBkcnlpbmcuLiAKSWYgeW91IG91dCBvZiB0aG9zZSwgdGhlbiB5b3UgcXVhbGlmeSBmb3IgRk1MQS4gClZpZXRuYW0gc2F5cyBpbnZlc3RpZ2F0aW5nIGNhdXNlIG9mIGJvYXQgc2lua2luZyBpbiBjb250ZXN0ZWQgd2F0ZXJzVmlldG5hbSBpcyBzZWVraW5nIGNsYXJpZmljYXRpb24gb2YgaG93IGEgZmlzaGluZyBib2F0IGNhbWUgdG8gc2luayB0aGlzIHdlZWsgaW4gdGhlIGNvbnRlc3RlZCBTb3V0aCBDaGluYSBTZWEsIHRoZSBGb3JlaWduIE1pbmlzdHJ5IHNhaWQgb24gU2F0dXJkYXksIGRheXMgYWZ0ZXIgYSBsb2NhbCByZXNjdWUgYWdlbmN5IHNhaWQgaXQgd2FzIHJhbW1lZCBieSBhIENoaW5lc2UgdmVzc2VsLiAKVGFsa2luZyBhYm91dCBDYXJzb24ncyBiaW9ncmFwaHksIHdoZXJlIGhlIHdyb3RlIHRoYXQgaGUgdHJpZWQgdG8gc3RhYiBhIGZyaWVuZCBvbmx5IGZvciBoaXMgYmVsdCBidWNrbGUgc3RvcHBpbmcgdGhlIGJsYWRlLCBUcnVtcCBibGFzdGVkOiAiSG93IHN0dXBpZCBhcmUgdGhlIHBlb3BsZSBvZiBJb3dhPyBIb3cgc3R1cGlkIGFyZSB0aGUgcGVvcGxlIG9mIHRoaXMgY291bnRyeSB0byBiZWxpZXZlIHRoaXMgY3JhcD8iCkFzIHN1Y2gsIHdlIHJlcXVpcmUgeW91IHRvIGVkaXQgb3V0IGFsbCB0aGUgb2ZmZW5kaW5nIGNvbnRlbnQgZnJvbSB5b3VyIGFjY291bnQgd2l0aGluIDcgZGF5cy4gCkhvd2V2ZXIsIGJlZm9yZSB5b3Ugc3RhcnQgcmVhZGluZyBvdXIgcmV2aWV3cywgZmluZCBvdXQgbW9yZSBhYm91dCBob3cgdG8gZmluZCB0aGUgcGVyZmVjdCBvbmxpbmUgY2FzaW5vIGZvciB5b3UuLiAKV2hvIGFyZSB5b3VyIHRhcmdldCBjdXN0b21lcnM/IFlvdSBzaG91bGQgbGlzdCBkb3duIHRoZSBzcGEgdHJlYXRtZW50cyB0aGF0IHlvdSB3aWxsIGJlIG9mZmVyaW5nIGJhc2VkIG9uIHRoZSBjdXN0b21lcnMuIApJdCBzaG91bGQgYWx3YXlzIGJlIGZ1biBmaXJzdCBhbmQgYnVzaW5lc3Mgc2Vjb25kIHdpdGggYXJ0Li4gClRoZSBheCBmZWxsIHNldmVuIG1vbnRocyBhZnRlciBhIGNvbHVtbiBpbiBUaGUgUG9zdCBmaXJzdCByYWlzZWQgdGhlIHF1ZXN0aW9uLCAiQ2FuIEp1bGlhbiBOaWNjb2xpbmkgc3Vydml2ZSB0aGUgTWVUb28gZXJhIiAgIHdoaWNoIHN0YXJ0ZWQgd2l0aCBIYXJ2ZXkgV2VpbnN0ZWluIGFuZCBicm91Z2h0IGRvd24gcm9jayBzdGFyIHJlc3RhdXJhdGV1cnMgTWFyaW8gQmF0YWxpIGFuZCBTcG90dGVkIFBpZyBvd25lciBLZW4gRnJpZWRtYW4uIFRoZSBzaXRlJ3MgZWRpdG9yIGluIGNoaWVmLCBBbWFuZGEgS2x1ZHQsIHdyb3RlIHRoYXQgaGUgbWFkZSBoZXIgc3F1aXJtIHdoZW4gaGUgcmVmZXJyZWQgdG8gdGhlIHNpdGUgYXMgIkVhdGVyPyBFYXQgaGVyPyIKVGhlICJtYXR1cmUgYW5kIGludGVsbGlnZW50IGJ1dCBmaXQgdGVhY2hlciIgYXJjaGV0eXBlIGlzIHByZXR0eSBpbm9mZmVuc2l2ZSB0byBtb3N0IG1lbi4uIApIYXZpbmcgaGFkIHNleCBvbmNlIGFsc28gZG9lc24gc29tZWhvdyB0YWtlIGNhcmUgb2YgeW91ciBsaWJpZG8gaW50byB0aGUgZnV0dXJlLiBFdmVyeSB0aW1lIHlvdSBoYXZlIGFuIHVyZ2UgZm9yIHNleCBhbmQgeW91IGRvbiBoYXZlIHNleCB5b3UgZ29pbmcgdG8gaGF2ZSB0byBtYW5hZ2UgdGhlIHNhbWUgZmVlbGluZ3MuIElmIHlvdSBoYWQgZG9uZSB0aGUgZGVlZCB3aGVuIHlvdSB3ZXJlIDE4IGFuZCB0aGVuIG5vdCBhZ2FpbiB1bnRpbCB5b3Ugd2VyZSAyMSB5b3Ugd291bGQgc3RpbGwgaGF2ZSBoYWQgY29sbGVnZSB5ZWFycyBvZiB0aGUgc2FtZSB1cmdlcyBhbmQgdGhlIHNhbWUgZmVlbGluZ3MuIApQcm9waGVjeSB3aXRoIFNpZ25zIG9mIE1vb24KVW50aWwgcmVjZW50bHksIHRoYXQgaXMuSW4gMjAwNyB0aGUgZmlyc3QgaW50ZXJuYXRpb25hbCBGYXNjaWEgUmVzZWFyY2ggQ29uZ3Jlc3MsIGhlbGQgYXQgSGFydmFyZCBNZWRpY2FsIFNjaG9vbCwgYnJvdWdodCBhYm91dCBhIG5ldyBkZW1hbmQgZm9yIGF0dGVudGlvbiB0byB0aGUgZmFzY2lhbCBzeXN0ZW0uU2luY2UgdGhlbiBmYXNjaWEgaGFzIGJlZW4gcmVwZWF0ZWRseSByZWZlcnJlZCB0byBhcyB0aGUgU3Rvcnkgb2YgdGhlIGFuYXRvbXkgd29ybGQsIHNwZWFraW5nIGJvdGggdG8gaXRzIGludHJpZ3VlIGFuZCB0aGUgZ2Vla2luZXNzIG9mIHRob3NlIHdobyBzdHVkeSBpdC5XaGlsZSB5b3UgbWF5IG5vdCBzaGFyZSB0aGUgbWVkaWNhbCBhbmQgYm9keXdvcmsgY29tbXVuaXRpZXMgZXhjaXRlbWVudCBvdmVyIG1lY2hhbm90cmFuc2R1Y3Rpb24oYXJ0aWNsZSBsaW5rZWQgYmVsb3cpIGFuZCB0aGUgY29udHJhY3RpbGUgcHJvcGVydGllcyBvZiBteW9maWJyb2JsYXN0cywgdGhpbmsgb2YgaXQgdGhpcyB3YXk6IEZhc2NpYSBpcyBhIG1ham9yIHBsYXllciBpbiBldmVyeSBtb3ZlbWVudCB5b3UgbWFrZSBhbmQgZXZlcnkgaW5qdXJ5IHlvdSBldmVyIGhhZCwgYnV0IHVudGlsIGZpdmUgeWVhcnMgYWdvIG5vYm9keSBwYWlkIGl0IGFueSBhdHRlbnRpb24uIAooWW91IGRvbid0IHJlYWxpemUgaG93IG5pY2UgaXQgaXMgdG8gaGF2ZSBzaWRld2Fsa3MgdW50aWwgeW91IGhhdmUgdGhlbSBpbiBvbmUgbmVpZ2hib3Job29kIGFuZCBkb24ndCBoYXZlIHRoZW0gaW4gdGhlIG5leHQpIFRoZSB3b3JrIHN0YXJ0ZWQgYWJvdXQgMi41IHdlZWtzIGFnbyBhbmQgd2UncmUgc3RpbGwgcHJldHR5IGNsb3NlIHRvIHdoZXJlIHdlIHNob3VsZCBiZSBpbiBteSAzMCBkYXkgcmVoYWIgc2NoZWR1bGUuLiAKSSBsYXVnaGVkIG15IGFzcyBvZmYgYW5kIHdlbnQgb3V0c2lkZSBpbiB0aGUgcGF0aW8gdG8gc2VlIHdoYXQgdGhlIGRhbWFnZSBvZiB0aGUgcHJldmlvdXMgbmlnaHQgd2FzLiAKQWZ0ZXIgdGhlIG1hc3NhZ2UgSSB3YW50ZWQgdG8gc3BlYWsgdG8gYSBtYW5hZ2VyIGFib3V0IG15IGV4cGVyaWVuY2UuIEkndmUgaGFkIGEgbG90IG9mIG1hc3NhZ2VzLCBidXQgbmV2ZXIgYW55dGhpbmcgYXMgdW5jb21mb3J0YWJsZSBhcyB0aGlzLiBJIHRoaW5rIHRoZSBnaXJsIHdhcyB3b3JyaWVkIHdoYXQgSSB3YXMgZ29pbmcgdG8gc2F5IHRvIHRoZSB0d28gc3VwZXIgbmljZSBsYWRpZXMgdXAgZnJvbnQgYmVjYXVzZSB0aGUgbWFzc2FnZSBnaXJsIHJlZnVzZWQgdG8gbGVhdmUuIEZ1bm55IGhvdyBzaGUgd2FzIGluIHN1Y2ggYSBodXJyeSB0byBsZWF2ZSwgeWV0IHNoZSByZWZ1c2VkIHRvIGxlYXZlIHVudGlsIEkgZGlkLgpFdmVuIHRob3VnaCB5b3UgbWF5IHJvdXRpbmVseSBwbGF5IHBva2VyIHdpdGggdGhlIHNhbWUgcGVvcGxlLCB0aGVyZSBtYXkgc3RpbGwgYmUgc3BlY2lhbCBldmVudHMuIEFtb25nIG90aGVyIHRoaW5ncywgeW91IG1heSB3YW50IHRvIGhvc3QgYSBjZXJ0YWluIGdyb3VwIG9mIHBlb3BsZSBvbmNlIG9yIHR3aWNlIGEgeWVhci4gCkkganVzdCBmZWVsIGxpa2UgYSBnbG9yaWZpZWQgdHJlYXN1cmUgaHVudGVyL2NhcmdvIGhhdWxlciB3aGVuIEkgcGxheSB0aGlzIGdhbWUsIGFuZCBsZXNzIG9mIGEgcGlyYXRlLi4gCkluaXRpYWxseSBJIGZlZWwgbGlrZSBJIGhhdmUgYSB0b24gbW9yZSBwcm90ZWN0aW9uIGZyb20gZHVzdCBhbmQgY29udGFjdCwgZm9yIHNsaWdodCBwZW5hbHRpZXMgaW4gd2VpZ2h0IGFuZCBhY2Nlc3NpYmlsaXR5Li4gCkFtb25nIHRoZSBrZXkgbWFya2V0cyBpbiB0aGUgcmVnaW9uLCBEdWJhaSwgVUFFLCBlbmRlZCB0aGUgbW9udGggd2l0aCB0aGUgbW9zdCByb29tcyBpbiB0aGUgdG90YWwgYWN0aXZlIHBpcGVsaW5lICgzMiwyMjQpIGFuZCB0aGUgbW9zdCByb29tcyBpbiB0aGUgSW4gQ29uc3RydWN0aW9uIHBoYXNlICgxNiw3NjgpLiAKVGhpcyBjb25kaXRpb24gY2FuIG9jY3VyIGluIHVwIHRvIDcwIHBlcmNlbnQgb2YgcHJlZ25hbnQgd29tZW4sIGFuZCBpdCdzIG1vc3QgY29tbW9uIGluIHdvbWVuIHdpdGggZGFya2VyIGNvbXBsZXhpb25zIFtzb3VyY2U6IFR1bnppIGFuZCBHcmF5XS4gCkJ1dCBldmVyeSBvbmNlIGluIGF3aGlsZSBpdCBmcm96ZSB1cC4gTXkgbmVwaGV3IHNhaWQgbXkgNyB5ZWFyIG9sZCBQQyBpcyBwcmltaXRpdmUuIApPa2F5IEkgZ3Vlc3MgSSBiZWluZyB0b28gY29uY2VybmVkIGJlY2F1c2UgR1pDTFAgc2VlbWVkIHRvIG1ha2UgYSBzdHJlc3NlZCBwb2ludCBvZiBkbyBOT1QgZ28gdG8gYWN0dWFsIGZhaWx1cmUgZXZlciAoZGVmaW5pbmcgZmFpbHVyZSBhcyBjb21wbGV0aW5nIGEgcmVwIHdpdGggTk8gcmVwcyBsZWZ0IGluIHJlc2VydmUsIGFuZCBub3QgYXMgZ2V0dGluZyB0byBwb2ludCB3aGVyZSBsYXN0IHJlcCBhdHRlbXB0ZWQgSVMgYSAibm8gbGlmdCIpLiAKVHVsYWxpcCwgTXVja2xlc2hvb3QgYW5kIEZvcnR1bmUgUG9rZXIuIApBbW9uZyBvdGhlciB0aGluZ3MsIHlvdSBtYXkgd2FudCB0byBwdXJjaGFzZSBhIHNwZWNpYWwga2luZCBvZiB0YWJsZSwgYXMgd2VsbCBhcyBwb2tlciBjaGlwcyB0aGF0IGxvb2sgYW5kIGZlZWwganVzdCBsaWtlIHRoZSBvbmVzIHVzZWQgZHVyaW5nIHByb2Zlc3Npb25hbCB0b3VybmFtZW50cy4gCkxhYmVsIG1vbmV5IGhvbGRpbmcgY29udGFpbmVycyAocG90cykuIApCdXQgdGhhdCBub3QgdG8gc2F5IHRoYXQgcGxheWVyIHBlcmNlcHRpb24gaXNuIHZhbGlkLiBJIGFncmVlIHdpdGggdGhlIHNlbnRpbWVudCB0aGF0IEFydGlmYWN0IGdhbWVzIGZlZWwgbG9uZ2VyIHRoYW4gdGhleSBhY3R1YWxseSBhcmUsIGFuZCBpbiBjb250cmFzdCB0byBBdXRvIENoZXNzIEkgaGF2ZSBzb21lIGlkZWFzIG9uIHdoeSB0aGF0IG1pZ2h0IGJlLiBBdCBmaXJzdCBJIHNwZWN1bGF0ZWQgdGhhdCBpdCB3YXMgYSBzeW1wdG9tIG9mIHRoZSBpbml0aWF0aXZlIHN5c3RlbSB3aGVyZSBwbGF5ZXJzIHBhc3MgYWN0aW9ucyBiYWNrIGFuZCBmb3J0aCwgcmVxdWlyaW5nIGJvdGggcGxheWVycyB0byBub3QganVzdCBiZSBjb25zdGFudGx5IHdhaXRpbmcgb24gdGhlaXIgb3Bwb25lbnQsIGJ1dCBhbHNvIHJlc3BvbmRpbmcsIGV2ZW4gaWYgdGhhdCByZXNwb25zZSBpcyBqdXN0ICJwYXNzIi4gCkkga25ldyBhIG1hbiB3aG8gd29uICQzLjFtbG4gaW4gYSBzY3JhdGNoIG9mZiwgYWNjZXB0ZWQgdGhlIG1vbmV5IHB1YmxpY2x5LCBhbmQgZGllZCAzIG9yIDQgbW9udGhzIGxhdGVyIGZyb20gYSBoZWFydCBjb25kaXRpb24uIEhlIHdhcyBhdCBteSBvZmZpY2UgZm9yIGFuIGhvdXIgYW5kIGhhZCBvdmVyIDQwIG1pc3NlZCBjYWxscyBieSB0aGUgdGltZSB3ZSBmaW5pc2hlZCBhbmQgaGUgdW5tdXRlZCBoaXMgcGhvbmUuIEhlIHNhaWQgZXggZ2lybGZyaWVuZHMgd2VyZSBjYWxsaW5nIGFuZCBjcnlpbmcgYW5kIGJlZ2dpbmcgdG8gYmUgdGFrZW4gYmFjaywgZXZlcnlvbmUgaGFkIGFuIGludmVzdG1lbnQgb3Bwb3J0dW5pdHksIHJhbmRvbSBzdHJhbmdlcnMgb24gRmFjZWJvb2sgd291bGQgbWVzc2FnZSBoaW0gYXNraW5nIGZvciBoZWxwIHdpdGggdGhlaXIgbW9ydGdhZ2UuIEl0IHdhcyBhYnNvbHV0ZWx5IGluc2FuZS4gQWx3YXlzIHNldCB1cCBhIGJsaW5kIHRydXN0IGFuZCB0aGVuIGhhdmUgYSBzZWNvbmQgdHJ1c3QgYWNjZXB0IHRoZSBtb25leSwgcGFzcyBpdCB0byB5b3VyIHRydXN0LCBhbmQgdGhlbiBkaXNzb2x2ZSB0aGUgb3JpZ2luYWwgdHJ1c3Qgc28gdGhlcmUgY2FuIGJlIG5vIHB1YmxpYyBwYXBlciB0cmFpbCBsZWFkaW5nIHRvIHlvdS4gTmV2ZXIgYWdyZWUgdG8gbGV0IHRoZW0gdGFrZSB5b3VyIHBpY3R1cmUgYW5kIHVzZSBpdCBhbmQgeW91ciBuYW1lIGZvciBtYXJrZXRpbmcgcHVycG9zZXMuIEhlIHdhcyBvbmx5IG1heWJlIDUyIG9yIDUzLgpHZXJtYW4gbHV4dXJ5IGNhcnMgYXJlIGZhbW91cyBmb3IgdGhlaXIgb3ZlciB0aGUgdG9wIHRlY2hub2xvZ3ksIGFuZCB0aGUgRTQzIGlzIG5vIGV4Y2VwdGlvbi4gClRoZWlyIHNwZWVkIGhhcyBoYWQgdG8gYmUgbmVyZmVkIHNvIG11Y2ggdGhhdCB0aGF0IGl0IGdvZXMgYWdhaW5zdCB0aGUgemVyZyBmYXN0IHVuaXQgdHlwZS4gClRoaW5rIG9mIGFuIGFydGlzdCB5b3UgbGlrZSBvciB0aGF0IGhhcyBxdWFsaXRpZXMgdGhhdCB5b3UgbGlrZSB0byBzZWUgaW4gb3RoZXIgbXVzaWNpYW5zLiBTZWUgaWYgdGhlcmUgYSBzdWJyZWRkaXQgZm9yIHRoYXQgZ3JvdXAgc3BlY2lmaWNhbGx5LiBVc2UgUmVkZGl0IHNlYXJjaCBmdW5jdGlvbiBvbiB0aGF0IHN1YiB0byBzZWUgaWYgdGhlcmUgaGF2ZSBiZWVuIGRpc2N1c3Npb24gcG9zdHMgYWJvdXQgc2ltaWxhciBiYW5kcy4gSWYgbm90IChvciBtYXliZSBpZiB0aGVyZSBoYXMgYnV0IGl0cyBiZWVuIGF3aGlsZSkgbWFrZSBvbmUuIFBlb3BsZSBhcmUgdXN1YWxseSBoYXBweSB0byBzaGFyZSB0aGVzZSB0aGluZ3MsIEkgZm91bmQgc29tZSBvZiBteSBmYXZvcml0ZSBiYW5kcyB0aGlzIHdheS4KSGlzdG9yaXF1ZW1lbnQsIGxhIHByZXV2ZSBkdSBkY3MgbmUgcG91dmFpdCB0cmUgcmFwcG9ydGUgcXVlIHBhciBsJ2V4YW1lbiBkdSBjYWRhdnJlLiBJbCBuJ3RhaXQgZG9uYyBwYXMgcHJpcyBlbiBjb21wdGUgZGVzIGNhcyBvIGxhIG1vcnQgdGFpdCBjZXJ0YWluZSAobmF1ZnJhZ2UsIGd1ZXJyZSwgY3Jhc2gsIHRyZW1ibGVtZW50IGRlIHRlcnJlLCByYXogZGUgbWFyZSwgYWNjaWRlbnQgZGUgbW9udGFnbmUsIGRwb3J0YXRpb24sIGV0Yy4pLiAKKEtub3dpbmcgd2hlbiB0byBjaGFuZ2UgdGhlIHJlZWQgc3RyZW5ndGggaXMgc29tZXRoaW5nIGZvciBhIHByaXZhdGUgdGVhY2hlciB0byBoZWxwIHdpdGgsIGFzIGlzIGRlY2lkaW5nIGlmIHlvdSBzaG91bGQgc3dpdGNoIGJyYW5kcy4pLiAKSHVuZHJlZHMgb2YgbWFsZSBjdXN0b21lcnMsIGluY2x1ZGluZyBLcmFmdCwgYWxzbyBmYWNlIG1pbm9yIHNvbGljaXRpbmcgcHJvc3RpdHV0aW9uIHZpb2xhdGlvbnMgLi4gClNob3J0IEV4ZXJjaXNlIFZpZGVvOiBGb3J3YXJkIEhlYWQgUG9zdHVyZSBDb3JyZWN0aW9uIChBbnRpIEFnZWluZyBNdXN0KQpTbyBJIGRlY2lkZWQgdG8gc2VlIHdoYXQgdGhlIFJpZ2h0IHdpbmcgaXMgbWFraW5nIG9mIFJlcC4gSm9lIFdpbHNvbiBvdXRidXJzdCBkdXJpbmcgUHJlc2lkZW50IE9iYW1hIGhlYWx0aGNhcmUgc3BlZWNoIGxhc3QgbmlnaHQgYmVmb3JlIGEgam9pbnQgc2Vzc2lvbiBvZiBDb25ncmVzcy4gSG93IHdvdWxkIHRob3NlIG1vc3QgaW52ZXN0ZWQgaW4gdXBob2xkaW5nIGEgIm1vcmFsIG1ham9yaXR5IiBvZiBzdXBwb3NlZGx5IG9sZCBBbWVyaWNhbiB2YWx1ZXMgb2YgKHN0cmFpZ2h0KSBmYW1pbGllcyBhbmQgKENocmlzdGlhbikgR29kIGRlZmVuZCB0aGUgY29tcGxldGUgYW5kIHV0dGVyIGJyZWFrZG93biBpbiBjaXZpbGl0eSB0aGF0IGhhcHBlbmVkIHdoZW4gV2lsc29uIGNhbGxlZCBPYmFtYSBhIGxpYXIgbGFzdCBuaWdodD8uIApUaGlzIGlzIGEgY2x1YiB3aGljaCBnYXZlIHRoZSBkb21lc3RpYyBnYW1lIHN1Y2ggbHVtaW5hcmllcyBhcyBFYW1vbm4gRGVhY3ksIFRvbW15IE11cnBoeSwgSm9obiBNYW5uaW9uLCBCaWxseSBDbGVyeSwgSmltbXkgTm9sYW4sIE1hcmsgSGVycmljayBhbmQgS2VpdGggTGFtYmVydC4gVGhlaXIgcHJpZGUgYW5kIGFmZmluaXR5IHdpdGggdGhlIGNsdWIsIHRoZSBqZXJzZXkgYW5kIHN1cHBvcnRlcnMgbGVmdCBhbiBpbmRlbGlibGUgaW1wcmludCBvbiB0aGUgR2Fsd2F5IHNvY2NlciBwdWJsaWMsIGFuZCBpdCBpcyBpbXBvcnRhbnQgc3VjaCBhIGxlZ2FjeSBub3QgYmUgbG9zdCB0byB0aGlzIGdlbmVyYXRpb24uLiAKSXQgaXMgbm90IHVuaGVhcmQgb2YuIApNeSBiZXN0IGZyaWVuZCBmcm9tIG1pZGRsZSBzY2hvb2wgb2YgbWluZSB0aGF0IG1vdmVkIGF3YXkgaGl0IG1lIHVwIGluIGhpZ2hzY2hvb2wgdG8gaGFuZyBvdXQgYWZ0ZXIgYSBmZXcgbW9udGhzL2Fib3V0IGEgeWVhciBvZiBub3Qgc2VlaW5nIGVhY2ggb3RoZXIuIFdlIHVzZWQgdG8gcGxheSBndWl0YXIgYW5kIHNtb2tlIHdlZWQgdG9nZXRoZXIsIGFuZCBoZSB3YXMgdXN1YWxseSBwcmV0dHkgZnVuLiBIZSBoYWQgYWx3YXlzIGJlZW4gYSBiaXQgd2VpcmQsIGFuZCBraW5kYSB0d2l0Y2h5LCBidXQgc29tZXRoaW5nIHdhcyBzZXJpb3VzbHkgZGlmZmVyZW50IGFib3V0IGhpbSB0aGlzIHRpbWUgd2hlbiBoZSBjYW1lIHRvIHZpc2l0LiBBbGwgaGUgd2FudGVkIHRvIGRvIHdhcyBnZXQgaGlnaCBhbmQgYXNrIG1lIHF1ZXN0aW9ucyBhYm91dCB3aGF0IGtpbmQgb2YgZHJ1Z3MgSSBjb3VsZCBnZXQgbXkgaGFuZHMgb24uIEhlIGtub3dzIHRoYXQgSSB3YXMgYXJvdW5kIHR3ZWFrZXJzIG15IHdob2xlIGxpZmUsIGFuZCB0aGF0IEkgY2FuIGdldCBoaW0gYW55dGhpbmcsIGV2ZW4gdGhvdWdoIEkgZG9uIHVzZS9mdWNraW5nIGhhdGUgaGFyZCBkcnVncy4gSSBsZXQgaGltIGtub3cgdGhhdCBJIHdhc24gY29tZm9ydGFibGUgbWVldGluZyB0aG9zZSBwZW9wbGUgZm9yIGhpbSBhbmQgdGhhdCBJIGRpZG4gc3VwcG9ydCBoaXMgaW5zaXN0ZW5jZSB3aXRoIGV4cGVyaW1lbnRpbmcgd2l0aCBoYXJkIGRydWdzLiBIZSB0b29rIGl0IGJldHRlciB0aGFuIEkgdGhvdWdodCBhbmQgc2VlbWVkIHRvIGxldCBpdCBnby4gSSBmb3VuZCBoaW0gZ29pbmcgdGhyb3VnaCBteSBtb3RoZXIgbWVkaWNpbmUgY2FiaW5ldCBsYXRlIHRoYXQgbmlnaHQuIEhhdmVuIHNwb2tlbiB0byBoaW0gc2luY2UgSSBraWNrZWQgaGltIG91dC4gSXQgYmVlbiB5ZWFycy4gSSBzYXcgaGltIGF0IGEgY29uY2VydCBiYWNrIGluIFNlcHRlbWJlciAyMDE4LCBidXQgSSBkaWRuIGNhcmUgdG8gc2F5IGFueXRoaW5nIHRvIGhpbS4gSGUgZGlkbiBzZWUgbWUuCllvdSBzaG91bGQgaGF2ZSByZXBvcnRlZCBoaW0sIGJlY2F1c2Ugd2hhdCBoZSBkaWQgdGVsbGluZyB5b3UgdG8gY29tZSBpbnRvIGhpcyBvZmZpY2UgYW5kIHF1ZXN0aW9uaW5nIHlvdSBhYm91dCB0aGluZ3MgdGhhdCBoYWQgbm90aGluZyB0byBkbyB3aXRoIHlvdXIgY2xhc3MgYXQgYWxsIHdhcyB2ZXJ5IGluYXBwcm9wcmlhdGUuIFRoYXQgbm90IHdoYXQgYSBwcm9mZXNzb3IgaXMgc3VwcG9zZWQgdG8gZG8uIEFuZCwgeWVzLCB5b3UgYXJlIHdlbGwgd2l0aGluIHlvdXIgcmlnaHRzIHRvIHJlcG9ydCB3aGF0IGhlIGRpZCBJIGJldCB5b3Ugbm90IHRoZSBmaXJzdCBzdHVkZW50IGhlIHB1bGxlZCB0aGF0IG5vbnNlbnNlIG9uLiAKTW1lIEJyaWdpdHRlIEJhcmdlcy4gSmUgc3VpcyBzdXJwcmlzZSBxdSdvbiBwbGFjZSBsYSBkaXNjdXNzaW9uIHN1ciBsZSB0ZXJyYWluIGRlIGwnZ2FsaXQgZGVzIGRyb2l0cy4gSWwgeSBhIGRldXggc2V4ZXMgZGlmZnJlbnRzLCBjb21wbG1lbnRhaXJlcywgcXVpIGRldnJhaWVudCBhdm9pciBkZXMgZHJvaXRzIGdhdXguIApEbyB0aGUgQnJva2VuIFNob3JlIGludHJvIHNjZW5hcmlvIHRvIHVubG9jayB0aGUgc3R1ZmYgdGhlcmUgYW5kIG9uY2UgeW91IGhhdmUgQUsyNSB5b3UgY2FuIHVubG9jayAyNiB0aGVyZSBhbmQgdGhlbiBjb250aW51ZSBmdXJ0aGVyIHRvIEFLNDAuCkluIHRoaXMgcG9ydGlvbiBvZiBvdXIgaW50ZXJ2aWV3LCBaaWpkZXJ2ZWxkIGRldGFpbHMgaG93IHRoZSBpZGVhIG9mICJFbW90aW9uQUkiIGNhbWUgaW50byBiZWluZyBhbmQgdGhlIHRyYW5zZm9ybWF0aXZlIHJvbGUgaXQgaGFzIHBsYXllZCBmb3IgQWZmZWN0aXZhLi4gClRoYXQgaXMgbXVjaCBlYXNpZXIgdG8gZG8gdGhhbiBpdCBtaWdodCBzb3VuZCEgQW5kIGluIGZhY3QgeW91IGhhdmUgZG9uZSBpdCB0byB5b3Vyc2VsZiBldmVyeSBkYXkgb2YgeW91ciBsaWZlLCBhbmQgeW91ciBnaXJsZnJpZW5kIC8gc2lnbmlmaWNhbnQgb3RoZXIgaGFzIHByb2JhYmx5IGRvbmUgdGhhdCBmb3IgeW91IGEgZmV3IHRpbWVzLiAKSXQncyBub3QgZ2xhbW9yb3VzLCBidXQgMTMxIGV2ZW50cyBpbiBvbmUgeWVhciByZXF1aXJlcyBwcm9wZXIgcGxhbm5pbmcuLiAKUGFzcyBiZXRzIGFyZSBhbHdheXMgbW9yZSBsaWtlbHkuIApXZSBmaXJtbHkgc3RhbmQgYnkgdGhlc2UgdmFsdWVzIHdpdGggb3VyIG5ldyBhbmQgY29udGludWVkIGNvbW1pdG1lbnRzIHRvIHRoZSBXb21lbidzIEVtcG93ZXJtZW50IFByaW5jaXBsZXMgYW5kIHRoZSBTdXN0YWluYWJsZSBTdG9jayBFeGNoYW5nZSBJbml0aWF0aXZlLCIgc2FpZCBKb3MgU2NobWl0dCwgUHJlc2lkZW50IGFuZCBDRU8sIE5FTy4gIldlIHVuZGVyc3RhbmQgdGhhdCBvdXIgcm9sZSBhcyBhIHNlbmlvciBzdG9jayBleGNoYW5nZSBpcyB0byBwYXJ0bmVyIHdpdGggcHVibGljIGNvbXBhbmllcyBhbmQgZnVuZCBwcm92aWRlcnMgYXMgdGhleSBhY2hpZXZlIGdyZWF0IHRoaW5ncywgd2hpY2ggaXMgd2h5IHdlIGFyZSBwcm91ZCB0byBzdXBwb3J0IGdlbmRlciBmb2N1c2VkIGludmVzdG1lbnQgcHJvZHVjdHMgb24gb3VyIGV4Y2hhbmdlIGFuZCBlbmNvdXJhZ2UgTkVPIGxpc3RlZCBjb21wYW5pZXMgdG8gZW1icmFjZSBkaXZlcnNpdHkgYXQgdGhlaXIgYm9hcmQgYW5kIGV4ZWN1dGl2ZSBsZXZlbHMuIi4gClBlbm5zeWx2YW5pYSBiZWNhbWUgdGhlIGZvdXJ0aCBzdGF0ZSB0byBsZWdhbGl6ZSBvbmxpbmUgY2FzaW5vIGdhbWJsaW5nIGluIDIwMTcuIApTdXJlLCBhIHBva2VyIGJvdCBtYXkgbm90IHB1dCBvbiBhIHRpbHQsIGJ1dCBuZWl0aGVyIGNhbiB0aGV5IHNwb3QgYSBibHVmZi4gSXQgcHV0cyBhIGxhcmdlIHF1ZXN0aW9uIG1hcmsgb24gdGhlIGJlbmVmaXRzIG9mIGEgcG9rZXIgYm90IHRvIG9uZSdzIGdhbWUuIApUbDtkcjogSXQgdmFyaWVzIHdpZGVseSBieSByZWdpb24gYW5kIHBlcnNvbmFsIGhvdXNlaG9sZC4gSXQgY29tbW9uIGZvciBwZW9wbGUgZW50ZXJpbmcgYSBob3VzZSB0byBzaW1wbHkgYXNrIGlmIHRoZXkgc2hvdWxkIHRha2UgdGhlaXIgc2hvZXMgb2ZmLCBhbmQganVzdCBnbyBmcm9tIHRoZXJlLgpBcyBhIGNvbnZlcnNpb24gcmF0ZSA4ODhTcG9ydCB1c2VzIHRoZSBjdXJyZW50IHJhdGUgb2YgdGhlIGV4Y2hhbmdlIHdpdGggbm8gYWRkaXRpb25hbCBzdXJjaGFyZ2UuIApUaGlzIGlzIGFnYWluc3QgUmVkZGl0J3MgcnVsZXMsIGFuZCBpcyBub3QgYWxsb3dlZCBoZXJlIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLiBUaGlzIGluY2x1ZGVzIGRvaW5nIHRoaW5ncyBsaWtlIHVzaW5nIGEgZGlmZmVyZW50IGFjY291bnQsIG9yIFBNaW5nIHBlb3BsZSB0byBhdm9pZCBwb3N0aW5nIG9uIHRoZSBzdWJyZWRkaXQuIApUbyBtZSB0aGUgbW9zdCBpbnRlcmVzdGluZyB0aGluZyB0byBjb21lIG91dCBLb3JlYSB3YXMgdGhlIE1ha2Vtb2RlbCBzZXJpZXMuIEkgaGF2ZW4gcmVzZWFyY2hlZCBpdCBtdWNoLCBidXQgSSBzdXNwZWN0IGl0IHdhcyBtZWFudCB0byBiZSBzb21ldGhpbmcgdG8gYmUgdXNlZCBmb3IgdGhlIGFsbCB0aGUgYW5tYSBqb2ludHMgKHNleCBwYXJsb3JzIGRpc2d1aXNlZCBhcyBtYXNzYWdlIHBhcmxvcnMpIG9yIGd1bm1hIGpvaW50cyAoc2FtZSBidXQgbm8gc2V4KSBhbmQgYmUgY2Vuc29yZWQgb3IgYmx1cnJlZCBvdXQsIGJ1dCB0aGUgcGhvdG9ncmFwaGVyIGNvbGxlY3Rpb24gZ290IGxlYWtlZC4gCkFzIGEgbGliZXJ0YXJpYW4gSSB0b3RhbGx5IGFncmVlIHdpdGggQ2FuZGljZSBPd2VucyBJIHRoaW5rIEhpdGxlciB3YXMgYSBncmVhdCBwZXJzb24gaGUgd2FzIHRvdGFsbHkgZmluZS4gV2hlcmUgaGUgbWVzc2VkIHVwIHdhcyB0cnlpbmcgdG8gaW1wb3NlIGhpcyByZWdpbWUgb24gb3RoZXJzLiBTZWUgaGUgd2Fzbid0IGEgTmF0aW9uYWxpc3QgaGUgd2FzIGEgZ2xvYmFsaXN0LiAKIlRoZSBmYWN0cyBvZiB0aGUgY3Jpc2lzIG92ZXIgdGhlIGRlYnQgY2VpbGluZyBhcmVuJ3QgY29tcGxpY2F0ZWQuIFJlcHVibGljYW5zIGhhdmUsIGluIGVmZmVjdCwgdGFrZW4gQW1lcmljYSBob3N0YWdlLCB0aHJlYXRlbmluZyB0byB1bmRlcm1pbmUgdGhlIGVjb25vbXkgYW5kIGRpc3J1cHQgdGhlIGVzc2VudGlhbCBidXNpbmVzcyBvZiBnb3Zlcm5tZW50IHVubGVzcyB0aGV5IGdldCBwb2xpY3kgY29uY2Vzc2lvbnMgdGhleSB3b3VsZCBuZXZlciBoYXZlIGJlZW4gYWJsZSB0byBlbmFjdCB0aHJvdWdoIGxlZ2lzbGF0aW9uLiBBbmQgRGVtb2NyYXRzICAgd2hvIHdvdWxkIGhhdmUgYmVlbiBqdXN0aWZpZWQgaW4gcmVqZWN0aW5nIHRoaXMgZXh0b3J0aW9uIGFsdG9nZXRoZXIgICBoYXZlLCBpbiBmYWN0LCBnb25lIGEgbG9uZyB3YXkgdG93YXJkIG1lZXRpbmcgdGhvc2UgUmVwdWJsaWNhbiBkZW1hbmRzLiIuIApSb3NzIGhhcyBsb3N0ICQ3ODAsMDAwIG9uIHRoZSBwb2tpZXMsIGFuZCBldmVyeXRoaW5nIGhlIGNhcmVkIGFib3V0LCBidXQgZXZlbiBhZnRlciAyMSB5ZWFycyBpbiByZWNvdmVyeSwgdGhpcyB1bmZhdGhvbWFibGUgb2JzZXNzaW9uIHN0aWxsIGhhcyBhIGhvbGQgb24gaGltLiAiWW91IGtub3cgaG93IHRyaWdnZXJpbmcgaXQgaXMgdG8gaGVhciB0aGUgbm9pc2U/IiBhc2tzIHRoZSA1NyB5ZWFyIG9sZC4gClRlbmNlbnQgdG8gc2h1dCBkb3duIHBva2VyIGdhbWUgYW1pZCBDaGluYQpJIGp1c3QgZ29pbmcgdG8gcG9zdCBteSBwZXJzcGVjdGl2ZSBoZXJlIGZyb20gd2hlbiB0aGlzIHBhcnRpY3VsYXIgcnVsZSB3YXMgbWFkZSBhbmQgc29tZSBpbnNpZ2h0IGludG8gb3VyIHByYWN0aWNlLiAKV2UgYXJlIGFibGUgdG8gYnJpbmcgc29tZSBlbGVtZW50IG9mIHJlc29sdXRpb24gdG8gdGhlIGZhbWlsaWVzIGFuZCBhIGNvbW11bml0eSB0aGF0IGV4cGVyaWVuY2VkIGEgaG9ycmlmaWMgY3JpbWUgaW4gMjAxOCwgc2FpZCBPUFAgU3VwdC4gQ2F0aGVyaW5lIFllYW5kbGUgU2xhdGVyLCB3aGlsZSBhIGxhcmdlIGNyb3dkIG9mIGZhbWlseSBtZW1iZXJzIGFuZCB0aGUgd2lkZXIgU2l4IE5hdGlvbnMgY29tbXVuaXR5IGxvb2tlZCBvbi4KV2VudCBpbiBhcyBhbiBlbWVyZ2VuY3ksIHRoZSBkb2MgZXhhbWluZWQgYW5kIHJ1c2hlZCBtZSB0byBhbiBPUiBzYXlpbmcgaSBoYWQgbGl2aW5nIG1pY3JvIG9yZ2FuaXNtcyBpbnNpZGUgbXkgZXllLiAKVGhleSBkZWZpbml0ZWx5IG5vdCBwZXJmZWN0LCBidXQgbGlnaHQgeWVhcnMgYXdheSBmcm9tIHdoZW4gSSBzdGFydGVkLiAKU2hlaWtoIFJhc2hpZCB3YXMgaGVhcmQgc2F5aW5nIGJlZm9yZSBUViBjYW1lcmFzIHRoYXQgdGhleSB3b3VsZCBub3QgdGFsayB0byB0aGUgZ292ZXJubWVudCB1bnRpbCBkb2cgd2FzIHRha2VuIG91dCBvZiB0aGUgd2VsbC4gSW1yYW4gS2hhbiBjYWxsZWQgS2h1cnNoZWVkIFNoYWgsIHdobyBpcyBrbm93biB0byBiZSB0aGUgbW9zdCBwb2xpdGUgbGVhZGVyIG9mIHRoZSBvcHBvc2l0aW9uIGV2ZXIsIHBlcnNvbmFsIHNlY3JldGFyeSBvZiBOYXdheiBTaGFyaWYuIApBcyBJIHN0YXRlZCwgYm90aCBteSBOb3J0aCBhbmQgU291dGggQnJpZGdlIENvbmZpZ3VyYXRpb25zIGFyZW4gaGVscGZ1bCwgYW5kIG5hdmlnYXRpbmcgdGhyb3VnaCBzb21lIEFNRCBQQlMgKG9yIHNvbWV0aGluZyBsaWtlIHRoYXQpIGZvbGRlcnMgc3RhcnRzIHRvIGxvb2sgaGVscGZ1bCwgYnV0IHVsdGltYXRlbHkgZG9lc24gc2VlbSB0byBjaGFuZ2UgYW55dGhpbmcuLiAKQ2FuIEkgcGxlYXNlIGhhdmUgYWR2aWNlL3JlY29tbWVuZGF0aW9ucyBvbiBidXlpbmcgYSBwb3J0YWJsZSBtZWRpYSBwbGF5ZXI/IChwcmVmZXJhYmx5IG5vbiAgbmFtZSBicmFuZCkuIE15IG1haW4gdXNhZ2VzIHdpbGwgYmUgd2F0Y2hpbmcgcG9rZXIgdHJhaW5pbmcgdmlkZW9zIChhdmFpbGFibGUgaW4gbXA0IGFuZCBXTVYgZm9ybWF0cyksIGFuZCByZXZpZXdpbmcgcG9rZXIgaGFuZCBoaXN0b3JpZXMgd2hpY2ggYXJlIGluIGEgdHh0IGZvcm1hdC4gCkdldCBoZWxwIGZvciB5b3VyIHBhcnRuZXIgaWYgc2hlIHVzZXMgaWxsZWdhbCBkcnVncy4gCkl0IGludm9sdmVzIGJlaW5nIGhpZ2hseSBzZWxlY3RpdmUgd2l0aCB0aGUgc3RhcnRpbmcgaGFuZCBzZWxlY3Rpb24gYW5kIGJldHRpbmcgYW5kIHJhaXNpbmcgdmVyeSBhZ2dyZXNzaXZlbHkuIChGdWxsIEFuc3dlcikuIApCdXQgVHJ1bXAncyBlYXJseSBtb3JuaW5nIHR3ZWV0c3Rvcm0gYWdhaW4gcmFpc2VkIHRoZSBzcGVjdGVyIHRoYXQgaGUgY291bGQgdHJ5IHRvIG1vcmUgZGlyZWN0bHkgYnJpbmcgc3BlY2lhbCBjb3Vuc2VsIFJvYmVydCBNdWVsbGVyJ3MgUnVzc2lhIFRydW1wIGVsZWN0aW9uIGNvbGx1c2lvbiBwcm9iZSB0byBhIHByZW1hdHVyZSBlbmQuIEFuZCBpdCByZXZpdmVkIHRoZSBpZGVhIHRoYXQgdGhlIHByZXNpZGVudCdzIHR3ZWV0cyB0aGVtc2VsdmVzIG1pZ2h0IGJlIHVzZWQgYXMgZXZpZGVuY2UgdGhhdCBoZSBpcyBhdHRlbXB0aW5nIHRvIG9ic3RydWN0IGp1c3RpY2UuClRoZSB0YWxrcyB3ZXJlIGZha2luZyBwbGFjZSBhdCBDbGV2ZWxhbmQsIE8uIE5lZ290aWF0b3JzIHdlcmUgaW4gdmlydHVhbGx5IGNvbnRpbnVvdXMgc2Vzc2lvbiBhbGwhIGFmdGVybm9vbiBhbmQgZXZlbmluZyBTdW5kYXkgYW5kIGogdGhlIGJhcmdhaW5pbmcgY29udGludWVkIHBhc3QgSSBtaWRuaWdodC4gClN1ciBsIGRlcyByZXVzLCBvbiBsYWlzc2UgY3JvaXJlIHF1ZSBsZSBtYXNzYWdlIGEgdCBkb25uICBHYXRpbmVhdSwgYWxvcnMgcXUgYSBldSBsaWV1ICBPdHRhd2EuIApZb3VyIFBJIHdpbGwgcHJvYmFibHkgcmVjb21tZW5kIGxvd2VyIHRpZXIgam91cm5hbHMgYW5kIHlvdXIgd29yayB3aWxsIG5vdCBiZSB1c2VkIGluIHRhbGtzIG9yIGNyb3NzIHJlZmVyZW5jZWQgb2Z0ZW4sIG1ha2luZyBpdCBsb29rIGxpa2UgeW91ciB3b3JrIHdhcyBzdWIgcGFyIHJhdGhlciB0aGFuIHlvdXIgZW52aXJvbm1lbnQuIFdlbGNvbWUgdG8gdGhlIHJ1dGhsZXNzIHdvcmxkIG9mIGFjYWRlbWlhLiAKVGhleSBkcmVzcyBsaWtlIGNvcHMgYW5kIHJlbHkgb24gdGhlIGZhY3QgdGhhdCBtb3N0IHBlb3BsZSBkb24ga25vdyB0aGV5IGFyZSBub3QgY29wcy4uIApSZWFsbHkgY29ubmVjdCB3aXRoIGhlciBhbmQgcmVhc3N1cmUgaGVyLiAKR29ldHosIHVuZSBub3V2ZWxsZSBicmlnYWRlIHNwY2lhbGUgZW4gY2l2aWwgY29udHJlIGxlcyB2ZW50ZXMgIGxhIHNhdXZldHRlIGV0IGxlcyBjb250cmVmYW9ucyAoQlNDKSBhIHZ1IGxlIGpvdXIgbHVuZGkgNiBub3ZlbWJyZSBhdmVjIDE4IHBvbGljaWVycyBwcnNlbnRzIHRvdXMgbGVzIGpvdXJzIGRlIDEwaCAgMjFoIGVzc2VudGllbGxlbWVudCBzdXIgbGEgem9uZSBCYXJicyBDaHRlYXUgcm91Z2UuIEMnZXN0IHVuZSBzdHJhdGdpZSBwdXJlbWVudCBycHJlc3NpdmUgYXZlYyBzYWlzaWUgZGVzdHJ1Y3Rpb24uIApPciB0aGV5IGNvdWxkIHBsYXkgYmFyIHBva2VyIGZvciB0aGF0IG1hdHRlci5JdCB0aGUgb3ZlcnJpZGluZyBuYXJyYXRpdmUgYmVjYXVzZSB3ZSBjYW4gc2VlIHRoYXQgdGhlIG1ham9yaXR5IG9mIHBlb3BsZSBub3QgZ2V0dGluZyB2YWNjaW5hdGVkIGFyZSB3aGl0ZSwgbWlkZGxlIGNsYXNzIENhbmFkaWFucy4gCk92ZXJ2aWV3IGZvciBzYXd5ZXJwaDAKV2VubiB3aXIgZGllc2Ugb2RlciBqZW5lIEFyem5laW1pdHRlbCB6dXIgSGVpbHVuZyB1bnNlcmVyIEtyYW5raGVpdGVuIGVpbm5laG1lbiwgbWFjaGVuIHdpciB1bnMgcmVjaHQgc2VsdGVuIEdlZGFua2VuIGRhcmJlciwgd29yYXVzIHNpZSBiZXN0ZWhlbiwgd2FzIHNpZSBlbnRoYWx0ZW4sIHdpZSBzaWUgaGVyZ2VzdGVsbHQgd2VyZGVuLiBEaWUgcGhhcm1hemV1dGlzY2hlIEluZHVzdHJpZSBpc3QgZWluIHJpZXNpZ2VzLCBhdWYgVW1zYXR6IGF1c2dlcmljaHRldGVzIEdlc2NoZnQuIApUaGVyZSBjb3VsZCBiZSBhIHNraW5ueSBvciBvdmVyd2VpZ2h0IFN1cGVybWFuIGFuZCBJIHdlbGNvbWUgdGhlIGNoYW5nZSwgYnV0IGl0IHByb2JhYmx5IGVuZCB1cCBiZWluZyBhIGRpZmZlcmVudCB0YWtlIG9uIHRoZSBjaGFyYWN0ZXIgYWx0b2dldGhlci4KQWxsIGF2YWlsYWJsZSBvbnlvdXR1YmUuIApOb3QgZ29ubmEgbGllLCB0aGlzIGNvbW1lbnQgd2FzIHJlYWxseSByZWFzc3VyaW5nLiBJIHdhdGNoIHBvcm4gc29tZXRpbWVzIGJ1dCBJJ20gdW5jb21mb3J0YWJsZSB3aXRoIGl0IGFuZCBJIHVzdWFsbHkgZmVlbCBncm9zcyBhZnRlcndhcmQuIApJIGJlZW4gc2VlaW5nIGZseWVycyBhbmQgcG9zdGVycyBhcm91bmQgZm9yIG9uZSBzdWNoIGV2ZW50IHRoYXQgYXBwZWFscyBzcGVjaWZpY2FsbHkgdG8gZm9yZWlnbiBzdHVkZW50cyB0byBhdHRlbmQgYnV0IGRvZXNuIG1lbnRpb24gaXRzIG9idmlvdXMgY3VsdCBiYXNlZCBwdXJwb3NlLiAKTGl2ZSB5b3VyIGRyZWFtLiBBbGwgdGhlIGRyYWdvbnMgY2VsZWJyaXR5LCBob3dldmVyLCB0aGUgYmVzdCBxdW90ZSBvZiB0aGUgZGF5IHdlbnQgdG8gTWFyY3VzIERhbmllbHMsIGZvdW5kZXIgb2YgVG9yb250byBiYXNlZCBhY2NlbGVyYXRvciBFeHRyZW1lIFN0YXJ0dXBzIGFuZCB0aGUgb3ZlcnNoYWRvd2VkIGZvdXJ0aCBtZW1iZXIgb2YgdGhlIHBhbmVsLiBZb3VuZ2VyIGFuZCBsZXNzIGdsaWIgdGhhbiB0aGUgZHJhZ29ucywgaGUgZGlkbiBnZXQgbWFueSB3b3JkcyBpbiBlZGdld2lzZSwgYnV0IGhlIGtub3dzIGhvdyB0byBoaXQgdGhlbSBvdXQgb2YgdGhlIHBhcmsuIApEZXNwaXRlIHRoaXMsIEkndmUgb2Z0ZW4gY29tZSBhY3Jvc3MgaW52ZXN0aWdhdG9ycyBpbiBtZWRpY2FsIHJlc2VhcmNoIHdobyd2ZSBhcmJpdHJhcmlseSBsdW1wZWQgZXZlcnlvbmUgYWdlZCA2NSBhbmQgYWJvdmUgaW4gb25lIGdyb3VwLCBpbnN0ZWFkIG9mIHVzaW5nIHRoZSBzYW1lIHNlcXVlbnRpYWwgcGVyaW9kIGFzIHlvdW5nZXIgYWdlIGdyb3Vwcy4gCkkgbmV2ZXIgc2F3IGhlciBsZWF2ZSwganVzdCBhc3N1bWVkIHNoZSB3YXMgaW4gdGhlIGxhZGllcyByb29tIHdoZW4gSSBkaWRuIHNlZSBoZXIgdGhlcmUgYW55bW9yZSB1bnRpbCBpdCBiZWNhbWUgYXBwYXJlbnQuIApNZWFzdXJlbWVudHM6IFRoZSBwcmltYXJ5IG91dGNvbWUgd2FzIHBhcnRpY2lwYW50IHJhdGVkIHBhaW4sIG1lYXN1cmVkIGF0IDIsIDQsIDgsIDEyLCAyNiwgYW5kIDUyIHdlZWtzIGFmdGVyIHJhbmRvbWl6YXRpb24uIFNlY29uZGFyeSBtZWFzdXJlcyB3ZXJlIHNlbGYgcmVwb3J0ZWQgZGlzYWJpbGl0eSwgZ2xvYmFsIGltcHJvdmVtZW50LCBtZWRpY2F0aW9uIHVzZSwgc2F0aXNmYWN0aW9uLCBnZW5lcmFsIGhlYWx0aCBzdGF0dXMgKFNob3J0IEZvcm0gMzYgSGVhbHRoIFN1cnZleSBwaHlzaWNhbCBhbmQgbWVudGFsIGhlYWx0aCBzY2FsZXMpLCBhbmQgYWR2ZXJzZSBldmVudHMuIEJsaW5kZWQgZXZhbHVhdGlvbiBvZiBuZWNrIG1vdGlvbiB3YXMgcGVyZm9ybWVkIGF0IDQgYW5kIDEyIHdlZWtzLi4gCkkgd2FudCB0byBlbmQgdGhpcyBieSBzYXlpbmcgSSBkbyBub3QgaGF2ZSBhIGNvbGxlZ2UgZWR1Y2F0aW9uLiAKVGhleSBoYXZlIGEgdG93ZWwgY2FyZCBzeXN0ZW0gdGhlcmUgYnV0IHlvdSBjYW4gdGFrZSB0d28gdG93ZWxzIGVhY2guIFRoZSB3YWxrIHRvIHRoZSBib2F0IGZvciBSZW5haXNzYW5jZSBJc2xhbmQgaXMgbGl0ZXJhbGx5IGZpdmUgbWludXRlcyBvciBsZXNzLiAKUG9raWVzIHRvIGJlIHNldCB1cCBhdCBUaGUgTGlua3MKVGhhdCBzaGUgd2FzIGFibGUgdG8gc2hhcmUgdGhhdCBzcGVjaWFsIGJvbmQgZXZlbiBmb3IgYSBzaG9ydCB3aGlsZSB3aXRoIEFkYW0uIFRvIFRoZSBQaWFua28gSG93YXJ0aCBGYW1pbGllcyB5b3UgYXJlIGluIG15IHRob3VnaHRzIGFuZCBwcmF5ZXJzLiAKSXQgaXMgYSBnYW1lIHdoZXJlIHBsYXllcnMgaGF2ZSBvbmUgb3IgbW9yZSBmYWNlIHVwIGNhcmRzLiAKQnV0IHRoZSBmb2N1cyBzaG91bGQganVzdCBiZSB0aGUgZmFjdCB0aGF0IGNlcnRhaW4gcGVvcGxlIGhhdmUgc3VjaCBzaWNrZW5pbmcgYW1vdW50cyBvZiB3ZWFsdGgsIGl0IGlzIHdoeSB0aGV5IGhhdmUgdGhhdCBpbiB0aGVpciBmaXJzdCBwbGFjZS4gCkhvdyBkbyB5b3Uga25vdyBob3cgbXVjaCB0byBiZXQKU2hlcyBpbiByZXNpZGVuY3kgc28gaSBvbmx5IGdldCB0byBwbGF5IHdoZW4gc2hlIGlzIG9uIGNhbGwgYW5kIGhlciBjYWxsIHNjaGVkdWxlIGZvciB0aGUgbmV4dCBmZXcgbW9udGhzIGlzIHByZXR0eSBoZWF2eS4gU28gbXkgcmVzb2x1dGlvbiBpcyB0byBoaXQgdGhlIGZlbHQgYXMgbXVjaCBhcyBJIGNhbiB3aGlsZSBzaGUgaXMgYXQgd29yaywgd2luIHRoZSBsYXN0IGZldyB0aG91c2FuZCBJIG5lZWQgdG8gZ2V0IGhlciB0aGUgcmluZyBzaGUgZGVzZXJ2ZXMsIGFuZCB0aGVuIHBvcCB0aGUgcXVlc3Rpb24gaW4gYSBmZXcgbW9udGhzLi4gCldoZW4gSSB3ZW50IHRvIHRoZSBFUiBvbiBXZWRuZXNkYXkgZm9yIGEgc3VzcGVjdGVkIGJsb29kIGNsb3QgSSBicm9rZSBkb3duIGJlY2F1c2UgdGhleSBkaWRuIHRha2UgbXkgc3VyZ2VyeSBwYWluIHNlcmlvdXNseSBhbmQgbGVmdCBtZSBpbiB0aGUgcm9vbSBmb3IgNiBob3VycyB3aXRob3V0IGFueSBwYWluIG1lZHMgYW5kIGludGVycm9nYXRlZCBtZSBvbiB3aHkgSSB3YXMgb24gd2hhdCBJIHdhcyBvbi4gCkhlIGhhc24gZG9uZSBhbnkgb2YgdGhvc2UsIHNvIHlvdSBtaWdodCBhc3N1bWUgaGUgaGFwcHkgd2l0aCBpdCBvcGVyYXRpbmcgYXMgaXQgaXMuIApPbiAsIHlvdSBoYXZlIGFycml2ZWQgYXQgdGhlIHJpZ2h0IHBsYWNlLgpUb28gbXVjaCBGaXJlIGltcGxpZXMgdGhlIGhvdCB0ZW1wZXIgYW5kIG5vIHBhdGllbnQuIApUaGUgc3RhdGVtZW50IHNheXMgTnVuYmVyZydzIGFsbGVnZWQgc291cmNlIHdhcyBCcnVubyBXdSwgd2hvIHRoZSBKb3VybmFsIGRlc2NyaWJlZCBhcyBhIENoaW5lc2UgQW1lcmljYW4gbWVkaWEgdHljb29uIHdob20gR3VvIGhhcyBhY2N1c2VkIG9mIGJlaW5nIGEgQ2hpbmVzZSBnb3Zlcm5tZW50IHNweS4uIApJbnN0ZWFkIGl0IGxhdW5jaGVzIHN0cmFpZ2h0IGludG8gdGhlIHN0b3J5LCB3aXRoIG9ubHkgYSBicmllZiBleHBsYW5hdGlvbiBvZiB0aGUgc2V0dGluZyB0byBpbmZvcm0gdGhlIHJlYWRlcnMgdGhhdCBpbiAyNDA4IHRoZSBLYWxrYXJzIGhhZCBiZWVuIHB1c2hlZCB0byBBbWVyaWNhJ3Mgd2VzdCBjb2FzdCBieSBKdWxpYW4gMTh0aC4uIApUaGUgUnVzc2lhbnMgZXZlciBzYWlkIGlzIHRoZXkgd291bGQgdXRpbGl6ZSBvdGhlciBpZGVvbG9naWVzICAgbGlrZSBuZW9saWJlcmFsIGVjb25vbWljcyBhbmQgQ2hyaXN0aWFuIE9ydGhvZG94eSAgIHRvIG1vdmUgdGhlIHBlb3BsZSB0byBkbyB0aGUgc3RhdGUgYmlkZGluZy4uIApEZWZpbml0ZWx5LCB3ZSd2ZSBzZWVuIHRoYXQgcG9rZXIgcnVsZXMgY2hhbmdlcyBhIGJpdCBkZXBlbmRpbmcgb24gdGhlIGdhbWUgb2YgcG9rZXIgYmVpbmcgcGxheWVkLiBOb3cgdGhhdCB3ZSd2ZSBsZWFybmVkIHRoZSBkaWZmZXJlbnQgcG9rZXIgcnVsZXMsIHBsYXlpbmcgaXQgbGlrZSB0aGUgcHJvcyB3b3VsZCBiZSBhcyBlYXN5IGFzIHBpZS4KUGxlYXNlIGRvbiBmZWVsIGxpa2UgeW91IGFza2luZyBzb21ldGhpbmcgdW51c3VhbCBieSBhc2tpbmcgZm9yIG1vcmUgb3IgbGVzcyBwcmVzc3VyZSBzb21ld2hlcmUsIG1vcmUgdGltZSBvbiBhIHNwb3QsIG9yIGV2ZW4gY2hhbmdlIGluIHRoZSB0YWJsZSB3YXJtZXIgdGVtcGVyYXR1cmUuIEV2ZXJ5b25lIGlzIFNPIGRpZmZlcmVudCBpbiBwcmVmZXJlbmNlcywgdGhhdCBldmVuIGlmIHdlIGFyZSBnaXZpbmcgYSBnb2QgbGlrZSBtYXNzYWdlLCB3ZSB3b24gbmVjZXNzYXJpbHkgYmUgZG9pbmcgZXhhY3RseSB3aGF0IHlvdSBuZWVkIGluIGV2ZXJ5IGFyZWEuLiAKSSBhZ3JlZSB3aXRoIGV2ZXJ5dGhpbmcgeW91IHNhaWQuIFlvdSB3cm90ZSB0aGF0IHRoZXkgInR3byBzaWRlcyBvZiB0aGUgc2FtZSBjb2luIiwgd2hpY2ggZ2VuZXJhbGx5IG1lYW5zICJ0d28gZGlmZmVyZW50IHRoaW5ncyB0aGF0IGFyZSBmdW5jdGlvbmFsbHkgdmVyeSBzaW1pbGFyIi4gCk9tZWdhIDMgZmF0dHkgYWNpZHMgaW5oaWJpdCBhZGhlc2lvbiBtb2xlY3VsZXMgdG8gbG93ZXIgaGVhcnQgZGlzZWFzZSByaXNrClNvIGFzIEkgZ3JldyB1cCwgSSdkIGxlYXJuZWQgdGhhdCBSZW5lZ2Ugd2FzIGFib3V0IGFzIGdvb2QgYXMgYW55IG90aGVyIGZhbWlseS4gU2V2ZXJhbCBwZW9wbGUgbGl2ZWQgaW4gUmVuZWdlIGFuZCB2ZXJ5IGZldyBhY3R1YWxseSBoYWQgYSBsaWZlIG91dHNpZGUgb2YgdGhlIG9yZ2FuaXphdGlvbi4gU2luY2UgSSBuZXZlciByZWFsbHkgaGFkIGZhbWlseSwgSSBzdHJ1Z2dsZWQgdG8gYmVjb21lIHRoZSBiZXN0IHRoaW5nIFJlbmVnZSBoYWQgYW5kIHRocm91Z2ggdGhlIHllYXJzIEkgaGFkIHRyYWluZWQgaGFyZCwgc3R1ZGllZCBsaWtlIHRoZXJlIHdhcyBubyB0b21vcnJvdyBhbmQgZm9jdXNlZCBldmVyeXRoaW5nIG9uIGJlY29taW5nIHRoZSBiZXN0Li4gCkluIHRoZSBlbmQsIEkganVzdCB0cmllZCB0byBtYWtlIGl0IGN1dGVzeSBsaWtlIEkgd291bGQgaGF2ZSBpZiBJIGJlZW4gb2xkZXIuIEkgc3VycHJpc2VkIHRoZW0gd2l0aCBhbiB1bHRyYXNvdW5kIHBob3RvIGF0IENocmlzdG1hcywgYW5kIHRoZXkgd2VyZSBib3RoIGV4Y2l0ZWQuIEluIHRoZSBlbmQsIGl0IHdvdW5kIHVwIGJlaW5nIGEgYmlnIGJsZXNzaW5nIGJlY2F1c2UgbXkgZmF0aGVyIGRpZWQgdW5leHBlY3RlZGx5IGp1c3QgYSBmZXcgeWVhcnMgbGF0ZXIuIElmIEkgaGFkbiBnb3R0ZW4gcHJlZ25hbnQsIGhlIHdvdWxkIG5ldmVyIGhhdmUga25vd24gYW55IG9mIGhpcyBncmFuZGNoaWxkcmVuLgpJIHdvcmsgaW4gYSBwaGFybWFjeS4gQ2FuIGNvbmZpcm0sIGFsbW9zdCBhbGwgdG9waWNhbHMgYXJlIHRoZSBjcmF6eSBzdHVwaWRlc3QgbW9zdCBleHBlbnNpdmUgdGhpbmdzIHdlIGhhdmUuIFBlb3BsZSBuZXZlciBiZWxpZXZlIG1lIHdoZW4gSSB0ZWxsIHRoZW0sIHllcywgdGhhdCB0aGUgcHJpY2UgZm9yIHRoZSBnZW5lcmljICh3aGljaCBwcmV0dHkgbXVjaCBhbGwgdGhlIGFjbmUgYW5kL29yIHJvc2FjZWEgdG9waWNhbHMgaGF2ZSBieSBub3csIG1pbnVzIGRpZmZlcmVudCBmb3JtcyBsaWtlIGxvdGlvbnMgb3IgZm9hbXMpLiAKVGhlIGZsb3AgaXMgbG93IGFuZCBJIHNrdWxrIG91dCB0aGUgZG9vci4gCjIuIE1vc3QgcGxheWVycyB0aXAgdGhlIGRlYWxlciB3aGVuIHRoZXkgd2luIGEgcG90LiBUaGlzIGlzIG5vdCByZXF1aXJlZCwgYnV0IGlmIHRoZSBkZWFsZXIgaXMgZG9pbmcgYSBjb21wZXRlbnQgam9iLCB5b3Ugc2hvdWxkIHRpcC4gRGVhbGVycyBhcmUgbGlrZSB3YWl0c3RhZmYgaW4gdGhhdCB0aGV5IG1ha2UgbW9zdCBvZiB0aGVpciBtb25leSBmcm9tIHRpcHMuIEEgc2FtcGxlIHBsYW4gd291bGQgYmUgdG8gdGlwIHRoZSBkZWFsZXIgLjUwIG9uIGF2ZXJhZ2Ugc2l6ZSBwb3RzIGFuZCBwb3NzaWJseSAkMS4wMCBvbiBsYXJnZXIgcG90cyBpZiB0aGUgZGVhbGVyIGlzIGRvaW5nIGEgZ29vZCBqb2IuIEFsc28sIHlvdSBjYW4gd2F0Y2ggd2hhdCB0aGUgb3RoZXIgcGxheWVycyBhcmUgdGlwcGluZyB0byBnZXQgYW4gaWRlYS4gUmVtZW1iZXIgdGhvdWdoIHRoYXQgZXZlcnkgZG9sbGFyIHRoYXQgZ29lcyB0byB0aGUgZGVhbGVyIGlzIHJlZHVjaW5nIHlvdXIgd2lubmluZ3MuIFlvdSBzaG91bGQgYmUgYWJsZSB0byBjb21lIHRvIGEgaGFwcHkgbWVkaXVtIHdpdGggZXhwZXJpZW5jZS4KVGhlcmUgYWxzbyBhIGxhcmdlIGZyYW1lIHdpdGggc29tZSBjbGFzc2ljIHBob3RvcyBvZiBib3hlciBNdWhhbW1hZCBBbGkgdGhhdCBHYWxsYWdoZXIgcHVyY2hhc2VkIGF0IGEgQ2FuYWRpZW5zIGdvbGYgdG91cm5hbWVudC4gR2FsbGFnaGVyIHNhaWQgdGhlIGZpcnN0IGJvb2sgaGUgcmVhZCBhcyBhIGtpZCB3YXMgYWJvdXQgQWxpIGxpZmUgYW5kIGl0IGhhZCBhIGJpZyBpbXBhY3Qgb24gaGltLgoxOTQ2IEFwcGFyZWwsIFRoaXMgYm91dGlxdWUgc3R5bGUgc2hvcCB3YXMgZGVzaWduZWQgZm9yIHRoZSBmYXNoaW9uIGZvcndhcmQgZ3Vlc3Qgd2l0aCBhIGZvY3VzIG9uIGFjY2Vzc29yaWVzLgpSZWQgbGVmdCBob21lIGF0IGFnZSAxMSwgZXZlbnR1YWxseSBzZXR0bGluZyBpbiBLaXJrbGFuZCB3aGVyZSBoZSBoYXMgbGl2ZWQgdW50aWwgaGlzIHBhc3NpbmcuIEhlIHdvcmtlZCBhY3Jvc3MgQ2FuYWRhIGluIGx1bWJlciBjYW1wcyBhbmQgd2l0aCByb2FkIGJ1aWxkaW5nIGNyZXdzLCBpbmNsdWRpbmcgYSBzdGludCBidWlsZGluZyB0aGUgQWxhc2thIEhpZ2h3YXksIGFuZCBtYW55IHllYXJzIGRyaXZpbmcgdHJ1Y2sgZm9yIEtva290b3cgYW5kIFROUi4gUmVkIHdhcyBhbiBhdmlkIHN1cHBvcnRlciBvZiBsb2NhbCBzcG9ydHMgaW5jbHVkaW5nIGhvY2tleSwgc29mdGJhbGwsIGJyb29tYmFsbCBhbmQgc25vb2tlci4gCjE2KSwgdGhleSB3ZXJlIHNpY2tlbmluZyB0byBIaW0uIE1hbnkgcGVvcGxlIGhhdmUgaW50ZXJwcmV0ZWQgdGhpcyBhcyBzYXlpbmcgdGhhdCBHb2Qgd2FudHMgdXMgZWl0aGVyIGhvdCwgb24gZmlyZSBhbmQgc2F2ZWQsIG9yIGNvbGQsIGxvc3QgYW5kIG9uIG91ciB3YXkgdG8gaGVsbC4gClRoZXNlIGFyZSBhbGwgcHJvcGVyIHJlYXNvbnMgYnV0IG5vdCBiZWNhdXNlIEkgYW0gZ29pbmcgYmFkbHkoc2ljKSwgSSdtIGdldHRpbmcgYmFkIGNhcmRzIHRoYXQgZGF5LCBiZWNhdXNlIEkndmUgbG9zdCBhIGNlcnRhaW4gYW1vdW50LCBvciBiZWNhdXNlIEkndmUgd29uIGEgY2VydGFpbiBhbW91bnQuIFRoaXMgaXMgc2ltcGx5IGluY29ycmVjdC4gVGhpcyBpcyBub3QgbXkgb3BpbmlvbiwgdGhpcyBpcyBzaW1wbHkgaW5jb3JyZWN0LiAKQSBsb3Qgb2YgcGVvcGxlIG1pc3MgaGlzIGNvb2tpbmcgYW5kIHRoaXMgaXMgYW5vdGhlciB3YXkgb2Ygc2F5aW5nIHdlbGNvbWUgYmFjayB0byB0aGUgY29tbXVuaXR5IGFuZCBhIG5pY2UgcmVhc29uIHRvIGdldCB0aGUgZmFtaWx5IG91dCBmb3Igc29tZXRoaW5nIGRpZmZlcmVudC4gCkRlcmVrc2FsZW0gICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KQWNjb3JkaW5nIHRvIEFtaXQgQnVybWFuLHZpY2UgY2hhaXJtYW4gb2YgRGFidXIgYW5kIGNvIGZvdW5kZXIgb2YgUFNMLCBoZSB3aWxsIGJlIHNwZW5kaW5nb3ZlciBScyAxMDAgY3JvcmUgb3ZlciB0aGUgbmV4dCBmaXZlIHRvIGVpZ2h0IHllYXJzIHRvIG1haW50YWluIHRoZSBsZWFndWUuIFBTTCBoYXMgcm9wZWQgaW4gSW5kaWEncyBmaXJzdCBncmFuZCBtYXN0ZXIsIFZpc2h3YW5hdGhhbiBBbmFuZCwgYXMgaXRzIGJyYW5kIGFtYmFzc2Fkb3IuLiAKVGhlIGhpc3RvcnkgaXMgdW5jbGVhciBidXQgb25lIHRoaW5nIGZvciBjZXJ0YWluIGlzIHRoYXQgcG9rZXIgaGFzIGV2b2x2ZWQgdGhyb3VnaG91dCB0aGUgeWVhcnMgdG8gYmVjb21lIHRoZSBnYW1lIHdlIGtub3cgYW5kIGxvdmUgdG9kYXkuIEV2ZXJ5ZGF5IHBva2VyIGlzIHBsYXllZCBieSBtYW55IGFyb3VuZCB0aGUgd29ybGQgYW5kIGlzIG1lcmVseSBqdXN0IGEgbWVhbnMgb2YgZ2FtYmxpbmcgb3IgbW9uZXkgbWFraW5nLCBpdCBpcyBzaGVlciBmdW4uIFRoaXMgaXMgb25lIG9mIHRoZSByZWFzb25zIHRoZSBnYW1lIGhhcyBmbG91cmlzaGVkIGFuZCB3aWxsIGNvbnRpbnVlIHRvIGZsb3VyaXNoLCBhbmQgd2l0aCB0aGUgYWR2ZW50IG9mIG9ubGluZSBwb2tlciBhbmQgdGVsZXZpc2VkIHBva2VyIGl0IGNhbiBvbmx5IGdldCBzdHJvbmdlci4KSGUgc2xpcHBlZCB0aGUgcGluIGludG8gaGlzIHBvY2tldCwganVzdCBpbiBjYXNlLi4gClNvbWV0aGluQ2xlSHZlciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMiBob3VycyBhZ28KR29ubmEgYWxzbyBhZ3JlZS4gSGVhZHBob25lcyBhcmUgZ3JlYXQgZm9yIHdoZW4geW91IGFyZSBhdCB0aGUgbGV2ZWwgd2hlcmUgeW91IGtub3cgeW91ciBnYW1lIGFuZCBhcmUgcmVhZHkgdG8gZ3JpbmQuIApDVVRUSU5HIENPTVBBTlkKNSkgVGltZS4gCkluIGEgbG90IG9mIGdhbWVzIHNpbWlsYXIgdG8gUG9FIGRleHRlcml0eSBoYXMgZ3JhbnRlZCBjcml0IGNoYW5jZSBhbmQgZG9kZ2UgY2hhbmNlIGJ1dCB0aG9zZSBhcmUgb2J2aW91c2x5IHRvbyBzdHJvbmcgaW4gUG9FLiBJIGd1ZXNzIHRoZXkgc2V0dGxlZCBvbiBzb21ldGhpbmcgbGVzc2VyIGFuZCBuZXZlciBsb29rZWQgYmFjay4gCkkgc2ltcGx5IHNhaWQgc2hlIGlzbiBoYXJkZXIgdGhhbiBhbnkgb2YgdGhlICJlYXN5IGRwcyIgYW5kIEkgc2FpZCBtYXliZSBoZXIgZmxvb3IgaXMgaGlnaGVyIHRoYW4gbW9pcmEgYnV0IHRoYXQgaXQuIApFbiBiaWVuIGRlcyBmYW9ucywgaWwgYXBwYXJhdCBjb21tZSB1biBqdXN0aWNpZXIgYXBwb3J0YW50IGxhIGx1bWlyZS4gQyB1biBtYXRyZSBkdSBjaGFvcywgY2UgZHNvcmRyZSBuY2Vzc2FpcmUuIApJIGRpZyBvdXQgdHdvIGNhcnMgZXZlcnkgc3Rvcm07IG15IG93biBteSBnaXJsZnJpZW5kIE15IG5laWdoYm9ycyBzZWUgbWUgZG8gdGhpcy4gSW4gRXZlcnkgbmVpZ2hib3Job29kIEkgaGF2ZSBsaXZlZDsgd2VzdCBzaWRlL1JpY2htb25kLCB3ZXN0c2lkZS9OaWFnYXJhLCB3ZXN0c2lkZS9kb3dudG93biwgYW5kIG5vcnRoIGJ1ZmZhbG8uIFRoZXkgYWx3YXlzIG1vdmUgaW4sIG5ldmVyIGNsZWFyIG91dCB3aGVyZSB0aGV5IHB1bGxlZCBvdXQgb2YuIApBbmQgdGhlIHJlYWxpdHkgaXMgdGhhdCB0aGUgV29XIHBsYXllciBiYXNlIGlzIGRlY2xpbmluZy4gSSBrbm93IHRoYXQgQmxpenphcmQgbGlrZXMgdG8gcm9sbCBvdXQgdGhlICJidXQgdGhlIGN1cnJlbnQgc3Vic2NyaXB0aW9ucyIgYXJndW1lbnQsIGJ1dCB0aG9zZSBudW1iZXJzIGFyZSBoZWF2aWx5IHBhZGRlZCB3aXRoIG51bWJlcnMgZnJvbSBBc2lhIHdoZXJlIHBsYXllcnMgYXJlbiBwYXlpbmcgYSBtb250aGx5IGZlZS4gCkhhZCB0aGUgZGlyZWN0b3IgY29tcGxhaW5pbmcgdG8gbWUgaW4gdGhlIGludGVydmlldyBhYm91dCB0aGUgIm5lZ2F0aXZpdHkiIGluIHRoZSBjdXJyZW50IHRlYW0gYW5kIGhvdyBoZSBkb2VzbnQgd2FudCBwZW9wbGUgdG8gd2FsayBpbnRvIHdvcmsgbGlrZSB0aGV5cmUgZ29pbmcgdG8gdGhlIGdhbGxvd3MuClRoZSBtdW0gdG8gYmUgYWRtaXR0ZWQgc2hlJ3MgYSAic3Vja2VyIGZvciBWYWxlbnRpbmUncyBEYXkiIGFuZCBob3BlcyBmb3Igcm9tYW50aWMgZ2VzdHVyZXMgICB3ZSBob3BlIFByaW5jZSBIYXJyeSBnb3QgdGhlIG1lbW8hCldlIHN0YXJ0ZWQgb3V0IHBsYXlpbmcgY29ycmVjdGx5LiBXZSBoYWQgYW4gZXhwZXJpZW5jZWQgcGxheWVyIHdobyBrbmV3IHRoZSBydWxlcy4gV2Ugd2VudCAidGhpcyBmZWVscyBsaWtlIHNoaXQ7IGl0IGJlIHdheSBzaW1wbGVyIGFuZCBtb3JlIGludHVpdGl2ZSB0byBqdXN0IGRvIGl0IHRoZSAyIHN0YWNrIHdheSIuIFNvIHdlIGRpZC4KSSBzYXkgaGFtIGFuZCBhIHR1cmtleSAoaXQganVzdCBhZnRlciBUaGFua3NnaXZpbmcgYW5kIEkgc3RpbGwgZ290IHR1cmtleSBvbiBteSBtaW5kKS4gU2hlIGFza3MgbWUgYWJvdXQgc2lkZXMuIApTaGUgc2V0cyB0aGF0IGNhc2UgaW4gdGhlIG1pZGRsZSBvZiB0aGUgdGFibGUsIGFuZCBEYXZpZCBmbGlwcyB0aGUgbGF0Y2guIEl0J3MgYSBwcm9mZXNzaW9uYWwgc2V0ISBNYW4sIEknbSB0ZWxsaW5nIHlvdSBpZiB0aGlzIGlzbid0IGFscmVhZHkgZXhjaXRpbmcgeW91LCB5b3UncmUgbm90IGEgcG9rZXIgcGxheWVyLiBOb3QgYSB2ZXJ5IHNlcmlvdXMgb25lLCBhbnl3YXkuLiAKQmV0dGVyIHJlYWNoIG91dCB0byBub24gYmVybmllIHZvdGVycyB0aGFuIHlvdXR1YmUuIFlvdXR1YmUgd2lsbCBtb3N0IGxpa2VseSBvbmx5IHJlY29tbWVuZCBCZXJuaWUgc3RyZWFtcyBhZnRlciB5b3UgYWxyZWFkeSB3YXRjaGVkIHNvY2lhbGlzdCBpc2ggcG9saXRpY2FsIHZpZGVvcy4gT24gdGhlIG90aGVyIGhhbmQsIGR1ZSB0byBUd2l0Y2ggdXNpbmcgY2F0ZWdvcmllcyBzb3J0ZWQgYnkgbnVtYmVyIG9mIHZpZXdlcnMsIGEgQmVybmllIHN0cmVhbSB3aWxsIHF1aWNrbHkgY2xpbWIgdG93YXJkcyB0aGUgdG9wIHdoZXJlIHBlb3BsZSB3aG8gZG9lc24gaGF2ZSBrbm93bGVkZ2Ugb2YgaXQgd2lsbCBzZWUgaXQuClF1YW50dW1jb29uZXkgIDc3IHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpBZnRlciBhbGwgb2YgdGhlIGFmdGVyY2FyZSB3YXMgZmluaXNoZWQgKHRoZSBDTkEgYW5kIEkgaGFkIGJlZW4gaW4gdGhlIHJvb20gZm9yIDE1IG1pbnMpIEkgbGVmdCB0byBjYWxsIHRoZSBmdW5lcmFsIGhvbWUgYW5kIGFsbCBvZiB0aGF0LgpJIGVuZGVkIHVwIGF0IGEgdW5pdmVyc2l0eSBhY3Jvc3MgdGhlIGNvdW50cnksIGFuZCBldmVudHVhbGx5IHB1cnN1aW5nIG15IE1hc3RlcidzIG9uIGEgY29tcGxldGVseSBkaWZmZXJlbnQgY29udGluZW50LCBhbmQgaXQgd2FzIHZlcnkgbmVhcmx5IGNvc3RseSB0byBtZS4gCkFuZWNkb3RhbGx5LCBJIGRvIGJlbGlldmUgdGhhdCBzb21ldGltZXMgcGVvcGxlIGNhbiBkaWUgICBJIHdvcmsgaW4gaGVhbHRoY2FyZSBhbmQgaGF2ZSBkZWFsdCB3aXRoIHBhdGllbnRzIHdobyBqdXN0IGdhdmUgdXAuIE9uZSBwYXJ0aWN1bGFyIGNhc2UgdGhhdCBjb21lcyB0byBtaW5kIHdhcyBhIGVsZGVybHkgZ2VudGxlbWFuIHdobyBoYWQgZGVtZW50aWEsIGhpcyB3aWZlIHZpc2l0ZWQgaGltIGV2ZXJ5IGRheSBpbiBob3NwaXRhbCB3aGVuIGhlIHdhcyBhZG1pdHRlZCBmb3IgbWFsbnV0cml0aW9uIChib3RoIG9mIHRoZW0gaGFkIGRlbWVudGlhLCBpdCB0dXJuZWQgb3V0LCBidXQgaGlzIHdpZmUgaGFkbiBiZWVuIHNwb3R0ZWQgYXQgdGhhdCBwb2ludCkuIApVbmZvcnR1bmF0ZWx5IHRoYXQgc3RhdCBvbmx5IGdvZXMgYmFjayB0byAwNiwgYnV0IGl0cyBiYXNpY2FsbHkgVEQlLElOVCUsWS9BIGZvciBURXMsIGFuZCBhIGdyZWF0IHN0YXQgdG8gdXNlLiAKSGUgdG9vayBhIGRpZmZlcmVudCBhcHByb2FjaCB0aGFuIGZlbGxvdyBmcmVlIGFnZW50IEJyZXNoYWQgUGVycmltYW4uMSB3ZWVrIGFnbyArIEJ5IFRlcnJ5IFBsdXRvLCBUaGUgUGxhaW4gRGVhbGVyQSBmdXR1cmUgdGVhY2hlciwgZnV0dXJlIGJhbmtlciBsZWFkIEJhbGR3aW4gV2FsbGFjZSB0byB0aGUgRCAzIE5DQUEgdG91cm5hbWVudCAgIFRlcnJ5IFBsdXRvIEEgZnV0dXJlIHRlYWNoZXIsIGZ1dHVyZSBiYW5rZXIgbGVhZCBCYWxkd2luIFdhbGxhY2UgdG8gdGhlIEQgMyBOQ0FBIHRvdXJuYW1lbnQgICBUZXJyeSBQbHV0byBObyBvbmUgZXhwZWN0ZWQgQmFsZHdpbiBXYWxsYWNlIHRvIHdpbiB0aGUgT2hpbyBDb25mZXJlbmNlIEF0aGxldGljIENvbmZlcmVuY2UgdG91cm5hbWVudC4gClNwYWNlcyBhcmUgc21hbGxlciBpbiBjb25kb3MgaW4gdGhlIExvd2VyIE1haW5sYW5kLiBZb3UgdHJ5IHRvIGluY2x1ZGUgYXMgbXVjaCBzdG9yYWdlIGFuZCBtYWtlIHNwYWNlcyBhcyBsaXZhYmxlIGFzIHBvc3NpYmxlLiAKRGFubiBrbm50ZSBtYW4gamEgYW0gMS4gTm9jaG1hbCBwcm9iaWVyZW4gICBtaXQgUmlzaWtvIG5vY2htYWwgZGllIFJja2xhc3RnZWJociB6dSB6YWhsZW4uIApNeSBXYXRzdSB0aGVyYXBpc3QsIExhdXJhIFNyeWdsZXksIGFsbCB0YW5uZWQgc2luZXcgaW4gYSBsYXZlbmRlciBzd2ltc3VpdCwgc3BlbnQgYWJvdXQgMTAgbWludXRlcyBnb2luZyBvdmVyIG15IGludGFrZSBmb3JtIChJIGNoZWNrZWQgY2hyb25pYyBwYWluLCBkaXN0dXJiZWQgc2xlZXAgYW5kIHByZWduYW5jeSBuYXVzZWEgb24gdGhlIGxldmVsIG9mIHRoZSBwcm9mYW5lKSBiZWZvcmUgc2VuZGluZyBtZSBpbnNpZGUgZm9yIGEgcXVpY2sgc2hvd2VyLiAKSGUga2lja2VkIG1lIGluIHRoZSBoZWFkLCBhbmQgSSBpbW1lZGlhdGVseSB3ZW50IGJsaW5kIGluIG15IHJpZ2h0IGV5ZS4gClRoYXQgaXMgdW50aWwgd2UgcGlja2VkIHVwIGEgY291cGxlIG9mIG1vbnN0ZXIgaGFuZHMuIEhpcyBKIEsgc3VpdGVkIHdhcyB3YXkgdG8gc3Ryb25nIGZvciBteSA3MiBvZmYgc3VpdC4gQW5kIG9mZiBoZSB3ZW50IHRvIHRoZSBmaW5hbCB0YWJsZSB3aGlsZSBJIHBsYXllZCB0aGUgNy40NSBzdXBlciBzYXRlbGxpdGUgKHdpdGhvdXQgYW55IHN1Y2Nlc3MgdGhpcyB0aW1lKS4uIApGb3IgMyB3ZWVrcyBJIGRpZG4ndCBoZWFyIGEgcGVlcCwgSSBjYWxsZWQgdGhlbSBvbmNlIHdlZWsuIE9uIHRoZSA0dGggd2VlaywgSSBnb3QgYSB0aHJlYXRlbmluZyBwaG9uZSBjYWxsIGZyb20gdGhlIG93bmVyIG9mIHRoZSByZXNjdWUuIApKdWRnZSBXaWxsaWFtIFcuIFdlbm5lciBkZWZlcnJlZCBzZW50ZW5jaW5nIHVudGlsIEp1bHkgMjAgYWZ0ZXIgdGhlIGNvbSAgcGxldGlvbiBvZiBhIGJhY2tncm91bmQgaW52ZXN0aWdhdGlvbi4gRGltYXR0ZWkgZmFjZXMgYSBwb3NzaWJsZSAzMCB5ZWFyIHNlbiAgdGVuY2UgZm9yIGF0dGVtcHRlZCBtdXJkZXIuIERpbWF0dGVpIGFsc28gZmFjZXMgYnVyZ2xhcnkgY2hhcmdlcyByZWxhdGluZyB0byBhIHNlcmllcyBvZiBzdG9yZWhvdXNlIGVudHJpZXMgaW4gRGVjZW1iZXIgYW5kIEphbnVhcnkuIFByb3NlY3V0b3IgSmFtZXMgSC4gQ2xhcHAgaW5kaWNhdGVkIERpbWF0dGVpIGhhcyBhZG1pdHRlZCBicmVha2luZyBpbnRvIGJvdGggdGhlIENvcm5lciBQdWIgYW5kIHRoZSBNdWcgYW5kIE1hbGxldC4gCk1heWJlIHRoaXMgZ2lybCBpcyBtb3JlIGF0dHJhY3RpdmUgdG8gdGhlc2UgdHlwZXMgb2YgbWVuIGFuZCBoYXZpbmcgc29tZW9uZSBtb3JlIHNhcHB5IGFuZCBzZW5zaXRpdmUgaXMgYSB0dXJuIG9mZiBmb3IgaGVyLiBBZ2FpbiwgY29tZXMgZG93biB0byB0aGUgZ2lybCwgc2l0dWF0aW9uIGFuZCBjb21tdW5pY2F0aW9uIGJldHdlZW4geW91IHR3by4uIApBcHBhcmVudGx5LCB5b3UgY2FuIGdldCB0aGUgc2hpZnQgaW4gaG9ybW9uZXMgd2hlbiB5b3Ugc3RvcCBicmVhc3RmZWVkaW5nLiBJIG5vdGljZWQgYmVjYXVzZSB0aGluZ3Mgd2l0aCB0aGUgZmF0aGVyIHdvdWxkIGp1c3QgYmUgdGVuc2UsIEkgd291bGQgZ2V0IGFuZ3J5IG91dCBvZiBubyB3aGVyZSBvdmVyIG1pbm9yIHRoaW5ncyB3aGVuIGhlIGFjdHVhbGx5IGhlbHBlZCBvdXQgYSBsb3QuIEkgZGlkbid0IGhhdmUgYW55IGlsbCBmZWVsaW5ncyB0b3dhcmRzIG15c2VsZiBvciB0aGUgYmFieSwgb25seSB0b3dhcmRzIGhlciBmYXRoZXIuSSBiZWxpZXZlIEkgc3RhcnRlZCBsb29raW5nIGludG8gaXQgd2hlbiBJIG1hZGUgc29tZSBjb21tZW50IHRoYXQgd2FzIHJlYWxseSBydWRlIHdoZW4gaGUgYXNrZWQgbWUgYSBxdWVzdGlvbiwgYW5kIGhlIGdhdmUgbWUgYSBsb29rIG9mIHNob2NrLiAKVGhlIG9iamVjdCBvZiB0aGUgZ2FtZSBpcyB0byBnZXQgYSBmaXZlIGNhcmQgcG9rZXIgaGFuZCB0aGF0IGNvbnRhaW5zIGEgd2lubmluZyBjb21iaW5hdGlvbi4gRmFjZXMgYXJlIEphY2tzLCBRdWVlbnMgb3IgS2luZ3MuIFRoaXMgZ2FtZSBoYXMgbm8gd2lsZCBjYXJkcyBhbmQgdGhlIG1heGltdW0gcGF5b3V0IGlzIDQwMDAgY29pbnMuCkdvIHRocm91Z2ggdGhlaXIgc2hvcCBhbmQgcmVhbGx5IHByYWlzZSB0aGVpciBzdHVmZi5JIHByb2JhYmx5IGxvb2sgaW50byBzb21lIGxvY2FsIGNoYXJpdGllcyBvciBwYW50cmllcyBzZWUgaWYgdGhleSBoYXZlIHNvbWV0aGluZyBvciBjYW4gaGVscCBvdXQgKG1ha2UgZnJpZW5kcyB3aXRoIHNvbWVvbmUgd2hvIHdvcmtzIGluIGEgYmFrZXJ5IGJlY2F1c2UgdGhleSBhbHdheXMgaGF2ZSBhY2Nlc3MgdG8gZnJlc2ggYnJlYWQpLiBJIGtub3cgc29tZSBwZW9wbGUgdGhpbmsgb2YgZHVtcHN0ZXIgZGl2aW5nIGFzIGFuIHRoaW5nIGFuZCBicmFnIGFib3V0IHRoZWlyIGZpbmRzIHRob3VnaC4gCkV2ZXJ5dGhpbmcgd2UgaGF2ZSBoZWFyZCBmcm9tIG5vbiBtYXZzIHBlb3BsZSB3aG8gd29ya2VkIG91dCB3aXRoIGhpbSBvdmVyIHRoaXMgbGFzdCBvZmZzZWFzb24gcG9pbnRzIHRvd2FyZHMgTHVrYSBiZWluZyBhIGJiYWxsIHNhdmFudCB3aG8gd2lsbCB3b3JrIG5vbiBzdG9wIG9uIGhpcyBnYW1lIHVudGlsIGhlIGJlYXRzIHlvdS4gCllvdSBwbGF5IGxpa2UgdGhleSdyZSB0aGVyZSwgZGVhbGluZyB0aGVtIGNhcmRzIGVhY2ggaGFuZCwgYW5kIHBvc3RpbmcgdGhlaXIgYW50ZXMgYW5kIGJsaW5kcyBpbiBmb3IgdGhlbS4gCkJpcyB6dW0gaGV1dGlnZW0gVGFnIHd1cmRlIGF1ZiBkZXIgV2VsbGUgZGVzIEludGVyZXNzZXMgenVyIHRyYWRpdGlvbmVsbGVuIE1lZGl6aW4gZWluZSBWaWVsemFobCB2b24gQmNoZXJuIHZvbiB2ZXJzY2hpZWRlbmVuIFZlcmxhZ2VuIGhlcmF1c2dlYnJhY2h0LCBkaWUgZWluZSBzb2ZvcnRpZ2UgSGVpbHVuZyBhbmJpZXRlbiwgd29iZWkgbWFuIG11IHp1Z2VzdGVoZW4sIGRhIGVzIGVpbmlnZW4gS3JhbmtlbiBhdWNoIGhhbGYuIApTaGFtZWxlc3MgcGx1ZzogY29tZSB0byBhbiBvcGVuIG1pYyBhdCBTYXNzeSBBbm4gYXJvdW5kIDg6MzAgOSB0aGVuIGRhbmNlIHdpdGggdXMgYWZ0ZXIgbGF1Z2hpbmcgZm9yIGFuIGhvdXIgb3IgdHdvLgpXZSByZWFsbHkgZG9uIGhhdmUgYW55IG1vcmUgY29tbW9uIGdyb3VuZCwgYW5kIHdlIHNob3VsZG4gc2VlayB0byBmaW5kIGNvbW1vbiBncm91bmQuIi4gCkFuZCB0aGUgbmVlZCBmb3IgYSBuZXcgdHJpYWwuLiAKU2F5aW5nIHRoYXQgZGlzY3JlZGl0cyBhbGwgb2YgdGhlIGFjdHVhbCBnb29kIHdvcmsgdGhhdCBsYXcgZW5mb3JjZW1lbnQgYWdlbnRzIGhhdmUgZGVkaWNhdGVkIHRoZWlyIGxpdmVzIHRvIGRvaW5nLiBBbmQgaXQncyBjZXJ0YWlubHkgbm90IGFuIGVhc3kgam9iIHRoYXQgdGhleSBkbywgdGhhdCB0YWtlcyBhIGh1Z2UgdG9sbCBvbiBwZW9wbGUuLiAKKHA6IDIxKS4uIApOb3VzIG5lIHZvdXMgY2FjaGVyb25zIHBhcyBxdWUgY2VydGFpbmVzIHNlbWFpbmVzLCB2b2lyZSBjZXJ0YWlucyBqb3VycywgYydlc3QgdW4gdnJpdGFibGUgY2Fzc2UgdHRlIHBvdXIgc2UgcnBhcnRpciBsZXMgcnVuaW9ucyBlbnRyZSBsZXMgbWVtYnJlcyBkdSBDb25zZWlsIGQnYWRtaW5pc3RyYXRpb24sIHRvdXRlcyBldCB0b3VzIGJudm9sZXMgcmFwcGVsb25zIGxlLiBDYXIgaWwgZXN0IHZyYWkgcXVlIHBhcmZvaXMgbGUgbWFucXVlIGRlIGNvb3JkaW5hdGlvbiBlbnRyZSBsZXMgc2VydmljZXMsIGxlcyBtYWlyaWVzIGQnYXJyb25kaXNzZW1lbnQsIGwnSHRlbCBkZSB2aWxsZSBldCBsYSBwcmZlY3R1cmUgY29uZHVpdCAgZGVzIHN1cmNoYXJnZXMgZCdhZ2VuZGEsIGV0IHBhcyBxdWUgcG91ciBub3VzLCBtbWUgY2VydGFpbnMgbHVzIHNvbnQgY29uZnJvbnRzICBjZSBkaWxlbW1lLiBJbCBub3VzIGZhdXQgZG9uYyBwcmlvcmlzZXIgc2Vsb24gbCdpbXBvcnRhbmNlIGRlcyBydW5pb25zIGV0IGwnYWN0dWFsaXQgZGVzIHN1amV0cy4uIApNZW50aW9uZWQgcnVubmluZyB0cmFjaywgYW5kIEkgaG9uZXN0bHkgZG9uIGtub3cgaG93IG11Y2ggaHVuZ3JpZXIgZXhlcmNpc2UgaXMgbWVhbnQgdG8gbWFrZSB5b3UgYnV0IEkgaGFkIG1vcmUgc3VjY2VzcyBsb3Npbmcgd2VpZ2h0IHRoaXMgdGltZSBhcm91bmQgdGhhbiBhbnkgdGltZSBpbiBoaXN0b3J5LCBhbmQgSSBwYXJ0aWFsbHkgY3JlZGl0IG5vdCBleGVyY2lzaW5nLiBJIGZpbmQgdGhhdCB3aGVuIEkgYW0gd2F0Y2hpbmcgbXkgZGlldCBhbmQgSSB0cnkgdG8gaW5jbHVkZSBleGVyY2lzZSwgSSBiZWNvbWUgYSByYXZlbm91cyBiZWFzdC4gVGhpcyB0aW1lLCBteSBodW5nZXIgbGV2ZWxzIGhhdmUgYmVlbiBtdWNoIG1vcmUgc3RhYmxlLgpXaXRob3V0IHRoZSBleHRlcm5hbCBmYWN0b3JzIChlbmQgb2YgdGhlIG5pZ2h0LCBsaXZlIGV0YykgSSBwdXQgaGlzIHJhbmdlIG9uIHNvbWV0aGluZyBsaWtlIFFRKy4gSG93ZXZlciwgc2luY2UgMS4gaGUgZG9uZSB0aGlzIGJlZm9yZSBhbmQgMi4gc2luY2UgaXQgdGhlIGVuZCBvZiB0aGUgbmlnaHQgYW5kIHBlb3BsZSBhcmUgZG9pbmcgaW5jcmVhc2luZ2x5IHN0dXBpZCBtb3ZlcyBJIGxvd2VyZWQgaGlzIHJhbmdlIHF1aXRlIGEgYml0LiBNeSBndWVzcyBpcyBBSisvVFQrIGFzIHRoZSByYW5nZSwgYnV0IGRlYmF0YWJsZS4gVGhlcmUgYWxzbyB0aGUgb2ZmaGFuZCBjaGFuY2UgdGhhdCBoZSBqdXN0IGRvaW5nIHRoaXMgd2l0aCB0b3RhbCBnYXJiYWdlLCBidXQgdGhhdCB1bmxpa2VseS4KQ2l2aWwgd2FycyBhcmUgZGlmZmVyZW50ICAgdGhlIG5vcnRoIGRvZXNuIHdhbnQgdG8gb2NjdXB5IHRoZSBzb3V0aCBmb3IgNTAgeWVhcnMgdG8gaW1wYXJ0IGhhcnNoIG1pbGl0YXJ5IGNvbnRyb2wuIFRoZXkgd2FudCB0byB0cnkgdG8gaGVhbCB0aGUgY291bnRyeSBhbmQgYnJpbmcgdGhlbSBiYWNrIGludG8gdGhlIGZvbGQgc28gd2UgYSB3aG9sZSwgZnVuY3Rpb25pbmcgY291bnRyeSBhcyBzb29uIGFzIHBvc3NpYmxlLiAKSWYgaXQgaXMgdXNlZCBhcyBhIHJoZXRvcmljYWwgZGV2aWNlLCB0aGUgZ2VuZXJhbCBuYW1lIGZvciB0aGlzIGlzICJ0cm9wZSIuIENvbW1vbiB0eXBlcyBvZiB0cm9wZXMgYXJlIG1ldGFwaG9ycyAoc3Vic3RpdHV0aW5nIHNvbWV0aGluZyB3aGljaCBiZWFycyBzaW1pbGFyaXR5KSwgbWV0b255bXkgKHN1YnN0aXR1dGluZyBzb21ldGhpbmcgd2hpY2ggaXMgcmVsYXRlZCBvciBhc3NvY2lhdGVkIHRvIHRoZSB0aGluZykgYW5kIHN5bmVjZG9jaGUgKHN1YnN0aXR1dGluZyBhIHBhcnQgZm9yIHRoZSB3aG9sZSBvciB2aWNlIHZlcnNhKS4gQm90aCB5b3VyIGV4YW1wbGVzIGNvdWxkIGJlIGNvbnNpZGVyZWQgc3luZWNkb2NoZXMuIEJ1dCBJIHRoaW5rIG9ubHkgdGhlIHNlY29uZCBpcyBhIGdvb2QgZXhhbXBsZSBmb3IgYSB0cm9wZTsgdGhlIGZpcnN0IGlzIG1vcmUgYSBjYXNlIG9mIHNlbWFudGljIHNoaWZ0LgpUaGUgc3RhdGUgU2VuYXRlIGluIEFwcmlsIHVuYW5pbW91c2x5IHBhc3NlZCBhIGJpbGwgdGhhdCB3b3VsZCBhbGxvdyBwb2tlciByb29tcyBhbmQgb3RoZXIgbG9jYXRpb25zIHRvIGhvc3QgZ2FtZXMgc2V2ZW4gZGF5cyBhIHdlZWsgYXMgbG9uZyBhcyBubyBtb3JlIHRoYW4gZm91ciBjaGFyaXRpZXMgaG9sZCBldmVudHMgYXQgdGhlIHNhbWUgbG9jYXRpb24gYXQgdGhlIHNhbWUgdGltZS4gCkF0IHNvbWUgcG9pbnQgeW91IG1heSBtYWtlIGEgc3RpciBmcnkgc2VydmVkIG92ZXIgY2F1bGlmbG93ZXIgcmljZS4uIAooaSB3YXMgdmVyeSBjb25zaWRlcmF0ZSBhYm91dCBmbHVpZHMgbiBzdHVmZiBiYWNrIHRoZW4gc28gdGhlcmUgaGFkbiBiZWVuIG11Y2ggZXZpZGVuY2UpLiAKTmljayBOdXJzZSBtYXkgYmUgYSAibm8gbmFtZSIgdG8gYW55b25lIG91dHNpZGUgdGhlIGNpdHksIGJ1dCBoZSBkZWZpbml0ZWx5IHdlbGwga25vd24gYW1vbmdzdCB0aGUgUmFwdG9ycyBmYW4gYmFzZS4KUmF0aGVyIHRoYW4gcmlza3ksIHRoZSBlZmZlY3RzIG9mIHJlZmxleG9sb2d5IHRvIHRoZSBhbmtsZXMgbWF5IGFjdHVhbGx5IHJlZHVjZSB0aGUgb2NjdXJyZW5jZSBvZiBtaXNjYXJyaWFnZSBieSBoZWxwaW5nIG51cnR1cmUgYSBoZWFsdGh5IG1hdGVybmFsIGVudmlyb25tZW50IGFuZCBzdXBwb3J0aW5nIHRoZSBkZXZlbG9waW5nIGZldHVzIFtzb3VyY2U6IFN0YWdlcl0uLiAKSW4gYmluZ28sIHRoZSB3b3JkICdiaW5nbycgaXMgc3BlbGxlZCBvdXQgYWNyb3NzIHRoZSB0b3Agb2YgdGhlIGJvYXJkIHdpdGggZml2ZSByb3dzIGFuZCBmaXZlIGNvbHVtbnMgb2YgbnVtYmVycyB1bmRlciB0aGUgc3BlbGxlZCBvdXQgd29yZC4gCkFuIGFydGljbGUgYnkgUyB0aGF0IHdhcyBwdWJsaXNoZWQgaW4gTGUgSm91cm5hbCBkZSBNb250ciBhbHNvIGluY2x1ZGVkIGEgcGhvdG8gb2YgdGhlIExhdmFsIGhvdXNlIHdoZXJlIERlbCBCYWxzbyB3aWZlIGFuZCBzb25zIHdlcmUgdmljdGltcyBvZiBhIGhvbWUgaW52YXNpb24gaW4gMjAxNy4uIApSZW1lbWJlciBsYXN0IEF1Z3VzdCAxNyB3aGVuIEZyYW5kc2VuIHdlbnQgMyBmb3IgNSwgd2l0aCBvbmUgaG9tZXJ1biBhbmQgdHdvIGRvdWJsZXMgaW4gU2FuIERpZWdvPyBIZSBsb29rZWQgbGlrZSB0aGUgcmVhbCBkZWFsIHRoYXQgZGF5LiBJIHN0aWxsIGhvcGVmdWwgdGhhdCBoZSBjYW4gaGF2ZSBhIGJyZWFrb3V0IGdhbWUgdGhpcyB5ZWFyIHRoYXQgd2lsbCBzbmFwIGhpbSBvdXQgb2YgaGlzIGZ1bmsuIEhlIHN0aWxsIGhhcyB0aW1lIHRvIHByb3ZlIGhpbXNlbGYsIGJ1dCBoZSBuZWVkcyB0byBkbyBpdCBub3cuIFRoZSBicmlnaHQgc3BvdCBpcyBoZSBwdXR0aW5nIHRoZSBiYWxsIGluIHBsYXksIHN0cmlraW5nIG91dCBvbmx5IDE3IHRpbWVzIGluIDE1OCBhdCBiYXRzLiBCdXQgYXMgbWFueSBvZiB5b3UgaGF2ZSBzYWlkLCBoZSBzdXJlIGRvZXMgc2VlbSB0byBoaXQgYSBsb3Qgb2YgZ3JvdW5kYmFsbCBvdXRzLgpBcyBhIGJlZWtlZXBlciB3aG8gaGFzIGEgdG9wIGJhciBoaXZlIGFuZCBhIGxhbmdzdHJvdGggaGl2ZSxJIGhhdmUgdG8gc2F5IHRoZSBvbmx5IHRoaW5nIEkgZGlzYWdyZWUgd2l0aCBpcyB0aGUgcXVlZW4gZXhjbHVkZXIuIApPbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IHBvaW50cyBpbiBhY3VwdW5jdHVyZSwgWnVzYW5saSBpcyB1c2VkIHRvIHRyZWF0IHN0b21hY2ggcGFpbiwgdm9taXRpbmcsIGluZGlnZXN0aW9uLCBkaWFycmhlYSwgY29uc3RpcGF0aW9uLCBkaXp6aW5lc3MsIGZhdGlndWUsIGFuZCBsb3cgaW1tdW5pdHkuIAoiT3VyIGZvcmNlcyBoYXZlIGJlZW4gYWJsZSB0byBjb250YWluIGFsbCB0aGVzZSB0aGUgY29tbXVuaXF1ZSBzYWlkLiBCZWx0ZXIgSGVhbHRoIDE0IENvbnRyYWN0IEJyaWRnZSBEZWF0aHMsIEJpcnRocycnLiAKT3V0bG9vayAgQSAwIDAgZHJhdyBpbiB0aGUgaG9tZSBvcGVuZXIgaXMgZGVmaW5pdGVseSB0d28gcG9pbnRzIGxvc3QsIG5vdCBvbmUgcG9pbnQgZ2FpbmVkLiBCdXQgZ2l2ZW4gdGhhdCB0aGlzIGlzIHRoZSBmaXJzdCBwb2ludCBvZiB0aGUgUmV2b2x1dGlvbidzIHNlYXNvbiwgdGhlcmUgaXMgcmVhc29uIHRvIGJlbGlldmUgdGhhdCB0aGlzIHJlc3VsdCBjYW4gYWN0IGFzIGEgY3VzaGlvbiBvciBwb3RlbnRpYWwgbW9tZW50dW0gYnVpbGRlciBnb2luZyBmb3J3YXJkLiBGb3Igb25lLCB0aGUgZGVmZW5zZSByZW1haW5lZCBzb2xpZCBhbmQgY2FuIHJlam9pY2UgaW4gdGhlIGZhY3QgdGhhdCBKb3NlIEdvbmNhbHZlcyBoYWQgYSBEZWZlbmRlciBvZiB0aGUgWWVhciB3b3J0aHkgcGVyZm9ybWFuY2UuIEFuZCBkZXNwaXRlIG5vdCBzY29yaW5nLCB0aGUgUmV2b2x1dGlvbidzIG9mZmVuc2UgZGlkbid0IGxvb2sgdG9vIGJhZCwgZWl0aGVyLiBObywgdGhlcmUgd2VyZSBubyBnb2FscyB0byBzaG93IGZvciB0aGVpciBlZmZvcnRzLiBCdXQgYXQgbGVhc3QgdGhyZWUgb2YgdGhlIFJldm9sdXRpb24ncyBjaGFuY2VzIGJhcmVseSB0cmlja2xlZCB3aWRlIG9mIGdvYWwuIE9uZSB0YWxseSB3aWxsIGJlIGVub3VnaCB0byBnZXQgdGhlIGZsb29kZ2F0ZXMgZ29pbmcsIG11Y2ggbGlrZSBpbiAyMDEzLgoxQWIgdXJiZSBjb25kaXRhICAgTGF0aW4gbWVhbmluZyAnZnJvbSB0aGUgZm91bmRpbmcgb2YgdGhlIENpdHknIChvZiBSb21lKS4yRWd5cHRpYW4gc3RhdHVlcyBhbHNvIHByZWRvbWluYW50bHkgc3RhbmQgbGVmdCBmb290IGluIGZyb250IG9mIHJpZ2h0LiBUaGlzIGluc3BpcmVkIE5hcG9sZW9uIHRvIGluc2lzdCB0aGF0IGhpcyB0cm9vcHMgc3RhcnQgbWFyY2hpbmcgd2l0aCB0aGVpciBsZWZ0IGZvb3QsIGFuZCB0aGlzIGhhcyBiZWVuIGFkYXB0ZWQgYnkgYXJtaWVzIHdvcmxkd2lkZSB0b2RheS4zT25lIG9mIHRoZSBTZXZlbiBXb25kZXJzIG9mIHRoZSBXb3JsZCBhbG9uZyB3aXRoIFRoZSBHcmVhdCBQeXJhbWlkIG9mIEdpemEsIFRoZSBIYW5naW5nIEdhcmRlbnMgb2YgQmFieWxvbiwgdGhlIFRlbXBsZSBvZiBBcnRlbWlzIGF0IEVwaGVzdXMsIHRoZSBNYXVzb2xldW0gYXQgSGFsaWNhcm5hc3N1cywgdGhlIENvbG9zc3VzIG9mIFJob2RlcywgYW5kIHRoZSBQaGFyb3MgTGlnaHRob3VzZSBhdCBBbGV4YW5kcmlhLjRPbmUgb2YgdGhlIG1vc3QgZmFtb3VzIGV4YW1wbGVzIGJlaW5nIE1pY2hlbGFuZ2VsbydzIHN0YXR1ZSBEYXZpZC4uIApTVyBoYWQgZXZlbiB0ZXh0ZWQgZnJpZW5kcyB0aGF0IENXIGhhZCBjaGFuZ2VkLiAKTWFkZHV3ICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhleSBtYXkgbWFrZSBhIGZvcnR1bmUgb3V0IG9mIHRoaXMgYnV0IGF0IHRoZSBzYW1lIHRpbWUgY2FuIGxvc2UgYSBsb3Qgb2YgbW9uZXkuIElmIHlvdSBoYXBwZW4gdG8gbWFrZSBvdXQgeW91ciBtb25leSB3aXRoIHRoZSBtb3N0IGV4Y2VsbGVudCBoYW5kLCBhbmQgcXVpdGUgZnJlcXVlbnRseSwgdHJ1c3QgbWUsIHlvdSdyZSBnb2luZyB0byBiZSBhIHRyaXVtcGhhbnQgcGxheWVyLi4gCklmIHlvdSBkb24gd29yayBvdXQgYW5kIGRvbiBleGFjdGx5IGZhbmN5IHN0YXJ0aW5nIGhpdHRpbmcgdGhlIGd5bSwgZG9uIHdvcnJ5IGFib3V0IGdvaW5nIGFsbCBpbiBvciBhbnl0aGluZyBsaWtlIHRoYXQsIGp1c3QgZG8gYSBmZXcgc3F1YXRzIG5vdyBhbmQgdGhlbiB0aHJvdWdob3V0IHRoZSBkYXkgb3Igc29tZXRoaW5nIGxpa2UgdGhhdC4gCkFzIHBsYXllZCwgZmxvcCBpcyBmaW5lLiBUdXJuIHNob3VsZCBwcm9iYWJseSBiZSBhIHgvciBhdCBzb21lIGZyZXF1ZW5jeSBidXQgY2FsbCBpc24gYmFkLiBJIHRoaW5rIHRoaXMgaXMgbGlrZWx5IGEgZm9sZCB0byBhbnkgdmFsdWUgc2l6ZWQgcml2ZXIgYmV0LiAKQSBkZXRhY2hlZCBDb3ZsaW4sIHdobyBsaXZlZCBhY3Jvc3MgdGhlIGhhbGwsIHdhcyBzaXR0aW5nIG9uIERhbmlzaGVma3kncyBzb2ZhIGFuZCB0b2xkIFJlaWQgdGhhdCBzaGUgaGFkICJhbiBhY2NpZGVudCBpbiB0aGUgYmF0aHJvb20iIGFuZCB3YXMgZGVhZC4KTG90IG9mIHBlb3BsZSBoYXZlIHRoZWlyIHdpbmUgY2VsbGFycyBoaWRkZW4gaW4gYSBiYXNlbWVudC4gQ2xhdWRlIGlkZWEgd2l0aCB0aGlzIHByb2R1Y3Qgd2FzIHRvIHByZXNlbnQgdGhlIGZyaWRnZSBhcyBhcnQuIEl0IGxvb2tzIGxpa2UgYSBwYWludGluZyBhbmQgd2Ugb2ZmZXIgZnJhbWVzIGZvciBpdC4gCklmIGEgbWFuIHdhbnRzIHRvIGluY3JlYXNlIGhpcyBzdGF5aW5nIHBvd2VyLCBoZSBkb2Vzbid0IGhhdmUgdG8gd2FpdCBmb3IgUHJpbGlneS4gCkxvcnNxdSdpbHMgc29udCBiaWVuIGluZm9ybXMgZXQgYWNjb21wYWducyBwYXIgZGVzIHByb2Zlc3Npb25uZWxzIGZpYWJsZXMsIGxhIG1ham9yaXQgY2hhbmdlIGQnYXZpcyBwYXJjZSBxdSdhdSBsaWV1IGRlIHBheWVyIHVuIGxveWVyLCBpbHMgZm9udCB1biBleGNlbGxlbnQgaW52ZXN0aXNzZW1lbnQuIExlcyBwcm9wcml0cyBhY2hldGVzIGVuIDIwMTMgc2Ugc29udCBhcHByY2llcyBkZSAxMyAlIGV0IGNlIG1hcmNoIGFzY2VuZGFudCBkdXJlcmEgcXVlbHF1ZXMgYW5uZXMgZW5jb3JlLi4gCkhlIGtuZXcgZXZlcnkgc3RhdGlzdGljIGFuZCBldmVyeSBzY29yZSwgYnV0IGhlIGFsc28gd2FzIGFuIGF2aWQgcGFydGljaXBhbnQuIApUaGUgcHJvY2VzcyB0b29rIGFyb3VuZCAyIG1vbnRocyBmb3IgbWUgYW5kIHRvb2sgYSBncmVhdCBkZWFsIG9mIGhlbHAgZnJvbSBteSBmYW1pbHkuIApGcm9zdHlncmluICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvClVzZXJzIGFyZSBoZWxkIGZ1bGx5IHJlc3BvbnNpYmxlIGZvciB0aGVpciByZWdpc3RlcmVkIGVtYWlsIGFkZHJlc3NlcywgVXNlciBJZHMgYW5kIFBhc3N3b3Jkcy4gCk9uZSB5b3UgdGhyZWUgaXMgZ29pbmcgdG8gY2FsbCBNRDIwLzIwIGFuZCB0ZWxsIGhlciB0aGUgYmFieSBzaG93ZXIgaGFzIGJlZW4gY2FuY2VsbGVkIGZvciB0aGF0IGRheS4gCkluIG90aGVyIHdvcmRzLCB3aGF0IGlmIHRoaXMgdGhpbmcgIHRoaXMgYm9kaWx5IHRoaW5nICB0aGF0IHdlIHRoaW5rIGlzIHN0YWJsZSBhbmQgcmVhbCBhbmQgZWFzaWx5IHJlYWRhYmxlIGFzICJtYWxlIiBvciAiZmVtYWxlIGlzIGluIGZhY3QgYXMgbWVzc3kgYW5kIHVuY2xlYXIgYXMgd2hlbiBhIHdvbWFuIGZpeGVzIHRoZSBlbmdpbmUgb24gaGVyIGNhciBpbiBvdmVyYWxscyBhbmQgaGlnaCBoZWVscz8gSGlzdG9yaWFucyBsaWtlIFRob20gTGFjcXVldXIgaGF2ZSBhZGRlZCB0byB0aGlzIHNlbnNlIHRoYXQgImdlbmRlciIgYW5kICJzZXgiIGFyZSBib3RoIHRoZSBzYW1lIGFuZCBib3RoIG1lc3N5IGJ5IHNob3dpbmcgaG93IHRoZSB0d28gc2V4IHN5c3RlbSBpcyBmYWlybHkgcmVjZW50LCBsaWtlIFJlZm9ybWF0aW9uIHJlY2VudC4gRm9tIHRoZSBDbGFzc2ljYWwgR3JlZWtzIHRpbGwgYWJvdXQgMTYwMCBvciBzbywgV2VzdGVybiBkb2N0b3JzIGFuZCBsYXlwZW9wbGUgYWxpa2UgdGhvdWdodCB0aGVyZSB3YXMgT05FIHNleCAoYW5kIGl0IHdhcyBtYWxlICB3b21lbiB3ZXJlIGp1c3QgaW52ZXJ0ZWQgdmVyc2lvbnMgb2YgdGhlIG1vcmUgcGVyZmVjdCBtYWxlIGZvcm0pLiBUaGUgaW50ZXJlc3RpbmcgdGhpbmcgYWJvdXQgdGhlIG9uZSBzZXggbW9kZWwgaXMgaXQgYWxsb3dlZCBmb3IgdGhvc2Ugd2hvIHdlcmUgbm90IG9uZSBub3IgdGhlIG90aGVyICh0aGVpciBnZW5pdGFscyB3ZXJlIG5vdCBmdWxseSBpbnZlcnRlZCAgbGlrZSBhIHdvbWFuIG5vciBmdWxseSBleHRyb3ZlcnRlZCBsaWtlIGEgbWFuICBzbyB0aGUgImluIGJldHdlZW5zIiBkaWQgbm90IGNhdXNlIGEgY2F0ZWdvcnkgY3Jpc2lzKS4uIApOT1QgTVkgRkFVTFQgVEFDVElDICBBIHNpZ24gb2YgYSBjaGFyYWN0ZXIgZGlzb3JkZXJlZCBwZXJzb24gaXMgc29tZW9uZSB3aG8gYWx3YXlzIGJsYW1lcyBvdGhlciBwZW9wbGUuIFRoZXkgY2FuIGNvbnN0YW50bHkgYmUgaGVhcmQgc2F5aW5nIGl0J3MgeW91ciBmYXVsdCwgaXQncyBub3QgbXkgZmF1bHQuIFRoZXkgd2lsbCBhbHNvIG5ldmVyIHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIGFueXRoaW5nLCBpdCBpcyBhbHdheXMgdGhlIG90aGVyIHBlcnNvbiwgcGxhY2Ugb3IgdGhpbmdzIGZhdWx0LiAKTGl2ZSB0aGUgd2F5IGhlIHdvdWxkIHdhbnQgeW91IHRvLiAKQnkgdGhhdCB0aW1lIGhlIGhhZCBzZXZlcmVkIGhpcyBpbGx1c3RyaW91cyBjb25uZWN0aW9uIHdpdGggU3Vzc2V4IGFuZCB3YXMgb3BlbmluZyB0aGUgaW5uaW5ncyBmb3IgSGFtcHNoaXJlLiBUaGUgZ2VuZXJhbCBub3Rpb24gaXMgdGhhdCBGcnkgd2FzIG5vdCBzdWNjZXNzZnVsIGFzIGFuIEVuZ2xhbmQgYmF0c21hbjsgYW5kIGl0IGlzIHRydWUgdGhhdCBpbiBUZXN0IG1hdGNoZXMgaGUgZGlkIG5vdCByZW1haW4gb24gaGlzIGhhYml0dWFsIHBlYWtzLiAKQnV0IGl0IHdhcyB0aGUgd3JvbmcgcmVzcG9uc2UgdW5kZXIgdGhlIHNwZWNpYWwsIG5vbiBuYXR1cmFsLCBjaXJjdW1zdGFuY2VzIG9mIHNjdWJhIGRpdmluZy4uIApJdCdzIGV2ZW4gbW9yZSBmdW4gaWYgdGhleSBzdHJ1Z2dsZSwgYmVjYXVzZSB0aGVuIHNlY3VyaXR5IHN0cmFwcyB0aGVtIHRvIGEgZ3VybmV5IHRvIGtlZXAgdGhlbSBmcm9tIHRocmFzaGluZy4gClN0aWxsLCB0aGVyZSdzIHNvbWV0aGluZyBpbiB0aGUgaHVtYW4gcHN5Y2hlIHRoYXQgbG92ZXMgdG8gdGFrZSBhIGNoYW5jZS4gSXQncyBvbmUgb2YgdGhlIHRyYWl0cyB0aGF0IHNldHMgb3VyIG1pbmRzIGFwYXJ0IGZyb20gdGhlIGFydGlmaWNpYWwgbWluZHMgb2YgbWFjaGluZXMuIApSZWdhcmRsZXNzIG9mIHdoaWNoIHlvdSBhcmUsIHF1aXR0aW5nIGZvciBhIGNvdXBsZSB3ZWVrcyBjb2xkIHR1cmtleSB3aWxsIHByb2JhYmx5IGF0IGxlYXN0IHJlc2V0IHlvdXIgY3JhdmluZ3MgdG8gYSBtb3JlIHJlYXNvbmFibGUgbGV2ZWwuIFlvdSBmaW5kIHlvdXJzZWxmIHNhdGlzZmllZCBieSBtdWNoIGxlc3Mgc3VnYXIgdGhhbiBiZWZvcmUuCkluc2lkZSBRdWVlbnMnIGlsbGljaXQgYnJvdGhlbCBkaXN0cmljdApXZSBzcGVudCB0aGUgbmV4dCB0d28gSE9VUlMgY29ycmVjdGluZyB0cmFwcyB0aGF0IHRoZSBiYWJvb25zIHB1cnBvc2VmdWxseSBtZXNzZWQgdXAuIFRoZXkgbmV2ZXIgZGlkIGl0IHdoZW4gb25lIG9mIHVzIHdhc24gbG9va2luZyBhdCB0aGVtLiBUaGV5IHdvdWxkIGZpbmQgYSB0cmFwLCB3YWl0IGZvciBvbmUgb2YgdXMgdG8gbG9vayBhdCB0aGVtLCB0aGVuIGZsaXAgdGhlIHRyYXAgYW5kIHNsb3dseSB3YWxrIGF3YXkuClBhdGllbnRzIGFyZSBzZWVuIGluIHRoZSBDbGFyayBVcm9sb2d5IENlbnRlciBvciBpbiB0aGUgSVVPIGNsaW5pYyBpbiB0aGUgRWRpZSBMZXcgV2Fzc2VybWFuIEJ1aWxkaW5nIGF0IFVDTEEuIApIYXJib3VyaW5nIEJ1cyBFbnRodXNpYXN0c1RoZSB3ZWVrZW5kIGF0dHJhY3RzIGEgd2lkZSB2YXJpZXR5IG9mIHBhcnRpY2lwYW50cywgZnJvbSB0aG9zZSBlbmpveWluZyBhIGRheSBvdXQgYXdheSBmcm9tIHRoZSBjYXIgdG8gZGVkaWNhdGVkIGZhbnMgb2YgY2xhc3NpYyBidXNlcyBhbmQgcmVhbCBhbGUgZHJpbmtlcnMuIEl0IGlzIGNvbW1vbiB0byBzZWUgcGFydGljaXBhbnRzIHdyaXRpbmcgYW5kIGNvbXBhcmluZyBsaXN0cyBub3Qgb25seSBpbmNsdWRpbmcgdGhlIHR5cGUgYW5kIG51bWJlciBwbGF0ZXMgb2YgYnVzZXMgdGhleSB0cmF2ZWxsZWQgb24sIGJ1dCBhbHNvIHRoZSBwdWJzIHRoZXkgaGF2ZSB2aXNpdGVkIGFuZCB3aGF0IHJlYWwgYWxlcyB0aGV5IGhhdmUgc2FtcGxlZC4gQSA1NCBwYWdlIFZlaGljbGUgU3VwcGxlbWVudCwgd2hpY2ggcHJvdmlkZXMgbW9yZSBpbmZvcm1hdGlvbiBhcyB0byB0aGUgdmVoaWNsZXMgdGFraW5nIHBhcnQuCkhpcyB3ZWFrbmVzcyBob3dldmVyLCBpcyB0aWx0LgpNeSBmcmllbmQgaGFzIHNvbWUgY2F0IHN0dWZmIHRvIHRha2UgY2FyZSBvZiBzb21lIG9mIHRoYXQud3V0c2RhZGlmZnJlbmNlICAxIHBvaW50ICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ29JIGhhdmUgcGFya2VkIG9uIHRoZSB3ZWVrZW5kcyBpbiBQYXJraW5nIFN0cnVjdHVyZSBJSSAobmV4dCB0byBTdWJ3YXkpIGFuZCBpbiB0aGUgZmFjdWx0eSBwYXJraW5nIG5leHQgdG8gdGhlIGJvb2tzdG9yZSBhbmQgaGF2ZSBub3QgZ290dGVuIGFueSB0aWNrZXRzLiAKU21va2UgQXV0b2Rlc2sgU29mdGltYWdlIEF1dG9kZXNrIFQgU3BsaW5lcyBQbHVnIGluIGZvciBSaGluby4gClRoZSBzdHJlc3Mgb24gdGhlIGJvZHkgYW5kIG1pbmQgZm9yIHNvbWVvbmUgd2hvIGhhcyBzbW9rZWQgZm9yIG1hbnkgeWVhcnMgcXVpdHRpbmcgc21va2luZyBjb2xkIHR1cmtleSB3aGlsZSBwcmVnbmFudCBjYW4gYmUgZGFuZ2Vyb3VzLiAKTWl4IGEgc3Bvb25mdWwgb2YgdGhlIGJhdHRlciBpbnRvIHRoZSBtaWxrIGFuZCBtZWx0ZWQgYnV0dGVyLCB0aGVuIHJlY29tYmluZSB3aXRoIHRoZSBlZ2cgYmF0dGVyLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTIgaG91cnMgYWdvV2FzIGhlIT8gSGUgZGlkbid0IGp1c3Qgc2F5ICJ0aGlzIHZpZGVvIGlzIHRvbyBzaG9ydCB0byBiZSBjb25jbHVzaXZlIGV2aWRlbmNlIG9mIGFueXRoaW5nIiBoZSBwdWJsaWNseSBwcm9tb3RlZCBmYXIgcmlnaHQgY29uc3BpcmFjaWVzIHRoYXQgaXQgd2FzIGZha2VkIHRoZXJlYnkgbGVnaXRpbWl6aW5nICJMZ2VucHJlc3NlIiBmYW50YXNpZXMuIApDb25zb2xpZGVyIDogdW5lIGZvaXMgcXVlIGNlcyBjaGFuZ2VtZW50cyBzb250IGFjcXVpcywgaWwgZXN0IGltcG9ydGFudCBkZSBsZXMgaW5zdGFsbGVyIGRhbnMgbGEgZHVyZSwgZGUgdnJpZmllciBxdSdpbHMgInJzaXN0ZW50IiAgdG91dGVzIGxlcyBjaXJjb25zdGFuY2VzIDogZGVzIHJlcGFzIGNvbnZpdmlhdXggb3UgZmVzdGlmcywgZGVzIHZhY2FuY2VzLCBkZXMgbW9tZW50cyBkZSBzdHJlc3MsIC4gVG91dCBlbiBuZSBzJ2lucXVpdGFudCBwYXMgc2kgb24gYSB1bmUgInJlY2h1dGUiIHBvbmN0dWVsbGUgOiBsYSB2aWUgbidlc3QgcGFzIHVuIGxvbmcgZmxldXZlIHRyYW5xdWlsbGUgIS4gClBvaW50ZWQgdG9lIHNob2VzIGxpa2UgdGhlc2UgYXJlIHRoZSBtb3N0IG9idmlvdXMgZXhhbXBsZSBvZiBvdXRzaWRlIGZvcmNlcyBjYXVzaW5nIGEgYnVuaW9uIHRvIGZvcm0uIEl0J3MgYWxzbyBvbmUgb2YgdGhlIHJlYXNvbnMgd2h5IHdvbWVuIHN1ZmZlciBmcm9tIGJ1bmlvbiBwYWluIG1vcmUgb2Z0ZW4gdGhhbiBtZW4gZG8uIEJ1dCBhbnkgc2hvZSB0aGF0IHJlc3RyYWlucyB0aGUgbmF0dXJhbCB3aWR0aCBvZiB5b3VyIGZvb3QgYXJvdW5kIHRoZSB0b2VzIGFyZWEgY2FuIHVsdGltYXRlbHkgbGVhZCB0byBhIGJ1bmlvbi4uIApUaGV5IGNyZWF0ZWQgVHJ1bXAgdGhyb3VnaCB5ZWFycyBvZiBwcm9wYWdhbmRhLCBtZWRpYSBkaXNpbmZvcm1hdGlvbiBhbmQgY29udHJvbGxlZCBvcHBvc2l0aW9uLiBUaGV5IGNyZWF0ZWQgdGhlIFRlYSBQYXJ0eSB0aGF0IGhhcyBsZWQgdG8gVHJ1bXAsIHRoZXkgZm9zdGVyZWQgdGhpcyBmZWFyIG9mIGltbWlncmFudHMsIGhhdHJlZCBvZiAicG9saXRpY2FsIGVsaXRlcyIgYXMgYSBkaXN0cmFjdGlvbiBmcm9tIHRoZSByZWFsIGVsaXRlcyB0aGF0IHJ1biB0aGUgc2hvdywgYW5kIGxvYXRoaW5nIG9mIHNjaWVuY2UgYW5kIGV4cGVydGlzZS5JZiB0aGUgS29jaCBicm90aGVycyB0cnkgdG8gdW5zZWF0IFRydW1wLCB3aGF0IGNvbWVzIG5leHQgd2lsbCBiZSB3b3JzZS5jaGVzdGVydG9yb250byAgMyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvV2hpbGUgSSBhZ3JlZSB0aGlzIGlzIGEgYml0IG92ZXIgYmxvd24uIApIb3cgaW1wb3J0YW50IG9mIGEgcGVyc29uIGRvIHlvdSBoYXZlIHRvIGJlIHRvIHNvbWVib2R5IGZvciB0aGVtIHRvIGhhdmUgMTQgZGlmZmVyZW50IHdheXMgdG8gZ2V0IGEgaG9sZCBvZiB5b3U/ClRoZSBDZW50ZXIgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbiBzdGF0ZWQgdGhhdCB0aGVyZSB3ZXJlIDIuNyBtaWxsaW9uIGRlYXRocyBpbiBBbWVyaWNhIGluIDIwMTYsIHdoaWNoIHdlIGNhbiBhdmVyYWdlIG91dCB0byBhYm91dCA3MzAwIGVhY2ggZGF5LiBJZiB3ZSBjYW4gYXNzdW1lIDE1JSBvZiB0aGVzZSBwZW9wbGUgYXJlIGRvbm9ycywgdGhhdCAxLDA5NSBwZW9wbGUgdGhhdCBhcmUgcmVnaXN0ZXJlZC4gSW4gY29tcGFyaXNvbiwgdGhhdCBudW1iZXIgd291bGQgYmUgYXBwcm94aW1hdGVseSA2LDU3MCBpZiBwZW9wbGUgd2VyZSBkb25vcnMgYXV0b21hdGljYWxseSAgIGEgNjAwJSBpbmNyZWFzZSBmcm9tIHRoZSBwcmV2aW91cyBudW1iZXIuIApEZXNwaXRlIGV2ZXJ5IG90aGVyIGR1ZGUgKG9rYXksIGl0cyBvbmx5IHRocmVlIGd1eXMuIApFdmVyeSB0aW1lIG15IGJvc3MgaGFzIHRoZSByaWdodCB0byB0ZWxsIG1lLCAiWW91IG1lc3NlZCB0aGlzIHVwLCB3ZSBuZWVkIHRvIGZpeCBpdCBhbmQgbWFrZSBpdCBiZXR0ZXIiLCBJIGhhdmUgaGFkIHRvIGFwb2xvZ2l6ZSB0byBjbGllbnRzLCB0YWtlIGFkZGl0aW9uYWwgdHJhaW5pbmcsIHdvcmsgd2l0aCBvdGhlcnMgdG8gZGV2ZWxvcCBuZXcgcHJvY2Vzc2VzLCBhbmQgSSBoYXZlIGxlYXJuZWQgc29tZXRoaW5nIGZyb20gZWFjaCBhbmQgZXZlcnkgZXhwZXJpZW5jZS4gRXZlcnkgc2luZ2xlIHRpbWUgdGhhdCBoYXMgaGFwcGVuZWQsIG15IGNvbXBhbnkgaGFzIGNob3NlbiB0byB3b3JrIHdpdGggbWUgdG8gaGVscCBtZSBsZWFybiBzb21ldGhpbmcgZnJvbSB0aGUgZXhwZXJpZW5jZS4gCkZhc3QgVGlwOiBUcmFpbiB5b3Vyc2VsZiB0byBrZWVwIHlvdXIgZXllcyB1cCB3aGlsZSB0aGlua2luZyBhbmQgdGFsa2luZy4gT25lIHByYWN0aWNlIGV4ZXJjaXNlOiBQbGFjZSBibGFuayBQb3N0IGl0IG5vdGVzIGFjcm9zcyBhIGxhcmdlIHdhbGwgaW4geW91ciBob21lIG9yIG9mZmljZS4gQXNrIHlvdXJzZWxmIHF1ZXN0aW9ucyBhbmQgaG9sZCB5b3VyIGV5ZXMgb24gYSBQb3N0IGl0IHdoaWxlIGFuc3dlcmluZy4gCkNoaWNrYWRlZSB3aGVlZQoiVG8gaGF2ZSB0aG9zZSBraW5kcyBvZiBpbml0aWF0aXZlcyBiZSBzdWNoIGEgYmlnIHBhcnQgb2YgbXkgam9iIG1ha2VzIG1lIHZlcnkgaGFwcHkgYW5kIHJlYWxseSBwcm91ZCB0byB3b3JrIGF0IHRoaXMgY29tcGFueSwiIHNheXMgS2F0ZXMsIHdobyBoYXMgYmVlbiB3aXRoIExhYmF0dCBzaW5jZSBzaGUgd2FzIGEgcG9zdCBncmFkdWF0ZSBzdHVkZW50LiAiSXQganVzdCBnaXZlcyB5b3UgYSByZWFsIHNlbnNlIG9mIGFjY29tcGxpc2htZW50IGFuZCBpbXBhY3QgaW4gdGhlIHdvcmxkLiIuIApFYXIgY2FuZGxpbmcsIGEgdHJhZGl0aW9uYWwgdGhlcmFweSB1c2VkIGJ5IHRoZSBBbmNpZW50IEdyZWVrcywgd2FzIHBvcHVsYXJpc2VkIGJ5IHRoZSBIb3BpIEluZGlhbiBUcmliZSBvZiB0aGUgQW1lcmljYW4gU291dGggV2VzdC4gVGhlIG1vZGVybiBpbmNhcm5hdGlvbiBvZiB0aGUgdHJlYXRtZW50IGlzIHByaW1hcmlseSBiYXNlZCBvbiB0aGUgZm9ybSB1c2VkIGJ5IHRoZSBIb3BpIChtZWFuaW5nICJQZWFjZWZ1bCBQZW9wbGUiKSBJbmRpYW5zIHdobyBwb3NzZXNzIGdyZWF0IG1lZGljaW5hbCBrbm93bGVkZ2UgYW5kIHNwaXJpdHVhbGl0eS4gVGhlIEhvcGkgTmF0aW9uIGFyZSByZW5vd25lZCBmb3IgdGhlaXIgZXh0ZW5zaXZlIGhlYWxpbmcgc2tpbGxzLi4gCkNhc2ggaW4gMSBNaWxsaW9uIGNoaXBzIC4gCkRKTHVya2VyIHUKV2lsbCBoYXZlIGxvdHMgdG8gc2F5IGF0IHRoYXQgdGltZS4gCkl0IGlzIGFtYXppbmcgd2hhdCB5b3Ugd2lsbCBzbWVsbCBhdCBhIGNhdCdzIGhlaWdodCB2ZXJzdXMgeW91ciBvd24uLiAKQ3JhaWdzbGlzdCdzIGNoaWVmIGV4ZWN1dGl2ZSB3b3VsZCBub3QgY29tbWVudCBvbiB3aGV0aGVyIHRoZSBjb21wYW55IGhhcyBwcm92aWRlZCBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWxzIHdpdGggYW55IGlkZW50aWZ5aW5nIGluZm9ybWF0aW9uIGFib3V0IHRob3NlIHdobyBwb3N0IGVyb3RpYyBzZXJ2aWNlcyBhZHMuCkJ1dCB0aGVyZSBpcyBhbHdheXMgdGhhdCBDaW5kZXJlbGxhLiAKUmVja2xlc3NuZXNzLiAKVGhlcmUgaXMgdGhlIG9wdGlvbiBvZiBwdXJjaGFzaW5nIGEgcm91bmQgdHJpcCB0aWNrZXQuMSB2b3RlU2hvdyBhbGwgYW5zd2VycyJSbSA0MDcgd2FzIGdvb2QgRVhDRVBUIGZvciBub2lzZSBwcm9ibGVtLiAKQW5kIHF1ZXN0aW9uIHRoZSB3aG9sZSBub3Rpb24gb2YgY3J1ZWx0eSwgaXRzIG1lYW5pbmcsIGFuZCB0aGUgcG9ydGFiaWxpdHkgb2YgdGhlIGNvbmNlcHQgYWNyb3NzIGFuaW1hbHMgb2YgYWxsIHR5cGVzLiAKSmUgbWUgc3VpcyByZ2FsZSBkZSBib3V0IGVuIGJvdXQgYXZlYyB1biBkbGljYXQgdGFydGFyZSBkZSB0aG9uIGF1IHNvamEgYXZlYyB1bmUgY3VtZSBkJ2h1aXRyZSwgdW4gMS8yIGhvbWFyZCBicmV0b24gIGwnZXN0cmFnb24gKGMnZXN0IGxhIHBsZWluZSBzYWlzb24gZGUgY2V0dGUgbWVydmVpbGxlIGRlcyBtZXJzKSwgdW5lIHRhcnRlIGF1IGNpdHJvbiBhY2lkdWxlIGV0IG9uY3R1ZXVzZSBhdmVjIHVuZSAidmluYWlncmV0dGUiIGNpdHJvbiB2YW5pbGxlLi4gCktldmluIHdhcyBib3JuIG9uIEp1bmUgMTYsIDE5NTEgaW4gQWJib3RzZm9yZCwgQkMuIApLbGluZ2VsaG9mZXIgc2FpZCBzaGUgaGFzIGEgcmV3YXJkaW5nIHRhc2sgb2YgbG9va2luZyBhdCBwaWVjZXMgY2xvc2VseSBhbmQgc2VlaW5nIGlmIHNoZSBjYW4gZmluZCB3YXlzIHRvIGlkZW50aWZ5IHdoZXJlIHRoZXkgY2FtZSBmcm9tLCB3aGVyZSB0aGV5IHdlcmUgbWFkZSBhbmQgd2hvIHRoZXkgYmVsb25nZWQgdG8uCldoZW4gZG9uZSBwcm9wZXJseSwgeW91ciBzaHVmZmxlZCBjaGlwcyBzaG91bGQgYWx0ZXJuYXRlIGJldHdlZW4gdGhlIHR3byBjb2xvcnMuIElmIHlvdSBzZWUgdHdvIG9yIG1vcmUgb2YgdGhlIHNhbWUgY29sb3IgbmV4dCB0byBlYWNoIG90aGVyIGluIHRoZSBzdGFjaywgeW91IHNob3VsZCByZWV2YWx1YXRlIHlvdXIgdGVjaG5pcXVlLiAKV2hpbGUgc29tZSBvZiB1cyBtYXkgZXhwZXJpZW5jZSBwb3NpdGl2ZSBmaW5hbmNpYWwgc2hvY2tzIG92ZXIgb3VyIHdvcmtpbmcgeWVhcnMsIHNwZW5kaW5nIHRoZSBzdXJwcmlzZXMgaXMgbXVjaCBlYXNpZXIgdGhhbiBvdmVyY29taW5nIHRoZSBkZWZpY2llbmNpZXMuIEV2ZW4gUmljaGFyZCBUaGFsZXIgcmVzcG9uc2UgdG8gaGlzIFVTJDEgbWlsbGlvbiBwbHVzIE5vYmVsIFByaXplIHdpbiB3YXMgdG8gdG8gc3BlbmQgaXQgYXMgaXJyYXRpb25hbGx5IGFzIHBvc3NpYmxlISBtb3N0IHJhdGlvbmFsIHdheSB0byBwbGFuIGZvciByZXRpcmVtZW50IG1heSB0aGVyZWZvcmUgYmUgdG8gcGxhbiBmb3IgdGhlIHdvcnN0LCBob3BlIGZvciB0aGUgYmVzdCwgYW5kIGluc3VyZSBhZ2FpbnN0IHRoZSByaXNrcyB0aGF0IHlvdSBjYW4uIElmIHlvdSBhcmUgbHVja3kgZW5vdWdoIHRvIGF2b2lkIHVuZm9yZXNlZW4gZmluYW5jaWFsIHNob2NrcyBsaWtlIHVuZW1wbG95bWVudCwgaGVhbHRoIHByb2JsZW1zLCBvciBkaXZvcmNlLCB5b3UgY2FuIHJldGlyZSB5b3VuZywgc3BlbmQgbW9yZSBpbiByZXRpcmVtZW50LCBvciBnaXZlIG1vcmUgYXdheSB0byB5b3VyIGNoaWxkcmVuIG9yIGNoYXJpdHkuCllvdSBnZXQgdXNlZCB0byB0aGUgY29sZCB3YXRlciBtdWNoIG1vcmUgcXVpY2tseSB0aGFuIHlvdSdkIHRoaW5rLiBTdXBlciByZWZyZXNoaW5nIGFuZCBzdXBlciBlbmVyZ2l6aW5nLiBFbmNvdXJhZ2VzIHF1aWNrIGFuZCBlZmZpY2llbnQgc2hvd2VycywgdXNlcyBtaW5pbWFsIHdhdGVyLCBnaXZlcyB0aGUgd2F0ZXIgaGVhdGVyIGEgcmVzdC4gUGx1cywgaWYgaXQgY29sZCBpbiB5b3VyIHBsYWNlLCB5b3UnbGwgYWN0dWFsbHkgZmVlbCBuaWNlIGFuZCBjb21meSB3aGVuIHlvdSBnZXQgb3V0LCBpbnN0ZWFkIG9mIHNoaXZlcmluZyBpbiB5b3VyIHRvd2VsLgpDbGllbnRzIHdobyBhcmUgdHlwZSAxIGFyZSBpbnN1bGluIGRlcGVuZGVudDogQXZvaWQgdmlnb3JvdXMgbWFzc2FnZSBoZWF0L2ljZSBhcHBsaWNhdGlvbnMgb3ZlciBzaXRlcyBvZiByZWNlbnQgaW5zdWxpbiBpbmplY3Rpb24gZm9yIDI0IGhvdXJzLiBNYXNzYWdlIHRoZXJhcHkgd2FzIGZvdW5kIHRvIGluY3JlYXNlIGluc3VsaW4gYWJzb3JwdGlvbiBhZG1pbmlzdGVyZWQgYnkgc3ViY3V0YW5lb3VzIGluamVjdGlvbiAoNSw2KS4gVGhlIGluY3JlYXNlZCBhYnNvcnB0aW9uIHByb2R1Y2VkIGJ5IG1hc3NhZ2UgY291bGQgY2F1c2Ugb3IgY29udHJpYnV0ZSB0byBjb21wbGljYXRpb25zIHN1Y2ggYXMgaHlwb2dseWNlbWlhLgpBbnlvbmUgdGhhdCBrbm93cyBtZSBjYW4gdm91Y2ggdGhhdCBJJ20gbm90IGEgYmlnIHN0YXllciB3aGVuIGl0IGNvbWVzIHRvIGRyaW5raW5nIGFzIEkgZ2V0IHZlcnkgc29jaWFsbHkgZXhjaXRlZCBhbmQgbm9ybWFsbHkgZmFsbCBpbiBhIGhlYXAgZWFybHksIGhhIGhhLiBTbyBhZnRlciBhbGwgdGhpcyBhbmQgdG8gZXZlcnlvbmUncyBhbWF6ZW1lbnQgSSB3YXMgc3RpbGwgYXQgdGhlIGNhc2lubyBhdCA2YW0gU3VuZGF5IG1vcm5pbmcgYW5kIHRoYXQncyB3aGVuIGl0IGFsbCBoYXBwZW5lZC4gCkhlIGZpbmFsbHkgZXhwbGFpbmVkIHRob3VnaC4gCihOb3RlOiB0aGlzIHdhcyBhdCBqdXN0IGFib3V0IHRoZSB0aW1lIHdoZW4gdGhlIEJyaXRzIGFubm91bmNlZCB0aGUgaW50cm9kdWN0aW9uIG9mIGEgNCwwMDAgcG91bmRlciBpbnRvIGl0cyBhcnNlbmFsIGFib3V0IHRoZSBsYXJnZXN0IGJvbWIgYXQgdGhlIHRpbWUuKSBTdGV2ZSBCZW5uaW9uLCBJbnZlbnRpdmUgR2VuaXVzLCBhbmQgSGlzIExvdmVseSBBc3Npc3RhbnQsIEtpdHR5IFBlbm5lbGwsIFN0YW5kIEJldHdlZW4gdGhlIEVhcnRoIGFuZCBEZXN0cnVjdGlvbiBXaGVuIGEgRmxhbWluZyBNb25zdGVyIFRocmVhdGVucyB0byBEZXZvdXIgYW5kIERlc3Ryb3kgQ2l2aWxpemF0aW9uISIgaXQgc2F5cywgc29tZXdoZXJlLCBvZiB0aGUgImZsYW1pbmcgbW9uc3RlciIgYXRvbS4gCkEgc3RlcHBlZCBjYXJlIGFwcHJvYWNoIGludm9sdmluZyBpbmNyZW1lbnRhbGx5IG1vcmUgc3RydWN0dXJlZCBhbmQgY29tcHJlaGVuc2l2ZSBwYXRpZW50IGVkdWNhdGlvbiBpcyByZXF1aXJlZCB0byBpbmZsdWVuY2UgcGF0aWVudCBiZWxpZWYgc3lzdGVtcyBhbmQgY29uY2VybnMgYWJvdXQgYWN0aXZpdHkuCklmIHlvdSBmZWVsIHRoYXQgYSBoYW5kIGlzbid0IHdvcnRoIHBsYXlpbmcsIGRvbid0IHBsYXkgaXQuIApFY29ub21pc3RzIHdlcmUgZm9yZWNhc3RpbmcgYSBnYWluIG9mIGp1c3QgMSwyMDAgaW4gRmVicnVhcnkuLiAKQW5kIG1pbGxpb25zIG9mIEFtZXJpY2FucyBicmluZyBkcnVncyBpbnRvIHRoZSBjb3VudHJ5IGlsbGVnYWxseSBmcm9tIE1leGljby4gCkhpcyB5b3VuZ2VyIGJyb3RoZXIsIEVyaWMgUGFkZG9jaywgY2FsbGVkIGhpbSB0aGUgb2YgbWljcm9hZ2dyZXNzaW9uICAgbmFyY2lzc2lzdGljLCBkZXRhaWwgb3JpZW50ZWQgYW5kIG1heWJlIGJvcmVkIGVub3VnaCB3aXRoIGxpZmUgdG8gcGxhbiBhbiBhdHRhY2sgdGhhdCB3b3VsZCBtYWtlIGhpbSBmYW1vdXMuIApUaGUgR2FHYSBFUCBjYWxsZWQgIkFWZXJ5IEdhR2EgSG9saWRheSIgcmVsZWFzZWQgZHVyaW5nIHRoZSBzZWFzb24gb2YgMjAxMSBjYW4gYmUgZm91bmRvbiBpVHVuZXMsIHRoZSBzb25ncyBvbiBpdCBhcmUgaGVyIG93biB2ZXJzaW9ucyBvZiBXaGl0ZSBDaHJpc3RtYXMgT3JhbmdlIENvbG9yZWQgU2t5IC4gMTA4IDExMCkgR2FHYSBjb3ZlcnMgIkltYWdpbmUiIGJ5IEpvaG4gTGVubm9uLCAiVml2YSBMYSBWaWRhIiBieUNvbGRwbGF5ICJEJ3llciBNYWsnZXIiIGJ5IExlZCBaZXBwZWxpbi4gClRoZSBrZXkgdG8gYW55IHJlc2VhcmNoIHN0dWR5IGlzIG1ha2luZyBzdXJlIHRoYXQgeW91ciBjb21wYXJpc29uIGdyb3VwcyBhcmUgbm90IGNvbXByb21pc2VkLiAKVGhhdCBtZWFucywgNSUgb2YgdGhlIHRpbWUsIEdhcnksIHdpdGggaGlzIEdUTyBzdHJhdGVneSwgd2lucyAxQkIuIApNaWdodCBoYXZlIGV2ZW4gcHJlZGljdGVkIHRoYXQgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIHdvdWxkIGJlIGdpdmVuIGZhciB0b28gbXVjaCBvZiBhIGZyZWUgcGFzcyBieSB0aGUgIkxlZnQiIHRvIGRvIHdoYXRldmVyIHRoZXkgc2F3IGZpdCwgYW5kIHdoYXQgdGhleSBzYXcgZml0IHRvIGdvdmVybiBhcyBhIENlbnRyaXN0IFJpZ2h0IHBhcnR5LCBlc3BlY2lhbGx5IHdpdGhvdXQgYW55IHByZXNzdXJlIGZyb20gdGhlaXIgYmFzZS4uIApPbmNlIHRoZXkgZmlndXJlIG91dCBpdCBvdXQsIHRoZXkgYmUgc2ltdWx0YW5lb3VzbHkgZGlzYXBwb2ludGVkIGFuZCByZWxpZXZlZCB0byBmaW5kIHRoYXQgaHVtYW5pdHkgaXMgZXh0aW5jdC4gV2hpbGUgZGlzY292ZXJpbmcgYW5vdGhlciBpbmRlcGVuZGVudCBzYXBpZW5jZSB3b3VsZCBiZSBhIG1vbnVtZW50YWwgbW9tZW50IGZvciB0aGVtLCBkaXNjb3ZlcmluZyBvbmUgdGhhdCBhIGhlYWRzdGFydCBvbiB0aGVtIG9mIHRlbnMgb2YgdGhvdXNhbmRzIG9mIHllYXJzIGFsc28gcG9zZXMgY29uc2lkZXJhYmxlIHJpc2tzLiBUaGV5IGhhcHB5IGp1c3QgdG8gbGV0IHRoZSB4ZW5vIGFyY2hhZW9sb2dpc3RzIGRvIHRoZWlyIGpvYi4uIApNeSBzdGFwbGUgaXMgYSBwcmV0dHkgYmFzaWMgc2FsYWQgd2l0aCBjaGlja2VuIChJIGp1c3Qgc2hyZWQgYSBjaGlja2VuIGJyZWFzdCBhbmQgYWRkIGl0KS4gSSBhbHNvIGxvdmUgdGFjbyBzYWxhZHMgZm9yIHZhcmlldHkuIApCdXQgc2xvd25lc3MgY2FuIGJlIGNhdXNlZCBieSBhIHNsb3cgY29ubmVjdGlvbiBvciBhIGRpc3RhbnQgc2VydmVyLiAKIldoYXQ/IFdoYXQgdGhhdD8gTm8sIGl0IHdhcyBhIGJlZXIgY29tbWVyY2lhbCwiIGV0Yy4KSSBjYWxsZWQgYWhlYWQgYW5kIGFza2VkIGZvciBhIGNhYiBhdCA4OjMwcG0gZXhhY3RseSBzbyBJIGNvdWxkIGdldCB0byB0aGUgaW1wcm92IHNob3cgYSBsaXR0bGUgYmVmb3JlIG5pbmUuIApJIGtub3cuIApGb3Igc2FsZSwgb25lIGJyYW5kIG5ldywgbmV2ZXIgdXNlZCBwaXBlbGluZS4gVGhpcyBiZWF1dHkgaXMgYSBiYXJnYWluIGF0IDQuNSBiaWxsaW9uIGFuZCBJIHN1cmUgaWYgeW91IGFyZSBzZXJpb3VzIHdlIGNhbiB0aHJvdyBpbiBhIG5pY2Ugc2V0IG9mIHdpbnRlciB0aXJlcy4gSXQgaGFkIG1hbnkgcGVvcGxlIGxvb2sgYXQgaXQgYnV0IG1vc3Qgb2YgdGhlbSBkb24gd29yayBhbmQgY2FuIGFmZm9yZCBzdWNoIGEgbmljZSBwaWVjZSBzbyBpdCBzdGlsbCB1cCBmb3IgZ3JhYnMhIFNoZSBjb21lcyB3aXRoIGFsbCB0aGUgYWNjZXNzb3JpZXMgeW91IHdhbnQgaW4gYSBwaXBlbGluZSwgc2F0IG5hdiwgcG93ZXIgd2luZG93cyBhbmQgZnJlc2ggb2lsIGFsbCB0aGUgdGltZS4gCkdyZXcgdXAgc25vd2JvYXJkaW5nIGluIG15IGplYW5zIGFuZCBJIGxpa2VkIGl0LCBidXQgaWYgSSBmZWxsIG15IGRheSB3b3VsZCBiZSBjdXQgc2hvcnQuIEl0IHdhcyBhIGNsYXNzaWMgY2FzZSBvZiBmYXNoaW9uIG92ZXIgZnVuY3Rpb24sIGhlIHNhaWQuIApDaGF0IHdpdGggdGhvdXNhbmRzIG9mIHNpbmdsZXMgb25saW5lICAgY29tcGxldGVseSBmb3IgZnJlZS5DaGF0IHdpdGggbG9jYWwgcGVvcGxlIG5lYXIgeW91ISBUaGlzIHBhZ2UgbGlzdHMgYWxsIHRoZSBwdWJsaWMgY2hhdCByb29tcyB0aGF0IHlvdSBjYW4gZW50ZXIuIE1hdHVyaXR5IGlzIG9mIHV0bW9zdCBpbXBvcnRhbmNlIHdoZW4gdXNpbmcgb3VyIGZyZWUgc2luZ2xlcyBjaGF0IHJvb20uIENhbGxlcnMgdG8gdGhlIGNoYXRsaW5lIGNhbiBtZXNzYWdlIGVhY2ggb3RoZXIgb3Igc2tpcCBpZiBub3QgaW50ZXJlc3RlZCwgc2ltaWxhciB0byBob3cgd29yayBidXQgb3ZlciB0aGUgcGhvbmUuIApUaGlzIGFydGljbGUgd2lsbCBkZWZpbml0ZWx5IGhlbHAgeW91IGlmIHlvdSBhcmUgZ29pbmcgdG8gam9pbiB0aGlzIGFtYXppbmcgcG9rZXIgd2Vic2l0ZS4gCldlIGluc3RlYWQgeWVsbCBhdCBlYWNoIG90aGVyLiAKQ29uZ3JhdHVsYXRpb25zISBUaGUgZmFjdCB0aGF0IHlvdSBhcmUgYWJlZ2lubmVyIHBva2VyIHBsYXllciBtZWFucyB5b3UgYXJlIGluIGZvciBhbiBleGNpdGluZyBuZXcgZGlzY292ZXJ5LiAKWW91IG1heSBoYXZlIHRvIHVzZSBzZXJ2aWNlcyB0aGF0IHlvdSBuZXZlciB0aG91Z2h0IHlvdSB1c2UuIFRoaW5ncyBsaWtlIGZvb2QgYmFua3MsIGZvb2QgYWlkLCBNZWRpY2FpZC4gCjcgQ2FyZCBMb3cgSG9sZCBpcyB0aGUgc2FtZSBhcyBzZXZlbiBjYXJkIHN0dWQgZXhjZXB0IHRoZSBjYXJkIHdpdGggdGhlIGxvd2VzdCB2YWx1ZSBpbiB0aGUgImRvd24iIGNhcmRzIGFuZCBhbGwgY2FyZHMgaW4gdGhhdCBwbGF5ZXJzIGhhbmQgd2l0aCB0aGUgc2FtZSB2YWx1ZSBhcmUgd2lsZCAoY2FuIGJlIGFzc2lnbmVkIGFueSB2YWx1ZSkgVGV4YXMgSG9sZCBlbSBpcyBhIHZhcmlhdGlvbiBvZiBzZXZlbiBjYXJkIHN0dWQgd2l0aCB0d28gY2FyZHMgZG93biBmb3IgZWFjaCBwbGF5ZXIgd2l0aCBhIHJvdW5kIG9mIGJldHRpbmcgZm9sbG93ZWQgYnkgdGhyZWUgY29tbXVuaXR5IGNhcmRzIGFuZCBhbm90aGVyIHJvdW5kIG9mIGJldHRpbmcuIAoiSW4gdGhlIHZlcnkgZXNzZW5jZSBvZiBteSBiZWluZywgSSBhbSBhIHBlb3BsZSBwZXJzb24sIiBNaWtrbyB0b2xkIHVzLiAiSSBsb3ZlIHRvIGhhbmcgb3V0IGFuZCBsYXVnaCBhbmQgaGF2ZSBhIGdvb2QgdGltZS4gQnV0IHdoZW4gaXQgY29tZXMgdG8gY2hvb3NpbmcgYmV0d2VlbiBteSByZW50IGFuZCB5b3VycywgSSB3b24ndCBoZXNpdGF0ZSB0byBzdGFiIHlvdSBpbiB0aGUgYmFjayB1bnRpbCB5b3UgZG8geW91ciBiZXN0IEp1bGl1cyBDYWVzYXIgaW1wcmVzc2lvbi4gCjUuIEN5Y2xvcHMgQ2FuIFNpbmcgYW5kIERhbmNlOiBJIGhhZCBubyBpZGVhIEphbWVzIE1hcnNkZW4gaXMgYSBzaW5nZXIsIGJ1dCBoZSB0b3JlIGRvd24gVmVnYXMgV2VkbmVzZGF5IG5pZ2h0IGF0IHRoZSBIYWlyc3ByYXkgcHJlc2VudGF0aW9uLiAKRGVyIGwgU3RpbCBkZXIgWmltbWVyIHVuZCBhdWNoIGRlciBSZXN0YXVyYW50cyBwYXNzdCB6dW0gQnJhbmRlbmJ1cmdpc2NoZW4gdW5kIGhhdCBlaW5lbiBsZWljaHRlbiBIYXVjaCB2b24gRW5nbGFuZC4gCkFic29sdXRlbHkgbm90aGluZy4gSG93ZXZlciwgdGhlIHN1cnZleSBzdGF0ZXM6ICJBbm9ueW1pemVkIHN1cnZleSByZXN1bHRzIHdpbGwgYmUgbWFkZSBwdWJsaWNseSBhdmFpbGFibGUgdW5kZXIgdGhlIE9EYkwgMS4wIGxpY2Vuc2Ugd2hlbiB0aGUgc3VydmV5IGNsb3Nlcy4iIEhvcGVmdWxseSBhbnkgdHJvdWJsZXNvbWUgc3VibWlzc2lvbnMgY2FuIGJlIGlkZW50aWZpZWQgYWZ0ZXIgdGhlIGZhY3QuIEZ1cnRoZXJtb3JlLCBpZiBJIGRpZCBwdXQgc29tZSBzeXN0ZW0gaW4gcGxhY2UgdG8gcHJldmVudCBkdXBsaWNhdGUgc3VibWlzc2lvbnMsIEkgc3VzcGVjdCB0aGF0IHBlb3BsZSB3b3VsZCBjb21wbGFpbiAoYSkgYWJvdXQgYmVpbmcgdHJhY2tlZCwgYW5kIChiKSBhYm91dCB0aGUgaW5lZmZlY3RpdmVuZXNzIG9mIHN1Y2ggYSBzeXN0ZW0uIApIZSdsbCBhY2NlcHQgdGhlc2UgICBvZiB0aGUgImVzdGVlbSIgaW4gd2hpY2ggaGUgaXMgaGVsZCwgc21pbGUsIGJyYXZlbHkgYW5kIGtlZXAgcGx1Z2dpbmc7IFBlcmhhcHMgU3VuZGF5IG1vcm5pbmcsIChtb3N0IERhZHMgd29uJ3QgZXZlbiBrbm93IHRoZSAnZGF5IGJlZW4gc2V0IGFzaWRlIGZvcid0aGVtKSBoZSB3aWxsIGJlIEkgdGltZSBzaGFsbCBnbywgSWYgd2l0aCBqb3kgeW91ciBhZ2Ugc2hhbGwgc2hpbmUsIHRoZXkhIHRoZSAiaG9tZSBvZiBBaXIuIApXaG8ga25vd3MgaG93IGxvbmcgdGhpcyB2YWx1YXRpb24gd2lsbCBsYXN0IGZvci4uIApGb3IgdGhvc2Ugd2hvIGNsYWltIHNoZSBkaWRuIGVhc2UgYW55b25lIHN1ZmZlcmluZywgSSBjYWxsIGJ1bGxzaGl0ICAgd291bGQgeW91IHJhdGhlciBkaWUgaW4gdGhlIGd1dHRlciBvciBpbiBhIHdhcm0sIGNvbWZvcnRhYmxlIGJlZCB3aXRoIGNsb3RoZXMgYW5kIGEgYmF0aD8gR2V0IHJlYWwuLiAKTW9yZSByZWNlbnRseSBoZSB3YXMgYW4gYWN0aXZlIG1lbWJlciBvZiB0aGUgQnVybGluZ3RvbiBHIE1lbidzIEN1cmxpbmcgTGVhZ3VlLiBBbmQgdGhyb3VnaG91dCBoaXMgZW50aXJlIGFkdWx0IGxpZmUsIFJpY2sgd2FzIGFsd2F5cyBwYXJ0IG9mIGEgcmVndWxhciBwb2tlciBuaWdodDsgdG9vIG1hbnkgdG8gbWVudGlvbiEgUmljaydzIG5leHQgYmlnIGJ1c2luZXNzIGFkdmVudHVyZSB0b29rIHRoZSBmYW1pbHkgdG8gRW5nbGFuZCBpbiAxOTgzLiBIZSBzZXQgdXAgdGhlIEV1cm9wZWFuIG1hbnVmYWN0dXJpbmcgYW5kIHNhbGVzIGRpdmlzaW9uIG9mIEJpZyBPIERyYWluIFRpbGUuIApQb3VydGFudCwgdG91dCBuZSBzZSB2b2l0IHBhcyBkYW5zIGxlIHRyYXZhaWwgZGUgbGEgcG9saWNlLiBMZSBjb21taXNzYWlyZSBCb3VhcmQgICBjb21taXNzYWlyZSBkaXZpc2lvbm5haXJlIGR1IDE4ZSBldCBjaGFyZyBkZSBsYSBaU1AgQmFyYnMgQ2h0ZWF1IHJvdWdlICAgbmUgc2UgbGFzc2UgcGFzIGRlIGxlIHJwdGVyIGV0IG5vdXMgYXVyaW9ucyB0ZW5kYW5jZSAgbGUgY3JvaXJlLiBBdXggYWNjdXNhdGlvbnMgZGUgbmUgcGFzIGRlc2NlbmRyZSBkZSBsZXVycyB2aGljdWxlcywgaWwgcnBvbmRhaXQgIGxhIHNhbGxlIGR1IENvbnNlaWwgZGUgcXVhcnRpZXIgQ2hhcGVsbGUsIGVuY29yZSByY2VtbWVudCwgcXVlIGxlcyBwb2xpY2llcnMgbidhcnJ0ZW50IHBhcyBsZXMgZGxpbnF1YW50cyBlbiBsZXMgaW50ZXJwZWxsYW50IGRlcHVpcyB1bmUgcG9ydGlyZS4gClRoZXJlIGhlIHdhcy4gSSdkIGV4cGVjdGVkIGEgY2xvc2VkIGNhc2tldC4KQ2hpbmVzZSBsaWtlIEhvcnNlcyBmb3IgbWFueSByZWFzb25zLiBIb3JzZSBwcm92aWRlcyBhIGdvb2QgYW5kIHF1aWNrIHRyYW5zcG9ydGF0aW9uIGZvciBwZW9wbGUgYmVmb3JlIGF1dG9tb2JpbGVzLiBIb3JzZSBjYW4gZ2l2ZSBwZW9wbGUgYSByaWRlIHRvIHRoZWlyIGRlc3RpbmF0aW9uLiBUaGVyZWZvcmUsIGhvcnNlIGlzIG5vdCBvbmx5IGEgc3ltYm9sIG9mIHRyYXZlbGluZywgYnV0IGFsc28gYSBzaWduIG9mIHNwZWVkeSBzdWNjZXNzLgpEb24ndCBiZSBhbGFybWVkLiBUaGUgbWF0ZXJpYWwgdGhleSBkbyBwcm92aWRlIGlzIDk1JSB3aXRob3V0IGFueSBmbHVmZiBvciBoeXBlZCB1cCBzYWxlcyBwaXRjaC4gCllvdSB3aWxsIEtOT1cgaW1tZWRpYXRlbHkgaWYgeW91IG1pc3JlYWQgdGhlIHNpdHVhdGlvbiBvZiBub3QuCk5vd2FkYXlzIHdlIGFyZW4ndCBzdXBwb3NlZCB0byBhY2NlcHQgQ2FuYWRpYW4gY29pbiwgYnV0IGl0IGRvZXNuJ3Qgc3RvcCBwZW9wbGUgZnJvbSB0cnlpbmcsIGFuZCBwbGVudHkgb2YgQ2FuYWRpYW4gY29pbiB3aW5kcyB1cCBpbiBVUyBjaXJjdWxhdGlvbiAoY2FuJ3Qgc3BlYWsgaWYgaXQncyB0aGUgc2FtZSB2aWNlIHZlcnNlKS4uIApJIGdvdCBzbyBtYW55IHBvc2l0aXZlIG1lc3NhZ2VzIGFuZCBjYWxscyBmcm9tIHBlb3BsZSB0aGF0IHdoZXJlIGp1c3QgZ2VudWluZWx5IGhhcHB5IHdoaWNoIHdhcyByZWFsbHkgbmljZS4gClBvdWkgc2Egem8gc2tzZW5vc3QgZHJ1aGNoLiBNbm9oIHVkaWEgemlzdWosIGUgamUgdG8gb3ZlYSBqZWRub2R1Y2hpZSBuYXVpIHNhIHNwcnZudSB0ZWNobmlrdSBvZCB0Y2gsIGt0b3IgbWFqIHUgenZsZGxpIHBvcnQuIFBvdHBhbmllIGplIHpydW5vcyBhIG9zdGF0biBMb3ZjaSBwb2tsYWRvdiBzIHNwb2tvam4gYSBocmQgbmEgdG8sIHBvZGVsaSBzYSBvIHN2b2plIHNrc2Vub3N0aS4gCkhlIG5ldmVyIGV2ZXIgdXNlZCB0byBiZSBsaWtlIHRoaXMgZm9yIHRoZSBmaXJzdCAzIHllYXJzIG9mIG91ciByZWxhdGlvbnNoaXAgYW5kIHRoZW4gaGUgZm91bmQgYW4gZXhjdXNlIHRvIGJlY29tZSBoaXMgZmF0aGVyIHdoaWNoIEkgd29uIHN0YW5kIGZvci4gCldoaWxlIHlvdXIgY29pbiBmbGlwcyBnZXQgY2xvc2VyIHRvIDUwIDUwIHRoZSBtb3JlIHRpbWVzIHlvdSBmbGlwLCB5b3VyIHBhcGVyIGNsaXBzIGdldCBjbG9zZXIgdG8gcGkgdGhlIG1vcmUgdGltZXMgeW91IGRyb3AuIApBbGwgbXkga2lkcyBoYXZlIGdyb3duIHVwIHdpdGggbXkgdGVhc2luZyB0aGVtIHNpbmNlIHRoZXkgd2VyZSB0aW55IG9uZXMuIFNvIHVzdWFsbHkgd2hlbiBpIHNlZSBoaW0gYXQgc2Nob29sIGkgZ2V0IG15IHJldmVuZ2UgYnkgeWVsbGluZyAiSEkgS0lEMiBJIExPVkUgWU9VIEFORCBNSVNTIFlPVSBTT09PT09PT08gTVVDSCEgSSBDQU5UIFdBSVQgRk9SIFlPVSBUTyBDT01FIEhPTUUgU08gSSBDQU4gTE9WRSBZT1UhIiBBZGQgaW4gbWUgcGlja2luZyBtZSB1cCBpbiBhIGJlYXIgaHVnIGFuZCBzd2luZ2luZyBoaW0gYXJvdW5kLiAKR2V0IHRvIGtub3cgc29tZW9uZSB3ZWxsIGJlZm9yZSB5b3UgY29tbWl0IHRvIG1hcnJpYWdlLiAKVGhlIGxhdHRlciBvZiB3aGljaCBieSBkZXNpZ24uVGhlaXIgcHJvcG9ydGlvbnMgYXJlIHNvIHJhZGljYWxseSBkaWZmZXJlbnQgdGhhdCBvZiBhIGh1bWFuIHRoYXQgdGhlcmUgaXNuIGEgc2luZ2xlIGJvbmUgdGhhdCB3b3VsZG4gbmVlZCB0byBiZSBjaGFuZ2VkIGluIHNoYXBlLCBzaXplLCBhbmQgZGVuc2l0eSBmcm9tIHRoZSBvcmlnaW5hbCwgYW5kIHlvdSBiZXR0ZXIgYmVsaWV2ZSB0aGF0IHRoZSBob3Jtb25hbCBjaGFuZ2VzIG5lZWRlZCB0byBpbnRyb2R1Y2UgZW50aXJlbHkgbmV3IG9yZ2FucyBpbnRvIHRoZWlyIHBoeXNpb2xvZ3kgYXJlIGxpdGVyYWxseSBlbnRpcmUgb3JkZXJzIG9mIG1hZ25pdHVkZSBsYXJnZXIgdGhhbiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGh1bWFuIG1hbGVzIGFuZCBmZW1hbGVzLi4gClRoYXQgaGVscGVkLiBJIG9wdGVkIG5vdCB0byB3ZWFyIGdsb3ZlcyBhbmQgbXkgaGFuZHMgcmVhbGx5IGh1cnQgZm9yIHRoZSBmaXJzdCB0aHJlZSBtaWxlcyB1bnRpbCBJIGdvdCB3YXJtZWQgdXAuIAoiTm8gYXJlYSBpcyBpbW11bmUsIiBzYWlkIERlaXJkcmUgQmxhY2tidXJuLCB3aG8gY29vcmRpbmF0ZXMgZWZmb3J0cyBhZ2FpbnN0IGh1bWFuIHRyYWZmaWNraW5nIGZvciB0aGUgTmV0d29yayBvZiBWaWN0aW0gQXNzaXN0YW5jZSAoTk9WQSkgaW4gQnVja3MgQ291bnR5LiAiT2Z0ZW4gcGVvcGxlIHRoaW5rIHRoYXQgaXQncyBsZXNzIGxpa2VseSB0byBoYXBwZW4gaW4gdGhlIHN1YnVyYnMgYW5kIGl0J3Mgc29tZXRoaW5nIHRoYXQgb25seSBoYXBwZW5zIGluIHRoZSBjaXRpZXMsIGFuZCB0aGF0J3MgcmVhbGx5IG5vdCB0aGUgY2FzZS4gSXQgcmVhbGx5IGlzIGV2ZXJ5d2hlcmUuIgpEbyBub3Qgb3ZlciBmaWxsLiBMYXN0LCBtYWtlIGEgbm90ZSBvZiBob3cgZGFyayBmbHVpZCB3YXMsIGlmIGl0IHNtZWxsZWQgYnVybnQsIGFuZCBob3cgbXVjaCBjbHV0Y2ggZHVzdCB3YXMgaW4gdGhlIHBhbi4gCkJlY2F1c2Ugb2YgYSBsYWNrIG9mIGNoaWxkY2FyZSBmYWNpbGl0aWVzIG9yIHByZXNzdXJlIGZyb20gcGVlcnMgb3IgcmFtcGFudCBzZXhpc20gd2l0aGluIGNlcnRhaW4gb2NjdXBhdGlvbnMgICB0aGVzZSBjYXJlZXJzIGFyZSBiZWluZyBhdm9pZGVkLi4gCkFnYWluLCB5b3VyIGRvY3RvciB3b3VsZCBrbm93IG1vcmUgYWJvdXQgdGhpcyBzcGVjaWZpYyBwcm9jZWR1cmUgYW5kIHRoZSByZXNlYXJjaCBvciByaXNrcyBiZWhpbmQgaXQgdGhhbiBhbnlvbmUgb24gdGhlIGludGVybmV0IHdvdWxkLi4gCkRlIHBsdXMsIHBvdXIgdml0ZXIgdG91dGUgZG11bHRpcGxpY2F0aW9uIGF1IGZpbCBkZXMgZ25yYXRpb25zLCBzZXVsIHVuIG5vbSBwYXIgcGFyZW50IHBldXQgdHJlIHRyYW5zbWlzICBsJ2VuZmFudC4gCldvcmsgb3V0LiBXb3JrIG91dCwgd29yayBvdXQsIHdvcmsgb3V0LiBUaGlzIGlzIHRoZSBlYXNpZXN0IHRpbWUgdG8gZ2V0IGluIHNoYXBlIGFuZCBsb29rIGFtYXppbmcgYW5kIGlmIHlvdSBkbyB0aGlzICBFVkVSWVRISU5HIGdvZXMgaW50byBlYXN5IG1vZGUuIFlvdSdsbCBhbHNvIHNldCB5b3Vyc2VsZiB1cCBmb3IgYSBoZWFsdGh5IHNoYXBlIGdvaW5nIGludG8gY29sbGVnZS4KTG9vayBhdCB0aGUgY2hpcCBwYXR0ZXJuIGZvciBjbHVlcy4gCkkgMTAwJSBiZWxpZXZlIGhpcyBleHBsYW5hdGlvbiwgYnV0IGl0J3MgaGVscGZ1bCB0byBzZWUgYW5vdGhlciBndXkgYXJ0aWN1bGF0ZSB0aGUgc2FtZSBzZW50aW1lbnQgYXMgbXkgYm95ZnJpZW5kIGFib3V0IGhvdyBoZSB2aWV3cyBwb3JuLiAKV2hlbiBJIHJlYWxpc2UgbXkgamFja2V0IHdhcyBvcGVuLCByZXZlYWxpbmcgbXkgdW5pZm9ybSwgSSBxdWlja2x5IHppcCBpdCB1cCBhbmQgZXhwbGFpbiwgIkkgZG8gd29yayBmb3IgdGhlIGNvbXBhbnkgYnV0IEkgZG9uIHdvcmsgaW4gdGhpcyBidWlsZGluZyIKVGhpcyBxdWVzdCBpcyBncmVhdCBpZiB5b3UgaGF2ZSBhbGwgcm91bmQgcGFydHkgYW5kIHlvdSB3YW50IHRvIGludHJvZHVjZSB0aGVtIHRvIHRoZSBpZGVhIG9mIGV4cGxvcmluZyB0aGUgbXlzdGVyaW91cyBzYW5jdHVhcnkuIApSZWFkIG1vcmU6V29sbG9uZ29uZyBEZWxpdmVyb28gcmlkZXJzIHBheSB0aGUgcHJpY2UgZm9yIGRlbGl2ZXJ5ICJJIHdhcyBqdXN0IGxvb2tpbmcgdG8gaGF2ZSBhIGdvb2QgZ2FtZSBhbmQga2VwdCBteSBoZWFkIGRvd24gYW5kIG9uZSBieSBvbmUgcGxheWVycyBqdXN0IGRyb3BwZWQgb2ZmIGFuZCB0aGUgbmV4dCBtaW51dGUgeW91IGZpbmQgeW91cnNlbGYgd2l0aCA1MCBwZW9wbGUgbGVmdCBhbmQgdGhlbiAzMCwgMjAsIDEwIGFuZCBzdWRkZW5seSBpdCdzIHRoZSBmaW5hbCB0YWJsZS4iIEJ1dCB0aGUgZHJlYW0gcnVuIHRvIHZpY3RvcnkgYWxtb3N0IGNhbWUgY3J1c2hpbmcgZG93biB3aGVuRGVzc2FpeCBQb3J0ZXIgZ290IHJlYWxseSBzaWNrIGEgY291cGxlIG9mIGRheXMgYmVmb3JlIERheSAyIGFjdGlvbi4gCkxvZ2ljIFBybyA4LjAuMiwgTWFjIGR1YWwgcXVhZCBjb3JlIDMuMkdoeiwuIExvZ2ljIFByby4gCkhlIGRpZG4gc2VlIHRoZSBwb2ludCBpbiBidXlpbmcgaGlzIGRhdWdodGVyIHVuZGVyd2VhciwgYmMgaGVyIHNraXJ0cyBjb3ZlcmVkIHVwIGV2ZXJ5dGhpbmcuIApCYWN0ZXJpYSB3ZXJlIGZvdW5kIGluIDQ1IG9mIDExOCBwYWluIHBhdGllbnRzICgzOCUpIGFuZCBpbiAyMSBvZiA1OSBjb250cm9scyAoMzYlKSAocCA9IDAuNzQpLiAKUHVycG9zZWx5IHB1dCB0aGlzIHRlYW0gaW4gdG91cm5hbWVudHMgYXJvdW5kIHRoZSBwcm92aW5jZSBiZWNhdXNlIEkga25ldyBpZiB3ZSB3ZXJlIGdvaW5nIHRvIE9GU0FBLCBpdCBoZWxwcyBhIGxvdCB0byBzZWUgYSB2YXJpZXR5IG9mIHRoZSBjb21wZXRpdGlvbi4gClN1Y2ggYXMgRVBMIHRvIExhIExpZ2EuIAoiR2l2aW5nIHBlb3BsZSBjaGlwcywgYWR2ZXJ0aXNpbmcgdGhlIGdhbWUsIGNvbGxlY3RpbmcgdGhlIG1vbmV5LCBob2xkaW5nIHRoZSBtb25leSwiIGlzIHdoYXQgQVRDIGF0dG9ybmV5IEJyaWFuIERlamVhbiBkZXNjcmliZXMgYXMgdmlvbGF0aW5nIHRoZSBvcmRpbmFuY2UuIApXZXJlIHRoZXkgYmx1ZmZpbmcgZnJvbSB0aGUgZmxvcCwgYnV0IGdvdCBsdWNreSBvbiB0aGUgcml2ZXIgb3IgdHVybj8gWW91IG5lZWQgdG8gYmUgYXdhcmUgb2YgdGhlaXIgYmV0dGluZyBoYWJpdHMsIGFuZCBwcm9mZXNzaW9uYWxzIGtub3cgaG93IHRvIGRvIHRoaXMuIApBbGwgeW91IGhhdmUgdG8gZG8gaXMgd2luIGEgcm91bmQsIG5vdCBhIGdhbWUuIFlvdXIgZ29hbCBpcyB0byBwdXQgYWxsIHlvdXIgZG9taW5vZXMgZG93biBhbmQgbm90IGhhdmUgdG8gZHJhdyAzIHRpbWVzLiAKVGhlIHdob2xlIGV4cGVyaW1lbnQgd2VudCB0byBjcmFwIHdoZW4gdGhlIGFuaW1hbHMgYmVnYW4gZHJpdmluZyBjYXJzICAgd2l0aCBubyBvcHBvc2luZyB0aHVtYnMgaXQgd2FzIGEgZGlzYXN0ZXIgYW5kIHRoZSBuZWlnaGJvcmhvb2Qgd2FzIHNodXQgZG93biBkdWUgdG8gZGFtYWdlLi4gCk15IGZyaWVuZHMgYW5kIEkgdGhvdWdodCB0aGlzIHdhcyBhIGdyZWF0IGlkZWEgIGV4Y2VwdCBpbnN0ZWFkIG9mIHNjYXJpbmcgcGVvcGxlIHN0cmFpZ2h0LCB3ZSBzY2FyZSB0aGVtIHF1ZWVyLiBXZSBtYWtlIHRoZW0gcmVqZWN0IG5vcm1hdGl2ZSB3aGl0ZSwgc3RyYWlnaHQsIG1pZGRsZSBjbGFzcyBnZW5kZXIgYW5kIG1hc2N1bGluaXR5IGJ5IHNob3dpbmcgdGhlbSByZWFsbHkgc2NhcnkgdGhpbmdzLCBsaWtlIEdlb3JnZSBhbmQgTGF1cmEgQnVzaCBkb2luZyBpdCBNaXNzaW9uYXJ5IFN0eWxlLiBDcmVlcHksIHJpZ2h0PwpCZWNhdXNlIHRoZSB3YXkgcGxheWVycyBwbGF5IGlzIGltcG9ydGFudCwgaXQgaXMgaGVscGZ1bCB0byBwbGFjZSB0aGVtIGludG8gY2F0ZWdvcmllcy4gU29tZSBwbGF5ZXJzIGZpbmQgdGhhdCBieSBhdHRhY2hpbmcgbmFtZXMgd2l0aCBjYXRlZ29yaWVzIGl0IGhlbHBzIHRoZW0gcmVjYWxsIGhvdyBlYWNoIG9wcG9uZW50IHBsYXlzLiAKSW4gb3RoZXIgd29yZHMsIHRoZXJlIGEgc3VycHJpc2luZ2x5IGVhc3kgd2F5IHRvIGZpZ3VyZSBvdXQgaG93IHlvdSBmZWVsIGFib3V0IHNvbWVvbmUganVzdCBjb3VudCB0aGUgaG91cnMgYmVmb3JlIHlvdSBoaXQgdGhlICJyZXBseSIgYnV0dG9uLi4gCklmIHlvdSBjYW4gbWFuYWdlIHRvIGdldCAxMDAlIGJvb24gZHVyYXRpb24oODUlIGJlZm9yZSBwb3Rpb25zKSB0aHJ1IHRoZSBjaGVhcGVyIGdlYXIgeW91ciBzdWdnZXN0aW5nIHRoZW4gZ28gZm9yIGl0LiBEaXNjcmV0aXplIGlzIGp1c3QgbWluIG1heGluZyBpdCBmb3IgcGVvcGxlIHdobyBjYW4gYWZmb3JkIGl0LiAKSSB3b3VsZCB0cnkgZ29pbmcgb24gYSByZWd1bGFyIHNjaGVkdWxlLiBZb3Ugbm90aWNlIGJlbmVmaXRzIG9mIG1hc3NhZ2UgdGhlIG1vc3Qgd2hlbiB0aGV5IGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gYnVpbGQgdXAgb3ZlciB0aW1lLCBhbmQgc3VkZGVubHkgbGlmZSBpcyBlYXNpZXIuIFRoZSBwZW9wbGUgd2hvIHJlYWxseSBmYWxsIGluIGxvdmUgd2l0aCBtYXNzYWdlIGFyZSB0aGUgb25lcyB3aG8gZ28gd2Vla2x5IGZvciBhIHdoaWxlIHJlYWxpemUgaG93IG11Y2ggaXQgaGVscHMgaXQsIHRoZW4gZG93biB0aGUgcm9hZCB0aGV5IGRyb3AgZG93biB0byBvbmUgbWFzc2FnZSBhIG1vbnRoIGp1c3QgdG8gbWFpbnRhaW4gdGhlIHJlc3VsdHMgdGhleSBvYnRhaW5lZC4gSW4geW91ciBjYXNlLCBiZWNhdXNlIHRoaXMgaXNuIGEgcGh5c2ljYWwgaW5qdXJ5IHlvdSByZWNvdmVyaW5nIGZyb20sIHRoZSB0aW1pbmcgaXMgbW9yZSBmbGV4aWJsZS4gSSB3b3VsZCByZWNvbW1lbmQgZXZlcnkgMiB3ZWVrcyB0byBzdGFydCBpZiB5b3UgYWJsZSB0byBhZmZvcmQgaXQgKG9yIHdlZWtseSBpZiB5b3UgY2FuLCBqdXN0IHRvIGdldCBvdmVyIHRoYXQgaW5zb21uaWEpLiBPdGhlcndpc2UgbW9udGhseSBpcyBmaW5lLiBUaGUgaW1wb3J0YW50IHBhcnQgaXMgbWFraW5nIGl0IGEgcm91dGluZSB5b3UgY2FuIGxvb2sgZm9yd2FyZCB0byBzbyB5b3VyIGJvZHkga25vd3MgaGVscCBpcyBjb21pbmchIDopCllvdSBjYW4ndCByYWlzZS4uIApJdCBoYXBwZW5zLCB3ZSBodW1hbiBhbmQgZmFyIGZvciBwZXJmZWN0LiAKU2FuZGFscyBSb3lhbCBCYWhhbWlhbiBTcGEgUmVzb3J0IE9mZnNob3JlIElzbGFuZCAoV2VzdCBCYXkgU3RyZWV0KQpXU09QIENpcmN1aXQgc3RpbGwgZGVzaXJlcyB0byBtYWtlIEhvcnNlc2hvZSBDbGV2ZWxhbmQgYSBmdXR1cmUgV1NPUCBDaXJjdWl0IHN0b3AgYW5kIHdpbGwgY29udGludWUgdG8gaGF2ZSBkaWFsb2d1ZSB3aXRoIHRoZSBwcm9wZXJ0eSB0byB3ZWlnaCBvcHRpb25zIGZvciBmdXR1cmUgZXZlbnRzIHRoZXJlLCB0aGUgcmVsZWFzZSBjb25jbHVkZWQuCk5vdyB3ZSBoYXZlIGEgdGlueSBkb2cuIEkgd29yayBmcm9tIGhvbWUgc28gaXQgc3BlbmRzIHRoZSBkYXkgY3VybGVkIHVwIGF0IG15IGZlZXQgb3Igb24gbXkgbGFwLiAKVFYgbmV3c2Nhc3RlciBNaWtlIGFuZCBQUiBtYXZlbiBKaWxsIEtpbGxlZW4KRm9yIExhYm91ciBwb2xpdGljaWFucyBzZWVraW5nIGFuIGludGVsbGVjdHVhbCB0b3VjaHN0b25lLCB0aGVyZSBpcyBubyBzYWZlciBwbGFjZSB0byBnbyB0byB0aGFuIE5vcm1hbiBLaXJrLCB3aG9zZSBsZWdhY3kgYW5kIGxlZ2VuZCBoYXZlIGxhc3RlZCBmYXIgbG9uZ2VyIHRoYW4gdGhlIDIxIG1vbnRocyBoZSBzcGVudCBpbiBwb3dlciBiZXR3ZWVuIDE5NzIgYW5kIGhpcyBkZWF0aCBpbiAxOTc0LiBUd28gcmVjZW50IExhYm91ciBsZWFkZXJzaGlwIGNvbnRlbmRlcnMsIFNoYW5lIEpvbmVzIGFuZCBHcmFudCBSb2JlcnRzb24sIG5hbWVkIGhpbSBhcyB0aGVpciBwb2xpdGljYWwgaGVybywgd2hpbGUgRGF2aWQgQ3VubGlmZmUgY2FycmllZCBhIHBvcnRyYWl0IG9mIGhpbSBhdCBXYWl0YW5naS4gCkFuZCB0aGV5IHNvbmcgVmlkZW8gUGhvbmVpbnNwaXJlZCBMYWR5IEdhZ2EgdG8gd3JpdGUgVGVsZXBob25lLiAKV2hvZXZlciB0b2xkIHlvdSB0aGF0IHdhcyB5YW5raW5nIHlvdXIgY2hhaW4sIGFuZCB5b3UgZmVsbCBmb3IgaXQuIEFzIG9mIDEyOjAwIE5vb24gQ2VudHJhbCBEYXlsaWdodCBUaW1lLCBGcmlkYXksIEF1Z3VzdCA1LCAyMDExLCB0aGUgcGVyZm9ybWVyIGtub3duIGFzIExhZHkgR2FnYSBpcyBhbGl2ZSBhbmQgd2VsbCwgYW5kIHB1cnN1aW5nIGhlciAiY2FyZWVyIi4gCjIyLiBUaGlzIGFubnVhbCBtZWV0aW5nIG9mIGVjb25vbWlzdHMgaXMgY29udmVuZWQgZWFjaCB3aW50ZXIgZ2F0aGVyIHRoZWlyIHZpZXdzIG9uIHRoZSBDYW5hZGlhbiBhbmQgZ2xvYmFsIGVjb25vbWllcyBhaGVhZCBvZiB0aGUgZmVkZXJhbCBidWRnZXQuIApXaGVuIHlvdSB0cmFpbmVkIHlvdXJzZWxmIHRvIGJlIGEgc25vYiwgcGVvcGxlIGFyZSBnb2luZyB0byB0cmVhdCB5b3UgbGlrZSBhIHNub2IuCkhvdyB0byBQcmV2ZW50IElkZW50aXR5IFRoZWZ0IGluIFlvdXIgRmF1eCBDbGF5IFBva2VyIENoaXBzIEJ1c2luZXNzCldlbGwgb3VyIGZpZ2h0IGRpZG4ndCBsYXN0IGxvbmcsIGhlIGFkbWl0dGVkIHRoYXQgaGUgaGFkIGZsaXJ0ZWQgd2l0aCB0aGUgZ2lybHMgYnV0c3dvcmUgb24gaGlzIGxpZmUgdGhhdCBoZSBuZXZlciBkaWQgYW55dGhpbmcgd2l0aCB0aGVtLiBXaGljaCBJIG5ldmVyIHRydWx5IGJlbGlldmVkLiBIZXNhaWQgdGhhdGhlIHN1Y2N1bWJlZCB0byB0aGUgZ2FtYmxpbmcgbGlmZSBhbmQgd2FudGVkIHBlb3BsZSB0byBsaWtlaGltIHNvIGhlIHdlbnQgYW5kIHBhcnRpZWQgd2l0aCB0aGVtLiBIZSBwcm9taXNlZCBtZSB0aGF0aGUgd2FzIGRvbmUgd2l0aCBhbGwgb2YgdGhhdCBhbmQganVzdCB3YW50ZWQgdG8gZm9jdXMgb24gaGlzIGZhbWlseSBhbmQgdGhhdCBoZSB3b3VsZCBxdWl0IGdhbWJsaW5nIGJlY2F1c2UgaGVibGFtZWQgaXQgZm9yIHJ1aW5pbmcgaGlzIGxpZmUuIEkgZmVsdCBzb3JyeSBmb3IgaGltIGFuZCBtaXNzZWQgaGltIGFuZCBzaW5jZSBoZSB3YXMgYSBncmVhdCBmYXRoZXIgSSBmb3JnYXZlIGhpbSBhbmQgbW92ZWQgYmFjayBpbiB3aXRoIGhpbSBpbiBEZWNlbWJlci4gQnV0IEkgbmV2ZXIgZm9yZ290LgpJIG1hZGUgbXlzZWxmIG91dCB0byBiZSB0aGUgd29yc3QgcG9zc2libGUgd29tYW4gd2l0aCBubyBhbWJpdGlvbiwgaHlnaWVuZSwgc2Vuc2Ugb2YgZGVjZW5jeSBvciBkZXNpcmUgdG8gYmUgYW55b25lIHdpZmUuIEFsc28gc2x1dC4gCldlIGFyZSBmb3J0dW5hdGUgdG8gaGF2ZSBzbyBtYW55IHdvbmRlcmZ1bCB2b2x1bnRlZXJzIHdobyB1bnNlbGZpc2hseSBkb25hdGUgdGhlaXIgdGltZSB0byBoZWxwaW5nIHRoZWlyIFVuaXRlZCBXYXkuIFdlIGNhbiBub3QgZG8gaXQgd2l0aG91dCB0aGVtIGFuZCBJIHNhbHV0ZSB0aGVtIGZvciB0aGVpciBlZmZvcnRzLCIgc2FpZCBMdWJlci5TY2hlZHVsZWQgZm9yIEZyaWRheSwgSnVseSAxNXRoIGF0IHRoZSBHcmVlbnZpZXcgQ291bnRyeSBDbHViIGluIFdlc3QgTW9ucm9lLCBUaGUgVW5pdGVkIFdheSBHb2xmIENsYXNzaWMgaXMgb25lIG9mIHRoZSBsYXJnZXN0IGdvbGYgdG91cm5hbWVudHMgaW4gT3N3ZWdvIENvdW50eSBhbmQgcHJvdmlkZXMgYnVzaW5lc3NlcyBhbmQgaW5kaXZpZHVhbHMgd2l0aCB0aGUgb3Bwb3J0dW5pdHkgdG8gZW5qb3kgYSBmdW4gZGF5IG9mIGdvbGYgYW5kIHdoaWxlIGhlbHBpbmcgdG8gc3VwcG9ydCB0aGVpciBVbml0ZWQgV2F5LiBSZWdpc3RyYXRpb24gaW5jbHVkZXMgYSBjb250aW5lbnRhbCBicmVha2Zhc3QsIGEgY2xhc3NpYyBnb2xmIHNoaXJ0LCBnb2xmIGNhcnQsIDE4IGhvbGVzIG9mIGdvbGYsIGx1bmNoLCBiZXZlcmFnZXMgb24gdGhlIGNvdXJzZSwgYW5kIGEgc3RlYWsgZGlubmVyIGJ1ZmZldCBmb2xsb3dpbmcgdGhlIHRvdXJuYW1lbnQuIApCdXQgdGhhdCdzIGp1c3QgdGhlIGJlZ2lubmluZyBiZWNhdXNlIHlvdSBhcmUgY2xvc2UgdG8gc28gbXVjaCBtb3JlLiBBbmQgYWxzbyB0aGUgZmxpeGJ1cyBydW5zIHRvIFJlbm8sIGl0J3MgYW1hemluZywgdXBkYXRlZCBjb2FjaCwgV2lGaSwgbW92aWVzIHlvdSBjYW4gd2F0Y2gsIGNvbWZ5LCBhbmQgY2hlYXAsIDQuOTkuIApCdXQgaW4gbXkgb3BpbmlvbiBhcyBtZW50aW9uZWQgYnkgL3UvYXJmbmFyZ2xlLCB0aGUgY2xhc3NlcyBhcmVuIHRoYXQgcXVhbGl0eSBhbmQgYmFyZWx5IHRhbGsgYWJvdXQgcmVhbCBtZWRpdGF0aW9uLiAKQXQgdGhlIGVuZCBvZiB5ZWFycyBvZiBmaWdodGluZyBldmVyeSBnZW5lcmFsIHNvbGRpZXIgZGVzZXJ2ZXMgcmVzcGVjdCBhbmQsIGF0IGxlYXN0LCBzb21lIGZyZWUgZm9vZCBJIGhvcGUgdGhpcyBndXkgZ290IGhpcy4KQW9rb0RyYWdvbiAgNTEgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KVGhpcyBpcyBkaXNjcmltaW5hdGlvbiBhbmQgcHJvZmlsaW5nIGFuZCB0aGVzZSBzdG9yaWVzIGxhY2sgZXZpZGVuY2UgYW5kIGZ1cnRoZXIgaW52ZXN0aWdhdGlvbiB0aGF0IHNob3VsZCBiZSBleHBlY3RlZCBvZiBhIHJlc3BlY3RhYmxlIG1lZGlhIG91dGxldC4gQXMgaXQgaXMgY2xlYXIgdGhhdCBhbGwgdGhleSBjYXJlIGFib3V0IGlzIHRoZSBhdHRlbnRpb24gYW5kIHJhdGluZ3MsIHdlIGNhbid0IGFsbG93IG91cnNlbHZlcyB0byBmZWVkIGludG8gdGhpcy4gVGhpcyBuZWdhdGl2ZSBhdHRlbnRpb24gY2F1c2VzIGhhcm0gdG8gYW55IGFuZCBhbGwgYnJlZWRzIG9mIGRvZ3Mgd2hvIG1heSBiZSBsYWJlbGVkICJiYWQiLlRoZSBwYXJ0aWN1bGFyIGRvZyBtZW50aW9uZWQgYnkgdGhlIGFwcGFyZW50bHkgdW5lZHVjYXRlZCBDaGVrIDYsIFJDTVAsIGFuZCBvd25lciBpbiB0aGlzIHN0b3J5IHdhcyByZWZlcnJlZCB0byBhcyBhICJQaXQgQnVsbCIuIApZb3UgZG9uJ3QgaGF2ZSB0byBiZSBvcmRlcmVkIHRvIHRha2UgYSB0ZXN0LCB5b3UgY2FuIGdldCBvbmUgaW5kZXBlbmRlbnRseS4gClllcyBoYXRjaGxpbmcgd29uLiAKQnV0IGp1c3QganVkZ2luZyBieSB5b3VyIGRlc2NyaXB0aW9uLCBtYXliZSBnbyBmb3Igc29tZXRoaW5nIGxpa2Ugd2hpY2ggc2hvdWxkIGJlIHdpdGhpbiB5b3VyIHByaWNlIHJhbmdlLiAKSG93ZXZlciwgdGhlIGNvZ25pdGl2ZSBtaW5kIGlzbid0IGFsb25lIGluIGZvcm1pbmcgbWVtb3JpZXMgb2YgcGFpbi4gUmVzZWFyY2ggaW50byB0aGUgbmVydm91cyBzeXN0ZW0gaGFzIGZvdW5kIHRoYXQgaXQgY2FuIGFsc28gZm9ybSBtZW1vcmllcyBvZiBwYWluLCB3aGljaCBjYW4gcGVyc2lzdCBldmVuIGFmdGVyIHRpc3N1ZSByZW1vdmFsLiBUaGUgc28gY2FsbGVkIHBoYW50b20gbGltYiBwaGVub21lbm9uIGlsbHVzdHJhdGVzIGhvdyB0aGUgbWluZCBtYXkgcmV0YWluIGl0cyBhYmlsaXR5IHRvIGV4cGVyaWVuY2UgcGFpbiwgZXZlbiBhZnRlciB0aGUgbm9jaWNlcHRvcnMgYXJlIG5vIGxvbmdlciBwcmVzZW50LiAKQWxsIGNsaWVudHMgYXJlIGltcG9ydGFudCwgdGhhdCdzIHdoeSB3ZSByZXF1aXJlIGV2ZXJ5b25lIHRvIHNjaGVkdWxlIHRoZWlyIGFwcG9pbnRtZW50IGluIGFkdmFuY2UuIFdlIHdpbGwgZG8gb3VyIGJlc3QgdG8gc2NoZWR1bGUgYW4gYXBwb2ludG1lbnQgdGhhdCBpcyBtb3N0IGNvbnZlbmllbnQgZm9yIHlvdS4gSG93ZXZlciwgb3VyIHNjaGVkdWxlIHdpbGwgZmlsbCB1cCBxdWlja2x5LiBJdCBpcyBiZXN0IHRvIGFsbG93IGVub3VnaCB0aW1lIHdoZW4gbWFraW5nIHlvdXIgYXBwb2ludG1lbnQgYXMgb3VyIGF2YWlsYWJpbGl0eSBiZWNvbWVzIGxpbWl0ZWQuClNvIGl0IGEgZGlzdG9ydGlvbiBvZiByZWFsaXR5LiBXaGVuIHlvdSBhZGQgdXAgdGhlIHBsdXNlcyBhbmQgbWludXNlcywgaXQgd29ydGggZG9pbmcgZnJvbSB0aGVpciBwZXJzcGVjdGl2ZS4gRm9yIHRob3NlIG9mIHVzIHdobyBzZWUgaXQgYXMgYSBtYW5pcHVsYXRpdmUgdGFjdGljLCB3ZSBzdGFuZCBvbiB0aGUgc2lkZWxpbmVzIHNjcmVhbWluZyBhYm91dCBpdCBhbmQgd2UgYXJlIGxhcmdlbHkgaWdub3JlZCBieSB0aGUgYnJhaW53YXNoZWQgbWFzc2VzLgpXaXRoIHRoYXQgaW5mb3JtYXRpb24gaW4gaGFuZCwgZG9pbmcgdGhpcyBzcGluZSB1biBsb2FkaW5nIG1hbmV1dmVyIGlzIGEgIm5vIGJyYWluZXIiLgpCdXQgc2hlIHdhcyBhbHdheXMgYXdhcmUgdGhhdCBhIGNlcnRhaW4gcmVzZXJ2ZSBsYXkgYmVuZWF0aCBoZXIgZXh1YmVyYW5jZS4gCkkgYWJzb2x1dGVseSBsb3ZlIGl0LiBUaGlzIGlzIG15IGZpcnN0IFN1YmFydSBhbmQgSSdtIGRlZmluaXRlbHkgYSBjdXN0b21lciBmb3IgbGlmZS4gSXQncyBhIHNtb290aCByaWRlIGFuZCBpdCBkb2Vzbid0IGZlZWwgYXMgYmlnIGFzIGl0IGlzIGlmIHRoYXQgbWFrZXMgc2Vuc2UuIApBaCwgdGhhdCB3aGVyZSB5b3Ugd3JvbmcuIApIZSBmbGlwcGVkIG91dCB0aGF0IG15IGZyaWVuZCBjb3VsZCB1bmRlcnN0YW5kIGlmIGp1c3QgZmluZSBhbmQgaGUgaGFkIG5vIGlkZWEgd2hhdCB0aGV5IHdlcmUgc2F5aW5nLi4gCldoYXQgZXhhY3RseSBtYWtlcyB0aGVtIG1vcmUgcXVhbGlmaWVkIHRvIGxlYWQ/IEZvciBleGFtcGxlIGEgZ29vZCBsZWFkZXIgdGFrZXMgbW9yZSB0aGFuIGp1c3QgYmVpbmcgdGhlIHRvcCBwZXJmb3JtZXIuIE1hbnkgaW4gYSBsZWFkZXJzaGlwIHJvbGUgd291bGQgcGVyZm9ybSBwb29ybHkgYnkgY29tcGFyaXNvbiBhdCB0aGUgZXZlcnlkYXkgdGFza3MgdGhlaXIgZW1wbG95ZWVzIHBlcmZvcm0uIFRoZXkgc2ltcGx5IGp1c3QgZG9uIGRvIGl0IGV2ZXJ5ZGF5LgpJIGFsc28gbm90aWNlZCB0aGF0IEkgZ2V0IGx1Y2tpZXIgaW4gZGlzdGFudCBzaG9wcyBpbiBub3Qgc28gcG9wdWxhdGVkIGNpdGllcy4gVGhlIGxlc3MgcG9wdWxhdGVkIHRoZSBjaXR5LCB0aGUgaGlnaGVyIHRoZSBjaGFuY2VzIEkgc2VlIHBvcHVsYXIgbW9kZWxzLiBNeSBoeXBvdGhlc2lzIGlzIHRoYXQgaXQncyBkdWUgdG8gbGFjayBvZiBjb21wZXRpdGlvbiB3aXRoIG90aGVyIGNvbGxlY3RvcnMuIApZb3UgbWF5IHJlY29nbml6ZSB0aGF0IGRlc2NyaXB0aW9uIGFzIGJlaW5nIG9uIHRpbHQuIApXZSB3ZW50IG92ZXIgdG8gdGhlIE1hcm9vbiBCZWxscywgd2Ugcm9kZSB0byBDcmVzdGVkIGJ1dHRlLCBhbmQgcmVhbGl6ZWQgd2hlbiB3ZSBnb3QgdGhlcmUgdGhhdCBoZSBkaWRuJ3QgaGF2ZSB0aGUga2V5cyB0byB0aGUgY2FyIGhlIHBhcmtlZCAobGF1Z2hzKS4uIApDb252ZXJzZWx5LCBpZiB5b3UgY2FuIGdhaW4gZW5vdWdoIGNvbnRyb2wgb2YgdGhlIGNsdWIgdG8gaGl0IHRoZSBiYWxsIGV2ZW4gYSBoYWxmIGluY2ggY2xvc2VyIHRvIHRoZSBzd2VldCBzcG90LCB5b3Ugd2lsbCBub3Qgb25seSBlbmpveSBhIGRpc3RhbmNlIGluY3JlYXNlIHRoYXQgY29tZXMgd2l0aCBhIG1vcmUgc29saWQgaW1wYWN0LCBidXQgeW91IHdpbGwgYmUgbW9yZSBsaWtlbHkgdG8ga2VlcCB0aGUgYmFsbCBvbiB0aGUgZmFpcndheS4gRmluYWxseSwgaXQgbWF5IHN1cnByaXNlIHlvdSB0byBoZWFyLCB0aGUgYXZlcmFnZSBkcml2ZXIgbGVuZ3RoIG9uIHRoZSBQR0EgVG91ciBpcyA0NC41Ii4gV2h5PyBCZWNhdXNlIHRoYXQgaXMgdGhlIGxlbmd0aCBvZiBkcml2ZXIgdGhleSBjYW4gbW9zdCBvZnRlbiBtYWtlIGNvbnRhY3Qgd2l0aCB0aGUgY2VudGVyIG9mIGdyYXZpdHkgb2YgdGhlIGNsdWJoZWFkIGluIGxpbmUgd2l0aCB0aGUgY2VudGVyIG9mIGdyYXZpdHkgb2YgdGhlIGJhbGwsIHRodXMgb2J0YWluaW5nIG1heGltdW0gZGlzdGFuY2UgYW5kIGFjY3VyYWN5LiAKVGhleSdyZSBjb3BzLCBub3QgY29tYmF0IHRyb29wcy4gV2Ugc2hvdWxkIG5ldmVyIGZvcmNlIG91ciBMRU9zIHRvIGdvIGludG8gY29tYmF0LiAKQXBwYXJlbnRseSB0aGUgZmluYWwgc3RyYXcgd2FzIHdoZW4gdGhleSBtYWRlIHNvbWVvbmUgc28gbWFkIHRoYXQgdGhlIHBlcnNvbiBzbGFzaGVkIHRoZSB0aXJlcyB0byBoZXIgY2FyLiAKQW5kIHRoZSB3YXkgaXQncyBhY3RpbmcgcmVtaW5kcyBtZSBvZiBub3RoaW5nIHNvIG11Y2ggYXMgYSBjbGFzc2ljIFdhbGwgU3RyZWV0IGJlYXIgcmFpZCwgZGVzaWduZWQgdG8gZHJpdmUgZG93biB0aGUgcHJpY2Ugb2Ygc29tZXRoaW5nIHlvdSB3YW50IHRvIGJlIGFibGUgdG8gcGljayB1cCB2ZXJ5LCB2ZXJ5IGNoZWFwLiAKSnVzdCB0cmllZCBzaG9wcGluZyBmb3IgbWF0ZXJuaXR5IGNsb3RoZXM7IGl0IHdhcyB3ZWlyZCBhbmQgZGlzY291cmFnaW5nLiBTb21lIG9mIG15IHJlZ3VsYXIgY2xvdGhlcyBhcmUgbWFraW5nIG1lIGZlZWwgbmF1c2VvdXMgYmVjYXVzZSB0aGV5IGFyZSB0b28gdGlnaHQsIGJ1dCBJIG5vd2hlcmUgbmVhciBiaWcgZW5vdWdoIGZvciBtYXRlcm5pdHkgY2xvdGhlcywgYW5kIEkgd2FzIGRyb3duaW5nIGluIG1vc3Qgb2YgdGhlbSB0aGF0IEkgdHJpZWQgb24uIEkganVzdCB3YW50IGEgcGFpciBvZiBsZWdnaW5ncyB3aXRoIGEgd2Fpc3RiYW5kIHRoYXQgZG9lc24gY3V0IGludG8gbXkgc3RvbWFjaC4uIApGb3IgbG9uZyBkaXN0YW5jZSB3ZSB1c3VhbGx5IHVzZSB0aGUgZWxlY3Ryb25pYyBmb3JtIG9mIGNvbW11bmljYXRpb24uIAoiV2UgbWlnaHQgaGF2ZSBsaXN0ZW5lZCBhIGxpdHRsZSBtb3JlIGlmIGl0IGhhZCBiZWVuIG1vcmUgdGhhbiBtZS4gSSB0aGluayB3ZSByZXNwZWN0IHRoZSBJbmRpYW5zIGFuZCB0aGUgZmFjdCB0aGV5IGhhdmUgYmVlbiBoZXJlIGxvbmdlciB0aGFuIHRoZSB3aGl0ZSBtYW4gYnV0IHdobydzIHRvIHNheSB0aGF0IHRoZSB0cmliZSBpc24ndCBnb2luZyB0byBidWlsZCA0IHN0b3J5IGJ1aWxkaW5ncz8iU3RhdHVlIG9mIG1vdGhlciBlYXJ0aCBhdCB0aGUgR2VvcmdlIEJhcmtlciBSaXZlciBQYXJrIGxvY2F0ZWQgb24gWmlvbiBQYXJrIEJvdWxldmFyZCBqdXN0IHdlc3Qgb2YgdGhlIDE3NCBhY3JlIGZlZSBsYW5kIGluIFNwcmluZ2RhbGUsIFV0YWgsIEp1bHkgMjIsIDIwMTQgIFBob3RvIGJ5IEFzcGVuIFN0b2RkYXJkLCBTdC4iVG8gd29ycnkgb2YgY29tbWVyY2lhbGl6YXRpb24gd2hlbiBpdCBhbHJlYWR5IGhhcHBlbmVkIGlzIGFub3RoZXIgaXJvbnkuIApJIGd1ZXNzIHlvdSBoYXZlIGEgcG9pbnQsIGJ1dCBldmVudHVhbGx5IHNvbWVib2R5IG1pZ2h0IHRvIGZpbmQgYSBuZXcgdGVjaG5pcXVlIGV4Y2x1c2l2ZSB0byBVbHRpbWF0ZSB0aGF0IHR1cm5zIG91dCB0byBiZSBiZXR0ZXIgdGhhbiB3YXZlZGFzaGluZy4gClRoZSBrZXkgaXMgbXVzY2xlIG1lbW9yeS4gRXZlbiBhcyBteSBmaXRuZXNzIGRlY2xpbmVkIGluIGxhdGVyIHllYXJzLCBJIHdhcyBuYWlsaW5nIHRob3NlIHB1c2ggdXBzIGp1c3QgZmluZS4gClBsYXRlIGFycml2ZXMgd2l0aCBzaXggdGFjbyBjaGlwcyBhcnJhbmdlZCBpbiBhIHN0YXIgZm9ybWF0aW9uIGFuZCB3aGF0IGxvb2tlZCBsaWtlIFZlbHZlZXRhIGRyaWJibGVkIG92ZXIgaXQuIApZb3UgY2FuIGV4cGxvaXQgcGVvcGxlIGluIGEgdmFjdXVtLiAKQydlc3QgdW4gY2FuY2VyIGlubHVjdGFibGUgcXVpIHNlIHByb3BhZ2UgYXZlYyB1bmUgZmVybWUgY2VydGl0dWRlIGV0IG5vdXMgbid5IHBvdXZvbnMgcmllbiwgY2FyIGxlcyBkcyBzb250IGpldHMsIGxlcyBqZXV4IHNvbnQgZmFpdHMuIFJpZW4gbidhcnJ0ZXJhIGxhIGZpbiBhbXJlIGRlcyBjaG9zZXMgZW4gY291cnMgZGVwdWlzIGxhIG51aXQgZGVzIHRlbXBzIGV0IHNlIHBycGFyYW50LCBkb3JuYXZhbnQsICBhdHRlaW5kcmUgc29uIHNhbmdsYW50IHBhcm94eXNtZS4uIApPcGVuIGJvb2sgKHVzZWQgb24gY2hlc3QsIGJhY2sgYW5kIGZvcmVoZWFkKSBQbGFjZSB5b3VyIGhhbmRzIHRvZ2V0aGVyIHBhbG0gdG8gcGFsbSwgaW4gYSAncHJheWluZycgZ2VzdHVyZSwgd2l0aCB5b3VyIGZpbmdlcnRpcHMgcG9pbnRpbmcgdG93YXJkcyB0aGUgYmFieSdzIGhlYWQsIHlvdXIgdGh1bWJzIHVwcGVybW9zdC4gTm93IGltYWdpbmUgdGhhdCB5b3VyIGhhbmRzIGFyZSBhIGNsb3NlZCBib29rLCBhbmQgeW91ciB0aHVtYnMgYXJlIHRoZSBzcGluZS4gUGxhY2UgeW91ciBsaXR0bGUgZmluZ2VycyAgIHRoYXQncyB0aGUgZWRnZXMgb2YgdGhlIHBhZ2VzICAgYWdhaW5zdCB0aGUgYmFieSdzIHNraW4gYW5kICdvcGVuJyB0aGUgYm9vayBieSBzcHJlYWRpbmcgeW91ciBoYW5kcywgdW50aWwgeW91ciB0aHVtYnMgICBzdGlsbCB0b3VjaGluZyBlYWNoIG90aGVyICAgcmVhY2ggdGhlIGJhYnkncyBmbGVzaC4gU2VwYXJhdGUgeW91ciBoYW5kcyBhbmQgY29udGludWUgdG8gbW92ZSB0aGVtIG91dHdhcmQgYWNyb3NzIHlvdXIgYmFieSBpbiBvbmUgc21vb3RoIG1vdGlvbi4KSSdkIHNheSB0aGF0IHJlcXVpcmVzIHNvbWUgaW5uYXRlIHNvY2lhbCB1bmRlcnN0YW5kaW5nIG9yIHRyYWluaW5nLCB3aGljaCB3b3VsZCBwcmV0dHkgbXVjaCBlcXVhdGUgdG8gInRhbGVudCIuLiAKRm91bmRhdGlvbmFsIEJyZWFzdCBDYXJlIG1hcmtldHMgc2NhbSBFc290ZXJpYyBCcmVhc3QgTWFzc2FnZSwgYW5kIEVCTSBwcmFjdGl0aW9uZXIgY291cnNlcy4gQ29tcGFueSBkaXJlY3RvciwgU2FyYSBXaWxsaWFtcywgTG9uZG9uLgpJIHRha2luZyBhIGZpbG0gY2xhc3MgdGhpcyBzZW1lc3RlciwgYW5kIHRoZSBmaW5hbCBwcm9qZWN0IGlzIHRvIHdyaXRlIGEgNyAxMCBwYWdlIGFuYWx5c2lzIG9mIGEgbW92aWUuIApJIGdyYWJiZWQgaGltIGJ5IHRoZSBhcm0gICB0aGlzIGlzIHRoZSBtb3N0IGNyYXp5IHRoaW5nIEkgZXZlciBkaWQgaW4gbXkgbGlmZSAgIGFuZCBJIHNhaWQsIEJveWQsIHlvdSBlaXRoZXIgZ29pbmcgdG8gZ2l2ZSBtZSBhIGpvYiByaWdodCBub3cgb3IgY2FsbCB0aGUgcG9saWNlIGFuZCBsb2NrIG1lIHVwLCBiZWNhdXNlIEkgbm90IGxlYXZpbmcgaGVyZSB3aXRob3V0IGEgam9iLiBJIHNhaWQsIGNsZWFuIGFzaHRyYXlzIG9yIHN3ZWVwIHRoZSBmbG9vciwgYnV0IEkgZ290IHRvIGhhdmUgYSBqb2Igbm93Li4gClBoaWxsaXBzIE9wcGVuaGVpbQpBbmQgaWYgeW91IGtlZXAgZ29pbmcgc291dGggdGhlcmUgdGhlIG91dGRvb3Igc3RhbGxzIGFyb3VuZCBiYXR0ZXJ5IHN0LiAKQ2VqdWRvIGhhcyBhIGh1Z2Ugc2hvdCwgSSBwZXJzb25hbGx5IGRvbid0IGJlbGlldmUgdGhhdCBEYW5hIFdoaXRlIHdhbnRzIHRvIGdldCByaWQgb2YgdGhlIEZseSB3ZWlnaHQgZGl2aXNpb24gYW5kIGNvdWxkIHNlZSBDZWp1ZG8gbGVhdmluZyBhcyBhIDIgQmVsdCBmbHl3ZWlnaHQgY2hhbXBpb24gYW5kIHBvc3NpYmx5IHJlYnVpbGQgdGhlIGRpdmlzaW9uLiAKR292LiBKZXJyeSBCcm93biBhcHBvaW50ZWQgdGhlIGVsZGVyIE5ld3NvbSB0byB0aGUgU3VwZXJpb3IgQ291cnQgYmVuY2ggaW4gUGxhY2VyIENvdW50eSBpbiAxOTc1IGFuZCBoZSB3YXMgbGF0ZXIgYXBwb2ludGVkIHRvIENhbGlmb3JuaWEgQ291cnQgb2YgQXBwZWFsLCB3aGVyZSBoZSBzZXJ2ZWQgdW50aWwgcmV0aXJpbmcgaW4gMTk5NS4gCkFuZCB3cml0ZSB5b3VyIGNvbmdyZXNzcGVvcGxlLgpBcyBhIHRob3VnaHQgZXhwZXJpbWVudCwgdGhpbmtpbmcgaW4gdGhlIHNob3J0IHRlcm0gYW5kIGxvbmcgdGVybSwgaWYgSSBzYWlkIHlvdSBoYXZlIHRvIFdvdWxkIHlvdSBpbnZlc3QgaW4gQ2hpbmEgZm9yIHRoZSBuZXh0IHllYXI/IHRoaW5rIG9mIHlvdXIgYW5zd2VyIHRvIHRoYXQgcXVlc3Rpb24uIFRoYXQgdGhlIHN0YW5kYXJkIGxpbmUuCldlIGRvbiBtaW5kIGNhdGNoaW5nIGEgbW92aWUgaW4gdGhlIHRoZWF0ZXIsIGJ1dCB0aGVyZSBpc24gbXVjaCBvdXQgdGhhdCBwaXF1ZXMgb3VyIGludGVyZXN0IHJpZ2h0IG5vdywgdGhvdWdoIHlvdSBjb3VsZCBjb252aW5jZSB1cyBvZiBhIGZsaWNrIHdvcnRoIGNhdGNoaW5nLiAKU29ycnksIEkgbWlzdG9vayB5b3UgZm9yIHNvbWVvbmUgZWxzZS4gCkluIGVmZmVjdCwgdGhlIGRlY2xpbmUgdGhlc2lzIHBhcmFkaWdtIHBsYWNlZCB0aGUgT3R0b21hbiBFbXBpcmUgb3V0c2lkZSBvZiBub3JtYWwgaGlzdG9yeS4gTm9ybWFsIHN0YXRlcyBkb24gInJpc2UgYW5kIGZhbGwiIGluIHNvbWUga2luZCBvZiBzZXQgcGF0dGVybiwgdGhleSBqdXN0LiAKRm9yICQyMCBhIHNoYXJlLCB3aGlsZSB0aGUgbmV4dCBiZXN0IHByaWNlIG9mZmVyZWQgdGhlcmUgbWlnaHQgYmUgMTAwIHNoYXJlcyBmb3IgJDIwLjAxLiBBdCB0aGUgc2FtZSB0aW1lLCBhIE5ldyBZb3JrIGV4Y2hhbmdlIG1pZ2h0IGxpc3QgYSB0b3Agb2YgdGhlIGJvb2sgb2ZmZXIgb2YgMTAwIHNoYXJlcyBmb3IgJDIwLjAyLiAKVGhlIGZpcnN0IGlzIHdoYXQgeW91IG1lbnRpb25lZCBhbmQgdGhlIFNlYSBMZW1vbiB0eXBlIHN0dWZmLiAKSSBub3QgT1AgYnV0IGEgZmV3IHRoaW5ncyB0aGF0IGdlbmVyYWxseSBhcHBseTogMSkgZmluZ2VyaW5nIGhlciBmdXJpb3VzbHkgaXMgbm90IGdlbmVyYWxseSBodWdlbHkgZW5qb3lhYmxlIHdoZW4gZG9uZSBhcyBpdCBpcyBpbiBwb3JuIHdoZXJlIGl0IHRoZSBvbmx5IGZpbmdlcmluZyBtb3ZlIHRoYXQgdGhleSB1c2UgZm9yIGEgbG9uZyBwZXJpb2Qgb2YgdGltZS4gV2UgbGlrZSB0aGUgaGl0aGVyIG1vdGlvbiwgcHVzaGluZyBkb3duIHRvd2FyZHMgdGhlIGJhc2Ugb2YgaGVyIHNwaW5lIG1vdmVtZW50IGFuZCBnZW5lcmFsbHkgYSBtaXggb2YgdGVjaG5pcXVlcyB3aGljaCBpbmNsdWRlcyB2ZXJ5IHNsb3cgbW92ZW1lbnQgYW5kL29yIG5vIG1vdmVtZW50IDIpIGxpY2tpbmcgb2YgdGhlIGNsaXRvcmlzIHdpdGggdGhlIHRpcCBvZiBhIHRvbmd1ZSBpbiBhIGphYmJpbmcgbW90aW9uIGlzIG5vdCBncmVhdC4gClRoZSBtYWluIHNoYXBlcyBvZiBwb2tlciB0YWJsZSB0b3BzIGFyZSByb3VuZCwgb2N0YWdvbmFsLCBhbmQgb3ZhbC4gT2N0YWdvbmFsIHRhYmxlcyBtYWtlIGVhY2ggcGxheWVyJ3MgcGxheWluZyBzcGFjZSBtb3JlIGRlZmluZWQuIE5leHQsIHlvdSdsbCB3YW50IHRvIGF2b2lkIG92YWwgcG9rZXIgdGFibGUgdG9wcywgc2luY2UgaXQncyB0b28gY2hhbGxlbmdpbmcgZm9yIHNvbWUgcGxheWVycyB0byByZWFjaCB0aGUgbWlkZGxlIG9mIHRoZSB0YWJsZS4gQmFzaWNhbGx5LCBpZiB5b3Ugd2FudCBhIHN5bW1ldHJpY2FsIHRhYmxlIHRoYXQncyBjb252ZW5pZW50IGZvciBlYWNoIG9mIHRoZSBwb2tlciBwbGF5ZXJzLCB0aGVuIHRoZSBiZXN0IGNob2ljZSBpcyBkZWZpbml0ZWx5IGEgcm91bmQgdGFibGUuCkhhbW1pbGwgd2FzIGEgZmluZSBmaWdodGVyLCBidXQgbm90IGluIEpvbmVzIGxlYWd1ZS4gTm90IGV2ZW4gaW4gdGhlIGxlYWd1ZSBiZWxvdyBKb25lcyBsZWFndWUuIEl0IHdhcyBnb2luZyB0byBiZSBhIGJsb3cgb3V0LiAKSXQgd2FzIGFuIGhvbmVzdCwgYWxiZWl0Y2FyZWxlc3MgbWlzdGFrZS4gClRoZXkgZ290IGJhY2sgdG9nZXRoZXIsIGhlIHN0b3BwZWQuIFRoZW4gdGhleSBkaXZvcmNlZCwgYW5kIEkgaGFkIHRvIGdldCBhIHNlY3VyaXR5IGNhbWVyYSwgYmVjYXVzZSBoZSB3YXMgdmFuZGFsaXppbmcgbXkgdmVoaWNsZXMsIHRvc3NpbmcgbXkgcG90dGVkIHBsYW50cyBhcm91bmQsIGFuZCBldmVuIGN1dCBteSBnYXJkZW4gaG9zZSEgU28sIEkgYXBwcm9hY2hlZCB0aGUgcmVjZW50IHdpZmUvZXggd2lmZSAoMyksIGFuZCB3ZSBoYWQgYSBsb3ZlbHkgY2hhdC4gCldoZW4gaW4gYWN0dWFsaXR5IGdpdmVuIGVub3VnaCB0aW1lIHRoaW5ncyB3aWxsIGp1c3QgYmFsYW5jZSBvdXQuIApNeSBudXRyaXRpb24gc3Vja2VkLCBidXQgSSBsb3N0IDIgbGJzIGluc3RlYWQgb2YgZ2FpbmluZyA4IGxpa2UgbGFzdCB5ZWFyLiAKQW50b251bHJpY2ggIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJbWFnaW5lIGlmIGluZGVwZW5kZW50IGFydGlzdHMgaGFkIHRoZSBzYW1lIGNvbm5lY3Rpb25zIG9yIG1hcmtldGluZyB0ZWFtIHRoZSBUT1A1MCBhcnRpc3RzIGhhdmUuIApJdCB3YXMgYSBjb250cmFjdCwgYW5kIGJhc2VkIG9uIGNpcmN1bXN0YW5jZXMgICBzb21lIHdpdGhpbiB0aGUgc2Nob29sJ3MgY29udHJvbCwgYW4gc29tZSBiZXlvbmQgaXQsIHN1Y2ggYXMgdGhlIGRlY2xpbmUgaW4gdGhlIHJlYWwgZXN0YXRlIG1hcmtldCAgIHRoaXMgdW5mb3J0dW5hdGUgc2l0dWF0aW9uIGhhcHBlbmVkLiJBbGwgY29udGludWluZyBCb3VsZGVyIENvbGxlZ2Ugb2YgTWFzc2FnZSBUaGVyYXB5IHN0dWRlbnRzIG5vdyBoYXZlIHRoZSBvcHRpb24gdG8gdHJhbnNmZXIgb3IgdGFrZSBwYXJ0IGluIGEgdGVhY2ggb3V0IG9mIHRoZSByZW1haW5pbmcgcG9ydGlvbiBvZiB0aGVpciBwcm9ncmFtIGF0IHRoZSBDb2xvcmFkbyBTY2hvb2wgb2YgSGVhbGluZyBBcnRzIGluIExha2V3b29kLiAKTXkgbWFuYWdlciBkaWRuIGdldCBiYWNrIHRvIG1lIHJpZ2h0IGF3YXksIG5vIGJpZyBkZWFsIHNpbmNlIGl0IHdhcyA3IG1vbnRocyBvdXQuIFNvIGFib3V0IGEgbW9udGggbGF0ZXIsIEkgZ2V0IGFuIGVtYWlsIGZyb20gbXkgbWFuYWdlciB0ZWxsaW5nIG1lIHRoYXQgdGhleSBjb3VsZG4gZ3JhbnQgbWUgbXkgcmVxdWVzdCB0aGVuIGFuZCB0aGVyZSBidXQgd291bGQgcmV2aWV3IGluIGEgY291cGxlIG1vbnRocy4gT2sgZmluZSwgaXQgc3RpbGwgbGVhdmVzIDQgb3Igc28gbW9udGhzIHRvIHNwYXJlLiAKQnV0IGEgbmF0aW9uIGlzIG5vdCBqdXN0IGltYWdpbmVkLCBpdCBpcyBhbHNvIGEgY29tbXVuaXR5OiBhbiBpbWFnaW5lZCBjb2xsZWN0aW9uIG9mICJ1cyIgYWdhaW5zdCBhbiBpbWFnaW5lZCBjb2xsZWN0aW9uIG9mICJ0aGVtLiIKVGhlIE1haW4gRXZlbnQsIGhvd2V2ZXIsIHRha2VzIHBsYWNlIGluIE5vdmVtYmVyLiAKMjggSmFuIDIwMTYgLiAKSSBrbm93IGhpZ2ggZ3Jhdml0eSBsb3dlcnMgeW91ciBsaWZlc3BhbiBieSBhZGRpbmcgc3RyZXNzIHRvIHlvdXIgaGVhcnQuCldoaWNoIG1lYW5zIGl0IGhhcyBjaGFyYWN0ZXIgYW5kIGlzIGEgcGllY2Ugb2YuIApNeSB3aWZlIGFuZCBJIGF0dGVuZGVkIHRoZSBmdW5lcmFsIG9mIGEgZ3V5IHdlIGhhZCBwbGF5ZWQgcG9rZXIgd2l0aCBmb3IgeWVhcnMuIEkgbWVhbiwgNCBuaWdodHMgYSB3ZWVrIGZvciA2IHllYXJzISBXaGVuIHdlIHdhbGtlZCBpbiBhbmQgd2VudCB0byBzaWduIHRoZSBndWVzdCBib29rLCBteSB3aWZlIHN1ZGRlbmx5IGdvdCBhIGNhc2Ugb2YgdGhlIGdpZ2dsZXMsIG91dCBvZiBub3doZXJlISBOb3csIHdlIGhhZCBzcGVudCBhIGxvdCBvZiB0aW1lIGFyb3VuZCB0aGlzIGR1ZGUsIGFuZCBsYXVnaGVkIGEgbG90IHdpdGggdGhlIGd1eSBvdmVyIHRoZSB5ZWFycywgYnV0IGhpcyBmYW1pbHkgd2FzIG1vcnRpZmllZC4gSSBoYWQgdG8gd2FsayBteSB3aWZlIG91dCwgdGhyb3VnaCBoaXMgZW50aXJlIGZhbWlseSwgd2hpbGUgc2hlIHdhcyBsYXVnaGluZyBzbyBoYXJkIHNoZSB3YXMgc25vcnRpbmcgYW5kIGNyeWluZy4gR29vZCB0aW1lcy4gQSBmZXcgd2Vla3MgbGF0ZXIsIHdlIHJlY2VpdmVkIGEgdGhhbmsgeW91IG5vdGUgZnJvbSB0aGUgZmFtaWx5IGZvciBiZWluZyBhdCB0aGUgbWVtb3JpYWwgc2VydmljZS4gUklQLCBNci4gSW4gdGhlIDE1IHllYXJzIEkndmUgYmVlbiByaWRpbmcsIEkndmUgbG9nZ2VkIG92ZXIgMTAwayBtaWxlcyBhbmQgdHdvIGNyb3NzIGNvdW50cnkgdHJpcHMuIEkgYWxzbyBhbG1vc3QgbG9zdCBteSBsaWZlIHdoZW4gYSB3b21hbiBoaXQgbWUgbGFzdCB5ZWFyLCB0b3RhbGluZyBteSBGYXQgQm9iIGFuZCBsYW5kaW5nIG1lIGluIHRoZSBJQ1UgZm9yIGEgd2Vlay4gQnV0IGV2ZW4gaWYgSSBoYWRuJ3QgZG9uZSBhbnkgb2YgdGhpcywgaXQgd291bGRuJ3QgbWF0dGVyLiBJJ20gZG9pbmcgbWUuIFlvdSdyZSB0aGUgb25lIHRyaWdnZXJlZCBieSBzb21lIGR1ZGUncyBTb0Ega2V5Y2hhaW4uIFRoYXQsIHRvIG1lLCBzb3VuZHMgbGlrZSB0aGUgbG93ZXN0IGNvbW1vbiBkZW5vbWluYXRvciBvZiBidXR0aHVydC4gSSBzdWdnZXN0IHlvdSBmaW5kIGEgaGFwcHkgcGxhY2UsIHN0b3AganVkZ2luZyBvdGhlcnMsIGFuZCBmb2N1cyBvbiB5b3VyIG93biBoYXBwaW5lc3MuCk1haXMgcmV2ZW5pciBhdXggY29uY2VwdHMgcHJoaXN0b3JpcXVlcyBhbG9ycyBxdSdvbiBlc3QgdW4gdHJlIHF1aSBuJ2EgcGFzIGxlcyBtbWVzIG9wcG9ydHVuaXRzLCBxdWkgbmUgYmFpZ25lIHBhcyBkYW5zIGxlIG1tZSBtaWxpZXUsIHF1aSBuZSBzdWJpdCBwYXMgbGVzIG1tZXMgYWxhcywgYydlc3QgZGUgbCdpbmNvbnNjaWVuY2UuUG91ciBjZSBxdWkgY29uY2VybmUgbGUgcmdpbWUgcGFsbyBpbnNwaXIgZGUgY2VsdWkgZHUgImNoYXNzZXVyIGN1ZWlsbGV1ciIsIGlsIGVzdCBwb3NzaWJsZSBxdSdpbCBjb252aWVubmUgYXUgZ3JvdXBlIE8gKGNvbW1lIG9yaWdpbmVsKSBtYWlzIGF0dGVudGlvbiBsIGVuY29yZSAgbGEgc3l0bWF0aXNhdGlvbiBldCBkdSByZ2ltZSBwYWxvIHRycyAgbGEgbW9kZSBldCBkZSBsYSB0aG9yaWUgZHUgRHIgQWRhbW8uRGUgcGx1cywgc2kgb24gcmVnYXJkZSBsYSBtZGVjaW5lIGRlIFNhaW50ZSBIaWxkZWdhcmRlLCBtbWUgbGEgbWRlY2luZSBjaGlub2lzZSwgbGUgY3J1IGV4aXN0ZSBtYWlzIG5lIGZhaXQgcGFzIGxhIHJnbGUgZGUgbnV0cml0aW9uLiAKQ29tcHV0ZXJzIGFyZSBhIGJpZyBwYXJ0IG9mIHRoZSBidXNpbmVzcywgYnV0IHRoZXkgZGlkbiBtYWtlIHVzIGFueSBtb25leS4gClRoZSBpZGVhIHNlZW1zIGZ1biBidXQgdGhlIHJlYWxpdHkgaXMgYWx3YXlzIGdvaW5nIHRvIGJlIGRpZmZlcmVudC4gTWFraW5nIHRoaXMgYWx0ZXJuYXRpdmUgY29tbWl0bWVudCBpcyBpcnJldmVyc2libGUuIFlvdXIgbmV3IHBhcnRuZXIgaXNuIGdvaW5nIHRvIGxldCB5b3UgbW92ZSBpbiwgaXQgdG9vIHNvb24uIApBdCBhIG1pbmltdW0sIG9uZSBlbGVtZW50IGZyb20gZWFjaCBjb2x1bW4gbXVzdCBiZSBwcmVzZW50IHRvIGVzdGFibGlzaCBhIHBvdGVudGlhbCBzaXR1YXRpb24gb2Ygc2V4IHRyYWZmaWNraW5nLiBUaGUgcHJlc2VuY2Ugb2YgZm9yY2UsIGZyYXVkLCBvciBjb2VyY2lvbiBpbmRpY2F0ZXMgdGhhdCB0aGUgdmljdGltIGhhcyBub3QgY29uc2VudGVkIG9mIGhpcyBvciBoZXIgb3duIGZyZWUgd2lsbC4gCkluIDIwMDQsIEkgd3JvdGUgYW4gYXJ0aWNsZSBwdWJsaXNoZWQgaW4gSk1QVCB0aGF0IGZvY3VzZWQgb24gaW1wb3J0YW50IG5vbiBjYWxjaXVtIGludGFrZSBmYWN0b3JzIHRoYXQgaW5mbHVlbmNlIGJvbmUgaGVhbHRoLCBpbmNsdWRpbmcgZGlldGFyeSBhY2lkaXR5LCBlc3NlbnRpYWwgZmF0dHkgYWNpZHMgYW5kIG1hZ25lc2l1bS4xClByaXZpbGVnZSB0cmllcyB0byBkbyB0aGUgc2FtZSB0aGluZyBhcyByYWNpc20gb3Igc2V4aXNtOiBtYWtlIGEgaGFuZHkgdW1icmVsbGEgdGhhdCB3ZSBjYW4gcHV0IGEgd2hvbGUgZ3JvdXAgdW5kZXIuIApBZnRlciBmb3VyIHllYXJzIGluIHNlbGYgZXhpbGUsIGhlIHJldHVybmVkIHRvIFBha2lzdGFuIGluIE1hcmNoIGJ1dCBoYXMgZmFjZWQgYSBzdHJpbmcgb2YgbGVnYWwgcHJvYmxlbXMgc2luY2UgdGhlbi4KSXQgYnJlYWtzIG15IGhlYXJ0IHRvIGtub3cgSSB3aWxsIG5vIGxvbmdlciBiZSBzZWVpbmcgdGhhdCBzbWlsZSwgaGVhcmluZyBoZXIgdm9pY2UgYW5kIGtub3dpbmcgSSB3aWxsIG5ldmVyIGhhdmUgaGVyIGluIG15IGFybXMgYWdhaW4sIiBSYW1kaW4ncyBzdGF0ZW1lbnQgcmVhZC4uIAoobmVhciBGaXJzdCBBdmVudWUpIGluIFBpa2UgTWFya2V0LCB0aGUgYmFrZXJ5IGFuZCBmb29kIHN0YW5kIGlzIHRoZSBoaWdoZXN0IHJhdGVkIGRvdWdobnV0IHNwb3QgaW4gU2VhdHRsZS4gRW50aWNpbmcgcGFzc2VycyBieSB3aXRoIHRoZSBzd2VldCBzbWVsbCBvZiBmcmVzaGx5IGJha2VkIGFuZCBmcmllZCBkb3VnaCwgRGFpbHkgRG96ZW4gc3BlY2lhbGl6ZXMgaW4gd2FybSwgYml0ZSBzaXplIGRvdWdobnV0cyBzcHJpbmtsZWQgd2l0aCBwb3dkZXJlZCBzdWdhciBvciBjaW5uYW1vbi4uIApUaGV5IHdpbGwgc2xlZXAgaW4gdGhlIHNhbWUgcm9vbSB3aGVyZSB0aGV5IHdvcmsgdG8gc2F2ZSBtb25leSAoYXMgdGhlIHJvb21zIGFyZSByZW50ZWQgYnkgdGhlIGRheSksIGFuZCB0aGV5IGZvY3VzIG9uIHdvcmtpbmcgYXMgbXVjaCBhcyBwb3NzaWJsZSB0byBtYXhpbWl6ZSB3aGF0IHRoZXkgdGFrZSBob21lLiBUaGV5IHVzdWFsbHkgbWFrZSBtZSBmZWVsIHdlbGNvbWUgYXMgYSBjdXN0b21lciwgaGF2ZSBlbXBhdGh5IGZvciBteSBtb3RpdmF0aW9ucyBmb3IgYmVpbmcgdGhlcmUsIGFuZCB0cnkgZ2VudWluZWx5IGhhcmQgdG8gbWFrZSB0aGUgZXhwZXJpZW5jZSBzYXRpc2Z5aW5nLiAKVm91cyBwb3V2ZXogbGUgY29uc3VsdGVyIGVuIGxlIHRsY2hhcmdlYW50IGxlIGZpY2hpZXIgUERGLiBMZSB2dSBwcnNlbnQgcGFyIGxhIG1haXJlIGR1IDllIGEgdCByZWpldCBwYXIgbGUgY29uc2VpbCBkZSBQYXJpcy4uIApKYXZpdHMgb2YgTmV3IFlvcmsuIApIaWdoIHJlc29sdXRpb24gc2F0ZWxsaXRlIGltYWdlcyByZXZpZXdlZCBieSAgb24gV2VkbmVzZGF5IGFsc28gc2hvd2VkIHRoYXQgdGhlIG1hZHJhc2EsIHNhaWQgdG8gYmUgcnVuIGJ5IG1pbGl0YW50IGdyb3VwIEphaXNoIGUgTW9oYW1tYWQsIGFwcGVhcnMgdG8gYmUgc3RpbGwgc3RhbmRpbmcgYW5kIHZpcnR1YWxseSB1bmNoYW5nZWQgZnJvbSBhbiBBcHJpbCAyMDE4IHNhdGVsbGl0ZSBwaG90byBvZiB0aGUgZmFjaWxpdHkuIApZb3UgYXJlIG5vdCBhbG9uZSBpbiB0aGlzIGV4cGVyaWVuY2UsIGJ1dCB1bmZvcnR1bmF0ZWx5LCBpdCBoYXJkIGZvciB0aG9zZSB3aG8gaGF2ZW4gZXhwZXJpZW5jZWQgaXQgdG8gdW5kZXJzdGFuZC4gClRoZXNlIGZ1bmRhbWVudGFsIHRydXRocyBwb3dlciB0aGUgZW5naW5lcyBvZiB0aGUgd2F5IGluIHdoaWNoIHRoZSBVUyBpcyBzcG9rZW4gb2YgaW4gUGFraXN0YW4sIGFuZCB0aGUgd2F5IGluIHdoaWNoIFBha2lzdGFuIGlzIHNwb2tlbiBvZiBpbiB0aGUgVVMuIFRoZXJlIG1pZ2h0IGJlIGEgcG90IG9mIG1vcmUgbW9uZXkgYXQgdGhlIGVuZCBvZiB0aGlzIHRoaXJkIGVkaXRpb24gb2YgdGhlIFVTIFBha2lzdGFuIHN0cmF0ZWdpYyBkaWFsb2d1ZSByYWluYm93LiBXZSBjYW4gYmUgYXNzdXJlZCBob3dldmVyIHRoYXQgdGhlIG9uZSB0aGluZyB3ZSB3aWxsIG5vdCBmaW5kIGF0IHRoZSBlbmQgb2YgdGhlIHJhaW5ib3cgaXMgYSBtb3JlIHRydXRoZnVsIGRpc2N1c3Npb24gYWJvdXQgdGhpcyByZWxhdGlvbnNoaXAuIEhlcmUncyBob3BpbmcgdGhhdCBuZWl0aGVyIGNvdW50cnkgc3VmZmVycyBhcyBhIHJlc3VsdCBvZiB0aGlzIGRlbGliZXJhdGUgYmxpbmRuZXNzLgpFdmVudHVhbGx5LCBBdXNjaHdpdHogaW4gcGFydGljdWxhciBqdXN0IGdyZXcgdG9vIGRhbW5lZCBsYXJnZSB0byBoaWRlIHRoZWlyIGFjdGl2aXRpZXMgYW55bW9yZSBidXQgYnkgdGhlbiB0aGUgTmF6aSBjb3VsZG4gYmUgc3RvcHBlZCBhbmQgd2VyZSBpbiBmdWxsIGNvbnRyb2wgb2YgZXZlbiB0aGUgc21hbGxlc3QgYXNwZWN0IG9mIHNvY2lldHkuIEl0IHdhcyB0b28gbGF0ZSBldmVuIHRob3VnaCBldmVyeW9uZSBrbmV3IHdoYXQgd2FzIGhhcHBlbmluZy4uIApTaGUgaXMgb3ZlciA1MCBzbyBwbGVhc2UgcmVhbGl6ZSB0aGF0IHBlb3BsZSBjYW4gZ3JvdyBhbmQgbWF0dXJlLiAKSW4gdGhpcyBjYXNlLCB0aGUgdGVuZG9uIGluIHF1ZXN0aW9uIGlzIHRoZSBxdWFkcmljZXBzIHRlbmRvbiB0aGF0IGNvbm5lY3RzIHRoZSBxdWFkcmljZXBzIG11c2NsZSB0byB0aGUga25lZWNhcC4gRXZlbiBpZiB0aGUgcGFpbiBmcm9tIHRoZSB0ZW5kaW5vc2lzIGlzIGJlaW5nIG1hbmFnZWQsIHRoZSBtYWluIHByb2JsZW0gYXNzb2NpYXRlZCB3aXRoIHRoaXMgdGVuZGlub3BhdGh5IGlzIHRoZSB0ZW5kb24gYmVpbmcgY29tcHJvbWlzZWQuIENvbnRpbnVlZCB1c2Ugb2YgdGhlIHRlbmRvbiBtYWtlcyB5b3UgaGlnaGx5IHN1c2NlcHRpYmxlIHRvIHBhcnRpYWwgb3IgY29tcGxldGUgdGVuZG9uIHJ1cHR1cmVzICAgaW5qdXJpZXMgdGhhdCBjYW4gc2lnbmlmaWNhbnRseSBzaG9ydGVuIGFuIE5CQSBjYXJlZXIuCkkga25vdyBpdCBzZWVtcyBvdmVyd2hlbG1pbmcgYnV0IGlmIHlvdSBzdGFydCBieSByZWFkaW5nIGFsbCB0aGUgc3RpY2tpZWQgdGhyZWFkcyBhdCB0aGUgdG9wIG9mIGVhY2ggZm9ydW0geW91IGdldCB0aGUgaGFuZyBvZiB0aGUgamFyZ29uIHByZXR0eSBxdWlja2x5LiAKVGhlIHN0cmF0ZWd5IHVzZWQgZm9yIHRoZXNlIGdhbWVzIGlzIGRyYW1hdGljYWxseSBkaWZmZXJlbnQgZnJvbSB0aGUgc3Ryc3RlZ3kgeW91J2xsIHVzZSBhdCBhIGZ1bGwgcG9rZXIgcm9vbS4gCihBc2lkZTogSXQncyBOQkQuIE15IHNvbiBjb2xsZWN0cyBDUFMgcmVwb3J0cyB0aGUgd2F5IHNvbWUga2lkcyBjb2xsZWN0IFBva21vbi4gSSBhbSB3ZWxsIGtub3duIHRvIENQUyBmb3Igc3dlYXJpbmcgYXQgdGhlbSBoYW5naW5nIHVwIG9uIHRoZW0gdW50aWwgdGhleSByZWFkIGhpcyBmaWxlLiBJJ3ZlIHBhc3NlZCBldmVyeSBpbnZlc3RpZ2F0aW9uLiBXZSBjdXJyZW50bHkgaGF2ZSAyIGFjdGl2ZSBpbnZlc3RpZ2F0aW9ucyBJJ20gd29ya2luZyB3aXRoIHZvbHVudGFyeSBzZXJ2aWNlcy4pCkl0IGVuZGVkIHVwIGJlaW5nIG91ciBiZXN0IHB1cmNoYXNlIGJlY2F1c2UgaXQgY2hhbmdlZCB0aGUgd2hvbGUgY29tcGxleGlvbiBvZiB0aGUgcm9vbS4gSW4gZmFjdCwgdGhlIGNvdXBsZSB3ZSB3ZXJlIGRvaW5nIHRoaXMgZm9yIHdlcmVuJ3QgdmVyeSBoYXBweSB3aXRoIHRoZSBlbmQgcmVzdWx0IGJlZm9yZSB3ZSBwdXJjaGFzZWQgdGhlIFN1aXRlZCBQdXJwbGUgVGV4YXMgSG9sZGVtIFBva2VyIFRhYmxlIENsb3RoLCBidXQgYWZ0ZXJ3YXJkcyB0aGV5IGJlY2FtZSBleHRyZW1lbHkgcmVjZXB0aXZlLiBJdCBqdXN0IGdvZXMgdG8gc2hvdyB5b3UgdGhhdCBpdCBkb2Vzbid0IG1hdHRlciB3aGF0IHR5cGUgb2YgZmFuY3kgcGljdHVyZXMgb3IgZnVybml0dXJlIHlvdSBoYXZlIGJlY2F1c2Ugc29tZXRoaW5nIGFzIGxpdHRsZSBhcyBmZWx0IGNhbiBtYWtlIGFsbCB0aGUgZGlmZmVyZW5jZS4KU3VuZGF5IHZpc2l0b3JzIGF0IHRoZSBob21lIG9mIFMuIApZb3UgbG9zaW5nIEVWIGlmIHlvdSBkb24gc2VlbXMgc2ltcGxlLCBidXQgdGhlcmUgYXJlIG1vcmUgZmFjdG9ycy4gCk5ldyBwbGF5ZXJzIHdobyB3YW50IHRvIGxlYXJuIHRoZSBnYW1lIGNhbiBjaG9vc2UgZnJlZSBwb2tlciBzaXRlcyBvbmxpbmUsIGFsbG93aW5nIHBsYXllcnMgdG8gbGVhcm4gdGhlIGdhbWUgYW5kIHBsYXkgd2l0aCBjb21wbGV0ZWx5IHJpc2sgZnJlZSBhdHRpdHVkZS4gV2l0aCB0aGVzZSBmcmVlIHBva2VycyBtb25leSB0aGF0IGRvZXMgbm90IHJlcXVpcmUgY2FzaCBkZXBvc2l0cyByYXRoZXIgdGhleSBvZmZlciBmcmVlIG1vbmV5IHRvIHBsYXkgYmVnaW5uZXJzIGNhbiBsZWFybiB0cmlja3MgYW5kIHRlY2huaXF1ZXMgb2YgdGhlIGdhbWUgYW5kIGJlIHdlbGwgdmVyc2VkIHdpdGggaXQuIFRoZXkgY2FuIHByYWN0aWNlIGFuZCBldmVudHVhbGx5IGVhcm4gbW9uZXkgZnJvbSB0aGVzZSBnYW1lcy4gCiJUaGVzZSBzbyBjYWxsZWQgR29vZCBCdWlsZGluZ3MgYXJlIDQyIGNvb3BlcmF0aXZlIGFwYXJ0bWVudCBob3VzZXMgYnVpbHQgbW9yZSB0aGFuIGhhbGYgYSBjZW50dXJ5IGFnby4gClNoZSB3cml0ZXMgdGhhdCBhdHRyYWN0aW9uIGluIHBhcnRpY3VsYXIgdGhyaXZlcyBvbiB0aGUgZXhjaXRlbWVudCBvZiB0aGUgIm90aGVyIiBhbmQgaWYgeW91ciBpZGVudGl0aWVzIGFyZSB0b28gaW50ZXJ0d2luZWQsIG9yIG9uZSBvciBib3RoIGFyZSB0b28gaW50ZXJkZXBlbmRlbnQsIHRoZSBvdGhlciBjZWFzZXMgdG8gZXhpc3QuIEJ5IHNlcGFyYXRpbmcgeW91ciBsaXZlcyBhbmQgaWRlbnRpdGllcyBzb21lLCB5b3UgY2FuIHJlY292ZXIgdGhhdCBmZWVsaW5nIG9mIG90aGVybmVzcyBieSBhZGRpbmcgc29tZSBteXN0ZXJ5IGJhY2sgaW4gdGhlIHJlbGF0aW9uc2hpcC4gCk15IGFkdmljZSB3b3VsZCBiZSB0aGF0IHdoZW4gZG9pbmcgZmFtaWx5IHRyZWVzIHlvdSBhbHdheXMgY29ubmVjdGVkIG1hcnJpYWdlcyBieSB0aGUgc2lkZSBvZiB0aGUgbmFtZSBhbmQgY2hpbGRyZW4gd2l0aCBhIGRvd24gc3Ryb2tlLiBBbHNvIHlvdSBuZWVkIHNlcGFyYXRlIGxpbmVzIGZvciBlYWNoIG1hcnJpYWdlLCBvdGhlcndpc2UgeW91IGdldCB2ZXJ5IGNvbmZ1c2VkIHBhcmVudGFnZS4gWW91IGhhdmUgYSBmZXcgc3BvdHMgd2hlcmUgdGhpbmdzIGdldCBqdW1ibGVkIGFuZCBpdHMgaGFyZCB0byB0ZWxsIHdobyBpcyBtYXJyaWVkIHRvIHdoby4gClRoZSB0ZXJtIGNpcyB3YXMgaW50cm9kdWNlZCB0byByZXBsYWNlIHRoZSB1c2FnZSBvZiAibm9ybWFsIiBvciAicmVndWxhciIgaW4gdGhlc2Ugc2l0dWF0aW9ucyB0byBiZSBtb3JlIGluY2x1c2l2ZSBvZiB0cmFucyBwZW9wbGUuIEluIHRoZSBzZW5zZSB0aGF0IGl0IGNvdWxkIGJlIGNvbnNpZGVyZWQgZGVtZWFuaW5nIHRvIGNvbnRyYXN0IGJlaW5nIHRyYW5zIHdpdGggYmVpbmcgbm9ybWFsLiBGb3IgZXhhbXBsZSBzYXlpbmcsICJObywgSSBub3QgdHJhbnMsIEkgbm9ybWFsLCIgY2FuIGJlIGh1cnRmdWwgYW5kIGhhdmUgYW4gb3RoZXJpbmcgZWZmZWN0IG9uIGEgdHJhbnMgcGVyc29uIHRoYXQgeW91IG1pZ2h0IGNhcmUgYWJvdXQuIApObyBiaWcgZGVhbCwgaXQgYSByZWd1bGFyIGRheSBpbiB0aGUgdmlsbGFnZS4gSSBkaWRuIGdvIG91dCB0byBwbGF5IHdpdGggbXkgZnJpZW5kcyB0aGF0IGRheSBhcyBJIHByZXR0eSBtdWNoIG5hcHBlZCB0aGUgZW50aXJlIGFmdGVybm9vbiBhZnRlciBzY2hvb2wuIEZvciBjb250ZXh0LCB3ZSBsaXZlIGluIGEgdGlueSB2aWxsYWdlIHByZXR0eSBtdWNoIGluIHRoZSBtaWRkbGUgb2YgdGhlIGp1bmdsZS4uIApOb3cgYWxsIG9mIGEgc3VkZGVuIGhlIHdhbnRzIG1vcmUgdGltZSwgd2hlbiBoZSBpcyBub3cgcmVzcG9uc2libGUgZm9yIDIgbW9yZSBwZW9wbGUuICh0aGUgZ2lybGZyaWVuZCBhbmQgaGVyIHNvbikuIApCdXQgZGVzcGVyYXRlIHRpbWVzIGNhbGwgZm9yIGRlc3BlcmF0ZSBtZWFzdXJlcywgYW5kIEplc3NvcCBzYXlzIGhlIGlzIGNhdXRpb3VzbHkgaG9wZWZ1bC4gCllvdSBtYXkgY29udGludWUgdG8gcm9sbCB0aGUgZGljZSBhcyBsb25nIGFzIHlvdSBjYW4gZGlzY2FyZCB0aGUgY2FyZCB0aGF0IGNvcnJlc3BvbmRzIHdpdGggdGhlIGRpY2UuIApXZSBzdG9uZGVuIHBhcyBvbSA4dSBvcCwgZW4gaGV0IHdhcyBkYW4gb29rIGFsIG5hIDEwdSB0b2VuIHdlIGhldCBSb2RlIFBsZWluIG9wd2FuZGVsZGVuLiAKU2hvdWxkIHBvbGl0aWNpYW5zIHdobyBwdXJwb3NlZnVsbHkgbGllIHRvIHN0YXJ0IHdhcnMgb2YgYWdncmVzc2lvbiBiZSBleGVjdXRlZCB3aXRob3V0IHRyaWFsPyBBZnRlciBhIHRyaWFsPyBZZXMgb3Igbm8uClRoZXkgaGFkIHdvdmVuIGEgbmV0IG9mIHRoZWlyIGJyb2tlbiBoZWFydHMsIGFuZCB0aGV5IHdlcmUga2VlcGluZyBtZSBzYWZlIHRoZXJlLiBJIHJlYWxpemVkIHRoYXQgb25lIGRheSBJIHdvdWxkIHRha2UgbXkgcmlnaHRmdWwgcGxhY2UgYXMgYSBsaW5rIGluIHRoaXMgd2ViLCBhbmQgSSB3b3VsZCBob2xkIG15IHNpc3RlciBtb3RoZXJzIHdoZW4gdGhlaXIgY2hpbGRyZW4gZGllZC4gCkluIHRoZSBkaXN0YW5jZSB0aGVyZSB3ZXJlIHBsdW1lcyBvZiBibGFjayBzbW9rZSB3aGljaCB3ZSBsYXRlciBsZWFybmVkIHdlcmUgZnJvbSwgb2YgYWxsIHRoaW5ncywgYSBjcmFzaGluZyBibGltcC4gQXQgdGhlIHRpbWUsIGl0IHNlZW1lZCBtb3JlIGxpa2VseSB0byBiZSBjb21pbmcgZnJvbSBSYWhtIGVhcnMuCiJBcmUgd2UgZ29pbmcgdG8gZG8gdGhhdD8iIG15IG9sZGVyIGRhdWdodGVyIGFza3MuICJDaGFuZ2UgdGhlIGxhd3Mgc28gcG9saXRpY2lhbnMgZG9uIGhhdmUgdG8gcmVwcmVzZW50IGNvcnBvcmF0aW9ucyBpbnN0ZWFkIG9mIHBlb3BsZT8iCldoYXQgU3VwZXJuYXR1cmFsIGxhY2tzIGluIHdyaXRpbmcgYW5kIGJ1ZGdldCwgdGhvdWdoLCBpcyBhbG1vc3QgbWFkZSB1cCBmb3IgYnkgdGhlIGZhY3QgdGhhdCB1bmxpa2UgaW4gdGhlIFggRmlsZXMsIHRoZSBhdWRpZW5jZSBkb2Vzbid0IGhhdmUgdG8gd29ycnkgYWJvdXQgdGhlIGNyZWF0b3JzIGdldHRpbmcgYm9yZWQgYW5kIG1ha2luZyB0aGUgdHdvIGxlYWRzIGZhbGwgaW4gbG92ZSBhbmQgaGF2ZSBhIGJhYnkuIFdlbGwsIG5vdCB1bmxlc3MgdGhleSdyZSByZWFsbHkgZGVzcGVyYXRlIGZvciByYXRpbmdzLi4gCkkgaGl0IDEgOCBwYWlyIG9uIHRoZSBmbG9wIGFuZCAxIDEwIHBhaXIgb24gdGhlIHR1cm4uIApJbiB0aGUgZnV0dXJlLCBhdm9pZCB0aGVzZSBtYXNzYWdlIHBsYWNlcy4gR28gZm9yIGEgcHJvZmVzc2lvbmFsIG9mZmljZSAoc29tZXdoZXJlIGxvY2FsIG92ZXIgYSBjaGFpbiBpZiBwb3NzaWJsZSkuIApTdHVmZmFuZG1vcmVzdHVmZiB1Ckhvd2V2ZXIsIGF0IHNvbWUgcG9pbnQgZHVyaW5nIHRoZSBzZXNzaW9uICh1c3VhbGx5IHRoZSBsYXR0ZXIgaGFsZiksIHlvdSB3aWxsIGJlIGFza2VkIHRvIGZsaXAgb3ZlciBhbmQgdGhleSB3aWxsIGFzayB5b3Ugd2hhdCBraW5kIG9mIHNlcnZpY2VzIHlvdSB3YW50LiAKSGUgc2hvdWxkIDNiIHNvbWUgS1EgcHJlZmxvcC4gCkkgZ290IGEgY2FsbCB0aGUgbmV4dCBkYXkgZnJvbSBGZWRFeCBzYXlpbmcgdGhleSBoYWRuJ3QgbG9jYXRlZCBteSBwYWNrYWdlLiBUaGVpciBwcm9jZWR1cmUgaXMgdG8gbm90aWZ5IHRoZSBzZW5kZXIgYW5kIHRoZSBzZW5kZXIgaXMgdGhlIG9uZSB0aGF0IHJlcXVlc3RzIGEgcmVmdW5kLiAKU3Bva2UgdG8gR29kIGFib3V0IENpYXJhbiBmYXZvdXJpdGUgdG95cywgZm9vZCwgY29sb3VyIGFuZCBhbGwgdGhlIHRoaW5ncyB0aGF0IG1hZGUgaGltIHVuaXF1ZS4gTXkgaW5qdXJpZXMgd2VyZSB0d28gZnJhY3R1cmVkIGFua2xlcywgYSBjb21wb3VuZCBmcmFjdHVyZSB0byBteSBsZWZ0IGxlZywgYSBmcmFjdHVyZWQgcGVsdmlzIGFuZCBoaXAsIGEgZnJhY3R1cmVkIGVsYm93IGFuZCBzdGVybnVtLCBidXQgdGhlIHdvcnN0IGluanVyeSB3YXMgdGhlIHBhaW4gd2hpY2ggY2FtZSBmcm9tIG15IGJyb2tlbiBoZWFydC4gCjIgIHRoZSAyJSBydWxlIGlzIHN0dXBpZCwgZXNwZWNpYWxseSBpbiBDYWxpLCBpdCBtYWtlcyBubyBzZW5zZSBhbmQgaXMgZGVjZXB0aXZlLiBUaGF0IHNhaWQgeW91IG1pZ2h0IHN0aWxsIGZpbmQgb25lIGhlcmUgYW5kIHRoZXJlIGJ1dCB3aGVuIHlvdSBkbyB0aGVyZSB0ZW5kcyB0byBiZSBhIGxvdCBvZiBpbnZlc3RvcnMgd2hvIGhhdmUgYWxzbyBmb3VuZCB0aGUgcHJvcGVydHkgYW5kIHdpbGwgYmlkIHVwIHRoZSBwcmljZSB0byBhbiB1bnJlYWxpc3RpYyBhbW91bnQgZm9yIGFuIGludmVzdG1lbnQuLiAKRmlyc3QsIHN0aWNrZXJzIG9uIHJpY2tzaGF3cyBhbmQgaG9hcmRpbmdzIGluIHRvcCBtZXRyb3MgYW5kIG5vdywgdGVsZXZpc2lvbiBicm9hZGNhc3RzOyBQb2tlciwgYWxvbmcgd2l0aCBpdHMgZ3Jvd2luZyBwb3B1bGFyaXR5LCBpcyBiZWNvbWluZyBtb3JlIGFuZCBtb3JlIG1haW5zdHJlYW0gaW4gSW5kaWEuCllvdSBtYXkgd2FudCB0byBmaW5kIGl0IGFuZCBwcmludCBpdCBvdXQgZm9yIHlvdXIgcmVjb3Jkcy4gMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb0RlZmluaXRlbHkgTlRBLiAKTWFueSBvbmxpbmUgY2FzaW5vcyBvZmZlciBhIGZyZWUgdmVyc2lvbiwgd2hlcmUgeW91IGNhbiBwbGF5IHBva2VyIHdpdGhvdXQgYWN0dWFsbHkgaW52ZXN0aW5nIGFueSBtb25leS4uIApXaGVuIHRoZXJlIGlzIG5vdCBlbm91Z2ggc2FsaXZhLCB0aGUgY29uZGl0aW9ucyBhcmUgcmlwZSBmb3IgYmFjdGVyaWEgYW5kIGZ1bmdpIHRvIHRocml2ZSwgYW5kIHRoaXMgY2FuIGxlYWQgdG8gYmFkIGJyZWF0aC4gCkJ1eWluZyByZXAgZnJvbSB0aGVtIGlzIGdldHRpbmcgaGFyZGVyIGFuZCBoYXJkZXIuIApJbiBjYXNlIHlvdSBoYXZlbid0IHJlY2VpdmVkIHlvdXIgd2lubmluZ3MgaW4gYSByZWFzb25hYmxlIHRpbWUsIGNvbnRhY3QgY3VzdG9tZXIgc3VwcG9ydC5DYW4gSSB1c2UgbXkgbW9iaWxlIHRvIHBsYWNlIGEgYmV0P1lvdSBjYW4gYmV0IG9yIHBsYXkgaW4gdGhlIGNhc2lubyBmcm9tIHlvdXIgIG9yICB2aWEgVW5pYmV0J3MgbW9iaWxlIHNpdGUuIFdpdGggaXQgeW91IGNhbiBhbHNvIGNoZWNrIHlvdXIgYWNjb3VudCwgc2VlIHlvdXIgYmV0IGhpc3RvcnksIG1ha2UgdHJhbnNhY3Rpb25zIGFuZCBjb250YWN0IFVuaWJldC4gCkZlZWwgZnJlZSB0byByZWFjaCBvdXQgaWYgeW91IGhhdmUgcXVlc3Rpb25zISAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnb0hpIHRoZXJlISBXZSBwcmVmZXIgbm8gbGluZXIgaGVyZSBhdCB0aGUgQ1MgdGVhbSAod2UgbXVjaCBwcmVmZXIgYmFzZSBsYXllcnMgdG8ga2VlcCB0aGUgYmFnIGNsZWFuIGFuZCBhbGxvdyB5b3UgdG8gc2hpZnQvdXNlIHRoZSBxdWlsdCB2ZW50aW5nIHRvIGl0cyBtYXhpbXVtIGFiaWxpdHkpLiBJIGFsc28gd291bGQgaGlnaGx5IHJlY29tbWVuZCBzdGVwcGluZyBkb3duIGluIHRlbXAsIGFzIGEgY291cGxlIHBlb3BsZSBoYXZlIGFscmVhZHkgbWVudGlvbmVkLCAzb3ogb2YgZG93biBpbiBhIHNoZWxsIHlvdSBhbHJlYWR5IGFyZSBjYXJyeWluZyBpcyBieSBmYXIgdGhlIG1vc3QgZWZmaWNpZW50IGluc3VsYXRpb24vYWRkaXRpb25hbCB3YXJtdGggeW91IGNhbiBhZGQgdG8geW91ciBraXQuSWYgeW91IHdlcmUgdG8gc2xlZXAgY29sZCBpbiB5b3VyIDMwIGRlZ3JlZSBhbmQgYWRkIGEgc3VwZXJsaWdodCBkb3duIGphY2tldCB0byBidWZmZXIgb3V0IHRoZSB0ZW1wcyBmb3IgeW91LCB5b3UgaW1tZWRpYXRlbHkgd291bGQgYmUgY2FycnlpbmcgNm96IG1pbmltdW0gdnMgM296IG9mIGRvd24gYW5kIHRoZSBkb3duIHdvdWxkIGRvIG1vcmUgdG8ga2VlcCB5b3Ugd2FybSB0aGFuIHRoZSBqYWNrZXQgd291bGQsIHNvIEkgdGhpbmsgYWxtb3N0IGFsd2F5cyBqdXN0IHN0ZXBwaW5nIGEgdGVtcGVyYXR1cmUgZG93biBpcyB0aGUgbW9yZSBlZmZpY2llbnQgYW5kIHZlcnNhdGlsZSBjaG9pY2UgaWYgeW91IG9uIHRoZSBmZW5jZS4uIApJcyBhbiBpc3N1ZSBhdCBvdGhlciB0aW1lcyBhcyB3ZWxsOyBsaWtlIGR1cmluZyB3ZWVrZGF5cyBvZnRlbiBidXMgcm91dGVzIGZyb20gdGhlIHNhbWUgYXJlYSB3aWxsIHJ1biB3aXRoaW4gYSAxMCBtaW51dGVzIG9mIGVhY2ggb3RoZXIgcmF0aGVyIHRoYW4gc3ByZWFkaW5nIG91dCB0aGUgdGltZXMgZm9yIG1vcmUgdGltZSBjb3ZlcmFnZS4gU28gYWdhaW4sIGlmIHlvdSBtaXNzIG9uZSwgeW91IGJhc2ljYWxseSBtaXNzIHRoZW0gYWxsIGFuZCBoYXZlIHRvIHdhaXQgMzAgbWludXRlcyBmb3IgdGhlIG5leHQuLiAKVGhlcmUgaXMgbWFueSByZWFzb25zIHdoeSB0aGlzIGhhcHBlbnMgYnV0IG1vc3QgbGlrZXkgaXMgZGlzayBvciBmb2xkZXIgY29ycnVwdGlvbi4gVHVybiBvZmYgeW91ciBjb21wdXRlciBub3cgYW5kIGRvbiB1c2UgaXQgYWdhaW4hIEl0IGxpa2UgcnVubmluZyBvbiBhIGJyb2tlbiBsZWcgaXQgd2lsbCBqdXN0IG1ha2UgaXQgd29yc2UgZXZlbiB0aG91Z2ggaXQgc2VlbXMgbGlrZSBpdCBmaW5lLiBUYWtlIGl0IHRvIGEgY29tcHV0ZXIgc2hvcCBhbmQgaGF2ZSB0aGVtIGxvb2sgYXQgaXQgQVNBUCBvciBhdCBtaW5pbXVtIGhhdmUgdGhlbSBpbWFnZSB5b3VyIGRpc2sgc28gd2hhdGV2ZXIgZGF0YSBjYW4gYmUgc2F2ZWQgY2FuIGJlIHNhdmVkIGJlZm9yZSBpdCBnZXRzIHdvcnNlLiAKT2Z0ZW4gYSBjb21wYW55IHdpbGwgY29udHJpYnV0ZSB0aGUgdGltZSB0byByZWNlaXZlIE9uIFNpdGUgTWFzc2FnZSBhbmQgZW1wbG95ZWVzIHdpbGwgY292ZXIgMTAwJSBvZiB0aGUgY29zdApVbmxlc3Mgd2Ugd2FudCB0byBjb25zaWRlciB3aGV0aGVyIHdlIHJlYWxseSBuZWVkIHNwb3J0cyB0aGF0IGluc2lzdCBvbiBhIGNvaGVyZW50IGFuZCBzdGFibGUgZ2VuZGVyPyBGb3IgaW5zdGFuY2UsIEkganVzdCBoZWFyZCBhYm91dCBhIHByb21pc2luZyB5b3VuZyBmZW1hbGUgYXRobGV0ZSB3aG8gZGVjaWRlZCB0byBzdGFydCBpZGVudGlmeWluZyBhcyBtYWxlLiAKSGlzIGludGVyZXN0IHRvd2FyZHMgdGhlIGdhbWUgc29vbiBncmV3LiAKSSdtIHBsYW5uaW5nIG15IGhvbGlkYXkgY2FyZHMsIHdoaWNoIEkgbWFrZSBteXNlbGYgZXZlcnkgeWVhci4gSSdtIG5vdCBmZWVsaW5nIHBhcnRpY3VsYXJseSBjaGVlcnkgb3Igb3B0aW1pc3RpYyBhYm91dCB0aGUgd29ybGQgcmlnaHQgbm93LCBhbmQgbm9uZSBvZiB0aGUgcnViYmVyIHN0YW1wcyB3aXRoIHNob3J0IG1lc3NhZ2VzIChIYXBweSBIb2xpZGF5cyEsIE1lcnJ5IGFuZCBCcmlnaHQhLCBldGMuKSB0aGF0IEkgaGF2ZSBhcmUgcmVhbGx5IGdyYWJiaW5nIG1lLiBJJ20gdHJ5aW5nIHRvIGZpbmQgYSBnb29kIHF1b3RlIHRvIHByaW50IGluc2lkZSB0aGF0IGFja25vd2xlZGdlcywgd2l0aG91dCBkaXJlY3RseSB0YWxraW5nIGFib3V0IGl0LCB0aGUgZHVtcHN0ZXIgZmlyZSB0aGF0IGhhcyBiZWVuIDIwMTYuIApUaGUgaW50ZXJpb3IgYWxzbyBvZmZlcnMgbmV4dCBsZXZlbCBsdXh1cnkgdGhhdCB3aWxsIGxlYXZlIG1hbnkgY29tcGV0aXRvcnMgaW4gcGFuaWMuIApJIGRlY2lkZWQgdG8gY2hlY2sgaWYgdGhhdCBhY3R1YWxseSB0aGUgY2FzZSwgYmVjYXVzZSBpdCBzb3VuZHMgbGlrZSBhIHByZXR0eSBmYW50YXN0aWNhbCBhc3NlcnRpb24uLiAKIkkgZmVsdCBpdCwgZXZlbiBpbiB0aGUgbWlkc3Qgb2YgbXkgYWRtaXJhdGlvbiBvZiBoZXIgYmVhdXR5LiAKU2hhbmUgV2FybmU6IE9idmlvdXNseSB5b3UgdGhvdWdodCB3ZSdkIGdvIHdpdGggdGhlIGNhcmQgdHJpY2sgaWRlYSBiZWNhdXNlIGhlIHBsYXlzIHBva2VyLiAKRG9lcyBwcmVzc3VyZSBjcmVhdGUgcGh5c2lvbG9naWNhbCBjaGFuZ2VzIGluIHRoZSB0aXNzdWUKQXMgb2YgdG9kYXksIHRoaXMgUmVzZWFyY2hlciBoYXMgYmVlbiBzdXNwZW5kZWQgZm9yIGEgc2lnbmlmaWNhbnQgcGVyaW9kIG9mIHRpbWUgYW5kIHNvbWUgdmVyeSBjbGVhciBjb25kaXRpb25zIGF0dGFjaGVkIHRvIHRoZWlyIGV2ZW50dWFsIHJldHVybi4gClN1cnZpdm9ycyBlc3RpbWF0ZWQgdGhhdCA4MCB0byA5MCBwZW8gIHBsZSBoYWQgYmVlbiBvbiB0aGUgdmVzc2VsLCBzYWlkIENvYXN0IEd1YXJkIFBldHR5IE9mZmljZXIgRGFuIFdhbGRzY2htaWR0LiBFT1QuICJUaGUgQ29hc3QgR3VhcmQgY3V0dGVyIEhhbWlsdG9uIHdhcyBjb25kdWN0aW5nIGEgYm9hcmRpbmcgb2YgdGhlIHZlc3NlbCB3aGVuIHRoZSBzbWFsbGVyIHZlc3NlbCBzYWlkIEdpYnNvbi4gCkJ1bnRvbiBQYXJrIHdhcyBlc3RhYmxpc2hlZCBkdXJpbmcgdGhlIHBvc3QgV29ybGQgV2FyIElJIHBlcmlvZCBpbiBhbiBhcmVhIHRoYXQgd2FzIHF1aWNrbHkgYmVjb21pbmcgZXN0YWJsaXNoZWQgd2l0aCBob3VzaW5nLiBCdW50b24gUGFyayBpcyBuYW1lZCBhZnRlciBDbGVhdmVyIEJ1bnRvbiwgbG9uZyB0aW1lIG1heW9yIG9mIEFsYnVyeSwgcmF0aGVyIHRoYW4gaGlzIGZhbW91cyBmb290YmFsbGluZyBicm90aGVyIEhheWRuIEJ1bnRvbiwgYWx0aG91Z2ggbmVpdGhlciBwbGF5ZWQgZm9yIE5vcnRoIEFsYnVyeS4uIApFdmVuIHRob3VnaCBJIHRob3VnaHQgaXQgd2FzIHBvaW50bGVzcyBpbiB0aGUgYmVnaW5uaW5nLCB0aGUgcmVjZXB0aW9uIHdlIHJlY2VpdmVkIHdhcyBjcmF6eS4gR3JhbnRlZCwgbm90IGV2ZXJ5b25lIHdhcyBpbXByZXNzZWQgYnkgdGhlbSwgYnV0IHRoZSBvdmVyYWxsIGV4cGVyaWVuY2Ugc2VlbWVkIHRvIGJlIGdvb2QgZm9yIGV2ZXJ5b25lIGFsbCB0aGUgd2F5IGFyb3VuZC4gCkplIHBlbnNlIHF1ZSBjJ2VzdCB1biBwcm9ibG1lIHVuaXF1ZW1lbnQgZGUgZGlyZWN0aW9uIHJnaW9uYWxlLCBqZSBuJ2FpIGphbWFpcyB2dSByaWVuIGRlIHRlbCBlbiBwcm92aW5jZS4uIApJIG1hZGUgYW4gRUVPQyBjb21wbGFpbnQgbGFzdCB5ZWFyIGFnYWluc3QgbXkgZW1wbG95ZXIuIFRoZXkgc2VudCBtZSB0aGUgcmlnaHQgdG8gc3VlIGxldHRlciB0aGUgc2FtZSBkYXkgSSB3YXMgaW4gdGhlIG9mZmljZSBtYWtpbmcgdGhlIGNvbXBsYWludCAoaGUgc2VudCB0aGUgbGV0dGVyIHJpZ2h0IGluIGZyb250IG9mIG1lKS4gCkF1Y2ggSG90ZWxkaXJla3RvciBTdGVwaGFuIEFnZ2VuIHplaWd0ZSBzaWNoIGF1ZiBkZXIgRXJmZm51bmdzdmVyYW5zdGFsdHVuZyBnbGNrbGljaCBXaXIgaGFiZW4gdmllbCBIZXJ6Ymx1dCBpbiBkaWUgQmF1bWFuYWhtZW4gZ2VzdGVja3QgdW5kIGZyZXVlbiB1bnMgc2VociBiZXIgZGFzIHBvc2l0aXZlIEZlZWRiYWNrIHVuc2VyZXIgR3N0ZS4iLiAKVGhlIEJvb2sgT2YgTWFzc2FnZTogVGhlIENvbXBsZXRlIFN0ZXAgYnkgc3RlcCBHdWlkZSBUbyBFYXN0ZXJuIEFuZCBXZXN0ZXJuIFRlY2huaXF1ZSBieSBMdWNpbmRhIExpZGVsbCwgU2FyYSBUaG9tYXMsIENhcm9sYSBCZXJlc2ZvcmQgQ29va2UsIGFuZCBBbnRob255IFBvcnRlci4gVGhpcyBib29rIGNvbnNpc3RzIG9mIGRldGFpbGVkIHBpY3R1cmVzIGFuZCB2ZXJ5IGNsZWFyIGluc3RydWN0aW9ucyBvbiBob3cgdG8gcGVyZm9ybSBhIG1hc3NhZ2UuIFRoaXMgaXMgYSBncmVhdCBib29rIGZvciBiZWdpbm5lcnMsIGxvb2tpbmcgdG8gdHJ5IG1hc3NhZ2UgaW4gdGhlIHByaXZhY3kgb2YgdGhlaXIgaG9tZXMgb24gdGhlaXIgbG92ZWQgb25lcy4KVGhlIGNvdW50cnkgZW5kZWQgdGhlIG1vbnRoIHdpdGggNTQsODE0IHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUuIApEZWFkbHkgRmx1IFN0cmFpbiBQcm9tcHRzIENEQyB0byBVcmdlIFVudmFjY2luYXRlZCB0byBHZXQgVGhlaXIgU2hvdHNBIHRyb3VibGluZyBmbHUgc3RyYWluIGlzIGhpdHRpbmcgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGhlYWx0aCBleHBlcnRzIGFyZSB3YXJuaW5nIHRob3NlIHdobyBkaWRuIGdldCB0aGUgZmx1IHNob3QgdGhhdCBpdCBzdGlsbCBub3QgdG9vIGxhdGUuIE1hcmlhIE1lZGluYSByZXBvcnRzLiAoMyA4IDE5KQpJIHVuZGVyc3RhbmQgdGhhdCBkZXN0cm95aW5nIGl0IHRvIHJlY3JlYXRlIHRoZSBwYWxhY2Ugb2Ygb2xkIHdhcyBuZWNlc3NhcnkgdG8gS29yZWFucyBmb3IgYSBudW1iZXIgb2YgcmVhc29ucywgYnV0IEkgYWxzbyBzZWUgdGhlIGxvc3Mgb2YgYSBiZWF1dGlmdWwgYnVpbGRpbmcgb2YgaGlzdG9yaWNhbCBpbXBvcnRhbmNlIHRoYXQgY2FuIG5ldmVyIGJlIHJlY3JlYXRlZC4gCicnSXQgd291bGQgYXBwZWFyIFtIYXJyb2RdIG1heSBzdWZmZXIgZnJvbSBhIGdhbWJsaW5nIGFkZGljdGlvbiwgb3IgYXQgbGVhc3QgY29tZSB3aXRoaW4gdGhlIGRlZmluaXRpb24gb2Ygc3VmZmVyaW5nIGZyb20gcHJvYmxlbSBnYW1ibGluZywnJyBwcm9zZWN1dGlvbiBkb2N1bWVudHMgcmVhZC4gClRoaXMgc2V0IGlzIGV4dHJlbWVseSBhZmZvcmRhYmxlIHdoaWNoIG1ha2VzIGl0IG11Y2ggbW9yZSBhY2Nlc3NpYmxlIHRvIHRob3NlIHRoYXQgd291bGQgd2lzaCB0byBvd24gdGhlIHNldC4uIApJIGZlbHQga2luZCBvZiBqaXR0ZXJ5IGFuZCBuZXJ2b3VzIHRoZSBkYXlzIEkgdG9vayBpdC4gSSB3YXMgb25seSBhYmxlIHRvIG51cnNlIGhlciBmb3IgMyBtb250aHMgYnV0IEkgaGFkIHN0b3BwZWQgdGFraW5nIHRoZW0gYnkgdGhhdCB0aW1lLCBzbyBJIGNvdWxkbiByZWFsbHkgc2F5LiBJIHN0aWxsIHRvb2sgb25lIGV2ZXJ5IG5vdyBhbmQgdGhlbiBkdXJpbmcgcmVhbGx5IHRvdWdoIG1vbnRobGllcyBiZWNhdXNlIGl0IHN1cHBvc2VkbHkgY2FuIGhlbHAgd2l0aCBzb21lIFBNUy4gClNoZSB3YXMgd3JpdGhpbmcgYW5kIHNvYmJpbmcgb24gYSB0cm9sbGV5IGluIHRoZSBob3NwaXRhbCwgYW5kIHNoZSBsZXQgb3V0IHRoZSBtb3N0IGhvcnJlbmRvdXMgZmFydCBhbmQgaW1tZWRpYXRlbHkgZmVsdCBiZXR0ZXIuIApKdXN0IHNvIGV2ZXJ5b25lIGtub3dzLCB5b3UgZG9uIGhhdmUgdG8gYmUgbWVudGFsbHkgaWxsIHRvIGJlIHByZXNjcmliZWQgU2Vyb3F1ZWwuIEkgd2FzIHByZXNjcmliZWQgaXQgc29sZWx5IHRvIHRyZWF0IG15IGluc29tbmlhLCBhbmQgSSBrbm93IGEgZmV3IG90aGVyIHBlb3BsZSB3aG8gd2VyZSBwcmVzY3JpYmVkIGl0IGZvciB0aGUgc2FtZSByZWFzb24uIEl0IGlzbiBsaXN0ZWQgYXMgc29tZXRoaW5nIHRoaXMgbWVkaWNhdGlvbiB0cmVhdHMsIGJ1dCwgYmVjYXVzZSBpdCBzbyBzZWRhdGluZywgU2Vyb3F1ZWwgaXMgY29tbW9ubHkgdXNlZCBmb3IgaXQuLiAKVG9kYXksIHRoaXMgcm9hZCBsZWFkcyB0byBhIHNtYXJ0LCB3aGl0ZSBob3VzZSBpbiBhIEtuaWdodHNicmlkZ2Ugc3F1YXJlLCB3aGVyZSBPbGl2aWEgd29ya3MgYXQga2VlcGluZyB0aGUgbWVtb3J5IG9mIGhlciBodXNiYW5kIGFsaXZlLiBTaGUgaGFzIGJlY29tZSBhIGtpbmQgb2Ygc2VsZiBhcHBvaW50ZWQgY3VyYXRvciBvZiB0aGUgR2VvcmdlIEhhcnJpc29uIGluZHVzdHJ5LCBkZWFsaW5nIHdpdGggdGhlIHN0ZWFkeSBkZW1hbmQgZm9yIGJvb2tzIGFuZCBEVkRzIGFuZCByZSByZWxlYXNlcyBvZiBoaXMgbXVzaWMsIGluY2x1ZGluZyBhIG5ldyBwcm9qZWN0IHdpdGggQXBwbGUsIHRoZSBCZWF0bGVzJyByZWNvcmQgbGFiZWwsIHRvIHJlaXNzdWUgR2VvcmdlJ3MgQmFuZ2xhZGVzaCBjb25jZXJ0cy4gSXQncyBub3QgdGhhdCBzaGUgbmVlZHMgdGhlIG1vbmV5IEdlb3JnZSBsZWZ0IDk5IG1pbGxpb24gaW4gaGlzIHdpbGwgaXQncyBqdXN0IHRoYXQgc2hlIG5lZWRzIHRvIGJlIGludm9sdmVkLi4gCkNvbW11bmljYXRpb24gaXMgZW5oYW5jZWQgdGhyb3VnaCBhc3Npc3RhbmNlIGZyb20gZWxlY3Ryb25pYyBtYWlsIChwb3B1bGFybHkgcmVmZXJyZWQgdG8gYXMgZSBtYWlsKSBhbmQgaW5zdGFudCBtZXNzYWdpbmcgYXMgd2VsbC4gUGx1cywgY29tcHV0ZXIgY2FuIGFsc28gYmUgYSB3YXkgdG8gb2J0YWluIGluY29tZSBmb3IgYSBmZXcgcGVvcGxlLiAKSSBjYW4ndCBleGFjdGx5IHRlbGwgYnkgdGhlIHBob3RvIGJ1dCBkb24ndCB1c2UgdGVycmEgY290dGEgcG90czsgbWluZXJhbHMgd2lsbCBsZWVjaCBpbnRvIHRoZSBzb2lsLiAKSGUgbm90IGEgc2F4b3Bob25lIHBsYXllciwgc28gaGUgbWltZWQgaXQgbGlrZSBBc2hsZXkgU2ltcHNvbiBsaXZlLiAKQWRkaXRpb25hbGx5LCBIYW5zZW4gaGFzIHBsYXllZCBhIHNpZ25pZmljYW50IHJvbGUgaW4gIkRhdGVsaW5lJ3MiIGNvdmVyYWdlIG9mIHRoZSB3YXIgb24gdGVycm9yIGFuZCBob21lbGFuZCBzZWN1cml0eSBpc3N1ZXMuIEhlIHdhcyByZXNwb25zaWJsZSBmb3IgbXVjaCBvZiAiRGF0ZWxpbmUncyIgY292ZXJhZ2Ugb2YgdGhlIFNlcHRlbWJlciAxMSB0ZXJyb3Jpc3QgYXR0YWNrcywgd2l0aCBicmVha2luZyBpbnZlc3RpZ2F0aXZlIHN0b3JpZXMgdGhhdCBmb2N1c2VkIG9uIHRoZSB0ZXJyb3Jpc3RzIGFuZCBvcGVyYXRpb25zIG9mIHRoZSBBbCAgUWFlZGEgbmV0d29yay4gSGFuc2VuIGV4cG9zZWQgaG93IGEgZ3JvdXAgd2l0aCBsaW5rcyB0byBPc2FtYSBCaW4gTGFkZW4gYW5kIEFsIFFhZWRhIHRyaWVkIHRvIGJ1eSBzdGluZ2VyIG1pc3NpbGVzIGFuZCBvdGhlciBkZWFkbHkgd2VhcG9ucywgaW5jbHVkaW5nIGNvbXBvbmVudHMgZm9yIG51Y2xlYXIgZGV2aWNlcyBmcm9tIEFtZXJpY2FuIGNpdGl6ZW5zLiAKVGhlIHdlYnNpdGUgbWF5IGxvb2sgdmVyeSB3ZWxsIGxpa2UgZmFjZWJvb2sgb3IgYW55IG90aGVyIGtpbmQgb2Ygc2VjdXJpdHkgaW52ZW50ZWQgd2VzYml0ZS4gV2hlbiB5b3UgZ2V0IHRoZSBwYWdlIG9wZW4sIGVudGVyIGluIHRoZSB3ZWIgYWRkcmVzcyBvZiB0aGUgc2l0ZSB5b3UgdGhpbmsgeW91IG1heSB3YW50IHRvIHB1cmNoYXNlIGZyb20uIE1vcmUgaW1wb3J0YW50IHRoYW4gZmluZGluZyB0aGUgY2hlYXBlc3QgcHJpY2UgaXMgZmluZGluZyBzb21lb25lIHdobyBpcyByZWxpYWJsZS4gCldhcyBhIHRvdWdoIGF0bW9zcGhlcmUuIEJyaXR0bmVlIHdhcyBjcnlpbmcsIFNhcmFoIGFuZCBCcnVubyB3ZXJlIHllbGxpbmcgYXQgZWFjaCBvdGhlciwgY2FsbGluZyBlYWNoIG90aGVyIHNvbWUgcHJldHR5IG5hc3R5IHRoaW5ncy4gWmFjaCB3YXMgZGVmbGF0ZWQuIApNeSB3aWZlIHRvIGJlIHdhcyB0aGUgbWFpZCBvZiBob25vciBmb3IgYSBkZXN0aW5hdGlvbiB3ZWRkaW5nIGluIENvc3RhIFJpY2EuIApUaGF0IGlzIHdoZW4gYSBsb3Qgb2YgcGxheWVycyB0YWtlIGhlciBmb3IgZ3JhbnRlZCBhbmQgdGhpbmsgdGhlIGJhdHRsZSBpcyBvdmVyLiAKRWF0IGRlYWQgYnVybnQgYm9kaWVzLiBJIG1lYW4ga2lsbCwgS2lsbCwgS2lsbCwga2lsbC4gCldoZW4gZGlkIEJhcmIgYW5kIFNjb3R0IGdldCBtYXJyaWVkPyBDb3VsZCB0aGV5IGhhdmUgZ290dGVuIG1hcnJpZWQgdG8gcHJldmVudCBoZXIgZnJvbSB0ZXN0aWZ5aW5nIGFnYWluc3QgaGltIGlmIGl0IGNhbWUgdG8gaXQ/IEl0IGFsd2F5cyBmZWx0IGEgbGl0dGxlIHdlaXJkIHRoYXQgc2hlIGp1c3QgaGFwcGVuZWQgdG8gZ2V0IG1hcnJpZWQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyaWFsLiBZb3VyIGJveWZyaWVuZCBpcyB0ZXN0aWZ5aW5nIGFnYWluc3QgeW91ciBzb24sIHNvIGxldCBnZXQgaGl0Y2hlZD8gVGhleSB3ZXJlIGVhY2ggb3RoZXIgYWxpYmkgYW5kIHRoZSBzdG9yaWVzIHdlcmUgcGVyZmVjdC4gQnJlbmRhbiBhbmQgU3RldmVuIGZpcnN0IGludGVydmlld3MgcmVhZCB2ZXJ5IGhvbmVzdC4gCkRlc3BpdGUgZmVhdHVyaW5nIGluIHRoZSBXb3JsZCBUd2VudHkyMCwgVGFpdCBoYWQgbm90IHBsYXllZCBpbiBhbiBPREkgc2luY2UgZWFybHkgMjAwOSB3aGVuIGhlIHdhcyBkcmFmdGVkIGludG8gdGhlIEF1c3RyYWxpYSBzcXVhZCBtaWR3YXkgdGhyb3VnaCB0aGUgcmVjZW50IHNlcmllcy4gClNoZSBzYXlzIHRoYXQgb24gU2VwdGVtYmVyIDE0LCBoZSBjYW1lIHRvIHRoZSBob3NwaXRhbCB3aXRoIGhpcyBtb3RoZXIgYW5kIGhpcyBnaXJsZnJpZW5kLCBhIHdvbWFuIG5hbWVkIE1lbCwgdG8gY29sbGVjdCB0d28gZGF5IG9sZCBUZWdhbi4gQWxsIHdlIGtub3cgZm9yIHN1cmUgaXMgdGhhdCBMYW5lIGFuZCB0aGUgYmFieSB3ZXJlIGdvbmUgZnJvbSB0aGUgaG9zcGl0YWwgaW4gd2VzdGVybiBTeWRuZXkgYnkgMnBtLCBhbmQgdGhhdCB0d28gaG91cnMgbGF0ZXIgc2hlIHdhcyBhY3Jvc3MgdG93biBhdCBNYW5seSBNYXJ5IEltbWFjdWxhdGUgQ2h1cmNoLCB3YWxraW5nIGRvd24gdGhlIGFpc2xlIHdpdGggR2lsbGllcyBhcyB0aGV5IGFycml2ZWQgYXQgdGhlaXIgZnJpZW5kIHdlZGRpbmcuIApUaGUgcm9vbSBpcyB3ZWxsIGxpdCBhbmQgdmFyaW91cyB0b2lsZXRyaWVzIGFyZSBwcm92aWRlZCBhbG9uZyB3aXRoIHRoZSB1c3VhbCBjbGVhbmluZyBzdHVmZi4gSXQgd2FzIGEgdmVyeSBuaWNlIHJvb20sIHdlbGwga2VwdCwgbmljZWx5IGRlc2lnbmVkIGFuZCBjbGVhbi4gCllvdSBjYW4gdGFzdGUgaXQgaW4geW91ciBtb3V0aCwgZmVlbCBpdCBpbiB5b3VyIGV5ZXMgYW5kIHVwIHlvdXIgbm9zZSBhbmQgaXQncyBub3QgcGxlYXNhbnQuIApZZWFoLCBPZ2F0YSB3YXMgdGhlIGZpcnN0IGR1ZGUgU3VnaW1vdG8gZm91Z2h0LCBpdCB3b3VsZCBiZSBjb29sIGFzIGhlbGwgaWYgaGUgd2FzIGFsc28gdGhlIGxhc3QgZ3V5LCB0byBtYWtlIGV2ZXJ5dGhpbmcgZ28gZnVsbCBjaXJjbGUuIApBbSBJIGdvaW5nIHRvIGRpc2N1c3MgbXkgYXJ0aHJpdGlzL3BvdGVudGlhbCBsdXB1cyB3aXRoIGEgcmFuZG9tIHdhbGsgaW4gZG9jdG9yPyBPciBBbHpoZWltZXJzPyBOby4gCkkgc2F3IGhpbSByZWd1bGFybHkgZm9yIGFib3V0IGEgeWVhciBhbmQgYSBoYWxmLiBIaXMgbW90aGVyIHdhcyBhbHNvIGF3YXJlIGhlIHdhcyBzZWVpbmcgbWUgYW5kIHdhcyB2ZXJ5IGtpbmQgdG8gbWUuIApUbyBmbGlwIG92ZXIgdGhlIEFjZSBvZiBTcGFkZXMgaW4gYW55IGtpbmQgb2YgY2FyZCByZWFkaW5nIGlzIHRvIGdldCBhIHdhcm5pbmcgb2YgaW1wZW5kaW5nIGRlYXRoICAgd2hldGhlciBpdCBiZSB5b3VyIG93biBvciBzb21lb25lIGxpbmtlZCB0byB5b3UuIEhvd2V2ZXIgICBpdCBkb2Vzbid0IGFsd2F5cyBoYXZlIHRvIGJlIGEgbGl0ZXJhbCBkZWF0aCAgIGl0IGNvdWxkIGJlIGEgZGVhdGggb2YgYSBjZXJ0YWluIHNlbGYsIG9yIGEgcGhhc2Ugb2YgbGlmZSwgdGh1cyBvcGVuaW5nIHRvIHBhdGggdG8gYSBuZXcgZXhpc3RlbmNlIG9yIG5ldyBpZGVudGl0eS4KTm90IG9ubHkgd291bGQgaXQgbGV0IG1lIGlkZW50aWZ5IHRoZSBiZXN0IHdheXMgdG8gcmVhY2ggcGVvcGxlLCBpdCBjb3VsZCBhbHNvIGJlIHVzZWZ1bCBpbiBkZWFsaW5nIHdpdGggc2VsZWN0aW9uIGJpYXMuIiBBbmQgdGhlbiBpbmRlZWQgdGhlIHN1cnZleSBkaWQgaW5jbHVkZSB0aGF0IHZlcnkgcXVlc3Rpb24uLiAKSXRzIEJsaXp6YXJkcyBmYXVsdC4KSXQncyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgdGhhdCB0cmVlcyBhcmVuJ3QganVzdCBkZWNvcmF0aW9ucy4gVGhleSBkbyBzdHVmZi4gU3RvcCBlcm9zaW9uLCBmb3Igb25lLiBTbyBwYXlpbmcgc29tZW9uZSBhbiBhbW91bnQgZXF1YWwgdG8gdGhlIGRlY2xpbmUgaW4gbWFya2V0IHZhbHVlIHdvdWxkbid0IGxldCB0aGVtIHJlcGxhY2UgdGhlIHRyZWUgYW5kIGNvdWxkIGZ1cnRoZXIgZGFtYWdlIHRoZWlyIHByb3BlcnR5IGlmIHNvbWV0aGluZyBnZXRzIHdhc2hlZCBvdXQuIEl0J3MgcHJvYmFibHkgZ29vZCBwdWJsaWMgcG9saWN5IHRvIG1lYXN1cmUgZGFtYWdlcyBhcyBjb3N0IG9mIHJlcGxhY2VtZW50LCBlc3BlY2lhbGx5IGJlY2F1c2UgZXJvc2lvbiBjYW4gZGFtYWdlIG5laWdoYm9yaW5nIHByb3BlcnRpZXMgYXMgd2VsbC4gVGhlIHB1YmxpYyBoYXMgYW4gaW50ZXJlc3QgaW4gdHJlZXMgYmVpbmcgd2hlcmUgdGhleSBhcmUgdG8gaG9sZCBlbWJhbmttZW50cyB0b2dldGhlciBhbmQgc2ltaWxhciB0aGluZ3MuIEZvciBtb3N0IGVtaW5lbnQgZG9tYWluIGNhc2VzLCB0aGUgbGFuZCBpcyBnZXR0aW5nIGRldmVsb3BlZCBvciBjaGFuZ2VkIGFmdGVyIHNlaXp1cmUgYW55d2F5LCBzbyB0aGUgdHJlZXMgYXJlbid0IGFzIGltcG9ydGFudC4KUjM6IElmIGEgcGxheWVyIGxpa2UgSXZleSBvciBIb2x6IGhhZCB0aGlzIGFiaWxpdHksIGl0J3MgYmFzaWNhbGx5IGdhbWUgb3ZlciBmb3IgZXZlcnlvbmUgZWxzZS4gCkdvdmVybm9yIHBva2VyIG1hYwpFciB2ZXJtaXR0ZWx0IGluIGVpbmVtIEJhbmQgZnVuZGllcnQgYWxsZSBHcnVuZGxhZ2VuLiBTZWl0ZW4gQXVzIE1vZWxsZXIgR3J1bmRsYWdlbiBEZXIgRWxla3Ryb3RlY2huaWsgKDYwMCBEUEkpLiBVcGxvYWRlZCBieSAuIEVsZWt0cmlzY2hlciBHbGVpY2hzdHJvbWtyZWlzIChIYW5zIE1sbGVyKSAuIFNjcmliZCAgIERvd25sb2FkIG9uIHRoZSBBcHAgU3RvcmUgU2NyaWJkICAgR2V0IGl0IG9uIEdvb2dsZSBQbGF5LiBNb2VsbGVyLiBHcnVuZGxhZ2VuIGRlciBFbGVrdHJvdGVjaG5pay4gMjEuLCBiZXJhcmJlaXRldGUgQXVmbGFnZS4gTWl0IDQyMiB0ZWlscyBtZWhyZmFyYmlnZW4gQWJiaWxkdW5nZW4sLiAKTkVTLCBTTkVTLCBONjQsIEdCQSwgYW5kIERTIGFsbCBoYXZlIGFtYXppbmcgbGlicmFyaWVzIGJ1dCB0aGUgV2lpIFUgY2FuIHBsYXkgdGhlIG1ham9yaXR5IG9mIHRoZWlyIGdyZWF0ZXN0IGhpdHMgdmlhIGl0cyBlc2hvcCwgYXMgd2VsbCBhcyBldmVyeSBXaWkgZ2FtZSBhbmQgYSBidW5jaCBvZiBXaWkgVSBjbGFzc2ljcy4gCk1BWVBPUlQsIEZsYS4gICBJbiBqdXN0IGEgZmV3IHdlZWtzLCBnYW1lcnMgaW4gSmFja3NvbnZpbGxlIHdpbGwgaGF2ZSBhIG5ldyBwbGFjZSB0byBwbGF5LiBWaWN0b3J5IENhc2lubyBDcnVpc2VzIHdpbGwgYmVnaW4gc2VydmljZSBvZiBhIDMwLDAwMCBzcXVhcmUgZm9vdCBzaGlwIHdpdGggdGhyZWUgZGVja3MgYW5kIGh1bmRyZWRzIG9mIHNsb3QgbWFjaGluZXMgYW5kIHRhYmxlIGdhbWVzIG5leHQgbW9udGguCkkgdGhpbmsgdGhleSBtZWFuIHRoaXMuIFByYWdtYXRpY2FsbHksIHlvdSBuZWVkIHRvIGdpdmUgc29tZSByZXNwb25zZSB0byB0aGUgcmVjcnVpdGVyIHRvIGRpc3N1YWRlIHRoZWlyIGZlYXJzIGFib3V0IHlvdSBoYXZpbmcgdGhlIGdhcCBiZWNhdXNlIHlvdSBoYWQgYSBqb2IgdGhhdCB5b3UgZ290IGZpcmVkIGZyb20gb3Igc29tZXRoaW5nIGFuZCBhcmUgbGVhdmluZyBvZmYgeW91ciByZXN1bWUsIG9yIGFyZSBhIHN1YnBhciBjYW5kaWRhdGUgd2hvIGNvdWxkbiBmaW5kIGEgam9iLiBCdXQgaW4gYW4gaWRlYWwgc2Vuc2UsIHlvdSBzaG91bGRuIGhhdmUgdG8gZG8gdGhpcywgYW5kIGRvbiBoYXZlIHRvIGJlIGNvbXBsZXRlbHkgaG9uZXN0IGFib3V0IGl0LiBPdXIgY3VsdHVyZSBoYXMgYSBodWdlIG5lZ2F0aXZlIGJpYXMgYWdhaW5zdCB0aW1lIHNwZW50IG5vdCB3b3JraW5nLCBldmVuIHRob3VnaCB0aGUgZmlyc3QgdGhpbmcgYmFzaWNhbGx5IGFueWJvZHkgd291bGQgZG8gaWYgdGhleSB3ZXJlIHN1ZGRlbmx5IHByb21pc2VkIGZpbmFuY2lhbCBzZWN1cml0eSBpcyBxdWl0IHRoZWlyIGpvYnMuIEEgcmVzdW1lIGlzIGEgbGlzdCBvZiBxdWFsaWZpY2F0aW9ucyB5b3UgY2hvb3NlIHRvIHByZXNlbnQgYW5kIHRoZXJlIG5vIG9ibGlnYXRpb24gdG8gcHV0IHNvbWV0aGluZyBvbiB0aGVyZSB0aGF0IHlvdSBkb24gd2FudCB0bywgb3IgdGFsayBhYm91dCBzb21ldGhpbmcgeW91IGRvbiB3YW50IHRvIChhcyBsb25nIGFzIHlvdSBhcmVuIGFjdHVhbGx5IGx5aW5nIG9yIGNvbmNlYWxpbmcgYSBmZWxvbnkgb3Igc29tZXRoaW5nIGxvbCkuCkNoaXAgc3RhY2sgd2FzIDMwMCwwMDAuIApTYW1lIGlkZWEgYXBwbGllcyBmb3IgdGhlIGZyb250IHNwbGl0LCBsaXphcmQgcG9zZSwgbG93IGx1bmdlLCBwaWdlb24sIGFuZCBldmVuIHRoZSBoZXJvIHBvc2Ugd2VyZSBpbXBvcnRhbnQgZm9yIG1lLiBUaGUgcGlrZSBhbmQgdGhlIHBhbmNha2Ugc2VlbSB0byBjb21wbGVtZW50IGVhY2ggb3RoZXIgcHJldHR5IHdlbGwuIFRoZXkgYXJlLCBob3dldmVyLCB0aGUgaGFyZGVzdCB0byBpbXByb3ZlLiBJIGdldCB0byBkZXRhaWxzIGFib3V0IHRoZW0gYmVsb3cuIE9uY2UgeW91ciBib2R5IGhhcyAibG9vc2VuZWQgdXAiIGluIGFsbCB0aGUgbWFqb3IgYXJlYXMsIHlvdSBtYWtlIHJlYWwgcHJvZ3Jlc3Mgd2hlbmV2ZXIgeW91IHRyeSB0byBkcm9wIGludG8gYSBzcGxpdCBvciB3aGF0ZXZlci4gVGhpcyBjb21lcyBpbiB0aGUgZm9ybSBvZiBpbXByb3ZlZCAiY29sZCIgZmxleGliaWxpdHksIGFjdGl2ZSBmbGV4aWJpbGl0eSwgYW5kIGFuIGluY3JlYXNlZCB0b2xlcmFuY2UgZm9yIGxvbmdlciBhbmQgbG9uZ2VyIGhvbGRzLgpUaGUgU3dhbXBlcnMgb3BlbmVkIE11c2NsZSBTaG9hbHMgU291bmQgaW4gMTk2OSwgYWZ0ZXIgYmFja2luZyBSIHN0YXJzIHN1Y2ggYXMgV2lsc29uIFBpY2tldHQgYW5kIEV0dGEgSmFtZXMgYXQgbmVhcmJ5IEZBTUUgU3R1ZGlvcy4KSGF2ZSBhIGNvbnZlcnNhdGlvbiB3aXRoIGhpbS4gCkhhcyBhZHZhbmNlZCB0d28gcHJvcG9zYWxzIGZvciB0aGUgZmVkcyB0byBjb250ZW1wbGF0ZS4gCkp1c3QgbG9vayBhdCBob3cgZWZmZWN0aXZlIGRydWcgcHJvaGliaXRpb24gaGFzIGJlZW4gICB3ZSBjYW4gZXZlbiBrZWVwIGRydWdzIG91dCBvZiBwcmlzb25zLiBZb3UgdGhpbmsgaXQgaXMgcG9zc2libGUgdG8gZWZmZWN0aXZlbHkgYmxvY2sgYSB0aG91c2FuZHMgbWlsZSBsb25nIGJvcmRlciB3aXRob3V0IGNyaXBwbGluZyBidXNpbmVzcyBhbmQgdG91cmlzbSB0cmF2ZWwsIGEgdml0YWwgcGFydCBvZiB0aGUgZWNvbm9teT8gQSBsb3Qgb2YgaWxsZWdhbCBpbW1pZ3JhbnRzIGNhbWUgaGVyZSBvbiB2YWxpZCB2aXNhcywgYWZ0ZXIgYWxsLiAKQSBwcmV2aW91c2x5IGdsYW1vcm91cyB3b21hbiBtYXkgc3RvcCBtYWtpbmcgdXAsIGEgcHJldmlvdXNseSBzb2NpYWJsZSB3b21hbiBtYXkgbm90IHdhbnQgdG8gY2hhdCB3aXRoIGFueW9uZS4gCkl0IHJlZmxlY3RlZCBpbiB0aGUgc21hbGwgYnVzaW5lc3NlcyB3ZSBzZWUgdG9kYXksIHRvby4gCkJ1dCBob2x5IGhlbGxmaXJlIHlvdSBhcmUgR0xPUklPVVMuClBlb3BsZSBqdXN0IGxvdmUgdG8gY29tcGxhaW4gYWJvdXQgdGhlaXIgbG9jYWwgZHJpdmVycywgZXNwZWNpYWxseSBpZiB0aGV5IGZyb20gYSBkaWZmZXJlbnQgcGFydCBvZiB0aGUgc3RhdGUvY291bnRyeS4gClNoZXJlbGUgTW9vZHkgTmV3cyBDb3JwIGpvdXJuYWxpc3QgU2hlcmVsZSBNb29keSBzdGFydGVkIGhlciBjYXJlZXIgaW4gdGhlIG1lZGlhIG1vcmUgdGhhbiAyNSB5ZWFycyBhZ28uIFNoZSByZXBvcnRzIGFjcm9zcyBhIGJyb2FkIHJhbmdlIG9mIHRvcGljcyBpbmNsdWRpbmcgYW5kIGhhcyBhbiBleHRlbnNpdmUgYmFja2dyb3VuZCBpbiBkYXRhIGFuYWx5c2lzIGFuZCBzdGF0aXN0aWNzIGJhc2VkIGpvdXJuYWxpc20uIFNoZSBhbHNvIHNwZWNpYWxpc2VzIGluIG9waW5pb24gYW5kIGZlYXR1cmUgd3JpdGluZyBvbiBnZW5kZXJlZCB2aW9sZW5jZSBhbmQgd29tZW4ncyBpc3N1ZXMuIApNeSBiZXN0IGFkdmljZTogdGhlc2UgcGVvcGxlIGFyZSBuZXZlciBnb2luZyB0byBiZSByZWFzb25hYmxlIG9yIGxvZ2ljYWwsIHNvIGRvbiBnZXQgaW50byBhcmd1bWVudHMgd2l0aCB0aGVtLiBFdmVyeSB0aW1lIHRoZXkgdHJ5IHRvIHRhbGsgdG8geW91LCBqdXN0IHJlcGVhdCBvdmVyIGFuZCBvdmVyOiAieW91ciBkb2cgaXMgZGFuZ2Vyb3VzLCBhbmQgSSBwcm90ZWN0aW5nIG15c2VsZiIgb3Igc29tZXRoaW5nIHNpbWlsYXIsIGFuZCBleHRyYWN0IHlvdXJzZWxmIGZyb20gdGhlIGNvbnZlcnNhdGlvbi4uIApBbm90aGVyIHRoaW5nIHlvdSB3aWxsIGZpbmQgaXMgdGhhdCB3aGVuIHlvdSBwdXJjaGFzZSB0aGUgMjAwIFN1aXRlZCBQb2tlciBDaGlwcyB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2UsIG1vc3QgZXZlcnlvbmUgaGFzIHNvbWV0aGluZyB0byBzYXkgYWJvdXQgaXQuIEtlZXAgaW4gbWluZCBpdCdzIGFsbCBwb3NpdGl2ZSBhbmQgdGhleSBjYW4gbWFrZSBhIGdyZWF0IGdpZnQgZm9yIHRoZSBvbmVzIHlvdSBwdXJjaGFzZSBwcmVzZW50cyBmb3IgZWFjaCB5ZWFyLiBJbiB0aGUgZW5kLCB3ZSBoYXZlIG5vdGhpbmcgYnV0IGdvb2QgdGhpbmdzIHRvIHNheSBhYm91dCB0aGlzIHBva2VyIGNoaXAgc2V0Li4gCkNvbnRyYXN0IGlzIGNlcnRhaW5seSB0aGVyZSAoIlRoZXJlIGFyZSBkYXJrIHNoYWRvd3Mgb24gdGhlIGVhcnRoLCBidXQgaXRzIGxpZ2h0cyBhcmUgc3Ryb25nZXIgaW4gdGhlIGNvbnRyYXN0LiIgQ2hhcmxlcyBEaWNrZW5zLCBUaGUgUGlja3dpY2sgUGFwZXJzKSwgZXNwZWNpYWxseSBpbiB0aGUgY29ybmVyIGJpdHMsIHdoZXJlIG9uIGNsb3NlciBpbnNwZWN0aW9uIHRoZSBibGFja25lc3MgaXMgcmVhbGx5IG1vcmUgd2hpdGUgdGhhbiBibGFjay4gSW4gYW55IGV2ZW50LCB0aGUgcHJpbnQgc3VnZ2VzdHMgImNvbG9yIiB0byBtZSBmb3Igbm8gZ29vZCByZWFzb24sIGV4Y2VwdCBwZXJoYXBzIHRoYXQgaXQgbG9va3MgdmVyeSBjb2xkLCBhbmQgY29sZCBpcyBzdWdnZXN0aXZlIG9mIGljZSBibHVlLCBhbmQgdGhlIGdvb2QgY29udHJhc3QgZm9yIHRoYXQgaXMgeWVsbG93LiAKSSBhbSBub3QgdHJ5aW5nIHRvIGJlIGF0IGFsbCBydWRlLCBidXQgdGhlIHZhc3QgbWFqb3JpdHkgb2YgR0kgZG9jdG9ycyB0aGF0IG91ciBwYXRpZW50cyBydW4gaW50byBhcmUgb2YgdGhlIG9waW5pb24gdGhhdCBhIHBhdGllbnQgbGlrZSBUYW1pIHdvdWxkIGhhdmUgbm8gcmVhc29uIHRvIGVtYmFyayBvbiBhIGdsdXRlbiBmcmVlIGRpZXQgY29uc2lkZXJpbmcgaGVyIG5lZ2F0aXZlIHRlc3RzLgpWaWRlbyBnYW1lcyBhcmUgZmFyIGFuZCBhd2F5IHRoZSBtb3N0IHBvcHVsYXIgc2xvdCBhcyBvZiBsYXRlLiAKQnV0IHRoZSBncmVhdGVzdCBqb3kgdG8gSHVnaCwgd2FzIHRoZSAzMCB5ZWFycyBzcGVudCB3aXRoIGZhbWlseSBhbmQgZnJpZW5kcyBhdCBoaXMgYmVsb3ZlZCBTYW5kIExha2UuIFRoZSBhZHZlbnR1cmVzIGFyb3VuZCB0aGUgbGFrZSBhbmQgdGhlIGlzbGFuZHMgd2VyZSBhbHdheXMgcmVsaXNoZWQsIGJ1dCB0aGUgbW9tZW50cyBhcm91bmQgdGhlIGJvbiBmaXJlcywgdGhlIHRhbGtpbmcsIHRoZSBsaXN0ZW5pbmcsIHRoZSBzdG9yaWVzLCB0aGUgYnVpbGRpbmcgb2YgdGhvc2UgZ3JlYXQgYmlnIGZpcmVzLCB3ZWxsLCB0aGV5IHdlcmUgcHJpY2VsZXNzLiBQYXJ0aWN1bGFybHkgaW4gdGhlIGxhdGVyIHllYXJzLCB3aGVyZSBob3VycyB3ZXJlIHNwZW50IGFyb3VuZCB0aGF0IGZpcmUgd2l0aCBoaXMgYmVzdCBmcmllbmQsIGhpcyBzb24gQ3JhaWcuIApPbiBhIHdpZGVyIHNvY2lldGFsIGxldmVsLCBlc3BlY2lhbGx5IGZvciBtYW5kYXRvcnkgaW5zdXJhbmNlLCBpdCBhIGJpdCBkaWZmZXJlbnQsIGJ1dCB0aGUgcGVyc29uYWwgcmVsYXRpb25zaGlwIHdpdGggaW5zdXJhbmNlIHdpbGwgYWx3YXlzIGJlIG9uZSBvZiB0aGUgcHJvYmFiaWxpdHkgb2YgbmVlZGluZyBpdCB2ZXJzdXMgdGhlIGNvc3QgdG8gaGF2ZSBpdC4gWW91IGJldHRpbmcgdGhhdCBpdCBnb2luZyB0byBzYXZlIHlvdSBtb25leSBpbiB0aGUgbG9uZyBydW4sIHRob3VnaCBpdCBtaWdodCBhY3R1YWxseSBlbmQgdXAgY29zdGluZyB5b3UgbW9yZSBtb25leS4KS25vd2luZyB3aGF0IHRvIGV4cGVjdCBhaGVhZCBvZiB0aW1lIGNhbiBoZWxwIHlvdSBwbGFuIHRoZSBwZXJmZWN0IHNob3dlci4gSGVyZSBhcmUgc29tZSBoZWxwZnVsIHRpcHM6CkJ1dCwgdGhlcmUgd2FzIGEgdGltZSBwZXJpb2QgaW4gdGhlIGVhcmx5IDIwMDAncyB3aGVuIHBlb3BsZSB3b3JlIGR1cmFncyBhcyBhIHBhcnQgb2YgdGhlaXIgZGF5IHRpbWUgb3V0Zml0cy4gCklmIHlvdSBkbyBkZWNpZGUgdG8gc2VlIHRoZSB0dXJuIGFuZCBhbm90aGVyIGhlYXJ0IGhpdHMsIHlvdXIgb3V0cyBnbyBmcm9tIDggdG8gMTcsIGFuZCB0aGUgcG90IG9kZHMgcHJvYmFibHkgaW1wcm92ZSBlbm91Z2ggdG8gc2VlIHRoZSByaXZlci4uIApXaGlsZSBoaXMgcmVmdXNhbCB0byBmb2xsb3cgYW55IHJ1bGVzLCBvciB0byBhY2tub3dsZWRnZSB0aGUgcG9pbnQgb2Ygc2FpZCBydWxlcyBkb2VzIG1vdmUgaGltIGZpcm1seSBpbnRvIHRoZSByZWFsbSBvZiBoZSB0aGVyZSB0byBwb2ludCBvdXQgdGhlIGFic3VyZGl0eSBvZiB0aGUgcGVvcGxlIGFyb3VuZCBoaW0uIApUaGUgbmV4dCBzdGVwIHRvIGhhbmRsaW5nIHlvdXIgcmVjZWlwdHMgaXMgdG8gaGF2ZSBhIHBoeXNpY2FsIGxlZGdlciBhbmQgYSBiYWNrdXAsIHN1Y2ggYXMgYSBjb21wdXRlciBzb2Z0d2FyZSBwcm9ncmFtIHRoYXQgY2FuIGRvY3VtZW50IHRoZSByZWNlaXB0cy4gQnkgZG9pbmcgdGhpcywgeW91IGhhdmUgYSBwcmltYXJ5IG1lYW5zIG9mIGxvZ2dpbmcgdGhlIGluY29tZSBhbmQgZXhwZW5zZXMgdGhhdCB5b3UgaGF2ZSwgYW5kIHlvdSBoYXZlIGEgYmFja3VwIHN5c3RlbSBpbiBjYXNlIHNvbWV0aGluZyBoYXBwZW5zIHRvIHRoZSBwcmltYXJ5IG1ldGhvZC4gV2hlbiBkZWFsaW5nIHdpdGggeW91ciBvd24gY29tcGFueSwgcmVnYXJkbGVzcyBvZiB3aGF0IHlvdSBzZWxsLCBpdCBpcyBhYnNvbHV0ZWx5IGVzc2VudGlhbCB0byBrZWVwIGFjY3VyYXRlIGFuZCBkdXBsaWNhdGUgcmVjb3Jkcy4gVGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgd2hlbiBpdCBjb21lcyB0byBjb250ZW5kaW5nIHdpdGggcmVjZWlwdHMgZm9yIHRoYXQgYnVzaW5lc3MuCk15IGxhcHRvcCBmcmVlemVzIHVwIG1vcmUgdGhhbiBteSBkZXNrdG9wLiAKTmV3IEJvb2sgRmluZGVyIC4gQnVkZGhpc3QgcHJhY3RpY2UgaSBoYXZlIHJlYWQgYW5kIHJlY29tbWVuZGVkIG1hbnkgaW50cm9kdWN0b3J5IGJvb2tzIG9uIG1pbmRmdWxuZXNzIG92ZXIgdGhlIHllYXJzIGJ1dCB0aGlzIG9uZSB3aWxsIC4gCkFuZCBteSBjb21wdXRlciB0aGVyZSBpc24ndCBzZXQgdXAgeWV0LCBqdXN0IGEgZGlub3NvdXIgbGFwdG9wIHdpdGhvdXQgd29yZCBwcm9ncmFtIG1heWJlIGkgY2FuIGRvIHRoZSByZXNlYXJjaCBmb3IgdGhlIGFubm90YXRpb25zIGJ5IGRpYWwgdXAuIEFsbCAxMCsgeWVhcnMgb2YgaXQhIGl0J3Mgd29ydGggdGhlIHRpbWUuLiAKSSBkaWRuIGdpdmUgbXVjaCAoYW55KSB0aG91Z2h0IHRvICJhY2NlcHRhYmxlIGZvcm1zIG9mIGxlYXJuaW5nIGdvYWxzIi5JIGRvbiBoYXZlIGEgZ3V0IHJlYWN0aW9uIHRvIHRoaXMgc3VibWlzc2lvbi4gSSB0aGluayBpdCBub3Qgc3VjaCBhIGJhZCBwb3N0IGJlY2F1c2UgaXQgZXhhY3RseSB0aGUgc29ydCBvZiB0aGluZyBJIGZvdW5kIG15c2VsZiBhc2tpbmcgaW4gYSBnZW5lcmFsIHNlbnNlIHdoZW4gSSBzdGFydGVkIG5ldyBwcm9qZWN0cy5UaGUgb25lIHRoaW5nIEkgd291bGQgbWVudGlvbiBpcyB0aGF0IGl0IHdvdWxkIGJlIHByZWZlcmFibGUgaWYgdGhlIHF1ZXN0aW9uIHdhcyBhc2tlZCBpbiB0aGUgY29udGV4dCBvZiBhIHNwZWNpZmljIGdvYWwuIApCb3RoIG9mIG15IGpvYnMgaGF2ZSBzY2VudGVkIGxvdGlvbnMuIEkgcHJlZmVyIHVzaW5nIHVuc2NlbnRlZCwgYnV0IEl0IGNhbiByZWFsbHkgaGVscC4gQnV0IG5vdCB3aGVuIHBlb3BsZSBmYXJ0LCB0aGF0IGNhbiBiZSByZWFsbHkgbmFzdHkuIEhlYXZ5IHNtb2tlcnMgY2FuIG1ha2UgbWUgZmVlbCBhIGxpdHRsZSBzaWNrIHNvbWV0aW1lcy4KUGVvcGxlIGRvIHdoYXQgdGhleSBkbyBhIGxvdCBvZiB0aGUgdGltZSBmb3IgbW9uZXkuIApJZiB5b3UgY2FuIGRlbW9uc3RyYXRlIHRoYXQgUmVwLiBPbWFyIGludGVuZHMgdG8gZm9yY2Ugb3RoZXJzIHRvIGNvbmZvcm0gdG8gaGVyIHBlcnNvbmFsIGJlbGllZnMsIG9yIGJlbGlldmVzIHRoYXQgb25seSBBbWVyaWNhbnMgd2hvIHNoYXJlIHRoZW0gY2FuIGJlIGNvbnNpZGVyZWQgZ29vZCBwZW9wbGUsIEkgd291bGQgYWdyZWUgd2l0aCB5b3UuIEJ1dCBzbyBmYXIgdGhlIG9ubHkgcGVvcGxlIEkgc2VlIGRvaW5nIHRoYXQgYXJlIGEgYnVuY2ggb2YgUmVwdWJsaWNhbiBDaHJpc3RpYW4gQ29uc2VydmF0aXZlcy4gYW5kIHlvdS4KRGFzIGFuZ2VzZWhlbmUgIG1pdCBkYXp1Z2VocmlnZW0gIFJvb20gaGF0IGRpZSBXaWVkZXJrZWhyIHZvbiBFdXJvcGFzIGdydGVtIE5vIExpbWl0IFRleGFzIEhvbGRlbSAgVG91cm5hbWVudCBhbmdla25kaWd0LCBkaWUgIE9wZW4gMjAxMCBkaWVzZW0gSmFociB3aXJkIGRpZXNlcyByaWVzaWdlICBFdmVudCBpbiBkZXIgWmVpdCB2b20gMTUuIApbZGVsZXRlZF0gIDYgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkFuZCB0aGUgbm92ZWx0eSBvZiBpdCBhbHNvIHdvcmUgb2ZmIHNvbWUgYW5kIEkgY291bGQgc3RhcnQgYmVpbmcgaG9uZXN0IHdpdGggbXlzZWxmIGFib3V0IGhvdyBnb29kIGl0IGFjdHVhbGx5IHdhcy4gU2ltaWxhciB0byBob3cgeW91IHRoaW5rIGEgbmV3IGdhbWUgaXMgdGhlIGFic29sdXRlIGJlc3Qgd2hlbiBpdCBjb21lcyBvdXQgYW5kIGl0IGRvZXMgZXZlcnl0aGluZyByaWdodCwgdGhlbiB5b3UgZ2V0IGJvcmVkIHdpdGggaXQgYW5kIHN1ZGRlbmx5IG5vdGljZSBhbGwgb2YgdGhlIHRoaW5ncyBpdCBkb2VzIGNvbXBsZXRlbHkgd3JvbmcuIFNvIEkgZ3Vlc3MgeW91IGNvdWxkIHNheSBJIGZpbmFsbHkgb3V0Z3JldyB0aGUgc2hvdy4gCkJ1dCB5b3VyIGxhdGVyIGNvbW1lbnRzIHNheWluZyB0aGF0IGl0IHdhc24gd29ydGggdGFsa2luZyBhYm91dCBhc2V4dWFsIHBlb3BsZSBleHBlcmllbmNlcyB3YXMgd2hlcmUgaXQgc2VlbWVkIG11Y2ggbW9yZSBsaWtlIGp1c3QgdHJ5aW5nIHRvIHNxdWFzaCBtaW5vcml0eSB2b2ljZXMuIElmIHlvdSBhY3R1YWxseSB3YW50IHRvIGFkZHJlc3MgaG93IHZpcmdpbml0eSBhZmZlY3RzIG1lbiBpbiBnZW5lcmFsIChub3QganVzdCBhc2V4dWFsIG1lbiksIHRoZW4gaXQgcGVyZmVjdGx5IGZpbmUgdG8gcG9zdCBhIG1vcmUgZ2VuZXJhbCBhcnRpY2xlIGFuZCBoYXZlIHRoYXQgZGlzY3Vzc2lvbi4gCkp1c3Qgb3ZlciBhbiBob3VyIGxhdGVyLCBNYWR1cm8gcG9zdGVkIG9uIFR3aXR0ZXI6IGVsZWN0cmljIHdhciBhbm5vdW5jZWQgYW5kIGxlZCBieSB0aGUgQW1lcmljYW4gaW1wZXJpYWxpc20gYWdhaW5zdCBvdXIgcGVvcGxlIHdpbGwgYmUgZGVmZWF0ZWQuIE5vdGhpbmcgYW5kIG5vIG9uZSBjYW4gYmVhdCB0aGUgcGVvcGxlIG9mIEJvbGl2YXIgYW5kIENoYXZlei4gTWF4aW11bSB1bml0eSBvZiB0aGUgUGF0cmlvdHMhIFNlY3JldGFyeSBvZiBTdGF0ZSBNaWtlIFBvbXBlbyBoaXQgYmFjayBhdCBNYWR1cm8sIGJsYW1pbmcgaGltIGZvciB0aGUgc2l0dWF0aW9uLi4gCkkgZGlkbiBzYXkgSSB3YXMgZXhwZWN0aW5nIGFuIGFjYWRlbWljIGRpc2N1c3Npb24sIGJ1dCBob2x5IGNyYXAsIHRoZSBnaWdnbGluZyBvdmVyIGF3ZnVsL3NpY2svY3JlZXB5L2ZyaWdodGVuaW5nIHRoaW5ncyBhbmQgdGhlIHZvY2FsIGZyeSBqdXN0IG1hZGUgbWUgd2FudCB0byBzdHJhbmdsZSBib3RoIG9mIHRoZW0uICJPaCB5ZWFoLCBBbW1hIHdhcyBmdWxsIG9mIHJhZ2UgYW5kIHRoZW4gc2hlIHJpcHBlZCBvdXQgaGVyIGZyaWVuZCB0ZWVlZWVldGghIFt2b2NhbCBmcnldIFRlZWhlZWhlZWhlZWhlZWVoZWVlIi4gClNvIHlvdSBjYW4gZXF1aXAgQVNDIG9uIHlvdXIgYXJtb3Igc2xvdC4gClRoZXJlIGFyZSBhIG51bWJlciBvZiBkaWZmZXJlbnQgYWN0aXZpdGllcyBhbmQgdGVjaG5pcXVlcyB0aGV5IGFyZSB0cmFpbmVkIGluIHRvIGFpZCByZWxheGF0aW9uLiBUaGVzZSBpbmNsdWRlLCBtYXNzYWdlIHRlY2huaXF1ZXMsIHN0cmV0Y2hpbmcgdGVjaG5pcXVlcywgYW5kIGJyZWF0aGluZyB0ZWNobmlxdWVzLCBhbGwgb2Ygd2hpY2ggd2lsbCBiZW5lZml0IHRoZSBjbGllbnQgaW4gc29tZSB3YXkuIFN0cmFwcGluZy90YXBpbmcgaXMgdXNlZCBieSBzcG9ydHMgbWFzc2FnZSBwcm9mZXNzaW9uYWxzIHRvIHByZXZlbnQgaW5qdXJ5IGFuZCB0byBwcmV2ZW50IHRoZSBpbmp1cnkgZnJvbSByZW9jY3VycmluZy4gCkxhYm9yIHRyYWZmaWNraW5nIGhhcyBiZWVuIGZvdW5kIGluIGRpdmVyc2UgbGFib3Igc2V0dGluZ3MgaW5jbHVkaW5nLCBkb21lc3RpYyB3b3JrLCBzbWFsbCBidXNpbmVzc2VzLCBsYXJnZSBmYXJtcywgYW5kIGZhY3Rvcmllcy4KVnlhcyBHaWFubmV0dGkgQ3JlYXRpdmUgaGFzIGFjY291bnRzIHN1Y2ggYXMgdGhlIGNvcnBvcmF0ZSBhY2NvdW50IG9mIHRoZSBBIFYgQmlybGEgZ3JvdXAsIEJpcmxhIFN1bmxpZmUsIFRhaiBIb3RlbHMsIGNlcnRhaW4gYnJhbmRzIG9mIFRoZSBUaW1lcyBvZiBJbmRpYSBncm91cCBhbmQgUGlkaWxpdGUgSW5kdXN0cmllcy4KSGVyZXMgL3UvdHJhaWxzb2Zkb29tIHdpdGggYSBzdG9jaywgcG9saXNoZWQgaW50ZXJuYWxzIG9ubHksIEE1IGFjaGlldmluZyBncmVhdCBjb25zaXN0ZW5jeSBudW1iZXJzLCArLyAgM2Zwcy4gCldlIGFzayBmb3IgYXQgbGVhc3QgMiBwYXJhZ3JhcGhzIG9mIHdyaXRpbmcgYWJvdXQgeW91ciB0aGVvcnkgYW5kIGEgc3BlY2lmaWMgY2l0YXRpb24gZnJvbSB0aGUgd29yay4gCkFub3RoZXIgd2F5IHRvIGtpbGwgYSBwcmVnbmFudCBmZW1hbGUgU2ltIGlzIHRvIHdhaXQgdW50aWwgdGhlaXIgaHVuZ2VyIGlzIHJlYWxseSBsb3csIGl0IHdvbid0IG5lY2Vzc2FyaWx5IGJlIHJvY2sgYm90dG9tIChiZWNhdXNlIHRoZXkgYXJlIHByZWduYW50IGFuZCB0aGVpciBuZWVkcyBkZWNheSBxdWlja2VyIGFuZCBkaWUgcXVpY2tlciksIGJ1dCB0aGVuIHRoZXkgd2lsbCBkcm9wIHRvIHRoZSBmbG9vciBhbmQgdGhlIGdyaW0gcmVhcGVyIHdpbGwgY29tZSBhbmQgdGFrZSBjYXJlIG9mIHRoZSByZXN0LiAKRHJ1cnkgRG9uCldobywgaW4gdHJ1ZSBoZXJvIHN0eWxlLCBmb3JnaXZlcyBtZS4gCiJXZSBhcmUgb3V0cmFnZWQgYnkgdGhlIGJsYXRhbnQgZGlzcmVnYXJkIGZvciBjb21tdW5pdHkgc2FmZXR5IG9uIGRpc3BsYXkgaW4gdGhlIHZpZGVvLCIgQWlyYm5iIHNhaWQuICJXZSB3aWxsIGJlIHN1c3BlbmRpbmcgYW55IGd1ZXN0J3MgYWNjb3VudHMgdGhhdCBhcHBlYXIgdG8gYmUgY29ubmVjdGVkIHRvIHRoaXMgaW5jaWRlbnQuIgpJIGhhdmUgY2xpbmljYWwgZGVwcmVzc2lvbiBhbmQgdGhleSB0b3NzZWQgdGhpcyBpbnRvIHRoZSBtaXggYXQgb25lIHBvaW50IGluc3RlYWQgb2YgaW5jcmVhc2luZyBteSBTU1JJIGRvc2FnZS4uIApBbmQgeWVzLCBpbiBhIGxvdCBvZiBmdW5jdGlvbmFsIG5ldXJvbG9neS9uZXVyb2NvZ25pdGlvbiBzdHVkaWVzIGxlZnRpZXMgYXJlIGV4Y2x1ZGVkIGR1ZSB0byB0aGUgcG90ZW50aWFsIGltcGFjdCBvZiB0aGVzZSBkaWZmZXJlbmNlcy4uIApSb2xsIFVuaXRlZCBTdGF0ZXMgQ291cnRob3VzZSBCaWxsIGludG8gbGF3IGluIHRoZSBPdmFsIE9mZmljZSBvZiB0aGUgV2hpdGUgSG91c2UgYXMgKEwgUikgSG9tZWxhbmQgU2VjdXJpdHkgU2VjcmV0YXJ5IGFuZCBmb3JtZXIgQXJpem9uYSBHb3Zlcm5vciBKYW5ldCBOYXBvbGl0YW5vLCBTZW4uIApTaGUgc3RvcHBlZCBlYXRpbmcgb3V0IGFuZCBsZWFybmVkIGhvdyB0byBjb29rLgpUaGVyZSBhcmUgIkxpdmUgQ2FzaW5vIENoaXBzIiwgd2hpY2ggdmFsdWUgaXMgYSByZWZsZWN0aW9uIG9mIGhvdyBtdWNoIG1vbmV5IHRoZXkgYXJlIHdvcnRoLiAKSSB0aGluayBtb3N0IE0gZG90IG9yZ2FuaXNlcnMgaGF2ZSBkb25lIHRoZSBzYW1lIGluIEV1cm9wZSBhcyB0aGV5IGhhdmUgc2VlbiB0aGUgcG90ZW50aWFsIGZvciByZXZlbnVlIG1ha2luZyByYXRoZXIgdGhhbiBtYWtpbmcgdGhlIGV2ZW50IHNhZmUsIGZ1biBhbmQgZHJhZnRpbmcgZnJlZSEhIEksIGFuZCBtYW55IG90aGVycyB0aG91Z2h0IHRoZSBzd2ltIHdhcyA0IG1pbnMgbG9uZywgaXQgd2FzIGV4dHJlbWVseSBjcm93ZGVkIHVwIHVudGlsIHRoZSBsYXN0IDEwIG1pbnMgd2hlbiBJIHNvcnQgb2YgaGFkIGEgYml0IG9mIGNsZWFyIHdhdGVyIGluIHdoaWNoIHRvIHN3aW0gd2l0aG91dCBjb2xsaWRpbmcgYW5kIGJlaW5nIGJhdHRlcmVkISEgVGhlIGJpa2UgaXMgdG91Z2ggZXZlbiB0aG91Z2ggdGhlcmUgaXMgYSAzMGttIGZsYXQgc2VjdGlvbiBhdCB0aGUgc3RhcnQgb2YgZWFjaCBsYXAuIApUaGVzZSBwcm9taXNlcyBvZiBkZW1vY3JhY3kgc291bmQgcXVhaW50IHRoZXNlIGRheXMgaW4gdGhlIFVTLCB3aXRoIGEgcG9wdWxhY2Ugc28gdW5pbmZvcm1lZCB0aGF0IHRoZXkgYXJlIGVhc2lseSBtaXNsZWQgYnkgZGVtYWdvZ3VlcyBhbmQgY2hhcmxhdGFucyBpbnRvIGFjdGluZyBpbiB0aGUgbW9zdCB1bmRlbW9jcmF0aWMgb2Ygd2F5cy4gV2hhdCBpcyB0byBibGFtZSBmb3IgdGhlIGJyZWFrZG93biBvZiBjaXZpbGl0eSBhbmQgY2l0aXplbnNoaXAgaW4gQW1lcmljYT8gbGlrZSB0byBibGFtZSBpdCBhbGwgb24gRm94IE5ld3MgYW5kIHRoZSBsaWtlcyBvZiBHbGVubiBCZWNrIGFuZCBSdXNoIExJbWJhdWdoLCBidXQgdGhlIHRydXRoIGlzIGVyb3Npb24gb2YgQW1lcmljYW4gZGVtb2NyYWN5IHByZWRhdGVzIHRoZSBhcHBlYXJhbmNlIG9mIGZhc2Npc20uIApBZGRpbmcgdXAgaW5jb21lIGNvbXBvbmVudHMKSSBhbSBub3QgYXNraW5nIHlvdSB0byBzaW5nbGUgdXMgZHVkZXMgb3V0LiAKVGhhbmtzIGZvciByZWFkaW5nLi4gCkkgYmVsaWV2ZSB0aGF0J3Mgd3JpdHRlbiBvZmYgYXMgc29tZXRoaW5nIGhlciBmYW1pbHkgY29vcmRpbmF0ZWQuIApQZXJtYWluYW4gQ2VtZSBzZXJpbmcgZGlzZWJ1dCBqdWdhIEFkdVEgc2VkYW5na2FuIGNlbWUga2VsaWxpbmcgcGVybWFpbmFuIHlhbmcgc2FtYSBkZW5nYW4gQmFuZGFyUS4gCkp1c3QgYWZ0ZXIgYSBUaGFpIHJlc3RhdXJhbnQsIGRpcCBpbiB0byB0aGUgbGl0dGxlIGVuY2xhdmUgYW5kIHlvdSB3aWxsIHNlZSBOYXRhcmVlLiBBY3R1YWxseSwgdGhlcmUgYXJlIHR3byBOYXRhcmVlIGpvaW50cywgYnV0IGdvIGluIHRoZSBmaXJzdCBvbmUgKG9yLCB3aGVuIGZhY2luZyB0aGVtLCBnbyBpbnRvIHRoZSBvbmUgb24gdGhlIHJpZ2h0KS4gSSBiZWxpZXZlIHRoZSBvdGhlciBvbmUgaXMgYSBzdGFuZGFyZCBtYXNzYWdlIHZlbnVlLiA3LzEwUGluayBNYXNzYWdlIGlzIHdlbGwgbG9jYXRlZCwgdmVyeSBjbG9zZSB0byBQaHJvbSBQaG9uZyBCVFMsIG9yIGFib3V0IDEwIG1pbnV0ZXMgd2FsayBvciBhIHNob3J0IG1vdG9yY3ljbGUvdGF4aSByaWRlIGZyb20gU3VraHVtdml0IHN1YndheSBzdGF0aW9uLiAKU28sIHRoZSB3aG9sZSBkYXkgd2lsbCBiZSByZWxheGluZyBhbmQgZW5qb3lpbmcgc25vdy4gCkNvdW50cmllcyB3aXRoIGhpZ2hlciBhdmVyYWdlIGNob2xlc3Rlcm9sIHRoYW4gQW1lcmljYW5zIHN1Y2ggYXMgdGhlIFN3aXNzIG9yIFNwYW5pc2ggaGF2ZSBsZXNzIGhlYXJ0IGRpc2Vhc2UuCkRpdHp5ZGFpbnR5Y3JlYXR1cmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkNvbWJpbmUgdGhlIHNlYSBzYWx0IGFuZCBhbG1vbmQgb2lsIGluIGEgYm93bC4gCldhcyByb29tIGZvciBoaW0sIEtsaW5nZWxob2ZlciBzYWlkLiB5b3UgZ2V0IGRvd24gdG8gdGhlIHdhdGVyIHlvdSBjYW4gc2VlIHRoZXJlIHdhcyByb29tLCBidXQgaXQgdG9vIGxhdGUgYXQgdGhhdCBwb2ludC4gaW50aWFscyB3ZXJlIGFsc28gZm91bmQgb24gYSBnb2xkIHBsYXRlZCB0b2lsZXRyeSBpdGVtLiBUaGUgbGlrZWx5IHN0b29kIGZvciBDbGFyayBtYWlkZW4gbmFtZS4gS2xpbmdlbGhvZmVyIGJlbGlldmVzIGl0IHdhcyBtZWFudCB0byBiZSBhIHByZXNlbnQgZm9yIGEgcmVsYXRpdmUuClJlbGF4YXRpb24gICBNYW55IHBlb3BsZSB0aGF0IGFsbCB0eXBlcyBvZiBtYXNzYWdlIGFpZCBpbiByZWxheGF0aW9uLiBUaGlzIGlzIG5vdCB0cnVlLiBPbmx5IGNlcnRhaW4gbWFzc2FnZSB0ZWNobmlxdWVzIGhhdmUgcmVsYXhpbmcgZWZmZWN0cyBvbiB5b3VyIG5lcnZvdXMgc3lzdGVtLiAKTWVhbiBwZWFrIGNvcnRpc29sIGNvbmNlbnRyYXRpb25zIGFuZCBhcmVhIHVuZGVyIHRoZSBjdXJ2ZSAoQVVDKSB3ZXJlIGxvd2VyIGZvbGxvd2luZyBQUyAoMzkgIDElIGFuZCAzNSAgMCUsIHJlc3BlY3RpdmVseSkgd2hlbiBjb21wYXJlZCB0byBwbGFjZWJvIChwClVuZGVyc3RhbmQgeW91ciBib3VuZGFyaWVzIGFuZCB3aGF0IGFyZSBhY2NlcHRhYmxlIHF1ZXN0aW9ucy9yZXNwb25zZXMvYmVoYXZpb3IgdG8geW91Li4gClRsO2RyICAgMSkgbWF5YmUgMikga2luZGEgdGlnaHQsIGtpbmRhIGluZmxhbWVkIG11c2NsZXMgMykgeW91IGdvdCBiZWF0IHVwSSBoYXZlIHdvbmRlcmVkIHRoZSBzYW1lIHRoaW5nLiAKTm90IGV2ZXJ5IHRlYW0gaW4gdGhlIE1MQiBjYW4gcHVsbCB0aGlzIG9mZiBidXQgb3duZXJzIG9mIHRlYW1zIGluIGJpZ2dlciBtYXJrZXRzIGtuZXcgdGhleSBjb3VsZCBhbmQgdGhlcmUgd2FzbiBhbnl0aGluZyBzdG9wcGluZyB0aGVtLiAKVGhhdCBtZWFucyBtb3JlIHRvIG1lIHRoYW4gaGVyIGF0dGVuZGluZy4gSSBmZWVsIGJhZCBmb3IgbXkgZGFkIG1vc3RseSwgaGUgd2FzIGNhcmluZyBmb3IgaGVyIGxpa2UgYSBudXJzZSB1bnRpbCB0aGUgZW5kLCBldmVuIHdha2luZyBtZSB1cCBvbmNlIGhlIHJlYWxpemVkIHNoZSB3YXMgZ29uZSBhbmQgcHVsbGVkIGhpbXNlbGYgdG9nZXRoZXIgZW5vdWdoIHRvIHRlbGwgbWUuIApCZXRzb2Z0IEdhbWluZyBvZmZlcnMgYW1vbmcgdGhlIG1vc3QgdmlzdWFsbHkgaW1wcmVzc2l2ZSBicm9jaHVyZSBvZiBzbG90IG1hY2hpbmVzIGFuZCBhZGRpdGlvbmFsbHkgY2FzaW5vIGdhbWVzLiBUaGVpciB1bmlxdWUgbWlzc2lvbiBpcyB0byBtYWtlIGF2YWlsYWJsZSBwbGF5ZXJzIHdpdGggYW4gZmlyc3QgYW5kIGltbWVyc2l2ZSBjYXNpbm8gaW5mb3JtYXRpb24gYWJvdXQgMyBEIGdyYXBoaWNzIGFuZCBzb25ncy4gQmV0c29mdCBoYXMgYSBnYW1lIGNhdGFsb2d1ZSBvZiBvdmVyIG9uZSBodW5kcmVkIGVudGVydGFpbmluZyBzbG90cyBnYW1lcyB3aGljaCBpbmNsdWRlcyB0YWJsZXMgZ2FtZXMgaW5jbHVkaW5nIEJsYWNramFjayBhbmQgUm91bGV0dGUuIFRoZXkgYWxzbyBvZmZlciB0cmFuc3BvcnRhYmxlIGNhc2lubyBnYW1lcyB3aGljaCBpbmNsdWRlcyBNci4gVmVnYXMgYW5kIHRoZW4gTHVja3kgNyBhbmQgYWxzbyBhIHZpcnR1YWwgcmFjZWJvb2suIElmIHlvdSBhcmUgbG9va2luZyBmb3IgdGhlIGNhc2lubyBleHBlcmllbmNlIGluIHlvdXIgb3duIGhvbWUsIGJlIHN1cmUgdG8gZmluZCBvdXQgbW9yZSBhYm91dCBzb21lIG9mIHRoZSBmYWJ1bG91cyBnYW1lcyBmb3JtIGJldHNvZnQuCkl0J3MgZmlnaHRpbmcgZmlzaCBvdmVyIG92ZXIgcGFpcnMuIEFuZCBnZXR0aW5nIHVsdHJhIHByZW1pdW0gaGFuZHMgc2V2ZXJhbCB0aW1lcyBwZXIgc2Vzc2lvbiB0aGF0IGhvbmVzdGx5IHlvdSBzaG91bGRuJ3QgZ2V0IHVzZWQgdG8uIApBZnRlciBiZWluZyBzdHJpY3RseSB6ZXJvY2FyYiBmb3IgbmVhcmx5IGZvdXIgbW9udGhzLCBJIGRyYW5rIHNvbWUgMTV5ciB3aGlza2V5IHdpdGggYSBjb3VwbGUgYnVkZGllcyB3aG8gd2VyZSB2aXNpdGluZyBmcm9tIG90aGVyIGNvdW50cmllcy4gCkh1YXdlaSBvcGVucyBCcnVzc2VscyBzZWN1cml0eSBsYWIgaW4gYmlkIHRvIHJlYXNzdXJlIEVVCkhleSB0aGVyZSwKRW5qb3kgdGhlIGNpdHkuIEVzcGVjaWFsbHkgaWYgdGhpcyBpcyB5b3VyIGZpcnN0IHRyaXAgdG8gVmVnYXMsIHBsZWFzZSBkb24ndCBzcGVuZCBhbGwgeW91ciB0aW1lIGF0IHRoZSBwb2tlciB0YWJsZXMuIApJdCBhYnNvbHV0ZWx5IGFtYXppbmcuIApBZGQgb24gYXQgdGhlIGJyZWFrICQyNSBmb3IgMTUwMCBjaGlwcy4uIApUaGUgcHJpbmNpcGFsIHNob3VsZCB0b28uIApTaGUgdHJpZWQgdG8ga2lzcyBtZSB3aGVuIEkgaGFuZGVkIDEwMEUgYXQgdGhlIHNhZmUsIGJ1dCBJIHJlZnVzZWQgaXQuIApXZSB0aGluayBoZSB3YXMgb3V0IGxvb2tpbmcgZm9yIGhlci4gU28gSSBndWVzcyBpdCBpcyBmYWlybHkgY29tbW9uIHdpdGggYm9uZGVkIHBhaXJzLCBJIGp1c3QgY2FuIHNjaWVudGlmaWNhbGx5IG1ha2Ugc2Vuc2Ugb2YgaXQgaW4gbXkgaGVhZCBhbmQgSSBrZWVwIHNlYXJjaGluZyBmb3IgYSByZWFzb24sIG9yIHNvbWV0aGluZyBJIG11c3QgaGF2ZSBkb25lIHdyb25nIHRvIHByb21wdCBpdCBzbyBxdWlja2x5LiAKR3JleXBvIE91ciBMb3JkIGFuZCBTYXZpb3VyIHUKSSB0aG91Z2h0IHRoYXQgbWF5YmUgaGUgY2FtZSBpbiBhIGZldyBkYXlzIGFnbyBvciBzb21ldGhpbmcgYW5kIHRoYXQgd2h5IGhlIGxvb2tlZCBmYW1pbGlhci4gCkkgbGl0ZXJhbGx5IGFza2VkIHRocmVlIGRpZmZlcmVudCBxdWVzdGlvbnMsd2l0aCBubyBpbnB1dCBpbiBlaXRoZXIgZGlyZWN0aW9uIHRvIGdpdmUgeW91IGEgc2Vuc2Ugb2YgbXkgcGVyc29uYWwgcG9saXRpY3MuIApUaGVyZSBpcyBhIGxvbmcgcHJlbHVkZSBpbiB3aGljaCB5b3UgaGF2ZSB0byB3YWl0IGFuZCB0aGVuIGRvc2V2ZXJhbCB0aGluZ3MgcmVsYXRpdmVseSBxdWlja2x5LiAKVHVja2VkIGludG8gdGhlIGhlYXRoIGNhcmUgYmlsbCBpcyBhIHNlZW1pbmdseSByZWFzb25hYmxlIHRheCBvbiBjb3NtZXRpYyBzdXJnZXJ5LiBJdCBhbiBlYXN5IHRheCB0byBzdXBwb3J0LCBsaWtlIHRheGVzIG9uIGNpZ2FyZXR0ZXMgYW5kIHNvZGFzLiBBZnRlciBhbGwsIGNvc21ldGljIHByb2NlZHVyZXMgYXJlIGNvbXBsZXRlbHkgdW5uZWNlc3NhcnkgdG8gb3VyIGhlYWx0aCwgYnkgZGVmaW5pdGlvbiwgYW5kICBsaWtlIGNpZ2FyZXR0ZXMgYW5kIHNvZGFzICBwb3RlbnRpYWxseSBoYXJtZnVsLiBCdXQgbm9uZSBvZiB0aGVzZSBwcm9kdWN0cyBhcmUgZGlzdHJpYnV0ZWQgZXZlbmx5IGluIHRoZSBwb3B1bGF0aW9uLiBJbiBmYWN0LCB0aGV5IGFsbCB0ZW5kIHRvIGJlIGNvbnN1bWVkIGJ5IHBvb3IgYW5kIHdvcmtpbmcgY2xhc3MgQW1lcmljYW5zIG1vcmUgdGhhbiB0aGUgcmljaCBhbmQgZWR1Y2F0ZWQgb25lcy4gQW5kIHRoZXJlZm9yZSB0YXhpbmcgYW55IG9mIHRoZXNlIHByb2R1Y3RzIGlzIGFsd2F5cyByZWdyZXNzaXZlLCBhIGxhcmdlciBidXJkZW4gb24gdGhlIHBvb3IgdGhhbiB0aGUgcmljaC4KTm90IGV2ZXJ5b25lIHdhcyBib3JuIGludG8gdGhlIHNhbWUgb3Bwb3J0dW5pdGllcyAgaGF2ZSBhbiBvcGVuIG1pbmQgYW5kIGJlIGtpbmQgdG8gcGVvcGxlLiBEb24gcHJlc3VtZSBmb3JlaWduIHdvbWVuIGFyZSBpbnN0YW50bHkgYXR0cmFjdGVkIHRvIHlvdXIgbmF0aW9uYWxpdHkuCkkgbWVhbiwgaXQncyBvbmUgb2YgdGhvc2UgdGhpbmdzIHdoZXJlIHlvdSBidXkgYSBqYWNrZXQgYW5kIHdlYXIgaXQgZm9yIDUgOCB5ZWFycyB0aGVuIHJlcGxhY2UgaXQgYmVjYXVzZSBpdCBnZXRzIHdvcm4gb3V0LCBzZW5kIGl0IGJhY2sgZm9yIGEgcmVwbGFjZW1lbnQgb3IgYnV5IGEgY2hlYXBlciBqYWNrZXQgYW5kIHJlcGxhY2UgaXQgZXZlcnkgZmV3IHllYXJzLiBJIGhhdmUgYSBwdWxsb3ZlciB0aGF0IGdvdCBjYXVnaHQgb24gc29tZXRoaW5nIGFuZCBtYWRlIGxpdHRsZSBob2xlcyBpbiBpdCwgaXQncyBjb3NtZXRpYyBidXQgdGhleSByZXBhaXJlZCBpdCBmb3IgbWUuIEkgYWxzbyBib3VnaHQgaXQgb24gQmxhY2sgRnJpZGF5IHdoZW4gdGhleSBkb25hdGVkIDEwMCUgb2YgdGhlaXIgc2FsZXMgdG8gZ3Jhc3Mgcm9vdHMgZW52aXJvbm1lbnRhbCBvcmdhbml6YXRpb25zIHNvIGl0IGZlZWxzIGxpa2UgYSB3aW4gd2luIHRvIG1lLi4gCkkgd2FzIHJlYWxseSBzaG9ja2VkIGJ5IGhvdyBtdWNoIHRoZXkgZWxhYm9yYXRlZCBvbiBldmVyeXRoaW5nLiBJIGtub3cgdGhleSBiaWcgb24gdHJhbnNwYXJlbmN5IG9uIENDVFYgYW5kIEkgdXN1YWxseSBhcHByZWNpYXRlIGhvdyBibHVudCB0aGV5IGFyZSBhYm91dCBpbmR1c3RyeSB0aGluZ3MsIGJ1dCB0aGlzIHNlZW1lZCBzaG9ja2luZ2x5IHVucHJvZmVzc2lvbmFsLCBldmVuIGZyb20gQnJldHQgd2hvIGJpZyBvbiB0aGUgd2hvbGUgImJydXRhbCBob25lc3R5IiB0aGluZy4gSSBhbHdheXMgcmVzcGVjdGVkIGhpcyBvcGluaW9ucyBiZWNhdXNlIGhlIGJlZW4gaW4gdGhlIGJ1c2luZXNzIGEgd2hpbGUgYnV0IHRoYXQgd2hhdCBtYWtlcyB0aGlzIGV2ZW4gbW9yZSBzdHJhbmdlIHRvIG1lLiBJdCBub3QgZXZlbiBsaWtlIHRoaXMgaXMgZmlyc3Qgb25seSBjb250ZW50LCB0aGlzIGlzIG9uIFlvdVR1YmUgYW5kIGl0IHNlZW1zIGxpa2Ugbm93IEFzaGVyIGNhbiBlaXRoZXIgaGF2ZSBhIGh1Z2UgZ2FwIG9uIGhpcyByZXN1bWUgb3IgbGlzdCBDb3cgQ2hvcCBhbmQgaGF2ZSBhbnkgcHJvc3BlY3RpdmUgZW1wbG95ZXJzIGdvb2dsZSAiQXNoZXIgQ293IENob3AiIGFuZCBmaW5kIHRoaXMgcHJldHR5IGVhc2lseS4gV2hlbiBhbiBlbXBsb3llZSBpcyBjcmFwIGFuZCB5b3UgYXNrZWQgYWJvdXQgaXQgYnkgc29tZW9uZSBjb25zaWRlcmluZyBoaXJpbmcgdGhlbSwgdGhlbiBieSBhbGwgbWVhbnMsIGJ1dCBwdXR0aW5nIGl0IG91dCB0aGVyZSBsaWtlIHRoYXQganVzdCBzZWVtcyBsaWtlIGl0IG1lYW50IHRvIHRhbmsgaGltIGFuZCBjb21lcyBvZmYgbWVhbiBzcGlyaXRlZC4KU2VhcmNoIGNvbnRpbnVlcyBmb3IgbWlzc2luZyBNYXN0ZXJ0b24gbWFuCkhlIGxpdmVkIGEgZ29vZCwgbG9uZyBsaWZlLiBIZSB3YXMgMTggd2hlbiBoZSBkaWVkLiBIZSBhY3RlZCBsaWtlIGEgcHVwcHkgdW50aWwgdGhlIGRheSBoZSBkaWVkLiBNeSBmYW1pbHkgYW5kIEkgaGF2ZSB0aG91c2FuZHMgb2YgcGljdHVyZXMgb2YgaGltIGFuZCBhIGxvdCBvZiBtZW1vcmllcy4gSGUgd2FzIHRoZSBiZXN0IGRvZyBJIGhhdmUgZXZlciBoYWQgYW5kIHdhcyBteSBiZXN0LCBhbmQgbW9zdCBsb3lhbCBmcmllbmQuIEhlIGFuZCBJIGJvbmRlZCBpbW1lZGlhdGVseS4gV2Ugc2F3IGVhY2ggb3RoZXIgYW5kIHRoYXQgd2FzIGl0LiBIZSBzbGVwdCB3aXRoIG1lIGV2ZXJ5IG5pZ2h0LgpJZiB5b3Ugd291bGQgbGlrZSB0byBhcHBlYWwgdGhpcyBkZWNpc2lvbiBwbGVhc2UgZmVlbCBmcmVlIHRvIGNvbnRhY3QgdGhlIG1vZGVyYXRvcnMgaGVyZS4gRG8gbm90IHJlcG9zdCB3aXRob3V0IGV4cGxpY2l0IHBlcm1pc3Npb24gZnJvbSB0aGUgbW9kZXJhdG9ycy4gTWFrZSBzdXJlIHlvdSByZWFkIHRoZSBydWxlcyBiZWZvcmUgc3VibWl0dGluZy4gVGhhbmsgeW91IQpPdGhlciBjaWRlciBwcm9kdWNpbmcgYXJlYXMgc3VjaCBhcyBOb3JtYW5keSBhbmQgQnJpdHRhbnkgaGF2ZSBhIHN0cm9uZyB0cmFkaXRpb24gb2YgY2lkZXIgcmVjaXBlcywgZnJvbSBtdXNzZWxzIHN0ZWFtZWQgaW4gY2lkZXIgKG1vdWxlcyAgbGEgTm9ybWFuZGUpIHRvIHBvdWxldCBhdSBjaWRyZSAoY2hpY2tlbiBicmFpc2VkIHdpdGggY2lkZXIgYW5kIHRoZSBsb2NhbCB0aGljayBjcmVhbSkuCk5lYXIgdGhlIGVuZCBpdCB3YXMgZG93biB0byB0d28gZ3V5cywgd2hvIHdlcmUgcHJldHR5IGJpZyBkdWRlcyBpbiB0aGUgeW91dGggZ3JvdXAuIApUaGlzIGlzIGEgY291bnRyeSB3aGVyZSB0aGUgYnVsbGllZCBhcmUgZXhwZWN0ZWQgdG8gcXVpdCB0aGUgc2Nob29sIGFuZCBldmVyeSBmZXcgbW9udGhzIGFub3RoZXIgc3BvcnRzIGNvYWNoIGhhcyBiZWVuIGZvdW5kIHRvIGhhdmUgYmVlbiBiZWF0aW5nIGhpcyBwdXBpbHMuCkkgY2FsbCB0aGlzIGEgbG9vcGhvbGUgdG8gdHJ5IHRvIGJlIHBvbGl0ZSB0b3dhcmQgR1csIGluIGNhc2UgdGhleSBkaWRuIGludGVuZCBmb3IgdGhlIENvbW1hbmRlciB0byBiZSBhYmxlIHRvIGRvIHRoaXMuIApKdXN0IGxpa2UgSSBhbSB2ZXJ5IGhhcHB5IHdpdGggbXkgY3VycmVudCBib3lmcmllbmQuIApBbmQgaXQgaXMgdGhvcm91Z2hseSB1bmFwcGV0aXppbmcgICBsaWtlIGVhdGluZyBib2lsZWQgdmVnZ2llcy5JbnN0ZWFkLCBnZXQgYSBwYW4gbWVkaXVtIGhvdCBhbmQgZHJ5IHJvYXN0IG9yIHRvYXN0IHlvdXIgcXVpbm9hIG9yIG9hdHMgb3IgcmljZSBvciBjYXVsaWZsb3dlciByaWNlIGZvciBhIGZldyBtaW51dGVzIHVudGlsIHlvdSAic21lbGwiIHRoZSBkaWZmZXJlbmNlLiAKVGhlIG1vcmUgbW9kZWxzIHRoZXkgbG9vayBhdCksIHRoZSB3b3JzZSB0aGV5IGZlZWwgYWJvdXQgdGhlbXNlbHZlcyBhbmQgdGhlIG1vcmUgbGlrZWx5IHRoZXkgYXJlIHRvIHdhbnQgdG8gZGlldC4gCjMgUG9pbnRzIG9mIGNvbnRhY3QgYXQgYWxsIHRpbWVzLgpPbiB0b3Agb2YgdGhhdCwgaGlzIGV4Y2VwdGlvbmFsIGNvdXJhZ2UgaW4gc2VuZGluZyBhIGZyaWdhdGUgdG8gdHJ5IHRvIGRpc3J1cHQgRnJlbmNoIG51Y2xlYXIgdGVzdGluZyBhdCBNdXJ1cm9hIGhhcywgcmlnaHRseSwgZ29uZSBkb3duIGluIGxlZ2VuZC4gS2lyayBhbHNvIGRlbGl2ZXJlZCBkb21lc3RpYyBwb2xpY2llcyB0aGF0IGhhdmUgY2hhbmdlZCBOZXcgWmVhbGFuZCBmb3JldmVyLCBhbmQgZm9yIHRoZSBiZXR0ZXIsIG1vc3QgcGVvcGxlIHdvdWxkIGFyZ3VlOiBBQ0MsIHRoZSBEUEIsIHRoZSBXYWl0YW5naSBUcmlidW5hbCwgYW5kIHBsZW50eSBtb3JlLiAKSSBkb24gdW5kZXJzdGFuZCB3aHkgdGhleSBldmVuIHRyaWVkIHRvIGFwcGVhbCBhdmVyYWdlIFB2RXIgYmFjayB0aGVuLiBJdCBkb2VzbiB3b3JrLiBZb3UgY2FuIGZvcmNlIHBlb3BsZSB0byBkbyB0aGluZ3MgdGhhdCB0aGV5IGRvbiBsaWtlLiAKSGF2ZW4gc3Bva2VuIHRvIG9yIHNlZW4gZWl0aGVyIG9mIHRoZW0gaW4gYWxtb3N0IDYgeWVhcnMuIApOQkFLZWZrYSAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpTbywgaG93IGRvZXMgYSBjYXNpbm8gZWFybiBtb25leSBmcm9tIGFsbCB0aGVzZSBjYXNpbm8gYm9udXMgb2ZmZXJzPwpBcyBmYXIgYXMgdGhpcyBnb2VzLCB0aGVyZSBhcmUgc29tZSBhd2FyZCBzZWFyY2ggdG9vbHMgdGhhdCBtYXkgYmUgZWFzaWVyIGJ1dCB0aGV5IGFsbCBjb3N0IG1vbmV5LiBJIHVzdWFsbHkganVzdCBtZXNzIGFyb3VuZCB3aXRoIHRoZSBVQSBwb3J0YWwgKG9idmlvdXNseSBvdGhlciBvbmVzIGRlcGVuZGluZyBvbiBteSBzZWFyY2hlcywgYnV0IGluIHlvdXIgY2FzZSwgVUEgaXMgZ29pbmcgdG8gbmV0IHlvdSB0aGUgY2hlYXBlc3QgcmVzdWx0cyBvdXRzaWRlIG9mIGFuIFNRIGl0aW5lcmFyeSkuCkhTUzogQ0FSWU4sIFdITyBJUyBZT1VSIElERUFMIENMSUVOVD9Nb3N0IG9mIG15IGNsaWVudHMgYXJlIGZhbWlsaWFyIHdpdGggZW5lcmd5IHdvcmsgYW5kIGhvdyBpdCBoZWxwcyBhbGxldmlhdGUgcGh5c2ljYWwgYW5kIGVtb3Rpb25hbCBwYWluIGFuZCBzdHJlc3MuIENhbiBiZSBlZmZlY3RpdmUgd2hlbiB5b3VyIG93biBjdXAgaXMgZW1wdHkuIApJdCBjYW4gdGFrZSBpdCB0byBhIGxldmVsIG9mIHRhcmdldGVkIGFuZCBwZXJzb25hbGlzZWQgaW1wYWN0LCByZWxldmFuY2UgYW5kIHNjYWxlIGxpa2UgbmV2ZXIgYmVmb3JlLi4gCkhlcmUncyB0aGUgYmVzdCBwYXJ0OiBZb3UgZG9uJ3QgaGF2ZSB0byBiZSBhIHJlZmxleG9sb2d5IGd1cnUgdG8gYmVzdG93IGEgbWFzc2FnZSB3aXRoIGhlYWx0aGZ1bCBiZW5lZml0cy4gQSBnZW5lcmFsIG1hc3NhZ2UgdXNpbmcgbG9uZywgZ2VudGxlIHN0cm9rZXMgY2FuIGJlIHN1cnByaXNpbmdseSBlZmZlY3RpdmUgYmVjYXVzZSBtYW55IG9mIHRoZSBiZXN0IGJlbmVmaXRzIG9mIG1hc3NhZ2UgYXJlIHRoZSBkaXJlY3QgcmVzdWx0IG9mIHNpbXBsZSB0b3VjaGluZy4gClRoZXkgc3BlYWsgb2YgdGhlIHNjYW5kYWwgc2luY2UgdGhlIDE4NzMgUGFjaWZpYyAocmFpbCkgU2NhbmRhbCBhbmQgdGFsayBvZiBmZWVsaW5nIGZvciBDYW5hZGEgb24gdGhlIHdvcmxkIHN0YWdlLllvdSB0aGluayBUcnVkZWF1IGhhZCBkb25lIHNvbWV0aGluZyBubyBvdGhlciB3b3JsZCBsZWFkZXIgd291bGQgZXZlciBkbyBsaWtlIHBheWluZyBodXNoIG1vbmV5IHRvIGEgcG9ybiBzdGFyIGhlIGhhZCBzZXggd2l0aC5NZWFud2hpbGUsIGhlcmUgaW4gUXVlYmVjLCB0aGUgd2hvbGUgYWZmYWlyIGhhcyBiZWVuIGdyZWV0ZWQgd2l0aCBhIGNvbGxlY3RpdmUgc2hydWcuVHJ1ZGVhdSBhbmQgaGlzIG1pbmlvbnMgbWF5IGhhdmUgcGVzdGVyZWQgZm9ybWVyIGF0dG9ybmV5IGdlbmVyYWwgSm9keSBXaWxzb24gUmF5Ym91bGQgdG9vIG11Y2ggYWJvdXQgU05DIExhdmFsaW4gYW5kIGZhaWxlZCB0byB1bmRlcnN0YW5kIGhlciBubyBtZWFudCBuby4gClRvIHNldCBldmVyeXRoaW5nIGZvciBwZWVyIHRvIHBlZXIgb3IgdG8ga2VlcCB0aGUgaW5mcmFzdHJ1Y3R1cmUgZ29pbmcgeW91IGdvaW5nIHRvIG5lZWQgcGVvcGxlIHRvIG1haW50YWluIGl0LiAKU2Vjb25kIGRlZ3JlZSBtdXJkZXIgYnkgYW4gYWxsIG1hbGUganVyeSBsYXN0IEZyaWRheS4gVGhlIGRlY2lzaW9uIGNhbWUgYWZ0ZXIgYWJvdXQgMTQgQnkgVW5pdGVkIFByZXNzIEludGVybmF0aW9uYWwgQW5vdGhlciBzdXJnZSBvZiBBcmN0aWMgYWlyIG1vdmVkIGhpIHRvZGF5IG9uIHRvcCBvZiBhIGNvbGQgYmxhc3QgdGhhdCBoYXMgYnJvdWdodCBiZSAgbG93IHplcm8gdGVtcGVyYXR1cmVzIGFjcm9zcyBoYWxmIHRoZSBuYXRpb24gZnJvbSB0aGUgRGFrbyAgdG8gTmV3IEVuZ2xhbmQuIApJbiBjb250cmFzdCwgdGhlIGhlYWx0aCByZWxhdGVkIHF1YWxpdHkgb2YgbGlmZSBtb2RlbCAoSFJRTCkgcGxhY2VzIHRoZSBwYXRpZW50IGZ1bmN0aW9uIGFuZCB3ZWxsIGJlaW5nIHJhdGhlciB0aGFuIGEgZGlzZWFzZSBhdCBpdHMgY2VudGVyIG9mIGZvY3VzLiBUaGlzIHBhdGllbnQgb3JpZW50ZWQgcGFyYWRpZ20sIHJldmlld2VkIGJ5IFdpbHNvbiBhbmQgQ2xlYXJ5MTAgaW4gMTk5NSwgaXMgZ2FpbmluZyBpbmNyZWFzaW5nIGFjY2VwdGFuY2UgYW5kIGluZmx1ZW5jZS4gSXQgb2ZmZXJzIGEgc291bmQgZm91bmRhdGlvbiBpbiB0aGUgY3VycmVudCBsaXRlcmF0dXJlIHRvIHN1YnN0YW50aWF0ZSBhIGNoaXJvcHJhY3RpYyBhcHByb2FjaCB0byBoZWFsdGggY2FyZS4uIApJIHdhcyBkb3duIHRvIDMwMCAzNTAgb2RkIGNoaXBzLiBUaGVuIEkgd29uIGEgZmV3IGhhbmRzIGhlcmUgYW5kIHRoZXJlLiBJIHRob3VnaHQgSSBwbGF5ZWQgd2VsbCBiZWNhdXNlIEkgd2FzIGFibGUgdG8gaW5jcmVhc2UgdGhlIHNtYWxsIHBvdHMgd2VsbCB3aGVuIEkgaGFkIGEgc3Ryb25nZXIgaGFuZC4gCldpbiBSaXZlciBDYXNpbm9KdW1wIG9mZiBJbnRlcnN0YXRlIDUgaW4gUmVkZGluZyB0byB2aXNpdCBSb2xsaW5nIEhpbGxzIENhc2lubyBhbmQgZXhwbG9yZSBhIG1lbnUgb2YgbW9yZSB0aGFuIDYwMCBnYW1lcyB0aGF0IGluY2x1ZGUgc2xvdHMsIGJpbmdvLCBwb2tlciwgYmxhY2tqYWNrIGFuZCBtb3JlLiBEaXNjb3ZlciBuZXcgdHdpc3RzIG9uIG9sZCBmYXZvcml0ZXMsIHN1Y2ggYXMgRG91YmxlIHVwIEJsYWNramFjayBhbmQgQ291bnQncyBLdXN0b21zIEJsYWNramFjayBhbmQgam9pbiB0aGUgUml2ZXIgY2x1YiB0byBhY2N1bXVsYXRlIHBvaW50cyByZWRlZW1hYmxlIHRvd2FyZCBjYXNpbm8gcHVyY2hhc2VzIG9yIHBsYXkuIFRoZXJlJ3Mgbm8gbmVlZCB0byBydXNoIG9mZiAgIFdpbiBSaXZlciBib2FzdHMgYSByZXNvcnQgd2l0aCBhIGhvdGVsLCBSViBwYXJrLCBzcGEsIGVudGVydGFpbm1lbnQgYW5kIGRpbmluZyBmb3IgYSByZWxheGluZyB2YWNhdGlvbiB3aXRoIG5vIG5lZWQgdG8gbGVhdmUuLiAKU21lbHQgaXJvbiBhbmQgY2FzdCBvciBmb3JnZSBpbnRvIGEgYmFyLiBMaW5lIHRoZSBiYXIgbm9ydGggc291dGggKG9yIHN0YW5kaW5nIHZlcnRpY2FsbHkgaWYgbmVhciB0aGUgcG9sZXMpIGluIHNpZGUgYSBraWxuLiBIZWF0IHRoZSBiYXIgdG8gaXQgY3VyaWUgcG9pbnQgKDc3MGMpIGFuZCBhbGxvdyBpdCB0byBjb29sIGluIHRoaXMgcG9zaXRpb24uIEFsdGVybmF0aXZlbHksIHN0cmlrZSB0aGUgYmFyIGEgbnVtYmVyIG9mIHRpbWVzIGluIHRoaXMgcG9zaXRpb24uIFRoZSBiYXIgd2lsbCBiZSBhIHdlYWsgbWFnbmV0IG5vdy4KSWNoIGhhdHRlIHp1c2FtbWVuIG1pdCBtZWluZXIgRnJldW5kaW4gZWluIGtsZWluZXMgQXBhcnRtZW50IGltIFNjaGFuemVudmllcnRlbCB1bmQgaGFiZW4gZXMgdW5kIGRpZSBmbmYgVGFnZSB3aXJrbGljaCBndXQgZ2VoZW4gbGFzc2VuLiBTbyBzZWhyIGljaCBkYXMgUnVocmdlYmlldCBqYSBhdWNoIGxpZWJlLCBhYmVyIEhhbWJ1cmcgaGF0IHNjaG9uIHNlaW5lIGVpZ2VuZSBRdWFsaXR0LCBkaWNoIG1pY2ggaW1tZXIgd2llZGVyIGluIGlocmVuIEJhbm4gemllaHQuCkMgYXVzc2kgdW4gcmVtZGUsIGJpZW4gc3IuIERpb3Njb3JpZGUgbCBzb3VzIHNlcyBkZXV4IGZvcm1lcywgZnJhY2hlIGV0IHNjaGUuIExlcyBmcnVpdHMgZnJhaXMsIGFpZ3JlcyBldCBhc3RyaW5nZW50cywgc2UgZGVzdGluZW50IHBsdXR0ICBlbmRpZ3VlciBsZXMgZmx1eCBkZSB2ZW50cmUgZXQgY2V1eCBtZW5zdHJ1ZWxzLCBhaW5zaSBxdWUgbGVzIGhtb3Jyb2RlcywgbWFpcywgcHJ2aWVudCBEaW9zY29yaWRlLCBpbHMgY2F1c2VudCB1bmUgZG91bGV1ciBkZSB0dGUgZXQgZW5pdnJlbnQgcXVhbmQgb24gZW4gbWFuZ2UgZW4gdHJvcCBncmFuZGUgYWJvbmRhbmNlICg3KS4gClBsYXkgVGV4YXMgSG9sZCdFbSBQb2tlciB3aXRoIHlvdXIgZmFtaWx5IGFuZCBmcmllbmRzIGVpdGhlciBmb3IgcmVhbCBtb25leSBvciBmb3IgZnVuLiBTb21ldGltZXMgdGhleSB1c2UgYW50ZXMsIGJ1dCBtb3N0IGdhbWVzIGJlZ2luIHdpdGggdHdvIHBsYXllcnMgcG9zaXRpb25lZCBvbiB0aGUgbGVmdCBzaWRlIG9mIHRoZSBkZWFsZXIgcGxhY2luZyBvdXQgYSBwcmUgc2V0dGxlZCBtb25leSBzbyB0aGVuIHRoZXJlIGlzIGEgcHJpbWFyeSBmdW5kIG9yIGFtb3VudCB0byBnZXQgdGhpbmdzIHN0YXJ0ZWQuIApBY2NvcmRpbmcgdG8gQ29sb21iaWFuIFByZXNpZGVudCBKdWFuIE1hbnVlbCBTYW50b3MsIDQwIEZBUkMgbWVtYmVycyBoYXZlIGJlZW4ga2lsbGVkIHNpbmNlIHRoZSBwZWFjZSBhY2NvcmQgd2FzIHNpZ25lZCBpbnRvIGxhdyAgIHNpeCBpbiB0aGUgbm9ydGhlcm4gcmVnaW9uIG9mIEFudGlvcXVpYSBuZWFyIEl0dWFuZ28uIEluIGFkZGl0aW9uIHRvIHRoZSBkZWF0aHMsIGZvcm1lciBjb21iYXRhbnRzIGFyZSBvZnRlbiBvbiB0aGUgcmVjZWl2aW5nIGVuZCBvZiB0aHJlYXRzIGFuZCBoYXJhc3NtZW50IHRoYXQgamVvcGFyZGlzZSB0aGUgY2hhbmNlcyBvZiB0aGVtIHJlaW50ZWdyYXRpbmcgaW50byBjaXZpbCBzb2NpZXR5Li4gCg==|<---