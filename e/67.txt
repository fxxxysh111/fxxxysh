<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="MediaWiki 1.22.4" name="generator"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr ns-0 ns-subject page-Formal_vs_informal_words skin-vector action-view vector-animateLayout">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div id="mw-js-message" style="display:none;">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="en">
    <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
   </h1>
   <div id="bodyContent">
    <div id="siteSub">
     From Korean Wiki Project
    </div>
    <div id="contentSub">
    </div>
    <div class="mw-jump" id="jump-to-nav">
     Jump to:
     <a href="n">
      navigation
     </a>
     ,
     [link]
     
    </div>
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="en">
     <table style="margin:4px 10%; border:1px solid #000; background:#fe9900">
      <tr>
       <td style="padding:2px 0 2px .9em; text-align:center">
        [link]
        
       </td>
       <td style="padding:.25em .9em; width:100%; text-align:left">
        <div class="notice metadata plainlinks" id="stub">
         <b>
          This page is either a stub or incomplete. You can help the Korean Wiki Project by
          <a class="external text" href="/wiki/index.php?title=Formal_vs_informal_words&amp;action=edit" rel="nofollow">
           expanding it
          </a>
          .
          <br/>
         </b>
         <p>
          지금 이 사이트를 보시는 여러분들이 수정을 하거나 내용을 추가해 이곳에 있는 설명과 예들을 더욱 완벽하게 해 주심으로써 코리안위키프로젝트를
          [link]
          
          .
         </p>
        </div>
       </td>
      </tr>
     </table>
     <p>
      [link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
     </p>
     <table class="metadata plainlinks ambox ambox-notice" style="">
      <tr>
       <td class="mbox-image">
        <div style="width: 52px;">
         [link]
         
        </div>
       </td>
       <td class="mbox-text" style="">
        These examples need to be organized -
        [ahref]
        
        07:27, 4 April 2010 (UTC)
       </td>
      </tr>
     </table>
     <p>
      Words that are honorific cannot be used by yourself and their meanings are interpreted (if no other context is given) to be concerning the listener. and most of formal words is composed of 한자.  For example, 따님 would be translated as "your daughter" where 딸 would just be "my daughter."
     </p>
     <table class="wikitable sortable">
      <tr>
       <th>
        Formal
       </th>
       <th>
        Informal
       </th>
       <th>
        Definition
       </th>
      </tr>
      <tr>
       <td>
        사용하다
       </td>
       <td>
        쓰다
       </td>
       <td>
        to use
       </td>
      </tr>
      <tr>
       <td>
        진지 (honorific)
       </td>
       <td>
        밥
       </td>
       <td>
        meal, food
       </td>
      </tr>
      <tr>
       <td>
        완료하다
       </td>
       <td>
        끝내다
       </td>
       <td>
        to complete, to finish
       </td>
      </tr>
      <tr>
       <td>
        전송하다
       </td>
       <td>
        보내다
       </td>
       <td>
        send
       </td>
      </tr>
      <tr>
       <td>
        아버님 (honorific)/아버지
       </td>
       <td>
        아빠
       </td>
       <td>
        father/dad
       </td>
      </tr>
      <tr>
       <td>
        어머님/어머니
       </td>
       <td>
        엄마
       </td>
       <td>
        mother/mom
       </td>
      </tr>
      <tr>
       <td>
        따님 (honorific)
       </td>
       <td>
        딸
       </td>
       <td>
        daughter
       </td>
      </tr>
      <tr>
       <td>
        아드님 (honorific)
       </td>
       <td>
        아들
       </td>
       <td>
        son
       </td>
      </tr>
      <tr>
       <td>
        댁 (honorific)
       </td>
       <td>
        집
       </td>
       <td>
        house
       </td>
      </tr>
      <tr>
       <td>
        성함 (honorific)
       </td>
       <td>
        이름
       </td>
       <td>
        name
       </td>
      </tr>
      <tr>
       <td>
        연세 (honorific)
       </td>
       <td>
        나이
       </td>
       <td>
        age
       </td>
      </tr>
      <tr>
       <td>
        주무시다 (honorific)
       </td>
       <td>
        자다
       </td>
       <td>
        to sleep
       </td>
      </tr>
      <tr>
       <td>
        계시다 (honorific)
       </td>
       <td>
        있다
       </td>
       <td>
        to exist, to stay
       </td>
      </tr>
      <tr>
       <td>
        잡수시다 (honorific)
       </td>
       <td>
        먹다
       </td>
       <td>
        to eat
       </td>
      </tr>
      <tr>
       <td>
        드시다 (honorific)
       </td>
       <td>
        먹다 or 마시다
       </td>
       <td>
        to eat or drink
       </td>
      </tr>
      <tr>
       <td>
        편찮으시다 (honorific)
       </td>
       <td>
        아프다
       </td>
       <td>
        to be hurt or ill
       </td>
      </tr>
      <tr>
       <td>
        돌아가시다 (honorific)
       </td>
       <td>
        죽다
       </td>
       <td>
        to die/pass away
       </td>
      </tr>
      <tr>
       <td>
        아내
       </td>
       <td>
        부인(1st wife) / 첩 (2rd or later wife)
       </td>
       <td>
        wife
       </td>
      </tr>
      <tr>
       <td>
        감사합니다.
       </td>
       <td>
        고맙습니다.
       </td>
       <td>
        Thank you
       </td>
      </tr>
      <tr>
       <td>
        무료
       </td>
       <td>
        공짜
       </td>
       <td>
        Free
       </td>
      </tr>
      <tr>
       <td>
        생신 (honorific)
       </td>
       <td>
        생일
       </td>
       <td>
        Birthday
       </td>
      </tr>
      <tr>
       <td>
        여쭈다 (honorific)
       </td>
       <td>
        묻다 or 닫다
       </td>
       <td>
        to ask
       </td>
      </tr>
      <tr>
       <td>
        드리다 (honorific)
       </td>
       <td>
        주다
       </td>
       <td>
        to give
       </td>
      </tr>
      <tr>
       <td>
        말씀하시다(honorific)
       </td>
       <td>
        말하다
       </td>
       <td>
        to speak
       </td>
      </tr>
      <tr>
       <td>
        말씀(honorific)
       </td>
       <td>
        말
       </td>
       <td>
        speech, utterance
       </td>
      </tr>
      <tr>
       <td>
        살아계시다(honorific)
       </td>
       <td>
        살다
       </td>
       <td>
        to live
       </td>
      </tr>
      <tr>
       <td>
        뵙다(honorific)
       </td>
       <td>
        보다
       </td>
       <td>
        to see
       </td>
      </tr>
     </table>
    </div>
    <div class="printfooter">
     Retrieved from "
     <a href="/wiki/index.php?title=Formal_vs_informal_words&amp;oldid=28523">
      http://www.koreanwikiproject.com/wiki/index.php?title=Formal_vs_informal_words&amp;oldid=28523
     </a>
     "
    </div>
    <div class="catlinks" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [link]
      
      :
      <ul>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <ul>
      <li id="pt-login">
       [link]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [ahref]
         
        </span>
       </li>
       <li id="ca-talk">
        <span>
         [link]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="mw-vector-current-variant">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <h3 id="p-variants-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-view">
        <span>
         [link]<li>[search]</li>[search]<li>[link]</li>[link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
        </span>
       </li>
       <li id="ca-viewsource">
        <span>
         [link]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][ahref][link]
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="menu">
       <ul>
       </ul>
      </div>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <form action="/wiki/index.php" id="searchform">
       <div id="simpleSearch">
        <button id="searchButton" name="button" title="Search the pages for this text" type="submit">
        </button>
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [link]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Site-news">
        [link]
        
       </li>
       <li id="n-mainpage-description">
        <a accesskey="z" href="/wiki/Main_Page" title="Visit the main page [z]">
         Main page
        </a>
       </li>
       <li id="n-Dialects">
        [link]
        
       </li>
       <li id="n-Learning-Hangeul">
        <a href="/wiki/Learn_hangeul">
         Learning Hangeul
        </a>
       </li>
       <li id="n-Categories">
        [ahref]
        
       </li>
       <li id="n-Expressions">
        [ahref]
        
       </li>
       <li id="n-Grammar">
        [ahref]
        
       </li>
       <li id="n-Hanja">
        <a href="/wiki/Hanja">
         Hanja
        </a>
       </li>
       <li id="n-Idioms">
        [ahref]
        
       </li>
       <li id="n-Proverbs">
        [ahref]
        
       </li>
       <li id="n-Slang">
        [link]
        
       </li>
       <li id="n-Survival-Korean">
        [link]
        
       </li>
       <li id="n-TTMIK-Lessons">
        [ahref]
        
       </li>
       <li id="n-Vocabulary">
        <a href="/wiki/Category:Vocabulary">
         Vocabulary
        </a>
       </li>
       <li id="n-Quizzes">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Miscellaneous-label" class="portal" id="p-Miscellaneous" role="navigation">
     <h3 id="p-Miscellaneous-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Articles">
        [ahref]
        
       </li>
       <li id="n-Hangeul-Assistant">
        [ahref]
        
       </li>
       <li id="n-K-Drama-locations">
        <a href="/wiki/Category:Drama_and_movie_locations">
         K Drama locations
        </a>
       </li>
       <li id="n-Media">
        [link]
        
       </li>
       <li id="n-randompage">
        [link]
        
       </li>
       <li id="n-recentchanges">
        [link]
        
       </li>
       <li id="n-Resources">
        [ahref]
        
       </li>
       <li id="n-Facebook-page">
        <a href="/koreanwikiproject" rel="nofollow">
         Facebook page
        </a>
       </li>
       <li id="n-Youtube-channel">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Help-label" class="portal" id="p-Help" role="navigation">
     <h3 id="p-Help-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Editing-help">
        [ahref]
        
       </li>
       <li id="n-Getting-Started">
        <a href="/wiki/Getting_Started">
         Getting Started
        </a>
       </li>
       <li id="n-FAQ">
        <a href="/wiki/FAQ">
         FAQ
        </a>
       </li>
       <li id="n-help">
        <a href="/wiki/Help:Contents" title="The place to find out">
         Help
        </a>
       </li>
       <li id="n-portal">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-Affiliate_site-label" class="portal" id="p-Affiliate_site" role="navigation">
     <h3 id="p-Affiliate_site-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-Talk-to-me-in-Korean">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        <a accesskey="j" href="/wiki/Special:WhatLinksHere/Formal_vs_informal_words" title="A list of all wiki pages that link here [j]">
         What links here
        </a>
       </li>
       <li id="t-recentchangeslinked">
        [link]
        
       </li>
       <li id="t-specialpages">
        [link]
        
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
       <li id="t-permalink">
        [ahref]
        
       </li>
       <li id="t-info">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     This page was last modified on 18 May 2013, at 04:59.
    </li>
    <li id="footer-info-viewcount">
     This page has been accessed 39,367 times.
    </li>
    <li id="footer-info-copyright">
     Content is available under
     [ahref]
     
     unless otherwise noted.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     <a href="/wiki/Korean_Wiki_Project:Privacy_policy" title="Korean Wiki Project:Privacy policy">
      Privacy policy
     </a>
    </li>
    <li id="footer-places-about">
     <a href="/wiki/Korean_Wiki_Project:About" title="Korean Wiki Project:About">
      About Korean Wiki Project
     </a>
    </li>
    <li id="footer-places-disclaimer">
     [link]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear:both">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0068
  </b>
 </body>
</html>
