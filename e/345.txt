<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.33.0-wmf.6" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-동양원부인 rootpage-동양원부인 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
    <div id="mw-dismissablenotice-anonplace">
    </div>
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [link]
    
    [ahref]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <table class="infobox" style="width:25em;">
       <tbody>
        <tr>
         <th colspan="2" style="background:#723e64; color:#FFD700">
          <div style="position:relative; width:100%; height:50px; display:table; background:#723e64;">
           <div style="position:absolute; bottom:0; right:0;">
           </div>
           <span style="position:relative; width:100%; display:table-cell; vertical-align:middle; text-align:center;">
            동양원부인[search][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]
           </span>
          </div>
         </th>
        </tr>
        <tr>
         <td colspan="2" style="text-align: center; vertical-align:middle; background: #723e64; color:#FFD700;">
          <b>
           지위
          </b>
         </td>
        </tr>
        <tr>
         <td colspan="2" style="text-align: center; vertical-align:middle; background: #cbe;">
          <b>
           부인
          </b>
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           전임자
          </span>
         </th>
         <td>
          [ahref]
          
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           후임자 [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref]
          </span>
         </th>
         <td>
          [ahref]
          
         </td>
        </tr>
        <tr>
         <td colspan="2" style="text-align: center; vertical-align:middle; background: #723e64; color:#FFD700;">
          <b>
           신상정보
          </b>
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           출생지 <li>[link]</li>[search]<li>[ahref]</li><li>[link]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </span>
         </th>
         <td>
          황해북도 평산
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           사망지 [link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li><li>[search]</li>[link]
          </span>
         </th>
         <td>
          [ahref]
          
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           부친
          </span>
         </th>
         <td>
          [link]
          
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           배우자 [link][search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
         </th>
         <td>
          [link]
          
         </td>
        </tr>
        <tr>
         <th style="text-align: left;">
          <span class="nowrap">
           자녀
          </span>
         </th>
         <td>
          [ahref]
          
          ,
          [ahref]
          
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       <li>[link]</li><li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref][link]<li>[ahref]</li>
      </p>
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="ko">
        <h2>
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
        <span class="toctogglespan">
         <label class="toctogglelabel" for="toctogglecheckbox">
         </label>
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         [link]
         
        </li>
        <li class="toclevel-1 tocsection-2">
         [link]
         
        </li>
        <li class="toclevel-1 tocsection-3">
         [link]
         
        </li>
        <li class="toclevel-1 tocsection-4">
         [ahref]
         
        </li>
       </ul>
      </div>
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <p>
       [ahref]
       
       은
       [ahref]
       
       이다
       <sup class="reference" id="cite_ref-1">
        <a href="1">
         [1]
        </a>
       </sup>
       . 황해도 평주(현재의
       [link]
       
       [link]
       
       ) 출신으로, 아버지는 무장으로 태조를 도와 고려 건국에 큰 공을 세운 삼중대광
       [ahref]
       
       이다
       <sup class="reference" id="cite_ref-2">
        [ahref]
        
       </sup>
       .
      </p>
      <p>
       <li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[search]</li>
      </p>
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="thumb tright">
       <div class="thumbinner" style="width:152px;">
        [link]
        
        <div class="thumbcaption">
         <div class="magnify">
          [ahref]
          
         </div>
         남편
         [ahref]
         
        </div>
       </div>
      </div>
      <ul>
       <li>
        아버지 :
        [ahref]
        
        (庾黔弼, ? ~941)
       </li>
       <li>
        어머니 : ?
        <ul>
         <li>
          남매 :
          [ahref]
          
          (庾兢)
         </li>
         <li>
          남매 :
          [link]
          
          (庾官儒)
         </li>
         <li>
          남매 :
          [ahref]
          
          (庾慶)
         </li>
         <li>
          <b>
           남편
          </b>
          : 제1대
          [link]
          
          (太祖, 877~943, 재위: 918~943)
          <ul>
           <li>
            장남 :
            [link]
            
            의(孝穆太子 義, 생몰년 미상)
           </li>
           <li>
            차남 :
            [ahref]
            
            (孝隱太子, 생몰년 미상) 이름 미상, 동양군(東陽君)으로도 불림
            <sup class="reference" id="cite_ref-he_4-1">
             [ahref]
             
            </sup>
            .
           </li>
          </ul>
         </li>
        </ul>
       </li>
      </ul>
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="mw-references-wrap">
       <ol class="references">
        <li id="cite_note-1">
         <span class="mw-cite-backlink">
          [ahref]
          
         </span>
         <span class="reference-text">
          [ahref]
          
          <sup class="정리_필요 noprint" style="white-space:nowrap;">
           [
           [ahref]
           
           (
           [link]
           
           )]
          </sup>
         </span>
        </li>
        <li id="cite_note-2">
         <span class="mw-cite-backlink">
          [link]
          
         </span>
         <span class="reference-text">
          [link]
          
         </span>
        </li>
        <li id="cite_note-3">
         <span class="mw-cite-backlink">
          <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
         </span>
         <span class="reference-text">
          《고려사》권90〈열전〉권3 - 효목태자[search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li>[link][link]<li>[ahref]</li><li>[link]</li><li>[link]</li>
         </span>
        </li>
        <li id="cite_note-he-4">
         <span class="mw-cite-backlink">
          <li>[ahref]</li><li>[link]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link]<li>[ahref]</li>
         </span>
         <span class="reference-text">
          《고려사》권90〈열전〉권3 - 효은태자
         </span>
        </li>
       </ol>
      </div>
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <ul>
       <li>
        [ahref]
        
       </li>
      </ul>
      <div aria-labelledby="고려의_왕후와_왕비" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          <th class="navbox-title" colspan="2" scope="col" style="background:pink;">
           <div class="plainlinks hlist navbar mini">
            <ul>
             <li class="nv-view">
              [ahref]
              
             </li>
             <li class="nv-talk">
              [ahref]
              
             </li>
             <li class="nv-edit">
              [ahref]
              
             </li>
            </ul>
           </div>
           <div id="고려의_왕후와_왕비" style="font-size:114%;margin:0 4em">
            [ahref]
            
           </div>
          </th>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background:#FFE6E6; color:black;">
           3대조
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;background-color: transparent">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               추존대왕
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               추존대왕
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               추존대왕
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background:#FFE6E6; color:black;">
           왕후
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;background-color: transparent">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  현비 김씨
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  <a href="/wiki/%ED%97%8C%EC%95%A0%EC%99%95%ED%9B%84" title="헌애왕후">
                   헌애왕태후 황보씨
                  </a>
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               추존대왕
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               추존대왕
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  귀비 유씨
                 </li>
                 <li>
                  궁인 한씨
                 </li>
                 <li>
                  궁인 이씨
                 </li>
                 <li>
                  궁인 박씨
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  궁인 이씨
                 </li>
                 <li>
                  궁인 유씨
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  <a href="/wiki/%EC%9A%A9%EC%A0%88%EB%8D%95%EB%B9%84" title="용절덕비">
                   용절덕비 김씨
                  </a>
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  <a href="/wiki/%EC%84%A0%ED%9D%AC%EC%99%95%ED%9B%84" title="선희왕후">
                   선희왕태후 김씨
                  </a>
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               <a href="/wiki/%EA%B3%A0%EB%A0%A4_%EC%98%88%EC%A2%85" title="고려 예종">
                예종
               </a>
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  <a href="/wiki/%EC%84%A0%ED%8F%89%EC%99%95%ED%9B%84" title="선평왕후">
                   선평왕후 김씨
                  </a>
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background:#FFE6E6; color:black;">
           왕비
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;background-color: transparent">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  <a href="/wiki/%ED%98%9C%EB%B9%84_%EC%9D%B4%EC%94%A8" title="혜비 이씨">
                   혜비 이씨
                  </a>
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                 <li>
                  [ahref]
                  
                 </li>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;background:#FFE6E6; color:black;">
           추존왕비
           <br>
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
           </br>
           (비정통)
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px;background-color: transparent">
           <div style="padding:0em 0.25em">
           </div>
           <table class="nowraplinks navbox-subgroup" style="border-spacing:0">
            <tbody>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [link]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [ahref]
               
              </th>
              <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
             <tr>
              <th class="navbox-group" scope="row" style="width:1%;width:7em;">
               [link]
               
              </th>
              <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
               <div style="padding:0em 0.25em">
                <ul>
                 <li>
                  [ahref]
                  
                 </li>
                </ul>
               </div>
              </td>
             </tr>
            </tbody>
           </table>
           <div>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <table class="notice metadata plainlinks stub" style="clear: both; font-size: smaller;">
       <tbody>
        <tr>
         <td style="width: 40px;">
          [link]
          
         </td>
         <td>
          이 글은 한국 사람에 관한
          [ahref]
          
          입니다. 서로의 지식을 모아 알차게
          [ahref]
          
          갑시다.
         </td>
        </tr>
        <tr>
         <td style="width: 40px;">
          [ahref]
          
         </td>
         <td>
          이 글은 한국사에 관한
          <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%ED%86%A0%EB%A7%89%EA%B8%80" title="위키백과:토막글">
           토막글
          </a>
          입니다. 서로의 지식을 모아 알차게
          [link]
          
          갑시다.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [link]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [ahref]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [search]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      숨은 분류:
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [ahref]
       
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EA%B3%84%EC%A0%95%EB%A7%8C%EB%93%A4%EA%B8%B0&amp;returnto=%EB%8F%99%EC%96%91%EC%9B%90%EB%B6%80%EC%9D%B8" title="계정을 만들고 로그인하는 것이 좋습니다; 하지만, 필수는 아닙니다">
        계정 만들기
       </a>
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link][search]<li>[search]</li>[search][link]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </span>
       </li>
       <li id="ca-talk">
        <span>
         <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         [link]
         
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li><li>[link]</li>[search][ahref][ahref][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [ahref]
        
       </li>
       <li id="n-portal">
        [link]
        
       </li>
       <li id="n-currentevents">
        [ahref]
        
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-index">
        [link]
        
       </li>
       <li id="n-randompage">
        [link]
        
       </li>
       <li id="n-help">
        [link]
        
       </li>
       <li id="n-sitesupport">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        <a accesskey="j" href="/wiki/%ED%8A%B9%EC%88%98:%EA%B0%80%EB%A6%AC%ED%82%A4%EB%8A%94%EB%AC%B8%EC%84%9C/%EB%8F%99%EC%96%91%EC%9B%90%EB%B6%80%EC%9D%B8" title="여기를 가리키는 모든 위키 문서의 목록 [j]">
         여기를 가리키는 문서
        </a>
       </li>
       <li id="t-recentchangeslinked">
        [link]
        
       </li>
       <li id="t-upload">
        [link]
        
       </li>
       <li id="t-specialpages">
        [link]
        
       </li>
       <li id="t-permalink">
        [link]
        
       </li>
       <li id="t-info">
        [ahref]
        
       </li>
       <li id="t-wikibase">
        [link]
        
       </li>
       <li id="t-cite">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [link]
        
       </li>
       <li id="coll-download-as-rdf2latex">
        [ahref]
        
       </li>
       <li id="t-print">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-add wb-langlinks-link">
        <li>[search]</li>[link]<li>[ahref]</li>[search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 11월 14일 (수) 11:18에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [link]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     [ahref]
     
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [link]
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [link]
     
    </li>
    <li id="footer-places-about">
     [link]
     
    </li>
    <li id="footer-places-disclaimer">
     [link]
     
    </li>
    <li id="footer-places-developers">
     [link]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [link]
     
    </li>
    <li id="footer-poweredbyico">
     [ahref]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0348
  </b>
 </body>
</html>
