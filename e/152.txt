--->|WG1pc3N4YW5kcmlzdHggdQpEb2VzIHRoYXQgbWVhbiB0aGF0IHRoZXNlIHNldHMgYXJlIG9ubHkgZ29vZCBmb3IgZGlzcGxheT8gTm8sIHRoZXNlIGNoaXBzIGFyZSBncmVhdCBmb3IgcGxheWluZyBhIGZyaWVuZGx5IGdhbWUgYXMgd2VsbC4gVGhleSBhcmUgcXVpdGUgZHVyYWJsZSBhbmQgY2FuIGJlIGVtcGxveWVkIGZvciBnYW1lIHBsYXkgdGltZSBhbmQgdGltZSBhZ2Fpbi4gQW5kIHRoZXkgd2lsbCBsb29rIHRydWx5IGFtYXppbmcgZWFjaCBhbmQgZXZlcnkgdGltZSB0aGV5IGFyZSBicm91Z2h0IG91dCBvZiBzdG9yYWdlIGZvciBhIGdhbWluZyBzZXNzaW9uLiBSZWFsbHksIHlvdSBjYW5ub3QgYmVhdCB0aGUgdmFsdWUgb2YgcHVyY2hhc2luZyB0aGUgMTAwIEphY2twb3QgQ2FzaW5vIENsYXkgUG9rZXIgQ2hpcCBTZXQuIFRoZSBzcGVjaWZpYyBkeW5hbWljcyBvZiB0aGUgc2V0IGFyZSBkZWZpbml0ZWx5IHdvcnRoIGV4cGxvcmluZy4KU2FyY2FzbVNsaWRlICAxIHBvaW50ICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KSW4gdGhpcyB2YXJpYW50IHRoZXJlIGFyZSBubyBzaGFyZWQgICBvciBjb21tdW5pdHkgICBjYXJkcyBkZWFsdC4pIChGdWxsIEFuc3dlcikuIAoiQSBtYW4gd2hvIGhhZCBiZWVuIHBhcnRpY2lwYXRpbmcgaW4gYSBwaXN0b2wgY29tcGV0aXRpb24gaGFkIGxvc3QgY29udHJvbCBvZiBoaXMgZmlyZWFybSBhbmQgYWNjaWRlbnRhbGx5IGZpcmVkIGEgc2hvdCBpbnRvIGhpcyB0b3JzbywiIGFuIFJDTVAgc3RhdGVtZW50IHNhaWQuICJXaXRuZXNzZXMgYWRtaW5pc3RlcmVkIGZpcnN0IGFpZCBpbW1lZGlhdGVseSBhbmQgdGhlIHZpY3RpbSB3YXMgdHJhbnNwb3J0ZWQgdG8gUm95YWwgSW5sYW5kIEhvc3BpdGFsIGJ5IEJDIEFtYnVsYW5jZS4KRnJldWRzY2hpbGQgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KIkl0IGlzIGEgbGF0ZSBuaWdodCB2ZW51ZSwiIHNhaWQgSmFyZWQgQWRraW5zIG9mIEJsdWViaXJkLCB0aGUgUGhvZW5peHZpbGxlIGRpc3RpbGxlcnkgd2hvc2Ugc3Vid2F5IHRpbGVkIHNwYWNlIGFuY2hvcnMgdGhlIGNlbnRlciBvZiB0aGUgc3BlY3RhY3VsYXJseSByZW5vdmF0ZWQgYmVhdXggYXJ0cyBidWlsZGluZyB0aGF0IG9uY2UgaG91c2VkIGEgbGFuZG1hcmsgY29tbW9kaXRpZXMgZXhjaGFuZ2UuIE5vdywgaGUganVzdCBoYXMgdG8gY29udmluY2UgbW9yZSBjdXN0b21lcnMsIHdobyB3aWxsIGluIHR1cm4gY29udmluY2UgbW9yZSB2ZW5kb3JzIGl0J3Mgd29ydGggc3RheWluZyBvcGVuIGxhdGUgdG8gc2VydmUgdGhlbS4KRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSB0byBwcm92aWRlIHBoeXRvc2FuaXRhcnkgY2VydGlmaWNhdGVzLiAKRnJvbSB3aGF0IEkndmUgc2VlbiwgdGhhdCdzIG5vdCB0cnVlLiBJIGNhbid0IHBvaW50IG91dCBhbnkgYmxhY2sgcmVwdWJsaWNhbnMgbGlrZSB0aGF0IGF0bSwgYnV0IEkgYWxzbyBkb24ndCBqdXN0IGFzc3VtZSB0aGV5IGRvbid0IGV4aXN0LiAKVHJhbnF1aWxpemVycyBhcmVuJ3QgcmVhZGlseSBhY2Nlc3NpYmxlIG9yIHByYWN0aWNhbCBpbiB0aGlzIHNjZW5hcmlvLiBUaGV5IG1ldGFib2xpemUgZGlmZmVyZW50bHkgZm9yIGVhY2ggYW5pbWFsIGFuZCB5b3UgaGF2ZSB0byB1c2UgZGlmZmVyZW50IG1lZGljaW5lcyBmb3IgZWFjaCBnZW51cyBvZiBhbmltYWwuIFBsYWNlbWVudCBpcyBjcml0aWNhbGx5IGltcG9ydGFudCwgdG9vLiAKTG9va3MgbGlrZSBzb21lb25lJ3Mgc2lwcGluJyB1cCB0b28gbXVjaCBvZiBTdW1taXQncyBLb29sIEFpZC4gCkJlY2F1c2Ugb2YgYXJjYW5lIG1lY2hhbmljcyB0aGF0IGFyZSBub3QgZXhwbGFpbmVkIGFueXdoZXJlLCBjb250cm9sbGluZyBjcmVlcCBhZ2dybyBmb3IgZWFzaWVyIGRlbmllcy9sYXN0IGhpdHMgaXMgb25lIG9mIHRoZSBoaWdoZXIgYmFycmllcnMgdG8gZW50cnkgaW4gdGhlIGdhbWUuIEkgd2FnZXIgdGhhdCB0aGUgdmFzdCBtYWpvcml0eSBvZiBwbGF5ZXJzIG9uIHRoaXMgc3VicmVkZGl0IHdvdWxkIHN0cnVnZ2xlIHRvIGV4cGxhaW4gdGhlbSBpbiB0aGVpciBlbnRpcmV0eS4KV2hlcmVhcyB0cmFkaXRpb25hbCByb2NraW5nIGNoYWlycyBjcmVhdGUgcm9ja2luZyBtb3Rpb24gaW4gYW4gYXJjLCBnbGlkZXJzIGNyZWF0ZSBnbGlkaW5nIG1vdGlvbiBieSB1c2luZyBhIGZvcndhcmQgYmFja3dhcmQgbW90aW9uLiAKUmVzdWx0czogU2xlZXAgY3VydGFpbG1lbnQgZGVjcmVhc2VkIHRoZSBwcm9wb3J0aW9uIG9mIHdlaWdodCBsb3N0IGFzIGZhdCBieSA1NSUgKDEuNCB2cy4gMC42IGtnIHdpdGggOC41IHZzLiA1LjUgaG91cnMgb2Ygc2xlZXAgb3Bwb3J0dW5pdHksIHJlc3BlY3RpdmVseTsgUCA9IDAuMDQzKSBhbmQgaW5jcmVhc2VkIHRoZSBsb3NzIG9mIGZhdCBmcmVlIGJvZHkgbWFzcyBieSA2MCUgKDEuNSB2cy4gMi40IGtnOyBQID0gMC4wMDIpLiBUaGlzIHdhcyBhY2NvbXBhbmllZCBieSBtYXJrZXJzIG9mIGVuaGFuY2VkIG5ldXJvZW5kb2NyaW5lIGFkYXB0YXRpb24gdG8gY2Fsb3JpYyByZXN0cmljdGlvbiwgaW5jcmVhc2VkIGh1bmdlciwgYW5kIGEgc2hpZnQgaW4gcmVsYXRpdmUgc3Vic3RyYXRlIHV0aWxpemF0aW9uIHRvd2FyZCBveGlkYXRpb24gb2YgbGVzcyBmYXQuCkRlZmlhbnRseSwgc2hlIHJldG9vayBoZXIgbWFpbiBmbG9vciBzZWF0LiAKVGhpcyBwaWVjZSB3YXMgd3JpdHRlbiBieSB0aGUgcGVvcGxlIHdobyBydW4gdGhlIENyYWNrZWQgU3RvcmUgdG8gdGVsbCB5b3UgYWJvdXQgcHJvZHVjdHMgdGhhdCBhcmUgYmVpbmcgc29sZCB0aGVyZS4KU28gc2FkIGFuZCBpdCBub3QgZmFpciwgcmVhbGx5LCBmb3IgdXMgdG8gZXhwZXJpZW5jZSBhbm90aGVyIGF2b2lkYWJsZSB0cmFnZWR5LiBXZSBoYXZlIHRvIGFja25vd2xlZGdlIHRoYXQgdGhlcmUgaXMgbm8gYmV0dGVyIHRpbWUgdG8gdGFsayBhYm91dCBndW4gY29udHJvbCwgc2hlIHNhaWQuIApIZSdzIGJlZW4gaG9ub3JlZCB3aXRoIHRocmVlIENsYXJpb24gYXdhcmRzIGZvciBoaXMgY292ZXJhZ2UgSW5kaWFuIGNoaWxkIHNsYXZlIGxhYm9yLCBhdmlhdGlvbiBzZWN1cml0eSBhbmQgdGhlIFVuYWJvbWJlciBjYXNlIGFuZCBhIGZpcnN0IHBsYWNlIG1lZGFsIGZvciBhbiB1bmRlcmNvdmVyIGludmVzdGlnYXRpb24gb2YgYWlycG9ydCBzZWN1cml0eSBhcyB3ZWxsIGFzIG51bWVyb3VzIEhlYWRsaW5lciBhd2FyZHMuLiAKQSBsIGZyYWlzLCBsYSBiZXJjZSBjb21tdW5lIHBldXQgcGFyZm9pcyBwcm92b3F1ZXIgZGVzIGlycml0YXRpb25zLCBkZXMgdnNpY3VsZXMgZG91bG91cmV1c2VzLCBkZXMgZGVybWl0ZXMgZGUgY29udGFjdCAoZGVybWF0aXRlIGRlcyBwcnMgcGFyIGV4ZW1wbGUpIGNoZXogbGVzIHBlcnNvbm5lcyBzZW5zaWJsZXMuIFRvdXMgbGVzIG1vdHMgcGFzc3MgZW4gZ3JhcyBzb250IGQgaWxzIHBlcm1ldHRlbnQgdW5lIG51YW5jZSBldCB2aXRlbnQgYXV0YW50IHF1ZSBmYWlyZSBzZSBwZXV0IGRlIGNyb2lzZXIgbGEgcm91dGUgZGUgcHJvcG9zIGV4dHJtaXN0ZXMsIGRvbm5hbnQgbCBxdWUgY2VsYSBzZSBwYXNzZSB0b3Vqb3VycyBhaW5zaSBjaGV6IHRvdXMgbGUgbW9uZGUuIApUbyBub3QgZ28gaW50byB0b28gbXVjaCBkZXRhaWwsIHdoZW4gYSBkcnVnIGlzIGNvbnN1bWVkLCBpdCBnZXRzIGFic29yYmVkIGJ5IHRoZSBib2R5ICh0aHJvdWdoIHRoZSBzdG9tYWNoIG9yIHRoZSBpbnRlc3RpbmVzLCBkZXBlbmRpbmcgb24gdGhlIG1lZCkgYW5kIHRoZW4gZWl0aGVyIGEpZG9lcyBpdHMgdGhpbmcgd2hlcmUgaXQgbmVlZHMgdG8gaW4gdGhlIGJvZHkgYW5kIHRoZW4gZ2V0cyBjaGFuZ2VkIGJ5IHRoZSBib2R5IGZvciBlbGltaW5hdGlvbiwgb3IgYilnZXRzIGNoYW5nZWQgYnkgdGhlIGJvZHkgZmlyc3QsIHRoZW4gZG9lcyBpdHMgdGhpbmcsIHRoZW4gZ2V0cyBlbGltaW5hdGVkLiBUaGVzZSBjaGFuZ2VzIGFyZSB0b28gY29tcGxpY2F0ZWQgZm9yIEVMSTUsIGFuZCB0aGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgY2hhbmdlIHR5cGVzLiAKV2VsbCB3aHkgc2hvdWxkbiBhIHJpc2t5IHBsYXlzdHlsZSBiZSByZXdhcmRlZD8gU291bmRzIGdvb2QgdG8gbWUuClR1cm5lZCBvZmYgbXkgcGhvbmUgYW5kIGRpZG50IHR1cm4gaXQgYmFjayBvbiB1bnRpbCBsYXRlIFNhdHVyZGF5IG5pZ2h0IHRvIGEgc2VyaW91cyBvZiBwYW5pY2tlZCB2b2ljZW1haWxzIGZyb20gdGhlIE1hbmFnZXIgYW5kIERpc3RyaWN0IE1hbmFnZXIuIERlbGV0ZWQgdGhlbSBhbGwgd2l0aG91dCBsaXN0ZW5pbmcgdG8gdGhlbSBhbmQgd2VudCBhYm91dCBteSBsaWZlLi4gCldpbmRvd3MgNyBtdXN0IGJlIGFjdGl2YXRlZCBpbiBvcmRlciB0byBiZSB1c2VkIGJleW9uZCAzMCBkYXlzLiAKU291bmRzIGxpa2UgeW91J3JlIGRvaW5nIGV2ZXJ5dGhpbmcgcmlnaHQsIHRoZXNlIGFyZSBhbGwgdGlwcyB0aGF0IEkgZ2l2ZSB0byBteSBjbGllbnRzLiBUaGUgc2lsayBwaWxsb3djYXNlIG9yIHNhdGluLCBvciBldmVuIHNhdGVlbi4gUHJvdGVpbiB0cmVhdG1lbnRzIG9uY2UgYSBtb250aCwgZGVlcCBtb2lzdHVyZSBhcyBvZnRlbiBhcyBvbmNlIGEgd2VlaywgYW5kIGEgZGFpbHkgbGVhdmUgSW4gcHJlZmVyYWJseSB3aXRoIFVWQS9VVkIgcHJvdGVjdGlvbi4gSWYgeW91ciBlbmRzIGFyZSBzcGxpdCwgdGhlcmUgaXMgbm8gYW1vdW50IG9mIHRyZWF0bWVudCB0aGF0IHdpbGwgdW4gc3BsaXQgdGhlbS4gVGhleSB3aWxsIGFsd2F5cyBiZSBzcGxpdCBhbmQgdGhleSB3aWxsIGFsd2F5cyBsb29rIGJhZCBhbmQgeW91ciBoYWlyIHdpbGwgYWx3YXlzIGxvb2sgdGhpbm5lciB0b3dhcmQgdGhlIGVuZHMgd2hlcmUgdGhleSBhcmUgc3BsaXQuIFRoYXQgaXMgd2h5IHlvdSBzaG91bGQgZ2V0IGEgcXVhcnRlciBvZiBhbiBpbmNoIHRvIGEgaGFsZiBhbiBpbmNoIGN1dCBldmVyeSB0aHJlZSBtb250aHMgYXQgbGVhc3QuIFRoYXQgd2F5IHlvdSBhcmUgZ3Jvd2luZyBtb3JlIGhhaXIgdGhhbiB5b3UgYXJlIGN1dHRpbmcsIHlvdSBhcmUgZ2V0dGluZyBsb25nZXIgd2l0aG91dCB0aGUgcmlzayBvZiBnZXR0aW5nIHRoaW4sIERlYWQsIHNwbGl0LCB1bnJlcGFpcmFibGUgZW5kcy4gVGhhdCBiZWluZyBzYWlkLCB5b3UgbWF5IGhhdmUgbW9yZSB0aGFuIGp1c3QgYSBoYWxmIGFuIGluY2ggdG8gY3V0IGlmIHlvdSB3YW50IHRvIGdldCBhIGNsZWFuZXIgc3RhcnQuIEkndmUgc2VlbiBzb21lIHBlb3BsZSB3aXRoIHVwIHRvIDYgaW5jaGVzIG9mIHRoaW4sIHN0cmFnZ2x5IGhhaXIsIGFuZCB0aGF0IHdpbGwgbm90IGdyb3csIGl0IHdpbGwgb25seSBjb250aW51ZSB0byBicmVhay4gU28geW91IG1pZ2h0IGhhdmUgdG8gY3V0IGEgZmV3IGluY2hlcyBidXQganVzdCBrZWVwIGEgZ29vZCBtYWludGVuYW5jZSBhbmQgc2VlIGEgaGFpcmRyZXNzZXIgZXZlcnkgdGhyZWUgbW9udGhzIGFuZCBmcm9tIGhlcmUgb24gb3V0IHlvdSBzaG91bGQgY29udGludWUgdG8gZ3JvdyBhbmQgbG9vayBmdWxsZXIgYW5kIGhlYWx0aHkuIFRoZXJlIGFyZSBzY2lzc29yIGhhcHB5IGhhaXJkcmVzc2Vycywgc28gbWFrZSBzdXJlIHRvIGFzayBmb3IgYSBjb25zdWx0YXRpb24gZmlyc3QsIGV4cHJlc3MgdGhhdCB5b3UndmUgaGFkIHRvbyBtdWNoIGhhaXIgY3V0IG9mZiBpbiB0aGUgcGFzdCBhbmQgeW91IHdvdWxkIGxpa2UgdG8gcHJvY2VlZCB3aXRoIGNhdXRpb24uIEdvb2QgbHVjay4KSXQgc2hvdWxkIG5ldmVyIGJlIGRpZmZpY3VsdCB0byBnZXQgaGVscCBmcm9tIHlvdXIgcHJvZmVzc29ycyBkdXJpbmcgYW55IHBhcnQgb2YgeW91ciBkZWdyZWUsIHRoZXJlIGFyZSBzbyBmZXcgcGVvcGxlIHRoYXQgdGFrZSBhZHZhbnRhZ2Ugb2Ygb2ZmaWNlIGhvdXJzIHRoYXQgeW91IHNob3VsZCBiZSBhYmxlIHRvIGhhdmUgYXMgbGl0dGxlIG9yIGFzIG11Y2ggY29udGFjdCB3aXRoIHlvdXIgcHJvZmVzc29yIGFzIHBvc3NpYmxlIHdpdGhpbiByZWFzb24uIFNwZWNpZmljYWxseSBmb3IgeW91ciBmcmVzaG1hbiBlbmdpbmVlcmluZyBwcm9ibGVtIHNvbHZpbmcgY2xhc3NlcyB0aGUgVEEgdG8gc3R1ZGVudCByYXRpbyBpcyB2ZXJ5IGZhdm9yYWJsZS4gCklmIHlvdSdyZSBiYWJ5IGRvZXNuJ3Qgd2FudCBpdCwgc2ltcGx5IG1pc3MgaXQgb3V0LiAKUGlwZXMsIHdpcmVzLCBkdWN0cyBhbmQgY2FibGVzIHRoYXQgYXJlIHVzZWQgaW4gY29ubmVjdGlvbiB3aXRoIG90aGVyIHN0cmF0YSBsb3RzIG9yIHBhc3MgdGhyb3VnaCBhIGNlaWxpbmcgb3Igd2FsbCB0aGF0IGZvcm1zIGEgYm91bmRhcnkgYmV0d2VlbiB0d28gc3RyYXRhIGxvdHMgb3IgYSBzdHJhdGEgbG90IGFuZCBjb21tb24gcHJvcGVydHksIGFyZSBkZWVtZWQgYnkgdGhlIFN0cmF0YSBQcm9wZXJ0eSBBY3QgdG8gYmUgY29tbW9uIHByb3BlcnR5LiAKQW55d2F5cywgSSBzdHJ1Z2dsZWQgdG8gdW5kZXJzdGFuZCB3aHkgSSB3YW50IG1vbm9nYW15IGFuZCBJIHRoaW5rIHlvdSByZWFsbHkgaGVscGVkIG1lIHVuZGVyc3RhbmQgd2h5LiBBcyBvZiBsYXRlLCBJJ20gYSBiaWcgZmFuIG9mIHN0b2ljaXNtIGFuZCBJIGhhdmUgc3RydWdnbGVkIGludGVybmFsbHkgd2l0aCBhbGlnbmluZyB3aGF0IEkga25vdyB0byBiZSB0cnVlIChodW1hbnMgd2VyZW4ndCB3aXJlZCB0byBiZSBtb25vZ2Ftb3VzKSBhbmQgd2hhdCBJIGZlZWwgKEkgc3Ryb25nbHkgdmFsdWUgZXhjbHVzaXZpdHkgcHJvYmFibHkgYmVjYXVzZSBvZiBteSBjaGlsZGhvb2QgaXNzdWVzLikgSSBmZWx0IGJhZCBiZWNhdXNlIGFsbW9zdCBldmVyeSBnb29nbGUgc2VhcmNoIGZvciBtb25vZ2FteSB3aWxsIGJyaW5nIHVwIGEgbG90IG9mIGFydGljbGVzIGFib3V0IGhvdyBtb25vZ2FteSBpcyBkdW1iLiAKVGhyZWUgZGVjYWRlcyBvZiB0YXggZ2l2ZWF3YXlzIHRvIHRoZSByaWNoZXN0IEFtZXJpY2FucyBhbmQgdGhlIGRlc3RydWN0aW9uIG9mIHRoZSBzb2NpYWwgc2FmZXR5IG5ldCBtZWFudCA4MCUgb2YgdXMgd2VyZSB3b3JzZSBvZmYgdGhhbiBpbiAxOTgwLiAKSSBhbSByZWFsbHkgY29uc2lkZXJpbmcgdXNpbmcgdGhpcyBzdHJhdGVneW9uIG15IG5leHQgcmVoYWIgYW5kIGhvbGQuIEkgaGF2ZSBsaWtlIDMgb3IgNCBDQyBjb21wYW5pZXMgY29uc3RhbnRseSBzZW5kaW5nIG1lIHRoZXNlIGNoZWNrcywgYW5kIDE4IG1vbnRocyBpcyBsb25nIGVub3VnaCwgZXZlbiB3aXRoIGEgY3VzaGlvbmZvciBhIHJlZmkgYWZ0ZXIgYSB5ZWFyIG9mIHNlYXNvbmluZyBhbmQgcGF5IHRob3NlIHN1Y2tlcnMgb2ZmLiBUaGUgY2FzaCBhZHZhbmNlcyB0eXBpY2FsbHkgY2FycnkgYSBsYXJnZSBmZWUgYW5kIHRoZXkgd29uJ3QgbGV0IHlvdSBkaXNidXJzZSAxMDAlIG9mIHRoZSBiYWxhbmNlLiAKVGhvdWdoLCBpZiB5b3UgZG9uIHRoaW5rIHRoZXkgZXZlciBoYXZlIGJsdWZmcyBpbiB0aGVpciByYW5nZSwgYmxvY2tpbmcgNTQgaXNuIGEgZ29vZCB0aGluZyBzaW5jZSB0aGF0IGp1c3QgbGVhdmVzIHRoZW0gd2l0aCBoaWdoZXIgYWNlcywgc28geW91IHNob3VsZCBzaGlmdCBBNSBhbmQgQTQgdG8gb3RoZXIgaGlnaGVyIGFjZXMuIEkgdGhpbmsgdGhleSBjb3VsZCBjb25jZWl2YWJseSBoYXZlIGJsdWZmcyBoZXJlIHRob3VnaCwgbGlrZSB0dXJuaW5nIGFueSB4MyBvciB4MiBpbnRvIGEgYmx1ZmYgd291bGQgYmUgcHJldHR5IGJhbGxlci4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnby4gClF1ZSBjb25zb21tZXogdm91cyBzYW5zIG1vZHJhdGlvbiA/Ckl0IGRpZG4gbWFrZSBhIGxvdCBvZiBzZW5zZSwgYnV0IGJlY2F1c2Ugb2YgbXkgcXVlc3Rpb24gSSBjb3VsZG4gZ2V0IGl0IG91dCBvZiBteSBoZWFkLiAKTW9vZHliaWdib290eTk0ICA4IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KSnVzdCB0ZWxsIHRoZW0gaXQgYXBwZWFycyBpdCdzIGp1c3Qgbm90IGEgZ29vZCBmaXQgZm9yIHRoZWlyIG5lZWRzLCBhbmQgbm93IHRoYXQgdGhleSd2ZSB0b2xkIHlvdSB0aGV5IGludGVuZCB0byBsZXQgY2hpbGRyZW4gcGxheSBpbiBhbiB1bmZpbmlzaGVkIGJhc2VtZW50LCB0aGF0IHlvdSBjYW4gYmUgbGlhYmxlIGZvciBhbnl0aGluZyB0aGF0IGhhcHBlbnMsIHNvIHlvdSBhcmUgZGVueWluZyB0aGVtLi4gCkEgd2hvcHBpbmcgJDM1MCB3YXMgbWluZSBmb3IgY2xvc2luZyBvbiBhIGhvdXNlLiAKTW9kZXJuIHdhcmZhcmUgaGFzIGVzdGltYXRlZCBhcm91bmQgMjQuMzcgZmFuIGJhc2UuIApQcmFjdGljZSBnb29kIGRlbnRhbCBoeWdpZW5lLiBCcnVzaCB5b3VyIHRlZXRoIHdlbGwgYW5kIGZsb3NzIGV2ZXJ5ZGF5LiBNYXNzYWdlIHlvdXIgZ3VtcyB0byBpbXByb3ZlIGNpcmN1bGF0aW9uLiBUaGUgaGVhbHRoaWVyIHlvdXIgdGVldGgsIHRoZSBlYXNpZXIgeW91J2xsIGJlIGFibGUgdG8gYWRqdXN0IHRvIGdldHRpbmcgYnJhY2VzLiBJZiB5b3UgaGF2ZSBndW0gb3IgZGVudGFsIGRpc2Vhc2UsIHlvdSBtYXkgbm90IGJlIGFibGUgdG8gZ2V0IGJyYWNlcyByaWdodCBhd2F5LgpDaGFzdGFpbiBpcyBhIFRJRkYgdHdvIHRpbWVyIHRoaXMgeWVhciwgYWxzbyBzdGFycmluZyBpbiBXb21hbiBXYWxrcyBBaGVhZCwgcGxheWluZyAxOXRoIGNlbnR1cnkgYXJ0aXN0IGFuZCBOYXRpdmUgcmlnaHRzIGFjdGl2aXN0IENhcm9saW5lIFdlbGRvbi4gClRoZSA2IGluY2ggbG9zcyBpcyBhbHNvIGd1YXJhbnRlZWQgdG8gc3RheSBvZmYgZm9yIGF0IGxlYXN0IDMwIGRheXMgc28geW91IGNhbiBiZSBjb25maWRlbnQgb2YgbG9va2luZyBncmVhdCBsb25nIGFmdGVyIGxlYXZpbmcgdGhlIHNwYS4gVGhpcyBtYXkgc291bmQgdG9vIGdvb2QgdG8gYmUgdHJ1ZSBidXQgd2l0aCBhdmVyYWdlIGxvc3NlcyBvZiAxMCAxNCBpbmNoZXMgZnJvbSBqdXN0IG9uZSB0cmVhdG1lbnQsIFNlcmVuaXR5IENvbnRvdXIgV3JhcCBDbGFzc2ljIGlzIHRoZSBpbmNoIGxvc3MgdHJlYXRtZW50IHlvdSBjYW4gdHJ1c3QuQnV0IENsYXNzaWMgZG9lc24ganVzdCBkZWxpdmVyIGV4Y2VwdGlvbmFsIGluY2ggbG9zczsgdGhlIHVuaXF1ZSBjbGF5IGZvcm11bGEgYW5kIHNwZWNpYWwgd3JhcHBpbmcgdGVjaG5pcXVlcyB0aGUgdGhlcmFwaXN0cyB1c2UsIGFsc28gdGlnaHRlbiBhbmQgdG9uZSB5b3VyIGJvZHkgd2hpbGUgZXhmb2xpYXRpbmcgYW5kIGNsZWFuc2luZyB0aGUgc2tpbiBzbyB5b3Ugd2lsbCBub3Qgb25seSBsb29rIGdyZWF0LCB5b3UgZmVlbCBmYWJ1bG91cyB0b28sIGFmdGVyIGp1c3Qgb25lIHRyZWF0bWVudC5TbyB3aGV0aGVyIHlvdSBsb29raW5nIHRvIGtpY2sgc3RhcnQgYSBzbGltbWluZyBwbGFuIG9yIHRhcmdldCBhIGZldyBzdHViYm9ybiBpbmNoZXMgeW91IGNhbiByZWx5IG9uIFNlcmVuaXR5IENvbnRvdXIgV3JhcCB0byBkZWxpdmVyIGluc3RhbnQgcmVzdWx0cyB0aGF0IHdpbGwga2VlcCBmcmllbmRzIGFuZCBmYW1pbHkgd29uZGVyaW5nIGhvdyB5b3UgZG8gaXQuCldpciBtY2h0ZW4gZWluZW4gVGVpbCB1bnNlcmVyIFplaXQgZXR3YSAzIGJpcyA2IE1vbmF0ZSBwcm8gSmFociBhdWYgTGEgUGFsbWEgc2Vpbi4gRXMgaXN0IHVuc2VyIFp3ZWl0ICB1bmQgVXJsYXVicyBXb2huc2l0eiAod2lyIHNpbmQga2VpbmUgZ2VmbGx0IGRpZSBJZGVlLCBkYXMgUHJvamVrdCBnZW1laW5zYW0gdW5kIGdlbm9zc2Vuc2NoYWZ0c2hubGljaCB6dSBmaW5hbnppZXJlbi4gCkNoYW5jZXMgYXJlLCBpZiB5b3UgZ2V0IGEgcm91bmQgZm9sZGluZyBjYXJkIHRhYmxlIHRoYXQncyBwb3J0YWJsZSwgaXQncyBwcm9iYWJseSBnb2luZyB0byBiZSBwbGFzdGljIHJlc2luICAgYnV0IHRoYXQgc2hvdWxkbid0IGRpc3N1YWRlIHlvdS4gVGhlc2UgYXJlIHZlcnkgcmVhc29uYWJseSBwcmljZWQgYW5kIHByZXR0eSBzdHVyZHksIHRvby4gCkltIG5vdCBjYWxsaW5nIGZvciBhbiBpbnZhc2lvbi4gSW0gY2FsbGluZyBub3J0aCBrb3JlYSBhIHNoaXR0eSwgbm9uIGNvbW11bmlzdCBwcmlzb24gc3RhdGUgZGljdGF0b3JzaGlwIHBlb3BsZSBzaG91bGQgbm90IGxpa2UvZGVmZW5kLgpZZXQgaXQgYWxzbyByZXRhaW5lZCBhbiB1bmZvcnR1bmF0ZSBsb29waG9sZSwgZG9pbmcgYXdheSB3aXRoIGludm9sdW50YXJ5IHNlcnZpdHVkZSAiZXhjZXB0IGFzIGEgcHVuaXNobWVudCBmb3IgY3JpbWUgd2hlcmVvZiB0aGUgcGFydHkgc2hhbGwgaGF2ZSBiZWVuIGR1bHkgY29udmljdGVkLiIgVGhlIGNsYXVzZSBoYXMgbWFkZSBpdCBwb3NzaWJsZSB0byBhcnJlc3QgQW1lcmljYW4gY2l0aXplbnMgKHByaW1hcmlseSBibGFjayBBbWVyaWNhbiBjaXRpemVucykgb24gZmxpbXN5IGNoYXJnZXMsIGZpbmUgdGhlbSBhdCByYXRlcyB0aGV5IGNhbid0IHBheSwgamFpbCB0aGVtLCBhYnVzZSB0aGVtLCBhbmQgc3RlYWwgdGhlaXIgbGFib3IuIER1VmVybmF5J3MgZmlsbSB0cmFja3MgdGhlc2UgcHJhY3RpY2VzIGZyb20gdGhlaXIgb3JpZ2lucyB0byB0aGUgcHJlc2VudCBkYXkuIApJIG5ldmVyIGluIG15IDQ4IHllYXJzIG9uIHRoaXMgZWFydGgsIG1ldCBhbnlvbmUsIGxldCBhbG9uZSBhIHdob2xlIGZhbWlseSwgd2hvIHRoaW5rcyB0aGlzIHdheS4gSXQgbWFrZXMgcGVyZmVjdCBzZW5zZSB0byB0aGVtLCBidXQgaXQgZHJpdmVzIG1lIHVwIHRoZSB3YWxsLCBzbyBtdWNoIHNvIHRoYXQgb2NjYXNpb25hbGx5IEkgZm9yZ2V0IGFuZCBzbmFwIGF0IG15IHdpZmUgZm9yIGJlaW5nIHdoYXQgSSBjb25zaWRlciBydWRlLCBtb3N0bHkgdG8gbWUuIFRoZW4gc2hlIGdldHMgbWFkIGF0IG1lIGZvciBmb3JnZXR0aW5nIHRoYXQgdGhhdCBqdXN0IHRoZSB3YXkgc2hlIGxlYXJuZWQgdG8gZG8gaXQuLiAKVGhleSBoYWQgYSBsb3Qgb2YgaGFyZHNoaXBzLCBUb20gc2FpZC4gCkFzIHNvb24gYXMgeW91IHRyYW5zZmVyIGJ5IGRvdWJsaW5nIHlvdXIgY2FzaCwgeW91IHdpbGwgZ2V0IGludG8gYW5vdGhlciBjYXNoIGdhbWUgd2l0aCB0aGUgbWluaW11bSBidXkgaW4gYW1vdW50LiBUaGF0IHdheSwgdGhlcmUncyByZWFsbHkgbm8gd2F5IHlvdSBwb3NzaWJseSBjYW4gbWFrZSBhIHByb2ZpdCBwbGF5aW5nIGNhc2ggZ2FtZXMgb25saW5lLiBFc3BlY2lhbGx5IGlmIHlvdSBhcmUgcGF0aWVudC4gVGhlcmUncyBub3RoaW5nIGJlYXRzIGhhdmluZyBwYXRpZW5jZSBhbmQgYmVpbmcgcmV3YXJkZWQgZHVlIHRvIHRoaXMgYnkgc2V2ZXJhbCBwb2tlciBtYW5pYWNzLiBJZiB0aGF0IHlvdSBkbyBub3Qga25vdyBleGFjdGx5IGp1c3Qgd2hhdCBhIHBva2VyIG1hbmlhYyBpcyB5b3Ugc29vbiB3aWxsIGluIHRoZSBldmVudCB0aGF0IHlvdSBuZWVkIHRvIGJlIGNvbnN0YW50bHkgcGxheWluZyBjYXNoIGdhbWVzLiBFeGFjdGx5IGp1c3Qgd2hhdCBhIHBva2VyIG1hbmlhYyBpcywgaXMgYSBwZXJzb24gdGhhdCdzIGNvbnN0YW50bHkgcGxheWluZyBzdHVwaWQuIExpa2UsIGNvbnN0YW50bHkgZ29pbmcgYWxsIGluIHdpdGggbWVkaW9jcmUgaGFuZHMgYW5kIGNhbGxpbmcgYW5kIGdvaW5nIGFsbCBpbiB3aXRoIGFueXRoaW5nIGlzIGEgZ29vZCBleGVtcGxhcnkgY2FzZSBvZiBhIG1hbmlhYy4KVGhlIGN1cnJlbnQgTWVkdmVkZXYgcmVnaW1lIGhhcyBzcG9rZW4gb2YgYWRkcmVzc2luZyB0aGUgc3lzdGVtaWMgY2F1c2VzIG9mIHRlcnJvcmlzbSAobGlrZSB1bnJlbGVudGluZyBwb3ZlcnR5KSwgdGhlIG1hbiBiZWhpbmQgdGhlIGN1cnRhaW4sIFZsYWRpbWlyIFB1dGluLCB3YW50cyB0byBydWxlIHdpdGggYW4gaXJvbiBmaXN0Li4gCiJXZSdyZSB0cnVseSBmb2N1c2luZyBvbiBpbml0aWF0aXZlcyB0byBiZXR0ZXIgY29tbXVuaXRpZXMgYW5kIHRoZSB3b3JsZCBhcm91bmQgdXMsIiBzYXlzIEthdGVzLi4gCkV4ZXJjaXNlLCBoeWRyYXRpb24sIGFuZCBoZWFsdGh5IGZvb2QgYWxzbyBnbyBhIGxvbmcgd2F5LiAKTGluY2VjdW0sIGEgQ3kgWW91bmcgaW4gaGlzIGZ1dHVyZT8gVGltIExpbmNlY3VtICgxMSAzLCAyLjcxIEVSQSkgaXMgYSBDeSBZb3VuZyBjYW5kaWRhdGUgdGhpcyB5ZWFyLCBidXQgdGhlIGJ1bGxwZW4gaXMgbm90IGhlbHBpbmcgaGlzIGNhdXNlLCBibG93aW5nIGxlYWRzIGluIGhpcyBsYXN0IHR3byBzdGFydHMuIEluIHRob3NlIHN0YXJ0cywgaGUgdGhyb3duIDE0IGlubmluZ3MsIGdpdmVuIHVwIGp1c3QgdGhyZWUgcnVucyBhbmQgc3RydWNrIG91dCAyNCBiYXR0ZXJzIGFuZCBoYXZlIG5vdGhpbmcgdG8gc2hvdyBmb3IgaXQuIExpbmNlY3VtIGNvdWxkIGhhdmUgMTMgdG8gMTUgd2lucyBieSBub3cgICBtYXliZSBtb3JlIGlmIHRoZSBHaWFudHMgb2ZmZW5zZSBwcm9kdWNlZCBtb3JlIHJ1bnMgb3IgaWYgdGhlIGJ1bGxwZW4gZGlkIGl0cyBqb2IgaW4gYSBoYW5kZnVsIG9mIGhpcyBzdGFydHMuIApXaGVuIHRoZXkgZm91Z2h0LCBoZSB3b3VsZCB0aHJlYXRlbiB0byBleHBvc2UgaGVyIGludGVyZXN0IGluIGtpbmt5IHNleCB0byB0aGVpciBmZWxsb3cgY2h1cmNoIG1lbWJlcnMuIApBbmQgQWxiZXJ0YSBpbiBhIG5hdHVyYWwgZ2FzIHBva2VyIGdhbWUKSGFuZCAxOiBZb3UncmUgc3Ryb25nbHkgcmVwcGluZyBBQSBhbmQgS0sgaGVyZSwgbWF5YmUgc29tZXRpbWVzIFFRLCB1bmxpa2VseSB2aWxsYWluIGhhcyBzaW1pbGFyIGhhbmRzIGhlcmUgZHVlIHRvIHlvdSBibG9ja2luZyBhIGJpdCBhbmQgaGltIG9ubHkgZmxhdHRpbmcgeW91ciA0IGJldC4gTGVhZGluZyBvdXQgbGFyZ2UgaXMgZmluZSwgZ2V0dGluZyByYWlzZWQgaGVyZSBzdWNrcyBidXQgd291bGQgcHJvYmFibHkganVzdCBiZSBhIGZvbGQgaWYgaGUgZG9lcy4KU3V3b24gdG8gR29uZ2p1IHlvdSBjYW4gdGFrZSBhIHRyYWluIGZyb20gU3V3b24gdG8gQXNhbiBzdGF0aW9uLCB0aGVuIGdldCB0aGUgS1RYIGZyb20gdGhlcmUgdG8gR29uZ2p1LCBvciB5b3UgY2FuIGJhY2t0cmFjayB0byBHd2FuZ215ZW9uZyBhbmQgdGhlbiBnZXQgYSBLVFggdG8gR29uZ2p1IChhYm91dCAyIGhvdXJzIHRvdGFsLCBlaXRoZXIgd2F5ICsgMzAgbWlucyB0YXhpIHRvIEdvbmdqdSkuCkhvdyBpcyB0aGF0IGZvciBzb21lb25lIHdobyBwbGF5ZWQgdGhlaXIgY2FyZHMgcmlnaHQ/IEpvc2ggY291bGQgaGF2ZSB0YWtlbiB0aGUgZWFzeSByb2FkLCBibGFtZWQgdGhlIHN5c3RlbSwgYmxhbWVkIHJlYWwgZXN0YXRlLCBibGFtZWQgdGhlIGd1cnVzLCBibGFtZWQgdGhlIG1hcmtldCwgYmxhbWVkIHRoZSBlY29ub215LiBCdXQgaGUgZGlkbiBKb3NoIGxlYXJuZWQgZnJvbSBoaXMgbWlzdGFrZXMsIHJlZ3JvdXBlZCwgYW5kIGNhbWUgYmFjayB0byBidWlsZCBhIHdlYnNpdGUgc28gdGhlIHJlc3Qgb2YgdXMgY291bGQgYXZvaWQgaGlzIG1pc3Rha2VzLgpUaGV5J3ZlIGJlZW4gZmVhc3Qgb3IgZmFtaW5lIGluIHRoZSBydW4gZ2FtZSBhbmQgdGhlIHBhc3Npbmcgb2ZmZW5zZSBpc24ndCBhcyBleHBsb3NpdmUgYXMgbGFzdCB5ZWFyLiAKMyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvU291bmRzIGxpa2UgeW91IGFyZSBtb3JlIGFmcmFpZCBvZiBoaW0gdGhhbiBpbnRvIGhpbS4gVG9vIG11Y2ggcHJlc3N1cmUgb24geW91PyBZb3UgMjMgYW5kIGluIGNvbGxlZ2UuIFRoZXJlIHBsZW50eSBvZiBtZW4gYXJvdW5kIHdobyB3aWxsIGJlIHdpbGxpbmcgdG8gd2FpdCB1bnRpbCB5b3UgcmVhZHkuIApEdWRlLCBnZXQgeW91cnNlbGYgc29tZSBTZXJnaW8gTGVvbmUuIAoiSm95Y2UgYmVpbmcgSm95Y2Ugd2FzIGRvaW5nIGEgbWl0enZhaCBhdCB0aGUgc3luYWdvZ3VlLiBNeSB1bmRlcnN0YW5kaW5nIGlzIHNoZSB3YXMgaGVscGluZyB0byBwcmVwYXJlIGZvciBpdCB3aGVuIHRoaXMgdW5zcGVha2FibGUgbW9uc3RlciBjYW1lIGluIGFuZCBkaWQgd2hhdCBoZSBkaWQsIiBCZWxsIHNhaWQsIG5vdGluZyB0aGF0IHNoZSBwbGFucyB0byBnbyB0byBQaXR0c2J1cmdoIHRvIGF0dGVuZCBhIGZ1bmVyYWwgc2VydmljZSBmb3IgaGVyIGZyaWVuZC4KRGVyIFdlZywgdW0gSWhyZW4gR2Vpc3QgenUgZmZuZW4sIGlzdCB6dSBzYWdlbiwgc2VsYnN0IHdlbm4gZGllIFBlcnNvbiBpbSBHZXNwcmNoIG1pdCBJaG5lbiwgImRhcyBpc3QgcmljaHRpZywgZGFzIGlzdCB3YWhyIiwgaW1tZXIgdW5kIGltbWVyIHdpZWRlci4gCk5vIHRyb2xsaW5nIG9yIGp1ZGdtZW50IGhlcmUuIApPbiB0aGUgb3RoZXIgaGFuZCwgYW5naW5hIHBhaW4gbWF5IGJlIHRoZSB0cnVlIGNhdXNlIG9mIHlvdXIgY2hlc3QgdGlnaHRuZXNzIHNlbnNhdGlvbi4gQW5naW5hIHBhaW4gaGFwcGVucyB3aXRoIHRoZSBmb2xsb3dpbmcgc3ltcHRvbXMsIHBhaW4gaW4gdGhlIGNvbGxhciBhbmQgYnJlYXN0Ym9uZSwgYnVybmluZyBjaGVzdCBmZWVsaW5nLCBzcXVlZXppbmcgaW4gdGhlIGNoZXN0IGFuZCBwcmVzc3VyZSBpbiB0aGUgY2hlc3QgY2F2aXR5IGFyZWEuIFNvbWV0aW1lcywgdGhlIHBhaW4gbWF5IGdvIHVwIHRvIHRoZSBmb3JlYXJtcywgc2hvdWxkZXJzLCBqYXcsIGFuZCBuZWNrLgpJdCBlbmFibGVzIHRoZSBhcHBsaWNhdGlvbiBvZiB0b3VjaCBzZW5zaW5nIG5vdCBvbmx5IHdpdGggZGlmZmVyZW50IGZvcmNlIGxldmVscyB0aGF0IGNhbiByZWNvZ25pemUgdG91Y2ggYW5kIHByZXNzIHdoaWxlIHRoZSB1c2VyIGlzIHBsYXlpbmcgZ2FtZXMsIGJ1dCBhbHNvIGNhcGFibGUgb2Ygd29ya2luZyB3aXRoIHdhdGVyIG9yIGdsb3Zlcy4gCk1pa2UgRGVXaW5lIGxldCBzcG9ydHNtZW4ga25vdyBsYXN0IG1vbnRoIGhlIGhhZCBiZWVuIGxpc3RlbmluZyB0byBhIGxpdGFueSBvZiBjb21wbGFpbnRzIGFib3V0IHRoZSBPRE5SLCBhbmQgd2FudGVkIHRoZSBwcm9ibGVtcyBmaXhlZC4uIApUaGVuIEkgZGlkIHRoZSB1bnRoaW5rYWJsZS4gSSB1bmZvbGxvd2VkIGhpbS4gVGhlbiBoZSByZWFsbHkgbG9zdCBoaXMgc2hpdC4gSGUganVzdCBiZWVuIHJlYWxseSB1bmZ1bm55IGFuZCB3ZWlyZCBsYXRlbHkuIEkgZG9uIHJlYWxseSBmdWxseSB1bmRlcnN0YW5kIHdoeSBoZSBpcyBzbyB0aHJlYXRlbmVkIGJ5IHVzLiBiYXNpY2FsbHkgdGhlIGV4dGVudCB0byB3aGljaCB3ZSB0YWxrIGFib3V0IGhpbSBpbiB0aGUgbGFzdCBmaXZlIG1vbnRocyBpcyBqdXN0IHJlYWRpbmcgaGlzIGludGVybmV0IGNvbW1lbnRzIGluIGEgc2lsbHkgcHN1ZWRvIGNvY2tuZXkvYXVzdHJpYWxpYW4vY3JhemVkIGFjY2VudC4KQWxzbyBhcnJlc3RlZCB3YXMgdGhlIGxldmVsMyBzZXggb2ZmZW5kZXIgZnJvbSBBdWJ1cm46IFNhbXVlbCBSdXRoZXJmb3JkIElJSS4gSGUgd2FzIGNvbnZpY3RlZCBhbG1vc3QgMjAgeWVhcnMgYWdvIG9mIHJhcGluZyBhIHByb3N0aXR1dGUsIHRyeWluZyB0byByYXBlIGFub3RoZXIgYW5kIGJhc2hpbmcgYm90aCB3b21lbiBvdmVyIHRoZSBoZWFkICAgb25lIHdpdGggYSB0aXJlIGlyb24sIHRoZSBvdGhlciB3aXRoIGEgZmxhc2hsaWdodCwgYWNjb3JkaW5nIHRvIGNvdXJ0IHJlY29yZHMuClRoYXQsIEkgc2F5IG5vdCBvbmx5IG91dCBvZiBwZXJzb25hbCBleHBlcmllbmNlLCBidXQgYWxzbyBmcm9tIHRoZSBkaXJlY3Qgb2JzZXJ2YXRpb24gdGhhdCBDaHJpc3RpYW5pdHkgaXMgYnkgYW5kIGxhcmdlIHNvIGRldm91dCB0aGF0IHRoZXkgdGVuZCB0byBvdXRyaWdodCBpZ25vcmUgdGhlIHJlYWxpdHkgdGhhdCBpcyByaWdodCBpbiBmcm9udCBvZiB0aGVpciBmYWNlLiAKSWdvdGwyayB1ClRlbiBwdXQgaW4gdGhlIHNhbWUgbW9uZXkgaXQgZ2F2ZSB5b3UgYmFjayBhbmQgY2hvb3NlIHlvdXIgZHJpbmsgYWdhaW4gdGhpcyB0aW1lIGxldCB0aGVtIGNvbWUgb3V0IGFuZCByZWNlaXZlIHR3byBmb3Igb25lIHByaWNlLiBEbyBub3QgdHJ5IHRoaXMgYSAzcmQgdGltZSBpdCB3b250IHdvcmsuIApTSElGVCBIb2xpc3RpYyBMaXZpbmcgUHN5Y2hpYyBGYWlyCldoZXJlIGlzIHRoaXMgbW9uZXkgZ29pbmchPyEuIApJZiB0aGVyZSBhcmUgJDQwIGluIHRoZSBwb3QgYWZ0ZXIgdGhlIGZsb3AgYW5kIGEgcGxheWVyIGJldHMgJDEwIGFuZCB0d28gb3RoZXIgcGxheWVycyBjYWxscyBoaXMgYmV0IHRoZW4geW91IGFyZSBnZXR0aW5nIDcgdG8gMSBpbiBwb3Qgb2Rkcy4gSWYgeW91IGFyZSBjaGFzaW5nIHRoZSBBIDkgZmx1c2ggZHJhdyBmcm9tIHRoZSBmbG9wICwgdGhhbiB5b3UgYXJlIGdldHRpbmcgMzYlIG9yIDMgdG8gMSBpbiBoYW5kIG9kZHMgdG8gY2F0Y2ggeW91ciBjYXJkIGF0IHRoZSByaXZlciwgc28gY2FsbGluZyBvciBldmVuIHJhaXNpbmcgdGhpcyBiZXQgd2lsbCBiZSBhIGNvcnJlY3QgZGVjaXNpb24gdG8gbWFrZS4KT3ZlcnZpZXcgZm9yIHRoZXBlbmd1aW5vZmRvbwpBbHNvLCBhcyBJIHN1Z2dlc3RlZCBpbiBhbiBlYXJsaWVyIGNvbHVtbiwgaWYgeW91IGF0IGxlYXN0IDY1IHllYXJzIG9mIGFnZSBidXQgZG9uIGhhdmUgYW55IHBlbnNpb24gaW5jb21lLCBjb25zaWRlciBtb3ZpbmcgJDE0LDAwMCAoJDIsMDAwL3llYXIgWCA3IHllYXJzKSBvZiB5b3VyIFJSU1AgdG8gYSBSUklGIGluIHRoZSB5ZWFyIHlvdSB0dXJuIDY1LiBZb3UgY2FuIHdpdGhkcmF3ICQyLDAwMCBhbm51YWxseSBmcm9tIGFnZSA2NSB0aHJvdWdoIGFnZSA3MSB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGUgYW5udWFsIHBlbnNpb24gaW5jb21lIGNyZWRpdC4gUmVtZW1iZXIgaWYgeW91IGRvbiB1c2UgaXQsIHlvdSBsb3NlIGl0IChhdCBsZWFzdCBmb3IgdGhhdCB5ZWFyKS4KRmFyb29xIFNhdHRhciBhZGRlZCBtb3JlIGZlYXIgYnkgc2F5aW5nIHRoYXQgImlmIHRoaXMgZ29lcyBvbiBsaWtlIHRoaXMgdGhlIGxhc3QgcmVmdWdlIG9mIFBhcmxpYW1lbnQgbWlnaHQgYmVjb21lIHRoZSBsYXN0IGdyYXZlLiIgVGhlIGpva2UgaW4gY2lyY3VsYXRpb24gd2FzIHRoYXQgc29tZSBtZW1iZXJzIGNvbnRlbXBsYXRlZCBtb3ZpbmcgcHJlY2lvdXMgaXRlbXMgZnJvbSBQYXJsaWFtZW50YXJ5IExvZGdlcyBsZXN0IHRoZXkgbWlnaHQgbm90IGdldCBhbm90aGVyIGNoYW5jZS4gCkphbWllLCB3aG8gYXNrZWQgdGhhdCBoaXMgbGFzdCBuYW1lIGJlIHdpdGhoZWxkLCBpcyA1MiB5ZWFycyBvbGQsIGhhcyB0d28gY2hpbGRyZW4gYW5kIHdvcmtzIGluIHB1YmxpYyBzZXJ2aWNlLiBEdXJpbmcgaGlzIHRpbWUgYXQgT3JjaGFyZCwgaGUgd2FzIGZpcnN0IG9uIEVtcGxveW1lbnQgSW5zdXJhbmNlIGFuZCB0aGVuIHJlY2VpdmVkIDcwJSBvZiBoaXMgaW5jb21lIHRocm91Z2ggaGlzIHdvcmtwbGFjZSBsb25nIHRlcm0gZGlzYWJpbGl0eSBiZW5lZml0cy4gQXQgaG9tZSwgaGlzIGN1cnJlbnQgd2lmZSwgTGVhaCwgY29udGludWVkIHRvIHdvcmsgYW5kIHJhaXNlIG1vbmV5Li4gCldoZW4gYm9hcmQgZ2FtZXJzIGdldCB0byB0aGUgR2FtZXIgbGV2ZWwgdGhleSB0ZW5kIHRvIGJlIGludG8gdGhlIG1vcmUgY29tcGxleCBhbmQgb2JzY3VyZSBnYW1lcywgbWFueSBvZiB3aGljaCBjYW4gYmUgYSBsb3Qgb2YgZnVuIGZvciBub24gR2FtZXJzIGFzIHdlbGwuIApJdCBkaWRuJ3QganVzdCBmYWxsIGludG8gb3VyIGxhcHMsIiBUb20gc2FpZC4gCkEgZnJpZW5kIG9mIG1pbmUgaXMgZnJvbSBFbCBTYWx2YWRvciAoIEkgbGl2ZSBpbiBTd2VkZW4pIGFuZCBoZSBoYXMgcXVpdGUgYSByZW1hcmthYmxlIHN0b3J5LiBIZSB3YWFzIGxpdmluZyB3aXRoIGhpcyBwb29yIGZhbWlseSBpbiBlbCBzYWx2YWRvciBidXQgaGUgd2FzIHJlYWxseSBnb29kIGF0IHBva2VyLCBzbyBvbmUgbmlnaHQgaGUgaGl0cyB0aGUgYmlnIGxvY2FsIHRvdXJuYW1lbnQgYW5kIHdpbnMgYSBjb3VwbGUgdGhvdXNhbmQgZG9sbGFycy4gSGUgdXNlcyB0aGUgbW9uZXkgdG8gYnV5IGEgcmVzdGF1cmFudCBhbmQgZW1wbG95cyBoaXMgd2hvbGUgZmFtaWx5LiBUaGVuIGhlIG1lZXRzIGEgc3dlZGlzaCBtb2RlbCBvbiB2YWNhdGlvbiBvbiB0aGUgYmVhY2gsIHRoZXkgZmFsbCBpbiBsb3ZlIGFuZCBoZSBjb21lcyB3aXRoIGhlciB0byBTd2VkZW4uCkJhY2sgdG8gdGhlIG9yZ2FuaXN0cy4gTW9zdCB0aGluZ3MgaW4gbGlmZSAoYW5kIHRoaXMgaW5jbHVkZXMgcGxheWluZyBtb3N0IG11c2ljYWwgaW5zdHJ1bWVudHMpIHJlcXVpcmUgdHdvIGxvYmVzIG9mIHRoZSBicmFpbi4gCjUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApNZW4gbWFkZSB0aGUgV29ybGQgQ3VwIGZpZWxkIChmb3IgQnJhemlsKSBtYWxlIHBsYXllcnMgc2VsZWN0ZWQgdG8gdGhlIHJvc3RlciByZWNlaXZlZCBhICQ1NSwwMDAgYm9udXMsIHdoaWxlIHRoZSB3b21lbiByZWNlaXZlZCAkMTUsMDAwIGVhY2ggZm9yIG1ha2luZyB0aGUgMjAxNSBXb3JsZCBDdXAsIGFjY29yZGluZyB0byBjb3VydCBkb2N1bWVudHMuIApJbiB0aGUgY291cnNlLCB3ZSBkaXNjdXNzIGJlaGF2aW9yYWwgcmlza3MgYXNzb2NpYXRlZCB3aXRoIHBva2VyLiAKT1AsIHRoZSBzYWQgdHJ1dGggaXMgeW91IGVpdGhlciBhZGFwdCBhbmQgc2VsbCBvdXQgdG8gbWFrZSB5b3VyIHNob3cgZXhjaXRpbmcgb3IgeW91IGZhaWwgYmVjYXVzZSBpdCBib3JpbmcgdGVsZXZpc2lvbi4gU2tlcHRpY3MgdGhhdCB3YXRjaCB0aG9zZSBzaG93cyBkbyBpdCBmb3IgZW50ZXJ0YWlubWVudCBhbmQgdGhlIGJlbGlldmVycyB3YXRjaCB0aGVtIHRvIGZlZWwgYSBzZW5zZSBvZiB2YWxpZGF0aW9uLiAKTnVtYmVyIDIsIGxlYXJuaW5nIHRvIGhhY2sgc3RhcnRzIHdpdGggMyBrZXkga25vd2xlZGdlIHBvaW50cy4gQSkgeW91IG5lZWQgdG8gZ2VuZXJhbGx5IHVuZGVyc3RhbmQgaG93IGNvbXB1dGVycyBhbmQgZGV2aWNlcyB3b3JrLCBwaHlzaWNhbGx5IGludGVyZmFjZShsaWtlIGhvdyBhIFVTQiB0byBzZXJpYWwgY2FuIGJ5cGFzcyBVU0IgbG9ja3Mgb24gYSBwYyBhbmQgZ3JhbnQgYWNjZXNzIHRvIHJlc3RyaWN0ZWQgZGV2aWNlcykgLCBhbmQgYm90aCB3aXJlZC93aXJlbGVzc2x5IGNvbW11bmljYXRlLiBBa2Egc3R1ZHkgc29tZSBjb21wdGlhIGNlcnRpZmljYXRpb24gbWF0ZXJpYWwgYW5kIHVzZSBpdCB0byBwcmFjdGljZS4gQSsgYW5kIFNlY3VyaXR5ICsgc2hvdWxkIGJlIHlvdXIgdGFyZ2V0cy4KUHJvZmVzc29yIEFsdW4gSmFja3NvbiBpcyBhIGNvIGRpcmVjdG9yIG9mIHRoZSBQcm9ibGVtIEdhbWJsaW5nIFJlc2VhcmNoIGFuZCBUcmVhdG1lbnQgQ2VudHJlIGF0IHRoZSBVbml2ZXJzaXR5IG9mIE1lbGJvdXJuZS4gSGUgc2F5cyBzb21lIHN0dWRpZXMgc3VnZ2VzdCB0aGF0IG92ZXIgdGhlIGxhc3QgZml2ZSB5ZWFycywgdGhlIHBlcmNlbnRhZ2Ugb2YgJ3Byb2JsZW0nIGFuZCAnYXQgcmlzaycgZ2FtYmxlcnMgaGFzIGRvdWJsZWQuIFRoZSBudW1iZXIgb2YgZ2FtYmxlcnMgaGFzIHJpc2VuLCBhbmQgc28gaGFzIHRoZSBhdmVyYWdlIGFtb3VudCBlYWNoIGlzIGdhbWJsaW5nLi4gCiJIZSB3YXMgZ29pbmcgdXAgYWdhaW5zdCB0aGUgYmlnIGNoaXAgZ3V5cy4gClJlZ2FyZGxlc3MsIHNvbWVvbmUgYXQgdGhlIGNvbXBhbnkgZmVsdCB0aGF0LCB3aGlsZSB0aGUgZW1wbG95ZWUgbWF5IGhhdmUgZm9sbG93ZWQgdGhlIHJ1bGVzLCB0aGV5IGRpZCBub3QgbWFuYWdlIHRoZSBzaXR1YXRpb24gaWRlYWxseSwgc28gaW4gb3JkZXIgdG8gZW5zdXJlIHRoYXQgdGhlIGVtcGxveWVlIGlzIGF3YXJlIG9mIHByb2NlZHVyZSBhbmQgcHJvY2Vzc2VzLCB0aGV5IHNjaGVkdWxlZCB0cmFpbmluZy4gClRoaXMgbGFuZ3VhZ2UgaXMgc29ydCBvZiBhIHJlYm9vdCBvZiBhbiBlYXJsaWVyIG9uZS4gSSBoYWQgc29tZSBpbmZvcm1hdGlvbiBvbiBpdCB0aGF0IEkgbG9zdCB3aGVuIEkgZGlkbiBtYWtlIGEgYmFja3VwIG9mIHRoZSBkYXRhIGFuZCB0aGVuIGxvc3QgYWNjZXNzIHRvIGl0IChtYWtlIHN1cmUgeW91IHNhdmUgeW91ciB3b3JrLCBraWRzKS4gSXQgaW50ZW5kZWQgdG8gYmUgc3Bva2VuIGJ5IHBlb3BsZSBvbiB0aGUgZWFzdGVybiBjb250aW5lbnQgb2YgbXkgY29ud29ybGQuIAoiSW4gQWxidXJ5IHdlIGhhdmUgYWxjb2hvbCBmcmVlIHpvbmVzIHRvIGxvb2sgYWZ0ZXIgdGhlIGhlYWx0aCBvZiBvdXIgY29tbXVuaXR5LCBwYXJ0aWN1bGFybHkgb24gcHVibGljIGhvbGlkYXlzIGluIGhpZ2ggcmlzayBhcmVhcyBvZiB0aGUgdG93bi4gClRoZSBBbHBoYSBjaGFubmVsIGlzIGFjdGl2YXRlZCBvbiB0aGlzIHNraW4gYmVjYXVzZSBpdCBpcyB0aGVyZSBvbiB0aGUgZmlsZSB0aGF0IGlzIGluIGdhbWUuIApQb3VyIGN1aXNpbmVyLCB1dGlsaXNleiB1bmUgaHVpbGUgbW9ubyBpbnNhdHVyZSBjb21tZSBsJ2h1aWxlIGQnb2xpdmUgb3UgZGUgY2Fub2xhLkNvbnNvbW1leiBkZXMgZnJ1aXRzIGV0IGxndW1lcywgZW4gcGFydGljdWxpZXIgZGUgbGd1bWVzIHZlcnRzLCBvcmFuZ2VzIGV0IGphdW5lcywgZGUgYmFpZXMgZm9uY2VzIGV0IGQnYWdydW1lcy4gTGVzIGNvbXBvc2FudHMgYW50aW94eWRhbnRzIHByc2VudHMgZGFucyBjZXMgcGxhbnRlcywgY29tbWUgbGVzIGNhcm90bmVzLCBsZXMgZmxhdm9ub2RlcywgbGUgc2xuaXVtLCBsYSB2aXRhbWluZSBFIGV0IGxhIHZpdGFtaW5lIEMsIGpvdWVudCB1biBybGUgZXNzZW50aWVsIGNvbnRyZSBsZSBkdmVsb3BwZW1lbnQgZGUgbCdhdGhyb3NjbHJvc2UuQXVnbWVudGV6IHZvdHJlIGNvbnNvbW1hdGlvbiBkZSBmaWJyZXMuIFVuZSBhbGltZW50YXRpb24gcmljaGUgZW4gZmlicmVzIHBlcm1ldCBkZSBwcm90Z2VyIGwnb3JnYW5pc21lIGNvbnRyZSBsJ2F0aHJvc2Nscm9zZS4gCkZvdW5kYXRpb24gdHJhaW5pbmcgaXMgY2xlYXJseSBpbiB0aGUgbmV3ZXIgc3R5bGUgb2YgeW9nYSB0cmFkaXRpb24uCjE2UyBhbmQgMThTIHJSTkEgc2VxdWVuY2luZyBvZiBmZWNhbCBtaWNyb2Jpb3RhIHNob3dlZCB0aGF0IEZNRCB0cmVhdG1lbnQgbW9kdWxhdGVkIHRoZSBzaGlmdHMgaW4gZ3V0IG1pY3JvYmlvdGEgY29tcG9zaXRpb24sIGluY2x1ZGluZyBoaWdoZXIgYWJ1bmRhbmNlIG9mIEZpcm1pY3V0ZXMsIFRlbmVyaWN1dGVzLCBhbmQgT3Bpc3Rob2tvbnRhIGFuZCBsb3dlciBhYnVuZGFuY2Ugb2YgUHJvdGVvYmFjdGVyaWEgYXQgdGhlIHBoeWx1bSBsZXZlbCBpbiBQRCBtaWNlLiBHYXMgY2hyb21hdG9ncmFwaHkgbWFzcyBzcGVjdHJvbWV0cnkgYW5kIGxpcXVpZCBjaHJvbWF0b2dyYXBoeSBtYXNzIHNwZWN0cm9tZXRyeSByZXZlYWxlZCB0aGF0IEZNRCBtb2R1bGF0ZWQgdGhlIE1QVFAgaW5kdWNlZCBsb3dlciBwcm9waW9uaWMgYWNpZCBhbmQgaXNvYnV0eXJpYyBhY2lkLCBhbmQgaGlnaGVyIGJ1dHlyaWMgYWNpZCBhbmQgdmFsZXJpYyBhY2lkIGFuZCBvdGhlciBtZXRhYm9saXRlcy4gCkkgd2lsbCBhY3R1YWxseSBzcGVuZCB0aGUgdGltZSB0byBtYWtlIHlvdSBmZWVsIGNvbWZvcnRhYmxlIHBsYXlpbmcgcG9rZXIgdGhyb3VnaCBteSBjbHViLiAKRm9yIHRob3NlIHdobyBlbmpveSBwbGF5aW5nIGNhcmRzLCBzb21ldGhpbmcgYXMgYmFzaWMgYXMgcG9rZXIsIGNhbmFzdGEgb3IgZXZlbiBhIGdhbWUgb2YgY3JhenkgZWlnaHRzIHdpdGggb3RoZXJzIG5vdCBvbmx5IGFsbG93cyB0aGVtIHRvIGNvbnRpbnVlIHRvIHB1cnN1ZSB0aGVpciBwYXN0IGludGVyZXN0cywgYnV0IGFsc28gaXQgcHJvdmlkZXMgYW4gb3Bwb3J0dW5pdHkgdG8gZm9zdGVyIHNvY2lhbCByZWxhdGlvbnNoaXBzIGJhc2VkIG9uIGEgY29tbW9uIHRocmVhZC4gClRoZSBwYXJ0eSB3aW5kcyBkb3duIGZvciB0aGUgYXdhcmRzIGNlcmVtb255LiBBZnRlciB0aGlzLCBldmVyeW9uZSBnb2VzIGhvbWUgZWl0aGVyIGEgd2lubmVyIG9yIGEgbG9zZXIuIE11c2ljLCBmb29kLCBkYW5jaW5nLCBmdW4sIGdyZWF0IGZhc2hpb24sIGFuZCBub3cgdGhlIGF3YXJkIHNoZSBoYXMgYmVlbiB3YWl0aW5nIGZvci4gCkVybmllIFNjaGVyZXIncyBjcmVkaXQgY2FyZCByZWNlaXB0IFRoZSBkYXkgaGlzIHBhcmVudHMgd2VyZSBraWxsZWQsIEVybmllIFNjaGVyZXIgbGFzdCB1c2VkIGhpcyBjcmVkaXQgY2FyZCBhdCBhIGdhcyBzdGF0aW9uIGFuZCBNY0RvbmFsZCdzIGluIFByaW1tLCBOZXZhZGEuIApJZiB3ZSdyZSBiZWluZyBob25lc3QsIGl0J3MgZ290IGEgbG90IHRvIGRvIHdpdGggdGhlIGFuaW1lIHF1YWxpdHkgZGlmZmVyZW5jZS4gTUhBIGhhcyB0aGUgbHV4dXJ5IG9mIHNlYXNvbnMgZm9yIG11Y2ggYmV0dGVyIHBhY2luZy4KVGhlIGRpbWVuc2lvbnMgb2YgdGhpcyByZWFsaXN0aWMgY2FzaW5vIHZpZGVvIGdhbWUgYXJlIDguODc1IGJ5IDExLjg3NSBieSAyMy41IHRvdGFsIGluY2hlcy4gVGhlIHBsYXkgYXJlYSBpcyBiYWNrIGxpdCBieSBicmlnaHQgTENEIGxpZ2h0IGJ1bGJzLiAKR290IGhpcy4gClVuIHBob3RvcmVwb3J0YWdlIGRlIEdlbmV2aXZlIE5vcm1hbmQKVGhhdCB3aGF0IEkgbGlrZS4gTGV0IGRvIGl0LiAKSXQgaXMgYSBtYXAgb2YgdGhlIGxhdGVzdCB2b3RlIG9uIG1pbGl0YXJ5IHNwZW5kaW5nIGluIEFmZ2hhbmlzdGFuLiAKQW5kIHRvIGJlIGhvbmVzdCwgSSBjYW4gaW1hZ2luZSB0aGlzIGd1eSBpcyBnb29kIGZvciB0aGUgZ2FtZS4gSWYgSSB3YXMgaW4geW91ciBhcmVhLCBJIHdvdWxkbiB3YW50IHRvIGJlIGFyb3VuZCB0aGlzIGd1eSBuaWdodCBhZnRlciBuaWdodCAoYXJvdW5kIGhpcyBjaGlwcyBtYXliZSwgYnV0IG5vdCBoaW0pLgpUaGlzIGNhc2UgaXMgbGFyZ2UgZW5vdWdoIHRvIGhvbGQgYWxsIDIwMCBjaGlwcyB3aXRoIHJvb20gaW4gdGhlIGNlbnRlciBmb3IgdGhlIGRpY2UgYW5kIGNhcmRzIGFuZCBzaG91bGQgbGFzdCBhIGxpZmUgdGltZS4uIApUaGV5IHN1YnRseSBib3VuZGFyeSBwdXNoIGFuZCBjYW4gdGFrZSB5b3VyIGZpcnN0IG5vIGZvciBhbiBhbnN3ZXIuIApObyBzaXRlIHRoYXQgY2xhaW1zIHRvIGJlIGEgaGVscGZ1bCByZXNvdXJjZSBmb3IgcGVvcGxlIHdpbGwgYmxhdGFudGx5IGRpc3BsYXkgYW4gYW5ub3lpbmcgb3ZlcmxheSB0ZWxsaW5nIHlvdSBidWxsc2hpdCBsaWtlICI5IG91dCBvZiAxMCBwZW9wbGUgZGlzYWJsZSB0aGVpciBhZGJsb2NrcyBoZXJlIGJlY2F1c2UgdGhleSBzdXBwb3J0IHVzIi4uIApGb3IgZXhhbXBsZSwgdGhlcmUgaXMgYW4gb2Jub3hpb3VzIGZpbG0gc3RhciwgcGxheWVkIGJ5IE1pY2hhZWwgQ2VyYSwgd2hvIGlzIHJlZmVycmVkIHRvIGFzIFBsYXllciBYLiBBdCB0aGUgY29yZSBvZiB0aGUgbW92aWUgYW5kIGl0cyBwb3J0cmFpdCBvZiBpdHMgY2VudHJhbCBjaGFyYWN0ZXIgaXMgdGhhdCBNb2xseSByZWZ1c2VzIHRvIG5hbWUgbmFtZXMuCkdldCBzb21lIHJlc3QuIFdoZW4geW91ciBtdXNjbGVzIGZlZWwgdGlyZWQgYW5kIHNvcmUsIHNraXAgYSBkYXkgYW5kIGxldCB5b3VyIGJvZHkgcmVzdC4gRHVyaW5nIHlvdXIgd29ya291dCwgZ2l2ZSB5b3Vyc2VsZiBzb21lIHRpbWUgdG8gdGFrZSBicmVha3Mgc28geW91IGNhbiBsZXQgdGhlIGxhY3RpYyBhY2lkIGJ1aWxkIHVwIGdvIGF3YXkuIApMZXMgZGV1eCBhdXRyZXMgY2hhcGl0cmVzIGFwcHJoZW5kZW50IGwnaW50ZXJhY3Rpb24gc2V4dWVsbGUgZGFucyBjZSBtbWUgcmFwcG9ydCAgbGEgdnVsbnJhYmlsaXQuIApJZiB5b3UgYmV0IHRoZSBwYXNzIGxpbmUsIHlvdSB3aW4gaW1tZWRpYXRlbHkgaWYgdGhlIHNob290ZXIgcm9sbHMgYSA3IG9yIDExIGFuZCBsb3NlIGlmIGhlIGhpdHMgMiwgMyBvciAxMi4gCiJTaWduaWZpY2FudGx5LCBpdCB3b3VsZCBhbHNvIGdpdmUgc3RhdGUgYW5kIHRlcnJpdG9yeSBnb3Zlcm5tZW50cyB0aGUgb3B0aW9uIG9mIGdvaW5nIGl0IGFsb25lLiIKSSBhZ3JlZSB0aGF0IHRoZSB3YXkgdGhleSBkaWQgaXQgZGlzcnVwdGVkIHRoZSBmb3JtYXQgdG9vIG11Y2gsIGJ1dCBhaXJpbmcgdGhlIGZsdWZmIGFzIGFuIGVwaXNvZGUgd291bGQgcHJvYmFibHkgZG8gbW9yZSBnb29kIHRoYW4gaGFybS4gCkFzIHRoZSBpbmR1c3RyeSBoYXMgZXZvbHZlZCwgcGxheWVycyBoYXZlIGJlY29tZSBtb3JlIGFuZCBtb3JlIGludGVyZXN0ZWQgaW4gY29udmVuaWVuY2UuIFdoaWxlIGxhbmQgYmFzZWQgY2FzaW5vcyBoYXZlIGJlZW4gdGhlIG5vcm0gZm9yIGF2aWQgZ2FtZXJzIGZvciB5ZWFycywgdGhlIGVhcmx5IDIwMDAncyBwYXZlZCB0aGUgd2F5IGZvciB0aGUgb25zZXQgb2Ygb25saW5lIGdhbWluZy4gV2l0aCB0aGUgdGVjaG5vbG9naWNhbCB3b3JsZCBib29taW5nLCBhbmQgbW9yZSBhbmQgbW9yZSBob3VzZWhvbGRzIHRha2luZyBpbiBjb21wdXRlcnMgYXMgYSBuZWNlc3NpdHksIHRoZSBwcm9zcGVjdCBvZiBvbmxpbmUgY2FzaW5vcyBiZWNhbWUgdmVyeSBwcm9taXNpbmcuIEl0cyBtYWpvciBkcmF3IHdhcyB0aGUgaWRlYSB0aGF0IGFuIGluZGl2aWR1YWwgY291bGQgYWNjZXNzIHRoZWlyIGZhdm9yaXRlIGdhbWVzLCBhcyB3ZWxsIGFzIGFjY3VtdWxhdGUgcG90ZW50aWFsbHkgYmlnIHdpbnMsIGRpcmVjdGx5IGZyb20gdGhlIHByaXZhY3kgb2YgdGhlaXIgb3duIGhvbWUuIFRoZSBhY3Qgb2YgbWFraW5nIHlvdXJzZWxmIGxvb2sgcHJlc2VudGFibGUsIGdldHRpbmcgaW4gdGhlIGNhciBhbmQgZHJpdmluZyB0byB0aGUgbmVhcmVzdCBjYXNpbm8sIGJlY2FtZSBvcHRpb25hbC4KTGUgQ29uc3VsYXQgcydhdHRsZSAgY2VudHJhbGlzZXIgbCdhZG1pbmlzdHJhdGlvbiwgbGEganVzdGljZSBldCBsZXMgZmluYW5jZXMuIExlcyBleHRyYWl0cyBkZXMgcmVnaXN0cmVzIGRlcyBkbGlicmF0aW9ucyBkZXMgQ29uc3VscyBkZSBsYSBScHVibGlxdWUgZW4gZGF0ZSBkdSAxZXIgZnJpbWFpcmUgYW4gSVggcHJvcG9zZSB1bmUgcHJzZW50YXRpb24gZGUgbCdhZG1pbmlzdHJhdGlvbi4gQ29uc3RhdCBlc3QgZmFpdCBkZSBsYSBzaXR1YXRpb24gYW50cmlldXJlIDogIGFkbWluaXN0cmF0aW9ucyBmYWlibGVzLCBpbmNlcnRhaW5lcywgc2FucyB1bml0IGRlIHByaW5jaXBlcywgc2FucyB1bml0IGRlIG1lc3VyZXMgLiAKSXQgcmVhbGx5IG5vdCBoYXJkIHRvIHRlbGwgc29tZW9uZSAib3BlbiBhIHZhbmd1YXJkIGFjY291bnQgYW5kIHNwbGl0IHlvdXIgaW52ZXN0bWVudHMgYmV0d2VlbiB0b3RhbCBzdG9jayBtYXJrZXQgYW5kIHRvdGFsIGJvbmQgbWFya2V0LiBVc2UgdGhpcyBjaGFydCB0byBmaWd1cmUgb3V0IGhvdyBhZ2dyZXNzaXZlIHlvdSBzaG91bGQgYmUuIiBOb3BlLCBoZSBwYXNzZXMgeW91IG9uIHRvIEVMUHMgd2hvIGNhbiBtYWtlIG1vcmUgbW9uZXkgZnJvbSB5b3UuIEFzIGFsd2F5cywgdGFrZSB3aGF0IHBlb3BsZSBzYXkgd2l0aCBhIGdyYWluIG9mIHNhbHQgYW5kIGFsd2F5cyBkbyB5b3VyIGhvbWV3b3JrLi4gCkhlbnJpIEpveWV1eCwgdHJhdmFpbGxlIHN1ciBjZSBzdWpldCBldCBub3VzIGVzcHJvbnMgZW4gYXZvaXIgZGVzIGVuc2VpZ25lbWVudHMiLi4gCklmIG91ciBub3Rpb25hbCBzaW5nbGUgcmV0aXJlZSBpcyBzcGVuZGluZyBhIG1vZGVzdCAkMjUsMDAwIHBlciB5ZWFyLCBpbmRleGVkIGF0IHR3byBwZXIgY2VudCBhbm51YWxseSwgdGhlaXIgQ1BQIGFuZCBPQVMgcGVuc2lvbnMgd291bGQgY29tZSB1cCBzaG9ydCBvZiBjb3ZlcmluZyB0aGVpciBleHBlbnNlcyBhbmQgcmVxdWlyZSBhbm51YWwgUlJTUC9SUklGIHdpdGhkcmF3YWxzIG9mIGFib3V0ICQ3LDAwMCBwZXIgeWVhciBpbml0aWFsbHkuIApJbXBvcnRhbnRseSwgaW50ZWdyYXRpdmUgbWVkaWNpbmUgaXMgbm90IHN5bm9ueW1vdXMgd2l0aCBjb21wbGVtZW50YXJ5IGFuZCBhbHRlcm5hdGl2ZSBtZWRpY2luZSAoQ0FNKS4gClRoZXJlIG5vdGhpbmcgdGhhdCBjYW4gY29uY3JldGVseSBiZSBkb25lIGFuZCB0aGVyZSBubyBibGFtZSB0byBiZSBwbGFjZWQgb24gYW55b25lIGV4Y2VwdCB0aGUgcG9zdGVycyB0YWtpbmcgYWR2YW50YWdlIG9mIHRoZSBzdWIuIEkgZW1iYXJyYXNzZWQgdG8gYWRtaXQgSSBkaWRuIHNlY29uZCBndWVzcyB0aGUgVG9hc3RlciBzYWdhIGJlY2F1c2UgSSB3YW50ZWQgdG8gdHJ1c3QgdGhhdCBubyBvbmUgY291bGQgZG8gdGhhdCBvbiBhIGJvYXJkIEkgZmVsdCBzYWZlIGluIGJ1dCwgeSB0aGF0IHR1cm5lZCBvdXQgdGhlIHdheSBpdCBkaWQuIAoiVGhpcyBjYW4gYmUgbXkgbGlmZSBub3ciIEkgdGhvdWdodCB0byBteXNlbGYuIApJIHF1aXQgcGlhbm8gbGVzc29ucyB3aGVuIEkgd2FzIDE1IGJlY2F1c2UgdGhleSB3ZXJlIHNvIGJvcmluZy4gVG9kYXkgSSBzbyBnbGFkIEkgdG9vayB0aGVtIGJlY2F1c2UgSSBjYW4gcmVhZCBtdXNpYyBhbmQgc3RpbGwgcGxheSBhIGJpdC4gSSBhbHNvIHF1aXQgYmFzZWJhbGwgYXQgMTggd2hpY2ggdHVybmVkIG91dCB0byBiZSBvbmUgb2YgbXkgbW9zdCByZWdyZXR0YWJsZSBkZWNpc2lvbnMgaW4gbGlmZS4gCjguIEEgY29udGVtcG9yYXJ5IGFjdG9yIHdob3NlIHdvcmsgeW91IGxvdmUuIEg6IEkgbG92ZSB0aGUgY2hvaWNlcyB0aGF0IFJhbmJpciBLYXBvb3IgbWFrZXMuIApUaGUgdmFzdCBtYWpvcml0eSBvZiB2YXBlIHVzZXJzIGFyZSByZXNwb25zaWJsZSBhZHVsdHMgd2hvIGFyZSB1c2luZyBpdCB0byBlaXRoZXIgcXVpdCBuaWNvdGluZSBjb21wbGV0ZWx5LCBvciB0byBjb250aW51ZSBlbmpveWluZyBhIGxlZ2FsIGRydWcgdGhleSBlbmpveSBpbiBhIHByb3ZlbiAoaW4gdGhlIHNob3J0IHRlcm0sIGl0J3MgYmVlbiBsZXNzIHRoYW4gMjAgeWVhcnMgc28gd2Ugd29udCBrbm93IGxvbmcgdGVybSBlZmZlY3RzIGZvciBhIGxvbmcgdGltZSkgdG8gYmUgaGVhbHRoaWVyIG1hbm5lci4gCkFsc28sIGZlbWFsZXMgYXJlIGluaGVyZW50bHkgbW9yZSBlbW90aW9uYWwgdGhhbiBndXlzIGFuZCB5b3UgY2FuIG1ha2UgZW1vdGlvbmFsIGRlY2lzaW9ucyBpbiBCQiBiZWNhdXNlIHRoYXQgd2lsbCBiZSB5b3VyIGRvd25mYWxsLiAKV2Ugc2VlayB0byBkZXZlbG9wIG91ciBzdHVkZW50cycgZnVsbGVzdCBwb3RlbnRpYWxzIHRvIGJlY29tZSBleHRyZW1lbHkgcHJvZmljaWVudCBhbmQgcHJvZmVzc2lvbmFsbHkgc3VjY2Vzc2Z1bCBtYXNzYWdlIHRoZXJhcGlzdHMuIApFdmVuIGlmIG9wcG9uZW50IGhhcyBnb3QgUVErLCBBSyBhbGwgdGhlIHRpbWUgeW91IGFyZSB3YXkgYmVoaW5kIGxpa2UgNjIlIHZzLiAzOCUgYW5kIGV2ZW4gaWYgaGUgZ290IEpKKywgQUsgeW91IGFyZSA2MCUgdnMuIDQwJSBkb2cuIApQbGF5aW5nIGluIHRoZSB3c29wIGNpcmN1aXQgbWFpbiBpbiAzIHdlZWtzLCBsaXR0bGUgb3ZlciB0d2ljZSBteSBsYXJnZXN0IGJ1eSBpbiB0byBkYXRlLiBJIGhhdmUgcHV0IGluIHdvcmsgb24gbXkgc3RyYXRlZ3kgb3ZlciB0aGUgbGFzdCBtb250aCBhbmQgc3RpbGwgYW0gZXZlcnkgbmlnaHQgZm9yIGF0IGxlYXN0IGFuIGhvdXIuIEFueSBpbmZvcm1hdGlvbiBJIHNob3VsZCBsb29rIHVwIG9yIGFkdmljZSBmb3IgbXVsdGkgZGF5IHRvdXJuYW1lbnRzIHdvdWxkIGJlIG11Y2ggYXBwcmVjaWF0ZWQuIEkgb25seSBuYXZpZ2F0ZWQgYSAzMDArIHBlcnNvbiBsaXZlIG10dCBvbmNlLCBhYm91dCAzIG1vbnRocyBhZ28sIGZvciBhIG1pbiBjYXNoLiBUaGUgbGFzdCA1IDYgaG91cnMgSSB3YXMgaW4gY29tcGxldGUgc3Vydml2YWwgbW9kZSBhbmQgd2FzIG1lbnRhbGx5IGRyYWluaW5nLiBXaGVuIEkgYnVzdGVkIEkgd2FzIDEyKyBob3VycyBpbiBhbmQgd2FzIG5vIGxvbmdlciBwbGF5aW5nIG15IEEgZ2FtZSwgYWR2aWNlIG9uIHRoYXQgc3BlY2lmaWNhbGx5IHdpbGwgYWxzbyBiZSBhcHByZWNpYXRlZC4gVGhhbmtzLgpZb3UgZG9uIGtub3cgbWUsIHlldCB5b3UgaW1tZWRpYXRlbHkgd2FudCB0byBhY2N1c2UgbWUgb2Ygc29tZXRoaW5nIHByZXR0eSBhd2Z1bCwga2lja2luZyBtZSBvdXQgb2YgdGhlIHRyaWJlLiBZb3UgaW1tZWRpYXRlbHkgc2VwYXJhdGUgc29tZW9uZSB3aG8gaXMgYWN0dWFsbHkgdmVyeSBzaW1pbGFyIGluIHBvbGljeSBnb2FscyB0byB5b3UuIFRoYXQgY29tcGxldGVseSB1bm5lY2Vzc2FyeSBhbmQsIHF1aXRlIGZyYW5rbHksIG9mZmVuc2l2ZS4uIApBbnRob255IFdlaW5lciBpcyBjYWxsaW5nIHJlc3RhdXJhbnQgaW5kdXN0cnkgcGFscyBmb3Igam9iIGxlYWRzClRoZW4gYXNrZWQgTWFyc2hhbGwgaWYgdGhlIG1vbmV5IHdhcyBzdGlsbCBpbiB0aGUgY2FyIG9yIGRpZCBoZSBnZXQgcmlkIG9mIGl0IGFuZCBoZSBzdGF0ZWQsIGluIHRoZSBjYXIgV2VuZG92ZXIgUG9saWNlIG9mZmljZXIgUmlja3kgR2lsZXMgSnIuIHdyb3RlIGluIGEgcG9saWNlIHJlcG9ydC4KVXAgdG8gYWJvdXQgMzAgaW4gdG90YWwuIFRoZSBtYWxlIHdpbGwgZGlnIGludG8gdGhlIG5lc3QgZXZlcnkgZGF5IHRvIGNoZWNrIHRoZSB0ZW1wZXJhdHVyZSBpbnNpZGUgdGhlIG1vdW5kLiAKMU90aGVyIHBsYXN0aWMgY2xvZ3Mgd2l0aCBob2xlcyBpbiBhcmUgYXZhaWxhYmxlLiBUaGUgZGVtYW5kIHdhcyBvcmlnaW5hbGx5IHNvIGhpZ2ggdGhhdCB3YWl0aW5nIGxpc3RzIHdlcmUgY29tbW9uLgpBbHNvIGZ1biBmYWN0IHRoZXkncmUgZ3JlYXQgYmVmb3JlIGJlZCB0byBtaXRpZ2F0ZSBhIGhhbmdvdmVyIHRoZSBuZXh0IG1vcm5pbmchIS4gCldlbGwgdGhlIG9ubHkgcmVhc29uIEkgY2FuIHRoaW5rIG9mIHRoYXQgYSB3b21hbiB3b3VsZCBzYXkgInllcyIgd2hlbiBzaGUgbWVhbnMgIm5vIiB3b3VsZCBiZSBpZiB0aGUgY2lyY3Vtc3RhbmNlcyBtYWRlIGhlciBmZWVsIGFzIGlmIHRvIGFuc3dlciAibm8iIHdvdWxkIGJlIHVuc2FmZSBvciBpZiB0aGUgIm5vIiB3b3VsZCBvdGhlcndpc2UgbmVnYXRpdmVseSBhZmZlY3QgaGVyLiBTYW1lIGZvciByZW1haW5pbmcgc2lsZW50LiBFaXRoZXIgb2YgdGhvc2Ugc2l0dWF0aW9ucyBtZWFucyB3aG9ldmVyIGlzIGFza2luZyB0aGUgd29tYW4gaXMgbm90IGludGVyZXN0ZWQgaW4gbWFraW5nIHN1cmUgdGhlIGNvbnNlbnQgdGhleSBnYWluIGlzIGVudGh1c2lhc3RpYyBhbmQgYWZmaXJtYXRpdmUgd2hpY2ggaXMgdGhlaXIgcHJvYmxlbSBub3QgdGhlIHdvbWFuIG5vLCB3b21lbiBkb24gaGF2ZSBhIGR1dHkgdG8gcHV0IHRoZW1zZWx2ZXMgaW4gaGFybSB3YXkgb3Igb3RoZXJ3aXNlIGF0IHJpc2sgYnkgYW5zd2VyaW5nIGhvbmVzdGx5IHRvIG1lbiBvciB3b21lbiB3aG8gYXJlIHRocmVhdGVuaW5nIG9yIGJsYWNrbWFpbGluZyB0aGVtIHRvIHNheSB5ZXMuIExpa2V3aXNlIG1lbiBkbyBub3QgaGF2ZSBhIGR1dHkgdG8gcHV0IHRoZW1zZWx2ZXMgaW4gaGFybSB3YXkgb3Igb3RoZXJ3aXNlIGF0IHJpc2sgaW4gc2ltaWxhciBzaXR1YXRpb25zLgpCcml0aXNoIENvbHVtYmlhIHZpbmV5YXJkcyBhcmUgcHJvdmluZyBwcmltZSBmb3IgZ3Jvd2luZyBhbGwgc29ydHMgb2YgUGlub3QsIGFuZCBoZXJlJ3MgYSBxdWljayBsb29rIGF0IHRocmVlIHJ1bm5pbmcgdGhlIFBpbm90IHNwZWN0cnVtVGhlIFBpbm90IGZhbWlseSBvZiBncmFwZXMgY29udGludWVzIHRvIGludHJpZ3VlLiBHZW5ldGljYWxseSBzcGVha2luZywgYWxsIHRoZSBQaW5vdHMgYXJlIHRoZSBzYW1lIGdyYXBlIHZhcmlldHkgd2hldGhlciB0YWxraW5nIEJsYW5jLCBHcmlzLCBOb2lyLCBvciBNZXVuaWVyICh0byBuYW1lIGp1c3QgdGhlIG1haW4gZmV3IFBpbm90cyEpLgpMZWJlbnNsYW5ndGFmZWxkaWVuc3RzIFdlYnNlaXRlClRoZSBndXkgY2FuIGJlIGludGVyZXN0ZWQgaW4gYm90aCBvZiB0aGVtLCBidXQgdGhlIHdvbWVuIGhhdmUgbm8gaW50ZXJlc3RzIG91dHNpZGUgaGltLgpEaWUgU3RhbmRhcmQgWmltbWVyIHdlcmRlbiBtaXQgNjAgUXVhZHJhdG1ldGVyIGRpZSBncnRlbiBpbiBkZXIgU3RhZHQgc2VpbiB1bmQgbWl0IEJhZGV6aW1tZXJuLCBkaWUgYW4gZWluIFNwYSBlcmlubmVybiwgYXVzZ2VzdGF0dGV0IHNlaW4uIEluIGRlciBDbHViIExvdW5nZSBFdGFnZSB3aXJkIGRpZSBHc3RlIGV4a2x1c2l2ZXIgU2VydmljZSwgd2llIHp1bSBCZWlzcGllbCBwcml2YXRlciBDaGVjayBpbiB1bmQgS29uZmVyZW56ZWlucmljaHR1bmdlbiwgZXJ3YXJ0ZW4uIApTZXQgaW4gdGhlIGhlYXJ0IG9mIEJhbHRpbW9yZSwgdGhpcyBob3RlbCBpcyBjbG9zZSB0byB0aGUgUGllciBTaXggQ29uY2VydCBQYXZpbGlvbiBhbmQgdGhlIE5hdGlvbmFsIEFxdWFyaXVtIGluIEJhbHRpbW9yZSwgYXMgd2VsbCBhcyB0aGUgQW1lcmljYW4gVmlzaW9uYXJ5IEFydCBNdXNldW0uIEFkZGl0aW9uYWwgYXR0cmFjdGlvbnMgaW5jbHVkZSB0aGUgVVNTIENvbnN0ZWxsYXRpb24sIHRoZSBGZWxsIFBvaW50IHB1YiBkaXN0cmljdCBhbmQgdGhlIHNob3BzIGF0IEhhcmJvcnBsYWNlLgpSaXRjaGllLCBUcm9sbHosIFR3ZWx2ZSBNaWxlIFJvYWQsIENhaXRsaW4ncyBXYXksIENTSSwgU3VwZXJuYXR1cmFsLCBhbmQgSm9obiBUdWNrZXIgTXVzdCBEaWUuIENhdGNoIGhlciBub3cgaW4gdGhlIGp1c3QgcmVsZWFzZWQgQXN0ZXJvaWQ6IEZpbmFsIEltcGFjdCwgYW5kIGhlciB1cGNvbWluZyBtb3ZpZSBXQVJDUkFGVCBkdWUgb3V0IGxhdGVyIHRoaXMgeWVhckFubmEgVmFuIEhvb2Z0IHBsYXlzIEF1cmEgaW4gdGhlIFNjaSBGaSBDaGFubmVsIG1vZGVybiBkYXkgcmVtYWtlIG9mIHRoZSBjbGFzc2ljIGNvbWljIHNlcmllcyBGbGFzaCBHb3Jkb24uIFNoZSBpcyB0aGUgc3Ryb25nIHdpbGxlZCBkYXVnaHRlciBvZiB0aGUgZXZpbCBkZXNwb3QgTWluZywgYW5kIGhlciBiZWF1dHkgb2Z0ZW4gbGVhZHMgb3RoZXJzIHRvIHVuZGVyZXN0aW1hdGUgaGVyLiAKIktodiBwZXV0LCBlbiBlZmZldCwgc2UgbGlyZSAia2EgaGF2IiAoKSwgY29tbWUgdW4gcHJlLiAKTEFSSVZJUkUsIFJheW1vbmQgSnVsZXMgICBvZiBXZWxsYW5kIHBhc3NlZCBhd2F5IHBlYWNlZnVsbHkgYXQgdGhlIEhhbWlsdG9uIEdlbmVyYWwgSG9zcGl0YWwgb24gQXByaWwgMTksIDIwMTEgYXQgdGhlIGFnZSBvZiA1NC4gSGUgd2FzIHRoZSBiZWxvdmVkIGh1c2JhbmQgb2YgTGlzZSAoUGV0aXQpIGFuZCBkZXZvdGVkIGZhdGhlciBvZiBQYXVsLiBSYXltb25kIHdhcyB0aGUgY2hlcmlzaGVkIHNvbiBvZiBKZWFubmluZSAoRGVtZXJzKSBMYXJpdmlyZSBhbmQgdHJlYXN1cmVkIGJyb3RoZXIgb2YgTG91aXNlIFZhY2hvbiAoUm9uYWxkKSwgTWFyYyAoSGVhdGhlcikgYW5kIERlbmlzZSBTdC4gCkl0IG5vdCB0aGF0IGdyZWF0LiBIb25lc3RseSBpZiB0aGV5IHdvdWxkIHJlcGF2ZSB0aGUgcm9hZHMgYW5kIHBlb3BsZSB3b3VsZG4gZHJpdmUgMTAgdW5kZXIgaW4gdGhlIGxlZnQgbGFuZSwgSSB3b3VsZCBtdWNoIG1vcmUgZW5qb3kgaXQuSSBsaXZlIG5lYXIgUGFyaXMgTXRuLCBhbmQgZm9ydHVuYXRlbHkgd29yayBmcm9tIGhvbWUuIEJ1dCB3aGVuIEkgYW0gb3V0IGFuZCBhYm91dCwgaXQgcmlkaWN1bG91cyBob3cgc2xvdyBwZW9wbGUgZHJpdmUgaGVyZS4gCkdvbGVtIGFsaXZlISBJcyB0aGlzIHRoZSBmaXJzdCBjb25maXJtYXRpb24gd2UgZ290dGVuIG9mIGhpcyBzdXJ2aXZhbCBwb3N0IEdNPyBIb3BlZnVsbHkgaGUgc2hvdyB1cCBpbiB0aGUgZnV0dXJlLgpUaGUgcG9zc2libGUgZGFuZ2VyIGlzIHRodXMgYWRkaWN0aW9uLiBGb3IgdGhlIHZhc3QgbWFqb3JpdHkgb2YgcGxheWVycyBob3dldmVyIHBva2VyIGNhbiBiZSBwbGF5ZWQgcmVzcG9uc2libHkgd2l0aG91dCBwb3NpbmcgYW55IGRhbmdlciB0byB0aGVpciBsaXZlcyBvciBmaW5hbmNlcy4gKEZ1bGwgQW5zd2VyKS4gClBhcmEgaW50ZXJmZXJpciBvIGludGVudGFyIGludGVyZmVyaXIgZW4gZWwgYnVlbiBmdW5jaW9uYW1pZW50byBkZSBlc3RhIFJlZCBvIGltcGVkaXIgYSBvdHJvcyBlbCB1c28gZGUgZXN0YSBSZWQsIG8gZGUgYWxnbiBtb2RvIHF1ZSBpbnRlcnJ1bXBhIGVsIGZsdWpvIG5vcm1hbCBkZWwgZGlsb2dvIGNvbiB1biBubWVybyBleGNlc2l2byBkZSBtZW5zYWplcyAoYXRhcXVlIG1hc2l2bykgZGVzdGluYWRvcyBhIGVzdGEgUmVkLCBvIHF1ZSBkZSBhbGduIG90cm8gbW9kbyBhZmVjdGUgbmVnYXRpdmFtZW50ZSBhIGxhIGNhcGFjaWRhZCBkZSBvdHJhcyBwZXJzb25hcyBkZSB1c2FyIGVzdGEgUmVkOwpUaGVyZSB3YXMgYSB2ZXJ5IHN0cm9uZyBmZWVsaW5nIG9mIGluc3RhYmlsaXR5IGR1cmluZyBoaXMgcmVpZ24gYW5kIGEgbG90IG9mIHRoaXMgY2FuIGJlIHNob3duIHRvIGhhdmUgb3JpZ2luYXRlZCBiZWZvcmUgdGhlbHJlZCBhc2NlbmRlZCB0aGUgdGhyb25lLCBkdXJpbmcgdGhlIHJlaWduIG9mIHRoZWxyZWQncyBoYWxmIGJyb3RoZXIgRWR3YXJkIHRoZSBNYXJ0eXIuIER1cmluZyBFZGdhcidzIHJlaWduLCBhIGxvdCBvZiBsYW5kIHRoYXQgdGhlIENodXJjaCBoYWQgbG9zdCB0byBtYW55IG5vYmxlIGxhbmRvd25lcnMgd2FzIHJldHVybmVkIHRvIHRoZSBDaHVyY2guIEFmdGVyIEVkZ2FyJ3MgZGVhdGggaW4gOTc1LCB0aGVyZSB3ZXJlIGEgbnVtYmVyIG9mIGF0dGFja3Mgb24gQ2h1cmNoIHByb3BlcnR5IGFuZCB0aGUgYXJjaGJpc2hvcHMgaW4gdGhlIG5vcnRoIG9mIEVuZ2xhbmQgcmVzZW50ZWQgYmVpbmcgcnVsZWQgYnkgdGhlIHNvdXRoLiBUaGlzIHRyZW5kIGNvbnRpbnVlZCBpbiB0aGVscmVkJ3MgcmVpZ24sIGJ1dCBkaWQgbm90IG9yaWdpbmF0ZSBpbiBpdC4gRWR3YXJkIHdhcyBub3QsIGR1cmluZyBoaXMgcmVpZ24sIGEgcG9wdWxhciBraW5nLCB5ZXQgaGlzIGRlYXRoIGluIENvcmZlIGFsc28gcGVycGV0dWF0ZWQgdGhlIGF0bW9zcGhlcmUgb2YgaW5zdGFiaWxpdHkuIEFzIEVkd2FyZCdzIGRlYXRoIHdhcyBub3QgYXZlbmdlZCwgbm9yIHdhcyBoZSBnaXZlbiBhIHByb3BlciBmdW5lcmFsIHVudGlsIDk4MCwgaXQgc2VlbWVkIHRoYXQgRW5nbGFuZCB3YXMgdW5kZXJnb2luZyBhIHBlcmlvZCBvZiBpbnN0YWJpbGl0eSBxdWl0ZSB1bmxpa2UgdGhlIEdvbGRlbiBBZ2UgZXhwZXJpZW5jZWQgZHVyaW5nIEVkZ2FyJ3MgcmVpZ24uIFRoZSBwb3B1bGF0aW9uIGF0IHRoaXMgdGltZSB3YXMgdmVyeSBzdXBlcnN0aXRpb3VzICAgRWR3YXJkIHRoZSBNYXJ0eXIncyB0aXRsZSBpdHNlbGYgd2FzIGR1ZSB0byAnbWlyYWNsZXMnIHRoYXQgb2NjdXJyZWQgYXJvdW5kIHRoZSBhcmVhIHdoZXJlIGhpcyBib2R5IGxheS4gVGhpcyBtZWFudCB0aGF0IHBlb3BsZSB3ZXJlIHBlcmhhcHMgbW9yZSBsaWtlbHkgdG8gcXVlc3Rpb24gdGhlbHJlZCdzIHJpZ2h0IHRvIGxlYWQuIFdoYXQgaXMgY2VydGFpbiBpcyB0aGF0IG1hbnkgcGVvcGxlIGJldHJheWVkIHRoZWxyZWQncyBkZWNpc2lvbnMgYXQgb25lIHN0YWdlIG9yIGFub3RoZXIsIGluY2x1ZGluZyBoaXMgc29uIEVkbXVuZCB3aG8gZGVmaWVkIHRoZWxyZWQgYnkgbWFycnlpbmcgU2lnZWZvcnRoJ3Mgd2lkb3cgYW5kIHRha2luZyBwb3NzZXNzaW9uIG9mIHRoZSBEYW5lbGF3LiBJbiBmYWN0LCBhZnRlciB0aGVscmVkIGhhZCBmbGVkIHRvIHRoZSBJc2xlIG9mIFdpZ2h0IGFuZCBOb3JtYW5keSBhZnRlciBTd2VpbidzIGludmFzaW9uIGluIDEwMTMgYW5kIGhpcyBzdWJzZXF1ZW50IGRlYXRoIGluIDEwMTQsIHRoZWxyZWQgd2FzIG9ubHkgYWxsb3dlZCB0byByZXN1bWUgYmVpbmcga2luZyBvbiBjZXJ0YWluIGNvbmRpdGlvbnMgbmVnb3RpYXRlZCBieSB0aGUgbm9ibGVzIG9mIEVuZ2xhbmQgYW5kIHRoZWxyZWQncyBzb24gRWR3YXJkLiBUaGlzIHN1Z2dlc3RzIHRoYXQgdGhlcmUgd2FzIGEgc3Ryb25nIGZlZWxpbmcgb2YgaW5zdGFiaWxpdHkgYW5kIGRpdmlzaW9uIHdpdGhpbiB0aGVscmVkJ3Mga2luZ2RvbSwgYW5kIGFzIGEgcmVzdWx0IG9mIHRoaXMgZGl2aXNpb24sIGhpcyBkb21pbmlvbnMgd2VyZSBtb3JlIGVhc2lseSBjb25xdWVyZWQuCkxhZHkgR2FnYSBzaG9ja2VkIGEgZ3JvdXAgb2YgbGF3eWVycyBieSBsYXVuY2hpbmcgaW50byBhIGZvdWwgbW91dGhlZCByYW50IGFib3V0IGhlciBmb3JtZXIgcGVyc29uYWwgYXNzaXN0YW50IGR1cmluZyBhIHN3b3JuIGRlcG9zaXRpb24gZm9yIGFuIG9uZ29pbmcgY291cnQgY2FzZS4KQXNrTWVBYm91dFNwcmlua2xlcyAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpZZXQgZXZlcnl0aGluZyBidXQgdGhlIGpvaW4gdG8gdGhlIGJhc2UgaW4gbWluZSBpcyB3aXRob3V0IHBpbm5pbmcuIApUaG91Z2ggaGUgY291bGQgcXVpdCBzb21lIHByb2ZpdCBpbiBlYWNoIGdhbWUgaGUgcGxheXMgYnkgbGltaXRpbmcgaGlzIGNhcGFiaWxpdHkgdG8gcGxheSB0aGUgcGxheWVycyAsIGhlIGNhbiBjb25zaWRlcmFibHkgbXVsdGlwbHkgaGlzIGhvdXJseSB3aW4gcHJpY2UgYnkgcGxheWluZyBxdWl0ZSBhIGZldyBnYW1lcyBhdCB3aGVuLiBUaGlzIGNhbiBiZSBhbiBodWdlIGV4YW1wbGUuIApJIGhvcGUgeW91IHVuZGVyc3RhbmQgd2h5IHRoaXMgaXMuIApBbHMgaGlqIG9wIGRlIHdhY2h0bGlqc3QgbW9ldCBnYWFuIHN0YWFuLCB6aWpuIHdlIHJ1aW0gZWVuIGphYXIgdmVyZGVyIGVuIHphbCBkZSB6aWVrdGUgdGUgdmVyIHppam4gZ2V2b3JkZXJkLiBXZSB3aWxsZW4gZGF0IGRlIGRva3RlciBKYW4gbiBzdGFiaWxpc2VlcnQuLiAKQW5vdGhlciB3YXkgdG8ga2lsbCBhIHByZWduYW50IGZlbWFsZSBTaW0gaXMgdG8gd2FpdCB1bnRpbCB0aGVpciBodW5nZXIgaXMgcmVhbGx5IGxvdywgaXQgd29uJ3QgbmVjZXNzYXJpbHkgYmUgcm9jayBib3R0b20gKGJlY2F1c2UgdGhleSBhcmUgcHJlZ25hbnQgYW5kIHRoZWlyIG5lZWRzIGRlY2F5IHF1aWNrZXIgYW5kIGRpZSBxdWlja2VyKSwgYnV0IHRoZW4gdGhleSB3aWxsIGRyb3AgdG8gdGhlIGZsb29yIGFuZCB0aGUgZ3JpbSByZWFwZXIgd2lsbCBjb21lIGFuZCB0YWtlIGNhcmUgb2YgdGhlIHJlc3QuIApXaGljaCBpcyB3aHkgSSBzdWluZyBTdGVwaGFuaWUgTWV5ZXIgYXMgd2VsbC4gTm90IGZvciBzdGVhbGluZyBteSBpZGVhcyAoc2hlIGRpZG4gYnV0IGZvciBzdGVhbGluZyB0aGUgc2V4dWFsIGFuZCBlbW90aW9uYWwgaGVhbHRoIG9mIGEgZ2VuZXJhdGlvbiBvZiB5b3VuZyB3b21lbi4gQnJlYWtpbmcgRGF3biBpcyB0aGUgbGFzdCBpbiBNZXllciB0ZWVuIHZhbXBpcmUgc2VyaWVzICJUd2lsaWdodCIgYW5kIGluIGNhc2UgeW91IGFyZSBsaXZpbmcgdW5kZXIgYSByb2NrLCBpdCBpcyBhIGJvb2sgdGhhdCBhbGwgZ2lybHMgYmV0d2VlbiB0aGUgYWdlcyBvZiA4IGFuZCAxOCBzZWVtIG15c3RlcmlvdXNseSBjb21wZWxsZWQgdG8gcmVhZC4uIApCaWcgc2hvdXQgb3V0IHRvIFN0aXh4IGZvciBrZWVwaW5nIGl0IGdvaW5nIGFuZCBkb2luZyByaWdodCBieSBoaXMgcGxheWVyIGJhc2UuIEV2ZXJ5dGhpbmcgd2FzIGFsd2F5cyBzdXBlciBzbW9vdGggdGhlcmUsIG5ldmVyIGFueSBwcm9ibGVtcy4gUmVhbGx5IGdvb2QgZ2FtZXMgYW5kIHByb21vcyB0b287IGp1c3QgYSBncmVhdCBjbHViIGFsbCBhcm91bmQuIEl0IHdhcyBmdW4gd2hpbGUgaXQgbGFzdGVkLgpUaGUgcGVvcGxlIHdobyBhcmUgc2h5IGFuZCBhcmUgaW50aW1pZGF0ZWQgYnkgdGhlc2UgcG9rZXIgcm9vbXMgZmluZCBzb2xhY2UgYW5kIGNvbWZvcnQgaW4gcGxheWluZyBvbmxpbmUgcG9rZXIgaW4gdGhlIGNvbWZvcnRzIG9mIHRoZWlyIGhvbWUuIE1vcmVvdmVyLCB0aGV5IGFyZSBjaGVhcGVyLCB5b3UgZG9uJ3QgaGF2ZSB0byBkcmVzcyB1cCwgc3BlbmQgb24gZ2FzIGFuZCB3YXN0ZSB0cmF2ZWwgdGltZSBqdXN0IHRvIHBsYXkgcG9rZXIgYW5kIG5vIHRpcHBpbmcgZGVhbGVycyB0b28hLiAKWW91J2xsIHdhbnQgdGhlIHBpbGxvdyB0byBiZSBzbWFsbCBhbmQgZmxhdCwgc28geW91IGNhbiBzbGlwIGl0IGludG8geW91ciByZWd1bGFyIHBpbGxvd2Nhc2UsIG9uIHRvcCBvZiB5b3VyIHJlZ3VsYXIgcGlsbG93LiBIZXJlJ3MgYSBzd2VldCBidXQgcG90ZW50IG1peHR1cmUgZm9yIGFuIGhlcmJhbCBwaWxsb3c6LiAKTGFzdCB3ZWVrLCBoZSBnb3QgYmVhdCB1cCBieSBPcmVnb24gdG93YXJkIHRoZSBlbmQgb2YgdGhlIGdhbWUsIGJ1dCBzYWlkIGhlIHdhcyBmaW5lIHRoaXMgd2Vlay4uIApEZWdyZWUgdmVyaWZpY2F0aW9ucyBhcmUgb2J0YWluZWQgYnkgdmlzaXRpbmcgdGhlIE9mZmljZSBvZiB0aGUgUmVnaXN0cmFyIGxvY2F0ZWQgb24gdGhlIGJvdHRvbSBmbG9vciBvZiBMYW5nZG9uIEhhbGwuIEEgbGV0dGVyIG9mIGdvb2Qgc3RhbmRpbmcgY29uZmlybXMgdGhhdCB5b3UgaGF2ZSBhIDIuMCBjdW11bGF0aXZlIGluc3RpdHV0aW9uYWwgR1BBIG9yIGhpZ2hlciBhdCBBdWJ1cm4gVW5pdmVyc2l0eS5UbyBwcm9kdWNlIGEgbGV0dGVyIG9mIGdvb2Qgc3RhbmRpbmc6TG9nIGludG8gQVVBY2Nlc3NTZWxlY3QgIlN0dWRlbnQgTWVudSJDbGljayB0aGUgbGluayB0aXRsZWQgIkxldHRlciBvZiBHb29kIFN0YW5kaW5nIk9mZmljaWFsIHBhcGVyIHRyYW5zY3JpcHRzIGFyZSAkMTQuMDAgZWFjaC5PZmZpY2lhbCBlbGVjdHJvbmljIHRyYW5zY3JpcHRzIGFyZSAkMTIuMDAgZWFjaC4oVHJhbnNjcmlwdHMgYXJlIHByb2Nlc3NlZCBpbiB0aGUgb3JkZXIgdGhleSBhcmUgcmVjZWl2ZWQuIE5vcm1hbCBwcm9jZXNzaW5nIHRpbWUgaXMgYmV0d2VlbiAzIDUgYnVzaW5lc3MgZGF5cy4gUHJvY2Vzc2luZyB0aW1lIGRvZXMgbm90IHJlZmxlY3QgZGVsaXZlcnkgdGltZS5JbiBsaWV1IG9mIGF0dGFjaG1lbnQsIGVudGVyIGFjY291bnQgbnVtYmVyIGFzc2lnbmVkIGJ5IGFwcGxpY2F0aW9uIHByb2Nlc3Npbmcgc2VydmljZSAoaWU6IEFNQ0FTLCBMU0FDLCBQSEFSTUNBUywgUFRDQVMsIE5VUlNJTkdDQVMpIGluIGF0dGVudGlvbiBsaW5lIG9mIHJlY2lwaWVudCBhZGRyZXNzLlRoZSB0cmFuc2NyaXB0IGlzIGEgY29tcGxldGUgcmVjb3JkIG9mIGEgc3R1ZGVudCdzIGVucm9sbG1lbnQgYXQgQXVidXJuIFVuaXZlcnNpdHksIGluY2x1ZGluZyBhbGwgdW5kZXJncmFkdWF0ZSwgZ3JhZHVhdGUgYW5kIHByb2Zlc3Npb25hbCBjb3Vyc2VzLgpUaGUgaWRlYWwgc3R1ZHkvcGxheSByYXRpbyB3aGVuIHlvdSBmaXJzdCBzdGFydCB0YWtpbmcgcG9rZXIgc2VyaW91c2x5IGlzIGFyb3VuZCA1MC81MCB1bnRpbCB5b3Uga25vdyB5b3Ugd29uIGxvc2UgeW91ciBhc3MuIFRoZSBtb3JlIGhhbmRzIHlvdSBnZXQgdW5kZXIgeW91ciBiZWx0IHRoZSBtb3JlIHRoaXMgcmF0aW8gd2lsbCBzaGlmdCB0b3dhcmRzIDEwLzkwLgpJbiBtb3N0IGxhbmd1YWdlcywgaW5jbHVkaW5nIG1vc3Qgb2YgYXV4aWxpYXJ5IGxhbmd1YWdlcywgaXQgaXMgYSBsb2FuIHdvcmQgZnJvbSBBbmNpZW50IEdyZWVrICAoZG1va3JhdGEpLCBmcm9tICAoZG1vcywgImNvbW1vbiBwZW9wbGUiKSArICAoa3J0b3MsICJydWxlIikuLiAKTmF0aXZlICAgYXR0ZW5kZWQgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSwgQmVya2VsZXksIGFuZCBlbnRlcmVkIHRoZSBiYW5raW5nIGFuZCBmaW5hbmNlIHdvcmxkIGFmdGVyIGdyYWR1YXRpbmcgaW4gMTk3OC4gCkFzIGZvciB0aGUgY2FibGVzIGJlaW5nIGJldHRlciBzb3VuZGluZywgdGhhdCBhIGxvYWQgb2YgY3JhcC4gCkEga2V5IGZvciBldmVyeW9uZS4gVGhlIGJvYXQgcmlkZSBpcyBhYm91dCAxMCBtaW51dGVzIG9yIHNvLiAKV2hhdCB3YXMgaXQgbGlrZSBvdmVyIHRoZXJlPyIuIAoiSGUgd2FzIGdvaW5nIHVwIGFnYWluc3QgdGhlIGJpZyBjaGlwIGd1eXMuIEluIHBva2VyLCBpdCdzIHRvdWdoIHRvIG1ha2UgYW55IGNoaXBzIGlmIHlvdSBkb24ndCBoYXZlIGFueSBjaGlwcy4iLiAKVGhlIGRpc3RyaWN0IGNvdXJ0IGZvdW5kIHRoYXQgdGhlIGVkaXRpbmcgaGFkIGluZGVlZCBpbXBhaXJlZCB0aGUgaW50ZWdyaXR5IG9mIHRoZSB3b3JrLCBhbmQgaGFkIGNhdXNlZCBpcnJlcGFyYWJsZSBkYW1hZ2UuIFRoYXQgaXMsIHNvbWUgb2YgdGhlIHBlb3BsZSB3aG8gaGFkIHNlZW4gdGhlaXIgbXV0aWxhdGVkIHdvcmsgd291bGQgbm90IHdhdGNoIGZ1cnRoZXIgZXBpc29kZXMgYW5kIHdvdWxkIG5vdCBiZWNvbWUgTW9udHkgUHl0aG9uIGZhbnMuIE9uIHRoZSBvdGhlciBoYW5kLCB0aGUganVkZ2UgZm91bmQgdGhhdCBpZiBBQkMgd2VyZSB0byB3aXRoZHJhdyB0aGUgc2Vjb25kIHNwZWNpYWwgZnJvbSB0aGVpciBwcm9ncmFtIGEgZmV3IGRheXMgYmVmb3JlIHRoZSBkYXRlIHRoYXQgaGFkIGJlZW4gYW5ub3VuY2VkIGluIFRWIHNjaGVkdWxlcywgQUJDIHdvdWxkIGFsc28gc3VmZmVyIGRhbWFnZQpFdmVuIGlmIHRoZXkgd2VyZW4gdGhlaXIgZnJpZW5kcyB3ZXJlLiAKSW4gaWhyZW0gV29obmhlaW0gd2FyZW4gYWxsZSBTdHVkZW50ZW4gcmljaHRpZ2Uga28gaGlwcGllcywgenVtaW5kZXN0IHZvbiBkZXIgRWluc3RlbGx1bmcgaGVyIHVuZCBkaWUgdmVyZGllbmVuIHdvaGwgYWxsZSBzbyB2aWVsLiBEZW1uYWNoIGdpYnQgZXMgd29obCB0YXRzY2hsaWNoIHZpZWxlICJQc2V1ZG8gRm9vZGllcyIgLCBkaWUgc2ljaCBlaW5lbiBQb3JzY2hlIGxlaXN0ZW4ga25uZW4uIFp1bWluZGVzdCBpbiBlaW5lbSBMYW5ka3JlaXMgaW4gbWVpbmVyIE5oZSBpc3Qga3J6bGljaCBlaW4gQ1NVIExhbmRyYXQgZHVyY2ggZWluZW4gRlcgTWFubiBlcnNldHp0IHdvcmRlbi4uIApCZWZvcmUgdGhhdCBzZW50ZW5jZSBjYW1lIGRvd24gaSB3YXMgYWRhbWFudGx5IGFnYWluc3QgYSBtYW5kYXRvcnkgbWluaW1pbXMuIG5vdyBpbSByZWNvbnNpZGVyaW5nLiBFc3BlY2lhbGx5IGluIGxpZ2h0IG9mIGp1ZGdlcyBnaXZpbmcgdGhhdCBzd2ltbWVyIDZtbyBmb3IgcmFwZSBhbmQgdGhpcyBvdGhlciBvbmUgc2F5aW5nIGdvZCB0b2xkIGhpbiBhIHNleCB0cmFmZmlja2VyIHdhcyBpbm5vY2VudCBldGMuCllvdSBnb3QgY2F1Z2h0IHVwIGluIGl0LiAKQ29tcGFuaWVzIGFsc28gcHJvbW90ZSBtYXNzYWdlcyBhcyBwYXJ0IG9mIGhlYWx0aCBhbmQgd2VsbG5lc3MgcHJvZ3JhbXMuLiAKV2UgZ28gZGVlcCBvbiB0aGUgU09BUCBBUEksIFJFU1QgQVBJLCBCdWxrIEFQSSwgU3RyZWFtaW5nIEFQSSwgT3V0Ym91bmQgTWVzc2FnaW5nIGFuZCBBcGV4IENhbGxvdXRzLiAKVGhleSBoYXZlIHNwYSB0aGV5IHJ1biBmb3IgcGVvcGxlIG91dHNpZGUgYW5kIGluc2lkZSBzY2hvb2wgYW5kIGhhdmUgdGhlIHN0dWRlbnRzIHRoYXQgYXJlIGFsbW9zdCBkb25lIHdvcmtpbmcgdGhlcmUuSSByZWFsbHkgZXhjaXRlZCB0byBkbyB0aGlzIHRob3VnaCEgSSBqdXN0IGdvdHRhIGtlZXAgbXkgaGVhZCBpbiBpdCFJIGFtIGFsc28gYSBMTVQuIEl0IGlzIGEgcHJvZmVzc2lvbmFsIHN0YW5kYXJkIGluIEFMTCBjYXJlIGdpdmluZyByZWxhdGVkIG9jY3VwYXRpb25zIG5vdCB0byBkYXRlIHlvdXIgY2xpZW50cywgb3IgcGF0aWVudHMgYW5kIGlzIHZpZXdlZCBhcyB1bmV0aGljYWwuIApNYXliZSBJIGFtIHVuZGVyZXN0aW1hdGluZyBteSBvd24ga2lkIHBvcHVsYXJpdHksIGJ1dCBwYXJlbnRzIGF0IGhlciBwcmVzY2hvb2wgYXJlIHN1cGVyIHNvY2lhbCBhbmQgZWFnZXIgdG8gY2hhdC4gTWF5YmUgaXQgd2FzIG1lIGFsbCBhbG9uZyBhbmQgc2hlIGp1c3QgYmV0dGVyIGF0IGx1cmluZyBwZW9wbGUgaW4gKHNlZSBzdWRkZW5seSB5b3UgYWRvcHQgdGhlIHNoeW5lc3Mgb2YgU2VhdHRsZS4pLiAKSGUgc2FpZCBpdCBtdXN0IGJlIGhlcnMhIFNvIGZ1Y2tlZCB1cC4gCjIwMTggMDIgNjYgQW5ub3VuY2VtZW50OiBUaGUgUG9zdCBuZXcgZXZlcnkgd2VlayBvbiBoMmcyOiBGZWF0dXJlZCBHdWlkZSBFbnRyaWVzOiBGaW5kIHRoZW0gb24gdGhlIEZyb250IFBhZ2UhIFlvdSBhYnNvbHV0ZWx5IGNhbm5vdCBsaXZlIHdpdGhvdXQgdGhpcyBpbmZvcm1hdGlvbiEgU2VlIHRoZSBleGNpdGluZyBhcnQhIGgyZzIgUG9zdDogWWVzLCBpdCdzIG5ldyBldmVyeSBNb25kYXksIGFsdGhvdWdoIHRoZSBzbmVha3kgUG9zdCBFZGl0b3IgcHV0cyBpdCB1cCBvbiBTdW5kYXksIHNvIHlvdSBjYW4gcmVhZCB0aGUgYWR2YW5jZSBjb3B5IHRoZW4gYW5kIGRvIHRoZSBxdWl6emVzIGJlZm9yZSB0aGUgbGF6eSBwZW9wbGUgd2hvIHdhaXQgdW50aWwgTW9uZGF5IG1vcm5pbmcuIFJlYWQgdGhlIGgyZzIgUG9zdCBsYXRlbHk/IFdoeSB0aGUgaGVjayBub3Q/IFBlb3BsZSBjb21lIGZyb20gbWlsZXMgKGtpbG9tZXRlcnMpIGFyb3VuZCB0byByZWFkIGl0LiAKWW91IGFyZSBiaWFzZWQsIHNpciwgYW5kIHlvdSBhcmUgd3JvbmcuLiAKU28sIHlvdSBzZWUgdGhlIGJpbmQgdGhhdCBkZXJtYXRvbG9naXN0cyBhbmQgcGF0aWVudHMgYXJlIGluIHdoZW4gaXQgY29tZXMgdG8gYWNuZSBhbmQgYW50aWJpb3RpY3M/IEl0J3MgbmV2ZXIgZ29vZCB3aGVuIGEgdHJlYXRtZW50IHBsYW4gaW52b2x2ZXMgY2hvb3NpbmcgYmV0d2VlbiB0aGUgbGVzc2VyIG9mIHR3byBldmlscy4gUmVzZWFyY2hlcnMgaGF2ZSBiZWVuIHVyZ2luZyB0aGUgZGV2ZWxvcG1lbnQgb2YgYWx0ZXJuYXRpdmUgdHJlYXRtZW50cyBmb3IgeWVhcnMuIApUaGUgZm9ybWVyIGlzIG1vcmUgY29tbW9uLCBidXQgSSd2ZSBleHBlcmllbmNlZCBib3RoIG9uY2UuIApDcmFpZ3NsaXN0LCBmb3Igc3RhcnRlcnM/IFlvdSBtaWdodCBoYXZlIGJldHRlciBsdWNrIG1haWwgb3JkZXJpbmcgKHRoZXJlIGFyZSBhbGwgc29ydHMgb2YgY29tcGFuaWVzIHRoYXQgd2lsbCBkbyBjdXN0b20gY2hpcHMgaWYgeW91IHdhbnQgdGhhdCwgb3Igd2lsbCBzZWxsIHN0YW5kYXJkKS4KRG9lcyB3aW5uaW5nIGVxdWFsIG5vIFRhbGliYW4gb3Igb3RoZXIgSXNsYW1pYyBmdW5kYW1lbnRhbGlzbSBpbiB0aGUgcmVnaW9uIGFuZCBpZiBzbywgaG93IGRvZXMgbW9yZSB3YXIgbWFrZSB0aGF0IGhhcHBlbj8gU2VyaW91c2x5LCB0aGV5IGhvcGluZyB0byBtYWtlIElzbGFtaWMgZnVuZGFtZW50YWxpc20gZ28gYXdheSBpbiBBZmdoYW5pc3RhbiBieSBraWxsaW5nIG1vcmUgaW5ub2NlbnQgY2l2aWxpYW5zPyBJc24gdGhhdCBsaWtlIHRyeWluZyB0byBwdXQgYSBmaXJlIG91dCBieSB0aHJvd2luZyBnYXMgb24gaXQ/IFdvdWxkbiBJc2xhbWljIGZ1bmRhbWVudGFsaXNtIGRpbWluaXNoIGFzIHBlb3BsZSBiZWNhbWUgbGVzcyBkZXNwZXJhdGUgICBzYXkgd2l0aCBtb25leSBzcGVudCBvbiBzY2hvb2xzIGFuZCBjbGVhbiBkcmlua2luZyB3YXRlciBhbmQgaGVhbHRoIGNhcmUgY2VudGVycz8KVGhpcyB3aWxsIGxldCB5b3UgbGVhcm4gdGhlIFNhbmRzdG9ybSBzcGVsbC4gSXQgaGFzIGl0cyBvd24gcmVhZ2VudCwgYnV0IGl0IGdpdmVzIHlvdSBzb21lIG11Y2ggbmVlZGVkIEFvRS4gSXQgbWlnaHQgbm90IGJlIGEgYmFkIGlkZWEgdG8gbGVhcm4gRmlyZWJhbGwgYXQgNCwgYnV0IEkgdW5zdXJlIG9mIGl0cyBlZmZlY3RpdmVuZXNzLiAKU2hlIGFkZHMsIGNhbiBhbHNvIHRhbGsgZm9yIGhvdXJzIHdpdGggYSBmcmllbmQgb24gdGhlIHBob25lLCB3aGlsZSB5b3UgZmluZCBpdCB2ZXJ5IGRpZmZpY3VsdCB0byBjYXRjaCB1cCB3aXRoIHdoYXQgYSBtYW4gcHJlY2lzZSBzaXR1YXRpb24gaXMgb24gdGhlIHBob25lLiAKT3ZlcnZpZXcgZm9yIEplcmtmYWNlQm9iCkkgaG9uZXN0bHkgYmVsaXZlIHRoYXQgd2hpbGUgd2UgY2FuIHdpbiBhIGxvdCB3aGVuIHRoZSBvcHBvbmVudCBpcyBzdGFiYmluZyB0dXJuIDg4IGp1c3QgaXNudCB0aGUgc3BvdCB0byBkbyBpdCBhcyBkcmF3cyBzdGlsbCBoYXZlIGEgdG9uIG9mIGVxdWl0eSBhbmQgbm9uZSBvZiB0aGUgZHJhd3MgaGF2ZSBhY3R1YWxseSBnb3R0ZW4gdGhlcmUuIDg5cyBLUXMgS0pzIGFyZSBhbGwgYmV0dGVyIGJsdWZmaW5nIGNvbWJvcyB0aGF0IGNhbiBiZSBpbiBvdXIgM2IgY2FsbGluZyByYW5nZSBhbmQgaGF2ZSBhIHRvbiBtb3JlIGVxdWl0eS4gCkdldCBzdGF0aXN0aWNhbC4gQmVjYXVzZSB5b3UncmUgdXNpbmcgdHdvIGRpY2UsIHRoZSBwcm9iYWJpbGl0eSBvZiByb2xsaW5nIGFueSBwYXJ0aWN1bGFyIG51bWJlciBpcyBkaWZmZXJlbnQgZGVwZW5kaW5nIG9uIHRoZSBudW1iZXIuIApBIHdlZWsgb3Igc28gbGF0ZXIgaGVyIGJvZHkgd2FzIGZvdW5kIGFuZCB0aGUgd2hvbGUgdG93biBtb3VybmVkLCBsZWF2aW5nIHRlZGR5IGJlYXJzIHdoZXJlIGhlciBib2R5IHdhcyBmb3VuZC4gCkhlbnJ5J3MgZmFtaWx5IHdpc2hlcyB0byBleHByZXNzIHRoZWlyIHNpbmNlcmUgZ3JhdGl0dWRlIHRvIHRoZSBOdXJzZXMsIE1lZGljYWwgU3RhZmYgYW5kIERvY3RvcnMgYXQgdGhlIENoaW5vb2sgUmVnaW9uYWwgSG9zcGl0YWwuIApFbCBQYXNvIHNob3VsZCBiZSByZWdyZXR0aW5nIGl0cyBkZWNpc2lvbiB0byBzZW5kIFZlcm9uaWNhIEVzY29iYXIgdG8gV2FzaGluZ3Rvbi4gSXMgZG9pbmcgZXZlcnl0aGluZyBzaGUgY2FuIHRvIGdldCBhdHRlbnRpb24sIGJ1dCB0aGUgb3RoZXIgZnJlc2hwZXJzb25zIHdobyBoYXBwZW4gdG8gYmUgd29tZW4gYXJlIGp1c3QgdG9vIG11Y2ggZm9yIGhlciB0byBvdmVyY29tZS4gClRoZXJlJ3Mgbm8gd2F5IG9mIGdldHRpbmcgYXJvdW5kIHRoYXQuIElmIHRoZXJlIHdhcyBzdWNoIGEgdGhpbmcgYXMgZ2V0dGluZyBhcm91bmQgaGF2aW5nIGEgZGlzYWR2YW50YWdlIHNpbXBseSBieSBtb25leSBtYW5hZ2VtZW50LCB5b3UgY291bGQgZ28gdG8gdGhlIGNyYXAgdGFibGUgYW5kIHdpbiBieSBtb25leSBtYW5hZ2VtZW50LiAKQSBEZWFsZXIgQnV0dG9uLiBXaGlsZSBub3QgbmVjZXNzYXJ5LCBpdCBpcyBhIGhhbmR5IHRvb2wgZm9yIHRyYWNraW5nIHdobyBoYXMgdGhlIGRlYWwgbmV4dCwgd2hvc2UgdHVybiBpdCBpcyBhbmQgd2hlcmUgdG8gc3RhcnQgZGVhbGluZy4gSWYgeW91IGRvbid0IGhhdmUgYSBkZWFsZXIgYnV0dG9uLCBhIHNpbHZlciBkb2xsYXIgb3IgYW55IGxhcmdlIGNvaW4gd29ya3MgdmVyeSB3ZWxsLgpJIGdldCBwYWlkIGJldHRlci4gCkEgZGVtb25zdHJhdGl2ZSBoeXBvdGhldGljYWw6IE15IGNvbGxlYWd1ZSBhdCB3b3JrIGlzIGFycmVzdGVkIGZvciBhc3NhdWx0LiBUaGUgY29tcGxhaW5pbmcgd2l0bmVzcyAoZ2VuZXJhbGx5IHRoZSBvbmx5IG5lY2Vzc2FyeSB3aXRuZXNzIGluIGFuIGFzc2F1bHQgdHJpYWwsIG90aGVyIHRoYW4gcmVzcG9uZGluZyBsYXcgZW5mb3JjZW1lbnQpIGlzIHNldCB0byB0ZXN0aWZ5IHRvbW9ycm93LiAKVGhlbiBzcGVuZCBhIGdvb2QgNSB0byAxMCB5ZWFycyBlbmpveWluZyBlYWNoIG90aGVyIGFuZCBzYXZpbmcuIApNSDogVGhlIHJhdWNvdXMgRGl4IGNyb3dkIG9mIDExIHNlZW1zIHBsZWFzZWQgYXQgaG93IHRoZSBhcmUgcGxheWluZy4gQ3JhaWcgU2ltcHNvbiBsYXVkcyBSeWFuIEtlc2xlciBmb3IgaGlzIHJlbGVudGxlc3Mgd29yayBldGhpYy4gSSB0aGluayBKYXNvbiBCb3RjaGZvcmQganVzdCByb2xsZWQgaW4sIGJ1dCBoZSB0b3RhbGx5IGJpZyB0aW1pbmcgdXMuClRoZSBjb3Vyc2Ugd2FzIFNVUEVSIGZsYXQgICBvbmx5IGFib3V0IDIwMGZ0IG9mIGVsZXZhdGlvbiBnYWluLCBhbmQgZm9yIG1lIHdoZXJlIEkgcnVuIHRvIHRyYWluIGV2ZW4gYSA1ayBoYXMgYWJvdXQgNDAwZnQgb2YgZWxldmF0aW9uIGdhaW4sIGxvbC4gCkFueSB0aW1lIHRoZXkgc3RhcnQgc2tld2luZyBtb3JlIHRvIGFuIGV2ZW4gbWF0Y2hpbmcsIGdhbWVzIHRha2UgZm9yZXZlciB0byBmaW5kIGFuZCB0aGUgcGxheWVycyB0YXJ0IGNvbXBsYWluaW5nLiBBcyBzb29uIGFzIHRoZXkgc3RhcnQgcHJpb3JpdGl6aW5nIHNwZWVkLCB0aGV5IGNvbXBsYWluIGFib3V0IHdpZHRoIGluIHNraWxsIGdhcC4gCllvdSd2ZSBwcm9iYWJseSBoZWFyZCBvZiAiY29tcHMiIGluIGEgY2FzaW5vLiAKSGUgZm91bmRlZCBTYWRkeSBQZXRyb2xldW1zIHdpdGggaGlzIGJyb3RoZXJzIGluIHRoZSAxOTQwcyBhbmQgb3BlcmF0ZWQgQ29yZXkgQXV0byBXcmVja2VycyB1bnRpbCB0aGUgJzkwcy4gClRvIGxpdmUgaW4gYSBjaXR5LCB5b3Ugbm93IGhhdmUgdG8gbWFrZSAzIDUgdGltZXMgdGhlIGF2ZXJhZ2Ugd2FnZSBpbiB0aGF0IGNpdHksIHRvIGxpdmUgaW4gdGhhdCBjaXR5LiAKQW5kIGluc3RlYWQgb2YgdG91Y2hpbmcgdGhlIHRvcGljIHlvdSB5ZWxsIGFib3V0IHJhY2lzbSBhbmQgaGF0aW5nIGJyb3duIHBlb3BsZSBhbmQgd2hhdGV2ZXIsIGFuZCB0aGVuIGNsYWltIEkgbG9zdCBhbiBhcmd1bWVudC4gV2hlbiB3ZSBuZXZlciBldmVuIGhhZCBvbmUuIApFaW5lcyBtZWluZXIgZGVyemVpdGlnZW4gU29uZGVyaW50ZXJlc3NlbiBpc3QgUG9rZXIuIEljaCBzcGllbGUgbmljaHQgdW0gR2VsZCwgaWNoIHNwaWVsZSBzY2hsZWNodCwgYWJlciBnZXJuZS4gCiJUaGVyZSB3ZXJlIG5vIGhpc3RvcmljYWwgb3IgbGVnYWwgcHJlY2VkZW50cyB0byBndWlkZSBGb3JkIGluIHRoZSBtYXR0ZXIgb2YgTml4b24ncyBwZW5kaW5nIGluZGljdG1lbnQuIAoxKSBJIHRoaW5rIG51bWJlciBvbmUgaXMgc3ViamVjdCB0byB0aGUgcGVyc29uIGJ1dCBpZiB5b3UgYXJlIHJlcGxhY2luZyBicmVha2Zhc3QgSSB3b3VsZCBnbyBhIGJpdCBoZWF2aWVyIG9uIHRoZSBxdWFudGl0eS4gCjcgWzMwdGggMXN0IFdlbmRlbGwgYW5kIFZhbiBCZW50aHV5c2VuLCBQcmludGVycywgMTg0OC4gWCAyMi4yIGNtOyA1IDEvOCB4IDggMy80IGluY2hlcykuIEEgYml0IG9mIGZveGluZywgb3RoZXJ3aXNlIGEgZ29vZCBjb3B5IG9mIHRoaXMgbWFwLiAKT25jZSByZW1vdmVkIHRoZSBicmlkZ2VzLCB3aGljaCB3ZXJlIGJ1aWx0IGluIDE5NjEsIHdpbGwgYmUgcmVwbGFjZWQgYnkgYW4gYXQgZ3JhZGUgaW50ZXJzZWN0aW9uIHdoZXJlIER1bmRhcyBTdHJlZXQsIEJsb29yIFN0cmVldCBhbmQgS2lwbGluZyBBdmVudWUgbWVldC4KSXQgaXMgcHJldHR5IHNpbGx5IGFuZCBwcm9iYWJseSBtYXJnaW5hbGx5ICtFViBidXQgSSBmZWVsIGxpa2UgaXQgY291bGQgYmUgaW1wcm92ZWQgb24gcXVpdGUgYSBiaXQuLiAKUmVuIFpvbmcsIDE3OTYgMTgyMC4gCk15IG92ZXJhbGwgcG9pbnQgaGVyZSBpcyB0aGF0IGRlbW9uaXppbmcgdGhlIHZhcG9yIGluZHVzdHJ5IGlzIHRvIG9ubHkgbG9vayBhdCBhIHNtYWxsIG1pbm9yaXR5IG9mIHVzZXJzLiAKVGhpcyBpcyBpbXBvcnRhbnQgYmVjYXVzZSBwbGF5ZXJzIG5lZWQgdG8ga25vdyB3aGF0IGNhcmRzIGFyZSBzdGlsbCBvdXQgdGhlcmUgdGhhdCBjYW4gaGVscCB0aGVtIGFuZCB3aGljaCBvbmVzIGFyZSBhbHJlYWR5IGdvbmUuIApKRDogSSBkb24gZ2V0IG92ZXIgdGhlcmUgYXMgbXVjaCBhcyBJIGxpa2UgdG8uIEluIDIwMTMgMTQsIEkgd2FzIHByZXR0eSBnb29kLiAKUmVhZGluZyAgIGdvb2QgZmljdGlvbiAvIGxpdGVyYXR1cmUsIGhpc3RvcnkgKG1vc3RseSBwcmUgMjB0aCBjZW50dXJ5KSwgbmF0dXJhbCBoaXN0b3J5IChlc3BlY2lhbGx5IGRpbm9zYXVycyBhbmQgZXZvbHV0aW9uKSwgdHJhdmVsIChlc3BlY2lhbGx5IGV4cGVkaXRpb25zIHByZSBTZWNvbmQgV29ybGQgV2FyIG9yIGV4cGVkaXRpb25zIHRoYXQgd2VudCB3cm9uZykuIApSb2xsaW5nIEhpbGxzIENhc2lub1doZXRoZXIgeW91ciBpZGVhIG9mIGEgcmVsYXhpbmcgZ2FtZSBpbmNsdWRlcyBzbG90cywgY2FyZHMgb3IgZ29sZiwgUm9sbGluZyBIaWxscyBDYXNpbm8sIDExMCBtaWxlcyBub3J0aCBvZiBTYWNyYW1lbnRvLCBjYW4gZmlsbCB0aGUgYmlsbC4gCkl0IGhhcyBhbHNvIGJlZW4gc2hvd24gdGhhdCB0aGUgY2FyZWdpdmVycyB3aG8gbWFzc2FnZWQgdGhlIGluZmFudHMgYmVuZWZpdGVkIGFzIHdlbGwuLiAKRmVybWVudGF0aW9uIG1ldGhvZHMgYXJlIGVzcGVjaWFsbHkgZWZmZWN0aXZlLCB2aXJ0dWFsbHkgZWxpbWluYXRpbmcgbGVjdGlucyBpbiBvbmUgc3R1ZHkgb2YgbGVudGlscy4gCldlbGwgZmlyc3Qgb2YgYWxsLCB0aGUgYXRobGV0ZXMgYXJlIGEgbWluaXNjdWxlIHBvcnRpb24gb2YgdGhlIHN0dWRlbnQgcG9wdWxhdGlvbi4gQW5kIGFuIGV2ZW4gc21hbGxlciBwb3J0aW9uIG9mIHRoZW0gd2lsbCBldmVuIGhhdmUgdGhlIHNsaWdodGVzdCBjaGFuY2Ugb2YgZ29pbmcgcHJvLiBTbyBoYXJkbHkgYW55b25lIGlzIHRoZXJlICJ0byB0aHJvdyBhIGJhbGwgYXJvdW5kIi4KVGhlIGNhdGNoIGlzIHlvdSBtdXN0IGdldCBhbGwgMyBidW5kbGVzIHRvIGdldCB0aGF0IHByaWNpbmcuIApUaGUgbGFzdCB0aGluZyB5b3Ugd2FudCB0byBkbyBpcyBlaXRoZXIgbGV0IGl0IHB1dCB5b3Ugb24gdGlsdCBvciBnZXQgbmFzdHkgdG8gdGhlbSBpbiBzdWNoIGEgd2F5IHRoZXkgd2lsbCBzdGFydCBwbGF5aW5nIHRpZ2h0IGluc3RlYWQuLiAKQWxsbWFuIFR3aXR0ZXIgYWNjb3VudCB3YXMgc2hvcnRseSBhZnRlciBoZSBzZW50IHRoZSB0d2VldCwgcmVzdHJpY3RpbmcgYWNjZXNzIHRvIGhpcyBhY2NvdW50LCBidXQgYSBzY3JlZW5zaG90IG9mIGl0IGhhcyBiZWVuIHdpZGVseSBjaXJjdWxhdGVkIG9uIHNvY2lhbCBtZWRpYS4gRm94IE5ld3MgQ2hhbm5lbCBMYXVyYSBJbmdyYWhhbSBhcG9sb2dpemVkIHZpYSBzb2NpYWwgbWVkaWEgZm9yIGhlciB0d2VldCB0aGF0IEhvZ2cgaGFkIGFib3V0IG5vdCBnZXR0aW5nIGluIHRvIHNvbWUgY29sbGVnZXMuIFNoZSByZXR1cm5lZCBNb25kYXkgbmlnaHQgYWZ0ZXIgYSB3ZWVrbG9uZyB2YWNhdGlvbiBhbmQgZGVub3VuY2VkIGEgZWZmb3J0IGJ5IGxpYmVyYWxzIHRvIHN0aWZsZSB0aGUgZnJlZSBzcGVlY2ggb2YgY29uc2VydmF0aXZlcy4KSSBzYXQgZG93biBvbiB0aGUgc2lsayB0aHJvbmUsIHdpdGggbXkgaXZvcnkgcGVuIGluIGhhbmQuCklmIHlvdSBldmVyIGhhZCBhbnkgaW50ZXJlc3Qga25vd24gYW5kIHVua25vd24gaW4gcmVhZGluZyBhYm91dCB2ZXJ5IGltcHJlc3NpdmUgYW1vdW50cyBvZiBjb3JydXB0aW9uIGFuZCBpdHMgY29uc3RpdHVlbnRzIGluIHRoZSBjb3JvbmVyJ3Mgb2ZmaWNlIGZvciBOWUMgMTA0IHllYXJzIGFnbywgaGVyZSdzIHlvdXIgY2hhbmNlIHRvIHNhdGlzZnkgaXQuIApBIGJpbGxpb25haXJlIHdobyBnaXZlcyBhd2F5ICQxMDBtIG1heSBiZSBsZXNzIGdvb2QgdGhhbiBhIGd1eSBtYWtpbmcgJDMwayB3aG8gZ2l2ZXMgYXdheSAkNWssIGJ1dCB0aGV5IGJvdGggZG9pbmcgZ29vZCBhbmQgbmVpdGhlciBpcyBpbmhlcmVudGx5IGltbW9yYWwgZm9yIHJldGFpbmluZyB0aGUgYW1vdW50IHRoZXkgZGlkbiBnaXZlLiBJIGlnbm9yaW5nIG1hcmdpbmFsIHV0aWxpdHkgZm9yIHRoZSBtYXRoIGhlcmUsIGJ1dCBJIHN1cmUgeW91IGdldCB0aGUgcG9pbnQ6IGl0IHdoYXQgZ2l2ZW4sIHJhdGhlciB0aGFuIHdoYXQgbGVmdCB0aGF0IG1hdHRlcnMuLiAKV2l0aCAxLjYzNSBwZW9wbGUgcGFzc2luZyB0aHJvdWdoIHRoZSBmcm9udCBkb29yIG9uIFNhdHVyZGF5LiBNYXkgMjcuIApJIGd1ZXNzIEthbXNraSBnZXRzIGEgcGFzcyBzaW5jZSBoZSBsZWZ0IGN5YmVybGlmZSAocHJvYmFibHkgYmVjYXVzZSBoZSByZWFsaXNlZCBob3cgdGhleSB3ZXJlIGdvbm5hIGdldCBjb25jaWVuY2Ugc29vbmVyIG9yIGxhdGVyKS4gClRoZSBzcGlyb21ldGVyIHlvdSB3ZXJlIGdpdmVuIChpZiB5b3Ugd2VyZSB1c2luZyBpdCBwcm9wZXJseSkgY2FuIHJldmVyc2UgYXRlbGVjdGFzaXMsIGFuZCBtZWNoYW5pY2FsbHkgaW5kdWNlIGNvdWdoaW5nIGZpdHMsIHdoaWNoIGluIHR1cm4sIGhlbHAgdG8gZWplY3QgYmFjdGVyaWEgdGhhdCB3b3VsZCBvdGhlcndpc2UgYmUgZmVzdGVyaW5nIGluIHRoZSBsb3dlciByZXNwaXJhdG9yeSB0cmFjdC4uIApNaWNoYWVsIE1jTGF1Z2hsaW4uIApPb2sgbW9ldGVuIGp1bGxpZSB0aHVpcyBqZSBzdGV1biB6ZWtlciBuaWV0IG9uZGVyc2NoYXR0ZW4uIERpdCBpcyBvbnplIGJyYW5kc3RvZiBvbSB0ZSBibGlqdmVuIGdhYW4uIElrIHZpbmQgaGV0IGVub3JtIG1vZWlsaWprIG9tIG9uZGVyIHdvb3JkZW4gdGUgYnJlbmdlbiB3YXQgZGl0IHZvb3Igb25zIGFsbGVtYWFsIGJldGVrZW50LiBJbiAxIHdvb3JkIDogc2NoaXR0ZXJlbmQuCk5vdCBhIHB1c2ggZnJvbSBtZSBqdXN0IHNheWluZyB5b3UgZG9uIG5lZWQgdG8gZ2l2ZSBpdCB1cC4gCkxpc2EgQ29vcGVyIG9mIHRoZSBzdGF0ZSBtYXNzYWdlIGJvYXJkIHNhaWQgc2hlIHN1cHBvcnRzIHRoZSBjb3VudHkncyBtb3ZlIHRvIHJlc3RyaWN0IGhvdXJzLiBBdCBzb21lIDI0IGhvdXIgb3BlcmF0aW9ucywgbWFzc2FnZSB0aGVyYXBpc3RzIGFyZSBsaXZpbmcgb24gdGhlIHByZW1pc2VzLiBUaGF0J3MgaWxsZWdhbCwgc2hlIHNhaWQuCkkgYW0gZ3Vlc3NpbmcgaGUgaXMganVzdCBub3RpY2luZyBpdCBub3cgYmVjYXVzZSBiYWNrIGluIDIwMTEgcGVvcGxlIHJlYWxseSBkaWRuIGNhcmUgYWJvdXQgdGhhdCBraW5kIG9mIHN0dWZmIHVubGVzcyBpdCB3YXMgbGlrZSwgUkVBTExZIGJhZC4gClRoYXQgZmluZS4gClthcHBsYXVzZV0gV2UgaGF2ZSB0byBkZWFsIHdpdGggZGVhdGggdGhyZWF0cy4gCkVudHNjaGVpZGVzdCBkdSBkaWNoIGRhenUgbWl0IGhoZXJlbiBFaW5zdHplbiB6dSBzcGllbGVuIHVtIG1laHIgR2VsZCBpbiB3ZW5pZ2VyIFplaXQgenUgdmVyZGllbmVuLCBkYW5uIHdlcmRlbiBkZWluZSBHZWduZXIgdm9uIG51biBhbiB1bmdsZWljaCBzY2h3aWVyaWdlciB6dSBzY2hsYWdlbiBzZWluLiAKVGhpcyBzdHVkeSBkaXNjdXNzZXMgdGhlIGltcHJvdmVtZW50IG9mIGx5bXBoZWRlbWEgd2hlbiBNTEQgaXMgY29tYmluZWQgd2l0aCBiYW5kYWdpbmcsIHdoZW4gY29tcGFyZWQgdG8gYmFuZGFnaW5nIGFsb25ldGhlIHJlYWxpdHkgaXMgdGhhdCB2ZXJ5IGZldyBzdHVkaWVzIGhhdmUgYWN0dWFsbHkgYmVlbiBjb25kdWN0ZWQsIGFuZCB0aGUgdHdvIHN0dWRpZXMgYWJvdmUgY29tYmluZSBNTEQgd2l0aCBjb21wcmVzc2lvbiB3cmFwcGluZyBmb3IgYnJlYXN0IGNhbmNlciBwYXRpZW50cy4KQXJlIHlvdSBzb21lb25lIHdobyBpcyByZWFkeSB0byB0YWtlIHlvdXIgcG9rZXIgcGxheWluZyBzZXJpb3VzbHk/IElmIHlvdSBhcmUgc29tZW9uZSB3aG8gaGFzIHJlY2VudGx5IHNhdCBhdCBhIHByb2Zlc3Npb25hbCBwb2tlciB0YWJsZSwgdGhlcmUgaXMgYSBnb29kIGNoYW5jZSB0aGF0IHlvdSBoYXZlIGNvbWUgaG9tZSBhbmQgZm91bmQgdGhhdCB5b3VyIG93biBraXRjaGVuIHRhYmxlIGp1c3QgaXNuJ3QgZ29pbmcgdG8gY3V0IGl0IGFueW1vcmUuCiJUaGV5IGFyZSB0cnlpbmcgdG8gYXBwZWFzZSB0aGUgY2hhcml0aWVzIGJ5IGRvaW5nIHRoaXMsIiBoZSBzYWlkLCB3aXRoIGNoYXJpdGllcyBjYWxsZWQgb24gdG8gcGF5IGEgJDI1MCBmZWUgcGVyIGRheSBmb3IgZXZlbnRzLiAiV2UgbmVlZCB0aGUgY2hhcml0aWVzLCB0aGV5IG5lZWQgdXMuIApCdXQgVVMgaGVhbHRoY2FyZSwgYXMgd2UgYWxsIGtub3csIGlzIG1vcmUgb3IgbGVzcyB1bnJlZ3VsYXRlZC4gClRoZW4gdGhhdCBraW5kb2YgZGV0ZXJtaW5lcyBob3cgbXVjaCB0b3RhbCBtb25leSB5b3VuZWVkIGluIHRlcm1zIG9mIGVhY2ggaW5kaXZpZHVhbCB0aGViZXN0IGludmVzdG1lbnQuIApNYW4gaXN0IGFub255bSwgZXMgZ2lidCBhbHNvIGtlaW5lIFVzZXJuYW1lbiB1bmQgUHJpdmF0bmFjaHJpY2h0ZW4gZ2lidHMgYXVjaCBuaWNodC4gV2hyZW5kIGRlcyBTdHVkaXVtcyB3YXIgZXMgdGVpbHdlaXNlIGd1dCwgd2VpbCBtYW4gdmllbGUgbG9rYWxlIFNhY2hlbiBtaXRiZWtvbW1lbiBoYXQsIEluc2lkZXIgdm9uIGhoZXJlbiBTZW1lc3Rlcm4gaG9sZW4ga29ubnRlIHVzdy4gCkdsdXRlbiBmcmVlIGRpZXQgcmVkdWNlcyBhZGlwb3NpdHksIGluZmxhbW1hdGlvbiBhbmQgaW5zdWxpbiByZXNpc3RhbmNlIGFzc29jaWF0ZWQgd2l0aCB0aGUgaW5kdWN0aW9uIG9mIFBQQVIgYWxwaGEgYW5kIFBQQVIgZ2FtbWEgZXhwcmVzc2lvbgpTbyBOT1cgY2FuIHdlIHRhbGsgYWJvdXQgZW5kaW5nIGxpZmUgdGltZSBqdWRpY2lhcnkgcG9zaXRpb25zPyBFdmVyeW9uZSBmcmVha3Mgb3V0IHdoZW4gSSBzYXkgd2Ugc2hvdWxkIHZvdGUgb24ganVkZ2VzIGJvdGggbG9jYWxseSBhbmQgbmF0aW9uYWxseSBidXQgaGV5IGlmIGhhdmluZyBvbmUgc21hbGwgZ3JvdXAgb2YgYXNzaG9sZSB3aG8gY2hlYXQgdG8gd2luIGZpbGwgb3VyIGNvdXJ0cyB3aXRoIGFzc2hvbGVzIGxpa2UgdGhpcyBpcyB0aGUgd2F5IHlvdSB0aGluayBpdCBzaG91bGQgcmVtYWluIHRoZW4gaGF2ZSBmdW4gd2l0aCB0aGF0LiBGdWNrIHRoaXMgbm9pc2UuIFdlIG5lZWQgdG8gdm90ZSBmb3IgQUxMIGp1ZGdlcyBiZWNhdXNlIGFsbG93aW5nIGdvdmVybm1lbnQgb2ZmaWNpYWxzIHRvIGNob29zZSB0aGVtIGhhcyBiZWVuIHdlYXBvbml6ZWQgZm9yIHBlcnNvbmFsIHBvbGl0aWNhbCBnYWluIGFuZCBuZWVkcyB0byBiZSB0YWtlbiBhd2F5LgpVcGRhdGVkIDIwMTkgUHJpY2VzIEhvdGVsIFJldmlld3MgSGF3YWlpCkl0IHdhcyBhIHF1ZXN0aW9uIG9mIHdoZXRoZXIgb3Igbm90IGEgcGVyc29uIHdvdWxkIHZhbHVlIHJlc3BvbnNpYmxlIHBlcnNvbmFsIGZpbmFuY2UgYW5kIHRoZSBtYW55IGJlbmVmaXRzIG9mIGhhdmluZyBhIGdvb2QgY3JlZGl0IHNjb3JlLiBJIGxhaWQgb3V0IGEgY2FzZSBmb3IgbXlzZWxmIGFuZCB3aHkgSSBkb24gdGhpbmsgSSB3b3VsZCBoYXZlIGxlYXJuZWQgdW5sZXNzIEkgaGFkIGZhaWxlZC4gClRoZSBhZGFwdGVyIHRoYXQgY29tZXMgd2l0aCBpdCBvbmx5IHN1cHBvcnRzIHVwIHRvIDkwVywgd2hpY2ggaXMgcmVhbGx5IGxvdyBmb3Igc29tZXRoaW5nIHlvdSBzaG91bGQgYmUgdXNpbmcgZm9yIGdhbWluZy4gCkVzIHd1cmRlIG5pY2h0IHVtIGZpbmFuemllbGxlIFVudGVyc3R0enVuZyBiZWkgZGVuIHBhbG1lcmlzY2hlbiBCZWhyZGVuIGFuZ2VzdWNodCwgaW0gR2VnZW50ZWlsLCBhbGxlIEF1c2dhYmVuIHdlcmRlbiBhdXMgU3BlbmRlbiBmaW5hbnppZXJ0Li4gCkRlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUncyBOYXRpb25hbCBOdXRyaWVudCBEYXRhYmFzZS4gQ2FyYm9oeWRyYXRlIGFjY291bnRzIGZvciByb3VnaGx5IDkwIHBlcmNlbnQgb2YgdGhlIGNhbG9yaWVzLCBwcm90ZWluIGZvciA4IHBlcmNlbnQgYW5kIGZhdCBmb3IgMiBwZXJjZW50LiAKT25lIHB1bGxlZCBhIGd1biBhbmQgaGUgd2FzIHB1bmNoZWQgaW4gdGhlIGZhY2UgYW5kIHRha2VuIHRvIHRoZSBiYXNlbWVudCB3aGVyZSBoZSB3YXMgYmVhdGVuIGFuZCBoYWQgYSBrbmlmZSBoZWxkIHRvIGhpcyBuZWNrLi4gCk9uZSBvZiB0aGUgYmVzdCB3YXlzIHRvIHN0YXJ0IGRlY2sgYnJld2luZyBpcyB0aGUgY2FyZCBtZXRob2QuCkFuIHVuY2xlIG9mIDE3IHllYXIgb2xkIFJhc2hlZWRhIFVtcmFuaSBvbiBNb25kYXkgYWxsZWdlZCB0aGF0IHRoZSB0d28gaGFkIGNvbmNvY3RlZCBhIHN0b3J5IHRvIGdyYWIgdGhlIGZhbWlseSBwcm9wZXJ0eS4gSG93ZXZlciwgTm9yZWVuLCB0aGUgbW90aGVyIG9mIFJhc2hlZWRhLCB0b2xkIGEgcHJlc3MgY29uZmVyZW5jZSBhdCB0aGUgbG9jYWwgcHJlc3MgY2x1YiBvbiBUdWVzZGF5IHRoYXQgc2hlIHN0aWxsIHN0b29kIGJ5IGhlciBzdGFuZCB0aGF0IGhlciBsYXRlIHNwb3VzZSBoYWQgbG9zdCBSYXNoZWVkYSBpbiBhIHBva2VyIGdhbWUgYW5kIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBzaGUgaGFzIHBhaWQgb2ZmIHRoZSBkZWJ0LCB0aGUgTGFsIEhhaWRlciwgc3RpbGwgY2xhaW1lZCBoaXMgc2hydWdnZWQgb2ZmIHRoZSBhbGxlZ2F0aW9ucyBsZXZlbGVkIGFnYWluc3QgaGVyIGJ5IFJhc2hlZWRhIHVuY2xlIGFzIGJhc2VsZXNzLiBhIG1vdGhlciBjYW4gY29uY29jdCBzdWNoIGEgZ29yeSBzdG9yeSwgc2hlIHdvbmRlcmVkIQpNYXliZSBJIGNhbiB1bmRlcnN0YW5kIGlmIHlvdXIgbGlmZSBpcyBub3QgZ3JlYXQgYW5kIGFyZSBsb29raW5nIGZvciBzb21lb25lIHRvIGJyaW5nIHlvdSBvdXQgb2YgeW91ciB0cm91YmUsIG1heWJlIHlvdXIgdmVyeSBhbWJpdGlvdXMgYW5kIHdvdWxkIGxvb2sgdG8gcGxlYXNlIHNvbWVvbmUgaW4gaG9wZXMgb2YgZ2V0dGluZyBhIHByb21vdGlvbiwgbWF5YmUgeW91IGxvc3QgYW5kIHlvdSBqdXN0IGxvb2tpbmcgZm9yIHNvbWUgbGVhZGVyIHRvIGZvbGxvdywgb2ssIEkgZ2V0IHRoYXQsLiAKRWxnZ3VucyAgNiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClNldmVyYWwgb3RoZXIgaW50ZXJucyBhbmQgSSBtYWRlIHN1cmUgdG8gYmUgb24gdGhlIHRlYW0gb3Bwb3NpdGUgZnJvbSB0aGUgcHJvZ3JhbSBsZWFkZXIuIApJdCB3YXNuIHVudGlsIHRoZSBuZXh0IGRheSB0aGF0IEkgbm90aWNlZCBzb21ldGhpbmcgd2FzbiBxdWl0ZSByaWdodC4gVGhlIGZpbmdlciBoYWQgc3dvbGxlbiBhIGxvdCBhbmQgd2FzIGFsbW9zdCBibGFjaywgYW5kIGp1c3QgdG91Y2hpbmcgc29tZXRoaW5nIHdpdGggdGhlIHRpcCBzZW50IGEgYm9sdCBvZiBwYWluIHRoYXQgd2FzIHVuYmVhcmFibGUuLiAKRXJuaWUgc3Rvb2QgdG8gaW5oZXJpdCBtb3JlIHRoYW4gJDIgbWlsbGlvbiBmcm9tIGhpcyBwYXJlbnQncyBlc3RhdGUuIApTaW11bHRhbmVvdXNseSwgVFRDcyBhcmd1ZSB0aGF0IHRoZSBwcmVzZW5jZSBvZiBpbGxpY2l0IHByb2R1Y3RzIHNpZ25hbHMgYSBuZWVkIGZvciB0aGVtIHRvIGludmVzdCBpbiB0aGF0IG1hcmtldCAocmF0aGVyIHRoYW4gcmVzdWx0aW5nIGZyb20gdGhlaXIgaW52b2x2ZW1lbnQgaW4gdGhlIGlsbGVnYWwgdHJhZGUpLjkgMjA4LiAKQ2FsZWJFV3JpdGVzIHUKRmxvcmlkYSBIb3VzZSBMb29rcyBUbyBCbG9jayBTdGFkaXVtIEZ1bmRpbmdJbiBhbiBpc3N1ZSBkcml2ZW4gYnkgU291dGggRmxvcmlkYSdzIGhpc3Rvcnkgd2l0aCBwcm9mZXNzaW9uYWwgc3BvcnRzIG93bmVycywgdGhlIEhvdXNlIGhhcyBzdGFydGVkIG1vdmluZyBmb3J3YXJkIHdpdGggYSBwbGFuIHRvIHJlZHVjZSB0aGUgcG90ZW50aWFsIG9mIHRheCBkb2xsYXJzIGJlaW5nIHVzZWQgdG8gYnVpbGQgc3BvcnRzIGZhY2lsaXRpZXMuCkltbWVkaWF0ZWx5IHNlbGVjdCBFWElUR0FNRSwuIApJIG1lYW4sIGl0IGNvdWxkIHdvcmssIEkgc3VwcG9zZS4gClNwbGl0c3VpdCB2aWRlb3MgYXJlIGF3ZXNvbWUgYXMgdGhlIG90aGVyIGd1eSBzYWlkIGJ1dCBJIHRoaW5rIHRoZXkgYXJlIGEgYml0IHRvbyBhZHZhbmNlZC4gClRoZSBIREQgaXMgdHlwaWNhbGx5IDEgVEIgaW4gc2l6ZSBpbiB0aG9zZSBsYXB0b3BzLiBCdXQgdGhlcmUgYXJlIGxhcHRvcHMgKGxpa2UgdGhlIE1TSSBHUyBTdGVhbHRoIHZhcmlhbnRzKSB0aGF0IG1heSBvbmx5IGhhdmUgYW4gU1NEIGJ1dCBubyBIREQuIApPYnZpb3VzbHkgdGhlIGJ1Y2tzIGhhdmUgYmVlbiBncmVhdCB0aGlzIHNlYXNvbiwgYnV0IGNhbiB0aGV5IGJlIHVuc3RvcHBhYmxlIGFnYWluc3QgYW5vdGhlciBncmVhdCB0ZWFtIGluIGEgc2VyaWVzPyBUaGlzIGlzIHdoeSBoYXZpbmcgc3VwZXJzdGFycyBpcyBzbyBpbXBvcnRhbnQuIAoiWW91IGJldCwiIENyIENoYW1iZXJzIHNhaWQuICJUaGlzIGdpdmVzIHVzIGFkZGVkIHN0cmVuZ3RoIGZvciBhbnkgZGVmZW5jZSBhZ2FpbnN0IGFuIGFwcHJvYWNoIGZvciBwb2tlciBtYWNoaW5lcy4gClRoZXNlIGxvbmcgbGluZXMgY2FuIGFwcGVhciBvbiB0aGUgc3RvbWFjaCwgY2hlc3QsIGFybXMgYW5kIHRoaWdocy4gVGhleSBvZnRlbiBiZWdpbiBhcyByZWQgb3IgcHVycGxlIGluIGNvbG9yIGFuZCB0aGVuIGJlY29tZSBnbG9zc3ksIHN0cmVha2VkIHNraW4gW3NvdXJjZTogV2ViTURdLiAKT25saW5lIHBva2VyIGFsd2F5cyBydW5zIGhvdCBhbmQgbmV2ZXIgZ29lcyBvdXQgb2YgZGVtYW5kLiAKSXQncyB0aGUgc2FtZSByZWFzb24gdGhhdCB3aGVuIHlvdSBhY3R1YWxseSBoYXZlIHRoZSBmbHVzaCwgZG9uJ3QgZ2V0IGN1dGUgYW5kIHRyeSBhbmQgY2hlY2sgcmFpc2Ugb29wLiBKdXN0IGJldC4gVGhleSdsbCBjYWxsLCBldmVuIHdoZW4geW91J3JlIGJhc2ljYWxseSBwbGF5aW5nIHlvdXIgY2FyZHMgZmFjZSB1cC4KT25lIGJ5IG9uZSB0aGUgaGFyZCBwZWNhbnMgZmFsbCBpbnRvIG1vdmluZyBnZWFycy4gVGhlIHRvcCBzZXQgb2YgZ2VhcnMgY3JhY2tzIG9wZW4gdGhlIGxhcmdlc3QgcGVjYW5zLiBTbWFsbGVyIHBlY2FucyBmYWxsIHRocm91Z2gsIHVudG91Y2hlZCwgdG8gYW5vdGhlciBzZXQgb2YgZ2VhcnMuIFRoZXNlIG1lc2ggY2xvc2VyIGFuZCBjcmFjayBhcGFydCB0aGUgc21hbGxlciBwZWNhbnMuIFN0aWxsIHNvbWUgZXNjYXBlIGFuZCBmYWxsIGFnYWluOiB0byBhbm90aGVyIHNldCBvZiBnZWFycy4gVGhlc2UgZ2VhcnMgbWVzaCB0aWdodGVyIHN0aWxsOyBsaWtlIHN0ZWVsIGNsYXdzIHRoZXkgY3JhY2sgYXBhcnQgZXZlbiB0aGUgc21hbGxlc3QgcGVjYW5zLiBGZXcgcGVjYW5zIGFyZSB0b28gc21hbGwsIGZldyBzaGVsbHMgdG9vIGhhcmQsIHRvIGJlIGNyYWNrZWQgYW5kIGJyb2tlbiwgYW5kIHRvIHR1bWJsZSBpbiBwaWVjZXMgaW50byB1bm1hcmtlZCBwYXBlciBzYWNrcy4KU3BsaXQ6IE1ha2UgdHdvIGhhbmRzIGZyb20gb25lIGhhbmQsIGlmIGJvdGggY2FyZHMgYXJlIHRoZSBzYW1lIHZhbHVlLiBUZW5zLCBKYWNrcywgUXVlZW5zLCBhbmQgS2luZ3MgYXJlIHVzdWFsbHkgY291bnRlZCBhcyAxMCBlYWNoLiAKT25jZSBoYWQgYSBtaWRkbGUgYWdlZCB3aGl0ZSB3b21hbiBhc2sgd2hhdCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHR3byBmbGF2b3JzIG9mIGxhdHRlcyB3ZXJlLiBFbXBsb3llZSByZXNwb25kZWQgIldlbGwgb25lIGlzIGNhcmFtZWwgYW5kIG9uZSBpcyBjaGFpLCBpdCBhIHR5cGUgb2YgdGVhLiBJZiB5b3UgZG9uIGxpa2Ugc3Ryb25nIGNvZmZlZSBmbGF2b3IgaXQgcmVhbGx5IGdvb2QhIiAiTm8sIEkgbWVhbiB3aGF0IGlzIGNhcmFtZWwuIiBFbXBsb3llZSBzcHV0dGVycywgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaG93IHRvIGV4cGxhaW4gY2FyYW1lbCB0byB0aGlzIHdvbWFuIHdobyBpcyB1bmRvdWJ0YWJseSB0aGUgbW9zdCBhdmVyYWdlIHdvbWFuIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBoYXMgZXhwZXJpZW5jZWQgY2FyYW1lbCBiZWZvcmUgaW4gaGVyIDQwKyB5ZWFycy4gRW1wbG95ZWUgcmVwbGllZC4gdGhlIGNvZmZlZSBpcyBzdHJvbmdlciBpbiB0aGF0IG9uZS4iIFRoZW4gYWN0dWFsbHkgZXhwbGFpbnMsIGluIGRldGFpbCwgd2hhdCBjYXJhbWVsIGlzLiBMaWtlLCBDaHJpc3QsIEkgY2FuIHVuZGVyc3RhbmQgbm90IGdldHRpbmcgd2hhdCBjaGFpIG1lYW5zIGJ1dCBub3QgdW5kZXJzdGFuZGluZyBjYXJhbWVsIGlzIGJleW9uZCBzdHVwaWQuIEkgYXJvdW5kIHRoZSBjb3JuZXIgYW5kIGhlYXIgbW9zdCBvZiB0aGUgY29udmVyc2F0aW9uLiBUaGlzIHdvbWFuIGdldHMgbW9yZSBhbmdyeSB0aGUgbW9yZSB0aGUgZW1wbG95ZWUgdHJpZWQgdG8gZXhwbGFpbiBpdCB0byBoZXIgdW50aWwgc2hlIGRlbWFuZGVkIHRoZSBtYW5hZ2VyLiBUaGlzIGVtcGxveWVlIGlzIGFic29sdXRlbHkgdGhlIG1vc3QgcGF0aWVudCwgaGFyZCB3b3JraW5nLCBraW5kZXN0IGdpcmwgSSBldmVyIHdvcmtlZCB3aXRoLiBUaGUgb25seSBwcm9ibGVtIGlzIHRoYXQgc2hlIHJlYWxseSB0ZW5kZXIgaGVhcnRlZCBhbmQgaWYgc29tZW9uZSBpcyBjb25mcm9udGF0aW9uYWwgd2l0aCBoZXIgc2hlIGNvbXBsZXRlbHkgc2h1dHMgZG93bi4gSSBjb21lIGFyb3VuZCB0aGUgY29ybmVyIGFuZCB0aGUgYmFyaXN0YSBsb29rcyBsaWtlIHNoZSBhbG1vc3QgaW4gdGVhcnMuIEkgdGVsbCB0aGUgd29tYW4gdGhhdCB0aGUgYmFyaXN0YSBleHBsYWluZWQgaXQgdGhlIGJlc3Qgd2F5IHNoZSBjb3VsZCBhbmQgSSBjb3VsZG4gcmVhbGx5IGV4cGxhaW4gaXQgYmV0dGVyIHRoYW4gaGVyLiBTaGUgY29tcGxhaW5zIGFib3V0IG15IGVtcGxveWVlIGF0dGl0dWRlIGFuZCBzaGUgd2FzIHJ1ZGUuIEkgYXNrZWQgaGVyIGlmIHNoZSB3b3VsZCBsaWtlIHNvbWV0aGluZyBlbHNlLiBTaGUgc2FpZCBzaGUgYWxyZWFkeSBvcmRlcmVkIChzaGUgaGFkbiBTbyBJIG1hZGUgaGVyIGEgY29mZmVlIGFuZCBzaGUgZnVja2VkIG9mZi4gVGhlIGJhcmlzdGEga2VwdCBhc2tpbmcgbWUgaWYgc2hlIHdhcyBydWRlIHRvIHRoZSB3b21hbiwgSSBoYWQgdG8gcmVhc3N1cmUgaGVyIHNoZSBoYWRuIHRoZSB3b21hbiB3YXMganVzdCBkdW1iZXIgdGhhbiBkb2cgc2hpdC4gSSBmZWx0IHNvIGJhZCBmb3IgaGVyLgpJdCBpcyBub3Qgd29ydGggdGhlIHJpc2ssIHRvIG1lIGFueXdheS4gCkhlciBiYWNrZ3JvdW5kIHdhcyBpbiBudXRyaXRpb24sIGFuZCBoZXIgZGF1Z2h0ZXIgaGFkIHdvcmtlZCBhcyBhIG1hc3NhZ2UgdGhlcmFwaXN0IGFuZCBlc3RoZXRpY2lhbiwgd2l0aCBleHBlcmllbmNlIGZvcm11bGF0aW5nIHNraW4gY2FyZSBwcm9kdWN0cy4KQXMgZm9yIGhvdyBtaW5lcnMgYmxvY2tlZCBzZWd3aXQsIHRoZXkgcmVmdXNlZCB0byBpbXBsZW1lbnQgdGhlIG5ldyBzb2Z0d2FyZSB0aGF0IHVzZWQgYSA5MCUgbm9kZSB0aHJlc2hvbGQgdG8gY29vcmRpbmF0ZSB0aGUgc29mdCBmb3JrLiBUaGlzIGlzIHRoZSBmaXJzdCB0aW1lIHRoaXMgY29vcmRpbmF0aW9uIG1lY2hhbmlzbSB3YXMgZXZlciB1c2VkIHRvIGRlbGF5IGEgcm9sbG91dCwgYW5kIHVuZm9ydHVuYXRlbHksIGJlY2F1c2UgaXQgd2FzIHRyZWF0ZWQgYXMgYSB2b3RpbmcgbWVjaGFuaXNtLCBpdCBwcm9iYWJseSB3aWxsIG5ldmVyIGJlIGNvbnNpZGVyZWQgaW4gdGhlIGZ1dHVyZS4uIApUaGVuIHRoZXkgd2VyZSBsaWtlLCAiT2gsIHdlbGwgd2UgYmUgZ2xhZCB0byB0YWtlIHlvdSB3aGVyZSB5b3UgbmVlZCB0byBnby4iIFdlIHN0YXJ0ZWQgdG8gd29ycnkgd2Ugd2VyZSBnb2luZyB0byBiZSBraWRuYXBwZWQgaW50byBhIGN1bHQsIGFuZCB3ZXJlIHJlbGlldmVkIHdoZW4gdGhleSBsZXQgdXMgb3V0Li4gCkkgZG9uIGRvdWJ0IHRoYXQgdGhleSB3b3VsZCBoYXZlIG5vIHRyb3VibGUgYXQgYWxsIHJlY29nbmlzaW5nIHNvbWVvbmUgZnJvbSBCZXJsaW4sIENvbG9nbmUsIFN3YWJpYSBvciBTaWxlc2lhLgpHb3Zlcm5pbmcgdGhlIHBhcnRpZXMuIE1HQ0IgRXhlY3V0aXZlIERpcmVjdG9yIFJpY2hhcmQgS2FsbSBzYWlkIHRoZSBib2FyZCBoYXMgbm90IGJlZW4gYXNrZWQgYnkgY29tbWVyY2lhbCBjYXNpbm9zIHRvIGFjdCBvciByZWFjdCBpbiBhbnkgd2F5LiAKSSBzcGVudCB5b25rcyByZWFkaW5nIGFsbCB0aGUgY291cnQgc3R1ZmYgZnJvbSB0aGUgTUogY2FzZXMgb3ZlciB0aGUgeWVhcnMgYW5kIGl0IHdhcyBjbGVhciB0byBtZSB0aGlzIHdhcyBhbGwgbm9uc2Vuc2UsIHRoYXQgaGUgd2FzIGlubm9jZW50LiBUaGUgY29wcyBmb3VuZCBub3RoaW5nIGV2ZW4gYWZ0ZXIgMiByYWlkcy4gCkV2ZW4gdGhvdWdoIGl0IHRlY2huaWNhbGx5IHdhc24gYSB0cmFuc2dyZXNzaW9uIGFnYWluc3QgbWUgZGlyZWN0bHksIHRoZXJlIGlzIHRoaXMgdW5kZXJseWluZyBzZW5zZSBvZiBkZXN0aW55IGluIG91ciByZWxhdGlvbnNoaXAsIGFuZCBpdCBmZWVscyBsaWtlIHRoZSBwYXRoIGhlIHRvb2sgYmV0cmF5ZWQgbWUsIGFuZCBiZXRyYXllZCBHb2QgcHJvbWlzZSAgIGFuZCBpdCBkaWQsIHVsdGltYXRlbHkuIEl0IGZlZWxzIGxpa2UgYWR1bHRlcnksIGFuZCBpbiBhIHdheSBpdCBpcyAgIG91ciBvcmllbnRhdGlvbiBvZiB0aW1lIGlzbiBHb2QgQnV0IGl0IGFsc28gaXNuIHJpZ2h0PyBBdCBsZWFzdCBwcm9wZXIgYWR1bHRlcnkgd291bGQgYmUgbW9yZSBjdXQgYW5kIGRyeS4gSXQgZmVlbHMgbGlrZSBhbiBlbmRsZXNzIHRvcnR1cmUsIHRvIGJlIGhvbmVzdC4uIAozIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28uIApDYW4gaGF2ZSBkaXNhZ3JlZW1lbnRzIGFib3V0IHRoaW5ncyBsaWtlIHRoaXMuIFNpbmNlIHRoZXJlIG5vdGhpbmcgb2JzY2VuZSBvciBhYmhvcnJlbnQgYWJvdXQgR3VhcmRpYW5zIG9mIHRoZSBHYWxheHksIHlvdSBkaWRuIGRvIGFueXRoaW5nIHdyb25nIGJ5IHNob3dpbmcgaXQgdG8gdGhlbSAgIGJ1dCBvbiB0aGUgb3RoZXIgaGFuZCwgbmVpdGhlciBpcyBzaGUgZG9pbmcgYW55dGhpbmcgd3JvbmcgYnkgbm90IGNob29zaW5nIHlvdSB0byBtaW5kIGhlciBraWRzIGluIHRoZSBmdXR1cmUuLiAKTWVtb3J5OyB3YXlzIHRvIGtlZXAgbWVtb3J5IChwaG90b2dyYXBoLCBwYWludGluZywgZGlhcnksIGV0Yy4pdi4gCldpdGggbXkgR2FybWluIEkgc3luYyBteSBydW5zIHRvIFN0cmF2YS4gCk9uIHRoZSBvdGhlciBoYW5kLCBJIGZpcm1seSBhZ2FpbnN0ICJmYXQgYWN0aXZpc20iIHRoYXQgdGFyZ2V0cyBjaGlsZHJlbiBhbmQgdGVlbmFnZXJzLCB3aG9zZSBkZWNpc2lvbiBtYWtpbmcgY2FwYWJpbGl0aWVzIGFyZSBub3QgZnVsbHkgZGV2ZWxvcGVkLiBCdXQgaWYgeW91IGp1c3QgaGVscGluZyBhZHVsdCBpbmRpdmlkdWFscyB3aG8gd2FudCB0byBzdG9wIGJlaW5nIHZpb2xlbnRseSBzaGFtZWQgZm9yIHRoZWlyIHBlcnNvbmFsIGNob2ljZXMgKHdoaWNoIGNhbiBiZSBjb3VudGVycHJvZHVjdGl2ZSBpZiB0aGV5IHRyeWluZyB0byBsb3NlIHdlaWdodCksIEkgYWxsIGZvciBpdC4KWW91IGRvbiBoYXZlIG11Y2ggd2luY25zIHNvIHdhbnQgdG8gcHJvdGVjdCB0aGUgb25lcyB5b3UgaGF2ZS4uIApXaGlsZSBJIHdpbGwgYWRtaXQgdGhhdCBpT1MgNiBsb29rcyAicXVhaW50IiBhdCBiZXN0IHRoZXNlIGRheXMsIGF0IGxlYXN0IGl0IHJlZmxlY3RlZCB0aGUgInBoeXNpY2FsIHJlYWxpdHkiIHRoYXQgbWFkZSBpT1Mgc28gZ3JlYXQuIFRoaW5rIGFib3V0IEpvYnMgaW50cm9kdWN0aW9uIG9mIHRoZSBpUGhvbmUgYW5kIGlPUyAgIHNvIG11Y2ggb2Ygd2hhdCBtYWRlIGl0IGFtYXppbmcgd2FzIGhvdyBpdCBtYXBwZWQgb3VyIG91ciBwaHlzaWNhbCB3b3JsZC4gVGhlIG1vbWVudHVtIGFuZCBmcmljdGlvbiBleGhpYml0ZWQgaW4gc2Nyb2xsaW5nLCB0aGUgcnViYmVyeSBib3VuY2Ugd2hlbiBoaXR0aW5nIHRoZSBlbmQgb2YgYSBsaXN0LCB0aGUgdGFjdGlsaXR5IG9mIHBpbmNoL3NwcmVhZCB6b29tIG91dC9pbiAgIGFsbCBvZiB0aGVzZSBtYWRlIGludGVyYWN0aW5nIHdpdGggdGhlIGRldmljZSBtaXJyb3Igb3VyIHJlYWwgd29ybGQgZXhwZXJpZW5jZXMuIApTbyBJIGFtIG5vdCB0YWxraW5nIGFib3V0IG9ubGluZSBwbGF5ZXJzIGVpdGhlci4uIApBYm9ydGlvbiBjYW4gYmUgY29zdGx5LCBjYW4gYmUgcGFpbmZ1bCBhbmQgZW1vdGlvbmFsbHkgdHJhdW1hdGljLiAKVGhlIGF2ZXJhZ2UgbGlzdGluZyBwcmljZSBmb3IgTmFzaHZpbGxlIGhvbWVzIGZvciBzYWxlIG9uIFRydWxpYSB3YXMgJDUwNCwxOTkgZm9yIHRoZSB3ZWVrIGVuZGluZyBKYW4gMTQsIHdoaWNoIHJlcHJlc2VudHMgYW4gaW5jcmVhc2Ugb2YgMC44JSwgb3IgJDMsODgzLCBjb21wYXJlZCB0byB0aGUgcHJpb3Igd2VlayBhbmQgYW4gaW5jcmVhc2Ugb2YgMi4xJSwgb3IgJDEwLDM4MSwgY29tcGFyZWQgdG8gdGhlIHdlZWsgZW5kaW5nIERlYyAyNC4gQXZlcmFnZSBwcmljZSBwZXIgc3F1YXJlIGZvb3QgZm9yIE5hc2h2aWxsZSBUTiB3YXMgJDE1NSwgYW4gaW5jcmVhc2Ugb2YgMTIuMyUgY29tcGFyZWQgdG8gdGhlIHNhbWUgcGVyaW9kIGxhc3QgeWVhci4gUG9wdWxhciBuZWlnaGJvcmhvb2RzIGluIE5hc2h2aWxsZSBpbmNsdWRlIEluZ2xld29vZCwgV2VzdCBNZWFkZSwgVXJiYW5kYWxlIE5hdGlvbnMsIEJvcmRlYXV4IEFyZWEsIEhpbGxzYm9ybyBXZXN0IEVuZCwgYW5kIEJlbGxzaGlyZSBUZXJyYWNlLi4gCk1pbGl0YXJ5IHJlcG9ydCBtb3JlIGNvbXBsZW1lbnRhcnkgYW5kIGFsdGVybmF0aXZlIG1lZGljaW5lIHVzZSB0aGFuIGNpdmlsaWFucy4gClRvdXMgbGVzIGRpbWFuY2hlcyBtYXRpbnMgdW4gcGV0aXQgbWFyY2ggbG9jYWwgZXN0IG9yZ2FuaXMgY290IGRlIGwnIGdsaXNlLiAKR3Vhbmd6aG91LCBkaWUgSGF1cHRzdGFkdCBkZXIgY2hpbmVzaXNjaGVuIFByb3ZpbnogR3Vhbmdkb25nLCBpc3QgZWluIHdpY2h0aWdlcyBIYW5kZWxzemVudHJ1bSB1bmQgZWluZSBkZXIgd2lydHNjaGFmdGxpY2ggZHluYW1pc2Noc3RlbiB1bmQgZmxvcmllcmVuZHN0ZW4gUmVnaW9uZW4gQ2hpbmFzLiAKVGhlIFBNTCAoTikgdG9vIGhhcyBhIHRydW1wIGNhcmQgaW4gdGhlIHNoYXBlIG9mIFBQUCBnb3Zlcm5tZW50cyBpbiBBemFkIEthc2htaXIgYW5kIEdpbGdpdCBCYWx0aXN0YW4sIHdoaWNoIGNvdWxkIGJlIG92ZXJ0aHJvd24gYW55IHRpbWUgdGhlIFBNTCAoTikgd2FudHMuIEJ1dCByaWdodCBub3cgQXNpZiBaYXJkYXJpIHNlZW0gdG8gaGF2ZSBhIGJldHRlciBoYW5kIGF0IHRoZSB0YWJsZS4gQW5kIGhlIGhhcHBlbnMgdG8gYmUgYSBiZXR0ZXIgcGxheWVyIHRvbyB3aGVuIGl0IGNvbWVzIHRvIHBvbGl0aWNhbCBwb2tlci4gSGlzIGNhbGwgdG8gVGFoaXJ1bCBRYWRyaSB3YXMgYSBtYXN0ZXIgc2hvdCB0byBleGVydCBwcmVzc3VyZSBvbiB0aGUgUE1MIChOKS4gRXZlbiBQUFAgbWluaW9ucyB3ZXJlIHNlZW4gY3V0dGluZyBwZXJzb25hbCBkZWFscy4gQSBTaW5kaGkgbWVtYmVyIHdhcyBmb3VuZCBwcmVzc3VyaW5nIGEgbWluaXN0ZXIgaW4gdGhlIGxvYmJpZXMgdG8gaGF2ZSB0d28gYXBwb2ludGVkIGluIEF0dG9ybmV5IEdlbmVyYWwgb2ZmaWNlLiBUaGUgUFBQIGxldmVyYWdlIHdpbGwgaW5jcmVhc2UgdGhlIG1lc3NpZXIgaXQgdHVybnMuClRoZSBPc2NhciBub21pbmF0ZWQgYWN0cmVzcyBpcyB0aGUgc3RhciBvZiB0aGUgdXBjb21pbmcgTW9sbHkncyBHYW1lLCBkdWUgdG8gaGl0IHRoZWF0ZXJzIG9uIE5vdmVtYmVyIDIyLCB3aGljaCB0ZWxscyB0aGUgc3RvcnkgZnJvbSB0aGUgcG9pbnQgb2YgdGhlIHZpZXcgb2YgQmxvb20gaGVyc2VsZi4gQW55b25lIHdobyBlbmpveWVkIHRoZSBmYXN0IHBhY2VkLCB0YWtlIG5vIHByaXNvbmVycyB3b21hbiBvZiBzdGVlbCB0aGF0IENoYXN0YWluIHByb2R1Y2VkIGluIHRoZSByZWNlbnQgTWlzcyBTbG9hbmUgd2lsbCBmaW5kIGFub3RoZXIgdW5saWtlbHkgaGVyb2luZSBoZXJlLgpIZSBzYWlkIHB1bnRlcnMgaGFkIGEgYmV0dGVyIGNoYW5jZSBhdCBwcm9maXRpbmcgZnJvbSBjYXJkIGJhc2VkIHBva2VyIGJlY2F1c2UgdGhhdCBnYW1lIHdhcyBiYXNlZCBvbiBza2lsbCwgcmF0aGVyIHRoYW4gY2hhbmNlLgo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIERpZ2l0YWwgYW5kIHNtb2tlIGZyZWUuIEEgZGl2ZXJzaWZpZWQgbXVsdGkgY3VsdHVyYWwsIHBvc3QgbW9kZXJuIGRlY29uc3RydWN0aW9uIHRoYXQgaXMgYW5hdG9taWNhbGx5IGFuZCBlY29sb2dpY2FsbHkgaW5jb3JyZWN0LiBJJ3ZlIGJlZW4gdXAgbGlua2VkIGFuZCBkb3dubG9hZGVkLCBJJ3ZlIGJlZW4gaW5wdXR0ZWQgYW5kIG91dHNvdXJjZWQsIEkga25vdyB0aGUgdXBzaWRlIG9mIGRvd25zaXppbmcsIEkga25vdyB0aGUgZG93bnNpZGUgb2YgdXBncmFkaW5nLiBJJ20gYSBoaWdoIHRlY2ggbG93IGxpZmUuIEEgY3V0dGluZyBlZGdlLCBzdGF0ZSBvZiB0aGUgYXJ0IGJpIGNvYXN0YWwgbXVsdGkgdGFza2VyIGFuZCBJIGNhbiBnaXZlIHlvdSBhIGdpZ2FieXRlIGluIGEgbmFub3NlY29uZCEKTCd0IG4nYSBwYXMgdG91am91cnMgdCB0cnMgdHJhbnF1aWxsZSBkYW5zIG5vdHJlIHF1YXJ0aWVyLCBuaSBkYW5zIGNlbHVpIGRlIGxhIHBsYWNlIGRlIGxhIENoYXBlbGxlLiBOb3VzIGF0dGVuZGlvbnMgbGEgcm91dmVydHVyZSBkZSBsYSBzdGF0aW9uIENodGVhdSByb3VnZSBhdmVjIHVuZSBjZXJ0YWluZSBpbXBhdGllbmNlIGVuIGVzcHJhbnQgcXVlIGxlcyBvY2N1cGF0aW9ucyBkdSBib3VsZXZhcmQgQmFyYnMgdmVycyBsYSBzdGF0aW9uIGRlIG10cm8gc2UgcmR1aXJhaWVudC4gClNvIEkgcmFpc2VkIHRoZSBob29kIGFuZCBmb3VuZCB0aGF0IGl0IHdhcyB1bnBsdWdlZC4gClByb2JsZW0gaXMgaGlnaCByZXNhbGUgb25seSBoZWxwcyBjb25zdW1lcnMgcGxheSBnYW1lcyBmb3IgYSBiaXQgYW5kIHNlbGwsIGl0IGRvZXNuIGhlbHAgTmludGVuZG8uIApTZW5zaW5nIHRoZXkgd2VyZSBvbiBhIHdpbm5pbmcgc3RyZWFrLCB0aGV5IGdvdCBlbmdhZ2VkIG9uIHRoZSBzYW1lIGRheSwgbWFycmllZCBhdCBhIGpvaW50IGNlcmVtb255IChvZmZpY2lhbGx5ICJxdWFydGVybmFyeSBtYXJyaWFnZXMiKSwgYW5kIGJ1aWx0IGEgcGFpciBvZiBob21lcywgc2lkZSBieSBzaWRlLgoiTmljaHJvbWUgaGFzIGFsc28gZGVzaWduZWQgYW5kIHByb2R1Y2VkIGEgbmV3IGhpZ2ggc3BlZWQgcGFja2FnaW5nIHN5c3RlbSBmb3Igc25hY2sgZm9vZHMgbGlrZSB3YWZlcnMsIGNoaXBzIGFuZCBrdXJrdXJlIGxpa2UgcHJvZHVjdHMsIEluZGlhbiBuYW1rZWVuIGxpa2UgZmFyc2FhbiBtaXgsIG51dHMgYW5kIGRyeSBmcnVpdHMsIGZvciBwYWNraW5nIHF1YW50aXRpZXMgdXB0byAyLDAwMCBjYyBhdCB0aGUgc3BlZWQgb2YgMTIwIHBsdXMgcGFja3MgcGVyIG1pbnV0ZS4gCkV4YW1wbGVzIGluIFNvdXRoIEFtZXJpY2EgYXJlIGp1c3QgYXMgc3RhcmsgICB0aGUgVVMgY2xhaW1lZCB0aGV5IHdlcmUgc3VwcG9ydGluZyB0aGUgQ29udHJhcyBpbiBOaWNhcmFndWEgdG8gZGVmZW5kIGFnYWluc3QgU292aWV0IGluZmx1ZW5jZSBpbiBOaWNhcmFndWEuIFRoaXMgd2FzIGFmdGVyIHByZXZlbnRpbmcgTmljYXJhZ3VhIGZyb20gYWNxdWlyaW5nIEZyZW5jaCBNaXJhZ2UgamV0cyB3aGljaCBmb3JjZWQgdGhlbSB0byBnZXQgdGhlbSBmcm9tIHRoZSBVU1NSLiBUaGV5IGRpZCB0aGUgc2FtZSB0byBDdWJhLiBBbGxlbiBEdWxsZXMgd2FzIG9wZW4gYWJvdXQgdGhpcyBiZWluZyBhbiBlZmZlY3RpdmUgc3RyYXRlZ3kgdG8gdGFybmlzaCB0aGVpciB2aWN0aW0gYW5kIGp1c3RpZnkgaW50ZXJ2ZW50aW9uLgpDaGVhdGluZyBNYXJrZWQgUGxheWluZyBDYXJkcyBpbiBJbmRpYWhhdmUgZ2FpbmVkIGEgbG90IG9mIHBvcHVsYXJpdHkgcGFuIEluZGlhLiBCZWNhdXNlIHRoZXkgY29zdCBlZmZlY3RpdmUgYW5kIGZvciBzbWFsbCBpbnZlc3RtZW50IHlvdSBjYW4gZWFybiBodWdlIGFtb3VudCBvZiBtb25leS4gCiJUaGUgYm90dG9tIGxpbmUgaXMgdGhlcmUgd2FzIG5vdCBlbm91Z2ggY2FzaGZsb3cgdG8ga2VlcCBpdCB2aWFibGUsIiBNciBEYXZpcyBzYWlkLgpJdCB3YXMganVzdCBwdXJlIGFuZCBzaW1wbGUgcHJvcGFnYW5kYS4gQmlkZW4gYSBzbWFydCBndXkuIAoiWWVzIEphbWVzLCB5b3UgYXJlIGdvaW5nIHRvIGJlIG9rLiIgQmV0d2VlbiBzaGFsbG93IGJyZWF0aHMsIEphbWVzIG1hbmFnZWQgdG8gZXhwbGFpbiB3aGF0IGhhcHBlbmVkLCBhbmQgQWx5c3NhIGdhdmUgQ2hhcmxpZSwgaGVyIGNvbGxlYWd1ZSwgc29tZSBiYWNrZ3JvdW5kIG9uIGhpcyBzaXR1YXRpb24gYXMgd2VsbC4gCldhdGVyIHBvbG8gdGVhbSwgd2hpY2ggYmVjYW1lIG9uZSBvZiB0aGUgdG9wIHN0b3JpZXMgb2YgdGhlIDIwMDggQmVpamluZyBPbHltcGljcy5UaGV5IHdvbiB0aGUgc2lsdmVyIG1lZGFsLiBTcXVhZCBlbnRlcmVkIHRoZSBPbHltcGljcyByYW5rZWQgbmludGggaW4gdGhlIHdvcmxkIGFuZCBkZWZlYXRlZCBTZXJiaWEgaW4gdGhlIHNlbWlmaW5hbHMgYmVmb3JlIGZhbGxpbmcgdG8gSHVuZ2FyeSBpbiB0aGUgZ29sZCBtZWRhbCBnYW1lLkRyLiAKU2l4IG9mIHRoZSAzMiBwYXRpZW50cyBzaG93ZWQgcGFydGlhbCB0dW1vciByZWdyZXNzaW9uLiBJbiBvbmUgb2YgdGhlc2UgNiBjYXNlcywgdGhlIGRvc2FnZSBvZiBDb1ExMCB3YXMgaW5jcmVhc2VkIHRvIDM5MCBtZy4gSW4gb25lIG1vbnRoLCB0aGUgdHVtb3Igd2FzIG5vIGxvbmdlciBwYWxwYWJsZSBhbmQgaW4gYW5vdGhlciBtb250aCwgbWFtbW9ncmFwaHkgY29uZmlybWVkIHRoZSBhYnNlbmNlIG9mIHR1bW9yLiAKUG91ciA0NSBkJ2V4dHJhaXQgZG9udCBvbiBuZSBjb25uYWl0IHBhcyBsZSByYXRpbyBhIGZhaXQgY2hlciAhRGVzIHJlc3RyaWN0aW9ucyBvbnQgdCBwdWJsaWVzIHBhciBsJ09NUyAgcHJvcG9zIGRlIGwnYXJ0bWlzaW5pbmUuIExlIHByb2JsbWUgZXN0IHF1ZSBkYW5zIGxlIGNhcyBkZSBmaXZyZXMgcGFsdWRlbm5lcyBsZXMgdGlzYW5lcyBldCBsZXMgZXh0cmFpdHMgZmFpYmxlcyByaXNxdWVudCBkZSBwcm92b3F1ZXIgZGVzIHJzaXN0YW5jZXMuIApOb3QgYSB0ZWFjaGVyLiBJIGFtIGEgc2Nob29sIHBzeWNob2xvZ2lzdDsgSSBmcmVxdWVudGx5IHRlc3Qgc3R1ZGVudHMgZm9yIHNwZWNpYWwgZWR1Y2F0aW9uIHNlcnZpY2VzLCBhbHRob3VnaCBzb21lIHJlZmVycmFscyBhcmUgbW9yZSBiZWhhdmlvciB0aGFuIGFjYWRlbWljIGJhc2VkLiBJIHNvbWV0aW1lcyBzZWUgc3R1ZGVudHMgd2l0aCBhYm92ZSBhdmVyYWdlIGNvZ25pdGl2ZSBhYmlsaXRpZXMsIGJ1dCBhcmUgaGVhdmlseSBpbmZsdWVuY2VkIGJ5IG5lZ2F0aXZlIHBlZXIgYW5kIHJvbGUgbW9kZWwgYmVoYXZpb3JzLiAKQSBtb3JlIHN1YnRsZSBzaWduIG9mIGlsbG5lc3MgaXMgd2hhdCB2ZXRlcmluYXJ5IHRleHRzIGNhbGwgImxldGhhcmd5LiIgKEluIHNpbXBsZSB0ZXJtcywgaXQgbWVhbnMgbGF6aW5lc3Mgb3Igc2x1Z2dpc2huZXNzLikgQSBkb2cgd2hvJ3MgbGV0aGFyZ2ljIG1pZ2h0IHNob3cgbm8gaW50ZXJlc3QgaW4gZ29pbmcgZm9yIGEgd2FsaywgZXZlbiB0aG91Z2ggdGhhdCdzIHVzdWFsbHkgdGhlIGhpZ2hsaWdodCBvZiBoZXIgZGF5LiBTaGUgZG9lc24ndCB3YW50IHRvIHBsYXksIG5vdCBldmVuIGhlciBmYXZvcml0ZSBnYW1lIG9mIGZldGNoIHRoZSB0ZW5uaXMgYmFsbC4gTm93LCBzb21ldGltZXMgbGV0aGFyZ3kgY2FuIGJlIGNoYWxrZWQgdXAgdG8gYSBob3QgZGF5LCBiZWluZyBzb3JlIGFmdGVyIGFuIGV4dHJhIGxvbmcgd2Fsaywgb3IganVzdCBmZWVsaW5nIG91dCBvZiBzb3J0cy4gSWYgaXQgY29udGludWVzIGZvciBtb3JlIHRoYW4gdHdvIGRheXMsIHRob3VnaCwgdGFsayB0byB5b3VyIHZldC4KSXMgdmVyeSBjcml0aWNhbCBhdCB0aGlzIG1vbWVudCBpbiB0aW1lLCBhbmQgc3BlY2lhbCBldmVudHMgZ2l2ZSB1cyB0aGUgYWJpbGl0eSB0byByYWlzZSBhZGRpdGlvbmFsIGZ1bmRzIGFzIHdlbGwgYXMgcHJlc2VudCBvdXIgbWlzc2lvbiBvZiBjYXJlLCBNYW51c2V0dG8gc2FpZC4gR2l2ZXMgdXMgYW4gb3Bwb3J0dW5pdHkgdG8gYnJpbmcgZm9ydGggb3VyIG1pc3Npb24gdG8gbmV3IGZyaWVuZHMgYW5kIG5ldyBkb25vcnMuIFNwYWRybyBhZ3JlZWQsIG5vdGluZyBoaXMgZmF2b3JpdGUgcGFydCBvZiB0aGUgZXZlbmluZyB3YXMgcmFpc2luZyBhd2FyZW5lc3MgZm9yIHRoZSBHdWlsZCBieSBzaGFyaW5nIHN0b3JpZXMgd2l0aCBvdGhlciBndWVzdHMgYWJvdXQgaG93IGl0cyBwcm9ncmFtcyBoYXZlIGhlbHBlZCBoaXMgc29uLi4gCkRvZXMgc2hlIGRvIHRoaXMgd2hlbiB5b3UncmUgbm90IHdpdGggeW91ciBmcmllbmRzIGRvZz8gV2hlbiBJIGdvdCBteSBkb2cgc2hlIHdhcyBmaW5lIG9uIHdhbGtzIGZvciBhIGdvb2QgNSB5ZWFycyBhbmQgdGhlbiBzaGUgcmVhbGx5IHN0YXJ0ZWQgdG8gZGV2ZWxvcCBsZWFzaCBhZ2dyZXNzaW9uLiBDb21wbGV0ZWx5IGZpbmUgb2ZmIGxlYXNoLCBkb2cgcGFya3MgZXRjLCBidXQgc2hlIGdvZXMgZnVsbCBvbiBjdWpvIG9uIHRoZSBsZWFzaCB0byBkb2dzIHNoZSBkb2Vzbid0IGxpa2UuCkludGVybmF0aW9uYWwgRml0bmVzcyBpcyBhIG5pZ2h0bWFyZSB0byB3b3JrIGZvci4gSSB3YXMgaW4gdGhlIGRheWNhcmUgY2VudGVyIGZvciB0aGUgb25lIG9uIEdhdGV3YXkgYW5kIGZvciBvbmUsIHRoZXkgZG9uJ3QgZ2l2ZSB5b3UgYSB3YXkgdG8gY29udGFjdCB0aGUgZnJvbnQgZGVzayBpZiB5b3UgbmVlZCB0byBjYWxsIHVwIGEgcGFyZW50LCB5b3UgaGF2ZSB0byB1c2UgeW91ciBvd24gcGhvbmUgYW5kIGV2ZW4gdGhlbiBzb21ldGltZXMgbm9ib2R5IHBpY2tzIHVwLiBUaGUgcmF0aW8gaXMgMTAga2lkcyB0byBvbmUgcGVyc29uICh1bmxlc3MgaXQncyBhIGNyYXdsaW5nIGJhYnksIHRoZW4gdGhhdCBjb3VudHMgYXMgMy4gV2Fsa2luZyBiYWJpZXMgb25seSBjb3VudCBhcyAxKS4gQWxzbyBkb24ndCBjb3VudCBvbiBnZXR0aW5nIGEgY2hhbmNlIHRvIGdvIHRvIHRoZSBiYXRocm9vbS4gWW91IGNhbid0IGp1c3QgbGVhdmUgdGhlIGtpZHMgdG8gZmVuZCBmb3IgdGhlbXNlbHZlcywgc28geW91IGhhdmUgdG8gY2FsbCB0aGUgZnJvbnQgZGVzayBhbmQgcHJheSBzb21lb25lIHBpY2tzIHVwIGFuZCB0aGF0IHRoZXkgY2FuIGNvbWUgd2F0Y2ggeW91ciBraWRzIHdoaWxlIHlvdSBkbyB5b3VyIGJ1c2luZXNzLiBPbmUgZGF5IEkgd2VudCBpbiBmb3IgYSBzaGlmdCBhbmQgdGhleSBhbWJ1c2hlZCBtZSB3aXRoIGEgbWVldGluZyAobm90IGV2ZW4gYXQgbXkgcmVndWxhciBsb2NhdGlvbiwgZWl0aGVyISkgYW5kIGdhdmUgbWUgYSBidW5jaCBvZiBzdXBwb3NlZCBjb21wbGFpbnRzIGZyb20gcGFyZW50cyB0aGF0IGhhZCB0byBoYXZlIGJlZW4gbWFkZSB1cCwgaXQgd2FzIHJpZGljdWxvdXMuIEF0IHRoZSB0aW1lLCB0aGV5J2QgbmV2ZXIgZXZlbiB0b2xkIG1lIGFib3V0IHRoZSBhZHVsdCB0byBraWQgcmF0aW8gYW5kIGdvdCBhZnRlciBtZSBmb3IgaGF2aW5nIDE3IGtpZHMgYXQgb25jZSAodGhleSBuZXZlciB0b2xkIG1lIHdoYXQgbXkgbGltaXQgd2FzKS4gVGhleSBzdXNwZW5kZWQgbWUsIGFuZCB0aGVuIGNhbGxlZCBtZSBiYWNrIGluIHRvICJkaXNjdXNzIG15IGVtcGxveW1lbnQuIiBUaGF0J3Mgd2hlbiB0aGV5IGxldCBtZSBnby4gT2RkbHkgZW5vdWdoLCBJIGdvdCBteSBiaWdnZXN0IHBheWNoZWNrIHdoZW4gSSBsZWZ0IHRoYW4gd2hlbiBJIHdhcyBhY3R1YWxseSB3b3JraW5nLgpXZSBvYnNlcnZlZCBpbiBob3VzaW5nIG1hcmtldHMgaXMgdGhhdCB3ZSBzZWVuIGEgbW9kZXJhdGlvbiBpbiBhY3Rpdml0eSBpbiBtYW55IGNlbnRyZXMgYWNyb3NzIENhbmFkYSBzaW5jZSB0aGUgc3RyZXNzIHRlc3QgaGFzIGJlZW4gaW1wb3NlZC4gQnV0IHRoZXJlIGFyZSBvdGhlciB0aGluZ3MgZ29pbmcgb24gYXMgd2VsbCB3aXRoIHJlc3BlY3QgdG8gZnVuZGFtZW50YWxzIHdoaWNoIGFyZSBjb250cmlidXRpbmcgdG8gc29tZSBvZiB0aGUgc2xvd2VyIGRlbWFuZCwgaGUgc2FpZC4KSXQgd291bGQgYmUgZWFzaWVyIGlmIHRoZXJlIHdhcyBhIHNvbGlkIHJlYXNvbiwgb25lIHRoYXQgd2UgY291bGQgYWxsIHNvcnQgb2Ygc2F5ICJva2F5IHdlbGwgaGUncyBzdGlsbCBhIG1vbnN0ZXIgYnV0IHRoYXQhIFRoYXQgbWFrZXMgbW9yZSBzZW5zZSIuIEJ1dCBJIGRvbid0IHRoaW5rIHRoZXJlIGlzIG9uZS4gClRoZSB0cmFkZSBpcyBhbHdheXMgbWFkZSBieSAyIGRvcHBlbGdhbmdlcnMgKFBvbGVtIGFuZCBEYXJrZW1vKS4gCkFuZCBpZiBpdCBkb2VzIGNydXNoLCBzaGUgY2FuIGp1c3QgZmxhZyBhIHNlY3VyaXR5IGd1YXJkIGEgZmV3IGluY2hlcyBhd2F5IHRvIGhlbHAgaGVyIGdldCBvdXQuIE90aGVyIHRoYW4gdGhhdCwgbWlnaHQgaGF2ZSB0byBiZSB3YXJ5IG9mIGNyb3dkIHN1cmZlcnMsIGJ1dCBldmVyeW9uZSBlbHNlIGFyb3VuZCBoZXIgd291bGQgdGFrZSBjYXJlIG9mIHRoYXQuLiAKSXQgbWFrZSB0aGUgY2lyY2xlamVyayBzbyBtYWQuIApTQUREWSwgRnJlZGVyaWNrIEpvc2VwaCAgIEphbnVhcnkgMjgsIDIwMTcsIHF1aWV0bHkgYXQgUGFya3dvb2QgSG9zcGl0YWwgVmV0ZXJhbnMgV2luZywgd2l0aCBmYW1pbHkgYnkgaGlzIHNpZGUsIEZyZWRlcmljayBKb3NlcGggU2FkZHkgaW4gaGlzIDk3dGggeWVhcjsgZ29uZSB0byAidGhlIGJpZyBhdXRvIHdyZWNrZXJzIGluIHRoZSBza3kuIiBCb3JuIGluIExvbmRvbiBPbnRhcmlvIGluIDE5MjAuIE9sZGVzdCBzb24gb2YgTGViYW5lc2UgaW1taWdyYW50cywgRnJlZGEgQWJkZW5vb3IsIDE5MDQgICAxOTMyLCBhbmQgQWxiZXJ0IFNhZGR5LCAxODkwICAgMTk1NC4gCkluIGEgZmllbGQgb2YgNjU5OCBwZW9wbGUsIEx1b25nbyBsYXN0ZWQgdXAgdG8gRGF5IDQsIGVuZGluZyB0aGUgdG91cm5hbWVudCBhdCB0aGUgNjM0dGggc3BvdCB0YWtpbmcgaG9tZSBhIGNvb2wgJDE5LDc3NywgYW5kIG91dGxhc3RpbmcgcHJvZmVzc2lvbmFscywgc2VtaSBwcm9zLCBhbmQgeW91ciA1dGggZ3JhZGUgS2luZGVyZ2FydGVuIHRlYWNoZXIuIAoiVGhleSdyZSB2ZXJ5IGRpc3RyZXNzZWQgYnkgd2hhdCdzIGhhcHBlbmVkLCBidXQgdGhlIG5leHQgdGhpbmcgdGhleSBkbyBpcyBiZXQgYWdhaW4uIApJcyB0aGVyZSBhbnkgd2F5IHRvIGdldCBmcmVlIFp5bmdhIHBva2VyIGNoaXBzCkRpc29ucyBsZSBjcm1lbnQsIGlsIGZhdXQgdGFwZXIgbCBvIGEgZmFpdCBtYWwsIGMnZXN0ICBkaXJlIGF1IHBvcnRlZmV1aWxsZS4gCkplc3NlIEhhbGwgb2YgR3Vubmlzb24sIGEgc2tpZXIga25vd24gZm9yIHB1c2hpbmcgbGltaXRzIChhbmQgYmlnIGNsaWZmcyksIG1hZGUgaGlzIGdvbGQgbWVkYWwgYmlkIHdpdGggYSBuZXZlciBiZWVuIGRvbmUgYmVmb3JlIGdhcCBqdW1wIG92ZXIgdGhlIG1vdXRoIG9mIENhcnJvdCBDaHV0ZS4gV2hpbGUgSGFsbCBiYXJlbHkgbWlzc2VkIHRoZSBwaWxsb3cgaGUgd2FzIGFpbWluZyBmb3IgdG8gc3RpY2sgdGhlIGxpbmUsIGFuZCBza2lkZGVkIGRvd24gdGhlIHJvY2sgd2FsbCwgaGUgc3RheWVkIG9uIGhpcyBmZWV0LCBza2kgdGlwcyBkb3duIHRoZSBmYWxsIGxpbmUsIGFuZCBjaGFyZ2VkIHRoZSByZXN0IG9mIHRoZSBsaW5lLiAKSXQgZmVhdHVyZXMgTWFyc2hhbGwgU3V0Y2xpZmZlIChIb3N0IG9mIGFsbCB0aGUgc2hvd3MgaGVyZSkgYW5kIEpvbiBMb3Vja3MgKGFuIG9sZCBMUiBob3N0LCBhbmQgd2l0aCBhIG9uZSBmb3Igb25lIGVwaXNvZGUgaGVyZSkuLiAKSWYgdGhlcmUgaXMgbm8gZGVtb2NyYWN5IHdpdGhpbiBwYXJ0aWVzLCBob3cgY2FuIHRoZXkgaGF2ZSBhIGZlZWxpbmcgZm9yIGl0IHdoZW4gZ292ZXJuaW5nPyBJbiBzaG9ydCwgYm90aCB0aGUgaW5kaXZpZHVhbCBwb2xpdGljaWFucyBhbmQgdGhlIHBhcnRpZXMgbXVzdCBiZSBzaW5jZXJlLCBob25lc3QgYW5kIGp1c3QgaWYgZ29vZCBnb3Zlcm5hbmNlIGlzIHRvIHByZXZhaWwgaW4gUGFraXN0YW4uLiAKVGhhdCB3YXksIHRoZSBvd25lciBrbm93cyB0aGF0IGlmIEkgdGFrZSBhIHR1bWJsZSBkb3duIHRoZSBzdGFpcnMsIHRoZXkgd2lsbCBub3QgYmUgaGVsZCByZXNwb25zaWJsZS4gClRoZXkgYXJlIGp1c3QgdGhlIG9wcG9zaXRlIGdlbmRlciBvZiB3aGF0IHdlIGFyZS4gTWFpbnRhaW5pbmcgZXllIGNvbnRhY3QgYWxzbyBzYXlzIHRvIGEgd29tYW4gdGhhdCB5b3UgYXJlIGludGVyZXN0ZWQgaW4gaGVyIGFuZCB0aGF0IHlvdSB3YW50IHRvIGdldCB0byBrbm93IGhlci4gVGhpcyBwb3N0IGRpc2N1c3NlcyBob3cgdG8gZmluZCBhbiBJbmRpYW4gZ2lybCBvbiB5b3VyIG1vYmlsZSBwaG9uZS4gSWYgeW91IGFyZSBjaGF0dGluZyB3aXRoIGhlciBvbiB5b3VyIG1vYmlsZSBhc2sgaGVyIHRvIHNlbmQgYSBwaG90by4gSSBtb3ZlZCB0byB0aGUgdG93biB3aGVyZSBJIG1ldCBteSBmdXR1cmUgd2lmZSBLYXRlIGFuZCB0cmllZCB0byBiZSBmcmllbmRzLiBJZiB5b3UgYXJlIGxvb2tpbmcgZm9yIGdpcmwgZnJpZW5kIHdoYXRzYXBwIG51bWJlciBvciB3YW50IHRvIG1ha3cgbmV3IGZyaWVuZHNoaXAgb3IgcmVsYXRpb25zaGlwIHRoZW4geW91IGNhbiBtZXNzYWdlIG1lLgpIZSBhbmQgcmFzaGFyZCBhYnNvbHV0bHkgdG9yY2hlZCB0aGUgY2F2cy4gCkxlZSwgYSBuYXRpdmUgb2YgSG9uZyBLb25nLCBpcyB3ZWxsIGJ1aWx0IGFuZCB3ZWFycyBhIGJsYWNrIHRpZ2h0IGZpdHRpbmcgR2lvcmdpbyBBcm1hbmkgVCBzaGlydC4gSGUgY291bGQgYWxtb3N0IHBhc3MgZm9yIGEgbmlnaHRjbHViIGJvdW5jZXIgaWYgaXQgd2VyZW4ndCBmb3IgdGhlIHNvZnRlbmluZyBlZmZlY3Qgb2YgaGlzIGV5ZXdlYXIsIGxhcmdlIGdsYXNzIHNxdWFyZXMgd2l0aCBkaWFtb25kbGlrZSBzdHVkcyBhdCB0aGVpciBjb3JuZXJzLiAKT3V0Y29tZSBtZWFzdXJlcyBpbmNsdWRlZCBkaXJlY3QgbWVhc3VyZXMgKGZyZXF1ZW5jeSBvZiBnYW1ibGluZyBhbmQgZHVyYXRpb24gb2YgZ2FtYmxpbmcgaW4gYSBzcGVjaWZpZWQgdGltZSBwZXJpb2QsIHBhcnRpYWwgb3IgY29tcGxldGUgYWJzdGluZW5jZSBmcm9tIGdhbWJsaW5nKSBvciBsZXNzIGRpcmVjdCBtZWFzdXJlcyAocHJlb2NjdXBhdGlvbiwgc2VsZiBjb250cm9sIG9yIHVyZ2UgdG8gZ2FtYmxlKS4gCklmIEkgd2VyZSB0byB0YWtlIGEgd2lsZCBndWVzcywgSSBpbWFnaW5lIGhlYWRzIHVwIHBva2VyIHdpbGwgYmUgc29sdmVkIHRvIGEgc2ltaWxhciBkZWdyZWUgYXMgY2hlc3Mgd2l0aGluIDUgeWVhcnMsIGFuZCBtdWx0aSB3YXkgd2l0aGluIDEwIHllYXJzLgpJdCdzIHlvdXIgYnVzaW5lc3Mgd2hhdCB5b3UgY2hvb3NlIHRvIHNoYXJlL3Bvc3Qgb24gc29jaWFsIG1lZGlhLiAKQWxlcnRlZCwgdGhlIGFydGlsbGVyeSBmcm9tIGVhY2ggc2lkZSB6ZXJvIGluIG9uIHdoYXQgaXMgc3VzcGVjdGVkIHRvIGJlIHRoZSBvcGVuaW5nIGVuZCBvZiB0aGUgdHVubmVscywgcHVtbWVsIHRoZW0sIGRlc3Ryb3lpbmcgdGhlIGFjY2Vzcy4gU28gbm93LCBib3RoIHNldHMgaW4gd2hhdCBpcyBub3cgdmlydHVhbGx5IG9uZSB0dW5uZWwsIGFyZSBmaWdodGluZyBpbiB0aGUgZGFyay4gCllvdSBoYXZlIGEgY29tcGxleCBsaWZlIGZ1bGwgb2YgbXlyaWFkIGV4cGVyaWVuY2VzIGFuZCBhIG11bHRpdHVkZSBvZiBzdG9yaWVzIHlvdSBjYW4gdGVsbCBhYm91dCB5b3VyIGxpZmUuIEJ1dCBkbyB5b3UgZXhwbGFpbiB5b3VyIHdob2xlIGxpZmUgc3Rvcnkgd2hlbmV2ZXIgeW91IG1lZXQgc29tZW9uZSBuZXc/IEkgZG91YnQgaXQuIApBaG1lZCBhZGRlZCB0aGF0IHRoZXJlIGFyZSBhbmQgdGFrZXMgaW4gdGhlIGFkanVzdG1lbnRzLCBidXQgYXMga2luZCBvZiBhbiBhdmVyYWdlIHJ1biByYXRlLCB0aGF0IGEgZmFpciBudW1iZXIuIEV4YWN0IGVmZmVjdCBvZiB0aGUgY3V0cywgd2hpY2gga2lja2VkIGluIGF0IHRoZSBzdGFydCBvZiAyMDE4IGFuZCBsb3dlcmVkIHRoZSBjb3Jwb3JhdGUgcmF0ZSB0byAyMSBwZXIgY2VudCBmcm9tIDM1IHBlciBjZW50LCBjYW4gYmUgaGFyZCB0byBwaW4gZG93biBiZWNhdXNlIG9mIGhvdyB0aGUgbGVuZGVycyByZXBvcnQgdGhlaXIgZmluYW5jaWFsIHJlc3VsdHMuLiAKUmV2ZXJzZSBpbXBsaWVkIG9kZHMgYXJlIHRoZXJlIHRvbywgaW4gY2FzZSBvbmUgb2YgdGhlIG90aGVyIHBsYXllcnMgaGFzIGFuIEFjZSAgb3IgUXVlZW4gaGlnaCBmbHVzaCBkcmF3LCBvciBpZiB0aGUgSEogaGl0cyBhIGZ1bGwgaG91c2UuIApFc3BlY2lhbGx5IGlmIHlvdSBvbmUgb2YgdGhlc2UgcGVvcGxlIHdobyBjbGFpbXMgaXRzICJzbyBzb2Z0Ii4gCkZhdGhlciBwYXNzZWQgYXdheSBhbmQgaGVyIHRoaXJkIG9mIGhlciBmYXRoZXIgZXN0YXRlIHdhcyBwbGFjZWQgaW50byBhIEhlbnNvbiB0eXBlIGRpc2NyZXRpb25hcnkgdHJ1c3QgaW4gMjAxMiBoZXIgY2FyZSBhbmQgbWFpbnRlbmFuY2UuIERpc2Nsb3NlIHRoZSBiYWxhbmNlIG9mIHRoZSB0cnVzdC4gClNvIGl0IGEgbWlzc2VkIGJ1c2luZXNzIG9wcG9ydHVuaXR5IGF0IHRoZSB2ZXJ5IGxlYXN0LiAKRGllIExlaXR1bmcgZGVyIEVGQSB3aXJkIGFsbGUgendlaSBKYWhyZSBkdXJjaCBlaW5lbiB0cmFkaXRpb25zcmVpY2hlbiBXZXR0YmV3ZXJiIGJlc3RpbW10LiAKRW5mYW50YSAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KV2l0aCBvbmUgZGF5IHJlbWFpbmluZywgdGhlIHJhY2UgZm9yIHRoZSBsZWFkaW5nIHJpZGVyIGF3YXJkIGlzIGFsbCBidXQgb3Zlci4gUnVieSBXYWxzaCdzIHZpY3Rvcnkgb24gQmlnIEJ1Y2sncyBpbiB0aGUgTGFkYnJva2VzIFdvcmxkIEh1cmRsZSBtb3ZlZCBoaW0gb24gdG8gZml2ZSB3aW5uZXJzIGZvciB0aGUgd2VlayBhbmQgaGlzIG5lYXJlc3Qgcml2YWwgaXMgQmFycnkgR2VyYWdodHksIHdobyByZWNvcmRlZCBhIGRvdWJsZSBvbiB0aGUgb3BlbmluZyBkYXkgb2YgdGhlIEZlc3RpdmFsLgpBcyBzb29uIGFzIHRoZSBTaGlwIHdhcyBwcm9wZXJseSBzZWN1cmVkIEkgd2VudCBvbiBzaG9yZSwgYWNjb21wYW5pZWQgYnkgTXIuIEJhbmtzIGFuZCB0aGUgb3RoZXIgR2VudGxlbWVuLCB3aXRoIGEgUGFydHkgb2YgTWVuIHVuZGVyIEFybXM7IHdlIHRvb2sgYWxvbmcgd2l0aCB1cyBPd2hhYSAgIHdobyB0b29rIHVzIHRvIHRoZSBwbGFjZSB3aGVyZSB0aGUgRG9scGhpbiB3YXRlcmVkLCBhbmQgbWFkZSBzaWducyB0byB1cyBhcyB3ZWxsIGFzIHdlIGNvdWxkIHVuZGVyc3RhbmQgdGhhdCB3ZSBtaWdodCBPY2N1cHkgdGhhdCBncm91bmQsIGJ1dCBpdCBoYXBuZWQgbm90IHRvIGJlIGZpdCBmb3Igb3VyIHB1cnBvc2UuIAo0MzIxIGV0IHNlcS4pLCB0aGUgQ291bmNpbCBvbiBFbnZpcm9ubWVudGFsIFF1YWxpdHkgUmVndWxhdGlvbnMgZm9yIEltcGxlbWVudGluZyB0aGUgUHJvY2VkdXJhbCBQcm92aXNpb25zIG9mIE5FUEEgKDQwIENGUiBQYXJ0cyAxNTAwIDE1MDgpLCBhbmQgTkFTQSBwb2xpY3kgYW5kIHByb2NlZHVyZXMgKDE0IENGUiBQYXJ0IDEyMTYgU3VicGFydCAxMjE2LjMpLCBOQVNBIGhhcyBwcmVwYXJlZCBhbmQgaXNzdWVkIGEgRlNFSVMgZm9yIGNvbnRpbnVhdGlvbiBvZiBpdHMgU1JQLCB3aGljaCBvZmZlcnMgYXBwcm94aW1hdGVseSAzMCBmbGlnaHQgb3Bwb3J0dW5pdGllcyBwZXIgeWVhciB0byBzcGFjZSBzY2llbnRpc3RzLiBUaGUgRlNFSVMgYWRkcmVzc2VzIGVudmlyb25tZW50YWwgaXNzdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGUgbGF1bmNoIGFuZCByZWNvdmVyeSBvZiB0aGUgc291bmRpbmcgcm9ja2V0cyBhbmQvb3IgYXNzb2NpYXRlZCBzY2llbnRpZmljIHBheWxvYWRzLiAKMzEsIHVwIDIzIHBlciBjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgYW5kIHRoZSBoaWdoZXN0IGxldmVsIGluIGF0IGxlYXN0IHR3byB5ZWFycy4gCkZvciBQYXJrZXIsIHRoZSBjb21wYW55IGhhcyBwcm92aWRlZCBhbiBvcHBvcnR1bml0eSB0byBleGVyY2lzZSBoZXIgbGVhZGVyc2hpcCBhbmQgY2hhbGxlbmdlIGhlciBza2lsbHMgYXMgYSBtYXJrZXRpbmcgcHJvZmVzc2lvbmFsLiBMZWFkaW5nIGEgY29tcGFueSB3aWRlIHBob3RvIHByb2plY3QsIGZvciBleGFtcGxlLCBQYXJrZXIgc3BlbnQgc2V2ZXJhbCBtb250aHMgZmluZGluZyBjYW5kaWRhdGVzLCB3b3JraW5nIHdpdGggcGhvdG9ncmFwaGVycyBhbmQgc3RyYXRlZ2l6aW5nIHdpdGggdGhlIGNvbXBhbnkncyBpbnRlcm5hbCBjcmVhdGl2ZSB0ZWFtLgpUaGlzIHdvdWxkIGJlIHRydWUgaWYgdGhlIGd1eXMgYmVhdGluZyBtaWNyb3N0YWtlcyB3b24gYXQgcG9rZXIgYmVjYXVzZSB0aGV5IHVuZGVyc3Rvb2QgcG9rZXIuIApXZWxsLCBJIG11c3QgZ28uIEkgc2hvdWxkIGhhdmUgZ29uZSBzdHJhaWdodCBob21lIGZyb20gdGhlIHBvc3Qgb2ZmaWNlIGZvciB3ZSBoYXZlIGNvbXBhbnkuIEJ1dCBJIHNpbXBseSBoYWQgdG8gY29tZSBhbmQgaGVhciB0aGUgbmV3cy4gClNvIHdoZW4gbXkgZnJlbmQgSW5kcmEgKHRoZSBmcnN0IGZyZW5kIEkgbWFkZSBhdCBDb3JuZWxsISkgd291bmQgdXAgd3RoIHR3byB3ZWVrcyBvZmYgbiBiZXR3ZWVuIGpvYnMgd2UgZGVjZGVkIHRvIGhlYWQgYmFjayBoZXJlLiAKV2h5IHdhc24ndCBhbnlvbmUgcHJlcGFyZWQgZm9yIGhlciBzcGVjaWFsIG1lZGljYWwgbmVlZHM/SXQncyBub3Qgc3BlY2lmaWNhbGx5IGFkZHJlc3NlZCwgYnV0IHdlIGhhdmUgdG8gYXNzdW1lIHRoYXQgVGFsbGEgaXMgdXNpbmcgdGhlIGdyYXZpdHkgc2ltdWxhdG9yIG9yIHNvbWUgb3RoZXIgdHJlYXRtZW50IHRvIHByZXZlbnQgc3VmZmVyaW5nIHRoZSBzYW1lIGZhdGUgYXMgQWxhcmEgaW4gdGhlIGZ1dHVyZS5hY3Rfc3VycHJpc2VkICAyMjggcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgd2FzIHJlY2VudGx5IHdhdGNoaW5nIHNlYXNvbiAzIGFuZCBLZWlrbyBpcyBvZmYgbGl2aW5nIG9uIEJham9yIHdpdGggTW9sbHkuIApGb3IgdGhyZWUgd2Vla3Mgd2UgZGlkIG5vdGhpbmcgYnV0IHBsYXkgdGhlIGd1aXRhciwgcHJvYmFibHkgZm9yIGFib3V0IGVpZ2h0IGhvdXJzIGEgZGF5LiAKSXMgYW4gYWNlIGEgbnVtYmVyIGNhcmQKTmUgZG9pdCBvbiBwYXMgcGFybGVyIGRlICBjaG9zZXMgc2FjcmVzICA/IEwnZW1icnlvbiBvdXZyZSBwZXV0IHRyZSBsYSB2b2llICBsYSBkY291dmVydGUgb3UgcmVkY291dmVydGUgZCd1bmUgbm91dmVsbGUgY2F0Z29yaWUgZGUgYmllbnMgIGwnaW1hZ2UgZGVzIHV2cmVzIGQnYXJ0IG91IHBsdXMgY2xhc3NpcXVlbWVudCBkZSBsYSBkcG91aWxsZSBtb3J0ZWxsZS4KQnV0IHRoZSB0d28gb2YgdGhlbSBhcmUgcmVhbGx5IGJpZyBmb3IgbWUgaW4gbXkgY2FyZWVyLiAKSSBlbmRlZCB1cCBiZWluZyByZWFsbHkgYW5ncnkgdGhhdCBJIHBsYXllZCBpbnRvIFJhbmQgcG9pbnQgYnkgcmVhZGluZyB0aGUgdGhpbmcgb3V0IG9mIGRlc2lyZSBmb3IgbW9uZXksIGFuZCBoYXRlZCBldmVyeSB3b3JkIG9mIHRoYXQgZGVuc2UsIGFubm95aW5nIHNjcmVlZC4gSSBsZWFybmVkIHRoYXQgSSBkb24gYXBwcm92ZSBvZiBsaWJlcnRhcmlhbmlzbSwgdGhvdWdoLCBzbyBJIGd1ZXNzIHRoYXQga2luZCBvZiB1c2VmdWwuQWxzbyBJIGhhZCB0byByZWFkIGEgRnJlbmNoIG5vdmVsIGNhbGxlZCAibGUgZGVybmllciBkZXMgcmFpc2lucyIgdGhhdCBoYWQgYSByZWFsbHkgdW5jb21mb3J0YWJsZSBzZXggc2NlbmUgd2hlcmVpbiB0aGUgbWFpbiBjaGFyYWN0ZXIsIGEgdGVlbiB3aG8gdGhpbmtzIG9mIGhpbXNlbGYgYXMgYSBsb3NlciwgY29tcGFyZXMgaGlzIGdpcmxmcmllbmQgYnJlYXN0cyB0byBleHRyYSBmaXJtIHBhbmNha2VzLiAKU2Ftc3VuZyBHYWxheHkgTm90ZSAxMApSZWFsaXR5IENoZWNrCkd1cnVQYXJyb3QgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KV2FzIGNvYWNoaW5nIGFuZCBmb3VuZCBJIHdhcyBwcmVnbmFudCwgTWFyY3VzIHJlY2FsbGVkLiBBdCB0aGUgZW5kIG9mIHRoZSBzY2hvb2wgeWVhciwgSSBzYWlkIHRvIG15IHByaW5jaXBhbCB5b3UgZ290IHRvIGZpbmQgYSBnb29kIGNvYWNoIGJlY2F1c2UgSSBnb2luZyB0byBiZSBvZmYgaW4gSmFudWFyeSBhbmQgdGhlc2UgZ2lybHMgY2FuIHdpbiBPRlNBQS4gClRoZSBwcmVzaWRlbnQsIERvbmFsZCBUcnVtcCwga25vd24gZm9yIGlycmF0aW9uYWwgcHJvY2xhbWF0aW9uIGFuZCBpbmZhbnRpbGUgYmVoYXZpb3JzLCBhcHBlYXJzIHRvIGhhdmUgbGltaXRlZCBpbmZsdWVuY2UgaW4gdGhlIGRlY2lzaW9uIG1ha2luZyBwcm9jZXNzLCBkZWxlZ2F0aW5nIHNpZ25pZmljYW50IHBvd2VycyB0byB0aGUganVudGEuIi4gCk9mIGNvdXJzZSBhbnkgdG91cm5hbWVudCB5b3UgaGF2ZSB0byBnZXQgbHVja3kgdG8gd2luLCBidXQgdGhlcmUgaXMgc28gbXVjaCBtb3JlIHNraWxsIGluIHRoaXMgZXZlbiB0aGFuIGFueSBvdGhlciB0b3VybmFtZW50IGluY2x1ZGluZyB0aGUgTWFpbiBFdmVudC4gVGhpcyBhYm92ZSBhbnl0aGluZyBlbHNlIGlzIHRoZSB0b3VybmFtZW50IEkgd2FudGVkIHRvIHdpbi4iLiAKU29jaWFsIG1lZGlhIHRha2VzIG1vcmUgb2YgeW91ciB0aW1lIGFuZCBhdHRlbnRpb24gdGhhbiBiZW5lZml0IHlvdSBkZXJpdmUgZnJvbSBpdC4gClVuZm9ydHVuYXRlbHkgdGhpcyBraW5kIG9mIHJlYWN0aW9uIGlzIG5vdCB1bmhlYXJkIG9mZi4gSSByZWFkIHN0b3JpZXMgYSBwbGVudHkgb2YgcmFwZSBhbmQgbW9sZXN0YXRpb24gdmljdGltcyB3aG9zZSBmYW1pbHkgdG9sZCB0aGVtIHRvIG5ldmVyIHRhbGsgYWJvdXQgaXQgYmVjYXVzZSBpdCBhY3R1YWxseSBzaGFtZXMgVEhFTS4gU29tZXRpbWVzIGl0IGEgZmFtaWx5IG1lbWJlciB0aGV5IHdhbnQgdG8gcHJvdGVjdC4gCkFuZCBhbiBlYXN5IHdheSB0byBtb25ldGl6ZSBpdCB0byBhbGxvdyB0aGUgcGxhdGZvcm0gdG8gYmUgc2VsZiBzdXN0YWluaW5nIGlzIHRvIGNoYXJnZSBvcmdhbml6ZXJzIGluIG9yZGVyIHRvIGFkdmVydGlzZSB0aGVpciBldmVudHMgYW5kIGNvbnRlc3RzIG9uIHRoZSBwbGF0Zm9ybXMuIEkgaW1hZ2luZSBpZiBpdCBub3QgZm9yIHByb2ZpdCwgdGhlIGNoYXJnZXMgd291bGRuIGJlIHVucmVhc29uYWJsZSBpZiBqdXN0IHRvIGNvdmVyIGZvciBzZXJ2ZXIgY29zdHMgYW5kIHRvIGhhdmUgYSBwcm9ncmFtbWVyIG9uIGNhbGwgaW4gY2FzZSBvZiBicmVhayBkb3ducy4gCklmIG5vdyBIYXJyaXMgYW5kIFNhbmRlcnMgYXJlIGZhY2luZyBvZmYgYXQgdGhlIEROQywgdGhlIGZvcm1lciBCZXJuaWUgdm90ZSBmcm9tIENhbGlmb3JuaWEgd291bGQgYmUgaW4gSGFycmlzIHBvY2tldHMgKGJlY2F1c2Ugc2hlIHRvb2sgYWxsIHRoZSBkZWxlZ2F0ZXMgZnJvbSBDQSkuLiAKWW91IGRvbiBoYXZlIHRvIGJ1eSBhbnl0aGluZyBqdXN0IHNsb3dseSBtYWtlIG5vdGUgb2Ygd2hhdCBsb29rcyBnb29kIG9uIHlvdS4gVGhpcyBjYW4gYmUgYSB5ZWFyIGxvbmcgcHJvamVjdCAgIHlvdSBkb24gaGF2ZSB0byBkbyBldmVyeXRoaW5nIGluIG9uZSBnby4gRmlndXJlIG91dCB3aGF0IHRoaW5ncyBhcmUgYW4gYWJzb2x1dGUgbm8gZ28gYW5kIHdoYXQgdGhpbmdzIG1ha2UgeW91IHBvcC4gOCBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvSXQgbm90IGp1c3QgdGhhdCBoZSB1bmFibGUgdG8gc2F5IHRoZSB3b3Jkcy4gClRoZSBzaGlwIGhhcyBnZW5pZXMsIGFuZCB0aGV5IGNhbiBwZXJmb3JtIG1hZ2ljOiBBbHRob3VnaCBiYXJnYWluIGJhc2VtZW50IGRpc2NvdW50cyBkcmF3IHBsZW50eSBvZiB0cmF2ZWxlcnMgdG8gYmlnIHNoaXAgY3J1aXNpbmcsIHByb2N1cmluZyBSb3lhbCBDYXJpYmJlYW4ncyBWSVAgc3RhdHVzIGNhbiBvZmZlciBhIHRydWUgbHV4dXJ5IGV4cGVyaWVuY2UuIApGb3IgZXhhbXBsZSwgdGhlIGFnZW5jeSdzIHJ1bGVzIGFib3V0IHBva2VyIGdhbWVzIGFyZSA1IHllYXJzIG9sZCBhbmQgZG9uJ3QgcmVmbGVjdCBhIDIwMTAgY2hhbmdlIGluIHN0YXRlIGxhd3MgdGhhdCBkaWQgYXdheSB3aXRoIGEgJDEwMCBsaW1pdCBvbiBwb2tlciBnYW1lcy4gREJQUiBoZWxkIGEgd29ya3Nob3Agb24gdGhlIGNhcmQgcm9vbSBydWxlcyBpbiBGZWJydWFyeSwgdGhlIGZpcnN0IHNpbmNlIGEgSnVseSAyMDEwIHdvcmtzaG9wIHRoYXQgd2VudCBub3doZXJlLiBUaGUgYWdlbmN5IGhhcyB5ZXQgdG8gcmVsZWFzZSBhbnkgZm9ybWFsIHByb3Bvc2VkIHJ1bGVzIHNpbmNlIHRoaXMgeWVhcidzIGNhcmQgcm9vbSB3b3Jrc2hvcC4gCiJXZSBzZWUgaXQgaW4gcGVvcGxlIHdobyBhcmUgcmVndWxhciBleGVyY2lzZXJzIGFuZCB0aG9zZSB3aG8gYXJlbid0LiBTaXR0aW5nIGlzIGFuIGluZGVwZW5kZW50IHJpc2sgZmFjdG9yLiIKSmFtZXMgQ2FtZXJvbgpFdCBxdSd5IGEgdCBpbCBkZSBwbHVzIG1lcnZlaWxsZXV4LCBtbWUgYXV4IHlldXggZHUgcGhpbG9zb3BoZSwgcXVlIGNldHRlIHJlbmNvbnRyZSBkZSBsJ2FudGlxdWUgZXQgZGUgbGEgbm91dmVsbGUgSnJ1c2FsZW0gYXUgcGllZCBkdSBDYWx2YWlyZSA6IGxhIHByZW1pcmUgcydhZmZsaWdlYW50ICBsJ2FzcGVjdCBkdSBzcHVsY3JlIGRlIEpzdXMgQ2hyaXN0IHJlc3N1c2NpdCA7IGxhIHNlY29uZGUgc2UgY29uc29sYW50IGF1cHJzIGR1IHNldWwgdG9tYmVhdSBxdWkgbidhdXJhIHJpZW4gIHJlbmRyZSAgbGEgZmluIGRlcyBzaWNsZXMgIS4gClBoaWwgaGVsbG11dGg6IHRoZSBSb2JlcnQgSG9ycnkgb2YgdG91cm5hbWVudCBwb2tlci4gQ2xhc3MuIApUaGUga25lZSBqZXJrIHJlYWN0aW9uIHRvIHRoZSBtYWxmdW5jdGlvbmluZyBib3Qgd2FzIGp1c3RpZmllZC4gCkVxdWFsbHkgYXMgeW91IGFjcXVpcmVkIGhvdyB5b3UgY2FuIHBsYXkgcG9rZXIgaW4gdGhlIHJlYWwgd29ybGQsIHlvdSBoYXZlIHRvIGxlYXJuIHRoZSB2YXJpb3VzIHN0cmF0ZWd5IGZvciBvbmxpbmUgZW5qb3kuIENhcHNhIHN1c3VuIFRoZSBjb3JyZWN0IGFuc3dlciBpcyBpbiBtYWtpbmcgdXNlIG9mIHRoZSByZWd1bGF0aW9ucyBhbmQgdGVjaG5pcXVlcyB0byB5b3VyIGFkdmFudGFnZSB0aGVuIHRha2luZyBwYXJ0IGluIHRoZSBwb2tlciBoYW5kcyBhbmQgd3Jpc3RzIHlvdSBtaWdodCBiZSBkZWFsdCBiYXNlZCBvbiB0aGF0IHN0eWxlIGFuZCBub3Qgd2hpbGUgeW91IHdvdWxkIHdpdGhpbiBhIHN0YXkgb25saW5lIGdhbWUuLiAKU2h1dHRlcmJ1ZzM5MCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpIb3BlIEkgSGVscGVkIChGdWxsIEFuc3dlcikuIApHZW5lIFdoZWxjaGVsIGxvb2tlZCBhdCBoaXMgd2F0Y2guIEl0IHdhcyA4OjQwLiBIZSB3b25kZXJlZCB3aGF0IHdhcyB0YWtpbmcgTGVubnkgc28gbG9uZy4gCkkgbWVhbiwgSSBsb3ZlIHRoZSBTdG9uZXMuIApUaGVyZSdzIG5vIHJlYXNvbiB0byB0aGluayBoaXMgcHJvZHVjdGlvbiB3aWxsIHBsdW1tZXQgaW5zdGVhZCBvZiB0YWlsaW5nIG9mZiBsaWtlIG5vcm1hbC4gU286IGxldCdzIHNheSBoZSBoYXMgYSBzaW1pbGFybHkgcHJvZHVjdGl2ZSBzZWFzb24gdG8gbm93IGluIHRoZSAyMDE5IDIwMjAgc2Vhc29uLCBhbmQgdGhlbiB0YWlscyBvZmYgY29uc2lzdGVudGx5IGZvciB0aGUgbmV4dCBzaXggc2Vhc29uczouIApUaGUgc3RhdGUgdm90ZWQgNjkgdG8gMzEgcGVyY2VudCBUdWVzZGF5IHRvIHBhc3MgQW1lbmRtZW50IDEzLCB3aGljaCBiYW5zIHRoZSBzcG9ydCBiZWdpbm5pbmcgb24gSmFuLiAxLCAyMDIxLiBJdCBpcyBhbiBvdmVyd2hlbG1pbmcgZGVmZWF0IGZvciBhbiBpbmR1c3RyeSBhbHJlYWR5IGluIGRlY2xpbmUsIHdpdGggNTAgdHJhY2tzIGNsb3NpbmcgbmF0aW9uYWxseSBvdmVyIHRoZSBwYXN0IDMwIHllYXJzIGJlY2F1c2Ugb2Ygc2hyaW5raW5nIGNyb3dkcyBhbmQgYWNjdXNhdGlvbnMgdGhhdCBkb2dzIGFyZSBtaXN0cmVhdGVkLi4gCkl0IGlzIG9uZSBvZiB0aGUgZGVmaW5pbmcgZWxlbWVudHMgb2YgamF6ei4gCkkgZGFtbiBuZWFyIGNhbid0IGdvIGEgZGF5IHdpdGhvdXQgaGVhcmluZy9zZWVpbmcgZG9nIHdoaXN0bGVzIGFuZCBvdXRyaWdodCByYWNpc20gZnJvbSB0aGUgcmlnaHQuIEV2ZW4gdGhlIG1pbm9yaXR5IG9mIHJpZ2h0IHdpbmdlcnMgdGhhdCBhcmVuJ3Qgb3Blbmx5IGFwcGxhdWRpbmcgcmFjaXNtIGFyZW4ndCBtdWNoIGJldHRlciBiZWNhdXNlIHVubGlrZSB0aGUgb3RoZXIgc2lkZSwgdGhleSBlaXRoZXIgd29uJ3QgY29uZGVtbiBpdCBvciBpZiB0YWtlcyB0aGVtIGZvcmV2ZXIgdG8sIGxpa2UgdGhleSBuZWVkIGEgY291cGxlIG9mIGRheXMgdG8gbXVsbCBpdCBvdmVyIGV2ZW4gd2hlbiBpdCdzIG9idmlvdXMuCkNvbmZlc3Npb246IEkgd291bGQgaGF2ZSByZWFsbHkgbG92ZWQgbGlzdGVuaW5nIHRvIHRoZSBhdWRpb2Jvb2sgb2YgIlNpbW9uIHZzLiB0aGUgSG9tbyBTYXBpZW5zIEFnZW5kYSIgaGFkIGl0IG5vdCBicm91Z2h0IHVwIHNvIG11Y2ggSSBuZWVkIHRvIHdvcmsgb24uIEJ1dCBpdCByZWFsbHkgaXMgYSBnb29kIGJvb2suClRoaXMgd2FzIGEgc29saWRseSBncm91bmRlZCBpZGVhIG11Y2ggaW4gdGhlIHNhbWUgdHJhZGl0aW9uIGFzIGFueSBvZiB0aGUgY29uY2VydGVkIGFuZCBjb25zaWRlcmVkIGVmZm9ydHMgYnkgdGhlIFdyaWdodCBCcm90aGVycy4gKEl0IGlzIHJlbWFya2FibGUgaG93IGNvbXBldGVudCBhbmQgZXhwbG9yYXRvcnkgdGhleSB3ZXJlIGluIHRoZWlyIHB1cnN1aXQgb2YgZmxpZ2h0LiBSaWdodCBmcm9tIHRoZSB0aW1lIHRoYXQgV2lsYnVyIHdhcyBsYWlkIHVwIGluIGJlZCByZWNvdmVyaW5nIGZyb20gdHlwaG9pZCBmZXZlciBpbiAxODk2LCBoZSB3YXMgZG9pbmcgc29tZSBjbGVhciBhbmQgZXhjZWxsZW50IHRoaW5raW5nIG9uIHRoZSBtYXR0ZXIsIGJlYXV0aWZ1bGx5IGNvbmNsdWRpbmcgdGhhdCBnZXR0aW5nIGludG8gdGhlIGFpciBpbiBhbiBhZXJvcGxhbmUgd2FzIG5vdCBzbyBtdWNoIHRoZSBjYXNlIGFzIGl0IHdhcyBzdGF5aW5nIGluIHRoZSBhaXI7IGFuZCB0aGF0IGRlcGVuZGVkIHVwb24gY29udHJvbCBvZiB0aGUgYWlyY3JhZnQsIGFuZCBmb3IgdGhhdCBoZSBnYXZlIHZlcnkgY29uc2lkZXJhYmxlIHRpbWUgdG8gdGhlIHN0dWR5IG9mIGhvdyBiaXJkcyBjb250cm9sIHRoZWlyIGZsaWdodC4gCk1lcmlrdXMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpCZXNpZGUgdGhhdCBpIG5lIHRoaW5raW5nIG9mIGEgc3RyZWFtaW5nIEZvcm1hdCB0aGF0IEJyaW5ncyBhIHNpbWlsaWFyIEVudGVydGFpbm1lbnQgZm9yIHRoZSBWaWV3ZXIgICBkb250IGhhdmUgYW4gaWRlYWwgeWV0IElmIFlvdSBoYXZlIG9uZSBsZXQgbWUga25vdyAhKS4gCktub3cgdGhlIHN0cmVuZ3RoIG9mIHlvdXIgd2VhcG9ucyBhbmQgd2hhdCB3b3JrcyBiZXN0IGZvciB5b3UuIApUaGlzIGlzIGFraW4gdG8gdXNpbmcgdGhlIHZhY3V1bSBjbGVhbmVyIHRvIHB1c2ggZGlydCB1bmRlciB0aGUgcnVnIHJhdGhlciB0aGFuIHN1Y2sgaXQgdXAgYW5kIHRocm93IGl0IG91dC4gVGhpcyBjbGVhcmx5IGNvbnRyYWRpY3Rvcnkgc3RhbmNlIHdpbGwgYmUgZXhwcmVzc2VkIGFmdGVyIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiByZWxlYXNlZCBtZW1vcyBkZXRhaWxpbmcgdGhlIHNvcnQgb2YgdG9ydHVyZSB0aGF0IG9jY3VycmVkIGluIHRoZSAobm90IHNvKSBzZWNyZXQgcHJpc29ucyBvZiB0aGUgQnVzaCByZWdpbWUuIFRoaXMgdG9ydHVyZSBpbmNsdWRlZCB0aGUgbm93IGluZmFtb3VzICJ3YXRlcmJvYXJkaW5nIiAgYSB0ZXJtIHRoYXQgbWF5IG5vdCBzb3VuZCBhd2Z1bCwgbGlrZSBhIG5ldyBmb3JtIG9mIHN1cmZpbmcgIGJ1dCBpbiBmYWN0IGludm9sdmVzIG5lYXIgZHJvd25pbmcgb2YgdGhlIHByaXNvbmVyIGluIG9yZGVyIHRvIHN1cHBvc2VkbHkgZ2FpbiBpbmZvcm1hdGlvbi4gVGhpcyBtZXRob2Qgd2FzIHVzZWQgMjY2IHRpbWVzIGFnYWluc3QgMiBwcmlzb25lcnMhCk1hcnkgd2FzIGEgZGV2b3RlZCBjb21tdW5pY2FudCBvZiBTdC4gTWFyeSdzIENodXJjaCwgbWVtYmVyIG9mIHRoZSBLbmlnaHRzIG9mIENvbHVtYnVzIEF1eGlsaWFyeWFuZCBwYXN0IHNlY3JldGFyeS4gTWFyeSB3YXMgYWxzbyBhbiBBdXhpbGlhcnkgbWVtYmVyIG9mIENvbG9uIENvdWNoIEFtZXJpY2FuIExlZ2lvbiBQb3N0IDgyMS4gCkZpdmUgc3RyYXRlZ2llcyBidXNpbmVzcyBzaG91bGQgdXNlIGZvciBuZXcgZGF0YSBicmVhY2ggbGF3Ckl0IHNvdW5kcyBsaWtlIHNoZSB3YXMgdHJ5aW5nIHRvIHB1c2ggeW91IGF3YXkuIExpa2Ugc2hlIHdhbnRlZCB0byBicmVhayB1cCBidXQgZGlkbiB3YW50IHRvIGJlIHRoZSBvbmUgdG8gZG8gaXQuIFZlcnkgaW1tYXR1cmUgb2YgaGVyLiB5b3UgYXJlIGJldHRlciBvZmYuIEltYWdpbmUgaG93IG11Y2ggd29yc2UgaXQgd291bGQgYmUgaWYgeW91IGhhZCB0byBkZWFsIHdpdGggYSBkaXZvcmNlIG9yIGlmIHRoZXJlIHdlcmUga2lkcyBpbnZvbHZlZC4gVHJ5IHRvIHNlZSB0aGUgYmlnIHBpY3R1cmUgYW5kIGtub3cgdGhhdCBzbyBtYW55IHBlb3BsZSBoYXZlIGJlZW4gdGhydSB3b3JzZSB0aGFuIHRoaXMgc2l0dWF0aW9uLCBhcyB0ZXJyaWJsZSBhcyBpdCBpcy4KQWxsIG9mIHRoaXMgaGFwcGVuZWQgYXMgU2hpIGFuZCB0aGUgcGFydGlhbGx5IGNsb3RoZWQgb3duZXIsIFpodSBGYW5nIExpdSwgNTQsIGZvcm1lcmx5IG9mIENoaW5hLCBzdG9vZCBpbiB0aGUgbG9iYnkgeWVsbGluZy4KQmV5b25kIGJlaW5nIGFjY2VwdGFibGUsIEkgdGhpbmsgaXQgaXNuIGV2ZW4gcnVkZSB0byBpZ25vcmUgdGhlbS4KSGFtYnVyZyB2ZXJ6ZWljaG5ldGUgaW0gdmVyZ2FuZ2VuZW4gSmFociBtaXQgemVobiBQcm96ZW50IG1laHIgYmVybmFjaHR1bmdlbiBlaW5lbiBnZXdhbHRpZ2VuIFRvdXJpc211cyBadXdhY2hzOyBkaWUgRXJ3YXJ0dW5nZW4gZnIgZGllc2VzIEphaHJlcyBzaW5kIGF1c3NpY2h0c3JlaWNoLiBJbiBkZXIgSGF1cHRzdGFkdCBCZXJsaW4gd2lyZCBqdXN0IGluIGRpZXNlbSBKYWhyIGVpbiBlcm5ldXRlciBUb3VyaXNtdXNzY2h1YiBlcndhcnRldDogQW0gOS4gCkl0IGlzIHRvbyBzb29uIGZvciB5b3UgdG8gd3JpdGUgaXQgb2ZmLCBhbmQgaWYgeW91IGRvIGRlY2lkZSB0byBqdW1wIGZyb20gdGhlIGZyeWluZyBwYW4sIHRyeSBub3QgdG8gbGFuZCBpbiB0aGUgZmlyZS4uIApFdmVuIGlmIEphcGFuIGNhbiBhY2hpZXZlIGEgMSUgaW5mbGF0aW9uIHRhcmdldCwgdGhhdCB3b3VsZCBiZSBhIGdyZWF0IGFjaGlldmVtZW50LiAKU2V2ZW50eSB0d28gIDEzIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ28KSSBkb24ndCB0aGluayB0aGUgcGFzc2l2ZSBpcyBtZWFudCB0byBiZSBzdWNoIGEgaGluZHJhbmNlIHRvIHlvdXIgdmlldy4gCkVpZ2VudGxpY2ggc2luZCBlcyB6d2VpIExldWNodHRybWUsIGVpbiBhbHRlciB1bmQgZWluZXIgam5nZXJlbiBEYXR1bXMgdW5kIGF1Y2ggU2FsaW5lbiBnaWJ0IGVzIHp1IGJlc2ljaHRpZ2VuLCBpbiBkZW5lbiBTYWx6IGF1cyBkZW0gT3plYW4gZ2V3b25uZW4gd2lyZC4gCkhlIHdhc24gcmVhbGx5IGludGVyZXN0ZWQgaW4gdGhlIHNleHkgZXh0cmFzIHRvIGl0IGJ1dCB3ZSBkaWQgZG8gc29tZSBzdHVmZiBpbiB0aGUgZW5kLiBIZSBtb3N0bHkgd2FudGVkIHRvIHBsYXkgZ2FtZXMgYW5kIHRhbGssY3VkZGxlIGV0Yy4gCjQgcmV2b2x1dGlvbnMgdXAsIHdyYXBwaW5nIGluc2lkZSBvdXQgb3ZlciB0aGUga25lZS4gClRoZSBmdXR1cmUgb2YgcG9rZXIgbWFjaGluZXMgaW4gVGFzbWFuaWEgcmVtYWlucyBhIGhvdCBidXR0b24gZWxlY3Rpb24gaXNzdWUsIHdpdGggdGhlIGFudGkgcG9raWVzIGxvYmJ5IGxhdW5jaGluZyBuZXcgY2FtcGFpZ25zIHRvIHJpdmFsIHRob3NlIGJlaW5nIHJ1biBieSB0aGUgZ2FtaW5nIGluZHVzdHJ5IGFuZCBzb21lIHB1YnMuClBsZWFzZSwgYnVja2xlIHlvdXIgYmVsdCB1cCBhbmQgc2l0IHRpZ2h0LiAKWmVybyBpcyBhbmNpZW50IGFuZCBoYXMgZGlmZmVyZW50IGJpcnRocGxhY2VzLCBhbmQgaGFzIGEgbG9uZywgdmFyaWVkIGFuZCBjb21wbGV4IGhpc3RvcnkuLiAKU2hlIHNldCB1cCBhIHRhYmxlIGluIHRoZSBwb3NoIHBsYXphIGhvdGVsIGFuZCB0b29rIGFpbSBhdCB0aGUgYmlnIGFwcGxlJ3MgcmVhZHkgc3VwcGx5IG9mIHBva2VyIGRydW5rIFJ1c3NpYW4gYmlsbGlvbmFpcmVzIGFuZCBoZWRnZSBmdW5kIG1hbmFnZXJzLiBTaGUgc2F5cyBoZXIgdGFrZSBzcGlrZWQgdXAgdG8gJDE1MCwwMDAgaW4gYSBzaW5nbGUgZ2FtZS4gCkkgd2VudCBhbGwgaW4gYmVmb3JlIHRoZSBmbG9wIG9uIEFKIHN1aXRlZC4gCjI2IHRvIHJlY2VpdmUgYSBzZWNvbmQgZW1haWwgZnJvbSB0aGUgY2l0eSwgdGhpcyB0aW1lIHdpdGggYSBub3RpY2UgdGhhdCBoaXMgYnVpbGRpbmcgcGVybWl0IGFwcGxpY2F0aW9uIGhhZCBiZWVuIGRlbmllZCBiZWNhdXNlIGhpcyBhcHBsaWNhdGlvbiBmb3IgYSA5Nzggc3F1YXJlIG1ldHJlIGhvdXNlIChhYm91dCAxMCw1MDAgc3EuIApXaGVuIFN1Z2ltb3RvIGtpbGxlZCBhbGwgdGhlIGNvbnMgcHJldGVuZGluZyB0byBiZSBBaW51LCBBc2lycGEgd2FzIHNob2NrZWQgb3ZlciBpdC4gSGUgYWxzbyBpbnNpc3RlZCB0aGF0IFN1enVrYXdhLCB0aGUgY29uLCBpcyBiZXR0ZXIgb2ZmIGRlYWQuIApJIHdhcyByZWFkeSBmb3IgYW55IHJlYWN0aW9uLCBqdXN0IG5vdCB0aGlzIG9uZS4gCkF3YXJkcyBhIGZlbWFsZSBhZG9sZXNjZW50IGxlc3MgcmlnaHRzIHRoYW4gYSBmZXR1cyBJc3JhcnVhbGxhaCBaZWhyaSBhbmQgdGhvc2Ugd2hvIHN1cHBvcnQgaGltIG1pZ2h0IGNvbnNpZGVyIHRoZSBwb3NpdGlvbiBvZiB0aGUgUHJvcGhldCBNb2hhbW1lZCBvbiBmZW1hbGUgaW5mYW50aWNpZGUgaW4gcHJlIElzbGFtaWMgQXJhYmlhLiBPciBub3QuIE15IGNocm9tb3NvbWVzIGFwcGFyZW50bHkgZGljdGF0ZSB0aGF0IG1pbmUgaXMgbm90IHRvIHF1ZXN0aW9uIHdoeSwgbWluZSBpdCBidXQgdG8gZG8gb3IgZGllLgpXaXRoIG1vcmUgcHJvZ3Jlc3Mgb24gdGhlIGNhcmRzLCBhIG1hcmsgb2YgMTI1IGxvb2tzIGZhaXIgZW5vdWdoLCBhbmQgSGVucnkgZGUgQnJvbWhlYWQgaGFzIGhpcyB0ZWFtIHRocml2aW5nLi4gCkJlIHN1cmUgdG8gaGVhdCB0aGUgb3ZlbiB0byByZXF1aXJlZCB0ZW1wZXJhdHVyZSBiZWZvcmUgcHV0dGluZyBjYWtlIGluIHRvIGJha2UuIApEci4gClBhdHR5SWNlMzIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KTWFycmlvdHQgSW50ZXJuYXRpb25hbCBjdXJyZW50bHkgb3BlcmF0ZXMgNiBob3RlbHMgaW4gQ29zdGEgUmljYSB1bmRlciBmb3VyIGRpZmZlcmVudCBicmFuZHM6IE1hcnJpb3R0IEhvdGVscyBSZXNvcnRzLCBKVyBNYXJyaW90dCBIb3RlbHMsIENvdXJ0eWFyZCBieSBNYXJyaW90dCwgYW5kIFJlc2lkZW5jZSBJbm4uIENvdXJ0eWFyZCBieSBNYXJyaW90dCBicmFuZCBmZWF0dXJlcyBob3RlbHMgd2l0aCBhIHJlZnJlc2hpbmcgZW52aXJvbm1lbnQgdGhhdCBoZWxwcyBndWVzdHMgc3RheSBjb25uZWN0ZWQsIHByb2R1Y3RpdmUgYW5kIGJhbGFuY2VkIHdoaWxlIHRyYXZlbGluZy4gSW50dWl0aXZlIHNlcnZpY2VzIGFuZCBkZXNpZ24gYWNjb21tb2RhdGUgZ3Vlc3RzJyBkZXNpcmUgZm9yIGNob2ljZSBhbmQgY29udHJvbCBhbmQgYWxsb3cgdGhlbSB0byB1c2UgdGhlIHB1YmxpYyBzcGFjZSBhbmQgZ3Vlc3Qgcm9vbXMgdG8gbWVldCBhbGwgb2YgdGhlaXIgbmVlZHMgd2hpbGUgb24gdGhlIHJvYWQuIApQYXRpZW50cyBhdCB0aGUgZ3JlYXRlc3QgcmlzayBvZiBkZXZlbG9waW5nIGNocm9uaWMgcGFpbiBvZnRlbiBoYXZlIHBvb3JseSBkZXZlbG9wZWQgY29waW5nIHNraWxscy4xClN0dWRpZXMgd2VyZSBjb21iaW5lZCBpbiBhIG1ldGEgYW5hbHlzaXMuIApJIHdpc2ggdGhhdCBydWxlIHdlcmVuIG5lY2Vzc2FyeSwgYnV0IHVuZm9ydHVuYXRlbHkgaXQgaXMuIElmIHRoZSBzdWJyZWRkaXQgd2VyZSBwcml2YXRlIG9yIG11Y2ggc21hbGxlciwgd2Ugd291bGRuIG5lZWQgaXQsIGJ1dCB3ZSByZWFsbHkgZG8uLiAKR29vZCBsdWNrCkluIHRoZSBtZWFud2hpbGUsIGxldCBtYWtlIGRvIHdpdGggc29tZSBUb21haGF3a3MuIFRob3NlIHdpbGwgYXQgbGVhc3Qgbm90IGNhdXNlIGEgbnVjbGVhciBnbG9iYWwgd2FyLiBBbmQgc3RpbGwgY2hhbGxlbmdlIFJ1c3NpYSBhbmQgU3lyaWEsIGFuZCBjb252ZXkgYSBtZXNzYWdlIHRvIElzaXMgYW5kIEtpbSBKb25nIFVuIFRydW1wOiBpdCBhbmQgc2hvdyBtZSB0aGUgcGxhY2UgZm9yIHRoYXQgb3RoZXIgbW9uc3RlciBBcHJpbCA3LCAyMDE3IHRocmVlIGRheXMgYWZ0ZXIgdGhlIGFsbGVnZWQgU3lyaWFuIGNoZW1pY2FsIHN0cmlrZSB0aGUgVVMgbGF1bmNoZWQgaXRzIHJlc3BvbnNlIHdpdGggNTkgVG9tYWhhd2tzIG9uIGEgU3lyaWFuIEFpciBGb3JjZSBiYXNlLCB3aGljaCBhbHNvIGhvdXNlZCBSdXNzaWFucyBvbiBhIHBhcnQgb2YgaXQuIApBZ2FpbiwgaGUgcmVxdWVzdGVkIHRoZSBjb25zdHJ1Y3Rpb24gb2YgYW4gYXJlbmEgaW4gZG93bnRvd24gT3R0YXdhIHdpdGggZnJlZSByZW50IGZvciAzMCB5ZWFycy4gSW50ZXJlc3RpbmcgY2hvaWNlIG9mIHdvcmQgZm9yIHBhcnRuZXJzIHdobyBoYXZlbiBnb3R0ZW4gYWxvbmcgZm9yIHR3byB5ZWFycywgYnkgbW9zdCBhY2NvdW50cyBkb24gcGFydGljdWxhcmx5IGxpa2UgZWFjaCBvdGhlciBhbmQgYXJlIGRlbW9uc3RyYXRpbmcgdGhlaXIgZGlzcGxlYXN1cmUgd2l0aCAkMS43IGJpbGxpb24gaW4gY2xhaW1zLiBNZWxueWsgYWxsZWdlZCBsZXR0ZXIgZG9lcyBoYXZlIHRoYXQga2lkZGluZyEgYW5kIGdldCBkb25lIGtpbmQgb2YgZmVlbCwgYXMgdGhvdWdoIGhpcyAkNzAwIG1pbGxpb24gbGF3c3VpdCB3YXMganVzdCBhIG5lZ290aWF0aW5nIHBsb3kuIApJIHdhcyByZWFsbHkgaG9waW5nIGl0IGhhZCBhbHJlYWR5IGxlYWtlZCBzb21ld2hlcmUgb25saW5lLiBJIHdvdWxkIGJlIHdhcnkgaWYgSSB3YXMgb25lIG9mIHRoZWlyIG1vcmUgdHJhZGl0aW9uYWwgZW1wbG95ZWVzLiBOb3QgdG8gb3ZlcnN0YXRlIHRoZSAicmV2b2x2aW5nIGRvb3IiIG9mIGVtcGxveWVlcywgYnV0IHRoZXkgbG9zdCBhIHNpZ25pZmljYW50IGNodW5rIG9mIHRoZWlyIHBlcnNvbm5lbCBhbmQgdGhleSBwdWJsaWNseSBhaXJlZCB0aGUgImRpcnR5IGxhdW5kcnkiIG9mIG9uZSBzdWNoIGxvc3QgZW1wbG95ZWUsIGl0IGEgYml0IHdvcnJ5aW5nIGZyb20gc29tZXRoaW5nIG9mIGEgcHJvZmVzc2lvbmFsIHN0YW5kcG9pbnQgYWJvdXQgeW91ciBwb3NzaWJsZSBwcm9zcGVjdHMgYWZ0ZXIgd29ya2luZyB3aXRoIHRoZW0uIEl0IHNlZW1zIGxpa2UgYSBmcmFudGljIHdvcmsgZW52aXJvbm1lbnQgd2hlcmUgeW91IGRvbiBrbm93IHdoYXQgY29taW5nIG5leHQgb3Igd2hhdCB0byBleHBlY3QgZnJvbSB0aGUgb3Bwb3J0dW5pdGllcyBDQyBwcm92aWRlcywgZ29vZCBvciBpbGwuClRoaXMgZ2FtZSBpcyBjYWxsZWQgZnVuIHBva2VyIGFuZCByaWdodGZ1bGx5IHNvIGJlY2F1c2UgaXQgaXMgdGhvcm91Z2hseSBlbmpveWFibGUhIEZ1biBwb2tlciBpcyBtdWNoIGEgY2VsZWJyYXRpb24gb2Ygc2tpbGwgYXMgbHVjay4gCjM2KSBMdXYgVVN1bSAoYnkgQ0ogSG9sbGFuZCBmZWF0LiBMYWR5IEdhR2EpLiAKSWYgd2UgYWxsIHJlc2lzdGVkLCB0aGV5IG5ldmVyIGJlIGFibGUgdG8gZG8gdGhhdCwgYXQgbGVhc3Qgbm90IHdpdGhvdXQgYWxzbyBkZXN0cm95aW5nIHRoZSB2ZXJ5IGxhbmQgdGhleSB0cnlpbmcgdG8gcnVsZS4gQnV0IG1vcmUgaW1wb3J0YW50bHksIGFuYXJjaHkgc2hvdWxkIGNvbWUgYWJvdXQgYnkgdGhlIHByaXZhdGUgc2VjdG9yIHNpbXBseSBvdXQgY29tcGV0aW5nIHRoZSBnb3Zlcm5tZW50IHRvIHRoZSBwb2ludCB0aGF0IHRoZXkganVzdCB3aXRoZXIgYXdheS4gQ3J5cHRvY3VycmVuY3kgaXMgaG9wZWZ1bGx5IGdvaW5nIHRvIGhhdmUgYW4gaW1wb3J0YW50IHJvbGUgaW4gdGhpcy4gTG9vayB3aGF0IGhhcHBlbmVkIGF0IFdhY28uCk15IGJpZ2dlc3Qgc3VjY2VzcyB3aXRoIGhvbWVvcGF0aHkgd2FzIGdldHRpbmcgb3V0IG9mIGEgdG9uc2lscyByZW1vdmFsIHN1cmdlcnkuIEkgbmV2ZXIgaGFkIHRvIHVuZGVyZ28gc3VyZ2VyeS4gSXQgd2FzIHNvIGJhZCBJIGNvdWxkIGJhcmVseSB0YWxrLiBIYWQgYSBjb3VnaCBhbmQgc3dvbGxlbiBnbGFuZHMgZXZlcnkgc2Vjb25kIHdlZWsuIEl0IHRvb2sgb25lIHllYXIgb2YgaG9tZW9wYXRoeSBhbmQgY2FyZWZ1bCBkaWV0YXJ5IHJlc3RyaWN0aW9ucyB0byBmaXggaXQsIGJ1dCBpdCB3b3JrZWQgbGlrZSBhIGNoYXJtLgo3IHlvdXJzZWxmIGFuZCBiZSByZWFkeSwgeW91IGFuZCBhbGwgeW91ciBjb21wYW5pZXMgdGhhdCBhcmUgZ2F0aGVyZWQgYWJvdXQgeW91OyBhbmQgYmUgYSBndWFyZCBmb3IgdGhlbS4gbWFueSBkYXlzIHlvdSB3aWxsIGJlIHZpc2l0ZWQuIEluIHRoZSBsYXR0ZXIgeWVhcnMgeW91IHdpbGwgY29tZSBpbnRvIHRoZSBsYW5kIG9mIHRob3NlIGJyb3VnaHQgYmFjayBmcm9tIHRoZSBzd29yZCBmcm9tIG1hbnkgcGVvcGxlIG9uIHRoZSBtb3VudGFpbnMgb2YgSXNyYWVsLCB3aGljaCBoYWQgbG9uZyBiZWVuIGRlc29sYXRlOyB0aGV5IHdlcmUgYnJvdWdodCBvdXQgb2YgdGhlIG5hdGlvbnMsIGFuZCBub3cgYWxsIG9mIHRoZW0gZHdlbGwgc2FmZWx5LgogMiBwb2ludHMgIHN1Ym1pdHRlZCA5IGhvdXJzIGFnb1RoYW5rcy4gTmVlZCB0byBwdWxsIG1vcmUgdGhhbiA3MzMgYXQgdGhlIGVuZCBvZiB0aGUgbW9udGguIEkgaGl0IGEgZmFpcmx5IGVhc3kgNzE2IGJhY2sgaW4gTm92ZW1iZXIgc28gSSB0aGluayBJIGhhdmUgaXQgaW4gbWUgYXMgbG9uZyBhcyBJIHN0YXkgaGVhbHRoeSB1bnRpbCB0aGVuLiBXb3VsZCBsaWtlIHRvIGJyZWFrIDc1MCwgYnV0IHdlIHdpbGwgc2VlIGhvdyBpdCBnb2VzLiAKU3VwcG9ydCBpcyBkaWZmaWN1bHQgdG8gcGxheS4gCkNlbGEgZG9pdCBmYWlyZSBwbHVzIGRlIDI1IGFucyBxdWUgaidlbnRlbmRzIHBhcmxlciBkZSB5b2dhLiBRdWFuZCBqJ2FpIGNvbW1lbmMgIHRyYXZhaWxsZXIsIGonYXZhaXMgdW5lIGNvbGxndWUgZnJ1ZSBkJ0luZGUgcXVpIHBhcnRhaXQgdW5lIGZvaXMgcGFyIHNlbWFpbmUgc3VyIGxlcyBjaGFwZWF1eCBkZSByb3VlICBzb24gY291cnMgZGUgeW9nYS4gRXQgcmV2ZW5haXQsIG1lIHNlbWJsYWl0IGlsLCBwbHVzIG5lcnZlIHBhciBsZXMgZW1ib3V0ZWlsbGFnZXMgcXVlIGR0ZW5kdWUgcGFyIHNhIHByYXRpcXVlLiAKU2FpZCBoZSB3YW50cyB0byByZXR1cm4gdG8gSXJlbGFuZCB0byBiZWNvbWUgYSBwb2xpY2Ugb2ZmaWNlciBhbmQgd3JpdGUgYSBib29rIGFib3V0IGhpcyBsaWZlLiAKU28sIEkgdmVyeSB0aW1pZCBhYm91dCBoYWlyY3V0cy4gVXAgdW50aWwgY29sbGVnZSwgbXkgZGFkIGN1dCBteSBoYWlyIHdoaWxlIEkgc2F0IG9uIGEgc3Rvb2wgaW4gdGhlIGdhcmFnZS4gSXQgd2hhdCBJIHdhcyB1c2VkIHRvLCBhbmQgSSB3YXMgYSBxdWlldCBjaGlsZCBhbmQgZGlkbiBsaWtlIHRhbGtpbmcgdG8gc3RyYW5nZXJzLiBUaGUgdGhvdWdodCBvZiBwYXlpbmcgdGhlbSB0byB0b3VjaCBteSBoZWFkIG1hZGUgbWUgcmVjb2lsIGluIGRpc2d1c3QuCk9uZSBzaXRlIGV4cGxhaW5lZCB0aGF0IG1vc3QgY2FzaW5vcyBhcmUgb3JnYW5pc2VkIGFyb3VuZCBsb2NhbCBjdXN0b21zLCBzbyB0aGUgYXRtb3NwaGVyZSBvbmx5IHJlZmxlY3RzIHRoZSBvdmVyYWxsIHRyYWRpdGlvbiBvZiB0aGUgbmVpZ2hib3VyaG9vZC4gClIvZ2FtaW5nc3VnZ2VzdGlvbnM6IEZvciBhbGwgeW91ciBnYW1pbmcgcXVlc3Rpb25zIHRoYXQgYXJlbiBnYW1lcyEgR28gaGVyZSBmb3IgYWNjZXNzb3JpZXMgYW5kIG1vcmUhCkl0J3MgYSBiaWcgY2hvaWNlLiAKQWxsb3cgZm9yIGEgMTAgbWludXRlIHdhbGssIGFsbCB0b2xkIGFib3V0IDUgbWludXRlcyB0byByZWFjaCBTb2kgMzMgZnJvbSBQaHJvbSBQaG9uZyBCVFMsIGFuZCBhbm90aGVyIDUgbWludXRlcyB3YWxrIGRvd24gdGhlIHNvaS44LzEwUGluayBNYXNzYWdlIGlzIHdlbGwgbG9jYXRlZCwgdmVyeSBjbG9zZSB0byBQaHJvbSBQaG9uZyBCVFMsIG9yIGFib3V0IDEwIG1pbnV0ZXMgd2FsayBvciBhIHNob3J0IG1vdG9yY3ljbGUvdGF4aSByaWRlIGZyb20gU3VraHVtdml0IHN1YndheSBzdGF0aW9uLiAKU2V0aCBNaWxsZXIsIGEgam91cm5hbGlzdCB3aG8gd3JvdGUgYWJvdXQgdGhlIGlzc3VlIGluIDIwMTcsIHRoaW5rcyB0aGF0IGVxdWlwbWVudCBtYWtlcnMgZGlkbid0IGNvbnNpZGVyIHRoZSBwcml2YWN5IGltcGxpY2F0aW9ucy4gVGhlcmUgd2VyZSBhbHJlYWR5IGNhbWVyYXMgb24gcGxhbmVzICAgYWx0aG91Z2ggbm90IHNvIGludHJ1c2l2ZSAgIGFuZCB0aGUgY29tcGFuaWVzIGFzc3VtZWQgdGhhdCBwYXNzZW5nZXJzIHdvdWxkIHRyYWRlIHRoZWlyIGltYWdlcyBmb3IgY29udmVuaWVuY2UsIGFzIHRoZXkgZG8gd2l0aCBmYWNpYWwgcmVjb2duaXRpb24gdGVjaG5vbG9neSBhdCBpbW1pZ3JhdGlvbiBjaGVja3BvaW50cywgaGUgc2FpZC4uIApIZXJlJ3MgdGhlIGJlc3QgcGFydDogWW91IGRvbid0IGhhdmUgdG8gYmUgYSByZWZsZXhvbG9neSBndXJ1IHRvIGJlc3RvdyBhIG1hc3NhZ2Ugd2l0aCBoZWFsdGhmdWwgYmVuZWZpdHMuIApCdXQgZG9uJ3Qgc3RvcCBhdCBzcHJpbmtsZXM7IG9uY2UgeW91IGhhdmUgZW5vdWdoIG9uIHRoZSBib2R5LCB0YWtlIG91dCBhIHBhc3RyeSBicnVzaCBhbmQgZ2VudGx5IHNwcmVhZCB0aGUgY29ybnN0YXJjaCBvdmVyIHlvdXIgbG92ZXIncyBlbnRpcmUgYm9keS4gTmV4dCwgZ2l2ZSBhIHNlZHVjdGl2ZSBmdWxsIGJvZHkgbWFzc2FnZSB1c2luZyB0aGUgY29ybnN0YXJjaCBpbnN0ZWFkIG9mIGJvZHkgb2lsLiAKSSB3YXMgYWJsZSB0byBzZXQgdXAgdGhlIHdob2xlIHNpdGUgbXlzZWxmLCBhbmQgY3VzdG9tZXIgc2VydmljZSB3YXMgZnJpZW5kbHkgYW5kIGhlbHBmdWwgd2hlbmV2ZXIgSSBoYWQgcXVlc3Rpb25zLiAKQW5kIEl0J3MgdHJ1ZS4gCkhvbW9waG9iaWEgaXNuJ3Qgb24gdGhlIHJpc2UuIApUaGlldmVzIENsZXZlci4gClNoZSBsZXQgbWUga2lzcyBoZXIgYW5kIHRoZW4gd2UgZW5qb3llZCBhIGJpdCBvZiBtdXR1YWwgbWFzdHVyYmF0aW9uLiBTaGUgYnJvdWdodCBtZSB0byBvcmdhc20gd2l0aCBoZXIgaGFuZCBhbmQgSSBzaG90IG9udG8gaGVyIGJlbGx5LiAKV2F0Y2ggb25saW5lIG9yIGRvd25sb2FkIG1vdmllOiBNb3ZpZXMgVG9ycmVudCBEb3dubG9hZCBCZXR0ZXIgTHVjayBUb21vcnJvdyBNdHYgTW92aWUgU3BlY2lhbCAyayAyMDAzIFVzYS4gCkkgbWVhbiBmdWNrLCB0aGUgY2FtcHVzIGF0IHRoZSBNb3VudCBpcyBiYXJlIGNvbmNyZXRlIHRoZSBkYXkgYWZ0ZXIgYSBzdG9ybSBhbG1vc3QgYWx3YXlzLiBCZWNhdXNlIHRoZXkgaGF2ZSBjcmV3cyB0aGF0IGFjdHVhbGx5IGRvIHRoZWlyIGpvYi4KSXQgd2FzIGEgbG9uZyB0cmlwIG92ZXIgb24gdGhlIGJvYXQgICBwbGF5IGNhcmRzIG9mdGVuIGVub3VnaCBhbmQgd2luIG9mdGVuIGVub3VnaCBhbmQgdGhlIHN0YWtlcyBkb24ndCBoYXZlIHRvIGJlIHRoYXQgaGlnaC4gQWxzbywgSSdtIHByZXR0eSBzdXJlIHRoYXQgb25jZSB1cG9uIGEgdGltZSB3aGVuIGRpbm9zYXVycyByb2FtZWQgdGhlIGVhcnRoIG15IG1vbSB0YXVnaHQgbWUgdG8gcGxheSBzY29wYSB3aXRoIGEgc3RhbmRhcmQgQmljeWNsZSBkZWNrIG9mIGNhcmRzLCB0aG91Z2ggSSB0aGluayB5b3UgZG9uJ3QgdXNlIDUyIHRvIGRvIHRoYXQuLiAKVGhlIHNob3cgYWxzbyBpbmNsdWRlZCBhIHNwZWNpYWwgMyBEIHRyaWJ1dGUgdG8gTWljaGFlbCBKYWNrc29uIGZlYXR1cmluZyBhIHZpZGVvIGNsaXAgaGUgbWFkZSBvZiAiRWFydGggU29uZyIgYXMgVXNoZXIsIENhcnJpZSBVbmRlcndvb2QsIENlbGluZSBEaW9uLCBKZW5uaWZlciBIdWRzb24gYW5kIFNtb2tleSBSb2JpbnNvbiBzYW5nIGFsb25nLgpUbyBzdW1tYXJpemUsIHRoZSBydWxlcyBvZiAidGhlIHRlbGxzIiBnbyBhcyBmb2xsb3dzOiB3aGVuIGEgcGxheWVyIGFjdHMgd2VhayBoZSBpcyBzdHJvbmcgYW5kIHdoZW4gaGUgYWN0IHN0cm9uZyBoZSBpcyB3ZWFrLiBXaGVuIHNwb3R0aW5nIHRoZXNlICJ0ZWxscywiIHRyeSB0byBkaXNhcHBvaW50IHlvdXIgb3Bwb25lbnQgICBpZiBoZSBwbGF5cyB3ZWFrIHdoaWxlIGhvbGRpbmcgYSBncmVhdCBoYW5kLCBmb2xkIG9yIGNoZWNrLiAKVGhlIHRvbmd1ZSBpcyBzZXQgYW1vbmcgb3VyIG1lbWJlcnMsIHN0YWluaW5nIHRoZSB3aG9sZSBib2R5LCBzZXR0aW5nIG9uIGZpcmUgdGhlIGVudGlyZSBjb3Vyc2Ugb2YgbGlmZSwgYW5kIHNldCBvbiBmaXJlIGJ5IGhlbGwuIFNoZSdzIDYgZmVldCB0YWxsLCBzaGUncyBnb3QgdGhlIGJlc3QgYm9keS4gSWYgdGhleSB0YWtlIGV2ZXJ5IG9wcG9ydHVuaXR5IHRvIGN1dCB5b3UgZG93biwgcG9pbnQgb3V0IHlvdXIgaW5zZWN1cml0aWVzLCBvciBqdXN0IHRvIG1ha2UgeW91IGZlZWwgYmFkLCB0aGF0IGlzIGV4dHJlbWVseSBkaXNyZXNwZWN0ZnVsIGFuZCBub3Qgc29tZXRoaW5nIHlvdSBuZWVkLiAKWXMsIG9uIHRoZSBvdGhlciBoYW5kLCBmb2N1c2VzIG9uIG9uZSBwZXJzb24gZm9yIHRoZSBlbnRpcmV0eSBvZiB0aGUgYWxidW06IE5ld3NvbSBoZXJzZWxmLiBPZGRseSBlbm91Z2gsIGJ5IGZvY3VzaW5nIGluIGFuZCBtYWtpbmcgdGhlIGFsYnVtIHNvIHBlcnNvbmFsLCBzaGUgaXMgYWJsZSB0byB3aWRlbiB0aGUgc2NvcGUgYW5kIGVuY29tcGFzcyBzbyBtdWNoIG1vcmUgb2YgaGVyc2VsZiBhbmQgaGVyIGpvdXJuZXlzLiAKRm91ciBvZiBhIGtpbmQuIApVc2UgdGhlc2UgdGVuIGZvb2RzIGluIHlvdXIgZGlldCB0byBzdXBwb3J0IHByb3RlaW4gc3ludGhlc2lzIGFuZCBidWlsZCBtdXNjbGUgaW4gY29uanVuY3Rpb24gd2l0aCBhIHJlc2lzdGFuY2UgdHJhaW5pbmcgcHJvZ3JhbS4gQnVpbGRpbmcgbXVzY2xlIGlzIG5vdCBhYm91dCBidWxraW5nIHVwIGJ5IGFkZGluZyB1c2VsZXNzIG5vbiBjb250cmFjdGlsZSBmYXQgdGlzc3VlLiBSYXRoZXIsIGl0IGlzIGFib3V0IGFwcGx5aW5nIHRoZSByaWdodCB0cmFpbmluZyBzdGltdWx1cyBhbmQgcHJvdmlkaW5nIHRoZSBib2R5IHdpdGggYWRlcXVhdGUgbnV0cmllbnRzIHRvIHN1cHBvcnQgdGhlIGZvbGxvd2luZyBwcm9jZXNzZXM6LiAKUnVzaCByZXNlYXJjaCBmb3IgQ2hlbWlzdHJ5IGluIEluZHVzdHJpYWwgaWYgeW91ciB0b3RhbCBwb3AgaXMgbG93LCByZXNlYXJjaCBFZHVjYXRpb24gRWZmLiBnaXZpbmcgU29jaWFsIFRob3VnaHQgdGVjaHMgaW4gQ3VsdHVyZSBpZiB5b3VyIGxpdGVyYWN5IGlzIGxvdwpIb3dldmVyLCB0aGVpciBsb3cgbGV2ZWxzIGluIG1vZGVybiBkaWV0cyBpbiBkZXZlbG9wZWQgY291bnRyaWVzIGFyZSBhIGtub3duIHJpc2sgZmFjdG9yIGZvciBwaHlzaWNhbCBkaXNvcmRlcnMgc3VjaCBhcyBjYXJkaW92YXNjdWxhciBhbmQgaW5mbGFtbWF0b3J5IGRpc2Vhc2VzLiJEQ0QgYWZmZWN0cyA1JSBvZiBjaGlsZHJlbiBhbmQgc2hvd3Mgc3Vic3RhbnRpYWwgb3ZlcmxhcCB3aXRoIEFESEQsIGR5c2xleGlhLCBhbmQgYXV0aXN0aWMgc3BlY3RydW0gZGlzb3JkZXJzLi4gClVOSVQgSUkgRk9VUklFUiBTRVJJRVMgOSArIDMgRGlyaWNobGV0J3MgY29uZGl0aW9ucyAgIEdlbmVyYWwgRm91cmllciBzZXJpZXMgICBPZGQgYW5kIGV2ZW4gZnVuY3Rpb25zICAgSGFsZiByYW5nZSBzaW5lIHNlcmllcyAgIEhhbGYgcmFuZ2UgY29zaW5lIHNlcmllcyAgIENvbXBsZXggZm9ybSBvZiBGb3VyaWVyIFNlcmllcyAgIFBhcnNldmFsJ3MgaWRlbnRpZnkgICBIYXJtb25pYyBBbmFseXNpcy4gVU5JVCBJSUkgQk9VTkRBUlkgVkFMVUUgUFJPQkxFTVMgOSArIDMgQ2xhc3NpZmljYXRpb24gb2Ygc2Vjb25kIG9yZGVyIHF1YXNpIGxpbmVhciBwYXJ0aWFsIGRpZmZlcmVudGlhbCBlcXVhdGlvbnMgICBTb2x1dGlvbnMgb2Ygb25lIGRpbWVuc2lvbmFsIHdhdmUgZXF1YXRpb24gICBPbmUgZGltZW5zaW9uYWwgaGVhdCBlcXVhdGlvbiAgIFN0ZWFkeSBzdGF0ZSBzb2x1dGlvbiBvZiB0d28gZGltZW5zaW9uYWwgaGVhdCBlcXVhdGlvbiAoSW5zdWxhdGVkIGVkZ2VzIGV4Y2x1ZGVkKSAgIEZvdXJpZXIgc2VyaWVzIHNvbHV0aW9ucyBpbiBDYXJ0ZXNpYW4gY29vcmRpbmF0ZXMuIApJcyBhIHZlcnkgc3BlY2lmaWMgY2hhcmFjdGVyLCBhbmQgcHV0dGluZyBoaW0gaW4gYSBzY2VuZSB3aXRoIGFueW9uZSBmcm9tIHRoZSBYIE1lbiB1bml2ZXJzZSBpcyBnb2luZyB0byBiZSBjaGFsbGVuZ2luZywgdG8gc2F5IHRoZSBsZWFzdC4gRGVhZHBvb2wsIHRoZSBNZXJjIHdpdGggdGhlIE1vdXRoIGRvZXMgc2hhcmUgdGhlIHNjcmVlbiB3aXRoIGF0IGxlYXN0IG9uZSBtZW1iZXIgb2YgdGhlIFggTWVuOiBDb2xvc3N1cyAoQW5kcmUgVHJpY290ZXV4KSwgd2hvIGNhbiB0cmFuc2Zvcm0gaGlzIHNraW4gaW50byBtZXRhbCwgbGF5cyBhIGJlYXRpbmcgb24gRGVhZHBvb2wsIGFzIHNlZW4gaW4gdGhlIGZpbG0gdHJhaWxlci4uIApMdWNraWx5LCBpdCB3YXMgb25seSBhcm91bmQgNmsgYSBzZW1lc3Rlci4uIApIZXJlIGlzIGEgYnVuY2ggb2YgZ3V5cyB3aG8gcHJpZGUgdGhlbXNlbHZlcyBvbiBob3cgdGhleSBoYXZlIGhhZCBldmVyeSBjcmFmdCBvdXQgdGhlcmUsIGFuZCBhcmUgYW4gZXhwZXJ0LCBidXQgYXNrIHRoZW0gdG8gcXVpdD8sIHRoZXkgYWxsIGxpa2UgV1RGPy4gQ2xhc3NpYyBhbGNvaG9saWNzIGluIGRlbmlhbC4gCkZsb3JlbmNlIEthdGhlcmluZSBSb21lc2J1cmcncyBPYml0dWFyeQoiSSdtIGNvbnRpbnVhbGx5IGluc3BpcmVkIGJ5IHRoZSBkcml2ZSBhbmQgcGFzc2lvbiB0aGF0IEkgc2VlIGhlcmUsIiBzYXlzIENoaWVmIEh1bWFuIFJlc291cmNlcyBPZmZpY2VyIEppbSBSZWlkLCB3aG8gam9pbmVkIFJvZ2VycyBpbiAyMDExLCB0aHJlZSB5ZWFycyBhZnRlciB0aGUgcGFzc2luZyBvZiBpdHMgZm91bmRlci4gIk91ciBqb2IgYXMgbGVhZGVycyBpcyB0byBsaWdodCB0aGF0IHVwIGFuZCByZXN0b3JlIHRoYXQgZHJpdmUgdG8gd2luLiJUaGUgY29tcGFueSB0cmFjZXMgaXRzIGhlcml0YWdlIHRvIHRoZSBlYXJseSAxOTIwcyBhbmQgdGhlIGZvdW5kaW5nIG9mIFRvcm9udG8ncyBDRlJCIHJhZGlvIHN0YXRpb24gYnkgVGVkIFJvZ2VycycgZmF0aGVyLiAKRm9yIHZpbGxhaW4gSSBndWVzc2luZyBndWVzc2luZyB2YWx1ZTogQUEsIFFRLCAyMiwgQUssIEFRLCBBMTAsIFFkMTB4IChhbHRob3VnaCB3b3VsZCBoZSB4L3ggZmxvcCBoZXJlPyksIGFsbCBmbHVzaGVzLiAKSnVzdCBsZWZ0IGluIHBlYWNlIHRvIGRvIGhlciBqb2IuIEhlIGVzY2FsYXRlZCBoaXMgYmVoYXZpb3Igb3V0IG9mIHNlZW1pbmdseSByZXZlbmdlLiAKRmFjaW5nIFNvdXRoIEZsb3JpZGE6IFVucmVzdCBpbiBWZW5lenVlbGFWZW5lenVlbGFuIGFjdGl2aXN0IGFuZCBqb3VybmFsaXN0IEhlbGVuYSBQb2xlbyBqb2lucyBDQlM0IEppbSBEZUZlZGUgdG8gdGFsayBhYm91dCB0aGUgdW5yZXN0IGluIFZlbmV6dWVsYSBvbiBGYWNpbmcgU291dGggRmxvcmlkYSB3aXRoIEppbSBEZUZlZGUuIFJlcC4gUmVwLiAKQmUgd2FyZSB0aGF0IHRoZSBoaWdoZXIgdGhlIGdsb3NzIHRoZSBlYXNpZXIgaXQgaXMgdG8gc3BvdCBhbmQgbWlzdGFrZXMuIApBIGRyYWdvbnMnIHBvaW50IG9mIHZpZXcgTXIuIFRyZWxpdmluZyBsaWtlcyB0aGUgZW50cmVwcmVuZXVyIGFuZCByZXNwZWN0cyBoZXIgZXhwZXJpZW5jZSBpbiB0aGUgZ3JvY2VyeSBpbmR1c3RyeS4gCklzIHRoZXJlIGEgc3RvcnkgYmVoaW5kIHRoZSBuYW1lP0EuIFllcyEgQXMgd2Ugd2VyZSB3b3JraW5nIHRvZ2V0aGVyIGluIFZpZW5uYSwgd2Ugd2VyZSBnb2luZyB0aHJvdWdoIGh1bmRyZWRzIG9mIHBvdGVudGlhbCBuYW1lcy4gV2Ugd2FudGVkIGEgRmlubmlzaCByZWZlcmVuY2UsIGJ1dCBldmVyeXRoaW5nIHdlIGxpa2VkIHdhcyB0YWtlbi4gCldoZW4gc2hlIGFza2VkIHdoYXQgSSBjb3VsZCBwb3NzaWJseSBrbm93IGFib3V0IHJlYWwgdHJhdW1hLCBJIHRvbGQgaGVyIEkgd2FzIGEgc2V4dWFsIGFidXNlIHN1cnZpdm9yIGF0IHRoZSBoYW5kcyBvZiBhIGZhbWlseSBtZW1iZXIsIGFuZCBzaGUgdHVybmVkIGl0IGFyb3VuZCB0byBzYXkgdGhhdCBldmVuIGlmIEkgZGlkbiBmZWVsIHRoZSBzYW1lIHdheSBzaGUgZGlkLCB0aGUgZXhwZXJpZW5jZSBzdGlsbCBsZWZ0IG1lIHdpdGggaW1wb3J0YW50IGxlc3NvbnMgZm9yIG15IG5leHQgbGlmZS4gCk15IGdpcmxmcmllbmQgd291bGQgcHJvdGVzdCBhIGJpdCBpZiBJIGdhdmUgaGVyIGEgaGlja2V5IHdoaWxlIGluIGJlZCwgYnV0IHRoZSBhbW91bnQgb2YgcHJvdGVzdGluZyB3b3VsZCBpbmNyZWFzZSBleHBvbmVudGlhbGx5IGlmIEkgZ2F2ZSBoZXIgb25lIHdoaWxlLiBMZXQncyBzYXkuIFdhaXRpbmcgaW4gYSBxdWV1ZSBpbiBhbiBhbXVzZW1lbnQgcGFyay4gClJlY29nbml6ZWQgZm9yIHRoZWlyIHN0cmVuZ3RoIGFuZCBjb3VyYWdlIHNob3duIGR1cmluZyBhbmQgYWZ0ZXIgdGhlaXIgbGlmZXNhdmluZyBtZWFzdXJlcyB3ZXJlLCB3aXRoIGRhdGVzIG9mIHRoZSBzYXZlcyAoYWxsIGluIDIwMTQpOiBBcHJpbCA0OiBDaHJpc3RvcGhlciBIdWJlcnQsIEpvc2ggRXJkbWFuLCBEYW4gTWNDb3NreSwgRGFuIEJhcm5hcmQsIERhbiBQYXp1cmVrLCBhbmQgRGFuIFdpbGxpYW1zLiBNYXkgMjogTWljaGFlbCBGbG9yZXMgYW5kIFNoYW5ub24gU21pdGguIApTaGUgc2FpZCB0aGUgY291cGxlIHdpbGwgdGFrZSBncmVhdCBwcmlkZSBpbiByZXN0b3JpbmcgaXQgYW5kIGJyaW5naW5nIGl0IGJhY2sgdG8gbGlmZSwgcmF0aGVyIHRoYW4gImhhdmUgaXQgY3J1bWJsZSIuIApUaGF0IGJlaW5nIHNhaWQsIEkgYSB2ZXJ5IGdyZWVkeSBwbGF5ZXIuIApNeSBoaXN0b3J5OiBMb2dpYyA1LjUuMS4gV2l0aCBYU2tleSwgdXBkYXRlZCBpbiBhcHJpbCAyMDA5IHRvIExvZ2ljIHBybyA4LCA4LjAuMi4gClRoZSBwYXkgZm9yIHRoZSBjdW11bGF0aXZlIGtub3dsZWRnZSBpcyBwZWFudXRzIGNvbXBhcmVkIHRvIHdoYXQgSSB2YWx1ZSB0aGUga25vd2xlZGdlIGFuZCB3aGF0IEkga25vdyBidXNpbmVzc2VzIGFyZSBjYXBhYmxlIG9mIGRvaW5nIHdpdGggaXQuIEkganVzdCBhdCB0aGUgcG9pbnQgd2hlcmUgSSB3YW50IHRvIHRha2UgbXkgdG95cyBhbmQgZ28gaG9tZS4gCkxlcyBkZXV4IHByZW1pcmVzIGFubmVzIGRlIGNlIGNvdXJzIChjb3VycyBkYnV0YW50cyAgbGEgcGFyb2lzc2UgcmZvcm1lIGRlIGwnT3JhdG9pcmUgZHUgTG91dnJlIHB1aXMsIGwnYW5uZSBzdWl2YW50ZSwgY291cnMgcHJvZ3Jlc3NhbnRzICBsYSBwYXJvaXNzZSByZm9ybWUgZGUgTGEgUmVuY29udHJlKSBzb250IGRlIHBvcnRlIHVuaXF1ZW1lbnQgbGluZ3Vpc3RpcXVlIGV0IHMnYWRyZXNzZW50ICB0b3VzIDogcGVyc29ubmVzIGFwcGFydGVuYW50ICB1bmUgY29uZmVzc2lvbiBjaHJ0aWVubmUgb3Ugc2Ugc2l0dWFudCBob3JzIGR1IGNocmlzdGlhbmlzbWUuIApFdmVuIHdoZW4gdGhlIGxhZGllcyBtYWRlIHRoZWlyIHdheSB0byB0aGUgcG9rZXIgdGFibGVzLCB0aGV5IHN0aWxsIGNvdWxkbid0IHN0b3AgdGFsa2luZyBhYm91dCBLaW0ncyBuZXcgbG9vay4gQXQgb25lIHBvaW50LCBLaW0gY2xhaW1lZCBLaGxvZSBnYXZlIGhlciBhICJiYWNraGFuZGVkIGNvbXBsaW1lbnQiIGJ5IHNheWluZyBzaGUgbmV2ZXIgbG9va2VkIGxpa2UgdGhpcyBhbmQgaXMgb2xkZXIuCk9ubGluZSBnYW1pbmcgbm90IG9ubHkgcHJvbWlzZWQgYSB3aWRlIHNlbGVjdGlvbiBvZiBnYW1lcywgbWlycm9yaW5nIHRoYXQgb2YgYSB0eXBpY2FsIGxhbmQgYmFzZWQgY2FzaW5vLCBidXQgaXQgYWxzbyBicm91Z2h0IHdpdGggaXQsIHJld2FyZHMuIFdoZW4gaW5zaWRlIGEgY2FzaW5vLCBwbGF5ZXJzIG9mdGVuIGhhZCBhY2Nlc3MgdG8gc29tZSB0eXBlIG9mIHJld2FyZHMgY2FyZCB0aGF0IGNvdWxkIGJlIGluc2VydGVkIGludG8gYSBzbG90IG1hY2hpbmUgb3IgaGFuZGVkIHRvIGEgZGVhbGVyIGR1cmluZyB0YWJsZSBnYW1lIHBsYXksIGluIG9yZGVyIHRvIHJhY2sgdXAgcG9pbnRzIGZvciBwbGF5LCB3aGljaCBjb3VsZCBsYXRlciBiZSByZWRlZW1lZCBmb3IgY2FzaCBhbmQvb3IgcmV3YXJkcy4gClRoZSBnb29kIG5ld3MgaXMgbm8gb25lIGhhZCBhIHByb2JsZW0gd2l0aCBpdCBlaXRoZXIuLiAKSWYgdGhleSBjYW4gYmVhdCBhIHRlYW0gbGlrZSBBc3RyYWxpcyBvciBFblZ5IHRoZXkgZGVmaW5pdGVseSBjYW4gdGFrZSBhIG1hcCBvZmYgb2YgRm5hdGljLCB3aGljaCB0aGV5IGhhdmUgZG9uZSBpbiB0aGUgcGFzdC4gCkl0IHdvcmtlZCBmb3IgbWUgYnV0IHNvbWUgbWF5IGZpbmQgdGhlcmUgdG8gYmUgc29tZXRoaW5nIGNyZWVweSBvciB1bnNldHRsaW5nIGFib3V0IGhlci4gCkJ5IHRlbGxpbmcgc3RlbSBjZWxscyB0byBiZWNvbWUgbXVzY2xlIGNlbGxzIGFuZCBib25lIGNlbGxzLiBJdCBhbHNvIGFjdGl2YXRlcyBhbm90aGVyIHByb3RlaW4gdGhhdCB0dXJucyBvZmYgdGhlICJmaW5nZXIgcHJvdGVpbiIuIAo5LiBUdXNjYW55IGZvciB0cmVra2VycwpFdmVyeSBvdGhlciB0aW1lIHNvbWVvbmUgaGFzIHRha2VuIGl0IG92ZXIgbmlnaHQuIApEb3duc3RhaXJzIHRoZXJlIGlzIHdoYXQgYXBwZWFycyB0byBiZSBhIHJlc3RhdXJhbnQgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSBlYXRzIGhlcmUgYnV0IHRoZSB3b3JraW5nIGdpcmxzLiAKT25lIG9mIHRoZSBwYW5lbGlzdHMsIFRvbSBSb2EgKE5ndGkgQXBha3VyYSkgc3Bva2Ugd2l0aCBBbGlzb24gTWNDdWxsb2NoIGluIHRlIFJlbyBNb3JpIGFuZCBFbmdsaXNoIGFmdGVyIHRoZSBldmVudCBhYm91dCBPJ01hbGxleSdzIGJvb2s6LiAKUmVmcmlnZXJhdGUgYWdhaW4gdW50aWwgY2hvY29sYXRlIGhhcmRlbnMuIFJlbW92ZSBmcm9tIHJlZnJpZ2VyYXRvciBhIGxpdHRsZSB3aGlsZSBiZWZvcmUgc2VydmluZywgc28gaXRzIGVhc2llciB0byBjdXQgdGhyb3VnaCB0aGUgY2hvY29sYXRlLi4gCkdlb3JnZSBpcyBpbiB0aGUgcHJvY2VzcyBvZiBhcHBseWluZykuIApBIE5vdi4gCkJ1dCBkbyBJIHdhbnQgdG8gYmUgd2l0aCBBbWVyaWNhLCBsaWtlIEFtZXJpY2EsIHdpdGggaXRzIGluYWJpbGl0eSB0byBjb250cm9sIHRoZSBkcnVnIHByb2JsZW0/IE5vLiBPciB0aGUgZ3VuIHByb2JsZW0/IE5vLgpJIHJlbWVtYmVyIGJlaW5nIGF0IHRoZSBiYW5rIG9mIGEgbGFrZSB3aXRoIHRoZW0uIApHYXkgYW5kIGxlc2JpYW4gQW1lcmljYW5zLCBhdCBsZWFzdCB0aGUgb25lcyB3aG8gYXJlIHByaW1hcmlseSB3aGl0ZSBhbmQgZWR1Y2F0ZWQgdGhlbXNlbHZlcywgZmlnaHQgYml0dGVybHkgZm9yIHRoZSAicmlnaHQiIHRvIG1hcnJ5LiAKSW4geW91ciBleGFtcGxlIHRoZXkgYm90aCBtYWRlIDIgcGFpciBRdWVlbnMgYW5kIDcncyBsZXRzIHNheSAuIApPaCBjaXRlcyBhbiBhcnRpY2xlIGluIFRoZSBHdWFyZGlhbiBieSBBbmFrYW5hIFNjaG9maWVsZCwgd3JpdHRlbiBhZnRlciBTY2hvZmllbGQgdmlyYWwgS29uTWFyaSB0d2VldCwgYXMgb25lIGV4YW1wbGUgb2YgImEgd2lsbGZ1bCBtaXN1bmRlcnN0YW5kaW5nIG9mIEtvbmRvIHN0YXRlbWVudHMgaGVyZSB0byBzdWl0IGhlciBvd24gbmFycmF0aXZlLiIgT2ggc2F5cywgIlRoZXJlIGlzIGFuIG92ZXJlbXBoYXNpcyBvbiB0aGUgd29yZHMgam95IHdpdGhvdXQgdW5kZXJzdGFuZGluZyB3aGF0IFtLb25kb10gcmVhbGx5IG1lYW5zIGJ5IGl0LiAKQ2xvc2VyIHRvIGhvbWUsIEtsdWdlJ3MgcGhpbGFudGhyb3BpYyBlZmZvcnRzIGluY2x1ZGUgdGhlIFVWQSBjaGlsZHJlbidzIHJlaGFiaWxpdGF0aW9uIGNlbnRlciBpbiBDaGFybG90dGVzdmlsbGUgYW5kIFVWQSdzIGFib3JpZ2luYWwgYXJ0IGNvbGxlY3Rpb24sIGJvdGggYmVhcmluZyBoaXMgbmFtZSwgYXMgd2VsbCBhcyB0aGUgNywzNzkgYWNyZXMgb2YgbWFuaWN1cmVkIGVzdGF0ZXMgaW4gdGhlIHNvdXRoZXJuIHBhcnQgb2YgdGhlIGNvdW50eSBLbHVnZSBnYXZlIHRvIFVWQSBmb3IgZWR1Y2F0aW9uIGFuZCByZXNhbGUgaW4gMjAwMS4KV2hpY2ggbWFrZXMgaGlzIHRyZWF0bWVudCBvZiBEZW5uYSBpcm9uaWNhbGx5IHBhaW5mdWwgaW4gaGluZHNpZ2h0LCBhbmQgd2lsbCBjYXN0IGEgYml0dGVyc3dlZXQgbWVsYW5jaG9seSBvdmVyIGFsbCBvZiBoaXMgcGFzdCBkZWNpc2lvbnMgd2hlbiB3ZSB1bmRlcnN0YW5kIGhvdyBoZSBoYXMgaW5kZWVkIGJlZW4gbGVhZCBkb3duIHRoZSBnYXJkZW4gcGF0aC4gQXMgY2xldmVyIGFzIGhlIGlzLCBoZSBoYXMgYmVlbiB0cmlja2VkIGFuZCBtaXNsZWQgaW50byBiZWxpZXZpbmcgYSBmYWxzZWhvb2QsIGFuZCBhbGwgb2YgaGlzIHRhbGVudHMsIHNraWxscyBhbmQgaW50ZWxsaWdlbnQgcHV0IHRvIHdvcmsgb24gdGhlIHdyb25nIHNpZGUuIEFuZCB0aGVyZSBub3QgYSBkYW1uIHRoaW5nIGhlIGNhbiBkbyBhYm91dCBpdCBub3cuClNvIHdoZW4gSSB3YXMgaW4gbWlkZGxlIHNjaG9vbCwgdGhlIGJveXMgaW4gbXkgY2xhc3Mgd291bGQgcGxheSB0aGlzIGdhbWUgY2FsbGVkIHN1aWNpZGUuIFlvdSB0aHJvdyBhIHRlbm5pcyBiYWxsIGF0IHRoZSB3YWxsIGFuZCB3aGVuIGl0IHJlYm91bmRlZCB3aG9ldmVyIGNhdWdodCB0aGUgYmFsbCBoYWQgdG8gdGhyb3cgaXQgZnJvbSB0aGUgc2FtZSBzcG90IHRoZXkgY2F1Z2h0IGl0IGF0LiBJZiB5b3UgbWlzc2VkIHRoZSB3YWxsIGEgZ2FuZyBvZiBndXlzIHdvdWxkIGJhcnJpY2FkZSB5b3Ugd2l0aCBwdW5jaGVzIGFuZCB3b3VsZG4gc3RvcCB1bnRpbCB5b3UgcmFuIGFuZCB0b3VjaGVkIHRoZSB3YWxsLiBUaGVyZSB3YXMgc29tZSBkaWNrcyB3aG8gd291bGQgc3RheSBieSB0aGUgd2FsbCBhbmQgYmxvY2sgdGhlIGJhbGxzIHRoYXQgd2VyZSB0aHJvd24uIE9uZSBwYXJ0aWN1bGFyIHRpbWUgYSBraWQganVzdCBoYXBwZW5lZCB0byB3YWxrIGJ5IHRoZW0gcGxheWluZyB0aGUgZ2FtZSwgcGlja2VkIHVwIHRoZSBiYWxsIHdoZW4gaXQgcm9sbGVkIGJ5IGhpbSwgYW5kIHRocmV3IGl0IGp1c3QgdG8gaGF2ZSB0aG9zZSBraWRzIGJ5IHRoZSB3YWxsIGJsb2NrIGl0LiBBIHdob2xlIGdhbmcgb2YgZHVkZXMgdW5sZWFzaGVkIHB1bmNoZXMgYW5kIGV2ZW4ga2lja3Mgb24gaGltIHRvIHRoZSBwb2ludCB3aGVyZSBoZSBqdXN0IGZlbGwgZG93biBvbiB0aGUgZmxvb3IuIEFsbCBvZiBhIHN1ZGRlbiB5b3UgaGVhciBzb21lIGd1eXMgc2NyZWFtaW5nIGluIGRpc2d1c3QgYW5kIGV2ZXJ5b25lIHN0YXJ0cyBiYWNraW5nIG9mZiBvZiBoaW0uIEhlIHdhcyBvbiB0aGUgZmxvb3Igd2l0aCB3ZXQgc2hvcnRzLCBzaXR0aW5nIGluIGEgcHVkZGxlIG9mIHVyaW5lLCB0ZWFyeSBleWVkIGFuZCBibGF6aW5nIHJlZC4gVGhlIHdob2xlIGNsYXNzIG9mIGFib3V0IDEwMCBraWRzIHNhdyBoaW0gYW5kIG9uZSBraWQgd2hvIHdhcyBwYXJ0aWNpcGF0aW5nIGluIGJlYXRpbmcgaGltIHVwIGZlbHQgYmFkIHNvIGhlIGhlbHBlZCBoaW0gdXAgYW5kIHRvIHRoZSByZXN0cm9vbS4gU28gbWFueSBwZW9wbGUgd2VyZSBsYXVnaGluZyBhdCBoaW0uIEkgbmV2ZXIgZmVsdCBzbyBiYWQgZm9yIHNvbWVvbmUuCldoaWxlIGxpdHRsZSBvZiBEZWxwaGkncyBncmFuZGV1ciByZW1haW5zIHRvZGF5LCB5b3UgY2FuIHN0aWxsIHNlZSB0aGUgaGlkZGVuIGluY2Vuc2UgY2hhbWJlciB1bmRlcm5lYXRoIHRoZSBmbG9vci4gCkhlIGdvdCB2ZXJ5IGdvb2QsIHZlcnkgcXVpY2tseS4gCkRhbW4geSB3aGF0IGEgcmVzcG9uc2UuIEkgYW0gc2ltdWx0YW5lb3VzbHkgY29tZm9ydGVkIGJ5IHlvdXIgc2ltaWxhciBleHBlcmllbmNlcywgYnV0IGFsc28gc2FkZGVuZWQgdGhhdCB5b3UgYWxsIGhhZCB0byBkZWFsIHdpdGggdGhpcywgdG9vLiBJIGFtIHNlbmRpbmcgeW91IGFsbCBsb3ZlLgpUaGF0IGxlYXZlcyB0aGUgRUNCIHdpdGggdGhlIGZhbWlsaWFyIHJvbGUgb2YgaGF2aW5nIHRvIHByb3AgdXAgc2VudGltZW50IGluIHRoZSAxOSBjb3VudHJ5IGV1cm96b25lLCB3aGVyZSBncm93dGggaXMgc3ViIHBhciBhbmQgZXhwb3J0IGRyaXZlbiBhbmQgdGhlcmUgaXMgbGl0dGxlIHJvb20gZm9yIGdvdmVybm1lbnQgc3BlbmRpbmcuClRoZSBncm91cCBvd25zIFN0b2tlIENpdHkgRm9vdGJhbGwgQ2x1Yiwgd2hpY2ggbWFkZSBhIGxvc3Mgb2YgMjFtIGFuZCBpbiAyMDE3IHRoZSBncm91cCBwYWlkIDc1bSBpbnRvIGl0cyBjaGFyaXRhYmxlIGZ1bmQsIHNldCB1cCBpbiBNcyBDb2F0ZXMnIG5hbWUuCllvZ2EgaXMgYSB3b25kZXJmdWwgd2F5IHRvIGNlbnRlciB5b3VyIGJvZHkgYW5kIHJlbGlldmUgYW54aWV0eSBhbmQgZmF0aWd1ZS4gClllYWggS3VyZHMgc3RpbGwgYXJlbid0IHRyZWF0ZWQgcHJvcGVybHkgaW4gc29tZSBwbGFjZXMsIGVzcGVjaWFsbHkgaW4gdGhlIGVhc3QsIGFsdGhvdWdoIGl0IGhhcyBnb3R0ZW4gYmV0dGVyIGV2ZW4gaWYgdGhlcmUgc3RpbGwgaXMgYSBsb3Qgb2YgcmFjaXNtIGFuZCBtYWx0cmVhdG1lbnQgZ29pbmcgb24uIEJ1dCBpbiB0aGUgd2VzdCBvZiBUdXJrZXkgdGhlcmUgYXJlIGlzIGEgaHVnZSBhbW91bnQgb2Yga3VyZGlzaCBidXNpbmVzcyBvd25lcnMgYW5kIHdvcmtlcnMgd2hvIGFsc28gYmVuZWZpdCBmcm9tIHRvdXJpc3RzLiBBbHNvOiBtYW55IHBlb3BsZSB3aG8gZG9uJ3Qgc3VwcG9ydCB0aGUgZ292ZXJubWVudC4KRXZlbnR1YWxseSBzaGUgYXNrZWQgZm9yIGEgZmV3IGh1bmRyZWQgZG9sbGFycy4gSSBlIHRyYW5zZmVycmVkIGl0IHRvIGhlciBhbmQgbmV2ZXIgaGVhcmQgZnJvbSB0aGVtIGFnYWluLi4gCkJ1dCBzb21lIG1vdGhlcmZ1Y2tlciBtYWRlIGEgbWVtZSBzYXlpbmcgaXQgd2FzIHNvIG5vdyBpdCBpcyBpcy4gCkdyb3dpbmcgdXAgcGFydCBEdXRjaCwgSSB0cmllZCB0byB1c2UgdGhlIHBvbGl0ZSB5b3UgaW4gYWRkcmVzc2luZyBvbGRlciBwZW9wbGUgaW4gTm9yd2F5LCBzaW5jZSB0aGF0IHdoYXQgeW91IGRvIGluIHRoZSBOZXRoZXJsYW5kcy4gClYgUHJlIGhvbGlkYXkgcGFja2FnZSAgIGluY2x1ZGVzOiBmdWxsIGxlZyB3YXgsIGJpa2luaSB3YXggYW5kIHVuZGVyYXJtIHdheCBhbmQgZXllYnJvdyB3YXggcGx1cyBmdWxsIGJvZHkgZHJ5IHNraW4gYnJ1c2ggdG8gcHJlcGFyZSB5b3VyIHNraW4gZm9yIHRoZSBzdW4uIFRoaXMgd2lsbCBoZWxwIHlvdSBnYWluIGEgZ3JlYXQgdGFuLiAoQXJvdW5kIDFob3VyIDQ1bWludXRlcykgNDUKVGhpcyBtYWtlcyBtb3JlIHNlbnNlLCBJJ20gbm90IHRyeWluZyB0byBhdHRhY2sgeW91IGFuZCB5b3UgZG8gbWFrZSBzb21lIGdvb2QgcG9pbnRzLCB0aG9zZSBpbnRlcmVzdGVkIGluIHRyeWluZyBpdCBkZXNwaXRlIHBhc3QgZXhwZXJpZW5jZXMsIHRoZXJlIHZlcnkgd2VsbCBtYXkgYmUgYSBzdHJhaW4gb3V0IHRoZXJlIHRoYXQgd29ya3Mgd29uZGVycy4gSSBndWVzcyBJIGp1c3QgZ2V0IGZydXN0cmF0ZWQgd2l0aCB0aGUgcGVvcGxlIG91dCB0aGVyZSBwYXJhZGluZyBpdCBhcm91bmQgYXMgYSBjdXJlIGFsbCwgYnV0IHBlb3BsZSBuZWVkIHRvIGJlIGhvbmVzdCwgaXQgZGVmaW5pdGVseSBpc24ndCB0aGF0LCBidXQgdGhhdCdzIG5vdCB0byBzZWxsIGl0IHNob3J0IGFuZCBzYXkgaXQncyBub3QgYmVuZWZpY2lhbC4gClBlb3BsZSB3ZXJlIHNheWluZyBhIHllYXIgYWdvIHRoYXQgdGhpbmdzIHdlcmUgZ29pbmcgdG8gc3RhcnQgbW92aW5nLiAKSGUgZXhwZWN0cyBtZSB0byBiZSBmZW1pbmluZSBhbmQgZGlnbmlmaWVkLCBvZiBjb3Vyc2UsIGJ1dCBoZSBpbnRlbnRpb25hbGx5IG1hcnJpZWQgYSBsZWFkZXIsIGEgUGhpIEJldGEgS2FwcGEsIGFuZCBhIGNhcGFibGUgd29tYW4uIApJbiBncmFkZSA3IHRoZXJlIHdhcyB0aGlzIGxvdWQgYW5ub3lpbmcgYnVsbHkgdGhhdCBnZW5lcmFsbHkgaWdub3JlZCBtZSwgYnV0IG9uY2Ugc2hvdmVkIG1lIGJhY2t3YXJkcyBpbnRvIGhpcyBmcmllbmQgd2hvIHdhcyBrbmVlbGluZyBiZWhpbmQgbWUgd2FpdGluZyB0byB0cmlwIG1lLiBOb3QgZXhwZWN0aW5nIHRoZSBzdWRkZW4gYXR0YWNrIEkgd2VudCBvdmVyIGhpcyBmcmllbmQgYW5kIHNtYXNoZWQgbXkgaGVhZCBvbiB0aGUgZ3JvdW5kLiAKVGhlIHBlcnNvbiBncmFicyBTYW0gYnkgaGlzIGZlZXQgYW5kIGRyYWdzIGhpbSB0byB0aGUgZ2FyYWdlLiBTYW0gaXMgZHJhZ2dlZCByaWdodCB0byB0aGUgdHJ1bmsgb2YgaGlzIGJlbG92ZWQgQ2llbC4gSGUgaXMgcGxhY2VkIGluc2lkZSBoaXMgdHJ1bmsuIFRoZSB0cnVuayBkb29yIHNsYW1zIHNodXQsIHRoZSBDaWVsIHN0YXJ0cyB1cCwgYW5kIGJhY2tzIG91dCBvZiB0aGUgZ2FyYWdlLiBUaGUgQ2llbCBkcml2ZXMgdG8gSGlnaHdheSA0MSBhbmQgdGhlbiBkb3duIEx1ZGluZ3RvbiBTdHJlZXQgdG8gU2FtIG9mZmljZS4gVGhlIENpZWwgaXMgcGFya2VkIGluIHRoZSBnYXJhZ2UgYW5kIFNhbSBpcyBkcmFnZ2VkIGZyb20gaGlzIHRydW5rIHVwIHRvIHRoZSBmb3VydGggZmxvb3Igb2YgdGhlIG9mZmljZSBidWlsZGluZy4gVGhlIHBlcnNvbiB0aGVuIGdvZXMgYmFjayB0byB0aGUgY2FyIGFuZCByZXRyaWV2ZXMgdGhlIGF3YXJkLCBwbGFjZXMgaXQgaW4gdGhlIHBlcmZlY3Qgc3BvdC4gVGhlIHBlcnNvbiB0aGVuIHNldHMgdXAgdGhlIHNjZW5lLgpEdXJpbmcgbGF6eSBhbmQgY29sZCBuaWdodHMsIHlvdSBjYW4gZ2l2ZSBlYWNoIG90aGVyIGFuIG9pbCBtYXNzYWdlLiAKMSBwb2ludCAgc3VibWl0dGVkIDIzIGRheXMgYWdvClRoYXQgd2h5IHlvdSBzaG91bGQgaGF2ZSBwbGFzdGljIGdsYXNzZXMgYXMgd2VsbCwganVzdCBpbiBjYXNlLiBJZiByZWFsIGdsYXNzIHNoYXR0ZXJzIHlvdSB3aWxsIGdldCBpbiBzZXJpb3VzIHRyb3VibGUgZnJvbSB0aGUgU3BhIHNpbmNlIHRoZXJlIGFyZSBwZW9wbGUgd2Fsa2luZyBhcm91bmQgYmFyZWZvb3RlZCAobGF3eWVyIGhlYXZlbiwgeW91IGNhbiBzZWUgdGhlIGltcGxpY2F0aW9ucy4pLnN0aWxsLCB5b3VyIGdsYXNzZXMgKGFuZCBmcmFtZSkgbWlnaHQgZ2V0IGEgYml0IGRhbWFnZWQgYmVjYXVzZSBvZiB0aGUgaGlnaCB0ZW1wZXJhdHVyZXMuIFRoYXQgd2h5IHlvdSBzaG91bGQgaGF2ZSBjaGVhcCBzcGFyZSBnbGFzc2VzIGZvciB5b3VyIHNwYSB2aXNpdHMgOyApLiAKVGhlIGFydGljbGUgaXMganVzdCB0cnlpbmcgdG8gbm9ybWFsaXplIG5vcm1hbCBkb2cgYmVoYXZpb3IgYW5kIG1ha2UgcmVhZGVycyB1bmRlcnN0YW5kIGEgbG90IG9mIGJlaGF2aW9yIHdlIHNlZSBhcyAiZGVmaWFudCIgaXMgYSBub3JtYWwgYW5kIG9mdGVuIGFmZmVjdGlvbmF0ZSBiZWhhdmlvciBmcm9tIGRvZ3MuIApUaGlzIE9jdC4gMjAxNyBwaG90byByZWxlYXNlZCBieSB0aGUgTGFzIFZlZ2FzIE1ldHJvcG9saXRhbiBQb2xpY2UgRGVwYXJ0bWVudCBGb3JjZSBJbnZlc3RpZ2F0aW9uIFRlYW0gUmVwb3J0IHNob3dpbmcgdGhlIGludGVyaW9yIG9mIExhcyBWZWdhcyBzaG9vdGVyIFN0ZXBoZW4gUGFkZG9jayAzMm5kIGZsb29yIHJvb20gb2YgdGhlIE1hbmRhbGF5IEJheSBob3RlbCwgYW4gZXZpZGVuY2UgaW1hZ2VkIHJlbGVhc2VkIGFzIHBhcnQgb2YgYSBwcmVsaW1pbmFyeSByZXBvcnQgYnkgQ2xhcmsgQ291bnR5IFNoZXJpZmYgSm9lIExvbWJhcmRvIG9uIEZyaWRheSwgSmFuLiAxOSwgMjAxOCwgaW4gTGFzIFZlZ2FzLiAKUXVhcnRlcnMuIElmIHlvdSBhcmUgaW4gdG8gYXJjYWRlIGdhbWVzLCBRdWFydGVycyBpcyB0aGUgb25seSBhcmNhZGUvYmFyIEkga25vdyBvZiBhcm91bmQgaGVyZS4gCkxhZGllcyBhcmUgYWJsZSB0byBjaGF0IHdpdGggbG9jYWwgc2luZ2xlIG1lbiBjb21wbGV0ZWx5IGZvciBmcmVlLiBPdXIgc2luZ2xlcyBjaGF0cm9vbSBvZmZlcnMgeW91IHRoZSBvcHBvcnR1bml0eSB0byBtZWV0IHNpbmdsZXMgYW5kIGNvbW11bmljYXRlIHdpdGggdGhlbSBpbiB0aGUgcmVhbCB0aW1lLiAKV2hpbGUgdGhlIHRhcmdldCBhdWRpZW5jZSB3aWxsIGNvbXByaXNlIDE1IDM0IHllYXIgb2xkIG1lbiBhbmQgd29tZW4gZnJvbSBTRUMgQSwgQiBhbmQgQywgUmVhbCBoYXMgYWxzbyBkZWZpbmVkIGl0cyB0YXJnZXQgcHN5Y2hvZ3JhcGhpY3MgYXMgdXJiYW4gb3JpZW50ZWQgYW5kIGFzcGlyYXRpb25hbC4KRnVydGhlcm1vcmUsIHRoZSBLb3JlYW4gZ292ZXJubWVudCBpc24gZXZlbiBkaXJlY3RseSByZXNwb25zaWJsZS4gSXQgd2FzIGEgZmV3IHJvZ3VlIHNvbGRpZXJzIHdobyBkaWQgdGhpcy4gClNvbWUgc3VicyBoYXZlIGdvbmUgc28gZmFyIGFzIHRvIHB1Ymxpc2ggdGhhdCB0aGUgZG93bnZvdGUgYnV0dG9uIGlzIE5PVCBmb3IgZGlzYWdyZWVpbmcuIEkgZ2xhZCB0aGF0IHRoZXkgZG9pbmcgdGhhdC4gSXQgbWF5IG5vdCB0aGlzIHByb2JsZW0gYnV0IGl0IHdpbGwgZ2l2ZSBzb21lb25lIHNvbWUgcGF1c2UgYmVmb3JlIGNsaWNraW5nIG9uIHRoYXQgZG93bnZvdGUgYnV0dG9uLgpUaGUgZGlmZmVyZW5jZSBvZiBjb3Vyc2UgaXMgdGhhdCBhcnRpZmFjdCBkb2VzbiBhY3R1YWxseSBuZWVkIHRvIGhhdmUgdGhpcyByYW5kb21uZXNzIHRvIGl0LiBZb3UgY291bGQgZWFzaWx5IHJlbW92ZSBhbGwgdGhlIGV4dHJlbWUgcmFuZG9tbmVzcyBmcm9tIHRoZSBnYW1lIGFuZCB0aGUgZ2FtZSB3b3VsZCBiZSBiZXR0ZXIgZm9yIGl0LiBCdXQgcmVnYXJkbGVzcywganVzdCBiZWNhdXNlIGdvb2QgcGxheWVycyB3aWxsIHVzdWFsbHkgd2luIGRvZXNuIG1lYW4gdGhlcmUgaXNuIGFsc28gbHVjayBpbnZvbHZlZCwgYXMgbGlmZWNvYWNoIGhpbXNlbGYgd2lsbCBrbm93IGFsbCB0b28gd2VsbCBmcm9tIGhpcyBmb3JtZXIgY2FyZWVyCldoYXQgZG9lcyB0aGlzIG1lYW4gZm9yIHRoZSBmdXR1cmUgb2YgdGhlIHNob3c/IFdpbGwgaXQgYmVnaW4gdG8gZmVhdHVyZSBtb3JlIGdlbmRlciBhbmQgY3VsdHVyYWwgZGl2ZXJzaXR5PyBNcy4gCkhlIHJlZmVycmVkIHRvIGhpcyBmYXRoZXIgYXMgSGl0bGVyIGFuZCBzYWlkIGhlIHdhbnRlZCB0byBoaW0gb3ZlciB3aXRoIGEgY29tYmluZSBoYXJ2ZXN0ZXIgaGF2ZSBub3QgZXZlbiBiZWVuIGludmVudGVkIHlldCBmb3Igd2hhdCBteSBkYWQgaGFzIGRvbmUgdG8gbWUsIGhlIHdyb3RlLiAKSSBiZWVuIHBsYXlpbmcgYSBkZWNlbnQgYW1vdW50IG9mICQxIDZtIGh5cGVycyByZWNlbnRseSBvbiBpZ25pdGlvbi4gCkkgc2F3IGhpbSB3ZWFyaW5nIGl0IGluIHNvIG1hbnkgb2YgaGlzIHBpY3R1cmVzLiAKT2gsIGJ1dCB5b3Ugc2VlIHRoYXQgaXMgb25lIG9mIHRoZSBncmVhdCBpcm9uaWVzIG9mIHRoZSB1bml2ZXJzZSwgRmxveWQncyBnaW1taWNrIHdhcyBoaXMgemVybyBsb3NzZXMuIApCZSBDYXJlZnVsLCBQcm90ZWN0IFlvdXIgU3RhY2sgICBZb3UgbXVzdCBwcm90ZWN0IHlvdXIgc3RhY2sgYW5kIHN1cnZpdmUgdW50aWwgeW91IGdldCBzb21lIGdvb2QgaGFuZHMgeW91IGNhbiB1c2UsIHNvIGJlIGNhcmVmdWwgdG8gZXhwZW5kIHRoYXQgY2hpcCBkZXBvdCBkZWxpYmVyYXRlbHkgYW5kIGp1ZGljaW91c2x5ICAgYWx3YXlzIHdpdGggcHVycG9zZS4gCldoZW4gc29tZWJvZHkgd2FudHMgdG8gbWFrZSB5b3UgZmVlbCBPSyBhYm91dCB5b3VyIHNoaXR0eSBsaWZlLCB0aGV5J2xsIHVzdWFsbHkgc2F5LCAiQXQgbGVhc3QgeW91IGhhdmUgeW91ciBoZWFsdGguIiBJZiB5b3UgZG9uJ3QgaGF2ZSB0aGF0LCB0aGV5J2xsIHJlbWluZCB5b3Ugb2YgaG93IGVhc3kgbW9kZXJuIG1lZGljYWwgYWR2YW5jZXMgaGF2ZSBtYWRlIHlvdXIgaWxsbmVzcyBjb21wYXJlZCB0byB0aGUgcGFzdC4gClRoZW4sIHBlb3BsZSB3aWxsIGJlIGFibGUgdG8gZ2l2ZSB5b3UgbXVjaCBtb3JlIGFjY3VyYXRlIGFkdmljZS4gUmlnaHQgbm93IHlvdXIgcG9zdCBjb21lcyBhY3Jvc3MgYXMgYSBiaXQgc2lsbHksIGJlY2F1c2UgaXQgc2VlbXMgbGlrZSB5b3UgYXJlIGFuZ3J5IGJ1dCBub3QgZ2l2aW5nIGFueW9uZSB0aGUgaW5mb3JtYXRpb24gbmVlZGVkIHRvIGhlbHAgeW91LiBOb3QgdHJ5aW5nIHRvIGJlIG1lYW4sIGp1c3QgbGV0dGluZyB5b3Uga25vdyB3aHkgeW91IGhhdmVuIGdvdHRlbiB0aGUgd2FybWVzdCBvZiByZXBsaWVzLgpJIGRvbiB0aGluayBiZWluZyByZWxpZ2lvdXMgbWFrZXMgeW91IGFuIGlkaW90LiAKQydlc3QgZG9uYyBjZSBxdWkgZmFpdCBsZSBsaWVuIGVudHJlIGwnZXh0cmlldXIgKGxlcyBtb2xjdWxlcyBhcm9tYXRpcXVlcyBwZXJ1ZXMgcGFyIGxlcyBjZWxsdWxlcyBvbGZhY3RpdmVzKSBldCBsJ2ludHJpZXVyIChzeXN0bWUgbGltYmlxdWUpIHF1aSBmYWl0IGRmYXV0Li4gCkNhc2lubyBQb2tlciBsdWZ0IHNjaG5lbGxlci4gRGllIERlYWxlciB2ZXJzdWNoZW4gaW1tZXIsIGRhcyBTcGllbCBtaXQgZWluZXIgYW5nZW1lc3NlbmVuIEdlc2Nod2luZGlna2VpdCB6dSBmaHJlbi4gCkl0IGNhbiBiZSBhcmd1ZWQgdGhhdCB0aGUgYXJyaXZhbCBvZiB0aGUgc3R1ZGVudHMgb2ZmZXJzIHRoZSBiZXN0IGNoYW5jZSBpbiByZWNlbnQgd2Vla3Mgb2YgZW5kaW5nIEdhbHdheSBkcmVhZGZ1bCBydW4gd2hpY2ggY29udGludWVkIGxhc3Qgd2Vla2VuZCB3aXRoIER1bmRhbGsgNiAgIDEgcmlvdCBvdmVyIFVuaXRlZCBhdCBPcmllbCBQYXJrCklmIHlvdSBmaW5kIHRoZSB0b21zIHNvdW5kIHRoaW4sIHlvdSBjYW4gcGljayB1cCBzb21lIGV4dHJhIDU3cyB0byBhZGQgc29tZSBwcm94aW1pdHkgZWZmZWN0IGFuZCByb3VuZCBvdXQgdGhlIHNvdW5kLiAKU3VwcG9zZSB0aGUgcmF0cyBhcmUgZXV0aGFuaXplZCB3aGVuIHRoZWlyIGhlYWx0aCBzdGFydHMgdG8gZGV0ZXJpb3JhdGUsIHNvIHRoZXkgZ2V0IGNsb3NlIHRvIDEgUUFMWSBwZXIgeWVhci4gVGhpcyB3b3VsZCBjb3N0IGFib3V0ICQ1IHBlciByYXQgcGVyIG1vbnRoIHBsdXMgYW4gb3Bwb3J0dW5pdHkgY29zdCBvZiBtYXliZSAkNTAwIHBlciBtb250aCBmb3IgdGhlIHRpbWUgc3BlbnQsIHdoaWNoIHdvcmtzIG91dCB0byBhbm90aGVyICQ1IHBlciByYXQgcGVyIG1vbnRoLiAKVHlwaWNhbGx5IHdlIGFyZSB3ZXJlIGFsbCBicmllZmVkIG9uIGVhY2ggaHVtYW4gZmFjdG9yIGFjdGl2YXRpb24gZmFpbHVyZSB0aGF0IGhhcHBlbnMgd2l0aCB0aGUgZ29hbCBvZiBwcmV2ZW50aW5nIGFsbCBmYWlsdXJlcy5Ob3cgd2hlbiB0aGUgbWFpbnRhaW5lciBhcnJpdmVzIGFuZCBiZWdpbnMgd29ya2luZyBoZSBpcyByZXF1aXJlZCB0byBub3RpZnkgZGlzcGF0Y2hlciBpZiBoZSBpcyByZW1vdmluZyBhIGNyb3NzaW5nIGZyb20gc2VydmljZS4gVGhlIGRpc3BhdGNoZXIgaXMgdGhlbiByZXF1aXJlZCB0byBub3RpZnkgRWFjaCB0cmFpbiBjcmV3IHRyYXZlcnNpbmcgdGhlIGNyb3NzaW5nIHRvIGRvIHdoYXQgY2FsbGVkIGEgU3RvcCBhbmQgRmxhZy4gVGhleSBzdG9wIHRoZSB0cmFpbiBhbmQgZGVwbG95IHJvYWQgZmxhcmVzIGFuZCB0aGVuIHByb2NlZWQgb25jZSB0aGVyZSBpcyBubyBtb3ZpbmcgdHJhZmZpYy5JIGNhbiBpbmZlciBvbmUgb2YgdGhyZWUgdGhpbmdzIGhhcHBlbmVkIGhlcmUgKDQgcmVhbGx5KU1haW50YWluZXIgZGlkIG5vdCBwcm9wZXJseSBjb21wbGV0ZSBqdW1wZXIgbG9nIGFuZCBhcHBseSBwcm90ZWN0aW9uIHRvIHRoZSBjcm9zc2luZyB3aXRoIHRoZSBkaXNwYXRjaGVyLiAKMm5kOiBTcGVlZHdhZ29uICAgMjkgdm90ZXMKTG9vayBhdCBzb21lIG9mIHRoZSB5b3VuZyBmZW1hbGUgcHJvdGFnb25pc3RzIGluIEFTT0lBRjsgQXJ5YSBTdGFyayB0cmF2ZWxzIHRocm91Z2ggYSB3YXIgdG9ybiBhcmVhIG9mIHRoZSBjb3VudHJ5IGFyb3VuZCBhZ2UgOSAxMSwgTWFyZ2FlcnkgVHlyZWxsIGlzIHNraWxsZWQgYW5kIGN1bm5pbmcgYXQgcG9saXRpY2FsIGludHJpZ3VlcyBhdCAxNyB5ciBvbGQsIGFuZCBEYWVuYWVyeXMgVGFyZ2FyeWVuIGJlY29tZXMgYSBjb25xdWVyaW5nIFF1ZWVuIGJldHdlZW4gdGhlIGFnZXMgb2YgMTMgMTYuSG93ZXZlciwgc29tZSByZWFkZXJzIHRoYXQgbGlrZSBLdm90aGUgd291bGQgbm90IGxpa2UgS3ZvdGhldHRlIGJlY2F1c2UgdGhleSBhbHJlYWR5IHN0cm9uZ2x5IGRpc2xpa2UgRGVubmEsIHdobyBiYXNpY2FsbHkgaXMgdGhlIGZlbWFsZSB2ZXJzaW9uIG9mIGhpcyBjaGFyYWN0ZXIuIApBbmQgaWYgeW91J3JlIGF1ZGFjaW91cyBlbm91Z2ggdG8gd2FudCB0byBiZSBpbiB0aGVyZSB5b3Vyc2VsZiwganVzdCBsZXQgbWUga25vdy4gCk5vYm9keSB3YXMgaW4gaXQgdG8gc3RvcCBpdCwgYW5kIHlvdSBjYW4gc3RvcCBpdCBmcm9tIHRoZSBvdXRzaWRlLiAKSGFiYSBnYW1lcyBhc2FwLiBUaGUgbW9tZW50IHNoZSBzaG93ZWQgYW4gaW50ZXJlc3QgaW4gQ2FuZHkgTGFuZCBmcm9tIHByZXNjaG9vbCwgSSB0cmFja2VkIGRvd24gTXkgRmlyc3QgTGVhcm5pbmcgWm9vLCBidXQgbW9zdCBvZiB0aGVtIHdvdWxkIHdvcmsgdG9vLiBBbmQgSSBnYXZlIGl0IHRvIGhlci4gCkV0IGMnZXN0IGF1c3NpIGxlIGJvbmhldXIgZGUgZ290ZXIgbGV1cnMgcHJvZHVpdHMuIENhciBpbHMgb250ICBjb2V1ciBkZSBwYXJ0YWdlciBjZSBxdSdpbHMgbWV0dGVudCB0YW50IGRlIHNvaW4gIHByb2R1aXJlLiAKSWYgc2hlIHdhbnRzIHRvIGNhbGwgYW5kIHNtb290aCB0aGluZ3Mgb3ZlciBmb3IgcmVmdXNpbmcgdG8gZm9sbG93IHRoZSBwYXJlbnRpbmcgZGVjaXNpb25zIHdlJ3ZlIG1hZGUgYW5kIGZvciBkaXNjdXNzaW5nIHRoaXMgd2l0aCBhIHRoaXJkIHBhcnR5LCBJJ20gaGFwcHkgdG8gdGFrZSB0aGF0IGNhbGwuIApBbm5lcmV2ZW5hbnQgIDQ3IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIEVuZ2luZSBNTSBpcyBtYWRlIGJ5IHRoZSBlbmdpbmUgbWFudWZhY3R1cmVyIGFuZCBjb3ZlcnMgZW5naW5lIHNwZWNpZmljIHRoaW5ncywgaXQgd2lsbCBvZnRlbiBub3QgY292ZXIgYWNjZXNzb3JpZXMgdGhvdWdoLCBzdWNoIGFzIGJsZWVkIHZhbHZlcyBvciBzdGFydGVycyBhcyB0aG9zZSB2YXJ5IGJ5IGFwcGxpY2F0aW9uLiAKVGhhdCBhIGdyZWF0IHRyaXAuIFlvdSBkb24gc2F5IGhvdyBtYW55IGRheXMgeW91IHdhbnQgdG8gZ28gZm9yIHNvIGl0IG1ha2VzIGl0IGhhcmQgdG8gbWFrZSBhIHJlY29tbWVuZGF0aW9uLiBBbHNvLCByZWFsaXplIHRoYXQgdGhlIG1vc3QgcG9wdWxhciBiYWNrcGFja2luZyB0cmlwcyBhcmUgaW4gdGhlIGNvcnJpZG9yIGJldHdlZW4gVHVvbHVtbmUgTWVhZG93cyBhbmQgWW9zZW1pdGUgVmFsbGV5IHNvIGl0IGNhbiBiZSBoYXJkIHRvIHNjb3JlIGEgcGVybWl0IHRoZXJlIGFsdGhvdWdoIHlvdSBjYW4gYWxzbyB0cnkgZm9yIGEgRkNGUyBwZXJtaXQgd2hlbiB5b3UgZ2V0IHRoZXJlLiAKS2lsbCBhIGNpdmlsaWFuIGluIEdUQSwgeW91IGFyZSBhYmxlIHRvIGdldCB3YW50ZWQgbGV2ZWxzIGFuZCBhcmUgZ29pbmcgdG8gZ2V0IGh1bnRlZCBieSB0aGUgcG9saWNlLiAKTW9zdCBza2kgcmVzb3J0cyBvcGVuIG9uIHRoZSBRdWVlbidzIGJpcnRoZGF5IGxvbmcgd2Vla2VuZCwgd2hpY2ggaXMgdGhlIDEwdGggb2YgSnVuZSB0aGlzIHllYXIuIFdoZW4gZHJpdmluZyBvbiBjZXJ0YWluIHJvYWRzIGluIGEgMndkIGluIE5TVyBkdXJpbmcgdGhlIHdpbnRlciwgeW91IG5lZWQgdG8gY2Fycnkgc25vdyBjaGFpbnMuIApCZWF0YWJsZSBDYXNpbm8gR2FtZXM6IEdhbWVzIGxpa2UgcG9rZXIsIGJsYWNramFjaywgdmlkZW8gcG9rZXIsIGV0Yy4gZmFsbCB1bmRlciB0aGlzIGNhdGVnb3J5LiBVbmJlYXRhYmxlIENhc2lubyBHYW1lczogVGhpcyBjb21wcmlzZXMgZ2FtZXMgbGlrZSBCYWNjYXJhdCwgQ3JhcHMsIFJvdWxldHRlLCAzIGNhcmQgcG9rZXIsIDQgY2FyZCBwb2tlciwgS2VubyBhbmQgcGxlbnR5IG1vcmUuClRvcCA1IFRpcHMgZm9yIENob29zaW5nIGEgRGF5IFNwYQpBZGRpdGlvbmFsIGJsb29kIHRlc3RzIGFuZCB0aGVuIGEgc3RvbWFjaCBiaW9wc3kgY29uZmlybWVkIHRoYXQgSSBoYXZlIGNlbGlhYyB0b28uCkFOIEVMRUdBTlQgV0FZIFRPIFRFWFQKSSB0aGluayB0aGUgb3RoZXJzIGFyZSBpbiB0aGUgZGFyay4gCk5vIG9uZSB3YW50cyB0byBhZG1pdCB0aGV5IGRpZCB0aGUgd3JvbmcgdGhpbmcsIGxpa2UgbG9ja2luZyB1cCBpbm5vY2VudCBwZW9wbGUuIApUZXh0aWxlIGZhY3RvcmllcyB3ZXJlIGFtb25nIHRoZXNlIGFuZCB3ZXJlIGltcG9ydGFudCB0byBLb3JlYSBsYXRlciBlbnRyeSBpbnRvIG1hbnVmYWN0dXJpbmcsIGFzIHdhcyB0aGUgYmFzaWMgbW9kZWwgb2YgaG93IHRvIG9yZ2FuaXplIGEgY29ycG9yYXRpb24gYW5kIHRoZSByZWxhdGlvbnNoaXAgb2YgdGhlIHN0YXRlIHRvIHRob3NlIGNvcnBvcmF0aW9ucy4uIApJZiB0aGVyZSBhcmUgJDQwIGluIHRoZSBwb3QgYWZ0ZXIgdGhlIGZsb3AgYW5kIGEgcGxheWVyIGJldHMgJDEwIGFuZCB0d28gb3RoZXIgcGxheWVycyBjYWxscyBoaXMgYmV0IHRoZW4geW91IGFyZSBnZXR0aW5nIDcgdG8gMSBpbiBwb3Qgb2Rkcy4gSWYgeW91IGFyZSBjaGFzaW5nIHRoZSBBIDkgZmx1c2ggZHJhdyBmcm9tIHRoZSBmbG9wICwgdGhhbiB5b3UgYXJlIGdldHRpbmcgMzYlIG9yIDMgdG8gMSBpbiBoYW5kIG9kZHMgdG8gY2F0Y2ggeW91ciBjYXJkIGF0IHRoZSByaXZlciwgc28gY2FsbGluZyBvciBldmVuIHJhaXNpbmcgdGhpcyBiZXQgd2lsbCBiZSBhIGNvcnJlY3QgZGVjaXNpb24gdG8gbWFrZS4KSGUgZm9sZHMgYWJvdXQgMTAgc2Vjb25kcyBsYXRlciAoVVRHIHRha2VzIGhpcyAzMCBiYWNrKS4gSSBzaG93IHRoZSBibHVmZiBhbmQgdGhleSB0aWx0Li4gCk5vLCBpdCB3YXMgYSBjb21wbGV0ZWx5IGpvaW50IGRlY2lzaW9uLiBXZSB0YWxrZWQgYWJvdXQgaXQgYSBsb3QsIGJ1dCBpdCB3YXMgYSBubyBicmFpbmVyLiBXZSBjb3VsZG4ndCB3YWxrIGF3YXkgZnJvbSBpdCBrbm93aW5nIHdlIGhhZG4ndCBkb25lIGFueXRoaW5nLCBzbyBhbGwgb2YgdXMgZGVjaWRlZCBhZnRlciBhIGNvdXBsZSBvZiBkYXlzIHdlIGNvdWxkbid0IG5vdCBkbyBhbnl0aGluZyBhYm91dCBpdC4gV2hlcmUgdGhleSB3ZXJlIGluIHRoaXMgcmF2aW5lLCBhbGwgd2UgY291bGQgZG8gd2FzIGRpZyBhIHNoYWxsb3cgcmFtcCBpbnRvIHRoaXMgcmF2aW5lLCB3ZSBjb3VsZG4ndCBkaXJlY3RseSBoZWxwIHRoZSBiaXJkcywgYnV0IHdlIGNvdWxkIGdpdmUgdGhlbSBhbiBvcHRpb24gdG8gaGVscCB0aGVtc2VsdmVzIHdoaWNoIHRoYW5rZnVsbHkgaXMgd2hhdCB0aGV5IGRpZC4KSWYgeW91ciB0b290aGFjaGUgaXNuJ3QgcmVzcG9uZGluZyB0byBob21lIHJlbWVkaWVzIG9yIGl0IGxhc3RzIGxvbmdlciB0aGFuIGEgY291cGxlIG9mIGRheXMsIHlvdSBzaG91bGQgdmlzaXQgeW91ciBkZW50aXN0IGFzIHNvb24gYXMgcG9zc2libGUuIEluZGljYXRvcnMgdGhhdCB5b3UgbmVlZCBhbiBpbW1lZGlhdGUgZGVudGFsIGFwcG9pbnRtZW50IGluY2x1ZGUgZmV2ZXIsIHN3ZWxsaW5nIG9mIHRoZSBmYWNlLCBkaXNjaGFyZ2UgZnJvbSB0aGUgZ3VtcywgcmVkIGd1bXMsIHNldmVyZSBwYWluIGFmdGVyIGEgdG9vdGggaGFzIGJlZW4gcmVtb3ZlZCwgb3IgdHJvdWJsZSBicmVhdGhpbmcgb3Igc3dhbGxvd2luZy4gWW91IHNob3VsZCBhbHNvIG5vdGUgdGhhdCBwYWluIGluIHRoZSBqYXcgb3IgbW91dGggdGhhdCdzIGFjY29tcGFuaWVkIGJ5IGNoZXN0IHBhaW4gY2FuIG1lYW4geW91J3JlIGhhdmluZyBhIGhlYXJ0IGF0dGFjay4gCklmIHlvdSdyZSBnb2luZyB0aGUgb25lIG9uIG9uZSByb3V0ZSwgeW91IHdhbnQgdG8gbWFrZSBzdXJlIGV2ZXJ5IHNob3QgcGFja3MgdGhlIGJpZ2dlc3QgcHVuY2ggcG9zc2libGUuIEluIHdoaWNoIGNhc2UsIHlvdSBtYXkgd2FudCB0byBsb29rIGF0IHRoZSBWaXRhbCBTdHJpa2UgZmVhdHMsIGFsb25nIHdpdGggdGhlaXIgYWNjZXNzb3JpZXMgbGlrZSBEZXZhc3RhdGluZyBTdHJpa2UgdG8gZ2l2ZSB5b3UgYSBsaXR0bGUgZXh0cmEgcHVuY2guIFdoZW4geW91IGNvbWJpbmUgdGhvc2Ugd2l0aCBhIGhpZ2ggSW5pdGlhdGl2ZSwgYW5kIGV2ZW4gYSBmZXcgc25lYWsgYXR0YWNrIGRpY2UsIGdldHRpbmcgb2ZmIHRoYXQgZmlyc3Qgc2hvdCBjYW4gYmUgdHJ1bHkgZXhwbG9zaXZlLgpUaGV5IGhhdmUgZG9uZSBpcyBiYXNpY2FsbHkgcGxheWVkIGFsbCB0aGVpciBjYXJkcyBhdCBvbmNlLCBKZXNzb3Agc2F5cy4gClNpbmNlIGZhdCBzaXRzIGRpZmZlcmVudGx5IGJlbmVhdGggdGhlIHNraW4gdGhhbiBtdXNjbGUgZG9lcywgaXQgYWZmZWN0cyBob3cgb3VyIHN1cmZhY2UgYXBwZWFycywgb2Z0ZW4gbGVhZGluZyB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgdW53ZWxjb21lIGNlbGx1bGl0ZS4gVGhpcyBkcmVhZGVkIGJ1bXB5LCBjb3R0YWdlIGNoZWVzeSwgZGltcGxlZCBsb29raW5nIHNraW4gY2FuIHNob3cgdXAgYW55d2hlcmUsIGF0IGFueSB0aW1lIGFuZCBvbiBhbnlvbmUuIApZb3VyIGF1bnQgcmVjb2xsZWN0aW9uIG9mIGJlaW5nICJicmFpbndhc2hlZCIgYXQgc2Nob29sIGlzIGxpa2VseSBhY2N1cmF0ZTogTmF6aSBHZXJtYW55IHdhcyBhIHRvdGFsaXRhcmlhbiByZWdpbWUgYW5kIHVzZWQgYSBjb21iaW5hdGlvbiBvZiBwcm9wYWdhbmRhIGFuZCBpbmRvY3RyaW5hdGlvbiB0byBrZWVwIHRoZSBwb3B1bGFjZSBwbGlhbnQgYW5kIGxveWFsLCBhbmQgc2Nob29scyB3ZXJlIHJlcXVpcmVkIHRvIHRlYWNoIE5hemkgaWRlb2xvZ3kuIApBbHMgRGllbnN0ZWFuYmlldGVyIHNpbmQgd2lyIGdlbSAgNyBBYnMuMSBUTUcgZnIgZWlnZW5lIEluaGFsdGUgYXVmIGRpZXNlbiBTZWl0ZW4gbmFjaCBkZW4gYWxsZ2VtZWluZW4gR2VzZXR6ZW4gdmVyYW50d29ydGxpY2guIE5hY2ggIDggYmlzIDEwIFRNRyBzaW5kIHdpciBhbHMgRGllbnN0ZWFuYmlldGVyIGplZG9jaCBuaWNodCB2ZXJwZmxpY2h0ZXQsIGJlcm1pdHRlbHRlIG9kZXIgZ2VzcGVpY2hlcnRlIGZyZW1kZSBJbmZvcm1hdGlvbmVuIHp1IGJlcndhY2hlbiBvZGVyIG5hY2ggVW1zdG5kZW4genUgZm9yc2NoZW4sIGRpZSBhdWYgZWluZSByZWNodHN3aWRyaWdlIFR0aWdrZWl0IGhpbndlaXNlbi4gCkhlIHNwZWQgdXAsIGdvdCBpbiBmcm9udCBvZiB1cywgYW5kIHNsYW1tZWQgb24gaGlzIGJyYWtlcy4gCjE0IChNb25kYXkpIFdhZ2UgY29uICB0cmFjdCB0YWxrcyBiZXR3ZWVuIHRoZSBDSU8gQ29tbXVuaWNhdGlvbiBXb3JrZXJzIFVuaW9uIGFuZCB0aGUgT2hpbyBCZWxsIFRlbGVwaG9uZSBTeXN0ZW0gY29udGludWVkIGludG8gdGhlIHNtYWxsIGhvdXJzIG9mIHRoZSBtb3JuaW5nIHRvICBkYXkgYW5kIGEgdW5pb24gb2ZmaWNpYWwgaGVyZSBzYWlkIGFuIGFncmVlbWVudCBhcHBlYXJlZCBuZWFyLiAKSXMgc29tZXdoYXQgYm90aCBpcm9uaWMgYW5kIG5vdCB0ZXJyaWJseSB1bmNvbW1vbiBmb3IgV2lsc29uIHRvIGhhdmUgcnVuIGZvciB0aGUgcHJlc2lkZW5jeSBmb3Igb25lIHRoaW5nIGFuZCB0aGVuIGRvaW5nIGV4YWN0bHkgdGhlIG9wcG9zaXRlLCBhcyBoZSBkaWQgd2l0aCBoaXMgMTkxNiByZSBlbGVjdGlvbiBjYW1wYWlnbiBzbG9nYW4gIkhlIEtlcHQgVXMgb3V0IG9mIFdhciIuIApJIGdvbmUgdG8gaGltIHNldmVyYWwgdGltZXMgYW5kIGVhY2ggdGltZSB0aGUgbWFzc2FnZSB3YXMgZ29vZCwgbm90IGdyZWF0LCBidXQgd2hlbiBJIHNvIHRlbnNlZCB1cCBJIHRha2UgYW55IGZvcm0gb2YgcmVsaWVmIEkgY2FuIGdldC4uIApJZiB5b3UgYXJlIGZpbmUgd2l0aG91dCB0aGUgdG9wb2dyYXBoaWMgbWFwcywgdGhlbiBJIHdvdWxkIHNheSB0aGUgNjQ1bSBpcyB0aGUgd2F5IHRvIGdvLiBJdCBoYXMgc2xpZ2h0bHkgYmV0dGVyIGJhdHRlcnkgbGlmZSBhbmQgeW91IGNhbiB1cGxvYWQgY291cnNlcyB0byBpdCBhbmQgdXNlIGl0IGZvciBuYXZpZ2F0aW9uLiAKKFByaXZhY3kgUG9saWN5KUdvb2dsZSBBZFNlbnNlIEhvc3QgQVBJVGhpcyBzZXJ2aWNlIGFsbG93cyB5b3UgdG8gc2lnbiB1cCBmb3Igb3IgYXNzb2NpYXRlIGEgR29vZ2xlIEFkU2Vuc2UgYWNjb3VudCB3aXRoIEh1YlBhZ2VzLCBzbyB0aGF0IHlvdSBjYW4gZWFybiBtb25leSBmcm9tIGFkcyBvbiB5b3VyIGFydGljbGVzLiAKMS4gCklmIHlvdSBkbyBsaXZlIGluIHRoZSBVU0EsIGl0J3MgcG9zc2libGUsIGJ1dCBpdCBtYXkgbm90IGJlIGxlZ2FsLiBUaGUgVVMgZGVjcmVlZCBhIGxhdyByZWNlbnRseSBiYW5uaW5nIGJhbmtzIGZyb20gZGVhbGluZyB3aXRoIG9ubGluZSBwb2tlciBjb21wYW5pZXMuIEhvd2V2ZXIsIHlvdSBjYW4gcGxheSBmb3IgZnJlZSBvbmxpbmUgdG8gcHJhY3RpY2UgICBvciB5b3UgY291bGQgaGFjayBpbnRvIHRoZSBzeXN0ZW0gYW5kIGdldCBhIGZvcmVpZ24gSVAgYWRkcmVzcywgdGhvdWdoIHRoYXQncyBub3QgYXQgYWxsIHJlY29tbWVuZGVkLgpPbmNlIEkgc2FpZCBzb21ldGhpbmcsIGl0IGVzY2FsYXRlZCwgaGUgc2FpZCBsZXQncyBnbyBvdXRzaWRlIGFuZCBmaWdodC4gCkkgbmVhciB0aGUgZW5kIGFuZCBpdCBoYXMgdGFrZW4gbWUgYWJvdXQgYSB5ZWFyIGJ1dCBJIGEgc2xvdyB3YXRjaGVyLCBJIGZhbGwgYXNsZWVwIGR1cmluZyB2aXJ0dWFsbHkgYW55IHNob3cgaWYgSSB0cnkgdG8gd2F0Y2ggaXQgYWZ0ZXIgd29yaywgYW5kIEkgdG9vayBsaWtlIGEgNCBtb250aCBicmVhay4gSXQgaXMgdmVyeSBiaW5nZSBhYmxlLiA5IHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28uIApZb3UncmUgZG9pbmcgZ3JlYXQuIFdlIGFsbCBoYXZlIGRheXMgbGlrZSB0aGlzIGJ1dCB5b3UgbWFuYWdlZCBhbmQgeW91IGxlYXJuZWQgbW9yZSBhYm91dCBob3cgdG8gcHJpb3JpdGl6ZSBoaWdoIGFjdWl0eS9kZW1hbmRpbmcgcGF0aWVudHMuCkkgaGVhcmQgYSBib3kgdGVsbCBoaXMgZnJpZW5kICJJIG5lZWQgYSBnb29kIGNyeSIgYXQgdGhlIHBhcmsuIFdoYXQgdGhlIGZ1Y2sgaXMgdGhhdD8hIElmIEkgbGV0IG15IGtpZCBiZSB0aGF0IGtpZCBoZSBnZXQgZnVja2luIGVhdGVuIEFMSVZFIGluIHRoZSByZWFsIHdvcmxkISBCdXQgdGhlbiBteSB3aWZlIHN0YXJ0cyB0YWxraW5nIGFib3V0ICJ0b3hpYyBtYXNjdWxpbml0eSIgYW5kIGl0IGxpa2UuIApJdCB0aGUgYmVzdCEgSSBiZWVuIGFibGUgdG8gc2VlIGFsbCBteSBzcGVjaWFsaXN0cywgZ2V0IGFsbCB0aGUgdGVzdHMgSSBuZWVkIGRvbmUsIEkgaGF2ZSBubyBjb3BheSBmb3IgYXBwb2ludG1lbnRzIG9yIG1lZGljYXRpb24uIApObyBmYWxzZSBvYmplY3Rpdml0eSBoZXJlOiBJIGxvdmUgdGhlIE5ldyBZb3JrIFBvc3QuIEkgd29ya2VkIGZvciB0aGUgb2xkIGdhbCBmb3Igc28gbWFueSB5ZWFycyB0aGF0IHRoZSBudW1iZXIgc2NhcmVzIG1lIGp1c3QgdGhpbmtpbmcgYWJvdXQgaXQuCkhvcm1vbmUgaW1iYWxhbmNlcyBjYW4gY2F1c2UgZXZlcnl0aGluZyBmcm9tIGxvdy9pcnJlZ3VsYXIgZW5lcmd5IGxldmVscywgZGVwcmVzc2lvbiwgbG93IGxpYmlkbywgd2VpZ2h0IGdhaW4sIGhvdCBhbmQgY29sZCBmbGFzaGVzLCBoYWlyIGxvc3MsIG11c2NsZSBsb3NzLCB0byBjb2duaXRpdmUvbWVtb3J5IHByb2JsZW1zLiBNYWxlcywgZ2V0IHlvdXIgdGVzdG9zdGVyb25lIHRlc3RlZC4gRmVtYWxlcywgZ2V0IHlvdXIgZXZlcnl0aGluZyB0ZXN0ZWQuIApUaGlzIHN0dWR5IGhhcyB0YWtlbiBleGlzdGluZyByZXNlYXJjaCB0byBhIG5ldyBsZXZlbCB0byBwcm92ZSB0aGF0IHJlcGxhY2luZyBlbmR1cmFuY2UgdHJhaW5pbmcgd2l0aCB0d28gdHlwZXMgb2YgaW50ZXJ2YWwgdHJhaW5pbmcsCkhlciBpbnRha2Ugb2YgY2FyYm9oeWRyYXRlcywgcHJvdGVpbiBhbmQgZmF0IHdlcmUgcmVtYXJrYWJseSBjb25zaXN0ZW50LCB0aG91Z2ggaGVyIGxldmVsIG9mIHBvdGFzc2l1bSBkaWQgZHJvcC4iUG90YXNzaXVtIGlzIGFuIGluZGljYXRvciBvZiBmcmVzaCBmcnVpdHMgYW5kIHZlZ2V0YWJsZXMsIHdoaWNoIEkgd2FzIHN0cnVnZ2xpbmcgdG8gZ2V0IiBhdCBNY0RvbmFsZCdzLCBzaGUgc2FpZC5DcnVuY2h5IGZvb2RzIGFuZCB3aG9sZSBncmFpbnMgd2VyZSBhbHNvIGluIHNob3J0IHN1cHBseS4iSSB3b3VsZG4ndCBzdWdnZXN0IHRoaXMgZm9yIGFueWJvZHksIiBzaGUgc2FpZC4gClJlZ3VsYXRvcnkgY2FwdHVyZSBoYXMgYmVlbiBlbmhhbmNlZCBieSBhIHB1YmxpYyByZWxhdGlvbnMgZWZmb3J0IGludm9sdmluZyBUSSBmdW5kaW5nIGZvciBjb25mZXJlbmNlcywgdHJhaW5pbmcsIHJlc2VhcmNoLCBhbmQgaW50ZXJuYXRpb25hbCBwb2xpY2UgYW5kIGFudGkgY29ycnVwdGlvbiBvcmdhbmlzYXRpb25zLiAKSSBkb24gcmVsaXNoIHRoZSBpZGVhIG9mIFdhdHN1IHRoZXJlIGluIHRoZSB3aW50ZXIuIEFsc28sIHRoZSBiYW1ib28gc2hvd2VyIGlzIG9wZW4gdG8gdGhlIHNreS4gV2hhdCBpZiBpdCByYWlucz8gVGhvbXBzb24gc2F5czogcmFpbmVkIG9uIGlzIHBhcnQgb2YgdGhlIG1hZ2ljLCBidXQgSSBmb3VuZCBpdCBjb2xkLiAKSSBicmluZyB0aGlzIHVwLCBiZWNhdXNlIHRoZXJlIGlzIGEgdHJlbmQgdG8gcmVjb250ZXh0dWFsaXplIHRoaXMgdGltZSBwZXJpb2QgZm9yIHdoYXQgd2UgdGhpbmsgaXQgcHJvYmxlbXMgd2VyZSBmcm9tIG91ciBoZXVyaXN0aWMsIGFuZCBub3Qgd2hlcmUgdGhlIHBlb3BsZSwgYXQgdGhlIHRpbWUsIHdvdWxkIGFjdHVhbGx5IGZpbmQgYW54aWV0eS5JdCBpcyBwb3Agc2Nob2xhcmx5IHRvIGNpdGUgdGhhdCBob3Jyb3Igc3RvcmllcyBhcmUgcmVmbGVjdGl2ZSBvZiB0aGUgYW54aWV0aWVzIG9mIHRoZWlyIHRpbWUuIApMeW1waGF0aWMgc3lzdGVtIGNsZWFuc2VzLiBBIHNwZWNpYWwgZGlldC4gT25lIG9uIG9uZSBjb3Vuc2VsaW5nLi4gCkJldiwgWW9yaywgRW5nbGFuZC4uIApJIHRvbGQgdGhhdCBiaXRjaCB0byBzaHV0IHRoZSBmdWNrIHVwLCBhbmQgdGhhdCBqYWNraW5nIG9mZiBpcyBhIG5hdHVyYWwsIGFydGlzdGljLCBhbmQgYmVhdXRpZnVsIHByb2Nlc3MuIApUaGUgY291cnQgcmV2ZXJzZWQgYSBDb3VydCBvZiBTcGVjaWFsIEFwcGVhbHMnIGp1ZGdtZW50LCBzZW5kaW5nIHRoZSBjYXNlIGJhY2sgdG8gdGhhdCBjb3VydCB3aXRoIGRpcmVjdGlvbnMgdG8gcmV2ZXJzZSBhIEJhbHRpbW9yZSBDaXJjdWl0IENvdXJ0IGp1ZGdtZW50IGdyYW50aW5nIGEgbmV3IHRyaWFsLgpXZSBsZWZ0IG91ciBrZXlzIGFuZCBnYXJhZ2UgZG9vciBvcGVuZXJzIGFuZCBkcm92ZSBvZmYgdG8gbGVhdmUgc2FpZCBzbWFsbCB0b3duLiBIZSB0byBoaXMgaG9tZSBtZSB0byBtaW5lIGFuZCBteSB3aWZlLiBMZWZ0IG15IGFwdCB0byBiZSBwaWNrZWQgdXAgbGF0ZXIgYW5kIGRyb3ZlIHN0cmFpZ2h0IGhvbWUgdG8gbXkgd2lmZSB0aGUgbmV4dCBtb3JuaW5nLiAKVGhlIGNlbGx1bGFyIHBvcnRpb24gb2YgYmxvb2QgY29udGFpbnMgcmVkIGJsb29kIGNlbGxzIChSQkNzKSwgd2hpdGUgYmxvb2QgY2VsbHMgKFdCQ3MpIGFuZCBwbGF0ZWxldHMuIFRoZSBSQkNzIGNhcnJ5IG94eWdlbiBmcm9tIHRoZSBsdW5nczsgdGhlIFdCQ3MgaGVscCB0byBmaWdodCBpbmZlY3Rpb247IGFuZCBwbGF0ZWxldHMgYXJlIHBhcnRzIG9mIGNlbGxzIHRoYXQgdGhlIGJvZHkgdXNlcyBmb3IgY2xvdHRpbmcuIApPciB0aGV5IGNhbiBqdXN0IG1ha2UgUmluIHRyYW5zLiAKJDIwLyQzMCBwcmUgZmxvcCB3aXRoIHRoZSBvY2Nhc2lvbmFsIDMgYmV0IGFuZCBzaG92ZXMuIEkganVzdCBoYXZlbiBzZWVuIGEgbG90IG9mIHBsYXllcnMgY2FsbCAkMTI1IGZvciBhbiBpbnNpZGUgc3RyYWlnaHQgZHJhdyB3aGVyZWFzIEkgd291bGQgc2VlIHRoYXQgaW4gMS8yLiAKVGhleSB3aWxsIG91dG51bWJlciB1cyBpbiBmaW5hbCA1LiAKUmVzY2gsIiBHdWloZWVuIHNhaWQuIApUaGlzIGNvdW50cnkgaGFzIHRoZSBwb3RlbnRpYWwgZm9yIHNvIG11Y2gsIHlldCBoYWxmIHRoZSBwb3B1bGF0aW9uIGlzIGFjdGl2ZWx5IHN1cHBvcnRpbmcgdGhlIGRlbWlzZSBvZiB0aGlzIG5hdGlvbi4uIApFbXBhdGh5IE5vdCBldmVyeW9uZSBoYXMgdGhlIHBlcnNvbmFsaXR5IHR5cGUgdG8gYmUgYSBnb29kIG1hc3NhZ2UgdGhlcmFwaXN0LiAKRm9yIHdoYXQgaXQncyB3b3J0aCAgSSBhbSBwcm91ZCBvZiB5b3UuIApPcmFsIHN0b3JpZXMgYW5kIHMgdCBvIHIgaSBlIHMgZnJvbSBib29rcyBhcHBlYXIsIGkgbiBNdW5ybydzIGYgaSBjIHQgaSBvIG4gYmVjYXVzZS4gQWxpY2UgTXVucm8gZ3JldyB1cCBpbiBXaW5naGFtLCBPbnRhcmlvLCBhbmQgYXR0ZW5kZWQgdGhlIFVuaXZlcnNpdHkgb2YgV2VzdGVybiAuIGFzIGEgbm92ZWwsIExpdmVzIG9mIEdpcmxzIGFuZCBXb21lbiwgYW5kIHR3byB2b2x1bWVzIG9mIFNlbGVjdGVkIFN0b3JpZXMuIApXaGVuIHRoZSB2YWNjaW5lIGZvciBjaGlja2VucG94IGZpcnN0IGNhbWUgb3V0LCBtb3N0IHBlb3BsZSB0aG91Z2h0IGl0IHdhcyB2ZXJ5IHN0dXBpZC4gCkhlIGFjdHVhbGx5IGFzIGEgcmVhY3Rpb24gbm9pc2UsIHdoZW4gd2UgZGlzY3Vzc2luZyB0aGluZ3MgYW5kIEkgc2F5IHNvbWV0aGluZyB0aGF0IGNvbnRyYWRpY3RzIGhpcyBvd24gYmVsaWVmIG9uIFtpbnNlcnQgdG9waWMgb2YgZGlzY3Vzc2lvbiBoZXJlXSBhbmQgd29uIGJ1ZGdlIG9uIG15IHN0YW5jZSwgd2hlbiBoZSBjb21lcyB3aXRoIGhpcyBjb3VudGVyYXJndW1lbnRzLi4gClByZW1pcmUgZmVtbWUgZGUgbm90cmUgdmllLCBwcmVtaXJlIHJmcmVuY2UgOiBub3RyZSBtcmUuIER0ZXJtaW5hbnRlIGRhbnMgbGEgdHJhbnNtaXNzaW9uIGRlIGxhIGZtaW5pdCwgZW4gcGxlaW4sIGVuIGNyZXV4LCBlbiBleGNzLiAgbXJlIHVsdHJhZm1pbmluZSwgZmlsbGUgY29xdWV0dGUgZXQgc29pZ25lLCBldCBpbnZlcnNlbWVudCA/IHZpZGVtbWVudCwgbCdhbGNoaW1pZSBlc3QgYmllbiB0cm9wIGNvbXBsZXhlIHBvdXIgdHJlIHJkdWl0ZSAgZGVzIHF1YXRpb25zIGF1c3NpIHNpbXBsaXN0ZXMuIApCbHVtc3RlaW4gZmluYWwgaGFuZCBvZiBhbiBhY2Ugb2YgaGVhcnRzIGFuZCBhIHR3byBvZiBkaWFtb25kcyBlbmRlZCB1cCBiZWluZyBzdHJvbmdlciB0aGFuIHRoYXQgb2YgT3R0LCB3aG8gd2VudCBhbGwgaW4gd2l0aCBhbiBhY2Ugb2YgZGlhbW9uZHMgYW5kIGFuIGVpZ2h0IG9mIGRpYW1vbmRzLiBUaGUgY29tbXVuaXR5IGNhcmRzIHdlcmUgYSBqYWNrIG9mIHNwYWRlcywgYSBzaXggb2Ygc3BhZGVzLCBhIGZpdmUgb2YgaGVhcnRzLCBhIHNldmVuIG9mIGhlYXJ0cyBhbmQgYSB0d28gb2YgaGVhcnRzLiBJdCB3YXMgdGhlIGxhc3QgY2FyZCB0aGF0IHByb21wdGVkIEJsdW1zdGVpbiBzdXBwb3J0ZXJzIHRvIGVydXB0Li4gCkkgdGhpbmsgdGhlIHByb2JsZW0gaGVyZSBpcyB0aGF0IHdlIGtub3cgY29uY2x1c2l2ZWx5IGluIHRoZSB3b3JsZCBvZiBvYmVzaXR5IG1lZGljaW5lIGFuZCBudXRyaXRpb25hbCBzY2llbmNlLCB0aGUgY2F1c2Ugb2Ygb2Jlc2l0eSBpcyBhIGNvbXBsZXggZGlzZWFzZS4gR2VuZXRpYyBjYXVzZXMuIEJlaGF2aW9yYWwuIApUZXhhcyBwb2tlciBldmVuIGhhcyBkaWZmZXJlbnQgdmVyc2lvbnMsIGFzIHRoZXJlIGFyZSBubyBsaW1pdCwgcG90IGxpbWl0LCBhbmQgZml4ZWQgbGltaXQgdmFyaWF0aW9ucy4gVGhlc2UgYWxsIHJlZmVycmVkIHRvIHZhcmlvdXMgd2FnZXJpbmcgbGltaXRzIGR1cmluZyB0aGUgY291cnNlIG9mIGEgZ2l2ZW4gaGFuZCwgdGhlIGJhc2ljIHJ1bGVzIG9mIHRoZSBnYW1lcyB0aGVtc2VsdmVzIHJlbWFpbmVkIHVuY2hhbmdlZC4gVGhlIG5vIGxpbWl0IHZlcnNpb24gaXMgdGhlIGtpbmQgcGxheWVkIG9uIHRlbGV2aXNpb24uIApUYWtlcyBzZXZlbiB5ZWFycyB0byBjdWx0aXZhdGUgZ2VvZHVja3MgYW5kIHRoYXQgYmVlbiB0aGUgY2hhbGxlbmdlIGluIHRlcm1zIG9mIGF0dHJhY3RpbmcgaW52ZXN0bWVudCwgTXIuIEJha2VyIHNhaWQuIGEgbG9uZyB0aW1lIGJlZm9yZSBwYXlvZmYuIG9mIGludmVzdG1lbnQgaGFzIGxlZnQgdGhlIHBhcnRuZXJzIHNlbGYgZmluYW5jaW5nIEVtZXJhbGQgU2VhIEZhcm1zLiBIb3dldmVyLCBNci4gQmFrZXIgc2FpZCwgd2l0aCBpbmNyZWFzZWQgZGVtYW5kLCB0aGUgcHJpY2UgaXMgZ29pbmcgdXAuClllcyBpbiByZWFsIGxpZmUgeW91ciBwcm9mZXNzb3Igd2lsbCB0ZWxsIHlvdSBob3cgdGhleSB3YW50IHlvdSB0byBmb3JtYXQgdGhhdCBwYXBlci4gVW5saWtlIHJlYWwgbGlmZSBzb21lb25lIGlzbiBnb2luZyB0byB3ZWFyIGEgYmFkZ2Ugb24gdGhlaXIgc2hpcnQgbGV0dGluZyB5b3Uga25vdyB0aGVpciBwZXJzb25hbCBiZWxpZWZzLgpCdXQgc29tZXdoZXJlIGFsb25nIHRoZSB3YXksIHRoZSB3b3JsZCBkZWNpZGVkIGl0IG5vIGxvbmdlciBuZWVkZWQgbWVuLiAKVGhlIGZlc3RpdmFsIHZlbnVlIHRoYXQgYmVjYW1lIGEga2lsbGluZyBncm91bmQgaGFzIG5vdCBiZWVuIHVzZWQgaW4gdGhlIHllYXIgc2luY2UgdGhlIHNob290aW5nLiBNR00gUmVzb3J0cyBJbnRlcm5hdGlvbmFsLCB0aGUgb3duZXIgb2YgdGhlIHByb3BlcnR5IGFuZCBNYW5kYWxheSBCYXkgaG90ZWwsIGhhcyBub3Qgc2FpZCBpZiBvciB3aGVuIGl0IHdpbGwgcmVvcGVuLgpTbyBJIHRoaW5rIHdlIHdpbGwgcGFzcyEgU3RpbGwgZnVuIHRvIHdhdGNoIHRob3VnaC4uIApCdXQgdGhlIGNoYW9zIHRoYXQgSSBiZWxpZXZlIGlzIGFib3V0IHRvIGhhcHBlbiBpbiBXYXNoaW5ndG9uIGNvdWxkIGJlIHRoZSBiaWdnZXN0IHRoaW5nIHRoYXQgYmxpbmRzaWRlcyBXYWxsIFN0cmVldC4gSSd2ZSBhbHJlYWR5IHByZWRpY3RlZCB3aGF0IEkgdGhpbmsgd2lsbCBoYXBwZW4sIGJ1dCBJJ2xsIHNheSBpdCBhZ2FpbiBiZWNhdXNlIGl0IHNlZW1zIHRvIGJlIHBhbm5pbmcgb3V0LgpIZSBsYXRlciB0b2xkIG1lIHRoYXQgaGUgd2FzIHdyb25nLCBoaXMgZXggaGFkIHRvbGQgaGltIHRoYXQuIApGYWNpbmcgY2hhbmdlIGNhbiBiZSBhIGZyaWdodGVuaW5nIGV4cGVyaWVuY2UsIGFuZCBodW1hbnMgc2VlbSB0byBwcmVmZXIgaW1tZWRpYXRlIHJlbGF0aXZlIGNvbWZvcnQgb3ZlciBoYXJkIGZvdWdodCBoYXBwaW5lc3MuIApBY2NvcmRpbmcgdG8gcHJvc2VjdXRvcnMsIHRoZSBjb21wYW5pZXMgdHJpY2tlZCBiYW5rcyBpbnRvIHByb2Nlc3NpbmcgYmlsbGlvbnMgb2YgZG9sbGFycyBvZiBpbGxlZ2FsIGludGVybmV0IGdhbWJsaW5nIHByb2NlZWRzIHRocm91Z2ggc2hlbGwgY29tcGFuaWVzIHRoYXQgYXBwZWFyZWQgbGVnaXRpbWF0ZS4KSXQncyB0aGUgMjFzdCBjZW50dXJ5LiAKVGhlIE90aXMgRWxldmF0b3IgcGFtcGhsZXQgKDE5NDcpIGlzIGVmZmljaWVudGx5IGRlc2lnbmVkIGJlbmVhdGggaXRzIHNlbWkgYml6YXJyZSBjb3ZlciwgZmxvYXRpbmcgaW4gb2RkIHR5cGVmYWNlLCBjb21wbGV0ZWx5IGxpZmVsZXNzIGRlc2lnbiwgbWFubmVxdWluIGh1bWFucywgYW5kIHdhc2hlZCBvdXQgcGFzdGVscy4gVGhlIENoaW5lc2UgY29sb3JpbmcgYm9vayBzdHlsZSBvZiBpdHMgY292ZXJzIGhpZGVzIGEgc3VwZXJpb3IgY29udGVudCwgY29tcGxldGUgd2l0aCBzY2hlbWF0aWNzIGFuZCBiZWF1dGlmdWxseSBzdXBwbGllZCB3aXRoIHBob3RvcyBvZiBlbGV2YXRvcnMgbG9uZyBzaW5jZSByZW1vdmVkIGZyb20gc2lnaHQgYW5kIG1lbW9yeS4gSXQgaXMgc3RpbGwgYSBjb29sIGNvdmVyLCBub25ldGhlbGVzcy4uIApTYW1zdW5nIHRvIG15IGN1c3RvbSB0aGVpciBzbyBwcmVtaWVyIHRoZW1lcyBidWdzIGZvcnVtIGFuZHJvaWQgdXNlcnMgcGxlbnR5IGZvcnVtIGhvdyB0byBuZXdzIGZhciBmZXcgaG93IHRvcyBzYW1zdW5nIHdpdGggc2Ftc3VuZyB0byBzYW1zdW5nIGtub3cgcm9tcyBxdWl0ZSB5b3UgdGhlc2UgdGFrZSBhbmRyb2lkIHNpdGUgbXkgYmVlbiBoYXZlIHRpcHMgaG93IGdhbGF4eSBmb3Igb24gZml4ZXMgZGlmZmVyZW50IGlzIHNjcmVlbnNob3QgdGFrZSBzY3JlZW5zaG90IGhlcmUgYW5kcm9pZCB0aGUgaG93IGFuZCBjdXN0b20gb24gZm9ybWF0IGFuZCBzYW1zdW5nIGZpeGVzIGFuZCBnYWxheHkgZ2FsYXh5IHZhcmllZCBwaG9uZSB0cmlja3MgcmVwb3J0ZWQgYW5kIGJ1Z3MgZ2FsYXh5IG11c3QuIApJbiBvdXIgY291bnRyeSB0b2RheSwgbWVyZWx5IGV4cHJlc3NpbmcgYW4gdW5mbGF0dGVyaW5nIG9waW5pb24gYWJvdXQgYW4gb3V0Z29pbmcgYXJteSBjaGllZiBpcyBsYWJlbGxlZCB0cmVhc29ub3VzLiBJbiB0aGlzIGxhbmQgb2Ygb3VycywgdG8gY2FsbCBmb3IgdGhlIGFjY291bnRhYmlsaXR5IG9mIGEgdHdvIHRpbWUgY29uc3RpdHV0aW9uIGJyZWFrZXIgaXMgY29uc2lkZXJlZCBzZWRpdGlvdXMuIFdoeSBkaWQgc2xpbWUgc2xpbmdpbmcgb2YgdGhpcyBzY2FsZSBldm9rZSBubyByZXNwb25zZT8gQ291bGQgdGhpcyB2aWRlbyBoYXZlIGNvbWUgb3V0IHdpdGhvdXQgYSBmdWxsIGNhYmFsIGRlc2lnbmluZywgcGxhbm5pbmcgYW5kIGV4ZWN1dGluZyBpdD8KcHJvbmdlZCBhcHByb2FjaCB0byByZWNsYWltaW5nIGhlYWx0aApEaWZmZXJlbnQgT3JkZXIsIEZhbWlseSwgR2VudXMgYW5kIHNwZWNpZXMgZnJvbSBob3JzZXMuIApJdCBub3QgY3luaWNhbCwgaXQgY29tbW9uIHNlbnNlIGFuZCBjb3ZlcmluZyB5b3VyIG93biBhc3MgaWYgdGhpbmdzIGdvIHNpZGV3YXlzIGRvd24gYSBjbGlmZi4gSXQgQkVDQVVTRSBJIG5ldmVyIG1ldCB0aGVtIHRoYXQgSSByYXRoZXIgYmUgY2F1dGlvdXMgYW5kIHdyb25nLCB0aGFuIHBsYXkgc2hpdCBnYW1lcyBhbmQgZ2V0IHNoaXQgcHJpY2VzIGJ5IHRlbGxpbmcgT1AgIm9oIHlhIGdvIGFoZWFkISBJdCByYXRoZXIgcmVhbGx5LCByZWFsbHkgbmFpdmUgb2YgeW91IHRvIHRlbGwgT1Agb3RoZXJ3aXNlLiBPUCBwb2ludCBvZiB2aWV3IGFuZCB3b3JkcyBhcmUgYWxsIHdlIGhhdmUgZ29pbmcgZm9yIHRoZSBzaXR1YXRpb24sIGFuZCB5b3UgZGFtbiByaWdodCB3ZSBhbGwgZ29pbmcgdG8gZ2l2ZSBvcGluaW9ucyBiYXNlZCBvbmx5IG9uIHRoZSBpbmZvcm1hdGlvbiB3ZSBoYXZlLiAKU28gd2hlcmUgZG8gd2Ugc2V0IHRoZSBtYXJrPyBXZSBjb3VsZCBkbyAxOTUsIHdlIGNvdWxkIGRvIDIwNS4gRnJvbSBhbiBvbiB0cmFjayBwb2ludCBvZiB2aWV3LCB0aGVyZSByZWFsbHkgbm90IGEgbG90IGluIGl0LgpIZSBjb3VsZCBiZSBhIHN0cm9uZyBzdXBwb3J0ZXIgb2YgcHJpdmFjeSBpbiBjYXNlcyBpbnZvbHZpbmcgcG9saWNlIHNlYXJjaGVzIGFuZCBkZWZlbmRhbnRzIHJpZ2h0cy4gSW5kZWVkLCBTY2FsaWEgb2Z0ZW4gc2FpZCBoZSBzaG91bGQgYmUgdGhlICJwb3N0ZXIgY2hpbGQiIGZvciB0aGUgY3JpbWluYWwgZGVmZW5zZSBiYXIuClRvd2FyZCB0aGF0IGVuZCBvZiB0aGlzIGNsaXAgeW91IGhlYXIgbWljcm9waG9uZXMgcGljayB1cCBNaWxlcyB0ZWxsaW5nIEN5bm4gc29tZXRoaW5nIGFib3V0IHRoZSBicmFjZWxldCB3aW5uZXIgc2xvdyByb2xsaW5nIG9uIHRoYXQgbGFzdCBoYW5kLCBiYXNpY2FsbHkgdGhlIHBva2VyIGVxdWl2YWxlbnQgb2YgYSBiYXNlYmFsbCBiYXQgZmxpcC4KVGhpcyAzMiBiaXQgYWNjZXNzIGNhcmQgd2FzIGZpcnN0IGludHJvZHVjZWQgdG8gdGhlIG1hcmtldCBpbiAxOTk5LiBUaGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIG9sZCBIIGFjY2VzcyBjYXJkIGFuZCB0aGUgbmV3IEh1IGNhcmQgaXMgdGhhdCBIdSBjYXJkIGNvbnRhaW5zIGR1YWwgQVNJQ3MgYW5kIGhhcyB0aGUgZHluYW1pYyBlbmNvZGluZyBjYXBhYmlsaXR5Li4gCkkganVzdCBnb25uYSBhZGQgb24gdG8gd2hhdCB0aGUgb3RoZXJzIGhhdmUgYWxyZWFkeSBzYWlkLiBJZiBoZSBpbnNpc3RzIGV2ZW0gYWZ0ZXIgdGVsbGluZyBoaW0gdGhhdCBoZSBtdXN0IGJlIG1vcmUgZGVkaWNhdGVkIGluIGFsbCBhc3BlY3RzIG9mIEpyb3RjLCBoYXZlIGhpbSBjb21wZXRlIDEgb24gMSBhZ2FpbnN0IHRoZSBkcmlsbCB0ZWFtIGluIHNwaW5uaW5nIGFuZCBtYXJjaGluZy4gSWYgaGUgaXMgYmV0dGVyIHRoYW4gYXQgbGVhc3QgMS8zIG9mIHRoZSB0ZWFtLCBsZXQgaGltIGpvaW4uIApPbmx5IG9uZSBwbGF5ZXIsIEhvcmZvcmQsIGhhZCB1bmFuaW1vdXMgVW5vIGFwcHJvdmFsIGZyb20gdGhvc2UgcXVlc3Rpb25lZC4gQ2FsbGluZyBoaW1zZWxmICJhIHF1aWNrIGRyYXcsIiBoZSBzYWlkIGhlIHVzZWQgdG8gcGxheSB3aXRoIHRoZSBIYXdrcyBhbmQgbGVhcm5lZCBmcm9tIGV4cGVyaWVuY2Ugb3ZlciB0aGUgeWVhcnMuCldlIHNhaWQsIG90aGVyIGFsbGlhbmNlczsgc2VwYXJhdGUgZnJvbSBlYWNoIG90aGVyIGFuZCBrZWVwIG91ciByZWxhdGlvbnNoaXAgcXVpZXQuIApUaGUgbWFjaGluZXMgeW91IG1lbnRpb24gYW5kIHRoZSBzaW1pbGFyIFRFTlMgbWFjaGluZXMgY2FuIGJlIHVzZWZ1bCBpbiBzb21lIHdheXMuIApXb3JrZWQgd2VsbC4gClNvbWVib2R5IGJyaW5nIHNvbWUgbWF5by4gVGhhdCdzIGEgbG90IG9mIGNvbGUgc2xhdy4uIApBbnl3YXksIHdoZW4gSSBwb3N0ZWQgdGhpcyBpbiByL2Nvb2tpbmcsIEkgd2FzIHRvbGQgYnkgc29tZSBmb2xrcyB0aGF0IHN1Z2FyIHNrdWxscyBhcmVuIHJlYWxseSBtZWFudCB0byBiZSBlYXRlbiwgYnV0IGFyZSBtb3JlIG9ybmFtZW50YWwuIFNvIG1heWJlIHRoZSB3YXkgSSBtYWtlIHRoZW0gZG9lc24gcmVhbGx5IG1hdHRlcj8gQnV0IGlmIGl0IGRvZXMsIGFuZCBpZiB0aGV5IGFyZSBtZWFudCB0byBiZSBlYXRlbiwgSSB3b3VsZCBsb3ZlIGFueSBhZHZpY2Ugb24gd2hlcmUgdG8gZmluZCB0aGUgcmlnaHQga2luZCBvZiBtb2xkLCBhbmQgd2hhdCByZWNpcGUgbWlnaHQgYmUgYmVzdC4uIApGb3IgbXkgbmVlZHMgaW4gRWRtb250b24sIEZpZG8gd29ya3MganVzdCBmaW5lLi4gCkluIGVuZ2xpc2gsIGdlbmRlciBhbmQgc2V4ICh1c2VkIGluIHRoZSBjb250ZXh0IG9mIHdoYXRzIGJldHdlZW4geW91ciBsZWdzKSwgYXJlIGludGVyY2hhbmdlYWJsZSwgYW5kIGl2ZSBubyBkb3VidCB0aGF0IGRpc3Bob3JpYSBleGlzdHMsIGFuZCBpIGJlbGlldmUgaXQgaXMgaW4gZmFjdCBhIG1lbnRhbCBpbGxuZXNzIChhbmQgdGhlcmUgaXMgcmVzZWFyY2ggdG8gc3VnZ2VzdCBpdCBpcyBjbG9zZWx5IHJlbGF0ZWQgdG8gZGVwcmVzc2lvbiBhbmQgaXMgdHJlYXRhYmxlKSwgYnV0IGp1c3QgbGlrZSBldmVyeSBvdGhlciBtZW50YWwgaWxsbmVzcywgb25jZSBpdCBzdGFydHMgZWZmZWN0aW5nIGhvdyBvdGhlcnMgbGl2ZSB0aGVpciBsaXZlcyB5b3UgbmVlZCBoZWxwIHRvIGdvIGJhY2sgdG8gYmVpbmcgbm9ybWFsOyBidXQgd2l0aCB0cmFucyBwZW9wbGUgZm9yIHNvbWUgcmVhc29uIHdlIGZlZWQgaW50byB3aGF0IHdlIGtub3cgaXMgYSBtZW50YWwgaWxsbmVzcywgYW5kIGdpdmUgaXQgZXhhY3RseSB3aGF0IGl0IHdhbnRzLiAKU3Vic3RpdHV0ZSB0ZWFjaGVycyB3ZXJlIHVzdWFsbHkgdGhlIGNhdXNlIG9mIGNvbmNlcm5zLiAKU2VydW0gMjUoT0gpRCBhbmQgUFRIIHdlcmUgbWVhc3VyZWQgYXQgdGhlIDEyIG1vbnRoIGZvbGxvdyB1cCB2aXNpdCAoMTk5OCAxOTk5KS4gTW9iaWxpdHkgbGltaXRhdGlvbiBhbmQgZGlzYWJpbGl0eSAoYW55L3NldmVyZSBkaWZmaWN1bHR5IHdhbGtpbmcgMS80IG1pbGUgb3IgY2xpbWJpbmcgMTAgc3RlcHMpIHdhcyBhc3Nlc3NlZCBzZW1pYW5udWFsbHkgb3ZlciA2IHllYXJzIG9mIGZvbGxvdyB1cC4gVGhlIGFzc29jaWF0aW9uIGJldHdlZW4gMjUoT0gpRCwgUFRILCBhbmQgbW9iaWxpdHkgbGltaXRhdGlvbiBhbmQgZGlzYWJpbGl0eSB3YXMgZXhhbWluZWQgdXNpbmcgQ294IHByb3BvcnRpb25hbCBoYXphcmQgcmVncmVzc2lvbiBtb2RlbHMgYWRqdXN0ZWQgZm9yIGRlbW9ncmFwaGljcywgc2Vhc29uLCBiZWhhdmlvcmFsIGNoYXJhY3RlcmlzdGljcywgYW5kIGNocm9uaWMgY29uZGl0aW9ucy4KVGhlcmUgaXMgYSBwcmVzZW50YXRpb24gb24gdGhlIGZpbmFuY2lhbCBhaWQgcmVxdWlyZW1lbnRzLCB3aGljaCwgZnJvbSB3aGF0IEkgaGF2ZSBzZWVuLCBhcmUgaWRlbnRpY2FsLiBBbmQgdGhleSBhbGwgc2F5IHlvdSBob3cgdGhleSBhcmUgbWVhbmluZyB5b3VyIGZpbmFuY2lhbCBhaWQgYXBwbGljYXRpb24gaXMgdmlld2VkIHNlcGFyYXRsZXkgZnJvbSB5b3VyIHNjaG9vbCBhcHBsaWNhdGlvbi4uIApNaW5kIHlvdSwgaXQgaXMgbm90IHJlY29tbWVuZGVkIHRvIGRvIHRoaXMgYWxsIHRoZSB0aW1lLCBhcyBwZW9wbGUgd2lsbCBldmVudHVhbGx5IGNhdGNoIG9uLiAKVGhlIGV4cGVydHMgYXJlIGFncmVlZCB0aGF0IEF1c3RyYWxpYW5zIGxvdmUgYSBwdW50LCBvdmVyIDgwIHBlciBjZW50IG9mIHVzIHdpbGwgZ2FtYmxlIGF0IG9uZSBzdGFnZSBvciBhbm90aGVyIGFuZCB5ZXQgZm9yIGEgc21hbGwgZnJhY3Rpb24gb2YgdXMsIGdhbWJsaW5nIGNhbiBoYXZlIGEgZGV2YXN0YXRpbmcgaW1wYWN0LiAKQSBtYWpvciBwdWJsaWMgaGVhbHRoIGlzc3VlLCBkZXByZXNzaW9uIGlzIGVzdGltYXRlZCB0byBiZWNvbWUgb25lIG9mIHRoZSB0b3AgdGhyZWUgY29udHJpYnV0b3JzIHRvIHRoZSBnbG9iYWwgYnVyZGVuIG9mIGRpc2Vhc2VzIHdpdGhpbiBhIGZldyB5ZWFycy4gCkVESVQgMjogUGxlYXNlIGxvb2sgYmVsb3cgZm9yIG90aGVyIGNhbGN1bGF0aW9ucyBiYXNlZCBvbiBkaWZmZXJlbnQgY29lZmZpY2llbnRzIG9mIGFic29ycHRpb24uIEl0IG1ha2VzIGEgaHVnZSBkaWZmZXJlbmNlLiBidXQgb25seSBpbiB0aGUgc2Vuc2UgdGhhdCB0aGUgYW5zd2VycyByYW5nZSBmcm9tICJtb3JlIHBvd2VyIHRoYW4gdGhlIHVuaXZlcnNlIGlzIGVxdWl2YWxlbnQgdG8iIHRvICJvbmx5IGEgZmV3IGh1bmRyZWQgdGltZXMgbW9yZSB0aGFuIHRoZSBsdW1pbm91cyBpbnRlbnNpdHkgb2YgdGhlIGVudGlyZSBnYWxheHkiLiBTbyBpbiBhIHByYWN0aWNhbCBzZW5zZSB0aGUgYW5zd2VycyBhcmUgdGhlIHNhbWUsIHRob3VnaCB0aGV5IGFyZSB3aWxkbHkgZGlmZmVyZW50LgpBIHRydWUgZ2VudGxlbWFuLCBNci4gR3VpdGUgbG92ZWQgcmV0aXJlbWVudCwgdGhlIER1a2UgQmx1ZSBEZXZpbHMsIHRoZSBZYW5rZWVzLCBoZWxwaW5nIHdpdGggdGhlIEh1Y2sgRmlubiBUZW5uaXMgVG91cm5hbWVudCBhbmQgcGxheWluZyB3aXRoIGhpcyBtZW4ncyBtb250aGx5IHBva2VyIGdyb3VwLiAKQnkgdGhlIGRpc2Nlcm5tZW50IG9mIHRoZSBwcm9waGV0aWMgZHJlYW1zIGFuZCB2aXNpb25zLiAKRm9yIG15IHNpc3RlciB3ZWRkaW5nLCB3ZSB3ZXJlIGxpbmVkIHVwIGJ5IGhlaWdodCAoYW5kIGF0IDYgSSB3YXMgZmlyc3QgYnJpZGVzbWFpZCBiZWhpbmQgbWFpZCBvZiBob25vcikuIEkgcmVhbGx5IGRpZG4gY2FyZSwgYW5kIHdvdWxkIGhhdmUgYmVlbiBoYXBwaWVyIGp1c3QgYmVpbmcgYSB3ZWRkaW5nIGd1ZXN0LCB3aGljaCBpcyB3aGF0IGxlYWQgbWUgYW5kIG15IERIIHRvIGhhdmUgbm8gd2VkZGluZyBwYXJ0eSBhdCBhbGwgZm9yIG91ciB3ZWRkaW5nLiAKIkR1cmluZyB0aGlzIFJlc3BvbnNpYmxlIEdhbWJsaW5nIEF3YXJlbmVzcyBXZWVrLCB3ZSBhcmUgdXJnaW5nIGFsbCBnYW1ibGVycyB0byB0YWtlIHRpbWUgb3V0LCB0aGluayBhYm91dCB5b3VyIGdhbWJsaW5nIGR1cmluZyB0aGUgd2VlaywgcGVyaGFwcyB0YWtlIGEgYnJlYWsgYW5kIHN0YXkgaW4gY29udHJvbCwiIE1yIEhvd2FyZCBzYWlkLiAKU29sYW5nZSBtYW4gbmljaHQgaW50ZXJuYXRpb25hbCBnZWdlbiBTdGV1ZXJvYXNlbiB2b3JnZWh0IG9kZXIgdm9yZ2VoZW4ga2Fubiwgd3JlIGRhcyBtZWluZXIgTWVpbnVuZyBuYWNoIGVpbiBndXRlciBlcnN0ZXIgU2Nocml0dC4gSWNoIGJlemllaCBtaWNoIGRhYmVpIGV4cGxpeml0IGF1ZiBGaXJtZW4uIApJIHBlcnNvbmFsbHkgdGhpbmsgaXQgaXMgdmVyeSBkZXBlbmRlbnQgb24gdGhlIHBlcnNvbiBhbmQgaG93IHRoZXkgd2lsbCBlbmQgdXAgYWRqdXN0aW5nIHRoYXQgbGFuZ3VhZ2UgaW4gdGhlaXIgb3duIGhlYWRzLiBJIGJlY29tZSBzbyBwcm9maWNpZW50IGluIG15IHNlY29uZCBsYW5ndWFnZSB0aGF0IG1vc3QgbWlzdGFrZSBtZSBmb3IgYSBuYXRpdmUgYW5kIEkgY2FuIHdyaXRlIHVwIGxvbmcgbG9uZyBlc3NheXMgYW5kIGV2ZW4gd3JpdGUgc3RvcmllcyBiZXR0ZXIgaW4gbXkgc2Vjb25kIGxhbmd1YWdlIHRoYXQgSSBjYW4gZXZlbiBkbyB3aXRoIG15IGZpcnN0IGxhbmd1YWdlLiAKJ0Jsb29kIG1vb24nIHdpbGwgYmUgYSBzaWdodCB0byBiZWhvbGQKU3Bva2VuIHRvIGhpcyBjb3JuZXIgbWFuIGtub3cgaXQgYnJva2VuIFtyaWdodCBhbmtsZV0uIEkgaGVhcmQgaXQgcG9wLiBoZWFyZCBteSBhbmtsZSBzbmFwIGFuZCBteSBrbmVlIGFsc28gZmVsdCBmdW5ueSBhbmQgSSBjb3VsZG4gcHV0IHByZXNzdXJlIG9uIGl0LgpHZXJtYW5pdW0gc3RhcnRzIGdvaW5nIGludG8gcnVuYXdheSBjb25kdWN0aW9uIGF0IHRvbyBsb3cgYSB0ZW1wZXJhdHVyZSBhbmQgaXRzIG94aWRlcyBhcmUgY29uZHVjdGl2ZS4gCk5vbmUgb2YgbXkgbWF0ZXMgY2FuIGhhbmRsZSBob3cgbGF0ZSBJIHN0YXkgb3V0OyBJIGFsd2F5cyB0aGUgbGFzdCBtYW4gc3RhbmRpbmcuLiAKUmV6aWRvciB3aXJkIGVpbiBQYXJrIElubiAgdW5kIGVpbiBSYWRpc3NvbiBTQVMgSG90ZWwsIGRpZSBHb2xkZW4gVHVsaXAgSG9zcGl0YWxpdHkgR3JvdXAgZWluIEdvbGRlbiBUdWxpcCB1bmQgZWluIFR1bGlwIElubiBpbiBSb3NhIENodXRvciBncm5kZW4uIEFyY29yIHdpbGwgbWl0IHp3ZWkgTWVyY3VyZSBIb3RlbHMgaW4gZGVyIFNraSBSZWdpb24gdmVydHJldGVuIHNlaW4sIGhhdHRlIGltIEp1bmkgMjAxMCBhbGxlcmRpbmdzIG5vY2gga2VpbmVuIFZlcnRyYWcgdW50ZXJzY2hyaWViZW4uIApPZiBmZWFyLCBvZiBwYW5pYy4gCkFzIG90aGVycyBoYXZlIHBvaW50ZWQgb3V0LCB5b3UgcHJvYmFibHkgd2FudCB0byByZW1haW4gcGFzc2l2ZSBvbiB0aGUgdGFibGUgYW5kIGp1c3QgbWFrZSByZXF1ZXN0cyBvZiB0aGUgdGhlcmFwaXN0IHRvIGZpeCB0aGUgcHJvYmxlbS4gaW5zdGVhZCBvZiB1c2luZyB5b3VyIGhhbmRzIHRvIGRlYWwgd2l0aCBpdCB5b3Vyc2VsZi4gU28geW91IGF2b2lkIGNvbWluZyBhY3Jvc3MgYXMgYW4gYWdncmVzc29yLgpUaGlzIHdhcyBub3QgVHJ1bXBzIGlkZWEgYW5kIGhlIHJlbHVjdGFudGx5IHNpZ25lZCB0aGUgc3BlbmRpbmcgYmlsbC4gCldoYXQgdGhleSBjb3VsZCBkbyBpcywgc2V0IGEgbWluaW11bSBwcmljZSBmb3IgZWFjaCBjYXJkIGFzIGlzIHJpZ2h0IG5vdy4gVGhleSBndWFyYW50ZWUgdGhhdCB0aGV5IHdpbGwgYnV5IGNhcmRzIGZvciB0aGF0IHByaXplIGZvciBvbmUgd2Vlay4gVGhlbiB0aGV5IHBhdGNoIHN0dWZmLiBOb3cgbWFya2V0IHBsYXllcnMgY2FuIGNhc2ggb3V0IGJ5IHNlbGxpbmcgdGhlaXIgYXhlcyBhbmQgdGhlIG5ldyBtZXRhIHN0dWZmIHdpbGwgc3RpbGwgcmlzZSBpbiBwcmljZS4gVGhleSB3b3VsZCBsb3NlIHNvbWUgbW9uZXksIGJ1dCBwZW9wbGUgd291bGQgc3RheSBoYXBweSBhbmQgdGhleSBzdGlsbCBwcm9maXQgb2YgdGhlIHRheGVzLgpUaGVyZSBpcyBubyBiZW5lZml0IHRvIGl0IGFnYWluc3QgdGhlIEFUIGxhdW5jaGVycyBzbyBtb3ZpbmcgaXQgd291bGQgYmFzaWNhbGx5IGJlIHJlbW92aW5nIGl0IGFsbCB0b2dldGhlci4uIApJIGRvIGFncmVlIHdpdGggeW91IGFib3V0IHRoZW0gYWxsIGNvbWluZyBvdXQgaW4gYWJvdXQgdGhlIHNhbWUgeWVhci4gClRoZXkgaGFkIGEgcG9pbnQgc3lzdGVtIHdoZXJlIGlmIHlvdSBwb3N0IHN0dWZmIHlvdSBjYW4gZ2FpbiBtb3JlIGFjY2VzcyB0aGUgc2l0ZSBhbmQgaXRzIGZlYXR1cmVzLiAKTWVkIG1pbmRyZSBkZSBlciBza2VpdmUsIGRhLi4gCk92ZXJ2aWV3IGZvciByb2NoZXN0ZXJqb25lcwpJIHdhcyBtYWRlIGZ1biBvZiByZWxlbnRsZXNzbHkuIApJIGhvcGUgbW9yZSBwZW9wbGUgdGFrZSB0aGUgdGltZSB0byBjdWx0aXZhdGUgdGhlaXIgc29jaWFsIHRpZXMuIE15IGJlc3QgZnJpZW5kIChub3QgYWRvcHRpb24gcmVsYXRlZCkgaGFkIHRlcnJpYmxlIGNoaWxkaG9vZCBhYnVzZSwgYW5kIHNoZSBpcyBlc3RyYW5nZWQgZnJvbSBoZXIgYmlvcy4gClRoZSBuZXh0IHN0ZXAgaXMgdG8gbGVhcm4gYXMgbXVjaCBhcyB5b3UgY2FuIHJlZ2FyZGluZyB0aGUgY29tcG9zaXRpb24gb2YgdGhlIHBva2VyIGNoaXBzIHRoYXQgeW91IGNhbiBwdXJjaGFzZS4gTW9zdCBwb2tlciBjaGlwcyBhcmUgY29tcG9zZWQgb2YgcGxhc3RpYywgY2xheSwgY2VyYW1pY3MsIGFuZCB3b29kLiAKSG93ZXZlciwgbW9yZSBvZnRlbiB0aGFuIG5vdCwgdGhlIGNvbWJpbmF0aW9uIG9mIGJvdGggdGVjaG5pcXVlcyB3b3JrcyBiZXR0ZXIgZm9yIHJlbGlldmluZyB5b3Vyc2VsZiBmcm9tIHRoZSBwYWluIGNhdXNlZCBieSBwbGFudGFyIGZhc2NpaXRpcy4uIApXZSBhcmUgbG9va2luZyBmb3IgYSBoaWdoIHBlcmZvcm1pbmcsIGhpZ2ggZW5lcmd5IGFuZCBjdXN0b21lciBmb2N1c2VkIGV4ZWN1dGl2ZSB3aG8gaXMgcGFzc2lvbmF0ZSBhYm91dCBncm93aW5nIGJ1c2luZXNzZXMsIGFuZCBkZWxpdmVyaW5nIHJlc3VsdHMgaW4gYSBxdWlja2x5IGV2b2x2aW5nIHRlY2hub2xvZ3kgZHJpdmVuIGluZHVzdHJ5LiAKRmF0IGJlaW5nIGJhZCB3YXMgdG91dGVkIGJ5IHRoZSBzdWdhciBpbmR1c3RyeSBzaW5jZSBsb3cgZmF0IG1lYW5zIHN1Z2FyIGhhcyB0byBnbyBpbnRvIHRoZSBwcm9kdWN0IGZvciBpdCB0byBzdGlsbCB0YXN0ZSBnb29kLiBUaGF0IGRvZXMgbm90IG1lYW4gc3VnYXIgaXMgYmFkLgpCdXQgbm93IHRoYXQgdGhlIGhpcHBpZXMgYXJlIG9sZCBhbmQgaGF2ZSB0aGUgbWVhbnMgdG8gZmlnaHQgaW4gY291cnQsIHRoZSBvbmx5IG9wdGlvbiBpcyB0byBhcnJlc3QgbW9yZSBCbGFja3Mgb3IgQnJvd25zIG9yIEhpc3BhbmljcyBvciB3aGF0ZXZlci4gClAgZ290IEJ1ZHdlaXNlcidzIHNpZ24gb24gdG8gdXNlIGEgQ2x5ZGVzZGFsZSwgZm9yIGluc3RhbmNlIGFuZCB3aXRob3V0IGJyZWFraW5nIHRoZSBORkwgcnVsZSB0aGF0IG5vIEJpZyBHYW1lIGFkIGNhbiBjb250YWluIG1vcmUgdGhhbiBvbmUgYnJhbmQuIFRoZSBjYW1wYWlnbiwgd2hpY2ggd2VudCB2aXJhbCwgdWx0aW1hdGVseSBuYWJiZWQgdGhlIENhbm5lcyBMaW9ucyBGaWxtIEdyYW5kIFByaXguLiAKRGVjaWRlIG9uIHRoZSB0eXBlIG9mIGdhbWUgeW91IHdpbGwgcGxheSBhdCB5b3VyIGxhZGllcyBwb2tlciBuaWdodC4gVGV4YXMgSG9sZCAnRW0gaXMgcG9wdWxhciBidXQgc28gYXJlIE9tYWhhLCBSYXp6LCA3IGNhcmQgc3R1ZCwgYW5kIG1hbnkgb3RoZXJzLiAKQnkgeW91ciBsb2dpYywgdGhpbmdzIGNhbiBvbmx5IGJlIGRlc2NyaWJlZCBhcyBzZXhpc3QgaWYgdGhlcmUgaXMgc29tZSBvdmVydCB2ZXJiYWxpemluZyB0aGF0IHRoZSBjYXVzZSBvZiB0aGUgYmVoYXZpb3IgaXMgc2V4aXN0LiAKSXQgYWxzbyBtYWtlcyBpdCB1bmlxdWUgYW5kIHN0YW5kIG91dCBmcm9tIGFueSBvdGhlciAyMDE4IDIwMTkgZ2FtZS4gCllvdSdkIGhhdmUgdG8gYmUgZGVsdXNpb25hbCB0byBhbnRpY2lwYXRlIHRoYXQgc29tZXRoaW5nIGxpa2UgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiB5b3UgZW1iYXJrIG9uIGEgcHJvamVjdCBsaWtlIHRoaXMuIApDQiBlbmRlZCB1cCB3aXRoIGEgbmljZSBDYXJoYXJ0dCBiZWFuaWUgYnV0IGtlZXBzIGxldHRpbmcgZXZlcnlvbmUga25vdyAiam9raW5nbHkiIHRoYXQgc2hlIHJlYWxseSB3YW50ZWQgdGhhdCBTdGFyYnVja3MgZ2lmdCBjYXJkIGJlY2F1c2UgQWRhbSBkb2Vzbid0IGV2ZW4gZHJpbmsgY29mZmVlLiBXaXRoIHRlbiBwZW9wbGUgZG9pbmcgYSB3aGl0ZSBlbGVwaGFudCBpdCBoYWQgYmVlbiBhbG1vc3QgNDUgbWludXRlcyB3aGVuIHRoZSBmb29kIGZpbmFsbHkgY29tZXMuIFdlIHdyYXAgdXAgd2hpdGUgZWxlcGhhbnQgYW5kIHN0YXJ0IHRvIGVhdC4gCkhlbGxvaXRzbWVfZmxvICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkF1ZiB1bnNlcmVyIFdlYnNlaXRlIGtvbW1lbiBmb2xnZW5kZSAgenVtIEVpbnNhdHo6ClRoZSBBTVRBIGNhbiBwcm92aWRlIG5vdCBvbmx5IHRoZSBlZHVjYXRpb25hbCBhbmQgY2VydGlmaWNhdGlvbiBvciBsaWNlbnN1cmUgcmVxdWlyZW1lbnRzIG9mIGFsbCB0aGUgc3RhdGVzIGluIHRoZSBVUywgYnV0IGNhbiBhc3Npc3QgeW91IGluIGZpbmRpbmcgYSBwcmFjdGl0aW9uZXIgaW4geW91ciByZWdpb24gd2l0aCB0aGUgcXVhbGlmaWNhdGlvbnMgYW5kIGFkdmFuY2VkIHRyYWluaW5nIGFuZCBjZXJ0aWZpY2F0aW9ucyB0aGF0IHlvdSByZXF1aXJlLgpVbmJlbGlldmFibHksIHdoZW4gSSBtb3ZlZCB0byB0aGlzIHRvd24gb2YgMjUwLDAwMCBwZW9wbGUgYXMgYW4gZWxlbWVudGFyeSBzY2hvb2wga2lkLCBteSBwYXJlbnRzIGJvdWdodCBvdXIgaG91c2UgZnJvbSBoaXMgcGFyZW50cywgd2hvIHdlcmUgZ2V0dGluZyBkaXZvcmNlZC4gQW5kIHNvbWUgMjUgeWVhcnMgbGF0ZXIsIHBsYXlpbmcgb24gYSBiYXNrZXRiYWxsIHRlYW0gd2l0aCBhIGJ1bmNoIG9mIGd1eXMgSSBoYWQgbmV2ZXIgbWV0IGJlZm9yZSwgb25lIG9mIHRoZW0gZ3JldyB1cCBpbiB0aGUgc2FtZSBob3VzZSBhcyBtZS4uIApTbyBhZnRlciBhYm91dCB0ZW4gZGF5cywgd2UgaGFkIGZpbmFsbHkgZ290dGVuIGV2ZXJ5dGhpbmcganVzdCBob3cgd2Ugd2FudGVkIGl0LCBleGNlcHQgZm9yIHRoZSBwb2tlciB0YWJsZXMuIApOaW5hIGFuZCBKb2huIENhc3NpbHMnIFRhc3RlIHRoZSBXb3JsZCBldmVudCBpbiBWYW5jb3V2ZXIgaGFzIGdlbmVyYXRlZCBtb3JlIHRoYW4gJDEgbWlsbGlvbiBmb3IgQ2FtYm9kaWEgVE1zIEFuZ2tvciBDaGlsZHJlbiBUTXMgSG9zcGl0YWwsIHRoYW5rcyB0byB0aGUgZ2VuZXJvc2l0eSBvZiBmcmllbmRzIGFuZCBCcml0aXNoIENvbHVtYmlhbnMuClRoZSBPYWsgQmxhY2sgSmFjayBUYWJsZSBUcmF5IGhhcyB0ZW4gaW5kaXZpZHVhbCBzbG90cyB0aGF0IGhvbGQgdXAgdG8gNTAgaW5kaXZpZHVhbCBwb2tlciBjaGlwcy4gCkNvb2tlIEJlYXVtb250IFBhcnRuZXJzIGJvdWdodCB0aGUgQmxhemluZyBTdHVtcCBmcm9tIHRoZSBQZXJyeSBmYW1pbHkgYXJvdW5kIDIwMTAsIGJ1dCBoYXZlIGVudGVyZWQgaW50byBhIGxvbmcgdGVybSBsZWFzZSBkZWFsIGZvciBtb3JlIHRoYW4gMzAgeWVhcnMgd2l0aCB0aGUgbmV3IG93bmVyIHdpdGggYW5udWFsIHJlbnRhbCBjb21tZW5jaW5nIGF0ICQ0MDYsMDAwLiBDQlJFIEhvdGVsJ3NTY290dCBDYWxsb3cgc2FpZCB0aGUgd2VsbCBlc3RhYmxpc2hlZCBwdWIgd2FzIGFuIGF0dHJhY3RpdmUgcHJvcG9zaXRpb24gdG8gaW52ZXN0b3JzLiAKWW91IG5vIGRvdWJ0IGRpZCBzb21lIGNlbGVicmF0aW5nIG92ZXIgdGhlIG5leHQgZmV3IHdlZWtzIGFuZCBtb250aHMgICBob3cgZGlkIHlvdSB0cmVhdCB5b3Vyc2VsZj8gVGhlIHRpbWluZyBvZiB0aGUgd2Vla2VuZCB3YXMgcGVyZmVjdCBhcyB0aGUgU3VuZGF5IHdhcyB0aGUgU0FORkwgZ3JhbmQgZmluYWwgc28gd2UgZnJhbnRpY2FsbHkgZ290IGEgbWF0ZSB0byBvcmdhbmlzZSBhIGNvcnBvcmF0ZSBib3ggYW5kIHRvb2sgYWxsIHRoZSBib3lzIGZyb20gdGhlIGJ1Y2tzIHNob3cgYW5kIHdlIGNlbGVicmF0ZWQgcXVpdGUgaGFyZCB0aGF0IGRheS4gT3RoZXIgdGhhbiB0aGF0IGhhZCBhIHRyaXAgb3ZlcnNlYXMgYnV0IG5vdGhpbmcgZWxzZS4gClBpdGNoZXIgQSwgdGhyb3dpbmcgNTAgcGl0Y2hlcyBldmVyeSAzIGRheXMgd2lsbCBoYXZlIG1hZGUgNiBzdGFydHMgdGhyb3dpbmcgMzAwIHBpdGNoZXMuIApJbiBvdXIgU1dSIG1hc3NhZ2Ugd2UgZm9jdXMgb24gdGhlIGtpbmV0aWMgY2hhaW4gb2YgbXVzY2xlcyB1c2VkIGluIHRoZSBnb2xmIHN3aW5nIHRvIHJlbGl2ZSBhZGhlc2lvbnMsIHN0cmVzcywgc3Bhc21zIG9yIHBhaW4gdGhlcmVieSBhbGxvd2luZyBhIG1vcmUgZWZmaWNpZW50IHRyYW5zZmVyIG9mIGVuZXJneSB0aHJvdWdoIHRoZSBib2R5IHRvIHRoZSBiYWxsLiBUaGlzIHNlcXVlbmNlIG9mIHRyYW5zZmVyIG9mIGVuZXJneSBpbiB0aGUgYm9keSBkdXJpbmcgYSBnb2xmIHN3aW5nIGlzIGNhbGxlZCB0aGUgS2luZW1hdGljIFNlcXVlbmNlLiBUaGUgaW50ZW50aW9uIG9mIG91ciB3b3JrIGlzIHRvIGhlbHAgdGhlIGdvbGZlciBkZXZlbG9wIHRoZWlyIG1vc3QgZWZmaWNpZW50LCBwb3dlcmZ1bCBzd2luZyB3aXRoIGEgc21vb3RoIEtpbmVtYXRpYyBTZXF1ZW5jZS4uIApEb2VzbiBtZWFuIHNoZSBkb2VzbiBsb3ZlIG1lLiBJIGxvdmUgaGVyIGp1c3QgdGhlIHdheSBzaGUgaXMgbm93LiAKSSB0aGluayBJIGdvdCB1c2VkIHRvIHRoZSBpZGVhIHRoYXQgbXkgZmVldCB3ZXJlIG5ldmVyIGdvaW5nIHRvIGJlIGNvbWZvcnRhYmxlIG5vIG1hdHRlciB3aGF0IGFuZCBjb21iaW5lZCB0aGF0IHdpdGggcGluY2hpbmcgcGVubmllcyBhdCB0aGUgZW5kIG9mIGEgdGhydS4gCkJ5IFNha2UgVHVtaSBmb3Igc29tZSBjaGlja2VuIGFuZCBsYW1iIG92ZXIgcmljZSB3aXRoIHJlZCBhbmQgd2hpdGUgc2F1Y2UuIApUYXJ0aXNtYXlhIEF5c2UgSHVyIHRhcmloIG90b3JpdGVzaSBvbGFyYWsgYmVsaXJsZXlpcCwgInByb21pbmVudCBoaXN0b3JpYW5zIG9mIFR1cmtleSIgZGV5aXAgbGRyZW4gc2Vuc2luLiBBeXNlIEh1ciBkZWRpZ2kgc2V5IGJlbmltIGZpa3JpbWUgdXlndW4gb2xzYSBiaWxlIHppbmRpayBkZWdlcmkgb2xtYXouCklmIHlvdSBldmVyIHdhbnQgdG8gaGF2ZSBhIG1hdHVyZSwgYWR1bHQsIHNleHVhbCByZWxhdGlvbnNoaXAgd2l0aCB3b21lbiB0aGVuIHN0b3AgcHJhY3RpY2luZyBob3cgdG8gTk9UIGRvIGl0LiBXb3VsZCB5b3UgdGFrZSBrYXlha2luZyBsZXNzb25zIGFuZCB0aGVuIGhvcGUgdG8gYmUgYWJsZSB0byBmbHkgYW4gYWlycGxhbmU/IE9idmlvdXNseSBub3QuIFNvIHdoeSBhcmUgeW91IHByYWN0aWNpbmciIGhvdyB0byBiZSBub24gc2V4dWFsLCBub24gYWR1bHQsIGFuZCBub24gZnJpZW5kcyB3aXRoIHdvbWVuPy4gCkkgcmVjZW50bHkgc3RhcnRlZCBwb2tlbW9uIGxldCBnbyBpbiBqYXBhbmVzZSBhbmQgSSBjYW4gY29tcHJlaGVuZCBhbGwgb2YgdGhlIGRpYWxvZ3VlIGJ1dCB0aGUgcG9rZWRleCBhbmQgbW92ZSBlbnRyaWVzIGNhbiBhIGxpdHRsZSBiaXQgbW9yZSBkaWZmaWN1bHQuLiAKVGhlIHRydXRoIGlzIHRoZSBEZW1zIGNvdWxkIGhhdmUgdXNlZCBwb3B1bGlzbSB0byBnYWluIFNpbmdsZSBQYXllciBoZWFsdGggY2FyZSAgdGhhdCBpcywgaW5zdXJhbmNlIG91dHNpZGUgdGhlIGZvciBwcm9maXQgbWVkaWNpbmUgd2UgaGF2ZSBub3cgcGFpZCBmb3IgYnkgZXZlcnlvbmUgdGhyb3VnaCBpbmNvbWUgdGF4ZXMuIFRoaXMgaXMgc29tZXRoaW5nIHRoYXQgNjUlIG9mIEFtZXJpY2FucyBzYWlkIHRoZXkgd2FudGVkIGFzIG9mIDIwMDUuIApOb25lIG9mIHRoZSBjYW5kbGUgcmVzaWR1ZSBhY3R1YWxseSBnb2VzIGludG8gdGhlIGVhci4uIApBbmQgc3VwcG9zaW5nIHNvbWVvbmUgZG9lc250IG1lIEkgYWRvcmUgYmVhdXR5IGFzIHdhcyBjdXN0b21hcnkuIFRoZSBmcmlnaHRlbmVkIGJveSB3YWxrZWQgdGhlIGV4Y2hhbmdlIG9mIHNvZGl1bSBrbm93IGlzIHRoYXQgTW9uc3RlciBnYWxheHkgaGFjayBjaGFybGVzLiBNb25zdGVyIC4KSWYgeW91IGFyZW4ndCBhd2FyZSBvZiB0aGVzZSBmdW5kYW1lbnRhbCBydWxlcyB5b3UgbWlnaHQgZW5kIHVwIGdhbWJsaW5nIG1vcmUgdGhhbiB5b3UgY2FuIGFmZm9yZCB0byBsb3NlLi4gCkpNYWhzICAyNjkgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkl0IG9uIHRvcCBvZiBteSBwZWx2aXMsIGp1c3Qgd2hlcmUgbXkgZXJlY3RvciBhdHRhY2hlcyB0byBteSBwZWx2aXMuIApTbyBiZSBhd2FyZSBvZiB5b3VyIG93biBleHBlY3RhdGlvbnMgYXMgeW91IGNyZWF0ZSB5b3VyIHNob3BwaW5nIGxpc3RzLCBvdXRsaW5lIHlvdXIgc3BlbmRpbmcgcGxhbiBhbmQgY2FsY3VsYXRlIHlvdXIgYnVkZ2V0LiAKUHJvc2VjdXRvcnMgY2FsbGVkIHRoZSBkZWZlbmNlIHJlcXVlc3QgYSBleHBlZGl0aW9uIHRoYXQgd291bGQgdWx0aW1hdGVseSBmYWlsIGFuZCBkZXNjcmliZWQgaXQgYXMgYW4gZXhlcmNpc2UgaW4gZ2F0aGVyaW5nIGluZm9ybWF0aW9uIGZvciBhbm90aGVyIHN0YXkgcmVxdWVzdCBkb3duIHRoZSByb2FkLgpXYXJ1bT8gU29sbHRlIGRhcyBWZXJmYXNzdW5nc2dlcmljaHQgamVtYWxzIGVudHNjaGVpZGVuLCBvYiBTcGllbGUgd2llIFJvdWxldHRlIHVuZCBQb2tlciByZWNodGxpY2ggYWxzIEdlc2NoaWNrbGljaGtlaXRzc3BpZWwgb2RlciBHbGNrc3NwaWVsIGVpbmdlc3R1ZnQgd2VyZGVuLCB2ZXJsaWVydCBkaWUgUmVnaWVydW5nIGVudHdlZGVyIGRpZSBNZ2xpY2hrZWl0LCBHZXdpbm5lIHp1IGJlc3RldWVybiAoR2xja3NzcGllbCBpc3QgbmljaHQgdmVyc3RldWVyYmFyKSBvZGVyIGlociBNb25vcG9sLCBkaWVzZSBTcGllbGUgYW56dWJpZXRlbiAoR2VzY2hpY2tsaWNoa2VpdHNzcGllbGUgd2llIFNrYXQgZGFyZnN0IGR1IGluIGplZGVyIEtuZWlwZSBzcGllbGVuKS4uIApCb3VnaG5lciBoYXMgd29ya2VkIGZvciBCb3lkIEdhbWluZyBoaXMgd2hvbGUgY2FyZWVyLCBzaW5jZSAxOTc2LiBIZSB3ZW50IHRvIHRoZSBVbml2ZXJzaXR5IG9mIE5ldmFkYSBMYXMgVmVnYXMsIHRoaW5raW5nIGhlIHdvdWxkIGdvIGludG8gdGhlIGhvdGVsIGluZHVzdHJ5LiBCdXQgZHVyaW5nIHNjaG9vbCwgaGUgd29ya2VkIHBhcnQgdGltZSBhdCBhIGNhc2lubyAgIGVtcHR5aW5nIHF1YXJ0ZXJzIGZyb20gc2xvdCBtYWNoaW5lcyAgIGFuZCBnb3QgaG9va2VkIG9uIHRoZSBnYW1pbmcgYnVzaW5lc3MuLiAKTW9iaWxlIGdhbWUgaGFzIGJlY29tZSB2ZXJ5IHBvcHVsYXIuIEdhbWVzIGxpa2UgSm9rZXIxMjMgYWxsb3dzIHlvdSB0byBwbGF5IENhc2lubyBhbmQgb3RoZXIgZ2FtYmxpbmcgZ2FtZSBvbiB5b3VyIGlQaG9uZS4gClNlbGJzdCBzb2xjaGUgZGllIGRlbiBsYW5nZW4gV2VnIHp1c2FtbWVuIG1pdCBwaHlzaW9zd2lzcyB1bmQgQVNQSSBnZWdhbmdlbiBzaW5kLCBoYWJlbiBhdWZnZWdlYmVuIGFuIGVpbmUgenUgZ2xhdWJlbi4gClRoZSBraWQgaXMgZ29pbmcgdG8gYmUgYSB0b3AgbG90dGVyeSBwaWNrIGlmIGhlIGNvbWVzIG91dCB0aGlzIHllYXIuIApIZWFydHdhcm1pbmcgdmlkZW8gc2hvd3MgcmVmdWdlZSBraWRzIGV4cGVyaWVuY2luZyBmaXJzdCBDYW5hZGlhbiBzbm93ZmFsbApLaW5kbHkgYXNrIHlvdXIgbW90aGVyIHRvIHJlZnJhaW4gZnJvbSBzaGFyaW5nIGFueSBtb3JlIGRldGFpbHMgc2F2ZSBmcm9tIHRoZSBzYW1lIGxpbmUgeW91J3JlIHRlbGxpbmcgcGVvcGxlLiBBbmQgc2VyaW91c2x5LCBrZWVwIGl0IHNob3J0LiBUaGUgbG9uZ2VyIHlvdXIgYW5zd2VyIGlzLCB0aGUgbW9yZSBpdCBnZXRzIGNvbnZvbHV0ZWQgZG93biB0aGUgZ3JhcGV2aW5lLCBhbmQgdGhlIG1vcmUgcGVvcGxlIG1pZ2h0IGRlYmF0ZSBpdCBvciBsZWF2ZSBpdCBvcGVuIHRvIGludGVycHJldGF0aW9uLgpJJ20gbm90IGEgZmFuIG9mIGhlcnMgZWl0aGVyIGJ1dCBzaGUgd2FzIGNhbm5pYmFsaXplZCBieSBoZXIgb3duIG5ldHdvcmsgZm9yIGV4cHJlc3NpbmcgaGVyIGhvbmVzdCBvcGluaW9uIHdoaWNoIHdhcyBpbmNpZGVudGFsbHkgZW50aXJlbHkgcmVhc29uYWJsZS4uIApVbmZvcnR1bmF0ZWx5LCBpdCdzIG5vdCByZWFsbHkgYSBwb2tlciBtb3ZpZSBpbiB0aGUgc2FtZSB3YXkgVGhlIFNvY2lhbCBOZXR3b3JrIHdhc24ndCByZWFsbHkgYSBGYWNlYm9vayBtb3ZpZS4gTXVjaCB0byBteSBkaXNtYXksIFRoZSBTb2NpYWwgTmV0d29yayB3YXNuJ3QgYWJvdXQgYSBndXkgcG9zdGluZyBhIHBpY3R1cmUgb2YgaGltc2VsZiBhdCB0aGUgRWlmZmVsIFRvd2VyIGFuZCBoaXMgc2xvdyBkZXNjZW50IGludG8gbWFkbmVzcyBhcyBoZSB0cmFja3MgaG93IG1hbnkgbGlrZXMgaXQgZ2V0cyBvdmVyIHRoZSBuZXh0IHR3byBob3VycyBpbiByZWFsIHRpbWUuIEFzIGEgcmVzdWx0LCB0aGVyZSBpcyB2ZXJ5IGxpdHRsZSBwb2tlciBpbiBpdC4gClNvbWV0aW1lcyBqdXN0IHVzaW5nIGEgYnJvYWRlciBzdXJmYWNlIGFyZWEgbGlrZSB0aGUgcGFsbSBvZiB5b3VyIGhhbmQgaW5zdGVhZCBvZiB0aGUgdmVyeSB0aXBzIG9mIHlvdXIgZmluZ2VycyB3aWxsIG1ha2UgYSBodWdlIGRpZmZlcmVuY2UuSSB3b3VsZCBhdm9pZCBhbnl0aGluZyB0cmFjdGlvbiBsaWtlOyBkb24gcHVsbCBvbiBhbnkgam9pbnRzLk90aGVyd2lzZSBoYXZlIGF0dGVyISBHZXQgdGhlIFNPIHRvIHRyZWF0IHlvdSBhcyB3ZWxsISBUaGVyZSBubyBiZXR0ZXIgd2F5IHRvIGtub3cgd2hhdCBmZWVscyBnb29kIG9uIHNvbWVvbmUgZWxzZSB0aGVuIHRvIGhhdmUgaXQgZG9uZSBvbiB5b3Vyc2VsZiFJZiB0aGVyZSBpcyBhbiBhY3R1YWwgaW5qdXJ5IG9yIHByb2JsZW0gZ28gc2VlIGEgdGhlcmFwaXN0IGFuZCB0aGV5IHdpbGwgb2Z0ZW4gZ2l2ZSB5b3UgYWR2aWNlIG9uIGhvdyB0byBzZWxmIHRyZWF0IGJldHdlZW4gYXBwb2ludG1lbnRzIChhbmQgeW91IGNhbiBwaWNrIHVwIHRlY2huaXF1ZXMgZnJvbSB0aGVtIGFzIHdlbGwpSSBzd2VhciBieSBib3RoIHRoZSBzdGljayBhbmQgZm9hbSByb2xsZXJzLiBVbmxlc3MgeW91IGNhbiBnZXQgYSBtYXNzYWdlIGV2ZXJ5IGRheSwgaGF2aW5nIHRob3NlIHRvb2xzIGF2YWlsYWJsZSBoZWxwcyBtYWludGFpbiB0aGUgZWZmZWN0cyBvZiB0aGUgbWFzc2FnZSBiZXR3ZWVuIHRyZWF0bWVudHMuQ29tbW9ubHkgbXkgY2xpZW50cyB3aWxsIGNvbWUgaW4gb25jZSBhIHdlZWssIHNvIGluIHRoZSA2IG9mZiBkYXlzIEkgYXNzaWduIHN0cmV0Y2hpbmcsIGV4ZXJjaXNlIGFuZCBzZWxmIG1hc3NhZ2Ugc28gdGhhdCBJIG5vdCBzdGFydGluZyBmcm9tIHNxdWFyZSBvbmUgbmV4dCB0cmVhdG1lbnQuVGhleSByZWFsbHkgd29yaywgdGhleSBjYW4gYmUgcGFpbmZ1bCwgYnV0IHRoZXkgd29yay5JIHVzZSBTd2VkaXNoIHRlY2huaXF1ZXMsIHNvIGxvdHMgb2Yga25lYWRpbmcgYW5kIG11c2NsZSBtYW5pcHVsYXRpb24gd2l0aCB0aGUgZmliZXJzLiAKVGhlIGxvb2sgb24gYSBmYWNlIGFzIHlvdSBlbmpveSB0aGUgbGl0dGxlIHRoaW5ncyBpcyBvbmUgb2YgdGhlIG1vc3QgcHVyZSBpbWFnZXMgYW5kIG1lbW9yaWVzIHRvIG1ha2UuIFdoeSBkZWdyYWRlIHRoZSBkYXkgd2l0aCB0aGVzZSBuZWVkbGVzcyBjdXQgZG93bnM/LiAKV2UgbGl2ZWQgdXBzdGFpcnMuIApSdW5uaW5nIGEgaGFsZiBtaWxlIHRocm91Z2ggdGhlIGNlbnRlciBvZiB0b3duLCBQaW5lIEF2ZW51ZSBjb25uZWN0cyB0aGUgR3VsZiBvZiBNZXhpY28gdG8gVGFtcGEgQmF5LiBPbiB0aGUgYmF5IHNpZGUsIHRoZSAxOTExIENpdHkgUGllciBzdGlsbCBkcmF3cyBzdW5iYXRoZXJzIGFuZCBmaXNoZXJtZW4uIEZhbWlsaWVzIGVuam95IHRoZSBzaGFsbG93LCBibHVlIGdyZWVuIHdhdGVyLCBhbmQgYW5nbGVycyB0cnkgdGhlaXIgbHVjayB1bmRlciB0aGUgd2F0Y2hmdWwgZXllcyBvZiBwYXRyb2xsaW5nIHBlbGljYW5zLiBkYWlseSAgIGxvb2sgZm9yIHRoZSBncmVlbiBzaWducy4KRGVzY3JpYmluZyB0aGUgZGV2ZWxvcG1lbnQgb2YgRW5nbGlzaCBzdGF0dXRvcnkgYW5kIGNvbW1vbiBsYXcsIEJsYWNrc3RvbmUgZW1waGFzaXplZCB0aGUgcHJvYmxlbSBvZiBjb25zdHJ1Y3RpdmUgdHJlYXNvbnMsIGV4cGxhaW5pbmcgaG93IDI1IEVkd2FyZCBJSUkgd2FzIGVuYWN0ZWQgdG8gcmVzdHJpY3QgY29uc3RydWN0aXZlLCBvciBqdWRnZSBtYWRlIHRyZWFzb25zLCBhbmQgaG93IHRoZSBzdGF0dXRlIG11c3QgdGhlcmVmb3JlIGJlICJvdXIgdGV4dCBhbmQgZ3VpZGUiLiAKVGhlIGd1bm5lciBzZWF0IG9uIHRhbmssIGJlY2F1c2Ugd2h5IHNob290IHBlb3BsZSBmcm9tIGNvdmVyIHdoZW4geW91IGNhbiBnZXQgYSBzaGFraW5nIGd1biB3aXRoIG5vIGNvdmVyIGFuZCBldmVyeSBhc3N1YWx0IGFuZCBzbmlwZXIgb24gdGhlIG1hcCBsb29raW5nIGF0IHlvdS4gVGhlIHN0eWxpc2ggd2F5IHRvIGhpdCByZWRlcGxveS4KVGhlIGF2ZXJhZ2UgcGFpciBvZiBmZWV0IHRha2VzIGFuIGVzdGltYXRlZCA4LDAwMCB0byAxMCwwMDAgc3RlcHMgZWFjaCBkYXkgYW5kIHRyYXZlbHMgdXAgdG8gODAsMDAwIG1pbGVzIGluIGEgbGlmZXRpbWUsIGFjY29yZGluZyB0byB0aGUgQW1lcmljYW4gQ29sbGVnZSBvZiBGb290IEFua2xlIE9ydGhvcGVkaWNzIE1lZGljaW5lLiBXYWxraW5nIHB1dHMgdGhlIHByZXNzdXJlIG9mIGFib3V0IG9uZSBhbmQgYSBoYWxmIHRpbWVzIHlvdXIgYm9keSB3ZWlnaHQgb24geW91ciBmb290OyBydW5uaW5nIGluY3JlYXNlcyB0aGlzIHByZXNzdXJlIHRvIGFib3V0IHRocmVlIG9yIGZvdXIgdGltZXMgeW91ciB3ZWlnaHQuIEFjY29yZGluZyB0byB0aGUgQW1lcmljYW4gQWNhZGVteSBvZiBPcnRob3BlZGljIFN1cmdlb25zIChBQU9TKSwgeW91ciBmZWV0IGFic29yYiB1cCB0byBvbmUgbWlsbGlvbiBwb3VuZHMgb2YgcHJlc3N1cmUgZHVyaW5nIGEgc3RyZW51b3VzLCBob3VyIGxvbmcgd29ya291dCEuIApTaGUgaXMgdGhlIGVtYm9kaW1lbnQgb2YgcHVyZSBldmlsLCBzaGUgd2FzIHRvcnR1cmluZyB0aGUga2lkIGJ5IGdpdmluZyBoaW0gaG9wZS4gSSB0aGluayB0aGUgYmVzdCB3YXkgdG8gZnVjayBoaW0gb3ZlciB3b3VsZCBiZWVuIHRvIGxldCBoaW0gc3Vydml2ZSBsb2wuCkkgZG9uIHJlYWxseSBzZWUgd2h5IHRoZSB0d28gYXJlIGV2ZW4gbXV0dWFsbHkgZXhjbHVzaXZlIHRoZSB3YXkgeW91IG1ha2luZyB0aGVtLiBJdCBsaWtlIGEgcmVjdGFuZ2xlIHNxdWFyZSBraW5kIG9mIHRoaW5nIHRvIG1lLiBZZWEsIENocmlzdGlhbml0eSBpcyBhIHJlbGlnaW9uLCBidXQgaXQgYWxzbyBhIGN1bHQuIEp1c3QgbGlrZSB5ZWEgVHJ1bXAgaXMgdGhlIHByZXNpZGVudCBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBjb3VudHJ5IGluIHRoZSB3b3JsZCwgYnV0IGhlIGFsc28gYSBjaXRpemVuIG9mIHRoaXMgY291bnRyeSBqdXN0IGxpa2UgSSBhbS4KSSBub3QgY29udmluY2VkIEhvaWJlcmcgaXMgb25lIG9mIHRob3NlIGd1eXMgeWV0LiAKSSBtdXN0IHNheSB0aGF0IEkgbmV2ZXIgc2VlbiBhIG1hcCBvZiAiUmVsYXRpdmUgQnJ1bmV0bmVzcyIgYmVmb3JlIGZpbmRpbmcgdGhpcyBvbmUsIHRvZGF5LiBIZXJlIHdlIHNlZSB0aGUgIkluZGV4IG9mIE5pZ3Jlc2NlbmNlIiwgd2hpY2ggSSB0YWtlIGlzIGEgbWVhc3VyZSBvZiBibGFja25lc3Mgb2YgdGhlIGhhaXIgKGluIHRoaXMgY2FzZSksIHdpdGggbGlnaHQgdG8gZGFyayBtZWFuaW5nLCB3ZWxsLCBsaWdodCB0byBkYXJrIG1lYXN1cmVzIG9mIGhhaXIsIHRoaXMgdGFrZW4gZnJvbSAxMywwMDAgb2JzZXJ2YXRpb25zLiAKV29yayB0aGF0IHVuZG91YnRlZGx5IG5lZWRlZCBkb2luZyBidXQgd2hpY2ggd2FzIGFjdHVhbGx5IGhlbGQgdXAgYW5kIG1hZGUgbW9yZSBjb21wbGV4IGJ5IHRoZSBhY3Rpb25zIG9mIHRoZSBSZXNlYXJjaGVyLiBBcyBvZiB0b2RheSwgdGhpcyBSZXNlYXJjaGVyIGhhcyBiZWVuIHN1c3BlbmRlZCBmb3IgYSBzaWduaWZpY2FudCBwZXJpb2Qgb2YgdGltZSBhbmQgc29tZSB2ZXJ5IGNsZWFyIGNvbmRpdGlvbnMgYXR0YWNoZWQgdG8gdGhlaXIgZXZlbnR1YWwgcmV0dXJuLiAKSGFsZiBvZiB0aGUgcG9wdWxhdGlvbiBvZiB0aGUgVW5pdGVkIFN0YXRlcyB3YXMgZm91bmQgdG8gY29uc3VtZSBsZXNzIHRoYW4gdGhlIHJlY29tbWVuZGVkIGFtb3VudCBvZiBtYWduZXNpdW0gd2hlbiBlc3RpbWF0ZWQgYSBkZWNhZGUgYWdvICgyNykuIE5vdCBvbmx5IGlzIG1hZ25lc2l1bSBsb3N0IHdpdGggY2VydGFpbiBtZWRpY2FsIGNvbmRpdGlvbnMsIGJ1dCB0aGlzIG1pbmVyYWwgaXMgZXhjcmV0ZWQgYXMgYSBjb25zZXF1ZW5jZSBvZiBiaW9sb2dpY2FsIGFjdGl2aXRpZXMgc3VjaCBhcyBzd2VhdGluZywgdXJpbmF0aW5nLCBhbmQgZGVmZWNhdGluZyBhcyB3ZWxsIGFzIGV4Y2VzcyBwcm9kdWN0aW9uIG9mIHN0cmVzcyBob3Jtb25lcyAoNywgMTEpLiAKR2V0IGEgdGFuIGF0IHRoZSBBcmN0aWMgQ2lyY2xlClRoZSBiaXQgYWJvdXQgZGlzdGFudCBsYWIgd29ya2VycyBpcyBhIGJpdCBvZiBhIG5vbiBzZXF1aXR1cjogdGhlIGxhYiByZXN1bHRzIGRvbiBzZWVtIHRvIGJlIGluIGRpc3B1dGUuIFRoZSBkcml2ZXIgaXMgbGl0ZXJhbGx5IHRlbGxpbmcgYSByZXBvcnRlciBoZSB0b29rIGV4YWN0bHkgdGhlIGRydWcgaW5kaWNhdGVkIGJ5IHRoZSByZXN1bHRzLi4gCkx1ZmZ5IGJlYXQgS2F0YWt1cmkgYmVjYXVzZSBLYXRha3VyaSB3YXNuIHN0cm9uZyBlbm91Z2ggdG8ga2VlcCBzb21lb25lIGxpa2UgTHVmZnkgZG93bi4gCk9iYW1hIGlzIGFsc28gbWFraW5nIG1hbnkgUnVzc2lhbnMgY3Jhbmt5IGJ5IGNvbnRpbnVpbmcgRHViYnlhIGhhYml0IG9mIGNyaXRpY2l6aW5nIFJ1c3NpYSB3YXJzIG9mIEVtcGlyZSAoaW4gR2VvcmdpYSBmb3IgaW5zdGFuY2UpIHdoaWxlIHdhZ2luZyBoaXMgb3duLiBJZiB0aGUgVVMgd2FudHMgdG8gbGVhZCBieSBleGFtcGxlIGFuZCB0ZWxsIHRoZSBSdXNzaWFucyB0byBzdGF5IG91dCBvZiBHZW9yZ2lhLCBVa3JhaW5lLCBhbmQgb3RoZXIgZm9ybWVyIGNvbG9uaWVzLCB0aGVuIE9iYW1hIHdvdWxkIGhhdmUgdG8gZW5kIHRoZSB3YXJzIGluIEFmZ2hhbmlzdGFuLCBJcmFxLCBhbmQgdGhlIGNvbnRpbnVlZCB0YWxrIG9mIGludGVyZmVyZW5jZSBlbHNld2hlcmUuClRoZSAyOSB5ZWFyIG9sZCBmcm9tIFdpbnRlciBIYXZlbiwgRmxhLiwgY2VsZWJyYXRlZCB0aGUgYmlydGggb2YgaGlzIGZpcnN0IGNoaWxkICAgTWF2ZXJpY2sgSmVyb21lIEtldmluIENhcGVycyAgIGluIEphbnVhcnkgaGVyZSBpbiBMb25kb24uIFRocmVlIGRheXMgbGF0ZXIgaGUgc2hvdCA1IG9mIDYgZnJvbSB0aGUgZmxvb3IgdG8gaGVscCB0aGUgQm9sdHMgdG8gYSBiaWcgd2luIG92ZXIgdGhlIEsgVyBUaXRhbnMuLiAKQnJhbmRvbiBwb2tlciB0ZWFtcyBnaWZ0IHRvIGFpciBhbWJ1bGFuY2UgaW4gbWVtb3J5IG9mIHlvdW5nIHBsYXllcgpJIHRoaW5rIGhlIGhhcyBnb29kIGlkZWFzIGFuZCBpcyBleHRyZW1lbHkgaW50ZWxsaWdlbnQuIEkganVzdCBjYW4ndCBzZWUgaGltIGJlY29taW5nIHByZXNpZGVudC4gNSAxMCB5ZWFycyBhZ28gaGUgd291bGQgaGF2ZSBiZWVuIG15IGFic29sdXRlIGlkZWFsIGNhbmRpZGF0ZSwgcHVyZWx5IGJlY2F1c2Ugb2YgbXkgcG9zaXRpb25zIG9uIHNvY2lhbCwgc2NpZW50aWZpYywgYW5kIHRlY2hub2xvZ2ljYWwgaXNzdWVzLiAKV2UgY2FuIG9ubHkgaG9wZSB0aGF0IHRoZXNlIHZpcnR1YWxseSB1bnJlZ3VsYXRlZCBiaW90ZWNoIGNvbXBhbmllcywgd2hvIGFyZSBpbiB0aGUgYnVzaW5lc3Mgb2YgcGxheWluZyBHb2Qgd2l0aCB0aGUgZ2VuZXRpYyBpbmZyYXN0cnVjdHVyZSBvZiBMaWZlLCB3aWxsIHJlYWxpemUgdGhlIHBvdGVudGlhbCBoYXJtIHRvIGh1bWFucyB0aGF0IHN1Y2ggZ2VuZXRpYyBtb2RpZmljYXRpb25zIGNhbiBjYXVzZS4KSG93ZXZlciwgTXIgQWNodGVyc3RyYWF0IHNheXMgdGhlIGF1ZGl0IGZvdW5kIHRoZSBndWlkZWxpbmVzIHdlcmUgInZhZ3VlIG9uIHdoYXQgY2FuIGJlIGZ1bmRlZCIuIFRoaXMgbWVhbnQgdGhhdCBmdW5kaW5nIGRlY2lzaW9ucyAiYXJlIG5vdCB0cmFuc3BhcmVudCIuICJDbHVicyBtYWtlIGRlY2lzaW9ucyBiYXNlZCBvbiBjbHViIHBoaWxvc29waHksIGxvYmJ5aW5nIGJ5IHBvdGVudGlhbCByZWNpcGllbnRzLCBwcm9qZWN0cyB0aGV5IHdvdWxkIGxpa2UgdG8gZnVuZCBvciBoYXZlIGhhZCBhIGhpc3Rvcnkgb2YgZnVuZGluZywiIHRoZSByZXBvcnQgc2F5cy4gClRoZXNlIEZlYXR1cmVzIG1heSBjb2xsZWN0IHlvdXIgSVAgYWRkcmVzcywgd2hpY2ggcGFnZSB5b3UgYXJlIHZpc2l0aW5nIG9uIG91ciBzaXRlLCBhbmQgbWF5IHNldCBhIGNvb2tpZSB0byBlbmFibGUgdGhlIEZlYXR1cmUgdG8gZnVuY3Rpb24gcHJvcGVybHkuIApMdWNpYSBIb3RlbHNTdC4gCkRvZXMgaXQgbWF0dGVyIHdoYXQgZW5lbXkgd2FudHMgdG8gZG8/IE5vISBUaGUgdml0YWwgdGhpbmcgaXMgdGhlIHVuZGVyc3RhbmRpbmcgb2YgdGhlIFdvcmQgb2YgdGhlIExPUkQuIApLbm93biBnbG9iYWxseSBmb3IgaGlzIGZpZXJjZSBjb21wZXRpdGl2ZSBzcGlyaXQsIHRoZSAyNiB5ZWFyIG9sZCBTcGFuaXNoIHN1cGVyc3RhciBpcyBrZWVuIHRvIGxlYXJuIHRoZSBnYW1lIG9mIHBva2VyLiBUaHJvdWdoIG1lbnRvcnNoaXAgd2l0aCBQb2tlclN0YXJzIHByb3MgYW5kIHBsYXlpbmcgb25saW5lLCBSYWZhIHdpbGwgZHJhdyBvbiBtYW55IG9mIHRoZSBza2lsbHMgaGUgdXNlcyB0byBzdWNoIGdyZWF0IGVmZmVjdCBvbiB0aGUgdGVubmlzIGNvdXJ0IHRvIGltcHJvdmUgaGlzIGdhbWUgb25lIHN0ZXAgYXQgYSB0aW1lLi4gCkhpc3RvcnksIGFuZCBhIHdvbWFuIHNldCB0byB0YWxrIGF0IGEgc3VucmlzZSBjZXJlbW9ueSBjb21tZW1vcmF0aW5nIHRoZSBsaXZlcyBsb3N0IHNheXMgdGhhdCBhbHRob3VnaCBoZWFydHMgYXJlIHN0aWxsIGhlYWxpbmcsIHNoZSBob3BlcyBwZW9wbGUgY2FuIG1vdmUgZm9yd2FyZCBmcm9tIHRoZSBlbm9ybW91cyB0cmFnZWR5IHdpdGggImxvdmUgYW5kIGxpZ2h0LiIuIApEY2xhcmF0aW9uIGQnYWJzZW5jZSAoYXJ0LiBEYW5zIGNlIGNhcywgZGVzIG1lc3VyZXMgZGUgcHVibGljaXQgcGV1dmVudCB0cmUgcHJpc2VzIChhcnQuIFVuIGRsYWkgZCd1bmUgYW5uZSBkb2l0IHMnY291bGVyIGVudHJlIGxhIGRlbWFuZGUgZXQgbGUganVnZW1lbnQgZGNsYXJhdGlmIGQnYWJzZW5jZSAoYXJ0LiBDZSBqdWdlbWVudCBlc3Qgc291bWlzICBkZXMgY29uZGl0aW9ucyBkZSBwdWJsaWNhdGlvbiAoYXJ0LiBMZSBqdWdlbWVudCBkZXZpZW50IG9wcG9zYWJsZSBhdXggdGllcnMuIERzIGxvcnMsIGxlIGp1Z2VtZW50IGRlIGRjbGFyYXRpb24gZCdhYnNlbmNlIHMnYW5hbHlzZSBjb21tZSB1biBhY3RlIGRlIGRjcywgZW50cmFuYW50IGxlcyBtbWVzIGVmZmV0cyA6IG91dmVydHVyZSBkZSBsYSBzdWNjZXNzaW9uLCBwcmVzdGF0aW9ucyBzb2NpYWxlcywgcmVtYXJpYWdlIGR1IGNvbmpvaW50IChhcnQuIFRvdXRlZm9pcywgbGUgQ29kZSBDaXZpbCBwcnZvaXQgbGEgc2l0dWF0aW9uIG8gbCdhYnNlbnQgcmFwcGFyYXQuIEwnYW5udWxhdGlvbiBkdSBqdWdlbWVudCBwb3VycmEgdHJlIHJlY2hlcmNoZSBldCBsZSBqdWdlbWVudCBzZXJhIHB1YmxpIGF2ZWMgaW5zY3JpcHRpb24gc3VyIGxlcyByZWdpc3RyZXMgKGFydC4gTCdhYnNlbnQgcmVjb3V2cmUgc2VzIGJpZW5zIGV0IGNldXggcXUnaWwgYXVyYWl0IGQgcmVjdWVpbGxpciBwZW5kYW50IHNvbiBhYnNlbmNlIGRhbnMgbCd0YXQgbyBpbHMgc2UgdHJvdXZlbnQsIGFpbnNpIHF1ZSBsZSBwcml4IGRlcyBiaWVucyBhbGlucyBvdSBhY3F1aXMgZW4gZW1wbG9pIGRlIGNhcGl0YXV4IG91IHJldmVudXMgY2h1cyAgc29uIHByb2ZpdCAoYXJ0LiBMZXMgaHJpdGllcnMsIHBvc3Nlc3NldXIgZGUgYm9ubmUgZm9pLCBjb25zZXJ2ZW50IGxlcyBmcnVpdHMgcGVydXMgZGUgYm9ubmUgZm9pIChhcnQuIExhIHBhcnRpZSBpbnRyZXNzZSBheWFudCBwcm92b3F1ZSB1bmUgZGNsYXJhdGlvbiBkJ2Fic2VuY2UgcGFyIGZyYXVkZSBkZXZyYSByZXN0aXR1ZXIgbGVzIHJldmVudXMgZGVzIGJpZW5zIGRvbnQgZWxsZSBhdXJhIGV1IGxhIGpvdWlzc2FuY2UgYWluc2kgcXVlIGxlcyBpbnRydHMgbGdhdXggIGNvbXB0ZXIgZHUgam91ciBkZSBsYSBwZXJjZXB0aW9uLiBTaSBsYSBmcmF1ZGUgY29uY2VybmUgbGUgY29uam9pbnQsIGxhIGxpcXVpZGF0aW9uIGR1IHJnaW1lIG1hdHJpbW9uaWFsIHNlcmEgYXR0YXF1ZSAoYXJ0LiBMZSBtYXJpYWdlIHJlc3RlIGRpc3NvdXMgKGFydC4KSSdtIGEgbWFqb3IgYWR2b2NhdGUgZm9yIHVuaXZlcnNhbCBjb3ZlcmFnZSBhbmQgZ2V0dGluZyBhd2F5IGZyb20gZW1wbG95ZWUgc3BvbnNvcmVkIGluc3VyYW5jZSwgYnV0IGV2ZW4gaWYgd2UgbWFkZSB0aGVzZSBjaGFuZ2VzIGl0IHdvdWxkIG5vdCBzdWRkZW5seSBmaXggbWFueSBvZiB0aGUgdW5kZXJseWluZyBwcm9ibGVtcyBpbiBvdXIgbWVkaWNhbCBzeXN0ZW0sIGVzcGVjaWFsbHkgdGhvc2UgYXJvdW5kIGNvc3RzLgpUaGUgZXZlbnQgaXMgZGl2aWRlZCBpbnRvIE1pbmkgTWlsbGlvbnMsIE1pbGxpb25zIEJyZWV6ZSwgQWRkYTUyIE1pbGxpb25zIEhpZ2hyb2xsZXIsIEFkZGE1MiBNaWxsaW9ucyBNRSBhbmQgTWlsbGlvbnMgU2hvd2Rvd24uIFRoZSBzdXBlciBzYXRlbGxpdGVzIGZvciB0aGlzIFJzLiA1MiBMYWNzIHByaXplIHBvb2wgZXZlbnQgd2lsbCBydW4gZnJvbSBPY3RvYmVyIDI0IDI3IGZvciBhIGJ1eSBpbiBvZiBScy4gCkEgZ2VudWluZWx5IGV4Y2VwdGlvbmFsIG1lbWJlciBvZiB0aGUgcHJvZmVzc2lvbi4gSXQgdW5mb3J0dW5hdGUgdGhhdCBoZXIgZXhwZXJpZW5jZSBvZiB0aGUgcXVhbGl0eSBvZiBESFMgc29jaWFsIHdvcmtlcnMgaXMgc3VjaCB0aGF0IHdoZW5ldmVyIHNoZSByZWZlcnMgdG8gdGhlbSBhcyB3b3JrZXIgc2hlIGRvZXMgc28gYnkgdXNpbmcgYWlycXVvdGVzLiAKRm9yIHllYXJzLCB3ZSd2ZSBiZWVuIGhvbGRpbmcgcG9rZXIgdG91cm5hbWVudHMsIGdldCB0b2dldGhlcnMsIGFuZCBldmVuIGRhaWx5IGNvbnRlc3RzIGZvciBldmVyeW9uZSB0byBlbmpveS4gV2hpbGUgbWFueSBwZW9wbGUgd2lsbCB0YWxrIGFib3V0IHRoZSBsZWdhbGl0eSBpc3N1ZXMsIHdlIGRvIGl0IGJlY2F1c2Ugd2UgYm90aCB3b3JrIGZyb20gaG9tZSBhbmQgJDEgZnJvbSBlYWNoIGFudGUgZ29lcyB0byB2YXJpb3VzIGNoYXJpdGllcy4gSXQncyBmdW4sIHdlIGdldCB0byBoZWxwIG90aGVycywgYW5kIGl0IGNvbnN0YW50bHkga2VlcHMgdXMgYnVzeS4gClJlaW5hcmR5IGFuZCBKIEouIAoiQ2VudHJpc3QgaXMganVzdCBhbm90aGVyIHdvcmQgZm9yIHVuaW5mb3JtZWQgbm9uIHZvdGVyLiIgICBva2F5IGdvIGZ1Y2sgeW91cnNlbGYuIAoiWW91IGhhdmUgZ29vZCB0YXN0ZSBpbiBqZXdlbGxlcnkuIEFuZCBJIGhhdmUgdGhhdCB0b3Agd2l0aCB0aGUgY2xlYXZhZ2UgSSB3ZWFyIHNvIHNlbGRvbSBiZWNhdXNlIGl0IHdvdWxkIGxvb2sgc28gbXVjaCBiZXR0ZXIgd2l0aCBhIG5pY2UgbmVja2xhY2UgYXMgYSBzaWdodCBjYXRjaGVyLiIKUmVwdWJsaWNhbiBwYXN0b3IgTWlrZSBIaW50eiwgd2hvbSBHZW9yZ2UgVy4gQnVzaCBjb21tZW5kZWQgZHVyaW5nIHRoZSAyMDA0IHByZXNpZGVudGlhbCBjYW1wYWlnbiwgc3VycmVuZGVyZWQgdG8gcG9saWNlIGFmdGVyIGFkbWl0dGluZyB0byBhIHNleHVhbCBhZmZhaXIgd2l0aCBhIGZlbWFsZSBqdXZlbmlsZS4KQmxlYWNoIGlzIGEgdmVyeSB1c2VmdWwgY2hlbWljYWwgYm90aCBhcm91bmQgdGhlIGhvdXNlIGFuZCBmb3IgbGFyZ2Ugc2NhbGUgdXNlLiBZb3UgY2FuIHVzZSBibGVhY2ggdG8gcmVtb3ZlIHN0YWlucyBvbiBjbG90aGluZyBvciB0byB3aGl0ZW4geW91ciBsYXVuZHJ5LiAKU2V4IG9mZmVuZGVyCk9yIHRvIGJlIG1vcmUgY2xlYXIsIGhvdyBleGFjdGx5IGRvZXMgdGhlIGFuanVuYWJlYXRzIHRvdXIgd29yaz8gV2hvIHBlcmZvcm1zIG9uIHRoZWlyIHRvdXJzPyBXaWxsIHRoZSBhY3R1YWwgbGluZXVwIGNvbWUgb3V0IGF0IHNvbWUgcG9pbnQ/UnVsZSBJICAgTm8gc2NyZWVuc2hvdHMuIFRoaXMgaW5jbHVkZXMgcGljdHVyZXMgb2Ygc2NyZWVucyBhbmQgcGhvdG9zIHdoZXJlIHRoZSBpbnRlcmVzdCBpcyB0aGUgY29udGVudHMgb2YgYSBzY3JlZW4uIEZvciBhIHBsYWNlIHRvIHBvc3Qgc2NyZWVuc2hvdHMsIHlvdSBtYXkgd2lzaCB0byBjaGVjayBvdXQgL3Ivc2NyZWVuc2hvdHMuLiAKTXkgbGF0ZXIgdG8gYmUgZ2lybCBmcmllbmQgd2FzIGFsc28gdGhlcmUgYW5kIHdlIGp1c3QgYmFyZWx5IGdvdCB0aGUgdHdvIG9mIHRoZW0gbmFrZWQuIE15IG1hdGUgYW5kIEkgaGFkIG91dCBwYW50cyBvbiBzdGlsbC4uIApQYXJveGV0aW5lIGlzIHByZXR0eSBvbGRza29vbCBhbmQgaGFzIHRlcnJpYmxlIGRpc2NvbnRpbnVhdGlvbiBzeW5kcm9tZS4gSXQgYWxzbyBpbmhpYml0cyBpbXBvcnRhbnQgbGl2ZXIgZW56eW1lcyB0aGF0IGJyZWFrIGRvd24gb3RoZXIgbWVkcyBzbyB5b3UgY2FudCB0YWtlIG1pcnRhemFwaW5lIGFuZCBwYXJveGV0aW5lIHRvZ2V0aGVyIGxpa2UgeW91IGNvdWxkIHdpdGggZGlmZmVyZW50IFNTUklzLiBNaXJ0YXphcGluZSBpcyBhY3R1YWxseSB2ZXJ5IGdvb2QgYXQgbWFuYWdpbmcgYW54aWV0eSwgYW5kIGlzIG1hcmtldGVkIHRvd2FyZHMgcGVvcGxlIHdpdGggcGFuaWMgZGlzb3JkZXJzIG9yIEdBRC4gCkVuIGxvcyBsdGltb3MgYW9zLCBlbiBsb3MgdG9ybmVvcyBlbiB2aXZvIHNlIGhhbiByZWFsaXphZG8gbXVjaG9zIGNhbWJpb3MgcXVlIGhhbiByZXN1bHRhZG8gc2VnbiBtaSBjcml0ZXJpbyBjb250cmFwcm9kdWNlbnRlcy4KSSBrbm93IGl0J3MgbGl0ZXJhbGx5IHRoZSB3b3JzdCBwbGFjZSB0byBnZXQgYSBkb2cgZnJvbSBidXQgSSBjb3VsZG4ndCBsZWF2ZSBoZXIgdGhlcmUgYW5kIG15IGh1c2JhbmQgYW5kIEkgd2VyZSBnb2luZyB0byBnbyB0byBzaGVsdGVycyBuZXh0IHdlZWsgYW55d2F5cyB0byBsb29rIGZvciBhIHNlY29uZCBkb2cuIFdlIGFyZSBmYWlybHkgY2VydGFpbiB0aGF0IHNoZSB3YXMgYWJ1c2VkIGluIHNvbWUgd2F5IGFuZCBkZWZpbml0ZWx5IHdhcyBsZWZ0IG91dHNpZGUgYW5kIG5lZ2xlY3RlZC4gCkNlcyBzZXB0IHBlcnNvbm5lcyB0YWllbnQgcHJzZW50ZXMgdmVuZHJlZGkgIHVuIGp1Z2UgZCdpbnN0cnVjdGlvbiBlbiB2dWUgZCd1bmUgbWlzZSBlbiBleGFtZW4gZGFucyBjZXR0ZSBlbnF1dGUgb3V2ZXJ0ZSBwb3VyICJ0cmFpdGUgZGVzIHRyZSBodW1haW5zIiBldCAicHJveG50aXNtZSBhZ2dyYXYiLiBMZSBwYXJxdWV0IGEgcmVxdWlzIGxlIHBsYWNlbWVudCBlbiBkdGVudGlvbiBwcm92aXNvaXJlIGRlIGNlcyBzZXB0IHBlcnNvbm5lcy4KQWNjb3JkaW5nIHRvIE9sZWcgS296bG92c2t5LCB0aGUgUnVzc2lhbiBzdGF0ZSByZWNlbnRseSBpbmNyZWFzZWQgc3RhdGUgY29udHJvbCBvdmVyIHNwZWVjaCBieSBjb250cm9sbGluZyBub3QganVzdCBqb3VybmFsaXNtLCBidXQgaGlzdG9yeSBhcyB3ZWxsLi4gCkkgd2lsbCBkbyBteSBiZXN0IHRvIG5ldmVyIGJlIHB1dCBpbiBhIGNhbGwgY2VudGVyIHNpdHVhdGlvbiBldmVyIGFnYWluLiBJIGFwcGxhdWQgeW91IG9uIHdhbGtpbmcgb3V0Li4gCkkgYWxsIGZvciBzY2llbmNlLiAKU2hpdHR5bW9ycGggIDgsNzczIHBvaW50cyAgc3VibWl0dGVkIDE5IGRheXMgYWdvCiJIZSBhY2NvbXBsaXNoZWQgZXhhY3RseSB0aGUgc2FtZSByZXN1bHQgdGhyb3VnaCB0aGUgdW53aXR0aW5nIGJ1dCBkaXJlY3RlZCBhY3Rpb25zIG9mIHRoZSBjcm91cGllcix0cmlja2luZyBoZXIgaW50byB0aGlua2luZyB0aGF0IHdoYXQgc2hlIGRpZCB3YXMgaXJyZWxldmFudC4iCkJhbmtzIHdpbGwgbGVuZCB5b3UgbW9uZXkgdG8gYnV5IHRoZXNlIGNvdXBvbiBib29rcyBmb3IgcmVsYXRpdmVseSBsb3cgaW50ZXJlc3QgcmF0ZXMgYmVjYXVzZSBjb3Vwb24gYm9va3MgYXJlIGEgc29saWQgaW52ZXN0bWVudC4gWW91IGdldCB0YXggcmViYXRlcyBvbiB0aGUgaW5jb21lIGVhcm5lZCBmcm9tIHRoZXNlIGNvdXBvbiBib29rcyBiZWNhdXNlIG9mIHJlYXNvbnMuCkRvZXMgaXQgcGF5IHNpZ25pZmljYW50bHkgbGVzcyB0aGFuIHdoYXQgSSB1c2VkIHRvIG1ha2U/IE9oIHllcy4gCkl0IGRvZXNuIGhhdmUgYW55IHNxdWFyZXMgYXJvdW5kIGl0IHRoYXQgaGF2ZSB0aG9zZSBjdXJ2ZWJhbGxzIHRoYXQgeW91IGJlaW5nIHNlbnQgdG8uIFRoZSBHbyB0byBKYWlsIHNxdWFyZSBmb3IgaW5zdGFuY2UgaXMganVzdCBhIGZldyBzcXVhcmVzIGJlZm9yZSBQYXJrIExhbmUgbm9ib2R5IGV2ZXIgcHJvZ3Jlc3NlcyBvbiBmcm9tIHRoYXQgc3F1YXJlIGlmIHRoZXkgbGFuZCBvbiBpdCwgd2hpY2ggbWVhbnMgYSBsb3Qgb2YgcGVvcGxlIGFyZSBiZWluZyB0YWtlbiBhd2F5IGZyb20gZW5kaW5nIHVwIG9uIFBhcmsgTGFuZSB3aXRoIHRoZWlyIG5leHQgdGhyb3cuIApJdCBoYXMgYSBjb21wbGV4IHNldCBvZiBydWxlczogd2hlbiB0aGUgdG90YWwgdmFsdWUgb2YgdGhlIGNhcmRzIGdvZXMgaW50byBkb3VibGUgZmlndXJlcywgdGhlIGZpcnN0IGRpZ2l0IG9mIHRoZSB0b3RhbCBkb2VzIG5vdCBjb3VudCAgIHNvIHR3byBzaXhlcyBhZGQgdXAgdG8gdHdvIHJhdGhlciB0aGFuIDEyLiAKU2VyZ2UgSGVybmljb3QsIHNpbm9sb2d1ZSBldCBhY3VwdW5jdGV1ciBkZSBzb24gdGF0LCBjb25uYXQgZG9uYyB0cnMgYmllbiBsYSBtZGVjaW5lIHRyYWRpdGlvbm5lbGxlIGNoaW5vaXNlLiBJbCBzIGluc3BpciBkZXMgY2lucSBsbWVudHMgcXVlIHNvbnQgbGUgRmV1LCBsZSBCb2lzLCBsYSBUZXJyZSwgbCBldCBsZSBNdGFsLiAKTCdob21tZSBlc3QgZG90IGR1IGxpYnJlIGFyYml0cmUuIExlIGNob2l4IGVzdCBkb25jIGJpZW4gbGUgc2llbi4gSWwgcGV1dCBhY2NlcHRlciBkZSBmYWlyZSBjb25maWFuY2Ugb3UgcmVmdXNlci4gSWwgcGV1dCBzJ2VudHJhbmVyIGV0IHB1aXNlciBsYSBjb25maWFuY2UgZGFucyBsYSB2aWUsIG91IGRlbWV1cmVyIGRhbnMgbGUgZG91dGUuClRoZSBvYmplY3Rpdml0eSBvZiBjb2xsYWdlICAgdGFraW5nIGFuIGltYWdlIGZyb20gb3V0c2lkZSBhbmQgcHV0dGluZyBpdCwgd2hvbGUgYW5kIGVudGlyZSwgaW4gdGhlIGZpY3Rpb25hbCBzcGFjZSBvZiB0aGUgcGFpbnRpbmcgICBhcHBlYWxlZCB0byBNYWdyaXR0ZSwgYmVjYXVzZSBoZSBsaWtlZCBzdGFuZGFyZGl6ZWQgaW1hZ2VzOyBpdCB3YXMgdGhlaXIgZW5jb3VudGVyIGFuZCByZWFycmFuZ2VtZW50IHRoYXQgY3JlYXRlZCB0aGUgbWFnaWMsIG1vcmUgdGhhbiB0aGUgdGhpbmdzIHRoZW1zZWx2ZXMuIApMYXRlciwgaGUgc2FpZCwgZmVsdCBhbG9uZSB0aGVyZSB3ZXJlIHRob3VnaHRzIG9mIHN1aWNpZGUuIGNyb3NzIGV4YW1pbmF0aW9uLCBkZWZlbmNlIGxhd3llciBLZW4gTWFybGV5IGRlc2NyaWJlZCBLaXNzbmVyIGFzIGl0IGp1c3QgaGlzIHdheSBvZiBzYXlpbmcgaGksIGFuZCB0aGF0IHRoZSBjb21wbGFpbmFudCBjb3VsZCBoYXZlIHNhaWQgbm8gYXQgYW55IHRpbWUsIHRoYXQgaGUgd2FzbiBmb3JjZWQgdG8gbGllIGRvd24gb24gYSBiZWQgYW5kIHRha2Ugb2ZmIGNsb3RoZXMgZm9yIGEgbWFzc2FnZSBvciBob3AgaW50byBhIGhvdCB0dWIgd2l0aCB0aGUgY2hpZWYuCkNyYWZ0IGNvY2t0YWlsIHByb2dyYW0gaXMgd2hhdCB0aGUgYmFyIGlzIGJ1aWx0IGZvciwgZm9yIG1ha2luZyBzeXJ1cHMgZnJvbSBzY3JhdGNoIGFuZCBmYW5jeSBjb2NrdGFpbHMsIGhlIHNhaWQuCkkgdGhpbmsgdGhpcyBpcyBhIHRvdGFsIGNsb3duIHNob3cgYW5kIGEgY2xvd24gbW92ZSBieSBBQi4iLiAKWW91IGhhdmUgdG8gZm9sbG93IHRoZSB3aG9sZSBjYW1wYWlnbiwgZnJvbSBiZWdpbm5pbmcgdG8gZW5kLCBhbHNvIHBheWluZyBhdHRlbnRpb24gdG8gY29uZ3Jlc3Npb25hbCBhbmQgbG9jYWwgZWxlY3Rpb25zLiAKIidPaCwgbW9tbXksIHlvdSBoYXZlIG15IGV5ZXMsIicgc2hlIHNhaWQgb2YgaGlzIGZpcnN0IHdvcmRzIHRvIGhlci4gIkhlIGh1Z2dlZCBtZSBhbmQgaGUga2lzc2VkIG1lIGFuZCB3ZSBoZWxkIHRoZXJlIGZvciBhIGxvbmcgdGltZS4iClRoZXJlIGFyZSBtYW55IG9ubGluZSBwb2tlciBzaXRlcyBvZmZlcmluZyByYWtlYmFjayBkZWFscyBhcyB3ZWxsIGFzIGRlcG9zaXQgYm9udXNlcy4gVW5mb3J0dW5hdGVseSBDbHViV1BUIGNhbid0IG9mZmVyIHlvdSBzdWNoIGRlYWwuIApIaXMgYm9vayBvbiB0aGUgZmluYW5jaWFsIG1lbHRkb3duLCBUaGUgQmlnIFNob3J0IGlzIGN1cnJlbnRseSBiZWluZyBtYWRlIGludG8gYSB3aWRlbHkgYW50aWNpcGF0ZWQgZmlsbSBzdGFycmluZyBCcmFkIFBpdHQsIENocmlzdGlhbiBCYWxlLCBSeWFuIEdvc2xpbmcsIGFuZCBTdGV2ZVZpZXcgbW9yZVRoZSBVbml2ZXJzaXR5IG9mIFV0YWggSGluY2tsZXkgSW5zdGl0dXRlIG9mIFBvbGl0aWNzIGlzIHRocmlsbGVkIHRvIHByZXNlbnQgdGhlIDIwMTUgU2FtIFJpY2ggTGVjdHVyZSwgQ29udmVyc2F0aW9uIHdpdGggTWljaGFlbCBMZXdpcyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBEYXZpZCBFY2NsZXMgU2Nob29sIG9mIEJ1c2luZXNzLkxld2lzIGFjY2xhaW1lZCBOZXcgWW9yayBUaW1lcyBiZXN0c2VsbGVycyBpbmNsdWRlIE1vbmV5YmFsbCwgVGhlIEJsaW5kIFNpZGUsIEZsYXNoIEJveXMsIEJvb21lcmFuZywgYW5kIExpYXIgUG9rZXIgdG8gbmFtZSBhIGZldy4gCldvdWxkIGxvdmUgdG8gZmluZCBhIHNvbHV0aW9uIGZvciB0aGF0LCBidXQgd2UgY291bGQgYmUgbG9va2luZyBhdCBhIFJlZGRpdC9odW1hbiBuYXR1cmUgcHJvYmxlbS4gCkNsYWltaW5nIG1lZGljYWwgZXhwZW5zZXMgZ29vZCBwcmVzY3JpcHRpb24gYXQgdGF4IHRpbWUKU2hlIHRoaW5rcyB0aGUgcGVvcGxlIHdobyBzcGVudCBhIGdvb2QgcG9ydGlvbiBvZiB0aGVpciBsaXZlcyBsZWFybmluZyBhbmQgcmVzZWFyY2hpbmcgd2hhdCB0aGV5IHRhbGtpbmcgYWJvdXQgYXJlIHRyeWluZyB0byBzY2FtIGhlci4gCldoYXQgeW91IGhhZCBpbiBLIDggaXMgcmVsaWdpb3VzIGluc3RydWN0aW9uLiBUZWFjaGluZyBwZW9wbGUsIG9mdGVuIGNoaWxkcmVuIGJvcm4gaW50byBhIGNvbW11bml0eSwgdGhlIHdheXMgb2YgdGhlIHRlYWNoZXIgc3BlY2lmaWMgcmVsaWdpb24uClRoZSBNaXRjaGVsbCBUcnViaXNreSB0cmFpbiBpcyBub3QgYW4gZXhwcmVzcy4gTmV3IGNvYWNoIE1hdHQgTmFneSB3aWxsIGJyaW5nIG11Y2ggbmVlZGVkIGNyZWF0aXZpdHkgYW5kIGV4cGxvc2l2ZW5lc3MgdG8gdGhlIG9mZmVuc2Ugd2l0aCBpbXByb3ZlZCBza2lsbCBwbGF5ZXJzLCBidXQgdGhlIHNlY29uZCB5ZWFyIFFCIGlzIGJvdW5kIHRvIGhhdmUgYSBsaW1pdGVkIGNlaWxpbmcgaW4gaGlzIGZpcnN0IHllYXIgdW5kZXIgdGhlIGNvYWNoLiBUaGUgZGVmZW5zZSBpcyBnb29kIGVub3VnaCBmb3IgYSBidW1wIGluIHRoZSB0b3VnaCBORkMgTm9ydGguLiAKSGUgaXMgb25lIG9mIHRoZSBuYXRpb25zIGxlYWRpbmcgZXhwZXJ0cyBpbiBBREhEIGFuZCBpcyBoaWdobHkgcmVzcGVjdGVkIGluIHRoZSBtZWRpY2FsIGNvbW11bml0eS4gSWYgYW55b25lIGtub3dzIHRoZWlyIHN0dWZmIGlzIERyIEJhcmtsZXkuLiAKVGhpcy4gWGZpbml0eSdzIGdhdGV3YXkgbW9kZW0vd2lyZWxlc3Mgcm91dGVyIGNvbWJvIGlzIGFic29sdXRlIHRyYXNoLiAKU2x5UmVmZXJlbmNlICA0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KU2F5IHdoYXRldmVyIHlvdSBzYXksIGJ1dCBnYXkgcGVvcGxlIGFyZSBwcmFjdGljaW5nIHNvbWV0aGluZyB0aGF0IGlzIHVubmF0dXJhbC4gSXQgaXMgaW1wb3NzaWJsZSB0byBjb250cmlidXRlIHRvIHRoZSBwcm9ncmVzc2lvbiBvZiBodW1hbnMgb24gZWFydGguIFRoaW5rIGFib3V0IGl0LCBpZiBldmVyeW9uZSBpbiB0aGUgd29ybGQgaXMgZ2F5IHRoZW4gdGhlcmUgYXJlIG5vIG1vcmUgaHVtYW5zIGluIHRoZSBuZXh0IGdlbmVyYXRpb24uCkZyIGRpZSBUZXJtaW5rYXJ0ZW4gd3JlIGVpbiBMYWJlbFByaW50ZXIgbWl0IGRlbiBzcGV6aWVsbGVuIEthcnRlbiB2b24gVm9ydGVpbC4gCk1vbmljYSBHb21leiBpcyB0aGUgRm91bmRlciBhbmQgUHJlc2lkZW50IG9mIFRoZSBDb25jaWVyZ2UgQ2x1YiwgQ2FuYWRhJ3MgbHV4dXJ5IHByZW1pdW0gZXZlbnRzIGFuZCBzdGFmZmluZyBhZ2VuY3kuIApBbiBhY2NpZGVudC4gTm8gb25lIHdvdWxkIHRoaW5rIGxlc3Mgb2YgdGhvc2UgbWVuLiBVbmF2b2lkYWJsZSB0aGV5IHdvdWxkIGNhbGwgaXQuIApBbGwgb2YgdXMgaGF2ZSBtb3JlIHRoYW4gb25lIHN0b3J5IGFib3V0IHRoZSBpbnZpbmNpYmxlIEdhcnRoIGFuZCBpdCBpcyBkdXJpbmcgdGhpcyB0aW1lIG9mIGNlbGVicmF0aW9uIHRoYXQgd2Ugd2lsbCBzaGFyZSB0aGVtIGFsbC4gSSwgZm9yIG9uZSwgaGVhciBteSBicm90aGVyIHZvaWNlIHJpZ2h0IG5vdyBzYXlpbmc6IGVub3VnaCB3aXRoIHRoZSBrbml0dGluZyBhbHJlYWR5IGJyZWFrIG91dCB0aGUgSmFjayBhbmQgcGFzcyB0aGUgcGVhY2UgcGlwZS4gClZpZGVvIHBva2VyIG9uIHRoZSBvdGhlciBoYW5kIGlzIHF1aXRlIGRpZmZlcmVudC4gVGhlIGZpcnN0IGRpZmZlcmVuY2UgaXMgcXVpdGUgb2J2aW91czogeW91IGFyZSBub3QgY29tcGV0aW5nIHdpdGggb3RoZXIgcG9rZXIgcGxheWVyczsgeW91IGFyZSBzaW1wbHkgcGxheWluZyBhZ2FpbnN0IGEgY29tcHV0ZXIuIApXaGVuIGl0IHdhcyB0aW1lIHRvIGdvLCBhcHBhcmVudGx5IGluIGhlciBkcnVua2VuIHN0YXRlIHNoZSBmb3Jnb3QgdG8gZ3JhYiB0aGUgY2FyZCBhbmQgd2FzIGxlZnQgYXQgdGhlIHJlc3RhdXJhbnQuIApUaGUgRUNUIGluZHVzdHJ5IGlzIHB1YmxpY2x5IGFkbWl0dGluZyBpdCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gaGlzdG9yeSBiZWNhdXNlIG9mIGEgbGF3c3VpdCBJIHB1dCB0b2dldGhlci4gSSB3YW50IHRvIHJhaXNlIGF3YXJlbmVzcyBhbmQgdXNlIHRoZSBsYXdzdWl0IHRvIGhlbHAgdmljdGltcy4gCllvdSBtYXkgbmVlZCBwaHlzaWNhbCB0aGVyYXB5IHlvdXJzZWxmIHRvIHJlY292ZXIgZnJvbSBpbmp1cmllcyBzdXN0YWluZWQgaGVscGluZyBpbmZpcm0gcGF0aWVudHMgd2hvIHBvc3Nlc3MgbGltaXRlZCBtb2JpbGl0eS4gCkl0IGlzIGxpa2VseSB0aGF0IGhlIHB1c2hlZCBmb3IgbW9yZSBzYW5jdGlvbnMgcmVsaWVmIHRoYW4gd2hhdCB3YXMgcmVhc29uYWJsZSBjb21wYXJlZCB0byB3aGF0IGhlIG9mZmVyZWQgaW4gcmV0dXJuLiAKV2hvIGtuZXcgdGhhdCBhIHBsYXllciB3aG8gY29uc2lzdGVudGx5IGJsZXcgb2ZmIHRlYW0gcGhvdG9zIHdvdWxkIGN1dCBzaG9ydCBoaXMgdmFjYXRpb24gdG8gYXBwZWFyIHdpdGggb3RoZXIgZm9ybWVyIEdpYW50cyBvdXRmaWVsZGVycyBmb3IgdGhlIHRlYW0gbGF0ZXN0IDUwdGggYW5uaXZlcnNhcnkgY2VsZWJyYXRpb24gU2F0dXJkYXkgbmlnaHQ/IEhpcyBsb3lhbCBmYW5zIGdvdCB0byBjaGVlciBoaW0gb24gb25lIG1vcmUgdGltZS4gSGUgbWFkZSBhIGZ1bm55IHNwZWVjaCB3aXRoIGEgbmljZSBkZWFkcGFuIGRlbGl2ZXJ5LiAoSGVyZSB0aGUgbGluayB0byB0aGUgdmlkZW8uKSBBbmQgdGhlbiBoZSBzcGVudCB0aGUgZmlyc3QgdHdvIGlubmluZ3MgdGFsa2luZyB0byBLcnVrIGFuZCBLdWlwIG9uIHRoZSBUViB0ZWxlY2FzdCwgd2hlcmUgaGUgcHJhaXNlZCBUaW0gTGluY2VjdW0gYW5kIEZyZWQgTGV3aXMgZ3Jvd3RoIHRoaXMgeWVhciBhbmQgY29tcGFyZWQgSm9obiBCb3drZXIgc2hvcnQgc3dpbmcgdG8gaGlzLiAKVGhleSBkbyBoYXZlIGEgZ3JlYXQgd2luZSBzZWxlY3Rpb24sIGlmIHRoYXQgc29tZXRoaW5nIHRoYXQgcGlxdWVzIHlvdXIgaW50ZXJlc3QuIApTYW5jdGlvbmVkIGJldHRpbmcgb24gdGhlIG91dGNvbWUgb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciwgbm93IGluIGZ1bGwgc3dpbmcgYXQgdGhlIFJpbywgaXMgbm90IHBlcm1pdHRlZCB1bmRlciBOZXZhZGEgZ2FtaW5nIHJlZ3VsYXRpb25zLCB0aG91Z2ggYSBsaXZlbHkgbWFya2V0IGV4aXN0cyBpbiBvdGhlciBqdXJpc2RpY3Rpb25zLgpBbmQgc2luY2Ugd2UgYXJlIHNvb24gZmFjaW5nIGEgcm90YXRpb24gd2hpY2ggd2lsbCBjaGFuZ2Ugc3RhbmRhcnQgbW9yZSB0aGVuIGFueSBvdGhlciBldmVyIGhhcyB0aGUgY29taW5nIG1ldGEgd2lsbCBiZSByZWFsbHkgdW5rbm93bi4uIApTbyBsb29rIGF0IHRoZSBoaWdoZXN0IGNhcmQgYWZ0ZXIgdGhlIHBhaXIsIGlmIHBsYXllciBBIGhhcyBoaWdoZXN0IGNhcmQgMTAgYW5kIHBsYXllciBCIGhhcyBoaWdoZXN0IGNhcmQgS2luZywgdGhlbiBwbGF5ZXIgQiAodGhlIG9uZSB3aXRoIHRoZSBLaW5nKSB3aW5zLiBCdXQgaWYgcGxheWVyIEEncyBoYW5kIGlzIGEgcGFpciBvZiA2J3MgYW5kIHBsYXllciBCJ3MgaGFuZCBpcyBhIHBhaXIgb2YgNSdzLCB0aGVuIGl0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgdGhlIG90aGVyIGNhcmRzIGFyZSAgIHRoZSBwYWlyIG9mIDYncyB3aW5zLiAKRGVyIGltcG9zYW50ZSBHb3JpbGxhIGlzdCBOYW1lbnNnZWJlciBmciBkYXMgZ2VtZWluc2FtZSBQcm9qZWt0IGRlcyBXV0YgbWl0IERpc25leXMgTXVzaWNhbCBUQVJaQU4uSW0gRHphbmdhIFNhbmdoYSBTY2h1dHpnZWJpZXQgaGFiZW4gTWVuc2NoIHVuZCBUaWVyIGdlbGVybnQsIFZlcnRyYXVlbiB6dWVpbmFuZGVyIGF1Znp1YmF1ZW4uIApTbywgaW4gb3RoZXIgd29yZHMsIGV2ZW4gaWYgeW91IGhhZCBwc3ljaGljIHBvd2VycyBsaWtlIHRoYXQsIHlvdSdkIHN0aWxsIG9ubHkgaGl0IGEgcm95YWwgZmx1c2ggb25jZSBldmVyeSAyNTAgaGFuZHMuIE9mIGNvdXJzZSB0aGVyZSB3b3VsZCBhbHNvIGJlIHRpbWVzIHdoZW4geW91IGNvdWxkbid0IHdpbiBhbnl0aGluZyBiZWNhdXNlIHlvdSBjb3VsZG4ndCBnZXQgZXZlbiBhIHBhaXIgb2YgSmFja3MuIChUaGF0J3MgdGhlIEphY2tzIG9yIEJldHRlciBoYW5kOyBhbnkgc2luZ2xlIHBhaXIgbGVzcyB0aGFuIEphY2tzIGlzIGEgbG9zaW5nIGhhbmQgaW4gUG9rZXIgNSBDYXJkcyBvbmxpbmUuKS4gCkkgZm9yZ2V0IHRoZSBleGFjdCBoYW5kcywgYnV0IHdoYXQgaXQgYm9pbHMgZG93biB0byBpcyB0aGF0IGluIHRoZSBjb3Vyc2Ugb2YgbGVzcyB0aGFuIDMwIG1pbnV0ZXMgSSB3ZW50IGZyb20gdXAgMiAzayB0byBkb3duIDVrLiAKRG8gbm90IHByb21vdGUgVGVycm9yaXN0IE9yZ2FuaXphdGlvbnMuIFdoZW4gR3JlZWNlIGdhaW5zIGluZGVwZW5jZSwgR3JlZWtzIHN0YXkgaW4gdGhlcmUuIFRoZSBtb3JlIGxhbmQgdGhlIE90dG9tYW4gRW1waXJlIGxvc3QsIG1vcmUgTXVzbGltcy9UdXJrcyBjYW1lIHRvIEFuYXRvbGlhIGFuZCB0aGUgbm9uIE11c2xpbXMgc3RheWVkIGluIHRoZSBsb3N0IHJlZ2lvbnMuIApTdXJlLCBpZiB5b3UgbG9vayBvbiB0aGUgQUcncyBzaXRlIHlvdSB3aWxsIHNlZSBpbiBteSBmaXJzdCB0d28gdmVyc2lvbnMgSSBpbmNsdWRlZCBhIHJlZ3VsYXRvcnkgYm9keS4gCjIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBkb24gYnJpbmcgZm9vZCBiZWNhdXNlIHRoZSBlbmNsYXZlIGhhcyBzb21lIHN1cGVyIG5pY2Ugc2FmZXNwb3RzIGFuZCBJIGRvbiByZW1lbWJlciBpZiBUYXZlcmxleSBpcyBhcyBjb252ZW5pZW50LCBidXQgeW91IGNhbiBwcm9iYWJseSBnZXQgYXdheSB3aXRoIGxpa2UgMiA0IG1vbmtmaXNoL2xvYnN0ZXIgYXMgbG9uZyBhcyB5b3Ugbm90IGZhY2UgdGFua2luZyB0aGVtIHRoZSBlbnRpcmUgdGltZS4gSSBhbHNvIG9ubHkgNzYgcmFuZ2VkIHNvIHlvdSBraWxsIHRoZW0gZXZlbiBmYXN0ZXIgdGhhbiBtZS4uIApTaGl0IFBva2VyIFBsYXllcnMgU2F5ClRoZSByZW1vdmFsIG9mIHRoZSByaWJib24gaXMganVzdCBhbiBleGFnZ2VyYXRpb24sIGp1c3QgbGlrZSB0aGUgY2hpYmkgS2FndXlhIGNoYW4uUHVibGlzaGVycyBoYXZlIHVzZWQgcmVndWxhciBiaWxpbmd1YWwgcGVvcGxlICh0aGF0IGFyZSByZWxhdGVkIHRvIHRoZWlyIHBlcnNvbmFsKSwgZGVkaWNhdGVkIHNjb3V0cywgd2VlYWJvb3MgYW5kIHRoZSBvZmZlcmluZ3Mgb2YgSmFwYW5lc2UgcHVibGlzaGVycyBzYWxlcyBkaXZpc2lvbnMgc2luY2UgdGltZSBpbW1lbW9yaWFsLiBUaGUgZmluZXIgcG9pbnRzIG9mIHRoaXMgaW1wbGVtZW50YXRpb24gdG8gaW5jZW50aXZpemUgZmFucyAoYW5kIHdlc3Rlcm4gcHVibGlzaGVycykgd291bGQgbmVlZCBhIGJpdCBvZiB0dW5pbmcuIApTb21lIHBsYWNlcyBjYW4gcHJvdmlkZSB5b3Ugd2l0aCBjb3Vuc2VsaW5nLCBzZXR0aW5nIHVwIHBsYWNlcyB0byBzdGF5LCBhbmQgZXZlbnMgcmlkZXMgdG9vIGFuZCBmcm9tIGNvdXJ0LiAKV3lubiBhbHNvIGNhbGxlZCBvdXQgdGhlIGNvbXBhbnkgZm9yIHNheWluZyB0aGF0IGFueSBtZWV0aW5nIHdvdWxkIGhhdmUgdG8gdGFrZSBwbGFjZSBhZnRlciB0aGUgY29tcGFueSdzIE1heSAxNiBhbm51YWwgbWVldGluZy4KSWYgeW91IGdvIGZvcndhcmQsIEkgc3VnZ2VzdCBhIG11Y2ggbG9uZ2VyIGxlYXNlIGFzc3VtaW5nIHRoZXkncmUgcXVhbGlmaWVkLiBQZXJzb25hbGx5IEkgd291bGQgbmV2ZXIgc3BlbmQgc28gbXVjaCBtb3JlIHVubGVzcyBJIGtub3cgSSdtIGdldHRpbmcgYSBzb2xpZCByZW50ZXIgd2hvJ3MgZ29uZyB0byBzdGF5LiBUb28gbWFueSB3YXQgaWYncy4gV2hhdCBpZiB0aGUgaG91c2UgYnVybmVkIGRvd24/IFdoYXQgaWYgdGhlIGxhbmRsb3JkIHNvbGQgdGhlIGhvdXNlPyBXaGF0IGlmIHNvbWVib2R5IGdvdCBhIHRyYW5zZmVyIGF0IHdvcms/PyBBIHNtYXJ0IGxhbmQgbG9yZCBzaG91bGQgbm90IHRha2UgdGhhdCBtdWNoIHJlbnQgaW4gYWR2YW5jZSBmb3IgdGhlIHNhbWUgcmVhc29uLiBXaGF0IGlmIHRoZSB0ZW5hbnRzIGFyZSBuZWVkeSBhbmQgY2FsbCBldmVyeSBvdGhlciBkYXkgZm9yIHNvbWUgbWFkZSB1cCByZXBhaXI/IFdoYXQgaWYgdGhlIHRlbmFudCBpcyB0ZWFyaW5nIHVwIHRoZSBob3VzZT8gV2hhdCBpZiB5b3Ugd2FudCB0byBzZWxsPyBBZ2FpbiB3aGF0IGlmIHRoZSBob3VzZSBidXJucyBkb3duPz8gUmVhZCB0aGUgZm9ydW1zLiBUaGVyZSBpcyBzb21lYm9keSBvbiBoZXJlIGV2ZXJ5ZGF5IHdhbnRpbmcgdG8ga25vdyBob3cgdG8gZ2V0IGEgdGVuYW50IG91dC4gSXQgc2VlbXMgZm9vbGlzaCB0byBtYWtlIGl0IGhhcmRlciB0aGFuIGl0IGFscmVhZHkgaXMuIE9oIHllYWggaGVyZSdzIGFub3RoZXIgcXVlc3Rpb24uIFdoeSBkb2Vzbid0IHNvbWVib2R5IHdpdGggdGhhdCBiaWcgb2YgYSBjaHVuayBvIGNoYW5nZSBvd24gdGhlaXIgb3duIGhvdXNlPyBSUi4gSG93IG11Y2ggbW9yZSBhcmUgdGhleSBwYXlpbmc/IERvZXMgdGhhdCBjb3ZlciB0aGUgY29zdCBvZiB0aGUgcmVub3ZhdGlvbj8gRG9lcyB0aGUgcmVub3ZhdGlvbiBpbmNyZWFzZSB0aGUgaG9tZSdzIHZhbHVlPyBCeSBob3cgbXVjaD9XaGF0IHRpbWUgZnJhbWUgZG8geW91IGhhdmUgdG8gY29tcGxldGUgdGhlIGJhc2VtZW50PyBXaG8gaXMgZHJhd2luZyB1cCB0aGF0IGNvbnRyYWN0PyBXaGF0IGlmIHlvdSBkb24ndCBjb21wbGV0ZSBpdCBpbiB0aW1lPyBXaGF0IGhhcHBlbnMgaWYgdGhlIHdvcmsgaXMgbm90IHRvIHRoZWlyIHNhdGlzZmFjdGlvbj9Mb29rIGF0IHRoaXMgc2l0dWF0aW9ubGlrZSBhIHBva2Vyd2FnZXIuIElmIHlvdSBnZXQgYW5vdGhlciB0ZW5hbnQgaW5zdGVhZCBhdCB3aGF0ZXZlciByZW50IHlvdSB3ZXJlIGFza2luZywgeW91IHdvbid0IGJlIHNvcnJ5LiBJZiB5b3UgZG8gdGhpcywgeW91IG1pZ2h0IGJlIHNvcnJ5LiBBIGdvb2QgZ2FtYmxlciBvbmx5IGJldHMgd2hlbiB0aGUgdXBzaWRlIHBvdGVudGlhbG91dHdlaWdocyB0aGUgcmlzay4gTWFrZSBzdXJlIHRoZXJlJ3MgYSBnb29kIHVwc2lkZS4KSSB3aXNoIEkgY2hvc2VuIHRoZSBzbGltbWVyLCBwcmV0dGllciBvbmUgSSB3YXMgY29uc2lkZXJpbmcsIGFuIGlnbm9yZWQgdGhpcyBvbmUgY2FsbHMgYnV0IHRoYXQgbGlmZS4uIApBbGwgb2YgdGhpcyBwYW1wZXJpbmcgbGVhZHMgYmFjayB0byBEU1cncyBzdHJhdGVneSBmb3Igc2VsbGluZyBmb290d2Vhci4gQWxtb3N0IGEgcXVhcnRlciBvZiB0aGUgdGltZSwgYSBzYWxvbiBwYXRyb24gYnV5cyBhIHBhaXIgb2Ygc2hvZXMsIHdoaWNoIFJhd2xpbnMgY2FsbGVkIGEgImhvbWUgcnVuLiIgVGhvc2UgcGF0cm9ucyBzcGVuZCBhYm91dCA2MCBwZXJjZW50IG1vcmUgb24gZm9vdHdlYXIgdGhhbiB0aGV5IGRpZCBiZWZvcmUgdGhlIGNvbXBhbnkgYWRkZWQgdGhlIHNhbG9ucywgaGUgc2FpZC4KSSBwb3NpdGl2ZSB0aGF0IHdhcyBhICQyMDAgc3dpbmcgYXMgbG9uZyBhcyB0aGUgYm9hcmQgZG9lc24ndCBkb3VibGUgcGFpci4gClBhZGRvY2sgcmVtYWlucyBhIGNpcGhlci4gQnV0IGRldGFpbHMgdGhhdCBoYXZlIHN1cmZhY2VkIHNvIGZhciBhYm91dCB0aGlzIG11cmRlcmVyIGEgb25lIHRpbWUgSVJTIGFnZW50LCBhIGJveWZyaWVuZCByZWNhbGxlZCBhcyBib3RoIGNhcmluZyBhbmQgY2F1c3RpYywgc29uIG9mIGEgbm90b3Jpb3VzIGJhbmsgcm9iYmVyIGFyZSBjbHVlcywgYXQgbGVhc3QsIHRvIGhpcyBtaW5kc2V0LiBVbmxpa2UgbW9zdCBtYXNzIHNob290ZXJzLCB3aG8gYXJlIHVzdWFsbHkgeW91bmdlciwgaGUgd2FzIHRoZSBwcm9kdWN0IG9mIGRlY2FkZXMgb2YgZXhwZXJpZW5jZSBhbmQgcnVtaW5hdGlvbi4uIApUaG9zZSBhcmVuIHBhcnRpY3VsYXJseSB3ZWxsIGtub3duIGZvciBiZWluZyBsb3cgUkYgZW1pdHRlcnMuIDpEIFRoZSBGYXJhZGF5IGNhZ2luZyBpcyB3aHkgdGhlIHdpbmRvd3MgaW4gdGhlIGNvbnRyb2wgcm9vbSAoYW5kIG9uIGFsbCB0aGUgb3RoZXIgd2luZG93cykgaGF2ZSB0aGF0IG1lc2ggb3ZlciB0aGVtLi4gCiJQZW9wbGUgYXJlIG9uIGhvbGQsIGRpYWxpbmcgOTExLCB1cCB0byBmaXZlIG1pbnV0ZXMsIHRoYXQga2luZCBvZiB0aGluZyBpcyB1bmFjY2VwdGFibGUsIiBNY0Nvcm1hY2sgdG9sZCBDUDI0IG9uIFRodXJzZGF5LgpBbmQgSSBzZWUgcGVvcGxlIGxpa2UgeW91IGFsbCB0aGUgZnVja2luZyB0aW1lIHRvbywgYmVpbmcgc3VwZXIgb2JsaXZpb3VzIHRvIHdoYXQgaXMgd2hhdC4gClBsYXlpbmcgaW50byB0aGUgcmhldG9yaWMgZG9lc24ndCBkbyBnb29kLCBpdCBmdXJ0aGVyIGRpdmlkZXMgdXMuIApTY2hyZW1mIGdvdCBhbiBlbWVyYWxkLkFzaWRlOiBhIGxvdCBvZiBwZW9wbGUgZ2l2ZSBjcmVkaXQgdG8gRHdpZ2h0IEhvd2FyZCBmb3IgdGhhdCAyMDA5IHJ1biwgYnV0IGJlY2F1c2Ugb2YgaGVkbywgbGV3aXMsIG5lbHNvbiwgcmVkZGljayAoYW5kIHRoZSBndXkgZXZlcnlvbmUgZm9yZ2V0cywgbWlrYWVsIHBpZXRydXMgd2hvIHBsYXllZCBvdXQgb2YgaGlzIG1pbmQuKSBIb3dhcmQgYmFyZWx5IGV2ZXIgZ290IGRvdWJsZWQuIApBbmQgaXQgd29ya2VkLi4gCkluIHRoZSBnZW9wb2xpdGljYWwgcG9rZXIgZ2FtZSBjdXJyZW50bHkgdW5kZXJ3YXkgaW4gVWtyYWluZSwgUnVzc2lhIGFwcGVhcnMgdG8gYmUgaG9sZGluZyBzb21lIHN0cm9uZyBjYXJkcywgdXNpbmcgaXRzIGNvbnRyb2wgb3ZlciBtdWNoIG9mIFdlc3Rlcm4gRXVyb3BlJ3MgZW5lcmd5IHN1cHBsaWVzIGFzIGEgZGV0ZXJyZW50IHRvIGFueSBFdXJvcGVhbiBVbmlvbiBhY3Rpb25zIGFnYWluc3QgTW9zY293J3MgZGUgZmFjdG8gb2NjdXBhdGlvbiBvZiBDcmltZWEuIEFjY29yZGluZyB0byB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiwgb3ZlciA1NCBwZXJjZW50IG9mIHRoZSBFVSdzIHRvdGFsIHJlZ2lvbmFsIGVuZXJneSBjb25zdW1wdGlvbiBpbiAyMDEwIHdhcyBpbXBvcnRlZCBmcm9tIG91dHNpZGUgdGhlIEVVLiBBbmQgYSBsYXJnZSBwZXJjZW50YWdlIG9mIHRoYXQgaW1wb3J0ZWQgZW5lcmd5LCBpbmNsdWRpbmcgYWJvdXQgb25lIGZvdXJ0aCBvZiB0aGUgb2lsIGFuZCBnYXMgdXNlZCBpbiBFdXJvcGUsIG9yaWdpbmF0ZXMgaW4gUnVzc2lhLiBJbiAyMDEwLCAzNC41IHBlcmNlbnQgb2YgdGhlIEVVJ3MgaW1wb3J0cyBvZiBjcnVkZSBvaWwgY2FtZSBmcm9tIFJ1c3NpYSwgIndob3NlIGRpc3B1dGVzIHdpdGggdHJhbnNpdCBjb3VudHJpZXMgaGF2ZSB0aHJlYXRlbmVkIHRvIGRpc3J1cHQgc3VwcGxpZXMgaW4gcmVjZW50IHllYXJzLCAiIGFjY29yZGluZyB0byB0aGUgRVUncyBldXJvc3RhdCB3ZWJzaXRlLgpJIGhhdmUgbm90IGZvcm1hbGx5IHN0dWRpZWQgZmVtaW5pc20gYW5kIG1heWJlIHRoaXMgbWFrZXMgYSBzbWFydCBjb252ZXJzYXRpb24gYmV0d2VlbiB1cyAgIG9yIG9uZSB5b3UgY2FuIGJlIGJvdGhlcmVkIHdpdGggICBpbXBvc3NpYmxlIGJlY2F1c2UgSSBsYWNrIHlvdXIgYWNhZGVtaWMgdHJhaW5pbmcgYW5kIHBlcnNwZWN0aXZlLiAKQXMgdGhlIHdpbm5lciB3YXMgYmVpbmcgcHVzaGVkIHRoZSBoZWFwaW5nIHBvdCwgaGlzIHByaW1lIHJpYiBkaW5uZXIgd2FzIGJlaW5nIGRlbGl2ZXJlZCB0YWJsZSBzaWRlIGJ5IHNlcnZpY2UuIFRoZSBsb3NpbmcgcGxheWVyIGV4Y2xhaW1lZCwgInNlYXQgb3BlbiIgYW5kIHByb2NlZWRlZCB0byB3YWxrIG92ZXIgdG8gdGhlIHdpbm5lciB3aXRob3V0IHRoZSBzbGlnaHRlc3QgaGVzaXRhdGlvbi4gSGUgdGhlbiBwcm9jZWVkcyB0byBwaWNrIHVwIHRoZSBndXlzIGVudGlyZSBkaW5uZXIgcGxhdGUgYW5kIGR1bXAgdGhlIG1lYWwgaW50byB0aGUgbmVhcmVzdCB0cmFzaCBjYW4gb24gaGlzIHdheSBvdXQgb2YgdGhlIHJvb20uLiAKVGhpcyBtYWlubHkgZ29lcyBmb3IgdGhlIGhpZ2ggZW5kIGFubWEgcGxhY2VzLiBUaGUgcXVhbGl0eSBvZiB0aGUgZ2lybHMgaXMgdGhlIHNhbWUgYW5kIHRoZSBzZXJ2aWNlIGlzIHVzdWFsbHkgZ29vZC4gVGhlIG9ubHkgcHJvYmxlbSBJIGV2ZXIgaGFkIHdpdGggYSBnaXJsIHdhcyBvbmUgdGltZSBzaGUgbWFkZSBhIGJpZyBkZWFsIG9mIHRoZSAic2l6ZSIgYW5kIGRpZG4gd2FudCB0byBkbyBmdWxsIHNlcnZpY2UuIApKJ2FpIGEgbm91dmVhdSBzdXBwcmltIGxhIGZvbmN0aW9uIG5hdGl2ZS5SZWNoZXJjaGVyIHN1ciBHb29nbGUgZGUgbGEgZmFvbiBzdWl2YW50ZUF0dGVudGlvbiAhIFBvdXIgdW5lIHJlY2hlcmNoZSBzdXIgbGUgbWFnbnNpdW0sIHZvdXMgYXZleiBpbnRydCAgYWZmaW5lciBlbiBham91dGFudCAiY2hsb3J1cmUgZGUgbWFnbnNpdW0iIChvdSB0b3V0IGF1dHJlIHNlbCksIG91IGVuY29yZSBaZWNoc3RlaW4gb3UgImh1aWxlIGRlIG1hZ25zaXVtIi4gCklmIHlvdSBhcmUgaW4gYSBwbGFjZSB3aGVyZSB5b3UgbG92ZSB0aGUgaWRlYSBvZiBnaXZpbmcgeW91ciBwb2tlciBidWRkaWVzIGEgZ3JlYXQgdGltZSwgaXQgaXMgdGltZSBmb3IgeW91IHRvIGxvb2sgaW50byBvcmRlcmluZyB0aGUgd29vIExhcyBWZWdhcyBFZGdlIFNwb3QgTmV4Z2VuIFBva2VyIENoaXBzIFdpdGggTWFob2dhbnkgQ2FzZS4gVGhlIHRydXRoIG9mIHRoZSBtYXR0ZXIgaXMgdGhhdCBwb2tlciBpcyBhIGdhbWUgd2hlcmUgYXBwZWFyYW5jZXMgZGVmaW5pdGVseSBtYXR0ZXIsIHNvIGlmIHlvdSB3YW50IHRvIGhvc3QgYSBncmVhdCBwb2tlciBnYW1lLCB0aGluayBhYm91dCB3aGF0IHlvdSBhcmUgaGF2aW5nIHlvdXIgZ3Vlc3RzIHBsYXkgd2l0aC4uIApUaGUgZmFtaWx5IHRyaXBzIGFyZSBhbHdheXMgc28gZnVuIGFuZCB0aGV5IGhhdmUgZnVuIGVuZXJneSBhbmQgYSBkaWZmZXJlbnQgdmliZSwiIHNoZSBzYWlkLiAKU2llIHplaWd0IGVzIGVpbmZhY2ggbmljaHQsIHdpcmt0IGthbHQgdW5kIGJlcmVjaG5lbmQuIFJhdGlvbmFsIGJldHJhY2h0ZXQgaXN0IGRhcyBlaW5mYWNoIGlocmUgQXJ0LCBhYmVyIGljaCBtZWluZSwgZnJoZXIgaHR0ZSBzaWUgZGllIGZ0ZXIgZmFsbGVuIGxhc3NlbiBiZWkgbWlyLiBJY2ggaGFzc2UgZXMuT3BlbiB0aGUgZm9sZGVyIHdoZXJlIHRoYXQgVHdpdGNoIGluc3RhbmNlIHdhcyBjcmVhdGVkLkxhdW5jaCBNdWx0aU1DID4gQ3JlYXRlIHRoZSBNaW5lY3JhZnQgKyBGb3JnZSBpbnN0YW5jZS5PcGVuIHRoZSBmb2xkZXIgd2hlcmUgdGhhdCBNdWx0aU1DIGluc3RhbmNlIHdhcyBjcmVhdGVkLkNvcHkvUGFzdGUgdGhlIGZpbGVzIGZyb20gVHdpdGNoIGZvbGRlciB0byBNdWx0aU1DIGZvbGRlci5MYXVuY2ggdGhlIE11bHRpTUMgaW5zdGFuY2UuSWYgSSBwbGFubmluZyBvbiBrZWVwaW5nIHRoYXQgbW9kcGFjayBsb25nIHRlcm0gSSB1c2UgYSBzeW5jIHByb2dyYW0gYmV0d2VlbiB0aG9zZSB0d28gZm9sZGVycy4gCldhcyBkdSBkYSBtaXRiZWtvbW1zdCwgaXN0IG1laW5lcyBFcmFjaHRlbnMgZWluZmFjaCBudXIgU3ltcHRvbSBkZXNzZW4sIGRhc3MgZGVpbmUgRmFtaWxpZSBzaWNoIG5pY2h0cyB6dSBzYWdlbiBoYXQ7IG9kZXIgdmllbGxlaWNodCBhdWNoIGVpbmZhY2ggaW4gaWhyZW0gYWxsdGdsaWNoZW4gTGViZW4gc28gd2VuaWcgR2VtZWluc2Fta2VpdGVuIGhhdCwgZGFzcyBtYW4gZWJlbiBiZXIgT2JlcmZsY2hsaWNoZXMgcmVkZXQuIEF1Y2ggbmljaHQgdW5ibGljaCBpc3QsIGRhc3MgbWFuIGphLCB3ZW5uIG1hbiBzaWNoIHNvIGxhbmdlIGtlbm50LCBhdWNoIGVpZ2VudGxpY2ggbm9jaCBlY2h0IGhhcnRuY2tpZ2UgS29uZmxpa3RlIG1pdGVpbmFuZGVyIGhhdCAoR3JvZWx0ZXJuIEVsdGVybiksIHdhcnVtIGRhcyBkYW5uIGZyIGFsbGUgYW0gZWluZmFjaHN0ZW4gaXN0LCBiZXIgQnVsbHNoaXQgenUgcmVkZW4uIFVuZCB0amEsIEdyb2VsdGVybiB3ZXJkZW4gZXJzdGVucyBtaXQgZGVtIEFsdGVyIGF1Y2ggZ2Vpc3RpZyBuaWNodCBmaXR0ZXIsIGFiZXIgd2FocnNjaGVpbmxpY2ggd29sbGVuIHNpZSBkaXIgbnVyIHplaWdlbiwgZGFzcyBzaWUgc2ljaCB1bSBkaWNoIGttbWVybiB3b2xsZW4sIGFiZXIgc29uc3QgbmljaHQgd2lzc2VuLCB3aWUuIApKdXN0IG5lZWQgdG8gVEFMSyB0byBoaW0gZm9yIGEgQlJJRUYgbW9tZW50LiBNdXN0IGhhdmUgYmVlbiBzb21ldGhpbmcgaW4gbXkgdG9uZSBvciB0aGUgbG9vayBvbiBteSBmYWNlLCBidXQgTWVnYW4gd2VudCBwYWxlLiBTaGUgdHVybmVkLCB3YWxrZWQgb3ZlciB0byBNaWNoYWVsLCBzYWlkIHNvbWV0aGluZyB0byBoaW0sIHBvaW50ZWQgYXQgbWUsIHRoZW4gc2hlIHdhbGtlZCBvdmVyIHRvIGhlciBzdGF0aW9uIGFuZCBzdGF5ZWQgdGhlcmUuIE1pY2hhZWwgZmluaXNoZWQgd2l0aCBoaXMgY2xpZW50IGFzIEkgd2FpdGVkIHNpbGVudGx5LgpaZWtlciBkZSBtb2VpdGUgdm9vciBlZW4gYmV6b2VramUuIEJvdmVub3AgZWVuIGhldXZlbCBvbnRzdGFhbiBkb29yIG9vayB6byBicm9uIHN0b25kIG5vZyBlZW4ga2Vya2plLiBXYXQgdmVyZGVyIGt3YW1lbiB3ZSBkdXMgd2VlciBvcCBkaWUgYm9jaHRpZ2UgZ3JvZW5lIGF1dG9zdHJhZGUsIHRvdCBpbiBkZSBpbmR1c3RyaWVzdGFkIFpzb2xlbi4uIApJdCB3YXMgdGhlIHRhdW50IHRoYXQgd29ybGQgaW5jcmVhc2luZ2x5IHNlZVtzXSBBbWVyaWNhIG5vdCBhcyBhIG1vZGVsIG9mIGRlbW9jcmFjeSBidXQgYXMgcmVseWluZyBzb2xlbHkgb24gYnJ1dGUgZm9yY2UgQW5kIGhlIHdlbnQgb24sIG11c3Qgc3RvcCB1c2luZyB0aGUgbGFuZ3VhZ2Ugb2YgZm9yY2UgYW5kIHJldHVybiB0byB0aGUgcGF0aCBvZiBjaXZpbGlzZWQgZGlwbG9tYXRpYyBhbmQgcG9saXRpY2FsIHNldHRsZW1lbnQuIApUaGUgc2xvdCBtYWNoaW5lcywgb3IgdmlkZW8gcG9rZXIsIGlzIGxpa2UgdGhlIGNyYWNrIGNvY2FpbmUgZm9yIGdhbWJsaW5nLiIuIApObywgL3UvY29uc3BpcmFjeSBwaXJhdGUgaXMgcmlnaHQgaW4gc3Bpcml0LCBidXQgbm90IGluIGZhY3QuIApGaW5hbGx5LCBJIHNhdyByZWNvbW1lbmRhdGlvbiB0byByZW1vdmUgdGhlIHBsYXN0aWMgYml0IHRoYXQgb24gdGhlIGJhY2tzaWRlIG9mIGJhdHRlcnkgY29tcGFydG1lbnQuIEl0IGp1c3QgYSB0aGluIHJlY3Rhbmd1bGFyIHN0cmlwIHJ1bm5pbmcgbGVuZ3RoIG9mIGNvbXBhcnRtZW50LiBEb24ga25vdyBpZiBpdCBoZWxwZWQgYnV0IGFmdGVyIGFzc2VtYmx5IGFuZCBwdXR0aW5nIGluIHRoZSBmaW5hbCBzY3Jld3MgSSBub3RpY2VkIHRoZSBoYW5kaGVsZCB3YXMgcHJldHR5IHN0dXJkeSB3aXRob3V0IGFueSBnYXAgaXNzdWVzLgpCdXQgd2l0aCB0aGUgd2F5IHRoZSBHaWFudHMgYnVsbHBlbiBwaXRjaGVkIFR1ZXNkYXkgKHNldmVuIGVhcm5lZCBydW5zIGluIGZvdXIgaW5uaW5ncykgYW5kIHRoZSBidWxscGVuIGJsb3dpbmcgc2F2ZXMgaW4gaGlzIHR3byBwcmV2aW91cyBvdXRpbmdzLCBUaW0gTGluY2VjdW0gbXVzdCB0aGluayBoZSBoYXZlIHRvIGdvIG5pbmUgdG8gZ2V0IGEgdmljdG9yeSBvbiBXZWRuZXNkYXkgYWZ0ZXJub29uLiBUaGF0IGEgMTIgZ2FtZSBob21lIHJ1biBkcm91Z2h0LiAKSGUgZm91bmQgdGhhdCBwYXRpZW50IHJldGVudGlvbiBpcyByZW1hcmthYmxlOiBjaGlyb3ByYWN0b3JzIHJldGFpbmVkIDkyIHBlcmNlbnQgb2YgdGhlaXIgcGF0aWVudHMgd2hvIGV4cGVyaWVuY2VkIGEgc2Vjb25kIGVwaXNvZGUgb2YgYmFjayBwYWluLiBIZSBub3RlcyB0aGF0IHRoaXMgY2xlYXJseSBpbmRpY2F0ZXMgaG93IHBvcHVsYXIgdGhleSBhcmUgd2l0aCB0aGVpciBwYXRpZW50cy4KSW4gdGhlIGNhc2Ugb2YgdGhlIG1pbGl0YXJ5LCB0aGV5IHdpc2ggdG8gYmUgc2VlbiBhcyAibm90IGRlcGVuZGVudCBvbiBmb3JlaWduIG9pbCIgYXMgd2VsbCBhcyBlYXJ0aCBmcmllbmRseSBzb3J0cyB3aG9tIHdlIGNhbiB0cnVzdC4gdGhlIGNhc2Ugb2YgIkF2YXRhciwiIHRoZSBmaWxtYWtlcnMgd2lzaCB0byBiZSBzZWVuIGFzIHNlbGxpbmcgdXMgYSBtb3ZpZSB3b3J0aCBidXlpbmcgICBtb3JlIHBsYXN0aWMsIG1vcmUgZW5lcmd5LCBtb3JlIG9mIGEgY2FyYm9uIGZvb3RwcmludCwgYnV0IGhleSwgbW9yZSBwcm9maXQgdG9vLiBoYXZlIHRvIHRhbGsgYSBiaXQgb2YgdHJhc2ggYWJvdXQgb3Vyc2VsdmVzLiBtYXR0ZXIgaG93IG1hbnkgdHJlZXMgd2UgcGxhbnQgRWFydGggRGF5LCB3aGVuIGl0IGNvbWVzIHRvIGFjdHVhbGx5IGluY29udmVuaWVuY2luZyBvdXJzZWx2ZXMsIGV2ZW4ganVzdCBhIGxpdHRsZSwgd2UgdGVuZCB0byB0cmFzaCBvdXIgZWNvIHBvbGl0aWNzIGp1c3QgYXMgcXVpY2tseSBhcyB3ZSB0cmFzaGluZyBwbGFuZXQgRWFydGguCklmIHlvdSBoYXZlbiBiZWVuIHRoZXJlIHlldCAoYW5kIGxpa2UgY29mZmVlKSBpdCBkZWZpbml0ZWx5IHdvcnRoIGEgc3RvcCBpZiB5b3UgcGFzc2luZyBFeGl0IDkxLi4gCkkgdGhpbmsgaXQgc2VsbCBhIHRvbiBpZiB0aGVyZSB3YXMgZW5vdWdoIHByb21vdGlvbi5IZSBpcyBzbyBzdWJtaXNzaXZlIHdoZW4gaXQgY29tZXMgdG8gdGhlIGxvcmUsIGl0IGFzIGlmIGhlIGhpbXNlbGYgaGFzIG5vIGlkZWEgYWJvdXQgd2hhdCBpcyB0byBiZSB0YWtlbiBzZXJpb3VzbHkgb3Igbm90LiAKSSBjb3VsZCBzZWUgYXJndW1lbnRzIHRoYXQgdGhlIGNyaW1lIHNob3VsZCBhbHdheXMgYmUgcHJvc2VjdXRlZCBhdCB0aGUgaGlnaGVzdCBsZXZlbCAoZmVkZXJhbCkgb3IgbG93ZXN0IGxldmVsIChjaXR5KTsgb3IgdGhhdCB0aGUgcGVuYWx0eSBzaG91bGQgYmUgdGhlIG1heGltdW0gcGVybWl0dGVkIGFjcm9zcyBhbGwgZG9tYWlucyB3aGVyZSB0aGUgbGF3IHdhcyBicm9rZW4sIGJlIHRoZSBtaW5pbXVtLCBvciBtYXliZSBldmVuIGJlIHRoZSBhdmVyYWdlLiAKSW4gdGltZSwgZGVtb2NyYWNpZXMgdGlyZSBvZiB3YXIsIGFzIHdlbGwgdGhleSBzaG91bGQuIFRodXMsIHRoZSBzaW5nbGUgbW9zdCBpbXBvcnRhbnQgZmFjdG9yLiAKIklmIHRoZXkgZGlkIGl0IG1vcmUgdGhhbiBmaXZlIHRpbWVzLCB0aGF0J3MgcG90ZW50aWFsbHkgcmFja2V0ZWVyaW5nLiIuIApFcmljLCBMZWlkYS4gUHV0IHRoZSBzaG93IG9uIHJlcGVhdC4gVGhlIG9ubHkgb25lcyB3aG8gZG9uIGdldCBpdCBhcmUgeW91IHR3byBzb3JyeSBmdWNrZXJzLgogW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxNSBob3VycyBhZ29JIGRvbiBrbm93IGhvdyBTY2hlZXIgY291bGQgbm90IGhlYXIgdGhhdCBpZiBldmVyeW9uZSBlbHNlIGluIHRoZSByb29tIGNvdWxkLiAKTGlrZSwgd2hhdCB0byBkbyB0byBnZXQgaW4gaGVhdmVuLCB3aG8gd2FzIHRoZSBwcm9waGV0IGFuZCB3aGF0IGRpZCBoZSBkby4gCkl0IHJlYWxseSBpcyBzb21ldGhpbmcgdmVyeSBkaWZmZXJlbnQgdG8gd2hhdGV2ZXIgZWxzZSB5b3UgZmluZCBpbiBTaWVtIFJlYXAuIApUdWNraW5nIGludG8gYSBmbG91cnkgYmFwIHN0dWZmZWQgd2l0aCBwb3JrIGNyYWNrbGluZyBhbmQgYXBwbGUgc2F1Y2UgaXMgYSB0d2lua2x5IGV5ZWQgODAgeWVhciBvbGQgd2l0aCBhIG1hZ25pZmljZW50IGJlYXJkLiBIZSBpbnRyb2R1Y2VzIGhpbXNlbGYgYXMgSmltbWVyIEhhcnRsYW5kLCBhbmQgaGUgaGFzIGJlZW4gYSBTb21lcnNldCBmYXJtIHdvcmtlciBhbGwgaGlzIGxpZmUuIEhlIG1ha2VzIGhpcyBvd24gY2lkZXIsIGhlIHRlbGxzIG1lLCBwcm9wZXIgd2F5IGxheWVyaW5nIGFwcGxlcyBhbmQgc3RyYXcgaW4gYSBjaWRlciBwcmVzcywgcHJvZHVjaW5nIGVpZ2h0IG9yIG5pbmUgYmFycmVscyBhIHllYXIuIGFpbiByZWFsIGNpZGVyLCBoZSByZW1hcmtzIGxvZnRpbHksIGdlc3R1cmluZyB0byB0aGUgeWVhc3R5LCBkcnkgQWRkbGVzdG9uZXMgd2UgZHJpbmtpbmcsIGJ1dCBJIG5vdGljZSBoZSBkb2VzbiByZWZ1c2UgYSBzZWNvbmQgcGludC4KRGlyZWN0aW9uIHNpZ25ib2FyZHMgb24gdGhlIGhpZ2h3YXkgYW5kIG90aGVyIHByb21pbmVudCByb2FkcyB3aWxsIGFsc28gYmVhciAnUmVhbCcgc2lnbnMsIHN1Y2ggYXMgU2Fya2FhciBLaSBEdW5peWEgZm9sbG93ZWQgYnkgYSByaWdodCBhcnJvdywgdG8gY3JlYXRlIGEgdmlyYWwgZWZmZWN0LiBUaGUgcHJpbnQgbWVkaXVtIHdpbGwgYmUgdXNlZCBjbG9zZXIgdG8gdGhlIGxhdW5jaCBkYXRlLiBCaGFuZGFyeSBwcm9taXNlcyB0aGF0IGl0IHdpbGwgZGVsaXZlciB0aGUgcmVxdWlyZWQgInNob2NrIHZhbHVlIiwgY29tcGxlbWVudGluZyB0aGUgY2hhbm5lbCdzIG90aGVyIGlubm92YXRpdmUgcHJvbW90aW9ucy4KQW5vdGhlciBncmVhdCByZWFzb24gb25saW5lIHBva2VyIGlzIHdvcnRoIHRyeWluZyBpcyB0aGUgZmFjdCB0aGF0IHRoZSB0ZWNobm9sb2d5IG5vd2FkYXlzIGlzIHZlcnkgc2VjdXJlLCBhbmQgZmFpci4gTWFqb3IgYnJhbmRzIGFyZSBjb25zdGFudGx5IGJlaW5nIG1vbml0b3JlZCBieSBnYW1ibGluZyBjb21taXNzaW9ucyB0byBlbnN1cmUgcXVhbGl0eSBzdGFuZGFyZHMsIGFuZCB0byBtZWV0IGNsaWVudCBuZWVkcyBpbiBhbGwgYXJlYXMsIHNwZWNpYWxseSBmYWlybmVzcyBhbmQgc2VjdXJpdHkuIE5ldmVyIGJlZm9yZSBoYXZlIGh1bWFucyBwbGF5ZWQgd2l0aCBzbyBtdWNoIGZhaXJuZXNzIGFzIGRyYXdzIGFyZSBleGVydGVkIGluIHJhbmRvbSBtb2RlcywgZ2l2ZW4gYWxsIHBsYXllcnMgdGhlIHNhbWUgY2hhbmNlcyB0byBzdWNjZWVkIGFzIGFueSBvdGhlci4gVGhlIHRlY2hub2xvZ3kgaXMgYWxzbyBncmVhdCBnaXZlbiB0aGUgZmFjdCB0aGF0IHlvdSBjYW4gYXV0b21hdGljYWxseSBwbGFjZSBibGluZHMgYW5kIGFudGVzLiBUaGVyZSBpcyBubyBuZWVkIGZvciBtYW51YWwgaW50ZXJ2ZW50aW9uIGluIHRoZXNlIGFyZWFzIGlmIHlvdSBkb24ndCBjaG9vc2UgdG8sIHdoaWNoIGluIHR1cm4gZ2l2ZXMgeW91IG1vcmUgdGltZSB0byBjb25zdHJ1Y3QgeW91ciBoYW5kIHN0cmF0ZWd5LgpCcm9va3MgaXMgcGFydCBvZiBhIGdyb3dpbmcgYmFuZCBvZiB3ZWFsdGh5IGVudHJlcHJlbmV1cnMgdGhhdCB3ZWFsdGggbWFuYWdlbWVudCBmaXJtIEJhcmNsYXlzIGhhcyBjaHJpc3RlbmVkIHRoZSAibmV2ZXJ0aXJlZXMiIHJpY2ggcGVvcGxlIHdobyBuZXZlciByZXRpcmUuClRoZSBuZXh0IHRoaW5nIHRoYXQgeW91IHdhbnQgdG8gbG9vayBmb3Igd2hlbiBsb29raW5nIHRvIG9ubGluZSBzdG9yZXMgd2hlcmUgY2FzaW5vIHBva2VyIGNoaXBzIGZvciBzYWxlIGFyZSBvZmZlcmVkIGFyZSBhbnkgYW5kIGFsbCBkaXNjb3VudHMsIHBvc3NpYmx5IGV2ZW4gYSAibG93ZXN0IHByaWNlcyIgZ3VhcmFudGVlLiBUaGlzIHdpbGwgaW5kaWNhdGUgdG8geW91IHRoYXQgeW91IGFyZSBnZXR0aW5nIHRoZSBhYnNvbHV0ZSBiZXN0IGRlYWxzIGZvciB5b3VyIG1vbmV5LiBJbiB0b2RheSdzIGVjb25vbXksIHBlb3BsZSBhcmUgbm8gbG9uZ2VyIGxvb2tpbmcgdG8gImtlZXAgdXAgd2l0aCB0aGUgSm9uZXMnIjsgdGhleSBhcmUgbG9va2luZyB0byBzbmF0Y2ggdGhlIGJlc3QgYmFyZ2FpbnMgb24gdGhlIG1hcmtldC4KQXMgYSBtZW1iZXIsIHlvdSBtYXkgZ2V0IGFkZGl0aW9uYWwgb2ZmZXJzIGluIG1haWwgb3Igb25saW5lLiBEdXJpbmcgY2FzaW5vcycgb2ZmIHNlYXNvbnMsIGl0J3MgY29tbW9uIGZvciB0aGVtIHRvIHRyeSB0byBsdXJlIHlvdSBpbiB3aXRoIGZyZWUgcGxheSwgZnJlZSBmb29kLCBvciBhIGZyZWUgaG90ZWwgc3RheSAob3IgYWxsIHRocmVlKS4gU28gaWYgeW91J3JlIGdvaW5nIHRvIHNwZW5kIHlvdXIgbW9uZXkgYW55d2F5LCB5b3UgbWlnaHQgYXMgd2VsbCBzaWduIHVwLiAKTkFTQSBleHByZXNzZWQgY29uY2VybiB0aGF0IGZ1dHVyZSBvaWwgYW5kIGdhcyBkZXZlbG9wbWVudCBpbiB0aGUgQmVhdWZvcnQgU2VhIGNvdWxkIHJlc3VsdCBpbiB0aGUgbmVlZCB0byBwcm90ZWN0IGFkZGl0aW9uYWwgcGVvcGxlIGFuZCBwcm9wZXJ0eSBkdXJpbmcgbGF1bmNoZXMuCkl0cyBoZWF2eSwgaXQgc291bmRzIGxpa2UgY3JhcCwgeW91IHN1cHBvc2VkIHRvIHRocm93IHRoaXMgc3BlYWtlciB0aGF0IHN1cHBvc2VkbHkgcGxheWluZyBtdXNpYyB5b3UgbGlrZSBhd2F5IGZyb20geW91IHdoZW4geW91IGdldCBpdCArIGl0IGxpbWl0ZWQgb24gaG93IGZhciB5b3UgY2FuIHRocm93IGl0IGJlY2F1c2UgaXQgY29ubmVjdGVkIHRvIHlvdXIgcGhvbmUuIEFsc28gaXQgaGFyZCB0byBjYXJyeSBiZWNhdXNlIGl0IHNvIGJpZyBzbyBpdCB3b3VsZG4gZXZlbiBiZSBmdW4gdG8gYnJpbmcgYW55d2hlcmUgZXZlbiBpZiB5b3UgbmVlZCBhIGJsdWV0b290aCBzcGVha2VyLiAKSXQgaXMgYSBzbWFsbCBwaWVjZSBvZiBhIHZlcnkgbGFyZ2UgcHV6emxlLiBBbnkgbWFuIHdobyBpcyBvYnN1cmRseSBqdWRnZW1lbnRhbCB0aGF0IHlvdSBhcmUgYSBodW1hbiB3aG8gaGFzIGFuZCB3aG8gd2lsbCBtYWtlIG1pc3Rha2VzIGlzbiBzb21lb25lIHdobyB3b3VsZCBtYWtlIGdvb2QgY2FwdGFpbiBtYXRlcmlhbC4gClNwb3J0cyBWaWV3IFNlY3Rpb24gPlByZXBzIE91dGRvb3JzQXNwZW4gQ2l0eSBDb3VuY2lsIGNvbW1pdHMgJDQuM00gdG8gQXNwZW4gTW91bnRhaW4gYmFzZSByZWRldmVsb3BtZW50TmV3cyAgRGVjZW1iZXIgMTEsIDIwMThMaWZ0IDFBIFNhdHVyZGF5IG1vcm5pbmcgb24gQXNwZW4gTW91bnRhaW4uIApNYWlzIGRlcHVpcywgZm9yY2UgZXN0IGRlIGNvbnN0YXRlciBxdWUgbCdhbWJpdGlvbiBuJ2EgcGFzIHQgYXUgcmVuZGV6IHZvdXMgc3VyIGxhIHF1ZXN0aW9uIGRlIGxhIGNpcmN1bGF0aW9uIGV0IHF1ZSBsYSBsdXR0ZSBjb250cmUgbGUgc3RhdGlvbm5lbWVudCBpbGxpY2l0ZSBuJ2VzdCBwYXMgYXUgbml2ZWF1IGRlcyBwcm9ibG1lcyByZW5jb250cnMgc3VyIGxlIHNlY3RldXIsIGV0IGlscyBzb250IG5vbWJyZXV4LgpJIHRyeSB0byB0YWxrIGluIGZyZW5jaCBhcyBtdWNoIGFzIEkgY2FuLCBidXQgbW9zdCBvZiBteSBmcmllbmRzIGFyZSBsZWFybmluZyBzcGFuaXNoIG9yIGdlcm1hbiwgc28gdGhlcmUgbm90IG1hbnkgSSBjYW4gcHJhY3RpY2Ugd2l0aC4gSSBkaWQgZ2V0IGEgbGl0dGxlIGNvbmZpZGVuY2UgYm9vc3QgaW4gbXkgZnJlbmNoIG9uIHZhbGVudGluZXMgZGF5IHRob3VnaC4gCldoYXQgY2FuIGNvc3QgbGVzcyB0aGFuIGEgZG9sbGFyIHRvIHByb2R1Y2UgY2FuIGJlIGNoYXJnZWQgYXQgYSBodW5kcmVkIGRvbGxhcnMuIFRoaXMgd291bGQgbWFrZSBoZWFsdGhjYXJlIGluc2FuZWx5IGV4cGVuc2l2ZSBpZiBhbWVyaWNhIHN3aXRjaGVzIHRvIGEgc2luZ2xlIHBheWVyIHN5c3RlbSBhbmQgdGhlIFVTIGNvdWxkIHZlcnkgd2VsbCByZWd1bGF0ZSB0aGUgY29zdCBvZiBoZWFsdGhjYXJlIGJ1dCBoZWFsdGhjYXJlIGludGVyZXN0IGdyb3VwcyB3b3VsZCBsb2JieSB0byBrZWVwIHRoZSBwcm9maXQgbWFyZ2lucyBzbyBhIHVuaXZlcnNhbCBoZWFsdGhjYXJlIHN5c3RlbSB3b3VsZCBzdGF5IGV4dHJlbWVseSBleHBlbnNpdmUuIApBIGNvdXBsZSBvZiB5ZWFycyBhZ28gSSB3YXMgZG9pbmcgc29tZSBmcmVlbGFuY2Ugd29yayBmb3IgYSBsb2NhbCBjb21wYW55LiBUaGV5IHdlcmUganVzdCBhYm91dCB0byBsYXVuY2ggdGhlaXIgbmV3IHByb2R1Y3QgbGluZSwgYW5kIG9uIHRoZWlyIHdlYnNpdGUsIHRoYXQgdGhlaXIgcHJldmlvdXMgSVQgZ3V5IGhhZCBzZXQgdXAsIHBlb3BsZSBjb3VsZCBzaWduIHVwIHRvIGJlIG5vdGlmaWVkIG9uIHByb2R1Y3QgbGF1bmNoLiAKTGUgcHJlbWllciBjaGFwaXRyZSBlc3QgY29uc2FjciBhdSBzZXhlIG9yZ2FuZSBjb21tZSB1biBmYWN0ZXVyIGRlIHZ1bG5yYWJpbGl0LCBwb3VyIGVudmlzYWdlciBsZXMgcXVlc3Rpb25zIHJlbGF0aXZlcyBhdSB0cmFuc3NleHVhbGlzbWUsICBsJ2ludGVyc2V4dWFsaXNtZSBldCBhdSBzZXhlIG5ldXRyZSwgbm90aW9ucyBqdXJpZGlxdWVzIG9iamV0cyBkJ2ludGVydmVudGlvbnMganVyaXNwcnVkZW50aWVsbGVzIGV0IGxnaXNsYXRpdmVzIHRycyByY2VudGVzLiBMZSBzZWNvbmQgY2hhcGl0cmUgY29uY2VybmUgbGEgc2V4dWFsaXQgY29tbWUgdW4gZmFjdGV1ciBkZSB2dWxucmFiaWxpdC4gClRoZSBoYXJkIHBhcnQgaXMgc2VwYXJhdGluZyBob3cgbXVjaCBvZiBoaW0gd2FzIGxlZnQgYWZ0ZXIgZmFtZSwgdGhlIGVudGVydGFpbm1lbnQgaW5kdXN0cnksIGdvc3NpcCBjb2x1bW5zLCBhIG1pc3NpbmcgY2hpbGRob29kLCBhbiBhYnVzaXZlIGZhdGhlciBnb3QgZG9uZSB3aXRoIGhpbS4gSGlzIHJlYWxpdHkgYXQgdGhhdCBwb2ludCBjb3VsZCBoYXZlIGJlZW4gc28gZGlzdG9ydGVkIHRoYXQgd2hhdCBoZSB3YXMgZG9pbmcgd2FzIG5vcm1hbC4gCkRldHRhIGhqIGxwZXIga3VuZGVyIGF0dCBzcGVuZGVyYSBtZXIgdGlkIGh5cmEgZiBycyBrcmFyIGVuIHR1ZmYgZW5oZXQgc29tIGtsYXJhciB2ZW4gZGUgbWVzdCB1dCBrYWRlIGIgcmJhcmhldC4gCk1ldGFsIDggUm93IENhc2lubyBUYWJsZSBDaGlwIFRyYXkgd2l0aCBDb3ZlciBhbmQgTG9jayBSZXZpZXcKVGhlIHF1ZXN0aW9uIHdhc24gYWJvdXQgd2h5IHBlb3BsZSB3YW50IHRvIGludmVzdCBvciB3aGF0IHRob3NlIGZ1bmRzIGFyZSBmb3I7IHRoZSBxdWVzdGlvbiB3YXMgYWJvdXQgd2h5IHRoZXJlIGlzIGFuIGV4cGVjdGF0aW9uIG9mIHVubGltaXRlZCBncm93dGguIElmIEkgZWFybiA1JSBwcm9maXQgdGhpcyB5ZWFyIGFuZCA1JSBwcm9maXQgbmV4dCB5ZWFyIGFuZCBwYXkgb3V0IGEgZGl2aWRlbmQgZWFjaCB5ZWFyLCB0aG9zZSBpbnZlc3RvcnMgYXJlIHN0aWxsIGFibGUgdG8gbWVldCB0aGVpciBmdXR1cmUgbmVlZHMuIApEdXJpbmcgbXkgc2Vjb25kIHllYXIgb2YgY29sbGVnZSBJIGhhZCBhIHBzeWNob2xvZ3kgdGVhY2hlciB3aG8gbGVhcm5lZCBJIHdhcyBhIG1hc3NhZ2UgdGhlcmFwaXN0LiAKUGxlYXNlIGdpdmUgbWUgYW5kIGhpbSBzdHJlbmd0aCB0byB3b3JrIHRocm91Z2ggdGhpcyBkaWZmaWN1bHQgdGltZS4gSSBwcmF5IHRoYXQgYWxsIG15IHdvcnJpZXMgY2FuIGJlIHRha2VuIGF3YXkgaW4geW91LiAKQ2VzIHF1ZXN0aW9ubmVtZW50cyBvbnQgYWxvcnMgc3VzY2l0IGRlcyByZmxleGlvbnMgb3JpZ2luYWxlcywgZG9udCBpbCBhIHQgZmFpdCBsZSBjaG9peCBkZSByZWdyb3VwZXIgc2NobWF0aXF1ZW1lbnQgZW4gZm9uY3Rpb24gZGVzIGRpZmZyZW50cyByYXBwb3J0cyBlbnRyZSBsZSBkcm9pdCBldCBsZXMgZmljdGlvbnMsIGxpdnJhbnQgbCdvc3NhdHVyZSBkZSBjZXQgb3V2cmFnZS4gCkJ5IHVzaW5nIHBvc3Qgb25seSB5b3UgdGVsbGluZyB0aGUgZXhjaGFuZ2UgdGhhdCB5b3UgZG9uIHdhbnQgdG8gcGF5IHRoZSB0YWtlciBmZWUsIG5vIG1hdHRlciB3aGF0LgoyIEFwciAyMDE4IC4gUGxlYXNlIGNoZWNrIHRoZSBhbnN3ZXIgcHJvdmlkZWQgYmVsb3cgYW5kIGlmIGl0cyBub3Qgd2hhdCB5b3UgYXJlIGxvb2tpbmcgZm9yIC4gWW91IGNhbiBhbHdheXMgZ28gYmFjayBhdCBOZXcgWW9yayBUaW1lcyBDcm9zc3dvcmQgUHV6emxlcyBjcm9zc3dvcmQgLiAKQnJpbGxpYW50IHBlb3BsZSBoYXZlIHB1dCB0aGVpciBoZWFydHMsIHNvdWxzIGFuZCBtaW5kcyB0byB0aGlzIChoZWFkYWNoZSkgcHJvYmxlbSBhbmQgaGF2ZW4gY29tZSB1cCB3aXRoIGFueXRoaW5nLiBBbGwgd2UgYmVlbiBhYmxlIHRvIGRvIGlzIHRyZWF0IHBlb3BsZSB3aXRoIGFuIGFycmF5IG9mIG1lZGljaW5lcywgb25lIGFmdGVyIHRoZSBvdGhlciwgYW5kIGhvcGUgdGhlIHNpZGUgZWZmZWN0cyB3b24gYmUgdG9vIGJhZC4gY291bGRuIGJlbGlldmUgaXQgYXQgZmlyc3QuIFdlIGJlZW4gYWJsZSB0byBwdXQgdG9nZXRoZXIgYSBzY2llbnRpZmljIGV4cGxhbmF0aW9uIGZvciBob3cgbmVjayBzdHJ1Y3R1cmUgY2F1c2VzIGhlYWRhY2hlcyBub3QgYWxsIGhlYWRhY2hlcywgYnV0IGEgc2lnbmlmaWNhbnQgbnVtYmVyIG9mIHRoZW0uIHRydWUgdGhhdCBjaGlyb3ByYWN0b3JzIGhhdmUgYmVlbiBzYXlpbmcgdGhpcyBmb3IgeWVhcnMuIFVuZm9ydHVuYXRlbHksIG1hbnkgKG1lZGljYWwpIGRvY3RvcnMgdGVuZCB0byBoYXZlIGEgamF1bmRpY2VkIHZpZXcgb2YgY2hpcm9wcmFjdG9ycywgYnV0IHRoZXkgd2VyZSByaWdodCBhYm91dCBoZWFkYWNoZXMuIFJvdGhiYXJ0IGNsaW5pY2FsIGV4cGVyaWVuY2UgYW5kIGZpbmRpbmdzIGhhdmUgbGVkIGhpbSB0byBiZWNvbWUgYSBmb3VuZGVyIGFuZCBwcmVzaWRlbnQgb2YgdGhlIE5vcnRoIEFtZXJpY2FuIENlcnZpY29nZW5pYyBIZWFkYWNoZSBTb2NpZXR5IChOQUNIUykuCkFzIHlvdSBtYXkgaGF2ZSBzdXNwZWN0ZWQsIHRoZXJlIHJlYWxseSBpcyBhIHNjaWVuY2UgdG8gcGlja2luZyB3aGljaCBzbG90IG1hY2hpbmVzIHRvIHVzZSwgd2hlbiB0byBjdXQgeW91ciBsb3NzZXMgYW5kIHdoZW4gdG8gbWFrZSBzdXJlIHRoYXQgeW91IGFyZSBnb2luZyB0byBiZSBnZXR0aW5nIHRoZSByaWdodCBraW5kIG9mIG1vbmV5IGludm9sdmVkLCBhbmQgdGhpcyBjb3Vyc2Ugd2lsbCB0ZWxsIHlvdSBhbGwgb2YgaXQuLiAKSG96aWVyIGRvZXMgdW5kZXJzdGFuZCB0aGUgZHluYW1pY3Mgb2YgaGlzIHJlbGF0aW9uc2hpcCB0byBibGFjayBtdXNpYywgYW5kIGhlIGZlZWxzIGJhZCBhYm91dCBpdC4gCkxvbC4gV2FzIHdpbGxzdCBkZW5uIGluIEFmZ2hhbmlzdGFuIGF1ZmJhdWVuPyBLYXVtIHN0ZWh0IGRhIGVpbmUgU2NodWxlIGtvbW1lbiBkaWUgVGFsaWJhbiB1bmQgc2FnZW4gIndpciBzaW5kIGRhIGpldHp0IENoZWYiLiBVbmQgaW4gU3lyaWVuLiAKQW5kIFdhbHNoLCBWLiAyMDE4LiBUaGUgcGh5c2lvbG9naWNhbCBlZmZlY3RzIG9mIFRyYW5zY3JhbmlhbCBFbGVjdHJpY2FsIFN0aW11bGF0aW9uIGRvIG5vdCBhcHBseSB0byBwYXJhbWV0ZXJzIGNvbW1vbmx5IHVzZWQgaW4gc3R1ZGllcyBvZiBDb2duaXRpdmUgTmV1cm9tb2R1bGF0aW9uLiAKTG9uZ2p1bXBpbmdGbG93ZXIgdQpJbiBqdW5pb3IgZ2lybHMsIHRoZSBOby4gMSBUZXJyeSBGb3ggUmF2ZW5zIG9mIFBvcnQgQ29xdWl0bGFtIGZpbmlzaGVkIHRoZWlyIHNlYXNvbiAzNSAwIHdpdGggYSA3NiAzNiB3aW4gb3ZlciB0aGUgTm8uIDIgS2Vsb3duYSBPd2xzIGluIHRoZSBjaGFtcGlvbnNoaXAuIApJIGFsd2F5cyB0aG91Z2ggb2YgaXQgYXMgdGhleSBoYXZlIG9wcG9zaXRlIGlzc3Vlcy4gVGhlIERlbW9jcmF0aWMgUGFydHkgaXMgZmFpcmx5IGxvY2sgc3RlcCwgdGhleSB3aWxsIGRlZmVyIHRvIGFub3RoZXIgcG9saXRpY2lhbiBmb3IgdGhlIGdvb2Qgb2YgdGhlIHBhcnR5IGFzIHNlZW4gd2l0aCBCZXJuaWUuIApJIGxpa2UgdGhlIGlkZWEgb2YgdGhlIHN0b3J5IGJlaW5nIGZvY3VzZWQgb24gZXhwbG9yYXRpb24sIHNpbmNlIHRoYXQgd2FzIG9uZSBvZiBteSBmYXZvcml0ZSBlbGVtZW50cyBmcm9tIHRoZSBmaXJzdCBnYW1lLiAKRXZlcnlvbmUgSSBrbm93IGlzIGdldHRpbmcgc2NhdHRlcmVkIHRvIHRoZSB3aW5zIGFuZCBhIGxvdCBvZiBteSBmYXZvcml0ZSBwbGFjZXMgdG8gaGFuZyBvdXQgaGF2ZSBiZWVuIGNsb3NlZC4gClRoZSB3aW5lIGlzIGFnZWQgaW4gb2FrIGZvciBhYm91dCBzaXggbW9udGhzIGluIGxhcmdlIG9hayBib3R0aSBhbmQgQnVsZ2FyaWFuIG9hayBiYXJyZWxzIGFkZGluZyBzb21lIHRleHR1cmUgYW5kIHdlaWdodCBhbmQganVzdCBhIGhpbnQgb2Ygd29vZCB0byB0aGUgbWl4LiBUaGUgYXR0YWNrIGlzIGp1aWN5IGFuZCBmcmVzaCB3aXRoIGludHJpZ3VpbmcgZWFydGh5IGNyYW4gY2hlcnJ5L3JlZCBjdXJyYW50IHRoYXQgZmFkZSBpbnRvIGEgZm9yZXN0IGZsb29yIGZpbmlzaC4gCldpbCBTaW0gYXJlIGltcHJlc3NlZCBieSBoZXIgcXVlc3Rpb25zIHJlbGF0ZWQgdG8gc3ltcGF0aHksIHNvIHNoZSBjbGVhcmx5IHNtYXJ0IGFuZCBzaGUgYmVlbiBzdXJ2aXZpbmcgb24gaGVyIHdpdHMvbG9va3Mgc2luY2Ugd2hvIGtub3dzIHdoZW4uIFNoZSBpcyBpbXBsaWVkIHRvIGhhdmUgYSBtZW1vcnkgZXF1YWwgdG8gS3ZvdGhlIHNpbmNlIHNoZSBvbmx5IGhlYXJkIHRoZSBMYXkgb2YgU2lyIFNhdmllbiAxeCBhbmQgc2hlIHBpY2tzIHVwIG11c2ljIHNob2NraW5nbHkgZmFzdC4gClRoZSBoZWFsdGggYmVuZWZpdHMgb2YgZWF0aW5nIGZpc2ggc3VjaCBhcyBzYWxtb24gYXJlIHdlbGwgZG9jdW1lbnRlZC4KR2FsbG93Qm9vYiBzdGFydGVkIG91dCBieSBwb3N0aW5nIHRoaW5ncyB0aGF0IHdvdWxkIGltbWVkaWF0ZWx5IGdldCBhIGxvdCBvZiB1cHZvdGVzLiBIZSBmaWd1cmVkIGl0IGFsbCBvdXQgYW5kIGhhZCBpdCBkb3duLiAKV2F0ZXIgT3BlcmF0b3IgUmVjZXJ0aWZpY2F0aW9uIFlvdSBtdXN0IHBheSBhIGNlcnRpZmljYXRpb24gcmVuZXdhbCBmZWUgZXZlcnkgdHdvIHllYXJzIHRvIGtlZXAgeW91ciBjcmVkZW50aWFsIGN1cnJlbnQuIFJlY2VydGlmaWNhdGlvbiBhbHNvIHJlcXVpcmVzIHlvdSB0byBjb21wbGV0ZSBjb250aW51aW5nIGVkdWNhdGlvbi9leHBlcmllbmNlIHJlcXVpcmVtZW50cyBtZWFzdXJlZCBpbiBjb250YWN0IGhvdXJzLiBZb3UnbGwgbmVlZCA4IDI0IGhvdXJzLCBkZXBlbmRpbmcgb24geW91ciBsZXZlbCBvZiBjZXJ0aWZpY2F0aW9uLiAKSWYgeW91IHdhbnQgdG8gc3BlbmQgYW5kIGludmVzdCBhIGxpdHRsZSBpbnRvIHRoZSBsb25nZXZpdHkgb2YgdGhlIHN5c3RlbSBJJ2QgbG9vayBhdCBDTSBDb3Ntb3MgMTAwMCBjYXNlYW5kIHRoZSBFTkVSTUFYIFJFVk9MVVRJT044NSsgRVJWMTA1MEVXVCBpdHMgdGhlIG9uZSBvZiB0aGUsIGlmIG5vdCB0aGVlIHF1aWV0ZXN0IFBTVSBhbiBpdHMgZXh0cmVtZWx5IGVuZXJneSBlZmZpY2VudCB3aXRoIG1vZHVsYXIgY2FibGluZyAkMzAwQ29vbGVyIFhJR01BVEVLIEhEVCBTMTI4MyAxMjBtbSBSaWZsZSBDUFUgQ29vbGVyIGl0IGVpdGhlciBrZWVwIHlvdXIgc3lzdGVtIGNvb2wgYW5kIHF1aWV0IG9yIGFsbG93IHlvdSB0byBvdmVyY2xvY2sgaWYgeW91IG5lZWQgdG8gJDMwSSBkbyBkZXNpcmUgYSBjZXJ0YWluIGFtbW91bnQgb2Ygb3ZlcmtpbGwuIFN0YXJzIGZyb20gbXkgZXhwZXJpZW5jZSBpcyBvbmUgb2YgdGhlIGJlc3QgcG9rZXIgc2l0ZXMgaW4gdGVybXMgb2Ygc29mdHdhcmUsIGl0J3MgYWxsIHRoZSBvdGhlciBvbmVzIHRoYXQgYXJlIHJlYWxseSBib2dnaW5nIG1lIGRvd24uLiAKQWN0dWFsbHkgZml2ZSBvZiB0aGVtLCB0d28gZm9yIHRoZSB0YWJsZXMgYW5kIHRoZSByZXN0IGluIGNhc2UgdGhlaXIgYXJlIGFjY2lkZW50cyBvciB0aGV5IGp1c3QgZ2V0IG92ZXIgd29ybi4gClRoZSBjb3VydCBzcGVjaWZpY2FsbHkgaG9sZHMgdGhhdCB0aGUgcGxlYWRpbmdzIGFuZCBleGhpYml0cyBmaWxlZCB0byBkYXRlIHdpbGwgbm90IGplb3BhcmRpemUgdGhlIGRlZmVuZGFudCdzIFNpeHRoIEFtZW5kbWVudCByaWdodCB0byBhIGZhaXIgdHJpYWwuIkJvdWxkZXIgQ291bnR5IHNoZXJpZmYncyBpbnZlc3RpZ2F0b3JzIHNheSBDb2xsaW5zIGF0dGFja2VkIDcxIHllYXIgb2xkIEthdGllIEt1bHBhIG9uIFNlcHQuIAo3LCB0aGUgYXZlcmFnZSBsaWZ0IGZvciBhIG5ldHdvcmsgc2VyaWVzJyBmaW5hbCBDMyByYXRpbmcgdnMuIEl0cyBpbml0aWFsIGxpdmUgc2FtZSBkYXkgZGVsaXZlcnkgd2FzIGp1c3QgdHdvIHRlbnRocyBvZiBhIHJhdGluZ3MgcG9pbnQsIHdoaWNoIHdvcmtzIG91dCB0byBhIG5ldCBnYWluIG9mIGFwcHJveGltYXRlbHkgMjU3LDcwMCBhZHVsdHMgMTggdG8gNDkuIApJbiBjYXNlIG9mIGEgcmVhbCBlbWVyZ2VuY3kgKGZpcmUpIHdoZXJlIHlvdSBuZWVkIHRvIGJlIGZhc3QsIEkgdXN1YWxseSBoYW5kbGUgY2F0cyBwcmV0dHkgcm91Z2hseS4gCk5ldmVyIGhhdmUgaSBzYWlkIGFueXRoaW5nLCBoZXJlLCBvciBhbnl3aGVyZSBlbHNlIHRoYXQgaSBlbmpveSB0aGUgcGFpbiBvZiBvdGhlcnMsIG11Y2ggbGVzcyBoaXNwYW5pY3MgYmVpbmcgc2hvdCB3aXRoIHRlYXIgZ2FzIGF0IHRoZSBmdWNraW5nIGJvcmRlci4gCkhlIGlzIGVhc3kgdG8gbG92ZSwgYWZmZWN0aW9uYXRlLCBhbmQgZnJpZW5kbHkuIEhlIGlzIG1vb2R5IGFuZCB1bnByZWRpY3RhYmxlLiBWdWxuZXJhYmxlLCBzd2VldCwgZGV2b3RlZCB0byBmYW1pbHkuIApEb3VibGluZyBvZiB0aGUgbG91ZG5lc3MgaXMgKzEwZEJTb3VuZCBpbnRlbnNpdHkgaXMgdGhlIHNvdW5kIHBvd2VyL2FyZWEgYW5kIGlzIG1lYXN1cmVkIGluIHcvbTIuIApJIHdhcyBzdHJ1Y2sgYnkgdGhlIGRlcHRoIG9mIGhpcyB1bmRlcnN0YW5kaW5nIG9mIHRoZSB3b3JsZCAgIENoaW5hLCBSdXNzaWEgYW5kIHRoZSBVbml0ZWQgU3RhdGVzICAgYWxsIGF0IGFnZSA4NS4gWW91IHNlZW4gaXQgZ28gZnJvbSBhIHRpbnksIHBvb3IsIGJhY2t3YXJkLCBUaGlyZCBXb3JsZCBjb3VudHJ5IHRvIG9uZSBvZiB0aGUgcmljaGVzdCBjb3VudHJpZXMgaW4gdGhlIHdvcmxkLgpUaGVyZSBhcmUgYmx1ZmZzIGluIHRoZSBWaWxsYWlucyByYW5nZSwgYnV0IHlvdSBjYW4ndCBkbyBhbnl0aGluZyBhYm91dCBpdC4uIApIb3dldmVyLCBiZXR3ZWVuIEdlcm1hbiBhbmQgRGFuaXNoLCB0aGVyZSBpcyBhIGNsZWFyIGxpbmUuIApXaGVuIHRoZSBqYWNrcG90IGhpdCB0aGUgcm9sbGRvd24gdGhyZXNob2xkLCBDYXNoIFdpbmZhbGwgYmVjYW1lIGEgZ29vZCBiZXQgZm9yIGV2ZXJ5b25lLCBub3QganVzdCB0aGUgYmlnIHRpbWUgYmV0dG9ycyBsaWtlIHRoZSBTZWxiZWVzLiBCeSB0aGVuIHRob3VnaCwgTWFzc2FjaHVzZXR0cyBTdGF0ZSBMb3R0ZXJ5IGhhZCBtb3ZlZCBvbiB0byBhIGRpZmZlcmVudCBnYW1lIHdpdGhvdXQgYSBzdGF0aXN0aWNhbCB0d2lzdC4gCiJTbyB5b3UgYmV0IG9uIHlvdXIgZmF2b3JpdGUgbnVtYmVycywiIEJlYW4gc2FpZC4gIlRoZSBkZWFsZXIgc3BpbnMsIGFuZCBpZiB5b3VyIG51bWJlciBjb21lcyBpbiwgeW91IHdpbi4iCj5UYWtlIHRoYXQgInV0aWxpdHkiIGJ1bGxzaGl0IGFuZCBzaG92ZSBpdCBzb21ld2hlcmUgZGFyayBhbmQgZGVlcC4gSXQganVzdCBhbiBleGN1c2UgdG8gYnVsbHkgcGVvcGxlLgpFeGNlcnB0OiAiSSdtIGNvbmNlcm5lZCB0aGF0IGdyb3NzIGluZXF1YWxpdHkgd2lsbCBiZSBiYWQgZm9yIG1lLiBJJ20gY29uY2VybmVkIHRoYXQgaW4gYW5vdGhlciBkZWNhZGUgb3IgdHdvLCB0aGUgcGVvcGxlIHdobyBhcmUgZG9pbmcgbGVzcyB3ZWxsIGFyZSBnb2luZyB0byByaXNlIHVwIGFuZCBqdXN0IHNheSB0aGV5IHdvbid0IHRha2UgaXQgYW55bW9yZSwgYW5kIHdlJ2xsIGhhdmUgcmlvdHMgbGlrZSB3ZSBkaWQgaW4gQXRoZW5zLCBHcmVlY2UuIApQZXJzb25hbGx5LCBJIHdvdWxkIGp1c3QgcHVsbCBhd2F5IGZyb20gaGltLiBZb3UgZGlkIHlvdXIgYmVzdCB0byBzdXBwb3J0IGhpbSB3aGVuIG5vIG9uZSBlbHNlIGRpZCBhbmQgeW91IHNlZW1lZCB0byBiZSBnZW51aW5lbHkga2luZCB0byBoaW0gcmVnYXJkbGVzcyBvZiBoaXMgaXNzdWVzLiBTZWVtcyBsaWtlIHlvdSBnYXZlIGhpbSBzZXZlcmFsIGNoYW5jZXMgdG8gbWFrZSBpdCByaWdodC4gSSdtIGEgZmFpcmx5IGNvbnNlcnZhdGl2ZSwgQ2F0aG9saWMgKGFsdGhvdWdoIEkgZG9uJ3QgZ28gdG8gbWFzcywgSSBiZWxpZXZlIGluIEdvZCBjb21wbGV0ZWx5KSAgYnV0IEknbSBnYXkgQUYhIEdvZCBtYWRlIG1lIGFuZCB5b3UgdGhlIHNhbWUgd2F5IGhlIG1hZGUgZXZlcnlvbmUgZWxzZS4gSSdtIGhhcHBpZXIgdGhhbiBhIHBpZyBpbiBzaGl0IHRoYXQgaGUgbWFkZSBtZSBhIGdpcmwgdGhhdCBsaWtlcyBvdGhlciBnaXJscyEgSSBhbHdheXMgZmVlbCBsaWtlIHRoZSByaWdodCB3aW5nL2xlZnQgd2luZyBhcmd1bWVudCBoYXMgemVybyB0byBkbyB3aXRoIHdobyBJJ20gaGF2aW5nIHNleCB3aXRoLiBTb21lIHBlb3BsZSBhcmUganVzdCBhc3Nob2xlcyBsbWFvLiBHb29kIGx1Y2sgd2l0aCB1ciBjb3VzaW4sIGlmIHlvdSBjaG9vc2UgdG8gcmVtYWluIGNsb3NlIHdpdGggaGltLCBJIHdvdWxkIGRlZmluaXRlbHkgaGF2ZSBhIHNpdCBkb3duIGNvbnZlcnNhdGlvbiB3aXRoIGhpbSEhClNvbmlhIGltcGxlbWVudCBhIGhvbGlzdGljIGFwcHJvYWNoIHRvIGhlYWx0aCBhbmQgd2VsbCBiZWluZy4gU2hlIGVuam95cyBhbmQgd29ya3MgcGFzc2lvbmF0ZWx5IHRvIHNoYXJlIGFuZCBwcm9tb3RlIGdvb2QgaGVhbHRoIGZvciB0aGUgcGVyc29uIGFzIGEgd2hvbGUuIFNvbmlhIGFpbXMgdG8gb2ZmZXIgeW91OlRoZSB0ZWNobmlxdWVzIHVzZWQgbWF5IGludm9sdmU6UmVsZWFzZSBvZiB0ZW5zaW9uIHRyaWdnZXIgcG9pbnRzTnV0cml0aW9uIGJhc2VkIEF5dXJ2ZWRpYyBzeXN0ZW0gb2YgaGVhbHRoSGVsZW4gaXMgYSBjb21wbGVtZW50YXJ5IGhlYWx0aGNhcmUgcHJhY3RpdGlvbmVyIHdpdGggb3ZlciAxMCB5ZWFycyBleHBlcmllbmNlIGluIGhlYWx0aGNhcmUgYW5kIHdlbGxiZWluZywgd29ya2luZyBpbiBOSFMgYW5kIGNvbXBsZW1lbnRhcnkgaGVhbHRoIHNldHRpbmdzLiAKQnJpZGV6aWxsYSBDYWxsZWQgaGVyIG5hbWVzLCBibGF0YW50bHkgaWdub3JlZCBoZXIgZm9yIG5vIHJlYXNvbiwgYW5kIHdhcyBxdWl0ZSB0aGUgZGVtYW5kaW5nIHBlcnNvbiB1cCB1bnRpbCB0aGUgd2VkZGluZy4gCkkgY29uc2lkZXIgbXkgc2VsZiBhYm92ZSBhdmVyYWdlLCBJIHdpbm5pbmcgNzYuNCUgb2YgbXkgc2Vzc2lvbnMuIElmIEkgZXhjbHVkZSBicmVha2V2ZW4gKy8gIDEwIEJCIChJIHdvdWxkbiBjb25zaWRlciBsb3NpbmcgMTBCQiBvciB3aW5uaW5nIDEwQkIgYW55dGhpbmcgb3RoZXIgdGhhbiBicmVha2V2ZW4gYmFzaWNhbGx5LCBJIHdpbm5pbmcgNzAuOCUgb2YgbXkgc2Vzc2lvbnMuIApCZWZvcmUgSSBiZWdpbiwgSSB3YW50IHRvIHNheSB0aGlzLiBXb3JsZDogV2FrZSBVcCEKQWZ0ZXIgdGhlc2Uga2luZHMgb2Ygb2xkIHNhd3MsIHRoZXJlIGFyZSBiYXNpY2FsbHkgb25seSB0d28gdGhpbmdzIHlvdSBjYW4gY29tbXVuaWNhdGUgd2l0aG91dCBiZXR0aW5nOiBzdHJlZ250aCBvciB3ZWFrbmVzcy4gTGVhbmluZyB0b3dhcmRzIHRoZSB0YWJsZSwgc3RhcmluZyBkb3duIGFuIG9wcG9uZW50LCBhc2tpbmcgZm9yIGEgY2hpcCBjb3VudCwgcXVpY2tseSBtYWtpbmcgYmV0cywgZHJ1bW1pbmcgeW91ciBmaW5nZXJzLCAic28gd2hhdCdzIGl0IGdvbm5hIGJlPyIgc3R5bGUgdGF1bnRzLCBwbGFjaW5nIGhhbmRzIGFuZCBhcm1zIG9uIHRoZSB0YWJsZSwgZXRjIGV0YyBldGMgY29tbXVuaWNhdGUgc3RyZWdudGguIExlYW5pbmcgYmFjayBpbiB0aGUgY2hhaXIsIHRhbGtpbmcgYWJvdXQgYW55dGhpbmcgb3RoZXIgdGhhbiB0aGUgY3VycmVudCBoYW5kLCBnZXR0aW5nIHVwIHRvIGdyYWIgYSBiZWVyLCB0YWxraW5nIHRvIHBsYXllcnMgb3RoZXIgdGhhbiB5b3VyIG9wcG9uZW50LCBmb2xkaW5nIHlvdXIgYXJtcywgZXRjIGV0YyBhbGwgY29tbXVuaWNhdGUgd2Vha25lc3MuIApTYW50b3lvIE1hY2VkbyBoYXMgYSBtYXAgaW4gaGVyIG1pbmQgdG8gdGhlIGJlc3QgYW5kIGZyZXNoZXN0IGluZ3JlZGllbnRzIGluIFR1bHVtLiBJIGEgc2lkZWtpY2sgdG8gdGhpcyBFbmVyZ2l6ZXIgQnVubnkgYXMgc2hlIHppcHMgYXJvdW5kIHNob3BwaW5nIGZvciBhIGx1bmNoIHNoZSBnb2luZyB0byBjb29rIGZvciB1cy4gT24gaGVyIGxpc3Q6IGZpc2gsIG1hc2EsIGFjaGlvdGUgcGFzdGUgKHJlY2FkbyByb2pvKSwgcHJvZHVjZSwgYW5kIG9uZSBib3R0bGUgb2YgYmVlci4uIApNY2tlZWhlbidzIGNoaXAgc3RhY2sgbW9yZSB0aGFuIGRvdWJsZXMgdGhhdCBvZiBJc3JhZWwncyBadmkgU3Rlcm4gKEdQSSBOby4gCllvdXIgc2FmZXN0IGJldCB3aGVuIGNvbG9yaW5nIG9yIHJlbGF4aW5nIHlvdXIgaGFpciBpcyB0byBoYXZlIHRoZSBqb2IgZG9uZSBieSBhIHF1YWxpZmllZCBwcm9mZXNzaW9uYWwgc3R5bGlzdCBvciBjb2xvcmlzdC4gSWYgeW91IGRvIGNob29zZSB0byB1c2UgaGFpciBkeWVzIG9yIHJlbGF4ZXJzIGF0IGhvbWUsIGFsd2F5cyBmb2xsb3cgdGhlIHBhY2thZ2UgaW5zdHJ1Y3Rpb25zLiBXaGVuIHVzaW5nIGhhaXIgZHllLCBtYWtlIHN1cmUgeW91IGRvIGEgc2tpbiBwYXRjaCB0ZXN0IGJlZm9yZSB1c2luZyB0aGUgcHJvZHVjdC4gClRoZW4gaXQgZG9lcyBhIHUgdHVybiBhbmQgc3RhcnRzIGNyZWVwaW5nIGJhY2sgZG93biB0aGUgcm9hZCB0b3dhcmRzIG1lIHdpdGggdGhlIGxpZ2h0cyBvZmYuLiAKRm9yIGV4YW1wbGU6IG1hbnkgcGVvcGxlIHdobyBzaXQgYXQgd29yayB0ZW5kIHRvIGhhdmUgdGVuc2UgYW5kIHNob3J0ZW5lZCBtdXNjbGVzIGJldHdlZW4gdGhlIHNob3VsZGVyIGJsYWRlcyBhbmQgYXJvdW5kIHRoZSByaWJjYWdlIGF0IHRoYXQgaGVpZ2h0IGxldmVsIGFuZCBhIGJpdCBiZWxvdywgd2hpY2ggY2F1c2VzIGEgc2Vuc2F0aW9uIG9mIHlvdXIgaGVhcnQgc3Ryb25nbHkgYmVhdGluZyBhZ2FpbnN0IHlvdXIgY2hlc3QgYW5kIHNsaWdodCBjaGVzdCBwYWlucy4gSXQgb2Z0ZW4gbWFuaWZlc3RzIGF0IG5pZ2h0IG9yIHdoZW4gZmFsbGluZyBhc2xlZXAgYW5kIG1heSBldmVuIGZlZWwgbGlrZSBhcnJ5dGhtaWEgKGV2ZW4gdGhvdWdoIGl0IGlzIG1lZGljYWxseSBub3QsIG9idmlvdXNseSkuIFNvIHlvdSBnZXQgeW91bmcgaGVhbHRoeSBwZW9wbGUgYW54aW91c2x5IGdvaW5nIHRvIHRoZWlyIGRvY3Rvciwgc3BlbmRpbmcgdGltZSBhbmQgbW9uZXkgZm9yIGNhcmRpb2xvZ3kgZXhhbWluYXRpb25zIGFuZCBiZWluZyB0b2xkIHRoZXkgY29tcGxldGVseSBmaW5lIGV2ZW4gdGhvdWdoIHRoZXkgZG9uIGZlZWwgdGhhdCB3YXkgYXQgYWxsICh1bmxlc3MgdGhleSBoYXZlIGEgdmVyeSBnb29kIGRvY3Rvciwgc29tZSBvZiB0aGVtIGRvIGtub3cgYWJvdXQgaXQgYW5kIHJlY29tbWVuZCBtYXNzYWdlIHRoZXJhcHkgYW5kIHN0cmV0Y2hpbmcgZXhjZXJzaXNlcywgYnV0IGF0IGxlYXN0IGluIG15IGNvdW50cnkgaXQgcmFyZSkuIFdlbGwsIGlmIHRoZXkgY29tZSB0byB5b3UsIHlvdSBjYW4gc2lnbmlmaWNhbnRseSBsZXNzZW4gdGhlIHN5bXB0b21zIGluIG9uZSBzZXNzaW9uIGFuZCB1c3VhbGx5IGNvbXBsZXRlbHkgcmVtb3ZlIHRoZW0gaW4gYWJvdXQgdGhyZWUgc2Vzc2lvbnMsIGFuZCB5ZXQsIG1hbnkgbWFzc2FnZSB0aGVyYXBpc3RzIGhhdmUgbm8gaWRlYSBhYm91dCB0aGlzLiBHb29kIG1hc3NhZ2UgdGhlcmFwaXN0cy9waHlzaW90aGVyYXBpc3RzIEkgdGFsa2VkIHRvIGRpZG4gcmVhbGx5IGNhcmUgYWJvdXQgcmVzZWFyY2gsIHdoaWNoIGlzIHZlcnkgdW5mb3J0dW5hdGUgYWx0aG91Z2ggdW5kZXJzdGFuZGFibGUgKHRvbyBtdWNoIHdvcmsgdGhleSBkb24gcmVhbGx5IGtub3cgaG93IHRvIGRvKSwgc28gdGhpcyBrbm93bGVkZ2Ugb2Z0ZW4gb25seSBnZXRzIHBhc3NlZCB0byBvdGhlciB0aGVyYXBpc3RzIHdobyB3b3JrIHdpdGggdGhlbS4KQW5kIEkgaGF2ZSBhIGxhcmdlIG5ldHdvcmsgb2YgZXh0ZW5kZWQgZmFtaWx5LiAKQnJvd3NlIHRob3VzYW5kcyBvZiBBc2lhbiBwZXJzb25hbCBhZHMgYW5kIEFzaWFuIHNpbmdsZXMgICBjb21wbGV0ZWx5IGZvciBmcmVlLiAKWW91IHBsYXkgYWdhaW5zdCBvdGhlciBwbGF5ZXJzIGxpa2UgeW91cnNlbGYgYW5kIHRoZSBIb3VzZSB0YWtlcyBhIHNtYWxsIHBlcmNlbnRhZ2Ugb3V0IG9mIGVhY2ggcG90LiBUaGlzIHBheXMgZm9yIHRoZSBob3VzZSBleHBlbnNlIGFuZCBhIHByb2ZpdCBmb3IgcHJvdmlkaW5nIHRoZSBnYW1lLiAKT24gb3VyIHNvbGljaXRvcnMgYWR2aWNlLCB3ZSBhY2NlcHRlZCBhbiBvdXQgb2YgY291cnQgc2V0dGxlbWVudCBmcm9tIGhpbTogTm93aGVyZSBuZWFyIHdoYXQgaGUgb3dlZCB1cywgYnV0IHRoZSBiZXN0IHRoYXQgd2UgY291bGQgZ2V0LCBjb25zaWRlcmluZyB0aGUgZm9yZ2VkIGRvY3VtZW50cyB0aGF0IGhlIHRocmVhdGVuZWQgdG8gcHJvZHVjZSBpZiB3ZSBkaWQgbm90LgpXaGVuIHBlb3BsZSB0YWxrIGFib3V0IE1hcnZlbCBmb3JtdWxhLCBpdCBibG93cyBteSBtaW5kIGJlY2F1c2UgaXQgYmFzaWNhbGx5IG1lYW5zIHRoZXkgZG8gdGhlIHNhbWUgbW92aWUgb3ZlciBhbmQgb3ZlciBhZ2FpbiBhbmQgZ2V0IGF3YXkgd2l0aCBpdC4KV2VhciBwcm90ZWN0aXZlIGxlYXRoZXIgZ2xvdmVzIGFuZCB0aGljayBzb2xlZCBzaG9lcy4gCkkgdXNlZCB0byBnZXQgcmVhbGx5IHVwc2V0IGF0IGhvdyBoYWlyeSBteSBhcm1zIHdlcmUgd2hlbiBjb21wYXJlZCB0byBvdGhlciBnaXJscywgSSBmZWx0IHJlYWxseSBvdXQgb2YgcGxhY2UgYW5kIG1hbm5pc2guIEkgZW5kZWQgdXAgd2F4aW5nIGZvciBhIGZldyB5ZWFycyBidXQgdGhhdCBnb3QgYSBiaXQgYW5ub3lpbmcuIApIb3dldmVyLCBpbiAyMDA2IHRoZSBXU09QIGRlY2lkZWQgdGhhdCBhbGwgdGlwcyB3b3VsZCBiZSBwb29sZWQgc28gaXQgaXMgbm90IHBvc3NpYmxlIHRvIHRpcCBpbmRpdmlkdWFsIGRlYWxlcnMgYW55bW9yZS4gCkhleSwgd2hlcmUgYXJlIHlvdXIgc2hvZXMgYW5kIHNvY2tzLiBvaCBuby4gSlRHIHRvbGQgbWUgYWJvdXQgdGhpcy4gSSBOT1QgSU5UTyBUSElTLiBTT01FQk9EWSBIRUxQISEuIApUaG9zZSB0aGluZ3MgYXJlIHJlYWQgcmVtb3RlbHkgYW5kIHRoZSBUU0EgYWdlbnQgdmlld2luZyB0aGUgc2NhbnMgYXJlIChmb3IgdGhlIG1vc3QgcGFydCkgbm90IGludGVyZXN0ZWQgaW4gYW55dGhpbmcgbGlrZSBqZXdlbHJ5IG9yIHRoZSBtZXRhbCByaXZldHMgb24gamVhbnMuIFRoZXkgYXJlIGxvb2tpbmcgZm9yIGNlcnRhaW4gc2hhcGVzIGFuZCBzaXplcyBvZiB0aGluZ3MgdGhhdCBtaWdodCBiZSB3ZWFwb25zLiAKSGUgaGFkIGEgcmVhbGx5IGhvdCBicm90aGVyIGFuZCB3ZSBhbHdheXMgZ290IGFsb25nIHdlbGwuIApJZiB5b3UgYWxsIGNvb2wgd2l0aCBwbGF5aW5nIHRoYXQgd2F5IHRoZW4gaXQgbm8gcHJvYmxlbSwgYnV0IEkgaGF2ZSBhIGNoYXQgYWJvdXQgZXhwZWN0YXRpb25zIGFuZCBETSAvIHBsYXllciByZXNwb25zaWJpbGl0aWVzIGlmIHlvdSBub3QuCkJ1dCwgYXMgc29tZW9uZSB3aG8gaXMgbGl2aW5nIGluIE1vbnRyZWFsIGZvciBhIGdvb2QgcGFydCBvZiB0aGlzIHllYXIsIEkgYW0gbWFraW5nIGFuIGVmZm9ydC4gClNoZSBqb2lucyBmcm9tIERyb2dhNSwgd2hlcmUgc2hlIHdhcyBleGVjdXRpdmUgZ3JvdXAgZGlyZWN0b3IgYW5kIGNvIGhlYWQgb2YgYWNjb3VudCBtYW5hZ2VtZW50LiAKQXQgaGVhcnQgYW5kIHdoZW4geW91IGN1dCB0aHJvdWdoIHRoZSBCUyB0aGV5IHdhbnQgYSBraW5nLCBub3QgYSByZXB1YmxpYywgYW5kIHRoZXkgb25seSBoYXBweSB3aGVuIGEgYnVsbHlpbmcgamVyayBpcyBpbiBjaGFyZ2UgYmVjYXVzZSwgb24gYSBkZWVwIGVtb3Rpb25hbCBsZXZlbCwgdGhhdCByZWFzc3VyZXMgdGhlbSB0aGF0IGV2ZXJ5dGhpbmcgaXMgYWxsIHJpZ2h0IGFuZCB0aGVyZSBhIGJvc3Mga2VlcGluZyB0aGluZ3MgZ29pbmcgdGhlIHdheSB0aGV5IHNob3VsZCBiZSBnb2luZy5NZXJreTYwMCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnb01hcmxhIE1hcGxlczouICJJIG1lYW4gdHJ1bHkuIEhlIGlzLiAKVG8gc3VwcG9ydCB0aGUgc2Nob29sJ3MgcHJvZ3JhbXMsIHRoZXkgaG9zdGVkIGEgZnVuZHJhaXNlciBvbiBGcmlkYXksIE1heSAxLCB3aXRoIGEgQ2FzaW5vIE5pZ2h0IGF0IHRoZSBDYXJpYm91IENsdWIuIAoyMSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBob3VycyBhZ29CdXQgd2hhdCdzIHRvIHN0b3AgaGltIGZyb20gZG9pbmcgdGhhdCBhbnl3YXkuIApUcnlpbmcgdG8gcGljayB1cCB0aGUgcGFjZSBoZXJlLCB0aG91Z2ggbG9va2luZyBhdCBteSBzcGxpdHMgdGhhdCBkaWRuIGhhcHBlbiBhdCBhbGwuIApKb2huc29uajg1ICAxMCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClZhcmlhbmNlIG1vc3RseSBjb21lcyBmcm9tIHBsYXlpbmcgYSBub3QgY29tcGxldGVseSBndG8gYW5kIG5vdCBwbGF5aW5nIGVub3VnaC4gCkFsbCBvZiB0aGF0IGlzIGZyb20gaGlzIG93biBsaXR0bGUgc3BlZWNoLiAKR29kLCB0aGlzLiBJIGdvdCBOT1RISU5HIGZyb20gZ29pbmcgdG8gY2h1cmNoIHdoaWxlIGFsbCBteSBwZWVycyBhbmQgZmFtaWx5IHdlbnQgb24gYWJvdXQgaG93IHJlbGlnaW9uIG1hZGUgdGhlbSBmZWVsLiBJIGp1c3QgdGhvdWdodCBJIGRpZG4gYmVsaWV2ZSBlbm91Z2guIApTaGVlc2guIFdlIHdlcmUgb2ZmIHRvIGEgZ29vZCBzdGFydCEKWWVzLCBsaWZlIHRocmV3IGEgbWFqb3IgY3VydmViYWxsIGF0IG15IGRhdWdodGVyIGFuZCBJIGFuZCBoYXZpbmcgdG8gcGF5IGZvciB0aGUgZW5vcm1vdXMgbWVkaWNhbCBjb3N0cyBoYXMgcmVhbGx5IHB1dCBtZSBpbiBhIHZlcnkgdG91Z2ggc3BvdC4gCk5ldXJvbi4gCkphdml0cyBvZiBOZXcgWW9yay4gCkkgZ3Vlc3MgSSBqdXN0IGV4cGxhaW4uIApGb2xkIG9mdGVuLCB1c2UgeW91ciBibHVmZiBzcGFyaW5nbHksIGFuZCBhbHdheXMgYmUgYXdhcmUgb2YgdGhlIGhhYml0cyBhbmQgdGVsbHMgb2YgdGhlIG90aGVyIHBsYXllcnMgaW52b2x2ZWQgaW4gdGhlIGdhbWUuIApZb3Ugc2hvdWxkIGJlIGFibGUgdG8gZXN0YWJsaXNoIGEgcGF0dGVybiBieSBrZWVwaW5nIGEgY2FsZW5kYXIgYW5kIG5vdGluZyB0aGUgdGltZXMuIElmIHlvdXIgaHVzYmFuZCBjbGFpbXMgdG8gYmUgd29ya2luZyBsYXRlLCBjaGVjayBwYXljaGVjayBzdHVicyB0byB2ZXJpZnkgaGlzIG92ZXJ0aW1lLiAKSSBtZWFuIGZpcnN0IG9mIGFsbCBsZXQgZ2V0IHRoaXMgY2xlYXIsIEkgZG8ga25vdyAid2hhdCBpdCBsaWtlIGluIHJlYWwgbGlmZSIgbG9sLiBJIGxpdmUgaW4gYSBkaW1seSBsaXQsIHVucG9wdWxhciwgbG93IGluY29tZSBhbmQgaGlnaCB1bmVtcGxveW1lbnQgcmF0ZSBwYXJ0IG9mIHRvd24uIE5vIGhlYXZ5IGRydWdzLCBidXQgYSBsb3Qgb2Ygd2VlZC4gQW5kIGNhbGwgbWUgY3JhenksIGJ1dCBpZiB5b3UgbWFrZSBtaW5pbXVtIHdhZ2UgeW91IGRvbiByZW50IGFsb25lLCBwZXJpb2QuIEkga25vdyB5b3UgcHJvYmFibHkgZnJvbSB0aGUgVVMgc28gdGhlcmUgY3VsdHVyYWwgZGlmZmVyZW5jZXMgYXMgd2VsbCwgbGlrZSBpbiBFdXJvcGUgeW91IHByZWZlciB0byBub3QgcmV2ZWFsIHlvdSBsaXZlIGluIGEgZmxhdHNoYXJlLCBidXQgaXQgc3RpbGwgbXVjaCBtb3JlIGFjY2VwdGFibGUgdGhhbiBpbiB0aGUgVVMuCldpbGxpYW0gSGlsbCBQTEMgTE9OClJhZyduJ0JvbmUgTWFuLiBNdC4gSm95LiBUaGUgUmV2aXZhbGlzdHMuIE5hdGhhbmllbCBSYXRlbGlmZi4gSSBjYW4ndCB0ZWxsIHRoZW0gYXBhcnQgYW5kIG5laXRoZXIgY2FuIHlvdSwgYmVjYXVzZSB0aGV5IGFsbCBzb3VuZCBsaWtlIEhvemllci4KUGFuYW1hIGFuZCBvdXIgcG9saXRpY3MKTXkgdW5lZHVjYXRlZCBndWVzcyB3b3VsZCBiZSBlbmQgb2YgdGhpcyB5ZWFyLCBhdCB0aGUgYWJzb2x1dGUgZWFybGllc3QuIFRoZXkgYWxzbyBmb2N1c2VkIG9uIG9wZW5pbmcgYSBkZWNlbnRyYWxpemVkIGV4Y2hhbmdlIHBsYXRmb3JtLCBhcyB3ZWxsIGFzIGFscmVhZHkgYmVpbmcgYnVzeSBtYWtpbmcgbW9uZXkgaGFuZCBvdmVyIGZpc3Qgd2l0aCB0aGVpciBleGlzdGluZyBidXNpbmVzcy4gCkluIHNvbWUgY2FzZXMsIHlvdSBtYXkgaGF2ZSBvbmx5IDIgb3V0cywgbWVhbmluZyB5b3VyIGNoYW5jZXMgb2YgYXR0YWluaW5nIGEgZGVzaXJhYmxlIGhhbmQgaXMgcmVtb3RlLiAKVGhpcyBzZXF1ZW5jZSBvZiB0cmFuc2ZlciBvZiBlbmVyZ3kgaW4gdGhlIGJvZHkgZHVyaW5nIGEgZ29sZiBzd2luZyBpcyBjYWxsZWQgdGhlIEtpbmVtYXRpYyBTZXF1ZW5jZS4gVGhlIGludGVudGlvbiBvZiBvdXIgd29yayBpcyB0byBoZWxwIHRoZSBnb2xmZXIgZGV2ZWxvcCB0aGVpciBtb3N0IGVmZmljaWVudCwgcG93ZXJmdWwgc3dpbmcgd2l0aCBhIHNtb290aCBLaW5lbWF0aWMgU2VxdWVuY2UuLiAKUGFjcXVpYW8gKDU0IDMgMiwgMzgga25vY2tvdXRzKSB3YXMgYSA3IDEgZmF2b3VyaXRlIGFuZCBhbHNvIHRoZSBmYXZvdXJpdGUgb2YgdGhlIGNyb3dkIHRoYXQgZ2F0aGVyZWQgZXhwZWN0aW5nIHRvIHNlZSBhbm90aGVyIG9uZSBvZiBoaXMgdGhyaWxsaW5nIHBlcmZvcm1hbmNlcy4gVGhhdCBoZSBjb3VsZG4ndCBkZWxpdmVyIHdhcyB0aGUgb25seSBiYWQgcGFydCBvZiB0aGUgbmlnaHQgZm9yIGEgZmlnaHRlciB3aG8gZG91YmxlcyBhcyBhIGNvbmdyZXNzbWFuIGluIGhpcyBuYXRpdmUgUGhpbGlwcGluZXMuLiAKVHJ5IHRvIHNldCBhc2lkZSBhcm91bmQgaGFsZiBhbiBob3VyIGZvciBhIGJhYnkgbWFzc2FnZS4gQSBnb29kIGF0bW9zcGhlcmUuIERvbid0IHRyeSBhbmQgd2F0Y2ggdGVsbHkgYW5kIG1hc3NhZ2UgeW91ciBiYWJ5IGF0IHRoZSBzYW1lIHRpbWUuIFRoaXMgaXMgbm90IGFuIG9wcG9ydHVuaXR5IHRvIGNhdGNoIHVwIG9uIHRoZSBuZXdzLCBvciBvbiB5b3VyIGZhdm91cml0ZSBzb2FwIG9wZXJhIG9yIHF1aXogc2hvdy4gSWYgeW91IHdhbnQgc29tZXRoaW5nIGluIHRoZSBiYWNrZ3JvdW5kLCB0aGVuIHBsYXkgc29tZSBnZW50bGUgaW5zdHJ1bWVudGFsIG11c2ljIG9yIHB1dCBvbiBhbiAnYW1iaWVudCBtdXNpYycgdmlkZW8uIApUeXBlcyBvZiBPbmxpbmUgQ2FzaW5vIFNsb3RzIGFuZCBIb3cgVG8gV2luIFBsYXlpbmcgVGhlbQpJIHJlYWxpemUgdGhpcyBpcyBub3QgZXhhY3RseSBnb29kIGRhdGEgKEkgbWVhbiwgd2UgaGF2ZSBhbiBuIG9mIDQpLCBidXQgdGhlIEFCQyBzaG93IGlzIGdldHRpbmcgdG8gdGhlIGV4YWN0IHNhbWUgY3VsdHVyYWwgaW1wdWxzZSB0aGF0IHRoZSBTbmlwZXMgTG92ZSBjYXNlcyBnZXRzIHRvLiBJbXB1bHNlIGNhbiBiZXN0IGJlIGRlc2NyaWJlZCBhcyB0aGUgTGFkeS9XaG9yZSBkaXZpZGUgdGhhdCBoYXMgbG9uZyBoYXVudGVkIHBhdHJpYXJjaGFsIGN1bHR1cmVzIGJ1dCBiZWNhbWUgbW9yZSBpbnRlbnNpZmllZCBpbiB0aGUgY2xhc3MgYW5kIHJhY2UgaGllcmFyY2hpZXMgZXN0YWJsaXNoZWQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgTW9kZXJuIEVyYS4uIApObyBvbmUsIG5laXRoZXIgdGhlIG1pbGl0YXJ5IG5vciB0aGUgY2FwaXRhbGlzdCBlbGl0ZSBoYXZlIHF1ZXN0aW9uZWQgUGFraXN0YW4ncyBzZWVtaW5nbHkgbGltaXRsZXNzIGFwcGV0aXRlIGZvciBmaW5hbmNpYWwgYXNzaXN0YW5jZSwgd2hpY2ggaXMgdGhlIGJhc2lzIGZvciB0aGUgZm9ybXVsYXRpb24gb2YgdGhlIEtlcnJ5IEx1Z2FyIEJpbGwuIApJIHdvcmsgaW4gUCBhbmQgdGhlcmUgYXJlIGFsd2F5cyBwcm9ibGVtcyB0byBzb2x2ZSBhbmQgbmV3IHRoaW5ncyB0aGF0IG5lZWQgeW91IG5lZWQgdG8gdW5kZXJzdGFuZC4gClRoZXJlZm9yZSwgb3VyIHByb2JhYmlsaXR5IHRoYXQgd2UgZ2V0IGEgcGFpciBpbiBhbnkgdHdvIHBsYWNlcyBvZiB0aG9zZSBmb3VyIGNhcmRzIGlzIDQzMi8xMTc2LCBvciAxOC80OS4gCiJTYWRseSB0aGUgcGVvcGxlIHdobyB0ZW5kIHRvIGxvc2UgdGhlIG1vc3QgYXJlIG9mdGVuIHRoZSBvbmVzIHdobyBjYW4gbGVhc3QgYWZmb3JkIHRvIGxvc2UgaXQuIApCb3RoIHdlcmUgYXNrZWQgdG8gbGVhdmUgYW5kIHRoZSBzdXBlcnZpc29yIGNvbnRhY3RlZCBzZWN1cml0eSBzdGFmZiwgd2hvIHNwb2tlIHRvIHBvbGljZSBpbiBhbm90aGVyIHNlY3Rpb24gb2YgdGhlIGhvdGVsLiAKV2l0aCB0aGUgaGVscCBvZiBvbmxpbmUgcG9rZXIsIHlvdSBkb24ndCBoYXZlIHRvIHNwZW5kIG1vbmV5IG9uIHRob3NlIHVubmVjZXNzYXJ5IHRoaW5ncy4gWW91IGNhbiBub3cgcGxheSBvbmxpbmUgcG9rZXIgaW4geW91ciBwYWphbWFzIHJpZ2h0IGluIHlvdXIgaG9tZS4uIApUaGUgZXhwZW5zZXMgaW5jbHVkZWQgJDU1LDAwMCBzcGVudCBvbiAicGFydG5lcnNoaXAgYWdyZWVtZW50cyIsICQ5NiwwMDAgb24gY2F0ZXJpbmcgYW5kIGFsY29ob2wsIGFuZCAkMTMzLDAwMCBvbiBzYWxhcmllcy4gCkkgZG9uIG1lYW4gdGhpcyBpbiBhIGRpY2tpc2ggd2F5LCBidXQgYXJlIGtpZHMgdGhhdCB5b3VuZyBwaHlzaWNhbGx5IGNhcGFibGUgb2YgcnVubmluZyB0aGF0IGZhc3Q/IEkgc2VlbiBraWRzIGluIHRoYXQgYWdlIHJhbmdlIHJ1biAyMCAyMSBtaW51dGUgNUtzIGJlZm9yZSwgYnV0IG5vdGhpbmcgbGlrZSBzdWIgMTguIApZZXMgSSBhZ3JlZS4gQnV0IEkga25vdyBJJ20gaW4gdGhlIG1pbm9yaXR5LiBJIHJlamVjdGVkIGxvdHMgb2YgZ2FyYWdlcyBmb3IgYmVpbmcgdW51c2FibGUsIHdoaWNoIG1pZ2h0IGhhdmUgYmVlbiBzY3JlZW5lZCB3aXRoIGJldHRlciBsaXN0aW5ncy4gRm9yIGFuIGVudGh1c2lhdCB3aG8gY2FyZXMgYWJvdXQgdGhlIGdhcmFnZSwgaG93IGJpZyBpcyBpdD8gVGhlcmUgYXJlIHRpbnkgMiBjYXIgZ2FyYWdlcyBhbmQgbGFyZ2UgMiBjYXIgZ2FyYWdlcy4gVGhlcmUgYXJlIGxhcmdlIDIgY2FyIGdhcmFnZXMgdGhhdCBhcmUgbW9yZSB1c2VhYmxlIHRoYW4gc21hbGwgMyBjYXIgZ2FyYWdlcy4KSGF2ZSB5b3UgZXZlciBzZWVuIHRoZSB0YWJsZXMgd2l0aCB0aGUgQ2FzaW5vIFBva2VyIFRhYmxlIEZlbHQgdGhhdCBtYWRlIHlvdSB3b25kZXIgaG93IGluIHRoZSBoZWNrIHRoZXkgZXZlciBtYWRlIGl0PyBUaGUgdGhpbmcgaXMsIHRoZXkgZGlkbid0IG1ha2UgaXQgYXMgdGhlcmUgYXJlIGN1c3RvbSBidWlsdCB0YWxlcyB0aGF0IGNhbiBiZSBwdXJjaGFzZWQuIApJIGxvdmVkIEZhbGxvdXQgMywgRmFsbG91dCBOViwgYW5kIGV2ZW4gRmFsbG91dCA0LCBidXQgSSBkaWQgbm90IHBsYXkgdGhlbSBhcyBtdWNoIGFzIEkgZGlkIE9ibGl2aW9uIG9yIFNreXJpbS4gSSBwbGF5ZWQgYSBjb3VwbGUgb2YgZGlmZmVyZW50IHR5cGVzIG9mIGNoYXJhY3RlciBpbiB0aGUgRmFsbG91dCBmcmFuY2hpc2UgYnV0IHRoZXkgc29ydCBvZiBlbmRlZCB1cCB1c2luZyBhbG1vc3QgdGhlIHNhbWUgZ2VhciBhbmQgd2VhcG9ucyBhZnRlciBzb21lIHRpbWUuIEkgd2FzIGp1c3QgcGxheWluZyB0aGVtIGFnYWluIHRvIGdvIHRocm91Z2ggdGhlIHN0b3J5IGFub3RoZXIgdGltZSBvciBtYXliZSBnbyBmb3IgYSBkaWZmZXJlbnQgZW5kaW5nIGFuZCBjaG9vc2Ugbm90IHRvIHVzZSBWQVRTIG9yIFBvd2VyIEFybW9yIHRoYXQgdGltZS4gCkl0IGJlY29tZXMgYSBzZWxmIHBlcnBldHVhdGluZyBjeWNsZS4uIApBbHRob3VnaCBDaGluYSBoYXMgcmVjZW50bHkgc2V0IHVwIGEgc3BlY2lhbGl6ZWQgY291cnQgaW4gQmVpamluZyB0byBkZWFsIHdpdGggaW50ZWxsZWN0dWFsIHByb3BlcnR5IHJpZ2h0cywgZW5mb3JjZW1lbnQgcmVtYWlucyBhIGtleSBvYnN0YWNsZSwgYW5kIGEgZGVlcGVyIGNvbmNlcm4gaXMgYSBjdWx0dXJhbCBkaXNjb25uZWN0IG92ZXIgdGhvc2UgcmlnaHRzIGJldHdlZW4gYnVzaW5lc3NlcyBpbiB0aGUgdHdvIGNvdW50cmllcywgYWNjb3JkaW5nIHRvIGV4cGVydHMgYXQgV2hhcnRvbiBhbmQgRm9yZGhhbSBVbml2ZXJzaXR5LiBXYXMgc2V0IHRvIGluY3JlYXNlIHRhcmlmZnMgZnJvbSAxMCUgdG8gMjUlIG9uICQyMDAgYmlsbGlvbiB3b3J0aCBvZiBpbXBvcnRzIGZyb20gQ2hpbmEgZWZmZWN0aXZlIEZyaWRheSwgTWFyY2ggMSwgd2l0aCB0aGUgZXhwaXJhdGlvbiBvZiBhIDkwIGRheSBzdXNwZW5zaW9uIG9mIHRhcmlmZiBpbmNyZWFzZXMgdG8gYWxsb3cgZm9yIHRhbGtzIGJldHdlZW4gdGhlIHR3byBjb3VudHJpZXMuIApMYXRlIGdhbWUsIHN5bmVyZ3kgcGFsZXMgaW4gY29tcGFyaXNvbiB0byBBT0UgQ0MgYW5kIERhbWFnZS4gWW91ciBmdWxsIEh1bWFuIHN5bmVyZ3kgZG9lc24gcmVhbGx5IG5lZWQgdG8gYmUgdGhlcmUgaWYgeW91IGhhdmUgYSBUaWRlaHVudGVyIG9yIGFuIEVuaWdtYSBzaXR0aW5nIG9uIHRoZSBiZW5jaC4gClRoZSBtYWluIGdvYWwgaW4gcGxheWluZyBQYWkgR293IHBva2VyIGlzIGZvciBhIHBsYXllciB0byBjcmVhdGUgdHdvIHBva2VyIGhhbmRzIGZyb20gYSBzZXZlbiBjYXJkIGhhbmQgZ2l2ZW4gYnkgdGhlIGRlYWxlciAgIHRoaXMgaW5jbHVkZXMgYSBmaXZlIGNhcmQgaGFuZCBhbmQgYSB0d28gY2FyZCBwb2tlciBoYW5kLgpXYXRjaGluZyB0aGUgb3JpZ2luYWwgTGlmZSBvbiBNYXJzLCBmb3IgbWUsIHdhcyBwcmV0dHkgZWFzeS4gCkRlcGxldGVkIFVyYW5pdW0gd2VhcG9ucyBhcmUgZWZmZWN0aXZlIGF0IGtpbGxpbmcgd2hlcmUgdGhleSBhcmUgcHJvZHVjZWQgIG1vc3RseSB0aHJvdWdoIGNhbmNlciAgIHRoZW4gYWdhaW4gd2hlcmUgdGhleSBhcmUgdXNlZCAgYmVjYXVzZSB0aGV5IGRpcHBlZCBpbiBub24gZmlzc2lvbmFibGUgcmFkaW9hY3RpdmUgbWF0ZXJpYWwgdGhleSBjYW4gZ28gdGhyb3VnaCBhbnl0aGluZyAgYW5kIHRoZW4gb2YgY291cnNlIHRoZSBwb3B1bGF0aW9ucyBleHBvc2VkIHRvIHRoZW0gIHNvbGRpZXJzIGFuZCBjaXZpbGlhbnMgIGNhbiBkaWUgbGF0ZXIgZnJvbSBhbGwgc29ydHMgb2YgdXJhbml1bSByZWxhdGVkIGlsbG5lc3Nlcy4uIAoiQnVuaW9uZXR0ZSIgaXMgdGhlIHNpbWlsYXJseSBzd29sbGVuIGJvdHRvbSBqb2ludCBvZiBhIHBpbmt5IHRvZS4gCkhheXdhcmQgZm91bGVkIEJ1ZGR5IEhpZWxkIG9uIGEgMyBwb2ludCBhdHRlbXB0IHdpdGggNy42IHNlY29uZHMgbGVmdCwgYWxsb3dpbmcgU2FjcmFtZW50byB0byBwdWxsIGV2ZW4uICJJIHdhcyB0cnlpbmcgdG8gZ2V0IHRoYXQgb25lIGJhY2sgZm9yIHVzLiAKVGhyZWUgbWludXRlcy4gSm9uIFdlcnRoZWltOiBUaHJlZSBtaW51dGVzIGFuZCB5b3UgZm91bmQgdGhlIGxvb3Bob2xlIGluIHRoZSBzdGF0ZSBsb3R0ZXJ5P0plcnJ5IFNlbGJlZTogVGhyZWUgbWludXRlcy4gSSBmb3VuZCAgSSBmb3VuZCBhIHNwZWNpYWwgZmVhdHVyZS4gCkVUQTogaWYgd2FudCB0byBzYXZlIHNvbWUgc3BhY2UsIEkgcmVjb21tZW5kIHNvbWV0aGluZyBsaWtlIHRoaXMgb3JnYW5pemVyOyB3ZSBoYWQgc29tZXRoaW5nIHNpbWlsYXIgYXR0YWNoZWQgdG8gdGhlIGZyb250IG9mIG91ciBwYWNrIGFuZCBwbGF5LCBhbmQgaXQgd2FzIG5pY2UgaGF2aW5nIGV2ZXJ5dGhpbmcgZWFzaWx5IHdpdGhpbiByZWFjaCB3aGlsZSBjaGFuZ2luZyB0aGUgYmFieS4KMjAxMCwgWnluZ2EgY3V0IGEgZGlzdHJpYnV0aW9uIGRlYWwgd2l0aCBZYWhvbyB0byBmZWF0dXJlIGdhbWVzLCBpbmNsdWRpbmcgcG9rZXIsIEZpc2hWaWxsZSBhbmQgTWFmaWEgV2Fycywgb24gdGhlIHNlYXJjaCBlbmdpbmUgZ2FtZXMgY2hhbm5lbC4gVGhlIGNvbXBhbnkgaGFzIG5vdCBkaXNjbG9zZWQgcmV2ZW51ZSBnZW5lcmF0ZWQgZnJvbSB0aGUgWWFob28gcGFydG5lcnNoaXAuIEluIGl0cyBicm9hZGVzdCBnbG9iYWwgZGl2ZXJzaWZpY2F0aW9uIG1vdmUgdG8gZGF0ZSwgWnluZ2Egb24gSnVseSAyNiBhbm5vdW5jZWQgdGhhdCBpdCBoYXMgcGFydG5lcmVkIHdpdGggVGVuY2VudCwgb25lIG9mIENoaW5hIHRvcCBJbnRlcm5ldCBzZXJ2aWNlIHByb3ZpZGVycy4gCk11dGVXaGFsZSB1CldvdyB0aGlzIHdhcyB2ZXJ5IGludGVyZXN0aW5nLiBUaGFua3MgZm9yIHB1dHRpbmcgdGhpcyB2aWRlbyB0b2dldGhlciwgYWJzb2x1dGVseSB0cmFnaWMgd2hhdCBoYXBwZW5lZCB0byBoZXIuIApNYW4sIG15IHdpZmUgYW5kIEkgaGFkIG5vIHByb2JsZW1zIHdpdGggdGhlIGJ1ZGdldCBmb3IgdGlja2V0cywgbG9va2VkIGF0IGhvdGVscyBhbmQgd2hpbGUgYSBiaXQgbW9yZSBwcmljeSBvdmVyIHRoZSB3ZWVrZW5kIHdlIGZvdW5kIHNvbWUgYWNjZXB0YWJsZSByYXRlcywgdGhlbiB3ZSBsb29rZWQgYXQgYWlyZmFyZSBhbmQgaW1tZWRpYXRlbHkgc2FpZCBoZWxsIG5vLiBXaXRoIHRoZSBob2xpZGF5IGFuZCB3ZWVrZW5kIHJhdGVzIGl0IHdvdWxkIGNvc3QgdGhlIHR3byBvZiB1cyBvdmVyICQxMTAwIHRvIGZseSBTb3V0aHdlc3QgZnJvbSBNaWNoaWdhbiB0byBWZWdhcy4gU2ltcGx5IG5vdCB3b3J0aCBpdCBhdCB0aGF0IHBvaW50LiAKT2YgbWVldGluZyBzcGFjZSwgYW5kIG91ciBvdXRzdGFuZGluZyBzdGFmZiBjYW4gYXNzaXN0IHlvdSBpbiBwbGFubmluZyBhbnkgZXZlbnQuIApEaXNjdXNzIGFib3V0IGF1dGlzbS4gCkJ1dCBTdGFwcCBzYXlzIHRob3NlIHRpbWVzIGJlZm9yZSBDcmVlZCdzIDIwMDQgYnJlYWt1cCBhbHNvIGNyZWF0ZWQgZ3JlYXQgbXVzaWMuIApBYm91dCBRdWVlbnNsYW5kIFRpbWVzIEF1ZGllbmNlIFBhbmVsIEFib3V0IFVzIENvbnRhY3QgVXMgT3VyIFRlYW0gVXNlIG91ciBDb250ZW50IEhvbWUgRGVsaXZlcnkgZVBhcGVyIFBob3RvIFNhbGVzIExldHRlcnMgdG8gdGhlIEVkaXRvciBDb21wZXRpdGlvbiBUZXJtcwpZb3Ugc2VjdXJlZCB5b3VyIHNwb3QgaW4gbGluZS4gVGhhdCBpcyB3aHkuClRoZSBraW5kIG9mIGFwb2xpcG9wcm90ZWluIEUgd2UgaGF2ZSBpcyBkZXRlcm1pbmVkIGJ5IGdlbmV0aWNzLiBBcG9FMyBpcyB0aGUgbW9zdCBjb21tb24gYW5kIGlzIHByZXR0eSBuZXV0cmFsIHdpdGggcmVzcGVjdCB0byBBbHpoZWltZXJzIHJpc2suIEFwb0U0IGlzIGxpbmtlZCB3aXRoIGEgaGlnaGVyIGluY2lkZW5jZSBvZiBBbHpoZWltZXJzLgpPUCBmcmVlbHkgYWRtaXRzIHNoZSBkaWRuIHNheSBhbnl0aGluZyB0byB0aGUga2lkcyBvciB0aGUgTUlMIHVudGlsIGFmdGVyIGFsbCBvZiB0aGlzIGhhcHBlbmVkLiBTaGUgcmVsaWVkIG9uIEJGIHRvIHNheSBpdCBldmVuIHRob3VnaCBzaGUgYWRtaXRzIGhlcnNlbGYgc2hlIGtuZXcgQkYgd291bGRuIGRvIGl0LiBTbyBzaGUga25ldyBCRiB3b3VsZG4gc2V0IGEgYm91bmRhcnkgYW5kIGluc3RlYWQgbGVmdCB0d28gY2hpbGRyZW4gYW5kIGhlciBNSUwgY2x1ZWxlc3MgYW5kIGtub2NraW5nIG9uIGEgbG9ja2VkIGRvb3IgdGhhdCB0aGV5IGhhZCBubyByZWFzb24gdG8gZXhwZWN0IHRvIGJlIGJhcnJlZC4gCkhvd2V2ZXIsIHVubGlrZSBtb3JlIHByZXN0aWdpb3VzIERpc25leSBmaWxtcyBtYWRlIGluIHRoZSAxOTQwcyBzdWNoIGFzIFBpbm9jY2hpbywgRmFudGFzaWEgYW5kIEJhbWJpLCBTYWx1ZG9zIEFtaWdvcyBtYWRlIGEgbW9kZXN0IHByb2ZpdC4uIApUaGUgcHJvYmxlbSBpc24gZGl2ZXJzZSBldGhuaWNpdHkgb3IgY3VsdHVyZSwgYnV0IGEgY29tcG9zaXRlIG9mIGN1bHR1cmUgd2l0aG91dCBhbnkgaW50ZWdyYXRpb24gb3IgY29tbW9uIGdyb3VuZC4gClRoZXJlIGFyZSBtYW55IHJlYXNvbnMgdG8gY29uc2lkZXIgdGhlIEJsYWNramFjayBhbmQgVGV4YXMgSG9sZGVtIDM2IHggNzIgSW5jaCAyIFNpZGVkIExheW91dCBhcyBhIGdpZnQgdGhpcyBob2xpZGF5IHNlYXNvbi4gCkZESSBhcHByb2FjaGVzIGhhdmUgYmVlbiB0aGUgc2FtZSBmb3IgdGhlIGludGFuZ2libGVzLCB3aGVyZSwgd2hlbiB5b3UgYnJpbmcgdGhlc2UgY29tcGFuaWVzIGluLCB0aGV5IHB1dCBhIGhhbGYgYSBkb3plbiBwZW9wbGUgaW4gYSBsYWIsIHRoZXkgcG9hY2ggdGhlIGJlc3QgdGFsZW50IGFuZCB0aGV5IHBvYWNoIHRoZSBJUCwgYW5kIHRoZW4geW91IGxvc2UgYWxsIHRoZSB3ZWFsdGggZWZmZWN0cywgQmFsc2lsbGllIHNhaWQuCkFuZCBpZiB5b3UgYXJlIHN0aWxsIGJvcmVkLCB0aGVyZSBpcyBhbHdheXMgIkNoaWNrZW4gQmluZ28iIHdoaWNoIGlzIHJ1bW9yZWQgdG8gYmUgcGxheWVkIHRoZXJlIHNvbWV0aW1lcy4gQm9hcmRzIGFyZSBwbGFjZWQgb24gdGhlIGdyb3VuZCB3aXRoIG51bWJlcnMgb24gdGhlbSwgYW5kIHdoZXJldmVyIHRoZSBjaGlja2Vucy4gUE9PUC4gCkluIG9yZGVyIHRvIHVuZGVyc3RhbmQgd2h5IHRoYXQgaXMgYW5kIGhvdyBpdCdzIHBvc3NpYmxlLCBpdCdzIG5lY2Vzc2FyeSB0byBsb29rIGF0IHRoZSBoaXN0b3J5IG9mIHByb3N0aXR1dGlvbiBpbiBnZW5lcmFsLCBob3cgdGhlIHNleCBpbmR1c3RyeSBiZWdhbiBpbiBMYXMgVmVnYXMgYW5kIHdoYXQgdHlwZXMgb2Ygc2V4IHdvcmtlcnMgcGx5IHRoZWlyIHRyYWRlIGluIHRoZSBjaXR5LgpBdXRvbWF0aW9uIGFuZCBjbG91ZC9pbmZyYXN0cnVjdHVyZSBhcyBjb2RlIGlzIHRoZSB3YXkgb2YgdGhlIGZ1dHVyZS4gClN0ZXBoZW4gSGFycGVyIHN1cmUgaXMgaGFyZCB0byByZWFkLCBidXQgaW4gdGhlIGdhbWUgb2YgaGlnaCBzdGFrZXMgcG9rZXIgb3ZlciB0aGUgZWxlY3Rpb24gZGViYXRlcywgaGUgc2VlbXMgdG8gaGF2ZSBtaXNyZWFkIHRoZSBvdGhlciBwbGF5ZXJzLgpUaGVuIGhlIHRyaWVkIHRvIHB1dCBoaXMgc3RyYXRlZ3kgaW50byBwcmFjdGljZS4gClR1cm5zIG91dCBJIHdhcyBqdXN0IHdyb25nLCBvciBhdCBsZWFzdCB3cm9uZyBhYm91dCBvbmUgb2YgdGhlIHBvc3NpYmxlIGludmVzdG1lbnRzOiBCb3RveC4uIApTTywgSSB0b29rIG1hbnkgd29tZW4sIG1hZGUgdGhlbSBudW5zIGFuZCBhIGNvdXBsZSBtZW4sIGFsbCB0aGUgY2hpbGRyZW4sIGFzc2lnbmVkIHRoZW0gdG8gdGhpcyBhcmVhIHdpdGggYWxsIHRoZSBzZXQgdXAgcmVzb3VyY2VzLiAKV2hhdCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRvdXJuYW1lbnQgcG9rZXIgYW5kIGNhc2ggcG9rZXI/ClJBRExFWSB1ClRoZSAzMCBJbmNoIFJvdWxldHRlIFdoZWVsIGhhcyBiZWVuIHRoZSBzdWJqZWN0IG9mIG1hbnkgbW92aWVzLCBwZXJoYXBzIHRoZSBtb3N0IGZhbW91cyBiZWluZyBDYXNhYmxhbmNhLiBUaGlzIDE5NDIgbW92aWUgdXNlZCB0aGUgcHJlbWlzZSBvZiBhIHRyaWNrIFJvdWxldHRlIFdoZWVsIHRvIGFsbG93IHR3byB3aW5zIG9uIHRoZSBudW1iZXIgMjIuIAo=|<---