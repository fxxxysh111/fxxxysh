--->|RScgYW1tZXNzbyBsJ2ludGVydmVudG8gcGVyIGRlbGVnYSBkYSBjb25mZXJpcnNpIHBlciBpc2NyaXR0byBlc2NsdXNpdmFtZW50ZSBhZCBhbHRybyBzb2NpbywgIHZpZXRhdG8gaWwgY3VtdWxvIGRlbGxlIGRlbGVnaGUgaW4gbnVtZXJvIHN1cGVyaW9yZSBhIGNpbnF1ZSBlIG5vbiBzb25vIGFtbWVzc2kgdm90aSBwZXIgY29ycmlzcG9uZGVuemEuIApQcmVmbG9wIGlzIGEgNGJldC4gRXF1aXRpZXMgZHJvcCBxdWlja2x5IGluIG11bHRpd2F5IHNpdHVhdGlvbnMuIFdlIGFsc28gT09QLCB3aGljaCBtZWFucyB3ZSBnb2luZyB0byBoYXZlIGEgdG91Z2ggdGltZSBwbGF5aW5nIGEgbXVsdGl3YXkgcG90IG9uIGEgbG90IG9mIGJvYXJkcy4gCkhlIHNvdW5kcyBsaWtlIGEgbGF6eSBqZXJrIHdobyBpcyBhY3R1YWxseSB0cnlpbmcgdG8gc3BvaWwgdGhlIGZ1biB0aGluZ3MgeW91IGhhdmUgcGxhbm5lZC4gClRoZSBpbnRlcm5hbCB0ZW1wZXJhdHVyZSBvZiB0aGUgbWVhdCB3aWxsIGNvbnRpbnVlIHRvIHJpc2UgYnkgYWJvdXQgMTAgZGVncmVlcy4gUmVtb3ZlIHRoZSB2ZWdldGFibGVzIGFuZCBzZXQgYXNpZGUuIApGb3IgY2hlYXBlciBidXQgc3RpbGwgc2ltaWxhcjsgbG9vayBhdCB0aGUgTXVzdGFuZyBHVCBQcmVtaXVtIGFuZCBNMjQwaShoYXMgQVdEIGFuZCBzYW1lIGVuZ2luZSBhcyBNMikuLiAKU2hlIHdhcyBhdCBoaXMgYmVkc2lkZSB3aGVuIGhlIGRpZWQuLiAKVGhlIGlkZWEgaXMgdGhhdCBieSBhbGxvd2luZyBtaXN0YWtlcyBpbiByZXBsaWNhdGlvbiwgdGhlcmUgd2lsbCBiZSBhIHBvcHVsYXRpb24gb2YgY2VsbHMgdGhhdCBkZXZlbG9wIG11dGF0aW9ucyB0aGF0IG1ha2UgdGhlbSBiZXR0ZXIgc3VpdGVkIGZvciB0aGlzIHN0cmVzc2Z1bCBlbnZpcm9ubWVudC4gCldlIG1heSBjb250YWN0IHRoaXJkIHBhcnRpZXMgbWVudGlvbmVkIHdpdGhpbiB0aGUgZmlsZSBpbiBvcmRlciB0byBvYnRhaW4gY29uc2VudCB0byBkaXNjbG9zZSB0aGUgaW5mb3JtYXRpb24uIFdoZXJlIGNvbnNlbnQgY2Fubm90IGJlIG9idGFpbmVkIG9yIGlzIGRlbmllZCB3ZSB3aWxsIGNvbnNpZGVyIHRoZSByZWFzb25zIGFuZCB0aGUgVW5pdmVyc2l0eSBkdXR5IG9mIGNhcmUgdG8gYm90aCBwYXJ0aWVzIGFzIHNwZWNpZmllZCBpbiB0aGUgRFBBIGluIG9yZGVyIHRvIGRlY2lkZSB3aGV0aGVyIG9yIG5vdCB0byBkaXNjbG9zZSB0aGUgaW5mb3JtYXRpb24uIEFsbCByZXF1ZXN0cyB3aWxsIGJlIGRlYWx0IHdpdGggd2l0aGluIDMwIGNhbGVuZGFyIGRheXMgb2YgdGhlIHJlY2VpcHQgb2YgdGhlIHZhbGlkIHJlcXVlc3QgKGluY2x1ZGluZyB5b3VyIElELCByZWxldmFudCBpbmZvcm1hdGlvbiBhbmQgcmVzcG9uc2UgdG8gYW55IGNsYXJpZmljYXRpb24pLiBUaGUgaW5mb3JtYXRpb24gd2lsbCBiZSBkaXNwYXRjaGVkIHRvIHlvdSBhcyBzb29uIGFzIHRoZSBhYm92ZSBwcm9jZXNzIGlzIGNvbXBsZXRlLiBJbiBzb21lIGV4Y2VwdGlvbmFsIGNpcmN1bXN0YW5jZXMgVGhlIFVuaXZlcnNpdHkgbWF5IGV4dGVuZCB0aGUgZHVyYXRpb24gb2YgdGhlIHByb2Nlc3MgdXAgdG8gOTAgZGF5cywgd2hlcmUgdGhpcyBpcyB0aGUgY2FzZSBpdCB3aWxsIGJlIGNvbW11bmljYXRlZCBjbGVhcmx5IHRvIHlvdS4KQXV0aXNtIHN0dWR5IHNob3dzIHN1cnByaXNlcwpMYWIgUmF0cyBwcmVmZXIgU3VnYXIgb3ZlciBDb2NhaW5lClVuZSBmb2lzIHN1ciBwbGFjZSwgb24gbHVpIGEgZGl0IDogQ2UgbiBwYXMgaWNpLCBpbCBmYXV0IGFsbGVyIFJpY2htb25kLiAKSXQgbWF5IGJlIHNvbWV3aGF0IHNpbWlsYXIgdG8gdGhlIHN0eWxlIG9mIExBTiwgYnV0IHRoZSByZWQgd2F2eSBzdHJpcGUgYWNyb3NzIHRoZSBmdXNlbGFnZSB3aW5zIGl0IGZvciBtZS4gCkxQVDogV2hlbiB5b3Ugd3JpdGUgMyByYW5kb20gZmFrZSBQSU5zIG9uIGEgc21hbGwgbm90ZSBhbmQgcHV0IGl0IGludG8geW91ciB3YWxsZXQgd2hlcmUgeW91IGFsc28ga2VlcCB5b3VyIGJhbmsgb3IgY3JlZGl0IGNhcmRzLCBhIHRoaWVmIHdpbGwgbW9zdCBsaWtlbHkgdXNlIHRob3NlIFBJTnMgYW5kIHdpbGwgY2F1c2UgeW91ciBjYXJkIHRvIGJlIGxvY2tlZC4gWW91IGtub3cgaW4gdGhlIFVTIHByZXR0eSBtdWNoIGV2ZXJ5IGNhcmQgb3V0IHRoZXJlIGhhcyB6ZXJvIGxpYWJpbGl0eSBjb3ZlcmFnZSByaWdodD8gSSB0aGluayBwZW9wbGUgZ2V0IHdheSB0b28gc2NhcmVkIG9mIGNhcmRzIGJlaW5nIHN0b2xlbiBvciBjb21wcm9taXNlZC4gWW91IHJlYWxseSBoYXZlIG5vdGhpbmcgdG8gZmVhci4uIApTdGFsbGlvbnMgZ29hbHRlbmRlciBwbGF5ZWQgYW4gb3V0c3RhbmRpbmcgZ2FtZSwgbWFraW5nIHNvbWUgYW1hemluZyBzYXZlcy4gU2NvcmluZyBmb3IgdGhlIEdsYWRpYXRvcnMgd2FzIERhd3NvbiBXZXZlcnMgd2l0aCBhbiBhbWF6aW5nIHNpeCBnb2FscywgZm9sbG93ZWQgYnkgZG91YmxlcyBmcm9tIENhZWxhbiBSaWRvdXQsIENhbSBBbmRyZXMsIFRhdGUgV2hpdGUgYW5kIFN0cm91ZCBhbmQgc2luZ2xlcyBmcm9tIExvZ2FuIFRpdmlkYXIsIFNwZW5jZXIgS2VubmVkeSBhbmQgRXZhbiBKb2huc29uLiBUaGVIT0UkRVMgQVQgUk9DS1kgTU9VTlRBSU4gR1JBTkRTVEFORCBMSVZFIEhPV1NFIFJBQ0lORyBBQ1RJT04gUG9zdCBUaW1lIEZyaWRheSA2OjAwcG0gU2F0dXJkYXkgU3VuZGF5IDE6MzBwbSBTYXR1cmRheSBDaGlub29rIENvdW50cnkgUm9kIFJvbiAxMDowMGFtIDQ6MDBwbSBEYW5jZSB0byBLZW5ueSB0aGUgQ3J1aXNlcnMgODowMHBtIFNlZSBwYWdlIEE3IGZvciBkZXRhaWxzISBCaWlnZ1MgTG9jYXRlZCB1bmRlciB0aGUgR3JhbmRzdGFuZCBCbGVnb250IEV4dGVyaW9ycyBWaW55bCBTaWRpbmcgU29mZml0IEZhc2NpYSBBY2NlbnQgQm9hcmRzKDQwMykgMzMxIDE1OTQgRGF2aWQgSi4gCllvdSBhbGwgYWN0IGxpa2UgeW91ciBwYXJlbnRzICggYXNzdW1pbmcgeW91ciBmcm9tIHRoZSBhZ2VzIG9mIDE4IDI4KSBoYWQgbG9hZHMgb2YgbW9uZXkgcmFpc2luZyB5b3UuIE15IHBhcmVudHMgZG8gd2VsbCBub3cgYnV0IHdoZW4gdGhleSB3ZXJlIHJhaXNpbmcgbWUgYW5kIG15IGJyb3RoZXIgdGhleSB3ZXJlIHBpbmNoaW5nIHBlbm5pZXMuIApObyBSYW5keSBCYXVtZ2FyZG5lci4gCkluIHNvbWUgc3RhdGVzIHN1Y2ggYXMgTlkgYW5kIE1BLCBmb3JtZXIgcHJvc2VjdXRvcnMgZGVsaWJlcmF0ZWx5IGFsdGVyZWQgcmVwb3J0cyBhbmQgd2l0aGVkIGV4Y3VscGF0b3J5IGV2aWRlbmNlIGZyb20gdGhlIGRlZmVuc2UgaW4gbnVtZXJvdXMgY2FzZXMgYW5kIG5vdGhpbmcgaGFwcGVuZWQgdG8gdGhlbS4gTW9zdCwgaWYgbm90IGFsbCBvZiB0aGVtIG9wZW5lZCBwcml2YXRlIHByYWN0aWNlcyBhcyBkZWZlbnNlIGxhd3llcnMuLiAKSSBzb3JyeSBtYW4uIEl0IGRlZmluaXRlbHkgb25lIG9mIHRoZSBzaGl0dGllc3QgcGFydHMgb2YgaXQuIEkgZG8gbWFuYWdlbWVudCBub3csIGJ1dCB3aGVuIEkgZHJvdmUsIHRoZXJlIHdlcmUgdGltZXMgaW4gdGhlIHNub3cgd2hlcmUgSSB3YXMgbGVnaXQgdGVycmlmaWVkLCBvciBnb3Qgc3R1Y2sgYW5kIGhhZCB0byBoYXZlIHNvbWVvbmUgYmFpbCBtZSBvdXQuIApJIGNvdWxkIHRoZW4gYXJndWFibHkgc3VnZ2VzdCBTYWJvLCBNaWhhd2ssIGFuZCBQb3N0IHRpbWUgc2tpcCBMdWNjaS4gCkFsc28gc3Vydml2ZWQgYnkgbWFueSBuaWVjZXMgYW5kIG5lcGhld3MuIEhlIGlzIHByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzIEZyYW5rIGFuZCBUZXJlc2EgR3Jhbm8sIGJyb3RoZXIgQ2hyaXMgR3Jhbm8sIGJyb3RoZXIgIGluIGxhdyBUaG9tYXMgYW5kIHNpc3RlciBpbiBsYXcgTWFyeS4gCkRyLiBBbm5hIEtvbm9wa2EgaXMgZ3JlZXRlZCBieSBCYXJiYXJhIE1jS2VsdnkgZm9sbG93aW5nIGEgTm92LiAzIGVtZXJnZW5jeSBjb3VydCBoZWFyaW5nIGFib3V0IEtvbm9wa2EncyBsaWNlbnNlIGluIENvbmNvcmQsIC4gR2VvZmYgRm9yZXN0ZXIgLyBUaGUgQ29uY29yZCBNb25pdG9yIHZpYSBBUCwgUG9vbApUaGUgcmFwaWQgYWR2YW5jZW1lbnRzIGluIHRoZSBrbm93bGVkZ2Ugb2Ygc2NpZW5jZSBhbmQgdGVjaG5vbG9neSBoYXZlIGxlZCB0byB0aGUgaW52ZW50aW9uIG9mIG1hbnkgbmV3IHNjaWVudGlmaWMgdG9vbHMgYW5kIGdhZGdldHMgd2hpY2ggaGF2ZSBiZWVuIGFpbWVkIHRvIG1ha2UgaHVtYW4gbGl2ZXMgZWFzaWVyIGFuZCBiZXR0ZXIuIFRoZSBhZHZlbnQgb2YgY29tcHV0ZXIgYW5kIGludGVybmV0IGJyb3VnaHQgbWlyYWN1bG91cyBjaGFuZ2VzIGluIHRoZSB3YXkgYnVzaW5lc3NlcyBhcmUgY2FycmllZCBvdXQuIEludGVybmV0IGluIGZhY3QgY2hhbmdlZCB0aGUgd2F5IHdlIHBsYXkgZ2FtZXMgYW5kIGhhdmUgb3VyIGRvc2Ugb2YgZnVuIGFuZCBlbnRlcnRhaW5tZW50LiAKVGhlbiB0aGV5IGNhbWUgZm9yIHRoZSBKZXdzLCBhbmQgSSBkaWQgbm90IHNwZWFrIG91dApUaG9zZSBzbGF2ZXMgc2hvdWxkIHdvcmsgYWxsIHRoZSBoYXJkZXIgYmVjYXVzZSB0aGVpciBlZmZvcnRzIGFyZSBoZWxwaW5nIG90aGVyIGJlbGlldmVycyB3aG8gYXJlIHdlbGwgbG92ZWQuIApMZUJyb24gb3ZlcndoZWxtZWQgYWZ0ZXIgcGFzc2luZyBKb3JkYW4KTVkgTU9USEVSISBBUkUgWU9VIENSQVpZISBIZSBzdXJlIGRvZXMga25vdyBob3cgdG8geWVsbC4gU29tZXRpbWVzIEkgdGhpbmsgQmVuIGhhcyBzcGVudCB0b28gbXVjaCB0aW1lIGF0IG15IGRhZCBob3VzZS4gSGUgaGFzIG1vcmUgb2YgbXkgZGFkIGluIGhpbSB0aGFuIGhlIGRvZXMgb2YgSmVmZiBvciBldmVuIEplZmYgcGFyZW50cy4gCkRvbmFsZCBKLiAKQXJlIHNvIG1hbnkgdGhpbmdzIHlvdSBjYW4gZG8gdG8gY29ubmVjdCB3aXRoIHlvdXIgY29tbXVuaXR5OyBpdCBhIHNoYW1lIHdoZW4gSSBzZWUgYnVzaW5lc3NlcyBub3QgZG9pbmcgaXQuIEFncmVlZCwgbm90aW5nIHRoYXQgcGhpbGFudGhyb3BpYyB0aGlua2luZyBpcyBtb3JlIHRoYW4gZ29vZCBtYXJrZXRpbmc7IGl0IGNhbiBiZSBhIHN0cmF0ZWdpYyBhZHZhbnRhZ2UuIEluIGFuIGFnZSBvZiBoZSBzYWlkLiAKWW91IGhhdmUgdG8gYmUgZ29vZCBhdCB0aGlzIG1lbnRhbCBzZXBhcmF0aW9uIGJlY2F1c2UgdGhlIG9ubHkgdGltZSBzaG90cyBnbyB3cm9uZyBpcyB3aGVuIHBlb3BsZSBrZWVwIHRyeWluZyB0byBwbGF5IGF0IHRob3NlIGhpZ2hlciBzdGFrZXMgYWZ0ZXIgYnVybmluZyB0aHJvdWdoIGFsbCB0aGUgc2hvdCBtb25leS4uIApBIGZyaWVuZCBvZiBtaW5lIGdhdmUgbWUgc29tZSBkb3RlcnJhIG9pbCBhcyBhIGdpZnQgdG9vIGxhc3QgdGltZSBJIHZpc2l0ZWQgaGVyLiBJIGhhZCBubyBpZGVhIGl0IHdhcyBhbiBNTE0gYXQgdGhlIHRpbWUgZWl0aGVyIChuZXZlciBzZWVuIGl0IGluIG15IGhvbWUgY291bnRyeSBhbmQgc2hlIHRoZSBvbmx5IG9uZSBJIHNlZW4gcG9zdCBpdCBvbmxpbmUpLiBJIGxvdmUgZXNzZW50aWFsIG9pbHMgKGFsdGhvdWdoIEkgdXNlIHRoZW0gaW4gYSBkaWZmdXNlciB0byBoZWxwIG1lIHNsZWVwL2JyZWF0aGUgbW9yZSBjbGVhcmx5L215IGhvdXNlIHNtZWxsIG5pY2UgICBOT1QgYXMgYSBjdXJlIGFsbCBzbmFrZSBvaWwpLiAKVGhleSBhbHNvIGhhdmUgYW4gSW5zdGFncmFtIGFjY291bnQgZm9yIEJveGluZy4gCkNvbnNpZGVyIGhvdyB5b3UgYXJlIGdvaW5nIHRvIGJlIG1vdmluZyBmb3J3YXJkIHdpdGggdGhlIGRlc2lnbiBhbmQgd2hhdCB5b3VyIG5lZWRzIGFyZSBnb2luZyB0byBiZSBsaWtlLi4gCkxlcyBBbm5hbGVzIGFrYXNoaXF1ZXMsIGdhbGVtZW50IGFwcGVsZXMgQXJjaGl2ZXMgYWthc2hpcXVlcywgQ2hyb25pcXVlcyBha2FzaGlxdWVzIG91IGVuY29yZSBNbW9pcmUgYWthc2hpcXVlIHNvbnQgdW4gY29uY2VwdCBzb3RyaXF1ZSBjciBwYXIgbGVzIHRob3NvcGhlcyAgbGEgZmluIGR1IFhJWGUgc2ljbGUsICBwYXJ0aXIgZCBkZSBsYSBwaGlsb3NvcGhpZSBpbmRpZW5uZSBldCBwb3B1bGFyaXMgZW4gT2NjaWRlbnQgcGFyIGxlcyBsaXZyZXMgZGUgTG9ic2FuZyBSYW1wYSwgZXQgZ2FsZW1lbnQgZGFucyBsZXMgcGF5cyBmcmFuY29waG9uZXMgcGFyIGxlcyBvdXZyYWdlcyBkZSBEYW5pZWwgTWV1cm9pcyBldCBBbm5lIEdpdmF1ZGFuLiAKSSB0aGluayB0aGUgbGFzdCBSUEcgd2hlcmUgdGhlIHN0b3J5IHdhcyBvbmUgb2YgdGhlIG1haW4gcmVhc29ucyBJIGtlcHQgcGxheWluZyBpdCB3YXMgU2hhZG93cnVuOiBEcmFnb25mYWxsIGZvciBzb21lIHJlYXNvbi4gUHJvYmFibHkgYmVjYXVzZSBJIHNpbXBseSB3YW50ZWQgdG8ga25vdyB3aGF0IHdhcyBhY3R1YWxseSBnb2luZyBvbiwgc2ltaWxhciB0byBhIGdvb2QgZGV0ZWN0aXZlIHN0b3J5LiAKQmVpbmcgcmljaCBhbmQgYm9ybiBpbiBhIHJpY2ggZmFtaWx5IGhhcyBpdHMgYWR2YW50YWdlcy4gVGhleSBjYW4gc3RhcnQgd2hhdGV2ZXIgdmVudHVyZSB0aGV5IHdhbnQgYW5kIGlmIGl0IGZhaWxzPyBTdGFydCBhIG5ldyBvbmUuIFNlcmlvdXNseSwgYW55b25lIGNhbiBiZWNvbWUgc3VjY2Vzc2Z1bCB3aXRoIGFsbW9zdCB1bmxpbWl0ZWQgZnVuZGluZywgYmVjYXVzZSB5b3UgY2FuIGFmZm9yZCB0byBmYWlsIHVudGlsIHlvdSBoaXQgdGhhdCBzd2VldCBzcG90LiAKSSBwbGF5IGluIGEgZmV3IGhvbWUgZ2FtZXMuIApZb3UgaGF2ZSB0aGUgb3B0aW9uIG9mIGN1c3RvbWl6aW5nIHBva2VyIGdhbWVzIGhlcmUgd2l0aCBlYXNlLiBUaGUgc2l0ZSBhY2NlcHRzIFVTIHBsYXllcnMuLiAKRXN0b25pYSBqb2luZWQgdGhlIEV1cm9wZWFuIFVuaW9uIGluIDIwMDQgYW5kIHRoZSBldXJvIHpvbmUgaW4gMjAxMTsgTW9sZG92YSdzIEVVIGNhbmRpZGFjeSBoYXMgZ3JvdW5kIHRvIGEgaGFsdC4gCklsIGVzdCBwYXNzZSBzb24gdGVtcHMgIGdvdGVyIHBvdXIgZGNvdXZyaXIgZGUgbm91dmVhdXggZ290cywgYXZvaXIgZGUgbm91dmVsbGVzIGlkZXMuIApJIGRvbiBzdXBwb3NlIHlvdXIgSGF5bmVzIG1hbnVhbCBoYXMgYSBjaXJjdWl0IGRpYWdyYW0/LiAKVGhlIGltcGFzc2Ugb3ZlciBnb3Zlcm5tZW50IGZ1bmRpbmcgYmVnYW4gbGFzdCB3ZWVrLCB3aGVuIHRoZSBTZW5hdGUgYXBwcm92ZWQgYSBiaXBhcnRpc2FuIGRlYWwga2VlcGluZyBnb3Zlcm5tZW50IG9wZW4gaW50byBGZWJydWFyeS4gVGhhdCBiaWxsIHByb3ZpZGVkICQxLjMgYmlsbGlvbiBmb3IgYm9yZGVyIHNlY3VyaXR5IHByb2plY3RzIGJ1dCBub3QgbW9uZXkgZm9yIHRoZSB3YWxsLiBBdCBUcnVtcCdzIHVyZ2luZywgdGhlIEhvdXNlIGFwcHJvdmVkIHRoYXQgcGFja2FnZSBhbmQgaW5zZXJ0ZWQgdGhlICQ1LjcgYmlsbGlvbiBoZSBoYWQgcmVxdWVzdGVkLgpGaW5hbGx5LCBpbiAxMDE2LCBDbnV0IHdhcyBkZWNsYXJlZCBLaW5nIG9mIGFsbCBFbmdsYW5kLiBUaGUgcmVhc29uIHdoeSB0aGUgVmlraW5ncyBpbml0aWFsbHkgcmFpZGVkIEVuZ2xhbmQgd2FzIGJlY2F1c2UgRW5nbGFuZCB3YXMgYSB3ZWFsdGh5IGNvdW50cnkuIFRoZSBEYW5lZ2VsZCB0cmlidXRlMiB3YXMgYmVpbmcgaW5jcmVhc2luZ2x5IHBhaWQ7IG1vbmV5IHdoaWNoIGNvdWxkIGhhdmUsIHBlcmhhcHMsIGJlZW4gcGFpZCB0byBtZXJjZW5hcmllcyB0byBmaWdodCBhZ2FpbnN0IHRoZSBpbnZhZGVycywgb3IsIG1vcmUgcHJvZml0YWJseSwgaW4gYnVpbGRpbmcgYW4gRW5nbGlzaCBhcm1lZCBmb3JjZSBjYXBhYmxlIG9mIGRlZmVhdGluZyB0aGUgaW52YWRlcnMuIApCb3RoIG1lbiBhbmQgd29tZW4gd2VyZSBpbmNsdWRlZC4gCkFjY29yZGluZyB0byBvbmUgbWFudWZhY3R1cmVyLCB0aGUgcmlnaHQgY2hhaXIgYXQgdGhlIHJpZ2h0IGdhbWUgY2FuIHJlYWxseSBoZWxwIGEgY2FzaW5vJ3MgYm90dG9tIGxpbmUuCkdheSBNYXJyaWFnZQoiSSB3YXMgc28gY2xvc2UgdG8gYSBicmFjZWxldCB0aGF0IHllYXIsIiBSYWNlbmVyLiAiV2UgaGFkIGEgdGhyZWUgbW9udGggbGF5b2ZmIGR1cmluZyB0aGF0IHRvdXJuYW1lbnQgYW5kIGl0IHdhcyBkdXJpbmcgdGhlIGxheW9mZiB0aGF0IG15IG1vbSB3YXMgZGlhZ25vc2VkIHdpdGggbGl2ZXIgY2FuY2VyLiBCdXQsIHNoZSBuZXZlciB0b2xkIG1lIGR1cmluZyB0aGUgbGF5b2ZmIGJlY2F1c2Ugc2hlIHdhbnRlZCBtZSB0byBzdGF5IGZvY3VzZWQuIApPdmVydmlldyBmb3IgZHVubW9yZXN0cmlkZW4KSW4gdGhlIFRob21hcyBDb3ZlbmFudCBzZXJpZXMgdGhlIG1haW4gY2hhcmFjdGVyIGlzIGEgbGVwZXIgd2hvIGRldmVsb3BzIGFuIGV4dHJlbWVseSByaWdpZCByb3V0aW5lIG9mIGNoZWNraW5nIGV2ZXJ5IHBhcnQgb2YgaGlzIGJvZHkgdG8gbWFrZSBzdXJlIGhlIGhhc24gZG9uZSBpbmp1cmVkIGhpbXNlbGYgd2l0aG91dCByZWFsaXNpbmcuIEhlIGdldHMgdHJhbnNwb3J0ZWQgdG8gYSBmYW50YXN5IHJlYWxtIHdoZXJlIGhlIGNhbiBmZWVsIGFnYWluICh3aXRoIHRyYWdpYyBjb25zZXF1ZW5jZXMpIGFuZCBhIGxvb29vb29vdCBvZiB0aGUgZmlyc3QgMyBib29rcyBhcmUgdGhlIHByb3RhZ29uaXN0IGNvbnN0YW50bHkgcmVmdXNpbmcgdG8gYWNjZXB0IHRoZSBmYW50YXN5IHdvcmxkIGJlY2F1c2UgaGUgZmVlbHMgaGUgbG9zZSBoaXMgcm91dGluZSBhbmQgZGlzY2lwbGluZSAod2l0aCB0cmFnaWMgY29uc2VxdWVuY2VzKS4gCkFsdGhvdWdoIEkgd2lsbCB5aWVsZCB0aGF0IHBvbGFyaXppbmcgbWFrZXMgcG9zdGZsb3AgbXVjaCBlYXNpZXIuIApJIGhhZCBqdXN0IHJlbG9hZGVkIHRvIDE1MCBvciAyMDAgYmlnIGJsaW5kcyB3aXRoIHNldmVyYWwgZ3JlZW4gY2hpcHMgYWZ0ZXIgbG9zaW5nIGEgZGVjZW50IHBvdCBodXJ0IG15IHN0YWNrIGJlbG93IDEwMCBiaWcgYmxpbmRzLiAKIkkndmUgc3Bva2VuIHRvIGEgZG9jdG9yIGFib3V0IHRoaXMuIE5vIG9uZSBjYW4gc3RvcCB0aGVpciBwdXBpbHMgZGlsYXRpbmcgaWYgdGhleSBnZXQgZXhjaXRlZCBhdCBhIGdvb2QgaGFuZC4gCkhlIGFsc28gd2FzIG9uIG15IGZsaWdodCBiYWNrIHRvIEJ1ciBzdGFuay4gV2Ugd2F0Y2hlZCBzb21lIGNvbGxlZ2UgaG9vcHMgdG9nZXRoZXIgYXQgdGhlIGdhdGUuIApUaGVyZSBhcmUgc29tZSB2ZXJ5IHByb21pbmVudCB0eXBlcyBvZiBnYW1ibGluZyBpbiBJbmRpYS4gVGhlIG1vc3QgZW1pbmVudCBvbmUgb2YgdGhlbSBpcyBNYXRrYSB3aGljaCBob2xkcyBpdCBvcmlnaW4gaW4gTXVtYmFpIGJ5IFJhdGFuIEtoYXRyaS4gTWF0a2EgYWxzbyBrbm93biBieSB0aGUgbmFtZSBTYXR0YSBpcyBhIGdhbWUgY29uY2VybmVkIHdpdGggdGhlIGdhbWJsaW5nIG9mIG51bWJlcnMuIApJIGRvbnQgbGlrZSBjYWxsaW5nIHNpbmNlIHdlIG5vdCBjbG9zaW5nIHRoZSBhY3Rpb24gd2l0aCBzb21lb25lIHdobyBoYXMgc2hvd24gc2lnbmlmaWNhbnQgc3RyZW5ndGggc3RpbGwgdG8gYWN0LCB3ZSBhcmVudCBkZWVwIGVub3VnaC9nZXR0aW5nIGEgZ29vZCBlbm91Z2ggcHJpY2UgdG8gc2V0bWluZSBhbmQgaWYgdGhlIHBsYW4gaXMgdG8ganVzdCBnaWkgYW55d2F5IG9uIG5vbiBhL2sgaGkgYm9hcmRzIHdlIG1heSBhc3dlbGwganVzdCBqYW0gYW5kIG1ha2Ugc3VyZSB3ZSByZWFsaXNlIGFsbCBvdXIgZXF1aXR5IHZzIEFLIGFuZCBtYXliZSBldmVuIGdldCBwZW9wbGUgdG8gaGVyb2ZvbGQgdGhhdCArIEtLIHNvbWUgbm9uIHplcm8gJSBvZiB0aGUgdGltZSAoYWx0aG8gaSBkbyBmZWVsIHRoaXMgaXMgdW5saWtlbHkpLgpCdXQgdGhlcmUgaXMgbm8gcmVhbCBpbnRlbnRpb24gb24gdGhlaXIgcGFydCBvZiBjb21pbmcgYmFjayB0byB5b3VyIGRpc2N1c3Npb24uNSkgRkFJVCBEVSBDT01QTEVURSBFWFRPUkRJQVJFQSBGYWl0IGR1IENvbXBsZXRlIGlzIHdoZXJlIHNvbWVvbmUgZGVjaWRlcyBzb21ldGhpbmcgdGhhdCBlZmZlY3RzIHlvdSB3aXRob3V0IHlvdXIgc2F5IGluIGl0IHRoYXQgaXMgdG9vIGxhdGUgZm9yIHlvdSB0byBkbyBhbnl0aGluZyBhYm91dC4gV2hhdCBiZXR0ZXIgd2F5IGZvciBhIGNoYXJhY3RlciBkaXNvcmRlcmVkIHBlcnNvbiB0byBnZXQgd2hhdCB0aGV5IHdhbnQgdGhlbiBieSBkb2luZyB3aGF0IHRoZXkgd2FudCB0aGVuIHRlbGxpbmcgeW91IGFib3V0IGl0IGFmdGVyIHRoZSBmYWN0LCB3aGVuIGl0J3MgdG9vIGxhdGUuIApBZnRlciBhIHllYXIgaW4gc2VtaW5hcnkgYXQgU3QuIApDYXJleSBUaGVpbCwgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIEdyZXkySyBVU0EsIG9uZSBvZiB0aGUgZ3JvdXBzIHB1c2hpbmcgZm9yIGEgbmF0aW9ud2lkZSBiYW4sIGNhbGxlZCB0aGUgbWFyZ2luICJhc3RvdW5kaW5nIiBhbmQgc2FpZCBpdCB3YXMgb25lIG9mIHRoZSBsYXJnZXN0IGV2ZXIgbmF0aW9uYWxseSBmb3IgYW4gYW5pbWFsIHJpZ2h0cyBtZWFzdXJlLiBBbWVuZG1lbnQgMTMgZXZlbiBnb3QgbWFqb3JpdGllcyBpbiAxMCBvZiB0aGUgMTEgY291bnRpZXMgd2hlcmUgcmFjaW5nIGlzIGhlbGQgaW4gZml2ZSBvZiB0aG9zZSwgc3VwcG9ydCBleGNlZWRlZCA3MCBwZXJjZW50LgpCZWNhdXNlIHRoZSB2aXNpdCBpcyBvbmx5ICQyNSBhZnRlciB0aGUgZG9jdG9yIGFjY2VwdHMgdGhlIG5lZ290aWF0ZWQgcHJpY2UgZnJvbSB0aGUgaW5zdXJlciBhbmQgdGhlIGluc3VyZXIgcGF5cyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBhbGxvd2VkIGFtb3VudCBhbmQgeW91ciBjb3BheS4gWW91ciBpbnN1cmFuY2UgaXMgbm90IG5lZ290aWF0aW5nIG5vciBpcyBpdCBwYXlpbmcsIHNvIHlvdSBhcmUgZ29pbmcgdG8gcGF5IHRoZSBmdWxsIGFtb3VudCB0aGUgZG9jdG9yIGNoYXJnZXMuCk15IG9ubHkgcmVmcmVuY2UgcG9pbnQgb2YgdGhpcyBjb21lcyBmcm9tIG15IE9PVFAgc2F2ZXMuIFNvIHdoYXQgSSBkaWQgaXMgaGF2ZSBhIDMgbWFuIHJvdGF0aW9uIHdpdGggcGl0Y2ggbGltaXQgc2V0IHRvIDUwLiBOb3cgaWRrIGFib3V0IHdhcm11cHMgYW5kIGdldHRpbmcgcmVhZHkgZm9yIGEgZ2FtZSBidXQgZG8geW91IHRoaW5rIHRoZSBpZGVhIG9mIHRocm93aW5nIDUwIHBpdGNoZXMgZXZlcnkgMyBkYXlzIGlzIGxlc3Mgc3RyZXNzZnVsIHRoYW4gdGhyb3dpbmcgOTAgMTAwIHBpdGNoZXMgZXZlcnkgNSBkYXlzPy4gCkkgbWVhbiBldmVuIHRob3VnaCBQYXVsIE1hbmFmb3J0IHByb2JhYmx5IGRpZG50IGNvbGx1ZGUgb3IgZG8gYW55dGhpbmcgdHJlYXNvbm91cywgaGUgZGlkIGluZGVlZCBmYWNpbGl0YXRlIGl0LiAKUHJvYmxlbXMgY2FuIGJlIHRvdWdoIHRvIHNvbHZlLCBidXQga25vdyB0aGF0IG90aGVyIHBlb3BsZSBjYXJlIGFuZCBhcmUgd2lsbGluZyB0byBoZWxwLiAKV1RGPyBZb3Ugc2hvdWxkIHNlZSB0aGUgRkIgcGFnZTsgaXQgYmxvd2luZyB1cC4gCk15IGFpbSBpcyB0byBiZSBudW1iZXIgb25lIHVudGlsIEkgcmV0aXJlLiAzMywgd2FzIHBoaWxvc29waGljYWwgYWZ0ZXIgdGFzdGluZyBkZWZlYXQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIDI5IHJhY2VzLCBhIHN0cmVhayBkYXRpbmcgYmFjayB0d28geWVhcnMuLiAKVGhlcmUgaXMgbm8gZ3JleSBhcmVhLiBCZWluZyB0b28gdW5kZXJzdGFuZGluZyBhbmQgYW4gZW5hYmxlciBnaXZlcyBoaW0gZXhjdXNlcy4gCkFzIHlvdSBrbm93IHBva2VyIGlzIGEgdmVyeSB0b3VnaCBidXNpbmVzcy4gQSBsb3Qgb2YgcG9rZXIgcm9vbXMgY29tcGV0ZSBmb3IgYSBsaW1pdGVkIG51bWJlciBvZiBwbGF5ZXJzLiBOZXcgd2Vic2l0ZXMgb3BlbiBldmVyeSB5ZWFyIGFuZCBtb3N0IG9mIHRoZW0gZGlzYXBwZWFyIGxhdGVyIGJlY2F1c2Ugb2YgaGlnaCBsZXZlbCBvZiBjb21wZXRpdGlvbiBpbiB0aGF0IGJ1c2luZXNzLgpUaGUgdHdvIG1vc3QgY29tbW9uIHZlZ2V0YWJsZXMgQW1lcmljYW5zIGVhdCBhcmUgcG90YXRvZXMgYW5kIHRvbWF0b2VzOyBvcmFuZ2VzIGFuZCBhcHBsZXMgYXJlIHRoZSBtb3N0IGNvbW1vbiBmcnVpdHMgdGhleSByZWFjaCBmb3IgKGJ1dCB0aGUgbWFqb3JpdHkgb2YgdGhhdCBpcyBvcmFuZ2UganVpY2UsIG5vdCB0aGUgd2hvbGUgZnJ1aXQpLiBXaWxkIGVkaWJsZXMgICBtYW55IG9mIHdoaWNoIHlvdSBwcm9iYWJseSBjb25zaWRlciB3ZWVkcyAgIHN1Y2ggYXMgbmV0dGxlcywgd2lsZCBibGFjayBjaGVycmllcywgZGFuZGVsaW9ucyBhbmQgd2lsZCBwZWNhbnMgbm90IG9ubHkgYWRkIGZsYXZvciB0byB5b3VyIGRpZXQsIHRoZXkgYWRkIHZhcmlldHkgdG8gd2hhdCB5b3UncmUgcHJvYmFibHkgYWxyZWFkeSBlYXRpbmcgYXQgaG9tZS4gCkJ1Y2tleWVCZW50bGV5IHUKTm92ZW1iZXI6IEVwc3RlaW4gbXVzdCByZWdpc3RlciBpbiBOZXcgWW9yayBhcyB0aGUgaGlnaGVzdCBhbmQgbW9zdCBkYW5nZXJvdXMgbGV2ZWwgb2Ygc2V4IG9mZmVuZGVyLCBkZXNwaXRlIGVmZm9ydHMgYnkgaGltIGFuZCB0aGUgTmV3IFlvcmsgRGlzdHJpY3QgQXR0b3JuZXkncyBvZmZpY2UgdG8gbG93ZXIgdGhlIGNsYXNzaWZpY2F0aW9uLiBBIExldmVsIDMgc3RhdHVzIG1lYW5zICJoaWdoIHJpc2sgb2YgcmVwZWF0IG9mZmVuc2UgYW5kIGEgdGhyZWF0IHRvIHB1YmxpYyBzYWZldHkgZXhpc3RzLCIgYWNjb3JkaW5nIHRvIHRoZSBzdGF0ZSdzIGd1aWRlbGluZXMuLiAKTnVtYmVycyBvZiBwYXRpZW50cyB3ZXJlIHJlcG9ydGVkIGluY29uc2lzdGVudGx5IGJldHdlZW4gdGhlIHRhYmxlcyBhbmQgdGV4dC4gClllcywgaGUgc2hvdWxkbiBoYXZlIHNuYXBwZWQgYXQgeW91LiBCdXQgaSB1bmRlcnN0YW5kIGhpcyBmcnVzdHJhdGlvbiwgd290aCB5b3Ugb3V0cmlnaHQgcmVmdXNpbmcgdG8gZXZlbiB0cnkgdGhpcy4gCk92ZXJ2aWV3IGZvciBTbGF1Z2h0ZXJob3VzZUljZTkKSSBndWVzc2luZyB0aGUgbGF0dGVyIHNpbmNlIGluIGh1bWFucyB0aGUgaGVhZCBpcyB0aGUgbGltaXRpbmcgZmFjdG9yLCB3aGlsZSBpbiBjZW50YXVycyB0aGVpciBoZWFkcyBhcmUgc21hbGxlciB0aGFuIGhvcnNlIGhlYWRzLiAKVGhhdCB0aGUgbGFzdCAzIHllYXJzIHdvcnRoIG9mIGRhdGEuIEtlZXAgaW4gbWluZCwgSSBwbGF5aW5nIGluIGRyZWFtIGdhbWVzICg1L1QsIDIvNSwgYW5kIDEvMiB0aGF0IGFyZSBiYXNpY2FsbHkgNiBwZW9wbGUgcGxheWluZyBiaW5nbywgMyBhY3R1YWwgdGhpbmtlcnMpLCBzbyBteSB3aW4gcmF0ZSB3b3VsZCBwcm9iYWJseSBiZSBhIGJpdCBoaWdoZXIgaWYgSSB3ZXJlbiBqdXN0IHB1dCBpbiBhYnN1cmQgdmFyaWFuY2Ugc3BvdHMgY29uc3RhbnRseS4gCkkgZ2V0IGEgbWFzc2FnZSBhdCB0aGUgdGFibGUgb2Z0ZW4uIFR5cGljYWxseSBmb3IgbXkgaGVhZCBhbmQgbmVjayBiZWNhdXNlIGl0IHRoZSBiZXN0IHdheSBmb3IgbWUgdG8gcmVsYXggYW5kIHVud2luZCBhdCB0aGUgdGFibGUuIEFzIGVhc3kgYXMgbGl2ZSBwb2tlciBpcywgbXkgaGVhZCBnZXRzIHByZXR0eSB0ZW5zZSBkdXJpbmcgbXkgc2Vzc2lvbnMuCkkgdGhpbmsgY2lnYXJldHRlcyBvciBhbG9lLiAKTXMgQmVzdG1hbiBzYWlkOiAnJ1RoZSBoYXJtZnVsIGFmZmVjdHMgb2YgZ2FtYmxpbmcgYWR2ZXJ0aXNpbmcgYXJlIHdlbGwga25vd24gYnV0IHRoaXMgd2FzIHRoZSBmaXJzdCBzdHVkeSB0byBsb29rIGF0IHRoZSBpbXBhY3Qgb2YgZ2FtYmxpbmcgdmVudWVzIG9uIGNoaWxkcmVuLiAnJ0Rlc3BpdGUgcmVndWxhdGlvbnMgdGhhdCBwb2tpZXMgc2hvdWxkIGJlIHNlcGFyYXRlIGZyb20gZmFtaWx5IGRpbmluZyBhbmQgcGxheSBhcmVhcywgdGhpcyBzdHVkeSBzaG93ZWQgdGhhdCBjaGlsZHJlbiB3ZXJlIGJlaW5nIGV4cG9zZWQgYnkgbm90IG9ubHkgc2VlaW5nIHRoZSBtYWNoaW5lcywgYnV0IGFsc28gaGVhcmluZyB0aGVtIGZyb20gb3RoZXIgYXJlYXMuIApbZGVsZXRlZF0gIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCk1jZGF2aWUgdQpGdXJ0aGVybW9yZSwgSSB0aGluayB0aGlzIGlzIG9uZSBvZiB0aG9zZSAieW91IHRoaW5rIHlvdSBrbm93IHNvbWVvbmUiIHRoaW5ncyBhbmQgdGhhdCBpcyBleHRyZW1lbHkgdW5zZXR0bGluZy4gU1cgaGFkIGV2ZW4gdGV4dGVkIGZyaWVuZHMgdGhhdCBDVyBoYWQgY2hhbmdlZC4gClRoYXQgZmlsbSBpcyBhYnNvbHV0ZWx5IHdpbGQgaW4gc28gbWFueSBkaWZmZXJlbnQgd2F5cywgYXMgYWx3YXlzIFRlenVrYSB1c2Ugb2YgbGl2ZSBhY3Rpb24gYW5pbWF0aW9uIGNvbXBvc2l0ZSBzaG90cyBpcyBhIGhvb3QuIEkgZG8gZmluZCBpdCByZWFsbHkgY29vbCBob3csIGRlc3BpdGUgYmVpbmcgcmFkaWNhbGx5IGRpZmZlcmVudCBmcm9tIHRoZSBzb3VyY2UgdGV4dCwgaXQgcmVhbGx5IG1hbmFnZXMgdG8gY2FwdHVyZSBob3cgdGhlIGRpZmZlcmVudCBzdG9yaWVzIGZsb3cgaW50byBhbmQgd2VhdmUgd2l0aCBvbmUgYW5vdGhlci4gCk5vbmUgdGhlIGxlc3MsIGhpcyBiYXR0aW5nIGF2ZXJhZ2UgZm9yIFRlc3QgY3JpY2tldCBpcyBtdWNoIHRoZSBzYW1lIGFzIHRoYXQgb2YgVmljdG9yIFRydW1wZXIsIE0uIEEuIApJbiBsYXRlIDIwMTEsIHRoZSBKdXN0aWNlIERlcGFydG1lbnQgcnVsZWQgdGhhdCBhIDE5NjEgbGF3LCB0aGUgSW50ZXJzdGF0ZSBXaXJlIEFjdCAgIGVuYWN0ZWQgdG8gYmFuIGJldHRpbmcgb3ZlciB0aGUgcGhvbmUgICBhcHBsaWVkIG9ubHkgdG8gc3BvcnRpbmcgZXZlbnRzLiAKSSBkb24ndCB0aGluayBQYWxtZXJzdG9uIGlzIGF0dHJhY3RlZCB0byBoZXIgYnV0IEkgdGhpbmsgaGUgaXMgcmVnYXJkaW5nIGhlciB3aXRoIHJlc3BlY3QuIEkgdGhpbmsgYm90aCBvZiB0aGVtIHVuZGVyZXN0aW1hdGVkIHRoZSBvdGhlciBhcyBjbGV2ZXIgc29jaWFsaXRlcyBhbmQgbm93IHJlZ2FyZCBlYWNoIG90aGVyIGFzIGFzc2V0cyBpbnN0ZWFkLgpJZiB5b3UgbG9vayBpbnRvIHRoZSBiaWcgY2l0aWVzLCBhIGdvb2QgY2h1bmsgb2YgdGhlIGxpc3RpbmdzIGFyZSBydW4gYnkgYSBjb21tZXJjaWFsIGVudGl0aWVzLCB3aGljaCBkcml2ZXMgdXAgdGhlIGRhaWx5IHJhdGUgd2l0aCBjbGVhbmluZyBhbmQgb3RoZXIgbWlzYyBmZWVzLiBOb3QgdG8gbWVudGlvbmVkIHlvdXIgc2FmZXR5IHdoZW4geW91IGFyZSB0aGVyZSBiZWNhdXNlIHlvdSBuZXZlciBrbm93IHdoYXQga2luZCBvZiBwZXJzb24gdGhlIGhvc3QgaXMuIEluIHRoZSBlbmQsIEkgZmluZCBob3RlbHMgdG8gYmUgYSBzYWZlciBhbmQgZmluYW5jaWFsbHkgcmVhc29uYWJsZSBjaG9pY2UuLiAKU2VpdCBKYWhyZW4gZ2VocnQgZWluIEJlc3VjaCBpbSBSZXN0YXVyYW50ZSBBenVsIGluIEVsIENhc3RpbGxvIGZyIG1pY2ggenUgZGVuIEhpZ2hsaWdodHMgamVkZXMgTGEgUGFsbWEgQXVmZW50aGFsdHMuIEF1Y2ggbWVpbmVuIEJlc3VjaGVybiBlbXBmZWhsZSBpY2ggaW1tZXIsIHJlY2h0emVpdGlnIGVpbmVuIFRpc2NoIHp1IHJlc2VydmllcmVuLCBkZW5uIGRhcyBrdWxpbmFyaXNjaGUgVmVyZ25nZW4gZWluZXMgTWVucyBpbSBBenVsIHNvbGx0ZSBuaWVtYW5kIHZlcnBhc3Nlbi4gSmEsIGljaCBnZXN0ZWhlJywgZGFzIEF6dWwgaXN0IG1laW4gTGllYmxpbmdzcmVzdGF1cmFudCBhdWYgTGEgUGFsbWEhLiAKQXMgdGhlIG1lZGljYWwgc2NpZW5jZSBjb21tdW5pdHkgaXMgZmluYWxseSB3YWtpbmcgdXAgYW5kIGFja25vd2xlZGdpbmcgaW5kaXZpZHVhbGlzZWQgdHJlYXRtZW50cyBhbmQgdW5kZXJzdGFuZCB0aGF0IGdpdmluZyB0aGUgc2FtZSB0cmVhdG1lbnRzIHRvIGV2ZXJ5Ym9keSBmb3IgdGhlIHNhbWUgZGlzZWFzZSBzaW1wbHkgZG9lc24ndCB3b3JrLiBTbyBkb2VzIHRoZSBzYW1lIHJlc3VsdCBpbiB0aGUgdXBicmluZ2luZyBvZiBjaGlsZHJlbiBhbmQgZ3VpZGluZyB0aGVtIHRocm91Z2guIApQa29ybzUwOSAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvClJFUyB1c2VycyBtYXkgYmVuZWZpdCBmcm9tIHN3aXRjaGluZyB0byBOSUdIVCBNT0RFIHRvby4gCkltcGxhbnRzIGFyZSBjb21pbmcgb3V0IGluIGEgZmV3IG1vbnRocyBhbmQgbWF5IGdldCByZXBsYWNlZCBpZiB0aGUgc3VyZ2VvbiBhZHZpc2VzIGl0J3Mgb2suCkl0IGlzIG5vdCBhIHRyYWRpdGlvbmFsIHN0YXRlIHNjaG9vbCwgc3R1ZGVudHMgaGVyZSBhcmUgY3JpdGljYWwgb2YgRW1vcnkgYXMgSSB0aGluayBtb3N0IHN0dWRlbnRzIGF0IHRvcCBzY2hvb2xzIGFyZS4gCk15IGdvIHRvIGlzIGNyb2NrcG90IHNocmVkZGVkIGNoaWNrZW4gb3IgYSBjaGlja2VuIGNoaWxpLCBiZWNhdXNlIGl0J3Mgc3VwZXIgZmxhdm9yZnVsLCBlYXN5IHRvIHRocm93IHRvZ2V0aGVyLCBhbmQgZG9lc24ndCBtYWtlIGFueW9uZSBlbHNlIGZlZWwgbGlrZSB0aGV5J3JlIGVhdGluZyBkaWV0IGZvb2QuIApTdHVmZiBsaWtlIHRoYXQuIEkgaGF2ZSBpZGVhcyBmb3IgMiBvciAzIG5vcm1hbCBtaXNzaW9ucyBmb3IgdGhlbS4gQSBob3N0YWdlIHJlc2N1ZSBpbiB0aGUgbWlkZGxlIGVhc3QuIApBcHByZWNpYXRlIHRoYXQgeW91IGNhbiBnZXQgd2l0aGluIGluY2hlcyBvZiBzdXBlcnN0YXJzIGZvciBmcmVlLiBJIGhhdmVuIGJlZW4gdG8gb25lIHlldCB0aGlzIHNlYXNvbiBidXQgSSByZWFsbHkgZW5qb3llZCB3YXRjaGluZyB0aGVtIHByYWN0aWNlIGxhc3Qgc2Vhc29uLi4gCkZhc3QgZm9yd2FyZCB0byBub3cuIEJvb21lcnMgYXJlIHN0aWxsIGluIHBvd2VyIGJvdGggcG9saXRpY2FsbHkgYW5kIGluIHRoZSBwcml2YXRlIHNlY3Rvci4gQmVjYXVzZSBvZiB0aGVpciBhY3Rpb25zLCB0aGV5IGhhdmUgZnVja2VkIGEgbGFyZ2UgcG9ydGlvbiBvZiB0aGVpciBvd24gcmV0aXJlbWVudHMsIHNvIHRoZXkgY2FuJ3QgbGVhdmUgdGhlaXIgam9icy4gCkhlJ3MgYSB0b3VnaCB0ZWFjaGVyLCBoZSBoYXMgbm8gcHJvYmxlbSB0ZWxsaW5nIG1lIEknbSBkb2luZyBzb21ldGhpbmcgd3JvbmcuIApUcnlpbmcgdG8gZWF0IGx1bmNoIHF1aWV0bHksIEtvdmFjcyBhcyBFdWdlbmUgd2F0Y2hlcyBpbiB3b25kZXIgYXMgaGlzIG9saXZlcyBhbmQgb3JhbmdlcyByb2xsIG9mZiB0aGUgc2VlbWluZ2x5IHN0cmFpZ2h0IHRhYmxlIHRvIHRoZSBzb3VuZCBvZiBsb3VkIGRydW0gcm9sbHMgICB0aGVyZSdzIGV2ZW4gYSB2ZXJzaW9uIGluIGNvbG9yIG9uIHRoZSBib3ggc2V0LiAKU29tZSBtb3RoZXJzIGdldCBpdCBmb2xsb3dpbmcgYW4gdW5wbGFubmVkIG9yIGRpZmZpY3VsdCBwcmVnbmFuY3ksIGJ1dCBvdGhlcnMgY291bGQgaGF2ZSBiZWVuIHBsYW5uaW5nIGFuZCB0cnlpbmcgZm9yIGEgYmFieSBmb3IgeWVhcnMgYnV0IHN0aWxsIGdldCBkZXByZXNzZWQuIEl0IG1heSBiZSBhZmZlY3RlZCBieSBleHRlcm5hbCBmYWN0b3JzLCBzdWNoIGFzIHNvY2lhbCBhbmQgY3VsdHVyYWwgaXNzdWVzLCBvciBwZXJzb25hbCBmYWN0b3JzLCBzdWNoIGFzIGhvdXNpbmcgb3IgcGVyc29uYWwgaGlzdG9yeSwgb3IgYmlvY2hlbWljYWwgZmFjdG9ycywgc3VjaCBhcyBob3Jtb25lIGxldmVscy4gCkkgbm90IHN1cmUgd2hhdCB0aGV5IHdhbnQuIApJY2ggaGFiZSBrbmFwcGUgMTQuMDAwIEhuZGUgaW0gQXVndXN0IGdlc3BpZWx0IHVuZCBzdGVoZSBudW4gZXJuZXV0IHdpZWRlciBrbmFwcCBhbiBkZXIgR3JlbnplIHp1IEZMIFNIIDIvNC4gCkhvdyB5b3UgZG8gc28gZGVwZW5kcyBvbiB0aGUgdHlwZSBvZiBjb29raWUuIApXaGVuIHdlIGNvbnNpZGVyIHRoZSBsaW5rIGJldHdlZW4gaW5mbGFtbWF0aW9uIGFuZCBhbnhpZXR5IGxpa2UgYmVoYXZpb3IsIHdlIG9ic2VydmUgdGhhdCBhIGxvdyBpbmZsYW1tYXRvcnkgc3RhdGUgaXMgYXNzb2NpYXRlZCB3aXRoIGxvdyBhbnhpZXR5IGxpa2UgYmVoYXZpb3IsIHdoZXJlYXMgaGlnaGVyIGxldmVscyBvZiBpbmZsYW1tYXRpb24gbGVhZCB0byBpbmNyZWFzZWQgYW54aWV0eSBsaWtlIGJlaGF2aW9yLjE3IEZvciBleGFtcGxlLCBpbmZlY3Rpb24gd2l0aCB0aGUgcGFyYXNpdGUgVHJpY2h1cmlzIG11cmlzIGluIG1pY2UgcmVzdWx0cyBpbiBndXQgaW5mbGFtbWF0aW9uIGFuZCBpbmNyZWFzZWQgYW54aWV0eSBsaWtlIGJlaGF2aW9yLjI0IEluIGFkZGl0aW9uLCBjaGVtaWNhbGx5IGluZHVjZWQgZ3V0IGluZmxhbW1hdGlvbiBpbiBhbiBhbmltYWwgbW9kZWwgb2YgY29saXRpcyBhbHNvIHJlc3VsdHMgaW4gZ3V0IGluZmxhbW1hdGlvbiBhbmQgaW5jcmVhc2VkIGFueGlldHkgbGlrZSBiZWhhdmlvci4yNCBFdmlkZW5jZSB0aGF0IHRoZSBtaWNyb2Jpb3RhIGFjdHMgYXMgYSBtb2R1bGF0b3Igb2YgdGhpcyBpbW11bmUgcmVsYXRlZCBpbmNyZWFzZSBpbiBhbnhpZXR5IGxpa2UgYmVoYXZpb3IgaXMgcHJvdmlkZWQgaW4gdGhlIHNhbWUgcmVwb3J0cyBzdGF0aW5nIHRoYXQgdHJlYXRtZW50IHdpdGggcHJvYmlvdGljIEJpZmlkb2JhY3Rlcml1bSBsb25ndW0gYWxsZXZpYXRlZCB0aGUgYW54aWV0eSBsaWtlIGJlaGF2aW9yLjI0LDI1IFRoZXNlIG9ic2VydmF0aW9ucyBzdWdnZXN0IHRoYXQgcHJvYmlvdGljIHRyZWF0bWVudCBtYXkgaGF2ZSBwb3RlbnRpYWwgZm9yIHRyZWF0bWVudCBvZiBpbmZsYW1tYXRpb24gYW5kIHJlbGF0ZWQgYW54aWV0eSBzeW1wdG9tcy5Db21tZW5zYWwgYmFjdGVyaWEgcGxheSBhbiBpbXBvcnRhbnQgcm9sZSBpbiBtYWludGFpbmluZyB0aGUgaW50ZWdyaXR5IG9mIHRoZSBpbnRlc3RpbmFsIHRyYWN0LCBhbmQgaW4gc2l0dWF0aW9ucyBvZiBzdHJlc3Mgb3IgZGlzZWFzZSwgaW5jcmVhc2VkIGludGVzdGluYWwgcGVybWVhYmlsaXR5IGNhbiBjb250cmlidXRlIHRvIGluY3JlYXNlZCBpbmZsYW1tYXRpb24uMjYsIDI3IEluY3JlYXNlZCBpbnRlc3RpbmFsIHBlcm1lYWJpbGl0eSwgc29tZXRpbWVzIHJlZmVycmVkIHRvIGFzICJsZWFreSBndXQsIiBjYW4gbGVhZCB0byB0cmFuc2xvY2F0aW9uIG9mIGJhY3RlcmlhIG91dCBvZiB0aGUgbHVtZW4gb2YgdGhlIEdJIHRyYWN0IGFjcm9zcyB0aGUgaW50ZXN0aW5hbCBsYXllci4gVGhpcyBpcyBhbiBhZGRpdGlvbmFsIHBhdGh3YXkgdGhhdCBtaWNyb2Jpb3RhIGFuZCBwYXRob2dlbmljIGJhY3RlcmlhIHVzZSB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBicmFpbiB2aWEgdGhlIGltbXVuZSBzeXN0ZW0gb3IgdGhyb3VnaCBhY3RpdmF0aW9uIG9mIGxvY2FsIG5ldXJvbnMgaW4gdGhlIGVudGVyaWMgbmVydm91cyBzeXN0ZW0gKEVOUykuIApPZnRlbiB0aW1lcyB0aG9zZSB3aG8gYXJlIGluIHRoZSBzdHJvbmdlc3QgcG9zaXRpb24gdG8gc3RvcCBzeXN0ZW1pYyB2aW9sZW5jZSBkbyBub3Qgc2ltcGx5IGJlY2F1c2UgdGhleSB3YW50IHRvIHBhcnRpY2lwYXRlIGluIGl0LiAKRm9yIG9uZSwgd2UgaGF2ZSBubyBpZGVhIGhvdyBzZWxmIGF3YXJlIHlvdSBhcmUuIApQaW9uZWVyIFNhbG9vbiBpcyBhIGZ1bGx5IG9wZXJhdGluZyBzYWxvb24gdG9kYXkgYW5kIG1hbnkgdmlzaXRvcnMgYXJlIGZhc2NpbmF0ZWQgYnkgaXRzIGNvbG9yZnVsIGhpc3RvcnkgYW5kIGNoZWNrZXJlZCwgc29tZSBtaWdodCBldmVuIHNheSBmYWJsZWQsIHBhc3QuIEl0IHNlZW1zIHRoYXQgYW5vdGhlciBmYW1vdXMgZXZlbnQgb2NjdXJyZWQgYXQgdGhlIFBpb25lZXIgU2Fsb29uLCB0aGlzIG9uZSBoYXBwZW5pbmcgb24gSnVseSAzLCAxOTE1LCBqdXN0IHR3byB5ZWFycyBhZnRlciB0aGUgc2Fsb29uIGhhZCBvcGVuZWQgZm9yIGJ1c2luZXNzLiBJdCBzZWVtcyB0aGF0IGEgZ3JvdXAgb2YgcHJvc3BlY3RvcnMsIG1pbmVycyBhbmQgb3RoZXIgYXNzb3J0ZWQuIGNoYXJhY3RlcnMuIHdlcmUgcGxheWluZyBhIGdhbWUgb2YgcG9rZXIgYXQgdGhlIHBva2VyIHRhYmxlIG5lYXIgdGhlIGJhci4gT25lIG9mIHRoZSBnYW1ibGVycyB0cmllZCB0byAiY2FzaCBvdXQiIHdpdGggYSB3aG9wcGluZyB0ZW4gZG9sbGFycywgeWVwLCAkMTAuIGFuZCB3YXMgdGhvdWdodCBieSB0aGUgZGVhbGVyLCBKb2UgQXJtc3Ryb25nLCB0byBiZSBjaGVhdGluZy4gVGhlIGdhbWJsZXIgdGhvdWdodCB0aGF0IHRoZSBkZWFsZXIsIEpvZSBBcm1zdHJvbmcsIHdhcyBkZWFsaW5nIGEgImNyb29rZWQgY2FyZCBnYW1lLiIKSW4gZ2VuZXJhbCB0aG91Z2gsIEkgd2F0Y2hlZCB0b25zIGFuZCB0b25zIG9mIHR1dG9yaWFsIGFuZCB0aW1lbGFwc2UgdmlkZW9zIG9uIFlvdVR1YmUganVzdCB0byBsZWFybiBob3cgcG9lcGxlIG1ha2UgdGhlaXIgbW9kZWxzIGFuZCBwb3NzaWJseSBwaWNrIHVwIHNtYWxsIHRpcHMvdHJpY2tzIHRocm91Z2ggdGhlIGRpZmZlcmVuY2VzIGluIHRoZXNlIHByb2Nlc3Nlcy4gV291bGQgYWxzbyBsaWtlIHRvIHNob3V0b3V0IE1pbmlvbnNBcnQgb24gVHdpdHRlciB0b28uIApQYWlyOiBPbmUgcGFpciBvZiB0d28gZXF1YWwgdmFsdWUgY2FyZHMgY29uc3RpdHV0ZXMgYSBwYWlyLiAKTm8gdGhleSB3ZXJlIG5vdC4gCk1heSBiZSBoZSB3YXMgYW5ncnkgYWdhaW4sIHBlcmhhcHMgbm90LiAKSSBkb24gdGhpbmsgdGhlIGZpcnN0IGNvbG9yIHBhbGV0dGUgc2hvdWxkIGJlIG9uZSBvZiB0aG9zZSB0aGluZ3MsIGkgdGhpbmsgYSBSR0Igc3lzdGVtIHdvdWxkIGJlIGlkZWFsLiAKIkl0IHdhcyBhIHN0dW5uaW5nIHJlYWxpemF0aW9uLiAKQ29tcGxhaW5zIGFib3V0IGRvaW5nIGFsbCB0aGUgd29yayBkZXNwaXRlIGhhdmluZyBhIG1haWQgY29tZSBldmVyeSBvdGhlciBkYXkgYW5kIGEgaG91c2UgZnVsbCBvZiBjYXBhYmxlIGFkdWx0cyB3aG8gbGlrZSB0byBjb29rIGFuZCBhcmUgcXVpdGUgbmVhdCBhbmQgdGlkeSBwZW9wbGUuIFNvIHRoZW4gd2UgcnVzaCB0byBvZmZlciB0byBoZWxwLiAKQW5kIEkgYW0gZ29pbmcgdG8gdXNlICJoZXIiIGZvciBaIGJlY2F1c2UgSSB1c2VkIHRvIGFkZHJlc3MgaGVyIGFzIGEgZmVtYWxlIGFuZCBzaGUgZGlkIG5vdCBzZWVtIHRvIG1pbmQuLiAKT3JhbCBhbmFsIGxvdmVtYWtpbmcgaXMgcG9wdWxhcmx5IGtub3duIGFzIHJpbW1pbmcuIApUaGVyZSBpcyBubyBndWFyYW50ZWUgaGUgd2lsbCBjaGFuZ2UgdGhlIHdheSBoZSBkb2VzIHRoaW5ncy4gClRvbnMgb2YgaWNvbmljIHByb2R1Y3Rpb24gdGVjaG5pcXVlcywgc3ludGhlc2l6ZXJzLCBlZmZlY3RzIGFuZCByZWNvcmRpbmcgZ2VhciBldGMuIApTdGlsbGluZyB0aGUgTWluZCBTaXQgY29tZm9ydGFibHkgb24geW91ciBjaGFpciBvciBiZWQgYW5kIGJhbGFuY2UgeW91ciBoZWFkIGFuZCBzcGluZS4gQnJlYXRoZSBnZW50bHkgaW4gYW5kIG91dCBhIGZldyB0aW1lcywgbGV0dGluZyB0aGUgYnJlYXRoIGNvbWUgYW5kIGdvIHdpdGhvdXQganVkZ2VtZW50LiAKTmVzdCBzdGVwIHBhcmNlbCAyLCBkcm92ZSB1cCB0byBsb29rIGF0IGl0IC4gQmFkIG5ld3MsIGJhc2ljYWxseSBhIGJpZyBndWxseSB3aXRoIGdyZWF0IHZpZXdzLiAKSSB3YXMgYW4gb25saW5lIHBybyBmb3IgOCB5ZWFycyBhbmQgSSBzd2VhciBpdCB3YXMgc3Vja2luZyB0aGUgbGlmZSBvdXQgb2YgbWUganVzdCBmcm9tIHRoZSBkcnVkZ2VyeSBvZiBwbGF5aW5nIHNvIG1hbnkgdGFibGVzIGZvciBzbyBtYW55IGhvdXJzLiBXaGVuIEJsYWNrIEZyaWRheSBoaXQsIEkgaGFkIHRvIGNoYW5nZSBjYXJlZXJzLCBidXQgSSBnbGFkIGZvciBpdC4KTGFkeSBHYUdhKSAuIApZb3UncmUgb25lIG9mIHRob3NlICJhbGwgbGl2ZXMgbWF0dGVyIiBwZW9wbGUsIGFyZW4ndCB5b3UuIApUZXhhcyBIb2xkIEVtIGlzIHRoZSBtb3N0IHBvcHVsYXIgZm9ybSBvZiB0aGUgZ2FtZSBwbGF5ZWQuIApNb2pvc29mdCBQaG90byBGcmFtZSBTdHVkaW8gMi45NiBMaWNlbnNlIEtleS4gQSsgQSAuIApUaGlzIGlzIFNhZ2luYXcgVG93bnNoaXAncyBmaXJzdCBob21pY2lkZSBzaW5jZSAyMDEyLCBIZXJyZW4gc2FpZCwgd2hlbiAzNiB5ZWFyIG9sZCBNaWNoYWVsIEt1aGxtYW4gd2FzIHNob3QgYW5kIGtpbGxlZCBhdCBoaXMgaG9tZSBhdCAyNTU1IEx1ZWxsYSBvZmYgV2Vpc3MgbmVhciBIZW1tZXRlciBpbiBTYWdpbmF3IFRvd25zaGlwLCB3aGVyZSBoZSB3YXMgaG9zdGluZyBhIHBva2VyIGdhbWUuCkNvbnNvbGUgZ2FtZQpUaGUgc2NhbGVkIGRvd24gdmVyc2lvbiBvZiB0aGUgYm9tYiB3YXMgc3RpbGwgYmlnIGVub3VnaCB0byBjYXVzZSBhIGZpcmViYWxsIHRoYXQgd2FzIHNlZW4gNjAwIG1pbGVzIGF3YXksIG1lYW5pbmcgaWYgaXQgd2FzIGRyb3BwZWQgb3ZlciBNYW5oYXR0YW4sIHlvdSB3b3VsZCBoYXZlIGJlZW4gYWJsZSB0byB3YXRjaCBOZXcgWW9yayBDaXR5IGJ1cm4gZnJvbSBWaXJnaW5pYS4gCkFsc28gYXMgQWRtaXJhbCBUZWQgRGFuc29uIHNhaWQgYWxsIHRoZSBVbmlvbiBrbm93cyBhYm91dCB0aGUgS3JpbGwgaXMgd2hhdCBFZCBhbmQgR29yZG9uIGxlYXJuZWQgYWJvYXJkIHRoZWlyIHNoaXAgKHBsdXMgdGhlIEtyaWxsIHdvbWFuIHN0dWZmIHRvbyBJIGd1ZXNzKSBzbyBpdCBsZW5kcyB0byByZWFzb24gdGhhdCB0aGUgS3JpbGwgcHJvYmFibHkgZG9uIGtub3cgYWxsIHRoYXQgbXVjaCBhYm91dCBodW1hbnMgc3BlY2lmaWNhbGx5IHRoZWlyIGN1c3RvbXMgYW5kICJib2FyZGluZyBwcm9jZWR1cmVzLiIgU28gdGhleSBwcm9iYWJseSBhc3N1bWVkIGl0IHdhcyBzdGFuZGFyZCBhbmQgYmVncnVkZ2luZ2x5IHJvbGxlZCB3aXRoIGl0Li4gCkZvciB0aGUgcHVycG9zZXMgb2YgYW4gaW52ZXN0aWdhdGlvbiBvZiB0aGlzIHR5cGUsIGltYWdlcyBhcmUgbXVjaCBtb3JlIHVzZWZ1bCB0aGFuIGhhbmRpbmcgb3ZlciBtZXRhbCBhbmQgaGFyZHdhcmUsIGJlY2F1c2UgdGhleSBhcmUgYml0IGJ5IGJpdCBjb3BpZXMgb2YgYSBjcmltZSBzY2VuZSB0YWtlbiB3aGlsZSB0aGUgY3JpbWUgd2FzIGdvaW5nIG9uLiAKRG8geW91IGhhdmUgYW55IHNvdXJjZXMgdG8gYmFjayB1cCB0aGUgZGl2b3JjZS9zdWljaWRlIHJhdGVzIG9mIG1hcnJpZWQgY291cGxlcyBhZnRlciBkZWNpZGluZyBvbiBhYm9ydGlvbnM/IFRoYXQgc291bmRzIGNyYXp5IHRvIG1lLgoyMiBoIDM2IFRyb2lzIGhvbW1lcyBzIGRlcyBwcml4IGV0IGRlIGxhIGRpc3BvbmliaWxpdCBkZXMgZmlsbGVzLiBJbWFnZXMgIGwgbGEgcmNlcHRpb25uaXN0ZSBtb250cmUgbGVzIG1hc3NldXNlcyBldCBleHBsaXF1ZSBsZXMgdGFyaWZzLiBEYW5zIHVuZSBsYW5ndWUgdHJhbmdyZSwgaWxzIGRpc2N1dGVudCBlbnRyZSBldXguIFVuIGRlcyBtZW1icmVzIGR1IGdyb3VwZSBjaG9pc2l0IENpbmR5IHF1aSBzZW1ibGUgbGEgcGx1cyBkZW1hbmRlLiBJbCBzZSBkaXJpZ2UgdmVycyBsYSBzYWxsZSBhdmVjIHNwYSAgIHVuIGV4dHJhIGRlIDEwICQgICBxdSBhIHJzZXJ2ZSBwb3VyIHRyZW50ZSBtaW51dGVzLiBTZXMgYW1pcyBsICBsIGRhbnMgbGVzIGZhdXRldWlscyBlbiBjdWlyZXR0ZS4yMiBoIDQwIENpbmR5IHZpZW50IHNlIHBsYWluZHJlICBsYSByY2VwdGlvbi4gTGUgY2xpZW50IHJlZnVzZSBkZSBsYSBwYXllciwgcHJ0ZXh0YW50IHF1IGEgZGogZG9ubiBsIHBvdXIgbGEgc2FsbGUgZXQgbGUgc3BhLiBMYSByY2VwdGlvbm5pc3RlIGV4cGxpcXVlICBub3V2ZWF1IGF1eCBob21tZXMgcXVlIGxlIHByaXggZGUgbGEgbG9jYXRpb24gbiBwYXMgbGUgc2VydmljZSBvZmZlcnQgcGFyIGxlcyBmaWxsZXMuIEVsbGUgbGV1ciBkZW1hbmRlIGRlIHRyYWR1aXJlIHNlcyBwcm9wb3MgYXUgY2xpZW50LCBxdWkgZGNpZGUgZGUgbmUgcGx1cyBwcmVuZHJlIGxlIHNwYS4gSWwgYWNjZXB0ZSBkZSBkb25uZXIgbGVzIDYwICQgcG91ciBsZSBzZXJ2aWNlIGRlIGJhc2Ugc2FucyBleHRyYS4KSHVhd2VpIG9wZW5zIEJydXNzZWxzIHNlY3VyaXR5IGxhYiBpbiBiaWQgdG8gcmVhc3N1cmUgRVUKSE9XRVZFUiBJIHdhbnQgdG8gZGlzY291cmFnZSB5b3UgZnJvbSBnZXR0aW5nIHRoZSBSIG5pbmVUIHNjcmFtYmxlciBhcyBhIGZpcnN0IGJpa2UuIFRoZXJlIGFyZSBhIG51bWJlciBvZiByZWFzb25zIGl0IGlzIGluYXBwcm9wcmlhdGUuIApTeW1wdG9tIGV2YWx1YXRpb24gYnkgYXVkaXQgYXQgYmFzZWxpbmUgYW5kIGFmdGVyIHRyZWF0bWVudCBjb25zaXN0ZWQgb2YgYSBzdGFuZGFyZGl6ZWQgaGlzdG9yeSBhbmQgcHJldmlvdXNseSB2YWxpZGF0ZWQgYW5kIHB1Ymxpc2hlZCAoMykgcHJvc3RhdGl0aXMgc3BlY2lmaWMgU3ltcHRvbSBGcmVxdWVuY3kgUXVlc3Rpb25uYWlyZSAoU0ZRKSBhbmQgU3ltcHRvbSBTZXZlcml0eSBJbmRleCAoU1NJKSwgdGhlIEludGVybmF0aW9uYWwgUHJvc3RhdGUgU3ltcHRvbSBTY29yZSAoSSBQU1MpIGFuZCBRdWFsaXR5IG9mIExpZmUgKFFvTCkgcXVlc3Rpb25uYWlyZSAsIGEgU3ViamVjdGl2ZSBHbG9iYWwgQXNzZXNzbWVudCAoU0dBKSAoMykgYW5kIHRoZSBPJ0xlYXJ5IFNleHVhbCBGdW5jdGlvbiBJbnZlbnRvcnkgKFNGSSkgKDQpLiBUcmVhdG1lbnQgaW4gTWFuaWxhIGNvbnNpc3RlZCBvZiB0cmkgd2Vla2x5IHByb3N0YXRpYyBkcmFpbmFnZXMgY29tYmluZWQgd2l0aCBzcGVjaWZpYyBjdWx0dXJlICAgZGlyZWN0ZWQgKGV4cHJlc3NlZCBwcm9zdGF0aWMgc2VjcmV0aW9uIG9yIEVQUykgYW5kL29yIGVtcGlyaWMgKGlmIG5vIGdyb3d0aCBhZnRlciBzZXZlcmFsIHJlcGV0aXRpdmUgY3VsdHVyZXMgb2YgRVBTKSBhbnRpbWljcm9iaWFsIHRoZXJhcHkgZm9yIDYgMTIgd2Vla3MuIAoiSGUgaXMgYmVpbmcgY2hhcmdlZCB3aXRoIHRoZSBzYW1lIG9mZmVuc2VzIGFzIHRoZSBvdGhlcnMsIGFuZCB0aGF0IGlzIHNvbGljaXRpbmcgYW5vdGhlciB0byBjb21taXQgcHJvc3RpdHV0aW9uLCIgSnVwaXRlciBQb2xpY2UgQ2hpZWYgRGFuaWVsIEtlcnIgdG9sZCByZXBvcnRlcnMgYXQgYSBuZXdzIGNvbmZlcmVuY2UuCkRlIHJlY2hlcmNoZXIgbGVzIGNhdXNlcyBkJ2luZmVydGlsaXQsIHF1aSBuZSBzb250IHBhcyBmb3JjbWVudCBkdSBjdCBkZSBsJ292dWxhdGlvbi4gVW5lIHBlcnNvbm5lIGdyb3NzZSwgY29tbWUgZGVzIHBlcnNvbm5lcyBkZSB0b3V0IHBvaWRzLCBwZXV0IHJlbmNvbnRyZXIgZGVzIGRpZmZpY3VsdHMgcG91ciBhdm9pciBkZXMgZW5mYW50cyBtYWlzIGNlIG4nZXN0IHBhcyBmb3JjbWVudCAgY2F1c2UgZGUgc29uIHBvaWRzICEgSWwgeSBhIGQnYXV0cmVzIG1vdGlmcyBkJ2luZmVydGlsaXQuCkkgd291bGQgbGlrZSB0byBzZWUgdGhlIGNyZWF0aW9uIG9mIGEgUGFsZXN0aW5pYW4gc3RhdGUgaW4gdGhlIFdlc3QgQmFuayBhbmQgYSBjb21wbGV0ZSB0cmFuc2ZlciBvZiByZXNwb25zaWJpbGl0eSBmb3IgdGhlIFBhbGVzdGluaWFuIHBvcHVsYXRpb24gZnJvbSBJc3JhZWwgdG8gdGhlIFBhbGVzdGluaWFuIHN0YXRlLiBJbiBhZGRpdGlvbiwgdGhlIG5ldyBQYWxlc3RpbmlhbiBzdGF0ZSBtdXN0IHJlY29nbmlzZSBJc3JhZWwgYXMgYSBKZXdpc2ggc3RhdGUgYW5kIGdpdmUgdXAgYW55IGNsYWltcyBvZiBpdHMgbGFuZCBzdWNoIGFzIHRoZSByaWdodCBvZiByZXR1cm4gZm9yIFBhbGVzdGluaWFuIHJlZnVnZWVzLiBJc3JhZWwgd2lsbCBvZiBjb3Vyc2Ugd2l0aGRyYXcgY29tcGxldGVseSAob3Igd2l0aCBsYW5kIGV4Y2hhbmdlKSBmcm9tIHRoZSBXZXN0IEJhbmsuLiAKVGhlIHRocmVlIGRlZmVuZGFudHMgYXJlIGNoYXJnZWQgd2l0aCBhcm1lZCByb2JiZXJ5LCBjb25zcGlyaW5nIHRvIGNvbW1pdCB0aGF0IGNyaW1lLCBhbmQgdHdvIGNvdW50cyBvZiBwb3NzZXNzaW5nIGEgZmlyZWFybSBkdXJpbmcgdGhlIGNvbW1pc3Npb24gb2YgYSBmZWxvbnkuIFRoZSByb2JiZXJ5IGFuZCBjb25zcGlyYWN5IGNoYXJnZXMgY2FycnkgbWF4aW11bSBwZW5hbHRpZXMgb2YgbGlmZSBpbiBwcmlzb24gd2l0aCB0aGUgcG9zc2liaWxpdHkgb2YgcGFyb2xlLCB3aGlsZSB0aGUgZmVsb255IGZpcmVhcm0gY2hhcmdlIGNhcnJpZXMgYSBtYW5kYXRvcnksIGNvbnNlY3V0aXZlIHR3byB5ZWFyIHNlbnRlbmNlLgpUbyBzZWUgdGhhdCBsZXZlbCBvZiBpbnRlcmVzdCBqdXN0IHNwZWFrcyB0byB0aGUgdW5pdmVyc2FsaXR5IG9mIHRoZSBzdG9yeS4gVGhlIGZpbG0gaXMgYmVpbmcgcmVsZWFzZWQgaW4gbWlkIEF1Z3VzdCwgdHJhZGl0aW9uYWxseSBhIHRpbWUgd2hlbiBzdHVkaW9zIGR1bXAgYWN0aW9uIGZpbG1zIGFuZCBtZWRpb2NyZSBjb21lZGllcy4gCkJvbm4gc2NoZWludCBlaW5lIHNjaCBTdGFkdCB6dSBzZWluLiBBYmVyIGRhIHVtIFNjaGxhZyAyMSBVaHIgdW5kIDEgTWludXRlIGRpZSBkaXJla3RlIFp1Z3ZlcmJpbmR1bmcgbmFjaCBEIGVpbmdlc3RlbGx0IHdpcmQsIGJsZWlidCBsZWlkZXIgbmllIGdlbnVnIFplaXQsIHVtIGRpZSBTY2ggZGVyIGVoZW1hbGlnZW4gQnVuZGVzaGF1cHRzdGFkdCBhdXNnaWViaWcgYmV3dW5kZXJuIHp1IGsgRG9jaCBkYW5uIGRlciBoZWkgZXJzZWhudGUgU29tbWVydXJsYXViIGlzdCBub2NoIGltbWVyIGF1ZiBXb2NoZW4gZW50ZmVybnQgYmVzaW5uZSBpY2ggbWljaCBhdWYgZGllIEVya2VubnRuaXMsIGRhc3MgYXVjaCBlaW4ga3VyemVyIEF1c3N0aWVnIGF1cyBkZW0gQWxsdGFnIGRpZSBTaW5uZSB3aWVkZXIgYmVsZWJlbiBrYW5uLi4gCkkgYW0gZGVsb2FkaW5nIHRoaXMgd2VlayBzbyBJIGNhbid0IHdhaXQgdG8gcmVsYXguLiAKQnV0IHllYWgsIHNvIHdlIHdlcmUgdGFsa2luZyBhYm91dCBtZWRpY2luZSEgV2hpY2gsIG9mIGNvdXJzZSwgcmVtaW5kZWQgbWUgb2YgYSBmdW4gbGl0dGxlIGJpdCBhYm91dCBHYWxlbiwgb25lIG9mIHRoZSBtb3N0IGZhbW91cyBkb2N0b3JzIG9mIHRoZSBhbmNpZW50IFJvbWFuIHdvcmxkLiBHYWxlbiB3YXMgYSBmYXNjaW5hdGluZyBjaGFyYWN0ZXIsIGFuZCBoaXMgd3JpdGluZyBpcyBhYnNvbHV0ZWx5IGluY3JlZGlibGUgICBhbmQgSSBtZWFuIHRoYXQgaW4gZXZlcnkgd2F5IHRoYXQgaW5jcmVkaWJsZSBjYW4gYmUgdGFrZW4uIApGb3IgbW9yZSBnYW5rLCB5b3UgY2FuIHB1dCBpbiBhIDR0aCBCQ1MgYW5kL29yIHVwZ3JhZGUgYW5vdGhlciB0byBmYWN0aW9uLgpGb3J0dW5hdGVseSwgaGF2aW5nIHdvcmtlZCBpbiBzYWZldHkgY3JpdGljYWwgYW5kIGNvbW1lcmNpYWwgKHByb2R1Y3QgZm9jdXNlZCkgZW5naW5lZXJpbmcgdGVhbXMsIHRoaXMgYXR0aXR1ZGUgaXMgZmFyIG1vcmUgcHJldmFsZW50IGluIHRoZSBsYXR0ZXIsIHdoZXJlIHByb2plY3QgbWFuYWdlbWVudCBpcyBnZW5lcmFsbHkgaW5jb21wZXRlbnQgdW50aWwgcHJvdmVuIG90aGVyd2lzZS4gQnV0LCB0aGUgZm9ybWVyIGNlcnRhaW5seSBkb2VzbiBlc2NhcGUgdGhlIG1pbmRzZXQgZW50aXJlbHkuIFNlZTogZmluYWwgcmVwb3J0cyBvbiBib3RoIHNodXR0bGUgbG9zc2VzLCBwbHVzIG9uIHByb2JhYmx5IGhhbGYgb2YgYWxsIGxhcmdlIGZhdGFsaXR5IGNpdmlsIGF2aWF0aW9uIGRpc2FzdGVycyBpbiB0aGUgbGFzdCAyNSB5ZWFycyBiYXJlIG1pbmltdW0sIGV0YykuIE5vdGhpbmcgcmVhbGx5IG1vcmUgdG8gc2F5IG9uIHRoaXMuCkEgcHJvcG9zIGRlIHN1Y3JlIGQnYWlsbGV1cnMsIHZvdXMgZW50ZW5kZXogcGV1dCB0cmUgdG91dCB1biB0YXMgZGUgbWVzc2FnZXMgYWxhcm1pc3RlcyBldCBjdWxwYWJpbGlzYW50cywgZW5jb3JlIHVuZSBzb3J0ZSBkZSAidHlyYW5uaWUgYWxpbWVudGFpcmUiLiBJbCBzJ2FnaXQgc3VydG91dCBkZSBwYXJsZXIgZGVzIHN1Y3JlcyBjYWNocyBkYW5zIGwnYWxpbWVudGF0aW9uIGluZHVzdHJpZWxsZSwgcXVlIHZvdXMgdml0ZXogc2kgdm91cyBjdWlzaW5lei4gSidhdmFpcyBjcml0IHVuIGJpbGxldCBhbnRpIGV4Y3MgZGUgcGFydCBldCBkJ2F1dHJlLgpJIGFsc28ga25vdyB1bmxpa2Ugb3RoZXIgbWlsaXRhcnkgdm9jYXRpb25zLCBvbmx5IHBvbHl0ZWNobmljIGdyYWR1YXRlcyB3aXRoIHJlbGV2YW50IGRpcGxvbWEgYXJlIHNlbGVjdGVkIHRvIGJlIHRlY2huaWNpYW5zLiBJIGFzc3VtZSB0aGUgcmVxdWlyZW1lbnQgaXMgdGhlIHNhbWUgZm9yIGFuIGFydGlsbGVyeSB0ZWNobmljaWFuLiBUaHVzIGJleW9uZCBoaXMgYXJteSB0cmFpbmluZywgUGFuZyBhbHNvIGhhZCBhdCBsZWFzdCAzIHllYXJzIG9mIHBvbHl0ZWNobmljIHRlY2huaWNhbCB0cmFpbmluZyB0byBiYWNrIGhpbSB1cC4KQXMgYSBiYXRzbWFuLCBvZiBjb3Vyc2UsIGhlIHdhcyB0aG9yb3VnaGx5IGdyb3VuZGVkIGluIGZpcnN0IHByaW5jaXBsZXMuIEhlIGFkZGVkIHRvIGhpcyBzdGF0dXJlLCBpbiBmYWN0LCBieSB0YWtpbmcgbXVjaCB0aG91Z2h0LiBBcyBhIHlvdXRoIGhlIGRpZCBub3QgdXNlIGEgYmF0IHdpdGggbXVjaCBuYXR1cmFsIGZyZWVkb20sIGFuZCBldmVuIGluIGhpcyBwZXJpb2Qgb2YgcG9tcCBoZSB3YXMgbmV2ZXIgcGxheWluZyBhcyBoYW5kc29tZWx5IGFzIGhpcyBtYWduaWZpY2VudCBwaHlzaWNhbCBhcHBlYXJhbmNlIHNlZW1lZCB0byBzdWdnZXN0IGFuZCBkZXNlcnZlLiAKQXQgdGhlIGFnZSBvZiAyNywgaGUgd2FzIHBsYXlpbmcgYmFza2V0YmFsbCBhbmQgd2FzIGhpdCBoYXJkIGluIHRoZSBoZWFkIGFuZCBrbm9ja2VkIG91dC4gClRvYmV5IE1hZ3VpcmUgaXMgZmlnaHRpbmcgaXQsIGJ1dCBmb3Igbm93IGhlIGhhcyB0byBhYmlkZSBieSBjb3VydGhvdXNlIHJ1bGVzLgpFYXNpZXN0IHdheSB0byBnZXQgdGhlIHNob3VsZGVycyB0byByZWxlYXNlIGlzIHRvIHByZXNzIGRpcmVjdGx5IGludG8gYW55IGFuZCBhbGwgc29yZSBzcG90cyBvbiB0b3Agb2YgdGhlIHNob3VsZGVyIGF0IHRoZSBiYXNlIG9mIHRoZSBuZWNrLCBhbmQgdG8gdGhlbiByb3RhdGUgYW5kIGJlbmQgeW91ciBuZWNrIGFuZCBoZWFkIHRvICJ3b3JrIG91dCB0aGUga2lua3MiLiBVc2luZyBhIFRoZXJhY2FuZSBtYWtlcyBpdCBlYXN5IHRvIHdvcmsgdGhlc2UgbXVzY2xlcyB5b3Vyc2VsZi4gCkV2ZW50dWFsbHkgaXQgd2lsbCBiZSB0byB0aGUgcGVvcGxlIGFuZCB0byBjdWx0dXJhbCBoYXJtb255IGEgcGF0dGVybiB0aGF0IGhhcyBoYXBwZW5lZCBpbiBzZXZlcmFsIG90aGVyIGNvdW50cmllcy4gSXQgYWx3YXlzIHN0YXJ0cyB3aXRoIGJsb2NraW5nIHBvcm5vZ3JhcGh5IHRvIHByb3RlY3QgdGhlIGNoaWxkcmVuLiAKIkp1c3QgYmVpbmcgcHVuY2hlZCBpbiB0aGUgbW91dGgsIiBoZSBzYWlkLiAiWW91J3ZlIGdvdCB0byBnZXQgdGlyZWQgb2YgdGhhdC4gVGhhdCB3YXMgb3VyIGJyZWFraW5nIHBvaW50IGFuZCB3ZSBrbmV3IHdlIGhhZCB0byBjb21lIGJhY2suIgpJZiBJIGRvbiBoYXZlIGEgbG90IG9mIHNlbGYgaW50ZXJlc3RlZCByZWFzb25zIHRvIHN0YXkgICBtYXliZSBJIG5vdCB0aGF0IGludmVzdGVkIGluIHRoZSByZWxhdGlvbnNoaXAgYW55bW9yZSBhbmQgbWF5YmUgbXkgYWx0ZXJuYXRpdmUgW2RhdGluZ10gb3B0aW9ucyBhcmUgZ29vZCwgSSBtaWdodCB0aGluayB0aGF0IGlmIG15IHBhcnRuZXIgaXMgZGVwZW5kZW50IG9uIHRoZSByZWxhdGlvbnNoaXAgYW5kIHdvdWxkIGJlIGRldmFzdGF0ZWQgaWYgd2UgYnJva2UgdXAsIHRoYXQgbWlnaHQgbWFrZSBtZSBzdGF5IGluIHRoZSByZWxhdGlvbnNoaXAsIEpvZWwgdG9sZCBUaGUgUG9zdCBhYm91dCBoZXIgc3ViamVjdHMgcmF0aW9uYWxlLgpUaGUgVVMgaXMgYSBiaWcgY291bnRyeSwgYW5kIHRoaXMgcGFydGljdWxhciBhc3BlY3Qgb2Ygb3VyIGN1bHR1cmUgdmFyaWVzIGNvbnNpZGVyYWJseSBiYXNlZCBvbiBhIHZhcmlldHkgb2YgZmFjdG9ycy4KV2UgbG9va2VkIG92ZXIgdGhlIHdpcmluZyBkaWFncmFtIGFuZCBzZWUgdGhhdCBpdHMgcG9zc2libGUgdGhhdCB0aGUgRUNVLCBFVkFQIHZhbHZlIG9yICJGYXN0IElkbGUiIHZhbHZlIGFyZSBtYWxmdW5jdGlvbmluZy4gCiJUaGUga2V5IHRoaW5nIHdpdGggdXMgaXMgd2UgYXJlIGNvbW11bml0eSBkcml2ZW4gaW5zdGVhZCBvZiBwcm9maXQgZHJpdmVuLiBDbHVicyBhcmUgY29tbXVuaXR5LiAKSXQncyBpbXBvcnRhbnQgdG8gcmVhbGl6ZSB0aGF0IGl0J3Mgbm90IGhlYWx0aHkgdG8gYmUgaW4gYSByZWxhdGlvbnNoaXAgb3IgZnJpZW5kc2hpcCB3aXRoIHNvbWVvbmUgYW5kIHlvdSBmZWVsIGxpa2UgdGhhdCBjb25uZWN0aW9uIHJlbGllcyBvbiBob3cgeW91IGJlaGF2ZS4gSXQncyBlcXVhbGx5IGFzIGltcG9ydGFudCB0byBpbXBvc2UgZXhwZWN0YXRpb25zIGFuZCBsaW1pdGF0aW9ucyBvbiB0aGUgb3RoZXIgcGVyc29uLiBXaGVuIHlvdSBhcmUgbm90IGhhdmluZyB0aGlzIG11dHVhbCB1bmRlcnN0YW5kaW5nIGl0IGNhbiBjYXVzZSByZXNlbnRtZW50IGluIHJlbGF0aW9uc2hpcHMuIEkgbGVhcm5lZCBhZnRlciBtYW55IGJ1cm5lZCByZWxhdGlvbnNoaXBzIHRoYXQgaXQgZG9lc24ndCBtYXR0ZXIgaG93IG5pY2UgeW91IGFyZSBvciBnb29kIHlvdSBhcmUuIFRoaW5ncyBiZXlvbmQgeW91cnNlbGYgZGV0ZXJtaW5lIHlvdXIgcmVsYXRpb25zaGlwczsgaXQncyBhIHR3byB3YXkgc3RyZWV0LiBBbmQgdGhlIGJlc3Qgd2F5IHRvIG1ha2UgYm91bmRhcmllcyBpcyB0byByZWFsaXplIHRoYXQuClBva2VyIG9wZXJhdG9ycyB0aGF0IGhvbGQgbGljZW5zZXMgYW5kIGNlcnRpZmljYXRlcyBhbHdheXMgcHJvdmlkZSBzYWZlIGFuZCBzZWN1cmUgZ2FtYmxpbmcgZW52aXJvbm1lbnQuIEZpcnN0IG9mIGFsbCwgdGhleSB1c2Ugc2VjdXJlIHBva2VyIHNvZnR3YXJlLiBTZWNvbmQsIHRoZXkgdXNlIGRhdGEgZW5jcnlwdGlvbiBpbiBvcmRlciB0byBzZWN1cmUgaW5mb3JtYXRpb24gcHJvdmlkZWQgYnkgdXNlcnMuIFZlcnkgb2Z0ZW4gdXNlcnMgcHJvdmlkZSBub3Qgb25seSB0aGVpciBuYW1lcyBhbmQgYWRkcmVzc2VzLCBidXQgYWxzbyBjcmVkaXQgY2FyZCBkZXRhaWxzLiBMaWNlbnNlZCBwb2tlciBzaXRlcyBhcmUgc2FmZSBhbmQgdGhpcyBwZXJzb25hbCBhbmQgZmluYW5jaWFsIGluZm9ybWF0aW9uIGlzIHN0cmljdGx5IGNvbmZpZGVudGlhbC4gV2hlbiB5b3Uga25vdyB0aGF0IHlvdSBqb2luZWQgYSBsaWNlbnNlZCBhbmQgcmVndWxhdGVkIHBva2VyIHNpdGUsIHlvdSBrbm93IHRoYXQgeW91ciBpbmZvcm1hdGlvbiBpcyBzYWZlLgpBbHNvLCBqdXN0IGFzIGltcG9ydGFudCwgaXMgdG8gcGF0IHlvdXJzZWxmIG9uIHRoZSBiYWNrIGZvciB0aGUgcHJvZ3Jlc3MgeW91IERPIG1ha2UuIE1lYXN1cmFibGUgcHJvZ3Jlc3MgaXMgbW90aXZhdGlvbiBiZXN0IGZyaWVuZC4gU2V0IG1ldHJpY3MgZm9yIHlvdXJzZWxmOiBJIHdhbnQgdG8gcmVhZCAxMCBwYWdlcyB3aXRob3V0IGxvb2tpbmcgdXAgS2FuamksIEkgd2FudCB0byB3YXRjaCBhIHdob2xlIGVwaXNvZGUgd2l0aG91dCBzdWJ0aXRsZXMuIApObyBvbmUgY2FuIGZpbmQgd2hhdCBZT1UgaGF2ZSwgYW55d2hlcmUgZWxzZS4gVGhleSBoYXZlIHRvIGNvbWUgdG8geW91IGZvciB0aGF0LiAKSGUgaGFkIHdvcmtlZCB0aGVyZSBtb3N0IG9mIGhpZ2ggc2Nob29sIGFuZCBhbGwgb2YgY29sbGVnZS4gCkNvdXJhZ2U6IHdpc2Ugb25lcyBiZXQgaGVhdmlseSB3aGVuIHRoZSB3b3JsZCBvZmZlcnMgdGhlbSB0aGF0IG9wcG9ydHVuaXR5LiAKTXkgbGF3eWVyIGlzIGJ1c3kgcHJlcGFyaW5nIGEgY2Vhc2UgYW5kIGRlc2lzdCBvcmRlciBmb3IgTWV5ZXIgdG8gc3RvcCBicmFpbndhc2hpbmcgbXkgZGF1Z2h0ZXJzLiBCcmVha2luZyBEYXduIGlzIHRoZSBjdWxtaW5hdGlvbiBvZiB3aGF0IGNhbiBvbmx5IGJlIGRlc2NyaWJlZCBhcyBjb25zZXJ2YXRpdmUgQ2hyaXN0aWFuIHNleHVhbCBwcm9wYWdhbmRhIGFuZCBtaXNpbmZvcm1hdGlvbi4gCiJUaGUgbWFqb3JpdHkgb2YgdGhlIHBsYXllcnMgaGF2ZSBwbGF5ZWQgMTUgb3IgMjAgVGVzdHMsIGFuZCB0aG91Z2ggRW5nbGFuZCBhcmUgcGxheWluZyBleGNlcHRpb25hbCBjcmlja2V0LCBpdCdzIGEgdG91Z2ggYXNrIHRvIGdvIHRvIEF1c3RyYWxpYSBhbmQgd2luLiAKSXQgYmVlbiBhIGxvbmcgdGltZSBzaW5jZSBJIGJlZW4gdG8gSGlsbHNib3JvIFZpbGxhZ2UsIGJ1dCBJIHJlbWVtYmVyIHRoZXJlIGJlaW5nIHNvbWUgYm91dGlxdWUgc2hvcHMgdGhlcmUuIEZvciB0aGUgbW9zdCBwYXJ0IHlvdSBoYXZlIHRvIGhhdmUgYSBjYXIgdG8gZ2V0IGFueXdoZXJlLCB0aGVyZSBub3QgYSBsb3QgZG93bnRvd24gYmVzaWRlcyBjaGVlc3kgaG9ua3kgdG9ua3MgZXRjLiBUaGVyZSB1c2VkIHRvIGJlIGEgdmludGFnZSBzdG9yZSBJIGxpa2VkIGNhbGxlZCBMb2NhbCBIb25leSBidXQgSSBqdXN0IGdvb2dsZWQgaXQgYW5kIG5vdyBpdCBhIGhhaXIgc2Fsb24/PwpUaGlzIGlzIGEgcmFyZSBjaGFuY2UgZm9yIHRoYXQgZnJhbmNoaXNlIGFuZCBJIGFic29sdXRlbHkgY29tbWVuZCB0aGVtIGZvciBnb2luZyBhbGwgaW4uLiAKSSB3YW50ZWQsIGl0J3MgYSBzaGFtZSB0byBzYXksIEkgYWx3YXlzIHdhbnRlZCB0byBkbyB3cm9uZy4gIi4gCk9tIGR1IGhhciBwcm92YXQgbmdyYSBhdiBkZSBvdmFuc3RlbmRlIHRpcHMgb20gaHVyIGR1IGZuZ2FyIGVuIG90cm9nZW4gbWFrZSBvY2ggaGFyIHRhcHBhdCwgcHJvdmEgYXR0IHNwZWxhIHVwcCBkaW5hIHBva2VyIGZhY2UuIApXZSdsbCBhbHNvIGxvb2sgYXQgbWVkaWNhdGlvbnMgYW5kIHRoZSBsYXRlc3QgaW4gd2lncyBhbmQgaGFpciBhZGRpdGlvbnMuIEEgd29yZCBvZiBjYXV0aW9uOiBUaGVyZSBpcyBubyBxdWljayBvciBzdXJlIGZpcmUgd2F5IHRvIHJlcGxhY2UgeW91ciBkd2luZGxpbmcgZm9sbGljbGVzIHdpdGggYSBmdWxsLCB0aGljayBoZWFkIG9mIGhhaXIuIApUYWtlcyByZXF1ZXN0cyBmb3IgYXJlYXMgd2Ugd2FudCB0byB3b3JrIG9uClRoZSBBdGhhbmFzaWFuIENyZWVkIGlzIHVzdWFsbHkgZGl2aWRlZCBpbnRvIHR3byBzZWN0aW9uczogbGluZXMgMSAyOCBhZGRyZXNzaW5nIHRoZSBkb2N0cmluZSBvZiB0aGUgVHJpbml0eSwgYW5kIGxpbmVzIDI5IDQ0IGFkZHJlc3NpbmcgdGhlIGRvY3RyaW5lIG9mIENocmlzdG9sb2d5LiAKRm9ydHVuYXRlbHksIGRhbmdlcm91cyBuZXdib3JuIGluZmVjdGlvbnMgdXN1YWxseSBjYW4gYmUgcHJldmVudGVkLCBvciB0aGVpciBzZXZlcml0eSBsZXNzZW5lZCwgaWYgdGhlIGJhYnkgaXMgdHJlYXRlZCByaWdodCBhZnRlciBiaXJ0aCB3aXRoIGFuIGluamVjdGlvbiBvZiBhbnRpYm9kaWVzIGNhbGxlZCBWWklHICh2YXJpY2VsbGEgem9zdGVyIGltbXVuZSBnbG9idWxpbikuIApUaGVyZSBpcyBjb25zaWRlcmFibGUgYWNjZW50IG9uIGJvZHkgYW5kIGJvZGlseSBmdW5jdGlvbnMgdGhyb3VnaG91dCB0aGUgMTAgcG9lbXMgd2l0aGluICg1IHggJ2RhcmsnOyA1IHggJ2xpZ2h0JykuIEluZGVlZCwgdGhlIHZlcnkgZmlyc3Qgc2F0dXJuaW5lIHBvZW0sIEJhZCBDaGFyaXR5LCByZWdhbGVzIHRoZSByZWFkZXIgd2l0aCBib25lcywgdGVhcnMsIGZyYW1lbGVzcyBzZWx2ZXMsIHNrZWxldG9uLCBmcmFjdHVyZXMgICBhbGwgaW4gbmluZSBsaW5lcy4gClBvbGl0aWNhbCBhZmZpbGlhdGlvbi9pZGVvbG9neSBpcyBzb21ld2hhdCBnZW5ldGljLCB3aHkgd291bGRuIHRoaXMgaW5jbHVkZSBleHRyZW1pc3QgaWRlb2xvZ3k/IEluIGFkZGl0aW9uLCB5b3Ugc3RpbGwgaGF2ZSB0aGUgbW9tIHJhaXNpbmcgdGhlIGtpZHMgd2l0aCB0aGUga25vd2xlZGdlIHRoYXQgdGhlaXIgZGFkIHdhcyBhIHRlcnJvcmlzdC4gVGhleSBjb3VsZCBlYXNpbHkgYmUgcmFpc2VkIHRvIGJlIHRlcnJvcmlzdHMoc2hlIGNvdWxkIGVhc2lseSBiZSBseWluZyBhYm91dCB3aGV0aGVyIG9yIG5vdCBzaGUgc3RpbGwgYmVsaWV2ZXMgaW4gdGhlIGNhdXNlIGJlaGluZCBJU0lTIG5vdyB0aGF0IGl0IGlzIGJhc2ljYWxseSBkZXN0cm95ZWQgYW5kIHNoZSBpcyBsb29raW5nIGZvciBzb21ld2hlcmUgdG8gZ28pIGFuZC9vciBteXRob2xvZ2l6ZSB0aGVpciBkYWRzIGFuZCB3YW50IHRvIGZvbGxvdyBpbiB0aG9zZSBmb290c3RlcHMuLiAKVGhpcyBpcyBub3QgZmljdGlvbi4gCkFzIGEgcmFwcGVyLCBzaGUgcmVsZWFzZWQgIkluIEZpbmEgV2UgVHJ1c3QsIiBhZnRlciB5ZWFycyBvZiBtYWtpbmcgcHJvZmFuZSBhbmQgaGlsYXJpb3VzIHZpcmFsIHJhcCB2aWRlb3MgaW4gaGVyIHRyYWRlbWFyayByYXNweSB2b2ljZS4gT25lIGVhcmx5IGhpdCwgIk15IFZhZywiIHdhcyBhbiBvZGUgdG8gaGVyIGZlbWFsZSBhbmF0b215IGFuZCBhIHJlc3BvbnNlIHRvIE1pY2tleSBBdmFsb24ncyAiTXkgRGljay4iIEl0IGluY2x1ZGVkIHRoZSBseXJpY3M6LiAKRGlyZWN0aW9uczogRm9yIHRoZSB0dXJrZXk6IFBsYWNlIGEgMjEvMiBnYWxsb24gemlwIGNsb3NlIHBsYXN0aWMgYmFnIHVwcmlnaHQgaW4gYSBsYXJnZSBib3dsLiBQbGFjZSB0aGUgdHVya2V5IGluIHRoZSBib3dsLCB0aGVuIHBvdXIgaW4gdGhlIGNpZGVyLCBzYWx0LCBicm93biBzdWdhciwgc2FnZSBhbmQgcGVwcGVyY29ybnMuIFNlYWwgdGhlIGJhZywgc3F1ZWV6aW5nIG91dCBhcyBtdWNoIGFzIHBvc3NpYmxlIGFzIHlvdSBkbyBzby4gTWFzc2FnZSB0aGUgYmFnIHRvIG1peCB0aGUgaW5ncmVkaWVudHMgaW4gdGhlIGxpcXVpZC4gUmVmcmlnZXJhdGUgYW5kIGxldCBicmluZSBmb3IgYSBtaW5pbXVtIG9mIDggaG91cnMsIHR1cm5pbmcgdGhlIHR1cmtleSBub3cgYW5kIGFnYWluLgpUaGlzIGlzIGEgd2VpcmQgb25lLiAKSW4gT2N0b2JlciAyMDE3LCBhcyB0aGUgTWVUb28gbW92ZW1lbnQgc3B1cnJlZCBhIG5hdGlvbmFsIGNvbnZlcnNhdGlvbiBhYm91dCB0aGUgc2V4dWFsIGhhcmFzc21lbnQgYW5kIGFidXNlIG9mIHdvbWVuLCB0aGUgTWlhbWkgSGVyYWxkIGhhZCBhbHJlYWR5IGJlZ3VuIGV4YW1pbmluZyB0aGUgSmVmZnJleSBFcHN0ZWluIGNhc2UuIEF0dG9ybmV5IEFsZXhhbmRlciBBY29zdGEgdG8gUHJlc2lkZW50IFRydW1wJ3MgQ2FiaW5ldCBpbiBGZWJydWFyeSBvZiB0aGF0IHllYXIsIHRoZSBIZXJhbGQgYmVnYW4gdG8gdGFrZSBhIGNsb3NlciBsb29rIGF0IHdoYXQgcm9sZSBBY29zdGEgcGxheWVkIGluIGhlbHBpbmcgb3JjaGVzdHJhdGUgYSBzZWNyZXQgcGxlYSBiYXJnYWluIHRoYXQgcHJvc2VjdXRvcnMgc3RydWNrIHdpdGggRXBzdGVpbiBpbiAyMDA3LCBhbmQgZmluYWxpemVkIGluIDIwMDguClRoZSBmaXJzdCBvbmUgaXMgY2VudGVyZWQgb24gZmluYW5jaWFsIGFzcGVjdC4gT25lIHNhZCBwcm9iYWJpbGl0eSB3aXRoIEludGVybmV0IHBva2VyIGlzIHRoYXQgYSBwbGF5ZXIgbWlnaHQgbm90IGdldCBoaXMgd2lubmluZ3MuIApXaGl0ZXJvc2U5OCAgMTcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSW4gR3JlYXRlciBWYW5jb3V2ZXIgc2FsZXMgYXJlIGZvcmVjYXN0IHRvIHJpc2UgNi41IHBlciBjZW50IGFmdGVyIGZhbGxpbmcgMzAuOCBwZXIgY2VudCBsYXN0IGZpc2NhbCB5ZWFyLCB3aXRoIHRoZSBhdmVyYWdlIHByaWNlIGRlY2xpbmluZyAyLjcgcGVyIGNlbnQuIFJlYWwgRXN0YXRlIEFzc29jaWF0aW9uIGNoaWVmIGVjb25vbWlzdCBDYW1lcm9uIE11aXIuCkhhZCBhIHZlcnkgZ29vZCBsYXVnaCBhdCB0aGlzIG9uZSwgQmx1ZUdhbWVyLiBKdXN0IHBpY3R1cmluZyB0aGF0IHBvb3IgU09CIHN0dWNrIHRoZXJlLCBvbiBhIGxhZGRlci4gTm8gZXNjYXBlLiAKU28gaWYgeW91IGNhbGxlZCBpbiBhIHNhbmR3aWNoIG9yZGVyIHRvIE1yLiAKSSB3b2tlIHVwIHRoaXMgbW9ybmluZyB3b25kZXJpbmcgd2hhdCB0aGUgaGVjayBoYXBwZW5lZCBsYXN0IG5pZ2h0IGF0IG91ciBwb2tlciBwYXJ0eS4gWW91IGV2ZXIgaGF2ZSBhIHBzeWNob2xvZ2ljYWwgYmF0dGxlIHdpdGggc29tZW9uZSBhbmQgbWFrZSBhIGJvbmVoZWFkZWQgcGxheT8gV2VsbCwgdGhhdCB3YXMgbWUgbGFzdCBuaWdodCBhbmQgSSBmaW5pc2hlZCBqdXN0IG91dCBvZiB0aGUgbW9uZXkuIFdoaWxlIGl0IHdhcyBkaXNhcHBvaW50aW5nIHRvZGF5J3MgYW5vdGhlciBkYXkgYW5kIHRoaXMgaXMgYWJvdXQgdGhlIDIwMCBQbGFzdGljIFBva2VyIENoaXAgU2V0IEFuZCBDYXJvdXNlbC4uIApJIGN1dCBpdCBhbGwgdXAgYW5kIG1peCBpdCB0b2dldGhlciBzbyBpdCBsb29rcyBhIGxpdHRsZSBsaWtlIGRvZyBmb29kIChsYXVnaHMpLiBNeSBtb20gbWFrZXMgaXQgdW5iZWxpZXZhYmxlLiBUaGF0IG15IGZhdm91cml0ZS4uIApDb25zaWRlcmluZyBoaXMgcmVwdXRhdGlvbiBhcyBhIHBva2VyIHBsYXlpbmcsIGhhcmQgcGFydHlpbmcgcGxheWJveSwgaXQncyBhIHN1cmUgYmV0IHRoYXQgaGUnbGwgYWxzbyBiZSBqdWdnbGluZyBvdGhlciBhY3Rpdml0aWVzLgpDYXJkcyBhcmUgc2h1ZmZsZWQgYW5kIGVhY2ggcGxheWVyIGdldHMgb25lIGNhcmQsIHRoZW4gZWFjaCBwbGF5ZXIgZ2V0cyBhbm90aGVyIGNhcmQuIEJpZGRpbmcgcm91bmQgc3RhcnRzIGFuZCBlbmRzLiBGbG9wIGlzIGRlYWx0LCBCaWRkaW5nIHJvdW5kIHN0YXJ0cyBhbmQgZW5kcy4gVHVybiBpcyBkZWFsdCwgQmlkZGluZyByb3VuZCBzdGFydHMgYW5kIGVuZHMuIFJpdmVyIGlzIGRlYWx0ICwgYmlkZGluZyByb3VuZCBzdGFydHMgYW5kIGVuZHMgd2l0aCBzaG93ZG93bi4gU29tZW9uZSB3aW5zCkZvciBhbGwgd2Uga25vdyBoaXMgc2VydmljZSBkb2cgaXMgZm9yIHNvbWV0aGluZyB1bnJlbGF0ZWQsIGFuZCB0aGUgc2FtZSBnb2VzIGZvciBoaXMgbWVkaWNhdGlvbiAoaWYgdGhlcmUgZXZlbiBpcyBhbnkpLi4gClRoZSBIZW5nIFNwYSBhdCBIeWF0dCBSZWdlbmN5IENob25ncWluZyBlbmNvbXBhc3NlcyB0ZW4gbHV4dXJ5IHNwYSBzdWl0ZXMgYW5kIGFzIHdlbGwgYXMgc2VwYXJhdGUgZm9vdCBtYXNzYWdlIHJvb21zIGZvciB0b3RhbCBwYW1wZXJpbmcgYW5kIHJlbGF4YXRpb24uIApXZSByZWNvbW1lbmQgdGhhdCB5b3UgY2hlY2sgYmFjayBmcmVxdWVudGx5IGFuZCByZXZpZXcgdGhlc2UgVGVybXMgcmVndWxhcmx5IHNvIHlvdSBhcmUgYXdhcmUgb2YgdGhlIG1vc3QgY3VycmVudCByaWdodHMgYW5kIG9ibGlnYXRpb25zIHRoYXQgYXBwbHkgdG8geW91LiBUaGUgTGFzdCBVcGRhdGVkIGxlZ2VuZCBhdCB0aGUgdG9wIG9mIHRoaXMgcGFnZSBpbmRpY2F0ZXMgd2hlbiB0aGVzZSBUZXJtcyB3YXMgbGFzdCByZXZpc2VkLi4gCkJFTiBISUdHSU5TJyBGT1JFQ0FTVDogVGhlIEJsdWVzIGZvbGRlZCBxdWlja2VyIHRoYW4gYSBwb2tlciBwcm8gaG9sZGluZyBKYWNrLCBUaHJlZSBvZmYgc3VpdC4gSXQgZG9lc24ndCBib2RlIHdlbGwgZm9yIHRoaXMgd2VlayB3aGVuIHRoZXkgZmFjZSB0aGUgV2VzdGVybiBCdWxsZG9ncyBhdCBFdGloYWQgU3RhZGl1bS4gSG93ZXZlciwgdGhlIHdvb2RlbiBzcG9vbiBhbmQgTm8uMSBkcmFmdCBwaWNrIGlzIGFscmVhZHkgbG9ja2VkIGluIHNvIG5vIG9uZSBpcyB0cnVseSBzdXJwcmlzZWQgYnkgQ2FybHRvbidzIGZvcm0gYXQgdGhpcyBwb2ludC4uIApIZSB0b2xkIHRoZSBhZ2VudHMgaGUgc3RyYWRkbGVkIGhlciBhbmQgcHV0IGJvdGggb2YgaGlzIGhhbmRzIGFyb3VuZCBoZXIgbmVjayBhbmQgc3RyYW5nbGVkIGhlciwgYnV0IHNhaWQgc2hlIG5ldmVyIHJlYWxseSBmb3VnaHQgYmFjay4KVGhpcyBsaXN0IHdvdWxkIG5vdCBiZSBjb21wbGV0ZSB3aXRob3V0IGluY2x1ZGluZyB1bHRpbWF0ZSBwb3AgcHJpbmNlc3MgQnJpdG5leSBTcGVhcnMuIEhlciBmYW1lIGV4cGxvZGVkIGF0IHRoZSBhZ2Ugb2YgMTcgd2l0aCBoZXIgZmlyc3QgSG90IDEwMCBtZWdhIGhpdCAiQmFieSBPbmUgTW9yZSBUaW1lIiBpbiAxOTk5LiBBZnRlciBhIGxvbmcgaGlhdHVzIGR1cmluZyB0aGUgbWlkZGxlIG9mIHRoZSBkZWNhZGUsIGJldHdlZW4gMjAwNCBhbmQgMjAwNywgc2hlIGNhbWUgYmFjayBzdHJvbmdlciB0aGFuIGV2ZXIgaW4gMjAwOCB3aXRoIGhlciBmaXJzdCBudW1iZXIgb25lIGhpdCAiV29tYW5pemVyIiBhbmQgd2VudCBvbiB0byBoYXZlIGFub3RoZXIgbnVtYmVyIG9uZSB3aXRoICIzIiBpbiAyMDA5LiBTaGUgaGFkIHRlbiBoaXRzIG9uIHRoZSB5ZWFyIGVuZCBjaGFydHMuIExvLCBydWxlZCBib3RoIHRoZSBwb3B1bGFyIG11c2ljIGFuZCBIb2xseXdvb2QgbW92aWUgc2NlbmVzIGR1cmluZyB0aGUgMjAwMHMuIFNoZSBpcyBhIHN0YXIgaW4gZXZlcnkgc2Vuc2Ugb2YgdGhlIHdvcmQuIFNoZSBpcyBtYWduZXRpYyBhbmQgaW1wYWN0ZnVsLiBIaXRzIGZyb20gdGhlIGFsYnVtIHdlcmUgIkxvdmUgRG9uJ3QgQ29zdCBBIFRoaW5nIiBhbmQgIlBsYXkiIGluIDIwMDEuIFNoZSBoYWQgbmluZSBoaXRzIG9uIHRoZSB5ZWFyIGVuZCBjaGFydHMuIENvb2wgSiwgaW4gMjAwMy4KV2l0aCB0aGUgZmFzdCBwYWNlZCBjb250ZW1wb3JhcnkgbGlmZSwgZXZlcnlvbmUgbmVlZHMgdGltZSB0byByZWxheCBhbmQgYWxzbyB0YWtlIGEgYnJlYWsuIEZvciB5b3VyIHNwZWNpZmljIHJlcXVpcmVtZW50cyB5b3UgY291bGQgcGljayBhbW9uZyB0aGUgMyBzdXBwbGllZCBtYXNzYWdlIHRoZXJhcHkgcHJvZ3JhbXM6IHJlanV2ZW5hdGUgeW91ciBiYWNrICgxNSBtaW51dGVzIG9mIG1hc3NhZ2UgZm9yIHRoZSBlbnRpcmUgYmFjayksIHJlbGlldmUgeW91ciBuZWNrIGFuZCBhbHNvIHNob3VsZGVycyAoMTUgbWludXRlcyB0byByZWxpZXZlIHVwcGVyIGJhY2sgdGVuc2lvbnMpLCBhbmQgcmVsZWFzZSB5b3VyIGxvd2VyIGJhY2sgKDE1IG1pbnMgdG8gc29vdGhlIHJlZHVjZWQgYmFjayBwYWluKS4uIApJZiB5b3Ugb3ZlcmhlYXIgdGhlIGdlbmVyYWwgY29udmVyc2F0aW9uIGF0IGFueSBwYXJ0eSB5b3UgZmluZCB0aGF0IG1lbiBhcmUgdXN1YWxseSB0YWxraW5nIGFib3V0IGZpbmFuY2lhbCBtYXR0ZXJzIGxpa2UgcHJvcGVydHkgYW5kIHNoYXJlcyB3aGlsZSB3b21lbiB0YWxrIGFib3V0IHRoZWlyIGVtb3Rpb25zIGFuZCBob3cgdGhleSBmZWVsLiBTaGUgZmVlbHMgYWxzbyB0aGF0IHdoaWxlIG1lbiBhcmUgd2FyeSB0byBkaXNjdXNzIHRoZWlyIGZlYXJzIHdpdGggb3RoZXIgcGVvcGxlIHdvbWVuIGFyZSBtb3JlIG9wZW4gd2l0aCBib3RoIHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBlbW90aW9ucyBhbmQgaGVuY2UgZGV2ZWxvcCBtb3JlIGludGVuc2UgcmVsYXRpb25zaGlwcy4gCldoaWxlIE1hcmlseW4gZm91bmQgdGhlIHBsYXkgJ2ZhYnVsb3VzJyBBbWJhc3NhZG9yIE11bnRlciBvYnNlcnZlZCBpdCBhcyAnZGVwaWN0aW9uIG9mIHRoZSByaWNoIGRpdmVyc2l0eSBhbmQgdmFyaWV0eSBvZiBsaWZlIGluIFBha2lzdGFuIGFuZCBVUycuIFRoZSBhbWJhc3NhZG9yIHB1bmNoZWQgaW4gdmVyeWRpcGxvbWF0aWNhbGx5ICd0aGUgY29tZWRpYyBwb3NzaWJpbGl0aWVzIG9mIHRoaXMgUGFrIFVTIGNvbGxhYm9yYXRpb24nLCBhZGRpbmcgYWxzbyBpbiBhIGhvcGVmdWwgdG9uZSB0aGF0ICdncmVhdCB0aGluZ3MgY2FuIGhhcHBlbicuSW4gaGlzIG9wZW5pbmcgc3BlZWNoLCB0aGUgVVMgYW1iYXNzYWRvciBzYWlkIHRoYXQgUGFrIFVTIHJlbGF0aW9uc2hpcCBiZWFycyByZXNlbWJsYW5jZSB0byB0aGUgJ09kZCBDb3VwbGUnIEZlbGl4IGFuZCBPc2NhciwgdGhlIHR3byBwcm90YWdvbmlzdHMgb2YgdGhlIHBsYXkuIApZb3UgbXVzdCBoYXZlIG9uZSBleHBsYWluIHdoeSBpcyB0aGlzIHRoZXkgY2FuIGJlIHRoZSBleHBlcnQgc2hvdWxkIGxvZ2ljYWxseSBleHBlY3Qgb25lIHRvIGNvbWUgdG8gYmUgYWJsZSB0byBoZWxwIG1ha2Ugb3VyIG93biBwYXltZW50cy4uIApHcm92ZXIgQ2xldmVsYW5kICgxODM3IDE5MDgpIHdhcyB0aGUgb25seSBwcmVzaWRlbnQgaW4gaGlzdG9yeSB0byBob2xkIHRoZSBqb2Igb2YgYSBoYW5nbWFuLiBIZSB3YXMgb25jZSB0aGUgc2hlcmlmZiBvZiBFcmllIENvdW50eSwgTmV3IFlvcmssIGFuZCB0d2ljZSBoYWQgdG8gc3ByaW5nIHRoZSB0cmFwIGF0IGEgaGFuZ2luZy4KSW4gdGhlIGFib3ZlIGV4YW1wbGUgaWYgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcgcG9ja2V0IEFBLCBhbmQgaGFzIGEgbWFkZSBzZXQsIHlvdSBzdGlsbCBoYXZlIGEgMjclIGNoYW5jZSB0byB3aW4gaWYgeW91IGdvIHRvIHRoZSByaXZlci4gClRoZSBNYXlvciBvZiBBbGJ1cnkgS2V2aW4gTWFjayBpcyBub3QgaW1wcmVzc2VkIHRoYXQgaGlzIGNvbW11bml0eSBsb3NlcyAkNjhtIGEgeWVhciBvbiB0aGUgcG9raWVzICAgdGhlIG1ham9yaXR5IGlzIGF0IHRoZSBlbm9ybW91cyBDb21tZXJjaWFsIENsdWIsIGEgQ2x1YidzIE5TVyBmcmFuY2hpc2UgbG9uZyBydW4gYnkgdGhlIHNlY3JldGl2ZSBEdWNrIGZhbWlseS4KT2gsIEkgZG9uIGZvbGxvdyBhbnkgd2Vlay4gTW9zdGx5IEkganVzdCBkbyB3YXJtIHVwIHNldHMgdGhlbiBzaW5nbGVzIGFsbCB0aGUgd2F5IHVwIHVudGlsIEkgZ2V0IHRvIGEgZGFpbHkgbWF4LiAKQ2hhcHN5bV8gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpQdXQgbXkgY29sbGVjdGlvbiBvbiBhbmQgbGF5IGJhY2sgYW5kIGFsdGVybmF0ZSBiZXR3ZWVuIGZhbGxpbmcgYXNsZWVwIGFuZCBiZWhhdmluZyBpbiBhIG1hbm5lciB3aXRoIHdoaWNoIG1hbnkgbGFiZWwgbWVuIG9mIG15IGFnZSBhcyBjcmVlcHkuIApJIHRvbGQgaGltIGhvdyBjb29sIGl0IHdhcyB0byBtZWV0IGhpbSBpbiBwZXJzb24sIGJ1dCBJIGRpZG4ndCB3YW50IHRvIGJlIGEgZG91Y2hlIGFuZCBib3RoZXIgaGltIGFuZCBhc2sgaGltIGZvciBwaG90b3Mgb3IgYW55dGhpbmcuIApJbiB0aGUgbG9uZyBydW4sIG11bSBvciBtb20gaXMganVzdCBhIHdvcmQsIHlvdXIgbW90aGVyIG1heSB0cnkgdG8gY2xhaW0gaXQgYW5kIHVzZSBpdCB0byBtYWtlIGhlcnNlbGYgZmVlbCBhIGJpdCB5b3VuZ2VyIHRoYW4gaWYgc2hlIHdhcyBjYWxsZWQgZ3JhbmRtYSwgYnV0IHlvdXIgYmFieSB3aWxsIGFsd2F5cyBrbm93IHdobyBpdCdzIHJlYWwgbW90aGVyIGlzLiBZb3UgYXJlIHRoZSBwZXJzb24gd2hvIGdhdmUgYmlydGggdG8gdGhlIGNoaWxkIGFuZCBpZiB5b3Ugc3BlbnQgYW55IHRpbWUgYnJlYXN0ZmVlZGluZyB0aGVuIHlvdXIgYmFieSB3aWxsIGFsd2F5cyByZW1lbWJlciB0aGF0IGJvbmQsIG5vIHdvcmRzIGNhbiBjaGFuZ2UgdGhhdC4uIApVbmliZXQgc3RhcnRlZCBpdHMgc3BvcnRzIGJldHRpbmcgYnVzaW5lc3MgaW4gMTk5NywgYW5kIHByb3ZpZGVzIGEgcGxhdGZvcm0gZm9yIHNwb3J0cyBiZXR0aW5nLCBjYXNpbm8gZ2FtYmxpbmcsIGFuZCBvbmxpbmUgcG9rZXIgcGxheWluZyB0byBvdmVyIGVpZ2h0IG1pbGxpb24gcGxheWVycyBhbGwgb3ZlciB0aGUgd29ybGQgaW4gbW9yZSB0aGFuIDE1MCBjb3VudHJpZXMuIEluIG9yZGVyIHRvIGJlIGFibGUgdG8gcHJvdmlkZSBzdWNoIHNlcnZpY2VzLCBVbmliZXQgaG9sZHMgYSBsaWNlbnNlIGlzc3VlZCBpbiB0aGUganVyaXNkaWN0aW9uIG9mIE1hbHRhLlVuaWJldCBpcyB2ZXJ5IGNvbnNjaW91cyBhYm91dCByZXNwb25zaWJsZSBnYW1ibGluZyBhbmQgaXMgYXdhcmUgdGhhdCBwZW9wbGUgdGVuZCB0byBkZXZlbG9wIGEgZ2FtYmxpbmcgcHJvYmxlbSBpZiB0aGV5IGRvIG5vdCB3YWdlciByZXNwb25zaWJseS4gCkkgYWx3YXlzIHdvbmRlcmVkIGhvdyB5b3UgY2FuIGFsbCBzYXkgSU4gb3IgT1VUIGJ1dCBuZXZlciB0ZWxsIHVzIHdoYXQgcmVhZGluZyBkZXRlcmVtaW5lcyBpdC4KTmEgaGV0IHBhc3NlcmVuIHZhbiBkZSBncm90ZSBiZXJvZW1kZSBEb21pY2EgZ3JvdCwgZGllIHdlIGR1cyBuaWV0IGJlem9jaHRlbiwga3dhbWVuIHdlIGFhbiBkZSBIb25nYWFyc2UgZ3JlbnMhIEhpZXIgbG9wZW4gZGUgZ3JvdHRlbiBnZXdvb24gZG9vcjsgZGl0IGlzIGhldCBOYXRpb25hbGUgUGFyayBBZ2dsZXRlay4gCk1vc3QgbmV3IHVzZXJzIGRvbiByZWFsaXNlIGhvdyBhZmZvcmRhYmxlIGl0IGNhbiBiZS4gCkluIGR1ZSBjb3Vyc2Ugb2YgdGltZSwgQ2FyZHMgcGF2ZWQgdGhlaXIgd2F5IGludG8gdGhlIGdhdGV3YXlzIG9mIEV1cm9wZSBmcm9tIHRoZSBkeW5hc3R5IG9mIElzbGFtIHdoZXJlIHRoZSBzdWl0ICBjaXBoZXJzIHNoYXBlZCB1cCBhcyBjdXBzIGFuZCBzd29yZHMgYWxvbmcgd2l0aCBub24gcmVwcmVzZW50YXRpb25hbCBjb3VydCBjYXJkcy4gCldobyB1bmRlcndlbnQgYWJzdGluZW5jZSBwcm9ncmFtcyB3ZXJlIG11Y2ggbW9yZSBsaWtlbHkgdG8gYmUgdW5zdXJlIHdoZXRoZXIgYSBjb25kb20gd2FzIGVmZmVjdGl2ZSBhdCBwcmV2ZW50aW5nIFNURHMuLiAKU2hlIHNoYXJlcyB0aGVzZSBmaXZlIHRpcHMgdG8gYnJpbmcgeW91ciBiYWxjb255IHRvIGxpZmUgdGhpcyBzcHJpbmcuMS4gVGhlIGRpcmVjdGlvbiBhIGJhbGNvbnkgZmFjZXMgd2lsbCBoYXZlIGFuIGltcGFjdCBvbiB3aGljaCBwbGFudHMgd2lsbCBmbG91cmlzaCBpbiB0aGUgc3BhY2UuIFdoZW4geW91IGNob29zaW5nIHBsYW50cyBvciBidXlpbmcgc2VlZHMgYXQgdGhlIGdhcmRlbiBjZW50cmUsIGFzayBmb3IgYWR2aWNlIG9uIHdoYXQgdG8gcGxhbnQgYWNjb3JkaW5nIHRvIGhvdyBtdWNoIHN1biBvciBzaGFkZSB5b3VyIGJhbGNvbnkgcmVjZWl2ZXMuMi4gCkl0cyBub3QgYXMgc2ltcGxlIGFzIHRoZXkgc2FpZCB0aGlzLCBvciBhY3RlZCB0aGlzIHdheSBGb3IgZXhhbXBsZSwgSSBrbm93IHRoYXQgYmFkIHBsYXllcnMgd2lsbCBzaXQgYmFjayBpbiB0aGVpciBjaGFpciwgc3ByZWFkIG91dCwgb3IgZ2V0IHJlYWxseSBjaGF0dHksIHdoZW4gdGhleSBhcmUgY29uZmlkZW50LiBTbyBpZiBJIGhhdmUgc29tZW9uZSBjb252aW5jZWQgSSBhbSBhIG5vdmljZSBvciB3aGF0ZXZlciwgSSBjYW4gZG8gdGhpcyBhIGNvdXBsZSBvZiB0aW1lcyBhcyBhIGJsdWZmLiBUb255IEcgaXMgcHJldHR5IHdlbGwga25vd24gZm9yIGJlaW5nIGNoYXR0eSBhcyBmdWNrLCBibHVmZiBvciBudXRzLi4gCkN1dCBjYXVsaWZsb3dlciBpbnRvIHN0ZWFrcyBhcyB3ZWxsIGFzIHlvdSBjYW4sIEkgZ290IDIgbGFyZ2Ugc3RlYWtzIGFuZCA2aXNoIG9mIHNtYWxsZXIgb25lcy4gClBsYXkgb24gdGhlIFR1cm4gYW5kIFJpdmVyClRoaW5rIG9mIHRoZSBjb2xvc3N1cyAoYXQgbGVhc3QgaW4gdGhpcyBkZW1vLCB3aG8ga25vd3MgYWJvdXQgdGhlIGZ1bGwgZ2FtZSkgYXMgbW9yZSBvZiBhIGhpdCBhbmQgcnVuLiBZb3UgZG8gaGF2ZSB0aGUgaGlnaGVzdCBoZWFsdGggYW5kIGFybW91ciBidXQgY2VydGFpbiBlbmVtaWVzIHdpbGwgc3RpbGwgc2hyZWQgeW91LiAKS21mY29zdHVtZWRlc2lnbmVyICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpMJ2VtYnJ5b24gaW4gdml0cm8gZXN0IHVuIHVmIGZjb25kIHF1aSBlc3QgaXNzdSBkJ3VuZSBmZW1tZSBtYWlzIGNvbnNlcnYgaG9ycyBkZSBzb24gY29ycHMsIGQnbyBsJ2V4cHJlc3Npb24gIGJiIHByb3V2ZXR0ZSAuIApZb3UgYWxzbyBkb24gd2FudCB0byBiZSB0b3VjaGluZyBzb21lIGVuZW1pZXMgdW50aWwgeW91IG11Y2ggc3Ryb25nZXIgKGxpa2UgZ2hhc3RzIG9yIHRob3NlIGdyZXkgdGhpbmdzIGluIHRoZSBjbG9ha3dvb2QpLiAKTWF5YmUgSSBjYW4gZ2V0IG9uZSB0aGF0IGxpdmVzIGhlcmUgaW4gdG93biB0byBnbyB3aXRoIG1lIGZvciBjb2ZmZWUuIApNZSBnaXZlIHlvdSBvbmUgZXhhbXBsZS4gSW4gdHJhbnNsYXRpb24uIApUb3dlbHMgVXNlIHBsdXNoIHRvd2VscyB0byByZW1vdmUgZXhjZXNzIG9pbHMgYW5kIGxvdGlvbnMgZnJvbSBjbGllbnRzIGFmdGVyIHRoZWlyIG1hc3NhZ2VzIGFyZSBvdmVyLiBTaGUgaGFzIGEgYmFjaGVsb3IgZGVncmVlIGluIGJ1c2luZXNzIGFuZCBtYXJrZXRpbmcgZnJvbSBUb3dzb24gVW5pdmVyc2l0eSBhbmQgaXMgd29ya2luZyBvbiBhIG1hc3RlciBkZWdyZWUgaW4gcHVibGljYXRpb25zIGRlc2lnbiBhdCBVbml2ZXJzaXR5IG9mIEJhbHRpbW9yZS4KTCd0IG4nYSBwYXMgdG91am91cnMgdCB0cnMgdHJhbnF1aWxsZSBkYW5zIG5vdHJlIHF1YXJ0aWVyLCBuaSBkYW5zIGNlbHVpIGRlIGxhIHBsYWNlIGRlIGxhIENoYXBlbGxlLiBOb3VzIGF0dGVuZGlvbnMgbGEgcm91dmVydHVyZSBkZSBsYSBzdGF0aW9uIENodGVhdSByb3VnZSBhdmVjIHVuZSBjZXJ0YWluZSBpbXBhdGllbmNlIGVuIGVzcHJhbnQgcXVlIGxlcyBvY2N1cGF0aW9ucyBkdSBib3VsZXZhcmQgQmFyYnMgdmVycyBsYSBzdGF0aW9uIGRlIG10cm8gc2UgcmR1aXJhaWVudC4gUXVlIG5lbm5pLiBMZSBub21icmUgZGUgdmVuZGV1cnMgc2F1dmV0dGUgbidhIHBhcyBmYWlibGksIGwgY29tbWUgIENodGVhdSByb3VnZS4gTGEgdmlzaXRlIGRlIGxhIG1haXJlIGRlIFBhcmlzIGxlIDYgc2VwdGVtYnJlIGRlcm5pZXIgbGFpc3NlIHBldSBkJ2VzcG9pciBzdXIgdW4gY2hhbmdlbWVudCBlbiBwcm9mb25kZXVyLiBFbGxlIGEgYW5ub25jIHVuZSBjb25jZXJ0YXRpb24sIHVuZSBkZSBwbHVzIGNhciBpbCB5IGVuIGEgZGogZXUgIGxhIG1haXJpZSBkdSAxOGUgZXQgY2Ugc2VjdGV1ciBmYWl0IGF1c3NpIHBhcnRpZSBkZSBsJ29wcmF0aW9uICJCYXJicyByZXNwaXJlIiBpbml0aWUgZGVwdWlzIGphbnZpZXIuIEFsb3JzIGp1c3RlbWVudCwgbyBlbiBlc3Qgb24gZGUgY2UgY3QgbD8KR29kc3BlZWQsIG15IGZyaWVuZC4gR29vZCBsdWNrIHRvIGFsbCBvZiB5b3UuCkFuZCBoZXIgQ2hpbGQgd2FzIGNhdWdodCB1cCB0byBHb2QgYW5kIEhpcyB0aHJvbmUuIApJIGFsc28gbm90aWNlZCB0aGF0IEkgZ2V0IGx1Y2tpZXIgaW4gZGlzdGFudCBzaG9wcyBpbiBub3Qgc28gcG9wdWxhdGVkIGNpdGllcy4gVGhlIGxlc3MgcG9wdWxhdGVkIHRoZSBjaXR5LCB0aGUgaGlnaGVyIHRoZSBjaGFuY2VzIEkgc2VlIHBvcHVsYXIgbW9kZWxzLiBNeSBoeXBvdGhlc2lzIGlzIHRoYXQgaXQncyBkdWUgdG8gbGFjayBvZiBjb21wZXRpdGlvbiB3aXRoIG90aGVyIGNvbGxlY3RvcnMuIApbZGVsZXRlZF0gIDE5MSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpFZHVjYXRpb24gaXMgc29tZXRoaW5nIG5vIHNhbmUgcGVyc29uIHNob3VsZCBldmVyIHRydXN0IHRvIHRoZSBnb3Zlcm5tZW50LiBFdmVuIGlmIHlvdSBjb3VsZCB0cnVzdCBpdCBpbiBwcmluY2lwbGUsIHdoYXQgaGFwcGVucyB3aGVuIGEgRG9uYWxkIFRydW1wIHdpbnMgZWxlY3Rpb24gYW5kIGlzIHB1dCBpbiBjaGFyZ2Ugb2YgdGhpcyBzaGl0PyBUaGlzIHNvcnQgb2YgdGhpbmcgaGFwcGVucyBhbGwgdXAgYW5kIGRvd24gdGhlIHBvbGl0aWNhbCBzY2FsZSBmcm9tIHRoZSBXaGl0ZSBIb3VzZSBkb3duIHRvIGNvdW50eSBhbmQgc2Nob29sIGJvYXJkIGxldmVsLi4gCkl0IHByZWRpY3RhYmxlIHRoYXQgQ3VydGlzIHdpbGwgdHVybiBvdXQgdG8gYmUgbGVzcyB0aGUgYm9uIHZpdmFudCB0aGFuIGhlIHNlZW1zLiBPbmUgb2YgaGlzIHR3byBncmVhdCBzYWRuZXNzZXMgaXMgU2ltb25lIChTaWVubmEgTWlsbGVyKSwgYSBob29rZXIgaW4gU3QuIExvdWlzIHdobyBicmVha3MgaGlzIGhlYXJ0IGp1c3Qgb25lIG1vcmUgdGltZSBpbiBhIHNtYXJ0bHkgd3JpdHRlbiBzY2VuZSB0aGF0IGluaXRpYWxseSBtYWtlcyBpdCBzZWVtIGxpa2Ugc2hlIGFjdHVhbGx5IGdvaW5nIHRvIGZhbGwgZm9yIGhpcyBzcGllbC4uIApUaGlzIGlzIHBhcnRpY3VsYXJseSBpbXBvcnRhbnQgdG8gbWUgYmVjYXVzZSB0aGUgbW9zdCBwb3B1bGFyIG1vdXRocGllY2Ugb24gdGhlIGxlZnQgaXMgYmVpbmcgY29udHJvbGxlZCBieSBhIENoaWVmIG9mIFN0YWZmIHdobyBjZWxlYnJhdGVzIEJvc2UuLiAKTXkgYm95ZnJpZW5kIChJJ20gYSBndXkgdG9vIGZvciByZWZlcmVuY2UpIHdhdGNoZXMgbW9yZSBwb3JuIHRoYW4gbWUgYW5kIEkgc3RpbGwgc3RydWdnbGUgd2l0aCBiZWluZyBqZWFsb3VzIGFuZCBzYWQgYWJvdXQgaXQgc29tZXRpbWVzIGJ1dCB3ZSBjb21tdW5pY2F0ZSByZWFsbHkgd2VsbCBhbmQgaGUgZXhwbGFpbmVkIGl0IHByZXR0eSBtdWNoIGV4YWN0bHkgaG93IHlvdSBkaWQgYW5kIEknbSB3b3JraW5nIG9uIGl0LiAKSG93ZXZlciwgdGhhdCBkb2VzbiBuZWNlc3NhcmlseSBleHRlbmQgdG8gdGhlIGRyaW5rcyBhdCB0aGUgYmFyLCB0aGUgb2JqZWN0aXZlIGlzIHRvIG1ha2UgZ3Vlc3RzIGZlZWwgY29tZm9ydGFibGUsIGV2ZW4gYXMgdGhleSBwdXNoIGxpbWl0cyBhdCB0aGUgcG9rZXIgdGFibGUuCkJsdWVub3NlcmFicm9hZCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwood2hpY2ggdGhleSBkaWQgdG8gYW4gZXh0ZW5kKSBTbyBjb21wYXJpbmcgaXQgdG8gdGhlICJmaW5hbCB2ZXJzaW9uIiBvZiBLSDIgbWFrZXMgbW9yZSBzZW5zZSBpbiBteSBvcGluaW9uLiBUaGVyZSBzaG91bGQgbm90IGJlIG11Y2ggbGVmdCB0byBhZGQgdG8gYSBmdWxsIHByaWNlZCBnYW1lLkkgYWxzbyBkaXNhZ3JlZSB0aGF0IGl0IGFsd2F5cyBvbmx5IG5vc3RhbGdpYSBiZWNhdXNlIG1hbnkgZmFucyBoYXZlIHJlcGxheWVkIHRoZSBIRCB2ZXJzaW9ucyByZWNlbnRseSAobXlzZWxmIGluY2x1ZGVkKSBhbmQgc3RpbGwgaGFkIGEgYmxhc3Qgd2hpY2ggaXMgbm90IGV4Y2x1c2l2ZWx5IGJlY2F1c2UgdGhleSBwbGF5ZWQgdGhlIEZNLiAKRm9yIGluc3RhbmNlLCB3aGVuIGEgbXVzY2xlcyBhbmQgam9pbnRzIGFyZW4ndCBtb3ZpbmcgcHJvcGVybHkgb3IgYmVjb21lICJ0aWdodCBvciBzdHVjayIgdGhlIGJvZHkgd2lsbCBhdHRlbXB0IHRvIGJhbGFuY2UgaXRzZWxmLCBhbmQgbWF5IGdyYWR1YWxseSBhZGFwdCBzbyB0aGF0IG9uZSBvciBtb3JlIGR5c2Z1bmN0aW9ucyBkZXZlbG9wIHRvIGNvbXBlbnNhdGUuIEFuZCB0byBtYWtlIG1hdHRlcnMgd29yc2Ugb3RoZXIgYXJlYXMgb2YgdGhlIGJvZHkgYmVjb21lIHdlYWtlbmVkLgpXZWxsLCB3ZSBjb250aW51ZWQgZG9pbmcgdGhlIHNhbWUgdGhpbmcgdG8gaGVyLiAKSW4gdGVybXMgb2YgYWR2YW5jaW5nIHRoaXMgbmV3IHRlY2hub2xvZ3kgY2F0ZWdvcnkgb2YgZW1vdGlvbiBBSSwgaXQgd2FzIGNyaXRpY2FsIHRoYXQgd2UgYnVpbGQgdGhlIGVjb3N5c3RlbSBvZiBzdXBwb3J0ZXJzIGFyb3VuZCBvdXJzZWx2ZXMuIFRoZXkgd2VyZSBvdXIgY2xpZW50cywgb3VyIGJ1c2luZXNzIHBhcnRuZXJzLCBhbmQgYWxzbyBpbmR1c3RyeSBhbmFseXN0cy4uIApMaXN0IE1hcApCcmlnZ3MgdGFsa2VkIEJlcnRoaWEgaW50byBnaXZpbmcgdGhlIHdvcmxkIG9uZSBtb3JlIGNoYW5jZS4gCk9uY2UgeW91IGZpZ3VyZSBvdXQgdGhlIGJvc3MgZmlnaHQgKHBhcnRpY3VsYXJseSBibG9ja2luZyBzaG90cyB3aXRoIHRoZSBzY2VuZXJ5KSwgSSB0aGluayB0aGlzIGlzIG9uZSBvZiB0aGUgZWFzaWVyIGZpZ2h0cyB0byBjb21wbGV0ZSB3aXRoIDAgZGFtYWdlLiBXaGVuIHNoZSBncm91bmRlZCwgSSByZWNvbW1lbmQganVtcGluZyByYXRoZXIgdGhhbiByb2xsaW5nLiBHZXQgdG8gbWVkaXVtIHJhbmdlIHRvIHRyaWdnZXIgaGVyIHNuaXBlciBhaW0gdGhlbiBkbyBhIGp1bXAgaW4gYXR0YWNrIG92ZXIgdGhlIGxhc2VyIGFpbSBhbmQgZ2V0IGluIDEgMiBmb2xsb3cgdXAgYXR0YWNrcyBiZWZvcmUgeW91IG1vdmUgb3V0IG9mIHJhbmdlIGFuZCByZXBlYXQuIApNZXJjZWRlcyBkaWQgbG92ZSBoaW0sIGJ1dCBzaGUgbG92ZWQgaGltIGFzICJFZG1vbmQgRGFudGVzIiBhIG1hbiB3aG8gaXMgbm8gbG9uZ2VyLCBhbmQgSGFpZGVlIGxvdmVzIGhpbSBhcyB3aG8gaGUgaXMgbm93IGF0IHRoZSBwcmVzZW50LCAiVGhlIENvdW50IG9mIE1vbnRlIENyaXN0byIuIEF0IHRoZSBlbmQgb2YgdGhlIGJvb2ssIEVkbW9uZCBEYW50ZXMgdGVsbHMgaGVyIHRoYXQgc2hlIHNob3VsZCBsZWF2ZSwgYXMgaGUgaXMganVzdCBhIGJyb2tlbiBtYW4gd2hvIGNhbid0IGRvIGFueXRoaW5nIGZvciBoZXIuIApTd2l0Y2ggYnJhbmRzISBBYm91dCBhYm91dCB0aHJlZS9mb3VyIG1vbnRocywgc3dpdGNoIHdoYXQgYnJhbmQgeW91IHVzaW5nLiBZb3VyIHN0b21hY2ggYWRqdXN0cyB0byB0aGUgbWljcm9vcmdhbmlzbXMgYW5kIHRoZWlyIGVmZmVjdGl2ZW5lc3MgZGltaW5pc2hlcyBvdmVyIHRpbWUuIApJZiB5b3VyIGhhaXIgZ3Jvd3MgdmVyeSBzbG93bHksIGhvd2V2ZXIsIGl0IG1heSBiZSBtb3JlIGVjb25vbWljYWwgZm9yIHlvdSB0byB0cmltIHRoZSBzaWRlYnVybnMgeW91cnNlbGYgaW5zdGVhZCBvZiB2aXNpdGluZyB0aGUgYmFyYmVyc2hvcCBqdXN0IHRvIGdldCB5b3VyIHNpZGVidXJucyB0cmltbWVkICAgZXZlbiB3aGVuIHRoZSByZXN0IG9mIHlvdXIgaGFpciBpcyBzaG9ydC4gRm9yIHRyaW1taW5nIHlvdXIgc2lkZWJ1cm5zIGF0IGhvbWUsIHRyeSBzaWRlYnVybiB0cmltbWVycyBzdWNoIGFzIHRoZSBSZW1pbmd0b24gUHJlY2lzaW9uIERlbHV4ZS4uIApJIGhhdmUgdHdvIHdvb2RlbiBtaWNlLiBUaGV5IHJvYW0gb3ZlciBteSBoYXRzIGFuZCBjbG90aGVzLCBjaG9vc2luZyB3aGVyZSB0byBzaXQgcmFuZG9tbHkgZGVwZW5kaW5nIG9uIHRoZWlyIG1vb2QuIEdlbmVyYWxseSB0aGV5IHJpZGUgbXkgaGF0cywgYWx0aG91Z2ggd2Fpc3Rjb2F0cywgY29sbGFycywgY3VmZnMgYW5kIHNob3VsZGVycyBhcmUgb3RoZXIgcGxhY2VzIHRoZXkgbGlrZSB0byByaWRlLiBTb21ldGltZXMgdGhleSBldmVuIHJlZnVzZSB0byBjb21lIG91dCB3aXRoIG1lICh3aGVuIGl0IGlzIGNvbGQpIGFuZCBzdGF5IGluLCBvbiBteSBiZWRzaWRlIHRhYmxlLgpUaGVzZSA0IHBvdW5kIG1hY2hpbmVzIGNvbWUgdXAgd2l0aCBndWFyYW50ZWUgZm9yIGEgY2VydGFpbiB0aW1lLiAKTUpGRiB3YXMgdmVyeSBoZWxwZnVsIHdpdGggdGhlaXIgc3VwcG9ydCFUaGUgb3RoZXIgZGF5IEkgd2FzIHBhaWQgc29tZSBtb25leSB0byB3YXRjaCBhbmQgcmF0ZSBhIHBpbG90IGZvciBhIHBvdGVudGlhbCBuZXcgc2l0Y29tIHRpdGxlZCAiVGhlIEhlbnJ5IHN0YXJyaW5nIE1pY2hhZWwgSiBGb3guIApJbiAyMDEzIHRoZSBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgY2FsbGVkIEMuIApEZXIgSGF1cHRncnVuZCBmciBkYXMgU3BpZWxlbiBpbSBDYXNpbm8gaXN0IHNpY2hlcjogRXMgZ2lidCBpbW1lciBlaW4gU3BpZWwgdW5kIG1hbiBrYW5uIG5vcm1hbGVyIHdlaXNlIHp3aXNjaGVuIHZlcnNjaGllZGVuZW4gUGFydGllbiB3aGxlbi4gSW4gZGVuIGdyb2VuIEthcnRlbmNsdWJzIGluIGdyZXJlbiBTdGR0ZW4gbHVmdCBkYXMgZ2FuemUgMjQgU3R1bmRlbiBhbSBUYWcgdW5kIGRhcyBkaWUgZ2FuemUgV29jaGUuIERhIGRpZSBDbHVicyBkZWZpbmllcnRlIFJlZ2VsbiBiaWV0ZW4sIHByb2Zlc3Npb25lbGxlcyBQZXJzb25hbCBhbiBkZW4gVGlzY2hlbiB1bmQgYmVpIGRlciBBdWZzaWNodCBoYWJlbiwgaXN0IGVzIGF1Y2ggc2ljaGVyZXIuIGR1cmNoIFZpZGVvYmVyd2FjaHVuZyBrYW5uIGJlaSBTdHJlaXRmbGxlbiBmciBlaW5kZXV0aWdlIFNjaGxpY2h0dW5nIGdlc29yZ3Qgd2VyZGVuLgpUaGUgY29tbW9uIHBlcnNvbiBkb2VzIGF0IHRoZSBpbmRpdmlkdWFsIGxldmVsLiAKU3BlYWtpbmcgb2YgZnJlZSB0aW1lLCB3ZSBrbm93IHlvdSdyZSBidXN5LCBzbyB3ZSdsbCBnZXQgcmlnaHQgdG8gYSBsaXN0IG9mIG11c3Qgbm90IG1pc3MgaGlnaGxpZ2h0cyBmb3IgdGhpcyB3ZWVrOllvdSByZW1lbWJlciBib2JzdGFmZm9yZCdzIHBob3RvIG9mIGEgY290dGFnZSByZWZsZWN0ZWQgaW4gd2F0ZXI/IENhaW1hbnJhcHRvcmVsayByZXZlYWxzIHRoZSBzdHVubmluZyBzdG9yeSBiZWhpbmQgdGhlIHBob3RvLiBXZSBhcmUgc28gZ2xhZCB0byBrbm93IHRoZXNlIHBob3RvZ3JhcGhlcnMgYW5kIHBob3Rvc2hvcCBhcnRpc3RzLiAKSXQgdW5lZGl0ZWQgYW5kIHZlcnkgcmVhbC4gSG93ZXZlciwgaXQgbm90IHRoZSBQYXJraW5zb24gdGhhdCBpcyBiZWluZyB0cmVhdGVkIGhlcmUsIGJ1dCB0aGUgaHlwZXJraW5lc2lhIGFzc29jaWF0ZWQgd2l0aCBQYXJraW5zb24gbWVkaWNhdGlvbi4gCldpdGggUmV2LiAKRGllc2VsIGhhcyBhIHNoaXQgdG9uIG9mIGJlbnplbmUuIApBbmQgdGhlcmUgaXMgYSBncm93aW5nIGNvbnNlbnN1cyB0aGF0IENhbmFkYSBmYWNlcyBhIGNyaXRpY2FsIGdhcCBpbiBpdHMgYnVzaW5lc3MgZ3Jvd3RoIHN0cmF0ZWd5LiBCdXNpbmVzc2VzIHNpbXBseSBhcmUgbm90IHVwIGludG8gbGFyZ2UsIHdvcmxkIGxlYWRpbmcgb3JnYW5pemF0aW9ucy4gCkkgZG9uIGtub3cgaG93IG1hbnkgdGltZXMgSSBiZWVuIHNjYXJlZCBmb3IgbXkgbGlmZSBvbiB0aGUgd2FsayBob21lIGF0IG5pZ2h0LiBTdXJlLCBJIGNhbiB0aGVvcmV0aWNhbGx5IGdldCBhIHRheGkgb3Igd2hhdGV2ZXIsIGJ1dCBJIGRvbiBoYXZlIHRoZSBtb25leSBmb3IgaXQgYW5kIGxpdmluZyBhIG5vcm1hbCBsaWZlIGFzIGFuIGFkdWx0IG1lYW5zIGNvbWluZyB0byBob21lIGxhdGUgc29tZXRpbWVzLiBJdCBpcyBzbyBmcnVzdHJhdGluZyBob3cgbWVuIGNhbiBiZSBvYmxpdmlvdXMgdG8gdGhlIGZlYXIgd2UgZ28gdGhyb3VnaCBldmVyeSBkYXkuIApBdCB0aGUgdGltZSBLd2FuIHNvbGQgdGhlIHJpZ2h0cyB0byBDcmF6eSBSaWNoIEFzaWFucywgaGUgd2FzIGFscmVhZHkgdGFza2VkIHdpdGggd3JpdGluZyBpdHMgc2VxdWVsLCBDaGluYSBSaWNoIEdpcmxmcmllbmQuCldlcmUgY29uY2VybmVkIGFib3V0IHRoZSBjb3ZlcmFnZSBhbmQgdGhlIG1lZGlhIHNvIHRoZXkgY3JlYXRlZCBhIG1lZGlhIHJlbGF0aW9ucyBvZmZpY2VyIGFuZCB0aGVuIGdhdmUgaGltIG5vdGhpbmcgdG8gZGlzdHJpYnV0ZS4gCkJ1dCByZWNlbnRseSBJIGhhdmUgYmVlbiBzZWVpbmcgdGhpcyAocG9zc2libHkpIHJldGFyZGVkIGdlbnRsZW1hbiwgd2hvIEkgYW0gbm90IHN1cmUgd2hldGhlciB0byBwaXR5IG9yIGFkbWlyZS4gSGUgaXMgYWJvdXQgMzUsIGFuZCB3aGlsZSBldmVyeW9uZSBpcyBxdWV1aW5nIHVwLCBoZSBpcyBzdHJhaWdodCBZRUxMSU5HIGludG8gYSBmbGlwIHBob25lLiAKSXQgYmVlbiBuZWFybHkgZWlnaHQgZGVjYWRlcyBzaW5jZSBKb2huIENoYWJvcmVrIHNlcnZlZCBhcyBhIGxlYWRpbmcgc2VhbWFuIG9uIHRoZSBSb3lhbCBDYW5hZGlhbiBOYXZ5IGRlc3Ryb3llciBITUNTIEhhbWlsdG9uLCB5ZXQgaGUgc3RpbGwgcmVtZW1iZXJzIHRoZSBmbGFtZXMuCkZvcm1lciBXb3JsZCAxIERhbmllbCBOZWdyZWFudSAoR1BJMykgaGFzIGVuam95ZWQgeWV0IGFub3RoZXIgdmVyeSBzdWNjZXNzZnVsIHNlYXNvbiBvbiB0aGUgbGl2ZSB0b3VybmFtZW50IGNpcmN1aXQuIEtpZCBQb2tlciBlYW5yZWQgYSB0b3RhbCBvZiBuaW5lIHNjb3JlcyB0aGlzIHN1bW1lciBhdCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGluY2x1ZGluZyBhIHJ1bm5lciB1cCBmaW5pc2ggaW4gdGhlIEJpZyBPbmUgZm9yIE9uZSBEcm9wLCBhZGRpbmcgYW5vdGhlciAkOC4yTSB0byBoaXMgYWxyZWFkeSBpbXByZXNzaXZlIGNhcmVlciB0b3RhbHMuIE5lZ3JlYW51IGhlYWRzIHRvIEF1c3RybGlhIG5leHQgdG8gZGVmZW5kIGhpcyBNYWluIEV2ZW50IHRpdGxlIGF0IFdTT1AgQXNpYSBQYWNpZmljLiBIaXMgMjAxNCBzZWFzb24gc3RhcnRlZCB3aXRoICQ0OTJLIGFuZCAkMS4xTSBzY29yZXMgaW4gaGlnaCByb2xsZXIgZXZlbnRzIGF0IHRoZSBBdXNzaWUgTWlsbGlvbnMgaW4gTWVsYm91cm5lLgpXZSBzdHVkeSBhIHNpbXBsaWZpZWQgdmVyc2lvbiBvZiBmdWxsIHN0cmVldCwgdGhyZWUgcGxheWVyIEt1aG4gcG9rZXIsIGluIHdoaWNoIHRoZSB3ZWFrZXN0IGNhcmQsIEosIG11c3QgYmUgY2hlY2tlZCBhbmQvb3IgZm9sZGVkIGJ5IGEgcGxheWVyIHdobyBob2xkcyBpdC4gVGhlIG51bWJlciBvZiBub250cml2aWFsIGJldHRpbmcgZnJlcXVlbmNpZXMgdGhhdCBtdXN0IGJlIGNhbGN1bGF0ZWQgaXMgdGhlcmVieSByZWR1Y2VkIGZyb20gMjMgdG8gMTEsIGFuZCBhbGwgZXF1aWxpYnJpdW0gc29sdXRpb25zIGNhbiBiZSBmb3VuZCBhbmFseXRpY2FsbHkuIEluIHBhcnRpY3VsYXIsIHRoZXJlIGFyZSB0aHJlZSByYW5nZXMgb2YgdmFsdWVzIG9mIHRoZSBwb3Qgc2l6ZSwgUCwgZm9yIHdoaWNoIHRoZXJlIGFyZSB0aHJlZSBkaXN0aW5jdCwgY29leGlzdGluZyBlcXVpbGlicml1bSBzb2x1dGlvbnMuIFdlIGFsc28gc3R1ZHkgYW4gb3JkaW5hcnkgZGlmZmVyZW50aWFsIGVxdWF0aW9uIG1vZGVsIG9mIHJlcGVhdGVkIHBsYXkgb2YgdGhlIGdhbWUsIHdoaWNoIHdlIGV4cGVjdCB0byBiZSBhdCBsZWFzdCBxdWFsaXRhdGl2ZWx5IGFjY3VyYXRlIHdoZW4gYWxsIHBsYXllcnMgYm90aCBhZGp1c3QgdGhlaXIgYmV0dGluZyBmcmVxdWVuY2llcyBzdWZmaWNpZW50bHkgc2xvd2x5IGFuZCBoYXZlIHN1ZmZpY2llbnRseSBzaG9ydCBtZW1vcmllcy4gV2UgZmluZCB0aGF0IG5vbmUgb2YgdGhlIGVxdWlsaWJyaXVtIHNvbHV0aW9ucyBvZiB0aGUgZ2FtZSBpcyBhc3ltcHRvdGljYWxseSBzdGFibGUgYXMgYSBzb2x1dGlvbiBvZiB0aGUgb3JkaW5hcnkgZGlmZmVyZW50aWFsIGVxdWF0aW9ucy4gRGVwZW5kaW5nIG9uIHRoZSBwb3Qgc2l6ZSwgdGhlIHNvbHV0aW9uIG1heSBiZSBwZXJpb2RpYywgY2xvc2UgdG8gcGVyaW9kaWMgb3IgaGF2ZSBsb25nIGNoYW90aWMgdHJhbnNpZW50cy4gSW4gZWFjaCBjYXNlLCB0aGUgcmF0ZXMgYXQgd2hpY2ggdGhlIHBsYXllcnMgYWNjdW11bGF0ZSBwcm9maXQgY2xvc2VseSBtYXRjaCB0aG9zZSBhc3NvY2lhdGVkIHdpdGggb25lIG9mIHRoZSBlcXVpbGlicml1bSBzb2x1dGlvbnMgb2YgdGhlIGdhbWUuClRlYW0gYXQgRmFjZWJvb2sgd2lsbCB1c2UgZ3VpZGVsaW5lcyBiYXNlZCBvbiB0aGUgbW9zdCB3aWRlbHkgZGVidW5rZWQgdmFjY2luZSBob2F4ZXMgcHVibGlzaGVkIGJ5IGhlYWx0aCBleHBlcnRzLCBpdCBzYWlkLiBmcm9tIHZpb2xhdGluZyBncm91cHMgYW5kIHBhZ2VzIGNvbnRhaW5pbmcgdGhlc2UgaG9heGVzIHdpbGwgYXBwZWFyIGxvd2VyIGluIE5ld3MgRmVlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGZyb20gc2VhcmNoIHJlc3VsdHMgYW5kIGdyb3VwIHJlY29tbWVuZGF0aW9ucy4gYW50aSB2YXh4ZXJzIGhhdmUgdXNlZCBzb2NpYWwgbWVkaWEgdG8gc3ByZWFkIG1pc2luZm9ybWF0aW9uIGFib3V0IHRoZSBoaWdobHkgY29udGFnaW91cyBkaXNlYXNlLCBzb21lIG1haW50YWluaW5nIHRoZSBtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSBvciBNTVIgdmFjY2luZSBjYXVzZXMgYXV0aXNtIGRlc3BpdGUgdGhhdCBiZWxpZWYgYmVpbmcgcmVwZWF0ZWRseSBkZWJ1bmtlZCB0aHJvdWdoIHNjaWVudGlmaWMgcmVzZWFyY2guCkkgZ29ubmEgaGF2ZSB0byBhZ3JlZSB3aXRoIHRoZSBpZGVhIG9mIHBsYW5uaW5nIHNwZWVkaW5nIHlvdSB1cCBtb3JlIHRoYW4gYW55dGhpbmcgZWxzZS4gR2V0IGluIHRoZSBoYWJpdCBvZiBhbHdheXMgdGhpbmtpbmcgc2V2ZXJhbCBzdGVwcyBhaGVhZCBhbmQgeW91IGdvIGZhci4gWWVzLCBoYXZpbmcgc2tpbGxzIGRpYWxlZCBpbiB3aWxsIG1ha2UgaXQgc28gdGhhdCB5b3UgZG9uIGhhdmUgdG8gdGhpbmsgc28gbXVjaCBhYm91dCB3aGF0IHlvdSBkb2luZywgYnV0IHdpdGggdGhhdCBleHRyYSBicmFpbiBzcGFjZSB5b3Ugc2hvdWxkIGJlIHBsYW5uaW5nLiAKQW5pbWFsIHJpZ2h0cyBncm91cCBQRVRBIGV2ZW4gc2VudCBhIGxldHRlciB0byBNaWFtaSBEYWRlIENvdW50eSBTdGF0ZSBBdHRvcm5leSBLYXRoZXJpbmUgRmVybmFuZGV6IFJ1bmRsZSwgYXNraW5nIGhlciBvZmZpY2UgdG8gcHJvc2VjdXRlIHRoZSBjYXNlIHNvIGhlIHdvdWxkIHJlY2VpdmUgamFpbCB0aW1lIGFuZCByZWNlaXZlIHBzeWNoaWF0cmljIGNhcmUuCkhhdmUgYSB0aGljayBwaWxsb3cgZm9yIGp1c3QgYWJvdmUgeW91ciBzaG91bGRlciBmb3IgeW91IGhlYWQgc28geW91ciBzaG91bGRlciBpc24gYWN0dWFsbHkgc3VwcG9ydGluZyB0aGUgcGlsbG93IGFuZCBoZWFkIGl0IGJlbG93IGl0LiAKT24gdGhlIG90aGVyIGhhbmQsIGFuYWwgc2V4IGNhbiBiZSBvbmUgb2YgdGhlIG1vc3QgZXJvdGljIGFuZCBzYXRpc2Z5aW5nIHNleHVhbCBwcmFjdGljZXMgYSB3b21hbiBjYW4gZW5qb3kuIEl0IGEgZGlmZmVyZW50LCB0aWdodGVyIHNlbnNhdGlvbiB0aGFuIHZhZ2luYWwgc2V4LCBhbmQsIGlmIHRoZSBjbGl0b3JpcyBhbmQvb3IgdmFnaW5hIGFyZSBzdGltdWxhdGVkIHdoaWxlIHlvdSBpbnNpZGUgaGVyLCBpdCBjYW4gdGFrZSBoZXIgdG8gYW5vdGhlciBzZXh1YWwgcmVhbG0uLiAKR2VuZXJhbGx5LCBhIHF1YXJ0ZXIgdmlkZW8gcG9rZXIgZ2FtZSB3aWxsIHJlcXVpcmUgNSBxdWFydGVycyBwZXIgaGFuZCBhbmQgYm90aCBzbG90cyBhbmQgdmlkZW8gcG9rZXIgZ2FtZXMgY2FuIHVzdWFsbHkgYmUgcGxheWVkIGF0IGEgcmF0ZSBvZiBhYm91dCA0MDAgc3BpbnMgb3IgaGFuZHMgcGVyIGhvdXIuIApUaGUgZmlyc3QgaW5zdGFsbWVudCB3YXNuJ3QgZXZlcnlvbmUncyBjdXAgb2YgdGVhLCBidXQgSSB0aG91Z2h0IGl0IHdhcyBhIGNsYXNzaWMgcGllY2Ugb2YgY2luZW1hIHdpdGggaXRzIGNsZXZlciBjb2xvdXIgc2NoZW1lIGFuZCBvbGQgSG9sbHl3b29kIGNoYXJhY3RlcnMuSXQgbW92ZWQgYXQgYSBwYWNlIHdpdGggc3RvcmllcyBpbnRlcndlYXZpbmcgYW5kIGF1ZGllbmNlcyBzY3JhbWJsaW5nIHRvIGZpbmQgb3V0IG1vcmUgYWJvdXQgdGhlIGNoYXJhY3RlcnMgb2YgdGhlIGNyaW1lIHJpZGRsZWQgQmFzaW4gQ2l0eS5UaGUgZmlyc3QgZmlsbSB3YXMgYSBndWVzc2luZyBnYW1lLCBjaGFyYWN0ZXJzIHJldmVhbGVkIGxpdHRsZSBhbmQgdGhlaXIgcGFzdCBsaXZlcyB3ZXJlIGEgbXlzdGVyeS4gCkhpZXIgZ2VuaWVlbiBHc3RlIGVpbiB0cmFkaXRpb25lbGxlcyB0cmtpc2NoZXMgTWl0dGFnZXNzZW4gaW4gZGVyIEJyYXNzZXJpZSBDZW5nZWxoYW4gS28sIGRhcyBlYmVuZmFsbHMgaW0gUHJlaXMgZW50aGFsdGVuIGlzdC4gRWluIGFiZW5kbGljaGVzIE1lbiBpbSBSZXN0YXVyYW50IFBsdXMiIGlua2x1c2l2ZSBlaW5lciBGbGFzY2hlIFdlaW4gc293aWUgZnJlaWVzIFdMQU4sIGVpbmUgZWluc3RuZGlnZSBrbGFzc2lzY2hlIHRya2lzY2hlIE1hc3NhZ2UgdW5kIGtvc3RlbmZyZWllcyBQYXJrZW4gZ2VocmVuIGRhcmJlciBoaW5hdXMgenUgZGVuIExlaXN0dW5nZW4uLiAKT2ggYWxzbywgd2UgaGVhcmQgcGxheWVyIGZlZWRiYWNrIGFuZCBNSUdIVCBjb25zaWRlciBnaXZpbmcgZ2xhY2lhbCBoYW1tZXIgNiUgbW9yZSBkYW1hZ2UgaW4gdGhlIG5leHQgNSB5ZWFycyBvciBzbyBpZiB0aGUgc3VuIHJpc2VzIGluIHRoZSB3ZXN0LiAKVGhleSBoYXZlIHJlbmFtZWQgdGhlaXIgYnVzaW5lc3MgQmlnIFRleGFzIEdhbWUgQ2x1YiBhbmQgaGF2ZSBhZGRlZCBhIHBvb2wgdGFibGUsIGFuIGFpciBob2NrZXkgdGFibGUgYW5kIG90aGVyIGdhbWVzLiAKWW91ciB0cnlpbmcgdG8gcmVmdXRlIGFuIGFyZ3VtZW50IHdpdGggYSBjb21wYXJpc29uLCB3aGVuIHRoZXJlIGlzIGZhY3R1YWwgZXZpZGVuY2UgdGhhdCBjYW4gYmUgcmVmdXRlZC4gCldoYXQgaXMgYmVpbmcgZG9uZSB0byBwcmV2ZW50IGEgc2luZ2xlIHBlcnNvbiBzdWJtaXR0aW5nIG1vcmUgdGhhbiBvbmUgcmVzcG9uc2U/CllvdSBtYXkgdXNlIHZhcmlvdXMgc3Rha2Ugc3RyYXRlZ2llcyBldmVuIG1hcnRpbmdhbGUuIApZb3Ugc2hvdWxkbid0IGhhdmUgdG8gY29udmluY2UgaGltIHRvIHRyZWF0IHlvdSByaWdodCwgaXQgc2hvdWxkIGNvbWUgbmF0dXJhbGx5IHRvIGhpbS4KMjUgUGlhenpvbGxhIFRhbmdvcyBmb3IgVHJ1bXBldCBhbmQgUGlhbm8gcGRmIGVuIGVwdWIgZnJlZSAyNSBQaWF6em9sbGEgVGFuZ29zIC4gTGUgbWRlY2luIG1hbGdyIGx1aSBpcyBhbiBvcHJhIGNvbWlxdWUgaW4gdGhyZWUgYWN0cyBieSBDaGFybGVzIEdvdW5vZCB0byBhIEZyZW5jaCAuIApOb3QgbGlrZSBhIGJhdGggd2hlcmUgeW91IGZsb2F0IGluIGl0LCBidXQgeW91IHN0YW5kIHRoZXJlIGluIGEgbmljZSB3YXJtIHJhaW4uIApUaGUgTW9udHJlYWwgU21va2VkIEJ1ZmZhbG8gYXJlIG9rYXkgYnV0IHRoZSBwZW9wbGUgaW4gUXVlYmVjIGNhbiBiZSBhIGxpdHRsZSBydWRlLiBUaGV5IHN0aWxsIHVwc2V0IGFib3V0IHRoZSB0aGUgc2VwYXJhdGlvbiByZWZlcmVuZHVtLCB3aGljaCB3YXMgYWN0dWFsbHkgc3RhcnRlZCBvdmVyIHJpZ2h0cyBmb3IgdGhlIHZlcnkgYW5jaWVudCAiRmx5aW5nIiBCdWZmYWxvLiAKVGhpcyBpcyB0aGVpciB3YXkgb2YgdGhhbmtzZ2l2aW5nIGZvciB0aGUgbHVjayBhbmQgdGhlIHNraWxsIGdpdmVuIHRvIHRoZW0uIApZb3UgbGVhcm4gd2hpY2ggb2YgeW91ciBvcHBvbmVudHMgbW92ZXMgYXJlIGdvb2QgYW5kIHdoaWNoIGFyZSBtaXN0YWtlcywgYW5kIGhvdyB0byByZXNwb25kIHRvIHRoZW0uIE9wZW5pbmcgdGhlb3J5IGtub3dsZWRnZSBqdXN0IGN1dHMgZG93biBvbiB0aGUgYW1vdW50IG9mIHRoaW5raW5nIHlvdSBuZWVkIHRvIGRvIGluIHlvdXIgYWN0dWFsIGdhbWVzIGJlY2F1c2UgeW91IGFscmVhZHkga25vdyB0aGUgbGlrZWx5IHNjZW5hcmlvcyBvZmYgdGhlIHRvcCBvZiB5b3VyIGhlYWQuIEl0IGRlY3JlYXNlcyB0aGUgb2RkcyB5b3Ugd2lsbCBibHVuZGVyIGVhcmx5OyBpbmNyZWFzZXMgdGhlIG9kZHMgb2YgeW91IGJlaW5nIGFibGUgdG8gZGVyaXZlIHNvbWUgYWR2YW50YWdlIG91dCBvZiB0aGUgcG9zaXRpb24gaWYgeW91ciBvcHBvbmVudCBkb2VzbiBrbm93IHRoZSB0aGVvcnkgYXMgd2VsbCBhcyB5b3UgZG87IGFuZCBsZXRzIHlvdSBzYXZlIHRpbWUgb24geW91ciBjbG9jayB0aGF0IHlvdSBjYW4gdXNlIGxhdGVyIGluIHRoZSBtaWQgYW5kIGVuZGdhbWUgYW5kIHB1dCB5b3VyIG9wcG9uZW50IHVuZGVyIHRpbWUgcHJlc3N1cmUuLiAKTm8gbWF0dGVyIHdobyB5b3Ugc2VhcmNoIHdpdGggdGhlIHJlc3VsdHMgYXJlIHNvbWVob3cgbGlua2VkIHRvIGdvb2dsZSBhbmQgaW5mbHVlbmNlZCBieSB0aGVpciByZXN1bHRzLiAKS3lsZSBSaWNoYXJkcyBCcmVha3MgRG93biBBbXN0ZXJkYW0gRmlnaHQgYW5kIERldmFzdGF0aW5nIFJldW5pb24KQW5kIGFuIGFjdHVhbCBhY3Rvci4gCkhlcmUncyB3aHkgZXZlcnkgY2l0eSBoYWxsIG5lZWRzIGEgZ29vZCBkZWNsdXR0ZXJpbmdFdmVyeSBzbWFsbCBidXNpbmVzcyBvd25lciBpbiB0aGlzIGNvdW50cnkgaGFzIGEgcmVkIHRhcGUgc3RvcnkuIFNvbWUgYXJlIHNob2NraW5nUmVkIHRhcGUgYW5kIHlvdXIgZ292ZXJubWVudDogSG93IGN1dHRpbmcgYnVyZWF1Y3JhY3kgYm9vc3RlZCBNYW5pdG9iYSdzIGdyb3d0aE90aGVyIHJlY2lwaWVudHMgb2YgdGhlIGF3YXJkIGFyZSBmb3JtZXIgUHJlc2lkZW50IG9mIHRoZSBUcmVhc3VyeSBCb2FyZCBTY290dCBCcmlzb24sIE5vdmEgU2NvdGlhIFByZW1pZXIgU3RlcGhlbiBNY05laWwgYW5kIEhhbGlmYXggTWF5b3IgTWlrZSBTYXZhZ2UsIHRoZSBDRklCIHNhaWQgVGh1cnNkYXkuIFdoaWxlIHRoZSBidXNpbmVzcyBhZHZvY2FjeSBncm91cCB0eXBpY2FsbHkgYW5udWFsbHkgYXdhcmRzIGEgc2luZ2xlIHdpbm5lciwgdGhpcyB5ZWFyIGl0IGJyb2tlIHdpdGggdHJhZGl0aW9uIHRvIG1hcmsgdGhlIDEwdGggYW5uaXZlcnNhcnkgb2YgUmVkIFRhcGUgQXdhcmVuZXNzIFdlZWssIGFuZCBzZWxlY3RlZCBhIHdpbm5lciBmcm9tIGVhY2ggbGV2ZWwgb2YgZ292ZXJubWVudC4KQXQgdGhlIGluaXRpYWwgbWVldGluZywgc3R1ZGVudHMgd2lsbCBiZSByZXF1aXJlZCB0byBjb21wbGV0ZSBhbiBpbnRha2UgZm9ybSBhbmQgcHJlc2VudCBjdXJyZW50IGRvY3VtZW50YXRpb24gb2YgdGhlaXIgZGlzYWJpbGl0eS5Db21tZW5jZW1lbnQgc3BlY2lmaWMgc3VjaCBhcyBwYXJraW5nIElEIGNhcmRzIGFuZCBpbnRlcnByZXRlcnMgY2FuIGJlIHJlcXVlc3RlZCB0aHJvdWdoIHRoZSBDZW50ZXIgZm9yIEFjY2Vzc2libGUgRWR1Y2F0aW9uLkRpc2FiaWxpdGllcyBhbmQgQ29tcHV0aW5nIFByb2dyYW1hc3Npc3RzIHN0dWRlbnRzLCBmYWN1bHR5IGFuZCBzdGFmZiB3aG8gaGF2ZSBkaXNhYmlsaXRpZXMgcmVnYXJkaW5nIGNvbXB1dGVycyBhbmQgYXNzaXN0aXZlIHRlY2hub2xvZ3kgc2VydmljZXMuTGlicmFyeSBTZXJ2aWNlcyBmb3IgVXNlcnMgd2l0aCBEaXNhYmlsaXRpZXMgcHJvdmlkZXMgYWNjZXNzaWJpbGl0eSBvZiBsaWJyYXJ5IG1hdGVyaWFscywgcHJvZ3JhbXMsIGFuZCBzZXJ2aWNlcyB0byBhbGwgdXNlcnMuIFN0YWZmIG1lbWJlcnMgd29ya2luZyBpbiBwdWJsaWMgc2VydmljZSBhcmVhcyBvZiB0aGUgY2FtcHVzIGxpYnJhcmllcyB3aWxsIG1ha2UgZXZlcnkgZWZmb3J0IHRvIGFjY29tbW9kYXRlIHJlcXVlc3RzIGZyb20gdXNlcnMgd2l0aCBkaXNhYmlsaXRpZXMuVUNMQSBSZWNyZWF0aW9uIHByb3ZpZGVzIGFkYXB0aXZlIHByb2dyYW1zIHN1Y2ggYXMga2F5YWtpbmcsIGN5Y2xpbmcsIHNhaWxpbmcsIGNvbXBldGl0aXZlIHdoZWVsY2hhaXIgc3BvcnRzIGFuZCBhY2NvbW1vZGF0aW9ucyBpbiBpbnN0cnVjdGlvbmFsIGNsYXNzZXMgYW5kIGluZGVwZW5kZW50IGV4ZXJjaXNlLi4gClRoZSBvbmx5IHRpbWUgd2hlbiB5b3UgY2FuIHN1Y2Nlc3NmdWxseSBibHVmZiBhbiBvcHBvbmVudCBpcyB3aGVuIHlvdSBjaGlwIGxlYWRlciBhbmQgdGhleSBjYWxsIGp1c3Qgc2h5IG9mIGFuIGFsbCBpbiwgd2l0aCBhIGZldyBjaGlwcyBrZXB0IGluIHJlc2VydmUuIFRoYXQgaG93IEkgZXZlbnR1YWxseSBiZWF0IEhlbnJ5IGFuZCBsZWZ0IHRoZSB0YWJsZSB3aXRoIGhpbSBoYXZpbmcgb25seSAkMC41MCBvZiBjaGlwcy4uIApCZXJnIG9wLCBkb29yIGVlbiBzb29ydCB2YW4gcGFyayBtZXQgbGFuZGh1aXMgaW4sIG92ZXIgZWVuIG11dXJ0amUga2xpbW1lbmQgKHRqYSwgZGl0IHRvZWdhbmdzcG9vcnRqZSB3YXMgbm9nIGFmZ2VzbG90ZW4pLCBlbiB2aWEgZWVuIGhlbGVib2VsIHN0ZWVnamVzIGVuIHRyYXBwZW4gd2VlciBuYWFyIGJlbmVkZW4uIApZIEkgbGlrZSB0aGUgaWRlYSBvZiB0aGUgVGVzc2VyYWN0IGJlaW5nIGludm9sdmVkIGFzIHRoZSBwb3RlbnRpYWwgdGhpbmcgdGhhdCBrZXB0IEZ1cnkgb24gdGhlIHNpZGUgb2YsICJXZWxsLCBsZXQgaG9sZCBvZmYgYW5kIHNlZSBpZiB0aGUgQXZlbmdlcnMgZmFpbCBvciBub3QuIElmIHRoZXkgZG8gdGhlbiBmaW5lLCBJIHBhZ2UgQ2Fyb2wsIGV2ZW4gdGhvdWdoIHNoZSBwcm9iYWJseSBub3QgZ29pbmcgdG8gYmUgaGFwcHkgdGhpcyBoYXBwZW5lZCBiZWNhdXNlIEkgd2FzIGV4cGVyaW1lbnRpbmcgb24gdGhlIGN1YmUuIiBJdCBmYWlybHkgcmVkdWN0aXZlL2Rldm9pZCBvZiBlbW90aW9uLCBidXQgSSB0aGluayBGdXJ5IGFzIERpcmVjdG9yIGhhcyBiZWNvbWUgc2xpZ2h0bHkgbW9yZSBqYWRlZCBpbiB0aGUgc2Vuc2UgdGhhdCBoZSB3aWxsaW5nIHRvIGdhbWJsZSBvbiB0aGUgbGl2ZXMgb2YgdGhlIEF2ZW5nZXJzIGluIHRoYXQgc3RyYXRlZ2ljIHNlbnNlLgpCQU5OT04sIFZlcm5hIFRoZSBHb29kIExvcmQgZGVjaWRlZCB0byB0YWtlIG91ciBwcmVjaW91cyBtb3RoZXIgVmVybmEgQmFubm9uIGluIGhlciA3NnRoIHllYXIgdG8gYSBiZXR0ZXIgcGxhY2Ugb24gTW9uZGF5LCBBcHJpbCAxNiwgMjAxOC4gCk90aGVyIFNvdXRoIENvYXN0IGFyZWFzIHdoaWNoIHdpbGwgbm90IGJlIGFsbG93ZWQgdG8gaGF2ZSBhbnkgbW9yZSBwb2tlciBtYWNoaW5lcyBpbmNsdWRlIEN1bGJ1cnJhIEJlYWNoLCBOb3dyYSwgU3QgR2VvcmdlcyBCYXNpbiwgU3Vzc2V4IElubGV0LCBVbGxhZHVsbGEsIEJhdGVtYW5zIEJheSwgTmFyb29tYSBhbmQgQmVybWFndWkuCkEgZmV3IG1vbnRocyBhZ28gSSBkZWNpZGVkIEkgd2FudGVkIHRvIG1hcnJ5IG15IGdmLiBJIGhhZCBidWlsdCB1cCBhIGRlY2VudCBiYW5rcm9sbCBmcm9tIHNjcmF0Y2ggaW4gdGhlIGZpcnN0IGhhbGYgb2YgMjAxOCBwbGF5aW5nIGluIG15IHNwYXJlIHRpbWUgc28gZGVjaWRlZCB0aGF0IHRoZSByZXN0IG9mIG15IHByb2ZpdHMgZnJvbSB0aGF0IHBvaW50IG9uIHdvdWxkIGdvIHRvd2FyZHMgdGhlIHJpbmcuIApCdWx3YXJrIG9mIEZhaXRoLiBBcyBhIGJvbnVzIGFjdGlvbiwgeW91IGNhdXNlIGEgc2hpbW1lcmluZyB0byBhcHBlYXIgYW5kIHN1cnJvdW5kIGEgY3JlYXR1cmUgb2YgeW91ciBjaG9pY2Ugd2l0aGluIHJhbmdlLCBncmFudGluZyBpdCBhICsyIGJvbnVzIHRvIEFDIGFuZCBhZHZhbnRhZ2Ugb24gRGV4dGVyaXR5IFNhdmluZyBUaHJvd3MuIFRoaXMgYmVuZWZpdCBsYXN0cyBmb3IgMSBtaW51dGUgb3IgdW50aWwgd2lsbGluZ2x5IGVuZGVkIGJ5IHlvdSBvciB0aGUgdGFyZ2V0LiBPbmNlIHlvdSB1c2UgdGhpcyBwcm9wZXJ0eSwgeW91IGNhbid0IHVzZSBpdCBhZ2FpbiB1bnRpbCB5b3UgZmluaXNoIGEgc2hvcnQgb3IgbG9uZyByZXN0LgpFdmVuIHRob3VnaCBJIG5ldmVyIHJlYWxseSB3ZW50IG9uIGEgcmVhbCBkb3duIHN3aW5nLCBJIGhhZCBhIDIwSyBoYW5kcyBicmVhayBldmVuIHN0cmV0Y2guIApFeHBsb3JlIHlvdXIgZW52aXJvbm1lbnQsIGRpZywgYnVpbGQgYW5kIHRhbWUgbmF0dXJlIGZvciB5b3VyIHNhZmV0eSBhbmQgZ2xvcnkuIAoiT25jZSB0aG9zZSBjYXVnaHQgb24sIG1vcmUgcGVvcGxlIGJlZ2FuIHNlZWtpbmcgb3V0IHRlYWNoZXIgdHJhaW5pbmdzIGFuZCBzdGFydGVkIGNvbm5lY3Rpbmcgb24gRmFjZWJvb2ssIGFuZCBpdCBncmV3IGZyb20gdGhlcmUuIiBUaGVyZSBhcmUgdHdvIHN0dWRpb3MgaW4gdGhlIGNvdW50cnkgZm9jdXNlZCBvbmx5IG9uIGFjcm95b2dhLCBhbmQgb25lIG9mIHRob3NlIGlzIGluIExhcyBWZWdhcy4gCldlbGwsIHRha2UgdGhhdCBjb21tZW50IHdpdGggYSBncmFpbiBvZiBzYWx0LCBzaW5jZSBpdCB3YXMgYSB0ZWNoIHdobyBzYWlkIGl0LCBub3QgdGhlIGNsaW5pYyBvd25lcnMvdmV0ZXJpbmFyaWFucy4gVGhlIGxhd3Mgc3Vycm91bmRpbmcgZm91bmQgcGV0cyBhbmQgbWljcm9jaGlwcyBjYW4gYmUgY29uZnVzaW5nLCBhbmQgaXQgY291bGQgYmUgdGhhdCB0aGUgY2xpbmljIG9yIGp1c3QgdGhhdCBvbmUgdGVjaCBoYWQgYSBiYWQgZXhwZXJpZW5jZSB3aXRoIGEgc2ltaWxhciBzaXR1YXRpb24gYW5kIHNhaWQgc29tZXRoaW5nIHRoZXkgc2hvdWxkbiBoYXZlLiBPciBldmVuIG1pc3Nwb2tlPyBXaGVuIEkgd2FzIGEgdGVjaCwgd2Ugd2VyZSBkaXNjb3VyYWdlZCBmcm9tIGNhbGxpbmcgbWljcm9jaGlwIGNvbXBhbmllcyBvdXJzZWx2ZXMgc28gdGhhdCB0aGUgY2xpbmljIGRpZG4gZ2V0IGNhdWdodCB1cCBpbiBhbnkgd2VpcmQgb3duZXJzaGlwIGZpZ2h0cy4uIApTbywgYXMgdXN1YWwsIEkgZmlndXJlZCBJIGJ1aWxkIGl0IGFuZCBzZWUgd2hhdCBoYXBwZW5lZC4uIApEZXRyb2l0IExpb25zIE5ld3MgQW5kIFVwZGF0ZXMgRnJvbSBDQlMgQW5kIFdXSgpPbiBvbGRlciBwaG9uZXMgaXQgdmlkZW8gYW5kIHdpZmkgY2FsbGluZy4gClNwYWNlIHN0YXRpb24gYXN0cm9uYXV0cyBoYXZlIGJlZW4gc3R1Y2sgcmlkaW5nIFJ1c3NpYW4gcm9ja2V0cyBzaW5jZSBOQVNBJ3Mgc2h1dHRsZXMgcmV0aXJlZCBpbiAyMDExLiBOQVNBIGlzIGNvdW50aW5nIG9uIFNwYWNlWCBhbmQgQm9laW5nIHRvIHN0YXJ0IGxhdW5jaGluZyBhc3Ryb25hdXRzIHRoaXMgeWVhci4gU3BhY2VYICAgd2hpY2ggaGFzIGJlZW4gZGVsaXZlcmluZyBzdGF0aW9uIGNhcmdvIGZvciB5ZWFycyAgIGlzIHNob290aW5nIGZvciBzdW1tZXIuClIyOiBOb3cgd2UncmUgdGFsa2luZy4gCkF0IHRoZSBzYW1lIHRpbWUsIEkgd291bGQgaGF0ZSBmb3IgbXkgc2V4dWFsIHByYWN0aWNlcyB0byBiZSAib3V0ZWQiIHNpbmNlIHRoZXkgYXJlIGhhcmRseSB0aGF0IGludGVyZXN0aW5nLiAKVGhlcmUgd2FzIG5vIHJlYWN0aW9uIGZyb20gdGhlIDY2IHllYXIgb2xkIGFzIHRoZSBzZW50ZW5jZSB3YXMgcmVhZCBvdXQgYXQgdGhlIENlbnRyYWwgQ3JpbWluYWwgQ291cnQuIEhlIGNvbnRpbnVlcyB0byBkZW55IHRoZSBvZmZlbmNlcyBhbmQgaGFzIHNhaWQgaGUgd2lsbCBhcHBlYWwgdGhlIGp1cnkgdmVyZGljdCBhbmQgc2VudGVuY2UuCkRpY2Npb25hcmlvIFBhcmEgUm91dGVyIEtleWdlbiBBY3R1YWxpemFkbyBEZWZpbml0aW9uaW5zdG1hbmtzCkxhIG1hbmlyZSBkb250IG5vcyBwaWVkcyBub3VzIHJlbGllbnQgIGxhIHRlcnJlIGVuZ2VuZHJlIHVuIHN5bWJvbGlzbWUgcHJvZm9uZCwgY2VsdWkgZGUgbGEgbWFuaWZlc3RhdGlvbiwgZGFucyBsYSBtYXRpcmUsIGRlIG5vdHJlIG5hdHVyZSBwbHVzIGxldmUuIE5vdXMgYXZvbnMgdnUgbCBkZXMgcGllZHMgc2Vsb24gZGlmZnJlbnRzIHBvaW50cyBkZSB2dWUsIG1haXMgY29tbWVudCBjZXR0ZSBpbXBvcnRhbmNlIGEgdCBlbGxlIHQgaW5pdGlhbGVtZW50IHJlY29ubnVlID8KUGVyIGNhcGl0YSB0aGUgdmFsdWVzIGFyZSBjbG9zZXIsIGJ1dCB3ZSBzdGlsbCBoYXZlIGEgd2lkZSBkZWx0YS4gUG9ydHVnYWwgcGVyIGNhcGl0YSBHRFAgaXMgYXJvdW5kICQzMiwwMDAgYW5kIFJ1c3NpYSBpcyBhcm91bmQgJDEwLDAwMC4gClRoaXMgbGVhZHMgdG8gYSBzdW0gb2YgMyAgNCArIDIgPSAxNCB0aWxlcy4uIApUaGUgZ29kcyBvZiBwb2tlciBhcmUgbm90IGltcHJlc3NlZC4gCk1hbnkgcmVzcG9uZGVudHMgcmVwb3J0ZWQgdGhhdCBjdXJyZW50bHkgcHJvdmlkZWQgb24gYmFzZSB0cmVhdG1lbnQgYW5kIGFuY2lsbGFyeSBzZXJ2aWNlcyBzdWNoIGFzIGNoaXJvcHJhY3RpYyB0aGVyYXB5IGFyZSB0aGUgbW9zdCBlZmZlY3RpdmUgaW4gYWxsZXZpYXRpbmcgc3ltcHRvbXMuCk1vc3RseSwgSSBzZWUgdGhlIG1vdmllcyBhcyBhIGp1bXBpbmcgb2ZmIHBvaW50LiAKRHJpbmtpbmcgdGhlIGVudGlyZSBjb250ZW50cyBvZiB0aGUgUm95YWwgRmx1c2ggZGV0b3ggYW5kIHRoZSB0d28gcmVmaWxscyBvZiB3YXRlciB0b29rIGFib3V0IDE1IDIwIG1pbnV0ZXMgaWYgSSByZWNhbGwuIApJbiBjYXNlIGl0J3MgaGVscGZ1bCB0byBwZW9wbGUgbmVpdGhlciBpbiBhIGh1cnJ5LCBub3IgaW4gTWFuaGF0dGFuLCBTdXJwbHVzIENvbXB1dGVycyBoYXMgYSA1MDAgY2hpcCBzZXQgZm9yICQzOS45OSwgcGx1cyAkMTAgMTUgc2hpcHBpbmcuIE5vdCBhIGJhZCBkZWFsLCBmcm9tIHdoYXQgSSB1bmRlcnN0YW5kLiAoSSdtIG5vdCBhZmZpbGlhdGVkIHdpdGggU3VycGx1cyBDb21wdXRlcnMsIG5vciBoYXZlIEkgYm91Z2h0IHRoZXNlIGNoaXBzLikKT25jZSBtYXJyaWVkIHRvIGhpbSwgaG93IHdvdWxkIHRheGVzIGNoYW5nZSBmb3IgbWUgYXMgYSBkdWFsIGNpdGl6ZW4/CkZhbWlseSBhbmQgd2FpZnMgYW5kIHN0cmF5cyB3aG8gaGF2ZSBub3doZXJlIGVsc2UgdG8gZ28uIEkgY2FuIGJlYXIgYW55b25lIHNwZW5kaW5nIENocmlzdG1hcyBhbG9uZSBzbyB0aGUgZG9vciBpcyBhbHdheXMgb3BlbiBhbmQgd2Ugd2lsbCBhbHdheXMgaGF2ZSBwbGVudHkgb2YgZm9vZCBhbmQgZHJpbmshIEppbGwgZmFtaWx5IG9mdGVuIGZseSBpbiBmcm9tIGJhY2sgZWFzdCBhbmQgUnlhbiwgd2hvIG5vdyBsaXZlcyBpbiBUb3JvbnRvLCBhbHdheXMgY29tZXMgaG9tZSBmb3IgdGhlIGZlc3RpdmUgc2Vhc29uLi4gCkRhIGdpYnQgZXMgbmljaHRzIHNjaG4genVyZWRlbiB1bmQgZXMgd2lyZCBhdWNoIG5pY2h0IGRhdm9uIGFibGVua2VuIHdlciBkaWUgU2NodWxkIGFuIGRlciBNaXNlcmUgaW4gZGllc2VtIExhbmQgdHJndC4gCkhlIGhhZCBhbHNvIHRyaWVkIGNvY2FpbmUgb25jZS4gClRoZSBGQkkgYmVnYW4gbGlzdGVuaW5nIHRvIERvdWdoZXJ0eSdzIGNhbGxzIG9uIEFwcmlsIDI5LCAyMDE1LiBUaGUgYWdlbnRzIGxpc3RlbmVkIGZvciBhIGZ1bGwgeWVhciB1bnRpbCBuZXdzIG9mIHRoZSBwcm9iZSBvZiB0aGUgbGFib3IgbGVhZGVyIGJyb2tlIGludG8gcHVibGljIHZpZXcgICBvbiBBdWcuIApBYm91dCBhIHdlZWsgbGF0ZXIgbXkgc29jayB0dXJuZWQgdXAgaW4gb3VyIGNvbGxlZ2Ugc3R1ZHkgcm9vbSwgYW5kIEkgd2FzIGxpa2Ugc29ja2traywgaSBiZWVuIGxvb2tpbmcgZm9yIHRoYXQgZXZlcnl3aGVyZSBhbmQgd2Fsa2VkIGFjcm9zcyB0aGUgcm9vbS4gSSB3YXMgZm91cnRlZW4gd2hlbiBJIGZpcnN0IHBsYXllZCBhbmQgYSB2ZXJ5IGdvb2QgcG9rZXIgcGxheWVyLiBJdCB3YXMgKGluZXZpdGFibHkgYXQgdGhhdCBhZ2UpIGd1eXMgdmVyc3VzIGdpcmxzIGFuZCB0aGFua3MgdG8gbWUgd2UgbWFuYWdlZCBub3QgdG8gcHVsbCBvZmYgYSBzaW5nbGUgYXJ0aWNsZSAgIHVudGlsIHRoZSBvbGRlc3QgZ2lybCB0aGVyZSAoYSBzaXh0ZWVuIHllYXIgb2xkKSByZW1vdmVkIGhlciBicmEuIEkgYmxldyB0aGUgbmV4dCBoYW5kIGFuZCBsb3N0IG91ciBzaG9lcy4gTXkgbGF0ZXIgdG8gYmUgZ2lybCBmcmllbmQgd2FzIGFsc28gdGhlcmUgYW5kIHdlIGp1c3QgYmFyZWx5IGdvdCB0aGUgdHdvIG9mIHRoZW0gbmFrZWQuIE15IG1hdGUgYW5kIEkgaGFkIG91dCBwYW50cyBvbiBzdGlsbC4KSWYgd2UgdG8gYmVsaWV2ZSB0aGF0IHRoZSAiZnJpZW5kIiB3YXMgbHlpbmcgYWJvdXQgYmVpbmcgT0sgd2l0aCBPUCBkYXRpbmcgdGhlIGJveSwgdGhlbiB0aGUgZmlyc3QgdmlvbGF0aW9uIG9mIHRoZSAiY29kZSIgd2FzIG1hZGUgYnkgdGhlIGZyaWVuZC4uIApHYWxsZXJ5IFBhcmtsYW5kOiBPbmUgWWVhciBMYXRlck9uZSBZZWFyIEFubml2ZXJzYXJ5IE9mIERlYWRseSBTaG9vdGluZyBBdCBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgSW4gUGFya2xhbmQsIEZsb3JpZGFQQVJLTEFORCwgRkxPUklEQSAgIEZFQlJVQVJZIDE0OiBQZW9wbGUgcGF1c2UgZm9yIGEgbW9tZW50IG9mIHNpbGVuY2UgYXQgMTA6MTdhbSBuZWFyIE1hcmpvcnkgU3RvbmVtYW4gRG91Z2xhcyBIaWdoIFNjaG9vbCBhcyB0aGV5IHJlbWVtYmVyIHRob3NlIGxvc3QgZHVyaW5nIGEgbWFzcyBzaG9vdGluZyBhdCB0aGUgc2Nob29sIG9uIEZlYnJ1YXJ5IDE0LCAyMDE5IGluIFBhcmtsYW5kLCBGbG9yaWRhLiBBIHllYXIgYWdvIG9uIEZlYi4gMTR0aCBhdCBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgMTQgc3R1ZGVudHMgYW5kIHRocmVlIHN0YWZmIG1lbWJlcnMgd2VyZSBraWxsZWQgZHVyaW5nIHRoZSBtYXNzIHNob290aW5nLiAKTm93IHNoZSBpcyBjaGFuZ2luZyB0aGF0LCB3aGljaCBoYXMgYSBkaXJlY3QgaW1wYWN0IG9uIHlvdXIgcGFydG5lcnNoaXAuIFlvdXIgd2lmZSB3YXMgc3VwcG9ydGl2ZSBvZiB5b3VyIHZhc2VjdG9teS4gTm93IHNoZSB3YW50cyBjaGlsZHJlbi4uIApXb21lbiBzb2NjZXIgdGVhbSBzdWVzIGZvciBlcXVhbCBwYXlKdXNzaWUgU21vbGxldHQgaW5kaWN0ZWQgaW4gQ2hpY2Fnb0NoZWxzZWEgTWFubmluZyBzZW50IHRvIGphaWwgZm9yIHJlZnVzaW5nIHRvIHRlc3RpZnkgb24gV2lraUxlYWtzVHJ1bXAgZmVlbHMgInZlcnkgYmFkbHkiIGZvciBQYXVsIE1hbmFmb3J0IkNCUyBFdmVuaW5nIE5ld3MiIGhlYWRsaW5lcyBmb3IgRnJpZGF5LCBNYXJjaCA4LCAyMDE5QWxhYmFtYSBwYXN0b3IgaGVscGluZyBoaXMgY29tbXVuaXR5IGhlYWwgYWZ0ZXIgdGhlIGRlYWRseSB0b3JuYWRvSnVzdGljZSBEZXBhcnRtZW50IGNyYWNraW5nIGRvd24gb24gZmluYW5jaWFsIHNjYW1zIHRhcmdldGluZyB0aGUgZWxkZXJseUZlYXIgYW4gSVJTIGF1ZGl0PyBEb24gICB0aGUgb2RkcyBhcmUgd2l0aCB5b3VUYXhwYXllciBncm91cCB1cmdlcyBleHRlbmRpbmcgZmlsaW5nIGRlYWRsaW5lIHRvIE1heSAxNVNvbWUgdGF4IHByZXBhcmVycyBwcm9taXNlIGZhdCByZWZ1bmRzLCB0aGVuIGZsZWVjZSBjb25zdW1lcnMyMDE5IHRheCByZXR1cm5zOiBIb3cgdG8gZmlsZSB5b3VyIHRheGVzIGZvciBmcmVlQXZlcmFnZSB0YXggcmVmdW5kIG5vdyBzbGlnaHRseSBoaWdoZXIgdGhhbiBsYXN0IHllYXJSb3kgTW9vcmUgc2F5cyBoZSBpcyAic2VyaW91c2x5IGNvbnNpZGVyaW5nIiBTZW5hdGUgcnVuVHJ1bXAgZG91YmxlcyBkb3duIG9uIGNvbGx1c2lvbiBhbGxlZ2F0aW9ucyBhbmQgUGF1bCBNYW5hZm9ydCBzZW50ZW5jZWRDaGVsc2VhIE1hbm5pbmcgamFpbGVkIGFmdGVyIHJlZnVzaW5nIHRvIHRlc3RpZnlVbnZhY2NpbmF0ZWQgYm95IGFsbW9zdCBkaWVzIG9mIHRldGFudXNSLiAKSWYgd2UgYXJlIGJlaW5nIGhvbmVzdCwgTWFyZ28gaXMgbm90IGV4YWN0bHkgdGhlIG1vc3QgZnJpZW5kbHkgZ3V5IGluIHRoZSByb29tLiAKRm9yIHRoZSBRdWVlbnNsYW5kIGFzc29jaWF0aW9uIGl0IGhhZCBpbXBhY3RlZCBvbiBjb21wZXRpdGlvbiBhbmQgc29jaWFsIGVuZ2FnZW1lbnRzLCBhbm51YWwgZWR1Y2F0aW9uIHdvcmtzaG9wcywgYWN0aXZpdGllcyBoYWQgYmVlbiBoYWx2ZWQsIGFuZCBpdCB3YXMgbGVmdCB3aXRoIG5vIGV4dHJhIGZ1bmRzIHRvIHBheSBmb3IgdHV0b3JzIGNvbWluZyBmcm9tIFNjb3RsYW5kLgpTYW0gaGl0IHRoZSBidXR0b24gb25jZSBtb3JlIGFuZCB0aGUgZG9vciBjbG9zZWQgYmVoaW5kIGhpbS4gClN1cmUsIGhlIGhhc24ndCBjb21lIHRocm91Z2ggb24gYW55IG9mIHRob3NlIHByb21pc2VzLCBidXQgYXMgbG9uZyBhcyB0aGVyZSBpcyBhIHBvc3NpYmlsaXR5IHRoYXQgaGUgd2lsbCwgdGhhdCdzIHRoZWlyIGJlc3QgaG9wZS4gCkl0IHRvb2sgbWUgYSBmZXcgc2Vjb25kcyB0byBwcm9jZXNzIHdoYXQgd2FzIGp1c3Qgc2FpZCBhbmQgSSBsb29rIGF0IGhpbSBhbmQgc2F5ICJXb3csIGlmIHlvdSBzYWlkIHRoYXQgdG8gbWUsIHdlIGhhdmUgdG8gdGFrZSBhIHdhbGsgb3V0c2lkZSIgaGUgc2F5cyAiRnVjayB5b3VyIG1vdGhlciIuIApUaGUgaG91c2UgZWRnZSBmb3IgY3JhcHMgaXMgbGVzcyB0aGFuIDIgcGVyY2VudCB3aXRoIHRoZSBiZXN0IGJldHMuLiAKRW4gMTgzMiwgdW5lIHBpZG1pZSBkZSBjaG9scmEgc2UgZGNsYXJlIGRhbnMgbGUgbm9yZCBkZSBsYSBGcmFuY2UuIENldHRlIG1hbGFkaWUsIHByb3ZvcXVlIHBhciBsYSBiYWN0cmllIFZpYnJpbyBjaG9sZXJhZSwgdG91Y2hlcmEgYmllbiBkZXMgcGFydGllcyBkdSBtb25kZSBhdSBnciBkZSB2YWd1ZXMgc3VjY2Vzc2l2ZXMuIEVuIDE4MzIsIGMgbGEgZGV1eGltZSBwYW5kbWllIGRlIGNob2xyYSAoMTgyNiAxODQxKSBxdWkgcyBzdXIgbGEgRnJhbmNlLiBMZSBkb2N0ZXVyIENhemluIG1ldCB0b3V0ZSBzb24gbmVyZ2llIGF1IHNlcnZpY2UgZGUgbCBkZSBjZSBmbGF1LCBtYWlzIGlsIGVuIGVzdCBsdWkgbW1lIGwgZGVzIHZpY3RpbWVzLiAKQSBuZXdlciBsb2NhbCBraXRjaGVuIG9uIHdoZWVscywgY2hlZiBBYXJvbiBRdWlsbGluZydzIENvbG9yYWRvIEZyaWVkIENoaWNrZW4gQ29tcGFueSBmb29kIHRydWNrIHNlcnZlcyBpdHMgbmFtZXNha2UgZGlzaCBpbiBhIG1hbm5lciBiZXN0IGRlc2NyaWJlZCBhcyBhcHBlYWxpbmdseSBob3QgYW5kIGZyZXNoLiBUaGlzIHBhcnRpY3VsYXIgZm9vZCB0cnVjayB0ZW5kcyB0byBtYWtlIGl0cyByb3VuZHMgYXQgYSBtYW55IGxvY2FsIGJyZXdlcmllcywgaW5jbHVkaW5nIFVwc2xvcGUgaW4gQm91bGRlciBhbmQgQm9vdHN0cmFwIGluIExvbmdtb250LiAKTm93IHNoZSBhIGJpdGNoIHRvIGFsbCBvZiBoZXIgZnJpZW5kcyB3aGVuIHRoZXkgdGVsbCBoZXIgdG8gdHJ5IHRvIGdldCBhbG9uZyB3aXRoIGhlciBiYWJ5ZGFkZGllcywgd2hvIGJ5IHRoZSB3YXkgc2hlIHdvbiB0aGUgZ29kZGFtbiBsb3R0ZXJ5IHdpdGguIFNoZXMganVzdCBhIGJhZCBwZXJzb24uClNob3J0LCBSZWd1bGF0aW9uIE5NUyBoYXMgcGxhY2VkIGlubm92YXRpb24gaW4gYSBzdHJhaWdodGphY2tldCBhbmQsIGFzIGFuIHVuZm9yZXNlZW4gY29uc2VxdWVuY2UsIG1heSBsZWFkIHRvIGluY3JlYXNlZCBjb25jZW50cmF0aW9uIGluIHRoZSB0cmFkaW5nIG9mIGVxdWl0aWVzLCBCbHVtZSB3cml0ZXMuIFJlZ3VsYXRpb24gTk1TIGNhdXNlcyB0aGUgY29zdCBvZiB0cmFkaW5nIHRvIGJlY29tZSBvbmVyb3VzLCBpbnN0aXR1dGlvbnMgd2lsbCBmaW5kIHdheXMgdG8gZXZhZGUgaXRzIGRpY3RhdGVzIC4gCkZhd2xleSBnbGFuY2VkIG9uY2UgbW9yZSBhdCBoaXMgd2F0Y2guIEhlIHJlYWxseSBoYWQgbm90aGluZyB3aGF0ZXZlciB0byBkbyBhdCB0aGUgbW9tZW50IGJ1dCBoZSBwb3NzZXNzZWQgYWxsIHRoZSBpbXBhdGllbmNlIG9mIHRoZSBtYW4gb2YgZW5lcmd5IGF0IGJlaW5nIGFza2VkIHRvIHdhaXQgYXQgYW55IHRpbWUuIApGb3IgdGhhdCBoZSBiZSBmaXJlZC4gCkJlbGlldmUgaXQgb3Igbm90IHRoZSBhYmlsaXR5IHRvIHNpbXBseSBzYXkgIkkgbmVlZCB5b3UgdG8gZG8gdGhpcyIgaW5zdGVhZCBvZiAiY2FuIHlvdSBkbyB0aGlzPyIgYWxvbmUgY2FuIHF1YWxpZnkgeW91IGZvciBhIGxlYWRlcnNoaXAgcm9sZSBvdmVyIGFub3RoZXIuCk9uIGF2ZXJhZ2UsIGFuIG9ubGluZSBwb2tlciBnYW1lIHdpbGwgbW92ZSB0aHJlZSB0aW1lcyBhcyBmYXN0IGFzIGEgcmVhbCBjYXNpbm8uIApGb3JkIGhhcyBwcmV2aW91c2x5IGRlc2NyaWJlZCB0aGUgam9iIG9mIE9QUCBjb21taXNzaW9uZXIgYXMgYSBhcHBvaW50bWVudCwgYnV0IHRvbGQgdGhlIGludGVncml0eSBjb21taXNzaW9uZXIgaW4gYSBEZWNlbWJlciBsZXR0ZXIgdGhhdCBoZSBpcyBub3QgYXdhcmUgb2YgYW55IGNvbnN1bHRhdGlvbiB3aXRoIGhpcyBvZmZpY2Ugb24gdGhlIHJhbmsgcmVxdWlyZW1lbnQgY2hhbmdlLgpMZXRtZXNlZXlvdXJwdWJzICAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpTZWUgUHVyY2hhc2luZyBDb3ZlcjogTm9uIFVuaXZlcnNpdHkgcmVsYXRlZCBUcmF2ZWwuRmluZCBvdXQgbW9yZSBhYm91dCB5b3VyIGNvdmVyIHVuZGVyIHRoZSBVbml2ZXJzaXR5J3MgaW5zdXJhbmNlIHBvbGljeSwgYW5kIHRvIGRvd25sb2FkIGluc3VyYW5jZSBkb2N1bWVudHMsIHVuZGVyIHRoZSByZWxldmFudCBoZWFkaW5nIGJlbG93OlRoZSBVbml2ZXJzaXR5IHByb3ZpZGVzIHRyYXZlbCBpbnN1cmFuY2UgZm9yIHN0dWRlbnRzIHVuZGVydGFraW5nIGFwcHJvdmVkIHRyYXZlbCBpbmNsdWRpbmcgZXhjaGFuZ2VzLCBwbGFjZW1lbnRzLCBzdHVkeSB0b3VycyBhbmQgU3R1ZHkgT3ZlcnNlYXMgZXhwZXJpZW5jZXMuVGhlIGNvdmVyIGhhcyBhIGR1cmF0aW9uIG9mIDE4MCBkYXlzLiAKTGltcGluZyBpbiBzdHJvbmcgaGFuZHMKSW4gVGV4YXMgaG9sZCAnZW0sIHBvY2tldCBqYWNrcyBpcyBhIHZlcnkgc3Ryb25nIGhhbmQgYnV0IGEgcGVyaWxvdXMgb25lIGFzIHdlbGwuIApUaGUgc3RyaWN0ZXIgcnVsZXMgcmVxdWlyZXMgYm9ycm93ZXJzIHRvIHByb3ZlIHRoYXQgdGhleSBjYW4gc2VydmljZSB0aGVpciB1bmluc3VyZWQgbW9ydGdhZ2UgYXQgYSBxdWFsaWZ5aW5nIHJhdGUgb2YgdGhlIGdyZWF0ZXIgb2YgdGhlIGNvbnRyYWN0dWFsIG1vcnRnYWdlIHJhdGUgcGx1cyB0d28gcGVyY2VudGFnZSBwb2ludHMgb3IgdGhlIGZpdmUgeWVhciBiZW5jaG1hcmsgcmF0ZSBwdWJsaXNoZWQgYnkgdGhlIEJhbmsgb2YgQ2FuYWRhLiAKT2ZmZW5zaXZlbHkgaGUgY2FuIHN0cmV0Y2ggdGhlIGZsb29yIChzbyBjYW4gRW1iaWlkKSBhbmQgaGUgaXMgYSB3aWxsaW5nIGFuZCBhYmxlIHBhc3Nlciwgd2hvIHNjcmVlbnMgd2VsbCBhbmQgY2FuIG1vdmUgd2l0aGluIGFuIG9mZmVuc2UuCkFsc28gaW4gTmlnZXJpYSwgdGhlIEJlc3QgV2VzdGVybiBQb3J0IEhhcmNvdXJ0IEhvdGVsIGluIFBvcnQgSGFyY291cnQgb3BlbmVkIGluIDIwMDggYW5kIHJlY2VudGx5IHJlY2VpdmVkIHNpZ25pZmljYW50IHVwZ3JhZGVzIHRoYXQgd2lsbCBoZWxwIGl0IGVhcm4gQmVzdCBXZXN0ZXJuICJQcmVtaWVyIiBzdGF0dXMgdGhpcyB5ZWFyLiBUaGUgaG90ZWwgb2ZmZXJzIDg5IGd1ZXN0cm9vbXMgYW5kIHN1aXRlcyBhbmQgbWVldGluZyBzcGFjZSBmb3IgdXAgdG8gMjAwIHBlb3BsZS4gCktub2NrZWQgaGVyIHVuY29uc2Npb3VzLiBNYWRlIGhlciBtaXNzIGhlciBlbGVtZW50YXJ5IGdyYWR1YXRpb24uVGhlbiB3aGVuIGhlciBwYXJlbnRzIGhhZCB0aGUgYXVkYWNpdHkgdG8gY29uZnJvbnQgbWUgYWZ0ZXIgdGhlaXIgcHJlY2lvdXMgY2hpbGQgaGFzIGJlZW4gaHVydCwgSSBjYWxtbHkgc2FpZCwgIlRlYWNoIHlvdXIga2lkIHNvbWUgbWFubmVycywgb3IgSSBjYW4gZ3VyYW50ZWUgdGhhdCB0aGlzIGlzbiB0aGUgbGFzdCB0aW1lIGl0IGdvaW5nIHRvIGhhcHBlbiB0byBoZXIuIE5vdCBieSBtZSwgYnV0IGJ5IGFueW9uZSBlbHNlIHdobyB3b24gcHV0IHVwIHdpdGggaGVyIGJ1bGxzaGl0LiJXb3JzdCB0aGluZyBJIGRvbmUsIGFuZCBJIHN0aWxsIHJlZ3JldCBpdCwgYnV0IEkgZG9uIGZlZWwgc29ycnkgYWJvdXQgaXQuVGhlIG5vbiBwb3B1bGFyIGtpZHMgYWxsIGFncmVlZCBhbmQgYWxsIHRoZSBraWRzIHNoZSBidWxsaWVkIHN0b29kIHVwIGZvciBtZSBsYXRlci4gCkRvIGQzIHNuayAxIHRvIGJhaXQgYSBtYWdpYyA0IGxhdW5jaGVyLiBFVkVSWUJPRFkgaW4geWVsbG93IHJhbmsgcHJlc3NlcyBidXR0b25zIGFmdGVyIHRoZSAxIHdoaWxlIHlvdSBhdCArMS4gT3IgdGhleSBldmVuIGdldCBDSCBieSB0aGUgMSBhbmQgeW91IGdldCB0aGUgNCwxIGZvciBmcmVlIChvciBldmVuIGEgZjIsMyBpZiB5b3UgY2FuIHJlYWN0IHRvIHRoZSBDSCBxdWljayBlbm91Z2gpLgpJdCB3YXNuJ3QgYWJvdXQgdGhlIG1vbmV5IGZvciBoaW0sIGl0IHdhcyBhYm91dCBiZWluZyBsb3ZlZCBoZSBzYWlkLiAKRnJvbSBJIHJlbWVtYmVyIHNvbWVvbmUgY2FsbGVkIGhpbSBvdXQgdG8gaGVscCBhc3Npc3Qgd2l0aCBpdCwgYW5kIEkgdGhpbmsgaGUgc2xpcHBlZCB3aGlsZSBnZXR0aW5nIGluIHBvc2l0aW9uPyBBbnl3YXkgdGhlIGd1eSdzIGRvbmUgaXQgYmVmb3JlIGJ1dCBldmVuIHByb2Zlc3Npb25hbHMgY2FuIGdldCBodXJ0IG9yIGZ1Y2sgdXAgb24gdGhlIGpvYiAgIGJ1dCBoaW5kc2lnaHQgc2F5cyBoZSBzaG91bGQgb2Ygd2FpdGVkIGZvciBiYWNrdXAhdmFsZXJpayAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClRoYXQgaGUgd2FzIGEgbGlldXRlbmFudCBpbiB0aGUgUml6enV0byBjbGFuLCBhbmQgdGhhdCBoZSB3YXMgdXBzZXQgb3ZlciB0aGUgcHVibGljYXRpb24gb2YgdGhlIHBob3RvIG9mIGhpcyBmYW1pbHkgaG9tZS4uIApXZWxsIHRoYXQgdGhlIHBvaW50LiBQZW9wbGUgaGF2ZSBiZWVuIGFibGUgdG8gImJlYXQiIGFsbCB0aG9zZSB0aGluZ3MgdGhhdCBraWxsIHVzLCBzbyB0aGUgYXZlcmFnZSBhZ2UgaGFzIHJpc2VuLiBCdXQgaWYgc29tZW9uZSB3YXMgYWJsZSB0byBub3QgZ2V0IGtpbGxlZCBhcyBhIGJhYnkgb3IgYnkgZGlzZWFzZSBvciB3YXIgb3IgYW4gaW5qdXJ5LCB0aGV5IGxpdmUgaW50byB0aGVpciA3MHMgb3IgODBzIGp1c3QgbGlrZSB3ZSBkbyB0b2RheSBiZWZvcmUgdGhlaXIgYm9keSBqdXN0IGdvdCB0b28gb2xkLiAKVGhleSBjb3VsZCBiZSBnZXR0aW5nIGZsYWdnZWQgZm9yIHVwbG9hZGluZyBrZXkgcGFydHMgb2YgdGhlIHN0b3J5Li4gCkFzIHdlbGwgYXMgbXkgbmVpZ2hib3Job29kIGdldHRpbmcga2lja2VkIG91dCBvZiBzY2hvb2wgZGlkbiBoZWxwIGVpdGhlci4gVGhlIG9ubHkgc2Nob29sIHRoYXQgd291bGQgdGFrZSBtZSBpcyBhIHNjaG9vbCBmb3Iga2lkcyB3aXRoIGJhZCBiZWhhdmlvci4gCkkgYW0gdmVyeSBpbnRvIGZseWVyIHByb3NwZWN0cyBqdXN0IGxpa2UgdGhlIHVuaXZlcnNlLCB5b3Uga25vdyBsaWtlIGhvdyB3YXMgY3JlYXRlZCB5b3Uga25vdyBsaWtlIHdoYXRpcyBpdCB5b3Uga25vdywgc29sYXIgc3lzdGVtIGlzIHNvIGh1bW9uZ291cyBiaWcgcmlnaHQganVzdCBmbHllciBwcm9zcGVjdCBwb29sIG9mIGEgdGFsZW50LiAKV2hvIGdpdmVzIGEgc2hpdD8gU2VyaW91c2x5LiAKSSBoYWQgYmVlbiBkb2luZyBzb21lIG90aGVyIFRWIHdvcmsgYW5kIHdhcyBhcHByb2FjaGVkIGJ5IEJhcmdhaW4gSHVudCBhcm91bmQgMTggbW9udGhzIGFnby4KVGhpcyBpcyBnb29kIG5ld3MsIGl0J3MgdGhlIGNoZWFwZXN0IGZpeCBJIGNvdWxkIGhhdmUgaG9wZWQgZm9yICAgYXMgbG9uZyBhcyB0aGF0J3MgYWxsIHRoYXQncyB3cm9uZyB3aXRoIGl0Li4gCkFuZCB0byBwdWJsaXNoIHRoZSB2aWV3cyBvZiB0aG9zZSB3aG8gbWlnaHQgZGlzYWdyZWUgd2l0aCB5b3UuCkkgYXJndWUgYWdhaW5zdCB0d28gcG9wdWxhciBjbGFpbXMuIFRoZSBmaXJzdCBpcyBhIGRlc2NyaXB0aXZlLCBlbXBpcmljYWwgdGhlc2lzIGFib3V0IHRoZSBuYXR1cmUgb2Ygb3JkaW5hcnkgaHVtYW4gZXhwZXJpZW5jZTogJ2VhY2ggb2YgdXMgY29uc3RydWN0cyBhbmQgbGl2ZXMgYSAibmFycmF0aXZlIiAuIFRoaXMgbmFycmF0aXZlIGlzIHVzLCBvdXIgaWRlbnRpdGllcycgKE9saXZlciBTYWNrcyk7ICdzZWxmIGlzIGEgcGVycGV0dWFsbHkgcmV3cml0dGVuIHN0b3J5IC4gSW4gdGhlIGVuZCwgd2UgYmVjb21lIHRoZSBhdXRvYmlvZ3JhcGhpY2FsIG5hcnJhdGl2ZXMgYnkgd2hpY2ggd2UgInRlbGwgYWJvdXQiIG91ciBsaXZlcycgKEplcnJ5IEJydW5lcik7ICd3ZSBhcmUgYWxsIHZpcnR1b3NvIG5vdmVsaXN0cy4gV2UgdHJ5IHRvIG1ha2UgYWxsIG9mIG91ciBtYXRlcmlhbCBjb2hlcmUgaW50byBhIHNpbmdsZSBnb29kIHN0b3J5LiAKVGhhdCBzaG91bGRuIGJlIHRoZSBsYXN0IHlvdSBoZWFyIGZyb20gaGltIGluIHRoZSBLbmlnaHRzIHF1ZXN0IHRvIHNlY3VyZSBmaXJzdCBpbiB0aGUgT0hMIFdlc3Rlcm4gQ29uZmVyZW5jZSBhbmQgaHVudCBkb3duIE90dGF3YSBmb3IgdG9wIHNwb3Qgb3ZlcmFsbCBpbiB0aGUgbGVhZ3VlLgpBbmQgSSBzZWUgdGhhdCBhcyBsaWJlcmF0aW5nIG1lbiwgYW5kIGJveXMgcGFydGljdWxhcmx5LCBhbGxvd2luZyB0aGVtIHRvIGJlIHRoZW1zZWx2ZXMgd2l0aG91dCBiZWluZyBwZWVyIHByZXNzdXJlZCBpbnRvIGNvbmZvcm1pdHkgd2l0aCBhIG1pc2d1aWRlZCBub3Rpb24gb2Ygd2hhdCBpdCBtZWFucyB0byBiZSBhIG1hbi4uIAoiV2UgZ290IGEgbG90IG9mIG9yZ2FuaXphdGlvbnMgdGhhdCBzdXBwb3J0IE5hdGlvbndpZGUuIEZvbGQgb2YgSG9ub3IsIGFuZCBXb3VuZGVkIFdhcnJpb3JzIFByb2plY3QuIFRob3NlIGFyZSBiaWcsIGJyb2FkIGFuZCBmYXIgcmVhY2hpbmcsIiBzYWlkIFdoZWF0bGV5LiAiVGhlIENvZmZlZSBCdW5rZXIgcmVhY2hlcyBwZW9wbGUgaGVyZSB0b2RheSwgYW5kIGhlbHBzIHRoZW0gcmlnaHQgbm93LiIKIkEgTG9taSBMb21pIHVzdWFsbHkgY29tbWVuY2VzIHdpdGggYSBzdGlsbG5lc3MgYmV0d2VlbiB0aGUgcHJhY3RpdGlvbmVyIGFuZCBjbGllbnQsIG9mdGVuIHdpdGggdGhlIHByYWN0aXRpb25lcnMgaGFuZHMgZ2VudGx5IHJlc3Rpbmcgb24gdGhlIGNsaWVudHMgYmFjaywiIHNheXMgVHJhY2V5IExha2FpbmFwYWxpLiAiSW4gdGhpcyBzdGlsbG5lc3MgdGhlIHByYWN0aXRpb25lciB3aWxsIHF1aWV0bHkgc2F5IGEgYmxlc3Npbmcgb3IgcHJheWVyIGFza2luZyBmb3Igd2hhdGV2ZXIgaGVhbGluZyBpcyBuZWVkZWQgdG8gdGFrZSBwbGFjZSBkdXJpbmcgdGhlIG1hc3NhZ2UuIApJIGRpZG4gc2F5IGFueXRoaW5nIHRoZW4gYXMgdG8gbm90IGdpdmUgYXdheSBieSBoYW5kIHN0cmVuZ3RoLCBidXQgdG9sZCBoaW0gbXkgdGhvdWdodHMgb24gaGlzIGFjdGlvbiBvbiBoaXMgbmV4dCByb3RhdGlvbiB0byB0aGUgdGFibGUgYWZ0ZXIgc2FpZCBwbGF5ZXIgd2FzIGdvbmUuLiAKVGhlIGltcG9ydGFudCB0aGluZyBmb3IgdGhlbSBpcyB0aGF0IHlvdSBwbGF5IHlvdXIgY2FyZHMgYW5kIHRoZXkgd2lsbCBwbGF5IHRoZWlycy4gU3VyZWx5LCBhbGwgb2YgeW91IGFyZSBwcmF5aW5nIGFuZCBob3BpbmcgdGhhdCBsdWNrIGlzIG9uIHlvdXIgc2lkZSBkdXJpbmcgdGhpcyB0aW1lLiAKVGhlcmUgaXMgYSB2aWN0b3J5IHdob29wIGhlcmUsIGEgZ3JvYW4gb2YgZGVmZWF0IHRoZXJlLCBhbmQgdGhlIGNvbnN0YW50IGNsYWNraW5nIG9mIGNoaXBzIHJpZmZsZWQgYnkgcGxheWVycyBjb250ZW1wbGF0aW5nIHRoZWlyIG5leHQgbW92ZS4uIApKb2huIFNhcm5vIGNvaW5lZCB0aGUgdGVybSBUTVMgYW5kIHdyb3RlIHRoZSBjb250cm92ZXJzaWFsIGJvb2sgIkhlYWxpbmcgQmFjayBQYWluIiBzb21lIG1hbnkgeWVhcnMgYWdvLiBIZSBzdWdnZXN0cyBhbiBlbW90aW9uYWwgYW5zd2VyIHRvIHBlb3BsZSBiYWNrIHBhaW4sIHdoaWNoIEkgd2hvbGVoZWFydGVkbHkgYWdyZWUgd2l0aC4gTWFueSBwZW9wbGUgaGF2ZSBiZWVuIGhlbHBlZCBieSBoaXMgYm9vayB3aGVyZWFzIG90aGVyIG1ldGhvZHMgaGF2ZSBmYWlsZWQuIApJIHRoaW5rIHlvdSB0b3RhbGx5IG1pc3NlZCBteSBlYXJsaWVyIHBvc3QgSSBzYWlkIHRoYXQgSm9KbyBJUyB0cmVhdGVkIGFzIGEgd2hpdGUgd29tYW4sIHdoaWNoIGlzIHdoeSBJIGRvbid0IHNlZSBoZXIgYXMgV29DLiBNeSBwb2ludCB3YXMgc2ltcGx5IHRoYXQgZXZlbiBzaGUgaXMsIGZvciBhcmd1bWVudCdzIHNha2UsIG1vcmUgb2YgYSBQb0MgdGhhbiBDYWVseW5uLCB3aG8gaXMgcmVhY2hpbmcgZXZlbiBmdXJ0aGVyIGJhY2sgZm9yIHNvbWUgbm9uIHdoaXRlIGhlcml0YWdlLgpKdXN0IG5vdG9yaW91cyBmb3IgdGhyb3dpbmcgZG93biB0aGUgc2ljaywgbmV2ZXIgaGVhcmQgb2YgbGluZSwgYWRkZWQgRGF2ZW5wb3J0LCBoZSBkaWQgZXhhY3RseSB0aGF0IHRvZGF5LiBUaGF0IHdoeSBKZXNzZSB0aGUgbWFuIGF0IHRoZXNlIGNvbXBzLCBoZSBqdXN0IHRocm93cyBpdCBkb3duLiBJIGhhdmUgYSBsb3Qgb2YgcmVzcGVjdCBmb3IgdGhhdCBpdCBub3QgYW4gdW5jYWxjdWxhdGVkIHJpc2s6IEhlIGNvbW1pdHRlZCB0byBpdCwgaGUga25vd3Mgd2hhdCBoZSB3YW50cyB0byBkbyBhbmQgaGUgc2VuZHMgaXQuIApWYXJpb3VzIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgU3BhbmlzaCB1bmlvbnMgQ0NPTyBhbmQgVUdULCBoYXZlIGJhY2tlZCB0aGUgc3RyaWtlcywgd2hpY2ggYWltIHRvIGhpZ2hsaWdodCBkaXNjcmltaW5hdGlvbiwgZG9tZXN0aWMgdmlvbGVuY2UgYW5kIHRoZSB3YWdlIGdhcC4gCldlIGtub3cgdGhhdCBtb3N0IGZhbWlsaWVzLCBzdHJhaWdodCBvciBnYXksIGRvbid0IGZpdCBpbiB3aXRoIHRoZSBzdGFuZGFyZHMgZm9yIG1hcnJpYWdlLCBhbmQgc2VlIG1hbnkgc3RyYWlnaHQgZmFtaWxpZXMgYmVpbmcgcGVuYWxpemVkIGZvciBub3QgY29uZm9ybWluZyB0byB0aGUgc3RhbmRhcmQgdGhlIGdvdmVybm1lbnQgaGFzIHNldDogc2luZ2xlIG1vbXMgdHJ5aW5nIHRvIGdldCBvbiB3ZWxmYXJlLCBleHRlbmRlZCBmYW1pbHkgbWVtYmVycyB0cnlpbmcgdG8gZ2FpbiBjdXN0b2R5LCBmcmllbmRzIGtlcHQgZnJvbSBiZWluZyBlYWNoIG90aGVyJ3MgbGVnYWwgcmVwcmVzZW50YXRpdmVzLiAKUmVhZCByL2RlYWRiZWRyb29tc1doYXRldmVyIGhlciByZWFzb24sIHNoZSBzaG91bGQgYmUgYWJsZSB0byB0ZWxsIHlvdSBzb21ldGhpbmcuVGhlcmUncyBzIGEgbXlyaWFkIG9mIHJlYXNvbnMgaXQgY291bGQgYmUuIFRyYXVtYS4gUFRTRC4gCkpCOiBUaGUgQ2FudWNrcyBtYW5hZ2UgdG8ga2lsbCBvZmYgdGhlIGZpcnN0IEF2cyBwb3dlciBwbGF5IG9mIHRoZSBuaWdodC4gQW5kIHRoZXkgdGFrZSBhbm90aGVyIHBlbmFsdHkuIFdpbGxpZSBNaXRjaGVsbCBpcyBvZmYgZm9yIG94eWdlbi4KU2kgbGEgZGF0ZSBkZSBuYWlzc2FuY2UgZHUgbWRlY2luZSBtYW4gU0lUVElORyBCVUxMIGRlbWV1cmUgYXBwcm94aW1hdGl2ZSAoMTgzMyAoPykgICAxODM0ID8pIHNlbG9uIGwncmUgY2hydGllbm5lLCBlbiByZXZhbmNoZSBsYSBwdWJsaWNhdGlvbiBkJ3VuZSBiYW5kZSBkZXNzaW5lIGZyYW5haXNlIGxhYm9yZSAgcGFydGlyIGR1IGhyb3MgaW5kaWVuIGVzdCBiaWVuIHByY2lzZSA6IDcgb2N0b2JyZSAxOTQ4LiBVbiBqZXVkaSwgam91ciBzYW5zIGNvbGUgbGFxdWUgbWFpcyBwYXMgc2FucyByZWxpZ2lvbi4uIApXb3JrIG5vbWlrYWlzLCBoYW5hbWkgZXZlbnRzLCBib3VuZW5rYWksIG5vbWlob3VkYWkgYW5kIGJlZXIgZ2FyZGVucywgYmFycyBvcGVuIHdoZW5ldmVyLCBib296ZSBpbiBjb252ZW5pZW5jZSBzdG9yZXMgb3BlbiAyNCA3LCBvcGVuIGNvbnRhaW5lciBsYXdzLCBldGMuIFlvdSBjYW4gZ2V0IHdhc3RlZCBqdXN0IGFib3V0IHdoZXJldmVyIGFuZCB3aGVuZXZlciB5b3Ugc28gaW5jbGluZWQgYW5kIEphcGFuIHByb3ZpZGVzIHBsZW50eSBvZiBleGN1c2VzLikuIApUaGlzIGZ1bmN0aW9uIHRha2VzIGFzIGlucHV0IGFueSByZWNvcmQgdGhhdCBoYXMgYSBmaWVsZCBsYWJlbGVkICJudW0iIHdpdGggdGhlIHR5cGUgSW50LiAKU29tZXRoaW5nIGluIG15IGJyYWluIGZlbHQgc28gc2FkIGZvciBoaW0uIApIb2xkIDUgMTAgc2Vjb25kcywgYW5kIHRoZW4gInB1bGwiIHlvdXJzZWxmIGJhY2sgdXByaWdodCB1c2luZyB0aGUgZnJvbnQgbXVzY2xlcyBiZWxvdyB5b3VyIHJpYnMuIERvIDEwIHNldHMgcGVyaW9kaWNhbGx5IGR1cmluZyB0aGUgZGF5Li4gClRoaXMgb25lIG5pZ2h0LCBhIGdyb3VwIG9mIHlvdXRocyBzdGFydGVkIHNoaW5pbmcgYSBsYXNlciBwb2ludGVyIGludG8gbXkgcm9vbS4gSSBoYWQgbXkgbGlnaHQgb2ZmLCBhbmQgY291bGQgb25seSBoZWFyIHRoZW0gYXQgdGhpcyBzdGFnZS4gClRoZXNlIGFyZSBzb21lIGdyYWRlIEEgc2hpdHR5IHBhcmVudHMuIAoiSGUgd2FudGVkIHRvIGJyaW5nIE1hY3kncyB0byB0aGUgQnJvbngsIiBzYWlkIFBvbGljZSBPZmZpY2VyIEVyaWNhIEJ1a293aWVja2ksIHdobyB3cmFuZ2xlZCB0aGUgcHJvamVjdC4KSGVsbCwgbWF5YmUgeW91J3JlIHNlY3JldGx5IGEgZ2VuaXVzIGF0IGl0LCBsaWtlIFJhaW4gTWFuIGF0IHRoZSBibGFja2phY2sgdGFibGUuLiAKT25jZSByaWNlIGlzIGRvbmUsIGZsdWZmIGEgYml0IHdpdGggYSBmb3JrIGFuZCBnZXQgb3V0IHlvdXIgd29rLiBJZiB5b3UgZG8gbm90IGhhdmUgYSB3b2ssIGdldCBvbmUuIFRoZXkgYXJlIGNoZWFwIGFuZCBiZXR0ZXIgdGhhbiBhbnl0aGluZyBlbHNlIHlvdSBjb3VsZCB1c2UgZm9yIHRoaXMgcHVycG9zZSwgYW5kIG1ha2UgdGhlIGJlc3QgZGVlcCBmcnlpbmcgdmVzc2VsLiBJdCB3b3J0aCBpdCwgSSBwcm9taXNlLgpXaGl0ZSBpbnZhZGluZyBvbiB0aGUgdG9wIGlzIHNvbWUga2luZCBvZiBvdmVycGxheSB1bmRlciB0aGlzIHNpdHVhdGlvbiwgYnV0IHlvdSBtYWRlIGEgYmx1bmRlciBpbiBtb3ZlIDYzIChzaG91bGQgaGF2ZSBiZWVuIEwxNCkuIFdoaXRlIGxpdmVkIGFuZCBldmVuIGF0dGFja2VkIHlvdS4uIApXb3VsZCB3b3VsZCB5b3UgZG8/QW5kIEkgc2hvdWxkIG1lbnRpb24gdGhhdCBhIGNvdXBsZSBtb250aHMgYWdvIGhlIGVtYWlsZWQgbWUgd2hlbiBoZSB3YXMgYXQgd29yayBzYXlpbmcgdGhhdCBoZSB3YXMgdW5oYXBweSBhdCBoaXMgam9iIGFuZCB0aGF0IGhlIHdhbnRzIHRvIHB1cnN1ZSBwb2tlciBvciBnb2xmIGFuZCBhc2tlZCBpZiBJIHdvdWxkIGJlIG9rIHdpdGggaXQuIEkgd3JvdGUgYmFjayBzYXlpbmcgSSB3b3VsZG4ndCBiZSBoYXBweSBhYm91dCBpdCBhbmQgaWYgdGhhdCdzIHdoYXQgaGUgcmVhbGx5IHdhbnRlZCB0byB0bywgdGhlbiB3ZSB3b3VsZCBuZWVkIHRvIGRvIGNvdXBsZXMgdGhlcmFweSB0b28gc28gSSB3b3VsZG50IGdvIGNyYXp5IGZyb20gbXkgdHJ1c3QgaXNzdWVzLiBIZSBuZXZlciByZXNwb25kZWQgYW5kIHdlIG5ldmVyIHRhbGtlZCBhYm91dCBpdCBhZ2Fpbi4gR3Vlc3MgaGUganVzdCBkZWNpZGVkIHRvIGdvIHdpdGggb3QgYW55d2F5cyBhbmQgbm90IHRlbGwgbWUgc28gaGUgd291bGRudCBoYXZlIHRvIGRvIGNvdXBsZXMgdGhlcmFweT8KMjAxOC4gCk5vIG1hdHRlciBob3cgeW91IGF0dGVtcHQgdG8gYmFuIGl0IHlvdSB3aWxsIG5vdCBzdG9wIHRoZW0gZnJvbSBzcHJlYWRpbmcgdGhlaXIgaWRlYXMuIApXaGV0aGVyIHRoZSBzaG93IHRha2VzIHBsYWNlIGluIGEgcmVhbCBzZXR0aW5nIHdpdGggcmVhbCBwZW9wbGUgKG11Y2ggbGlrZSBhIGRvY3VtZW50YXJ5KSwgc2hvb3RzIGluIGZyb250IG9mIGEgbGl2ZSBzdHVkaW8gYXVkaWVuY2UgdGhhdCBwYXJ0aWNpcGF0ZXMgaW4gdGhlIHByb2dyYW0sIG9yIHVzZXMgaGlkZGVuIHN1cnZlaWxsYW5jZSwgcmVhbGl0eSBUViByZWxpZXMgb24gdGhlIGNhbWVyYSBjYXB0dXJpbmcgZXZlcnl0aGluZyBhcyBpdCBoYXBwZW5zLiAKMyBtb3MgYWdvICsgQnkgSm9obiBGdW5rLCBUaGUgUGxhaW4gRGVhbGVyCkhvd2V2ZXIsIGl0IGlzIHF1ZXN0aW9uYWJsZSB3aGV0aGVyIHRoaXMgcHJpbmNpcGxlIGNhbiBiZSBhcHBsaWVkIHRvIGFsbCBkaXNwdXRlcyBhbmQgaW4gYWxsIHNpdHVhdGlvbnMuIApJbiAyMDE0IFN1aXQgVXAgUG9rZXIgTGVhZ3VlIGJlY2FtZSBhbiBhZmZpbGlhdGUgb2YgdGhlIEJhciBQb2tlciBPcGVuLiAKSSBoYXZlIGEgbWVldCBjb21pbmcgdXAgYW5kIEkgdHJ5aW5nIHRvIHF1YWxpZnkgZm9yIENvbGxlZ2lhdGUgTmF0aW9uYWxzLCBidXQgb25jZSB0aGF0IGRvbmUgSSB0aGluayBJIHdhbnQgYSB2YWNhdGlvbiBmcm9tIHNlcmlvdXNseSBwb3dlcmxpZnRpbmcgZm9yIGF3aGlsZS4gSSBtaWdodCBqb2luIGEgc3Ryb25nbWFuIGd5bSBhbmQgZGljayBhcm91bmQgd2l0aCB0aGUgZnVuIGVxdWlwbWVudC4gCkhlIHdhc24gcHV0IGluIGhpcyBwbGFjZS4gVGhlIHByb2Zlc3NvciBtYWRlIGFuIGFjY3VzYXRpb24gYWdhaW5zdCBGb3ggTmV3cyBzb21laG93IGJlaW5nIHJlc3BvbnNpYmxlIGZvciB0YXggYXZvaWRhbmNlIGRlc3BpdGUgaGlzIG93biBuYXRpb24gb2YgVGhlIE5ldGhlcmxhbmRzIGJlaW5nIG9uZSBvZiB0aGUgbGFyZ2VzdCB0YXggZG9kZ2VycyBvbiBlYXJ0aCwgbWFkZSBhIGJhc2VsZXNzIGFjY3VzYXRpb24gdGhhdCBoZSB3YXMgYWNjZXB0aW5nIGJyaWJlcyBmcm9tIGJpbGxpb25haXJlcywgbWFkZSBjbGFpbSBhYm91dCBUdWNrZXIgc2hvdyB0aGF0IGhlIGRpZG4gZGlzY3VzcyBpc3N1ZXMgdGhhdCBoZSBkaXNjdXNzZWQgYWxtb3N0IGV2ZXJ5IG5pZ2h0LCBhbmQgYnJvdWdodCB1cCBhIGNvbXBsZXRlIG5vbiBzZXF1aXR1ciBpbiBGb3ggTmV3cy4gSSB3b3VsZCBoYXZlIGxvc3QgbXkgc3RhY2sgdG9vLCBob25lc3RseS4KRWRpdCAyOiBzb21lIGd1eSBtZXNzYWdlZCBtZSB0aGlzIGFuZCBJIGp1c3QgPz8/Pz8/Pz8/PyBJIGFic29sdXRlbHkgbG92ZSB3aGF0IEkgZG8gYW5kIEkga25vdyBJLCBpbiB0aGUgZW5kLCBkbyBoZWxwIHBlb3BsZS4gSSBoYXZlIG5vIGNvbnRyb2wgb3ZlciB0aGUgY29zdHMuIEkganVzdCBsb3ZlIG1lZGljYWwgaW1hZ2luZywgaXQgbXkgb25lIHJlYWwgcGFzc2lvbiBpbiBsaWZlLiBJIHdpc2ggSSBjb3VsZCBtYWtlIGl0IGNoZWFwZXIuIEkgdHJ5IHRvIHZvdGUgZm9yIHBlb3BsZSB0aGF0IEkga25vdyB3YW50IHRvIG1ha2UgdGhhdCBhIHJlYWxpdHkuCk1pZ2h0IHdhbnQgdG8gbWFrZSBzdXJlIHlvdXIgY2FtZXJhIGlzIG9rYXkhIFRoZSBwaWVjZSBvbiB0aGUgcmlnaHQgaGFzIHNldmVyYWwgcG9pbnRzIHJlcGVhdGVkIGF0IGVxdWFsIGRpc3RhbmNlcy4gClRoZSBkZXZpY2Ugd2lsbCBjb3N0IG5lYXJseSAkMSwwMDAgd2hlbiBpdCdzIHJlbGVhc2VkIGxhdGVyIHRoaXMgeWVhciwgd2l0aCByZXBsYWNlbWVudCBjYXBzdWxlcyBydW5uaW5nIGFueXdoZXJlIGZyb20gJDE1IHRvICQ2MC4KRWFybGllciBpbiB0aGUgeWVhciwgdGhlIHdob2xlIGluc2lkZSBvZiB0aGUga25lZWNhcCB3b3VsZCBodXJ0IGJlY2F1c2UgdGhlIGtuZWVjYXAgd2FzIG5vdCB0cmFja2luZyBjb3JyZWN0bHkuIApTbyBub3QgYSBsb3Qgb2YgZXZpZGVuY2UgdGhhdCB3YXMgcHVibGlzaGVkLiAKVGhlIEV4cGVydHMgQWdyZWUKSGlzIGRyaXZlIHRvIHdpbiBpcyByb290ZWQsIGFib3ZlIGFsbCwgaW4gdGhlIHZvaWQgbGVmdCBieSBoaXMgbW90aGVyJ3MgZGVhdGguIApSZWFsbHkgZW1waGFzaXplcyBnb29kIGludGFrZSwgYW5kIHRoZW4gZW1wbG95ZXJzIGFuZCBjbGllbnRzIGFuZCBjbyB3b3JrZXJzIGp1c3Qgd2FudCBpdCB0byBiZSBkb25lIGFzIGZhc3QgYXMgcG9zc2libGUuIApOb3cgaWYgb25lIHdhbnRzIHRvIHNlZSB3aGF0J3MgaGFwcGVuaW5nIG9uIHRoZSBsb25nIGRpc3RhbmNlIGZyb250IGZvciAyMDEwIHRoZXkgbmVlZCBvbmx5IGxvb2sgdGhyb3VnaCB0aGlzIHRocmVhZC4uIApJbiB0dXJuLCB5b3UgbXVzdCBhdHRlbXB0IHRvIHJlc2VsbCBzcGFjZSBvbiB0aGUgcGFydGljdWxhciBzZXJ2ZXIuIApJIGhhdmUgYSBtYXNzaXZlIGJhY2tsb2cgb2YgU3RlYW0gZ2FtZXMsIGFsbW9zdCBhbGwgc2luZ2xlIHBsYXllci4gTW9zdCBvZiB3aGljaCBlYXNpbHkgY291bGQgYmUgcGxheWVkIGZvciBodW5kcmVkcyBvZiBob3VycyBiZWZvcmUgdGhleSBnZXQgc3RhbGUuIApDJ2VzdCBiZWF1Y291cCBiZWF1Y291cCBtaWV1eCBxdWUgZGUgbm9tYnJldXggcmVzdGF1cmFudHMgcGFyaXNpZW5zICBsYSBtb2RlLCB2b2lyZSB0b2lscy4gCkNvbGRoYXJib3VyIGlzIHRoZSByZWFsbSBvZiBNb2xhZyBCYWwsIHRoZSBhbnRhZ29uaXN0IG9mIHRoZSBtYWluIHF1ZXN0IGxpbmUuIFlvdSBzaG91bGQgYmUgYWJsZSB0byBwb3J0IHRvIHlvdXIgbWFpbiB0b3duIHZpYSB3YXlzaHJpbmUuIFdoaWNoIHRvd24geW91IGdvIHRvIGRlcGVuZHMgb24geW91ciBmYWN0aW9uLiBJZiB5b3UgQUQsIGdvIFZ1bGtoZWwgR3VhcmQgaW4gQXVyaWRvbi4gREMgZ29lcyB0byBEYWdnZXJmYWxsIGluIEdsZW51bWJyYS4gRVAgZ29lcyB0byBEYXZvbiBXYXRjaCBpbiBTdG9uZWZhbGxzLiBPbmNlIHlvdSB0aGVyZSwgeW91IHNob3VsZCBiZSBhcHByb2FjaGVkIGJ5IGFuIE5QQyBuYW1lZCBIb29kZWQgRmlndXJlIHByZXR0eSBxdWlja2x5LiBGb2xsb3cgdGhlaXIgcXVlc3QgdG8gc3RhcnQgdGhlIG1haW4gc3RvcnkuClRoZXNlIHNpbXBsZSBtZWFzdXJlcyBjb3VsZCBwcmV2ZW50IHlvdSBmcm9tIGJlaW5nIG91dCAkMjAuIApFdmVuIGJldHRlciwgdGhlIGZpcnN0IG1vbnRoIG9yIHR3byBhZnRlciBKYXBhbmVzZSBQUzIgYW5kIFBDIGxhdW5jaCwgc28gbWFueSBwZW9wbGUgcGF0Y2hpbmcgdGhhdCB0aGUgc2VydmVyIHdvdWxkIGNyYXNoLCBzbyBldmVyeW9uZSB3YXMgaGF2aW5nIHRyb3VibGUgZXZlbiBwYXRjaGluZyB0byBsb2cgaW50byB0aGUgZ2FtZS4gVGhleSBtYWRlIGxpa2UgdGhlIGZpcnN0IDIgbW9udGhzIGZyZWUgYmVjYXVzZSBvZiBjb25uZWN0aW9uIGlzc3Vlcy4gQXVjdGlvbiBIb3VzZSBhbHNvIGNyYXNoZWQgYWxsIHRoZSB0aW1lIHVudGlsIHRoZXkgcmVkdWNlZCB0aGUgbnVtYmVyIG9mIGxpc3RpbmdzIHBlciBjaGFyYWN0ZXIgZnJvbSA4IHRvIDcuClRoZXNlIHR3byBndXlzLCBQaWVycmUgKHllbGxvdykgYW5kIEpvbmF0aGFuIChvcmFuZ2UpLCBhcHBlYXIgaW4gYXdrd2FyZCBwb3NlcyB0aGF0IGFyZSB0YWcgbGluZWQgd2l0aCBwaHJhc2VzIGFib3V0IHByb3BlciBldGlxdWV0dGUsIHNvY2lhbCBpbnRlcmFjdGlvbiwgYW5kIHRoZSBvY2Nhc2lvbmFsIG1vdGl2YXRpb25hbCBwaHJhc2UuIFRoZSBqdXh0YXBvc2l0aW9uIG9mIHdlaXJkL3NleHVhbCBpbWFnZXMgd2l0aCBwaHJhc2VzIGFib3V0IHByb3BlciBtYW5uZXJzIGFuZCB0eXBpY2FsIGxpZmUgYWx0ZXJzIHRoZSBtZWFuaW5nIG9mIHRoZSBwaHJhc2VzIGFuZCBpcyBnZW5lcmFsbHkgcHJldHR5IGZ1bm55LiAKSWYgaXQgd2VyZW4gZm9yIHRoZSB0d28gbWVuLCBvbmUgYWxsZWdlZGx5IGhpcyBwZXJzb25hbCB0cmFpbmVyIGZvciBhbiB1cGNvbWluZyBtdXNpYyB2aWRlbywgd2UgbWlnaHQgbm90IGhhdmUgYWxsIHRoZSBpbmZvIHdlIGRvIG5vdy4uIApTIGRlIHZvdHJlIGVuZmFuY2UgbmUgcmV2aWVuZHJvbnQgamFtYWlzCkh5bWFuIHB1dCB0aGUgTWFwbGUgTGVhZnMgYWhlYWQgMSAwLCBwb2tpbmcgYSBsb29zZSBwdWNrIGluIGZyb250IG9mZiBhIGRlZmxlY3Rpb24gYnkgTWFybmVyIHBhc3QgTGVobmVyIGZvciBoaXMgMTR0aCB3aXRoIDY6MjcgbGVmdCBpbiB0aGUgZmlyc3QuIEh5bWFuIGhhcyBmb3VyIGdvYWxzIGFuZCBmaXZlIHBvaW50cyBpbiBoaXMgbGFzdCBzaXggZ2FtZXMuClRoaXMga2luZCBvZiAiZXh0b3J0aW9uIiBvbiBhIGpvaW50IHZlbnR1cmUgaXMgdmVyeSBiYWQgb3B0aWNzLiAKSG93IHRvIENsZWFuIFlvdXIgVmVnYXMgQ2FzaW5vIFBva2VyIENoaXBzClp1bXZhdWx0ICAyOCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpUaGFuayB5b3UgYWxsIGZvciB5b3VyIHJlY29tbWVuZGF0aW9ucyBhbmQgSSBjYW4gb3ZlcnN0YXRlIGp1c3QgaG93IGF3ZXNvbWUgeW91ciBjaXR5IGlzISBXZSB3aWxsIGRlZmluaXRlbHkgYmUgYmFjaywgdGhhbmsgeW91IC9yL01hZGlzb253aSEhSGV5IHRoZXJlIE1hZGlzb25pdGVzIChNYWRpc29uZXJzPyBNYWRpc29ucz8pLCBJIGJlIHZpc2l0aW5nIHlvdXIgd29uZGVyZnVsIGNpdHkgSnVuZSAxOCAyMSBmb3IgYSBzaG93IGF0IEhpZ2ggTm9vbiBTYWxvb24uIEkgd2FudCB0byBtYWtlIHRoZSBtb3N0IG9mIG15IGRvd24gdGltZSB3aGVuIEkgdGhlcmUgc28gSSB3YXMgaG9waW5nIHRoYXQgc29tZSBsb2NhbHMgY291bGQgaGVscCBhbnN3ZXIgc29tZSBxdWVzdGlvbnMgb2YgbWluZS4KSSBzdGlsbCB0aGluayB0aGF0IHB1dHRpbmcgcHJlc3N1cmUgb24gdGhlIEFHIG92ZXIgdGhlIHByb3NlY3V0aW9uIGRlY2lzaW9uIHdhcyB3cm9uZy4gSG93YXJkIEFuZ2xpbiBzdWdnZXN0cyBpbnN0aXR1dGluZyB3aGF0IGNhbGxlZCBhICJTaGF3Y3Jvc3MgZXhlcmNpc2UiIGluIHRoZSBVSzogaXQgYSBmb3JtYWwgd2F5IGZvciB0aGUgQUcgdG8gY2FudmFzcyB0aGUgcmVzdCBvZiBnb3Zlcm5tZW50IHRvIHByb3ZpZGUgdGhlaXIgaW5wdXQgKGFyZSB0aGVyZSBhbnkgcHVibGljIGludGVyZXN0IGNvbnNpZGVyYXRpb25zPykgaW4gd3JpdHRlbiBmb3JtLgpSb21hbnNhbXVyYWkgdQpMYXRlIGdhbWUsIHN5bmVyZ3kgcGFsZXMgaW4gY29tcGFyaXNvbiB0byBBT0UgQ0MgYW5kIERhbWFnZS4gWW91ciBmdWxsIEh1bWFuIHN5bmVyZ3kgZG9lc24gcmVhbGx5IG5lZWQgdG8gYmUgdGhlcmUgaWYgeW91IGhhdmUgYSBUaWRlaHVudGVyIG9yIGFuIEVuaWdtYSBzaXR0aW5nIG9uIHRoZSBiZW5jaC4gCkluIEphbnVhcnksIE5FTyBiZWNhbWUgdGhlIGZpcnN0IENhbmFkaWFuIHN0b2NrIGV4Y2hhbmdlIHRvIHNpZ24gYSBDRU8gU3RhdGVtZW50IG9mIFN1cHBvcnQgZm9yIHRoZSAsIGFuIGluaXRpYXRpdmUgc3BlYXJoZWFkZWQgYnkgdGhlIEV1cm9wZWFuIFVuaW9uIGluIHBhcnRuZXJzaGlwIHdpdGggVU4gV29tZW4gYW5kIFVOIEdsb2JhbCBDb21wYWN0LiAKRGEgc2V0dGVtYnJlIDIwMTYgaW5jb21pbmNpYSBhIGNvbGxhYm9yYXJlIGNvbiBHYWV0YW5vIERvbmF0b25lIG5lbGwnYW1iaXRvIGRlbGxlIERhbnplIEFyZ2VudGluZSBlZCBpbnNpZW1lIGxhdm9yYW5vIGNvbWUgY29yZW9ncmFmaSBkaSBUYW5nbyBuZWwgZmlsbSAiVW4gTmF0YWxlIGFsIFN1ZCJkaSBNYXNzaW1vIEJvbGRpIGUgYSBOb3ZlbWJyZSBuZWwgTXVzaWNhbCAiRXZpdGEiIC4gCktlbXBsZSdzIG9uIHNpdGUgY2xpbmljIGFsc28gb2ZmZXJzIG9uIHNpdGUgaHlnaWVuZSBhcHBvaW50bWVudHMgKGNsZWFuaW5ncywgeCByYXlzLCByaXNrIGFzc2Vzc21lbnRzKSBhdCB0aGUgY2xpbmljIGZvciB1bmluc3VyZWQsIHVuZGVyaW5zdXJlZCBhbmQvb3IgdW5kZXJzZXJ2ZWQgY2hpbGRyZW4gaW4gQ2VudHJhbCBPcmVnb24uIApTb3JyeSBpZiBJIGRvbiBtYWtlIGFueSBzZW5zZS4KUmVwcmVzZW50YXRpdmVzIGZyb20gMyBuYXRpb25zIGp1c3QgaGFkIGEgc3VtbWl0IG9mIHNvcnRzIGF0IHRoaXMgc21hbGwgdG93biB3aGVyZSB0aGUgYWR2ZW50dXJlcnMgZXhwbGFpbmVkIHdoYXQgaGFwcGVuZWQuIFRoZSBtb3N0bHkgaHVtYW4gZW1waXJlIG9mIEFyZ29zIHRyaWVkIHRvIGJlbGl0dGxlIHRoZSBldmVudHMgYXMgYSBmZXcgZmFuYXRpY3MgY29tbWl0dGluZyB0ZXJyb3Jpc20uIFRoZSBFbHZlbiBuYXRpb24gb2YgdGhlIEdvbGQgVmFsbGV5IGlzIHRha2luZyB0aGVzZSB0aHJlYXRzIHZlcnkgc2VyaW91c2x5IGFuZCBhZHZpc2VzIGNhdXRpb24uIFRoZXkgd2FudCB0byBkaWcgZGVlcGVyIGludG8gdGhlIHJ1aW5zIHVuZGVyIENvcHBlcnRvbiBidXQgdGhlIHRvd24gaXMgb24gQXJnb3NpYW4gc29pbCBzbyB0aGV5IGZvcmJpZCBpdC4gVGhlIER3YXJ2ZW4gY2l0eSBzdGF0ZSBvZiBJcm9uIEdhdGUgaXMgY29uZmlkZW50IHRoYXQgaWYgdGhlcmUgaXMgc29tZSBraW5kIG9mIEtyYWtlbiB0aHJlYXQgdGhleSB3aWxsIGJlIHNhdmUgZGVlcCB1bmRlcmdyb3VuZCBpbiB0aGVyZSBmb3J0cmVzcyBjaXR5LiBJIGhhdmUgYW4gaWRlYSB0aGF0IGZ1cnRoZXIgaW52ZXN0aWdhdGlvbiBvZiB0aGUgcnVpbnMgd2lsbCByZXZlYWwgdGhhdCB0aGF0IHRoZXkgdXNlZCB0byBiZSBhIGxhcmdlIGNhc3RsZSB1bnRpbCB0aGV5IHJlc2lzdGVkIHRoZSBrcmFrZW4gbWFueSAodGhvdXNhbmRzPykgb2YgeWVhcnMgYWdvIGFuZCB0aGF0IHRoZSBpbmhhYml0YW50cyB3ZXJlIHdvcmtpbmcgb24gc29tZSBraW5kIG9mIHdlYXBvbiBvciBtYWdpYyB0byBvdmVydGhyb3cgaXQuIFRoZSBrcmFrZW4gbGFpZCB3YXN0ZSB0byBtb3N0IG9mIHRoZSBjYXN0bGUgYW5kIGJ1cmllZCB3aGF0IHJlbWFpbmVkIGFzIHdlbGwgYXMgY3Vyc2luZyB0aGUgaW5oYWJpdGFudHMgdG8gdW5kZWF0aCBidXQgZGlkbiBmaW5kIHdoYXRldmVyIGl0IGlzIHRoZXkgd2VyZSB3b3JraW5nIG9uLiBXaGF0IGlzIHNvbWV0aGluZyB0aGV5IGNvdWxkIGJlIHdvcmtpbmcgb24gdGhhdCB3b3VsZCBiZSBhIGxlZ2l0aW1hdGUgdGhyZWF0IHRvIGEgYmVhc3Qgb2YgdGhlIEtyYWtlbiBtYWduaXR1ZGU/ClNoZSBsb3ZlZCBjaG9jb2xhdGUgbWludHMgYW5kIGNob2NvbGF0ZSBhbG1vbmRzLCBhbmQgaGVhZCBjaGVlc2UgZm9yIHNvbWUgR29kIGZvcnNha2VuIHJlYXNvbiwgc2xvdCBtYWNoaW5lcywgYnVmZmV0IHJlc3RhdXJhbnRzLCByZWFkaW5nLCBnb29kIG1vdmllcywgZHJpdmluZyB0cmlwcyBhbmQgc2hvcHBpbmcgdHJpcHMgYWxsIG9mIHdoaWNoIGlzIG5vdCBpbiBhbnkgcGFydGljdWxhciBvcmRlci4gU2hlIGNoZXJpc2hlZCB0aGUgdGltZSBzaGUgaGFkIHdpdGggQnJpYW4gd2hvIHNob3dlZCBoZXIgc29tZSBsaXZlbHkgdGltZXMgYXMgdGhleSB0cmF2ZWxlZCB0aGUgd29ybGQuIEFzIHNoZSB3YXMgYSBjb2xvdXJmdWwgcGVyc29uLCBmbG93ZXJzIGFyZSB3ZWxjb21lLiAKU28gc2hlIHN0YXJ0ZWQgZG9pbmcgc29tZSByZXNlYXJjaC4gIkkgcmVhZCBwc3ljaGlhdHJpYyBib29rcyBhbmQgd2VudCBvbiBpbnRlcm5ldCBjaGF0IHNpdGVzIHdoZXJlIHNleCBhZGRpY3RzIHRlbGwgZWFjaCBvdGhlciBhYm91dCB0aGVpciBzdWZmZXJpbmcsIGxpa2UgZHJ1ZyBhZGRpY3RzIG9yIGFsY29ob2xpY3MsIiBzaGUgZXhwbGFpbmVkLiAKU2lsaWNvbiBpcyBhIGNyeXN0YWxsaW5lIHNlbWljb25kdWN0b3IgLCBub3QgYW4gaW5zdWxhdG9yLiBCeSBhZGRpbmcgaW1wdXJpdGllcyBjYWxsZWQgZG9wYW50cyBpdCBjYW4gYmUgbWFkZSByZXNpc3RpdmUsIGNvbmR1Y3RpdmUsIG9yIGludG8gYWN0aXZlIGRldmljZXMgbGlrZSB0cmFuc2lzdG9ycy4gClVubGlrZSB0aGUgaGVybyBvZiB0aGUgZmlsbSwgd2hvIGFnb25pc2VzIGJlZm9yZSBqb2luaW5nIHVwLCBCbG9jaCBoYWQgbm8gcXVhbG1zIGFib3V0IHdoYXQgaGUgZGlkOiAiVGhlIG9ubHkgcGVvcGxlIHdobyB0aGluayBpdCBpcyBjaGVhdGluZyBhcmUgcGVvcGxlIHdobyBkb24ndCB1bmRlcnN0YW5kIGl0LiBZb3UncmUganVzdCB1c2luZyB5b3VyIG1pbmQuIgpJIHNxdWF0IDMgdGltZXMgYSB3ZWVrIGJ1dCB0d28gb2YgdGhlIGRheXMgYXJlIHZhcmlhdGlvbnMuIE15IGxhc3Qgc3F1YXQgY3ljbGUgSSBoYWQgY29tcCBzcXVhdHMgb24gTW9uZGF5LCBwYXVzZXMgb24gV2VkbmVzZGF5IGFuZCBoaXAgY2lyY2xlIGdvYmxldCBzcXVhdHMgb24gU2F0dXJkYXkuIFNhdyBhIDMwbGJzIGluY3JlYXNlIG92ZXIgMTIgd2Vla3Mgc28gSSdtIGFsbCBmb3Igc3F1YXR0aW5nIDN4IGEgd2VlayBhcyBsb25nIGFzIGl0J3MgZG9uZSByaWdodC4KQXJlIHRoZXJlIGFueSBleHBhdCBiYXJzIG9yIHBsYWNlcyB3aXRoIGEgbmljZSBzZWxlY3Rpb24gb2YgbG9jYWwgYmVlcnM/IEhvdyBtdWNoIGRvZXMgYSBwaW50IHJ1biBvbiBhdmVyYWdlPyBJcyBldXJvIHRoZSBwcmltYXJ5IGN1cnJlbmN5PwpTbyBJIHBsYW50IG15IGZlZXQsIGFuZCBzb3J0IG9mIHJhdGNoZXQgbXkgdXBwZXIgYm9keSBkb3duIHRvIGNhdXNlIHRoZSBhcmNoIGFuZCBwaW4gbXlzZWxmIHRvIHRoZSBiZW5jaCB1bmRlciB0aGUgYmFyLiAKTGV0enRlIFdvY2hlIGZocnRlIHVucyBlaW4gVGFnZXNhdXNmbHVnIGluIGRhcyBCaW9zcGhyZW4gUmVzZXJ2YXQgdm9uIExvcyBUaWxvcy4gQmVpIHN0cmFobGVuZGVtIFNvbm5lbnNjaGVpbiBmdWhyZW4gd2lyIHZvbiBMb3MgTGxhbm9zIFJpY2h0dW5nIFNhbnRhIENydXogZGUgTGEgUGFsbWEuIEVpbiBrbGVpbmVyIEFic3RlY2hlciB6dW0gTWlyYWRvciBkZSBsYSBDb25jZXBjaW9uIGJvdCBlaW5lbiB3dW5kZXJiYXJlbiBSdW5kYmxpY2sgYmVyIGRlbiBPc3RlbiBkZXIgSW5zZWwgbWl0IGRlciBIYXVwdHN0YWR0IHp1IHVuc2VyZW4gRmVuLiBVbmQgd2llIGRlciBadWZhbGwgZXMgd29sbHRlLCBlcmxlYnRlbiB3aXIgZG9ydCBkZW4gU3RhcnQgaHVuZGVydGVyIEJyaWVmdGF1YmVuLiBFaW4gdG9sbGVzIEVybGVibmlzLCB3aWUgc2ljaCBkaWUgVGF1YmVuIHp1IFNjaHdybWVuIGZvcm1pZXJ0ZW4gdW5kIGVpbmVuIHd1bmRlcmJhcmVuIFRhbnoiIGFtIEhpbW1lbCB2b2xsZmhydGVuLgpTZSBubyBzb3ViZXIsIHZvYyBwb2RlIHRlciBhIG1vIHZlbmNlZG9yYSBlIG5lbSBzZSBsaWdhciBkaXNzbyEgRW50bywgYW50ZXMgZGUgY29tZWFybW9zIGEgZmFsYXIgc29icmUgcXVhbHF1ZXIgY29pc2EgZXNwZWNmaWNhIGRvIHBva2VyIGZlY2hhZG8sIHZhbW9zIGVzdGFiZWxlY2VyIGEgaGllcmFycXVpYSBkYXMgbW9zLCBjb21lYW5kbyBjb20gYSBtZW5vcjouIApJbiBmYWN0LCBDcm9vayBjYWxsZWQgdGhlIGNoaWVmIGV4ZWN1dGl2ZSBvZiB0aGUgY29tcGFueSBNdXJwaHkgd29ya3MgZm9yIGFuZCBtb3N0IG9mIHRoZSB1cHBlciBtYW5hZ2VtZW50LiAKVGhlIGtpbmQgeW91IGNvdWxkIGNodWNrIDEuNSBtZXRyZSBsb2dzIGluLkFzIHdlIHdhdGNoZWQgdHYgdGhlIGZpcmUgZGltbWVkIHNvIEkgd2VudCBvdXQgYW5kIGdyYWJiZWQgYSBuZXcgbG9nLCBkdXN0aW5nIGJ1Z3MgYW5kIHdoYXQgbm90IG9mZiB0aGUgbG9nIChqdXN0IGEgZmFjdCB0aGVyZSdzIGdvbm5hIGJlIGJ1Z3MgYW5kIHNwaWRlcnMgYXJvdW5kIGluIGEgZ2lhbnQgcGlsZSBvZiB3b29kKUkgdGhyZXcgdGhlIGxvZyBvbiBhbmQgYWxsIHdhcyBnb29kIGZvciBhYm91dCA1IG1pbnV0ZXMuIApJdCBoYXMgYSBsb3QgdG8gdGVhY2ggYWJvdXQgc3BlYWtpbmcgaG9uZXN0bHksIGFuZCBhYm91dCBtYWtpbmcgcmVsYXRpb25zaGlwcyBhIHByaW9yaXR5IGV2ZW4gaWYgdGhleSBub3QgbW9ub2dhbW91cy4gSXQgYWxzbyBleHBsYWlucyBhIGxvdCBhYm91dCBob3cgdG8gZXN0YWJsaXNoIGhlYWx0aHkgYm91bmRhcmllcyBhbmQgc3BlYWsgaG9uZXN0bHkuLiAKRFJNIEZSRUUuIE5vIGFjdGl2YXRpb24gb3Igb25saW5lIGNvbm5lY3Rpb24gcmVxdWlyZWQgdG8gcGxheS4gCkNhdXNhbCBhdHRyaWJ1dGlvbiBzdHJpdmVzIHRvIGV4cGxhaW4gd2h5IGFuZCBob3cgcGVvcGxlIG1ha2UgaW5mZXJlbmNlcyBhYm91dCB0aGVpciBvd24gYXR0aXR1ZGVzIGFuZCByZWFzb25zIGZvciB0aGVpciBiZWhhdmlvci4gCk1pbGQgVHJhdW1hdGljIEJyYWluIEluanVyeQpJIHdhcyBhYmxlIHRvIGdldCBBQSBhbGxpbiBwcmUgZmxvcCB2cy4gClRoZSBvbmx5IHJlYXNvbiBJIHdhdGNoZWQgQklHIGluIHRoZSBmaXJzdCBwbGFjZSBpcyBiZWNhdXNlIGl0IHdhcyBtYXJrZXRlZCBhcyBhIGZhbWlseSBjbGFzc2ljIGJ5IGNvdW50bGVzcyBwZW9wbGUsIGluY2x1ZGluZyBDb21tb24gU2Vuc2UuIEluIHRoaXMgY2FzZSwgZXZlcnlvbmUgZ290IHRoYXQgd3JvbmcuIApUaGlzIGlzIHdoeSBtb3N0IHN0cmVldCBjcmFwcyBnYW1lcyBhcmUgcGxheWVkIGFnYWluc3Qgd2FsbHMuIEdlbmVyYWxseSwgeW91J2xsIGJlIGEgZmV3IGZlZXQgYXdheSBhbmQgcm9sbCBhZ2FpbnN0IHRoZSB3YWxsLCBvciBzb21lIG90aGVyIGtpbmQgb2YgYmFja2Ryb3AuLiAKWWVhaCwgcGkgaXMgb25lIG9mIHRob3NlIG15c3RlcmlvdXMgdGhpbmdzIHRoYXQganVzdCBrZWVwcyBwb3BwaW5nIHVwIGluIHRoZSB1bml2ZXJzZSwgbGlrZSBRIGZyb20gU3RhciBUcmVrLiBJbiB0aGlzIGNhc2UsIGFzc3VtaW5nIHRoYXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBwYXBlciBjbGlwcyB5b3UgZHJvcHBlZCBpcyBjb21wbGV0ZWx5IHJhbmRvbSwgYWxsIG9mIHRoZWlyIGFuZ2xlcyBhbmQgbG9jYXRpb25zIHdpbGwgdGVuZCB0byBldmVuIG91dC4gCkluIGdvb2Qgd2VhdGhlciBJIGtlZXAgdGhlIGRvb3Igb3Blbi4gRG9uIHJlbHkgb24geW91ciBzaGVsdGVyIGZvciB3YXJtdGguVGhlcmUgYXJlIGEgdG9uIG9mIGdvb2QgVUwgc2hlbHRlciBvcHRpb25zIG91dCB0aGVyZS4gCkkgaGF2ZSBhIDE5ODUgTWVyY2VkZXMgQmVueiwgMTkwRCBPTSA2MDIuOTExLCBJIGdldCA0NSA1MG1wZywgY2FuIHJ1biBncmVhc2UgKGFmdGVyIG1hcmtldCBmaWx0ZXIgdXBncmFkZSBhbmQgc2Vjb25kIGdyZWFzZSB0YW5rKSwgYW5kIEkgZ290IHRoZSBiYWJlIGZvciAxayBVU0QuIApXZWxsLCBJIGhhdmUgbm8gdGhlb3JpZXMgb24gYWdlbmRhcyBvciBpbnZhc2lvbnMuCkF1IG1vbWVudCBkdSBwZXRpdCBxdWVzdGlvbm5haXJlIHBvdXIgZmFpcmUgY29ubmFpc3NhbmNlLCBpbCBuZSBtZSBjb25uYWl0IHBhcywgbWUgZGVtYW5kZSBtb24gcG9pZHMgIjYya2ciIGV0IGVuY2hhbmUgImMnZXN0IHZvdHJlIHBvaWRzIGxlIHBsdXMgaGF1dCA/IiBjb21tZSBzaSBjJ3RhaXQgdW5lIHZpZGVuY2UuIChldWggbm9uLCBtZWMsIGMnZXN0IG1vbiBwb2lkcyBhcHJzIGF2b2lyIHBlcmR1IDEwIGtnLCBvbiBwZXV0IGRpcmUgcXVlIGRlcHVpcyB1bmUgdmluZ3RhaW5lIGQnYW5uZXMgYydlc3QgbW9uIHBvaWRzIGxlIHBsdXMgYmFzKS4gCkluIGEgbG90IG9mIHdheXMgdGhleSBhcmUgc3RvY2sgc3Rvcmllcy4gTWFueSBjbGFzc2ljIFR3aWxpZ2h0IFpvbmUgdGFpbHMgaGF2ZSBiZWVuIHJldG9sZCB3aXRob3V0IHJlZmVyZW5jZSBvciBhbGx1c2lvbiBhbmQgbWFueSBtb3JlIGhhdmUgYmVlbiBwYXJvZGllZCBhcyBjbGljaGUsIGJ1dCB3aGF0IG1hZGUgdGhlc2Ugc3RvcmllcyBzbyByZXNvbmFudCAoYXMgSSBzZWUgaXQpIHdhcyB0aGF0LCBpbiB0aGUgcG9zdCBXVzIgd29ybGQsIGNvbnZlbnRpb25hbGx5IGV4aXN0ZW50aWFsIGFueGlldGllcyB3ZXJlIG1hZGUgdGFuZ2libGUuSW4gdGhlIDE5NTAgQW1lcmljYSByZWNvbnN0cnVjdGlvbiBmcm9tIHRoZSBTZWNvbmQgV29ybGQgV2FyIHdhcyBwc3ljaG9sb2dpY2FsIGNvbXBhcmVkIHRvIHRoZSByZXN0IG9mIHRoZSB3b3JsZHMgdmVyeSBwaHlzaWNhbCByZWNvbnN0cnVjdGlvbi4gCldlIGRpZG4ndCBoYXZlIGVub3VnaCBwZW9wbGUgc28gd2UgZW5kZWQgdXAgaW52aXRpbmcgYSBndXkgd2UgdXNlZCB0byBwbGF5IHdpdGggeWVhcnMgYWdvLiAKU28gbmV1IHNpbmQgZGllIG5tbGljaCBhdWNoIG5pY2h0IG1laHIuIApKdXN0IGF3ZnVsLiBJIHNob3VsZCBmaXJlZCBoZXIgYWZ0ZXIgc2hlIHB1c2hlZCBzbyBoYXJkIG9uIHRoZSBHb2QgaXNzdWUgd2hlbiB3ZSB3ZXJlIG5lZ290aWF0aW5nIHRoZSBzY3JpcHQuLiAKTUFKIDogQ2V0IGFydGljbGUgdHJhaXRhbnQgb2NjYXNpb25uZWxsZW1lbnQgZCd1biB0ZXh0ZSBzdXIgbGUgImZsdXggaW5zdGluY3RpZiIsIHVuZSB0ZWNobmlxdWUgZGUgY29udGVudGlvbiBkZXMgbWVudHJ1ZXMsIG0nYSB2YWx1IHVuZSBhdHRhcXVlIGV0IGRlcyByZW1hcnF1ZXMgYWNlcmJlcyBkJ3VuZSBqZXVuZSBjb25uZSAoY2kgZGVzc3VzKSBldCBkZSBzZXMgdG91dG91cyBhZG1pcmF0ZXVycy4gClRoZSBhbW91bnQgb2YgdGltZXMgb24gUmVkZGl0IHdoZXJlIEkgYmVlbiB0b2xkIEkgInJlc3BvbnNpYmxlIiBvciAiYmVuZWZpdGVkIiBmcm9tIEFwYXJ0aGVpZCBpcyByYXRoZXIgYW5ub3lpbmcuCkdhcCBzaGFyZXMgbG9zdCBhIGZpZnRoIG9mIHRoZWlyIHZhbHVlIGluIHRoZSBwYXN0IDEyIG1vbnRocywgd2hpbGUgdGhlIGJyb2FkZXIgUyA1MDAgQXBwYXJlbCBSZXRhaWwgaW5kZXggcm9zZSAxMyBwZXIgY2VudC4gVGhlIHN0b2NrIHdhcyBsYXN0IHVwIDIxIHBlciBjZW50IGJlZm9yZSB0aGUgb3BlbmluZyBiZWxsIG9uIEZyaWRheS4KQmVpbSBlcnN0ZW4gQmVzdWNoOiBFaW4gVXBncmFkZSB1bSBkcmVpIEthdGVnb3JpZW4sIGF1ZiBlaW5lIENsYXNzaWMgU3VpdGUuIERhIGwgc2ljaCBlaW4gNSBTdGVybmUgSG90ZWwgbmljaHQgbHVtcGVuLCBhdWNoIHdlbm4gc29sY2hlcmxlaSBHZW5lcm9zaXQgaW4gYnVjaHVuZ3Nhcm1lbiBTb21tZXJ6ZWl0ZW4gbmF0IGxlaWNodGVyIGZhbGxlbi4gCkFuZCBpdCBhbHNvIGZ1bm55LCBsZWdpdGltYXRlbHkgZnVubnksIGJlY2F1c2UgcGVvcGxlIHdobyBzaGFyZSBoZXIgZXhwZXJpZW5jZXMgYW5kIHRob3NlIHdobyBkb24gY2FuIGJvdGggbGF1Z2ggYXQgdGhlIGludGVyZXN0aW5nIHdheSBzaGUgdmlld3MgYW5kIGNvbmNlcHR1YWxpc2VzIHRoZSB3b3JsZCB0aHJvdWdoIGh1bW91ciwgd2hldGhlciBvciBub3Qgd2UgbGl2ZWQgdGhyb3VnaCBhbmQgdGhvdWdodCBhYm91dCB3aGF0IHNoZSB0YWxraW5nIGFib3V0IG9yIG5vdC5TbyB0byBzYXkgdGhhdCBleHBlcmllbmNlIGhhcyBubyBhZmZlY3Qgb24gd2hldGhlciBhIGpva2UgaXMgZ29vZCBvciBub3QgaXMgcGxhaW5seSwgb2J2aW91c2x5IGZhbHNlLiBEaWZmZXJlbnQgcGVvcGxlIGhhdmUgZGlmZmVyZW50IHN1YmplY3RpdmUgZXhwZXJpZW5jZXMgYW5kIHZpZXdwb2ludHMgd2hpY2ggbWVhbnMgdGhleSB3aWxsIGZpbmQgZGlmZmVyZW50IHRoaW5ncyBmdW5ueS4gVGhlIHBvaW50IGlzIHRoYXQgYSBkYXJrIGpva2UgdGhhdCBtYWtlcyBsaWdodCBvZiBhIHNlcmlvdXMgYW5kIHRyYXVtYXRpYyBzaXR1YXRpb24gb3IgZXhwZXJpZW5jZSBtYXkgb3IgbWF5IG5vdCBiZSBmdW5ueSBmb3IgcGVvcGxlIHdobyBoYXZlbiBiZWVuIHRocm91Z2ggdGhhdCwgYnV0IGZvciBwZW9wbGUgd2hvIGhhdmUgbGl2ZWQgdGhyb3VnaCBpdCwgaWYgdGhlIHBlcnNvbiB0ZWxsaW5nIHRoZSBqb2tlIGlzbiBvbmUgb2YgdGhlbSwgZnJvbSB0aGVpciBzdWJqZWN0aXZlIHBlcnNwZWN0aXZlIHRoYXQgam9rZSBpcyBwcm9iYWJseSBnb2luZyB0byBtaXNyZXByZXNlbnQgdGhlIHNpdHVhdGlvbiwgd2hpY2ggaXMgcHJvYmFibHkgZ29pbmcgdG8gYmUgY2FyZWxlc3MgYW5kIHVwc2V0dGluZyBhbmQgdWx0aW1hdGVseSBub3QgZnVubnkgZm9yIHRoZW0uIApHZWx1a2tpZyB3YXMgaGV0IG5pZXQgdmVyIG1lZXIgbmFhciBvbnplIG92ZXJuYWNodGluZ3BsYWF0czogS29zaWNlLCBkZSB0d2VlZGUgZ3Jvb3RzdGUgc3RhZCB2YW4gU2xvd2FraWplIS4gClllYWgsIHlvdSBjYW4ndCBqdXN0IHN0b3AgZ29pbmcgdG8gc2Nob29sIGZvciB5ZWFycy4gRnJvbSBleHBlcmllbmNlIHNoZSBjYW4gcHJvYmFibHkgZ2V0IHNvbWUga2luZCBvZiBhIGdvb2QgaG9tZXNjaG9vbCBwcm9ncmFtIGZvciBhdXRpc3RpYyBzdHVkZW50cy4gT3IganVzdCBob21lc2Nob29sIGJ1dCBzY2hvb2xzIGNhbiBzb21ldGltZXMgbWFrZSBhY2NvbW1vZGF0aW9ucyBmb3IgeW91LCBsaWtlIGdldCB5b3UgYSB0ZWFjaGVyIGFuZCBsZXQgeW91IGdvIG9uIHRoZWlyIGNhbXB1cy4gQnV0IHlvdSBkb24ndCBzdG9wIGdvaW5nIGFsdG9nZXRoZXIuCkkgc2F5IGl0IHByZXR0eSBsaWtlbHkgdGhhdCBmb290YmFsbCwgaGlzdG9yaWNhbGx5IHJ1biBieSBtZW4sIGhhcyBnZW5lcmFsbHkganVzdCBwb3J0ZWQgb3ZlciB0aGUgdHJhaW5pbmcgYW5kIHRlY2huaXF1ZSBtb2RlbHMgZnJvbSBtZW4gZm9vdHksIHdpdGhvdXQgbmVjZXNzYXJpbHkgaGF2aW5nIG11Y2ggcmVnYXJkIGZvciB0aGUgc3BlY2lmaWMga25lZSBzdHJlbmd0aGVuaW5nIGFuZCBzdGFiaWxpdHkgZm9jdXMgcmVxdWlyZWQgaW4gdHJhaW5pbmcgd29tZW4uIEF0IGFsbCBsZXZlbHMgb2YgZm9vdHksIHlvdSBicmluZyBpbiBjb2FjaGVzIGFuZCB0cmFpbmluZyBzdGFmZiB3aG8gaGF2ZSB3b3JrZWQgYXJvdW5kIGZvb3R5IGFsbCB0aGVpciBsaXZlcywgaXQgbWVhbnMgdGhleSBhcmUgbGlrZWx5IHRvIGhhdmUgbW9zdGx5IHdvcmtlZCB3aXRoIG1lbiBhbmQga25vdyB3aGF0IHdvcmtzIGZvciBtZW4uClRoZXkgZ2l2ZSBtZSBhIHJhaXNlIHdoZW5ldmVyIHRoZXkgY2FuICsgb24gYSB5ZWFybHkgc2NoZWR1bGUuIEkgZ290IGEgMyUgcmFpc2UgYXQgdGhlIGVuZCBvZiBteSBmaXJzdCB5ZWFyLCBhbmQgYSAxMiUgcmFpc2UgOCBtb250aHMgYWZ0ZXIgdGhhdC4gVGhleSBuZXZlciBvbmNlIHRyaWVkIHRvIGN1dCBjb3N0cyB3aXRoIG1lLCBldmVuIHdoZW4gaXQgd291bGQgYmUgcGVyZmVjdGx5IHJlYXNvbmFibGUgdG8uIApIZSB3b24gdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciB0b3VybmFtZW50IGluIExhcyBWZWdhcyBpbiAxOTk3LCBhbmQgaGFzIGNvbWUgc2Vjb25kIGZvdXIgdGltZXMuIEhlIGhhcyBzZXZlbiBjaGlsZHJlbiBhbmQgbGl2ZXMgaW4gSHVsbCB3aXRoIGhpcyBnaXJsZnJpZW5kLCBTdGFjZXkuLiAKSSBwZXJzb25hbGx5IGxpa2UgaXQsIEkgdGhpbmsgaXQgbG9va3MgYSBiaXQgb2ZmIHJpZ2h0IG5vdyBiZWNhdXNlIHRoZXJlIGFyZSBzbyBmZXcgYnVpbGRpbmcgYXQgdGhhdCBoZWlnaHQgaW4gdGhlIGFyZWEsIGJ1dCBhcyB0aGUgbmVnYXRpdmUgc3BhY2UgaXMgZmlsbGVkIHdpdGggdGFsbGVyIGFuZCB0aGlja2VyIGJ1aWxkaW5ncywgSSB0aGluayB0aGVzZSBzdXBlciBza2lubnkgYnVpbGRpbmdzIHdpbGwgbG9vayBiZXR0ZXIuIApBbmQgY2FuIHNwb3J0cyBzdXJ2aXZlIHdpdGhvdXQgaW1hZ2luaW5nIHNleCBhcyBlaXRoZXIgdGhpcyBvciB0aGF0PyBzcG9ydHMgd2VyZSBmb3VuZGVkIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgbWVuIHJlcXVpcmVkIHBoeXNpY2FsIGFjdGl2aXR5IHRvIHJlbWFpbiBtYXNjdWxpbmUgaW4gdGhlIGZhY2Ugb2YgYW4gaW5jcmVhc2luZyAib2ZmaWNlIGkgY2F0aW9uIiBvZiBsYWJvci4gZmFybWVycyBhbmQgZmFjdG9yeSB3b3JrZXJzIG1vdmVkIGludG8gd2hpdGUgY29sbGFyIG9yIGF0IGxlYXN0IHNlcnZpY2Ugc2VjdG9yIGpvYnMsIHRoZXkgbG9zdCB0aGUgcGh5c2ljYWxpdHkgb2YgbGFib3IuICJzcG9ydHMiIHdlcmUgaW52ZW50ZWQgIGFzIHBhcnQgb2Ygc2Nob29scyBhcyB3ZWxsIGFzIGNvbW11bml0aWVzICB0byB0dXJuIGJveXMgaW50byBtZW4uCkF0dG9ybmV5IGluIE1pYW1pIGJ5IFByZXNpZGVudCBHZW9yZ2UgVy4gQnVzaC4KUGVvcGxlIGhhdmUgZGV2ZWxvcGVkIHRoZWlyIGludGVyZXN0aW5nIGlkZWFzIG9ubGluZSB0byBwbGF5IG9ubGluZSBwb2tlci4gClJlY2VpdmVQb2V0cnkgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KV2hhdCBvcmlnaW5hbGx5IHNvbGQgbWUgb24gdGhlbSB3YXMgdGhhdCB0aGV5IG9mZmVyZWQgYSBoYWxmIHNoYXJlIGV2ZXJ5IHdlZWsuIApBIExhcyBWZWdhcyBzdHlsZSBidWZmZXQgaXMgaW5jbHVkZWQuIApOYW5kIHllcyBhZ2FpbiAyIHBlb3BsZSBjYW4gdXNlIHRoZSBzYW1lIHBva21vbiBmcm9tIHRoZSAxIGRzLiBPbmNlIHRoZXkgYXJlIGluIHlvdXIgY29sbGVjdGlvbiBhIHBva21vbiBjYW4gYmUgYXNzaWduZWQgdG8gYSBjZXJ0YWluIHRyYWluZXJzIGJhdHRsZSBwYXNzIHdoaWNoIGNhbiBiZSBjcmVhdGVkIGVhc2lseS4gClNoZSB3YXMgc2F5aW5nIHRoaW5ncyBsaWtlIGRpZXRpdGlhbnMgbmVlZCB0byBiZWxpZXZlIHBhdGllbnRzIHdoZW4gdGhleSBzYXkgd2hhdCB0aGV5IGVhdCwgZXRjLiBJdCB3YXMgY3JpbmdleSBmb3IgbWUgYXMgSSBmZWVsIHdoZW4gaXQgY29tZXMgdG8gZWF0aW5nIGhhYml0cyBwZW9wbGUgYXJlIGdlbmVyYWxseSB1bnJlbGlhYmxlIG5hcnJhdG9ycyBhbmQgeW91IGNhbm5vdCB0cnVzdCB0aGUgc2VsZiByZXBvcnRpbmcuIApUaGF0IHF1ZXN0aW9uIG1hZGUgYSBsb3QgbW9yZSBzZW5zZSBpbiAxOTk5IGFuZCBiZWZvcmUuIEkgd291bGQgZ3Vlc3MgdGhhdCBjdXJyZW50bHkgbGVzcyB0aGFuIDElIG9mIGJhbmRzIGFjdHVhbGx5IG1ha2UgbW9uZXkgKGFmdGVyIGV4cGVuc2VzKSBvbiB0aGVpciBtdXNpYy4KMi4gCkJ1dCBpZiB5b3Ugc3RhcnQgdGFraW5nIHRoZXNlIGtpbmRzIG9mIGRydWdzIG5vdywgeWVhaCBpdCBoZWxwIGJ1dCBpbiB0ZW4geWVhcnMgeW91IGJlIHdhbGtpbiBhcm91bmQgd2l0aCBhIG1vcnBoaW5lIGRyaXAuIApEdXJpbmcgdGhlIGVhcmx5IHllYXJzIG9mIHRoZSBCdXNoIG1hZG5lc3MgdGhlIFRpbWVzIGRlY2lkZWQgdG8gZ2l2ZSB1cCBvbiBpdHMgcm9sZSBhcyBhIGZyZWUgcHJlc3MgYW5kIHB1Ymxpc2ggYW55IGJ1bGxzaGl0IHRoZSBCdXNoaWVzIHNlbnQgb3V0LiAKSyBLaW5nIChhbHNvIGtub3duIGFzIGEgImNvd2JveSIpClRoZSBmcnVpdCBpcyBmcm9tIDE3ICB0byAzOSB5ZWFyIG9sZCBidXNoIHZpbmVzIHRoYXQgZ3JvdyBsaXR0bGUgbW9yZSB0aGFuIGEga2lsb21ldHJlIGZyb20gdGhlIE1lZGl0ZXJyYW5lYW4uIApIZSBoYXMgbmV2ZXIgYXBvbG9naXplZCB0byBtZSwgb3IgaGVsZCBtZSBhbmQgdG9sZCBtZSBoZSB3aXNoZXMgaGUgd2FpdGVkLiAKQW55d2F5IHN0cmV0Y2hlcyByZWFsbHkgd29yay4gQWxvdCBvZiBtYXN0ZXJzIHJ1bm5lcnMgc3VmZmVyIHdpdGggdGhpcyBhbmQgdGhyb3VnaCBvbmUgb2YgdGhlaXIgd2Vic2l0ZXMgaSBmb3VuZCBzdHJldGNoZXMgZ3VhcmFudGVlZCB0byB3b3JrLiBUaGV5IHJlYWxseSBkaWQsIGkgY2FuJ3QgcmVtZW1iZXIgdG90YWxseSBidXQgb25lIHdhcyB0byBkcmF3IHRoZSBhbHBoYWJldCBpbiB0aGUgYWlyIHVzaW5nIGp1c3QgeW91ciBmb290IGFuZCBhbm90aGVyIHdhcyBwdXQgYSB0b3dlbCBvbiB0aGUgZmxvb3IgcmVhY2ggb3V0IHdpdGggeW91ciB0b2VzIGFuZCB0cnkgYW5kIHB1bGwgdGhlIHRvd2VsIHRvd2FyZCB5b3UgYnkgY3VybGluZyB5b3VyIHRvZXMgdW5kZXIuLiAKQWZ0ZXIgYW4gYXBwZWFsIHRvIHNjaG9vbHMgYWNyb3NzIEF1c3RyYWxpYSB0byBjb21iIHRoZWlyIGVucm9sbWVudCByZWNvcmRzIGZvciBnaXJscyB0aGUgc2FtZSBhZ2UgYXMgTGFuZSBjaGlsZCwgaGUgc3Bva2UgdG8gdGhlIHBhcmVudHMgb2YgYSBmYWlyIGhhaXJlZCBlaWdodCB5ZWFyIG9sZCBpbiBzb3V0aCBlYXN0IFF1ZWVuc2xhbmQuIApQaWNrdXAgYW5kIGlkZW50aWZ5IGJvb3RzLCBiZWx0cyBhbmQgamV3ZWxyeSBvbmNlIGF0IG1hcHMuLiAKQXMgTWljaGFXaGEgc2FpZCwgUG9sYXJvaWQgT3JpZ2luYWxzIHNwZW50IHllYXJzIGdldHRpbmcgdGhlaXIgZmlsbSB0byB0aGUgbGV2ZWwgb2YgInJlbGlhYmxlIiBhbmQgaXQgc3RpbGwgbm90IGV2ZW4gY2xvc2UgdG8gdGhlIG9yaWdpbmFsIGZvcm11bGEgaW4gdGVybXMgb2YgcXVhbGl0eSB5ZXQuLiAKRnJlZWQgdGhlIGNvdW50cnkgZnJvbSB3aG9tIGV4YWN0bHk/IEEgb25lIHBhcnR5IHN0YXRlIHdpdGggZXh0cmVtZWx5IGxpbWl0ZWQgZnJlZWRvbXMgdG9vayBvdmVyIGEgc2hhbSBtdWx0aXBhcnR5IHN0YXRlIHdpdGggbW9yZSBidXQgZmFpcmx5IHJpY2tldHkgZnJlZWRvbXMuIE5vdCBsaWtlIHRoZSBOb3J0aCBsZXQgeW91IHNheSwgIkhleSB0aGlzIG9uZSBwYXJ0eSBidXNpbmVzcyBpcyBCUywgbGV0IGdpdmUgcGVvcGxlIHRoZSBmcmVlZG9tIHRvIHB1dCBmb3J0aCBhbnkgcGFydHkgYW5kIGFueSBzeXN0ZW0gdGhleSB3YW50LiIgVGhvc2UgcGVvcGxlIGRpc2FwcGVhcmVkICAgc29ydCBvZiBsaWtlIHRoZXkgZG8gdG9kYXksIHJpZ2h0Pz8/V2h5IHdvdWxkIGFjY2VwdGluZyB1bmVtcGxveWVkIGFuZCBvciB1bmVtcGxveWFibGUgcGVvcGxlIGJlIGFuIGludGVsbGlnZW50IGNob2ljZT8gU3VyZSwgeW91IG1pZ2h0IGhhdmUgeW91ciBwZW5zaW9uIHRvIGRyYXcgb24sIGJ1dCBvcGVuaW5nIHVwIHRoYXQgcGF0aCBpbiBnZW5lcmFsIGlzIHN0dXBpZCwgaXQncyBub3QgaW50ZWxsaWdlbnQsIGl0J3MganVzdCBjb252ZW5pZW50IGZvciB5b3UuLiAKQW5vdGhlciBoYXMgb3ZlciAkNDAwSyBpbiB0b3VybmFtZW50IHdpbnMgKGNvbmZpcm1lZCwgSSBsb29rZWQgaGltIHVwLikuIApIb3dldmVyLCBpc24gaXQgc3RyYW5nZSB0aGF0IG1hbnkgcGVvcGxlIGhhdmUgcmVwb3J0ZWQgVUZPcyBhbmQgc2FpZCB0aGF0IHRoZXkgc2F3IGEgY3JlYXRlIHNlY29uZGFyaWx5LCBhbG1vc3QgYXMgaWYgaXQgd2VyZSBhbiBhZnRlcnRob3VnaHQ/IEl0IG5vdCBsaWtlIFVGTyByZXNlYXJjaGVycyBnbyBvdXQgYXNraW5nIGV2ZXJ5IHNpbmdsZSB3aXRuZXNzOiAiT2gsIGFuZCBkaWQgeW91IGhhcHBlbiB0byBzZWUgYSBCaWdmb290PyIuIApBIDMyIHN0b3JleSBza3lzY3JhcGVyIHdhcyByZWNlbnRseSBjb21wbGV0ZWQgaW4gTmV3IFlvcmsgd2l0aCBzaW1pbGFyIGhpZ2hyaXNlIG1vZHVsYXIgYnVpbGRpbmdzIHRvIGZvbGxvdy4gRXZlbiB0aGUgU3dlZGlzaCBjb21wYW55IElLRUEgaXMgc2VsbGluZyBwcmUgZmFicmljYXRlZCBob21lcyBjYWxsZWQgQm9LbG9rLiAKVGhpcyBpcyB0byB0YWtlIGJhY2sgdGhlaXIgY2FzaCBmcm9tIHRoZSB3aW5uaW5nIG9wcG9uZW50LiAKRGF5IHNoZSBnb2VzIHRvIHBpY2sgaXQgdXAsIHNoZSBhbm5vdW5jZXMgdGhhdCBzaGUgd29uIGFjdHVhbGx5IG5lZWQgaXQgZm9yIGEgZmV3IG1vcmUgZGF5cywgdGhleSBoYXZlIHRvIGZpbmlzaCBwYWNraW5nLiAKVGhlIGZhY3QgdGhhdCB0aGlzIGd1eSBtYW5hZ2VkIHRvIG1ha2UgdXAgYSBzdG9yeSBhYm91dCAyIHdoaXRlIG1lbiBpbiBNQUdBIGhhdHMsIHdhbmRlcmluZyBhcm91bmQgQ2hpY2FnbyBhdCAyQU0sIG9uZSBvZiB0aGUgbW9zdCBsaWJlcmFsIGNpdGllcyBpbiB0aGUgY291bnRyeSwgY2FycnlpbmcgYmxlYWNoIGFuZCBhIHJvcGUsIGFuZCBub3QgYSBzaW5nbGUgcGVyc29uIGVpdGhlciBzdG9wcGVkIHRoZW0gb3IgY2FsbGVkIHRoZSBjb3BzLCBzaG91bGQgaGF2ZSBiZWVuIGEgZ2lnYW50aWMgVGlhbm5hbWVuIGxldmVsIHNxdWFyZSBmbGFnLiBUaGUgIlRoaXMgaXMgTUFHQSBDb3VudHJ5IiB0aGV5IHN1cHBvc2VkbHkgeWVsbGVkLCBvciB0aGUgZmFjdCB0aGF0IHRoZSBhdHRhY2sganVzdCBoYXBwZW5lZCB0byBvY2N1ciBvdXQgb2Ygc2lnaHQgb2YgY2FtZXJhcywgb3IgdGhlIGZhY3QgdGhhdCB0aGVzZSByYWNpc3RzIHNvbWVob3cgcmVjb2duaXplZCBhIGJsYWNrLCBnYXkgbWFuIHdobyBoYXMgYSBzdXBwb3J0aW5nIHJvbGUgaW4gYSBzaG93IHdpdGggYSBtYWpvcml0eSBibGFjayBjYXN0IHdhcyBXQVkgdG9vIG11Y2guIEFkZCBpbiB0aGUgZmFjdCB0aGF0IGl0IHdhcyAgMjAgaW4gQ2hpY2FnbyB0aGF0IG5pZ2h0IChmdW4gYXNpZGU6IGJsZWFjaCBmcmVlemVzIGF0IDE4IGRlZ3JlZXMpIGFuZCBpdCBzb3VuZHMgbGlrZSBiYWQgZmFuIGZpY3Rpb24uIApJIG5vdCBhIGZhbiBvZiBNaWxvLCBJIGRvbiBsaWtlIGhpbSBhbmQgdGhpbmsgaGlzIHRhY3RpY3MgYXJlIHN0dXBpZCwgYnV0IHRvIGNvbnNpZGVyIGhpbSBvbiB0aGUgc2FtZSBwYWdlIGFzIGV0aG5vIG5hdGlvbmFsaXN0cyBpcyBwdWVyaWxlIGFuZCBpZGlvdGljLiBBbmQgdGhlIGZhY3QgdGhhdCBteSBjb3VudHJ5IHN0b3BwZWQgaGltIGZyb20gZW50ZXJpbmcgZHVlIHRvIG5vdGhpbmcgbW9yZSB0aGFuIGhpcyBvcGluaW9ucyBpcyBpbGxpYmVyYWwgYW5kIGFiaG9ycmVudC4KU2hlIGNvbXBhcmVkIEtpbSdzIHNpemUgdG8gaGVyIHBpbmtpZSBmaW5nZXIuLiAKVG8gc3RheSBoZWFsdGh5IG1lYW5zIHRvIGJlIGZyZWUgb2YgYWlsbWVudHMgYW5kIGRpc2FiaWxpdGllcy4gCkluIHRoZSBoaWdoZXN0IHBheWluZyBzdGF0ZSBvZiBBbGFza2EsIG1hc3NhZ2UgdGhlcmFwaXN0cyBlYXJuZWQgJDg0LDEyMC4gCkV0IGNvbW1lIGlsIGVzdCBkZSB0b3V0ZSBmYW9uIGZpbiBjdWlzaW5pZXIsIGMndGFpdCB0b3V0ICBmYWl0IHJ1c3NpICEuIApFZGl0OiBvaCB5ZWFoIHdoZW4gSSBwdXQgaXQgYWxsIHRvZ2V0aGVyIEkgZmlsbCB0aGUgYm90dG9tIG9mIHRoZSBwb3Qgd2l0aCBzYW5kLCB0aGVuIGFkZC9nbHVlIHRoZSBncmFzc3kgcGFydCB0aGVuIGdsdWUgdGhlIGZsb3dlciAod2hpY2ggaGFzIGFscmVhZHkgYmVlbiBtYWRlIHRvIHN0YW5kIHdpdGggdGhpbiBncmVlbiB3aXJlKSB0aGVuIHBvdXIgbW9yZSBzYW5kIG9uIHRvcC4gVGhlIHNhbmQgaGVscHMgdGhlIGZsb3dlciBzdGF5IHN0dXJkeSBhbmQga2VlcCBiYWxhbmNlLiAKSWYgeW91IHdvcmsgaGFyZCwgeW91J2xsIGdldCB5b3VyIGR1ZXMuLiAKSSBkb24gdGhpbmsgREMgZXZlbiB0aGlua3MgaGUgY2FuIGJlYXQgaGltIGF0IHRoaXMgcG9pbnQsIEkgd291bGQgd2FpdCBmb3IgdGhlIHdpbm5lciBvZiBCcm9jay9EQyBpZiBJIHdhcyBKb24uIEJpZ2dlciBwYXlkYXkgICBFcXVhbCBwYXJ0cyByZXdhcmQgYW5kIHJpc2suLiAKSSBrbm93LCB0aGlzIGlzbiBuZXdzLiAKSSBsb3ZlIFZhbmlsbGEuIEl0IGNyZWFteSBlbm91Z2ggdGhhdCBpZiB5b3UgY2xvc2UgeW91ciBleWVzIGFuZCBiZWxpZXZlIGhhcmQgZW5vdWdoIGl0IGxpa2UgYSBtaWxrc2hha2UuIFN0cmF3YmVycnkgaXMgZnVuLCBhbmQgSSBsb3ZlIENhY2FvIGFsdGhvdWdoIEkgYXdhcmUgdGhpcyBpcyBqdXN0IGJlY2F1c2UgSSBnb3QgdXNlIHRvIGNob2NvbGF0ZSBmbGF2b3JlZCBTbGltIEZhc3QgYSBkZWNhZGUgYWdvIHdoZW4gSSB3YXMgdHJ5aW5nIHRvIG1ha2UgdXAgZm9yIHNraXBwaW5nIGJyZWFrZmFzdHMuLiAKSW4gb3JkZXIgdG8gdW5kZXJzdGFuZCBzdWNoIGEgc2VlbWluZ2x5IHBhcmFkb3hpY2FsIHNldCBvZiByZWxhdGlvbnMsIGl0IHVzZWZ1bCB0byB0aGluayBhYm91dCB3aGVuIGFuZCB3aHkgc3BvcnRzIGFwcGVhcmVkIGFzIGEgY2VudHJhbCBwYXJ0IG9mIEFtZXJpY2FuIGN1bHR1cmUgYW5kIHdoeS4gKGFzIHdlIHVuZGVyc3RhbmQgdGhlbSB0b2RheSkgYmVnYW4gaW4gdGhlIGxhdGUgMTgwMHMgYXMgcGFydCBvZiBhIG1vdmVtZW50IGtub3duIGFzICJtdXNjdWxhciBDaHJpc3RpYW5pdHkuIiBtb3ZlbWVudCB3YXMgYW4gYXR0ZW1wdCB0byB0dXJuIG1pZGRsZSBjbGFzcyBtZW4sIG1lbiB3aG8gbm8gbG9uZ2VyIHBlcmZvcm1lZCBtYW51YWwgbGFib3Igb2YgYW55IHNvcnQsIGludG8gZml0IGFuZCBhdGhsZXRpYyBib2RpZXMuIAo1LiBDb29sIEdyZWVuIENvdW50cnkgaW4gTGlzbW9yZTogQ29vbCBHcmVlbiBDb3VudHJ5IGlzIHRoZSBvZmZpY2lhbCBmdW5kcmFpc2VyIGZvciBUaGUgR3JlZW5zIDIwMTkgTlNXIGVsZWN0aW9uIGNhbXBhaWduLiBQcmVzZW50ZWQgYnkgSmltbXkgV2lsbGluZyB3aXRoIFMuIApJbiB0aGVpciBtaW5kcywgYWZ0ZXIgYWxsIHRoZXNlIHllYXJzLCBpdCBpcyBhYm91dCB0aW1lIHRoZSBnb3Zlcm5tZW50IGdpdmVzIHNvbWV0aGluZyBiYWNrIHRvIHRoZW0uLiAKV2hpbGUgdGhlaXIgcmVsYXRpb25zaGlwIHdhc24ndCBzZXh1YWwsIHRoZSBleHBlcmllbmNlIGhhdW50ZWQgaGVyIGZvciB5ZWFycy4gCkkgZG9uIHRoaW5rIEkgZXZlbiBrbmV3IHRoaXMgc29ydCBvZiB0aGluZyBleGlzdGVkIGJlZm9yZSB0b2RheSEgVGhhbmtzIGZvciB0aGUgdW5pbnRlbnRpb25hbCByZWNvbW1lbmRhdGlvbnMhIFlvdSBtYXkgd2FudCB0byB0cnkgb3V0IGEgbGl0dGxlIHZpc3VhbCBub3ZlbCBjYWxsZWQgIlRoZSBNaXNrYXRvbmljIi4gSXQgc2V0IGluIGEgdW5pdmVyc2Ugd2hlcmUgTG92ZWNyYWZ0aWFuIGhvcnJvcnMgYXJlIGEgd2VsbCBrbm93biBwaGVub21lbm9uIGFuZCBldmVyeW9uZSBqdXN0IHNvcnQgb2YgZGVhbGluZyB3aXRoIGl0Li4gCk9uIHRoZSByaXZlcjogJDIsICQ0LCAkNiB1cCB0byAkOCBPbmUgdmVyc2lvbiBvZiBwb2tlciBpcyA3IGhhbmQgcG9rZXIuIEl0IGlzIG1vc3QgY29tbWVubHkgcGxheWVkIE9VVFNJREUgdGhlIGNhc2luby4gSGVyZSBpcyBob3cgeW91IHBsYXk6IC4KRXZlbiBpZiBoaXMgc29uIG9idGFpbmVkIHRvIG9idGFpbiBpbmZvcm1hdGlvbiwgaWYgaGUgZGlkbiBnZXQgaXQgb3IgZGlkbiBnaXZlIGFueXRoaW5nIGZvciBpdCwgaXQgbm90IGNvbGx1c2lvbi4gCkFnYWluLCB0aGlzIHdvdWxkIGVpdGhlciBlbmNvdXJhZ2UgbW9zaW5saW5ncyB0byBicmluZyBpbiBnZWFyIG9yIHBsYXkgbW9yZSBtZXRob2RpY2FsbHkgYW5kIGxlc3MgY2FsbCBvZiBkdXR5IHN0eWxlLi4gClRoZWJ1bGxpc2hiZWFyaXNoICAyIHBvaW50cyAgc3VibWl0dGVkIDI3IGRheXMgYWdvClJpZ2h0PyBIaXN0b3JpY2FsbHksIGR1cmluZyB0aW1lcyBvZiBhIHN0cm9uZyBlY29ub215IHRoZSBkZWZpY2l0IGdyb3dzIGFuZCBkdXJpbmcgYSBkZXByZXNzaW9uIHRoZSBkZWZpY2l0IHNocmlua3MuIFRoaXMgb25seSBzZWVtcyB0byBiZSBuZXdzd29ydGh5IGJlY2F1c2UsIHdlbGwsIHBsYXkgdGhlIDgwMCwwMDAgY2xpcHMgb2YgdHJ1bXAgZ3JpcGluZyBhYm91dCB0aGUgZGVmaWNpdCwgaG93IGl0IG1ha2VzIHVzIHdlYWssIGhvdyBpdCBtYWtlcyB1cyBzdHVwaWQsIGhvdyBoZSBhbG9uZSBjYW4gcXVpY2tseSBmaXggaXQgYW5kIHNocmluayBpdCBkb3duIGxpa2UgbWFnaWMhClJlc2VhcmNoZXJzIExpbmsgTWF0ZXJuYWwgRGlhYmV0ZXMgYW5kIE9iZXNpdHkgdG8gQXV0aXNtIGluIEtpZHMKVGF0dG9vcy4gCiJEdWl0c2UgRFZELCBleHRyZWVtICEgUG9lcHNleCIgLiAyNyw5OS4gCk5vdGhpbmcgd29yc3QgdGhhbiBzaWduaW5nIHVwIHRvIGFuIG9ubGluZSBwb2tlciByb29tIHRoYXQgZG9lc24ndCBoYXZlIHRoZSBhY3Rpb24gYXQgeW91ciBzdGFrZXMgbGV2ZWwuLiAKVGhpcyBzYW1lIHRoaW5nIGhhcHBlbmVkIHRvIG1lLiBTaGUgd2FzIGJvcm4gYXQgMzkrMSwgN2xicyBleGFjdGx5LiAKRm9yIHRoaXMgc291cCBJIHRvb2sgYWJvdXQgMyBsYnMgb2Ygb3h0YWlscywgYmVlZiBicm90aCwgd2F0ZXIsIHR3byBvbmlvbnMgYW5kIHRoZSBzcGljZXMgYW5kIEknbSBsZXR0aW5nIGl0IHNpbW1lciBvbiBsb3cgZm9yIGFib3V0IDE4IGhvdXJzLiAKVGhlIGJyYWluIGRvZXMgbm90IHByb2R1Y2UgYnJhaW53YXZlcyBvZiBhbnkgZnJlcXVlbmN5IGxldmVsIHRoYXQgY2FuIGJlIGRldGVjdGVkIHdpdGhvdXQgYWR2YW5jZWQgdGVjaG5pY2FsIGVxdWlwbWVudC4gCkljaCBmYWhyZSByZWdlbG1pZyBuYWNoIEphcGFuLCBpbiBlaW5lbSBNb25hdCB3aWVkZXIsIGljaCBoYWJlIGRhIG5vY2ggbmllKCEpIGJlc2NobWllcnRlIFpnZSwgQmFobmhmZSBvZGVyIFRvaWxldHRlbiBnZXNlaGVuLiBJbSBPc3RlbiBoYXR0ZW4gd2lyIHNvd2FzIGF1Y2ggbmljaHQuIE51ciBpbSBXZXN0ZW4gZ2VoZW4gZGllIExldXRlIGRlcmFydCByY2tzaWNodHNsb3MgbWl0IGZmZW50bGljaGVtIEVpZ2VudHVtIHVtIHVuZCBob2xlbiBzaWNoIGhpbnRlcmhlciBub2NoIGRhcmF1ZiBlaW5lbiBydW50ZXIsIHdlbm4gYW5kZXJlIExldXRlIHNpY2ggYmVyIFZhbmRhbGlzbXVzIGJlc2Nod2VyZW4uLiAKVGhpcyBwcmluY2lwbGUgaXMgcmVmZXJlZWQgdG8gYXMgdGhlICJibG9vZCBicmFpbiBiYXJyaWVyIi4gCkRhbiBCIGlzIGJldHRlciBsb29raW5nLCBoYXMgYSBiZXR0ZXIgYm9keSwgZmxhdW50cyBtb25leSwgYnJhZ3MgYWJvdXQgbm90IHdvcmtpbmcsIGFuZCBzdXJyb3VuZHMgaGltc2VsZiB3IGhvdCBnaXJscyB3aGljaCBoZSBicmFncyBhYm91dCBzZXh4aW5nLiAKTmVlZGxlc3MgdG8gc2F5OiB0aGUgZG9nIGlzIGhpZ2hseSByZWdhcmRlZCBub3cuIExvbApUaGUgYWNjZWxlcm9tZXRlciBtb25pdG9yaW5nIGlzIHNpZ25pZmljYW50IGJlY2F1c2UgaXQgaXMgb2JqZWN0aXZlLiAKVHJ1bXAgbmVlZHMgdG8gZmluZCBvdXQgd2hlcmUgdGhleSBhcmUgY29taW5nIGZyb20sIGJlY2F1c2UgdGhleSBhcmUgZGFtYWdpbmcgb3VyIGNvdW50cnkuIApUaGlzIGlzbiBleGFjdGx5IGEgdW5pcXVlIHByb2JsZW0gdG8gL3IvSGFsbyBpdCB2ZXJ5IGNvbW1vbiBpbiBjb21tdW5pdGllcyB3aXRoIGNvbnRlbnQgZHJvdWdodHMgYW5kIGV2ZW4gd29yc2UgaW4gVFYgc2hvdyBzdWJzLiBJdCByZWFsbHkganVzdCB0aGUgbmF0dXJlIG9mIGhvdyB0aGluZ3MgZ28gdW50aWwgbmV3IGNvbnRlbnQgaXMgZ2VuZXJhdGVkLiBJIGRvbiBzZWUgaG93IHlvdSBjYW4gYWR2b2NhdGUgZm9yIHRoZSByZW1vdmFsIG9yIHJlc3RyaWN0aW9uIG9mIGNvbnRlbnQgdGhlIGNvbW11bml0eSBhdCBsYXJnZSBpcyBvYnZpb3VzbHkgaW50ZXJlc3RlZCBpbiB3aGVuIHdlIGhhdmUgcHJhY3RpY2FsbHkgbm90aGluZyB0byBmaWxsIHRoYXQgdm9pZCB3aXRoLi4gClN0YW5kIFVwIFdvcmsgU3RhdGlvbnMgTmV3IFlvcmsgVGltZXMKQWxzbyBpZiB5b3UgYXJlIGEgcGVyc29uIHRoYXQgdGVuZHMgdG8gcHJvY3Jhc3RpbmF0ZSBhbG90IG9yIGNhbiBnZXQgaG9va2VkIHRvIHRoaW5ncyB2ZXJ5IGVhc2lseSwgeW91IHNob3VsZG4gZ28gZm9yIExlYWd1ZSBlaXRoZXIgc2luY2UgdGhlIGdhbWUgY2FuIGJlIHZlcnkgYWRkaWN0aW5nLCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBjb21wZXRpdGl2ZSBwbGF5IGFuZCBzdGFydCByYW5rZWQgZ2FtZXMuIEEgbm9ybWFsIGdhbWUgdGFrZXMgdXN1YWxseSBhYm91dCAzMCA0NSBtaW51dGVzLCBzb21ldGltZXMgYSBiaXQgbG9uZ2VyL3Nob3J0ZXIuIEFuZCBvbiB0b3Agb2YgdGhpcyBhbHNvIGEgY291cGxlIG9mIG1pbnV0ZXMgZm9yIHF1ZXVlaW5nIGFuZCBjaGFtcGlvbiBzZWxlY3Rpb24uIApBIGdhbWJsZXIgYW5kIGEgcG9rZXIgcGxheWVyIGhlIHdhcywgYWxsIGluIG9yIG5vdGhpbmcuIFRoZXJlIHdhcyBubyBtaWRkbGUgZ3JvdW5kLi4gCkludGVyZXN0aW5nbHkgbXkgcm9vbW1hdGUgaGFzIGEgbG90IG9mIGNsaWVudHMgd2hvIGNhbGwgZm9yIGhlciBzcGVjaWZpY2FsbHkuIFRoZXkgYXJlIGFsbCBvbGRlciB3aWRvd3Mgb3Igc2luZ2xlIHdvbWVuIHdobyBmZWVsIGZhciBtb3JlIGNvbWZvcnRhYmxlIHdpdGggYW5vdGhlciB3b21hbiB3b3JraW5nIGluIHRoZWlyIGhvbWVzLCBhcyBmYXIgYXMgYmVpbmcgdGFrZW4gc2VyaW91c2x5IEkgdGhpbmsgYSBsb3Qgb2YgaXQgaXMgaG93IHlvdSBjYXJyeSB5b3Vyc2VsZiwgd2hlbiBJIGZpcnN0IHN0YXJ0ZWQgY3VzdG9tZXJzIGRpZG4gdGFrZSBtZSBzZXJpb3VzbHkgYW5kIEkgYSBiaWcgYmVhcmRlZCBmdWNrZXIgbG9sLiBBbGwgdGhhdCB0byBzYXkgaWYgeW91IGludGVyZXN0ZWQgaXQgbm90IHRvbyBsYXRlIGFuZCBkb24gbGV0IGJlaW5nIGEgd29tYW4gZGV0ZXIgeW91LCB5b3UgY2FuIGJlIGp1c3QgYXMgY3JhenkgYXMgYWxsIHRoZSBvdGhlciBzcGFya3lzIGlmIHRoYXQgd2hhdCB5b3Ugd2FudC4gCkFic29sdXRlbHkgICBhY3R1YWxseSB0aGUgZmlyc3QgbW9udGggSSB3YXMgb24gdGhlbSBJIGZlbHQgSSB3YXMgImJsaXNzZnVsbHkgbmV1dHJhbCIgICBsaWtlIHRoZSBjb21lIHVwIG9mIGFuIGVjc3Rhc3kgdHJpcCB3aXRob3V0IHRoZSBnb29kIHBhcnQgYWZ0ZXIgb25zZXQuIFRoZSBtYWluIGRpZmZlcmVuY2UgSSBzZWUgbm93IGlzIGlmIEkgZm9yZ2V0IHRvIHRha2UgdGhlIHBpbGxzIGEpIHNlcmlvdXMgd2l0aGRyYXdhbCBzeW1wdG9tcyAocHVraW5nLCBicmFpbiB6YXBzLCBmZWVsaW5nIGRpenp5LCBldGMuKSBidXQgYWxzbyBJIGJlIGluIHRlYXJzIGJ5IHRoZSBhZnRlcm5vb24sIHNvIG15IGJvZHkgaGFzIGRlZmluaXRlbHkgY29tZSB0byByZWx5IG9uIGl0IHNpbmNlIEkgY2FuIGZlZWwgdGhlIGZhbGxvdXQgd2l0aG91dCB0aG9zZSBjaGVtaWNhbHMuIEJVVCB0YWtpbmcgdGhlbSBhbHNvIGdldHMgbWUgc3VwZXIgYW54aW91cywgYW4gb2RkIHNpZGUgZWZmZWN0IGZvciBhbiBhbnRpIGFueGlldHkgbWVkaWNhdGlvbi4gUGVyc29uYWxseSBJIHdvdWxkIGJlIG1vcmUgYm9sZCB0byBnZXQgb2ZmIHRoZW0sIGJ1dCBoYXZlIFBUU0QgYW5kIG90aGVyIGlzc3Vlcywgc28gYWZyYWlkIHRvIGdvIGRvd24gdGhhdCByb3V0ZSBhZ2Fpbi4KVGhpcyB3YXMgbm90IHVuaXF1ZSB0byB0aGUgaXNsYW5kLiAKSSBuZXZlciB3YXMgYSBCbGl6emFyZCBmYW4gYW5kIE92ZXJ3YXRjaCB3YXMgdGhlIGZpcnN0IGdhbWUgSSBnb3QgaW50byBmcm9tIHRoZW0sIHNvIEkgY2FuIHNwZWFrIG9uIGhvdyB0aGV5ICJ1c2VkIiB0byBiZSwgYnV0IEkga25vdyBBY3RpdmlzaW9uIGlzIGhlcmUgdG8gbWFrZSBtb25leSBhbmQgdGhlIGJpZyBib3lzIGFyZSBjbGVhcmx5IHRha2luZyBvdmVyLi4gCk15IHRyYW5zaXRpb24gaXMgZmFyIGZyb20gc3RyYWlnaHRmb3J3YXJkLCBidXQgdGhlIHRlYW0gaGFzIGJlZW4gZ3JlYXQgYW5kIEkgc2F5IHRoYXQgbXkgcmVsYXRpb25zaGlwcyB3aXRoIG15IGNvbGxlYWd1ZXMgaGFzIGJlZW4gaW1wcm92ZWQgKGFuZCBwYXJ0aWN1bGFybHkgd2l0aCBvbmUgcGVyc29uIHdobyBoYXMga2luZGEgYmVjb21lIG15IHdvcmsgbXVtKS4gCk5vLiBBY3R1YWxseSBxdWl0ZSB0aGUgb3Bwb3NpdGUuIEkgd29ya2VkIGluIGEgcHJlc3RpZ2lvdXMgcmVzZWFyY2ggbGFiIGluIGEgcHJldmlvdXMgam9iIGFuZCB0aG9zZSBwZW9wbGUgd291bGQgdGFsayBteSBlYXIgb2ZmIHRoZSBzZWNvbmQgSSBzaG93ZWQgdGhlIHNsaWdodGVzdCBpbnRlcmVzdCBpbiBhbnl0aGluZyB0aGV5IHdlcmUgZG9pbmcuCkkgZHVubm8gaG93IGl0IGlzIGluIHBsYXQgMSBzaW5jZSBJIGhhdmVudCBiZWVuIHRoZXJlIGluIHllYXJzLCBidXQgdXN1YWxseSB3aGVuIGl0IDQgMSBzcGxpdCBvciAxIDMgMSBzcGxpdCwgQW5kIGkgcHJlc3N1cmUgd2l0aCB0cnluLCB1c3VhbGx5IGl0IHN0YXlzIDF2MSBhbmQgZ3VuaXNvbyBpcyBiZXR0ZXIgZm9yIDF2MS4gCkFub3RoZXIgY29tbXVuaXR5IGNhcmQsIGNhbGxlZCB0aGUgdHVybiwgaXMgZGVhbHQgZmFjZSB1cCBhbmQgdGhlcmUgaXMgYW5vdGhlciByb3VuZCBvZiBiZXR0aW5nLgpBIHZhcmlldHkgb2YgYmFsbCBzaXplcyBhbGxvdyB0aGUgdXNlciB0byBjdXN0b21pemUgdGhlIHByZXNzdXJlIGFuZCBpbnRlbnNpdHkgbmVlZGVkIHRvIGV4cGVyaWVuY2Ugc29mdCB0aXNzdWUgcmVsZWFzZS4gQSBzZXZlbiBpbmNoIGJhbGwgaXMgZ2VuZXJhbGx5IHJlY29tbWVuZGVkIGZvciBhIGJlZ2lubmVyIGFuZCB0aG9zZSBzZWVraW5nIGEgZ2VudGxlciBtYXNzYWdlLCB3aGlsZSBhIGZpdmUgaW5jaCBiYWxsIGlzIHVzZWQgZm9yIGEgZGVlcGVyIGlzb2xhdGVkIGFyZWEuIFRvIGV4cGVyaWVuY2UgdGlzc3VlIHJlbGVhc2U6LiAKQXMgaXMgdXN1YWxseSB0aGUgY2FzZSwgdGhlIG1vcmUgd2FybmluZ3MgSSBnZXQgZnJvbSBBbWVyaWNhbnMsIHRoZSBjb3VudHJ5IGlzIHRoYXQgbXVjaCBuaWNlci9zYWZlci9mcmllbmRsaWVyIGV0Yy4gCkZlbHQgbGlrZSBmaXhpbmcgbXkgYm9keSB3YXMgdGhlIHB1cnBvc2Ugb2YgYWxsIG15IHllYXJzIG9uIHBsYW5ldCBFYXJ0aCBhbmQgdG8gc29tZSBleHRlbnQsIHRoYXQgaXMgc3RpbGwgdHJ1ZSwgc2hlIGFkZHMuIG9uIGxvdmluZyBteXNlbGYgYW5kIGFjY2VwdGluZyBteSBib2R5LiBQcmVzZW50aW5nIG15c2VsZiB3aXRoIHNvbWUgcmFkaWNhbCBzZWxmIGxvdmUgaXMgdGhlIHB1cnBvc2Ugb2YgbXkgZGF5cyBvbiB0aGlzIHBsYW5ldC4gSSB0cmllZCBzb21lIHdheXMgZm9yIGRlY2FkZXMgYW5kIG5vdyBJIHRyeWluZyBhIHZlcnksIHZlcnkgZGlmZmVyZW50IGFwcHJvYWNoIGZvciBhIGJldHRlciBmdXR1cmUgZm9yIG1lLgpOZXN0bGVkIGluIGx1c2ggdHJvcGljYWwgZ3JlZW5lcnkgYW5kIG92ZXJsb29raW5nIHRoZSBBbmRhbWFuIFNlYSwgQ2VudGFyYSBWaWxsYXMgUGh1a2V0IGlzIGEgcm9tYW50aWMgaGlkZWF3YXkgbG9jYXRlZCBzdGVwcyBhd2F5IGZyb20gS2Fyb24gQmVhY2guIEVhY2ggcHJpdmF0ZSB2aWxsYSwgbmVzdGxlZCB3aXRoaW4gaXRzIG93biBzY3JlZW4gb2YgZ3JlZW4sIGRpcmVjdGx5IGZhY2VzIHRoZSBzZWEgZnJvbSBhIGRyYW1hdGljIGluY2xpbmVkIHBlcmNoLCBlbnN1cmluZyB0aGF0IHZpZXdzIGFyZSBlbmRsZXNzLiBUaGUgdmlsbGFzIChtaW4gNDYgc3FtLikgb2ZmZXIgdGhlIG9wdGlvbiBvZiBhIHBsdW5nZSBwb29sIG9yIGEgSmFjdXp6aS4gClRoZSBwZXJzcGVjdGl2ZSBmcm9tIHRoZSBzdHJlZXQKSSBvbmNlIGdhdmUgYSBwcmVzZW50YXRpb24gaW4gZnJvbnQgb2YgaHVuZHJlZHMgYW5kIHdhcyBmaW5lKS4gVHVybnMgb3V0IGhlJ3MgYSByZWFsbHkgbmljZSBndXkgdG9vLCBzbyBvZiBjb3Vyc2UgSSBzdGFydGVkIGNydXNoaW5nIGV2ZW4gaGFyZGVyLi4gCldlIGFyZSB0cnlpbmcgdG8gbW92ZSBhd2F5IGZyb20gcHJvZHJ1Z3MgdGhhdCByZXF1aXJlIG1ldGFib2xpc20gYmVjYXVzZSB3ZSBhcmUgZmluZGluZyBwZW9wbGUgcmFuZ2UgZnJvbSBQTShwb29yIG1ldGFib2xpc2VycyB3aXRoIHJlZHVjZWQgZWZmZWN0KSB0byBVUk0odWx0cmEgcmFwaWQgbWV0YWJvbGlzZXJzIHdobyBjYW4gZWFzaWx5IG92ZXJkb3NlIG9uIHRoZXJhcGV1dGljIGRvc2VzKS4gVGhhdHMgd2h5IHdlIGFyZSBzZWVpbmcgbW9yZSBzeW50aGV0aWMgbm9uIHByb2RydWdzIGxpa2UgdGFwZW50YWRvbC4gQWxsIHRyaWN5Y2xpYyBhbmQgdG8gYSBsZXNzZXIgZXh0ZW50IHRldHJhY3ljbGljIGFudGlkZXByZXNzYW50cyAoc29tZSBvZiB0aGUgbW9zdCB3aWRlbHkgcHJlc3JpYmVkIG1lZHMpIGluaGliaXQgY3lwMmQ2IG9yIGN5cDNhNCwgdGhlIG1haW4gZW56eW1lcyB1c2VkIGZvciBkZW1ldGh5bGF0aW9uL21ldGFib2xpc20gb2YgYWxsIHRoZSBwcm9kcnVncyB3ZSBzdGlsbCB1c2UgdG9kYXkuLiAKTmV2ZXIgdHJ1c3QgYW55IGphY2shIEJ1eSBhIGZpbHRlciBhbmQgZ2Fza2V0IGtpdCwgYW5kIDUgb3IgNiBxdWFydHMgb2YgdHJhbnMgZmx1aWQuIFJlbW92ZSBkaXBzdGljay4gSWYgdGhlcmUgaXMgYSBkcmFpbiBwbHVnIGJvbHQsIHRoZW4gZHJhaW4gdGhlIHRyYW5zIHVzaW5nIGl0IGlmIHlvdSB3YW50IGFuZCBkaXNyZWdhcmQgdGhlIGRyYWluaW5nIHN0ZXBzIHdpdGggbGFzdCBib2x0IGJlbG93IGFuZCBqdXN0IHJlbW92ZSBhbGwgb2YgdGhlIGJvbHRzIGhvbGRpbmcgcGFuIG9uLiAKSXZlIGdvdCBteSBkeW5hbWljcyB0aGlzIHdlZWsgc3RpbGwsIGJ1dCBpIG1heSBlbmQgdXAgZG9nZ2luZyBvbmUgb2YgdGhlbSBiZWNhdXNlIGkgY2FuIG9ubHkgZ2V0IGluIHRvbW9ycm93IGFuZCB0aHVycyBmb3IgdGhlIHJlc3Qgb2YgdGhlIHdlZWsuIFRoZW4gaW0gZGVsb2FkaW5nLCB3aGljaCBpIGFtIGFic29sdXRlbHkgc3Rva2VkIGZvci4KSSB3b25kZXJlZCBob3cgbXVjaCB0aW1lIHdlIGhhZC4gCkZobGVuIFNpZSwgd2llIFNpZSBSY2tibGVuZGVuIGF1cyBlaW5lbSBiYWQgQWNpZCBUcmlwIHVudGVyIEFuZHJvaHVuZyB2b24gYm9tYmFyZGllcnQgdm9uIGRlbiBNZWRpZW4gbWl0IG1laHIgSmFocmVuIEJpbGwgdW5kIEhpbGxhcnkgQ2xpbnRvbiBpbSBXZWllbiBIYXVzIHVuZCBvLiAKU28gaGUgd291bGQgYmUgZ2V0dGluZyBob21lIGluIHRpbWUgdG8gcmVoZWF0IGhpcyBkaW5uZXIsIHNheSBnb29kbmlnaHQgdG8gdGhlIGtpZHMgd2hpbGUgaGUgZWF0aW5nLCBhbmQgbGlrZWx5IGNyYXNoIGludG8gYmVkIGFmdGVyIGRlYWxpbmcgd2l0aCBhIGZldyBwaG9uZSBjYWxscy4gTm90IHRvIG1lbnRpb24gaGUgbGlrZWx5IGJlIHdvcmtpbmcgYXQgbGVhc3Qgb25lIHdlZWtlbmQgZGF5LiAKSSB3YXMgd2VhcmluZyB0aGlnaCBoaWdoIGJsYWNrIGJvb3RzIGFuZCBhIGNhdHN1aXQgb2YgYmxhY2sgbGVhdGhlci4uIApCbGFjayBEcmFnb24ga2lja2JveGVyIEdhcnkgTWFub2d1ZSB3b24gdGhlIElLRiBTdXBlciBXZWx0ZXJ3ZWlnaHQgRml2ZSBOYXRpb25zIEZ1bGwgQ29udGFjdCBLaWNrYm94aW5nIFRpdGxlIGluIHRoZSBUZWxmb3JkIEludGVybmF0aW9uYWwgQ2VudHJlIGluIEJpcm1pbmdoYW0gcmVjZW50bHkuIApCb3N0b24ncyBmbGFnICAgd2hpY2ggd2FzIGNyZWF0ZWQgaW4gMTkxMyBieSB0aGUgbG9jYWwgQ29sdW1idXMgRGF5IHBhcmFkZSBjb21taXR0ZWUgYW5kIGFkb3B0ZWQgYnkgdGhlIGNpdHkgaW4gMTkxNyAgIHZpb2xhdGVzIGF0IGxlYXN0IHR3byBvZiB0aGUgImdvb2QgZmxhZyIgcHJpbmNpcGxlczogc2ltcGxpY2l0eSBhbmQgdGhlIHJ1bGUgYWdhaW5zdCBzZWFscy4KV2hhdCBpcyB0aGUgcHJvY2VzcyBpZiB5b3UgdGhpbmsgeW91IGhhdmUgcG9zc2libHkgZGlzdHVyYmVkIGFzYmVzdG9zPwpFbGVvbm9yYSBhc2tlZCBtZSB0byBhcnJpdmUgMTAgbWludXRlcyBlYXJseSBmb3IgdGhlIGZpcnN0IGFwcG9pbnRtZW50IHRvIHRhbGsgYWJvdXQgbXkgaGVhbHRoIGhpc3RvcnkuIFNoZSB3YXMgc28gZnJpZW5kbHkgYW5kIGNhcmluZywgSSBpbW1lZGlhdGVseSBmZWx0IGF0IGVhc2UuIApUaGVuIE1hY2UgV2luZHUgYW5kIEphbmdvIGNvbmZyb250IGVhY2ggb3RoZXIuIApNeSBncmFuZG1hIHdhcyBpbW1lZGlhdGVseSBtb3ZlZCB0byBhIGZ1bGwgdGltZSBjYXJlIGZhY2lsaXR5LCBhcyBzaGUgd2FzIGEgbG90IHdlYWtlciB0aGFuIGhlIHdhcywgYW5kIGNvdWxkbiBsaXZlIG9uIGhlciBvd24uIAoiSSBmZWVsIGxpa2UgdGhlIGNvbW11bml0eSBvZiBOZWRlcmxhbmQgcmVhbGx5IGxvb2tzIGZvcndhcmQgdG8gdGhlIGNlbGVicmF0aW9uIG9mIHRoZSB3aW50ZXIgY29taW5nIHRvIGFuIGVuZCBhbmQsIGxvb2tpbmcgZm9yd2FyZCB0byB0aGUgc3ByaW5nLCIgR2Vycml0eSBzYWlkLgpJdCB0dXJucyBvdXQgdGhhdCB0aG9zZSB0d28gcHJvYmxlbXMgd2VyZSB0d28gdmVyeSB3ZWxsIGtub3duLCB1bnNvbHZlZCBzdGF0aXN0aWNhbCBwcm9ibGVtcy4gSSBoYWQgc29sdmVkIHRoZW0gYm90aC4uIApBZ2FpbiB0aG91Z2gsIEJyYXppbCB3YXMgbGVzcyBkaXNwb3NlZCwgd2l0aCBtdWNoIHN0cm9uZ2VyIHJlYXNvbnMgdG8gYXBwcmVjaWF0ZSB0aGUgQ29uZmVkZXJhY3kgICBvbmUgb2YgaXRzIGZldyByZW1haW5pbmcgZmVsbG93cyBpbiBzbGF2ZWhvbGRpbmcuIExhdGVyIGluIHRoZSB3YXIsIERvbSBQZWRybyBJSSByZW1hcmtzIHRoYXQgInRoZSBzdWNjZXNzZXMgb2YgdGhlIEFtZXJpY2FuIFVuaW9uIGZvcmNlIHVzIHRvIHRoaW5rIGFib3V0IHRoZSBmdXR1cmUgb2Ygc2xhdmVyeSBpbiBCcmF6aWwiIGhlbHBzIHRvIGRlbW9uc3RyYXRlIHRoZSBzZW50aW1lbnRzLCBhbmQgY29uY2VybnMsIHRoYXQgcHJlc3NlZCBCcmF6aWwgYnV0IG5vbmUgb2YgaGVyIG5laWdoYm9ycywgYW5kIHRvIGJlIHN1cmUsIGl0IHdvdWxkIGJlIGxlc3MgdGhhbiBhIGRlY2FkZSBsYXRlciB0aGF0IHRoZSBSaW8gQnJhbmNvIExhdyB3b3VsZCBiZWdpbiB0byBkaXNtYW50bGUgc2xhdmVyeSBpbiBCcmF6aWwuCkkgaG9uZXN0bHkgZGlkbiByZWFsaXplIGhvdyBtYW55IG90aGVyIGdpcmxzIGhhdmUgaGFkIHRoZSBleHBlcmllbmNlIG9mIGhhdmluZyB0aGVpciBoYWlyIGZvcmNlZnVsbHkgY3V0IHVudGlsIHRoaXMgdGhyZWFkLiBJIHNvIHNvcnJ5IHRoYXQgaXQgaGFwcGVuZWQgdG8gYWxsIG9mIHVzIGFuZCBJIGhvcGUgdGhhdCB3ZSBjYW4gaGVhbC4gSSBrbm93IHBlcnNvbmFsbHkgdGhhdCBJIHdpbGwgbmV2ZXIgc3ViamVjdCBteSBkYXVnaHRlcnMgdG8gYW55dGhpbmcgdGhhdCBtYWtlcyB0aGVtIGZlZWwgaW5zZWN1cmUgaW4gdGhlaXIgYm9kaWx5IGF1dG9ub215Li4gClJlY29yZHMgZnJvbSBib3RoIGNsdWJzLCBvYnRhaW5lZCBieSBGYWlyIFRyYWRpbmcsIHJldmVhbGVkIEhhcnJvZCBnYW1ibGVkICQxMC4xIG1pbGxpb24gb24gcG9rZXIgbWFjaGluZXMgb3ZlciBhYm91dCBhIHNldmVuIHllYXIgcGVyaW9kLCBpbmNsdWRpbmcgdGhlIHllYXJzIHNoZSB3YXMgc3dpbmRsaW5nIGZyb20gdGhlIGNvbXBhbnkuIApJZiB5b3VyIGNoaW4gaXMgdG9vIGZhciBkb3duLCB5b3UgbG9vayBzaHkgYW5kIHN1cmx5LiBJZiBpdCBpcyB0b28gaGlnaCBhbmQgeW91IGFyZSBzcGVha2luZyB3aXRoIGEgdGFsbGVyIGluZGl2aWR1YWwsIHlvdSB3aWxsIGFwcGVhciB0byBiZSBzZWFyY2hpbmcgZm9yIHRoZWlyIGFwcHJvdmFsICAgZXZlbiBuZWVkeS4gSWYgeW91IGFyZSB0YWxsZXIgYW5kIGFyZSBzdGlsbCB0aWx0aW5nIHlvdXIgY2hpbiB1cCB0byBwZW9wbGUsIHlvdSBhcmUgZ2l2aW5nIGEgc3Ryb25nIGltcHJlc3Npb24gb2YgbmVnbGlnZW5jZSBhbmQgZGlzdHJhY3Rpb24uLiAKWW91IGNhbm5vdCBjaG9vc2UgdGhlIGdpcmwgdW5sZXNzIHlvdSBrbm93IG9uZSBieSBuYW1lLiJEYWVkZGFsIiBpcyBzaG9ydCBmb3IgZGFlc2hpbiBkZGFsZGRhbGksIHdoaWNoIG1lYW5zIG1hc3R1cmJhdGlvbiBieSBwcm94eS4gCkl0IGp1c3QgdGVycmlmeWluZyBldmVuIHdoZW4geW91IGtub3cgd2hhdCBoYXBwZW5pbmcuIApXb3csIHRoYXQgYXdmdWwuIENvdW50cnkgb2ZmaWNlcyB2YXJ5IHByZXR0eSB3aWxkbHkgaW4gcXVhbGl0eSwgYW5kIGV2ZW4gb3ZlciB0aW1lIGFzIHN0YWZmIGNoYW5nZXMuIE15IHJvb21tYXRlIHdhcyB0cmVhdGVkIHdlbGwgdW5kZXIgb3VyIGNvdW50cnkgZGlyZWN0b3IsIGJ1dCBhbm90aGVyIGZyaWVuZCB3aG8gbmFycm93bHkgZXNjYXBlZCBzZXh1YWwgYXNzYXVsdCB1bmRlciBhIGRpZmZlcmVudCBDRCB3YXMgdG9sZCB0aGF0IHNoZSBzaG91bGRuIGhhdmUgYmVlbiBvdXQgdGhhdCBsYXRlIHdlYXJpbmcgYSB0YW5rIHRvcCBhbnl3YXkuIEhlIHdhcyBub3QgaW50ZXJlc3RlZCBpbiBoZWxwaW5nIGFueW9uZS4gU28geWVhaCwgSSBjYW4gZGVmaW5pdGVseSBzZWUgaG93IHNvbWUgY291bnRyaWVzIHdvdWxkIGhhdmUgZGlzYXBwb2ludGluZyBwb2xpY2llcyBvciB0cmFpbmluZywgd2hpbGUgb3RoZXJzIGluIHRoaXMgdGhyZWFkIGhhZCBtb3JlIHN1cHBvcnRpdmUgZXhwZXJpZW5jZXMuCkhlcmUgaXMgYSBsaXN0IG9mIG11c3QgaGF2ZSBpdGVtcyBmb3Igc2tpZXJzLiBXaXRob3V0IHNvbWUgb2YgdGhlIGl0ZW1zIG9uIHRoaXMgbGlzdCB5b3UgY2FuIGNhdXNlIHNlcmlvdXMgc2lja25lc3MgYW5kIGluanVyeSB0byB5b3VyIGJvZHkuCkkgcmF0aGVyIGJlIGFibGUgdG8gZ2V0IG15IGhhbmRzIGRpcnR5IGFuZCBmaXggdGhlIHByb2JsZW0gdGhlbiBzdWJtaXQgYSBwYXRjaCB0aGFuIHRvIHJlcG9ydCBhIGJ1ZyBhbmQgd2FpdCBmb3IgdGhlIHZlbmRvciB0byByZWxlYXNlIGEgbmV3IHZlcnNpb24gb3IgaG90Zml4Li4gCk9jdG9iZXIuIApZb3VyIHVsdGltYXRlIGNob2ljZSBtYXkgYWxzbyByZWZsZWN0IHlvdXIgY29uZmlkZW5jZSBhcyBhIGNvb2sgYW5kIGluIHlvdXIgY2FzdCBpcm9uIHNlYXNvbmluZywgQ2FyZXkgc2F5cy4gSWYgeW91IG1vcmUgd29ycmllZCBhYm91dCBhIHBvdGVudGlhbCBjb29raW5nIGZsb3AsIGl0IG9rYXkgdG8gZGVmZXIgdG8gbm9uc3RpY2suCkxpa2UsIGR1ZGUsIG15IG1lbW9yeSBvZiBTb3V0aCBBbWVyaWNhIGJlaW5nIGZ1cnRoZXIgd2VzdCB3YXNuIGJhc2VkIG9uIHRoZSByb3RlIG1lbW9yaXphdGlvbiBvZiB0aGUgd29yZHMgIlNvdXRoIEFtZXJpY2EgaXMgWCBhbW91bnQgZWFzdCBvZiBOb3J0aCBBbWVyaWNhLCIgbm8sIHRoZSBtZW1vcnkgaXMgYmFzZWQgb24gbXkgdmlzdWFsIHBlcmNlcHRpb24gb2YgbWFwcyBhbmQgZ2xvYmVzLCBhbmQgdGhhdCB2aXN1YWwgcGVyY2VwdGlvbiBoYXMgbm90aGluZyB0byBkbyB3aXRoIGNhcmRpbmFsIGRpcmVjdGlvbnMsIG5vdCBkaXJlY3RseS4gQW5kIHdpdGggdGhlIHJpdmVyIHRoaW5nLCBJIGtuZXcgb2YgdGhlIEhvb2QgUml2ZXIsIEkganVzdCBuZXZlciBhc3NvY2lhdGVkIGl0IGFzIGJlaW5nIHRoZSBzb3V0aGVybiBib3JkZXIgb2YgV2FzaGluZ3RvbiwgZG9lcyB0aGF0IG1lYW4gdGhhdCBJIHVucmVsaWFibGU/IE5vLCBpdCBqdXN0IG1lYW5zIHRoYXQgc3BlY2lmaWMgZGV0YWlsIHdhcyBuZXZlciBnaXZlbiBtdWNoIG9mIG15IGF0dGVudGlvbi4uIApTaG9wIHRoZSBhZHMgYW5kIHVzZSBjb3Vwb25zCkxhIG1pbGl0YW50ZSBkcGxvcmUgYWluc2kgIGxlIGxhaXNzZXIgYWxsZXIgc3VyIGxlcyB2ZXJiYWxpc2F0aW9ucyBkZSBjZXJ0YWlucyBjb21tZXJjZXMgZHUgYm91bGV2YXJkIEJhcmJzIHF1aSBuZSByZXNwZWN0ZW50IHBhcyBsJ3VyYmFuaXNtZSwgbGEgY2lyY3VsYXRpb24gYW5hcmNoaXF1ZSBjcm9pc3NhbnRlLCBsZXMgZHlzZm9uY3Rpb25uZW1lbnRzIGxpcyAgbGEgbG91cmRldXIgYWRtaW5pc3RyYXRpdmUgLiBMZSB0cmF2YWlsIGNvbGxlY3RpZiBlc3QgdnJhaW1lbnQgZGlmZmljaWxlLCBham91dGUgdCBlbGxlLCBlbnRyZSBsZXMgdHJvaXMgbWFpcmllcyBkJ2Fycm9uZGlzc2VtZW50cy4gSWwgeSBhIGJlYXVjb3VwIGQnZWZmZXRzIGQnYW5ub25jZSBtYWlzIGxlcyBjaG9zZXMgbmUgcydhbWxpb3JlbnQgcGFzIHZyYWltZW50LCBldCBjJ2VzdCBkb21tYWdlIHBvdXIgdW4gcXVhcnRpZXIgYXVzc2kgdml2YW50IGV0IGF0dGFjaGFudC4gClRoZSBiYWxsIGdvdCBwYXNzZWQgdG8gS2ltIHRvIGNvbWUgdXAgd2l0aCBiZXR0ZXIgZGVudWtlIG9mZmVyaW5ncywgc28gSSBjb25zaWRlciB0aGlzIG5vIGRlYWwgc29tZXdoYXQgb2YgYSBzdWNjZXNzICAgZm9yIEFtZXJpY2FuIGludGVyZXN0cy4gSXQgYSBzaGFtZSB0aG91Z2ggdGhhdCBTb3V0aCBLb3JlYSBpcyBsZWZ0IHdpdGggbm90IG11Y2ggb3B0aW9ucyBhdG0uIApOb3cgYm90aCB0ZWFtcyB3aW4gYWxsIHJlbWFpbmcgbWF0Y2hlcyAxNiAwIGJlY2F1c2UgdGhleSBhcmUgc28gbXVjaCBiZXR0ZXIgdGhhbiBhbnlvbmUgZWxzZS4gClRoZSBmaXJzdCBpcyB0aGF0IHdoaWxlIHlvdSB0aGluayB5b3UgbWlnaHQgaGF2ZSBhbiBlZGdlLCB5b3UgcHJvYmFibHkgZG9uIFRoYXQgZmluZS4gV2UgYWxsIHN0YXJ0ZWQgb3V0IGxvc2luZyBhdCBwb2tlci4gSXQgdGFrZXMgcHJhY3RpY2UsIGFuZCBpdCBiZXR0ZXIgdG8gcHJhY3RpY2UgYXQgbWljcm9zdGFrZXMuIFNvIHlvdSBzaG91bGQgYmUgbG9va2luZyBhdCBwb2tlciBhcyBhIGZ1biBhY3Rpdml0eSB0aGF0IGNvc3RzIG1vbmV5LiBJZiBpdCBub3QgZnVuLCB3aHkgYXJlIHlvdSBzcGVuZGluZyBtb25leSBvbiBpdD8gSSBhIHdpbm5pbmcgcGxheWVyIG15c2VsZiwgYnV0IEkgd2lsbCBhZG1pdCB0d28gdGhpbmdzOiBJIHBsYXkgYmVjYXVzZSBpdCBmdW4sIGFuZCBpZiBpdCBub3QgZnVuLCBJIGRvbiBwbGF5LgpEb250IGtub3cgaWYgeW91IHdlcmUgYXNraW5nIGFueSBvbmUgc3BlY2lmaWMuIEJ1dCBmb3IgbWUgSSBkZWNpZGVkIHRvIGdvIHdlaWdodGVkIGFmdGVyIG1vbnRocyBvZiB3b3JraW5nIHdpdGggdGVjaG5pcXVlIGluIHRoZSBkaWZmZXJlbnQgZXhlcmNpc2VzIEkgZG8uIFRoZSBudW1iZXIgb2YgcmVwcyBkaWQgaW5jcmVhc2UgZHVyaW5nIHRoYXQgdGltZSwgYnV0IGl0IGlzIG5vdCBhIGZhY3RvciBJIHRvb2sgaW50byBhY2NvdW50LgpXZSB3ZXJlIHByZXR0eSA1MC81MCBzcGxpdCBvbiB3aGF0IHRvIGdldCB1bnRpbCB3ZSB2aXNpdGVkIG91ciB0aGlyZCBkZWFsZXIgd2hvIGNhc3VhbGx5IG1lbnRpb25lZCAod2l0aG91dCBrbm93aW5nIHdlIHdlcmUgY29uc2lkZXJpbmcgYSBSaWNjYXIpIHRoYXQgaGUgaGFkIG5vdGljZWQgYW4gaW5jcmVhc2UgaW4gUmljY2FyIHJlcGFpcnMgY29tZSBpbiB0aGUgbGFzdCBmZXcgeWVhcnMuIFRoaXMgaXMgYSBmYW1pbHkgb3duZWQgYnVzaW5lc3MgdGhhdCBoYXMgYmVlbiBhcm91bmQgc2luY2UgdGhlIDgwcywgc28gd2UgdG9vayB0aGVpciB3b3JkIGZvciBpdCBhbmQgcHVyY2hhc2VkIGEgTWllbGUgaW5zdGVhZC4uIApPbmUgdGFsbHkgd2lsbCBiZSBlbm91Z2ggdG8gZ2V0IHRoZSBmbG9vZGdhdGVzIGdvaW5nLCBtdWNoIGxpa2UgaW4gMjAxMy4uIApFbW1hIFdhbHRlcnMsIFZhbmNvdXZlcgpEYSBpbiBkZW4gQm9keSBNZWx0cyBrZWluIFdhc3NlciBlbnRoYWx0ZW4gaXN0LCBoYWx0ZW4gc2llIG9obmUgS29uc2VydmllcnVuZ3NzdG9mZmUgbWVocmVyZSBXb2NoZW4uIEljaCBoYWJlIGJlcmxlZ3QsIG9iIGljaCBkaWUgQm9keSBNZWx0cyBlaW5mcmJlbiBzb2xsLCBkZW5uIHJvc2Egb2RlciBpbiBoZWxsZW0gVmlvbGV0dCB3cmVuIHNpZSBkb2NoIGlyZ2VuZHdpZSBub2NoIGhic2NoZXIsIGFiZXIgaWNoIGhhdHRlIG51ciBMZWJlbnNtaXR0ZWxmYXJiZSBhdWYgV2Fzc2VyYmFzaXMgenUgSGF1c2UgdW5kIGRpZSB3cmRlbiBiZWkgZGVyIHJlaW5lbiBGZXR0bWFzc2UgZ2VuYXUgbmljaHRzIGJyaW5nZW4uIApJIHdvdWxkIHVzZSBjYXV0aW9uIGluIGdvaW5nIHRvIG1pZHRvd24gdG9kYXkuIEl0J3MgZ29pbmcgdG8gZ2V0IGEgYml0IGNyb3dkZWQuCkVhcmxpZXIgdGhhdCBkYXksIHRoYXQgImZhbW91cyIgMjkgeWVhciBvbGQgd2Fsa2VkIG91dCBvZiB0aGUgZml2ZSBzdGFyIGx1eHVyeSBIb3RlbCBNaXJhIGluIEtvd2xvb24gYW5kIHNwYXJrZWQgYW4gaW50ZW5zaXZlIGdsb2JhbCBtYW5odW50IG5vdCBzZWVuIHNpbmNlIHRoZSBzZWFyY2ggZm9yIGFsIFFhZWRhJ3MgT3NhbWEgQmluIExhZGVuIGFmdGVyIHRoZSBTZXB0LiAxMSwgMjAwMSwgYm9tYmluZ3MuIEdvdmVybm1lbnQgb24gaXRzIG93biBjaXRpemVucyBhbmQgZ292ZXJubWVudHMgYXJvdW5kIHRoZSB3b3JsZC4gCldlZG5lc2RheS4iTXkgbWFpbiBjb25jZXJuIGluIHRoYXQgYXJlYSBpcyB0aGUgZWZmZWN0cyBvZiB0aGUgc2t1bGwgZnJhY3R1cmUsIGFuZCBhcHBhcmVudGx5IHRoZXJlIHdhcyBzb21lIGJsZWVkaW5nIG9uIGhlciBicmFpbiwiIGhlIHNhaWQuTGV2ZXJlbnR6IGFkZGVkIHRoYXQgaGlzIG1vdGhlciBhbHNvIHN1ZmZlcmVkIGZyb20gdHdvIHNlcmlvdXMgbGFjZXJhdGlvbnMgaW4gdGhlIE1vbmRheSBuaWdodCBhdHRhY2ssIG9uZSBvbiBoZXIgZmFjZSBhbmQgdGhlIG90aGVyIGF0IHRoZSBiYWNrIG9mIGhlciBza3VsbC5IZSBiZWxpZXZlcyBzaGUgd2FzIGJlYXRlbiB3aXRoIGEgd29vZGVuIGZpcmUgcG9rZXIuVGhlIEJvdWxkZXIgQ291bnR5IFNoZXJpZmYncyBPZmZpY2Ugb24gV2VkbmVzZGF5IHB1YmxpY2x5IGlkZW50aWZpZWQgQ29sbGlucyBhZnRlciBvYnRhaW5pbmcgYSBjb3VydCBvcmRlciBhbGxvd2luZyB0aGVtIHRvIHJldmVhbCB0aGUgbWlub3IncyBpZGVudGl0eS5TaGVyaWZmJ3Mgb2ZmaWNpYWxzIHNvdWdodCB0aGUgcHVibGljJ3MgaGVscCBpbiBmaW5kaW5nIENvbGxpbnMgb24gVHVlc2RheSwgYnV0IGRpZCBub3QgaW5pdGlhbGx5IHJlbGVhc2UgaGlzIG5hbWUgb3IgcGljdHVyZSBiZWNhdXNlIGhlIGlzIGEgbWlub3IuIApEZXBlbmRpbmcgb24gdGhlIGNvbXBhbnkgc3RydWN0dXJlLCB0aGUgQ0lPIG1pZ2h0IGJlIHRoZSBDRk8gcHJveHkgZm9yIHRlY2hub2xvZ3kgc3BlbmQuIEluIG90aGVycyBwZXJoYXBzIG5vdCwgc28gaXQgZGVwZW5kcy4gClRoYW5rcyB0byB0aGVzZSBmdW5kcmFpc2luZyBlZmZvcnRzIHRoZSBOYXRpb25hbCBNdWx0aXBsZSBTY2xlcm9zaXMgU29jaWV0eSB3YXMgYWJsZSB0byBoZWxwIGRldmVsb3AgYSBuZXcgTVMgZHJ1Zywga25vd24gYXMgT2NyZXZ1cywgd2hpY2ggaW1wcm92ZXMgY2VsbCBoZWFsdGggaW4gdGhlIGJyYWluLCBhbmQgUm9iZXJ0cyBub3cgdXNlcyB0byByZWd1bGF0ZSBoZXIgZGlzZWFzZS4KU29sdmVudCBCYXNlZCBBZGhlc2l2ZSBGYWN0b3J5IGNhcHN1bGl0aXMgbWF5IGFic29yYiBtYXNzYWdlIHJlClBvc2l0aXZlIGVmZmVjdHMgb24gYnJhaW4gZnVuY3Rpb24gaGF2ZSBiZWVuIHJlcG9ydGVkIGZvciBmaXNoIG9pbCwgdGVhcywgZnJ1aXRzLCBmb2xhdGUsIHNwaWNlcyBhbmQgdml0YW1pbnMgWzExXS4gCkhvcmdhbiBoYXMgbWFuYWdlZCB0byBhcHByb3ZlIHRoZSBTaXRlIEMgZGFtLCBhbmQgaXMgbm93IHBsYW5uaW5nIHRvIHRha2UgY3JlZGl0IGZvciB0aGUgJDQwIGJpbGxpb24gTE5HIENhbmFkYSBtZWdhIHByb2plY3QsIGFsbCB3aGlsZSBXZWF2ZXIgcHJvcHMgdXAgSG9yZ2FuIG1pbm9yaXR5IE5EUCBnb3Zlcm5tZW50LiBHcmVlbiBwYXJ0eSBhbmQgaG9sZGVyIG9mIHRoZSBiYWxhbmNlIG9mIHBvd2VyIGluIHRoZSBsZWdpc2xhdHVyZSwgaXMgZmllcmNlbHkgb3Bwb3NlZCB0byBib3RoIHByb2plY3RzLiAKSnVzdCBhcmNoaXRlY3RzIGFuZCBjaXZpbCBlbmdpbmVlcnMgd2l0aCBzb21lIGd1aWRlbGluZXMgdG8gYWNjb21wbGlzaCB0aGVzZSB0aGluZ3MuLiAKV29yc2UsIE9QIGhhcyBhIGNoZW1vIHBvcnQuIFNoZSBkb2VzbiBldmVuIGhhdmUgdG8gaGl0IGEgdmVpbi4gSSBhZ3JlZSB3aXRoIG9uZSBvZiB0aGUgY29tbWVudHMgaW4gdGhlIE9QLCBpdCBzb3VuZHMgbGlrZSBzaGUgZG9lc24gYWN0dWFsbHkga25vdyBob3cgdG8gYWNjZXNzIGEgY2hlbW8gcG9ydCwgd2hpY2ggaXMgYXN0b3VuZGluZyBmb3IgYW4gaW5mdXNpb24gbnVyc2UuIApSZWFkIFRoaXMgUmV2aWV3IE9uIE9ubGluZSBDYXNpbm8gQm9udXMKWnVlbG93IGlzIGNoYWlyIG9mIHRoZSBEZXBhcnRtZW50IG9mIEhpc3RvcnkgYW5kIFBoaWxvc29waHkgYW5kIGFuIGFzc29jaWF0ZSBwcm9mZXNzb3Igb2YgRXVyb3BlYW4gaGlzdG9yeS4gClRoZXJlJ3MgcGxlbnR5IG9mIGFjdGlvbiBpbiBGbG9yaWRhLiAKMSlLcmV1dGhlciBjaG9jb2xhdGVzICAgZm9yIHRoZSBrbm9ja2Rvd24gcHJpY2Ugb2YgNzUwLCB5b3UgZ2V0IDI0IGNob2NvbGF0ZXMgd2hpY2ggYXJlIGZsYXZvdXJlZCB3aXRoIGxpbWl0ZWQgZWRpdGlvbiB0ZXF1aWxhcy4gV2hpY2ggd2lsbCB5b3UgY2hvb3NlPyBUaGUgY2hlc3RudXQgY29uZml0IGJpdGVzIGVucm9iZWQgaW4gY3JpbXNvbiBodWVkIG1pbGsgY2hvY29sYXRlIG9yIHRoZSBRdWViZWMgZm9yZXN0IGhvbmV5IGdhbmFjaGUgd2l0aCBjaXRydXMgYWxtb25kIEZsb3JlbnRpbmUgY3J1bWJsZT8gVGhlcmUncyBubyBDYXJhbWFjIGZsYXZvdXJlZCBvbmU6IHN3aXouLiAKU3VwcmVtZSBDb3VydCBqdXN0aWNlIFNjYWxpYSBkZWFkIGF0IDc5ClRoZXNlIHNpbXBsZSBtZWFzdXJlcyBjb3VsZCBwcmV2ZW50IHlvdSBmcm9tIGJlaW5nIG91dCAkMjAuIElmIHlvdSBkbyBmYWxsIHZpY3RpbSB0byBhIHNjYW0sIGNhbGwgQmxpenphcmQgQ3VzdG9tZXIgU3VwcG9ydCBJbW1lZGlhdGVseSB0byBzZWUgaWYgdGhleSBjYW4gcmV2ZXJzZSB0aGUgdHJhbnNhY3Rpb24uIAo4MjMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQnV0IEkgbm90aWNlZCB5b3UgYmVlbiBkZXNwZXJhdGVseSBwb3N0aW5nIGFueXRoaW5nLCBldmVuIHRoZSBtb3N0IG1hcmdpbmFsIHN0dWZmLCB0byB0cnkgYW5kIGV4b25lcmF0ZSBvciBleGN1c2UgU2V1bmdyaSBhbmQgWUcgb2YgY3JpbWluYWwgYWN0aXZpdHkuIApEb24gd2FzdGUgeW91ciBvbiB0aGlzIHN0ZWFtaW5nIHBpbGUgb2YgaHVtYW4gZ2FyYmFnZS4uIApBcyBpdCBoYXBwZW5zLCBOQkMgdGhpcyBmYWxsIGlzIG9uIGEgYml0IG9mIGEgdGVhci4gCkhlIHdhcyBrbm9ja2VkIG91dCB0aGF0IHllYXIgc2hvcnQgb2Ygd2lubmluZyBtb25leS4gClRoaXMgaXMgbXkgbW90aGVyIGluIGxhdyEgV2UgbGl2ZSBkb3duIHRoZSBoaWxsIGZyb20gdGhlbS4gT3VyIGxhc3Qgc25vdyBzdG9ybSwgbXkgaHViYnlzIGJlc3QgZnJpZW5kIHBsb3dlZCB1cyBvdXQgYmVjYXVzZSBoZSAoZGgpIGhhZCB0byBnbyB0byB3b3JrIGF0IDRwbSBhbmQgd29yayB1bnRpbCA2YW0uIFNoZSBjYWxsZWQgbWUgYW5kIGFza2VkIHdoeSBhIHdoaXRlIHRydWNrIHdhcyBwdWxsaW5nIGluIGFuZCBvdXQgb2Ygb3VyIGRyaXZld2F5LiAKVGhlIHBsYW5ldCBpcyBnb2luZyB0byB3YXJtIGZvciBjZW50dXJpZXMgaWYgd2Ugc3RvcHBlZCBBTEwgZW1pc3Npb25zIHRvZGF5LiBCaW9kaXZlcnNpdHkgaXMgcGx1bWV0dGluZy4gNTglIG9mIHdpbGRsaWZlIGhhcyBkaWVkIHNpbmNlIDE5NzAsIGxhcmdlbHkgZHVlIHRvIGZyYWdtZW50YXRpb24gKHNpbXBseSBpbmhhYml0aW5nIHRoZSBsYW5kKS4gCllvdSBzaG91bGQgaGF2ZSBtb3JlIGNsYXNzLkl0IG5vdCBsaWtlIHRob3NlIDkgeWVhcnMgaW4gZGV2ZWxvcG1lbnQgd2VyZSBhbGwgc3BlbnQgb24gZ2FtZSBiYWxhbmNlIChhbmQgaXQgc2hvd3MsIHRoaW5rIG9mIG9yaWdpbmFsIFBpbGxzIGFuZCBTdGlja2llcykuIFRoZXkgcHJvYmFibHkgaGFkIHRvIGRvIG1vcmUgd2l0aCBnZXR0aW5nIHRoZSBhcnQgc3R5bGUgcmlnaHQuVGhlIGdhbWUgaGFzIGNoYW5nZWQuIApGaW5hbGx5LCBpbiBvcmRlciB0byBiZSBzZWF0ZWQgZm9yIHZlcnkgcG9wdWxhciBzcGVha2VycywgS2lkZCBzYXlzIHBlb3BsZSBzaG91bGQgYXJyaXZlIDMwIG1pbnV0ZXMgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIHByZXZpb3VzIHByZXNlbnRhdGlvbi4uIAo0MDEuIApUb25pZ2h0IGRpbm5lciBpcyByb2FzdCBiZWVmLCBjaGlja2VuLCBhbmQgYWxsIHRoZSBzaWRlcyB5b3UgY2FuIHRoaW5rIG9mLiAKSWYgeW91IGFsc28gaW50ZXJlc3RlZCBpbiAibWVhdHkiIHRyZWF0cywgeW91IHNob3VsZCBzZWUgaWYgeW91ciBhcmVhIGhhcyBhIHJhdyBmb29kIGNvIG9wISBJIGxpdmUgaW4gYSB0aW55IHRvd24gYW5kIGZvdW5kIG9uZS4KT24gYW5vdGhlciBwb2ludCBqdXN0IGJlY2F1c2UgdGhlIENBTiBoYXZlIGFuIG92ZXJzaXplZCBwb3B1bGF0aW9uIGRvZXNuIG1lYW4gaXRzIHByYWN0aWNhbC4gSSBDQU4gZHJpdmUgYSBjYXIgd2l0aCBteSBmZWV0LCBkb2VzbiBtZWFuIGl0cyBhIGdvb2QgaWRlYS4gWW91ciBhbHNvIGNvcnJlY3QgdGhleSBtb3ZpbmcgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiB3aXRoIGZlcnRpbGl0eSByYXRlcywgYnV0IG5vdCBmYXN0IGVub3VnaC4gClRoZSBBbWF6b24gbGVkIGdyb3VwIGlzIGV4cGVjdGVkIHRvIHNlZWsgdG8gb2Zmc2V0IHRoZSBkZWNsaW5lIGJ5IGNoYXJnaW5nIGZlZXMgZm9yIHN0cmVhbWVkIGdhbWVzLCBhIHNvdXJjZSBzYWlkLgpJdCB0b29rIEplZmYgYW5kIEkgZm9yZXZlciB0byBhZ3JlZSBvbiBhIGhvdXNlLiAKQW5kIGl0IHdvdWxkIGV4cGxhaW4gb3RoZXIgdGhpbmdzIGxpa2UgYSB0b24gb2YgdGhlIG1lZ2EgZmF1bmEgZ29pbmcgZXh0aW5jdCBpbiBOb3J0aCBBbWVyaWNhLiAKUTogSG93IHdvdWxkIHN1bSB1cCB5b3VyIG92ZXJhbGwgZXhwZXJpZW5jZSBvbiAiRmlnaHQgUXVlc3QiPwpGdWNrIFNvbWVvbmUgV2lmZSBIdXNiYW5kIFJlY29yZGVkLiBNZXN1bSBEaSBXYXJuZXQgU21hIFJvayBQdXRpaCBCYWp1IEJhdGlrIDIuIApJdCBzb21ldGltZXMga2VlcHMgbWUgdXAgYXQgbmlnaHQhIEl0IGFsc28gZG9lcyBub3QgdXN1YWxseSBtYWtlIG1lIGZlZWwgYmV0dGVyIGluIHRoZSBtb21lbnQuIApJdCB3YXMgYWxzbyB0YWtlbiBjYXJlIG9mLiBUaGUgb3duZXIsIEFtYnJvc2UsIGlzIGV4dHJlbWVseSBhdHRlbnRpdmUsIGtpbmQgYW5kIHVuZGVyc3RhbmRpbmcuIApQb3N0ZWQgYnkgRWxhY2hpbSBhdCA0OjM5IFBNIG9uIE9jdG9iZXIgMTQsIDIwMTAKQXMgZm9yIHRoZSBsb29zZSBza2luIG9uIHRoZSBuZWNrLCBJIGFsc28gaGFkIHF1aXRlIHRoZSBkb3VibGUgY2hpbiBhbmQgbWluZSBkaWQgc2hyaW5rIHVwIGp1c3QgZmluZS4gTm93IEkgaGF2ZSBzZWVuIHNvbWUgd2hvIGhhdmVuIChMdXBlIG9uIG15IDYwMCBsYiBsaWZlIGlzIGEgZ29vZCBleGFtcGxlKS4gTm93IHRoaXMgaXMgd2hlcmUgYWdlIGFuZCBnZW5ldGljcyBtaWdodCBtYWtlIGEgZGlmZmVyZW5jZSBiZWNhdXNlIHF1aXRlIGEgZmV3IHBhcnRpY2lwYW50cyBvbiB0aGUgc2hvdyBkaWRuIGdldCB0aGUgc2FnZ3kgbmVjay4KWW91IG1pZ2h0IGVuam95IHBsYXlpbmcgbGl2ZSBwb2tlciwgYnV0IGRvbid0IGFsd2F5cyBoYXZlIHRoZSB0aW1lLiAKSSBrbmV3IGEgbWFuIHdobyB3b24gJDMuMW1sbiBpbiBhIHNjcmF0Y2ggb2ZmLCBhY2NlcHRlZCB0aGUgbW9uZXkgcHVibGljbHksIGFuZCBkaWVkIDMgb3IgNCBtb250aHMgbGF0ZXIgZnJvbSBhIGhlYXJ0IGNvbmRpdGlvbi4gSGUgd2FzIGF0IG15IG9mZmljZSBmb3IgYW4gaG91ciBhbmQgaGFkIG92ZXIgNDAgbWlzc2VkIGNhbGxzIGJ5IHRoZSB0aW1lIHdlIGZpbmlzaGVkIGFuZCBoZSB1bm11dGVkIGhpcyBwaG9uZS4gClNvbWV0aGluZyBoYXBwZW5zIHRvIHRoZSBuYXRpb24gdGhpcyB0aW1lIG9mIHllYXIsIGFuZCBpdCBpcyBub3Qgam9sbHkuIFBlb3BsZSBhdHRhY2sgZWFjaCBvdGhlciBvdmVyIEJsYWNrIEZyaWRheSBiYXJnYWlucywgdGhleSByYWNlIGZyb20gc3RvcmUgdG8gcGFydHkgdG8gc3RvcmUgaW4gYSBjb21wbGV0ZWx5IG9wdGlvbmFsLCBzZWxmIGltcG9zZWQgcGFuaWMgYXR0YWNrLiBBcyBzb29uIGFzIEkgc3dhbGxvd2VkIG15IHB1bXBraW4gcGllIG9uIFRoYW5rc2dpdmluZywgSSBzd2VhciBJIGZlbHQgdGhlIGFpciBhcm91bmQgbWUgZ3JvdyBjb2xkIGFuZCBhbmdyeS4uIApFdmVuIGlmIEknbSBub3QgaGFwcHkgd2l0aCB0aGUgcmVhc29uIGZvciB0aGUgY2hhbmdlLi4gCk1hZ25lc2l1bSBhbHNvIGhlbHBzIHJlZ3VsYXRlIGJsb29kIHN1Z2FyIGxldmVscywgcHJvbW90ZXMgbm9ybWFsIGJsb29kIHByZXNzdXJlLCBhbmQgaXMga25vd24gdG8gYmUgaW52b2x2ZWQgaW4gZW5lcmd5IG1ldGFib2xpc20gYW5kIHByb3RlaW4gc3ludGhlc2lzLiAKSW4gd2F5cyB0aGF0IHBlcnZlcnQgdHJ1dGggYW5kIGxvZ2ljLiAKQXJpZWx5c3NhIHUKVGhlIEJyYWluIFRoYXQgQ2hhbmdlcyBJdHNlbGYgYnkgRHIuIE5vcm1hbiBEb2lkZ2UgVGhlIGRpc2NvdmVyeSBvZiBuZXVyb3BsYXN0aWNpdHksIHRoYXQgb3VyIHRob3VnaHRzIGNhbiBjaGFuZ2UgdGhlIHN0cnVjdHVyZSBhbmQgZnVuY3Rpb24gb2Ygb3VyIGJyYWlucywgZXZlbiBpbnRvIG9sZCBhZ2UsIGlzIHRoZSBtb3N0IGltcG9ydGFudCBicmVha3Rocm91Z2ggaW4gb3VyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGJyYWluIGluIGZvdXIgaHVuZHJlZCB5ZWFycy4gCkkgYWRvcmUgQ2hyaXMgUHJhdHQgYnV0IHRoZXNlIGJlaGF2aW9ycyBhcmUgZGlzdHVyYmluZy4iLiAKVGhhbmsgeW91IGZvciB5b3VyIGhlbHAgc28gZmFyLCBJIGFwcHJlY2lhdGUgeW91IGJlaW5nIHNvIGdlbmVyb3VzIHdpdGggeW91ciB0aW1lIS4gCkluIFN1bmRheSdzIEQgcHJvbWluZW50IGxvY2FsIGJ1c2luZXNzbWFuIFBhdHJpY2sgQnVya2Ugd3JvdGUgYWJvdXQgdGhlIGRpc21hbCBlY29ub21pYyBlZmZlY3QgdGhlIFNlbmVjYSBOaWFnYXJhIENhc2lubyBoYXMgaGFkIG9uIHRoZSBjaXR5IG9mIE5pYWdhcmEgRmFsbHMuIE1yLiAKQmVjYXVzZSB3b21hbiBpcyB0aGUgYWxsIGluIG9uZSBkZXNjcmlwdGl2ZSB3b3JkIGZvciBhIG1hdHVyZSBodW1hbiBmZW1hbGUsIHRoZSB3YXkgbWFyZSBkZW5vdGVzIGFuIGFkdWx0IGZlbWFsZSBlcXVpbmUgICBpdCBzdGlsbCBhIHNoZSBidXQgaXQgYSBzaGUgb2YgYSBzcGVjaWZpYyBzcGVjaWVzLkkgZG9uIGtub3cgaWYgeW91IGEgbmF0aXZlIEVuZ2xpc2ggc3BlYWtlciBvciBub3QuIFNvIEkgcHJvdmlkZWQgdGhlIG90aGVyIHRoZSBkZWZpbml0aW9ucyBub3QgdG8gYmUgc25hcmt5IGJ1dCBzbyB5b3Ugc2VlIHBsYWlubHkgdGhhdCBpbiBub3JtYWwgc3BlZWNoIGl0IG9ubHkgd29tZW4gdGhhdCBnZXQgcmVtb3ZlZCBmcm9tIHRoZWlyIHNwZWNpZXMgYW5kIGRlZmluZWQgcHVyZWx5IGJ5IHRoZWlyIHNleC4gU28geWVhaCwgYmVpbmcgZmVtYWxlIGlzbiBhIGJhZCB0aGluZy4gCllvdSB3ZW50IHRvIGNvbGxlZ2UgeW91IHVuZGVyc3RhbmQgaG93IHRvIGxpdmUgb2ZmIG5vdGhpbmcuIFVzZSBpdCB0byB5b3VyIGFkdmFudGFnZSB0aGVuIG9uY2UgeW91ciBkZWJ0IGdvbmUsIHRha2UgdGhhdCBleHRyYSBwYXkgYXMgYW4gYWR2YW50YWdlIGFuZCBqdXN0IHB1dCBpdCBpbnRvIGludmVzdG1lbnQgc2F2aW5ncy4uIApUaGUgYmFzaWMgaWRlYSBvZiB3cmVzdGxpbmcgICB0d28gcGVvcGxlIGNvbXBldGluZyBpbiBhIHBoeXNpY2FsIGNvbWJhdCAgIGlzIGFuY2llbnQuIFRoZSBHcmVla3MgZW5nYWdlZCBpbiBhIGZvcm0gb2Ygd3Jlc3RsaW5nIHRoYXQgaGFzIHN1cnZpdmVkIHRvZGF5IGFzIGZyZWVzdHlsZSB3cmVzdGxpbmcuIFRoZSBSb21hbiBFbXBpcmUgYWRvcHRlZCBlbGVtZW50cyBvZiBHcmVlayB3cmVzdGxpbmcgd2l0aCBhbiBlbXBoYXNpcyBvbiBicnV0ZSBzdHJlbmd0aC4gClNvZnR3YXJlIHBhdGNoZXMgdGFrZSB0aW1lIGFuZCBpbnZlc3RpZ2F0aW9ucyBuZWVkIHRvIGhhcHBlbiBidXQgYWxsIHN0YXJ0cyB3aXRoIHB1bGxpbmcgdGhlIGluc2VjdXJlIHN5c3RlbXMgb2ZmIHRoZSBpbnRlcm5ldCBhbmQgbGVhdmluZyB0aGVtIGRpc2Nvbm5lY3RlZCB1bnRpbCB0aGUgaXNzdWUgaXMgcmVzb2x2ZWQuIApUaGVuIGhlIGdvdCBtYWQgdGhhdCBJIFNUSUxMIGRhcmVkIHRvIG5vdCByZXR1cm4gaGlzIGZlZWxpbmdzLCBiZWNhdXNlIGhlIHdhcyBkb2luZyB0aGVzZSBuaWNlIHRoaW5ncyBmb3IgbWUsIHNvIGhlIHRvbGQgYWxsIG15IGZyaWVuZHMgd2hhdCBJIHdhcyBhIHBzeWNobywgYW5kIGxpZWQgdGhhdCBJIGhhZCBhIHByZXNjcmlwdGlvbiBkcnVnIHByb2JsZW0gYW5kIHN0b2xlIGZyb20gaGltIChoZSB3YXMgdmVyeSB3ZWxsIG9mZiwgYW5kIEkgYW0gbm90KS4gSSBsb3N0IG15IGVudGlyZSBmcmllbmQgZ3JvdXAsIGFuZCBlbmRlZCB1cCBtb3ZpbmcgYXdheS4uIApTaGUncyB0cmllZCB0byBsb2RnZSBjb21wbGFpbnRzIGV2ZXJ5IHRpbWUgdGhlIGZvb2QgY29tZXMgdGhyb3VnaC4gCkplIHZvdXMgaW5kaXF1ZSBsYSBzb3J0aWUgZHUgbm91dmVsIG91dnJhZ2UgZGUgUGllcnJlIEJlcnRoZWxldCBzdXIgbGUgdGhtZSBkZSBsYSBzY3VyaXQgaW50cmlldXJlIGRhbnMgbGUgY2FkcmUgZGUgbCdVbmlvbiBFdXJvcGVubmUuIFZvdXMgYXZpZXogcHUgZGNvdXZyaXIgZGVzIGFydGljbGVzIGRlIGwnYXV0ZXVyIHN1ciBjZSBibG9nLiAKSSBzcGVudCBtb3N0IG9mIHRoZSBuaWdodCB0YWxraW5nIHdpdGggTWlrZS4gSGUnZCBiZWVuIGluIHRoZSBtaWxpdGFyeSBidXQgbm93IHdvcmtlZCBmb3IgTWV0cm8sIGFuZCBoZSBsaWtlZCB0byBkYW5jZSBtZXJlbmd1ZSwgc2Fsc2EsIHlvdSBuYW1lIGl0LiBCdXQgaGUnZCBpbmp1cmVkIGhpcyBsZWcgaW4gYW4gYWNjaWRlbnQgYSBmZXcgeWVhcnMgZWFybGllciBhbmQgaGFkbid0IGRvbmUgbXVjaCBkYW5jaW5nIHNpbmNlLgpUaGV5IGNhbiBzaHVmZmxlIHRoZSBjYXJkcyBhbmQgZ2V0IHRoZW0gcmVhZHkgZm9yIHRoZWlyIHR1cm4gdG8gZGVhbCBhZnRlciB0aGUgY29uY2x1c2lvbiBvZiB0aGUgY3VycmVudCBoYW5kLi4gClRoZSBiaWcgc3RhY2tzIG9mIGNoaXBzIHJlcHJlc2VudCBiaWcgbW9uZXksIGJ1dCBtb25leSBpdHNlbGYsIGFuIG9ubG9va2VyIGJlZ2lucyB0byB1bmRlcnN0YW5kLCBpcyBhbG1vc3Qgd2l0aG91dCBwc3ljaG9sb2dpY2FsIHdlaWdodCB0byB0aGUgdG9wIHBsYXllcnMuIEVyaWMgRHJhY2hlLCB3aG8gcnVucyB0aGUgY2FyZHJvb20gYXQgdGhlIGZhbmN5IG5ldyBNaXJhZ2UgY2FzaW5vIGhlcmUsIHdhcyBvZmZlcmVkIGEgam9iIG9uY2Ugd2hlbiBoZSB3YXMgYSBmdWxsIHRpbWUgY2FyZCBwbGF5ZXIuIEhlIGhhZCB0byBhc2sgYSBjaXZpbGlhbiBmcmllbmQgd2hldGhlciAkMTUwLDAwMCB3YXMgYSBnb29kIHllYXIncyBzYWxhcnkuIApUaGUgJ3Jha2UnIGlzIGEgc21hbGwgcGVyY2VudGFnZSBvZiBlYWNoIHBvdCB0aGF0IGdvZXMgdG8gdGhlIGhvdXNlIChob3N0IGNhc2lubykuIFRoaXMgaXMgdGhlIHdheSB0aGUgaG91c2UgbWFrZXMgbW9uZXkgb24gcG9rZXIuCkRvbm9yIHNpdGUgbWFzcXVlcmFkaW5nIGFzICdsb2NhbCBuZXdzJwpJIHdvdWxkIHNheSB0aGUgYmVzdCBwaWVjZSBvZiBhZHZpY2UgSSBjYW4gZ2l2ZSBpcyBDSElMTCBPVVQgYmVmb3JlIHlvdSBsZWF2ZSBhbmQgcmVhbGx5IGVuam95IHRoZSBwcm9jZXNzIG9mIGdvaW5nIHRvIHN0YWdpbmcgaW4gREMgYW5kIGNvbWluZyBpbnRvIHRyYWluaW5nIGluIExpbWEuIEZvciBzdXJlIEkgd2lzaCBpIHdvdWxkIGhhdmUgaW52ZXN0ZWQgaW4gYSBiZXR0ZXIgY2FtZXJhIGluc3RlYWQgb2YgYnJpbmdpbmcgYSBsb3VzeSBkaWdpdGFsIGNhbWVyYS4gQWxzbywgYnJpbmcgYW4gZXh0ZXJuYWwgaGFyZCBkcml2ZSBmb3IgbW92aWVzIGFuZCB0diBzaG93cy4gCldoZW4gdGhlIENJTyBpcyBpbnRlZ3JhdGVkIGludG8gdGhlIGVudGlyZSBidXNpbmVzcyBtb2RlbCBhbmQgcGxheXMgYSBrZXkgcm9sZSBpbiBkZXZlbG9waW5nIHN0cmF0ZWdpYyBwbGFucywgdGhlIGNvbXBhbnkgaXMgYmV0dGVyIHBvaXNlZCB0byByb2xsIG91dCBuZXcgaW5pdGlhdGl2ZXMgYW5kIGFjaGlldmUgcHJvZml0YWJpbGl0eS4gCklmIHlvdSByZWFsbHkgY2FyZSBhYm91dCB0aGUgYW5pbWFsLCB5b3UgZmluZCBhIHdheS4uIApMZXMgdW5zIGV0IGxlcyBhdXRyZXMgbidvbnQgcGFzIGNvbnNjaWVuY2UgcXVlIGNlIHF1aSBmaWd1cmUgbGUgUHJvbHRhcmlhdCBkdSB0cm9pc2ltZSBtaWxsbmFpcmUgbidlc3QgcGx1cyBsZSBnYXZyb2NoZSBzb3J0YW50IGRlIGxhIG1pbmUgZXQgdHJhdmFpbGxhbnQgMTIgaGV1cmVzIHBhciBqb3VyLCBzaXggam91cnMgc3VyIHNlcHQuIApUaGUgZ3VubWFuIHdhcyBpbnNwaXJlZCBpbiBwYXJ0IGJ5IGhpcyBmYXRoZXIgcmVwdXRhdGlvbiBhcyBhIGJhbmsgcm9iYmVyIHdobyB3YXMgb25jZSBvbiB0aGUgRkJJIG1vc3Qgd2FudGVkIGxpc3QsIHRoZSByZXBvcnQgc2FpZC4gCldpciBzaW5kIHNlaHIgYmVnZWlzdGVydCB2b24gZGVyIEluYmV0cmllYm5haG1lIGRlcyBzYWd0ZSBNaWNoYWVsIENhc2VsbGksIENoZWZyZWRha3RldXIgZGVzICBGYWNoYmxhdHRlcyBFdXJvcGUgc2luZCBkYXMgZXJzdGUgKClNYWdhemluIHdlbHR3ZWl0LCB3ZWxjaGVzIGltIEFib25uZW1lbnQgICBhbHNvIGF1ZiBWb3JiZXN0ZWxsdW5nIGFscyBNZXNzYWdlIHZlcmZnYmFyIGlzdC4gRXMgcGFzc3QgYmVzdGVucyBpbiB1bnNlciBLb256ZXB0LCBtb2Rlcm5zdGUgVGVjaG5vbG9naWUgdW5kIG5ldWVzdGUgRGF0ZW4gdW5kIEZha3RlbiBhdXMgZGVyIFdlbHQgZGVzIHMgdW5kIGRlciAgVG91cm5hbWVudHMgaW4gVmVyYmluZHVuZyBtaXRlaW5hbmRlciB6dSBicmluZ2VuLiBNaXQgdm9uIGRlciBQYXJ0aWUgenUgc2Vpbiwgd2VubiBldHdhcyBzbyBtb2Rlcm5lcyB3aWUgZGVyIGF1ZiBkZW4gTWFya3Qga29tbXQsIGlzdCBlaW5lIHNlaHIgc3Bhbm5lbmRlIEVyZmFocnVuZyBhdWNoIGZyIHVucy4iCkkgZGlkbid0IHJlYWxpc2UgdGhhdCB0aGVyZSB3YXMgc29tZXRoaW5nIHRydWx5IGZ1Y2tlZCB1cCBhYm91dCBtZSB1bnRpbCB0aGF0IHBvaW50LiBJJ20gZ2V0dGluZyBiZXR0ZXIsIGFuZCBoYXZlIG5vdCBicm91Z2h0IGEga25pZmUgdG8gYW55b25lIHdpdGggdGhlIGludGVudGlvbiBvZiBodXJ0aW5nIGFueW9uZSBzaW5jZSwgbm9yIGRvIEkgZXZlciBwbGFuIHRvLiAKT3VyIGludGVudGlvbnMgYXJlIG5vdCB0byBiZSB1bmNsZWFyIGFib3V0IHRoaXMgcG9saWN5LCBhbmQgd2UgdW5kZXJzdGFuZCB0aGF0IGl0IGNhbiBiZSBmcnVzdHJhdGluZyB3aGVuIGl0IHNlZW1zIHRoYXQgd2F5LiBIb3dldmVyLCBhcyB5b3Uga25vdywgb3VyIGNvbnN0YW50IHJlZnJhaW4gaXMgdGhhdCBwb2xpY3kgbXVzdCBiZSBhcHBsaWVkIGNvbnRleHR1YWxseS4gCkkgcmVhbGl6ZWQgbWFueSB5ZWFycyBhZ28gdGhhdCB0aGUgYWN0aW9uIGdlbnJlIGlzIGluIHByaW5jaXBsZSBhIGZhbnRhc3kgZ2VucmUgdGhhdCBoYXBwZW5zIHRvIHVzZSBzb21ldGhpbmcgbGlrZSB0aGUgcmVhbCB3b3JsZCBmb3IgaXRzIHNldHRpbmcgYW5kIHByb3BzLi4gClNpbmNlIGl0cyBmb3VuZGluZywgaXRzIFBBQyBoYXMgZG9sZWQgb3V0ICQyODUsMDAwIHRvIG1lbWJlcnMgb2YgQ29uZ3Jlc3MsIFBhcHBhcyBzYXlzLiAiVGhlIFBQQSBoYXMgYXJndWVkIGFzIGFuIG9yZ2FuaXphdGlvbiBmb3IgYSBsb25nIHRpbWUsIGFuZCB0cmllZCB0byBsZXQgdGhlIHBva2VyIGNvbW11bml0eSBrbm93LCB0aGF0IHRoZSBzdGF0dXMgcXVvIHdhcyBwcm9iYWJseSBub3QgdGVuYWJsZSwiIGhlIHNheXMuIApTZW5zaW5nIFBvdGVudGlhbDogdGhlIENyZWF0aXZlIFBvdGVudGlhbCBvZiBWaXJ0dWFsIFJlYWxpdGllcyBhbmQgRW1ib2RpbWVudDM6MzBwbSAgIDU6MzBwbSBUaGUgTGlicmFyeSBQcmljZSAxMApUaGUgYXVkaW8gZmlsZXMgYXJlIG1lYW50IHRvIGhlbHAgcmVkdWNlLiAKT04gVEhFIEJMT0NLOiBDYW0gRWxsaXMgWW9sbWVuIHdhcyBydXN0eSBhZ2FpbnN0IEdXUyBidXQgQWRlbGFpZGUgd2FudHMgdG8gaW52ZXN0IGluIHRoZSBiaWcgYm9kaWVkIG1pZGZpZWxkZXIuIApBbmQgdGhleSBkb24gd2FudCB0byByZXZlYWwgaG93IHRoZXkgZ290IGl0LCB3ZWxsIHlvdSBnb3R0YSBwcm90ZWN0IGFueSBwb3RlbnRpYWwgd2l0bmVzc2VzLCByaWdodD8gRXhjZXB0IHRoZSB3aXRuZXNzIHRoYXQgY2hvc2UgdG8gZ28gdG8gdGhlIG1lZGlhIGFuZCB0aGUgQUNSQyBhdm9pZGVkIGRlYWxpbmcgd2l0aCB0aGUgcG9saWNlLiAKU2Vjb25kbHksIGlmIHlvdSB3b3JyaWVkIGFib3V0IHRoZSBnYW1lIGdldHRpbmcgZHVsbCB3aGVuIHlvdSB3YWl0aW5nIGZvciBvdGhlciBwbGF5ZXJzIHRvIG1ha2UgYSBtb3ZlIGJ5IGZvbGRpbmcsIGNhbGxpbmcgb3IgcmFpc2luZyBhIGJldCwgeW91IG5lZWQgbm90IHdvcnJ5LiAKVGhlIGJhbmsgbGVuZHMgeW91ICQ1MDBLLiAKIkNlcnRhaW5seSB3ZSByZWNvbW1lbmQgcGVvcGxlIHNldCB0aW1lIGFuZCBtb25leSBsaW1pdHMgYmVmb3JlIHRoZXkgc3RhcnQsIHRyeSBub3QgdG8gbWl4IGFsY29ob2wgd2l0aCB5b3VyIGdhbWJsaW5nIGFuZCBkb24ndCBkbyBpdCB3aGVuIHlvdSdyZSB1cHNldCBvciBkZXByZXNzZWQuIApDdXN0b21lcnMgd2hvIGhhdmUgSW9UIGRldmljZXMgb3IgaG9tZSBzZWN1cml0eSBzeXN0ZW1zIGNhbiBhY2Nlc3MgdGhlbSBmcm9tIHRoZSBpbnRlcm5ldC4gQ3VzdG9tZXJzIHdobyBob3N0IGdhbWluZyBzZXJ2ZXJzIGNhbiBwbGF5IGNvbXB1dGVyIGdhbWVzIHdpdGggZnJpZW5kcy4gClRyeSBvdmVyIHRoZSBjb3VudGVyIGFudGkgaW5mbGFtbWF0b3JpZXMgaWYgbmVjZXNzYXJ5LCBidXQgdGFsayB0byB0aGUgcGhhcm1hY2lzdCBhYm91dCB3aGljaCBvbmVzIHN1aXQgYmVzdC4gUGhvbmUgeW91ciBtYXNzZXVzZSBmb3IgYWR2aWNlIGlmIG5lY2Vzc2FyeS4gS2VlcCB1cCB3aXRoIHRoZSBmbHVpZHMgYW5kIHRyeSBrZWVwIG1vdmluZyB0b28sIHRvIGF2b2lkIHRob3NlIHNlbnNpdGl2ZSBtdXNjbGVzIGZyb20gZ2V0dGluZyBzdGlmZiBhZ2Fpbi4KT3ZlcnZpZXcgZm9yIEdvYmkKV2hhdCBpZiwgd2hlbiBzaGUgdG9vayBvZmYgaGVyIHNoaXJ0LCB5b3Ugc2F3IHRyYWNrIG1hcmtzIG9uIGhlciBhcm1zIGZyb20gaW50cmF2ZW5vdXMgZHJ1ZyB1c2UgdGhhdCBwdXRzIHVzZXJzIGF0IGhpZ2ggcmlzayBvZiBjb250cmFjdGluZyBpbmN1cmFibGUgaGVwYXRpdGlzIEM/IFlvdSBjYW4gYWxzbyBnaXZlIHBlb3BsZSBoZXAgQyB0aHJvdWdoIHNleC4gV291bGRuIGl0IGJlIG5pY2UgdG8gaGF2ZSB0aGUgYWJpbGl0eSB0byBzYXkgIm5vLCBJIGRvbiB3YW50IHRvIGhhdmUgc2V4IHdpdGggeW91IiBpbnN0ZWFkIG9mIHdvcnJ5aW5nIHRoZSB3aG9sZSB0aW1lIGFib3V0IHdoZXRoZXIgeW91IGhlYWRlZCBmb3IgYWdvbnkgb24gYSBob3NwaXRhbCBiZWQgd2l0aCB5b3VyIGxpdmVyIHNodXR0aW5nIGRvd24/CllvdSBkb2luZyBldmVyeXRoaW5nIHJpZ2h0LCB5b3VyIGJhYnkgaXMgc28gbHVja3kgdG8gaGF2ZSBzdWNoIGEgc21hcnQgYW5kIGNhcGFibGUgbWFtYS4gSGFuZyBpbiB0aGVyZSwgZGFybGluZy4uIApXaGF0IHdvcnNlLCBpdCBhIGdlbnVpbmVseSBmdW4gZ2FtZS4gVGhlIGJ1aWxkaW5nIG1lY2hhbmljcyBhbmQgYWVzdGhldGljIHNldCBpdCBhcGFydCBpbiB0aGUgcmFwaWRseSBncm93aW5nIGJhdHRsZSByb3lhbGUgZ2VucmUuIApTcGVha2luZyB0byByZXBvcnRlcnMgYXQgdGhlIFdvcmxkIEVjb25vbWljIEZvcnVtIGluIERhdm9zLCBTd2l0emVybGFuZCwgU2VrbyBzYWlkIGhpcyBnb3Zlcm5tZW50IHdvdWxkIGVuY291cmFnZSBhbmQgc3VwcG9ydCBKYXBhbmVzZSBjb21wYW5pZXMgdGhhdCBhcmUgaW52aXRlZCB0byBidWlsZCBudWNsZWFyIGZhY2lsaXRpZXMgYWJyb2FkLgpJbiBoZXIgZm9vZCBib3dsIHdvdWxkIGJlIGEgY29hdGluZyBvZiBzbG9iYmVyIGFuZCBmdXIgd2hpY2ggd291bGQgZm9ybSBhIHR5cGUgb2YgYW5jaWVudCBkb2dneSBmdXIgcGFyY2htZW50IHBhcGVyIHRoYXQgd291bGQgcGVlbCBvZmYgaW4gb25lIGJpZyBwaWVjZS4gRXZlcnl3aGVyZSB0aGVyZSB3YXMgc2xvYmJlciBzdHVjaywgdGhlcmUgd2FzIGZ1ciBnbHVlZCB0byBpdC4gV2FzaGluZyBzbG9iYmVyIGZ1ciBvZmYgb2YgY2xvdGhlcyB3YXMgZGlmZmljdWx0IG9uY2UgaXQgd2FzIGRyeS4gCkF0IHRoZSBMRUMuYSBsaXR0bGUgd2VpcmQsIFRheWxvciBzYWlkIG9mIHRoZSBpZGVhIG9mIGZhY2luZyBhIHRlYW0gbGVkIGJ5IE1jTmVpbGwuSXQgcGFydCBvZiB0aGUgd2VpcmQgdGhhdCBpcyB0aGlzIHdlZWsuIApIZSBtZW50aW9uZWQgaXQgbGFzdCBuaWdodCB3aGVuIGhlIHdhcyBkb2luZyBhIGJlaGluZCB0aGUgc2NlbmVzIGNvbW1lbnQgdGhpbmcgYWJvdXQgVGF5c2hpYSBhbmQgdGhlIGZhbnRhc3kgc3VpdGUuIEkgZG9uJ3Qgc2VlIHRoZSBjbGlwIGFueXdoZXJlIG9ubGluZSwgYnV0IEkgc3VwcG9zZSBJIGNvdWxkIHRyeSBhbmQgcHVsbCBpdCBvZmYgb2YgbXkgVGlWbyBpZiB5b3UgbmVlZC4gSGUgYWxzbyByZWZlcmVuY2VkIGl0IG90aGVyIHBsYWNlcy4KQWxvbmdzaWRlIGVtcGxveWVlcycgZG9uYXRpb25zLCBhbmQgbWFrZSBpdCBlYXNpZXIgYW5kIG1vcmUgdGF4IGVmZmljaWVudCB0aHJvdWdoIHBheXJvbGwgZ2l2aW5nLiAgZm9yIHRoZSBsb25nIHRlcm06b25lIG9mZiBzZWFzb25hbCBkb25hdGlvbnMgY2FuIGJlIHF1aWNrbHkgZm9yZ290dGVuIGFuZCB1bnN1c3RhaW5hYmxlLgpTaGUgZG9lc24gaGF2ZSBhIGNob2ljZSBpbiB0aGlzIHNpdHVhdGlvbi4gRXZlbiBpZiBhcyBvdXRzaWRlcnMgaXQgc2VlbXMgbGlrZSBzaGUgZG9lcy4gc2hlIGRvZXNuIFRoZSBmYW1pbHkgYW5kIGN1bHR1cmFsIHByZXNzdXJlIGlzIHRvbyBtdWNoLiBJIGtub3cgc28gbWFueSBhZHVsdHMgd2hvIGFyZSBvdXRyaWdodCBhYnVzZWQgYnkgdGhlaXIgcGFyZW50cywgYW5kIHRoZXkgd2lsbCBzdGlsbCBuZXZlciBsZWF2ZSB0aGVtLiBUaGV5IGNhbiBldmVuIHNlZSB0aGUgYWJ1c2UgZm9yIHdoYXQgaXQgaXMuIGl0IGp1c3Qgbm9ybWFsLgpLcmFmdCB2aXNpdGVkIHRoZSBzcGEgdHdpY2UgaW4gdGhvc2UgNSBkYXlzIGFuZCB3ZXJlIGNhdWdodCBvbiBjYW1lcmEuIFRoZXkgYWxzbyBjYXVnaHQgbnVtZXJvdXMgb3RoZXIgbWVuIG9uIHZpZGVvIGluIHRob3NlIDUgZGF5cy4gCkJvdGggdGhlIGVudHJ5IGFuZCBleGl0IHBvaW50cyBpbiBwdWJsaWMgaG91c2luZyBuZWVkIGV4cGxvcmF0aW9uLCBwZW9wbGUgbmVlZCB0byBiZSBhYmxlIHRvIGdldCBob3VzZXMgd2hlbiB0aGV5IG5lZWQgdGhlbSBhbmQgZ292ZXJubWVudCBuZWVkcyB0byB3b3JrIHdpdGggcGVvcGxlIHRvIGhlbHAgdGhlbSBzdWNjZXNzZnVsbHkgdHJhbnNpdGlvbiBvdXQuLiAKSSB3YXMgYXQgYSBkaW5uZXIgd2l0aCB0d28gb2xkIGZyaWVuZHMgdGhhdCBJIGhhZG4gc2VlbiBpbiBhIGxvbmcgdGltZS4gSSBoYWQgbmV2ZXIgaGVhcmQgYSBzaW5nbGUgcmFjaXN0IHRoaW5nIG91dCBvZiBlaXRoZXIgb2YgdGhlaXIgbW91dGhzLiBBbGwgb2YgYSBzdWRkZW4sIG9uZSBvZiB0aGUgZ3V5cyBzdGFydHMgdGFsa2luZyBhYm91dCBoaXMgd29yayBuZXcgImRpdmVyc2l0eSBoaXJlLiIKSXQgZG9lc24gY29zdCBhbnl0aGluZyBpZiB5b3UgZG9uIHVzZSBpdC4gCkkgdGhpbmsgdGhleSBoYWQgYSBwbGFuIGFuZCBnb3QgdGhlIHJlc3VsdCB0aGV5IHdhbnRlZC4gVGhleSBvdmVyIGVnZ2VkIHRoZSBjYWtlIHdpdGggdGhlIGV2aWRlbmNlIHRob3VnaCEgQSBidWxsZXQgd2l0aCB0aGUgdmljdGltIEROQSBvbiBpdCEgT2J2aW91c2x5IG5lZWRlZCB0byBsaW5rIHRoZSB2aWN0aW0gdG8gdGhlIGNyaW1lIHNjZW5lIGJlY2F1c2UgdGhlcmUgd2FzIG5vIG90aGVyIHRyYWNlIG9mIGhlcjsgeWV0IGhlciBib25lcyB3ZXJlIGF3a3dhcmRseSByaWdodCBvdXRzaWRlISBSYXRoZXIgaW5zdWx0cyB0aGUgaW50ZWxsaWdlbmNlIQpGb3Igc2ltcGxpY2l0eSBsZXQncyBzYXkgVGhlIGZ1ciBjb2xvciBpcyBjb250cm9sbGVkIGJ5IG9uZSBnZW5lIHdlIHdpbGwgY2FsbCAiYyIsIHdoZXJlIHRoZSBnZW5vdHlwZSBDQyBtYWtlcyB3aGl0ZSBmdXIsIGNjIG1ha2VzIGJyb3duIGZ1ciBhbmQgQ2MgbWFrZXMgYmxhY2suIApXaGV0aGVyIGkgd2FudCB0byBhY2NlcHQgaXQgb3Igbm90LCBpdCBtYWtlcyBzbyBtdWNoIHNlbnNlLCBub3Qgc28gbXVjaCB0byBteSBtaW5kIGJ1dCB0byBteSBoZWFydC4gT24gdG9wIG9mIHRoYXQsIHRvIGJlIGEgaGVhbGVyLCBpIG11c3QgaGVhbCBteXNlbGYuIGNoYXNpbmcgdHJhbnNpZW50IHBsZWFzdXJlcy4gSXQgaHVydHMgb3RoZXJzIGFzIHdlbGwKV2hpbGUgdGhlcmUgYXJlIG90aGVyIHBsYWNlcyBvbiByZWRkaXQgZm9yIHN1Y2ggY29tbWVudHMsIGluIHBvc3RpbmcgaGVyZSwgaXQgaXMgcHJlc3VtZWQgdGhhdCBpbiBwb3N0aW5nIGhlcmUsIHRoZSBPUCBpcyBsb29raW5nIGZvciBhbiBhbnN3ZXIgdGhhdCBpcyBpbiBsaW5lIHdpdGggb3VyIHJ1bGVzLiBZb3UgY2FuIGZpbmQgZnVydGhlciBkaXNjdXNzaW9uIG9mIHRoaXMgcG9saWN5IGhlcmUuIApJIGFza2VkIGhlciBpZiBnaXJscyB3ZXJlIHJlYWxseSBiZWluZyBmb3JjZWQgdG8gcHJvc3RpdHV0ZSB0aGVtc2VsdmVzLiBIZXIgcmVwbHkgd2FzLCAiVGhhdCBhbGwgYnVsbHNoaXQuIFRoZXkgYWxsIGNob29zZSB0byBkbyBpdC4iLiAKU2hlIGhlYXJzIGhlciBuYW1lIGFuZCBTYW11ZWwgTGl2aW5nc3RvbmUuIFRoZW4gc2hlIGhlYXJzOi4gCkluc3RlYWQsIGl0IGlzIHNvbWV0aGluZyB0YWxsaWVkIHRocm91Z2ggdGhlIHBhc3Npb25hdGUgZGFpbHkgcHVyc3VpdCBvZiBvdXIgaWRlYWxzLiBBbmQgaW4gdGhhdCByZWdhcmQsIHNvbWUgc2V2ZW4gcGx1cyB5ZWFycyBhZnRlciBoZXIgZXh0cmFvcmRpbmFyeSBleHBlcmllbmNlLCBQaXBoZXIgaGFzIGZvdW5kIHRoZSB0YW5naWJsZSBhbnN3ZXJzIHRvIGhlciBjaGlsZGhvb2QgY2FsbGluZ3MuLiAKVGhlbWUgUGFya3MgYW5kIFJvbGxlciBDb2FzdGVycwpUbyBtYWtlIGl0IHdvcnNlIHNoZSBoYXMgdGhlIGNyZWFraWVzdC9sb3VkZXN0IGJlZCBzbyBJIGdldCB0byBoZWFyIGhlciBoYXZpbmcgc2V4IGF0IGFsbCBob3VycyBvZiB0aGUgbmlnaHQgYnV0IGl0J3MgZXNwZWNpYWxseSBiYWQgd2hlbiBJJ20gdHJ5aW5nIHRvIGdldCB0aGUga2lkIHRvIHNsZWVwIGJlY2F1c2Ugc2hlIHdhbnRzIHRvIGtub3cgd2hhdCB0aGUgbm9pc2UgaXMuIFNoZSB0aGlua3MgaXQncyBnaG9zdHMuIApEYWxsYXMvRm9ydCBXb3J0aC9Bcmxpbmd0b24gTWV0cm9wbGV4IERhbGxhcyBpcyBhIGxpdHRsZSBiaXQgZnVua3kgd2hlbiBpdCBjb21lcyB0byB0cnlpbmcgdG8gbmFpbCBkb3duIGl0cyBzaXplLCBiZWNhdXNlIGl0IGlzIGEgc3ByYXdsaW5nIGFyZWEgYW5kIGVuY29tcGFzc2VzIDEyIGNvdW50aWVzLiBTdGlsbCwgdGhlIG1ldHJvcG9saXRhbiBhcmVhIGlzIHRoZSBsYXJnZXN0IGluIFRleGFzIGFuZCB0aGUgZm91cnRoIGxhcmdlc3QgaW4gdGhlIFVTLiBQb3B1bGF0aW9uPyA2IG1pbGxpb24uCkknbSBzdXJlIHRoaXMgbW92aWUgYWxvbmUgaGFzIG1hZGUgc28gbWFueSBpbmRpdmlkdWFscyBjb21mb3J0YWJsZSBpbiB0aGVpciBvd24gc2tpbiwgbWF5YmUgbmV4dCB5ZWFyIGEgbW92aWUgd2l0aCBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IGRlbW9ncmFwaGljIHRoYXQgdGhvc2UgaW4gTG92ZSBTaW1vbiBjb3VsZCByZWxhdGUgdG8gd2lsbCBjb21lIG91dC4gCldoZW4gSSB0b29rIGVhcnRoIGFuZCBzY2llbmNlIGJhY2sgaW4gdW5kZXJncmFkIGFzIG15IGZyZWUgZWxjdGl2ZSBteSBwcm9mZXNzb3IgZ2F2ZSB0aGUgY2xhc3MgYSBzdXJwcmlzZSBxdWl6IHdpdGggdGhlIG1hcCBvZiB0aGUgd29ybGQgYW5kIGFza2VkIHVzIHRvIG1hcmsgY2VydGFpbiBtYWpvciBjb3VudHJpZXMuIFdoZW4gZXZlcnlvbmUgZmluaXNoZWQgaGUgd2VudCBvdmVyIHRoZSBxdWl6IGFuZCB5ZWxsZWQgb3V0IGhvdyBzb21lIHBlb3BsZSBtaXNwbGFjZWQgY2VydGFpbiBjb3VudHJpZXMgbGlrZSBwbGFjaW5nIFJ1c3NpYSBpbiBBZnJpY2EgKCBQdXRpbiBpcyBibGFjayBidHcgKSwgbWlzcGxhY2luZyBDYWxpZm9ybmlhIGluIHRoZSBlYXN0IGNvYXN0LCBwdXR0aW5nIFZpZXRuYW0gaW4gVGhhaWxhbmQsIGFuZCBldGMuIApUaGUgcHVzaCB0byBpbXByb3ZlIHdvcmtlcnMgcmlnaHRzIGluIE1leGljbyB3YXMgYSBrZXkgcHJpb3JpdHkgZm9yIENhbmFkYSBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMgZHVyaW5nIHRoZSByb2NreSBOQUZUQSByZW5lZ290aWF0aW9uIGJlY2F1c2UgdGhleSB3YW50ZWQgdG8gbGV2ZWwgdGhlIHBsYXlpbmcgZmllbGQgYmV0d2VlbiB0aGVpciB3b3JrZXJzIGFuZCBsb3dlciBwYWlkIE1leGljYW4gd29ya2VycywgZXNwZWNpYWxseSBpbiB0aGUgYXV0byBzZWN0b3IuIApOb3Rzb3dpdHR5bmFtZTg2ICA0OSBwb2ludHMgIHN1Ym1pdHRlZCAyNiBkYXlzIGFnbwpBIGdyZWF0IG1hdGVybml0eSBtYXNzYWdlIGNhbiB3b3JrIHdvbmRlcnMgb24gam9pbnQgYW5kIG11c2NsZSBwYWluICAgcGFydGljdWxhcmx5IHRoZSBsb3dlciBiYWNrIGFuZCBsZWcgcGFpbiB0aGF0IHNvIG1hbnkgcHJlZ25hbnQgd29tZW4gZXhwZXJpZW5jZS4gCkluIGFkZGl0aW9uIHRvIG5vIE9NQyB0aGVyZSB3ZXJlIGp1c3QgYSBsb3Qgb2YgYmFkIHBsYXllcnMuIFRoZXJlIGFyZSBhIGxvdCBvZiB0ZWxscyB0aGF0IHNvbWVvbmUgaXNuIGEgc2Vhc29uZWQgcGxheWVyOiBvZnRlbiBkb2Vzbid0IGtub3cgd2hlbiBpdCB0aGVpciB0dXJuIHRvIGFjdCwgZG9lc24gcHV0IHRoZSBsYXJnZXIgY2hpcHMgb24gdG9wLCBkb2VzbiByYWlzZSB0byB0d2ljZSB0aGUgYW1vdW50IG9mIHRoZSBsYXN0IGJldCwgZXRjLiAKQW5kIHRoZW4gYmFjayBpbiB0aGUgUm9tYW4gZGF5IG1vc3QgcGVvcGxlIGRpZG4ga25vdyBob3cgdG8gcmVhZCBvciB3cml0ZSwgYW5kIHRoZXJlIHdlcmUgbm8gbmV3c3BhcGVycywgbW9zdCBuZXdzIGhhZCB0byBzcHJlYWQgYnkgd29yZCBvZiBtb3V0aC4gSWYgeW91IGV2ZXIgcGxheWVkIGEgZ2FtZSBvZiB3aGlzcGVyaW5nIGEgbWVzc2FnZSBkb3duIGEgbGluZSBvZiBwZW9wbGUgeW91IGtub3cganVzdCBob3cgYmFkbHkgaXQgY2FuIGJlIGJ1dGNoZXJlZC4gU28gdGhlIHBlb3BsZSB3aG8gYWN0dWFsbHkgd3JvdGUgdGhpbmdzIGRvd24gbWlnaHQgbm90IGhhdmUgYmVlbiBmaXJzdCBoYW5kIHdpdG5lc3NlcyB0byB0aGUgZXZlbnRzIGluIHRoZSBmaXJzdCBwbGFjZS4KT24gYXZlcmFnZSwgYW4gb25saW5lIHBva2VyIGdhbWUgd2lsbCBtb3ZlIHRocmVlIHRpbWVzIGFzIGZhc3QgYXMgYSByZWFsIGNhc2luby4gVGhhdCBtZWFucyB5b3VyIHdlYWtuZXNzZXMgd2lsbCBiZSBtYWduaWZpZWQgdGhyZWUgdGltZXMuIApGUkVRVUVOVExZIEFTS0VEIFFVRVNUSU9OUwpJIHJlY29tbWVuZCBhbnlvbmUgd2hvIHRoaW5rcyBsaWtlIHRoaXMgbG9va3MgdXAgdGhlIHN0b3J5IG9mIEtpdHR5IEdlbm92ZXNlLiBXaGVuIGV2ZXJ5b25lIHNheXMgIm5vdCBteSBwcm9ibGVtIG5vdGhpbmcgZ2V0cyBkb25lLiBBIHdvbWFuIHdhcyBzdGFiYmVkIGFuZCBtdXJkZXJlZCBhbmQgZG96ZW5zIG9mIHdpdG5lc3NlcyBsZXQgaGVyIGRpZSBiZWNhdXNlIHRoZXkgZGlkbiB3YW50IHRvIGdldCBpbnZvbHZlZC4gSG93IHdlbGwgZG8gdGhleSBzbGVlcCBhdCBuaWdodCBJIHdvbmRlcj8KMjAgeWVhcnMgaW4gdGhlIGFybXkgc3RpbGwgd29uIGV2ZW4gZ2V0IHlvdSBjbG9zZSB0byByZXRpcmVtZW50IGFnZS4gSW5kZXggZnVuZHMgYXJlIGFscmVhZHkgZGl2ZXJzaWZpZWQgYW5kIHNhZmVyIHRoYW4ganVzdCBzdG9ja3MgYW5kIGRlcml2YXRpdmVzLiAKRG9uIHRydXN0IGVpdGhlciBvbmUgb2YgdGhlbUNvbmdyZXNzbWFuIFNpbHZlc3RyZSBSZXllcyAoRCAgVFgpLCBpcyBDaGFpciBvZiB0aGUgSG91c2UgSW50ZWxsaWdlbmNlIENvbW1pdHRlZSBhbmQgaGUgd2FudHMgQ29uZ3Jlc3MgdG8gdGFrZSBzb21lIG9mIHRoZSBibGFtZSBmb3IgdGhlIHRvcnR1cmUgb2YgcHJpc29uZXJzLiAKVGhleSBzZXQgdGFyZ2V0cyBiYXNlZCBvbiBhIHBhcnRpYWwgcmV2ZW51ZSBvZiB0aGUgcHJvZ3JhbSBhbmQgY29uZmlkZW5jZSBsZXZlbCB0aGF0IHdlIHdvdWxkIHdpbiB0aGUgYnVzaW5lc3MuIFNvIGZvciBhICQyME0gcHJvZ3JhbSBhdCBhIDUlIGNvbmZpZGVuY2UgbGV2ZWwsIHRoZSB0YXJnZXRzIGFyZSBzZXQgYXQgJDFNLiAKSXQncyB0b3VnaCBidXQgd2l0aCB0aGUgc3VwcG9ydCBvZiBwZW9wbGUgd2hvIHRydWx5IGxvdmUgeW91LCB5b3Ugd2lsbCBjb21lIHRocm91Z2ggdGhlIG90aGVyIHNpZGUuIApMaXZpbmcgaW4gYSBmb3JlaWduIGNvdW50cnkgYnkgaXRzZWxmIGRvZXMgbm90IG1ha2Ugb25lIGFuIGltbWlncmFudC4gV2lsbGluZyBhbmQgYWJsZSB0byBzdGF5IGluIHRoZSBmb3JlaWduIGNvdW50cnkgdW5jaGFsbGVuZ2VkIGluZGVmaW5pdGVseSBzaG91bGQgYmUgY3JpdGVyaWEgYXMgaW1taWdyYW50LiBCbGFjayBzbGF2ZXMgd2VyZSBub3QgaW1taWdyYW50cyAodW53aWxsaW5nKSAsIHBlb3BsZSBhc3NpZ25lZCB0byB3b3JrIGluIGFub3RoZXIgY291bnRyeSBhcmVuIGltbWlncmFudHMgKHVuYWJsZSBkdWUgdG8gdmlzYSBsaW1pdGF0aW9ucykgUGVvcGxlIGV4aWxlZCBhcmUgbm90IGltbWlncmFudHMuIApTaGFkb3dMaWJlcmFsICAyIHBvaW50cyAgc3VibWl0dGVkIDggaG91cnMgYWdvCkthcmwgTWFyeCBiZWxpZXZlZCBtYW55IHRoaW5ncywgYnV0IGhlIGRpZCBub3Qgc2V0IHVwIHRoZSBibHVlcHJpbnQgZm9yIHRoZSBzdGF0ZSB0aGF0IGFsbCB0aG9zZSBuYXRpb25zIHlvdSBtZW50aW9uZWQgdXNlZCBub3IgZGlkIHRoZXkgZm9sbG93IGhpcyBpZGVhcy4gTWFyeCB3YXMgYSBzdHJvbmcgYmVsaWV2ZXIgaW4gSGVnZWxpYW4gRGlhbGVjdGljcywgd2hpY2ggaXMgYSB3YXkgb2Ygdmlld2luZyBoaXN0b3J5IGFzIGEgc2VxdWVuY2Ugb2YgY29uZmxpY3RzLCB3aGVyZSBvbmUgc2lkZSBwcmVzZW50cyBhIHRoZXNpcyBhbmQgdGhlIG9wcG9zaW5nIGFuIGFudGl0aGVzaXMsIGFuZCB0aGUgdHdvIGNsYXNoLCBtZXJnaW5nIGFzcGVjdHMgb2YgYm90aCB0byBmb3JtIGEgc3ludGhlc2lzIHRvIGNyZWF0ZSB0aGUgbmV4dCBjb25mbGljdC4gU29ydCBvZiBsaWtlIHJlcHVibGljcyB2cyBtb25hcmNoaWVzIGluIHRoZSAxNzAwJ3MgYW5kIDE4MDAncywgbWFueSByZXB1YmxpY3MgaGFkIGFzcGVjdHMgb2YgdGhlIG1vbmFyY2hpZXMgYW5kIG1hbnkgbW9uYXJjaGllcyBhZG9wdGVkIHJlcHVibGljYW4gaWRlYXMuIApJdCB3YXMgY2FsbGVkIFN0dW1wIEJsYXN0aW5nLiAKIkpvaG4gS2V5IGhhcyB0b2RheSBnb25lIG9uIHRoZSBkZWZlbnNpdmUgbWFraW5nIGFsbCBzb3J0cyBvZiBleGN1c2VzIGZvciBtaXNsZWFkaW5nIHJlcG9ydGVycy4gCiA2IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0l0IGFsc28gYSB3ZWxsIHByb2dyYW1tZWQgYW5kIHdlbGwgcGVyaW9kaXplZCAyIGRheSBzdHJlbmd0aCByb3V0aW5lIHRoYXQgcmVsYXRpdmVseSBsb3cgaW4gdGVybXMgb2Ygb3ZlcmFsbCB2b2x1bWUgd2hpbGUgc3RpbGwgYWxsb3dpbmcgbWFpbnRlbmFuY2Ugb2Ygc3RyZW5ndGguIEl0IGFsc28gYWxsb3dzIGZvciBhIGxvdCBtb3JlIHNwZWNpZmljaXR5IGJlY2F1c2UgaXQgZ2l2ZXMgeW91IGZyZWVkb20gaW4gdGVybXMgb2YgYWNjZXNzb3JpZXMgY2hvc2VuLlRoZSBwcm9ncmFtIGlzIGdlbmVyYWwgZm9yIGEgcmVhc29uOiB5b3UgY2FuIHRocm93IGluIHdoYXRldmVyIHlvdSB3YW50IGZvciB0aGUgYWNjZXNzb3JpZXMgdG8gYWRkcmVzcyB5b3VyIHdlYWtuZXNzZXMuIApXaGF0IEkgaWdub3JlZCB3YXMgdGhlIGZhY3QgdGhhdCBJIHdhcyBhIGhlYWx0aHkgMjEgeWVhciBvbGQgd2hvIGhhZCBqdXN0IGRyb3BwZWQgb3V0IG9mIHNjaG9vbCwgd2FzIGluIGEgaGlnaCBzdHJlc3MgcmVsYXRpb25zaGlwLCBhbmQgd2FzIGhhdmluZyBwcm9ibGVtcyB3aXRoIG15IGZhbWlseS4gClBsZWFzZSByZXN1Ym1pdCB5b3VyIHF1ZXN0aW9uIHNwZWxsaW5nIG91dCB0aGUgc3ltYm9scyBhcyAicGx1cyIsICJtaW51cyIsICJ0aW1lcyIsICJlcXVhbHMiLiBUaGUgcXVlc3Rpb24gYXBwZWFycyB0byBoYXZlIG5vIGVxdWF0aW9uIGFuZCBzbyBpdCBpcyBub3QgcG9zc2libGUgdG8gcHJvdmlkZSBhbiBhbnN3ZXIuIApIb3dldmVyLCBmb3IgMS41IHllYXJzIHRvIGNvbnRpbnVhbCBzZWFyY2hpbmcsIEkgYW0gc3RhcnRpbmcgdG8gbG9zZSBmYWl0aC4uIApEYW5hY2ggc3RyZWljaHQgZGllIGFuZGVyZSBIYW5kIGF1ZiBkZXIgZ2VnZW5iZXJsaWVnZW5kZW4gU2VpdGUgbmFjaCB1bnRlbi4gCk5lYXJseSBldmVyeSBhc3BlY3Qgb2YgdGhlIG9yZ2FzbSAgIHdoYXQncyByZXF1aXJlZCB0byBoYXZlIG9uZSwgd2h5IHNvbWUgcGVvcGxlIGNhbid0IHNlZW0gdG8gYWNoaWV2ZSBvbmUsIHdoeSB3ZSBoYXZlIHRoZW0gYXQgYWxsICAgaGFzIGJlZW4gdGhlIHN1YmplY3Qgb2YgbXVjaCByZXNlYXJjaCBhbmQgZGViYXRlLiBXaGF0IGhhcHBlbnMgdG8gdGhlIGJvZHkgZHVyaW5nIGFuIG9yZ2FzbSBpcyBwcmV0dHkgd2VsbCBrbm93biwgYW5kIGl0J3Mgbm8gc3VycHJpc2UgdGhhdCB0aGUgYnJhaW4gcGxheXMgYSBiaWcgcGFydCBpbiByZWFjaGluZyBvbmUuIEJ1dCByZXNlYXJjaGVycyBhcmUgc3RpbGwgaW4gdGhlIHByb2Nlc3Mgb2YgZmlndXJpbmcgb3V0IGV4YWN0bHkgd2hhdCdzIGhhcHBlbmluZyBpbiB0aGUgYnJhaW4gZHVyaW5nIGFuIG9yZ2FzbS4gTGV0J3Mgc3RhcnQgd2l0aCBsb29raW5nIGF0IHRoZSBtZXNzYWdlcyB0aGF0IHRoZSBib2R5IHNlbmRzIHRvIHRoZSBicmFpbi4KVGhlIHNpdHVhdGlvbnMgdGhhdCBhcmUgIm5ldmVyIiBibHVmZnMgYXJlIHRoZSBiZXN0IHRpbWVzIHRvIGRvIGl0LiAKQW5kIHRoZSBiYWJ5LCBiZWluZyBmdWxsIG9mIGZsdWlkLCB3b3VsZCBiZSBlcXVpbGlicmF0ZWQuIEkgZG9uJ3Qga25vdyBob3cgdG8gdGVsbCBpZiB0aGVyZSdzIGRpc2NvbWZvcnQgZm9yIHRoZSBiYWJ5LCBiZWNhdXNlIGl0IHdvdWxkIGJlIGxpa2UgZGl2aW5nIGRvd24gdW5kZXJ3YXRlciwiIGV4cGxhaW5zIERyLiBDb3BlbC4uIAoiSW5zdGVhZCB3ZSBvcHQgZm9yIGxvdHMgb2Ygc21hbGxlciBzcGFjZXMsIG9uIHRoZSBzYW1lIGZsb29ycywgd2l0aCBkaXN0aW5jdCB0ZWFtcyBhbmQgYSB0b24gb2YgY29uZmVyZW5jZSByb29tcywiIHNoZSBzYXlzLiAKSSB3b3VsZG4gbWluZCB1c2luZyB0aGF0IGZvciB5b3VyIGFkdmFudGFnZSBhbmQgdHJ5IHRvIHB1dCBhIHBvbGFyaXppbmcgc2hvdmUgb3V0IGFuZCBzZWUgaWYgaGUgZ29ubmEgY2FsbCB3aXRoIGEgZmx1c2ggb3IgYW4gQXggdHlwZSBvZiBoYW5kIHRoYXQgaGUgdHJpZWQgdG8gZ2V0IHNvbWUgdGhpbiB2YWx1ZSBvbiB0aGUgcml2ZXIgZnJvbS4uIApJbiB0aGUgRE1HIHAyNzggaXQgc2F5cyB3ZWFwb25zIGFyZSB0d2ljZSBhcyBiaWcgYW5kIHRoZXJlZm9yZSB3ZWFwb24gZGFtYWdlIGRpY2UgaXMgZG91YmxlZC4gCklmIG1hbmlwdWxhdGlvbiBpcyBwZXJmb3JtZWQgaW4gdGhlIGluY29ycmVjdCB3YXkgaXQgY2FuIGhhdmUgbG9uZyB0ZXJtIGVmZmVjdHMsIGFuZCBwb3NzaWJsZSByZW5kZXIgdGhlIGNsaWVudCB1bmFibGUgdG8gcGFydGljaXBhdGUgaW4gc3BvcnQuIEVsZWN0cm90aGVyYXB5IG1vZGFsaXRpZXMgdXNlcyBlbGVjdHJpY2FsIGN1cnJlbnRzIGF0IGRpZmZlcmVudCBmcmVxdWVuY2llcyB0byBoZWxwcyB0b3dhcmRzIHRoZSByZWNvdmVyeSBvZiBhbiBpbmp1cnkuIApJIHdhbnQgdG8gc2F5IHRoZXkgd2VyZSBhcm91bmQgMTQwIGZvciBhIGtpbmcgc2V0LiAKVGhlcmUgYXJlIHNldmVyYWwgdmFyaWV0aWVzIGJ1dCBhbGwgYXJlIHF1aXRlIGNvbGxlY3RpYmxlLiAKWm9tYmllcyBkb24ndCBmZWVkIG9uIHlvdXIgZW5lcmd5LiBJbnN0ZWFkLCB0aGV5IGhhdmUgYSBmbGF0IGFmZmVjdCBhbmQgYmVpbmcgd2l0aCB0aGVtIGNhbiBtYWtlIHlvdSBmZWVsIG51bWIsIGR1bGxlZCwgYW5kIHRpcmVkLgpOYXR1cmFsbHksIHRoZXJlIGFyZSBzb21lIG9ubGluZSBwb2tlciBzaXRlcyB3aG8gbWF5IGluZGVlZCBoYXZlIGEgaGlnaCBtZW1iZXJzaGlwIHJhdGUuIEJ1dCB1bmZvcnR1bmF0ZWx5IGZvciBmaXJzdCB0aW1lIHBva2VyIHBsYXllcnMgbGlrZSB5b3UsIG1vc3Qgb2YgdGhlIHJlZ2lzdGVyZWQgbWVtYmVycyBpbiB0aGVzZSBzaXRlcyBhcmUgYWxyZWFkeSB2ZXJ5IGdvb2QgcG9rZXIgcGxheWVycyBhbmQgcXVpdGUgZGlmZmljdWx0IHRvIGJlYXQgd2hlbiB5b3UgZ28gYWdhaW5zdCB0aGVtLiAKQW55Ym9keSBpbnRlcmVzdGVkIGluIGxvb2tpbmcgaW50byB0aGlzIHNob3VsZCBjaGVjayBvdXQgTW9sbHkgR2FtZSwgYSBub3ZlbC9tb3ZpZSBhYm91dCBhIHdvbWFuIHdobyByYW4gYSBoaWdoIHN0YWtlcyB1bmRlcmdyb3VuZCBwb2tlciBvcGVyYXRpb24gd2l0aCBzb21lIG9mIEhvbGx5d29vZCBiaWdnZXN0IHN0YXJzLiAKSSBzdGFydGVkIGJlaW5nIG1vcmUgc2VsZmlzaCBpbiBteSBsaWZlLCBkb2luZyB0aGluZ3MgZm9yIE1FLCByZWdhcmRsZXNzIG9mIHdoYXQgb3RoZXJzIG1heSB0aGluayAodG8gYSBjZXJ0YWluIGV4dGVudCBvZiBjb3Vyc2UgbG9sKS4gCkFkc29LaXRLYXQxMCB1ClRoZXkgd2VyZSBqdXN0IGFib3V0IHRvIGxhdW5jaCB0aGVpciBuZXcgcHJvZHVjdCBsaW5lLCBhbmQgb24gdGhlaXIgd2Vic2l0ZSwgdGhhdCB0aGVpciBwcmV2aW91cyBJVCBndXkgaGFkIHNldCB1cCwgcGVvcGxlIGNvdWxkIHNpZ24gdXAgdG8gYmUgbm90aWZpZWQgb24gcHJvZHVjdCBsYXVuY2guIApXaGlsZSBzb2lsIChvciBvdGhlciBncm93aW5nIG1lZGl1bSkgYW5kIHdhdGVyIGFyZSBvZnRlbiB3aXRoaW4gYSBnYXJkZW5lciBjb250cm9sLCBpdCBkaWZmaWN1bHQgdG8gcmVndWxhdGUgbGlnaHQgaW4gb3V0ZG9vciBncm93aW5nIHNwYWNlcy4gVGhlIG51bWJlciBvZiBob3VycyBvZiBsaWdodCBwZXIgZGF5IHdpbGwgZGV0ZXJtaW5lIHRoZSBiZXN0IHBsYW50cyBmb3IgYSBiYWNreWFyZCwgcGF0aW8gb3IgYmFsY29ueSBnYXJkZW4sIGhlIHNheXMuIApTaGlyaW4gTWF6YXJpIGxvZ2ljIHdhcyBhcyBjb25mdXNpbmcgYXMgaGVyIHBhcnR5IHRoZXNlIGRheXMuIEJ1dCBQUFAgTmF2ZWVkIFFhbWFyIHdhcyBkb3Qgb24uIApUaGUgcHJlc2VudCBmYXZvdXJpdGUgZm9ybSBvZiBpdCBpcyBUZXhhcyBIb2xkJ2VtLiAKSW4gY29tcGFyaXNvbiB0byB0aGUgbWFyc2htYWxsb3cgc3BpbmVkIE9iYW1hLCBBcm5vbGQgU2Nod2FyemVuZWdnZXIgZGVjaWRlZCBub3QgdG8gc3VwcG9ydCBQcm9wIDggaW4gY291cnQuIEluIG90aGVyIHdvcmRzLCB0aGUgR3ViZW5hdG9yLCB3aGF0ZXZlciBoaXMgcGVyc29uYWwgb3IgZXZlbiBwb2xpdGljYWwgYmVsaWVmcywgcmVjb2duaXplcyB0aGF0IFByb3AgOCBpcyBwcm9iYWJseSB1bmNvbnN0aXR1dGlvbmFsLiBQcm9wIDggb3ZlcnR1cm5lZCBzYW1lIHNleCBtYXJyaWFnZSBpbiBDYWxpZm9ybmlhLCBidXQgYWxzbyBlc3RhYmxpc2hlZCBhIGRhbmdlcm91cyBwcmVjZWRlbnQgaW4gd2hpY2ggYSBtYWpvcml0eSBvZiB2b3RlcnMgY2FuIGRlY2lkZSB0byBkZW55IHJpZ2h0cyB0byBhIG1pbm9yaXR5LiAKU2xvd3VyeHZ0ICAyIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KRG9uJ3QgcmVtZW1iZXIgdGhlIG5hbWUuLiAKWm9lIGlzIGEgcGVyZmVjdCBleGFtcGxlIG1hc3NpdmVseSBoYXRlZCxidXQgbm90IGJhbm5lZCBiZWNhdXNlIHRoZXJlIGlzIG5vIGNpcmNsZSBqZXJrIGFyb3VuZCBiYW5uaW5nIGhlciBpbiBjaGFtcCBzZWxlY3QuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28uIApPbiB1dGlsaXNlIGFsb3JzIHVuIGNoaWVuLiBPbiBsdWkgZmFpdCBzZW50aXIgdW5lIG9kZXVyIHB1aXMgb24gbGUgcHJzZW50ZSBkZXZhbnQgNSBib2NhdXguIElsIGR0ZXJtaW5lcmEgc2kgdW5lIGRlcyBvZGV1cnMgY29ycmVzcG9uZC4uIApUaGUgbGF0ZXN0IGNvbmNlcHQgaXMgYmVsaWV2ZWQgdG8gYmUgYSBwcmV2aWV3IG9mIHRoZSBzbWFsbGVzdCB2ZWhpY2xlIGZyb20gYSBuZXcgcmFuZ2Ugb2YgZWNvIGZvY3VzZWQgbW9kZWxzIGZyb20gQXVkaSB0aGF0IHdpbGwgaW5jbHVkZSBib3RoIGUgdHJvbiBlbGVjdHJpZmllZCB2ZWhpY2xlcyBhcyB3ZWxsIGFzIGdhc29saW5lIGFuZCBkaWVzZWwgbW9kZWxzLiAKSXQncyBhbHNvIGEgbmVnYXRpdmUgc3VtIGdhbWUgaWYgeW91IGZhY3RvciBpbiB0aGUgaG91c2UncyBlcXVpdHkgKHJha2UgYW5kIHRpcHMpIGlmIHNheSB5b3UgYW5kIHlvdXIgb3Bwb25lbnQgaXMgNTAvNTAgaW4gdGVybXMgb2Ygc2tpbGwgbGV2ZWwuIDdiYi9ociB3aW5yYXRlIGlzbid0IGEgbG90IGF0IDEvMiBvciAxLzMgZ2l2ZW4gdGhlIHZhcmlhbmNlLiAKV2Ugd2VyZSBzdHJpY3RseSBwcm9mZXNzaW9uYWwgaW4gdGhlIHdvcmsgc3BoZXJlLCB3aGVyZWFzIGFub3RoZXIgY291cGxlIGluIHRoZSBvZmZpY2Ugd291bGQgb2Z0ZW4gaHVnIG9yIGtpc3MgaW4gaXQsIGFuZCBhIGNvd29ya2VyIHRoYW5rZWQgdXMgZm9yIGJlaW5nIHNvIHByb2Zlc3Npb25hbCBoYWhhLi4gClRoZXkgaGF2ZSBwcm9kdWN0cyBsaWtlIER1Y2tzIE1lZGFsbGlvbiBQb2tlciBDYXJkIFByb3RlY3RvciBhbmQgdGhleSBhcmUgc3RpbGwgY3VzdG9taXppbmcgdGhlbSB0byBtYWtlIHRoZWlyIGJyYW5kIHByZXNlbmNlIGluIHRoZSBwb2tlciB3b3JsZC4gCkZvciBleGFtcGxlLCBpbiBhICQxLzIgbGltaXQgZ2FtZSwgdGhlIHJhaXNlcyB3aWxsIGJlIGFzIGZvbGxvd3MsIGxpbWl0ZWQgdG8gZm91ciB0aW1lcyB0aGUgZmlyc3QgYmV0IHRoYXQgd2FzIG1hZGU6UHJlIGZsb3A6ICQxLCAkMiwgJDMgdXAgdG8gJDRPbiB0aGUgZmxvcDogJDEsICQyLCAkMyB1cCB0byAkNE9uIHRoZSB0dXJuOiAkMiwgJDQsICQ2IHVwIHRvICQ4T24gdGhlIHJpdmVyOiAkMiwgJDQsICQ2IHVwIHRvICQ4ClNvIGhlcmUgd2UgYXJlIGluIGNvdXJ0LCBodXNoZWQgYW5kIGV4cGVjdGFudC4gCkN1YmFuIGNpZ2FycyBhcmUgZGlmZmVyZW50LiBUaGV5IGFyZSBlYXN5IHRvIHNlZSBhbmQga25vdyBpZiB5b3UgYXJlIHdyb25nLiAKUGFkZG9jayBicm90aGVyIGhhcyBkZXNjcmliZWQgdGhlIGd1bm1hbiBhcyBhIGhpZ2ggc3Rha2VzIHZpZGVvIHBva2VyIHBsYXllciB3aG8gd2FzIHJvdXRpbmVseSBjb21wZWQgcm9vbXMsIG1lYWxzIGFuZCBkcmlua3MgYXQgY2FzaW5vcy4KSW4gd2hhdCBmb3JtIHRoZXNlIGNvbWUgZG9lc24gcmVhbGx5IG1hdHRlci4gClN0aGV0aWMgIDE1NyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkNlbnRyYWwgYmFua3MgaW5jbHVkaW5nIHRoZSBGZWRlcmFsIFJlc2VydmUgaGF2ZSBhbHJlYWR5IHJlc3BvbmRlZCB0byB0aGUgY2hhbmdlZCBjaXJjdW1zdGFuY2VzLCBhbmQgdGhlIEV1cm9wZWFuIENlbnRyYWwgQmFuayBtYXkgc29vbiBmb2xsb3cuIENoaW5hLCBmb3JjZWQgdG8gbG93ZXIgaXRzIGdvYWwgZm9yIGVjb25vbWljIGdyb3d0aCB0aGlzIHdlZWssIGhhcyByb2xsZWQgb3V0IHRheCBjdXRzIHRvIHN0aW11bGF0ZSBpdHMgZWNvbm9teS4KIkl0IGlzIG5vdCBhZ2FpbnN0IHRoZSBsYXcgaWYgeW91IGRvbid0IGhhdmUgYnVzaW5lc3MgYWN1bWVuLCIgS2lyayBzYWlkLgpUaGluZ3MgbGlrZSBzZWEgc2FsdCBvciBrb3NoZXIgc2FsdCBkbyBub3QgaGF2ZSB0aGF0IHNhbWUgdGFzdGUgYW5kIEkgdGhpbmsgYWN0dWFsbHkgYXJlIG11Y2ggc3Ryb25nZXIgYW5kIGhhdmUgYSBiZXR0ZXIgZmxhdm9yLiAKV2hlbiB5b3UgZG8gbWFrZSBhIGhhbmQsIHRob3VnaCwgcGxheSBhZ2dyZXNzaXZlbHkuIEJldCwgYmV0LCBhbmQgYmV0IHNvbWUgbW9yZTsgeW91ICh1c3VhbGx5KSB3YW50IHRvIGJldCBvdXQgbWFyZ2luYWwgaGFuZHMgYmVmb3JlIHRoZXkgaGF2ZSBhIGNoYW5jZSB0byBzZWUgbW9yZSBjYXJkcyAoYW5kIGdldCBsdWNreSkuIApJbnRlcnZpZXcgZm9yIHRoZSBJc2xlIG9mIFdpZ2h0IENvdW50eSBQcmVzc0hhdmluZyBhbiBBbGUgb2YgYSBUaW1lQWxsIHRoZSBwdWJzIGludm9sdmVkIHNlcnZlIHJlYWwgYWxlLiBBIHJlYWwgb3IgY2FzayBhbGUgaXMgb25lIHRoYXQgZ2V0cyBmcm9tIHRoZSBjYXNrIHRvIHRoZSBnbGFzcyBlaXRoZXIgYnkgZ3Jhdml0eSBmZWVkIHRhcCBvciBieSBoYW5kIHB1bXAgYW5kIGhhcyBub3QgaGFkIGNhcmJvbiBkaW94aWRlIGFkZGVkOyBhbnkgYWxlIHRoYXQgY29tZXMgaW4gYSBrZWcgYW5kIHVzZXMgZ2FzIHRvIHRyYXZlbCB0byB0aGUgZ2xhc3MgaXMgbm90IGNvbnNpZGVyZWQgYSByZWFsIGFsZS4gVGhlIElzbGUgb2YgV2lnaHQgaGFzIG92ZXIgMzAwIG1lbWJlcnMgb2YgQ0FNUkEgd2hvIGhlbHAgb3JnYW5pc2UgdGhlIGV2ZW50LCB3aXRoIG92ZXIgOTAgcHVicyBhbmQgbGljZW5zZWQgcHJlbWlzZXMgcGFydGljaXBhdGluZy4gMjIgcHVicyBvbiB0aGUgSXNsZSBvZiBXaWdodCBhcmUgbGlzdGVkIGluIHRoZSAyMDE5IENBTVJBIEdvb2QgQmVlciBHdWlkZSwgd2hpY2ggbGlzdHMgb25seSB0aGUgbmF0aW9uJ3MgZmluZXN0IHJlYWwgYWxlIHB1YnMuCklmIHlvdSBkaWQsIHlvdSBrbmV3IHdoYXQgeW91IHdlcmUgZGVmZW5kaW5nLiBJZiB5b3UgdGhpbmsgYWxsIG9mIHRoZXNlIHRoaW5ncyBhcmUgb2theSwgd2VsbC4gSSBndWVzcyBJIGNhbiByZWFsbHkgaGVscCB5b3UgdGhlcmUuLiAKKEkgZGlkbiBrbm93IHRoYXQgd2FzIGEgdGhpbmcgZWl0aGVyLikgQXMgYSBwYXJ0IG9mIHNvbWUga2luZCBvZiBlbnZpcm9ubWVudGFsIGluaXRpYXRpdmUgdGhleSB3ZXJlIHB1bGxpbmcgb3ZlciByYW5kb20gY2FycyBhbmQgbWFraW5nIHRoZW0gZG8gc21vZyBjaGVja3Mgb24gdGhlIHNpZGUgb2YgdGhlIHJvYWQgd2hpY2ggd2FzIGdvaW5nIHRvIHRha2Ugb3ZlciBhbiBob3VyIGJlY2F1c2UgdGhlcmUgd2FzIGEgbGluZSBvZiBjYXJzIHRoZXkgYWxyZWFkeSBwdWxsZWQgb3Zlci4gCkx1bW9zX25veGlvdXMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQ2FuIG15IG5hdGlvbiB0cnVseSBiZSBncmVhdCB3aGlsZSB0aGVzZSBxdWVzdGlvbnMgcmVtYWluIG9wZW4/IEkgdGhpbmsgbm90Li4gClB1cnBsZVJhZSB1CjEzIFRpcHMgVG8gRmlnaHQgSW5mbGFtbWF0aW9uClJlYWRpbmcgc3BlY3MgZm9yIG90aGVyIEtvYmxlbnogZGV2aWNlcyB0aGF0IGFyZSByZWd1bGF0b3JzLiBXaGF0IGRvIHRoZXkgZG8/IFRoZXkgcHJvdGVjdCBmcm9tIG15dGhpY2FsIHNwaWtlcyBhbmQgc3VyZ2VzLiAKQ2FuIHdlIHRlbGwgdGhlIHN0b3J5IG9mIHRoZSBuZWlnaGJvdXJob29kcyB0aGF0IHdlIGhhdmU/IE1vcnJpcyBzYWlkIG9mIGhlciBrZWVuIGludGVyZXN0IGluIGZpbmRpbmcgdm9sdW50ZWVyIGd1aWRlcyBpbiBzb3V0aCBhbmQgZWFzdCBXaW5kc29yLCB0aGUgc3VidXJicyBhbmQgdGhlIGNvdW50eS4gcmVhbGx5IHdoYXQgSmFuZSBXYWxrcyBhcmUgYWxsIGFib3V0IGFyZSB0YXBwaW5nIGludG8gcGVvcGxlIHBhc3Npb25zIGFuZCB3aGF0IHRoZXkgY2FyZSBhYm91dC4gdm9sdW50ZWVyIGJlZm9yZSBBcHJpbCAxIG9yIGxlYXJuIG1vcmUgdmlzaXQgdGhlIEphbmVzV2Fsa1lRRyBGYWNlYm9vayBwYWdlLgpHaXZlbiBvdXIgd29yayBlbmdhZ2luZyB5b3VuZyBwZW9wbGUsIHdlIGZhY2lsaXRhdGVkIGEgU2t5cGUgY29udmVyc2F0aW9uIG9uIFRodXJzZGF5IGJldHdlZW4geW91bmcgYmxhY2sgU291dGggQWZyaWNhbnMgYW5kIHN0dWRlbnRzIGhhbGYgYSB3b3JsZCBhd2F5IGluIFRvcm9udG8uIEEgZG96ZW4gU291dGggQWZyaWNhbiBjaGlsZHJlbiwgbW9zdCBmcm9tIEVhc3QgTG9uZG9uLCBuZWFyIHdoZXJlIE1hbmRlbGEgd2FzIGZyb20gb3JpZ2luYWxseSwgc2hhcmVkIHRoZWlyIHN0b3JpZXMgd2l0aCBzdHVkZW50cyBhdCBTdC4gSm9zZXBoJ3MgQ29sbGVnZSBTY2hvb2wgaW4gVG9yb250bywgYXQgYW4gZXZlbnQgaG9ub3VyaW5nIE1hbmRlbGEuLiAKVG9tYXMgVGF0YXI6IFRoZSAyNyB5ZWFyIG9sZCBsZWZ0IHdpbmdlciBmcm9tIFNsb3Zha2lhIHdhcyBzZWxlY3RlZCBieSB0aGUgRGV0cm9pdCBSZWQgV2luZ3MgaW4gdGhlIHNlY29uZCByb3VuZCAoNjB0aCBvdmVyYWxsKSBhdCB0aGUgMjAwOSBOSEwgRHJhZnQuIApBbnNvbnN0ZW4gd3JkZW4gamEgYXVjaCBuaWNodCBqZWRlbiBTb21tZXIgU2Fpc29uYXJiZWl0ZXIga29tbWVuIHp1bSBTcGFyZ2Vsc3RlY2hlbiBldGMuIApJbnZlc3RpZ2F0b3JzIHNvdWdodCByZWNvcmRzIHJlbGF0ZWQgdG8gRG91Z2hlcnR5J3Mgc2lzdGVyLCBNYXVyZWVuIEZpb2NjYSwgYW4gb2ZmaWNlIHdvcmtlciBmb3IgdGhlIHVuaW9uLCBhbmQgYW55IHBheW1lbnRzIHRvIEZpb2NjYSdzIHNvbnMgICBHZW9yZ2UsIEJyaWFuLCBhbmQgR3JlZy4gCkkgaGF2ZSBwb3N0ZWQgYWJvdXQgdGhpcyBiZWZvcmUgYnV0IGl0IGFwcDtpZXMuIEkgd2FzIGFyb3VuZCAxMSB5ZWFycyBvbGQgYW5kIEkgd29rZSB1cCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodCB0byBhIG1hbiBzdHJhZGRsZWQgb24gdG9wIG9mIG1lIHdpdGggaGlzIGhhbmQgb3ZlciBteSBtb3V0aCBhbmQgbm9zZS4gSGUgdG9sZCBtZSB0byByb2xsIG92ZXIgYW5kIG5vdCBzY3JlYW0uIEkgcm9sbGVkIG9udG8gdGhlIGZsb29yIGFuZCB0cmllZCB0byBzY3JlYW0gYmxvb2R5IG11cmRlciAoIEkgc2F5IHRyaWVkIGNhdXNlIHdoZW4geW91IGFyZSB0cnVseSB0ZXJyaWZpZWQgaXQgY2FuIHRha2UgYSBzZWNvbmQgdG8gZmluZCB5b3VyIHZvaWNlKSBteSBtb20gaGVhcmQgbWUgc2NyZWFtaW5nIGFuZCBjYW1lIGluIGFuZCBmb3VnaHQgd2l0aCB0aGUgZ3V5LCBoZSB3YXMgYXQgbGVhc3QgNiBzaGUgd2FzIDUgYW5kIHNjYXJlZCBoaW0gZW5vdWdoIHdpdGggdGhlIGZpZ2h0aW5nIGFuZCBzY3JlYW1pbmcgdGhhdCBoZSB0b29rIG9mZiBvdXQgdGhlIHdpbmRvdyBoZSBoYWQgY29tZSBpbiB0aHJvdWdoLiBOZXZlciBkaWQgY2F0Y2ggaGltLgpTbywgSSBndWVzcyB0aGVzZSBraWRzIGxlYXJuZWQgYWJvdXQgdGhhdCwgZGVjaWRlZCBpdCB3YXMgY29vbCwgYW5kIGVtdWxhdGVkIHRoZSBsb29rLiAKU2FtZW4ga3VubmVuIHdlIGtpamtlbiBhYW4gZGUgaGFuZCB2YW4gZWVuIGludGFrZSBlbiBib2R5c2NhbiBvZiBtYXNzYWdlIGVlbiBvcGxvc3Npbmcga2FuIGJpZWRlbi4gSW5kaWVuIGVyIHNwcmFrZSBpcyB2YW4gZWVuIGR1aWRlbGlqa2UgZW4gYWJzb2x1dGUgY29udHJhIGluZGljYXRpZSB6YWwgd29yZGVuIGdlYWR2aXNlZXJkIGNvbnRhY3Qgb3AgdGUgbmVtZW4gbWV0IGRlIGh1aXNhcnRzIG9mIGRlIGZ5c2lvdGhlcmFwZXV0LgpUaGVyZSB0aGV5IHdlcmUsIGNsYWQgaW4ga2ltb25vcyBhbmQgaGFkIHRoZWlyIHNsaWNrIHN0cmFpZ2h0IGJsYWNrIGhhaXIgdGllZCBiYWNrIGluIGEgdG9wa25vdC4gCkN1YW5kbyBwb25lcyB1biBicmF6YWxldGUgZGUgbGFzIFdTT1AgZW4ganVlZ28sIHRvZG8gZWwgbXVuZG8gZGViZSB0ZW5lciBsYXMgbWlzbWFzIG9wb3J0dW5pZGFkZXMgZGUgZ2FuYXJsbywgbm8gbGFzIHF1ZSB0ZSBvZnJlemNhIHR1IGNhcnRlcmEuIEZhdm9yZWNlbiBhIGxvcyBxdWUgZXN0biBkaXNwdWVzdG9zIGEgZ2FzdGFyIG1zLiAKSSBoYXZlbiBzZWVuIGEgc2luZ2xlIGdhbWUgdGhhdCBoYXMgZml4ZWQgaXQuIAoyICB0aGUgMiUgcnVsZSBpcyBzdHVwaWQsIGVzcGVjaWFsbHkgaW4gQ2FsaSwgaXQgbWFrZXMgbm8gc2Vuc2UgYW5kIGlzIGRlY2VwdGl2ZS4gCktvcmVhbnMgc3dlYXIgYnkgdGhlIGhhbiBqZXVuZyBtYWssIG9yIGtpbG4gc2F1bmEuIFRoZSBwcmFjdGljZSwgd2hpY2ggZGF0ZXMgYmFjayB0byB0aGUgMTV0aCBjZW50dXJ5LCBpbnZvbHZlcyBzaXR0aW5nIGluIGEgcm9vbSBoZWF0ZWQgYnkgYnVybmluZyBwaW5lIHdvb2QsIHdyYXBwZWQgaW4gYSBqdXRlIGdhcm1lbnQgdG8gcHJvdGVjdCB5b3VyIGJvZHkgZnJvbSB0aGUgaW50ZW5zZSBoZWF0LiAKSG93ZXZlciwgSSBjYW4gZWFzaWx5IHNlZSB0aGF0IHRoZSBwb3N0cyB0aGVyZSBhcmUgam9rZXMuIApEZW1pa2lhbmxhaCBBbGxhaCBtZW5ndW5jaSBtYXRpIGhhdGkgb3Jhbmcgb3JhbmcgeWFuZyB0aWRhayAobWF1KSBtZW1haGFtaS4gKEFyIC4gMjEgSmFuIDIwMTcgLiBNUDMgQ2VyYW1haCBUZW50YW5nIEtlbWF0aWFuLiBUb3BpY3MgTVAzIENlcmFtYWggVGVudGFuZyBLZW1hdGlhbi4gTVAzIENlcmFtYWggVGVudGFuZyBLZW1hdGlhbi4gSWRlbnRpZmllci4gS3VsdHVtIFNpbmdrYXQgVGVudGFuZyBLZW1hdGlhbiAgIEtlbWF0aWFuIGFkYWxhaCBzZXN1YXR1IHlhbmcgdGlkYWsgYWthbiBiaXNhIGRpaGluZGFyaSBvbGVoIHNldGlhcCBtYWtobHVrIHlhbmcgbWVyYXNha2FuIGhpZHVwLiAKSSB3YXMgdGhlcmUgb24gYSBzY2hvb2wgdHJpcCBhbmQgd2UgY291bGQgY2hvb3NlIHdoZXRoZXIgdG8gZ28gdG8gdGhpcyBoaXN0b3JpY2FsbHkgb2xkIGNodXJjaCwgb3Igc2VlIHRoZSBCYXlldXggdGFwZXN0cnkuIApTbWFsbCBjaXR5IGNlbnRyZSwgc28geW91IGRvbiBuZWVkIHRyYW5zcG9ydGF0aW9uIHRvIGdldCBhcm91bmQgb24gYSBkcnVuayBuaWdodCwgb3Igb24gYSBidXN5IGRheSBzdHVkeWluZyBhbmQgZm9sbG93aW5nIGxlY3R1cmVzIGluIGRpZmZlcmVudCBidWlsZGluZ3MuLiAKQnV0IGl0J3MganVzdCB0aGUgZ2VuZXJhbCBmZWVsaW5nIG9mIHRoZSBtdXNpYyAgIHRoZSBzb3VuZCwgdGhlIG92ZXJhbGwgc291bmQgYW5kIHRoZSBlZmZlY3QsIGZvciBtZSwgaGFzIGEgZ3JlYXQgc2Vuc2Ugb2Ygb3B0aW1pc20uIApXaGVyZWFzIGEgbW9tZW50IGJlZm9yZSBJIGhhZCBubyB2aXNpb24gd2hhdHNvZXZlciBvZiB3aGF0IE1pY2tleSBsb29rZWQgbGlrZSBvciB3aGF0IGhlIHdhcyB3ZWFyaW5nIHRoYXQgZGF5LCBhbGwgb2YgYSBzdWRkZW4gSSBjb3VsZCBzZWUgaW4gdml2aWQgY29sb3IgaGltIHN0YW5kaW5nIHRoZXJlIG9uIHRoYXQgZG9jayBpbiB0aGUgY2xvdGhlcyBkZXNjcmliZWQgaW4gdGhlIHBvbGljZSByZXBvcnQuIENyZWVweSBpbiBhIHdheS4gCkF0IHRoZSBzYW1lIHRpbWUsIG1hc3MgcGhpbGFudGhyb3B5IGhhcyBiZWNvbWUgaW5jcmVhc2luZ2x5IG5ld3MgZHJpdmVuLCBhcyBnaXZlcnMgcmVzcG9uZCB0byBlYXJ0aHF1YWtlcyBhbmQgdHN1bmFtaXMgd2l0aCBhbiBvdXRwb3VyaW5nIG9mIHJlc291cmNlcyBidXQgdGhlbiBsb3NlIGludGVyZXN0IGFzIHRoZXNlIGRpc2FzdGVycyBtb3ZlIG9mZiB0aGUgZnJvbnQgcGFnZS4gCk1vbnRyZWFsIHRvIGxhdW5jaCBwb3Rob2xlIHJlcGFpciBibGl0eiBhbWlkIG1pbGRlciB3ZWVrZW5kIHdlYXRoZXIKRnVsbCBidXlpbiBpcyAxMDAgdGltZXMgdGhlIGJpZyBibGluZCBhbmQgYSBzdHJhdGVneSBiZXN0IHN1aXRlZCBmb3IgdGhvc2UgdGhhdCBwbGFub24gcHV0dGluZyB0aGUgc2hvcnQgc3RhY2tlcnMgYWxsIGluLiAKVmlkZW8gcG9rZXIgaXMgc2VlbiBieSBtYW55IGFzIGEgY29tYmluYXRpb24gb2Ygc2xvdHMgYW5kIHBva2VyLiAKVGhpcyBpcyB2ZXJ5IGFkdmFuY2VkIHBsYXkgYW5kIHJlcXVpcmVzIHRoYXQgeW91IGZpcnN0IG9mIGFsbCBrbm93IHdoZXRoZXIgaXQgaXMgZXZlbiBhcHByb3ByaWF0ZSB0byBiZSB0aGlua2luZyBsaWtlIHRoaXMgICBpbiBmYWN0LCBmb3Igb3B0aW1hbCBwbGF5IHlvdSBzaG91bGQgZ2VuZXJhbGx5IHBsYXkgb25lIGxldmVsIGhpZ2hlciB0aGFuIHlvdXIgb3Bwb25lbnQsIGVzcGVjaWFsbHkgYXQgaGlnaGVyIGxldmVscy4uIAoiRnJvbSBESEdMQSBjb21lIHZlcnkgcG93ZXJmdWwgYW50aSBpbmZsYW1tYXRvcnkgZWljb3Nhbm9pZHMgdGhhdCBhY2NlbGVyYXRlIGNlbGx1bGFyIHJlanV2ZW5hdGlvbi4iIFAuIDc3CkhlIHdhcyB0aGUgZmV1ZGFsIGxvcmQuIEFuZCBoZSBpbnZlbnRlZCBjaGVtaWNhbCB3ZWFwb25zIGZvciB3YXJmYXJlLiAKVGFrZSB0aW1lIGZvciB5b3UgYXMgd2VsbCBtYXliZSB5b3Vyc2VsZiBhbmQgeW91ciBodXNiYW5kIGNvdWxkIGFsdGVybmF0ZSBTYXR1cmRheSBmb3IgYSBEYWRkeSdzIHdlZWtlbmQgb3IgbWFtbXlzIHdlZWtlbmQgd2hlcmUgb25lIHBhcmVudCB0YWtlcyBhIGRheSB0byB0aGVtc2VsdmVzPy4gCkhvcnNlc2hvZSBDYXNpbm8gQ2xldmVsYW5kIGNsb3NlZCBhIGxpdHRsZSBsYXRlciB0aGFuIGV4cGVjdGVkIGZvciBpdHMgdHJhbnNpdGlvbiB0byBKQUNLIENsZXZlbGFuZCBDYXNpbm8uIG9uIE1vbmRheSwgTWF5IDkuClNvIGV2ZW4gdGhvdWdoIGhlIHdhcyBiYWNrIHdpdGggaGlzIHNpYmxpbmdzLCBoZSBkaWRuIGtub3cgaG93IHRvIGludGVyYWN0IHdpdGggdGhlbSB0aGUgd2F5IGhlIGtuZXcgaG93IHRvICJpbnRlcmFjdCIgd2l0aCBEb2xvcmVzLiBIZSBkZWZpbml0ZWx5IHdlbnQgYSBsaXR0bGUgY3JhenkgYmVpbmcgYWxvbmUgZm9yIHNvIGxvbmcsIGJ1dCBiZWluZyBhYmxlIHRvIHRhbGsgdG8gRG9sb3JlcyB3YXMgcHJvYmFibHkgdGhlIG9ubHkgdGhpbmcgdGhhdCBrZXB0IGhpbSBmcm9tIGdvaW5nIG92ZXIgdGhlIGVkZ2UuIApOb3RoaW5nJ3Mga2VlcGluZyB5b3UgZnJvbSB0dXJuaW5nIGEgcHJpdmF0ZSBtYXNzYWdlIGludG8gICBhaGVtICAgYSBzZW5zdWFsIGV2ZW50LiBHZXR0aW5nIHJlYWNxdWFpbnRlZCB3aXRoIGhpcyAob3IgaGVyKSBib2R5IGZyb20gdGhlIGZpbmdlcnMgb3V0IGlzIGZ1biwgdG9vLiAKR3JpbmQgdGhlIGJvbmVzIGFuZCBtaXggYSB0ZWFzcG9vbiBpbnRvIHlvdXIgZG9nJ3MgZm9vZCBlYWNoIGRheSBmb3IgdGhlIG5hdHVyYWwgYm9uZSBjYWxjaXVtLiBHcmluZCB0aGVtIHVwIGFuZCB0aWxsIHRoZW0gaW50byB5b3VyIGdhcmRlbiBhcmVhLiAKRWRpdDogSGVyZSBpcyBzb21lIGZ1cnRoZXIgaW5zaWdodCBhcyB0byB3aHkuIExldHMgc2F5IHlvdXJlIGEgZG9jdG9yIGFuZCBhIHBhdGllbnQgY29tZXMgaW50byB5b3VyIG9mZmljZSAiZHIgSSBoYXZlIGhhZCB0aGlzIGRyeSBjb3VnaCBmb3IgZGF5cy4gTXkgdGhyb2F0IGlzIHNvcmUsIGl0cyBrZWVwaW5nIG1lIGF3YWtlLiAKWWVhaCB0aGVyZSBhIHByZXR0eSBnb29kIGNoYW5jZSB0aGF0IHlvdSBqdXN0IHRhbGtlZCB0byB0aGUgd3JvbmcgZGl2aXNpb24gaW4gdGhlIHN0YXRlLiAKVGlja2V0cyBhcmUgJDUgdG8gYmUgZW50ZXJlZCBpbiB0aGUgZ3JhbmQgcHJpemUgZHJhd2luZyBvZiBhICQ3NTAgZ2lmdCBjZXJ0aWZpY2F0ZSBmcm9tIE1vcnJpcyBUcmF2ZWwgYW5kIGEgZmlyc3QgcGxhY2UgcHJpemUgb2YgYSBSdWdlciBMQ1AgMzgwIGhhbmRndW4uCkFkZGVkIHByZSBzaG93IHByb21vdGlvbiBjYW4gYmUgY3JlYXRlZCBieSBsaXN0aW5nIHRoaXMgc2VydmljZSBpbiB0aGUgb2ZmaWNpYWwgc2hvdyBkaXJlY3RvcnkgaW4gZXhjaGFuZ2UgZm9yIGZyZWUgZ2lmdCBjZXJ0aWZpY2F0ZXMuIFdlIHN1cHBseSBhbiBvbiBzaXRlIGNvb3JkaW5hdG9yIHRvIHByb21vdGUgc3RyZXNzIG1hbmFnZW1lbnQgYW5kIE9uIFNpdGUgTWFzc2FnZSBzZXNzaW9ucyB0byBmb290IHRyYWZmaWMuLiAKQWxzbyBhcyBmYXIgYXMgd2VhcG9uIGNvbWJpbmF0aW9ucyBJIGZlZWwgbGlrZSBsYXNlciBwbHVzIG1pc3NpbGUgY29tYm8gaXMgYSB3YXN0ZS4gTGFzZXJzIGJ5cGFzcyBzaGllbGRzIGNvbXBsZXRlbHkgYnV0IHRoZSBtaXNzaWxlcyBmYXJlIHZlcnkgcG9vcmx5IGFnYWluc3Qgc2hpZWxkcy4gClRoaXMgY291bGQgYmUgc29tZXRoaW5nIGxpa2UgYSBwaG90byBvZiB5b3Ugc2hvd2luZyB3aGF0IHlvdSBkb2luZyB0aGUgQU1BIGFib3V0IHdpdGggYSBzaWduIHRoYXQgaGFzIHlvdXIgdXNlcm5hbWUgYW5kIHRoZSBkYXRlLiBJdCBjb3VsZCBhbHNvIGJlIGRvY3VtZW50cyAocGFydGlhbGx5IHJlZGFjdGVkIGlmIGRlc2lyZWQpIHdpdGggYSBub3RlIHRoYXQgaGFzIHRoZSB1c2VybmFtZSBhbmQgdGhlIGRhdGUuLiAKIkNlbnRyaXN0IGlzIGp1c3QgYW5vdGhlciB3b3JkIGZvciB1bmluZm9ybWVkIG5vbiB2b3Rlci4iICAgb2theSBnbyBmdWNrIHlvdXJzZWxmLiBJIGdldCBpdCwgeW91IHdhbnQgdXMgdG8gcGljayBhIHNpZGUgc28gdGhhdCB3ZSBkb24gaGF2ZSBUcnVtcCBnZXR0aW5nIGVsZWN0ZWQgYXMgYSBiaSBwcm9kdWN0IG9mIHByb2dyZXNzaXZlcyBoZWRnaW5nIGFnYWluc3QgYm90aCBwYXJ0aWVzLiBJIGdldCBpdCwgd2UgQUxMIGZ1Y2tpbmcgZ2V0IGl0ICAgeW91IGFyZW4gbW9yZSBlbmxpZ2h0ZW5lZCB0aGFuIGNlbnRyaXN0cyBiZWNhdXNlIG9mIHRoZSBpZGVudGlmaWNhdGlvbiBvZiB0aGlzIHByb2JsZW0uLiAKVGlwIERvIGEgYmFja2dyb3VuZCBjaGVjayBiZWZvcmUgcmVudGluZyBhIHNlY3Rpb24gb2YgeW91ciBob21lIHRvIGEgc3RyYW5nZXIgb3IgZXZlbiBhbiBhY3F1YWludGFuY2UuIApFbnRvbmNlcyBwYXJhIHF1anVnYXIgZWwgZGEgMSwgZW50cmFzIGRpcmVjdGFtZW50ZSBhIGp1Z2FyIGVuIGVsIGRhIDIgeSBkZSBlc2EgbWFuZXJhIGV2aXRhcyBhIGxvcyBrYW1pa2F6ZXMgZGVsIHBva2VyLgpKdXN0IGFzIGluICJwb3JuIGZvciB3b21lbiIgKGFuZCBnYXkgbWFsZSBwb3JuKSB0aGVyZSBhcmUgbG92aW5nIHNob3RzIG9mIGFicyBhbmQgbGF0cyBhbmQgZXZlbiBhIGZldyBtb21lbnRzIG9mIGJ1dHRvY2sgZ2F6aW5nLiBJdCBpcyBzaWduaWZpY2FudCB0aGF0IG9ubHkgRWR3YXJkIGFuZCBKYWNvYiB0YWtlIHRoZWlyIHNoaXJ0cyBvZmYgKE9IIE1ZIEdPRCEgVEhFWSBTTyBIT1QhKSB3aGVyZWFzIEJlbGxhIHRlbmRzIHRvIHdlYXIgamVhbnMgYW5kIGZsYW5uZWwgc2hpcnRzLiBJdCBpcyBzaWduaWZpY2FudCB0aGF0IHRoZSBzZXh1YWwgdGVuc2lvbiB0aGF0IGV4aXN0cyBpcyBiZWNhdXNlIGV2ZXJ5b25lIHdhbnRzIHRoZSB3b21hbiAoaW5jbHVkaW5nIHNvbWUgaHVtYW4gYm95cywgYnV0IHdoYXQgY2hhbmNlIGRvIHRoZXkgaGF2ZSBhbW9uZyBzdWNoIG1vbnN0cm91cyBiZWF1dGllcz8pLi4gClJlZCBBbGVydCAxIFNvdmlldCBmaW5hbCBtaXNzaW9uIHdhcyBhIGJlYXIgdW50aWwgeW91IGxlYXJuZWQgaG93IHRvIHBsYWNlIHlvdXIgc3VicyBhbmQgdGFua3MgYXQgcHJlY2lzZWx5IHRoZSByaWdodCBwbGFjZSB0byBraWxsIGFsbCB0aGUgY3J1aXNlcnMgYW5kIHJlaW5mb3JjZW1lbnRzIHRoZSBBSSBzcGFtcyBhdCB5b3UuCkhlcmUgYXJlIGEgZmV3IHRpcHMgdG8gaGVscCB5b3UgZ2V0IHlvdXIgc2NhbHAgYmFjayBpbnRvIHN1cGVyaW9yIHNoYXBlLi4gCllvdSBjYW4gZmluZCB0aGUgbWVldGluZyBzY2hlZHVsZSBvbmxpbmUuIFBvcnRpb25zIG9mIGVhY2ggQm9hcmQgYW5kIGNvbW1pdHRlZSBtZWV0aW5nIGFyZSBoZWxkIGluIGV4ZWN1dGl2ZSBzZXNzaW9uIHRvIGRpc2N1c3MgcGVyc29ubmVsIGFuZCBwcm9wcmlldGFyeSBtYXR0ZXJzLCBpbmZvcm1hdGlvbiBvYnRhaW5lZCBvbiBhIGNvbmZpZGVudGlhbCBiYXNpcywgb3IgaXRlbXMgcmVxdWlyaW5nIGNvbmZpZGVudGlhbCBhZHZpY2Ugb2YgY291bnNlbC4gCkluIG15IGV4cGVyaWVuY2UgdGhlIGdhbWVzIGhhdmUgYSBiaXQgYmV0dGVyIGFjdGlvbiBhdCB0aGUgQmVsbGFnaW8gYnV0IEkgdGhpbmsgdGhlIEFyaWEgaXMgbmljZXIgb3ZlcmFsbC4gSWYgeW91IHdhbnQgdG8gZ28gb2ZmIHN0cmlwIHRvIHBsYXkgdGhlbiBnbyB0byB0aGUgR29sZCBOdWdnZXQgb3IgdGhlIFJlZCBSb2NrLiBHb2xkIE51Z2dldCBoYXMgdW5jYXBwZWQgMS8yIGFuZCBSZWQgUm9jayBhbHdheXMgaGFzIGEgY291cGxlIG9mIGdhbWVzIGdvaW5nIGJ1dCBpdCdzIG5vdCBhbHdheXMgZ29vZC4uIApLbyBMYW50YSBUb3VyaXNtS28gTGFudGEgSG90ZWxzQmVkIGFuZCBCcmVha2Zhc3QgS28gTGFudGFLbyBMYW50YSBIb2xpZGF5IFJlbnRhbHNLbyBMYW50YSBIb2xpZGF5IFBhY2thZ2VzRmxpZ2h0cyB0byBLbyBMYW50YUtvIExhbnRhIFJlc3RhdXJhbnRzS28gTGFudGEgQXR0cmFjdGlvbnNLbyBMYW50YSBUcmF2ZWwgRm9ydW1LbyBMYW50YSBQaG90b3NLbyBMYW50YSBNYXBLbyBMYW50YSBHdWlkZUFsbCBLbyBMYW50YSBIb3RlbHNLbyBMYW50YSBIb3RlbCBEZWFsc0xhc3QgTWludXRlIEhvdGVscyBpbiBLbyBMYW50YUhvdGVscyBuZWFyIExhbnRhIENhc3Rhd2F5IEJlYWNoIFJlc29ydEJ5IEhvdGVsIFR5cGVLbyBMYW50YSBCZWFjaCBIb3RlbHNLbyBMYW50YSBSZXNvcnRzUm9tYW50aWMgSG90ZWxzIGluIEtvIExhbnRhU3BhIEhvdGVscyBpbiBLbyBMYW50YUZhbWlseSBIb3RlbHMgS28gTGFudGFMdXh1cnkgSG90ZWxzIGluIEtvIExhbnRhQnkgSG90ZWwgQ2xhc3M1IHN0YXIgSG90ZWxzIGluIEtvIExhbnRhNCBzdGFyIEhvdGVscyBpbiBLbyBMYW50YTMgc3RhciBIb3RlbHMgaW4gS28gTGFudGFQb3B1bGFyIEFtZW5pdGllc0tvIExhbnRhIEhvdGVscyB3aXRoIFBhcmtpbmdLbyBMYW50YSBIb3RlbHMgd2l0aCBhIFBvb2xQZXQgRnJpZW5kbHkgSG90ZWxzIGluIEtvIExhbnRhUG9wdWxhciBLbyBMYW50YSBDYXRlZ29yaWVzRGVzaWduIEhvdGVscyBpbiBLbyBMYW50YUtvIExhbnRhIFJvbWFudGljIFJlc29ydHNCdWRnZXQgSG90ZWxzIGluIEtvIExhbnRhUXVpZXQgUmVzb3J0cyBpbiBLbyBMYW50YVF1aWV0IEhvdGVscyBpbiBLbyBMYW50YUtvIExhbnRhIEhvdGVscyB3aXRoIEhvdCBUdWJzV2VkZGluZyBSZXNvcnRzIEtvIExhbnRhQ2hhcm1pbmcgSG90ZWxzIGluIEtvIExhbnRhS28gTGFudGEgU3VpdGUgSG90ZWxzS28gTGFudGEgQmVhY2ggU3BhIFJlc29ydHNOZWFyIExhbmRtYXJrc0hvdGVscyBuZWFyIEluc2VhIEJlYWNoIEJhckhvdGVscyBuZWFyIERpdmUgUmVsYXhIb3RlbHMgbmVhciBQaHJhIEFlIEJlYWNoSG90ZWxzIG5lYXIgRSBCaWtlIFRvdXJzIGFuZCBSZW50YWxIb3RlbHMgbmVhciBGbGlwIEZsb3AgRGl2ZXJzSG90ZWxzIG5lYXIgRnVua3kgTW9ua2V5SG90ZWxzIG5lYXIgRml0IE9uIExhbnRhSG90ZWxzIG5lYXIgS29ybmVyIEJhckhvdGVscyBuZWFyIExhbnRhIFlvZ2FIb3RlbHMgbmVhciBQaHJhIEFlIFB1YmxpYyBIZWFsdGggUGFya05lYXIgQWlycG9ydHNTdXZhcm5hYmh1bWkgSW50bCBBaXJwb3J0IEhvdGVsc0tyYWJpIEFpcnBvcnQgSG90ZWxzVHJhbmcgQWlycG9ydCBIb3RlbHNBbGwgS28gTGFudGEgUmVzdGF1cmFudHNSZXN0YXVyYW50cyBuZWFyIExhbnRhIENhc3Rhd2F5IEJlYWNoIFJlc29ydEFsbCB0aGluZ3MgdG8gZG8gaW4gS28gTGFudGFUaGluZ3MgdG8gZG8gbmVhciBMYW50YSBDYXN0YXdheSBCZWFjaCBSZXNvcnRUcmF2ZWwgR3VpZGVzQXBwc0NydWlzZXNHcmVlbkxlYWRlcnMKRmFzdCBmb3J3YXJkIDMgeWVhcnMsIG9uZSBvZiBteSBmcmllbmRzIHNlbnQgbWUgYSBtYXJyaWFnZSBjZXJ0aWZpY2F0ZS4gSXQgaGFkIGhpcyBuYW1lIGFuZCB0aGUgbmFtZSBvZiBoaXMgY2hpbGRob29kIGJlc3QgZnJpZW5kIGZyb20gU3BhaW4gYSB3b21hbi4gVGhlIGRhdGUgd2FzIDIgbW9udGhzIGFmdGVyIGhpcyBEV0kgYW5kIDQgbW9udGhzIGJlZm9yZSB3ZSBicm9rZSB1cC4gCkxldCdzIHNheSB5b3Ugc3RhcnQgYSBzZXNzaW9uIHdpdGggJDEwLDAwMCBhbmQgZW5kIHVwIHdpdGggJDExLDAwMCBmaXZlIGhvdXJzIGxhdGVyLiAKQ2F1Z2h0IGluIHRoZSBtaWRkbGUgYXJlIEJyYXppbGlhbnMgd2hvIGRpc2xpa2UgYm90aCBjYW5kaWRhdGVzIGFuZCBzZWUgdGhlbSBhcyBzeW1ib2xzIG9mIGEgYnJva2VuIHN5c3RlbS4KQnV0IHRoYXQgbm90IGdvaW5nIHRvIGhhcHBlbi4gCkZyZXF1ZW50IHRyYWluaW5nLCB0dWl0aW9uIHJlaW1idXJzZW1lbnQgZm9yIGVtcGxveWVlcywgbXVjaCBoaWdoZXIgcGF5IHRoYW4gaW4gdGhlIGNpdmlsaWFuIHdvcmxkIHNvIHRoYXQgdGhlcmUgd2FzIGxpdHRsZSBlbXBsb3llZSB0dXJub3ZlciwgYSB0b24gb2Ygb3ZlcnNpZ2h0LiBBbGwgb2YgdGhpcyB3YXMgZG9uZSBpbiByZXNwb25zZSB0byBob3cgY3JhcHB5IGNoaWxkY2FyZSB3YXMgaW4gdGhlIDgwcyBhbmQgaG93IG1hbnkgam9pbnQgbWlsaXRhcnkgY291cGxlcywgd29ya2luZyBzcG91c2VzLCBhbmQgc2luZ2xlIHBhcmVudHMgd2VyZSBpbiB0aGUgbWlsaXRhcnkuIApTbyBJIGFza2luZyB0aGUgdGVlbiwgYXJlIHlvdSBjb250cmlidXRpbmc/IEFyZSB5b3Ugd29ya2luZyB0byBiZSBzb21ldGhpbmc/IEFueXRoaW5nLiBCZWNhdXNlIHlvdXIgZGFkIGlzIHN1cHBvcnRpbmcgeW91LCB5b3VyIGpvYiBpcyBzY2hvb2wuIEl0IHNpbXBsZS4gQWdhaW4gdGhvdWdoLCBJIGRvbiBrbm93IHRoZSB3aG9sZSBzdG9yeS4gTWF5YmUgdGhpcyBraWQgaXMgYSBzdHJhaWdodCBBIGFuZ2VsIHRlZW4uIEkgbWV0IGFidXNlZCBraWRzIHdobyBleGNlbCBpbiBzY2hvb2wgdGhhdCBhcmUgb2suIEkgYWxzbyBrbm93IHBhbXBlcmVkIGtpZHMgd2hvIGFyZSB0ZXJyaWJsZSBzdHVkZW50cy4gVGhlcmUgaXMgbm8gbm9ybS4KVGhlIEZvcmVzdHJ5IENvcnBzIHdhcyBjcmVhdGVkIGR1cmluZyB0aGUgRmlyc3QgV29ybGQgV2FyIHdoZW4gaXQgd2FzIGRpc2NvdmVyZWQgdGhhdCBodWdlIHF1YW50aXRpZXMgb2Ygd29vZCB3ZXJlIG5lZWRlZCBmb3IgdXNlIG9uIHRoZSBXZXN0ZXJuIEZyb250LiBEdWNrYm9hcmRzLCBzaG9yaW5nIHRpbWJlcnMsIGNyYXRlcyBhbnl0aGluZyB0aGF0IG5lZWRlZCB3b29kIGhhZCB0byBiZSBwcm92aWRlZC4gVGhlIEJyaXRpc2ggZ292ZXJubWVudCBjb25jbHVkZWQgdGhhdCB0aGVyZSB3YXMgbm9ib2R5IG1vcmUgZXhwZXJpZW5jZWQgb3IgcXVhbGlmaWVkIGluIHRoZSBCcml0aXNoIEVtcGlyZSB0byBoYXJ2ZXN0IHRpbWJlciB0aGFuIHRoZSBDYW5hZGlhbnMuIEF0IGZpcnN0IHRoZSBpZGVhIHdhcyB0byBoYXJ2ZXN0IHRoZSB0cmVlcyBmcm9tIENhbmFkYSBhYnVuZGFudCBmb3Jlc3RzIGFuZCBicmluZyB0aGVtIG92ZXJzZWFzLiBCdXQgc3BhY2UgYWJvYXJkIG1lcmNoYW50IHNoaXBzIHdhcyBhdCBhIHByZW1pdW0sIHNvIHJhdGhlciB0aGFuIHN0dWZmIHNoaXBzIGhvbGRzIHdpdGggdGltYmVyLCBpdCB3YXMgZGVjaWRlZCB0byB1c2UgdGhlIENhbmFkaWFucyBvdmVyIGluIEV1cm9wZSwgY3V0dGluZyBkb3duIGZvcmVzdHMgaW4gdGhlIFVLIGFuZCBGcmFuY2UuCkhlIGdldHMgbHVja3kgYXMgc2hpdCBhZnRlciBzbmFwcGluZyBtZSBvZmYsIGhpdHRpbmcgQkRTRkQgdG8gYmVhdCBmbG9wcGVkIGZ1bGwgaG91c2VzLCBmbG9wcGluZyBxdWFkcyB0d2ljZSwgc2VyaW91c2x5LiBIZSB3b24gRVZFUlkgaGFuZCBhbmQgSSB3YXMgY2FyZCBkZWFkLiBJIHJlYnV5IGZvciA0MDAgYWZ0ZXIgaGUgYmVhdHMgbXkgQUEuIE15IGZyaWVuZCBpcyBqdXN0IGdldHRpbmcgd2hpcHBlZCBieSB0aGlzIGd1eS4gSGUga2VlcHMgZ2V0dGluZyBpbiB3aXRoIDkwKyUgZXF1aXR5IGFuZCBsb3NpbmcuIEkgbG9vayBhdCBoaW0gYW5kIHdlJ3JlIGJvdGggYSBsaXR0bGUgaXJyaXRhdGVkIGhlJ3MgcnVubmluZyB0aGlzIGhvdCBhbmQgc2F5ICJ3ZSBqdXN0IG5lZWQgT05FIGhhbmQuIFRoYXQncyBhbGwuIEkgcGljayB1cCBRUSBvbiB0aGUgYnV0dG9uLiBJdCdzIDMgaGFuZGVkIG5vdy4gSGUgc2F5cyBiZWZvcmUgSSBldmVuIGZpbmlzaCBzYXlpbmcgYWxsIGluICJJIENBTEwgQkxJTkQiLgpBbGwgZnVuZHMgZnJvbSB0aGUgbmlnaHQgd2lsbCBiZSB1c2VkIGZvciBUb255J3Mgb25nb2luZyByZWhhYmlsaXRhdGlvbiwgb25lIG9mIHRoZSBvcmdhbmlzZXJzIE5pZ2VsIEhhcmRpbmcgc2FpZC4gIlRoZXJlIHdhcyBzb21lIDY1IGF2aWQgY2FyZCBwbGF5ZXJzIGF0IHRoZSBGbHlubnMgQmVhY2ggU3VyZiBDbHViIG9uIEZyaWRheSAoTm92ZW1iZXIgMTcpLCIgaGUgc2FpZC4gCkxvb3QgZXhpc3RlZCBidXQgaXQgd2FzIG1vc3RseSBqdW5rIGNvbXBhcmVkIHRvIGNyYWZ0ZWQgc3R1ZmYuIEZyb20gd2VhcG9ucy9hcm1vciwgdG8gaG91c2VzIGFuZCBmYWN0b3JpZXMsIHNwZWVkZXJzLCBhbmQgZXZlbnR1YWxseSBzdGFyc2hpcCBwYXJ0cyB3aGVuIHRoZXkgYWRkZWQgSnVtcCB0byBMaWdodHNwZWVkLiAKS2liaXR6b3IgdQpJZ290bDJrICAxIHBvaW50ICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ28KKEVsbGlzIHByZWRlY2Vzc29yIG9uIHRoZSBDb3VydCkgYWxzbyB3b3JrZWQgYXQgSHVudG9uIFdpbGxpYW1zLiAKTWFycyBoYXMgYWJvdXQgMzglIG9mIEVhcnRoIGdyYXZpdHkuIApJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gcG9rZXIgdGFibGUgcmVudGFscyBidXQgeW91IGhhdmUgbm8gaWRlYSBhYm91dCB0aGUgdHlwZSBvZiB0YWJsZSB0aGF0IHlvdSBzaG91bGQgc2VsZWN0LCB5b3Ugc2hvdWxkIG9wdCBmb3IgYSBUZXhhcyBIb2xkIHBva2VyIHRhYmxlOyB0aGlzIGlzIGEgc2FmZSBjaG9pY2UgZm9yIHNtYWxsLCBwcml2YXRlIGV2ZW50cywgYXMgd2VsbCBhcyBmb3IgbGFyZ2UgdG91cm5hbWVudHMuIEFzIGZhciBhcyB0aGUgc3R5bGUgaXMgY29uY2VybmVkLCB5b3Ugd2lsbCBoYXZlIHRvIGNob29zZSBiZXR3ZWVuIGNoZXJyeSBsZWdzIG9yIHdyb3VnaHQgaXJvbiBwb2tlciB0YWJsZXM7IHRoaXMgaXMgYSBtYXR0ZXIgb2YgcGVyc29uYWwgdGFzdGUgYW5kIGl0IGlzIGVudGlyZWx5IHVwIHRvIHlvdSB0byBkZWNpZGUgd2hhdCB0eXBlIG9mIHBva2VyIHRhYmxlcyB0byByZW50LiAKVGhleSBkaWQgbm90IHJldmlldyB0aGlzIHBpZWNlIHByaW9yIHRvIHB1YmxpY2F0aW9uLlVucmVsZW50aW5nIHNvY2lhbCBtZWRpYSBtZWFucyBkZXNpZ24gdHJhZGUgd2luZHMgbm93IGJsb3cgaW4gYWxsIGRpcmVjdGlvbnMuIApNZW1waGlzIGlzIDUgZ2FtZXMgYWhlYWQob3IgYmVoaW5kLCBkZXBlbmRpbmcgb24gaG93IHlvdSBsb29rIGF0IGl0KSBpbiB0aGUgbG9zcyBjb2x1bW4gYW5kIHRoZXkgYXJlIGN1cnJlbnRseSA2dGguIFRoZXkgaGF2ZSBOTyBzaG90IGF0IHRoZSBwbGF5b2ZmcyBhbmQgYXJlIGdvbm5hIHRhbmsgaGFyZCB0byBnZXQgYSBiZXR0ZXIgc2hvdCBhdCBaaW9uLiBXYXNoaW5ndG9uIGlzIGN1cnJlbnRseSA3dGggc3BvdCBhbmQgdGhleSBhcmUgMyBnYW1lcyBpbiB0aGUgbG9zcyBjb2x1bW4gYmV0dGVyKG9yIHdvcnNlKSB0aGFuIHVzLiAKQmVzdCB3ZWRkaW5nIEkndmUgYmVlbiB0by4gQWxzbyBvbmUgb2YgdGhlIGxhcmdlc3Qgd2VkZGluZ3MuIFJlYWxseSBiZWNhbWUgYSBEd2F5bmUgV2FkZSBmYW4gdGhhdCBuaWdodCB0b28uIEd1eSB3YXMgc3VwZXIgY2hpbGwgYW5kIEdhYnJpZWxsZSBVbmlvbiB3YXMgYWJzb2x1dGVseSBzdHVubmluZyBpbiBhIGZpZXJ5IHJlZCBkcmVzcy4gU2hlIHNlZW1lZCBjaGlsbCB0b28gYnV0IEQgV2FkZSBvZmZlcmVkIHRvIGJ1eSBtZSBhIGRyaW5rIGFuZCBJJ2xsIG5ldmVyIGZvcmdldCB0aGF0IHNoaXQuClRoZSBtb3RoZXIgd2FzIGFycmVzdGVkIG9uIFNhdHVyZGF5IG1vcm5pbmcgYW5kIGNoYXJnZWQgd2l0aCBkb21lc3RpYyBhc3NhdWx0LiAKSSBzdGFydGVkIGJ5IHRlbGxpbmcgaGltIHRoYXQgaGUgc2hvdWxkIG5vdCBxdW90ZSBzb21ldGhpbmcgdGhhdCBleHRlbnNpdmVseSwgYW5kIGhlIGVzcGVjaWFsbHkgbmVlZHMgdG8gcHJvdmlkZSB0aGUgc291cmNlLiAKRG9uIHJlYWxseSB0aGluayBpdCBmYWlyIHRoYXQgeW91IGFyZSBnZXR0aW5nIGRvd252b3RlZC4gCkNoYW5nZSBzaWRlcyB3aGVuIHlvdSBmbGlwIHRoZSBrbmlmZSBvdmVyLiAKTGlrZSBJIHNhaWQsIGl0IGEgZGlnaXRhbCBjYXNpbm8gY2hpcCBmb3IgYSBjYXNpbm8gdGhhdCBuZWFybHkgTk8gT05FIGlzIHVzaW5nLiBTbyB5b3UgY2FuIG1heWJlIHRyeSB0byBzd2luZyB0cmFkZSBpdCBvbiB0aGUgc2hvcnQvbWVkaXVtIHRlcm0sIGJ1dCBsb25nIHRlcm0gaXQgbm90IGFuIGludmVzdG1lbnQuU3BvbnRhbmVvdXNEcmVhbSAgMyBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvQml0ZmluZXggaGFzIGJlZW4gcGxheWluZyB0aGlzIGNyeXB0byBob3N0YWdlIGdhbWUgZm9yIGEgd2hpbGUgbm93LiBUaGV5IGdpdmUgeW91IGEgc29uZyBhbmQgZGFuY2UgdG8ganVzdGlmeSB0aGVpciBhY3Rpb25zLCBidXQgSSBsb25nIHN1c3BlY3RlZCB0aGlzIGlzIGFuIGV4dG9ydGlvbiBzY2hlbWUgaG9waW5nIGEgcGVyY2VudGFnZSBvZiB1c2VycyBhcmUgdG9vIGludGltaWRhdGVkIHRvIGNvbWUgZm9yd2FyZCwgYW5kIHRoZXkga2VlcCB0aGUgZnVuZHMuIApBbmR5IEJla2lucyBvZiBQYXJ0eSBXb3JsZCBoYXBwZW5lZCB0byBiZSBhdCB0aGUgTG90dGVyeSBjb3VudGVyIHdoZW4gSSB3YWxrZWQgaW4sIGFuZCBoZSBleHBsYWluZWQgdGhlIHByb2Nlc3MgYW5kIHNob3dlZCBtZSBob3cgdG8gcGxheS4KU28sIGV2ZW4gdGhvdWdoIEkgdGhpbmsgd2UgZG8gdmVyeSBpbXBvcnRhbnQgd29yaywgSSBiZWVuIGRlc3BlcmF0ZWx5IHRyeWluZyB0byBsYW5kIGEgam9iIHRoYXQgcGF5cyBtb3JlL2NvdWxkIHJhaXNlIG15IHByb2ZpbGUuLiAKRXJpYyBQYWRkb2NrIHNhaWQgaGlzIGJyb3RoZXIgb3duZWQgYXBhcnRtZW50cyBhbmQgaG91c2VzLiBCdXNpbmVzcyByZWNvcmRzIGZpbGVkIGluIFRleGFzIHNob3cgIlN0ZXBoZW4gQy4gUGFkZG9jayIgbGlzdGVkIGFzIHRoZSBtYW5hZ2VyIG9mICJNZXNxdWl0ZSBDZW50cmFsIFBhcmsgQXBhcnRtZW50cyBHUCAxLCBMTEMiIGluIE1lc3F1aXRlLCBUZXhhcy4gCkl0J3Mgbm90IGFib3V0IGJlaW5nICJjb3dhcmRseSIgaXQncyBiZWluZyBwcmFnbWF0aWMuIApBbHdheXMgbGlrZSwgeW91IHN1cmUgeW91IHdhbnQgbWUgdG8gdGFsayBhYm91dCBteSBib29rPyB0dXJucyBvdXQgeWVzLCBhIGxvdCBvZiBwZW9wbGUgd2FudCB0byB0YWxrIHRvIGhlciBhYm91dCBoZXIgZnVubnksIHBvaWduYW50IGFuZCBoYXJkIHRvIHB1dCBkb3duIGJvb2suVG9wcGluZyB0aGF0IGxpc3Qgb2YgZmFucyBpcyBXcmlnaHQgYW5kIHRoZSByZXN0IG9mIHRoZSBwcm9ncmFtbWluZyBjb21taXR0ZWUuYXJlIHNvIG1hbnkgZGlmZmVyZW50IHRhbGVudHMgdGhhdCBjb21lIGF0dGFjaGVkIHRvIExpbmRzYXkuIApCZWNhdXNlIGRvZ3MgYWdlIGRpZmZlcmVudGx5IHRoYW4gcGVvcGxlLCB0aGlzIGFubnVhbCBwaHlzaWNhbCBpcyBjb21wYXJhYmxlIHRvIHlvdSBoYXZpbmcgYSBwaHlzaWNhbCBleGFtIGV2ZXJ5IGZpdmUgb3Igc2l4IHllYXJzLiAKTHVjeSBSb3NlIGNvdmVycyBUYXlsb3IgU3dpZnQncyBCYWQgQmxvb2QgZnQgS2VuZHJpY2sgTGFtYXIgaW4gdGhlIExpdmUgTG91bmdlCk15IG1vbSBkb2VzIHRoaXMgc2hpdCB0b28gYW5kIEkganVzdCBiZWNhbWUgaW1tdW5lIHRvIGl0IGJlY2F1c2UgSSBrbmV3IHNoZSB3YXMgZG9pbmcgaXQgdG8gdHJ5IHRvIGdldCBoZXIgd2F5IGF0IHdoYXRldmVyIGNvc3QuIFNoZSdkIGJlIGNyeWluZyBhbmQgSSdkIGJlIHN0b25lIGZhY2VkLiBJJ20gc3VyZSBJJ2QgaGF2ZSBsb29rZWQgbGlrZSBhIGhlYXJ0bGVzcyBiaXRjaCB0byBvdXRzaWRlcnMuIEFuZCBJJ20gc3VyZSBzYWlkIGh5cG90aGV0aWNhbCBpbWFnaW5hcnkgb3V0c2lkZXJzIHdvdWxkIGhhdmUgdHJpZWQgdG8gcHVzaCBtZSB0byBkbyB3aGF0IHNoZSB3YW50ZWQsIG9yIGNvbXByb21pc2UsIG9yIG5vdCBtYWtlIG15IG1vdGhlciB1cHNldCwgYW5kIGtlZXAgdHJ5aW5nIHRvIGhhdmUgYSByZWxhdGlvbnNoaXAgd2l0aCBoZXIgYmVjYXVzZSAic2hlJ3MgKG15KSBtb29vb29vbS4iIEkgc2VlIHRocmVhZHMgb2YgdGhvc2Ugc2VudGltZW50cyB0aHJvdWdob3V0IHlvdXIgcG9zdCB5b3UgYW5kIERIIG9ubHkgaGF2ZSBhIHJlbGF0aW9uc2hpcCB3aXRoIGhlciwgZGVzcGl0ZSBoZXIgYWJ1c2luZyBESCwgdXNpbmcgaGltLCBhbmQgYmVpbmcgYSBwcnlpbmcgUElUQSBiZWNhdXNlIG1vb29vb29vbS4KTWlqYTA0MjUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJZiBJIGV4dHJhcG9sYXRlIG15IGluY3JlYXNlcyBpbiBkb3NhZ2UgSSBtaWdodCBieSBhdCBhYm91dCAxbWcgYmVmb3JlIEkgNzAsIGF0IHdoaWNoIHBvaW50IHRoZSBzaWRlIGVmZmVjdHMgbWlnaHQgYmUgaW50b2xlcmFibGUgZnJvbSB3aGF0IEkgcmVhZC4uIApFY2tsZWJ1cmcuIApPZiB0aGF0IGdhcCBoYXMgYmVlbiBtZXQgYnkgY3JlZGlibGUgY29tbWl0bWVudHMgZnJvbSBkZXZlbG9waW5nIGNvdW50cmllcyBidXQgZGV2ZWxvcGVkIGNvdW50cmllcyBwcm9taXNlcyBhcmUgc3VjaCB0aGF0LCB3aXRoIHRoZSBjdXJyZW50IGFjY291bnRpbmcgbG9vcGhvbGVzIG9uIHRoZSB0YWJsZSwgZGV2ZWxvcGVkIGNvdW50cmllcyBlbWlzc2lvbnMgY291bGQgYWN0dWFsbHkgaW5jcmVhc2Ugd2hlbiB0aGV5IHNob3VsZCBiZSByYXBpZGx5IGRlY2xpbmluZywgRHIuIApEYXJ3aW4gcHViIHN0YWZmIHN0YWdlIHdhbGtvdXQgYWZ0ZXIgYWNjdXNpbmcgb3duZXIgb2YgcmFjaXNtClNhZGx5LCB0aGVyZSBpc24gbXVjaCBQQyBjYW4gZG8gYWJvdXQgdGhpcy4gTXkgcm9vbW1hdGUgd2FzIGNvbnRpbnVhbGx5IGhhcmFzc2VkIGFuZCBldmVudHVhbGx5IGFzc2F1bHRlZCAobm90IHNleHVhbGx5KSBieSBhIG1lbnRhbGx5IGlsbCBjb3dvcmtlciAoSFMgdGVhY2hlcikuIApUcm90eiBkZXMgbW9kZXJuZW4gQW1iaWVudGVzIGdyZWlmZW4gdmVyc2NoaWVkZW5lIE1vdGl2ZSB1bmQgTWF0ZXJpYWxpZW4gdHJhZGl0aW9uZWxsZSBFaW5mbHNzZSBhdWYsIHNvIHp1bSBCZWlzcGllbCBkZXIgdHJraXNjaGUgTWFybW9yLCBkZXIgaW4gZ2VzY2h3dW5nZW5lbiBGb3JtZW4gZGllIEJkZW4gZGVyIGdyb3pnaWdlbiBmZmVudGxpY2hlbiBGbGNoZW4gemllcnQuIApBcHJzIDggbW9pcyBqZSByZWZhaXMgdW4gZG9zYWdlIGV0IGF1Y3VuZSBhbWxpb3JhdGlvbi4gCkluIGhvdXNlaG9sZCBjb25kaXRpb25zIGFuZCBldmVuIGluIGEgZ3JlZW5ob3VzZSwgc2VlZHMgc3RhcnRlZCB0b28gc29vbiBjYW4gYmVjb21lIHRhbGwgYW5kIGxlZ2d5LiAKVGhlIHR1cm4gaXMgcHJldHR5IHNhZmUsIGFuZCBoZSBjaGVja3MuIApBbm90aGVyIHRoaW5nIHRoYXQgSSB2YWx1ZSBpbiBQYW5kdW5pYSBpcyB0aGF0IGl0IGlzIGNvbXBsZXRlIGluIGl0c2VsZi4gSXQgZG9lc24gYW55dGhpbmcgZnJvbSB0aGUgb3V0c2lkZS4gCldpdGggdGVuIHBlb3BsZSBkb2luZyBhIHdoaXRlIGVsZXBoYW50IGl0IGhhZCBiZWVuIGFsbW9zdCA0NSBtaW51dGVzIHdoZW4gdGhlIGZvb2QgZmluYWxseSBjb21lcy4gCldpbCAgbGlhbSBTaGluZGxlZGNrZXIgdmlzaXRlZCBUdWVzZGF5IGV2ZW5pbmcgYXQgdGhlIGhvbWUgb2YgdGhlIGZvcm1lcidzIHBhcmVudHMsIE1yLiBhbmQgTXJzLiBKb2huIFNpdGVzLiBNaXNzIERhaXN5IE1pY2tsZXkgYW5kIERhbmllbCBTbm93YmVyZ2VyLiBvZiBXYXluZXNib3JvLCBzcGVudCBUdWVzZGF5IGV2ZW5pbmcgYXQgdGhlIGhvbWUgb2YgTXIuIGFuZCBNcnMuIE9saXZlciBNaWNrbGV5LiBKYW1lcyBNaWNrbGV5LiBvZiBXYXluZXNib3JvLCBpcyBkYXVnaHRlciwgT3BhbCwgIEplc3NlIE1hcnNoYWxsLCBNci4gCkZpcnN0IG9uIGhlciBzY2hlZHVsZSBvbiBUdWVzZGF5IHdhcyBhIDdhbSBqb2cgdG8ga2VlcCBoZXIgc3ZlbHRlIGZpZ3VyZSBpbiB0aXAgdG9wIHNoYXBlIGZvciB0aGUgYmlnIGRheSwgcmVwb3J0cyB0aGUgRGFpbHkgTWFpbC4KTWlsZSAxMyAgIEkgd2FzIGp1c3QgY3Vyc2luZyBhbmQgc3dlYXJpbmcgbWVudGFsbHksIGxpa2UgamZjIHdoZW4gaXMgdGhpcyBnb2luZyB0byBiZSBvdmVyPyBBbm90aGVyIHR1cm4sIGFyZSB5b3Ugc2VyaW91cz8gQ2FuIEkgYmUgZG9uZSBub3c/PyBJIGhhZCBubyBpZGVhIGhvdyBmYXN0IEkgd2FzIGdvaW5nLCBqdXN0IGtlcHQgdHJ5aW5nIHRvIHN0YXkgc3RlYWR5LCBhbmQgZXZlbnR1YWxseSBJIHNhdyB0aGUgZmluaXNoIGxpbmUgYW5kIG15IGZyaWVuZCB3YWl0aW5nIGZvciBtZS4gSSByYW4gZXZlbiBmYXN0ZXIgYW5kIGZpbmlzaGVkIHN0cm9uZy4gClBvbGl0aWNhbGx5LCBob3dldmVyLCB0aGVyZSBjb3VsZCB3ZWxsIGJlIHNpZ25pZmljYW50IHJlc2lzdGFuY2UgdG8gYW55IHNsYWNrZW5pbmcgb2YgdGhlIGxhd3MsIGVzcGVjaWFsbHkgaW4gdGhlIGxpZ2h0IG9mIHJlY2VudCByZWxheGF0aW9ucyBvZiB0aGUgbGF3IHJlZ2FyZGluZyBhYm9ydGlvbiBhbmQgc2FtZSBzZXggbWFycmlhZ2VzLiAKRGVjb3JhdGUgdGhlIGNvbnRhaW5lciBmb3IgdGhlIGdpZnQgdGhhdCB5b3UgaGF2ZSBjaG9zZW4uIEEgY29sb3JlZCB0aXNzdWUsIHNocmVkZGVkIHBhcGVyLCBvciBhIGNsZWFuIGNsb3RoIGNhbiB3b3JrIHdlbGwgdG8gZGVjb3JhdGUgdGhlIGluc2lkZXMgb2YgdGhlIGNvbnRhaW5lci4gWW91IGNhbiBldmVuIHJpYmJvbiBvdXQgYSBwaWVjZSBvZiBjbG90aCBvbiB0aGUgYmFza2V0J3MgaGFuZGxlLiBVc2UgeW91ciBjcmVhdGl2aXR5IGFuZCBpbWFnaW5hdGlvbiB3aGVuIGRlY29yYXRpbmcgdGhlIGdpZnQgYmFza2V0IGZvciBiZXN0IHJlc3VsdHMuCkxpa2Ugd29ya2luZyBjbGFzcyBtZW4gYW5kIHdvbWVuIGEgY2VudHVyeSBhZ28sIHRvZGF5IGVubGlzdGVkIHNvbGRpZXJzIGFyZSBiZWluZyBzY3Jld2VkIGJ5IGEgc3lzdGVtIHRoYXQgc2VuZHMgd29ya2luZyBjbGFzcyBBbWVyaWNhbnMgdG8gd2FyIGFmdGVyIHdhciBhZnRlciB3YXIsIHdoaWxlIHRoZSBydWxpbmcgY2xhc3NlcyAobXlzZWxmIGluY2x1ZGVkKSB3b3VsZCBuZXZlciBjb25zaWRlciByaXNraW5nIG91ciBsaXZlcyBmb3IgYSBzeXN0ZW0gZnJvbSB3aGljaCB3ZSBiZW5lZml0IHRoZSBtb3N0Li4gCkkgc2F3IHRoZSB2aWRlbyBpbiB0aGUgdG91cm5hbWVudCwgYnV0IGl0IHNlZW1zIG1vcmUgbGlrZSBwZW9wbGUgd2VyZSBoYW5kaW5nIGhpbSB0aGUga2lsbHMuIApBbmQgb24gdG9wIG9mIGFsbCBvZiB0aGlzOiBhcHBseSBmb3IgcHJpdmF0ZSBzY2hvbGFyc2hpcHMgb25saW5lLiAKVW50aWwgcmVjZW50bHksIG1hdGVyaWFsIGluY2VudGl2ZXMsIGtub3duIGFzIGVhcm1hcmtzLCBoZWxwZWQgc29mdGVuIHRoZSBoYXJkIGVkZ2VzIG9mIGlkZW9sb2d5IGFuZCBpbmR1Y2VkIGxlZ2lzbGF0b3JzIHRvIHJlYWNoIGRlYWxzIGFjcm9zcyB0aGUgcGFydGlzYW4gZGl2aWRlLiBJbmN1bWJlbnQgbGVnaXNsYXRvcnMgcmVhcCBlbGVjdG9yYWwgcmV3YXJkcyBmcm9tIGVhcm1hcmtzIGJ5IGJyaW5naW5nIGhvbWUgdGhlIGJhY29uIGZvciB0aGVpciBjb25zdGl0dWVudHMuIENvbmdyZXNzIHByb2hpYml0ZWQgZWFybWFya3Mgc2V2ZXJhbCB5ZWFycyBhZ28sIGluIHJlc3BvbnNlIHRvIHByZXNzdXJlIGZyb20gdGhlIGFudGkgZ292ZXJubWVudCwgYW50aSBzcGVuZGluZyBtb3ZlbWVudCBrbm93biBhcyB0aGUgVGVhIFBhcnR5IChtb3JlIGFib3V0IHRoZSBUZWEgUGFydHkgYmVsb3cpLiBUaGlzIHJlZm9ybSBoYXMgc2lnbmlmaWNhbnRseSByZWR1Y2VkIHRoZSBpbmNlbnRpdmUgZm9yIGxlZ2lzbGF0b3JzIHRvIHJlYWNoIGJpcGFydGlzYW4gY29tcHJvbWlzZXMuClNvIEkgYW0gc3VyZSB0aGUgcmlnaHQgZG9lcyByZWFkIHRoaXMgdG9vLiAKVGhlIHRydXRoIGlzLCBvdXIgYm9kaWVzIGFyZSBhIG1lc3MuIEdpcmxzIHdpbGwgYmxlZWQgYXQgMTEgZm9yIHRoZSBmaXJzdCB0aW1lLCBvdGhlcnMgYXQgMTUuIFdpbGwgaGF2ZSBob3JyaWJseSBwYWluZnVsIGNyYW1wcyBhbmQgaGVhbHRoIHRocmVhdGVuaW5nIGZsb3dzIGFuZCBvdGhlcnMgd2lsbCBiYXJlbHkgbm90aWNlIHdoZW4gdGhleSBibGVlZC4gCkkgc3RhcnRlZCBnZXR0aW5nIG90aGVyIG9waW5pb25zIGFuZCBldmVuIGdvdCBhIG5lcnZlIHRlc3QgZG9uZS4gRXZlcnkgZG9jdG9yIHdvdWxkIGp1c3QgdG91Y2ggbXkgd3Jpc3QgYW5kIHNlbmQgbWUgYXdheSBzYXlpbmcgaXQncyBzY2FyIHRpc3N1ZS4gSSBzdGFydGVkIHRvIGdldCB2ZXJ5IGRlcHJlc3NlZCBiZWNhdXNlIHRoZSBwYWluIHdhcyBzbyBiYWQgYW5kIEkgdGhvdWdodCBJIHdhcyBnb2luZyBjcmF6eSBiZWNhdXNlIHRoZXkga2VwdCB0ZWxsaW5nIG1lIHRoZSBwYWluIGlzbid0IGFzIGJhZCBhcyB5b3UgdGhpbmsgYnV0IEkgaGFkIHRvIGxlYXJuIGhvdyB0byBkbyBldmVyeXRoaW5nIGxlZnQgaGFuZGVkIGJlY2F1c2Ugb2YgdGhlIGV4dHJlbWUgcGFpbi4gClNsZWZvIHdyaXRlcy4gCkFyZSBhbHdheXMgMTAgc3RlcHMgYWhlYWQuIApQcm9iYWJseSB0aGUgYmVzdCB3YXkgdG8gc3BlZWQgaXQgdXAgaXMgYmV0dGVyIGZhbWlsaWFyaXR5IHdpdGggYWxsIHRoZSBjYXJkcyBhbmQgY29yZSBzdHJhdGVnaWVzLiBFdmVyeW9uZSBrbm93aW5nIHdoYXQgdGhleSBzaG91bGQgYWltIHRvd2FyZHMgaW5zdGVhZCBvZiBiZWluZyBmYWNlZCB3aXRoIHNvIG1hbnkgZGlmZmVyZW50IG9wdGlvbnMgYW5kIG5vdCBrbm93aW5nIGhvdyB0aGlzIHdpbGwgYWZmZWN0IHRoZSByZXN0IG9mIHRoZWlyIGdhbWUsIHNob3VsZCBzcGVlZCB1cCB0dXJuIHRpbWVzIGEgbG90LgpZb3UgZmlyc3QgcGxhY2UgYW4gYW50ZSBiZXQgYW5kIGlmIHlvdSBsaWtlIHlvdXIgZmlyc3QgdGhyZWUgY2FyZHMgKGdlbmVyYWxseSBpZiB5b3UgaG9sZCBRLCAxMCBvciBiZXR0ZXIpLCB5b3UgcGxhY2UgYSBzZWNvbmQgcGxheSBiZXQgYmVsb3cgdGhlIGFudGUgYW5kIHdpbiBpZiB5b3UgYmVhdCB0aGUgZGVhbGVyLiAKU2Vjb25kIEkgY2FtZSBmcm9tIGEgZmFtaWx5IHdpdGggYSBodWdlIGFnZSBnYXAgYmV0d2VlbiBiYXRjaGVzIG9mIGtpZHMuIEkgYW0gdGhlIG9sZGVzdCBvZiB0aGUgc2Vjb25kIGJhdGNoICgxNiB5ZWFycyBmcm9tIGZpcnN0IHRvIGxhc3QgYnV0IDEwIHllYXJzIGJldHdlZW4gbWUgYW5kIHRoZSBuZXh0IG9sZGVzdCwgNSBraWRzIHRvdGFsKSBXZSBMT1ZFRCBvdXIgYmlnIHNpc3RlcnMgd2hlbiB3ZSB3ZXJlIGxpdHRsZS4gCkFubiBCLiAKV2hpbGUgdGhlIGdhbWUgaXMgaW4gcHJvZ3Jlc3MsIHRoZSBwbGF5ZXIgY2FuIHRha2UgcGFydCBpbiBjaGF0IHJvb20gYWN0aXZpdGllcyBvciBzaGUgY2FuIHBsYXkgc2lkZSBnYW1lcy4gVGhlc2UgbWF5IGluY2x1ZGUgaW5zdGFudCBnYW1lcywgc2xvdHMsIHZpZGVvIHBva2VyLCB0YWJsZSBnYW1lcyBhbmQgYXJjYWRlIGdhbWVzLiBEaWZmZXJlbnQgc2l0ZXMgb2ZmZXIgZGlmZmVyZW50IHNpZGUgZ2FtZXMuIFRoZSBwbGF5ZXIgY2FuIGFsc28gb3B0IHRvIHBsYXkgZGlmZmVyZW50IGJpbmdvIGdhbWVzLCBpZiB0aGV5IGFyZSBvZmZlcmVkIGF0IGhlciBwbGF5aW5nIHNpdGUuIE1hbnkgc2l0ZXMgb2ZmZXIgc2V2ZW50eSBmaXZlLCBlaWdodHkgYW5kIG5pbmV0eSBudW1iZXIgYmluZ28uIFRoZXJlIGlzIGFsc28gU3BlZWQgQmFsbCBhbmQgTHVja3kgTnVtYmVyIEJpbmdvIHRvIGFkZCB2YXJpZXR5IHRvIHRoZSBwbGF5aW5nIGV4cGVyaWVuY2UuClRoZSBib3kgYW5kIGdpcmwgZWFjaCBwYWNrZWQgYSBwYWlyIG9mIHdhcm0gZ2xvdmVzIGZvciB0aGUgdHJpcC4gCkF2b2lkIGNvbXBhbmllcyB0aGF0IHJlcXVpcmUgeW91IHRvIHN1Ym1pdCB5b3VyIG93biBpbWFnZSB1bmxlc3MgeW91IGFyZSBnb29kIHdpdGggZ3JhcGhpY3MgKGFkb2JlIGlsbHVzdHJhdG9yKS4gKEZ1bGwgQW5zd2VyKVdoZXJlIGNhbiBpIHB1cmNoYXNlIFBhcnR5IFBva2VyIHBsYXkgY2hpcHMgZm9yIGZyZWUgb3IgZm9yIGNoZWFwP1RoZXJlIGFyZSBtYW55IHdheXMgdG8gcHVyY2hhc2UgZnJvbSBhbiBhc3NvcnRtZW50IG9mIGJ1eWVycy4gV2hlbiB5b3UgZ2V0IHRoZSBwYWdlIG9wZW4sIGVudGVyIGluIHRoZSB3ZWIgYWRkcmVzcyBvZiB0aGUgc2l0ZSB5b3UgdGhpbmsgeW91IG1heSB3YW50IHRvIHB1cmNoYXNlIGZyb20uIApCZSBzdXJlIHdoZW4geW91IGFyZSBkb2luZyB0aGlzIHRoYXQgc3R1ZGVudHMgaGF2ZSBvcHBvcnR1bml0aWVzIHRvIGFzayBxdWVzdGlvbnMgYWJvdXQgZWFjaCBzdGVwIHlvdSBhcmUgcGVyZm9ybWluZy4gSWYgeW91IG5vcm1hbGx5IHJlcXVpcmUgc3R1ZGVudHMgdG8gcmFpc2UgdGhlaXIgaGFuZHMgdG8gYXNrIHF1ZXN0aW9ucywgbm93IG1heSBiZSBhIGdvb2QgdGltZSB0byBsZXQgdGhhdCBydWxlIHNsaWRlLiBUaGlzIHdpbGwgYWxsb3cgdGhlbSB0byBzdG9wIHlvdSBhcyBzb29uIGFzIHlvdSBoYXZlIGEgcXVlc3Rpb24uLiAKU29tZXRpbWVzIHlvdXIgaGVhbGVycyBqdXN0IGdldCB1bmx1Y2t5IGFuZCBnZXQgcGlja2VkIGVhcmx5Lm9uZSBjb25zaXN0ZW50IHRoaW5nIGlzIHRoYXQgc2VlaW5nIGEgcmVhcGVyIGFzIGEgdGFuayBpbiB0aGVzZSByYW5rcyBtZWFucyB5b3UgZGllLiBBbmQgZ29kIGhlbHAgeW91IGlmIHRoZSByZWFwZXIgaGFzIGEgbWVpIGJlaGluZCBoaW0uZG9udCBuZWVkIGEgY291bnRlciB0byByZWFwZXIgaW4gdGhlc2UgcmFua3MsIHdlIG5lZWQgYSBjaGFuY2UgYWdhaW5zdCBoaW0gYXMgYSB0YW5rLiAKSW1wbGllZCBvZGRzIHJlcHJlc2VudCB0aGUgbW9uZXkgdGhhdCB3aWxsIGdvIGludG8gdGhlIHBvdCBhZnRlciB5b3UgY2F0Y2ggeW91ciBkcmF3LiBUaGUgcHJvYmxlbSB3aXRoIHRoaXMgaXMgdGhhdCB5b3UgZG9uJ3QgYWx3YXlzIGtub3cgaG93IG11Y2ggbW9uZXkgeW91ciBvcHBvbmVudCBpcyB3aWxsaW5nIHRvIHB1dCBpbnRvIHRoZSBwb3QuIFNvbWV0aW1lcyBoZSBpcyBibHVmZmluZyBhbmQgd2lsbCBmb2xkIHRvIGFueSBiZXRzIGZyb20geW91LiAKSSB3YXMgdmVyeSBmb3J0dW5hdGUgdG8gYWNoaWV2ZSBteSBjaGlsZGhvb2QgZHJlYW0gYXQgYSB2ZXJ5IHlvdW5nIGFnZS4gClRoZXJlIGlzIG5vIG9uZSBvbiB0aGlzIHNpZGUgb2YgdGhlIEF0bGFudGljIHdobyB0aGlua3MgdGhlIFVTU1Igd2FzIGp1c3RpZmllZCBpbiBpbnZhZGluZyBBZmdoYW5pc3Rhbi4gQW5kIG91dCBvZiBub3doZXJlLCBvbiBKYW51YXJ5IDJuZCwgVHJ1bXAgY2FtZSBvdXQgc3Ryb25nbHkgc3VwcG9ydGluZyBSdXNzaWEgMTk3OSBpbnZhc2lvbiBvZiBBZmdoYW5pc3Rhbi4uIApXZSBjbGVhcmx5IGRvbnQgaGF2ZSBlcXVhbCBwcm90ZWN0aW9uIG9mIHRoZSBsYXcgZm9yIGltcG9ydGluZyBoYW5kZ3VucyBpbnRvIHRoZSBzdGF0ZS4gCkFib3V0IDcwJSBvZiBpdCBpcyBjb25zdW1lZCBieSBwZW9wbGUgd2hvIG1ha2UgbGVzcyB0aGFuICQ2MCwwMDAgYSB5ZWFyLiBJdCBpcyBtb3N0bHkgd29tZW4gKDkwJSkgYW5kIG1vc3RseSB3aGl0ZSwgbWlkZGxlIGFnZWQgd29tZW4gKDgwJSBhbmQgYmV0d2VlbiAzNSA1NSB5ZWFycyBvbGQpLi4gCkkgd2FzIGVpZ2h0IHNoYWRlcyBvZiBwaXNzZWQgcGFuaWNrZWQuIApEZXJieSBMYW5lIHJhbmtlZCB0aGlyZCBhbW9uZyB0aGUgMTkgc3RhdGUgZ3JleWhvdW5kIGFzc29jaWF0aW9ucyB0aGF0IHJlcG9ydGVkIG1vbmV5IHdhZ2VyZWQsIHdoaWxlIFRhbXBhIEdyZXlob3VuZCwgd2hpY2ggaXMgb3duZWQgYnkgdGhlIERvd25zIGFuZCBydW5zIGl0cyBsaXZlIG1lZXQgYXQgRGVyYnkgTGFuZSwgd2FzIGZvdXJ0aC4gVGhlIHRvcCBkb2cgdHJhY2sgd2FzIFdlc3QgUGFsbSBCZWFjaCBLZW5uZWwgQ2x1YiBhdCAkNDIsMDc2LDAxMC4KTXJzLiAKWWVhaCwgeW91IHJpZ2h0IHRob3VnaCwgd2hlbiBESXMgc3RhcnQgbWVzc2luZyB3aXRoIGtpZHMgdG8gYnJlYWsgdGhlaXIgY29tcG9zZXIsIHRoZXkgZmFsbCBvdXQgaGFyZC4gV2UgZ290IHRvIHBsYXkgd2l0aCBwbGVudHkgb2YgQ1MgYW5kIHN1cmUgaXQgZnVja3MgeW91ciB3b3JsZCB1cCwgYnV0IGEgY2FsbSBtaW5kIGNhbiBoYW5kbGUgaXQgYW5kIGNvbnRpbnVlIHRoZSBtaXNzaW9uLCBiZXN0IHRoaW5nIHRvIGRvIGlzIGp1c3QgYnJlYXRoIHNoYWxsb3dseSBhbmQgZW1icmFjZSB0aGUgcGFpbi4gUGVvcGxlIHBheSBhIGxvdCBvZiBtb25leSBmb3Igc2ludXMgY2xlYW5zaW5nIHRoYXQgZWZmZWN0aXZlLiAKVGhlIENhcmwgUy4gU29sb21vbiBsb3VuZ2Ugd2FzIGRlZGljYXRlZCB0byBDYXJsIG9uIGhpcyA1MHRoIHdlZGRpbmcgYW5uaXZlcnNhcnkgY2VsZWJyYXRpb24gYXMgdGhhbmtzIGZvciBhbGwgaGlzIGhhcmQgd29yayBpbiBvdmVyc2VlaW5nIHRoZSBoYWxsIGNvbnN0cnVjdGlvbiwgc2VydmluZyBhcyB0aGUgaGFsbCBtYW5hZ2VyLCBhbmQgZm9yIGhpcyBmdW5kcmFpc2luZyBlZmZvcnRzICAgdGhlIHByb2NlZWRzIG9mIHdoaWNoIGJlbmVmaXRlZCBsb2NhbCBjaGFyaXRpZXMsIGFzIHdlbGwgYXMgcmVub3ZhdGlvbnMgdG8sIGFuZCBtYWludGVuYW5jZSBvZiwgdGhlIGhhbGwuIApUaGUgdG90YWwgbnVtYmVyIG9mIHN0YXRpc3RpY2FsIGNvbWJpbmF0aW9ucyBvZiBhIDUyIGNhcmQgZGVjayBpcyB3aGF0J3Mga25vd24gYXMgIjUyIGZhY3RvcmlhbCwiIHNvbWV0aW1lcyByZWZlcnJlZCB0byBhcyAiNTIhIiBvciAiNTIgc2hyaWVrLiIgV3JpdHRlbiBvdXQgaW4gZnVsbCwgdGhhdCBudW1iZXIgaXM6LiAKRXZlcnkgVG91cm5leTogR3V5IHNwZW5kIGxpdGVyYWxseSBhIGZldyBodW5kbyBvbiBtYXNzYWdlcyAobm90IGV2ZW4gaGFwcHkgZW5kaW5ncyAgIGp1c3QgY2hhaXIgbWFzc2FnZXMpIGEgZmV3IGh1bmRvIG9uIHNsb3RzLCBhIGZldyBCb3JkZW4ncyBvbiBCYWNjYXJhdCBhbmQgY291cGxlIEJlbmppcyBvbiBzcG9ydHMgYmV0dGluZy4gRGVzcGl0ZSB0aGlzIGhlIGlzIHN0aWxsIGdvb2QgZW5vdWdoIGhlIGNvdWxkIG1ha2UgYSBsaXZpbmcgb24gTkxIIHRvdXJuaWVzIGJ1dCBoZSBrZWVwcyBmYWlsaW5nLiAKQW4gb2N0YWdvbmFsIHBva2VyIHRhYmxlIGlzIGdvb2QgZm9yIGdpdmluZyBhIGNhc2lubyBmZWVsIHRvIHlvdXIgZ2FtZS4gVGhpcyBzdHlsZSBvZiB0YWJsZSBpcyBpZGVhbCBmb3IgZWlnaHQgcGxheWVycyBhbmQgZWFjaCBwbGF5ZXIgaGFzIHRoZWlyIG93biBjdXAgaG9sZGVyLCBhc2h0cmF5IGhvbGRlciBhbmQgY2hpcCBvcmdhbml6ZXJzLiAKUmF0aGVyLCBpdCB3YXMgRGFuaWVsIHN1ZmZlcmluZyBhIGhhbXN0cmluZyBwdWxsIGxhc3Qgd2Vlay5SdW5uaW5nIGhhcyBhbHdheXMgYmVlbiBhIGJpZyBwYXJ0IG9mIHRoZWlyIGxpdmVzLCBIZW5yaWsgc2FpZC53YXMgYWx3YXlzIGEgYmlnIHBhcnQgb2Ygb3VyIHRyYWluaW5nIGluIHRoZSBzdW1tZXIsIGhlIHNhaWQuIExvdCBvZiBwbGF5ZXJzIGRvbiBkbyB0aGF0IGJlY2F1c2Ugb2YgdGhlaXIga25lZXMgb3IgdGhleSB0b28gaGVhdnksIGJ1dCB3ZSBhbHdheXMgZGlkLiAKRVUgaGFzIHRoZSByaWdodCBsZXZlbCBvZiB0YWxlbnQgZm9yIGEgcmVsZWdhdGlvbiBzeXN0ZW0gdGhhdCBrZWVwcyBkZWxpdmVyaW5nLiAKRW1waXJlIHNoYXJlcyBoaXQgYnkgbG9zcyBvZiBQYXJ0eVBva2VyIGNoaXBzCkl0IHNlZW1lZCBsaWtlIGhlIGVuam95ZWQgaXQgYXMgbXVjaCBvciBtb3JlIHRoYW4gd2UgZGlkLiBIaXMgcGFzc2lvbiBmb3IgdGhlIHdpbmUgYW5kIGdyb3dpbmcgdGhlIGdyYXBlcyBhbmQgaG93IGhlIHdvdWxkIGRvIGhpcyBjcm9zc3dvcmQgcHV6emxlcyB1bmRlciB0aGUgdHJlZSBpbiBoaXMgdmluZXlhcmQuLiAKVGhlIE1pY2hpZ2FuIExvdHRlcnkgQ29tbWlzc2lvbiwgYWNjb3JkaW5nIHRvIGl0cyBXZWIgc2l0ZSwgaGFzIGJlZW4gcmVjZWl2aW5nIGFuICJ1bnByZWNlZGVudGVkIiBudW1iZXIgb2YgY2hhcml0eSBnYW1pbmcgbGljZW5zZSBhcHBsaWNhdGlvbnMuIFRoZSBpbmNyZWFzZSB3b3JyaWVzIHNvbWUgaW4gdGhlIGFudGkgZ2FtYmxpbmcgY29tbXVuaXR5LiAKSSBoYXZlIGRlY2lkZWQgdG8gc2NyYXAgdGhlIHdheSBJIHdhcyB3cml0aW5nIG15IEFja2VybWFuIExha2Ugbm92ZWwgYW5kIG5vdywgSSBoYXZlIGNyZWF0ZWQgYSBuZXcgY2l0eSBpbiB0aGUgVVAgY2FsbGVkIEFja2VybWFuIExha2UuIEl0IHdpbGwgc3RpbGwgYmUgdGhlIHNhbWUgYnV0IEkgYW0gZ2V0dGluZyBtYWtpbmcgb25lIGxvY2F0aW9uIGFyZWEgaW5zdGVhZCBvZiBzZXZlcmFsLiAKTG9jYWwgY2FyZHJvb20gdG8gbWUgd2lsbCBhbHdheXMgcGxhY2UgdGhlaXIgZmFzdGVzdCwgbm8gbm9uc2Vuc2UgZGVhbGVyIG9uIHNob3J0IGhhbmRlZCB0YWJsZXMuIFNoZSByZXBlYXRlZGx5IHBvaW50cyBvdXQgd2hvIHRoZSBhY3Rpb24gaXMgb24gYW5kIGluIGhlciBvd24gd2F5IHB1c2hlcyB0byBzcGVlZCB1cCB0aGUgcGFjZSBvZiBoYW5kcywgYW5kIGlzIHZpc2libHkgdXBzZXQgd2hlbiBwZW9wbGUgdGFrZSB0aW1lIHRvIHRoaW5rIG9yIGF0dGVtcHQgdG8gc2xvdyB0aGluZ3MgZG93biBhIGJpdC4gT24gdGhlICQxLzIgJDEwMCBCSSBnYW1lIGl0IGFic29sdXRlbHkgY3J1c2hlcyBwbGF5ZXJzIHN0YWNrcyB0byByYWtlLiAKWW91J3JlIG5vdCBleGFjdGx5IHNheWluZyBhbnl0aGluZyB3cm9uZy4gTml0cGlja2luZyBtYXRjaG1ha2luZyBjYW4gY2VydGFpbmx5IGxlYWQgdG8gYW4gaW5mbGF0ZWQgS08gcmF0aW8sIGhlbGwganVzdCBhYm91dCBldmVyeSB1cCBhbmQgY29tZXIgZG9lcyB0aGF0IHNoaXQgZm9yIHRoZWlyIGZpcnN0IDE1IDIwaXNoIGZpZ2h0cy4KVGltZSBiZWluZyBvZiB0aGUgZXNzZW5jZSwgQXVzdGluLCBhIHNvY2lhbCB3b3JrZXIgdHVybmVkIG9yYWwgaGlzdG9yaWFuLCBxdWlja2x5IHNldCB1cCB2aWRlbyBhbmQgYXVkaW8gaW50ZXJ2aWV3cyB3aXRoIGFzIG1hbnkgbWVtYmVycyBhcyBzaGUgY291bGQgKG9uZSBkaWVkIGJlZm9yZSBzaGUgY291bGQgaW50ZXJ2aWV3IGhpbSkuIApUaGFuayB5b3UhIFVuZm9ydHVuYXRlbHkgSSB3YXMgbm90IG5lYXJseSBhcyBnb29kIGF0IHN0YW5kaW5nIHVwIGZvciBteXNlbGYgaW4gbXkgdGVlbnMgd2hlbiBzb21lb25lIG1hZGUgbWUgZmVlbCB1bmNvbWZvcnRhYmxlLCBidXQgbm93IEkgZ290dGVuIG11Y2ggYmV0dGVyIGF0IHB1dHRpbmcgbXkgZm9vdCBkb3duIG5vdyB0aGF0IEkgb2xkZXIgYW5kIG1vcmUgY29uZmlkZW50LCBhbmQgSSByZWNvZ25pemUgaG93IHRoZXNlIHR5cGVzIG9mIGd1eXMgZ2V0IGF3YXkgd2l0aCBkb2luZyB0aGluZ3MgeW91IG5vdCBjb21mb3J0YWJsZSB3aXRoICJiZWNhdXNlIHlvdSBkb24gd2FudCB0byBiZSBydWRlIi4gU28gbm93IEkgbWFrZSBpdCBhIHBvaW50IHRvIHByb3RlY3QgbXkgZnJpZW5kcyBhcyB3ZWxsIHdobyBoYXZlbiBkZXZlbG9wZWQgdGhvc2UgaW5zdGluY3RzIHlldC4gCldpdGhpbiBlYWNoIHNlY3Rpb24sIEkgZ3JhYmJlZCBhIGNvdXBsZSB0byBhIGZldyBzbWFsbGVyIGN1cmxzIGF0IGEgdGltZSBhbmQgdHdpc3RlZCB0aGVtIHVwIHN0YXJ0aW5nIGF0IHRoZSBzY2FscCBhbmQgd29ya2luZyBteSB3YXkgdG93YXJkcyB0aGUgZW5kLiBJIHN0YXJ0ZWQgb2ZmIHdpdGgganVzdCBzcGlubmluZyB0aGVtIHNsb3dseSBidXQgZXZlbnR1YWxseSBlbmRlZCB1cCB1c2luZyBvbmUgaGFuZCBhbmQganVzdCB3cmFwcGluZyB0aGUgY3VybCBhcm91bmQgMyA0IGZpbmdlcnMgYW5kIHNwaW5uaW5nIG15IHdyaXN0IGFyb3VuZC4gTXVjaCBxdWlja2VyIHRoYXQgd2F5ISBJIGRpZmZ1c2VkIGVhY2ggYWZ0ZXIgbXkgd2hvbGUgaGVhZCB3YXMgdHdpc3RlZCwgdXNpbmcgc2ltaWxhciBzZWN0aW9ucyBhcyB3aGVuIEkgc2VjdGlvbmVkIGl0IG9mZi4gCiJSaXNrIHByb2JhYmlsaXR5IiBkb2VzIG5vdCBxdWl0ZSBtYWtlIHNlbnNlLCBwZXJoYXBzIHlvdSBtZWFuIGp1c3Rob3cgdG8gY2FsY3VsYXRlIHJpc2suIFRoZXJlIGFyZSBtYW55IGZvcm11bGFzIGFuZCBtZXRob2RzLCBhIGxvdG9mIHRoZW0gaGlnaGx5IGNvbXBsZXggbWF0aGVtYXRpY2FsIG1vZGVscy4gClRoZXNlIGRpc2N1c3Npb25zIG5ldmVyIGdvIHdlbGwuIApJIGhhdmUgdHJpZWQgbGVhcm5pbmcgcHJvZ3JhbW1pbmcgZm91ciBvciBmaXZlIHRpbWVzIG92ZXIgdGhlIHllYXJzIGFuZCBnb3QgYm9yZWQgYmVmb3JlIG1ha2luZyBhbnl0aGluZyBJIGNvdWxkIHVzZSwgdGhlbiBJIHRyaWVkIFB5dGhvbiBhbmQgaXQgd2FzIGFjdHVhbGx5IGZ1biB0byBsZWFybi4gCllvdSB3aWxsIG5vdCBiZSBkZWNlaXZlZCBieSB0b3VyaXNtJ3MgbWVuZGFjaW91cyBhdHRyYWN0aW9ucyBidXQgaW5zdGVhZCB3aWxsIGhhdmUgeW91ciBzZW5zZXMgc2xlZGdlaGFtbWVyZWQgYnkgYnJ1dGFsLCB1bmZpbHRlcmVkIHN1cnJvdW5kaW5ncy4gWW91IHdpbGwgc2VlIHN1Y2ggcG92ZXJ0eSBhbmQgc3VmZmVyaW5nIHRoYXQgeW91IHdpbGwgcmV0dXJuIGhvbWUgdG8gZmVlbCBleGFzcGVyYXRlZCBieSB0aGUgY29tcGxhaW50cyBvZiB0aG9zZSB3aG8gbGl2ZSB3aXRoaW4gdGhlIHNsb3RoZnVsIGlnbm9yYW5jZSBvZiB0aGVpciBjb3NzZXRlZCBleGlzdGVuY2UuTGlrZSBzbGVlcD8gWW91J2xsIGxlYXJuIHRvIGxvdmUgaXRXaGVuIG9uIG9wZXJhdGlvbnMsIGRpc2NhcmQgdGhlIGNvbmNlcHQgb2YgdGltZS4gCkFudGkgUGFraXN0YW4gc2VudGltZW50IGluIEFtZXJpY2EgZG9lcyBub3Qgc3RlbSBmcm9tIGFueSBpbm5hdGUgaGF0cmVkIG9yIG1pc3RydXN0IG9mIE11c2xpbXMsIG9yIGplYWxvdXN5IG9mIFBha2lzdGFuJ3MgbnVjbGVhciBhcnNlbmFsIGVpdGhlci4gQW1lcmljYW5zIGRvIG5vdCB3YW50IHRvIGJlIGF0dGFja2VkIGJ5IGEgbnVjbGVhciB3ZWFwb24uIApRdWFsaWZpY2F0aW9ucyBDaHVyY2ggY3VzdG9kaWFucyB3b3JrIGZ1bGwgIG9yIHBhcnQgdGltZSwgb2Z0ZW4gb24gYSBmbGV4aWJsZSBob3VyIHNjaGVkdWxlLiAKVGhlc2UgZHJvbmVzIHdpbGwgYmUgZGV2ZWxvcGVkIHRvIGlkZW50aWZ5IHRocmVhdHMgYW5kIG5ldXRyYWxpemUgdGhlbS4gSXJyZWdhcmRsZXNzIG9mIGEgcG90ZW50aWFsIGh1bWFuIGVsZW1lbnQuIFRoZWlyIGtpbGwgZGVjaXNpb25zIHdpbGwgYmUgY29tcGxldGVseSB3aXRob3V0IGVtb3Rpb24gYW5kIHB1cmVseSBhYm91dCBwcmFnbWF0aWNzLiBJZiB0aGV5IGFyZW4gZ2l2ZW4gdGhpcyBhYmlsaXR5IGFuZCBpbnN0ZWFkICwgdGhlIGF1dG9ub21vdXMgb3Bwb3NpbmcgZm9yY2VzIHdpbGwgZmluZCBhIHdheSB0byBleHBsb2l0IHRoZWlyIGhlc2l0YXRpb24gYWxtb3N0IGltbWVkaWF0ZWx5LgpDJ2VzdCBkdSBtb2lucyBjZSBxdWUgcHJvcG9zZSBsJ2RpdGlvbiBhbXJpY2FpbmUgZHUgc2l0ZSBkZSBWb2d1ZSAsIHF1aSB2aWVudCBkZSBsYW5jZXIgc2Egc3JpZSBlbiB2aWRvIEdvIEFzayBBbm5hLiAKSGUncyBsYXJnZWx5IG5hcnJvd2VkIGhpcyBmb2N1cyB0byBHTSBhcyBhIHBvdGVudGlhbCB0YXJnZXQgYmVjYXVzZSB0aGUgdHdvIGF1dG9tYWtlcnMgc2hhcmUgYSBtdWx0aSBicmFuZCBzdHJhdGVneSBhbmQgR00gZG9lc24ndCBoYXZlIGZhbWlseSBzaGFyZWhvbGRlcnMgdG8gZGVmZW5kIGl0IGxpa2UgRm9yZCBNb3RvciBDby4gClRoZSBhZXN0aGV0aWMgYW5kIGFydCBzdHlsZSBoYXMgcmVhbGx5IGdvbmUgdG8gc2hpdC4gRXZlcnl0aGluZyBmZWVscyBzbyBicmlnaHQgYW5kIGZsYXNoeS4gVGhlIGluc2FuZSBhbW91bnQgb2YgY29zbWV0aWNzIGFuZCBqdXN0IGhvdyB0YW1lIGV2ZXJ5dGhpbmcgaXMgbWFrZXMgbWUgZmVlbCBsaWtlIGkgcGxheWluZyBhdCBhIHBhaW50YmFsbCBhcmVuYSBhZ2FpbnN0IGEgZ3JvdXAgb2Yga2lkcy4gCkFzIHdpdGggYWxsIGVzdGFibGlzaG1lbnRzIGluIEtvcmVhLCBpdCBpcyBwcmV0dHkgb2J2aW91cyB3aGVuIHlvdSBlbnRlciBvbmUgb2YgdGhlc2UgcGFybG91cnMgaWYgeW91ciBidXNpbmVzcyBpcyB3YW50ZWQgb3Igbm90LiAKIkkgYmVsaWV2ZSB0aGF0IHdoYXQgd2UgZGlkIHdhcyBhIGxlZ2l0aW1hdGUgc3RyYXRlZ3kgYW5kIHdlIGRpZCBub3RoaW5nIG1vcmUgdGhhbiBleHBsb2l0IENyb2NrZm9yZHMnIGZhaWx1cmVzIHRvIHRha2UgcHJvcGVyIHN0ZXBzIHRvIHByb3RlY3QgdGhlbXNlbHZlcyBhZ2FpbnN0IGEgcGxheWVyIG9mIG15IGFiaWxpdHkuCkVhcmxpZXIgYXBwcm9wcmlhdGlvbnMgb2YgcHJpdmlsZWdlIGJ5IHRoZSBsZXNzIHByaXZpbGVnZWQgIHRoaW5rIFRvbW15IEhpbGZpZ2VyICBwZXJoYXBzIEZyYW5rbGluIGFuZCBNYXJzaGFsbCB0aGUgYnJhbmQgcmVwcmVzZW50cyB0aGUga25vd2xlZGdlIHRoYXQgdGhlIHdheSB0byBnZXQgaW50byB0aGUgcnVsaW5nIGNsYXNzZXMgaXMgdG8gYmUgYm9ybiB0byB0aGUgcnVsaW5nIGNsYXNzZXMuIApJIGFsc28gdHJpZWQgd2hhdCBoYXMgYmVlbiBsYWJlbGVkIGFzIHRoZSAiVGhlIEN1bSBIb2x5IEdyYWlsIiBpbiB3aGljaCBzb21lb25lIG9uIDRjaGFuIGhhcyB0cmllZCB2YXJpb3VzIHN1cHBsZW1lbnRzIHRvICJpbmNyZWFzZWQgb3JnYXNtIGludGVuc2l0eSBhbmQgbG9hZCBzaXplIi4gU0ZXLiBEZWZpbml0ZWx5IHdvcmtlZCBmb3IgbWUsIGJ1dCBnb3QgdGlyZWQgb2YgdGFraW5nIHNvIG1hbnkgcGlsbHMgYW5kIGFsc28gaXQgYSBsb3QgbWVzc2llciB0byBjbGVhbiB1cCBhZnRlci4uIApUcnkgYWRkaW5nIGEgdGhpcmQgc3RhY2suIFNodWZmbGluZyB0aHJlZSBzdGFja3MgaXMgZnVuZGFtZW50YWxseSBzaW1pbGFyIHRvIHNodWZmbGluZyB0d28gc3RhY2tzIGJ1dCBpcyBtdWNoIG1vcmUgZGlmZmljdWx0IHRvIGFjY29tcGxpc2guIEV2ZW4gcGVvcGxlIHdpdGggYSBsb3Qgb2YgcG9rZXIgY2hpcCB0cmljayBleHBlcmllbmNlIGhhdmUgZGlmZmljdWx0eSB3aXRoIHRoZSB0cmlwbGUgc3RhY2sgc2h1ZmZsZS4gCkEgc2hhcnAgZG93bnR1cm4gaW4gdGhlIGVjb25vbXksIGFsb25nIHdpdGggYSBnbG9iYWwgc2x1bXAgZm9yIHRoZSBhdXRvbW90aXZlIGluZHVzdHJ5LCBwdXQgTUNNJ3MgcHJlZGVjZXNzb3IsIFNvdXRoZXJuIENvbWZvcnQgQ29udmVyc2lvbnMsIG91dCBvZiBidXNpbmVzcyBpbiAyMDA5LgpBbnl3YXlzLCB5b3Ugd2lsbCBub3RpY2UgdGhlIGh5cG5vdGlzdCB3aWxsIGFsd2F5cyBzYXkgICBpZiB5b3Ugc2VlIHNvbWVvbmUgZG9pbmcgdGhlIGFjdGlvbnMgZnJvbSB0aGUgc3RhZ2UgcG9pbnQgdGhlbSBvdXQgdG8gdXMgYmVjYXVzZSB0aGV5IGNsZWFybHkgd2FudCB0byBwYXJ0aWNpcGF0ZS4gVGhpcyBpcyBhIHNhZmV0eSB0aGluZy4gSWYgeW91IHRlbGwgdGhlIHBlb3BsZSBvbiBzdGFnZSB0byBob3Agb24gb25lIGZvb3QsIHlvdSByZWFsbHkgZG9uJ3Qgd2FudCBwZW9wbGUgaG9wcGluZyBvZmYgYSBiYWxjb255Li4gClRoZW4gd2UgZ28gYW5kIGhpcmUgYW5vdGhlciBndXkgdG8gaGVscCBvdXQuIEkgYWJvdXQgdG8gc2hvdyBoaW0gaG93IHRvIHdpcmUgdGhpbmdzIHVwIGFuZCBqb2tpbmdseSBzYXkgIllvdSBub3QgY29sb3IgYmxpbmQgcmlnaHQ/IiBIaXMgcmVzcG9uc2UgIldlbGwgYWN0dWFsbHkgSSB3YXNuIGdvaW5nIHRvIHNheSBhbnl0aGluZyBidXQuIiBJIGhhZCB0byBsYXVnaC4gU28gdGhlIGZpcnN0IGd1eSBnb3QgYSB3aXJlIHB1bGxpbmcgYnVkZHkgd2hpY2ggaXMgZmluZSBiZWNhdXNlIGl0IHJlYWxseSBpcyBhIHR3byBwZXJzb24gam9iIGFuZCBpdCBuYXN0eSAod2Ugd2VyZSB1c2luZyB0aGlzIHllbGxvdyB3YXggYmFzZWQgbHVicmljYW50KSBzbyBJIHdhcyBoYXBweSB0byBub3QgZG8gaXQuLiAKU2hlIGV4cGxhaW5lZCB0aGF0IHNoZSB3YXMgb24gdG9wIG9mIGEgYmFuayBvZiBsb2NrZXIgaW4gaGlnaCBzY2hvb2wgaGFuZ2luZyBhIGJhbm5lci4gCldpZSBEdSBhYmVyIHNlbGJzdCB3ZWlzc3QsIGlzdCBQcm9zdGl0dXRpb24gaW4gS2FtYm9kc2NoYSBhbGxnZWdlbndhZXJ0aWcuIApJIGRvbiB0aGluayB0aGV5IGZha2luZyBjaGVtaXN0cnkuIEkgdGhpbmsgdGhhdCB0aGV5IGp1c3QgcmVhbGx5LCByZWFsbHkgZ29vZCBmcmllbmRzIHdobyBoYXZlIHNoYXJlZCBzb21ldGhpbmcgdmVyeSBpbnRpbWF0ZS4KRGVhciBmcmllbmQsIGlmIHlvdSBhcmUgbm90IGEgYnJpZGUgb2YgQ2hyaXN0LCBJIGJlZyB5b3UgdG8gcmVwZW50IGFuZCBjYWxsIHVwb24gdGhlIE5hbWUgb2YgdGhlIExPUkQgZm9yIHlvdXIgcmVkZW1wdGlvbi4gV2Ugd2lsbCBub3QgYmUgYWJsZSB0byBzdGFuZCBiZWZvcmUgdGhlIHNldmVyaXR5IG9mIEdvZCdzIHJpZ2h0ZW91cyBqdWRnbWVudHMsIHdoaWNoIGFyZSByZWFkeSB0byBjb21lIHVwb24gdGhlIGVhcnRoIHdpdGggbW9yZSBzZXZlcml0eS4gClNob3VsZCB0aGUgcGFpcnMgYmUgdGhlIHNhbWUsIHRoYW4gdGhlIGhpZ2hlc3QgYWNjb21wYW55aW5nIGNhcmQgZGVjaWRlcyB3aG8gd2lucy4gCkF1c3RyYWxpYW4gYXJpc3RvY3JhdCBwb2tlciBtYWNoaW5lIHJvbXMKU2luY2UgdGhlbiB0aGVyZSB3YXMgYSBtaW5pIHdpbmRvdyB0aGF0IHdlIHNraXBwZWQsIGFuZCBub3cgdGhlcmUgd2luZCBhbmQgcmFpbiBhcyBmYXIgYXMgd2UgY2FuIHNlZSBvbiB0aGUgZm9yZWNhc3QuIEl0IGNvbXBsZXRlbHkgbHVjayBvZiB0aGUgZHJhdyBkb3duIGhlcmUuIApKZXR6dCBoYWIgaWNoIG5ldSB1bmQgYWx0IGdsZWljaHplaXRpZyBpbnN0YWxsaWVydCAgIHVuZCBpY2ggc3RhcnRlIGltbWVyIGFsdC4KIkl0IHdhcyBhIHZlcnkgdGVuc2UgdGltZSBmb3IgbWUuIE15IGZhbWlseSdzIGhpZGluZy4gSSdtIGhpZGluZywgIiBzaGUgc2FpZC4gCjE3MTggSGFsbGV5IFRyYW5zLiAxNzE3IDE5IFNvYy4pIFRoZSBzbG93bmVzcyBvZiBpdHMgbW90aW9uIG1hZGUgdXMgYXQgdGhhdCB0aW1lIGNvbmNsdWRlIHRoYXQgaXQgaGFkIG5vbmUsIGFuZCB0aGF0IGl0IHdhcyByYXRoZXIgYSBhIENvbWV0CkFzIEkgY2xpbWJlZCB1cCBteSBmcm9udCBzdGVwcyBJIG5vdGljZWQgdGhlIHdpbmRvdyBpbiBteSBmcm9udCBkb29yIGxvb2tlZCBmb2dneS4gCkknbSBhIG5hdGl2ZSBHZXJtYW4uIFRoZXJlJ3MgbW9yZSBzbWFsbCB0YWxrIGluIHRoZSBzb3V0aCBvZiBHZXJtYW55IHRoYW4gaW4gdGhlIG5vcnRoLiAKSG93IHNob3VsZCBJIHByZXBhcmUgYW5kIHdoYXQgc2hvdWxkIEkgZXhwZWN0CkhlYWQgY2hlZjogIkkgZG9uIGtub3cgd2hhdCB0byB0ZWxsIHlvdS4gSSBhIGdvb2QgY2hlZiBhbmQgaXQgdGhlIHNhbWUgcmVjaXBlIEkgYmVlbiBtYWtpbmcgZm9yIGZpZnRlZW4geWVhcnMuIEkgbWFrZSB0aGUgc2FtZSBnb29kIHBpenphIGV2ZXJ5IGRheS4iCk5vIGhhdGUgc3BlZWNoIG9mIGFueSBraW5kLiBSYWNpc3QsIHNleGlzdCwgaG9tb3Bob2JpYywgb3Igb3RoZXJ3aXNlIGFidXNpdmUgc3VibWlzc2lvbnMgb3IgY29tbWVudHMgd2lsbCByZXN1bHQgaW4gYW4gaW1tZWRpYXRlIGJhbi4KTVMzIGRyaXZlcnMgYWxsIHJhYmlkbHkgc3dlYXIgYnkgdGhlIGNhcnMuIFlvdSBtaWdodCB3YW50IHRvIGxvb2sgYXQgc29tZSByZXZpZXdzIGFuZCBzZWUgaWYgdGhlIGV4cGVyaWVuY2Ugc291bmRzIGxpa2Ugd2hhdCB5b3Ugd2FudCwgdGhleSBzb3VuZCB2ZXJ5IHRvcnF1ZXkgYW5kIGFnZ3Jlc3NpdmVseSB0dW5lZC4gSUlSQyB0aGV5IGdvdCBzb21lIGFzc29ydGVkIG9pbCBpc3N1ZXMgYW5kIGFyZSBhIGxpdHRsZSBmcmFnaWxlIGFmdGVyIG1vZHMsIHdoaWNoIGlzbiBnb29kIG9uIHRoZSB1c2VkIG1hcmtldCB3aGVuIHRoZSBicm8gY3VsdHVyZSBhcm91bmQgdGhlbSBpcyB0dW5pbmcgdGhlbSBoYXJkLiAKU2hlIHN0YXJ0ZWQgZGF0aW5nIGEgbWFuIGZyb20gdGhlIHNhbWUgY2h1cmNoLiAKQ2EgdmllbnQgYXBycyA1MCBhbnMgcGx1dHQgNjAuIApFcmllIGRvbmUsIHNvIGlzIEhhbWlsdG9uLiBOb3csIHdlIGdvdCB0byB3b3JyeSBhYm91dCB0aGlzIHdlZWtlbmQgYWdhaW5zdCBGbGludCBhbmQgU2FnaW5hdy4gCkkgaGFwcGVuIHRvIGFncmVlIHdpdGggeW91LCBkZXNwaXRlIHRoZSBkb3dudm90ZXMgZnJvbSBvdGhlciBmb2xrcy4gSSBoYWQgbXkgZG9nIGZvciAxMyB5ZWFycywgdGhyb3VnaCB3b3JrIGFuZCBob21lIGNoYW5nZXMsIGZpbmFuY2lhbCBjcmlzZXMsIGVtb3Rpb25hbCBpc3N1ZXMsIGV0Yy4gSXQgbmV2ZXIgZXZlbiBvY2N1cnJlZCB0byBtZSBhdCBBTlkgcG9pbnQgdG8gZ2l2ZSB1cCBteSBkb2csIGV2ZW4gaWYgaXQgbWVhbnQgbWFraW5nIHNhY3JpZmljZXMgKGxpa2UgcGF5aW5nIG1vcmUgZm9yIGRlcG9zaXRzL3JlbnQgb3IgY2hvb3NpbmcgYSBwbGFjZSBJIHdhc24gdGhyaWxsZWQgYWJvdXQpIHRvIGtlZXAgaGltIHdpdGggbWUuIApUcnkgbm90IHRvIGdldCBkb3duLiBMb29rIGFyb3VuZC4gCkluIHNvbWUgZGlzdHJpY3RzIGluIENhbmFkYSBQYW50cywgSSBhbSBhbWF6ZWQgdGhhdCBtYXNzYWdlIHRoZXJhcGlzdHMgY2FuIGJlIGxpY2Vuc2VkIGFmdGVyIG9ubHkgMzAwIG9yIDUwMCBob3Vycy4gSSBhbSBzdXJlIHRoZXJlIGEgbG90cyBvZiBmbGFrZXkgZW5lcmd5IGZyb20gc3BhY2UgdHlwZXMgZG93biB0aGVyZSBpbiB0aGUgVVMuLiAKVG9kYXksIGl0IGNvdWxkbid0IGJlIG1vcmUgZXZpZGVudCB0byBtZSBob3cgbXVjaCB0aGUgbXVzaWMgaGFzIGJlZW4gaGlqYWNrZWQsIGVzcGVjaWFsbHkgcmFwL2hpcCBob3AuIElmIHlvdSBsaXN0ZW4gdG8gdGhlIGx5cmljcyBpdCdzIGp1c3QgcmVwZWF0aW5nIGJ1bGxzaGl0IHRhbGtpbmcgYWJvdXQgY29va2luZyB1cCBjcmFjaywgcG9wcGluZyBwaWxscywgZHJpbmtpbmcgY29kZWluZSwgdmlvbGVuY2UsIGFuZCBtYXRlcmlhbGlzbS4gSXQncyBvYnZpb3VzIHRoZXkgd2FudCB0aGVpciBsaXN0ZW5lcnMgdG8gYmUgZHJ1ZyBkZWFsZXJzL3VzZXJzIHdobyBzZWxmIGhhcm0gYW5kIGJyaW5nIGRvd24gdGhlIHJlc3Qgb2Ygc29jaWV0eSB3aGlsZSBjaGFzaW5nIG1hdGVyaWFsIGJ1bGxzaGl0IGluc3RlYWQgb2YgcmVhY2hpbmcgYSBoaWdoZXIgbGV2ZWwgb2YgY29uc2Npb3VzbmVzcyBhbmQgdW5pdGluZyB0byBjaGFuZ2UgdGhlIHdvcmxkLi4gCk92ZXJ2aWV3IGZvciBmaWVsZHMKTW9uS0FZb25QQ1N1Y2ggaWNoIGRlbiBGZXVlcmh5ZHJhbnQsIHNvIHNpdHp0IGRhcmF1ZiBkZXIgRWxlZmFudC4KTWUga25vd2luZyBhYm91dCBpbmZlY3Rpb24gc3RhdHVzIGlzIGRpZmZlcmVudCB0aGFuIHRoZSBzdGF0ZSBrbm93aW5nIGFib3V0IHZhY2NpbmF0aW9uIHN0YXR1cy4KSW4gbXkgcG9zdCByZWxpZ2lvbiBhZHVsdCBsaWZlLCB3YXRjaGluZyBUTkcgdHdpY2UgaW4gdGhlIHBhc3QgeWVhciBoYXMgY29udmluY2VkIG1lIChhdCBsZWFzdCBmb3Igbm93KSB0aGF0IFJvZGVuYmVycnkgdmlzaW9uIG9mIGEgc29jaWV0eSB3aXRob3V0IHdhbnQgb3IgbmVlZCBpcyB0aGUgY2xvc2VzdCBhcHByb3hpbWF0aW9uIHRvIHdoYXQgSSBjb3VsZCBzYXkgaSBiZWxpZXZlIGluLCBldmVuIHRvIGEgcmVsaWdpb3VzIHN0YW5kIHBvaW50LiBOb3QgdGhhdCBJIHByZXNjcmliZSBhbnkgc29ydCBvZiBwaW91cyBvciBiZWxpZWYgaW4gb21uaXBvdGVuY2UsIGJ1dCBqdXN0IHRoYXQgdGhlIGRyZWFtIGFuZCBnb2FsIG9mIHRoaXMgdXRvcGlhbiBzb2NpZXR5IGlzIHRoZSB0eXBlIG9mIHJlbGlnaW9uIEkgcHJlZmVyIHRvIGJlbGlldmUgaW4sIGFzIG9wcG9zZWQgdG8gYW4gb2xkIHdvcmxkIHJlbGlnaW9uIHdobyBvZnRlbiBzZWVtIG1vcmUgZW5nYWdlZCBpbiBrZWVwaW5nIHRoZSB3b3JsZCB0aGUgd2F5IGl0IGlzLCBvciB0dXJuaW5nIGl0IGJhY2t3YXJkcyBpbnN0ZWFkIG9mIHRyeWluZyB0byBtb3ZlIGZvcndhcmQgbGlrZSB3ZSBzaG91bGQuClRoZSBIQUcgQ2FwaXNjbyBtb2RlbCA4MTA1IGNvbWVzIHdpdGggdGhlIGNsYXNzaWMgQ2FwaXNjbyBzYWRkbGUgc2VhdCBhbmQgaXMgaGVpZ2h0IGFkanVzdGFibGUgZnJvbSBhcHByb3hpbWF0ZWx5IDE4IHRvIDI2IEF0IGZpcnN0LCB0aGlzIG1heSBhcHBlYXIgdG8gYmUgaGlnaGVyIHRoYW4gYSBub3JtYWwgb2ZmaWNlIGNoYWlyIGFuZCB0aGlzIGlzIGR1ZSB0byB0aGUgY29uY2VwdCBvZiBzaXR0aW5nIGluIGEgbW9yZSBvcGVuIHBvc2l0aW9uIGVmZmVjdGl2ZWx5IGxlbmd0aGVuaW5nIHRoZSBib2R5IHNlYXRlZCBwb3NpdGlvbi4KQWRkIHRoZSByZWQgd2luZSwgc3RpcnJpbmcgdG8gc2NyYXBlIHVwIGFueSBzdHVjayBiaXRzOyB0aGVuIGNvb2sgYW5kIHN0aXIgdG8gZXZhcG9yYXRlIHRoZSBhbGNvaG9sLiBXaGVuIHRoZSB3aW5lIGlzIGFsbW9zdCBhbGwgZ29uZSwgYWRkIHRoZSByZXNlcnZlZCBiZWVmIGp1aWNlcy4gCkV2ZXJ5b25lIGVsc2UgaW4gdGhlIG1vdmllIGlzIGludGVyZXN0ZWQgaW4gZm9sbG93aW5nIHJ1bGVzIGJlY2F1c2UgdGhleSBhcmUgdGhlIHJ1bGVzLCBub3QgdGhlIHB1cnBvc2UgdGhhdCB0aG9zZSBydWxlcyBhcmUgYWN0dWFsbHkgc3VwcG9zZWQgdG8gc2VydmUuIFlvdSBnbyB0byB3b3JrIGJlY2F1c2UgdGhhdCB3aGF0IHlvdSBzdXBwb3NlZCB0byBkby4gWW91IGdvIHRvIHNjaG9vbCBiZWNhdXNlIHRoYXQgaXMgd2hhdCB5b3Ugc3VwcG9zZWQgdG8gZG8uIApHZXQgdHJhdmVsIGJyb2NodXJlcyBhbmQgYSBtYXAuIApXaGljaCBtYWtlcyBzZW5zZSBzaW5jZSBoZSBzYXcgWW1pciBwbGFuIHRoYXQgaGUgZXhlY3V0aW5nIGluIHRoZSBmdXR1cmUuIApJIGFtIHN1cmUgdGhlcmUgYSBsb3RzIG9mIGZsYWtleSBlbmVyZ3kgZnJvbSBzcGFjZSB0eXBlcyBkb3duIHRoZXJlIGluIHRoZSBVUy4uIApBbGwgQ2hpbGRyZW4ncyB0b29rIGJhYmllcyBmcm9tIGFzIGZhciBhd2F5IGFzIHRoZSBDYXJpYmJlYW4uIApQb2tlciBtYWNoaW5lcyBhZmZlY3QgdGhlIGJyYWluJ3MgZG9wYW1pbmUgbWFraW5nIGFiaWxpdGllcyBkaWZmZXJlbnRseSBmcm9tIGFueSBvdGhlciBnYW1ibGluZyBmb3JtLiAKUGVyaGFwcyB0aGUgVGltZXMgbWlnaHQgaGF2ZSBtZW50aW9uZWQgdGhhdCB0aGUgYnJvYWRlciBhdWRpZW5jZSBpcyAid2hpdGUiPyBObywgaW5zdGVhZCB0aGV5IHF1b3RlIFNlbmF0b3IgSmltIERlTWludCAoUiBTQykgc2F5aW5nCiAxMCBwb2ludHMgIHN1Ym1pdHRlZCAyNCBkYXlzIGFnb0l0IHdhcyBhIHJlYWxseSB3ZWlyZCBzdG9yeS4gSnV2ZSBzcG9ydGluZyBkaXJlY3RvciBQYXJhdGljaSB3cm90ZSBkb3duIGEgZmV3IG5hbWVzIG9uIGEgbm90ZSAobW9zdCBub3RhYmx5IENoaWVzYSBhbmQgWmFuaW9sbykgd2l0aCBwcmljZXMgYWxvbmdzaWRlIGR1cmluZyBhIGJ1c2luZXNzIGRpbm5lciBhbmQgdGhlbiByaXBwZWQgaXQuU29tZW9uZSByZXRyaWV2ZWQgaXQsIHBvc3RlZCBhIHBpY3R1cmUgdGhhdCB3ZW50IHZpcmFsIGFuZCB0aGUgcHJlc3Mgb2J2aW91c2x5IGxvdmVkIGl0LlRoZXJlIGFsc28gdGhlIGZhY3QgdGhhdCBhY2NvcmRpbmcgdG8gaGlzIHNvY2lhbCBtZWRpYSBoZSBhbHdheXMgYmVlbiBhIEp1dmUgZmFuLiA4MSksIHBvc2l0aW9uIG9mIE9nYXRhIGlzIHRoYXQgb2YgTWF0dGhldyBhcHByZW50aWNlIG9mIEplc3VzIHdobyBoYWQgdGhpcyBzYXlpbmc6QW5kIGlmIHlvdXIgZXllIGNhdXNlcyB5b3UgdG8gZmFsbCBpbnRvIHNpbiwgZ291Z2UgaXQgb3V0IGFuZCB0aHJvdyBpdCBhd2F5LiAKIEFuY2llbm5lbWVudCwgb24gZGlzYWl0IHF1ZSBsYSBmYWJyaWNhdGlvbiBkZSBuZWlnZSwgYyd0YWl0IHVuZSBhc3N1cmFuY2UsIGluZGlxdWUgbGUgcHJzaWRlbnQgZGUgbCdlbnRyZXByaXNlLCBlbiBwb3N0ZSBkZXB1aXMgMjAgYW5zLiBNYWludGVuYW50LCBvbiBkaXQgcXVlIGMnZXN0IHVuZSBnYXJhbnRpZS4uIApJdCBwcm9iYWJseSBjb3VsZCBhbGwganVzdCBiZSBjb2luY2lkZW5jZS4uIApUaGlzIGlzIHNpbWlsYXIgdG8gaG93IEhlbGl1bSdzIGJsb2NrY2hhaW4gYW5kIHVuZGVybHlpbmcgY29uc2Vuc3VzIHN5c3RlbSBhcmUgY29tYmluZWQgdG8gcG93ZXIgb3VyIERlY2VudHJhbGl6ZWQgTWFjaGluZSBOZXR3b3JrIChETU4pOyBieSBlc3RhYmxpc2hpbmcgdGhlIHJ1bGVzIHRvIGVuc3VyZSBmYWlybmVzcyBhbW9uZyBwbGF5ZXJzLCBsaWtlIGEgZ2FtZS4gRmFpcm5lc3MgaXMgaW1wb3J0YW50IGJlY2F1c2UgaG9uZXN0IHBsYXllcnMgYW5kIGNoZWF0ZXJzIGV4aXN0IGluIGFueSBnYW1lLiAKQmFzaWNhbGx5IGl0IHN0YXJ0ZWQgYmVjYXVzZSBJIGhhZCBhbiBhcGFydG1lbnQgYW5kIHBhaWQgdGhlIGZlZSwgc2hlIGhhZCBhbiBhcGFydG1lbnQgYW5kIHBhaWQgdGhlIGZlZSwgd2UgbW92ZWQgaW4gdG9nZXRoZXIgYW5kIHRoZSBwZW9wbGUgbW92ZWQgb3V0IDUgZGF5cyBlYXJseSBzbyB3ZSBjb3VsZCBtb3ZlIGluIGEgbGl0dGxlIHNvb25lci4gVGhvc2UgcGVvcGxlIGFsc28gcGFpZCB0aGUgZmVlIGZvciBvdXIgbmV3IGFwYXJ0bWVudCBmb3IgdGhhdCBtb250aC4gCkJ1dCBJIGNhbiB0ZWxsIHlvdSB3aGF0IGl0IHdhcy4gSSBiZWVuIGZsaXBwaW5nIHRocm91Z2ggdGhlIGJvb2sgd2hpbGUgbGlzdGVuaW5nIHRvIG15IHZvaWNlbWFpbC4gClNvbWUgb2YgdGhlIHJlY2VudCBhdmFsYW5jaGVzIHdlcmUgcmVhbGx5IGJpZywgc29tZSByZWFjaGluZyBoaXN0b3JpYyBsZXZlbHMuIFR1ZXNkYXksIGJvdGggbmF0dXJhbCBhbmQgZXhwbG9zaXZlIHRyaWdnZXJlZCBhdmFsYW5jaGVzIHJlYWNoZWQgRDMgdG8gRDQgaW4gc2l6ZS4gVGhlIERpc25leSBzbGlkZSBwYXRoIGFib3ZlIEhpZ2h3YXkgNDAsIGFzIGp1c3Qgb25lIGV4YW1wbGUsIGhhc24gcnVuIHRoaXMgYmlnIHNpbmNlIDE5NTcuIApTdXBwb3NlIHlvdSBoYXZlIE4gcGxheWVycywgYW5kIHRoZXNlIHBsYXllcnMgYXJlIGV4Y2hhbmdpbmcgdHJhbnNhY3Rpb25zIGJldHdlZW4gdGhlbSAobW9yZSBvbiB3aGF0IHRoZSB0cmFuc2FjdGlvbnMgYXJlIHdpbGwgYmUgZXhwbGFpbmVkIGluIGEgbGF0ZXIgcG9zdCkuIApDZXR0ZSBtYW5pcmUgZCByYXBwZWxsZSBhc3NleiBsIG1pdGhyaWFxdWUgbyBsIGNvbXB0YWl0IHNldWxlbWVudCBzZXB0IGNoZWxvbnMsIGxlIHNpeGltZSByZXByc2VudGFudCBsYSBMdW5lIGV0IGxlIHNlcHRpbWUgbGUgU29sZWlsLCBjZSBxdWkgc2UgcmFwcHJvY2hlIGJlYXVjb3VwIGRlIGNlIHF1aSBzZSBkcm91bGUgY2hleiBsZXMgcG9wdWxhdGlvbnMgb3VyYWxvIGFsdGFxdWVzIG8gbGVzIHRhcHR5LCBjIGxlcyBjaGVsb25zIHJhYm90cyBkYW5zIGxlIHRyb25jIGQgYm91bGVhdSB2b3F1ZSBjaGFjdW4gbCBkZXMgc3BocmVzIHBsYW50YWlyZXMuIApNb3N0IHBlb3BsZSBoZXJlIGFyZSByaWdodCBoYW5kZWQsIHNvIHRoYXQgbWVhbnMgd2UgbXVzdCBsZXQgZXZlcnkgcmlnaHQgaGFuZGVkIHBlcnNvbiBpbiAoZXZlbiBsZWdhbGx5KSB0aGUgY291bnRyeSwgbm8gcXVlc3Rpb25zIGFza2VkLCBkYW1uIHRoZSBjb25zZXF1ZW5jZXMsIGFuZCBpZiB5b3UgZG9uIGxpa2UgaXQgeW91IGEgcmlnaHQgaGFuZG9waG9iZS4gSXQgc3R1cGlkLi4gCkJhc2ljYWxseSBpdCBoYXMgYSBncmVhdCBzY3JlZW4sIHBsZW50eSBvZiBncmVhdCB1c2FibGUgYXBwcyBmb3Igbm90ZXMoc3R5bHVzKSBhbmQgYmVjYXVzZSBpdCBhbmRyb2lkIHlvdSBjYW4gbWFrZSBjaGFuZ2VzIHRvIHRoaW5ncyBsaWtlIHdoYXQgaXQgbG9va3MgbGlrZSB3aGVuIHlvdSBib290IHVwICh0aGV5IGNhbGwgdGhlbSBsYXVuY2hlcnMpLCBnZXN0dXJlcywgY3VzdG9tIGZlYXR1cmVzIHRvIHJlYWxseSBtYWtlIHlvdSBmZWVsIGxpa2UgdGhlIHBob25lIGlzIHlvdXJzLiBUaGV5IGFsbCBoYXZlIGNsb3VkIHN5bmMsIGFuZCBhcHBzIGxpa2UgT25lRHJpdmUgZm9yIHBob3RvIHNoYXJpbmcuIEkgaGF0ZWQgdGhlIGlDbG91ZCBwaG90byBzaGFyaW5nIGVjb3N5c3RlbSBzbyBJIG5ldmVyIHVzZWQgaXQgYW55d2F5IGFuZCBhc2lkZSBmcm9tIHRoYXQgYW5kIHRoZSBhYmlsaXR5IHRvIGFpcnBsYXkgdGhlcmUgaXMgbm8gcmVhc29uIHRvIGhhdmUgYW4gaVBob25lIGV4Y2VwdCBob3cgcHJldHR5IHRoZXkgYXJlLiAKIkkgdGhpbmsgd2UganVzdCBoYXZlbid0IHJlYWxseSBmb3VuZCBvdXIgcmh5dGhtIGFuZCBJIGp1c3QgZG9uJ3Qga25vdyBpZiBpdCdzIGJlZW4gc29tZSBpbmp1cmllcywgd2hlcmUgd2UganVzdCBoYXZlbid0IGhhZCB0aGUgc2FtZSBncm91cCBpbiB0aGVyZSwiIG9mZmVuc2l2ZSBjb29yZGluYXRvciBCcmlhbiBMaW5kZ3JlbiBzYWlkLiAiSSdtIG5vdCBzdXJlLiBJIHRoaW5rIHdlJ3ZlIGdvdCB0byBrZWVwIHB1c2hpbmcgYW5kIGtlZXAgd29ya2luZyBkdXJpbmcgdGhlIHdlZWsuIFdlJ3ZlIGhpdCBvdXIgcmh5dGhtIGF0IHRpbWVzOyBJIGp1c3QgZG9uJ3Qga25vdyBpZiB3ZSd2ZSBiZWVuIGFzIGNvbnNpc3RlbnQgYXMgd2Ugd2VyZSBhdCB0aW1lcyBsYXN0IHllYXIuIgpBcnRodXIgYW5kIEFyY2hpZS4gCk1hcmN1cyBHbG92ZXIsIGdlbmVyYWwgbWFuYWdlciBvZiBIb3JzZXNob2UgQ2FzaW5vIENsZXZlbGFuZCwgc2FpZCBpbiBhIHN0YXRlbWVudCwgZXhoYXVzdGluZyBldmVyeSByZWFzb25hYmxlIG9wdGlvbiwgSG9yc2VzaG9lIENhc2lubyBDbGV2ZWxhbmQgYW5kIHRoZSBXU09QIG9yZ2FuaXphdGlvbiBoYXZlIGRldGVybWluZWQgdGhhdCB0aGUgcHJvcGVydHkgaXMgdW5hYmxlIHRvIGhvc3QgdGhlIFdTT1AgQ2lyY3VpdCBFdmVudCBvcmlnaW5hbGx5IHNjaGVkdWxlZCBmb3IgdGhpcyBzcHJpbmcuIAo1NCA5MikgQWxsIHRoZSBzb25ncyBsaXN0ZWQgaGVyZSBhcmUgIlVucmVsZWFzZWQuIiBZb3UgY2FuIGZpbmQgdGhlbSBvbiBZb3V0dWJlOiBBbmltYWwsIEthYm9vbSAoZmVhdC4gCkNoaWxkcmVuIGFuZCB5b3VuZyBwZW9wbGUgb3V0IG9mIGZhY3RvcmllcyBhbmQgbWFuZGF0aW5nIHB1YmxpYyBoaWdoIHNjaG9vbCBlZHVjYXRpb25zIGxpZnRlZCBhbiBlbnRpcmUgZ2VuZXJhdGlvbiBvZiBBbWVyaWNhbnMgb3V0IG9mIHN3ZWF0c2hvcCBsYWJvci4gV29ybGQgV2FyIElJLCB0aGUgR0kgQmlsbCBzZW50IHRlbnMgb2YgdGhvdXNhbmRzIG9mIHdvcmtpbmcgbWVuIGludG8gdW5pdmVyc2l0aWVzLiAKTm90IGp1c3QgYXVkaWVuY2UgYW5kIGFjY2VzcywgYnV0IHRoZSBtYWtldXAgYW5kIG9wZXJhdGlvbnMgb2YgdGhlIGNvbXBhbmllcyB0aGVtc2VsdmVzLiAKV2hhdCBpcyB5b3VyIGRlZmluaXRpb24gb2YgImVub3VnaCI/IFNvbWUgcGVvcGxlIHBsYXkgdGhpcyBnYW1lIGZvciBzaGl0cyBuIGdpZ3MgaW4gd2hpY2ggY2FzZSBqdXN0IGtub3dpbmcgdGhlIHJ1bGVzIGlzIGVub3VnaC4gSWYgeW91ciBnb2FsIGlzIHRvIGdldCBhcyBnb29kIGFzIHBvc3NpYmxlIHlvdSBzaG91bGQgYWx3YXlzIGJlIHRyeWluZyB0byBleHBhbmQgeW91ciBrbm93bGVkZ2UuCk1vcmUgd29yayB0aGFuIGRvaW5nIGl0IHRhYmxlc2lkZSBzaW5jZSB5b3UgaGF2ZSBjaG9wcGluZywgYnV0IHdlbGwgd29ydGggaXQuLiAKSW4gZGVyIFNraXJlZ2lvbiBSb3NhIENodXRvciB3ZXJkZW4gUmV6aWRvciwgQWNjb3IsIFN3aXNzb3RlbCwgVHVsaXAgdW5kIEhlbGlvcGFyayBlaWdlbmUgSHVzZXIgYmV0cmVpYmVuLiAKVGhlbiB3aGVuIHRoZSBzaWx2ZXIgbWluZXJzIGZsb2NrZWQgdG8gQ29sb3JhZG8ncyBTYW4gSnVhbiBNb3VudGFpbnMsIHNoZSBwdWxsZWQgdXAgc3Rha2VzIGFuZCBoZWFkZWQgdG8gQ3JlZWRlLiAKSSBkbyBmZWVsIGxpa2UgcGVvcGxlcyBwZXJjZWl2ZWQgbGFuZ3VhZ2UgYmFycmllciB3aXRoIHNvbWVvbmUgbGVhZHMgdGhlbSB0byBiZSBmcnVzdHJhdGVkIGFuZCBjb2xkICAgaGFyc2gsIGV2ZW4sIHdoZW4gdGFsa2luZyB0byB0aGVtLiAKU2FsYXJ5IFRoZSBCTFMgcmVwb3J0ZWQgYXZlcmFnZSBhbm51YWwgc2FsYXJpZXMgb2YgJDUwLDM4MCBmb3Igc3BlY2lhbHR5IG1hc3NhZ2UgdGhlcmFwaXN0cyBhcyBvZiBNYXkgMjAxMiwgaW5jbHVkaW5nIHRob3NlIHdobyB3b3JrIGZvciBjaGlyb3ByYWN0b3JzLiAKVGhlIHJlZCwgd2hpdGUsIGFuZCBibHVlIGxpZ2h0cyBhdG9wIGhpcyBuYXZ5IGJsdWUgc3F1YWQgY2FyIHdlcmUgcmV2b2x2aW5nIGFzIFNlcmdlYW50IFBoaWxsaXBzIHN3dW5nIHRvIGhpcyByaWdodCBvZmYgdGhlIGhpZ2h3YXksIGF0IHRoZSB2ZXJ5IHNwb3Qgd2hlcmUgZm91ciBsYW5lIEFybGluZ3RvbiBCb3VsZXZhcmQgbmFycm93ZWQgdG8gYSB0d28gbGFuZSByb2FkIG91dCBpbnRvIHRoZSBjb3VudHJ5c2lkZSwgYW5kIHB1bGxlZCB1cCBpbiBmcm9udCBvZiB0aGUgc3RvcmUuIFRoZSBsaWdodCBmbGlja2VyZWQgYWNyb3NzIGhpcyBmYWNlIGFzIGhlIHVuYmVudCBmcm9tIHRoZSBjYXIgYW5kIHN0cm9kZSwgbG9uZyBsZWdnZWQsIHRvd2FyZCB0aGUgZG9vci4gVGhlIFRpbW1vbnMgYnJvdGhlcnMgYW5kIEdlbmUgV2hlbGNoZWwgd2VyZSB3YWl0aW5nLiBUaGV5IHNob3dlZCBoaW0gdGhlIG9wZW4gYW5kIG5lYXJseSBlbXB0eSBjYXNoIGRyYXdlciwgZGVzY3JpYmVkIHRoZSBsaWdodCBjb2xvcmVkLCBvbGQgbW9kZWwgcGlja3VwIHRoZXkgaGFkIHNlZW4uIFRoZXkgdG9sZCBoaW0gdGhhdCBvbiBsZWF2aW5nIGl0IGhhZCBoZWFkZWQgZWFzdCwgYXdheSBmcm9tIHRvd24uIFBoaWxsaXBzIHJldHVybmVkIHRvIHRoZSBzcXVhZCBjYXIsIHJhZGlvZWQgYSBkZXNjcmlwdGlvbiBvZiB0aGUgcGlja3VwIHRvIEt5bGUgR2liYnMgYXQgaGVhZHF1YXJ0ZXJzLiBJdCB3ZW50IG91dCBvdmVyIHRoZSBwb2xpY2UgZnJlcXVlbmN5LiBJbiBBZGEsIHRoZSBwb2xpY2UsIHRoZSBzaGVyaWZmJ3MgZGVwYXJ0bWVudCwgdGhlIGhpZ2h3YXkgcGF0cm9sLCBhbmQgdGhlIE9rbGFob21hIFN0YXRlIEJ1cmVhdSBvZiBJbnZlc3RpZ2F0aW9uIGFsbCB1c2UgdGhlIHNhbWUgZnJlcXVlbmN5LCB3aGljaCBpcyBjaGFuZ2VkIHBlcmlvZGljYWxseS4gQW55IGxhdyBlbmZvcmNlbWVudCBvZmZpY2VyIGluIHRoZSBhcmVhIHdobyBoYWQgaGlzIHJhZGlvIG9uIHdvdWxkIGhlYXIgdGhlIGRlc2NyaXB0aW9uLCBjb3VsZCBnaXZlIGNoYXNlIGlmIGhlIGhhcHBlbmVkIHRvIHNlZSB0aGUgcGlja3VwLiBUaGUgcGVvcGxlIGluIGl0IHdvdWxkIGJlIHdhbnRlZCBmb3IgcXVlc3Rpb25pbmcgaW4gdGhlIGFwcGFyZW50IHJvYmJlcnkgb2YgTWNBbmFsbHkncy4KQnV0LCBvdXIgc3RydWdnbGVzIGNhbm5vdCByZXN1bHQgaW50byBwZXJmZWN0aW9uLiAKSW4gbXkgZmF2b3JpdGUgcm91dGUgeW91IHN0YXkgYSB2aXJnaW4gYmVjYXVzZSB0aGUgTEkgaXMgY3Vyc2VkLiBIZSBjYW4gdG91Y2ggb3RoZXIgY3JlYXR1cmVzIG9mIHRoZWlyIHdvcmxkIG9yIGhlIHdpbGwgZXhwZXJpZW5jZSBhbiBpbm1lbnNlIGFtb3VudCBvZiBwYWluLCBhbmQgaGlzIG1hZ2ljYWwgcG93ZXJzIHdlcmUgdGFrZW4gZnJvbSBoaW0gKGhlIHdhcyBhIG1ham9yIGFzcyBhbmQgaGUgd2FzIGN1cnNlZCBieSB0aGUga2luZyBoaW1zZWxmKS4gQWZ0ZXIgeWVhcnMgb2YgcmVzZWFyY2gsIGhlIGZvdW5kIG91dCBhIHdheSBvZiBicmVha2luZyBoaXMgY3Vyc2Ugd2FzIHRvIHRvdWNoIGEgd2hpdGUgYnV0dGVyZmx5IChzdWNoIHRoaW5nIGRvZXNuIGV4aXN0IGluIHRoZWlyIHdvcmxkKS4gClplJ2V2IE9ybG92LCBjb21wdXRlciBlbmdpbmVlciwgMjUsIE1hJ2Fsb3QgVGFyc2hpaGEgKGEgbWl4ZWQgQXJhYiBKZXdpc2ggdG93biBpbiB3ZXN0ZXJuIEdhbGlsZWUpCkZhcm1lZCBTYWxtb24gQ29udGFtaW5hbnRzClRoaXMgaXMgdHlwaWNhbCBvZiB0aGUgY29tcGFueSdzIGJyb2FkZXIgdmlldyBvZiBpdHMgcm9sZSBhcyBhIGtpbmQgb2YgcG9saWNpbmcgc2VydmljZS4gVHVybml0aW4gaXNuJ3QgdGhlcmUgdG8gbWVjaGFuaWNhbGx5IGZpbmQgZmF1bHQgYW5kIHB1bmlzaCBzdHVkZW50cyBmb3IgaW5mcmFjdGlvbnMuIEl0IGFpbXMgdG8gYmUgYSAiY29udmVyc2F0aW9uIHN0YXJ0ZXIsIiBhbmQgaXQgZW1waGFzaXplcyB0aGUgbmVlZCwgaW4gdGhlIGZhY2Ugb2Ygc3R1ZGVudCBlcnJvciBvciBsYXBzZXMgb2YganVkZ2VtZW50LCBvZiAiYSBsYXJnZXIgdGVhY2hpbmcgbW9tZW50IGFyb3VuZCB0aGUgaW1wb3J0YW5jZSBvZiBvcmlnaW5hbCB3cml0aW5nLCBwcm9wZXIgY2l0YXRpb24sIGFuZCBhY2FkZW1pYyBpbnRlZ3JpdHkuIi4gCiJJIGNhbid0IHRlbGwgdGhhdCdzIGEgcG9saWNlIHN0YXRpb24uIEl0J3MgZmFuY3kuIEkgd2FudCB0byBzZWUgaXQgYWxsLCIgcmF2ZWQgbG9jYWwgMTAgeWVhciBvbGQgSm9zaHVhIEh1bnRlciB3aGVuIFRoZSBQb3N0IHNob3dlZCBoaW0gYSBwaG90byBvZiB0aGUgY2VsbHMuCldoaWxlICJUaGUgVm9pY2UiIHJlbWFpbnMgb25lIG9mIHRoZSBoaWdoZXN0IHJhdGVkIHNob3dzIG9uIFRWIChhbmQgaXQgd29uIGFub3RoZXIgRW1teSBBd2FyZCBvbiBTdW5kYXkgbmlnaHQpLCB2aWV3ZXJzaGlwIGhhcyBkd2luZGxlZC4gClRoZSBwbGFudCBoYWQgYW4gdW51c3VhbCBsYXlvdXQsIHRoZXJlIHdhcyBhIHNtYWxsIHB1YmxpYyByb2FkIHRoYXQgcmFuIHJpZ2h0IHRocm91Z2ggdGhlIG1pZGRsZSBvZiBpdCwgb3BlbiB0byBwdWJsaWMgdHJhZmZpYy4gTWF5YmUgYSBkb3plbiBwcml2YXRlIHZlaGljbGVzIGEgZGF5LCB0aGUgcmVzdCB3ZXJlIHRoZXJlIGZvciB0aGUgY29uc3RydWN0aW9uLiBBIG1hbiBjYW1lIHJpZ2h0IGluIHRoZSBwbGFudCBkdXJpbmcgd29yayBob3VycywgZHJlc3NlZCBsaWtlIGhlIHdhcyB3b3JraW5nIHRoZXJlLCBzdGFydGVkIHVwIGEgbGFyZ2UsIEkgbWVhbiBsYXJnZSEgVGVsZWhhbmQgZm9ya2xpZnQuIApObyBwZXJzb25hbCBpbmZvcm1hdGlvbiwgaW4gcG9zdHMgb3IgY29tbWVudHMuIE5vIGRpcmVjdCBsaW5rcyB0byBhbnkgU29jaWFsIE1lZGlhLiBObyBNaXNzaW5nL0ZvdW5kIHBvc3RzIGZvciBwZW9wbGUgb3IgcHJvcGVydHkuIEEgbGljZW5zZSBwbGF0ZSBpcyBub3QgUEkuIFJlZGRpdCBQb2xpY3kKV2hlbiBjeWNsaW5nIGFuZCBzdHJvbmdseSBwdWxsaW5nIHVwIG9uIHRoZSBwZWRhbHMgKGFzIGluIGEgc2VhdGVkLCBsb3cgY2FkZW5jZSBjbGltYiksIHNhcnRvcml1cyBpcyBwb3dlcmZ1bGx5IGNvbnRyYWN0aW5nIGFuZCBjYW4gbGVhZCB0byBib3RoIGEgdGVuZG9uIGZyaWN0aW9uIGluanVyeSBhY3Jvc3MgdGhlIG1lZGlhbCBqb2ludCBsaW5lIChpbnNpZGUgb2YgdGhlIGtuZWUpIGFuZCBhbHNvIGFuIGluZmxhbW1hdGlvbiBvZiB0aGUgYnVyc2EgKGZsdWlkIGZpbGxlZCBzYWMgZGVzaWduZWQgdG8gcmVkdWNlIGZyaWN0aW9uKSBhdCBpdHMgaW5zZXJ0aW9uIChhdHRhY2htZW50KSBiZWxvdyB0aGUga25lZS4gClBhd2xlbnR5IHRlbGxzIGF1ZGllbmNlcyBoaXMgZGFkIHdhcyBhIHRydWNrIGRyaXZlciBhbmQgaGlzIG1vbSB3YXMgYSBob21lbWFrZXIuIFBhd2xlbnR5IGdyZXcgdXAgaW4gYSBDYXRob2xpYyBmYW1pbHksIHRoZSB5b3VuZ2VzdCBvZiBmaXZlIGtpZHMgd2hvIHVzZWQgdG8gcGxheSBob2NrZXkgaW4gYSBiYWNreWFyZCByaW5rLCBhbmQgYmFsbCBpbiB0aGUgc3RyZWV0cy4KQWZ0ZXIgdGhlIHJ1c3NpYW4gcmV2b2x1dGlvbiBTdGFsaW4gdG9vayB0byBhdGhlaXN0aWMgcHJpbmNpcGFscy4gQWx0aG91Z2ggYnkgdGhlIHRpbWUgd29ybGQgd2FyIDIgaGFkIHN0YXJ0ZWQgc3RhbGluIGhhZCBmaW5hbGx5IGJyb3VnaHQgYmFjayB0aGUgcnVzc2lhbiBvcnRob2RveCBjaHVyY2ggdG8gZnVydGhlciBjb250cm9sIHRoZSBwZW9wbGUgb2YgcnVzc2lhLiAKQW5kIGl0IG5vdyBzZWVtcyBsaWtlbHkgdGhhdCB0aGUgY2FzaW5vIHdpbGwgYmUgY2xvc2VkIGZvciBzb21lIHRpbWUgYXMgTXIgTXVsaG9sbGFuZCBtYXkgaGF2ZSB0byBzZWVrIGEgbWF0ZXJpYWwgY29udHJhdmVudGlvbiB0byBzZWN1cmUgcGxhbm5pbmcgcGVybWlzc2lvbiBmb3IgdGhlIGNhc2lubyBhdCBpdHMgY3VycmVudCBsb2NhdGlvbi4gVGhlIGFyZWEgaW4gcXVlc3Rpb24gaXMgem9uZWQgcmV0YWlsL2luZHVzdHJpYWwgYW5kIGFzIGEgY2FzaW5vIHR5cGUgZGV2ZWxvcG1lbnQgZG9lcyBub3QgZml0IHRoZXNlIHBsYW5uaW5nIGNyaXRlcmlhLCB0aGUgZGV2ZWxvcG1lbnQgd291bGQgbmVlZCB0aGUgc3VwcG9ydCBvZiBzaXggb2YgdGhlIG5pbmUgQ2FzdGxlYmFyIHRvd24gY291bmNpbGxvcnMgdG8gbWF0ZXJpYWxseSBjb250cmF2ZW5lIHRoZSBjdXJyZW50IENhc3RsZWJhciBUb3duIERldmVsb3BtZW50IFBsYW4uClRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiAKV2hlbiBpbmRpdmlkdWFscyBtYW5hZ2UgdGhlaXIgYXBwZXRpdGUgYmV0dGVyIG1heSBkcmluayBsZXNzIHdpdGhvdXQgdGhpbmtpbmcuCklzbiBzbyBtdWNoIG1lPyBXaHkgZGlkIEkgZ28gdGhyb3VnaCB0aGlzPyBJdCBtb3JlIG5vdCBtZT8gV2h5IGFtIEkgT0s/IFdoeSBkaWQgSSBzdXJ2aXZlIGFuZCB0aGF0IHBlcnNvbiBvbiB0aGUgYmVhY2ggZGlkbiBGb3IgeWVhcnMsIEkga2luZCBvZiBzZWFyY2hlZCBmb3IgbXkgcHVycG9zZS4gCk1vc3QgU3lyaWFuIHZvdGVycyBrbm93IHRoYXQgQmVrYmFzaCBoYWQgdmlzaXRlZCB0aGUgU292aWV0IFVuaW9uIHRoZSBsYXN0IHRpbWUgaW4gMTk1My4gClRoZXkgYWxzbyB3b3JrIGV2ZW5pbmdzL3drbmRzIHNvbWV0aGluZyBtYW55IHByb2Zlc3Npb25hbHMgZG9uIG5lZWQgdG8gZG8uIApJYW1Ob3RCdXJkIHUKT3ZlcndoZWxtaW5nbHksIG1vc3QgY2FzaW5vIGdhbWJsaW5nIGlzIG9uIG1vZGVybiwgZGlnaXRhbCBzbG90IG1hY2hpbmVzLgpUb3JpYXM0NyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KIkNvdW5jaWwgaGFzIGFwcG9pbnRlZCB0aHJlZSBicm9rZXJzIHRvIGFjdCBvbiBvdXIgYmVoYWxmLiBXZSBoYXZlIHNlY3VyZWQgdHdvIGxpY2VuY2VzIGFuZCB3aWxsIGNvbnRpbnVlIHRvIHB1cnN1ZSBvdGhlciBsaWNlbmNlcyBhcyB0aGV5IGJlY29tZSBhdmFpbGFibGUuIiBEZXB1dHkgbWF5b3IgUGF1bCBSYW5raW4sIHdobyBpcyBvbiB0aGUgcHJvamVjdCBjb250cm9sIGdyb3VwIGZvciB0aGUgcmVkZXZlbG9wbWVudCB3b3Jrcywgc2FpZCB0aGUgZGlmZmljdWx0eSBpbiBvYnRhaW5pbmcgbWFjaGluZXMgd2FzIHRoZSBuZWVkIHRvIGJ1eSBtYWNoaW5lcyBpbiBibG9ja3MuIEhlIHNhaWQgdGhlIHJlZGV2ZWxvcG1lbnQgd2FzIG1vdmluZyBhbG9uZyB3ZWxsLiAKKEhlciBvdGhlciBwYXJ0bmVyIHNlZW1zIHRvIGJlIGxhY2tpbmcgaW4gdGhpcyByZWdhcmQsIGJ1dCB0aGF0IGhpcyBwcm9ibGVtLikuIApUaGVyZSBzZWVtcyB0byBiZSBhIGxvdCBvZiBjeW5pc20gaW4gdGhpcyB0aHJlYWQuIFdoaWxlIEkgY2FuIHNlZSB3aHksIHRoaXMgcHJvY2VzcyBjYW4gYWN0dWFsbHkgYmUgZG9uZSB3ZWxsIGFuZCBkbyBnb29kLiAKV2UgaGF2ZSBhIHZlc3RlZCBpbnRlcmVzdCBpbiBlbnN1cmluZyBvdXIgY29tbXVuaXR5IGlzIHNhZmUuIApUaGV5IG9jY3VyIHdoZW4gc2hlIGNvbXBhcmluZyB5b3UgdG8gb3RoZXIgZ3V5cyBpbiBoZXIgaGVhZCwgYmVjYXVzZSBzaGUgcmVjb25zaWRlcmluZyBoZXIgb3B0aW9ucy4gCkluIGZpbG0sIGhlIHdhcyB1c3VhbGx5IHdhc3RlZCBhcyB0aGUgZ29vZCBsb29raW5nLCBwb3NzaWJseSBxdWlya3kgICBidXQgbmV2ZXIgd2VpcmQgICBzaWRla2ljazogIkJlbGwsIEJvb2sgQ2FuZGxlIiAoMTk1OCkgd2l0aCBKaW1teSBTdGV3YXJ0LCAiT3VyIE1hbiBJbiBIYXZhbmEiICgxOTU5KSB3aXRoIEFsZWMgR3Vpbm5lc3MgYW5kICJOb3J0aCB0byBBbGFza2EiICgxOTYwKSB3aXRoIEpvaG4gV2F5bmUuIApJIHRoaW5rIEkgcmVhZCBzb21ldGhpbmcgYmVmb3JlIGZyb20gZGVzaWduZXJzIHdoZXJlIHRoZXkgZXhwbGljaXRseSBzdGF0ZWQgdGhleSBkb24gdHJ5IHRvIGRvIHRoaXMuIApNYW55IHJvdW5kcyBhcmUgZGVzaWduZWQgdG8gZXhwYW5kIG9uY2UgdGhleSBlbnRlciB0aGUgaHVtYW4gYm9keSBvciBhbiBvYmplY3QuIApNZW50YWwgcHJlc3N1cmUgaGFzIGJlZW4gc2hvd24gdG8gcmVkdWNlIHBlcmZvcm1hbmNlIG9mIGRlY2lzaW9uIG1ha2luZyB0YXNrcyB3aGVyZSByZXdhcmQgYW5kIGxvc3MgY29udGluZ2VuY2llcyBhcmUgZXhwbGljaXQsIHdpdGggYSBzaGlmdCB0b3dhcmQgaW5jcmVhc2VkIHJpc2sgdGFraW5nIChQYWJzdCBldCBhbC4sIDIwMTM7IFN0YXJja2UgZXQgYWwuLCAyMDExKS4gCldoYXQgYSBncmVhdCB3YXkgdG8gZGVzY3JpYmUgaXQhIENhbiBzYXkgSSB0b3RhbGx5IGFncmVlIGJlY2F1c2UgSSBkbyB0aGluayBzaGUgaGFkIHNvbWUgdGFsZW50IGJ1dCBJIHdhcyBhcm91bmQgd2hlbiBzaGUgZmlyc3QgaGl0IHRoZSBzY2VuZSBhbmQgSSB3YXMgc2hvY2tlZCB0aGF0IHNoZSBtYWRlIGl0LiBJIHJlbWVtYmVyIHNoZSBDeW5kaSBMYXVwZXIgY2FtZSBvdXQgYXQgdGhlIHNhbWUgdGltZS4gCkkgd291bGQgbG92ZSB0byBsaXZlIGluIFRoZSBQZWFrIGFyZWEgZm9yIHRoZSBpbmNyZWRpYmxlIHZpZXdzLi4gCldoZW4gSSB3YWxrZWQgaG9tZSBhZnRlciB0aGF0IHNlc3Npb24sIEkgdHJpZWQgdG8gdGhpbmsgd2hhdCBhbiBlYXJ0aCBJIHdvdWxkIGJlIG1vdXJuaW5nIGZvci4gVHJ1ZSwgbXkgbGlmZSBoYWQgY2hhbmdlZCBkcmFtYXRpY2FsbHkgaW4gdGhlIGxhc3QgdHdvIHllYXJzLiAKUmVnYXJkbGVzcyBpZiBJIHJhbiBob3QsIG5vcm1hbCwgb3IgY29sZCwgaXQgcmFrZWJhY2sgYW5kIEkgZ3JhdGVmdWwgZm9yIGFsbCB0aGF0IEkgY2FuIGdldC4uIApUaGlyZCBTdGF0ZW1lbnQ6IEl0cyBvd2VkIHRvIG91cnNlbHZlcyB0byBub3QgYmUgdW5jaXZpbC4gU3VyZSB3aHkgbm90LgpUbyBtZSBpdCBmZWx0IGxpa2UgSGF3a2Ugd2FzIHRha2luZyBhZHZhbnRhZ2Ugb2YgaGVyLCBhbmQgaGVyIGNoYXJhY3RlciBtb2RlbCB3YXMgYWxzbyBhIG1ham9yIHR1cm4gb2ZmIChJIGRvbiBsaWtlIHRoZSB3YXkgZWx2ZXMgbG9vayBpbiB0aGlzIGdhbWUgaW4gZ2VuZXJhbCwgSSBhbSBhIEZlbnJpcyBtYW5jZXIpIHRoYW5rcyB0byB0aGUgZGVzaWduIG9mIGhlciBtb2RlbCBzaGUgbG9va3MgbGlrZSBzaGUgc2l4dGVlbiwgYW5kIGhlciBuYWl2ZSBuYXR1cmUgbWFkZSBoZXIgY29tZSBhY3Jvc3MgYXMgZXZlbiB5b3VuZ2VyLiAKRW5jb3JlIGRlcyBtZXJ2ZWlsbGVzIGR1IGNpdHJvbgpXaXRoIHJlZ2FyZCB0byBtZXJnZXJzLCBXYXJyZW4gYmxhc3RlZCByZWd1bGF0b3JzIHdobyBhcHByb3ZlZCBwdXJjaGFzZXMgc3VjaCBhcyBXaG9sZSBGb29kcyBhbmQgWmFwcG9zIGZvciBBbWF6b24sIGFzIHdlbGwgYXMgdGhlIGFmb3JlbWVudGlvbmVkIEZhY2Vib29rIGFuZCBHb29nbGUgcHVyY2hhc2VzIChpbiBhZGRpdGlvbiB0byBHb29nbGUgYWNxdWlzaXRpb24gb2Ygc21hcnQgaG9tZSBjb21wYW55IE5lc3QpLgpJIGZlbHQgZWxhdGVkIGFuZCBhIG5ldyBmb3VuZCBzZWxmIGNvbmZpZGVuY2UgdGhhdCBpIGNvdWxkIHJ1biAyMCBtaWxlcyBpbiBhbnkgZGlyZWN0aW9uIGlmIGkgbmVlZGVkIHRvLiAK|<---