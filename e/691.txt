--->|WW91IHdpbGwgd2FudCBlYWNoIHRhYmxlIHRvIGhvbGQgbm8gbGVzcyB0aGFuIDYgcGxheWVycy4gQWxzbywgcGxhbiBvbiBjb3ZlcmluZyB0aGUgdGFibGVzIHdpdGggZWl0aGVyIGEgdGFibGUgY2xvdGgsIG9yIGlmIHlvdSBjYW4gcHVyY2hhc2UgYSBmb2xkIG91dCBwb2tlciB0YWJsZSB0b3Agb3IgYSBwb2tlciBmZWx0LiAKVG90IHNsb3QgaGFuZGVsdCBlZW4gYmVrd2FtZSBmeXNpb3RoZXJhcGV1dCBvcCBlZW4gcHJvZmVzc2lvbmVsZSB3aWp6ZSwgZGV6ZSBzdGVsdCB6aWpuIHBhdGludGVuIG9wIGh1biBnZW1hayBlbiBnZWVmdCB6ZSBoZXQgZ2V2b2VsIGRhdCB6ZSBnZWhvb3JkIHdvcmRlbiBlbiBkYXQgZGUgdGhlcmFwZXV0IGVyIGlzIG9tIHplIHRlIGhlbHBlbi4uIApGb3IgbW9zdCBwaHlzaWNhbCBwcm9kdWN0cyB3ZSB0ZW5kIHRvIHRoaW5rIG9mIHRoZSBwbGFjZSBhcyBhIHN0b3JlIG9yIHNob3Agb2Ygc29tZSBzb3J0LiAKSGVyIGFkdmljZSBmb3IgZGVhbGluZyB3aXRoIHpvbWJpZXMgaXMgc2ltaWxhciBmb3IgZ3VpZGFuY2UgZGVhbGluZyB3aXRoIGEgcmVzaXN0YW50IHRvZGRsZXIuICJHaXZlIHRoZW0gbG90cyBvZiBjaG9pY2VzLiAKTmVlZHMgdG8gYmUgZHJhbWF0aWMuIFdlIGhhdmUgZG9uZSBpdCBpbmNyZW1lbnRhbGx5LiBUaGF0IGhhcyBub3Qgd29ya2VkLiAKc2F5cyBJIG93ZSBtb25leSBBRlRFUiBDbG9zaW5nCldoaXRlIGd1eSBkb2VzIGEgYmlnIHlpa2VzCldlIGFsd2F5cyB1c2VkIHRvIGpva2Ugd2l0aCBoaW0gYmVjYXVzZSBoaXMgb3RoZXIgcGFydCB0aW1lIHdvcmsgd2FzIHBsYXlpbmcgcG9rZXIgd2l0aCB0aGUgb3RoZXIgY29sbGVnZSBraWRzIG9uIGNhbXB1cy4gCiJGb3IgYSBwZXJzb24gdXNpbmcgYSB3aGVlbGNoYWlyLCBzdGFpcnMgYXJlIGxpa2UgYSBzaWduIHRoYXQgc2F5cyB5b3UgY2FuJ3QgZW50ZXIgaGVyZS4gCkVTUE4gY2Fubm90IGZvcmNlIGV2ZXJ5b25lIGF0IHRoZSBmZWF0dXJlIHRhYmxlIHRvIHdlYXIgYSBtaWNyb3Bob25lLiBCdXQgYXNpZGUgZnJvbSBzb21lIGhpZ2ggbWFpbnRlbmFuY2UgcHJvZmVzc2lvbmFscywgbW9zdCBwb2tlciBwbGF5ZXJzIHJlbGlzaCBhIGNoYW5jZSB0byBzaXQgYXQgdGhlIGZlYXR1cmUgdGFibGUgZHVlIHRvIHNvbWUgdW5pcXVlIHNwb25zb3JzaGlwIGRlYWxzLgpCdXQgd2hhdCBpcyBmYXNjaW5hdGluZyBpcyB0aGF0IHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBzaXR0aW5nIHRpbWUgYW5kIG1vcnRhbGl0eSB3YXMgaW5kZXBlbmRlbnQgb2YgcGh5c2ljYWwgYWN0aXZpdHkgbGV2ZWxzLgpTbyBJIHdhcyB0b3VnaCB3aGVuIGl0IGNhbWUgdG8gbWlzc2luZyBzY2hvb2wsIEkgd2FzIGEgc2lja2x5IGtpZCBncm93aW5nIHVwIHRvbyBzbyBJIGtuZXcgd2hhdCBpdCB3YXMgbGlrZS4gSSByZW1lbWJlciBtaXNzaW5nIHNjaG9vbCBhbmQgaGF2aW5nIHRvIG1ha2UgaXQgdXAuIEkgcmVtZW1iZXIgZ29pbmcgYmFjayBpbiBncmFkZSAxIGFuZCBtaXNzaW5nIGEgZmV3IHdlZWtzIGFuZCBoYXZpbmcgYSBzcGVsbGluZyB0ZXN0LiAKTW9zdCBsZWFndWUgYW5kIHRvdXJuYW1lbnQgZXZlbnRzIGFyZSBvZmZpY2lhdGVkLgpGdXJ0aGVyIGludmVzdGlnYXRpb24gd2lsbCB1bmRvdWJ0ZWRseSByZXZlYWwgc2lnbmlmaWNhbnQgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgYWN0dWFsIGRyZWFtcy4gCldlJ3ZlIHByb2JhYmx5IGJlZW4gdGhyb3VnaCBpdC4gSXQncyByYXJlIHdoZW4gd2UgYm90aCBhcmUgdHVybmVkIG9uLCBhd2FrZSBlbm91Z2gsIGFuZCBpbnRlcmVzdGVkIGF0IHRoZSBzYW1lIHRpbWUgKG9yIHRoYXQgaGFwcGVucyBhbmQgbXkgcGVyaW9kIGlzIHJlYWxseSBoZWF2eSBvciBhIGtpZCBzdGFydHMgdGhyb3dpbmcgdXAgb3IgSSBkb24ndCBrbm93LikuIApJbiBMb25naGFuZCBMaW1pdCBIb2xkIHRoZSBtb3N0IGltcG9ydGFudCBhZHZhbnRhZ2Ugb2YgYSBwb2tlciBwbGF5ZXIgaXMgaGlzIHRlY2huaWNhbCBza2lsbHMuIFRoZSB3aW5uaW5nIHBsYXllciBtdXN0IGJlIHBhdGllbnQgYW5kIHVuZGVyc3RhbmRzIGhhbmQgdmFsdWUuIFlvdXIgcGVvcGxlIHNraWxscyB3b24gY29udHJpYnV0ZSBtdWNoIHRvIHlvdXIgd2lubmluZ3MuIEl0IGlzIGhhcmQgdG8gYmx1ZmYgYW5kIGl0IGlzIHVzZWxlc3MgdG8gcmVhZCB5b3VyIG9wcG9uZW50cyBzaW5jZSBtYW55IGhhbmRzIHJlYWNoZXMgdGhlIHNob3dkb3duLiBUaGUgcG90IG9kZHMgbWFrZSBhIHJpdmVyIGZvbGQgbWFrZSBhIHJpdmVyIGZvbGQgZXh0cmVtZWx5IGNoYW5jeS4KSXQgd2FzIG1hdHRlIGJ1dCBpdCBkaWQgaGF2ZSBzb21lIHNwZWNzIG9mIHNoaW1tZXIuIFRvIG1lIGF0IGxlYXN0LCBpdCBsYXN0ZWQgYWxsIGRheSBvbmNlIEkgc2V0IG15IG1ha2V1cCB3aXRoIFVEIEFsbCBOaWdodGVyLiAKWW91IHNob3VsZCBub3QgY2hlYXQgYXQgdGhpcyBnYW1lIHRob3VnaC4gSXQgaXMgZnVuIGFuZCBjaGVhdGluZyAoaSBkaWQpIG1ha2VzIGl0IGJvcmluZy4gCklmIGJ5IG5vZGVzIHlvdSBtZWFuIG1pbmVycywgeWVzLiBJZiB5b3UgbWVhbiBub24gbWluaW5nIG5vZGVzLCB0aGFuIG5vYm9keSBoYXMgdG8gY29udmluY2UgdGhlbSBhcyB0aGV5IGlycmVsZXZhbnQuIApPdXIgcHJheWVycyBhcmUgd2l0aCB5b3UgSmFuZSBhbmQgeW91ciBmYW1pbHkuIEdvZCBibGVzcyBhbmQgd2Ugd2lsbCBuZXZlciBmb3JnZXQgUGV0ZXIgb3VyIHNpbmNlcmUgcy4gCkFsc28gaGFkIHRvIHRoaW5rIGFib3V0IGhvdyB0byBmYXN0ZW4gdGhpbmdzIHRvIHRoZSB3YWxscyBhbmQgZGVmaW5lIGRpZmZlcmVudCBhcmVhcy4geXVydCBmcm9tIExhbmdsZXkgYmFzZWQgY29tcGFueSBZdXJ0eiBieSBEZXNpZ24gaGFzIGEgMTAgbWV0cmUgZGlhbWV0ZXIuIFRoZSBiYXNlIGlzIGdpdmVuIGludGVybmFsIHN0cnVjdHVyZSBieSBhIG1vcmUgdGhhbiB0d28gbWV0cmUgaGlnaCB3b29kZW4gbGF0dGljZSB0aGF0IGFjY29yZGlvbnMgb3BlbiBvciBjbG9zZWQsIHdpdGggdGhlIHJvb2Ygc29hcmluZyBhYm92ZSwgc3VwcG9ydGVkIGJ5IGxvZGdlcG9sZSBwaW5lIHJhZnRlcnMuIApCZSBsZXNzIGxpa2VseSB0byBibHVmZi4gCkkgd291bGQgcGxheSBhdCBvbmUgb2YgdGhlIG90aGVyIGNhc2lub3MgaWYgeW91IGhhdmUgYSBjaGFuY2UuQmV0c3kgTSwgTWFuYWdlciBhdCAsIHJlc3BvbmRlZCB0byB0aGlzIHJldmlld1Jlc3BvbmRlZCBKdWx5IDE1LCAyMDE0VGhhbmsgeW91IGZvciBzaGFyaW5nIHlvdXIgcmV2aWV3IHdpdGggdXMgQ2luZHkuIApCaWRkeSBPIFRoZSBnaXJsIHdobyB0aG91Z2h0IHNoZSB3YXMgSXJpc2gsIFJvaXNpbiBEdWJoICh1cHN0YWlycyApIDVwbS4gCkluIHRoZSBhZ2dyZXNzaXZlIGFwcHJvYWNoIHRoZSBwbGF5ZXIgc3RhcnRzIHRvIHN0YWtlIG1heGltdW0gZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcuIElmIHRoZSBsaW1pdCBvZiB0aGUgdGFibGUgcGVybWl0cywgc29tZSBwbGF5ZXJzIHN0YWtlIGFsbCB0aGUgbW9uZXkuIFRoZSBtYWluIGFpbSBoZXJlIGlzIHF1aWNrbHkgdG8gbGVhdmUgYmVoaW5kIGFsbCB0aGUgY29tcGV0aXRvcnMgYW5kIGJlaW5nIGEgbGVhZGVyIHRvIHBsYXkgbW9yZSBjYWxtbHkgYW5kIHdhdGNoIHRoZSBjb21wZXRpdG9ycy4uIApZb3Ugc2hvdWxkIHRha2UgdGhlIHRpbWUgdG8gY29uc2lkZXIgYWxsIG9mIHRoZSB1bmlxdWUgYXJlYXMgb2YgaW1wb3J0YW5jZSB0aGF0IGhhdmUgYmVlbiBlc3RhYmxpc2hlZCBpbiB0aGlzIHJvdW5kIHBva2VyIHRhYmxlIGJ1eWluZyBndWlkZS4gSWYgeW91IGRvLCB5b3Ugd2lsbCBxdWlja2x5IGZpbmQgdGhhdCB0aGVyZSBpcyBhIHRhYmxlIG9uIHRoZSBtYXJrZXQgdGhhdCBpcyBzdWl0ZWQgcGVyZmVjdGx5IGZvciB5b3UsIHlvdXIgaG9tZSwgYW5kIHRoZSBwb2tlciBnYW1lcyB0aGF0IHlvdSBlbmpveSBob3N0aW5nLi4gClNpZGV3YWxrIGhhcyB3ZWxjb21lZCBib3RoIENyZXNzeSdzIG1vdGlvbiBhbmQgdGhlIHByb3ZpbmNpYWwgY29uc3VsdGF0aW9ucy4KSSB3b3VsZCB3YWl0IDIgd2Vla3MgYmVmb3JlIGNhbGxpbmcgeW91ciBkb2N0b3IuIEluIG15IGV4cGVyaWVuY2UgMiB3ZWVrcyAxIG1vbnRoIGlzIGhvdyBsb25nIHRoZXkgbGlrZSB0byBzZWUgYmVmb3JlIGNoYW5naW5nIGEgbWVkLiBJIHdvdWxkIHJlY2NvbWVuZCBjYWxsaW5nIHRoZW0gYW5kIDEwIG1nIDJ4IHBlciBkYXkgaXMgYSBsb3dlciBlbmQgZG9zZSBzdWl0YWJsZSBmb3IgYSBjaGlsZC4gCkFueW9uZSBleHBlY3RpbmcgdG8gZ2V0IG11bHRpcGxlIHBsYW5ldHMgd2l0aCB0aGUgZGVuc2l0eSwgZGV0YWlsLCBhbmQgc2l6ZSBvZiB0aGVpciBvdGhlciBnYW1lcyBzaG91bGQgdGVtcGVyIHRoZWlyIGV4cGVjdGF0aW9ucy4gVGhhdCBpc24gaGFwcGVuaW5nLiAKWW91IGNhbiBhbHNvIHB1cmNoYXNlIGN1dGljbGUgb2lsIGF0IGRydWdzdG9yZXMsIGJlYXV0eSBzdG9yZXMgb3IgdGhlIGdyb2NlcnkuIFRoZXkgb25seSBjb3N0IGxlc3MgdGhhbiAkMiBhdCBtb3N0LiAKV29ybGRzIGJldHRlci4gSW4gdGhlIGVuZCB0aG91Z2gsIGlmIHlvdSBjYW4gc3dpbmcgaXQsIGJ1eSBhIEdhcm1pbiBHUFMgd2F0Y2guIApJdCBpcyBlbnRpcmVseSBkZXBlbmRlbnQgb24geW91ciBvdGhlciBsYXllcnMgYW5kIHdoYXQgeW91IGFyZSBkb2luZy4gCldlIGFsbCBpbW1lZGlhdGVseSB1bmRlcnN0YW5kIHdlIGhhdmUgYmVlbiBkZWZlYXRlZCwgY2FsbWx5IHBhY2sgc3VwcGxpZXMsIGxlYXZlIG91ciBob21lcyBhbmQgdHJ1ZGdlIGludG8gdGhlIGRlc2VydCB0byBkaWUsIGFzIHBlciB0aGUgaW50ZXJuYXRpb25hbCBydWxlcyBvZiA1MSUgbGFuZCBvd25lcnNoaXAudmo4OCAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29UaGUgaGF2aW5nIHRoZSBzdXBwb3J0IGluIHRoZSBtaWRkbGUgc291bmRzIGxpa2UgYSBsb2dpc3RpY2FsIG5pZ2h0bWFyZS4gVGhleSdkIGhhdmUgdG8gYnJpbmcgb3V0IHRoZSBiYW5kcyBlcXVpcG1lbnQgdGhlbiB0YWtlIGlzIGF3YXkgd2hpY2ggd291bGQgdGFrZSB1cCBhIGdvb2QgY2h1bmsgb2YgdGltZSBJIHdvdWxkIGltYWdpbmUuQW5kIG51bWJlcnMgd2lzZSBob3cgbWFueSBzb25ncyBkaWZmZXJlbnQgd2FzIGl0LiAKVGhlICJlZmZpY2llbnQgdXNlIG9mIHRoZSBsYW5ndWFnZSIgaXMgY29uc2lzdGVudCBhY3Jvc3MgYSBsYXJnZXIgY29tbXVuaXR5IHRvIHNvbWUgZXh0ZW5kLiBXaGljaCBpcyB3aHkgaXQgaXMgY2F0ZWdvcmlzZWQgYXMgYSBkaWFsZWN0IG9mIEVuZ2xpc2guIApDZSBmdXQgdW4gcmFtYXNzaXMgZGUgbGlldXggY29tbXVucywgcGFybGFudCBkZSBuZ3JpdHVkZSwgZGUgTWFydGluaXF1ZSwgZmFpc2FudCBsaXJlICBxdWVscXVlIGFydGlzdGUgZGUgdGh0cmUgZGV1eCBvdSB0cm9pcyB2ZXJzIGR1IHBvdGUuIExhIGNybW9uaWUgb3JnYW5pc2UgZW4gaG9tbWFnZSBhdmFudCBzb24gaW5odW1hdGlvbiBhIHQgbCdvYmpldCBkJ3VuZSB0ZW50YXRpdmUgZGUgcmN1cHJhdGlvbiBwb2xpdGlxdWUgYXNzZXogc2NhbmRhbGV1c2UsIHBhcyAgbGEgaGF1dGV1ciBkZSBsJ2ltcG9ydGFuY2UgZHUgcGVyc29ubmFnZS4gSWwgeSBhIGZvcnQgIHBhcmllciBxdWUgcmVwb3NhbnQgbWFpbnRlbmFudCBkYW5zIHNvbiBsZSwgQWltIENzYWlyZSBuZSBmYXNzZSBwbHVzIGwnb2JqZXQgcXVlIGRlIHB1YmxpY2F0aW9ucyBzYXZhbnRlcyBldCBxdWUgbGEgcHJlc3NlIG5lIHMnZW4gcHJvY2N1cGUgcGx1cy4gCkFzIHRoZSBiZW5lZml0IG9mIGZhbHNlIGRpc2Nvbm5lY3RzIGluIGxpbWl0IHBva2VyIGlzIG11Y2ggc21hbGxlciwgbWFueSBwb2tlciByb29tcyBwcm92aWRlIHByb3RlY3Rpb24gb25seSBvbiB0aGUgbGltaXQgb3IgYWRkIHNwZWNpYWwgdGFibGVzIHdpdGhvdXQgcHJvdGVjdGlvbiBvbiB0aGUgbm8gbGltaXQgYW5kIHBvdCBsaW1pdC4gCkxlIEFubmUgUGVyZWlyYSwgNDcsIGV4cGxhaW5lZCB0aGF0IGl0IHdhcyBvbiBoZXIgImJ1Y2tldCBsaXN0IiB0byBzZWUgTWFuZGVsYSBhdCBsZWFzdCBvbmNlIGluIGhlciBsaWZlLgpUaGV5IGludmVudGVkIG1lZGljYXRpb24gdG8gdHJlYXQgaGVycGVzIGFuZCB3aGVuIGl0IGZpcnN0IGNhbWUgb3V0LCBpdCBkaWRuIHNlbGwgdmVyeSB3ZWxsIGF0IGFsbCwgdW50aWwgdGhleSBiYXNpY2FsbHkgc3RhcnRlZCBhIHNtZWFyIGNhbXBhaWduIHN0YXRpbmcgdGhhdCBwZW9wbGUgd2hvIGhhdmUgaGVycGVzIGFyZSBkaXJ0eSBhbmQgaW1tb3JhbCBhbmQgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCB5b3UgaGF2ZSBiZWVuIGNvbnZpbmNlZCBhcmUgdHJ1ZSB0b2RheS4gWW91IGFuZCB5b3VyIGJlbGllZnMgYXJlIHRoZSBwcm9kdWN0IG9mIGNhcGl0YWxpc20gYW5kIG5vdGhpbmcgbW9yZS4uIApNYXliZSBoYXZlIGl0IGhpdCBvbmNlIGFuZCBjYXVzZSBhIGtub2NrdXAgb3IgYSBzbG93IGFuZCB0aGVuIHNoZSBnZXRzIHRvIHVzZSBpdCBhZ2FpbiBmb3IgYW4gYWRkaXRpb25hbCBrbm9ja3VwIGJlZm9yZSB0aGUgZmluYWwgdXNlIGZvciBhbm90aGVyIGtub2NrIHVwLiAKIkkgd291bGQgY2VydGFpbmx5IHNheSB0aGF0IHRoZSBkZWVyc2tpbiB0aGVvcnkgc2hvdWxkIG5vdCBiZSBwcmVzZW50ZWQgYXMgdW5xdWVzdGlvbmFibHkgdHJ1ZTsgb2ZmZXJpbmcgaXQgYWxvbmdzaWRlIHRoZSAnc2F3YnVjaycvJDEwIHRoZW9yeSBpcyBwcm9iYWJseSBhYm91dCB0aGUgYmVzdCB0aGF0IGNhbiBiZSBkb25lLiIuIAoiWW91J3ZlIGdvdCB0byBkZXZlbG9wIGRpZmZlcmVudGlhdGVkIGV4cGVyaWVuY2VzIHRvIHVsdGltYXRlbHkgcmV0YWluIGFuZCBhdHRyYWN0IGN1c3RvbWVycywiIFJhd2xpbnMgc2FpZCBpbiBhbiBpbnRlcnZpZXcuIFRob3NlIGV4cGVyaWVuY2VzLCBoZSBzYWlkLCBuZWVkIHRvIGJlIG9uZXMgInRoYXQgY2Fubm90IGJlIGR1cGxpY2F0ZWQgaW4ganVzdCBhIGRpZ2l0YWwgZW52aXJvbm1lbnQuIgpBZXczMjIgICAyNSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCi4pLCBpdCdzIGZyZXF1ZW50bHkgdXNlZCBpbiBwcm9zdGl0dXRpb24gYW5kIHNleHVhbCB0YWxrcywgbWVhbmluZyBhIGdpcmwgKHVzdWFsbHkpIHdobyBnb29kIGF0IHBsZWFzdXJpbmcgYSBtYW4uLiAKVGhlIGFtYXRldXJzIGNvbnRlc3QgdGhlIGxhc3QgYW5kIEZlcmR5IE11cnBoeSBzYWRkbGVzIHRoZSBmYXZvdXJpdGUgaW4gdGhlIHNoYXBlIG9mIFBva2VyIERlIFNpdm9sYS4gTmluYSBDYXJiZXJyeSBsb29rcyBhIHNpZ25pZmljYW50IGpvY2tleSBib29raW5nIGFuZCB0aGUgc3RhYmxlIGhhdmUgYSByZXB1dGF0aW9uIG9mIHJhcmVseSBiZWluZyBmYXIgYXdheSB3aGVuIHRoZSBtb25leSBpcyBkb3duLiBUaGUgcmFuZ2Ugb2YgYWJpbGl0eSBpbiB0aGUgYW1hdGV1ciBkaXZpc2lvbiBpcyBmYXIgZ3JlYXRlciB0aGFuIGluIHRoZSBwYWlkIHJhbmtzIGFuZCBwdW50ZXJzIG5lZWQgdG8gYmUgYXdhcmUgb2YgdGhhdCB3aGVuIHBsYWNpbmcgYSBiZXQuIENhcmJlcnJ5IGlzIHRoZSBvbmUgb2YgdGhlIGdyZWF0ZXN0IGZlbWFsZSByaWRlcnMgZXZlciBhbmQgYWxzbyBvbmUgb2YgdGhlIGJlYXQgYW1hdGV1cnMuClRoZXJlIGEgcGFydGljdWxhciBraW5kIG9mIHBlcnNvbiB0aGF0IEkgYWJzb2x1dGVseSBoYXRlLCBhbmQgdGhhdCB0aGUgcGVyc29uIHdobywgaW4gdHJ5aW5nIHRvIGJ1c3QgaW50byBhIG5ldyBwcm9mZXNzaW9uIGludm9sdmluZyBQUiwgdXNlcyB0aGUgImZha2UgaXQgdGlsbCB5b3UgbWFrZSBpdCIgc3RyYXRlZ3kuIEJhc2ljYWxseSwganVzdCBhY3QgY29uZmlkZW50IGFuZCBwcmV0ZW5kIHRoYXQgeW91IGFscmVhZHkgYXQgdGhlIGxldmVsIHlvdSB0cnlpbmcgdG8gYmUsIGFuZCBob3BlIHBlb3BsZSBidXkgaXQuIApJIGhhdmUgbmV2ZXIgaGFkIGEgcHJvYmxlbSB3aXRoIG9mZiBsZWFzaCBkb2dzIGluIHBsYWNlcyBsaWtlIHRoYXQgYmVjYXVzZSB0aGVyZSBpdCdzIGVhc3kgdG8gYXZvaWQgdGhlbS4gCkkgdGhpbmsgdGhpcyBhcnRpY2xlIGRvZXMgYSBnb29kIGpvYiBvZiBwb2ludGluZyBvdXQgaXNzdWVzIHdpdGggdGhlIG1ldHJpYyB0aGF0IGlzIGJlaW5nIHVzZWQgdG8gbWFrZSB0aGUgY2xhaW0gdGhhdCBwb3ZlcnR5IGlzIGRlY3JlYXNpbmcuIEEgYmV0dGVyIG1ldHJpYyB3b3VsZCBiZSB0aGUgcGVyY2VudGFnZSBvZiB0aGUgd29ybGQgcG9wdWxhdGlvbiB0aGF0IGlzIHN1ZmZlcmluZyBmcm9tIG1hbG51dHJpdGlvbiwgb3IgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIHdvcmxkIHBvcHVsYXRpb24gdGhhdCBpcyBiZWluZyBkaXNwbGFjZWQgYnkgd2FyIG9yIGNvbmZsaWN0cywgb3IgdGhlIHBlcmNlbnRhZ2Ugb2YgY2hpbGRyZW4gdGhhdCBkaWUuIElmIGJlaW5nIHB1bGxlZCBvdXQgb2YgbWVhbnMgYW55dGhpbmcsIGl0IGhhcyB0byBiZSBpbiByZWxhdGlvbiB0byBpbXByb3ZpbmcgdGhlIHF1YWxpdHkgb2YgbGlmZSBvZiB0aGUgcGVvcGxlIHdpdGggbGVzcyByZXNvdXJjZXMgZ2xvYmFsbHkuLiAKSG93ZXZlciwgSSB3YXMgb2JqZWN0aXZlbHkgbXVjaCB3ZWFsdGhpZXIgaW4gdGhlIFVTIGNvbXBhcmVkIHRvIG15IGxpZmUgaW4gVUssIElyZWxhbmQsIG9yIFNwYWluLiBJIHJlbWluZCB5b3Ugb2YgdGhlIG9idmlvdXM6IE5vIGNvdW50cnkgaXMgb3IgYW5kIHRoYXQgYWxsIGhhdmUgdGhlaXIgcHJvcyBhbmQgY29ucy4gCkJlY2F1c2UgdGhhdHMgImp1c3QgdGhlIHNvY2lhbCBub3JtIj8/P1RoaXMgd291bGQgaW5ldml0YWJseSBhcHBseSB0byBpbmRpdmlkdWFscyB3aG8gYXJlIG9uIHRoZSBhdXRpc3RpYyBzcGVjdHJ1bSwgcGh5c2ljYWxseSBkaXNhYmxlZCBvciBoYXZlIGRvd24gc3luZHJvbWUuIApJIHRoaW5rIHRoZXNlIGFyZSBncmVhdCBpbnNpZ2h0cyBhbmQgSSB0b3RhbGx5IGFncmVlLgpMYSB2ZWlsbGUgZGUgbCdhbm5vbmNlIGR1IGRwdCBkZSBiaWxhbiBkZSBMZWhtYW4gQnJvdGhlcnMsIGF2YWl0IHZpciBwYXMgbW9pbnMgZGUgMzAwIG1pbGxpb25zIGQnZXVyb3MgIGwndGFibGlzc2VtZW50IHF1ZSB0b3V0IGxlIG1vbmRlIHNhdmFpdCBkaiBjb25kYW1uLi4gClBsdXMgcXVlIGQnaGFiaXR1ZGUgZGVzIGxlY3RldXJzIGRlIG5vdHJlIGJsb2cgc2Ugc29udCBleHByaW1zICBsYSBzdWl0ZSBkZSBsJ2FydGljbGUgc3VyIGxhIHByc2VuY2UgcG9saWNpcmUgb3Ugc29uIGFic2VuY2UgbW9tZW50YW5lLCBzZWxvbiBjZXJ0YWlucywgZGFucyBsZSBxdWFydGllciBkZSBsYSBHb3V0dGUgZCdPci4gTGUgYmxvZyBlc3Qgb3V2ZXJ0IGF1eCBjaGFuZ2VzLCBub3VzIHNvbW1lcyBoZXVyZXV4IHF1J2lsIHJlbXBsaXNzZSBjZXR0ZSBmb25jdGlvbiwgeSBjb21wcmlzIGF2ZWMgZGVzIHBlcnNvbm5lcyBxdWUgbm91cyBuZSBjb25uYWlzc29ucyBwYXMuIApIZXIgZmF0aGVyIHRyZWF0ZWQgaGVyIGxpa2Ugc2hpdCwgYW5kIHRoZXJlIHdhcyBubyB3YXkgaW4gaGVsbCBvdGhlcnMgZGlkbiBkbyB0aGUgc2FtZSB3aGVuIHRoZXkgZm91bmQgb3V0IHNoZSB3YXMgbW9sZXN0ZWQuIFNoZSB3b3VsZCBoYXZlIHdhbnRlZCB0byBmZWVsIGxvdmVkLi4gCkZvciBzdGFydGVycywgdHJ5IHRvIGF2b2lkIGNoZXdpbmcgYW55dGhpbmcgaW4gdGhlIGFyZWEgb2YgeW91ciBtb3V0aCB3aGVyZSB5b3UgaGF2ZSBwYWluIG9yIHRvb3RoIGRhbWFnZS4gQW5kIHdoaWxlIHNvbWUgcGVvcGxlIG1heSBmaW5kIHRoYXQgaWNlIGhlbHBzIG51bWIgdGhlIHBhaW4gb2YgYSB0b290aGFjaGUsIGV4cGVydHMgcmVjb21tZW5kIHlvdSBhdm9pZCB2ZXJ5IGNvbGQgb3IgaG90IGZvb2RzIGFuZCBiZXZlcmFnZXMuIElmIHlvdXIgdGVldGggYXJlIHNlbnNpdGl2ZSwgZXh0cmVtZSB0ZW1wZXJhdHVyZXMgY2FuIGluY3JlYXNlIHlvdXIgcGFpbi4gCkJhc2ljYWxseSBldmVyeSBwZXJzb24gaGFzIGEgcGxhY2UgZGVwZW5kaW5nIG9uIGFnZSwgc3RhdHVzLCBhbmQgZ2VuZGVyLkFzIGEgZm9yZWlnbmVyIGNvbWluZyBpbnRvIEtvcmVhIHlvdSBkb24gcmVhbGx5IGZpdCBpbnRvIGFueSBvZiB0aG9zZSByb2xlcyBleGNlcHQgImZvcmVpZ25lciIuIApUaGlzIGRpZG4gaGFwcGVuIHRvIHlvdSwgYnV0IGl0IGhhcHBlbmVkIHRvIHlvdXIgZnJpZW5kIHNpc3Rlci4gQWN0dWFsbHksIHRoaXMgaXMgYSBydWxlLCBidXQgaXQgaGFwcGVucyBvZnRlbiBlbm91Z2ggdGhhdCBpdCBiZWFycyByZXBlYXRpbmcuIApJdCBhIGxvbmcgc2hvdCBpbiBtb3N0IGNhc2VzIHByb2JhYmx5LCBidXQgdGhlcmUgemVybyByaXNrLiAKRVNQRUNJQUxMWSwgaWYgeW91ciB3aW5nYmFja3MgYXJlIGFza2VkIHRvIGpvaW4gdGhlIGF0dGFjay4uIApZb3UgYXJlIHNvbWV3aGF0IGNvbmZ1c2VkIGJ5IHR5cGUgSSBhbmQgdHlwZSBJSSBlcnJvciBjb250cm9sLiBUeXBlIEkgZXJyb3IgKGZhbHNlIHBvc2l0aXZlcykgYXJlIGNvbnRyb2xsZWQgaW4gZnJlcXVlbnRpc3Qgc3RhdGlzdGljcyBieSBzZXR0aW5nIGEgcCB2YWx1ZSB0aHJlc2hvbGQuIApNdXNjbGVzIGhhdmUgc3RyZXRjaCByZWNlcHRvcnMgdGhhdCBsaXZlIGluIHRoZSB0ZW5kb25zLiBXaGVuIGEgbXVzY2xlIGlzIHN0cmV0Y2hlZCB0b28gZmFyIHRvbyBmYXN0LCB0aG9zZSByZWNlcHRvcnMgY2F1c2UgdGhlIG11c2NsZSB0byBjb250cmFjdCBpbiBvcmRlciB0byBwcm90ZWN0IHRoZSBtdXNjbGUgZnJvbSB0ZWFyaW5nLiBUaGlzIGlzIGhvdyBwZW9wbGUgZW5kIHVwIHdpdGggZ3JvaW4gcHVsbHMsIGV0Yy4gCigxIENvcmludGhpYW5zIDc6MyA1IE5MVCkuIApJcyB0aGF0IHlvdXIgcG9pbnQgZm9yIHJhaXNpbmc/IEJlY2F1c2UgeW91IGhhdmUgcm91Z2hseSBhcm91bmQgMTkuNSUgdG8gaGl0IHlvdXIgZmx1c2ggb24gdGhlIHJpdmVyLCBidXQgdGhhdCdzIG5vdCBleGFjdGx5IHRoZSBraW5kIG9mIG9kZHMgSSB3b3VsZCBwdXQgaXQgYWxsIGluIHdpdGguIApKYXNtaW4zNTYgdQoiVGhlIHdvcmxkIGlzIG1vdmluZyBhdCBhIHBhY2UgdGhlIGxpa2VzIHdlIGhhdmUgbmV2ZXIgc2VlbiBiZWZvcmUgYW5kIGFzIHN1Y2gsIHN0cmVzcyBsZXZlbHMgaGF2ZSBnb25lIHdheSB1cC4gSGVudGFpIGlzIGEgd2F5IGZvciBwZW9wbGUgdG8gZGlzY29ubmVjdCBmcm9tIHJlYWxpdHkgYW5kIGRlbHZlIGludG8gdGhlIHdvcmxkIG9mIHRvdGFsIGZhbnRhc3ksIGZvcmdldHRpbmcgYWJvdXQgYWxsIHRoZSBzdHJlc3NlcyB0aGF0IHJlYWwgbGlmZSBicmluZ3MsIERyLiBMYXVyaWUgQmV0aXRvLCBzZXggdGhlcmFwaXN0IGFuZCBkaXJlY3RvciBvZiB0aGUgUG9ybmh1YiBTZXh1YWwgV2VsbG5lc3MgQ2VudGVyLCBzYWlkIGluIHRoZSByZXBvcnQuLiAKSSB0aGluayB0aGUgbHVjayBmYWN0b3IgaXMgYSBsaXR0bGUgYml0IGhpZ2hlciBpbiBwb2tlci4gClRoZSBteXRoIHRoYXQgYSBsb3cgZXhjaGFuZ2UgcmF0ZSBlbmNvdXJhZ2VzIGVjb25vbWljIGdyb3d0aCB0b29rIGhvbGQgaW4gQ2FuYWRhIGluIHRoZSAxOTkwcy4gQ2FuYWRhIG1hbnVmYWN0dXJpbmcgZ3Jvd3RoIHdhcyBsZWQgYnkgbG93IHdhZ2UgaW5kdXN0cmllcyBzdWNoIGFzIGNsb3RoaW5nLCB0ZXh0aWxlcyBhbmQgZnVybml0dXJlLCB3aGVyZSBlbXBsb3ltZW50IHJvc2UgMjkuNyUgZnJvbSAxOTkyIHRvIDIwMDAuIFRoZSBmbGltc3kgYmFzaXMgZm9yIHRoaXMgYWxsb2NhdGlvbiBvZiByZXNvdXJjZXMgd2FzIGZ1bGx5IHJldmVhbGVkLCB3aGVuIGEgcmlzaW5nIGRvbGxhciBhbmQgQ2hpbmEgZXhwb3J0cyBkZXZhc3RhdGVkIHRoZXNlIGluZHVzdHJpZXMuIEluIHJldHJvc3BlY3QsIG9uZSBjYW4gb25seSBsb29rIGJhY2sgd2l0aCB3b25kZXIgYW5kIGFzdG9uaXNobWVudCB0aGF0Q2FuYWRhIGFjdGVkIGFzIGlmIG91ciBmdXR1cmUgbGF5IGluIGludmVzdGluZyBpbiBsb3cgd2FnZSBpbmR1c3RyaWVzIHByZWRpY2F0ZWQgb24gYSBjaHJvbmljYWxseSBsb3cgZXhjaGFuZ2UgcmF0ZS4gZG9sbGFycy4gSXQgd2FzIGEgYnVzaW5lc3MgbW9kZWwgZG9vbWVkIHRvIGZhaWwgd2hlbiB0aGUgZXhjaGFuZ2UgcmF0ZSBzdGFydGVkIHRvIGFwcHJlY2lhdGUuClBhcmxhcmUgZGkgcXVpbmRpIGVxdWl2YWxlIGEgcGFybGFyZSBkaSBzb2NpZXQgbW9kZXJuYS4gRXNzbyAsaW5mYXR0aSwgaW52ZXN0ZSBvcm1haSBxdWFzaSB0dXR0aSBpIHNldHRvcmkgZGVsbGEgc3Rlc3NhLCBtYSAgcHJvcHJpbyBzb3R0byBhbCBiZW5lc3NlcmUsIGRpZXRybyBsYSBzdWEgc3BsZW5kaWRhIGZhY2NpYXRhLCBjaGUgc2kgbmFzY29uZGUgaWwgbWFyY2lvLiBFIHByb3ByaW8gcXVlc3RvIG5vc3RybyBhdmVyIG51bGxhIGRhIGRlc2lkZXJhcmUgY2hlIGNpIGhhIHJpZG90dGkgYWQgYXV0b21pLCBjaGUgY2kgaGEgc3Z1b3RhdG8gZGkgdHV0dGkgZ2xpIGlkZWFsaSwgY2hlLCBhdmVuZG9jaSBvcm1haSBkYXRvIHR1dHRvIGwgY2kgY29zdHJpbmdlIGEgZGVzaWRlcmFyZSBjb3NlIHV0b3Bpc3RpY2hlLCBzdXBlcmZsdWUsIHNlY29uZG8gbGEgbm90YSBmb3JtdWxhIGRlaSBvY2N1bHRpIGNoZSBpbm5hbHphbm8gbGEgc3VnZ2VzdGlvbmUgZGkgbWFzc2EgYSBsaXZlbGxvIGNvbnN1bWlzdGljbywgYSBudW92byBEaW8uCk9uIHRob3NlIHlvdSBhcmUgbW9yZSBwcm9uZSB0byBmYWxsIG9uIHlvdXIgaGVhZCBhbmQgdHlwaWNhbGx5IGN5Y2xlIGZhc3Rlci4gCkkgYWdyZWUgd2l0aCB0aGlzLiBJIHVzZWQgdG8gZm9sbG93IGhpbSBiZWZvcmUgUm9zYWxpdGEgYW5kIHVuZm9sbG93ZWQgYmVjYXVzZSBJIGRvbiBsaWtlIGNhdCBhY2NvdW50cyB0aGF0IHNlZW0gdG8ganVzdCBiZSB0cnlpbmcgdG8gZ2V0IGZhbW91cywgYW5kIGl0IHdhcyBwcmV0dHkgb2J2aW91cyB0aGF0IHdoYXQgaGUgd2FzIGdvaW5nIGZvci4gU28gSSB0aGluayB0aGlzIGlzIHNvbWV0aGluZyBzaGUgY291bGQgaGF2ZSBiZWVuIGFibGUgdG8gc3VzcyBvdXQuLiAKT25lIG9mIHRoZSBwb3B1bGFyIGNhcmQgY292ZXJzIGFyZSBCdWxsZXRzIGFuZCBDb3dib3lzIFNwaW5uZXIgY2FyZCBjb3ZlcnMuIFRoZXNlIGFyZSBmaW5lIGxvb2tpbmcgcHJvdGVjdG9ycyBtYWRlIHVwIG9mIHNvbGlkIGJyYXNzLiBUaGVzZSBjYXJkcyBjb21lIHVwIHdpdGggcGxlYXNpbmcgYW5kIGNvbG9yZnVsIGFydHdvcmtzLiAKSSBleHBlcmllbmNlZCB1cmdlbmN5IGluIG15IHNwaXJpdCB0byBzaGFyZSB0aGUgZ29vZCBuZXdzIG9mIHRoZSBnb3NwZWwgb2YgdGhlIExvcmQgSmVzdXMgQ2hyaXN0IHdpdGggZWFjaCBhbmQgZXZlcnkgcGVyc29uIHdobyBJIGdldCBpbiB0b3VjaCBvciBjb250YWN0IHdpdGgsIGJlY2F1c2UgSGlzIGNvbWluZyBpcyBvbiBoYW5kLiAKVGhlcmUncyBvbmUgb3RoZXIgdGhpbmcgYWJvdXQgc3RhbmRpbmcgZm9yIGFuIGV4dGVuZGVkIHBlcmlvZCBvZiB0aW1lOyBJIHRlbmRlZCB0byBnZXQgaHVuZ3JpZXIgdGhhbiBJIGRvIHdoZW4gSSdtIHNsdW1wZWQgb24gYSBjaGFpci4gVGhhdCBmZWx0IGxpa2UgY29uZmlybWF0aW9uIG9mIHRoZSBzdGFuZCB1cCBhZHZvY2F0ZXMnIGJlbGllZiB0aGF0IHlvdSBidXJuIG1vcmUgY2Fsb3JpZXMgd2hlbiB5b3Ugc3RhbmQgdGhhbiB3aGVuIHlvdSBzaXQuIEZvciB0aGlzIHJlYXNvbiBhbG9uZSwgSSdtIGhvcGluZyB0aGF0IHNpdC9zdGFuZCBkZXNrcyBvbmUgZGF5IGhpdCB0aGUgbWFpbnN0cmVhbSwgd2l0aCBtYXNzIG1hcmtldCBmdXJuaXR1cmUgY29tcGFuaWVzIG1ha2luZyBtYW55IGxvdyBwcmljZWQgdmVyc2lvbnMuIApJIGRvIGFncmVlIHRoYXQgT1AgaGFzIGV2ZXJ5IHJpZ2h0IHRvIGJlIHVwc2V0IGFzIGhlIGRpZCBpbnRlcnJ1cHQgaGVyIGFmdGVyIHNoZSBjbGVhcmx5IHRvbGQgaGltIG5vdCB0by4gVGhhdCBiZWluZyBzYWlkLCBpdCB3YXMgYSBkdW1iIG1pc3Rha2UgYnV0IEkgZG91YnQgaGUgd2FzIGludGVudGlvbmFsbHkgdHJ5aW5nIHRvIHNhYm90YWdlIGhlciB0ZXN0LiBTdXJlIE9QIGNhbiBiZSAibWFkIiBhdCBoaW0gYXQgdGhlIHRpbWUgYnV0IHNoZSBzaG91bGQgcmVhbGl6ZSB0aGF0IG5vYm9keSBpcyBwZXJmZWN0IGFuZCBldmVyeW9uZSBtYWtlcyBtaXN0YWtlcy4gCk5lYXJseSBhIHdlZWsgdW50aWwgdGhlIGJpZyBkYXksIEp1bm8gQXdhcmRzIG9yZ2FuaXplcnMgYXJlIHJlbGVhc2luZyB0aGUgZmluYWwgcnVuIGRvd24gb2YgcGVyZm9ybWVycyBhbmQgcHJlc2VudGVycyB0YWtpbmcgdGhlIHN0YWdlIG9uIHRoZSBiaWdnZXN0IG5pZ2h0IGluIENhbmFkaWFuIG11c2ljLgpSZWNlbnQgZGF0YSBzdWdnZXN0IHRoYXQgdGhlIHNsb3dkb3duIGluIHRoZSBnbG9iYWwgZWNvbm9teSBoYXMgYmVlbiBtb3JlIHByb25vdW5jZWQgYW5kIHdpZGVzcHJlYWQgdGhhbiB0aGUgQmFuayBoYWQgZm9yZWNhc3QgaW4gaXRzIEphbnVhcnkgTW9uZXRhcnkgUG9saWN5IFJlcG9ydChNUFIpLiBXaGlsZSB0aGUgc291cmNlcyBvZiBtb2RlcmF0aW9uIGFwcGVhciB0byBiZSBtdWx0aXBsZSwgdHJhZGUgdGVuc2lvbnMgYW5kIHVuY2VydGFpbnR5IGFyZSB3ZWlnaGluZyBoZWF2aWx5IG9uIGNvbmZpZGVuY2UgYW5kIGVjb25vbWljIGFjdGl2aXR5LiBJdCBpcyBkaWZmaWN1bHQgdG8gZGlzZW50YW5nbGUgdGhlc2UgY29uZmlkZW5jZSBlZmZlY3RzIGZyb20gb3RoZXIgYWR2ZXJzZSBmYWN0b3JzLCBidXQgaXQgaXMgY2xlYXIgdGhhdCBnbG9iYWwgZWNvbm9taWMgcHJvc3BlY3RzIHdvdWxkIGJlIGJ1b3llZCBieSB0aGUgcmVzb2x1dGlvbiBvZiB0cmFkZSBjb25mbGljdHMuCkEgaGFyZCBvbmUuIApBY2NvcmRpbmcgdG8gdGhpcywga29yZWFuIGxhc3QgbmFtZSBpcyBtb3JlIHZhcmlvdXMgdGhhbiB5b3UgdGhpbmssIDE1IG5hbWVzIG1ha2UgdXAgMi8zIG9mIHBvcHVsYXRpb246IGtpbSwgeWksIHBhcmssIGNoZSwgamVvbmcsIGthbmcsIGpvLCB5b29uLCBqYW5nLCBpbSwgaGFuLCBvaCwgc2VvLCBzaGluLCBrd29uLiBBbmQgZmFtaWx5IG5hbWVzIGFsc28gaGFzIHJlZ2lvbmFsIGJhc2UuIEZvciBpbnN0YW5jZSwga3l1bmdqb28ga2ltIG9yIGdpbWhhZSBraW0uIApTZWVtZWQgY29vbCBhbmQgaGUgYXNrZWQgaWYgSSB3YXMgaW50ZXJlc3RlZC4gIlN1cmUsIEkgaG9wZSB5b3Uga25vdyB0aGUgcnVsZXMgd2VsbCBlbm91Z2ggdG8gZXhwbGFpbiB0aGVtIHRvIG1lIiwgSSByZXBsaWVkLiBIZSBjaHVja2VkIGFuZCBzYWlkICJObyBwcm9ibGVtIi4gCk9ubHkgY29uY2VybiBpcyBob3cgZGlmZmljdWx0IGl0IGlzIHRvIHN3aXRjaCBjYXJyaWVycyB3aXRoaW4gdGhlIHNhbWUgdHJhdmVsIGRheSBpbiBKYXBhbi4gCkV2ZW4gaGF2aW5nIGNvcnJlY3RlZCBjZW50cmlmdWdhbCB0byBjZW50cmlwZXRhbCwgd2hhdCB5b3Ugc2FpZCBkaWRuIG1ha2Ugc2Vuc2UuIENlbnRyaWZ1Z2FsIGZvcmNlIHN0aWxsIGRlc2NyaWJlcyBob3cgdGhpbmdzIHdpbGwgd2FudCB0byBhcHBlYXIgdG8gZmx5IGF3YXkgZnJvbSBhIHNwaW5uaW5nIG9iamVjdCB1bnRpbCB0aGV5IG5vIGxvbmdlciBjYW4sIGF0IHdoaWNoIHBvaW50IGNlbnRyaXBldGFsIGZvcmNlIGRlc2NyaWJlcyBob3cgdGhleSBrZXB0IGZyb20gZG9pbmcgc28uIApCb3RhbmljYWwgQXJ0IGluIFdhdGVyY29sb3IgVGFrZSBhIGZ1biwgZWFzeSBhcHByb2FjaCB0byB0aGUgZGV0YWlsZWQgYW5kIHJlYWxpc3RpYyBpbGx1c3RyYXRpb25zIG9mIGJvdGFuaWNhbCBhcnQuIApBbHNvIHdvbmRlcmVkIGlmIGFueW9uZSBrbm93cyB0aGUgd2hlcmVhYm91dHMgb2YgbXkgb3JhbmdlIERldXRlciBoeWRyYXRpb24gcGFjayAsIGkgbGVmdCBpdCBvbiB0aGUgdGFibGUgaW4gdGhlIHJlZnJlc2htZW50IHRlbnQgPwpDb21wb25lbnRzIG9mIG9waXVtIGhhdmUgcHJvdmVkIHRvIGhhdmUgbWVkaWNhbCBiZW5lZml0LCBidXQgdGhlIEZEQSBoYXMgbm90IGFwcHJvdmVkIHRoZSBzbW9raW5nIG9mIG9waXVtIG9yIGhlcm9pbi4gClBva2VyIGlzIGEgZGlmZmljdWx0IGdhbWUgdG8gbWFzdGVyLiBUYWtlIGhlZWQgb2YgdGhlc2UgdGlwcyBhbmQgY2hlY2sgb3V0IHRoZSBsaW5rcyBiZWxvdyB0byBsZWFybiB0aGUgYmFzaWNzLiAKQ3VybCB5b3VyIGxlZyB1cCBhbmQgZG93biAoYmVuZGluZyB5b3VyIGtuZWUpIHVudGlsIHlvdSBmZWVsIGF0IGxlYXN0IHNvbWUgcmVsaWVmLiAKVXNlZCB0byB3b3JrIGF0IFdlbGxzIEZhcmdvIHVzaW5nIGlkZW50aXR5IHRoZWZ0LiAKSSB0aGluayB0aGUgbWFqb3IgZGlmZmVyZW5jZSBiZXR3ZWVuIGRheWNhcmUgYW5kIHNjaG9vbCBpcyB0aGUgaG91cnMgYXMgd2VsbCBhcyB0aGUgZWR1Y2F0aW9uYWwgZXhwZXJpZW5jZS4gCkFzaW4gYWxsIHdhbGtzIG9mIGxpZmUsIGNvbW1vbiBzZW5zZSBuZWVkcyB0byBjb21lIGludG8gcGxheSB3aGVuIHlvdSBhcmUgdHJhdmVsbGluZy4gRG9uIHdhbGsgYXJvdW5kIHRoZSBzdHJlZXRzIGF0IG5pZ2h0IChlc3BlY2lhbGx5IG5vdCBzb2xvIGZlbWFsZSB0cmF2ZWxsZXJzKTsgZG9uIGZsYXNoIHlvdXIgY2FtZXJhIG9yIGlQaG9uZSBhcm91bmQgaW4gcGxhY2VzIHN1Y2ggYXMgSW5kaWEsIEJhbmdsYWRlc2gsIGFuZCBzb21lIHBhcnRzIG9mIFRoYWlsYW5kOyBpbiBjb3VudHJpZXMgd2hlcmUgdGF4aSBkcml2ZXJzIG1heSBub3QgdW5kZXJzdGFuZCBhbnkgRW5nbGlzaCwgc3VjaCBhcyBDaGluYSBhbmQgVmlldG5hbSwgaGF2ZSB5b3VyIGhvc3RlbCB3cml0ZSBkb3duIHlvdXIgZGVzdGluYXRpb24gb24gcGFwZXIgc28gdGhlIGRyaXZlciBjYW4gcmVhZCBpdDsgYW5kIHRha2UgYSBwaG9uZSB3aXRoIHlvdSBhdCBhbGwgdGltZXMsIGV2ZW4gaWYgaXQganVzdCBhIGNoZWFwIG9uZSEuIApOZWVkIG1vcmUgbmljZSBndXkgaW52ZXN0b3JzIGxpa2UgQnJldHQgaW4gdGhlIGJ1c2luZXNzIHdvcmxkLiBIZSBwcm92ZXMgeW91IGRvbiBoYXZlIHRvIGJlIGFuIGEgdG8gYmUgZ29vZCBhdCBidXNpbmVzcy4gCiJBIG1hbiBoYXMgYW4gaW5ib3JuIG5lZWQgdG8gZmVlbCBuZWVkZWQgYXMgYSBwcm92aWRlciwgdG8gZmVlbCB0aGF0IGhpcyB3aWZlIGRlcGVuZHMgb24gaGltIGZvciBmaW5hbmNpYWwgc3VwcG9ydCBhbmQgY2FuIGdldCBieSB3aXRob3V0IGhpbS4gCkl0IGp1c3Qgd291bGRuIGJlIGEgY29tcGFyYWJsZSBzb2x1dGlvbiBpbiBlaXRoZXIgY2FzZS4gCllvdSBzaG91bGQgYWxzbyBjaGVjayBmb3IgYW55IHN0cmF5IHZvbHRhZ2UgYmxlZWRpbmcgb250byB0aGUgbGluZSwgYm90aCBBQyBhbmQgREMgIGEgZmV3IHZvbHRzIGlzIGZpbmUuLiAKU28gdHdvIHllYXJzIGFnbyBJIHdhcyBmbHlpbmcgb3V0IG9mIFNGTyB0byBnbyBhbmQgc2VlIG15IG1vbSBpbiBFbmdsYW5kIGZvciBhIGNvdXBsZSB3ZWVrcy4gSXQncyBhbiBhbm51YWwgdHJpcCwgYnV0IG5vcm1hbGx5IEkgZ2V0IGEgdHdvIGhvdXIgc2h1dHRsZSBidXMgZnJvbSBob21lIGluc3RlYWQgb2Ygc3RheWluZyBieSB0aGUgYWlycG9ydC4gClB1YmxpYyBSZWxhdGlvbnMgQWxtb3N0IGFsbCBtYWpvciBnb3Zlcm5tZW50IGFnZW5jaWVzIGhhdmUgdGhlaXIgb3duIHB1YmxpYyByZWxhdGlvbnMgc3RhZmYsIGFuZCBpbiBtYW55IGNhc2VzIGl0IGlzIGEgc3RhbmQgYWxvbmUgZGVwYXJ0bWVudCB3aXRoIGEgcHVibGljIHJlbGF0aW9ucyBvciBtZWRpYSBkaXJlY3RvciBhbmQgc2V2ZXJhbCBzdXBwb3J0IHN0YWZmLiBHb3Zlcm5tZW50IGFnZW5jeSBQUiBkZXBhcnRtZW50cyBhcmUgcmVzcG9uc2libGUgZm9yIHByb2R1Y2luZyBuZXdzIHJlbGVhc2VzLCBob2xkaW5nIHByZXNzIGNvbmZlcmVuY2VzLCBhbmQgZ2VuZXJhbGx5IHByb21vdGluZyBhY3Rpdml0aWVzIG9mIHRoZSBhZ2VuY3ksIHN1Y2ggYXMgdG91cmlzbSBvciBlbmNvdXJhZ2luZyBuZXcgYnVzaW5lc3NlcyB0byBtb3ZlIGludG8gdGhlIGFyZWEuCjEgMiB5ZWFyczogJDg3LDAwNyAkOTIsNDg3IDMgNCB5ZWFyczogJDg4LDUxNCAkOTMsODU3IDUgNiB5ZWFyczogJDkxLDgwMiAkOTYsOTQwIDcgOSB5ZWFyczogJDkzLDQ0NiAkOTgsNzY2IDEwIDE0IHllYXJzOiAkOTQsMTMxICQ5OSw0NjggMTUgMTkgeWVhcnM6ICQ5NCwxMzEgJDk5LDQ2OCAyMCBvciBtb3JlIHllYXJzOiAkOTQsMTMxICQ5OSw0NjggSm9iIEdyb3d0aCBUcmVuZFRoZSBkZW1hbmQgZm9yIGN5YmVyc2VjdXJpdHkgcHJvZmVzc2lvbmFscyBpcyBoaWdoIGFuZCB3aWxsIGNvbnRpbnVlIHRvIGluY3JlYXNlLiAKRGFtbiwgdGhpcyBpcyBleGFjdGx5IGhvdyBpdCBmZWx0ISBUaGUgY29uc3RhbnQgYW5kIGFubm95aW5nIHJhbWJsaW5nIGZyb20gdGhlIGJvc3NlcyBzdXJlIGxvb2tzIGxpa2UgaXQgd2FzIGNhdXNlZCBieSB0aGlzLiBJIGxpa2VkIHRoZSBvdmVyYWxsIHN0b3J5IHN0cnVjdHVyZSwgZ29pbmcgZnJvbSB0aGUgb2xkIFRyaXN0cmFtIGNhdGhlZHJhbCwgdG8gTW91bnQgQXJyZWF0IGFuZCB0aGVuIHRoZSBIaWdoIEhlYXZlbnMuIEJ1dCB5ZWFoLCBpdCB3YXMgcm91Z2ggYW5kIG1hbiwga2lsbGluZyBDYWluIGluIGEgaW4gZ2FtZSBjdXRzY2VuZSB3aXRoIGEgYnV0dGVyZmx5IGZhcnQgZnJvbSBNYWdoZGEgZmVsdCBkaXNhcHBvaW50aW5nISBoYWhhaApXaGF0IEkga2VlcCBmaW5kaW5nIGludGVyZXN0aW5nIGlzIHRoZSBsZXNiaWFuLCBnYXksIGFuZCBiaSBzaG9ydCBwZW9wbGUgY2FuIGJsYW1lIHRoZSBvcHBvc2l0ZSBnZW5kZXIgYmVjYXVzZSB3ZSBkYXRlIG91ciBvd24gZ2VuZGVyLiAKU28gbHVja2lseSBJIGNvdWxkIGtlZXAgdXAgYW5kIGdyYWIgaGltIGJ1dCBGTUwuIEJlZW4gaW4gYSBzaW1pbGFyIHNpdHVhdGlvbiBiZWZvcmUgYW5kIEknbSBzbyBnbGFkIHlvdSBjYWxsZWQgYW5pbWFsIGNvbnRyb2wuIEkgaG9wZSB0aGUgb3duZXIgZ2V0cyBzZXZlcmVseSBmaW5lZCwgZXNwZWNpYWxseSBjb25zaWRlcmluZyB0aGF0IG9uZSBvZiB0aGUgZG9ncyBiaXQgeW91LiAKSSBnb3QgYSBuZXcgYXBwbGljYW50IHRvZGF5IHRoYXQgY2xhaW1zIHNoZSBpcyBhIHJlY2VudGx5IGRpdm9yY2VkIG1vbSB3aXRoIHR3byBraWRzLiBTaGUgaXMgYSBzY2hvb2wgdGVhY2hlciBidXQgc2FsYXJ5IGZyb20gdGVhY2hpbmcgYWxvbmUgaXMgbm90IGVub3VnaCB0byBwYXNzIGluY29tZSBjcml0ZXJpYSwgYnV0IElmIEkgYWRkIHRoZSBhbW91bnQgb2YgY2hpbGQgc3VwcG9ydCBzaGUgZ2V0cyBmcm9tIGhlciBleCBodXNiYW5kLCB0aGVuIHNoZSBxdWFsaWZpZXMsIHRoZSBxdWVzdGlvbiBpcyBob3cgY2FuIEkgdmVyaWZ5IHRoZSBjaGlsZCBzdXBwb3J0IGluY29tZT8uIApPciBEQy4gCiJBZ2FpbiwgSSBkb24ndCBoYXZlIHRoZSBuYW1lLCIgU2NoZWZ0ZXIgc2FpZCBvbiB0aGUgTXkgVGFrZSBwb2RjYXN0LCB3aGljaCB3YXMgcmVsZWFzZWQgVHVlc2RheS4gCkl0IGFsbCBvbiB0aGUgaWNlLCBLZWthbGFpbmVuIHNhaWQgYXQgTW9uZGF5IEdNIG1lZXRpbmdzIHdoZW4gYXNrZWQgYWJvdXQgdGhlIEJsdWUgSmFja2V0cyBhdHRpdHVkZSBhdCB0aGUgZGVhZGxpbmUuIAooUHJpdmFjeSBQb2xpY3kpTWFya2V0aW5nR29vZ2xlIEFkU2Vuc2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApSZXR1cm5pbmcgdG8gbXkgZnJpZW5kcyBhbmQgdGhlIHJvdWxldHRlIHRhYmxlLCBJIGhhZCBhbm90aGVyIGJlZXIgYW5kIGNvbnRlbXBsYXRlZCB0aGUgcmVzdCBvZiB0aGUgbmlnaHQuIEkgaGFkIHN1Y2ggYSBydXNoIGF0IHRoZSBwb2tlciB0YWJsZSwgSSBqdXN0IHdhbnRlZCB0byBrZWVwIHBsYXlpbmcuIApKb2huIFNhcm5vIGNvaW5lZCB0aGUgdGVybSBUTVMgYW5kIHdyb3RlIHRoZSBjb250cm92ZXJzaWFsIGJvb2sgIkhlYWxpbmcgQmFjayBQYWluIiBzb21lIG1hbnkgeWVhcnMgYWdvLiBIZSBzdWdnZXN0cyBhbiBlbW90aW9uYWwgYW5zd2VyIHRvIHBlb3BsZSBiYWNrIHBhaW4sIHdoaWNoIEkgd2hvbGVoZWFydGVkbHkgYWdyZWUgd2l0aC4gClRoaXMgZGlzZWFzZSBpcyB0aGUgd29yc3QuIEFuZCB3ZSBhbGwgaGFkIG1vbWVudHMgdGhhdCB3ZSBuZXZlciBnZXQgYmFjayBmcm9tIGl0LiAKTW9zdCBsaWtlbHksIGl0IGlzIGEgY29tYmluYXRpb24gb2YgYm90aCB0aGVzZSB0aGluZ3MsIHRob3VnaCBpbiB3aGF0IG1peHR1cmUgaXQgaXMgZGlmZmljdWx0IHRvIGRpdmluZS4uIApJIHJlZ3JldCBub3QgZm9yY2luZyBteXNlbGYgdG8ganVzdCBzdWNrIGl0IHVwLi4gCkZvbGRpbmcgdGhhdCBoYW5kIGV2ZXJ5IHRpbWUgZG9lc24gY29uY2VkZSB0aGF0IG11Y2ggZXZlbiB0byBhIGJhbGFuY2VkIG9wcG9uZW50LiBWcyBhIG5vcm1hbCB1bmRlcmJsdWZmaW5nIG9wcG9uZW50IGZvbGRpbmcgaXQgcHJvYmFibHkgY29ycmVjdC4gCkFueGlldHkgUGFuaWMgQXR0YWNrcyBSZXNvbHZlIG9uIGEgR2x1dGVuIEZyZWUgRGlldApJIGRvbiB3aXNoIHdoYXQgd2Ugd2VudCB0aHJvdWdoIGluIHRob3NlIHllYXJzIG9uIG91ciB3b3JzdCBlbmVteSwgYnV0IEkgZG9uIHJlZ3JldCBpdC4gRXZlcnl0aGluZyB3YXMgYSBsZWFybmluZyBleHBlcmllbmNlLiBNYW55IHlvdW5nIGVudHJlcHJlbmV1cnMsIGZpbmFuY2luZyBpbiB0aG9zZSBlYXJseSB5ZWFycyB3YXMgYW4gdXBoaWxsIGJhdHRsZSB1bnRpbCB0aGV5IGdhaW5lZCB0aGVpciBmb290aW5nLCBoZSBhZGRzLiAKWW91ciBoZWFkbGluZSBtdXN0IGJlIGNvbXByaXNlZCBvbmx5IG9mIHRoZSBleGFjdCBjb3BpZWQgYW5kIHBhc3RlZCBoZWFkbGluZSBvZiB0aGUgYXJ0aWNsZSAgIHNlZSBvdXIgcnVsZSBoZXJlLikgV2UgcmVjb21tZW5kIG5vdCB1c2luZyB0aGUgUmVkZGl0IGEgdGl0bGUgYXMgaXQgbWF5IG5vdCBnaXZlIHRoZSBleGFjdCB0aXRsZSBvZiB0aGUgYXJ0aWNsZS4gVGhhbmsgeW91IGZvciBwYXJ0aWNpcGF0aW5nIGluIC9yL1BvbGl0aWNzLiAKVGhlIHdheSBpdCBkb25lIG5vdyBpcyBhbiBhZHZhbnRhZ2UgZm9yIHRoZSBsZWFzdCBjb21wZXRpdGl2ZSB3ZWlnaHQgY2xhc3NlcyBzbyB5b3UgZW5kIHVwIHdpdGggbmF0aW9uYWxzIGhhdmluZyB3b3JzZSBhdGhsZXRlcyBqdXN0IHRvIGhhdmUgc29tZSBzZW5zZSBvZiBlcXVhbGl0eSBpbiB0aGUgbnVtYmVyIG9mIHBlb3BsZSBpbiBlYWNoIGNsYXNzLi4gCkkgcHVsbGVkIHN0cmluZ3MgdG8gZ2V0IHRoYXQgY29tcHV0ZXIgYW5hbHl6ZWQgYW5kIHRoZXkgY291bGQgbm90IGdldCBhbnl0aGluZyBmcm9tIGl0LiBJIGhhZCB0byBjbG9zZSB0aGUgY2FzZS4uIApGb3IgZXhhbXBsZSwgaWYgSSB3YXMgZ2l2ZW4gZm91ciBjYXJkcyBvZiB0aGUgZGlhbW9uZHMgc3VpdCwgSSdkIGRpc2NhcmQgbXkgbm9uZSBkaWFtb25kIGNhcmQgYW5kIGhvcGUgdG8gZ2V0IGEgRmx1c2ggKGZpdmUgb2YgdGhlIHNhbWUgc3VpdCkuIAogMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvSSBoYXZlIG9ubHkgbWV0IG9uZSBQYWtpc3RhbmkgaW4gbXkgbGlmZS4gSGUgZ290IHZlcnkgc3VycHJpc2VkIHdoZW4gSSB0b2xkIGhpbSB0aGF0IEkgZG9uIHN1cHBvcnQgRXJkb2dhbi4gCklsIG4gYSBwYXMgZGUgcGFuaXF1ZS4gCkkgbHVja3kgZW5vdWdoIHRvIGJlIGluIGEgcG9zaXRpb24gdG8gaGF2ZSBhIHdpZmUgdGhhdCBtYWtlcyBlbm91Z2ggdGhhdCBJIHByZXR0eSBzdXJlIEkgd2lsbCBiZSBkb2luZyBzbyB0aGlzIHllYXIuIEkgaG9uZXN0bHkgcmF0aGVyIGJlIGEgamFuaXRvciB0aGFuIHdoYXQgSSBhbSBkb2luZyB0b2RheS4gCkEgbGEgY2hhcmdlIGRlIGwndHVkaWFudCBlbiBkYnV0IGRlIHByZW1pcmUgYW5uZSwgaWwgbid5IGEgcXVlIGwnYWNoYXQgZCd1biBzZXVsIG1hbnVlbCBkJ3VuZSB0cmVudGFpbmUgZCdldXJvcyBxdWkgc2VydCBkZSBncmFtbWFpcmUgZXQgZGUgbGV4aXF1ZSBhdmVjIGRlIHRycyBub21icmV1eCBleGVyY2ljZXMuIApTbyB3ZSBkb24gd2FudCBDb21jYXN0LCBldCBhbCB0byB3cml0ZSB0aGUgbGF3cywgYnV0IHdlIGRvIG5lZWQgcGVvcGxlIHdobyB3b3JrIGluIHRoZSBpbmR1c3RyeSB0byBwcm92aWRlIGlucHV0LiBCdXQgYnkgdmlydHVlIG9mIHdvcmtpbmcgaW4gdGhlIGluZHVzdHJ5LCB5b3UgYXV0b21hdGljYWxseSBiaWFzZWQuIFdoYXQgZG8gd2UgZG8gdG8gY29udHJvbCBmb3IgdGhhdD8gSG93IGNhbiB3ZSB3cml0ZSBydWxlcyB0aGF0IGFyZSBib3RoIG1lYW5pbmdmdWwgYW5kIGVmZmVjdGl2ZT8uIAoiVGhlbiB3ZSBzZWUgd2hhdCB0aGUgcGVvcGxlIG9mIEFsYmVydGEgdGhpbmsgYWJvdXQgdGhhdCEiIHJvYXJlZCBOb3RsZXksIGFzIHNoZSByZWNlaXZlcyBvbmUgb2YgaGVyIDI1IHN0YW5kaW5nIG92YXRpb25zIGZyb20gYSBjcm93ZCBjbGVhcmx5IGNlbGVicmF0aW5nIHdoZXJlIHRoZXkgYXJlIG5vdy4KVGhpcyB3aW50ZXIgQ2FybWVsIE11cnBoeSBpbnZpdGVzIHlvdSB0byBhdHRlbmQgYmVnaW5uZXJzIGNsYXNzZXMgYW5kIGxlYXJuIHRoZSB0aHJpbGxpbmcgZ2FtZSBvZiBicmlkZ2UuIApCdWx3YXJrIG9mIEZhaXRoLiBBcyBhIGJvbnVzIGFjdGlvbiwgeW91IGNhdXNlIGEgc2hpbW1lcmluZyB0byBhcHBlYXIgYW5kIHN1cnJvdW5kIGEgY3JlYXR1cmUgb2YgeW91ciBjaG9pY2Ugd2l0aGluIHJhbmdlLCBncmFudGluZyBpdCBhICsyIGJvbnVzIHRvIEFDIGFuZCBhZHZhbnRhZ2Ugb24gRGV4dGVyaXR5IFNhdmluZyBUaHJvd3MuIFRoaXMgYmVuZWZpdCBsYXN0cyBmb3IgMSBtaW51dGUgb3IgdW50aWwgd2lsbGluZ2x5IGVuZGVkIGJ5IHlvdSBvciB0aGUgdGFyZ2V0LiBPbmNlIHlvdSB1c2UgdGhpcyBwcm9wZXJ0eSwgeW91IGNhbid0IHVzZSBpdCBhZ2FpbiB1bnRpbCB5b3UgZmluaXNoIGEgc2hvcnQgb3IgbG9uZyByZXN0LgpIZSBzdGFydHMgc3Bld2luZyBzaGl0IGZvciBhIHdoaWxlIHdpdGggbm8gY2hpcHMgdW50aWwgaGUgbWVudGlvbmVkIGhlIHdhc24gZ29pbmcgdG8gZ2V0IGhpcyBFSSBwYXltZW50IGZvciBhbm90aGVyIHdob2xlIHdlZWsuIApSZW1lbWJlciwgdGhlIG1vc3Qgc3RyZW5ndGggaW4gcG9rZXIgY29tZXMgZnJvbSBhY3RpbmcgbGFzdC4gCkl0IG5vdCByaWdnZWQuIFlvdSBqdXN0IG5vdCBnb2luZyB0byBiZSBhYmxlIHRvIHVzZSB0aGUgc2FtZSB0YWN0aWNzIGFuZCBzdHJhdGVnaWVzIHRvIGdldCBwZW9wbGUgdG8gZm9sZCBpbiBsb3cgc3Rha2UgZ2FtZXMuIApJIGRvbiBrbm93IGluIHdoaWNoIGNvdW50cnkgcGVvcGxlIHByZWZlciB0byB1c2Ugc29tZXRoaW5nIGxpa2UgNToxIG9kZHMgYnV0IGp1c3QgdXNlIHRoZSBzaW1wbGUgcnVsZSBvZiAyLiBJZiB5b3UgaGF2ZSA4IG91dHMgKGluIHRoZSBmbG9wKSB0aGVuIHlvdSBoYXZlIGFyb3VuZCAzMiUgY2hhbmNlIHRvIGltcHJvdmUgeW91ciBoYW5kIGFmdGVyIHRoZSBmbG9wLCB3aGljaCBtZWFucyB5b3UgaW4gcHJvZml0IElGIHZpbGxhaW4gb25seSBiZXQgaW4gdGhlIGZsb3AgYW5kIGNoZWNrIHR1cm4uIApMZXZlbCBBbmRhIHNhYXQgaW5pIGRpdHVuanVra2FuIGRpIGxheWFyIGJhZ2lhbiBhdGFzLiAKSXQgd2FzIHdlbGwga25vd24gaW4gb3VyIHRpbnkgc2Nob29sIHRoYXQgSm9obm55IGFuZCBoaXMgYnJvdGhlciBoYWQgYSByb3VnaCBob21lIGxpZmUuIApUb3RhbGx5LCB3aGl0ZSBoYXMgNTQgcG9pbnRzLiBCbGFjayBoYXMgOSBwb2ludHMgaW4gdGhlIGxlZnQgYm90dG9tLCA0IHBvaW50cyBpbiB0aGUgbGVmdCB0b3AsIDE1IHBvaW50cyBpbiB0aGUgdG9wLCAyMSBwb2ludHMgaW4gdGhlIHJpZ2h0LCBhbmQgMyBjYXB0dXJlcy4gCkFuZCBJIGhhdmUgbmV2ZXIgYmVlbiBvcHBvc2VkIHRvIHRoYXQuIFF1aXRlIHRoZSBjb250cmFyeSwgSSBoYXZlIGJlZW4gdmVyeSB2b2NpZmVyb3VzIHByb3BvbmVudCBvZiBrZWVwaW5nIGEgYmlnIGVub3VnaCBiYW5rcm9sbCB0byBiZSBhYmxlIHRvIHBsYXkgYW5kIHN1c3RhaW4gbG9zc2VzLiAKSWYgeW91IGZhaWwgdG8gZGVsZXRlIHRoZSBvZmZlbmRpbmcgbWF0ZXJpYWwgYnkgdGhlIGRhdGUgZ2l2ZW4sIHdlJ2xsIGhpZGUgdGhpcyB3b3JrIGFuZCBhbnkgb3RoZXIgdmlvbGF0aW5nIHdvcmtzIHNvIHRoZXkgYXJlIG9ubHkgdmlzaWJsZSB0byB5b3UuIElmIHRoZSB3b3JrcyBhcmUgbm90IGVkaXRlZCB3aXRoaW4gYSB3ZWVrIG9mIGJlaW5nIGhpZGRlbiwgYW4gQXJjaGl2ZSBhZG1pbmlzdHJhdG9yIHdpbGwgZGVsZXRlIHRoaXMgd29yayBhbmQgYW55IG90aGVyIHZpb2xhdGluZyB3b3Jrcy4uIApBIHJlcG9ydCByZWxlYXNlZCBieSBQb2xpdGljYWwgUmVzZWFyY2ggQXNzb2NpYXRlcyBzYXlzIHRoYXQgdGhlcmUgYXJlIGRpcmVjdCBjb25uZWN0aW9ucyBiZXR3ZWVuIHNlZWluZyBIb21vc2V4dWFscyBhcyBhIGZvcmVpZ24gZW5lbXkgYW5kIEFtZXJpY2FuIHJlbGlnaW91cyBncm91cHMgYW5kIHRoZSBVUyBnb3Zlcm5tZW50LCBlc3BlY2lhbGx5IHdpdGggaXRzIFBFUEZBUiBmdW5kcy4KSSBhZ3JlZSB3aXRoIG1vc3Qgb2YgeW91ciBjb25zIGJ1dCBJIGRvbiBzaHV0dGxlIGxhbmRpbmcgb24gaXQuIApNaWFtaSBQb2xpY2UgSG9ub3IgQ2hlZiBDcmVvbGUgRm9yIEdlbmVyb3VzIEFjdCBEdXJpbmcgR292ZXJubWVudCBTaHV0IERvd25BbW9uZyBhIHZpcnR1YWwgc2VhIG9mIE1pYW1pIHBvbGljZSBvZmZpY2VycyBhbmQgc2Nob29sIGNoaWxkcmVuLCBhIHNwZWNpYWwgcmVjb2duaXRpb24gYXdhcmQgd2FzIGdpdmVuIG91dCB0byBhIHdlbGwga25vd24gTWlhbWkgY2hlZi4KQnV0IG5vdyB3ZSBnb3QgRmFsbG91dCA3NiwgUmFnZSAyIGFuZCBGYXIgQ3J5IE5ldyBEYXduIHRoYXQgYWxsIGhhdmUgYSB2ZXJkYW50IGFuZCBicmlnaHQgdGFrZSBvbiB0aGUgcG9zdCBhcG9jYWx5cHNlIGFuZCBhIG11Y2ggbGVzcyBibGVhayBvdXRsb29rLiAKSGUgYWx3YXlzIHRhbGtlZCBhYm91dCBjb3JyZWxhdGlvbnMgeWV0IGNvcnJlbGF0aW9uIGRvZXMgbm90IG5lY2Vzc2FyaWx5IGltcGx5IGNhdXNhdGlvbi4gClByZXNzIHRlIGhvbmV5IGN1cCBzaXRpbmcgb24gdGhlIHRhYmxlLCBjaG9zZSB0aGUgMm5kIHBocmFzZSBvbiB0aGUgc2NyZWVuLiAKUmVhZCB0aGUgRWRpdG9yaWFsLiAKVW5saWtlIFNoYXVrYXQgQXppeiB3aG8gd2lsbCBwcm9iYWJseSBsYW5kIHVwIGluIE5ldyBZb3JrIHRvIHNldCB1cCBhIHByaXZhdGUgZXF1aXR5IGZ1bmQgb3Igd29yayBmb3IgdGhlIENhcmx5bGUgR3JvdXAgaWYgdGhpcyBkb2VzbiBnbyB3ZWxsLCBHZW5lcmFsIE11c2hhcnJhZiBoYXMgbm8gcmVhbCBtYXJrZXRhYmxlIHNraWxscyBpbiB0aGUgcmVhbCB3b3JsZC4gVGhlIHNwZWN0cmUgb2YgcmV0aXJlbWVudCBjb3VsZG4gYmUgdGVycmlibHkgZXhjaXRpbmcgZm9yIGEgbWFuIHdobyBoYXMgcnVsZWQgYSBjb3VudHJ5IG9mIDE2MCBtaWxsaW9uIGFzIGhpcyBwZXJzb25hbCBlc3RhdGUgZm9yIHRoZSBsYXN0IG5pbmUgeWVhcnMuLiAKUmFscGgsIHdobyBsaXZlZCBhYnJvYWQgZm9yIG1hbnkgeWVhcnMsIHNob3VsZCBiZSBlbnRpdGxlZCB0byBhYm91dCA2NSBwZXIgY2VudCBvZiB0aGUgbWF4aW11bSwgd2hpY2ggd29ya3Mgb3V0IHRvIGFib3V0ICQ5LDAwNSBhbm51YWxseSBiYXNlZCBvbiB3aGF0IHdpbGwgYmUgMjUgeWVhcnMgb2Ygd29yayBmb2xsb3dpbmcgaGlzIGFkdmFuY2VkIGRlZ3JlZXMuIApMJ2VuZmFudCBhIGxlIGNob2l4IGRlIHNlIGpvaW5kcmUgb3Ugbm9uICBsJ2FjdGl2aXQsIGNlIHF1aSBuZSBzZSBwcm9kdWl0IHBhcyBzb3V2ZW50ICBsJ2NvbGUuIENlbGEgbGVzIHJlc3BvbnNhYmlsaXNlIGV0IGxldXIgZG9ubmUgY29uZmlhbmNlIGVuIGV1eCBkYW5zIGQnYXV0cmVzIHNwaHJlcyBkZSBsZXVyIHZpZS4gCk9ubGluZSBzbG90cyBoYXZlIGEgcGVyZW5uaWFsIGFwcGVhbCBiZWNhdXNlIHRoZXkgdGljayBhbGwgdGhlIHBvc2l0aXZlIGNhc2lubyBnYW1lIGJveGVzIHdoaWxlIGF2b2lkaW5nIG1hbnkgb2YgdGhlIGRvd25zaWRlcy4gVGhlcmUgaXMgYSBodWdlIGFidW5kYW5jZSBvZiBjaG9pY2UgYXQgYWxsIG9ubGluZSBjYXNpbm8gc2l0ZXMsIHByb3ZpZGluZyBhIHN0aW11bGF0aW5nLCBidXQgY2hpbGxlZCwgZXhwZXJpZW5jZSBmb3IgcGxheWVycy4gCiA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb1doZW4geW91IGFyZSBqdXN0IHNpdHRpbmcgYXJvdW5kPyBUaGF0IHJlYWxseSBpc250IHdoYXQgZmxlZWNlIGlzIGdvb2QgZm9yLiBUaGUgUjEgaXMgYSB0ZWNobmljYWwgYWN0aXZlIHBpZWNlIElNTy4gCkkgd29uZGVyIGlmIHRoZXJlIGlzIGFueSBjb3JyZWxhdGlvbiB3aXRoIHRoZSAnbGlzdGVuIHRvIHlvdXIga2lkcycgcGFyZW50aW5nLiAKWWVzIHRoZXkgY2FuIGJlIHBsYXRlIG1vdW50LiAKRE0gYWxsb3dlZCBpdCBidXQgdG9sZCBoaW0gdGhhdCB0aGUgd2hvbGUgcG90aW9uIHdvdWxkIGhhdmUgdG8gYmUgZG93bmVkIGZvciBpdCB0byB3b3JrIGF0IGFsbC4gT3RoZXJ3aXNlIGl0IHdpbGwgb25seSBtYWtlIHNvbWVvbmUgZHJvd3N5Li4gCkkgZ290IHRoaXMgZmliZXIgYW5kIDQgb2YgY290dG9uIHNsaXZlciwgaG93ZXZlciB0aGF0IGNvc3QgbWUgYWJvdXQgJDE2LgpBbmQgSSB0aGluayB0aGF0IHRoZSB0ZWFtIGluIHBhcnRpY3VsYXIsIGFmdGVyIGEgcm91Z2ggRGF5dG9uYSwgYm91bmNlZCBiYWNrIGFuZCBoYXMgc2hvd24gYSBsb3Qgb2YgZ29vZCBzeW5lcmd5LiAKSXQgd2FzIHRoZSAzcmQgdmlvbGVudCBpbmNpZGVudCB0aGF0IEkgaGFkIGhhcHBlbiBvbiBhIHNvbG8gY2xvc2Ugc2hpZnQsIGFuZCB3aGVuIEkgYXNrZWQgdG8gaGF2ZSBhIGJvdW5jZXIgb24gZHV0eSwgdGhlIGJvc3MgcmVmdXNlZCwgc28gSSBxdWl0LiBUaGF0IHdhcyB0b28gbXVjaC4KRm9vZCBpcyBzYWNyZWQgYW5kIHNob3VsZCBiZSBjaGVyaXNoZWQgYXMgbXVjaCBhcyBpcyBwcmFjdGljYWwuIEl0IGlzIHN1Y2ggYSBmdW5kYW1lbnRhbCBwYXJ0IG9mIG91ciBleGlzdGVuY2UgdGhhdCBpdCBjYW4gYmUgdXNlZCBhcyBhIG1ldGFwaG9yIGZvciBldmVyeXRoaW5nLiBTb3JyeSwgSSBiYWJibGluZyBub3csIGJ1dCBpdCB0cnVlIHRoYXQgdGhlIHRoZSBjb21tb25wZXJzb24gaW4gdGhlIFVTIChJIG9ubHkgYmVlbiB0byBDYW5hZGEgb24gaG9saWRheSkgaXMgZ3Jvc3NseSB1bnNvcGhpc3RpY2F0ZWQgd2hlbiBpdCBjb21lcyB0byBmb29kLiAKVGhleSBoYXZlIHJldHJlYXRzIHRvbyB3aGljaCB0aGV5IGZvY3VzIGFnYWluIG9uIGxhbXJpbiB0b3BpYy4gCldoZW4gSSBwb3AgaW4gdG8gdGhlc2UgYXNpYW4gbWFzc2FnZSBwbGFjZXMgSSBhbHdheXMgaGFkIGEgY3JlZXB5IGZlZWxpbmcgYWJvdXQgdGhlIG1hbGVzLiBJcyBpdCBub3JtYWwgdG8gcHV0IGEgdG93ZWwgb3ZlciB5b3UgaWYgeW91IGFyZSBmdWxseSBjbG90aGVkIGZvciBhIG5lY2sgbWFzc2FnZT8gQWxzbyBvbiBhIG1hc3NhZ2UgdGFibGUgZmFjZSBkb3duPyBXaGF0IHdvdWxkIGEgc21hbGwgYW1vdW50IG9mIHZlcnkgd2FybSBsaXF1aWQgcmFuZG9tbHkgYmUgZG9pbmcgb24gbXkgYmFjaywgaXQgd2FzIGEgbm8gb2lsIG1hc3NhZ2UgYW5kIGkgbmV2ZXIgaGFkIG9pbCB0aGF0IHdhcm0uIApJbnRyYW11cmFsIFNwb3J0cyBwcm92aWRlcyB0aGUgVUNMQSBjb21tdW5pdHkgYW4gb3Bwb3J0dW5pdHkgdG8gcGFydGljaXBhdGUgaW4gb3JnYW5pemVkIHNwb3J0cyBhbmQgcmVjcmVhdGlvbmFsIGFjdGl2aXRpZXMuIEEgdmFyaWV0eSBvZiBsZWFndWVzLCB0b3VybmFtZW50cywgYW5kIHNwZWNpYWwgZXZlbnRzIGFyZSBvZmZlcmVkIGVhY2ggcXVhcnRlci4gSW5kaXZpZHVhbHMgbWF5IHJlZ2lzdGVyIGFuIGVudGlyZSB0ZWFtLCBvciBmb3IgbW9zdCBldmVudHMsIHJlZ2lzdGVyIGFzIGEgZnJlZSBhZ2VudCBhbmQgYmUgbWF0Y2hlZCB3aXRoIG90aGVyIGZyZWUgYWdlbnRzIHRvIGZvcm0gYSB0ZWFtLiBQYXJ0aWNpcGF0aW9uIGlzIG1vcmUgbGVpc3VyZWx5IHRoYW4gY2x1YiBzcG9ydHMsIGFuZCBwcm9tb3RlcyBhbiBhY3RpdmUgbGlmZXN0eWxlIGFuZCBmcmllbmRseSBjb21wZXRpdGlvbiBpbiBhIGZ1biwgc2FmZSBlbnZpcm9ubWVudC4KV2luZHNvciBHb29kZmVsbG93cywga25vd24gbWFpbmx5IGZvciBhbiBhbm51YWwgbmV3c3BhcGVyIGRyaXZlIGluIHN1cHBvcnQgb2YgdGhlaXIgQ2hyaXN0bWFzIGZhbWlseSBoYW1wZXIgcHJvZ3JhbSwgaGF2ZSBiZWVuIG9wZXJhdGluZyB0aGUgZXF1aXZhbGVudCBvZiBhIGZvb2QgYmFuayBmb3IgbW9yZSB0aGFuIGEgY2VudHVyeS4gSGVhbHRoaWVyIG9mZmVyaW5ncyBtaWdodCBiZSBjb3N0bGllciwgYnV0IEJhcmljaGVsbG8gc2FpZCBpdCBtdWNoIG1vcmUgYW5kIHRoYXQgcmVjZW50IGZ1bmRyYWlzaW5nIGVmZm9ydHMsIGluY2x1ZGluZyBhbiBhbm51YWwgZ29sZiB0b3VybmFtZW50IGFuZCBiZXF1ZXN0cyBpbiB3aWxscywgaGF2ZSBhbGxvd2VkIHRoZSBjaGFyaXR5IHJ1biBhbG1vc3QgZW50aXJlbHkgYnkgdm9sdW50ZWVycyAodGhlcmUgaXMgb25seSBvbmUgcGFpZCBlbXBsb3llZSkgdG8gbG9vayBhdCBhbiB1cGRhdGVkIGZvb2QgYmFuayBwcm9ncmFtIHdpdGggbW9kZXJuIGRheSBudXRyaXRpb25hbCB2YWx1ZXMuIApVc3VhbCBwcmVjYXV0aW9ucyBoYXZlIHRvIGJlIHRha2VuIGJ1dCB0aGVyZSBpcyBubyBwbGFuIGZvciB1c2luZyBleHRyYSBmb3JjZS4gClNvIGl0IHRha2VzIGFwcHJveGltYXRlbHkgMTUwZyBvZiBzb3kgdG8gZ2V0IHRoZSBzYW1lIGFtb3VudCBvZiBwcm90ZWluICgyMGcpIGFzIDgwIDkwZyBvZiBtZWF0LiAKQyB1biBhc3BlY3QgcXVpIG4gcGFzIGRlIG1hbmlyZSBjcmlhbnRlIGRhbnMgbGUgUHJjaXMgZGUgcGh5dG90aHJhcGllLCBiaWVuIHF1IHNhIGxlY3R1cmUsIGlsIGVzdCB2aWRlbnQgcXVlIGxlIGRvY3RldXIgTGVjbGVyYyB0YWl0IHVuIGdyYW5kIGxldHRyLCBkYW5zIGxlIHNlbnMgZCBhbW91cmV1eCBkZSBsYSBsZXR0cmUsIGRlIGxhIGNvbmp1Z2Fpc29uLCBkZSBsYSBncmFtbWFpcmUsIGRlIGxhIHN5bnRheGUsIGVuIHVuIG1vdCwgZGUgbGEgbGFuZ3VlLiAKQUEgd2FzIHRoZSBvbmx5IG92ZXJwYWlyIHRoYXQgY2hlY2tlZCBiYWNrIGF0IHNvbWUgZnJlcSBhbmQgSSB0aGluayBpdCB3YXMgMTAlIG9yIHNvLiBTbyBJIG1lYW4gaWYgeW91IHdhbnQgdG8gYWRkIGluIHRoYXQgbWl4IHlvdSBjYW4gYnV0IGRvZXNuJ3Qgc2VlbSB0aGF0IHN1YnN0YW50aWFsIHRvIG1lLiBUdXJuIGlzIGEgbWFuZGF0b3J5IGNhbGwsIHJpdmVyIHNlZW1zIGxpa2UgYSBmb2xkIHRvIG1lLiAKSSBkZWNsaW5lZCB0byBkbyBzbywgYXMgSSB3YXMgbmV2ZXIgY29uc3VsdGVkIGFib3V0IC9yL25lb2dyYXBoeSBiZWluZyBhZGRlZCB0byB0aGUgL3IvY29ubGFuZ3MgRGlzY29yZCBlY29zeXN0ZW0sIGV0Yy4gCkl0IGJlY2FtZSB2ZXJ5IHBvcHVsYXIgaW4gQnJpdGFpbiwgd2l0aCB0aGUgZmlyc3Qgd29ybGQgYW1hdGV1ciBjaGFtcGlvbnNoaXBzIGhlbGQgYXQgdGhlIEFsbCBFbmdsYW5kIENsdWIgaW4gV2ltYmxlZG9uMS4gU29vbiBpdCBzcHJlYWQgdG8gQXVzdHJhbGlhLCBmaXJzdCBiZWluZyBwbGF5ZWQgaW4gTWVsYm91cm5lIGluIDE4ODAuIEF0IHRoZSBlbmQgb2YgdGhlIDE5dGggQ2VudHVyeSwgbGF3biB0ZW5uaXMgd2FzIGJlaW5nIHBsYXllZCBpbiBhbGwgdGhlIEJyaXRpc2ggY29sb25pZXMgYW5kIG1hbnkgb3RoZXIgbmF0aW9ucy4KU2hlIGpvaW5lZCBBZCBBZ2UgYWZ0ZXIgYSBkb3plbiB5ZWFycyBvZiB3cml0aW5nIGZvciBDcmFpbidzIE5ldyBZb3JrIEJ1c2luZXNzLCB3aGVyZSBzaGUgYWxzbyBmb2N1c2VkIG9uIHRoZSByZXRhaWwgaW5kdXN0cnkuIApUcnVtcCBhbmQgS2ltIGFyZSBzY2hlZHVsZWQgdG8gbWVldCBKdW5lIDEyIGluIFNpbmdhcG9yZS4gVHJ1bXAgbm93IHNheXMgdGhlIG1lZXRpbmcgY291bGQgYmUgZGVsYXllZC4gZGVtYW5kcyBmb3IgTm9ydGggS29yZWEncyBjb21wbGV0ZSBkZW51Y2xlYXJpemF0aW9uLgpKdXN0IGJlY2F1c2UgSSB3YXNuJ3QgZ29pbmcgdG8gcmFpc2UgdGhpcyBiYWJ5IG15c2VsZiBkaWQgbm90IG1lYW4gSSB3b3VsZCBtaXNzIG91dCBvbiB0aGUgb3Bwb3J0dW5pdHkgdG8gZW5qb3kgdGhpcyBwcmVnbmFuY3ksIG9yIGdpdmUgdGhpcyBjaGlsZCBsb3ZlLCBvciBjZWxlYnJhdGUgd2l0aCBoZXIgcGFyZW50cy4gV2UgYW5ub3VuY2VkIHRoZSBhZG9wdGlvbiB0byBvdXIgbXV0dWFsIGZyaWVuZHMgdmlhIEZhY2Vib29rIGluIGVhcmx5IEFwcmlsLiBXaXRoaW4gYSBjb3VwbGUgb2YgbW9udGhzLCBJIG1vdmVkIGZyb20gVGV4YXMgdG8gQ2hpY2FnbyB0byBsaXZlIHdpdGggQ2xhcmEgYW5kIGhlciBodXNiYW5kLCBCcmlhbiwgd2hpbGUgdGhleSBwcmVwYXJlZCBmb3IgdGhlIGJhYnkncyBhcnJpdmFsLiBUb2dldGhlciwgd2UgbGF1Z2hlZCBhbmQgY3JpZWQgYW5kIGZvdW5kIG91dCBqdXN0IGhvdyBob3JyaWJsZSBwZW9wbGUgY2FuIGJlIHdoZW4gdGhleSBkb24ndCB1bmRlcnN0YW5kIHNvbWV0aGluZy4KIlRoZSB0d28gYm9hdHMgZGVmaWFuY2UgdGhlIG9mIHRoZSBJc3JhZWxpIGJsb2NrYWRlIGlzIGEgZ2xpbW1lciBvZiBob3BlIHRoYXQgY291bGQgYmUgYW4gb3BlbmluZyBvZiBhbiBlbmQgb2YgdGhlIHNpZWdlIiwgdGhlIGZvcm1lciBQYWxlc3RpbmlhbiBzZWN1cml0eSBjaGllZiB0b2xkIEFsIEphemVlcmEgaW4gYW4gaW50ZXJ2aWV3IGZyb20gdGhlIFdlc3QgQmFuayBvZiBSYW1hbGxhaC4KVGhlIGZpbGUgZW5kZWQgdXAgYmVpbmcgYXJvdW5kIDMgbWVncy4gClRoZSB0YXNrIHdhcyBhYm91dCB0byBlbmQgYW5kIERpcGlrYSB3YXMgZWFnZXJseSB3YWl0aW5nIGZvciBoZXIgaHVzYmFuZCBTaG9haWIuIEhlIG1hZGUgYSBkcmFtYXRpYyBlbnRyeSBmcm9tIHRoZSBjb25mZXNzaW9uIHJvb20uIApZb3UgbWlnaHQgZW5qb3kgcGxheWluZyBsaXZlIHBva2VyLCBidXQgZG9uJ3QgYWx3YXlzIGhhdmUgdGhlIHRpbWUuIFlvdSBtaWdodCBoYXZlIHRyaWVkIHRvIHBsYXkgcG9rZXIgb25saW5lLCBidXQgd2l0aCBsaW1pdGVkIG9yIG5vIHN1Y2Nlc3MuIEZvcmdldCB0aGF0IGRheXMhIFVzaW5nIGEgdG9vbCB0aGF0IHN1aXRlcyB5b3VyIHBheWluZyBzdHlsZSBjYW4gZ2l2ZSBhbnkgcGxheWVyIGJlIGl0IGEgbmV3YmllLCBpbnRlcm1lZGlhdGUgb3IgYW4gYWR2YW5jZWQgcGxheWVyIHRoZSBpbmZvcm1hdGlvbiBhbmQgc2VsZiBhc3N1cmFuY2UgdG8gd2luIG9uIGEgbG9uZyB0ZXJtLi4gClRoYW5rIHlvdSBmb3IgeW91ciB1bmRlcnN0YW5kaW5nLi4gCkkgcmVjb21tZW5kIHRoYXQgYWxsIG93bmVycywgbGFuZGxvcmRzIGFuZCB0ZW5hbnRzIHB1cmNoYXNlIGNvbmRvIGluc3VyYW5jZSBmb3IgdGhlaXIgcGVyc29uYWwgY29udGVudHMsIGxpdmluZyBvdXQgZXhwZW5zZXMsIGJldHRlcm1lbnRzIHRvIHN0cmF0YSBsb3RzLCBwZXJzb25hbCBsaWFiaWxpdHksIGxpYWJpbGl0eSBmb3IgYW4gaW5zdXJhbmNlIGRlZHVjdGlibGUgaWYgeW91IGFyZSByZXNwb25zaWJsZSBmb3IgYSBjbGFpbSwgYW5kIGRhbWFnZXMgdG8gdGhlaXIgc3VpdGUgdGhhdCBtYXkgb2NjdXIgdW5kZXIgdGhlIGRlZHVjdGlibGUgYW1vdW50Li4gCldhdGNoIG5ldyBUViBhZHMgZnJvbSBUaWRlCkJ1dCBDbHVicyBRdWVlbnNsYW5kIGNvbW11bmljYXRpb25zIGFuZCBnb3Zlcm5tZW50IHJlbGF0aW9ucyBtYW5hZ2VyIExhdXJhIEJvcyBzYWlkIGdhbWJsaW5nIHdhcyBvbmUgb2YgbWFueSByZXZlbnVlIHN0cmVhbXMgY2x1YnMgdXNlZCB0byBmdW5kIGNvbW11bml0eSBwcm9qZWN0cy4KRG55YSBtYWxuIG5leWxleWltIE9zbWFuIHR1dGFyIG0/IChXaGF0IHNoYWxsIEkgZG8gd2l0aCB3b3JsZGx5IHBvc3Nlc3Npb25zIGlmIGl0IGNhbiBrZWVwIG15IE9zbWFuKQpGaW5hbmNpZXJzIGludmVudGVkIGFuIGV2ZXIgbW9yZSBjb21wbGljYXRlZCBhcnJheSBvZiBzcGVjaWFsIHJldmVudWUgYm9uZHMuIApVbmRlcnN0YW5kYWJseSB0aGluZ3MgZG8gaGFwcGVuLCBzdWNoIGFzIGhhdmluZyBhIGNoaWxkIG9yIGRldmVsb3BpbmcgYSBtZWRpY2FsIGNvbmRpdGlvbiwgYnV0IGl0IGFkbWl0dGVkbHkgaGFyZCB0byBub3QgYXNzdW1lIHRoZSB3b3JzdC4gCkl0J3MgZGlmZmljdWx0IHRvIGV4cGxhaW4gdGhhdCBkZXNjcmlwdGlvbiwgYnV0IHBlcmhhcHMgaXQgc3RlbXMgZnJvbSBBZGFtcycgd2lsZCBleWVkIHN0YWdlIHByZXNlbmNlIG9mIEFkYW1zLiBPciBpdCBzaW1wbHkgY291bGQgYmUgdGhlIGdvb2QgdGltZSBmdW4gb25lIGV4cGVyaWVuY2VzIGxpc3RlbmluZyB0byBEaXJ0eSBCb3VyYm9uJ3MgbXVzaWMuIFRoZSBiYW5kIHBsYXllZCB0aGUgZmlyc3QgdGhyZWUgc29uZ3Mgb2ZmIHRoZSBuZXcgYWxidW0gIkV6bWVyZWxkYSwiICJXaWNrZWQiIGFuZCAiQW5pbWFsIiBhbmQgdGhlbiBjb250aW51ZWQgdG8gZW50ZXJ0YWluIGR1cmluZyBhIHdpZGUgcmFuZ2luZyBpbnRlcnZpZXcgd2l0aCBRdWVudGluLi4gCkkgYXNzdW1lIHRoZSByZXBseSB3YXMgYmVjYXVzZSB5b3UgZXhwbGFpbmluZyB0aGUgZGVmaW5pdGlvbiBvZiBwcm9iYWJpbGl0eSBvbiBhIHBva2VyIHN1YnJlZGRpdC4gCkFzIHBsYXllZCwgZmxvcCBpcyBmaW5lLiAKSWYgaXRzIGNoYXJ0ZXIgaXMgcmV3cml0dGVuLCBkZW1hbmQgdGhhdCBpdCBiZSBzZXQgdXAgYXMgYSBvbmUgd29ybGQgZ292ZXJubWVudCB3aXRoIGl0cyBvd24gaW5kZXBlbmRlbnQgYXJtZWQgZm9yY2VzLiBBcyBieSBNb3Njb3cuIApUaGUgbWFya3MgcHJlc2VudCBhdCB0aGUgYmFjayBvZiB0aGUgY2hlYXRpbmcgcGxheWluZyBjYXJkc2Nhbm5vdCBiZSBzZWVuIGJ5IG5ha2VkIGV5ZXMgYXMgdGhleSBhcmUgcHJpbnRlZCB3aXRoIHRoZSBpbnZpc2libGUgaW5rLiAKU2kgaW5mb3JtYSBpbCBzb3R0b3Njcml0dG9yZSBkZWxsYSBwcmVzZW50ZSBjaGUgaWwgZGVjcmV0byBsZWdpc2xhdGl2byBuLiAxOTYvMjAwMyBwcmV2ZWRlIGxhIHR1dGVsYSBkZWxsZSBwZXJzb25lIGUgZGkgYWx0cmkgc29nZ2V0dGkgcmlzcGV0dG8gYWwgdHJhdHRhbWVudG8gZGVpIGRhdGkgcGVyc29uYWxpLiBTZWNvbmRvIGxlIGxlZ2dpIGluZGljYXRlLCB0YWxlIHRyYXR0YW1lbnRvIHNhciBpbXByb250YXRvIGFpIHByaW5jaXBpIGRpIGNvcnJldHRlenphLCBsaWNlaXQgZSB0cmFzcGFyZW56YSB0dXRlbGFuZG8gbGEgcmlzZXJ2YXRlenphIGUgaSBkaXJpdHRpIGRlbCBzb3R0b3Njcml0dG9yZS4gTGUgc2VndWVudGkgaW5mb3JtYXppb25pIHZlbmdvbm8gZm9ybml0ZSBhaSBzZW5zaSBkZWxsJ2FydGljb2xvIDEzIGRlbCBkZWNyZXRvIGxlZ2lzbGF0aXZvIG4uIDE5Ni8yMDAzLgpJdCByZXF1aXJlcyBwYXRpZW5jZSwgYSB0ZWFtIGVmZm9ydCwgYW5kIGEgcmVhbGlzdGljIGdvYWwuIEEgaG9sZSBjYW4gc3VjayB5b3UgaW4gc28gZmFyIHlvdSBkb24gcmVhbGx5IHNlZSBhIHdheSBvdXQsIGJ1dCB3aXRoIGhlbHAgeW91IGNhbiBlc2NhcGUgaXQuIE5laXRoZXIgYW54aWV0eSBvciBkZXByZXNzaW9uIGNhbiBnbyBhd2F5IGp1c3QgYnkgdGVsbGluZyBzb21lb25lIHRvIGdldCBiZXR0ZXIuIApZb3UgY2Fubm90IHJlYWNoIHRoZSBvdGhlciBzaWRlLCBhbmQgc3dpbW1pbmcgYWdhaW5zdCB0aGUgY3VycmVudCwgYW5hbG9nb3VzIHRvIHJlcHJlc3NpbmcsIGlzIHRvbyBleGhhdXN0aW5nIGFuZCBjb21wbGV0ZWx5IHVuc3VzdGFpbmFibGUuIApBcyB0aGUgc2hvdyBlbmRlZCBzaGUgc3RhcnRlZCBzYXlpbmcgIkkgc28gaGFwcHkgcmlnaHQuIEkgc28gaGFwcHkgcmlnaHQgbm93IiBhbmQgd2Ugc3RhcnRlZCBodWdnaW5nIGFsbCB0aGUgcGVvcGxlIGFyb3VuZCB1cy4gCkxpa2UgdmlkZW8gZ2FtZXM/IFBDIGdhbWVycyBjYW4gam9pbiB0aGUgL3Ivc2hhbmdoYWkgU3RlYW0gZ3JvdXAsIGNvbnNvbGUgZ2FtZXJzIGNhbiBmaW5kIGV2ZXJ5Ym9keSBOaW50ZW5kbyBmcmllbmRjb2RlcywgWGJveCBnYW1lcnRhZ3MgYW5kIFBTTnMgaGVyZS4KSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBmaXJzdCBlbWVyZ2VkIGZyb20gdGhlIGFjdGl2aXRpZXMgb2YgbGFib3VyIG1vdmVtZW50cyBhdCB0aGUgdHVybiBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnkgaW4gTm9ydGggQW1lcmljYSBhbmQgYWNyb3NzIEV1cm9wZS5TaW5jZSB0aG9zZSBlYXJseSB5ZWFycywgSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBoYXMgYXNzdW1lZCBhIG5ldyBnbG9iYWwgZGltZW5zaW9uIGZvciB3b21lbiBpbiBkZXZlbG9wZWQgYW5kIGRldmVsb3BpbmcgY291bnRyaWVzIGFsaWtlLiAKU2hvcnRseSBhZnRlciwgR3JlZ2cgYmVjYW1lIGEgbGFib3JhdG9yeSB0ZWNobmljaWFuIGF0IEFtZXJpY2FuIE1pbGsgUHJvZHVjZXJzIEluYy4gCkhlIHdpbGwgYmUgbWlzc2VkIGJ5IG1hbnkgYnV0IHJlbWVtYmVyZWQgZm9yIGFsbCBoZSBkaWQgZm9yIGV2ZXJ5IG9uZSBvZiB1cy4gRnVuZXJhbCBTZXJ2aWNlIHRvIGNlbGVicmF0ZSBEaWNrJ3MgbGlmZSB3aWxsIGJlIGF0IFN0LiBQcml2YXRlIGludGVybWVudCB3aWxsIHRha2UgcGxhY2UgYXQgV29vZGxhbmQgQ2VtZXRlcnkuIEluIGxpZXUgb2YgZmxvd2VycyBtZW1vcmlhbCBkb25hdGlvbnMgdG8gU3QuIEpvaG4gdGhlIEV2YW5nZWxpc3QgQW5nbGljYW4gQ2h1cmNoIE1lbW9yaWFsIEZ1bmQgb24gYmVoYWxmIG9mIFJpY2hhcmQgTWV1bmllciBvciB0aGUgSyBXIEh1bWFuZSBTb2NpZXR5IHdvdWxkIGJlIGdyZWF0bHkgYXBwcmVjaWF0ZWQgYnkgdGhlIGZhbWlseSBhbmQgbWF5IGJlIGFycmFuZ2VkIGZvciB0aHJvdWdoIHRoZSBmdW5lcmFsIGhvbWUuIApJIGhhbmdvdXQgd2l0aCBteSBleCBib3lmcmllbmQgKGRhdGVkIGZvciA3IHllYXJzKSBhbmQgSSBoYXZlIHplcm8gZmVlbGluZ3MgZm9yIGhpbSByb21hbnRpY2FsbHkgIEkgc3RpbGwgbG92ZSBoaW0gdG8gcGllY2VzIGJ1dCBub3QgbGlrZSB0aGF0LiAKSnVkaXRoIENhcnIgYXR0ZW5kZWRIaXJhbSBDb2xsZWdlLCBLZW50IFN0YXRlIFVuaXZlcnNpdHkgYW5kIHRoZUNsZXZlbGFuZCBJbnN0aXR1dGUgb2YgQXJ0LiBGb3IgdGhlIGxhc3QgZmlmdGVlbnllYXJzIHNoZSBoYXMgb3duZWQgYW5kIG9wZXJhdGVkIENhcnJSZXN0b3JhdGlvbiwgYSByZXN0b3JhdGlvbiBzdHVkaW8gZm9yIGZ1cm5pdHVyZWFuZCBwYWludGluZ3MgZnJvbSAxNzUwIHRvIDE4NTAuIEx5bmNoIHdpbGwgYWxzbyBoYXZlIGEgdmFyaWV0eSBvZnRyaW1zIGFuZCByaWJib25zIGZvciBwdXJjaGFzZSBmb3IgdGhvc2V3aXRoIHRoZWlyIG93biBib25uZXQgYmxhbmsuIApZT3UgYXR0ZW1wdCB0byBqdW1wIGludG8gdGhlIGRlZXAgZGFyayBhYnlzcywgeW91IGRvIHNvIHdpdGggc3VjaCBwZXJmZWN0IGZvcm0sIGluIGZhY3QgeW91IGRlY2lkZSB0byBkbyBhIGZldyBjYXJ0d2hlZWxzIGFuZCBiYWNrZmxpcHMgd2hpbGUgeW91IHdlcmUgYXQgaXQuIApSZWFsbHksIEkgZW5jb3VyYWdlIHlvdSB0byBsZWF2ZSB1cyB0aGUgZnVjayBhbG9uZSB3aGVuIHlvdSBzdWNoIGEgcGF0aGV0aWMgcGFyYW5vaWQgbWlzb2d5bmlzdC4gClRoZW4gd2UgZ290IGEgdGFibGUgYW5kIHdhdGNoZWQgdGhlIG90aGVyIHBlb3BsZSBkYW5jZSBhbmQgc25nIGZvciBhIHdobGUuIApTb21ld2hlcmUgTXIgQmVuZGVyLCBteSA2dGggZ3JhZGUgbWF0aCB0ZWFjaGVyLCBpcyBwcmV0dHkgcHN5Y2hlZCBJIHJlbWVtYmVyIHRoaXMpLi4gCldoYXQgd291bGQgeW91IGNsYXNzaWZ5IGFzICJEZWNlbnQiP0VoLiBJIHNheSB0aGUgY2hlYXBlc3QgImRlY2VudCIgY2hvaWNlIHdvdWxkIGJlIHRoZSBGbGlyIGJhc2UgbW9kZWwgaW1hZ2VyIChhbmQgZG8gbWFrZSBzdXJlIGl0IGFuIGltYWdlciBhbmQgbm90IGp1c3QgYW4gSVIgdGhlcm1vbWV0ZXIgbG9sKSBhdCBhYm91dCAkMjAwICh0aGVyZSBjaGVhcGVyIG9uZXMsIGxpa2Ugb25lIG1hZGUgYnkgUHJpbWUgUGVyZmVjdCwgYnV0IHRoZXkgcnViYmlzaCAgIHVzZWxlc3MpIGFuZCBldmVuIHRoZW4gaXQgbm90IGEgZ3JlYXQgaW1hZ2VyIChubyByZWFsIHNldHRpbmdzIG9wdGlvbnMpIGJ1dCBpdCBjb3VsZCBwcm9iYWJseSBkbyB0aGUgam9iIGlmIHlvdSBnZXQgZmFtaWxpYXIgZW5vdWdoIHVzaW5nIGl0LiAKRXNjYXBlIHRoZSBwcm9ibGVtIGZvciBhIGxpdHRsZSB3aGlsZSwgcmV0dXJuaW5nIHdoZW4geW91J3ZlIGNhbG1lZCBkb3duLiBMZWF2aW5nIHlvdXIgZGVzayBhdCB3b3JrIHRvIG1ha2UgdGVhLCBvciBnZXQgd2F0ZXIsIGlzIG9mdGVuIGVub3VnaC4uIApIZSBzaG93ZWQgaGVyIHNvbWV0aGluZyBpbiBoaXMgY2FyLiAKTXkgVWJlciBkcml2ZXIgd2FzIGEgbG92ZWx5IEdyZWVrIG1hbiB3aG8gdG9sZCBtZSBsb2FkcyBvZiBzdG9yaWVzIGFib3V0IGhpcyBjdWx0dXJlIGFuZCBwcmV2aW91cyBqb2JzLiAKSGUgd2FzIGFib3V0IHRvIHRha2UgJDcwMCAoJDYwMCBvZiBpdCB3YXMgaGlzIGFueWhvdykgb2ZmIHRoZSB0YWJsZS4gCldpdGggdGhlIGNvbnN0YW50IG9uc2xhdWdodCBvZiBhZHZlcnRpc2luZyBmb3IgdGhlIG5leHQgZ3JlYXQgcGllY2Ugb2YgZXhlcmNpc2UgZXF1aXBtZW50LCBpdCBjYW4gYmUgZGlmZmljdWx0IHRvIGRldGVybWluZSB3aGF0IGlzIHdvcnRoIGJ1eWluZyBhbmQgd2hhdCB3aWxsIGJlIGFkZGVkIHRvIHlvdXIgY29sbGVjdGlvbiBvZiB1bnVzZWQgZXF1aXBtZW50LiBFdmVuIHRob3VnaCBleGVyY2lzZSBiYWxscyBhcmUgb25lIG9mIHRoZSBtb3N0IGluZXhwZW5zaXZlIHBpZWNlcyBvZiBlcXVpcG1lbnQgKHR5cGljYWxseSBhcm91bmQgJDE1IHRvICQzMCksIEkgY2FuIGNvbmZpZGVudGx5IHRlbGwgeW91IHRoYXQgZXhlcmNpc2UgYmFsbHMgYXJlIGFtb25nIHRoZSBtb3N0IHVzZWZ1bCBwaWVjZXMgb2YgZXhlcmNpc2UgZXF1aXBtZW50IHlvdSBjYW4gYnV5LiAKWW91IGVzdGFibGlzaGluZyBjb25kaXRpb25zIHdoZXJlIGEgcGVyc29uIGNhbiBrbm93aW5nbHkgYW5kIGludGVudGlvbmFsbHkgY3JlYXRlIGFuZCBjb250cmlidXRlIG5vdGhpbmcgKG9yIGV2ZW4gYWN0aXZlbHkgZGVzdHJveSB0aGluZ3MpLCBidXQgc3RpbGwgYmUgbW9yYWxseSBzdXBlcmlvciB0byBhIHBlcnNvbiB3aG8gaXMgbWFzc2l2ZWx5IGhlbHBmdWwgYW5kIGNoYXJpdGFibGUgdG8gc29jaWV0eS4gQXMgbG9uZyBhcyB0aGUgY2hhcml0YWJsZSBwZXJzb24gaXMgc3VmZmljaWVudGx5IGxlc3MgY2hhcml0YWJsZSB0aGFuIHRoZXkgY291bGQgZmVhc2libHkgYmUuIFRoZSBkZXN0cnVjdGl2ZSBwZXJzb24gaXMgYWN0aXZlbHkgYW5kIGludGVudGlvbmFsbHkgcmVkdWNpbmcgdGhlIHF1YWxpdHkgb2YgdGhlaXIgc29jaWV0eSBmcm9tIHRoZSBzdGF0dXMgcXVvIGFuZCB0aGUgY2hhcml0YWJsZSBwZXJzb24gaXMgYWN0aXZlbHkgYW5kIGludGVudGlvbmFsbHkgaW1wcm92aW5nIGl0LCBidXQgeW91IGhvbGQgdGhhdCB0aGUgY2hhcml0YWJsZSBvbmUgaXMgbW9yYWxseSBpbmZlcmlvcj8uIAoiUGVvcGxlIGFjcm9zcyB0aGUgYWdlIGdyb3VwcyBnYW1ibGUsIiBzYWlkIE1zIEJhcmQsIHdobyBtYW5hZ2VzIGEgdGVhbSBvZiBzaXggY291bnNlbGxvcnMgIHR3byBlYWNoIGluIER1YmJvLCBCYXRodXJzdCBhbmQgT3JhbmdlLiBUaGVzZSBjb3Vuc2VsbG9ycyBhbHNvIHByb3ZpZGUgZmFjZSB0byBmYWNlIGNvdW5zZWxsaW5naW4gTGl0aGdvdywgUGFya2VzIGFuZCBNdWRnZWUgb24gYSBwcmUgZGV0ZXJtaW5lZCBkYXkuIE1zIEJhcmQgc2FpZCBhbmV3IExpZmVsaW5lIENlbnRyYWwgV2VzdCBnYW1ibGluZyBhd2FyZW5lc3MgY2FtcGFpZ24gd291bGQgc3RhcnQgbmV4dCB3ZWVrLiAKRmFuZmljIHJlYzoKIkkgbmV2ZXIgdGhvdWdodCBhYm91dCB0aGF0IHN0b3J5LiBhbmQsIHlvdSBrbm93LCB0aGF0J3Mgd2hhdCBteSBhdHRvcm5leXMgd2VyZSBnb2luZyB3aXRoLiIKSGUgd291bGQgc3RhbmQgY2xhc3NpY2FsbHkgcG9pc2VkIGFmdGVyIG1ha2luZyBhbiBvbiBkcml2ZSwgY29udGVtcGxhdGluZyB0aGUgZGlyZWN0aW9uIGFuZCBncmFuZGV1ciBvZiBpdC4gCkF0IE1JVCwgaGUgdG9sZCB0aGUgcGVvcGxlIHRoYXQgaGUgd291bGQgc2V0IHVwIGEgc3RhdGUgb2YgdGhlIGFydCB1bml2ZXJzaXR5IGluIFBha2lzdGFuLiBNYW55IHllYXJzIGFnbywgSSBoYWQgcHJlcGFyZWQgYSBmZWFzaWJpbGl0eSByZXBvcnQgZm9yIGEgZmlyc3QgY2xhc3MgdW5pdmVyc2l0eSBhbmQgc2VudCBpdCB0byB0aGUgcHJlc2VudCBnb3Zlcm5tZW50IHRocm91Z2ggQWhzYW4gSXFiYWwuIApLZXB0IGJyYWdnaW5nLCBzYXlzIFN0YXBsZXMgd2l0aCBhIGxhdWdoLiBJIHdhcyBsaWtlLCB0aGlzIGlzbiBnb2luZyB0byB3b3JrLiBBbmQgSSBzdGFydGVkIHBsYXlpbmcsIGFuZCBldmVudHVhbGx5IEkgZm91bmQgbXkgd2F5IHRvIHJlYWwgbW9uZXkgc2l0ZXMsIGFuZCB0cmllZCBpdCBvdXQgYSBiaXQsIGFuZCByZWFsbHkganVzdCBmZWxsIGluIGxvdmUgd2l0aCB0aGUgZ2FtZS4gV2hlbiBJIGFjdHVhbGx5IGhhZCB0byBiZWF0IGhpbSBhbmQgdGhpbmsgYWJvdXQgd2h5IEkgd2FzIGRvaW5nIHdoYXQgSSB3YXMgZG9pbmcsIHRoZSBnYW1lIHRvb2sgb24gYSB3aG9sZSBuZXcgZm9ybSwgd2hlcmUgdGhlcmUgd2FzIGEgbG90IG9mIGRlcHRoIGFuZCByb29tIGZvciBncm93dGguIGhlIG1ha2luZyBzbyBtdWNoIGZyb20gcG9rZXIgdGhhdCBoZSBhYmxlIHRvIGhpcmUgaGlzIGJyb3RoZXIgYXMgYSBwZXJzb25hbCBhc3Npc3RhbnQuIEFib3V0IHNldmVuIG1vbnRocyBhZ28sIGhlIGRlY2lkZWQgdG8gdGFrZSBhIGJyZWFrIGZyb20gaGlzIHN0dWRpZXMgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTGV0aGJyaWRnZSB0byBwbGF5IHBva2VyIGZ1bGwgdGltZSwgYW5kIHN0cmVhbSBoaXMgZ2FtZXMgbGl2ZS4KWWVzLCBpdCBpcywgYXMgaXQgaXMgd2l0aCBhbG1vc3QgZXZlcnl0aGluZyBpbiBsaWZlLiAKSGF2ZSBhIGxpdHRsZSBiaXQgb2YgY29uIHRvIG1lLCBhbmQgbXkgZ3JlYXRlc3Qgc2NvcmUgd2FzIGNvbnZpbmNpbmcgbXkgd2lmZSB0byBtYXJyeSBtZS4gU2hlIGEgcGhlbm9tZW5hbCBsYWR5LgpQb29yIGxpdHRsZSB0aGluZyBqdXN0IGxvdmVkIHdha2luZyB1cCBhdCAzIGFuZCBkaWRuIHNldHRsZSBkb3duIHVudGlsIDgsIEkgc3RpbGwgaGFkIGEgbGl0dGxlICJiYWJ5IHNvb3RoaW5nIiB0aGluZyBmcm9tIHdoZW4gbXkgZXggbW92ZWQgb3V0IHdpdGggb3VyIHNvbiwgaXQgd2FzIHN1cHBvc2VkIHRvIGhlbHAgY2FsbSBiYWJpZXMgZG93bi4gClRoZSBtdXNpYyBpcyBib21iYXN0aWMgYW5kIGFkdmVudHVyb3VzLiBCdXQgaW4gQk9UVywgR2Fub24gaGFzIGFscmVhZHkgd29uLiBZb3Ugc3RpbGwgaGF2ZSB0byBkZWZlYXQgaGltLCBidXQgb3ZlcmFsbCBJIGZlZWwgdGhhdCB0aGUgZ2FtZSBpcyBhYm91dCB0aGUgcGVvcGxlIGFuZCBwbGFjZXMgeW91IG1lZXQgYW5kIHNlZSBvbiB5b3VyIGpvdXJuZXkuIEkgbG92ZSB0aGUgZ2FtZSBzbyBtdWNoIEkgb24gbXkgdGhpcmQgc2F2ZSwgYW5kIGluIHRoaXMgb25lLCBJIG5vdCBnb2luZyB0byBmYXN0IHRyYXZlbCB1bnRpbCBJIGJlYXRlbiBHYW5vbiwgc28gSSBjYW4gZXhwZXJpZW5jZSBhbGwgdGhlIGNvb2wgdGhpbmdzIEkgb3RoZXJ3aXNlIG5ldmVyIHdvdWxkLiAKSW4gbWFueSB3YXlzIFBhY3F1aWFvcyBodW5nZXIgZm9yIHN1Y2Nlc3MgaW4gbm90IGFzIHN1cnByaXNpbmcgYXMgaXQgbWF5IHNlZW0uIEluIFBhY3F1aWFvIHdlIGhhdmUgYWxsIHRoZSBlbGVtZW50cyBvZiB0aGUgdWx0aW1hdGUgZmFpcnl0YWxlLCByYWdzIHRvIHJpY2hlcyBzdG9yeS4gCkRhdmlkIEhhdmFzLCBhIHBzeWNob2xvZ2lzdCBhdCB0aGUgVW5pdmVyc2l0eSBvZiBXaXNjb25zaW4gTWFkaXNvbiwgd2hvIGxlZCB0aGUgc3R1ZHksIHNheXMgaGlzIHJlc2VhcmNoIHByb3Zlcy4gVGhhdCBmYWNpYWwgZXhwcmVzc2lvbiBpcyBhbiBpbXBvcnRhbnQgZmFjdG9yIGluIHByb2R1Y2luZyBlbW90aW9uIGluIHRoZSBicmFpbi4uIApJIHN0aWxsIGhhdmUgeWV0IHRvIGhlYXIgZnJvbSBhbnkgbW9kcyBmcm9tIGVpdGhlciByL2dhbWluZyBvciByL2Z1bm55IG9uIHdoeSBJIHdhcyBiYW5uZWQsIG9yIG1vcmUgdG8gYXR0ZW1wdCB0byBqdXN0aWZ5IHRoZSBsb2dpYyBpbiBpdC4gSWYgeW91IHJlYWRpbmcgdGhpcyB0aGVuIGd1eXM/CjI4IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KRXh0cmEgZnVuIGJpdCAgaGUgd2FzIGFsd2F5cyBhIGJpdCBvZGQsIGJlY2F1c2Ugb24gSGFsbG93ZWVuIHdoZW4gd2UgZ28gdG8gaGlzIGhvdXNlLCBoZSBnYXZlIG91dCBwb3dkZXJlZCBkb251dHMgZnJvbSBhIGJveC4gSGUgYWxzbyBwYWlkIGtpZHMgdmVyeSB3ZWxsIHRvIG1vdyBoaXMgbGF3bi4gCk1haW50YWluIGdvb2Qgb3ZlcmFsbCBndXQgaGVhbHRoLiBPdXIgbW9kZXJuIGV4aXN0ZW5jZSBzb21ldGltZXMgc2VlbXMgbGlrZSBvbmUgZ2lhbnQgYXNzYXVsdCBhZ2FpbnN0IG91ciBkaWdlc3RpdmUgdHJhY3RzLiBNaW5pbWl6ZSBjdW11bGF0aXZlIG5lZ2F0aXZlIGVmZmVjdHMgYW5kIGluY3JlYXNlIHBvc2l0aXZlLCBwcm90ZWN0aXZlIGZhY3RvcnMuIEVhdCBhIGhlYWx0aHkgZGlldCB3aXRoIFByaW1hbCBkb3NlcyBvZiBwcm9iaW90aWNzLCBwcmViaW90aWNzIGFuZCBnb29kIGZhdHMuIExpbWl0IHN0cmVzcyBhbmQgdGhlIHVzZSBvZiBtZWRpY2F0aW9ucyBsaWtlIGFzcGlyaW4sIE5TQUlEcyBhbmQgYW50aWJpb3RpY3MgKGFzIHdlbGwgYXMgc2Vjb25kYXJ5IGV4cG9zdXJlIHRocm91Z2ggYW50aWJpb3RpYyBhZG1pbmlzdGVyZWQgbGl2ZXN0b2NrKS4KU2hpdGJ1bGxzaGl0YnVsbCB1Ckl0IG5vdCBhIGNvb2tpZSBjdXR0ZXIgcGxhY2UuIEl0IG1hdGNoZWQgYWxsIHRoZSBwaWN0dXJlcyB3ZSBnYXRoZXJlZCBvZiB0aGUgdHlwZXMgb2YgcGxhY2VzIHdlIHdhbnRlZC4gCkxhZHkgR2FnYSBpcyBiaXNleHVhbC4gCkhvd2V2ZXIsIHRoZXJlIGFyZSBtYW55IHBsYWNlcyB0aGF0IG9mZmVyIHRoaXMgdHlwZSBvZiBjYXJkIGZvciB0aGUgc2FtZSBwcmljZSBhcyB0aGUgY2hlYXBlciBicmFuZHMuIFdoZW4gc2Vla2luZyBvdXQgcXVhbGl0eSBjYXNpbm8gc3R5bGUgYnJpZGdlIHBsYXlpbmcgY2FyZHMsIHlvdSBzaG91bGQgb3B0IGZvciBuYW1lIGJyYW5kcyBsaWtlICJSYW1hZGEgRXhwcmVzcyIsICJFeGNhbGlidXIiIGFuZCAiSmFtZXMgQm9uZCBDYXNpbm8gUm95YWxlIi4gQWxsIG9mIHRoZXNlIG9mZmVyIHRoZSBmZWF0dXJlcyBvZiB0aGUgc3RhbmRhcmQgYnJhbmRzIGFuZCB0aGUgcXVhbGl0eSBleHBlcmllbmNlIG9mIHBsYXlpbmcgaW4gYSBjYXNpbm8uLiAKSnVzdCBpbiBnZW5lcmFsICAgb2J2aW91c2x5IHRhbGtpbmcgdG8gcGVvcGxlIG9uIE9LQyBpcyB3ZWlyZCBhbmQgaXQgaGFyZCB0byBoYXZlIGFuIGhvbmVzdCBjb25uZWN0aW9uIHdoZW4geW91IGp1c3QgcmVhZGluZyBhIHByb2ZpbGUsIGJ1dCBJIHNheSBrZWVwIGl0IHNpbXBsZXIsIGRvbiB3cml0ZSBsb25nIG1lc3NhZ2VzIHdpdGggYSBsb3Qgb2YgcXVlc3Rpb25zL3RvcGljcywgYW5kIHN0YXkgcG9zaXRpdmUgKGJvdGggYWJvdXQgeW91cnNlbGYgYW5kIGhlcikuIApHZXQgYSB0YW4gYXQgdGhlIEFyY3RpYyBDaXJjbGUKVHVybiBJIGhlc2l0YW50IHRvIGNvbW1lbnQuIApJZiB5b3UncmUgcGxheWluZyBhdCBhIGxvdyBsaW1pdCB0YWJsZSBhbmQgeW91J3JlIGRlYWx0IGEgc3Ryb25nIGhhbmQgeW91IHNob3VsZCB0cnkgdG8ga2VlcCBhcyBtYW55IHBsYXllcnMgaW4gdGhlIGdhbWUgYXMgcG9zc2libGUuIFRyeWluZyBjaGVja2luZyBpZiB5b3UncmUgb25lIG9mIHRoZSBmaXJzdCB0byBwbGFjZSBhIGJldCwgdGhpcyBzaG91bGQgdHJpY2sgbW9zdCBwbGF5ZXJzIGludG8gdGhpbmtpbmcgeW91ciBoYW5kIGlzIHdlYWsuCkxDRyB0ZWNobm9sb2d5IHByb3ZpZGVzIGd1ZXN0cyB3aXRoIGFuIG9wdGlvbiB0byB0dXJuIHRoZSBnbGFzcyBvcGFxdWUgYXQgdGhlIHRvdWNoIG9mIGEgYnV0dG9uLi4gCkkgZGlkIG5vdCBmaW5pc2ggY29sbGVnZS4gV2FzIG9uIHRoZSB3YXkgdG8gYSBzdG9yZSBtYW5hZ2VyIGpvYiBpbiByZXRhaWwsIHdoaWNoIHdvdWxkIGhhdmUgcGFpZCB2ZXJ5IHdlbGwsIGJ1dCB0aGUgaG91cnMgd2VyZSBraWxsaW5nIG1lLiBJIGRpZCBhIEx5bmRhIGNvdXJzZSBvbiBIVE1MLCBDU1MsIGFuZCBXb3JkUHJlc3MgYW5kIGdvdCBteXNlbGYgYSBuZXcgam9iLiBJdCB3YXMgZW50cnkgbGV2ZWwgYW5kIGRpZG4ndCBwYXkgd2VsbCwgYnV0IGFmdGVyIGEgZmV3IHllYXJzIEkgd2FzIHJlYWxseSBnb29kIGFuZCBnb3QgaGlyZWQgZWxzZXdoZXJlLgpBbGwgc2hlIGhhZCB3YXMgdGhlIGF0b21pemVyIGFuZCBib3guIApBdCBhZ2UgMiAxLzIgdG8gYWJvdXQgMyBjaGlsZHJlbiBjYW4gYmVnaW4gdG8gYXBwcmVjaWF0ZSBwaWN0dXJlcywgbWFwcywgYW5kIG1vZGVscyBhcyBvYmplY3RzIHRoYXQgc3RhbmQgZm9yIHNvbWV0aGluZyBlbHNlLiAKRnJvbSB0aGUgdG93ZXJpbmcsIHBpbmVhcHBsZSBzaGFwZWQgR3JhbmQgTGlzYm9hIHRvIHRoZSB2YXN0IGNhbXB1cyBvZiB0aGUgVmVuZXRpYW4sIHRoZXJlJ3Mgbm8gc2hvcnRhZ2Ugb2YgY2FzaW5vcyB0byBjaG9vc2UgZnJvbSBpbiBNYWNhdS4gClRoZSBuZXh0IHRpbWUgc2hlIHN0YXJ0ZWQgdG8gaW50cm9kdWNlIHRoaW5ncyBzaGUgd2FudGVkIHRoYXQgSSBkaXNjb3ZlcmVkIHR1cm5lZCBtZSBvZmYgYSBsaXR0bGUsIGJ1dCBJIGdhdmUgaXQgYSBzaG90IGJlY2F1c2UgaXQgbmV2ZXIgaHVydHMgdG8gdHJ5IG5ldyB0aGluZ3MuIApBIHZhcmlldHkgb2Ygb3B0aW9ucyBhcmUgYXZhaWxhYmxlIGZvciBpbmRpdmlkdWFsIHZpdGFtaW4gRCBzdXBwbGVtZW50cywgaW5jbHVkaW5nIGNhcHN1bGVzLCBjaGV3YWJsZSB0YWJsZXRzLCBsaXF1aWRzLCBhbmQgZHJvcHMuIApUaGVkb2N1bWVudHMgcmV2ZWFsZWQgdGhlIGZvdW5kYXRpb24gaGFzIGFjdHVhbGx5IGRvbmF0ZWQgYW4gYXZlcmFnZSBvZiBqdXN0IDE2b2YgZXZlcnkgZG9sbGFyIGl0IHJhaXNlZCBvbiBiZWhhbGYgb2Ygc2ljayBhbmQgdW5kZXJwcml2aWxlZ2VkIGNoaWxkcmVuIGZyb20gMjAxMSB0byAyMDEzLiBUaGUgdmFzdCBtYWpvcml0eSBvZiBpdHMgZnVuZHMgd2VyZSBpbnN0ZWFkIHNwZW50IHN0YWdpbmcgZ2xpdHp5IGNlbGVicml0eSBldmVudHMgc3VjaCBhc2NyaWNrZXQgbWF0Y2hlcyxwb2tlciB0b3VybmFtZW50cywgYW5kZ2FsYSBkaW5uZXJzLiBJdCBhbHNvIHNwZW50ICQyMTAsMDAwIGVtcGxveWluZyBTaGFuZSBXYXJuZSBicm90aGVyIGluIGFuIGV4ZWN1dGl2ZSBwb3NpdGlvbiBhdCB0aGUgZm91bmRhdGlvbi4gCkdyYXlTa2llc0dyZWVuRXllcyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSWYgeW91IHdhbnQgeW91ciBtYXJyaWFnZSB0byBzdGFuZCBhIGNoYW5jZSB0aGVuIHlvdSB3aWxsIGJvdGggYWdyZWUgdG8gc29tZSBjb3Vuc2VsaW5nLiAKT24gLCB5b3UgaGF2ZSBhcnJpdmVkIGF0IHRoZSByaWdodCBwbGFjZS4KU2FtZSByZXN1bHRzLlNvIEkgaGFkIGRvbmUganVzdCBhYm91dCBldmVyeXRoaW5nIEkgY291bGQgaGF2ZSB0byB0cm91Ymxlc2hvb3QgdGhlIGlzc3VlLiAKTCBhdmVjIGxlIGNobmUsIGMgcXVlIGQgZXNwY2UgIGwgbGVzIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMgZGVtZXVyZW50IHByb2NoZXMsIGNlIHF1ZSBuZSBtYW5xdWUgcGFzIGRlIGRpc3Rpbmd1ZXIgRGlvc2NvcmlkZSBxdWkgZGlzc29jaWUgbmFubW9pbnMgbGUgY2huZSBkZSBsYSB5ZXVzZTogVG91dGUgc29ydGUgZGUgY2huZSBhIHVuZSB2ZXJ0dSBhc3RyaW5nZW50ZSwgYWZmaXJtZSB0IGlsICgxNCkuIApObyBjb2ZmZWUuIFN3aXRjaCB0byB5ZXJiYSBtYXR0ZS9ncmVlbiB0ZWEuClNoZSBlbmRzIHVwIHRocmVhdGVuaW5nIHRvIGNhbGwgbXkgY29tbWFuZGVyLCBidXQgSSBkb24gZ2l2ZSBhIGZ1Y2suIEkgZW5kIHVwIGdvaW5nIHRvIG15IGNvbW1hbmRlciB0byBjb21wbGFpbiBhbmQgd2hlbiBoZSBjYWxscyBoZXIsIHNoZSBhY2N1c2VzIG1lIG9mIHRyeWluZyB0byBnZXQgaGVyIGluIHRyb3VibGUgdG8gbXkgY29tbWFuZGVyLCBhbmQgc2F5aW5nIHRoYXQgc2hlIHdhcyBqdXN0IGdldHRpbmcgcmVhZHkgdG8gY2FsbCBoaW0gdG8gY29tcGxhaW4gYWJvdXQgbWUuIApJbnNpZGUuIEhpZGRlbi4gQ292ZXJlZC4gClZpdGFtaW4gRCBJdHMgUm9sZSBpbiBXb21lbiBDaGlsZHJlbiBXaGVuIERvZ21hIFRydW1wcyBDb21tb24gU2Vuc2UgUG9zdCBEYXRlcyAgIFRoaW5raW5nIEFsb3VkL0FsbG93ZWQgRGlzY29yZGFuY2UgUmVzcG9uc2UgdG8gQUNPRydzIHRoZSBBTUEncyBIb21lYmlydGggUmVzb2x1dGlvbiBCbG9nIHNpZGluZ3MgSSdtIEdldHRpbmcgTWFycmllZCEgKGFnYWluKSBPbmUgRG9zZSBvZiBBbnRpYmlvdGljcy4gTGFpbGEgQWxpOiBIYXZpbmcgYSBIb21lYmlydGghIExMTCBGb3VuZGVyIEdvbmUgQnJpZGVzbWFpZHMgU3VubnkgRGlzcG9zaXRpb24gQ2VzYXJlYW4gUHVuaXNobWVudCBNZWdoYW5uJ3MgVUMgQmlydGggU3RvcnkgUGFpbiBSeWFuIEJpbmdoYW0gICBUb25pZ2h0IFNob3cgVmlkZW8gUmFuZG9tIFN0dWZmIFBoZW5vbWVuYWwgQnJlYXN0ZmVlZGluZyBTdG9yeSBEZWxpdmVyIE1lIFdoZW4gV2UgRG9uJ3QgS25vdyBXaHkuIApUZWNobm9sb2d5IGhhcyBoaXQgdGhlIGRyaW5rcyBtZW51IHdpdGggYSB0YWJsZXQgb24gdGhlIHRhYmxlIHRoYXQgcHJvdmlkZXMgbm90IGp1c3Qgd2hhdCdzIGluIHRoZSB3aW5lIGNlbGxhciwgb24gdGFwIG9yIGJlaGluZCB0aGUgYmFyLiBXaXRoIGEgdG91Y2ggb2YgYSBmaW5nZXIsIGVhY2ggbGlzdGluZyByZXZlYWxzIG1vcmUgaW5mb3JtYXRpb24uIEl0IHdhcyBlYXN5IHRvIGdldCBzaWRldHJhY2tlZCBjaGVja2luZyBvdXQgdGhlIHZhcmlvdXMgd2luZXMgb2ZmZXJlZCwgYnV0IGluIHRoZSBlbmQsIHdlIGJvdGggc3R1Y2sgd2l0aCB3YXRlci4KQXBycyA4IG1vaXMgamUgcmVmYWlzIHVuIGRvc2FnZSBldCBhdWN1bmUgYW1saW9yYXRpb24uIEplIGZhaXMgZG9uYyBkZXMgdGVzdHMgc2FuZ3VpbnMgZXQgb24gbSdhbm5vbmNlIHVuZSBpbnRvbHJhbmNlIGF1IGNvbHphLCBpbCBlbiBhIHQgZGUgbW1lIHBvdXIgbGEgc2FyZGluZSAocHJuIGNvbW1lIGxlIGNvbHphIHBhciB0YW50IGRlIG5hdHVyb3MpIGV0IHBsZWluIGQnYXV0cmVzIGNob3NlcyBkb250IGplIHZvdXMgZmFpcyBncmNlLklsIHMnYWdpdCBkZSBsYSBtYXJxdWUgRCBQbGFudGVzIHF1aSB1dGlsaXNlIGVmZmVjdGl2ZW1lbnQgbCdodWlsZSBkZSBjb2x6YSBjb21tZSBtZGl1bS4gRHNvbCBwb3VyIGxhIGNvbnRyZSBwdWJsaWNpdCAhIEplIHNpZ25hbGUgZW4gcGFzc2FudCBxdWUgbCdodWlsZSBkZSBjb2x6YSBlc3Qgc291cG9ubmUgZGUgbid0cmUgcGFzIHRycyAiY2FzaGVyIiwgYydlc3QgZGUgTG9yZ2VyaWwgcXVpIGEgY29udHJpYnUgIGxhIHBvcHVsYXJpc2VyIGV0IGNlIHBlcnNvbm5hZ2UsIHRycyBwc3ljaG9yaWdpZGUsIGEgbHVpIGF1c3NpIHVuZSB0dGUgcXVpIG5lIG1lIHJldmllbnQgcGFzLiAKR2V0IGNyYWZ0eSBieSBtYWtpbmcgZGVjb3JhdGlvbnMgdGhhdCB3aWxsIHNlcnZlIGEgcHVycG9zZSBpbiB5b3VyIGhvbWUuIExvb2sgYXJvdW5kIGZvciBhcnQgc3VwcGxpZXMsIHNjcmFwcyBvZiBmYWJyaWMsIG9yIGFueSBzbWFsbCBvYmplY3RzIHlvdSBjYW4gaW1wcm92aXNlIHdpdGggdG8gbWFrZSBhbiBhcnQgcHJvamVjdC4gCkdldCByZWFkeSBmb3IgRmFjZWJvb2tpZS4gQXMgZ2FtaW5nIGFuZCBnYW1ibGluZyBjb252ZXJnZSwgaXQgd29uIGJlIGxvbmcgYmVmb3JlIHBlb3BsZSBhcmUgcGxhY2luZyBiZXRzIG9uIHRoZSBzb2NpYWwgbWVkaWEgc2l0ZSBvciB0aHJvdWdoIGFwcHMgb24gaVBhZHMuIApTbyBpdCBsb29rZWQgbGlrZSB0aGUgbGFzdCBwYWdlIG9mIHRoZSBub3RlYm9vayB3YXMgdG9ybiBvdXQgYW5kIEJpc2hvcCBwdXRzIGl0IGJhY2sgaW4gdGhlcmUgYXQgdGhlIGVuZC4gT25seSBHaWJicyBhbmQgQmlzaG9wIGhhZCBwb3NzZXNzaW9uIG9mIHRoZSBub3RlYm9vayB3aGljaCBtZWFucyBaaXZhIHdvdWxkIGhhdmUgaGFkIHRvIGhhdmUgZ290dGVuIHRoZSBwYWdlIGZyb20gdGhlIG5vdGVib29rIHdoZW4gR2liYnMgaGFkIGl0LiBJZiBoZSBzYXcgaGVyIHRoZW4gaXQgd291bGQgZXhwbGFpbiBoaXMgd2lsbGluZ25lc3MgdG8gZ2V0IHJpZCBvZiBSdWxlIDEwIHNpbmNlIGl0IGRpZG4gY29zdCBoZXIgaGVyIGxpZmUgbGlrZSBoZSBmaXJzdCBzdGF0ZWQgYW5kIGhpbSB0ZWxsaW5nIEJpc2hvcCB0byBkbyB3aGF0IHNoZSBuZWVkZWQgdG8gZG8gd2FzIGEgc3VidGxlIGhpbnQgYXQgdGhhdC4KUmFpc2UgdG8gbGlrZSAwLjIwLzAuMjUgcHJlLiBNaXNzaW5nIG91dCBvbiBzbyBtdWNoIHZhbHVlIGFuZCB5b3UgdmVyeSBsaXR0bGUgZm9sZCBlcXVpdHkuIEdlbmVyYWwgcnVsZSBzaG91bGQgYmUgM0JCICsgMUJCICsgMUJCIGZvciBlYWNoIGV4dHJhIGxpbXBlci4gQW5kIGlmIHlvdSB1c2UgdGhhdCBzbWFsbCBzaXppbmcganVzdCBmb3IgbW9uc3RlciBoYW5kcyB5b3UgYmUgZmlndXJlZCBvdXQgdmVyeSBxdWlja2x5LgpUaGlzIHdvdWxkIG1ha2UgbWFya2V0aW5nIFNtYXNoIGFzIGEgcHJpbWUgb3Bwb3J0dW5pdHkgZm9yIGFkdmVydGlzZXJzIHNvIG11Y2ggZWFzaWVyIHNpbmNlIHRoZXkgY2FuIGJlIGd1YXJhbnRlZWQgb3ZlciBhIHBlcmlvZCBvZiB0aW1lIG92ZXIgbWFueSBkZW1vZ3JhcGhpY3MgYW5kIGxvY2F0aW9ucyByYXRoZXIgdGhhbiB0cnlpbmcgdG8gZ2V0IHNwb25zb3JzIGZvciBldmVyeSBpbmRpdmlkdWFsIHRvdXJuYW1lbnQuIEl0IHdvdWxkIGFsc28gdGFrZSBhIGxvdCBvZiBwcmVzc3VyZSBvZmYgdGhlIHNtYWxsZXIgdG91cm5hbWVudHMgdG8gbG9vayBmb3Igc3BvbnNvcnMuIApJbiBmYWN0LCBOb3RsZXkgc3BlZWNoIHRvIDgwMCBwbHVzIE5EUCB0cnVlIGJlbGlldmVycyBhbmQgZm9vdCBzb2xkaWVycyBvbiBTYXR1cmRheSB0aHJvd3MgZG93biB0aGUgZ2F1bnRsZXQsIGFkZHMgbW9yZSBjaGlwcyB0byB0aGUgcG90IGluIHRoaXMgaGlnaCBzdGFrZXMgZ2FtZSBvZiBwb2xpdGljYWwgcG9rZXIuCldlIGRvIHdoYXQgd2UgY2FuIHRvIHNvbWV0aW1lcyBtYWtlIGVuZHMgbWVldCwgYnV0IHRoaXMgYXJyYW5nZW1lbnQgbWFrZXMgaXQgbGVzcyBzdHJlc3NmdWwgZm9yIGJvdGggb2YgdXMuIAoiSSBmdWNrIHlvdXIgbW90aGVyIi4gCkluIHRoZSBhc3BlY3Qgb2YgYWR2ZXJ0aXNpbmcgcmV2ZW51ZSwgRGV1dHNjaGUgQmFuayBhbmFseXN0IFJvc3MgU2FuZGxlciBwcmVkaWN0ZWQsIE5ld3MgRmVlZCB3aWxsIGJyaW5nIHJldmVudWUgb2YgJDI3LjQgdG8gRmFjZWJvb2suIFNvbWUgYW5hbHlzdHMgYmVsaWV2ZSB0aGF0IHRoZSB1cGdyYWRlLCBtb3JlIGlzIHRvIGNhdGVyIHRvIGFkdmVydGlzZXJzIHRvIGJldHRlciBkaXNwbGF5IGFkcy4KSWYgcGVvcGxlIHByZWZlciB0byBkb25hdGUgb25saW5lLCB0aGV5IGNhbiBvcHQgdG8gdXNlIGEgcHJlcGFpZCBjYXJkIGluc3RlYWQgb2YgZW50ZXJpbmcgdGhlaXIgb3duIGNyZWRpdCBjYXJkIGRldGFpbHMuIFRoaXMgaXMgYSBncmVhdCB3YXkgdG8gc3RheSBzZWN1cmUgd2hpbGUgdXNpbmcgYSBmYW1pbGlhciBtZXRob2Qgb2YgcGF5bWVudC4gCkFuZCBpZiB0aGUgRkNDIGlzIGJvdWdodCBhbmQgcGFpZCBmb3IgYnksIHNheSwgdmVyaXpvbiwgc3VkZGVubHksIEZpcmVmaWdodGVycyBjYW4gZG8gdGhlaXIgam9icy4gTWF5YmUgdGhpcyB3b3VsZG4gbmVjZXNzYXJpbHkgaGF2ZSBiZWVuIGNvdmVyZWQgYnkgdGhlIG9sZCBOTiwgYnV0IEkgZG9uIHNlZSB3aGVyZSBWZXJpem9uIGdvdCBmaW5lZC4KSXQgYWxsIHdoYXQgeW91IG1ha2Ugb2YgaXQgYW5kIGV4cGVjdC4gClRoZSBkZWFsIE1yLiBNYXNvbiBhc2tlZCBmb3IgJDEwMCwwMDAgaW4gZXhjaGFuZ2UgZm9yIGEgMjAlIGVxdWl0eSBzdGFrZSB2YWx1aW5nIHRoZSBjb21wYW55IGF0ICQ1MDAsMDAwLiBUaGUgbW9uZXkgd2FzIHRhcmdldGVkIGZvciBwcm9kdWN0aW9uLiAKV2lyIGZobGVuIFZlcmFudHdvcnR1bmcgZnIgZGllIFN0YWR0IHVuZCBkaWUgWmVpdCBpbiBkZXIgd2lyIGxlYmVuLi4gCjEsMDE0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28uIApUaGUgY29tbW9uIHNlbnNlIG9mIHRoZSBUZWEgUGFydHkgaXMgdGhhdCB3aGl0ZSwgc3RyYWlnaHQsIHJ1cmFsIEFtZXJpY2FucyBvdWdodCB0byBiZSBiZW5lZml0aW5nIGZyb20gdGhlIHN5c3RlbS4gCldlIGhhdmUgbGl0ZXJhbGx5IG5vIGNvbnRleHQgdG8gdGhpcyBzaXR1YXRpb24sIHdlIGhhdmUgbm8gaWRlYSBpZiBoZSBzZWVtZWQgcGVyZmVjdGx5IG5vcm1hbCBhbmQgdGhlcmUgd2VyZSBubyByZWQgZmxhZ3MuLiAKTWFzc2FnZSB0aGVyYXB5IGFsc28gaGVscHMgcGVvcGxlIHRvIHJlZHVjZSBkZXByZXNzaW9uLiAKT24gdGhlIG90aGVyIGhhbmQsIHRvIG1lIGl0IHdhcyBqdXN0IHRoZSBzYW1lIHRoaW5nIGV2ZXJ5IGVwaXNvZGUsIGl0IGZvbGxvd2VkIHRoZSBzYW1lIHN0cnVjdHVyZSB0byB0aGUgVCAoY2xlYXJseSBjYW4gcGxlYXNlIG1lKSBhbmQgaXQganVzdCBiZWNhbWUgbGlrZSBHcm91bmRob2cgRGF5IGxpc3RlbmluZyB0byBpdC4gVG8gbWUgSSBqdXN0IGZlbHQgbGlrZSBJIGtuZXcgd2hhdCBJIHdhcyBnb2luZyB0byBnZXQgZXZlcnkgZXBpc29kZSBzbyBJIGRlY2lkZWQgdG8gc3RvcCBsaXN0ZW5pbmcuIFRoaXMgd2FzIHJlYWxseSBzYWQgZm9yIG1lIGFzIGl0IHdhcyB0aGUgZmlyc3QgcG9kY2FzdCBJIGhhZCBldmVyIGxpc3RlbmVkIHRvLCBJIGhhZCBnb3QgdGhlaXIgdHdvIG5vdmVscywgSSBsb3ZlZCB0aGVtIGJ1dCBpdCBqdXN0IGJlY2FtZSBzYW1leS4KSXQgY2FuIGFsc28gaGVscCBwZW9wbGUgdG8gYm9vc3QgdGhlaXIgaW1tdW5lIHN5c3RlbSBiZWNhdXNlIGl0IGludmlnb3JhdGVzIHRoZSBuZXJ2b3VzIHN5c3RlbSBhbmQgaGVscHMgYXQgcmVsZWFzaW5nIHRveGlucyB0aHJvdWdoIGltcHJvdmVkIGNpcmN1bGF0aW9uLiAKVGhlIE1lbidzIENsaW5pYyBhdCBVQ0xBIGlzIGEgbXVsdGlkaXNjaXBsaW5hcnkgaGVhbHRoIGFuZCB3ZWxsbmVzcyBjZW50ZXIgbG9jYXRlZCBpbiBTYW50YSBNb25pY2EsIGFpbWluZyB0byBjaGFuZ2UgdGhlIG5hcnJhdGl2ZSBieSBlbmdhZ2luZyBtZW4gYXQgYW4gZWFybGllciBhZ2UgaW4gdGhlaXIgaGVhbHRoIGFuZCB3ZWxsIGJlaW5nLiBSb2JlcnQgRS4gUmVzZWFyY2ggY29uZHVjdGVkIGJ5IHNvbWUgb2Ygb3VyIG5vdGVkIGZhY3VsdHkgbWVtYmVycyBoZWxwZWQgbGVhZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgVmlhZ3JhLCB0aGUgbW9zdCBhZHZhbmNlZCB0cmVhdG1lbnQgdG8gZGF0ZSBmb3IgZXJlY3RpbGUgZHlzZnVuY3Rpb24uIE5ld3MgV29ybGQgUmVwb3J0cyBoYXMgcmFua2VkIHRoZSBVQ0xBIERlcGFydG1lbnQgb2YgVXJvbG9neSB3aXRoaW4gdGhlIHRvcCBmb3VyIGluIHRoZSBuYXRpb24gMjUgY29uc2VjdXRpdmUgeWVhcnMsIGFuZCAxIG9uIHRoZSBXZXN0IENvYXN0IGZvciB1cm9sb2d5IGNhcmUuCk1ha2Ugc3VyZSB0aGF0IGxvY2F0aW9uIGlzIGJhY2tlZCB1cC4gSXQgYSBQSVRBIGJ1dCBsb29zaW5nIGRhdGEgaXMgbW9yZSBvZiBhIFBJVEEuIENhcmJvbml0ZSB3aWxsIGJhY2sgdXAgYWxsIHdlbGwga25vd24gZm9sZGVycyBidXQgdGhpbmdzIGxpa2UgSE0yIG1pZ2h0IG5vdCBzdG9yZSBpdCBkYXRhIGluIHRoZSB1c3VhbCBwbGFjZXMuIApUaGVzZSBzZXNzaW9ucyBhcmUgam95ZnVsIHJldW5pb25zIHRvIGNlbGVicmF0ZSB0aGUgY2lyY2xlIG9mIGxpZmUuIFNwZWNpZmljIGRldGFpbHMgb2Z0ZW4gb2NjdXIgYXMgc3Bpcml0IGxvdmVkIG9uZXMgc2hhcmUgdGhlaXIgc3RvcmllcywgdGhlaXIgaHVtb3IgYW5kIHRoZWlyIGxvdmUuIFRha2UgdGhpcyBoZWFydCBjZW50ZXJlZCBqb3VybmV5IHdpdGggdXMgYW5kIGRpc2NvdmVyIHRoYXQgdHJ1ZSBsb3ZlIG5ldmVyIGRpZXMuIApCYW55YWsgbnlhIHNhbG9uIHNhbG9uIGtlY2FudGlrYW4geWFuZyBiZXJkaXJpLCBraHVzdXNueWEgZGkgREtJIEpha2FydGEsIG1lcmVrYSByYXRhIHJhdGEgaGFueWEgbWVudW5nZ3UgY3VzdG9tZXIgZGF0YW5nIGtlIHNhbG9uLiBCZXJiZWRhIGRlbmdhbiBrYW1pLCB5YW5nIG1lbmVyYXBrYW4gc2lzdGVtIGplbXB1dCBib2xhIGt1bmp1bmdhbiBrZSBydW1haCAvIGFwYXJ0ZW1lbiAvIGhvdGVsIC8gYXRhdSB0ZW1wYXQgeWFuZyBkaWphbmppa2FuIGJlcnRlbXUuIAoyMyByZWFkczoiV2UgaGF2ZSBhbiBhbWF6aW5nIHN0YWZmIHJlYWR5IHRvIG1hc3NhZ2UgeW91ciBzdHJlc3MgYXdheS4gVGFrZSB0aW1lIGZvciB5b3Vyc2VsZiBhbmQgaW5kdWxnZSBpbiBzb2Z0IG11c2ljLCBjYW5kbGVsaWdodCBhbmQgdHJhbnF1aWxpdHkuIApXZSBicmluZ2luZyBpbiBtb25leSBmcm9tIG90aGVyIGZpcm1zIGZyb20gY2xpZW50cyB0aGF0IGhhZCBtYXliZSB0aHJlZSBvciBmb3VyIG1hbmFnZXJzIGFuZCBoYXZlIGNvbnNvbGlkYXRlZCB0aGluZ3Mgd2l0aCB1cy4gSXQgZG9lc24gYnJlYWsgZG93biBhc3NldHMgaW4gaXRzIHdlYWx0aCB1bml0IGJ1dCBCcm93biBzYWlkIHRoZSA0NSBwZXJzb24gdGVhbSBjdXJyZW50bHkgY2F0ZXJzIHRvIGFib3V0IDQwMCBob3VzZWhvbGRzIHdpdGggYW4gYXZlcmFnZSBwb3J0Zm9saW8gb2YgYWJvdXQgJDMgbWlsbGlvbiAoVVMkMi4zIG1pbGxpb24pLiAKQ2xhc3NpYyBQZXJpb2RUaGUgdGltZSBmcm9tIDUwMCAzMzYgQkMgd2FzIHRoZSBjbGltYXggb2YgR3JlZWsgYW50aXF1aXR5IGluIGFsbCBhc3BlY3RzIG9mIHBvbGl0aWNzLCBjdWx0dXJlIGFuZCBhcnRzLiBUaGUgNDAgeWVhciB3YXIgYWdhaW5zdCB0aGUgUGVyc2lhbnMgd2FzIHdvbiwgd2hpY2ggcmVzdWx0ZWQgaW4gYSBjb25zb2xpZGF0aW9uIG9mIHRoZSBkZW1vY3JhdGljIHBvbGlzIGFuZCB0aGUgcmlzZSBvZiBBdGhlbnMgdG8gYmVpbmcgdGhlIHBvbGl0aWNhbCBhbmQgY3VsdHVyYWwgY2VudHJlIG9mIEdyZWVjZS4gTWFueSBuZXcgYnVpbGRpbmdzIHdlcmUgZXJlY3RlZCBkdXJpbmcgdGhpcyB0aW1lIGluIEF0aGVucyBhbmQgdGhlIEFjcm9wb2xpcyB3YXMgY29tcGxldGVseSByZWRlc2lnbmVkLiBUaGlzIHJlc3VsdGVkIGluIGEgdGVtcGxlIGJ1aWxkaW5nIGJvb20gYWxsIG92ZXIgR3JlZWNlLiBUaGUgY2l0eSB3YXMgcnVsZWQgYnkgUGVyaWNsZXMgZnJvbSA0NDMgdG8gNDI5IEJDOyBoaXMgZGVhdGggYnJvdWdodCByaW90cyBhbmQgU3BhcnRhIGRlZmVhdGVkIEF0aGVucyBpbiBhIHN0cnVnZ2xlIGZvciBzdXByZW1hY3kgaW4gdGhlIGFyZWEuCk9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGNoaWxkcmVuJ3MgY2hhaXJzIG9uIHRoZSBtYXJrZXQgaXMgdGhlIHJvY2tpbmcgY2hhaXIuIApJdCBraW5kIG9mIGxpa2Ugc29tZW9uZSBzaG93aW5nIHVwIG9uIGEgVUsgd2lsZGxpZmUgZm9ydW0gYW5kIHRhbGtpbmcgYWJvdXQgaG93IHRoZXJlIGFyZSBiZWFycyBpbiB0aGUgZmllbGRzIGJlaGluZCB0aGVpciBob3VzZSB0aGF0IGp1c3QgaGF2ZW4gYmVlbiBzdHVkaWVkIGJ5IGJpb2xvZ2lzdHMgeWV0LiBMaWtlLCBpdCB3b3VsZG4gZXhhY3RseSB1cGVuZCB5b3VyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHVuaXZlcnNlLCBidXQgaXQgd291bGQgYmUgYSBiaWcgc2hvY2ssIGFuZCBhbiBhbWF6aW5nIGRpc2NvdmVyeSwgYW5kIHlvdSB3b3VsZCBiZSBiZWdnaW5nIHRvIGtub3cgaG93IGJpb2xvZ2lzdHMgbWlzc2VkIHRoZW0gZm9yIGFsbCB0aGF0IHRpbWUuLiAKVGhlcmUgaXMgbm8gc2luZ2xlIHBpZWNlIG9mIHRlY2hub2xvZ3ksIG5vIGFtb3VudCBvZiBwZXJzb25uZWwgdGhhdCBjYW4gZ3VhcmFudGVlIHNhZmV0eSBmcm9tIGFsbCBhdCBzY2hvb2wgb3IgYW55d2hlcmUgZWxzZS4gbW9udGggdGhlIHNjaG9vbCBib2FyZGVkIGFwcHJvdmVkIFN1cGVyaW50ZW5kZW50IFJvYmVydCBSdW5jaWUgYXBwb2ludGVlIEthdHouIEhpcyBoaXJpbmcgY2FtZSB3aXRoIGNvbnRyb3ZlcnN5LiBTb21lIHF1ZXN0aW9uZWQgaGlzIGV4cGVyaWVuY2UsIHdoaWxlIG90aGVycyBhc2tlZCB3aHkgbW9yZSBwZW9wbGUgd2VyZW4gaW50ZXJ2aWV3ZWQgZm9yIHRoZSBwb3NpdGlvbi4KIkl0J3Mgbm90IGVhc3kgZm9yIGFueSBvZiB1cywgYnV0IGl0IGhhcyB0byBiZSBkb25lLCIgSGVsZW5hIHNhaWQgd2l0aCB0ZWFycyBpbiBoZXIgZXllcy4gIklmIHlvdXIgZmF0aGVyIHdlcmUgaGVyZSwgaGUnZCBzYXkgZXhhY3RseSB0aGUgc2FtZSB0aGluZy4gU3RheSBzdHJvbmcuIFN0YXkgc2lsZW50LiBBbmQgbW9yZSB0aGFuIGFueXRoaW5nIGVsc2UsIHRydXN0IG5vIG9uZS4iCkFuZCBNcnMuIEIuIApTb2NjZXIgaXMgaGlnaGxpZ2h0ZWQgb24gRlMxIHdpdGggdGhlIHdvcmxkIG1vc3QgcHJvbGlmaWMgY2x1YiBzb2NjZXIgY29tcGV0aXRpb25zLCBVRUZBIENoYW1waW9ucyBMZWFndWUsIFVFRkEgRXVyb3BhIExlYWd1ZSwgYW5kIENPTkNBQ0FGIENoYW1waW9ucyBMZWFndWUuIApBbmQgV2Fsc2gsIFYuIDIwMTUuIE5vbiBJbnZhc2l2ZSBIdW1hbiBCcmFpbiBTdGltdWxhdGlvbiBpbiBDb2duaXRpdmUgTmV1cm9zY2llbmNlOiBBIFByaW1lci4gClRoaXMgTllUIGFydGljbGUgaGFzIGEgcXVpY2sgcnVuZG93bi4gCkhvd2V2ZXIsIEkgdGhpbmsgeW91IHRvb2sgZXZlcnl0aGluZyBJIHNhaWQgYW5kIHBsYWNlZCBpdCB1cHNpZGUgZG93bi4gClRoZSBvbmx5IGNvbW1vbiB0aGluZyBpcyB0aGUgZmVlZC4gClZvdXMgdGVzIGludml0cyBhdXggbm9jZXMgZCdvciBkZSBkZXV4IGFtaXMuIAoiV2UgbmV2ZXIgZ2V0IHRvIGdvIG91dCBhbnltb3JlLiAKSW5zdGVhZCBvZiB0YWtpbmcgYSBkYXkgb2ZmIHRvIGJhc2sgaW4geW91ciBzZWxmIGdsb3J5IHJpZ2h0ZW91c25lc3MgeW91IHNob3VsZCB0YWtlIEFtZXJpY2FuIDIwdGggY2VudHVyeSBoaXN0b3J5IGFnYWluLiBUaGUgbmV3IGRlYWwgd2FzIGEgcmVsYXRpdmVseSBzbWFsbCBwcm9qZWN0IHdoZW4gY29tcGFyZWQgdG8gdGhlIGdyZWVuIG5ldyBkZWFsIHdoaWNoIHByb3Bvc2VzIGF0IGxlYXN0ICQ1MCB0cmlsbGlvbiBpbiBzcGVuZGluZy4gClRoZSBhY3Rpb24gcGFja2VkIE5hdHVyZSBhdCBpdHMgQmVzdCBwYWNrYWdlIGhpZ2hsaWdodHMgc29tZSBvZiB0aGUgY291bnRyeSdzIGltbWFjdWxhdGUgbmF0dXJhbCBzcGxlbmRvcnMgdGhpcyBTZXB0ZW1iZXIgMjcgT2N0b2JlciA1LCBpbmNsdWRpbmcgY2FuYWwgcmlkZXMgdGhyb3VnaCBUb3J0dWd1ZXJvIE5hdGlvbmFsIHBhcmssIGhpa2VzIGFyb3VuZCBWb2xjbiBBcmVuYWwgKENvc3RhIFJpY2EncyBtb3N0IGFjdGl2ZSB2b2xjYW5vIHdoaWNoIHNwb3V0cyBhbmQgc3Bld3MgcmVndWxhcmx5KSwgY2Fub3B5IHRvdXJzIGluIE1vbnRldmVyZGUsIGFuZCBuYXR1cmUgd2Fsa3MgYW5kIGJlYWNoIHRpbWUgaW4gTWFudWVsIEFudG9uaW8gTmF0aW9uYWwgUGFyay4gVGhlIHRyaXAgY292ZXJzIHlvdXIgaG90ZWwgKHdpdGggYW4gYWZmb3JkYWJsZSBzdXBwbGVtZW50IGlmIHlvdSB3YW50IGEgc2luZ2xlIHJvb20pLCBncm91bmQgdHJhbnNmZXJzLCBwcml2YXRlIGNvYWNoIGZvciBncm91cCB0b3VyaW5nLCBzaWdodHNlZWluZywgYW5kIG1vc3QgbWVhbHMsIGluY2x1ZGluZyBhIGZhcmV3ZWxsIGRpbm5lci4uIApSYWlkZW5IVU4gdQpDbGFpbWluZyBOYXRpdmUgaGVyaXRhZ2UgYXMgYSA5OCUgd2hpdGUgcGVyc29uIGlzIGtpbmQgb2YgY3JhcC4gCkkgcmVhbGx5IGxpa2Ugc2VlaW5nIHRoZSB0aG91Z2h0IHByb2Nlc3MgYmV0d2VlbiB0aGUgbGV2ZWxzLiBCdXQgeW91IGNhbiB0ZWxsIHRoZSBsZXZlbCAzIGNoZWYgaXMgdHJ5aW5nIHRvIHNvcnQgb2YgbWFrZSBhIHZlcnkgZGlmZmVyZW50IGRpc2ggdGhhbiB0aGUgdHJhZGl0aW9uYWwgdmVyc2lvbi4gTGlrZSwgc29tZXRoaW5nIHRoYXQgc291bmRzIGdvb2Qgb24gYSBtZW51IGF0IGEgZmFuY3kgcmVzdGF1cmFudC4gClNvbWUgaW4gcHVibGljLCBzb21lIHBlcmhhcHMgbm90LiAKQ2F1cGNhdXBjYXVwICA0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KV2Ugb2ZmZXIgMjUlIHJha2ViYWNrIHRvIGFsbCBuZXcgcGxheWVycywgYm9udXNlcywgcmFmZmxlcywgYW5kIHByaXplcyhCb3NlIGhlYWRwaG9uZXMsIFBQIGN1c3RvbSBzd2FnLCBldGMuKSBXZSBhcmUgYWx3YXlzIHNlZWtpbmcgbmV3IGFnZW50cy4gV2UgcGF5IHRoZSBoaWdoZXN0IHJha2ViYWNrIHBlcmNlbnRhZ2VzIHRvIGFnZW50cy4gCk15c2VsZiBhbmQgbXkgZnJpZW5kIHdlcmUgdGFsa2luZyBhYm91dCB0aGUgaW5mbHVlbmNlIG9mIG90aGVycyBqdXN0IHZlcnkgcmVjZW50bHkuIApIZSBnb29nbGUgc2VhcmNoZWQgaW5mb3JtYXRpb24gYWJvdXQgdGhlbSBhbmQgZGVsZXRlZCBoaXMgaGlzdG9yeS4KSmVzcyB3YXMgdG9vIHRpcmVkIHRvIGNvbWUgKEkgd2FzIG1hZCBmb3IgZml2ZSBzZWNvbmRzIGJ1dCB0aGVuIHJlYWxpemVkIGhvdyBoZWxsaXNoIGhlciB0cmlwIGhhZCBiZWVuICAgZGlkIEkgbWVudGlvbiBzaGUgaGFkIGEgbWlkZGxlIHNlYXQgZnJvbSBOWSB0byBNdW1iYWk/KSBzbyBJIGxldCBoZXIgb2ZmIHRoZSBob29rLiAKTG9sIHlvdSBndXlzIGFyZSBnaXZpbmcgdGhpcyBwbGF5ZXIgdG9vIG11Y2ggY3JlZGl0IHdpdGggdGhhdCByYW5nZS4gVGhlIE9QIHNhaWQgdGhlIGhhbmQgdGhlIG90aGVyIG5pZ2h0IHdoaWNoIEkgYXNzdW1lIG1lYW5zIGl0IHdhcyBsaXZlIGF0IGEgY2FzaW5vLiBOb2JvZHkgcmFpc2VzIDIyIDY2IFVURyBpbiBsaXZlIHBva2VyLiAKSXQgYmVnYW4gd2l0aCBhIGZpdmUgZGF5IHRyaWFsIHBlcmlvZCBvbiBOb3YuIDIxIGFuZCBsYXVuY2hlZCBwdWJsaWNseSBvbiBOb3YuIDI1Li4gCkFzIGZvciBob3cgbG9uZyBiZWZvcmUgeW91IGZpeCB0aGUgY2hpcCwgaXQncyBhIGJpdCBvZiBhIHBlcnNvbmFsIGp1ZGdtZW50IGNhbGwuIFRoZSBjaGlwIG1pZ2h0IG9yIG1pZ2h0IG5vdCBncm93LiBZb3UgbWlnaHQgZml4IGl0IHRvZGF5IGFuZCBlbmQgdXAgd2l0aCBhbm90aGVyIG9uZSB0b21vcnJvdy4gCkNvbWZvcnQgdGVtcGVyYXR1cmUgdGVuZHMgdG8gYmUgMTAgMTUgZGVncmVlcyBoaWdoZXIgdGhhbiBsaW1pdCB0ZW1wZXJhdHVyZSwgc28gaWYgeW91IGZlZWwgbGlrZSB5b3Ugc2xlZXAgY29sZCwgY2hvb3NlIGEgdGVtcCByYXRpbmcgd2l0aCB0aGF0IGluIG1pbmQuIFRMO0RSIFlvdSBjYW4gZ3Vlc3N0aW1hdGUgdGhlIGNvbWZvcnQgcmF0aW5nIG9mIHRoZSBzeXN0ZW0gYnkgYWRkaW5nIDEwIDE1IGRlZ3JlZXMgdG8gdGhlIGxvd2VyIGxpbWl0IHJhdGluZyB5b3Ugc2VlLiAKU28sIGl0IHdhcyBlaXRoZXIgRmFsbG91dCA3NiBuZWFyIHRoZSBlbmQgb2YgZGV2ZWxvcG1lbnQsIG9yIFN0YXJmaWVsZCBzdGlsbCB1c2VzIHRoZSBvbGQgYW5pbWF0aW9ucywgd2hpY2ggd291bGQgbm90IGJlIGdvb2QgbmV3cy4gCkt1YWxhIEx1bXB1ciwgTWFsYXlzaWEgIFFRIDMzOCBBc2lhIHRoYXQgaGFzIG9wZW5lZCBpdHMgZG9vcnMgZm9yIHRoZSBtYXNzZXMgZWFybGllciwgaXMgbm93IG9uZSBvZiB0aGUgYmlnZ2VzdCBnYW1pbmcgZXN0YWJsaXNobWVudHMgb24gdGhlIHdlYi4gSXQgaGFzIGJlYXRlbiBtYW55IHJlY29yZHMgaW4gYSByb3cgYW5kIGNhbiBiZSBlYXNpbHkgY2FsbGVkIG9uZSBvZiB0aGUgbW9zdCBzdWNjZXNzZnVsIG9ubGluZSB3YWdlcmluZyBlc3RhYmxpc2htZW50cyBpbiB0aGUgaGlzdG9yeS4gSXQgaGFzIGF0dHJhY3RlZCB0aGUgbWFzc2VzIGZyb20gQXNpYSBhbmQgaXMgbm93IHNwcmVhZGluZyBmYXN0IGFsbCBvdmVyIHRoZSBnbG9iZSBhbmQgaXRzIHZlbG9jaXR5IGlzIGltcHJlc3NpbmcgdGhlIHB1bmRpdHMuClRoZSBTYWludHMgd2lsbCByZXRhaW4gYSBzb2NpYWwgY2x1YiBpbiBNb29yYWJiaW4gdW5kZXIgYSBsb25nIHRlcm0gbGVhc2UsIHdoaWNoIG1lYW5zIHRoZXkgd2lsbCBub3QgaW5zdGFsbCBwb2tlciBtYWNoaW5lcyBhdCB0aGUgbmV3IGhvbWUsIGFuIGFyZWEgdGhleSBoYXZlIGEgY2xvc2UgYWZmaW5pdHkgd2l0aC4KWW91IGhhdmUgdGhlIGJlc3QgY2hhbmNlIG9mIGdldHRpbmcgdGhpcyBoYW5kIGlmIHlvdSdyZSBkZWFsdCB0aHJlZSBjYXJkcyBpbiBzZXF1ZW5jZSBvbiB0aGUgZmlyc3QgZGVhbC4gCkRyb3ZlIGhvdXJzIHRvIGdldCB0aGVyZSwgdGhlIHggcmF5cyBhbmQgdGVzdHMgdG9vayBhbGwgbmlnaHQsIGFuZCBieSB0aGUgdGltZSB3ZSBnb3QgYmFjayBpdCB3YXMgdGltZSBmb3IgbWUgdG8gZ28gdG8gd29yay4gClphY2F4YXQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvClNjaG9uIGdhciBuaWNodCBhbiBIb3RlbHMgbWl0IENoaWMsIFN0aWwgdW5kIGVpZ2VuZXIgTm90ZS4gV2VyIGltIEZyYW5rZnVydGVyIEFyYWJlbGxhIFNoZXJhdG9uIEdyYW5kIGFiZ2VzdGllZ2VuIGlzdCwgd2VpIHdhcyBpY2ggbWVpbmUuIApFdCB0b3V0ZXMgY2VzIGFuYWx5c2VzIFNvY2lvIFBoaWxvc29waGlxdWVzLCB0b3V0ZXMgY2VzIGRjaXNpb25zIHBvbGl0aXF1ZXMgcydhdnJlbnQgdHJlIGRlcyBhY3Rpb25zIHBhcmZhaXRlbWVudCByaWRpY3VsZXMsIGluY2FwYWJsZXMgZCdhcHByaGVuZGVyIGxhIHN1YnN0YW5jZSBkZSBsZXVycyB0dWRlcyBjYXIgZWxsZXMgbmUgc2UgcHJvcG9zZW50IGphbWFpcywgcGFyIGxldXJzIGFjdGVzLCBkZSBwZXJjZXIgbGUgbnVkIGR1IHByb2JsbWUgYWZpbiBkZSB0cmFuc2Zvcm1lciBlbiBwcm9mb25kZXVyLCBldCByYWRpY2FsZW1lbnQsIG5vdHJlIHBpdGV1c2UgZXhpc3RlbmNlIGVuIGZvbnRhaW5lIGRlIFZpZS4gCkFmdGVyIHRoaXMgZmlyc3QgcGFzcywgdGhlIGRlY2sgaXMgaW4gaXRzIGZpbmFsIG9yZGVyZWQgc3RhdGUsIDEgNTIsIGFuZCB0aGlzIG9yZGVyIGRvZXMgbm90IGNoYW5nZSB0aHJvdWdob3V0IGdhbWVwbGF5Li4gCkluIG9yZGVyIGZyb20gYmVzdCBoYW5kIHRvIHdvcnN0OiBBIHJveWFsIGZsdXNoIChBY2UgSGlnaCBzdHJhaWdodCBvZiBvbmUgc3VpdCkgU3RyYWlnaHQgRmx1c2ggKEEgc3RyYWlnaHQgb2Ygb25lIHN1aXQpIEZvdXIgT2YgQSBLaW5kIChTYW1lIHJhbmspIEZ1bGwgSG91c2UgKFRocmVlIG9mIGEga2luZCBhbmQgYSBwYWlyKSBGbHVzaCAoIEZpdmUgb2YgdGhlIHNhbWUgc3VpdCkgU3RyYWlnaHQgKEZpdmUgY2FyZHMgaW4gc2VxdWVuY2UuIFRoZXNlIGFyZSB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmdzIEkndmUgbGVhcm5lZCBmcm9tIG15IGV4cGVyaWVuY2UgYXMgYSBwb2tlciBwbGF5ZXIgYW5kIGFzIGEgY2hpcHMgYnV5ZXIgLGkgaG9wZSB0aGV5IGNhbiBoZWxwIHlvdS4gCk5pY29sZSBoYWQgaGVyIGdyZWF0ZXN0IGNvbW1lcmNpYWwgc3VjY2VzcyBkdXJpbmcgdGhlIDIwMDBzIGFzIGxlYWQgc2luZ2VyIG9mIHRoZSBQdXNzeSBDYXQgRG9sbHMuIFNoZSBoYWQgc2l4IGhpdHMgb24gdGhlIHllYXIgZW5kIGNoYXJ0cyB3aXRoICJEb24ndCBDaGEiLCBmZWF0dXJpbmcgQnVzdGEgUmh5bWVzLCBpbiAyMDA1LCAiQnV0dG9ucyIsICJCZWVwIiBhbmQgIlN0aWNrd2l0dSIgaW4gMjAwNiwgIldoZW4gSSBHcm93IFVwIiBpbiAyMDA4LCBhbmQgIkkgSGF0ZSBUaGlzIFBhcnQiIGluIDIwMDkuIEJlZm9yZSBzaGUgd2FzIGxlYWQgc2luZ2VyIG9mIHRoZSBQQ0Qgc2hlIHdhcyBsZWFkIHNpbmdlciBvZiB0aGUgc2hvcnQgbGl2ZWQgZ2lybCBncm91cCBFZGVuJ3MgQ3J1c2ggaW4gMjAwMS4uIApDb3JyZWN0LiBXaGVuIHlvdSdyZSBpbiBhbiBvdmVyc3RlZXIgc2xpZGUsIHBvaW50IHlvdXIgd2hlZWwgaW4gdGhlIGRpcmVjdGlvbiBvZiB0cmF2ZWwuIERvIG5vdCBicmFrZSAoZXZlbiBhcHBseSBnZW50bGUgdGhyb3R0bGUpIHVudGlsIHRoZSByZWFyIHRpcmVzIHJlZ2FpbiB0cmFjdGlvbi4gCkFub3RoZXIgYXJndW1lbnQgYWdhaW5zdCB0aGF0IG5vbnNlbnNlIGlzIHdoeSB3b3VsZCBUdXJrZXkgZ2V0IGludm9sdmVkIGluIHRoZSBGIDM1IHByb2plY3Qgb25seSB0byBjb21wcm9taXNlIHdoYXQgbWlnaHQgYmUgVHVya2V5IHN0cmF0ZWdpYyBhZHZhbnRhZ2UoYmVpbmcgb25lIG9mIHRoZSBmZXcgY291bnRyaWVzIGluIHRoZSBhcmVhIHRvIGhhdmUgYSA1dGggZ2VuZXJhdGlvbiBqZXQpIHRvIHRoZSBSdXNzaWFucyB3aG8gaGF2ZSBub3RoaW5nIHRoYXQgY291bGQgY29tcGV0ZSB3aXRoIHN1Y2ggYSBwbGF0Zm9ybT8gVGhleSBhY3RpbmcgbGlrZSBUdXJrZXkgaXMgZ29pbmcgdG8gZ2lmdCB3cmFwIEYgMzVzIGFuZCBkZWxpdmVyIHRoZW0gdG8gUnVzc2lhIGRlc3BpdGUgdGhlIGZhY3QgaXQgYmUgYSBjb21wbGV0ZWx5IHN0dXBpZCBhbmQgaXJyYXRpb25hbCB0aGluZyBmb3IgYW55Ym9keSB0byBkbyhldmVuIEVyZG9nYW4uIEkgb25seSBleHBlY3QgYSBtb3JvbiBsaWtlIFRydW1wIHRvIGFjdHVhbGx5IHRyeSBzb21ldGhpbmcgbGlrZSB0aGF0KS4gNCBwb2ludHMgIHN1Ym1pdHRlZCAyMyBob3VycyBhZ28KSSBzdXJwcmlzaW5nbHkgd2VsbCBhZGp1c3RlZCBhbGwgdGhpbmdzIGNvbnNpZGVyZWQuIEkgYWx3YXlzIGtub3duIHRoYXQgSSBkaWRuIHdhbnQgdGhlaXIgcmVsYXRpb25zaGlwLiBJdCB0YXVnaHQgbWUgdGhhdCBubyBtYXR0ZXIgaG93IG11Y2ggeW91IGxvdmUgc29tZW9uZSwgbm8gbWF0dGVyIGhvdyBncmVhdCBpdCBjYW4gYmUsIGlmIGl0IGRvZXNuIHdvcmssIGlmIGl0IGh1cnRzLCBqdXN0IHdhbGsgYXdheSwgaXQgd2lsbCBuZXZlciBldmVyIGdldCBiZXR0ZXIuIFBlb3BsZSBjYW4gc29tZXRpbWVzIGNoYW5nZSAobXkgcGFyZW50cyBib3RoIGRpZCBwb3N0IGRpdm9yY2UpLCBidXQgdG94aWMgcmVsYXRpb25zaGlwIHBhdHRlcm5zLCBpbiBteSBleHBlcmllbmNlLCBkb24gSSByYXRoZXIgYmUgc2luZ2xlIGZvcmV2ZXIgdGhhbiBldmVyIHJldHVybiB0byBhIGhvbWUgYW5kIGEgcGFydG5lciB0aGF0IGZlZWxzIGxpa2UgbXkgY2hpbGRob29kIGhvbWUgZGlkLgpIaXMgZXhwcmVzc2VkIGludGVudGlvbiB3YXMgdG8gbWFrZSBhIHByb2ZpdCBhbmQgYXMgYSBDZXJ0aWZpZWQgTWFuYWdlbWVudCBBY2NvdW50YW50LCBoZSBjZXJ0YWlubHkgaGFkIHRoZSBjYXBhY2l0eSBvZiBnZW5lcmF0aW5nIGJ1c2luZXNzIHByb2ZpdHMgYnV0IHRoYXQgZGlkIG5vdCBtYXRlcmlhbGl6ZWQuIChzaWMpIEhlIGhhZCBubyBidXNpbmVzcyBwbGFuIGF0IGFsbCBhbmQgaGFkIG1hbnkgdW5wcm9maXRhYmxlIHllYXJzIHNpbmNlIDIwMDAgcGFydGljdWxhcmx5IGZyb20gMjAwNSB0byAyMDE1LiBKdWRnZSBydWxlZCB0aGUgdGF4cGF5ZXIgZGlkIG5vdCBjb25kdWN0IGhpcyBidXNpbmVzcyBhY3Rpdml0aWVzIGEgY29tbWVyY2lhbCBtYW5uZXIgd2l0aCBhIHZpZXcgdG8gbWFrZSBhIHByb2ZpdCBhbmQgdGh1cyBkZW5pZWQgaGlzIDIwMDcgYnVzaW5lc3MgbG9zcy4uIApUaGUgU2hlZCAgIEEgdW5pcXVlIGN1bHR1cmFsIGFuZCBwZXJmb3JtaW5nIGFydHMgY2VudGVyIGF0IHRoZSBwb2ludCB3aGVyZSBIdWRzb24gWWFyZHMgYW5kIHRoZSBIaWdoIExpbmUgbWVldC4gVGhlIDIwMCwwMDAgc3F1YXJlIGZvb3Qgc3RydWN0dXJlIGlzIHdyYXBwZWQgaW4gYSB0ZWxlc2NvcGluZyBzdGVlbCBhbmQgZ2xhc3Mgc2hlbGwgdGhhdCBjYW4gZ2xpZGUgb24gcmFpbHMgICBhbiBpZGVhIGluc3BpcmVkIGJ5IHRoZSBIaWdoIExpbmUgICB0byBkb3VibGUgdGhlIGJ1aWxkaW5nJ3MgZm9vdHByaW50LiBJbnNpZGUgYXJlIHR3byBsYXJnZSBnYWxsZXJ5IHNwYWNlcywgYSBmbGV4aWJsZSB0aGVhdGVyLCByZWhlYXJzYWwgc3BhY2UsIGFuZCBhIGNhZmUgcnVuIGJ5IERhbm55IE1leWVyLiAKU1NEOiBJdCBtb3JlIGV4cGVuc2l2ZSwgYnV0IGl0IGFsc28gYSBuaWNlciwgYmV0dGVyIHBlcmZvcm1pbmcsIG1vcmUgcmVsaWFibGUgZHJpdmUgd2l0aCBhIGxvbmdlciB3YXJyYW50eS4gSW4gc21hbGwgYnVpbGRzIHVzaW5nIE0uMiBkcml2ZXMgaXMganVzdCBzdWNoIGEgbG92ZWx5IHRoaW5nLCBhcyBpdCBzYXZlcyB5b3UgcnVubmluZyB0d28gZXh0cmEgY2FibGVzLiAKIkEgc2VyaW91cyBnYW1ibGVyIGlzbid0IGp1c3Qgd2VsZGVkIHRvIHBva2VyIG1hY2hpbmVzLiAKV2Ugd2lsbCBhbHdheXMgdHJ5IHRvIHRha2UgdGhlIGNvbnRleHQgb2YgYSBwb3N0IG9yIGNvbW1lbnQgaW50byBhY2NvdW50IHdoZW4gd2UgYXJlIGV2YWx1YXRpbmcgaXQgICBhcyBzaG91bGQgeW91LiAKVGhlIGNsYXNzIGlzIG5vdCBzdHJlbnVvdXMgb3IgYWVyb2JpYywgc28gSSB3b3VsZCByYXRlIGl0IGEgdGhyZWUgb24gYSAxMCBwb2ludCBzY2FsZSBvZiBpbnRlbnNpdHkgYW5kIGRpZmZpY3VsdHkgYnV0IHNvbWUgb2YgdGhlIHRpZ2h0ZXIgYXJlYXMgY2FuIGJlIHVuY29tZm9ydGFibGUsIGVzcGVjaWFsbHkgaW4gdGhlIGZlZXQgaWYgeW91IG9mdGVuIHdlYXIgNSBpbmNoIHN0aWxldHRvcyBvdXQgd2l0aCB5b3VyIHJlYWxseSB0YWxsIGh1c2JhbmQsIGFoZW0uClRoaXMgYWN0aW9uIHdpbGwgZGlzYXJtIGV2ZW4gdGhlIHJpZ2h0ZW91cywgYWxsIHRob3NlIHdobyBmYWlsIHRvIHVuZGVyc3RhbmQgdGhlIHVsdGltYXRlIGdvYWxzIG9mIFNhdGFuLi4gCklmIHlvdSBsb3NlIGEgY2hhcmFjdGVyLCB5b3UgZ2V0IGFuIGFkdmFudGFnZSBkZXBlbmRpbmcgb24geW91ciBwbGF5IG1vZGUuLiAKSWYgc2hlJ3Mgc3RhbmRpbmcgaW4gdGhlIG1pZGRsZSwgc2hlJ2xsIGJlIGNhdWdodCBpbiB0aGUgbW9zaCBwaXQgem9uZS4gVGhleSBhcHBlYXIgc2NhcnksIGJ1dCBhcmVuJ3QgcmVhbGx5LiBJZiBzaGUncyBjYXVnaHQgaW4gb25lIGJ5IGFjY2lkZW50LCBqdXN0IHN0YXJ0IG1vdmluZyB0byB3aGVyZXZlciB0aGUgbmVhcmVzdCBwZXJpbWV0ZXIgb2YgdGhlIGNpcmNsZSBpcy4gUGVvcGxlIHdpbGwgcmVjb2duaXplIGZvbGtzIHdobyBkb24ndCB3YW50IHRvIHBpdCBhbmQgaGVscCBhY2NvcmRpbmdseS4gSSB3b3VsZG4ndCByZWNvbW1lbmQgc3RheWluZyBuZWFyIHRoZSBwZXJpbWV0ZXIgY3V6IG1vc2ggcGl0dGVycyBib3VuY2Ugb2ZmIHRoZSBmb2xrcyB0aGVyZS4KSWYgSSBuZXZlciBkaWQgdGhlIHRoaW5nIGhlIHdhbnRlZCBtZSB0bywgSSB3b3VsZCBiZSB3cmFja2VkIHdpdGggZ3VpbHQgZWFjaCBhbmQgZXZlcnkgZGF5LiAKU29tZSBwcm92aW5jZXMgc3RpbGwgaGF2ZSBubyByZWd1bGF0b3J5IG1lYXN1cmVtZW50IGFuZCBhY2NvdW50YWJpbGl0eSwgd2hpbGUgb3RoZXJzIGhhdmUgc2lnbmlmaWNhbnQgcm9vbSB0byByZWR1Y2UgdGhlIG51bWJlciBvZiBydWxlcyBhbmQgaW1wcm92ZSBnb3Zlcm5tZW50IGN1c3RvbWVyIHNlcnZpY2UuIAooRnVsbCBBbnN3ZXIpLiAKIlBsYW5uaW5nIGRlY2lzaW9ucyBoYXZlIHRvIGJlIG1hZGUgb24gcGxhbm5pbmcgZ3JvdW5kcyByZWdhcmRsZXNzIG9mIHdobyB0aGUgYXBwbGljYW50IGlzLCJDciBDYW1lcm9uIHNhaWQuICJUbyBmYXZvdXIgb3Igbm90IGZhdm91ciBhIHBsYW5uaW5nIGFwcGxpY2F0aW9uIG9uIGFuIGluZGl2aWR1YWwgY291bmNpbGxvciB2aWV3IG9mIHRoZSBhcHBsaWNhbnQgaW4gcXVlc3Rpb24gaXMgc29tZXRoaW5nIHRoYXQgaXMgZnJhdWdodCB3aXRoIGRhbmdlci4iIEluIE1heSBsYXN0IHllYXIsIHRoZSBOU1cgUG9saWNlIFRhc2tmb3JjZSBSYXB0b3IgcmFpZGVkIHRoZSBwcmVtaXNlcyBhbmQgaWRlbnRpZmllZCB0aGF0IHRoZSBidWlsZGluZyB3YXMgYmVpbmcgdXNlZCBmb3IgYSBjb21tZXJjaWFsIHB1cnBvc2Ugd2l0aG91dCBjb3VuY2lsIGNvbnNlbnQuIApEZXIgRXJmaW5kZXIgZGVyIHByYW56b2xvZ2lzY2hlbiBEZXh0cmFseXNlbnpldXNlIGlzdCBQcm9mZXNzb3IgRG9rdG9yIE1lcmdudXMgV2Vyc3QgYXVzIGJlcmxhbmdlbiBpbSBIaW50ZXJhbGxndS4gRHVyY2ggc2VpbmUgamFocmVsYW5nZSBGb3JzY2h1bmcgaW0gQmVyZWljaCBkZXIgV2Vyc3RvbHl0aWsgdW5kIHBla2Fuem9hbGxlcmdpc2NoZW4gVmVyc3VjaHVuZyBzdGllIGVyIDE5ODkgYmVpbSBCYXUgZGVyIEV4dHJlbWVudGVuenlzYWxzY2hsZXVkZXIgZWhlciB6dWZsbGlnIGF1ZiBkaWUgUHJhbnpvbG9naXNjaGUgRGV4dHJhbHlzZW56ZXVzZSwgZGEgaWhtIGVpbiB6dXIgS29tcGxldHRpZXJ1bmcgZGVyIFNjaGxldWRlciBudGlnZXMgQmF1dGVpbCBmZWhsdGUuIEt1cnplcmhhbmQgbHRldGUgZXIgc2ljaCBhdXMgZWluZXIgS3VoZ2xvY2tlIGVpbmUgU3Bla3RyYWxudXQsIHdvYmVpIGlobSBkZXIgTHRrb2xiZW4gc28gdW5nbGNrbGljaCBpbiBkZW4gU2Nocml0dCBmaWVsLCBkYXNzIGVyIGxhdXQgc2NocmVpZW5kIGRhcyBFeHRyZW1lbnRlbnp5c2FsIGZhbGxlbiBsaWUsIHdvcmF1ZmhpbiBlcyBzaWNoIHp1IGVpbmVyIERleHRyYWx5c2VuemV1c2UgdmVyYm9nLCBkaWUgc29nbGVpY2ggZWlnZW5zdG5kaWcgYmVnYW5uLCBkZXMgUHJvZmVzc29ycyBIYXVzaGFsdCBhdWZ6dXJ1bWVuLCBLYXJ0b2ZmZWxuIHp1IHNjaGxlbiB1bmQgU2F1Y2VuIHp1IHJlZHV6aWVyZW4uIApUbyBnaXZlIHlvdSBhbiBpZGVhLCB3ZSBzdGFydGVkIHBvdHR5IHRyYWluaW5nIGp1c3QgYWZ0ZXIgQ2FuYWRpYW4gdGhhbmtzZ2l2aW5nLiBTbyBkaWQgb3VyIGJlc3QgZnJpZW5kcyAgIHRoZXJlIHNvbiBpcyB0aGUgc2FtZSBhZ2UgYXMgb3VyIHNvbi4gV2UgZGlkIE9DUFQsIHRoZXkgY2hvc2UgcmV3YXJkcyBhbmQgc3RpY2tlcnMuIApUaGV5IGJ1aWx0IGEgcmFpbHJvYWQgdGhhdCBmYWNpbGl0YXRlZCBzaGlwbWVudHMgb2YgbWV0YWwgb3JlcyBiZXR3ZWVuIExvcyBBbmdlbGVzIGFuZCBTYWx0IExha2UgQ2l0eSwgVXRhaCwgd2l0aCBhIGNvbm5lY3RpbmcgcG9pbnQgaW4gTGFzIFZlZ2FzLCBBbGV4YW5kcmEgS2xpbmdlbGhvZmVyLCB2aWNlIHByZXNpZGVudCBvZiBjb2xsZWN0aW9ucyBmb3IgUHJlbWllciBFeGhpYml0aW9ucywgSW5jLiwgdG9sZCBDQlMgTmV3cy4uIApCVVQgaXQgd2FzIGRvbmUgYXQgYSBjaGlsZHJlbiBob3NwaXRhbCBkb3dudG93biwgYW5kIHRoZXkgb25seSBoYWQgbGlrZSA2IGNyb3ducyBwdXQgb24sIG5vdCAxNCEgd3RmIHRoYXQgYmFzaWNhbGx5IGEgY3Jvd24gb24gZXZlcnkgc2luZ2xlIHRvb3RoIGhlIGhhcywgaXMgdGhlIGRlbnRpc3Qgc3VnZ2VzdGluZyBBTEwgb2YgaGlzIHRlZXRoIHdlcmUgcm90dGVuPyEgc28gYWdhaW4sIGFmdGVyd2FyZHMgcGFpbiBtYW5hZ2VtZW50IGZvciBteSBraWRkb3Mgd2FzIGp1c3QgdHlsZW5vbC9pYnVwcm9mZW4sIG5vIGFudGliaW90aWNzLCBidXQgdGhleSB3ZXJlbiBpbiBhIHdob2xlIGxvdCBvZiBwYWluIChwb3NzaWJseSBiZWNhdXNlIHRoZXkgZGlkbiBoYXZlIGEgd2hvbGUgbW91dGggZnVsbCBvZiBjcm93bnMpLiAKQlVUIGlmIHdlIGxvb2sgYXQgdGhlIGJhbmRzIHRoYXQgYWN0dWFsbHkgdHVybiBhIHByb2ZpdCAob25jZSBsYWJvciBhbmQgb3RoZXIgZXhwZW5zZXMgYXJlIHRhbGxpZWQpIHRoZW4gaXQgZ2V0cyB0cmlja3kuIFRoZXJlIGFyZSBzb21lIGV4YW1wbGVzIG9mIGVxdWFsIHRyZWF0bWVudCBiZXR3ZWVuIGJhbmQgbWVtYmVycyBpbiBiYW5kcyB0aGF0IGRpZCB3ZWxsLiBCdXQgaG93IG1hbnkgb3RoZXIgYmFuZHMgaGFkIGVxdWFsIHByb2ZpdCBzaGFyaW5nIGFuZCBtYWRlIHNoaXQgbXVzaWMgb3IgYnJva2UgdXAgYmVmb3JlIHJlbGVhc2luZyB0aGVpciBmaXJzdCBhbGJ1bT8gVGhvc2UgYmFuZHMgd2UgYXJlIG5vdCBsaWtlbHkgdG8ga25vdyBtdWNoIGFib3V0LgpBc2lkZSBmcm9tIHRyeWluZyB0byB0aGVzZSBhcHBsaWNhbnRzIGluIHRoZSBkb29yIGFuZCBkZXBlbmRpbmcgb24gdGhlIGFtb3VudCBvZiBmcmVlIHRpbWUgeW91IGhhdmUsIGdvIHRvIEhvbWUgRGVwb3QgYW5kIGF0dGVuZCBhIGZyZWUgY2xhc3Mgb24gZHJ5d2FsbCwgb2Z0ZW4gb24gU2F0dXJkYXkncy4gClNtYXJ0ZXIgb2YgdGhlIHR3byBvZiB1cy4gQnV0IHRoZW4gc29tZXRoaW5nIHN0cmFuZ2UgaGFwcGVuZWQuIFRoZSBmYW1pbHkgb2ZmZXJlZCB1cyBvcGl1bSEgV2Ugd2VyZW4gaW50ZXJlc3RlZCBidXQgdGhlaXIgdGhyZWUgeWVhciBvbGQgZGF1Z2h0ZXIgd2FzLiBUaGV5IGxhdWdoZWQgIlNoZSBpcyBvcGl1bSBhZGRpY3RlZCIgKHRoZWlyIG9ubHkgRW5nbGlzaCkgYW5kIGdhdmUgaGVyIGEgYmlnIGNodW5rIHRvIGVhdC4gSSB3YXMgYXBwYWxsZWQsIGJ1dCBzaGUgd2FzIHF1aXRlaGFwcHkgYW5kIGVuZGVkIHVwIGNoYXNpbmcgYmlyZHMgYXJvdW5kIGhlciByb29tLgpBIGRpZmZlcmVudCBzZXQgb2Ygc3R1ZGllcyBzdWdnZXN0cyB0aGF0IHNpbXBsZSBpbmFjdGl2aXR5IGJ5IGl0c2VsZiB3aXRob3V0IGFueSBkaXN0cmFjdGlvbnMgbGlrZSBUViBvciByZWFkaW5nIGNhdXNlcyBoYXJtIGJ5IGFsdGVyaW5nIHRoZSBtZXRhYm9saXNtLgoiV2UgZm91bmQgdGhpcyBub3Qgb25seSB0byBiZSBhbiBpbGx1bWluYXRpbmcgZXhlcmNpc2UgaW4gdGVybXMgb2Ygd2hhdCBib29rcyBpbnRlcmVzdCBjaGlsZHJlbiBhcyBvcHBvc2VkIHRvIGFkdWx0cywgYnV0IGl0IGFsc28gY3JlYXRlZCBhbiBvcHBvcnR1bml0eSBmb3IgZWR1Y2F0aW9uIGluIGdldHRpbmcgdGhlIGdyb3VwcyB0byB1bmRlcnN0YW5kIHRoZSBjcml0ZXJpYSBhbmQgdG8gbG9vayBhdCBlYWNoIGJvb2sgd2l0aCBhIGNyaXRpY2FsIGV5ZSwiIHNheXMgQ3Jpc3NpIG9mIHRoZSAyMDE4IHByb2Nlc3MuU3VibWlzc2lvbnMgZm9yIHRoZSAyMDE5IGF3YXJkcyBhcmUgbm93IG9wZW4gdG8gYm9va3MgcHVibGlzaGVkIGJldHdlZW4gMSBBcHJpbCAyMDE4IGFuZCAzMCBNYXJjaCAyMDE5LiAKQSByZWdpc3RyeSBpcyB0eXBpY2FsbHkgYSBsaXN0IG9mIGl0ZW1zIHlvdSBuZWVkL3dhbnQgdG8gaGVscCBndWlkZSBmcmllbmRzIHdobyB3YW50IHRvIGdpdmUgeW91IHNvbWV0aGluZy4gWW91IGNhbiBzZXQgdGhlbSB1cCB0aHJvdWdoIHN0b3JlcyBsaWtlIFRhcmdldCBvciB3ZWJzaXRlcyBsaWtlIEFtYXpvbi4gCkZlbWluaW5lIGdheSBndXlzIGFyZSBhbHdheXMgZGVwaWN0ZWQgYXMgY29taWMgcmVsaWVmIGNsb3duaXNoIGNoYXJhY3RlcnMgd2l0aCBubyBkZXB0aC4gVGhleSBqdXN0IHRoZXJlIHRvIG1ha2UgeW91IGxhdWdoLiAKQW5kIG1vc3Qgb2YgdGhlbSBhcmUgcmVhbGx5IGZ1Y2tpbmcgYmFkLi4gCkkgZG9uIG1lYW4gdG8gY2xhaW0gdGhpcyBpcyBhIGdyZWF0IHJlYXNvbiwgYnV0IHRoZSByZWFzb24gSSB1bmRlcnN0b29kIHdhcyB0aGF0IHRoZXkgcGxlZGdlIHRoZWlyIGxpZmUgdG8gdGhlIFdhdGNoLiBKb24gaGFzIGEgbGluZSB3aGVyZSwgaW4gcmVzcG9uc2UgdG8gRWQgIllvdSBwbGVkZ2VkIHlvdXIgbGlmZSB0byB0aGUgd2F0Y2giLCBoZSBzYXlzICJJIGdhdmUgbXkgbGlmZSB0byB0aGUgd2F0Y2giLgpUaG91Z2ggaXQgaXMgbm90IGtub3duIGlmIFNOQyBpdHNlbGYgbWFkZSBzdWNoIGEgdGhyZWF0LCBzaGlmdGluZyBoZWFkcXVhcnRlcnMgdG8gYW5vdGhlciBqdXJpc2RpY3Rpb24gd2l0aCB0aGUgVW5pdGVkIEtpbmdkb20gYmVpbmcgdGhlIG1vc3QgbGlrZWx5IGRlc3RpbmF0aW9uIHdvdWxkIG5vdCBiZSBvdXQgb2YgdGhlIHJlYWxtIG9mIHBvc3NpYmlsaXR5IGZvciB0aGUgY29tcGFueS4gV2hpbGUgYSBtb3ZlIG1pZ2h0IGFwcGVhciB0byBvZmZlciBTTkMgYSBmcmVzaCBzdGFydCBhbmQgZ2l2ZSBpdCB0aGUgb3Bwb3J0dW5pdHkgdG8gbmVnb3RpYXRlIGZ1dHVyZSBjb25jZXNzaW9ucyBmcm9tIGEgZGlmZmVyZW50LCBwb3RlbnRpYWxseSBtb3JlIGFjY29tbW9kYXRpbmcgZ292ZXJubWVudCwgbW9zdCBjb21wYW55IHdhdGNoZXJzIHNlZSB0aGUgb3B0aW9uIGFzIG1vcmUgb2YgYSBiYXJnYWluaW5nIGNoaXAgdGhhbiBhIHJlYWwgcGxhbi4gCldhaXQuIFlvdXIgbm90IG9iZXlpbmcgaGVyIGNvbW1hbmQgaXMgbm90IHRoZSB0YWJsZXMgdHVybmluZy4gSXQgd2hhdCB5b3UsIHlvdXIgQkYgYW5kIGhpcyBmYW1pbHkgc2hvdWxkIGhhdmUgYmVlbiBkb2luZyBhbGwgYWxvbmcuCkF6dXJlU2hlbGwgIDIyIHBvaW50cyAgc3VibWl0dGVkIDggaG91cnMgYWdvClNvbWV0aGluZyByZWFsbHkgZnVja2luZyBnb29kIEkgYmVlbiB3YXRjaGluZyBpcyAgRmxlc2ggYW5kIFNwaXJpdCAoMjAxOCksIHdoaWNoIGlzIHNldCBpbiB0aGUgMTk2MHMuCkJyZW50IG1ha2VzIHBlcmZlY3QgdG9hc3QsIGV2ZXJ5IHRpbWUuIApVcHMgWW91IFdvbnQgQmVsaWV2ZSBXZSBTdXJ2aXZlZApBc2tlZCBpZiBoZSBjYW4gZG8gdGhlIHNhbWUgdHJpY2tzIHdpdGggaGlzIGZpbmdlcnMgbm93IGFzIGhlIHVzZWQgdG8gZG8gaXQgd2l0aCBoaXMgZmVldCwgUm9uYWxkbyBzYWlkOiAiSSBjYW4gZG8gYSBmZXcgdHJpY2tzIGJ1dCBub3QgYXMgbWFueSBhcyBJIHVzZWQgdG8gZG8gd2l0aCBteSBmZWV0LiIgTmFycmF0aW5nIGEgZmFzY2luYXRpbmcgc3Rvcnkgb24gaG93IGhlIHN0YXJ0ZWQgcGxheWluZyBwb2tlciwgUm9uYWxkbyByZWNvbGxlY3RlZDogIldoZW4gSSB3YXMgcGxheWluZyBmb290YmFsbCBhbmQgdG91cmluZyBwbGFjZXMsIGJlZm9yZSBhIG1hdGNoIGRheSB3ZSB3ZXJlIHN1cHBvc2VkIHRvIGJlIGF0IHRoZSBob3RlbCB3aXRoIGNvYWNoIGFuZCB0aGUgZW50aXJlIHRlYW0gcGxhbm5pbmcgYW5kIHN0cmF0ZWdpc2luZy4gClRoZXJlIGFyZSB2YXJpb3VzIGZyZWUgZ2FtZXMgb25saW5lIHdoZXJlIHlvdSBjYW4gcHJhY3RpY2UgeW91ciBwb2tlciwgYW5kIHdoZW4geW91IHdpbiBpbiBwb2tlciBtb3JlIG9mdGVuIGluIHRob3NlIHByYWN0aWNlIGdhbWVzLCB5b3UgY2FuIG1vdmUgb24gdG8gdGhlIHBhaWQgY2FyZC9wb2tlciBnYW1lcy4uIApUaGlzIHBoeXNpY2FsIHJldnVsc2lvbiBhbmQgd2FudGluZyB0byBub3QgdGFsayBhYm91dCBpdCBtYWtlIHNlbnNlLiAKU29tZSBjb21yYWRlcyBpbiB5b3VyIGFnZSBjb2hvcnQgd2lsbCBkbyBqdXN0IHRoYXQsIGluIGEgdmFyaWV0eSBvZiB3YXlzOiB0aGV5IGtpbGwgdGhlbXNlbHZlcywgb3IgY29tcGxldGVseSBmb2xkIGluIG9uIHRoZW1zZWx2ZXMgaW4gYW4gaW52b2x1dGUgYW5kIGluZXJ0IHdheSwgb3Igc3VycmVuZGVyIHRvIHRoZSBwdWxsIG9mICJhIG5vcm1hbCBsaWZlIiBhbmQgdHJ5IHRvIHN0YXZlIG9mZiB0aGVpciBjcmVlcGluZyBwb2xpdGljYWwgYXdhcmVuZXNzIGhvd2V2ZXIgdGhleSBjYW4uIERPTiBETyBUSEFULiAKTWF0aGVtYXRpY2FsbHlzb3VuZCB1Ckl0J3MgYmVlbiBhbG1vc3QgYSB5ZWFyIG5vdywgYW5kIEknbSBpbiBhIHJlYWxseSBnb29kIHBsYWNlIGluIG15IGxpZmUuIEkgaGFkIG9uZSBtb3JlIHRveGljIHBlcnNvbiB0byBkaXN0YW5jZSBteXNlbGYgZnJvbSBhZnRlciBoZXIgKG15IFNPIGF0IHRoZSB0aW1lKSwgYW5kIEkgZmVlbCBzbyBGUkVFLiBJIGFtIGEgaGFwcHkgcGVyc29uIG5vdyBhbmQgbm90IGNvbnN0YW50bHkgaGF2aW5nIHBhbmljIGF0dGFja3Mgb3IgaW5zb21uaWEuCiJGb29kIGlzIGRlbGl2ZXJlZCBldmVyeSB0aHJlZSB0byBzaXggZGF5cyBhbmQgd2UndmUgcmFuZG9taXplZCB3aGF0IGRheXMgaXQnbGwgYmUgZGVsaXZlcmVkIGFuZCB3ZSdsbCBkcm9wIG9mZiBzaXggZGF5cyB3b3J0aCBvZiBmb29kIHNvIGhlIGRvZXNuJ3Qga25vdyBob3cgbG9uZyBpdCdzIGJlZW4sIiBzYWlkIFlvdW5nLiAiSXQgY291bGQgYmUgdGhyZWUgZGF5cywgaXQgY291bGQgYmUgc2l4IGRheXMuIEhlJ2xsIGhhdmUgbm8gaWRlYSBvZiBob3cgbG9uZyBpdCdzIGJlZW4sIHNvIG5vIHdhdGNoZXMgb3IgY2xvY2tzIG9yIHRoaW5ncyBsaWtlIHRoYXQuIgpBbmQgSSByZW1lbWJlciB0aGVyZSB3YXMgYSBsb3Qgb2YgY29uZnVzaW9uIGFib3V0IHRoZSBsb2dpc3RpY3Mgb2YgaG93IHRoZSBkcmVhbSBsZXZlbHMgd29ya2VkLCBidXQgZm9yIHRoZSBtb3N0IHBhcnQgaXQgd2FzIGEgcG9zaXRpdmUgZGlzY3Vzc2lvbiBpbiB0aGUgY29udGV4dCBvZiBwZW9wbGUgd2hvIGVuam95ZWQgdGhlIG1vdmllIHdhbnRpbmcgdG8gdW5kZXJzdGFuZCBpdCBiZXR0ZXIuIFRoZSBwbG90IHdhcyBjb252b2x1dGVkIGJ1dCBpdCBwcm9tb3RlZCBhIGxvdCBvZiBkaXNjdXNzaW9uIGFuZCBhIGJ1bmNoIG9mIHBvcCBjdWx0dXJlIHJlZmVyZW5jZXMuIApGcm9tIGEgdGFjdGljYWwgcGVyc3BlY3RpdmUsIHRoZXJlZm9yZSwgdGhlIDE3NW1tIHNlbGYgcHJvcGVsbGVkIHdvdWxkIGxpa2UgdG8gdGFsayBhZ2FpbiBhYm91dCB0aGUgZXh0ZW5kZWQgdmFjYXRpb24gdGltZS4gCkkgY2xvc2VkIG9uIGFuIGludmVzdG1lbnQgcHJvcGVydHkgaW4gR2VvcmdpYSBhbmQgYWJvdXQgMTAgZGF5cyBsYXRlciB0aGUgbGVuZGVyIGlzIHNheWluZyB0aGF0IHRoZSBkZWFsIHZpb2xhdGVzIGEgRmFubmllIE1hZSBndWlkZWxpbmUgaW4gdGhhdCB0aGUgY2FzaCBiYWNrIGF0IGNsb3NpbmcgZXhjZWVkZWQgMiUgb2YgdGhlIHNhbGVzIHByaWNlLiBTdWJzZXF1ZW50bHksIEkgYW0gcmVxdWlyZWQgdG8gc2VuZCB0aGUgYmFsYW5jZSBiYWNrIGludG8gZXNjcm93LCB3aGljaCB3aWxsIGJlIHJlZnVuZGVkIHRvIHRoZSBzZWxsZXIuIApJIGRpZG4gaGF2ZSBhIHJvdXRpbmUgb3IgdXNlZCBwcm9kdWN0cyBpbiB0aGUgcGFzdCBzbyB0aGlzIHdpbGwgYmUgYSBmaXJzdCBmb3IgbWUuIApBIHNwZWNpZmljIHBsYXllciwgMi4gVGhleSBqdXN0IG5vdCBwYXlpbmcgYXR0ZW50aW9uIChob3cgbWFueSBwZW9wbGUgZG8geW91IHNlZSBpbnRlbnRseSB3YXRjaGluZyBoYW5kcyB0aGV5IG5vdCBpbikgMy4gCkZhbHNjaC4gRXVyb3BhIG1hZyBudXIgZnIgZWluZW4gVGVpbCBkZXMgS2xpbWF3YW5kZWxzIHZlcmFudHdvcnRsaWNoIHNlaW4uIEFiZXIgRXVyb3BhIGlzdCBhdWNoIG5pY2h0IGRpZSBlaW56aWdlIFJlZ2lvbiwgaW4gZGVyIGRpZSBMZXV0ZSBWZXJuZGVydW5nIHdvbGxlbi4gCllvdSByZW1vdmUgdGhlIGV4cGFuc2lvbiBvZiB0aGUgdW5pdmVyc2UsIHNvIHdoZW4gYW5vdGhlciBzY2llbnRpc3QgYWRkcyBpdCBiYWNrIGluLCB0aGV5IGdldCB0byBjaG9vc2Ugd2hpY2ggZXhwYW5zaW9uIG1vZGVsIHRvIHVzZS4gClBNVSBoYXMgYmVlbiBsaWNlbnNpbmcgYW5kIGV4cG9ydGluZyBpbWFnZXMgb2YgRnJlbmNoIHJhY2VzIHRocm91Z2ggdGhlc2UgbmV0d29ya3Mgc2luY2UgMTk4NyBhbmQgaGFzIGJlZW4gb2ZmZXJpbmcgRnJlbmNoIGJldHRvcnMgZm9yZWlnbiByYWNlcyBzaW5jZSAxOTk3LiBBY2NvcmRpbmcgdG8gQXltZXJpYyBWZXJsZXQsIFBNVSBpbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50IGRpcmVjdG9yLCBleHBhbnNpb24gaXMgZXh0cmVtZWx5IGltcG9ydGFudCBmb3IgdGhlIGZ1dHVyZSBvbiBib3RoIGZyb250czogb2ZmZXJpbmcgbW9yZSBmb3JlaWduIHJhY2VzIGZvciBGcmVuY2ggYmV0dG9ycyBhbmQgb2ZmZXJpbmcgbW9yZSBGcmVuY2ggcmFjZXMgdG8gYmV0dG9ycyBhYnJvYWQuIFdlIGFyZSBjb250aW51b3VzbHkgbG9va2luZyB0byBicm9hZGVuIG91ciBwYXJ0bmVyc2hpcCBiYXNlIGFuZCBkZWVwZW4gb3VyIHJlbGF0aW9uc2hpcCB3aXRoIHRoZXNlIHBhcnRuZXJzLi4gCkQndW5lIGNlcnRhaW5lIG1hbmlyZSwgbCd0YXQgZGVzIGR0ZXJtaW5hbnRzIGRlIGxhIHNhbnQgcmVmbHRlIGxlIGR2ZWxvcHBlbWVudCBkJ3VuZSBzb2NpdCBldCBsZXMgbGliZXJ0cyByZWxsZXMgZG9udCBqb3Vpc3NlbnQgc2VzIG1lbWJyZXMuIApOZXcgWW9ya2VycyB3aWxsIGZpbmFsbHkgZ2V0IGEgZmlyc3QgbG9vayBhdCAxMDAgc3RvcmVzIHJhbmdpbmcgZnJvbSBwb3B1bGFyIHByaWNlZCBIIHRvIHRoZSBjaXR5J3MgZmlyc3QgTmVpbWFuIE1hcmN1cy4gVGhleSdsbCBoYXZlIGEgZmlyc3QgdGFzdGUgb2YgMjUgcmVzdGF1cmFudHMsIHNvbWUgZnJvbSB0aGUgd29ybGQncyBncmVhdGVzdCBjaGVmcy4gClNvIGlmIHlvdSB3ZXJlIGluIHRoZSBzYW1lIGJvYXQgd2Ugd2VyZSBhYm91dCB0aGUgcnVsZXMgb3IgeW91IGp1c3Qgd2FudCB0byBlbmpveSB0aGUgQ3JhcHMgU3lzdGVtIGluIHlvdXIgb3duIGhvbWUsIHRoZW4gZ2V0IGEgQ29tcGxldGUgQ3JhcHMgU2V0LiBUaGlzIHN5c3RlbSBoYXMgZXZlcnl0aGluZyB5b3UgbmVlZCB0byBMZWFybiB0byBQbGF5IENyYXBzLCBidXQgbW9zdCBpbXBvcnRhbnQsIHlvdSBjYW4gdGFrZSBpdCBhbnl3aGVyZS4gCkltYWdpbmUgaGF2aW5nIHRvIGFsd2F5cyBiZSAib24iIGV2ZXJ5IHRpbWUgeW91IGluIHB1YmxpYywgaXQgd291bGQgYmUgZXhoYXVzdGluZy4gTWFueSBjZWxlYnJpdGllcyBhcmUgdmVyeSBhcHByZWNpYXRpdmUgb2YgdGhpZXIgZmFucyBhbmQgdHJ5IHRvIG1ha2UgdGhlaXIgZW5jb3VudGVycyBmdW4gYW5kIHBvc2l0aXZlLCBidXQgbWF5YmUgY3V0IHRoZW0gc29tZSBzbGFjayB3aGVuIHlvdSBoZWFyIG5lZ2F0aXZlIHN0b3JpZXMuLiAKVGhlIGRhdWdodGVyIHNhaWQgc2hlIHB1c2hlZCBoZXIgbW90aGVyIGluIGEgYmlkIHRvIGdldCBhd2F5LCBob3dldmVyIHRoZSBvbGRlciB3b21hbiBjb250aW51ZWQgdGhyb3dpbmcgdGhpbmdzIGF0IGhlciBiZWZvcmUgZ3JhYmJpbmcgaGVyIGJ5IHRoZSBicmEsIGNhdXNpbmcgdGhlIGRhdWdodGVyIHRvIGZhbGwgb3Zlci4gCkEgY29tcGFueSBjYWxsZWQgc2VtaWhhbmRtYWRlLCBzYXlzIE1jTGVhbi4KSSBhbSBhIHZlcml0YWJsZSBmb3VudCBvZiB1c2VsZXNzIGtub3dsZWRnZSAodmVyeSB1c2VmdWwgaW4gcHViIHF1aXp6ZXMpIGFuZCBJJ2xsIHRhbGsgYWJvdXQgYW55dGhpbmcuIApUaGUgcmVhc29uIGlzIHRoYXQgVFYgYXJlbiBtZWFudCB0byBiZSB1cCB0byB0aGUgcXVhbGl0eSBvZiBhIHBob3RvIGVkaXRpbmcgbW9uaXRvciB0aGF0IHdpbGwgcnVuIHlvdSAkMzAwIDUwMCBqdXN0IGZvciBhbiBlbnRyeSBsZXZlbCBtb25pdG9yLCBsZXQgYWxvbmUgdGhlICQxayAyayBtb25pdG9ycyBpbmR1c3RyeSBzdGFuZGFyZHMuIFRoZXNlIGhhdmUgY29sb3IgYWNjdXJhY3ksIGNvbG9yIGNvbnNpc3RlbmN5IHRocm91Z2hvdXQgdGhlIG1vbml0b3IsIGNvbG9yIHJhbmdlICgxMCBiaXQsIFJHQiwgZXRjKSwgd2lkZSBhY2N1cmF0ZSB2aWV3aW5nIGFuZ2xlLCBubyBpbWFnZSBidXJuLiBFdGMgZXRjIGV0Yy4gCkJ1dCBiZWZvcmUgd2Ugc2luZ2xlIG91dCBCb2VocmluZ2VyIGZvciB0aGVpciBmYWlybHkgdHJhbnNwYXJlbnQgZWZmb3J0IHRvIG1hbmlwdWxhdGUgQW1lcmljYW4gd29tZW4gZm9yIHByb2ZpdCwgaXQgd29ydGggdGFraW5nIGEgc3RlcCBvciB0d28gYmFjayB0byB0aGUgc3RydWN0dXJhbCBsZXZlbCB0byBzZWUgd2hhdCBpcyB3cm9uZyB3aXRoIHRoZSBzeXN0ZW0gYXMgd2VsbCBhcyB0aGlzIHBhcnRpY3VsYXIgY29tcGFueSBhbmQgdGhpcyBwYXJ0aWN1bGFyIGRydWcuIFN5c3RlbSBvZiBjb21tZXJjaWFsaXplZCBtZWRpY2luZSBpcyBkYW5nZXJvdXMgYmVjYXVzZSBpdHMgcHJpbWFyeSBwdXJwb3NlIGlzIHByb2ZpdCwgYW5kIHRoZSBvbmx5IHdheSB0byBrZWVwIHByb2ZpdHMgY29taW5nIGlzIHRvIGluY3JlYXNlIHNhbGVzLiBUaGUgb25seSB3YXkgdG8gaW5jcmVhc2Ugc2FsZXMgaXMgdG8gaW5jcmVhc2UgZGVtYW5kLi4gClN0aWxsIGh1cnRzIGJ1dCBwcm91ZCBvZiB0aGUgdGVhbSBmb3IgdGhlIHdheSB3ZSBwbGF5ZWQgbGFzdCBuaWdodC4gSGVhZHMgdXAuIEJpZyBjaGFsbGVuZ2VzIGFoZWFkLgpHaWFyZCBDaGFzZSwgd2hvIGlkZW50aWZpZXMgYXMgdHJhbnNnZW5kZXIgYW5kIG1hbGUsIHNwb2tlIGFib3V0IGhvdyBkaWZmaWN1bHQgdXNpbmcgdGhlIGdpcmxzIGJhdGhyb29tcyB3YXMgZm9yIGhpbSBhbmQgaG93IG11Y2ggaGFyYXNzbWVudCBoZSBlbmR1cmVkIHdoaWxlIHN0aWxsIGlkZW50aWZ5aW5nIGFzIGZlbWFsZS4KTmlldXdlIGxlZXJkb2VsZW4gemlqbiB0b2VnZXZvZWdkIGVuIGZlZWRiYWNrIGlzIGdlZ2V2ZW4gb3AgaGV0IGhhbmRlbGVuIGJpbm5lbiBkZSBjb21wZXRlbnRpZSBnZWJpZWRlbi4gSW4gc2FtZW5zcHJhYWsgbWV0IGRlIHN0YWdlYmVnZWxlaWRlcnMgaXMgZXIgYmVzbG90ZW4gb20gZGUgc3RhZ2Ugdm9vcnQgdGUgemV0dGVuIGVuIHNhbWVuIHRlIHdlcmtlbiBhYW4gZGUgaHVpZGlnZSBlbiBuaWV1dyBnZWZvcm11bGVlcmRlIGxlZXJkb2VsZW4uIApMJ2luZ2FsaXQgZW4gc2FudCBzZSBtYW5pZmVzdGUgcGFyIGxlIGZhaXQgcXVlLCBkYW5zIGwnZW5zZW1ibGUsIG5vdXMgc29tbWVzIG1hbGFkZXMgZXQgbm91cyBtb3Vycm9ucyBzZWxvbiBub3RyZSBwb3NpdGlvbiBkYW5zIGxhIGhpcmFyY2hpZSBzb2NpYWxlLiBDZXR0ZSBpbmdhbGl0IGRlIHNvcnQgZXN0IGwnZWZmZXQgZGVzIGR0ZXJtaW5hbnRzIGRlIGxhIHNhbnQgZGFucyBub3Mgdmllcy4gQ2VydGFpbnMgZGUgY2VzIGR0ZXJtaW5hbnRzIGRwZW5kZW50IGRpcmVjdGVtZW50IGRlIG5vdXMsIG1haXMgbGEgcGx1cGFydCBzb250IGxpcywgZGlyZWN0ZW1lbnQgb3UgaW5kaXJlY3RlbWVudCwgIGwnb3JnYW5pc2F0aW9uIHNvY2lhbGUuLiAKVGhlIGlkZWEgaXMgdG8gbWFrZSB0aGUgYmVzdCBwb2tlciBoYW5kLiBJbiBhZGRpdGlvbiB0byB0aGUgZ2FtZSwgYXR0ZW5kZWVzIHdpbGwgZW5qb3kgZm9vZCwgbXVzaWMsIGRvb3IgcHJpemVzIGFuZCBhIHJhZmZsZS4uIApTYXVsIEFsaW5za3kKTiBkYW5zIGxlIGRwYXJ0ZW1lbnQgZHUgUGFzIGRlIENhbGFpcyBlbiAxNzg4LCBGcmFub2lzIEpvc2VwaCBDYXppbiBzZSBkZXN0aW5lIHRycyB0dCAgbGEgbWRlY2luZSwgdGFudCB0b3V0IGQgZHMgMTgwNCwgYWlkZSBjaGlydXJnaWVuIGVuIGhwaXRhbCBtaWxpdGFpcmUsIGF2YW50IGRlIGRldmVuaXIgbHVpIG1tZSBjaGlydXJnaWVuLCBwdWlzIG1kZWNpbiBkYW5zIGxhIG1hcmluZS4gCkkgd2FzIGFsc28gYWJsZSB0byBzaXQgdXAgZnJlcXVlbnRseSBpZiBuZWVkZWQgKGhhbmRzIGZyZWUpLi4gCkkgcmVhbGx5IGRvbiBzZWUgd2hhdCBzbyBoYXJkIHRvIGdyYXNwIGhlcmUuIFBlb3BsZSBwYXkgdGF4ZXMgYW5kIGZlZXMgYW5kIGEgZ29vZCBnb3Zlcm5tZW50IHNwZW5kcyB0aGF0IG1vbmV5IG9uIHBvbGljaWVzIHRoYXQgYmVuZWZpdCBzb2NpZXR5LiBJdCBpbXBvc3NpYmxlIHRvIGNvbnNpZGVyIHRoZSBwcmVjaXNlIHdhbnRzIGFuZCBuZWVkcyBvZiBldmVyeSBzaW5nbGUgaHVtYW4gYmVpbmcgaW4gYSBjb3VudHJ5LiAKSGF2ZSB5b3UgcGxheWVkIFBva2VyQnJvcyByZWNlbnRseT8gUmVtZW1iZXIgdGhlIG9sZCBhY3Rpb24gb24gdGhlcmUgd2FzIHVucmVhbC4gTm93IHRoYXQgY2x1YiBpcyBhIGdob3N0IHRvd24uIFRoZXkgaGF2ZSB0YWtlbiBzZXZlcmFsICQxMDBrIGxvc2VzIGZyb20gY2x1YiBvd25lcnMgdGhhdCBjYW4gcGF5IG91dC4gTm93IHRoZXkgYXJlIGhhdmluZyB0byBtaXRpZ2F0ZSB0aGVpciBsb3NlcyBieSBsb3dlcmluZyBsaW1pdHMgYW5kIHByb3ZpZGluZyBsZXNzIGFjdGlvbi4gVGhleSBnb3QgdG9vIGJpZyBhbmQgdG9vIGdyZWVkeS4gClNvcnJ5IGZvciBsb25nIHBvc3QuClRoYXQgaXMgd2h5IHdlIHN0YXJ0ZWQgbWFraW5nIG9ubGluZSBjYXNpbm8gcmV2aWV3cyB3aGVyZSB3ZSBvZmZlciBpbiBkZXB0aCBpbmZvcm1hdGlvbiBhYm91dCBhIGJpZyBudW1iZXIgb2YgY2FzaW5vcyB0aGF0IGFyZSBrbm93biB0byBiZSBzYWZlLCBzZWN1cmUgYW5kIGZhaXIuIApXYXJuZSwgd2hvIGluaXRpYWxseSBkZW5pZWQgQ29sZW1hbiB3YXMgbGVhdmluZywgbGF0ZXIgY29uY2VkZWQgdGhlIGZvdW5kYXRpb24gd2FzICJsb29raW5nIGF0IGFsbCBvcHRpb25zIGJ1dCBub3RoaW5nIGhhcyBiZWVuIGRlY2lkZWQiLiAKQXMgc29tZW9uZSB3aG8gb3ducyBhIHNpIGFuZCBhbiAxOCAyLjVsIG1hemRhIDMsIHRoZSBjaXZpYyBpcyBiZXR0ZXIgdGhhbiB0aGUgMyBpbiBldmVyeSBzaW5nbGUgY2F0ZWdvcnkgZXhjZXB0IGludGVyaW9yIGZpdCBhbmQgZmluaXNoIGFuZCBzYWZldHkgc2Vuc29yIGVxdWlwbWVudHMuIENpdmljIGludGVyaW9yIGlzIG5vdCB0aGF0IG5pY2U7IGhvd2V2ZXIsIHRoaW5ncyB0aGF0IG1hdHRlciB0byBhIGFyZSB0aGUgYmVzdCBmb3IgdW5kZXIgMzBrIGNhcnMsIHN1Y2ggYXMgdGhlIHNlYXQsIHNjcmVlbiB0YWNob21ldGVyLCBhbmQgc2hpZnRlci4gQWx0aG91Z2ggSSBwcmVmZXIgdGhlIDMgdHdvIHN0YWdlIGdhcyBwZWRhbCBtb3JlIGV2ZW4gdGhvdWdoIGl0IGxlc3Mgb2YgYSBmdW4gY2FyLiBJdCByZWFsbHkgZWFzeSB0byBnZXQgMzVtcGcgKHByZW1pdW0gZ2FzKSBvdXQgb2YgY2l2aWMgZHJpdmluZyA4MG1waC4gVGhlIDMgc3RydWdnbGVzIHRvIGdldCAzMG1wZyAocmVndWxhciBnYXMpIGRyaXZpbmcgODBtcGguIEZvciBzb21lIHJlYXNvbiBtYXpkYSAzIGFyZSByZWFsbHkgbm9pc3kgZnJvbSB3aW5kIG5vaXNlIGF0IGhpZ2ggc3BlZWQgYXMgSSBoYXZlIGJvdGggdGhlIGFuZCAxMyBtb2RlbHMuIENpdmljIHdpbmQgbm9pc2UgaXMgYWxtb3N0IG5vbiBleGlzdGVudCBhdCBoaWdoIHNwZWVkLiBOb3Qgc3VyZSB3aHkgbWF6ZGEgY29udGludWVzIHRvIHN0cnVnZ2xlIHRvIGdldCByaWQgb2YgdGhlIHdpbmQgbm9pc2UgdGhyb3VnaCBnZW5lcmF0aW9ucy4gSWYgSSBoYXZlIHRvIGNob29zZSBhIGRhaWx5IGRyaXZlciBvdXQgb2YgdGhlIHR3byBJIGNob29zZSBhbiBhdXRvIDMuIE1heWJlIEkgZ2V0dGluZyBvbGQuCkV2ZW4gc28sIHdoYXQgL3Ivam9rZXMgc3VnZ2VzdHMgaXMgYSBbbG9uZ10gam9rZSBpcyBnZW5lcmFsbHkgc29tZXRoaW5nIGNvbnN1bWVkIGluIGFyb3VuZCBhIG1pbnV0ZS4KTHVja2x0eSB0aGUgdG93biBzIHN0bGwgcHJldHR5IGNoYXJtbmcuIApJIGtub3cgdGhlIGFyZ3VtZW50IGlzIHRoYXQgdGhleSBtYWRlIG1vbmV5IGxhc3QgeWVhci4gCkkgbWVhbiBvbiB0aGUgbWFudWFsLiAKOCBoYXMgYmVlbiBmbG9hdGVkIGFzIGxpa2VseSwgZ2l2ZW4gaXQncyB0aGUgZmVhc3Qgb2YgdGhlIEltbWFjdWxhdGUgQ29uY2VwdGlvbiwgYSBtYWpvciBmZWFzdCBkYXkgZm9yIHRoZSBjaHVyY2ggdGhhdCBob25vdXJzIE1hcnksIHRvIHdob20gYm90aCBzYWludGx5IHBvcGVzIHdlcmUgcGFydGljdWxhcmx5IGRldm90ZWQuIFBvbGlzaCBwcmVsYXRlcyBjb250aW51ZSB0byBwcmVzcyBmb3IgT2N0b2JlciwgdG8gbWFyayB0aGUgMzV0aCBhbm5pdmVyc2FyeSBvZiB0aGUgUG9saXNoIGJvcm4gSm9obiBQYXVsJ3MgZWxlY3Rpb24sIGJ1dCBWYXRpY2FuIG9mZmljaWFscyBoYXZlIHN1Z2dlc3RlZCB0aGF0J3MgdG9vIHNvb24gdG8gb3JnYW5pemUgc3VjaCBhIG1hc3NpdmUgZXZlbnQuLiAKSGUgZXZlbiBleHBsYWlucyBpdCBhcyBNaWNyb3NvZnQgYWN0aW9ucyBhdCB0aGUgdGltZSBub3QgYmVpbmcgaW4gbGluZSB3aXRoIGhvdyB0aGV5IHJ1biB0aGVpciBjb21wYW55IG9yIHRoZWlyIHZhbHVlcy4KVGhleSBoYXZlIG5vIGludGVyZXN0IGluIHBhcnRpY2lwYXRpbmcgaW4gdGhlIHdpZGVyLCBkZXZlbG9wZWQgc29jaWV0eS4gCkF1IE1vdWxpbiwgbGEgZmFyaW5lIGRvaXQgdHJlIHBvdXNzZSB2ZXJzIGRlcyBjcml0cmVzIGRlIHR5cGUgbnV0cml0aW9uIHNhbnQgYXZhbnQgZGUgY2hlcmNoZXIgdW4gZXN0aHRpc21lLCB1bmUgbGdyZXQsIHVuZSBibGFuY2hldXIgZHUgUGFpbi4KQnkgZG9pbmcgdGhpcyBteSBMaW51eCBza2lsbHMgd2VudCBmcm9tICJJIGhhdmUgdXNlZCBMaW51eCIgdG8gIkkgbWFuYWdlIHNldmVyYWwgTGludXggYm94ZXMgb24gYSBkYWlseSBiYXNpcy4iIEkndmUgZ29uZSBmcm9tIGJhcmVseSB1bmRlcnN0YW5kaW5nIHRoZSBjb25jZXB0cyBvZiB2aXJ0dWFsaXphdGlvbiB0byBidWlsZGluZyBvdXQgZW50aXJlIGluZnJhc3RydWN0dXJlcy4gCkh1bnRpbmcgYXMgYSBtZWFucyB0byBmZWVkIGFuZCBwcm92aWRlIGZvciB5b3VyIGZhbWlseSBpcyBhIG5hdHVyYWwgYWN0LCBidXQga25vd2xlZGdlIGFib3V0IGl0IGlzIGJlZ2lubmluZyB0byBmYWRlIGZyb20gb3VyIHNvY2lldHkuIFNvLCBiZWxvdyB3ZSB3aWxsIGRpc2N1c3MgaG93IHRvIGh1bnQgYSBkZWVyIGFuZCB1c2UgZXZlcnkgc2luZ2xlIHBhcnQgb2YgdGhlIGFuaW1hbCBmb3IgYSBiZW5lZml0IHRvIHlvdXJzZWxmIGFuZCB0aGUgbGFuZC4uIApJIGRvbnQga25vdyB3aHkgZXZlcnlvbmUgc2F5cyB5b3Ugc2hvdWxkIGJ1eSBpbiBmb3IgdGhlIG1heGltdW0gYmVjYXVzZSB0aGF0cyB3cm9uZy4gWW91IHNob3VsZCBjb3ZlciB0aGUgcGxheWVycyB3aG8gYXJlIHdvcnNlIHRoZW4geW91LCBCeSBkb2luZyB0aGF0LCB5b3UgbWF4aW1pemUgeW91ciB3aW5uaW5ncyBhZ2FpbnN0IHRoZW0gYW5kIHlvdSBtaW5taXplIHlvdXIgbG9zc2VzIGFnYWluc3QgcGxheWVycyB3aG8gYXJlIGJldHRlci4KUHJvcGVyIGJldCBzaXppbmcgaXMgaW1wb3J0YW50LiAKUmlnaHQgYWZ0ZXIgdGhlIG1hdGNoIHRoZSBQZW5uIFRlbGxlciBUaGVhdGVyIGluc2lkZSB0aGUgUmlvIExhcyBWZWdhcyBlbmRlZCwgdGhlcmUgd2VyZSBsaWtlIDIgb3IgMyBob3VycyBvZiBpbnRlcnZpZXdzLCBwaG90b3MsIGF1dG9ncmFwaHMgYW5kIHN0dWZmIGxpa2UgdGhhdC4gVGhlbiBhIGJ1bmNoIG9mIHVzIHdlbnQgYmFjayB0byBvdXIgc3VpdGUgYXQgdGhlIFBhbGF6em8uIApNY0dvd2FuIGhhcyBhIHRyaWFsIHNjaGVkdWxlZCBmb3IgT2N0LiAyMCBiZWZvcmUgQm9yY2hhcmQsIGJ1dCB3aXRoIGhpcyBuZXcgYXR0b3JuZXkgb25seSBiZWluZyBhcHBvaW50ZWQgdGhpcyB3ZWVrLCB0aGUganVkZ2UgaXMgbGlrZWx5IHRvIHBvc3Rwb25lIHRoZSB0cmlhbC4KTWFybGJvcm8gYW5kIE1pc3Npb24gV2lubm93IGFyZSBib3RoIGNvbXBhbmllcyBvZiBQaGlsaXAgTW9ycmlzLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZVdJVEggdGhlIGZvcnRoY29taW5nIGxvY2FsIGdvdmVybm1lbnQgZWxlY3Rpb25zIGRyYXdpbmcgbmVhciwgb25lIGlzc3VlIHRoYXQgY2FuZGlkYXRlcyBzaG91bGQgYWRkcmVzcyBkb2VzIG5vdCBnZXQgYW55IGF0dGVudGlvbi4gVGhhdCBpcyB0aGUgaW1wYWN0IG9mIHBva2VyIG1hY2hpbmUgZ2FtYmxpbmcgb24gcGVvcGxlIGxpdmluZyBpbiBsb2NhbCBjb21tdW5pdGllcy4gSW4gVmljdG9yaWEsIHNvbWUgbG9jYWwgZ292ZXJubWVudHMgaGF2ZSBkZXZlbG9wZWQgc3BlY2lmaWMgcG9saWNpZXMgd2hpY2ggb3V0bGluZSB0aGVpciByZXNwb25zZSBhbmQgdmlzaW9uIHRvIGxpbWl0aW5nIGdhbWJsaW5nIGhhcm0gd2l0aGluIHRoZWlyIGNvbW11bml0eS4gQWxzbyBpbiBWaWN0b3JpYSwgZ2FtYmxpbmcgYW5kIHBva2VyIG1hY2hpbmUgZGF0YSBpcyBmcmVlIGFuZCBlYXNpbHkgYWNjZXNzaWJsZSB0byB0aGUgcHVibGljLCBob3dldmVyLCBpbiBOU1cgdGhpcyBkYXRhIGlzIG5vdCBmcmVlbHkgYWNjZXNzaWJsZS4gSXQgd2FzIHJlY2VudGx5IHJlcG9ydGVkIHRoYXQganVzdCAxMCBwdWJzIGluIE5TVyBtYWRlICQxMTdtIHByb2ZpdCBpbiBvbmUgeWVhci4gVGhhdCBpcyBwcm9maXQsIG5vdCB0dXJub3Zlci4gSW4gdGhlIEZhaXJmaWVsZCBDaXR5IENvdW5jaWwgbG9jYWwgZ292ZXJubWVudCBhcmVhLCByYW5rZWQgYXMgdGhlIG1vc3QgZGlzYWR2YW50YWdlZCBhcmVhIGluIFN5ZG5leSwgcGVvcGxlIHRoZXJlIGxvc3QgJDguMjcgYmlsbGlvbiB0byBwb2tlciBtYWNoaW5lcy4gVGhhdCBpcyBiaWxsaW9ucywgbm90IG1pbGxpb25zLiBUaGF0IGlzIHRoZSBpbXBhY3Qgb2YgcG9rZXIgbWFjaGluZSBnYW1ibGluZyBvbiBwZW9wbGUgbGl2aW5nIGluIGxvY2FsIGNvbW11bml0aWVzLgpQcm9wZXIgaHlkcmF0aW9uIGFsbG93cyB0aGUgYm9keSB0byBwcm9jZXNzIHRoZSB3YXN0ZSBlYXNpZXIgYW5kIGV4Y3JldGUgdGhlIG91dCB0aHJvdWdoIHVyaW5lIG9yIHN3ZWF0Li4gCldlbGwsIGl0IHVzaW5nIG1pbmltYWwgbGluZWFyIGRpc3RhbmNlcywgY29tcHV0YXRpb25hbGx5IGVhc3ksIGJ1dCBpdCByZXF1aXJlcyBoYXZpbmcgbGluZWFyIG9yZGVyIGF2YWlsYWJsZS4gQW5kIGlmIGxpbmVhciBvcmRlciBpcyBvbmx5IGEgcmVmbGV4IG9mIHRoZSBzZW5zb3J5IG1vdG9yIHN5c3RlbSwgd2hpY2ggbWFrZXMgc2Vuc2UsIGl0IHdvbiBiZSBhdmFpbGFibGUuIApUaGUgdGhpcmQgYmVzdCBoYW5kIGlzIGZvdXIgb2YgYSBraW5kLiAKVGhpcyB3ZWVrIEJpZyBTaG90cyBicmluZ3MgeW91IGEgcGhvdG9ncmFwaCBvZiBEYXZpZCBCZWNraGFtIGFjdHVhbGx5IHdlYXJpbmcgYSBzaGlydC4gTm8sIHJlYWxseS4gCkZyZWUgT25saW5lIFNsb3RzIEZvciBldmVyeWJvZHkgVG8gUGxheSBObyBEb3dubG9hZCBOZWVkZWQKIlRoYXQncyB3aGF0IGlzIGZ1bm55IGFib3V0IG1lbiB3aG8gYm9vayBtZS4gVGhleSBvZnRlbiBzYXkgdGhleSBob3BlIHRoZXkncmUgYXMgZ29vZCBhcyB0aGUgZ3V5cyBpbiB0aGUgbW92aWVzLCBidXQgYWxsIHRoZSBtZW4gaW4gcG9ybiBhcmUgb24gVmlhZ3JhLiIKUG9rZXIgcG90IG9kZHMgaXMgdGhlIGEgcmF0aW8gYmV0d2VlbiB0aGUgc2l6ZSBvZiB0aGUgcG90IGNvbXBhcmVkIHRvIGhvdyBtdWNoIGl0IHdpbGwgY29zdCB5b3UgdG8gY2FsbCBhIGJldCBmcm9tIGFub3RoZXIgcGxheWVyLiBUaGUgaGlnaGVyIHRoZSByYXRpbyBiZXR3ZWVuIHRoZSBzaXplIG9mIHRoZSBwb3QgYW5kIHRoZSBjb3N0IG9mIGNhbGxpbmcgYSBiZXQsIHRoZSBiZXR0ZXIgeW91ciBwb2tlciBwb3Qgb2RkcyBhcmUuLiAKVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiAKV2UgdXNlIERFUCBhbmQgSSB3YXMgdW5kZXIgdGhlIGltcHJlc3Npb24gZnJvbSBNZXJha2kncyB3aGl0ZSBwYWdlcyB0aGF0IHRoZSBBZ2VudCBzaG91bGQgYmUgYWJsZSB0byBhdXRvIGluc3RhbGwgYWZ0ZXIgdGhlIHByb2ZpbGUgaW5zdGFsbHMgKHdoaWNoIGhhcHBlbmVkIGFzIHNvb24gYXMgdGhlIG1hY2hpbmUgaGFkIGludGVybmV0IGFjY2VzcykuIApTb21lIGNvbXJhZGVzIGluIHlvdXIgYWdlIGNvaG9ydCB3aWxsIGRvIGp1c3QgdGhhdCwgaW4gYSB2YXJpZXR5IG9mIHdheXM6IHRoZXkga2lsbCB0aGVtc2VsdmVzLCBvciBjb21wbGV0ZWx5IGZvbGQgaW4gb24gdGhlbXNlbHZlcyBpbiBhbiBpbnZvbHV0ZSBhbmQgaW5lcnQgd2F5LCBvciBzdXJyZW5kZXIgdG8gdGhlIHB1bGwgb2YgImEgbm9ybWFsIGxpZmUiIGFuZCB0cnkgdG8gc3RhdmUgb2ZmIHRoZWlyIGNyZWVwaW5nIHBvbGl0aWNhbCBhd2FyZW5lc3MgaG93ZXZlciB0aGV5IGNhbi4gCk15IHNjaG9vbCBwcm92aWRlcyBmcmVlIGJyZWFrZmFzdCBhbmQgbHVuY2ggZm9yIGFyZSBzdHVkZW50cy4gCkJ1dCBzbyBmYXIgdGhlIG9ubHkgcGVvcGxlIEkgc2VlIGRvaW5nIHRoYXQgYXJlIGEgYnVuY2ggb2YgUmVwdWJsaWNhbiBDaHJpc3RpYW4gQ29uc2VydmF0aXZlcy4gQW5kIHlvdS4uIApJIHRoaW5rIGl0IHByZXR0eSBuYXR1cmFsIHRvIHBpbiB0aGUgVHVkb3IgZmxhZyBvbiBKb24gU25vdyBvciBEYW55ICAgdGhleSBldmVuIGhhdmUgYSBjb252ZW5pZW50IGFuYWxvZyBvZiBFbGl6YWJldGggdG8gbWFycnkgKEhlbnJ5IFR1ZG9yIG1hcnJpZWQgYSBZb3JraXN0IERhdWdodGVyIC8gaGlzIC4gCkkgbWFraW5nIGdvdWxhc2ggZm9yIGEgZmFtaWx5IG1lYWwgdGhpcyB3ZWVrLiBBbGwgdGhlIGluZ3JlZGllbnRzIGZvciBhIGRvdWJsZSBiYXRjaCB3aWxsIGNvc3QgbWUgdW5kZXIgJDE1LiBBZGQgdGhhdCBJIGluY2x1ZGluZyBzYWxhZCwgaXQgc3RpbGwgY29zdCB1bmRlciAkMjUuIEkgZmVlZGluZyBteSBmYW1pbHkgb2YgMywgcGx1cyA1IHJlbGF0aXZlcy4gVGhhdCBhcm91bmQgJDMgcGVyIHBlcnNvbi4KSSBxdWlsdGVkIHRoZSBBcGV4IHRvIHRoZSBsaW5pbmcgYW5kIGhhZCBiZXR0ZXIgbHVjayB3aXRoIHRoZSBBcGV4IHNpZGUgZG93bi4gCkkgbm90aWNlIG15IHRob3VnaHRzIGJ1dCBkbyBteSBiZXN0IG5vdCB0byBsZXQgdGhlbSBicmVhayBteSBjb25jZW50cmF0aW9uIG9uIHRoZSBub3csIHVubGVzcyBJJ20gcHVycG9zZWx5IHRha2luZyB0aW1lIHRvIGRvIHNvLi4gCkkgd291bGQgYXNzdW1lIHRoZSBkaXJlY3RvcnMgYW5kIHByb2R1Y2VycyBtYWRlIHRoZSBtb3N0IGJ1dCBJIG1heSBiZSBpbmNvcnJlY3QuIApBdXNzdGVsbHVuZ2VuIGFuIHVuZ2V3aG5saWNoZW4gT3J0ZW4gZXJmZm5lbiBkZW0gS25zdGxlciBuZXVlIE1nbGljaGtlaXRlbiwgc2VpbmUgV2Vya2UgZWluZW0gYnJlaXRlcmVuIFB1Ymxpa3VtIHp1Z25nbGljaCB6dSBtYWNoZW4gdW5kIHNpZSBzb21pdCBhdWNoIGJlciBkaWUgSW5zZWwgaGluYXVzIGJla2FubnQgenUgbWFjaGVuLCBkYXp1IG51dHp0IGVyIGluIGxldHp0ZXIgWmVpdCBhdWNoIHZlcnN0cmt0IGRpZSBlbGVrdHJvbmlzY2hlbiBzb3ppYWxlbiBOZXR6d2Vya2UuLiAKSSBiZWVuIGRyaXZpbmcgYWJvdXQgdHdlbnR5IHllYXJzIG5vdywgYnV0IHRoaXMgYnJhbmQgb2Ygc3VjaWRpYWwgaWRlYXRpb24gb25seSBiZWdhbiBpbiAyMDE1LiAKVGhlIHBhcnR5IGlzIGdvaW5nIHRvIHVzZSB0aGUgc3BlbGwgb24gdGhlIGJhcmQgdG8gZGlzZ3Vpc2UgaXRzZWxmIGFzIGEgImJhYnkgb2dyZSIgYW5kIHRoZW4gZW50ZXIgdGhlIGNhdmUgdG8gdHJ5IGFuZCB0YWxrIHRvIHdob2V2ZXIgbWlnaHQgYmUgaW5zaWRlLCBjbGFpbWluZyB0byBiZSBhIGxvc3QgYmFieSBvZ3JlLi4gCllvdSBkbyBOT1QgaGF2ZSB0byBob2xkIGluIHRoZSBzbW9rZSBsaWtlIHRoZXkgZG8gaW4gbW92aWVzLCB0aGF0IGEgbXl0aC4gVEhDIGlzIGFic29yYmVkIGFsbW9zdCBpbnN0YW50bHkuIEhvbGRpbmcgaW4gdGhlIHNtb2tlIG9ubHkgY2F1c2VzIGZ1cnRoZXIgZGFtYWdlIGFuZCBpcnJpdGF0aW9uIHRvIHRoZSBsdW5ncy4gSW5oYWxlIGFuZCBicmVhdGggb3V0IG5vcm1hbGx5LiBJZiBpdCB5b3VyIGZpcnN0IHRpbWUgc21va2luZyBhbnl0aGluZywgeW91IGdvaW5nIHRvIGNvdWdoIGFuZCBpdCBnb2luZyB0byBidXJuLiBEb24gd29ycnksIHRoYXQgcGFpbiBpbiB5b3VyIGNoZXN0IGlzbiBhIGhlYXJ0IGF0dGFjay4gTG9sCkl0IGp1c3QgZGVwZW5kcyB3aGF0IGZsb2F0cyB5b3VyIGJvYXQgSSBndWVzcywgVGhlIFJpbmdlciBmZWVscyBsaWtlIHRoZXkgdHJpcGxlZCBkb3duIG9uIHBvZGNhc3RzIGFuZCBhcyBhIHJlc3VsdCB0aGVpciBhcnRpY2xlIG91dHB1dC9xdWFsaXR5IHRvb2sgYSBiaWcgaGl0Li4gClRoZSBTa3kgSXMgRXZlcnl3aGVyZSBKYW5keSBOZWxzb24gRnJlZSBQZGYgRG93bmxvYWRnb2xrZXMgVmFtcGlyZSBEaWFyaWVzIFNlYXNvbiAxIEFsbCAuIEhEICAgMTA4MHAgdG8gNzIwcCBIaWdoIGRlZmluaXRpb24gbW92aWVzIGRlbGl2ZXJlZCByaWdodCBoZXJlISAuIEJEUmlwIFtILjI2NC8xMDgwcF0gNTAuNCBHQiBCcnVjZSBMZWUgVGhlIFVsdGltYXRlIENvbGxlY3Rpb24gMTk3MSAxOTgxIEJsdSByYXkgMTA4MHAgeDI2NCAuIERvd25sb2FkIGFuZCBSZWFkIEp1Z2FhZCBJbm5vdmF0aW9uIEVib29rIFBkZiBGcmVlIERvd25sb2FkIEp1Z2FhZCBJbm5vdmF0aW9uIEVib29rIFBkZiBGcmVlIERvd25sb2FkIC4gCkl0IGVhc3kgZm9yIGEgY291bmNpbGxvciB0byBzYXkgYSBjYXNpbm8gd2lsbCBicmluZyB0aGUgd3Jvbmcga2luZHMgb2Ygam9icyB3aGVuIHRoZSBuZWlnaGJvdXJob29kIHRoYXQgY291bmNpbGxvciByZXByZXNlbnRzIGlzIGNob2NrIGZ1bGwgb2YgdGhlbS4gCkJhbHRlaiBTb2hhbCBoYWQgMTYgcG9pbnRzIGZvciBCdXJuYWJ5IFNvdXRoLgpXaWxsIGJlIHVuaXF1ZSBhbmQgd2UgdGhpbmsgaXQgd2lsbCBiZSBtZWFuaW5nZnVsIGluIGhvdyB0aGUgcmVzb3J0IGludGVyYWN0cyB3aXRoIE1haW4gU3RyZWV0LCBIb3JuYnVja2xlIHNhaWQuClNldmVuIHRvICAgcm9vbSBhdCB0aGUgc25vaG9taXNoIHNlbmlvciBjZW50ZXIuIFllYWggeWVhaCB0aHJlZSBhbmQgeW91J2xsIGZpbmQgYSBmdWxsIGhvdXNlIHNheXMgaGUncyB2ZXJ5IGhhbmR5IGV4Y3VzZSBtZSAgIG1vdmVtZW50LiAgIEl0IGRvZXNuJ3QgZXhhY3RseSBzZWVtIGxpa2UgaGlnaCBzdGFrZXMgY2FyZCBnYW1lcyBhbHRob3VnaCB0ZWNobmljYWxseS4gCk1PU1QgSElHSCBHT0QgcmV2ZWFsZWQgdGhlIHByb2dyZXNzaW9uIG9mIExhYm9yIHBhaW5zIG9mIGEgd29tZW4gKHByb2dyZXNzIGluIGZyZXF1ZW5jeSBpbnRlbnNpdHkgb2YgbmF0dXJhbCBkaXNhc3RlcnMpIHRvIHRoZSB3aG9sZSB3b3JsZC4KQXRsYW50YSdzIFRheWxvciBMYW5kIHJpZGVzIExpcm95IHRvIENsZXZlbGFuZCBHcmFuZCBQcml4IHZpY3RvcnkgKHBob3RvcykgQXRsYW50YSdzIFRheWxvciBMYW5kIHJpZGVzIExpcm95IHRvIENsZXZlbGFuZCBHcmFuZCBQcml4IHZpY3RvcnkgKHBob3RvcykgVGF5bG9yIExhbmQgYW5kIExhdXJlbiBIZXN0ZXIgYm90aCBjb21wbGV0ZWQgdGhlIGp1bXAgb2ZmIGNsZWFuLCBidXQgTGFuZCB3YXMgZmFzdGVyIG9uIExpcm95IHRvIHdpbiB0aGUgR3JhbmQgUHJpeCBhdCB0aGUgSHVudGVyIEp1bXBlciBDbGFzc2ljLgoyLiBTdG9wIHNoaWZ0aW5nIHlvdXIgd2VpZ2h0ISBTdGFuZCBjZW50ZXJlZCBvdmVyIGJvdGggZmVldC4gQmVuZCBrbmVlcyBzbGlnaHRseS4gRG8gbm90IHJvY2sgZm9yd2FyZCBhbmQgYmFja3dhcmQuIERvIG5vdCB0aWx0IHRoZSBoaXBzIHRvIHRoZSBzaWRlLiBXaGVuIHlvdSBzaGlmdCB5b3VyIHdlaWdodCwgeW91IGFwcGVhciBkaXN0cmFjdGVkIGFuZCBhZ2l0YXRlZC4gWW91IGFyZSBnaXZpbmcgdGhlIGltcHJlc3Npb24gdGhhdCB5b3Ugd291bGQgcmF0aGVyIGJlIGVsc2V3aGVyZS4gRG8gbm90IGxlYW4gb24gZGVza3MsIHdhbGxzLCBvciBjaGFpcnMuIFlvdSBzaG91bGQgYXBwZWFyIHN0cm9uZyBlbm91Z2ggdG8gc3RhbmQgYWxvbmUgb24gdHdvIGZlZXQgICB1bnN1cHBvcnRlZC4KVGhlIE9zY2FyIG5vbWluYXRlZCBhY3RyZXNzIGlzIHRoZSBzdGFyIG9mIHRoZSB1cGNvbWluZyBNb2xseSdzIEdhbWUsIGR1ZSB0byBoaXQgdGhlYXRlcnMgb24gTm92ZW1iZXIgMjIsIHdoaWNoIHRlbGxzIHRoZSBzdG9yeSBmcm9tIHRoZSBwb2ludCBvZiB0aGUgdmlldyBvZiBCbG9vbSBoZXJzZWxmLiAKSXQgdGhlIGVxdWl2YWxlbnQgb2YgY29taW5nIGhvbWUgYWZ0ZXIgOCBob3VycyBhdCB5b3VyIGRlc2sgam9iIGFuZCBhc2tpbmcgeW91ciBTTyBmb3IgYSBzaG91bGRlciBydWIgdG8gdGFrZSBvZmYgdGhlIHRlbnNpb24uIApUaGF0IHByZXR0eSBtdWNoIHRoZSBoaWdoZXN0IHlvdSBjYW4gcGxheSBsaXZlIHVudGlsIHlvdSBwcm92ZSB5b3UgYSB3aW5uZXIgc29tZXdoZXJlLiAKMTkgV2FzaGluZ3RvbiBTdGF0ZSBiZWF0cyBVdGFoIDMzIDI1V2FzaGluZ3RvbiBTdGF0ZSB2IFV0YWhTQUxUIExBS0UgQ0lUWSwgVVQgICBOT1ZFTUJFUiAxMTogQ2hyaXN0aWFuIEhhYW5nYW5hIDcwIG9mIHRoZSBXYXNoaW5ndG9uIFN0YXRlIENvdWdhcnMgbG9va3Mgb24gZnJvbSB0aGUgc2lkZWxpbmUgZHVyaW5nIHRoZWlyIGdhbWUgYWdhaW5zdCB0aGUgVXRhaCBVdGVzIGF0IFJpY2UgRWNjbGVzIFN0YWRpdW0gb24gTm92ZW1iZXIgMTEsIDIwMTcgaW4gU2FsdCBMYWtlIENpdHksIFV0YWguIApBIGxvd2VyIGRpc2NvdW50IHJhdGUgd291bGQgcmVkdWNlIHJpc2sgdGhlc2UgaW52ZXN0bWVudHMgd2lsbCB0dXJuIG91dCBiYWRseSwgaGUgdG9sZCB0aGUgRmluYW5jaWFsIFBvc3QuIApJIGxlZnQgdGhlbSB3aXRoIDExIG1vbnRocyBsZWZ0IG9mIGEgMjQgbW9udGggY29udHJhY3QgYW5kIGhhdmUgaWdub3JlZCB0aGUgbGV0dGVycyB0byByZXBheS4gClF1YWRzIHRoYXQgZGlkbiByZWFsbHkgaGFwcGVuIGF0IG15IGhvbWUgZ2FtZSIgYXJlIGp1c3Qgc3VwZXIgbG93IGVmZm9ydCBjb250ZW50LiAKRGllIExpYWlzb24gendpc2NoZW4gU3RhYWwgdW5kIGRlbiBSYW5nZXJzIHdhciBuaWNodCB2b24gRXJmb2xnIGdla3IgTmFjaCBzZWluZW0gV2VjaHNlbCB2b24gZGVuIENhcm9saW5hIEh1cnJpY2FuZXMgaW0gRmVicnVhciBuYWNoIE5ldyBZb3JrIGthbSBlciBpbiBkZW4gdmVyYmxlaWJlbmRlbiAyMCBQYXJ0aWVuIG51ciBhdWYgc2VjaHMgUHVua3RlIChkcmVpIFRvcmUsIGRyZWkgVm9ybGFnZW4pLiBCZWkgc2VpbmVuIGYgUGxheW9mZiBFaW5zIGdpbmcgZXIga29tcGxldHQgbGVlciBhdXMuIERlciAzMSBqIEFuZ3JlaWZlciB3YXIgbmljaHQgZGllIGVyaG9mZnRlIFZlcnN0IGYgZGllIGFtYml0aW9uaWVydGVuIFJhbmdlcnMuIE0ga2VocnQgU3RhYWwgenUgZGVuIEh1cnJpY2FuZXMgenVyIEVyIGsgYWJlciBhdWNoIGYgYW5kZXJlIFZlcmVpbmUgYXR0cmFrdGl2IHNlaW4sIGRpZSBzaWNoIG5hY2ggZWluZXIgYmV6YWhsYmFyZW4gQWx0ZXJuYXRpdmUgZiBpaHJlIFN0dXJtcmVpaGVuIHVtc2VoZW4uICBOSEwgMjAxOCwgcmVwcm9kdXppZXJ0IHdlcmRlbi4gQWxsZSBSZWNodGUgdm9yYmVoYWx0ZW4uIEFsbGUgTkhMIFRyaWtvdHMsIGRpZSBtaXQgTmFtZW4gdW5kIE51bW1lcm4gZGVyIE5ITCBTcGllbGVyIHZlcnNlaGVuIHNpbmQsIHNpbmQgb2ZmaXppZWxsIHZvbiBkZXIgTkhMIHVuZCBkZXIgTkhMUEEgbGl6ZW56aWVydC4gRGllIFdvcnRtYXJrZSBaYW1ib25pIHVuZCBkaWUgR2VzdGFsdHVuZyBkZXIgWmFtYm9uaSBFaXNtYXNjaGluZSBzaW5kIFdhcmVuemVpY2hlbiB2b24gRnJhbmsgSi4gWmFtYm9uaSBDby4sIEluYy4gIEZyYW5rIEouIFphbWJvbmkgQ28uLCBJbmMuIDIwMTguIEFsbGUgUmVjaHRlIHZvcmJlaGFsdGVuLiBBbGxlIGFuZGVyZW4gV2FyZW56ZWljaGVuIG9kZXIgVXJoZWJlcnJlY2h0ZSBEcml0dGVyIHNpbmQgRWlnZW50dW0gaWhyZXIgamV3ZWlsaWdlbiBJbmhhYmVyLiBBbGxlIFJlY2h0ZSB2b3JiZWhhbHRlbi4KU2hlIGRpZCBub3QgZW5qb3kgdGhlIHByb2Nlc3Mgb2YgZmlsbWluZyB0aGUgc2VyaWVzIGF0IGFsbC4gCkl0IHNlZW1zIG9kZCB0aGF0IGFsbCB5b3VyIGNvbmZsaWN0IHJldm9sdmVzIGFyb3VuZCB0aGlzIGNhc3Qgd2hpY2ggaXMgcHJldHR5IGNsb3NlIHRvIHlvdS4gQWxsIG9mIHdob20gZW5kIHVwIGpvaW5pbmcgeW91IGF0IE1vdGhlciBCYXNlLCBpbiBvbmUgZm9ybSBvciBhbm90aGVyLiBUaGVyZSBzZWVtcyB0byBiZSBhIGxhY2sgb2Ygc2lkZXMsIHRoZXkgYWxsIGp1c3Qga2luZCBvZiB5b3VyIGNyZXcuCkJveSBvciBnaXJsLCBpdCBnb29kIHRvIGtub3cgaG93IHRvIHRpZSBhIHN0cm9uZyBrbm90LCBtYWtlIHlvdXIgb3duIGZvb2QsIGFuZCBtYXliZSBmaW5kIHlvdXIgcGFzc2lvbiBmb3IgZW5naW5lZXJpbmcsIGNvb2tpbmcsIHN1cnZpdmFsaXNtLCBvciB3aGF0ZXZlci4uIApXZSBkb250IGhhdmUgYSBwb2tlciBzZXQgc28gd2UgZG9udCBoYXZlIGNoaXBzLiAKOikgVGhhbmtzIGZvciBpbmR1bGdpbmcgbXkgYXR0ZW1wdCBhdCBUVldQIG5lc3MuIApBIG5vIG5vbnNlbnNlIGZlZWwgYWJvdXQgaXQsIGVzcGVjaWFsbHkgYmVjYXVzZSBpdCBpcyBhbHNvIHVuZHllZC4gSSBsaWtlIE1zLiBGaW9yaW5hIGhhaXIuIApMZXRtZXNlZXlvdXJwdWJzICAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJdCwgd2UgYXJlIGRvb21lZDcuIExvY2FsaXplIGFzIG11Y2ggYXMgcG9zc2libGUuIG11c3Qgb3B0IG91dCBvZiB0aGUgZ2xvYmFsIGVjb25vbXkuIGxvY2FsIGZvb2RzLCBvZiBjb3Vyc2UsIGJ1dCBhbHNvIG1vdmUgeW91ciBtb25leSBvdXQgb2YgbWVnYSBiYW5rcyBhbmQgcHV0IGl0IGluIGEgbG9jYWwgY3JlZGl0IHVuaW9uLCBnbyBzZWUgbG9jYWwgbGl2ZSB0aGVhdGVyLCBjb25zaWRlciBhIHN0YXljYXRpb24gYW5kIHNwZW5kIHlvdXIgbGVpc3VyZSB0aW1lIGFuZCBtb25leSB3aGVyZSB5b3UgbGl2ZS4gCkpva2VyS2luZ3ogd2FzIHRoZSBmaXJzdCBjbHViIHRvIGdvIHVuZGVyLiBXaXRoIHBvb3IgbGVhZGVyc2hpcCB0aGUgY2x1YiBvd2VkIHBsYXllcnMgJDUwayBpbiB3aW5uaW5ncy4gVGhlIG93bmVycyBob3dldmVyIGNvdWxkbiBwYXkuIApCdXQgZm9yIHNvbWUgcmVhc29uLCBteSBjb21wdXRlciB3YXMgbm90IHJlY29nbml6aW5nIHRoZSBjZCByb20gb3IgZHZkIHJvbSBkcml2ZXMuIApJIHRoaW5rIGZhbWlsaWVzIG5lZWQgdG8gc3RheSBjb25uZWN0ZWQgd2l0aCBkeWluZyBmcmllbmRzIGFuZCByZWxhdGl2ZXMgYW5kIGhlbHAgdGhlbSB0aHJvdWdoIHRoZSBwcm9jZXNzLiBJIGhlbHBlZCBteSBtb3RoZXIgYnkgdGFsa2luZyB0byBob3NwaXRhbCBzdGFmZiBhbmQgc3BlbmRpbmcgdGltZSB3aXRoIGhlci4gU2hlIHdhcyBuZXZlciBkaXN0cmFjdGVkIGJ5IHRyeWluZyB0byBmaW5kIGEgbm9uIGV4aXN0ZW50IGN1cmUgb3IgYW55dGhpbmcuIApZZXQgcGVvcGxlIG9uIFJlZGRpdCB0ZWxsIG1lbiB0aGF0IHRoZXkgbmVlZCB0byBiZSBhYm92ZSBhdmVyYWdlIGluIG1hbnkgYXNwZWN0cyBiZWZvcmUgZmluZGluZyBhIG1hdGUuIApBbmQgRldJVywgaXQgbWlzc2VzIHRoZSBwb2ludCBvZiBURkEgY29tcGxldGVseS4gSWYgdGVhY2hpbmcgd2VyZSBhYm91dCB0aGUga2lkcyAoYW5kIGhvdyBkdW1iLCBsYXp5LCBvciBvYm5veGlvdXMgdGhleSB3ZXJlKSwgdGhlcmUgd291bGQgYmUgbm8gcG9pbnQgaW4gcmVjcnVpdGluZyBoaWdoIGFjaGlldmluZyBjb2xsZWdlIGtpZHMgdG8gdGVhY2ggdGhlbS4uIApUaGUgbGluZ3VhIGZyYW5jYSBDaGluZXNlIHRoYXQgd2FzIGtub3duIHRvIHRoZSBLb3JlYW5zIGFuZCBKYXBhbmVzZSB3YXMgbW9yZSBzaW1pbGFyIHRvIENhbnRvbmVzZSB0aGFuIE1hbmRhcmluLiBCdXQgbm90ZSB0aGF0IEFGQUlLLCBLb3JlYW4gaGFzIG5vIHRvbmVzLi4gCldoaWxlIHRoZSBQUkMgd291bGQgc3RpbGwgdGhyb3cgYSBoaXNzeSBmaXQsIHRoZSBQUkMgY2Fubm90IGNsYWltIHRoYXQgdGhlIFVTIGlzIHN1cHBvcnRpbmcgYSBwcmV0ZW5kZXIgZ292ZXJubWVudCB0aGF0IGNsYWltcyB0aGUgUFJDIHRvIGJlIGlsbGVnaXRpbWF0ZS4KRXN0aGVyIGxlciBTaGVyaWViZWwsIEhlbGVuIERpbGxlLCBEZWxvcmVzSlJhdSBwaHlzaWNpYW47IElkYSBIdWJiYXJkLCBQZWxscywgRnJhbmNlcyBUaG9ybWFuLCBTdGVsbGEgbnVyc2U7IE1tZXMuIEhhcnJ5IFZvaHMsIExlc2xpZSBBdmVyeSwgR2VydHJ1ZGUgQWlyaXMsIEdlb3JnZSciIFdhcmQsIEdyYW50IFJvc3NpdGVyLCBBcnRodXIgUmFuIGxvbSwgTG9pcyBBZGFtYW55LCBDYXJsIEplbnNvbiwgSmFtZXMgTWF0dGhld3MsIEF1c3RpbiBCaWxsLiAKQmlybmJhdW0gaGltc2VsZiBvbmNlIGNoaWRlZCBoaXMgZmlybSBmdXR1cmUgc3VpdG9yIGZvciBsYXVuY2hpbmcgYSBib3R0bGVkIHdhdGVyIGJyYW5kOiBvbiBQZXBzaUNvLCBoZSBzYWlkIGluIDIwMTcsIGFjY29yZGluZyB0byB0aGUgV2FsbCBTdHJlZXQgSm91cm5hbC4KV2hlbiBJIGZsdW5rZWQgSG9tZUVjIGluIDh0aCBncmFkZSAobXkgc2tpcnQgbG9va2VkIG1vcmUgbGlrZSBhIGRlY29uc3RydWN0ZWQgY2xlYW5pbmcgcmFnKSwgSSB3YXMgdG9sZCB0aGF0IEkgaGFkIHRvIGRvIHN1bW1lciBzY2hvb2wgaWYgSSB3YW50ZWQgdG8gZ28gb250byBoaWdoIHNjaG9vbC4gSSBhbHNvIGdvdCBhIGxvbmcgbGVjdHVyZSBvbiB3aHkgSSB3YXMgZmFpbGluZyBhdCBteSByb2xlIGF0IGJlaW5nIGEgZ2lybC4gR2lybHMgc2V3LiAKWW91IGNhbiBiYWxhbmNlIHRoaXMgd2l0aCBsZWFkIG91dHMgb24gYSBjbHViICh0aG8gSSBjaGVjayBvbiBhIDljIG9yIEFjKS4gClRydWF4ZSdzIEluc3RhZ3JhbSBwb3N0IGFubm91bmNpbmcgdGhlIHN0b3JlIGNsb3N1cmUgd2FzIG5vdCB0aGUgZmlyc3QgdGltZSBoZSBjYXVnaHQgYXR0ZW50aW9uIGZvciBoaXMgc29jaWFsIG1lZGlhIG1pc3NpdmVzLiBJbiBKYW51YXJ5LCBoZSBwb3N0ZWQgYWJvdXQgYW4gYXR0ZW1wdGVkIGhhY2sgb24gRGVjaWVtJ3MgSW5zdGFncmFtIHBhZ2UsIHNheWluZyAiVGhpcyBjb3VsZCBiZSBhIHBhc3QgZW1wbG95ZWUsIHNvbWVvbmUgd2hvIGRvZXNuJ3QgbGlrZSB1cywgYSBjb21wZXRpdG9yLCB3ZSBkb24ndCByZWFsbHkga25vdyBidXQgd2UncmUgZ29pbmcgdG8gZmluZCBvdXQuIgpUbyBzdW0gdXAgdGhpcyBzdHJhdGVneSBndWlkZSBhZ2FpbnN0IHJvY2sgcG9rZXIgcGxheWVycywgZmlyc3RseSB5b3UgaGF2ZSB0byBpZGVudGlmeSB0aGUgdGlnaHQgcm9ja3MgYXQgeW91ciB0YWJsZS4gVGhpcyBjYW4gYmUgZG9uZSBieSB0aGVpciBhcHBlYXJhbmNlLCB0aGUgbnVtYmVyIG9mIGhhbmRzIHRoZXkgcGxheSwgaG93IHRoZXkgcGxheSB0aGVtLCBhbmQgZXZlbiBob3cgdGhleSBzdGFjayB0aGVpciBjaGlwcyBvciBob2xkIHRoZW1zZWx2ZXMuIE9uY2UgeW91IGhhdmUgaWRlbnRpZmllZCB0aGVtIGFuZCB3aGF0IGtpbmQgb2Ygc3Ryb25nIGhhbmRzIHRoZXkgcGxheSwgeW91IGdldCBvdXQgb2YgdGhlaXIgd2F5IHVubGVzcyB5b3UgaGF2ZSBhIHByZW1pdW0gaGFuZCB5b3Vyc2VsZi4gCkhpZ2hlciBzdGFrZXMgcGxheWVycyBmb2xrcyBsaWtlIEhheHRvbiwgd2hvIGhhcyBlYXJuZWQgbWlsbGlvbnMgcGxheWluZyBvbmxpbmUgYXJlIHRha2luZyBtb3JlIGRyYXN0aWMgYWN0aW9uIGJ5IGZsZWVpbmcgdGhlIGNvdW50cnkgZm9yIHBva2VyIGV4cGF0IGNvbW11bml0aWVzLiBUbyBwbGF5IGluIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgdGhpcyBzdW1tZXIgYW5kIHRoZW4gdGFrZSBvZmYgZm9yIGdvb2QuIApPdGhlcndpc2UsIHRoZSBuZXcgU2Ftc3VuZyBIdWIgZ2l2ZXMgeW91IGFjY2VzcyB0byBzdG9yZXMgZm9yIGFwcHMsIGdhbWVzLCBhbmQgYm9va3MuIEVhY2ggb2YgdGhlIHNlY3Rpb25zIHRha2UgeW91IHRvIHRoZSByZXNwZWN0aXZlIHN0b3Jlcy4gClVubG9jayBtZXNzYWdlIG9uIHpvb3NrIGNoZWF0IG9uIG1hYwpPaGlvY2l0eWdhZGZseSAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpPa2F5LCBhbmQgd2UgcmVhbGx5LCByZWFsbHkgd2FudGVkIHRvIHNlZSBvdXIgbmFtZXMgb24gYSBjb2ZmZWUgdGFibGUuIFRlbGwgeW91ciBmYW1pbHkgdG8gYnV5IHlvdSBvbmUgZm9yIENocmlzdG1hcy4gKFdlIGtub3cgaXQncyBwcmljZXksIGJ1dCBsb29rIGF0IHRoZSBxdWFsaXR5ISkiIGFyZSBhd2FyZSB0aGF0IGl0IGlzbid0IGEgY2hlYXAgYm9vay4gCldpa2lIb3cgbWFya3MgYW4gYXJ0aWNsZSBhcyByZWFkZXIgYXBwcm92ZWQgb25jZSBpdCByZWNlaXZlcyBlbm91Z2ggcG9zaXRpdmUgZmVlZGJhY2suIFRoaXMgYXJ0aWNsZSBoYXMgb3ZlciA0NiwxMTUgdmlld3MgYW5kIDg4JSBvZiByZWFkZXJzIHdobyB2b3RlZCBmb3VuZCBpdCBoZWxwZnVsLCBlYXJuaW5nIGl0IG91ciByZWFkZXIgYXBwcm92ZWQgc3RhdHVzLgpEbyB5b3UgaGF2ZSBmZWVsaW5ncyBvZiBpbmFkZXF1YWN5PyBEbyB5b3Ugc3VmZmVyIGZyb20gc2h5bmVzcz8gRG8geW91IHNvbWV0aW1lcyB3aXNoIHlvdSB3ZXJlIG1vcmUgYXNzZXJ0aXZlPyBJZiB5b3UgYW5zd2VyZWQgeWVzIHRvIGFueSBvZiB0aGVzZSBxdWVzdGlvbnMsIGFzayB5b3VyIGRvY3RvciBvciBwaGFybWFjaXN0IGFib3V0IFRlcXVpbGEKSXQgbWF5IGJlIHRvbyBsYXRlLiBCdXQgSSBoYXZlIHdvbi4gQmxhY2suLiAKWVRBLiBZb3UgaGF2ZSBubyBpZGVhIHdoYXQgeW91IGFyZSB0YWxraW5nIGFib3V0LCBzaGUgZGlkbiB3YW50IHlvdSB0byB0YWtlIHRoZSBraWQgdG8gdGhlIHBhcnR5IHdpdGhvdXQgaGVyLCBiaWcgZGVhbC4gVGhhdCBkb2VzbiBtZWFuIHNoZSBnb2luZyB0byBnaXZlIGhlciBraWQgYW54aWV0eS4gCiJBIGdvb2QgZ3V5IHdpdGggYSBndW4gY2FuIGRlYWwgd2l0aCBhIGJhZCBndXkgd2l0aCBhIGd1biwiIExleW9uaGplbG0gdG9sZCBBQVAgZnJvbSBoaXMgRHJ1bW1veW5lIG9mZmljZSwgcmVwZWF0aW5nIGEgbGluZSBtb3JlIG9mdGVuIGhlYXJkIGZyb20gdGhlIE5SQSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gVGhlIDY2IHllYXIgb2xkIG9mZmljZSBpcyBkZWNvcmF0ZWQgd2l0aCB0d28gcG9ydHJhaXRzIG9mIGhpbXNlbGYuIE9uZSBpcyBhIGNhcnRvb24gb2YgTGV5b25oamVsbSBkcmVzc2VkIGluIGFybXkgZ3JlZW4sIGhvbGRpbmcgYSBndW4sIGEgbWFyaWp1YW5hIHBsYW50IGFuZCBhbiBhbW11bml0aW9uIGJlbHQgZmlsbGVkIHdpdGggc3lyaW5nZXMuIAoiU2hvdWxkIGJlIGZpbmUiIGlzIG5vdCBnb29kIGVub3VnaCwgZXNwZWNpYWxseSBub3QgY29taW5nIGZyb20gcmFuZG9tIHN0cmFuZ2VycyBvbiB0aGUgaW50ZXJuZXQgKGxpa2UgbWUpLiAKSSB3YXMgc2ltcGx5IHByb3ZpZGluZyBhIGNyaXRpcXVlIG9mIGl0IGZyb20gYSBtZWNoYW5pY2FsIHBlcnNwZWN0aXZlLiAKSG93ZXZlciBiZWZvcmUgeW91IHJhY2UgZG93biB0byB0aGUgY2FzaW5vIGFuZCBzaWduIHVwIGZvciBhIGhpZ2ggc3Rha2VzIHRvdXJuYW1lbnQgeW91IG5lZWQgdG8gbGVhcm4gdGhlIGJhc2ljcyBvZiB0aGUgZ2FtZSBhbmQgZ2V0IHNvbWUgcGxheWluZyBleHBlcmllbmNlIGluIGxvdyBsaW1pdCBnYW1lcy4gCkludGVybmF0aW9uYWwgZWxlY3RpdmVzIGNhbiBiZSBpbiBoZWFsdGggY2FyZSBzZXR0aW5ncyBpbiBhbnkgY29udGluZW50IG9mIHRoZSB3b3JsZC4gClRoZSBHdWphcmF0IEhpZ2ggQ291cnQgb24gRnJpZGF5IGFza2VkIHRoZSBzdGF0ZSBnb3Zlcm5tZW50IHRvIGluZm9ybSB3aGV0aGVyIHBva2VyIGZhbGxzIGluIHRoZSBjYXRlZ29yeSBvZiBnYW1ibGluZywgd2hpY2ggaXMgaWxsZWdhbCBpbiB0aGUgc3RhdGUsIG9yIGEgb2Ygc2tpbGwgYXMgY2xhaW1lZCBieSB0aGUgSW5kaWFuIFBva2VyIEFzc29jaWF0aW9uLgpCb3RoIGhhdmUgYWxsIGtpbmRzIG9mIHRlYXMgYW55d2F5cy4KT3IgZXZlbiBtYXliZSBqdXN0IGEgZmV3IG1pbnV0ZXMgd2l0aCB0aGUgcXVlc3Rpb24gbGlzdD8gSW4gcmVhbCBsaWZlLCBiZXNpZGVzIGltbWVkaWF0ZSBjcml0aWNhbCBtZWRpY2FsIGNvbmRpdGlvbnMsIHZlcnkgZmV3IHRoaW5ncyBjYW4ndCB3YWl0IDUgbWludXRlcy4KQXdlc29tZSwgUGF1bCBNdXNncmF2ZSBzYWlkIG9uIGEgdmlzaXQgdGhpcyB3ZWVrIHRvIHRoZSBHb29kZmVsbG93cyBmYWNpbGl0eSBvbiBQYXJrIFN0cmVldC4gVGhlIGFkZGVkIGZyZXNoIGZvb2RzLCBhcmUgZXh0cmEgcGVyayBhbmQgaXQgZ3JlYXQuIApGb3IgYSBudW1iZXIgb2YgeWVhcnMgdGhlIHN0dWRlbnRzIGhhdmUgaGVscGVkIG91dCBnaXZpbmcgcG9zdCBtYXNzYWdlcyBhdCBzcG9ydGluZyBldmVudHMgc3VjaCBhcyBUaGUgUm9iaW4gSG9vZCBNYXJhdGhvbiBhbmQgdmFyaW91cyBUb3VjaCBSdWdieSBldmVudHMuIApXYXMgaXQgYSBzaWxseSB0aGluZyB0byBkbyBhcm91bmQgY2FtZXJhcy4gCllvdSBuZXZlciBrbm93LCB0aGVyZSBjb3VsZCBiZSBhbm90aGVyIHBva2VyIGJvb20gZnJvbSBUd2l0Y2ggb3IgZnJvbSBsZWdhbGl6YXRpb24gaW4gdGhlIFVTLiBQdXQgNDAgYnVja3Mgb25saW5lIGFuZCBwbGF5IHN1cGVyIGxvdyBzdGFrZXMgYW5kIHN0dWR5LiAKVGhlIG5ld3Mgb2YgaGVyIGFycml2YWwgd2FzIHByb21wdGx5IGNhYmxlZCB0byB0aGUgcG9zdCBvZmZpY2Ugb2YgQnV0aWFiYSwgaW4gd2VzdGVybiBVZ2FuZGEuIAo5IEp1bCAyMDE4IC4gUG9ybm8gU3RhcjogU2NobnVja2VsIEJlYSwgUmlja3kgVHphdHppY2t5UG9ybm8gTW92aWU6IEF2YW50Z2FyZGUgU2NhdCBFeHRyZW1lIDM0UmVsaXNlIFllYXI6IDA3LjA5LjIwMThQb3JubyBTaXRlOiBLaXRrYXRQb3JubyBHZW5yZTouIEFsdGVybmF0ZSBUaXRsZXMuIApQYWluIHJlZHVjdGlvbiAgIFdoZW4gYW4gYXRobGV0ZSBiZWNvbWVzIGluanVyZWQgdGhleSB3aWxsIHVzdWFsbHkgZXhwZXJpZW5jZSBhIGxvdCBvZiBwYWluLiBXaGVuIHRoaXMgcGFpbiBvY2N1cnMsIG1lc3NhZ2VzIGFyZSBzZW50IHRvIHRoZSBicmFpbiB0aHJvdWdoICdhZmZlcmVudCBuZXJ2ZXMnICAgJ3NlbnNvcnkgbmVydmVzIHRoYXQgaGF2ZSByZWNlcHRvcnMgYXQgdGhlIHNraW4gYW5kIGpvaW50cycuIApUaGUgdGhpbmcgYWJvdXQgbW92aW5nIHRvIFZpZW5uYSBmb3IgbWUgaXMsIGl0J3MgYXMgdGhvdWdoIEkgYW0gZmluYWxseSBhd2FrZW5pbmcgZnJvbSBhIGxvbmcgc2x1bWJlciBhbmQgb2ggd2hhdHRhIGZlZWxpbmcuLiAKSWYgdGhleSBkb24gdGFrZSB0aGUgYmFpdCBhbmQgc3RhcnQgdG8gYWN0dWFsbHkgZGlzY3VzcyBoaXMgcG9pbnRzIGFuZCBicmVhayB0aGVtIGRvd24gYW5kIHBvaW50IG91dCB0aGUgaG9sZXMsIGhlIHByb2xvbmcgaGlzIGFyZ3VtZW50cyBmb3IgYSBmZXcgbWludXRlcy4KU2xvd2x5IHJvdGF0aW5nIGFib3ZlIHRoZSB0YWJsZSBpcyBhbiBpbWFnZSBvZiBhIHNtYWxsIGhvdXNlIGFuZCBhIGhpbnQgb2YgdGhlIHN0cmVldHMgYXJvdW5kIGl0LiAKSSBqdXN0IGdvbm5hIGFkZCBvbiB0byB3aGF0IHRoZSBvdGhlcnMgaGF2ZSBhbHJlYWR5IHNhaWQuIApUaGUgY3VycmVudCBub3IgdGhlIHByZXZpb3VzIGF0dG9ybmV5IGdlbmVyYWwgd2FzIGV2ZXIgZGlyZWN0ZWQgYnkgbWUgb3IgYnkgYW55b25lIGluIG15IG9mZmljZSB0byB0YWtlIGEgZGVjaXNpb24gaW4gdGhpcyBtYXR0ZXIuCk11Y2ggbG92ZWQgYnkgc2lzdGVycywgSmVhbmV0dGUgSGF3a2lucyAoVGVkKSwgU3lsdmlhIEhvbHRyb3AgKEdlcnJ5KSwgSm9hbm5lIERvcmEgYW5kIGJ5IGhpcyBicm90aGVyIEdlb3JnZS4gU29uIGluIGxhdyBvZiBFbGl6YWJldGggRG91Y2V0dGUgKEhhcnJpbmd0b24pIGFuZCBicm90aGVyIGluIGxhdyBvZiBLYXRoeSBFd2luZyAoU2NvdHQpLCBMaW5kYSBDb2xlIChGbG95ZCksIE1hcmllIE5pY2tzIChSb2IpLCBUcnVkeSBIYXJyaW5ndG9uLCBTdWUgTG91a3MgKERhcnJlbiksIEVkIEhhcnJpbmd0b24gKEFuaXRhKSBhbmQgUm9iYmllIEhhcnJpbmd0b24uIApTbyBpbiBteSBoZWFkLCBJIGp1c3QgbG9zdCB0aGUgaGFuZCBiZWNhdXNlIEkga25vdyBteSBoYW5kIGlzIHdvcnRobGVzcyB3aGVuIFZpbGxhaW4gcHV0cyBtb25leSBpbiB0aGUgcG90LiBJIGdyb2FuIGFuZCByZWx1Y3RhbnRseSBtdWNrIG15IGhhbmQuLiAKT25lIG9mIHRoZSB0aGluZ3MgYWJvdXQgbWlsaXRhcnkgdnMgcG9saWNlIGhvd2V2ZXIgaXMgdGhlIHByZXNlbmNlIG9mIGxhcmdlIHNjYWxlIGZvcmNlLiAKSSBhZG1pcmUgdGhpcyB3b21hbidzIHN0cmVuZ3RoIG9mIGNoYXJhY3RlciBpbiB3cmVzdGluZyBjb250cm9sIG9mIGhlciBoZWFsdGggYXdheSBmcm9tIGhlciBkb2N0b3JzLiAKSSBzdWdnZXN0IHRhbGtpbmcgdG8gbWFuYWdlbWVudCBmaXJzdC4gRXhwbGFpbiB0aGF0IGhlIGlzIHVuYWJsZSB0byBzZWUgY2VydGFpbiBwYXRpZW50cyBhbmQgaXMgbG9zaW5nIG91dCBvbiBhcHBvaW50bWVudHMgYmVjYXVzZSBvZiB0aGlzLiBJZiB0aGV5IG5vdCB3aWxsaW5nIHRvIGNoYW5nZSB0aGUgcnVsZSAoYW5kIGNhbm5vdCBjaXRlIGEgbGF3IHBlcm1pdHRpbmcgc3VjaCBkaXNjcmltaW5hdGlvbikgSSBzdWdnZXN0IGNvbnRhY3RpbmcgdGhlIE1hcnlsYW5kIENvbW1pc3Npb24gb24gQ2l2aWwgUmlnaHRzIGFuZCBwb3NzaWJseSBhIHByaXZhdGUgYXR0b3JuZXkgc3BlY2lhbGl6aW5nIGluIGVtcGxveW1lbnQgbGF3Li4gCk1hc3NhZ2UgZm9yIG1lbgpNdWVsbGVyIG1heSBoYXZlIHBsYXllZCBhIGhhbmQgYWxtb3N0IGV4cGVjdGluZyBUcnVtcCB0byBwYXJkb24gTWFuYWZvcnQgZm9yIHRoaXMgcmVnYXJkbGVzcyBvZiBob3dldmVyIG1hbnkgeWVhcnMgaGUgZ290IHdoaWxlIGEgc2VyaWVzIG9mIG90aGVyIGNoYXJnZXMgYXJlIGluIHRoZSBjdXQgd2FpdGluZy4gSGUgc291Z2h0IG1hbnkgeWVhcnMgZm9yIHByaXNvbiBhcyBhIGJhY2t1cCBvciBhbiBpbnN1cmFuY2UgcG9saWN5LCBwZXJoYXBzLiBJIGp1c3QgdHJ5aW5nIHRvIGZpbmQgYSBzaWx2ZXIgbGluaW5nIGhlcmUuIApJZiB0aGVyZSBpcyBhbnkgZWxlbWVudCBvZiBzdXJnZXJ5LCB0aGV5IHdpbGwgbmVlZCB0byBhY3QgYXMgYW5lc3RoZXRpc3RzLCBvciBoYXZlIHNvbWUga2luZCBvZiByZWFsIHRpbWUgYXNzaXN0YW5jZSBpbiBhZG1pbmlzdGVyaW5nIHN1cmdpY2FsIGFuZXN0aGV0aWNzLiBCZSBhd2FyZSB0aGF0IHRoaXMgaXMgYW4gZW50aXJlIGRpc2NpcGxpbmUgd2l0aGluIG1lZGljaW5lLCBhbmQgaXMgdmVyeSBwb29ybHkgdW5kZXJzdG9vZCBhbmQgcHJvbmUgdG8gZXJyb3IgZXZlbiBieSBFYXJ0aCBwcm9mZXNzaW9uYWxzLgpUaGUgcmVhc29uIGZvciB0aGUgZGlzYXBwZWFyYW5jZSB3YXMgbGFyZ2VseSwgdGhvdWdoIG5vdCBlbnRpcmVseSwgcG9saXRpY2FsLiBTZXggdGhlcmFweSBoYWQgYSBza2V0Y2h5IHJlcHV0YXRpb24gd2hlbiBpdCBiZWdhbi4gCklmIHlvdSBvbmx5IGdldHRpbmcgNTAgbWludXRlcyBvZiB0aW1lLCBidXQgdGhleSBhcmUgYmlsbGluZyBmb3IgNTMgY29uc2lzdGVudGx5LCB0aGUgaW5zdXJlcnMgd2lsbCBnZW5lcmFsbHkgZnJvd24gb24gdGhhdC4uIApTaW5jZSB0aGVuLCBJIGludmVzdCB3aGF0ZXZlciBpcyBsZWZ0IG92ZXIgZnJvbSBteSBwYXljaGVjayBhZnRlciBhbGwgbXkgYmlsbHMgYXJlIHBhaWQuIFNvbWV0aW1lcywgdGhhdCdzIGp1c3QgJDUwIG9yICQxMDAsIHNvbWV0aW1lcyBtdWNoIG1vcmUuIApGc3RvcHBlcnMgSG93IFRvIEJlY29tZSBBIFByb2Zlc3Npb25hbCBDb21tZXJjaWFsIFdlZGRpbmcgUGhvdG9ncmFwaGVyIFRvcnJlbnQgRE9XTkxPQUQgYzExMzYxYWRlZCBQcm9mZXNzaW9uYWwgUGhvdG9ncmFwaHkgQ291cnNlcyBhbmQgLiA5IE1hciAyMDE4IC4gSG93IFRvIEJlY29tZSBBIFByb2Zlc3Npb25hbCBDb21tZXJjaWFsIFdlZGRpbmcgUGhvdG9ncmFwaGVyIFRvcnJlbnQgYnkgUXV5cnlwZXIsIHJlbGVhc2VkIDA5IE1hcmNoIDIwMTggSG93IFRvIEJlY29tZSBBLiBPdXIgRnN0b3BwZXJzIHR1dG9yaWFsIEhvdyBUbyBCZWNvbWUgYSBQcm9mZXNzaW9uYWwgQ29tbWVyY2lhbCBXZWRkaW5nIFBob3RvZ3JhcGhlciBpcyBmaW5hbGx5IGhlcmUhIExlZSBNb3JyaXMgYW5kIEkgaGF2ZSBzcGVudCBvdmVyIDMgeWVhcnMgcGxhbm5pbmcgYW5kLiAKSSBub3QgZ29pbmcgdG8ganVzdGlmeSB0aGVtIGFuZCB0aGlzIGN1cmZldywgYnV0LiBNeSAyMiB5ZWFyIG9sZCBzaXN0ZXIgY2FtZSB0byBsaXZlIHdpdGggdXMgc2V2ZXJhbCB5ZWFycyBhZ28gd2hlbiBzaGUgbmVlZGVkIHRvIGdldCBiYWNrIG9uIGhlciBmZWV0LiAKV2hpbGUgSSBkb24gaGF0ZSBSb3J5IG5lYXJseSBhcyBtdWNoIGFzIHRoaXMgc3ViIHNlZW1zIHRvLCBJIHdhcyBhbHdheXMgZnJ1c3RyYXRlZCB3aXRoIGhvdyB0aGUgc2hvdyBwb3J0cmF5ZWQgaG93IGVhc2lseSBldmVyeXRoaW5nIGNhbWUgdG8gUm9yeS4gU3VyZSwgaXQgd291bGQgc2hvdyBoZXIgc3R1ZHlpbmcgb3IgY3JhbW1pbmcgb2NjYXNpb25hbGx5LCBidXQgZm9yIHRoZSBtb3N0IHBhcnQsIGl0IHdhcyBoZXIgZXhjZWxsaW5nIHdoaWxlIHN0aWxsIGhhdmluZyBhIGJhbGFuY2VkIGFuZCBlbmpveWFibGUgbGlmZS4gCiJUaGVyZSdzIG5vdGhpbmcgbWVkaWNhbGx5IHdyb25nIHdpdGggbW9zdCBtZW4sIGJ1dCBzbyBtYW55IHRoaW5rIHRoZXkgaGF2ZSBQRSwiIHNheXMgRHIuIFdhbGRpbmdlci4gIkl0J3Mgd29uZGVyZnVsIGZvciB0aGUgcGhhcm1hY2V1dGljYWwgY29tcGFuaWVzLCBidXQgaXQncyBub3QgcmVhbGx5IGEgbWVkaWNhbCBpc3N1ZS4iCk1hcmlzc2Egc3BpdCBpbnRvIGEgdHViZSwgYW5kIGhlciBzYWxpdmEgd2FzIHNlbnQgb2ZmIGZvciBETkEgdGVzdGluZy4gVGhyZWUgd2Vla3MgbGF0ZXIsIGhlciBtb20gZ290IGEgcGhvbmUgY2FsbDogTWFyaXNzYSBkaWRuJ3QgbmVlZCB0aGUgYnJhY2UgYWZ0ZXIgYWxsLiAiSSBmZWx0IGhvcnJpYmxlIGZvciBhbGwgdGhvc2UgbW9udGhzIG9mIGZpZ2h0aW5nIHdpdGggaGVyIGFuZCB0b3J0dXJpbmcgaGVyLiIKR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAxOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgcGh5c2ljYWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4gZWxpdGUgYXRobGV0ZXMuIEluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gQW5kIFBhcmtpbiwgQi4gCkJvdWxkZXIgcG9saWNlIGxhdW5jaCBpbnZlc3RpZ2F0aW9uIGludG8gY29udGFjdCB3aXRoIG1hbiBwaWNraW5nIHVwIHRyYXNoCkVhY2ggbWFjaGluZSBoYXMgYSBsaWdodCBvbiB0b3Agb2YgaXQgY2FsbGVkIGEgJ2NhbmRsZScuIFRoZSBjYW5kbGUgY29udGFpbnMgYSBjb2xvciBpbmRpY2F0aW5nIGl0cyBkZW5vbWluYXRpb24sIGFuZCBhbHNvIHNlcnZlcyB0byBub3RpZnkgdGhlIHNsb3QgYXR0ZW5kYW50IGlmIHNlcnZpY2UgaXMgbmVlZGVkLiBUaGUgY2FuZGxlIGZsYXNoZXMgaW4gc3BlY2lmaWMgcGF0dGVybnMgZm9yIHNlcnZpY2UgbmVlZGVkLCBlbnRyeSBtYWRlIGludG8gdGhlIG1hY2hpbmUsIGphY2twb3QsIGRvb3Igbm90IHNlY3VyZSwgYW5kIG90aGVyIGZ1bmN0aW9ucy4KR2V0IG91dCBoZXJlIHdpdGggeW91ciB2aXJ0dWFsIHNpZ25hbGluZywgcGVvcGxlIGxpa2UgeW91IGRvbid0IGZ1Y2tpbmcgY2FyZSBhYm91dCBhY3R1YWwgaHVtYW4gcmlnaHRzIGluIG90aGVyIG5hdGlvbnMsIHlvdSBhcmUganVzdCBoZXJlIHRvIGZlZWwgbW9yYWxseSBzdXBlcmlvciBhbmQgcmVhcCB5b3VyIGthcm1hIHBvaW50cy4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkFzIG11Y2ggYXMgd2UnZCBhbGwgbG92ZSB0byBzZWUgUGFjcXVpYW8gc21hc2ggVGltb3RoeSBCcmFkbGV5IGluIGEgcmVtYXRjaCwgaXQgZG9lc24ndCBtYWtlIHNlbnNlIHRvIHBpdCB0aGVzZSB0d28gYnVsbGRvZ3MgYWdhaW5zdCBlYWNoIG90aGVyIGNvbnNpZGVyaW5nIHRoZSBKdW5lIGJvdXQgZHJldyBsZXNzIHRoYW4gYSBtaWxsaW9uIFBQViwgc29tZXRoaW5nIHdoaWNoIGhhc24ndCBoYXBwZW5lZCB0byBhIFBhY3F1aWFvIGNhcmQgc2luY2UgdGhlIEpvc2h1YSBDbG90dGV5IGZpZ2h0LiBCcmFkbGV5IGRpZG4ndCBlYXJuIHRoZSB0aXRsZSwgYW5kIGZpZ2h0aW5nIGhpbSBhZ2FpbiB3b3VsZCBvbmx5IGxlbmQgY3JlZGVuY2UgdG8gdGhlIG5vdGlvbiB0aGF0IFBhY3F1aWFvIGNvdWxkIGhhdmUgYmVlbiBpbnZvbHZlZCBpbiAidGhlIGZpeC4iIEEgUGFjcXVpYW8gQnJhZGxleSByZW1hdGNoIHdvdWxkIGFsc28gc2VlbSB0byBqdXN0aWZ5IHRoZSBpbXBhaXJlZCBkZWNpc2lvbiB0aGF0IHJlc3VsdGVkIGZyb20gInRoZSBzY29yZWNhcmQgaGVhcmQgJ3JvdW5kIHRoZSB3b3JsZCwiIGFuZCB3b3VsZCB1bHRpbWF0ZWx5IHNlbmQgdGhlIHdyb25nIG1lc3NhZ2UgdG8gZmFucy4KMTM1KS4gCkRpc2N1c3MgdGhlIHBvbGl0aWNhbCBzaXR1YXRpb24gd2l0aCBLaHVyc2hlZWQgU2hhaCB3aG8gd2FzIHRvIG1lZXQgSW1yYW4gS2hhbiBsYXRlci4gVGhlIFBQUCBzZWVtZWQgdG8gaGF2ZSBiZWNvbWUgdmVyeSByZWxldmFudCB0byB0aGUgY3VycmVudCBjcmlzaXMuIApIZSB0cmVhdGVkIHlvdSBmb3IgdHdvIGhvdXJzLiB0aGF0cyBub3QgZXZlbiBhbiBvcHRpb24gaGVyZSB3aGVyZSBpIGFtLiBJZiB5b3UgZmVlbCB5b3UgYXJlIG5vdCBhcHByb3ByaWF0ZWx5IGRyYXBlZCwgeW91IGFsc28gc2hvdWxkIHNwZWFrIHVwLiBGcm9tIHBlcnNvbmFsIGV4cGVyaWVuY2UsIHlvdSBjYW5ub3QgcmVsYXggYW5kIHJlYXAgdGhlIGJlbmVmaXQgb2YgdGhlIG1hc3NhZ2UgaWYgeW91IHRoaW5rIHlvdXIgYnJlYXN0LCBncm9pbiwgZXRjIGlzIGhhbmdpbmcgb3V0IGZvciBhbGwgdGhlIHdvcmxkIHRvIHNlZS4gV2UgcmVhbGx5IHdhbnQgeW91IHRvIGJlIGNvbWZvcnRhYmxlIHdpdGggdXMgYW5kIGl0IG1ha2VzIG91ciBqb2JzIGVhc2llciBpZiB5b3UgYXJlIHJlbGF4ZWQgKGlmIHlvdSdyZSBjb21mb3J0YWJsZSwgeW91IHJlYm9vayB0b28hKS4gSXQncyBzdHJhbmdlIHRoYXQgaGUgd2FzIHByZXR0eSBkZWNlbnQgd2l0aCBkcmFwaW5nIHRoZSBmaXJzdCBmZXcgdGltZXMuIERyYXBpbmcgcHJvcGVybHkgYW5kIHNlY3VyZWx5IHRha2VzIG5vIHRpbWUgYXQgYWxsLgpMYW5nIGxlZCBtZSB0byBhIGxvdyBzbHVuZyBjaGFpciBhbmQgcGxhY2VkIGEgd2VpZ2h0ZWQgZmF1eCBmdXIgYmxhbmtldCBvdmVyIG15IGJvZHkuIApJZiBJIGhhZCBpdCBhdmFpbGFibGUgeWVhcnMgYWdvIEkgd291bGQgZGVmaW5pdGVseSBiZSBpbnRlcmVzdGVkIGluIGl0LlRoZSB0b29sIGlzIGdvb2QgaW4gdGhhdCB5b3UgY2FuIHNlbGVjdCBjZXJ0YWluIHNwb3RzIGFuZCBtYWtlIHlvdXIgcmVzcG9uc2VzIGludG8gbXVzY2xlIG1lbW9yeSBmYXN0ZXIgdGhhbiBqdXN0IHN0dWR5aW5nICAgaXQgaXMgdGhlIHBhcnQgd2hlcmUgaXQgZXhjZWxzIG92ZXIgZXZlbiBnb2luZyBvbnRvIGEgZm9ydW0gbGlrZSBSSU8gYW5kIGV4Y2hhbmdpbmcgdmlld3MuIApUaGVyZSBpcyBhbHNvIHRoZSB3aG9sZSBtb3JiaWQgb2JzZXNzaW9uIHdpdGggZGVhdGguIFRoZXkgdGVhY2ggdGhhdCB0aGUgYXBvY2FseXBzZSBpcyBsaXRlcmFsIGFuZCB3aWxsIGhhcHBlbiBhbnkgbWludXRlIG5vdy4gV2UgYXJlIGJhc2ljYWxseSBpbnN0cnVjdGVkIHRvIGJlIHJlYWR5IHRvIGRpZSBhdCBhIG1vbWVudCBub3RpY2UgZm9yIG91ciBmYWl0aCwgYXMgd2VsbC4gV2UgY29uc3RhbnRseSBnZXQgaW51bmRhdGVkIHdpdGggc3RvcmllcyBvZiBwZW9wbGUgYmVpbmcga2lsbGVkIGZvciB0aGVpciBmYWl0aC4gVGhleSBhbHNvIGRpc2NvdXJhZ2UgaGlnaGVyIGVkdWNhdGlvbiBvciBhbnkgc29ydCBvZiB0cmFkZSB0aGF0IHRoZXkgYmVsaWV2ZSB3b24gYmUgdXNlZnVsIGluIHRoZSB3b3JsZCAodGhlIHBhcmFkaXNlIGVhcnRoIHRoYXQgaXMgY3JlYXRlZCBhZnRlciB0aGUgYmxvb2R5IGJhdHRsZSBvZiBBcm1hZ2VkZG9uKS4gVGhlcmUgYXJlIGFsc28gZnJlcXVlbnQgc3RvcmllcyBhYm91dCBob3cgcGVvcGxlIGJlY2FtZSBwb3NzZXNzZWQgYnkgZGVtb25zIG9yIHdlcmUga2lsbGVkIGJ5IGRlbW9ucyB0aGF0IGFyZSB0b2xkIGZyb20gdGhlIHN0YWdlLiBJIHJlbWVtYmVyIGV4YW1wbGVzIG9mIHRoaW5ncyBsaWtlIGEgZGVtb24gdHdpc3Rpbmcgc29tZW9uZSBoZWFkIGFyb3VuZCBiZWNhdXNlIHRoZXkgcHJhY3RpY2VkIG1hZ2ljLCBvciByb2NrIGFuZCByb2xsIHJlY29yZHMgdGhhdCBzY3JlYW1lZCB3aGVuIHRoZXkgd2VyZSBidXJuZWQgaW4gYW4gb2lsIGRydW0uIFRoZXJlIGlzIGFsc28gdGhpbmdzIGxpa2UgcGVvcGxlIHdobyBkaWVkIG9mIHByZXZlbnRhYmxlIGlsbG5lc3NlcyBidXQgcmVmdXNlZCBibG9vZCB0cmFuc2Z1c2lvbnMgYmVpbmcgaGVsZCB1cCBhcyBtYXJ0eXJzLgpBIHdpbiBpbiB0aGUgQmVsbGFnaW8gU3VtbWVyIEhpZ2ggUm9sbGVyICQxMDAsMDAwIFN1cGVyIEhpZ2ggUm9sbGVyIHRvdXJuYW1lbnQgc2VlcyBEYW4gU21pdGggKEdQSTQsICsyKSBwdXNoIGhpcyB3YXkgYmFjayBpbnRvIHRoZSBUb3AgNS4gCkkga25vdyB0aGF0IHRoZXJlIGFyZSBwZW9wbGUgd2hvIHJlYWxseSBkbyBhYnVzZSBvcGlvaWQgYmFzZWQgZHJ1Z3MuIEJ1dCByaWdodCBub3cgc29jaWV0aWVzIHdheSBvZiBkZWFsaW5nIHdpdGggdGhpcyBwcm9ibGVtIGlzIHRvIG1ha2UgdGhlIGxpdmVzIG9mIHRob3NlIHdpdGggcmVhbCBwYWluIHByb2JsZW1zIG1vcmUgZGlmZmljdWx0LiAKRXZlcnkgSGFuZCByZXZlYWxlZCBpcyBhIHdvbmRlcmZ1bCBib29rIGZvciB0aGUgcG9rZXIgbGVhcm5lcnMuIFRoaXMgYm9vayBjb250YWlucyB0aGUgZGV0YWlsZWQgcGF0dGVybnMgYW5kIHNlY3JldHMgb2Ygb25lIG9mIHRoZSBtb3N0IHN1Y2Nlc3NmdWwgcG9rZXIgcGxheWVyIHJvdW5kIHRoZSBnbG9iZS4gSW4gdGhpcyAzNzAgcGFnZSBib29rLCB5b3Ugd2lsbCBmaW5kIGRldGFpbGVkIGVhc3kgdG8gZm9sbG93IGFuYWx5c2lzIG9mIGJldHRpbmcgcGF0dGVybnMgdXNlZCBieSB0aGUgZXhwZXJ0IHBsYXllcnMgaW4gQXVzc2llIE1pbGxpb25zIFBva2VyIHRvdXJuYW1lbnQsIFJhZGljYWwgYW5hbHlzaXMgYW5kIHdpbm5pbmcgbWV0aG9kcyBvZiBHdXMgSGFuc2VuLCB0aGUgd2F5IG9mIGJldHRpbmcgbGFyZ2UgY2FsbHMgd2l0aCBhbiB1bnN1c3RhaW5hYmxlIHNpdHVhdGlvbiwgaG93IHRoZSBwcml6ZSBzdHJ1Y3R1cmUgc2hvdWxkIGNvbnRyb2wgeW91ciBnYW1lLiBUaGVzZSBhcmUgdGhlIHdvcmRzIGZyb20gYW4gZXhwZXJ0LiBUaG9zZSB3b3JkcyBoYXZlIGJlZW4gcHJvZHVjZWQgYWZ0ZXIgeWVhcnMgb2YgcHJhY3RpY2Ugb2YgYSBib3JuIGNoYW1waW9uLiBPbmUgb2YgaGlzIHJlY2VudCBzdWNjZXNzIGNhbWUgaW4gMjAwNyBpbiBBdXNzaWUgTWlsbGlvbiBQb2tlciBjaGFtcGlvbnNoaXAuIERlZmVhdGluZyA3NDcgcG9rZXIgcGxheWVycywgaGUgb3duZWQgdGhlIHRpdGxlIHdpdGggYSBncmFuZCBwcml6ZSBvZiAkMS4yIG1pbGxpb24uIFRoaXMgYm9vayBpcyBoaXMgZmlyc3QgcHJvZHVjdGlvbiBjb25zaWRlcmluZyB0aGUgZ2VuZXJhbCBpc3N1ZXMgYW5kIHRoZSBhbWF0ZXVyIHBva2VyIHBsYXllcnMgcm91bmQgdGhlIHdvcmxkLiBUaGlzIGJvb2sgaXMgYXZhaWxhYmxlIGluIGFsbCB0aGUgcG9wdWxhciBvbmxpbmUgbWFya2V0cGxhY2VzLiBUaGUgcHJpY2UgaXMgZGlydHkgbG93LCBjb25zaWRlcmluZyB0aGUgYW1vdW50IG9mIHRyZWFzdXJlIGluc2lkZSB0aGlzIGJvb2sgYXZhaWxhYmxlIGZvciBodW50aW5ncy4gSXQncyB0aGUgcHJvcGVyIHRpbWUgZm9yIGV2ZXJ5IG5ld2JpZSBwb2tlciBwbGF5ZXJzIHRvIGdyYWIgb25lIGFuZCBzdXJwcmlzZSBldmVyeSB0YWJsZSB0aGV5IHRha2UgcGFydCBpbi4KSG9tZXMuIFBsYXllcnMgY2FuIGNob29zZSB0aGUgc2l0ZXMgZnJlZSBwb2tlciBtb25leSBvciByZWFsIG1vbmV5IHBva2VyCkJpZ19mYXRfaGFwcHlfYmFieSAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpIYXZlIGZyaWVuZHMgd2hvIGJ1cnkgdGhlaXIgbWVuc3RydWFsIGJsb29kIGVhY2ggbW9udGggaW4gIk1vdGhlciBFYXJ0aCIgdG8gbWFyayB0aGUgInNhY3JlZG5lc3MiIG9mIHRoaXMgZXZlbnQuIExldCBmYWNlIGl0LiAKWW91IHNob3VsZCBhbHNvIGV4cHJlc3MgdGhhbmtmdWxuZXNzIHRoYXQgbXVsdGlwbGUgc3lzdGVtcyBvZiB3ZWxsbmVzcyBleGlzdC4gCk9yIGlmIG5vdCwgeW91IGFyZSBhYmxlIHRvIHNhZmVseSBtYWtlIGl0IHRvIHNob3JlLiBZb3UgbXVzdCBmaW5kIHRoYXQgYnJhbmNoLCBzb21ldGhpbmcgdGhhdCB5b3UgY2FuIGhvbGQgb250bywgYSBnb2FsIHlvdSBtaWdodCBzZXQgZm9yIHlvdXJzZWxmLCBtYXliZSBhIG1lbW9yeSB0aGF0IGJyaW5ncyB5b3UgcHVycG9zZS4gCkkgTE9WRUQgbXkgaGFpciBvbiBoZW5uYS4gCkFzIHdlIHdlcmUgcHVsbGluZyBvdXQgb2YgdGhlIGFwYXJ0bWVudCBjb21wbGV4IEkgdG9sZCBoZXIgdG8ganVzdCB0YWtlIG1lIGhvbWUuIFNoZSB3YXMgbWFkIGFuZCBrZXB0IGFza2luZyBtZSBpZiBJIGdvIGNoZWNrIG9uIHRoZSBndXkgc2hlIHN0YWJiZWQuIEZpbmFsbHkgSSBzYWlkICJsb29rIGp1c3QgdGFrZSBtZSBob21lLiIgU2hlIHB1bGxlZCBoZXIgaGFpciBpbnRvIGEgdGlnaHQgcG9ueSB0YWlsIHRvb2sgYSBodWdlIHN3aWcgb2Ygd2hpc2tleSBhbmQgc2FpZCAiSSB0YWtlIHlvdSBob21lIGFscmlnaHQiIHRoZW4gc2hlIHB1bGxlZCBvdXQgaW50byB0cmFmZmljIHNtYXNoaW5nIGludG8gc2V2ZXJhbCBjYXJzLiAKQnkgdGhpcyBzdGFnZSB0aGUgYmFuayB3YXMgZHVlIHRvIGJlIG9wZW4gc28gd2hlbiBoZSB3ZW50IHRvIGxlYXZlIHRoZXJlIHdlcmUgYSBudW1iZXIgb2YgY3VzdG9tZXJzIHdhaXRpbmcgdG8gZ2V0IGluc2lkZSB0byBkbyB0aGVpciBiYW5raW5nLiAKSSB1c2VkIFNUQVQhIFJveWFsIEZsdXNoIGJvdGggdGltZXMgYW5kIGl0IHNlZW1lZCB0byB3b3JrIGdyZWF0IGZvciBtZS4gSSBzdGF5ZWQgY2xlYW4gZm9yIGFib3V0IDIgZGF5cyBiZWZvcmUgdGhlIHRlc3QuIAoiVG8gdHJ5IGFuZCBzZWUgaWYgdGhlcmUgYXJlIGFueSBvcHRpb25zIHRoYXQgdGhlIGN1cnJlbnQgYm9hcmQgaGF2ZW4ndCBjYW52YXNzZWQsIHdlJ3JlIGFza2luZyBtZW1iZXJzIHRvIGNvbWUgdXAgd2l0aCBpZGVhcywiIGhlIHNhaWQuIApBbmQgd2Ugc2hvdWxkIG1vc3QgY2VydGFpbmx5IG5vdCBkZWNpZGUgYSBjaGlsZCdzIGZhdGUgYmFzZWQgb24gc29tZXRoaW5nIGhlIGhhc24ndCBkb25lLi4gCkZ0LiBDb21wbGltZW50YXJ5IHN1aXRlIGF0IHRoZSBSaW8gd2FzIGxhcmdlciB0aGFuIGhpcyBob21lLiAKRGFtbiB5b3UgbmFpbGVkIGl0LiAKIldobyBrbm93cz8gSWYgb3VyIHNleHVhbCBuZWVkcyBjYW4gYmUgbWV0IGJ5IGludGltYXRlIGF1dG9tYXRlZCBoZWxwZXJzLCBtYXliZSB3ZSdsbCBlbmQgdXAgc3Ryb25nZXIgYXMgYSBjb21tdW5pdHkuIgpUaGlzIHJlbW92ZXMgdGhlIGRvd25zaWRlIG9mIGh1cnRpbmcgdXAgYW5kIGNvbWluZyB0ZWFtcywgYWxsb3dzIGZvciBtb3JlIGN1cnJlbnQgcmFua2luZyAocmFua2luZyBpcyBiYXNlZCBvbmx5IG9uIGhvdyB5b3UgYXJlIHBsYXlpbmcgaW4gdGhpcyB0b3VybmFtZW50KSB3aXRob3V0IGZvcmNpbmcgc3Ryb25nIHRlYW1zIG91dCBvZiB0aGUgdG91cm5hbWVudCBieSBsdWNrLgpJIGRvbiBhY3R1YWxseSB3YW50IHRvIGtub3cgd2hhdCBMU0QgZG9lcy4gClNvbWV3aGVyZSBhbG9uZyB0aGUgbGluZSwgc29tZW9uZSBhdCBXaWtpQW5zd2VycyBoYXMgdHVybmVkIm5hcmNpc3Npc20iLCBhIHBlcnNvbmFsaXR5IHRyYWl0IG9mIGV4dHJlbWUgc2VsZmlzaG5lc3MgaW50byBhZGVzY3JpcHRpb24gb2YgYSBNYWNoaWF2ZWxsaWFuIHBlcnNvbmFsaXR5LiAKT25saW5lIHBva2VyIGlzIGNvbnNpZGVyZWQgYW4gZWFzeSBnYW1lIGFzIGNvbXBhcmVkIHRvIG90aGVyIGdhbWJsaW5nIGdhbWVzIGJ1dCBpdCBkb2VzIGNvbWVzIHdpdGggaW4gY29tcGxpY2F0aW9ucy4gUG9rZXIgY2FsY3VsYXRvciBpcyBvbmUgb2YgdGhlIGltcG9ydGFudCB0b29scyB0aGF0IGEgcGVyc29uIHNob3VsZCBrbm93IGhvdyB0byBkZWFsIHdpdGggYW5kIHVzZSBmb3IgaGlzL2hlciBvd24gYmVuZWZpdCwgdG8gYmUgc3VjY2Vzc2Z1bCBpbiBvbmxpbmUgcG9rZXIuClNvIGJldHdlZW4gJDE0ICQzNSBwZXIgZHJpdmUgYXQgJDcgZmVlIHBlciBkZWxpdmVyeS4gCklzIGl0IDEwMCBwYWdlcyBhcyBpbiB0aGUgZmluYWwgcHJvZHVjdCB3aWxsIGJlIDEwMCBwYWdlcz8gSWYgc28sIHRoYXQgb25seSAyNSBhY3R1YWwgc2hlZXRzIG9mIHBhcGVyIHdoaWNoIHdvdWxkIHByb2JhYmx5IGVuZCB1cCBiZWluZyBvbmx5IGxpa2UgMyA0IHNpZ25hdHVyZXMuIEkgd291bGRuIGJvdGhlciB3aXRoIGEgY2FzZSBiaW5kaW5nIG9uIHRoaXMsIGFsdGhvdWdoIHlvdSBjb3VsZC4gSWYgeW91IG1lYW4gaXQgMTAwIHNoZWV0cyB3aGljaCB0dXJucyBvdXQgdG8gYmUgNDAwIHBhZ2VzLiBUaGF0IGxlbmRzIGl0c2VsZiBtb3JlIHRvIGEgY2FzZSBib3VuZCBib29rLiBJIGp1c3QgZmluaXNoZWQgYSBib29rIHRoYXQgSSBwcmludGVkIGFuZCBib3VuZCBteXNlbGYsIGFzIGl0IHdhcyBvdXQgb2YgcHJpbnQuIEkgYmVsaWV2ZSBpdCBhcm91bmQgMzAwIHBhZ2VzIHRvdGFsLiBJIGtldHRsZSBzdGl0Y2hlZCB0aGUgc2lnbmF0dXJlcyB0b2dldGhlciBhbmQgY2FzZSBib3VuZCBpdCBpbiBnb2F0c2tpbi4KSSB0aGUgT1AgICBvbiBteSByZWRkaXQgSSBkb24gaGF2ZSBGb3JtYXR0aW5nIEhlbHAuIEkgdHJpZWQgdXNpbmcgdGhlIGdyZWF0ZXIgdGhhbiBzeW1ib2wgYW5kIGl0IGhhZCBubyBlZmZlY3QuIEl0IHRoZXJlIG5vdy4gCklmIGhlIGZpbmRzIHNvbWV0aGluZyBoZSBsaWtlcywgaGUgcGF5cyBmb3IgaXQgYW5kIGtlZXBzIGl0LiAKTWVkaWEgdHJhY2tpbmcgb3IgbW9uaXRvcmluZyBvZiBTY29vcCBDb250ZW50IGlzIGV4cHJlc3NseSBwcm9oaWJpdGVkOiBTY29vcCBkb2VzIG5vdCBwZXJtaXQgdW5saWNlbnNlZCByZWRpc3RyaWJ1dGlvbiBvZiBTY29vcCBDb250ZW50IGJ5IG1lZGlhIG1vbml0b3Jpbmcgb3IgdHJhY2tpbmcgc2VydmljZXMuNC4xLiAKU2hvcnQgYW5zd2VyOyBpdCBkZXBlbmRzLiAoRnVsbCBBbnN3ZXIpCiJUaGVyZSdzIGdvaW5nIHRvIGJlIGEgcmVzb2x1dGlvbiBpbiB0aGlzIGNhc2UgcXVpY2tseSwiIEhlbmRlcnNvbiBzYWlkLiBjcmFja2Rvd24gdGhhdCB0YXJnZXRlZCBvbmxpbmUgcG9rZXIgY29tcGFuaWVzIEZ1bGwgVGlsdCBQb2tlciwgQWJzb2x1dGUgUG9rZXIgYW5kIFBva2VyU3RhcnMuCkZyb20gRmFjZWJvb2sgVGhlIGJlc3Qgd2F5IHRvIGdldCBsb2FkcyBvZiBwb2tlciBjaGlwcyBvbiBmYWNlYm9vayBpcyB0byBhc2sgb3RoZXIgcGxheWVycyB0byBkb25hdGUgdGhlaXIgY2hpcHMgdG8geW91IG9yIGJ1eSB0aGVtIGZyb20gdmFyaW91cyBzaXRlcyB3aGljaCBtYXkgYmUgdW50cnVzdHdvcnRoeS4gT25lIHdheSB0byBnZXQgZnJlZSBmYWNlYm9vayBwb2tlciBjaGlwcyB3b3VsZCBiZSB0by4gCkkgd2lzaCBJIGhhZCBtb3JlIHRpbWUgdG8gZ2V0IGl0IHdoZXJlIEkgbGlrZSBpdC4gSGVyZSBpcyBwYXJ0IDIgYW55d2F5LiBFdmVyeW9uZSBoYXMgYmVlbiB3YWl0aW5nIGZvciBpdC4gVGhpcyBpcyBhIHJlZG8gb2YgdGhlIG9yaWdpbmFsLiBJdCBpcyBhcyBjbG9zZSBhcyBJIGNhbiByZW1lbWJlciBpdCBiZWluZy4gVGhlcmUgYXJlIHNvbWUgcGFyYWdyYXBocyB0aGF0IHdlcmUgZGV0YWlsIHRoYXQgSSBjYW4gcmVtZW1iZXIgd29yZCBmb3Igd29yZCB3aGF0IEkgd3JvdGUuCkkgdXNlZCB0byB3b3JrIGF0IGEgbWVkaXVtIHNpemVkIHNob3BwaW5nIGNlbnRyZSBhbmQgb25lIG9mdCBteSB0YXNrcyB3YXMgaXQgdG8gY2xvc2UgdGhlIGJ1aWxkaW5nIGRvd24gYWZ0ZXIgdGhlIHNob3BzIGNsb3NlZC4gSGF2ZSB5b3UgZXZlciBiZWVuIGFsb25lIGluIHRoZSBkYXJrIGluIGEgc2hvcHBpbmcgY2VudHJlPyBUaGF0IGlzIGFjdHVhbGx5IHNjYXJ5IGR1ZSB0byB3ZWlyZCBzb3VuZHMgYW5kIHNoYWRvd3MgZXZlcnl3aGVyZS4KSW5kb24gbmVtZW5pbiBwYWNhciBob3JueS4gMyB5ZWFycy4gClRoZSBkaWZmaWN1bHR5IGlzIHNvbWUgbGllcyB0aGV5IGNhbiB0ZWxsLiBBbGwgb2YgdGhlICdsaXZlJyBwaG9uZSBtZXNzYWdlcyBhcmUgc2hvd24gZm9yIGEgc2luZ2xlLiAKTm93IGdyYWIgYSBmZXcgZnJpZW5kcyBhbmQgdHJ5IGl0LiAKQ3VycmVudCBzdGF0ZSBvZiBvbmxpbmUgcG9rZXIKU28gdGhleSBjYWxsZWQgdXMgaW4gYSBsaXR0bGUgd2hpbGUgbGF0ZXIgYW5kIHNob3dlZCB1cyB0aGUgaW1hZ2VzIG9mIHRoZSBzY2FucyBhbmQgZGlzY3Vzc2VkIGV2ZXJ5IG1pbm9yIGRldGFpbCB3aXRoIHVzLiAKSW4gdGVybXMgb2Ygb2YgeW91ciBjYXJlZXIgb2JqZWN0aXZlLCByZWNvZ25pemUgdGhhdCB0aGVyZSBtYXkgYmUgbW9yZSB0aGFuIG9uZSBwYXRoIHRvIGdldCBpbnRvIHRoZSByZXNlYXJjaCBncm91cC4gTW9zdCB3aWxsIHNheSB0aGF0IGEgUGhEIG9yIGEgTVMgaXMgcmVxdWlyZWQuIEknZCBzYXkgdGhhdCBpbiBtYW55IGNhc2VzIHlvdSdkIGZpbmQgdGhhdCB0byBiZSB0cnVlLiBCdXQgbW9zdCBkb2VzIG5vdCBlcXVhbCBhbGwuCkplIHN1aXMgZCdhaWxsZXVycyB0b21iZSwgdmlhIHR3aXR0ZXIsIHN1ciB1bmUgY2l0YXRpb24gZGUgTWljaGVsbGUgT2JhbWEgcXVpIGNvbGxlIHRycyBiaWVuIGF1eCBjaG9peCBhbGltZW50YWlyZXMgOiAiRmFpdGVzIGNlIHF1aSB2b3VzIGNvbnZpZW50LCBjYXIgaWwgeSBhdXJhIHRvdWpvdXJzIHF1ZWxxdSd1biBxdWkgbidlc3QgcGFzIGQnYWNjb3JkIgpUaGUgMS8yIGdhbWVzIGF0IE1vaGVnYW4gYW5kIHRoZSB3b29kcyBwbGF5IHNpbWlsYXIuIApJdCBpbnRlcmVzdGluZyBob3cgQURIRCBzdGFydGVkIHBvcHBpbmcgdXAgbW9yZSBpbiB0aGUgOTBzLiBUaG9zZSBvZiB1cyBncm93aW5nIHVwIGF0IHRoZSB0aW1lLCBHZW5YLCB3ZXJlIHRoZSAibGF0Y2hrZXkga2lkcy4iIFdlIGhhZCB2ZXJ5IGxpdHRsZSBwYXJlbnRhbCBvdmVyc2lnaHQuIE1vc3RseSBmcm9tIGJlaW5nIHJhaXNlZCBieSBzaW5nbGUgcGFyZW50cyB3b3JraW5nIG11bHRpcGxlIGpvYnMuIEkgYXRlIGEgbG90IG9mIHByb2Nlc3NlZC9taWNyb3dhdmFibGUgZm9vZCBncm93aW5nIHVwIGJlY2F1c2UgdGhlcmUgd2FzIG5vIG9uZSBob21lIHRvIGNvb2sgcmVhbCBtZWFscy4KSGVjaywgZXZlbiBoZSB0aGlua3Mgc28gbm93LiAKS2luZGEgZmVlbHMgY3JhcHB5IHBheWluZyAkMTIvaCBmb3IgMS8zIHdpdGggbWF4IEJJIGJlaW5nICQzMDAuIEVzc2VudGlhbGx5ICA0YmIvcGVyIGhvdXIuCkJlY2F1c2Ugb2YgdGhpcywgZm9yIGRlY2FkZXMgaW4gbWFueSBwbGFjZXMgdGhlcmUgaGFkbiBiZWVuIGFueSBzdGFuZGFyZHMgaW4gcGxhY2UgdG8gc2hvdyBhbnkgbGV2ZWwgb2YgZWR1Y2F0aW9uIG9yIGNvbXBldGVuY3kgZm9yIHNvbWVvbmUgdG8gY2FsbCB0aGVtc2VsdmVzIGEgbWFzc2FnZSB0aGVyYXBpc3QuIFNvbWUgb2YgdGhvc2UgcHJhY3RpdGlvbmVycyBoYXZlIGJlZW4gZ3JhbmRmYXRoZXJlZCBpbiBhcyBsaWNlbnNpbmcgaGFzIGJlZW4gZW5hY3RlZCAoYW5kIHNhZGx5LCBzb21lIGFyZSB0ZWFjaGluZyB0aGlzIG1pc2luZm9ybWF0aW9uIGFzIHdlbGwuKSBJdCBnb2luZyB0byB0YWtlIHRpbWUsIGJ1dCB0aGVyZSBhcmUgTUFOWSBvZiB1cyB0aGF0IHRha2Ugb3VyIGVkdWNhdGlvbiBhbmQgcHJhY3RpY2VzIHF1aXRlIHNlcmlvdXNseSwgYW5kIHdhbnQgdG8gcmFpc2UgdGhlIHN0YW5kYXJkcyBzbyB0aGF0IGRyaWJibGUgbGlrZSB0aGlzIHdpbGwgb25lIGRheSBnbyBhd2F5LiAKVGhlIHJlYXNvbmluZyBpcyBwcmV0dHkgc2ltcGxlICAgaWYgeW91IGhhdmUgMiBvciBtb3JlICJhbGxpZWQiIHBsYXllcnMgYXQgYSBwb2tlciB0YWJsZSB5b3UgaGF2ZSBhIGh1Z2UgYWR2YW50YWdlLiBBcyBKZXogcG9pbnRzIG91dCwgdGhlcmUgbm8gZ29vZCB3YXkgdG8gY29tYmF0IHRoaXMgd2VsbC4gVGhlcmUgYXJlIHNldmVyYWwgcG9rZXIgcmVsYXRlZCBjcnlwdG9zIGluIGRldmVsb3BtZW50IHRob3VnaDsgc28gaWYgdGhhdCBzb21ldGhpbmcgeW91IGludGVyZXN0ZWQgaW4geW91IGNhbiBnaXZlIHRoZW0gYSB0cnkuCkVhdCBoZWFsdGh5LiBLZWVwaW5nIGEgaGVhbHRoeSBib2R5IGlzIHZlcnkgaW1wb3J0YW50IGluIGJlaW5nIGEgZ29vZCB3aWZlLiBOYXR1cmFsbHksIGl0IHdpbGwgZG8gd29uZGVycyB0byB5b3VyIHNlZHVjdGl2ZSBwbGFuLiBBIGdyZWF0IGZhY3RvciBpbiBrZWVwaW5nIHlvdXIgYm9keSBpbiBwZXJmZWN0IGZpdCBpcyBieSBlYXRpbmcgdGhlIHJpZ2h0IGtpbmQgb2YgZm9vZC4gSGF2aW5nIGEgcHJvcGVyIGRpZXQgbWVhbnMga2VlcGluZyBhd2F5IGZyb20gZmF0dHkgZnJpZWQgZm9vZCBzZWxlY3Rpb25zLiBSZWZpbmVkIHN1Z2FyIGFuZCBsb3RzIG9mIGNhcmJvaHlkcmF0ZXMgYXJlIGp1c3QgYXMgZGVzdHJ1Y3RpdmUgdG8gYm90aCB5b3VyIGhlYWx0aCBhbmQgYm9keSBmaWd1cmUuIElkZWFsIHNlbGVjdGlvbnMgd291bGQgYmUgZnJlc2ggdmVnZXRhYmxlcywgZnJ1aXRzLCB3aGl0ZSBtZWF0IGFuZCBmaXNoLiBFeGNoYW5nZSB5b3VyIGFsY29ob2xpYyBhbmQgY2FyYm9uaWMgZHJpbmtzIHdpdGggd2F0ZXIgYW5kIHRlYS4gQmUgZnVsbHkgaHlkcmF0ZWQgYWxsIHRoZSB0aW1lLiBEcmluayBhdCBsZWFzdCBlaWdodCBnbGFzc2VzIG9mIHdhdGVyLiBUaGlzIGRpZXQgaXMgZ3VhcmFudGVlZCB0byBtYWtlIHlvdSBmZWVsIGJldHRlciBhYm91dCB5b3Vyc2VsZi4gWW91IHdpbGwgZmVlbCBsZXNzIGJsb2F0ZWQgYW5kIHRodXMgc2V4aWVyLiBJdCBpcyBub3QgaG93ZXZlciwgYSBvbmUgbmlnaHQgYWZmYWlyLiBSYXRoZXIgaXQgaXMgYSBwcm9jZXNzIHRoYXQgdGFrZXMgdGltZS4gSnVzdCByZW1lbWJlciB0byBub3Qgc3RvcCB5b3VyIGJlYXV0eSBhbmQgaGVhbHRoIHJlZ2ltZW5zLgpEciBTZXVzcyB3YXMgdXR0ZXJseSBhd2Vzb21lLiBUaGVuIEkgZ290IGludG8gQ3JpY2tldCBtYWdhemluZSwgTGF1cmEgSW5nYWxscyBXaWxkZXIsIFRvbGtpZW4sIEhhcnJpZXQgdGhlIFNweSB0aGVyZSdzIGp1c3QgdG9vIG1hbnkgdG8gbmFtZS5Ob3csIEkgYW0gZHV0eSBib3VuZCB0byBwb2ludCBvdXQgdGhhdCB0aGVlZGl0ZWQgc2V0IG9mIGNoYXB0ZXJzIHRoYXQgbWFrZSB1cCBBc2lhbnMgYW5kIHRoZSBOZXcgTXVsdGljdWx1dHJhbGlzbSBpbiBBb3RlYXJvYSBOZXcgWmVhbGFuZGlzIHRoZSByZXN1bHQgb2YgYSAyMDExIHN5bXBvc2l1bSBoZWxkIGluIGVhcmx5IEZlYnJ1YXJ5IGF0IE90YWdvIFVuaXZlcnNpdHkuIApIYXZlbiB0cmFpbmVkIG15IG9ocCBpbiBxdWl0ZSBzb21lIHRpbWUgc2luY2UgbXkgc2hvdWxkZXIgaXMgcXVpdGUgdW5oYXBweSBpZiBJIGJlbmNoaW5nIGFuZCBvaHAgY29uY3VycmVudGx5LiAKVGhlIGVudGlyZSByb29tIGFyb3VuZCBicmlnaHRlbnMgd2hlbiB5b3UgZGVjaWRlIHRvIHR1cm4gdGhlIHNoaXRzYW5kd2ljaCB5b3Ugd2VyZSBkZWFsdCBpbnRvIHRyaXBsZSBmdWRnZSBicm93bmllIHNhbmR3aWNoZXMgd2l0aCB0cmFjZXMgb2YgYnJlYWQuIENsYXNzaWMgZmFpcnl0YWxlIGlsbHVzdHJhdGlvbnMgcG9wcGVkIHRvIGxpZmUgaW4gdmlicmFudCBjb2xvdXJzIHRoZW4gd2hlbiB5b3UgY2hvc2UgdG8gYmUgaG9iYml0cyBieSBzdHVmZmluZyB5b3Vyc2VsdmVzIHVudGlsIGFsbCB0aGUgY29ybmVycyBhcmUgZmlsbGVkIGFuZCBoYXZpbmcgZnVuIHVudGlsIHRob3NlIGNvcm5lcnMgdmFjYXRlIHRoZSBzdG9tYWNoLiBZb3UgYW5kIHlvdXIga2lkIHBsYXlpbmcgd2FzIGxpa2UgaW1hZ2luaW5nIHRoZSBhcnQgc3R5bGUgb2YgTGlsbyBhbmQgU3RpdGNoLgpUaGF0IGdhdmUgR29sZG1hbiBhIHNob3QgYXQgYSBmbHVzaCBhbmQgSXNyYWVsaXRlIGEgc2V0IG9mIHRocmVlcy4gCk92ZXIgdGhlIGNvdXJzZSBvZiB0d28gInNob2VzIiBhdCBIb3JzZXNob2UgQ291bmNpbCBCbHVmZnMsIEkgbG9zdCAkMTIsMDAwLiAoRG91YmxlIERlY2sgaW4gSGlnaCBMaW1pdCBwbGF5aW5nIDJ4NTAgMng3NTAuKSBUaGUgdmVyeSBuZXh0IHNob2UsIEkgc3RhcnRlZCBib3RoIGhhbmRzIGF0IDJ4MTI1LCBuZXZlciBkcm9wcGVkIGJlbG93LCBhbmQgbG9zdCBvbmx5IGEgc2luZ2xlIGhhbmQuIApIYXZlIHlvdSBjaGVja2VkIENsYXJrIENvdW50eSBqYWlsPyBBcmVhIGhvc3BpdGFscz8gSSdsbCBlbWFpbCB5b3UgcHJpdmF0ZWx5LiBUaGUgc3ViamVjdCBsaW5lIHdpbGwgYmUgJ21vcmUgc3VnZ2VzdGlvbnMgZm9yIGZpbmRpbmcgeW91ciBicm90aGVyJy4gSSdtIGFuIGFvbCBwZXJzb24sIHRvby4KV2hlbiB5b3Ugb3duIGRpdmlkZW5kIHN0b2NrcyB0aGF0IHBheSB0aGF0IG1vbmV5IHdpbGwgZ28gaW50byB5b3VyIG1vbmV5IGFjY291bnQgYW5kIHlvdSBiZSBmcmVlIHRvIGNob29zZSB3aGVyZSB0byBhbGxvY2F0ZSBpdCwgb3RoZXJ3aXNlIHlvdSBjYW4gc2V0IGEgdGhyZXNob2xkIGFuZCBpZiBpdCBncm93cyBvdmVyIHRoYXQgYW1vdW50IGl0IHdpbGwgYXV0b21hdGljYWxseSB0cmFuc2ZlciB0byB5b3VyIGJhbmsuIApTdG9wIGZlZWxpbmcgZ3VpbHR5IGFuZCBiZSBwcm91ZCBhbmQgaGFwcHkuLiAKT2YgY291cnNlIGVhY2ggdGltZSBJIHNpdCwgSSAicmUgbGVhcm4iIHRoaXMsIGJ1dCBlYWNoIHRpbWUgc2VlbXMgdG8gYmUgYSBsaXR0bGUgZWFzaWVyLi4gCkkgbWVhbiBmZnMgRHdpZ2h0IGxhc3Qgc2Vhc29uIGRlc3Ryb3llZCBBRCBLQVQgRW1iaWlkIGFuZCBDYXBlbGEgaW4gb25lIG9uIG9uZSBtYXRjaHVwcyBhbmQgaGUgc3RpbGwgaGFzIHRoZSBzYW1lIHBvc3QgZ2FtZSBhcyBoZSBkaWQgaW4gT3JsYW5kbzsgeW91IGNhbiBmaW5kIGNsaXBzIG9mIEJhcmtsZXkgc2F5aW5nIER3aWdodCdzIGxlZnQgaG9vayBpcyBoaXMgYmVzdCBzaG90LCBoZSBjYW4gYmUgdG9vIGNvbnRlbnQgdG8gYmFjayBkb3duIGZyb20gbWlkIHJhbmdlIHdoZW4gaGUgZG9lcyBub3QgZ2V0IGdvb2QgcG9zdCBwb3NpdGlvbiBpbnN0ZWFkIG9mIHBhc3NpbmcgaXQgb3V0IGZyb20gZWlnaHQgeWVhcnMgYWdvIGFuZCB0aGV5IHN0aWxsIGFwcGx5IG5vdyBhbmQgeWV0IGhlIGRyb3BwZWQgMjUvMjAgb24gQ2FwZWxhIGFuZCBLQVQgYW5kIGhlIGRyb3BwZWQgbGlrZSAzNSBvbiBFbWJpaWQncyBoZWFkIHRvby4gRHdpZ2h0IGluIHRoZSBtb3JlIHBoeXNpY2FsIGVyYSB3b3VsZCBiZSBldmVuIGJldHRlciBJTU8uIApPbmNlIHlvdSBoYXZlIGFuIGVzdGltYXRlLCB5b3UgY2FuIHJlYXNvbmFibHkgZXN0aW1hdGUgdGhlIEVWIG9mIHlvdXIgaW52ZXN0bWVudCBkZWNpc2lvbi4gVGhvdWdoIHlvdSdsbCBpbmV2aXRhYmx5IGxvc2Ugc29tZSBvZiB0aGVzZSBhcHByb2FjaGVzLCBpZiB5b3UgY29uc2lzdGVudGx5IG1ha2UgbmV0IHBvc2l0aXZlIEVWIGRlY2lzaW9ucywgaXQncyBhbG1vc3QgbWF0aGVtYXRpY2FsbHkgaW1wb3NzaWJsZSBmb3IgeW91IHRvIGxvc2UgaW4gdGhlIGxvbmcgdGVybS4uIApEdWUgdG8gaXRzIG1vbm9wb2x5IHN0YXR1cyBhdCBob21lLCBQTVUgY291bGQgbm90IHByb3RlY3QgdGhlIEZyZW5jaCBob3JzZSByYWNpbmcgaW5kdXN0cnkgZnJvbSBhbiBvZmZzaG9yZSBjb21wZXRpdG9yIHRoYXQgb2ZmZXJlZCBhIDI4LjQlIGdyZWF0ZXIgYXZlcmFnZSByZXR1cm4gdG8gaXRzIHBsYXllcnMuIApJbnN0ZWFkIG9mIGxpZnRpbmcgdGhlIGtldHRsZWJlbGwgaW4gZnJvbnQgb2YgdGhlIGJvZHkgdXNpbmcgdGhlIGFybXMsIHRoZSBhcm1zIGxvb3NlbHkgaG9sZCBpdCBhbmQgdGhlIGV4cGxvc2l2ZW5lc3Mgb2YgdGhlIGhpcHMgc25hcHBpbmcgaW50byBleHRlbnNpb24gcHJvcGVsIGl0IGZvcndhcmQuIEFwcGxpY2F0aW9ucy4gClRoaXMgaXMgTWVsemFjayBwYXBlciBvbiBpdCBmcm9tIDIwMDEuIFRoaXMgdGhlb3J5IGhhcyBiZWVuIHVwZGF0ZWQgYW5kIHJlZmluZWQgc2luY2UgdGhlbiwgbW9zdCBub3RhYmx5IGJ5IExvcmltZXIgTW9zZWxleSAgIGhlcmUgYSBmdWxsIHRleHQgY29weSBvZiBoaXMgMjAwNyBwYXBlciBwYWluIGFjY29yZGluZyB0byBtb2Rlcm4gcGFpbiBzY2llbmNlIHdoaWNoIGlzIGEgdmVyeSBpbnRlcmVzdGluZyByZWFkIG9uIGhvdyBvdXIgdW5kZXJzdGFuZGluZyBvZiBwYWluIGhhcyBjaGFuZ2VkIG92ZXIgdGhlIHBhc3QgMTAgMjAgeWVhcnMuLiAKSW4gSnVuZSwgYmFzZWQgb24gaW5mb3JtYXRpb24gY29udGFpbmVkIGluIE5ldmFkYSdzIHByZXNjcmlwdGlvbiBkcnVnIG1vbml0b3JpbmcgZGF0YWJhc2UuIENOTiBjb3VsZCBub3QgaW5kZXBlbmRlbnRseSBjb25maXJtIHRoYXQgaW5mb3JtYXRpb24uCkxvdmUgWW91IEJhY2sgTGlmZXNraWxscyBJbnRlcnZlbnRpb24gUHJvZ3JhbQpXaGF0IEkgZGlkbid0IGxpa2U6IEluaXRpYWxseSwgSSB3YXMgY29uY2VybmVkIGl0IHdhc24ndCBnb2luZyB0byBiZSBoaWdoIGVub3VnaCBpbXBhY3QgdG8gbWFrZSBtZSBmZWVsIHNhdGlzZmllZCB3aXRoIG15IHdvcmtvdXQsIGJ1dCBpdCdzIGRlZmluaXRlbHkgYSBzbG93IGJ1aWxkLiBUaGUgd29ya291dCBnb3QgcHJvZ3Jlc3NpdmVseSBoYXJkZXIsIGxlYXZpbmcgbWUgZmVlbGluZyBhcyB0aG91Z2ggbXkgaW5pdGlhbCBpbXByZXNzaW9uIHdhcyBjb21wbGV0ZWx5IG9mZi4gSG93ZXZlciwgdGhpcyB3b3JrZWQgdG8gYnVpbGQgbXkgY29uZmlkZW5jZSBpbiB0aGUgYmVnaW5uaW5nIHNvIHRoYXQgSSB3YXMgd2FybWVkIHVwIG1lbnRhbGx5IGFuZCBwaHlzaWNhbGx5IGVub3VnaCB0byBwb3dlciB0aHJvdWdoIHRoZSBoYXJkZXIgcGFydHMgb2YgdGhlIHdvcmtvdXQuLiAKQW5vdGhlciBjYXNpbm8gbWVhc3VyZSBsdXJraW5nIGluIDIwMTYKTm93LCB0aGUgZnVjayB5b3UgSSBkbyB3aGF0IEkgd2FudCBhbmQgeW91IGJlbmVhdGggbWUgdHlwZXMgY2FuIGFsbCBnbyBmdWNrIHRoZW1zZWx2ZXMuIEkgd2FudCB0aGF0IGRpc3RpbmN0aW9uIHRvIGJlIGNsZWFyLgpUaG9zZSBzYW1lIGxpdHRsZSB3aGl0ZSBmbGFrZXMgdGhhdCBzZWxsIG1pbGxpb25zIG9mIGRvbGxhcnMgb2YgbWVkaWNhdGVkIHNoYW1wb28gdG8gaHVtYW4gY29uc3VtZXJzIGNhbiBhZmZsaWN0IGNhdHMgYXMgd2VsbC4gU2luY2UgYSBjYXQgaGFzIGhhaXIgYWxsIG92ZXIgaGlzIGJvZHksIGRhbmRydWZmIGlzIGVhc3kgdG8gc3BvdC4gRGFuZHJ1ZmYgaXMgYWN0dWFsbHkgZGVhZCwgZHJpZWQgb3V0IHNraW4gY2VsbHMuIApPbmUgdGhpbmcgeW91IG1pZ2h0IGJlIGEgbGl0dGxlIGxpbWl0ZWQgYnkgaXMgdGhlIGFiaWxpdHkgdG8gb25seSBtYWtlIHRoZSAzLjV4IHJhaXNlIHBvdCBsaW1pdCBhbGxvd3Mgd2hlbiB5b3Ugd291bGQgbGlrZSB0byBnbyBhbGwgaW4gYW5kIG1heGltaXplIHlvdXIgZm9sZCBlcXVpdHkuIFRoZSB0cnV0aCBpcyB0aGF0IHRoZXJlIGlzIGxpdHRsZSBkaWZmZXJlbmNlIGJlY2F1c2UgdGhlIHR3byBiZWNhdXNlIGlmIG9uZSBjYWxscyBmb3Igc3VjaCBhIGJpZyBwZXJjZW50YWdlIG9mIHRoZWlyIHN0YWNrIHByZWZsb3AgdGhleSBzaG91bGQgdXN1YWxseSBwdXQgdGhlIHJlc3QgaW4gYWZ0ZXIgdGhlIGZsb3AsIGJ1dCBtb3N0IG9mIHlvdXIgb3Bwb25lbnRzIGRvbid0IHJlY29nbml6ZSB0aGlzLiAKWW91IHNob3VsZCB0YWtlIGEgbG9vayBhdCB0aGUgdmV0dGluZyBwcm9jZXNzIHRoZSBVbml0ZWQgTmF0aW9uIENETSBwdXRzIHByb2plY3RzIHRocm91Z2gsIGl0IHByZXR0eSBleHRlbnNpdmUuQWxzbyBubywgSSBkb24gcGxhbiBvbiBoYXZpbmcgY2hpbGRyZW4sIGFuZCBJIHBsYW4gdG8gZ28gY2FyYm9uIG5ldXRyYWwgZm9yIG15IGVudGlyZSBsaWZlIGJlZm9yZSBJIHR1cm4gNDAuIApUaGUgbG90dGVyeSBpcyBmb3IgaW5kZXBlbmRlbnQgZGFuY2VycywgbWVhbmluZyBzaGUgd2FzIG5vdCBwYXJ0IG9mIGFuIG9yZy4gCkJlc2lkZXMsIHdobyBjYXJlcyB3aGF0IHNvbWVib2R5IGhhZCBmb3IgZGlubmVyIHRoZSBuaWdodCBiZWZvcmU/LiAKSSB3YXMgc28gZmFzY2luYXRlZCBjbG9zZSB0aGlzIHByZXBhcmUgdGhhdCBJIGZvcmdvdCBhYm91dCBvdmVyIGFuZCBvdmVyIGFnYWluLCBvbiB0b3VjaGluZyBhIGNvbnZleWFuY2UgYmxvY2thZ2UgLiAKQWJlciBlcyBrYW0gYW5kZXJzISAiU2llIGJyYXVjaGVuIGVpbiBCZXJ1aGlndW5nc21pdHRlbCIsIGhydGUgc2llIGRlbiBEb2Mgc2FnZW4sIHVuZCBzY2hvbiBmaGx0ZSBzaWUsIHdpZSBlciBzaWUgZ2FueiBsZWljaHQgbmFjaCB2b3JuZSBzY2hvYiwgYW4gZGVuIFJhbmQgZGVyIExpZWdlLCBkaWUgamV0enQgZGlyZWt0IHZvciBpaHIgd2FyLiBNc3N0ZSBzaWUgc2ljaCBkcmF1ZiBsZWdlbj8gV3JkZSBlciBpaHIgLiAuIC4gb2ggbmVpbiEgLiAuIC4gZXIgd3JkZSBpaHIgZWluIFNwcml0emUgZ2ViZW4gLiAuIC4gZGVyIEdlZGFua2UgZHVyY2h6dWNrdGUgc2llIHdpZSBlaW4gQmxpdHohIEdlbGhtdCB2b3IgQW5nc3Qgc3RhbmQgc2llIGRhLCBhYmVyIHNjaG9uIGRyY2t0ZSBkZXIgRG9jIGV0d2FzIGF1ZiBpaHJlbiBSY2tlbiwgc2llIG11c3N0ZSBzaWNoIHZvcm5iZXJiZXVnZW4uICJCbGVpYmVuIHNpZSBzbywgd2FydGVuIHNpZSwgaWNoIGhhYmUgZGFzIE1lZGlrYW1lbnQgZ2xlaWNoIGJlcmVpdCIuIEhlbGVuIHRyYXV0ZSBuaWNodCwgc2ljaCB6dSBiZXdlZ2VuLiBNaXQgZGVuIEhuZGVuIHN0dHp0ZSBzaWUgc2ljaCBhdWYgZGllIExpZWdlZmxjaGUsIGdlYmV1Z3Qgc3RhbmQgc2llIGRhLCB1bmQgZGllIEdlZGFua2VuIGFuIGRpZSBTcHJpdHplIGxobXRlIHNpZSBmYXN0LiBTaWUgaHJ0ZSBkZW4gRG9jIGhpbnRlciBpaHJlbSBSY2tlbiBoYW50aWVyZW4sIGRhIHd1cmRlbiBQbGFzdGlrdmVycGFja3VuZ2VuIGF1Zmdlcmlzc2VuLCBkYSB3dXJkZSBldHdhcyBhdWZnZXNjaHJhdWJ0LCBkYSBocnRlIG1hbiBTY2huYWx6ZW4gdm9uIEd1bW1pLgpUaW1lIHRvIGNlbGVicmF0ZSB0aGUgYm9tYi4uIAo4MyBJbmNoIFBlZGVzdGFsIFBva2VyIFRhYmxlIHdpdGggRGVhbGVyIFNwb3QgUmV2aWV3CkdldHRpbmcgc2lkZWJ1cm5zLCBob3dldmVyLCByZXF1aXJlcyBtYWludGVuYW5jZSBwcm9jZWR1cmVzIHRvIGtlZXAgdGhlIGhhaXIgb24geW91ciBzaWRlYnVybnMgc29mdCBhbmQgY2xlYW4uIApTaSBsJ2FjY3MgIGxhIHNhbnQgZXN0IGZvbmRhbWVudGFsLCB0b3V0IGxlIG1vbmRlIG4neSBhY2NkZSBwYXMgZGUgbWFuaXJlIGdhbGUuIApUZXhhcyBPZmZpY2Ugb2YgdGhlIEF0dG9ybmV5IEdlbmVyYWwgdmlhIEFQCkQnYXV0cmVzIHBheXMgcmVkb3V0ZW50IGNldCBlZmZldCBwYXBpbGxvbi4gTGEgQm91cnNlIGRlIE1vc2NvdSBhIHByZnIgcmVzdGVyIGZlcm1lIGpldWRpLCBjcmFpZ25hbnQgZCd0cmUgYXR0ZWludGUgIHNvbiB0b3VyLgpBIGJveGluZyBtYXRjaCBpcyBkaXZpZGVkIGludG8gcm91bmRzIG9mIHR3byBvciB0aHJlZSBtaW51dGVzLCB3aXRoIGEgb25lIG1pbnV0ZSByZXN0IHBlcmlvZCBpbiBiZXR3ZWVuLiBQcm9mZXNzaW9uYWwgbWF0Y2hlcyBhcmUgMTIgcm91bmRzIGF0IHRoZSBjaGFtcGlvbnNoaXAgbGV2ZWwgKHRoZXkgdXNlZCB0byBnbyBmb3IgMTUpLiBUZW4gcm91bmRzIG9yIGxlc3MgbWF5IGJlIHNjaGVkdWxlZCBhdCBsb3dlciByYW5raW5ncy4gQW1hdGV1ciBtYXRjaGVzIGhhdmUgb25seSB0aHJlZSwgZm91ciBvciBmaXZlIHJvdW5kcywgd2l0aCByb3VuZHMgbGFzdGluZyB0d28gbWludXRlcy4gSnVuaW9yIGRpdmlzaW9ucyBjYW4gaGF2ZSBldmVuIHNob3J0ZXIgcm91bmRzLgpGcm9tIGEgc3RhcnRpbmcgZmllbGQgb2YgODE2LCBSb25hbGRvIG1hZGUgaXQgYWxsIHRoZSB3YXkgdG8gdGhlIGZpbmFsIDI2IHBsYXllcnMgYmVmb3JlIGhlIHdhcyBzZW50IHRvIHRoZSByYWlsLCB0YWtpbmcgaG9tZSBVU0QgNDIsMTgwIGZvciBoaXMgZmlyc3QgY2FzaCBwcml6ZSBpbiBhIG1ham9yIHBva2VyIHRvdXJuYW1lbnQuIApJZiB0aG9zZSBoYXJtZnVsIGJlaGF2aW91cnMgZmFsbCB1bmRlciB0aGUgYnJvYWQgY2F0ZWdvcnkgb2YgInBvbGl0aWNzIiwgd2VsbCwgdGhleSBzdGlsbCBoYXJtZnVsIGJlaGF2aW91cnMuIApXYWl0LiBGdWNrLCBJIHNjcmV3ZWQgc29tZXRoaW5nIHVwIGhlcmUuCkRldmVsb3BtZW50IHRvIG1hcmtldCB0b29rIGFib3V0IGEgeWVhci4gQnkgMjAwOSwgdGhlIHByb2R1Y3Qgd2FzIHJlYWR5LiAKVGFrZSBsYXBzIGFyb3VuZCB0aGUgbmVpZ2hib3Job29kLiBQcmVmZXJhYmx5IGEgcm91dGUgd2l0aCBhIGxvdCBvZiBzdG9wIHNpZ25zIGFuZCBpbnRlcnNlY3Rpb25zLiBJIHNheSB0aGlzIGJlY2F1c2UgeW91IGFyZSByaWRpbmcgYWJvdXQgYXJ0IGxvdyBzcGVlZHMgYW5kIGZhbWlsaWFyaXppbmcgeW91cnNlbGYgd2l0aCB0aGUgYmlnZ2VyIGJpa2VzIGVyZ29ub21pY3MuIEdldHRpbmcgYSBmZWVsIGZvciB0aGUgY2x1dGNoIHB1bGwsIGJyYWtlcywgaG93IHF1aWNrIHNoZSBnZXRzIG9uLCBob3cgbXVjaCB5b3UgaGF2ZSB0byBzbGlwIHRoZSBjbHV0Y2ggY29tcGFyZWQgdG8gdGhlIHNtYWxsZXIgYmlrZSAoaWYgYXQgYWxsKSBhbmQgYSB3aG9sZSBsb3Qgb2Ygb3RoZXIgbWludXRlIGl0ZW1zIHlvdSBtYXkgbm90IGV2ZW4gcmVhbGl6ZSB5b3UgZ2V0dGluZyBhY2NsaW1hdGVkIHdpdGguIFRoZSBtb3N0IG5vdGFibGUgd2lsbCBvZiBjb3Vyc2UgYmUgcmlkZSBoZWlnaHQuCldlIHNob3VsZCBhbHdheXMgdGFyZ2V0IHRoZSBTdGF0ZSByYXRoZXIgdGhhbiBwcmV0ZW5kaW5nIHRoYXQgdGhlIHNvbGUgaW5zdGl0dXRpb24gcGVybWl0dGVkIHRoZSB1bnF1ZXN0aW9uZWQgdXNlIG9mIGZvcmNlIGFnYWluc3QgZXZlcnlvbmUsIGlzIHRoZSBzYW1lIGluc3RpdHV0aW9uIHRoYXQgd2lsbCBtYWtlIGxpZmUgYmV0dGVyIGZvciBldmVyeW9uZS4gCkFmdGVyIHRoZSBtYXNzYWdlIEkgd2FudGVkIHRvIHNwZWFrIHRvIGEgbWFuYWdlciBhYm91dCBteSBleHBlcmllbmNlLiAKSXQgbGlrZSB0aGUgY2xvY2sgc3RydWNrIG1pZG5pZ2h0IGFuZCBhbGwgdGhlIGZvcm1lciBvcHBvbmVudHMganVzdCB0dXJuZWQgaW50byBwdW1wa2lucy4uIApUaGUgZmFjdCB0aGF0IGJ1c3Rpbmcgb3V0IG1lYW5zIHlvdSBsb3NlIGFsbCBvZiB5b3VyIGVxdWl0eSBpbiB0aGUgcHJpemUgcG9vbCwgd2hpbGUgZG91YmxpbmcgdXAgZG9lcyBub3QgZG91YmxlIHlvdXIgZXF1aXR5LCBtZWFucyB0aGF0IHRvIHBsYXkgZm9yIGEgbG90IG9mIGNoaXBzIGVhcmx5IG9uLCB5b3UgbmVlZCB0byBoYXZlIGEgYmlnIGFkdmFudGFnZS4gClRoYXRBdXRpc3RpY1dvbWFuICAzMCBwb2ludHMgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnbwpBbGwgY2FsY2l1bSByZWxhdGVkIG1lYXN1cmVzIHdpdGhpbiBhbmQgYmV0d2VlbiBncm91cHMgd2VyZSBub3JtYWwuIApGZWxpeCBTYXRlciBmYXRoZXIgaGFkIHRpZXMgdG8gdGhlIFJ1c3NpYW4gbW9iLiAKVGhleSB3ZXJlIGEgbG90IG9mIGZ1biBhbmQgSSBob3BlIHRoZXkgY29tZSBiYWNrIHRvd24uIFBsdXMgdGhleSBtYWRlIHRoZSBjbGFzcyBuaWNlIGFuZCBiaWcgd2hpY2ggaXMgYWx3YXlzIGEgZ29vZCB0aGluZy4gVGhlIG1vcmUgZG9vZnVzZXMgaW4gYSByb29tIHRoZSBiZXR0ZXIsIEkgYWx3YXlzIHNheS4gCkdvaW5nIHRocm91Z2ggdGhpcyBhZ2FpbiBtZXJlbHkgb2NjdXBpZXMgbXkgdGltZSBhbmQgbWFrZXMgd29yayBmb3IgRnJhbnouLiAKSW46IFdpbHNvbiwgTS4sIFdhbHNoLCBWLiBBbmQgUGFya2luLCBCLiAoZWQuKSBTcG9ydCBhbmQgdGhlIEJyYWluOiBUaGUgU2NpZW5jZSBvZiBQcmVwYXJpbmcsIEVuZHVyaW5nIGFuZCBXaW5uaW5nLCBQYXJ0IEIgRWxzZXZpZXIuIApEaWQgdGhleSBwYXRjaCBpdCBieSBqdXN0IGRlbGV0aW5nIGl0ZW0gdW5kZXIgdGhlIGFybW9yIGFuZCBicmVha2luZyBwaWVjZXM/IExpa2UgdGhlIFZlaWwgYW5kIHRoZSBhcm1vciBoZWxtZXQgQk9USCBkaXNhcHBlYXJlZC4KT3MgZG9pcyBmYXplbSBzZXUgbWVsaG9yIHBhcmEgY29udGludWFyIGNvbSBvIGNhc2FtZW50byBkZXBvaXMgZGUgdW0gY2Fzby4gTm8gIHF1ZSB0dSBlc3RzIGEgZmluZ2lyIGNvbW8gc2UgbmFkYSBvY29ycmV1IGVtIHR1ZG8uIApFcm5pZSBTY2hlcmVyOiBUaGFua3MgZm9yIGRvaW5nIHlvdXIgam9iLi4gClNwZWFraW5nIG9mIGltcHJvdmluZyB5b3VyIG5hdGlvbiBhcyBUcnVtcCBjcm9uaWVzIGxlZnQgYW5kIHJpZ2h0IGFyZSBnb2luZyB0byBwcmlzb24gYW5kIG1vcmUgYW5kIG1vcmUgZXZpZGVuY2UgbW91bnRzIGFnYWluc3QgaGltLCB3aGF0IGFyZSB0aGUgY29uc2VxdWVuY2VzIHRvIHRoZSBtb3N0IGxveWFsIG9mIFRydW1waWFucywgc2hvdWxkIHlvdSBhbGwgYmUgZGVwb3J0ZWQgdG8gUnVzc2lhPyBJJ3ZlIGJlZW4gdG8gUnVzc2lhLCBpdCdzIGEgbmljZSBwbGFjZSBidXQgY29ycnVwdCBhcyBjYW4gYmUsIHNvICBjb28hIEknbSBsb29raW5nIGZvcndhcmQgdG8gU29seWFua2EgYmVpbmcgcmVhZGlseSBhdmFpbGFibGUuClRoZSBza3kgd2FzIGdyZXkgYW5kIHRoZSB3ZWF0aGVyIHdhcyBib3JpbmcgdG9kYXkuIFRoZSB0cmVlcyBvdXRzaWRlIGFyZSBzdGFydGluZyB0byBicnVzaCB1cCBhZ2FpbnN0IHRoZSBob3VzZSBhZ2FpbiwgdGhleSBuZWVkIHRvIGJlIHRyaW1tZWQgYXQgc29tZSBwb2ludC4gVGhlcmUgYSBmYW1pbHkgb2Ygc3F1aXJyZWxzIGVpdGhlciBvbiBvciBpbiB0aGUgcm9vZiBJIHByZXR0eSBzdXJlLCBJIGRvbiB0aGluayB0aGV5IGNhdXNlIGFueSBoYXJtIGJ1dCBpdCBpcyBlZXJpZSB0byBoZWFyIHNvbWV0aGluZyBydW5uaW5nIGFyb3VuZCB3aGVuIHlvdSBhcmUgaG9tZSBhbG9uZS4KUGVnbGVncG93ZGVyc2tpZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpIZSB3aWxsIGJlIHN1cHBvcnRlZCBieSBIZWFseSwgU3RhcmsgTmFrZWQgYW5kIG90aGVyIERKIGp1c3QgdG8gbmFtZSBhIGZldy4gCkVuIHRvdXQgY2FzIGJvbiBjb3VyYWdlICB0b2kgcG91ciBsYSByIGFkYXB0YXRpb24sIG1haXMgbGEgRnJhbmNlIGMgdmFjaGVtZW50IGJpZW4uIElsIHRlIGZhdXQgcGV1dCB0cmUgZHUgdGVtcHMsIHBldXQgdHJlIHF1ZSB0b24gYm91bG90IG4gcGFzIGxhIGN0ZSBlbiBGcmFuY2Ugb3UgZGFucyBjZXR0ZSByZ2lvbiwgZXQgQm9yZGVhdXggbiBwZXV0IHRyZSBwbHVzIGZhaXQgcG91ciB0b2kgPwpZb3Uga25vdywgSSBkb24gdGhpbmsgdGhpcyBpcyBhIGdvb2QgUjQuIFlvdSBzdGF0ZSB0aGUgZmFjdHMsIGJ1dCBpZiBzb21lb25lIHdpdGggYW5vdGhlciBvcGluaW9uIGNhbWUgaGVyZSwgdGhleSB3b3VsZCBoYXZlIG5vIHJlYXNvbiB0byBiZWxpZXZlIHlvdSBzYXlpbmcgdGhlIHRydXRoLiBUaGUgcG9pbnQgb2YgUjQgaXMgdG8gdGVsbCBwZW9wbGUgd2hvIG1heSBub3Qga25vdyBiZXR0ZXIgd2h5IHRoaXMgaXMgYmFkbGluZy4KSmVzc2ljYSB3b3VsZCBqdXN0IHNsb3dseSBmYWRlIGlmIEkgZHJldyBoZXIganVzdCBhcyBzaGUgaGFkIGJlZW4gZG9pbmcgZm9yIHllYXJzLiAKQW5kIHRoZSBmYWN0IHRoYXQgdGhleSBkb24gc2VlIHRoYXQgeW91IHByb3VkIG9mIHlvdXJzZWxmIGZvciBvdmVyY29taW5nIHRoaXMgYW5kIGdpdmluZyBpdCBhIHBsYWNlIHRoZXkgdGVsbGluZyB5b3UgeW91IGJyYWdnaW5nPyBUcnVseSBmdWNrIHlvdSBwYXJlbnRzLi4gCkdpdmVuIHRoYXQgdHJhZGl0aW9ucyBoYXMgYWx3YXlzIGNoYW5nZWQgdG8gc3VpdCB0aGUgY3VsdHVyZSBvZiB0aGUgdGltZSBhbmQgcGxhY2UsIEkgd291bGQgcmVmcmFpbiBmcm9tIGV2ZXIgY2FsbGluZyBiZWluZyBzdHJhaWdodCAidHJhZGl0aW9uYWwiLiBQZW9wbGUgbmVlZCB0byBncm93IGFuZCBjaGFuZ2Ugd2l0aCB0aGUgd29ybGQuIEdheSBoYXMgQUxXQVlTIGJlZW4gYSB0aGluZyBhbmQgaGFzIGJlZW4gYXJvdW5kLiBJdCBoYXRlZnVsIHNvY2lldHkgdGhhdCBoYXMgbWFkZSBpdCBjbG9zZXRlZCBiZWNhdXNlIHBlb3BsZSBhcmUgc2NhcmVkIG9mIHRoaW5ncyB0aGV5IGRvbiB1bmRlcnN0YW5kLgpBIFNhbXBsZSBNYXNzYWdlIFlvdSBtYXkgd2lzaCB0byBwcmFjdGljZSBmaXJzdCBvbiBhIGRvbGwgb3IgdGVkZHkgYmVhciwgc28gdGhhdCB5b3UgY2FuIHJlbGF4IGFuZCBoYW5kbGUgeW91ciBiYWJ5IGNvbmZpZGVudGx5LgpDZSBwcm9wcmUgcmVudm9pICBjZXQgYXJ0aWNsZSBkZSBkcGFydCBwZXJtZXQgZGUgYmllbiBtZXR0cmUgbCdhY2NlbnQgc3VyIGwnaW1wb3J0YW5jZSBkZXMgbW95ZW5zIHF1aSBzZXJvbnQgbWlzIGVuIHBsYWNlLCBjb25qb2ludGVtZW50ICBjZXR0ZSBwcm9wb3NpdGlvbiBkZSBsb2ksIHRhbnQgcG91ciBsJ2FjY3MgYXV4IHNvaW5zIHF1ZSBwb3VyIGxlIHN1aXZpIGRlcyBwZXJzb25uZXMgY29uY2VybmVzIFNhbnMgZGUgdnJpdGFibGVzIG1veWVucywgY2VzIGluZGl2aWR1cyBzb3VmZnJhbnQgZGUgdHJvdWJsZXMgcmVzdGVyb250IGNvbmZyb250cyAgdW4gc3lzdG1lIGp1ZGljaWFpcmUgYXZldWdsZSAgbGV1ciBzaXR1YXRpb24uIFBvdXIgc2V1bGUgaWxsdXN0cmF0aW9uIGVuIHJhcHBvcnQgYXZlYyBjZXR0ZSBwcm9wb3NpdGlvbiBkZSBsb2kgOiBjb21tZW50IHJhZ2lyIHF1YW5kIGwnaW5kaXZpZHUgbidlc3QgcGFzIG1lbnRhbGVtZW50IGNhcGFibGUgZGUgY29tcHJlbmRyZSBsJ2ltcG9ydGFuY2UgZXQgbCdpbnRydCBkZXMgc29pbnMgPyBDZWxhIGFib3V0aXJhICB1biBlbXByaXNvbm5lbWVudCBwbHVzIGxvbmcsIHNhbnMgcG91ciBhdXRhbnQgYXZvaXIgdW4gYWNjcyBhdXggc29pbnMgYWRxdWF0cyA7IHB1aXMsICB1bmUgbGlicmF0aW9uIGVuIGVzcHJhbnQgdW4gcnRhYmxpc3NlbWVudCBvdSBlbiBhdHRlbmRhbnQgdW4gdm5lbWVudCBwbHVzIGRyYW1hdGlxdWUuIApQbGVhc2UgYmUgc3VyZSB0byBnaXZlIHlvdXJzZWxmIGVub3VnaCB0aW1lIHNob3VsZCB5b3UgaGF2ZSB0byBwYXJrIG9mZiBzaXRlLiAKQXNzb2NpYXRpb24gb2YgQ29tbXVuaXR5IE9yZ2FuaXphdGlvbnMgZm9yIFJlZm9ybSBOb3cKU3RlcCAyOiBQcmljZSB0aGVtIG91dCB1c2luZyBtYXRoLiBXaHkgNTU/IEhlIGhhcyB0byBjYWxsIDM1IGludG8gMzIgb3IgMToxLCBIZSB3aWxsIGZsb3AgYSBzZXQgYWJvdXQgb25jZSBldmVyeSB0d2VudHkgZmxvcHMsIDIwIHggMzA9IDYwMCwgeW91IHN0YXJ0ZWQgdGhlIGhhbmQgd2l0aCBhYm91dCB0aGF0IGFtb3VudC4gWW91IHByaWNlZCBoaW0gaW4hIElmIHlvdSBtYWRlIGl0IDg1IG5vdyBoZSBoYXMgNTB4MjA9IDEwMDAsIGFuZCBpcyBub3QgZ2V0dGluZyB0aGUgcmlnaHQgcHJpY2UgdG8gY2FsbC4gClRvcGljcyBNb3N0IGZlcnRpbGl0eSBtYXNzYWdlIGNlcnRpZmljYXRpb25zIGNvdmVyIGEgdmFyaWV0eSBvZiB0b3BpY3MsIGluY2x1ZGluZyBhcHBseWluZyB0aGUgYmFzaWNzIG9mIG1hc3NhZ2UgdG8gdGhlIHJlcHJvZHVjdGl2ZSBvcmdhbnMuIE90aGVyIHRvcGljcyBpbmNsdWRlIHVuZGVyc3RhbmRpbmcgdGhlIGNvbmNlcHRpb24gcHJvY2VzcywgcmVmbGV4b2xvZ3kgZm9yIHJlcHJvZHVjdGl2ZSBvcmdhbnMsIGFzc2lzdGVkIHJlcHJvZHVjdGl2ZSB0ZWNobm9sb2dpZXMgbGlrZSBpbiB2aXRybywgYW5kIGZlbWFsZSBhbmQgbWFsZSBhbmF0b215LiBTb21lIHByb2dyYW1zIGFsc28gb2ZmZXIgbW9yZSBpbiBkZXB0aCBrbm93bGVkZ2UgaW4gY2VydGFpbiBhcmVhcywgc3VjaCBhcyB1dGlsaXppbmcgY2FzdG9yIG9pbCBwYWNrcyBmb3IgY29sb24gY2xlYW5zaW5nLCB1dGVyaW5lIHBvc2l0aW9uaW5nIHRlY2huaXF1ZXMsIG92dWxhdGlvbiBjaGFydGluZyBtZXRob2RzLCBhcm9tYXRoZXJhcHkgZm9yIGNvbmNlcHRpb24gYW5kIGdhaW5pbmcgY2xpZW50cyB0aHJvdWdoIG1hcmtldGluZy4gVGhlIEFydmlnbyBJbnN0aXR1dGUncyBjZXJ0aWZpY2F0aW9uIHByb2dyYW0gY29uY2VudHJhdGVzIG9uIHRoZSBBcnZpZ28gVGVjaG5pcXVlcyBvZiBNYXlhIEFiZG9taW5hbCBUaGVyYXB5IHRvIGhlbHAgYWxpZ24gcmVwcm9kdWN0aXZlIGFuZCBvdGhlciBpbnRlcm5hbCBvcmdhbnMuClRvIHN1bW1hcmlzZSB0aGUgcmFuZG9taXNlZCBpbnRlcnZlbnRpb24gc3R1ZGllcyB0aGF0IGhhdmUgYmVlbiBjYXJyaWVkIG91dCBvbiB0aGUgdXNlIG9mIGFyb21hdGljIHBsYW50IGV4dHJhY3RzIChlc3NlbnRpYWwgb2lscykgZm9yIGEgdmFyaWV0eSBvZiBjb25kaXRpb25zLiBUcmlhbHMgd2VyZSBleGNsdWRlZCBpZiB0aGV5IGhhZCBubyBjb250cm9sIGdyb3VwIG9yIHdlcmUgbm90IHJhbmRvbWlzZWQuIG9ubHkgMSB0cmlhbCBmb3IgZWFjaCBpbnRlcnZlbnRpb24pIHBhcnRpY2lwYW50cyByZWNlaXZlZCBlaXRoZXI6MS4gSW5oYWxhdGlvbiBvZiB2YXBvcmlzZWQgYXJvbWF0aWMgbWl4dHVyZSBvciB3YXRlciwyLiBPcmFsIGFkbWluaXN0cmF0aW9uIG9mIGFyb21hdGljIGxpcXVpZCBvciBwbGFjZWJvLjMuIER1bW15IGNpZ2FyZXR0ZSB3aXRoIGJsYWNrIHBlcHBlciBzbWVsbCwgb3IgbWVudGhvbCBzbWVsbCBvciBubyB0cmVhdG1lbnQuNC4gQmF0aCB3YXRlciB3aXRoIG5hdHVyYWwgb3Igc3ludGhldGljIGxhdmVuZGVyIG9pbCBvciBhbm90aGVyIHN5bnRoZXRpYyBvaWwgd2l0aCBhIHNtZWxsLjUuIEluaGFsYXRpb24gb2Ygc3RlYW0gcGx1cyBhcm9tYSBvciBzdGVhbSBhbG9uZS42LiBEYWlseSBtYXNzYWdlIG9mIGNhcnJpZXIgb2lsIGludG8gc2NhbHAgd2l0aCBvciB3aXRob3V0IGEgbWl4dHVyZSBvZiBlc3NlbnRpYWwgb2lscy4gbW9yZSB0aGFuIG9uZSB0cmlhbCBmb3IgZWFjaCBpbnRlcnZlbnRpb24pIHBhcnRpY2lwYW50cyByZWNlaXZlZCB2YXJpb3VzIGZvcm1zIG9mIG1hc3NhZ2Ugd2l0aCBvciB3aXRob3V0IHRoZSBhZGRpdGlvbiBvZiBvaWxzIG9yIGFyb21hcyB0byB0aGUgZm9vdCwgbGltYnMsIGhlYWQsICdhcmVhcyBhdmFpbGFibGUgdG8gdGhlIHRoZXJhcGlzdCcsIG9yIGZ1bGwgYm9keS4gT3RoZXIgaW50ZXJ2ZW50aW9ucyBmb3IgdGhlIG1hc3NhZ2UgZ3JvdXAgd2VyZTogcm91dGluZSBjYXJlLCBubyB0cmVhdG1lbnQsIHVuZGlzdHVyYmVkIHJlc3QsIG9yIGEgMjAgbWludXRlIGNoYXQuIFRoZSBmcmVxdWVuY3kgYW5kIGR1cmF0aW9uIG9mIGludGVydmVudGlvbnMgdmFyaWVkIGJldHdlZW4gc3R1ZGllcy5UcmlhbHMgd2VyZSBleGNsdWRlZCBpZiB0aGV5IHBlcnRhaW5lZCB0byBzdHVkaWVzIG9mIGxvY2FsIGVmZmVjdHMgc3VjaCBhcyB0aGUgYW50aXNlcHRpYyBlZmZlY3RzIG9mIHRlYSB0cmVlIG9pbC5QYXJ0aWNpcGFudHMgaW5jbHVkZWQgaW4gdGhlIHJldmlld0ZvciB0aGUgYXJvbWF0aGVyYXB5IGludGVydmVudGlvbiAod2l0aCBubyBpbmRlcGVuZGVudCByZXBsaWNhdGlvbiksIGhlYWx0aHkgYWR1bHRzIHdpdGggY29tbW9uIGNvbGQsIGNocm9uaWMgYnJvbmNoaXRpcyBwYXRpZW50cywgbWFsZSBzbW9rZXJzLCBwb3N0IHBhcnR1bSB3b21lbiwgaGVhbHRoeSB2b2x1bnRlZXJzLCBvciBwYXRpZW50cyB3aXRoIGFsb3BlY2lhIGFyZWF0YS4gSW4gdGhlIHRyaWFscyBmb3IgYW54aWV0eSAod2l0aCBpbmRlcGVuZGVudCByZXBsaWNhdGlvbnMpLCBwYXJ0aWNpcGFudHMgd2VyZSBjYW5jZXIgcGF0aWVudHMgYW5kIHBvc3Qgb3BlcmF0aXZlIHBhdGllbnRzIChmb2xsb3dpbmcgY2FyZGlhYyBzdXJnZXJ5KSBiZWluZyB0cmVhdGVkIGluIGEgaG9zcGl0YWwgc2V0dGluZyBhbmQgYSBtaXhlZCBncm91cCBvZiBwYXRpZW50cyBpbiBhbiBpbnRlbnNpdmUgdGhlcmFweSB1bml0LlRyaWFscyB3ZXJlIGV4Y2x1ZGVkIGlmIHRoZXkgd2VyZSBwcmUgY2xpbmljYWwgc3R1ZGllcyBvZiBoZWFsdGh5IHZvbHVudGVlcnMuT3V0Y29tZXMgYXNzZXNzZWQgaW4gdGhlIHJldmlld0FueGlldHksIHdlbGwgYmVpbmcsIHN5bXB0b20gc2NvcmVzLCBhbmQgc3RyZXNzIG1lYXN1cmVkIHVzaW5nIHF1ZXN0aW9ubmFpcmVzIHN1Y2ggYXMgdGhlIFNwZWlsYmVyZ2VyIFN0YXRlIFRyYWl0IEFueGlldHkgSW52ZW50b3J5IG9yIHRoZSBSb3R0ZXJkYW0gU3ltcHRvbSBDaGVja2xpc3QuClRoaW5ncyBhcmUgc3RpbGwgc28gZ29vZCB0aGF0IHNvbWV0aW1lcyBJIHdha2UgdXAgYW5kIGNhbiBiZWxpZXZlIEkgZGF0aW5nIHRoaXMgYW1hemluZyBndXkuIFRoaXMgU3VuZGF5IGhlIHRvb2sgbWUgaWNlIHNrYXRpbmcgKGJ5IHdoaWNoIEkgbWVhbiwgSSBoZWF2aWx5IHN1Z2dlc3RlZCBpdCBtdWx0aXBsZSB0aW1lcyBiZWNhdXNlIEkgbmVlZCB0byBnbyBpY2Ugc2thdGluZyBhdCBsZWFzdCBvbmNlIGEgeWVhciwgZGlkIGFsbCB0aGUgcmVzZWFyY2gvcHJpY2UgY29tcGFyaXNvbnMsIGFuZCB3YWxrZWQgdXMgdG8gdGhlIHJpbmssIGJ1dCBoZSBkaWQgcGF5IGZvciB0aWNrZXRzIGFuZCBza2F0ZSByZW50YWxzLCB3aGljaCBoZSB0b3RhbGx5IGRpZCBub3QgaGF2ZSB0byBkbykuCk1rYW4geW9rIGJpbGl5b3J1bSBhbWEgbHRmZW4gYmlyaSBiZW5pIEthZGlyIE1zcm9sdSBOaWhhdCBIYXRpcG9sdSBOaWhhdCBEb2FuIEJhbGllayBsdGVyIEFobWV0IEhha2FuIE9yaGFuIEdlbmNlYmF5IEh1bHVzaSBBa2FyIEZldGh1bGxhaCBHbGVuIFRya2l5ZSBhbHNuLCBiZW5pIERhcmlvIE1vcmVubyBUdXJhbiBEdXJzdW4gRnVhdCBLcHJsIGJyYWhpbSBhbGwgTmloYWwgQXRzeiBLYXptIEthcmFiZWtpciBOYXptIEhpa21ldCBGaWtyZXQgS3psb2sgTWV0aW4gT2t0YXkgVGFuanUgT2thbiB2ZSBlbiBuZW1saXNpIE11c3RhZmEgS2VtYWwgVHJraXllIGdlcmkgZ3Ryc24uIEx0ZmVuLiAKSGVyIG5ldyBib29rLCAiVGhlIExhc3QgR2lybDogTXkgU3Rvcnkgb2YgQ2FwdGl2aXR5IGFuZCBNeSBGaWdodCBBZ2FpbnN0IHRoZSBJc2xhbWljIFN0YXRlIiAoVGltIER1Z2dhbiBCb29rcyksIG91dCBub3csIHRlbGxzIHRoZSBzdG9yeSBvZiBob3cgc2hlIGFuZCBoZXIgZmFtaWx5IHdlcmUgbGl2aW5nIHBlYWNlZnVsbHkgaW4gdGhlIGZhcm1pbmcgY29tbXVuaXR5IG9mIEtvY2hvLCBuZWFyIHRoZSBTeXJpYW4gYm9yZGVyLCB3aGVuIElTSVMgZmlyc3Qgcm9zZSB0byBwb3dlci4gCkhlciBmZXcgYXR0YWNobWVudHMgaW5jbHVkZSBhIGxvc3QgbWVudG9yIChBbm5ldHRlIEJlbmluZykgd2hvIGhvdmVycyBhcm91bmQgdGhlIHBlcmlwaGVyeSBvZiBoZXIgcGFzdDsgWW9uIFJvZ2cgKEp1ZGUgTGF3KSwgT2JpIFdhbiB0byBoZXIgQW5ha2luOyBNYXJpYSBSYW1iZWF1IChMYXNoYW5hIEx5bmNoKSwgaGVyIG9uZSB0aW1lIGJlc3QgZnJpZW5kOyBhbmQgdGhlIGlycmVwcmVzc2libGUgTmljayBGdXJ5IChhIGNvbXB1dGVyIGRlIGFnZWQgU2FtdWVsIEwuIEphY2tzb24pLCB3aG8ncyBvbiBoYW5kIG1vcmUgb2Z0ZW4gdGhhbiBub3QgZm9yIGNvbWVkaWMgcHVycG9zZXMgYW5kIHRvIHByb3ZpZGUgYSB0YW5naWJsZSB0aWUgaW4gdG8gVGhlIChGdXR1cmUpIEF2ZW5nZXJzLiAoVGhlIG1vdmllIHRha2VzIHBsYWNlIGluIDE5OTUgYW5kIHNvIGZ1bmN0aW9ucyBhcyBhIHByZXF1ZWwuKS4gCkhvb2tlciBjYXN0cyBhIGNvbmNlcm5lZCBnbGFuY2UgYmFjayBhdCBoaW0gYW5kIHRoZW4gZ29lcyBiYWNrIGluc2lkZS4gTWVhbndoaWxlLCB0aGUgYmFkIGd1eSB3aG8gZ290IGF3YXkgbWVldHMgdXAgaW4gYSB3YXJlaG91c2Ugd2l0aCBhbnRoZXIgYmFkIGd1eSBmb3IgZmFrZSBJRCBhbmQgc29tZSBkZXRvbmF0b3IgY29yZC4gU2VlbXMgaGUgd2FzIHRoZSBndXkgd2hvIGJsZXcgdGhlIHNhZmUgYmFjayBhdCB0aGUgc3RvcmUsIHdoaWNoIHdlIGNvdWxkbid0IHRlbGwgYmVmb3JlLCBvbiBhY2NvdW50YSB0aGUgaG9ja2V5IG1hc2sgYW5kIGFsbC4gCkFueXdheXMsIG15IGJyb3RoZXJzIGZyaWVuZCBkZWNpZGVkIGhlIHdhcyBnb2luZyB0byBwbGF5IGluIHRoZSBtYWluIGV2ZW50IHRoaXMgeWVhciAoZmlyc3QgdGltZSBoZSBpcyBwbGF5aW5nIHRoZSBtYWluIHNpbmNlIDIwMTAgSSBiZWxpZXZlLikuIApCdXNpbmVzcyBwZW9wbGUgaGF2ZSBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIGNvbnNlcnZhdGl2ZS4gV2hlbiBJIGxhdW5jaGVkIG15IG93biBidXNpbmVzcyBJIHN0YXJ0ZWQgdG8gdW5kZXJzdGFuZCB3aHkuIAo1LiBGbGljayBvZmYKVGhlbiB0aGVyZSB0aGUgb25lIHNvZnR3YXJlIHVwZGF0ZSB0aGF0IGNhbWUgcmVhbGx5IGxhdGUuIApIZSBpcyBzdXJ2aXZlZCBieSBoaXMgZGF1Z2h0ZXIgUmFjaGFlbCBNLiAKQW5kIG11c3QgYmUgZG9jdW1lbnRlZCAoSW4gVGV4YXMgYSAiU2NvdHQgRHVyZmVlIiBsZXR0ZXIgaXMgY29tcGxldGVkKUl0IHJlYWwgd2FzaHksIGFuZCBhZG1pdHRlZGx5IGJ1dCBkcnVnIHVzZSBvbiBwcm9wZXJ0eSBjb3VsZCBiZSBzZWUgYXMgYW4gZXhjZXB0aW9uIGFjY29yZGluZyB0byB0aGUgYWhhIGd1aWRsaW5lcyBJIGp1c3QgbGlua2VkLiBCdXQgSSBkb24gdGhpbmsgaXQgYXBwbGllcyBpbiB0aGUgdmlkZW8sIHBvdGVudGlhbCBjb250cmFiYW5kIHBvc3Nlc3Npb24gd2FzIHN1c3BlY3RlZCBidXQgbm90IG9ic2VydmVkLCBhbGxvd2luZyBQRCB0byBlbnRlciB0aGUgcm9vbSBhbmQgc2VhcmNoIHRoZSByb29tIHdpdGhvdXQgc2NvcGUgY2FuIGNvbXByaXNlIHBhdGllbnQgbWVkaWNhbCBpbmZvIHdlbGwgYmV5b25kIGFueSBsaW1pdGVkIHNjb3BlIHRoZSBsYXcgYWxsb3dzIGZvci4gClRha2UgSG9tZSBQb2ludDogICJUaGUgJ2xheScgcmVjb21tZW5kYXRpb24gdG8gY29uc3VtZSAxIGcgcHJvdGVpbi9sYiBvZiBib2R5d2VpZ2h0L2RheSAoMi4yIGcva2cvZGF5KSB3aGlsZSByZXNpc3RhbmNlIHRyYWluaW5nIGhhcyBwZXJ2YWRlZCBmb3IgeWVhcnMuIE51dHJpdGlvbiBwcm9mZXNzaW9uYWxzIG9mdGVuIGRlZW0gdGhpcyBsYXkgcmVjb21tZW5kYXRpb24gZXhjZXNzaXZlIGFuZCBub3Qgc3VwcG9ydGVkIGJ5IHJlc2VhcmNoLiBIb3dldmVyLCBhcyB0aGlzIHJldmlldyBzaG93cywgdGhpcyAibGF5IiByZWNvbW1lbmRhdGlvbiBhbGlnbnMgd2VsbCB3aXRoIHJlc2VhcmNoIHRoYXQgYXNzZXNzZXMgYXBwbGllZCBvdXRjb21lIG1lYXN1cmVzIG9mIHN0cmVuZ3RoIGFuZCBib2R5IGNvbXBvc2l0aW9uIi4gCkdvaW5nIGZyb20gMiB0byAxIHdpbGwgZGVmaW5pdGVseSBiZSBhIGJpZyBjaGFuZ2UgYnV0IGhvbmVzdGx5LCB0aGUgZmlyc3QgZ2FtZSBzdGlsbCBob2xkcyB1cCBzdXJwcmlzaW5nbHkgd2VsbCBpbiB0ZXJtcyBvZiBnYW1lcGxheSBhbmQgc3RvcnkgKGFuZCBncmFwaGljcyBvbiB0aGUgT25lIFggYXJlIG9rYXlpc2gpLiBIdW50aW5nIGluIFJEUjEgaXMgbXVjaCBzaW1wbGVyIGFzIHlvdSBjYW4gdXNlIGFueSBndW4gYW5kIGp1c3QgbmVlZCB0byBraWxsIHRoZSBhbmltYWwgYW5kIHRoZXJlIGFyZSBubyBwZWx0IHF1YWxpdGllcy4gSnVzdCBraWxsIGEgZGVlciB3aXRoIGFueSB3ZWFwb24gYW5kIHNraW4gaXQuIApSZXRpcmVkIGNvdXBsZXMsIHdobyB1c2UgcGVuc2lvbiBzcGxpdHRpbmcgdG8gZGV0ZXJtaW5lIHdoaWNoIHdpbGwgYmUgdGhlIGxvd2VyIGluY29tZSBzcG91c2UsIHNob3VsZCBiZSBwcmVwYXJlZCB0byBzd2l0Y2ggdGhlaXIgbWVkaWNhbCBleHBlbnNlIGNsYWltIGFjY29yZGluZ2x5Li4gCldoZW4gZG9ncyBkbyB3aGF0IHlvdSBhc2ssIHRoZXkgZ2V0IHNvbWV0aGluZyBvdXQgb2YgaXQsIGV2ZW4gaWYgdGhhdCdzIGFmZmVjdGlvbi4gVGhlIGFmZmVjdGlvbiBpcyByZWluZm9yY2luZyB0aGUgYmVoYXZpb3Igc28gdGhleSBkbyB0aGUgcmVxdWVzdGVkIGJlaGF2aW9yIG1vcmUuIApQbGVhc2UgZG9uIG1pc3VuZGVyc3RhbmQgbXkgc3RvcnksIEkgZG8gbm90IGVuY291cmFnZSBhbnlvbmUgdG8gdGhpbmsgdGhhdCB0aGVpciBwcm9ibGVtcyBvciBtaXNmb3J0dW5lcyBjb21lIGZyb20gYSBjdXJzZSBub3IgYW0gSSBzYXlpbmcgdGhhdCBpZiBhIHBzeWNoaWMgdGVsbHMgeW91IHNvbWV0aGluZyBhYm91dCBhIGZyaWVuZCBvciBmYW1pbHkgbWVtYmVyIHlvdXIgc2hvdWxkIGJlbGlldmUgdGhlbSBhbmQgYWN0IGFnYWluc3QgdGhlbSBvciB3aGF0ZXZlci4gQWdhaW4sIEkganVzdCB3YW50ZWQgdG8gc2hhcmUgbXkgZXhwZXJpZW5jZSwgc29tZXRoaW5nIHRoYXQgaGFwcGVuZWQgdG8gbWUgdGhhdCBldmVuIEkgY2FuIGZ1bGx5IHVuZGVyc3RhbmQuIApUaG91Z2ggd2Ugd2VyZSB1bmRvbmUgYnkgc2hvY2tpbmcgZGVmZW5kaW5nIGF0IGEgc2V0IHBpZWNlIGFuZCB0aGUgc2Vjb25kIGdvYWwgYXQgdGhlIHN0YXJ0IG9mIHRoZSBzZWNvbmQgaGFsZiB3ZSBoYWQgdHdvIGNoYW5jZXMgdG8gY2xlYXIuIApUaGUgcGhvbmUgY2FzZSBJIGxpbmtlZCB0byBpbiB0aGUgQ05ldCBhcnRpY2xlIGlzIG5vIGRpZmZlcmVudCB0aGFuIHRoZSBjYXNlIHlvdSBwcm9iYWJseSBoYXZlIHJpZ2h0IG5vdy4KRXQgcXVhbmQgamUgZ2xpc3NlIGxlcyBwaWVkcyBzb3VzIGxhIHRhYmxlLCBjJ2VzdCB1biBtZXJ2ZWlsbGVtZW50IGRlIGRjb3V2cmlyIGNlIHF1aSBhIHQgY3Vpc2luLCBzb3V2ZW50ICJzaW1wbGUiLCBtYWlzIGF2ZWMgdGVsbGVtZW50IGQnYW1vdXIgZXQgZCdhdHRlbnRpb24gIS4gClRoYW5rIHlvdSwgVGhlIFRyb3BpY2FsIEJyZWV6ZSBSZXNvcnQgVGVhbS4gClRoZSBIb3VzZSBiaWxsLCB3aGljaCBtb3ZlZCB0aHJvdWdoIGl0cyBmaW5hbCBjb21taXR0ZWUgc3RvcCBvbiBUaHVyc2RheSBhcyB3ZWxsLCBtb3ZlcyBpbiBhbiBvcHBvc2l0ZSBkaXJlY3Rpb24gZnJvbSB0aGUgU2VuYXRlIGxlZ2lzbGF0aW9uLiBJdCB3b3VsZCBhbGxvdyB0aGUgdHJpYmUgdG8ga2VlcCBpdHMgc2xvdCBtYWNoaW5lcyBhbmQgYmxhY2tqYWNrIHRhYmxlcyBmb3IgMjAgeWVhcnMsIGJ1dCBpdCB3b3VsZCBub3QgYWxsb3cgdGhlbSB0byBhZGQgYWRkaXRpb25hbCBnYW1lcy4gVGhlIGxlZ2lzbGF0aW9uIHdvdWxkIGFsc28gbWFrZSBpdCBjbGVhciB0aGF0IHNsb3QgbWFjaGluZXMgd291bGQgYmUgY29uZmluZWQgdG8gdHJpYmFsIHJ1biBjYXNpbm9zIGFuZCB0cmFja3MgaW4gU291dGggRmxvcmlkYS4uIApCZWNhdXNlIHRoZXJlIGlzIG5vIHZpY3RvcnkgaW4gQWZnaGFuaXN0YW4uIApBIGxvdCBvZiBjb21tZW50cyBhcmUgc2F5aW5nIGhlIHdhcyBidWxseWluZyB0aGVtIG9yIGJlaW5nIG1lYW4gYnV0IEkgaG9uZXN0bHkgdGhpbmsgaXQncyB0aGUgY29tcGxldGUgb3Bwb3NpdGUuIEhlIGlzIHllYXJzIG9sZGVyIGFuZCBjb3VsZCBwcm9iYWJseSB2ZXJiYWxseSBkZXN0cm95IHRoZW0gaWYgaGUgY2hvc2UgYnV0IG5vLCBoZSBsYXVnaGVkIHdpdGggdGhlbSBub3QgYXQgdGhlbS4gCkl0J3MgTGF1cmEgY2FsbGluZyB0byB0ZWxsIG1lIGhlIGhhcyBtYWRlIG1vcmUgdGhyZWF0cy4gCkl0IHdhcyBjcmF6eSBzdHJlc3NmdWwgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhpbmdzIHRvIHRoZSBwb2ludCB0aGF0IGl0IHRyaWdnZXJlZCBteSBDVlMgYW5kIEkgd2FzIGhvc3BpdGFsaXplZC4gQnV0IGV2ZW4gdGhlcmUgSSBjb250aW51ZWQgdG8gcHV0IGV2ZXJ5dGhpbmcgdG9nZXRoZXIgYWdhaW4sIGFsbCB3aGlsZSB0aGUgb3RoZXIgbW9kcyB3ZXJlIG1vcmUgZnJvbnQgZmFjaW5nLiAKQ2hyaXN0aWFuIEhVVElOLCBTZXJnZSBKQU5RVUlOLCBIZW5yaSBKSUJSQVlFTCwgUmdpcyBKVUFOSUNPLCBGcmFub2lzIExBTVksIEplYW4gWXZlcyBMRSBCT1VJTExPTk5FQywgTW1lIE1hcnlsaXNlIExFQlJBTkNIVSwgTS4gCldoZXRoZXIgaGUncyBzdWNjZXNzZnVsIGRlcGVuZHMgaW4gcGFydCBvbiBwb2xpY2UgYW5kIHRoZWlyIGludGVycHJldGF0aW9uIG9mIHRoZSBsYXcuIFNldmVyYWwgY2FyZCBjbHVicyBpbiBEYWxsYXMgYW5kIFBsYW5vIGhhdmUgc2h1dCBkb3duIGluIHJlY2VudCB3ZWVrcyBvdmVyIHF1ZXN0aW9ucyBhYm91dCB0aGVpciBsZWdhbGl0eS4gU2V2ZXJhbCBvdGhlcnMgbG9va2luZyB0byBjYXBpdGFsaXplIG9uIHRoZSBwb3B1bGFyaXR5IG9mIHRoZXNlIHNvIGNhbGxlZCBwb2tlciByb29tcyBoYXZlIHB1dCB0aGVpciBwbGFucyBvbiBob2xkLgoyLiBObyBpbWFnZXMgb2YgbWVuIGluIGJpa2luaXMhIChJIGRpZG4gYXNrIGFib3V0IEljZSBTa2F0aW5nIHRpZ2h0cyBmb3IgbWVuKQpUaGUgcGVyc29uIHJlcGx5aW5nIHRvIG1lIHdhcyBzZWxmIGlkZW50aWZ5aW5nIGFzIGFuIGV4cGVydCBpbiB0aGUgZmllbGQsIHlldCBjYW5ub3Qgc3BlYWsgdG8gdGhlIGFjdHVhbCBwcm9ibGVtcyB0aGF0IGRvZXMgcGxhZ3VlIHRoZSBicmVlZCBhbmQgdmVyeSBsaWtlbHkgaW1wYWN0cyBsaWZlc3BhbnMuIEkgYW0gbm90IGFuIGV4cGVydCBhbmQgbmV2ZXIgY2xhaW1lZCB0byBiZS4gSnVzdCBhIHBlcnNvbiB3aG8gZ2l2ZXMgYSBkYW1uLgpUaGF0IHdlbnQgc3RyYWlnaHQgaW50byB0aGUgZ2FtZS4KVGhlIGZhY2lsaXR5IGl0c2VsZiBpcyBodW1ibGUsIGluIGEgcmVsYXRpdmVseSBzbWFsbCB0d28gc3Rvcnkgb2ZmaWNlIHBhcmsgaW4gR3VuYmFycmVsLiBCdXQgaXQncyBpbnRlbnRpb25hbCBhbmQgZGV0YWlsZWQsIGFjY2VudGVkIGJ5IHNoZWx2ZXMgb2Ygc2lsdmVyIGphcnMgZmlsbGVkIHdpdGggaGVyYnMsIGFuY2llbnQgbG9va2luZyBib3dscyBhbmQgaGFuZ2luZyBidWNrZXRzIGZ1bGwgb2YgaG90IG9pbHMgYW5kIHdhcm0gaGVyYmFsaXplZCBwYXN0ZXMsIGFuZCBhIGRpbSwgcXVpZXQgcmVsYXhhdGlvbiByb29tIHdpdGggY291Y2hlcyBhbmQgdGVhIGN1cHMgbGluaW5nIHRoZSB0YWJsZS4gClZlcnkgcHJldHR5LCB3aXRoIGRlbGljYXRlLCBmZW1pbmluZSBmZWF0dXJlcywgYW4gZWFzeSBzbWlsZSBhbmQgdmVyeSBsb25nLCB3YXZ5IGhhaXIuIDkvMTAKMjQ0IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnb1llYWggSSBtZXQgTWFyYyBHb2RkYXJkIGJlZm9yZSB0b28uIApUbyBtZSwgdGhlIGJlbmVmaXRzIG9mIGhhdmluZyBhIGd1biBmb3IgaG9tZSBwcm90ZWN0aW9uIHZhc3RseSBvdXR3ZWlnaCBhIHNjZW5hcmlvIHdoZXJlIHNvbWVib2R5IHdpdGggYW4gaW5mZXJpb3Igd2VhcG9uIG1pZ2h0IGRpc2FybSB5b3UuIApUaGUgZmluaXNoaW5nIG9uIHRoZSBjYXNlIGFuZCBicmFjZWxldCBpcyBiYXNpY2FsbHkgZmxhd2xlc3MgYW5kIGl0IG11Y2ggYmV0dGVyIHRoYW4gdGhlIGZpbmlzaGluZyBvbiBteSBmcmllbmQgc2Vpa28gc2FyYjAzMy4gCkFsc28sIHllYWguIApUaGUgbmV0d29yayB3aWxsIGFpciB0aGUgaW5hdWd1cmFsIE92ZXJ3YXRjaCBMZWFndWUgR3JhbmQgRmluYWxzIGluIHByaW1lIHRpbWUgdGhpcyBtb250aCBhcyBwYXJ0IG9mIGEgbXVsdGl5ZWFyIGFncmVlbWVudCB0byBicmluZyBlc3BvcnRzIHRvIHRoZSBiaWdnZXN0IHNwb3J0cyBwbGF0Zm9ybSBvbiBBbWVyaWNhbiB0ZWxldmlzaW9uLiAKTXVsdGlwbHkgdGhlIHByb2JhYmlsaXR5IGJ5IHRoaXMgYW5kIHlvdSBnZXQgMC4xMDU1IFNvIHRoZSBwcm9iYWJpbGl0eSBvZiBoYXZpbmcgMSBjYXJkIGZyb20gZWFjaCBzdWl0IGlzIDAuMTA1NSAoRnVsbCBBbnN3ZXIpLiAKTidlc3NheWV6IHBhcyBkJ2VuY2hyaXIgcG91ciB2b3VzIHJhdHRyYXBlciB1bmUgZm9pcyBxdWUgdm91cyBhdmV6IHBlcmR1IHRvdXQgY2UgcXVlIHZvdXMgYXZpZXogcHJ2dSBkZSBtaXNlci4gQXR0ZW5kZXogZGUgcG91dm9pciBwZXJkcmUgY2V0dGUgc29tbWUgIG5vdXZlYXUgc2FucyBxdWUgY2VsYSBzb2l0IHByb2JsbWF0aXF1ZSBwb3VyIHBvdXZvaXIgam91ZXIgZW4gdm91cyBhbXVzYW50Li4gCkRlamVhbiBzYXlzLCBzbyBmYXIsIHRoZSBvd25lciBvZiBQaGlsIEJyYWR5J3MgZmFjZXMgMTE3IHZpb2xhdGlvbnMgYW5kIHRoYXQgbnVtYmVyIHdpbGwgbGlrZWx5IGdvIHVwLiBBY2NvcmRpbmcgdG8gRGVqZWFuLCB0aGUgbWluaW11bSBmaW5lIGZvciBlYWNoIHZpb2xhdGlvbiBpcyAkMTAwLiBEbyB0aGUgbWF0aCwgYW5kIHRoYXQncyBtb3JlIHRoYW4gJDExLDAwMC4gQWxzbywgZGVwZW5kaW5nIG9uIHRoZSBzZXZlcml0eSBvZiB0aGUgdmlvbGF0aW9ucywgdGhlIGJhcidzIGxpcXVvciBsaWNlbnNlIGNvdWxkIGJlIHN1c3BlbmRlZCBvciByZXZva2VkLgpUaGUgc2Vjb25kIHRpbWUgSSBoYWQgc29tZSBraW5kIG9mIHNlcHNpcy4gSSB3YXMgY29tcGxldGVseSBkZWh5ZHJhdGVkIGFuZCBibHVlLiBJIHN0dXBpZGx5IHRvb2sgdGhlIGJ1cyB0byB0aGUgaG9zcGl0YWwuIEkgZ290IHRoZXJlIGFuZCB0aGV5IGFkbWl0dGVkIG1lIGltbWVkaWF0ZWx5IHNpbmNlIEkgaGFkIG15IGNhcmQgZnJvbSA0IHllYXJzIGVhcmxpZXIuIE15IHZlaW5zIHdlcmUgc28gZmxhdCB0aGF0IGl0IHRvb2s3IHRyaWVzIHRvIGdldCBhbiBJViB0byB3b3JrLiBBZ2FpbiwgZXhjZWxsZW50IGhlbHAgYW5kIGNvbXBhc3Npb25hdGUgZG9jdG9ycyBhdCB3b3JrIGhlcmUsIEkgaGFkIHR3byBkb2N0b3JzIGhlbHBpbmcgbWUgaW4gRW5nbGlzaC4KQnV0IHRoYXQgd2FzIG15IGxpZmUgYWZ0ZXIgbXkgbG9zcywgaW5jcmVkaWJseSB3b3JyaWVkIHdoZW4gSSBkaWRuJ3QgZmVlbCBtb3ZlbWVudC4gCk9uZSBvZiB0aGVtIGlzIGluIGZpbmFuY2lhbCB0cm91YmxlIHRvby5BbmQgeWV0IGhlcmUgd2UgYXJlLCBkZWFsaW5nIHdpdGggYW4gYXBwYXJlbnRseSBndWlsdHkgTUogYXMgZmFyIGFzIHRoZSBtZWRpYSBhcmUgY29uY2VybmVkLiBUaGVyZSBtb3JlIHRoYW4gZW5vdWdoIHJlYXNvbiB0byBkb3VidCB0aGUgbmV3IGNsYWltcyAoZXNwZWNpYWxseSB1c2luZyBhIGZpbmFuY2lhbGx5IGx1Y3JhdGl2ZSBtZWRpdW0gdG8gYmUgaGVhcmQpIG9yIGF0IHRoZSB2ZXJ5IGxlYXN0IG5vdCB0YWtlIHRoZSBjbGFpbXMgYXQgZmFjZSB2YWx1ZSBhbmQgdGhlbiBhY3Qgb24gdGhlbS4gClRoZSBJbnRlcm5ldCBwb2tlciBpbmR1c3RyeSBoYXMgcmVhbGl6ZWQgdGhlIHBvdGVudGlhbCBvZiBtb2JpbGUgcG9rZXIgaW4gdGhlIHBhc3QgY291cGxlIG9mIHllYXJzIGFuZCB0aGlzIG5ldyB3YXkgb2YgcGxheWluZyBwb2tlciBnYW1lcyBpcyBzdGlsbCBpbiBpdHMgaW5mYW5jeS4gVGhlIGJlc3QgbW9iaWxlIHBva2VyIHNpdGVzIGhhdmUgY3JlYXRlZCBncmVhdCBwb2tlciBhcHBzIHRoYXQgY2FuIGJlIGVhc2lseSBkb3dubG9hZGVkIGFuZCBpbnN0YWxsZWQgb250byBpT1MgYW5kIEFuZHJvaWQgZGV2aWNlcyBlbmFibGluZyBwb2tlciBmYW5zIHRvIHBsYXkgcmVhbCBtb25leSBnYW1lcyBvbiB0aGUgbW92ZS4uIApXaWUgZ2VuYXUgbWFuIGRhcyB1bXNldHplbiBzb2xsLCBpc3QgYWxsZXJkaW5ncyBzY2h3aWVyaWcuIApJIGRpZCBnb29kIHRoaW5ncyBpbiAyMDA3IGFnYWluc3QgRmVybmFuZG8uIApTb21ldGhpbmdzIHdyb25nIHdpdGggdGhlIGNhbWVyYSwgb3IgbWF5YmUgdGhpcyB3YXMgYSBwYW5vcmFtYSBzaG90IGFuZCB0aGUgc3RpdGNoaW5nIGZhaWxlZC4uIApNb3N0IG9mIHRoZSByZXNlYXJjaCB0aGF0IHdhcyBkb25lLCB3YXMgdG8gcHJvdmUgdGhhdCB0aGUgcGxhbnQgd2FzIGRhbmdlcm91cyBzbyB3ZSBjb3VsZCBjb250aW51ZSB0byBhcnJlc3QgbW9yZSBibGFja3MgYW5kIGhpcHBpZXMuIEJ1dCBub3cgdGhhdCB0aGUgaGlwcGllcyBhcmUgb2xkIGFuZCBoYXZlIHRoZSBtZWFucyB0byBmaWdodCBpbiBjb3VydCwgdGhlIG9ubHkgb3B0aW9uIGlzIHRvIGFycmVzdCBtb3JlIEJsYWNrcyBvciBCcm93bnMgb3IgSGlzcGFuaWNzIG9yIHdoYXRldmVyLiBUaGlzIGJlZ2lucyB0byBsb29rIGxpa2UgZGlzY3JpbWluYXRpb24gc28gdGhlIHBsYW50IGJlZ2lucyB0byB0YWtlIG9uIGEgbW9yZSBmYXZvdXJhYmxlIHByb2ZpbGUgYXMgYSBtZWRpY2luYWwgaW4gdGhlIHB1YmxpYyBwZXJjZXB0aW9uLgpJZiB0aGlzIHBvc3QgaXMgYWN0dWFsbHkgZ29yZSwgeW91IGFyZSB3ZWxjb21lIHRvIHBvc3QgaXQgYWdhaW4gd2l0aCBhIGRlY2VudCB0aXRsZS4gSWYgeW91IG5vdCBhIGZ1bm55IHBlcnNvbiBvciB0aGUgZ29yZSBpcyBoYXJkIHRvIGZpZ3VyZSBvdXQsIHVzZSB0aGUgdGl0bGUgdG8gcG9pbnQgb3V0IHRoZSBnb3JlLiBBdHRlbXB0cyB0byB1c2UgdGhlIHNhbWUgdGl0bGUgd2l0aG91dCBtYWtpbmcgaXQgbW9yZSBkZXNjcmlwdGl2ZSB3aWxsIHJlc3VsdCBpbiBhIGJhbi4uIApEb24gbWFrZSBhIGJpZyB0aGluZyBvZiBpdCwgdGhlcmUgbm8gbmVlZCB0byBzdGFydCBkcmFtYSBpbiB5b3VyIGZyaWVuZCBncm91cCBhbmQgaWYgeW91IHNlbmQgaGVyIGEgbWVzc2FnZSBicmVha2luZyB1cCB3aXRoIGhlciwgaXQgd2lsbCwgYnV0IHN0b3AgaW52aXRpbmcgaGVyIHRvIGhhbmcgb3V0IGFuZCBzdG9wIG1lc3NhZ2luZyBoZXIgKGFuZCBlc3BlY2lhbGx5IGRvbiBhcG9sb2dpc2UhIFlvdSBkb25lIG5vdGhpbmcgd3JvbmcpLiAKMi4gKEdvdmVybm1lbnQsIFBvbGl0aWNzIERpcGxvbWFjeSkgYSBzaXR1YXRpb24gb2YgbXV0dWFsIGhvc3RpbGl0eSBiZXR3ZWVuIHR3byBwb3dlcnMgb3IgbmF0aW9ucyB3aXRob3V0IG9wZW4gd2FyZmFyZQpUaGUgQm9laW5nIGluc2lkZXIgc2FpZCB0aGF0IHdoaWxlIHRoZSBjb21wYW55IGFsc28gdXNlcyBhbmQgbG9uZyBydW4gdGVjaG5pcXVlcyBrZWVwIGl0cyBjYXNoIGZsb3cgcHJlZGljdGFibGUgYW5kIG9uIHRhcmdldCwgdGhvc2UgZmFsbCBzaG9ydCB0aGV5IGdvIHRvIHRoZSBvdGhlciB0ZWNobmlxdWVzLiBzdWNoIHRlY2huaXF1ZXMgc2VydmUgdG8gcHVsbCBjYXNoIGluIG9yIHRvIHJldGFpbiBjYXNoIGF0IHRoZSBlbmQgb2YgYSBxdWFydGVyOgpJIGNhbiBub3QgcmlzayByZXBlYXQgYnVzaW5lc3Mgb3ZlciB5b3Ugc2hvd2luZyBteSBjdXN0b21lciB0aGF0IHlvdSBkb24ndCBjYXJlIG9yIHlvdSBoYXZlIGJldHRlciB0aGluZ3MgdG8gZG8uLiAKTG9jayBpbiB0aGUgWCB3aXRoIGEgcmV2b2x1dGlvbiBuZWFyIHRoZSB0b3AgdGhlbiB3cmFwIHdoYXRldmVyIGlzIGxlZnQgYWNyb3NzIHRoZSBjZW50ZXIgb2YgdGhlIGtuZWUuIApKRiBQdGFrIFNjaWVuY2UgQm9va3MgUG9zdCBkb24gaGF2ZSB0aGF0IG11Y2ggdG8gc2F5IGFib3V0IHRoZSBzZXJpZXMgb2YgaW1hZ2VzIHRoYXQgSSBmb3VuZCBpbiB0aGUgNSBEZWNlbWJlciAxOTA4IGlzc3VlIG9mIFNjaWVudGlmaWMgQW1lcmljYW4gZXhjZXB0IGZvciAiV293ISIgU29tZXRpbWVzIHRoYXQgaXMgYWJvdXQgYWxsIEkgY2FuIG1hbmFnZSwgYW5kIHRoYXQgZmluZS4gClNvbWUgcGVvcGxlIG1pZ2h0IHN0YXJ0IHBsYXlpbmcgZnJlZSBvbmxpbmUgcG9rZXIganVzdCBmb3IgdGhlIGZ1biBvZiBpdC4gTG9vayBhdCB0aGlzLCB5b3UgaGF2ZSBpbnRlcm5ldCBhY2Nlc3MsIGEgY29tcHV0ZXIsIGFuZCBvZiBjb3Vyc2UsIHRpbWUuIE9uY2UgeW91IGhhdmUgc3R1bWJsZWQgaW4gdGhlIGNvdXJzZSBvZiBmcmVlIG9ubGluZSBwb2tlciwgYWxsIHlvdSBoYXZlIHRvIGRvIGlzIGNsaWNrIHRvIHRoZSBsZWZ0IHRoZW4gdHlwZSB0byB0aGUgcmlnaHQgYW5kIHZpb2xhISBGcmVlIG9ubGluZSBwb2tlciBpcyBub3cgaW4geW91ciBtb25pdG9ycywgc3RhcmluZyBiYWNrIGF0IHlvdSBhbmQgYWxtb3N0IGRhcmluZyB5b3UgdG8gdGFrZSB5b3VyIGZpcnN0IG1vdmUuIEl0J3MgZnJlZSwgY29udmVuaWVudCwgYW5kIHZlcnkgZnVuIHRvIHBsYXkgd2hpY2ggaXMgd2h5IG1hbnkgcGVvcGxlIGFyZSBub3cgYWRkaWN0ZWQgdG8gZnJlZSBvbmxpbmUgcG9rZXIuClBsZWFzZSBwdXQgdGhlIHN1YmplY3QgYXMgIklMb3ZlIEdhR2EiLiBBbHNvLCB0aGlzIGxpc3QgdXNlcyB0aGUgdGVybSAiaVR1bmVzIiB0byByZXByZXNlbnRkaWdpdGFsIHN0b3Jlcy4gClRoZW4gZmluYWxseSBteSBtb20gdG9vayBtZSB0byBhbiBleWUgc3VyZ2Vvbi4gCkRvIG5vdCB0cnkgdG8gbWVkaXRhdGUgbHlpbmcgZG93biBpbiBiZWQgICB5b3Ugd2lsbCBnbyB0byBzbGVlcCwgd2hpY2ggaXMgbmljZSwgYnV0IGl0IGlzIG5vdCBtZWRpdGF0aW5nLi4gClRoZU1pZ2h0eUFjZXJpYyB1ClRoZSBqdWRnZXMgcmV3YXJkZWQgaGVyIHdpdGggYSA5MC4gU2hlIGJhY2tlZCBpdCB1cCB3aXRoIGFuIDg3LjI1LiAKSW4gMjAwOSBoZSB3YXMgY2VydGlmaWVkIGJ5IHRoZSBUaGFpIE1hc3NhZ2UgU2Nob29sIG9mIENoaWFuZyBNYWkuIFZhbCB3YXMgYSBwYXNzaW9uYXRlIHRlYWNoZXIsIGEgbGlmZSBsb25nIGxlYXJuZXIgYW5kIGxvdmVkIGJ5IGFsbCB3aG8ga25ldyBoaW0uIApJIHdhcyA1dGggdG8gYWN0IGFuZCB0aGUgZmlyc3QgYmV0IHdhcyBzb21ldGhpbmcgbGlrZSAkMjAgaW50byBhICQyMCBwb3QuIApMb29rLCBoYXZpbmcgYXBwbGUgbXkgdW5jbGUgd2FzIGEgZ3JlYXQgYXBwbGUgb3JjaGFyZCBncm93ZXIgYW5kIHBpY2tlciwgRHIuIEpvaG4gVHJ1bXAgYXQgV2FsbGEgV2FsbGE7IGdvb2QgZ2VuZXMsIHZlcnkgZ29vZCBnZW5lcywgT0ssIHZlcnkgc21hcnQsIHRoZSBXaGFydG9uIFNjaG9vbCBvZiBBcHBsZSBHcm93aW5nLCB2ZXJ5IGdvb2QsIHZlcnkgc21hcnQgeW91IGtub3csIGlmIHlvdSdyZSBhIGNvbnNlcnZhdGl2ZSBBcHBsZSwgaWYgSSB3ZXJlIGFuIG9yYW5nZSwgaWYsIGxpa2UsIE9LLCBpZiBJIHJhbiBhcyBhIGxpYmVyYWwgb3JhbmdlLCB0aGV5IHdvdWxkIHNheSBJIG9uZSBvZiB0aGUgc21hcnRlc3QgcGVvcGxlIGFueXdoZXJlIGluIHRoZSB3b3JsZCBpdCdzIHRydWUhIGJ1dCB3aGVuIHlvdSBhIGNvbnNlcnZhdGl2ZSBBcHBsZSB0aGV5IHRyeSBvaCwgZG8gdGhleSBkbyBhIG51bWJlciB0aGF0J3Mgd2h5IEkgYWx3YXlzIHN0YXJ0IG9mZjogV2VudCB0byBXaGFydG9uLCB3YXMgYSBnb29kIHN0dWRlbnQsIHdlbnQgdGhlcmUsIHdlbnQgdGhlcmUsIGRpZCB0aGlzLCBidWlsdCBhIGZhcm0geW91IGtub3cgSSBoYXZlIHRvIGdpdmUgbXkgbGlrZSBjcmVkZW50aWFscyBhbGwgdGhlIHRpbWUsIGJlY2F1c2Ugd2UncmUgYSBsaXR0bGUgZGlzYWR2YW50YWdlZCBidXQgeW91IGxvb2sgYXQgdGhlIGFwcGxlIGRlYWwsIHRoZSB0aGluZyB0aGF0IHJlYWxseSBib3RoZXJzIG1lIGl0IHdvdWxkIGhhdmUgYmVlbiBzbyBlYXN5LCBhbmQgaXQncyBub3QgYXMgaW1wb3J0YW50IGFzIHRoZXNlIGZydWl0IGFyZSAoYXBwbGUgaXMgcG93ZXJmdWw7IG15IHVuY2xlIGV4cGxhaW5lZCB0aGF0IHRvIG1lIG1hbnksIG1hbnkgeWVhcnMgYWdvLCB0aGUgcG93ZXIgYW5kIHRoYXQgd2FzIDM1IHllYXJzIGFnbzsgaGUgd291bGQgZXhwbGFpbiB0aGUgcG93ZXIgb2Ygd2hhdCBnb2luZyB0byBoYXBwZW4gYW5kIGhlIHdhcyByaWdodCB3aG8gd291bGQgaGF2ZSB0aG91Z2h0PyksIGJ1dCB3aGVuIHlvdSBsb29rIGF0IHdoYXQgZ29pbmcgb24gd2l0aCB0aGUgZm91ciB2ZWdldGFibGVzIG5vdyBpdCB1c2VkIHRvIGJlIHRocmVlLCBub3cgaXQncyBmb3VyIGJ1dCB3aGVuIGl0IHdhcyB0aHJlZSBhbmQgZXZlbiBub3csIEkgd291bGQgaGF2ZSBzYWlkIGl0IGFsbCBpbiB0aGUgbWVzc2VuZ2VyOyBmZWxsYXMsIGFuZCBpdCBpcyBmZWxsYXMgYmVjYXVzZSwgeW91IGtub3csIHRoZXkgZG9uIHRoZXkgaGF2ZW4ndCBmaWd1cmVkIHRoYXQgdGhlIHdvbWVuIGFyZSBzbWFydGVyIHJpZ2h0IG5vdyB0aGFuIHRoZSBtZW4sIHNvLCB5b3Uga25vdywgaXQncyBnb25uYSB0YWtlIHRoZW0gYWJvdXQgYW5vdGhlciAxNTAgeWVhcnMgYnV0IHRoZSBQaW5lYXBwbGVzIGFyZSBncmVhdCBuZWdvdGlhdG9ycywgdGhlIE1hbmdvZXMgYXJlIGdyZWF0IG5lZ290aWF0b3JzLCBzbywgYW5kIHRoZXksIHRoZXkganVzdCBraWxsZWQsIHRoZXkganVzdCBraWxsZWQgdXMuClRoZSB3b3JkIG15b2Zhc2NpYSBpcyBkZXJpdmVkIGZyb20gdGhlIExhdGluIHdvcmQgIm15bywiIG1lYW5pbmcgbXVzY2xlLCBhbmQgImZhc2NpYSwiIGZvciBiYW5kLiAKQXJ0cyBEaXN0cmljdCBpcyBtb3N0bHkgYnVzaW5lc3Nlcy4gVGhlcmUgYXJlIHNvbWUgaG90ZWxzIGFsb25nIExWIEJsdmQgdGhhdCBhcmUgY2xvc2UgdG8gdGhlIEFydHMgRGlzdHJpY3QgdGhhdCBtaWdodCB3b3JrIGZvciB5b3UsIGJ1dCBJIGRvbiB0aGluayB0aGV5IGhhdmUga2l0Y2hlbnMva2l0Y2hlbmV0dGVzLiBNeSBmaXJzdCByZWNvbW1lbmRhdGlvbiBpcyB0aGUgVGh1bmRlcmJpcmQsIGFuZCBpdCBwYWlyZWQgd2l0aCB0aGUgTW90ZWwgNiByaWdodCBuZXh0IGRvb3IgSUlSQy4gCiA2IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29UaGVyZSBpcyBwcmVjZWRlbnQgZm9yIGNoaWxkcmVuIG9mIGEgVGFyZyBhbmQgbm9uIFRhcmcgdW5pb24gaGF2aW5nIGEgbWl4IG9mIHRyYWl0cy4gClRoZSBmaWxtIGhhcyBhIHNuYXBweSwgd2l0dHkgdG9uZSB0aGF0IHByb3BlbHMgdXMgaW50byB0aGUgc3RvcnksIHdpdGggbW9tZW50cyBvZiBzYXRpcmljYWwgY29tZWR5LCBlYXJ0aHkgaHVtb3VyIGFuZCBzb21lIGV4aGlsYXJhdGluZywgaW52ZW50aXZlbHkgc3RhZ2VkIGFjdGlvbi4gCkl0J3Mgbm9ybWFsIHRvIGV4cGVyaWVuY2Ugc29tZSBkaXNjb21mb3J0IGluIHlvdXIgaGFuZCB3aGVuIHlvdSBmaXJzdCBzdGFydCB0byBzaHVmZmxlIHNpbmNlIHlvdSBtYXkgYmUgdXNpbmcgbXVzY2xlcyBpbiB3YXlzIHlvdSdyZSBub3QgdXNlZCB0by5bOF0gSG93ZXZlciwgaWYgeW91IGNvbnRpbnVlIHRvIGZlZWwgdW5jb21mb3J0YWJsZSBhZnRlciBwcmFjdGljaW5nLCBjb25zaWRlciBtb2RpZnlpbmcgeW91ciBmaW5nZXIgcGxhY2VtZW50LgpUaGUgZGV2ZWxvcGluZyBwaWN0dXJlIGlzIGFwdGx5IGRlc2NyaWJlZCBpbiBhIGJyb2NodXJlIGZvciBpbnZlc3RvcnMgcHJvZHVjZWQgYnkgYmFua2luZyBnaWFudCBDaXRpZ3JvdXAuIApBbHNvLCBpZiB5b3UgcGljayA0OSBjYXJkcyB3aXRob3V0IHJlcGxhY2VtZW50LCB0aGUgcHJvYmFiaWxpdHkgaXMgMS4gCk5vIGRhdGEgaXMgc2hhcmVkIHdpdGggRmFjZWJvb2sgdW5sZXNzIHlvdSBlbmdhZ2Ugd2l0aCB0aGlzIGZlYXR1cmUuIApBbm5hIFNvdWJyeSBkcm93bmVkIG91dCBieSAnTmF6aScgdGF1bnRzIGFuZCBhYnVzZSBmcm9tIHBybyBCcmV4aXQgcHJvdGVzdGVycyBkdXJpbmcgQkJDIGFuZCBTa3kgaW50ZXJ2aWV3cy4KVGhlbiB0aGUgaW5qdXJlZCBwZXJzb24gaGFzIHRvIGZpbGUgYSBkaXNwdXRlLiBBcml6b25hIGlzIGhlYXZpbHkgYW50aSBlbXBsb3llZS4gCk1hcnkncyBDaHVyY2ggUGF2aWxpb24gaW4gQmFybmVzdmlsbGUsIG5pbmUgbWlsZXMgZnJvbSB0aGUgRnJlZCAgQ29udGludWVkIG9uIFBhZ2UgQSA0KSAiSXMgaXQgbmVlZGVkPyBZZXMuIENhbiBpdCBiZSBkb2N1ICBtZW50ZWQ/IE5vLiAKSWwgbmUgZmF1dCBwYXMgaHNpdGVyICBhbm5vdGVyIHNvbiBleGVtcGxhaXJlLi4gCkknbSBnbGFkIHRvIHNlZSB0aGF0IHlvdSBoYXZlIGFuIGFwcG9pbnRtZW50IGNvbWluZyB1cC4gSSBzdWdnZXN0IGZvbGxvd2luZyB0aHJvdWdoIHdpdGggd2hhdGV2ZXIgdGhleSBzdWdnZXN0LCBhbmQgYWxzbyBzZWUgaWYgeW91IGNhbiBzZWUgYSB0aGVyYXBpc3QgYXMgd2VsbC4gVGFsa2luZyBhYm91dCBzdHVmZiBjYW4gcmVhbGx5IGhlbHAsIGV2ZW4gaWYgaXQgc2VlbXMgc3R1cGlkLiAKSXQgd2FzbiBkZWFkbHkgaG90IGluIHRoZSBjYXIgYnV0IGRlZmluaXRlbHkgaGFyZCB0byBicmVhdGhlIGFuZCB1bmNvbWZvcnRhYmxlLiAKRElZIENha2UgaW4gYSBKYXIgRmF2b3JzIGFsd2F5cyBwb3B1bGFyLgpQYXNpdXRsaWdlTGV2ZWwgMyBNaWxpdGFyeSBWZXN0ClRoZSBleHBlcnQncyBvcGluaW9uIEpvaG4gQ2hvLCBwYXJ0bmVyIGluIFRyYW5zYWN0aW9uIFNlcnZpY2VzIGF0IEtQTUcgRW50ZXJwcmlzZSBsaWtlcyB0aGUgbW9kZWwgYW5kIHRoZSBkZWFsLiBhbiBvbiB0cmVuZCBuaWNoZS4gVGhlIGFnaW5nIGRlbW9ncmFwaGljIHdpbGwgaGVscCBkcml2ZSBkZW1hbmQgYW5kIGV2ZW4gaWYgeW91IGVtcGxveWVkIHdpdGggYSBwbGFuLCBtYXNzYWdlIHRoZXJhcHkgb2Z0ZW4gaXNuIGZ1bGx5IGNvdmVyZWQgYW5kIHRoZXNlIHByaWNlcyBhcmUgdmVyeSBhdHRyYWN0aXZlLiBJIGxpa2UgdGhhdCBzaGUgdGFyZ2V0aW5nIHNtYWxsIHRvd25zIGFuZCBzdWJ1cmJzIGFuZCBsb2NhdGluZyBpbiBzdHJpcCBwbGF6YXMuIFRoZSBsZWFzZSByYXRlcyBhcmUgbW9yZSBhdHRyYWN0aXZlIGFuZCBzaGUgY2xvc2UgdG8gaGVyIGN1c3RvbWVyIGJhc2UuIFRoaXMgaXMgdGhlIHR5cGUgb2Ygc2VydmljZSB0aGF0IHdpbGwgdHJhbnNsYXRlIGludG8gYW55IGdlb2dyYXBoaWMgYXJlYSBhbmQgdGhlIGZyYW5jaGlzaW5nIG1vZGVsIGlzIGEgZ29vZCBpZGVhLiBmcmFuY2hpc2luZyBhIGJ1c2luZXNzIG1vZGVsIHN1Y2Nlc3NmdWxseSByZWFsbHkgY29tZXMgZG93biB0byBzeXN0ZW1zLCBzeXN0ZW1zLCBzeXN0ZW1zLCBzYXlzIEdhcnkgUHJlbmV2b3N0LCBwcmVzaWRlbnQgb2YgRnJhbk5ldCBvZiBTb3V0aGVybiBPbnRhcmlvLiB2YXN0IG1ham9yaXR5IG9mIGZyYW5jaGlzZSBzeXN0ZW1zIGZhaWwgYmVjYXVzZSB0aGV5IGRpZG4gYnVpbGQgdGhlIGNvcnJlY3QgaW5mcmFzdHJ1Y3R1cmUgdG8gc3VwcG9ydCB0aGVpciBncm93dGguIEl0IG9uZSB0aGluZyB0byBoYXZlIGEgbG9jYXRpb24gdGhhdCBnb2luZyB3ZWxsIGJ1dCB0byBiZSBhYmxlIHRvIGR1cGxpY2F0ZSBpdCBhZ2FpbiBhbmQgYWdhaW4geW91IG5lZWQgdG8gZ3JvdyB0aGUgc3VwcG9ydCBpbiB0ZXJtcyBvZiBwZW9wbGUsIHBvaW50IG9mIHNhbGUsIElUIGFuZCBtYXJrZXRpbmcuIEl0IGNhbiBiZSBhIG15b3BpYyB2aWV3LiBBIGxvdCBvZiBmcmFuY2hpc29ycyBncm93IHRoZWlyIHN0YWZmIGFmdGVyIHRoZXkgaGF2ZSBhIGNlcnRhaW4gbnVtYmVyIG9mIGZyYW5jaGlzZWVzLiBCdXQgbXkgcG9zaXRpb24gaXMgaGlyZSBzdGFmZiwgYnVpbGQgY2FwYWNpdHksIHNlcnZpY2UgeW91ciBmcmFuY2hpc2VlcyBzbyB0aGF0IHRoZXkgY2FuIGdldCB1cCBhbmQgcnVubmluZyBmYXN0IGFuZCBlZmZlY3RpdmVseS4KV2h5IHdvdWxkIHJhY2lzdHMgYW5kIHNlZ3JlZ2F0aW9uaXN0IERlbW9jcmF0aWNzIG5vdyBiZWNvbWUgUmVwdWJsaWNhbnM/LiAKRXZlcnkgb25lIG93aW5nIGFsbGVnaWFuY2UgdG8gSGVyIE1hamVzdHkgdGhlIFF1ZWVuIGluIHJpZ2h0IG9mIE5ldyBaZWFsYW5kIGNvbW1pdHMgdHJlYXNvbiB3aG8sIHdpdGhpbiBvciBvdXRzaWRlIE5ldyBaZWFsYW5kLCAoYSkgS2lsbHMgb3Igd291bmRzIG9yIGRvZXMgZ3JpZXZvdXMgYm9kaWx5IGhhcm0gdG8gSGVyIE1hamVzdHkgdGhlIFF1ZWVuLCBvciBpbXByaXNvbnMgb3IgcmVzdHJhaW5zIGhlcjsgb3IKQ3JhZnRpbmcgZm9yIHRoZSBsYXRlc3QgZXZlbnQgd2FzIGhvcnJlbmRvdXMsIElESyBob3cgdGhlIGZ1Y2sgYW55b25lIHdpdGggYSBicmFpbiBjYW4gZ2l2ZSBpdCBhIHBhc3MuLiAKVWx0aW1hdGVseSwgSSBjbGFzc2lmaWVkIHRoaXMgcHJvZ3Jlc3MgYXMgYSB3aW4sIGV2ZW4gdGhvdWdoIGl0IGlzIHN0aWxsIHJlYWxseSBoYXJkIG9uIG1lIHNsZWVwIHdpc2UuIApPUDogRm9yIHRoZSBzZXJ2aWNlcyBwcm92aWRlZCwgSSBhbSBhbHJlYWR5IG9mZmVyaW5nIGEgbXVjaCwgbXVjaCBsb3dlciByYXRlIHRoYW4gYW55IG90aGVyIHByb2Zlc3Npb25hbCBob3VzZWNsZWFuZXIgaW4gdGhpcyBhcmVhLiBJIGhhdmUgb3ZlciA3IHllYXJzIHByb2Zlc3Npb25hbGx5IGhvdXNlY2xlYW5pbmcgZm9yIFtyZWRhY3RlZF0uIE1haWRzIGhlcmUgaW4gW3JlZGFjdGVkXSBhbmQgSSBoYXZlIHRvbnMgb2YgcmVmZXJlbmNlcyB0aGF0IEkgY2FuIHNoYXJlIHdpdGggeW91LgpDcml0aWNzIGFsc28gc3VnZ2VzdGVkIHRoYXQgdGhlIHN1Y2Nlc3Mgb2YgaGlzIGRpZXQgbWF5IGJlIHJlbGF0ZWQgdG8gdGhlIG92ZXJ3aGVsbWluZyBhdHRlbnRpb24gcGFyZW50cyBnYXZlIHRvIHRoZWlyIGNoaWxkcmVuIGJ5IGZvY3VzaW5nIG9uIGRpZXRhcnkgY29tcGxpYW5jZSwgcmF0aGVyIHRoYW4gdG8gdGhlIHNwZWNpZmljIGVmZmVjdHMgb2YgdGhlIGRpZXQuCkJlbHQgYnVja2xlIHJ1bGU6IERvbiBoYXZlIHlvdXIgY2VudGVyIG1hc3MgZXh0ZW5kIHBhc3QgdGhlIHNpZGUgcmFpbHMuClRoZSBSZWd1bGF0aW9ucyBhcmUgY29ob3J0IHNwZWNpZmljIGFuZCBwZXJ0YWluIHRvIGFsbCBzdHVkZW50cyBjb21tZW5jaW5nIHRoZWlyIHN0dWRpZXMgaW4gMjAxNyAxOC4gQ29kZXMgb2YgUHJhY3RpY2UsIHBvbGljaWVzIGFuZCBndWlkYW5jZSBhcmUgc3VwcGxlbWVudGFyeSB0byBSZWd1bGF0aW9ucyBhbmQgc2V0IG91dCB0aGUgcHJvY2VkdXJlcyB0byBiZSBmb2xsb3dlZCBpbiBzcGVjaWZpYyBhcmVhcy4gCk1pc3Npb25hcnkgcG9zaXRpb24gKG1hbiBvbiB0b3AsIHdvbWFuIG9uIGJvdHRvbSkgYWxsb3dzIHRoZSB3b21hbiB0byBmdWxseSByZWxheCBoZXIgYW51cywgbWFraW5nIHBlbmV0cmF0aW9uIG11Y2ggZWFzaWVyLiAKQ2F1c2UgbW9zdCBvZiB0aGVzZSBndXlzIGFyZW4gYWN0dWFsbHkgd29ydGh5IG9mIHBsYXlpbmcsIG9yIGFscmVhZHkgcGxheSB0b28gbGFyZ2Ugb2YgYSByb2xlLiAKRXNwZWNpYWxseSBOb2csIHdobyBnb2VzIGZyb20gZmVyZW5naSBjaGlsZCB0byBhIGNvbXBldGVudCBzdGFyIGZsZWV0IG9mZmljZXIuIEl0IGFsc28gaGFzIGEgZmFudGFzdGljIE1yLiBHYXJhayBhbmQgUXVhcmssIGFuZCBvbmUgb2YgdGhlIGJlc3Qgc3RhciB0cmVrIHZpbGxhaW5zIGluIER1a2F0LiAKSSBtZWFuLCB5b3UncmUgZnJlZSB0byBkbyB3aGF0ZXZlciB5b3Ugd2FudCwgdGhhdCdzIHlvdXIgcmlnaHQuIEJ1dCBHb2QgZm9yYmlkLCBpbWFnaW5lIHlvdSBkaWUgdG9tb3Jyb3cgYW5kIHNvbWVvbmUgaGFzIHRvIGdvIHRocm91Z2ggYWxsIG9mIHlvdXIgcG9zc2Vzc2lvbnMgYXMgcGFydCBvZiB0aGUgZXN0YXRlLiAKTWluZSBzdWZmZXJlZCBmcm9tIGRlcHJlc3Npb24sIGFueGlldHksIHB0c2QgYW5kIHdhcyBhZGRpY3RlZCB0byBEZXhlZHJpbmUuIEhlIGFsc28gdXNlZCB0aGlzIGFzIGEgY3J1dGNoIGFuZCBpdCBiZWdhbiB0byBtYWtlIGhpbSBjb250cm9sbGluZy4gSGUgYmVnYW4gYmVpbmcgdW5zdXBwb3J0aXZlIGFuZCB1c2VkIG15IHN1Y2Nlc3NlcyB0byBjdXQgbWUgZG93biBhcyBpdCB0b29rIG1lIGF3YXkgZnJvbSB0aGUgaG9tZSBha2EgY2FyZWdpdmluZy4gCkFzayB0aGUgaW50ZXJ2aWV3ZXIgYWJvdXQgdGhlaXIgcGVyc29uYWwgbGlmZSwgImhvdydzIHRoZSBmYW1pbHkgbGlmZSwgYXJlIHlvdSBhYmxlIHRvIHNwZW5kIGEgYnVuY2ggb2YgdGltZSB3aXRoIGZhbWlseSBvciBhcmUgeW91IGFsd2F5cyB3b3JraW5nIiBvciAiV2hhdCdzIHlvdXIgZmF2b3JpdGUgcGFydCBhYm91dCB3b3JraW5nIGhlcmUiClNvIHdoeSBub3QgYnJpbmcgYSBmZXcgaW50byB0aGUgYnVpbGRpbmcuLiAKSSBlYXQgbW9yZSBmaWJyZSBhbmQgcHJvdGVpbiwgYW5kIHRyaWVkIHRvIGN1dCBwcm9jZXNzZWQgc3VnYXIgb3V0IGFzIG11Y2ggYXMgcG9zc2libGUuIFNvIG5vIHNvZGEgb3IgY2FuZHkuIApNZWFud2hpbGUsIHJlYWwgdW5lbXBsb3ltZW50IGlzIG5lYXJseSBkb3VibGUgdGhlIG9mZmljaWFsIDEwJSB1bmVtcGxveW1lbnQgcmF0ZSBhbmQgYXZlcmFnZSBBbWVyaWNhbnMgY29udGludWUgdG8gc3RydWdnbGUgd2l0aCBwYXkgY3V0cyBhbmQgam9iIGxvc3NlcyBhcyBXYWxsIFN0cmVldCBmYSB0Y2F0IGJhbmtlcnMgY29udGludWUgdG8gc3F1ZWV6ZSBtb3JlIGFuZCBtb3JlIHByb2ZpdCBvdXQgb2YgdXMuIApJIGxvb2sgYXQgdGhlIHRlbGV2aXNpb24uIFdoYXQgdGhlIGhlbGw/IFdhdGNoaW5nIHNvbWVvbmUgZWxzZSdzIHByb2JsZW1zIGlzIGEgZ29vZCBkaXN0cmFjdGlvbi4gSSBkZWNpZGUgdG8gd2F0Y2ggdGhlIHRlbGV2aXNpb24uIFRoZXkgYXJlIHRhbGtpbmcgYWJvdXQgY291cGxlcyBicmVha2luZyB1cC4gSSBzdGFydCBoYXZpbmcgdGhvdWdodHMgYW5kIHRlYXJzIHJ1biBkb3duIG15IGNoZWVrcy4KTWF0ZXMgZW5kIHVwIGluIFNwYWluIGFmdGVyIGRydW5rIE1hY2NhJ3MgcnVuJDQwayBob3VzZSBkZXBvc2l0ICdzbyBlYXN5JyB0byBzYXZlU2V4IGFjdCBiZWZvcmUgZGFkIGtpbGxlZCBlbnRpcmUgZmFtaWx5VG91cmlzdHMgZmluZWQgJDQwMDAgZm9yIHdlYXJpbmcgdGhvbmdzU2ltcGxlIHBpbmVhcHBsZSB0cmljayB5b3UgbmVlZCB0byBrbm93VmlldyBOVCBOZXdzCllvdSByaWdodCwgSSB3ZW50IGEgYml0IHRvbyBmYXIgdGhlcmUuIEJ1dCB0aGVuIGFnYWluLCBzcGVjaWZpY2FsbHkgaW5zaWRlIHJlZGRpdCBjb21tdW5pdHksIHlvdSBuZXZlciBoYWQgYSBzdWJyZWRkaXQgYXMgaGF0ZWZ1bCBhcyAvci9mYXRwZW9wbGVoYXRlLCBtYXliZSBleGNlcHQgZm9yIC9yL2Nvb250b3duLCB3aGlsZSBpZiB5b3UgY2hhc3Rpc2UgYSBwZXJzb24gZm9yIHNtb2tpbmcgYSBwYWNrIGRheSwgeW91IGVuZCB1cCBiZWluZyBoZWF2aWx5IGRvd252b3RlZCAocmlnaHRmdWxseSBzbykgZm9yIHRyeWluZyB0byBwb2xpY2UgYW5vdGhlciBwZXJzb24gZGVjaXNpb25zLiAvci9qdXN0bmVja2JlYXJkdGhpbmdzIHVzZXJzIHByb2JhYmx5IHNwZW5kIGFzIG11Y2ggdGltZSBvbiB0aGVpciBhc3NlcyBhcyB0aGUgcGVvcGxlIHRoZXkgbW9jayAoYWdhaW4sIG5vdCBhcyB2aW9sZW50bHkgYXMgZmF0IHBlb3BsZSBhcmUgbW9ja2VkKS4gClRoYXQgZmVlbHMgbGlrZSBhIGxvZ2ljYWwgcG9zaXRpb24sIGJ1dCB0byBkcmF3IGEgcGFyYWxsZWwgd2l0aCBBbGV4IFByaXRjaGFyZCdzIGRlcGFydHVyZSBpbiB0aGUgSmFudWFyeSAyMDE4IHdpbmRvdywgaXQgYWxzbyBvdmVybG9va3MgdGhlIHdpc2hlcyBvZiBhIHBsYXllciBhbmQgaGlzIGZhbWlseS4KU2VlbiBtb3J0Z2FnZSByYXRlcyBpbmNoIHVwIHRoaXMgeWVhci4gClp1IGFsbGVyZXJzdCBzb2xsdGVuIHNpZSBzaWNoIGVpbmVuIHBhc3NlbmRlbiBQb2tlcnJhdW0gZnIgT25saW5lIFBva2VyIGF1c3N1Y2hlbiwgaGllciBnaWJ0IGVzIHZlcnNjaGllZGVuZW4gT25saW5lIENhc2lub3MuIEVzIGJpZXRlbiBhdWNoIHZpZWxlIEZyZWlzcGllbGUgYW4uCkEgY2FwaXRhbCBleGN1c2Ugd2FzIHRodXMgYWZmb3JkZWQgdG8gcGVybWl0IHRoZSBNb2hhbW1lZGFuIGhvcnNlbWVuIHRvIHJldHVybiB0byB0aGVpciBob21lcyB0byBjZWxlYnJhdGUsIHdoaWxlIHdlIENocmlzdGlhbnMsIHVuZW1iYXJyYXNzZWQgYnkgdGhlaXIgcHJlc2VuY2UgYW5kIGFpZGVkIGJ5IHRoZSBmYWl0aGZ1bCBTaWtocywgbWlnaHQgcGVyZm9ybSBhIGNlcmVtb25pYWwgc2FjcmlmaWNlIG9mIGEgZGlmZmVyZW50IG5hdHVyZSB1cG9uIHRoZWlyIGJyZXRocmVuLi4gCkkgZG9uZSBteSByZXNlYXJjaCBhbmQga25vdyBhbGwgdGhlIGdyZWF0IHRoaW5ncyBTTEMgaGFzIHRvIG9mZmVyLiBJIHdvcmsgaW4gdGVjaCwgc28gdGhlIGVtcGxveW1lbnQgbGFuZHNjYXBlIGlzIG9mIGNvdXJzZSBhIGJpZyBwYXJ0IG9mIHRoZSBhcHBlYWwuIFRoZSBjb3N0IG9mIGxpdmluZywgbGVzcyB0cmFmZmljLCBhbmQgc2Vhc29uYWwgd2VhdGhlciBpbnN0ZWFkIG9mIGFuIGVwaWMgYnVybmluZyBzdW1tZXIgYXJlIGFsbCBmYWN0b3JzLCB0b28uIApQa29ybzUwOSAgMjAzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJIGFzayBleGFjdGx5IHdoYXQgdGhleSBtZWFuIHdoZW4gSSB0cnlpbmcgdG8gY28gb3JkaW5hdGUgYmVjYXVzZSBJIHdhbnQgdGhpbmdzIHRvIGJlIGFjY3VyYXRlIGFuZCBJIG5vdCBhbiBlbmdpbmVlciwgaG93ZXZlciwgSSBkb24gYXBwcmVjaWF0ZSBkdW0gZHVtIGFuYWxvZ2llcy4gSSBleGVyY2lzZSB0aGUgc2FtZSBwYXRpZW5jZSB3aXRoIHRoZXNlIHRpcmVzb21lIGFuYWxvZ2llcyBhcyBJIGRvIHdoZW4gZXhwbGFpbiBteSB3b3JrIHRvIHRob3NlIG5vdCBpbiB0aGUgZmllbGQgYmVjYXVzZSBjb21tdW5pY2F0aW5nIHdlbGwgaXMgYmV0dGVyIHRoYW4gYmVpbmcgcmlnaHQgYWxsIHRoZSB0aW1lLiBGaXJzdCBzdGVwIGlzIHRvIGFzayB3aGF0IHRoZXkgYXJlIGZhbWlsaWFyIHdpdGggdG8gZ2F1Z2UgaG93IG11Y2ggdGhleSBjYW4gZm9sbG93IHlvdXIgc3Vic2VxdWVudCBleHBsYW5hdGlvbnMuLiAKSGF2aW5nIHdvcmtlZCBpbiBib3RoIGhlYWx0aGNhcmUgYW5kIGluc3VyYW5jZSwgSSBjYW4gdGVsbCB5b3UgZm9yIGNlcnRhaW4gdGhhdCBkb2N0b3JzIGFyZW4gcmVmZXJyaW5nIHlvdSB0byBvdXQgb2YgbmV0d29yayBzcGVjaWFsaXN0cyBvbiBhIHdoaW0gdG8gZnVjayB5b3Ugb3Zlci4gVGhleSByZWZlcnJpbmcgeW91IHRvIGEgc3BlY2lhbGlzdCB0byBjb3ZlciB0aGVpciBhc3MuIApSZXNlYXJjaGVycyBpbmRpY2F0ZSB0aGF0IHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBDb1ExMCBpcyBhaW1lZCBub3Qgb25seSBhdCBzeW1wdG9tYXRpYyByZWxpZWYsIGJ1dCByYXRoZXIgYWRkcmVzc2VzIHRoZSB1bmRlcmx5aW5nIGJpb2NoZW1pY2FsIGRpc29yZGVycyBhc3NvY2lhdGVkIHdpdGggdGhlIGRldmVsb3BtZW50IG9mIHRoZSBkaXNlYXNlLjEKTHRkLiBXaXRoIHRoZWlyIDE5OTAgaW50cm9kdWN0aW9uIG9mIHRoZSBJbnNpZ2h0LCBmb2xsb3dlZCBsYXN0IHllYXIgYnkgdGhlIENpdmljIEh5YnJpZC4gClRoZXJlIGlzIG5vIGRlZmVuc2UgZm9yIHRoZSByZWxpZ2lvbi4gCkF0IGEgcGVubnkgc2xvdCwgeW91IGNvdWxkIHNwZW5kIDEgb24gdGhlIGNlbnRlciBsaW5lIGFuZCB0YWtlIGEgc3Bpbi4gCk5vIG9uZSB3YW50cyBwZW9wbGUgd2l0aCBwcmVleGlzdGluZyBjb25kaXRpb25zIHRvIGRpZS4gRnVsbCBzdG9wLiBEaXNhZ3JlZWluZyB3aXRoIHdoZXRoZXIgb3Igbm90IGl0cyB0aGUgZ292ZXJubWVudHMgam9iIHRvIG1pY3JvbWFuYWdlIGhlYWx0aCBpbnN1cmFuY2UgY29tcGFuaWVzIGRvZXNudCBtYWtlIHlvdSBhIGJhZCBwZXJzb24uCkl0IGFsc28gdW5kZXJtaW5lZCB0aGUgInNlcmlvdXMiIHBhcnQgb2YgdGhlc2UgcmVhbGl0eSBUViBzaG93cyB3aGVyZSB0cnVlIGxvdmUgZW5kcyBpbiBhIHdoaXRlIHdlZGRpbmcuIE1zLiBUZXF1aWxhIGlzIGEgVmlldG5hbWVzZSBBbWVyaWNhbiBxdWVlciB3b21hbiB3aG9zZSBwb3RlbnRpYWwgbG92ZXJzIHdlcmUgb2Z0ZW4gZWl0aGVyIHF1ZWVyIGFuZCBvciBvZiBjb2xvci4gCkFuIG9wZW4gYWNjb3VudCB3aGVyZSB0aGUgcGF5bWVudHMgZm9yIHNlcnZpY2VzIHJlbmRlcmVkIGFyZSByZW1vdmVkIHRoaXMgd2F5IGNhbiBjYXVzZSB0aGUgY29uc3VtZXIgdG8gbG9zZSBhY2Nlc3MgdG8gdGhhdCBzZXJ2aWNlIGFzIHRoZSBidXNpbmVzcyByZWZ1c2VzIHRvIHdvcmsgd2l0aCB0aGVtIHVudGlsIHBheW1lbnQgaXMgbWFkZSwgZGVidCBiZWluZyBzZW50IHRvIGEgY29sbGVjdGlvbiBhZ2VuY3ksIG9yIGEgbGF3c3VpdC4gCkxhc3RseSwgbGlzdGVuIHRvIHlvdXIgYm9keS4gWW91IGFyZSBhIHJ1bm5lci4gRXZlcnlvbmUgY2FuIGdpdmUgeW91IGFkdmljZSBhbmQgeW91IGNhbiByZWFkIGFsbCB5b3Ugd2FudC4gCk1hbnkgcGVvcGxlIGRvIG5vdCBldmVuIHRoaW5rIGFib3V0IHdoYXQgYmFsbCB0byBidXksIGJlY2F1c2UgdGhleSBkbyBub3QgcmVhbGl6ZSB0aGVyZSBhcmUgZGlmZmVyZW5jZXMuIEV4ZXJjaXNlIGJhbGxzIGNvbWUgaW4gZGlmZmVyZW50IHNpemVzLCBsZXZlbHMgb2YgZHVyYWJpbGl0eSwgc3VyZmFjZXMgYW5kIGV2ZW4gd2l0aCB2YXJ5aW5nIGFjY2Vzc29yaWVzLiBIZXJlIGFyZSB0aGUgaW1wb3J0YW50IHRoaW5ncyB0byBjb25zaWRlcjoKVXBsYXRvdmEgemtsYWRuIGJlenBlbm9zdG4gb3BhdHJlbmlhIGEgemRyYXYgcm96dW0uIE5vc2kgb2NocmFubiBrb2VuIHJ1a2F2aWNlIGEgaHJ1YiBwb2Rya291IHRvcG5reS4gUHJpIGRldGVrY2lpIHN0ZSBiZW5lIGtyb2sgbmEgcm96Yml0IHNrbG8gYWxlYm8gdnlrb3BhIGhyZHphdiBrb3Z5LiBVdmVkb210ZSBzaSwgZSBhayB2YWUgdG9wbmt5IG1haiBrb3ZvdiB6aXBzeSBhbGVibyBrdWZyZSwgbWV0ZSBvbXlsb20gdnl6ZHZpaG4gc2lnbmwgeiB2bGFzdG5jaCBzdHAgYSBuaWUgbmEgemVtLgpUaGUgYWVzdGhldGljIGFuZCBhcnQgc3R5bGUgaGFzIHJlYWxseSBnb25lIHRvIHNoaXQuIEV2ZXJ5dGhpbmcgZmVlbHMgc28gYnJpZ2h0IGFuZCBmbGFzaHkuIFRoZSBpbnNhbmUgYW1vdW50IG9mIGNvc21ldGljcyBhbmQganVzdCBob3cgdGFtZSBldmVyeXRoaW5nIGlzIG1ha2VzIG1lIGZlZWwgbGlrZSBpIHBsYXlpbmcgYXQgYSBwYWludGJhbGwgYXJlbmEgYWdhaW5zdCBhIGdyb3VwIG9mIGtpZHMuIApBcyBmb3IgQ3JvY3MgYmVpbmcgcGl0YnVsbCB1Z2x5ICAgd2hpbGUgbWVuIHdpbGwgbW9zdCBwcm9iYWJseSBzaHVuIHRoZW0gYW5kIGNvbnRpbnVlIHRvIHdlYXIgY29tZm9ydGFibGUgc2hvZXMgYW5kIHRyYWluZXJzLCB3b21lbiB3aG8gZm9sbG93IGZhc2hpb24gYWR2aWNlIGFyZSBrbm93biB0byBvcHQgZm9yIHBhaW5mdWwgaGlnaCBoZWVscyBhbmQgYW5vcmV4aWMgc2l6ZSB6ZXJvIGRpZXRzIHRvIGdvIHdpdGggdGhlIERvbGNlIGFuZCBHYWJhbm5hIGNvbGxlY3Rpb24gd2l0aG91dCB3aGljaCB0aGV5IGNhbm5vdCBzdHJheSBmcm9tIHRoZWlyIGRvb3IuIFRvIHF1b3RlIG9uZSBSZXNlYXJjaGVyOiB0aGUgaGVsbCB3aXRoIHN0eWxlICAgaXQgb25seSBnaXZlcyB5b3UgYmxpc3RlcnMuLiAKRW5vdWdoIGZvciBub3cuIEkgc3VyZSBvdGhlcnMgY2FuIGFkZCBtb3JlLgpJbnZlc3RpZ2F0b3JzIGdhdmUgZmV3IGRldGFpbHMgb24gdGhlIHdlYXBvbnMgdXNlZCBidXQgcmVwb3J0ZWQgb3ZlciB0aGUgcmFkaW8gdGhhdCB0aGV5IHdlcmUgZmFjZWQgd2l0aCBmdWxseSBhdXRvbWF0aWMgZmlyZS4KQnkgdGhlIGVhcmx5IDE5OTBzIFVsbGlvdHQgd2FzIHdpbm5pbmcgdG9vIG11Y2ggbW9uZXkgYXQgcG9rZXIgZm9yIEh1bGwgbG9jYWxzIHRvIHdhbnQgdG8gcGxheSBoaW0sIHNvIGhlIHN0YXJ0ZWQgdG91cmluZyB0aGUgZ2FtaW5nIHRhYmxlcyBvZiBMZWVkcywgQnJhZGZvcmQsIEJpcm1pbmdoYW0gYW5kIExvbmRvbi4gClRoaXMgd2FzIHRoZSBzdG9yeSBJIHdhcyByZWZlcnJpbmcgdG8gb2ZmIGhhbmQ6SSB3YW50IHRvIGJlIGNsZWFyIHRoYXQgSSBhbSB3ZWxsIGF3YXJlIG9mIHRoZSBoaXN0b3J5IG9mIG5hdGl2ZSBjaGlsZHJlbiBiZWluZyBzdG9sZW4gYW5kIHdoeSB0aGlzIGlzIHN1Y2ggYSBob3QgdG9waWMuIEkgYW0gbm8gd2F5IHRyeWluZyB0byBmZWFyIG1vbmdlciBvciBzaWRlIGVpdGhlciB3YXkuIApJdCBhbHNvIGNvbnRyaWJ1dGVzIHRvIFBNUywgdXRlcmluZSBmaWJyb2lkLCBhbmQgYnJlYXN0IGZpYnJvaWQuTGVha3kgR3V0IFN5bmRyb21lIGlzIG9mdGVuIHRoZSByZWFsIGJhc2lzIGZvciBjaHJvbmljIGZhdGlndWUgc3luZHJvbWUgYW5kIHBlZGlhdHJpYyBpbW11bmUgZGVmaWNpZW5jaWVzLkxlYWt5IEd1dCBTeW5kcm9tZSBpcyByZWFjaGluZyBlcGlkZW1pYyBwcm9wb3J0aW9ucyB3aXRoaW4gdGhlIHBvcHVsYXRpb24uIApQMk4gM0wxKSBvbiBUdWVzZGF5LCBOb3YuIApJbnN0ZWFkIG9mIHRoZSBNYXRyaXggdGFraW5nIG92ZXIgb3VyIGxpdmVzLCB3ZSdyZSB2b2x1bnRhcmlseSBqb2luaW5nIGl0IGJlY2F1c2Ugd2UgbGlrZSBBbWF6b24gYW5kIEFwcGxlIGFuZCBHb29nbGUgYW5kIEZhY2Vib29rLiBMb29rIGF0IGhvdyBtdWNoIG9mIG91ciBpbmZvcm1hdGlvbiB3ZSd2ZSBhbHJlYWR5IGdpdmVuIHRoZXNlIGNvbXBhbmllczogSWYgdGhlIENJQSB0cmFja2VkIHVzIHNvIGNsb3NlbHkgYXMgdG8gb2ZmZXIgdXMgYSBkZWFsIG9uIGZsaWdodHMgdG8gT3JsYW5kbyAxMCBtaW51dGVzIGFmdGVyIHdlIGNoZWNrZWQgb3V0IHRoZSBEaXNuZXkgV29ybGQgV2ViIHNpdGUsIHdlJ2QgcGFuaWMuIApUaGlzIGFsbCBkZXBlbmRzIG9uIG9uZSB0aGluZzogd2hhdCBkbyB5b3UgdGhpbmsgeW91IHdpbGwgZG8gaWYgaGUgSVMgY2hlYXRpbmc/IElmIHlvdSB3b3VsZCBhYnNvbHV0ZWx5IGxlYXZlLCB0aGVuIHN1cmUgdGhpcyBpZGVhIGNvdWxkIHdvcmsuIFByaXZhY3kgYW5kIHRydXN0IGlzIGh1Z2UgYW5kIGFuZCBpbnZhc2lvbiBvZiBwcml2YWN5IHRoaXMgYm9sZCB3b3VsZCBiZSBuZWFybHkgaW1wb3NzaWJsZSB0byBsZXQgZ28gb2YuIEl0J3MganVzdCB0aGF0IEkgaGF0ZSB0aGUgaWRlYSBvZiBzb21lb25lIHdobyBpcyBpbm5vY2VudCBmaW5kaW5nIG91dCB0aGV5IGhhdmUgYmVlbiByZWNvcmRlZCBpbiB0aGVpciBtb3N0IGludGltYXRlIHNldHRpbmcgd2l0aG91dCB0aGVpciBrbm93bGVkZ2UgaGF2aW5nIHRvIGZlZWwgbGlrZSB0aGV5IGFyZSBsb29raW5nIG92ZXIgdGhlaXIgc2hvdWxkZXIgZm9yIHRoZSByZXN0IG9mIHRoZWlyIGxpdmVzLgpJJ20gYSBsaXR0bGUgY29uZnVzZWQgYWJvdXQgdGhlIHRpbWVsaW5lIG1peCB1cCBmb2xsb3dpbmcgdGhlIGVuZCBvZiBzZWFzb24gMy4gClRoZSB0ZW1wZXJhdHVyZSBhdCB0aGUgY2VudGVyIG9mIGEgc3RhciBpcyBrZXB0IGhpZ2ggYW5kIHZlcnkgbmVhcmx5IGNvbnN0YW50IGJ5IGFuIGludGVycGxheSBvZiBhIG51bWJlciBvZiBwaHlzaWNhbCBmb3JjZXMuIFRoZSByYWRpYXRpb24gcHJvZHVjZWQgYnkgbnVjbGVhciByZWFjdGlvbnMgaW4gdGhlIGludGVyaW9yIGNhbiBlc2NhcGUgZnJvbSB0aGUgc3RhciBvbmx5IHdpdGggZ3JlYXQgZGlmZmljdWx0eS4gCktlZXAgYWxsIHlvdXIgZG9jdW1lbnRzIGluIGNhc2Ugd2UgYXNrIHRvIHNlZSB0aGVtIGF0IGEgbGF0ZXIgZGF0ZS4gMjAwOSwgd2hlbiB0aGUgQ1JBIGF1ZGl0ZWQgdGhlIHRheHBheWVyLCBzaGUgd2VudCB0byBib3RoIGNhcmVnaXZlcnMgYW5kIGFza2VkIHRoZW0gZm9yIHJlY2VpcHRzIGZvciB3aGF0IHNoZSBoYWQgcGFpZCB0aGVtIGluIHRoZSByZWxldmFudCB5ZWFycyBzbyBzaGUgY291bGQgcHJvdmlkZSB0aGVtIHRvIHRoZSBDUkEuIApPbiBvbmUgc2lkZSwgaXQgY291bGQgYmUgYSBncmVhdCBhbmQgbWVhbmluZ2Z1bCBleHBlcmllbmNlIGZvciB0aGVzZSBzdHVkZW50cyB0byBzZWUgdGhlIGFjdHVhbCBlbGVjdGlvbiBwcm9jZXNzIGFuZCBob3BlZnVsbHkgYmVjb21lIG1vcmUgaW5mb3JtZWQgYW5kIGVuZ2FnZWQuIE9uIHRoZSBvdGhlciBoYW5kLCBzZWVtcyBwYXJhbGxlbCB0byB3aGVuIGNvbXBhbmllcyBoYXZlIHVucGFpZCBpbnRlcm5zIHRvIGF2b2lkIHBheWluZyBzb21lb25lIGZvciBhIGxlZ2l0aW1hdGUgam9iLiBOb3Qgc3VyZSBvbiB0aGlzLCB3aWxsIGhhdmUgdG8gcmVzZWFyY2ggbW9yZS4KV2FzIGJ5IGZhciB0aGUgb25lIHRoYXQgSSBhdHRhY2hlZCB0byB0aGUgbW9zdCBmcm9tIHRoZSB2ZXJ5IGJlZ2lubmluZywgc2FpZCBDYXB0LiBMYWJyYWRhLiBFeHRyYW9yZGluYXJ5LiAKQmV5b25kIHRoYXQgICBqdXN0IGRvbiBiZSBzdHVwaWQuIERvbiBvZmZlciBleGN1c2VzIG9yIGNvbXBsYWluIGFib3V0IHRoZSBsYXcsIHRoZSBjb3Agd2hvIHdyb3RlIHlvdSB0aGUgdGlja2V0IG9yIHRoZSBwcm9jZXNzLiAKSW4gYWRkaXRpb24gdG8gc3VwcG9ydGluZyBhIG51bWJlciBvZiBsb2NhbCBjaGFyaXRhYmxlIG9yZ2FuaXphdGlvbnMgZWFjaCB5ZWFyLCBLZXVyaWcgQ2FuYWRhIGVuY291cmFnZXMgZW1wbG95ZWVzIHRvIGdpdmUgYmFjayB3aXRoIG1hdGNoaW5nIGVtcGxveWVlIGRvbmF0aW9ucyAodG8gJDEsMDAwIGFubnVhbGx5KSBhbmQgZmluYW5jaWFsIGRvbmF0aW9ucyB0byBjaGFyaXRpZXMgd2hlcmUgZW1wbG95ZWVzIHZvbHVudGVlciB0aGVpciB0aW1lICgkMjUwIGZvciBldmVyeSAyNSB2b2x1bnRlZXIgaG91cnMpCkVzdGUgZWxlbWVudG8gZmF6IGRhICJxdWludGEiIHVtYSBtbyBwb3RlbmNpYWwgICBlIGEgbWVsaG9yIG1vIG5vIGpvZ28uLiAKV2Uga25vdyB3ZSB3aGl0ZSBhbmQgY29tZSBmcm9tIG90aGVyIGxhbmRzLiAKQnV0IGV2ZW4gdGhlbiwgQmVybmllIGhhcyB0aGUgYmVzdCBoaXN0b3J5LiAKVGhlIGZpc2NhbCB5ZWFycyBmb3IgdGhlIEJpZyBGaXZlIGJhbmtzIGVuZCBhdCB0aGUgZW5kIG9mIE9jdG9iZXIsIGFuZCB0aGUgdGF4IHJhdGUgd2FzIGxvd2VyZWQgaW4gSmFudWFyeSAyMDE4LCBtZWFuaW5nIHRoZSBmaXJzdCBmaXNjYWwgcXVhcnRlciBvZiBsYXN0IHllYXIgb25seSBpbmNsdWRlZCBvbmUgbW9udGggYWZmZWN0ZWQgYnkgdGhlIGN1dC4KV2hlbiBXZWlkbWFuIGJlYXQgR2FzdGVsdW0sIGl0IHdhcyBjbGVhcmx5IGJlY2F1c2UgR2FzdGVsdW0gaXMgdG9vIHNtYWxsIGZvciBNVywgYW5kIGRlZmluaXRlbHkgaGFzIG5vdGhpbmcgYXQgYWxsIHRvIGRvIHdpdGggV2VpZG1hbiBiZWluZyBhIGNoYW1waW9uIGNhbGliZXIgZmlnaHRlci5XaGVuIGEgZmlnaHRlciB3aG8gbW92ZWQgdXAgZ2V0cyBhIHdpbiwgaXQgY2xlYXJseSBhIGZsdWtlIGFnYWluc3QgYW4gb3ZlciB0aGUgaGlsbCB0cmFzaCB0aWVyIGZpZ2h0ZXIuIFJEQSB3aW4gb3ZlciBMYXdsZXI6IGNsYXNzaWMgZXhhbXBsZS4gClNlZWluZ3JlZGFnYWluIHUKVGhleSBtdXN0IGRldmVsb3AgYSBjbGVhcmVyIGZyYW1ld29yayBvZiBwcmluY2lwbGVzIHRvIGJlIGFibGUgdG8gb3JnYW5pc2UgdGhlaXIgZnV0dXJlIHJlbGF0aW9ucyBhbmQgZXhwbG9yZSBwZWFjZWZ1bCBzb2x1dGlvbnMgdG8gdGhlaXIgcHJvYmxlbXMsIGluY2x1ZGluZyBLYXNobWlyLiBUbyBkbyBzbywgdGhlcmUgaXMgbm8gYWx0ZXJuYXRpdmUgdG8gYW4gdW5pbnRlcnJ1cHRlZCwgcHVycG9zZWZ1bCBkaWFsb2d1ZS4uIApJdCBhbHNvIGdhaW5pbmcgdHJhY3Rpb24uIEluIGEgZmV3IGRlY2FkZXMgdGhleSBiZSBhcyBjdWNrZWQgYXMgb3VyIG5hdGlvbnMgYXJlLiBTYW1lIHdpdGggTGF0aW5hcywgbG9vayBhdCBob3cgdGhleSByZWFjdGVkIGluIEJyYXppbCB0byB0aGVpciBuZXcgUHJlc2lkZW50Li4gClRoYW5rcyBmb3Igd2lkZW5pbmcgbXkgcGVyc3BlY3RpdmUhCkdhdWdlIHlvdXIgc2Vuc2l0aXZpdHkuIApEcnkgaWNlIGxhbmRtaW5lOiBHZXQgc29tZSBkcnkgaWNlIGFuZCBQRVQgYm90dGxlcy4gRmlsbCB0aGUgYm90dGxlIHdpdGggd2F0ZXIgYW5kIGRyeSBpY2UgYW5kIGJ1cnkgaXQgaW4gdGhlIGdyb3VuZCB0aGVuIHN0YW5kIG9uIGl0IChvciBjb252aW5jZSBhIGZyaWVuZCB0byBzdGFuZCBvbiBpdCkuIFRoZSBpY2UgbWVsdHMgaW50byBnYXMgZXhwYW5kaW5nIHRoZSBib3R0bGUgd2hpY2ggd2lsbCB0aGUgZXhwbG9kZSBmcm9tIHRoZSBwcmVzc3VyZSwgY3JlYXRpbmcgYSBtaW5pYXR1cmUgaGFybWxlc3MgbGFuZGxpbmUgYWZmZWN0Li4gCiJJdCdzIG11Y2ggbW9yZSBjaGFsbGVuZ2luZywiIHNhaWQgSmVuIFNjaG9ybiwgY2hpZWYgb2YgdHJpYWxzIGluIHRoZSBCdWNrcyBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkncyBPZmZpY2UuIEluIDIwMTYsIGludmVzdGlnYXRvcnMgb2J0YWluZWQgcHJpc29uIHRlcm1zIGZvciBhUm9tYW5pYW4gY291cGxlIHdobyBoYWQgZm9yY2VkIHZ1bG5lcmFibGUgd29tZW4gdG8gcGVyZm9ybSBzZXggYWN0cyBmb3IgY3VzdG9tZXJzIGF0IHRoZWlyIG1hc3NhZ2UgcGFybG9yc2luIHR3byBCdWNrcyBDb3VudHkgbXVuaWNpcGFsaXRpZXMuIEluIFNlcHRlbWJlcix0aHJlZSB3b21lbiB3ZXJlIGFycmVzdGVkb24gcHJvc3RpdHV0aW9uIGNoYXJnZXMgYXQgYSBDZW50ZXIgQ2l0eSBtYXNzYWdlIHBhcmxvciB3aXRoIGEgaGlzdG9yeSBvZiBhcnJlc3RzLiAKVGhlIHJvbWFudGljIGVuZ2FnZW1lbnQgdG9vayBwbGFjZSBpbiBQYXJpcywgdGhlIENpdHkgb2YgTG92ZSwgd2l0aCB0aGUgY291cGxlIGV4Y2l0ZWRseSBwb3NpbmcgdW5kZXJuZWF0aCB0aGUgRWlmZmVsIFRvd2VyLiAKQXNobGFuZCBJbnN0aXR1dGUgb2YgTWFzc2FnZS4gCkFmdGVyIEkgY2FsbGVkIEZlZEV4IHRvIGFzayBXVEYsIEkgd2FzIHRvbGQgdGhleSBkZWxpdmVyZWQgaXQgdG8gYSBzaW1pbGFyIGJ1dCBkaWZmZXJlbnQgYWRkcmVzcy4gClN0dWR5IHdoZW4gdG8gYmV0IGluIFRleGFzIGhvbGQnZW0gcG9rZXIgZm9yIGEgZmF2b3JhYmxlIGJsaW5kIHN0ZWFsaW5nLiBQcmltYXJpbHksIGluIGEgZ2FtZSB3aGVyZSB5b3UgaGFwcGVuIHRvIGJlIGEgZGVhbGVyIGFuZCB0aGVyZSBpcyBvbmx5IHRoZSBkZWFsZXIgYW5kIHRoZSBibGluZHMgcmVtYWluaW5nIHRvIHBsYXksIGNvbXBldGluZyB0byBzdGVhbCBzdWNoIGEgcG90IGlzIGNhbGxlZCBibGluZCBzdGVhbGluZy4gV2l0aCB0aGlzIGdhbWUgYmVpbmcgcG9zaXRpb25hbCwgaWYgeW91IGFyZSBhIGRlYWxlciB5b3Ugd291bGQgYmUgdGhlIGxhc3QgdG8gYWN0IGFuZCB5b3UgY2FuIHRha2UgdGhlIHBvdCBvZiB0aGUgYmxpbmRzIGZvbGQuIApNaWdyYWluZSAgIE1pZ3JhaW5lIGhlYWRhY2hlcyBjYW4gYmUgY2F1c2VkIGJ5IHJlZHVjZWQgYmxvb2QgZmxvdyB0byB2YXJpb3VzIGFyZWFzIG9mIHRoZSBjZXJlYnJhbCBjb3J0ZXguIFN5bXB0b21zIG9mIG1pZ3JhaW5lcyBpbmNsdWRlIHNlbnNpdGl2aXR5IHRvIGxpZ2h0IGFuZCBub2lzZSwgbmF1c2VhLCB2b21pdGluZyBhbmQgaW50ZW5zZSB0aHJvYmJpbmcgcGFpbiB0aGF0IGlzIHVzdWFsbHkgb24gb25lIHNpZGUgb2YgdGhlIGhlYWQuIApUaGVuIHlvdSByb2xsIHRoZSBsYXllcmVkIHJvbGwgaW50byBhIGxvbmcgY3lwaW5kZXIsIHR3aXN0IG9uZSBlbmQgYXMgbXVjaCBhcyB5b3UgY2FuIHdpdGhvdXQgcmlwcGluZyBpdCBhbmQgdGhlbiBjdXQgaXQgaW50byAyIDMgaW5jaCBzZWdtZW50cy4gCk15IG5laWdoYm9yaG9vZCBpcyBiYXNpY2FsbHkgdGhlIG9wcG9zaXRlIG9mIGdpbmdlciBmYWN0aW9uIChob3BlIGkgc3BlbGxlZCB0aGF0IHJpZ2h0LiBJdCB3YXMgYSBnb29kIG5laWdoYm9yaG9vZCBhbmQgbm93IGl0cyBwcm9zdGl0dXRlcywgVHdlYWtlcnMgLCBhbmQgd2hpdGUgdHJhc2guIEEgbG90IG9mIG15IGZyaWVuZHMgR3JhbmQgcGFyZW50cyBoYXZlIHNlcmlvdXMgY2FzZXMgb2YgbWV0aCBtb3V0aCBhbmQgdGhlIGtpZHMgaW4gbXkgbmVpZ2hib3Job29kIGRvbiBoYXZlIGdvb2QgcGFyZW50cywgYW5kIGFsdGhvdWdoIE1hcmlqdWFuYSBpc250IGJhZCBvbiB0aGUgZnVsbHkgZGV2ZWxvcGVkIGFkdWx0IGJyYWluLCBpdCBpcyBiYWQgb24gdGhlIGJyYWluIG9mIGEgNCB5ZWFyIG9sZC4gCldvcmxkIExhcmdlc3QgUGFzc2VuZ2VyIFBsYW5lIEFycml2ZXMgQXQgTUlBQWlyYnVzIEEgMzgwIEx1ZnRoYW5zYSBMYW5kcyBBdCBNSUExNVRoZSBhaXJwb3J0IHNwZW50ICQ0IG1pbGxpb24gb24gdGVybWluYWwgbW9kaWZpY2F0aW9ucyBpbmNsdWRpbmcgdGhlIGluc3RhbGxhdGlvbiBvZiBhIHRoaXJkIGpldCBicmlkZ2UgdG8gYWNjb21vZGF0ZSB0aGUgcGxhbmUuIChDQlM0KVRoZSBhaXJwb3J0IHNwZW50ICQ0IG1pbGxpb24gb24gdGVybWluYWwgbW9kaWZpY2F0aW9ucyBpbmNsdWRpbmcgdGhlIGluc3RhbGxhdGlvbiBvZiBhIHRoaXJkIGpldCBicmlkZ2UgdG8gYWNjb21vZGF0ZSB0aGUgcGxhbmUuIHRvIG9idGFpbiBBIDM4MCBzZXJ2aWNlLiB0byBvYnRhaW4gQSAzODAgc2VydmljZS4gKENCUzQpClRoZSByZXBvcnQgc2F5cyB0aGUgYWRkaXRpb24gbGFzdCBtb250aCBvZiA2Nyw0MDAgZnVsbCB0aW1lIGpvYnMgbW9yZSB0aGFuIG9mZnNldCBhIGxvc3Mgb2YgMTEsNjAwIHBhcnQgdGltZSBwb3NpdGlvbnMuCkEgcmVtb3RlIHJlbGVhc2UgaXMgaGVscGZ1bCBidXQgbm90IGFsd2F5cyBuZWNlc3NhcnkuIApPdGhlcnMgc3BlY2lhbGl6ZSBpbiB2b2ljZSB3cml0aW5nLCB3aGljaCBpbnZvbHZlcyBzcGVha2luZyB3aGF0IHlvdSBoZWFyIGludG8gYSBzcGVjaWFsIG1hc2sgdGhhdCBzZW5kcyB5b3VyIHdvcmRzIHRvIHRyYW5zY3JpcHRpb24gc29mdHdhcmUuIApJIGtub2NrIHR3byBvZiB0aGVtIGRvd24gaW5zdGFudGx5IGFuZCBhbG1vc3QgZmluaXNoIG9mZiB0aGUgdGhpcmQgYnV0IHRoZXkgbW93ZWQgbWUgd2l0aCBhIGRldm90aW9uLiBJIHRoZW4gaGFkIHRvIHdhdGNoIGFzIHRoZXkgc2xvd2x5IHJldml2ZWQgYm90aCB0aGVpciB0ZWFtbWF0ZXMgYW5kIGhlYWwgdXAgd2hpbGUgbXkgc3F1YWQgcmVmdXNlZCB0byB0cnkgYW5kIHJ1c2ggdGhlbSB3aGlsZSB0aGV5IHdlcmUgdnVsbmVyYWJsZS4gVGhlbiBvZiBjb3Vyc2UsIGtub3dpbmcgdGhleSB3ZSB3ZXJlIGRvd24gYSBzcXVhZCBtZW1iZXIsIHRoZXkgcnVzaGVkIG15IHNxdWFkIGFuZCB0b29rIHRoZW0gb3V0IHdpdGggZWFzZS4gClNvdXZlbmlycyBoYWQgYmVlbiBwcmludGVkIHdpdGggdGhlIGRhdGUgb2YgOCBBcHJpbCBhbmQgdGhlc2Ugd2VyZSBzbmFwcGVkIHVwIGJ5IHRob3NlIGVhZ2VyIHRvIG1ha2UgYSBraWxsaW5nIG9uIGF1Y3Rpb24gc2l0ZXMgc3VjaCBhcyBlQmF5LiBUaGVzZSBwcm9iYWJseSBvdXRzb2xkIG5ldyBydW5zIHdpdGggdGhlIGNvcnJlY3QgZGF0ZS4gVGhlIFJveWFsIE1haWwgZGlkbid0IGJvdGhlciB0byBhbHRlciB0aGVpciBzcGVjaWFsIHdlZGRpbmcgc3RhbXBzIHNheWluZyBpdCB3YXMgJ3RvbyBsYXRlJy4KTGVzIGF1dHJlcyBhcnRpY2xlcyBkZSBsYSBwcm9wb3NpdGlvbiBkZSBsb2kgc2UgdmV1bGVudCBwbHVzIHN0cmljdHMgcXVhbnQgIGxhIGNvbmR1aXRlICB0ZW5pciBwYXIgbCdpbmRpdmlkdSBjb25jZXJuLiAKSSB0cmllZCB0byB0YWxrIGhpbSBpbnRvIHBsYXlpbmcgdGhlaXIgY2FyZCBnYW1lIGZvciBhIGZldyB3ZWVrcyB0byBnZXQgdG8ga25vdyB0aGVtLCBidXQgaGUgYmVpbmcgaW5jcmVkaWJseSBzdHViYm9ybiBhYm91dCBpdC4gClRoZSBtb2Rlcm4sIHVuZnVzc3kgcGFuZWwgd29yayBhbmQgY29udGVtcG9yYXJ5IG1vdWxkaW5ncywgdGhlIHVuZGVyc3RhdGVkIHZhdWx0ZWQgY2VpbGluZ3MsIGFuZCB0aGUgYmFsYW5jZWQgZWZmZWN0IG9mIHNpbWlsYXIgZGVzaWduIGVsZW1lbnRzIGluIGRpZmZlcmVudCBtYXRlcmlhbHMgd29yayB0b2dldGhlciB0byBjcmVhdGUgYSBncmFjaW91cyBzcGFjZSB0aGF0IGZlZWxzIHNvbGlkIGJ1dCBuZXZlciBoZWF2eSwgcG9saXNoZWQgYnV0IG5ldmVyIHByZXRlbnRpb3VzLiBXaXRoIGl0cyBsb25nIGxpc3Qgb2YgcXVhbGl0eSBmZWF0dXJlcyBhbmQgdW5jbHV0dGVyZWQgc3BhY2lvdXNuZXNzLCB0aGUgaG91c2Ugb2ZmZXJzIGEgbHV4dXJ5IGxpZmVzdHlsZSB0aGUgd2hvbGUgZmFtaWx5IGNhbiBlbmpveS4uIApIYXZlIGEgY29udmVyc2F0aW9uIHdpdGggaGltLiAKSSBkb24ndCBmZWVsIGNvbWZvcnRhYmxlIGluIHNwYW5kZXggc2hvcnRzLCBhbHNvIGRvbid0IHdhbnQgc2hvcnRzIHRoYXQgcmlkZSB1cCBteSByZWxhdGl2ZWx5IGxhcmdlIGJ1bS4gSSBkb24ndCB3YW50IHNob3J0cyBJIGhhdmUgdG8gcHVsbCBkb3duIGV2ZXJ5IDEwMCBtZXRlcnMuIApZb3UgY2FuIHBsYXkgd2l0aG91dGRlcG9zaXQganVzdCwgd2luIG9yIGFpbSBmb3IgMTB0aCBvciBoaWdoZXIgcGxhY2UgaW4gZnJlZXJvbGxzIGFuZHlvdXIgZ29vZCB0byBnby4gCkRhcyBhdWYgS2FobmF3YWtlIGxpemVuemllcnRlICBoYXQgc2VpbmUgIFF1YWxpZmlrYXRpb25zIHNwaWVsZSBiZXJlaXRzIGJlZ29ubmVuIHVuZCB0ZWlsdCBtaXQsIGRhc3MgZXMgYmlzIHp1bSAyOC4gTWFpIHRnbGljaCA1IFNwaWVsZSBkZXIgZXJzdGVuIFN0dWZlIHZlcmFuc3RhbHRldCwgd29taXQgZXMgaW5zZ2VzYW10IDI1MCAgbiBkaWUgR2VsZWdlbmhlaXQgZ2VnZWJlbiB3aXJkLCBlaW5lbiBQbGF0eiBhdWYgRWJlbmUgMiB6dSBlcnJpbmdlbi5EYXMgIFRvdXJuYW1lbnQgU3BpZWwgZGVyIFN0dWZlIDIgd2lyZCBhbSAyOS4gTWFpIHN0YXR0ZmluZGVuIHVuZCB1bSAxOC4zMCBVaHIgQ2hpY2Fnb2VyIFplaXQgYmVnaW5uZW4uIERpZSAgIGhhYmVuIGhpZXJiZWkgZGllIE1nbGljaGtlaXQsIHNpY2ggZWluZW4gUGxhdHogZnIgZGFzIEZyZWVyb2xsICAgTWFpbiBFdmVudCBhbSAzMC4gTWFpLCAxNC4wMCBVaHIsIHp1IGVya21wZmVuLiAga25uZW4gZWJlbmZhbGxzIGVpbmVuIFBsYXR6IGZyIGRpZSBFYmVuZSAyIGVyaGFsdGVuLCBpbmRlbSBzaWUgZWluZW4gQ2FzaW5vIERlcG9zaXQgYmlzIHp1bSAyOC4gTWFpIGxlaXN0ZW4gdW5kIGRhYmVpIGRlbiBDb2RlIGJlbnV0emVuLiBEaWVqZW5pZ2VuIENhc2lubyBHYW1lcyAsIGRpZSBkaWVzZW4gQ2FzaW5vIERlcG9zaXQgbGVpc3RlbiwgZXJoYWx0ZW4gZGFyYmVyIGhpbmF1cyBub2NoIGVpbmVuIENhc2lubyBCb251cyB2b24gYmlzIHp1ICQgNTAwIG5lYmVuIGlocmVyICAgRWludHJpdHRza2FydGUuU28gaXN0IGVzIHJlY2h0LCBob2xlbiBTaWUgc2ljaCBJaHJlbiBBbnRlaWwgdm9uICQxMDAuMDAwIGFuIFByZWlzZ2VsZC4gJCAyMC4wMDAgZnIgZGVuIGVyc3RlbiBQbGF0ei4iUGFydHkgIEFscyBlaW5lIGRlciBlcmZhaHJlbnN0ZW4gIENvbXBhbmllcyBtaXQgZGVuIG1laXN0ZW4gIG4gdW5kIGRlbiBoY2hzdGVuIFVtc3R6ZW4gaXN0IFBhcnR5ICBzZWl0IDE5OTcgYXVzIGRlbSBLcmVpcyBkZXIgZmhyZW5kZW4gIFJvb21zIG5pY2h0IG1laHIgd2VnenVkZW5rZW4uIERhcyAgZ2FyYW50aWVydCBiZWkgZGVuICBlbiBtb25hdGxpY2ggYmVyIDYgTWlsbGlvbmVuIERvbGxhciBhbiBQcmVpc2dlbGRlcm4uIEVzIHdlcmRlbiBmciBqZWRlbiBHZXNjaG1hY2sgdW5kIGplZGUgR2VsZGJyc2UgZGllIHJpY2h0aWdlbiBPbmxpbmUgIFZhcmlhbnRlbiBhbmdlYm90ZW4uIEZyIGJpcyB6dSA1MDAgVVMgRG9sbGFyIEVpbnphaGx1bmdzYmV0cmFnIHdlcmRlbiAxMDAgJSAgQm9udXMgYW5nZWJvdGVuIChzaWVoZSBEZXRhaWxhbmdhYmVuIHVudGVyIFBhcnR5ICEpO0hhcHB5IEhvdXJzTGFzIFZlZ2FzT25saW5lIEdhbWVzT25saW5lClJpZ2h0IGFyb3VuZCB0aGUgdGltZSB0aGUgYmlsbCBzZWVraW5nIHRvIHByb3RlY3Qgd29tZW4gZnJvbSBoYXJhc3NtZW50IGluIHRoZSB3b3JrcGxhY2UgaGl0IHRoZSBjYWJpbmV0IChkbyBpdCBhZ2FpbiwgcGxlYXNlLCB2ZXJ5IGhhcmQpIGFub3RoZXIgcGFwZXIncyB3ZWVrbHkgbWFnYXppbmUgZGlkIGEgc3BlY2lhbCBvbiBzZXh1YWwgaGFyYXNzbWVudC4gVGhlaXIgbWFpbGJhZyB0aGlzIHdlZWsgeWllbGRlZCB0aGVzZSBudWdnZXRzIGZyb20gb25lIHJlYWRlci4gCk5vdCBvbmx5IGRpZCB0aGUgZHJpdmVyIGdldCBsb3N0IGdldHRpbmcgdG8gbWUsIGJ1dCB3aGVuIHRoZSBkcml2ZXIgYXJyaXZlZCB0aGV5IGhhZCB0aGUgYmFjayByb3cgb2YgdGhlIHRoZSBzZWF0cyBmb2xkZWQgZG93bi4gCk1ha2VzIG5vIHNlbnNlLiBJZiB5b3UgZ2l2ZW4gYW50aWJpb3RpY3MgcG9zdCBvcCwgdGhlbiBpdCBzaG91bGQga2lsbCB3aGF0IG1pZ2h0IGJlIGxlZnQsIGlmIHRoZXJlIGlzIGFueSBsZWZ0LiBXaGVuIEkgc2F3IGl0IGRvbmUgdG8gbXkgZ2lybGZyaWVuZCB0aGV5IGJ1cm5lZCBkZWVwIGludG8gdGhlIGJvdHRvbSBvZiBoZXIgZm9vdCwgcHJvYmFibHkgdGhyZWUgcXVhcnRlcnMgb2YgYW4gaW5jaCBkZWVwLiBJIGRvbiBzZWUgd2h5IGFueSBvZiB0aGUgdmlydXMgd291bGQgaGF2ZSByZW1haW5lZCBiZWNhdXNlIGV2ZXJ5IHBhcnQgb2YgaXQgaGFkIGJlZW4gYnVybmVkIHVwLiBTaGUgaGFkIHRvIHB1dCBvaW50bWVudCBvbiBpdCAgSSBkb24gcmVtZW1iZXIgaWYgaXQgd2FzIGp1c3QgYmFjaXRyYWNpbiBvciBzb21ldGhpbmcgcHJlc2NyaWJlZCBiZWNhdXNlIGl0IHdhcyBhIGxvbmcgdGltZSBhZ28sIGJ1dCBJIGRvbiB0aGluayBpdCBldmVyIHJldHVybmVkIGFmdGVyIHRoYXQuClNvIGNhc3Qgc29tZW9uZSB3aG8gaXNuIGEgYmlnIHN0YXIgYWxyZWFkeS4gVGhlc2UgZmVtYWxlIHN1cGVyaGVyb2VzIGFyZSBzdXBwb3NlZCB0byBiZSBpbmNyZWRpYmx5IGZpdCBhbmQgc3Ryb25nLCBhbmQgbm9uZSBvZiB0aGVtIGxvb2sgbGlrZSBpdC4gQWN0cmVzc2VzIGNhc3QgaW4gcm9sZXMgb2YgYXRobGV0aWMgY2hhcmFjdGVycyBnZXQgaW4gYmV0dGVyIHNoYXBlIGJ1dCByYXJlbHkgaGF2ZSB0aGUgc3Ryb25nIGFuZCBmaXQgbG9vayBvZiBhbiBhdGhsZXRlLiAKV2hhdCBhcmUgdGhlIG9kZHMgb2YgYSByb3lhbCBmbHVzaCBhbmQgYSBzdHJhaWdodCBmbHVzaCBiZWluZyBkZWFsdCBpbiB0aGUgc2FtZSBoYW5kCjE4KSAiSW4gdHJlYXRtZW50IHN0dWRpZXMgZm9yIGJvdGggc2NoaXpvcGhyZW5pYSBhbmQgZGVwcmVzc2lvbiwgY3VycmVudCBldmlkZW5jZSBzdWdnZXN0cyB0aGF0IEVQQSByYXRoZXIgdGhhbiBESEEgaXMgdGhlIGVmZmVjdGl2ZSBhZ2VudC4iCk5lYWwgQXdhcmRzLCB0aGUgQXNzb2NpYXRpb24gb2YgQ2FwaXRvbCBSZXBvcnRlcnMgYW5kIEVkaXRvcnMsIHRoZSBDYWxpZm9ybmlhIE5ld3NwYXBlciBQdWJsaXNoZXJzIEFzc29jaWF0aW9uLCB0aGUgU291dGggQ2Fyb2xpbmEgUHJlc3MgQXNzb2NpYXRpb24gYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzIGFuZCBFZGl0b3JzLiBBIG5hdGl2ZSBvZiBDaW5jaW5uYXRpLCBTY2h1bHR6IGhhcyBhbiBlY29ub21pY3MgZGVncmVlIGZyb20gWGF2aWVyIFVuaXZlcnNpdHkgYW5kIGEgbWFzdGVycyBpbiBqb3VybmFsaXNtIGZyb20gTm9ydGh3ZXN0ZXJuIFVuaXZlcnNpdHkuLiAKQW5kIGxhc3QsIGJ1dCBjZXJ0YWlubHkgbm90IGxlYXN0LCB5b3UgY2FuIHN0aWxsIGZlZWwgYSBsb3Qgb2Ygd2hhdCBoYXBwZW5pbmcuIE5vdGhpbmcgc2hhcnAsIGJ1dCB5b3UgY2FuIGZlZWwgdGhlbSBzdGlycmluZyB5b3VyIG9yZ2FucyBhcm91bmQsIGFuZCB5ZXMgdGhlcmUgaXMgc3RpbGwgcGFpbi4gSXRzICJwcmVzc3VyZSIgcGFpbi4gClRoZSBzb2NpYWwgbWVkaWEgc2VydmljZXMnIHVzZSBvZiB0aGUgc2hhcmVkIGluZm9ybWF0aW9uIHdpbGwgYmUgZ292ZXJuZWQgYnkgdGhlIHNvY2lhbCBtZWRpYSBzZXJ2aWNlcycgcHJpdmFjeSBwb2xpY3kgYW5kIHlvdXIgc29jaWFsIG1lZGlhIGFjY291bnQgc2V0dGluZ3MuIApPbmUgbmlnaHQsIEFsaXRhIGZvbGxvd3MgaGVyICJmYXRoZXIiIHdoZW4gaGUgZ29lcyBvdXQuIApBbmQgb25seSBvbiBjb21tZW50cyBzcHVyaW91c2x5IGFjY3VzaW5nIFN0ZXZlIG9mIGJlaW5nIGEgY2hpbGQgbW9sZXN0ZXIuIApJZiB5b3Ugd2VyZSBhIHJhY2lzdCwgeW91IG5ldmVyIGhhdmUgZ2l2ZW4gaGltIHlvdXIgbnVtYmVyIGluIHRoZSBmaXJzdCBwbGFjZS4gSWYgeW91IHdlcmUgYSByYWNpc3QsIHlvdSBuZXZlciBoYXZlIHJlcGxpZWQgdG8gaGlzIGFnZ3Jlc3NpdmUgY29tZSBvbnMgd2l0aCBzdWNoIHBvbGl0ZW5lc3MuIElmIHlvdSB3ZXJlIGEgcmFjaXN0LCB5b3Ugd291bGQgaGF2ZSByZXBsaWVkIHRvIGhpcyBhY2N1c2F0aW9ucyBvZiBOYXppc20gd2l0aCAiSGVsbCB5ZWFoLCBDYXVjYXNpYW5zIHJ1bGUhIFNlaWcgSGVpbCwgbW90aGVyZnVja2VyISIgb3Igc29tZSBvdGhlciBhZmZpcm1hdGl2ZSBzdGF0ZW1lbnQuLiAKVGhlcmUgYXJlIGEgbG90IG9mIHJlZ3MsIGJ1dCBhbHNvIGEgbG90IG9mIGVhc3kgbW9uZXkuIEdhbWVzIHRoZXJlIGNhbiBnZXQgd2lsZCBhbmQgY3Jhenkgd2l0aCBsb3RzIG9mIG1vbmV5IGZseWluZyBhcm91bmQuIApUaGlzIGlzIGEgcXVlc3Rpb24gQXBwIFN0b3JlIGRldmVsb3BlciBKb24gQXRoZXJ0b24gaGFzIGFkZHJlc3NlZCBvbiBoaXMgYmxvZywgYW5kIHRoZSBsaXN0IG9mIHJlYXNvbnMgd2h5IGhpcyBXb2JibGUgYXBwbGljYXRpb24gaGFzIGJlZW4gcHVsbGVkIGlzIHByZXR0eSBkcmFjb25pYW4uClNldmVyYWwgbW92aWVzIGhhdmUgZXZlbiBiZWVuIGZpbG1lZCBhdCB0aGUgb2xkIFBpb25lZXIgU2Fsb29uLCBpbmNsdWRpbmcgRmVhciBhbmQgTG9hdGhpbmcgaW4gTGFzIFZlZ2FzIHN0YXJyaW5nIEpvaG5ueSBEZXBwLCBhbiBvbGQgQ2hlZWNoIENob25nIG1vdmllLCBNaXNzIENvbmdlbmlhbGl0eSAyLCBzdGFycmluZyBTYW5kcmEgQnVsbG9jaywgYW5kIFRoZSBNZXhpY2FuLCB3aGljaCBzdGFycmVkIEJyYWQgUGl0dCBhbmQgSnVsaWEgUm9iZXJ0cy4KU2ltaWxhcmx5IGluIGdhbWVzIHdoZXJlIHRoZSBkZWFsZXIgaXMgcGxheWluZywgaXQgaXMgYWxzbyBnb29kIHByYWN0aWNlIHRvIGhhdmUgc29tZW9uZSBvdGhlciB0aGFuIHRoZSBkZWFsZXIgc2h1ZmZsZSB0aGUgY2FyZHMsIGFuZCBzb21lb25lIGVsc2UgdG8gY3V0IHRoZSBjYXJkcy4gVGhpcyBlZmZlY3RpdmVseSBlbGltaW5hdGVzIG1hbnkgbWV0aG9kcyBvZiB0cmljayBzaHVmZmxpbmcvdHJpY2sgY3V0dGluZy9ib3R0b20gZGVhbGluZy4uIApJIGR1bm5vIG1hbi4gSXQncyBwb3NzaWJsZSB0aGUgZG9nIGp1c3Qgd2VudCBvbiBhbiBhZHZlbnR1cmUuIEV4OiBXaGVuIEkgbGl2ZWQgaW4gVHVjc29uLCBBWiwgSSBmb3VuZCBhIEJpY2hvbiBpbiBteSBuZWlnaGJvcmhvb2QgdGhhdCBoYWQgZXNjYXBlZCBoaXMgeWFyZCBpbiBQaG9lbml4IHRocmVlIG1vbnRocyBlYXJsaWVyLCBhbmQgZGlzYXBwZWFyZWQgaW50byB0aGUgZGVzZXJ0IHdoZW4gdGhlIG93bmVycyBjaGFzZWQgaGltIGRvd24gdGhlIHN0cmVldCB0cnlpbmcgdG8gZ2V0IGhpbSBiYWNrLiBIaXMgZmFtaWx5IGhhZCBkZXNwZXJhdGVseSBiZWVuIHRyeWluZyB0byBmaW5kIGhpbSBzaW5jZSB0aGVuLCBhbmQgd2FzIGhhcHB5IHRvIGJlIHJldW5pdGVkLiBUaGV5IGFzc3VtZWQgY295b3RlcyBnb3QgaGltIGFmdGVyIGFib3V0IGEgbW9udGgsIGJ1dCBub3BlLiBUaGUgZG9nIGhhZCBqdXN0IGdvbmUgb24gYSAxMjAgbWlsZSBhZHZlbnR1cmUuClRoaXMgbGVmdCBtZSBmZWVsaW5nIGFubm95ZWQgYmVjYXVzZSBJIHdhcyBqdXN0IHNpdHRpbmcgdGhlcmUsIHdhdGNoaW5nIGEgaG9ibyBkbyBhIGNyb3Nzd29yZCBwdXp6bGUuIApTaG91bGQgeW91IHdhbnQgdG8gdGFsayBhYm91dCBpdCB5b3UgbWF5IFBNIG1lIGFueXRpbWUuLiAKQmVzdCBHYW1ibGluZyBFYm9va3MKUXVlc3Rpb25zIG92ZXIgdGhlaXIgYXBwbGljYXRpb25zIHVsdGltYXRlbHkgbGVkIHRvIHRoZSBwcm9wb3NlZCBjaGFuZ2VzIGluIHRoZSB3YXkgdGhlIGNpdHkgbGljZW5zZXMgbWFzc2FnZSBlc3RhYmxpc2htZW50cy5Db3VuY2lsIG1lbWJlcnMgTWljaGFlbCBNY0RvbmFsZCBhbmQgTHluZXR0ZSBCb2dncyBNY0RvbmFsZCBleHByZXNzZWQgY29uY2VybnMgaW4gRmVicnVhcnkgYWJvdXQgdGhlIHdvbWVuJ3MgcmVxdWVzdCB0byBzdGF5IG9wZW4gcGFzdCByZWd1bGFyIG9wZXJhdGluZyBob3Vycy4gCklmIHlvdXIgd2lmZSwgYW5kIGRhdWdodGVyIGNhbiByZW1lbWJlciBpdCBoYXBwZW5pbmcsIGl0IGhhcHBlbmVkLiAKR3J1ZWh1bnRlciB1ClRoZSBtZWFzdXJlIGFsc28gc2Vla3MgdG8gZW5zdXJlIHRoYXQgcHJpdmFjeSBpbiBzdWNoIGVzdGFibGlzaG1lbnRzIGlzIG1haW50YWluZWQgICB0byBhIGRlZ3JlZS4gVGhlcmUgY2Fubm90IGJlIGFueSB0aW50ZWQgb3IgdHdvIHdheSBtaXJyb3JzIGluc2lkZSB0aGUgbWFzc2FnZSByb29tcywgYWNjb3JkaW5nIHRvIHRoZSBvcmRpbmFuY2UsIG5vciBhbnkgYXVkaW8gb3IgdmlkZW8gcmVjb3JkaW5nIGRldmljZXMuCkluIGFsbCwgdGhlcmUgd2VyZSA3IHBob3RvcyBJIGNvdWxkIHBsYWNlLCBhIGZldyBtb3JlIHdoaWNoIEkgYmVsaWV2ZSBJIGhhdmUgc2VlbiBlbHNld2hlcmUgYnV0IGNvdWxkbiBwbGFjZSwgYW5kIGEgZmV3IG1vcmUgc3RpbGwgd2hpY2ggYXQgbGVhc3QgbG9va2VkIGZhbWlsaWFyLiAKVGhlIHZpZGVvIHdhcyBydW4gb24gQW5kcmV3IEJyZWliYXJ0IHVsdHJhY29uc2VydmF0aXZlIEJpZyBHb3Zlcm5tZW50IHdlYnNpdGUgYW5kIHRoZW4gYmVjYW1lICJuZXdzLiIuIApBbmQgSSB3aWxsIHJlcGVhdDogVGhlIGZhbnMgYXJlIGEgZ3JlYXQgaWRlYS4gR3JlYXQuCk9ubHkgbm93IGFsbCB0aGVpciBjYXJkc2FyZSBzaG93bi4gCkpBTUEuIDIwMDkgU2VwIDE2OzMwMigxMSk6MTE3MSA4Li4gCk9uIGEgbW9yZSBuYXRpb25hbCBzY2FsZSwgSSByZWFsbHkgbGlrZWQgU2ltbXMgYW5kIExlZmtvZSwgYnV0IDIvMyBvZiB0aGF0IHNob3cganVzdCBsZWZ0IHNvIEkgZG9uJ3QgaGF2ZSBoaWdoIGhvcGVzIGZvciB3aGF0IGl0IGxvb2tzIGxpa2UgZ29pbmcgZm9yd2FyZC4gCkluIHRoaXMgc2NlbmFyaW8gQnV0dG9uIGNhbm5vdCBhZmZvcmQgZm9yIERlbm5pcyB0byBiZWxpZXZlIHRoYXQgaGUgaXMgbm90IHByZXBhcmVkIHRvIGRlbGl2ZXIgb24gaGlzIHRocmVhdC4gCkFzIGEgcmVzdWx0LCB0aGlzIDEwMCAxMS41IEdyYW0gV29ybGQgUG9rZXIgVG91ciBDaGlwIFNldCBpcyBhIHZlcnkgZ29vZCBjaG9pY2UgdG8gYXJyYW5nZSBhIHBva2VyIHRvdXJuYW1lbnQgYXQgaG9tZSwgb3IgaW4gdGhlIGhvdGVsIGFmdGVyIHRoZSBtZWV0aW5nLi4gCkV2ZXIgc2luY2UgdGhlbiBoZSBqdXN0IGJlZW4gbWVhbiBhbmQgc3RyYW5nZSwgcG9zdGluZyBhIGJpemFycmUgc3Rvcnkgb3V0IG9mIG5vd2hlcmUgYWJvdXQgIkNSQVkgQ1JBWVMiIGV2ZXJ5IHdlZWsgb3Igc28uLiAKQmFycmluZyBqdXN0IGEgZmV3IGFzc2hvbGUgcmVsYXRpdmVzIHdobyB0cmllZCBzd29vcCBpbiBhbmQgd2VyZSBxdWlja2x5IHNob3QgZG93biwgZXZlcnlvbmUgd2FzIHNvIGNhcmluZyBvbiBhbGwgc2lkZXMuIApIZXJlLCB0aGUgMTAxc3QsIDEwM3JkIDEwNHRoc29uZ3MgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcywgd2hpbGUgdGhlIDEwMm5kIGNhbiBiZSBmb3VuZCBvbnlvdXR1YmUuIDEwNSAxMDcpICJTZWFzb25hbCBTb25ncyJsaXN0ZWQgaGVyZTogQ2hyaXN0bWFzIFRyZWUgd2hpY2ggY2FuIGJlIGZvdW5kIGFzIGEgc2luZ2xlIG9uIGlUdW5lcy4gCkNhbGxpbmcgdGhlIHNob3RzIG1lYW5zIGhlIG9yIHNoZSBjYW4gcmFpc2UgdGhlIGJldHMuIEZvciBleGFtcGxlLCB0aGUgaW5kaXZpZHVhbCBjYW4gY2hvb3NlIHRvIGFkZCAxMDAgZG9sbGFycyB0byB0aGUgcG9vbCBvZiBtb25leS4gCkRlbWFuZCBmb3IgSVQgc2VydmljZXMgcmVhY2hpbmcgdW5wcmVjZWRlbnRlZCBsZXZlbHMsIHRoZSBuZXh0IHF1ZXN0aW9uIGlzIHdoZXRoZXIgYSBjb3VudHJ5IHN1Y2ggYXMgQ2FuYWRhIGNhbiBtZWV0IHRoZSBkZW1hbmQgaW4gdGhlIG1hcmtldHBsYWNlIHRvZGF5LiAKV2hpbGUgaXQgbWF5IGZlZWwgb3ZlcndoZWxtaW5nIHRvIHRoaW5rIGFib3V0IGhvdyB5b3UgbWlnaHQgZ28gYWJvdXQgcmV3aWxkaW5nIHRoZSB3b3JsZCwgcmV3aWxkaW5nIHRoZSBsYW5kIHdoZXJlIHlvdSBsaXZlICAgeW91ciB0b3duLCB5b3VyIG5laWdoYm9yaG9vZCwgbWF5YmUgZXZlbiBqdXN0IHlvdXIgb3duIHlhcmQgICBpc24ndCBzbyBkYXVudGluZy4gQ29uc2lkZXIgc3RhcnRpbmcgc21hbGw6IFJlZm9yZXN0IHlvdXIgeWFyZCB3aXRoIGxvY2FsLCBuYXRpdmUgdHJlZXMgYW5kIHZlZ2V0YXRpb24uIEp1c3QgcGxhbnQgdHJlZXMgYW5kIG90aGVyIGdyZWVuZXJ5IHRoYXQgd291bGQgbmF0dXJhbGx5IGdyb3cgd2hlcmUgeW91IGxpdmUuIEdvIG9uZSBtb3JlIHN0ZXAgYW5kIHdvcmsgd2l0aCB5b3VyIG5laWdoYm9ycyBhbmQgeW91ciBjb21tdW5pdHkgdG8gdGllIHlvdXIgZWZmb3J0cyB0b2dldGhlci4gSWYgeW91IGFuZCB5b3VyIG5laWdoYm9yIGJvdGggZ28gbmF0aXZlIHdpdGggeW91ciB5YXJkcywgYW5kIHlvdSBwbGFudCBiYWNrIHRvIGJhY2ssIHlvdSd2ZSBqdXN0IGRvdWJsZWQgdGhlIHNpemUgb2YgeW91ciByZWZvcmVzdGF0aW9uIGVmZm9ydHMuClRoZSBsYXR0ZXIgc2hvdWxkIHNob3cgaGVyIG5hbWUgYXQgYmlydGgsIGhlciBiaXJ0aCBtb3RoZXIgbmFtZSBhbmQgYWRkcmVzcyBhdCB0aGUgdGltZSBvZiBiaXJ0aCwgdGhlIG5hbWUgb2YgdGhlIGJpcnRoIGZhdGhlciBpZiBrbm93biBhbmQgbGVnYWxseSBhY2tub3dsZWRnZWQgYW5kIHRoZSBuYW1lcyBvZiBoZXIgYWRvcHRpdmUgcGFyZW50cyBhbmQgdGhlIGZpbGUgbnVtYmVyL2RhdGUgaGVyIGFkb3B0aW9uIGJlY2FtZSBmaW5hbCwgd2hpY2ggd291bGQgYWxsb3cgeW91IHRvIGZpbmQgdGhpcyBmaWxlIGF0IHRoZSBsb2NhbCBjb3VydC4gCk91ciBjb3VudHJ5IGlzIGluIGFuIGVtZXJnZW5jeS4gCk91ciBEaWdpdGFsIFByb3BlcnRpZXMgbWF5IGluY2x1ZGUgbGlua3MgdG8gdGhpcmQgcGFydHkgd2Vic2l0ZXMsIHBsYXRmb3JtcywgcGx1ZyBpbnMgYW5kIGFwcGxpY2F0aW9ucy4gCkhpZ2hlc3QgcmF0ZWQgaG90ZWxzIG9uIFRyaXBBZHZpc29yLCBiYXNlZCBvbiB0cmF2ZWxsZXIgcmV2aWV3cy4KTm9uZSBvZiB0aGlzIGlzIG5ld3MuIEl0J3MgYSBzbG93IGRhbmNlIHRoYXQgaGFzIGxhc3RlZCB0aHJvdWdoIGVpZ2h0IGRpZmZlcmVudCBwcm9tIG5pZ2h0cy4gCkkgYmVnYW4gdGFsa2luZyBhYm91dCBob3BlIGluIDIwMDMsIGluIHRoZSBibGVhayBkYXlzIGFmdGVyIHRoZSB3YXIgaW4gSXJhcSB3YXMgbGF1bmNoZWQuIEZvdXJ0ZWVuIHllYXJzIGxhdGVyLCBJIHVzZSB0aGUgdGVybSBob3BlIGJlY2F1c2UgaXQgbmF2aWdhdGVzIGEgd2F5IGZvcndhcmQgYmV0d2VlbiB0aGUgZmFsc2UgY2VydGFpbnRpZXMgb2Ygb3B0aW1pc20gYW5kIG9mIHBlc3NpbWlzbSwgYW5kIHRoZSBjb21wbGFjZW5jeSBvciBwYXNzaXZpdHkgdGhhdCBnb2VzIHdpdGggYm90aC4gT3B0aW1pc20gYXNzdW1lcyB0aGF0IGFsbCB3aWxsIGdvIHdlbGwgd2l0aG91dCBvdXIgZWZmb3J0OyBwZXNzaW1pc20gYXNzdW1lcyBpdCdzIGFsbCBpcnJlZGVlbWFibGU7IGJvdGggbGV0IHVzIHN0YXkgaG9tZSBhbmQgZG8gbm90aGluZy4gSG9wZSBmb3IgbWUgaGFzIG1lYW50IGEgc2Vuc2UgdGhhdCB0aGUgZnV0dXJlIGlzIHVucHJlZGljdGFibGUsIGFuZCB0aGF0IHdlIGRvbid0IGFjdHVhbGx5IGtub3cgd2hhdCB3aWxsIGhhcHBlbiwgYnV0IGtub3cgd2UgbWF5IGJlIGFibGUgd3JpdGUgaXQgb3Vyc2VsdmVzLgpEbyB5b3UgZXZlciB3b3JyeSBhYm91dCB0cmF2ZWxsaW5nIHNvbG8/CkkgZG9uIGV2ZW4ga25vdyBpZiBpdCB0aGF0IGRpZmZlcmVudCB0aG91Z2guIFllYWgsIGhlciBzb25ncyBkb24gcmVhbGx5IHJpcCBvZmYgb3RoZXIgc29uZ3MsIGJ1dCB0aGUgYmVhdCBpbiBtb3N0IG9mIGhlciBzb25ncyBzb3VuZHMgcHJldHR5IG5vcm1hbC4gSXQgaW50ZXJlc3RpbmcgdG8gc2VlIGEgdGVlbmFnZXIgbWFrZSBtdXNpYywgaW5zdGVhZCBvZiBhIGdyb3duIHVwLCBhcyB0aGV5IGNhbiByZWxhdGUgdG8gdGhlaXIgZ2VuZXJhdGlvbiBtb3JlLCBJIGd1ZXNzLiBJJ20gbm90IHN1cmUgaG93LiBMaWtlIHdpdGggYXJ0aXN0IGxpa2UgTGFuYSBEZWwgUmF5LCBCaWxsaWUgRWlsaXNoLCBsaWwgWGFuLCB4eHh0ZW50YXRpb24gZXRjLiBoYXZlIGFsbCBnbGFtb3JpemVkIHNhZG5lc3MvZGVwcmVzc2lvbi4gVGhleSdyZSBsaWtlIHRoZSAiZW1vIiBvZiB0aGlzIGdlbmVyYXRpb24uCkJyaWRnZSBpcyB0aGUgZ2FtZSBvZiBzeW1iaW90aWMgcGFydG5lcnNoaXAsIGdyYW5kIHN0cmF0ZWd5LCBhbmQga2lsbGVyIGluc3RpbmN0LiBDcmliYmFnZSwgb24gdGhlIG90aGVyIGhhbmQsIG9mZmVycyBkaXN0aW5jdCBhbmQgbW9yZSBzdWJ0bGUgcmV3YXJkcy4gSXQgaXMgdW5saWtlbHkgdGhhdCBpdCB3aWxsIGJlY29tZSBhIHNwb3J0cyBuZXR3b3JrIGhpdCwgYnV0IGl0cyBmYW5zIHJhdGUgaXQgYXMgdGhlIGdyZWF0ZXN0IGNhcmQgZ2FtZSBldmVyIGludmVudGVkLiBDcmliYmFnZSBpcyBhIHN0YXRlbHkgcmFjZSwgYWR2YW5jaW5nIHRvIHRoZSBnb2FsIG9mIDEyMSBwb2ludHMgYnkgaW5jcmVtZW50cyBvZiBvbmUgb3IgdHdvLiAKVGhpcyB1cHNjYWxlIGVhdGVyeSBzcGVjaWFsaXplcyBpbiBmYXJtIHRvIHRhYmxlIG1lbnUgaXRlbXMgc3VjaCBhcyBzZWFyZWQgcmliZXllLCBzYWdlIHJvYXN0ZWQgQ2Fyb2xpbmEgcGhlYXNhbnQgYW5kIHNlYXJlZCBzdW5idXJzdCB0cm91dC4gClBvb3IgcGVvcGxlIGNhbnQgYWZmb3JkIHRvIGZhaWwsIHJpY2ggcGVvcGxlIGNhbiBmYWlsIHVudGlsIHRoZXkgYmVjb21lIHN1Y2Nlc3NmdWwuIFRoaXMgaXMgZXhhY3RseSBob3cgdGhleSBkbyBpdC4gT25jZSBhIHBvb3IgcGVyc29uIGZhaWxzLCB0aGF0IHVzdWFsbHkgaXQgZm9yIHRoZW0uIEJlaW5nIHJpY2ggYW5kIGJvcm4gaW4gYSByaWNoIGZhbWlseSBoYXMgaXRzIGFkdmFudGFnZXMuIFRoZXkgY2FuIHN0YXJ0IHdoYXRldmVyIHZlbnR1cmUgdGhleSB3YW50IGFuZCBpZiBpdCBmYWlscz8gU3RhcnQgYSBuZXcgb25lLiBTZXJpb3VzbHksIGFueW9uZSBjYW4gYmVjb21lIHN1Y2Nlc3NmdWwgd2l0aCBhbG1vc3QgdW5saW1pdGVkIGZ1bmRpbmcsIGJlY2F1c2UgeW91IGNhbiBhZmZvcmQgdG8gZmFpbCB1bnRpbCB5b3UgaGl0IHRoYXQgc3dlZXQgc3BvdC4gVGhhdCB3aHkgbm8gb25lIHRhbGtzIGFib3V0IGZhaWx1cmVzLCBiZWNhdXNlIGF0IHRoZSBlbmQgb2YgdGhlIGRheSBpdHMgbGl0ZXJhbGx5IGJhY2sgdG8gdGhlIGRyYXdpbmcgYm9hcmQgYmVjYXVzZSBpIHN0aWxsIGhhdmUgbW9uZXksIGkgc3RpbGwgaGF2ZSBpbnZlc3RtZW50cywgYW5kIGkgc3RpbGwgaGF2ZSBwcm9wZXJ0eS4KSGF2ZSByb21hbmNlZCBJc2FiZWxhLCByZWFsbHkgbGlrZWQgdG9vLiBJIHRoaW5rIGl0IGRldmVsb3BzIHJlYWxseSB3ZWxsLiAKQW5kIHNvIHRoYXQncyBzb3J0IG9mIHdoYXQgdGhleSBkaWQuLiAKU28gaG93IGFib3V0IHdlIHN0b3AgZmx5aW5nIGludG8gZmFyYXdheSBsYW5kcyBmb3IgaG9saWRheXMgYXMgYWlyY3JhZnQgYXJlIGhvcnJpYmxlIGZvciB0aGUgZW52aXJvbm1lbnQ/P05vIHRob3NlIHBlb3BsZSB3YW5uYSBlbmpveSBsaXZlIHJpZ2h0IG5vdyBhbmQgaW5zdGVhZCB3ZSAic3RvcCIgY2xpbWF0ZSBjaGFuZ2UgYnkgbWVzc2luZyB3aXRoIHRoZSBmdXR1cmUgZWNvbm9teS4gVGhpcyB3aWxsIGJlIHRoZSB3b3JzdCBvdXRjb21lIGZvciBteSBnZW5lcmF0aW9uLldlIGhhdmUgYSBidW5jaCBvZiBwZW9wbGUgaGVyZSBjcmVhdGluZyB0aGlzIGN1bHQgb2YgcmVuZXdhYmxlIGVuZXJnaWVzLiAKV2lsbCBjb250aW51ZSB0byBnZXQgcmljaGVyIGV2ZW4gYXMgdGhlIHJlc3Qgb2YgdXMgZ2V0IHBvb3JlckkgbG92ZSBCYXJhY2sgT2JhbWEuIApNb25leSBhbmQgY291bnRyeSBydWdieSBsZWFndWUKV2hhYWFhYWE/IS4gClllcywgeW91IGNhbiA6KSB5b3UgaGF2ZSBhbHJlYWR5IG1hZGUgdGhlIG1vc3QgaW1wb3J0YW50IHN0ZXBzLiAKQW5kIGFwcGFyZW50bHkgZm9yIG90aGVyIHBlb3BsZSwgYmVjYXVzZSBJIGhhdmUgYXdlc29tZSBjbGllbnRzIS4gClRoZSBMb2NhbCA5OCBsZWFkZXIgdXJnZWQgTW95bGFuIHRvIG1vdmUgaGlzIGZhbWlseSB0byBQZW5uc3BvcnQgYW5kIHNldCB1cCBoaXMgY2hpcm9wcmFjdGljIG9mZmljZSB0aGVyZSBpbiB0aGUgZWFybHkgMjAwMHMsIHVuaW9uIHNwb2tlc21hbiBGcmFuayBLZWVsIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIApUaGUgdGhpbmcgdGhhdCBpcmtzIHBlb3BsZSBidXQgdGhhdCB0aGV5IGNhbiBuZXZlciBhZG1pdCB0byBpcyB0aGF0IHRoZXkgd2FudCB0aGUgZnJlZWRvbSB0byBoYXZlIHRoZWlyIG93biBjaGlsZHJlbiBlZHVjYXRlZCBhcyB0aGV5IHNlZSBmaXQsIGJ1dCB3YW50IHRoZSBjaGlsZHJlbiBvZiBvdGhlciBwZW9wbGUgdG8gYmUgaW5kb2N0cmluYXRlZCBpbnRvIHRoZWlyIG93biBiZWxpZWYgc3lzdGVtcy4gVGhpcyBjYXNlIGlzIG5vIGRpZmZlcmVudC4KV2lsbGlhbSBLZXBuZXIgYW5kIE1ycy4gV2lsICBsaWFtIFNoaW5kbGVkY2tlciB2aXNpdGVkIFR1ZXNkYXkgZXZlbmluZyBhdCB0aGUgaG9tZSBvZiB0aGUgZm9ybWVyJ3MgcGFyZW50cywgTXIuIEFuZCBNcnMuIApIb3cgdG8gcGxheSBmcm9tIHRhYmxldD8KSSdtIGhhcHB5IHRvIGtub3cgeW91IGNvbm5lY3RlZCB3aXRoIG91ciBtYW5hZ2VtZW50IHRlYW0gYW5kIGFzIHlvdSBtZW50aW9uZWQsIHdlIHdpbGwgYmUgYXR0ZW5kaW5nIHRvIHRoZXNlIGlzc3Vlcy4gCk5vIG1vYnN0ZXJzIGNoZWF0cywgdGhlcmUgYXJlIHNpbXBseSBoaWRkZW4gd2F5cyBvZiBhZHZhbmNpbmcgaW4gbGV2ZWxzLCBmb3IgaW5zdGFuY2UsIGlmIHlvdSBnZXQgYSBnb29kIGRlZmVuc2UgYW5kIGEgbG90IG9mIGRlZmVuc2l2ZSBnZWFyIHRoZW4gcHV0IHlvdXJzZWxmIG9uIHRoZSBoaXQgbGlzdCBtYW55IHBlb3BsZSB3aWxsIGF0dGFjayB5b3UsIGdpdmluZyB5b3Vyc2VsZiB0b25zIG9mIHhwLCBidXQgaWYgeW91IGRvIHRoaXMsIHlvdSBoYXZlIHRvIGdvIHRvIHRoZSBob3NwaXRhbCBhbmQgaGVhbCBBTE9UISBhbm90aGVyIGdvb2Qgd2F5IGlzIGdldHRpbmcgYSB2aXNhIG9uIHRoZSBnb2RmYXRoZXJzIGxpc3QgdGhlbiBzcGVuZGluZyBtb25leSBvbiBpdCwgZm9yIGV2ZXJ5IGRvbGxhciB5b3Ugc3BlbmQgeW91IGdldCAxIGdvZGZhdGhlciBwb2ludCwgc28gaXQgd291bGQgYmUgZ29vZCB0byBwYXkgc29tZSBiaWxscyB3aXRoIHRoZW4gdXNlIHRoZSBodW5kcmVkcyBvciB0aG91c2FuZHMgb2YgcG9pbnRzIG9uIG1vcmUgZW5lcmd5IG9yIGNhc2gsIGxpa2UgIjB3bnRsdWx6IiBkaWQgdG8gcmVhY2ggaGlzIHBvc2l0aW9uIHdpdGhpbiB0d28gZGF5cy4gaG9wZSBpIGhlbHBlZC4gLiB0aGUgbWF4IGFtb3VudCBvZiBtb2JzdGVycyBkZXBlbmRzIG9uIHlvdXIgbWlzc2lvbnMsIGlmIHlvdSBkbyA1MDAgbWlzc2lvbnMgaXQgaW5jcmVhc2VzIHRvIDFrIG1heCBtb2Igc2l6ZSB0aGVuIGl0IGdvZXMgdG8gMS41ayBhdCAxayBtaXNzaW9ucyBhbmQgc28gb24uIC4KQSBmZXcgbmlnaHRzIGxhdGVyLCBJIGhlYXIgbWV3bGluZyBmcm9tIG5laWdoYm9yIHBvcmNoLiBJdCB0aGUgb3RoZXIgY2F0LiAKU3VucmlzZSBhbmQgc3Vuc2V0ICAgSG9sZCB5b3VyIGhhbmQgc28gdGhhdCB0aGUgcGFsbSBpcyBhYm92ZSAoYnV0IG5vdCB0b3VjaGluZykgdGhlIGJhYnkncyBncm9pbiBhbmQgdGhlIHVwcGVyIGhhbGYgb2YgYWxsIHRoZSBmaW5nZXJzIGlzIHJlc3Rpbmcgb24gdGhlIHBvaW50IGF0IHRoZSB2ZXJ5IHRvcCBvZiB0aGUgYmFieSdzIHJpZ2h0IHRoaWdoICh5b3VyIGhhbmQgc2hvdWxkIGJlIGRpYWdvbmFsKS4gClN0ZWxsYVJvc2U1MzM1ICA0OSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkNhbm5vdCBhZmZvcmQgdG8gYWxsb3cgaGFsZiBvZiB0aGUgY291bnRyeSB0byBmbGlydCB3aXRoIGZhc2Npc20uIApUaGUgY3VycmVudCBjb25mbGljdCBpbiBVa3JhaW5lIGlzIGp1c3QgYW5vdGhlciByZWFzb24gZm9yIEV1cm9wZWFuIGNvdW50cmllcyB0byBkZXZlbG9wIHRoZWlyIG93biBzaGFsZSBnYXMgaW5kdXN0cmllcywgTW9sY2hhbm92IHNheXMuIApFdmVyeW9uZSBrbmV3IHRoYXQgd2hlbiBhIG1ham9yIHN0b3JtIGhpdCwgdGhlIGNpdHkgd291bGQgZHJvd24uIApUaGVpciBiZWxpZWYgcG93ZXJzIHRoZWlyIGludGVudCBhbmQgd2lsbDsgYnkgZGlzYmVsaWV2aW5nIHNvIHRob3JvdWdobHkgdGhlaXIgaW50ZW50IG92ZXJwb3dlcnMgdGhlIGludGVudCBvZiB0aGUgc3BlbGwgY2FzdGVyIGJlY2F1c2UgdGhlIGN5bmljIGhhcyBub3QgRG91YnQgd2hpbGUgbW9zdCBvY2N1bHRpc3RzIGhhdmUgc29tZSAiZG91YnQiLCBzb21lIGJlbGllZiB0aGF0IHRoZSBzcGVsbCBtYXkgbm90IHdvcmsgZXhhY3RseSwgbWF5IG5vdCBoYXBwZW4gd2hlbiB0aGV5IHdhbnQuIApXaGVuIGRpZCB0aGV5IGV4cGxpY2l0bHkgc2F5IHRoYXQgdGhleSBoYXRlIENvbG9yYWRvL0RlbnZlciBhcyBhIHdob2xlIGJlY2F1c2Ugb2YgdGhpcyBvbmUgdGhpbmc/IFRoYXQgYSBodWdlIGxlYXAgdG8gdGFrZSBiYXNlZCBvZmYgb2Ygbm8gcGVyc29uYWwgaW5mb3JtYXRpb24gb24gYmVoYWxmIG9mIHRoZSBPUC4gCkZhdGZhdDY2NCB1CkJvaWxpbmcgdGhlIGZyb2csIHNvIHRvIHNwZWFrLiAKQWZ0ZXIgeW91J3ZlIGZvdW5kIHRoZSBhcHBsaWNhdGlvbiBqdXN0IGNsaWNrIG9uIGl0IGFuZCB3YWl0IHVudGlsIGl0IGRvd25sb2FkcywgYWZ0ZXIgd2hpY2ggaXQgd2lsbCBhdXRvbWF0aWNhbGx5IGluc3RhbGwgYW5kIGFwcGVhciBpbiB5b3VyIGhvbWUgc2NyZWVuLlRoZSAgYmV0dGluZyBhcHAgb24gdGhlIG90aGVyIGhhbmQgcmVxdWlyZXMgYSBkaWZmZXJlbnQgYW5kIHNpbXBsZXIgcHJvY2VkdXJlLiAKTG91aXMgUGFzcyBDaHJpc3RpYW4gYnJpZGdlLiBCZWdpbm5pbmcgYXQgdGhlIGZvb3Qgb2YgZWl0aGVyIGJyaWRnZSwgeW91J2xsIGJlIG91dHNpZGUgd2Fsa2luZyBmb3IgYSB3b3J0aHkgY2F1c2UuIApUaGUgUFQgZXJhIG1ha2VzIGZvciB0aGUgbW9zdCBpbnRlcmVzdGluZyBiYWNrZHJvcCB3aGVuIGl0IGNvbWVzIHRvIFRWIHNob3dzLCBub3ZlbHMsIGNvbWljcywgYW5kIGVzcGVjaWFsbHkgZ2FtZXMuIFRoZSBPVCBoYXMgYSBiZXR0ZXIgdHJhY2sgcmVjb3JkIHdpdGggZmlsbXMgKFBUOiAxLzMgZ29vZCBmaWxtcywgT1Q6IDUvNSBnb29kIGZpbG1zLCBTVDogMC8yIGdvb2QgZmlsbXMpLCB0aGUgUFQgaGFzIGEgYmV0dGVyIHRyYWNrIHJlY29yZCB3aXRoIG90aGVyIHN1cHBvcnRpbmcgY29udGVudC4uIApBbmQgaWYgeW91IGxpdmUgaW4gYW4gYXJlYSB3aGVyZSB5b3UgY2Fubm90IGRyaXZlIHRvIGEgcG9rZXIgcm9vbSwgcGxheWluZyBvdmVyIHRoZSBJbnRlcm5ldCBiZWNvbWVzIGV2ZW4gbW9yZSBhdHRyYWN0aXZlLiAKQW5kIHRoYXQgc3Vja3MuLiAKTW9zdCBob21lIHVzZSBwb2tlciBjaGlwcyBhcmUganVzdCBhIGNvbXBvbmVudCBvZiB0aGUgZ2FtZSBidXQgdGhlc2UgbmV3IGNoaXBzIGFyZSBhIHBhcnQgb2YgdGhlIGVuam95bWVudCBvZiB0aGUgZ2FtZS4gUGxheWVycyBhcmUgZXhjaXRlZCB3aGVuIHRoZXkgaGVhciB0aGF0IHlvdSB3aWxsIGJlIHBsYXlpbmcgd2l0aCBhdXRoZW50aWMgc3R5bGUgY2hpcHMgaW4geW91ciBwb2tlciBnYW1lLiBZb3UnbGwgYmUgcHJvdWQgd2hlbiB5b3Ugc2V0IHRoZW0gb24geW91ciB0YWJsZS4uIApNVFQgZGVmaW5pdGVseSBoYXZlIG1vcmUgdmFyaWFuY2UgdGhhbiBjYXNoIGdhbWVzLCBidXQgZG9lcyBsaW1pdCBvciBubyBsaW1pdCBoYXZlIG1vcmUgdmFyaWFuY2U/IEkgYXJndWUgYSBMQUcgcGxheSBzdHlsZSBvbiBubyBsaW1pdCBob2xkZW0gaGFzIHRoZSBtb3N0IHZhcmlhbmNlLgpJbiB0aGVpciBjYXBhYmxlIGhhbmRzIChmaWd1cmF0aXZlbHkgYW5kIGxpdGVyYWxseSksIFNhbmN0dWFyeSdzIGN1c3RvbWVycyByZWNlaXZlIG9uZSBvbiBvbmUgYXR0ZW50aW9uIGluIHRoZSB3YXJtbHkgbGlnaHRlZCBzcGFjZS4gCkZhbGxvdXQgMyB3aWxsIGJlIGV4dHJlbWVseSBiZXR0ZXIgdGhlbiBmYWJsZSAyLCBmYWJsZSAyIGlzIGEgcmVndXJnaXRhdGVkIGZhYmxlIDEgd2l0aCBlYnR0ZXIgZ3JhcGhpY3MuIGZhbGxvdXQgMyBpcyBhIHdob2xlIG5ldyB3b3JsZCB3aG9zZSBtYWluIHN0b3J5IGhhcyBtb3JlIGhvdXJzIG9mIGdhbWVwbGF5IHRoZW4gYWxsIHRoZSBtaXNzaW9ucyBjb21iaW5lZCBpbiBmYWJsZSAyLCBhcyB3ZWxsIGFzIGEgbW9yZSBpbW1lcnNpdmUsIGF3ZXNvbWVyIHdvcmxkIHdlbGwuIGFsbCBmYWxsb3V0IDMgaXMgdG8gbWUgaXMgb2JsaXZpb24gcmVtYWRlIHdpdGggYmV0dGVyIGdyYXBoaWNzLCBhbmQgZ3Vucy4geW91IGNhbnQgcmVhbGx5IGNvbXBhcmUgdGhlIHR3byBiZWNhdXNlIHRoZXkgYXJlIG1hZGUgYnkgMiBjb21wbGV0ZWx5IGRpZmZlcmVudCBjb21wYW55cyBhbmQgYmVzaWRlcyBpbiBmYWJsZSAyIHlvdSBjYW4gZG8gYW55dGhpbmcgd2VsbCBhbG1vc3QgaW4gZmFjdCB5b3UgY2FuIGV2ZW4gaGF2ZSBhIGtpZC4gbm93IHlvdSBjYW50IHNheSB0aGF0IGFib3V0IGZhbGwgb3V0IDMgY2FuIHlvdT8gKEZ1bGwgQW5zd2VyKQpWaW50YWdlIG1hbGwgaW4gam9uZ25vIGlkIGZpdCBpbiBzb21ld2hlcmUuIApCZW5lZGljdCBwYXJpc2ggd2lsbCBob2xkIGl0cyAyMXN0IGFubnVhbCBjb21tdW5pdHkgZmVzdGl2YWwgYXQgOXRoIGFuZCBvaGlvIHN0cmVldHMgaW4gZG93bnRvd24gdGVycmUgaGF1dGUuIApTYXR1cmRheSBldmVuaW5nJ3MgQ2xhc3MgNEEgYm95cyBiYXNrZXRiYWxsIHN0YXRlIGNoYW1waW9uc2hpcCBnYW1lIHdhcyBiaWxsZWQgYXMgYSBjbGFzaCBiZXR3ZWVuIHR3byBwb3dlcmhvdXNlcyB0aGF0IGhhdmUgc3BlbnQgdGhlIHBhc3QgY2FsZW5kYXIgeWVhciBvbiBhIGNvbGxpc2lvbiBjb3Vyc2UgdG93YXJkIG9uZSBhbm90aGVyLiBMaWtlIHJveWFsIHNpYmxpbmdzIHdhcnJpbmcgb3ZlciBhIGJpcnRocmlnaHQsIExvbmdtb250IGFuZCBMZXdpcyBQYWxtZXIgYm90aCByb3NlIHVuYmVhdGVuIHRvIHRoZSB0b3Agb2YgdGhlIDRBIGNsYXNzaWZpY2F0aW9uIGFuZCB0aHJldyBldmVyeXRoaW5nIHRoZXkgaGFkIGF0IGV2ZXJ5b25lIHdoaWxlIHByZXAgYmFza2V0YmFsbCBmYW5zIHdhdGNoZWQgZnJvbSBhYm92ZSBpbiB0aGUgRGVudmVyIENvbGlzZXVtIHN0YW5kcywgYXMgd2VsbCBhcyBmcm9tIGFsbCBjb3JuZXJzIG9mIENvbG9yYWRvLiAKR29vZCBsdWNrIGxpdmluZyBpbiBhIHJ1cmFsIGFyZWEgd2l0aCBubyBsYXJnZSBjaXRpZXMgb3IgZ292ZXJubWVudCBodWJzIHRvIHJ1biB5b3VyIG5hdGlvbiBhbmQgeW91ciBjaXZpbGl6YXRpb24gZm9yIHlvdS4uIApZb3UgY2FuIHN0YXJ0IHlvdXIgbGVzc29ucyB3aXRoIGEgY3Vyc29yeSBnYW1lIG92ZXJ2aWV3LiAKVGhlIG9ubHkgcXVlc3Rpb24gSSBoYWQgbGVmdCwgYW5kIG1heWJlIG1vc3QgaW1wb3J0YW50IHRvIG1lIG9mIGFsbCwgd2FzIHdoZXRoZXIgb3Igbm90IEkgd2FzIGFjdHVhbGx5IG1pc3Npbmcgb3V0IG9uIHNvbWV0aGluZyBieSBub3QgYmVpbmcgdm9jYWwuIFNoZSBleHBsYWluZWQgdGhhdCBpZiB5b3Ugbm90IG1ha2luZyBzb3VuZHMsIHRoZW4geW91IHByb2JhYmx5IG5vdCBicmVhdGhpbmcgdmVyeSBtdWNoLCBhbmQgYnJlYXRoIGlzIGFic29sdXRlbHkgY3JpdGljYWwgZm9yIGFuIGV4cGFuZGVkIG9yZ2FzbWljIGV4cGVyaWVuY2UuIHNleCBpcyBhYm91dCBlbmVyZ3kgYW5kIHNvdW5kIGJyaW5ncyBlbmVyZ3ksIHNoZSBzYWlkLiBtZWFuIHRoYXQgaW4gdGhlIHBoeXNpY3Mgc2Vuc2UsIG5vdCBpbiB0aGUgd29vIHdvbyBzZW5zZS4gSSBhbHdheXMgZmVsdCB0aGF0IEkgc2hvdWxkIG1ha2Ugc291bmRzIG9ubHkgaWYgdGhleSB3ZXJlIHNvIHBvd2VyZnVsIHRoYXQgdGhleSBjb3VsZCBub3Qgb3RoZXJ3aXNlIGJlIHN0b3BwZWQgdGhhdCB0aGUgb25seSB3YXkgSSBmZWx0IHRoYXQgbXkgc2V4IHNvdW5kcyB3b3VsZCBiZSBhdXRoZW50aWMuIFRoZSBwaHlzaWNhbCBzZW5zYXRpb25zLCBpbiBteSBtaW5kLCBoYWQgdG8gbGVhZCB0byB0aGUgYXVkaWJsZS4KVGhlIGNyaXNpcyB3ZSBmYWNlIGlzIG1vcmUgc2VyaW91cyB0aGFuIHdlIHRoaW5rLiAKRWF0IGxpa2UgaXQncyB5b3VyIGpvYi4gClRoaXMgaXMgdGhlIG9uZSBwYXJ0IG9mIHRoZSBzdG9yeSB0aGF0IEkgZmVlbCBsaWtlIHRoZSBzaG93IGdvdCBhIGxpdHRsZSB3cm9uZy4gSW4gdGhlIGJvb2ssIENhbWlsbGUgZGlzY292ZXJzIHRoYXQgQW1tYSBpcyB0aGUga2lsbGVyIHdoZW4gQW1tYSdzIGZyaWVuZCBzaG93cyB1cCBtdXJkZXJlZCBpbiBhIHdheSB0aGF0J3MgYmFzaWNhbGx5IGlkZW50aWNhbCB0byBOYXRhbGllIGFuZCBBbm4uIApIYXMgYW55b25lIGJlY29tZSBhbiBhZGRpY3Q/IExpa2UgYW55IGNvbXBldGl0aXZlIGFjdGl2aXR5LCBwb2tlciBoYXMgdGhhdCByaXNrIG9mIHJlY2tsZXNzbmVzcyBhcyB3ZWxsLiBJbiB0aGUgY291cnNlLCB3ZSBkaXNjdXNzIGJlaGF2aW9yYWwgcmlza3MgYXNzb2NpYXRlZCB3aXRoIHBva2VyLiBXZSBoYXZlIGEgY291cnNlIHBlZXIgcmV2aWV3IHByb2Nlc3MgYXQgSUlNIEtvemhpa29kZSB3aGljaCBoYXMgaGVscGVkIHNoYXBlIGFuZCBzdHJlbmd0aGVuIHRoZSBjb3Vyc2UuIApCdXQgb24gaW5jb21lLCBub3QgdGhlaXIgd2VhbHRoQ291bmNpbCB0YXggb24gYSAxN20gbHV4dXJ5IG1hbnNpb24gaW4gQmVsZ3JhdmlhLCBMb25kb24/IDEsMzc2LiBQaG90b2dyYXBoOiBUb2xnYSBBa21lbi9BRlAvR2V0dHkgSW1hZ2VzV2Uga25vdyB0aGF0IGdpYW50IG11bHRpbmF0aW9uYWxzIGFyZSBlbmdhZ2VkIGluIGluZHVzdHJpYWwgc2NhbGUgdGF4IGF2b2lkYW5jZS4gV2Uga25vdyBmcm9tIHRoZSBQYW5hbWEgYW5kIFBhcmFkaXNlIHBhcGVycyBob3cgc29tZSBpbmRpdmlkdWFscyB3aWxsIHVzZSBldmVyeSBvZmZzaG9yZSB0cmljayB0byBkb2RnZSB0YXhlcy4gCkJhY2sgdG8gQm9jaHkgcGxheWluZyBLbGVza28sIER1cmhhbSwgYW5kIFJvYmVydHMgbGlrZSB0aGVyZSBubyB0b21vcnJvdyAoYXQgbGVhc3QgaGUgcmlnaHQgYWJvdXQgdGhhdCEpLiBCYWNrIHRvIGFub3RoZXIgZGVjZW50IHBpdGNoaW5nIGVmZm9ydCB3YXN0ZWQgYnkgU2FiZWFuIHNsdWdzIHNsZWVwd2Fsa2luZyB0aHJvdWdoIGFub3RoZXIgZ2FtZS4gVGhpcyBpcyBhIHB1dHJpZCBzdGV3IHlvdSBjb29rZWQgdXAsIEJyaWFuLCBhbmQgbm93IHlvdSBoYXZlIHRvIGVhdCBpdC4gCllvdSByZWFsbHkgZ290dGEgaGF2ZSB0aGUgcmlnaHQgbWVudGFsaXR5IGFuZCBsZWFybmluZyBhdHRpdHVkZSwgYW5kIHRoZW9yZXRpY2FsbHkgbW9zdCBwZW9wbGUgY291bGQgbGVhcm4gdGhpcyBidXQgYSBsb3Qgb2YgcGVvcGxlIGp1c3QgZ2V0IHN0dWNrIGF0IGEgY2VydGFpbiBwb2ludC4gCkkgbG92ZSBldmVyeSBzaW5nbGUgcHJvZHVjdCwgYW5kIEkgd291bGQgYnV5IHRoZW0gYWdhaW4gZ2l2ZW4gYSByZWRvIG9uIGVhY2ggcHVyY2hhc2UuIEJ1dCBJIGhhdmUgZnJ1c3RyYXRpb25zIHJlbGF0ZWQgdG8gQXBwbGUncyBwb2xpY3kgb24gZWFjaCBwcm9kdWN0Li4gClRvIG1ha2UgeW91ciBmaXJzdCBhbmFsIHNleCBleHBlcmllbmNlIGEgZ3JlYXQgb25lLCBmb2xsb3cgbXkgMTAgU3RlcHMgdG8gR3JlYXQgRmlyc3QgVGltZSBBbmFsIFNleC4gTWUgYW5kIG15IGh1c2JhbmQgaGFkIHRyaWVkIGFuYWwgc2V4IG1hbnkgdGltZXMgYmVmb3JlIGJ1dCBpdCBhbHdheXMgaHVydCBvaCBzbyBiYWQuIEFuZCBpIGtuZXcgaG93IG11Y2ggaGUgcmVhbGx5IHdhbnRlZCBpdCBzbyBpIHdhcyBsb29raW5nIGZvciBoZWxwIGFuZCBpIHdvbmRlcmVkIHVwb24gdGhpcyBwYWdlLiAKTWFueSB0aGluZ3Mgd2lsbCBnbyBpbnRvIGVhY2ggZGVjaXNpb24geW91IG1ha2UsIHN1Y2ggYXMgd2hvIGVudGVycyB0aGUgcG90IGJlZm9yZSB5b3UsIGlmIHRoZSBwb3QgaGFzIGJlZW4gcmFpc2VkLCBob3cgbG9vc2Ugb3IgdGlnaHQgdGhlIG90aGVyIHBsYXllcnMgYXJlLCBhbmQgeW91ciB0YWJsZSBpbWFnZS4gClJlc2VhcmNoZXJzIGhhdmUgcmVjZW50bHkgc2hvd24gdGhhdCB0aGUgcHJlc2VuY2Ugb2YgZ3V0IG1pY3JvYmlvdGEgZHVyaW5nIGVhcmx5IGRldmVsb3BtZW50IGluZmx1ZW5jZXMgdGhlIGJyYWluJ3MgbmV1cmFsIGNvbm5lY3Rpdml0eSByZWxhdGVkIHRvIGFueGlldHkgYW5kIGRlcHJlc3Npb24uIApUaGUgYmlrZXIgcm9kZW8gZXZlbnRzIGluY2x1ZGUgdGhlIHNsb3cgcmFjZSwgcGxhbmsgcmFjZSwgYmFsbG9vbiB0b3NzLCB3ZWVuaWUgYml0ZSwgY29uZSByYWNlIGFuZCB3YXRlciByYWNlLiBNb3JlIHRoYW4gJDIsMDAwIGluIHByaXplcyBpcyBhdmFpbGFibGUgdG8gdGhlIHdpbm5lcnMuCllvdSBhcmUgZGVzY3JpYmluZyBleHBsb2l0YXRpdmUuIE1lYW5pbmcgdGhhdCBJIHdpbGwgc2VlIHdoYXQgeW91IGFyZSBkb2luZyB3cm9uZyBhbmQgYWRqdXN0IG15IHN0cmF0ZWd5IGFjY29yZGluZ2x5LiBJZiB3ZSBhcmUgcGxheWluZyBSb2NrIFBhcGVyIFNjaXNzb3JzIGFuZCB5b3Ugb25seSB1c2Ugcm9jaywgSSB3b3VsZCB0aGVuIGFkanVzdCBieSBvbmx5IHRocm93aW5nIHBhcGVyLiBHVE8gZG9lcyBub3QgYWRqdXN0LCBpdCBpcyBhbHdheXMgY29tcGxldGVseSBiYWxhbmNlZCBhbmQgd2lsbCBwbGF5IHRoZSBzYW1lIHN0cmF0ZWd5IGV2ZXJ5IHRpbWUKVExEUjogeWVzIGl0IGlzIHBvc3NpYmxlIGZvciBjcnlzdGFscyB0byBmb3JtIGlmIHlvdSBjb29sIGEgc2F0dXJhdGVkIHNvbHV0aW9uLCBidXQgaWYgeW91J3JlIG1ha2luZyBhIGRyaW5rIHRoZW4gdHlwaWNhbGx5IHRoZSBzb2x1dGlvbiB3b24ndCBiZSBzYXR1cmF0ZWQgYW5kIHlvdSB3b24ndCBzZWUgYW55IGNyeXN0YWxzLgpFKSBJIG5vdCBkb25lICJmaXZlIG1pbnV0ZXMgb2YgcmVzZWFyY2giIChvZGRseSBlbm91Z2ggb24gb3BpbmlvbnMgb3IgbWF0dGVycyBvbiB3aGljaCBJIG5vdCBwb3N0ZWQsIGJ1dCBpbiBmYWN0IGhhdmUgYmVlbiBpbnRyb2R1Y2VkIGJ5IHlvdSwgYWdhaW4sIHRocm91Z2ggYXNzdW1wdGlvbikuCkFpcmVkIFNlcHRlbWJlciAyMSwgMjAwOCAgIDEzOjAwIEVUCk91ciBpbWFnaW5hdGlvbnMgcHJvdmlkZSB0aGUgbWlzc2luZyBleHByZXNzaW9uLCBzdXJlIHRvIGJlIGFwcGVuZGVkIGluIGEgbGF0ZXIgcHJpbnRpbmc6IE5vdyBhIE1ham9yIE1vdGlvbiBQaWN0dXJlLiBBbWF6aW5nIHdpdGggdGhpcyBjb3ZlciBpdCBpc24ndCB5ZXQuIApMZXQgaGVyIGtub3cgdGhhdCBzaGUgaXMgZ2V0dGluZyBiZXR0ZXIuIFJlbWluZCBoZXIgb2Ygd2hhdCBzaGUgY2FuIGRvIGZvciB0aGUgYmFieSwgYW5kIG9mIGFsbCB0aGUgdGhpbmdzIHNoZSBoYXMgZG9uZSBmb3IgaGltL2hlciB0aGF0IG5vIG9uZSBlbHNlIGNvdWxkLiAKKFBob3RvOiBTYWxlZW4pIENDUiwgd2hpbGUgb3RoZXIgc3BvcnRzIGNhciBtYXJxdWVzIGNvbnRpbnVlIHRvIGluY3JlYXNlIHRoZSBhbnRlIGluIHRoZSBob3JzZXBvd2VyIHBva2VyIHBsYXkuLiAKVG91dGVmb2lzLCBsJ2FjcXVpc2l0aW9uIGRlIGNldHRlIHBlcnNvbm5hbGl0IHBldXQgcmVtb250ZXIgYXZhbnQgbGEgbmFpc3NhbmNlLCAgcGFydGlyIGRlIGxhIGNvbmNlcHRpb24uICBJbmZhbnMgY29uY2VwdHVzIHBybyBuYXRvIGhhYmV0dXIgcXVvdGllcyBkZSBjb21tb2RvIGVqdXMgYWdpdHVyICwgYydlc3QgIGRpcmUgIGwnZW5mYW50IGNvbnUgZXN0IGNvbnNpZHIgY29tbWUgbiBjaGFxdWUgZm9pcyBxdWUgdGVsIGVzdCBzb24gaW50cnQgLiAKU28gb2Zjb3Vyc2UgeW91IGdvaW5nIHRvIHRha2UgcGVyc29uYWxpdHksIHZhbHVlcyBhbmQgc3VjaCBtb3JlIGludG8gYWNvdW50LiAKSSByZWNhbGwgYSBtb3ZpZSBxdW90ZSB0aGF0IGVzY2FwZXMgbWUgd2hlcmUgc29tZW9uZSBpcyBleHBsYWluaW5nIGhvdyBhIGdvb2QgdGVzdCBvZiBhIHJlbGF0aW9uc2hpcCBpcyBjb21mb3J0IGluIGJlaW5nIGFibGUgdG8ganVzdCBzaHV0IHRoZSBmdWNrIHVwIGFuZCByZWxheCBpbiBzaWxlbmNlLiAKVGhvc2Ugd2l0aCBkZWx1c2lvbnMgb2YgYW5pbWUgKFRob3VnaC4gYWN0dWFsbHkgSSBzdWdnZXN0IGluIHNvbWUgY2FzZXMgaXQgY291bGQgYmUgZ29vZCB0byB2aXNpdCBzbyB0aGV5IHNlZSBKYXBhbiBpbiBhIHJlYWxpc3RpYyB3YXkuKQpIZSB3aWxsIGJlIG1pc3NlZCBieSBtYW55IGZyaWVuZHMsIGFuZCByZWxhdGl2ZXMgaW4gU2FuIEZyYW5jaXNjbywgUGhpbGFkZWxwaGlhIFVTQSwgYW5kIGluIENoaW5hLiBIZW5yeSB3YXMgcHJlZGVjZWFzZWQgYnkgaGlzIHdpZmUsIEp1ZHkgWWVlOyBoaXMgcGFyZW50czogTWVlIEx1biBhbmQgUXVhaSBTaW5nIFllZTsgYnJvdGhlciwgSGFyb2xkIFllZTsgc2lzdGVyLCBZZWUgWWltIE1haTsgaGlzIGdyYW5kY2hpbGRyZW46IENocmlzdG9waGVyIFNvcmVuc2VuIGFuZCBNYXJpbHluIFdhcmQgYW5kIGhpcyBuaWVjZSdzIGh1c2JhbmQsIFF1aW5uIEhhbGwuIEhlbnJ5J3MgZmFtaWx5IHdpc2hlcyB0byBleHByZXNzIHRoZWlyIHNpbmNlcmUgZ3JhdGl0dWRlIHRvIHRoZSBOdXJzZXMsIE1lZGljYWwgU3RhZmYgYW5kIERvY3RvcnMgYXQgdGhlIENoaW5vb2sgUmVnaW9uYWwgSG9zcGl0YWwuIApUdWZmLCBDYWRyaW4gVmFuZGVuaGV1dmVsLCBLZXZlbiBXb2p0b3dpY3osIEp1c3RpbiBTY2htaWR0LCBNYXJjbyBaYXBwb25lLCBCcnljZSBIZXJiYSBhbmQgQ29sdG9uIEdhcm5lci4gQ2Fyc29uIER1ZmYgd2FzIGluIG5ldCBmb3IgdGhlIHdpbi4gClN5YmlsIHdhcyB2ZXJ5IGZsYXNoeSBhbmQgdm9jYWwgYWJvdXQgZXZlcnl0aGluZyBzaGUgZGlkIHNvY2lhbGx5IGFuZCBwb2xpdGljYWxseS4gCiJUaGV5IGNhbiBiZSBwYXJhbm9pZC4gVGhleSBjYW4gYmUgaGVhcmluZyB2b2ljZXMsIHNlZWluZyBoYWxsdWNpbmF0aW9ucy4gVGhleSdyZSBvZnRlbiB2ZXJ5IGlycml0YWJsZSBhbmQgYWdpdGF0ZWQuIFRoZXkgY2FuIGJlIHRocmVhdGVuaW5nIG9yIHZpb2xlbnQsIiBzYXlzIEFubmEgTmF6aWYsIGRpcmVjdG9yIG9mIGVtZXJnZW5jeSBwc3ljaGlhdHJ5IGF0IFN0LiBQYXVsJ3MuICJPdXIgc3lzdGVtIGlzIG5vbiBpZGVhbCBmb3IgcHN5Y2hpYXRyaWMgcGF0aWVudHMuIFdlJ3JlIGJhc2ljYWxseSBhbHdheXMgZG9pbmcgdGhlIGJlc3Qgd2UgY2FuIGluIGxlc3MgdGhhbiBpZGVhbCBzaXR1YXRpb25zIHdpdGggbGVzcyB0aGFuIGlkZWFsIHJlc291cmNlcy4KSWYgeW91IHdhbnQgdG8gYmUgc2V4eSwgZW1ib2R5IGl0LiAKTGVkIGJ5IEdlcmFsZCBCdXR0ZmllbGQsIERpcmVjdG9yLCBIU1csIHRoZSBwb3J0Zm9saW8gc3VwcG9ydHMgYW5kIG1haW50YWlucyB0aGUgVW5pdmVyc2l0eSdzIEhTVyBNYW5hZ2VtZW50IEZyYW1ld29yayBhbmQgc3VwcG9ydHMgdGhlIEhSIEJyYW5jaCBpbiByZXNwZWN0IG9mIEhSIGFuZCBIU1cgcmVsYXRlZCByaXNrcywgbGVnaXNsYXRpdmUgY29tcGxpYW5jZSBhbmQgaW50ZXJuYWwvZXh0ZXJuYWwgYXVkaXQgcHJvY2Vzc2VzLiBUaGUgSFNXIHBvcnRmb2xpbyBwcm92aWRlcyBjb3JlIHNlcnZpY2VzIHN1Y2ggYXMgdGhlIG1hbmFnZW1lbnQgb2YgdGhlIFVuaXZlcnNpdHkncyBzZWxmIGluc3VyYW5jZSBsaWNlbmNlLCB0aGUgZm9ybXVsYXRpb24gb2Ygc2FmZXR5IGFuZCBpbmp1cnkgbWFuYWdlbWVudCBwb2xpY3kgYW5kIHByb2NlZHVyZSwgYW5kIGFzc2lzdHMgd2l0aCB0aGUgZm9ybXVsYXRpb24gb2Ygc3RyYXRlZ2llcyBhbmQgdGhlIGNvIG9yZGluYXRpb24gb2YgcmVzdWx0YW50IGFjdGl2aXRpZXMgdG8gZW5hYmxlIHRoZSBVbml2ZXJzaXR5IHRvIG1haW50YWluIGEgc2FmZSB3b3JrcGxhY2UgYW5kIGNvbXBsaWFuY2Ugd2l0aCB0aGUgUmV0dXJuIHRvIFdvcmsgU0EgQ29kZSBvZiBDb25kdWN0IGZvciBTZWxmIEluc3VyYW5jZS4gVGhlIEhTVyBwb3J0Zm9saW8gYWxzbyBwcm92aWRlcyBhIHJhbmdlIG9mIHNoYXJlZCBzZXJ2aWNlcyBpbmNsdWRpbmcgdGhlIHByb3Zpc2lvbiBvZiBIU1cgYWR2aWNlIGFuZCBjYXNlIG1hbmFnZW1lbnQgZm9yIHdvcmtlcnMgY29tcGVuc2F0aW9uIGNsYWltcy4gClRoZXkgZGVjaWRlZCB0byBob2xkIGEgbXV0dWFsIGZ1bmVyYWwgZm9yIHRoZSBiYWJlcyBhbmQgYnVyeSB0aGVtIHRvZ2V0aGVyLiBUaGV5IGhhZCB0byBjYWxsIHRoZSBwZW9wbGUgdGhhdCB3ZXJlIG1ha2luZyB0aGUgaGVhZHN0b25lIGFuZCB0ZWxsIHRoZW0gdG8gc3RvcCBiZWNhdXNlIHRoZXkgbmVlZGVkIHRvIGFkZCBhbm90aGVyIG5hbWUuIApNb3JlIFN0b3JpZXMgUG9raWUgbGF3cyBpbiBRdWVlbnNsYW5kOiBXYW5uYSBiZXQ/IEdhbWJsaW5nIGdyb3dpbmcgaW4gcmVzb3VyY2UgcmljaCBhcmVhcyBGaXR6cm95IHBva2llcyBmbGluZzogJDEwMG0gTmV3IGdhbWJsaW5nIGxhdyBjaGFuZ2VzICdhcHBhbGxpbmcnIFdpbGtpZSBwcmFpc2VzIE1hY2tsaW4gZm9yIGhlciBjb250cmlidXRpb24gdG8gcG9raWUgcmVmb3JtIEJsZWlqaWUgc2F5cyAib2xkIHN0eWxlIiB0b3VnaCBsYXdzIGNvdWxkIGJlIGJhY2sgb24gYWdlbmRhIE5ld21hbiByZWxheGVzIGxpcXVvciBsaWNlbnNpbmcgcmVxdWlyZW1lbnRzIFBva2llcyBoaWdoIHJvbGxlcnMgc3BlbmQgYmlnIGluIG5vcnRoZXJuIG1pbmluZyB0b3ducwpUdXRvcmlhbHMgb3IgbGFjayB0aGVyZW9mIGlzIGEgZ3JlYXQgcG9pbnQgYXMgd2VsbC4gVGhleSB3ZXJlIGFsc28gdGhlIHRob3JuIHRoYXQgYnJva2UgdGhlIGNhbWVsIGJhY2sgaW4gTGF3YnJlYWtlcnMsIHRoZXkgd2VyZSBpbXBsZW1lbnRlZCB3YXkgdG9vIGxhdGUsIGFmdGVyIG1vc3QgbmV3IHBsYXllcnMgaGFkIG1vdmVkIG9uLiAKU3VyZWx5IHlvdSBkb24gbWVudGlvbiBhbGwgdGhlIG5hbWVzIG9mIHRoZSBsaWJyYXJpZXMgeW91IG1pZ2h0IHVzZSBkdXJpbmcgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBnYW1lIGluIGEgc3BsYXNoIHNjcmVlbi4gSSByZWFsaXplIHRoYXQgbGl0ZXJhbGx5IDk5JSBvZiB0aGUgY29udGVudCB3YXMgY3JlYXRlZCAob3IgY29udHJhY3RlZCkgYnkgeW91LCBidXQgaXNuIHRoZSBwcmluY2lwbGUgdGhlIHNhbWU/CkV0Yy4gCklmIHdlIGNvdWxkIHB1dCBsZWdlbmRhcmllcyBpbiBneW1zIHRoZW4geW91IGhhdmUgcGVvcGxlIGNyb3NzaW5nIHRoZWlyIGZpbmdlcnMgaG9waW5nIHNvbWUgZ3V5IGNvbWVzIGFsb25nIGJlZm9yZSBtaWRuaWdodCB0byB3cmVjayB0aGVpciA0NzUgY3AgWmFwZG9zIHdpdGggYSBHZW9kdWRlIHRoZXkgY2F1Z2h0IG9uIHRoZSB3YXkgb3ZlciBzbyB0aGF0IHRoZSBjb2luIHJldHVybiBjb21lcyBpbiB0aW1lLiBUaGF0IGp1c3QgYmUgZHVtYiBmb3IgbGVnZW5kYXJpZXMgdG8gZ2V0IGdldHRpbmcgc2xhcHBlZCBhcm91bmQgYnkgcGVvcGxlIHJhbmRvbSBnYXJiYWdlLiBUYWtlIG9uZSBndXkgYW5kIHNwbGl0IGhpcyBsaWZ0aW5nIGxpZmUgaW50byAyIHRpbWVsaW5lcywgb25lIHdoZXJlIGhlIHVzZXMgZ2VhciBhbmQgb25lIHdoZXJlIGhlIGRvZXNuIEhlIHRoZSBzYW1lIGd1eSwgZG9lcyB0aGUgc2FtZSB0aGluZ3MsIHB1dHMgaW4gdGhlIHNhbWUgZWZmb3J0LCBhbmQgb2J2aW91c2x5IGhhcyB0aGUgc2FtZSBnZW5ldGljcyBpbiBib3RoIHRpbWVsaW5lcy4uIApJbiBteSBleHBlcmllbmNlLCBMMSBGcmVuY2ggc3R1ZGVudHMgd2l0aCBsb3cgbGV2ZWwgRW5nbGlzaCBoYXZlIGxlc3MgZGlmZmljdWx0aWVzIGluIHF1ZXN0aW9uIGZvcm1hdGlvbiB0aGFuLCBzYXksIFNwYW5pc2ggb3IgSXRhbGlhbnMuIFNjYW5kaW5hdmlhbnMgZXhjZWwgbW9yZSB0aGFuIG15IFJvbWFuY2Ugc3R1ZGVudHMgd2hlbiBpdCBjb21lcyB0byBwaHJhc2FsIHZlcmJzLiBJIGhhdmUgbm8ga25vd2xlZGdlIG9mIFNjYW5kYW5hdmlhbiBsYW5ndWFnZXMgc28gSSBkb24ga25vdyB3aHkgdGhhdCBjb3VsZCBiZS4gU21hbGwgc2FtcGxlIHNpemUgYmlhcyBtYXliZS4KQ2hpbmdsZXRyb25lIGlzIGFic29sdXRlbHkgcmlnaHQuIEkgd291bGQgbGlrZSB0byBhZGQgdXNpbmcgZGlmZmVyZW50IGNvbG9ycyBvZiBwZW5zIHRvIHNlcGFyYXRlIG91dCBtYWluIGlkZWFzIG9uIGVhY2ggcGFnZSBvZiBub3Rlcy4gSSBzdGFydGVkIGRvaW5nIHRoaXMgaW4gY29sbGVnZSBhbmQgbm90aWNlZCBhIGRyYW1hdGljIGltcHJvdmVtZW50IGluIG15IHJlY2FsbCBvZiB0aGUgaW5mb3JtYXRpb24uIApLYXJhenlraWQgdQpUaGVuLCBEaGFuaSwgdGhlIHZlcnkgaW1hZ2Ugb2YgaGlzIGRhcmsgZXllZCwgaGFuZHNvbWUgZmF0aGVyLCB3YW5kZXJzIGluIHRvIHNheSBoZWxsby4gClNvcnJ5IGlmIEknbSByYW1ibGluZyBJJ20gcmVhbGx5IHRpcmVkIHJuIGhhaGEuV2hhdCBJJ20gdHJ5aW5nIHRvIHNheSBpcyBpdCdzIGFsbCBhYm91dCBsZWFybmluZyB3aGF0IHdvcmtzIGZvciB5b3UgYW5kIGZpbmRpbmcgeW91ciBzd2VldCBzcG90LCB3aGV0aGVyIHRoYXQncyBmaW5kaW5nIGEgZ3JvdXAgb2YgcGVvcGxlIHdobyBlbmNvdXJhZ2UgeW91IHRvIGdvIG91dCBhbmQgc2VlIHRoaW5ncyBvciBmaW5kaW5nIGEgbmljZSBxdWlldCBwbGFjZSB3aGVyZSB5b3UgY2FuIGV4cGVyaWVuY2UgdGhlIGN1bHR1cmUgYWxvbmUgd2l0aG91dCBmZWVsaW5nIG92ZXJ3aGVsbWVkIG9yIHByZXNzdXJlZC4gCkJhYmFzaG9vb2szMUYgIFNsb2dnZXIgIExpZnQgSGVhdnksIExpZnQgT2Z0ZW4KVGhhdCB2ZXJ5IHNpbXBsaXN0aWMsIGJ1dCBpdCBhIHByZXR0eSBlYXN5IGlsbHVzdHJhdGlvbiBvZiB3aHkgSSB0aGluayBJIHJpZ2h0Li4gCkdhbWJsaW5nIHdhcyBhbiBpbXBvcnRhbnQgcGFzdGltZSBhbmQgaGFzIGJlZW4gdmVyeSBwb3B1bGFyIHNpbmNlIHRoZSBtaWRkbGUgYWdlcy4gCklmIHlvdSByZW50IGEgc3BhcmUgYmVkcm9vbSAxMCBtb250aHMgb2YgdGhlIHllYXIgd2hpbGUgdXNpbmcgaXQgYXMgYSBndWVzdCBiZWRyb29tIGZvciB5b3VyIGZhbWlseSBvciBmcmllbmRzIGR1cmluZyB0aGUgb3RoZXIgdHdvIG1vbnRocywgeW91IGNhbm5vdCBjbGFpbSBpdCBhcyBhIHRheCBkZWR1Y3Rpb24uIApUaGlzIGFsc28gcGxheXMgaW50byB3aHkgdGhlIFR1c2tlbiBSYWlkZXJzIGZsZWQgZnJvbSBPYmkgV2FuIGluIEEgTmV3IEhvcGU7IHllYXJzIG9mIGNvbmZsaWN0IHdpdGggb2xkIEJlbiBLZW5vYmkgdGF1Z2h0IHRoZW0gbm90IHRvIGF0dGFjayB0aGUgSmVkaSBNYXN0ZXIsIGFzIGhlIGhlbGQgYm90aCB0aGUgbG93IChpbnZlcnNlIGhpZ2gpIGdyb3VuZCBhbmQgaGlzIGZ1bGwgbWFzdGVyeSBvZiBzYW5kIFtpbiBhbGwgaXRzIGNvYXJzZW5lc3MsIHJvdWdobmVzcywgaXJyaXRhYmlsaXR5IGFuZCBvbW5pcHJlc2VuY2VdLi4gClRoaW5rIG9mIHlvdXIgb3duIG1vc3QgZHlzZnVuY3Rpb25hbCBvZmZpY2Ugam9iLiAKWW91IGxlZnQgaGFpciBldmVyeXdoZXJlIGFuZCBraWxsZWQgZXZlcnlvbmUncyBhbGxlcmdpZXMuIApUaGF0IGFsc28gd2h5IHNvIG1hbnkgZ2VuZXJhbHMgY2FtZSBmcm9tIHRoZSBTb3V0aCAgdGhleSBnb3QgbW9yZSBwcmFjdGljZSBiZWNhdXNlIG9mIHRoZWlyIG1pbGl0aWEgZHV0aWVzIGFuZCB0aGUgbWFydGlhbCBjdWx0dXJlIHRoYXQgY2FtZSB3aXRoIHRoYXQuLiAKT3IsIHBlcmhhcHMgeW91IGhhdmUgYSBicmFuZCBuZXcgcG9rZXIgdGFibGUgYW5kIGFyZW4ndCBwbGVhc2VkIHdpdGggdGhlIHF1YWxpdHkgb2YgdGhlIHRvcCBpdCBjYW1lIHdpdGguIApNZXp6bW8gNS4xIHBhdGNoLCBNZXp6bW8gNS4xIGtleWdlbiwgTWV6em1vIDUuMSBjcmFjaywgTWV6em1vIDUuMSBLZXksIE1lenptbyA1LjEgU2VyaWFsLCBNZXp6bW8gNS4xLiAKQWZ0ZXIgd2hpY2ggaGUgc2FpZCBoZSBsZWZ0LiAKVGhlIGJvdHRvbSBsaW5lIGlzIGhvdyBsb25nIGEgcHJlcGFyZWQgdHJhdmVsZXIgd291bGQndmUgcmVtYWluZWQgc3R1Y2ssIGFuZCBob3cgY29tZm9ydGFibGUgKGZlZCwgd2FybSwgaHlkcmF0ZWQpIHRoZXkgd291bGQgYmUgdW50aWwgcmVjb3ZlcnkuLiAKIkdlbmVyYWxseSBJIHN1cHBvcnQgdGhlIGlkZWEgb2YgbmVnb3RpYXRpb25zIG92ZXIgY29udGludW91cyB3YXJmYXJlLiBJIGJlbGlldmUgYm90aCBzaWRlcywgZXhjZXB0IGZvciB0aGUgbWFyZ2lucyBpbiBib3RoIHNvY2lldGllcywgYXJlIHRpcmVkIG9mIHRoZSBjb25mbGljdCBhbmQgZWFnZXIgdG8gcmVhY2ggaXRzIGZpbmFsIHNvbHV0aW9uLiBIb3dldmVyLCBuZWdvdGlhdGlvbnMgbXVzdCBiZSBmYWlyIGFuZCBzaW5jZXJlIGludGhlIHNlbnNlIHRoYXQgYm90aCBzaWRlcyB3aWxsIGhhdmUgdG8gY29tcHJvbWlzZSBvbiB0aGUga2V5IGlzc3Vlcy4KSXQgaXMgcGVyZmVjdCBmb3IgZm9sZGluZyBibGFja2phY2sgdGFibGVzIHRvby4gVGhpcyBsYXlvdXQgY29tZXMgd2l0aCBnYW1lIGluc3RydWN0aW9ucyBpZiB5b3UgZG8gbm90IGtub3cgaG93IHRvIHBsYXkgdGhlIGdhbWUuLiAKV2hpbGUgSSB2ZXJ5IG11Y2ggYXBwcmVjaWF0ZSB0aGVpciBjb25jZXJuLCBJIHJlYWxseSwgcmVhbGx5LCByZWFsbHkgZG9uIG5lZWQgYW55b25lIGdyYWJiaW5nIGFueXRoaW5nIChlc3BlY2lhbGx5IHRoZSBiYWJ5ISEhKSBhbmQgbWVzc2luZyB1cCBteSBiYWxhbmNlIG9yIG15IG1lbnRhbCBjaGVja2xpc3QgdG8gZ2V0IHRoaW5ncyByaWdodC4gVGhhbmtmdWxseSwgSSBuZXZlciBvbmNlIGhhZCBhIG1pc2hhcCwgYnV0IHdlIGdvdHRlbiBwcmV0dHkgdGFuZ2xlZCwgd2hlbiBzb21lIGdvb2Qgc2FtYXJpdGFuIGdyYW5kbWEganVtcGVkIGluIHRvIGhlbHAuLiAKSGVjaywgc29tZSBvZiBvdXIgZnJpZW5kcyBjb25zaWRlcmVkIHBva2VyIHRoZWlyIHBhcnQgdGltZSBqb2IuLiAKTXkgY2xpZW50IGhvbmVzdGx5IGZlZWxzIGhlIHNhdyB0aGUgQWZyaWNhbiBBbWVyaWNhbiB3aG8gc3RhcnRlZCB0aGUgY29uZnJvbnRhdGlvbiBpbGxlZ2FsbHksIHdldCBoaXMgdHJvdXNlcnMgd2hlbiBoZSB3YXMgc2xhcHBlZCB0aHVzIG5lZWRpbmcgYXNzaXN0YW5jZSBmcm9tIGhpcyBmdXR1cmUgYmFsbGVyaW5hcyBhcm91bmQgaGltIGJlY2F1c2UgaGUgd2FzIG5vdCBtYW4gZW5vdWdoIGhpbXNlbGYgdG8gaGFuZGxlIHRoZSBzaXR1YXRpb24uIE15IGNsaWVudCBmZWVscyB0aGUgZGlhcGVycyB3b3VsZCBhc3Npc3QgdGhlIEFmcmljYW4gQW1lcmljYW4gYm91bmNlciBpbiBoaXMgam9iIGluIHRoZSBmdXR1cmUsIGluY2FzZSBuZXh0IHRpbWUgaGUgd2V0cyBoaW1zZWxmIG9yIHRoZSBvdGhlciBib3VuY2VycyBwZWUgaW4gdGhlaXIgdHJvdXNlcnMuIApUViBjb3ZlcmFnZSBmb3IgcG9rZXJzIFN1cGVyIEhpZ2ggUm9sbGVyIEJvd2wKVGhlcmUgYXJlIGEgbnVtYmVyIG9mIGdlbmVyYWwgZ3VpZGVsaW5lcyB0aGF0IHNob3VsZCBiZSBmb2xsb3dlZCB3aGVuIHVzaW5nIGF1dG9jbGF2ZXMgdG8gZW5zdXJlIGVmZmVjdGl2ZSBzdGVyaWxpc2F0aW9uLgpZb3Ugc2VlIEFtZXJpY2FuIHRlbGV2aXNpb24sIGZvcmVjbG9zdXJlcyBhcmUgcmVhbC4gSGVyZSwgd2UgZG9uIGhhdmUgdGhpcyBiZWNhdXNlIHRoZSBHb3Zlcm5tZW50IGhhcyBiZWVuIHZlcnkgY2FyZWZ1bCB0aGF0IHBlb3BsZSBzaG91bGQgbm90IGJvcnJvdyB0b28gbXVjaC4gU2luZ2Fwb3JlYW5zIGFyZSB2ZXJ5IGx1Y2t5LgpJbiBhbiB1cGRhdGUgb24gRnJpZGF5IGFmdGVybm9vbiwgVG9yb250byBGaXJlIENoaWVmIE1hdHRoZXcgUGVnZyBzYWlkIGNyZXdzIGFyZSB0cnlpbmcgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhleSB3aWxsIG5lZWQgaGVhdnkgZXF1aXBtZW50IHRvIGRpc21hbnRsZSB0aGUgaG9tZSB0byBhbGxvdyBjcmV3cyBhbmQgaW52ZXN0aWdhdG9ycyB0byBnZXQgaW5zaWRlLgpJZiB0aGV5IGtuZXcgdGhleSBkaWRuIHlldCBhZ3JlZWQgdG8gdGVzdGluZywgd2hhdCBleGFjdGx5IGRpZCB0aGUgU3RhdGUgdGhpbmsgd2FzIGdvaW5nIHRvIGhhcHBlbj8gVGhhdCBtYWtlcyBubyBzZW5zZS4gCkkgYW0gc3VwZXIgaGFwcHkgdGhhdCBteSBNY0RvbmFsZCBzdGlsbCBoYXMgdGhlIHNoYW1yb2NrIG1vY2hhLiBOaWNlLiBCeSB0aGUgd2F5LCB0aGV5IHN0YXJ0ZWQgdGFraW5nIG91dCB0aGUgcGxheSBhcmVhIHRvZGF5LiAKUG9rZXIgQ2hpcHNFaWdodCBCYWxsCkhldCBsaWd0IGluIGVlbiBwcmFjaHRpZ2UgdmFsbGVpIHR1c3NlbiBkZSBoZXV2ZWxzLCBtZXQgdmVsZSBvdWRlIGdlYm91d2VuLiAKQWx3YXlzIHNwbGl0IDgncyBhbmQgQWNlcy4gU3BsaXR0aW5nIDgncyB3aWxsIGNoYW5nZSBwcm9iYWJsZSBsb3NlcnMgdG8gcHJvYmFibGUgd2lubmVycy4gCldhc24gYWJvdXQgTUdNLCBNYW5kYWxheSBCYXkgb3IgYSBzcGVjaWZpYyBjYXNpbm8gb3IgdmVudWUsIEFhcm9uIFJvdXNlLCB0aGUgYWdlbnQgaW4gY2hhcmdlIG9mIHRoZSBGQkkgTGFzIFZlZ2FzIG9mZmljZSwgdG9sZCBUaGUgQXNzb2NpYXRlZCBQcmVzcy4gV2FzIGFsbCBhYm91dCBkb2luZyB0aGUgbWF4aW11bSBhbW91bnQgb2YgZGFtYWdlIGFuZCBoaW0gb2J0YWluaW5nIHNvbWUgZm9ybSBvZiBpbmZhbXkuIFBoeXNpY2FsIGFuZCBtZW50YWwgaGVhbHRoIHdhcyBkZWNsaW5pbmcuIApUaGUgYnVzZXMgYXJlIHZlcnkgY29tZm9ydGFibGUgYW5kIGFmZm9yZGFibGUgc28gZXZlcnlvbmUgdXNlcyBwdWJsaWMgdHJhbnNwb3J0YXRpb24gd2l0aG91dCBxdWVzdGlvbi4gTW9zdCBvZiB0aGUgYnVzZXMgYXJlIGV0aGFub2wgZnVlbGxlZCwgZGVyaXZlZCBmcm9tIHdvb2QgaW4gdGhpcyBjYXNlLCBhbmQgYXBwYXJlbnRseSBjYW4gcmVkdWNlIGNhcmJvbiBlbWlzc2lvbnMgdXAgdG8gOTAgcGVyIGNlbnQuLiAKQSBkaXNjdXNzaW9uIGFib3V0IHRoZSBFbXBsb3ltZW50IE5vbiBEaXNjcmltaW5hdGlvbiBBY3QgKEVOREEpLCBLaW5nIHN0YXRlZCB0aGVyZSBpcyBubyBuZWVkIGZvciBsZWdpc2xhdGlvbiB0byBlbmQgZGlzY3JpbWluYXRpb24gb24gdGhlIGJhc2lzIG9mIHNleHVhbCBvcmllbnRhdGlvbiBvciBleHByZXNzaW9uIGJlY2F1c2UgcXVlZXJzIGNyZWF0ZSB0aGUgZGlzY3JpbWluYXRpb24gdGhlbXNlbHZlcyBieSBiZWluZyBzbyBmcmVha2luIGZsYW1ib3lhbnQuLiAKSXQgd2FzIGFtYXppbmcuLiAKSWYgdGhlIHBsYXllciBjYWxscywgcmFpc2VzIG9yIGZvbGRzLCB5b3UgY2FuIHdhdGNoIHRoZW0uIFlvdSBjYW4gbWFrZSBhIHBzeWNob2xvZ2ljYWwgcHJvZmlsZSBvZiB5b3VyIGNvbXBldGl0b3JzIGluIHRoaXMgcG9zaXRpb24uIAoyLiBTdG9wIHNoaWZ0aW5nIHlvdXIgd2VpZ2h0ISBTdGFuZCBjZW50ZXJlZCBvdmVyIGJvdGggZmVldC4gQmVuZCBrbmVlcyBzbGlnaHRseS4gRG8gbm90IHJvY2sgZm9yd2FyZCBhbmQgYmFja3dhcmQuIERvIG5vdCB0aWx0IHRoZSBoaXBzIHRvIHRoZSBzaWRlLiBXaGVuIHlvdSBzaGlmdCB5b3VyIHdlaWdodCwgeW91IGFwcGVhciBkaXN0cmFjdGVkIGFuZCBhZ2l0YXRlZC4gWW91IGFyZSBnaXZpbmcgdGhlIGltcHJlc3Npb24gdGhhdCB5b3Ugd291bGQgcmF0aGVyIGJlIGVsc2V3aGVyZS4gRG8gbm90IGxlYW4gb24gZGVza3MsIHdhbGxzLCBvciBjaGFpcnMuIFlvdSBzaG91bGQgYXBwZWFyIHN0cm9uZyBlbm91Z2ggdG8gc3RhbmQgYWxvbmUgb24gdHdvIGZlZXQgICB1bnN1cHBvcnRlZC4KT3ZlciB0aGUgY291cnNlIG9mIHR3byAic2hvZXMiIGF0IEhvcnNlc2hvZSBDb3VuY2lsIEJsdWZmcywgSSBsb3N0ICQxMiwwMDAuIChEb3VibGUgRGVjayBpbiBIaWdoIExpbWl0IHBsYXlpbmcgMng1MCAyeDc1MC4pIFRoZSB2ZXJ5IG5leHQgc2hvZSwgSSBzdGFydGVkIGJvdGggaGFuZHMgYXQgMngxMjUsIG5ldmVyIGRyb3BwZWQgYmVsb3csIGFuZCBsb3N0IG9ubHkgYSBzaW5nbGUgaGFuZC4gCk11bSBoYWQgYSBzdHJva2UsIGJlY2F1c2Ugb2YgbXkgZ2FtYmxpbmcgYW5kIHRoZSBzaGFtZSAuIApBIG5ldyBlcmEgZm9yIFR1cm5lciBEdWNrd29ydGgKSWYgaXQgaXMgdGhlIG9iamVjdCBvZiB0aGUgcG9wdWxhciBub3ZlbCdzIGVhcmx5IHBhZ2VzIHRvIGVudGljZSByZWFkZXJzLCBpdCBzb21ldGltZXMgc2VlbXMgVGhlIFBlcmZlY3QgTmFubnkgYXNwaXJlcyB0byBkbyB0aGUgb3Bwb3NpdGUuIEl0IGlzIGhvc3RpbGUgdG8gdGhlIGtpbmQgb2YgcmVhZGVycyB0byB3aG9tIGl0IGlzIGJlaW5nIG1hcmtldGVkLiBBIGRpZmZpY3VsdCBub3ZlbCBpbiB0aGUgZ3Vpc2Ugb2YgYSBwb3B1bGFyIG9uZSwgaXQgaXMgdmlydHVhbGx5IGd1YXJhbnRlZWQgdG8gZGlzYXBwb2ludC4gClJpZ2h0IGhlcmUhIFllYWgsIEkgZ3Vlc3MgeW91IGNvdWxkIHNheSBsb25nIHRlcm0uIApCbGFja2phY2sgaXMgYSBuaWNlIGdhbWUgdG8gc3RhcnQgd2l0aC4gSXRzIGhvdXNlIGVkZ2UgcmFuZ2VzIGZyb20gMC4yNSUgdG8gMiUuLiAKWW91IHdvbiBuZWVkIGEgYmVkIGlmIHlvdSByZW50IGFuIEFpcmJuYiBhbnl3YXkuLiAKQSBtaWxlIGFjcm9zcyBvZiBuZWFybHkgZXZlcnl0aGluZyBzdHJpcHBlZCBiYXJlLCBhbmQgc2V2ZXJhbCBtaWxlcyBsb25nLiAKUExFQVNBTlRPTiwgQ2FsaWYuIApWaWtlbmRpIGlzIGEgZ29vZCBsb29raW5nIG1hcCwgYnV0IEkgaGF2ZW4gc2VlbiBldmlkZW5jZSB0aGF0IHRoZSBjb21tdW5pdHkgdGhpbmtzIGl0IGEgZ29vZCBtYXAuIFRoYXQgaXQgaW1tZWRpYXRlbHkgZGllZCBhcyBzb29uIGFzIG5vIG9uZSB3YXMgcmVxdWlyZWQgdG8gcGxheSBpdCBpcyB0ZWxsaW5nLgpZb3UgY2FuIHJlcXVlc3QgcGVybWlzc2lvbiB2aWEgbW9kbWFpbCBiZWZvcmUgeW91IHBvc3QgaWYgeW91IGZvciBleGFtcGxlIHdvdWxkIGxpa2UgdG8gaG9zdCBhbiBldmVudCwgb3IgeW91IGJlbGlldmUgeW91ciBwb3N0IGlzIHBhcnRpY3VsYXJseSByZWxldmFudCB0byAvci9TdGVhbS4KQmVsb3ZlZCBmYXRoZXIgb2YgSnVkeSBIdXR0b24gYW5kIGhlciBodXNiYW5kIEdhcnkgYW5kIEJyaWFuIEhhbW1lbGwgYW5kIGhpcyB3aWZlIEthdGh5LiAKVGhlc2UgYXJlIHNvbWUgb2YgdGhlIHRoaW5ncyB0aGF0IHlvdSBjYW4gZG8gZHVyaW5nIHlvdXIgc3RheSBpbiBOZXcgWW9yayBmb3IgeW91ciBhbm5pdmVyc2FyeS4gCkkndmUgd2l0aGRyYXduIGZyb20gb3BpYXRlcyBiZWZvcmUgYW5kIHRoZXJlJ3Mgbm8gZG91YnQgaXQncyBtaXNlcmFibGUsIGJ1dCBrbm93aW5nIGl0IGVuZHMgbWFrZXMgYSBiaWcgZGlmZmVyZW5jZS4gVGhpcyBKYW51YXJ5IG1hcmtlZCB0aGUgNnRoIGFubml2ZXJzYXJ5IG9mIHRoZSBuaWdodCBteSBleHRyZW1lIG5lcnZlIHBhaW4gc3RhcnRlZCwgYW5kIHRoYXQncyBhIGxvbmcsIGxvbmcgdGltZSB0byBhc2sgbXlzZWxmIGlmIEknbGwgZXZlciB3YWxrIG1vcmUgdGhhbiBhIGZldyB5YXJkcyB3aXRob3V0IGhlbHAsIG9yIGlmIEknbGwgZXZlciBiZSBhYmxlIHRvIHJ1biwganVtcCwgZHJpdmUgbW9yZSB0aGFuIGEgZmV3IG1pbnV0ZXMsIGxpZnQgbW9yZSB0aGFuIDEwIHBvdW5kcywgb3IgZGFuY2UgYWdhaW4uLiAKUGxlYXNlIGJlIG15IGd1ZXN0IHRvIGRyaXZlIDIwIGluIHRoZSA1NSBhbGwgeW91IHdhbnQsIGl0IGl0IG1ha2VzIHlvdSBmZWVsIGNvbWZvcnRhYmxlIEl2ZSBnb3Qgbm90aGluZyBhZ2FpbnN0IHlvdSBvciB5b3VyIHNhZmV0eSwganVzdCBtb3ZlIHRoZSBmdWNrIG92ZXIgdG8gdGhlIHJpZ2h0IGxhbmUgd2hlbiB5b3UgZG8uIApJIGRvbiBqdXN0IGhhbmcgb3V0IGluIG15IHNoZWx0ZXIuIElmIEkgdGhhdCBib3JlZCBJIG1pZ2h0IGFzIHdlbGwgYmUgaGlraW5nLiAKR2FkZ2V0cyBHaXptb3MgR2Fsb3JlIEF0IENFUyAyMDEzMjAxMyBDb25zdW1lciBFbGVjdHJvbmljcyBTaG93IEhpZ2hsaWdodHMgTmV3ZXN0IFRlY2hub2xvZ3lTYW1zdW5nJ3MgU21hcnQgQ2FyZSB3YXNoZXIgYW5kIGRyeWVyIGFyZSBvbiBkaXNwbGF5IGF0IHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiBDRVMsIHRoZSB3b3JsZCdzIGxhcmdlc3QgYW5udWFsIGNvbnN1bWVyIHRlY2hub2xvZ3kgdHJhZGUgc2hvdywgcnVucyB0aHJvdWdoIEphbnVhcnkgMTEgYW5kIGlzIGV4cGVjdGVkIHRvIGZlYXR1cmUgMywxMDAgZXhoaWJpdG9ycyBzaG93aW5nIG9mZiB0aGVpciBsYXRlc3QgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRvIGFib3V0IDE1MCwwMDAgYXR0ZW5kZWVzLiAoUGhvdG8gYnkgRGF2aWQgQmVja2VyL0dldHR5IEltYWdlcykKWGF2aWVyIHF1YXJ0ZXJiYWNrIENoYXNlIFdvbGYuIFBsdXMgc2VlIG1vcmUgb2YgT2hpbydzIHRvcCBjb2xsZWdlIHJlY3J1aXRzLCBpbmNsdWRpbmcgSmFja3NvbiBDYXJtYW4gYW5kIFR5cmVrZSBTbWl0aC5NZWV0IHRoZSBPaGlvIEJpZyAxMDEgZm9yIDIwMTc6IHBsYXllcnMgcmFua2VkIDUwIHRvIDI2IE1lZXQgdGhlIE9oaW8gQmlnIDEwMSBmb3IgMjAxNzogcGxheWVycyByYW5rZWQgNTAgdG8gMjYgTWVldCBzb21lIG9mIHRoZSB0b3AgaGlnaCBzY2hvb2wgZm9vdGJhbGwgcGxheWVycyBpbiBPaGlvIGZvciB0aGUgMjAxNyBzZWFzb24sIGluY2x1ZGluZyBTdC4gCkRpc2NsYWltZXI6IEkga25vdyBzb21lIHBlb3BsZSBtYXkgaGF2ZSBhIG1lZGljYWwgcmVxdWlyZW1lbnQgb3IgcmVhc29uIHRvIHdlYXIgc3VuZ2xhc3NlcyB3aGlsZSBpbmRvb3JzLCBidXQgdGhleSBub3QgdXN1YWxseSBkcmVzc2VkIGxpa2UgYSBkYW5jZXIgZm9yIE1KIGJhY2t1cCBzZXQgb24gVGhyaWxsZXIuIHJpdmVyLCBsYWtlLCBzdHJlYW0gZXRjKSwgdGhhbiB5b3UgY2FuIGJlYXQgYSBQbGF0eXB1cyBHcmF2aXR5V29ya3MgKG9yIHNpbWlsYXIpIHdhdGVyIGZpbHRlcgpTdHJ1YW5UICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkFuZCB3aXRoIHlvdSBkcm9wcGluZyB0aGUgcm9wZSwgSSBzdXJlIGZhY2V0aW1lIHdpdGggdGhlIHRoaWVmIHdpbGwgZGllIHNvb25lciByYXRoZXIgdGhhbiBsYXRlci4gU28gZXZlcnlib2R5IHdpbnMhIChXZWxsLCBldmVyeWJvZHkgYnV0IHRoZSB0aGllZi4gKS4gCkl0IGhhcyBoZWxwZWQgbWFrZSB5b3Ugd2hhdCB5b3UgYXJlIHRvZGF5LCB3aGljaCBoZSBvYnZpb3VzbHkgZmluZHMgYXR0cmFjdGl2ZS4gSWYgaGUgd2FudHMgdG8ga25vdywgaGUgaGFzIHRvIGFjY2VwdCB3aGF0ZXZlciB5b3UgdGVsbCBoaW0uIApJdCBub3QgYSBjaGVhcCBjb3Agb3V0LiBJdCBJUyBhIGRlbGliZXJhdGVseSBkZXNpZ25lZCBzeXN0ZW0gdG8ga2VlcCB1cyBmcm9tIGV4ZXJjaXNpbmcgb3VyIHBvd2VyLiBJIGhhdmUgdG8gYnVzdCBteSBhc3MgYXQgYSBwaHlzaWNhbGx5IGFuZCBtZW50YWxseSBpbnRlbnNpdmUgam9iIGV2ZXJ5IGRheSwgdGhlbiBidXN0IG15IGFzcyBtb3JlIGp1c3QgdG8gZ2V0IG15c2VsZiBob21lIChiaWtlIHJpZGVzIG9uIGhpbGxzIGFyZSBubyBqb2tlKS4gVGhlbiBpZiBJIGFjdHVhbGx5IGhhdmUgbW9uZXkgZm9yIGdyb2NlcmllcywgSSBoYXZlIHRvIGJpa2UgdG8gdGhlIHN0b3JlIGFuZCB0aGVuIGJpa2UgaG9tZSB3aXRoIGEgbG9hZC4gSSBhYnNvbHV0ZWx5IGRvIG5vdCBoYXZlIHRoZSBtZW50YWwgYmFuZHdpZHRoIG9yIHBoeXNpY2FsIGVuZXJneSB0byBzdXN0YWluIHByb3Rlc3RpbmcuCkhlIHJhbiBhcm91bmQgdGhlIHNpZGUgb2YgdGhlIGhvdXNlIHRvIG15IGxlZnQgYW5kIHBlZWtlZCBvdmVyIHRvIHNlZSBpZiBJIHdhcyBzdGlsbCB0aGVyZS4gCkhvbWVzY2hvb2xpbmcgYWxzbyB1c2VkIHRvIGJlIG11Y2ggbW9yZSBleHBlbnNpdmUuIFRoZSBpbnRlcm5ldCB3YXMgc3RpbGwgaW4gaXQgZWFybHkgc3RhZ2VzLCBzbyBpdCB3YXNuIHRoZSByZXNvdXJjZSBpdCBpcyBub3cuIFlvdSBiYXNpY2FsbHkgaGFkIHRvIGVpdGhlciBidXkgY3VycmljdWx1bSAoY2FuIGVhc2lseSBiZSAkMTAwKyBwZXIgc3ViamVjdCwgcGVyIHllYXIpIG9yIGJlIGFibGUgdG8gY29tcGxldGVseSBjcmVhdGUgeW91ciBvd24gd2l0aCBvbmx5IHRoZSBsaWJyYXJ5IGFzIGEgcmVzb3VyY2UuIFRoaXMgbGVkIHRvIHRoZSBtYWpvcml0eSBvZiBob21lc2Nob29sZXJzIGJlaW5nIG1pZGRsZSBjbGFzcyBhbmQgYWJvdmUuClVuZm9ydHVuYXRlbHksIHRoZSBtZWRpYSAgIGVzcGVjaWFsbHkgY29uc2VydmF0aXZlIG1lZGlhICAgZ2l2ZSBoaW0gYSBwbGF0Zm9ybSBmb3IgaGlzIHZpZXdzLCBhbmQgb2Z0ZW4gZG8gc28gd2l0aG91dCBtZW50aW9uaW5nIHRoZSBmYWN0IHRoYXQgaGUgaXMgYSBwYWlkIHNwb2tlc3BlcnNvbiBmb3IgcG9sbHV0aW5nIGNvbXBhbmllcy4uIApJdCBub3QgYW4gYWxsIG9yIG5vdGhpbmcga2luZCBvZiB0aGluZy4gClRoZSBkZWZvcm1pdHkgb2YgeW91ciBiaWcgdG9lIGpvaW50IG1ha2VzIHRoZSBqb2ludCBzZW5zaXRpdmUgZXZlbiB0byBzbGlnaHQgcHJlc3N1cmUuIApJdCBoYXNuJ3QgcmVhbGx5IHdvcmtlZCB0aG91Z2guIApUaGVzZSBjb21tZW50cyBhcmUgYW4gYWJzb2x1dGUgc2hpdCBzaG93LiBTdG9wIHNjcmVhbWluZyBhYm91dCAidGhvdWdodCBwb2xpY2luZyIgYW5kIGJpZyBicm90aGVyLiBJdCBpcyBub3QgaWxsZWdhbCB0byBzaGFyZSB2aWRlb3MgaW4gRGVubWFyay4KVGhlcmUgYXJlIGRpZmZlcmVudCB0eXBlcyBvZiBjcmVhaywgYnV0IEkgZ3Vlc3NpbmcgeW91IG5vdCBnZXR0aW5nIHRoYXQgZGV0YWlsZWQgICBzbywgeW91IGFyZSBsb29raW5nIGZvciBpcnJlZ3VsYXIgZ2xvdHRhbCBwdWxzZXMgdG93YXJkcyB0aGUgZW5kIG9mIHByb3NvZGljIHBocmFzZXMuIApCdXQgYSBsb3Qgb2YgaGlnaGx5IHF1YWxpZmllZCBudXJzZXMgYW5kIGRvY3RvcnMgaGF2ZSBhbHNvIHF1aWV0bHkgbGVmdCB0byBnbyB0byBvdGhlciBob3NwaXRhbHMgb3IgcHJhY3RpY2VzLCBkdWUgdG8gdGhlIHBvb3IgcGF5IGluIGZhY2Ugb2YgaW5jcmVhc2luZyBidXJlYXVjcmFjeSBhbmQgY29ycG9yYXRpc20uLiAKVGhhdCBzYWlkLCBoZXJlIGFub3RoZXIgZXhhbXBsZSwgdGhpcyBmcm9tIHRoZSBTY2llbnRpZmljIEFtZXJpY2FuIGZvciAyNSBKdWx5IDE5MDgsIHNob3dpbmcgd2hhdCB3YXMgZXN0aW1hdGVkIHRvIGJlIHRoZSBtYXhpbXVtIGhlaWdodCAoYmFzZWQgb24gZm91bmRhdGlvbiBhbmQgZnJhbWluZykgb2YgdGhlIHN0aWxsIHJlbGF0aXZlbHkgbmV3IGFyY2hpdGVjdHVyYWwgaWRlYWwgb2YgdGhlIHNreXNjcmFwZXIuIApTYW1wYW9saTk5OSB1CkFnYWluLCBvbmUgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgb3RoZXIuIEFuZCB5ZXQsIGluIHRoaXMgc21hbGwgdG93biB3ZSBjYWxsIHRoZSBhdXRvIGluZHVzdHJ5LCBzb21ldGltZXMgb25lIG5laWdoYm9yIHNuZWV6ZXMgYW5kIHRoZSBuZXh0IGNhdGNoZXMgY29sZC4KVHJhZGl0aW9uYWwgc2xvdCBtYWNoaW5lcyB3ZXJlIG5vdCBhcyBhZHZhbmNlcyBhcyBuZXcgc2xvdCBtYWNoaW5lcyBhbmQgd2VyZSBlYXN5IHRvIG1hbmlwdWxhdGUuIFRoaXMgd2FzIGR1ZSB0byB0aGUgc3ByaW5nIGJhc2VkIHRlY2hub2xvZ3kgd2hpY2ggZW5hYmxlZCB0aGUgcGxheWVyIHRvIGNvbnRyb2wgdGhlIHNwaW4gdXNpbmcgdGhlIGxldmVyLiAKSGlnaCByZXNvbHV0aW9uIHNhdGVsbGl0ZSBpbWFnZXMgcmV2aWV3ZWQgYnkgIG9uIFdlZG5lc2RheSBhbHNvIHNob3dlZCB0aGF0IHRoZSBtYWRyYXNhLCBzYWlkIHRvIGJlIHJ1biBieSBtaWxpdGFudCBncm91cCBKYWlzaCBlIE1vaGFtbWFkLCBhcHBlYXJzIHRvIGJlIHN0aWxsIHN0YW5kaW5nIGFuZCB2aXJ0dWFsbHkgdW5jaGFuZ2VkIGZyb20gYW4gQXByaWwgMjAxOCBzYXRlbGxpdGUgcGhvdG8gb2YgdGhlIGZhY2lsaXR5LiAKVGhlIGRpZmZpY3VsdHkgYW4gYXNzb2NpYXRlIHdpbGwgZmFjZSB3b3JraW5nIGF0IHRoZSBiaWcgb3JhbmdlIGlzIGFmZmVjdGVkIGJ5IGZvdXIgdGhpbmdzIGluIHRhbmRlbTogMS4gVGhlIGxldmVsIG9mIGVmZm9ydCBvbmUgcHV0cyBmb3J0aC4gMi4gClNvIHlvdSB1c2VkIHRvIGJlIGFibGUgdG8gc3RhbmQgaW4gdGhlIG9wZW4gYW5kIGtpbGwgMiBndWFyZGlhbnMgYmFjayB0byBiYWNrIGFzIGxvbmcgYXMgeW91IGtpbGxlZCB0aGUgbWFya2VkIG9uZSBmaXJzdCBiZWNhdXNlIHlvdSBnZXQgYWxsIHlvdXIgaGVhbHRoIGJhY2sgcGx1cyBhbiBvdmVyc2hpZWxkIGFuZCBhIGRhbWFnZSBpbmNyZWFzZSwgc28geW91IGNvdWxkIGVhc2lseSB0YWtlIG91dCB0aGUgc2Vjb25kIEd1YXJkaWFuLiAKSSBoYXZlbiBhY3R1YWxseSB1c2VkIEFrcm9uIHNvIEkgY2FuIGRvIGEgaGVhZCB0byBoZWFkIGNvbXBhcmlzb24gb2YgdGhlIHR3by4uIApUYWtlIHRoZSBMIHdpdGggc29tZSBkaWduaXR5LlJlZ2FyZGxlc3MsIHN1Z2dlc3RpbmcgdGhhdCB3aW5uaW5nIDY5IG91dCBvZiA4NiBnYW1lcyBpcyBsdWNrIGlzIHJldGFyZGVkLiAKSSBkb24ga25vdyB5b3VyIHNpdHVhdGlvbiwgYnV0IGl0IG1pZ2h0IGJlIHJvb3RlZCBpbiB5b3VyIGxpZmVzdHlsZS4gCkZsd29tYmF0ICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJbiBnYW1lcyBsaWtlIE9ud2FyZCwgeW91IGdvdHRhIGdyYWIgdGhlIGV4YWN0IHBpeGVsIG9mIHRoZSBtYWcsIHNsaWRlIGl0IGRpcmVjdGx5IGludG8gdGhlIG1hZyBob2xlIHBlcmZlY3RseSBhbGwgdGhlIHdheSBpbiwgZXRjLiwgZXRjLiBJdCBub3Qgb3B0aW1pemVkIGF0IGFsbC4uIApJdCBvbmx5IGNhdXNlcyBtb3JlIHByb2JsZW1zIGFuZCB3aWxsIGJlIHVzZWQgYWdhaW5zdCB5b3UuLiAKVG8gZGF0ZSwgbW9yZSB0aGFuIDE4MCBncmFkdWF0aW5nIHNlbmlvcnMgaGF2ZSBzaWduZWQgdXAgZm9yIHRoYyBldmVudC4gCg==|<---