<!DOCTYPE html>
<html lang="en">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport">
   <meta content="09380361cb040eec0860a103a9c11da2" name="p:domain_verify">
    <noscript>
    </noscript>
    <title>
     [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
    </title>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:image:secure_url"/>
    <meta content="image/jpeg" property="og:image:type"/>
    <meta content="750" property="og:image:width"/>
    <meta content="367" property="og:image:height"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:image"/>
    <meta content="How to Get Over Your Fear of Your Boss article image" name="twitter:image:alt"/>
    <meta content="article" property="og:type"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
    <meta content="2014-06-30T18:05:00" property="article:published_time"/>
    <meta content="summary_large_image" name="twitter:card"/>
    <meta content="@TheMuse" name="twitter:site"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="apple-mobile-web-app-title"/>
    <meta href="https://www.themuse.com/static/images/favicons/ms/ms-icon-144x144.png?v=88333de460acaea54a8cbdee07fb8bf9120af39b106ca94cde2e5c31af511fd4" name="msapplication-TileImage"/>
    <meta content="#ffffff" name="msapplication-TileColor"/>
    <meta content="#ffffff" name="theme-color"/>
   </meta>
  </meta>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-P3K3QB" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <p class="browsehappy" id="outdated-browser-warning" style="display: none">
   You are using an
   <strong>
    outdated
   </strong>
   browser. Please
   [link]
   
   to improve your experience.
  </p>
  <header class="header">
   <div class="header-container">
    [ahref]
    
    <nav class="user-nav">
     <div class="sign-in-wrapper right hidden-xs" id="sign-in">
      [ahref]
      
     </div>
     <div class="sign-up visible-xs" id="sign-up-in">
      <a class="btn-sign-up sign-up-modal" href="/user/register">
       Sign Up  /  Sign In
      </a>
     </div>
     <div class="sign-up hidden-xs" id="sign-up">
      [ahref]
      
     </div>
    </nav>
    <div class="search hidden-xs">
     <i aria-hidden="true" class="fa fa-search">
     </i>
    </div>
    <nav class="main-nav banner">
     <a class="hidden-xs " data-header-link="home" href="/">
      Home
     </a>
     <a class="" data-header-link="companies" href="/companies">
      Explore Companies
     </a>
     <a class="" data-header-link="jobs" href="/jobs">
      Search Jobs
     </a>
     [link]
     
     [link]
     
     [link]
     
    </nav>
   </div>
  </header>
  <div id="global-search-bar">
  </div>
  <main class="main-container" id="main">
   <div id="subnav-search">
    <div class="subnav-block top-nav fixed hidden-xs">
     <div class="container1260">
      <ul class="tdm-subnav hidden-xs">
       <li class="dropdown-wrapper">
        [link]
        
        <ul class="subnav-dropdown">
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/tags/work-relationships">
           Work Relationships
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/tags/work-life-balance">
           Work-Life Balance
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li class="dropdown-wrapper">
        [ahref]
        
        <ul class="subnav-dropdown">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/tags/networking">
           Networking
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="dropdown-wrapper">
        [ahref]
        
        <ul class="subnav-dropdown">
         <li>
          <a href="/tags/finding-your-passion">
           Finding Your Passion
          </a>
         </li>
         <li>
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <a href="/tags/exploring-career-paths">
           Exploring Career Paths
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li class="dropdown-wrapper">
        [ahref]
        
        <ul class="subnav-dropdown">
         <li>
          <a href="/tags/hiring">
           Hiring
          </a>
         </li>
         <li>
          <a href="/tags/conflict-resolution">
           Conflict Resolution
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/tags/team-culture">
           Team Culture
          </a>
         </li>
        </ul>
       </li>
       <li class="dropdown-wrapper">
        [link]
        
        <ul class="subnav-dropdown">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/tags/communication">
           Communication
          </a>
         </li>
         <li>
          [search]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="dropdown-wrapper">
        [ahref]
        
        <ul class="subnav-dropdown">
         <li>
          <a href="/tags/trending-topics">
           Trending Topics
          </a>
         </li>
         <li>
          <a href="/tags/book-reviews">
           Book Reviews
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="dropdown-more">
        [link]
        
        <ul class="subnav-dropdown">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/tags/break-room">
           Breakroom
          </a>
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </div>
    <div class="subnav-block top-nav hidden-sm visible-xs">
     <ul class="tdm-subnav">
      <li class="dropdown-wrapper">
       [ahref]
       
      </li>
      <li class="dropdown-wrapper">
       [ahref]
       
      </li>
      <li class="dropdown-more">
       [link]
       
       <ul class="subnav-dropdown">
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </li>
     </ul>
    </div>
   </div>
   <nav class="fixed-social-nav">
    <div class="container">
     <ul class="social-nav clearfix">
      <li class="social-wrapper">
       [link]
       
      </li>
      <li class="social-wrapper">
       [link]
       
      </li>
      <li class="hamburger dark-grey">
       <button class="" id="mobile-nav-icon" type="button">
        <span class="mobile-icon-bar">
         [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
        </span>
        <span class="mobile-icon-bar">
         [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<li>[ahref]</li><li>[link]</li>
        </span>
        <span class="mobile-icon-bar">
        </span>
       </button>
      </li>
     </ul>
     <ul class="site-nav">
      <li class="clearfix">
       <a class="link_home clearfix" href="/">
        Home
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a class="link_tdm " href="/advice">
        Career Advice
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       <a class="link_tdm sign-in signup" href="/user/register">
        Sign Up
       </a>
      </li>
     </ul>
    </div>
   </nav>
   <div class="top-info-container">
    <div class="top-info">
     [link]
     
     <h1 class="article-title below">
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
    </div>
   </div>
   <div id="posts">
    <div class="post-main-container" id="post-container-4544">
     <div class="social-author-rail">
      <div class="social-container">
       <div class="author">
        [link]
        
       </div>
       <ul class="round-follow-btns vertical" id="share">
        <li class="facebook">
         [ahref]
         
        </li>
        <li class="twitter">
         [ahref]
         
        </li>
        <li class="linkedin">
         [ahref]
         
        </li>
        <li class="email">
         <a aria-label="email" class="share-button email" href="/advice/how-to-get-over-your-fear-of-your-boss">
          <i aria-hidden="true" class="fa fa-envelope-o">
          </i>
         </a>
        </li>
        <li class="favorite-pin-container">
        </li>
       </ul>
      </div>
     </div>
     <div class="main-image-sponsored-container">
      <div class="main-article-image">
       <div class="image-pin" data-image-url="https%3A%2F%2Fassets.themuse.com%2Fuploaded%2Fattachments%2F14412.jpg%3Fv%3D619b23bf51e3245ce29c84add76f56e107e24d8ac6ffe9ceb8f32fcda691b819">
       </div>
      </div>
     </div>
     <div class="main-column">
      <div class="article-content">
       <div class="article-row">
        <div class="article-main-column compiled-content with-side-articles share-base">
         <p>
          For each of the eager beavers out there who seize upon any opportunity to remind the higher-ups of their existence, there are handfuls of fearful employees doing whatever they can to avoid unwanted attention or judgement from management.
         </p>
         <p>
          If you fall in this category, you’ve probably mastered the art of always appearing busy as a mechanism to avoid conversation, memorized your boss’ schedule so you can avoid run-ins, and learned the straight-and-narrow approach to completing tasks in a way that doesn’t raise eyebrows or warrant the most dreaded experience of all: being called into the boss’ office. <li>[ahref]</li>[link]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][search]
         </p>
         <p>
          Why are so many of us fearful of our employers? Is the modern workplace really dominated by Machiavellian tyrants?
         </p>
         <p>
          Probably not. Data shows that any given boss’ personality might be irrelevant to these anxieties. In fact, as many as one in four people fear being yelled at by their superior, regardless of his or her past behavior.
         </p>
         <p>
          <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[link][link]<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>[ahref]<li>[link]</li>
         </p>
         <p>
          <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[ahref]
         </p>
         <p>
          <li>[search]</li><li>[search]</li>[search]<li>[search]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li>
         </p>
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <p>
          A client once told me that, for years, she would agonize every time she rambled in a meeting or misspoke on a conference call. After meeting her husband, the CEO of a telecommunications firm, she realized that the problem was universal. “He would come home from work worrying about a comment he made to an investor or whether he’d misjudged a big decision. His fears were never about his employees’ minor screw-ups—they were about his bosses.” [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[ahref]<li>[search]</li><li>[ahref]</li>[link]
         </p>
         <p>
          Think about it: You aren’t losing sleep over the mistakes the intern made today, are you? It’s the same way with your boss. He or she is often more focused on big projects than on your missteps.
         </p>
         <p>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[link][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
         </p>
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <p>
          You can’t change that which you don’t acknowledge. For this reason, it’s crucial that you check in and pay attention to your fear-based thoughts. Be honest with yourself: Is the fear that you feel toward your boss based on some other work or life experience deep in your past? Is it really about this particular person?
         </p>
         <p>
          In many cases, this fear has little to do with your boss. For example, a client recently told me that her biggest workplace fear is getting fired. This fear influenced many of her interactions in the workplace, particularly by deterring her from speaking up when there was an issue that demanded a conversation with her supervisor. “There was an occasion where I was being bullied by a colleague,” she explained to me, “and as much as I knew it should be addressed, I ultimately decided to keep it to myself due to my extreme fear of being fired.” [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][link][link]<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </p>
         <p>
          After speaking further, the true source of her fear became obvious: Her father was laid off during the recession, and her parents divorced shortly thereafter. I watched tears fall down as she spoke of a time when her father lost his job, and the stress was seemingly a catalyst for her parents’ eventual divorce. [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
         </p>
         <p>
          Who wouldn’t carry this fear on after that? And that’s exactly why it’s so important that we get to the root of it. One creative way to do this is through writing. Make a list of your fears and what they might be telling you. Give them a voice. You’ll likely learn a lot—and maybe even find that they aren’t so scary after all. <li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
         </p>
         <p>
          <br>
           <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </br>
         </p>
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <p>
          For most of us, there will be times when the boss is unpleasant or treats us with less respect than we feel we deserve. In some of those cases, her reaction will be warranted, but more often than not, her behavior will be the side effect of something else in her life. More than anything, it’s important to realize that almost nothing in the workplace is truly personal.
         </p>
         <p>
          Ask yourself if your boss’ treatment toward you is a pattern you’ve seen in his or her behavior elsewhere. By examining where you see it also showing up, you’ll realize that it’s not really about you. I also recommend reading
          <em>
           [link]
           
          </em>
          by Don Miguel Ruiz, which has some great practical exercises to help you not take things personally.
         </p>
         <p>
          If you’ve done that, and you really do feel like your boss might have it out for you, address it so that your boss has an opportunity to check in with you. For example: “I’ve gotten the impression that there’s perhaps something that I can do to be a stronger employee. Can we set up a meeting to discuss how I could better serve you?” This is a huge (and scary) step, but it holds fruitful results.
         </p>
         <p>
          <li>[search]</li><li>[ahref]</li><li>[search]</li>[link]<li>[search]</li>[search]
         </p>
         <h2>
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <p>
          <li>[link]</li><li>[link]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </p>
         <p>
          Great employees pay attention to their boss’ priorities and pain points, and they constantly offer to take on side projects—projects that the boss may not have initially thought about—to improve a process or ease the workload.
         </p>
         <p>
          How? In order to come up with projects that truly make his or her heart sing, you must anticipate circumstances or projects that may present challenges in the near future. What are your boss’ goals, priorities, and—most importantly—problems? Your ability to identify mitigate issues before they arise is key to becoming an irreplaceable employee. [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>[link][ahref]<li>[ahref]</li>
         </p>
         <p>
          The more you know that you’re needed (and wanted), the more that the fear will subside.
         </p>
         <p>
          <li>[search]</li>[search][link]<li>[search]</li>[ahref][ahref][link]<li>[link]</li><li>[ahref]</li><li>[link]</li>[ahref][link][search]
         </p>
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <p>
          We are conditioned from a young age to seek acceptance from our peers. I call this the social self, our natural default setting that is driven by the desire to be liked. On the other side of this desire is the fear of not being liked. For this reason, it’s critical that we create a professional persona as we evolve in our careers. The ability to draw a distinction between who you are in your social life—your social self—and who you are in your professional life enables you to departmentalize your fears.
         </p>
         <p>
          Take some time to envision who you want to be in your professional life and commit to honoring that vision. This might feel inauthentic because it requires you to reprogram those long-standing default settings, but there is nothing more powerful and authentic than creation. Once you have determined who you want to be professionally, assess other aspects of your work life that may also have to change. For example, if your professional self is committed to no longer being late for your standing morning meeting, it’s crucial that you start setting your alarm clock. <li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li><li>[link]</li>
         </p>
         <p>
          <br/>
          <br>
           <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link][link]<li>[link]</li><li>[link]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link][ahref]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>
          </br>
          Whether your fear is in response to criticism or in anticipation of it, being scared of your boss is incredibly detrimental to your performance in the workplace. The only way to get past this fear is to get clear on the root of it; awareness is a powerful mechanism that sparks change. Your fear serves as an invitation for personal growth. Learning to identify will help you move past your insecurities so that you can focus fully on what matters to your employer and to your own professional evolution.
         </p>
         <p>
          <br/>
         </p>
         <h4>
          Photo of
          <a href="/pic-169624712/stock-vector-businessman-holding-big-businessman-foot-vector-eps.html?src=c7g7JpKVfV4uzmiylW6VVQ-1-19" target="_blank">
           man being stepped on courtesy of Shutterstock
          </a>
          .
         </h4>
         <div class="post-email-capture">
         </div>
        </div>
        <aside class="article-right-column">
         <div class="article-sidebar-content post-related-articles">
          <div id="related-articles">
          </div>
         </div>
        </aside>
       </div>
       <div class="tags-topics">
        <h4>
         Topics
        </h4>
        [link]
        
        <span>
         ,
        </span>
        <a href="/tags/syndication">
         Syndication
        </a>
        <span>
         , <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][search]<li>[ahref]</li>[ahref]
        </span>
        [ahref]
        
        <span>
         , [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
        </span>
        [ahref]
        
        <span>
         ,
        </span>
        [ahref]
        
       </div>
       <div class="author-info">
        [ahref]
        
        <div class="author-info-text">
         <p class="author-description">
          Ashley Stahl is a national security professional turned Career Coach to the Millennial generation. Named a "Top 99 Under 33 Foreign Policy Leader" by Diplomatic Courier Magazine, Ashley's mission is to empower her generation to step into more authentic careers and master the job hunt. Visit
          <a href="m">
           LandMoreJobOffers.com
          </a>
          for her free training on how to land a new job you love in record time.
         </p>
         <a class="read-more" href="/author/ashleystahl">
          <span>
           More from this Author
          </span>
          <i class="fa fa-long-arrow-right">
          </i>
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="modal fade class-modal" id="muse-modal" role="dialog" tabindex="-1">
      <div class="modal-dialog">
       <div class="modal-content">
        <div class="modal-body">
         [link]
         
         <p>
          Hmmm, seems you've already signed up for this class. While you're here, you may as well check out all the
          <a href="/jobs">
           amazing companies that are hiring
          </a>
          like crazy right now.
         </p>
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="action-items">
     <div class="post-onboarding-wrapper" id="post-user-onboarding">
     </div>
    </div>
    <div id="recommended-content">
    </div>
   </div>
   <div class="scroll">
    <i class="fa fa-chevron-up">
    </i>
    <br>
     [ahref]<li>[link]</li>[link]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[search]
    </br>
    Back to top
   </div>
   <div id="post-onboarding-hint">
   </div>
  </main>
  <div class="modal register-modal" role="dialog" tabindex="-1">
   <div class="modal-container">
   </div>
  </div>
  <div id="onboarding-modal-container">
  </div>
  <div class="modal fade job-filter-alert-modal" role="dialog" tabindex="-1">
   <div class="modal-flexbox">
    <div class="modal-container">
    </div>
   </div>
  </div>
  <footer class="footer" id="footer">
   <div class="container">
    <div class="col-xs-12 col-sm-3 col-md-3 col-lg-3">
     [link]
     
     <div class="copyright">
      © 2018 Daily Muse, Inc
     </div>
    </div>
    <div class="col-xs-4 col-sm-3 col-md-2 col-lg-2">
     <div class="column internal-link">
      <h6>
       About The Muse
      </h6>
      [link]
      
      [ahref]
      
      <a href="/profiles/themuse">
       Careers
      </a>
      <a href="/hc/en-us" rel="noopener noreferrer" target="_blank">
       FAQs
      </a>
      [link]
      
      [ahref]
      
      [link]
      
      <a href="/user/terms">
       Terms of Use
      </a>
      [ahref]
      
     </div>
    </div>
    <div class="col-xs-4 col-sm-3 col-md-2 col-lg-2">
     <div class="column internal-link">
      <h6>
       Popular Jobs
      </h6>
      [link]
      
      [ahref]
      
      <a href="/jobs/l-Seattle%2C-WA-jobs?ref=footer">
       Seattle Jobs
      </a>
      <a href="/jobs?keyword=Engineering&amp;ref=footer">
       Engineering Jobs
      </a>
      [link]
      
      [link]
      
     </div>
    </div>
    <div class="col-xs-4 col-sm-3 col-md-2 col-lg-2">
     <div class="column internal-link">
      <h6>
       Get Involved
      </h6>
      [ahref]
      
      <a href="/thenewrulesofwork">
       The Muse Book: The New Rules of Work
      </a>
      <a href="/startcoaching">
       For Career Coaches
      </a>
      [ahref]
      
      <a href="m">
       Send Feedback About The Muse
      </a>
      [link]
      
     </div>
    </div>
    <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
     <div class="column social_col">
      <h6>
       Join The Conversation
      </h6>
      [link]
      
      [link]
      
      [ahref]
      
      [ahref]
      
      [link]
      
     </div>
    </div>
   </div>
  </footer>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0269
  </b>
 </body>
</html>
