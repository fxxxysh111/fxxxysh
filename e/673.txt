--->|VGhhdCBhbGwgSSBoYWQgd2FzIG15IGZyaWVuZHMgYmFjayBpbiBOb3ZhIFNjb3RpYSwgd2hvIHdvdWxkIGVtYWlsIG1lIGNvbnN0YW50bHkgb24gd2hhdCBvdGhlciBwZW9wbGUgd2VyZSBwbGF5aW5nIGFnYWluc3QgbWUgYW5kIGhvdyB0aGV5IHdlcmUgcGVyY2VpdmluZyBtZS4gClBvaW50IHRvICJldmVyeSB0aGUgb24gdGhlIGJvb2tzIiBmb3IgbWUsIHBsZWFzZSBsb2wuIFNvLCBhbnkgY3JpbWUgbWVhbnMgdGhleSAiaW52b2x2ZWQgZW5vdWdoIiBvciBpcyBpdCBvbmx5IGNlcnRhaW4gY3JpbWVzPyBFbmxpZ2h0ZW4gbWUsIG8gd2lzZSBiaXJkIGxhd3llci4gQ2l0ZSBpdCwgdG9vLgpNb3N0IGludGVybmF0aW9uYWwgdHJhdmVsZXJzIHZpc2l0aW5nIFBvcnR1Z2FsIHdpbGwgZmx5IGludG8gTGlzYm9uIFBvcnRlbGEgQWlycG9ydCAoQWVyb3B1ZXJ0byBkZSBMaXNib2EpLCB0aGUgaW50ZXJuYXRpb25hbCBhaXJwb3J0IGp1c3Qgbm9ydGggb2YgTGlzYm9uLCB0aGUgY2FwaXRhbCBvZiBQb3J0dWdhbC4gClRoaXMgZ3V5IGlzIHRha2luZyB5b3UgZm9yIGEgcmlkZSB0byBzZWxsIGEgcG9saXRpY2FsIGFyZ3VtZW50LiBNeSBjb3dvcmtlcnMgZG8gaXQgdG9vLiAKT25lIHN0dWR5LCBMSU1JVCAyLCBkZXZlbG9wZWQgYSBwcm90b2NvbCBmb3IgZ2l2aW5nIG1hZ25lc2l1bSBhcyBzb29uIGFzIHBvc3NpYmxlIGFmdGVyIG9uc2V0IG9mIHRoZSBoZWFydCBhdHRhY2sgYW5kIGJlZm9yZSBhbnkgb3RoZXIgZHJ1Z3MuLiAKT3IgaGF2aW5nIHRoZSBwZW9wbGUgaSBiYW5uZWQgd2VsY29tZWQgYmFjayB3aXRoIG9wZW4gYXJtcyBieSBwZXJtYSBhZnRlciBwZW9wbGUgbGlrZSBoYW1teSB3ZW50IGNyeWluZyB0byB0aGVtLiAKQUtBLCB5b3Ugc2NyZXcgdXAgbGVzcy4gQW5kIGFzIHNvb24gYXMgeW91IHJlYWxpemUgdGhhdCB0aGUgc3RyZWFtIG9mIGluY2lkZW50cyBpcyBkcnlpbmcgdXAsIHlvdSBub3RpY2UgdGhhdCB5b3VyIGFscmVhZHkgYmVjb21lIGEgY29uZmlkZW50IG1hbi4gRXZlcnlvbmUgbWFrZXMgYXNzdW1wdGlvbnMgYmFzZWQgb2ZmIG9mIHdoYXQgc29jaWV0eSBpbmZvcm1zIHRoZW0gaXMgdGhlIG5vcm0gYW5kIHdoYXQgdGhleSBwZXJzb25hbGx5IGV4cGVyaWVuY2UuLiAKQXJlIHB1dHMgYW5kIHRha2VzIGV2ZXJ5IHF1YXJ0ZXIuIFdoZW4gaXQgY29tZXMgdG8gaGVscGluZyBvdXQgYWlybGluZXMgaW4gZGVlcCB0cm91YmxlLCBCb2VpbmcgbWF5IG5vdCBoYXZlIG11Y2ggY2hvaWNlLiAKTWljaGVsbGUgT2JhbWEsIGxpa2UgUHJlc2lkZW50aWFsIEJhcmJpZSwgd2FzIGZvcmNlZCB0byBmaW5kIGFuIGlzc3VlIHRoYXQgZml0IGhlciBhc3NpZ25lZCBnZW5kZXIgcm9sZSAoYXMgd29tYW4gYW5kIGFzIG1vdGhlciksIGJ1dCBwb29yIE1pY2hlbGxlIGFsc28gaGFkIHRvIGZpbmQgc29tZXRoaW5nIHRoYXQgd291bGQgZml0IGhlciByYWNpYWwgcG9zaXRpb24gYXMgd2VsbC4gQmVlbiBjcml0aWNpemVkIGZvciBiZWluZyB0b28gImFuZ3J5IiBhbmQgdG9vICJmb3JjZWZ1bCIgKHRyYW5zbGF0aW9uOiBqdXN0IHRvbyB0aHJlYXRlbmluZyBhcyBhIHBvd2VyZnVsIEJsYWNrIHdvbWFuKSwgTWljaGVsbGUgaGl0IG9uIHRoZSBwZXJmZWN0IGlzc3VlLi4gCkV4cHJlc3Npb25zIG9mIGludGVyZXN0IG1pZ2h0IHNlZW0gc3RyYWlnaHRmb3J3YXJkLiBZb3UgcHV0IGluIHlvdXIgcHJpY2UgYW5kIGEgZGVhbCBpcyBkb25lLiBCdXQgeW91IG5lZWQgdG8gdW5kZXJzdGFuZCB0aGUgdW53cml0dGVuIHJ1bGVzICAgYmVjYXVzZSBpbiBhIHdheSB3aGF0IHRoZXkgYXJlIGEgZ2FtZSBvZiBwb2tlcjogb2YgYmx1ZmYgYW5kIGNvdW50ZXIgYmx1ZmYsIG9mIG1hbmV1dmVyaW5nLCBvZiBwYXRpZW5jZSBhbmQgb2YgcmlzayAgIHdpdGggaGlnaCBzdGFrZXMsIGluZGVlZCB2ZXJ5IGhpZ2ggc3Rha2VzIGZvciBhbGwgaW52b2x2ZWQsIGFuZCBmZXcgb3Igbm8gcnVsZXMuLiAKQmVzaWRlcyBpbmNyZWFzaW5nIHN1biBleHBvc3VyZSwgdGhlIGJlc3Qgd2F5IHRvIGdldCBhZGRpdGlvbmFsIHZpdGFtaW4gRCBpcyB0aHJvdWdoIHN1cHBsZW1lbnRhdGlvbi4gVHJhZGl0aW9uYWwgbXVsdGl2aXRhbWlucyBjb250YWluIGFib3V0IDQwMCBJVSBvZiB2aXRhbWluIEQsIGJ1dCBtYW55IG11bHRpdml0YW1pbnMgbm93IGNvbnRhaW4gODAwIHRvIDEsMDAwIElVLiAKV2UgY2FuJ3QgY29udHJvbCB0aGUgd2FsbCBjaGFsa2luZyB3aGljaCBkaXNmaWd1cmVzIG91ciB0b3ducyBhbmQgY2l0aWVzLCBwcm9jbGFpbWluZyBpbnN0YW50IGN1cmVzIGZvciBzdWNoIHVubWVudGlvbmFibGUgbWFsYWRpZXMgYXMgaGFlbW9ycmhvaWRzIGFuZCBzZXh1YWwgaW5hZGVxdWFjeS4gCkFsbCBpdCdzIGdvbm5hIHRha2UgZm9yIHBlb3BsZSB0byByZWFsaXplIHRoZSBmYWxsYWN5IG9mIHRoaXMgaWRlYSBpcyBkb2luZyBhIHNpbmdsZSB0cmFuc2FjdGlvbiBhbmQgbm90IGdldHRpbmcgYW55dGhpbmcgZm9yIGl0IGluIHJldHVybi4gR2V0dGluZyB2YWx1ZSBiYWNrIGZyb20gY29udHJpYnV0aW5nIGlzIHByZWRpY2F0ZWQgb24gc29tZW9uZSBlbHNlIGdpdmluZyB5b3Ugd2hhdGV2ZXIgeW91J3JlIGxvb2tpbmcgZm9yIGFmdGVyIHRoZSBmYWN0LiBMZXQncyB1c2Ugb25lIG9mIHlvdXIgZXhhbXBsZXM6IHNheSBJIGdpdmUgc29tZW9uZSBhbiBYYm94LiBJIHRoZW4gZ2V0IHlvdXIgc28gY2FsbGVkIGNvbnRyaWJ1dGlvbiBwb2ludHMgb3Igd2hhdGV2ZXIuIFRvIGFjdHVhbGx5IGF0dGFpbiB0aGUgdmFsdWUgb3IgYW55IGJlbmVmaXQgd2hhdHNvZXZlciBmcm9tIHRoaXMgdHJhbnNhY3Rpb24sIEkgd291bGQgaGF2ZSB0byBtYWtlIGFuIGFkZGl0aW9uYWwgc3Vic2VxdWVudCByZXF1ZXN0LiBPa2F5LCBzYXkgSSB3YW50IGEgUFM0LiBXaGF0IGlmIG5vIG9uZSBpcyBjb250cmlidXRpbmcgYW55IG9mIHRob3NlPyBEbyBJIGp1c3QgY29udGludWUgdG8gY2hhbmdlIG15IHJlcXVlc3QgdW50aWwgc29tZW9uZSBmdWxmaWxscyBpdD8gRG8gSSByZXRhaW4gYW55IG9mIHRoZSByZW1haW5pbmcgcG9pbnRzIGlmIEkgc3VjY3VtYiB0byBhc2tpbmcgZm9yIHNvbWV0aGluZyBvZiBtdWNoIGxvd2VyIHZhbHVlPyBJZiBJJ20gbm90IGdldHRpbmcgdGhlIHRydWUgdmFsdWUgb2Ygd2hhdCBJJ20gY29udHJpYnV0aW5nIGJhY2ssIHRoZW4gaXQgZGV2YWx1ZXMgdGhlIHByb3Bvc2l0aW9uIG9mIGFuIGVxdWl0YWJsZSByZXR1cm4uIFRoZXNlIHBvaW50cyB0aGF0IEknZCBiZSBnZXR0aW5nIHdvdWxkbid0IHRydWx5IGJlIHRoZWlyIHdvcnRoIGFzIHRoZWlyIHZhbHVlIGlzIGFyYml0cmFyeS4gV2hhdCBoYXBwZW5zIGlzIHRoYXQgY29udHJpYnV0aW5nIHBlcnNvbiBpcyBsZWZ0IGVtcHR5IGhhbmRlZCBldmVyeSB0aW1lLgpJZiB5b3UgdGhpbmsgQW1lcmljYW5zIGFuZCBJdGFsaWFucyBhcmUgYmFkLCB0cnkgTWV4aWNvLiBTcGVlZCBsaW1pdHMgYW5kIHN0b3Agc2lnbnMgZG9uIGV4aXN0LCB0aGUgcG9saWNlIHdhdGNoIHlvdSBkbyBpdCB3aGlsZSBzbW9raW5nIGEgYmx1bnQgb24gdGhlIGJhY2sgb2YgYSB0ZWNobmljYWwgd2l0aCBhIFNBVyBtb3VudGVkIG9uIHRoZSBiYWNrIGFuZCBncmVuYWRlcyBvbiB0aGVpciB2ZXN0cy4gSXQgZ3JlYXQgZnVuLgpTdW1tYXJpemluZyBhbiBhcnRpY2xlIGluIHRoZSB0aXRsZSBpcyBvaywgYnV0IGtlZXAgaXQgZnJlZSBvZiBvcGluaW9uLCBjb21tZW50YXJ5LCBvciBsb2FkZWQgbGFuZ3VhZ2Ugbm90IGNvbnRhaW5lZCBpbiB0aGUgYXJ0aWNsZS4gCk5vdCBtYW55IHBlb3BsZSBhY3R1YWxseSB3b3JrIGluIHRoaXMgc3VubGVzcyBuaWdodG1hcmUgd2FyZWhvdXNlIGluIFhpY2hhbmcsIHdoZXJlIHRoZSBpbnNlY3RzIGFyZSBlbmNvdXJhZ2VkIHRvIG1ha2UgdGhlbXNlbHZlcyBlbnRpcmVseSBhdCBob21lLCByb2FtaW5nIGZyZWUsIGhlbHBpbmcgdGhlbXNlbHZlcyB0byB0aGUgY29udGFpbmVycyBvZiBmb29kIGFuZCB3YXRlciB0aGF0IGxpbmUgdGhlIHdhbGxzLCBicmVlZGluZyBsaWtlIC4gV2VsbCwgY29ja3JvYWNoZXMuIFRoZSByZWFzb24gbm90IG1hbnkgaHVtYW5zIGFyZSByZXF1aXJlZCB0byBydW4gdGhpcyBnYXJnYW50dWFuIGZhY2lsaXR5IGlzIHRoYXQgaXQncyBhY3R1YWxseSB2ZXJ5IGhpZ2ggdGVjaDsgbm90IG9ubHkgYXJlIHRoZSBmYWNpbGl0eSdzIGVudmlyb25tZW50YWwgY29uZGl0aW9ucyBtb25pdG9yZWQgYnkgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UsIGRhdGEgaXMgY29sbGVjdGVkIG9uIGluZGl2aWR1YWwgY29ja3JvYWNoZXMsIHJhbmdpbmcgZnJvbSBnZW5ldGljIG11dGF0aW9ucyB0byBob3cgZm9vZCBjb25zdW1wdGlvbiBpbXBhY3RzIGdyb3d0aC4gClNvLCB0aGUgcHJvYmFiaWxpdHkgb2YgZ2V0dGluZyBhdCBsZWFzdCBhIG9uZSBvciBhIGZpdmUgd2l0aCB0d28gZGljZSBpcyAxICAgNC85ID0gNS85LiAKVGhlIFVTIGhhcyBub3QgYWNoaWV2ZWQgaXRzIGdvYWxzLCB3aXRoIGRpc2FzdHJvdXMgY29uc2VxdWVuY2VzLi4gCkVoIGFpcmNyYWZ0IG1lY2hhbmljIGJlYXRzIG1lY2hhbmljYWwgZW5naW5lZXIgd2hvIHdvcmtzIGluIHRoZSBoeWRyYXVsaWNzIGluZHVzdHJ5IGxvbC4gSSBhc3N1bWVkIGl0IHdhcyBhIHJldHVybmxlc3Mgc3lzdGVtcyBiYXNlZCBvbiB0aGUgeWVhciwgYnV0IHBvdGVudGlhbGx5IEkgYW0gd3JvbmcgdG8gYXNzdW1lIGEgMjAxMyBjYXIgaXMgZ29pbmcgdG8gYmUgcmV0dXJubGVzcy4gSWYgaXQgaXMgYW4gb3BlbiBzeXN0ZW0gd2l0aCBhIHJldHVybiB0aGVuIEkgdHlwaWNhbGx5IGRvbiBzZWUgcGVvcGxlIHRhbGtpbmcgYWJvdXQgZnVlbCBwcmVzc3VyZSByZWd1bGF0b3JzLCBob3dldmVyIGl0IG11c3QgaGF2ZSBzb21ldGhpbmcgdGhhdCByZWd1bGF0ZXMgdGhlIGZ1ZWwgcHJlc3N1cmUsIGV2ZW4gaWYgdGhhdCBpcyBqdXN0IGEgcmVsaWVmIHZhbHZlLiAKQXJlIHlvdSBmb3IgcmVhbD8gdGhleSBldmVuIGV4cGxhaW4gaW4gdGhlIHZpZGVvIGhvdyB0aGlzIHJ1bnMgd2l0aCByYWNpYWwgcHJvZmlsaW5nLiBMaXRlcmFsbHkgdGhleSB0YWxrIGFib3V0IHdoeSB0aGV5IHJ1biB0YWdzLCB3aGljaCBpcyBmb3IgaWxsZWdhbCBkcml2aW5nIChydW5uaW5nIGxpZ2h0cykgYW5kIGhhdmluZyBpbGxlZ2FsIHRpbnRzLCB3aGljaCBsZXQncyBiZSBob25lc3QgaXMgYSBidWxsc2hpdCBwcmVjZWRlbnQgZm9yIGFsbG93aW5nIHBvbGljZSB0byBzZWUgYSBibGFjayBwZXJzb24gZHJpdmluZywgYW5kIHB1bGwgdGhlbSBvdmVyLiAKU28gY2hlY2sgdGhlaXIgd2Vic2l0ZSBhbmQgc2VlIGlmIGFueXRoaW5nIHNwZWNpYWwgaXMgaGFwcGVuaW5nIHdoZW4geW91IGluIHRvd24uLiAKVGhlIG1lbnUgaXNuJ3QgaHVnZSBidXQgdGhleSBkbyBldmVyeXRoaW5nIHNvIHdlbGwuIFdlIGhhZCBmcnVpdHMgZGUgbWVyIGFuZCBzdGVhayBmcml0ZXMgICBzaW1wbGUgZm9vZCwgYnV0IHZlcnkgbm9zdGFsZ2ljIGFuZCBkZWxpY2lvdXMuLiAKV2l0aG91dCBzaGFtcG9vLCBzaGUncyBmb3VuZCBoZXIgaGFpciBoYXMgYSBsb29zZSwgcHJldHR5IHdhdmUgdG8gaXQsIHJhdGhlciB0aGFuIHRoZSB1bnJ1bGluZXNzIHNoZSB0aG91Z2h0IHNoZSB3YXMgY3Vyc2VkIHdpdGguIApDYXJlc3RyZWFtIHdpbGwgcmV0YWluIGl0cyBtZWRpY2FsIGltYWdpbmcsIGRlbnRhbCBhbmQgaW5kdXN0cmlhbCBmaWxtcywgbm9uIGRlc3RydWN0aXZlIHRlc3RpbmcsIGFuZCBwcmVjaXNpb24gY29hdGluZyBidXNpbmVzc2VzIHdoaWNoIGFyZSBub3QgaW1wYWN0ZWQgYnkgdGhlIHNhbGUuIApSZWRjb21wdWxzaW9ucyAgNiBwb2ludHMgIHN1Ym1pdHRlZCA3IG1vbnRocyBhZ28KKDQpICJTYW1lIGNvbG9yIGZsdXNoIiAoYWxsIDUgcmVkIGNhcmRzIG9yIGFsbCA1IGJsYWNrIGNhcmRzKTsKTEcgaXMgbm93IHVwIHdpdGggZmV3IG5pY2Ugc3BsaXQgYWlyIGNvbmRpdGlvbmVycyBmb3IgdGhpcyBzdW1tZXIgYW5kIGhhdmUgY29tZSB1cCB3aXRoIG5ldyBmZWF0dXJlcyBhcyB3ZWxsLiBTcGxpdCBhaXIgY29uZGl0aW9uZXJzIHNwZWNpYWxseSBnZXQgYSBnb29kIHByZWZlcmVuY2UgYXMgdGhleSBzZWVtIHRvIGJlIG11Y2ggbW9yZSBjb252ZW5pZW50LiBUbyBoYXZlIGEgbG9vayBmb3J3YXJkIGFzIHRvIHdoaWNoIGFyZSB0aGUgdG9wIHNwbGl0IGFpciBjb25kaXRpb25lcnMgaW4gSW5kaWEgZnJvbSBMRyBoYXZlIGEgTG9vay4KU2hhbmUgV2FybmUgcHJvbWlzZXMgYW4gJ2V4Y2l0aW5nIGFubm91bmNlbWVudCcgc29vbiB3aXRoIFNhY2hpbiBUZW5kdWxrYXIKSWYgeW91IGFwcGx5IGFmdGVyIDMgbW9udGhzIG9mIGVsaWdpYmlsaXR5IGZvciB0aGlzIHBsYW4gKGllIG1hcnJpYWdlIG9yIGNvbW1vbiBsYXcgc3RhdHVzKSB0aGV5IGRvIG5vdCBzdGFydCB5b3VyIGNvdmVyYWdlIGZvciBhbiBhZGRpdGlvbmFsIDMgbW9udGggd2FpdGluZyBwZXJpb2QuIApBbGxpdGVyYXRpdmVBbG9uZUxpdCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCldhbGsgdXBzIGFyZSBoYXJkIHRvIGNvbWUgYnkgZHVyaW5nIHRoZSB0aW1lIHlvdSBiZSBwYXNzaW5nIHRocm91Z2ggYW5kIHNlcnZpY2Ugd2lsbCBiZSBzaGl0IHVubGVzcyB5b3UgYXJlIG9uIHRvcCBvZiBvbmUgb2YgdGhlIGJpZyBwYXNzZXMuCjIwMTcuIApFc3BlY2lhbGx5IGluIEF1dG8sIGNhcnJpZXJzIGFuZCBjbGFpbXMgaGFuZGxlcnMgYXJlIGFic29sdXRlbHkgd29ya2luZyB0byBnZXQgY2xhaW1hbnRzIG1lZGljYWwgdHJlYXRtZW50cywgcmVwYWlycywgcmVwbGFjZW1lbnQgdmVoaWNsZXMgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBuZWVkZWQgaW4gdGhlIG1vc3QgZWZmaWNpZW50IGFuZCBlZmZlY3RpdmUgbWFubmVyIHBvc3NpYmxlLiAKQW55IHRpbWUgSSBzZWUgYW55IG9mIHRob3NlIEkgZ2V0IGJsYXN0ZWQgd2l0aCBub3N0YWxnaWEgZm9yIGEgdGltZSB3aGVuIGNvbXB1dGVycyB3ZXJlIG1vcmUgdXNlciB1bmZyaWVuZGx5LCBiaWcgYmVpZ2UgYm94ZXMgYW5kIG15IDIxIGluY2ggVHJpbml0cm9uIENSVCBzZWVtZWQgbGlrZSB0aGUgYmlnZ2VzdCBhIG1vbml0b3IgY291bGQgZXZlciBnZXQuIFRoZSBpbnRlcm5ldCB3YXMgc3RpbGwgdGhlIHdpbGQgd2lsZCB3ZXN0LCBhbmQgd2UgaGFkIGp1dXVzdCBlbm91Z2ggYmFuZHdpZHRoIHRvIHJlYWxseSBlbmpveSBpdC4uIApXZSBhcmUgYSBmYW1pbHkgb3JnYW5pemF0aW9uLiJDYWxlbmRhciA5IFNhdDEwIFN1bjExIE1vbjEyIFR1ZTEzIFdlZCBNYW5pbG93IExhcyBWZWdhczogVGhlIEhpdHMgQ29tZSBIb21lISBXZXN0Z2F0ZSBMYXMgVmVnYXMgQ2FzaW5vLiAKT25lIGlzIGltbWF0dXJlIGFuZCBJIGd1ZXNzIGEgYml0ICJ3aGlueSIgYW5kIHRoaW5rcyBoZSBoYXMgZXZlcnl0aGluZyBmaWd1cmVkIG91dCBleGNlcHQgdGhlIGR1Y2tzLCBhbmQgdGhlIG90aGVyIGlzIHRoZSBvbmUgd2hvIGRpZG4gZ2V0IG9uIHRoZSBtZXJyeSBnbyByb3VuZCAocmVwcmVzZW50aW5nIHRoaXMgaW5ub2NlbmNlLCB3aGljaCBoZSBoYXMgdGhlbiBkZWNpZGVkIHRvIGxldCBnbyBvZmYpLiAKSWYgdGhlIGhpZ2hlc3QgcmFuayBtYXRjaGVzLCB0aGVuIGNvbXBhcmUgdGhlIHNlY29uZCwgYW5kIHRoaXJkIGFuZCBzbyBvbi4gCkV0LCBpY2ksIHBhcyBkZSBkdWFsaXNtZSBlbnRyZSBiaWVuIGV0IG1hbCwgc2V1bCBsIGludGVudGlvbm5lbCBvdSBwYXMgZmFpdCBxdSBzb250IGJuZmlxdWVzIG91IHBhcy4gCkNocmlzdGlhbiBDb25uZWN0aW9uIEV2ZW50czogTG9jYWwgRXZlbnRzIGluIExvbmRvbiBmb3IgU2luZ2xlIENocmlzdGlhbnMKVGhlIENoZW5uYWkgU3VwZXIgS2luZ3MgZHVnb3V0IHdhcyBnb2JzbWFja2VkLiBUaG9zZSB3aG8gZG91YnRlZCB3aGV0aGVyIERob25pIHN0aWxsIGhhZCBpdCB3ZXJlIGdvYnNtYWNrZWQuIApXaWxsIG9ubGluZSBwb2tlciBkaWUKU29tZSBvZiB0aGUgZ3JlZW4gY29tbXVuaXR5IGluaXRpYXRpdmVzClRoZSBpbmZsYW1tYXRpb24gaXMgbGlrZWx5IGEgcmVzdWx0IG9mIGVhdGluZyBhIGhpZ2ggY2FyYm9oeWRyYXRlIGRpZXQuIAooUHJpdmFjeSBQb2xpY3kpRmFjZWJvb2sgQWRzVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpQW1hem9uIFVuaWZpZWQgQWQgTWFya2V0cGxhY2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApNeSB3aWZlIGFuZCBJIGdvdCBtYXJyaWVkIGF0IGEgcGVuc2lvbiBvbiBHYW5nSHdhIG5lYXIgR3llb25nZ2kgZG8gKEkgdGhpbmsuIGhhdmUgdG8gY2hlY2spLiBSZW50ZWQgdGhlIGVudGlyZSBwbGFjZS4gQnJvdWdodCBhbGwgb3VyIGd1ZXN0cyBvbiBCdXNlcyBmcm9tIEJ1c2FuLiBIaXJlZCB0aGUgYmVzdCAoYXQgdGhlIHRpbWUgYW5kIGluIG15IG9waW5pb24pIGJhciBiYW5kIGluIEJ1c2FuIGFuZCBicm91Z2h0IHRoZW0gYXMgd2VsbC4gQm91Z2h0IGFsbCB0aGUgYWxjb2hvbCBmcm9tIGEgZnJpZW5kIHdobyBvd25lZCBhIGJhciBpbiBCdXNhbiBhbmQgc2hpcHBlZCBpdCB1cCBvbiB0aGUgYnVzLiBHb3QgZmxvd2VycyBkZWxpdmVyZWQgZnJvbSB0aGUgY2VudHJhbCBmbG93ZXIgbWFya2V0IGluIFNlb3VsLiBHb3QgYSBjYXRlcmVyIHRvIGRlbGl2ZXIgdGhlIHN0YW5kYXJkIGZlYXN0IHRvIHRoZSBwZW5zaW9uLiBXYXMgYW1hemluZyBmdW4gYW5kIG1vc3Qgb2YgdGhlIChtYWluIGZhbWlseSBhbmQgZnJpZW5kcykgZ3Vlc3RzIHNsZXB0IGF0IHRoZSBwZW5zaW9uIGFuZCBwYXJ0aWVkIGFsbCBuaWdodC4gSXQgd2FzIGNoZWFwZXIgKGV2ZW4gZmFjdG9yaW5nIGluIGJ1c2VzIGZyb20gQnVzYW4gdG8gU2VvdWwgYW5kIHByaXZhdGUgY2F0ZXJpbmcpIHRoYW4gYSBsb3Qgb2YgbXkgZnJpZW5kIHdlZGRpbmcgaGFsbHMgYW5kIHNvb28gbXVjaCBiZXR0ZXIuCkhlYWx0aCBNYWludGVuYW5jZSBDYXJlIGluIFdvcmsgUmVsYXRlZCBMb3cgQmFjayBQYWluIGFuZCBJdHMgQXNzb2NpYXRpb24gV2l0aCBEaXNhYmlsaXR5IFJlY3VycmVuY2UKQ2FuIEkgYnV5IHNvbWUgd2F0ZXIgdG8gZGlsdXRlIHRoYXQgc29tZSBtb3JlPyBJIHdhbnQgaXQgdG8gYmUgbW9yZSBlZmZlY3RpdmUuIEluIGZhY3QsIEkgZG9uIGV2ZW4gd2FudCBMU0QgaW4gbXkgd2F0ZXIuIApUaGUgYmVhY2ggaXMgcXVpdGUgbmljZS4gCjMpLCBhbmQgd2FzIHJlbGVhc2VkIG9uLiBPY3RvYmVyLiAKQ3JhenkgUmljaCBBc2lhbnMgYXZvaWRzIGFsbCBvZiB0aGVzZSwgaW5zdGVhZCBzaG93aW5nIHRoZSBudWFuY2VzIG9mIEFzaWFuIHdvbWVuIGV4cGVyaWVuY2VzIGFjcm9zcyBnZW5lcmF0aW9ucy4uIApUaGUgTGFtcCBTaGFkZSBIb3VzZQpCZWluZyBuaWNlciB0byBteSBza2luIHdhcyBpbXBvcnRhbnQgICBub3Qgc2NydWJiaW5nIHRvbyBoYXJzaGx5LCBtYWtpbmcgc3VyZSBpdCB3YXMgbmljZWx5IGh5ZHJhdGVkLCBldGMuIFlvdXIgc2tpbiBsb29rcyBwcmV0dHkgYW5ncnkgICBJIG1pZ2h0IGRyb3AgdGhlIENsYXJpc29uaWMgKGNvdWxkIGJlIGluY3JlYXNpbmcgaXJyaXRhdGlvbikgYW5kIHRoZSBDbGluaXF1ZSAibG90aW9uIiAoaXQgZ290IGEgVE9OIG9mIGRyeWluZyBhbGNvaG9sIGluIGl0ISkuIEV2ZW4gdGhlIEwgbW9pc3R1cml6ZXIgaGFzIGRlbmF0dXJlZCBhbGNvaG9sIGluIHRoZSBmaXJzdCBmaXZlIGluZ3JlZGllbnRzICAgZ29vZCBjYWxsIHN3aXRjaGluZyBpdCBmb3IgdGhlIElUIENvc21ldGljcyBjcmVhbSEKR29vZ2xlIGFsc28gaGFzIHlvdXR1YmUgd2hpY2ggaGFzIG5vIHJlYWwgY29tcGV0aXRpb24gKE1hbnkgbWFueSB5b3V0dWJlcnMgYXJlIGRlc3BlcmF0ZSBmb3IgYSB2aWFibGUgYWx0ZXJuYXRpdmUpIGFuZCBBbmRyaW9kIHdob3NlIG9ubHkgbWVhbmluZ2Z1bCBjb21wZXRpdGlvbiBpcyBBcHBsZSB3aG8gdGhleSBzaGFyZSBhIGhpZ2hseSBwcm9maXRhYmxlIGR1b3BvbHkgd2l0aC4gCldyaXRlIHlvdXIgcmVwcyBhbmQgc2VuYXRvcnMgcmVnYXJkbGVzcyBvZiBwYXJ0eS4gVGhlIG9ubHkgZ3VhcmFudGVlZCBubyBpbiBhbGwgb2YgQ29uZ3Jlc3MgaXMgbGlrZWx5IFJhbmQgUGF1bC4gQW5kIEkgc2F5IHRoYXQgYXMgc29tZW9uZSB3aG8gb3Blbmx5IGlkZW50aWZpZXMgYXMgYSBkZW1vY3JhdGljIHNvY2lhbGlzdC4gU28sIG1heWJlIGRlbW9uaXphdGlvbiBvZiBhbGwgb2YgeW91ciBmZWxsb3cgY2l0aXplbnMgYWxsIHRoZSB0aW1lLCBpc24gZ3JlYXQuCkhlIGhhcyBhbGwgdGhlIDIgcGFpcnMgYW5kIHdvcnNlIHNldHMgb2YgVFQgZm9yIHZhbHVlIGFuZCBzb21ldGltZXMgYmFkIHJlZ3Mgd2lsbCBldmVuIG92ZXJwbGF5IEFLIGluIHRoaXMgc3BvdC4gSGlzIHNlbWkgYmx1ZmZzIGNvbnNpc3Qgb2YgbnV0IGZsdXNoIGRyYXdzLCBvcGVuIGVuZGVkIHN0cmFpZ2h0IGRyYXdzLCBhbmQgcGFpcnMrb3BlbiBlbmRlcnMsIGFuZCBzb21lIFEgaGlnaCBmbHVzaCBkcmF3cyBhcyB3ZWxsLiBJIHRoaW5rIGFnYWluc3QgdGhpcyByYW5nZSB3ZSBub3QgbG92aW5nIGxpZmUgYnV0IGhhdmUgZW5vdWdoIGVxdWl0eSB0byBzdGFjayBvZmYuLiAKVGhlIGFuc3dlciB0byB0aGlzIGNvbnRyYWRpY3Rpb24gbm90IHNvIG11Y2ggaW4gdGhlIGVjb25vbWljIHJlZm9ybSBkZWJhdGUgZ29pbmcgb24sIGJ1dCBpbiBhbm90aGVyLCBtb3JlIHF1aWV0IG1vdmVtZW50IGZvciBlY29ub21pYyBqdXN0aWNlLiBBbnN3ZXIgaXMgdG8gc2VuZCBzb21lIG9mIHRoZSBXYWxsIFN0cmVldCBmYXQgY2F0cyB0byBqYWlsIGZvciB0aGVpciBjcmltZXMgYWdhaW5zdCB0aGUgcGVvcGxlLiAKSGUgb3dlcyBuZWFyIDE2MmsgaW4gYmFjayBjaGlsZCBzdXBwb3J0IGFjY29yZGluZyB0byB0aGUgcG9zdGVkIGFydGljbGUgeWVzdGVyZGF5LiBJZiBoZSBzb21laG93IGNvbWVzIHVwIHdpdGggdGhlIDEwMGssIGl0IHNob3VsZCBiZSBJTU1FRElBVEVMWSBhcHBsaWVkIHRvIGhpcyBvdXRzdGFuZGluZyBjaGlsZCBzdXBwb3J0IGRlYnQuIEl0IHdvbiBiZSBzYWRseSwgYnV0IGl0IHNob3VsZCBiZS4gCklmIGl0IG1ha2VzIHlvdSBmZWVsIGJldHRlciwgbXkgMTcgeWVhciBvbGQgZGF1Z2h0ZXIgaGFkIHRvIGNoZWNrIG9uIGEgc21hbGwgaG91c2UgdGhhdCB3ZSByZW50IG91dCB0aGF0J3MgY3VycmVudGx5IGVtcHR5LiAKTXkgbGF5IHVuZGVyc3RhbmRpbmcgaXMgdGhpczogKDEpIENvbmdyZXNzIGZvcmJhZGUgYmFua3MgZnJvbSB0cmFuc2ZlcnJpbmcgbW9uZXkgdG8gbWFueSBraW5kcyBvZiBwb2tlciBzaXRlczsgKDIpIGFsdGhvdWdoIHRoaXMgZG9lcyBub3QgY3JpbWluYWxpemUgcGxheWluZyBhdCB0aG9zZSBzaXRlcywgKDMpIGl0IGRvZXMgZWZmZWN0aXZlbHkgZmlsdGVyIG91dCB0aGUgZmlzaCwgbWFraW5nIGl0IG11Y2ggaGFyZGVyIHRvIHNraW0gYW4gZWFzeSBwcm9maXQgdGhhbiBpdCBoYWQgYmVlbiBpbiAyMDA0Li4gCkkgaG9wZSB5b3UgZmluZCBhIGNvbmZpZGVuY2UgYm9vc3QgaW4gYSBuZXcgJ2RvIQpOb3cgdGhhdCBpdCB3aW50ZXIgYW5kIHRoZSBiYWNreWFyZCBqdW5nbGUgaXMgbGVzcyBBbWF6b25pYW4sIEkgYmVlbiBhYmxlIHRvIGdldCBpbiB0byBjbGVhciBvdXQgZGVicmlzLCBsaW1iIHVwIGJ1c2hlcyBhbmQgdHJ5IHRvIG1ha2UgdGhpbmdzIGEgbGl0dGxlIG1vcmUgbGFuZHNjYXBlZC4gCkkgc29tZWhvdyBnb3QgdGhyb3VnaCA2IHJvdW5kcyAoMyBob3VycykgYW5kIEkgaGFkIDkwMCsgY2hpcHMuIApWb2x1bnRlZXJzIHNob3dlZCBzaWduaWZpY2FudCBkZWNyZWFzZXMgaW4gbGV2ZWxzIG9mIHRoZSBzdHJlc3MgaG9ybW9uZSBjb3J0aXNvbC4gVGhleSBhbHNvIGhhZCBpbmNyZWFzZXMgaW4gd2hpdGUgYmxvb2QgY2VsbHMgdGhhdCBhcmUgcGFydCBvZiB0aGUgaW1tdW5lIHN5c3RlbS4gCkkgdGhpbmsgZm9sZGluZyBpcyBqdXN0IHNwZXcgc2luY2Ugd2UgYWxyZWFkeSBnb3QgdG8gdGhlIGZsb3AgYW5kIGdvdCBhcyBnb29kIG9mIGEgc2l0dWF0aW9uIGFzIHdlIGNhbiByZWFzb25hYmx5IGhvcGUgZm9yLiBJbiBnYW1lLCBJIHRob3VnaHQgNjVjYyB3YXMgYW4gb2theSBjYWxsIGJ1dCBwZW9wbGUgYXJlIHJpZ2h0LiBJIG9wZW4gdG8gMTUgb3IgMjAgaGUgbWFrZXMgaXQgNTUgb3IgNjUgdGhlbiBJIGNhbCkgYnV0IHdpdGggdGhlIHN0cmFkZGxlcyBhbmQgdGhlIGJsb2F0ZWQgc2l0dWF0aW9uIGl0J3MgZGVmaW5pdGVseSByaWdodCB0byBmb2xkIGR1ZSB0byBTUFIgY3VmZmluZyB1cyBwb3N0ZmxvcC4gClRoZXJlIGlzIG9wdGltaXNtIGFib3V0IGEgcXVpY2sgYW5kIHN1Y2Nlc3NmdWwgY2FtcGFpZ24gaW4gSXJhcS4gV2hlbiB0aGUgUHJlc2lkZW50IGFuZCBoaXMgYWR2aXNlcnMgcGVlciBhIG1vbnRoIG9yIHNvIGludG8gdGhlIGZ1dHVyZSwgdGhleSBzZWUgb25seSBnb29kIG5ld3M6IHRoZSB3b3JsZCBhIHNhZmVyIGFuZCBiZXR0ZXIgcGxhY2Ugd2l0aG91dCBTYWRkYW07IHRoZSBGcmVuY2ggYW5kIFJ1c3NpYW5zLCBoYXQgaW4gaGFuZCwgaG9waW5nIHRvIGJlY29tZSBwYXJ0IG9mIHRoZSBwb3N0d2FyIHJlY29uc3RydWN0aW9uOyB0aGUgRGVtb2NyYXRzLCBzdWl0YWJseSBkYXVudGVkLCByZWFkeSB0byBkbyB0aGUgUHJlc2lkZW50J3MgYmlkZGluZyBpbiBDb25ncmVzczsgdGhlIHN0b2NrIG1hcmtldCBoZWFkaW5nIHRvd2FyZCB0aGUgc3RyYXRvc3BoZXJlOyBidXNpbmVzc2VzIGludmVzdGluZyBhbmQgY29uc3VtZXJzIHNwZW5kaW5nOyBhbmQgdGhlIHRodWdzIG9mIHRoZSB3b3JsZCBjb3dlcmluZywgaGF2aW5nIGFic29yYmVkIGEgbGVzc29uIGFib3V0IEFtZXJpY2FuIHJlc29sdmUuLiAKVGhlIG1haW4gdGhpbmcgdGhhdCBib3RoZXJzIG1lIGlzIHRoYXQgdGhlIGFsYnVtIGlzIGNhbGxlZCBSYWluaWVyIEZvZyBzbyB0aGF0IGFscmVhZHkgZ2l2ZXMgc29tZSBiYWRhc3MgaW1hZ2VyeSBhbmQgYSBsb3Qgb2Ygc3R1ZmYgdG8gd29yayB3aXRoLiBCb3RoIG9mIHRoZSBtdXNpYyB2aWRlb3MgYXJlIHByYWN0aWNhbGx5IHRoZSBleGFjdCBzYW1lLiAKQnkgc3dpdGNoaW5nIGJldHdlZW4gdGhlIHR3byBhbnRlbm5hcyBhdCBhbiBhdWRpbyByYXRlIGl0IHN1cGVyaW1wb3NlcyBhIHRvbmUgb24gYSByZWNlaXZlZCBzaWduYWwgd2hlbiBkZXRlY3RlZCBieSBhbiBGTSByZWNlaXZlci4gSWYgb25lIGFudGVubmEgaXMgY2xvc2VyIHRvIHRoZSB0cmFuc21pdHRlciB0aGFuIHRoZSBvdGhlciwgd2hlbiBpdCBpcyBzd2l0Y2hlZCBpbiB0aGUgUkYgc2lnbmFsIGlzIGF0IGEgZGlmZmVyZW50IHZvbHRhZ2UgdGhhbiB3aGVuIHRoZSBvdGhlciBhbnRlbm5hIGlzIHN3aXRjaGVkIGluLiAoSW1hZ2luZSBtZWFzdXJpbmcgdGhlIHZvbHRhZ2UgYXQgdHdvIHBvaW50cyBvbiBhIHNpbmUgd2F2ZSAxLzQgd2F2ZWxlbmd0aCBhcGFydC4pIFRvIGFuIEZNIHJlY2VpdmVyIHRoYXQgbWFrZXMgaXQgbG9va2UgbGlrZSBhIHBoYXNlIG1vZHVsYXRlZCB0b25lLCB3aGljaCB5b3UgY2FuIGhlYXIgaW4gdGhlIHNwZWFrZXIuLiAKMTAwIFBsYXN0aWMgUGxheWluZyBDYXJkcyBSZXZpZXcKT3VyIGhlYXJ0ZmVsdCBjb25kb2xlbmNlcyBvbiB0aGUgbG9zcyBvZiBCcmVuZGEuIApObyBhbXVzZW1lbnQgcGFya3MsIG5vIGdvIGthcnQgdHJhY2tzLCBubyBtYWxscy4gSW4gZmFjdCwgdGhpcyBzbGl2ZXIgb2YgbGFuZCBvZmYgQnJhZGVudG9uIG9uIEZsb3JpZGEncyB3ZXN0IGNvYXN0IHNlZW1zIGxpZnRlZCBmcm9tIGFuIG9sZCB0aW1lIHBvc3RjYXJkLCB3aGVuIGJpY3ljbGlzdHMgb3duZWQgdGhlIG1haW4gc3RyZWV0IGFuZCBsYWRpZXMgd2l0aCBwYXJhc29scyBzdHJvbGxlZCB0aGUgcGllciBpbiB0aGUgZWFybHkgZXZlbmluZyB0byB3YXRjaCB0aGUgc3VuIGRyb3AgaW50byB0aGUgb2NlYW4uLiAKWW91J3JlIGFsbW9zdCBjZXJ0YWlubHkgZmFtaWxpYXIgd2l0aCBzZXRzIG9mIDEwMCBQbGFzdGljIFBsYXlpbmcgQ2FyZHMuIApIZSB3YXMga25vY2tlZCBvdXQgdGhhdCB5ZWFyIHNob3J0IG9mIHdpbm5pbmcgbW9uZXkuIApNeSBwbGF5IGhhcyBiZWNvbWUgYSBsb3QgdGlnaHRlciwgb25seSBiZWNhdXNlIG9mIGJlaW5nIGFmcmFpZCBvZiBsb3Npbmcgc28gbXVjaCBtb3JlIHRoYW4gaSBzZWUgb3RoZXIgcGVvcGxlIGxvc2luZy4uIApUaGUgcGF0aCBpcyB1cCBhbmQgcmlnaHQsIHVzaW5nIHRoZSBlbGV2YXRvciByb2NrcywgdGhlbiBhY3Jvc3MgdG8gdGhlIGxlZnQuIApJdCBkb2VzIG5vdCBhbHNvIGFsbG93IHlvdSB0byBydW4gY29tcGxleCBzaW11bGF0aW9ucy4gCkxhc3QgbW9udGgsIHNpZ25hdHVyZXMgZm9yIENvbG9yYWRvIGJhbGxvdCBpbml0aWF0aXZlIE5vLiAyMCBzdGFydGVkIHVwLiBJZiBpdCBnb2VzIHRvIHRoZSB2b3RlcnMgYW5kIHBhc3NlcywgdGhlIGluaXRpYXRpdmUgd291bGQgc2V0IGludG8gcGxheSBhbiBlbnRpcmVseSBuZXcgYW5kIG1vcmUgYWZmb3JkYWJsZSBjbyBvcCBoZWFsdGggY2FyZSBtb2RlbC4gVGhlIENvbG9yYWRvQ2FyZSBpbml0aWF0aXZlIGhpbmdlcyBvbiBTZWMuIDEzMzIgb2YgdGhlIEFDQSwgd2hpY2gsIHVuZGVyIHRoZSBXeWRlbiB3YWl2ZXJzLCBwZXJtaXRzIHN0YXRlcyB0byB3YWl2ZSBhbGwgY292ZXJhZ2UgY29tcG9uZW50cyBvZiB0aGUgQUNBLCBpbmNsdWRpbmcgZXhjaGFuZ2VzLCBiZW5lZml0cyBwYWNrYWdlcywgYW5kIGVtcGxveWVyIG1hbmRhdGVzIGluIGZhdm9yIG9mIGlubm92YXRpbmcgc3RhdGUgcnVuIHBsYW5zIHRoYXQsIGluIG91ciBjYXNlLCByZWR1Y2UgY29zdHMgYW5kIGJ1cmVhdWNyYWN5LiBUaGlzIHByb3Bvc2VkIGNvbXByZWhlbnNpdmUgaGVhbHRoIGNhcmUgcGxhbiBpcyBha2luIHRvIHVuaXZlcnNhbCBoZWFsdGggY2FyZSBhbmQgY291bGQgc2F2ZSByZXNpZGVudHMgJDEuNiBiaWxsaW9uIGFuZCBidXNpbmVzc2VzICQxLjMgYmlsbGlvbiBhbGwgd2l0aG91dCBkZWR1Y3RpYmxlcy4gWWVzIHdlIENBTSwgQ29sb3JhZG8uClBsZWFzZSBjaGVjayB0aGUgYW5zd2VyIHByb3ZpZGVkIGJlbG93IGFuZCBpZiBpdHMgbm90IHdoYXQgeW91IGFyZSBsb29raW5nIGZvciAuIFlvdSBjYW4gYWx3YXlzIGdvIGJhY2sgYXQgTmV3IFlvcmsgVGltZXMgQ3Jvc3N3b3JkIFB1enpsZXMgY3Jvc3N3b3JkIC4gCiJXZSBhbHNvIHdhbnQgdG8gYnJvYWRlbiB0aGUgZGlzY3Vzc2lvbiAgIGl0J3Mgbm90IGp1c3QgYWJvdXQgb25lIHNpdGUgICB0byBzYXkgJ3doYXQgbW9yZSBjYW4gd2UgZG8gZm9yIHRoaXMgbmVpZ2hib3VyaG9vZD8nIlRoZWlyIG1haCBqb25nIHNlc3Npb25zIGluaXRpYWxseSBzZXQgb3V0IHRvICJhY3RpdmF0ZSIgcHVibGljIHNwYWNlcyBpbiB0aGUgYXJlYTsgdGhlIGZpcnN0IGZldyBpbnZvbHZlZCBqdXN0IGEgZmV3IHRhYmxlcyBzZXQgb3V0c2lkZSBuZWFyIENvbHVtYmlhIGFuZCBLZWVmZXIgU3RyZWV0cyBvbiBzdW1tZXIgZXZlbmluZ3MuV29yZCBzcHJlYWQgYW5kLCBhdCB0aGUgbGFzdCBzZXNzaW9uIGluIGEgQ2hpbmF0b3duIGZvb2QgY291cnQgYXRyaXVtIG9uIGEgcmFpbnkgRGVjZW1iZXIgYWZ0ZXJub29uLCB0aGUgb3JnYW5pemVycyB3ZXJlIGdyZWV0ZWQgYnkgYSBsYXJnZXIgdGhhbiBleHBlY3RlZCB0dXJub3V0LiAKU29mdHdhcmUgZXN0aW1hdGlvbiBpcyBkaWZmaWN1bHQgYmVjYXVzZSB0aGVyZSBpcyBubyBwcmFjdGljYWwgdW5pdCBvZiBzaXplIGZvciBzb2Z0d2FyZS4gQWdpbGUgc3RvcnkgcG9pbnRzIGlzIGEgaGV1cmlzdGljIHRoYXQgYWxsb3dzIHVzIHRvIHNpbXBsaWZ5IGVzdGltYXRpb24gYnkgc2VwYXJhdGluZyBvdXIgZXN0aW1hdGUgb2Ygd29yayBzaXplIGZyb20gd29yayBkdXJhdGlvbi4gUG9vciB1bmRlcnN0YW5kaW5nIG9mIHRoaXMgaXMgdmVyeSBjb21tb24gYW1vbmcgbmV3bHkgYWdpbGUgdGVhbXMsIGFuZCBpdCBjYXVzZXMgbWFueSB0byBmYWlsIGluIHRoZWlyIGNvbW1pdG1lbnRzLiAKVGhlc2UgY2FyZHMgY29tZSB1cCB3aXRoIHBsZWFzaW5nIGFuZCBjb2xvcmZ1bCBhcnR3b3Jrcy4gVGhlIGFydHdvcmtzIGFyZSBwcm9mZXNzaW9uYWwgc28gdGhlc2UgZG9uJ3QgYmVjb21lIGZhZGUgaW4geWVhcnMuIApTZXQgdGhlIGZyZW5jaCBncm9vdmVzIGFuZCBmb3JtIHRoZSBlbmQgY2FwcwpIb3dldmVyLCB1bmxpa2UgdGhvc2Ugd2hvIGhhZCBnb25lIGJlZm9yZSwgS2F0c3V5YW1hIHdhcyB0aGUgcmFyZXN0IG9mIGJyZWVkcyBvbiBXYWxsIFN0cmVldCAgIGEgdHJ1bHkgaG9uZXN0IHBlcnNvbiwgYW5kIG9uZSB3aG8gd2FzIHVud2lsbGluZyB0byBwZXJwZXR1YXRlIGFuIHVuZmFpciBzeXN0ZW0ganVzdCBiZWNhdXNlIGl0IG1lYW50IGhlIGNvdWxkIGdhaW4gcGVyc29uYWxseS4uIApUaHVzLCBjYXNpbm8gaGFzIHRvIGxpbWl0IHRoZSBudW1iZXIgb2YgcGxheWVycyBpbiBhIHJlYWwgY2FzaW5vLiAKQnV0IGxpa2UgSSBzYWlkLCB0aGF0IG1vcmUgZm9yIGEgbGFzdCByZXNvcnQuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28xKSBZb3VyIGV4cGVyaWVuY2UgaXMgZ3JlYXRseSBmbGF3ZWQgYmVjYXVzZSBhZ2FpbiwgZXZlcnkgbG9vdGVyIGdhbWUgd2l0aCBQdlAgaXQgYmVlbiB0aGF0IGNyb3dkIHRoYXQgaGFzIHdoaW5lZCwgaG9vdGVkLCBhbmQgaG9sbGVyZWQgdGhlIG1vc3QgYW5kIHJ1aW5lZCBib3RoIGFiaWxpdGllcyBhbmQgd2VhcG9ucyBmb3IgYXJvdW5kIGEgZGVjYWRlLjIpIE5vdCBhIG51bGwgcG9pbnQgaW4gYW55IHdheSBzaGFwZSBvciBmb3JtLiAKV291bGQgYSBnYXkgam91cm5hbGlzdCBldmVyIGFzayB0aGUgcXVlc3Rpb24gIlNob3VsZCBob21vc2V4dWFscyBiZSBleGVjdXRlZCI/IFByb2JhYmx5IG5vdC4gQnV0IHRoZSBtb3JlIHByaXZpbGVnZSBhIGpvdXJuYWxpc3QgaGFzIGluIHRlcm1zIG9mIHJhY2UsIGNsYXNzLCBldGMuLCB0aGUgbW9yZSBsaWtlbHkgdGhhdCB0aGF0IHByaXZpbGVnZSB3aWxsIHJlbWFpbiBpbnZpc2libGUuIApZZXMsIGNsb3VkIGhvc3RpbmcgaXMgZXhwZW5zaXZlLiAKTW9zdCBvZiB0aGUgbWVuIEkndmUgZGF0ZWQsIGluY2x1ZGluZyBteSBjdXJyZW50IGJveWZyaWVuZCBvZiAzKCEpIHllYXJzLCBoYXZlIGEgbG90IG9mIHRyb3VibGUgY29taW5nIHRvIHRlcm1zIHdpdGggdGhpcyBhbmQgaXQgZG9lcyBjYXVzZSBpc3N1ZXMuIApUaGF0IG5vdCBhIGJhZCB0aGluZyBmb3IgbW9zdCwgYnV0IGlmIHlvdSB3YW50IHRoYXQgc3BlY2lmaWMsICJ2aW50YWdlIiBsb29rLCB5b3UgbWF5IGJlIGRpc2FwcG9pbnRlZC4uIApBbmQgUGFraXN0YW4gaGFwcGVucyB0byBiZSByaWdodCBpbiB0aGUgZXllIG9mIHRoZXNlIHJhZ2luZyBzdG9ybXMuIEJ1dCBub25lIG9mIHRoaXMgY291bGQgc3RpciB0aGUgZ29vZCBvbGQgU2FydGFqIHRvIG1ha2UgYW4gZWZmb3J0IHRvIGVkdWNhdGUgcGFybGlhbWVudCBvbiBob3cgaGUgd2FudHMgdG8gcGxheSBoaXMgaGFuZCBpbiBkaXBsb21hdGljIHBva2VyLiBOb3QgdGhhdCBoZSBydW5zIHRoZSBGb3JlaWduIE9mZmljZSBpbiBhbiBpZGVhbCB3YXkuIEluIHRoZSBhYnNlbmNlIG9mIGEgZnVsbCBmbGVkZ2VkIG1pbmlzdGVyLCB3ZSBrZWVwIGhlYXJpbmcgYWJvdXQgaW5maWdodGluZyBhbW9uZyB0aGUgdG9wIGhpZXJhcmNoeSBhbmQgcmVwZWF0ZWQgcmV2ZXJzYWxzIG9mIHRvcCBwb3NpdGlvbnMsIGluY2x1ZGluZyB0aGF0IG9mIHRoZSBmb3JlaWduIHNlY3JldGFyeSBhbmQgYW1iYXNzYWRvcnMgdG8gSW5kaWEsIEdlcm1hbnkgdG8gbWVudGlvbiBhIGZldy4gClJlY2VudGx5IHBsYXllZCBhIGNhc2ggZ2FtZSB3aXRoIGZyaWVuZHMgYW5kIGhhZCBhIHNpdHVhdGlvbiBhcmlzZS4gCklmIGVub3VnaCBwZW9wbGUgYWdyZWUsIHRoZXkgd2lsbCBoYXZlIHRvIGNoYW5nZSwgb3IgdGhlaXIgcHJvZml0cyB3aWxsIHRha2UgYSBoaXQuIApGYXN0IGZvcndhcmQgdG8gdG9kYXkuIE5vIG1vJy4gVGlueSBwaW1wbGVzIGNvbWUgZ28sIGJ1dCBJJ3ZlIG5ldmVyIGhhZCBhbm90aGVyIGh1Z2UgZmxhcmUgdXAgIENvbXBsZXRlbHkgZm9yZ290IGl0IHdhcyBhbGwgdGhhbmtzIHRvIEJCISBza2luIHRleHR1cmUgb24gZm9yZWhlYWQgc3RpbGwgc3Vja3MgYXNzIHRobyBiYyBpdCBjYW4gb25seSByZWNvdmVyIHNvIG11Y2guIEkgaGF2ZSBhIHZlcnkgbG9vc2Ugcm91dGluZSB0aGF0IGxldHMgbWUgc3dhcCBpbiAvIG91dCBpdGVtcyBpZiBJIHdhbm5hIHRyeSBzb21ldGhpbmcgbmV3LiBJIGp1c3QgYWx3YXlzIG1ha2Ugc3VyZSBpdCdzIG9rIGZvciBteSBza2luIHR5cGUgdG8gdXNlIGEgc21hbGwgYW10IHRvIHRlc3QgaXQuCkluIGZhY3QsIHRob3NlIHdobyBkaWQgY29yZSBleGVyY2lzZXMgc2hvd2VkIHNpZ25pZmljYW50IGltcHJvdmVtZW50IGluIHRoZSBhcm15J3Mgc2l0IHVwIHRlc3QuCk90aGVyIHJlcG9ydGVycyB3ZXJlIHByZXR0eSB1cHNldC4gCkJ1dCBpdCBkaWRuJ3QuIFRoZXknZCBib3VnaHQgdGhlICJNYWtlIEFtZXJpY2EgR3JlYXQgQWdhaW4iIGhhdHM7IHRoZXknZCBicm91Z2h0IHRoZWlyIFRydW1wIGJvb2tzIHRvIGJlIHNpZ25lZC4gQW5kIHRoZXknZCB3YWl0ZWQuIEFuZCB0aGV5J2Qgd2FpdGVkLiBMb2NhbCBlbmRvcnNlcnMgc3Bva2UsIGJ1dCB0aGUgY3Jvd2QgcmVhbGx5IHdhbnRlZCB0byBzZWUgdGhlIG1hbiBoaW1zZWxmLgpTaGl0IHB1dCBtZSBvbiBlZGdlLiAKOS4gTm8gcGljdHVyZXMgb2YganVzdCB0ZXh0LgpJIGhhZCBob21lZ3Jvd24gdG9tYXRvZXMgb3V0IGhlcmUgaW4gQ29sb3JhZG8sIGFuZCB0aGV5IHRhc3RlIFdFSVJELiAKV2Uga29jaHRlbiBlZW4gaWpzamUgYmlqIGRlIE1jRG9uYWxkcyBlbiB2b25kZW4gZWVuIHByYWNodGlnIFRCIGhvdGVsIGluIGRlIGJ1dXJ0IHZhbiBNZWxrLiBKYW1tZXIgZ2Vub2VnIGt3YW1lbiB3ZSBvb2sgaW4gZWVuIGtvcnRlIGZpbGUgdGVyZWNodCAob25nZWx1aykgd2FhciB3ZSBlZW4gaGVlbCB2cmVlbWRlIE9vc3RlbnJpamtzZSBnZXdvb250ZSBsZWVyZGVuIGtlbm5lbjogemUgcmVkZW4gb3AgZGUgbGlua3NlIHN0cm9vayBlbiBkZSBwZWNoc3Ryb29rIGVuIGRlIGdld29uZSByaWpzdHJvb2sgbW9lc3QgamUgdnJpamxhdGVuLiAKRG9uJ3Qgc2tpcCBvdXQgb24gaXQuIApJIGhhZCB3YXRjaGVkIEplc3NpY2EgbWluZCBkZXRlcmlvcmF0ZSBmb3Igc2V2ZW4geWVhcnMuIFNldmVuIHllYXJzIG9mIGludmFzaXZlIHByb2NlZHVyZXMgYW5kIGhlciBmb3JnZXR0aW5nIGhlciBvd24gbmFtZSBhbmQgZm9yZ2V0dGluZyBob3cgdG8gdXNlIHRoZSBiYXRocm9vbS4gClRoZSByYXBpZCBhZHZhbmNlbWVudHMgaW4gdGhlIGtub3dsZWRnZSBvZiBzY2llbmNlIGFuZCB0ZWNobm9sb2d5IGhhdmUgbGVkIHRvIHRoZSBpbnZlbnRpb24gb2YgbWFueSBuZXcgc2NpZW50aWZpYyB0b29scyBhbmQgZ2FkZ2V0cyB3aGljaCBoYXZlIGJlZW4gYWltZWQgdG8gbWFrZSBodW1hbiBsaXZlcyBlYXNpZXIgYW5kIGJldHRlci4gCk9uZSB0aGluZyBJIHdvdWxkIHNheSB0aG91Z2ggaXMgZG9uIGdvIGNoZWFwIG9uIEhBIHN0dWZmIGp1c3QgYmVjYXVzZSB5b3UgY2FuIGFmZm9yZCBpdCBub3cuIApJIGJlbGlldmUgYSBsb3Qgb2Ygd2hhdCB5b3UgaGF2ZSBzYWlkIGhhcyBoaWdobGlnaHRlZCBob3cgY2lyY3Vtc3RhbnRpYWwgZXF1aXBtZW50IGlzLiBGb3IgZXhhbXBsZSwgeW91IG1lbnRpb24gdGhhdCBkcm9wIGJhcnMgYXJlIHVubmVjZXNzYXJ5IGZvciBjb21tdXRpbmcgYnV0IGZvciBtZSBJIGRlZW0gdGhlbSBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBhcyBteSBjb21tdXRlIGlzIG9uIGNvbXBsZXRlbHkgb3BlbiB0ZXJyYWluIGFuZCB0aGUgd2luZCBjYW4gZ2V0IHN0cm9uZy4gSSBhcHByZWNpYXRlIHRoZSBkaWZmZXJlbnQgcG9zaXRpb25zIGZvciB0aGF0IDopLiAKT2gsIGFuZCB0aGF0IGNvcHkvcGFzdGUgc29uZz8/LiAKT3IgYXQgdGhlIHZlcnkgbGVhc3QsIHRoZXkgd291bGRuIHVzZSBpdCBpbiBzdWNoIGEgd2F5IHRoYXQgc29tZSByYW5kb20gY2l2aWxpemF0aW9uIGluIHRoZSBtaWxreSB3YXkgYm9vbmllcyBpcyBnb2luZyB0byBwaWNrIGl0IHVwIG9uIGEgcmFuZG9tIHNreSBzdXJ2ZXkuLiAKWW91IGRvIHlvdSBhbmQgSSB3aWxsIGNvbnRpbnVlIHRvIHByYWN0aWNlIGV2aWRlbmNlIGJhc2VkIG1lZGljaW5lLgpNYXR0ZXIgY2FuIG5laXRoZXIgYmUgY3JlYXRlZCBub3IgZGVzdHJveWVkIGFuZCBhbGwgdGhhdC5Gb3J3YXJkIHRpbWUgdHJhdmVsIGlzbiBxdWl0ZSBzbyBzaWxseSwgYnV0IHdvdWxkIHJlcXVpcmUgeW91IHRvIG1ha2UgdXNlIG9mIHJlbGF0aXZpdHkgd2hpY2ggaXMga2luZCBvZiBvdXQgb2YgdGhlIHJlYWxtIG9mIHBvc3NpYmlsaXR5LiAKQmVpbmcgYSBtYW5sZXQgZG9lc24gbWVhbiB5b3Ugd2lsbCBiZSBndWFyZW50ZWVkIHN1Y2Nlc3MsIGJ1dCB0aGF0IGl0IHdpbGwgYmUgZWFzaWVyIHRvIGFjaGlldmUgdGhhdCBzdWNjZXNzIHRoYW4gaGF2aW5nIG11Y2ggbG9uZ2VyIGxpbWJzLiAKWW91IG5vcm1hbGx5IG5lZWQgb2YgcGF5IGEgYnJhbmQgbmV3IHRpdGxlIG9wcG9ydHVuaXR5IGV2ZXJ5IHlvdXIgdGltZSB5b3UgbWFpbnRhaW4gYSBkaWxlbW1hIGFib3V0IGEgcGFydGljdWxhciBwcm9wZXJ0eS4gCkFuZCBtb3N0IGltcG9ydGFudGx5LCB5b3UgY2FuIGVuam95IHRoZSBwcm9jZXNzIGFuZCB0aGUgYWN0dWFsIGFjdCBvZiBjcmVhdGluZyBtb3JlIHRoYW4gdGhlIGZpbmlzaGVkIHByb2R1Y3QgaXRzZWxmLi4gCkJ1c2luZXNzIEJyaWVmY2FzZSBmb3IgSnVuZSAxNApXaGVuIGhlIHdlbnQgdG8gY2FzaCBpbiBoaXMgdGlja2V0cywgaGUgd2FzIHRvbGQgdGhhdCBoZSBkaWQgbm90IHdpbiAkMiw1MDAsIGJ1dCBpbnN0ZWFkIG9ubHkgd29uICQxMC4uIAoiSG93ZXZlciwgdGhlIHJldHVybiBkdXJpbmcgYSBzaW5nbGUgcGxheWluZyBzZXNzaW9uIHZhcmllcyAgIGEgcGxheWVyIG1heSB3aW4gbW9yZSB0aGFuIHRoZXkgcHV0IGludG8gYSBtYWNoaW5lIG9yIHRoZXkgbWF5IGxvc2UgbW9yZSB0aGFuIDE1JS4iCjIwMTYuIApXaGVuIGl0IG5vdCAoY292ZXJlZCB3aXRoIGljZSksIHRoZSBncm91bmQgaXMgZnJvemVuLiBUaGUgd2F0ZXIgbm90IGdvaW5nIHRvIHNpbmsgaW50byB0aGUgZ3JvdW5kLCBpdCBnb2luZyB0byBydW4gd2hlcmV2ZXIsIGFkZGVkIFdpbnRlcm11dGUuCk1hdGggd2hpenplcywgbGlrZSBjb21wdXRlciBzY2llbnRpc3QgQmFycnkgR3JlZW5zdGVpbiBhbmQgYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgZXhwZXJ0IENocmlzIEZlcmd1c29uLCBiZWdhbiB0byBjaGFuZ2UgdGhlIGdhbWUgYWxtb3N0IHR3byBkZWNhZGVzIGFnbyBieSB1c2luZyBwcm9iYWJpbGl0eSB0aGVvcnkgdG8gdGhlaXIgYWR2YW50YWdlLi4gCkxldCBtZSByZWl0ZXJhdGUsIHNoZSB3YXMgaW4gYSBob3NwaWNlLCBhIHBsYWNlIHlvdSBnbyB3aGVuIHlvdSAxMDAlIGFyZW4gY29taW5nIG91dCBhbGl2ZS4gV2hlcmUgdGhleSBhcmUgc3VwcG9zZWQgdG8gbWFuYWdlIHRoZSBwYWluIGFuZCBtYWtlIGEgcGVyc29ucyBwYXNzaW5nIGFzIHBlYWNlZnVsIGFuZCBwbGVhc2FudCBhcyBwb3NzaWJsZS4gU28geW91IGNhbiBoYXZlIHNvbWUgZmFtaWx5IGFyb3VuZCwgbWF5YmUgd2F0Y2ggeW91ciBmYXZvcml0ZSBtb3ZpZSBvbmUgbGFzdCB0aW1lIGFuZCBlbmpveSB0aGUgbGFzdCBmZXcgZGF5cyBvZiB5b3VyIGxpZmUuLiAKVGhlIGNvbXBhbnkgcGxhbnRlZCBjbG9zZSB0byAzMDAsMDAwIGdlb2R1Y2tzIGluIGl0cyBmaXJzdCB5ZWFyLCBhdCBhIGNvc3Qgb2YgJDEwMCwwMDAgYSBoZWN0YXJlLiBIb3dldmVyLCBzdXJ2aXZhbCByZXN1bHRzIGFyZSBhcm91bmQgNTAsMDAwLCB3aGljaCB3b3VsZCByZXN1bHQgaW4gNzUsMDAwIHBvdW5kcyBvZiBnZW9kdWNrcy4gCk1yLiAKVGhleSBsb3N0IHRoZWlyIGZpbmFuY2llcnMuIApQbGF5aW5nIGNhcmQgc29vdGhzYXllciAgSWYgeW91IHJlYWxseSB3YW50IHRvIGtub3csIGhvdyB0byBjaGVhdCBpbiBwb2tlciwgc3RhcnQgcHJhY3RpY2luZyB0aGUgY2FyZHMgZ2FtZSB3aXRoIHRoZSBwbGF5aW5nIGNhcmQgc29vdGhzYXllciBhcyBpdCBpcyBhIHVzZWZ1bCBzcHkgZGV2aWNlIHRvIG1ha2UgeW91IGFibGUgdG8gd2luIHlvdXIgcG9rZXIgZ2FtZS4gCkxhZHkgR2FHYSksIEJpZyBHaXJsIE5vdyAoZmVhdC4gTGFkeSBHYUdhKSwgQ2hpbGxpbiAoZmVhdC4gCldoYXQgYm90aGVycyBtZSBldmVuIG1vcmUgaXMgdGhlIG90aGVyIHBlb3BsZSBpbiB0aGF0IHBva2VyIGZhY2Vib29rIGdyb3VwLiBIb3cgY2FuIHRoZXkgbm90IHNlZSB0aGlzIGR1ZGUgaXMgZ2V0dGluZyBzY2FtbWVkPwpUaGF0J3MgcmlnaHQgICA4MCBwZXJjZW50IG9mIHRoZSB0aW1lLCB0aGV5J3JlIHNwZWN0YXRvcnMuIApMZXQncyBjb21lIGJhY2sgdG8gb3VyIGNhc2lubyBib251c2VzLCB0byB0aGUgbW9zdCAiZnJlZSBsb2FkIiBvbmVzICB3aXRob3V0IGFueSBkZXBvc2l0LiBPZiBsYXRlIG9uZSBoYXMgYmVlbiBhYmxlIHRvIG5vdGljZSBtb3JlIGFuZCBtb3JlIGNhc2lubyBhZHZlcnRpc2VtZW50cyBwcm9taXNpbmcgdXAgdG8gJDUwMCBhYnNvbHV0ZWx5IGZyZWUgb2YgY2hhcmdlLCB3aXRob3V0IGFueSBkZXBvc2l0LiBUaGUgcGF0dGVybiBpcyB0aGUgZm9sbG93aW5nICAgeW91IHJlYWxseSBnZXQgJDUwMCBvbiBhIHNwZWNpYWwgYWNjb3VudCBhbmQgbGltaXRlZCB0aW1lIGZvciBwbGF5ICh1c3VhbGx5IGFuIGhvdXIpLiAKSSBsb3ZlIHRoZSBsYXRlLCBncmVhdCBKb2huIENhbmR5IGFuZCBvZnRlbiByZWxheCB3aXRoIGhpcyBtb3ZpZXMuIE15IGZhdm9yaXRlcywgVW5jbGUgQnVjayBhbmQgUGxhbmVzLCBUcmFpbnMgYW5kIEF1dG9tb2JpbGVzLCBhcmVuJ3QgYXZhaWxhYmxlIHRvIHN0cmVhbSBhdCB0aGUgbW9tZW50IGJ1dCB0aGVyZSdzIGEgbGVzc2VyIHNlZW4gQ2FuZHkgbW92aWUgb24gTmV0ZmxpeCBJIHRoaW5rIHlvdSdsbCBlbmpveS4gT25seSB0aGUgTG9uZWx5IHN0YXJzIENhbmR5IGFzIERhbm55IE11bGRvb24sIGEgQ2hpY2FnbyBjb3Agd2hvIHN0aWxsIGxpdmVzIHdpdGggaGlzIG92ZXJiZWFyaW5nIG1vdGhlci4gCkNvbW1lIGVubmVtaXMsIGplIG4nYWkgZ3VyZSBxdSd1bmUgcGFpcmUgZGUgcGFydGljdWxpZXJzICh1biB0YXZlcm5pZXIgZXQgdW5lIHZpZWlsbGUgc29yY2lyZSBtbGUgdG91dCBxdWkgaW5jYXJuZSBsYSBjdWx0dXJlIHBpY3R1cmFsZSBsb2NhbGUpIHF1ZSBqJ2FpIHJlbWlzIGVuIHBsYWNlIG5vdGFtbWVudCBwYXIgY3JpdCBtYWlzIGNlIGdlbnJlIGQnaW50ZXJwZWxsYXRpb24gZXN0IHRvdWpvdXJzIGV4Y2Vzc2l2ZW1lbnQgZHNhZ3JhYmxlLklsIGVzdCBjbGFpciBxdSdhdSBtb2luZHJlIGRyYXBhZ2UgZXQgZW4gdGFudCBxdSdhbmNpZW4gZXhwZXJ0LCBqZSB0bW9pZ25lcmFpIGF1cHJzIGRlIGxhIENvdXIgZCdBcHBlbCBkZXMgcHJhdGlxdWVzIGRlIGxhIHNvZXVyLCBub3RhbW1lbnQgZW4gY2UgcXVpIGNvbmNlcm5lIHNhIHByb3ByZSBhZGRpY3Rpb24gYXUgY2FubmFiaXMgc2FucyBwYXJsZXIgZGUgbGEgZmFvbiBkb250IGVsbGUgYSB0cmFpdCBzb24gYW4uRXhhbWVuIGR1IG5vdXZlYXUgcGF2IGR1IGR1byBFdmVuIERlYnJMZXMgMzIgcHJlbWlyZXMgcGFnZXMgdGVudGVudCBkZSBjZXJuZXIgbGVzIHR5cGVzIGRlIG1hbGFkaWVzIG1lbnRhbGVzIHJlbGxlcyBkZSBwc2V1ZG8gdHJvdWJsZXMgbWVudGF1eC5KdXNxdScgbGEgcGFnZSA0MiwgbGVzIGF1dGV1cnMgcydlZmZvcmNlbnQgZGUgcmV0cmFjZXIgbCdoaXN0b2lyZSBkZSBsYSBwc3ljaGlhdHJpZS4gCk5ldyBwcm9ncmFtcyB0byBkaXNjb3VyYWdlIHVuZGVyIGFnZSBnYW1ibGluZyBhcmUgYmVpbmcgcGFpZCBmb3IgYW5kIGltcGxlbWVudGVkIGJ5IHRoZSBpbmR1cyAgc3R1ZGllcyBvbiBjb21wdWxzaXZlIGdhbSAgcGFydGljdWxhcmx5IGFtb25nIHVuZGVyICBhZ2UgYXJlIGJlaW5nIGNvbmR1Y3RlZCB0aHJvdWdoIGZyb20gaW5kdXN0cnkuIG9mIHRoZSB1bmRlciBhZ2UgZ2FtaW5nIGdvaW5nIG9uIGluIHRoaXMgY291bnRyeSBpcyBub3QgZ29pbmcgb24gaW5zaWRlIHRoZSBzYWlkIEZyYW5rIHByZXNpZGVudCBvZiB0aGUgQW1lcmljYW4gR2FtaW5nIHRoZSBjYXNpbm8gaW5kdXN0cnkncyBsb2JieWluZyBvciAgZ2FuaXphdGlvbi4gCldlIGFyZSBpbiBuZWVkIG9mIGh5Z2llbmUgcHJvZHVjdHMgc3VjaCBhcyBzb2FwLCBzaGFtcG9vLCB0b290YnJ1c2gsIGNvbWIsIHNoYXZlcnMsIGRlb2RvcmFudCBldGMuIEJ1Y2tleWUgUmQuIEF0IHRoZSBiYWNrIGdhdGUgb24gTWFyaWNvcGEgU3QuIApEb2dzIG5vc2VzIGhhdmUgYW4gaW5zYW5lIG51bWJlciBvZiByZWNlcHRvcnMgY29tcGFyZWQgdG8gdXMuIApTT1RJIGhhZCB3cml0dGVuIHRvIFRydWRlYXUgc2V2ZW4gbW9udGhzIGVhcmxpZXIsIGludml0aW5nIGhpbSB0byBhdHRlbmQgdGhlIHVudmVpbGluZyBvZiBpdHMgZnV0dXJlIGhlYWRxdWFydGVycyBpbiBNaXNzaXNzYXVnYSwgT250Liwgd2hpY2ggd2lsbCBldmVudHVhbGx5IHN1cHBvcnQgc29tZSAxLDEwMCBqb2JzIGZvY3VzZWQgb24gbW9iaWxpdHkgYW5kIHRoZSBJbnRlcm5ldCBvZiBUaGluZ3MgdGVjaG5vbG9naWVzLiBjaGllZiBleGVjdXRpdmUgSmVmZiBCZXpvcy4KQnV0IGZvciBleGFtcGxlIGluIG15IGFyZWEgaW4gR2VybWFueSwgZXZlbiB0aG91Z2ggaXQgaXMgYSBnb29kIGFyZWEgZm9yIGhpa2luZywgdGhlcmUgYXJlIG5vIHN1Y2ggcGxhY2VzLiBTbyBJIHJhdGhlciBzdGF5IGF3YXkuIENyb2F0aWEgZm9yIGhpa2luZywgeW91IG1lZXQgcGxlbnR5IG9mIHBlb3BsZSBpbiB0aGUgaG9zdGVscyB0aGVyZSwgZXZlbiBpbiB0aGUgY291bnRyeXNpZGUuClRoZXJlIGEgbG90IG9mIHNoaXQgdGhhdCBqdXN0IHdvdWxkbiBmbHkgdGhlc2UgZGF5cy4gClN0YXJ0IHdpbm5pbmcuIEluIG9yZGVyIHRvIHdpbiwgdGhlIHBsYXllciBoYXMgdG8gYmUgY2xvc2VyIHRvIDIxIHRoYW4gdGhlIGRlYWxlciwgd2l0aG91dCBnb2luZyBvdmVyLiAKRGlnaXRhbCBib29rbGV0IChQREYpLiAKU28gRHVyYW50IGhhcyBnb25lIGFsbCBGcm96ZW4gICBsZXQgaXQgZ28sIGxldCBpdCBnb29vb28gICBidXQgdGhlIGljZSBoYXNuJ3QgbWVsdGVkIG9uIHRoaXMgc2lkZSBvZiB0aGUgUm9ja2llcy4gTm90IGJlY2F1c2UgRHVyYW50IGxlZnQuIApUaGF0IG15IHJlcG9ydCwgZmVsbG93IHRyYWluZXJzLCBob3BlIHRoaXMgaXMgaGVscGZ1bCEKSSBoZWFyZCBhdCBsZWFzdCBvbmUgZG9jdW1lbnRhcnkgc2F5IHRoZSBleHRlcmlvciBvZiB0aGUgYnVpbGRpbmcgd2FzIGRlc2lnbmVkIHRvIGJlIGxpa2UgYSBzY3JlZW4sIGFuZCBpZiBhIHBlbmNpbCBwdW5jdHVyZXMgdGhlIHNjcmVlbiwgdGhlIHNjcmVlbiBzdGF5cyBpbnRhY3QgICBpdCBvbmx5IGJyZWFrcyBhdCB0aGUgcG9pbnQgb2YgdGhlIHBlbmNpbC4uIApSdXRoIEwuIEtpcnNjaHN0ZWluLCB0aGUgY2VudGVyIGFjdGluZyBkaXJlY3RvciwgdGVzdGlmaWVkIHRvIGEgQ29uZ3Jlc3Npb25hbCBjb21taXR0ZWUgaW4gTWFyY2ggMjAwNyB0aGF0IDc4JSBvZiBtZWRpY2FsIHNjaG9vbHMgdGVhY2ggY291cnNlcyBvbiBhbHRlcm5hdGl2ZSBtZWRpY2luZSwgYWNjb3JkaW5nIHRvIHRoZSBBc3NvY2lhdGlvbiBvZiBBbWVyaWNhbiBNZWRpY2FsIENvbGxlZ2VzLiAKQXMgYWx3YXlzLCB0aGUgcm93IG9mIFJ1c3NpYSB3YXMgYW4gZW5pZ21hLiAKVGhpcyBzbyBtdWNoLiBJIGNhbiBldmVuIHJlbWVtYmVyIHdoeSBJIGJvdWdodCBpdCBJIGRvbiBwbGF5IG1hbnkgY29tcHV0ZXIgZ2FtZXMuIApGZWRlcmFsIE1QIGFuZCBhbnRpIHBva2llcyBjYW1wYWlnbmVyIEFuZHJldyBXaWxraWUgaGFzIG9idGFpbmVkIHNjcmVlbnNob3RzIG9mIGRhdGEgYmVpbmcga2VwdCBvbiBnYW1ibGVycyBhdCBXb29sd29ydGhzIG93bmVkIHB1YnMsIHdoaWNoIGlzIGJlaW5nIHNoYXJlZCBhbW9uZyB0aGUgc3VwZXJtYXJrZXQgZ2lhbnQgNDAwIHB1YnMuIApUaGlzIHNtYWxsIHRoaW5nIGNhbiBtYWtlIHlvdSBzbyBtdWNoIG1vcmUgc3RhYmxlIGFuZCBzdHJvbmdlciEuIApFbGl6YWJldGhseCAgOCBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvClRoZSBZb3VuZyBHdW5zCldhcmRyb2JlIGFkZHMgbW9yZSBmdW5jdGlvbiBiZWNhdXNlIHlvdSBjYW4gYWN0dWFsbHkgYWNjZXNzIHRoZSBzcGFjZSBhbGwgdGhlIHdheSB1cCB0byB0aGUgY2VpbGluZy4gCkdyYXR1bHVqIHd5Z3JhbmlhIHdhbGtpIGJleiB6bmlzemN6ZW5pYSBzdG9zdW5rdyA6KSBNaWFlbSBjaHliYSBsZXBpZWogb2QgQ2llYmllIGJvIHogamVkbmVqIHN0cm9ueSByb2R6aW55IG5pZSBieW8gYWRueWNoIGF1dG9yeXRhcm55Y2ggd2llcnpjeWNoLCBhIHogZHJ1Z2llaiBzdHJvbnkgd2lrc3pvIHRvIGF0ZWljaSBsdWIgYWdub3N0eWN5LiBaIHQgYmFyZHppZWogcmVsaWdpam4gc3Ryb24gbWlhZW0gcm96bW93IG5hIHdjemVuaWVqc3p5bSBldGFwaWUgbW9qZWogem5ham9tb2NpIHogcGFydG5lcmsuIFBvc3Rhd2llbSBzcHJhdyBqYXNubyBpIGRvc3RhZW0gamFzbiBkZWtsYXJhY2p6IGljaCBzdHJvbnkgZSBuaWUgbWFqIHphbWlhcnUgbWllc3phbmlhIHNpIGRvICJ5Y2lhIHJlbGlnaWpuZWdvIiBtb2plZ28gaSBtb2plaiBwYXJ0bmVya2kuCkl0IHdvdWxkIGJlIG1vcmUgcHJvYmxlbWF0aWMgaWYgeW91IGRpZG4gcmVzdCBzb21lIG9mIHRoZSB3ZWlnaHQgb2YgdGhlIGNlbGxvIG9uIHRoZSBwaW4gYW5kIGNsdXRjaGVkIGl0IHRpZ2h0bHkgdG8ga2VlcCBpdCBmcm9tIHNsaXBwaW5nIGF3YXkuIApJIGFsc28gYSBiaXQgY3VyaW91cyBhcyB0byBob3cgaGUgd29yZGVkIGl0LiBJZiBpdCB3YXMgc29tZXRoaW5nIGxpa2UsICJCYWJlLCB0b2RheSB3YXMgZ3JlYXQsIGxldCBnZXQgbWFycmllZCwgbG9vayBpIGhhdmUgYSByaW5nIGFuZCBldmVyeXRoaW5nIiwgd2VsbC4KQWRkaXRpb24gb2YgaW5jZW50aXZlcyBkb2VzIG5vdCBtZWFuIHRoZSBlbGltaW5hdGlvbiBvZiByaXNrLiBJdCdzIHN0aWxsIGltcG9ydGFudCB0aGF0IHlvdSByZXNwZWN0IHRoZSBob3VzZSBhbmQgdGhlIG90aGVyIHBsYXllcnMgYnkgdGhpbmtpbmcgdGhyb3VnaCB5b3VyIGdhbWUgcGxheS4gVGhlcmUgaXMgYSB0aGluIGxpbmUgYmV0d2VlbiBwbGF5aW5nIHlvdXIgZnJlZSBwb2tlciBtb25leSwgYW5kIHBsYXlpbmcgeW91ciBhY3R1YWwgYXNzZXRzLiAKTm93IHdoZW4gcGVvcGxlIGFzayBtZSBpZiBJIGdyYWR1YXRlZCBmcm9tIGEgY2xvdGhpbmcgYnJhbmQsIEkgd2lsbCBzYXksICJZZXMsIHllcyBJIGRpZC4gTm93IEkgdGVhY2ggYXQgYSBsaWZlc3R5bGUgYnJhbmQuIi4gCkkgY2FuIGNvbnRhY3QgaGltIGFuZCBzZWUgd2hhdCB0aGUgY29tcGFueSBzYXlzLCBJIGFjdHVhbGx5IGVtYWlsZWQgdGhlbSBhIHdlZWsgYWdvIHRvIGFzayBhYm91dCBob3cgYmVuZWZpY2lhbCB0aGVpciBsaWdodHMgYXJlIGZvciBmb3Jlc2tpbiByZXN0b3JhdGlvbiBhbmQgdGhleSBoYXZlbiBnb3QgYmFjayB0byBtZSB5ZXQuIApIZXJlcyBhIGZldyByZXNvdXJjZXMgdG8gZ2V0IHN0YXJ0ZWQsIGJ1dCBkb24gdGFrZSBpdCBqdXN0IGZyb20gbWUuIERvIHlvdXIgb3duIHJlc2VhcmNoLCBjb21lIHRvIHlvdXIgb3duIGNvbmNsdXNpb24uIEJ1dCBpdHMgYSBnb29kIG92ZXJ2aWV3IGFzIHRvIHdoYXQgQURIRCBhY3R1YWxseSBpcyBsaWtlLiBJIGNhbiBhdHRlc3QgdGhhdCB0aGlzIHZpZGVvIGlzIG9uZSBvZiB0aGUgbW9zdCBzcG90IG9uIHJlcHJlc2VudGF0aW9ucyBvZiBteSBjb25kaXRpb24uCkZseWluZyBtZWFucyBiZWluZyBhdCBsZXNzIHRoYW4gMSBBVE0gb2YgcHJlc3N1cmUuIEkgY2FuIHNlZSBob3cgdGhpcyBtaWdodCBjYXVzZSBEQ1MuClNvIGhlcmUgdGhlIHNvdXJjZSBpcyBub3RoaW5nIGJ1dCB0aGUgc2VuZGVyIG9yIHRoZSBwZXJzb24gd2hvIHdhbnRzIHRvIGNvbW11bmljYXRlIHdpdGggb3RoZXJzLiBJbiBvcmRlciB0byBkZWxpdmVyIGhpcyB0aG91Z2h0cyBvciBpZGVhcyBoZSBtYWtlcyBpdCBhcyBhIG1lc3NhZ2Ugd2hpY2ggaGUgdHJhbnNmZXJzIHRvIHRoZSByZWNlaXZlci4gU28gdGhlIG1lc3NhZ2UgaXMgcmVjZWl2ZWQgYnkgdGhlIHBlcnNvbiBmb3Igd2hvbSB0aGlzIG1lc3NhZ2UgaGFzIGJlZW4gZGVsaXZlcmVkLi4gCkFuZCBTdXNhbj8gV2h5LCBzaGUgbW92ZWQgZnJvbSBXaXN0ZXJpYSBMYW5lIGZpcnN0LCBhbmQgc2hlIHdhcyB0aGVyZSB0byB3ZWxjb21lIHRoZSBuZXcgaG91c2V3aWZlIHRvIGhlciBob21lLCBhbmQgd2UgZm91bmQgb3V0IGJlZm9yZSB0aGUgc2NyZWVuIGN1dCB0byBibGFjayB0aGF0IHRoaXMgbmV3IG9jY3VwYW50IGhhcyBoZXIgb3duIHNlY3JldHMuIExvb2tzIGxpa2UgV2lzdGVyaWEgTGFuZSB3b24ndCBiZSBjaGFuZ2luZywgZXZlbiB3aXRob3V0IHRob3NlIGxhZGllcyBhcm91bmQuIEZpbmFsbHksIG9uIG9uZSBsYXN0IGRyaXZlIGFyb3VuZCB0aGUgYmxvY2ssIFN1c2FuIHNlZXMgdGhlIGdob3N0cyBvZiBXaXN0ZXJpYSBwYXN0OiBmcm9tIE1pa2UgdG8gTWFyeSBBbGljZS4KSSBzYXcgdGhpcyBkZXNpZ24gb24gZHJpYmJibGUgYW5kIHRob3VnaHQgaXQgd291bGQgYmUgZnVuIHRvIG1ha2Ugam9iIGFkIGZvciBhIGxvY2FsIGJ1c2luZXNzIG91dCBvZiBpdCwgc2luY2UgdGhleSBoYXZlIGEgbG9nbyB0aGF0IHdvdWxkIGJlIHByZXR0eSBzd2VldCBmb3IgdGhpcyB0eXBlIG9mIGRlc2lnbi4gSSBrbm93IHdoYXQgSSBkaWQgaXMganVzdCBhIHN0cmFpZ2h0IHVwIGNvcHksIGJ1dCB0aGlzIHdhcyBtb3JlIG9mIGFuIGV4cGVyaW1lbnQgdG8gZ2V0IGF0bGVhc3Qgc29tZXRoaW5nIHJpZ2h0IChhbmQgc29ycnkgZm9yIHRoZSAic2NyYW1ibGVkIHRleHQiIGJ1dCBJIGRvbiB3YW50IHRvIGdpdmUgdGhlIGJ1c2luZXNzIHNwYW0pLiAKIkkgd2FzIHN1cnByaXNlZCBhdCBob3cgcXVpY2tseSBpdCBzbm93YmFsbGVkLiBJIHRob3VnaHQgYXQgc29tZSBwb2ludCB0aGVyZSB3b3VsZCBiZSBhIGxhc3QgaW50ZXJ2aWV3LCBidXQgdGhlIG5leHQgdmljdGltIHdvdWxkIHN1cHBseSBtZSB3aXRoIHRocmVlIG9yIGZvdXIgbW9yZSBuYW1lcyBhbmQgdGhlIG5leHQgb25lIGhhZCB0aHJlZSBvciBmb3VyIG5hbWVzIGFuZCBpdCBqdXN0IGtlcHQgZ2V0dGluZyBiaWdnZXIgYW5kIGJpZ2dlciwnJyBSZWNhcmV5IHNhaWQuClRDaHVmZiAgMSBwb2ludCAgc3VibWl0dGVkIDEyIG1vbnRocyBhZ28KSGUgd2FzIGFjY3VzZWQgb2Ygc2xheWluZyBBbWVyaWNhbnMgYXMgTGFycnkgNjUwIExvZGkgZmFyIHNvdXRoIGFzIHRoZSBHdWxmIENvYXN0Jy4gU3QuLCBFbHlyaWEsIGF0IDQxNDkgQmVsbGUgQXZlLiwgc3RhdGVzIHNoaXZlcmVkIGhpIHRoZSBjb2xkLiBJbiBTYW4gRnJhbmNpc2NvLCBhIGhpZ2ggb2YgNzQnIHdhcyByZWNvcmRlZCwgZ2l2aW5nIHRoZSBhcmVhIEl0cyB3YXJtZXN0IFJpdmVyIGJlZ2FuIHJlY2VkaW5nIGZyb20gaXRzIGZsb29kIGRlcHRoIHdoaWNoJ2NoYXNlZCBtYW55IGxvd2xhbmQgZHdlbGxlcnMgZnJvbSB0aGVpciBob21lcyBhbmQgbGVmdCByYW5jaGVzIGlzb2xhdGVkIG9uIGEgaXNsYW5kLiAKQWRvb2JzMjMgIDIyIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpUbyBiZWdpbiB3aXRoIHlvdSdsbCBuZWVkIHRvIGhhdmUgYSBnb29kIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHR5cGVzIG9mIHBva2VyIHBsYXllcnMgYXQgdGhlIHRhYmxlIHNvIHRoYXQgeW91IGNhbiByZWFkIHRoZWlyIGhhbmRzIGFjY3VyYXRlbHkgYW5kIHByZWRpY3QgdGhlaXIgcGxheS4KQWxzbywgdGhpcyBsaXN0IHVzZXMgdGhlIHRlcm0gImlUdW5lcyIgdG8gcmVwcmVzZW50ZGlnaXRhbCBzdG9yZXMuIApQbGF5IGZyZWUgcG9rZXIgYW5kIHdpbiByZWFsIG1vbmV5IC4gTm8gRGVwb3NpdCBpcyBOZWVkZWQgYW5kIFlvdSB3aWxsIGJlIHVuZGVyIG5vIG9ibGlnYXRpb25zLiBKdXN0IHBsYXkgaW4gZnJlZSBwb2tlciBnYW1lcyBvbmxpbmUgYW5kIGdldCByZXdhcmRlZCB3aXRoIHJlYWwgbW9uZXkgcHJpemVzIHdoZW4gWW91IHdpbi4gCkkgd291bGQgZGVmaW5pdGVseSByZXNwZWN0IGl0IGlmIGhlIHB1bGxlZCBhIEtlcGhyaWkgYW5kIG1vdmVkIHRvIEtvcmVhIHRvIGxlYXJuIHRvIGNvYWNoIG9yIHNvbWV0aGluZy4gTWF5YmUgaWYgaGUgYW5kIFdpemFyZEh5ZW9uZyB3ZW50IHRvIHRoZSBtb3VudGFpbnMgaW4gVGliZXQgYW5kIFdpemFyZCBpbXBhcnRlZCBhbGwgb2YgaGlzIHdpc2RvbS4gClNvbWV0aW1lcyBvdXRzIGFyZW4ndCB0cnVlIG91dHMuIEluIGNlcnRhaW4gc2l0dWF0aW9ucywgYW4gb3V0IG1heSBiZSBtb3JlIGJlbmVmaWNpYWwgdG8geW91ciBvcHBvbmVudCB0aGFuIHlvdS4gCkltcG9zc2libGUgRm9vZHMgdW52ZWlsZWQgaXRzIGxhdGVzdCByZWNpcGUgZm9yIGl0cyBmYW1vdXMgZmF1eCBtZWF0IGJ1cmdlciwgYW5kIFRoZSBQb3N0IHdhcyBvbiBoYW5kIHRvIHRha2UgYSBiaXRlIGJlZm9yZSBpdCBoaXRzIGEgcmVzdGF1cmFudCBuZWFyIHlvdS4KT25lIG9mIHRoZSBzaG9ydGVzdCBUZXN0cyBpbiBoaXN0b3J5LiBUaGUgSmFtYWljYSBtYXRjaCBiZXR3ZWVuIEVuZ2xhbmQgYW5kIFdlc3QgSW5kaWVzIGxhc3RlZCBqdXN0IDYyIGJvbmUgY3J1c2hpbmcgZGVsaXZlcmllcy4gRW5nbGFuZCB3ZXJlIDE3IGZvciAzIGF0IHRoZSB0aW1lICAgQWxlYyBTdGV3YXJ0IHdhcyBzdGlsbCB0aGVyZSBoYXZpbmcgbWFkZSBhbiBpbXBlcmlvdXMsIHVuYmVhdGVuIDkgICBhbmQgdGhlaXIgcGh5c2lvIFdheW5lIE1vcnRvbiBoYWQgcnVuIG91dCBzaXggdGltZXMgaW4gNjYgbWludXRlcy4gCkVudHJpZXMgV3JpdHRlbiBCeSBEb3VnbGFzIEFkYW1zQSBXZWxjb21lIGFuZCBUaGFuayBZb3UgTWVzc2FnZSBGcm9tIERvdWdsYXMgQWRhbXMKVGhleSB3aWxsIGNvbXBldGUgaW4gdGhlIGZpbmFsIG9mIHRoZSBSZWR0b290aCBQb2tlciBWZWdhcyAxMDAgdG91cm5hbWVudCwgdGhlIFVLIGxhcmdlc3QgbGl2ZSBwdWIgcG9rZXIgbGVhZ3VlIHdpdGggbW9yZSB0aGFuIDEsMDAwIHZlbnVlcyBhbmQgMTgwLDAwMCBwbGF5ZXJzIHJlZ2lzdGVyZWQgc2luY2UgaXQgd2FzIGxhdW5jaGVkIGluIDIwMDcuCldoaWxlIHRoZXJlIGFyZSBtYW55IGRpZmZlcmVudCB0eXBlcyBvZiAxMDAwIENsYXkgUG9rZXIgQ2hpcHMgU2V0cyBvZmZlcmVkIG9uIHRoZSBtYXJrZXQgdG9kYXksIHlvdSBjYW4gYmVuZWZpdCBpbiBzZXZlcmFsIHdheXMgYnkgY2hvb3NpbmcgdGhlIHNldCBvZmZlcmVkIGJ5IEphY2twb3QgQ2FzaW5vLiBJbnRyb2R1Y2VkIGluIHRoZSB5ZWFyIG9mIDIwMDUsIHRoaXMgbWFnbmlmaWNlbnQgc2V0IG9mIENsYXkgUG9rZXIgQ2hpcHMgcmVtYWlucyB0byBiZSBvbmUgb2YgdGhlIGZhdm9yaXRlcyBvZiBQcm9mZXNzaW9uYWwgUG9rZXIgUGxheWVycyBhcm91bmQgdGhlIHdvcmxkLCBhcyB3ZWxsIGFzIG1hbnkgcmVjcmVhdGlvbmFsIGdhbWVycy4gCkEgOTAgbWludXRlIGNsYXNzIGlzIGEgYnJlZXplLCB3aGVyZWFzIHdoZW4gSSB3YXMgZHJpbmtpbmcgY29mZmVlIEkgYmUgZGVsaXJpb3VzIGFuZCBsaWdodCBoZWFkZWQgbWludXRlcyBpbi4gVGhlIGRlbGlyaXVtIGlzIGVuam95YWJsZTsgYnV0IG1heWJlIG5vdCBhZHZpc2FibGUuIE1heWJlIHRyeS4uIApJIHJ1biBhbiBBdXJpIG1hbGUgd2l0aCBmYWNlLjI/KHRoZSBsb25nIGhvcml6b250YWwgaG9ybnMpIGFuZCB0aGUgZGlzY291bnQgU2VwaGlyb3RoIGhhaXIuIApJIGRpZCB0aGlzIGJ5IHJld2FyZGluZyBmb3IgYW4gaW5zdGFudCwgdGhyb3dpbmcgYSB0cmVhdCBhY3Jvc3MgdGhlIHJvb20sIGFuZCBteSBkb2cgZ290IGFub3RoZXIgcmV3YXJkIHdoZW4gc2hlIG1hZGUgZXllIGNvbnRhY3Qgd2l0aCBtZSBhZ2Fpbi4gUmVwZWF0IHdpdGggZ3JhZHVhbGx5IGxvbmdlciBhbmQgbG9uZ2VyIHNlc3Npb25zIG9mIG1haW50YWluaW5nIGV5ZSBjb250YWN0Li4gCiJJdCBjYW4gcG90ZW50aWFsbHkgc3RhcnQgYSBjYXJlZXIsIiBQcmVzZWRvIHNheXMuICJJIHdvdWxkIGhhdmUganVtcGVkIGF0IHRoaXMgYXMgYSBraWQuIgpXaGF0IGFyZSBzb21lIHRoaW5ncyB5b3Ugd2lzaCB5b3VyIGNsaWVudHMgd291bGQgZG8KSSBqdXN0IHdhbm5hIHNlZSBteSBiYWJ5LiAKVGhvdWdoIGFmdGVyIDI0IG1vbnRocyBvZiBnZXR0aW5nIHRvIGtub3cgdGhvc2UgVExzLCB0aGV5IGRvbiBldmVuIGtub3cgd2hhdCBhIHdpbmRvdyBvZiB0b2xlcmFuY2UgaXMsIGhvd2V2ZXIgd2VsbCBpbnRlbnRpb25lZCB0aGV5IG1heSBiZS4gQW5kIHRoZXNlIGFyZSB0aGUgVExzIHdobyB0cmFpbmVkIGFzIG1lbnRhbCBoZWFsdGggZmlyc3QgYWlkIG9mZmljZXJzLi4gCkkgcnVuIHVwIGFuZCByZWxlYXNlIGl0IGZyb20gYSB0cmFwLiAKV2UgbG9vayBhdCB0aGUgYXhpcyBmb3IgdGhlIGdyYXBocyBvbiB0aGlzIHBhZ2Ugd2UgY2FuIHNlZSB0aGF0IHRoaXMgaXMgdGhlIGxvZyBwb3N0ZXJpb3Igc3VyZmFjZSByYXRoZXIgdGhhbiB0aGUgcG9zdGVyaW9yIHN1cmZhY2UgYmVpbmcgZXhwbG9yZWQuCjEgc2VlZCBhbmQgc3RheSBjbG9zZSB0byBob21lIGNvbWUgdG91cm5hbWVudCB0aW1lLiAKTm93IHRoZSBUaW1lcyBpcyBzaG93aW5nIHRoZSBzYW1lIHN5Y2hvcGhhbnRpYyBkZXZvdGlvbiB0byBQcmVzaWRlbnQgT2JhbWEgdGhhdCB0aGV5IHByZXZpb3VzbHkgc2hvd2VkIHRvIEdlb3JnZSBXLiBCdXNoLiBUaGUgUHJlc2lkZW50IGFzIGhlcm8sIGluZmFsbGlibGUsIG5vIG5lZWQgdG8gYXNrIGFueSB0b3VnaCBxdWVzdGlvbnMgYWJvdXQgaGltIG9yIGhpcyBwb2xpY2llcyBiZWNhdXNlIGhlIGlzIGxhcmdlIGFuZCBpbiBjaGFyZ2UuCkJ1dCBldmVyeSB0aW1lIEkgcmVhZCBzb21ldGhpbmcgYWJvdXQgaXQsIGl0IGp1c3QgcG9pbnRzIGF0IHRoZSBwcm9ibGVtIGZyb20gYSBoaWdoIGxldmVsIGFuZCBpdCBuZXZlciByZWFsbHkgbWFrZXMgcG9saWN5IGFuZCBsYXcgbWFrZXJzIGFjY291bnRhYmxlIHRvIGZpbmQgYSBzb2x1dGlvbi5JdCBpcyBhcyBpZiBwZW9wbGUgZG8gbm90IHJlYWxseSBjYXJlIHRoYXQgbXVjaC4gCkFsc28sIGl0J3MgZnJlZSEgLiAKWW91cmUgY29uZnVzaW5nIHRoZSBpZGVhIHRoYXQgSSBzdXBwb3J0IGZpbGUgc2hhcmluZyBhbmQgZXF1YXRpbmcgaXQgd2l0aCBlbnRpdGxlbWVudCBvZiBhbnkgc3BlY2lmaWMgY29tbW9kaXR5LiAKU3Ryb2tlamFtbWVyICAxIHBvaW50ICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpCZWNjYXRoZXZldCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQWxzbyBHVE8gd2lsbCBub3QgZ2l2ZSB0aGUgbW9zdCBvcHRpbWFsIHJlc3VsdCBpbiBldmVyeSBpbmRpdmlkdWFsIHNpdHVhdGlvbi4gRm9yIGV4YW1wbGUsIHNheSBpbiBhIGdhbWUgb2YgaGVhZHMgdXAgcG9rZXIsIHlvdSBub3RpY2UgeW91ciBvcHBvbmVudCB3aWxsIGNhbGwgYW55IGJldCB5b3UgbWFrZSBvbiB0aGUgcml2ZXIgb25jZSBoZSBjaGVja3MgdG8geW91LiBUaGlzIG1lYW5zIHlvdSBjYW4gd2FpdCB1bnRpbCB5b3UgaGF2ZSBhIHN0cm9uZyBoYW5kIGFuZCBqdXN0IGJvbWIgaXQuIApWb2x1bnRlZXIgdG9nZXRoZXIuIEhlbHBpbmcgYW5vdGhlciBwZXJzb24gdGVuZHMgdG8gYm9vc3Qgc2VsZiBlc3RlZW0uIEJ5IGVuY291cmFnaW5nIGFuZCBzdXBwb3J0aW5nIGVmZm9ydHMgdG8gaGVscCBvdGhlcnMsIHlvdSBtYXkgYm9vc3QgYSBmcmllbmQncyBzZWxmIGVzdGVlbSBpbiB0aGUgcHJvY2Vzcy4gWzVdClJlbWVtYmVyIHRoYXQgaW4gYWN0dWFsIGNhc2lub3MsIHlvdSBtYXkgaGF2ZSB0byBvcmRlciBmb29kIG9yIGRyaW5rcywgd2hpY2ggbWVhbnMgdGhhdCB5b3UgbWF5IGhhdmUgdG8gZ2l2ZSB0aGUgc2VydmVyIHNvbWUgdGlwLiAKUmVwcmVzZW50YXRpdmVzIGZyb20gMyBuYXRpb25zIGp1c3QgaGFkIGEgc3VtbWl0IG9mIHNvcnRzIGF0IHRoaXMgc21hbGwgdG93biB3aGVyZSB0aGUgYWR2ZW50dXJlcnMgZXhwbGFpbmVkIHdoYXQgaGFwcGVuZWQuIFRoZSBtb3N0bHkgaHVtYW4gZW1waXJlIG9mIEFyZ29zIHRyaWVkIHRvIGJlbGl0dGxlIHRoZSBldmVudHMgYXMgYSBmZXcgZmFuYXRpY3MgY29tbWl0dGluZyB0ZXJyb3Jpc20uIFRoZSBFbHZlbiBuYXRpb24gb2YgdGhlIEdvbGQgVmFsbGV5IGlzIHRha2luZyB0aGVzZSB0aHJlYXRzIHZlcnkgc2VyaW91c2x5IGFuZCBhZHZpc2VzIGNhdXRpb24uIFRoZXkgd2FudCB0byBkaWcgZGVlcGVyIGludG8gdGhlIHJ1aW5zIHVuZGVyIENvcHBlcnRvbiBidXQgdGhlIHRvd24gaXMgb24gQXJnb3NpYW4gc29pbCBzbyB0aGV5IGZvcmJpZCBpdC4gVGhlIER3YXJ2ZW4gY2l0eSBzdGF0ZSBvZiBJcm9uIEdhdGUgaXMgY29uZmlkZW50IHRoYXQgaWYgdGhlcmUgaXMgc29tZSBraW5kIG9mIEtyYWtlbiB0aHJlYXQgdGhleSB3aWxsIGJlIHNhdmUgZGVlcCB1bmRlcmdyb3VuZCBpbiB0aGVyZSBmb3J0cmVzcyBjaXR5LiBJIGhhdmUgYW4gaWRlYSB0aGF0IGZ1cnRoZXIgaW52ZXN0aWdhdGlvbiBvZiB0aGUgcnVpbnMgd2lsbCByZXZlYWwgdGhhdCB0aGF0IHRoZXkgdXNlZCB0byBiZSBhIGxhcmdlIGNhc3RsZSB1bnRpbCB0aGV5IHJlc2lzdGVkIHRoZSBrcmFrZW4gbWFueSAodGhvdXNhbmRzPykgb2YgeWVhcnMgYWdvIGFuZCB0aGF0IHRoZSBpbmhhYml0YW50cyB3ZXJlIHdvcmtpbmcgb24gc29tZSBraW5kIG9mIHdlYXBvbiBvciBtYWdpYyB0byBvdmVydGhyb3cgaXQuIFRoZSBrcmFrZW4gbGFpZCB3YXN0ZSB0byBtb3N0IG9mIHRoZSBjYXN0bGUgYW5kIGJ1cmllZCB3aGF0IHJlbWFpbmVkIGFzIHdlbGwgYXMgY3Vyc2luZyB0aGUgaW5oYWJpdGFudHMgdG8gdW5kZWF0aCBidXQgZGlkbiBmaW5kIHdoYXRldmVyIGl0IGlzIHRoZXkgd2VyZSB3b3JraW5nIG9uLiBXaGF0IGlzIHNvbWV0aGluZyB0aGV5IGNvdWxkIGJlIHdvcmtpbmcgb24gdGhhdCB3b3VsZCBiZSBhIGxlZ2l0aW1hdGUgdGhyZWF0IHRvIGEgYmVhc3Qgb2YgdGhlIEtyYWtlbiBtYWduaXR1ZGU/CkkgdG9sZCB0aGUga2lkcyB0byAiYmUgYSB0cmVlIiAgIHNvIHRoZXkgc3RhbmQgdG90YWxseSBzdGlsbCAoYWdhaW4gd2l0aCBoYW5kcyBiZWhpbmQgdGhlaXIgYmFja3MpIGFuZCB3YWl0IGZvciBoZXIgdG8gY2FsbSBkb3duLiBUaGF0IGhhcyBtYWRlIGxvYWRzIG9mIGRpZmZlcmVuY2UuIApQb2tlciBGYWNlClByb2Zlc3Npb25hbCBQb2tlciBQbGF5ZXJzCkFyc2VuYWwgYXJlIHB1dHRpbmcgb3V0IGEgZGVjZW50IGRlZmVuc2UgdnMgQnJlbnRmb3JkLiAKSSBhcmd1ZSB0aGF0IGNoYXJ0cyBhcmUgbm90IGEgZ3JlYXQgaWRlYSBpbiBnZW5lcmFsLCBiZWNhdXNlIHRoZXkgZG9uIHRha2UgYWNjb3VudCBmb3Igb3RoZXIgZmFjdG9ycy4gCldoZW4geW91ciBmdW5kcyBhcmUgc21hbGwsIGV2ZXJ5IGxvc3Mgd2lsbCBodXJ0LCBhbmQgeW91J2xsIGJlZ2luIHRvIG1ha2UgZGVjaXNpb25zIG91dCBvZiBmZWFyLiBIYXZpbmcgYSBiaXQgb2YgYSBjdXNoaW9uIHdpbGwgYWxsb3cgeW91IHRvIGtlZXAgeW91ciBtaW5kIG9uIHRoZSBnYW1lIGFuZCBub3Qgb24geW91ciBzaHJpbmtpbmcgc3RhY2sgb2YgY2hpcHMuWzRdLiAKUnVsZSAyOiBBbGwgcG9zdHMgbXVzdCBiZSBpbiB0aGUgc3R5bGUgb2YgYSBib3NzIGZpZ2h0LiAKTm90IHRoZSBHcmVhdGVzdApVbmxlc3MgdGhlIHZhbHVlIG9mIHlvdXIgaG91c2Ugc2V2ZXJlbHkgZGVjbGluZWQgaXQgaXMgYWxtb3N0IGFsd2F5cyBhIHNvbGlkIGludmVzdG1lbnQuIApZZXMsIEkgd2FzIHRyeWluZyB0byBhYmJyZXZpYXRlIHRoZSBzdG9yeSBhcyBsaWtlIGFueSBwYXJlbnRhbCBkaXNwdXRlLCBpdCBjb21wbGljYXRlZC4gCkkgY2FuIHVuZGVyc3RhbmQgcGVvcGxlIGJlaW5nIHdhcnkgb2YgdGhlbS4gCkRlYnV0aW5nIG9uIENCQyBUViBhbmQgdGhlIENCQyBHZW0gc3RyZWFtaW5nIHNlcnZpY2UsIHRoZSBuZXcgIlN0cmVldCBMZWdhbCIgYWxzbyBmaW5kcyBPbGl2aWEgb3V0c2lkZSBoZXIgY29tZm9ydCB6b25lLCBhZnRlciB0aGUgYmlnIFRvcm9udG8gbGF3IGZpcm0gc2hlIHdvcmtzIGZvciBkaXNiYW5kcyBhbmQgc2hlIGpvaW5zIGEgdGVhbSBvZiB5b3VuZyBzb2NpYWwgYWN0aXZpc3QgbGF3eWVycyBhdCBhIHNtYWxsIHVwc3RhcnQuCiJGb3IgdGhlIHJpZGVycyBpdCdzIHNvbWV0aGluZyBsaWtlIGEgcmVhbGx5IHJvdWdoIHByb3RvY29sIHRoZXkgaGF2ZSB0byBnbyB0aHJvdWdoLCBhbmQgaXQgc3RhcnRzIHN0cmFpZ2h0IGF3YXkgd2l0aCB0aGUgZmlyc3QgZHJpbmsgdGhleSBnZXQgYXQgdGhlIGZpbmlzaCBsaW5lLiBGcm9tIHRoZXJlIG9uIHdlIGhhdmUgZGlmZmVyZW50IHR5cGVzIG9mIG51dHJpdGlvbiBwcm90b2NvbHMgdGhleSBoYXZlIHRvIGZvbGxvdywgYW5kIG90aGVyIHN0dWZmIGFzIHdlbGwsIGxpa2Ugc29tZSBjb2xkIHBsdW5nZXMgYW5kIHdlIGhhdmUgZGlmZmVyZW50IHN0cmV0Y2hpbmcgdGhpbmdzIHdlIGRvIHdpdGggdGhlbS4gQW5kIG9mIGNvdXJzZSB0aGUgbWFzc2FnZSB3aGljaCBpcyBzb21ldGhpbmcgdG8gcHJvdGVjdCB0aGUgbXVzY2xlcy4gCkRhIGVzIHp1IGRpZXNlbSBUaGVtYSBub2NoIG5pY2h0cyB3aXJrbGljaCBWZXJnbGVpY2hiYXJlcyBhdWYgZGVtIE1hcmt0IGdpYnQsIGtubnRlIE1vc2htYW4gYXVjaCBtaXQgZGllc2VtIFdlcmsgd2llZGVyIGlucyBTY2h3YXJ6ZSBnZXRyb2ZmZW4gaGFiZW4uIFp1ZGVtIGRhcyBIZWFkcyBVcCBTcGllbCBkdXJjaCBkaWUgdmllbGVuIEZlcm5zZWhiZXJ0cmFndW5nZW4gdW5kIGRpZSBzdG5kaWdlIEFjdGlvbiBpbSBNb21lbnQgc2VociBiZWxpZWJ0IGlzdC4gV2FzIGJpZXRldCBkaWVzZXMgQnVjaCBudW4gZGVtIGdlbmVpZ3RlbiBMZXNlciwgZGFzIGVyIG5pY2h0IHNjaG9uIHdlaT8uIApJIHdpc2ggdGhpcyB3YXMgdGFsa2VkIGFib3V0IG1vcmUuIApMaWxsYXJkIG1pc3NlZCBzZXZlbiBnYW1lcyAgIHRoZSBmaXJzdCBvZiBoaXMgdGhlbiBmb3VyIHllYXIgcHJvIGNhcmVlciAgIGR1cmluZyB0aGUgMjAxNiBzZWFzb24uIE1hc29uIHdhcyBvdXQgZm9yIDIxIGdhbWVzIGxhc3Qgc2Vhc29uLiAKUmVzdWx0czogUG9zaXRpdmUgcHJvc3RhdGUgYmlvcHN5IGN1bHR1cmVzIHdlcmUgb2J0YWluZWQgZnJvbSBwYXRpZW50cyBhbmQgY29udHJvbHMuIEJhY3RlcmlhIHdlcmUgZm91bmQgaW4gNDUgb2YgMTE4IHBhaW4gcGF0aWVudHMgKDM4JSkgYW5kIGluIDIxIG9mIDU5IGNvbnRyb2xzICgzNiUpIChwID0gMC43NCkuIE9sZGVyIG1lbiB3ZXJlIG1vcmUgbGlrZWx5IHRvIGhhdmUgcG9zaXRpdmUgY3VsdHVyZXMuIApUaGUgam9icyBpbmNyZWFzZSBsYXJnZWx5IHJlZmxlY3RzIGhpZ2hlciBsYWJvciBmb3JjZSBudW1iZXJzLCByYXRoZXIgdGhhbiBmYWxsaW5nIHVuZW1wbG95bWVudCwgZHVlIHRvIHJpc2luZyBwYXJ0aWNpcGF0aW9uIHJhdGVzIGFuZCBhY2NlbGVyYXRpbmcgcG9wdWxhdGlvbiBncm93dGggb3ZlciB0aGUgcGFzdCBjb3VwbGUgb2YgeWVhcnMuIE11Y2ggb2YgdGhlIGluY3JlYXNlIGluIENhbmFkYSBwb3B1bGF0aW9uIGNvbWVzIGZyb20gaW50ZXJuYXRpb25hbCB3b3JraW5nIGFnZSBtaWdyYW50cy4gSW4gYW4gZWNvbm9teSB3aXRoIG1vcmUgdGhhbiBoYWxmIGEgbWlsbGlvbiB2YWNhbnQgam9icywgbWFueSBzZWVtIHRvIGJlIGZpbmRpbmcgd29yay4uIApTdGFydCByZWZlcnJpbmcgdG8gbWlkZGxpbmcgbG93IHBvY2tldCBwYWlycyBhcyB5b3VyIG1ha2VycyAgIHNldCBtaW5pbmcgaXMgaGlnaGx5IHByb2ZpdGFibGUgYW5kIHlvdSBtYXkgYmUgZ29pbmcgYWJvdXQgaXQgaW4gdGhlIHdyb25nIHdheQpJIGhhdmUgcG9yY2VsaWFuIGRvbGxzIG9uIHRoZSBmbG9vciBzbyB0aGF0IG15IHlhcm4gY2FuIGJlIG9uIHRoZSB0b3Agc2hlbGYuIApUaGUgbWluaXN0ZXIncyBzcG9rZXNtYW4gZGlkIG5vdCBhbnN3ZXIgdGhlIHF1ZXN0aW9ucyBidXQgc3RhdGVkIHRoZXJlIHdvdWxkIGJlIGEgIm1ham9yIHN0dWR5IiBpbnRvIHByb2JsZW0gZ2FtYmxpbmcgY29uZHVjdGVkIHRoaXMgeWVhci4gVGhpcyB3b3VsZCBmb2N1cyBvbiBhbGwgZm9ybXMgb2YgZ2FtYmxpbmcuICJMaXF1b3IgR2FtaW5nIE5TVyBwcm92aWRlcyBmcmVlIHllYXJseSBkYXRhIG9uIGdhbWluZyBtYWNoaW5lIG51bWJlcnMgYW5kIHR1cm5vdmVyIGluIGVhY2ggTlNXIGxvY2FsIGdvdmVybm1lbnQgYXJlYSwiIHRoZSBzcG9rZXNtYW4gc2FpZC4iVGhpcyBpcyBwdWJsaXNoZWQgaW4gdGhlIGFubnVhbCByZXBvcnQgb2YgdGhlIE5TVyBEZXBhcnRtZW50IG9mIEp1c3RpY2UuIApUYXNzZWxlZENhdCAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGVyZSBpcyBubyBjaGFuY2UgdGhpcyB3b3VsZCBFVkVSIHdvcmsuIApTb21lIGhhdmUgYSBsb3Qgb2YgZGV0YWlsZWQgc3RhdHMgb24gYSBwYXJ0aWN1bGFyIHBsYXllciBmcm9tIGhhdmluZyBwbGF5ZWQgbWFueSBoYW5kcyB3aXRoIHRoZW0sIGFsbG93aW5nIGZvciBtYXggZXhwbG9pdGF0aW9uLiAKKFByaXZhY3kgUG9saWN5KU9wZW54VGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpUnViaWNvbiBQcm9qZWN0VGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKR3VpdGFyIEhlcm8gSUlJOiBMZWdlbmRzIG9mIFJvY2sgICBOaW50ZW5kbyBXaWkgKEdhbWUgb25seSkuIEFjdGl2aXNpb24uIDQuMyBvdXQgb2YgNS4gR3VpdGFyIEhlcm8gSUlJICAgTGVnZW5kcyBPZiBSb2NrIEZyZWUgRG93bmxvYWQgUEMgR2FtZSBDcmFja2VkIGluIERpcmVjdCBMaW5rIGFuZCBUb3JyZW50LiBHdWl0YXIgSGVybyBJSUkgaXMgYSBtdXNpYyByaHl0aG0gZ2FtZS4gR2FtZSB1cGRhdGUgKHBhdGNoKSB0byBHdWl0YXIgSGVybyBJSUk6IExlZ2VuZHMgb2YgUm9jayAsIGEobikgcGFydHkgZ2FtZSwgdi4xLjMsIGFkZGVkIG9uIFR1ZXNkYXksIE1heSAxMywgMjAwOC4gCk5vdCBhbiBpbW1pZ3JhbnQgYnV0IGZpZ2h0IGZvciBpbW1pZ3JhbnQgcmlnaHRzLiAKU2F5cyBhIGdyZWF0IGRlYWwgdGhhdCB0aGUgY29tcGFueSByZXNwb25zZSB0byBiZWluZyBjaGFyZ2VkIHdpdGggc2VyaW91cyBjcmltZXMgd2FzIG5vdCB0byBmaWdodCB0aGUgY2hhcmdlcyBpbiBjb3VydCwgYnV0IHRvIGZpZ2h0IHRoZW0gaW4gZ292ZXJubWVudDogdG8gbG9iYnkgdGhlIHBvbGl0aWNpYW5zLCB0byBhdHRlbXB0IHRvIGludGltaWRhdGUgdGhlIHByb3NlY3V0b3JzLCB0byBhcnJhbmdlIGNhbGxzIGJldHdlZW4gb2xkIGNpdmlsIHNlcnZpY2UgY2h1bXMuIApCb2xseXdvb2QgYmFkZGllcyBwYWludCBMb25kb24gcmVkCkVsbGUgYSBwcmlzIGNvbmcgRWxsZSBhIGZhaXQgZGV1eCBoZXVyZXMgZGUgcm91dGUgcG91ciBhbGxlciBTaGVyYnJvb2tlLiBVbmUgZm9pcyBzdXIgcGxhY2UsIG9uIGx1aSBhIGRpdCA6IENlIG4gcGFzIGljaSwgaWwgZmF1dCBhbGxlciBSaWNobW9uZC4gUyByZW5kdWUgUmljaG1vbmQuIApBY3VwdW5jdHVyZSBhbmQgaGVyYmFsIHRoZXJhcHkgYWxzbyB3b3JrIGluIGEgc3luZXJnaXN0aWMgZmFzaGlvbiwgc3VwcG9ydGluZyBlYWNoIG90aGVyLiAKV2UgY2FuIGVmZm9ydGxlc3NseSBvYnNlcnZlIHRoYXQgd2l0aCB0aGUgaW1wcm92ZW1lbnQgb2YgZXhwZXJ0aXNlIGluIHRoZSB3b3JsZCBvZiB0ZWNobm9sb2d5IGF0IGEgZmFzdGVyIHBhY2UsIHRoZSBpbnRlcm5ldCBoYXMgbm93IGJlY29tZSBhbiBhYm9kZSBvZiBhbXVzZW1lbnQgZm9yIHdvbWVuIGFzIHRoZXkgY2FuIGVhc2lseSBzcGVuZCB0aGVpciB0aW1lIG1vcmUgYXQgYSBjb21wdXRlci4gV2l0aCB0aGUgcmlzaW5nIGFuZCBidWRkaW5nIG9mIGZhbWUgb2Ygb25saW5lIGNhc2lubywgd29tZW4gZmlndXJlIG91dCBvbmxpbmUgZ2FtYmxpbmcgYXMgdGhlIG1vc3QgZW50ZXJ0YWluaW5nIGFuZCBlYXNpZXN0IHBvc3NpYmxlIHdheSBvdXQgdG8gZ2FtYmxlLgpXaHkgd291bGQgYSBwYXRyb2wgY2FyIG5vdCBoYXZlIHRoZSBkYXNoIGNhbSBnb2luZyAxMDAlIG9mIHRoZSB0aW1lPyBXaHkgd291bGQgYSBjYW1lcmEgYmUgbGlrZWx5IHRvIG5vdCBjYXB0dXJlIHRoZSBmYWN0IHRoYXQgYSBjYXIgZGlkbiBjb21lIHRvIGEgY29tcGxldGUgc3RvcD8KSSByZWNvbW1lbmQgc29tZSBwb3Agc2NpZW5jZSBib29rcyB0aGF0IG1ha2UgYmlnIHBoeXNpY3MgY29uY2VwdHMgZWFzeSB0byB1bmRlcnN0YW5kLiAKSW4gb3VyIGNvdW50cnksIGRlbW9jcmF0aWMgZ292ZXJubWVudHMgaGF2ZSBiZWVuIG5vIGJldHRlciB0aGFuIGRpY3RhdG9yaWFsIG9uZXMsIGFuZCB0aGluZ3MgaGF2ZSBuZXZlciBiZWVuIGFzIGJhZCBhcyB0aGV5IGFyZSB0b2RheS4gVGhlIHdob2xlIG5hdGlvbiBpcyBjdXJzaW5nIHRoZSBjb3JydXB0aW9uIGFuZCBpbmNhcGFiaWxpdHkgb2YgdGhlIHJ1bGVycy4gClRoaXMgaXMgd2lkZXNwcmVhZCBpbiBldmVyeSBjb25jZWl2YWJsZSBjb3JuZXIgb2YgdGhlIGJ1c2luZXNzIHdvcmxkLi4gClRoZSBlbmQgcmVzdWx0IG1heSBiZSBmYXRpZ3VlPyBNdXNjbGUgcGFpbiBpcyBhbm90aGVyIHBvdGVudGlhbCBjb25zZXF1ZW5jZS4KSW4gZWZmZWN0IGFsbW9zdCBhbGwgaXNzdWVzIHdpdGggcmVzb3VyY2VzLCBwcm9kdWN0aW9uLCB3YXN0ZSwgcG9sbHV0aW9uIHdvdWxkIGJlIHN1c3RhaW5hYmxlIGlmIHRoZSB3b3JsZCBoYWQgYSBmYXIgbG93ZXIgcG9wdWxhdGlvbi4gU3BhY2Ugc2hvdWxkbiBiZSB0aGUgcHJpbWFyeSByZWFzb24gZm9yIHNvY2lldHkgdGhpbmtpbmcgdGhleSBnb3QgcGxlbnR5IHRvIGV4cGFuZCBhbmQgZ3JvdyBpbnRvLiAKIkluIE5vdmVtYmVyIEkgc29tZXRpbWVzIGZlZWwgYXMgaWYgc3ByaW5nIGNvdWxkIG5ldmVyIGNvbWUgYWdhaW4sIiBzaGUgc2lnaGVkLCBncmlldmluZyBvdmVyIHRoZSBob3BlbGVzcyB1bnNpZ2h0bGluZXNzIG9mIGhlciBmcm9zdGVkIGFuZCBiZWRyYWdnbGVkIGZsb3dlciBwbG90cy4gVGhlIGdheSBsaXR0bGUgZ2FyZGVuIG9mIHRoZSBzY2hvb2xtYXN0ZXIncyBicmlkZSB3YXMgcmF0aGVyIGEgZm9ybG9ybiBwbGFjZSBub3csIGFuZCB0aGUgTG9tYmFyZGllcyBhbmQgYmlyY2hlcyB3ZXJlIHVuZGVyIGJhcmUgcG9sZXMsIGFzIENhcHRhaW4gSmltIHNhaWQuIEJ1dCB0aGUgZmlyIHdvb2QgYmVoaW5kIHRoZSBsaXR0bGUgaG91c2Ugd2FzIGZvcmV2ZXIgZ3JlZW4gYW5kIHN0YXVuY2g7IGFuZCBldmVuIGluIE5vdmVtYmVyIGFuZCBEZWNlbWJlciB0aGVyZSBjYW1lIGdyYWNpb3VzIGRheXMgb2Ygc3Vuc2hpbmUgYW5kIHB1cnBsZSBoYXplcywgd2hlbiB0aGUgaGFyYm9yIGRhbmNlZCBhbmQgc3BhcmtsZWQgYXMgYmxpdGhlbHkgYXMgaW4gbWlkc3VtbWVyLCBhbmQgdGhlIGd1bGYgd2FzIHNvIHNvZnRseSBibHVlIGFuZCB0ZW5kZXIgdGhhdCB0aGUgc3Rvcm0gYW5kIHRoZSB3aWxkIHdpbmQgc2VlbWVkIG9ubHkgdGhpbmdzIG9mIGEgbG9uZyBwYXN0IGRyZWFtLi4gCkVuIGVmZmV0LCB1biBwaGFybWFjaWVuIG4gcGx1cyBhdXRvcmlzICBlZmZlY3R1ZXIgZGVzIGNvbXBvc2l0aW9ucyBtYWdpc3RyYWxlcyAgbGEgZGVtYW5kZSBkIHBhdGllbnQuIApZb3UgZXZlbiBzYWlkIHlvdSBqdXN0IHRhbGtpbmcgYWJvdXQgdGhlIHBvcHVsYXIgcG9zdHMKSXQncyBub3QgYW4gZWFzeSB0aGluZyB0byBkbyB0aGUgY29uc3VtZXIgcmVzZWFyY2guIApEaXN0cmlidXRlIGhhbmRvdXQuIApJIHdvdWxkIGNoaW1lIGluIGhlcmUgdG8gZ2l2ZSBOaW50ZW5kbyBhIGNhbGwgYW5kIHBvbGl0ZWx5IGNhbiBraW5kbHkgYXNrIHdoYXQgdGhleSBjYW4gZG8gZm9yIHlvdS4gCkFkZCBjaG9jb2xhdGUgY2hpcHMgYW5kIHN0aXIgdW50aWwgbWVsdGVkLiBMZXQgc3RhbmQgMTAgbWludXRlcyB0byBjb29sLiBBZGQgcmVtYWluaW5nIGluZ3JlZGllbnRzLiAKVGhpcyBpcyBub3Qgb25seSBteSBmaXJzdCB5ZWFyIGhhdmluZyBhIHNlcmlvdXMgYm95ZnJpZW5kIG9uIFZhbGVudGluZXMgRGF5LCBidXQgaGF2aW5nIGFueSB0eXBlIG9mIHNpZ25pZmljYW50IG90aGVyIGZvciB0aGUgSGFsbG1hcmsgaG9saWRheS4KU2luY2UgdGhlIGV4dHJhY2VsbHVsYXIgQ2EyKyBjb25jZW50cmF0aW9uIHdpbGwgYWZmZWN0IHRoZSBhbW91bnQgb2YgQ2EyKyBlbnRlcmluZyBkdXJpbmcgc3RpbXVsYXRpb24sIGl0IGlzIGltcG9ydGFudCB0byBkZXRlcm1pbmUgdGhlIGxldmVsIG9mIHRoZSBpb24gY2xvc2UgdG8gdGhlIHNlbnNvcnkgY2VsbHMuIFVzaW5nIGZsdW9yZXNjZW5jZSBpbWFnaW5nIGFuZCBmbHVvcmVzY2VuY2UgY29ycmVsYXRpb24gc3BlY3Ryb3Njb3B5LCB3ZSBtZWFzdXJlZCB0aGUgQ2EyKyBjb25jZW50cmF0aW9uIG5lYXIgZ3VpbmVhIHBpZyBzdGVyZW9jaWxpYSBpbiBzaXR1LiAKWW91IGFyZSBqdXN0IGFub3RoZXIgbnVtYmVyIHRvIHRoZW0gd2l0aCBhIHRheCBpZCB0byBlbnN1cmUgdGhleSBwYXJ0IHlvdXIgbW9uZXkgZnJvbSB5b3UuIApBbW9uZyB0aGVzZSBub3ZlbCBtZXRob2RzIGFyZSBLaW5lc2lzIE15b2Zhc2NpYWwgSW50ZWdyYXRpb24gKEtNSSkgICBhbiBhcHByb2FjaCB0byBSb2xmaW5nIGRldmVsb3BlZCBieSBNeWVycyAgIGFuZCBGYXNjaWFsIFN0cmV0Y2ggVGhlcmFweSAoRlNUKSwgZm91bmRlZCBieSB0aGUgaHVzYmFuZCBhbmQgd2lmZSBzdHJldGNoIHRoZXJhcHkgdGVhbSBvZiBDaHJpcyBhbmQgQW5uIEZyZWRlcmljay4gVGhlc2UgbWV0aG9kcyBjYW4gc2lnbmlmaWNhbnRseSBlbmhhbmNlIHRoZSBiZW5lZml0cyBvZiBhIHN0cmV0Y2hpbmcgYW5kIHN0cmVuZ3RoIHByb2dyYW0sIG1ha2luZyB5b3Ugc3RhbmQgdGFsbGVyLCBydW4gZmFzdGVyIGFuZCBwbGF5IGhhcmRlci4gClYuIApVbml2ZXJzZSBFaWZlcm1hbiBkaWVzIGF0IDc2CkdvaW5nIHRvIGEgY2FzaW5vIHlvdXIgZmlyc3QgdGltZSBjYW4gYmUgYSBiaXQgaW50aW1pZGF0aW5nIGVzcGVjaWFsbHkgaWYgeW91IGRvbid0IGtub3cgYSBsb3QgYWJvdXQgdGhlIGRpZmZlcmVudCBnYW1lcyBpbiBhIGNhc2luby4gSGVyZSBpcyBhIGd1aWRlIHRvIHNvbWUgb2YgdGhlIG1vcmUgcG9wdWxhciBjYXNpbm8gZ2FtZXMuClRoZXkgYmVuZWZpdCBhIGxvdCBtb3JlIGlmIE9QIHBheXMgdXAgcmF0aGVyIHRoYW4gcmV0dXJucyB0aGVtLCBhbmQgSSBjYW4gMTAwJSBzZWUgc29tZWJvZHkgdGhpbmtpbmcgdGhleSBnZXQgY3V0ZSBhbmQgd2FpdCB0byBkZW1hbmQgbW9uZXkgb3IgYSByZXR1cm4gdW50aWwgdGhlIHJldHVybiBpcyBwcm9iYWJseSBvZmYgdGhlIHRhYmxlLi4gClNvIEkgdW5kZXJzdGFuZCBhbGwgcGVyc3BlY3RpdmVzLCBhbmQgSSB0cnkgdG8gYWNjb21tb2RhdGUgdGhlbS4gSSB0aGluayB0aGF0IGNvbWVzIGFjcm9zcyBpbiBteSBhY3Rpb25zIGFuZCBkZWNpc2lvbnMuLiAKWWV0IHdoYXQgZG8gd2UgcmVhbGx5IGtub3cgbm93IHRoYXQgd2UgZGlkbiBrbm93IGJlZm9yZT8gVGhlIHNlcmllcywgYW4gYW1hemluZyBwaWVjZSBvZiBhY3R1YWwgam91cm5hbGlzbSBhdCBhIHRpbWUgd2hlbiBvdXIgbmV3cyBpcyBkb21pbmF0ZWQgYnkgb3BpbmlvbmF0ZWQgYmxvZ2dlcnMgbGlrZSBteXNlbGYsIGJ1dCBpdCByZWFsIHVzZSBpcyBpbiB0aGUgZmFjdHMgYW5kIGZpZ3VyZXMsIG5vdCB0aGUgc3RvcnkuIGFscmVhZHkga25ldyB0aGF0IGRlZmVuc2Ugc3BlbmRpbmcgKHNlY3JldCBvciBub3QpIGlzIGNvbXBsZXRlbHkgb3V0IG9mIHByb3BvcnRpb24gdG8gd2hhdCB0aGUgVVMgY2FuIGFmZm9yZCB0byBzcGVuZCBhbmQgb25seSBncm93cyBiaWdnZXIgYnkgdGhlIGRheS4gaXMgbGl0dGxlIGFjY291bnRhYmlsaXR5IGluIHRlcm1zIG9mIHByaXZhdGUgY29udHJhY3RvcnMgb3IsIGxldCBmYWNlIGl0LCB0aGUgcGFpZCBlbXBsb3llZXMgb2YgdGhlIFVTIGRlZmVuc2UgaW5kdXN0cnksIGhlcmUgb3IgYXJvdW5kIHRoZSB3b3JsZC4gbGlrZSBhIEJQIG9pbCBzcGlsbCwgY3VyYmluZyB0aGUgbWlsaXRhcnkgaW5kdXN0cmlhbCBjb21wbGV4IHNlZW1zIHVuc3RvcHBhYmxlLgpIZSBqdXN0IGRpZG4gbGVhZCB5b3UgdG8gbW9yZSB3aW5zIHRoYW4gbGFzdCB5ZWFyIG9yIGEgU3VwZXIgQm93bCwgd2hpY2ggd2FzIGEgVkVSWSBsb2Z0eSBnb2FsIHRoYXQgcGVvcGxlIHNlZW1lZCB0byB0aGluayB3YXMgYSBmb3JlZ29uZSBjb25jbHVzaW9uIDEgcG9pbnQgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnb1JpZ2h0PyBPZmYgdGhlIHRvcCBvZiBteSBoZWFkIEkgdGhpbmsgNy8xMiB0ZWFtcyBkaWQgbm90IHJldHVybiB0byB0aGUgcGxheW9mZnMgZnJvbSB0aGUgeWVhciBwcmlvci4gCkZSRUUgRE9XTkxPQUQgR0FNRSBKYXdzIFVubGVhc2hlZCAoUEMvUklQL0VORykgR1JBLiAKTW9zdCBlZGl0b3JzIHdhbnRlZCB0byBrbm93LCBldmVyeSBkYXksIGJlZm9yZSB0aGUgZmlyc3QgbW9ybmluZyBtZWV0aW5nOiAiV2hhdCBhcmUgeW91IGhlYXJpbmc/IFdoYXQgaGF2ZSB5b3UgZ290PyIuIApCYXNpY2FsbHksIHlvdXIgNjAgY2FyZCBkZWNrIGJyZWFrcyBkb3duIHRvIGhhdmluZywgb24gYXZlcmFnZSwgYWJvdXQgMjQgbGFuZHMgaW4gaXQsIHNvIHlvdSBoYXZlIHRvIHBpY2sgMzYgY2FyZHMgdG8gZmlsbCBvdXQgYSBkZWNrLgpOaWNlIE1hdGluLCB1biBzY25hcmlvIHJhbGlzdGUgc2UgZGVzc2luZS4gTGUgcmlzcXVlICJleGlzdGUgZXQgcG91ciBwb3V2b2lyIGRvbm5lciBjZXR0ZSBhZmZpcm1hdGlvbiwgb24gc2UgZm9uZGUgc3VyIGRlcyB2bmVtZW50cyBoaXN0b3JpcXVlcyBjb21tZSBjZWx1aSBxdWkgcydlc3QgcHJvZHVpdCBsZSAyMyBmdnJpZXIgMTg4Ny4gClRoZSBwcm9ibGVtIGlzIHN1cnZpdm9yIGJpYXMuIFRoZSBtYWpvcml0eSBvZiB3b21lbiB3aG8gSSBoYXZlIHBlcnNvbmFsbHkgY29tZSB0byBrbm93IGluIHJlYWwgbGlmZSBhcyBzZWxmIGlkZW50aWZpZWQgZmVtaW5pc3RzIGhhdmUgZ2VuZXJhbGx5IGhhZCBhdCBsZWFzdCBhIG5vdGljZWFibGUgbWlzYW5kcmlzdCB0aWx0IChhbmQgaW5kZWVkLCBJIG1heSBvbmx5IGhhdmUgY29tZSB0byBrbm93IHRoZXkgaWRlbnRpZmllZCBhcyBmZW1pbmlzdHMgYmVjYXVzZSB0aGV5IHdlcmUgc28gdm9jYWwvZXh0cmVtZSBhYm91dCBpdCkuCkR1ZSB0byB0aGUgbmF0dXJlIG9mIGhlciBzdGFyZG9tIGFuZCBoZXIgcmVsYXRpdmUgbGFjayBvZiBvbiBjb3VydCBzdWNjZXNzIGNvbXBhcmVkIHRvIGhlciBtb3JlIGNyZWRlbnRpYWxlZCBidXQgbGVzc2VyIGtub3duIG9wcG9uZW50cywgbWFueSBvbiB0aGUgdG91ciBkaXNtaXNzZWQgaGVyIGFiaWxpdHkuCkkgaGF2ZSBzaW5jZSBmb3VuZCBvdXQgdGhhdCB0aGUgcm9sZSB0aGF0IEkgd2FudCBpbnRlcm5hbGx5IGhhcyBjaGFuZ2VkIGEgYml0IGFuZCBpcyBub3cgZm9jdXNlZCBvbiB0aGUgcmVzcG9uc2liaWxpdGllcyB0aGF0IEkgYW0gdGhlIHdlYWtlc3QgYXQuCk9mIGNvdXJzZSB3ZSBkb24gaGF2ZSBhIGh1Z2Ugc2FtcGxlIHNpemUgYmVjYXVzZSB0aGVyZSBhcmUgb25seSBhIGZldyBoYW5kZnVscyBvZiBmYW1vdXMgcGVvcGxlIHdlIGtub3cgb2Ygd2hvIHNtb2tlIGxpa2UgdGhhdCBidXQgdGhlcmUgYXJlIHBsZW50eSBtb3JlIG5vbiBmYW1vdXMgcGVvcGxlIGluIHRoZSBzYW1lIGJvYXQgeWV0IHdlIGhhdmUuIG5vIGNhc2VzIHRoYXQgYW55b25lIGNhbiBzcGVhayBvZj8KSGVybWVzJyBzdG9yeSBpcyBjb21tb24gYW1vbmcgbmF0dXJvcGF0aGljIHBoeXNpY2lhbnMgYW5kIHRoZWlyIHBhdGllbnRzLiBUaGV5IGhhZCBhIGNocm9uaWMgYW5kIHBhaW5mdWwgY29uZGl0aW9uIHRoYXQgd2FzIGVpdGhlciBkaXNtaXNzZWQgYnkgZG9jdG9ycyBvciBvdmVybWVkaWNhdGVkLiBTZWFyY2hpbmcgZm9yIHJlbGllZiwgb3IgZXZlbiBqdXN0IHNvbWVvbmUgd2hvIHdvdWxkIGxpc3RlbiwgdGhleSBsb29rZWQgYmV5b25kIGNvbnZlbnRpb25hbCBXZXN0ZXJuIG1lZGljaW5lLiBXaGF0IHRoZXkgZm91bmQgd2FzIGEgd29ybGQgd2hlcmUgdGhlaXIgdW5kaWFnbm9zZWQgbWFsYWRpZXMgaGFkIGEgbmFtZSAgIGNocm9uaWMgTHltZSBkaXNlYXNlLCBhZHJlbmFsIGZhdGlndWUgICBhbmQgYSB3YXkgdG8gY3VyZSB0aGVtLCBuYXR1cmFsbHksIHdpdGggbGlmZXN0eWxlIGNoYW5nZXMsIGhlcmJhbCBzdXBwbGVtZW50cywgYWN1cHVuY3R1cmUsIHBoeXNpY2FsIG1hbmlwdWxhdGlvbnMgYW5kIGhvbWVvcGF0aGljIGVsaXhpcnMuCkhlIGZvdW5kIGhpcyByaHl0aG0uIEl0J3MgbGlrZSBiYXNrZXRiYWxsOiBZb3Ugc2hvb3QgYSBsaXR0bGUgYml0IGFuZCB5b3UncmUgb2ZmLCBhbmQgdGhlbiB5b3UgZmluZCB0aGF0IHJoeXRobSBhbmQgZ28gZnJvbSB0aGVyZS4iLiAKRnVydGhlciwgZnJvbSBvdGhlciBwb3N0cywgSSB1bmRlcnN0YW5kIEJlem9zIGlzIHdvcnRoIDEwMCBiaWxsaW9uIGRvbGxhcnMuIFNvLCBpZiBJIHdhbnRlZCB0byBlYXJuIDEwMCBiaWxsaW9uIGRvbGxhcnMsIEkgbmVlZCB0byBtYWtlICQzNjAsMDAwL2hvdXIgZm9yIDMxIHllYXJzIGFuZCAyNTEgZGF5cy4gRXZlcnkgcGVyc29uIGluIHRoaXMgdGhyZWFkIHNheWluZyB0aGF0IEJlem9zIGRlc2VydmVzIHRoYXQgbXVjaCBpcywgcXVpdGUgbGl0ZXJhbGx5LCBkZWx1c2lvbmFsLgpUaGUgbWFpbiBkZWNpc2lvbiBpbiB0aGlzIGdhbWUgY29tZXMgd2hlbiB0aGUgcGxheWVyIGZpcnN0IGxvb2tzIGF0IHRoZSBjYXJkcyBoZSBpcyBkZWFsdC4gCkFzIC91L2thZmthZXNxdWVfZHlzdG9waWEgc2FpZCwgZG9uIGVhdCBtb3JlIHVudGlsIHRoZSBuZXh0IGRheS4gSSBoYXZlIGFsc28gaGFkIHRoZW0ga2ljayBpbiBhZnRlciAzIGhvdXJzICgzIGhvdXJzIHNlZW1zIHRvIGJlIHdoZW4gSSBwZWFrKSBhbmQga25vY2sgbWUgb24gbXkgYXJzZS4gSSBhbHNvIHNlY29uZCB3aGF0IHRoZXkgc2FpZCBhYm91dCBpZiB5b3UgZG9uIGZlZWwgYW55dGhpbmcsIGVhdCBzb21ldGhpbmcuIEkgcmVhZCBlYXRpbmcgc29tZXRoaW5nIGZhdHR5IGhlbHBzLCBhbmQgc28gZmFyIGl0IGhhcyBmb3IgbWUuCldoZW4gbXkgbW9tIG1hcnJpZWQgbXkgc3RlcCBkYWQgaGUgb3duZWQgdGhpcyBmaXhlciB1cHBlciBob3VzZSBpbiBhbiB1cHNjYWxlIG5laWdoYm9yaG9vZCwgYnV0IGhlIG5ldmVyIGVuZGVkIHVwIGZpeGluZyBpdCB1cC4gClBhdGllbmNlOiBzdG9jayBtYXJrZXQgaXMgYSBubyBjYWxsZWQgc3RyaWtlIGdhbWUuIFlvdSBkb24gaGF2ZSB0byBzd2luZyBhdCBldmVyeXRoaW5nIHlvdSBjYW4gd2FpdCBmb3IgeW91ciBwaXRjaC4gCk5vdGhpbmcgdW5leHBlY3RlZCBpbiBteSB2aWV3LCBzaW5jZSBjeWNsaWNhbCBlY29ub21pYyByZWFsaXRpZXMgZ2VuZXJhbGx5IHRydW1wIG5hdmUgYW1iaXRpb24uIEkgYW0gYSBtb3JlIG9yIGxlc3MgY29udHJhcmlhbiBpbnZlc3Rvci4gVG9vIG1hbnkgc2lnbmFscyBmbGFzaGluZyBSRUQgZm9yIG1lIHRvIHB1dCBjb21wYW55IGNhcGl0YWwgYXQgcmlzayBvbiBtZWRpb2NyZSBkZWFscy4gCkluZGVlZCwgbWFueSBjb21lIGZvciB0aGF0IGV4cGVyaWVuY2UuIApBcyBhbiBleHRyYSBib251cywgdGhlIHJlZ2VuZXJhdGl2ZSBwcm9wZXJ0aWVzIG9mIHRoZXNlIGVzc2VudGlhbCBvaWxzIGltcHJvdmUgdGhlIGNvbmRpdGlvbiBhbmQgdG9uZSBvZiB0aGUgc2tpbi4gCkl0IGp1c3QgY2xhc3NpYyBkZWZsZWN0aW9uIGZyb20gYSBidW5jaCBvZiBwYXRoZXRpYyBzbGltZSBiYWxscyBhbmQgaXRzIHB1cmUsIGdvbGRlbiBlbnRlcnRhaW5tZW50IGF0IHRpbWVzLi4gCllvdSBkb2luZyBtb3N0IHRoaW5ncyByaWdodCB0byBtYXggdGlwcy4gU29tZSBkYXlzIGFyZSBqdXN0IGJldHRlciB0aGFuIG90aGVycy4gCkkgYWxzbyB3YW50IGhlciB0byBlbmpveSBoZXIgY2hpbGRob29kIGFzIG11Y2ggYXMgcG9zc2libGUuIApUaGUgYmVzdCB3YXkgdG8gZG91YmxlIHVwIGlzIHRvIGdldCBoZWFkcyB1cCB3aXRoIGp1c3Qgb25lIG90aGVyIHBsYXllciB3aXRoIGEgZGVjZW50IGhhbmQuIApOZXR3b3JrIGVxdWFscyBuZXQgd29ydGguIFN1cnJvdW5kIHlvdXJzZWxmIHdpdGggdGhlIHJpZ2h0IHBlb3BsZS4gCkNlcnRlcyBtYWlzIHF1YW5kIG9uIGEgZGFucyBzYSBiYW5xdWUgZGUgcmVjZXR0ZXMgcXVlbHF1ZXMgY2xhc3NpcXVlcyBkZSBiYXNlLCB0ZWwgbGUgZ3RlYXUgYXUgeWFvdXJ0LCBvbiBwZXV0IGxlcyBkY2xpbmVyICBsJ2ludHVpdGlvbi4gCkkgZHVubm8uIE15IHBvaW50IGlzIHRoYXQgYSAgMTUgYmFnIGlzIHdhYWFheSBtb3JlIHRoYW4geW91J2xsIGV2ZXIgbmVlZC4gTW9zdCBkYXlzIGEgMzAgYmFnIHdhcyBtb3JlIHRoYW4gaSBuZWVkZWQuLiAKQXMgSSBzYWlkLCBJIHNwZW50IGEgbG9uZyB0aW1lIGxlYWRpbmcgYSB0ZWFtIHRoYXQgdXNlZCBUeXBlU2NyaXB0IGV4dGVuc2l2ZWx5LCBiZWNhdXNlIGEgZmV3IG90aGVyIHNlbmlvciBkZXZzIEkgdHJ1c3QgYSBsb3Qgd2VyZSBwcmV0dHkgaGlnaCBvbiBpdCwgZXZlbiB0aG91Z2ggaXQgd29ya2VkIGFnYWluc3QgbXkgaW5zdGluY3RzLi4gCkRhcyBlaW5lICAgbHVmdCBqZXdlaWxzIG1vbnRhZ3MgYmlzIGRvbm5lcnN0YWdzIHVuZCBoYXQgZGVuIE5hbWVuIEhlYWQySGVhZCIuIEhpZXIgd2lyZCB1bSBlaW5lbiBHZXdpbm5wb3R0IGdlc3BpZWx0LCB3ZWxjaGVyIHVudGVyIGRlbiBUb3AgMjAgbiBhdWZnZXRlaWx0IHdpcmQuIApXaGF0IGV4YWN0bHkgaXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBhIHJlZyBhbmQgYSByZWMKRGVtZW50aWEgYW5kIEdsdWNvc2UgTGV2ZWxzClNoZSBzYWlkIHRoZSBWYW5jb3V2ZXIgZ3JvdXAgaXMgY29uc2lkZXJpbmcgc2Vla2luZyBpbnRlcnZlbmVyIHN0YXR1cyBpbiB0aGUgT250YXJpbyBjYXNlLgpBIGdyb3VwIG9mIHBvbGljZSBvZmZpY2VycyBzdGFuZCBhcm91bmQgaGVyLiAKSGUgY29tcGV0ZXMgaW4gSXJvbiBNZW4gY29tcGV0aXRpb25zIGFuZCB0cmlhdGhsb25zLCBhbmQgbGlrZXMgdG8gc2hvb3QgKGhlIHdhcywgZmFtb3VzbHksIG91dCBzaG9vdGluZyB0aGUgZGF5IHRoZSBHcmFuYWRhIGJpZCB3YXMgbGF1bmNoZWQpLiBBIGZyaWVuZCBvZiBQcmluY2UgQ2hhcmxlcywgaGUgYWxzbyBoYXMgc3Ryb25nIG9waW5pb25zIGFib3V0IGhvdyB0aGUgY291bnRyeSBpcyBydW4uIApCb3RoIFRvcm9udG8gR00gQWxpIEN1cnRpcyBhbmQgcHJlc2lkZW50IEJpbGwgTWFubmluZyB2aXNpdGVkIEJlbGdpdW0gbGFzdCB3ZWVrIGluIGEgYmlkIHRvIHByeSB0aGVpciB0YXJnZXQgbG9vc2UuClRoZXNlIHBva2VyIGZhbnMgYXJlIGxvb2tpbmcgZm9yIHRoZSBwb2tlciBwaWVjZXMgdGhleSBsb3ZlLCB0aGUgcG9rZXIgY29sbGVjdGlibGVzIHRoZXkgd2FudCB0byBiZSB3aXRoLiAKQmFrZXIgYXNrZWQgZm9yICQ1MDAsMDAwIGluIGV4Y2hhbmdlIGZvciBhIDUlIGVxdWl0eSBzdGFrZSBwbHVzIGEgNTAlIHJveWFsdHkgdW50aWwgdGhlIGluaXRpYWwgaW52ZXN0bWVudCBpcyByZXBhaWQuIEppbSBUcmVsaXZpbmcgdG9vayB0aGUgZGVhbCBidXQgYnVtcGVkIHRoZSByb3lhbHR5IHVwIHRvIDEwMCUgdW50aWwgdGhlIGludmVzdG1lbnQgd2FzIHJlcGFpZC4uIApJZiB5b3UgZ3V5cyBhcmUgZ29pbmcgdG8ga2VlcCBudWtpbmcgcG9zdHMgdGhhdCBhcmUganVzdCB0aG9zZSB0aGluZ3MgdGhlbiBnZXQgcmlkIG9mIHRoZSBwcm8gdGVhbSBmbGFpcnMgYW5kIHN0b3AgcG9zdGluZyBtYXRjaCByZXN1bHRzLCBvdGhlcndpc2UgeW91IGFyZSBoYXZpbmcgb25lIHdpdGhvdXQgdGhlIG90aGVyIHdoZW4geW91IHNob3VsZCBoYXZlIGJvdGggYW5kIG5vdCBoYXZpbmcgYm90aCBpcyBiZWluZyBoeXBvY3JpdGljYWwuIApUaGUgaW1hZ2Ugb2YgTkJBIGxlZ2VuZCBTaGFxdWlsbGUgTyB0b2VzLCBhcyBoZSByZWNlaXZlZCBhIHBlZGljdXJlIGluIDIwMTcsIHNob3VsZCBoYXZlIGNvbWUgd2l0aCBhIE5TRlcgd2FybmluZy4gSW4gMjAxNCwgZm9ybWVyIHNsYW0gZHVuayBjaGFtcGlvbiBOYXRlIFJvYmluc29uIGJhcmVkIGhpcyBzb3VsLCBhbmQgaGlzIGxpdHRsZSBwaWdnaWVzLCBhcyBoZSBwb3N0ZWQgYSBwaWN0dXJlIG9mIGhpbXNlbGYgb24gSW5zdGFncmFtIGF0IGEgbmFpbCBzaG9wIHdpdGggdGhlIGhhc2h0YWcgdGVhbVVnbHlGZWV0LiBBbmQgdGhyb3VnaCB0aGUgZGVjYWRlIG9mIGhpcyBvd24gcGxheWluZyBjYXJlZXIsIHNoYW1lIHByZXZlbnRlZCBXYXNoaW5ndG9uIFdpemFyZHMgY29hY2ggU2NvdHQgQnJvb2tzIGZyb20gcmVtb3ZpbmcgaGlzIHNob2VzIGluIGZyb250IG9mIGEgc3RyYW5nZXIuLiAKQW5kIG5vdCBzYXlpbmcgdGhlcmUgaXMgYW55dGhpbmcgd3Jvbmcgd2l0aCBtZW50aW9uaW5nIHRoZSBjaHVyY2hlcyBmaW5hbmNpYWxzIG9yIGJyaW5naW5nIGluIG1vbmV5IHRvIHRoZSBjaHVyY2guIApEZWFyIFdhbnQ6IEl0IGlzIG5ldmVyIGEgbWlzdGFrZSwgYW5kIG5ldmVyIHRvbyBsYXRlLCB0byBtYWtlIGFtZW5kcy4gRG9uIGF2b2lkIHRoaXMsIGp1c3QgYmVjYXVzZSBpdCBpcyBjaGFsbGVuZ2luZy4gRG9pbmcgc28gd2lsbCBmdXJ0aGVyIGV4cGFuZCB5b3VyIGNvbXBhc3Npb24gYW5kIGVhc2UgeW91ciBndWlsdC4KQm9ybiBhbmQgcmFpc2VkIGluIHJ1cmFsIEZyZWRlcmlja3Rvd24sIE9oaW8sIFBlcnJ5IHdhcyB0YXBwZWQgZm9yIGhlYXJ0dGhyb2Igc3RhdHVzIGFsb25nIHdpdGggSmFzb24gUHJpZXN0bGV5IG9uICJCZXZlcmx5IEhpbGxzIDkwMjEwLCIgd2hpY2ggcmFuIGZyb20gMTk5MCB0byAyMDAwLgpFaW4gdXJhbHRlciBTcHJ1Y2ggICBhYmVyIGltbWVyIG5vY2ggYWt0dWVsbCEgV2FubiBpbW1lciBTaWUgb25saW5lIFBva2VybiB3b2xsZW4sIHNlaSBlcyBrb3N0ZW5sb3Mgb2RlciB1bSBJaHIgaGFydCB2ZXJkaWVudGVzIEdlbGQgICBtYWNoZW4gU2llIHNpY2ggYmV3dXNzdCwgZGFzcyBTaWUgZGVyIEt1bmRlIHNpbmQuIFNvbGx0ZSBJaG5lbiBpcmdlbmR3YXMgbmljaHQgZ2VmYWxsZW4sIGRlciBTZXJ2aWNlIG5pY2h0IHp1IElocmVyIFp1ZnJpZWRlbmhlaXQgc2VpbiwgbmljaHQgZ2VuZ2VuZCBCZXdlZ3VuZyBhdWYgZGVuIFRpc2NoZW4gc2VpbiBvZGVyIGF1Y2ggbnVyIGRpZSBPcHRpayBkZXIgU29mdHdhcmUsIGRhbm4gZGVua2VuIFNpZSBpbW1lciBkYXJhbjogZGVyIG5jaHN0ZSBBbmJpZXRlciBpc3QgbnVyIGVpbmVuIEtsaWNrIGVudGZlcm50ISBVbmQgZXMgZ2lidCBtaXQgU2ljaGVyaGVpdCBlaW5lbiBQb2tlcmFuYmlldGVyIGRlciBkYXMgcmljaHRpZ2UgR2VzYW10cGFrZXQgZnIgU2llIGJlcmVpdGhsdCEuClNoZSBqdXN0IGtlcHQgcmVwZWF0aW5nIHRoYXQgb3ZlciBhbmQgb3Zlci4gSSB3b3JrIGF0IGEgc3BhIGFzIGFuIGVzdGhldGljaWFuLCBhbmQgd2FzaCBteSBoYW5kcyBiZWZvcmUgYW5kIGFmdGVyIGV2ZXJ5IGFwcG9pbnRtZW50IHNvIEkgZG9udCB0aGluayBpdCB0aGF0IHdlaXJkIG9yIGdyb3NzLj8gSXQgZmVsdCByZWFsbHkgZGVncmFkaW5nIGFuZCBJIHdpc2ggSSBoYWQgdGhlIGd1dHMgdG8gc2F5IHNvbWV0aGluZyBidXQgSSBkb250IHRoaW5rIEkgZXZlbiBrbm93IHdoYXQgdG8gc2F5LiAKSSBjYW5ub3QgZXZlbiByZWNhbGwgdGhlIG51bWJlciBvZiB0aW1lcyBoZSB3b3VsZCBjb21lIGluIHRoZSBob3VzZSBhbmQgd2Ugd291bGQgZHJpdmUgaW50byB0b3duIHRvIGxvb2sgYXQgc29tZW9uZSBjYXIuIEkgd2FzIGFsd2F5cyBhbm5veWVkIGJlY2F1c2Ugd2Ugd291bGQgYmUgdGhlcmUgZm9yIHdoYXQgZmVsdCBsaWtlIGZvcmV2ZXIsIGJ1dCBoZSB3b3VsZCBmaXggc2ltcGxlIHN0dWZmIGZvciBmcmVlIG9yIGZvciBoYXJkbHkgYW55IG1vbmV5IGlmIGl0IHdhcyBhbiBlbWVyZ2VuY3kuIEkgZGlkbiBhcHByZWNpYXRlIHRoYXQgdW50aWwgSSB3YXMgb2xkZXIgYW5kIG9uZSBkYXkgcmVhbGl6ZWQgdGhhdCB0aGVyZSBhIGdvb2QgY2hhbmNlIGhlIHNlcmlvdXNseSBoZWxwZWQgaHVuZHJlZHMgb2YgcGVvcGxlIGJ5IGp1c3QgZml4aW5nIGxpdHRsZSB0aGluZ3MgaW4gcGFya2luZyBsb3RzIG9yIG9uIHRoZSBzaWRlIG9mIHRoZSByb2FkLiAKU28gYWxsIG9mIHVzLCBJIHRoaW5rIGF0IGxlYXN0IGluIHJldHJvc3BlY3QsIHRoaW5rIG9mIGl0IGZvbmRseS4uIApUaGlzLiBJIGFsc28gY3JhZnRlZCBTaHVkZGVyd29jaywgdXNlZCBoaW0gYSBiaXQgYWZ0ZXIgdGhlIG5lcmYsIG5vdCBhcyBicm9rZW4gYnV0IHN0aWxsIHZlcnkgcGxheWFibGUuIEJ1dCBJIGxvdmVkIFNodWRkZXIgc2hhbWFuLiAKR29hbiBOdXRzICAgR2F1cmF2IE1vaGFuIG9mIEV2ZW50d2FsYSwgUmF2aSBHb2VsLCBTYWdhciBHb2dpYSBhbmQgR2F1cmF2IFZlcm1hIG9mIE5ldyBFcmEgU29sdXRpb24gUHZ0IEx0ZCAoTWVudG9yICAgRGhhdmFsIE11ZGdhbCksCk1hcmlqYWMgcmVzdGEsIHNhIHZpZSBkdXJhbnQsIG5vc3RhbGdpcXVlIGR1IHN1Y2NzIHF1J2lsIGF2YWl0IHJlbXBvcnQgZ3JjZSAgZGVzIHNjbmFyaW9zIGRlc3RpbnMgIG5vdHJlIGpldW5lc3NlLiBDJ2VzdCBjZSBxdWkgZXhwbGlxdWUgcXUnaWwgZW50cmVwcml0IGF2ZWMgSmVhbiBDaGFwZWxsZSwgYXV0cmUgbm9zdGFsZ2lxdWUgZGVzIGJhbmRlcyBkZXNzaW5lcyBwb3VyIGVuZmFudHMsIGxhIHJkaXRpb24gZGUgU0lUVElORyBCVUxMLCBlbiBhb3QgMTk3MC4gCkE6IEJhY2sgdG8gc2Nob29sIGlzIGFuIGV4Y2l0aW5nIHRpbWUgZm9yIG1hbnkgZmFtaWxpZXMuIENoaWxkcmVuIGxvb2sgZm9yd2FyZCB0byBzZWVpbmcgdGhlaXIgZnJpZW5kcyBhbmQgcGFyZW50cyBlYWdlcmx5IGF3YWl0IHRoZSByZXR1cm4gb2Ygbm9ybWFsIHJvdXRpbmVzLiBIb3dldmVyLCBhcyBtdWNoIGFzIGV2ZXJ5b25lIGxvb2tzIGZvcndhcmQgdG8gdGhlIGZ1biBhc3BlY3RzIG9mIGdldHRpbmcgYmFjayB0byBzY2hvb2wsIHRoZXJlIGlzIGFuIHVuZGVyY3VycmVudCBvZiB3b3JyeSB0aGF0IG1hbnkgcGFyZW50cyBmYWNlIGJhY2sgdG8gc2Nob29sIHNob3BwaW5nIGNhbiBiZSByZWFsbHkgZXhwZW5zaXZlLgpMb25nIGJhbGxzIHZzIGJhY2sgcGFzc2VzKS4gCkNsYXkgSG9uZXljdXR0LCBhIDIzIHllYXIgb2xkIGdyYWR1YXRlIHN0dWRlbnQgYXQgVGV4YXMgQSBKYW1lcyBIdWxpbmcsIGEgMzEgeWVhciBvbGQgcmV0YWlsIGFzc29jaWF0ZSBjdXJyZW50bHkgbGl2aW5nIGluIFdpY2hpdGEgRmFsbHMsIFRleGFzCk9mIGNvdXJzZSwgTXIuIExlZSBtb3ZpZSBpcyBhIHNhdGlyZSAodW5saWtlIEZveCBUViB3aGljaCBpcyBwcm9kdWNpbmcgYSBtaW5zdHJlbCBzaG93IHdpdGhvdXQgaXJvbmljIGRpc3RhbmNlKS4gCk15ICJmb29kIiBpcyBvbmx5IDE4b3ogb24gVHJpcCBCIGluc3RlYWQgb2YgMzBveiBvbiBUcmlwIEEuIApPdXQgb2YgY3VyaW9zaXR5LCB3aHkgYW4gZW1waGFzaXMgb24gdmVyYmFsIHNvIG11Y2g/IEJlY2F1c2UgdGhlcmUgb3RoZXIgbWV0aG9kcyBvZiBjb21tdW5pY2F0aW9uIHRoYXQgYXJlIGp1c3QgYXMgdXNlZnVsIGFuZCBtdWNoIGVhc2llciBmb3IgdGhlIEF1dGlzdGljIHBlcnNvbiB0byBoYW5kbGUuCkFuZCB3aGF0IHRoZXkgcHV0IGluIGlzIGJlaW5nIGZlZCBvdXQgYXQgYSBzdGVhZHkgcmF0ZSBhbHNvLiBUaGVyZSBpcyB1bmxpa2VseSB0byBiZSB0aG91c2FuZHMgdGhhdCBjYW4gcGF5IG91dC4gCkkgY29tcGFyZWQgdGhlIHByaWNlIG9mIG9yZ2FuaWMgYW5kIHJlZ3VsYXIgaXRlbXMgYXQgV2hvbGUgRm9vZHMgICBoZXJlIHdoYXQgSSBmb3VuZDggdHJ1dGhzIGFib3V0IG1vbmV5IHRoYXQgY291bGQgY2hhbmdlIHlvdXIgbGlmZUhvdyB5b3Ugc2hvdWxkIGFuZCBzaG91bGRuIHNwZW5kIG1vbmV5IGluIHlvdXIgMjBzQnJpbmcgYSBjYWxjdWxhdG9yU2V0IGEgdGFyZ2V0IGJ1ZGdldCBmb3IgZWFjaCB0cmlwIHRvIHRoZSBzdG9yZSwgYW5kIHRoZW4gdG8gaGVscCBzdGljayB0byBpdCwgYnJpbmcgYSBjYWxjdWxhdG9yIGFsb25nIG9yIHlvdXIgc21hcnRwaG9uZSBhbmQgdGFsbHkgdXAgeW91ciBleHBlbnNlcyBhcyB5b3Ugc2hvcC4KSGUgdGhlbiBzYXQgYmFjayBkb3duIGFsbCB3cmFwcGVkIHVwIGFuZCBnb25lIGJhY2sgdG8gd29ya2luZyBhcyBpZiBoZSB3YXNuIG9idmlvdXNseSBhYm91dCB0byBsZWF2ZS4gKE1heWJlIEkgc2hvdWxkIHRlbGwgaGltIHRoYXQgaGlzIGJ1cyBzdG9wIGlzIG9uIHRoZSBkcml2ZSB0byBteSBkYXVnaHRlciBkYXljYXJlIGFuZCBJIHNlZSBoaW0gdGhlcmUgZXZlcnkgYWZ0ZXJub29uIG9uIHRoZSB3YXkgdG8gcGljayBoZXIgdXAgc28gSSBrbm93IGhlIG91dCBvZiB0aGUgb2ZmaWNlIGFzIHNvb24gYXMgSSBsZWF2ZS4pLiAKQWR2YW50YWdlcyBhbmQgRGlzYWR2YW50YWdlcyBRdWFsaXRhdGl2ZSBjYXJlZXIgYXNzZXNzbWVudHMgYWRkIGEgcGVyc29uYWwgZWxlbWVudCB0byB0aGUgY291bnNlbGluZyBtaXgsIGFsbG93aW5nIGEgY291bnNlbG9yIHRvIHRha2UgeW91ciBzZWxmIGF3YXJlbmVzcyBpbnRvIGNvbnNpZGVyYXRpb24uIFRoaXMgaXMgdXNlZnVsIGZvciBwZW9wbGUgd2hvIGFscmVhZHkgaGF2ZSBleHBlcmllbmNlIGFuZCBrbm93bGVkZ2Ugb2YgYSB3b3JrIGVudmlyb25tZW50LiBTZWxmIGF3YXJlbmVzcyBpcyBub3QgYWx3YXlzIG9iamVjdGl2ZSwgaG93ZXZlciwgYW5kIHRoZSBpbmRpdmlkdWFsJ3MgdmlldyBvZiB3aGF0IGhlIGNhbiBvciBjYW5ub3QgZG8gbWF5IG5vdCBiZSBhY2N1cmF0ZS4gClRoZXJlIGlzIG9uZSBvdGhlciB0aGluZyBEYW4gU3VzdGFyIGlzIHB1cnN1aW5nIHRoYXQgaGFzIHNvIGZhciBlbHVkZWQgaGltOiBhIHBhcmRvbi4gCkkgYmxhY2sgYW5kIGFjY2VwdCBjcml0aWNpc20gb3Blbmx5LiAKSW4gaGV0IGRvcnBqZSBTemlucGV0cmkga29uIGplIGhldCBncm9vdHN0ZSBib2VrIHRlciB3ZXJlbGQgZ2FhbiBiZWtpamtlbiwgZGF0IHNsb2VnZW4gd2UgbWFhciBvdmVyLCBtYWFyIGRlIG9tZ2V2aW5nIHdhcyB3ZWVyIGhlZWwgbW9vaSBtZXQgdmVlbCBibG9lbWVuLiAKU2lnaHQ6IFdlIHJlY2VudGx5IGhhZCBhIG5ldyBtb3ZpZSB0aGVhdGVyIHB1dCBpbiwgZnJlZSByZWZpbGxzLCBjaGVhcGVyIHRpY2tldHMsIGFuZCByZWNsaW5pbmcgc2VhdHMuIEl0cyBwcmV0dHkgYXdlc29tZSBhbmQgQ29keSBmYXZvcml0ZS4gSSBnb3QgYSAkMTAgZ2lmdCBjYXJkIHdoaWNoIHNob3VsZCBjb3ZlciBhIG1vdmllIGFuZCBwb3Bjb3JuIG9yIGRyaW5rLiBJdCB3aWxsIGRlZmluaXRlbHkgZ2V0IHVzZWQuCkFudCBwb3B1bGF0aW9ucyBhcmUgZ2VuZXJhbGx5IGtlcHQgaW4gY2hlY2sgYnkgb3RoZXIgaW5zZWN0cywgZnVuZ2ksIGFuZCBpbXBvcnRhbnRseSBvdGhlciBhbnRzLiAKQmVjYXVzZSB0aGF0IGlzIHNvbWV0aGluZyB0aGF0IHNpbXBseSBkb2VzIG5vdCBoYXBwZW4gaW4gb3VyIGV4cGVyaWVuY2UuIApCdXQgb24gdGhlIG90aGVyIHNpZGUgd2UgaGF2ZSBUSiBkaWxsYXNoYXcsIGtpZHMgZ290IHF1aWNrIGhhbmRzLCBnb29kIGVuZXJneSwgc3RhbWluYSwgbW92ZW1lbnQsIGhlIHNob3dlZCBhbiBhd2Vzb21lIHBlcmZvcm1hbmNlIGFnYWluc3QgQ29keSBHYXJicmFuZHQgYW5kIGhhcyBhIGdyZWF0IHBoeXNpYy4gRXZlcnlvbmUncyB0YWxraW5nIGFib3V0IGhpbSBoYXZpbmcgd2VpZ2h0IGN1dCBpc3N1ZXMgZm9yIHRoaXMgZmlnaHQgYnV0IGhpcyBib2R5IHR5cGUgaXMgbmF0dXJhbGx5IHRoaXMgc21hbGwuCklmIHRoYXQgaGFwcGVucywgeW91IG5lZWQgdG8gbW92ZSBET1dOIHN0YWtlcyBJTU1FRElBVEVMWS4gRG8gbm90IHBhc3MgZ28uIApZb3UgZG8gbm90IGhhdmUgdG8gYmUgcmVhbGx5IHNwZWNpZmljIGp1c3Qgc3RhdGUgc2hlIHRyZWF0ZWQgeW91IGJhZGx5IGFuZCB5b3UgZG8gbm90IHJlY29tbWVuZCBoZXIgdG8gYW55b25lIGVsc2UuIApMYWR5bGF0dGVtb3RpZiB1ClJhdmlkOiBZZXMsIEkgY29tcGxldGVseSBhZ3JlZS4gClJ1bnNvbnBlYW51dGJ1dHRlciAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvClNvbGRpZXJzIGFsc28gZW5kIHRoZSB2aWRlbyBieSBhc3N1cmluZyB1cyB0aGF0ICJubyBvbmUgaXMgdGhpcyB2aWRlbyBpcyBnYXkuIFRoYXQgd2Uga25vdyBvZi4iIG9mIGNvdXJzZSB0aGV5IG11c3QsIGJlY2F1c2Ugbm8gb25lIGlzIGFsbG93ZWQgdG8gYmUgb3Blbmx5IGdheSB1bmRlciB0aGUgREFEVCBwb2xpY3kuLiAKTWVhbndoaWxlLCBzaW5jZSBDYWVzYXJzIHRvb2sgb3ZlciB0aGUgV1NPUCwgaXQgaGFzIGJlZW4gc3RhZ2VkIGF0IHRoZSBSaW8gQWxsIFN1aXRlIEhvdGVsLCB3aGljaCBpcyBvZmYgc3RyaXAsIGFuZCBpdCBoYXMgZ3Jvd24gb3V0IG9mIGFsbCByZWNvZ25pdGlvbi4gVGhlIDIwMTYgcmVuZXdhbCBjb250YWlucyBuZWFybHkgNzAgZGlmZmVyZW50IGV2ZW50cyBvZiBldmVyeSBzaGFwZSwgc2l6ZSwgYnV5IGluLCBhbmQgZm9ybWF0LiAKRnVybGVzcyAgIDM2IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVHJhaW5pbmcgZm9yIG1vYmlsaXR5LCBoZSBiZWxpZXZlcywgaGFzIHVzaGVyZWQgaW4gYSBuZXcgaHVtYW4gcGVyZm9ybWFuY2UgZXBvY2guICJFYXRpbmcsIHNsZWVwaW5nLCBhbmQgbW92aW5nIGNvcnJlY3RseSBhcmUgbm90IGdpbW1pY2tzIG9yIGZhZHMsIiBoZSB3cml0ZXMuIApVbmUgZm9pcyBwYXJ2ZW51ZXMgIGwgYWR1bHRlLCBsZXMgYnJhbmNoZXMgZHUgY2huZSBzIGVuIHZlbnRhaWwuIE5vdWV1c2VzIGV0IHRycyB2aWdvdXJldXNlcywgZWxsZXMgc3VybW9udGVudCB1biB0cm9uYyBkb250IGwgYnJ1biBncmlzdHJlIHNlIGNyZXZhc3NlIGF1IGZ1ciBldCAgbWVzdXJlIGRlIHByb2ZvbmRzIHNpbGxvbnMuIApJbiBib3RoIHRoZSBwYXN0IGFuZCBwcmVzZW50LCBjYXNpbm8gZGV2ZWxvcGVycyBtYWtlIGNsYWltcyBhYm91dCB0aGUgZW1wbG95bWVudCBhbmQgcHJvc3Blcml0eSB0aGF0IHdpbGwgYmVuZWZpdCB0aGUgc3Vycm91bmRpbmcgY29tbXVuaXR5LiBCdXQgbm8gbWF0dGVyIGhvdyB0aGV5IGRyZXNzIHVwIGEgY2FzaW5vLCBpdCBleGlzdHMgZm9yIG9uZSBwdXJwb3NlIG9ubHk6IHRvIHNlcGFyYXRlIGRvbGxhcnMgZnJvbSB0aGUgcG9ja2V0cyBvZiB0aGUgY3VzdG9tZXIuIApWSUkgYW5kIGVuZHMgdXAgaGVyZSBpbiBFcC4gSVguIFRoaXMgcGVyc29uIGlzIHRoZSBiYWQgZ3V5IGFuZCBlbmRzIHVwIHRoZSBnb29kIGd1eSBieSB0aGUgZW5kLiAKSXQncyBsaXRlcmFsbHkgeWVsbG93IGpvdXJuYWxpc20uIAoyLiBJdCBpcyBhbHNvIGN1cnJlbnRseSBydW1vcmVkIHRoYXQgdGhlIGJlc3QgdmlkZW8gcG9rZXIgZ2FtZSBtYWNoaW5lcyBhcmUgaW4gdGhlIFBhbG1zIGhvdGVsLgpJIHRvb2sgYSBzaG9ydCBwb3NpdGlvbiBvbiB0aGUgbG9uZyBib25kIGFuZCBteSByZXZlbnVlIHN0cmVhbSBoYXMgaXRzIG93biBjYXNoIGZsb3cuIApJZiBhIGR1ZGUgd2VhcnMgbG9uZyBib3hlcnMgSSBtb3ZlIHRoZW0gdXAgYSBiaXQgYnV0IG5vdCBtdWNoLiBJZiB5b3Ugd2FudGluZyBhbG90IG9mIHRoaWdoIGFuZCBoaXAgd29yayBhbmQgeW91IGxlYXZlIGJveGVycyBvbiB5b3Uga2luZGEgc2VuZGluZyBhIG1peGVkIG1lc3NhZ2UgdG8gdGhlIHRoZXJhcGlzdC4gVGhhdCB3aGVuIHlvdSBnZXQgYnJ1aXNpbmcgYW5kIHN3ZWxsaW5nLiAKSSBmaW5kIHRoYXQganVzdCBmb2N1c2luZyBvbiB5b3VyIGJyZWF0aGluZywgd2l0aG91dCBjb3VudGluZyBpcyBpbnZhbHVhYmxlLiBPZiBjb3Vyc2UsIGl0IHRha2VzIHRpbWUuIEZvciBhIG1vcmUgaW4gZGVwdGggZXhwbGFuYXRpb24sIHlvdSBjYW4gZmluZCBpdCBvbiBzb21lIHNpdGUuLiAKVEhFIDE1IEJFU1QgVGhpbmdzIHRvIERvIGluIFN0CkluIHRoZSBmb3JtZXIsIEh1cHBlcnQgcGxheXMgTmF0aGFsaWUgQ2hhemVhdXgsIGEgaGlnaCBzY2hvb2wgcGhpbG9zb3BoeSBwcm9mZXNzb3Igd2hvc2UgaHVzYmFuZCBvZiAyNSB5ZWFycywgYSBmZWxsb3cgcGVkYWdvZ3VlLCBhYnJ1cHRseSBhbm5vdW5jZXMgdGhhdCBoZSdzIGxlYXZpbmcgaGVyIGZvciBhbm90aGVyIHdvbWFuOyBpbiB0aGUgbGF0dGVyLCBzaGUgaXMgTWljaGxlIExlYmxhbmMsIHRoZSBDRU8gb2YgYSB2aWRlbyBnYW1lIGNvbXBhbnkgd2hvIGdldHMgcmV2ZW5nZSAgIHNvcnQgb2YgICBvbiB0aGUgbWFuIHdobyByYXBlcyBoZXIgaW4gdGhlIGZpbG0ncyBvcGVuaW5nIHNlY29uZHMuLiAKSSBob25lc3RseSBkb24ga25vdyBob3cgdG8gZXhwbGFpbiBpdCwgYnV0IGl0IHdhcyBkZWZpbml0ZWx5IGEgd2VpcmQgdGltZSBmb3IgbWUuLiAKTWVyY1dpdGhhTW91c2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KV2VsbCBJIHRoaW5rIGlmIHRoZSBnb2FsIGlzIHRvIGdldCBwZW9wbGUgdG8gcXVlc3Rpb24gYWx0IHJpZ2h0IGluZG9jdHJpbmF0aW9uIHBvaW50cyBhbmQvb3Igc3RhcnQgdG8gc2VlIHRoZSB2aXNpYmxlIGZsYXdzIGluIHRoZWlyIHRhbGtpbmcgcG9pbnRzLCB0aGVuIGl0IGNlcnRhaW5seSBlYXNpZXIgdG8gZG8gdGhhdCB1c2luZyBtZWRpYSBvciBtZWRpYSBhZGphY2VudCBleGFtcGxlcywgcmlnaHQ/IEJlY2F1c2UgZ29vZCBkaWFsb2cgdGVuZHMgdG8gY29tZSBmcm9tIGNvbW1vbiBncm91bmQsIGFuZCBhdCB0aGUgdmVyeSBsZWFzdCBJIGNhbiBleHBlY3QgYW5pbWUgcmlnaHQgb3IgZ2FtZXJzIHRvIHByb2JhYmx5IGhhdmUgb3ZlcmxhcCB3aXRoIG15IG93biBpbnRlcmVzdHMsIGJ1dCBpZiBJIHN0YXJ0IGdvaW5nIGhhcmQgb24gQW1lcmljYW4gaW1wZXJpYWxpc20gSSBtaWdodCBsb3NlIHRoZW0gYXQgdGhlIG9wZW5pbmcgc2VudGVuY2UuClRoZSBHcmVlbiBWYWxsZXkgUmFuY2ggUmVzb3J0IG9mZmVycyB2aXNpdG9ycyBhIGxhcmdlIGNhc2lubyB3aXRoIG1vcmUgdGhhbiAyLDIwMCBzbG90IG1hY2hpbmVzLCA1NSB0YWJsZXMgZ2FtZXMsIGEgcG9rZXIgcm9vbSBhbmQgcmFjZSBhbmQgc3BvcnRzIGJvb2suIApJIGxlYW4gZm9yd2FyZCB0b28gbXVjaCAod2hpY2ggSSBhbSB3ZWxsIGF3YXJlIG9mKSBhbmQgdGhlIGRlcHRoIGlzbiBncmVhdCAoYmFyZWx5IDkwIGRlZ3JlZXMgYnV0IEkgZ2V0dGluZyB0aGVyZSEpLiAKSXQncyBub3QgcXVpdGUgdGhlIElsbHVtaW5hdGksIGJ1dCB0aGVyZSBpcyBlbGl0ZSBpbm5lciBjaXJjbGUgaGVyZSBhdCB0aGUgTWFzdGVycyBvZiBNYXJrZXRpbmcsIGFuZCBub3QgZXZlcnlvbmUgaXMgaW52aXRlZCBpbi4gVGhlIEFOQSBDTU8gTWFzdGVycyBDaXJjbGUgd2FzIGVzdGFibGlzaGVkIHR3byB5ZWFycyBhZ28gYnkgdGhlIEFOQSwgYnV0IGlzIG9ubHkgbm93IGV4cGVyaWVuY2luZyBhIHJldml2YWwgaW4gYXR0ZW50aW9uLiAKQ2hhbmdpbmcgeW91ciBpbWFnZTogQnkgY2hhbmdpbmcgeW91ciBpbWFnZSB5b3Ugd2lsbCBjb21wbGV0ZWx5IHRocm93IHlvdXIgb3Bwb25lbnRzIG9mZiBndWFyZCBhbmQgc2V0IHRoZW0gdXAgdG8gbG9zZSBiaWcgcG90cyBpbiB0aGUgZnV0dXJlLiBJZiB5b3UgZW50ZXIgYSBnYW1lIGFuZCBzaG93ZG93biBhIGZldyBsb29zZSBoYW5kcyBhbmQgZG8gYSBmZXcgc3R1cGlkIHRoaW5ncyB5b3VyIG9wcG9uZW50cyB3aWxsIHRoaW5rIHlvdSBhcmUgYmVpbmcgYSBjb21wbGV0ZSBkb25rLiBBZnRlciB0aGV5IHRoaW5rIHlvdSBhcmUgcGxheWluZyBsb29zZSBqdXN0IHRpZ2h0ZW4gdXAgc2xpZ2h0bHkgYW5kIHdoZW4geW91IGdldCBhIHByZW1pdW0gaGFuZCB5b3Ugd2lsbCBiZSBtdWNoIG1vcmUgbGlrZWx5IHRvIGdldCBwYWlkIG9mZiBiaWcuClRoYXQgbm90IGNvdW50aW5nIGNyZWF0dXJlcyBsaWtlIGNoYWlud2hpcmxlci9jaHVwYWNhYnJhLiAKSG93ZXZlciwgSSB3b3VsZCBwcm9wb3NlIHRoYXQgdG8gdGhlIGV4dGVudCB0aGF0IEpvdXJuYWxpc20gZG9lcyBpbiBmYWN0IGhhdmUgYSBwcm9ibGVtLCB0aGF0IHByb2JsZW0gaXMgc2ltcGx5IGFuIGV4dGVuc2lvbiBvZiB0aGUgbWFya2V0IGZhaWx1cmVzIG9mIENhcGl0YWxpc20uIApTbyBiYXNpY2FsbHkgd2hlbiBoZSBnZXRzIG91dCBvZiBzdGF0ZSBwcmlzb24sIGhlIGdvaW5nIHJpZ2h0IGJhY2sgdG8gYSBkaWZmZXJlbnQgcHJpc29uIGZvciB0aG9zZSBuZXh0IDMgY29uc2VjdXRpdmUgdGltZXMgaGUgaGFzIHRvIHNlcnZlLiAKVGhlcmUgYXJlIHNvbWUgc2VyaW91c2x5IGNvbXBsaWNhdGVkIHF1ZXN0aW9ucyBpbiB0aGVyZS4gVGhlIGZhY3QgdGhhdCB5b3UgYXJlIGFza2luZyB0aGVzZSBxdWVzdGlvbnMgcHV0cyB5b3UgdXAgdGhlcmUgYWxyZWFkeS4gSWYgeW91IGhhdmVudCBhbHJlYWR5LCBJIHdvdWxkIGxvb2sgdXAgdGhhdCBCdWRkaGlzdCBkZXNjcmlwdGlvbi4gClN1cmUsIGFsbCB0ZW4gZm9vZHMgY291bGQgYmUgZGVyaXZlZCBmcm9tIGFuaW1hbHMgKGJlZWYsIGJ1ZmZhbG8sIGJpc29uLCBlbGssIHZlbmlzb24sIGxhbWIsIG9zdHJpY2gsIHR1cmtleSwgZmlzaCwgYW5kIGVnZ3MpIGJ1dCB0aGF0IHdvdWxkIGJlIGJvcmluZyBhbmQgdW5wcmFjdGljYWwgZm9yIG1hbnkgb2YgeW91IHdobyBhcmVuJ3QgYXZpZCB3aWxkIGdhbWUgaHVudGVycy4gCklmIHNoZSdzIHBlcnNpc3RlbnQsIHNodXQuIEhlci4gRG93bi4gIk5vIiBpcyBhIGNvbXBsZXRlIHNlbnRlbmNlIGlmIHNoZSBhc2tzIGlmIHlvdSdyZSBnb2luZyB0byBkeWUgeW91ciBoYWlyLiBHcmV5IHJvY2tpbmcgd2lsbCBkbyB5b3Ugd2VsbC4KTXkgZmlyc3QgMyB3ZWVrcyBhcmUgImFjY3VtdWxhdGlvbiIuIE15IGR5bmFtaWNzIGFyZSBsaWdodCAoNTUgNjUlIHN0cmFpZ2h0IHdlaWdodCBvbmx5KSBmb3IgaGlnaCB2b2x1bWUsIGFib3V0IDQwIDcwIHJlcHMgZm9yIGJlbmNoIGFuZCBzcXVhdCwgMTUgMjUgZm9yIGRlYWRzLiBJIGxpa2Ugc2V0cyBpZiA1IGluIHRoaXMgYmxvY2ssIGFuZCBzdGFydCBhdCB0aGUgbG93ZXN0IHZvbHVtZSBhbmQgd2VpZ2h0IGFuZCBwcm9ncmVzcyB0byB0aGUgaGlnaGVzdCB2b2x1bWUgYW5kIGhpZ2hlc3Qgd2VpZ2h0IHRyeWluZyB0byBrZWVwIHJlc3RzIGFzIHNob3J0IGFzIHBvc3NpYmxlLiAKSGVpbGlnc0JsZWNobGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkl0IGlzIHNhaWQgdGhhdCB3aGVuIHBsYXlpbmcgcG9rZXIgaWYgeW91IGNhbid0IGZpZ3VyZSBvdXQgd2hvIHRoZSBtYXJrIGlzLCBpdCBpcyBwcm9iYWJseSB5b3UuIElmIHlvdSBzaG93IHVwIHRvIGEgcG9rZXIgZ2FtZSB3aXRoIHlvdXIgYmVzdCBwYWlyIG9mIHBva2VyIGRpY2UgaXQgaXMgZmFpcmx5IGNlcnRhaW4gdGhvc2Ugd2hvIHlvdSBhcmUgcGxheWluZyBwb2tlciB3aXRoIHdpbGwga25vdyB3aG8gdGhlIG1hcmsgaXMuIApQYXJ0YWdleiB2aWEgRmFjZWJvb2sgKEZlbnRyZSBtb2RhbGUpUGFydGFnZXogdmlhIFR3aXR0ZXIgKEZlbnRyZSBtb2RhbGUpUGFydGFnZXogdmlhIExpbmtlZGluIChGZW50cmUgbW9kYWxlKVBhcnRhZ2V6IHBhciBjb3VycmllbCAoRmVudHJlIG1vZGFsZSlBY3RpdmVyIGwgZCBkdSBuYXZpZ2F0ZXVyCkFkdm8gQ0FUIHVzRGlhYm9saSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KUHJvcG9uZW50cyBvZiB0aGUgZ2FtZSBzdGF0ZSB0aGF0IHRoZSBlZmZlY3RzIG9mIHRoZSB0ZWxldmlzZWQgdG91cm5hbWVudHMgdG93YXJkIHNvY2lldHkgYXJlIHBvc2l0aXZlLiBFbm91Z2ggdG8gd2hlcmUgYSBwZXJzb24gY2FuIGZpbmQgImZhbWlseSBuaWdodHMiIGZvciBwbGF5aW5nIGJlaW5nIG9mZmVyZWQgYnkgb3JnYW5pemF0aW9ucyBwcm9tb3RpbmcgdGhlIGdhbWUuIE1hbnkgb2YgdGhlIHByZXNlbnQgZGF5IGNoYW1waW9ucyBoYXZlIHN0YXRlZCB0aGF0IHRoZXkgbGVhcm5lZCBob3cgdG8gcGxheSBmcm9tIGFnZXMgYXMgeW91bmcgYXMgNSBmcm9tIHRoZWlyIHBhcmVudHMgb3IgcmVsYXRpdmVzIGF0IGhvbWUuIEtpZHMgYW5kIHRlZW5hZ2VycyB3aXRoIGd1aWRhbmNlIGNhbiBsZWFybiBob3cgdG8gcGxhbiBzdHJhdGVneSwgbWFuYWdlIG1vbmV5LCBzb2x2ZSBjb21wbGV4IHByb2JsZW1zIGFuZCB1bmRlcnN0YW5kIHRoZSBwc3ljaG9sb2d5IG9mIGh1bWFuIGJlaW5ncy4gQnV0IGV2ZXJ5IGNvaW4gaGFzIHR3byBzaWRlcy4gQSBjb25jZXJuZWQgbnVtYmVyIG9mIHBlb3BsZSBhcmUgdm9pY2luZyB0aGUgb3BpbmlvbiB0aGF0IHRoZSBjcmVhdGlvbiBvZiBnYW1ibGluZyBhZGRpY3RzIGlzIHRha2luZyBwbGFjZS4gTW9yZSBhbmQgbW9yZSBsYW5kIGJhc2VkIGFuZCBvbmxpbmUgY2FzaW5vcyBhcmUgdGFraW5nIHRoaXMgc2VyaW91c2x5IGJ5IG9mZmVyaW5nIGhlbHAgZm9yIGdhbWJsaW5nIGFkZGljdGlvbiBhbmQgdGhlIGNyZWF0aW9uIG9mIG5ldyBwcm9ncmFtcyBmb3IgYXNzaXN0YW5jZSBmb3IgdGhvc2Ugd2hvIGhhdmUgcHJvYmxlbSBpc3N1ZXMuIEhhdmluZyBoZWxwIGF2YWlsYWJsZSBmb3IgcGxheWVycyB3aWxsIGJlY29tZSBpbmNyZWFzaW5nbHkgaW1wb3J0YW50IGFzIHRoZSBlbnRodXNpYXNtIG9mIHRoZSBnYW1lIGdvZXMgZm9yd2FyZC4KSSB0cnlpbmcgdG8gZmluZCB0aGUgaHVtb3IgaW4gaXQgbm93LCBidXQgSSBzdGlsbCB3ZWlyZGVkIG91dC4uIApUbyB3aXJlIG1vbmV5PyBmZWVzR292ZXJubWVudCB3ZWxmYXJlLCBpbiB0aGUgZm9ybSBvZiBUQVJQLCBpcyBzdWNoIGFuIG9idmlvdXMgY29uIGdhbWUgdGhhdCBldmVuIG1pZGRsZSBvZiAgdGhlIHJvYWQsIHBybyBidXNpbmVzcyBzb3J0cyBhcmUgZ2V0dGluZyBhbmdyeS4gQWxsLCB0aGUgYmFua3MgZ290IGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gdmVyeSBsb3cgaW50ZXJlc3QgbG9hbnMgdGhhdCB0aGV5IHRoZW4gdHVybmVkIGFyb3VuZCBhbmQgbGVudCBiYWNrIHRvIHRheCBwYXllcnMgYXQgaGlnaCBpbnRlcmVzdCByYXRlcyAgb24gY3JlZGl0IGNhcmRzLCBob21lIGxvYW5zLCBldGMuICBhbGwgdGhlIHdoaWxlIHJlZnVzaW5nIHRvIHJld2FyZCB1cyBmb3Igc2F2aW5nIG1vbmV5IGJ5IGtlZXBpbmcgdGhlIGludGVyZXN0IHJhdGVzIHRoZXkgd2lsbGluZyB0byBwYXkgb24gc2F2aW5ncyBhY2NvdW50cyBhbmQgQ0RzIGF0IGEgbGl0dGxlIG92ZXIgMSVTYWRseSwgYmVjYXVzZSBvdXIgZ292ZXJubWVudCBnZW5lcmFsbHkgbGVnaXNsYXRpb24gdG8gcGxlYXNlIHRoZSBoaWdoZXN0IGJpZGRlciwgV2FsbCBTdHJlZXQgaXMgY3VycmVudGx5IHNwZW5kaW5nIGVub3VnaCBtb25leSBvbiBsb2JieWluZyBDb25ncmVzcyB0byBraWxsIGFueSBhbmQgYWxsIGJhbmtpbmcgcmVmb3JtLiAKSXMgdGhlcmUgYW55IGNoZWF0cyBmb3IgcG9rZXIgcGFsYWNlIG9uIE15U3BhY2UKQm9rb0J1Y2tldCAgMSBwb2ludCAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCkFsbW9zdCBzaW11bHRhbmVvdXNseSBmaXZlIGRldGVjdGl2ZXMgZGVzY2VuZCBvbnRvIERveWxlIHMuIApKQjogTHVjIEJvdXJkb24gaW50byB0aGUgbGluZXVwIHRvbmlnaHQuIFNvIGlzIERhbmEgTXVyenluIGFuZCBSb2JlcnQgTm9yZG1hcmsuCkl0J3MgYSBiaXQgbGlrZSB0cnlpbmcgdG8gaWRlbnRpZnkgc29tZW9uZSBieSB0aGUgY29sb3Igb2YgdGhlaXJjYXIsIHRoZWlyIGhvdXNlIGFuZCB0aGVpciBkb2cgYW5kIHNvbWUgb3RoZXIgYmVsb25naW5ncy4gLgpBcyBhIHJlc3VsdCwgdGhlIENhbnVja3MgYXJlIG5vdyBtb3JlIG9yIGxlc3MgaW4gdGhlIHNhbWUgcG9zaXRpb24gdGhlIEZsYW1lcyB3ZXJlIGZvdXIgeWVhcnMgYWdvLiBXZSBjYW4gYXJndWUgYWJvdXQgdGhlIGRlY2lzaW9ucyB3aGljaCBicm91Z2h0IHRoZW0gdG8gdGhpcyBwbGFjZSBhbmQgYWNrbm93bGVkZ2UgRWxpYXMgUGV0dGVyc3NvbiBoYXMgaGVscGVkIHRoZW0gcmVnYWluIHNvbWUgZ3JvdW5kLiBCdXQsIGJ5IGxhYm91cmluZyB1bmRlciB0aGUgaWxsdXNpb24gdGhleSBjb3VsZCByZW1haW4gY29tcGV0aXRpdmUgd2hpbGUgcmVidWlsZGluZywgdGhleSBzZXQgdGhlIHdob2xlIHByb2Nlc3MgYmFjayB0d28geWVhcnMuCkluIHBlb3BsZSB3aXRoIGRpYWJldGVzLCBib3RoIHdoaXRlIGFuZCB3aG9sZSBncmFpbiBicmVhZCByYWlzZXMgYmxvb2Qgc3VnYXIgbGV2ZWxzIDcwIHRvIDEyMCBtZy9kbCBvdmVyIHN0YXJ0aW5nIGxldmVscy4gV2Uga25vdyB0aGF0IGZvb2RzIHdpdGggYSBoaWdoIGdseWNlbWljIGluZGV4IG1ha2UgcGVvcGxlIHN0b3JlIGJlbGx5IGZhdCwgdHJpZ2dlciBoaWRkZW4gZmlyZXMgb2YgaW5mbGFtbWF0aW9uIGluIHRoZSBib2R5LCBhbmQgZ2l2ZSB5b3UgYSBmYXR0eSBsaXZlciBsZWFkaW5nIHRoZSB3aG9sZSBjYXNjYWRlIG9mIG9iZXNpdHksIHByZSBkaWFiZXRlcyBhbmQgZGlhYmV0ZXMuIFRoaXMgcHJvYmxlbSBub3cgYWZmZWN0cyBldmVyeSBvdGhlciBBbWVyaWNhbiBhbmQgaXMgdGhlIG1ham9yIGRyaXZlciBvZiBuZWFybHkgYWxsIGNocm9uaWMgZGlzZWFzZSBhbmQgbW9zdCBvdXIgaGVhbHRoIGNhcmUgY29zdHMuIERpYWJldGVzIG5vdyBzdWNrcyB1cCBvbmUgaW4gdGhyZWUgTWVkaWNhcmUgZG9sbGFycy4KVGhpcyBpcyBtYXNzaXZlLCBob3Jpem9udGFsIHBpcGluZyB0aGF0IHdlJ3JlIHRhbGtpbmcgYWJvdXQgaGVyZS4gCkFtZXJpY2FuIGZvb3RiYWxsIGlzIGEgbW9yZSBwaHlzaWNhbCBzb3J0IG9mIGdhbWUsIGFuZCBoZW5jZSwgYWxsIG9mIHRoZW0gYXJlIGNyZWF0ZWQgZXF1YWxseSwgYm90aCBpbiB0ZXJtcyBvZiB0aGUgc2V3aW5nIGFuZCB0aGUgZGVzaWduIGl0c2VsZi4gCkhhcnJ5IFJlaWQgbXVzdCBub3QgYmUgYSBEYWlseSBTaG93IGZhbiBiZWNhdXNlIHRoZSBuZXh0IGRheSwgd2hpbGUgb24gdGhlIFNlbmF0ZSBmbG9vciwgUmVpZCBoYWQgaGlzIHBva2VyIGZhY2Ugb24gd2hlbiBoZSBzYWlkICJUaGUgd29yZCdzIG91dCB0aGF0IGhlIGhhc24ndCBwYWlkIGFueSB0YXhlcyBmb3IgMTAgeWVhcnMuIApJIGltYWdpbmUgaXQgd291bGQgYmUgYW5ub3lpbmcgd2hlbiBzb21lb25lIHBvaW50cyBvdXQgdGhhdCB3b21lbiBzaG91bGQgcHJvYmFibHkgYWN0dWFsbHkgZmlnaHQgZm9yIGVxdWFsaXR5IGluc3RlYWQgb2YganVzdCB0aGluZ3MgdGhhdCBiZW5lZml0IGp1c3QgdGhlbS4gCkhlIGltcHJvdmVkIGhpcyBza2F0aW5nLCBiZWNhbWUgYSBiaWcgbmV0IGZyb250IHByZXNlbmNlIGFuZCBoYXMgYWxzbyB0aHJpdmVkIGluIGEgcGVuYWx0eSBraWxsIHJvbGUuIApMeWZ0IERyaXZlciBSZWxlYXNlZCBGcm9tIEhvc3BpdGFsIDEwIERheXMgQWZ0ZXIgQmVpbmcgU2hvdCBCeSBDYXJqYWNrZXJzQSBzdXJ2aXZvciBzdG9yeSBpbiBTb3V0aCBGbG9yaWRhIGZyb20gYSBtYW4gd2hvIHdhcyBzaG90IGp1c3QgZm9yIGRvaW5nIGhpcyBqb2IuClRoZSBuZXh0IHN0ZXAgdG8gbWFraW5nIGEgaG9tZSBidXNpbmVzcyB3b3JrIGlzIHRvIGNyZWF0ZSBhIHdlYnNpdGUgd2hlcmUgeW91IGNhbiBoaWdobGlnaHQgdGhlIHByb2R1Y3RzIHRoYXQgeW91IG9mZmVyLiBZb3UgY2FuIHBsYWNlIHBpY3R1cmVzIGFuZCBwcmljZXMgb2YgdGhlIENsYXkgUG9rZXIgQ2hpcHMgYW5kIFBva2VyIEFjY2Vzc29yaWVzLCBhbmQgYWxsIG90aGVyIGl0ZW1zIHRoYXQgeW91IHBsYW4gdG8gcHJvbW90ZS4gCkJhc2ljYWxseSB5b3UgYWx3YXlzIHdhbnQgYSBsb25nLCBtZWRpdW0gYW5kIHNob3J0IHJhbmdlIHdlYXBvbiBhbmQgMSAyIGhlYWxzLi4gClRvIHVzZSBjdXN0b21lciBkYXRhIGhhcyBsb25nIGJlZW4gYSBjaGFsbGVuZ2UgZm9yIHRoZSB0cmF2ZWwgaW5kdXN0cnkuIEJ5IGRldmVsb3Bpbmcgc3lzdGVtcyB0aGF0IGxlYXJuIGZyb20gY29uc3VtZXIgYmVoYXZpb3IsIGNvbXBhbmllcyBjYW4gcHJlc2VudCBwcm9kdWN0cyBvciBzZXJ2aWNlcyB0YWlsb3JlZCB0byBndWVzdCBwcmVmZXJlbmNlcy4gCk1lbmNrZW4sIHdobyBnYXZlIGl0IHJpZ2h0IGF3YXkgdG8gdGhlIExpYnJhcnkgb2YgQ29uZ3Jlc3MsIHdoZXJlIGl0IHdvdW5kIHVwIGluIGEgZm9yZ290dGVuICJQYW1waGxldCBDb2xsZWN0aW9uIiwgYW5kIHRoZW4gc29sZCB0byBtZSAoeWVhcnMgYWZ0ZXJ3YXJkcykuIApPbmx5IGhhZCBhYm91dCAyMCBhbWF0ZXVyIGZpZ2h0cyBhbmQgc2V2ZW4gYXMgYSBwcm8gYW5kIGhlIGFscmVhZHkgYSB2ZXJ5IGdvb2QgZmlnaHRlci4gClRoZSBuZXcgc3RyZWFtaW5nIHNlcnZpY2UgaXMgY2FsbGVkIElNRGIgRnJlZWRpdmUsIGFuZCBpdCdzIHBhcnQgb2YgQW1hem9uJ3MgbW92ZSB0byBwdWxsIGluIG1vcmUgYWQgcmV2ZW51ZS4gClRoZSBkZXBvc2l0IGlzIGF2YWlsYWJsZSBpbnN0YW50bHkgc28gdGhhdCBpcyBuaWNlLiAKVGhlcmUncyBub3RoaW5nIHdyb25nIHdpdGggdGhhdCwiIEdpbGxlc3BpZSBzYWlkLCBhZGRpbmcgdGhhdCBEb3VnaGVydHkgaGFzIGFjY291bnRhbnRzICJhbmQgdmVyeSBnb29kIGxhd3llcnMgd2hvIG1ha2Ugc3VyZSBoZSBkb2Vzbid0IGNvbWUgYW55d2hlcmUgbmVhciB0aGUgbWFyZ2lucyBvZiBpbXByb3ByaWV0eS4iVW5pb24gZHVlcyBjYW4ndCBnbyBmb3IgZGlyZWN0IHBvbGl0aWNhbCBjb250cmlidXRpb25zLCBidXQgdW5pb24gZnVuZHMgY2FuIGdvIHRvIHBvbGl0aWNhbCBhY3Rpb24gY29tbWl0dGVlcyAoUEFDcyksIHdoaWNoIHN1cHBvcnQgY2FtcGFpZ25zLlNvIHRoZSBtb3JlIHRoYW4gJDEuNSBtaWxsaW9uIGluIDIwMTUgc3VwcG9ydCB0byBEb3VnaGVydHkncyBicm90aGVyIEtldmluJ3Mgc3VjY2Vzc2Z1bCBjYW1wYWlnbiB0byBiZWNvbWUgYSBQZW5uc3lsdmFuaWEgU3VwcmVtZSBDb3VydCBqdWRnZSBjYW1lIGZyb20gdGhlIHVuaW9uJ3MgUEFDLlN0YXJ0aW5nIGluIDIwMTQsIHRoZSB1bmlvbidzIFBBQyBnYXZlIFRvbSBXb2xmIGZvciBHb3Zlcm5vciAkMTYwLDAwMCBpbiBkaXJlY3QgY29udHJpYnV0aW9ucyBhbmQgYW5vdGhlciAkNDQsMDAwIGluIGNhbXBhaWduIHN1cHBvcnQsIGluY2x1ZGluZyBjYXRlcmluZyBhbmQgb2ZmaWNlIHN1cHBsaWVzLkJ1aWxkaW5nIGEgQmV0dGVyIFBlbm5zeWx2YW5pYSBGdW5kIHdhcyBhbm90aGVyIGJpZyBiZW5lZmljaWFyeSBvZiBMb2NhbCA5OCdzIGxhcmdlc3NlLiAKQmVhdWNvdXAgZGUgcGVyc29ubmVzIHNlIHNlbnRlbnQgZ3Jvc3NlcyB0b3V0IGVuIHRhbnQgZGUgcG9pZHMgbm9ybWFsIG1haXMgZWxsZXMgc29udCBjb25kaXRpb25uZXMgcGFyIGxlcyBzdGFuZGFyZHMgZGUgbWluY2V1ciB2aGljdWxzIGRhbnMgbGEgc29jaXQuIER1IGNvdXAsIHVuZSBkZmluaXRpb24gZGUgbGEgcGVyc29ubmUgZ3Jvc3NlIGEgdCBkb25uZSA6ICJjJ2VzdCBjZWxsZSBxdWkgbidhcnJpdmUgcGFzICB0cm91dmVyIHVuIG1haWxsb3QgZGUgYmFpbiAgc2EgdGFpbGxlIHVuIDE3IGFvdCBkYW5zIHVuZSBzb3VzIHByZmVjdHVyZSBwb3VyIG1vaW5zIGRlIDUwIGV1cm9zIi4uIApFZGl0OiBEdWRlLCBJIGF0IGFib3V0IDEwIHJlc3BvbnNlcyBhdCB0aGlzIHBvaW50LCBhbmQgc29tZSBvZiB0aGVtIGFyZSBldm9raW5nIGFuIGVtb3Rpb25hbCByZXNwb25zZSAgIHRoaXMgaXMgd2h5IEkgbG92ZSBSZWRkaXQuIFRoYW5rcyBmb3IgYWxsIHRoZSB0aXBzLCBJIHJlYWQgYW5kIGNvbnNpZGVyIGV2ZXJ5IHNpbmdsZSBvbmUgb2YgdGhlbS4KVGhlIDM4IHllYXIgb2xkIEFtZXJpY2FuIHN1ZWQgb3ZlciBhIHZlcnNpb24gb2YgYmFjY2FyYXQga25vd24gYXMgUHVudG8gQmFuY28gd2hpY2ggaGUgcGxheWVkIGF0IHRoZSBNYXlmYWlyIGNhc2lubyBvdmVyIHR3byBkYXlzIGluIEF1Z3VzdCAyMDEyLiAKQmF0aHJvb21zIHdpbGwgYmUgZW5jYXNlZCBpbiBtYXJibGUgd2l0aCBvdmVyc2l6ZWQgdGlsZXMgb24gdGhlIGZsb29yIGFuZCB3YWxscyBhbmQgd2l0aCBhbiBvdmVyc2l6ZWQgc2hvd2VyIGluIGEgZnJhbWVsZXNzIGdsYXNzIGVuY2xvc3VyZSB3aXRoIG1hcmJsZSBtb3NhaWMgdGlsZWQgYmFzZSBhbmQgbGluZWFyIGRyYWluLiBQbHVtYmluZyBmaXh0dXJlcywgaW5jbHVkaW5nIHRoZSBoYW5kIHNob3dlciBhbmQgY2VpbGluZyBtb3VudCBoZWFkIHNob3dlciwgYXJlIGJ5IEtvaGxlciBpbiBhIGNocm9tZSBmaW5pc2ggYW5kIHRoZSBzaG93ZXJzIGluY2x1ZGUgYSBjdXN0b20gbmljaGUuIFNlbGVjdCBob21lcyB3aWxsIGZlYXR1cmUgYSBkZWVwIHNvYWtlciB0dWIuIEJhdGhyb29tcyB3aWxsIGhhdmUgaW4gZmxvb3IgaGVhdGluZyBieSBOdWhlYXQgd2l0aCB0aGUgdGhlcm1vc3RhdCBjb250cm9sbGFibGUgYnkgYSBzbWFydCBwaG9uZSBvciB0aGUgTkVTVCBzeXN0ZW0gaW4gdGhlIG1hc3RlciBzdWl0ZS4KSXQgdG9vayBhbm90aGVyIDM2IGhvdXJzIGZvciB0aGUgcGVyc29uIHRvIHJldHJhY3QgaGlzIHdvcmRzIGJ1dCB0aGF0IHRvbyBpbiBhIG1hbm5lciB0aGF0IGxlZnQgbWFueSBhIGZhbHNlIHF1ZXN0aW9uIGhhbmdpbmcgaW4gdGhlIGFpci4uIApUaGV5IGZpZWxkZWQgdGhyZWUgb2ZmZXJzIGFuZCBhY2NlcHRlZCBhbiBvbiBhaXIgZGVhbCBmcm9tIE1pY2hhZWwgV2VrZXJsZSBhbmQgSmltIFRyZWxpdmluZyB3aG8gb2ZmZXJlZCAkMSBtaWxsaW9uIGluIGV4Y2hhbmdlIGZvciBhIDQwJSBzdGFrZSBwbHVzIHJlcHJlc2VudGF0aW9uIG9uIHRoZSBib2FyZC4gCkFudGkgcm9jayBDcm9jcy4gClZhY2F0aW9uLCByZW1haW5lZCBpbiBHZXR0eXNidXJnIGZvciBJIHNldmVyYWwgaG91cnMgYW5kIGhpcyBjb21tZW50cyB3ZXJlICBqIExldCBtb3JhbGlzdHMgcHJvY2xhaW0gdGhhdCB0cnV0aCBUaGVpciBzdG9tYWNocyBmdWxsIG9mIHNpY2tseSBzd2VldDsgKHNwZW5kaW5nIGEgZmV3IGRheXMgYXQgdGhlIGhvbWUgb2YgaGlzIHNvbiwgT2xpdmVyIE1pY2tsZXkuIGFkZHJlc3NlZCB0byBhIGxvY2FsIG1lcmNoYW50LiBUaGlzIGZhdm9yYWJsZSBpbXByZXNzaW9uIGZyb20gbWVyICBjaGFudHMgaW4gdGhlIGJhdHRsZWZpZWxkIHRvd24sIHdob3NlIHByaW5jaXBhbCB2b2NhdGlvbiBkdXJpbmcgdGhlIHN1bW1lciBtb250aHMgaXMgdG8ncGxheSBob3N0IHRvIHRob3VzYW5kcyBvZiB0b3VyaXN0cywgb2YgdmFyaWVkIGRpc3Bvc2l0aW9ucy4gClNlbi4gSm9obiBNY0NhaW4gKFIgQVopIGNvbmNlZGVzIHZpY3Rvcnkgb24gc3RhZ2UgZHVyaW5nIHRoZSBlbGVjdGlvbiBuaWdodCByYWxseSBhdCB0aGUgQXJpem9uYSBCaWx0bW9yZSBSZXNvcnQgU3BhIG9uIE5vdmVtYmVyIDQsIDIwMDggaW4gUGhvZW5peCwgQXJpem9uYS4gU2VuLiBQcmVzaWRlbnQgZWxlY3QuIEpvaG4gTWNDYWluIHBvc2VzIGZvciBhIHBob3RvIHdpdGggYSBiYWJ5IGF0IGEgd29tZW4ncyB0b3duIGhhbGwgbWVldGluZyBhdCB0aGUgU2hlcmF0b24gRGVudmVyIEdyYW5kIEJhbGxyb29tIE9jdG9iZXIgMiwgMjAwOCBpbiBEZW52ZXIsIENvbG9yYWRvLiAKWW91IGhhdmUgOCBvdXRzIDQgb24gZWFjaCBlbmQgb2YgdGhlIHN0cmFpZ2h0IGJ1dCB0aGUgY2FyZHMgc3VpdGVkIHRvIHRoZSBmbG9wIGFjdHVhbGx5IGJlbmVmaXQgeW91ciBvcHBvbmVudCBtb3JlIGJlY2F1c2UgdGhleSBob2xkIGEgcG90ZW50aWFsIGZsdXNoIGRyYXcuIApMYXN0bHksIGlmIHlvdSBkcmF3IGEgaGFuZCB2YWx1ZSB0d28gdGltZXMgYmVmb3JlIHRoZSBkZWFsZXIgZG9lcywgeW91IGJlY29tZSB0aGUgd2lubmVyLi4gCkFsb25nIHdpdGggSGFuY2UgYW5kIG90aGVyIGludGVyZXN0ZWQgcGFydGllcywgUmVkZGl0IGhhcyBiZWVuIHRpbmtlcmluZyB3aXRoIHRoZSBteXN0ZXJ5LCBidXQgdG8gdGhpcyBkYXkgdGhlcmUgaXMgbm8gY29uY2x1c2l2ZSBicmVha3Rocm91Z2guIApJdCB3YXMgYWxzbyB0b2xkIHRoYXQgYXMgYSBjbGVyayB3aXRoIENsYXJrIFRhbmtzIHNoZSByZWRpcmVjdGVkIGEgY2xpZW50IHBheW1lbnQgb2YgJDU1NTUgaW50byBoZXIgb3duIGJhbmsgYWNjb3VudC4gTXMgQnJlYXJsZXksIHdobyB3YXMgc2VsZiByZXByZXNlbnRlZCwgc2FpZCBzaGUgZGlkbid0IGtub3cgd2hhdCB0byBzYXkgZXhjZXB0IHRoYXQgc2hlIHdhcyB0cnVseSBzb3JyeSBmb3IgaGVyIGFjdGlvbnMuIFNoZSBzYWlkIHNoZSB3b3VsZCBiZSBoYXBweSB0byBkbyBjb21tdW5pdHkgc2VydmljZS4uIApZb3UgbmVlZCB0aGUgY2Fsb3JpZXMgdG8gc3VwcG9ydCBhIGZvZXR1cywgYW5kIGl0IG5lZWRzIHRoZSBjYWxvcmllcyB0byBncm93LiAKVGhhdCBob3cgb3VyIGpvdXJuZXkgc3RhcnRlZCwgYWxtb3N0IDEyIHllYXJzIGFnby4gSSB3YXMgbG9va2luZyBmb3IgYSBmZW1hbGUgTWFsaW5vaXMgZm9yIGEgcGxheW1hdGUgZm9yIG15IGZpcnN0IGRvZywgRHJhZ28uIEkgc3VyZSBJIHNlZW4gbGlzdGVkIG9uIHRoZSBNYWxpbm9pcyBSZXNjdWUgc2l0ZSBhbmQgcGFzc2VkIG92ZXIgaGltIHNpbmNlIGhlIHdhcyBhIG1hbGUuIFRoYW5rZnVsbHkgc29tZSBsYWR5IG5hbWVkIGhhcHBlbmVkIHRvIHNlZSBteSBwb3N0IG9uIGFub3RoZXIgcmVzY3VlIGdyb3VwIGFuZCBkZWNpZGVkIHRvIHNlbmQgbWUgYW4gZW1haWwuIFNoZSBzZW50IG1lIHNvbWUgdmlkZW9zLCBhbmQgdGhlcmUgd2FzIG5vIHR1cm5pbmcgYmFjayBmb3IgbWUuIEkga25ldyB3aG8gZG9nIDIgd291bGQgYmUuCkhlIG1hZGUgbWUgbGF1Z2ggYSBsb3QuIApTY291dGluZyB0aGUgcGFya3MgaW4gbXkgYXJlYSB0cmlwIHJlcG9ydApEYSB3aXJkIGRpZSBVcmhlYmVycmVjaHRzcmVmb3JtIG5hdHJsaWNoIG5pY2h0IGVudHNjaGVpZGVuZCBzZWluLCBhYmVyIHNpZSB3aXJkIGVpbmVuIGFsbGdlbWVpbmVuIEFudGVpbCBhbiBkZW4gc2lua2VuZGVuIEVyZ2Vibmlzc2VuIHZvbiBTUEQgdW5kIENEVSBoYWJlbi4gCkhhdmluZyBncmVhdGx5IHJlZHVjZWQgaGlzIGZvcnR1bmUgYW5kIGZhY2luZyBwb3ZlcnR5LCBoZSBraWxsZWQgaGltc2VsZiBieSBwb2lzb24gd2hpbGUgaW4gUGFyaXMuU3Vja2xpbmcgbGVnYWN5LCBob3dldmVyLCBsaXZlcyBvbi4gClRvZGF5Y2xhdyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpUaGVyZSBhcmUgcGxhY2VzIGluIHRoZSBVUyBJIHdvdWxkbiBnbyBhZ2FpbiwgYnV0IGFsc28gcGxlbnR5IG9mIHBsYWNlcyBJIHdvdWxkIGxvdmUgdG8gcmV2aXNpdC4gSSByZWFsbHkgZGlkbiBsaWtlIERhbGxhcy9Gb3J0aCBXb3J0aCBpbiBUZXhhcyB2ZXJ5IG11Y2gsIGJ1dCB0aG91Z2h0IEF1c3RpbiB3YXMgbG92ZWx5LiBJIGhhdmUgbm8gZGVzaXJlIHRvIHZpc2l0IExvcyBBbmdlbGVzIGFnYWluLCBidXQgbm9ydGh3ZXN0IFVTIGlzIHdvbmRlcmZ1bC4gVGhlcmUgd2FzIG5vdGhpbmcgaW4gdGhlIGVudGlyZSBNaWR3ZXN0IHRoYXQgSSBmb3VuZCBpbnRlcmVzdGluZyBlbm91Z2ggdG8gcmV2aXNpdCwgYW5kIG1vc3Qgb2YgRmxvcmlkYSByZWFsbHkgd2FzbiBteSBjdXAgb2YgdGVhIGVpdGhlciwgZXhjZXB0IHRoZSBtYW5hdGVlcyBhbmQgS2V5IFdlc3QuIFdhc2hpbmd0b24gREMgaXMgYSBzdHJhbmdlIHBsYWNlIGFzIHdlbGwgICBncmVhdCBtdXNldW1zLCBidXQgZmVlbHMuIG9mZiB0byBtZS4gTGlrZSB5b3UgY2FuIHRlbGwgaXQgZGlkbiBkZXZlbG9wIG5hdHVyYWxseSBhcyBhIGNpdHkuCjEwMCBwbGFzdGljIHBsYXlpbmcgY2FyZHMgYXJlIHVzZWQgb24gdGhlIHdvcmxkIHBva2VyIHRvdXIgeW91IHdhdGNoIG9uIHRlbGV2aXNpb24uIFBybyBwb2tlciBwbGF5ZXJzIGxpa2UgdGhlIGNyaXNwIGZlZWwgb2YgdGhlc2UgY2FyZHMgYW5kIHRoZXkgYXJlIGdyZWF0IGZvciB0aGVzZSBoaWdoIHN0YWtlcyBnYW1lcyB3aGVyZSBuZXJ2b3VzIHBsYXllcnMgY2FuIGRhbWFnZSBhIGNhcmQuIFRoZXNlIGNhcmRzIHdpbGwgbm90IGRhbWFnZSBlYXNpbHkgYW5kIHRodXMgY2FuIGJlIHVzZWQgb3ZlciBhbmQgb3ZlciBhZ2Fpbi4uIApSdWIgdGhlIG9wZW4gcGFsbSwgd29ya2luZyBpbiBhbiB1cCBhbmQgZG93biBtb3Rpb24uIFRyeSB0byBtYXNzYWdlIHRoZSB0ZW5kb25zIG9mIHRoZSBoYW5kLiAKMS4gSXQgbWVhbnMgc29tZW9uZSB3aG8gaXMgaW4gYSBzdGF0ZSBvZiBjb25mdXNpb24gb3IgZnJ1c3RyYXRpb24sIGluIHdoaWNoIHRoZXkgYWRvcHQgYW4gb3ZlciBhZ2dyZXNzaXZlIHN0cmF0ZWd5LiAyLiBBIHBsYXllciB1c3VhbGx5ICJnb2VzIG9uIHRpbHQiIG9yICJ0aWx0cyIgd2hlbiBoZSBvciBzaGUgc3VmZmVycyBhIHBhcnRpY3VsYXJseSBkYW1hZ2luZyBsb3NzIGFuZCBiZWdpbnMgcGxheWluZyB0byByZWNvdXAgdGhlIGxvc3QgY2hpcHMuIDMuIFR5cGljYWxseSwgYSBwbGF5ZXIgZ29lcyBvbiB0aWx0IGFmdGVyIGxvc2luZyBhIGxhcmdlIHBvdCBvciBzdWZmZXJpbmcgYSBiYWQgYmVhdC4gQSBwb2tlciBwbGF5ZXIgb24gdGlsdCB3aWxsIGxvc2UgaGlzIG9yIGhlciBjb29sIGFuZCBwbGF5IGJhZCBoYW5kcyBpbiBsb25nIG9kZHMgc2l0dWF0aW9ucy4gVGhpcyBwbGF5ZXIgY2FuIG9mdGVuIGJlIGdvYWRlZCBpbnRvIGdvaW5nIGFsbCBpbiBpbiBhIGRpc2FkdmFudGFnZW91cyBzaXR1YXRpb24sIG9yIG90aGVyd2lzZSByaXNrIHRvbyBtdWNoIG1vbmV5IG9uIGEgbG91c3kgaGFuZC4gQSBnb29kIHJlZmVyZW5jZSBhbmQgcG9zc2libGUgc291cmNlIGZvciB0aGUgdGVybSBpcyB0aGUgMTk4OSBwYXBlciAiR29pbmcgb24gdGlsdDogRnJlcXVlbnQgcG9rZXIgcGxheWVycyBhbmQgY29udHJvbCIgZnJvbSB0aGUgSm91cm5hbCBvZiBHYW1ibGluZyBTdHVkaWVzLiAoRnVsbCBBbnN3ZXIpCkEgaHVnZSBlbGVtZW50IG9mIEl0J3MgQSBXb25kZXJmdWwgTGlmZSBpcyB0aGF0IE1yLiBQb3R0ZXIsIHRoZSB2aWxsYWlub3VzIGJhbmsgb3duZXIsIHJlZnVzZXMgdG8gZ2l2ZSBsb2FucyB0byBhbnlvbmUgd2hvIGNhbid0IGRlZmluaXRpdmVseSBwcm92ZSB0aGV5IGNhbiBhZmZvcmQgdGhlbS4gTWVhbndoaWxlLCBraW5kaGVhcnRlZCBwcm90YWdvbmlzdCBHZW9yZ2UgQmFpbGV5IGlzIHdpbGxpbmcgdG8gaGVscCBtZW1iZXJzIG9mIGhpcyBjb21tdW5pdHkgYnkgZ2l2aW5nIHRoZW0gbG9hbnMgdGhleSBtYXkgc3RydWdnbGUgdG8gcmVwYXkgc28gdGhhdCB0aGV5IGNhbiBsaXZlIGluIGEgbmljZSBuZWlnaGJvcmhvb2QgcmF0aGVyIHRoYW4gUG90dGVyJ3Mgc2x1bXMuIApBYm91dCAxMCBkYXlzIGFmdGVyIGNsb3NpbmcgSSByZWNlaXZlZCBhbiBlbWFpbCBmcm9tIHRoZSB0aXRsZSBjb21wYW55IHN0YXRpbmcgdGhhdCB0aGV5IHdlcmUgY29udGFjdGVkIGJ5IHRoZSBsZW5kZXIgcmVxdWVzdGluZyB0aGV5IHVwZGF0ZSB0aGUgSFVEIGFuZCB0aGV5IGFyZSB1bmFibGUgdG8gc2VsbCB0aGUgbG9hbiB1bnRpbCBJIGRvLi4gCkhpcyBjdXJyZW50IGNvbnRyYWN0IGNhcnJpZXMgaGltIHRocm91Z2ggaGlzIGFnZSAzNSBzZWFzb24sIHRoZW4gaGUncyBhbiB1bnJlc3RyaWN0ZWQgZnJlZSBhZ2VudC4gCkhlIHNuYWNrIGxlc3MuIEhlIGRyaW5rIGxlc3Mgc29kYSwganVpY2UsIG90aGVyIGhpZ2ggY2FyYiBsaXF1aWRzLiBIZSBmZWVsIG1vcmUgZW5lcmdpemVkIGFuZCBtb3JlIHBvc2l0aXZlLCBhbmQgaXQgYmUgZWFzaWVyIHRvIGdldCB1cCBhbmQgbW92ZSBhcm91bmQsIGV2ZW4gZXhlcmNpc2VOZXZlciBuZWdhdGl2aXplLCBuZXZlciBlc2NhbGF0ZSwgYW5kIGFsd2F5cyBwb3NpdGl2aXplV2hlbiBoZSBoYXZpbmcgYSBnb29kIHRpbWUsIHZhbGlkYXRlIHdpdGggcG9zaXRpdmUgZmVlZGJhY2s6T3IganVzdCB0cnkgdG8gcmVkaXJlY3QgdGhlIGNvbnZlcnNhdGlvbi9tb29kL2F0bW9zcGhlcmUgdG8gc29tZXRoaW5nIG1vcmUgZnVuIGFuZCBwb3NpdGl2ZS4gClRoZSBkaW5vcyBmaXJlZCB0aGUgZmlyc3Qgc2hvdCBhbmQgYXJlIGNhbG0gYW5kIGNvbGxlY3RlZC4gClRoZXJlIGFyZSBwZW9wbGUgbGVnaXQgY3Jvc3NpbmcgdGhlIGJvcmRlciBpbGxlZ2FsbHkgYW5kIGl0IGltcG9zc2libGUgdG8gY2F0Y2ggdGhlbSBhbGwuIFRoZXkgY3Jvc3MgdGhlIGJvcmRlciBudW1lcm91cyB0aW1lcyBpZiB0aHJvd24gb3V0IGJ5IElDRS4gCkRpZXRhcnkgc3VwcGxlbWVudHMgYXJlIG9mdGVuIHJlY29tbWVuZGVkLCBidXQgdmFyeSBpbiBxdWFsaXR5IGFuZCBtYXkgbm90IGluY2x1ZGUgRDMsIHdoaWNoIG1heSBiZSAzIHRpbWVzIG1vcmUgcG90ZW50IHRoYW4gRDIuClNlcGFyYXRpc20uIEJ1dCBQcm92aWRlbmNlIGRlY3JlZWQgdGhhdCBoZSBzaG91bGQgYmUgYXJvdW5kIHdoZW4gdGhlIHdoaXJsd2luZCBzdHJ1Y2suCk15IElUSFVGIGFsc28gbm93IHNheXMgNC43MiBidXQgd2hlbiBJIGNsaWNrIG9uIHRoZSBsaW5rLCB0aGUgbGFzdCBwcmljZSBpcyBzdGlsbCAkNS40MSB3aGljaCBpcyB3aGVyZSBpdCBiZWVuIGJvdW5jaW5nIGFyb3VuZCBhbGwgd2Vlay4gTWF5YmUgdGhpcyBpcyB0aGUgYmVnaW5uaW5nIG9mIHRoZSBjb252ZXJzaW9uIHByb2Nlc3Mgc28gYnkgdGhlIHRpbWUgaXQgZmluaXNoZWQgbXkgYWNjb3VudCB3aWxsIGJlIFVQIG5vdCBkb3duLCBidXQgSSBub3QgZ29pbmcgdG8gcHJldGVuZCBpdCBub3Qgc3RpbGwgc2xpZ2h0bHkgbmVydmUgd3JhY2tpbmcgdGhvdWdoIGxvZ2ljYWxseSBJIHByZXR0eSBzdXJlIHRoaXMgaXMgU2Nod2FiIGhhdmluZyB0byBjb252ZXJ0IGFuZCB1cGRhdGUgYWZ0ZXIgaG91cnMgc28gbGlrZWx5IGEgZ29vZCB0aGluZyBpbiBwbGFjZSBieSB0b21vcnJvdyEKVGhpcyBpcyB3aGF0IEkgd2FzIGdvaW5nIHRvIHNheSEgTXkgaHVzYmFuZCBhbmQgSSBoYXZlIGJlZW4gbWFycmllZCBmb3IgNiB5ZWFycywgd2UgYmVlbiB0b2dldGhlciAxNiBpbiB0b3RhbC4gV2hpbGUgd2UgaGF2ZSBhbiBhd2Vzb21lIHNleCBsaWZlIGFuZCBhcmUgc3RpbGwgVkVSWSBhdHRyYWN0ZWQgdG8gZWFjaCBvdGhlciwgaWYgaGUgYXNrZWQgbWUgdG8gcmVjcmVhdGUgYSBsb29rIGZvciBoaW0gYmVjYXVzZSBoZSBlbmpveWVkIGl0LCBpdCB3b3VsZCBnaXZlIG1lIGJ1dHRlcmZsaWVzIGFuZCBJIHdvdWxkIGxvdmUgdG8gZG8gaXQgZm9yIGhpbS4gSGUgd2VhcnMgYSBjZXJ0YWluIGNvbG9nbmUgdGhhdCBqdXN0IHdvcmtzIHNvIHdlbGwgd2l0aCBoaXMgYm9keSBjaGVtaXN0cnkgYW5kIGl0IG1ha2VzIG1lIHdhbnQgdG8ganVtcCBoaXMgYm9uZXMuIApCZWluZyBpbiB0dW5lIHdpdGggeW91ciBlbXBsb3llZXMnIGxpdmVzIG91dHNpZGUgdGhlIG9mZmljZSBjYW4gcG90ZW50aWFsbHkgYWxlcnQgeW91IHRvIHRpbWVzIHdoZW4gdGhhdCBwZXJzb24gbmVlZHMgZXh0cmEgY29uc2lkZXJhdGlvbiBmcm9tIHlvdSwgZm9yIGluc3RhbmNlIGlmIGhlIG9yIHNoZSByZXF1aXJlcyBzdWRkZW4gdGltZSBvZmYgZm9yIGEgZmFtaWx5IGZ1bmVyYWwuIApGaXJzdCwgZ28gYWxvbmUsIHNpbmNlIG1heWJlIHlvdSBjYW4gYmUgYSBsaXR0bGUgYml0IHNoeSBldmVuIGluIGZyb250IG9mIHlvdXIgYmVzdCBmcmllbmQuIFRoaXMgaXMgeW91ciBvcHBvcnR1bml0eSB0byB0cnkgb24gYWxsIHRoZSBzdHlsZXMgeW91IG5ldmVyIHRob3VnaHQgdG8gdHJ5IGJlZm9yZS4gCkRFVFJPSVQgICBUaGUgRGV0cm9pdCBSZWQgV2luZ3MgdG9kYXkgYW5ub3VuY2VkIHRoYXQgdGlja2V0cyBhcmUgbm93IG9uIHNhbGUgZm9yIE1vdG9yQ2l0eSBDYXNpbm8gSG90ZWwncyBhbm51YWwgUmVkIFdpbmdzIENoYXJpdHkgUG9rZXIgVG91cm5hbWVudCBiZW5lZml0aW5nIHRoZSBEZXRyb2l0IFJlZCBXaW5ncyBGb3VuZGF0aW9uLiBTZXQgZm9yIE1vbmRheSwgRmViLiA2IGF0IE1vdG9yQ2l0eSBDYXNpbm8gSG90ZWwsIHRoZSBjaGFyaXR5IHBva2VyIHRvdXJuYW1lbnQgd2lsbCBnaXZlIGZhbnMgYW4gb3Bwb3J0dW5pdHkgdG8gZ28gaGVhZCB0byBoZWFkIHdpdGggUmVkIFdpbmdzIHBsYXllcnMgYW5kIGFsdW1uaSBpbiBhIGdhbWUgb2YgVGV4YXMgSG9sZCAnRW0gd2l0aCBhIGdyYW5kIHByaXplIG9mICQ1LDAwMCBjYXNoIHRvIHRoZSB3aW5uZXIgb2YgdGhlIHRvdXJuYW1lbnQuIEZhbnMgY2FuIHJlc2VydmUgYSBzZWF0IGluIHRoZSB0b3VybmFtZW50IGJ5IG1ha2luZyBhICQ0MDAgZG9uYXRpb24gdG8gdGhlIFJlZCBXaW5ncyBGb3VuZGF0aW9uLiBQYXJ0aWNpcGFudHMgaW4gdGhlIHRvdXJuYW1lbnQgY2FuIHB1cmNoYXNlIHVwIHRvIHRocmVlIGFkZGl0aW9uYWwgZ3Vlc3QgdGlja2V0cyBmb3IgYSAkMTAwIGRvbmF0aW9uIGFwaWVjZS4KVGhlc2Ugc2VjdGlvbnMgc2hvdWxkIGNvdmVyIGV2ZXJ5dGhpbmcgeW91IHdhbnQgdG8gc2F5LiBFdmVuIGJldHRlciwgd2hlbiB0aGV5J3JlIGFsbCBzZXQgb3V0IG9uIHlvdXIgY29tcHV0ZXIgc2NyZWVuLCB5b3UnbGwgYmUgYWJsZSB0byBxdWlja2x5IGFuZCBlYXNpbHkgc2VlIHRoZSBza2VsZXRvbiBvZiB5b3VyIGJsb2cgcG9zdCBjb21pbmcgdG9nZXRoZXIgYW5kIHVuZGVyc3RhbmQgd2hldGhlciBhbnl0aGluZyBuZWVkcyB0byBiZSBjaGFuZ2VkIG9yIGFkZGVkLiBTcGVuZCB0aGlzIHRpbWUgZ2V0dGluZyBlYWNoIHNlY3Rpb24gcmlnaHQsIGFuZCBwdXR0aW5nIHRoaW5ncyBpbiB0aGUgcmlnaHQgb3JkZXIuCkkgdGhpbmsgdGhhdCB3ZSBkaWQgdGhhdCB2ZXJ5IHdlbGwgaW4gdGhpcyB3aG9sZSBzZXJpZXMuIExld2lzIHBsYXllZCB0aGUgZmlyc3QgdHdvIHBlcmlvZHMgaW4gdGhlIE1hcm9vbnMgbmV0IGFuZCBnYXZlIHVwIGZvdXIgZ29hbHMgb24gMjkgc2hvdHMuIApFZGl0IDI6IFRoYW5rIHlvdSBzbyBtdWNoIGZvciB0aGUgZ29sZCBhbmQgcGxhdGludW0sIHRvbyEgQnV0IHdoYXQncyBtdWNoIG1vcmUgcmV3YXJkaW5nIGlzIGV2ZXJ5b25lJ3MgcmVwbGllcyB0byB0aGlzLiBTZXggYW5kIHNleHVhbCByZXNwb25zZSBpcyBzdWNoIGEgdGFib28gdG9waWMgZm9yIG1lbiBhbmQgd29tZW4sIGV2ZW4gdG9kYXksIGFuZCB0aGVyZSdzIHNvIG11Y2ggbWlzaW5mb3JtYXRpb24gc3Vycm91bmRpbmcgaXQuCkZpbmlzaGluZyBhbnkgdHJhY2sgZW5kcyBpbiBpbW1lZGlhdGUgc3VjY2VzcyBvciBpbmNyZW1lbnRhbCBwcm9ncmVzcy4gClBwLiAxIDUuIApOaWNodCB2aWVsIHNhZ2VuLiBBdWNoIGRpZSBUYXhpZmFocnQga29zdGV0IG51ciAxMCBFdXJvIGRvcnRoaW4uIEFiZXIgZ2FueiBlaHJsaWNoICAgdmllbGUgUG9rZXJ0b3VyaXN0ZW4gc2VoZW4gbnVyIGRlbiBGbHVnaGFmZW4sIGRhcyBIb3RlbCB1bmQgZGllIFNwaWVsdGlzY2hlLiBFaW4gV29jaGVuZWRlIG1hbCBzbyByaWNodGlnIGRpZQpJIHdhcyBjaGFuZ2luZyBhIGZsYXQgdGlyZSBvbiBJbnRlcnN0YXRlIDQwIHdoZW4gSSB3YXMgc3RydWNrIGJ5IGFuIGF1dG9tb2JpbGUgdHJhdmVsaW5nIGF0IGhpZ2ggc3BlZWQuIEkgd2FzIHNldmVyZWx5IGluanVyZWQuCkhvd2V2ZXIsIE11bm5hIGFsbGVnZWRseSBjYXB0dXJlZCB0aGUgc2hvcCBob29rIG9yIGJ5IGNyb29rIGFuZCBuZXZlciBnYXZlIGl0IGJhY2sgdG8gdGhlIG93bmVyLiAKNCkgR29taXRhcyByb2phcyB5IHZlcmRlcyBqdW50byBjb24gcGFsb21pdGFzIGRlIG1heiBwYXJhIHVuIGVmZWN0byBkZSBvbGQgZmFzaGlvbmVkIHBhcmEgZ2FybGFuZCBkZSByYm9sIGRlIE5hdmlkYWQgZGUgbGEgY2FkZW5hLiBDdWFuZG8gbGFzIHZhY2FjaW9uZXMsIG11bmNoIGVuIGxhIGd1aXJuYWxkYSBwYXJhIG1hbnRlbmVyIHN1IGZ1ZXJ6YSBjb21vIGd1YXJkZSBsYXMgZGVjb3JhY2lvbmVzIGZlc3RpdmFzLgowOSBNYXIuIApMaW1pdCBteSBzZWFyY2ggdG8gci9QaW5rT21lZ2F1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KVGhlcmUgaXMgYSBzcGVjaWZpYyBpc3N1ZSB3aXRoIHRoZSBGYWNlYm9vayBpbiBhcHAgYnJvd3NlciBpbnRlcm1pdHRlbnRseSBtYWtpbmcgcmVxdWVzdHMgdG8gd2Vic2l0ZXMgd2l0aG91dCBjb29raWVzIHRoYXQgaGFkIHByZXZpb3VzbHkgYmVlbiBzZXQuIFRoaXMgYXBwZWFycyB0byBiZSBhIGRlZmVjdCBpbiB0aGUgYnJvd3NlciB3aGljaCBzaG91bGQgYmUgYWRkcmVzc2VkIHNvb24uIFRoZSBzaW1wbGVzdCBhcHByb2FjaCB0byBhdm9pZCB0aGlzIHByb2JsZW0gaXMgdG8gY29udGludWUgdG8gdXNlIHRoZSBGYWNlYm9vayBhcHAgYnV0IG5vdCB1c2UgdGhlIGluIGFwcCBicm93c2VyLiAKVGhlIG1vZGVybiBpbmNhcm5hdGlvbiBvZiB0aGUgdHJlYXRtZW50IGlzIHByaW1hcmlseSBiYXNlZCBvbiB0aGUgZm9ybSB1c2VkIGJ5IHRoZSBIb3BpIChtZWFuaW5nICJQZWFjZWZ1bCBQZW9wbGUiKSBJbmRpYW5zIHdobyBwb3NzZXNzIGdyZWF0IG1lZGljaW5hbCBrbm93bGVkZ2UgYW5kIHNwaXJpdHVhbGl0eS4gClRoZXJlIGFyZWZvdXIgZGlmZmVyZW50IGtpbmRzIG9mIHdoZWF0IGFsbGVyZ2llcywgd2l0aCBmb3VyIGRpZmZlcmVudCB0eXBlcyBvZiBpbW11bmUgcmVzcG9uc2VzLgpUaGUgcmVhc29uIGFzIHRvIHdoeSBvbmxpbmUgZ2FtYmxpbmcgaGFzIHJlY2VudGx5IGdyb3duIGluIHBvcHVsYXJpdHkgYXQgYW4gZW5vcm1vdXMgcmF0ZSBpcyB2ZXJ5IHNpbXBsZSBpbmRlZWQuIE9ubGluZSBnYW1ibGluZyBpcyBhY2Nlc3NpYmxlIHRvIHBlb3BsZSB3aG8gbGl2ZSBmYXIgYXdheSBmcm9tIHRyYWRpdGlvbmFsIGJyaWNrIGFuZCBtb3J0YXIgY2FzaW5vcy4gCkNvbWljcyBrZWVwIHVwcGluZyB0aGUgcG93ZXJzLCBidXQgaXQgbW9yZSBpbnRlcmVzdGluZyB3aGVuIHBvd2VycyBoYXZlIGxpbWl0cy4uIApJIGhhdmUgYmVlbiB0aGVyZSwgZG9uZSB0aGF0LiAKWWVhcnMgbGF0ZXIsIEkgd291bGQgd2F0Y2ggYSB5b3V0dWJlciBzb2x2ZSB0aGF0IHB1enpsZS4gSSBoYWQgZXZlcnl0aGluZyB3cmlnaHQsIGV4Y2VwdCwgYWZ0ZXIgcHVsbGluZyB0aGUgbGV2ZXIsIHlvdSBoYWQgdG8gY2xpY2sgb24gYSBidXR0b24gKHRoYXQgd2FzIG9uIHRoYXQgc2FtZSBsZXZlcikuIEkgd2FzIHBpaWlpaWlpaXNzc3Nzc2VkLgpUaGUgTGlzdHMgVGhlIExpc3Q6IFRheCBwcmVwYXJhdGlvbiBmaXJtcywgRGVjLiAzMSwgMjAxOCBEZWMuIDMxLCAyMDE4IEJ5IFZFR0FTIElOQyBzdGFmZiBGaW5kIG91dCBhYm91dCB0YXggcHJlcGFyYXRpb24gZmlybXMuIFRoaXMgd2Vlaywgd2UgcmFuayB0aGVtIGJ5IGxvY2FsIHRheCBwcm9mZXNzaW9uYWxzIGFzIG9mIE5vdi4gMzAuCkEgZmluYWwgbm90ZTogaW4gcHJvc2UgYW5kIHBvZXRyeSB0aGUgTGF0aW4gd29yZCAiUXVhbnR1bSIgaGFzIGJlZW4gbWl4ZWQgdXAgd2l0aCB0aGUgd29yZCAiUXVpbnR1bSIgdGltZSBhbmQgdGltZSBhZ2FpbjsgUXVpbnR1bSBtZWFucyAiYSBmaWZ0aCIgb2Ygc29tZXRoaW5nIGFuZCBoYXMgYWxzbyBiZWVuIHVzZWQgYXMgYSBtZWFzdXJlbWVudCAoZXF1YWxpbmcgMy42NSBncmFtcykgaW4gcGhhcm1hY3kuIFRoZSBHZXJtYW4gbGFuZ3VhZ2UgaGFzIGFjdHVhbGx5IHdyb25nZnVsbHkgYWRhcHRlZCB0aGUgd29yZCBvdmVyIHRoZSBjZW50dXJpZXMgYW5kIHR1cm5lZCBpdCBpbnRvICJRdWVudGNoZW4iIChhIHZlcnkgc21hbGwgYW1vdW50KSAgIGluc3RlYWQgb2YgIlF1aW50Y2hlbiIuIENoYW5jZXMgYXJlIHRoYXQgdGhpcyBoYXBwZW5lZCBpbiBvdGhlciBsYW5ndWFnZXMsIHRvbywgYnV0IHRoYXQgbm93IGlzIHRoZSBtb21lbnQgZm9yIGEgbmF0aXZlIEJyaXRpc2ggbGluZ3Vpc3QgdG8gc3RlcCBpbi4uIApBbGwgc2VyaW91c2x5IGxvb2tzIGxpa2UgdGhleSB3ZXJlIHNpdHRpbmcgYXJvdW5kIG9uZSBhZnRlcm5vb24gYW5kIHdlcmUganVzdCBsaWtlLCAiaGV5LCBob3cgY2FuIHdlIHNxdWVlemUgc29tZSBtb25leSBvdXQgb2YgdGhlIG1pbGQgaW50ZXJuZXQgY2VsZWJyaXR5IHdlIGFjY3J1ZWQgc28gZmFyPyBJIGdvdCBpdCEgV2Ugd2lsbCB3cml0ZSBhIGJvb2sgdGhhdCBwZXJmZWN0bHkgZGVzY3JpYmVzIGJvdGggb3VyIHRyYWluaW5nIG1ldGhvZHMgYW5kIHNob3djYXNlcyBvdXIgY29tYmluZWQgaW50ZWxsZWN0LiIgU3VjaCBhIGZ1Y2tpbmcgc2NhbS4gNSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCldpdGggdGhlIGNvbmRvIHlldCB0byBiZSByZW50ZWQsIHRoZXkgaGF2ZSBhIG1vbnRobHkgZGVmaWNpdCBvZiAkMSw1MDUuIApNYXNzYWdlIGFzIGEgaGVhbHRoY2FyZSBwcm9mZXNzaW9uIGlzbiBhbiBpbm5hdGUgc2tpbGwuIEl0IGEgbWVkaWNhbCBlZHVjYXRpb24gZm9jdXNpbmcgb24gbWVkaWNhbCB0cmVhdG1lbnRzIG9mIGluanVyaWVzLiAKSXQgaXMgcGVyZmVjdCBmb3IgZm9sZGluZyBibGFja2phY2sgdGFibGVzIHRvby4gClRoZXJlIHdhcyBzbyBtdWNoIEkgbGlrZWQgYWJvdXQgdGhpcyBib29rLiBTcG9ydHMgcm9tYW5jZXMgYXJlIGRlbGlnaHRmdWwgYmVjYXVzZSB0aGV5IGNvbWJpbmUgdHdvIHRoaW5ncyBJIGxvdmUuIApIb3BlZnVsbHkgdGhleSBkbyBzb21ldGhpbmcgdG8ga2VlcCBwbGF5ZXJzIGxpa2UgdXMgaW4gdGhlIGdhbWUuIFNvbWV0aGluZyB0aGF0IGRvZXNuIGluY2x1ZGUgb3ZlciBwb3dlcmVkIHBsYW5lcywgd2VhcG9ucyBldGMuLiAKIklmIEkganVzdCBmb3VuZCAob3Iga2VwdCkgbXkgcHJpbmNlIGluIHNoaW5pbmcgYXJtb3IsIHRoZW4gSSB3aWxsIGJlIHNhZmUgYW5kIGZpbmFuY2lhbGx5IHNlY3VyZSBhbmQgaGFwcHkiIGlzIGEgZmFpcnkgdGFsZSB0aGF0IGFsbCBvZiB1cywgYnV0IHBhcnRpY3VsYXJseSB5b3VuZyAod2hpdGUsIG1pZGRsZSBjbGFzcykgZ2lybHMgYXJlIHJhaXNlZCBvbi4gVGhpbmsgRGlzbmV5LiAKSW4gdGhlIGVhcmx5IDE5NzBzLCByZXNlYXJjaGVycyB3ZXJlIHN0dWR5aW5nIGhvdyB0aGUgYnJhaW4gaXMgYWZmZWN0ZWQgYnkgb3BpYXRlcywgc3VjaCBhcyBoZXJvaW4gb3IgbW9ycGhpbmUuIApJbiBtb3N0IHBva2VyIHJvb21zIGl0IGlzIG5vdCBhbGxvd2VkIHRvIGhpZGUgeW91ciBjYXJkcyBmcm9tIHZpZXcuIFRoaXMgaXMgYmVjYXVzZSBwbGF5ZXJzIG1ha2UgdGhlaXIgZGVjaXNpb25zIGJhc2VkIG9uIGhvdyBtdWNoIHBlb3BsZSBhcmUgY3VycmVudGx5IHBsYXlpbmcgaW4gdGhlIGhhbmQgYmFzZWQgb24gdGhlaXIgcG9zaXRpb24uIApTaGUgbGlrZWx5IHBvcCBiYWNrIHVwIGluIGEgY291cGxlIHdlZWtzIGV4cGVjdGluZyBldmVyeW9uZSB0byBiZSBzb29vb28gZ3JhdGVmdWwgc2hlIHJldHVybmVkIGlmIHRoYXQgd2hhdCBnb2luZyBvbi4gCklmIHlvdSBleHBlY3QgY2xhc3MgcGFydGljaXBhdGlvbiwgZXhwbGljaXRseSBpbmRpY2F0ZSB0aGF0IHRoZXJlIGlzIGEgY29tcG9uZW50IG9mIHRoZSBmaW5hbCBncmFkZSB0aGF0IGlzICJwYXJ0aWNpcGF0aW9uIi4gRXhwbGFpbiBpdCBhZ2FpbiB0aGUgbmV4dCBjbGFzcy4gUG9pbnQgb3V0IHRoYXQgcGFydGljaXBhdGlvbiBhbmQgYXR0ZW5kYW5jZSBhcmUgdHdvIGRpZmZlcmVudCB0aGluZ3MuCkFsc28gYXMgeW91IHdpbGwgYmUgcGxheWluZyBvbmxpbmUsIHRoZSBzb2Z0d2FyZSB1c2VkIGZvciBwbGF5IGFuZCB0aGUgZ3JhcGhpYyB1c2VyIGludGVyZmFjZSBzaG91bGQgYmUgdXNlciBmcmllbmRseS4gClJldmlldyB0aGUgYmFzaWNzLiBSdWxlIG91dCBhbnkgb2YgdGhlIHNpbXBsZSBzb2x1dGlvbnMgZmlyc3QuIApJIGp1c3QgY2FtZSBiYWNrIGZyb20gYSBxdWl0ZSB3aWxkIGhhcHB5IGhvdXIgTWFyZGkgR3JhcyBwYXJ0eS4gSSBkaWQgbm90IGRyaW5rIGF0IGFsbC4gSW4gZmFjdCBJIHN0aWxsIGdvIHRvIHBhcnRpZXMgYW5kIGRhbmNlIGFuZCB3aGF0ZXZlciBqdXN0IGV2ZW4gd2l0aG91dCBkcmlua2luZy4gU28gSSB0aGluayB5b3UgY2FuIHN0aWxsIGN1dCBsb29zZSBnZXQgd2lsZCB3aGF0ZXZlciBhbmQgZXZlbiBjb2xsZWN0IGJlYWRzIDogKSB3aXRob3V0IGRyaW5raW5nLgpJdCBuaWNlIHRoYXQgeW91IGNvdWxkL2NhbiB0YWtlIG91dCB0aGUgdHJhc2guIEdvb2QgZm9yIHlvdS4gVW5mb3J0dW5hdGVseSB0aGF0IG5vdCB0aGUgY2FzZSBmb3IgZXZlcnlvbmUuIElmIHlvdXIgbm90IHNlZWluZyB0aGF0IEkgc29ycnksIGJlY2F1c2UgeW91IGFyZSBjbGVhcmx5IHRha2luZyB5b3VyIG93biBzaXR1YXRpb24gYW5kIGFwcGx5aW5nIGl0IHRvIGV2ZXJ5b25lIGVsc2UuCk1yIFdpbGtpZSBzYWlkIHRoZSBpbmZvcm1hdGlvbiBvYnRhaW5lZCBieSB0aGUgQUJDIHNob3dzIHRoZSBpbnZlc3RpZ2F0aW9uIGRpZCBub3QgbWVldCBwcm9wZXIgc3RhbmRhcmRzLgpTbyBpdCBhIG1pc3NlZCBidXNpbmVzcyBvcHBvcnR1bml0eSBhdCB0aGUgdmVyeSBsZWFzdC4gCkFyZSB0b3hpbnMgcmVsZWFzZWQgaW4gdGhlIGJvZHkgZHVyaW5nIG1hc3NhZ2UKQ291bnNlbGluZyBpcyBoaWdobHkgcmVjb21tZW5kZWQsIGhlIGdvaW5nIHRvIHJlc2lzdCB0aGlzIHRob3VnaC4gClN1cm5vbW1lIGxhICJKcnVzYWxlbSBkZSBsJ091ZXN0IiBwb3VyIHNlcyBtYWlzb25zIHRyb2dsb2R5dGlxdWVzIGVuIHBpZXJyZSBjcmV1c2VzICBmbGFuYyBkZSByYXZpbiAobGVzICJzYXNzaSIpLCBNYXRlcmEgZXN0IGNvbnNpZHJlIGNvbW1lIGxhIHRyb2lzaW1lIHZpbGxlIGxhIHBsdXMgYW5jaWVubmUgZHUgbW9uZGUgYXBycyBBbGVwIChTeXJpZSkgZXQgSnJpY2hvIChDaXNqb3JkYW5pZSkuIExlIGNpbm1hIGEgYXVzc2kgZmFpdCBhcHBlbCAgZWxsZSBwb3VyIHJlY3JlciBsZSBkY29yIGltYWdpbmFpcmUgZGUgbCdhbnRpcXVpdCBjaHJ0aWVubmUgZGFucyAiTCdFdmFuZ2lsZSBzZWxvbiBTYWludCBNYXR0aGlldSIgKDE5NjUpIGRlIFBpZXIgUGFvbG8gUGFzb2xpbmkgb3UgIkxhIFBhc3Npb24gZHUgY2hyaXN0IiAoMjAwNCkgZGUgTWVsIEdpYnNvbi4gIkMnZXN0IHZyYWksIG5vdXMgc29tbWVzIHBhc3NzIGRlIGxhIGhvbnRlICBsYSBnbG9pcmUiLCBjb25maWUgc29uIG1haXJlLCBSYWZmYWVsbG8gRGUgUnVnZ2llcmksIHF1aSBjaGVyY2hlIG1haW50ZW5hbnQgIHZpdGVyIGxlcyBlZmZldHMgZCd1biB0b3VyaXNtZSBkZSBtYXNzZTogIk1hdGVyYSBuJ2EgcGFzIGJlc29pbiBkJ3VuIHRvdXJpc21lIGVycmFudCBpbmNvbnNjaWVudCBkZXMgbGlldXgsIGRlIGwnaGlzdG9pcmUgZXQgZGVzIHRyYWRpdGlvbnMgZGUgbm90cmUgdmlsbGUiLi4gCldoeSBkbyBQYWtpc3RhbmkgR3JhZGUgMjIgb2ZmaWNlcnMsIGZlZGVyYWwgbWluaXN0ZXJzIGFuZCBnZW5lcmFscyBzcGVuZCB0aGlzIG11Y2ggdGltZSBhbmQgZWZmb3J0IG9uIHRoZWlyIHNhbGVzJyBwaXRjaGVzIHRvIHRoZWlyIEFtZXJpY2FuIGNvdW50ZXJwYXJ0cz8gU2ltcGx5IHB1dCwgZ2V0dGluZyB0aGUgQW1lcmljYW4gdGF4cGF5ZXIgdG8gZm9vdCB0aGUgYmlsbCBmb3IgdGhlaXIgcHJvamVjdHMgICB3aGV0aGVyIGl0IGlzIGdldHRpbmcgbmV3IGhlbGljb3B0ZXJzIGZvciB0aGUgZmlnaHQgaW4gV2F6aXJpc3RhbiwgbmV3IGJyaWRnZXMgZm9yIFN3YXQsIGEgbmV3IGhvc3BpdGFsIGluIE1pYW53YWxpLCBvciBuZXcgc2Nob29scyBmb3Iga2lkcyBpbiBKYWNvYmFiYWQgICBhbGxvd3MgdGhlIERNRyBvZmZpY2VycywgdGhlIHBvbGl0aWNpYW5zLCBhbmQgdGhlIGdlbmVyYWxzIHRoYXQgcnVuIFBha2lzdGFuIHRvIGhvbGQgZmlybSB0byB0aGVpciBmaWcgbGVhdmVzLiBVUyB0YXhwYXllciBtb25leSwgdGhleSBob3BlLCB3aWxsIGFsbG93IHRoZW0gdG8ga2VlcCB0aGluZ3MgYXMgdGhleSBhcmUsCllvdSBjYW4gZ2V0IGl0L3RoZW0gZnJvbSBpVHVuZXMuIApJIHdhc24gbGl0ZXJhbGx5IGNhbXBpbmcsIEkganVzdCBuZXZlciBsZWZ0IHRoZSBib3JkZXIgcmVnaW9uLiBJIGxpdmVkIGluIGhvdGVscy4gTXkgaG90ZWwgaW4gVHVsY2FuIHdhcyAkMTUgdXNkIGEgbmlnaHQgKHRoZXkgdXNlIFVTRCB0aGVyZSkgYW5kIG15IGhvdGVscyBpbiBJcGlhbGVzLCBDT2xvbWJpYSB3ZXJlIHNsaWdodGx5IG1vcmUgZXhwZW5zaXZlLiBCZXR3ZWVuIG9ubGluZSBwb2tlciB3aW5uaW5ncyBhbmQgY29udGVudCBjcmVhdGlvbiBJIGRpZCBhbHJpZ2h0LiBBY3R1YWxseSBJIGhhZCBhIHR3byB3ZWVrIHN0cmV0Y2ggaW4gSXBpYWxlcyB3aGVyZSBJIHdvbiBhYm91dCAkNzUwMC4gQWN0dWFsbHkgSSB3YXMgc3Rha2VkIHNvIEkgd29uICQxNSwwMDAgYnV0IG9ubHkgZ290IHRvIGtlZXAgaGFsZiBvZiBpdC4gU28gSSBib3VnaHQgYSBzdGF0ZSBvZiB0aGUgYXJ0IGxhcHRvcCBhbmQgYm9va2VkIGEgZmxpZ2h0IHRvIEFzaWEuIE15IGV4cGVuc2VzIHdlcmUgbW9kZXJhdGUsIEkgd291bGQgcHJvYmFibHkgc3BlbmQgYWJvdXQgJDE1IDIwIGEgZGF5IG9uIGF2ZXJhZ2Ugb24gZm9vZCBhbmQgZW5lcmd5IGRyaW5rcyBhbmQgaWNlIGNyZWFtLiBUaGF0IGlzIGNvdW50aW5nIHJlc3RhdXJhbnRzIHRocmVlIHRpbWVzIGEgZGF5LiBHYWluZWQgYSB0b24gb2Ygd2VpZ2h0LgpNb3JlIGdlbmVyYWxseSwgSSB0aGluayBjb25zcGlyYWN5IHRoZW9yaWVzIGhhdmUgYSBrZXJuZWwgb2YgaGVhbHRoeSBza2VwdGljaXNtIG9mIGhvdyBlY29ub21pYyBhbmQgcG9saXRpY2FsIHBvd2VyIHdvcmtzLCBidXQgdGhleSBhY3R1YWxseSBjb250cmlidXRlIHRvIHRoZSBhYnVzZSBvZiBwb3dlciBiZWNhdXNlIHRoZXkgb2JzY3VyZSBpdC4gCldoYXQgd2UncmUgZmluZGluZyBpbmNyZWFzaW5nbHksIHdpdGggZGF0YSBhbmQgdGVjaG5vbG9neSBhbmQgYW5hbHl0aWNzLCB3ZSBjYW4gZG8gaXQgb3Vyc2VsdmVzLiAKVGhlbiBjYWJhbCBpbnN0YWxsIGludHJvZHVjZWQgc2FuZGJveGVzLCBhbmQgbm93IGNhYmFsIG5ldyBidWlsZCwgYnV0IGNhYmFsIGluc3RhbGwgc3RpbGwgZG9lcyB0aGUgd3JvbmcgdGhpbmcgYnkgZGVmYXVsdCB3aGVuIHlvdSBydW4gY2FiYWwgaW5zdGFsbCwgd2hpY2ggaXMgd2hhdCA5MCUgb2YgdHV0b3JpYWxzIGFuZCBSZWFkbWUgZmlsZXMgc3RpbGwgaW5jb3JyZWN0bHkgYWR2aXNlIHVzZXJzIHRvIGRvLiAKSSBhbHdheXMgZmVsdCB0aGF0IEkgc2hvdWxkIG1ha2Ugc291bmRzIG9ubHkgaWYgdGhleSB3ZXJlIHNvIHBvd2VyZnVsIHRoYXQgdGhleSBjb3VsZCBub3Qgb3RoZXJ3aXNlIGJlIHN0b3BwZWQgdGhhdCB0aGUgb25seSB3YXkgSSBmZWx0IHRoYXQgbXkgc2V4IHNvdW5kcyB3b3VsZCBiZSBhdXRoZW50aWMuIFRoZSBwaHlzaWNhbCBzZW5zYXRpb25zLCBpbiBteSBtaW5kLCBoYWQgdG8gbGVhZCB0byB0aGUgYXVkaWJsZS4uIApJdCB3YXMgY2x1dHRlcmVkIHdpdGggY29uZnVzaW5nIHN0dWZmLiAKV2UncmUgaGl0dGluZyBhbGwgaW5jb21lIGxldmVscyBhdCBldmVyeSBwcmljZSBwb2ludC4gClRyeSBhIGZldyBkcm9wcyBvbiB5b3Vyc2VsZiBhbmQgeW91J2xsIHNlZSB3aGF0IEkgbWVhbi4gCkRlc2NyaXB0aW9uIFRoZSBTdGFycyBHcm91cCBJbmMgaXMgYSBnYW1ibGluZyBjb21wYW55IHRoYXQgb3BlcmF0ZXMgb25saW5lLCBtb2JpbGUsIGFuZCBsYW5kIGJhc2VkIGNhc2lub3MuIEFtYXlhIGhvc3RzIHNlcnZpY2VzIG9ubGluZSB0aHJvdWdoIGJvdGggZGVza3RvcCBhbmQgbW9iaWxlIG91dGxldHMgYW5kIG9mZmVycyBib3RoIHJlYWwgYW5kIHNpbXVsYXRlZCBnYW1ibGluZywgd2l0aCBnYW1lcyBzdWNoIGFzIHBva2VyLiBBbWF5YSBvd25zIG9ubGluZSBidXNpbmVzc2VzIFBva2VyU3RhcnMsIEZ1bGwgVGlsdCwgQmV0U3RhcnMsIGFuZCBTdGFyRHJhZnQuIEZ1cnRoZXJtb3JlLCB0aGUgY29tcGFueSBob3N0cyBicmFuZGVkIHBva2VyIGV2ZW50cyBsaXZlIHRocm91Z2ggY2FzaW5vcyBhbmQgY29tcGV0aXRpb25zLCB3aGljaCBpbmNsdWRlIHRoZSBXb3JsZCBDaGFtcGlvbnNoaXAgb2YgT25saW5lIFBva2VyLiBGb3Igc3Vic2NyaWJlcnMgb25seS4KSSB3YXMgcGxheWluZyBhY2FkZW1pYyBjb25jZXJ0cyBmb3IgbXkgcHJvZmVzc29ycy4gTXkgb25seSBnb2FsIHdhcyB0byBnZXQgaW50byB0aGUgY29uc2VydmF0b3J5LiAKSW5kaXZpZHVhbHMgb3IgY3Jld3MsIGxpa2UgeW91ciBjcmV3IGluIHRoZSB3YXIgc3RvcnksIHdlcmUgZmluZSwgYnV0IG5vdCB0aGUgR2VybWFucyBhcyBhIHdob2xlbS4uIApSZW1vdmVkLiBZb3UgYXJlIG92ZXIgc2ltcGxpZnlpbmcgYSB2ZXJ5LCB2ZXJ5IGNvbXBsZXggcHJvY2Vzcy4gRm9yIG1vc3QgcGVvcGxlLCBpdCBpc24gZ29pbmcgdG8gYmUgYXMgc2ltcGxlIGFzIGp1c3Qgbm90IHRoaW5raW5nIGFib3V0IHRoZSBwYXN0LiBUcmF1bWEgaXMgYSByZWFsIHRoaW5nIGFuZCB0cmF1bWEgZG9zZW4gYWxsb3cgcGVvcGxlIHdobyB3YW50IHRvIHN0b3AgdGhpbmtpbmcgYWJvdXQgdGhlIHBhc3QgdG8gZG8gc28uIElmIGl0IHdhcyBhcyBzaW1wbGUgYXMgZm9yZ2V0dGluZyB0aGUgcGFzdCwgdGhlc2Ugc3VwcG9ydCBncm91cHMgd291bGQgbm90IGV4aXN0LgpOaWJBdHRhY2tBcnQgIDE0IHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCklzIHRoaXMgZ29pbmcgdG8gZHJhdyBtb3JlIG9yIGxlc3MgcGVvcGxlIHRvIHlvdXIgInNpZGUiIG9mIHRoZSBhcmd1bWVudC4gV2hlbiB5b3UgcmVmbGV4aXZlbHkgYWNjdXNlIGFueW9uZSB0aGF0IG9wcG9zZXMgYW55dGhpbmcgeW91IHdhbnQgdG8gZG8gcmVnYXJkaW5nIHJhY2Ugb3IgYW55IGZyYW1lIHlvdSBoYXZlIGZvciByYWNlIGFzIHJhY2lzdCwgeW91IGRyaXZlIHBlb3BsZSBhd2F5LiAKSSBoYXZlIHBvdGVudGlhbCB0ZW5hbnRzIHdobyB3YW50IHRvIGxlYXNlIG15IHdob2xlIGhvdXNlIGFuZCB0aGV5J3JlIHdpbGxpbmcgc2lnbiBhIHllYXIgbGVhc2UgYW5kdG8gcHJlIHBheSBmb3IgMTIgbW9udGhzIGFzIGxvbmcgYXMgSSBhZ3JlZSB0byBoYXZlIG91ciB1bmZpbmlzaGVkIGJhc2VtZW50IGZpbmlzaGVkLgpQb2tlciBQbGF5ZXJzIEFyZSBOZWFybHkgQXMgU2tpbGxlZCBBcyBCYXNlYmFsbCBQbGF5ZXJzCllvdSB3YW50IG1lIHRvIGJlbGlldmUgdGhhdCB0aGUgbW9zdCBwb3dlcmZ1bCBuYXRpb24gaW4gdGhlIHdvcmxkIGlzIGJlaW5nIGhlbGQgaG9zdGFnZSBieSB0aG9zZSBza2lubnksIGxpY2UgY292ZXJlZCwgaWxsaXRlcmF0ZSwgZGlydHkgbWVuIGluIHRob3NlIGNyYWdneSBoaWxscyBvZiB0aGlzIGJyb2tlbiBjb3VudHJ5PyIKNCkgd2hhdHMgYSBnb29kICUgd2luIG9uIGEgd2Vla2x5L21vbnRobHkgYmFzaXMgdGhhdCBpIHNob3VsZCBhaW0gZm9yPyBJIHBsYXkgMTAvMjAgYW5kIDE1LzMwLiBJcyBkb3VibGluZyBteSBiYW5rcm9sbCBmcm9tIDEwMCB0byAyNTBpc2ggaW4gYSBjb3VwbGUgd2Vla3MgdG9vIG11Y2g/Ckkgc2F3IHlvdXIgcG9zdCBvdmVyIG9uIHRoZSBDaGVmIHN1YnJlZGRpdCB0aGUgb3RoZXIgZGF5LiBZb3UgYXJlIG5vdCB3cm9uZyBhbmQgSSB1bmRlcnN0YW5kIHlvdXIgY29uY2VybnMsIGJ1dCBQdXBwZXQgaGFzIHRoZSBzYW1lIHByb2JsZW0uIEkgcnVuIGEgcHJldHR5IGJpZyBQdXBwZXQgaW5mcmFzdHJ1Y3R1cmUgaW4gYSBsYXJnZSBlbnRlcnByaXNlLiAKQ2hlY2sgdG8gc2VlIHRoZSBwb3dlciBsaWZlIG9mIGEgdHJhY2tlciBmaXJzdCBiZWZvcmUgYnV5aW5nIGl0LiAKUmV5ZXMgbWF5IGJlIGEgRGVtb2NyYXQsIGJ1dCBoZSBhbHNvIGEgaGlnaGx5IGNvbnNlcnZhdGl2ZSBEZW1vY3JhdCB3aG8gaGFzIGEgY2VydGFpbiBsb3ZlIGZvciBhbGwgdGhpbmdzIG1pbGl0YXJpc3RpYy4gCjEwdGhUQVJESVMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClRoZW4gd2UgZ2V0IHRvIHRoZSBwYXJ0IHdoZXJlIHBlb3BsZSBzdGFydCB0byBkaXZlcmdlIGluIGludGVycHJldGF0aW9uLiBXaGVuIHRoZSB3b3JrZXJzIHJldm9sdGVkIE1hcnggYmVsaWV2ZWQgdGhleSB3b3VsZCBmb3JtIHNvbWV0aGluZyBjYWxsZWQgdGhlICJkaWN0YXRvcnNoaXAgb2YgdGhlIHByb2xldGFyaWF0Ii4gVGhpcyBib2R5IHdvdWxkIGJhc2ljYWxseSB0cmFuc2l0aW9uIHRoZSBzb2NpZXR5IHRvIENvbW11bmlzbS4gTm93IHRoZXJlIGFyZSB0aGluZ3MgaXQgd291bGRuJ3QgZG8sIGl0IHdvdWxkbid0IGtpbGwgdGhlIENhcGl0YWxpc3QgY2xhc3MsIGl0IHdvdWxkbid0IHNldCB1cCBndWxhZ3MgYXJlIGFueXRoaW5nLiAKUHNpbW9uODggIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGhvdXJzIGFnbwpVbmxpa2Ugc2NpZW5jZSBmaWN0aW9uLCBpbiByZWFsaXR5IHRoZXJlIGFyZSBubyB2aWRlb3Mgb3Igc2Nhbm5lcnMgdGhhdCBjYW4gcmVjb3JkIHRoZSBpbWFnZXMgc2VlbiB3aXRoaW4gdGhlIG1pbmQsIGFuZCBzbyB0aGVyZSBpcyBubyB3YXkgdG8ga25vdyB3aGV0aGVyIHR3byBwZW9wbGUgY2FuIGRyZWFtIHRoZSBzYW1lIGRyZWFtLiBBTlNXRVIgV2hldGhlciBvciBub3QgdHdvIHBlb3BsZSBhcmUgdHdpbnMsIHRoZXkgY2FuIGhhdmUgZHJlYW1zIHdpdGggdGhlIHNhbWUgdGhlbWUsIG9yIHdpdGggbWF0Y2hpbmcgZGV0YWlscy4gCk15IGZhdGhlciBhbHNvIGhvcGVkIE1vcmdhbiBTdGFubGV5IHdvdWxkIGJlIGFibGUgdG8gaGVscCBoaW0gZmluZCBhIHN0cmF0ZWdpYyBwYXJ0bmVyIHRvIGltcHJvdmUgVEhQJ3Mgb3BlcmF0aW9uYWwgcHJvY2Vzc2VzIGFuZCBidWlsZCBhbiBleHBvcnQgYnVzaW5lc3MuIFRoZSBjb21wYW55IHdhcyBiZWNvbWluZyBmYXIgdG9vIGJpZyBmb3Igb25lIHBlcnNvbiB0byBtYW5hZ2UgYW5kIGhlIHdhbnRlZCB0byBpbnZlc3QgaW4gdGhlIHJpZ2h0IElUIGFuZCBtYW5hZ2VtZW50IHN5c3RlbXMgdG8gbWFpbnRhaW4gY29udHJvbC4gV2hlbiBDb2tlIGZvdW5kIG91dCwgdGhleSB3ZXJlIHF1aWNrIHRvIGFwcHJvYWNoIHVzIGZvciBleGNsdXNpdmUgbmVnb3RpYXRpbmcgcmlnaHRzIGFuZCB3ZSBhZ3JlZWQuCklmIHlvdSdyZSBzZWVraW5nIGEgcXVhbGlmaWVkIHRyYWRpdGlvbmFsIENoaW5lc2UgaGVyYmFsaXN0LCB0aGUgTkNDQSBhbHNvIHByb3ZpZGVzIGEgbGlzdCBvZiBwcmFjdGl0aW9uZXJzIHdobyBoYXZlIHBhc3NlZCB0aGVpciBleGFtIG9uIGhlcmJhbCBtZWRpY2luZS4gT3RoZXJ3aXNlLCBhIGdvb2QgcGxhY2UgdG8gbG9vayBpcyBDYWxpZm9ybmlhLiBBcyBvZiB0aGlzIHdyaXRpbmcsIGl0IGlzIHRoZSBvbmx5IHN0YXRlIHRoYXQgcmVxdWlyZXMgYSBwcmFjdGl0aW9uZXIgdG8gYmUgcHJvZmljaWVudCBpbiBoZXJiYWwgbWVkaWNpbmUgaW4gb3JkZXIgdG8gcGFzcyB0aGUgc3RhdGUgbGljZW5zaW5nIGV4YW0uIApMJ2FydGljbGUgMm5kIGRlIGxhIGxvaSByZXByZW5kIGVuIGNlcyB0ZXJtZXMgY2V0dGUgcHJvcG9zaXRpb24gOiAgSWwgeSBhdXJhIGRhbnMgY2hhcXVlIGRwYXJ0ZW1lbnQgdW4gcHJmZXQsIHVuIGNvbnNlaWwgZGUgcHJmZWN0dXJlLCBldCB1biBjb25zZWlsIGducmFsIGRlIGRwYXJ0ZW1lbnQgbGVzcXVlbHMgcmVtcGxpcm9udCBsZXMgZm9uY3Rpb25zIGV4ZXJjZXMgbWFpbnRlbmFudCBwYXIgbGVzIGFkbWluaXN0cmF0aW9ucyBldCBjb21taXNzYWlyZXMgZGUgZHBhcnRlbWVudCAsIGNvbXBsdCBwYXIgbCdhcnRpY2xlIDMgOiAgTGUgcHJmZXQgc2VyYSBjaGFyZyBzZXVsIGRlIGwnYWRtaW5pc3RyYXRpb24gLiAKVGhlIG1haW4gZ2FpbnMgYXJlIGluIGluY3JlYXNlZCByZWxpYWJpbGl0eSwgZHVlIHRvIGZld2VyIGluZGVwZW5kZW50IHBhcnRzIGluIGVuZ2luZXMsIG1vcmUgcmVkdW5kYW5jeSBhbmQgYWJpbGl0eSB0byB0cm91Ymxlc2hvb3QsIGR1ZSB0byBzZW5zb3JzIGJlaW5nIHRpbnkgYW5kIGxpZ2h0d2VpZ2h0LCBjcml0aWNhbGx5LCBiZWluZyBlbGVjdHJvbmljLiAKRklMRSAgIEluIHRoaXMgRmViLiA1LCAyMDE3LCBmaWxlIHBob3RvLCBMYWR5IEdhZ2EgcGVyZm9ybXMgZHVyaW5nIHRoZSBoYWxmdGltZSBzaG93IG9mIHRoZSBORkwgU3VwZXIgQm93bCA1MSBmb290YmFsbCBnYW1lIGJldHdlZW4gdGhlIE5ldyBFbmdsYW5kIFBhdHJpb3RzIGFuZCB0aGUgQXRsYW50YSBGYWxjb25zIGluIEhvdXN0b24uIFN0YXJidWNrcyBhbm5vdW5jZWQgSnVuZSAxMiwgMjAxNywgdGhhdCBpdCB0ZWFtaW5nIHdpdGggR2FnYSBmb3IgYSBzZXQgb2YgYnJpZ2h0bHkgY29sb3JlZCBzdW1tZXJ5IGRyaW5rcyB0aGF0IHdpbGwgcmFpc2UgbW9uZXkgZm9yIHRoZSBzaW5nZXIgZm91bmRhdGlvbi4gKEFQIFBob3RvL01hdHQgU2xvY3VtLCBGaWxlKQpTb21lIG9mIHRoZXNlIGp1c3QgaW5mb3JtIHRoZSBjZWxsIG9mIHdoYXQgcmVzb3VyY2VzIGl0IGhhcyBhdmFpbGFibGUgdG8gaXQsIGFuZCB0aGUgY2VsbCBjaGFuZ2VzIGl0cyBtZXRhYm9saXNtIGFjY29yZGluZ2x5LiBPdGhlcnMgYXJlIHN0cm9uZyBzaWduYWxzLCB3aGF0IHdlIGNhbGwgZ3Jvd3RoIGZhY3RvcnMgb3IgbW9ycGhvZ2VuaWMgZmFjdG9ycyB3aGljaCBhY3RpdmF0ZSB0aGUgZXhwcmVzc2lvbiBvZiBnZW5lcyB0aGF0IGFyZSBvdGhlcndpc2Ugc2lsZW50LCBhbmQgd2hpY2ggYmVnaW5zIHRoZSBjZWxscyB0cmFuc2Zvcm1hdGlvbiBwcm9jZXNzIGludG8gYSBzcGVjaWZpYyBjZWxsIHR5cGUuLiAKTWF3ZWtpICAyIHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvClNraXBwZXIgSGFrZSBoYWQgbG9zdCB0aGUgdG9zcyBzbyB3ZSB3ZXJlIGVsZWN0ZWQgdG8gZ28gMm5kLiBZb3VuZyBMYW1icyBtYWRlIGEgZ29vZCBzdGFydCBvZiA2OSwgYnV0IHRoYW5rcyB0byBzdGVhZHkgOCdzIDkncyBhbmQgYSAxMyBzcGFyZSBmcm9tIFJlZWwgJ2VtIEluIHdlIG1hZGUgNzEgdG8gZ28gMiB1cC4gCkJlY2F1c2UgU2VuLiBMaW5jb2xuIGlzIGEgZmF2b3JpdGUgb2YgYmlnIGNvcnBvcmF0aW9ucywgc2hlIHN0aWxsIGhhcyBtaWxsaW9ucyBpbiB0aGUgYmFuayBhbmQgc2hlIHNwZW5kIGFsbCBvZiBpdCBzbWVhcmluZyBCaWxsIEhhbHRlci4uIApNYXkgbm90IHJlcGVhdC4uIApSaXZlciBIb3VzZSAod2hpY2ggZmFtb3VzbHkgZ2F2ZSBib3RoIFJpY2hhcmQgTml4b24gYW5kIEdsb3JpYSBWYW5kZXJiaWx0IHRoZSBmaW5nZXIpIHdhcyByZWR1Y2VkIHRvIGFsbG93aW5nIGFjdHJlc3MgVW1hIFRodXJtYW4gdG8gcHVyY2hhc2UgYSAxMiByb29tIHNwcmVhZCBhdCBhbiAkOC41IG1pbGxpb24gZGlzY291bnQuLiAKV2hhdCB0aGV5IGVuY291bnRlcmVkIGluIElyYXEgKGFuZCBmb3Igc29tZSByZWFzb24gdGhleSBoYWQgYWxsIHNlcnZlZCBpbiBJcmFxKSB3YXMgcmFjaXNtIGFnYWluc3QgdGhlIElyYXFpIHBlb3BsZSwgcmVsaWdpb3VzIGJpZ290cnksIGFuZCBldmVuIHJhY2lzbSBhbmQgcmVsaWdpb3VzIGJpZ290cnkgd2l0aGluIHRoZSBtaWxpdGFyeSBpdHNlbGYuIApbQnJpc29uIGRlcGFydHVyZV0gbGVmdCB1cyB0d28gbGFyZ2UgY2hhbGxlbmdlcyB0aGF0IGNvdWxkIG5vdCBiZSBzb2x2ZWQgd2l0aCBvbmUgcGVyc29uLiBXZSBuZWVkZWQgYSBOb3ZhIFNjb3RpYSBtaW5pc3RlciBhbmQgYSBUcmVhc3VyeSBCb2FyZCBjaGFpciB3aXRoIG1pbmlzdGVyaWFsIGV4cGVyaWVuY2UuIE5vIE5vdmEgU2NvdGlhbiBleGNlcHQgTXIuIApMZXZlbCB5YW5nIGJlcnRhbWJhaCBtZW1iZXJpa2FuIGFrc2VzIHRlcmhhZGFwIG1lamEsIHBlbmNhcGFpYW4sIHNlcnRhIGhhZGlhaCBoYWRpYWggYmFydS5BbmRhIGJpc2EgbWVuaW5qYXUgcHJvZmlsIEFuZGEgZGVuZ2FuIG1lbmdrbGlrIHRvbWJvbCBQcm9maWxlIGRpIHNpc2kga2lyaSBiYXdhaC4gCkhvd2V2ZXIsIHNvbWUgaGlnaGx5IHN1Y2Nlc3NmdWwgcG9saXRpY2FsIGxlYWRlcnMgaW4gdGhlIHBhc3Qgd2VyZSBoYXJkbHkgZ3JlYXQgbmVnb3RpYXRvcnMuIApCdXQgYmVpbmcgZ2F5IGlzIG9uZSBvZiB0aGUgcmVhc29ucyBJIGFsc28gd2FudCB0byBsZWF2ZS4uIApIaXMgd2lmZSwgRWxpemFiZXRoLCB1bmRlcmdvZXMgcGVsdmljIHN1cmdlcnkgYXQgU3QgR2VvcmdlIEhvc3BpdGFsIG9uIE1vbmRheS4gS3lsZSBzYWlkIGhpcyBmYXRoZXIgd2FzIGEgc2VsZmxlc3MsIGJpZyBoZWFydGVkIG1hbiB3aG8gYWx3YXlzIHB1dCBvdGhlcnMgYmVmb3JlIGhpbXNlbGYuIApUaGlzIGNhbiBhbHNvIGJlIHVzZWQgYWdhaW5zdCB0aGUgIkJ1dCBpdCBkb2VzbiBtYXR0ZXIiLyJTaGUgbm90IGdvbm5hIHN0b3Agbm8gbWF0dGVyIHdoYXQgSSBzYXkiLyJKdXN0IGlnbm9yZSBoZXIsIGV2ZXJ5b25lIGRvZXMiIGV4Y3VzZXMuIFRoZSBwcmltYXJ5IHJlYXNvbiBGcmllbmQgd2FudHMgQkYgdG8gdGVsbCBNSUwgb2ZmIGlzbiBzbyBNSUwgd2lsbCBzdG9wIChhbHRob3VnaCBpdCB3b3VsZCBiZSBncmVhdCBpZiBzaGUgZGlkKSwgaXQgaXMgc28gRnJpZW5kIGNhbiBrbm93LCBzZWUsIGhlYXIsIGFuZCBmZWVsIHRoYXQgQkYgdGhpbmtzIE1JTCBpcyB3cm9uZy4gCkFmdGVyIGEgZmV3IGRheXMgb2YgY29tcGV0aWlvbiwgQWxpIEF5dWIgKEdQSTk3MTA5KSBlbmRlZCB1cCB3aXRoIHRoZSB0aXRsZSwgdGFraW5nIGhvbWUgNDAsMjU1LiAKRWxsZSBoIEQgY2VydGFpbmUgZmEgb3VpLCBlbGxlIGxlIHJlZ3JldHRlLiBFbGxlIHBlbnNhaXQgc2UgZCBkIHBvaWRzLiAKSXQgYWxzbyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHN0YXJ0aW5nIGluIHNlYXNvbiAxNCwgdGhlcmUgaGF2ZSBiZWVuIHNlYXNvbmFsIGJ1ZmZzIGFkZGVkLiBTZWFzb24gMTQgd2FzIGRvdWJsZSBnb2JsaW4gc3Bhd24sIHNlYXNvbiAxNSB3YXMgZG91YmxlIGJsb29kIHNoYXJkcywgYW5kIHRoaXMgc2Vhc29uIGFsbCBjaGFyYWN0ZXJzIGhhdmUgdGhlIFJvUkcgYnVmZiB3aXRob3V0IGl0IGVxdWlwcGVkIG9yIGluIGN1YmUuIApIb3RlbHMsIGNvbWJpbmVkIGZvciBCYXRodXJzdCBhbmQgT2Jlcm9uLCBtYWRlICQzLjIgbWlsbGlvbiBmcm9tIDE1OSBtYWNoaW5lcyBhdCAyMCBwbGFjZXMuCkluIG1pZCBldmVuaW5nLCBJIHdhbGsgdGhlIHNpZGV3YWxrOyBub3QgYSBjcmVhdHVyZSBpcyBzdGlycmluZyBhbG9uZyBhIHJvdyBvZiBkYXJrIHN0b3JlZnJvbnRzIGFjcm9zcyBNYWluIFN0cmVldCBmcm9tIHRoZSBjYXNpbm8uIEkgYXNrZWQgTUdNIFNwcmluZ2ZpZWxkIHByZXNpZGVudCBNaWNoYWVsIE1hdGhpcyBhYm91dCB0aGlzIG9uIHRoZSBwaG9uZSBsYXRlci4KTjMuIFdpdGhpbiBmaXZlIHNlY29uZHMsIGJlZ2luIGVudGVyaW5nIHlvdXIgcGVyc29uYWwgZml2ZSBkaWdpdCBjb2RlLiBuKEVhY2ggc3Vic2VxdWVudCBrZXlwcmVzcyBtdXN0IGJlIHdpdGhpbiBmaXZlIHNlY29uZHMgb2YgdGhlIHByZXZpb3VzKSBuLgpJdHMgb3VyIHBsZWFzdXJlIHRoYXQgeW91IGhhdmUgYmVlbiBpbXByZXNzZWQgYnkgdGhlIHdheSBob3cgdGhlIGZvcm1lciBadXJpY2ggYmVlciBicmV3ZXJ5IGhhcyBiZWVuIHRyYW5zZm9ybWVkIGludG8gdGhpcyBsaXR0bGUgaGlkZWF3YXkgYW5kIHRoYXQgeW91IGZvdW5kIHNvbWUgdGltZSB0byBwYW1wZXIgeW91cnNlbGYgYXQgdGhlIGxpbmtlZCBwdWJsaWMgVGhlcm1hbGJhdGggU3BhLiBXZSBhcmUgdmVyeSBtdWNoIGxvb2tpbmcgZm9yd2FyZCB0byB5b3VyIG5leHQgdmlzaXQhIFlvdXIgQjIgR3Vlc3QgQW1iYXNzYWRvciBBcmlhbmUgRHJvc3NSZXNwb25zZSBmcm9tIEIyQm91dGlxdWVIb3RlbCwgRGlyZWN0b3Igb2YgU2FsZXMgYXQgQjIgQm91dGlxdWUgSG90ZWwgKyBTcGFSZXNwb25kZWQgSmFuIDMwLCAyMDE5RGVhciBPZHlzc2V5NDkwNDY0NTY4MDAgTWFueSB0aGFua3MgZm9yIHRoaXMgYW1hemluZyByZXZpZXcuIEkgYW0gc28gcHJvdWQgdG8gaGVhciB0aGF0IHlvdSBjYWxsIG91ciBsaXR0bGUgaGlkZWF3YXkgYSBNVVNUIHZpc2l0IGluIFp1cmljaCBhbmQgdGhhdCB5b3UgZW5qb3llZCB0aGUgd2F5IGhvdyBvdXIgbGl0dGxlIGhpZGVhd2F5IGhhcyBiZWVuIHRyYW5zZm9ybWVkIGZyb20gYSBiZWVyIGJyZXdlcnkgaW50byBhbiB1cmJhbiBib3V0aXF1ZSBob3RlbC4gCkkgd2FzIGhhbW1lcmVkIGRydW5rIGFuZCBkb24gZXZlbiByZW1lbWJlciBmYWxsaW5nIGFzbGVlcC4gClR5cGljYWxseSwgSSB1cGRhdGUgaXQgb25jZSBldmVyeSA2IG1vbnRocyBvciBzby4gSSBsb29rIGF0IGEgZGVwZW5kZW5jeSBhbmQgZmluZCB0aGUgdmVyc2lvbnMgdGhhdCBhcmUgbm8gbW9yZSB0aGFuIGEgeWVhciBvbGQuIApJIGxpdmUgaW4gb25lIG9mIHRoZSBkb2RnaWVyIG5laWdoYm91cmhvb2RzIGluIE1lbGJvdXJuZSBhbmQga25vdyBhIGZldyBndXlzIHRoYXQgaGF2ZSBjb25jZWFsZWQga25pdmVzIHRoYXQgdGhleSBjYXJyeSB3aGVuIGdvaW5nIGZvciBldmVuaW5nIHdhbGtzIGFzIHRoZXkgZG9uIGZlZWwgc2FmZS4gSWxsZWdhbCwgYnV0IGl0IG1ha2VzIHNlbnNlIHRvIG1lLiBXZSBoYXZlIGFsbCBzb3J0cyBvZiBjcmF6aWVzIG9uIHRoZSBzdHJlZXRzIHNvbWV0aW1lcy4KU2hvcnQgb2YgdGhhdCwgSSB3b3VsZCBzZWUgaWYgdGhlcmUgaXMgYW55b25lIGtub3dzIGEgcmVsaWFibGUgdGF4aSBkcml2ZXIgdGhhdCB3b3VsZCBiZSBva2F5IHdpdGggYmVpbmcgJ29uIGNhbGwnIGZvciB0aGlzIGtpbmQgb2YgdGhpbmcuIEkgaGF2ZSBhIGZyaWVuZCB0aGF0IGhpdCBpdCBvZmYgd2l0aCBhIHRheGkgZHJpdmVyIGFuZCBjYWxscyBoaW0gZGlyZWN0bHkgZm9yIGFpcnBvcnQgZmFyZXMuIEhlIGdldHMgdGhlIGxhcmdlIGZhcmUsIHNoZSBnZXRzIHBlYWNlIG9mIG1pbmQgdGhhdCBoZSdzIG5vdCBhIHRvdGFsIHNrZWV6ZS4KTXkgc3VnZ2VzdGlvbiB3YXMgdG8gcG9pbnQgdG8gYSBkYXkgYW5kIGFnZSB3aGVuIHRoZXJlIHdhcyBubyB3aWRlc3ByZWFkIElNQVAgc3VwcG9ydCBmb3IgaG9tZSBJbnRlcm5ldCBlbWFpbCBjbGllbnRzLCBhbmQgbm90IGFsbCBlbWFpbCBzZXJ2aWNlIHByb3ZpZGVycyBzdXBwb3J0ZWQgaXQuCjEpIEtlbGx5LCBleCBIZWxseSBvciBleCBIZWxsbyBhY2NvcmRpbmcgdG8gTkY6IDEyNTAgMTQ0NSAoZXhjbHVkaW5nIDUgbWluIGFzIHRpcCksIDIwMEUsIFJvbSwgMTY1Y20sIGxvbmcgZGFyayBibG9uZGUsIHByZXR0eSwgc2xpbSBleGNlcHQgaGVyIFNpIHJhY2ssIDMgeWVhcnMgYXQgU2hhcmtzIHdpdGggaW50ZXJ2YWwsIGp1c3QgYXJyaXZlZCBhZnRlciBoZXIgdHdvIG1vbnRoIHJlc3QgYXQgaG9tZS4gSW4gYSByb29tIERGSywgaGFsbG8gQkosIDMwIG1pbiBEQVRZIHdpdGggaGVyIGludGVuc2UgTywgbWlzc2lvbmFyeSwgY293IGdpcmwsIGRvZ2dpZSwgbWlzc2lvbmFyeSwgREFUWSwgY29jYSBjb2xhIHJlc3QsIEJKLCA2OSwgMTVtaW4gREFUWSB3aXRoIGhlciBzZWNvbmQgaW50ZW5zZSBPIGFuZCBteSAyMCBtaW4gbWFzc2FnZSBvbiBoZXIgd2VyZSB3aGF0IHdlIGVuam95ZWQuIE11c3QgcmVwZWF0Li4gClRob3NlIDFrIHZpZXdlcnMgYXJlIHdhdGNoaW5nIHdpdGggdGhlIGtub3dsZWRnZSB0aGF0IHRoaXMga2luZCBvZiB0aGluZyB3aWxsIGhhcHBlbi4gCkxlIGpvdXIgbyBqJ2FpIGRjb3V2ZXJ0IHF1ZSBtb24gbWFyaSBhdmFpdCBjaG9pc2kgcG91ciBub3RyZSBmaWxzIGxlIHBybm9tIGQndW4gZW5mYW50IG1vcnQgZW4gYmFzIGdlIGRhbnMgc29uIGNsYW4sIGRvbnQgaWwgbmUgY29ubmFpc3NhaXQgYWxvcnMgbW1lIHBhcyBsJ2V4aXN0ZW5jZSwgamUgbWUgc3VpcyBkZW1hbmQgc2kgbGUgaGFzYXJkIGV4aXN0YWl0CjcxJSBvZiBsb3cgaW5jb21lIGhvdXNlaG9sZHMgZXhwZXJpZW5jZWQgYXQgbGVhc3Qgb25lIGNpdmlsIGxlZ2FsIHByb2JsZW0gaW4gdGhlIGxhc3QgeWVhciwgaW5jbHVkaW5nIHByb2JsZW1zIHdpdGggaGVhbHRoIGNhcmUsIGhvdXNpbmcgY29uZGl0aW9ucywgZGlzYWJpbGl0eSBhY2Nlc3MsIHZldGVyYW5zJyBiZW5lZml0cywgYW5kIGRvbWVzdGljIHZpb2xlbmNlLgpQb2tlciBzdGFyIE1hcmsgU2VpZiBzYWlkIHRoYXQgYSBjYXNoIGdhbWUsIG5vIGxpbWl0IEhvbGRlbSBjYW4gYXBwZWFyIGxpa2UgeW91J3JlIHdhdGNoaW5nIGEgTmF0aW9uYWwgR2VvZ3JhcGhpYyBzaG93LiAKSSB0b3RhbGx5IGFncmVlLiBJIGZlZWwgbGlrZSB0aGUgcGhhcm1hY2V1dGljYWwgY29tcGFuaWVzIGhhdmUgYSBoYW5kIGluIGFsbCB0aGUgcHJvcGFnYW5kYSBiZWluZyBwdXNoZWQgb24gaGVyZS4gVGhleSBtYWtlIGEgbG90IG9mIG1vbmV5IGZyb20gdmFjY2luZXMgYW5kIGlmIHBlb3BsZSBzdGFydCBvcHRpbmcgdG8gbm90IHZhY2NpbmF0ZSB0aGF0IHdpbGwgYWZmZWN0IHRoZWlyIHByb2ZpdHMuIEkgbGlrZSBob3cgbmV3cyBzZWdtZW50cyB3aWxsIGhhdmUgb24gc29tZSB0ZWVuYWdlciB3aG8gc2F5cyB0aGVpciBwYXJlbnRzIGRpZG4gdmFjY2luYXRlIHRoZW0gYW5kIHRoZXkgZGVjaWRlZCB0byBnZXQgdGhlbSBvbiB0aGVpciBvd24uIFdlbGwgaWYgeW91IG1hZGUgaXQgdGhpcyBmYXIgYW5kIGFyZW4gZGVhZCBvciBzaWNrLCB0aGF0IGRvZXNuIHJlYWxseSBzYXkgbXVjaCBhYm91dCB2YWNjaW5lcyBkb2VzIGl0Pz8KU28gSSBmaWxsZWQgb3V0IHRoZSBsb3N0IGJhZyBwYXBlcndvcmssIGFuZCBJIGZlbHQgYSBsaXR0bGUgbmVydm91cy4gVGhlcmUgd2FzIG5vIGNvbXB1dGVyIHRvIHRlbGwgd2hlcmUgdGhlIGJhZyB3YXMuIEV2ZXJ5dGhpbmcgd2FzIG1hbnVhbC4gQXQgdGhpcyBwb2ludCBpdCB3YXMgMyBhbSBhbmQgSSBwcmVwYWlkIGEgdGF4aSBhbmQgd2VudCBvdXRzaWRlLiBUaGVyZSB3ZXJlIGh1bmRyZWRzIG9mIHBlb3BsZSB0aGVyZS4gSSBmb3VuZCB0aGUgdGF4aSBzb21laG93LCBhbmQgd2Ugc2V0IG9mZi4gVGhlIGNhciB3YXMgYW4gIkFtYmFzc2Fkb3IiLCBvZiB3aGljaCB5b3UgY2FuIGZpbmQgbWlsbGlvbnMgaW4gSW5kaWEuIEl0J3MgZGVmaW5pdGVseSByZW1pbmlzY2VudCBvZiBhIExhZGEgb3IgbWF5YmUgYSBUcmFiYW50LiBXaGljaCBtZWFucyBpdCBoYXMgY2hhcmFjdGVyIGFuZCBpcyBhIHBpZWNlIG9mCiJUaGUgcGFpbiBpcyBjb21wYXJhYmxlIHRvIGEgaG90IHBva2VyIGJlaW5nIHN0dWNrIGluIHlvdS4gSXQgYSBzZWFyaW5nIHBhaW4sIGl0IG5vdCBhIHRocm9iYmluZyBwYWluLCIgUmlja3dvb2Qgc2FpZC4KUmFua2VkIDZ0aCBpbiB0aGUgQ29tcGxldGUgVW5pdmVyc2l0eSBHdWlkZSAyMDE5LCB0aGUgQk51cnMgTnVyc2luZyBwcm9ncmFtbWUgaXMgdGF1Z2h0IGluIGEgTWVkaWNhbCBTY2hvb2wgYXQgdGhlIGhlYXJ0IG9mIHRoZSBVSyBsYXJnZXN0IGhlYWx0aGNhcmUgcmVnaW9uIGFuZCBwcm92aWRlcyB5b3Ugd2l0aCBwbGVudHkgb2Ygb3Bwb3J0dW5pdGllcyB0byBnYWluIGV4cGVyaWVuY2UgdHJlYXRpbmcgcGF0aWVudHMgZnJvbSBhIHdpZGUgcmFuZ2Ugb2YgZGlmZmVyZW50IGJhY2tncm91bmRzIGFuZCBjdWx0dXJlcy4KSSB0aGluayBNYXJzIFZvbHRhIGlzc3VlIGlzIHdpdGggdGhlIGZhbmJhc2UgYW5kIHRoZSBleHBlY3RhdGlvbnMgdGhhdCBjb21lIHdpdGggdGhlbSByYXRoZXIgdGhhbiB0aGUgbXVzaWMgaXRzZWxmLiAKRm9ydCBLbm94IHdpcmQgYWxsZW50aGFsYmVuIGZyIGdlaGFsdGVuLiAKSSBoYWQgYmVlbiBjb3ZlcmVkIGluIGZyZXNoIGJydWlzZXMgYWxsIG92ZXIgbXkgdGhpZ2hzIGFuZCBJIHdhcyBzbyBzb3JlIEkgd2FzIGFsbW9zdCBzd29sbGVuIHNodXQuIFRoZXJlIHdhcyBldmlkZW5jZSwgYnV0IEkgd2Fzbid0IGV2ZW4gZ2l2ZW4gYSBjaGFuY2UuIApUaGlzIG9waW5pb24gcGllY2UgaW4gUG9saXRpY28gTWFnYXppbmUgYXJndWVzIHRoYXQgUmVwdWJsaWNhbnMgaG9waW5nIHRoYXQgZm9ybWVyIE9oaW8gR292LiBKb2huIEthc2ljaCwgb3IgYW55IG90aGVyIGNhbmRpZGF0ZSwgd2lsbCBjaGFsbGVuZ2UgUHJlc2lkZW50IERvbmFsZCBUcnVtcCBmb3IgdGhlIEdPUCBub21pbmF0aW9uICJzaG91bGQgYmUgY2FyZWZ1bCB3aGF0IHRoZXkgd2lzaCBmb3IuIiBSaWNoIExvd3J5LCBlZGl0b3Igb2YgTmF0aW9uYWwgUmV2aWV3IGFuZCBhIFBvbGl0aWNvIGNvbnRyaWJ1dG9yLCBhcmd1ZXMsICJCZWNhdXNlIGEgcHJpbWFyeSBjaGFsbGVuZ2Ugd291bGQgbmF0dXJhbGx5IGNvbWUgZnJvbSB0aGUgbGVmdCwgaXMgdW5saWtlbHkgdG8gc3VjY2VlZCwgYW5kIGludm9sdmVzIGFsaWVuYXRpbmcgdGhlIEdPUCdzIGdyYXNzcm9vdHMsIGl0IGlzIG1vc3QgbGlrZWx5IHRvIGF0dHJhY3QgcGVvcGxlIHdobyBkb24ndCBoYXZlIGEgZnV0dXJlIGluIEdPUCBuYXRpb25hbCBwb2xpdGljcyBhbmQgbGFjayBjb25zZXJ2YXRpdmUgYm9uYSBmaWRlcy4iIEhlIGhhcyB0aGlzIHRvIHNheSBhYm91dCBLYXNpY2g6ICJPbiBwYXBlciwgT2hpbydzIEpvaG4gS2FzaWNoIGlzIGZvcm1pZGFibGUsIHRoZSBmb3JtZXIgdHdvIHRlcm0gZ292ZXJub3Igb2YgYSBtYWpvciBzdGF0ZSBhbmQgSG91c2UgUmVwdWJsaWNhbiBidWRnZXQgY2hhaXJtYW4uIEJ1dCBoZSB3YXMgYW4gZWRneSBmaWd1cmUgY2lyY2EgMTk5NS4gClRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgdGhhdCB3ZSBhcmVudCBmaWdodGluZyB0aHJvdWdoIGtvcmVhLCBvciB0aHJvdWdoIHZpZXRuYW0sIGV0Yy4gCldpdGggdG9wIHJhdGVkIHRvdXIgb3BlcmF0b3JzIGxpa2UgVHJpZ2FuYSBCb2F0IFRyaXBzLCBDYXBlIENydWlzZXIgYW5kIERvbHBoaW5zIERyaXZlbiBhbmQgZXF1aXBtZW50IHJlbnRhbCBidXNpbmVzcyBsaWtlIEFtYWRvIFN1cmZjYW1wIGFuZCBFeHRyZW1lIEFsZ2FydmUsIHRoZXJlIGlzIG5vIHNob3J0YWdlIG9mIHRoaW5ncyB0byBkby4gClBhcnRpY2lwYXRpb24gZG91YmxlZCBwcmV2aW91cyB5ZWFycycgdHVybm91dCBTYXR1cmRheSBhdCB0aGUgZWlnaHRoIGFubnVhbCBQb2tlciBSdW4gYXQgU2FuZCBIb2xsb3cgU3RhdGUgUGFyaywgSHVycmljYW5lLCBVdGFoLCBPY3QuIDI5LCAyMDE2ICBQaG90byBjb3VydGVzeSBvZiBTdGVwaGVuIFN0dWRlYmFrZXIsIFN0LiBBIDIwMTMgZ3JhZHVhdGUgb2YgQ29sb3JhZG8gVGVjaG5pY2FsIFVuaXZlcnNpdHksIENvZHkgZWFybmVkIGhlciBiYWNoZWxvcidzIGRlZ3JlZSBpbiBjcmltaW5hbCBqdXN0aWNlIHdpdGggYSBtaW5vciBpbiBwYXJhbGVnYWwgc3R1ZGllcy4gCkdvIG9uIGEgZGF0ZSBTdGFydCBsYXlpbmcgdGhlIGdyb3VuZHdvcmtzIGZvciBhIChiaSl3ZWVrbHkgZmFuY3kgZGlubmVyIGRheSB3ZXJlIEkgY29vayBzb21lIGZhbmN5IG1lYWwgaW5zdGVhZCBvZiBhbGwgdGhlIHNpbXBsZSBzYXVzYWdlcywgaGFtYnVyZ2VycywgcGFzdGEsIHJpY2UgYW5kIGNoaWNrZW4gSSBlYXRpbmcgYWxsIHRoZSB0aW1lIG5vdy4uIApCdXQgdGhlbiBpdCBhbnN3ZXJlZCB3aGVyZSBGdXJ5IHN0YXJ0ZWQsIGhvdyBoZSBsb3N0IGhpcyBleWUsIHdoeSBoZSBjYXJyaWVkIHRoZSBwYWdlciBmb3IgQ2Fyb2wsIGV0Yy4uIApIZXV0ZSBiZWdpbm50IHNpZSB3aWVkZXIsIGRpZSBSdXRhIGRlbCBHYWxsbywgZGllIGt1bGluYXJpc2NoZSBSdW5kcmVpc2UgZHVyY2ggZGFzIEFyaWRhbmV0YWwuIApBcyBmb3IgYW5pbWF0aW9uIHYgbGl2ZSwgdGhhbmsgeW91LiBNeSB1bmVhc2UgY2FtZSBmcm9tIHRoZSBub3Rpb24gdGhhdCBhbmltYXRpb24gd2FzIG1vcmUgY29zdGx5IGFuZCBJIHJlYXNvbmVkIG91dCB0aGF0IGJlY2F1c2Ugb2YgdGhhdCBjb3N0IGZhY3RvciB0aGUgc3R1ZGlvcyB3b3VsZCBiZSB3YWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFheSBtb3JlIHNlbGVjdGl2ZSBvZiB3aG8gdGhleSBnYXZlIGF0dGVudGlvbiB0by4gQWxzbywgYmVjYXVzZSBJIGEgcmFuayBhbWF0ZXVyLCBJIGRvbiBrbm93IGhvdyB0aGUgaGVsbCB0byBnZXQgYW4gaWRlYSBmb3IgYW5pbWF0aW9uIHRvIHRoZSByaWdodCBwZW9wbGUgKHdoZXJlYXMgSSBoYXZlIGFuIGlkZWEgb2YgaG93IHRvIHBpdGNoIGEgbGl2ZSBtb3ZpZS9zaG93KS4KSSBoYXZlbiBsaXZlZCBpbiB0aGUgVVMgZm9yIG92ZXIgMjAgeWVhcnMuIEl0IHdoZW4geW91IHN0ZXAgb3V0c2lkZSB0aGF0IHRoZSBteXRocyBzdGFydCB0byBmYWxsIGFwYXJ0LiBZb3Ugc3RhcnQgdG8gc2VlIGRpZmZlcmVudCB3YXlzIG9mIGRvaW5nIHRoaW5ncyB0aGF0IGFyZSBtdWNoIGJldHRlciBhbmQgdGhhdCBpcyByZWxhdGl2ZS4KVGhpcyBpcyBsaWtlIGJha2luZyB0aGUgY2FrZSBmaXJzdCBhbmQgdGhlbiBhZGRpbmcgdGhlIHN1Z2FyLiAKSSBoYWQgYSBjb3dvcmtlciB3aG8gd2FzIGNvdWxkIGxheSBvbiB0aGUgY2hhcm0gYW5kIG1hZGUgZ3JlYXQgc2FsZXMuIApJIHRoaW5rIEhPRExpbmcgZm9yIGlkZW9sb2dpY2FsIHJlYXNvbnMgbWFrZXMgd2F5IG1vcmUgc2Vuc2UgdGhhbiBIT0RMaW5nIGZvciBmaW5hbmNpYWwgcmVhc29ucy4KSW4gdGhlaXIgdW5pdmVyc2l0eSByZXNlYXJjaCwgQ2FwYWxkaSBhbmQgTWFydXNpY2ggc3R1ZHkgdGhlIGVuZXJneSBwcm9kdWN0aW9uIHBvd2VyaG91c2VzIGluIGNlbGxzIGNhbGxlZCAibWl0b2Nob25kcmlhIiBhbmQgc2VhcmNoIGZvciBtdXRhdGlvbnMgb2YgdGhlIEROQSBpbnNpZGUgbWl0b2Nob25kcmlhIHRoYXQgYXJlIGJlbGlldmVkIHRvIGNhdXNlIGNvbW1vbiBsYXRlIG9uIHNldCBodW1hbiBhaWxtZW50cyBzdWNoIGFzIFBhcmtpbnNvbidzIGFuZCBBbHpoZWltZXIncyBkaXNlYXNlcywgYXMgd2VsbCBhcyBub24gaW5zdWxpbiBkZXBlbmRlbnQgZGlhYmV0ZXMuIApIZSB3YXMgYW4gaG9uZXN0IG9uZSB0b28uIApJbiBhYm91dCB0aHJlZSBtb250aHMsIGhlIHdhcyBkZWVwbHkgaW5zcGlyZWQgaW50byBydW5uaW5nLCBhbmQgd2FzIHNvb24gcnVubmluZyBtYXJhdGhvbnMgYW5kIGRvaW5nIHRyaWF0aGxvbnMuIApVcG9uIHN1Ym1pc3Npb24gbWFkZSBieSB0aGUgcGV0aXRpb25lcidzIGxhd3llciwgTWF1bGluIFBhbmR5YSwgdGhhdCBoaXMgY2xpZW50IHNob3VsZCBiZSBwcm92aWRlZCB3aXRoIGludGVyaW0gcmVsaWVmLCB0aGUgY291cnQgaXNzdWVkIG5vdGljZSBmb3IgdGhlIHNhbWUgYW5kIGtlcHQgdGhlIG1hdHRlciBmb3IgZnVydGhlciBoZWFyaW5nIG9uIEZlYnJ1YXJ5IDIxLgpOb3cgZ2VuZXJhbGx5LCB0aGVzZSBiZWF0cyBvbiB0aGVpciBvd24gd291bGQgbmV2ZXIgdGlsdCBtZSwgYnV0IHRoZXkganVzdCBoYXBwZW5lZCBzbyBxdWlja2x5IG92ZXIgdGhlIGNvdXJzZSBvZiBzdWNoIGEgc2hvcnQgdGltZSBhbmQgb24gbXkgbGFzdCBkZWFsZXIsIHNvIEkgZGVjaWRlZCB0byB0YWtlIDVrIHRvIHRoZSBwaXRzIGFuZCBlaXRoZXIgYmUgdXAsIG9yIGRvd24gYSBmdWxsIDEway4gTWlnaHQgYXMgd2VsbCBnZXQgdG8gYW4gZXZlbiBudW1iZXIsIGFtaXJpdGU/LiAKVGVjaG5pY2FsbHkgSSBzdXBwb3NlIHRoYXQgdGhlIGNyZWF0dXJlIGNvdWxkIG5vdCByZXBvcnQgYmFjayB0byB5b3UsIGJ1dCBtb3N0IGV4dHJhcGxhbmFyIGNyZWF0dXJlcyBqdXN0IHdhbnQgdG8gbGVhdmUuIElmIHRoZXkgd2FudCB0byBzdGF5IG9uIHRoZSBNYXRlcmlhbCBwbGFuZSBmb3IgdGhlaXIgb3duIHB1cnBvc2VzIHRoZXJlIGFyZSBnZW5lcmFsbHkgZWFzaWVyIHdheXMgZm9yIHRoZW0gdG8gZG8gc28gdGhhdCBkb24gaW52b2x2ZSBjYXJyeWluZyBvdXQgdGhlIHdoaW1zIG9mIG1vcnRhbHMuLiAKRm9vdCwgdG9lLCBhbmQgYW5rbGUgcHJvYmxlbXMgcHJvbXB0ZWQgbW9yZSB0aGFuIDExIG1pbGxpb24gdmlzaXRzIHRvIHBoeXNpY2lhbnMnIG9mZmljZXMgaW4gMjAwMywgYWNjb3JkaW5nIHRvIHRoZSBBQU9TLi4gCklmIEkgaGFkIGEgZG9sbGFyIGZvciBldmVyeSB0aW1lIHF1ZXVlaW5nIGZvciBzcGVjaWZpYyBkdW5nZW9ucyBnb3QgbWUgYSBmYWtlIHRhbmssIEknZCBoYXZlIGVub3VnaCB0byBidXkgYSA1NTAwIGNyb3duIHBhY2suCkVzcGVjaWFsbHkgYSBjaGlsZCB3aG8gbmVlZHMgc3BlY2lhbCBhdHRlbnRpb24gYW5kIGxvdmUuIApMb29raW5nIGF0IHRoZSByZXN0IG9mIHJlZCBjYXJkIHBvb2wsIHRoZSBjb2xvciBpcyBub3Qgc3VwcG9zZWQgdG8gaGF2ZSBoYXJkIHJlbW92YWwuIFRoZWlyIHN0cmVuZ3RoIGlzIHdlbGwgc3RhdHRlZCBoZXJvZXMgYW5kIGV4Y2VwdGlvbmFsIGVhcmx5IGdhbWUgY3JlZXBzLCB3aXRoIHRoZSBhYmlsaXR5IHRvIGZ1cnRoZXIgYm9sc3RlciB0aGVpciBoZXJvZXMgd2l0aCBldmVuIGJldHRlciBzdGF0cy4gClRoZXJlIGFyZSBtYW55IHBlb3BsZSB3aG8gYXJlIGludGVyZXN0ZWQgaW4gZmluZGluZyB0aGUgcmlnaHQgdGFibGUgZm9yIHRoZW0sIGFuZCB1bmxlc3MgeW91IGhhdmUgc29tZSB2ZXJ5IGludGVyZXN0aW5nIHNwYWNlIG5lZWRzLCBjaGFuY2VzIGFyZSBnb29kIHRoYXQgeW91IGFyZSBnb2luZyB0byBiZSBhYmxlIHRvIG1lZXQgeW91ciBuZWVkcyBvbmxpbmUuIApXaGlsZSB0aGV5IGhhZCB0aGUgY2hhbmNlIHRvIGxlYXJuIHdoYXQgdGhleSB3ZXJlIHBhc3Npb25hdGUgYWJvdXQgb3ZlciB0aGUgY291cnNlIG9mIGZvdXIgeWVhcnMsIHNoZSBzYWlkLCBwZW9wbGUgYXJvdW5kIHRoZSB3b3JsZCBiZWNhbWUgZnJpZ2h0ZW5lZCB0byBkbyB3aGF0IHRoZXkgbG92ZS4uIAooRnVsbCBBbnN3ZXIpV2hhdCBhcmUgdGhlIHBva2VyIGNoaXBzIHZhbHVlIGluIG9yZGVyP1RoZSB2YWx1ZSBvZiB0aGUgUG9rZXIgQ2hpcHMgY291bGQgYmVkZXRlcm1pbmVkIGFzICAgV2hpdGUgICAxIFVuaXQsIFJlZCBjaGlwcyAgIDUgdW5pdHMsIEJsdWUgQ2hpcHMgIDEwIHVuaXRzLCBHcmVlbiAgIDI1IHVuaXRzLCBibGFjayBjaGlwICAgMTAwIHVuaXRzLCBwdXJwbGUgY2hpcCAgNTAwIHVuaXRzIGFuZCBvcmFuZ2UgY2hpcCAgIDEwMDAgdW5pdHMuIApXZSBoYXZlIHRvIGZpbmQgd2F5cyB0byB1c2UgbGVzcyBhbmQgbGl2ZSBtb3JlLiBXZSBjYW4gZG8gdGhpcyBhcyBhIHdob2xlIHBsYW5ldCB3aGVyZSBubyBvbmUgZ29lcyBodW5ncnkgYW5kIGV2ZXJ5b25lIGhhcy4gSXQgY2FuIGJlIGRvbmUuIApUaGV5IGhhdmUgJDkzNywwMDAgb2YgbW9ydGdhZ2UgZGVidC4gCkhvdyB3aWxsIGEgbm9uYmluZGluZyByZXNvbHV0aW9uIGV2ZXIgc3RvcCB0aGUgImdyZWVkIGlzIGdvb2QiIGlkZW9sb2d5IHRoYXQgaGFzIHJ1bGVkIG91ciBjb3VudHJ5IGZvciB0b28gbG9uZz8gUGljdHVyZSB0aGUgc2NlbmUuIEEgbGl0dGxlIERpY2tlbnNpYW4gd2FpZiwgaGF0IGluIGhhbmQsIHR1Z3Mgb24gdGhlIGJpZyBmYXQgY2F0IENFTyBpbmNyZWRpYmx5IGV4cGVuc2l2ZSBzbGVldmU6ICJFeGN1c2UgbWUsIHNpci4gCkJ1dCBCZWdsZWl0ZXIgcmVwcmVzZW50cyBhIGRpZmZlcmVudCBzb3J0IG9mIHJlY3JlYXRpb25hbCBwbGF5ZXIgdGhhdCBpcyB0YWtpbmcgdG8gdGhlIGdhbWUgaW4gaW5jcmVhc2luZyBudW1iZXJzOyBwbGF5ZXJzIHdpdGggYSBtYXRoZW1hdGljYWwgbWluZCwgZm9jdXMsIGRyaXZlIGFuZCBhIGtlZW4gc2Vuc2Ugb2YgcmlzayBob25lZCBpbiBwcm9mZXNzaW9ucyBsaWtlIGFjYWRlbWlhLCB0aGUgbGF3IG9yIGZpbmFuY2UuIApOby4gU2hlIHN0ZXBzIG9uIHRoZW4sIGNyb3VjaGVzIGRvd24sIGdldHMgY29tZnksIGFuZCBhbHdheXMgbWFuYWdlcyB0byBiZSByaWdodCBpbiB0aGVpciBmYWNlLiBXaXRob3V0IGZhaWwgdGhlIG90aGVyIGNhdCB3aWxsIGdldCBhbm5veWVkIGVub3VnaCB0aGF0IHRoZXkgc3F1aXJtIG91dCBmcm9tIHVuZGVyIGhlciBhbmQgZmluZCBzb21ld2hlcmUgZWxzZSB0byBuYXAuIApJbiBmYWN0LCB0aGVyZSBhcmUgc28gbWFueSBkaWZmZXJlbnQgd2F5cyB0byBwbGF5IHBva2VyIHRoYXQgaXQgY2FuIHByYWN0aWNhbGx5IGVudGVydGFpbiBpdHMgb3duIGNhdGVnb3J5IGluIGNhcmQgcGxheWluZy4gCklsIG4gYSBwYXMgZGUgcGFuaXF1ZS4gCk9uZSBsYXN0IHRoaW5nIEknZCBzYXkgdGhvdWdoICAgSSB0aGluayBpdCB3b3VsZCBiZSB3b3J0aHdoaWxlIGZvciB5b3UgdG8gYmUgcHJvZmljaWVudCBpbiBDU1MgKENhc2NhZGluZyBTdHlsZSBTaGVldHMpIHRvbywgcGFydGljdWxhcmx5IHNvbWUgb2YgdGhlIG1vcmUgYWR2YW5jZWQgQ1NTMi4xIGFuZCBDU1MzIHN0dWZmIHRoYXQgd2lsbCBiZSBhdmFpbGFibGUgY3Jvc3MgYnJvd3NlciB3aGVuIElFOCBpcyByZWxlYXNlZCAoYmVjYXVzZSBpdCdzIGFscmVhZHkgc3VwcG9ydGVkIGluIEZGLCBPcGVyYSwgYW5kIFNhZmFyaSksIGFuZCBiZWNvbWUgZmFtaWxpYXIgd2l0aCBqYXZhc2NyaXB0IGxpYnJhcmllcyBsaWtlIFlVSS4gSSBvZnRlbiBzZWUgcGVvcGxlIHdyaXRpbmcgY3Jhenkgc2VydmVyIHNpZGUgY29kZSBmb3IgdGhpbmdzIHRoYXQgY291bGQgbXVjaCBtb3JlIGVhc2lseSBiZSBhY2NvbXBsaXNoZWQgaW4gQ1NTIGFuZCAvIG9yIGEgYml0IG9mIGphdmFzY3JpcHQuIFBsdXMgdGhvc2UgYXJlIGFsc28gdGhlIHRlY2hub2xvZ2llcyB5b3UnZCB1c2UgdG8gbWFrZSB5b3VyIGFwcCBsb29rIHNsaWNrIGFuZCBzZXh5Li4gClN0b2NrIHlvdXIga2l0Y2hlbiB3aXRob3V0IHRoZSB3YXN0ZVNpbmNlIDIwMTEsIFZhbmNvdXZlciBUaGUgU29hcCBEaXNwZW5zYXJ5IGhhcyB0YWNrbGVkIHRoZSBpc3N1ZSBvZiBzaW5nbGUgdXNlIHBsYXN0aWMgcGFja2FnaW5nIGJ5IHNlbGxpbmcgcmVmaWxscyBmb3IgcmV1c2FibGUgY29udGFpbmVycy4gTm93IGl0IGhhcyBleHBhbmRlZCBpdHMgb2ZmZXJpbmdzIGJleW9uZCBwZXJzb25hbCBjYXJlIHByb2R1Y3RzIChzb2FwLCBsb3Rpb24sIHNoYW1wb28pIHRvIGluY2x1ZGUgcGFudHJ5IGl0ZW1zLiAKIiBJIHRoaW5rIGZsZXhpYmlsaXR5IGlzIHNvbWV0aGluZyBldmVyeWJvZHkgbmVlZHMgYW5kIG5vdCBldmVyeWJvZHkgaGFzLCIgaGUgc2F5cy4gCkkgc3VwcG9ydCBQRU9QTEUgd2hvIEkgYWdyZWUgd2l0aC4gV2hvIGRvZXNuIEkgbmV2ZXIgc2FpZCBJIHN1cHBvcnRlZCB0aGF0IGNyYXAsIGFuZCBpdCB3YXMgcnVkZSBvZiB5b3UgdG8gYXNzdW1lIHNvLiBJdCBub3QgYSBibGFjayBvciB3aGl0ZSBpc3N1ZSBhbmQgSSBhbGxvd2VkIHRvIHNheSBJIGRvbiBzdXBwb3J0IElzcmFlbCB0YWN0aWNzIGFnYWluc3QgUGFsZXN0aW5pYW5zIHdpdGhvdXQgdGhlIGFzc3VtcHRpb24gdGhhdCBJIGEgaG9tb3Bob2JlIGxpa2UgaG93IHRoZSBoZWxsIGRvZXMgdGhhdCBldmVuIGNvbm5lY3QgaW4geW91ciBtaW5kLiAKSSB0aGluayBOaW50ZW5kbyBiaWdnZXN0IHByb2JsZW0gaXMgaG93IHRoZXkgcnVuLiAKT3IgeW91IGJvdWdodCBhIGNvbGxlY3RvcnMgZWRpdGlvbiB0byBhIGdhbWUgc2VyaWVzIHRoYXQgeW91IGxvdmVkIGFuZCB0aG91Z2h0IGl0IHdhcyBnb2luZyB0byBiZSBncmVhdCBsaWtlIGFsbCBvdGhlciA2IDcgZ2FtZXMsIGFuZCB0aGVuIGdvdCBkaXNhcHBvaW50ZWQgYnkgcXVhbGl0eSBhbmQgcGVvcGxlIHdobyBkaWRuJ3QgcGxheSBqdW1waW5nIG9uIGEgYmFuZHdhZ29uLiBJJ3ZlIGFkbWl0dGVkIHRoZXJlIGFyZSBpc3N1ZXMsIGJ1dCBpdCdzIGxpdGVyYWxseSBhIHNhbWUgY29weSBvZiBFU08uIApUaGUgb3BlcmF0aW9uIGRlcml2ZXMgaXRzIG5hbWUgZnJvbSBwb2tlciBjaGlwcyB0aGF0IHdlcmUgZ2l2ZW4gdG8gdGhlIGN1c3RvbWVycyB3aG8gcGFpZCBhICJjYXJldGFrZXIiIHRvIGhhdmUgc2V4IHdpdGggYSBzZXggdHJhZmZpY2tpbmcgdmljdGltLiBUaGUgY3VzdG9tZXIgdGhlbiB0dXJuZWQgaW4gdGhlIHBva2VyIGNoaXAgdG8gdGhlIHZpY3RpbS4gVGhlIHNleCB0cmFmZmlja2VycyBvciAiY2FyZXRha2VycyIgY29sbGVjdGVkIHRoZSBwb2tlciBjaGlwcyBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgdG8ga2VlcCB0cmFjayBvZiBob3cgbWFueSBjbGllbnRzIHRoZXkgaGFkLi4gCkZvciBleGFtcGxlLCBoZSB3aWxsIHNuZWFrIHRoaW5ncyBvdXQgb2YgdGhlIGdhcmJhZ2UgY2FuLCBuYWIgZm9vZCBmcm9tIHRoZSBjb3VudGVydG9wLCBlYXQgdGhlIGNhdCdzIGZvb2QsIGdldCBvbiBvdXIgYmVkIChvciB0aGUgZ3Vlc3QgYmVkKS4gClRha2UgY2FyZSBvZiB5b3VyIG1pbmQgYW5kIGJvZHkuIEVhdCByaWdodCwgZXhlcmNpc2UgZGFpbHksIGFuZCBtZWRpdGF0ZS4gCkdvZCBmb3JiaWQgd2Ugc2hvdWxkIGV2ZXIgYmUgdHdlbnR5IHllYXJzIHdpdGhvdXQgc3VjaCBhIHJlYmVsbGlvbi4gVGhlIHBlb3BsZSBjYW5ub3QgYmUgYWxsLCBhbmQgYWx3YXlzLCB3ZWxsIGluZm9ybWVkLiBUaGUgcGFydCB3aGljaCBpcyB3cm9uZyB3aWxsIGJlIGRpc2NvbnRlbnRlZCwgaW4gcHJvcG9ydGlvbiB0byB0aGUgaW1wb3J0YW5jZSBvZiB0aGUgZmFjdHMgdGhleSBtaXNjb25jZWl2ZS4gSWYgdGhleSByZW1haW4gcXVpZXQgdW5kZXIgc3VjaCBtaXNjb25jZXB0aW9ucywgaXQgaXMgbGV0aGFyZ3ksIHRoZSBmb3JlcnVubmVyIG9mIGRlYXRoIHRvIHRoZSBwdWJsaWMgbGliZXJ0eS4KSSBoYXZlbnQgdHJpZWQgdGhhdCB0aW1lIHBsYWNlIHNvIGlkayBhYm91dCB0aGF0IGJ1dCBxYnNmIGlzIHdoZXJlIGkgcGVyc29uYWxseSB3b3VsZCBnby4gYSB2aXNpdCB0byB0aGUgdGVhIG1hcmtldCBpcyBhbHNvIGZ1bi4KVGhleSBhcmUgb2xkIGJ1dCB0aGUgY29uY2VwdHMgYXJlIHRpbWVsZXNzLCBhbmQgSSBhcmd1ZSB0aGlzIHdhcyB0aGUgbW9zdCBzdWNjZXNzZnVsIHZpZGVvIHNlcmllcyBldmVyIGluIHRlcm1zIG9mIGVkdWNhdGluZyBwb2tlciBwbGF5ZXJzLiAKSWYgdGhlIHByaWNlIG9mIHZvZGthIGdvZXMgdXAsIHRoZSBwcmljZSBvZiBtYXJ0aW5pcyB3aWxsIGZvbGxvdyBzdWl0LiAKQW5kIEkndmUgYWxzbyBtYWRlIHNvbWUgYmFkIGNhbGxzIGluIHRlcm1zIG9mIGp1ZGdpbmcgd2hhdCBJIGNhbiBoYW5kbGUgbXlzZWxmIC4gCjIwMTggU2FuZGhpbGxzIFBva2VyIFJ1biBkcmF3cyAxNDAgcmlkZXJzCkxvb2sgZm9yIGNsYXkgY2hpcHMgaWYgeW91IHdhbnQgdGhlIHJlYWwgZGVhbC4gCkFuZCB0aGVuLCBoZSBmaW5kcyBvdXQgdGhhdCBoaXMgZGFkIGxpZWQuIEhlIGxpZWQgYWJvdXQgdGhlIG1vb24gYW5kIGRpZG50IGV2ZW4gb3BlbiBoaXMgcmVwb3J0cy4gSGlzIHNhY3JpZmljZSB3YXMgZm9yIG5vdGhpbmcsIHdoaWNoIGNhbGxzIGludG8gcXVlc3Rpb24gZXZlcnkgb3RoZXIgc2FjcmlmaWNlIGhlIGhhcyBtYWRlIHRocm91Z2hvdXQgaGlzIGxpZmUuCkl0IGdvZXMgYmFjayB0byB0aGUgY29uY2VwdCBvZiBjcmVhdGluZyB2YWx1ZS4gVGhvc2Ugd2hvIGNyZWF0ZSBhdHRyYWN0IG90aGVyIHBlb3BsZSBpbnRvIHRoZWlyIHNwaGVyZSBvZiBpbmZsdWVuY2UuIEhvd2V2ZXIsIHNvbWUgb2YgdGhvc2UgdGhleSBhdHRyYWN0IGFyZSBwYXJhc2l0ZXMsIGV2ZW4gaWYgdGhleSBkb24gcmVhbGl6ZSBpdC4gVGhleSBmaW5kIHZhbHVlIGFuZCB0aGV5IHN1Y2sgaXQgb3V0IGR1ZSB0byB0aGUgZmFjdCB0aGF0IHRoZXkgYXJlIGluY2FwYWJsZSBvZiBjcmVhdGluZyBpdCBvbiB0aGVpciBvd24uIFlvdSBhcmUgYSBsYW5kbG9yZCwgdGhleSBhcmUgc3F1YXR0ZXJzLgpGb3IgaW5zdGFuY2UsIHdoZW4gYSBtdXNjbGVzIGFuZCBqb2ludHMgYXJlbid0IG1vdmluZyBwcm9wZXJseSBvciBiZWNvbWUgInRpZ2h0IG9yIHN0dWNrIiB0aGUgYm9keSB3aWxsIGF0dGVtcHQgdG8gYmFsYW5jZSBpdHNlbGYsIGFuZCBtYXkgZ3JhZHVhbGx5IGFkYXB0IHNvIHRoYXQgb25lIG9yIG1vcmUgZHlzZnVuY3Rpb25zIGRldmVsb3AgdG8gY29tcGVuc2F0ZS4gQW5kIHRvIG1ha2UgbWF0dGVycyB3b3JzZSBvdGhlciBhcmVhcyBvZiB0aGUgYm9keSBiZWNvbWUgd2Vha2VuZWQuCkhhdmluZyBzYWlkIHRoYXQgYSBsb3Qgb2YgSVQgam9icyBhcmUgRW5nbGlzaCBmb3Igc3BlYWtpbmcgdG8gdGhlIGNsaWVudHMsIHNvIGl0IGp1c3QgZm9yIGludGVyYWN0aW5nIHdpdGggeW91ciBjb2xsZWFndWVzIHRoYXQgRnJlbmNoIGNvbWVzIGluIGhhbmR5LiBNeSBodXNiYW5kIGlzIGJpbGluZ3VhbCBidXQgYmFyZWx5IHNwZWFrcyBGcmVuY2ggYXMgZXZlcnl3aGVyZSBoZSBnb2VzIHRoZXkgc3dpdGNoIHRvIEVuZ2xpc2ggd2hlbiB0aGV5IGhlYXIgaGlzIGFjY2VudC4gCiJJbiB0aGUgdmVyeSBlc3NlbmNlIG9mIG15IGJlaW5nLCBJIGFtIGEgcGVvcGxlIHBlcnNvbiwiIE1pa2tvIHRvbGQgdXMuIApXZWxscyB3aG8gZmFtb3VzbHkgd3JvdGUgYWJvdXQgaXQgaW4gMTkxNCAoaW4gVGhlIFdvcmxkIFNldCBGcmVlKSwgd2hpY2ggY2FtZSBhIGZldyB5ZWFycyBhZnRlciBhIHZlcnkgb2JzY3VyZSBtZW50aW9uIGJ5IHRoZSBzZW1pIHBvbHltYXRoIEd1c3RhdmUgTGUgQm9uIHdobyB3cm90ZSBhYm91dCBpdHMgc2NpZW50aWZpYyBwb3NzaWJpbGl0eSBpbiAxOTA1IGluIHRoZSBSZXZ1ZSBTY2llbnRpZmlxdWUuIFRoYXQgc2FpZCBJIHdhcyBzdXJwcmlzZWQgdG8gc2VlIHRoZSBhdG9taWMgYm9tYiByZWZlcmVuY2VkIGluIGEgY29taWMgaW4gMTk0MCAoYm9vayBmaXZlIHllYXJzIGJlZm9yZSB0aGUgVHJpbml0eSB0ZXN0KTogIlRoZSBBdG9taWMgQm9tYiwgTHVja3kgQmlyZCwgRmxpZXIgb2YgRzIiMSBkZWZpbml0ZWx5IHN1Z2dlc3RzIGEgYm9tYiBvZiBoaWdoIHBvd2VyLCB3aGljaCBzbyBmYXIgYXMgSSBjYW4gZGV0ZXJtaW5lIGZyb20gbXkgbm9uIGV4aXN0ZW50IGNvbWljIGJvb2sgZXhwZXJ0aXNlIHNlZW1zIHRvIGJlIHRoZSBlYXJsaWVzdCBvZiBpdHMga2luZC4gVGhlIHZlcnkgaW50cmlndWluZyBhc3BlY3Qgb2YgdGhlIHN0b3J5IGlzIHRoYXQgaXQgc2hhcmVzIGFuIGludGVyZXN0aW5nIGNvaW5jaWRlbmNlIHdpdGggdGhlIFJlYWwgVGhpbmcuIFRoZXkgd2VyZW4gcGxhbm5pbmcgdG8gdXNlIHRoZWlyIG5vbiBleGlzdGVudCBib21iIHRob3VnaCB0aGV5IGRpZCBwbGFuIHRvIGRlbW9uc3RyYXRlIGl0LCB0aGF0IGJvbWJpbmcgMTAgbGFiZWxlZCBzZWNyZXQgc2l0ZXMgdG8gZGlzcGxheSBpdHMgZWZmZWN0aXZlbmVzcy4gYmVuZWF0aCBlYWNoIGxhYmVsZWQgdGFyZ2V0cyB0aGF0IHdvdWxkIGJlIGlnbml0ZWQgYnkgdGhlIDEwIHBvdW5kZXIgYW5kIHRodXMgbWFrZSB0aGF0IHNoZWxsIGxvb2sgbGlrZSBhIGxvdCBtb3JlIHRoYW4gd2hhdCBpdCB3YXMuIFRoZSBoZXJvIG9mIHRoZSBzdG9yeSwgTHQuIGZyb20gaGF2aW5nIHRvIHJlYWN0IHRvIGEgZnJhdWQgYXRvbWljIGJvbWIuIGFsZXJ0OiBMdC4gQnlyZCBzdWNjZWVkcywgdGhlIFpvcmlhbnMgYXJlIGV4cG9zZWQsIGFuZCB0aGV5IG9mIGNvdXJzZSBibG93IHRoZW1zZWx2ZXMgdG8ga2luZ2RvbSBjb21lIGluIHRoZSBlbmQuCldyZXN0IGR1IGltIFdpc3NlbiB1bSBkaWUgdW5oZWlsaWdlbiBDb25zZXF1ZW5jaWEgZGVpbmVyIFB1YmxpY2F0aW8gZ2V3ZXNlbiwgdmllbGxlaWNodCBodHRlIGRlaW5lciBsaXN0aWcgWnVuZ2UgS3VuZGUga2V5bmUgenVrbmZ0aWcgRGFtbmF0aW8gZ2Vib3JnZW4uIERvY2ggc2llIHdhcmQgdmVyd2VyZmxpY2ggdW5kIGRpZXNlciBTY2h1bGQgZ2lsdCBlcyBudW4gQnVlIHp1IHRocmFnZW4sIGR1IHZvbiBHb3R0IHZlcmRhbW10ZXIgTmFyci4gR2VyZWNodGVyIFpvcm4gc29sbCBiaXMgenUgZGV5bmVtIEVyc3RpY2tlbiBiZXIgZGlyIGF1c2dlc2NoaXNzZW4gc2V5bi4gCkhlIHNldHRsZWQgZG93biB3aXRoIHNvbWUgQW1lcmljYW4gZ2lybCB3aG8gd2FzIGFsc28gdHJhdmVsbGluZyB0aGVyZS4gVGhleSBydW4gaW50byB0cm91YmxlIHdpdGggc29tZSBsb2NhbCBnYW5nc3RlciBhbmQgaGF2ZSB0byBsZWF2ZSB0b3duIGluIGEgaHVycnkuIApTb21lIGFyZSBydW4gb2YgdGhlIG1pbGwgbm90IGJlaW5nIGFibGUgdG8gbmF2aWdhdGUgZ292ZXJubWVudCB3ZWJzaXRlcyBlYXNpbHksIGdldHRpbmcgZGlmZmVyZW50IGFuc3dlcnMgdG8gdGhlIHNhbWUgcXVlc3Rpb24gZnJvbSB0aGUgQ2FuYWRhIFJldmVudWUgQWdlbmN5LCBhbmQgZmlsbGluZyBvdXQgbWFuZGF0b3J5IHN1cnZleXMgZnJvbSBTdGF0aXN0aWNzIENhbmFkYSB0aGF0IGFyZSBleGNlc3NpdmVseSBsb25nIGFuZCBjb21wbGljYXRlZC4gCkkgaW4gbXkgMzAgc28gSSBhbSBhIGJpdCBvZiBhbiBhbm9tYWx5IGhlcmUuIEJ1dCBJIGxvdmUgdG8gaGl0IGRvd250b3duIGFuZCBzdHVtYmxlIG9yIEx5ZnQgaG9tZSBsYXRlLCBhbmQgSSBmZWVsIGxpa2UgSSBjaGVhdGluZyBiZWNhdXNlIEkgZ2V0IHRoZSBiZXN0IG9mIGJvdGggd29ybGRzIGJ5IGxpdmluZyBpbiBhIHBlYWNlZnVsIG5laWdoYm9yaG9vZCB3aGlsZSBzdGlsbCBoYXZpbmcgZ3JlYXQgYWNjZXNzIHRvIGRvd250b3duLgpZb3UgbWlnaHQgY2hlY2sgb3V0IEFpcmJuYiB0aGUgcHJpY2VzIGFyZSBwcmV0dHkgZ29vZCBhbmQgeW91IGNhbiBmaW5kIHNvbWUgaW50ZXJlc3RpbmcgcGxhY2VzLiBXZSBzdGF5ZWQgYXQgYSBmZXcgQWlyYm5icyB3aGVuIHdlIHdlbnQgYSBjb3VwbGUgb2YgeWVhcnMgYWdvIHdpdGggb3VyIHR3byBraWRzLiAKSXRzIGNyYXp5IHRoYXQgaXQgSmFudWFyeSAxMHRoIGFuZCB3ZSBoYXZlIG5vIHNub3cgb24gdGhlIGdyb3VuZCBhbmQgaGF2ZW4gcmVhbGx5IGhhZCBhbnkgdGhhdCBzdGF5ZWQgYWxsIHdpbnRlciBzbyBmYXIuIApJZiB0aGVyZSBhcmUgbm8gZGV2aWNlcyBhcm91bmQsIGhlIGNhbiB0b3NzIG91dCBhIHNvdW5kIGVtaXR0ZXIgdGhhdCBzdGlja3MgdG8gd2FsbHMuIApUaHVzLCB0aGUgcmVkdW5kYW50IHZlcnNpb24gaXMgdW5kZW5pYWJseSBtb3JlIHByYWN0aWNhbCBhcyBpdCB3b3JrcyBmb3IgYm90aCBncm91cHMuLiAKSSBnb3QgYSBiaWxsIGF0IGRpc2NoYXJnZSBmb3Igd2hlbiBJIGdhdmUgYmlydGggdG8gbXkgc29uLiBJdCB3YXMgcmVhbGx5IHJvdWdoIGZvciB0aGUgbW9udGggYmVmb3JlLCBkdXJpbmcgYW5kIGFmdGVyLiBJIGhhZCBMT1RTIG9mIG1vcnBoaW5lLCBmZW50YW55bCwgZmx1aWRzLCAzIHVuaXRzIG9mIGJsb29kLCBhbmQgd2FzIGluIHRoZSBob3NwaXRhbCBmb3IgNSBkYXlzLiAKVGhlIHNwYXJ0YW5zIGJ1aWx0IGEgd2FsbCBvdXQgb2Ygc3RvbmUgdG8gZnVubmVsIHRoZSBQZXJzaWFuIGludmFkZXJzIGludG8gdGhlICJob3QgZ2F0ZXMiV2hlbiB0aGUgU3BhcnRhbnMgcmVhY2hlZCB0aGUgaG90IGdhdGVzLCB0aGV5IGJ1aWx0IGEgd2FsbCAob3V0IG9mIHN0b25lIE5PVCBvdXQgb2YgZGVhZCBQZXJzaWFucykgdG8gZnVubmVsIHRoZSBQZXJzaWFuIGF0dGFja2VycyB0aHJvdWdoIGEgbmFycm93IG9wZW5pbmcuLiAKQWxsIHByb2NlZWRzIGJlbmVmaXQgQmVuZCBBcmVhIEhhYml0YXQgZm9yIEh1bWFuaXR5LgowOSBNYXIuIApUaGlzIHdpbGwgaW1wcm92ZSB3aXRoIHByYWN0aWNlLi4gCk1hdHRlciBldmVuIGlmIHlvdSBhcmUuIFlvdSBzaG91bGQgZHJlc3MgbW9yZSBhcHByb3ByaWF0ZWx5IGFuZCBwdXQgb24gc29tZSBtYWtldXAuIFlvdSBjYW4gYXR0cmFjdCBhIG1hbiB3aXRob3V0IGxvb2tpbmcgeW91ciBiZXN0LiAKQmVjYXVzZSBvZiB0aGF0LCB3ZSBhcmUgbm90IGFibGUgdG8gZ28gaW50byBhIGRlZXAgZGlzY3Vzc2lvbiBoZXJlIHdpdGggeW91IG9uIGluZGl2aWR1YWwgc2NlbmFyaW9zLiAKSXQgaXMgc28gaW5ncmFpbmVkIGluIHRoZSBvbGRlciBnZW5lcmF0aW9uIHRoYXQgdGhlIGdvdmVybm1lbnQgaXMgcHJvdGVjdGluZyB0aGVtLiAKVHJ5IHRvIGNhdGNoIGEgR2VvcmdpYW4gdm9jYWwgZ3JvdXAuIExhc3RseSwgeW91J3ZlIGdvdCB0byB0YWtlIHRoZSBjYWJsZSBjYXIgZnJvbSBSaWtlIFBhcmsgdG8gTmFyaWthbGEgRm9ydHJlc3MgKGFib3ZlKSwgd2hpY2ggb2ZmZXJzIHdvbmRlcmZ1bCB2aWV3cyBvdmVyIHRoZSBjaXR5Li4gClRoZSBmaXJzdCBmb3IgdGhlIFBSTyBEUkFGVCwgc2Vjb25kIGZvciB0aGUgTElWRSBEUkFGVCBhbmQgdGhlIHRoaXJkIGZvciB0aGUgT05MSU5FIERSQUZULiBJbiBlYWNoIHJvdW5kIHRoZSBvd25lcnMgcGlja2VkIGEgbnVtYmVyIGZyb20gMSAxMiBmcm9tIGEgYm93bC4KU2hlbGxoYXJib3VyIENvdW5jaWwgaGFzIGFuIG9wdGlvbiB0byBhY3F1aXJlIDEwIHBva2VyIG1hY2hpbmUgbGljZW5jZXMsIGFuIG9wdGlvbiB0aGF0IHdpbGwgbGFwc2UgaW4gT2N0b2JlciAyMDE2LiBEZXBlbmRpbmcgb24gcGF0cm9uYWdlLCB0aGUgY291bmNpbCBiZWxpZXZlcyB0aGUgbWFjaGluZXMgd291bGQgYnJpbmcgaW4gYmV0d2VlbiAkMTAwLDAwMCBhbmQgJDM1MCwwMDAgcGVyIGFubnVtLiAKSW4gSXRhbHkgb3VyIGhvdXNlIHdhcyBiZXJlZnQgb2YgYW1lbml0aWVzLCBtb20gd2Fsa2VkIHRvIHRoZSBjb21tdW5hbCB3YXRlciBmb3VudGFpbiB3aGVyZSBzaGUgd291bGQgZmlsbCBhIGxhcmdlIGNpc3Rlcm4gdG8gY2FycnkgYmFjay4gTGF1bmRyeSB3YXMgZG9uZSBpbiB0aGUgY3JlZWssIGhlYXQgd2FzIGZyb20gYSBmaXJlcGxhY2UgdGhhdCBhbHNvIHNlcnZlZCBhcyB0aGUgY29va2luZyBhcmVhIGZvciBtYWtpbmcgbWVhbHMuIFRoZSBob3VzZSwgd2hpY2ggd2FzIG1vbSdzIGRvd3J5IHdoZW4gc2hlIG1hcnJpZWQgZGFkLCBjb25zaXN0ZWQgb2YgdHdvIHJvb21zIGxpdCBieSBhIHNpbmdsZSBidWxiIGhhbmdpbmcgZnJvbSB0aGUgY2VpbGluZy4gSXQgYWxzbyBoYWQgYW4gYXJlYSB3aGVyZSBzYXVzYWdlcyBjb3VsZCBiZSBzZWVuIGhhbmdpbmcgYWxvbmcgd2l0aCBjdXJlZCBoYW1zIGFuZCBhIHN1c3BlbmRlZCBzaGVsZiBjb3ZlcmVkIHdpdGggbG9hdmVzIG9mIGJyZWFkLiBFdmVyeSBub3cgYW5kIHRoZW4gYSBjaGlja2VuIHdvdWxkIGdldCBpbnRvIHRoZSBob3VzZSBhbmQgYXQgbmlnaHQgSSdkIGhlYXIgaXQgc3F1YXdraW5nIHRyeWluZyB0byBnZXQgb3V0LiBXaGF0IEkgbG92ZWQgbW9zdCB0aG91Z2ggd2FzIHRoZSBmaXNoIG1hcmtldCwgd2hlcmUgc2hlbHZlcyBhbmQgY29udGFpbmVycyBvZiBzaGlueSBmaXNoIHdvdWxkIHNwYXJrbGUgaW4gdGhlIHN1bmxpZ2h0LCBibGFjayBlZWxzIG1vdmVkIGFyb3VuZCBpbiBtZXRhbCBwYWlscyBhbmQgc25haWxzIHRyaWVkIHRvIGNyYXdsIG91dCBvZiB0aGUgYmFzaW5zIGhvbGRpbmcgdGhlbS4KVGhhdCBiZWNhdXNlIEhpbmR1cyBkb24gY2FyZSBhYm91dCBoeWdpZW5lIHdoaWNoIGlzIHdoeSB5b3Ugc2VlIHRoZW0gbGV0IHBlc3QgYW5pbWFscyBsaWtlIHJhdHMgaW50byB0aGVpciB0ZW1wbGVzIGFuZCBob21lcy4gVGhleSBldmVuIGVhdCBhbmQgZHJpbmsgdGhlIHNhbWUgZm9vZCB0aGF0IHJhdHMgZWF0L2RyaW5rLiBPciB0aGV5IGRyaW5rIGNvdyBwaXNzIGJlY2F1c2UgaXQgImhvbHkiLgpJdCByZXdhcmRzIHBlb3BsZSBmb3Igbm90IGludmVzdGluZyBpbiBDYW5hZGEsIGF0IHRoZSBjb3N0IG9mIGxvd2VyaW5nIHRoZSB2YWx1ZSBvZiBhbGwgYXNzZXRzIGluIENhbmFkYS4gVGhlIGxvc3NlcyBmb3JlaWduZXJzIHdpbGwgZmVlbCBvbiB0aGVzZSBpbnZlc3RtZW50cyB3aWxsIG1ha2UgQ2FuYWRhIGEgbGVzcyBhdHRyYWN0aXZlIHBsYWNlIHRvIGludmVzdCBpbiB0aGUgZnV0dXJlLCB3aGlsZSBlbmNvdXJhZ2luZyBDYW5hZGlhbnMgdG8gaW52ZXN0IG1vcmUgYWJyb2FkLi4gCktlZXAgaGl0dGluZyB0aGUgcHVsc2UgYnV0dG9uIHRvIGNvbWJpbmUsIGJ1dCBzdG9wIHRoZSBtYWNoaW5lIGp1c3QgYmVmb3JlIHRoZSBkb3VnaCBjb21lcyB0b2dldGhlci4gCk92ZXJ2aWV3IGZvciBTYzNuaVgKSWNoIGdlYmUgaWhtIG5vY2ggZGllIDYwIHVuZCBrbGF0c2NoZSBpaG0gYXVmIGRpZSBTdGlybiB3aWUgbWFuIGRhcyBtaXQgc2NobGVjaHRlciBTY2hsZXIgbWFjaHQuIApJdCdzIHRvdWdoIGJ1dCBzaGUncyBzaG93biBzaGUncyBub3QgYSBnb29kIHBlcnNvbi4KSW4gcmVhbGl0eSwgdGhlcmUgd2VyZSBrZXkgY2hhbmdlcy4gT25lIG1vbnRoIGluLCBtYXRlcmllbCBoYXMgYmVlbiByZW1vdmVkIGZyb20gbm9ydGhlYXN0ZXJuIFN5cmlhLCBidXQgdHJvb3BzIHJlbWFpbi4gc2VydmljZSBtZW1iZXJzIHNlcnZpbmcgaW4gYWwgVGFuZiBhcmUgbm93IHJlbWFpbmluZyBpbiBwbGFjZSBpbmRlZmluaXRlbHkgYXMgYSBjaGVjayBhZ2FpbnN0IElyYW4gYSBzdGVwIHNvdWdodCBieSBJc3JhZWwuIEFuZCBpbiBhIHRyaXAgdG8gdGhlIE1pZGRsZSBFYXN0IHRoaXMgbW9udGgsIEJvbHRvbiBhbm5vdW5jZWQgbmV3IG9uIHRoZSB3aXRoZHJhd2FsLCBpbmNsdWRpbmcgZGVtYW5kaW5nIGFzc3VyYW5jZXMgZnJvbSBUdXJrZXkgaXQgd29uIGF0dGFjayBLdXJkaXNoIGZpZ2h0ZXJzIGluIFN5cmlhLiBjb21tYW5kZXJzIGluIHdoaWNoIHRoZXkgYXJndWVkIHRoYXQgdGhleSwgbm90IGFsbGllcywgd2VyZSBiZXN0IHBvc2l0aW9uZWQgdG8gZGVzdHJveSB0aGUgbGFzdCB2ZXN0aWdlcyBvZiB0aGUgSXNsYW1pYyBTdGF0ZSB0ZXJyaXRvcmlhbCBjYWxpcGhhdGUgaW4gU3lyaWEuIFRoZW4gY2FtZSBjb25jZXJucyBhYm91dCB0aGUgZmF0ZSBvZiB0aGUgS3VyZHMsIHdobyBmYWNlIGFzc2F1bHQgZnJvbSBUdXJrZXksIHdoaWNoIGNvbnNpZGVycyB0aGVtIGEgdGVycm9yaXN0IGdyb3VwLCBhbmQgSXJhbmlhbiByZWdpb25hbCBpbmZsdWVuY2UuClNhY2hhbnQgcXVlIGxhIHBsdXBhcnQgZGUgY2VzIGh1aWxlcyBlc3NlbnRpZWxsZXMgZXQgZXNzZW5jZXMgY29udGllbm5lbnQgYXVzc2kgZGVzIHBobm9scyBldCBkZXMgbW9ub3RlcnBuZXMsIGRvbnQgbm91cyBhdm9ucyBwYXIgYWlsbGV1cnMgcmVsZXYgbGUgY2FyYWN0cmUgaXJyaXRhbnQsIG9uIHByZW5kcmEgc29pbiBkZSBsZXMgbWxlciAgdW5lIGh1aWxlIHZndGFsZSBhdmFudCB0b3V0IHVzYWdlIGN1dGFuLiBEZSBwbHVzLCB0YW50IHBob3Rvc2Vuc2liaWxpc2FudGVzLCBvbiB2ZWlsbGVyYSAgbmUgcGFzIHMgYXUgc29sZWlsIGFwcnMgdG91dGUgYXBwbGljYXRpb24sIGRlIG1tZSBxdWUgcGFyIHZvaWUgaW50ZXJuZSAobW1lIHMgZXN0IHZyYWkgcXVlIGMgYWxvcnMgbW9pbnMgcHJvYmxtYXRpcXVlLCBpbCBlc3QgYm9uIGRlIHJlc3RlciBwcnVkZW50KS4uIApBYm91dCAyMCBwZXJjZW50IGhhdmUgaGFkIHNvbWV0aGluZyB2aW9sZW50IG9jY3VyIGluIHRoZWlyIHBhc3QsIHdoaWNoIG1heSBvciBtYXkgbm90IGJlIHJlbGF0ZWQgdG8gdGhlaXIgY3VycmVudCBjaGFyZ2VzLgpVc3VhbGx5IGEgdHVybiB0aW1lciB3b24gc3RhcnQgY291bnRpbmcgZG93biBpbiBhIHJlYWwgY2FzaW5vIHVubGVzcyB0aGUgcGVyc29uIGhhcyBoYWQgYSBsb25nIHRpbWUgdG8gdGhpbmsgYW5kIGFub3RoZXIgcGxheWVyIGF0IHRoZSB0YWJsZSBjYWxscyBmb3IgdGhlIHRpbWVyIGJlY2F1c2UgdGhlIHBsYXllciBpcyB0YWtpbmcgdG9vIGxvbmcgdG8gdGhpbmsuLiAKSW4gdGhpcyBzaXR1YXRpb24gdGhlIHBvdCB3aWxsIGJlIHNwbGl0IGFzIHRoZXkgaG9sZCBhIDUgY2FyZCBjb21iaW5hdGlvbiBvZiB0aGUgc2FtZSB2YWx1ZS4gCkluIGdyYWRlIDcgdGhlcmUgd2FzIHRoaXMgbG91ZCBhbm5veWluZyBidWxseSB0aGF0IGdlbmVyYWxseSBpZ25vcmVkIG1lLCBidXQgb25jZSBzaG92ZWQgbWUgYmFja3dhcmRzIGludG8gaGlzIGZyaWVuZCB3aG8gd2FzIGtuZWVsaW5nIGJlaGluZCBtZSB3YWl0aW5nIHRvIHRyaXAgbWUuIE5vdCBleHBlY3RpbmcgdGhlIHN1ZGRlbiBhdHRhY2sgSSB3ZW50IG92ZXIgaGlzIGZyaWVuZCBhbmQgc21hc2hlZCBteSBoZWFkIG9uIHRoZSBncm91bmQuIEkgdG9sZCBoaW0gaGUgd2FzIGEgZGljayBhbmQgcHJldHR5IG11Y2ggZnVja2luZyBoYXRlZCB0aGF0IHByaWNrIGZvciB0aGUgcmVzdCBvZiBtaWRkbGUgc2Nob29sLi4gCkdhci4uIApIZXJlIHRoZSB0aGluZywgSG9sZGVuIGlzIGEgdmVyeSB1bnJlbGlhYmxlIG5hcnJhdG9yIGFzIHdlbGwuIEZvciBleGFtcGxlLCB3aGVuIGhlIGlzIGV5ZSBiYWxsaW5nIHRoZSB0aHJlZSBnaXJscyBhdCB0aGUgY2x1YiwgdGhleSBhcmUgbGF1Z2hpbmcsIGJ1dCBoZSB0aGlua3MgaXQgYmVjYXVzZSBoZSAic3VhdmUiICAgVGhlbiBhZnRlciBoZSBkYW5jZXMgd2l0aCBvbmUgb2YgdGhlbSwgdGhleSBkb24gaW52aXRlIGhpbSBiYWNrIHRvIHRoZXJlIHRhYmxlLCBIb2xkZW4gdGhpbmtzIGl0IGJlY2F1c2UgdGhleSBhcmUgZHVtYiBvciBzb21ldGhpbmcsIGJ1dCBhY3R1YWxseSwgdGhlc2UgbGFkaWVzIGFyZSAzMCB5ZWFycyBvbGQsIHRoZXkgYXJlIExBVUdISU5HIGF0IGhpbS4gClRoaXMgYXJ0aWNsZSB3aWxsIGNvdmVyIGEgZmV3IHNpZ25pZmljYW50IG1vbWVudHMgb2YgdGhlIHJlbWFpbmluZyBldmVudHMgc28gdGhhdCB0aGUgZWZmb3J0cyBvZiB0aGVzZSBwbGF5ZXJzIHdpbGwgbm90IGJlIGZvcmdvdHRlbi4gT25lIG9mIHRoZSBtb3N0IG91dHN0YW5kaW5nIGFjY29tcGxpc2htZW50cyB3YXMgdGhlIHN1Y2Nlc3NmdWwgdGl0bGUgZGVmZW5zZSBvZiBwbGF5ZXIgVGhhbmcgTHV1IHdoZW4gaGUgd29uIHRoZSAyMDA5IFdTT1AgZ29sZCBicmFjZWxldCBpbiBFdmVudCAzIE9tYWhhIEhpIExvdyBTcGxpdCA4IG9yIEJldHRlciwgd2hpY2ggd2FzIHRoZSBsYXJnZXN0IGxpdmUgT21haGEgSGlnaCBMb3cgU3BsaXQgdG91cm5hbWVudCBpbiBoaXN0b3J5LiAKSXQgc3RyYW5nZSBoYXZpbmcgc3Bva2VuIGluIG9uZSBsYW5ndWFnZSB5b3VyIHdob2xlIGxpZmUsIGFuZCBub3cgeW91IHRyeWluZyB0byBzcGVhayBpbiBhbm90aGVyIGxhbmd1YWdlIGFsbCBvZiBhIHN1ZGRlbi4gUGx1cyBpbiBjb252ZXJzYXRpb24sIG91ciBicmFpbnMgaGF2ZSB0byB0cmFuc2xhdGUgd2hhdCB0aGV5IHNhaWQgdG8gRW5nbGlzaCB0byB1bmRlcnN0YW5kIGl0LCB0aGVuIHRoaW5rIG9mIGEgcmVzcG9uc2UgYW5kIHRyYW5zbGF0ZSBpdCB0byB0aGUgb3RoZXIgbGFuZ3VhZ2UuIApOZXVzY2huZWUgaXN0IGdlZmFsbGVuIHVuZCBoYXQgZGllIFdpZXNlbmhuZ2UgbGVpY2h0IGJlcHVkZXJ0LiAKVGhpcyBvbmUgaXMgZXhjZWxsZW50LiAKRm9yIGV4YW1wbGUsIFdob2xlIEZvb2RzIGhhcyB0aGVpciBvd24gYmFrZXJ5IHByb3ZpZGluZyBmcmVzaCBicmVhZHMgZGFpbHkgd2l0aG91dCBicm9taWRlcywgd2hpY2ggY2FuIGRpc3BsYWNlIHRoZSB0aHlyb2lkIGdsYW5kIGlvZGluZSBjb250ZW50cyBhbmQgY3JlYXRlIGh5cG90aHlyb2lkaXNtLgpBcyB0aGUganVkZ2Ugb2JzZXJ2ZWQsIHRoZSB3b3JkaW5nIGluIHRoZSBhY3QgaXMgYnV0IGl0IGlzIGFsc28gdmVyeSB3aWRlIGluIGl0cyBzY29wZSBhcyB0byB3aGF0IGNvbnN0aXR1dGVzIGluY29tZS4gCkJlIGNhcmVmdWwgd2hlbiBjaG9vc2luZyBhIHRlYWNoZXIsIGJlY2F1c2UgdGhlcmUgaXMgbG90IG9mIHZlcnkgcG9vciBUYWkgQ2hpIGJlaW5nIHRhdWdodC4gCiJUaGV5IGFyZSB1c2luZyBzdHJhdGVnaWMgdGhpbmtpbmcgYW5kIGFyZSBhbHdheXMgYSBzdGVwIGFoZWFkLCIgaGUgc2FpZC4gClRoZSBsb2NhdGlvbiBpcyBhIHByb2JsZW0gdG9vLiBQZW9wbGUgaGF2ZSB0byB0cmF2ZWwgdG8geW91ciBwbGFjZSBpZiB0aGV5IHdhbnQgdG8gcGxheSwgc28gaXQgbWVhbnMgdGhhdCB0aGV5IGNhbid0IGNvbWUgZXZlcnkgZGF5IGFuZCB0aGV5IGhhdmUgcHJvYmFibHkgYW5vdGhlciBwbGFjZSB0byBwbGF5IGNsb3NlIHRvIHRoZWlyIGhvdXNlLiAKT24gdGhlIHNpeHRoIGRheSBvZiBIYXphcmUncyBmYXN0LCBUaGFja2VyYXkgbWV0IHRoZSA4MSB5ZWFyIG9sZCBhbnRpIGdyYWZ0IGNydXNhZGVyIGF0IGhpcyBwcm90ZXN0IHNpdGUgaW4gUmFsZWdhbiBTaWRkaGkgdmlsbGFnZSBvZiBBaG1lZG5hZ2FyIGRpc3RyaWN0IGluIE1haGFyYXNodHJhIGFuZCBleHRlbmRlZCBoaXMgZnVsbCBzdXBwb3J0IHRvIGhpcyBhZ2l0YXRpb24uIApJdCBvbmx5IGxpdmVkIDggeWVhcnMgZmlsbGVkIHdpdGggdmV0IGJpbGxzLiBBIHNoaXQgdG9uIG9mIHZlcnkgZXhwZW5zaXZlIHZldCBiaWxscy4gSGUgZGllZCBhIGhvcnJpYmxlIGRlYXRoIGZyb20gc29tZSBzb3J0IG9mIGNhbmNlciBvciB0dW1vdXIuIApUaGF0IGhvdyBpdCBpcyB3aXRoIHF1ZWVyIGtpZHMgcmFpc2VkIGluIHF1ZWVyIGZhbWlsaWVzLiBUaGV5IGdyb3cgdXAgd2l0aCBjcmF6eSBpZGVhcyBhYm91dCBlY29ub21pYyBhbmQgcmFjaWFsIGp1c3RpY2UuIFRoZXkgYXJlIGZlZCBhIGZlbWluaXN0IGNyaXRpcXVlIG9mIG1hcnJpYWdlIGFzIGEgcGF0cmlhcmNoYWwgaW5zdGl0dXRpb24gd2l0aCB0aGVpciBtYW1hcyBtaWxrIG9yIHRoZWlyIHBhcGFzIGZvcm11bGEuIEFuZCB3aGVuIHRoZXkgZmVlbCBsaWtlIHRoZWlyIGNvbW11bml0eSwgdGhlIG9uZSB0aGV5IGdyZXcgdXAgaW4gYW5kIGZlbHQgc3VwcG9ydGVkIGJ5LCBpcyBiZWluZyBoaSBqYWNrZWQgYnkgcGVvcGxlIHdobyBkb24gY2FyZSBhYm91dCB0aGVtLCB0aGV5IHNwZWFrIHVwLgpPbmUgYWJpbGl0eSB0byBjb3BlIHdpdGggdGhlIGN1c3RvbWVyL2VtcGxveWVlIGR5bmFtaWMuIApUaGUgaXNsYW5kIGhhcyB0d28gc3BpY2UgcHVsbG91dHMgYWxvbmdzaWRlIHRoZSBjb29rdG9wIHBsdXMgY3VzdG9tIHdpbmUgc3RvcmFnZS4gSXQgYWxzbyBoYXMgYSBtaXhlciBsaWZ0OiBvcGVuaW5nIGEgZHJhd2VyIHRyaWdnZXJzIGEgbWVjaGFuaXNtIHRoYXQgcmFpc2VzIGEgc2hlbGYgaG9sZGluZyB0aGUgbWl4ZXIgdG8gdGhlIGxldmVsIG9mIHRoZSBpc2xhbmQgY291bnRlcnRvcC4KQ2hlY2sgb3V0IHNvbWUgc3RyZWFtcyBvZiB2YXJpb3VzIHBsYXllcnMgb24gdHdpdGNoLiBJIHdvdWxkIHNheSBtb3N0IG9mIHRoZSBwZW9wbGUgc3RyZWFtaW5nIGFyZSBiYWQgcGxheWVycyBzbyBiZSBjYXJlZnVsIHRha2luZyB3aGF0IHRoZXkgaGF2ZSB0byBzYXkgdG8gaGVhcnQsIGJ1dCBpdCBpcyBzdGlsbCBnb29kIHRvIGdldCBhIHRhc3RlIGZvciB0aGUgd2F5IHBlb3BsZSBhcmUgcGxheWluZyBwb2tlci4KVGhlcmUgaXMgbm8gcG9pbnQgdG8gS2FlcGVybmljayBkb2luZyB0aGF0IG5vdy4gWmVyby4gV2hpY2ggc2hvdWxkIG5vdGJlIGEgc3VycHJpc2UsIGV4Y2VwdCBtYXliZSB0byBKZWQgWW9yayBhbmQgYWxsIGhpcyBidWRkaWVzLgpTdWJwYXIgbW92aWUgYnV0IG5vdCBhY3RpdmVseSBiYWQuLiAKSSBtZWFuIG9idmlvdXNseSBpdCBoYXJkIHRvIGp1ZGdlIHdpdGggc28gbGl0dGxlIGluZm9ybWF0aW9uIGFuZCB0aGUgTEFPUCBjb3VsZCB2ZXJ5IHdlbGwgYmUgY29ycmVjdCB0aGF0IHRoZSB2aWN0aW0gd2lsbCBiZSBoYXBweSBhYm91dCB0aGlzIHR1cm4gb2YgZXZlbnRzLCBidXQgc29tZSB0aGluZ3MgdGhlIExBT1Agc2FpZCBtYWRlIG1lIHdvcnJ5IHRoZXkgc3RpbGwgdGhpbmtpbmcgc2VsZiBjZW50ZXJlZGx5IGFib3V0IHRoaXMgc2l0dWF0aW9uIHJhdGhlciB0aGFuIHB1dHRpbmcgdGhlaXIgdmljdGltIG5lZWRzIGZpcnN0LiAKU28gbWF5YmUgc29tZSBvZiB0aG9zZSBzdG9yeSBpZGVhcyB0aGV5IGNhbWUgdXAgd2l0aCBiZWZvcmUgd3JpdGluZyBWSUkganVzdCBkaWRuIHdvcmsgYnkgdGhlIHRpbWUgVklJIGhhZCBiZWVuIHdyaXR0ZW4gYW5kIHRoZXkgaGFkIHRvIGRpdGNoIHRoZW0gYmVjYXVzZSBWSUkgaGFkIGV2b2x2ZWQgc2luY2UgdGhlbi4uIApHb2luZyBvZmYgdG9waWMgaGVyZSwgYnV0IGhvbmVzdGx5LCBpZiBvdXIgY291bnRyaWVzIGRvIGdldCBvdmVycnVuIGJ5IHRoZSBNdWhhbW1hZGFuIGhvcmRlcywgdGhlIG9uZSBnb29kIHRoaW5nIHRvIGNvbWUgb3V0IG9mIGl0IGlzIGhvdyB0aGV5IGRlYWwgd2l0aCBmZW1pbmlzdHMuCkkgY2hvc2UgdG8gY2FycnkgdGhlIGNoaWxkIHRvIHRlcm0gYW5kIHBpY2tlZCBhIGZhbWlseSB0byBhZG9wdCBhZnRlciBlbmRsZXNzIGhlbHAgYW5kIHJlc291cmNlcyBmcm9tIFBsYW5uZWQgUGFyZW50aG9vZC4gT24gT2N0b2JlciAyOHRoLCAxOTk2IEkgZGVpbHZlcmVkIGEgaGVhbHRoeSBiYWJ5IGJveSB0aGF0IGEgY291cGxlIGluIHRoZWlyIDMwIGFkb3B0ZWQgYXMgdGhlaXIgb3duLi4gClRoZXJlIHJlYWxseSBpcyBubyBuZWVkIGZvciB5b3UgdG8gYXR0YWNrIGFsbCBzdXBwb3J0ZXJzIG91dCB0aGVyZSBiZWNhdXNlIGFzIEkgc2FpZCwgaXQganVzdCBmbGF0IG91dCBkdW1iIHRvIG1ha2Ugc3dlZXBpbmcganVkZ2VtZW50cyBhYm91dCBhbGwgNjIgbWlsbGlvbiB2b3RlcnMuCkZvciB0aGlzIGxldmVsIHlvdSdsbCBuZWVkIHRoZSBUcmVhc3VyZSBTY29wZSB1cGdyYWRlIGZvciBSb3VnZSwgeW91IGNhbiBmaW5kIHRoaXMgdXBncmFkZSBieSB1c2luZyBteXN0aWMgbWVsb2R5IG9uIGEgYm94IHNsaWdodGx5IHRvIHRoZSByaWdodCBvZiB0aGUgc3RhcnRpbmcgcG9zaXRpb24gKGl0J3Mgb24gdGhlIHNlY29uZC90aGlyZCBmbG9vcikgYW5kIHRoZW4gdXNlIHRoZSBwbGF0Zm9ybXMgdG8gYWNjZXNzIHRoZSB1cGdyYWRlLiAKQnV0IHRha2Ugbm90ZSwgb25seSA1NTAgY2FzZXMgb2YgdGhpcyBlc3RhdGUsIFNhZ2UgR3JhdmVsYmFyIGdyb3duIFBpbm90IEdyaXMgd2VyZSBwcm9kdWNlZC4gCldoZW4gZGlzY3Vzc2luZyBzZXggd29yaywgaXQncyBpbXBvcnRhbnQgdG8gZGlzdGluZ3Vpc2ggYmV0d2VlbiB0aGUgZGlmZmVyZW50IHR5cGVzIG9mIHNlcnZpY2VzIG9mZmVyZWQgYnkgdGhlIHdvcmtlcnMuIApUaGUgbmV4dCBkaWZmZXJlbmNlIGJldHdlZW4gRWluYXVkaSBhbmQgSGFuZGVsIGlzIHRoYXQgSGFuZGVsIHdvdWxkIGhhdmUgdXNlZCB0aGF0IGNob3JkIHByb2dyZXNzaW9uIG9uY2UsIG1heWJlIHR3aWNlLCBpbiBvbmUgb2YgaGlzIGFyaWFzLiBFaW5hdWRpIHB1dHMgaXQgb24gYSBsb29wIChhbm90aGVyIG1vZGVybiBpbmZsdWVuY2UpLiBOb3csIEknbSBhIGJpZyBmYW4gb2YgcmVwZXRpdGl2ZSBtaW5pbWFsaXNtLCBidXQgSSBkb24ndCBsaWtlIEVpbmF1ZGkncyB1c2Ugb2YgcmVwZXRpdGlvbi4gCldoYXQgaGFwcGVucyBpbiB0aGUgTm9ydGhlYXN0IG9yIHRoZSBXZXN0IGNvYXN0IGlzIG5vdCBuZWNlc3NhcmlseSB3aGF0IGhhcHBlbnMgaW4gVGV4YXMuIApXaGljaCBkb2VzIG5vdGhpbmcgcHJvZHVjdGl2ZS4uIApQbGVhc2UgZG9uIG1pc3VuZGVyc3RhbmQgbXkgc3RvcnksIEkgZG8gbm90IGVuY291cmFnZSBhbnlvbmUgdG8gdGhpbmsgdGhhdCB0aGVpciBwcm9ibGVtcyBvciBtaXNmb3J0dW5lcyBjb21lIGZyb20gYSBjdXJzZSBub3IgYW0gSSBzYXlpbmcgdGhhdCBpZiBhIHBzeWNoaWMgdGVsbHMgeW91IHNvbWV0aGluZyBhYm91dCBhIGZyaWVuZCBvciBmYW1pbHkgbWVtYmVyIHlvdXIgc2hvdWxkIGJlbGlldmUgdGhlbSBhbmQgYWN0IGFnYWluc3QgdGhlbSBvciB3aGF0ZXZlci4gQWdhaW4sIEkganVzdCB3YW50ZWQgdG8gc2hhcmUgbXkgZXhwZXJpZW5jZSwgc29tZXRoaW5nIHRoYXQgaGFwcGVuZWQgdG8gbWUgdGhhdCBldmVuIEkgY2FuIGZ1bGx5IHVuZGVyc3RhbmQuIFRoYXQgYWxsLgpCdXQgb2YgY291cnNlLCBhbm90aGVyIGFzcGVjdCBvZiBodW1hbiBpcnJhdGlvbmFsaXR5IGlzIHRoZSBmYWN0IHRoYXQgcGVvcGxlIHdobyBoYXZlIHN0YWtlZCB0aGVpciBzb3VsIG9uIHRoZSBpZGVhIHRoYXQgYnVybiBpbiBpcyBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBhcmUgbmV2ZXIgZ29pbmcgdG8gYWNjZXB0IHRoYXQgdGhleSBtYXkgYmUgd3JvbmcuIFRoZXkgbWF5IGJlIGFibGUgdG8gYXJyaXZlIGF0IHRoYXQgY29uY2x1c2lvbiBieSB0aGVtc2VsdmVzIGlmIHRoZXkgaG9uZXN0bHkgb3BlbiB0aGVpciBtaW5kcyBhbmQgcmVhbGx5IHRoaW5rIGFib3V0IGl0LiBidXQgYWxtb3N0IG5vYm9keSB3aWxsLiBBbmQgcGVvcGxlIGNhbiBiZSBjb252aW5jZWQgYnkgc29tZW9uZSBlbHNlIHRvIGNoYW5nZSB0aGVpciBtaW5kIG9uIHNvbWV0aGluZyB0aGV5IGhhdmUgYSBzdHJvbmcgb3BpbmlvbiBvbi4gVGhhdCBhbHNvIHdoeSB3ZSBoYXZlIGFudGkgdmF4eGVycy4gQW5kIFJlcHVibGljYW5zLiA6KSBCdXQgdGhhdCBhbm90aGVyIHJhbnQuCkkgd291bGRuIGJvdGhlciB3aXRoIHByaW9yIHZpc2l0cy4gSnVzdCBtYWtlIHN1cmUgdGhlIGNhdCBoYXMgc29tZSBwbGFjZXMgd2hlcmUgaXQgY2FuIGdldCBhd2F5IGZyb20gdGhlIGRvZyAgIGEgaGlkaW5nIHBsYWNlLCBhIGhpZ2ggc3VyZmFjZSwgZXRjLiBJZiB0aGUgY2F0IGhhcyBzb21lIGhpZGluZyBwbGFjZXMsIGl0IGNhbiBwcmV0dHkgbXVjaCB0YWtlIGNhcmUgb2YgaXRzZWxmLiBJdCB3b3VsZCBiZSBhIHNoaXQgc2l0dWF0aW9uLCBpZiB0aGUgY2F0IGhhZCBubyBwbGFjZSB0byBoaWRlLiBUaGF0IGNvdWxkIGNhdXNlIGhvc3RpbGl0eSBhbmQgdG9vIG11Y2ggc3RyZXNzLiBLZWVwaW5nIHRoZSBjYXIgYW5kIHRoZSBkb2cgaW4gc2VwYXJhdGUgcm9vbXMgZm9yIGEgZmV3IGRheXMgbWlnaHQgaGVscCB0b28uIEFkanVzdGluZyB0byBhIG5ldyBzcGFjZSBpcyBhbHJlYWR5IHN0cmVzc2Z1bCwgc28gaWYgdGhlIGRvZyBjYW4gYmUga2VwdCBzZXBhcmF0ZSBmb3IgYSBmZXcgZGF5cywgaXQgbWlnaHQgYmUgaGVscGZ1bCBmb3IgdGhlIGNhdC4KSXQgcHJvYmFibHkgYmV0dGVyIHRvIHN0aWNrIHRvIG1vc3RseSA0IGNhcmQgdGhvdWdoLCB1bmxlc3MgeW91IGtub3cgb2YgYSBzb2Z0IG5lYXJieSBsaXZlIGJpZ08gZ2FtZSBvciBhcmUgcGxheWluZyB3aXRoIGZyaWVuZHMuV2F0Y2ggUG9rZXIgTmlnaHQgaW4gQW1lcmljYSBjb21wbGV0ZWx5IGxpZSBhYm91dCBhIGhhbmQgdG8gbWFrZSBpdCBsb29rIGxpa2UgYSBwcm8gZ290IGRyYXduIG91dCBvbiBieSBhbiBhbWF0ZXVyIHBsYXllci4gSSB3ZW50IGZyb20gZmVlbGluZyBzb3JyeSBmb3IgaGVyIGF0IGZpcnN0IHRvIGFsbW9zdCBkaXNndXN0IGFmdGVyIHJlYWRpbmcgc29tZSBvZiB0aGUgdGhpbmdzIHNoZSBzYWlkIGFuZCBkaWQuIApUaGUgbXVsdGkgY29udG91ciBOYXBwYSBsZWF0aGVyIHNlYXRzIGZlZWwgZmFudGFzdGljIGFuZCBvZmZlciBtYW55IGZlYXR1cmVzLCBpbmNsdWRpbmcgYWN0aXZlIHNpZGUgYm9sc3RlcnMgYW5kIHNldmVyYWwgc29vdGhpbmcgbWFzc2FnZSBzZXR0aW5ncy4gCkkgc2VlIG15c2VsZiBpbiB3aGF0IHlvdSB3cml0dGVuLiAKVGhlIHdob2xlIHBvaW50IG9mIHVzaW5nIGhvbWVvcGF0aGljIG1lZGljYXRpb24gaXMgdG8gdHJlYXQgYmVuaWduIG1hbGFkaWVzLiAKSWYgd2UgYWxsIHJlc2lzdGVkLCB0aGV5IG5ldmVyIGJlIGFibGUgdG8gZG8gdGhhdCwgYXQgbGVhc3Qgbm90IHdpdGhvdXQgYWxzbyBkZXN0cm95aW5nIHRoZSB2ZXJ5IGxhbmQgdGhleSB0cnlpbmcgdG8gcnVsZS4gQnV0IG1vcmUgaW1wb3J0YW50bHksIGFuYXJjaHkgc2hvdWxkIGNvbWUgYWJvdXQgYnkgdGhlIHByaXZhdGUgc2VjdG9yIHNpbXBseSBvdXQgY29tcGV0aW5nIHRoZSBnb3Zlcm5tZW50IHRvIHRoZSBwb2ludCB0aGF0IHRoZXkganVzdCB3aXRoZXIgYXdheS4gQ3J5cHRvY3VycmVuY3kgaXMgaG9wZWZ1bGx5IGdvaW5nIHRvIGhhdmUgYW4gaW1wb3J0YW50IHJvbGUgaW4gdGhpcy4gCllvdXR1YmUgZG9lc250IG5lZWQgYW55IG1vcmUgdmxvZ3MgZGlzY3Vzc2luZyBsb3dzdGFrZXMgZ2FtZXMgZnJvbSBwZW9wbGUgd2hvIGFyZW50IGJvcm4gZW50ZXJ0YWluZXJzLCB0aGUgb25seSB1cHNpZGUgb2Ygc29tZSBvZiB0aGVtIGlzIHN0cmF0ZWd5IHNvIHRlcnJpYmxlIHlvdSBob3BlIHRoZSBhdWRpZW5jZSBpbXBsZW1lbnRzIGl0LiAKTGUgcGxhbiBQYXVsc29uLCBhZG9wdCBwYXIgbGUgQ29uZ3JzIGFtcmljYWluIGxlIDMgb2N0b2JyZSBldCBpbW1kaWF0ZW1lbnQgcHJvbXVsZ3UgcGFyIEdlb3JnZSBXLiAKVGhlcmUgd2FzIGEgbG90IG9mIHRhbGsgb2YgZGl2b3JjZSBpbiB0aGF0IGhvdXNlLiBUaGUgdHJ1dGggaXMsIFBhbGluIHJlYWxseSBkb2VzIGtub3cgaG93IHRvIGNvb2suVGhpcyBpcyBhIHdvbWFuIHdobyBzYXZlZCBBbGFza2EgbW9uZXkgYnkgZWxpbWluYXRpbmcgdGhlIHByZXZpb3VzIGdvdmVybm9yIHBlcnNvbmFsIGNoZWYsIHNvIHBlcmhhcHMgVGVhbSBMZXZpIHNob3VsZCBoYXZlIHJlY29uc2lkZXJlZCB0aGlzIGxpZS4gCldpbGwgbWFrZSB5b3UgYW4gYXdlc29tZSBob21lIGFuZCBiZSB0aGUgYmVzdCBtb3RoZXIgZXZlciEgd2FzIHdoZW4gQmVuIGV4cGxvZGVkLiAKSG93ZXZlciwgd2hhdCdzIG5vdCBjb21tb25seSBrbm93biBpcyB0aGUgbW9vbGFoIGl0cyBtYWtlcnMgd2lsbCByYWtlIGluIHdpdGggdGhlIHNhbGUgb2YgRGFyayBLbmlnaHQgbWVyY2hhbmRpc2UgYW5kIHNwZWNpYWwgZWRpdGlvbiBEVkRzLiAKSSBsaWtlIHRoZW0gdG9vLCBsZXNzIHNvIGFmdGVyIHJlYWRpbmcgYWJvdXQgdGhlbS4gSSBqdXN0IHN0YXJ0aW5nIHRvIHNlZSB0aGVpciBBbnRpIFRheCBSaGV0b3JpYyBmb3IgdGhlIGJ1bGxzaGl0IGl0IHRydWx5IGlzLgpQb2tlciBpbiBMb25kb24KSW5zaXN0ZW5jZSBvbiByYXBpZGx5IGRlbnVjbGVhcml6aW5nIHRoZSBwZW5pbnN1bGEsIGlzc3VpbmcgYSBoYXJzaGx5IHdvcmRlZCBzdGF0ZW1lbnQgdGhhdCB0aGUgV2hpdGUgSG91c2UgZGlzbWlzc2VkIGFzIGEgbmVnb3RpYXRpbmcgcGxveS4uIApPbmxpbmUgcG9rZXIgaGFzIGVjb25vbWljYWwgYmVuZWZpdHMuIEJlY2F1c2Ugb2YgdGhlIHJhcGlkIHBhY2Ugb2YgZ2FtZXBsYXkgaW4gb25saW5lIHBva2VyLCBwbGF5ZXJzIGdldCB0byBwbGF5IDEwIHRpbWVzIG1vcmUgaGFuZHMgaW4gYW4gaG91ciB0aGFuIGluIGEgcmVndWxhciBwb2tlciByb29tLiBUaGlzIHNpZ25pZmljYW50bHkgaW5jcmVhc2VzIHRoZSBjaGFuY2VzIGFuZCB0aGUgYW1vdW50IG9mIHdpbm5pbmdzLiBNdWx0aXBsZSB0YWJsZXMgbWFrZSB0aGlzIHBvc3NpYmxlLCB3aGVyZWFzIHRoaXMgaXMgaW1wb3NzaWJsZSBpbiBvZmZsaW5lIHBva2VyIHJvb21zLgpObyBicm9uemUgb3IgaXJvbiBwbGF5ZXIgaXMgZ29pbmcgdG8gZG8gdGhpcy4gCkVtcHR5TmV5bGFuZCBpcyBzbyB0ZXJyaWJsZS4gSXQgZmluZSB0byBub3QgbGlrZSB0aGUgY29hY2hlcyBidXQgZ28gYW5kIHN1cHBvcnQgdGhlIHBsYXllcnMuIEkgaGF2ZSBubyBpbnRlcmVzdCBpbiBUZW5uZXNzZWUgaWYgSSB3YXMgYSByZWNydWl0IGJlY2F1c2UgdGhlIG1lc3NhZ2UgaXMgdGhhdCB1bmxlc3MgeW91IHdpbm5pbmcsIHdlIGdvbm5hIHN0YXJ0IHN0YXlpbmcgaG9tZS4gSSBzYXkgdGhpcyBhcyBzb21lb25lIHdobyB3ZW50IHRvIGV2ZXJ5IEFsYWJhbWEgaG9tZSBnYW1lIGZyb20gSXQgd29ydGggc3VwcG9ydGluZyB0aGUgcGxheWVycy4KU28gd2hlbiB3ZSB3ZXJlIHJlYWR5IHRvIHVwZ3JhZGUgb3VyIHBva2VyIGFjY2Vzc29yaWVzLCB0aGUgMjAwIFBva2VyIENoaXAgVHJpIENvbG9yIFN1aXQgU2V0IHdpdGggQ2xlYXIgQWx1bWludW0gQ2FzZSBjYW1lIGFjcm9zcyBvdXIgcGF0aC4gCkkgZG8gYXBwcmVjaWF0ZSB0aGUgaG9uZXN0IGZlZWRiYWNrLiBUaGlzIGlzIHNvbWV0aGluZyB0aGUgb3RoZXIgbW9kcyBhbmQgSSBoYXZlIHRhbGtlZCBhYm91dCBhIGZhaXIgYml0LiBUaGVyZSBhIGxpdHRsZSByaXNrIG9mIHRocm93aW5nIG91dCB0aGUgYmFieSB3aXRoIHRoZSBiYXRod2F0ZXIgd2l0aCBvdXIgYXBwcm9hY2gsIGJ1dCBpbiBhIHBsYWNlIGxpa2UgcmVkZGl0LCB0aGVyZSBzbyBtdWNoIGJhdGh3YXRlciBmcm9tIGxvbmVseSB5b3VuZyBtZW4uIFRoYXQgd2FzIGEgd2VpcmQgbWV0YXBob3IsIGJ1dCB5b3UgZ2V0IHRoZSBpZGVhICBpbiBvcmRlciB0byBnZXQgcmlkIG9mIHRoZSByZWFsbHkgYmFkIGNvbW1lbnRzLCB3ZSBzb21ldGltZXMgaGF2ZSB0byBnZXQgcmlkIG9mIHNvbWUgZGVjZW50IG9uZXMgdG9vLiBXZSBoYXZlIHRvIGRyYXcgdGhlIGxpbmUgc29tZXdoZXJlIGFuZCBzbyBmYXIsIGFsdGhvdWdoIG91ciBhcHByb2FjaCBpc24gcG9wdWxhciB3aXRoIGV2ZXJ5b25lIChhbHRob3VnaCBpdCBpcyB3aXRoIG1vc3QpLCBpdCBkb2VzIHNlZW0gdG8gYmUgd29ya2luZy4KSG91c3RvbiwgVFggaGFzIGFuIGluc2FuZSBsaXZlIHNjZW5lLiBUaGUgJDEvMyBnYW1lcyB1c3VhbGx5IHBsYXkgbGlrZSBhICQyLzUgZ2FtZSBhbmQgbGlrZSBhICQ1LzEwKyBvbiBzb21lIG9jY2FzaW9ucy4gQWxzbywgZ2FtZXMgYXJlIHJ1bm5pbmcgYXMgaGlnaCBhcyAkNTAvMTAwIE5MSCBhbmQgJDI1LzUwLzEwMCBQTE8gd2l0aCBhICQxNTAvMzAwIG1peCBnYW1lIHRoYXQgcnVucyBvY2Nhc2lvbmFsbHkuIApTdXJwcmlzaW5nbHkgc28uIApUaGUgbW90aWZzIHdlcmUgcGFpbnRlZCBpbiBibGFjayBnbG9zc3kgY2xheSBvbiBhIGJhY2tncm91bmQgb2YgbGlnaHRlciBjbGF5LCB3aGljaCBnYXZlIHRoaXMgdGVjaG5pcXVlIHRoZSBuYW1lICdCbGFjayBGaWd1cmUgUGFpbnRpbmcnLiAKQSByaWJib24gY3V0dGluZyBjZXJlbW9ueSB0b29rIHBsYWNlIGF0IHRoZSBjYXNpbm8ganVzdCBiZWZvcmUgdGhlIG9wZW5pbmcuIEl0IHdhcyBhbm90aGVyIGhpc3RvcmljIG1vbWVudCBmb3IgdGhlIEdsYXNzIENpdHksIG11Y2ggbGlrZSB0aGUgZmlyc3QgZXZlbnQgaGVsZCBhdCB0aGUgSHVudGluZ3RvbiBDZW50ZXIsIGZpcnN0IHBpdGNoIHRocm93biBhdCBGaWZ0aCBUaGlyZCBGaWVsZCwgb3IgdGhlIGZpcnN0IEplZXAgcm9sbGluZyBvZmYgdGhlIHByb2R1Y3Rpb24gbGluZSBhdCB0aGUgbmV3IEplZXAgYXNzZW1ibHkgcGxhbnQuIApDTEUgQ2l0eSBDb3VuY2lsIHBheXMgS2VuIEpvaG5zb24gZm9yIG1vcmUgdW5pdGVtaXplZCBleHBlbnNlcyBDTEUgQ2l0eSBDb3VuY2lsIHBheXMgS2VuIEpvaG5zb24gZm9yIG1vcmUgdW5pdGVtaXplZCBleHBlbnNlcyBDb3VuY2lsbWFuIEtlbiBKb2huc29uIHJlY2VudGx5IGFza2VkIHRoZSBjaXR5IHRvIHJlaW1idXJzZSBoaW0gZm9yICQyMzYgd29ydGggb2YgZ2Fzb2xpbmUgaGUgc3RhdGVzIHRoYXQgaGUgYm91Z2h0IHRvIG1vdyBsYXducyBmb3Igc2VuaW9yIGNpdGl6ZW5zIGFuZCBjbGVhciBkZWJyaXMgZnJvbSB2YWNhbnQgbG90cyBpbiBoaXMgRWFzdCBTaWRlIHdhcmQgYmV0d2VlbiBTZXB0LiAyMCBhbmQgT2N0LiAzMS4gClNob3VsZCB5b3UgYmUgc28gbWluZGVkIHlvdSBjYW4gZW1haWwgbWUgYXQgW2VtYWlsIHlvdSdyZSBuZXcgdG8gaDJnMiBwbGVhc2UgZG8gZW5qb3kgdGhlIHBsYWNlLiBJdCdzIHVuaXF1ZSwgZmFtaWx5IGZyaWVuZGx5IGFuZCBtdWNoLCBtdWNoIG1vcmUgZW50ZXJ0YWluaW5nIHRoYW4gV2lraXBlZGlhLgpJbiAyMDAxLCBhIGJsYWNrIG1hbiB3aXRoIGEgYmFkIGV5ZSBuYW1lZCBXYWx0ZXIgQ3J1aXNlIHdhcyBmb3VuZCB0byBiZSBhIEROQSBtYXRjaCBmb3IgdGhlIHNlbWVuIGxlZnQgb24gdGhlIHZpY3RpbSBtYXRlcmlhbHMuIApUaGlzIGlzIG5vdCB0cnVlLiBUaGV5IGFyZSBzaXR0aW5nIGFzIGEgZ3JvdXAsIHRoZWlyIGdyb3VwIGlzIHBheWluZywgYW5kIHRoZWlyIGdyb3VwIHdhbnRzIHRvIGVhdCBYIGFtb3VudCBvZiBmb29kIGFuZCBub3QgWCsxIGFtb3VudCBvZiBmb29kLiBJIHVuZGVyc3RhbmQgdGhlIGxvZ2ljIGluIGhhdmluZyBhIG1pbmltdW0gcG9ydGlvbiBzaXplLCBidXQgcGVvcGxlIHNob3VsZG4gZmVlbCBvYmxpZ2F0ZWQgdG8gb3JkZXIgbW9yZSB0aGFuIHRoZXkgY2FuIGVhdCwgc28gbG9uZyBhcyB0aGV5IHBheWluZyBtZW51IHByaWNlIGZvciBmb29kIHRvIGJlIGVhdGVuIGJ5IGV2ZXJ5b25lLiBUaGlzIHNlZW1zIHRvIGJlIGxlc3MgInRoaW5rIG9mIHRoZSBjb3N0cyBvZiB0aGUgcmVzdGF1cmFudCIgYW5kIG1vcmUgIm9iZWRpZW50bHkgY29udHJpYnV0ZSB0byB0aGUgcmVzdGF1cmFudCBwcm9maXRzLiIgTm8gcmVzdGF1cmFudCBpcyBnb2luZyB0byBjcmFzaCBiZWNhdXNlIG9uZSBncm91cCBvcmRlcmVkIG9uZSBsZXNzIGRpc2ggdGhhbiB0aGV5IHNob3VsZCBoYXZlLgpUaGV5IGFyZSBub3doZXJlIG5lYXIgYXMgbGFyZ2Ugb3IgYXMgaGlnaGx5IHBvcHVsYXRlZCBhcyBUZXhhcywgZXNwZWNpYWxseSBpbiB0aGUgYm9yZGVyIHRvd25zLCBzbyBpZiBnYW1ibGluZyB3YXMgbGVnYWxpemVkIGl0IGlzIHZlcnkgcG9zc2libGUgdGhhdCBtb3N0IG9mIHRoZW0gd291bGQgc3VmZmVyLiAKSSBwZXJzb25hbGx5IHdvdWxkbid0IGRvIGFueSBvZiB0aGUgY2FueW9uIGhpa2VzIGluIHRoZSBzdW1tZXIuIFRoZSBndWlkZXMgdG9sZCBtZSBpbiB0aGUgc3VtbWVyIHRoZSBvZmYgcHJvcGVydHkgaGlrZXMgbGVhdmUgZXZlbiBlYXJsaWVyIHRoYW4gaW4gdGhlIHdpbnRlciBkdWUgdG8gdGhlIGhlYXQgKGluIHdpbnRlciB0aGV5IGxlYXZlIGF0IDhhbSkuMSB2b3RlU2hvdyBhbGwgYW5zd2VycyJQZXJzb25hbGx5IEkgdGhpbmsgdGhlIGxvd2VyIGNvc3Qgcm9vbXMgYXJlIGFjdHVhbGx5IGJldHRlciB0aGFuIHRoZSBoaWdoZXIgY29zdCBvbmVzIHRoZXkgYXJlIHNtYWxsZXIgYnV0IG11Y2ggbW9yZSBjb252ZW5pZW50bHkgbG9jYXRlZC4iUmVhZCBmdWxsIHJldmlldy4gClN0YXRzIGFsd2F5cyBmYXZvciByaW0gcnVubmluZyBiaWdzLCBpIGNhbiByZW1lbWJlciB0aGF0IEJyYW5kYW4gV3JpZ2h0IHdhcyBhbHdheXMgb25lIG9mIHRoZSBiZXN0IDIwIHBsYXllcnMgaW4gdGhlIE5CQSBhY2NvcmRpbmcgdG8gUEVSIHdoaWxlIGhlIHdhcyBoZXJlLCBvbiB0aGUgb3RoZXIgaGFuZCB0aGluZ3MgbGlrZSBiZWVpbmcgYSBnb29kIHN3aXRjaCBkZWZlbmRlciAod2hpY2ggTWF4aSBpcykgY2FuIGJlIG1lYXN1cmVkIGJ5IHN0YXRpc3RpY3MgYXMgb2YgcmlnaHQgbm93LldpdGggdGhhdCBiZWVpbmcgc2FpZCBpIGFsc28gdGhpbmsgUG93ZWxsIGlzIHVuZGVycmF0ZWQsIGhlIGhhcyBhbHNvIGRldmVsb3BlZCBuaWNlIGNoZW1pc3RyeSB3aXRoIEx1a2EgaW4gdGhlIGxhc3QgZmV3IG1vbnRocy5zcHJpdGUxNDQgIDM1IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29UaGF0IHdlbnQgcmVhbGx5IHdlbGwgaW4gbXkgb3Bpbmlvbi4gCldpdGggdGhlIGFkdmVudCBvZiBjb21wdXRlcnMgYW5kIGludGVybmV0LCBtYW55IG1vcmUgcGVvcGxlIGhhdmUgc3RhcnRlZCBwbGF5aW5nIHZhcmlvdXMgZm9ybXMgb2Ygb25saW5lIHBva2VyIGF0IHRoZSBiZXN0IGNhc2lub3MuIApJdCBoYXBwZW5lZCBhZ2FpbiB0b25pZ2h0LCB0aGVyZSB3YXMgYSBmaXNoIHRvIG15IHJpZ2h0IGFuZCBoZSBsaW1wZWQgb24gdGhlIEJUTiwgSSB3YXMgaW4gdGhlIFNCIHdpdGggS0sgYW5kIGJldCAkMC4wOCwgZmlzaCBjYWxscywgaXQgd2FzIGEgbG93LCBkcnkgZmxvcCBhbmQgaGUgZmxvYXRzIHVudGlsIHNob3dkb3duIGFuZCB0dXJucyBvdmVyIDc1byB3aXRoIGEgbWFkZSBzdHJhaWdodCBvbiB0aGUgdHVybi4gU3RhY2sgbG9zdC4gTWljcm9zdGFrZXMgZm9yIHlvdSBsb2wgQWx0aG91Z2ggSSB3YXMgcmVhbGx5IHBsZWFzZSB3aXRoIG15IHJlYWRzIEkgd2FzIGFibGUgZXhwbG9pdCBoaXMgd2VhayBwbGF5IGFuZCB3YXMgcGF0aWVudCBhbmQgZW5kZWQgdXAgZ2V0dGluZyBpdCBhbGwgYmFjayBwbHVzIG1vcmUgdW50aWwgaGUgZ2F2ZSB1cCBhbmQgbGVmdCB0aGUgdGFibGUgLiBJdCB3YXMgdGhlIGZpcnN0IHRpbWUgSSB0aGluayBJIGhhdmUgcHJvcGVybHkgZXhwbG9pdGVkIHNvbWVvbmVzIHBsYXkgYW5kIHJlYWQgdGhlbSB3ZWxsCkFic3VyZC4uIApZb3VyIGJ1ZGdldCBtaWdodCBoYXZlIGEgbGluZSBpdGVtIGZvciBvbmUsIG1heSBlIHR3byBvZiB0aGVzZSB0eXBlcyBvZiBwbGF5ZXJzLCBidXQgaXQncyBhbG1vc3QgaW1wb3NzaWJsZSB0byBwYXkgZm9yIGFsbCBmb3VyLiAKVGhlcmUgaXMgYSB2ZXJ5IGJpZyBwb3NzaWJpbGl0eSB0aGF0IGhlIGNhbiBjb250ZXN0IHRoZSBhZG9wdGlvbi4gCkJ1dCB3aGVuIGJ1c2luZXNzbWVuIEdyYWVtZSBCb3NzIGFuZCBNYWwgSHV0Y2hpbnNvbiBzb2xkIFNvZGVuJ3MgYXMgYSB0b3RhbCBwYWNrYWdlIGluIDIwMDAgaXQgc29sZCBmb3IgJDIuMjc1IG1pbGxpb24uIE1yIEFuZ2l1cyBzYWlkIGhlIGNvdWxkIG5vdCBkaXNjbG9zZSB0aGUgZGV0YWlscyBvZiB0aGUgc2V0dGxlbWVudCB3aGljaCBlbmRlZCBhIGRpc3B1dGUgd2l0aCBNciBXaWxsb3VnaGJ5IG92ZXIgdmFyaW91cyBpc3N1ZXMsIGluY2x1ZGluZyBwb2tlciBtYWNoaW5lIGxpY2VuY2VzLiBUaGUgcGFydGllcyBzZXR0bGVkIG91dCBvZiBjb3VydCBhZnRlciBsYXN0IG1vbnRoIGFwcGVhcmluZyBiZWZvcmUgdGhlIE5TVyBTdXByZW1lIENvdXJ0IG92ZXIgYSBkaXNhZ3JlZW1lbnQgd2hpY2ggaW5jbHVkZWQgTXIgV2lsbG91Z2hieSdzIGF0dGVtcHQgdG8gc2VsbCBwb2tlciBtYWNoaW5lIGVudGl0bGVtZW50cyBoZWxkIGJ5IHRoZSBob3RlbCBhZ2FpbnN0IE1yIEFuZ2l1cydzIHdpc2hlcy4gClJ1c3NpYSB3aWxsIGdvIHRvIHdhciB0byBjcmVhdGUgYSBidWZmZXIgem9uZSBpbiBFdXJvcGUgYmVjYXVzZSB0aGUgdXNpbmcgdXAgb2YgZm9zc2lsIGZ1ZWxzIGluIHRoZSBtaWRkbGUgRWFzdCB3aWxsIG1ha2UgU2liZXJpYSBhIGJpZyB0YXJnZXQgZm9yIG90aGVyIGNvdW50cmllcy4gSXQgd2lsbCBiZSBkZWZlYXRlZCBieSBBbWVyaWNhLCB0aGUgRWFzdCBBc2lhbiBhbGxpYW5jZSwgRWFzdGVybiBFdXJvcGVhbiBhbGxpYW5jZSwgYW5kIHR1cmtleS4gCkluIHBva2VyIGRvIHlvdSBoYXZlIHRvIHNob3cgeW91ciBlbnRpcmUgaGFuZCBvciBqdXN0IHRoZSB3aW5uaW5nIG9uZT8KSXQgc3Vja3Mgc29tZXRpbWVzLiAKVGhlcmUgYXJlIG1hbnkgcmVhc29ucyBpbmNsdWRlIG91ciBsYWNrIG9mIGdlbmV0aWMgYWRhcHRhdGlvbiB0byBncmFzc2VzLCBhbmQgcGFydGljdWxhcmx5IGdsdXRlbiwgaW4gb3VyIGRpZXQuIApNeSBmYW1pbHkgaXMgb25lIG9mIHRob3NlIGZhbWlsaWVzIHByb3RlY3RlZCBieSBoZXJkIGltbXVuaXR5IGFuZCBhcyBhIG51cnNlIEkgaGF2ZSBmb3VuZCBpdCBpbXBvc3NpYmxlIHRvIGNvbnZpbmNlIGJsaXNzZnVsbHkgaWdub3JhbnQgZmFtaWx5IG1lbWJlcnMgb2YgdGhlIGltcG9ydGFuY2Ugb2YgdmFjY2luYXRpb24uIE15IHNvbiBoYXMgYSBmYWlybHkgcmFyZSBhdXRvaW1tdW5lIGNvbmRpdGlvbiwgSW1tdW5lIFRocm9tYm9jeXRvcGVuaWMgUHVycHVyYSAoSVRQKS4gCldpZSB2aWVsIGVpbmVtIFN0dWRlbnRlbiBzZWluIFN0dWRpZW5mYWNoIHdlcnQgaXN0IGhuZ3QgbmF0cmxpY2ggbmljaHQgYWxsZWluIGFuIHNlaW5lbSBNZWhydmVyZGllbnN0IGFiLiBHZW5hdSBkYXMgbWVpbnRlIGljaCBhdWNoIG1pdCBkZXIgdm9uIGRpciB6aXRpZXJ0ZW4gU3RlbGxlLiAKSXQgcmVxdWlyZXMgcGF0aWVuY2UsIGEgdGVhbSBlZmZvcnQsIGFuZCBhIHJlYWxpc3RpYyBnb2FsLiBBIGhvbGUgY2FuIHN1Y2sgeW91IGluIHNvIGZhciB5b3UgZG9uIHJlYWxseSBzZWUgYSB3YXkgb3V0LCBidXQgd2l0aCBoZWxwIHlvdSBjYW4gZXNjYXBlIGl0LiBOZWl0aGVyIGFueGlldHkgb3IgZGVwcmVzc2lvbiBjYW4gZ28gYXdheSBqdXN0IGJ5IHRlbGxpbmcgc29tZW9uZSB0byBnZXQgYmV0dGVyLiAKSG9wZWZ1bGx5IHRoYXQgYSBnb29kIGlsbHVzdHJhdGlvbi4KRWdsaSBzYXlzLiBUaG91Z2h0IGlmIHdlIGNvdWxkIGdldCBhbGwgdGhyZWUgdGhhdCB3b3VsZCBiZSBncmVhdC4gCldlIG9mZmVyIGEgcGVyc29uIGNlbnRyZWQgYXBwcm9hY2gsIG9mZmVyaW5nIGhvbGlzdGljIGNhcmUgZm9yIHRoZSBpbmRpdmlkdWFsIGFuZCB0aGVpciBmYW1pbHkgICBjb3ZlcmluZyBzb2NpYWwsIHBzeWNob2xvZ2ljYWwgYW5kIGJpb2xvZ2ljYWwgcGVyc3BlY3RpdmVzICAgYW5kIHlvdSB3aWxsIGdhaW4gY2xpbmljYWwgZXhwZXJpZW5jZSBpbiBhIHN1cHBvcnRpdmUgZW52aXJvbm1lbnQuLiAKU3BvcmtpdGl6ZWQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpUbyBwcm92aWRlIGEgY2x1YiBmb3IgcXVhbGlmaWVkIG1pbGl0YXJ5IHZldGVyYW5zIHdoaWNoIG9mZmVycyBicm90aGVyaG9vZCBhbmQgb3Bwb3J0dW5pdHkgdG8gZXN0YWJsaXNoIHJlbGF0aW9uc2hpcHMgd2l0aCBvdGhlciBtaWxpdGFyeSB2ZXRlcmFucyB3aG8gaGF2ZSBzZXJ2ZWQgaW4gdGhlIGRlZmVuc2Ugb2YgdGhlIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYS4gVG8gZXN0YWJsaXNoIGFuZCBzdXBwb3J0IGEgc3Ryb25nIHNlbnNlIG9mIHByaWRlIGluIGhhdmluZyBzZXJ2ZWQgaW4gdGhlIGFjdGl2ZSBtaWxpdGFyeSBzZXJ2aWNlIG9mIHRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EuIApHaWxsZXMgTWFyaW5pOiBXZWxsLCB3aGF0IGRpZCB5b3UgZXhwZWN0PyBHaWxsZXMgd2FzIGRlc3RpbmVkIHRvIGRhbmNlIHRoZSBzYW1iYSwgd2Fzbid0IGhlPyBMZXQncyBqdXN0IHNheSwgdGhlcmUgd2FzIG5vIHByb2JsZW0gd2l0aCBoaXAgYWN0aW9uIHRoZXJlLiAiWW91IGJyaW5nIG91dCBzb21ldGhpbmcgaW4gQ2hlcnlsIFtCdXJrZV0gSSBoYXZlbid0IHNlZW4gaW4gYSBsb25nIHRpbWUsIiBDYXJyaWUgQW5uIHNhaWQsIGFzdHV0ZWx5IHBvaW50aW5nIG91dCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGRhbmNpbmcgd2l0aCBHaWxsZXMgYW5kIGRhbmNpbmcgd2l0aCBXYXluZSBOZXd0b24uICJZb3UgY2FtZSBvdXQgaGVyZSBsaWtlIGEgdGhyb2JiaW5nIHJlZCwgaG90IHBva2VyISIgYSByZWFsbHkgZXhjaXRlZCBCcnVubyBzYWlkLCB3aGlsZSBMZW4gb2ZmZXJlZCB0aGlzIGJpdCBvZiBzaW1wbGUgcHJhaXNlOiAiWW91IGp1c3QgbWFkZSBhIGhhcmQgZGFuY2UgbG9vayBlYXN5LiIuIApUaGVyZSBhcmUgbWFueSB3YXlzIHRvIGRlYWwgd2l0aCB0aGlzIGhvcnJpYmxlIHBhaW4uIEx1Y2tpbHkgdGhlIFBhaW4gTWdtdCBkb2N0b3IgSSBzYXcgYWJvdXQgNSB5ZWFycyBhZ28gaGFkIG1lIGRvIGEgdHJpYWwgd2l0aCBhIHNwaW5hbCBjb3JkIHN0aW11bGF0b3IuIEkgaGFkIHRoZSBzdXJnZXJ5IGFuZCBvbmx5IGF0IHRpbWVzIHdvdWxkIG5lZWQgc29tZSBwYWluIG1lZHMuIApIZSBoYXMgZml2ZSBwb2ludHMgaW4gdGhyZWUgZ2FtZXMgc2luY2UgYmVpbmcgcmVjYWxsZWQgZnJvbSB0aGUgVG9yb250byBNYXJsaWVzIG9mIHRoZSBBbWVyaWNhbiBIb2NrZXkgTGVhZ3VlIGFuZCBzaXggcG9pbnRzIGluIDEyIGdhbWVzIG92ZXJhbGwgdGhpcyBzZWFzb24uCkRlaW5lIGVpZ2VuZW4gS3Vuc3R3ZXJrZSBzY2hyZWlic3QgZHUgYWJlciBiaXR0ZSBnZWZsbGlnc3QgdHJvdHpkZW0gaW4ga29ycmVrdGVtIEhvY2hkZXV0c2NoLCBhbGxlcyBrbGFyIEFsZGVyP0xhc3NlbiBTaWUgc2ljaCBuaWNodCBhdXNnZXNldHp0IEJyb3NjaHJlIG5hY2t0IG9kZXIgYW5kZXJ3ZWl0aWcgYW5zdGlnIEZsYW1tZS4KS25pZ2h0IEF1dG9iaW9ncmFwaHkgYmVuamFtaW4gZnJhbmtsaW4gcGRmIGZyZWUgZG93bmxvYWQgSGluZGkgaGQgbW92aWUgc29uZ3MuIApTaGF3biBKb2huc29uIFRoZSBsaXR0bGUgZ3ltbmFzdCBpcyBncm93aW5nIHVwIGJlZm9yZSBvdXIgZXllcyEgVGhlIHRoaXJkIHRpbWUgd2FzIHJlYWxseSB0aGUgY2hhcm0gZm9yIFNoYXduIGFuZCBNYXJrIEJhbGxhcyB3aG8gYWRkaXRpb24gdG8gdGhlIHN0ZXBzIHRoZSBjaGVtaXN0cnkgdGhpbmcgZG93biBsaWtlIG5vYm9keSdzIGJ1c2luZXNzLiBOb3QgdGhhdCB0aGVpciBwcmV2aW91cyB0d28gcGVyZm9ybWFuY2VzIHdlcmVuJ3QgYWxzbyBncmVhdCwgYnV0IHRoaXMgdGltZSB0aGUgc2hvY2sgb2YgInNleHkgU2hhd24iIHdhcyBiZWhpbmQgdXMgYW5kIHdlIGNvdWxkIGZvY3VzIG9uIGp1c3QgaG93IGVsZWdhbnQgdGhlc2UgdHdvIGFyZS4KTm8gc3BhbSwgZnVuZHJhaXNpbmcsIHZvdGUgZHJpdmVzLCBzdXJ2ZXlzIG9yIHN0dWRpZXM6IFBsZWFzZSByZWFkIFJlZGRpdCBzZWxmIHByb21vdGlvbiBydWxlcyBiZWZvcmUgcG9zdGluZyB5b3VyIG93biBjb250ZW50LiBSZWFkIG1vcmUgYWJvdXQgZnVuZHJhaXNpbmcsIHN1cnZleXMgYW5kIHN0dWRpZXMgaGVyZS4KSWYgeW91J3ZlIGdvdCBlbm91Z2ggbW9uZXkgc2F2ZWQgdG8gc3Vydml2ZSBmb3IgMiBtb250aHMgb3V0IFdlc3QsIGdvIGZvciBpdCBidXQgZmluZCBhIGpvYiBBU0FQLiAKSW4gdGhlIGVuZCBpdCdzIGltcG9ydGFudCB0byByZW1lbWJlciBpdCdzIGp1c3QgYSBjb252ZXJzYXRpb24sIGl0IGp1c3QgaGFwcGVucyB0byBiZSBhIGNvbnZlcnNhdGlvbiBhYm91dCB0aGUgam9iLiBJIGhhZCBhIHNob3J0IHN0aW50IG9mIHRpbWUgd2hlcmUgSSB3b3JrZWQgYXMgYW4gYXNzaXN0YW50IG1hbmFnZXIgYXQgYSBwbGFuZXQgZml0bmVzcy4gSSB3YXMgMTkgYW5kIEkgd2FzIHRhc2tlZCB3aXRoIHRoZSBqb2Igb2YgaW50ZXJ2aWV3aW5nIHBvdGVudGlhbCBoaXJlcy4gCklmIHlvdSBzdGlsbCBkZWNpZGUsIEkgYmVsaWV2ZSBvbmUgb2YgdGhlIHRyaWJlcyBpcyBzdGFydGluZyBhIHByb2dyYW1tZSBmb3Igc2hlbHRlcnMgZm9yIHRoZSBob21lbGVzcywgYnV0IHRoZXJlIGlzIHZlcnkgbGlrZWx5IGEgbG9uZyB3YWl0aW5nIGxpc3QgZm9yIHRoZSBwb2RzLiAKQWZ0ZXIgYSBjZXJ0YWluIHBvaW50IHRoYXQgbGlmZSBiZWNvbWVzIHNvIG5vcm1hbGl6ZWQgYW5kIHRoZXkgYXJlbiBwaGFzZWQgYnkgaXQsIHNvIGl0IG5vdCBhIHN1ZmZpY2llbnQgZGV0ZXJyZW50IHRvIHJlIG9mZmVuZGluZyAgIGFuZCB0aGV5IG1heSBldmVuIHByZWZlciBpdCBhbmQgcmUgb2ZmZW5kIHNpbXBseSB0byBiZSBiYWNrIHdoZXJlIHRoZXkgYXJlIGNvbWZvcnRhYmxlLi4gClRoZSBpZGVhIHdhcyB0byBqdXN0IGhhdmUgZnVuIGFuZCBzZWUgd2hlcmUgaXQgd2VudC4gQSB3ZWVrIGFnbywgaGUgYWR2YW5jZWQgdG8gdGhlIGZpbmFsIHRhYmxlLCB3aXRoIGVpZ2h0IG90aGVyIHBsYXllcnMgdnlpbmcgZm9yIHRoZSBtaWxsaW9uIGdyYW5kIHByaXplLiBKdXN0IGdldHRpbmcgdGhlcmUgZ3VhcmFudGVlZCBoaW0gYXQgbGVhc3QgYSBtaWxsaW9uIHBheWRheSBmb3IgbmludGggcGxhY2Ugd2l0aCB0aGUgcG9zc2liaWxpdHkgb2Ygd2lubmluZyBtb3JlIGlmIG90aGVycyB3ZXJlIGVsaW1pbmF0ZWQgYmVmb3JlIGhpbS4uIApNYW55IHNpdGVzIGFsc28gcGVyaW9kaWNhbGx5IG9mZmVyIHJlbG9hZCBib251c2VzICh1c3VhbGx5IHJlcXVpcmluZyBhbm90aGVyIGRlcG9zaXQgdW5kZXIgdGhlIHNhbWUgdGVybXMgYW5kIGNvbmRpdGlvbnMgYXMgYSBmaXJzdCB0aW1lIGJvbnVzKSB0byBjdXJyZW50IHBsYXllcnMgdG8gZW50aWNlIHRoZW0gdG8ga2VlcCBwbGF5aW5nIGF0IHRoZSBzaXRlLiBNYW55IHBsYXllcnMgY29udGludW91c2x5IG1vdmUgZnJvbSBzaXRlIHRvIHNpdGUgY29sbGVjdGluZyB0aGVzZSBib251c2VzIChvZnRlbiBjYWxsZWQgYm9udXMgaHVudGluZyksIHdoaWNoIGNhbiBiZSBhIGdvb2Qgd2F5IHRvIGluY3JlYXNlIGEgcGxheWVyJ3MgcHJvZml0IHBlciBob3VyIG9mIHBva2VyIHBsYXkuIEluIGFkZGl0aW9uLCBpZiB5b3UgYXJlIGFibGUgdG8gc2ltcGx5IHBsYXkgYnJlYWsgZXZlbiBwb2tlciwgYm9udXNlcyBjYW4gbWFrZSB5b3UgYSBwcm9maXQgYXMgeW91IGltcHJvdmUgeW91ciBnYW1lLgpUaGVyZSBoYXZlIGJlZW4gc29tZSBjb25jZXB0dWFsIGFkdmFuY2VzIGluIHRlY2huaXF1ZXMgaW4gQUkuIERlZXAgTGVhcm5pbmcgaGFzIGJlY29tZSB2ZXJ5IHBvcHVsYXIgaW4gdGhlIHBhc3QgZmV3IHllYXJzIGJlY2F1c2Ugb2YgdGhlIHN1Y2Nlc3Mgb2YgYSBmZXcgdGVjaG5pcXVlcyAoY29udm9sdXRpb25hbCBuZXVyYWwgbmV0d29ya3MpIGFyZSB3aGF0IHRoZXkgYXJlIGNhbGxlZCwgYW5kIHJlaW5mb3JjZW1lbnQgbGVhcm5pbmcgYW5kIHNvIGZvcnRoLiBCdXQgdGhleSBhcmUgbm90IHN1Y2ggc2lnbmlmaWNhbnQgYWR2YW5jZXMgY29uY2VwdHVhbGx5LiBUaGUgcmVhbCBhZHZhbmNlcyBhcmUgaW4gY29tcHV0aW5nIGFuZCB0aGUgYXZhaWxhYmlsaXR5IG9mIG1hc3NpdmUgYW1vdW50cyBvZiBkYXRhLCBsaWtlIHdoZW4geW91IGxvb2sgYXQgWW91VHViZSBvciBJbnN0YWdyYW0gdGhlcmUgaXMgYSBtYXNzaXZlIGFtb3VudCBvZiBkYXRhLCBhbmQgdGhlIGNvbXB1dGVycyBhcmUgcmlkaWN1bG91c2x5IG1vcmUgcG93ZXJmdWwuClRoZSBzaG9ydCB2ZXJzaW9uIGlzLCB3ZSBoYXZlIHRocmVlIHBvZGNhc3RzIHRoYXQgYXJlIGFsbCBmcmVlLCBhbmQgd2UgaGF2ZSBhIGdvb2QgbnVtYmVyIG9mIGxpc3RlbmVycyAoYWJvdXQgNzAsMDAwIGEgd2VlaykuIApDcmFpZ3NsaXN0IENoaWVmIEV4ZWN1dGl2ZSBKaW0gQnVja21hc3RlciByZWZ1c2VkIGNvbW1lbnQsIGV4cGxhaW5pbmcgdmlhIGUgbWFpbDogIkluIG91ciB2aWV3LCBkZXNpcmUgZm9yIHByZXNzIGF0dGVudGlvbiBpcyB0aGUgcmVhc29uIHRoZXNlIGRlc3RydWN0aXZlICdwcmFua3MnIGFyZSBwdWxsZWQsIHN1Y2ggdGhhdCB3ZSdyZSByZWx1Y3RhbnQgdG8gY29tbWVudC4iCkkgbW9yZSBzdXJwcmlzZWQgdGhhdCB0aGUgQkIgY2FsbGVkLiBXaGF0IGlzIGhlIHJlYWxseSBiZWF0aW5nIGhlcmUgb24gdGhlIHJpdmVyPyBBSyBjaG9wcywgaGUgbG9zZXMgdG8gS1EsIGFueSA1LCBLSywgUVEsIGFueSBmbHVzaC4gCkJ1dCBpdCdzIGJsb29kLiBUaGF0IHRoaW5nIHRoYXQgbW9zdCBvZiB0aGVzZSBkdWRlcyBoYXZlIGV4cGVyaWVuY2VkIGNvbWluZyBvdXQgb2YgdGhlaXIgYm9keSBhZnRlciBhIHNjcmFwZSBvbiB0aGUgcGxheWdyb3VuZCBvciB0aGVpciBub3NlIHdoZW4gdGhlIHdlYXRoZXIgZ2V0cyB0b28gZHJ5IG9yIGV2ZW4gd2hlbiB0aGV5IHNoaXQgc29tZXRpbWVzICh0aGFua3MgaGVtb3JyaG9pZHMpLiAKQXUgZHRvdXIgZGUgZGlzY3Vzc2lvbnMgZXQgZCdjaGFuZ2VzIGF1IHNlaW4gZGVzIGxhYm9yYXRvaXJlcyBkZSByZWNoZXJjaGUsIHBsdXNpZXVycyBjaGVyY2hldXJzIHBhcnRhZ2VhaWVudCBsZSBjb25zdGF0IHNlbG9uIGxlcXVlbCBsYSBwcnNlbmNlIGRlcyBmaWN0aW9ucyBkYW5zIGxlIGRyb2l0IGZhaXNhaXQgbCdvYmpldCBkZSBsYSBwbHVwYXJ0IGRlcyBlbnNlaWduZW1lbnRzIGRpc3BlbnNzIGRhbnMgbGVzIGZhY3VsdHMuIFRvdXRlZm9pcywgbCd0dWRlIGRlIHNhIHByc2VuY2UgZGFucyBsZXMgZmljdGlvbnMgcmVzdGFpdCB1biB0ZXJyYWluIHBldSBleHBsb3IgZGFucyBsZSBjYWRyZSB1bml2ZXJzaXRhaXJlLCByZW5kYW50IGFsb3JzIGludmlzaWJsZSBsZSBkcm9pdCBkYW5zIGxlcyBkaWZmcmVudGVzIGZpY3Rpb25zLiAKVGhleSB3aWxsIHdhbnQgdG8gc2hvdyB1cyBtb3JlIG9mIHdoYXQgaXMgY29taW5nIHRoZXJlIGFuZCBnaXZlIHVzIG1vcmUgaG9wZSBmb3IgaXQuIApPZmYgb2YgdGhlIHRvcCBvZiBteSBoZWFkLCBJIHRoaW5rIHRoZSBjaG9pY2VzIGFyZSBtaW5pIHZpdGUgbWl4ZWQgaGF5LCBtaW5pIHZpdGUgYWxmYWxmYSBhbmQgbWluaSB2aXRlIGdyYXNzIGhheS4gV2hpY2ggZG8geW91IHRoaW5rIHdvdWxkIGJlIGJldHRlciBmb3IgbXkgaG9yc2U/LiAKSSByZW1lbWJlciB0aGlua2luZyBpdCBzb3VuZGVkIGxpa2UgYSB3ZWRkaW5nIHZvdy4gCkFueXdheXMsIHlvdSB3aWxsIG5vdGljZSB0aGUgaHlwbm90aXN0IHdpbGwgYWx3YXlzIHNheSAgIGlmIHlvdSBzZWUgc29tZW9uZSBkb2luZyB0aGUgYWN0aW9ucyBmcm9tIHRoZSBzdGFnZSBwb2ludCB0aGVtIG91dCB0byB1cyBiZWNhdXNlIHRoZXkgY2xlYXJseSB3YW50IHRvIHBhcnRpY2lwYXRlLiBUaGlzIGlzIGEgc2FmZXR5IHRoaW5nLiBJZiB5b3UgdGVsbCB0aGUgcGVvcGxlIG9uIHN0YWdlIHRvIGhvcCBvbiBvbmUgZm9vdCwgeW91IHJlYWxseSBkb24ndCB3YW50IHBlb3BsZSBob3BwaW5nIG9mZiBhIGJhbGNvbnkuClRoZSB0aW1lIHRoYXQgdGhlIGdvdmVybm1lbnQgZGlkIHRoZSBjYWxjdWxhdGlvbnMgb24gdGhlIHByb2R1Y3Rpb24gY3V0cyBhbmQgb2lsIGJ5IHJhaWwsIHRoZXkgaGFkIGluIG1pbmQgdGhhdCB0aGUgcGlwZWxpbmUgd291bGQgYmUgb25saW5lIGJ5IHllYXIgZW5kLCBzYWlkIERpbmFyYSBNaWxsaW5ndG9uLCB2aWNlIHByZXNpZGVudCBvZiByZXNlYXJjaCBhdCB0aGUgQ2FuYWRpYW4gRW5lcmd5IFJlc2VhcmNoIEluc3RpdHV0ZS4KSnVzdCBhcyBpbiAicG9ybiBmb3Igd29tZW4iIChhbmQgZ2F5IG1hbGUgcG9ybikgdGhlcmUgYXJlIGxvdmluZyBzaG90cyBvZiBhYnMgYW5kIGxhdHMgYW5kIGV2ZW4gYSBmZXcgbW9tZW50cyBvZiBidXR0b2NrIGdhemluZy4gSXQgaXMgc2lnbmlmaWNhbnQgdGhhdCBvbmx5IEVkd2FyZCBhbmQgSmFjb2IgdGFrZSB0aGVpciBzaGlydHMgb2ZmIChPSCBNWSBHT0QhIFRIRVkgU08gSE9UISkgd2hlcmVhcyBCZWxsYSB0ZW5kcyB0byB3ZWFyIGplYW5zIGFuZCBmbGFubmVsIHNoaXJ0cy4gSXQgaXMgc2lnbmlmaWNhbnQgdGhhdCB0aGUgc2V4dWFsIHRlbnNpb24gdGhhdCBleGlzdHMgaXMgYmVjYXVzZSBldmVyeW9uZSB3YW50cyB0aGUgd29tYW4gKGluY2x1ZGluZyBzb21lIGh1bWFuIGJveXMsIGJ1dCB3aGF0IGNoYW5jZSBkbyB0aGV5IGhhdmUgYW1vbmcgc3VjaCBtb25zdHJvdXMgYmVhdXRpZXM/KS4uIApZb3VyIGxpZmUgd2lsbCBOT1QgY2hhbmdlLCB1bnRpbCBZT1UgY2hhbmdlIFlPVVIgbGlmZS4gRG9uJ3QgcmVseSBvbiBhbnlvbmUgdG8gbWFrZSB5b3UgaGFwcHkuIFlvdSBtYWtlIHlvdSBoYXBweS4gR2V0IHVwIGluIHRoZSBtb3JuaW5nIGFuZCBsb29rIG91dCB0aGUgd2luZG93IGFuZCB0aGluayAid293LCBiZWF1dGlmdWwiIGxvb2sgaW4gdGhlIG1pcnJvciBhbmQgdHJ5IHNheWluZyAiSSBsb3ZlIGhvdyBJIGxvb2siIHNlZSB3aGF0IGNoYW5nZXMgZm9yIHlvdS5Gb3IgdGhvc2Ugd2hvIGFyZSBkZXByZXNzZWQgYW5kIHRydWx5IHN0cnVnZ2xpbmcsIHlvdSBhcmUgbm90IGFsb25lLiAKVGhlIGdyb3VwIGFsc28gbm90ZWQgdGhlIGNhc2lub3Mgd291bGQgYmUgc3ViamVjdCB0byByZWd1bGF0aW9uIGJ5IGEgbmV3IGNvbW1pc3Npb24gYW5kIGFueSBsYXdzIGVuYWN0ZWQgYnkgdGhlIExlZ2lzbGF0dXJlLi4gCkJ1dCBhY2NvcmRpbmcgdG8gbWFueSBwZW9wbGUgbGl2aW5nIHF1ZWVyIGxpdmVzIGluIHRoZSBVUywgaXQgdG9vIGxpdHRsZSB0b28gbGF0ZS4gCklmIEkgcmFuIGxvdyBvbiBtb25leSB0byBnZXQgdG8gZnJvbSB3b3JrLCBJIHdvdWxkIGFzayBoaW0gdG8gYm9ycm93LCBiZWNhdXNlIGhlIGFsd2F5cyBoYWQgaXQuIApIb3NwaXRhbCBwZXJzb25uZWwgdXNlIGJsZWFjaCBhcyBhIGRpc2luZmVjdGFudCwgaG90ZWxzIHVzZSBibGVhY2ggdG8gY2xlYW4gYW5kIGRpc2luZmVjdCBiZWQgbGluZW5zIGFuZCBzdXJmYWNlcywgYW5kIHJlc3RhdXJhbnRzIGRpc2luZmVjdCBmb29kIHByZXBhcmF0aW9uIHN1cmZhY2VzIHdpdGggY2hsb3JpbmUgYmxlYWNoLiAKU2FsdCBGb290IFNjcnViLiBBbGwgeW91IG5lZWQgYXJlOiAxIGN1cCBvZiBzZWEgc2FsdCBvciBFcHNvbSBzYWx0LCAxLzIgY3VwIG9mIGNvbGQgd2F0ZXIgYW5kIDIgZHJvcHMgb2YgbGF2ZW5kZXIgZXNzZW50aWFsIG9pbC4gCkZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gKEZEQSkgZXN0aW1hdGVzIHRoYXQgYmV0d2VlbiA4IGFuZCAxMiBtaWxsaW9uIHBlb3BsZSByZWNlaXZlIGFjdXB1bmN0dXJlIGVhY2ggeWVhciBpbiB0aGUgVW5pdGVkIFN0YXRlcywgYW5kIGl0cyBwb3B1bGFyaXR5IGNvbnRpbnVlcyB0byBpbmNyZWFzZSBhcyBtb3JlIHBlb3BsZSBoZWFyIG9mIGl0cyBlZmZlY3RpdmVuZXNzLiAKVGhleSBkb24gcmVncmV0IGl0LiAKWCByYXlzIGZvciB0aG9zZSBwcm9ibGVtcyB3b3VsZCByZXF1aXJlIHJlY3VtYmVuY3kgKHB1dHRpbmcgaGVyIHRvdGFsbHkgdW5kZXIgYW5kIGxheWluZyBoZXIgZG93biksIGJ1dCB0aGUgY2F0Y2ggMjIgaXMgdGhvc2UgaW5qdXJpZXMgYXJlIGFsc28gbGlrZWx5IHRvIGJlIHNlcmlvdXNseSBhZ2dyYXZhdGVkIGFzIHNoZSB3YWtlcyB1cCBhbmQgdHJpZXMgdG8gZ2V0IGhlciBmb290aW5nIChJIHBlcnNvbmFsbHkgaGFkIGEgaG9yc2UgYnJlYWsgaGlzIGxlZyB3YWtpbmcgdXAgYWZ0ZXIgY29saWMgc3VyZ2VyeSwgcmVxdWlyaW5nIGhpcyBldXRoYW5hc2lhICAgYW5kIGhlIHdhcyBldmVuIGluIGEgcmVjb3Zlcnkgcm9vbSBwdXJwb3NlIGJ1aWx0IHRvIHByZXZlbnQgaW5qdXJpZXMgYXMgdGhleSBjb21lIG91dCBvZiBhbmVzdGhlc2lhKSwgc28gdGJoIEkgd291bGRuIHJlY29tbWVuZCByYWRpb2dyYXBocyB1bmxlc3MgeW91ciB2ZXQgaXQgc3VwZXIgY29uZmlkZW50IGl0IGNhbiBiZSBkb25lIHNhZmVseS5Ib25lc3RseSwgYXNpZGUgZnJvbSB0aGVybW9ncmFwaHkgeW91ciBiZXN0IGJldCBmb3IgZGVjaWRpbmcgbmV1cm9sb2dpYyB2cyBtZWNoYW5pY2FsIGluanVyeSBtaWdodCBiZSBhIGNvdXJzZSBvZiBzdHJvbmcgYW50aSBpbmZsYW1tYXRvcmllcyBhbmQgUm9iYXhpbiAob3Igc2ltaWxhciBtdXNjbGUgcmVsYXhlcikgZm9yIGEgd2VlaywgZm9sbG93ZWQgYnkgYSBkb3NlIG9mIGFuYWxnZXNpYyAob25lIHdoaWNoIHByb3ZpZGVzIGdvb2QgcmVsaWVmIG9mIHBhaW4gd2l0aG91dCBzaWduaWZpY2FudCBtb3RvciBpbXBhaXJtZW50KSBhbmQgY29uY3VycmVudCBsYW1lbmVzcyBleGFtLiAKTm93IHRoZXJlJ3MgYSBsb3Qgb2YgcmVhbGx5IGdvb2QgWVQgZXhjbHVzaXZlIGNvbnRlbnQsIGxpa2Ugd2hvbGUgYXNzIHR2IHNob3dzLCB0aGF0IGNvbWVzIHdpdGggWVRSZWQuIEl0J3Mgbm90IGZvciBldmVyeW9uZSwgYnV0IGl0IGlzIGZvciBzb21lIHBlb3BsZSwgYW5kIHlvdSBnZXQgdG8gbm90IGhhdmUgYWRzLiAKSXRzIHBvc2l0aW9uIGNhbiBiZSBjaGFuZ2VkIGJ5IHRoZSBzdW4gYW5kIG90aGVyIHBsYW5ldHMsIGJ1dCB1bmxpa2UgYXJ0aWZpY2lhbCBzYXRlbGxpdGVzLCBiZWluZyBhIGZldyBtZXRlcnMgb3V0IG9mIHBsYWNlIGlzbiBwYXJ0aWN1bGFybHkgbm90aWNlYWJsZS4uIApPbmNlIHRoZSB0ZW1wZXJhdHVyZSBtb2RlcmF0ZXMgYWdhaW4sIHdlIGNvdWxkIHNlZSBzb21lIG9mIHRoZSBiZXN0IGZpc2hpbmcgb2YgdGhlIHllYXIgYXMgdGhlIHByZSBzcGF3biBzdGVlbGhlYWQgd2lsbCBiZSBwcmVwYXJpbmcgZm9yIHRoZWlyIHNwYXduIGJ5IGZhdHRlbmluZyB1cCBvbiBhbG1vc3QgYW55dGhpbmcgaW5jbHVkaW5nIGxhcmdlIGZsZXNoIGZsaWVzIHRoYXQgc2VlbSB0byB3b3JrIHdlbGwgdGhpcyB0aW1lIG9mIHllYXIuIFRoZSB3YXRlciBsZXZlbCB3aWxsIHJlbWFpbiBhdCAyODUgY2ZzIHVudGlsIHdlIGdldCBzb21lIHJ1biBvZmYgZnJvbSBzbm93IG1lbHQgb3IgcmFpbi4uIApCYXNpY2FsbHkgd2UgaGFkIGEgdmVyeSBtZWFuaW5nZnVsIGV4Y2hhbmdlIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUuIApPdmVydmlldyBmb3IgYmFyYnN0ZWVsZQpUaGUgTVNjIGlzIHBlcnNvbmFsIGFuZCBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQsIG5vdCB3YXN0ZWQgdGltZS4gClRoZXkgbXVzdCBrbm93IHRoYXQgVHJ1bXAgcGVyc29uYWxseSBkaXJlY3RlZCB0aGUgY2xlYXJhbmNlcyB0byBiZSBpc3N1ZWQgb3ZlciB0aGUgb2JqZWN0aW9ucyBvZiBET0ouLiAKVGhleSBoYXZlIHNoaXQgeW91IGNhbiBkby4gClRvIG1lIEkganVzdCBmZWx0IGxpa2UgSSBrbmV3IHdoYXQgSSB3YXMgZ29pbmcgdG8gZ2V0IGV2ZXJ5IGVwaXNvZGUgc28gSSBkZWNpZGVkIHRvIHN0b3AgbGlzdGVuaW5nLiAKSW4gdGhlIHZhY2NpbmUgY291cnQsIHRoZXkgb25seSByZWxlYXNlIGEgYmFyZSBtaW5pbXVtIG9mIGluZm9ybWF0aW9uIGFib3V0IGVhY2ggY2FzZSwgYW5kIHRoZXkgZG9uIHJlbGVhc2UgYW55dGhpbmcgZWxzZSwgaW5jbHVkaW5nIHRoZSBzdWJtaXR0ZWQgZXZpZGVuY2UsIGFuZCBldmVyeSB5ZWFyIHRoZXkgdHJ5IHRvIGN1dCBiYWNrIG9uIHRoZSBhbW91bnQgb2YgZGF0YSB0aGV5IHJlbGVhc2UuClF1ZXN0aW9ucyBzZWVraW5nIHByb2Zlc3Npb25hbCBhZHZpY2UgYXJlIGluYXBwcm9wcmlhdGUgZm9yIHRoaXMgc3VicmVkZGl0IGFuZCB3aWxsIGJlIHJlbW92ZWQuIG1vcmUgPj4KMTIgU2F0dXJkYXkgSmFudWFyeSA3IDIwMDYgQmVkZm9yZCBHYXpldHRlIEV2ZW5pbmcgVGVsZXZpc2lvbiBCZWFmb3JhIENuQm5uZWkgTGluZXVwIEkgTkZMIEZvb3RiYWxsIFdpbGRjYXJkIFRlYW1zIEluIFN0ZXJlbyBMaXZlIFdpbGRjYXJkIFBvc3RnYW1lIEZvb3RiYWxsIFdpbGRjYXJkIFRlYW1zIEluIFN0ZXJlbyBMaXZlIDQgQWN0aW9uIE1ld3MgYXQgVGhlIFByb3BoZWN5IEluIFN0ZXJlbyBORkwgRm9vdGJhbGwgV2lsZGNhcmQgVGVhbXMgSW4gU2xlcmVvIExpdmUgV2lsZGNhcmQgUG9zdGdhbWUgRm9vdGJhbGwgV2lsZGNhcmQgVGVhbXMgSW4gU3RlcmVvIExpdmUgU2tpbndhbGtlcnMgSW4gU3RlcmVvIFZpc2FnZSBCcm9hZGNhc3QgRXZlbmluZyBIYXRlcyBDaHJpcyBFbm91Z2ggU3VzcGVuc2UgSmVubmlmZXIgQSB3b21hbiB0YWtlcyBoZXIgZGF1Z2h0ZXIgYW5kIGZsZWVzIGhlciBhYnVzaXZlIEluIFN0ZXJlbyBIb3VycyBNeXN0ZXJ5IEEgdG93biBpcyBoYXVudGVkIGJ5IG1lIG11cmRlciBvZiBhIEF0bGFudGlzIHV1aWFub29hIHMgRW5kIEluIFN0ZXJlbyBJIGkgSSAyIFdOUEExOSBVUE4gMyBXUFNYMyBQQlMgNCBXVEFFNCBBQkMgNSBXVFRHNSBGT1ggNiBXSkFDNiBOQkMgNyBUVkd1aWRlIE9ubGluZSA4IFdXQ1A4IEZPWCA5IFdBVE0yMyBBQkMgMTAgV1RBSjEwIENCUyAxMSBXVEJTMTcgSU5EIDEyIFFWQyAxMyBXS0JTNDcgQ29ybmVyc3RvbmUgVFYgMTUgSFNOIEhvbWUgU2hvcHBpbmcgTmV0d29yayAxNiBEaXNjb3ZlcnkgQ2hhbm5lbCAxNyBUaGUgV2VhdGhlciBDaGFubmVsIDE4IEZYIDE5IExvY2FsIEluZm9ybWF0aW9uIEV4cGFuZGVkIEJhc2ljIDIyIExlYXNlZCBBY2Nlc3MgMjMgVkgxIDI0IE1UViAyNSBBQkMgRmFtaWx5IDI2IE5pY2tlbG9kZW9uIDI3IExpZmV0aW1lIDI4IEhHVFYgMjkgMzAgSGVhZGxpbmUgTmV3cyAzMSBDTk4gMzIgU3Bpa2UgVFYgMzMgRVNQTiAzNCBFU1BOMiAzNSBGb3ggU3BvcnRzIDM2IEVXVE4gMzcgQ291cnQgVFYgMzggT3V0ZG9vciBDaGFubmVsIDM5IEZveCBOZXdzIENoYW5uZWwgNDAgVE5UIDQxIERpc25leSBDaGFubmVsIDQyIFRCTiA0MyBDYXJ0b29uIE5ldHdvcmsgNDQgQ01UIDQ1IFRMQyA0NiBBTUMgNDcgU2NpIEZpIENoYW5uZWwgNDggVFYgTEFORCA0OSBCcmF2byA1MCBDb21lZHkgQ2VudHJhbCA1MSBIaXN0b3J5IENoYW5uZWwgNTIgRSA1MyBGb29kIE5ldHdvcmsgNTQgSGFsbG1hcmsgQ2hhbm5lbCA1NSBDU1BBTiA1NiBBbmltYWwgUGxhbmV0IDU3IFBBWCBUViA1OCBPeHlnZW4gNTkgVHJhdmVsIENoYW5uZWwgNjAgVVNBIE5ldHdvcmsgNjEgTVNOQkMgNjIgQ05CQyA2MyBDU1BBTiBOaWdodGx5IEluIFN0ZXJlbyBEcmV3IENhcmV5IFNob3cgQm9vayBvZiBEYW5pZWwgR3JhY2UgaXMgYXJyZXN0ZWQgb3IgcG9zc2Vzc2lvbiBvbCBtYXJpanVhbmEgdWRpdGggY29uZnJvbnRzIERhbmllbCBhYm91dCBkaXNjdXNzaW5nIHRoZWlyIHNleCBJbiBTbGVyZW8gT3JkZXIgU3BlY2lhbCBWaWN0aW1zIFVuaXQgUmF3IEluIFN0ZXJlbyBOaWdodCBMaXZlIEV2YSBMb25nb3JpYSBJbiBTdGVyZW8gS2xuZ29mIFRoZSBUaGUgUG9ueSBDb2FzdCB0byBDb2FzdCBOIEh1bWFuIE1vc3QgV2FudGVkIEFtZXJpY2EgRmlnaHRzIEJhY2sgSW4gRWRpdGlvbiBXZWVrZW5kIFRWIE1pY2hhZWwgTiBJbiBTdGVyZW8gRHJldyBDYXJleSBTaG93IFN0ZXJlbyBTaW1wc29ucyBJbiBTdGVyZW8gVGhlIENvYXN0IHRvIENvYXN0IE4gSHVtYW4gTW9zdCBXYW50ZWQgQW1lcmljYSBGaWdodHMgQmFjayBJbiBUViBNaWNoYWVsIE4gSW4gU3RlcmVvIEF0bGFudGlzIExhd3JlbmNlIFdlbGsgU2hvdyBCaWcgb2YgdGhlIFN1bW1lciBUb3dlcnMgVGhlIFJlZCBHcmVlbiBWZW5lemxhbm8gTGl2ZSBJbiBMYXMgVmVnYXMgSXRhbGlhbiBtdXNpY2FsIENpdHkgTGltaXRzIENvbGRwbGF5IENvbGRwbGF5IEluIFN0ZXJlbyB0aGUgTGlmZSBJbiBTbGVyZW8gT3ZlcmJvYXJkIENvbWVkeSBHb2xkaWUgU2F2ZSB0aGUgTGFzdCBEYW5jZSAyMDAxIERyYW1hIEp1bGlhIFNsZWVwbGVzcyBJbiBTZWF0dGxlIDE5OTMgVG9tIE1lZyBJbiBDaHJpc3RpYW4gR3JlZyBFIEltcGUgQ2hhbm5lbCBvZiBTaWxlbmNlIFBhcnQgMiBvbCAyIFBsYW5ldCBTZWFzIG9mIExpZmUgUGxhbmV0IFNlYXMgb2YgTGlmZSBQbGFuZXQgU2VhcyBvZiBMaWZlIEJsdWUgUGxhbmV0IFNlYXMgb2YgTGlmZSBIYXVudGluZyBCZWRhenpsZWQgQ29tZWR5IEJyZW5kYW4gRHVtYiBhbmQgRHVtYmVyZXIgV2hlbiBIYXJyeSBNZXQgTGxveWQgU2hpZWxkIERvZ2hvdXNlIFNoaWVsZCBUYXIgQmFieSBTaGllbGQgQXJ0aXN0cyBvZiBIYXJkIEFydGlzdHMgb2YgSGFyZCBHb2VzIEluc2lkZSBQcml2YXRlIFBhcnRzIENvbWVkeSBIb3dhcmQgSW4gRmxhdm9yIG9mIExvdmUgSW4gTGlmZSBJbiBMaWZlIEluIExpZmUgSW4gTGlmZSBJbSBHZXR0aW5nIExpZmUgSW0gb24gYSBXcmxkIFdybGQgSW4gQ2hhbm5lbCBBbm5pZSBNdXNpY2FsIEFsYmVydCBBbGxlZW4gQXUgUGFpciBDb21lZHlEcmFtYSBHcmVnb3J5IENvbWVkeURyYW1hIEdyZWdvcnkgSm9zaCBJbiBTdGVyZW8gVGhhdCBIb3VzZSBHYXJkZW4gVFYgVHJhdmlzIEZpcnN0IFVwIENvbmZpZGVudGlhbCBKYXdzIEhvcnJvciBSb3kgQSBtYW5lYXRpbmcgc2hhcmsgdGVycm9yaXplcyBhIE5ldyBFbmdsYW5kIHJlc29ydCBTV0FUIExpdmUgdGhlIFN0b3J5IExhcnJ5IEtpbmcgU2F0dXJkYXkgVm9sY2FubyBNb3N0IEFtYXppbmcgTmV3IEphY2sgQ2l0eSBEcmFtYSBXZXNsZXkgSW4gVW5sZWFzaGVkIE4gSW4gSU1QQUNUSSBOIEluIFN0ZXJlbyBIZWFkIFdvcmxkIEdvbGYgTWVyY2VkZXMgQ2hhbXBpb25zaGlwcyBUaGlyZCBMaXZlIExpdmUgSUkgTWFuIFN0cm9uZ2VzdCBNYW4gU3Ryb25nZXN0IE1hbiBTdHJvbmdlc3QgTWFuIFN0cm9uZ2VzdCBTdHJvbmdlc3QgU3Ryb25nZXN0IFNwb3J0cyBQSEkgdGhlIEhvY2tleSBBdGxhbnRhIFRocmFzaGVycyBhdCBQaXR0c2J1cmdoIE1lbGxvbiBTdXBlcnN0YXJzIFRWIE9yZGVyIFRyaWFsIGJ5IEp1cnkgT3JkZXIgVHJpYWwgYnkgSnVyeSBieSBGQkkgTmVnb3RpYXRvciBSZW5kZXJpbmcgU3VzcGVuc2UgU2hhbm5vbiBQcm9taXNlIERyYW1hIElzYWJlbGxhIERyYW1hIFJpY2hhcmQgTmV3cyBXaXRoIEpvaG4gTGluZVVwIFN0b3J5IFdlZWtlbmQgV2l0aCBKb2huIEEgUGVyZmVjdCBNdXJkZXIgU3VzcGVuc2UgTWljaGFlbCBBbG9uZyBDYW1lIGEgU3BpZGVyIE15c3RlcnkgTW9yZ2FuIEFsb25nIENhbWUgYSBTcGlkZXIgTXlzdGVyeSBNb3JnYW4gQ2hhbm5lbCBTYWRpZSBSZWNlc3MgU2Nob29scyBPdXQgMjAwMSBWb2ljZXMgb2YgQW5keSBvZiBDaHJpc3RpYW4gUHJhaXNlIHRoZSBMb3JkIENvcmFsIFJpZGdlIEhvdXIgVG91Y2ggb2YgUG93ZXIgR3JhaGFtIENsYXNzaWMgTmV0d29yayBCYWxsIEJlbGwgUGllY2UgQ2hhbm5lbCBZb3UgV2VyZSBPdXQgTGFkZGVyIFVwIFNwYWNlcyBXZWRkaW5ncyBVcCBNb3ZpZXMgSGFsbG93ZWVuIEhvcnJvciBKYW1pZSBMZWUgVGhlR29vbmxlcyAxOTg1IFlvdW5nIG1pc2ZpdHMgZmluZCBhIDEgN3RoY2VudHVyeSBwaXJhdGVzIHRyZWFzdXJlIFRyZW1vcnMgSUkgRnJlZCBDaGFubmVsIDMgUHJpbWFsIFNjaWVuY2UgRmljdGlvbiBSb2JlcnQgSW4gUHJlaGlzdG9yaWMgVGVycm9yIDIwMDYgQ2hyaXN0b3BoZXIgQ29zdGFzIExhbmQgQSBSb3NlIGZvciBUaW1lcyBUaW1lcyBDb3VydCBDZW50cmFsIHRoZSBDYWJsZSBHdXkgR2x0UkRvbmUgQmx1ZSBDb2xsYXIgQ29tZWR5IFRvdXIgVGhlIE1vdmllIDIwMDMgb2YgOTExMSBDaGFubmVsIEFudGljaHJpc3QgUGFydCAyIG9mIDIgTWFydmVscyBCaWJsZSBUZWNoIE1hbiBXaG8gUHJlZGljdGVkIG9uIFdlc3QgVGVjaCBTZXggYW5kIFdlc3QgVFYgU2lzdGVycyBUcnVlIE5ld3MgTmV4dCBOZXh0IE5pZ2h0IExpdmUgSW4gQ2hhbm5lbCBDaGlja2VuIENoZWYgTGl2ZSBRdWVlbiBOZXR3b3JrIEdvZXMgR29lcyB0byBDaGVmIFRoZSBGaW5hbCBBZmZhaXIgTXlzdGVyeSBBbmR5IDEwMSBNeXN0ZXJ5IERpY2sgVmFuIDEwMSBNeXN0ZXJ5IERpY2sgVmFuIDEgdGhlIFBsYW5ldCBBbmltYWwgQW5pbWFsIFBvbGljZSB0byBOYXRpb25hbCBBbmltYWxzIFZpZXdlcnMgdG8gTmF0aW9uYWwgVHVya2V5IEluIG9mIFN1c3BlbnNlIFdpbCBhIENoYW5uZWwgSG9wZSBGbG9hdHMgUm9tYW5jZSBTYW5kcmEgSG9wZSBGbG9hdHMgUm9tYW5jZSBTYW5kcmEgQ2hhbm5lbCBQb2tlciBUb3VyIFBva2VyIFRvdXIgU2l4IHdvcmxkY2xhc3MgcGxheWVycyBkbyBDYXNpbm8gUG9rZXIgVG91ciBOZXR3b3JrIEdybHNoYW1zIE9yZGVyIENyaW1pbmFsIEludGVudCBPcmRlciBPcmRlciBPcmRlciBPcmRlciBDcmltaW5hbCBJbnRlbnQgTCBIb3dhcmQgRGlhZ25vc2lzIEludiBUaGUgRGVhZGx5IEwgSG93YXJkIFN1emUgT3JtYW4gU2hvdyBTdXplIE9ybWFuIFNob3cgTiBTdXplIE9ybWFuIFNob3cgSUkgVFYgSXQgSW4gb24gdGhlIFggYXQgU2hpcCBvdCBTaGlwIG9sIENhYmxlIE1hc3MgT3VyIEFuZHJlIE1vbnRyZWFsIEpvaG4gSm91cm5leSBBcmVuYSBQYWxudGJhbGwgSG9tZSBFeWUgQmFza2V0YmFsbCBNZW1waGlzIEdyaXp6bGllcyBhdCBDaGljYWdvIFVuaXRlZCBJbiBTdGVyZW8gb2YgU3RhcnMgQ2xhc3NpYyBQYXBlciBNb29uIENvbWVkeSBSeWFuIFRoZSBBd2Z1bCBUcnV0aCBDb21lZHkgSXJlbmUgSGlzIEdpcmwgRnJpZGF5IDE5NDAgR2FyeSBNeSBGYXZvcml0ZSBXaWZlIFNwb3R0c05lbCBCYXNrZXRiYWxsIFZpcmdpbmlhIFRlY2ggYXQgRmxvcmlkYSBHcmVhdCBMaXZlIG9mIEJhdG1hbiBSb2JpbiAxOTk3IFRoZSBkeW5hbWljIGR1byByZXR1cm5zIHRvIHRha2Ugb24gYW4gaWN5IERvbGxhciBCYWJ5IDIwMDQgQSBjYW50YW5rZXJvdXMgdHJhaW5lciBib25kcyB3aXRoIGEgZmVtYWxlIFNpc3RlciBBY3QgMiBCYWNrIEluIHRoZSBIYWJpdCAxOTkzIFdob29waSBUaGUgTm90ZWJvb2sgUm9tYW5jZSBSeWFuIExldmlhdGhhbiAxOTg5IFBldGVyIFNuaXBlciBEcmFtYSBEcmFtYSBDaHJpc3RpYW4gMjAwNCBBIHNoeSBhcnRpc3QgYWNxdWlyZXMgZmVsaW5lIHN0cmVuZ3RoIGFuZCAyMDA0IFR3byBmcmllbmRzIHBvbmRlciB0aGVpciBsaXZlcyBkdXJpbmcgYSByb2FkIEFtZXJpY2FuIEd1biAyMDAyIEphbWVzIEplZXBlcnMgQ3JlZXBlcnMgMiBIb3Jyb3IgUmF5IEluIFN0ZXJlbyBUaGUgU2Nob29sIG9mIFJvY2sgQ29tZWR5IEphY2sgVGhlIEN1cnZlIDE5OTggTWF0dGhldyBTb3VsIFBsYW5lIENvbWVkeSBLZXZpbiBPTmVpbCBCZWxsIEplYW5NYXJjIGlUViBvZiBIb3Jyb3IgVGhlIFByaW5jZXNzIERpYXJpZXMgMiBSb3lhbCBCb29nZXltYW4gSG9ycm9yIEJhcnJ5IEFjdGlvbiBCcnVjZSBJbiBTdGVyZW8gS2lsbCBCaWxsIDEgMjAwMyBVbWEgVFYgU2NoZWR1bGUgZm9yIHdlZWsgb2YgSmFudWFyeSA3SmFudWFyeSAxMyBTQVRVUkRBWSBOb29uIEVEIENCUyBXb21lbnMgQ29sbGVnZSBCYXNrZXQgYmFsbCBSdXRnZXJzIGF0IE1pY2hpZ2FuIExpdmUgUzMgSUIgRVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgS2VuIHR1Y2t5IGF0IExpdmUgU0IgQkQgRVNQTjIgQmlsbGlhcmRzIDIwMDUgV29tZW5zIFRyaWNrIFNob3QgTWFnaWMgRnJvbSBMYXMgRWwgQjNGT1ggU1BPUlRTIENvbGxlZ2UgQmFza2V0IGJhbGwgQ2hhcmxvdHRlIGF0IExpdmUgQ1NOIENvbGxlZ2UgQmFza2V0YmFsbCBOb3J0aGVhc3QgZXJuIGF0IE9sZCBMaXZlIFdKQUwgQ29sbGVnZSBCYXNrZXRiYWxsIENpbmNpbm5hdGkgYXQgTGl2ZSBQTSBRTkJDIEhpZ2ggU2Nob29sIEZvb3RiYWxsIEFybXkgQWxsQW1lcmljYW4gRnJvbSB0aGUgQWxhbW9kb21lIGluIFNhbiBMaXZlIEEgbSBCRCBFU1BOMiBCaWxsaWFyZHMgMjAwNSBXb21lbnMgVHJpY2sgU2hvdCBNYWdpYyBGcm9tIExhcyBFbCBQTSBCRENCUyBXb21lbnMgQ29sbGVnZSBCYXNrZXQgYmFsbCBDb25uZWN0aWN1dCBhdCBMaXZlIG0gUzMgRVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgSWxsaW5vaXMgYXQgTGl2ZSBTQiBCREVTUE4yIEJpbGxpYXJkcyAyMDA1IFdvbWVucyBUcmljayBTaG90IE1hZ2ljIEZyb20gTGFzIEdPRCA2MyBGT1ggQ1NOIENvbGxlZ2UgQmFza2V0YmFsbCBNYXNzYWNodXNldHRzIGF0IExpdmUgUE0gU0RFU1BOMiBDb2xsZWdlIEJhc2tldGJhbGwgTm9ydGggQ2Fyb2xpbmEgU3RhdGUgYXQgTm9ydGggTGl2ZSBTQiBQTSBCRENCUyBDb2xsZWdlIEJhc2tldGJhbGwgTFNEIGF0IExpdmUgdGNlbCBTMyBFU1BOIFBva2VyIFdvcmxkIFNlcmllcyBvZiBQb2tlciBUb3VybmFtZW50IG9mIEZyb20gTGFzIFNCIEZPWCBTUE9SVFMgV29tZW5zIENvbCBsZWdlIEJhc2tldGJhbGwgVGV4YXMgYXQgTGl2ZSBDU04gQ29sbGVnZSBCYXNrZXRiYWxsIFdpbGxpYW0gTWFyeSBhdCBMaXZlIFBNIGZRIEFCQyBORkwgRm9vdGJhbGwgTkZDIFdpbGQgQ2FyZCBXYXNoaW5ndG9uIFJlZHNraW5zIGF0IFRhbXBhIEJheSBQb3J0aXMgQ2xpbnRvbiBhbmQgdGhlIFJlZCBza2lucyAxMDYgdGFrZSBvbiBDaHJpcyBTaW1tcyBhbmQgdGhlIE5GQyBTb3V0aCBjaGFtcGlvbiBCdWNjYW5lZXJzIEZyb20gUmF5bW9uZCBKYW1lcyBTdGFkaXVtIGluIExpdmUgQSBTQiBQTSBJRSBFU1BOIFBHQSBHb2xmIE1lcmNlZGVzIENoYW0gcGlvbnNoaXBzIFRoaXJkIEZyb20gdGhlIFBsYW50YXRpb24gQ291cnNlIGF0IEthcGFsdWEgaW4gTGl2ZSBFbCBQTSA4MyBGT1ggU1BPUlRTIE5ITCBIb2NrZXkgQXRsYW50YSBUaHJhc2hlcnMgYXQgUGl0dHNidXJnaCBQZW4gRnJvbSB0aGUgTWVsbG9uIEFyZW5hIGluIFBpdHRzIFN1YmplY3QgdG8gQmxhY2tvdXQgTGl2ZSBQTSBJRCBBQkMgTkZMIEZvb3RiYWxsIEFGQyBXaWxkIENhcmQgSmFja3NvbnZpbGxlIEphZ3VhcnMgYXQgTmV3IEVuZ2xhbmQgVGhlIEphZ3VhcnMgMTI0IHZpc2l0IFRvbSBCcmFkeSBhbmQgdGhlIEFGQyBFYXN0IGNoYW1waW9uIFBhdHJpIG90cyBGcm9tIEdpbGxldHRlIFN0YWRpdW0gaW4gTGl2ZSBBIFFCIFBNIFBNIEFQIFBob3RvIFBpdHRzYnVyZ2ggU3RlZWxlcnMgcnVubmluZyBiYWNrIEplcm9tZSBCZXR0aXMgMzYgcnVucyBwYXN0IENpbmNpbm5hdGkgZGVmZW5kZXJzIER1YW5lIGRlbW9ucyA5MiBhbmQgQnJpYW4gU2ltbW9ucyA1NiBkdXJpbmcgdGhlaXIgTkZMIGZvb3RiYWxsIGdhbWUgaW4gVGhlIGxhc3QgdGltZSB0aGV5IHBsYXllZCB0aGUgdGhlIEJlbmdhbHMgc2F3IGEgbmV3IHNpZGUgb2YgdGhlbSB0aHJvd2luZyB0aGUgRm9yIHRoZWlyIHBsYXlvZmYgcmVtYXRjaCB0aGV5cmUgZXhwZWN0aW5nIG1vcmUgb2YgYW4gb2xkc3R5bGUgUE0gU0RFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBTQiBDU04gQ29sbGVnZSBCYXNrZXRiYWxsIEJvc3RvbiBDb2wgbGVnZSBhdCBHZW9yZ2lhIEpvaW5lZCBpbiBQcm9ncmVzcyBMaXZlIEFNIDNERVNQTjIgRmlzaGluZyBPaCBCb3kgT2JlcnRvIFJlZGZpc2ggVGFwZWQgbnZpIEJERVNQTjIgV29tZW5zIENvbGxlZ2UgQmFzIGtldGJhbGwgVHVsc2EgYXQgTGl2ZSBTQiBDU04gV29tZW5zIENvbGxlZ2UgQXJpem9uYSBhdCBMaXZlIEFNIEJPIEVTUE4yIEF1dG8gUmFjaW5nIFVuaXRlZCBSb2NrIENyYXdsaW5nIGFuZCBPZmZSb2FkIEZyb20gVGFwZWQgUE0gQkogRVNQTiBCaWxsaWFyZHMgMjAwNSBNZW5zIFRyaWNrIFNob3QgTWFnaWMgRnJvbSBMYXMgUE0gUE0gQ0QgQ0JTIE1vdG9yY3ljbGUgUmFjaW5nIEFtcGQgTW9iaWxlIFN1cGVyY3Jvc3MgRnJvbSBBbmEgVGFwZWQgU0IgUE0gUSBGT1ggTkZMIEZvb3RiYWxsIE5GQyBXaWxkIENhcmQgQ2Fyb2xpbmEgUGFudGhlcnMgYXQgTmV3IFlvcmsgVGhlIFBhbnRoZXJzIDExNSB0YWtlIG9uIE5GQyBFYXN0IGNoYW1waW9uIEdpYW50cyBGcm9tIEdpYW50cyBTdGFkaXVtIGluIEVhc3QgTGl2ZSBBIG0gSUIgRVNQTiBQQkEgQm93bGluZyBFYXJsIEFudGhvbnkgTWVkZm9yZCBGcm9tIExpdmUgbSBDU04gV29tZW5zIENvbGxlZ2UgQmFza2V0YmFsbCBEdWtlIGF0IExpdmUgMDMgQ0JTIE5GTCBGb290YmFsbCBBRkMgV2lsZCBDYXJkIFBpdHRzYnVyZ2ggU3RlZWxlcnMgYXQgQ2luY2lubmF0aSBCZW4gVGhlIFN0ZWVsZXJzIGxlZCBieSBCZW4gdHJhdmVsIHRvIENpbmNpbm5hdGkgdG8gdGFrZSBvbiB0aGUgQUZDIE5vcnRoIGNoYW1waW9uIEJlbiBnYWxzIEZyb20gUGF1bCBCcm93biBTdGFkaXVtIGluIExpdmUgRWwgSUIgRVNQTiBCaWxsaWFyZHMgMjAwNSBNZW5zIFRyaWNrIFNob3QgTWFnaWMgRnJvbSBMYXMgUE0gU0RFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBTQiBQTSBQTSBXR04gTkJBIEJhc2tldGJhbGwgTWVtcGhpcyBHcml6IHpsaWVzIGF0IENoaWNhZ28gRnJvbSB0aGUgVW5pdGVkIENlbnRlciBpbiBMaXZlIEEgU0IgRUQgQ0JTIENvbGxlZ2UgQmFza2V0YmFsbCBNaWNoaSBnYW4gU3RhdGUgYXQgTGl2ZSBXIFBNIDgzIEZPWCBTUE9SVFMgUG9rZXIgU3VwZXIgc3RhcnMgSW52aXRhdGlvbmFsIFRvdXJuYW1lbnQgRnJvbSBCIFBCUyBXb21lbnMgQ29sbGVnZSBCYXNrZXQgYmFsbCBXaXNjb25zaW4gYXQgUGVubiBMaXZlIEZPWCBTUE9SVFMgV29tZW5zIENvbCBsZWdlIEJhc2tldGJhbGwgU291dGggRmxvcmlkYSBhdCBQaXR0cyBMaXZlIFBNIFBNIENTTiBDb2xsZWdlIEJhc2tldGJhbGwgVmlyZ2luaWEgVGVjaCBhdCBGbG9yaWRhIFNhbWVkYXkgVGFwZSBQTSA4OSBFU1BOIEJpbGxpYXJkcyAyMDA1IE1lbnMgVHJpY2sgU2hvdCBNYWdpYyBGcm9tIExhcyBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIFNCIFMzIEZPWCBDU04gQ29sbGVnZSBCYXNrZXRiYWxsIER1a2UgYXQgV2FrZSBMaXZlIFBNIFMzRVNQTjIgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgRnJvbSBMYXMgUzMgSUIgRVNQTiBHb2xmIDIwMDUgTG9uZyBEcml2ZSBGcm9tIFcgSUIgRk9YIFNQT1JUUyBDb2xsZWdlIEJhc2tldCBiYWxsIEJvc3RvbiBDb2xsZWdlIGF0IEdlb3JnaWEgTGl2ZSBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIEVsIFNERVNQTjIgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgRnJvbSBMYXMgU0IgQjNGT1ggU1BwUlRTIFBSSURFIEZpZ2h0aW5nIENoYW1waW9uc2hpcHMgVGFwZWQgQ1NOIE1vbnRlIENhcmxvIE1pbGxpb25zIFRhcGVkIHIgTWROREFZIEkgQU0gODMgRk9YIFNQT1JUUyBSb3lhbFZlZ2FzUG9rIE1vbnRlIENhcmxvIE1pbGxpb25zIE5vb24gODMgRk9YIFNQT1JUUyBDb2xsZWdlIEJhc2tldCBiYWxsIER1a2UgYXQgV2FrZSBQTSBDU04gQ29sbGVnZSBCYXNrZXRiYWxsIER1a2UgYXQgV2FrZSBTTyBFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBFbCBJQiBFU1BOIFBHQSBHb2xmIE1lcmNlZGVzIENoYW0gcGlvbnNoaXBzIEZpbmFsIEZyb20gdGhlIFBsYW4gdGF0aW9uIENvdXJzZSBhdCBLYXBhbHVhIGluIExpdmUgVyBQTSBJQiBFU1BOMiBCaWxsaWFyZHMgMjAwNSBTa2lucyBDaGFtcGlvbnNoaXAgRnJvbSBBdGxhbnRpYyBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIEVsIDgzIEZPWCBDU04gUG9rZXIgU3VwZXJzdGFycyBJbnZpdGF0aW9uYWwgVG91cm5hbWVudCBGcm9tIFBNIDgzRVNQTjIgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgRnJvbSBMYXMgRWwgODMgRk9YIENTTiBQb2tlciBTdXBlcnN0YXJzIEludml0YXRpb25hbCBUb3VybmFtZW50IEZyb20gUE0gODMgRVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgQ2luY2luIG5hdGkgYXQgTGl2ZSBTQiA4REVTUE4yIFdvbWVucyBDb2xsZWdlIEJhcyBrZXRiYWxsIE9rbGFob21hIGF0IE9oaW8gTGl2ZSBFbCBDU04gTkJBIEJhc2tldGJhbGwgVXRhaCBKYXp6IGF0IFdhc2hpbmd0b24gRnJvbSBNQ0kgQ2VudGVyIGluIFN1YmplY3QgdG8gQmxhY2sgb3V0IExpdmUgUE0gODMgRk9YIFNQT1JUUyBQb2tlciBTdXBlciBzdGFycyBJbnZpdGF0aW9uYWwgVG91cm5hbWVudCBGcm9tIFBNIFBNIFBNIFBNIFBNIFNERVNQTjIgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgRnJvbSBMYXMgU0IgUE0gODMgRVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgV2lzIGNvbnNpbiBhdCBMaXZlIFNCIENTTiBOSEwgSG9ja2V5IENoaWNhZ28gQmxhY2sgaGF3a3MgYXQgV2FzaGluZ3RvbiBGcm9tIE1DSSBDZW50ZXIgaW4gU3ViIGplY3QgdG8gQmxhY2tvdXQgTGl2ZSA4MyBFU1BOIENvbGxlZ2UgQmFza2V0YmFsbCBUZXhhcyBhdCBJb3dhIExpdmUgU0IgUE0gOERFU1BOMiBDb2xsZWdlIEJhc2tldGJhbGwgTm9ydGggQ2Fyb2xpbmEgYXQgVmlyZ2luaWEgTGl2ZSBTQiA4MyBGT1ggU1BPUlRTIE5ITCBIb2NrZXkgRWRtb250b24gT2lsZXJzIGF0IFBpdHRzYnVyZ2ggRnJvbSB0aGUgTWVsbG9uIEFyZW5hIGluIFN1YmplY3QgdG8gQmxhY2tvdXQgTGl2ZSA4MyBGT1ggU1BPUlRTIFdvbWVucyBDb2wgbGVnZSBCYXNrZXRiYWxsIFdpc2NvbnNpbiBhdCBQZW5uIFRhcGVkIEJEIEVTUE4yIEJpbGxpYXJkcyAyMDA1IFNraW5zIENoYW1waW9uc2hpcCBGcm9tIEF0bGFudGljIDgzIEZPWCBTUE9SVFMgRXF1ZXN0cmlhbiBTcHJ1Y2UgUE0gOERFU1BOIENvbGxlZ2UgQmFza2V0YmFsbCBWYW4gZGVyYmlsdCBhdCBMaXZlIEVsIEkgV0VETkVTREFZSSBQTSBDU04gUHJlbWllcnNoaXAgU29jY2VyIEFyc2VuYWwgTWFuY2hlc3RlciBUYXBlZCBQTSBCRCBFU1BOMiBCaWxsaWFyZHMgMjAwNSBTa2lucyBDaGFtcGlvbnNoaXAgRnJvbSBBdGxhbnRpYyA4MyBGT1ggU1BPUlRTIFBva2VyIFN1cGVyIHN0YXJzIEludml0YXRpb25hbCBUb3VybmFtZW50IEZyb20gQkQgRVNQTjIgMjAwNCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgRnJvbSBMYXMgVyA4MyBGT1ggQ1NOIFBSSURFIEZpZ2h0aW5nIENoYW1waW9uc2hpcHMgUE0gQkRFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBFbCBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIEVsIFBNIDg5IEVTUE4gQ29sbGVnZSBCYXNrZXRiYWxsIEluZGkgYW5hIGF0IE1pY2hpZ2FuIExpdmUgUzMgQkRFU1BOMiBDb2xsZWdlIEJhc2tldGJhbGwgU3lyYSBjdXNlIGF0IE5vdHJlIExpdmUgRWwgODMgRk9YIFNQT1JUUyBOSEwgSG9ja2V5IFBpdHRzYnVyZ2ggUGVuZ3VpbnMgYXQgQ29sdW1idXMgQmx1ZSBGcm9tIE5hdGlvbndpZGUgQXJlbmEgaW4gU3ViamVjdCB0byBCbGFja291dCBMaXZlIENTTiBOQkEgQmFza2V0YmFsbCBBdGxhbnRhIEhhd2tzIGF0IFdhc2hpbmd0b24gRnJvbSBNQ0kgQ2VuIHRlciBpbiBTdWJqZWN0IHRvIEJsYWNrb3V0IExpdmUgV0pBTCBDb2xsZWdlIEJhc2tldGJhbGwgR2VvcmdlIHRvd24gYXQgV2VzdCBMaXZlIFBNIEJERVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgTWFyeSBsYW5kIGF0IExpdmUgRWwgQjNFU1BOMiBDb2xsZWdlIEJhc2tldGJhbGwgVGV4YXMgYXQgT2tsYWhvbWEgTGl2ZSBFbCBCM0VTUE4yIENvbGxlZ2UgQmFza2V0YmFsbCBUZXhhcyBDaHJpc3RpYW4gYXQgTmV3IExpdmUgRWwgQU0gODMgRk9YIFNQT1JUUyBQUklERSBGaWdodGluZyBDaGFtcGlvbnNoaXBzIFBNIDgzIEZPWCBTUE9SVFMgTkhMIEhvY2tleSBQaXR0c2J1cmdoIFBlbmd1aW5zIGF0IENvbHVtYnVzIEJsdWUgRnJvbSBOYXRpb253aWRlIEFyZW5hIGluIFN1YmplY3QgdG8gQmxhY2tvdXQgUE0gODMgRk9YIFNQT1JUUyBSb3lhbFZlZ2FzUG9rIE1vbnRlIENhcmxvIE1pbGxpb25zIFBNIFBNIFBNIEJEIEVTUE4gUEdBIEdvbGYgU29ueSBPcGVuIGluIEhhd2FpaSBGaXJzdCBGcm9tIFdhaWFsYWUgQ291bnRyeSBDbHViIGluIExpdmUgU0IgU0RFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBTQiBQTSBCRCBFU1BOMiBGaWd1cmUgU2thdGluZyBTdGF0ZSBGYXJtIENoYW1waW9uc2hpcHMgTGFkaWVzIGogTWVucyBTaG9ydCBGcm9tIExpdmUgUE0gODMgRk9YIFNQT1JUUyBSb3lhbFZlZ2FzUG9rIE1vbnRlIENhcmxvIE1pbGxpb25zIEUwVE5UIE5CQSBCYXNrZXRiYWxsIERldHJvaXQgUGlzIHRvbnMgYXQgU2FuIEFudG9uaW8gRnJvbSB0aGUgU0JDIENlbnRlciBpbiBTYW4gTGl2ZSBTQiBQTSBDU04gTkhMIEhvY2tleSBXYXNoaW5ndG9uIENhcGkgdGFscyBhdCBEYWxsYXMgRnJvbSBBbWVyaWNhbiBBaXIgbGluZXMgQ2VudGVyIGluIFN1YmplY3QgdG8gQmxhY2sgb3V0IExpdmUgUE0gQkQgRVNQTiBDb2xsZWdlIEJhc2tldGJhbGwgRGVQYXVsIGF0IExpdmUgRWwgQkRFU1BOMiAyMDA0IFdvcmxkIFNlcmllcyBvZiBQb2tlciBGcm9tIExhcyBTQiA4MyBGT1ggQ1NOIFBSSURFIEZpZ2h0aW5nIENoYW1waW9uc2hpcHMgODMgRk9YIFNQT1JUUyBDb2xsZWdlIEJhc2tldCBiYWxsIFdhc2hpbmd0b24gYXQgTGl2ZSBTMyBUTlQgTkJBIEJhc2tldGJhbGwgQ2xldmVsYW5kIENhdmFsaWVycyBhdCBMb3MgQW5nZWxlcyBGcm9tIFN0YXBsZXMgQ2VudGVyIGluIExvcyBMaXZlIG0gRlJJREFZIEFNIDgzIEZPWCBTUE9SVFMgQmlsbGlhcmRzIFdvcmxkIFBvb2wgRnJvbSBOb29uIENTTiBXb21lbnMgQ29sbGVnZSBCYXNrZXRiYWxsIFJob2RlIElzbGFuZCBhdCBMaXZlIFBNIEJEIEVTUE4yIEJpbGxpYXJkcyAyMDA1IE5XUEEgTmF0aW9uYWwgV2hlZWxjaGFpciA5QmFsbCBDaGFtcGkgb25zaGlwIEZyb20gVGFwZWQgODMgRk9YIFNQcFJUUyBQUklERSBGaWdodGluZyBDaGFtcGlvbnNoaXBzIFBNIEJEIEVTUE4yIEJpbGxpYXJkcyAyMDA1IE5XUEEgU2NvdGNoIERvdWJsZXMgOUJhbGwgRnJvbSBUYXBlZCBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIFNCIDgzIEZPWCBDU04gQmlsbGlhcmRzIFdvcmxkIFBvb2wgRnJvbSBQTSBCREVTUE4yIDIwMDQgV29ybGQgU2VyaWVzIG9mIFBva2VyIEZyb20gTGFzIFNCIFBNIENTTiBOQkEgQmFza2V0YmFsbCBXYXNoaW5ndG9uIFdpemFyZHMgYXQgSW5kaWFuYSBGcm9tIENvbnNlY28gRmllbGRob3VzZSBpbiBTdWJqZWN0IHRvIEJsYWNrb3V0IExpdmUgUE0gQkQgRVNQTiBQR0EgR29sZiBTb255IE9wZW4gaW4gSGF3YWlpIFNlY29uZCBGcm9tIFdhaWFsYWUgQ291bnRyeSBDbHViIGluIExpdmUgRWwgQkRFU1BOMiBOQkEgQmFza2V0YmFsbCBCb3N0b24gSCBDZWx0aWNzIGF0IFBoaWxhZGVscGhpYSBGcm9tIHRoZSBXYWNob3ZpYSBDZW50ZXIgaW4gUGhpbGFkZWxwaGlhIExpdmUgQSBTQiBQTSA4MyBGT1ggU1BPUlRTIE5ITCBIb2NrZXkgUGl0dHNidXJnaCBQZW5ndWlucyBhdCBDaGljYWdvIEJsYWNrIEZyb20gdGhlIFVuaXRlZCBDZW50ZXIgaW4gQ2hpY2EgU3ViamVjdCB0byBCbGFja291dCBMaXZlIGxVdE92IHJpdmkgQkRFU1BOIE5CQSBCYXNrZXRiYWxsIEhlYXQgYXQgU2VhdHRsZSBGcm9tIHRoZSBLZXlBcmVuYSBpbiBMaXZlIEEgU0IgODMgRVNQTjIgRmlndXJlIFNrYXRpbmcgU3RhdGUgRmFybSBDaGFtcGlvbnNoaXBzIERhbmNlIGkgUGFpcnMgRnJlZSBGcm9tIFNhbWVkYXkgVGFwZSBDU04gTkhMIEhvY2tleSBXYXNoaW5ndG9uIENhcGkgdGFscyBhdCBNaWdodHkgRHVja3Mgb2YgRnJvbSB0aGUgQXJyb3doZWFkIFBvbmQgaW4gQ2FsaWYgU3ViamVjdCB0byBCbGFja291dCBMaXZlIFBNIFdKQUwgVWx0aW1hdGUgUG9rZXIgQ2hhbGxlbmdlIEkgbHRmbHQgQQpJdCBpcyBpbXBvcnRhbnQgdGhhdCB5b3Uga25vdyBhbmQgdW5kZXJzdGFuZCB0aGF0ICJyYXJpdHkiIGlzIG5vdCBqdXN0IGFib3V0IGFnZS4gCkhlIGNhbiBleHBsYWluIGl0IHNvIG11Y2ggYmV0dGVyLiAKUGVvcGxlIHJhbmdlcyBhcmUgcXVpdGUgZmFjZSB1cCBpbiBsaXZlIHBva2VyLiBUaGV5IGFyZSBub3QgYmFsYW5jZWQgaW4gdGhlIHNsaWdodGVzdC4gVGhleSBhcmUgc28gdW5iYWxhbmNlZCB0aGF0IGV2ZW4gdHJ5aW5nIHRvIHBsYXkgY2xvc2UgdG8gd2hhdCB5b3UgYmVsaWV2ZSB0byBiZSBHVE8gaXMgbm90IHRoZSBtb3N0ICtFVi4gCkl0IGZlbHRsaWtlIHRoaXMgcmVhbGx5IGJlYXV0aWZ1bCBjb2xsaXNpb24gb2Z0aGUgYWNhZGVtaWMgd29yayBJIHdhcyBkb2luZyB3aXRoIHRoZXJlYWwgd29ybGQgZGVjaXNpb24gbWFraW5nIHByb2JsZW0gdGhhdHBva2VyIHByZXNlbnRzLi4gCkFtb25nIHRoZSBtYW55IGZpcnN0IHN0ZXBzLCB3ZSB3aWxsIHF1aWNrbHkgZGV2ZWxvcCBhIGJpcGFydGlzYW4gY29tbWlzc2lvbiB0byBkZXNpZ24gdGhlIDI1IHllYXIgdmlzaW9uLCB0aGF0IGFtb25nIG90aGVyIHRoaW5ncywgd2lsbCBoZWxwIHVzIGZvY3VzIHJlc291cmNlcyBvbiB0aGUgbW9zdCBpbXBvcnRhbnQgcHJvamVjdHMuCldlbGwgYXMgd2UgYXJlIHdhaXRpbmcgdGhlcmUsIHNjYW5uaW5nIHRoZSB3YXRlciwgc29tZW9uZSBqb2tlcyB0aGF0IHdlIHNob3VsZCBzZWUgaWYgU3VtbWl0IGlzIHN0cmVhbWluZy4gU28gb25lIG9mIHRoZSBndXlzIGRvZXMgY2hlY2ssIGFuZCBzdXJlIGVub3VnaCBoZSBzdHJlYW1pbmcuIEN1cnJlbnRseSBzd2ltbWluZyB1bmRlciB3YXRlciBmZW5kaW5nIG9mZiBzb21lIHNoYXJrcyBvciBzb21lIHNoaXQuIApIaXRoYXRob3QgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTIgaG91cnMgYWdvCkFtIEVuZGUgZXJyZWljaHQgVGFyemFuIG5pY2h0IG51ciBKYW5lcyBIZXJ6LiBFciBmZm5ldCBpaHIgYXVjaCBkaWUgQXVnZW4gZnIgd2VzZW50bGljaGUgRGluZ2UuIEltIGVpbmVtIFNvbmcgc2luZ3Qgc2llIGJlciBpaHJlbiBEc2NodW5nZWxoZWxkZW46IGdlaHQgbWl0IGRlciBOYXR1ciB1bSwgd2llIGtlaW4gTWFubiBhdWYgZGllc2VyIFdlbHQuIERpZSBUaWVyZSBzaW5kIHdpZSBzZWluZSBGcmV1bmRlLCB2b24gZGVuZW4gZXIgYXVjaCBsZXJudC4gVEFSWkFOIGlzdCBlaW4gbW9kZXJuZXMgUGxkb3llciBmciBHb3JpbGxhICB1bmQgTmF0dXJzY2h1dHogaW0gR2V3YW5kIGVpbmVyIGF0ZW1iZXJhdWJlbmRlbiBTaG93LgpUeXJ1bm5vc2F1cnVzICA1IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KTXVzdCBiZSBmdW4gdG8gYmUgcGFydCBvZiB0aGUgb2xkIGJveXMgbmV0d29yay4uIApJdCBhbHNvIGluY2x1ZGVzIHRlbGVwaG9uZSBiZXR0aW5nIGFuZCBpbnRlcm5hdGlvbmFsIGJ1c2luZXNzZXMsIHdoaWNoIGNvbXByaXNlIGpvaW50IHZlbnR1cmVzIGVzdGFibGlzaGVkIGluIFNwYWluIGFuZCBJdGFseS4uIApBZnRlciBzbyBtYW55IG5pZ2h0cyBzcGVudCBwbGF5aW5nIHBva2VyIHdpdGggdGhlc2UgZ3V5cywgSSBoYXZlIGNvbWUgdG8ga25vdyB0aGVtIHZlcnkgd2VsbCwgYW5kIEkgdGhpbmsgSSBoYXZlIHRoZSByZWFkIG9uIHRoZW0uIApQZW9wbGUgd2hvIGFscmVhZHkgdXNlIHRoZW0gc2F5IHRoYXQgaXQgaXMganVzdCBsaWtlIHBsYXlpbmcgd2l0aCB0aGUgY2hpcHMgaW4gYSBjYXNpbm8gYXMgeW91IGV2ZW4gZ2V0IHRvIGNob29zZSB0aGUgY29sb3JzIGZvciB0aGUgZGlmZmVyZW50IGRlbm9taW5hdGlvbnMuIElmIHlvdSByZWFsbHkgd2FudCB0byBwbGF5IGF0IGJlaW5nIHByb2Zlc3Npb25hbCBpdCBpcyBldmVuIHBvc3NpYmxlIHRvIHBlcnNvbmFsaXplIHRoZXNlIGNoaXBzIHdpdGggeW91ciBvd24gbG9nby4gQm90dG9tIGxpbmUsIHRoZSAxMDAgUHJvIENsYXkgMTNnIHBva2VyIGNoaXAgc2V0LCBtaWdodCBub3QgYmUgdGhlIGNoZWFwZXN0IHBva2VyIGNoaXAgc2V0IHRoYXQgeW91IGNhbiBidXksIGJ1dCBpdCBpcyBjZXJ0YWlubHkgdGhlIG1vc3QgYXV0aGVudGljIGFuZCB0aGUgbW9zdCBmdW4uLiAKUHJpbWFyaWx5IHRoZWlyIHN0dWRlbnQgaGVhbHRoIGNlbnRlciBpcyBzdGFuZCBhbG9uZSBmcm9tIHRoZWlyIG1lZCBzY2hvb2wgYW5kIHByb3ZpZGVzIHN0YW5kIGFsb25lIHNlcnZpY2VzIHRvIHN0dWRlbnRzLCBmYWN1bHR5LCBhbmQgcmV0aXJlZCBmYWN1bHR5LiBBcyBhbiBleGFtcGxlIHRoZXkgaGF2ZSAyMSBkZW50YWwgY2hhaXJzIGFuZCBwZXJmb3JtIHNvbWUgb3JhbCBzdXJnZXJ5LiBUaGVpciBzdHVkZW50IGhlYWx0aCBzZXJ2aWNlcyBhcmUgc28gcm9idXN0IHRoZXkgZXh0ZW5kIHNlcnZpY2VzIHRvIGFuIGlubmVyIGNpdHkgY29tbXVuaXR5IENvbGxlZ2UgdGhhdCBpcyB1bmFibGUgdG8gcHJvdmlkZSBzdWNoIHNlcnZpY2VzIHRvIGl0cyBvd24gc3R1ZGVudHMuClRoZXJlIGlzIGEgY29tbW9uIG5vdGlvbiB0aGF0IHdoZW4gaW5kaXZpZHVhbHMgZ28gJ2xvdyBjYXJiJywgdGhleSBlbmQgdXAgZWF0aW5nIGEgdG9uIG9mIHByb3RlaW4gYW5kIGZhdC4KVGhlcmUncyBhbiBpbnRlcmVzdGluZyBjaGFwdGVyIGNhbGxlZCB0aGUgQ2hlbWlzdHJ5IGFuZCBRdWFsaXRpZXMgb2YgSGVyYnMgYW5kIFNwaWNlcyB0aGF0IHByb3ZpZGVzIHNvbWUgZ3JlYXQgaW5mb3JtYXRpb24gb24gZ2V0dGluZyB0aGUgbWF4aW11bSBmbGF2b3VyIG91dCBvZiB0aGVtLlRoaXMgcmVjaXBlIGlzIGJhc2VkIG9uIG9uZSB0aGF0IGFwcGVhcnMgaW4gbXkgYm9vayBFdmVyeW9uZSBDYW4gQ29vayBNaWR3ZWVrIE1lYWxzLiBUaGlzIGRpc2ggd2lsbCBtYWtlIGEgZGVsdXhlIGx1bmNoIHlvdSBjb3VsZCBzZXJ2ZSB3aXRoIGEgc2ltcGxlIGdyZWVuIHNhbGFkLi4gCjMuIE1VTFRJUExBWUVSIElTIEJBS0VEIElOVE8gVEhFIFNJTkdMRSBQTEFZRVIgRVhQRVJJRU5DRTogSGF2aW5nIHNlcGFyYXRlIG11bHRpcGxheWVyIGFuZCBzaW5nbGUgcGxheWVyIG1vZGVzIGlzIGEgdGhpbmcgb2YgdGhlIHBhc3QuIApEaWVzZSBXZWJzaXRlIGJlbnV0enQgR29vZ2xlIEFuYWx5dGljcywgZWluZW4gV2ViYW5hbHlzZWRpZW5zdCBkZXIgR29vZ2xlIEluYy4gCklmIGl0IGdldHMgZG93biB0byA1IG9yIGZld2VyIGJpZyBibGluZHMsIHRoZW4geW91J3JlIGluIGEgZGFuZ2VyIHpvbmUgYW5kIG5lZWQgdG8gdHJ5IHRvIGRvdWJsZSB1cCBzb29uLiBJbiBzdWNoIGEgc2l0dWF0aW9uIHRoZSBiZXN0IHN0cmF0ZWd5IGlzIHByb2JhYmx5IHRvIGdvIGFsbCBpbiB3aXRoIGFueSBkZWNlbnQgaGFuZCB0byB0cnkgYW5kIGdldCBhIG11Y2ggYmlnZ2VyIGNoaXAgc3RhY2suIFRoZXJlIGFyZSBhIG51bWJlciBvZiBncmVhdCBib29rcyBvdXQgdGhlcmUgb24gVGV4YXMgaG9sZCAnZW0gdG91cm5hbWVudHMsIGVzcGVjaWFsbHkgRGFuIEhhcnJpbmd0b24ncyBzZXQuIApBZmFpayBpdCdzIG5vdCB0aGUgdHlwZSBvZiBkb3VnaCB0aGF0IHlvdSB1c2UsIHRoZXJlJ3Mgbm8gSGFsYWNoaWMgZGlmZmVyZW5jZSBiZXR3ZWVuICJicmVhZCBkb3VnaCIgYW5kICJwYXN0cnkgZG91Z2giIGlmIHRoZXkncmUgcHJpbWFyaWx5IG1hZGUgb2YgZmxvdXIgYW5kIHBhcmV2ZS4gWWVhc3QgY29udGVudCBpcyBub3Qgd2hhdCBtYWtlcyBzb21ldGhpbmcgYnJlYWQsIHRoZSBmbG91ciBpcyB0aGUgaW1wb3J0YW50IHBhcnQuIFN0dWZmZWQgYnJlYWQgaXMgcGFzIGhhYmFiaWtpc25pbiBhbmQgYSBNZXpvbm9zLiBUaGUgZ2VuZXJhbCBydWxlICh3YXkgb3ZlcnNpbXBsaWZpZWQpIGlzICJ3b3VsZCBJIG1ha2UgYSBzYW5kd2ljaCB3aXRoIHRoaXMiIGlmIHNvICAgaGFtb3R6aS4gU2VwaGFyZGltIGRvbid0IGV2ZW4gd2FzaCBvbiBzd2VldCBjaGFsbGFoLiBJdCBnZXRzIHZlcnkgY29tcGxpY2F0ZWQsIGllIHBpenphLgpUaGF0IHdlIHdhbGsgYXJvdW5kIHdpdGggb3VyIGhlYWRzIGJvd2VkLiBUaGF0IHdlIGxvd2VyIG91ciBmYWNlIGFuZCBvdXIgdm9pY2UuIApJIG5vdCBibGFtaW5nIGFueSBkcnVnIGZvciB0aGUgcGVvcGxlIHdobyBydW4gc2NhbXMuIEJ1dCBpdCBpbXBvcnRhbnQgd2hlbiB0YWxraW5nIGFib3V0IFN0YWdlIElWIGNhbmNlciBwYXRpZW50cyB0byByZW1lbWJlciB0aGF0IHNjYW1zIGV4aXN0LiBQZW9wbGUgd2hvIGFyZSBkZXNwZXJhdGUgYW5kIGluIGRpcmUgc3RyYWlnaHRzIHdpbGwgb2Z0ZW4gZG8gd2hhdCB0aGUgbm9ybWFsIHBlcnNvbiB3aWxsIGNvbnNpZGVyIHN0dXBpZC4gTG9vayBhdCB0aGUgcGxhY2VzIHdoZXJlIHRoZXkgY2xhaW0gdGhlIHNwZWNpYWwgd2F0ZXJzIGN1cmUgbWVkaWNhbCBhbGltZW50cy4gSG93IG1hbnkgcGVvcGxlIG1ha2Ugc3BlY2lhbCBwaWxncmltYWdlIHRvIHRob3NlIHBsYWNlcyBpbiBob3BlcyBvZiBhbiBpbXBvc3NpYmxlIGN1cmU/IFRoZXJlIGFyZSB3aG9sZSB0b3ducyBhbmQgY2l0aWVzIGFyb3VuZCB0aGUgd29ybGQgd2hlcmUgYW4gZW50aXJlIGxvY2FsIGVjb25vbXkgaXMgYmFzZWQgb24gc2VsbGluZyBxdWFja2VyeS4KVGhlIHNpbXBsZXN0IGFkdmljZSBJIGNhbiBnaXZlIHRvIGEgYmVnaW5uZXIgd2hpY2ggdmlydHVhbGx5IGFsd2F5cyBob2xkcyB0cnVlOiBibHVmZiBzcGFyaW5nbHksIGRvbid0IHdhc3RlIHlvdXIgY2hpcCBzdGFjayBjYWxsaW5nIGRvd24gc3VzcGVjdGVkIGJsdWZmcyBmcm9tIG90aGVycyB3aGVuIHlvdSdyZSB3ZWFrLCBhbmQgZm9sZCBmcmVxdWVudGx5LiAKT3ZlcnZpZXcgZm9yIGpvdGFkZW8KIlRoaXMgaXMgbXkgZmluZ2VyIGJlZm9yZSBpdCBmZWxsIG9mZi4gTWF5YmUgSSB3aWxsIHNlbGwgaXQgb24gZWJheSwiIGhlIGFkZGVkLiAiQWZ0ZXIgYWxsIHRoYXQgZmluZ2VyIGhpdCA0NjIgbWxiIGhvbWVydW5zLiIKWW91IGFyZSBub3Qgd3JvbmcgYW5kIEkgdW5kZXJzdGFuZCB5b3VyIGNvbmNlcm5zLCBidXQgUHVwcGV0IGhhcyB0aGUgc2FtZSBwcm9ibGVtLiAKSSBoYWQgdG8gaGF2ZSB0ZWV0aCBwdWxsZWQsIGJlY2F1c2UgdGhhdCB3YXMgdGhlIGNoZWFwZXN0IG9wdGlvbiB0byBzdG9wIHRoZSBwYWluLiAKVGhlIHVucGxheWFibGUgY2FzZSBpcyBhIGJpdCBtdWRkaWVyLiAKSSBhYnNvbHV0ZWx5IGZsdXNoIHRoaXMgZHJpdmUgYXJyb3cgc3RyYWlnaHQgYW5kIEkgc2VlIHRoZSBmbGlnaHQgYWxsIHRoZSB3YXkgZ29pbmcgdXAgdGhlIGxlZnQgc2lkZSBvZiB0aGUgZ3JlZW4sIGFic29sdXRlbHkgemVybyBjaGFuY2Ugb2YgYmVpbmcgY2xvc2UgdG8gdGhlIGdyb3VwIGluIGZyb250IHNvIEkgZG9uIHNob3V0LiAKWW91ciBzY2FscCBpcyBoZWFsdGhpZXN0IHdoZW4gaXQncyBjbGVhbi4gCkhlIHdhcyBjb252aWN0ZWQgbm9uZXRoZWxlc3MuIFRoZSBBWiBTdXByZW1lIENvdXJ0IG92ZXJ0dXJuZWQgdGhpcyBjb252aWN0aW9uLCBzYXlpbmc6CkJlY2F1c2UgbGFub2xpbiBjb25zaXN0cyBvZiBhYm91dCA1JSB0byAyNSUgb2YgdGhlIHRvdGFsIHdlaWdodCBvZiB3b29sLCBpdCdzIG5hdHVyYWwgYW5kIHBlcmZlY3RseSBzYWZlIHRvIHVzZS4gCiJGaW5lIGlzIE9LLCBidXQgaXQgaXMgbm90IHJlYWxseSBnb29kIGVub3VnaCwgaXMgaXQ/IEJ1dCBHZW9yZ2Ugd2FzIHJpZ2h0LCBJIGFtIGZpbmUgYW5kIEkgYW0gT0ssIGFsdGhvdWdoIEkgd2lsbCBtaXNzIGhpbSB1bnRpbCBteSBkeWluZyBkYXkuIEJ1dCBoZSB3YWxrZWQgaGlzIHJvYWQgYW5kIG5vdyBJIGhhdmUgdG8gd2FsayBtaW5lLiIKUnlkZ2VzIFBvcnQgTWFjcXVhcmllIHNhbGVzIGFuZCBtYXJrZXRpbmcgbWFuYWdlciBLYXRlIFdvb2QgRm95ZSB0aG91Z2h0IEJhdG1hbidzIHN0cnVnZ2xlIGFnYWluc3QgdGhlIGV2aWwgZG9jdG9yLCB3aG8gdHVybnMgZ3JlZW4gdG8gbWF0Y2ggaGVyIG5hdHVyZSwgd291bGQgbWFrZSBmb3IgYSBjb29sIHRoZW1lIGZvciB0aGUgaG90ZWwncyBOZXcgWWVhcidzIEV2ZSBiYXNoLiAKQXMgcGFydCBvZiBTdW5kYXkncyBzaGFrZWRvd24sIHRoZSBzcGFjZSBzdGF0aW9uIGFzdHJvbmF1dHMgc2VudCBjb21tYW5kcyBmb3IgRHJhZ29uIHRvIHJldHJlYXQgYW5kIHRoZW4gbW92ZSBmb3J3YXJkIGFnYWluLCBiZWZvcmUgdGhlIGNhcHN1bGUgY2xvc2VkIGluIGZvciBnb29kLiBTcGFjZVggZW1wbG95ZWVzIGF0IGNvbXBhbnkgaGVhZHF1YXJ0ZXJzIGluIEhhd3Rob3JuZSwgQ2FsaWZvcm5pYSwgY2hlZXJlZCB0aGUgZG9ja2luZywgdGhlbiBidXJzdCBpbnRvIGFwcGxhdXNlIGFnYWluIHdoZW4gdGhlIERyYWdvbidzIGxhdGNoZXMgd2VyZSBzZWN1cmVkLgpZb3VyIGJyYWluIHRyaWVzIGl0cyBoYXJkZXN0IHRvIHRyeSB0byB0cmljayB5b3UgaW50byB0aGF0IHN3ZWV0IHN3ZWV0IGVuZG9ycGhpbiByZWxlYXNlLkVkaXQ6IGFueW9uZSB3aG8gZGVhbHMgd2l0aCB0aGlzIGxpa2UgSSBkbyBpcyB3ZWxjb21lIHRvIFBNIG1lIGZvciBzdXBwb3J0IG9yIGp1c3QgdG8gdGFsayBvciB2ZW50IG9yIGNoYXQuIApJIHNheSBqdXN0IGJldHdlZW4gY2FyIGluc3VyYW5jZSwgZ2FzLCBhbmQgZm9vZCwgeW91IGF0IGFub3RoZXIgJDEsMDAwIC8gbW9udGggaW4gZXhwZW5zZXMuIApWQTMvVkEzTSB1c2Ugc3RhbmRhcmQgMjBtbSBxdWljayByZWxlYXNlIGJhbmRzIHNvIHRoZXJlIGFyZSBsb3RzIG9mIG9wdGlvbnMgaWYgeW91IHdhbnQgdG8gY2hhbmdlIGl0IHVwClRoZSBnYW1lIGlzIHN0YXJ0ZWQgd2l0aCB0aGUgZGVhbGVyIGRpc3RyaWJ1dGluZyB0aGUgY2FyZHMgdG8gdGhlIHBsYXllcnMgaW4gYSBjbG9ja3dpc2Ugb3JkZXIuIFRoZSBwbGF5ZXJzIGhhdmUgZm91ciBvcHRpb25zIHRvIGRlYWwgd2l0aCB0aGUgZ2FtZS4gT25lIGlzIHRvIGNoZWNrLCB0aGF0IGlzIHRvIGJldCBub3RoaW5nIGJ1dCByZW1haW4gaW4gdGhlIGdhbWU7IHRvIGNhbGwgb3IgdG8gYmV0IHRoZSBzYW1lIGFtb3VudCBvZiBiZXQgYXMgdGhlIHByZXZpb3VzIHBsYXllcjsgdG8gcmFpc2Ugb3IgaW5jcmVhc2UgdGhlIGFtb3VudCBvZiB0aGUgcHJldmlvdXMgYmV0OyBhbmQgdG8gZm9sZCBvciBnaXZpbmcgdXAgeW91ciBIYW5kLgpBbnlvbmUgd2hvIG1heSBrbm93IHNvbWV0aGluZyBtb3JlIGFib3V0IHRoZSBhbGxlZ2F0aW9ucyBpcyBlbmNvdXJhZ2VkIHRvIGNhbGwgRXNzZXggQ291bnR5IE9QUCBhdCAxIDg4OCAzMTAgMTEyMi4uIApBbmQgaXQgYmUgaGFyZCBmb3IgdGhlIG5iYSB0byBleGNsdXNpdmVseSBzZWxsIGNvbnRlbnQgYW5kIG1ha2UgYXMgbXVjaCBtb25leSB3aGlsZSBhbHNvIHRha2luZyBlbm9ybW91cyByaXNrLklsS2FwaXRhbm8gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29pIGRvbid0IHRoaW5rIGl0IHdvdWxkIGJlIGhhcmQgZm9yIHRoZW0gdG8gZXhjbHVzaXZlbHkgc2VsbCBjb250ZW50IHRiaC4gCldoZW4gaXQgY29tZXMgdGltZSBmb3IgcHJlc2Nob29sLCBsb29rIGZvciBzb21ld2hlcmUgcGxheSBiYXNlZCB3aGVyZSBhbGwgdGhlIGFydCBkb2VzbiBsb29rIHRoZSBzYW1lLgpUaGUgb25seSByZWFzb24gdG8gcGxheSBjYXNpbm8gZ2FtZXMgaXMgcGxheWluZyBmb3IgZnVuLiBZb3UgbWF5IHdpbiBpbiBvbmUgbmlnaHQgb3IgbG9zZSBidXQgaWYgeW91IHBsYXkgZXZlcnkgbmlnaHQgeW91IHdpbGwgZGVmaW5pdGVseSBsb3NlIGluIGEgbG9uZyBydW4uIERvZXMgdGhhdCBhbHNvIGluY2x1ZGUgdGhlIGZvcnVtcz8gTXkgcXVlc3Rpb24gcmVhbGx5IGlzbid0IGFib3V0IGdhbWJsaW5nLCBpdCBpcyBhYm91dCBjYXNpbm8ncyBpbiBnZW5lcmFsLiAKIkEgY2FwIG9uIHBva2VyIG1hY2hpbmVzIGluIHZ1bG5lcmFibGUgYXJlYXMgd29uIGhhdmUgYSByZWFsIGltcGFjdCBvbiBoYXJtIGlmIHBva2llcyByZW1haW4gZW1iZWRkZWQgaW4gb3VyIGNvbW11bml0aWVzIGluIGNsdWJzIGFuZCBob3RlbHMgYW5kIHRoZXNlIGFkZGljdGl2ZSBtYWNoaW5lcyBjb250aW51ZSB0byBleHBsb2l0IHZ1bG5lcmFibGUgcGVvcGxlLCIgaGUgc2FpZC4gClRoZSBSZWQgSGF3ayAoTWFnYXppbmU6IDE5MjUsIEJvb2s6IDE5MjYpVGhlIFJlZCBIYXdrIGlzIHRoZSB3ZWFrZXN0IGFuZCBzaG9ydGVzdCBvZiB0aGUgdGhyZWUgc2VjdGlvbnMgb2YgdGhlIHRyaWxvZ3kuIEl0J3Mgbm90IG9ubHkgdGhlIG1vc3Qgb3ZlcnRseSByYWNpc3Qgc3Rvcnkgb2YgdGhlIHRocmVlLCBpdCdzIHRoZSBsZWFzdCBzYXRpc2Z5aW5nIG5hcnJhdGl2ZWx5LCBjb25zaXN0aW5nIGxhcmdlbHkgb2YgYSBkZXJpdmF0aXZlIGFkdmVudHVyZSB0aGF0IGVuZHMgYWJydXB0bHkuIEluc3RlYWQgaXQgbGF1bmNoZXMgc3RyYWlnaHQgaW50byB0aGUgc3RvcnksIHdpdGggb25seSBhIGJyaWVmIGV4cGxhbmF0aW9uIG9mIHRoZSBzZXR0aW5nIHRvIGluZm9ybSB0aGUgcmVhZGVycyB0aGF0IGluIDI0MDggdGhlIEthbGthcnMgaGFkIGJlZW4gcHVzaGVkIHRvIEFtZXJpY2EncyB3ZXN0IGNvYXN0IGJ5IEp1bGlhbiAxOHRoLi4gClNvbWUgb2YgdGhlIGNvbW1lbnRzIGxhc3Qgd2VlayByZWdhcmRpbmcgdGhpcyBuZXcgdGhyZWFkIHN1Z2dlc3RlZCB0aGF0IHdlIG1heSBub3QgbmVlZCBhIHdlZWtseSBtZXRhIHRocmVhZC4gClllYWggeW91IHVzdWFsbHkgdGhpbmsgb2YgdGhlIGhvbWUgZ2FtZXMgYXMgc3VwZXIgc29mdCBhbmQgZnVsbCBvZiBkb25rcyBob3dldmVyIHRoaXMgaXMgc29ydCBvZiBhbiBleGNlcHRpb24uIEl0IGEgbGVhZ3VlIHdoZXJlIHdlIGtlZXAgcG9pbnRzIHdpdGggYWJvdXQgNjAgYWN0aXZlIHBsYXllcnMgYW5kIGFueXdoZXJlIGJldHdlZW4gMjAgICA0MCBvZiB0aGVtIG1pZ2h0IHNob3cgdXAgb24gYSBnaXZlbiBwb2tlciBuaWdodC4gT25lIGd1eSBoYXMgd29uIHNlYXRzIHRvIHRoZSBXU09QIG1haW4gZXZlbnQgbW9yZSB0aGFuIG9uY2UuIApTbyB3ZSBmdWNraW5nIGtpbGxlZCB0aGVtIGFsbC4uIAoxMCkgaW5jcmVhc2VkIHN0cmVzcyBkdWUgdG8gb3ZlcnVzZSwgcmVwZXRpdGl2ZSBtb3ZlbWVudCBhbmQvb3IgaHlwZXJtb2JpbGl0eSwgYW5kIGRlY3JlYXNlZCBzdHJlc3MgZHVlIHRvIGltbW9iaWxpemF0aW9uIG9yIGh5cG9tb2JpbGl0eSBjYW4gY2F1c2UgY2hhbmdlcyBpbiBjb25uZWN0aXZlIHRpc3N1ZS4gKEJvdGggaW5jcmVhc2VkIGFuZCBkZWNyZWFzZWQgbW90aW9uIGFyZSBkZWxldGVyaW91cy4pCk5hbWFraXVzICAyLDMwNCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KQXMgdGhpcyByZWR1Y3Rpb24gb2Ygc2V4dWFsIGRpZmZlcmVuY2UgdG8gImp1c3QgbGlrZSBvdGhlciBuaWNlIGZhbWlsaWVzLCBvbmx5IHR3byBtb21zIG9yIHR3byBkYWRzIiBhbmQgImp1c3QgbGlrZSBhbnkgb3RoZXIgc29sZGllciwganVzdCBnYXkiIGhhcHBlbmVkIGF0IHRoZSBsZXZlbCBvZiBuYXRpb25hbCBjb3ZlcmFnZSwgaXQgYWxzbyBoYXBwZW5lZCB0byBhIGxvdCBvZiBnYXkgYWN0aXZpc20uIE1vbmV5IGdvdCB0YWtlbiBhd2F5IGZyb20gc2hlbHRlcnMgZm9yIGhvbWVsZXNzIHF1ZWVyIHlvdXRoIGFuZCBnaXZlbiB0byBzYW1lIHNleCBtYXJyaWFnZSBtb3ZlbWVudHMuIFRoZSBIdW1hbiBSaWdodHMgQ2FtcGFpZ24gZnVuZCBzb2xkIHRyYW5zZ2VuZGVyIGFsbGllcyBkb3duIHRoZSByaXZlciB0byB0cnkgYW5kIGdldCBwcm90ZWN0aW9uIG9mIGdlbmRlciBub3JtYXRpdmUgZ2F5cyBhbmQgbGVzYmlhbnMuLiAKVGhlIFJhcHRvcnMgaGF2ZSB0aGUgc2NoZWR1bGUgb24gdGhlaXIgc2lkZSB0aGUgcmVzdCBvZiB0aGUgd2F5LiBUdWVzZGF5J3MgZ2FtZSB3YXMgb25lIG9mIHRocmVlIGdhbWVzIHJlbWFpbmluZyBpbiB0aGUgcmVndWxhciBzZWFzb24gYWdhaW5zdCB0ZWFtcyB0aGF0IGhhdmUgYSB3aW5uaW5nIHJlY29yZCwgdGhlIGZld2VzdCBvZiBhbnkgdGVhbSBpbiB0aGUgbGVhZ3VlLiBUaGV5IGZhY2UgT2tsYWhvbWEgQ2l0eSBpbiBhIGhvbWUgYW5kIGhvbWUgc2VyaWVzIGxhdGVyIHRoaXMgbW9udGguLiAKQSBDQVJEIGNsdWIgY2hhaXJtYW4gZnJvbSBXaWNrbG93IHdhcyBmb3VuZCBndWlsdHkgeWVzdGVyZGF5IG9mIGJyZWFraW5nIHRoZSAxOTY4IEdhbWluZyBBY3QgaW4gYW4gRW5nbGlzaCB0ZXN0IGNhc2Ugd2hpY2ggY291bGQgYWZmZWN0IHRoZSBmdXR1cmUgb2YgcG9rZXIgY2x1YnMgdGhyb3VnaG91dCB0aGUgY291bnRyeS4KSWYgd2UgcmVtb3ZlIG92ZXIgcGFpcnMgd2UgZG93biB0byA1LjI1JS4uIApUaGUgR2FtYmxpbmcgRXZvbHV0aW9uIGFuZCBUb2RheXMgRHJhdyB0byBNb2JpbGUgR2FtaW5nCkhlYXZ5IFBvbGljZSBQcmVzZW5jZSBhdCBJbnRlcm5hdGlvbmFsIFdvbWVuIERheSBQcm90ZXN0IGluIFNwYWluV29tZW4gYWNyb3NzIFNwYWluIG1hcmtlZCBJbnRlcm5hdGlvbmFsIFdvbWVuJ3MgRGF5LCBNYXJjaCA4LCB3aXRoIGEgc2VyaWVzIG9mIHByb3Rlc3RzLCB3YWxrb3V0cyBhbmQgc3RyaWtlcy4gCk9uY2UgdGhlIGJpa2VycyByZXR1cm5lZCBmcm9tIHRoZWlyIHJpZGUsIHRoZSB3aW5uZXIgb2YgdGhlIHBva2VyIHJ1biwgU2NvdHQgQnVycnkgb2YgQWpheCwgd2FzIGF3YXJkZWQgd2l0aCB0aGUgZ3JhbmQgcHJpemUgb2YgJDEsMjAwIGluIHZvdWNoZXJzIGZvciBhIHRyaXAgdG8gTGFzIFZlZ2FzLgpUaGVzZSBtZW4gd2VyZSB3b3JraW5nIGluIGtpdGNoZW5zIG9ubHkgYmVjYXVzZSB0aGV5IHdlcmUgZm9yYmlkZGVuIGFuZCBwcm9oaWJpdGVkIGZyb20gd29ya2luZyBpbiBvdGhlciBwcm9mZXNzaW9uYWwgaW5kdXN0cmllcy4gU28gdGhleSB3ZXJlIGZhY2luZyBlY29ub21pYyBiYXJyaWVycywgdGhleSB3ZXJlIGZhY2luZyBkaXNjcmltaW5hdGlvbiwgdGhleSB3ZXJlIGZhY2luZyByZWFsIHJhY2lzbSBhbmQgdGhlc2UgZGlzaGVzIHdlcmUgdGhlaXIgYW5zd2VyIHRvIHRoYXQuIApXaGF0IGNvdWxkIHBvc3NpYmx5IGdvIHdyb25nCk9mIGNvdXJzZSwgdGhlcmUgYXJlIG1hbnkgZWNvbm9taWMgZmVlZGJhY2sgbG9vcHMgdGhhdCB3b3VsZCBiZSBraWNrZWQgb2ZmIHN1Y2ggYXMgaW5jcmVhc2VkIGhpcmluZyBieSBjb21wYW5pZXMgdGhhdCBwcm9kdWNlIGhvdXNlcywgZm9vZCwgYW5kIG5lY2Vzc2l0aWVzLgpUaGUgc2NhbGxvcHMgd2VyZSBhbm90aGVyIHN0YW5kb3V0LCBwZXJmZWN0bHkgcHJlcGFyZWQgYW5kIHNlcnZlZCB3aXRoIGEgY2h1bmt5IGJlZCBvZiBtYXNoZWQgcG90YXRvZXMgYW5kIHNwaW5hY2guIFdlIG5ldmVyIHRob3VnaHQgd2Ugd291bGQgZGVzY3JpYmUgc2NhbGxvcHMgYXMgImNvbWZvcnQgZm9vZCwiIGJ1dCB0aGF0J3Mgd2hhdCB0aGVzZSBhcmUgdGhlIHNvcnQgb2YgdGhpbmcgeW91ciBncmFuZG1vdGhlciB3b3VsZCBtYWtlIGlmIHNoZSBqdXN0IGhhcHBlbmVkIHRvIGJlIGEgY2hlZiB3aG8ncyBjb29rZWQgaW4gZmluZSByZXN0YXVyYW50cyBhcm91bmQgdGhlIHdvcmxkLi4gCldlIGhhdmUgc3RvcmVzIHRoYXQgd2hlbiB0aGV5IGhhdmUgaGVhdnkgdm9sdW1lLCB0aGV5IGRpdmlkZSBpdCB1cCBsaWtlIHRoZSBwb2tlciBjaGlwczogVGhlIGJsdWUgY2hpcHMgYXJlIHRoZSBtb3N0IHZhbHVhYmxlIG9uZXMsIHRoZW4gcmVkLCB0aGVuIHdoaXRlLiBZb3UgY2FuIGhhdmUgeW91ciBrZXkgc2VsbGluZyBwZW9wbGUgaGFuZGxlIHRoZSBibHVlIGNoaXAgYnVzaW5lc3MsIGFuZCB5b3UgY2FuIGhhdmUgc2tpbGxlZCwga2V5IGFkbWluIHBlb3BsZSBoYW5kbGUgdGhlIHdoaXRlIGNoaXBzLgpOb3cgcG9wIHlvdXIgd3Jpc3QgZGlyZWN0bHkgdG93YXJkcyB5b3VyIGZhY2UgaG9sZGluZyB5b3VyIGdyaXAgcG9zaXRpb24sIHlvdXIgdGh1bWIgc2hvdWxkIHNob290IG91dCB3aGljaCBpcyB3aGF0IGhhcHBlbnMgYXQgdGhlIGJvdHRvbSBvZiB0aGUgc3dpbmcuIApMb29rLiB5b3UgY2FuJ3QgaGF2ZSBhbGwgdGhlIGJlYXV0eSBhbmQgbm9uZSBvZiB0aGUgYm9vdHkuIExpa2UgbGF6eSBhc3MgSG8ncyBvciB0aGUgZGFtbiBQbyBQby4gSnVzdCB3aGVuIHlvIHNwb3Qgc3RhcnRzIHRvIG1ha2UgYSBrbm90LCAiT25lIFRpbWVzIiB0aGVyZSB0byBraWxsIHRoZSB3aG9sZSBwbG90LiBZb3UgZ290dGEgZGVhbCB3aXRoIHRoZSBzdHJ1bmcgYW5kIHRoZSBzcHVuLiBhbmQgYmVsaWV2ZSBtZSB0aGF0IGFpbid0IG5vIGZ1bi4gQnV0IHRoZSB3b3JzdCBpcyB0aGUgdGltZSBpbiBhIGNlbGwsIGN1eiB5b3UgYmUgbWFkIGFzIGhlbGwgd2hlbiB5b3UgYWluJ3QgZ290IG5vIGJhaWwuClRoZSBjb21wYW55IHN0YXJ0cyBzZW5kaW5nIHRoZSBtZXNzYWdlIGR1cmluZyB0aGUgaGlyaW5nIHByb2Nlc3MsIHNheXMgQ0VPIFBhdWwgUHVyY2VsbC4gIkR1cmluZyB0aGUgaW50ZXJ2aWV3LCBJIGxvb2sgdGhlbSBpbiB0aGUgZXllIGFuZCB0ZWxsIHRoZW0sIEkgZGlzY292ZXIgdGhhdCB5b3UgYXJlIGEgamVyaywgSSBhbSBnb2luZyB0byBmaXJlIHlvdSwgIiBoZSBzYXlzLiAKTXkgdW5kZXJzdGFuZGluZyB3YXMgdGhhdCBJIGhhZCB0byByZWNoZWNrIGl0IG9uY2UgaW4gS29yZWEsIGJ1dCBJIHdlbnQgdG8gdGhlIGNoZWNrZWQgYmFnZ2FnZSBvZmZpY2UgYW5kIHRoZXkgc2Nhbm5lZCBteSB0aWNrZXQgYW5kIHNhaWQgSSB3YXMgZmluZSwgYnV0IHRoZXkgc2VlbWVkIGEgbGl0dGxlIGNvbmZ1c2VkLi4gCk15IHRhcmdldCBib2FyZHMgYXJlIERpZ2lsZW50IEFydHkgQTcgZm9yIHRoZSBsb3cgZW5kIGFuZCBOZXh5cyBWaWRlbyBmb3IgdGhlIGhpZ2ggZW5kLiBUaGUgbGF0dGVyIGhhcyBhbiBIRE1JIHJlcGVhdGVyIGFuZCBwb3J0LiAKUGFzdGUgdGhlIFVSTCBpbiBlYWNoIG9uZSA1LiAoRG8gdGhpcyBvbiBlYWNoIHRhYi4pIFlvdSBzaG91bGQgZ2V0IG1vcmUgbW9uZXkgYW5kIGV4cC4gClRoZSBvcHRpbWFsIGV4cGxvaXRpdmUgc3RyYXRlZ3kgc2hvdWxkIHN0aWxsIGJlIHZlcnkgY2xvc2UgdG8gR1RPLiBUaGUgZGlzdGluY3Rpb24gSSB3YW50IHRvIG1ha2UgaXMgdGhhdCBHVE8sIGJ5IGRlZmluaXRpb24sIGlzIGluaGVyZW50bHkgbm9uIGV4cGxvaXRpdmUgKHdoaWxlIGV4cGxvaXRpdmUgc2hvdWxkIGhhdmUgcm9vdHMgaW4gR1RPKS4gVGhlIHBvaW50IG9mIEdUTyBpcyB0aGF0IGl0IGlzIGFsd2F5cyBhIHdpbm5pbmcgc3RyYXRlZ3kgcmVnYXJkbGVzcyBvZiB3aGF0IHRoZSBvcHBvbmVudCBkb2VzIGFuZCBhbnkgZGV2aWF0aW9uIGZyb20gR1RPIGxvc2VzIHRvIGFuIG9wcG9uZW50IHRoYXQgc2hpZnRzIHRoZWlyIHN0cmF0ZWd5IHRvIEdUTy4uIApEaWQgdGhlIGp1ZGdlIG9yZGVyIDEwIGFwb2xvZ3kgbGV0dGVycyBhbmQgdGhhdCB5b3UgZmluaXNoIHRoZSBqb2IsIG9yIGp1c3QgdGhlIGxldHRlcnM/IElmIGp1c3QgdGhlIGxldHRlcnMsIG9uIHdoYXQgZ3JvdW5kcz8uIAoiPktJTkcgT0YgVEhJUyBISUxMOiBUcm95IEtlZXBpbmcsIHByZXNpZGVudCBhbmQgZ2VuZXJhbCBtYW5hZ2VyIGF0IFNvdXRobGFuZCBQYXJrIEdhbWluZyBSYWNpbmcsIHByZXNpZGVzIG92ZXIgYW4gb3BlcmF0aW9uIHRoYXQncyBncm93aW5nIHdoaWxlIG90aGVycyBpbiB0aGUgZ2FtaW5nIGluZHVzdHJ5IGN1dCBiYWNrLiAgIFBIT1RPIEJZIFRPTSBXSUxFTU9OClRhcmdldCBtYXJrZXQgaXMgMTggIHRvIDM1IHllYXIgb2xkcywgYnV0IGl0IGFwcGVhbHMgdG8gcGVvcGxlIG9mIGFsbCBhZ2VzLiAKT3VyIGZpbmFsIHR3byBzcGVha2VycyBhdCB0aGUgQ29uZ3Jlc3MgbWlnaHQgYmUgZnV0dXJlIENFT3MuIEVybnN0IEJhdW1hbm4gaXMgQk1XJ3MgYm9hcmQgbWVtYmVyIGZvciBwZXJzb25uZWwgICBhbmQgYSBuZXcgZmFjZSB0byBtYW55IG9mIHVzLiBIZSBtYWRlIGEgZ29vZCBpbXByZXNzaW9uLiBIZSBsb29rcyBhbmQgc291bmRzIGxpa2UgdGhlIEJNVyBvZiBvbGQgICB0aGUgZ3JlYXQgY29tcGFueSB3ZSBrbmV3IGJlZm9yZSB0aGUgUm92ZXIgZGlzYXN0ZXIuCkV2ZXJ5IHNpbmdsZSByaWRlciB0aGF0IGhhcyBjb21wbGV0ZWQgdGhpcyBleHRyZW1lbHkgZ3J1ZWxpbmcgcmFjZSBpcyBhIGNoYW1waW9uLiBGcm9tIHRvcnJlbnRpYWwgcmFpbnMgaW4gSXJlbGFuZCB0byBldmVuIG1vcmUgcmFpbiBpbiBJdGFseSB0byBzbm93LCBpY2UsIHNsZWV0IGFuZCBmb2cgaW4gdGhlIEFscHMsIHRoZXNlIGd1eXMgYXJlIHRydWUgd29ybGQgY2xhc3MgYXRobGV0ZXMuIFRoZXkgYWxsIGRlc2VydmUgcmVjb2duaXRpb24gZm9yIGZpbmlzaGluZyB0aGlzIDIwMTQgR2lyby4gClNlY29uZGx5LCB5b3UgbmVlZCB0byBsZWFybiB0aGUgdG9vbC4gSWYgeW91IGRvbid0IGxlYXJuIGhvdyB0byB1c2UgaXQsIHlvdSB3aWxsIGdldCBmcnVzdHJhdGVkIGFuZCBzdG9wLiBBdCBsZWFzdCB0YWtlIHRoZSBmaXJzdCB0d28uIApUb255cGVwcGVyb25pMTEgdQpTdXBlcmlvciBDb3VydCwgTWFndWlyZSAidW5jb25kaXRpb25hbGx5IGRlbmllcyBoYXZpbmcgZW5nYWdlZCBpbiBhbnkgY29uZHVjdCB3aGF0c29ldmVyIGluIHZpb2xhdGlvbiBvZiBsYXcgYW5kIGZ1cnRoZXIgY2F0ZWdvcmljYWxseSBkZW5pZXMgaGF2aW5nIGtub3dpbmdseSBvciBpbnRlbnRpb25hbGx5IHBhcnRpY2lwYXRlZCBpbiBhbnkgZnJhdWR1bGVudCBzY2hlbWUuIgpCZXR0ZXIgdG8gZ28gb3V0IGJvbGRseSAuIFVubGVzcywgYWdhaW4sIHRoZSBwb2ludCBpcyB0aGUgY2FtYXJhZGVyaWUsIGluIHdoaWNoIHlvdSBuZWVkIHRvIGJyYWNlIHlvdXJzZWxmIHRvIG5vdCBjYXJlIGFib3V0IHdpbm5pbmcuLiAKWmVybyBlbmZvcmNlbWVudCBvbiBhY3R1YWxseSBwYXlpbmcgZmFyZXM7IHRoZSBOb0hvIHN0YXRpb24gaXMgd2lkZSBvcGVuIGFuZCBwZW9wbGUganVzdCB3YWxrIGluIHdpdGhvdXQgcGF5aW5nLiBJIGxpa2UgdG8gd2F0Y2ggdG91cmlzdCBmYWNlcyB3aGVuIHRoZXkgaGF2ZSBhICJ3aGF0IHRoZSBmdWNrIGhhcyBoYXBwZW5lZCB0byBBbWVyaWNhIiBtb21lbnQgb24gdGhlIHdheSB0byBVbml2ZXJzYWwgb3IgdGhlIHNoaXQgc2hvdyBvZiBIb2xseXdvb2QuIFRoZWlyIHJlYWN0aW9ucyB3aGVuIHRoZSBzbWVsbCBoaXRzIHRoZW0gaXMgcHJpY2VsZXNzLgpPbmUgb2xkZXIgZ3V5IHdobyBpcyBub3RvcmlvdXNseSBsb29zZSBhbmQgaGFzIGJlZW4gaGl0dGluZyBldmVyeXRoaW5nIGFuZCBoYWQgYmVhdCBtZSBpbiBhIGZldyBwb3RzIGJldHMgYmlnIGFuZCBJIHJhaXNlIGFuZCBoZSBwYXVzZXMgYW5kIG1ha2VzIHRoZSBjYWxsLiAKV2l0aG91dCBnb2luZyBpbnRvIHRvbyBtdWNoIGRldGFpbCBteSB3b3JrIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0bzsgb3JnYW5pemluZyBjaGFyaXR5IHNwb3J0cyB0b3VybmFtZW50cywgZGV2ZWxvcGluZyBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgaGVscHMgY2hpbGRyZW4gZnJvbSBsb3cgaW5jb21lIGZhbWlsaWVzIHBhcnRpY2lwYXRlIGluIHNwb3J0cyBwcm9ncmFtcyBmcmVlIG9mIGNoYXJnZSwgYW5kIHJ1bm5pbmcgYSBzcG9ydHMgYWNhZGVteSB0aGF0IHByb3ZpZGVzIGEgc2FmZSBhbmQgZnVuIGxlYXJuaW5nIGVudmlyb25tZW50IGZvciBraWRzIHdpdGggZGV2ZWxvcG1lbnRhbCBhbmQgaW50ZWxsZWN0dWFsIGRpc2FiaWxpdGllcy4gV2hpbGUgSSB0cnkgdG8gZG8gbXkgYmVzdCBpbiBoZWxwaW5nIG90aGVycyBpbiByZWFsIGxpZmUgSSB0aGluayBpdCBhbHNvIGltcG9ydGFudCB0byB0cnkgYW5kIGhlbHAgdGhlIHdvcmxkIGFzIGJlc3QgSSBjYW4uIApMYXVuY2hlZCBpbiBPY3RvYmVyLCB0aGUgbWFzc2l2ZSBvcGVyYXRpb24gY29tcHJpc2VkIG1vcmUgdGhhbiA3MCwwMDAgSXJhcWkgdHJvb3BzIGRyYXduIGZyb20gdGhlIGNvdW50cnkncyBhcm15LCBzcGVjaWFsIGZvcmNlcywgcG9saWNlLCB0cmliYWwgZmlnaHRlcnMgYW5kIG1vc3RseSBTaGlpdGUgcGFyYW1pbGl0YXJ5IGZvcmNlcy4gc2VjcmV0YXJ5IG9mIGRlZmVuY2UuCkFSUEdzLCBhdCB0aGlzIGN1cnJlbnQgbW9tZW50LCBhcmUgZXh0cmVtZWx5IG5pY2hlIGFuZCB0aGV5IGtlcHQgYWxpdmUgYnkgYW4gb2xkZXIsIGRlZGljYXRlZCBmYW5iYXNlLiBQYXRoIG9mIEV4aWxlIGlzIGJhc2ljYWxseSB0aGUgb25seSBnYW1lIHdpdGggcmVndWxhciBjb250ZW50IHVwZGF0ZXMgaW4gdGhpcyBnZW5yZS4KUmVtZW1iZXIsIFN3ZWRlbiBpcyB0aGUgcGxhY2Ugd2hlcmUsIGlmIHlvdSB1c2UgdG9vIG11Y2ggY2FzaCwgYmFua3MgY2FsbCB0aGUgcG9saWNlIGJlY2F1c2UgdGhleSB0aGluayB5b3UgbWlnaHQgYmUgYSB0ZXJyb3Jpc3Qgb3IgYSBjcmltaW5hbC4gU3dlZGlzaCBiYW5rcyBoYXZlIHN0YXJ0ZWQgcmVtb3ZpbmcgY2FzaCBBVE0gbWFjaGluZXMgZnJvbSBydXJhbCBhcmVhcywgYW5ub3lpbmcgb2xkIHBlb3BsZSBhbmQgZmFybWVycy4gQ29uc3VtZXJzIG9ubHkgY2hvaWNlIGluIHN1Y2ggYSBzY2VuYXJpbyBpcyB0byBzcGVuZCBpdCBvciBsZXQgdGhlIGJhbmsgdGFrZSBpdC4gKFRoZSB0aGVvcnkgaXMgdGhhdCBieSBmb3JjaW5nIHBlb3BsZSB0byBzcGVuZCBjYXNoIHJhdGhlciB0aGFuIHNhdmUgaXQsIHlvdSBjYW4gc3B1ciBlY29ub21pYyBncm93dGguKQpSZXZpZXc7IE1pY3Jvc290IFdvcmQgMjAxMCwgUG93ZXJQb2ludCAyMDEwIGFuZCBFeGNlbCAyMDEwOyBNaWNyb3NvZnQgT2ZmaWNlLiAKVGhlIG9wcG9ydHVuaXN0aWMgc3RyZWFrIGluIHRoaXMgbmV3IEVuZ2xhbmQgd2FzIG5vdyBiZWluZyBmdWxseSB0ZXN0ZWQuIEdlcnJhcmQgYW5kIFBhcmtlciB3ZXJlIHdvcmtpbmcgYW5vdGhlciBkb3VibGUgc2hpZnQgYWdhaW5zdCBhIG1vYmlsZSBhbmQgZGVuc2VyIEl0YWxpYW4gbWlkZmllbGQuIApTaGUgc2FpZCBDYXJ2aXMgIkRvbmtleSIgV2ViYiBhbmQgSGF0Y2ggd29ya2VkIG9uIExvdWRpbmcgdG8gZ2V0IGhpbSB0byB0ZWxsIHRoZSAidHJ1dGguIiBBY2NvcmRpbmcgdG8gQ3VtbWluZ3MsIGR1cmluZyBwaG9uZSBjYWxscyB0byBMb3VkaW5nLCBXZWJiIHRvbGQgaGltLCAiRm9sbG93IG15IGxlYWQgYW5kIHlvdSBjb21pbmcgaG9tZSBNYXJsby4iLiAKU28gbm8sIEkgYW0gbm90IGFnYWluc3QgZGF0YSBtaW5pbmcgYmVjYXVzZSBJIGFtIHNvbWUgcGFyYW5vaWQgbnV0IHdobyB3YW50cyB0byBsaXZlIG91dCBzb21lIHNlY3JldGl2ZSBsaWZlc3R5bGUgYXdheSBmcm9tIHNvY2lldHkuIApUaGUgbGF0ZXN0IHBvbGwgYnkgdGhlIFN1bmRheSBUaW1lcyBwdXRzIFVLSVAgb24gMzEsIENvbnNlcnZhdGl2ZXMgMTksIExhYm91ciAyOCwgTGliIERlbXMgOSwgR3JlZW5zIDgsIHdpdGggT3RoZXIgb24gNSwgc28gbGV0J3MgYXNzdW1lIHRoYXQgdGhpcyBpcyBob3cgcGVvcGxlIHdvdWxkIHdhbnQgdG8gdm90ZSBpbiBFYXN0IE1pZGxhbmRzIHdpdGggaXRzIGZpdmUgTUVQcy4gClByZWRpY3RpbmcgaG93IGEgcGVyc29uIHdpbGwgcmVzcG9uZCBjYW4gYmUgdmVyeSB1c2VmdWwsIGZvciBpbnN0YW5jZSB3aGVuIGRlc2lnbmluZyBhIHN0cmF0ZWd5IGZvciBuZWdvdGlhdGlvbnMuV2UgaW52ZXN0aWdhdGUgd2hldGhlciBpdCBpcyBwb3NzaWJsZSBmb3IgbWFjaGluZSBsZWFybmluZyBhbmQgY29tcHV0ZXIgdmlzaW9uIHRlY2huaXF1ZXMgdG8gcmVjb2duaXplIGEgcGVyc29uIFRNcyBpbnRlbnRpb25zIGFuZCBwcmVkaWN0IHRoZWlyIGFjdGlvbnMgYmFzZWQgb24gdGhlaXIgdmlzdWFsbHkgZXhwcmVzc2l2ZSBiZWhhdmlvdXIsIHdoZXJlIGluIHRoaXMgcGFwZXIgd2UgZm9jdXMgb24gdGhlIGZhY2UuIFdlIGhhdmUgY2hvc2VuIGFzIG91ciBzZXR0aW5nIHBhaXJzIG9mIGh1bWFucyBwbGF5aW5nIGEgc2ltcGxpZmllZCB2ZXJzaW9uIG9mIHBva2VyLCB3aGVyZSB0aGUgcGxheWVycyBhcmUgYmVoYXZpbmcgbmF0dXJhbGx5IGFuZCBzcG9udGFuZW91c2x5LCBhbGJlaXQgbWVkaWF0ZWQgdGhyb3VnaCBhIGNvbXB1dGVyIGNvbm5lY3Rpb24uSW4gcGFydGljdWxhciwgd2UgYXNrIGlmIHdlIGNhbiBhdXRvbWF0aWNhbGx5IHByZWRpY3Qgd2hldGhlciBhIHBsYXllciBpcyBnb2luZyB0byBmb2xkIG9yIG5vdC4gV2UgYWxzbyB0cnkgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbiBvZiBhdCB3aGF0IHRpbWUgcG9pbnQgdGhlIHNpZ25hbCBmb3IgcHJlZGljdGluZyBpZiBhIHBsYXllciB3aWxsIGZvbGQgaXMgc3Ryb25nZXN0LiAKMTAgbWludXRlcyBiZWZvcmUgdGhlIGFsYXJtIGdvZXMgb2ZmIHRvIHdha2UgdXAgbXkgd2lmZS4gSSBwZXJmb3JtIHNvbWUgc29ydCBvZiBzcGFjZWQgcmVwZXRpdGlvbiBiZWZvcmUgSSBldmVuIGdldCBvdXQgb2YgYmVkLiAKUktGaXJlIHUKV2hvc2UgaW5mbHVlbmNlIGluIGhpcyBjb21tdW5pdHkgYW5kIG5laWdoYm9yaW5nIGRpc3RyaWN0cyBpcyBzZXJpb3VzbHkgZmVsdC4gCk9uIHRoaXMgYW5kIHN1YnNlcXVlbnQgYmV0dGluZyByb3VuZHMsIHRoZSBwbGF5ZXIgdG8gYWN0IGZpcnN0IG1heSBjaGVjayBvciBiZXQgdXAgdG8gdGhlIGdhbWUncyBsaW1pdC4gCkdyYW50ZWQsIHNpbmNlIHRoZSBiZWdpbm5pbmcgd2UndmUgYWRkZWQgYSBuZXcgdGFibGUsIGFub3RoZXIgcG9rZXIgY2hpcCBzZXQsIGN1cCBob2xkZXJzIGFuZCBzb21lIG90aGVyIGFjY2Vzc29yaWVzLCBidXQgd2hlbiB5b3UgYWN0dWFsbHkgcGxheSB0aGVzZSBwb2tlciBjaGlwcyB5b3UgZmVlbCB0aGF0IHRoZSBnYW1lIGlzIGEgbGl0dGxlIG1vcmUgc2VyaW91cy4uIApNb3N0IG9yZ2FuaXphdGlvbnMgdGhhdCBvZmZlciB0aGVtIGNvbnNpZGVyIHRoZW0gYW4gaW52ZXN0bWVudCByYXRoZXIgdGhhbiBhIGdpZnQuIApUaGVtLCB0aGUgd29ya2luZyBjbGFzc2VzIHZzLiAKU3BvcnRzIFZpZXcgU2VjdGlvbiA+UHJlcHMgT3V0ZG9vcnNUaGUgYmVsb3ZlZCBXaWxkd29vZCBTY2hvb2wgaXMgYW4gZW52aXJvbm1lbnRhbCBwcmVzY2hvb2wgbmVzdGxlZCBpbiB0aGUgd29vZHMgYSBmZXcgbWlsZXMgZnJvbSB0b3duIHVwIEluZGVwZW5kZW5jZSBQYXNzLiBUaGUgc2Nob29sJ3MgZW52aXJvbm1lbnRhbCBhcnRzIGN1cnJpY3VsdW0gY291cGxlZCB3aXRoIGEgd29uZHJvdXMgbW91bnRhaW4gc2V0dGluZyBhbWlkc3QgYmVhdmVyIHBvbmRzLCBuYXR1cmUgdHJhaWxzIGFuZCBmb3Jlc3RzIG9mIHBpbmUgYW5kIHdpbGxvd3MsIGVuY291cmFnZXMgY2hpbGRyZW4gdG8gZXhwbG9yZSBhbmQgZXhwZXJpZW5jZSBuYXR1cmUgYW5kIGFuaW1hbHMgcmlnaHQgYXQgdGhlaXIgZG9vcnN0ZXAuIEZvciBtb3JlIHRoYW4gNDAgeWVhcnMsIHRoZSBXaWxkd29vZCAiZmFtaWx5IiBoYXMgYmVlbiBncm93aW5nIHN0cm9uZyB3aXRoIG1hbnkgb2YgaXRzIGVhcmx5IGdyYWR1YXRlcyBub3cgcGFyZW50cyBvZiB5b3VuZyBXaWxkd29vZGVycy4KQXMgb25saW5lIHBva2VyIGFjdGlvbiBoYXBwZW5zIHZlcnkgcXVpY2ssIG1vc3QgcGxheWVycyB1c2luZyBhIGtpbmQgb2Ygc2hvcnQgaGFuZCB0byBzcGVlZCB0aGluZ3MgdXAuIApUaGlzIGhhcHBlbnMgYWxsIHRoZSB0aW1lIGJldHdlZW4gcmVsZWFzZXMgb2Ygb2ZmaWNlIHN1aXRlIHNvZnR3YXJlLiBNb3ZpbmcgZnJvbSB2ZXJzaW9uIFggdG8gWSBjYW4gYmUgYSBodWdlIG1pZ3JhdGlvbiBlZmZvcnQgYXQgYSBsYXJnZSBjb21wYW55LiBHaXZpbmcgdXAgY29udHJvbCBvZiBob3cgYW5kIHdoZW4gdG8gZG8gdGhhdCBtaWdyYXRpb24gaXMgdGVycmlmeWluZyB0byB0aGUgZW50ZXJwcmlzZSBjdXN0b21lciAgIGFuZCBmb3IgdmVyeSBnb29kIHJlYXNvbi4uIApIdXJ0bGV5IHNoYXJlcyB0aGlzIGZvcm11bGEgZnJvbSBkZXNpZ24gc2Nob29sIHRvIGhlbHAgeW91IG1peCBwYXR0ZXJucyB3aXRoIHN1Y2Nlc3M6IGEgcmFuZG9tIG1vdGlmIGZpcnN0IGFzIHlvdXIgRE5BIHBhdHRlcm4uIApTd2VldCBiYWJ5IEplc3VzIHRoaXMgaXMgaW1wcmVzc2l2ZSwgZ29vZCBmb3IgeW91IG1hbiEgSSBzZWUgYSBsb3Qgb2Ygc2ltaWxhcml0aWVzIHRvIG15c2VsZiBpbiB5b3VyIHBvc3QsIEkgZ3JhZHVhdGVkIHdpdGggYW4gYWNjb3VudGluZyBkZWdyZWUgYXQgMjIgd2l0aCBubyBzdHVkZW50IGRlYnQgYW5kIHN0YXJ0ZWQgb3V0IG1ha2luZyAkNTVrL3llYXIuIEknbSAyNyBtYWtpbmcgJDEwMWsgcmlnaHQgbm93IGFuZCBkb24ndCBoYXZlIGFueXdoZXJlIG5lYXIgeW91ciBuZXQgd29ydGggYnV0IEkgd2FzIHByZXR0eSBsYXp5IGFib3V0IHNhdmluZyB1bnRpbCBsYXN0IHllYXIuIApGaW9uYVdobyAgMjYgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkZpbmFsbHksIGdpdmUgeW91cnNlbGYgYSBuYWlsIHRyZWF0bWVudCB0byByZWp1dmVudGF0ZSB5b3VyIG5haWxzLiBNYXNzYWdlIG9saXZlIG9pbCBvciBoZWF2eSBoYW5kIGNyZWFtIGludG8geW91ciBuYWlscyBhbmQgbmFpbCBiZWRzLCBhcyBhY2V0b25lIGlzIGV4dHJlbWVseSBkcnlpbmcuIApOb3csIHRha2UsIGZvciBleGFtcGxlLCB0aGluZ3MgdGhhdCBhcmUgdHJpdmlhbCBhbmQgdmFsdWVsZXNzLiBJIGhhdmUgbm8gcHJvYmxlbSBnb2luZyBvdXQgYW5kIHJlbnRpbmcgYSBtb3ZpZS4gSSBhY3R1YWxseSBsb29rIGZvcndhcmQgdG8gaXQuIEkgaGF2ZSBubyBwcm9ibGVtIHBsYXlpbmcgdmlkZW8gZ2FtZXMuIFNvbWV0aW1lcywgSSBjYW4ndCB3YWl0IGZvciB0aGUgbmV4dCB0aW1lIHRvIHBsYXkuIEkgaGF2ZSBubyBwcm9ibGVtIHNpdHRpbmcgYXJvdW5kIGFuZCBiZWluZyBsYXp5IGFuZCB0YWtpbmcgYSBuYXAuIEkgaGF2ZSBubyBwcm9ibGVtIHdhc3RpbmcgaG91cnMgYXQgd29yayBzdXJmaW5nIHRoZSBpbnRlcm5ldCBhYm91dCB0aGluZ3MgdGhhdCBoYXZlIG5vIHZhbHVlIGV4Y2VwdCBtYXliZSByYXJlbHkgb24gSmVvcGFyZHkuIEkgY2FuIEJTIHdpdGgganVzdCBhYm91dCBhbnlib2R5IGFib3V0IGdvc3NpcCBmb3IgaG91cnMgb24gZW5kLiBBbGwgdGhlc2UgdGhpbmdzIHRoYXQgSSBoYXZlIG5vIHByb2JsZW0gZG9pbmcsIG5vbmUgb2YgdGhlbSB3aWxsIHB1dCBmb29kIG9uIHRoZSB0YWJsZSBub3IgcGF5IHRoZSBiaWxscyB3aGVuIHRoZXkncmUgZHVlLiBBbnl0aGluZyB0aGF0IGRvZXMgcG91ciBpbiB0aGUgY2FzaCBhbmQgc3R1ZmYgbXkgd2FsbGV0LCBJIGdldCB0aGlzIGZlZWxpbmcgb2YgIldoYXQgYSBwYWluIi4gRXZlbiBhdCBteSBqb2IsIEkgY291bGQgZXhjZWwgdG8gZ2V0IHByb21vdGlvbnMsIGJ1dCAiV2hhdCBhIHBhaW4iLiBJIGp1c3QgZG9uJ3QgZ2V0IGl0ISEhIFdoYXQgaXMgbXkgZGVhbD8/PwpZb3UgcmVwZWF0ZWRseSBjbGFpbWVkIGhlIG93ZXMgaGlzIGZhbnMgZXZlcnl0aGluZy4gV2hpY2ggaXMgc3VjaCBhIGJhY2t3YXJkcyB3YXkgb2YgdGhpbmtpbmcuIFlvdSB0aGlua2luZyBoZSBvd2VzIHlvdSB0aGUgZmFuIGFueXRoaW5nIGlzIG5hcmNpc3Npc3RpYyBiZWhhdmlvdXIuIApIZSBsb3NlcyBoaXMgY29vbCBhbmQgaXMgZGVzcGVyYXRlIHRvIG1ha2UgYSBjb21lYmFjaywgY29udmluY2VkIHRoYXQgdGhlIG5leHQgaGFuZCB3aWxsIGJlIFRIRSBoYW5kIHRvIG1ha2UgaGltLiAKQmVuZWRpY3QsIHdobyBiZWNhbWUgdGhlIGZpcnN0IHBvcGUgaW4gNjAwIHllYXJzIHRvIHJldGlyZSB3aGVuIGhlIHN0ZXBwZWQgZG93biBpbiBGZWJydWFyeSwgaGFkIHNhaWQgaGUgd291bGQgc3BlbmQgaGlzIGZpbmFsIGRheXMgImhpZGRlbiBmcm9tIHRoZSB3b3JsZCIgaW4gdGhlIFZhdGljYW4gbW9uYXN0ZXJ5LgpLbWVudG90aGF0ICAxMyBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KV2UgYWxzbyBnYXRoZXIgYW5kIGVhdCB3aWxkIHBsYW50cy4gCk5ldyB3aWRvdyB3YW50cyB0byBlc3RhYmxpc2ggY3JlZGl0IGluIGhlciBvd24gbmFtZTogTW9uZXkgTWF0dGVycyBOZXcgd2lkb3cgd2FudHMgdG8gZXN0YWJsaXNoIGNyZWRpdCBpbiBoZXIgb3duIG5hbWU6IE1vbmV5IE1hdHRlcnMgTXkgaHVzYmFuZCBwYXNzZWQgaW4gQXByaWwgMjAxOC4gQ3VycmVudGx5LCBteSBjcmVkaXQgc2NvcmUgaXMgZ29vZCBhbmQgaXMgaW4gYm90aCBvdXIgbmFtZXMuIAoiV2UgaGFkIGEgVFRDIHZlaGljbGUgdGhhdCBwYXNzZWQgb3ZlciB0aGF0IHZvaWQgYW5kIHRoZSBmcm9udCB3aGVlbCBnb3Qgc3R1Y2suIApGcmFua2xpbiBNYXJzaGFsbCBDb2xsZWdlCk90aGVycyBoYXZlIG1lbnRpb25lZCBncmVhdCBpZGVhcywgYW5kIEkgd2FudGVkIHRvIHRocm93IGluIHRoZSB0cmVhZG1pbGwuIFlvdSB3aWxsIG5lZWQgdG8gcG9zaXRpdmVseSByZWluZm9yY2UgdGhlIHdob2xlIGdldHRpbmcgb24gYW5kIG9mZiwgdGhlbiBzcGVlZCBjaGFuZ2VzLiBJIHdvdWxkIG5vdCBydW4geW91ciBkb2cgb24gdGhlIHRyZWFkbWlsbCwgYnV0IHdhbGtpbmcsIHN1cGVydmlzZWQsIGlzIGdyZWF0IHBoeXNpY2FsIGFuZCBtZW50YWwgc3RpbXVsYXRpb24gKHRoZXkgaGF2ZSB0byBjb25jZW50cmF0ZSBvbiBwYWNlKS4gCkhlcmtlc2luIGtlbmRpbmkgYmVnZW5kaWdpIGRvZ3J1LiAKVGhlIGVtYWlsIHNheXM6IFdvb2RzIGlzIG5vdyBzdGF5aW5nIGluIGdvbGYgbGVnZW5kIEFybm9sZCBQYWxtZXIncyB1cHNjYWxlIGdvbGYgY29tbXVuaXR5LCBCYXkgSGlsbCwgaW4gT3JsYW5kby4gQXBwYXJlbnRseSwgV29vZHMnIHNwb3J0cyBhZ2VuY3kgaW1wbG9yZWQgUGFsbWVyIHRvIGNvYWNoIGhpbSB0aHJvdWdoIHRoaXMgdG91Z2ggdGltZTsgUGFsbWVyIGlzIHNlZW4gYXMgcG9zc2libHkgdGhlIG9ubHkgcGVyc29uIHdobyBjYW4gZ2V0IHRocm91Z2ggdG8gVGlnZXIuCkkgZGlzYWdyZWUgd2l0aCB3aGF0IHlvdSBzYXkgYWJvdXQgaGltIG5vdCBzaG93aW5nIGFueSBncmVhdCB0YWxlbnQgb3Igc2tpbGwuIHlvdSBoYXZlIHRvIHJlbWVtYmVyIGxpdGVyYWxseSBldmVyeSBjaGFyYWN0ZXIgaW4gdGhlIG1vdmllIGJlc2lkZXMgaGltIGFuZCBtYXJpYSBhcmUgbm90IGh1bWFuIGFuZCBXQVkgc3Ryb25nZXIgdGhhbiB0aGV5IGFyZS4gdGhlcmUgc2ltcGx5IHdhc24gYSBjaGFuY2UgZm9yIGhpbSB0byAic2hvdyIgYW55dGhpbmcsIGhlIGhlbGQgaGlzIG93biBmb3IgYSBsaXR0bGUgd2hpbGUgYWdhaW5zdCB0YWxvcyB3aGlsZSB0aGV5IGZvdWdodCBpbiB0aGUgcmVjb3JkcyBhcmVhIGJ1dCBoZSBpcyBzaW1wbHkgb3V0bWF0Y2hlZCBieSBldmVyeW9uZSBlbHNlIGluIHRoZSBtb3ZpZS4KV2hlbiBJIHdhcyBhdCBtb2Igc2l0ZSB3ZSBzYXQgaW4gdGhlIGJhcnJhY2tzIHdhdGNoaW5nIHRoZSBzdGFydCBvZiB0aGUgYm9tYmluZyBvZiBCYWdoZGFkIG9uIHRlbGV2aXNpb24uIApFYWRpbmd0b24sIFcuIDE5OTIsIFJlY2VudCBOYXRpb25hbCBUcmVuZHMgaW4gdGhlIENhc2lubyBHYW1pbmdJbmR1c3RyeSBhbmQgdGhlaXIgaW1wbGljYXRpb25zIGZvciB0aGUgRWNvbm9teSBvZiBOZXZhZGEgKFJlbm86VW5pdmVyc2l0eSBvZiBOZXZhZGEpLgpBIHNlYXJjaCBvZiBTbWl0aCdzIGhvbWUgaW4gUm90aGVyaGl0aGUgdW5jb3ZlcmVkIGEgYmxhbmsgZmlyaW5nIHNlbGYgbG9hZGluZyBwaXN0b2wsIGEgQkIgZ3VuLCBib3RoIGJvdWdodCBsZWdhbGx5LCBhcyB3ZWxsIGFzIGEga251Y2tsZWR1c3RlciBhbmQgYSBrbmlmZSB3aGljaCBoZSBzaG93ZWQgb2ZmIGluIGFuIG9ubGluZSB2aWRlby4KVG8gbWUgaXQgaXMgbGlrZSBsZWFybmluZyBzb21lb25lcyBuYW1lIGJ5IHVzaW5nIGEgdHJpZ2dlciAgIHlvdSBtZWV0IGEgd29tYW4gbmFtZWQgU3VzYW4gd2hvIGhhcyBhIHNtaWxlIGFzIGJyaWdodCBhcyB0aGUgc3VuLiAKTGEgUG9ydGUgZGUgbCdFbmZlciBwYXIgUm9kaW4gZXN0IHVuZSBwZW5zZSBzYWlzaXNzYW50ZSBxdWkgZGFuc2UgbWFsZ3IgdG91dC4gCjI4LCAxOTk5ICAgYWZ0ZXIgdGhlIHByb3BlcnRpZXMgd2VyZSBzZWl6ZWQgYnkgcG9saWNlICAgYW5kIHN0b2xlIGFwcGxpYW5jZXMsIHRvaWxldHMsIGNhYmluZXRzIGFuZCBvdGhlciBpdGVtcyBmcm9tIHRoZSBidWlsZGluZywgY291cnQgcmVjb3JkcyBzYXkuV2hpdGxvdyBldmVudHVhbGx5IHBsZWFkZWQgZ3VpbHR5IHRvIGJyZWFraW5nIGFuZCBlbnRlcmluZyBhbmQgd2FzIHNlbnRlbmNlZCB0byBvbmUgeWVhciBpbiBwcmlzb24uIEhlIHdhcyBhbHNvIGZvcmNlZCB0byBmb3JmZWl0ICQxMSwwMDAuRmVkZXJhbCBhZ2VudHMgYnJvdWdodCBhIHNlcGFyYXRlIGNhc2UgYWdhaW5zdCBXaGl0bG93IGluIDE5OTkgZm9yIGNvY2FpbmUgZGVhbGluZy4gCkFuZCBvbiB0b3Agb2YgYWxsIG9mIHRoaXM6IGFwcGx5IGZvciBwcml2YXRlIHNjaG9sYXJzaGlwcyBvbmxpbmUuIFRoZXkgZmFpcmx5IGVhc3kgdG8gYXBwbHkgdG8gb25jZSB5b3UgZ2V0IGluIHRoZSByaHl0aG0uIEl0IHRha2VzIGEgbG90IG9mIHdvcmsgYW5kIHRpbWUgYnV0IHRoZSBzbWFsbGVyIG9uZXMgZG8gYWRkIHVwIG92ZXIgdGltZSB0byBzdWJzaWRpemUgY29zdHMuIApUaGUgWmFncyAoNiAwKSBzdGF0ZWQgdGhlaXIgY2FzZSBmb3IgTm8uIDEgd2hlbiB0aGUgbmV4dCBBUCBwb2xsIGlzIHJlbGVhc2VkIG9uIE1vbmRheS4gRHVrZSAoNSAxKSByZWFjaGVkIE5vLiAxIGFmdGVyIGRlc3Ryb3lpbmcgc2Vjb25kIHJhbmtlZCBLZW50dWNreSBieSAzNCBwb2ludHMgaW4gdGhlIHNlYXNvbiBvcGVuZXIuCkkgd2FzIG9uIGEgZmFtaWx5IHZhY2F0aW9uIHRvIEF0bGFudGEsIGFib3V0IDE5NzIuIApZb3UgZG8gbm90LCBob3dldmVyLCBuZWVkIHRvIGJlY29tZSBhIHJhY2Ugd2Fsa2VyIHRvIGFjaGlldmUgZml0bmVzcyB0aHJvdWdoIHdhbGtpbmcuIApMaWZlIGlzIGFuIGFkdmVudHVyZS4gSXQgaXMgd2hhdCB3ZSBtYWtlIGl0IHNvIEkgYW0gZ29ubmEgcHV0IG15c2VsZiBpbiBBbGljZSBzaG9lcyBhbmQgZ2V0IHRoYXQgbWVzc2FnZSB0byB5b3UuIEkgZG9uIGtub3cgaWYgSSB3aWxsIHBvc3QgaXQgYWxsIGRhaWx5LCBidXQgSSB3aWxsIHdyaXRlIGl0IGRhaWx5LgpMdWNhbiBXYXkgYW5kIEFkYW0gQ2FzZXksIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFRvcm9udG8sIGFyZ3VlIHRoYXQgZm9ybWVyIFNvdmlldCBzdGF0ZXMgZGVtb2NyYXRpc2VkIGJldHRlciB3aGVuIHRoZXkgaGFkIGEgZGVlcCByb290ZWQgbmF0aW9uYWxpc3QgbW92ZW1lbnQuIApXaGljaCBtZWFucyB5b3Ugc3RvcmUgZXZlcnl0aGluZyB5b3UgZWF0IGZvciB0aGF0IHBlcmlvZCBvZiB0aW1lLiAKSXQgaXMgYSB0eXBpY2FsIHNob3Bob3VzZSB1bml0LiBZb3UgZW50ZXIgYXQgdGhlIGdyb3VuZCBmbG9vciwgd2l0aCB0aGUgcmVjZXB0aW9uaXN0IGRlc2sgaW1tZWRpYXRlbHkgdG8geW91ciByaWdodC4gCkkgc3RhcnRlZCBmb2N1c2luZyBvbiBteSBJVCBjYXJlZXIgYWZ0ZXIgdGhhdCBhbmQgaGF2ZW4ndCBwbGF5ZWQgYXMgcmVndWxhciBzaW5jZS4uIApUaGlzIGNhbiBiZSBhIGdyZWF0IHJlbGllZiBmb3IgYSB0cmFpbmluZyByb3V0aW5lIHRoYXQgcHV0cyBzdHJhaW4gb24gcGFydGljdWxhciBzcG90cyBpbiB5b3VyIGJvZHkuLiAKQnV0IHNvb24gdGhlIHdob2xlIHdvcmxkIHdpbGwgYmUgYWJsZSB0byB3YXRjaCBEcmV3J3MgdGFsZW50IGFuZCBmaWVyY2UgY29tcGV0aXRpdmVuZXNzIGluIHRoZSBoYWxmcGlwZSwgd2hpY2ggc2hlIGRpZG4ndCBwaWNrIHVwIHVudGlsIGp1bmlvciBoaWdoLCBhbHRob3VnaCBzaGUgaGFzIGJlZW4gc2tpaW5nIHNpbmNlIHNoZSB3YXMgMyB5ZWFycyBvbGQuIERyZXcsIGluIGZhY3QsIGdyZXcgdXAgYSBjb21wZXRpdGl2ZSBmaWd1cmUgc2thdGVyLCBwcmFjdGljaW5nIGZvdXIgdG8gZml2ZSBkYXlzIGEgd2VlayBmb3IgaG91cnMgZWFjaCBzZXNzaW9uLgpEeWluZyBMaWdodCBVcGRhdGUgdjEuNC4wIC4gQkVUQSBWMS40LjAgTVVMVGk5IE9ORSBGVFAgTElOSyBUT1JSRU5ULiBEeWluZyBMaWdodCBpcyBhbiBhY3Rpb24gc3Vydml2YWwgZ2FtZSBwcmVzZW50ZWQgaW4gZmlyc3QgcGVyc29uIHBlcnNwZWN0aXZlLiBUaGUgZ2FtZSBpcyBzZXQgaW4gYSB2YXN0LiAxIEp1bCAyMDE4IC4gTGF0ZXN0IE5ld3NbMSBKdWxdOiBBZGRlZCBBIEZ1bGx5IFVwZGF0ZWQgU3RhbmRhbG9uZSBbVjEuMTYuMF0gSW5jbC4gQWxsIFVwZGF0ZXMgYW5kIE5ldyBTdGVhbXdvcmtzIEZpeCBSZWxlYXNlIERhdGU6IEZlYnJ1YXJ5IDksIDIwMTYuIApJIHJlYWxseSBhcHByZWNpYXRpdmUgb2YgRGlzbmV5IGdvaW5nIHRvIGFsbCB0aGUgZWZmb3J0IHRvIHVuZGVyc3RhbmQsIGVuZ2FnZSwgY29uc3VsdCBhbmQgZGV2ZWxvcCB0aGVpciBNb2FuYSBzdG9yeSB3aXRoIHRoZSBoZWxwIG9mIGN1bHR1cmUgYWR2aXNvcnMuIEkgYWxzbyByZWFsbHkgaG9wZSB0aGV5IGtlZXAgdG8gdGhhdCBhbmQgY29udGludWUgdG8gZXhwbG9yZSBhIGxvdCBtb3JlIGxlc3Mgd2VsbCBrbm93biBjdWx0dXJlcyBhbmQgc3RvcmllcywgYXMgSSBsb3ZlZCBzZWVpbmcgbm9uIFBhY2lmaWMgcGVvcGxlIGV4Y2l0ZWQsIGludGVyZXN0ZWQgYW5kIGVuam95aW5nIE1vYW5hIHBvcnRyYXlhbCBvZiB0aGUgUGFjaWZpYy4gQW5kIEkgbG92ZSBmZWVsaW5nIHRoYXQgd2F5IGFib3V0IG90aGVyIGN1bHR1cmVzLiAKSW4gYSBwcmVhbWJsZSwgU2lzc29uIG9mZmVycyBhIGJhc2ljIGJ1dCBzdGlsbCBlbmdhZ2luZyBwcmltZXIgb24gdGhlIGdyb3dpbmcgZmllbGQgb2YgZXBpZ2VuZXRpY3MuIApGcmFuY2lzIGlzIGNsZWFybHkgYSBmYW4gb2YgYm90aDogT24gdGhlIGFubml2ZXJzYXJ5IG9mIEpvaG4gUGF1bCdzIGRlYXRoIHRoaXMgeWVhciwgRnJhbmNpcyBwcmF5ZWQgYXQgdGhlIHRvbWJzIG9mIGJvdGggbWVuICAgYW4gaW5kaWNhdGlvbiB0aGF0IGhlIHNlZXMgYSBncmVhdCBwZXJzb25hbCBhbmQgc3Bpcml0dWFsIGNvbnRpbnVpdHkgaW4gdGhlbS4uIApUaGUgcGVyc29uIHRoZW4gc2V0cyB1cCB0aGUgc2NlbmUuLiAKSXQgbWFkZSBmcm9tIHNoYXJrcyB3aGljaCB1c3VhbGx5IGFyZSBub3QgZWRpYmxlLiBJSVJDIHRoYXQgYmVjYXVzZSB0aGV5IGxhY2sga2lkbmV5cyBibGFkZGVycywgc28gYWxsIHRoZSBuYXN0eSBzdHVmZiBhY2N1bXVsYXRlcyBpbnN0ZWFkIG9mIGdldHRpbmcgZmx1c2hlZCBvdXQuIERvIHlvdXIgb3duIHJlc2VhcmNoIHRob3VnaCwgaWYgeW91IHdhbnQgdG8ga25vdyBmb3Igc3VyZS4KSSBrbm93IHlvdSBkb24gc2VlIGl0IHRoYXQgd2F5LCBidXQgc2luY2UgeW91IGZlZWwgY29uZmlkZW50IGVub3VnaCB0byB3cml0ZSBhIGJsb2cgb24gY2xhc3MgcGVyaGFwcyB5b3UgY2FuIHRyeSB0byB0cmFkZSBoYXRzIGJyaWVmbHkuIApKYW1iZWFycyB1ClRoZSBjaGF0dHkgY29tbW9kZSBhbHNvIGhhcyBhIHZlbnQgaW4gdGhlIGZyb250IHRvIGJsb3cgd2FybSBhaXIgYXQgeW91ciBmZWV0LiBVc2luZyBvbmx5IHlvdXIgdm9pY2UsIHlvdSBjYW4gc3RhcnQgdXAgeW91ciBzaG93ZXIsIGhhdmUgdGhlIHdhdGVyIGhlYXRlZCB0byB5b3VyIGZhdm9yZWQgdGVtcGVyYXR1cmUgYW5kIGV2ZW4gc2V0IGEgdGltZXIgc28geW91IGRvbid0IGJhdGhlIGZvciB0b28gbG9uZy4KWW91ciBhdmVyYWdlIGxvc3MgaXMgMi43YmIgaW4gdGhpcyBzcG90ICh5b3Ugd2lsbCB3aW4gLjM1MTggY2hpcCBwb3QgPSA2LjMgY2hpcHMgaW4gdGhlIGFsbCBpbiBvbiBhdmVyYWdlLCBhbmQgeW91IHN0YXJ0ZWQgd2l0aCA5KS4gIDIuNy4xNSBpcyBhYm91dCAgLjQuIApTdGlsZXR0byBoZWVscywgb3IgYW55IG90aGVyIGhlZWwgdGhhdCBpcyBoaWdoZXIgdGhhbiB0aHJlZSBpbmNoZXMsIHJlZGlzdHJpYnV0ZXMgeW91ciBib2R5IHdlaWdodCBzbyB0aGF0IDkwIHBlcmNlbnQgb2YgaXQgaXMgb24gdGhlIGZyb250IG9mIHlvdXIgZmVldC4gVGhpcyBleHRyYW9yZGluYXJ5IHByZXNzdXJlIGNhbiBjcmVhdGUgY2FsbHVzZXMgb24gdGhlIGJhbGwgb2YgdGhlIGZvb3QgYW5kIGluY3JlYXNlIHRoZSBwYWluIG9mIGJ1bmlvbnMsIGhhbW1lcnRvZXMsIGFuZCBjb3Jucy4gSXQgYWxzbyBzdHJhaW5zIHRoZSBtdXNjbGVzIGFuZCB0ZW5kb25zIGluIHRoZSBhcmNoIG9mIHRoZSBmb290LiAKSW4gdGhlIFBhY2lmaWMgdGhlYXRlciwgdGhlIEJhdHRsZSBvZiBNaWR3YXkgaW4gMTk0MiBwcmV0dHkgbXVjaCBsb3N0IGl0IGZvciB0aGUgSmFwYW5lc2UsIGFzIHRoZXkgbG9zdCA0IGltcG9ydGFudCBhaXJjcmFmdCBjYXJyaWVyLCBhbmQgbWFueSBjcnVpc2VyLCBkZXN0cm95ZXJzLCBhbmQgaHVuZHJlZHMgb2Ygd2FycGxhbmVzLiBUaGV5IGFsc28gbG9zdCB0aGVpciBjb2NreSBjb25maWRlbmNlIHRoZW4uIEl0IHdhcyBjbGVhciB0byB0aGUgQWxsaWVzIHRoYXQgc29tZW9uZSBoYWQgYmVlbiBtYWtpbmcgaG9ycmlibGUgbWlsaXRhcnkgZGVjaXNpb25zIGZvciBHZXJtYW55LCByZXN1bHRpbmcgaW4gdGhlIEdlcm1hbnMgYmVpbmcgdW5wcmVwYXJlZCBmb3IgdGhhdCBpbnZhc2lvbi4gCkNvZGUgZW5mb3JjZW1lbnQgY2FuIGNhdXNlIGJ1c2luZXNzZXMgdG8gc2h1dCBkb3duIHRocm91Z2ggc2V2ZXJhbCBwYXRoczogVGhlIG93bmVyJ3MgbGljZW5zZSBpcyByZXZva2VkLCB0aGUgbnVtYmVyIG9mIHZpb2xhdGlvbnMgYWRkIHVwIGFuZCB0aGUgb3BlcmF0aW9uIGNhbiBzdWNjZXNzZnVsbHkgYmUgY2xvc2VkIGRvd24gYXMgYSBudWlzYW5jZSwgb3IgdGhlIHZpb2xhdGlvbnMgYXJlIHVzZWQgYXMgZXZpZGVuY2UgaW4gYSBjcmltaW5hbCBjYXNlLiBQbHVzLCB0aGUgb3duZXIgbWF5IGRlY2lkZSB0byBjbG9zZSB1cCBzaG9wIHdoZW4gZmFjaW5nIGZpbmVzLgpUaGUgUlNMIHN0YXRlZCB0aGF0IHRoZXkgd291bGQgcnVuIHRoZSBjbHViIGZvciBhIG1pbmltdW0gb2YgZml2ZSB5ZWFycyB0byBzaG93IHRoYXQgdGhlIHB1cmNoYXNlIHdhcyBnZW51aW5lOyBhbmQsCkkgdGhpbmsgaGUgY2FuJ3Qga2ljayB5b3Ugb3V0IG92ZXIgdGhpcy4gSGUgaGFzIGFscmVhZHkgYmVlbiBlbmpveWluZyByZW50YWwgaW5jb21lIGZyb20geW91ciB0ZW5hbmN5LCBJIGRvbid0IHRoaW5rIGhlIGNhbiBqdXN0IHJlZnVzZSB0byBtYWludGFpbiB0aGUgYXBhcnRtZW50IGFuZCBraWNrIHlvdSBvdXQuLiAKQnV0IGFjY29yZGluZyB0byAsIGEgZ292ZXJubWVudCBib2R5LCB0aGUgcGVyY2VudGFnZSBvZiBTb3V0aCBLb3JlYW5zIGlkZW50aWZ5aW5nIGFzIGhhdmluZyBubyByZWxpZ2lvbiByb3NlIGZyb20gNDcgcGVyY2VudCBpbiAyMDA1IHRvIDU2IHBlcmNlbnQgaW4gMjAxNS4gVGhpcyBmYWxsaW5nIHJlbGlnaW9zaXR5IGlzIGVzcGVjaWFsbHkgcHJvbm91bmNlZCBhbW9uZyB5b3VuZyBhZHVsdHM6IGEgcG9sbCB0aGUgc2FtZSB5ZWFyIGJ5IEdhbGx1cCBLb3JlYSBmb3VuZCAzMSBwZXJjZW50IG9mIFNvdXRoIEtvcmVhbnMgaW4gdGhlaXIgMjBzIGlkZW50aWZ5aW5nIGFzIHJlbGlnaW91cywgZG93biBmcm9tIDQ2IHBlcmNlbnQgMTAgeWVhcnMgZWFybGllci4gCkFsc28gSSBoYXZlIHZvdGVkIFJlcHVibGljYW4gbW9zdGx5IGJlY2F1c2UgdGhlcmUgYXJlIGEgZmV3IHRoaW5ncyBJIGRvbnQgYWdyZWUgd2l0aCBhYm9ydGlvbiBsaW1pdCBhdCAyNCB3ZWVrcyBJIGZpbmQgdG8gbGF0ZSBpbiBhIHByZWduYW5jeSwgZ3VuIGNvbnRyb2wgbGF3cyB0aGF0IHBlb3BsZSB3YW50IHRvIGltcGxlbWVudCwgYW5kIGltbWlncmF0aW9uIGxhd3MgdGhhdCBhcmVuIHRvIGxheGVkLiAKT3VyIGVkdWNhdGlvbiBzeXN0ZW1zIGltcHJvdmUuIE91ciBzeXN0ZW0gaW4gcHJhY3RpY2UgbW92ZXMgYXQgdGhlIHBhY2Ugb2YgdGhlIGxvd2VzdCBjb21tb24gZGVub21pbmF0b3IgaW4gdGhlIGNsYXNzcm9vbS4gClRoZXJlIGEgdG9uIG9mIGRpZmZlcmVuY2UgYmV0d2VlbiAxIDUwIG1pbGxpb24gdG8gYSBiaWxsaW9uLiBJZiB5b3Ugc3RhcnQgd2l0aCAkMSBhbmQgYnVpbGQgdGhhdCBpbnRvICQxMDAwIHRoZW4geW91IGRlZmluaXRlbHkgYXJlIHNlbGYgbWFkZSwgc2FtZSB3aXRoICQ1MCB0byAkMTAwMC4gCkpld2VpbHMgMjAgJSBkZXMgSW5oYWx0ZXMuIApXaGVuIEkgd2FzIHRvbGQgSSB3YXMgaHVuZywgb24gb25lIGhhbmQgSSBhbHJlYWR5IGtuZXcgZnJvbSBteSBwZWVycywgYnV0IGFmdGVyIGZpbmRpbmcgb3V0IG15IGRhZCBzaXplLiAKSSB3b3VsZCBzdWdnZXN0IGdldHRpbmcgc29tZSByZWFsbHkgc3BlY2lmaWMgaW5mbyBvbiBleGFjdGx5IHdoZXJlIHlvdSB3YW50IHRvIGdvIGluIEJ1a2Nob24sIGJlY2F1c2UgeW91IGNhbiBqdXN0IHdhbmRlciBhcm91bmQgaW4gdGhlcmUgYW5kIHdvbmRlciBpZiB5b3UgcmVhbGx5IHNlZWluZyB3aGF0IHlvdSBjYW1lIHRvIHNlZS4gClRoZXJlIHdhcyBzb21lIGVhcmx5IGNyb3Nzb3ZlciAoQmxvbmRpZSwgQWVyb3NtaXRoLCBsb29raW5nIGJhY2sgb24gaXQgZXZlbiBzb21lIENsYXNoIGFuZCBCaWcgQXVkaW8gRHluYW1pdGUpIGJ1dCBvbiB0aGUgd2hvbGUsIHN0aWxsIG5ldmVyIGEgZmFuIG9mIHRoZSAicmVhbCIgaGlwIGhvcC4uIApJbiB0aGUgdmlkZW8gdGhlIGJhdCB3YXMgaGlkaW5nIGJ5IHRoZSB3YWxsIGluIG15IGN1cnRhaW5zIEkgdGhyZXcgc29tZXRoaW5nIG5lYXIgaXQgdG8ga2luZCBvZiBzdGlyIHVwIHRoZSBiYXQgdG8gbWFrZSBpdCBmbHkgYWdhaW4sIGhvcGluZyBpdCB3b3VsZCBub3RpY2UgdGhlIG9wZW4gd2luZG93LiBJbnN0ZWFkLiAKS2VlcCB5b3VyIGhlYWQgdXAgYW5kIGtlZXAgcGxheWluZyFUbyBiZSBob25lc3QgdGhlIG9ubHkgd2F5IHlvdSBub3QgZ29pbmcgdG8gZmVlbCBiYWQgaXMgaWYgeW91IHN0b3AgZG9pbmcgaXQuIEkgc3VyZSB5b3UgdHJpZWQgdG8gdGVsbCB5b3Vyc2VsZiBtYW55IGRpZmZlcmVudCB0aGluZ3MgaW4gb3JkZXIgdG8gbWFrZSB5b3Vyc2VsZiBmZWVsIGJldHRlciBhYm91dCB0aGUgc2l0dWF0aW9uIHdpdGggbm8gc3VjY2Vzcy4gSSBkb250IHRoaW5rIGFueW9uZSBpcyBnb2luZyB0byBiZSBhYmxlIHRvIHRlbGwgeW91IGFueXRoaW5nIHRoYXQgeW91IGhhdmUgYWxyZWFkeSBzYWlkIHRvIHlvdXJzZWxmLiAKT2JpIHdhbiBjb3VsZCBkZWFsIG1vcmUgZGFtYWdlL2hpcyBhYmlsaXRpZXMgd291bGQgYmUgbW9yZSBlZmZlY3RpdmUgaWYgaGUgc3RhbmRpbmcgYWJvdmUgYW4gZW5lbXkKSG93ZXZlciwgc2VydW0gZ2x1Y29zZSBsZXZlbHMgd2VyZSA4LjMlIGxvd2VyIChQMi4gQ2FuIG1hc3NhZ2UgaGVscCBub3JtYWxpc2UgYmxvb2QgZ2x1Y29zZSBsZXZlbHM/QSBzaW5nbGUgZ3JvdXAgcHJlIHRlc3QgcG9zdCB0ZXN0IHN0dWR5IHJlcG9ydGVkIHRoYXQgYWZ0ZXIgb25lIG1vbnRoIG9mIHBhcmVudHMgYWRtaW5pc3RlcmluZyBuaWdodGx5IGZ1bGwgYm9keSBtYXNzYWdlIHRvIHRoZWlyIGNoaWxkcmVuIHdpdGggZGlhYmV0ZXMgKG49MTQpLCB0aGUgY2hpbGRyZW4ncyBnbHVjb3NlIGxldmVscyBkZWNyZWFzZWQgZnJvbSBhbiBhdmVyYWdlIG9mIDE1OCB0byAxMTggbWcvZEwuIApDT0xMSU5TLCBNUyAoV0RBTSkgICBQYXJ0aWNpcGFudHMgdG9vayBwYXJ0IGluIGEgMTAwIHBsdXMgbWlsZXJpZGUgbWFraW5nIHNldmVyYWwgc3RvcHMgYWxvbmcgdGhlIHdheSwgYmVmb3JlIGVuZGluZyBiYWNrIGF0IE1pdGNoZWxsIEZhcm1zZm9yIGEgY3Jhd2Zpc2ggYm9pbCBhbmQgbW90b3JjeWNsZSBjb250ZXN0LiAKIkl0IHdvdWxkIGJlIGxpa2UsIGZvciBpbnN0YW5jZSwgb25lIG9mIG91ciBzbG90IHRvdXJuYW1lbnRzLCIgVHJpY2FubyBzYWlkLiAiV2Ugd291bGQgcm9wZSBvZmYgYSBzZWN0aW9uIG9mIHRoZSBjYXNpbm8gd2hlcmUgd2Ugd291bGQgaGF2ZSBvdXIgdG91cm5hbWVudCBnYW1lIGZvciBwZW9wbGUgYXR0ZW5kaW5nIHRoYXQgZXZlbnQsIGFuZCB3ZSB3b3VsZCBjdXN0b21pemUgdGhlIHRvdXJuYW1lbnQgZm9yIHRoZW0gc28gdGhleSBmZWVsIGxpa2UgdGhleSBhcmUgdGhlaXIgb3duIFZJUHMgd2l0aGluIHRoZSBjYXNpbm8uIi4gCkx1bmRpIGV0IG1hcmRpLCBqJ2FpIHBhc3MgdW5lIGJvbm5lIHBhcnRpZSBkZSBtYSBqb3VybmUgYXUgc2Fsb24gT21uaXZvcmUgcXVpIGZ0YWl0IHNlcyAxMCBhbnMuIFBvdXIgbWEgcGFydCwgYyd0YWl0IGxhIHF1YXRyaW1lIGFubmUgcXVlIGplIG0neSByZW5kYWlzIGV0ICBjaGFxdWUgZm9pcywgaidlbiByZXNzb3JzIGVucmljaGllLCBlbmNoYW50ZSwgZW1iYWxsZS4KRklMRSAgIEluIHRoaXMgT2N0LiAKTm90IGEgbGF3eWVyLCBidXQgSSBndWVzc2luZyB0aGF0IGl0IGJlZW4gdGhpcyBsb25nIGFuZCB0aGV5IHN0aWxsIGhhdmVuIGZpZ3VyZWQgb3V0IHdoYXQgdG8gY2hhcmdlIGhpbSBwcm9iYWJseSBpc24gYSBnb29kIHNpZ24uIFRoZXkgbWlnaHQgZW5kIHVwIHJlYWNoaW5nIG9uIHRoZSBjaGFyZ2Ugd2hpY2ggd291bGQganVzdCBtYWtlIGl0IGVhc2llciBmb3IgaGltIHRvIGdldCBvZmYgdGhhbiBpZiB0aGV5IGp1c3Qgd2VudCBmb3IgZGlzb3JkZXJseSBjb25kdWN0Li4gClRoYXQgaXMgd2hhdCBJIGFtIHRyeWluZyB0byBwb2ludCBvdXQuIApSZXNvbHV0ZSBCYXkgZXN0IHNpdHVlICA3NCBkZWdycyBkZSBsYXRpdHVkZSBub3JkLiBKdXNxdSBsYSBtaSBmdnJpZXIsIGxhIHJnaW9uIG5lIHZvaXQgcGFzIGxhIGx1bWlyZSBkdSBqb3VyLiAgbCBhdSBzb2xzdGljZSBkIGxlIHNvbGVpbCBuZSBzZSBjb3VjaGUgamFtYWlzLgpJIGp1c3QgdGhpbmsgY3JpdGljaXppbmcgaGltIGZvciB0aGlzIGhvbGRzIG1vcmUgd2VpZ2h0IHdoZW4gdGhlIGRlbXMgaGF2ZSB0YWtlbiBjYXJlIG9mIHRoZSB0aGluZ3MgdG8gYWN0dWFsbHkgcHV0IHRoZSBxdWVzdGlvbiB0byBoaW0uIApXZSB3aXNoIHdlIGNvdWxkIGRvbmUgYmV0dGVyLCB3ZSB3aXNoZWQgd2UgY291bGQgc3BvaWxlZCB0aGUgcGFydHksIGJ1dCBpdCB3YXNuIGdvb2QuIApBbmQgaXQgbWFrZXMgbWUgYW5ncnkgeW91ciBkYWQgZG9lc24ndCBiZWxpZXZlIHlvdS4gV2VyZSBJIHlvdSwgSSB3b3VsZCB0YWxrIHRvIGhpbSBhZ2Fpbiwgc29sbywgYW5kIHRlbGwgaGltIGhvdyBtdWNoIGl0IGh1cnQgbWUsIGFuZCBodXJ0IG15IHRydXN0IGluIGhpbSwgdGhhdCBoZSBkaWRuJ3QgYmVsaWV2ZSBtZSB3aGVuIEkgdG9sZCBoaW0gc29tZW9uZSBkaWQgc29tZXRoaW5nIHNvIGFidXNpdmUgdG8gbWUuIApXaGVuIHlvdSBlbnRlciBhIHJvb20gd2l0aCB5b3VyIGNhdCBpbiBpdCwgdHJ5IHNheWluZyBoaXMgbmFtZSBpbiBhIHRvbmUgaGUgZmluZHMgY29tZm9ydGluZy4gTWFzc2FnZSB0aGVyYXB5IGFsc28gaXMgYSBnb29kIG1ldGhvZCB0byBpbnRlcmFjdCB3aXRoIHlvdXIgY2F0IGFuZCByZWxpZXZlIHN0cmVzcy4gCk5vdyBpIGhhdmUgYSBmYWNlYm9vayBtZW1vcnkgZXZlcnkgeWVhciB0byByZW1pbmQgbWUuIChoZSBtYWRlIGEgZmx1c2ggd2l0aCBoaXMgNCBpbiBjYXNlIHlvdSB3ZXJlIHdvbmRlcmluZykoMSkgQUEsIHJhaXNlZCwgb3BwIHJlIHJhaXNlZCwgSSBzaG92ZWQsIG9wcCB0YW5rIGNhbGxlZCB3aXRoIEFRLiAKSXQgcmFyZWx5IHNub3dzIGFueSBzaWduaWZpY2FudCBhbW91bnQgaW4gU2VhdHRsZSwgc28gdGhlcmUgaXMgdmVyeSBsaXR0bGUgaW5mcmFzdHJ1Y3R1cmUgZm9yIGRlYWxpbmcgd2l0aCBpdCB3aGVuIGl0IG9jY3Vycy4gCk5vbiBjb25zZW50IHdpbGwgcmVzdWx0IGluIENvbVNjb3JlIG9ubHkgcHJvY2Vzc2luZyBvYmZ1c2NhdGVkIHBlcnNvbmFsIGRhdGEuIApUaGUgc3RyZWV0IHVzZWQgdG8gYmUgcHJpdmF0ZSwgYnV0IHRoZSBDaXR5IG9mIFBhcmlzIGJvdWdodCBpdCBpbiAxOTY3LCBhbmQgaGFzIG5vIHBsYW5zIHRvIHByaXZhdGlzZSBpdCBhZ2Fpbi4gUG9saXRpY2lhbnMgaW4gdGhlIGFycm9uZGlzc2VtZW50IGFyZSBkb2luZyB3aGF0IHRoZXkgY2FuIHRvIHJlc3BvbmQgdG8gcmVzaWRlbnRzJyBjb25jZXJuczogaW5mb3JtYXRpb24gYWJvdXQgdGhlIHN0cmVldCBoYXMgYmVlbiB0YWtlbiBkb3duIGZyb20gb2ZmaWNpYWwgdG91cmlzdCBzaXRlcywgYW5kIHRoZXkgcGxhbiB0byBsb29rIGF0IHRoZSBwcmVzZW5jZSBvZiB0b3VyaXN0IGJ1c2VzIHRoYXQgcGFyayBuZWFyYnkgYW5kIGNvbnNpZGVyIHJlZ3VsYXRpbmcgYWNjZXNzIHRvIHRoZSBzdHJlZXQuIApBIGdyZWF0IG1hdGVybml0eSBtYXNzYWdlIGNhbiB3b3JrIHdvbmRlcnMgb24gam9pbnQgYW5kIG11c2NsZSBwYWluICAgcGFydGljdWxhcmx5IHRoZSBsb3dlciBiYWNrIGFuZCBsZWcgcGFpbiB0aGF0IHNvIG1hbnkgcHJlZ25hbnQgd29tZW4gZXhwZXJpZW5jZS4gQnV0IHN0dWRpZXMgc2hvdyB0aGF0IHByZW5hdGFsIG1hc3NhZ2UgY2FuIGFsc28gaGVscCB0byBsb3dlciBhbiBleHBlY3RpbmcgbW90aGVyJ3Mgc3RyZXNzIGFuZCBhbnhpZXR5LCBhbGxldmlhdGUgaW5zb21uaWEgYW5kIGltcHJvdmUgbW9vZCBieSBpbmNyZWFzaW5nIGxldmVscyBvZiBzZXJvdG9uaW4gYW5kIGRvcGFtaW5lLiBNYXNzYWdlIG1heSBhbHNvIGhlbHAgdG8gaW1wcm92ZSBjaXJjdWxhdGlvbiBhbmQgcmVkdWNlIGpvaW50IHN3ZWxsaW5nLiAKRGllIGR1cmNoIENvb2tpZXMgZXJ6ZXVndGVuIEluZm9ybWF0aW9uZW4gYmVyIElocmUgQmVudXR6dW5nIGRpZXNlciBXZWJzaXRlIChlaW5zY2hsaWVsaWNoIElocmVyIElQIEFkcmVzc2UpIHdlcmRlbiBhbiBlaW5lbiBTZXJ2ZXIgdm9uIEdvb2dsZSBpbiBkZW4gVVNBIGJlcnRyYWdlbiB1bmQgZG9ydCBnZXNwZWljaGVydC4gR29vZ2xlIHdpcmQgZGllc2UgSW5mb3JtYXRpb25lbiBiZW51dHplbiwgdW0gSWhyZSBOdXR6dW5nIGRlciBXZWJzaXRlIGF1c3p1d2VydGVuLCB1bSBSZXBvcnRzIGJlciBkaWUgV2Vic2l0ZWFrdGl2aXR0ZW4gZnIgZGllIFdlYnNpdGViZXRyZWliZXIgenVzYW1tZW56dXN0ZWxsZW4gdW5kIHVtIHdlaXRlcmUgbWl0IGRlciBXZWJzaXRlbnV0enVuZyB1bmQgZGVyIEludGVybmV0bnV0enVuZyB2ZXJidW5kZW5lIERpZW5zdGxlaXN0dW5nZW4genUgZXJicmluZ2VuLiBBdWNoIHdpcmQgR29vZ2xlIGRpZXNlIEluZm9ybWF0aW9uZW4gZ2VnZWJlbmVuZmFsbHMgYW4gRHJpdHRlIGJlcnRyYWdlbiwgc29mZXJuIGRpZXMgZ2VzZXR6bGljaCB2b3JnZXNjaHJpZWJlbiBvZGVyIHNvd2VpdCBEcml0dGUgZGllc2UgRGF0ZW4gaW0gQXVmdHJhZyB2b24gR29vZ2xlIHZlcmFyYmVpdGVuLiAKSGVyZSB0aGUgbmV3cyBraWQuIFdoZW4geW91ciBtb21teSBhbmQgZGFkZHkgYmFuZywgdGhlcmUgY2VsbHMgc3BsaXQuIFlvdSBnZXQgb25lIG9mIHRoZW0gZnJvbSBlYWNoIG9mIHlvdXIgcGFyZW50cy4gCk5vdywgaXQgaXMgbm90IHVudXN1YWwgdG8gZmluZCB0aGlzIG1hdGVyaWFsIGluIGV2ZXJ5IGNvbG9yIGluIHRoZSByYWluYm93IGFuZCBpbiBtYW55IGRpZmZlcmVudCB0eXBlcyBvZiBtYXRlcmlhbC4uIApMb25nIHRlcm0gd2VhbHRoLCBpbiBteSBvcGluaW9uLCBpcyBidWlsdCBieSBidXlpbmcgYW5kIGhvbGRpbmcgcHJvcGVydGllcy4gClZpbGxhaW4gcHJvdWRseSB0YWJsZXMgSmQ5aCBmb3IgdGhlIHN1aWNpZGUgYmx1ZmYuIEkgcmVwbGF5IHRoZSBoYW5kIGluIG15IGhlYWQgYW5kIHJlYWxpemUgdGhhdCBWaWxsYWluIGhhcyBsaXRlcmFsbHkgemVybyB2YWx1ZSBjb21ib3MgdGhhdCBjYW4gamFtIHJpdmVyLiBFdmVuIGlmIGhlIGhhZCBmbHVzaGVzIGluIGhpcyByYW5nZSwgaGUgd291bGQgb25seSBjYWxsIHJpdmVyLCBhbmQgcHJldHR5IG11Y2ggdGhlIG9ubHkgaGFuZHMgdGhhdCBjYW4gcmVqYW0gcml2ZXIgaXMgRkhzIHRoYXQgaGUgYWxtb3N0IG5ldmVyIGhhcyBnaXZlbiBteSBibG9ja2VycyBhbmQgaGlzIHR1cm4gY2hlY2suIApHb29kIGx1Y2sgYW5kIGNvbmdyYXRzIG9uIGdyYWR1YXRpbmcgc29vbiEuIApBbHNvIHRoZSBwcmljZXMgZnJvbSBQQyBXb3JsZCBhcmUgbW9yZSBleHBlbnNpdmUgdGhhbiBvbmxpbmUgc3RvcmVzLCBidXQgcGVyc29uYWxseSBJIG5ldmVyIGNhcmUgbXVjaCBhYm91dCB0aGUgcHJpY2VzLiAKWWVhaCBuZXdib3JucyBhcmUgcHJldHR5IHVnbHkuIEV2ZW4gbXkgYmFieSB3YXMgc3VwZXIgdWdseSB3aGVuIGhlIHdhcyBuZXcuIEJlY2F1c2UgdGhleSBoYXZlIHRob3NlIHdlaXJkIGV5ZXMgYW5kIGxvb2tlZCBsaWtlIG5ha2VkIGNhdHMuIApUaGUgbWFpbiBiZW5lZmljaWFyaWVzIHdlcmUgdGhlIEdyZWVucywgd2hvIHBhcmFkb3hpY2FsbHkgc2hhcmUgcG93ZXIgd2l0aCB0aGUgQ0RVIGluIHRoZSBzdGF0ZSBhbmQgaGF2ZSBub3cgZHJhd24gbGV2ZWwgd2l0aCB0aGUgU1BELCBhbmQgdGhlIGZhciByaWdodCBBZkQsIHdobyByb3NlIHRvIDEzJS4KU29ycnkgU3VzaWUsIEdyYW1teSBvbmx5IGJ1eXMgcHJlc2VudHMgZm9yIHlvdXIgYnJvdGhlci4gCkJhY2twYWdlIGVzY29ydHMgbm9ydGggcGxhdHRlIG5lYnJhc2thCkJsYXRhbnQgQlMuIEluZHVzdHJpYWwgSGVtcCBoYXMgY2xvc2UgdG8gMSUsIDIlIGRvZXMgbm90IGdldCB5b3UgaGlnaCwgbm8gc3R1ZHkgaXMgbGlua2VkIGluIHRoZSBhcnRpY2xlIHRvIHByb29mIHRoaXMgY2xhaW0uCjIgTlJJcyBzZXQgdG8gYmUgYmlsbGlvbmFpcmVzCkl0IGFsc28gY2FuIGhhdmUgc2VyaW91cywgbG9uZyBsYXN0aW5nIGNvbnNlcXVlbmNlcyBpbiB5b3VyIGxpZmUuIFRoZSBzdHJhbmdlciByYXBpc3Qga25vY2tpbmcgeW91IG91dCBpbiBhbiBhbGxleSBpcyBwcmV0dHkgbXVjaCBhIG15dGg7IGl0IHdpbGwgYWxtb3N0IGFsd2F5cyBiZSBzb21lb25lIHlvdSBrbm93ICBzbyB3aG8gZG8geW91IGtub3c/IFlvdXIgY293b3JrZXJzIG9yIGJvc3MsIHdoZXJlIHJlcG9ydGluZyBpdCBtaWdodCBnZXQgeW91IGZpcmVkPyBBIGJveWZyaWVuZCBvciBhIGZyaWVuZCwgd2hlcmUgeW91IGtub3cgeW91IGJlIHRlYXJpbmcgYXBhcnQgeW91ciBmcmllbmQgY2lyY2xlIGFuZCBzdXBwb3J0IHN5c3RlbSAoYW5kIHlvdSBtaWdodCBzZWUgdGhlIHJhcGlzdCwgc3RpbGwsIGFzIGEgZnJpZW5kIHlvdSBkb24gd2FudCB0byBwdXQgaW4gamFpbCwgYmVjYXVzZSBpdCBoYXJkIHRvIGNoYW5nZSB5b3VyIHZpZXcgb2Ygc29tZW9uZSBhcyBmcmllbmQgaW50byBuZW1lc2lzIG92ZXJuaWdodCk/IE1heWJlIGEgZmFtaWx5IG1lbWJlciwgYW5kIHlvdSBiZSB0ZWFyaW5nIHlvdXIgZmFtaWx5IGFwYXJ0PyBSZWdhcmRsZXNzIG9mIHdobyBpdCB3YXMsIGl0IGNhbiBhbHNvIGZlZWwgbGlrZSBub3cgZXZlcnlvbmUga25vd3Mgb25lIG9mIHRoZSB3b3JzdCB0aGluZ3MgdGhhdCBoYXBwZW5lZCB0byB5b3UsIGFuIGluY3JlZGlibHkgaW50aW1hdGUgYW5kIHByaXZhdGUgdGhpbmcsIGFuZCBub3cgaXMgdHJlYXRpbmcgeW91IGRpZmZlcmVudGx5IHdoZW4geW91IGp1c3Qgd2FudCB0aGluZ3MgdG8gYmUgbm9ybWFsLgpJdCdzIHRpbWUgdG8gdGFrZSByaXNrcyBhbmQgZ28gZm9yIGEgd2FsayBvbiB0aGUgd2lsZCBzaWRlIS4gCk1heWJlIHRoZXJlIGFyZSBvdGhlciB0cmFpbnMgZ29pbmcgdG8gUGFyaXMgbGlrZSB0aGUgVGhhbHlzIChidXQgdGhleSBhcmUgc2xvd2VyIGFuZCBpZGsgaWYgdGhleSBkZXBhcnQgZnJvbSBTdHV0dGdhcnQpLiAKVG8gYmVnaW4geW91IG5lZWQgdG8gY29uc2lkZXIgaG93IG1hbnkgcGxheWVycyBhcmUgaW4gdGhlIHBva2VyIHJvb20uIFRoZSBtb3JlIHBsYXllcnMgdGhlcmUgYXJlIGF0IHRoZSB0YWJsZSB0aGUgbW9yZSBsaWtlbHkgaXQgaXMgZ29pbmcgdG8gYmUgdGhhdCBhIHNpbXBsZSAyIHBhaXIgY291bGQgd2luLiBCdXQgdGhlIGZld2VyIHRoZSBwbGF5ZXJzIHRoZSBoaWdoZXIgeW91ciBoYW5kIHJhbmsgd2lsbCBoYXZlIHRvIGJlIHRvIHdpbi4KT29vb2gsIGVpbiBob2Nod2lzc2Vuc2NoYWZ0bGljaGVyIFZlcmxhZyBuYW1lbnMgS29wcCBiZWhhdXB0ZXQgZXR3YXMhIERhbm4gTVVTUyBkYXMgamEgc3RpbW1lbi4gCiJKb3ljZSBtZXQgSGVtaW5nd2F5IGluIFBhcmlzIGR1cmluZyB0aGUgMTkyMHMuIEJvdGggcmVub3duZWQgaGVhdnkgZHJpbmtlcnMsIHRoZXkgYmVnYW4gdG8gZnJlcXVlbnQgY2FmZXMgYW5kIGJhcnMgdG9nZXRoZXIuIFdoaWxlIEpveWNlIHdhcyB1bmF0aGxldGljIGFuZCBoYWQgZmFpbGluZyBleWVzaWdodCwgaGlzIGRyaW5raW5nIGNvbXBhbmlvbiB3YXMgdGFsbCwgc3RyYXBwaW5nIGFuZCBwcm9uZSB0byB2aW9sZW50IG91dGJ1cnN0cy4gSWYgSm95Y2UgcGlja2VkIGEgZmlnaHQsIGhlIHdvdWxkaGlkZSBiZWhpbmQgSGVtaW5nd2F5LiBBY2NvcmRpbmcgdG8gdGhlIHZvaWNlb3ZlciBvbiB0aGlzIGNsaXA6ICJXaGVuIGluIHRoZSBjb3Vyc2Ugb2YgdGhlaXIgZHJpbmtpbmcsIGhlIHJhbiBpbnRvIGFueSBzb3J0IG9mIGJlbGxpZ2VyZW5jZSwgaGUgd291bGQganVtcCBiZWhpbmQgaGlzIHBvd2VyZnVsIGZyaWVuZCBhbmQgc2hvdXQ6ICdEZWFsIHdpdGggaGltLCBIZW1pbmd3YXkuIERlYWwgd2l0aCBoaW0uJyIKSW4gYSBwYXJhbGxlbCB0byB0aGUgd2F5IE1hY2llbCBhYnVzZWQgaGlzIHNlbWluYXJpYW5zLCBMb3VnaHJleSBzYXlzIGhpcyBzdXBlcmlvciBoYWQgdG9sZCBoaW0gdGhhdCBhbiB1bm5hbWVkIGlsbG5lc3MgZ2F2ZSBoaW0gdGVycmlibGUgY3JhbXBzIGluIGhpcyBsb3dlciBhYmRvbWVuIHRoYXQgY291bGQgb25seSBiZSBlYXNlZCB3aXRoIG1hc3NhZ2UuLiAKSSBoYWQgYSBtb21lbnRhcnkgYW5kIHRoZW4gdGhlIGhhbGx1Y2luYXRpb24gd2VudCBhd2F5Li4gClRoZSBjb25zZW5zdXMgaXMgdGhhdCB0aGlzIGFwcHJvYWNoIGlzbiB3b3JraW5nLiBJIG1lYW4gbG9vayBhdCB0aGUgTGliZXJhbHMuIApXaGVuIEkgaGFkIHRvIGRvIGFuIElRIHRlc3QgaW4gc2Nob29sLCBpdCB3YXMgcXVpdGUgZGlmZmVyZW50IGZyb20gd2hhdCBJIHJlbWVtYmVyLCBhbmQgSSBjb25zaWRlciB0aGF0IHRvIGhhdmUgYmVlbiBhIHJlbGF0aXZlbHkgbGVnaXQgdGVzdCwgYXQgbGVhc3QgaXQgd2FzIGNhcnJpZWQgb3V0IGJ5IGEgcHN5Y2hvbG9naXN0LiBCdXQgSSBtYXkgYmUgd3JvbmcuIEZyb20gd2hhdCBJIHJlbWVtYmVyLCB0aGVyZSB3ZXJlbiBhbnl0aGluZyBhYm91dCBoaXN0b3J5IG9mIG15IGNvdW50cnkgYW5kIGxpdHRsZSB0byBubyBzdHVmZiBhYm91dCBjdWx0dXJlLiBNb3N0bHkgZ2VuZXJhbCBxdWljayB0aGlua2luZyBhbmQgcHV0dGluZyBzdHVmZiB0b2dldGhlciBxdWVzdGlvbnMuIFRoZSB0d28gSSBmYW1pbGlhciB3aXRoIGFyZSB0aGUgU3RhbmZvcmQgQmluZXQgKG5vIGxvbmdlciBpbiB1c2UsIGFzIGZhciBhcyBJIGtub3cpIGFuZCB0aGUgV2VjaHNsZXIgdGVzdHMgKHZlcnkgY29tbW9ubHkgdXNlZCwgYW5kIGFib3V0IGR1ZSBmb3IgYW4gdXBkYXRlZCB2ZXJzaW9uKS4gSSBuZXZlciB0YWtlbiBvbmUgbXlzZWxmLCBidXQgSSBhZG1pbmlzdGVyZWQgc2V2ZXJhbCBhdCB0aGlzIHBvaW50IGluIG15IHRyYWluaW5nLgpJbiBpdCwgdGhlIENoYWluIG9mIExha2VzIHNwYXJrbGVzOyBIZW5uZXBpbiBBdmVudWUgYnVzdGxlczsgTWlubmVoYWhhIEZhbGxzIHR1bWJsZXM7IGEgc2hvdCBvZiBDIGdyYWRlIGZhbGwgZm9saWFnZSBsaW5nZXJzLCBzZWVtaW5nbHkgZm9yZXZlcjsgYW5kIEZvc2hheSBUb3dlciwgdW0sIHRvd2VycyBhYm92ZSBkb3dudG93bidzIHF1YWludCBza3lsaW5lLiAKSnRlIGNvbnNlaWxsZSBBbnRob255IEdhcm9uIDsgU3VpdCBTdXBwbHkgc2kgaG9ycyBwcmlvZGUgZGUgc29sZGVzLCBCYWxpYmFyaXMgOyBEZSBGdXJzYWMgOyBlbiBzb2xkZXMuIFBsdXMgZCBpY2kuClRyZW5kaW5nIFRvcGljczogSkFWIEJlYXN0aWFsaXR5LCBUZW50YWNsZXMgUG9ybiwgVlIsIEFuaW1hbCBab29zZXgsIFpvb3Nrb29sLCBBbmltYWxwYXNzLCBab29zZWN0aW9uLCBBcnRvZnpvbywgTWV4em9vLCBTY2F0LCBDcnVzaCBGZXRpc2gsLiBEaXJlY3RlZCBieSBTaW1vbiBUaGF1ci4gV2l0aCBTY2hudWNrZWwgQmVhLCBSaWNreSBUemF0emlja3kuIApIYXMgbm90aGluZyB0byBkbyB3aXRoIHRoYXQuIE1vc3RseSB0aGUgb25seSBtYWpvciBzYXRpc2ZhY3Rpb24gYSB3b21hbiBjYW4gZ2V0IGZyb20gaXQgaXMgdGhlIHNhdGlzZmFjdGlvbiBvZiBwbGVhc2luZyBoZXIgcGFydG5lciwgdGhlcmUgbm8gcGh5c2ljYWwgc2lkZSB0byBpdCAoZXZlbiBnaXJscyBJIGtub3cgd2hvIGxpa2UgZ2l2aW5nIHRoZW0gc2F5IHRoZSByZWFzb24gdGhleSBsaWtlIGl0IGlzIGl0IHNhdGlzZmllcyB0aGVpciBwYXJ0bmVyLCBiZXlvbmQgdGhhdCBpdCBleHRyZW1lbHkgdW5jb21mb3J0YWJsZSBhbmQgYXdrd2FyZCkuIAoiSGUgd2FzIG9mZmVuZGVkIGFuZCBuZXJ2b3VzIHRoYXQgc2hlIGdyYWJiZWQgaGltIHNvIGhlIGRlcGFydGVkIGFzIHdlbGwsIiB0aGUgZGV0ZWN0aXZlIHdyb3RlLgpXaGF0IGlzIHRoZSBHUkVFTiBCSUtFIFBST0dSQU0/QSBiaWN5Y2xlIHNoYXJpbmcgc3lzdGVtIChhbHNvIGtub3duIGFzOiBDb21tdW5pdHkgYmljeWNsZSBwcm9ncmFtLCBZZWxsb3cgYmljeWNsZSBwcm9ncmFtcywgV2hpdGUgYmljeWNsZSBwcm9ncmFtcywgcHVibGljIGJpa2Ugb3IgZnJlZSBiaWtlKSBpcyBhbiBpbmNyZWFzaW5nbHkgcG9wdWxhciBzeXN0ZW0gd2hlcmVieSBiaWN5Y2xlcyBhcmUgbWFkZSBhdmFpbGFibGUgb24gYSBsYXJnZSBzY2FsZSBpbiBhIGNpdHkgYWxsb3dpbmcgcGVvcGxlIHRvIGhhdmUgcmVhZHkgYWNjZXNzIHRvIHRoZXNlIHB1YmxpYyBiaWtlcyByYXRoZXIgdGhhbiByZWx5IG9uIHRoZWlyIG93biBiaWtlcy4gVHdvIG1lbWJlcnMgb2YgdGhpcyBiYW5kIGhhdmUgYWxyZWFkeSBiZWVuIHNpZ25lZCB0byByZWNvcmQgbGFiZWxzLCB3aG8ga25vd3Mgd2hlcmUgdGhpcyBiYW5kIHdpbGwgZ28gZnJvbSBoZXJlLiBUaGlzIGd1eSBXSUxMIHdpbiBhIEp1bm8sIG1hcmsgbXkgd29yZHMuIFRoZWlyIG5ld2x5IHJlbGVhc2VkIExQIGp1bXBlZCB0byAzMSBvbiBpVHVuZXMgdG9wIDEwMCB0aGUgc2Vjb25kIGRheSBhZnRlciBpdCB3YXMgcmVsZWFzZWQuIFRoZXkgYmxldyB0aGUgcm9vZiBvZmYgdGhlIFJveWFsIHRoZWlyIGZpcnN0IHZpc2l0IHRvIEZlcm5pZS4gQ29tZSBjaGVjayBvdXQgVGhlIEZlcm5pZSBuZXcgc291bmQgc3lzdGVtLiBDQVNJTk8gTklHSFQ6IEJsYWNramFjaywgUm91bGV0dGUsIFBva2VyLCA1MC81MCwgQmlnIFdoZWVsLiBBbGwgUHJvY2VlZHMgdG8gVGhlIEdyZWVuIEJpa2UgUHJvZ3JhbS4KWWVhaCBpbiBhIHNlbnNlIHdpdGggYW4gZW1waGFzaXMgb24gY3JlYXRpbmcgYSBzYWZlIHNwYWNlIGZvciBtZW4gdG8gY29tZSBiYWNrIGludG8uIEltYWdpbmUgYSBib3hlciB0aGF0cyBiZWVuIHJldGlyZWQgZm9yIDUgeWVhcnMgYW5kIHdhbnRzIHRvIGNvbWUgYmFjayBpbnRvIHRoZSBnYW1lLiBZb3UgZ290dGEgZ2l2ZSBoaW0gYSBjb3VwbGUgb2YgZWFzeSBmaWdodHMgYmVmb3JlIHlvdSB0aHJvdyBoaW0gYmFjayBpbnRvIHRoZSBtaXggcHJvcGVyLiBUaGF0cyB3aGF0IEkgdmlldyB0aGUgY3VycmVudCBzdGF0ZSBvZiBtYW5ob29kIGluIHRoaXMgY291bnRyeS93ZXN0LiBDcmVhdGUgbWFsZSBkb21pbmF0ZWQgc3BhY2VzIGZvciBtZW4gdG8gbGVhcm4vcmUgbGVhcm4gbWFzY3VsaW5pdHkuIEkgYW4gaWRlYWxpc3QgKHBlcmhhcHMgYSBuYWl2ZSBvbmUpIGluIHRlcm1zIG9mIGNvbW11bml0eSBhbmQgZmFtaWx5IGFuZCB3b3VsZCBsaWtlIHRvIHNlZSB0aGlzIHRyYW5zaXRpb24uClRoZSB0aGluZyB0aGF0IGdldHMgbWUgYWJvdXQgVGVkIGV2ZXJ5IHRpbWUgaXMgV2FobGJlcmcgY29tcGxldGUgY29tbWl0bWVudCB0byBoaXMgcm9sZS4gCk1vbnN0ZXIgaXMgbG9uZyAoNzQgZXBpc29kZXMpIGFuZCBhcyBpdHMgdGl0bGUgc3VnZ2VzdHMsIGRhcmssIGJ1dCBpZiBzaGUgaW50byBhIGNhdCB2LiBtb3VzZSB0aHJpbGxlciBhIGxhIFNpbGVuY2Ugb2YgdGhlIExhbWJzLCB0aGlzIGlzIGl0LgpJdCBsaWtlIGEgYnVuY2ggb2YgbG9uZWx5IGlkaW90cyBkZWZsZWN0aW5nIHRoZWlyIGF0dGVudGlvbiBhd2F5IGZyb20gdGhlaXIgcGF0aGV0aWMgbGl2ZXMgYW5kIGNvdW50cmllcyBieSBqb2luaW5nIHRoaXMgY2lyY2xlIGplcmsuIApJIHBpY2sgdXAgdGhlIGZyb250IGxvb3AgYW5kIGtuaXQgdGhlbiB0YmwuIApJIGtub3cgSSdtIG5vdCBrZWVuIG9uIHRoZSBpZGVhIG9mIHNvbWVvbmUgd3JhcHBpbmcgaGlzIG9yIGhlciBoYW5kcyBhcm91bmQgbXkgbmVjay4gWW91IG1pZ2h0IHdhbnQgdG8gYXNrIHlvdXIgbWFzc2FnZSB0aGVyYXBpc3QgdG8gc3RheSBhd2F5IGZyb20gdGhhdCBwYXJ0IG9mIHlvdXIgYm9keS4KSSd2ZSBzZWVuIHByb2JhYmx5IGh1bmRyZWRzIG9mIHBvc3RzIGxpa2UgdGhpcyBvdmVyIHRoZSB5ZWFycyBhbGwgcHJvbWlzaW5nIHNvbWUgYXdlc29tZSBzdHJhdGVneSBhbmQgdGhlbiBlbmRpbmcgdXAgYSBkZXNjcmlwdGlvbiBvZiB0aGUgZ2FtZS4uIApUaGUgcG9rZXIgcm9vbSBpcyBqdXN0IG9mZiBmcm9tIGEgbmlnaHRjbHViIGFuZCB5b3UgZ2V0IGEgc3RlYWR5IHN0cmVhbSBvZiBzb21lIG9mIHRoZSB3b3JsZCBtb3N0IGJlYXV0aWZ1bCB3b21lbiBzdHVtYmxpbmcgb3V0IHdlYXJpbmcgbmV4dCB0byBub3RoaW5nIG9uIHdlZWtlbmQgZXZlbmluZ3MuIFNvbWVvbmUgYXQgb3VyIHRhYmxlIGFjdHVhbGx5IHBhaWQgYSBndXkgJDIwIGF0IHRoZSB0YWJsZSBuZXh0IHRvIHVzIHRvIG1vdmUgc28gaGUgaGFkIGEgYmV0dGVyIHZpZXchLiAKSW4gYWRkaXRpb24gdG8gRHJvcHMgb2YgSnVwaXRlciwgdGhlIGZvcmVjYXN0IGhlcmUgY2FsbHMgZm9yIHJhaW4gYW5kIHRodW5kZXJzdG9ybXMsIHdoaWNoIGlzIHBlcmhhcHMgYXBwcm9wcmlhdGUgZm9yIGFuIGluZHVzdHJ5IGZhY2luZyBpdHMgb3duIHN0b3JtIGNsb3VkcywgaW5jbHVkaW5nIHRoZSBncm93aW5nIHRocmVhdCBvZiBwcml2YWN5IGxlZ2lzbGF0aW9uIHRoYXQgY291bGQgbWFrZSBkaWdpdGFsIGFkdmVydGlzaW5nIGhhcmRlci4gClNlZW1zIHRoYXQgd2F5IHVudGlsIHRoZSBsZXZlbHMgc3RhcnQgZ2V0dGluZyBoYXJkZXIgYW5kIHlvdSBoYXZlIHRvIG1pbGsgbW9yZSBjb3dzIGZhc3Rlci4gVGhleSBwaWxlIHVwIGFuZCBjcmFzaC4gClNoZSBqdXN0IGZvcmZlaXRlZCBhbnkgYWxvbmUgdGltZSB3aXRoIHlvdXIgY2hpbGQgZXZlci4gQW5kIHRoYXQgYXNzdW1pbmcgdGhhdCBzaGUgaXMgYWxsb3dlZCBhbnkgcmVsYXRpb25zaGlwIGF0IGFsbCwgd2hpY2gsIEkgdW50aWwgSEUgY2FuIGdyb3cgdXAgZW5vdWdoIHRvIHNldCBhbmQgZW5mb3JjZSBib3VuZGFyaWVzLCBzaGUgaXNuLiAKU29tZSBvdGhlciB0aXBzOiB2b2x1bnRlZXIhIFZvbHVudGVlciBhdCBhbiBhcXVhcml1bSwgd2lsZGxpZmUgY2VudGVyLCBvciBhbnl0aGluZyByZWxhdGVkIHRvIGJpb2xvZ3kvYW5pbWFscy4gQWxzbywgam9pbmluZyBhIHByb2Zlc3Npb25hbCBzb2NpZXR5IChsaWtlIEVTQSwgdGhlIGZpc2hlcmllcyBzb2NpZXR5LCBldGMpIHdpbGwgcHJvdmUgdGhhdCB5b3UgYXJlIGludGVyZXN0ZWQgYW5kIHN0YXJ0IHRvIGdpdmUgY29ubmVjdGlvbnMuIFRoZXkgY29zdCBtb25leSBidXQgY2FuIGJlIGEgZ3JlYXQgbmV0d29ya2luZyBleHBlcmllbmNlLiAKLi4gClNvbWV0aW1lcyBpdCBiYWxhbmNlcyBvdXQgYWZ0ZXIgYSB3aGlsZSwgc29tZXRpbWVzIGl0IGRvZXNuJ3QuIAoiUHJpbmNlc3Mgb2YgSGVhcnQiIGlzIGtva29ybyBubyBwdXJpbnNlc3UgKCksIGZvciBpbnN0YW5jZS4gCkhlIHdhcyB0aGUgb25seSBzb24gYW5kIGhlaXIgb2YgR2VvcmdlIFdpbnRocm9wIEZhaXJjaGlsZCwgYSBSZXB1YmxpY2FuIGNvbmdyZXNzbWFuIGFuZCB0aGUgZmlyc3QgY2hhaXJtYW4gb2YgSUJNLi4gCiJJdCdzIGJlZW4gYSBiaXQgb2YgYSBwcm9jZXNzIGJ1dCBJIGxpa2UgdGhlIHByb2dyZXNzaW9uLCIgaGUgc2FpZCwgZGVzY3JpYmluZyBoaXMgc3RhdHVzIGFzICJkYXkgdG8gZGF5LiIKVGhlaXIgcm9tYW5jZSBkZXZlbG9wcyB3aXRoIGNoYWxsZW5nZXMgYWxvbmcgdGhlIHdheSwgbm9uZSBvZiB3aGljaCBpcyBhcyBkaWZmaWN1bHQgYXMgd2hhdCBoYXBwZW5zIHdoaWxlIENocmlzIGlzIG92ZXJzZWFzLi4gClN1cGVyIGNsaWNoZSwgYnV0IGJlIHlvdXJzZWxmLiBBbGxvdyB5b3Vyc2VsZiB0byBiZSBkaWZmZXJlbnQuIFlvdSBhcmUgZGlmZmVyZW50LiAKSW4gdGhpcyB3b3Jrc2hvcCwgeW91J2xsIGxlYXJuIGhvdyB0byBmcmFtZSB5b3VyIGVtYmVkZGVkIHN5c3RlbSByZXF1aXJlbWVudHMgYXMgQWdpbGUgc3RvcmllcywgYW5kIHdoeSB5b3Ugc2hvdWxkIHdhbnQgdG8uLiAKVW5lIGNvbmNlcHRpb24gcHVyZSBldCBleGlnZW50ZSwgcXVhc2kgbXlzdGlxdWUsIGR1IHBhaW4gIGwnb3Bwb3MgdG90YWwgZCd1bmUgdmlzaW9uIGluZHVzdHJpZWxsZSBldCBwcm9kdWN0aXZpc3RlIHZpc2FudCAgc2ltcGxpZmllciBldCBhY2NscmVyIGxhIGZhYnJpY2F0aW9uIGF1IG1heGltdW0uIApNeSBmaXJzdCB0d28gY2FyZSBwbGFucyB3ZXJlIG1vcmUgbGlrZSBhIHBhcGVyIHRoYW4gYSBjaGFydGVkIGNhcmUgcGxhbiBidXQgSSBnb3QgZ3JlYXQgZmVlZGJhY2sgYW5kIHN0aWxsIGdvdCBncmVhdCBtYXJrcyBmb3IgdHJ5aW5nLgo5LiAKTXkgYWR2aWNlIGlzIHRvIHN0YXJ0IHNtYWxsLiAKUG9hc2llIG92cGx5dm4gdiBwb2tsYWQgcG9vdm5jdHZvLiBEdm9kdSwgZSBqZSBka2xhZG5lIG5hc2lha251dCwgcG8gZGFkaSBhbGVibyBqYXIgdGF2ZW5pbnkgamUgamVkbm9kdWNoaWUgdnlrb3BhIG5lIHNsbmtvIHBlaWUgaGFyZCBwYWNrLiBNb2tyZWogdm96b3ZrZSBtIHRpZSB2aWFjIHZvZGl2b3MgYSBidWRldGUgbWMgbmpzIHByZWRtZXR5LCBrdG9yIHMgaGxiaWUgYWtvIGtlYnkgemVtIGJvbGkgc3VjaC4gUGllc2t5IG9jZWFuIGJlYWNoIGplIG5hcnVlbiBhIHByZXZhbGlsIHNpbG4gYnJreSBhIGFzdG8gb2RrcnZhIGNpZWxlLCBrdG9yIGJvbGkgcHJlZHRtIHBybGkgaGxib2tvLCB2eWhhZGFqdGUuIFZldHJ5IHB0ZSBzcHNvYiBwb2RvYm4gcHJlcm96ZGVvdmFuaWEgcGllc2t5LCBhc3RvIHBvbmthaiBhIGdvbGQgbnVnZ2V0LCBrdG9yIGJvbCBwb2Nob3ZhbiBobGJva28gcHJlZCBicmtvdS4KQnV0IHByb2JhYmx5IHdvdWxkbid0IGhhdmUgYm91Z2h0IGl0IGlmIEkgY291bGQgbWFrZSB0aGF0IGRlY2lzaW9uIGFnYWluLiAKTWF5YmUgY2hvbGVzdGVyb2wgaGF0ZXMgdGhlIGhlYXJ0IChJIGRvdWJ0IGl0KSwgYnV0IGl0IGxvdmVzIHRoZSBicmFpbi4KQ3lyb3RlayAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpIb3cgdG8gSW1wcm92ZSBZb3VyIFRvdXJuYW1lbnQgUG9rZXIgR2FtZQpGdXJ0aGVybW9yZSwgSSBkb24gc3BlYWsgYW55IEFtYW1pIGxhbmd1YWdlLiAKQmFzZW1lbnQ/ICBBIGxvdCBvZiBob3VzZXMgYXJlIGJ1aWx0IG9uIHN0aWx0cyBoZXJlLCBtZWFuaW5nIHRoZXJlIHVzdWFsbHkgaXNuJ3QgYSBncm91bmQgbGV2ZWwgZmxvb3IuIFRoaXMga2VlcHMgaW5zdXJhbmNlIGNvc3RzIGRvd24gSW5jYXNlIGl0IGZsb29kcyBkdXJpbmcgaHVycmljYW5lcy4gVGhpcyBob3VzZSB3YXMgYWxyZWFkeSBvbiBzdGlsdHMuIFRoZSBncm91bmQgZmxvb3IgaXMgYmFzaWNhbGx5IGFuIGFib3ZlIGdyb3VuZCBiYXNlbWVudC9qdXN0IGEgcGxhY2UgdG8gc3RvcmUgeW91ciBjcmFwLgpSYWlzaW5nIGFuaW1hbHMgc3RpbGwgcmVxdWlyZXMgbW9yZSBoYWJpdGF0IGxvc3MgYW5kIGRpdmVydGluZyBtb3JlIHdhdGVyIHRocm91Z2ggZ3Jvd2luZyBjcm9wcyBmb3IgdGhlbS4gClNwZWNpYWwgT2ZmZXIgIFNpZ24gdXAgZm9yIGFuIGFubnVhbCBwdWJsaWMgbWVtYmVyc2hpcCBhdCBGaXRuZXNzIGFuZCBXZWxsYmVpbmcgZGF5IGFuZCBnZXQgYW4gbW9udGggYWRkZWQgdG8geW91ciBtZW1iZXJzaGlwIGNvbXBsZXRseSBmcmVlLgpCb3NzZSAoMjUgYW5zKSBzJ2VzdCBpbXBvcyBlbiAxIG1pbiA0NCBzZWMgNjcvMTAwZSwgZGV2YW50IGxlIFBvbG9uYWlzIEFkYW0gS3N6Y3pvdCAoMTo0NC45OTUpIGV0IGxlIEtueWFuIEtpcHllZ29uIEJldHQgKDE6NDUuMjEpLgpEZXNwb25kYW5jeS4gT2Z0ZW4gZm9sbG93aW5nIG9uIGZyb20gZGVwcmVzc2lvbiBhIG1vdGhlciBtYXkgYmVjb21lIGxlc3MgYW5kIGxlc3MgbGlrZSBoZXIgb2xkIHNlbGYsIHRha2luZyBubyBqb3kgaW4gYW55dGhpbmcuIEEgcHJldmlvdXNseSBnbGFtb3JvdXMgd29tYW4gbWF5IHN0b3AgbWFraW5nIHVwLCBhIHByZXZpb3VzbHkgc29jaWFibGUgd29tYW4gbWF5IG5vdCB3YW50IHRvIGNoYXQgd2l0aCBhbnlvbmUuIApEci4gCk92ZXJhbGwgaXQgd2FzIGEgcmVhbGx5IGZ1biB0cmlwLiAKSSBoYXZlIHRvIHdvcmsgd2l0aCB0aGUgYm9hcmQgYW5kIG1hbmFnZW1lbnQgY29tbWl0dGVlLiBUaGluZ3MgYXJlIGRpZmZpY3VsdCwgYnV0IHRoaW5ncyBhcmVuIGp1c3QgZGlmZmljdWx0IGF0IEdhbHdheSBVbml0ZWQsIHRoZXkgYXJlIGRpZmZpY3VsdCB0aHJvdWdob3V0IHRoZSBjb3VudHJ5LiBTYXlzIFVuaXRlZCBoYXZlIHRvIGJlIGNyZWF0aXZlIGFuZCBzdGljayB0b2dldGhlciB0byBlbnN1cmUgdGhleSByZW1haW4gaW4gdGhlIHByZW1pZXIgZGl2aXNpb24uLiAKUG91cnF1b2kgbmUgc29tbWVzIG5vdXMgcGFzIGF1IGNvdXJhbnQgZGUgY2VsYSA/IFBhcmNlIHF1J2lsIGV4aXN0ZSBkZXMgbGFib3JhdG9pcmVzIGludHJlc3NzICBmYWlyZSB1bmUgdmVyc2lvbiBzeW50aHRpcXVlIHF1aSBsZXVyIGFwcG9ydGVyYSBkJ25vcm1lcyBwcm9maXRzLiBWb3VzIHBvdXZleiBkc29ybWFpcyBhaWRlciB1biBhbWkgZGFucyBsZSBiZXNvaW4gZW4gbHVpIGxhaXNzYW50LCBzYXZvaXIgcXVlIGxlIGp1cyBkZSBjaXRyb24gZXQgbGUgY2l0cm9uIGx1aSBtbWUgdGVsIHF1J2V4cGxpcXUgY2kgZGVzc3VzLCBlc3QgYm5maXF1ZSBkYW5zIGxhIHBydmVudGlvbiBkZSBsYSBtYWxhZGllLiBTb24gZ290IGVzdCBhZ3JhYmxlIGV0IGlsIG5lIHByb2R1aXQgcGFzIGxlcyBlZmZldHMgaG9ycmlibGVzIGRlIGxhIGNoaW1pb3RocmFwaWUuIENlIHNlY3JldCBiaWVuIGdhcmQgZXN0IG1haW50ZW51LCBhZmluIGRlIG5lIHBhcyBjb21wcm9tZXR0cmUgbGVzIG11bHRpIG1pbGxpb25uYWlyZXMgYm5maXF1ZXMgZGVzIGdyYW5kZXMgZW50cmVwcmlzZXMgPwpZb3VyIHBlcnNvbmFsIGRldGFpbHMgd2lsbCBub3QgYmUgc2hhcmVkIHdpdGggdGhvc2UgY29tcGFuaWVzICAgd2Ugc2VuZCB0aGUgZW1haWxzIGFuZCB5b3UgY2FuIHVuc3Vic2NyaWJlIGF0IGFueSB0aW1lLiAKVW5kZXJzdGFuZGFibHkgdGhpbmdzIGRvIGhhcHBlbiwgc3VjaCBhcyBoYXZpbmcgYSBjaGlsZCBvciBkZXZlbG9waW5nIGEgbWVkaWNhbCBjb25kaXRpb24sIGJ1dCBpdCBhZG1pdHRlZGx5IGhhcmQgdG8gbm90IGFzc3VtZSB0aGUgd29yc3QuIApZb3VyTGFkeXNoaXAgIDE0LDI4NSBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpUbyBtYWtlIGl0IGNsZWFyLCBHVE8gZ2V0cyBtaXNjb25zdHJ1ZWQgdG8gbWVhbiBhIGxvdCBvZiB0aGluZ3MsIGl0IGlzIGp1c3QgYSBsb25nIHRlcm0gdW5leHBsb2l0YWJsZSBzdHJhdGVneS4gCkFuZCBmb3IgbWUsIGl0IG1hZGUgbWUgdW5jb21mb3J0YWJsZSBiZWNhdXNlIEkga25ldyBoZSB3YXNuIGVuam95aW5nIGhpbXNlbGYsIHdoaWxlIEkgYXBwcmVjaWF0ZWQgdGhhdCBoZSB3YW50ZWQgdG8gbWFrZSBzdXJlIHRoYXQgSSB3YXMgaGF2aW5nIGZ1biwgaXQgaW1wb3J0YW50IHRvIG1lIGFzIGEgd29tYW4gdGhhdCBteSBwYXJ0bmVyIGlzIGVuam95aW5nIGhpbXNlbGYgdG9vLiAKSW1hZ2luZSBVYmVyIGdhdmUgeW91IHRoZSBsYXN0IHR3byBkaWdpdHMgb2YgdGhlIGxpY2Vuc2UgcGxhdGUgb2YgdGhlIGNhciBjb21pbmcgdG8gcGljayB5b3UgdXAuIEluIHRoaXMgZXhhbXBsZSB3ZSBzYXkgdGhleSB0ZWxsIHlvdSB0aGUgcGxhdGUgZW5kcyBpbiA3Mi4gClRoZXJlIG5vdGhpbmcgZXh0ZXJuYWwuIApPdGhlciBTb3V0aCBDb2FzdCBhcmVhcyB3aGljaCB3aWxsIG5vdCBiZSBhbGxvd2VkIHRvIGhhdmUgYW55IG1vcmUgcG9rZXIgbWFjaGluZXNpbmNsdWRlIEN1bGJ1cnJhIEJlYWNoLCBOb3dyYSwgU3QgR2VvcmdlcyBCYXNpbiwgU3Vzc2V4IElubGV0LCBVbGxhZHVsbGEsIEJhdGVtYW5zIEJheSwgTmFyb29tYSBhbmQgQmVybWFndWkuIFRoZSBwcm9wb3NlZCByZWZvcm1zIGhhdmUgYmVlbiBzbGFtbWVkIGJ5IHRoZSBOU1cgR3JlZW5zIHdobyBzYXkgdGhleSBkb24gaW5jbHVkZSB0aGUgbWVhc3VyZXMgd2hpY2ggc3RvcCB0aGUgYWRkaWN0aXZlIGZlYXR1cmVzIG9mIHRoZSBtYWNoaW5lcy4gCkxhIGNvbmZlcm1hIGRlbGwgbyBtZW5vIGRpIGRhdGkgcGVyc29uYWxpIGNoZSBsYSByaWd1YXJkYW5vLCBhbmNoZSBzZSBub24gYW5jb3JhIHJlZ2lzdHJhdGksIGUgbGEgY29tdW5pY2F6aW9uZSBpbiBmb3JtYSBpbnRlbGxlZ2liaWxlIGRlaSBtZWRlc2ltaSBkYXRpIGUgZGVsbGEgbG9ybyBvcmlnaW5lOwpJZiBhIExFTyBkb2VzIHNvbWV0aGluZyBhbmQgSSBkbyB0aGUgZXhhY3Qgc2FtZSB0aGluZyBpIHdpbGwgYmUgcHV0IGluIGphaWwgYW5kIG5vdGhpbmcgd2lsbCBoYXBwZW4gdG8gdGhlbS4gCldIVVQuIApEaXNwZW5zaW5nIG9mIG1lZGljYXRpb24gaXMgdG8gcmVkdWNlIHRoZSByaXNrIGNlbnRyYWxseSBhY3Rpbmcgb3Bpb2lkIGFuYWxnZXNpYyBjb3VudGVyIE9UQyBtZWRpY2F0aW9ucyB3aGljaC4gVGhlcmVmb3JlIHRoZSBkcnVnIHNob3VsZCBiZSBQcmUgbyBkbyByZW1lZGlvIG1vdGlsaXVtIC4KQXQgVG9ueSdzIHJlcXVlc3QgY3JlbWF0aW9uIGhhcyB0YWtlbiBwbGFjZS4gQXMgYW4gZXhwcmVzc2lvbiBvZiBzeW1wYXRoeSBkb25hdGlvbnMgdG8gdGhlIEp1cmF2aW5za2kgQ2FuY2VyIENlbnRyZSB3b3VsZCBiZSBhcHByZWNpYXRlZC4gVG9ueSB3aWxsIGFsd2F5cyBiZSByZW1lbWJlcmVkIGFzIGdlbmVyb3VzLCBmdW5ueSBhbmQga2luZC4gSGUgZW5yaWNoZWQgb3VyIGxpdmVzIGV2ZXJ5ZGF5LiBUb255LCB0aGF0IHNtaWxlIG9mIHlvdXJzIHdpbGwgYWx3YXlzIGJlIHdpdGggdXMuIEhhbGxlanRuYSBsYW1wYSBzdGFtcGEhLiAKR3Vlc3RzIGJlZ2luIHRoZWlyIGRheSB3aXRoIGEgZm91ciBjb3Vyc2Ugc2l0IGRvd24gYnJlYWtmYXN0IGFuZCBjbG9zZSBpdCB3aXRoIHNtYWxsIHBpZWNlIG9mIGhlYXZlbiwgYSB0cmVhdCBvZiBsb2NhbGx5IG1hZGUgV29vZGhvdXNlIENob2NvbGF0ZS4gCk5vdyB0aGlzIGd1aWRlIGlzIGFsc28gYmVnaW5uZXIgZnJpZW5kbHkgYXMgZmFyIGFzIGV4cGxhaW5pbmcgdGhpbmdzLCBhbmQgaXQgYXBwZWFycyB2ZXJ5IGdvb2QgYXMgZmFyIGFzIGNvdmVyaW5nIG5lYXIgZXZlcnkgc3RlcCBvZiB0aGUgcHJvY2VzcywgYnV0IG1hbiBpcyBpdCB2ZXJib3NlLiBXaGlsZSBJIGFkbWl0IEkgaGF2ZW4gcmVhZCB0aGUgd2hvbGUgdGhpbmcsIEkgd291bGQgcmVjb21tZW5kIHRoZSByZWFkIHN0aWxsIGFzIGl0IGdvb2QgdG8ga25vdyB0aGUgaW5zIGFuZCBvdXRzIG9mIHlvdXIgaGFyZHdhcmUgYW5kIHRoZSBvdmVyY2xvY2tpbmcgcHJvY2VzcyBzbyB5b3Uga25vdyB3aGF0IHRvIGxvb2sgZm9yIGlmIHRoaW5ncyBzdGFydCBnb2luZyB3cm9uZy4KSSB1bmRlcnN0YW5kIHlvdXIgY29uY2VybnMsIGJ1dCBJIHRoaW5rIHlvdSBhcmUgbWlzcmVwcmVzZW50aW5nIHdoYXQgaGFwcGVuZWQuIApJIGhhdmVuIHNwb2tlIHRvIGhlciBzaW5jZSAyMDE1LiAKQSBvbmUgd2F5IHRyYWluIHRyaXAgaW4gZWl0aGVyIGRpcmVjdGlvbiBhdmVyYWdlcyBqdXN0IG92ZXIgdGhyZWUgaG91cnMuLiAKTm9uIENvbXBldGUgQ2xhdXNlIEF0IHRpbWVzLCBhbiBpbmRlcGVuZGVudCBjb250cmFjdG9yIGFncmVlbWVudCBmb3IgbWFzc2FnZSB0aGVyYXBpc3RzIHdpbGwgaW5jbHVkZSBhIG5vbiBjb21wZXRlIGNsYXVzZS4gCkhvd2V2ZXIsIGF0IHByZXZpb3VzIGVtcGxveWVycywgd2UgdXNlZCB0b25zIG9mIFZQTiBjbGllbnRzIHNvIEkgd291bGRuJ3QgZXZlbiBrbm93IHVubGVzcyBpdCBzdHVjayBvdXQgZm9yIHNvbWUgcmVhc29uLgpNeSBvbmx5IGJyZWFrIHdhcyB3aGVuIGEgTHVtYmVyIHRydWNrIGRyb3BwZWQgZW5vdWdoIHRvIHdhcnJhbnQgYW5vdGhlciBhc3NvY2lhdGUgdG8gYmUgc2NoZWR1bGVkIGFuZCBkZWFsIHdpdGggaXQuLiAKSWYgdGhlIGJpZyBibGluZCByYWlzZXMgdG8gMTUwMCBwcmUgZmxvcCBpbnRvIGEgcG90IG9mIDUwMCB3aXRoIHRoZSBibGluZHMgYXQgMTAwIHRoZW4gYW5kIHlvdSBhcmUgc2l0dGluZyB3aXRoIHBvY2tldCBraW5ncyB5b3UgbXVzdCBub3cgY2FsbCAxNTAwIGludG8gYSBwb3Qgb2YgMjAwMCBzdXBwb3NpbmcgZXZlcnlvbmUgZWxzZSBmb2xkcywgaGF2aW5nIHRoZSBzZWNvbmQgYmVzdCBoYW5kIHRoZW9yZXRpY2FsbHkgeW91IGNhbiBqdXN0aWZ5IGNhbGxpbmcgMS4yNSB0byBvbmUgb24geW91ciBjaGlwcy4gCkNob29zZSBlaXRoZXIgYSBwb3J0YWJsZSBmbGFzaGxpZ2h0IHRoYXQgZml0cyBpbiBhIHBvY2tldCwgb3Igb3B0IGZvciBhIGJpZywgaGVhdnkgZHV0eSBtb2RlbCAgIG9yIGJldHRlciB5ZXQsIGdldCBib3RoLiAKVGhhdCBhbGwgSSB0cnlpbmcgdG8gc2F5LlNhZGx5LCBJIGRvbiB0aGluayB3ZSBldmVyIHNlZSBhIHJlYWwgY29uY2x1c2lvbiB0byB0aGlzIG1lc3MuIFRoZXJlIHdheSB0b28gbXVjaCBoZSBzYWlkL3NoZSBzYWlkIGFuZCBoaWdoIHByb2ZpbGUgcGVvcGxlIGludm9sdmVkLiBJdCBnb2luZyB0byB0YWtlIGEgbG9uZyB0aW1lIGJlZm9yZSBhbnl0aGluZyBnZXRzIHByb3ZlbiBhbmQgYnkgdGhlbiB0aGUgcHVibGljIHdpbGwgaGF2ZSBwcm9iYWJseSBtb3ZlZCBvbi4gCg==|<---