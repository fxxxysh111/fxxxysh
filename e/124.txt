--->|SGUgaGFkIGFsc28gdHJpZWQgY29jYWluZSBvbmNlLiBCZXlvbmQgaW50dWl0aW9uLCB0aGVyZSBhcmUgYSBmZXcgc3BlY2lmaWMgdGhpbmdzIHlvdSBjYW4gbG9vayBmb3IgdG8gaGVscCB5b3UgZGV0ZXJtaW5lIHdoZXRoZXIgYSBndXkgaXMgZW1vdGlvbmFsbHkgbWF0dXJlIGVub3VnaCBmb3IgYSBjb21taXR0ZWQgcmVsYXRpb25zaGlwLiBCeSBzdGF5aW5nIHBvc2l0aXZlIGl0IGNhbiBoZWxwIG90aGVycyBhcm91bmQgeW91LCBhbmQgaG9wZWZ1bGx5IGl0IGNhbiBoZWxwIGFueSBlbW90aW9uYWwgaW1tYXR1cmUgcGVyc29uIG9yIHBlb3BsZSB3ZSBoYXZlIGVuY291bnRlcmVkIGluIG91ciBsaXZlcy4uIApUaGV5IGFyZSBpbiBjaGFyZ2UsIHRocm91Z2ggdGhlaXIgZWxlY3RlZCByZXByZXNlbnRhdGl2ZXMgaW4gdGhlIG5hdGlvbmFsIGNvbmdyZXNzLCBvciBhdCBsZWFzdCB0aGF0IHRoZSB0aGVvcnkuIERpcmVjdCBjb250cm9sIG9mIHRoZSBtZWFucyBvZiBwcm9kdWN0aW9uIHRoZSB3YXkgTWFyeCBpbWFnaW5lZCBjb3VsZCBvbmx5IHdvcmsgaW4gTWFyeCB0aW1lLCB0aGUgMTg0MHMuIFNvb24gYWZ0ZXIgaGUgcHVibGlzaGVkIGhpcyBDb21tdW5pc3QgTWFuaWZlc3RvIHRoZSBzZWNvbmQgaW5kdXN0cmlhbCByZXZvbHV0aW9uIGhhcHBlbmVkLCB3aXRoIHRoZSBhZHZlbnQgb2YgbWFzcyBwcm9kdWN0aW9uLiAKSSB3YXRjaGVkIHRoZSB3aG9sZSB0aGluZyBhbmQgaXQgd2FzIGFtYXppbmcuIApCYXJlbHkgcmVsZXZhbnQgZWRpdDogSSBmZWVsIGxpa2UgdGhpcyB3b3VsZCBiZSBlYXNpZXIgaWYgZGVzdHJveWVycyBnb3QgbW9yZSBsb3ZlLCBJIHNlZWluZyBhIGxvdCBmcm9tIElvd2EgYW5kIE5ldyBKZXJzZXkgc2lkZSBvZiB0aGUgZW5nYWdlbWVudCwgYnV0IG5vdGhpbmcgZnJvbSBOb3dha2kuIFBvc3NpYmx5IGJlY2F1c2Ugc2hlIHdhcyBzdW5rIG5vdCBsb25nIGFmdGVyIHRiaApVcGRhdGUuIFNwb2tlIHdpdGggaGltIGZvciBhYm91dCBhbiBob3VyIHRvZGF5LiAKSW4gYWRkaXRpb24gdG8gdGhlIHBoeXNpY2FsIGJhcnJpZXIsIHRoZXJlIGlzIGFuIGltcG9ydGFudCBjaGVtaWNhbCBiYXJyaWVyIHdpdGhpbiB0aGUgbXVjdXMgdGhhdCBjb250YWlucyBpbW11bmUgYWdlbnRzLCB3aGljaCBuZXV0cmFsaXplIGFueSB0b3hpbiB0aGF0IGNvbWVzIGluIGNvbnRhY3QuQ2FuZGlkYSBleHVkZXMgYW4gYWxkZWh5ZGUgc2VjcmV0aW9uLCB3aGljaCBjYXVzZXMgc21hbGwgaW50ZXN0aW5lIGVwaXRoZWxpYWwgY2VsbHMgdG8gc2hyaW5rLiBUaGlzIGFsbG93cyBpbnRlc3RpbmFsIHRveGlucyB0byBpbmZpbHRyYXRlIHRocm91Z2ggdGhlIGVwaXRoZWxpdW0gYW5kIGludG8gdGhlIGJsb29kLiBUaGUgc2Vjb25kYXJ5IGJhcnJpZXIgaW1tdW5lIGFnZW50cyBpbiB0aGUgZXBpdGhlbGlhbCBtdWN1cyByZW1haW4gdGhlIHNvbGUgYWdlbnQgZm9yIG5ldXRyYWxpemF0aW9uLi4gCkFib2xpdGlvbiBpcyBidWxsc2hpdC4gCkkgcmVtZW1iZXIgdGhlIGNvdmVyIG9mIHRoZSBsb2NhbCBwYXBlciBoYXZpbmcgYW4gYXJ0aWNsZSBhYm91dCBpdCBzYXlpbmcgdGhlIGdpcmwgcGxlYWRlZCB3aXRoIGhlciBtb3RoZXIgdG8gc3RvcCBiZWZvcmUgc2hlIHdhcyBzbW90aGVyZWQgd2l0aCBhIHBpbGxvdy4uIApJZiB0d28gcGxheWVycyBkcmF3IGNhcmRzIG9mIHRoZSBzYW1lIHJhbmssIG9uZSB3YXkgdG8gYnJlYWsgdGhlIHRpZSBpcyB0byB1c2UgYW4gYXJiaXRyYXJ5IGhpZXJhcmNoeSBvZiBzdWl0cy4gClNlZWluZyBhIHBhY2sgb2YgZ3Jvd24gbWVuIGluIHVuaWNvcm4gb25lc2llcyBob2lzdGluZyB0aGVpciBmcmllbmQgdGhyb3VnaCByb2NreSB0ZXJyYWluIGlzIGxpa2VseSB3b3J0aCB0aGUgdGlja2V0IHByaWNlLi4gCkNoZWFwIEdvbGRlbiBHb29zZSBTdXBlcnN0YXIgU25lYWtlcnMgU2FsZSBmdGVyIGkgd291bGQgc2F5IHRoZSBib3Jyb3dlciBtYWtlcyBjbGVhciB0aGUgYWR2aWNlIG9mIHNpdHVhdGlvbiB3aG9tIGNhdXNlZCBteSBjcmVkaXQgY29uZGl0aW9ucyBhbmQgeW91IGhhdmUgd2VsbCB2ZXJzZWQgdGhlbSB0aGF0IG1vc3QgaXQgaXMgYWx3YXlzIGEgaWRlbnRpdHkgdGhlZnQgdG8gZ2V0IGluIHRoaXMgcHJvY2VzcyBpbnN0YW5jZSwgaGFzIHRoZW0gd3JpdGUgb3V0IGFjdHVhbGx5IHdoeSBvdXIgcHJvYmxlbSBoYXBwZW5lZC4gTWFrZSBjb252aW5jZWQgdGhleSBob21lIGFkZHJlc3MgYW5kIHBhZ2UgZm9yIGV2ZXJ5IHNpbmdsZSBkcmVhZGZ1bCBpdGVtIGFib3V0IHRoZSBiYWNrZ3JvdW5kIHJlcG9ydCBiYXNpY2FsbHkgbm8gbWF0dGVyIHRoZSB3YXkgaW4gd2hpY2ggb2xkIG9yIGEgaG93IHRpbnkgaXQgYXBwZWFycy4gR2V0IGl0IHRvIHNob3cgeW91IGluIGEgb3duIHdvcmRzIHdoeSB0aGVzZSBjb21wYW5pZXMgZmVlbCBkaXN0aW5jdCBwcm9ibGVtIGlzIG5vdCBnb2luZyB0byBoYXBwZW4gcmVtZW1iZXIgYW5kIGNvcnJlY3RseSB3aGF0IGN1c3RvbWVycyBoYXZlIG1vZGlmaWVkIGluIGEgcGVyc29uJ3MgbGlmZSB0byBtYWtlIHN1cmUgeW91IHByZXZlbnQgaXQgYWxsIGZyb20gcHJhY3RpY2luZyBzby4gWW91IG11c3QgaGF2ZSBvbmUgZXhwbGFpbiB3aHkgaXMgdGhpcyB0aGV5IGNhbiBiZSB0aGUgZXhwZXJ0IHNob3VsZCBsb2dpY2FsbHkgZXhwZWN0IG9uZSB0byBjb21lIHRvIGJlIGFibGUgdG8gaGVscCBtYWtlIG91ciBvd24gcGF5bWVudHMuCldpaiB2b25kZW4gb29rIGhpZXIgZWVuIGdlb2NhY2hlIGVuIGdlbm90ZW4gdmFuIGVlbiBtb29pIHVpdHppY2h0IHZhbmFmIGhldCBob2dlciBnZWxlZ2VuIHB1bnQuIFdhdCB2ZXJkZXIgZGFuIHdlZXIgaGV0IEdyYWYgdmFuIGRlIE9uYmVrZW5kZSBzb2xkYWF0LCBtZXQgZGUgZWV1d2lnZSB2bGFtLiBMYW5ncyBlZW4gbW9vaSBhYW5nZWxlZ2Qgd2F0ZXJzdHJvb21wamVzLCBtZXQgd2l0dGUgcGlsYWFydGplcyAoZGVlZCBvbnMgZGVua2VuIGFhbiBManVibGphbmEpIGVuIGZhc3Rmb29kIHRlbnRqZXMsIGt3YW1lbiB3ZSB0ZXJ1ZyBvcCBoZXQgTWFuZ2UgcGxlaW4uLiAKU29sbyBJIGNhbiBkbyBqdXN0IG92ZXIgNiBLTS9IUi4gQmV0dGVyIHRvIHBsYW4gZm9yIGEgbG9uZyBwYWRkbGUgdGhhbiB0byBnZXQgZGlzY291cmFnZWQgd2hlbiB5b3UgYXJlIG91dCBsb25nZXIgdGhhbiB5b3UgdGhvdWdodCB5b3Ugd291bGQgYmUuLiAKSWYgSSBjb3VsZCBzaW5nLCBkb24ndCB5b3UgdGhpbmsgS3JpcyBKZW5uZXIgd291bGQndmUgbWlsa2VkIHRoaXMgZm9yIGFsbCBzaGUgY291bGQndmU/Ii4gClRoZSBsYXcgc3RhdGVzIHlvdSBtdXN0IHB1dCBpbiBjb25zaWRlcmFibGUgZWZmb3J0IHRvIG1ha2Ugc3VyZSB0aGUgbG9zdCBpdGVtIGZpbmQgaXRzIHdheSBiYWNrIGludG8gdGhlIGhhbmRzIG9mIHRoZSBvd25lci4gSXQncyBhbHNvIHBvc3NpYmxlIHRoYXQgdGhlIHBob25lIGhhcyBhIHRyYWNraW5nIGRldmljZSBvbiBpdCwgYXMgbWFueSBzbWFydHBob25lcyBkbyBub3dhZGF5cywgZWl0aGVyIHRocm91Z2ggcGFpZCBjb250cmFjdCBzZXJ2aWNlcyBvciB0aHJvdWdoIGEgZG93bmxvYWRlZCBhcHAuIElmIGl0J3MgeW91cnMgYW5kIHlvdSBmb3Jnb3QgdGhlIGNvZGUsIHRha2UgaXQgdG8gdGhlIHJldGFpbGVyIHdpdGggcHJvb2YgeW91IG93biBpdC4gClRoZSBjb21tZW50YXJ5IHZhcmllcyBiYXNlZCBvbiB0aGUgYWN0aW9uLCBidXQgc2hlIGFsd2F5cyBhZ3JlZXMgd2l0aCBtZSAobW9zdGx5IGJlY2F1c2Ugc2hlIHVzdWFsbHkgcGF5aW5nIG5vIGF0dGVudGlvbiB0byB0aGUgYWN0aW9uIGF0IGFsbCBhbmQganVzdCBiZWluZyBuaWNlKS4gQnV0IEkgZ2V0IHRvIHRvdWNoIGhlciBidXR0IGEgbG90LgpMYXJnZXIgbWFya2V0cyBoYXZlIGxvY2FsbHkgcHJvZHVjZWQgdmFyaWV0eS90YWxrIHNob3dzOyBMaXR0bGUgUm9jayBzZWVtcyByZWFkeSBmb3IgaXQuIApGaXJzdCB0aW1lIHRvdXJpc3RzIGFycml2ZSBmb3IgdGhlIG1haW4gc3RyZWV0IHN0cm9sbCwgd2hlcmUgaGlzdG9yaWNhbCByZSBlbmFjdG9ycyBzdGFnZSBndW5maWdodHMgd2l0aCBxdWljayBzdG9yeWxpbmVzLCBjaGVjayBvdXQgd2hlcmUgbGVnZW5kYXJ5IFdpbGQgQmlsbCBIaWNrb2sgaGVsZCBoaXMgZGVhZCBtYW4gcG9rZXIgaGFuZCBvZiBibGFjayBhY2VzIGFuZCBlaWdodHMsIGFuZCBtYXliZSBtYWtlIHRoZSBhcmR1b3VzIHRyZWsgdG8gTW91bnQgTW9yaWFoIENlbWV0ZXJ5IHRvIHZpZXcgdGhlIGdyYXZlcyBvZiBXaWxkIEJpbGwsIGhpcyBhZG9yaW5nIENhbGFtaXR5IEphbmUgYW5kIHNoZXJpZmYgU2V0aCBCdWxsb2NrLiAKSWYgeW91J3JlIGxvb2tpbmcgdG8gZ2V0dGluZyBzb21ldGhpbmcgdGhhdCBpcyBnb2luZyB0byBjaGFuZ2UgdGhlIGF0bW9zcGhlcmUgYXJvdW5kIHlvdXIgbG9jYWwgcG9rZXIgZ2FtZSwgd2UgcmVjb21tZW5kIGdvaW5nIHdpdGggdGhlIDEwMDAgUGF1bHNvbiBUb3BoYXQgYW5kIENhbmUgUG9rZXIgQ2hpcHMgYW5kIHNlZWluZyB3aGF0IGhhcHBlbnMuIApUX0R1bWJzZm9yZEZ1ZWxlZCBieSB1bmljb3JuIGZhcnRzCk1pZGRsZSBjbGFzcyBuZWNlc3NpdGllcyBhcmUgZGlmZmVyZW50IHRoYW4gdGhleSB1c2VkIHRvIGJlIChubyBqdWRnbWVudCwgc3RhbmRhcmRzIGNoYW5nZSBhbmQgaXQncyBoYXJkIHRvIGJ1Y2sgdGhvc2Ugc3RhbmRhcmRzKS4gCkJlY2F1c2Ugb2YgdGhpcyBmZWFyLCBtYW55IG9mIHRoZSBvdGhlciBjb21tZW50ZXJzIGFyZSBhcmd1aW5nIHRoYXQgdGhlIGp1c3RpY2Ugc3lzdGVtIHVzZSBzb21lIG9mIHRoZSBvdGhlciB0b29scyBpbiBpdHMgYXJzZW5hbCB0byBjb21tdW5pY2F0ZSB0aGF0IHdoYXQgdGhlIGd1eSBkaWQgd2FzIHdyb25nIGFuZCB0aGF0IGl0IHNob3VsZCBub3QgYmUgZG9uZSBpbiB0aGUgZnV0dXJlLi4gCkFuZCB5ZXMsIEkga25vdyB0aGVyZSBhcmUgZWFzaWVyIG1vZGVzIGJ1dCBJIGNhbiBoZWxwIGJ1dCBmZWVsIGRpbHV0aW5nIHRoZSBleHBlcmllbmNlIGFzIG1lYW50IHRvIGJlIHBsYXllZCBpcyBkaXNob25lc3QgdG8gaG93IHRoZSBnYW1lIHdhcyBtZWFudCB0byBiZS4gCkl0IGdvdCB0aGlzIHdlaXJkIGxpbmVhZ2Ugb2YgZGlmZmVyZW50IGNvbXBhbmllcyB3aGljaCBsZWFkcyB0byBzb21lIGxvdWQgZ3JvdXBzIG9mIHBlb3BsZSBzZWVpbmcgYW55dGhpbmcgQmV0aGVzZGEgZG9lcyB3aXRoIHRoZSBJUCBhcyBpbGxlZ2l0aW1hdGUuIApBYm91dCBbaXRdIGhvdyBtYW55IG1vbnRobHkgc3Vic2NyaXB0aW9ucyBhcmUgeW91IHBheWluZz8gU3Vic2NyaXB0aW9ucyBhcmUgcmlzaW5nIGF0IHJlY29yZCByYXRlcy4gCkFueXRoaW5nIGFib3ZlIHRoZSBzdGF0dXMgcXVvIGlzIGEgcG9zaXRpdmUsIHdpdGggdGhlIGdyZWF0ZXN0IG1vcmFsIGdvb2QgYmVpbmcgc29tZW9uZSB3aG8gc2FjcmlmaWNlcyBldmVyeXRoaW5nLiBBbnlvbmUgd2hvIGdpdmVzIG1vcmUgdGhhbiB0aGV5IHRha2UgaXMgZG9pbmcgZ29vZCBmb3IgdGhlIHdvcmxkLiBBIGJpbGxpb25haXJlIHdobyBnaXZlcyBhd2F5ICQxMDBtIG1heSBiZSBsZXNzIGdvb2QgdGhhbiBhIGd1eSBtYWtpbmcgJDMwayB3aG8gZ2l2ZXMgYXdheSAkNWssIGJ1dCB0aGV5IGJvdGggZG9pbmcgZ29vZCBhbmQgbmVpdGhlciBpcyBpbmhlcmVudGx5IGltbW9yYWwgZm9yIHJldGFpbmluZyB0aGUgYW1vdW50IHRoZXkgZGlkbiBnaXZlLiAKSW4gYW4gZWZmb3J0IHRvIHByb3ZpZGUgYSBwYXRpbmEgb2YgbGVnaXRpbWFjeSwgb25lIHN1cnJvZ2F0ZSBuYW1lZCBWZW5hIEJsYW5jaGFyZCBjcmVhdGVkIHRoZSBJbnRlcm5hdGlvbmFsIFByb2Zlc3Npb25hbCBTdXJyb2dhdGVzIEFzc29jaWF0aW9uIHRvIHRyYWluIGFuZCBjZXJ0aWZ5IHNleCBzdXJyb2dhdGVzLiBUaGF0IGhlbHBlZCwgYnV0IG5vdCBtdWNoLiAiT25lIGlzIHRoZSBtYXR0ZXIgb2YgcmVzcGVjdGFiaWxpdHkuIFRoZXkgY291bGQgbm90IGdldCBjb25zZW5zdXMuIFNvbWUgcGVvcGxlIHdlcmUgc3Ryb25nbHkgaW4gZmF2b3IgYW5kIHNvbWUgd29ycmllZCBhYm91dCBsZWdhbCBpbXBsaWNhdGlvbnMuIiBBQVNFQ1QgbmV2ZXIgYWRvcHRlZCBhIGZvcm1hbCBwb2xpY3kgb25lIHdheSBvciB0aGUgb3RoZXIsIGJ1dCB0aGUgZGViYXRlIGl0c2VsZiByZWxlZ2F0ZWQgc3Vycm9nYWN5IHRvIHRoZSBzaGFkb3dzLgpOb3J3YXkgcmFwaWRseSBkZXZlbG9wZWQgdGhlbSwgYW5kIGFsbCB0aGUgb3RoZXIgcGxheWVycyBsYW5kZWQgb24gaGlzIGdyb3VwLiAKRGFiZWkgaXN0IGRpZSBjaGluZXNpc2NoZSBTcHJhY2hlICAgZ3JhbW1hdGlrYWxpc2NoIGJldHJhY2h0ZXQgICBlaGVyIHNpbXBlbC4gQWJlciBkaWUgdmllbGVuIG5ldWVuIFZva2FiZWxuLCBkaWUgbWFuIGFuIG5pY2h0cyBCZWthbm50ZXMgYW5kb2NrZW4ga2FubiwgdW0gc2llIHNpY2ggYmVzc2VyIG1lcmtlbiB6dSBrIHVuZCB2b3IgYWxsZW0gZGllIEF1c3NwcmFjaGUgbWl0IGRlbiB2aWVyIHZlcnNjaGllZGVuZW4gVCBkaWUgc2ljaCBmIGRhcyB1bmdlIE9ociBhbGxlIGdsZWljaCBhbmggYWJlciBhbGxlIGV0d2FzIGFuZGVyZXMgYmVkZXV0ZW4sIGsgZGVuIExlcm53aWxsaWdlbiBkb2NoIHJlY2h0IHNjaG5lbGwgKGljaCB3IG1hbCBzYWdlbiwgc3AgYW0gendlaXRlbiBUYWcpIGFuIGRlbiBSYW5kIGRlcyBXYWhuc2lubnMgZiBXZXIgc2ljaCBlaW5zdCBiZWltIE11c2lrdW50ZXJyaWNodCBhdSBzYWggZWluIEMgdm9uIGVpbmVtIENpcyB6dSB1bnRlcnNjaGVpZGVuLCBkZW0gd2lyZCBzaWNoIGF1Y2ggbmljaHQgc28gc2NobmVsbCBkZXIgYWt1c3Rpc2NoZSBVbnRlcnNjaGllZCB2b24gbSB1bmQgbSBvZmZlbmJhcmVuIChkYXMgZWluZSBoZWkgYmVzY2hpbXBmZW4sIGRhcyBhbmRlcmUgSGFuZi4gRGEgc2luZCBNaXNzdmVyc3Qgdm9ycHJvZ3JhbW1pZXJ0KS4gVHJvdHpkZW0gaXN0IGRpZXNlciBJbnRlbnNpdmt1cnMgamVkZW0genUgZW1wZmVobGVuLCBkZXIgZ2VyYWRlIG1hbCBkcmVpIFdvY2hlbiBaZWl0IGhhdC4gRGVubiBtYW4gZWlnbmV0IHNpY2ggbmljaHQgbnVyIEdydW5ka2VubnRuaXNzZSBpbiBNYW5kYXJpbiBhbiAod2FzIHNpY2ggaW0gTGViZW5zbGF1ZiBoZXV0enV0YWdlIGltbWVyIGd1dCBtYWNodCksIHNvbmRlcm4gbGVybnQgYXVjaCB2aWVsIENoaW5lc2lzY2hlIEdlc2NoaWNodGUgdW5kIEt1bHR1ci4gTWlyIGlzdCBlcnN0IHcgZGVzIEt1cnNlcyBhdWZnZWZhbGxlbiwgd2llIGVyc2NocmVja2VuZCB3ZW5pZyBpY2ggZGFyIHdpcmtsaWNoIHd1c3N0ZSB1bmQgU3RpY2hwcm9iZW4gYmVpIGVpbmlnZW4gbWVpbmVyLCBlaWdlbnRsaWNoIHJlY2h0IGdlYmlsZGV0ZW4gRnJldW5kZSwgaGFiZW4gZ2V6ZWlndCwgZGFzcyBhdWNoIHNpZSBldGxpY2hlIFdpc3NlbnNsIGluIEJlenVnIGF1ZiBDaGluYSB2ZXJmClRobmtzZnJ0aG1kbG4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSB3YW50IHRvIGJlbGlldmUgdGhlc2UgdGhpbmdzLiBJZiB3ZSByZWFsbHkganVzdCBkZWFsaW5nIHdpdGggYSBidW5jaCBvZiBudXRjYXNlcywgdGhlbiBhbGwgd2UgbmVlZCB0byBkbyBpcyBjb252aW5jZSByZWFzb25hYmxlIEdPUCBsZWFkZXJzIHRvIHN0b3AgbW9iaWxpemluZyB0aGVzZSBwZW9wbGUgdG8gd2luIGVsZWN0aW9ucy4gCkhlIGRpZCB0aGlzIHZvbHVudGFyaWx5LCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgaGUgbXVzdCd2ZSBrbm93biB0aGUgcG9saWNlIGhhZCBETkEgdHJhY2VzIG9mIHRoZSBraWxsZXIgYmVjYXVzZSBoZSB3YXMgdGhlIG9uZSB3aG8gbGVmdCB0aGVtIHRoZXJlLi4gCk5ldyBEb2xwaGlucyBRQiBDdXRsZXIgcHJhY3RpY2VzIGZvciBmaXJzdCB0aW1lIHNpbmNlIGVuZGluZyBicmllZiByZXRpcmVtZW50ClllYWggSSB3b3VsZCB0aGluayBpdCB3b3VsZCBiZSBkaWZmaWN1bHQgaWYgeW91IGFyZSBhIHBvbGljZSBvZmZpY2VyIGNhbGxlZCBmb3IgdGhpcyBraW5kIG9mIHN0dWZmLiBJIHdvdWxkIHRoaW5rIG1vc3QgcGVvcGxlIHdvdWxkIGZpbmQgdGhpcyAib2ZmZW5zaXZlIiBidXQgaXQgd291bGQgYmUgaGFyZCB0byBsZWdhbGx5IHByb3ZlIHRoYXQgdGhlIGludGVudCBpcyBzZXh1YWwgb3Igd2hhdGV2ZXIuIEkgd291bGRuIHdhbnQgbXkga2lkcyB0byBzZWUgdGhpcyBidXQgd2UgYWxzbyB0YWxrIGFib3V0IGV2ZXJ5dGhpbmcgc28gSSB0aGluayBJIGNhbiBuYXZpZ2F0ZSB0YWxraW5nIGFib3V0IHRoaXMgd2l0aCB0aGVtIHRvby4gCkFib3V0IGhhbGYgd2F5IGJldHdlZW4gV2VzdCBFZ2cgYW5kIE5ldyBZb3JrIHRoZSBtb3RvciByb2FkIGhhc3RpbHkgam9pbnMgdGhlIHJhaWxyb2FkIGFuZCBydW5zIGJlc2lkZSBpdCBmb3IgYSBxdWFydGVyIG9mIGEgbWlsZSwgc28gYXMgdG8gc2hyaW5rIGF3YXkgZnJvbSBhIGNlcnRhaW4gZGVzb2xhdGUgYXJlYSBvZiBsYW5kLiBUaGlzIGlzIGEgdmFsbGV5IG9mIGFzaGVzICAgYSBmYW50YXN0aWMgZmFybSB3aGVyZSBhc2hlcyBncm93IGxpa2Ugd2hlYXQgaW50byByaWRnZXMgYW5kIGhpbGxzIGFuZCBncm90ZXNxdWUgZ2FyZGVuczsgd2hlcmUgYXNoZXMgdGFrZSB0aGUgZm9ybXMgb2YgaG91c2VzIGFuZCBjaGltbmV5cyBhbmQgcmlzaW5nIHNtb2tlIGFuZCwgZmluYWxseSwgd2l0aCBhIHRyYW5zY2VuZGVudCBlZmZvcnQsIG9mIG1lbiB3aG8gbW92ZSBkaW1seSBhbmQgYWxyZWFkeSBjcnVtYmxpbmcgdGhyb3VnaCB0aGUgcG93ZGVyeSBhaXIuIE9jY2FzaW9uYWxseSBhIGxpbmUgb2YgZ3JheSBjYXJzIGNyYXdscyBhbG9uZyBhbiBpbnZpc2libGUgdHJhY2ssIGdpdmVzIG91dCBhIGdoYXN0bHkgY3JlYWssIGFuZCBjb21lcyB0byByZXN0LCBhbmQgaW1tZWRpYXRlbHkgdGhlIGFzaCBncmF5IG1lbiBzd2FybSB1cCB3aXRoIGxlYWRlbiBzcGFkZXMgYW5kIHN0aXIgdXAgYW4gaW1wZW5ldHJhYmxlIGNsb3VkLCB3aGljaCBzY3JlZW5zIHRoZWlyIG9ic2N1cmUgb3BlcmF0aW9ucyBmcm9tIHlvdXIgc2lnaHQuIApKZWZmcmV5IEVwc3RlaW4ncyBkZWFsIHdpdGggZmVkcyB3YXMgaWxsZWdhbApJIHRoaW5rIHRoZXkgbWVhbiB0aGlzLiBQcmFnbWF0aWNhbGx5LCB5b3UgbmVlZCB0byBnaXZlIHNvbWUgcmVzcG9uc2UgdG8gdGhlIHJlY3J1aXRlciB0byBkaXNzdWFkZSB0aGVpciBmZWFycyBhYm91dCB5b3UgaGF2aW5nIHRoZSBnYXAgYmVjYXVzZSB5b3UgaGFkIGEgam9iIHRoYXQgeW91IGdvdCBmaXJlZCBmcm9tIG9yIHNvbWV0aGluZyBhbmQgYXJlIGxlYXZpbmcgb2ZmIHlvdXIgcmVzdW1lLCBvciBhcmUgYSBzdWJwYXIgY2FuZGlkYXRlIHdobyBjb3VsZG4gZmluZCBhIGpvYi4gClJpY2sgSGFzZW4sIHdobyB0ZWFjaGVzIGNhbXBhaWduIGZpbmFuY2UgYW5kIGV0aGljcyBhdCBMb3lvbGEgTGF3IFNjaG9vbCBpbiBMb3MgQW5nZWxlcywgc2F5cy4gVGhhdCBTdXByZW1lIENvdXJ0IGRlY2lzaW9uIGNvbWluZyB1cCB0aGF0IGNvdWxkIGNoYW5nZSBldmVyeXRoaW5nICJUaGUgd2F5IHRoYXQgdGhlIFN1cHJlbWUgQ291cnQgaGFzIGJlZW4gaW50ZXJwcmV0aW5nIGNhbXBhaWduIGZpbmFuY2UgbGF3IGNvdWxkIHdlbGwgbGVhZCB1cyBpbnRvIGEgc3BpcmFsLCB3aGVyZSB3ZSBlbmQgdXAgd2l0aCBhIGRlcmVndWxhdGVkIGNhbXBhaWduIGZpbmFuY2Ugc3lzdGVtLiIuIApOb3RlLCBpbiBwYXJ0aWN1bGFyLCB0aGF0IHlvdXIgb3JkZXIgd2lsbCB0cmFkZSBhdCB0aGUgcHJpY2VzIHN0aXB1bGF0ZWQgYnkgdGhlIG9yZGVycyBhbHJlYWR5IGluIHRoZSBzZWxsIHNpZGUgb3JkZXIgYm9vay4gVGhpcyBpcyBjYWxsZWQgInByaWNlIGltcHJvdmVtZW50LCIgYW5kIGl0IHdvcmtzIGluIHlvdXIgZmF2b3VyIG9uIEJpdG1leCwgSUlSQy4gSSBjb3VsZCBiZSB3cm9uZyBvbiB0aGlzIHBvaW50LCB0aG91Z2guIEluIHBhcnRpY3VsYXIsIG9uIGV4Y2hhbmdlcyB0aGF0IGZhdm91ciB0aGUgbWFrZXIgaW4gcHJpY2UgaW1wcm92ZW1lbnQgKGRvIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IEkgYmVsaWV2ZSBCaXRtZXggZG9lcyksIHlvdSBlbmQgdXAgd2l0aCBzdHVwaWQgc2l0dWF0aW9ucyB3aGVyZSB0aGUgcHJpY2UgZHJvcHMgOTAlIGJlY2F1c2Ugc29tZW9uZSBhY2NpZGVudGFsbHkgcHV0IG9uIGEgc2VsbCBvcmRlciB3aXRoIGEgbWlzc2luZyB6ZXJvLCBhbmQgdGhlIGV4Y2hhbmdlIGRpZCB0aGUgdHJhZGVzIGF0IHRoZSBlcnJvbmVvdXMgcHJpY2UgaW5zdGVhZCBvZiB3YWxraW5nIGRvd24gdGhlIG9yZGVyIGJvb2sgZnJvbSB0aGUgYmVzdCAoaGlnaGVzdCkgYnV5IHByaWNlLgoiSGUgaGFkIGEgZnVsbCBkZXRhaWxpbmcgZG9uZSBvZiBib3RoIHRoZSBleHRlcmlvciBhbmQgaW50ZXJpb3Igb2YgaGlzIENhbWFybywgIiBzYWlkIHByb3NlY3V0b3IgTWljaGFlbCBOaWV0by4KU3VjaCBpcyB0aGUgbmF0dXJlIG9mIGxpZ2h0ZXJzLiAKU3RhcnR1cHMgbG92ZSB0aHJvd2luZyBhcm91bmQgdGhlIHdvcmQgImRpc3J1cHRpb24iIGEgYml0IHRvbyBtdWNoLCBidXQgdGhlc2UgYXJlIGV4YWN0bHkgdGhlIHR5cGUgb2YgbWFya2V0cyB0aGF0IGNhbiBiZSBkaXNydXB0ZWQuIEx1eG90dGljYSBtaWdodCBoYXZlIGJlZW4gYmFkIGZvciBjb25zdW1lcnMgYmVmb3JlIChhbmQgbWlnaHQgc3RpbGwgYmUgYmFkIGZvciBjb25zdW1lcnMgdG9kYXkpLCBidXQgdGhlaXIgZ3JpcCBvbiB0aGUgbWFya2V0IHNlZW1zIHRvIGJlIHNsaXBwaW5nLgpJbiB0aGUgcmFyZSBjYXNlIHRoYXQgeW91ciBzYXZlcyBnZXQgb3V0IG9mIHN5bmMsIHdoaWNoIGNhbiBoYXBwZW4gd2l0aCBQbGF5IEFueXdoZXJlIGdhbWVzIChwbGF5YWJsZSBvbiBib3RoIFhib3ggYW5kIFBDLCBzaGFyaW5nIHlvdXIgcHJvZ3Jlc3MpIGZvciBpbnN0YW5jZSwgeW91ciBYYm94IHNob3VsZCBwcm9tcHQgeW91IGFib3V0IGEgY29uZmxpY3QsIG1lYW5pbmcgdGhhdCB0aGVyZSBhcmUgdHdvIHNhdmVzICh3aXRoIHRpbWVzdGFtcHMhKSwgYW5kIHRoZW4gbGV0dGluZyB5b3UgcGljayBvbmUuIFlvdSBtb3N0IGxpa2VseSBuZXZlciBzZWUgdGhpcyBoYXBwZW4gZWl0aGVyLgpEb24gZGVzcGFpciwgYW5kIGRvbiB0cnkgdG8gZ28gaXQgYWxvbmUuIApUaGF0IGEgbG9vb29uZyB0aW1lIHRvIGJlIGFsb25lLiAKVGhleSBibGV3IHRoZSByb29mIG9mZiB0aGUgUm95YWwgdGhlaXIgZmlyc3QgdmlzaXQgdG8gRmVybmllLiAKV2UgZ2V0dGluZyBhIGxvb2sgYXQgdGhlIHRydWUgc3RhdGUgb2YgQ2FuYWRhJ3MgZWNvbm9teSAgIGFuZCBpdCdzIG5vIHdvcmxkIGJlYXRlckNhbmFkYSdzIGVjb25vbXkgcHJhY3RpY2FsbHkgZ3JpbmRzIHRvIGEgaGFsdCAgIGFuZCBub2JvZHkgc2F3IGl0IGNvbWluZ1N0ZXBoZW4gUG9sb3oncyBkYXNoYm9hcmQ6IFRoZSBsYXRlc3QgY2hhcnRzIHRoYXQgbWF0dGVyIG1vc3QgdG8gdGhlIEJhbmsgb2YgQ2FuYWRhCkl0IHdhc24ndCB0aWxsIDE5NjQgdGhhdCBhIHNlY29uZCBmZWF0dXJlIGJlY2FtZSBwb3NzaWJsZS4gKE8nU2hlYSBkaXJlY3RlZCB0aGUgc2Vjb25kIGFuZCB0aGlyZCBmZWF0dXJlcy4pIEluIHRoZSBtZWFudGltZSBoZSBjb250aW51ZWQgdG8gbWFrZSBzcG9uc29yZWQgZG9jdW1lbnRhcmllcyB0aGF0IHdlcmUgInNhdGlzZnlpbmcgYW5kIGFic29yYmluZy4iCkZpbmUgSSBoZXJlIHlvdSBzYXksIGp1c3QgZG8gSU0gTlohIFRoYXQgd2FzIHRoZSBpbml0aWFsIHBsYW4gYnV0IGJlaW5nIG9uIE1hcmNoIDZUSCB0aGUgdGltaW5nIGlzbiBncmVhdCBhcyBFYXN0ZXIgaG9scyBhcmUgbm90IHVudGlsIEFwcmlsIHdoZW4gd2UgY2FuIGFsbCB2aXNpdD8gU28gbXkgY3VycmVudCB0aG91Z2h0cyBhcmUgdGhhdCBJIHdpbGwgZ28gdG8gZG8gdGhlIENvdW50cnkgRW5lcmd5IElNIEF1c3RyYWxpYSBvbiAyOCBNYXJjaC4gClVuZGVyIEFybW91ciBwcm9kdWN0IHJldmlld3MgYW5kIGN1c3RvbWVyIHJhdGluZ3MgZm9yIE1lbidzIENvbGRHZWFyIFBvc3Nlc3Npb24gSUkgRm9vdGJhbGwgR2xvdmUuIFJlYWQgYW5kIGNvbXBhcmUgZXhwZXJpZW5jZXMgY3VzdG9tZXJzIGhhdmUgaGFkIHdpdGggVW5kZXIgQXJtb3VyIC5hbmQgd29ya291dCBnZWFyIGFuZCBlcXVpcG1lbnQsIGFuZCBtdWNoIG11Y2ggbW9yZSEgV2UgYXJlIEFsbCBGb290YmFsbCBBbGwgLiBDb21tZW50cyBhYm91dCBVbmRlciBBcm1vdXIgQWR1bHQgVGVhbSBDb2xkR2VhciBGb290YmFsbCBHbG92ZXM6IC4gCkNvbnN1bWUgdGhlbSBvbiBhbiBlbXB0eSBzdG9tYWNoLiBXaXRob3V0IHRoZSBkaWx1dGlvbiBvZiBmb29kLCBwcm9iaW90aWNzIGNhbiB3b3JrIHRvIHRoZWlyIGZ1bGwgcG90ZW50aWFsLiBEb24gdGFrZSB0aGlzIHRvbyBtdWNoIHRvIGhlYXJ0IHRob3VnaCAgIHRoZSBiZXN0IHRpbWUgdG8gdGFrZSBhbnkgcGlsbCBpcyB3aGVuIHlvdSByZW1lbWJlciEgQnV0IGlmIHlvdSBjYW4gdGltZSBpdCBhcm91bmQgeW91ciBlYXRpbmcgc2NoZWR1bGUsIHlvdSBnZXQgYSBiaXQgb2YgYm9udXMuIApVbmRlciBub3JtYWwgY2lyY3Vtc3RhbmNlcywgd2hlbiB5b3UgYXJlbiBkZWFsaW5nIHdpdGggdGhlIFBPVFVTLCBhIHN1c3BlY3QgaXMgcHV0IGluIGphaWwgdW50aWwgdGhlaXIgdHJpYWwuIFRoZXkgbWF5IHB1cnN1ZSBiYWlsIG9yIHRyeSB0byBnZXQgdGhlIGNoYXJnZXMgZHJvcHBlZCBhbmQgbm90IGhhdmUgdG8gZmFjZSB0cmlhbC4gV2l0aCB0aGUgUHJlc2lkZW50LCBoZSBzY290IGZyZWUgdW50aWwgaGlzIHRyaWFsLi4gCk9seW1waWMgYnJpZGdlLCBLb3JlYSBnb3QgdGhlIG9seW1waWNzIGluIDE5ODggYW5kIHRoZXJlcyBhIG5pY2UgYnJpZGdlIHRvIGNvbW1lbW9yYXRlIGl0LiBUdHVrc2VvbSByZXNvcnQsIHRoZXJlcyBhIGNvb2wgYXJlYSB0byBoYW5nIG91dCBhbmQganVzdCBjaGlsbCBuZXh0IHRvIGEgd2F0ZXIgcGFyay4gQWxsIHRoZXNlIHRoaW5ncyBhcmUgdmVyeSBhY2Nlc3NpYmxlIGJ5IHN1YndheS4uIApJIHNlZW4gbXkgbW90aGVyIG1heWJlIHRocmVlIHRpbWVzIHNpbmNlIGFuZCB3ZSBsaXZlIHR3ZW50eSBtaW51dGVzIGFwYXJ0LiAKU3VzYW4gaXMgYSBib2FyZCBjZXJ0aWZpZWQgbWFzc2FnZSB0aGVyYXBpc3Qgd2l0aCAzMCsgeWVhcnMgb2YgZXhwZXJpZW5jZS4gU2hlIGhhc3dyaXR0ZW4gc2V2ZXJhbCBiZXN0IHNlbGxpbmcgdGV4dGJvb2tzIHVzZWQgYXJvdW5kIHRoZSBnbG9iZSwgcHVibGlzaGVkIG1hbnkgWW91VHViZSB2aWRlb3MsIGFuZCBpcyBwdXJzdWluZyBhIGRvY3RvcmF0ZSBpbiBFZHVjYXRpb24uIFNoZSBpcyBhbiBvdXRzdGFuZGluZyBlZHVjYXRvci9wcmVzZW50ZXIgYW5kIGhhcyBiZWVuIGdpdmVuIHRoZSBuaWNrbmFtZSB0aGUgIllvZGEgb2YgTWFzc2FnZSIgYmVjYXVzZSBvZiBoZXIgbWFzc2FnZSB3aXNkb20gYW5kIHRlYWNoaW5nIGV4cGVydGlzZS4gU3VzYW4gaXMgcGFzc2lvbmF0ZSBhYm91dCBtYXNzYWdlIHRoZXJhcHkgYW5kIG1hc3NhZ2UgZWR1Y2F0aW9uLgpBbm90aGVyIHJlYXNvbiB0byB1c2UgZ29vZCBxdWFsaXR5IGNvbXBhbnkgZm9yIHlvdXIgRmlzaCBvaWwuIEl0IGRvZXNuIHBheSB0byBmaW5kIHRoZSBjaGVhcGVzdCB2aXRpZSBwcm9kdWN0cy4gWW91IHdvdWxkbiBzaG9wIGZvciBjaGVhcGVzdCBoZWFydCBzdXJnZW9uIGZvciBhIGxvdmVkIG9uZSB3b3VsZCB5b3U/Ckkgc3RhcnQgbG9va2luZyBmb3IgYSB3YXkgb3V0LCBhbmQgSSdtIGEgcHJldHR5IGJpZyBndXkgKDE4NCBjbSAxMDBrZydzLCBvbiB0aGUgZmF0IHNpZGUpLCBjYW4ndCBnZXQgb3V0IHRoZSBiYWNrIGJlY2F1c2Ugb2YgdGhlIHNlYXRzIGJlaW5nIGluIHRoZSB3YXkgYW5kIHJvb2YgY29tcGxldGVseSBzbWFzaGVkIGluLCBpbiB0aGUgZW5kIEkgbWFuYWdlIHRvIHNxdWVlemUgbXlzZWxmIG91dCBvZiB0aGUgZHJpdmVycyBzaWRlIHdpbmRvdywgd2hpY2ggaXMgZmFjaW5nIHRoZSBncm91bmQsIGhvdyBJIG1hbmFnZWQsIEknbGwgbmV2ZXIgdW5kZXJzdGFuZCwgSSBzdGFuZCB1cCBhbmQgaW1tZWRpYXRlbHkgZmVlbCBhbiBpbW1lbnNlIHBhaW4gaW4gbXkgcmlnaHQgbGVnLCBzbyBJIGNyYXdsIG91dCBvZiB0aGUgZGl0Y2ggYW5kIHNlZSBhIGNhciBjb21pbmcgZnJvbSB0aGUgc2FtZSBzaWRlIG9mIHRoZSByb2FkIEknbSBvbiwgd2F2ZSBoaW0gaW4sIHR1cm5zIG91dCBpdHMgdGhlIGNhciB0aGF0IHdhcyBzZXZlcmFsIDEwMG0gaW4gZnJvbnQgb2YgbWUsIGhlIHNhdyBhIG1hc3NpdmUgZHVzdCBjbG91ZCBhcHBlYXIgYmVoaW5kIGhpbSBhbmQganVzdCB0dXJuZWQgYXJvdW5kLgpUaGV5IGZvdW5kIHRoYXQgaGVhcnQgZmFpbHVyZSBwYXRpZW50cyBkZW1vbnN0cmF0ZWQgaGlnaGVyIGJhc2VsaW5lIENSUCBsZXZlbHMgYW5kIGxvd2VyIHNlcnVtIG1hZ25lc2l1bSBsZXZlbHMuIApJIHNob3VsZCBiZSBncmF0ZWZ1bCBmb3IganVzdCB0aGlzIHBob25lIGNhbGwgYmVjYXVzZSBzaGUgaXNuJ3QgYWxsb3dlZCB0byB0ZWxsIG1lIGFueXRoaW5nLiAKSGFsZiB0aGUgdGFibGUgc3RhcnRzIGhvb3RpbmcgYW5kIGhvbGxlcmluZyBiZWNhc2UgSSBoYWQgYSBzdXBlciB0aWdodCBpbWFnZSB3aGVuIGluIHJlYWxpdHkgSSBoYWQgYmVlbiBjYXJkIGRlYWQgZm9yIGVhc2lseSBvdmVyIGFuIGhvdXIgdXAgdG8gdGhhdCBwb2ludC4gQnV0dG9uIGZsYXRzIHRoZSAxMTAuIApUaGV5IGtub3cgaGUgaGFkIGEgcGxhbiB0byBzdXJ2aXZlIHRoZSBzaG9vdGluZyBhbmQgdHJ5IHRvIGVzY2FwZSwgdGhvdWdoIHdvdWxkIG5vdCBzYXkgaG93LgpNeSBjb21wbGljaXR5IGlzIG5vdCBhdCB0aGUgc2FtZSBsZXZlbCBhcyBhbiBvaWwgZXhlY3V0aXZlIGFuZCBuZWl0aGVyIGlzIHlvdXJzLiAKVGhpcyBwcm9wb3NlZCBjb21wcmVoZW5zaXZlIGhlYWx0aCBjYXJlIHBsYW4gaXMgYWtpbiB0byB1bml2ZXJzYWwgaGVhbHRoIGNhcmUgYW5kIGNvdWxkIHNhdmUgcmVzaWRlbnRzICQxLjYgYmlsbGlvbiBhbmQgYnVzaW5lc3NlcyAkMS4zIGJpbGxpb24gYWxsIHdpdGhvdXQgZGVkdWN0aWJsZXMuIApJIGRvbiB0cnVzdCB0aG9zZSBidGFyZHMgLiBJIGNvdWxkbiBiZWxpZXZlIGl0LCBpbiB0aGlzIGJhciwgdGhpcyBwbGFjZSBpcyBqdXN0IHRvcCBoZWF2eSB3aXRoIGFsbCB0aGVzZSBwb29mcyAuIEkgZG9uIHRydXN0IHRoZW0gYnRhcmRzLi4gClRoZSByZW1vdmFibGUgYmxhZGUgY2FydHJpZGdlcyBhcmUgSW50ZXJjaGFuZ2VhYmxlIGJldHdlZW4gcGluayBhbmQgbm9uIHBpbmsgc3R5bGVzIG9mIGhhbmRsZXMuIFlldCB0aGUgbWVuJ3MgcGFjayBvZiBibGFkZXMgaXMgb3ZlciAkMSBjaGVhcGVyIGF0IG15IGxvY2FsIHdhbGx5IHdvcmxkIGZvciBhIDYgcGFjay4gCiJZb3UgYXJlIGEgdHJ1ZSBXb25kZXIgV29tYW4uIApObyBkb3VidCB0aGUgNCBVSyBtZW1iZXJzIGFyZSB0cnVlIGJlbGlldmVycyBpbiB0aGUgc3VwZXJpb3JpdHkgb2YgSXNsYW0uIApXaGF0IGlzIHlvdXIgZmF2b3JpdGUgZ2FtZSBvZiBwb2tlcgoxLCBjaGFyZ2VkIHdpdGggYXR0ZW1wdGVkIG11cmRlciBhbmQgYmF0dGVyeSB3aXRoIHN1YnN0YW50aWFsIGJvZGlseSBoYXJtIHdpdGggYSBkZWFkbHkgd2VhcG9uIGZvciB0aGUgYmVhdGluZyBvZiBKdWRnZSBIYWx2ZXJzb24gb24gU2VwdC4gCkFueSBlbnRodXNpYXN0IHdpdGggZGVzaXJlIHRvIHRha2UgcGFydCBpbiB0aGlzIGFjdGl2aXR5IGNhbiB1c2Ugb25saW5lIHNvdXJjZSB0byBwbGF5IHRoZSBnYW1lLiBZb3UgbWF5IGhhdmUgdG8gZW5yb2xsIGZvciBwbGF5aW5nIGZyZWUgc2xvdHMuIFdpdGggbW9zdCBzbG90cyB0aGUgcG9ydGFscyBvZmZlciB5b3UgZnJlZSBzbG90cyBhbG9uZyB3aXRoIGZyZWUgc3BpbnMuIEhvd2V2ZXIsIHRoaXMgbWF5IGRlZXBlbnMgZnJvbSBwb3J0YWwgdG8gcG9ydGFsLiBZb3UgbWF5IGFsc28gY29tZSBhY3Jvc3Mgc29tZSBwb3J0YWwgd2hvIG1heSBhc2sgZm9yIHNpZ25pbmcgYW1vdW50IGJlZm9yZSB5b3UgcGxheSB0aGUgZ2FtZS4gSXQgaXMgc3VnZ2VzdGVkIHRoYXQgZXZlbiBiZWZvcmUgeW91IHN0YXJ0IHBsYXlpbmcgb24gd2FnZXIgeW91IHNob3VsZCBnYWluIHN1ZmZpY2llbnQga25vd2xlZGdlIGFuZCBleHBlcmllbmNlIG9mIHRoZSBnYW1lLiBIb3dldmVyLCB0aGUgYmVzdCBvcHRpb24gdG8gZW5qb3kgY2FyZWZyZWUgZ2FtZSBpcyB0aHJvdWdoIGZyZWUgc2xvdHMgb25saW5lLgpTaGUgYWxzbyBmYW5jaWVzIGhlcnNlbGYgYSBmb29kaWUgYW5kICJ0aGUgQmV5b25jIG9mIG15IGxpZmUgc3RvcnkuIiBBY2NvcmRpbmcgdG8gaGVyIGJpbywgQXVkcmV5IGNvbnNpZGVycyBoZXIgbW9tIGFuZCBkYWQgaGVyIGJlc3QgZnJpZW5kcyBhbmQgaGFzIHdvcmtlZCBhcyBhIHBpenphIGRlbGl2ZXJ5IHBlcnNvbiBhbmQgYW4gTU1BIFJpbmcgR2lybC4uIApUaGUgYnV6eiB0aGF0IHN3ZXB0IHRocm91Z2ggTGEgQmVsbGUgUHJvdmluY2UgICBhbmQsIGluIGZhY3QsIHRoZSBlbnRpcmUgY291bnRyeSAgIHdoZW4gdGhlIEhhYnMgcXVhbGlmaWVkIGZvciB0aGUgRWFzdGVyIENvbmZlcmVuY2UgZmluYWwgYWdhaW5zdCB0aGUgUmFuZ2VycyBsYXN0IHNwcmluZyB3YXMgc2ltcGx5IG92ZXJ3aGVsbWluZy4gSnVzdCBpbWFnaW5lLCB0aGVuLCBpZiBhIENhbmFkaWFuIHRlYW0gd2FzIHRvIGdldCB0byB0aGUgQ3VwIGZpbmFsIGFnYWluPwpUaGUgbW9sZWN1bGUgaXMgY2VydGFpbmx5IHViaXF1aXRvdXMuIFNvbWUgNjAwbSB5ZWFycyBhZnRlciBhbmltYWxzIGJlY2FtZSBtdWx0aWNlbGx1bGFyLCBtb3JlIHRoYW4gaGFsZiBvZiB0aGUgZmF0dHkgYWNpZCBtb2xlY3VsZXMgaW4gdGhlIGxpZ2h0IHNlbnNpdGl2ZSBjZWxscyBvZiB0aGUgaHVtYW4gZXllIGFyZSBzdGlsbCBESEEsIGFuZCB0aGUgcHJvcG9ydGlvbiBvZiBESEEgaW4gdGhlIHN5bmFwc2VzIG9mIHRoZSBicmFpbiBpcyBub3QgZmFyIHNob3J0IG9mIHRoYXQsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBzaW1pbGFyIG1vbGVjdWxlcyBhcmUgZmFyIG1vcmUgcmVhZGlseSBhdmFpbGFibGUuLiAKRmlyc3QgRm9yZWNhc3QgV2VhdGhlciBNYXJjaCA5CkZyb21za2ludG9saXF1aWQgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KVGhhdCdzIGZhc2NpbmF0aW5nICAgSSBub3RlIHRoZXNlIHRyZWVzIGFyZSBmb3VuZCBpbiBOYWdhbGFuZCwgd2hpY2ggaXMgYSBwbGFjZSB0aGF0IGhhZCBhIGJpZyBpbXBhY3Qgb24gbXkgbGlmZS4KR2FnYSB3YXMgcmVjZW50bHkgY2FsbGVkIHRvIGdpdmUgYSB2aWRlbyB0YXBlZCBkZXBvc2l0aW9uIGluIE5ldyBZb3JrIGFzIHBhcnQgb2YgdGhlIGNhc2UsIGFuZCBzaGUgc2hvY2tlZCB0aGUgbGVnYWwgcmVwcmVzZW50YXRpdmVzIGJ5IHJhaXNpbmcgaGVyIHZvaWNlIGFuZCBjdXJzaW5nIHByb2Z1c2VseSB0aHJvdWdob3V0IHRoZSBtZWV0aW5nLgpVbmUgZW50cmVwcmlzZSBwcm9ncmVzc2l2ZSBkZSBsb25ndWUgaGFsZWluZS4gVm91cyBwb3V2ZXogaHRlciBsZXMgY2hvc2VzIGVuIGluZGlxdWFudCBsZXMgcXVlc3Rpb25zIHZvdXMgdGVuYW50ICBjdXIuQ2UgcXUnaWwgZmF1dCByZXRlbmlyTGVzIHRlbmRhbmNlcyBhY3R1ZWxsZXMgc29udCBlbiBmYXZldXIgZCd1bmUgcmdpbWUgbyBsZXMgaHlkcmF0ZXMgZGUgY2FyYm9uZXMgKHN1Y3JlcykgZGV2cmFpZW50IGNvbnN0aXR1ZXIgbGEgcGFydCBsYSBtb2lucyBpbXBvcnRhbnRlIChyZ2ltZSBwYWxvIHZvaXIgY3RvZ25pcXVlIGVuIGNhcyBkZSBjYW5jZXIgZXQgb3UgZCdBbHpoZWltZXIpLiAKU2VyaW91c2x5LCB3aGVuIHdlIHNhdyBhbm90aGVyIHBlcnNvbiB3aG8gaXMgdGhlIHNhbWUgYWdlIGFzIHVzIGlzIG1ha2luZyB0b25zIG9mIG1vbmV5IHBsYXlpbmcgT25saW5lIEJsYWNramFjaywgd2Ugd2FudGVkIGEgcGllY2Ugb2YgdGhlIGFjdGlvbi4gQ29uc2lkZXJpbmcgYWxsIG9mIHVzIGhhdmUgam9icyB0aGF0IGFyZSBnb2luZyBub3doZXJlIGZhc3QsIHRoaXMgc2VlbWVkIGxpa2Ugb3VyIGJlc3Qgb3B0aW9uIGF0IHRoZSB0aW1lLiAKU29tZSBwZW9wbGUgdXNlIHNtYWxsZXIgInJvbGxlcnMiIGluY2x1ZGluZyBnb2xmIGJhbGxzIGFuZCBldmVuIG1hcmJsZXMuLiAKSXQgZGVwZW5kcyBvbiB0aGUgZGVwcmVzc2luZyBtb3ZpZS4gRm9yIGV4YW1wbGUsIGV2ZXJ5IEhvbG9jYXVzdCBmaWxtIGlzIGEgZGVwcmVzc2luZyBmaWxtLCBiZWNhdXNlIGl0IGFib3V0IHRoZSBIb2xvY2F1c3QuIFNvbWUgcGVvcGxlIHRoaW5rIExpZmUgSXMgQmVhdXRpZnVsIGlzbiBkZXByZXNzaW5nIGJ1dCBpdCBpcy4gSSBhbHNvIHRoaW5rIGl0IHN1Y2tzIGJ1dCB0aGF0IG5vdCB0aGUgcG9pbnQgaGVyZS4gQW55IEhvbG9jYXVzdCBtb3ZpZSBpcyBnb25uYSBiZSBkZXByZXNzaW5nIGNhdXNlIGl0IGEgZGVwcmVzc2luZyB0b3BpYy4gU28gaXMgYW55IG1vdmllIGFib3V0IGFuIGFjdHVhbCBob3JyaWJsZSBldmVudCwgbGlrZSBUaGUgTGFzdCBLaW5nIG9mIFNjb3RsYW5kIG9yIEhvdGVsIFJ3YW5kYSBvciBQZWFybCBIYXJib3IgKGNhdXNlIHlvdSBzYXQgdGhyb3VnaCB0aGUgdHVyZCkuCkNvdW50bGVzcyBzdG9yaWVzIHNldCBpbiB0aGUgMTk1MCBhbmQgNjAganV4dGFwb3NlIHRoZSBjb25zZXJ2YXRpdmUgY29uZm9ybWl0eSB3aXRoIG1vZGVybiByZXByb2JhdGVzIGxpa2UgcmFjaXNtLCBob21vcGhvYmlhLCBkcnVnIHVzZSwgc3BvdXNhbCBhYnVzZSBhbmQgUFRTRDsgYWxsIG9mIHdoaWNoIGNlcnRhaW5seSBleGlzdGVkIGluIHRoaXMgdGltZSBmcmFtZSwgYW5kIHdpdGhvdXQgcHVibGljIGFjY2VwdGFiaWxpdHksIGJ1dCBpdCBhcnJvZ2FudCBvZiBvdXIgY29ob3J0IHRvIGFzc3VtZSBldmVyeSBvbmUgb2YgdGhlc2Ugc2lucyB3YXMgdW5kZXIgdGhlIHN1cmZhY2Ugb2YgZXZlcnkgaG9tZSBhcyB3ZSAiY29ycmVjdCIgdGhlIGZhY2FkZSB3aXRoIG91ciBvcGVubmVzcyB0byB0aGVzZSBwcm9ibGVtcy4gSSBicmluZyB0aGlzIHVwLCBiZWNhdXNlIHRoZXJlIGlzIGEgdHJlbmQgdG8gcmVjb250ZXh0dWFsaXplIHRoaXMgdGltZSBwZXJpb2QgZm9yIHdoYXQgd2UgdGhpbmsgaXQgcHJvYmxlbXMgd2VyZSBmcm9tIG91ciBoZXVyaXN0aWMsIGFuZCBub3Qgd2hlcmUgdGhlIHBlb3BsZSwgYXQgdGhlIHRpbWUsIHdvdWxkIGFjdHVhbGx5IGZpbmQgYW54aWV0eS5JdCBpcyBwb3Agc2Nob2xhcmx5IHRvIGNpdGUgdGhhdCBob3Jyb3Igc3RvcmllcyBhcmUgcmVmbGVjdGl2ZSBvZiB0aGUgYW54aWV0aWVzIG9mIHRoZWlyIHRpbWUuIApJIGRvbiB3YW50IHRvIHNheSB0aGF0IHNpemUgbWVhbnMgbm90aGluZywgSSBhbHNvIGFncmVlIHdpdGggYW5vdGhlciBjb21tZW50ZXIgd2hvIG1lbnRpb25lZCB0aGF0IHRoZXJlIGlzIHN1Y2ggYSB0aGluZyBhcyBUT08gYmlnIGFzIHdlbGwuIApMYXd5ZXJzIGZvciB0aGUgc3RhdGUgYXJndWVkIHRoYXQgdGhlIEphY2tzb252aWxsZSBmYWNpbGl0eSBlc3NlbnRpYWxseSBlc3RhYmxpc2hlZCBhICJiYW5rLCIgZXZlbiBpZiBpdCBkaWQgbm90IGRpcmVjdGx5IG9wZXJhdGUgaXQuLiAKSGVyZSdzIHdoYXQgQnJpdGlzaCBzdGFycyB3b3JlIG9uIHRoZSByZWQgY2FycGV0Ck9uIGEgcmVjZW50IFRodXJzZGF5IG5pZ2h0LCBTUEQncyB2aWNlIHVuaXQgb3JnYW5pemVkIGEgZG91YmxlIHN0aW5nIG9wZXJhdGlvbiBvbiBBdXJvcmEgQXZlbnVlIE5vcnRoOiBUaHJlZSBtZW4gd2VyZSBhcnJlc3RlZCBmb3IgcGF0cm9uaXppbmcgYSBwcm9zdGl0dXRlIGFmdGVyIHNvbGljaXRpbmcgc2V4IHdpdGggdW5kZXJjb3ZlciBvZmZpY2VycywgYW5kIGEgc3VzcGVjdGVkIHBpbXAgd2FzIGFycmVzdGVkIGFmdGVyIHRyeWluZyB0byBjb252aW5jZSBvbmUgb2YgdGhlIFVDcyB0byB3b3JrIGZvciBoaW0uIApWSURFTzogV2F0Y2ggQXVzdHJhbGlhIGtpbmcgaW4gYWN0aW9uClBlcnJ5IGRpZWQgTWFyY2ggNHRoLCAyMDE5ICBkYXlzIGFmdGVyIHN1ZmZlcmluZyBhIG1hc3NpdmUgc3Ryb2tlLiAKVGhlc2UgbHV4dXJ5IGNhcm1ha2VycyBoYXZlIHRob3VnaHQgb2YgZXZlcnl0aGluZyAgIGV2ZW4gd2hhdCB0byBkbyB3aXRoIHRoZSBjaGFtcGFnbmUgZmx1dGVzIGJldHdlZW4gc2lwcy4gVG8gc29sdmUgdGhpcyBkaWxlbW1hLCBCZW50bGV5IHByb3ZpZGVzIGEgZm9sZG91dCB0YWJsZSBhcyB3ZWxsLiAKQWxsIGFyZSBhdmFpbGFibGUgb3ZlciB0aGUgY291bnRlci4gVGhpcyB3aWxsIGhlbHAgcmVkdWNlIHlvdXIgc3RvbWFjaCBhY2lkIGFuZCBtYXkgaGVscCBzb21lLiBJdCB3YXMgdGhlIGFuc3dlciB0byBteSB0dW1teSBwYWlucyEuIApRdWFudGl0YXRpdmUgQ2FyZWVyIEFzc2Vzc21lbnQgUXVhbnRpdGF0aXZlIGFzc2Vzc21lbnRzIHVzZSBzdGFuZGFyZGl6ZWQgdGVzdHMgdGhhdCBtZWFzdXJlIHNwZWNpZmljIGF0dHJpYnV0ZXMgb3Igc2tpbGxzLiBUaGV5IHJldmVhbCBsYXRlbnQgYWJpbGl0aWVzIGFuZCB0aGUgcG90ZW50aWFsIHRvIGRvIHNwZWNpZmljIGpvYnMsIGFuZCBzaG93IHdoZXRoZXIgeW91IGhhdmUgdGhlIGNhcGFjaXR5IHRvIGZvbGxvdyBhIHBhcnRpY3VsYXIgY2FyZWVyLiBFeGFtcGxlcyBvZiBxdWFudGl0YXRpdmUgYXNzZXNzbWVudHMgaW5jbHVkZSBwc3ljaG9tZXRyaWMgdGVzdHMsIHBlcnNvbmFsaXR5IGFzc2Vzc21lbnRzIGFuZCBhcHRpdHVkZSB0ZXN0cy4gClRoZSBzb21ld2hhdCBtaWxreSBzdWJzdGFuY2UgSSBtZW50aW9uZWQgZWFybGllciBpcyBmZW1hbGUgZWphY3VsYXRlLCBhbmQgaXNuJ3QgdXJpbmUuIEJ1dCBzcXVpcnRpbmcgbW9zdGx5IGlzLiBJdCdzIGEgY29tbW9uIG1pc2NvbmNlcHRpb24gcGVvcGxlIGhhdmUgdG8gbm90IGRpZmZlcmVudGlhdGUgYmV0d2VlbiB0aGUgdHdvLCBidXQgdGhlIHRoZXkgYXJlIGluIGZhY3QgdHdvIGRpZmZlcmVudCB0aGluZ3MuIFRoaXMgYXJ0aWNsZSBlbGFib3JhdGVzIG9uIHRoYXQuCkl0J3MgaW1wb3J0YW50IHRvIHRha2UgYSBsb29rIGF0IHlvdXIgd2VhcG9ucywgdGhvdWdoLCBhbmQgdG8gbWFrZSBzdXJlIHlvdSBjYW4gcmVsb2FkIGFzIGEgZnJlZSBhY3Rpb24gb2Z0ZW4gZW5vdWdoIHRvIGdldCBldmVyeSBzaG90IHlvdSBuZWVkIGZvciB0aGUgcm91bmQuIFdoaWxlIHRoZSBmdWxsIGF1dG8gb3B0aW9uIGNhbiBwdXQgYSBsb3Qgb2YgbGVhZCBpbiB0aGUgYWlyIChhbmQgZG8gc2VyaW91cyBkYW1hZ2Ugb25jZSB5b3Ugc3RhcnQgYWRkaW5nIHlvdXIgRGV4dGVyaXR5IG1vZGlmaWVyIHRvIHlvdXIgZGFtYWdlLCBvbiB0b3Agb2YgdGhlIGJvbnVzIGRhbWFnZSBmcm9tIERlYWRseSBBaW0pLCBpdCB0ZW5kcyB0byBlYXQgdGhyb3VnaCB5b3VyIHJlc291cmNlcyBpbiBzaG9ydCBvcmRlci4gCkZvciBleGFtcGxlLCBJIGhhdmUgRmx1eCBpbnN0YWxsZWQgb24gbXkgUEMsIHdoZW5ldmVyIGl0IGtpY2tzIGluIChldmVuaW5nKSBpZiBpIHBsYXlpbmcgYSBnYW1lIGl0IHdpbGwgc2xvdyBteSBQQyB0byBhIGNyYXdsIGZvciBsaWtlIDEwIHNlY29uZHMgdGhlbiBldmVyeXRoaW5nIHdpbGwgYmUgZmluZSBhZ2FpbiEgSnVzdCBhbiBpZGVhIGFueXdheS4gClRoZSBiYXJkIGdvZXMgaW4gYWxvbmUsIGluIGRpc2d1aXNlLiBUaGV5IGZpbmQgYSBnaWFudCwgc2xlZXBpbmcgb2dyZS4gQWxvbmcgdGhlIHdheSBJIGdpdmUgdGhlbSBzb21lIGJhY2tncm91bmQgaW5mbyBvbiBvZ3JlcyB0aGF0IHRoZXkga25vdyBiZWNhdXNlIG9mIGEga25vd2xlZGdlIGNoZWNrIGJ5IHRoZSBwYWxhZGluLiBCYXNpY2FsbHksIG9ncmVzIGFyZSBkdW1iIGFzIGhlbGwsIHdhbnQgdG8gZml0IGluIHdpdGggb3RoZXIgZ2lhbnRmb2xrLCBhbmQgYXJlIHN1cGVyIHF1aWNrIHRvIGFuZ2VyLiBJIGhvcGluZyB0aGlzIG1pZ2h0IGJlIGEgZGV0ZXJyZW50LiBObyB3YXkuClRoZSBFYXN0IFZhbmNvdXZlciBjaW5lbWEgd2FzIHBhY2tlZCB3aXRoIENyYXp5OHMgYWx1bW5pLCBhbG9uZyB3aXRoIGhvcGVmdWxzIGFuZCB0aGlzIHllYXIgY3JvcCBvZiBzaXggcGl0Y2ggd2lubmVycyBjaG9zZW4gZnJvbSAyMDAgYXBwbGljYW50cy4gVGhleSwgYWxvbmcgd2l0aCBpbmR1c3RyeSBsZWFkZXJzIGFuZCBhc3BpcmluZyBhY3RvcnMsIGNvbnZlbmVkIHRvIG5ldHdvcmssIHdhdGNoIHBhc3QgZmxpY2tzIGFuZCBzdXBwb3J0IHRoZSBuZXh0IGdlbmVyYXRpb24gb2YgZmlsbSB0YWxlbnQuIApUb29rIG15IGVhcmx5IGxlc3NvbnMgb24gdGhlIFNSMTI1LiAKSSBwbGF5ZWQgUGFsYWRpbnMgb24gWGJveCB1bnRpbCBteSBYYm94IGxpdmUgZXhwaXJlZC4gCkZyZXlhIG1pZ2h0IChldmVudHVhbGx5KSBzaWRlIHdpdGggS3JhdG9zIGluIHRoaXMsIGlmIGhlciBoYXRyZWQgZm9yIE9kaW4gaXMgc3Ryb25nZXIgdGhhbiB0aGF0IGZvciBLcmF0b3MgcmlnaHQgbm93LiBPdGhlcndpc2Ugc2hlIG1pZ2h0IGpvaW4gaW4gYXMgYSB0aGlyZCBwYXJ0eSwgcGVyaGFwcyBldmVuIG1hbmFnaW5nIHRvIHJhbGx5IHRoZSBWYWVuaXIgYW5kL29yIHRoZSBWYWxreXJpZXM7IEpybXVuZ2FuZHIgaXMgZGVmaW5ldGx5IG9uIEtyYXRvcyAob3IgQXRyZXVzKSBzaWRlIGFuZCB3aWxsIHByb2JhYmx5IGhlbHAgaGltIGluIHRoZSBmaWdodCBhZ2FpbnN0IFRob3IsIHdoaWNoIGluIGl0c2VsZiBpcyBvbmUgb2YgdGhlIHRyaWdnZXJzIGZvciBkaXZpbmUgQ2l2aWwgd2FyLiAKQSBmb3J1bSwgIkhvdyBJbXBvcnRhbnQgaXMgTXkgRGVwYXJ0bWVudD8iIHdhcyBjb25kdWN0ZWQgYnkgTW1lcy4gClRoZXJlJ3Mgbm8gYmVoaW5kIHRoZSBzY2VuZXMgbmVmYXJpb3VzbmVzcyB0YWtpbmcgcGxhY2UsIHRob3VnaC4gClNvbWUgcGVvcGxlIGhhdmUgYSB0YXN0ZSBmb3IgaXQgYW5kIHNvbWUgcGVvcGxlIGRvbiBCdXQgYmFzaWMgZWNvbm9taWNzIHNob3dzIHRoYXQgaWYgeW91IHJlZHVjZSB0aGUgcmlzayBwcmVtaXVtIG9mIHRob3NlIGpvYnMgdGhyb3VnaCBzdWJzaWR5IChha2EgVUJJKSB0aGV5IHdpbGwgYmVjb21lIGxlc3MgYXR0cmFjdGl2ZSB0byB0aGUgcGVvcGxlIGN1cnJlbnRseSBkb2luZyB0aGVtLiAKSW4gYSB0eXBpY2FsIGdhbWUsIHRoaXMgd2lsbCB3aW4geW91IHRoZSBwb3QsIGJ1dCB5b3Ugd2lsbCBsaWtlbHkgd2luIG9ubHkgdGhlIGJsaW5kcyBzaW5jZSBldmVyeW9uZSBlbHNlIHByb2JhYmx5IGZvbGRlZC4gCklkZW50aWZpY2F0aW9uIG9mIGFsbCB0aGUgd2lyZXMgZXh0ZW5kaW5nIGZyb20gdGhlIG1vdG9yIHNob3VsZCBiZSBpZGVudGlmaWVkLCBieSBlaXRoZXIgdXNlIG9mIGFuIG9obSBtZXRlciwgYW5kIGluIHNvbWUgY2FzZXMsIHRoZSBvbmx5IHdheSB0byBrbm93IGlzIHRvIHJlbW92ZSB0aGUgZW5kIGhvdXNpbmdzIGFuZCBwaHlzaWNhbGx5IGlkZW50aWZ5IHdoZXJlIHRoZSBleHRlcm5hbCBsZWFkcyBhcmUgY29ubmVjdGVkIG9uIHRoZSB3aW5kaW5ncy4gCktpZCBrZWVwcyB0cnlpbmcgdG8gdG91Y2ggc29tZXRoaW5nIHZlcnkgZGFuZ2Vyb3VzPyBBIHNtYWNrLCBtb3JlIHNob2NrIHRoYW4gaHVydCwgaXMgYSBsb3QgYmV0dGVyIHRoYW4gdGFraW5nIHRoZSByaXNrIG9mIHRoZW0gbG9zaW5nIGEgaGFuZCBvciBicmVha2luZyBhIHNrdWxsLgpCYXNpY2FsbHk6IHRoZSBhc3N1bXB0aW9ucyBvZiB3aW50ZXIgZHJpdmluZyBpbiB0aGUgbm9ydGhlYXN0IGFyZSBub3QgdW5pdmVyc2FsLCBzbyBzaXQgZG93bi4KVGhlaXIgY3JhemluZXNzIGlzIHRoZWlyIHJpc2sgYW5kIHJld2FyZC4gV3JpZ2h0J3MgZ3JlYXQgY3Vyc2UgaXMgdGhhdCBoZSdzIGEgdGFzdGVmdWwgcmV2b2x1dGlvbmFyeS4uIApEdW5jYW4gQ2hhbm5vbidzICJHYW1lIFJlY29nbml6ZSBHYW1lIiBmb3IgdGhlIEdvbGRlbiBTdGF0ZSBXYXJyaW9ycyBmZWF0dXJlcyBvdXQgb2YgaG9tZSB3b3JrIGluIHRoZSBCYXkgYXJlYSB3aGljaCBzaG93IHBsYXllcnMgZnJvbSB0b2RheSBhbG9uZ3NpZGUgImljb25pYyBXYXJyaW9ycyBhY3Jvc3MgdGhlIGRlY2FkZXMuIiBUViBzcG90cyBhbHNvIHNob3cgYSAiY3Jvc3MgZ2VuZXJhdGlvbmFsIiBXYXJyaW9ycyBnYW1lIHdpdGggcGxheWVycyBsaWtlIFJpY2sgQmFycnkgYW5kIEJhcm9uIERhdmlzIHRoYXQgcGxheSB3aXRoIFN0ZXBoIEN1cnJ5IGFuZCBLZXZpbiBEdXJhbnQuIApFZGl0OiBBbmdyeUQwOSwgSSBob25lc3RseSBhc2ssIHBsZWFzZSBnbyBzcGVuZCBsaWtlIGFuIGhvdXIgcmVhZGluZyBteSBwb3N0IGhpc3RvcnkuIFRha2UgY2FyZSB0byBzZXBhcmF0ZSBtZSB0cm9sbGluZyBhbmQgZGVsaWJlcmF0ZWx5IHRyeWluZyB0byBpbmNpdGUgcGVvcGxlIGZyb20gdGhlIGFjdHVhbCBjb21tZW50cy4gSSBrbm93IHdpdGggdHlwZWQgd29yZHMgaXQgbm90IG9mdGVuIGVhc3kgYnV0IEkgYmVsaWV2ZSB5b3Ugbm90aWNlIGEgY2VydGFpbiB0b25lIHRoYXQgc2VwYXJhdGVzIHRoZSB0d28gYW55d2F5LgpTdXJlLCB0aGUgcGxheWVycyBpbiAyLzUgdGVuZCB0byBiZSBiZXR0ZXIgdGhhbiB0aG9zZSBpbiBhIDEvMiBnYW1lLCBhbmQgdGhlIHBsYXllcnMgaW4gYSA1LzEwIGdhbWUgdGVuZCB0byBiZSBiZXR0ZXIgdGhhbiB0aG9zZSBpbiBhIDIvNSBnYW1lLCBidXQgeW91IHNpbXBseSBjYW5ub3QgaWdub3JlIHRoZSBlZmZlY3RzIG9mIHJha2Ugb24geW91ciBlYXJuaW5ncyBpZiB5b3UgaG9wZSB0byBiZWF0IGEgZ2FtZS4gCkNoZWNrIHJldmlld3MgYW5kIG1heWJlIGV2ZW4gZG8gYSBmcmVlIGluc3BlY3Rpb24gZGVhbCBzbyB5b3Uga25vdyB3aGV0aGVyIHlvdSB3YW50IHRoaXMgcGVyc29uIG9yIGNvbXBhbnkgd29ya2luZyBvbiB5b3VyIGhvbWUgaW4gdGhlIGZ1dHVyZS4gCkFkanVzdCBieSBwbGF5aW5nIGEgYml0IHRpZ2h0ZXIgYW5kIGV4dHJhY3RpbmcgbWF4IHZhbHVlIGZyb20gdGhlbSBvbiB0aGUgZmlyc3QgdHdvIHN0cmVldHMuIElmIHlvdSBpbiBwb3NpdGlvbiBhbmQgdGhleSBjaGVjayB0byB5b3UgYWZ0ZXIgYSBwb3RlbnRpYWwgZHJhdyBoaXRzIG9uIHRoZSByaXZlciwgeW91IHVzdWFsbHkgc2hvdWxkIGNoZWNrIGJhY2suIFRoZXkgd2lsbCBvZnRlbiBjaGVjayByYWlzZSBlaXRoZXIgdG8gc2xvdyBwbGF5IHRoZSBiaWcgaGFuZCBvciBhdHRlbXB0IGEgYmx1ZmYgd2l0aCBhaXIuIApBbm90aGVyIHBsYWNlIEkgbG92ZSBpcyBNYXVyaWNlIEFnYWluLCB5b3UgY2FuIGZpdCBpbnRvIGJvdGggdGhlaXIgcmVndWxhciBhbmQgcGx1cyBzaXplIGxpbmVzIHNvIG1vcmUgc2VsZWN0aW9uIGZvciB5b3UhIFRoZXkgaGF2ZSBhd2Vzb21lIGplYW5zIHRoYXQgYXJlIG9ubHkgJDM0IHRoZXJlLiBUaGUgZ3JlYXQgdGhpbmcgYWJvdXQgeW91ciBzaXplIGlzIHRoYXQgbW9zdCBwbGFjZXMgYXJlIGdvaW5nIHRvIGNhcnJ5IGEgMTQvMTYgdW5sZXNzIHlvdSBnbyB0byBhIHN1cGVyIGV4cGVuc2l2ZSBzdG9yZSBsaWtlIHNheSBCYW5hbmEgUmVwdWJsaWMuIFdoaWNoIHRoZXkgbWF5IGhhdmUgeW91ciBzaXplIHRoZXJlIGFueXdheSwgdGhleSBkb24gY2FycnkgbWluZSBzbyBJIG5ldmVyIHdlbnQgaW50byBvbmUuCkl0IG1pZ2h0IGJlIGEgYmV0dGVyIGNvbXBhcmlzb24gaWYgdGhlIERCIHdhcyBmYWNpbmcgdG93YXJkcyB0aGUgYmFsbCBhbmQgbWFraW5nIGEgcGxheSBvbiBpdCBldmVuIG1vcmUgc28sIGluIHRoYXQgc2l0dWF0aW9uLCBJJ2Qgc2F5IEdvcmRvbiB3b3VsZCd2ZSBiZWVuIGNhbGxlZCBvbiBPUEkuIApUcmFwcGVkIGFib2FyZCBhIGxhYiBvcmJpdGluZyB0aGUgZWFydGgsIHlvdSdsbCBiZSBpbXByZXNzZWQgYnkgdGhlIHVuY29udmVudGlvbmFsIGdhbWVwbGF5LCByaWNoIG5hcnJhdGl2ZSBhbmQgdGVuc2UgYXRtb3NwaGVyZSwgYnV0IHlvdSB3b24ndCBoYXZlIG11Y2ggZnVuLiAKUGVyaW9kLiBObyBmZWRlcmFsIG1hdGVybml0eSBsZWF2ZSwgbm8gc3VwcG9ydCBmb3IgY2hpbGRjYXJlLCBjaGlsZHJlbiBoZWFsdGggaW5zdXJhbmNlIG9uIHRoZSBjaG9wcGluZyBibG9jayBhbGwgdGhlIHRpbWUsIHNjaG9vbHMgZnVuZGVkIGRpc21hbGx5LCBhbmQgY29sbGVnZSBjb3N0cyBza3kgaGlnaC4gClRoZXNlIGZpZ3VyZXMganVzdGlmeSBHZWVsb25nIENvdW5jaWwgdHJ5aW5nIHRvIHN0ZW0gdGhlIHRpZGUgb2YgZ2FtYmxpbmcgaGFybSB0byBieSBvcHBvc2luZyBhbiBhcHBsaWNhdGlvbiBmb3IgMzAgZXh0cmEgbWFjaGluZXMgYXQgb25lIGxvY2FsIHZlbnVlLiBDb3VuY2lsIGxhd3llcnMgd2lsbCBhcHBlYXIgYmVmb3JlIHRoZSBjb21taXNzaW9uIGxhdGVyIHRoaXMgbW9udGggdG8gYXJndWUgdGhlaXIgY2FzZS4gCkEgVVMgbWlsaXRhcnkgd2lsbGluZyB1bnJlc2VydmVkbHkgdHVybiBhZ2FpbnN0IHRoZSBjaXRpemVucyA9IGEgZnVja2VkIGNpdGl6ZW5yeS4gCkluIHRoZSBhYm92ZSBleGFtcGxlLCBNYXR0IERvaGVydHkgaXMgcXVpY2tseSBvdXQgdG8gZW5nYWdlIEtvbGFzaW5hYywgd2hpbGUgUnlhbiBCZW5uZXQgaXMgYmxvY2tpbmcgdGhlIGNoYW5uZWwgSXdvYmkgd291bGQgbm9ybWFsbHkgYnVyc3QgaW50byBmb3IgdGhlIHJldHVybiBwYXNzIGFnYWluc3QgYSBiYWNrIGZvdXIuIFRoZXJlIGFyZSB0aHJlZSBXb2x2ZXMgZGVmZW5kZXJzIGJldHdlZW4gS29sYXNpbmFjIGFuZCBBdWJhbWV5YW5nLCBhbmQgdGhlIHZpc2l0b3JzIG91dG51bWJlciBBcnNlbmFsIGZpdmUgdG8gdHdvIGluIHRoaXMgc2l0dWF0aW9uLiBLb2xhc2luYWMgaXMgZm9yY2VkIHRvIHdoaXAgYSBjcm9zcyBpbiwgd2hpY2ggd2FzIGRlZmxlY3RlZCBmb3IgYSBjb3JuZXIuLiAKSXQgd2FzIGVhc3kgYmVjYXVzZSBpdCB3YXMgaG93IGRvIEkgZG8geCBhbmQgb2sgSSBjYW4ndCBkbyBpdCB0aGF0IHdheSwgc28gSSdsbCB3b3JrIGFyb3VuZCBpdC4uIApBbHNvIHRhbGtlZCB0byBKb2V5IHdobyBoZSBjb25zaWRlcmVkIGEgZnJpZW5kIGJ1dCBKb2V5IGFsc28gd2FzbiBoYXZpbmcgYW55IG9mIGl0IGFzIEpvZXkgd2FzIG1ha2luZyBhIHRvbiBvZiBtb25leSAoYWdhaW4gImNvbnRyYWN0IGlzIHNpZ25lZCIpLgpJdCBmcnVzdHJhdGluZyB0byBzZWUgc29tZWJvZHkgbGlrZSB0aGF0IHdobyByZWZ1c2VzIHRvIHRyeSBhbnl0aGluZyBuZXcgaW4gbGlmZS4gCkRldmVsb3BlZCBjb3VudHJpZXMgZG9uIGluY3JlYXNlIHRoZWlyIHJlZHVjdGlvbiB0YXJnZXRzIHRvIDQwIHBlcmNlbnQgYnkgMjAyMCB3aXRob3V0IG9mZnNldHMgdGhleSBhcmUgcmlza2luZyBmaXZlIGRlZ3JlZXMgQ2Vsc2l1cyBvZiB3YXJtaW5nIGFuZCBhIHBsYW5ldGFyeSBlbWVyZ2VuY3ksIFJlaG1hbiBzYWlkLgpMYXN0IHllYXIsIEZpbmFuY2UgTWluaXN0ZXIgQXJ1biBKYWl0bGV5IGhhZCBpbmZvcm1lZCBQYXJsaWFtZW50IHRoYXQgdGhlcmUgd2VyZSBubyByZWd1bGF0aW9ucyBnb3Zlcm5pbmcgdmlydHVhbCBjdXJyZW5jaWVzIGluIEluZGlhIGFuZCB0aGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIGhhZCBub3QgZ2l2ZW4gYW55IGxpY2VuY2UgdG8gYW55IGNvbXBhbnkgdG8gb3BlcmF0ZSBzdWNoIGN1cnJlbmNpZXMuIFRoZSBnb3Zlcm5tZW50IGhhcyBhbHNvIGNhdXRpb25lZCBjaXRpemVucyB0byBiZSB3YXJ5IG9mIGNyeXB0b2N1cnJlbmNpZXMsIHNheWluZyB0aGV5IGRvIGhhdmUgbm8gbGVnYWwgdGVuZGVyIGFuZCBwcm90ZWN0aW9uLi4gCkhlbmNlLCB0aGUgZmFjdCB0aGF0IHRoZXkgaGF2ZSB0aGUgZWNvbm9taWMgYWJpbGl0eSB0byBwcm92aWRlIHNvIG1hbnkgc29jaWFsIHNlcnZpY2VzLCBjYW4gYXQgbGVhc3QgYmUgcGFydGlhbGx5IGF0dHJpYnV0ZWQgdG8gdGhlIGZhY3QgdGhhdCBpbnN0ZWFkIG9mIG1ha2luZyB0aGUgc2FtZSBtaXN0YWtlcyB0aGUgQWxsaWVzIGRpZCBpbiBXV0kgYnkgcGxhY2luZyBoZWF2eSByZXBhcmF0aW9ucyBhbmQga2VlcGluZyBHZXJtYW55IGVjb25vbWljYWxseSBkZXByZXNzZWQsIHdlIHRvb2sgdGhlIG9wcG9zaXRlIGFwcHJvYWNoIGFuZCBidWlsZCB0aGVtIGJhY2sgdXAgYWZ0ZXIgYSBkZXZhc3RhdGluZyB3YXIsIHNvIHRoZXkgY291bGQgcmVnYWluIHRoZWlyIHBsYWNlIGFzIGEgc2VsZiBzdWZmaWNpZW50IGFuZCBwcm9kdWN0aXZlIG5hdGlvbi4KQ2h1bmcgd2lucyBpbmF1Z3VyYWwgTmV4dEdlbiBmaW5hbHMKTWFraW5nIGFuIGFwcHJvcHJpYXRlIHJlZmxlY3Rpb24gaW52b2x2ZXMgbm90IG9ubHkgaWRlbnRpZnlpbmcgYWNjdXJhdGVseSB0aGUgY2xpZW50J3MgZmVlbGluZ3MgYnV0IGFsc28gc2VsZWN0aW5nIHdpdGggc2Vuc2l0aXZpdHkgdGhlIGFwcHJvcHJpYXRlIHRpbWUsIHRvbmUgb2Ygdm9pY2UgYW5kIHdvcmRzIHRvIGNvbnZleSB0aGlzIHRvIHRoZSBvdGhlci4gCk5leHQsIHdoaWNoIHBhcnQgb2YgdGhlIGFycm93PyBJdCBub3QgYSBzaW5nbGUgc29saWQgY29sb3IuIEhlcmUgYSBibG93biB1cCB2aWV3IG9mIHRoZSBwcmV2aW91cyBzaWRlIGJ5IHNpZGUuCk5hdHVyYWxseSwgaXQgd2lsbCBkbyB3b25kZXJzIHRvIHlvdXIgc2VkdWN0aXZlIHBsYW4uIApIb21pZV9OYXJ3aGFsICAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpQbGFjZSBvbmUgaGFuZCB1bmRlciBlYWNoIGJ1dHRvY2sgYW5kIG1hc3NhZ2UgaXQsIHRoZW4gYnJpbmcgeW91ciBoYW5kIG91dCBhbG9uZyB0aGUgdW5kZXJuZWF0aCBvZiB0aGUgbGVnIGFuZCBkb3duIHRvIHRoZSBmZWV0LCBwdWxsaW5nIGV2ZXIgc28gZ2VudGx5LiAKVGhlcmUncyBhbHdheXMgb25lLiBBbmQgbm8gZ29vZCBkZWVkIGdvZXMgdW5wdW5pc2hlZC4KU3BlY2lmaWMgaW50ZXJ2ZW50aW9ucyBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3U3R1ZGllcyBvZiBhbiBpbnRlcnZlbnRpb24gdG8gcHJldmVudCBwZXJpbmVhbCB0cmF1bWEgd2VyZSBpbmNsdWRlZC4gVGhlc2UgaW5jbHVkZWQgdGhlIGZvbGxvd2luZzogZXBpc2lvdG9teSAobWVkaWFuIGFuZCBtZWRpb2xhdGVyYWwpOyBvcGVyYXRpdmUgdmFnaW5hbCBkZWxpdmVyeSAodmFjdXVtIG9yIGZvcmNlcHMpOyBwZXJpbmVhbCBtYXNzYWdlIGJlZm9yZSBvciBkdXJpbmcgbGFib3VyOyBiaXJ0aGluZyBwb3NpdGlvbjsgd2hpcmxwb29sIGJhdGhzOyBoZWFkIGZsZXhpb247IGhlYWQgcmVzdHJhaW50OyBwZXJpbmVhbCBzdXBwb3J0IG9yIGVhc2luZyBiYWNrIHRoZSBwZXJpbmV1bTsgcGVyaW5lYWwgY29tcHJlc3Mgb3IgbHVicmljYXRpb247IGRpZmZlcmVudCBtYXRlcm5hbCBwdXNoaW5nIGluc3RydWN0aW9uczsgdGltaW5nIG9mIGRlbGl2ZXJ5IHJlbGF0aXZlIHRvIGNvbnRyYWN0aW9uczsgYW5kIHBlcmluZWFsIGFuYWxnZXNpYS4KVGhhdHdoaWNoaXNjYWVzYXJzICA0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KV29ycnkgYWJvdXQgYW55dGhpbmcuIEhlIHNhaWQgdG8gb3VyIGNoaWxkcmVuLiBXaWxsIG1ha2UgeW91IGFuIGF3ZXNvbWUgaG9tZSBhbmQgYmUgdGhlIGJlc3QgbW90aGVyIGV2ZXIhIHdhcyB3aGVuIEJlbiBleHBsb2RlZC4gCkFmdGVyIGhpcyBmaXJzdCB2aXNpdCBoZSBzdG9wcGVkIGtpY2tpbmcgdXAgYXQgbXkgbGVnIHdoZW4gSSBhc2tlZCBmb3IgdGhlIGNhbnRlciBhbmQgd2Ugc2F3IGEgZHJhbWF0aWMgY2hhbmdlLiBFdmVyeSB2aXNpdCB0aGUgY2hpcm9wcmFjdG9yIGhhZCB0byBkbyBsZXNzIHdvcmsgYW5kIG15IGhvcnNlIHNlZW1zIHNvIG11Y2ggaGFwcGllciB1bmRlciBzYWRkbGUsIHdoaWNoIGhhcyBkb25lIHdvbmRlcnMgZm9yIGhpcyB0cmFpbmluZyBhcyB3ZWxsLiAKWW91IG1pZ2h0IGFzIHdlbGwgYXJndWUgdGhhdCBhIHN0cm9uZ2VyIHBlcnNvbiwgc29sZWx5IGJ5IGJlaW5nIHN0cm9uZ2VyLCBtaWdodCBhbHRlciB0aGUgY29udGV4dCwgYW5kIHRodXMgdGhlIHJhbmdlIG9mIGFjY2VwdGFibGUgYmVoYXZpb3IuIApGcm9tIGhpZ2ggc2hpbmUgbGVhdGhlcnMsIHRvIG1peGVkIGZsb3JhbCBkcmVzc2VzIGFuZCBuZW9uIGNvbG91ciBwb3BzLCBpdCdzIHNlcmlvdXNseSBnb2luZyB0byBiZSBhIGZvcmVmcm9udCB0cmVuZHNldHRpbmcgY29sbGVjdGlvbiBmb3IgdGhlIGhpZ2ggc3RyZWV0IG5leHQgc2Vhc29uLiBBbmQgb25lIGxvb2sgaW4gcGFydGljdWxhciB0aGF0IGNhdWdodCBvdXIgRmFzaGlvbiBGaW5kZXIgZXllIHdhcyB0aGlzIG9uZSBhcyBtb2RlbGxlZCBieSBHaWdpIEhhZGlkLgpJIGJhc2ljYWxseSBwcmVzY3JpYmVkIG15c2VsZiBhIHJlZ2ltZW4sIHN0dWNrIHRvIGl0IGFuZCBpdCB3YXNuJ3QgZnVuIGJ1dCBJIHdhcyBva2F5LiAKSnVzdCBnZXQgZm9jdXNlZCwgYW5kIGZvcmdldCBhYm91dCB0aGUgcGFpbiwgYW5kIGhvdyBoYXJkIGl0IHdpbGwgYmUuIEFsc28gSSB3b3VsZCByZWNvbW1lbmQgYm9va3MgYnkgTGFycnkgV2luZ2V0LiAKSGVyZSBpcyB0aGUgYmlnZ2VyIGlzc3VlLiBTaGUgaXMgdXBzZXQgb3ZlciB5b3VyIHBvc2l0aW9uIG9uIGFuIGlzc3VlIHRoYXQgZG9lc24ndCBhZmZlY3QgeW91IG9yIGhlciBpbiB0aGUgc2xpZ2h0ZXN0LiBTb21lIHBlb3BsZSBqdXN0IG5lZWQgc29tZXRoaW5nIHRvIGNyeSBhYm91dC4gCkkgZG9uJ3QgZXZlbiB0aGluayB0aGF0J3MgYSB3b3JkLiAKVGhlcmVmb3JlIGp1ZGdlIG5vdGhpbmcgYmVmb3JlIHRoZSBhcHBvaW50ZWQgdGltZTt3YWl0IHVudGlsIFRoZSBMb3JkIGNvbWVzLiAKT3VyIHN0YWZmIGlzIGZyaWVuZGx5IGFuZCBrbm93bGVkZ2FibGUgYWJvdXQgdGhlIGdhbWVzIHdlIGRlYWwgc28gZXZlbiB0aGUgbm92aWNlIHBsYXllciBjYW4gaGF2ZSBhIGdyZWF0IHRpbWUgYXQgb3VyIGV2ZW50cy4gV2UgaGF2ZSB3b3JrZWQgY2FzaW5vIHBhcnRpZXMgZm9yIENNVyBSZWFsIEVzdGF0ZSwgQ29vayBHTSBTdXBlcnN0b3JlLCB0aGUgU2FnaW5hdyBDaGFtYmVyIG9mIENvbW1lcmNlLCB0aGUgQmF2YXJpYW4gSW5uLCBETUwgTWFuYWdlbWVudCwgdGhlIFZhc3NhciBjbGFzcyBvZiA4NCBjbGFzcyByZXVuaW9uLCB0aGUgRnJhbmtlbm11dGggVGVhY2hlcnMgUHJvZmVzc2lvbmFsIE9yZ2FuaXphdGlvbiwgYXMgd2VsbCBhcyBtYW55IGJpcnRoZGF5IGFuZCBncmFkdWF0aW9uIHBhcnRpZXMuLiAKSGUgcmFyZWx5IHVwZGF0ZXMgaXQgYnV0IGhpcyBkZWZlbnNlIG9mIEhvcmFjZSBTbHVnd29ydGggY2hhbmdlZCBteSB3aWZlIG1pbmQgYWJvdXQgaGltIGFzIGl0IHdhcyBzd2VldCBhbmQgaW5zaWdodGZ1bCBhbmQgd2VsbCBhcnRpY3VsYXRlZC4gClN3aWZ0LCB3aG8gd2FzIHNlY29uZCB0byBCZXlvbmNlIGluIEdyYW1teSBub21pbmF0aW9ucyB3aXRoIGVpZ2h0IG5vZHMsIGFsc28gd29uIGJlc3QgY291bnRyeSBhbGJ1bSBhbW9uZyBoZXIgb3RoZXIgYXdhcmRzLiBUaGUgdmljdG9yeSBjYXBwZWQgYW4gYW1hemluZyBydW4gZm9yIFN3aWZ0LCB3aG9zZSAiRmVhcmxlc3MiIGlzIG9ubHkgaGVyIHNlY29uZCBhbGJ1bS4gCkltYWdpbmUgYmVpbmcgYWJsZSB0byBjbG9zZSB0aGUgZWxldmF0b3IgZG9vciBiZWZvcmUgdGhhdCBjdW50IEplc3NpY2EgdHJpZXMgdG8gZmlsbCBpdCB1cCB3aXRoIGdhcmJhZ2UgYW5kIGhlciBraWRzIGZlY2VzLiBZb3UgaW4gYSB0aHJlZSBwcmljZSBzdWl0IHRyeWluZyB0byBnZXQgdG8gd29yayB3aXRob3V0IHNtZWxsaW5nIGxpa2UgYSBkdW1wc3Rlci4gWW91IHNob3VsZG4gaGF2ZSB5b3VyIGVudGlyZSBkYXkvc3VpdCBydWluZWQgYmVjYXVzZSBKZXNzaWNhIHRha2VzIGFkdmFudGFnZSBvZiB0aGUgbGltaXRhdGlvbnMgc2V0IGluIGVsZXZhdG9ycyBkdWUgdG8gdGhlIEFtZXJpY2FucyB3aXRoIERpc2FiaWxpdGllcyBBY3QuCkFpbWluZyBmb3IgYSB3aGl0ZSBhbmQgc3BvdGxlc3MgZmFjZSBkb2Vzbid0IGhhcHBlbiBvdmVybmlnaHQuIFlvdSBtdXN0IHRha2UgZ29vZCBjYXJlIG9mIHlvdXIgc2tpbiB0b28sIGJ5IGVhdGluZyB0aGUgcmlnaHQga2luZHMgb2YgZm9vZC4gCk9uZSB3aWxkIGNhcmQgaW4gdGhlIHBlbmRpbmcgbmVnb3RpYXRpb25zIGJldHdlZW4gdGhlIEhvdXNlIGFuZCBTZW5hdGUgaXMgdGhlIFNlbWlub2xlIFRyaWJlLiBTbyBmYXIsIHRoZSB0cmliZSBoYXMgY29tZSBvdXQgaW4gb3Bwb3NpdGlvbiB0byBib3RoIGJpbGxzLiBUcmliZSBvZmZpY2lhbHMgaGF2ZSB0b2xkIGxlZ2lzbGF0b3JzIHRoYXQgYm90aCBiaWxscyBkZW1hbmQgaGlnaGVyIHBheW1lbnRzIGZyb20gdGhlIHRyaWJlIHdpdGhvdXQgcHJvdmlkaW5nIGFueSBhZGRpdGlvbmFsIHZhbHVlLCB3aGljaCBjb3VsZCBydW4gYWZvdWwgb2YgZmVkZXJhbCBsYXcuIFRoZSBBc3NvY2lhdGVkIFByZXNzIGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0LiBUaGlzIG1hdGVyaWFsIG1heSBub3QgYmUgcHVibGlzaGVkLCBicm9hZGNhc3QsIHJld3JpdHRlbiBvciByZWRpc3RyaWJ1dGVkLgpUaGV5IHdlcmUgcmlnaHQsIEkgbm90IGNvbGQgdW5sZXNzIHNpY2sgb3IgYWN0aXZlbHkgZnJlZXppbmcgbGl0ZXJhbGx5LiAKIkFtb25nIHBlcnNvbnMgbGl2aW5nIGluIGEgY29udHJvbGxlZCBzZXR0aW5nLCBjYWxvcmllcyBhbG9uZSBhY2NvdW50IGZvciB0aGUgaW5jcmVhc2UgaW4gZmF0OyBwcm90ZWluIGFmZmVjdGVkIGVuZXJneSBleHBlbmRpdHVyZSBhbmQgc3RvcmFnZSBvZiBsZWFuIGJvZHkgbWFzcywgYnV0IG5vdCBib2R5IGZhdCBzdG9yYWdlLiIgICBCcmF5IGV0IGFsLiwgMjAxMgpIZSBtYWtlcyBubyBhcG9sb2dpZXMgYWJvdXQgdGhlIGNsb3NlZCBkb29yIGNhdWN1cyBtZWV0aW5ncyBpbnZvbHZpbmcgbG9iYnlpc3RzLiBIZSBhbHNvIGhhcyBzb21lIGludGVyZXN0aW5nIHN0dWZmIHRvIHNheSBhYm91dCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gR09QIGxlYWRlcnMgYW5kIHRoZSBnb3Zlcm5vci4gV2hpbGUgdGhlcmUgYXJlIGJpZyBwaGlsb3NvcGhpY2FsIGRpZmZlcmVuY2VzLCBpdCBhcHBlYXJzIHRoZXkgc3RpbGwgcGxhbiB0byB0cnkgYW5kIHdvcmsgdG9nZXRoZXIuIApHZXR0aW5nIHdhdGVyIHRvIHdoZXJlIHdlIHdhbnQgdG8gbGl2ZSBvdXRzaWRlIG9mIEVhcnRoIGlzIG9uZSBvdXIgYmlnZ2VzdCBjaGFsbGVuZ2VzLCBidXQgdGhlIFRhdSBjYW4ganVzdCBzZXQgdXAgb25lIHBsYW5ldCB0byBzb3VyY2Ugd2F0ZXIgZm9yIGFsbCB0aGUgb3RoZXJzIHRoYXQgbmVlZCBleHRyYS4uIApXaGF0IGFyZSB0aGUgb2RkcyBvZiBnZXR0aW5nIGEgcm95YWwgZmx1c2ggaW4gVGV4YXMgaG9sZCBlbQpEb2luZyB0aGF0IHdoaWxlIGdvaW5nIHRvIHNjaG9vbCBhbmQgYmVpbmcgYmV0d2VlbiBob21lcyBtYWtlcyBpdCBoYXJkZXIuIApJZiBhbnlvbmUgc2hvdWxkIGJlIHNob3djYXNlZCBhcyBhIGNvbW1lbnRhdG9yIG9uIG9uZSBvZiB0aG9zZSBiaWcgcG9rZXIgVFYgcHJvZ3JhbXMsIGl0J3MgdGhlIE1hZCBHZW5pdXMuIEhlIGhhcyBleHBlcmllbmNlLCBrbm93bGVkZ2UsIGFuIG9waW5pb24gYW5kIGEgd2lsbGluZ25lc3MgdG8gYmFjayBpdCB0byB0aGUgaGlsdCAgIG5vdCB0byBtZW50aW9uIGEgY29sb3JmdWwsIGNhcmVmdWxseSBjdWx0aXZhdGVkIGNvdW50ZW5hbmNlIHRoYXQgaGFzIGNoYW5nZWQgbGl0dGxlIHRocm91Z2ggdGhlIGRlY2FkZXM6IFRoaW5rIExhcnJ5IEZpbmUgbWVldHMgQWxsZW4gR2luc2JlcmcgbWVldHMgQm96by4uIApHYWdhIGhhcyBtYW55IHRhdHRvb3MgYW5kIGdldHMgbmV3IG9uZXMgb2Z0ZW4uIEl0IGFsc28gaW5jbHVkZXMgd2hlcmUgeW91IGNhbiBhY3F1aXJlL2xpc3RlbiB0byB0aGVtLiBUb3RhbCBvbiB0aGlzIGxpc3Q6IDEwMSAxIDE0KSAiQm9ybiBUaGlzIFdheSAoT3JpZ2luYWwgQWxidW0pICI6IE1hcnJ5IFRoZSBOaWdodC9Cb3JuIFRoaXMgV2F5L0dvdmVybm1lbnQgSG9va2VyL0p1ZGFzL0FtZXJpY2Fuby9IYWlyL1NjaGVpZSAvIEJsb29keSBNYXJ5IC8gQmFkIEtpZHMvSGlnaHdheSBVbmljb3JuIChSb2FkIFRvIExvdmUpL0hlYXZ5IE1ldGFsIExvdmVyL1lvIGFuZCBJL1RoZSBFZGdlIE9mIEdsb3J5LiAKRm9yIGV4YW1wbGUsIHRoZSBkb3dubG9hZCBvZiB0aGUgd2hvbGUgb3IgbWF0ZXJpYWwgcGFydHMgb2YgYW55IHdvcmsgb3IgZGF0YWJhc2UgaXMgcHJvaGliaXRlZC4gClJlYWxseSBJIGJlaW5nIGRlbHVzaW9uYWwgd2hlbiBJIHNheSBJIGdvaW5nIHRvIHdhbGsgYXdheSBvbmNlIEkgaGl0IGEgZGVjZW50IHdpbi4gSXQgb25seSB3aGVuIHlvdSBsb3NlLCB5b3UgY2FuIHJlZmxlY3Qgb24geW91ciBkZWNpc2lvbnMgYW5kIHRoaW5rIG1vcmUgcmF0aW9uYWwuIEEgbG90IGVhc2llciBzYWlkIHRoYW4gZG9uZSwgYnV0IEkgaG9wZSB5b3UgY2FuIGN1dCB5b3VyIGxvc3NlcyBhbmQgc3RheSBmcmVlIGZyb20gdGhpcyBjYW5jZXIuLiAKVGhleSB3ZXJlIHZlcnkgZ29vZCBjb21yYWRlcyBpbiB0aGVpciByYW1ibGVzIGFuZCB0aGVpciBmaXJlc2lkZSBjb21tdW5pbmdzLiBFYWNoIGhhZCBzb21ldGhpbmcgdG8gZ2l2ZSB0aGUgb3RoZXIgZWFjaCBmZWx0IGxpZmUgdGhlIHJpY2hlciBmb3IgZnJpZW5kbHkgZXhjaGFuZ2Ugb2YgdGhvdWdodCBhbmQgZnJpZW5kbHkgc2lsZW5jZTsgZWFjaCBsb29rZWQgYWNyb3NzIHRoZSB3aGl0ZSBmaWVsZHMgYmV0d2VlbiB0aGVpciBob21lcyB3aXRoIGEgcGxlYXNhbnQgY29uc2Npb3VzbmVzcyBvZiBhIGZyaWVuZCBiZXlvbmQuIApXaGVuIEkgaW4gdGVtcHMgYmVsb3cgemVybyBidXQgbm90IGluIHRoZSBzbGVlcGluZyBiYWcgaWQgd2FudCBtb3JlIGxvZnQgdGhhbiB0aGUgbWFnbWEgamFja2V0IG9yIG1pY3JvIHB1ZmYsIGluIGZhdm9yIG9mIGEgYm94IGJhZmZsZWQgZG93biBob29keSBvciBzb21ldGhpbmcgd2l0aCA+NSBveiBvZiBkb3duLiBJIHVzZSBhbiByMSBhbmQgYWxwaGEgYXIsIHRoZW4gbGF5ZXIgYSByYWIgZWxlY3Ryb24gaW4gYmV0d2VlbiB3aGVuIHN0YXRpYyBhbmQgdGhpcyBnZXRzIG1lIGludG8gdGhlIG5lZ2F0aXZlcyB3aXRoIGhhdCBnbG92ZXMgZXRjLiAKVGhlIHN0b3J5IGZvbGxvd3MgU2hpcmxleSB0aHJvdWdoIHRoZSBiZWdpbm5pbmcgb2YgaGVyIG5ldyBsaWZlIGFzIGFuIGV2YWN1ZWUuIFNoZSBpcyBzaHkgYW5kIGhhcyBubyBmcmllbmRzLCBhbmQgcGVvcGxlIHNlbnNlIHRoaXMuIFdoZW4gaG9zdCBmYW1pbGllcyBhcmUgY2hvb3NpbmcgZXZhY3VlZXMsIFNoaXJsZXkgaXMgb25lIG9mIHRoZSBsYXN0IDMgY2hpbGRyZW4gdG8gYmUgcmVob21lZC4gRXZlcnl0aGluZyBpbiBoZXIgbGlmZSBpcyB0dXJuZWQgdXBzaWRlIGRvd24gZmlyc3Qgc2hlIGhhcyB0byBjb3BlIHdpdGggaGVyIGZhdGhlciBsZWF2aW5nIGZvciB3YXIsIHRoZW4gc2hlIGhhcyB0byBsZWF2ZSBoZXIgbW90aGVyIGJlaGluZCBpbiBMb25kb24gd2hlbiBzaGUgaXMgZXZhY3VhdGVkIHRvIHRoZSBjb3VudHJ5LCBhbmQgc2hlIGhhcyB0byBjb3BlIHdpdGggbGl2aW5nIHdpdGggc3RyYW5nZXJzLgpJbnRlcm5hdGlvbmFsIEZpdG5lc3MgaXMgYSBuaWdodG1hcmUgdG8gd29yayBmb3IuIApJIHdlbnQgb3V0IGxlc3MgYW5kIGxlc3MgYW5kIHdhcyByYXJlbHkgcGh5c2ljYWxseSBhY3RpdmUuIApKRiBQdGFrIFNjaWVuY2UgQm9va3MgUG9zdCAyNzIzCiJUaGV5IHNob3VsZCByZW5kZXIgdGhlaXIgcmVwb3J0LiBQdXQgdXAgICBJIG1lYW4gSSBndWVzcyBpZiB3ZSB3ZXJlIHBsYXlpbmcgcG9rZXIgKHlvdSB3b3VsZCBzYXkpICdQdXQgdXAgb3Igc2h1dCB1cC4nIFdoYXQgZG8geW91IGdvdD8iIEdpdWxpYW5pIHNhaWQuICJXZSBoYXZlIGV2ZXJ5IHJlYXNvbiB0byBiZWxpZXZlIHRoZXkgZG9uJ3QgaGF2ZSBhbnl0aGluZyBvZiB0aGUgUHJlc2lkZW50IGRvaW5nIGFueXRoaW5nIHdyb25nLiBJIGRvbid0IHRoaW5rIHRoZXkgaGF2ZSBhbnkgZXZpZGVuY2UgaGUgZGlkIGFueXRoaW5nIHdyb25nLiIKQ2hlY2sgZm9yIGJlZCBidWdzIHByaW9yIHRvIHNpZ25pbmcuIApTY2hsZWlzbmVyIHBsYW5zIHRvIHJldHVybiB0byB0aGUgdW5pdmVyc2l0eSB0byBjb21wbGV0ZSB0aGUgbGF3IGNvdXJzZSBoZSBzdGFpcnRlZC4gSGlzIGFkZHJlc3MgaXMgMjQxIFBvcnQgQ28uLCBQb3J0IG9mIFdoaXR0aWVyLCBBbGFza2EuIApUaGUgc2NlbnQgd29uJ3QgcmlzZSBhcyBxdWlja2x5IGFuZCBiZSBhcyBpcnJpdGF0aW5nIHRvIG90aGVycy4gWW91J2xsIGZpbmQgdGhlIHByb3BlciBiYWxhbmNlIHNvb24gZW5vdWdoLCBhbmQgeW91ciBzY2VudCB3aWxsIGRyYXcgcGVvcGxlIGNsb3NlciByYXRoZXIgdGhhbiByZXBlbCB0aGVtLi4gCldoYXQgaXMgT25saW5lIFBva2VyClRoZSBWaWN0b3JpYW4gZ292ZXJubWVudCBoYXMgaW52ZXN0ZWQgJDE1IG1pbGxpb24gaW4gcmVzZWFyY2gsIGVtZXJnZW5jeSBkZXBhcnRtZW50cyBhbmQgYSBuZXcgZm9yZWNhc3Rpbmcgc3lzdGVtIGluIHRoZSB3YWtlIG9mIHRoZSBldmVudC4gQnV0IFN1ZSBpcyBzY2FyZWQgdGhvc2Ugd2hvIGhhdmUgYXN0aG1hICAgZXZlbiB0aGUgbWlsZGVzdCBmb3JtICAgbWF5IG5vdCBoZWVkIHRoZSBhZHZpY2UuICJKYW1lcyBoYWQgaGlzIFZlbnRvbGluLCBhbmQgaGUgdG9vayBpdCB0aGF0IG5pZ2h0ICAgaGUgaGFkIGhpcyBwcmV2ZW50YXRpdmVzLCBldmVyeXRoaW5nICAgaXQganVzdCBkaWRuJ3Qgd29yaywgaXQgd2FzIHRoYXQgc2V2ZXJlIGFuZCBzdWRkZW4sIiBzaGUgc2FpZC4gCk1hbnkgc2VyaW91cyBwbGF5ZXJzIGhhdmUgbGl0ZXJhbGx5IHB1dCBpbiBtaWxsaW9ucyBvZiBoYW5kcyBvZiBwb2tlciwgYW5kIHlvdSBoYXZlIHBlcmhhcHMgcGxheWVkIGEgZmV3IHRob3VzYW5kIGFnYWluc3QgaG9ycmVuZG91c2x5IGJhZCBjb21wZXRpdGlvbi4gCk9uZSB2ZXJ5IGRhbmdlcm91cyBzeXN0ZW0gdG8gZ2V0IGludm9sdmVkIHdpdGggaWYgeW91IGFyZSBhIEdhbWJsaW5nIFBva2VyIGJlZ2lubmVyIGlzIHRoZSBOZWdhdGl2ZSBQcm9ncmVzc2lvbiBCZXR0aW5nIFN5c3RlbS4gCkFsbW9zdCBldmVyeW9uZSBnb2VzIHRocm91Z2ggd2l0aGRyYXdhbHMgZnJvbSB0aGVpciBmaXJzdCBzZXh1YWwgcGFydG5lciBvciBmaXJzdCBsb3ZlLiBJdHMgaGFyZCB0byBpbWFnaW5lIHlvdXJzZWxmIHdpdGggc29tZW9uZSBlbHNlIGJ1dCBJIGNhbiBwcm9taXNlIHRoYXQgeW91IGNhbiBmaW5kIHNvbWVvbmUgZWxzZSBiZWNhdXNlIHRoZXJlIGFyZSBsaXRlcmFsbHkgYmlsbGlvbnMgb2YgcGVvcGxlLiAKQnJvb2tlOiB0aG9zZSBvZiB1cyB3aG8gbGl2ZSBoZXJlIGhhdmUgcHJldHR5IG11Y2gga25vd24gd2hhdCBoYXBwZW5lZCB0byBCcm9va2Ugc2luY2Ugc2hlIGRpc2FwcGVhcmVkLiBJdCBraW5kIG9mIGFuIG9wZW4gc2VjcmV0IGhlcmUuIFdlIGp1c3Qgd2FpdGluZyBmb3Igc29tZSBtb3ZlbWVudCBvbiB0aGUgY2FzZS4gQnJvb2tlIHdhcyBpbiBhIHNpdHVhdGlvbiB3aXRoIHNwZWNpZmljIHBlb3BsZSBhbmQgc29tZXRoaW5nIGhhcHBlbmVkLiBJIGRvbiB3YW50IHRvIHNheSBtb3JlIG9uIGEgcHVibGljIGZvcnVtLCBidXQgdGhlIHBlb3BsZSBhcmUgbm90IHRoZSBvbmVzIGluIFNhdmFubmFoIGNhc2UuCkhlIHdhcyBhIG1lbWJlciBvZiB0aGUgUlNWUCBTb2xvbiBTcHJpbmdzIEdvbGRlbiBBZ2UgQ2l2aWMgQ2x1Yi4uIAooSGUgYWxzbyBrbm9ja2VkIG15IG1hdGUgUGhpbCBvdXQgaW4gdGhlIGxhdGVyIHN0YWdlcyBvZiB5ZXN0ZXJkYXkgZXZlbmluZykuIApIb3BvYXRlIGZyb250ZWQgdGhlIE5TVyBSdWdieSBMZWFndWUgY29uZHVjdCByZXZpZXcgcGFuZWwgb24gV2VkbmVzZGF5IG5pZ2h0IGFmdGVyIHBsZWFkaW5nIGd1aWx0eSB0byB0aHJlZSBjb3VudHMgb2YgY29udHJhcnkgY29uZHVjdCBhbmQgb25lIG9mIHN0cmlraW5nIGp1c3QgbWludXRlcyBhZnRlciBjb21pbmcgb2ZmIHRoZSBiZW5jaCB3aGlsZSBmaWxsaW5nIGluIGZvciBOYXJyYXdlZW5hIEhhd2tzIGFnYWluc3QgRm9yZXN0dmlsbGUgRmVycmV0cy4KQXJ0aWNsZXMgYnkgSm9obmF0aGFuIFNpbiBSZXN1bHRzIDEKQWNjb3VudGluZyBhbmQgZmluYW5jZSBmb3IgYmFua2VycyBucyB0b29yIHBkZiBmcmVlaWJ1IHNlbGluZ2t1aCB0aXJpIDNncG1hc3NpbmcgaW4gcmV2aXQgYXJjaGl0ZWN0dXJlIDIwMTEgY3JhY2tqb3VybmV5IHRvIHRoZSByaXZlciBzZWEgcGRmIGZyZWUgZG93bmxvYWRnb2xrZXN1cGRhdGUgZXNtIHNreXJpbSBjcmFja2VkIHBhdGNoCkJlc3Qgb2YgdGhlIFR3aW4gQ2l0aWVzIDIwMDgKVHVybnMgb3V0IHRoZSBmcmllbmQgbGl2ZWQgZGlyZWN0bHkgYWJvdmUgbWUgYW5kIHRoZXNlIGd1eXMgd2VudCB0byB0aGUgd3JvbmcgZmxvb3IgKHRoZSBmbG9vcnMgd2VyZSBub3QgbnVtYmVyZWQgYW5kIG5laXRoZXIgd2VyZSB0aGUgY29uZG8gdW5pdHMpIGJ5IG1pc3Rha2UuIApPbmUgbWFpbiB0aGluZyBwZW9wbGUgYXJlbiBzYXlpbmcgaXMgdGhlIHJlYXNvbiBmb3IgdGhlIGRldmljZSBpcyBtb3JlIGNvbW1vbiB0aGFuIHlvdSB0aGluay4gCkRlcGVuZHMgd2hhdCBidWdnaW5nIG1lLiBTb21lIGRheXMsIEkgc3RydWdnbGUgdG8gY2hlZXIgdXAuIE90aGVyIGRheXMgSSBsb29rIGZvciB0aGUgcG9zaXRpdmVzIGFuZCBJIHRyeSB0byBiZSBjaGlsbGVkIG5vIG1hdHRlciB3aGF0IGhhcHBlbnMuIEkgd2VudCB0byB0aGUgbGFib3VyIERlcHQgeWVzdGVyZGF5IGFuZCBzdG9vZCBpbiBhIG1hc3NpdmUgcXVldWUgZm9yIGFuIGhvdXIgYW5kIGFzIEkgZ290IGFib3V0IGZpZnRoIGZyb20gdGhlIGZyb250IHRoZXkgc2FpZCB0aGUgc3lzdGVtIGlzIG9mZmxpbmUuIEkgd2FzbiB1cHNldCBiZWNhdXNlIGJlaW5nIHVwc2V0IHdpbGwgaGVscCBub3RoaW5nLiBJdCBpcyB3aGF0IGl0IGlzLiBOb3RoaW5nIEkgY2FuIGRvIGFib3V0IGl0LiBTbyBJIHRyeSB0byBqdXN0IGJlIHBhdGllbnQgYW5kIGNhbG0gYW5kIG5vdCBtb2FuIGFib3V0IHRoaW5ncyB0aGF0IEkgY2FuIGNoYW5nZSwgIml0IGlzIHdoYXQgaXQgaXMiIEkgZG8gaGF2ZSBhIG11Y2ggbW9yZSBwYXRpZW50IHBlcnNvbmFsaXR5IHRoYW4gbW9zdCBwZW9wbGUgdGhvdWdoLiBJIHRha2UgYWZ0ZXIgbXkgZGFkLCBub3QgbXkgbW9tLiBNeSBkYWQgY2FuIGFsc28gd2FpdCBhcm91bmQgZm9yIGFnZXMgYW5kIHNwZW5kIHRpbWUgZG9pbmcgcmFuZG9tIHNoaXQgZm9yIGFnZXMgYnV0IG15IG1vbSB3YW50cyB0byBnbyBpbiBhbmQgZ2V0IHRoZSBqb2IgZG9uZSBhbmQgZ28uIE15IGRhZCB3YWxrcyBpbnRvIGEgc2hvcCBhbmQgeW91IHNlZSBoaW0gd2hlbiB5b3Ugc2VlIGhpbS4gTXkgbW9tIHdhbGtzIGluIGEgc2hvcCBhbmQgc2hlIGlzIG91dCBhIGZldyBtaW51dGVzIGxhdGVyLiBTaGUgZ29lcyBpbiwgZ2V0IHdoYXQgc2hlIG5lZWRzIGFuZCBnZXRzIG91dC4gU28gSSB0aGluayBwZXJzb25hbGl0eSBoYXMgYSBsb3QgdG8gZG8gd2l0aCBpdCBidXQgYW55b25lIGNhbiB3b3JrIG9uIGl0LiBUaGUgb25seSB0aGluZyB0aGF0IHJlYWxseSBhbm5veXMgbWUgd2hlbiBJIGFtIHdhaXRpbmcgb3IgaW4gYSBjcmFwcHkgc2l0dWF0aW9uIGlzIG90aGVyIHBlb3BsZSBtb2FuaW5nLiBUaGF0IHRoZSBvbmx5IHRoaW5nIHRoYXQgZ3JpbmRzIG15IGdlYXJzLiBNeSBodXNiYW5kIGdldHMgaW1wYXRpZW50IHF1aWNrbHkgd2hlbiB3ZSBhcmUgd2FpdGluZyBhbmQgSSBoYXRlIGl0IGJ1dCB5ZXN0ZXJkYXkgaGUgd2FzIHdpdGggbWUgYW5kIGhlIHBsYXllZCBnYW1lcyBvbiBoaXMgcGhvbmUgc28gdGhhbmtmdWxseSBoZSB3YXMgZGlzdHJhY3RlZC4KVGhlIHNlY29uZCB0aW1lIGEgY2xpZW50IGFza3MgbWUgdGhpcywgSSB0ZWxsIHRoZW0gIldlIHdpbGwgc2V0IGFzaWRlIG91ciB3aG9sZSBuZXh0IHNlc3Npb24gdG8gcGljayB0aHJvdWdoIHRoZSBEU00gViBhbmQgZmluZCB5b3VyIGRpYWdub3Npcy4iIEkgdGhlbiBleHBsb3JlIHdpdGggdGhlbSB3aGF0IHdlIGFyZSBtYXliZSBsb29raW5nIGF0LCBiYXNlZCBvbiB0aGVpciBzeW1wdG9tcy4KR29pbmcgdG8gdGhlIHJpZ2h0IHNvcnQgb2Ygc2Nob29scyBhbGxvd3MgeW91IHRvIG1lZXQgdGhlICJyaWdodCBwZW9wbGUiIGFuZCBnZXQgdG8gZ28gdG8gdGhlICJyaWdodCBwbGFjZXMiIG9uIHZhY2F0aW9uLCBwbGFjZXMgbGlrZSBNYXJ0aGEgVmluZXlhcmQuIEluIG90aGVyIHdvcmRzLCBoaWdoIGxldmVscyBvZiBlZHVjYXRpb25hbCBjYXBpdGFsIGNhbiB0cmFuc2xhdGUgaW50byBoaWdoIGxldmVscyBvZiBzb2NpYWwgY2FwaXRhbC4uIApCZWNhdXNlIHRoZXkgYXJlIGdyZWVkeSBhbmQgZGVjZXB0aXZlLCBhZnRlciBlbnRlcmluZyBBTEwgeW91ciBpbmZvIGFuZCBiZWluZyB0b2xkIHRoZXJlIGlzIGEgdW5sb2NrIG1lc3NhZ2Ugb24gem9vc2sgY2hlYXQgb24gbWFjIHNpbmdsZSBwcmljZSB0aGV5IHRoZW4gYXQgdGhlIHZlcnkgZW5kLCB0ZWxsIHlvdSB0aGVyZSBpcyBhbiBFWFRSQSBmZWUgLgpFZGl0OiBJIHNob3VsZCBzYXkgdGhhdCBpbmR1c3RyeSB3b3JrIGlzIG11Y2ggZGlmZmVyZW50IHRoYW4gY29sbGVnZS4gCjlTIGZvciBERUYgYnJlYWsgU29sZWlsIGZvciBBVEsgYnVmZiAoYXMgcG9pbnRlZCBvdXQgYmVsb3csIGJvc3MgaXMgbm90IERFRiBicmVha2FibGUpCklmIHRoZXNlIGZhY3RvcnMgY29tYmluZSB3aXRoIGEgbG9zcyBvZiBmYWl0aCBieSBFQSBpbiBCaW93YXJlIGFiaWxpdHkgdG8gcHJvcGVybHkgbWFuYWdlIGEgcHJvamVjdCBhbmQgYnJpbmcgYSBwcm9kdWN0IHRvIG1hcmtldCBzaW5jZSB0aGUgQW5kcm9tZWRhIGRlYmFjbGUsIEkgZG9uIGtub3cgaG93IHRoZXkganVzdGlmeSB0byB0aGVpciBzaGFyZWhvbGRlcnMga2VlcGluZyBCaW93YXJlIHByb2R1Y2luZyB0aGVzZSBodWdlLCB5ZWFycyBpbiBkZXZlbG9wbWVudCwgQUFBIGJ1ZGdldCBnYW1lcy4uIApIb3BlZnVsbHkgbm93IHRoZSB3ZWlnaHQgd2lsbCBjb21lIG9mZi4iIEkgd2FzIGZpbmFsbHkgcGFpbiBmcmVlIGFmdGVyIHllYXJzIG9mZiBzdWZmZXJpbmcgYW5kIGFsbCBteSBkYWQgY2FyZWQgYWJvdXQgd2FzIGhvdyBtdWNoIEkgd2VpZ2hlZCAoc2l6ZSAxMkFVUyBieSB0aGUgd2F5LiAKSXQgZG9lc24gaHVydCwgYnV0IGlzIGtpbmQgb2YgdW5jb21mb3J0YWJsZSBmb3IgbWUuIEkgYWxzbyBwYXJhbm9pZCBiZWNhdXNlIEkgaGFkIGEgYmxvb2QgY2xvdCAoRFZUKSBpbiBteSBhcm0gYmVmb3JlIGFuZCBJIGZlbHQgYSBzaW1pbGFyIHNlbnNhdGlvbiBpbiBteSBhcm0gYmVmb3JlIEkgd2FzIGRpYWdub3NlZC4gCk91ciBvbmxpbmUgZGF0aW5nIHNpdGUgd2FzIGRlc2lnbmVkIHRvIGhlbHAgc2luZ2xlcyB3aG8gYXJlIHNlZWtpbmcgYSBuZXcgcmVsYXRpb25zaGlwLiBEb24ndCB3YXN0ZSBhbnkgbW9yZSB0aW1lIHdpdGggb3RoZXIgQ2hyaXN0aWFuIG9ubGluZSBkYXRpbmcgc2l0ZXMuIAonSSBhbHdheXMgZXhwbGFpbmVkIGhvdyB0aGUgImRhbmdlciIgYWxsIGNhbWUgZnJvbSBQaG90b3Nob3AgYW5kIGhlIHdhcyBhbHdheXMgYmVpbmcgaGVsZCBhbmQgd2FzIG5ldmVyIGluIGFueSBoYXJtLgpUaGV5IG9ic2Vzc2VkIHdpdGgga2VlcGluZyB0aGVpciBwcml2YXRlIGFuZCBwdWJsaWMgc2VsdmVzIHNlcGFyYXRlLCB0aG91Z2ggbm90IGFsd2F5cyBzdWNjZXNzZnVsbHksIGFuZCBrZWVwaW5nIG5lZ2F0aXZlIG1lZGlhIG91dCBvZiB0aGUgcHVibGljIGV5ZSB1bmxlc3MgaXQgdG8gc2hhbWUgc29tZW9uZSBlbHNlLiBUaGlzIGlzIGdyZWF0IGluIHRoZW9yeSwgZXhjZXB0IEppbGwgaXMgbm93IG1lZXRpbmcgQm9iIGluIHRoZSBiYXRocm9vbSB0byBzdHJpcCBpbiBwZXJzb24gc28gdGhlcmUgYXJlIG5vIHBpY3R1cmVzLiBTbyB0aGF0IGRlZmluaXRlbHkgc29tZXRoaW5nIHdlIG5lZWQgdG8gd29yayBvbi4KU3VwcG9zZWRseSB0aGVyZSBhcmUgc29tZSByZWFzb25hYmxlIGZhY3NpbWlsZXMubm9jb25jM3B0ICAxLDU3OCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvV2UgaG9sZCB0aGVzZSB0cnV0aHMgdG8gYmUgc2VsZiBldmlkZW50LCB0aGF0IGFsbCBtZW4gYXJlIGNyZWF0ZWQgZXF1YWwsIHRoYXQgdGhleSBhcmUgZW5kb3dlZCBieSB0aGVpciBDcmVhdG9yIHdpdGggY2VydGFpbiB1bmFsaWVuYWJsZSBSaWdodHMsIHRoYXQgYW1vbmcgdGhlc2UgYXJlIExpZmUsIExpYmVydHkgYW5kIHRoZSBwdXJzdWl0IG9mIEhhcHBpbmVzcy4gClRoYXQgbm90IHRvIHNheSBpdCBhIGJhZCB1bHQsIE1pcmFnZSBzdGlsbCBnZXRzIGEgbG90IG9mIG1pbGVhZ2Ugb3V0IG9mIGl0IGFzIGJvdGggYW4gZXNjYXBlIGJ1dHRvbiBhbmQgYSBmbGFua2luZyB0b29sLCBidXQgZG9uIGdvIHN0cmFpZ2h0IGludG8gdGhlIGVuZW15IHRlYW0gd2hlbiB5b3UgaW52aXNpYmxlIGJlY2F1c2UgYSkgeW91IGFyZW4gZW50aXJlbHkgaW52aXNpYmxlLCBhbmQgYikgeW91IGhhdmUgdG8gd2FpdCBmb3IgdGhlIHVsdCB0byB3ZWFyIG9mZiwgYW5kIGV2ZW4gdGhlbiB5b3UgaGF2ZSB0byBhY3R1YWxseSByZWFkeSB5b3VyIHdlYXBvbi4uIApUaGUgZmlyc3QgdGltZSBJIHdhcyBpbiBJZGFobywgSSB3ZW50IHRvIGEgcmVzdGF1cmFudCBhbmQgbWFkZSBhIGJpZyBkZWFsIGFib3V0IElkYWhvIHBvdGF0b2VzLiBUdXJucyBvdXQgYWxsIHRoZSBwb3RhdG9lcyB5b3UgZWF0IGluIElkYWhvIGNvbWUgZnJvbSBPcmVnb24uIApXZWxsLCB0aGlzIGdpcmwgaGFkIHJpY2ggcGFyZW50cyB3aG8gd2VyZSBkb25vcnMgdG8gdGhlIHVuaXZlcnNpdHkuIFNoZSB3ZW50IHJ1bm5pbmcgdG8gdGhlbSBhYm91dCB0aGUgYmlnIG1lYW4gcHJvZmVzc29yIHdobyBhdHRhY2tpbmcgaGVyIGZvciBubyBnb29kIHJlYXNvbi4gCkplZGVyIHN1Y2h0IGRhIG5hdCBzZWluZW4gcGVycyBWb3J0ZWlsLiIuIApJIGNvbnRyaWJ1dGUgJDEwMCBwZXIgbW9udGggdG8gbXkgZ2VuZXJhbCBzYXZpbmdzIGFjY291bnQgYXQgbXkgYmFuay4gVGhpcyBhY2NvdW50IGlzIGF0IGFib3V0ICQ0LDAwMCwgSSBjb25zaWRlciBpdCBteSBlbWVyZ2VuY3kgZnVuZC4KUnVsZSAxLiBObyBwb3N0cyBhc2tpbmcgaG93IHRvIGhhcm0geW91cnNlbGYgb3Igb3RoZXJzCkEgQUFBIGdhbWUgY29taW5nIG91dCBsYXRlciB0aGlzIHllYXIganVzdCBvbiB0aGF0IGVyYSAodGFrZXMgcGxhY2UgNSB5ZWFycyBhZnRlciBST1RTKS4uIApTdG9pY2lzbSAoInNpc3UiKSBydWxlZCBhbmQgcnVsZXMgc3RpbGwuIApUcnVja3MgcGF5ICQwIHRvIG91ciBzdGF0ZSBmb3IgdGhlIHVzZSBvZiBvdXIgcm9hZHMuIApUaGUgc3dpZnQgYWNjZXNzIGZyb20gdGhlIHN0cmVldCB0byB0aGUgcm9vbXMgbWlnaHQgd2VsbCBtYWtlIHRoZSBDcmN1bG8gR3JhbiBWYSBhIHBvcHVsYXIgY2hvaWNlIGZvciBwZW9wbGUgd2hvIGRvIG5vdCB3aXNoIHRvIGJlIHNlZW4gZm9yIG9uZSByZWFzb24gb3IgYW5vdGhlci4uIApQYXBlciBjdXJyZW5jeSBhcHBlYXJzIHRoZW4gZGlzYXBwZWFycywgc2lsZW50bHkgYW5kIHdpdGhvdXQgZmFuZmFyZS4uIApSZWlraSBpcyB2ZXJ5IHJlbGF4aW5nIGFuZCBhIHNlc3Npb24gbGFzdHMgYWJvdXQgMzAgNDUgbWludXRlcy4gCldoZXRoZXIgYSBjb21wYW55IGxpdmVzIG9ubGluZSwgaW4gYnJpY2sgYW5kIG1vcnRhciBvciBzb21ld2hlcmUgaW4gYmV0d2VlbiwgaW4gcGVyc29uIGV2ZW50cyBjYXJyeSB0aGUgcG90ZW50aWFsIHRvIGxlYXZlIGEgbGFzdGluZyBpbXByZXNzaW9uIG9uIGN1c3RvbWVycywgd2hvc2UgYXR0ZW50aW9uIGhhcyBiZWNvbWUgYSB0cnVlIGNvbW1vZGl0eS4gQnV0IGl0J3Mgbm90IGp1c3QgYWJvdXQgdGhyb3dpbmcgYSBncmVhdCBwYXJ0eSBhbnltb3JlLiAKRm9yIGV4YW1wbGUsIEdldCBPdXQgYW5kIEJsYWNrIFBhbnRoZXIgYXJlIGJvdGggOTclKyBvbiBSb3R0ZW4gVG9tYXRvZXMgYW5kIDg0KyBvbiBNZXRhY3JpdGljLiBTbyB0byBtZSwgIkkgZW5qb3llZCB0aGVtIGFuZCB0aG91Z2h0IHRoZXkgd2VyZSBnb29kIiBpcyB0aGUgdHlwaWNhbCBhbmQgdW5yZW1hcmthYmxlIHZpZXcuIEJ1dCB0aGVyZSBoYXMgYmVlbiBza2VwdGljaXNtIHRoYXQgQmlsbCB0cnVseSBlbmpveWVkIHRoZW0sIGV2ZW4gdGhvdWdoIHRoZSBtYWpvcml0eSBvZiBwZW9wbGUgZG8uCldoZW4gSSByZWFkIHRoYXQsIEkgZ290IGEgbGl0dGxlIGplYWxvdXMgdGhlb3JldGljYWxseSwgZHVyaW5nIHNleCwgdGhlIHBlb3BsZSB3aG8gZ3J1bnQgZW50aHVzaWFzdGljYWxseSBjYW4gYWRkIGZvcmNlIHRvIHRoZWlyIGh1bXAuIHF1ZXN0aW9uLCBoZSBzYWlkLiBzb3VuZHMgYXJlIGEgcGh5c2lvbG9naWNhbCByZXNwb25zZSB0byBleGVydGlvbi4gVG8gdGVsbCBtZSBob3cgc2V4IHNvdW5kcyBldm9sdmVkIGZyb20gYSBzbWFsbCBncnVudCBpbnRvIHRoZSBzY3JlYW1pbmcgc3BlY3RhY2xlIHdlIGtub3cgdGhlbSB0byBiZSB0b2RheSwgaGUgYmVnYW4gYnkgdGVsbGluZyBtZSBhIHN0b3J5IGFib3V0IHNlYWd1bGxzLiBhIHNlYWd1bGwgYmVnaW5zIHRvIHRha2Ugb2ZmLCBpdCBmbGFwcyBpdHMgd2luZ3MsIGhlIHNhaWQuIHRpbWUgaXQgZmxhcHMgaXRzIHdpbmdzLCBpdCBtYWtlcyBhIHNvdW5kLiBIZSBwYXVzZWQgZm9yIGRyYW1hdGljIGVmZmVjdC4gYWhoIGFoaCwgS29taXNhcnVrIHNxdWF3a2VkLCBpbWl0YXRpbmcgdGhlIGJpcmQuIHZvY2FsaXphdGlvbiBpcyBzeW5jaHJvbml6ZWQgd2l0aCB0aGUgbW92ZW1lbnQgYmVjYXVzZSB0aGUgZXhlcnRpb24gY3JlYXRlcyBzb3VuZC4KQmVjYXVzZSBteSBmYW1pbHkgbGl2ZXMgaW4gV2lzY29uc2luLCB3ZSBwbGF5ZWQgYSB2ZXJzaW9uIGNhbGxlZCAiQ293cyBteSBzaWRlIi4gClRoZSBmaXJzdCB0aGluZyBpcyB0byBjYXJ2ZSB0aGUgbGlkLiAKVGhlIG5leHQgZGF5LCBJIGdvdCBhIHRleHQgZnJvbSBzb21lb25lIEkgbWFpbGVkIGEgbGV0dGVyIHRvIGFuZCBzcG9rZSB0byBuZWFybHkgYSB5ZWFyIGJlZm9yZS4gCkR1cmluZyB0aGF0IHRpbWUsIExvdmVsYW5kIHNheXMsIGhpcyBzb24gaGFzIHBhaWQgc2V2ZXJhbCBodW5kcmVkIHRob3VzYW5kIGRvbGxhcnMgaW4gaW5jb21lIHRheCBvbiBoaXMgd2lubmluZ3MgZnJvbSBsaXZlIGFuZCBvbmxpbmUgdG91cm5hbWVudHMuIApUaGVyZSBhcmUgc3RvcmllcyB3YWl0aW5nIHRvIGJlIHRvbGQgYWNyb3NzIHRoZSBjaXR5IGFuZCB0byBwcm92ZSBpdCBNb3JyaXMgc3Rvb2QgaW4gYW4gYWxsZXkgb2ZmIENoYXRoYW0gU3RyZWV0IGluIGRvd250b3duIFdpbmRzb3IgV2VkbmVzZGF5LiBUaGUgcGVha2VkIHJvb2YgbGluZSBhbmQgZ3JleSBwYWludGVkIGJyaWNrIG9mIFZpdGFsIE91ZWxsZXR0ZSBob3VzZSBpcyB2aXNpYmxlIGJlaGluZCB0aGUgQWxsZXkgS2F0eiBzdHJpcCBjbHViLgpTbyBpbSB1c2luZyBhIG5vIGNkIGNyYWNrLiBidXQgdGhlIGdyYXBoaWNzIGxvb2sgbGlrZSB0aGlzIGh0LiA3IEF1ZyAyMDE3IC4gTWFyaW5lcyBDb3JwcyBpcyBidWlsZGluZyBhIG5ldyBNZXRhbCBHZWFyIGFuZCBoZSBzZXRzIG9mZiB0byBzdG9wIE1ldGFsLiBNZXRhbCBHZWFyIFNvbGlkIDIgU3Vic3RhbmNlIFBjIEdhbWUgSXRhRW5nRXNwR2VyRnJhIEJ5IFplcmcwMTAgR2FtZXMgLiBNaWFtaSB2aWNlIHBjIG5vY2QgY3JhY2sgTWV0YWwgR2VhciBTb2xpZCAyOiBTb25zIG9mIExpYmVydHkgTUdTMiBpcyBhIHN0ZWFsdGguIApZb3UgYXJlIGdldHRpbmcgb2xkZXIgYW5kIHRoYXRzIHRoZSBjb25zZXF1ZW5jZS4gQnV0IHRoZXJlIGlzIHByb2JhYmx5IHN0aWxsIHN0dWZmIHlvdSBoYXZlbnQgc2Vlbi4gCllvdSBjYW4gYWxzbyBjb250YWN0IHlvdXIgbG9jYWwgT3hGb3JkIEhvdXNlIGdyb3VwIGFuZCBzZWUgd2hhdCB5b3UgY2FuIG9mZmVyIHRoZXJlLiAKQWZmZWN0IGV2ZXJ5Ym9keSwgc2FpZCBBbXkgRnJlZWRoZWltLCBhIHNlbmlvciBkZXB1dHkgcHJvc2VjdXRvciBpbiB0aGUgS2luZyBDb3VudHkgUHJvc2VjdXRvciBPZmZpY2Ugd2hvIGhhbmRsZXMgZmVsb255IHRyYWZmaWMgY3JpbWVzLiAKSmVubm4gaG9sZHMgYSBCYWNoZWxvciBvZiBKb3VybmFsaXNtIGFuZCBFbmdsaXNoLi4gClRoaXMgaXMgdGhlIHNlY29uZCBiZXN0IGhhbmQgaW4gcG9rZXIuIApUaGUgc2t5cm9ja2V0aW5nIGdyb3d0aCBvZiBpbnRlcm5hbCBhZ2VuY2llcyA3OCBwZXJjZW50IG9mIG1hcmtldGVycyBub3cgaGF2ZSBzb21lIGZvcm0gb2YgaW4gaG91c2UgdGVhbSwgdXAgZnJvbSA1OCBwZXJjZW50IGZpdmUgeWVhcnMgYWdvLCBhY2NvcmRpbmcgdG8gYW4gQU5BIHJlcG9ydCByZWxlYXNlZCB0aGlzIG1vbnRoIGhhcyBiZWVuIGEgY29udGludWFsIHRoZW1lIGluIHNldmVyYWwgcHJlc2VudGF0aW9ucyBhdCB0aGUgQU5BIE1hc3RlcnMgb2YgTWFya2V0aW5nIENvbmZlcmVuY2UgdGhpcyB3ZWVrLgpJbiB0aGUgbGFzdCBnYW1lIG9mIHRoZSB0b3VyIGFnYWluc3QgVE4gUGVhcmNlJ3MgWEkgYXQgU2NhcmJvcm91Z2gsIEFsZWMgQmVkc2VyIGJvd2xlZCBkZWxpYmVyYXRlbHkgd2lkZSBvZiB0aGUgc3R1bXBzIHNvIGFzIHRvIHByZXNlcnZlIEpvaG5zdG9uJ3MgcmVjb3JkOiAxNyBpbm5pbmdzLCAxMDIgcnVucywgb25lIGRpc21pc3NhbC4gClRoZSBhbnRpIHRheGF0aW9uIGFwcHJvYWNoIGNvbWVzIGZyb20gdGhlIHJlamVjdGlvbiBvZiBjb2VyY2lvbi4gClBsZW50eSBvZiBwdW50ZXJzIGluIGJvdGggcm9vbXMsIGVzcCBGcmkgYW5kIFNhdHVyZGF5LiBNb2hlZ2FuIGlzIGEgc2xpZ2h0bHkgbmljZXIgY2FzaW5vIGFsbCB0aGUgd2F5IGFyb3VuZCBpbmNsdWRpbmcgdGhlIHBva2VyIHJvb20sIGJ1dCB5b3UgZmluZCBmYXIgbW9yZSB2YXJpZXR5IGF0IGZveHdvb2RzLiBNb2hlZ2FuIHRvdXJuYW1lbnRzIGFyZSB0aGUgc2FtZSA2MCAxMjAgZG9sbGFyIGJ1eSBpbiB0aHJpY2UgZGFpbHkgYWxsIG1vbnRoIHdpdGggdGhlIHZlcnkgb2NjYXNpb25hbGx5IHdlZWtlbmQvaG9saWRheSBzZXJpZXMuIApJIG9ubHkgc2F5aW5nIHlvdSBjYW4gcnVuIG9yIHlvdSBjYW4gdHJ5LiAKSXQncyBhIGZ1biwgSSBtZWFuIHJlYWxseSwgcmVhbGx5IGZ1bi4uIApNb3JlIG9mdGVuIHRoYW4gbm90IHRoaXMgbGVhZHMgdG8gbWUgTk9UIGR5aW5nIGJ1dCBub3QgZ2V0dGluZyB0aGUgZmFybSBJIHdhbnQsIHdoaWxlIG15IHRlYW0gYWxzbyBnZXRzIHJla3QgaW4gb3RoZXIgbGFuZXMuIEkgbmVlZCB0byBmaW5kIGEgd2F5IHRvIGltcHJvdmUgbXkgdGVhbSBjaGFuY2VzIG9mIHdpbm5pbmcgQUxMIE9OIE1ZIE9XTi4gCk1vc3QgbW92aWVzIHdvdWxkIGZpbmQgQ3Jvc3MnIGFudGljcyBmdW5ueSBlbm91Z2gsIGFuZCBjYWxsIGl0IGEgZGF5LCBidXQgIlRoZSBHcmFuZCIgZ29lcyBkZWVwZXIuIEluc3RlYWQgb2YganVzdCBtaWxraW5nIHRoZSBjb25jZXB0IG9mIGFuIG9ibm94aW91cyBwb2tlciBwbGF5ZXIgZm9yIGxhdWdocywgaXQgc2hvd3MgdXMgd2h5IGhlJ3Mgc28gb2Jub3hpb3VzLCBhbmQgaG93IGhlIGJlY2FtZSBzdWNoIGEgamVyay4gCkFueW9uZSBvdmVyIHRoZSBhZ2Ugb2YgMjEgY2FuIGJ1eSBpbnRvIHRoZSBtYWluIGV2ZW50IHdpdGggJDEwLDAwMC4gCkljeSBTdHJhaXQgUG9pbnQgaXMgb24gQ2hpY2hhZ29mZiBJc2xhbmQgYW5kIGNsb3NlIHRvIEhvb25haCwgdGhlIGxhcmdlc3QgbmF0aXZlIFRsaW5naXQgSW5kaWFuIHNldHRsZW1lbnQgaW4gQWxhc2thLiBBY2NvcmRpbmcgdG8gYSBUbGluZ2l0IHNheWluZywgIndoZW4gdGhlIHRpZGUgb3V0LCB0aGUgdGFibGUgaXMgc2V0IiBhbmQgdGhlIGxvY2FscyBoYXZlIGEgc3Ryb25nIGNvbm5lY3Rpb24gd2l0aCB0aGUgc2VhLiAKVGhvdWdoIHRoZSBPbWFoYSBpcyBhbHNvIGEgZmFtb3VzIHBva2VyIGdhbWUgeWV0LCBpdCBpcyBkZWZpbml0ZWx5IGJlaGluZCB0aGUgVGV4YXMgSG9sZCdlbSB3aXRoIHJlZ2FyZCB0byBwb3B1bGFyaXR5LiAKSWYgVHJ1bXAgcmFuIGFzIGEgRGVtb2NyYXQsIEkgd291bGQgaGF2ZSB2b3RlZCBmb3IgaGltLiBIaXMgcGxhdGZvcm0gd2FzIHJlZnJlc2hpbmcgICBhbmQgc291Z2h0IHRvIHJlaW52ZXN0IGluIEFtZXJpY2EuIEhlIGFsc28gcHJvbWlzZWQgdG8gYnJpbmcgb3VyIHRyb29wcyBob21lLgpUaGUgZXNzZW5jZSBvZiB0aGUgbWluZGZ1bCB3YXkgaXMgdGhhdCAuIEVzc2VuY2Ugb2YgTWVkaXRhdGlvbjogTWVkaXRhdGlvbiBpcyBhIGJhc2ljIHByYWN0aWNlIHRvIGRlICAuIGZpdHMgb2YgbWluZGZ1bG5lc3MgaW4gaGlzIHBlcnNvbmFsIGxpZmUgYW5kIHRoZSBzY2llbnRpZmljYWwgIC4gbW9yZSBtZWFuaW5nZnVsIGF0IGhpZ2hlciBsZXZlbHMgb2YgbWluZCwgaXQgc2VlbXMgcmVhc29uICAuIDUwIExvaHIsIDIwMDU7IFdpc2RvbSAyLjAsIDIwMDkuIApCeSBTY290dCBIYW1pbHRvbkxhc3QgbW9udGggYSBjb3VwbGUgb2YgdmFtcGlyZXMga25vY2tlZCBvbiBteSBkb29yLiBJdCB3YXMgYWZ0ZXIgZWlnaHQgbydjbG9jayBpbiB0aGUgZXZlbmluZywgYW5kIEkgaGFkIGZhbGxlbiBhc2xlZXAsIGFzIHRoZSBmYXRoZXJzIG9mIHRocmVlIHNtYWxsIGJveXMgc28gb2Z0ZW4gZG8sIG9uIHRoZSBjb3VjaC4gSSBvcGVuZWQgdGhlIGRvb3IgYW5kIHN3YWxsb3dlZCBteSB5YXduIGluIGFsYXJtIHdoZW4gSSBzYXcgdGhlIGJsYWNrIHJvYmVzIGFuZCBibG9vZCBzcGVja2xlZCBjaGVla3Mgb2YgbXkgdmlzaXRvcnMuIApNZWFucyBpdCBhbiBhbWF6aW5nIG1vdmllLCBhcHBhcmVudGx5LgpXZSBoYXZlIHByb3ZpZGVkIGRpcmVjdCBsaW5rIGZ1bGwgc2V0dXAgb2YgdGhlIGdhbWUuIEdhbWUgaW5mb3JtYXRpb24gYW5kIFJPTSBkb3dubG9hZCBwYWdlIGZvciBLaW5nIG9mIEZpZ2h0ZXJzICc5OCAoTmVvIEdlbykuIApMZXQgbWUgcmVwZWF0IG9uZSBtb3JlIHRpbWUsIHdlIGRvbid0IGtub3cgdGhlIHBlcmNlbnRhZ2Ugb2YgcGF5b3V0cyBpbiBiaW5nbyAod2UgZG9uJ3Qga25vdyB0aGUgbnVtYmVyIG9mIHNvbGQgdGlja2V0cykuIEluIHByaW5jaXBsZSwgcGxheWluZyBmb3IgbWFueSB0aW1lcyBpbiB0aGUgc2FtZSBiaW5nbyByb29tIHlvdSBjYW4gY291bnQgdGhlIHBlcmNlbnRhZ2Ugb2YgcGF5bWVudHMgaW4gdGhlIHByYWN0aWNlLiBTaW1wbHkgZGl2aWRlIGdhaW5lZCBhbW91bnRzIGludG8gc3BlbnQgb25lcyBhbmQgeW91IHdpbGwgZmluZCBvdXQgdGhlIGVzdGltYXRlIGJ1dCB5b3Ugc2hvdWxkIHBsYXkgZm9yIGEgbG9uZyB0aW1lIHNvIHRoYXQgdGhpcyBlc3RpbWF0ZSBjb21lIGNsb3NlciB0byB0aGUgcmVhbGl0eS4gR2VuZXJhbGx5IHNwZWFraW5nLCBpZiBpdCBpcyBwb3NzaWJsZSB0byBmaW5kIG91dCB0aGUgcGVyY2VudGFnZSBvZiBwYXlvdXRzLCBwbGF5IHdoZXJlIGl0IGlzIHRoZSBsYXJnZXN0IGFuZCBnb29kIGx1Y2sgYmVhdGluZyBvbmxpbmUgYmluZ29zLgpNYW55IGNhc2lub3MgbGlrZSBFeGNhbGlidXIgb2ZmZXIgZnJlZSBkZW1vbnN0cmF0aW9uIGNsYXNzZXMgdG8gdHV0b3IgdGhlIGJlZ2lubmVycyBhYm91dCB0aGlzIGFkZGljdGl2ZSBnYW1lLiBJdCBicmluZ3MgdG8gdGhlbSBsb3Qgb2YgY3Jvd2QgYW5kIHNhbGUuIFRoZSBhdXJhIGFuZCBjaGFyaXNtYSBvZiB0aGUgZ2FtZSBpcyBzdWNoIHRoYXQgaXQgbWFrZXMgbWFueSBjZWxlYnJpdGllcyB0b28gdHJ5IHRoZWlyIGhhbmRzIGF0IGl0LiBFdmVuIHdvbWVuIGFyZSBnZXR0aW5nIGF0dHJhY3RlZCB0byB0aGUgd2lkZXNwcmVhZCBwb3B1bGFyaXR5IG9mIHRoaXMgZ2FtZS4gU3VydmV5cyByZXZlYWwgdGhhdCB0aG9zZSBzcG9ydHMgY2hhbm5lbHMgdGVsZWNhc3QgZ29vZCBudW1iZXIgb2YgcG9rZXIgdG91cm5hbWVudHMgYXJlIG1vc3QgbGlrZWQgYnkgcGVvcGxlLiBUaGUgYmVzdCBzaG93IGlzIHN1cHBvc2VkIHRvIGJlIFRoZSBXb3JsZCBQb2tlciBUb3VyLCB3aGljaCBjYW4gYmUgdmlld2VkIG9uIHRoZSBUcmF2ZWwgQ2hhbm5lbC4gQWNjb3JkaW5nIHRvIHRoZSBzdGFnZ2VyaW5nIHJpc2UgaW4gdGhlIGdsb3J5IG9mIHRoaXMgZ2FtZSBpdCB3b3VsZCBwZXJoYXBzIGJlIHJpZ2h0IHRvIHNheSAgaWYgeW91IHdhbnQgdG8gaGF2ZSBmdW4sIHBsYXkgcG9rZXIgb25jZSEKRXZlbiB0aGUgQ2F0aG9saWMgY2h1cmNoLCByaWZlIHdpdGggY2hpbGQgYWJ1c2UgYW5kIHJhcGUsIGRvZXNuIEFzIGEgbWF0dGVyIG9mIGZhY3QsIENocmlzdGlhbnMgaW4gdGhlaXIgaG9tb3Bob2JpYyByYW50aW5ncyBvZnRlbiBzYXkgdGhhdCBMR0JUIHN1cHBvcnQgaXMgcGFydCBvZiBhIGNvbnNwaXJhY3kgdG8gbm9ybWFsaXplIHRoaXMgdmVyeSB0aGluZyBpbiB0aGUgYmlibGUsIGFuZCBhcmUgcGFzc2lvbmF0ZSBhYm91dCBpdCBlbm91Z2ggc28gdGhhdCB0aGV5IGNvbW1pdCBoYXRlIGNyaW1lcyBvdmVyIGl0LlRoZSBiaWJsZSBhbHNvIHN1cHBvcnRzIGFib3J0aW9uLCBhcyBzaG93biBpbiBOdW1iZXJzIDU6MTEgMzEsIHdoZXJlIGl0IHNheXMgdGhhdCBmb3JjaW5nIGEgbWlzY2FycmlhZ2Ugb24gYSB3b21hbiBpcyBhIGdvb2Qgd2F5IHRvIHByb3ZlIG9yIGRpc3Byb3ZlIGhlciBpbmZpZGVsaXR5LiAKQmV0dHkgQW5uIEhlZ2dpZSBNYXNjdWxpbmUgZW5lcmd5IGtub3dzIHRoZSBydWxlcyBvZiB0aGUgZ2FtZTsgaXQgaGFzIGEgc3RyYXRlZ3kgYW5kIGlzbid0IGFmcmFpZCB0byB0YWtlIGEgcmlzay4gSXQgZ29lcyBmb3IgaXQhIEZlbWluaW5lIGVuZXJneSwgaG93ZXZlciwgbW9uaXRvcnMgdGhlIGZsaWNrZXIgaW4gdGhlIGV5ZSwgdGhlIHN3ZWF0IG9uIHRoZSBicm93LCBhbmQgdGhlIHZlaW5zIGluIHRoZSBuZWNrLiAKTW9yZSB0aGFuIGp1c3QgYSBiaW9ncmFwaHksIHRoaXMgZmlsbSBleHBsb3JlcyBCcnVjZSBMZWUncyBnbG9iYWwgaW1wYWN0IHRvIHNlZSBob3cgaGUgaGFzIGluZmx1ZW5jZWQgYWxsIGFyZWFzIG9mIHBvcHVsYXIgY3VsdHVyZSBpbmNsdWRpbmcgZml0bmVzcywgY2luZW1hLC4gQnJ1Y2UgTGVlIGhhcyB0b3VjaGVkIHRoZSBsaXZlcyBvZiBtaWxsaW9ucyBvZiBwZW9wbGUgYWNyb3NzIHRoZSBnbG9iZSwgYW5kIGl0IGlzIEJydWNlJ3Mgc3Bpcml0IHRoYXQgY29udGludWVzIC4gVGhlIGRpcmVjdGlvbiBhbmQgdG9uZSBvZiBoaXMgZmlsbXMgY2hhbmdlZCBhbmQgaW5mbHVlbmNlZCBtYXJ0aWFsIGFydHMgYW5kIG1hcnRpYWwgYXJ0cyBmaWxtcyBpbiB0aGUgLiAKSSBwcmV0dHkgc3VyZSB0aGVyZSBzdGlwdWxhdGlvbnMgaW4gQ2FuYWRpYW4gbm9uIHByb2ZpdCBsYXcgdGhhdCBhbHNvIGxpbWl0IHRoZSBtZWNoYW5pc21zIGFyb3VuZCBhY2NlcHRpbmcgbW9uZXkgYW5kIGluIGhvdyB0aGF0IG1vbmV5IGlzIHVzZWQgb25jZSBhY2NlcHRlZCwgYnV0IHNpbmNlIEkgbm8gbGF3eWVyIEkgY2FuIGdpdmUgeW91IGRldGFpbHMuIEkgYW0gcHJldHR5IHN1cmUgdGhlIG1vbmV5IGVhcm5lZCBpcyBsZWdhbGx5IHJlcXVpcmVkIHRvIGJlIHNwZW50IG9uIHRoZSBvcmcgaXRzZWxmLCBhbmQgY2FuIGJlIHRha2VuIGJhY2sgb3V0IG9mIHRoZSBub24gcHJvZml0Li4gCk90aGVyIGdvbGYgYWZpY2lvbmFkb3Mgd2lsbCBhcmd1ZSB0aGF0IFF1aW50YSBkbyBMYWdvaXMgYSBiZXR0ZXIgY2hvaWNlLGJhY2tlZCBieSBhIDIwMTUgR29sZmVyIFRyYXZlbCBBd2FyZCBhcyBQb3J0dWdhbCBCZXN0IEdvbGYgUmVzb3J0Li4gClByaW50b3V0b2ZPeXN0ZXIgIDE4IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpCZXZlcmFnZSwgaGVhZCBvZiB0aGUgT2tsYWhvbWEgQmFua2VyIEFzc29jaWF0aW9uLCBPa2xhaG9tYSBuYXRpdmUgV2FycmVuIGlzICJjb21wZXRlbnQiIGFuZCAiZXhjZXB0aW9uYWxseSBicmlnaHQiIGJ1dC4gCk9uZSB0aW1lLCBteSBjb3VzaW4gYXNrZWQgbWUgZm9yIHNvbWUgQ2hpcG90bGUuIEkgd2VudCB0aGVyZSBhbmQgYWZ0ZXIgYnV5aW5nIG91ciBmb29kLCBJIHJlYWxpemVkIEkgZm9yZ290IHRvIGFkZCB0aGUgY29ybiBhbmQgbGV0dHVjZSBzaGUgbGlrZWQgaW4gaGVyIGJvd2wuIEkgZ290IHNjYXJlZCB0aGF0IHNoZSBtaWdodCB5ZWxsIGF0IG1lIGR1ZSB0byBBOiBteSBtb20geWVsbGluZyBhdCBtZSBteSBlbnRpcmUgY2hpbGRob29kIHRvIGJlIGxlc3MgZmVtaW5pbmUsIEI6IGhlciBwYXJlbnRzIGFuZCBicm90aGVycyB5ZWxsIGF0IGVhY2ggb3RoZXIgZGFpbHkgdG8gdGhlIHBvaW50IHdoZXJlIGl0IG5vcm1hbCBzcGVlY2ggZm9yIHRoZW0sIGFuZCBDOiBJIGNvbXBsZXRlbHkgc2h1dCBkb3duIGlmIHNvbWVvbmUgcmFpc2VzIHRoZWlyIHZvaWNlIGF0IG1lLiAKSGVyIHNvbiB3YXMgcG90dHkgdHJhaW5lZCBpbiAzIHdlZWtzICAgZGF5IGFuZCBuaWdodC4gTW9zdGx5IHNoZSBkaWRuJ3QgaGF2ZSB0byBzcGVuZCBhcyBtdWNoIHRpbWUgaGVscGluZyBoaW0gbGVhcm4gdGhlIHNpZ25hbCB0aGF0IGhlIGhhZCB0byBnby4gU2hlIHNwZW50IG1vcmUgdGltZSBnZXR0aW5nIGhpbSB0byBjbGVhbiB1cCBoaXMgcGVlIG1lc3MsIHdoaWNoIGhlIGRpZG4ndCBsaWtlIHRvIGRvLiAKSXQgcmVhbGx5IGhhcmQgdG8gZG8gb24geW91ciBvd24gc28gSSBjYW1lIHVwIHdpdGggdGhpcyBzb2x1dGlvbi4gClRvIGF2b2lkIHNleHVhbGx5IHRyYW5zbWl0dGVkIGluZmVjdGlvbnMsIGhhdmUgc2V4IHdpdGggb25seSBvbmUgcGVyc29uIHdobyBkb2Vzbid0IGhhdmUgYW55IG90aGVyIHNleHVhbCBwYXJ0bmVycyBhbmQvb3IgdXNlIGEgY29uZG9tIHdoZW4gaGF2aW5nIHNleC4gCklmIHlvdSB3YWxraW5nIGhlIHJhbmRvbWx5IHJ1biBhbmQgbW9jayBhdHRhY2sgeW91IG9uIGhpcyBoaW5kIGxlZ3MgYW5kIHNjYXJlIHRoZSBiZWplenVzIG91dCBvZiB5b3UgaWYgeW91IHJvdW5kIGEgY29ybmVyIHdoZXJlIGhlIHdhaXRpbmcgdG8gcG91bmNlIGFuZCBoZSBwbGF5IGJpdGVzIChlbm91Z2ggZm9yIG15IGtpZHMgdG8gYmUgYWZ0YWlkIG9mIGhpbSB3aGVuIGhlIGJpdGV5KS4gCkxpa2UgcmVhbCBsaWZlIHZlcnNpb25zIG9mIHRoaXMgZ3V5LgpXaGVuIHRoZSBhY3Rpb24gcmVhY2hlcyBoaW0sIGhlIGhhcyBvbmx5IDI0LDAwMCB0byBjYWxsLCB3aGlsc3QgaGUgY2FuIHNlZSA2NCwwMDAgb24gb2ZmZXIgaW4gdGhlIG1pZGRsZS4gRXhjZWxsZW50IHBvdCBvZGRzLiBTbyB5b3Ugd2lsbCB0aGVuIHNlZSBtYW55IG9mIHRoZSBwcm9mZXNzaW9uYWxzIGNhbGxpbmcgd2l0aCB1bmxpa2VseSBsb29raW5nIGhhbmRzIHN1Y2ggYXMgNiw4IG9mZiBzdWl0Li4gCkhlIGp1c3QgY291bGQgbm90IHVuZGVyc3RhbmQgaG93IGRpZmZlcmVudCB0aGUgdHdvIGFyZWFzIGFyZSwgYW5kIHJlZnVzZWQgdG8gbGlzdGVuIHRvIG1lIGFuZCBhY2tub3dsZWRnZSB0aGF0IEkgbWlnaHQga25vdyBiZXR0ZXIgICBnaXZlbiB0aGF0IGhlJ2QgbmV2ZXIgd29ya2VkIHJldGFpbC4gClNoZSBoYWQgYmVlbiB3aXRoIGhlciBmcmllbmRzIHByZXR0eSBjb25zdGFudGx5IHByaW9yIHRvIGFycml2aW5nIGhvbWUsIHRob3VnaCwgYW5kIEkgY2FuJ3QgaW1hZ2luZSBhbnkgb2YgdGhlbSB3b3VsZCBoYXZlIGxldCB0aGVpciBwcmVnbmFudCBmcmllbmQgZHJpbmsuLiAKSWYgSSBjYWxjdWxhdGVkIGNvcnJlY3RseSwgdGhlIGVkaWJsZXMgSSBtYWtlIGFyZSBiZXR3ZWVuIDMwIDQwbWcgZWFjaCBhbmQgaW5pdGlhbGx5IEkgd291bGQgaGF2ZSBoYWxmLiAKMjAwNCBGb3JkIEVzY2FwZSBIeWJyaWQgUHJldmlldyBFZGl0b3IKSW4gbW9zdCBjb3VudHJpZXMgc3VydmV5ZWQsIG1ham9yaXRpZXMgb2YgTXVzbGltIHdvbWVuIGFzIHdlbGwgYXMgbWVuIGFncmVlIHRoYXQgYSB3aWZlIGlzIGFsd2F5cyBvYmxpZ2VkIHRvIG9iZXkgaGVyIGh1c2JhbmQuIEluZGVlZCwgbW9yZSB0aGFuIG5pbmUgaW4gdGVuIE11c2xpbXMgaW4gSXJhcSAoOTIlKSwgTW9yb2NjbyAoOTIlKSwgVHVuaXNpYSAoOTMlKSwgSW5kb25lc2lhICg5MyUpLCBBZmdoYW5pc3RhbiAoOTQlKSBhbmQgTWFsYXlzaWEgKDk2JSkgZXhwcmVzcyB0aGlzIHZpZXcuCldlIGFyZSBwbGFubmluZyBhbm90aGVyIGRheSBvZiBhY3Rpb24gaW4gREMgb24gRGVjIDEwdGguIFdlIGFyZSB0cnlpbmcgdG8gdHVybiBvdXQgbW9yZSBwZW9wbGUgYW5kIGZpbGwgUmVwcyBvZmZpY2VzIGZyb20gYWNyb3NzIHRoZSBjb3VudHJ5IHRvIGNlbmVtZW50IHRoZSBHcmVlbiBOZXcgRGVhbCBpbiB0aGUgRGVtb2NyYXRzIEFnZW5kYS4gCiJUaGUgc3RydWN0dXJlIGlzIHNvIGdvb2QuIApNb2Rlcm4gbGlmZSBjYW4gYmUgYSBzdHJlc3NmdWwsIHdoYXQgd2l0aCBkZWFkbGluZXMgYW5kIHRhcmdldHMsIGNvbW11dGluZyBhbmQgcG9sbHV0aW9uLCB3b3JrIGFuZCByZWxhdGlvbnNoaXBzLiBTb21ldGltZXMgeW91J3JlIHNvIHdvdW5kIHVwIHRoYXQgaXQgdGFrZXMgYSBjb25jZXJ0ZWQgZWZmb3J0IHRvIGxldCBnbywgY2FsbSBkb3duIGFuZCBhbGxvdyB5b3VyIGJvZHkgdG8gcmVsYXguIFdoaWNoIGlzIHdoeSB3ZSBhc2tlZCB5b3UsIHRoZSBoMmcyIENvbW11bml0eSwgZm9yIHlvdXIgdGlwcyBhbmQgdGVjaG5pcXVlcyBmb3IgcmVsYXhhdGlvbi4gCkEgd2VlayBvZiB0aGUgZ292ZXJubWVudCBvZmZlbmRpbmcgcGVvcGxlQSB0cmlvIG9mIG1pbmlzdGVycyBoYXZlIGJlZW4gY3JpdGljaXNlZCBmb3IgdGhlaXIgY29tbWVudHMgbWFkZSB0aGlzIHdlZWssIHNwYXJraW5nIG91dHJhZ2UgbmF0aW9ud2lkZS4gTXMgUnVkZHNhaWQgc2hlIHdhcyAibW9ydGlmaWVkImFmdGVyIHJlZmVycmluZyB0byBMYWJvdXIgZnJvbnRiZW5jaGVyIERpYW5lIEFiYm90dCBhcyAiY29sb3VyZWQiIGR1cmluZyBhIHJhZGlvIGludGVydmlldy4gTXMgQnJhZGxleSwgd2hvIGlzIE5vcnRoZXJuIElyZWxhbmQgc2VjcmV0YXJ5IGhhZCB0byBhcG9sb2dpc2UgZm9yIHNheWluZyBraWxsaW5ncyBieSB0aGUgbWlsaXRhcnkgYW5kIHBvbGljZSBkdXJpbmcgdGhlIFRyb3VibGVzICJ3ZXJlIG5vdCBjcmltZXMiLiAKRHJ5IG5lZWRsaW5nIGFuZCBvdGhlciBmb3JtcyBvZiBub3hpb3VzIHN0aW11bGF0aW9uIGFyZSBoZWxwZnVsIGluIHRha2luZyBjYXJlIG9mIGtub3RzLiBTZXZlcmFsIG1hc3NhZ2UgdGVjaG5pcXVlcyBjYW4gYmUgY29uc2lkZXJlZCBmb3JtcyBvZiBub3hpb3VzIHN0aW11bGF0aW9uLiBDaGlyb3ByYWN0aWMgbWFuaXB1bGF0aW9uIGFuZCBtb2JpbGl6YXRpb24gZnJvbSBwaHlzaWNhbCB0aGVyYXBpc3RzIGNhbiBhbHNvIGJlIHRocm93biBpbnRvIHRoZSBtaXguIApJIHdvdWxkIGRlZmluaXRlbHkgcGxheSBhbiB1bnJha2VkLCB0YWtpbmcgdHVybnMgdG8gYmUgdGhlIGRlYWxlciBCSiBnYW1lIHdpdGggZnJpZW5kcyB3aG8gcHJvYmFibHkgaGF2ZW4gc3R1ZGllZCB0aGUgc3RyYXRlZ3kuIFRoYXQgc291bmRzICtFViB0byBtZSBldmVuIGJlZm9yZSB0aGUgImdldHRpbmcgaW52aXRlZCBiYWNrIHRvIGEgZ29vZCBnYW1lIiBmYWN0b3IgaXMgY2FsY3VsYXRlZC4gCkVkaXQ6IFdvdy4gIDEwLiBJIG1pZ2h0IGFzIHdlbGwgYmUgYSBmbGF0IGVhcnRoZXIKSSB3YXMgYSB5b3VuZywgZm9vbGlzaCBnaXJsIHNldHRpbmcgdXAgc2hvcCBpbiB0aGUgVUsgYW5kIGhlIHdhcyBhIHZlcnkgZGFzaGluZyB5b3VuZyBtYW4gd2l0aCBhIHNtaXJrIGFuZCBhIHZlcnkgc3R1cGlkIGdvYXRlZSB0aGF0IEkgbG92ZWQuIApKZSBuIGphbWFpcyB2dSB1bmUgamV1bmUgZmlsbGUgZGUgMTUgYW5zIHF1aSBkaXQgcXVlIHNvbiBydmUgZXN0IGRlIGRldmVuaXIgdW5lIHByb3N0aXR1ZS4gTGUgam91ciBvIHVuIHByZSBtZSBkaXJhICJPaCEgSiBxdWUgbWEgZmlsbGUgZGV2aWVubmUgdW5lIHRyYXZhaWxsZXVzZSBkdSBzZXhlIiwgIGNlIG1vbWVudCBsLCBqIHBsdXMgZGUgcmVzcGVjdCBwb3VyIGNlIGdlbnJlIGRlIHRyYXZhaWwuCkFkdmVydGlzZWQgYXMgdGhlIGN1cmUgZm9yIHRoZSBmYXJtZXJzJyBzbWFsbCBjcm9wcywgdGhlIGdlbmV0aWNhbGx5IG1vZGlmaWVkIHNlZWRzIG5lZWQgbW9yZSBwZXN0aWNpZGVzLCB3YXRlciBhbmQgZmVydGlsaXplciB0aGFuIHRoZSBmYXJtZXJzIGNhbiBhZmZvcmQsIGNyZWF0aW5nIHNocml2ZWxlZCBhbmQgaW5mZXN0ZWQgcGxhbnRzLiAKSGUgd2FzbiB3YWxraW5nIGRvd24gdGhlIHN0cmVldCwgaGUgd2FzIGF0IGhpcyBwbGFjZSBvZiBidXNpbmVzcyB3aGVyZSBoZSBoYXMgYXNzdW1lZCBhIHJvbGUgb2YgcmVzcG9uc2liaWxpdHkgd2l0aGluIHRoZSBjb21wYW55LiAKSW5zdGVhZCBvZiBsYXVuY2hpbmcgdGhlIG1vbmV0YXJ5IGVhc2luZyBhbmQgYm9vc3Rpbmcgc3BlbmRpbmcgYXQgYSB0aW1lIHdoZW4gSmFwYW4gcHVibGljIGRlYnQgaXMgbmVhcmluZyAyNTAlIG9mIGl0cyBHRFAsIEFiZSBzaG91bGQgaGF2ZSBpbW1lZGlhdGVseSBlbWJhcmtlZCBvbiBzdHJ1Y3R1cmFsIHJlZm9ybXMgYW5kIGRlcmVndWxhdGlvbiB0aGUga2luZHMgb2YgdG91Z2ggY2hhbmdlcyBuZWVkZWQgdG8gc3B1ciBpbm5vdmF0aW9uIGFuZCBlbnRyZXByZW5ldXJzaGlwLCBjcmVhdGUgbmV3IGJ1c2luZXNzIG9wcG9ydHVuaXRpZXMgYW5kIGJvb3N0IGVtcGxveW1lbnQsIHNheXMgQWRhY2hpLCB3aG8gaXMgYWxzbyBhIGZvcm1lciBCT0ogb2ZmaWNpYWwuIEhlIHRoaW5rcyB0aGVyZSBtYXkgYmUgeWV0IG1vcmUgZWFzaW5nIGlmIHRoZSBCT0ogbGF0ZXN0IHRhY3RpY3MgZmFpbCB0byBwdXNoIHByaWNlcyBoaWdoZXIgd2l0aGluIHRoZSBjb21pbmcgaGFsZiB5ZWFyIG9yIHNvLi4gCkhlIGFzc3VyZWQgbWUgdGhhdCBvcmdhbml6ZXJzIGhhZCBjYXJlZnVsbHkgbm90ZWQgdGhlIGZlZWRiYWNrIGZyb20gdGhlIDIwMTggc2hvdywgYW5kIGFkZGVkIGZvdXIgbW9yZSBkaXNwbGF5IGdhcmRlbnMsIGJyaW5naW5nIHRoZSBudW1iZXIgdG8gMjMgZHJhbWF0aWMgcHJlc2VudGF0aW9ucy4gSW4gYWRkaXRpb24sIHRoZXJlIHdpbGwgYmUgMTAgc21hbGxlciBzcGFjZSwgY2l0eSBsaXZpbmcgdmlnbmV0dGVzIHRoYXQgd2lsbCBmZWF0dXJlIGdyZWF0IGlkZWFzIGZvciBwYXRpb3MsIGJhbGNvbmllcyBhbmQgY29uZmluZWQgb3V0ZG9vciBhcmVhcy5UaGUgZGlzcGxheSBnYXJkZW5zIGFyZSBhbGwgY3JlYXRlZCBieSB0b3AgZGVzaWduIHByb2Zlc3Npb25hbHMgYW5kIGluc3RhbGxlZCBieSB0aGUgdGFsZW50ZWQgbGFuZHNjYXBlIGFydGlzdHMgd2hvIGFyZSB0aGUgaGVhcnQgYW5kIHNvdWwgb2YgdGhpcyBzaG93LiBUaGVhdHJpY2FsIGxpZ2h0aW5nIGFuZCBzbGlnaHRseSBjb29sZXIgdGVtcGVyYXR1cmVzIGluc2lkZSBhbHdheXMgYWRkIGEgd2hvbGUgbmV3IGRpbWVuc2lvbiB0byB0aGlzIGdhcmRlbiBleHBlcmllbmNlLlB1bmNoaW5nIHVwIHRoZSBjb2xvdXIgYW5kIHB1bXBpbmcgb3V0IHRoZSBwZXJmdW1lLCAzMCwwMDAgYnVsYnMsIHBlcmVubmlhbHMsIHRyZWVzIGFuZCBzaHJ1YnMgaGF2ZSBhbGwgYmVlbiBmb3JjZWQgaW50byBsZWFmIGFuZCBibG9vbS4gClRoaXMgbm90IG9ubHkgc3VnZ2VzdHMgdGhhdCB0aGVscmVkJ3Mga2luZ2RvbSB3YXMgcG90ZW50aWFsbHkgc3Ryb25nZXIgdGhhbiBiZWZvcmUsIGFuZCB0aGVyZWZvcmUgdW5saWtlbHkgdG8gYmUgZWFzaWx5IGNvbnF1ZXJlZCwgYnV0IGNvdWxkIGhhdmUgYmVlbiBhbiBlZmZlY3RpdmUgZm9yY2UgYWdhaW5zdCB0aGUgVmlraW5nIGludmFkZXJzLiAKTS4gTGF1cmVudCBNSVNFUlksIHByb2Zlc3NldXIgZGUgZGVybWF0b2xvZ2llIGV0IGRpcmVjdGV1ciBkdSBsYWJvcmF0b2lyZSBkZSBuZXVyb3NjaWVuY2VzICBsJ1VuaXZlcnNpdCBkZSBCcmVzdApJIHdhcyB2ZXJ5IHJlc2lzdGFudCB0byBtb3ZlIHRvIDk1IHdoZW4gaXQgd2FzIGZpcnN0IHJlbGVhc2VkIGFzIEkgd2FzIGEgRE9TIGZhbmJveS4gRGlhbCB1cCBuZXR3b3JraW5nIHdhcyBhIHBhaW4gaW4gdGhlIGFzcyB0byBnZXQgd29ya2luZyBvbiA5NSwgYW5kIHBsYXlpbmcgTVVEcyB3YXMgaWZmeSBhdCBiZXN0IChUZWxpeCB3YXMgbXkgZ28gdG8gRE9TIHByb2dyYW0gZm9yIGxvY2FsIEJCU3MgYW5kIG11ZGRpbmcpLiBUaGVuIHRoaXMgbmV3IGZhbmdsZWQgdGhpbmcgY2FsbGVkIHdhcyBtYWtpbmcgd2F2ZXMgICBDRCBxdWFsaXR5IHNvdW5kIGFuZCBpdCBvbmx5IHRvb2sgdXAgNU1CIG9mIHNwYWNlPyBIb2x5IHNoaXQhIChpdCB3YXMgYSBiaWcgZGVhbCBiZWNhdXNlIHNwYWNlIHdhc24gYXMgY2hlYXAgYXMgaXQgd2FzIHRvZGF5LiBhbmQgNU1CIGRpZG4gdGFrZSB0aGF0IGxvbmcgdG8gZG93bmxvYWQsIGV2ZW4gb3ZlciBkaWFsdXApLiBUaGF0IGZpbmFsbHkgY2F1c2VkIG1lIHRvIG1ha2UgdGhlIGp1bXAuCkkgaGl0IHRoaXMgZ3JlZW4gbWF5YmUgb25lIG91dCBvZiBldmVyeSAxMCByb3VuZHMsIHNvIEkgZ28gYWhlYWQgYW5kIHRlZSBvZmYuIApBbiBvdXRzaWRlIGNhcmQgd291bGQgY29tcGxldGUgdGhlIFN0cmFpZ2h0IGJ5IGZpbGxpbmcgYW4gb3V0c2lkZSBzcG90LiBGb3IgZXhhbXBsZSwgaWYgeW91IGhhdmUgYSAzLCA0LCA1LCBhbmQgNiwgeW91IGNvdWxkIGdldCBhIDIgb3IgYSA3IHRvIGNvbXBsZXRlIHRoZSBzdHJhaWdodC4KV2hhdCBhcmUgdGhlIHJ1bGVzIG9mIGN1dHRpbmcgY2FyZHMgaW4gYSBnYW1lIG9mIHBva2VyPwpJIGxpa2UgdG8gaGFuZyBvdXQgd2l0aCBmcmllbmRzIGFuZCBwbGF5IHZpZGVvIGdhbWVzIGluIG15IGZyZWUgdGltZS4gCkZvciBzbWFsbGVyIGJ1c2luZXNzIGZvbGtzLCBsYXduIGNhcmUgZ3V5cywgY29uc3RydWN0aW9uIGV0Yy4gCkFib3V0IGFuIGhvdXIgYWZ0ZXIgdGhlIHNlY29uZCBjYWxsIHRoZSBlbXBsb3llZSB3aG8gdG9vayB0aGUgZmlyc3QgY2FsbCBjb21lcyBiYWNrIHRvIG1lIHNheWluZyB0aGVyZSBpcyBhIHdvbWFuIGF0IHRoZSBmcm9udCBvZiB0aGUgc3RvcmUgd2hvIHdhbnRlZCB0byBzcGVhayB0byBtZSBhYm91dCBoaW0gbm90IGhvbm9yaW5nIGEgY291cG9uLiBJdCB3YXMgdGhlIHNhbWUgZXhwaXJlZCBjb3Vwb24uIFNoZSB0b2xkIG1lIHRoYXQgc2hlIHdvdWxkIGJlIGdvaW5nIGVsc2V3aGVyZSBmb3IgcGl6emEgZnJvbSB0aGF0IHBvaW50IG9uIGJlY2F1c2Ugb3VyIHNlcnZpY2Ugd2FzIHRlcnJpYmxlLCBzcGVjaWZpY2FsbHkgdGhhdCBub3QgaG9ub3JpbmcgYW4gZXhwaXJlZCBjb3Vwb24gZm9yIGEgbG95YWwgY3VzdG9tZXIgKEkgaGFkIG5ldmVyIHNlZW4gaGVyIGJlZm9yZSBhbmQgd2UgaGFkIG5vIHJlY29yZHMgb2Ygb3JkZXJzIGZyb20gaGVyKSB3YXMgImJhZCBidXNpbmVzcyIuIEkgdG9sZCBoZXIgc2hlIHdhcyB3ZWxjb21lIHRvIGdvIGVsc2V3aGVyZS4KU2ltaWxhciB0aGluZyBoYXBwZW5lZCBhdCBteSBzY2hvb2wuIEluIDYgZ3JhZGUgSSB3YXMgcGxhY2VkIHdpdGggYW5vdGhlciBmcmllbmQgdG8gYSBkZXNrIGNsdW1wIHdpdGggYSBib3kgdGhhdCB3YXMgdGhlICJ3ZWlyZCBraWQiLiBUaGUgdGVhY2hlciB0b2xkIHVzIGluIHByaXZhdGUgdGhhdCBhbGwgdGhlIG90aGVyIGtpZHMgaGFkIGFza2VkIHRvIGJlIG1vdmVkIG91dCBvZiBoaXMgZGVzayBjbHVtcCBhbmQgc28gc2hlIHdhbnRlZCB1cyB0byBzaXQgd2l0aCBoaW0sIHByb2JhYmx5IGJlY2F1c2Ugd2Ugd2VyZW4ndCB0b3RhbCBkaWNrcyBsaWtlIHRoZSByZXN0IG9mIHRoZSBjbGFzcy4gCldlcmUgcGlja2VkIHVwIGJ5IGxpbW8sIHdoaWNoIHdlIHdlcmVuIGV4cGVjdGluZywgd2UgZ290IHRvIHdhbGsgZG93biB0aGUgcmVkIGNhcnBldCBpbnRvIHRoZSBiaWdnZXN0IHBva2VyIHJvb20geW91IHNlZSBhbmQgdGhlbiBwbGF5IG9uIHRoYXQgdGFibGUuIApJIGdldCB0byBkZXRhaWxzIGFib3V0IHRoZW0gYmVsb3cuIE9uY2UgeW91ciBib2R5IGhhcyAibG9vc2VuZWQgdXAiIGluIGFsbCB0aGUgbWFqb3IgYXJlYXMsIHlvdSBtYWtlIHJlYWwgcHJvZ3Jlc3Mgd2hlbmV2ZXIgeW91IHRyeSB0byBkcm9wIGludG8gYSBzcGxpdCBvciB3aGF0ZXZlci4gVGhpcyBjb21lcyBpbiB0aGUgZm9ybSBvZiBpbXByb3ZlZCAiY29sZCIgZmxleGliaWxpdHksIGFjdGl2ZSBmbGV4aWJpbGl0eSwgYW5kIGFuIGluY3JlYXNlZCB0b2xlcmFuY2UgZm9yIGxvbmdlciBhbmQgbG9uZ2VyIGhvbGRzLi4gCjMwMCBQYXVsc29uIFBoYXJvYWggQ2FzaW5vIFRvcCBIYXQgUG9rZXIgQ2hpcCBTZXQgd2l0aCBBbHVtaW51bSBDYXNlIFJldmlldwpJIHdhcyBoZWFkIHRvIGhlYWQgd2l0aCBhIGZyaWVuZCwgY3VsbWluYXRpbmcgaW4gbWUgZ29pbmcgYWxsIGluIGFmdGVyIHRoZSByaXZlci4gCk9uZSBndXkgaGFzIHdvbiBzZWF0cyB0byB0aGUgV1NPUCBtYWluIGV2ZW50IG1vcmUgdGhhbiBvbmNlLiBBbm90aGVyIGhhcyBvdmVyICQ0MDBLIGluIHRvdXJuYW1lbnQgd2lucyAoY29uZmlybWVkLCBJIGxvb2tlZCBoaW0gdXAuKS4gCldoYXQgeW91IGFjdHVhbGx5IHNhaWQgd2FzICJNZW50YWwgaGVhbHRoIGlzc3VlcyBhcmUgbmV2ZXIgYSBqdXN0aWZpY2F0aW9uIiBzbyB5b3UgY2FuIGV4YWN0bHkgY29tcGxhaW4gdGhhdCBzb21lYm9keSByZXRvcnRlZCB3aXRoIGFuIGluc3RhbmNlIGluIHdoaWNoIHRoZXkgb2Z0ZW4gYXJlLgpXb3cgc28gYWZ0ZXIgaGUgd2FzIHByZXNpZGVudCwgaGUgbm8gbG9uZ2VyIHN1cHBvcnRlZCBhIHJldm9sdXRpb24/Ckkgc2VlIHNvbWUgcGVvcGxlIHJlZmVyZW5jaW5nIHRoZSBzcGVlY2ggYW5kIGRlYmF0ZSBjbGF1c2UuIFRoYXQgZG9lcyBub3QgcHJvdGVjdCBtZW1iZXJzIG9mIHRoZSBsZWdpc2xhdHVyZSBmcm9tIGNyaW1pbmFsIHByb3NlY3V0aW9uLiBWLiAKVGhleSBiZXQgaGltICQxIG1pbGxpb24gdGhhdCBoZSBjb3VsZG4ndCByZWR1Y2UgaGlzIGJvZHkgZmF0IHRvIDEwIHBlcmNlbnQgaW4gc2l4IG1vbnRocywgYWNjb3JkaW5nIHRvIEFCQyBOZXdzLgpJIGNhbm5vdCByZW1lbWJlciBpZiB0aGVyZSB3YXMgYSBtZWNoYW5pY2FsIHJvb20gYWJvdmUgb3IgYmVsb3cgdGhlIG9ic2VydmF0aW9uIGRlY2suIFdoZW4gSSB2aXNpdGVkIHRoZSBvYnNlcnZhdGlvbiBkZWNrLCBpdCB3YXMgYWxyZWFkeSBjbG9zZWQgdG8gdGhlIHB1YmxpYywgaG93ZXZlciBhIGZyaWVuZCB3aG8gbGl2ZWQgaW4gdGhlIGJ1aWxkaW5nIGF0IHRoZSB0aW1lIG5vdGljZWQgdGhhdCBzb21lb25lIGxlZnQgdGhlIGRvb3IgdW5sb2NrZWQuIFRoZSBvYnNlcnZhdGlvbiBkZWNrIGlzIGNvbXBsZXRlbHkgZW5jbG9zZWQgd2l0aCBubyBvdXRkb29yIGFjY2VzcywgYW5kIGl0IHRvb2sgdXAgdGhlIGVudGlyZSBmbG9vciBtaW51cyB0aGUgc3RhaXJ3ZWxscy4uIApBbmQgbGV0IGJlIGhvbmVzdCwgbW9zdCB3aG8gdXNlIEFsbGlhbnQgZm9yIE1PIGFyZSBtb3ZpbmcgdGhvdXNhbmRzIGEgd2VlayBhbmQgcHJvYmFibHkgbm90IG1haW50YWluaW5nIGEgaGlnaCBiYWxhbmNlLiAKU2ltcGx5IGVudGVyIHlvdXIgcG9zdGNvZGUgaW50byBTaW5nbGVzTmVhci4gQ2hlY2sgd2hvIGlzIGluIGEgYmFyIGJlZm9yZSB5b3UgZGVjaWRlIHRvIGdvLCBzY29wZSBvdXQgYSByZXNvcnQsIGNpdHksIGNsdWIsIHVuaXZlcnNpdHksIGV0Yy4gCkhlJ3MgYWdncmVzc2l2ZSB3aGVuIGhlJ3MgZ290IGEgbG90IG9mIGNoaXBzICh3aGljaCBpcyBvZnRlbiksIGFuZCBkb2Vzbid0IHBsYXkgYXMgd2VsbCB3aGVuIGhlJ3Mgc2hvcnQgc3RhY2tlZC4gCjE3IG1pbGVzIGlzIHN0aWxsIGEgcmVzcGVjdGFibGUgbG9uZyBydW4gZGlzdGFuY2UgYW5kIHlvdSBwcm9iYWJseSBjb3VsZCBmaW5pc2ggdGhlIG1hcmF0aG9uIGlmIHlvdSBhdCBsZWFzdCBtYWludGFpbmVkIHlvdXIgY3VycmVudCBmaXRuZXNzIGxldmVsLiBJZiBpdCB3ZXJlIG1lLCBJIHByb2JhYmx5IHdhaXQgdG8gbWFrZSB0aGUgZGVjaXNpb24gdG8gZHJvcCBvdXQuCjQpIEluIHRoaXMgc3R1ZHkgb2YgNTE3IHBhdGllbnRzIHdpdGggcHJvdHJ1ZGVkIGx1bWJhciBkaXNjcyA4NCUgcmVzcG9uZGVkIHdlbGwgdG8gbWFuaXB1bGF0aW9uLCBhbmQgOSUgZGlkIG5vdCByZXNwb25kIHRvIG1hbmlwdWxhdGlvbi4gVGhlIG9wZXJhdG9yIHJlc3RzIG9uZSBoYW5kIGluIGZyb250IG9mIHRoZSBzaG91bGRlciBhbmQgdGhlIG90aGVyIGhhbmQgb24gdGhlIGJ1dHRvY2suIEJ5IHNpbXVsdGFuZW91c2x5IHB1bGxpbmcgdGhlIHNob3VsZGVyIGJhY2t3YXJkcyBhbmQgcHVzaGluZyB0aGUgYnV0dG9jayBmb3J3YXJkcywgYSBzbmFwIG9yIGNsaWNrIGNhbiB1c3VhbGx5IGJlIGhlYXJkIG9yIGZlbHQuIFRoZW4gbWFuaXB1bGF0ZSBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCBhIHNpbWlsYXIgc25hcCBvciBjbGljayBtYXkgYmVoZWFyZCBvciBmZWx0LiBTdWJqZWN0aXZlbHkgaXQgaGFzIGRyYW1hdGljIGluZmx1ZW5jZSBvbiBib3RoIHBhdGllbnQgYW5kIG9wZXJhdG9yIGFuZCBpcyB0aG91Z2h0IHRvIGJlIGEgc2lnbiBvZiByZWxpZWYuIgpJZiB5b3UgZ2l2ZSB0aGUgcHVtcGtpbiBhIGxpdHRsZSBzbWFjayBvbiBpdHMgc2lkZSwgdGhlIGNhbmRsZSBzaG91bGRuJ3QgbW92ZSBmcm9tIGl0cyBwb3NpdGlvbi4gClRvIHNheSB0aGF0IEkgZm9ydHVuYXRlIHRvIHdvcmsgYXQgdGhlIGVzdGFibGlzaG1lbnQgSSBjdXJyZW50bHkgd29yayBhdCBpcyB0cnVlLCBidXQgSSB3b3VsZCBhbHNvIHNheSBJIHB1dCBpbiBzb21lIHdvcmsuIDMgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpCaWcgZ2lybHMsIHNraW5ueSBnaXJscyBpdCBkb24ndCBtYXR0ZXIgd2hhdCB5b3UgZ290IENhbnQgbGV0IHlvdSBnbyB0b28gZmFyLCBjYXVzZSB5b3VyIGEgc3VwZXJzdGFyIE5vdyBoZXJlJ3MgdGhlIGNvdW50ZG93biBsZXQgZW0ga25vdy4uIApUaGlzIHdhcyBDIHNjaG9vbCBhbmQgYSBmZXcgeWVhcnMgaW50byBteSBjYXJlZXIgKGFuZCBJIHdhcyBtb3JlIHRoYW4gZmFtaWxpYXIgd2l0aCBob3cgYmFkIHByZSB3b3Jrb3V0IGlzIGZvciBydW5uaW5nKS4gClRoZSBjYXIgaW5kdXN0cnksIHdlIGhhdmUgdHdvIHdvcmxkcywgb24gdGhlIG9uZSBoYW5kIEV1cm9wZSB3aGljaCBpcyBhIGNhdGFzdHJvcGhlLCBhbmQgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIHdoZXJlIGl0IGxvb2tzIG11Y2ggYmV0dGVyLCBzYWlkIEZlcmRpbmFuZCBEdWRlbmhvZWZmZXIsIHByb2Zlc3NvciBvZiBhdXRvbW90aXZlIGVjb25vbWljcyBhdCB0aGUgdW5pdmVyc2l0eS4KT25lIG9mIHRoZW0gd291bGQgYmUgYXJvbWF0aGVyYXB5LCB3aGljaCBieSBuYXR1cmUgaXMgYW4gYWx0ZXJuYXRpdmUga2luZCBvZiB0cmVhdG1lbnQgZm9yIGlsbG5lc3Nlcy4gCldoYXQgZ290IHVzIGludG8gdGhpcyBtZXNzIHdhcyB0aGUgcHJlc3MgdHJlYXRpbmcgaGlzIGNhbXBhaWduIGxpa2UgYSBiaWcgc3BlY3RhY2xlIHNpbmNlIHRoZXkgYmVsaWV2ZWQgaGUgbmV2ZXIgaGFkIGEgcmVhbCBzaG90IGF0IHdpbm5pbmcuIChOb3QgdG8gbWVudGlvbiB0aGUgcmFtcGFudCB0cmVhc29uIGFuZCBmYWlsdXJlIG9mIHNvY2lhbCBtZWRpYSBjb21wYW5pZXMgdG8gZmlsdGVyL2NvbWJhdCBmYWtlIG5ld3MpLiAKSSBhZ3JlZSBlbnRpcmVseSB0aGF0IGdvb2Qgc2xlZXAgKGZvciBwYXJlbnRzIGFuZCBraWRzISkgaXMgZmFyIG1vcmUgaW1wb3J0YW50IHRoYW4gZWxpbWluYXRpbmcgYWxsIHN0cmVzc29ycyBpbiBhIGJhYnkgbGlmZS4gTXkgc29uIHdhcyBzbGVlcCB0cmFpbmVkIChoZSBuZXZlciBsaWtlZCBiZWluZyByb2NrZWQgdG8gc2xlZXAsIHNvIHdlIGhhZCB0aGF0IGdvaW5nIGZvciB1cykgYW5kIGhlIGdvZXMgZG93biBmb3IgZXZlcnkgbmFwIGFuZCBiZWR0aW1lIHdpdGggYW4gYWJzb2x1dGUgbWF4aW11bSBvZiA1IG1pbnV0ZXMgb2Ygd2hpbmluZyBvciBjcnlpbmcuIAoiWW91IGFjdHVhbGx5IGxvb2sgcmVhbGx5IHNraW5ueSwiIHRoZSB3b21hbiBiZWhpbmQgS0tXIEJlYXV0eSBhZGRlZCB3aGVuIGNvbXBsaW1lbnRpbmcgS2hsb2UncyBsb29rIGZvciB0aGUgZXZlbnQuCk15IGhpcHMsIGFjY29yZGluZyB0byBtZSwgYXJlIGh1Z2UgKEkga25vdyBJIGFtIGV4YWdnZXJhdGluZyksIGJ1dCBJIGRvIGxpa2UgbXkgYXJtcywgbXkgZXllcywgbXkgYmFjayBhbmQgSSB0cnkgdG8gaGlnaGxpZ2h0IGFuZCBicmluZyB0aGVtIG91dCB1c2luZyBibG91c2VzIHdpdGggbm8gc2xlZXZlcywgbWF5YmUgYSBsaXR0bGUgYml0IHRpZWQgaW4gdGhlIGJhY2ssIGFuZCBuaWNlIGNvbG9ycyBmb3IgbXkgZXllcyAod2hpY2ggZ2l2ZSBtZSBhbiBhdHRyYWN0aXZlIGV4cHJlc3Npb24pLi4gCkF0IGZpcnN0IGdsYW5jZSwgeW91IHJlYWxseSBkb24ndCBnZXQgYSBsb3Qgb2YgaW5mb3JtYXRpb24gZnJvbSB0aGUgdGl0bGUgUG9rZXIgRWRnZSBQb2tlciBTb2Z0d2FyZSwgcmlnaHQ/IEJhc2ljYWxseSwganVzdCBzb3VuZHMgbGlrZSBzb21lIHNvcnQgb2YgYWR2YW50YWdlLCBidXQgaW4gdGhlIGVuZCB0aGVyZSBhcmUgc2V2ZXJhbC4gU28gdGFrZSBhIGxvb2sgYXQgYWxsIHRoZSBiZW5lZml0cyB3ZSBmb3VuZCBhbmQgdGhlbiB5b3UgY2FuIGdvIG92ZXIgeW91cnNlbGYgYW5kIHJlYWQgYWJvdXQgdGhlIHJlc3QuIApUaGV5IGhhdmUgYSBzdGFuZGluZyBydWxlIG9mIG5vIGR3YXJmIGpva2VzIHdoZW4gdGhlIHBlcnNvbiB3aXRoIGR3YXJmaXNtIGlzIHBsYXlpbmcgKGRpc2NhcmQgdGhlIGNhcmQgYW5kIGdyYWIgYW5vdGhlciksIGFuZCBkb24gcGxheSBKZXN1cyBjYXJkcyB3aGVuIEpvc2ggaXMgdGhlIGp1ZGdlLCBhcyBoZSBhIENocmlzdGlhbiB3aG8gZmVlbHMgaXQgZGlzcmVzcGVjdGZ1bC4gCllvdSBoYXZlIHRvIGNvbXByb21pc2UgZXZlcnkgbm93IGFuZCB0aGVuIG9uIHRob3NlIHRoaW5ncy4gSSBndWVzcyB0aGF0IHBhcnQgb2YgdGhlIHJlYXNvbiB0aGF0IEkgZGVlbWVkIHRoZSByZWxhdGlvbnNoaXAgcGVyZmVjdC4gT24gYW55dGhpbmcgd2UgbWF5IGhhdmUgZGlmZmVyZWQsIHdlIGFsd2F5cyBjb21wcm9taXNlZCBpbiBoZWFsdGh5IHdheXMuLiAKQW5zd2VyMSBCaWxsIFRpbGRlbi4gSGUgZG9taW5hdGVkIHRoZSBzcG9ydCBmcm9tIDE5MTIgdW50aWwgYWJvdXQgMTkzMCwgd2lubmluZyAxMzggb2YgMTkyIHRvdXJuYW1lbnRzIGluIHRoYXQgcGVyaW9kLCBhbmQgY29tcGlsaW5nIGEgbWF0Y2ggcmVjb3JkIG9mIDkwNyA2Mi4gQW5zd2VyIDIgUm9kIExhdmVyIGlzIHByb2JhYmx5IHRoZSBncmVhdGVzdCBsYXduIHRlbm5pcyBwbGF5ZXIgb2YgYWxsLiBDZXJ0YWlubHksIG1vc3QgcG9sbHMgaGF2ZSBjaG9zZW4gaGltIGFzIHRoZSBncmVhdGVzdCBldmVyIHRlbm5pcyBwbGF5ZXIsIGJ1dCBldmVuIGFzIGEgJ2dyYXNzIHBsYXllcicgb25seSwgSSB3b3VsZCBjaG9vc2UgaGltIGFzIHRoZSBCZXN0LiBUaGUgcmVhc29uIEkgc2F5IHRoaXMgaXMgdGhhdCA5IG9mIGhpcyAxMSBHcmFuZCBzbGFtIHNpbmdsZXMgdGl0bGVzIHdlcmUgd29uIG9uIGdyYXNzLiBZZXQgYSBmdXJ0aGVyIDQgUHJvZmVzc2lvbmFsIFNsYW0gc2luZ2xlcyB0aXRsZXMgd2VyZSBhbHNvIHdvbiBvbiBncmFzcywgd2hlcmVhcywgaWYgb25lIHdhcyB0byBjb21wYXJlIHdpdGggVGlsZGVuIFthcyBzdWdnZXN0ZWQgYWJvdmVdICAgVGlsZGVuIHdvbiBvbmx5IDIgb24gZ3Jhc3MuIEFsc28sIERvdWJsZXMgb24gZ3Jhc3M6IFRpbGRlbiByYXJlbHkgd29uIGEgZG91YmxlcyBzbGFtOyBSb2QgTGF2ZXIgd29uIDcgZ3JhbmQgc2xhbSBkb3VibGVzIHRpdGxlcyBvbiBncmFzcyBzdXJmYWNlLiAoRnVsbCBBbnN3ZXIpClN1cmUgaXQgY291bGQgYmUgaW1wcm92ZWQsIGVzcGVjaWFsbHkgd2l0aCBzb21lIG1vZGVybmlzYXRpb24gYW5kIGV4cGFuc2lvbiwgbW9yZSByZXNlYXJjaCBpbiB0aGUgRVUgaW5zdGVhZCBvZiBidXlpbmcgaW4sIGFuZCB0aGVyZSB0aGUgYWRkaXRpb25hbCBwcm9ibGVtIG9mIGRpZmZlcmVudCBjdWx0dXJlcy9sYW5ndWFnZXMsIGJ1dCB0aGV5IGFyZSB0d28gY29tcGxldGVseSBkaWZmZXJlbnQgbWlzc2lvbnMgdGhhdCBhcmUgYmVpbmcgZGVzY3JpYmVkLgpXaXRob3V0IHRoZSB2ZWdldGFibGUgb2lsLCB0aGlzIHJlY2lwZSBpcyBzdWl0YWJsZSBmb3IgdXNlIGluIGFuIGFyb21hdGhlcmFweSBkaWZmdXNlciwgc2ltbWVyaW5nIHBhbiBvZiB3YXRlciwgb3IgcG90cG91cnJpIGNvb2tlci4gCllvdSBoYXZlIHRvIG1hbmFnZSB0aG9zZSBmZWVsaW5ncy4uIApbZGVsZXRlZF0gIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KVGhlIGV4dHJhIGhlYXQgd2lsbCBoZWxwIGJvdGggdGhlIHNwZWVkIGFuZCB0aGUgc3VjY2VzcyByYXRlIG9mIGdlcm1pbmF0aW9uLiAKVGlwcyBhbmQgU3RyYXRlZ3kKU29ycnksIGJ1dCByZWdhcmRsZXNzIG9mIHRoZSByZXN0IG9mIGhpcyBiZWhhdmlvciBvciB5b3VyIHRpbWUgd29ya2luZyBhdCB0aGUgY291bnRyeSBjbHViLCB0aGF0IHNwZWNpZmljIGludGVyYWN0aW9uIHdhcyBub3Qgc2V4aXNtIG9yIGNvbmRlc2NlbnNpb24uIEhlIHN0aWxsIHZlcnkgbXVjaCBhIGNyZWVwLCBidXQgaGUgd2FzIG5vdCBiZWluZyBjb25kZXNjZW5kaW5nIG9yIHNleGlzdC4gVGhlIHNleGlzbSBzdGFydGVkIGV2ZW4gYmVmb3JlIHRoaXMgcGFydGljdWxhciBjb21tZW50LiAKSSB3b25kZXIgaWYgdGhleSBqdXN0IGRvIGl0IHNvIHRoZSBidXJnbGFyIGdldHMgYXdheSBzbyB0aGV5IGRvbnQgaGF2ZSB0byB3b3JyeSBhYm91dCBjYXRjaGluZyBoaW0uLiAKU29tZSA3MCByaWRlcnMgcmVnaXN0ZXJlZCB3aXRoIGEgJDIwIGRvbmF0aW9uIHRvIHRoZSBob21lLCBvZiB3aGljaCA2MyBhY3R1YWxseSByb2RlIHRoZSByb3V0ZS4gU2V2ZXJhbCBvZiB0aGUgcmlkZXJzIGdhdmUgZG91YmxlIHRoZSBlbnRyYW5jZSBmZWUgYW5kIHJlZnVzZWQgY2hhbmdlLiBNaWxpdGFyeSBWZXRzIE1vdG9yY3ljbGUgQ2x1YiwgU291dGhlcm4gTWFyeWxhbmQgQ2hhcHRlciByYWlzZWQgb3ZlciAkMjI2NS4gClRpbWVzIGFyZSBnb29kIGluIFdpbmRzb3IgcmlnaHQgbm93QWRtaW5pc3RyYXRvcnMgc2F5IHRoZXkgbmVlZCAkNDE2IG1pbGxpb24gZnJvbSBjaXR5IHRheHBheWVycyB0aGlzIHllYXIsIGNvbXBhcmVkIHRvICQ0MDMuNiBtaWxsaW9uIGluIDIwMTguIFRoYXQgZXh0cmEgJDEyLjQgbWlsbGlvbiB3b3VsZCB0cmFuc2xhdGUgaW50byBhICQ5MCBpbmNyZWFzZSBmb3Igc29tZW9uZSB3aG8gb3ducyBhICQxNTAsMDAwIGhvdXNlLCBzYWlkIFRyZWFzdXJlciBKb2UgTWFuY2luYS4gCkxlYXNlIHBheW1lbnRzIGFyZSBhIGZ1bmN0aW9uIG9mIHNlbGxpbmcgcHJpY2UsIHJlc2lkdWFsIHZhbHVlICh0aGUgcHJpY2UgdGhlIGZhY3RvcnkgYnV5cyB0aGUgY2FyIGZvciBhdCB0aGUgZW5kIG9mIHRoZSBsZWFzZSksIGFuZCBtb25leSBmYWN0b3IgKHRoZSBlcXVpdmFsZW50IG9mIGludGVyZXN0IHJhdGUpLiAKU2VsZiBDb29raW5nQmFjb24gIDc3IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KVGhlcmUgaXMgYSBzdWJzZXQgb2YgYnJld2VycyB5ZWFzdCB0aGF0IGlzIHJlZmVycmVkIHRvIGFzICJ2YXIuIERpYXN0YXRpY3VzIiB3aGljaCBjYW4gcHJvZHVjZSBnbHVjb2FtbHlhc2UuIApPdWdodCB0byB5b3Ugc2VsbCBzdG9jayBpbiBlbWVyZ2luZyBtYXJrZXRzPyBTdG9ja3MgZnJvbSBjb21wYW5pZXMgaW4gZW1lcmdpbmcgbWFya2V0cyBvciBjb21wYW5pZXMgaW4gZGV2ZWxvcGluZyBuYXRpb25zIGhhdmUgYmVlbiBhbiBjbGVhciBjaG9pY2UgZm9yIHRoZSBzdG9jayBtYXJrZXQgcGxhY2UgaW52ZXN0b3IgZm9yIHNvbWUgdGltZSBub3cuIApFdmVuIEltcmFuIGNsb3NlIGFpZGVzIGFkbWl0IHRoZXkgbWlnaHQgbG9zZSBzb21lIGNvbnNlcnZhdGl2ZSBzdXBwb3J0IGJlY2F1c2Ugb2YgdGhpcyBraW5kIG9mIHVuY291dGggbWFubmVyaXNtLiBUaGUgU2tpcHBlciB3aWxsIGhhdmUgdG8gZG8gbG90cyBvZiBleHBsYWluaW5nIGlmIGhlIGV2ZXIgY29tZXMgdG8gdGhlIFBhcmxpYW1lbnQgYWdhaW4uIApJIGhhdmVuIHdhdGNoZWQgYW55dGhpbmcgdGhhdCB3YXNuIGFpcmluZyBhbmQgSSB3YXRjaGluZyBsZXNzIGFuZCBsZXNzIG9mIGFpcmluZyBkcmFtYXMuIEkgaGF2ZW4gbWV0IGEgc2luZ2xlIHBlcnNvbiB0aHJvdWdoIGRyYW1hcyBhbmQgb25seSB0YWxrIHRvIDIgb2YgdGhlIHBlb3BsZSBJIG1ldCB0aHJvdWdoIGRyYW1hcywgd2UgZG9uIHRhbGsgYWJvdXQgZHJhbWFzIGFueW1vcmUgdGhvdWdoLCBhdCBhbGwuLiAKSWYgeW91IGNvbXBsYWluIGFib3V0IERhcmZ1ciwgdGhleSBzZW5kIGFuIGVtaXNzYXJ5IGFuZCB0cnkgYW5kIGltcHJvdmUgdGhpbmdzLiAKSSBuZXZlciBlbnRpcmVseSBibGFtZWQgSG93YXJkLCBidXQgSSB0aG91Z2h0IGhlIHNob3VsZCBoYXZlIGJlZW4gc2VudCBvZmYgdGhlIHNob3cgYWZ0ZXIgYXR0YWNraW5nIFRlZCwgYWdhaW4gdGhhdCBzYW1lIHllYXIgYWZ0ZXIgbWlzc2luZyB0aGUgU2FnZXQgcm9hc3QgYW5kIHJldmVhbGluZyBvbiB0aGUgYWlyIGhlIHdhcyB1c2luZywgYW5kIGF0IGFueSBudW1iZXIgb2YgcG9pbnRzIGR1cmluZyAyMDA5IHdoZW4gaGUgd2FzIGdvaW5nIHRocm91Z2ggc3RyZXRjaGVzIG9mIG1hbmljIGVuZXJneSBiZXR3ZWVuIGFic2VuY2VzLgpNY0tlb24gaXMgYWxzbyB1bmhhcHB5IHdpdGggdGhlIHNlbGVjdGlvbiBvZiB0aGUgUkFORCBDb3JwLiB0aGluayB0YW5rIHRvIGRvIG11Y2ggb2YgdGhlIGxlZ3dvcmsgZm9yIHRoZSBzdHVkeS4gTWNLZW9uIHRvbGQgUGVudGFnb24gb2ZmaWNpYWxzIHdvcmtpbmcgb24gdGhlIHJldmlldyB0aGF0IHRoZSBjb21wYW55IGhhZCAic2lnbmlmaWNhbnQgc2hvcnRjb21pbmdzIiBpbiBwYXN0IHdvcmsgYW5hbHl6aW5nIHRoZSBpc3N1ZSBhbmQgcGFydG5lcmVkIHdpdGggYSBncm91cCBhZHZvY2F0aW5nIHJlcGVhbCBsYXN0IHllYXIuCkkga2VlcCB0cnlpbmcgdG8gcHV0IGhpbSBpbiBoaXMgYmFzc2luZXQsIGJ1dCBoZSBzdGFydHMgZnVzc2luZyBhIGZldyBtaW51dGVzIGxhdGVyLiAKVGhleSBzZXdlZCBpdCBiYWNrIG9uIGJ1dCBpdCBuZXZlciB3b3JrZWQgd2VsbCBhZnRlciB0aGF0LiAKSSBmZWVsIGxpa2UgY3J5aW5nIGJjIG9mIGhvdyBzY2FyZWQgSSBhbS4gSSdtIHNhZmUgcmlnaHQgbm93IGFuZCBoYXZlIGEgZ29vZCAxMDAgb3Igc28gbWlsZXMgYmV0d2VlbiB1cy4gClNvbWUgcGVvcGxlIG1ha2UgYSBkaXN0aW5jdGlvbiBiZXR3ZWVuIENvbW11bmlzbSAod2l0aCBhIGNhcGl0YWwgQykgYW5kIGNvbW11bmlzbSAod2l0aCBhIGxvd2VyY2FzZSBDKS4gQmlnIEMgQ29tbXVuaXNtIGlzIHRoZSBzdHJ1Z2dsZSB0aHJvdWdoIHRoZSB2YXJpb3VzIGVjb25vbWljIHN0YWdlcyBvZiBoaXN0b3J5IGFuZCB0aGUgY3VycmVudCBzdHJ1Z2dsZSBhZ2FpbnN0IGNhcGl0YWxpc20gdG8gYWNoaWV2ZSBhIGNvbW11bmlzdCBzb2NpZXR5IGluIHRoZSBmdXR1cmUuIExpdHRsZSBDIGNvbW11bmlzbSBpcyB0aGF0IGNsYXNzbGVzcywgc3RhdGVsZXNzLCBtb25leWxlc3Mgc29jaWV0eS4gVGhhdCdzIHdoeSB5b3UgY2FuIHNheSB0aGF0IHRoZSBVU1NSIHdhcyBDb21tdW5pc3QgYnV0IHRoYXQgaXQgd2Fzbid0IGNvbW11bmlzdC4gQ29uZnVzaW5nIGFmIGkga25vdy4KSWYgeW91IGludGVydmlld2luZyB0byBiZSBhIFN5c0VuZywgcGFydCBvZiB0aGF0IHByb2Nlc3Mgc2hvdWxkIGJlIFlPVSBhc2tpbmcgdGhlIGhpcmluZyBtYW5hZ2VyIEVYQUNUTFkgVEhJUy4gClRoaXMgaXMgYSBmcmVxdWVudGx5IGFza2VkIHF1ZXN0aW9uLiBBbGwgeW91IG5lZWQgdG8gcGxheSBhdCBXUFQgQ2x1YiBmcm9tIGlPUyBvciBBbmRyb2lkIGJhc2VkIHRhYmxldCBpcyB0byBsYXVuY2ggYnJvd3Nlci4gClRoaXMgaXMgc2hpdHR5LCBidXQgYSBwcm9ibGVtIHdpdGggaG93IHdlIGRlYWwgd2l0aCBkcnVnIGxhd3MsIG5vdCB3aXRoIGhvdyB3ZSBkZWFsIHdpdGggZ3Vucy4gWW91IHNob3VsZG4gaGF2ZSBhIGd1biBpZiB5b3UgYXJlIGJyZWFraW5nIHRoZSBsYXcsIGVzcGVjaWFsbHkgaWYgaXRzIHJlbGF0ZWQgdG8gZHJ1Z3MsIGJlY2F1c2Ugb2YgZ2FuZyB2aW9sZW5jZSBhbmQgZHJ1ZyByZWxhdGVkIHZpb2xlbmNlLiBUaGF0IGlzIGEgYmFkIHJlY2lwZS4gV2Uga25vdyB0aGF0IGZyb20gdGhlIGhpc3Rvcnkgb2YgdGhlIGxhc3Qgc2l4dHkgeWVhcnMgb3Igc28uIFRoZSBwcm9ibGVtIGhlcmUgaXNuIHRoZSBndW5zLCBvciB0aGUgZGF0YWJhc2UsIGl0cyB0aGF0IG1hcmlqdWFuYSBzaG91bGQgYmUgbGVnYWxpemVkIGZlZGVyYWxseS4KKE15IEdsb2JlIGxhcHRvcCB3b3VsZCBlbGVjdHJvY3V0ZSBtZSBpZiBJIHRyaWVkIHRvIHB1dCB0aGF0IG9uIGFuIGV4cGVuc2UgcmVwb3J0LikgVGhlIGRyaW5rIGlzIG1peGVkIHdpdGggMTE4IHllYXIgb2xkIGNvZ25hYyBhbmQgY29tZXMgd2l0aCBhIG5ldyBJbmRpYW4gbW90b3JjeWNsZSwgYSBicmFuZCBvcmlnaW5hbGx5IHByb2R1Y2VkIGluIFNwcmluZ2ZpZWxkLiBUaGUgZ2xlYW1pbmcgYmlrZSBpcyBvbiBkaXNwbGF5IGluIHRoZSBDb21tb253ZWFsdGggQmFyIGFuZCBMb3VuZ2Ugb24gdGhlIGdhbWJsaW5nIGZsb29yLCB3aGVyZSB0aGUgY29ja3RhaWwgaXMgb24gdGhlIG1lbnUuIApUaGVyZSBhcmUgYWxzbyAiTG8iIGdhbWVzLCB0aGUgY29tYmluYXRpb25zIHRoYXQgd2lucyBpbiB0aGVzZSBraW5kcyBvZiB2YXJpYW50cyBhcmUgdGhlIGxvd2VzdCBoYW5kcyBwb3NzaWJsZS4gCkVhdCBoZWFsdGh5LiAKVGhlcmUgdHdvIHJlYXNvbnMgdGhlIGZsYXQgZmVsbGVkIHNlYW0gaXMgcG9wdWxhciBpbiBkZW5pbS4gQSAgIGl0IGNvbXBsZXRlbHkgaGlkZXMgdGhlIHJhdyBlZGdlcyBwcmV2ZW50aW5nIGZyYXkgYW5kIEIgICBhcyBhIGJsdWUgY29sbGFyIHdvcmsgZ2FybWVudCBmYWJyaWMsIHRoZSBjbG90aGVzIHdvdWxkIGJlIGhhcmQgd29ybiBhbmQgaGFyZCB3YXNoZWQsIHNvIGZyYXkgY29udHJvbCB3YXMgZXh0cmEgaW1wb3J0YW50Li4gCkx1Y3kgUm9rYWNoIGlzIGtub3duIGZvciBoZXIgY29uc2lzdGVudCB2aWN0b3JpZXMgaW4gYSB2YXJpZXR5IG9mIHBva2VyIHRvdXJuYW1lbnRzLiBIZXIgd2lubmluZ3MgYWRkIHVwIHRvICQxLDI4NSw0MTcuIEZvciAxNSB5ZWFycyBzaGUgZWFybmVkIGhlciBwbGFjZSBpbiBwb2tlciBjb21tdW5pdHkgcHJlZmVycmluZyB0byBwbGF5IGluIHRvdXJuYW1lbnRzIHdpdGggc21hbGwgYnV5IGlucy4gRnJvbSB0aW1lIHRvIHRpbWUsIEx1Y3kgdGFrZXMgcGFydCBpbiB0aGUgV1NPUDsgNiB0aW1lcyBzaGUgbGVmdCB0aGUgdG91cm5hbWVudCB3aXRoIHByaXplcyBhbmQgdHdpY2UgZm91Z2h0IGZvciB0aGUgZmlyc3QgcGxhY2UgYXQgdGhlIGZpbmFsIHRhYmxlLiBUb2RheSwgUm9rYWNoIG1haW5seSBwYXJ0aWNpcGF0ZXMgaW4gdG91cm5hbWVudHMgaGVsZCBpbiB0aGUgVUsuCkhlcmUgbXkgdGhlb3J5LCBhbmQgaXQgYSBwZXNzaW1pc3RpYyBvbmUgYnV0IGhlcmUgd2UgZ28uIApBIFVTIG1pbGl0YXJ5IHdpbGxpbmcgdW5yZXNlcnZlZGx5IHR1cm4gYWdhaW5zdCB0aGUgY2l0aXplbnMgPSBhIGZ1Y2tlZCBjaXRpemVucnkuIFRoZSBwcm9ibGVtcyB0aGV5IGhhZCBpbiBBZmdoYW5pc3RhbiBhbmQgVmlldG5hbSB3b3VsZCBiZSBzaWduaWZpY2FudGx5IGhhcmRlciB0byBvdmVyY29tZSBkb21lc3RpY2FsbHkuIApQbGVudHkgb2YgcHVudGVycyBpbiBib3RoIHJvb21zLCBlc3AgRnJpIGFuZCBTYXR1cmRheS4gTW9oZWdhbiBpcyBhIHNsaWdodGx5IG5pY2VyIGNhc2lubyBhbGwgdGhlIHdheSBhcm91bmQgaW5jbHVkaW5nIHRoZSBwb2tlciByb29tLCBidXQgeW91IGZpbmQgZmFyIG1vcmUgdmFyaWV0eSBhdCBmb3h3b29kcy4gTW9oZWdhbiB0b3VybmFtZW50cyBhcmUgdGhlIHNhbWUgNjAgMTIwIGRvbGxhciBidXkgaW4gdGhyaWNlIGRhaWx5IGFsbCBtb250aCB3aXRoIHRoZSB2ZXJ5IG9jY2FzaW9uYWxseSB3ZWVrZW5kL2hvbGlkYXkgc2VyaWVzLiAKRW5kZWQgdXAgZ2V0dGluZyBiYWNrIG9uIGEgc3Rha2UgYW5kIHBsYXllZCBmdWxsIHRpbWUgZm9yIHRoZSBuZXh0IDYgbW9udGhzIGFuZCBtYWRlIGl0IGFsbCBiYWNrIHBsdXMgbGlrZSA1MGsgYnkgdGhlIGVuZCBvZiB0aGUgeWVhci4gClRoZXNlIHdlcmUgdGhlIGRheXMgb2YgbGF3bGVzc25lc3MuIE1pbmVycyBmbG9vZGluZyBpbnRvIGEgdG93biBpbiBob3BlcyBvZiBzdHJpa2luZyBpdCByaWNoLCBhbmQgZ2FtYmxlcnMgdGFraW5nIGNoYW5jZXMgYWx3YXlzIGZvciBtb25leS4gQW5kIHdoZW4gdGhpbmdzIGRpZG4ndCBnbyByaWdodCBhcyB0aGV5IGdhbWJsZWQsIHNob290aW5ncyByZXN1bHRlZCB0aGF0IGxlZnQgb25seSB0aGUgYnVsbGV0IGhvbGVzIGluIG9sZCBidWlsZGluZ3MgZm9yIHBlb3BsZSB0byBsb29rIGJhY2sgb24gb25lIGRheSBhbmQgcmVtZW1iZXIgdG8gcmVtZW1iZXIgYSB0aW1lIHdoZW4gdGhlIFdlc3QgdHJ1bHkgV0FTICJ3aWxkLiIKV2UgbG9va2VkIG92ZXIgc2V2ZXJhbCBkaWZmZXJlbnQgdHlwZXMgb2YgY2hpcHMsIGJ1dCBub3RoaW5nIGxvb2tlZCBhcyBnb29kIGFzIHRoZSAxMDAgV29ybGQgUG9rZXIgVG91ciBQb2tlciBDaGlwIFNldCB3aXRoIHN1Y2ggYSBsb3cgY29zdC4gCkx1Y2lhRmFtaWx5IFJlc29ydHMgaW4gU3QuIApXZWxsIG5vIGhlIG5vdCAid3JvbmciICAgdW5sZXNzIHlvdSB0YWxraW5nIGFib3V0IHNwZWNpZmljIHRoaW5ncyBhYm91dCB3aGl0ZSBuYXRpb25hbGlzbSB3aGljaCBhcmUgY29tcGxldGVseSBkZWJhdGFibGUuIApMb3cgU3BsaXQKRXZlci4gClllYWggSSBhbSBnb25uYSB0cnkgdXNpbmcgbW9yZSBjdWVzIGZvciBteSBiaWcgMyB3aGVuIEkgc3RhcnQgU2hlaWtvLCBJIGdldCB3aGF0IHlvdSdyZSBzYXlpbmcgYnV0IEkgZGlkbid0IHdhbnQgdG8gY2hhbmdlIHRoZSB3YXkgSSBkZWFkbGlmdGVkIHdoZW4gSSB3YXMgdGVzdGluZy4gSXQgd2FzIHRoZSBmaXJzdCB0aW1lIEkgdHJpZWQgYSBkZWFkbGlmdCBiYXIgc28gd2hhdCB5b3UgYXJlIHNheWluZyB3b3VsZCBoZWxwIGhlYXBzLiBUaGFuayB5b3UgZm9yIHRoZSBmZWVkYmFjayA6KSAxIHBvaW50ICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KRG9uJ3QgY2FsbCBtZSBxdWVlci4gCk5ldWUgS3VuZGVuIGRlcyAgQW5iaWV0ZXJzIGhhYmVuIGF1ZXJkZW0gZGllIGVpbm1hbGlnZSBNZ2xpY2hrZWl0LCBpbSBMYXVmZSBkZXMgZXJzdGVuIEphaHJlcyBpaHJlciBNaXRnbGllZHNjaGFmdCBpbSAgYmlzIHp1ICQgMTAuMDAwIGFuIENhc2lubyBCb251cyBHdXRzY2hyaWZ0ZW4genUgZXJoYWx0ZW4uIERpZSBob2NobW9kZXJuZSBTU0wgVmVyc2NobHNzZWx1bmdzdGVjaG5vbG9naWUgbWFjaHQgZGFiZWkgZWluZW4gQ2FzaW5vIERlcG9zaXQgZWJlbnNvIHdpZSBlaW5lIEF1c3phaGx1bmcgenVtIEt1bmRlbiBoaW4genUgZWluZXIgYWJzb2x1dCBzaWNoZXJlbiBBbmdlbGVnZW5oZWl0LCBnZXJhZGUgc28sIHdpZSBpbiBlaW5lciBydGxpY2hlbiBCYW5rZmlsaWFsZS4uIApUaGUgZ29vZCBuZXdzIGlzIGlmIHlvdSBoYXZlIGEgUFM0IGNvbnRyb2xsZXIgeW91IGNhbiBwbHVnIHRoYXQgaW50byBhIFVTQiBwb3J0IGFuZCBwbGF5IHRoZSBnYW1lIHdpdGggdGhhdC4gRm9yIG1lIHRoaXMgaXMgbXVjaCBwcmVmZXJyZWQgb3ZlciBwbGF5aW5nIG9uIHRoZSBwaG9uZSBiZWNhdXNlIG9mIHRoZSB0b3VjaCBjb250cm9scywgYnV0IGl0IGlzIHJlYWxseSBuaWNlIHRvIGhhdmUgdGhlIGdhbWUgb24gdGhlIHBob25lIGJlY2F1c2UgeW91IGNhbiBwbGF5IGl0IGZyb20gYW55d2hlcmUuLiAKVG8gYmUgYSBncmFuZCBwb2tlciBwbGF5ZXIsIHRoZSBoaWdobGlnaHRlZCB0aXBzIGJlbG93IGFyZSBlc3NlbnRpYWwgaW4geW91ciBnYW1ibGluZyBsaWZlIGFuZCB3aWxsIGhlbHAgeW91IHRvIHN1cnZpdmUgYXQgQ2x1YldQVC4gCkEgbCdoZXVyZSBvIGxlcyAidmVnYW4iIGxlcyBwbHVzIHZpc2libGVzIHNvbnQgc291dmVudCBleHRybWVzIGV0IGFncmVzc2lmcywgbmEgZXN0IHBsZWluZSBkZSB0b2xyYW5jZSBldCBkJ2NvdXRlLiAKQ291bmNpbCBzdGFmZiBzYWlkIHRoZSBkZW1hbmQgZm9yIGVudGl0bGVtZW50cyB3YXMgJydleHRyZW1lbHkgaGlnaCcnLCB3aXRoIGVudGl0bGVtZW50cyBiZWluZyBib3VnaHQgYW5kIHNvbGQgb24gdGhlIHNhbWUgZGF5IHRvIHRoZSBoaWdoZXN0IGJpZGRlci4gCkZpcnN0IHVwZGF0ZWQgZWFjaCBzYXRlbGxpdGUgdXNpbmcgMi4zLjAuMzIgd2l0aG91dCB0aGUgaW50ZXJpbSBzdGVwLiBUaGVuIHVwZGF0ZWQgdGhlIHJvdXRlciB0byAyLjIuMS4yMTIuIApUaGUgYWVzdGhldGljIGFuZCBhcnQgc3R5bGUgaGFzIHJlYWxseSBnb25lIHRvIHNoaXQuIEV2ZXJ5dGhpbmcgZmVlbHMgc28gYnJpZ2h0IGFuZCBmbGFzaHkuIFRoZSBpbnNhbmUgYW1vdW50IG9mIGNvc21ldGljcyBhbmQganVzdCBob3cgdGFtZSBldmVyeXRoaW5nIGlzIG1ha2VzIG1lIGZlZWwgbGlrZSBpIHBsYXlpbmcgYXQgYSBwYWludGJhbGwgYXJlbmEgYWdhaW5zdCBhIGdyb3VwIG9mIGtpZHMuIFRoaXMgaXNuIGEgY3JpdGljaXNtIG9mIGp1c3QgQ2FsbCBvZiBEdXR5LCBpIGZlZWwgaW4gZ2VuZXJhbCBwbGVudHkgb2YgZnJhbmNoaXNlcyBoYXZlIGxvc3QgdGhlIHRoYXQgaSBmZWxsIGluIGxvdmUgd2l0aC4KVGhhdCBzbyBpbmZ1cmlhdGluZyB0byBoZWFyIHRoYXQgeW91ciBtb3RoZXIgaXMgc28gY29udHJvbGxpbmcgYW5kIGhlYXJ0bGVzcywgYW5kIGlzIG5vdCBlbWJyYWNpbmcgdGhlIHZhbHVlcyBvZiBoZXIgb3duIHJlbGlnaW9uLi4gClBva2VyIGlzIGEgYnJhaW4gZ2FtZS4gTGVhcm5pbmcgeW91ciBjb21wZXRpdG9yJ3MgdGhpbmtpbmcgaXMgZmFyIG1vcmUgaW1wb3J0YW50IHRoYW4gdGhlIHF1YWxpdHkgb2YgeW91ciBjYXJkcy4gSW4gdGhlIGVuZCwgdGhpcyB0ZWNobmlxdWUgZGVjaWRlcyB3aG8gd2lsbCB3aW4gYW5kIHdobyB3aWxsIG5vdC4gUmVhZGluZyBhbmQgZ3Jhc3BpbmcgeW91ciBvcHBvbmVudCdzIHN0cmF0ZWdpZXMgaXMgYWxsIHRoYXQgbWF0dGVycy4KWW91IGFyZSBsaXRlcmFsbHkgc2F5aW5nIHlvdXIgd2lmZXMgZ2lmdCB0byB5b3Ugd2FzIHRvIGhhdmUgYSBzZXggdHJhZmZpY2VkIGRydWcgcGxpZWQgcHJpc29uZXIgdG8gYmUgZm9yY2VkIHRvIGplcmsgeW91IG9mZiBvciBmYWNlIGRpcmUgcGFpbmZ1bCBjb25zZXF1ZW5jZXMuCldlIHdvdW5kIG91ciB3YXkgdGhyb3VnaCBuZWlnaGJvcmhvb2RzLCBzdG9wcGluZyB0byBhc2sgbWVuIG9uIGJpa2VzIHdpdGggaWNlIGNyZWFtIGNhcnRzLCB0aGUgbWFzcyBxdWFudGl0eSBvZiBwZW9wbGUganVzdCBsb2FmaW5nIGFsb25nc2lkZSB0aGUgc3RyZWV0cy4gVW5lbXBsb3ltZW50IGluIE5pY2FyYWd1YSBpcyBhcm91bmQgNTAlIGZyb20gd2hhdCBJJ3ZlIHJlYWQsIGFuZCBmcm9tIHdoYXQgSSd2ZSBzZWVuLCBJIGJlbGlldmUgaXQuIApOb3QgdG9vIG11Y2ggYnV0IEkgc3RhcnRpbmchIEkganVzdCBiZWdhbiB3YXRjaGluZyBDaGluZXNlIGFuZCBUYWl3YW5lc2UgbmV3cyBicm9hZGNhc3RzLiBNeSB2b2NhYnVsYXJ5IGluIHBvbGl0aWNzL2dvdiBpcyBwcmV0dHkgbGltaXRlZCBzbyBJIGRvIHN0cnVnZ2xlIHRvIGtlZXAgdXAuIEJ1dCB0aGlzIGlzIGFuIGFyZWEgSSB3YW50IHRvIGdyb3cgaW4gOikgSSBhbHNvIHRyaWVkIHdhdGNoaW5nIHNvYXAgb3ByZWFzIHdpdGggbXkgbW9tIGJ1dC4gSSBub3QgdGhlIGJpZ2dlc3QgZmFuIG9mIHRoZXNlIGhhaGEuIEkga25vdyBFbmVzIEthbnRlciBtZW50aW9uZWQgaGUgbGVhcm5lZCBFbmdsaXNoIGJ5IHdhdGNoaW5nIEplcnNleSBTaG9yZSBhbmQgU3BvbmdlYm9iIHRobyBsb2wgc28gSSBuZWVkIHRvIGdpdmUgcG9wdWxhciBUViBhbm90aGVyIHNob3QuIEFyZSB0aGVyZSBhbnkgc2hvd3MgeW91IHJlY29tbWVuZD8KRGl2aW5nIGhhcyBzYXZlZCBJdGFseSBmcm9tIHR3byBjb3VudHJpZXMgd2hvc2UgY29tYmluZWQgcG9wdWxhdGlvbiBpcyBoYWxmIG9mIHRoZWlycyBhbmQgZm9yIHdoaWNoIGZvb3RiYWxsIHJhbmtzIGFzIHJvdWdobHkgdGhlIDV0aCBvciB3b3JzdCBtb3N0IHBvcHVsYXIgc3BvcnQuIApBZnRlciBhYm91dCB0d28gaG91cnMgb2Ygd2Fsa2luZywgYW4gZW5vcm1vdXMgZ2FyZGVuIHBlZWtzIGludG8gdmlldywgdGhlIFdvbWIgb2YgdGhlIFdvcmxkIGNlbnRlcmVkIGFyb3VuZCBhIHNtYWxsIGlubGV0IGZyb20gdGhlIHNlYS4gT25jZSBldmVyeW9uZSBhcnJpdmVzLCB0aGUgTWV1cmlldCBDaGllZnRhaW4gZ2l2ZXMgYSBzbWFsbCBzcGVlY2ggdG8gZXZlcnlib2R5LApJZiB5b3UgaGF2ZSBhIGRyYXcgdG8gdGhlIGJlc3QgaGFuZCwgY2hlY2sgYW5kIGNhbGwgKG9uY2UgYWdhaW4sIGFzc3VtaW5nIHRoZSBwb3Qgb2RkcyBhcmUgY29ycmVjdCkuIApZb3Ugc25lYWtlZCBhIGNpZ2FyZXR0ZT8gU29ycnksIEdvb2dsZVVTV2VsbG5lc3MsIHRoZSBnb3Zlcm5tZW50J3MgcGFydG5lciBpbiB0cmFja2luZyBBbWVyaWNhbiBoZWFsdGgsIGZvdW5kIG91dC4gWW91IGp1c3Qgdm9pZGVkIHlvdXIgaGVhbHRoIGluc3VyYW5jZS4gCkFwcHJlY2lhdGVkIHBsYXlpbmcgdGhpcyByaWdodCBhZnRlciBaTSBmb3IgY29tcGFyaXNvbidzIHNha2UuIEl0IHJlYWxseSBkb2VzIHNob3cgaXRzIGFnZSB0aG91Z2ggICB2ZXJ5IGFyY2hhaWMuIApIb3cgVG8gUGxheSBQb2tlcj8KUG91cnF1b2kgY2UgbW91dmVtZW50IHByZW5kIGlsIGRlIGwnYW1wbGV1ciBhdWpvdXJkJ2h1aSA/IElsIG1lIHNlbWJsZSBxdSdpbCB5IGEgdW4gbW91dmVtZW50IGRlIGZvbmQgZmF2b3JpcyBwYXIgaW50ZXJuZXQgcG91ciBtb250cmVyIGQnYXV0cmVzIGNvcnBzIGV0IGx1dHRlciBjb250cmUgbGVzIHN0cm90eXBlcyBkdSBjb3JwcyBwYXJmYWl0LiAKWW91IHdpbGwgYmUgbWFraW5nIGFuIGludmVzdG1lbnQgd2hlbiB5b3UgcHVyY2hhc2UgdGhlc2UgY29sbGVjdGlibGUgY2hpcHMgYW5kIHlvdSB3YW50IHlvdXIgaW52ZXN0bWVudCB0byBsYXN0IGEgbG9uZyB0aW1lLiAKQnV0IG5vdCB0byB3b3JyeSAgYmVjYXVzZSBldmVuIGlmIHlvdSBoYXZlIHRvIHRyeSAzIG9yIDQgc2V4IHRveXMsIGV2ZW50dWFsbHkgeW91IGZpbmQgb25lIHRoYXQgaXMgYSBnb29kIGludmVzdG1lbnQgZm9yIHlvdS4gCkRpZSBNYXNzYWdlIGthbm4gZGFiZWkgaGVsZmVuLCBkYXNzIGRpZSBTY2h1bHRlcm4gZW50c3Bhbm50IGJsZWliZW4gdW5kIGRpZSBBdG11bmcgdGllZiB1bmQgcmVnZWxtaWcgZ2VzY2hpZWh0LiBJaHIgUGFydG5lciAgIG9kZXIgZWluIHZlcnRyYXV0ZXIgTWVuc2NoLCBkZXIgU2llIGR1cmNoIGRlciBHZWJ1cnQgYmVnbGVpdGV0ICAgc29sbHRlIHNlaW5lIEhuZGUgYXVmIElocmUgU2NodWx0ZXJuIGxlZ2VuIHVuZCBsZWljaHRlbiAoISkgRHJ1Y2sgYXVzYmVuLiAKSSBhbHNvIGxpa2UgY296eSBjYWJpbnMuIApJIGhhdmUgc2NvcmVkIHRoaXMgYWNjb3JkaW5nIHRvIHRoZSBvdmVyYWxsIG91dGxheSwgbm90IHRoZSBwZXIgZ2lybCBvdXRsYXksIHNpbmNlIHRoZXJlIGlzIG5vIG9wdGlvbiB0byB0YWtlIG9ubHkgb25lLiBJIGFsc28gYm91Z2h0IGEgZ2xhc3Mgb2YgQ29rZSBmb3IgODAgYmFodC4gCkRvY3RvcnMgc2FpZCBoZSBtYXkgbm90IGJlIGFibGUgdG8gd2FsayBhZ2FpbiBhbmQgdGhhdCBoZSBkZWZpbml0ZWx5IHdvdWxkIG5vdCBiZSBhYmxlIHRvIHJpZGUgYSBtb3RvcmN5Y2xlLiAKQmVpIEJldHNzb24gaGFiZSBpY2ggdm9yIGVpbiBwYWFyIE1vbmF0ZW4gYW5nZWZhbmdlbiwgd2VpbCBCaWcgQmxpbmQgZWluZSBncm9lIExpZ2EgbWl0IEJldHNzb24gZ2VtYWNodCBoYXQuIApJdCdzIHVwIHRvIHRoZSBjb25zY2lvdXMgYnJhaW4gdG8gYWN0aXZlbHkgc2F5ICJubywgSSBkb24ndCB3YW50IHRvIGRvIHRoYXQsIEkgd2FudCB0byBsaXZlIiBpbiBvcmRlciB0byBtb3RpdmF0ZSB5b3UgdG8ga2VlcCBnb2luZy4gCkEgbG90IG9mIHRoZSBjb21tZW50cyBzdWdnZXN0IHRoYXQgdGhleSBzcGVjaWFsaXplIGluIHBlb3BsZSB3aXRoIGJhZCBjcmVkaXQsIHdoaWNoIGNvdWxkIGdvIGVpdGhlciB3YXkuQWxsIHRoaXMgc2FpZCwgSSBoYXZlIGEgcmVhbGx5IGhhcmQgdGltZSBiZWxpZXZpbmcgdGhhdCBzb21lb25lIGNhbiBlc3NlbnRpYWxseSBzZW1pIHJldGlyZSBhdCAzNiB0byBob3N0IGEgYnVuY2ggb2Ygd3Jlc3RsaW5nIHBvZGNhc3RzIChhbmQgYnkgYWxsIGFjY291bnRzLCBzcGVuZCBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgZG9sbGFycyBjb2xsZWN0aW5nIHdyZXN0bGluZyBtZW1vcmFiaWxpYSkgd2l0aG91dCBkb2luZyBzb21ldGhpbmcgZ3JlYXN5LmJyYW5kcm9pZGlhbiAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSBkb24gZ2V0IGl0LiAKUGxheSB0aGUgaGlnaGVzdCBzdGFrZXMgeW91IGNhbiwgYnV5IGluIGF0IHRoZSBtYXgsIGFuZCBpbW1lZGlhdGVseSBwdW50IHlvdXIgc3Rha2UgaW50byB5b3VyIGZyaWVuZHMuIFRvIGRvIHNvLCBqdXN0IGZpbmQgYSBnb29kIHNwb3QgdG8gaXNvbGF0ZSB5b3VyIGZyaWVuZCwgZ28gYWxsIGluLCBhbmQgZG9uIGNhcmUgd2hvIHdpbnMuIAoiRG91Z2xhcyBDb3VudHkgaXMgdmVyeSBnZW5lcm91cy4iIFRoZSBjb3VudHkgcmFua2VkIGZvdXJ0aCBpbiB0aGUgc3RhdGUgZm9yIHBlciBjYXBpdGEgZG9uYXRpb25zIHRvIHRoZSBBbWVyaWNhbiBDYW5jZXIgU29jaWV0eSwgc2hlIHNhaWQuVGhpcyB5ZWFyLCBCcmljZSBoYXMgcmFpc2VkIHRoZSBiYXIgZm9yIGhpcyB0ZWFtLiBUaGUgNiB5ZWFyIG9sZCB3YW50cyB0byBlYXJuICQxOCwwMDAgZnJvbSB0aGUgbGF3bm1vd2VyIHJhY2UuIkFsbCB0aGUgbW9uZXkgd2UgYnJpbmcgaW4gYXQgdGhlIHJlbGF5IHN0YXlzIGluIG91ciBhcmVhLCIgc2FpZCBKb3NoIFJpY2gsIGVudGVydGFpbm1lbnQgY2hhaXJtYW4gZm9yIHRoaXMgeWVhcidzIHJlbGF5IGFuZCBhIDE2IHllYXIgdmV0ZXJhbiBvZiB0aGUgZXZlbnQuIApJdCBpcyB0aGUgN3RoIGNhcmQgd2hpY2ggaXMgZGVhbHQgd2l0aCB0aGUgZmFjZSBoaWRkZW4gYW5kIGVhY2ggaW5kaXZpZHVhbCBwbGF5ZXIgaXMgdGhlIG9ubHkgcGVyc29uIHdobyBrbm93cyB0aGUgdmFsdWUgb2YgdGhlIDd0aCBjYXJkLiBUaGUgZmlyc3QgcGxheWVyIHRvIGFjdCBpcyB0aGUgcGxheWVyIGRlZW1lZCB0byBoYXZlIHRoZSBoaWdoZXN0IHBva2VyIGhhbmQuIApSYWJiaXRzLCBzbmFrZXMsIHNxdWlycmVscywgbWljZSwgbW9sZXMsIGZyb2dzIGV0Yy4gCkkgdGhpbmsgaGUgd291bGQuIApJZiB5b3Ugd2FudCB0byBzbXVkZ2Ugd2hpbGUgdHJhdmVsbGluZywgeW91IHdvbiBiZSBhbGxvd2VkIHRvIHNtdWRnZSBvbiB0aGUgcGxhbmUgYmVjYXVzZSBmaXJlIG9uIHBsYW5lcyBpcyBwcm9oaWJpdGVkIHJlZ2FyZGxlc3Mgb2YgdGhlIHNpZ25pZmljYW5jZS4gV2lubmlwZWcgYWlycG9ydCBkb2VzIGhhdmUgYSBjaGFwZWwsIGJ1dCBJIGRvbiBrbm93IGlmIHlvdSBjb3VsZCBzbXVkZ2UgaW4gdGhlcmUgb3IgaWYgeW91IGhhdmUgdG8gZ28gdG8gYSBzbW9raW5nIGFyZWEgZm9yIGhlYWx0aC9maXJlIHNhZmV0eSByZWFzb25zLiBDb250YWN0IHRoZSBhaXJwb3J0IHRvIGFzay4gClRoZXkgdGhvdWdodCBpdCB0byBiZSB0aGUgYmVzdCBwb3NzaWJsZSB3YXkgdG8gYnJlYWsgZnJlZSBub3Qgb25seSBmcm9tIHRoZWlyIHBoeXNpY2FsbHkgZm91ciB3YWxsIGNvbmZpbmVkIGxpdmVzLCBidXQgYW4gYXdlc29tZSBvcHBvcnR1bml0eSBvZiBtYWtpbmcgYSBoYW5kc29tZSBhbW91bnQgb2YgbW9uZXkgYW5kIHB1cmNoYXNpbmcgd2hhdGV2ZXIgY2FtZSB0byB0aGVpciBicmFpbnMuLiAKSWYgeW91IGNvbnNpZGVyIGFsbCBvZiB0aGUgZ2FtZXMgdGhhdCBhcmUgb2ZmZXJlZCBhdCBtYWpvciBjYXNpbm9zIGFuZCB0aG9zZSBvZmZlcmVkIGluIGRpZ2l0YWwgZm9ybSBvbiB0aGUgaW50ZXJuZXQsIHlvdSB3aWxsIGxpa2VseSBmaW5kIHRoYXQgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IG9uZXMuIFRoaXMgaXMganVzdCBhIHNtYWxsIHNhbXBsZSBvZiB0aGUgYW1vdW50IG9mIHBva2VyIG1hY2hpbmUgZ2FtZXMgdGhhdCBhcmUgYXZhaWxhYmxlIHRvZGF5LiBJbiB0aGlzIGd1aWRlLCB5b3Ugd2lsbCBiZSBpbnRyb2R1Y2VkIHRvIHNldmVyYWwgb2YgdGhlc2UgZ2FtZXMuClNoZSBzZWVtZWQgc3RyZXNzZWQgb3IgYSBiaXQgb3ZlcndoZWxtZWQgZm9yIGEgc2VjIGFuZCBoZSBpbXBhdGllbnRseSB0b2xkIGhlciB0aGF0IGhlJ3Mgc29ycnkgSSdtIHNvcnJ5IGJ1dCB0aGF0IGhlJ3MgYnVzeSBhdCB3b3JrIGFuZCBpbiB0aGUgbWlkZGxlIG9mIHNvbWV0aGluZyBhbmQgaGFkIHRvIGdvICh3ZSB3ZXJlIGFic29sdXRlbHkgbm90IGJ1c3kpLiAKVGhleSBvZnRlbiBvY2N1ciBhcyBnbHljb3NpZGVzIGluIGNvbWJpbmF0aW9uIHdpdGggc3VnYXJzLiAKV2UgYmVsaWV2ZSBtb3N0IHRoaW5ncyBpbiB0aGUgbmV3IHBhcnRzIGFyZSBzZWxmIGV4cGxhbmF0b3J5LCBmZWVsIGZyZWUgdG8gbGV0IHVzIGtub3cgaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9ucyBvciBjb21tZW50cy4gCkkgaGFkIGEgcG9ja2V0IGtuaWZlIGluIG15IGNvYXQgdGhhdCBJIHdhcyB3aGl0ZSBrbnVja2xpbmcgdGhlIHdob2xlIHRpbWUuIApCZXN0IG9mIGx1Y2sgdG8geW91LCBhbmQgSSBzb3JyeSBhZ2Fpbi4KSXQgaXMgaGFyZCB0byBibHVmZiBhbmQgaXQgaXMgdXNlbGVzcyB0byByZWFkIHlvdXIgb3Bwb25lbnRzIHNpbmNlIG1hbnkgaGFuZHMgcmVhY2hlcyB0aGUgc2hvd2Rvd24uIApUaGUgcHJvYmxlbSB3YXNuIHdoYXQgc2hlIGRpZCwgaXQgd2FzIGhvdyB0cm91YmxlZCB5b3Ugd2VyZS4gCkJ1dCBzaW5jZSB0aGV5IGRvbiB3YW50IHRvIGNoYW5nZSB0aGUgZGVzaWduIHRvIGFkZCBhaXJiYWdzIG9yIGFueXRoaW5nLCBhbmQgdGhleSBoYXZlIHRvIGhhdmUgcGFyYWNodXRlcyBvbiBib2FyZCBhbnl3YXkganVzdCBpbiBjYXNlIHRoZXJlIElTIGFuIGVtZXJnZW5jeSBlamVjdGlvbiwgaXQgaGFyZCB0byBtYWtlIHN1Y2ggYmlnIGNoYW5nZXMgdG8gdGhlIGRlc2lnbi4KIkl0IG5ldmVyIGh1cnRzIHRvIGJlIGF3YXJlIG9mIHlvdXIgc3Vycm91bmRpbmdzIiBpcyBub3QgYmFkIGFkdmljZSwgYnV0IHdoZW4gaXQgaXMgY29tcGxldGVseSBsZWFkIGludG8gYnkgZmVhciBpbmR1Y2luZyBzdGF0ZW1lbnRzIGFuZCBubyBhZHZpY2Ugb24gaG93IHRvIGJlIGF3YXJlIG9mIHlvdXIgc3Vycm91bmRpbmdzIG9yIHdoYXQgeW91IHJlY29tbWVuZCB0byBmZWVsIHNhZmUsIHRoZW4gaXQgYmVjb21lcyBmZWFybW9uZ2VyaW5nLiBUaGlzIGlzIHdoeSBpdCB3YXMgcmVtb3ZlZC4KVGhlIHByaWVzdCBnb3QgYSBiaXQgdXBwaXR5IGFuZCBzYWlkIEkgbmVlZGVkIHRvIGdpdmUgaGltIGEgY2xlYXJlciBpZGVhIHRoYW4gdGhhdC4gCkkgcmVhbGx5IGhhdGUgaG93IHBlb3BsZSB3aWxsIGp1c3QgYXNzdW1lIHRoYXQgYmVjYXVzZSB0aGV5IGZhbWlseSB0aGV5IGdldCB0aGluZ3MgZm9yIGZyZWUuIApIYXMgNiwwMDAgZW1wbG95ZWVzIGluIDIwIGNvdW50cmllcy4gCkJyYW5kb24gU2FuZGVyc29uIGJpYmxpb2dyYXBoeSBpcyBtYWpvcml0eSBhbGwgb25lIHVuaXZlcnNlIHdpdGggZWFzdGVyIGVnZ3MgYW5kIHNpZGUgYml0cyB0aGF0IGNvbm5lY3QgdGhlbSBhbGwgdG9nZXRoZXIsIHNwbGl0IG92ZXIgYSBmZXcgZGlmZmVyZW50IHRyaWxvZ2llcy9zdG9yeWxpbmVzLiAKWW91J2xsIG5lZWQgc3BlY2lhbGx5IGRlc2lnbmVkIHRpbGVzIHRvIHBsYXkgcGFpIGdvdyB3aXRoLiAKRW5kIG9mIG91ciBsaXZlcy4gCkFmdGVyIHRoZSBtYXNzYWdlIEkgd2FudGVkIHRvIHNwZWFrIHRvIGEgbWFuYWdlciBhYm91dCBteSBleHBlcmllbmNlLiBJJ3ZlIGhhZCBhIGxvdCBvZiBtYXNzYWdlcywgYnV0IG5ldmVyIGFueXRoaW5nIGFzIHVuY29tZm9ydGFibGUgYXMgdGhpcy4gSSB0aGluayB0aGUgZ2lybCB3YXMgd29ycmllZCB3aGF0IEkgd2FzIGdvaW5nIHRvIHNheSB0byB0aGUgdHdvIHN1cGVyIG5pY2UgbGFkaWVzIHVwIGZyb250IGJlY2F1c2UgdGhlIG1hc3NhZ2UgZ2lybCByZWZ1c2VkIHRvIGxlYXZlLiAKSXQgaXMgY2xlYXIgdGhhdCBTZW5hdGUgbGVhZGVycyBhbmQgRGVtb2NyYXRpYyBzdHJhdGVnaXN0cyBoYXZlIG5vdCBmdWxseSBhbnRpY2lwYXRlZCB0aGUgZGVncmVlIG9mIHJldm9sdCBncm93aW5nIGluIGFtb25nIEhvdXNlIGNvbnNlcnZhdGl2ZXMsIG1vc3Qgb2Ygd2hvbSBjYW1lIHRvIFdhc2hpbmd0b24gb24gYSBwbGF0Zm9ybSBvZiBrZWVwaW5nIHRoZSBnb3Zlcm5tZW50IG91dCBvZiB0aGUgZWNvbm9teS4gCk5vdywgdGhlcmUgYXJlIGEgZmV3IHZhcmlhdGlvbnMgb2YgdmlkZW8gcG9rZXIgdGhhdCB5b3UgY2FuIHBsYXkuIFRha2UgeW91ciBwaWNrIGZyb20gcGxheWluZyB0aGUgZ2FtZSB1c2luZyB0aGUgc3RhbmRhcmQgNTIgY2FyZCBkZWNrIDsgb3IgYSA1MiBjYXJkIGRlY2sgd2l0aCBhZGRpdGlvbmFsIHdpbGQgY2FyZHMuIFNpbmNlIGFsbCB0aGUgdmFyaWF0aW9ucyBvZiB2aWRlbyBwb2tlciBhcmUgYmFzZWQgb24gdGhlIHRyYWRpdGlvbmFsIHBva2VyIGhhbmQgcmFua2luZyBwcmluY2lwbGVzLCBpdCBpcyBhIGdvb2QgaWRlYSB0byBzaGFycGVuIHlvdXIgc2tpbGxzIGF0IHRoaXMgY2FyZCBnYW1lIGZpcnN0LgpBbmQgSSBzYWlkLCB3aGF0IGlzIGl0LCB3aGF0IGlzIGtlZXBpbmcgeW91IGZyb20gZG9pbmcgaXQ/IEFuZCBoZSBzYWlkICJub3RoaW5nIGlzLCBJJ20gaGFwcHkgdG8gZG8gaXQuIi4gClRoZSBXU09QIGFsc28gYWNjZXB0cyBwcmUgcmVnaXN0cmF0aW9uIGZvciBhbnkgYnJhY2VsZXQgZXZlbnQgdXAgdG8gMTQgZGF5cyBwcmlvciB0byB0aGUgc3RhcnQgb2YgYW4gZXZlbnQsIGFzIHRoaXMgZW5zdXJlcyB5b3VyIHNlYXQgd2lsbCBiZSByZXNlcnZlZCByZWdhcmRsZXNzIGlmIGFuIGV2ZW50IGlzIHNvbGQgb3V0LiAKV2lsbGlhbXMsIG9mIFRlbXBlcmFuY2UsIE1JLiAKV2hhdCB3YXMgdGhlIENPIHN0YWNrPyBpbiBnZW5lcmFsLCBJIG5vdCBhIGZhbiBvZiB0aGlzIHJlamFtIGJlY2F1c2UgeW91IGRvbiBoYXZlIGVub3VnaCBmb2xkIGVxdWl0eSBzaW5jZSBoZSBoYXMgdG8gcmFpc2UgY2FsbCBvZmYgdnMgeW91ciBzdGFjayBzaXplIHNvIG9mdGVuLiBJbiBnZW5lcmFsLCB5b3UgaGF2ZSB0byBiZSBkb2luZyB3ZWxsIGVub3VnaCB2cyBoaXMgb3BlbmluZyByYW5nZSAoYXNzdW1pbmcgaGUgd29uIGZvbGQgZW5vdWdoKSwgcGx1cyB5b3UgaGF2ZSB0byBmYWRlIDIgcGxheWVycyB3YWtpbmcgdXAgd2l0aCBhIG5pY2UgaGFuZCBzbyB5b3Ugc2hvdWxkIHRpZ2h0ZW4gdXAgYSBsaXR0bGUgbW9yZSB0aGFuIHNheSwgU0IgdnMgQlROIHJhaXNlLi4gCk1hcmsgQ2F2ZW5kaXNoIHNob3dzIG9mZiBoaXMgZGFuY2UgbW92ZXMgYXQgR2VudCBTaXggRGF5ClBsYXlpbmcgYXMgRWRnZXdvcnRoIGluIHRoZSBJbnZlc3RpZ2F0aW9ucyBnYW1lcyBhbmQgQXBvbGxvIGluIEFKIChub3QgcGFzdCB0aGF0KSB3YXMvd2VyZSBtb3JlIGVuam95YWJsZS4gCkluIG9yZGVyIHRvIGdldCBhIGdhbWJsaW5nIGxpY2Vuc2UgYnkgYWdlbmNpZXMgdGhhdCBoYXZlIGdvb2QgcmVwdXRhdGlvbiwgb3BlcmF0b3JzIGhhdmUgdG8gbWVldCBjZXJ0YWluIHJlcXVpcmVtZW50cy4gClRoaXMgc2l0dWF0aW9uIHNlZW1zIGFraW4gdG8gYSBzaWduIHRoYXQgc2F5cyAiV2FybmluZywgZWxlY3RyaWMgZmVuY2UiIG9uIGEgZmVuY2UgdGhhdCBoYWRuIGJlZW4gZWxlY3RyaWZpZWQsIHVudGlsIHRoZSBvd25lciBkaXNjb3ZlcmVkIHRoZSBjaXJjdWl0IGJyZWFrZXIgaGFkIGJlZW4gZmxpcHBlZC4gVGhlIHNpZ24gaGFzIGFsd2F5cyBjYXJyaWVkIHRoZSBzYW1lIG1lYW5pbmcsIHNvbWUgcGVvcGxlIGp1c3QgZ290IGF3YXkgd2l0aCBpZ25vcmluZyBpdCBmb3IgYSB3aGlsZS4KRWRpdDogb3JpZ2luYWwgcXVlc3Rpb24gYnkgY29tbWVudCBwYXJlbnQgcmVnYXJkaW5nIG5lZWQgdG8gbWFpbnRhaW4gY2VudHJpc3QgYXBwcm9hY2ggYSBsYSAyMDE2IGdlbiBEZW1vY3JhdCBzdHJhdGVneS4KWW91IG1heSBhbHNvIGNob29zZSBmcm9tIHBhZGRlZCB0YWJsZSB0b3BzLCBzdGFuZGFyZCB0YWJsZSB0b3BzLCBwbGFzdGljIHRvcHMsIGFuZCBtb3JlLi4gClRoZXNlIHBlb3BsZSBoYXZlIHZhbHVhYmxlIHNraWxscyB0aGF0IGhhdmUgdGFrZW4gdGhlbSB5ZWFycyB0byBhY3F1aXJlLCBhbmQgYXNraW5nIHRoZW0gdG8gZG8gc29tZXRoaW5nIGZvciBmcmVlIGlzIGtpbmQgb2YgaW5zdWx0aW5nLiAKV2lyIHZlcnN0ZWhlbiB1bnNlcmUgQXJiZWl0IGFscyBXZXJremV1ZyBkaWUgU3RyYWVuIHp1IHZlcndhbmRlbG4gdW5kIFZlcmJpbmR1bmcgendpc2NoZW4gZGVuIE1lbnNjaGVuIHp1IHNjaGFmZmVuLiAKQWZ0ZXIgc2NvcmluZyBhZ2FpbiBsYXRlIGluIHRoZSBmaXJzdCBvbiBhIGZsdWt5IGNhcm9tLCB0aGUgZm91cnRoIGxpbmUgbGVmdCB3aW5nZXIgY29tcGxldGVkIGhpcyBiaWcgbmlnaHQgMzoxNSBpbnRvIHRoZSB0aGlyZCBwZXJpb2Qgb24gYSBsb25nIHNob3QgZnJvbSB0aGUgc2lkZWJvYXJkcyB0aGF0IHNsaXBwZWQgcGFzdCBEYXZpZCBSaXR0aWNoIGZvciBoaXMgMTJ0aCBnb2FsLiBPdmVyIDEwMCBoYXRzIHdlcmUgdGhyb3duIG9udG8gdGhlIGljZSBieSB2b2NhbCBqZXJzZXkgd2VhcmluZyBMZWFmcyBzdXBwb3J0ZXJzLi4gClRoZSBQUFAncyBuZXdseSBkaXNjb3ZlcmVkIGFkZGljdGlvbiB0byB0aGlzIG11dGlsYXRlZCBDb25zdGl0dXRpb24gaXMgbm90IHVuZXhwZWN0ZWQuIEdpdmVuIHRoZSBwZXJzb25hbCB0cmlhbHMgKHVuZGVzZXJ2ZWQpLCBhbmQgcG9saXRpY2FsIHRyaWJ1bGF0aW9ucyAoZGVzZXJ2ZWQpLCB0aGF0IHRoZSBwcmVzaWRlbnQgaGFzIGdvbmUgdGhyb3VnaCwgaGlzIGFmZmluaXR5IGZvciBhIHNvdXBlZCB1cCB2ZXJzaW9uIG9mIHRoZSBwcmVzaWRlbmN5IHdhcyBlbnRpcmVseSBwcmVkaWN0YWJsZS4gCkNsZWFuc2luZyB0aGUgaGFpciB3aXRoIGJha2luZyBzb2RhIGZvbGxvd2VkIHdpdGggYW4gYXBwbGUgY2lkZXIgdmluZWdhciByaW5zZSwgc29tZXRoaW5nIGJvdGggTHluY2ggYW5kIFNwZW5jZXIgaGF2ZSB0cmllZCwgbWlnaHQgd29yaywgQmVyZ2ZlbGQgc2F5cy4gCkFzc29jaWF0ZWQgd2l0aCB0aGUgV2luZG93cyA3LCB0aGUgc29mdHdhcmUgY29udGludWVzIHRvIGJldCBvbiBpbm5vdmF0aW9uLiAKUG9rZXIgcHJvcyBjb21lIHRvIENhc3RsZWJhcgpUaGV5IHNlZW1lZCB3aG9sZXNvbWUgeWV0IHdoZW4gdGhlIHRpbWUgY2FtZSBmb3Igc2VyaW91c25lc3MgaXQgY2FtZSBkb3duIHRvdGFsbHkgdG8gaXQgYW5kIGl0IGZlbHQgcmVhbGx5IHNwZWN0YWN1bGFyLiAKQXQgZmF1bHQsIGFjY29yZGluZyB0byBleHBlcnQgY29tbWVudGF0b3JzIGluY2x1ZGluZyBDb3J5IEJvb2tlciwgSGVucnkgTG91aXMgR2F0ZXMsIGFuZCBKZWxhbmkgQ29iYiwgaXMgYSBsb25nIGxpc3Qgb2YgcGVycGV0cmF0b3JzLCBhbW9uZyB0aGVtOiBSaWNoYXJkIE5peG9uLCB3aG9zZSAiU291dGhlcm4gc3RyYXRlZ3kiIHBpb25lZXJlZCB0aGUgcHJhY3RpY2Ugb2YgY3luaWNhbGx5IGdhaW5pbmcgd2hpdGUgdm90ZXMgYnkgc3RpZ21hdGl6aW5nIGJsYWNrcyBhbmQgb3RoZXIgYnJvd24gcGVvcGxlIGFzIGNvZGRsZWQgY3JpbWluYWxzIGFuZCBzdGVwcGluZyB1cCBlZmZvcnRzIHRvIGRpc2VuZnJhbmNoaXNlIGJsYWNrIHZvdGVyczsgQmlsbCBDbGludG9uIGFuZCBoaXMgaGF0ZWZ1bCAxOTk0IGNyaW1lIGJpbGwsIHdoaWNoIGhlbHBlZCBleHBhbmQgbWFuZGF0b3J5IG1pbmltdW0gc2VudGVuY2VzIGFuZCBsZWQgdG8gYW4gZXhwYW5kZWQgcHJpc29uIGluZHVzdHJ5IGFuZCBhIG1vcmUgbWlsaXRhcml6ZWQgcG9saWNlIGZvcmNlOyBhbmQgdGhlIEFtZXJpY2FuIExlZ2lzbGF0aXZlIEV4Y2hhbmdlIENvdW5jaWwgKEFMRUMpLCBhIHNoYWR5IGNvbnNvcnRpdW0gb2YgY29ycG9yYXRlIGxvYmJ5aXN0cyBhbmQgc3RhdGUgbGVnaXNsYXRvcnMgdGhhdCB3cml0ZXMgYmlsbHMgdG8gYmVuZWZpdCBpdHMgYmFja2VycyAgIGluY2x1ZGluZyBjb21wYW5pZXMgbGlrZSB0aGUgQ29ycmVjdGlvbnMgQ29ycG9yYXRpb24gb2YgQW1lcmljYSB0aGF0IHByb2ZpdCBmcm9tIGJ1aWxkaW5nIGFuZCBydW5uaW5nIHByaXNvbnMuCiJXaGljaCBtYWtlcyBzZW5zZSwgYmVjYXVzZSB5b3Ugd2VyZSBlbnRlcmluZyBhIHJlY2Vzc2lvbiBpbiAyMDA4LCIgR2FmZm5lciBzYWlkLiAiVGhleSBleHBlY3RlZCAodGhlIDIwMTMgYnV5YmFjaykgdG8gdGFrZSB0d28gb3IgdGhyZWUgeWVhcnMuIEZvciBJUCwgc2hhcmUgcmVwdXJjaGFzZXMgaXMgYW4gYWRkZWQgY2FwaXRhbCBhbGxvY2F0aW9uIGl0ZW0gZm9yIHRoZW0gZmlyc3QgYW5kIGZvcmVtb3N0LiBUaGV5J3JlIGZvY3VzZWQgb24gZGl2aWRlbmRzLiIKSXQgc291bmRzIGxpa2UgaXQgY291bGQgYmUgc2Vuc29yeSBwcm9jZXNzaW5nIGRpc29yZGVyIHRvIG1lLiAKQWxsZSBSZWNodGUgdm9yYmVoYWx0ZW4uIEFsbGUgTkhMIFRyaWtvdHMsIGRpZSBtaXQgTmFtZW4gdW5kIE51bW1lcm4gZGVyIE5ITCBTcGllbGVyIHZlcnNlaGVuIHNpbmQsIHNpbmQgb2ZmaXppZWxsIHZvbiBkZXIgTkhMIHVuZCBkZXIgTkhMUEEgbGl6ZW56aWVydC4gCkl0IHdhcm5zIG9mIHBvdGVudGlhbCBkYW1hZ2UgdGhhdCByZXF1aXJlcyBhY3Rpb24gYnkgdGhlIGJyYWluLCBhbmQgaXQgY2FuIGRldmVsb3Agc2xvd2x5IG9yIHF1aWNrbHkuIApUaGVuIGhlIHJlYWxseSBsb3N0IGhpcyBzaGl0LiAKVGhlIGNlbGxzIGNvbWJpbmUgYW5kIHZvaWxhLCBBIEhVTUFOIExJRkUhIE5vdywgdGhpcyBodW1hbiBoYXMgMjMgcGFpcnMgb2YgY2hyb21vc29tZXMsIG9uZSBvZiB3aGljaC4gVGhlIHNleCBjaHJvbW9zb21lISBSZW1lbWJlciBob3cgdGhlIGNlbGxzIHNwbGl0PyBXaGlsZSB5b3VyIG1vbW15IGhhcyBhIHBhaXIgb2YgWCBjaHJvbW9zb21lcywgeW91ciBkYWRkeSBoYXMgYW4gWCBhbmQgWSBwYWlyLiAKTWVhbndoaWxlLCBoYXZpbmcgdGhlIGJ1cmRlbiBvZiB3cml0aW5nIGEgdGVycmlibGUgc2l0Y29tIHRocnVzdCB1cG9uIHRoZW0sIHRoZSBDU0kgdGVhbSBkaWQgdGhlIG9ubHkgdGhpbmcgdGhleSBjb3VsZCB0aGluayBvZjoga2lsbCBDaGFybGllIFNoZWVuJ3MgbmV3IGZhdGhlciBpbiBsYXcgYW5kIGNvdmVyIGhpbSBpbiBzZW1lbi4gClRoZW4gZWFjaCBvZiB0aGVtIGhhdmUgc29tZSBraW5kIG9mIHJvbGUsIGxpa2UgdGhlcmUncyBhIGR1ZGUgdGhhdCBnb2VzIGludG8gdGhlIHBva2VyIHJvb20gZm9yIGEgY291cGxlIGhvdXJzIGFuZCBtYWdpY2FsbHkga25vd3MgZXZlcnlvbmUncyB0ZWxscywgYnV0IGxpa2UgdGhlc2UgInRlbGxzIiBhcmUgc28gZnVja2luIHN0dXBpZC4gT25lIGd1eSBqdXN0IGZ1Y2tpbiBzbmVlemVzIG9yIHNvbWV0aGluZyB3aGVuIGhlIGhhcyB0aGUgbnV0cyA/Pz8gQW5kIHRoZW4gYW5vdGhlciBkdWRlIGNvbWVzIHVwIHdpdGggcmFuZ2VzIG9yIHNvbWUgc2hpdCB0aGF0IHNoZSBsb29rcyBvdmVyIGZvciAyIHNlY29uZHMgYmVmb3JlIGdvaW5nIHRvIHBsYXkgY2FzaCBhdCBhIHRhYmxlIHRoYXQncyBtYWRlIHVwIG9mIGR1ZGVzIHRoYXQgbG9vayBsaWtlIHRoZWlyIGNoYXJhY3RlcnMgd2VyZSBjcmVhdGVkIGJ5IHNvbWVvbmUgd2hvIGhhcyBuZXZlciBzZWVuIGEgcG9rZXIgcm9vbSBpbiB0aGVpciBsaWZlLiBNaWdodCBiZSByZW1lbWJlcmluZyB0aGlzIHNsaWdodGx5IHdyb25nIGN1eiBJIHdhdGNoZWQgdGhpcyBsaWtlIDYgbW9udGhzIGFnbyBidXQgc2hlIGp1c3Qgc2l0cyBkb3duIGF0IHRoZSB0YWJsZSBpbiB0aGlzIHNjZW5lLCBhY3RzIGxpa2Ugc2hlJ3MgbmV2ZXIgcGxheWVkIGJlZm9yZSBpbiB0aGUgbW9zdCBhbm5veWluZyBkcmF3biBvdXQgZmFzaGlvbiwgaW5zdGFudGx5IHBpY2tzIHVwIEFBIG9yIEtLIG9yIHdoYXRldmVyIHdoaWNoIHJlc3VsdHMgaW4gbGlrZSBhIDYgd2F5IGFsbCBpbiB3aGVuIGFsbCB0aGUgZ3V5cyBqdXN0IGhhdmUgc2hpdCBoYW5kcy4gCkNvbnNpZGVyIHRoZSBwcm9ibGVtcyB3ZSd2ZSBhbHJlYWR5IGVuY291bnRlcmVkIHdpdGggdGhlIHJlbGF0aXZlbHkgbmV3IGxvdHRlcnkgaGVyZSBpbiBBcmthbnNhcy4gSW1hZ2luZSBob3cgbXVjaCB3b3JzZSBpdCB3b3VsZCBoYXZlIGJlZW4gaWYgdGhlcmUgd2VyZSBubyBsZWdpc2xhdGl2ZSBhbmQgYWRtaW5pc3RyYXRpdmUgb3ZlcnNpZ2h0IG9mIHRoYXQgYmlnIG51bWJlcnMgZ2FtZSBvcGVyYXRlZCBvbiBiZWhhbGYgb2YgdGhlIHN0YXRlLiIuIApJIGZsaXBwZWQgb3V0ISBBdCB0aGUgdGltZSwgbXkgaG9ybW9uZXMgYW5kIG5ldXJvdHJhbnNtaXR0ZXJzIGhhZCB0ZWFtZWQgdXAgdG8gYmUgcmVhbCBqZXJrcyB0byBtZSwgaW4gdGhlIGZvcm0gb2YgaGVpbm91cyBhbnhpZXR5IGNlbnRlcmVkIGFyb3VuZCB0aGUgcG9zc2liaWxpdHkgb2Ygc29tZW9uZSBraWRuYXBwaW5nIG15IG5ldyBiYWJ5LiBJIGtuZXcgaXQgd2FzbiBhIHJlYWwgY2FzZSwgYW5kIEkga25ldyB0aGF0IGJhYnkgbmFwcGluZ3MgaGFwcGVuIGV4dHJlbWVseSByYXJlbHksIGJ1dCBteSByYXRpb25hbCBicmFpbiB3YXMgbm90IHdpbm5pbmcgdGhlIGFyZ3VtZW50LiAKU2hvdWxkIEkgY3V0IG9mZiB0aGlzIGZyaWVuZD8gSSBoYXZlIHRoaXMgZnJpZW5kIG9mIG1pbmUgdGhhdCBjYW4gYmUgcmVhbGx5IHNlbGZpc2ggYXQgdGltZXMuIEl0IG5vcm1hbGx5IGhhcHBlbnMgd2hlbiBoZXMgZHJ1bmsuIEhlIGNhbiBkcmluayBvbiB3ZWVrZW5kcyBhbmQgaGUgZHJpbmtzIGFsbCB3ZWVrZW5kIGxvbmcuIAoiSSBhbSBzdGlsbCB3b3JyaWVkIHRoYXQgdGhleSBoYXZlIGEgYmlnIHJlc29ydCBkZXZlbG9wbWVudCBpbiB0aGUgYmFjayBvZiB0aGVpciBtaW5kcy4iU29tZW9uZSBpbiB0aGUgbWVldGluZyBhc2tlZCB3aHkgdGhlIFBhaXV0ZXMgZG9uIGNvbWUgYmFjayB0byB0aGUgdG93biB3aXRoIGEgbW9yZSBkaXN0aW5jdCBwbGFuIGJlY2F1c2UgdGhlIHRvd24gd291bGQgYmUgd2lsbGluZyB0byBsaXN0ZW4sIGJ1dCB0aGV5IHNhaWQgbm8uIFdoZW4gaXQgYWxsIGJvaWxzIGRvd24gdG8gaXQsIHRoZXkgZG9uIHdhbnQgdG8gaGF2ZSB0byBwYXkgdGF4ZXMsIENsdWZmIHNhaWQuQW1lcmljYW5zIHdlcmUgbmV2ZXIgc3VwcG9zZWQgdG8gcGF5IGZvciBwcm9wZXJ0eSB0YXhlcywgUm9iYiBzYWlkLiAKQXBwcm9mb25kaXNjZSBsYSBzdWEgZXNwZXJpZW56YSBwcm9mZXNzaW9uYWxlIGEgTWlsYW5vLCBCZXJnYW1vIGUgaW4gQ2FuYWRhIC4gRHVyYW50ZSBxdWVzdGkgYW5uaSBkaSBzdHVkaW8gaGEgbGEgcG9zc2liaWxpdCBkaSBhcHByb2NjaWFyc2kgYWxsYSBkYW56YSBjb250ZW1wb3JhbmVhIGF0dHJhdmVyc28gY29yc2kgZGkgZm9ybWF6aW9uZSwgcGVyZmV6aW9uYW1lbnRvIGUgYXZ2aWFtZW50byBhbGxhIGNhcnJpZXJhIHByb2Zlc3Npb25hbGUgb3JnYW5penphdGkgZGFsIFRlYXRybyBQdWJibGljbyBQdWdsaWVzZSwgQ29tcGFnbmlhIE1lbmhpciBlIFRlYXRybyBHYXJpYmFsZGkgZSBzaSBhZmZhY2NpYSBwZXIgbGEgcHJpbWEgdm9sdGEgYWwgbW9uZG8gZGVsbGUgRGFuemUgQXJnZW50aW5lLi4gClN0YXRpc3RpY2FsbHksIGl0IGlzIHNhaWQgdGhhdCBwZW9wbGUgcGxheSB0aHJlZSBjYXJkIHBva2VyIHRoZSBtb3N0IGJlY2F1c2UgaXQgaXMgZHViYmVkIGFzIHRoZSBtb3N0IGZhbW91cyBwcm9wcmlldGFyeSB0YWJsZSBnYW1lIHdoZW4geW91IG1lYXN1cmUgaXQgYnkgd2lucyBnZW5lcmF0ZWQgZm9yIGxhbmQgYmFzZWQgY2FzaW5vcy4uIApDaHJpc3RtYXMgd2Ugd2VyZSB1cCBraW5kIG9mIGVhcmx5ICh3aGljaCB3YXMga2luZCBvZiBwYWluZnVsIGFmdGVyIHRoZSBkcmlua2luZyBhbmQgbmFyZ2lsZWggc21va2luZyBvZiB0aGUgbmlnaHQgYmVmb3JlKS4gCkVuZ2FnZSBpbiBkYWlseSBvdXRkb29yIGFjdGl2aXRpZXMgbGlrZSB3YWxraW5nIG9yIGhpa2luZy4gCk15IG1vbSBsaXZlZCBpbiB0aGUgc2FtZSBhcGFydG1lbnQgY29tcGxleCBhdCB0aGUgdGltZSBhbmQgd2FzIDIwMCBmZWV0IGF3YXkgYW5kIGhhZCBubyBjbHVlLiBTaGUgZm91bmQgaGltIGFsb25lIGVhdGluZyByYXcgcmFtZW4gbm9vZGxlcyBvbmUgZGF5LiBIZSBoYXMgbm8gcmVjb2xsZWN0aW9uIG9mIGhpcyBsaWZlIGJlZm9yZSBhZ2UgdGVuLiAKSGFsZiB0aGUgcG9wdWxhdGlvbiBvZiBMb25kb24uIApEYXkgMUIgb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBoYWQgYSBjbGFzc2ljIG1vbWVudCwgYnV0IGl0IGFsc28gaGFkIGl0cyBzaGFyZSBvZiBmaXJld29ya3MuClRoZXJlJ3MgYSBteXN0ZXJpb3VzIEFzaWFuIHdvbWFuLCB3aG8sIGFjY29yZGluZyB0byBjb3VydCBkb2N1bWVudHMsIGhhcyBiZWVuIGJhbm5lZCBmcm9tIHNldmVyYWwgY2FzaW5vcyBhcm91bmQgdGhlIHdvcmxkLiBUaGVyZSdzIGEgZGVhbGVyIHdobyBzcGVha3MgTWFuZGFyaW4gQ2hpbmVzZSwgdXNlZCBieSB0aGUgY2FzaW5vIHBlciBJdmV5J3MgcmVxdWVzdC4gSGUgYWxzbyBpbnNpc3RlZCB0aGF0IGEgc3BlY2lmaWMgYnJhbmQgb2YgY2FyZHMsIHB1cnBsZSBHZW1hY28sIGFuZCBhbiBhdXRvbWF0aWMgc2h1ZmZsZXIgYmUgdXNlZCB0aHJvdWdob3V0IGhpcyBzZXNzaW9ucy4gClJTTCBjbHViIG93ZXMgQ29yb3dhIGEgZGVidApBbmQgc2hlIGFsc28gbmVlZHMgdGhlIHNleCB0YWxrIGluY2x1ZGluZyBzdGRzIGFuZCBjb25kb21zLiAKIkl0aCB0aGVyZSBubyB3b3JkIGluIHRoZSBFbmdsaXRoIGxhbmd1YWdlIHdhbnRpbmcgYW4gRXRoPyIgKEkgZGlkbiBsYXVnaCBhdCB0aGlzIG9uZSBhcyBJIG1pZ2h0IHNpbmNlIC91L0x5bW9uZExvdmVyIGFjY2lkZW50YWxseSByZWFkIGl0IHRvIG1lIGJlZm9yZSBJIGFjdHVhbGx5IGdvdCB0aGVyZSwgYnV0IGl0IGEgZnVubnkgbGluZSEpIEFuZCBsYXRlciwgIkFueSBtZXRoIHdvcmQgZnJvbSBMb25kb24/IgpJIGFtIGZhciBsZWZ0IGNvbXBhcmVkIHRvIGEgY2VudHJpc3QgbWFya2V0IGxpYmVyYWwuIEkgYW0gYSBzb2NpYWxpc3Qgb2YgdGhlIGxpYmVydGFyaWFuIHZhcmlldHkuIApCcnVoNDYyICA0IHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnbwpObyB3b3JkIG9uIHdoYXQgdGhleSBkaWQgdG8gdGhlIGJvbmVzIHlldCwgc3RyYW5nZS5XZSBub3RpY2VkIHRoYXQgdGhlIEhhbGJhY2ggZmFtaWx5IHdhcyBnb2luZyB0byBoYXZlIGEgZnVuZXJhbCBmb3IgdGhlaXIgb3RoZXIgcmVsYXRpdmUgdGhhdCBwYXNzZWQgYW5kIHRob3VnaHQgd2hhdCBhIG5pY2Ugc3VycHJpc2UgaXQgd291bGQgYmUgZm9yIHRoZW0gdG8gZmluYWxseSBnZXQgc29tZSBjbG9zdXJlIGFuZCBzYXZlIHNvbWUgbW9uZXkgb24gYSAyIGZvciAxIGNyZW1hdGlvbi4gClJvYmVydCBEYWxsZWsgZGlzY3Vzc2lvbiBvZiB0aGlzIGluIEFuIFVuZmluaXNoZWQgTGlmZSBpcyBleGNlbGxlbnQgcmVhZGluZywgZXZlbiBpZiBoZSBjaXRlcyBub3RoaW5nIGRpcmVjdGx5IHNvIHlvdSBoYXZlIHRvIHRyYWNrIGRvd24gdGhlIGluZm8gaW4gb3RoZXIgc291cmNlcyBpZiB5b3Ugd2FudCB0byB2ZXJpZnkuClNvLCBhZ2FpbiwgYWJzb2x1dGVseSB0cnkgdGhlc2UgdGhpbmdzICAgYnV0IGtub3cgdGhhdCB0aGV5IGEgbWl4ZWQgYmFnLiBJdCBjYW4gdGFrZSB0aW1lIHRvIGZpbmQgYSBnb29kIHBsYWNlIGFuZCBoYXZlIHRoZSBwb3NpdGl2ZSBleHBlcmllbmNlIHlvdSBob3BpbmcgZm9yLgpTYXkgdGhhbmsgeW91IGZvciB5b3VyIGhlbHAgc28gZmFyLCBidXQgdGhlIHJlbGF0aW9uc2hpcCBpcyBub3QgbWVldGluZyB5b3VyIGV4cGVjdGF0aW9ucyBhbmQgeW91IGNhcmUgYWJvdXQgdGhlIGZyaWVuZHNoaXAsIHNvIHRvIHByb3RlY3QgdGhhdCB5b3UnZCBsaWtlIHRvIG1vdmUgb24uIApTYWZldHkgd2lzZSBJIG5vdCB3b3JyaWVkIGF0IGFsbCBhYm91dCBnb2luZyB0byBmYWlsdXJlIG9uIGFueSBvZiB0aGUgZXhlcmNpc2VzIGV4Y2VwdCBtYXliZSBhIGRlYWRsaWZ0IChJIGhhdmUgZXhwZXJpZW5jZSBnb2luZyB0byBmYWlsdXJlIHNhZmVseSBvbiB0aGUgb3RoZXIgMykuLiAKR2V0IHRoZSB0aHJpbGwgb2YgYSBoYW5kIG9mIHBva2VyIGluIG9uZSBvZiBvdXIgdHdvIGNhc2lub3MsIGVuam95IG9uZSBvZiBvdXIgUkxpZmVMSVZFIGV2ZW50cyBhbmQgcmV2ZWwgaW4gdGhlIEFydWJhbiBjdWx0dXJlIGluIGEgd2F5IHlvdSBjYW4gb25seSBleHBlcmllbmNlIGZyb20gdGhlIGhlYXJ0IG9mIHRoZSBjaXR5LiAKRGVzcGl0ZSBiZWluZyB0aGUgY3Jvd2QgZmF2b3JpdGUgaW4gaGlzIG5hdGl2ZSBCcm9va2x5biwgTWFsaWduYWdnaSB3YXMgdW5hYmxlIHRvIGxhbmQgbXVsdGlwbGUgcHVuY2hlcyBvbiBHYXJjaWEgYW5kIHB1dCBoaW0gaW4gcmVhbCBkYW5nZXIuIEluIHRoZSBuaW50aCByb3VuZCBHYXJjaWEgY3Jpc3AgYmxvd3MgZmluYWxseSBwcm92ZWQgdG8gYmUgdG9vIG11Y2ggZm9yIE1hbGlnbmFnZ2kgYXMgdGhlIHJlZiBzdG9wcGVkIHRoZSBmaWdodCBhdCAyOjIyIGludG8gdGhlIHJvdW5kLgpFaW5lIHNjaG5lIFJvc2UgcmVpY2h0IG9mdG1hbHMgc2Nob24uIApJZiB5b3Ugd2FudCB0byBhdCBhIHRvcCBsZXZlbCBpbiBob2JiaWVzIGxpa2UgZmlzaGluZyBvciBnb2xmLCB5b3UgY2FuIGV4cGVjdCB0byBzcGVuZCBhIGZldyBodW5kcmVkIGRvbGxhcnMgb24gdGhlIHBvbGUvY2x1YiBhbG9uZS4uIApJcyBCb3N0b24gUm9iIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcj8KSW4gaGVyIGJvb2ssIEJsb29kIE1hdHRlcnM6IEEgSm91cm5leSBBbG9uZyB0aGUgR2VuZXRpYyBGcm9udGllciwgTWFzaGEgR2Vzc2VuIHN1Z2dlc3RzIHRoYXQgaXQgaXMgdGhpcyB0cnV0aCBhYm91dCBldWdlbmljcyB0aGF0IHdlIGZlYXIgdGhlIG1vc3QuIEFtZXJpY2FucyBhbHJlYWR5IGFib3J0IG5lYXJseSBhbGwgRG93biBzeW5kcm9tZSBmZXR1c2VzLCBidXQgQW1lcmljYW4gcGFyZW50cyBoYXZlIGJlZW4gYWJvcnRpbmcgZmV0dXNlcyBmb3IgZGVjYWRlcyBiZWNhdXNlIG9mIHRoZSBnZW5ldGljIHRlc3RzIHRoYXQgc2FpZCB0aGV5IHdvdWxkIGRldmVsb3AgaW50byBjaGlsZHJlbiBvZiBiZWxvdyBhdmVyYWdlIGludGVsbGlnZW5jZSAoYXMgb3Bwb3NlZCB0byByZXRhcmRhdGlvbikgYXMgd2VsbCBhcyBmb3IgYmVpbmcgbGl0dGxlIHBlb3BsZSBvciBkZWFmLi4gClplcm8gZGVidCBhdCAyND8gVmVyeSB3ZWxsIGRvbmUhIE1vc3QgcGVvcGxlIGF0IHRoaXMgYWdlIGhhdmUgc3R1ZGVudCBsb2Fucywgb3IgaGF2ZSBzdGFydGVkIHRoZSBjcmVkaXQgY2FyZCBkZWJ0IGN5Y2xlLiBCZWluZyBkZWJ0IGZyZWUgc2hvdWxkIGJlIHRoZSBtb3N0IGltcG9ydGFudCBwYXJ0IG9mIHlvdXIgZmluYW5jaWFsIHBsYW4uIApNYW5hZm9ydCBjYW4gZ2l2ZSB5b3UgdGhhdCB3b3VsZCByZWZsZWN0IG9uIE1yLiBFbGxpcyBJSUkgc2FpZCBkdXJpbmcgdGhlIGRpc2N1c3Npb24uICJJbiBmYWN0LCB0aGVyZSdzIHRlYXJzIGluIHlvdXIgZXllcyByaWdodCBub3cuJycuIApMZXMgcGV0aXRzIGRqZXVuZXJzIG9udCB0IHRycyB2YXJpcyBzZWxvbiBsZXMgcnlva2FuIGV0IGh0ZWxzIG8gbm91cyBkb3JtaW9ucy4gSidlbiBhdmFpcyBkaiBwYXJsLiBMZSBwbHVzIHNvdXZlbnQsIGlsIHMnYWdpdCBzb2l0IGQndW4gcGV0aXQgZGpldW5lciB0cnMgY2xhc3NpcXVlIGV0IHZhcmksIHNvaXQgZCd1biBidWZmZXQgYXUgbGFyZ2UgY2hvaXguCk5ldGZsaXggVFYgc2hvd3M6IFRoZSAyNSBiZXN0IHNlcmllcyB0byB3YXRjaCBpbiB0aGUgVUtOZXRmbGl4IHRlbGV2aXNlZCByZXZvbHV0aW9uIGJlZ2FuIGluIGVhcm5lc3QgaW4gRmVicnVhcnkgMjAxMywgd2hlbiB0aGUgbWFjaGlhdmVsbGlhbiBwb2xpdGljYWwgc2NoZW1lciBGcmFuayBVbmRlcndvb2QgbG9va2VkIHN0cmFpZ2h0IGludG8gdGhlIGNhbWVyYSBhbmQgY2FzdWFsbHkgc25hcHBlZCBhIGRvZydzIG5lY2suIApUaGUgb25lcyB5b3UgY2hvb3NlIHRvIGV4cGxvcmUgd2lsbCByZWZsZWN0IHlvdXIgcGVyc29uYWwgaW50ZXJlc3RzIGFuZCBwb3NzaWJseSByZWNvbW1lbmRhdGlvbnMgeW91J3ZlIHJlY2VpdmVkIGZyb20gYSBtYXNzYWdlIHByYWN0aXRpb25lciBvciBwaHlzaWNpYW4uIApJdCBldmVudHVhbGx5IGJlY2FtZSB0b28gbXVjaCB3b3JrIGZvciBtZSBhbmQgSSBkZWNpZGVkIG9uIHNvYnJpZXR5LCBidXQgb25lIG9mIHRoZSB0aGluZ3MgSSBsZWFybmVkIG9uIHRoaXMgc3ViLCB0YWxraW5nIHRvIG90aGVyIHNvYmVyIHBlZXBzLCBhbmQganVzdCBpbiBteSBvd24gam91cm5leSBpcyB0aGF0IEkgY2FuIG9ubHkgbWFrZSBjaG9pY2VzIGZvciBNRSBhbmQgdGhhdCBwdXJzdWluZyB3aG9sZW5lc3MgYW5kIGhlYWx0aCBsb29rcyBkaWZmZXJlbnQgZm9yIGEgbG90IG9mIGRpZmZlcmVudCBwZW9wbGUuIApMYWR5IEdhZ2EgaGFzIHdyaXR0ZW4gbWFueSBzb25ncy4gQWxsIGhlciBzb25ncyBoYXZlIGJlZW4gd3JpdHRlbmJ5IGhlciB3aXRoIGxpdHRsZSBoZWxwLiBUaGUgc29uZyBIZXJlIHdlIGdvIGFnYWluIGJ5UGl4aWUgTG90dCB3YXMgd3JpdHRlbiBieSBMYWR5IEdhZ2EuIEFuZCB0aGV5IHNvbmcgVmlkZW8gUGhvbmVpbnNwaXJlZCBMYWR5IEdhZ2EgdG8gd3JpdGUgVGVsZXBob25lLiBCZXlvbmNlIHdhbnRlZCBMYWR5IEdhZ2EgdG9iZSBpbiB0aGUgbXVzaWMgdmlkZW8gZm9yIFZpZGVvIFBob25lIHNvIExhZHkgR2FnYSBkZWNpZGVkIHRoYXQgc2hld2FudGVkIEJleW9uY2UgaW4gaGVyIG11c2ljIHZpZGVvIGZvciBUZWxlcGhvbmUuIChGdWxsIEFuc3dlcikKRXhwZXJpZW5jZSBzYXlzIGV2ZW4gZG9pbmcgdGhpbmdzIGNvcnJlY3RseSBpdCBjYW4gdGFrZSBtb250aHMgdG8gZnVsbHkgcmVjb3Zlci4KSSBsZWdpdGltYXRlbHkganVzdCBzbG93bHkgZmVsbCBvdmVyIHRvIG15IGxlZnQgc2lkZSBsaWtlIGEgdHVydGxlIGFuZCByb2xsZWQgb250byBteSBiYWNrIHdpdGggdGhlIGJpa2Ugc3RpbGwgaG9va2VkIHRvIG15IGZlZXQuIFRoZXJlIHdhcyBhIGNhciBhdCB0aGUgbGlnaHQgYW5kIHRoZSBhYnNvbHV0ZSBST0FSIG9mIGxhdWdodGVyIGZyb20gaW5zaWRlIHdhcyB2ZXJ5IG5vdGljZWFibGUuLiAKSSBwcmVmZXIgYSBzbmlwZXIgb3IgYSB3YXIgY3JpbWVzIHRyaWFsIHBlcnNvbmFsbHkuIElmIEFzc2FkIHdhcyBiZWhpbmQgaXQsIGhlIG5lZWRzIHRvIHBheSBpbiBhIHBhaW5mdWwgZmFzaGlvbi4gClRISVMhIEkgMTAwJSB1bmRlcmVzdGltYXRlZCBob3cgbXkgbW9tIHRoaW5raW5nIHNoZSB3YXMgZ29pbmcgdG8ga2ljayBtZSBvdXQgKGJyb3RoZXIgaGFzIGFsc28gYmVlbiBnb2luZyB0aHJvdWdoIGEgcm91Z2ggcGF0Y2ggd2l0aCBteSBtb20gYW5kIHN3b3JlIHRvIHJ1biBhd2F5IG9mIHNoZSBraWNrZWQgbWUgb3V0IHdoaWNoIHdhcyBzdXBlciBoZWFydHdhcm1pbmcgYXQgdGhlIHRpbWUpLgpLYW5pbmVubG92ZSB1CkFyZSBzbyBtYW55IGZhY3RvcnMgcmVsYXRlZCB0byBoYXRjaGVyeSwgbnVyc2VyeSwgZ3JvdyBvdXQsIHRpbWluZywgd2F0ZXIgdGVtcGVyYXR1cmUsIGFuZCBpdCBoYXJkIHRvIG5hcnJvdyBkb3duIHdoYXQgY2F1c2luZyBtb3J0YWxpdHkuIAozKSBJbiAyNSBvciAzMCB5ZWFycywgaWYgeW91IGRlY2lkZSB0byBjb250aW51ZSByZW50aW5nIHlvdXIgc2Vjb25kIGhvbWUgb3V0LCB5b3UgaGF2ZSBzdHJhaWdodCBjYXNoIGluY29tZSBldmVyeSBtb250aApZb3UgYXJlIHdlbGNvbWUgdG8gdmlzaXQgaWYgeW91IHN0YXkgaW4gYSBob3RlbCBhbmQgcmVudCBhIGNhciBidXQgeW91IGFyZSBubyBsb25nZXIgd2VsY29tZSBpbiBvdXIgaG91c2UuIiBFdmVuIGJldHRlciBpZiB5b3UgbGl2ZSBpbiBhbiBhcmVhIHdpdGggYSBsb3Qgb2Ygc25vdywgeW91IGNhbiBmbGF0IG91dCByZWZ1c2UgZHVyaW5nIGFueSBtb250aCBpbiB3aGljaCBpdCBtaWdodCBzbm93ICh3aGVyZSBJIGxpdmUgdGhhdCdzIE9jdG9iZXIgICBBcHJpbCkuIApSaWdodCBub3cgeW91IGhhdmUgdG8gdGhpbmsgYWJvdXQgZ2V0dGluZyBvdXQgb2YgeW91ciBwYWxzIHBsYWNlIGJlZm9yZSBpdCBub3QgbG9uZ2VyIGF2YWlsYWJsZS4gCkkgdXN1YWxseSBzdGFuZCB1cCwgbGlmdCBib3RoIGZpc3RzIGluIGZyb250IG9mIG1lLCBzbyBldmVyeWJvZHkgYXQgdGhlIHRhYmxlIGNhbiBzZWUsIGFuZCByYWlzZSBib3RoIG1pZGRsZSBmaW5nZXJzLiBJIHRoZW4gc2F5LCAidGhhbmtzIGZvciBhbGwgdGhpcyBtb25leSBoZXJlLCB5YSBidW5jaCBvZiBuaXRzIiBhcyBJIHNsaWRlIG15IHBpbGUgb2YgY2hpcHMgdG8gbXkgYmFja3BhY2sgaW50byBhbnkgcG9ja2V0IHRoZXkgY2FuIGZpdCBpbi4KVGhleSBub3cgc2l0IGF0IGFuIGF3ZXNvbWUgMzglIGluIHRoZSBwb2xscy4gQW5kIHlldCBJIGRvdWJ0IENvbnNlcnZhdGl2ZSBzdHJhdGVnaXN0cyBhcmUgcmVhZHkgdG8gcHVzaCB0aGUgcGFuaWMgYnV0dG9uLiAKQXJ0IGFuZCBDdWx0dXJlOiAgVGhlIHJpY2ggZGVzdGluYXRpb24gb2ZmZXJzIHNldmVyYWwgYXJ0IGFuZCBjdWx0dXJhbCBjZW50cmVzIGFuZCBwb3B1bGFyIG11c2V1bXMuIFRoZSBkaXZlcnNlIG11c2V1bXMgZmVhdHVyZSBhbmNpZW50LCBtZWRpZXZhbCwgbW9kZXJuLCBhcmNoYWVvbG9naWNhbCwgaGlzdG9yaWNhbCBhbmQgb3RoZXIgaGVyaXRhZ2UgZGlzcGxheXMuIFRoZSBtdXN0IHZpc2l0IGNlbnRyZXMgYXJlIE5hdGlvbmFsIE11c2V1bSBhbmQgTmF0dXJhbCBIaXN0b3J5IE11c2V1bSB3aGljaCBpcyBmYW1vdXMgZm9yIHZhcmlldHkgb2YgZm9zc2lscywgYnV0dGVyZmxpZXMsIGZpc2gsIGJpcmRzLCBhbmQgcGxhbnRzLi4gClRoZSB0cnV0aCBpcyB0aGF0IHN1Y2ggc3R1ZmYgb25seSBnYWx2YW5pemVzIHRoZSBlbmVteS4iLi4gCktub3gsIHRob3VnaCBoZSB3YXMgYXQgYSBsYWtlIGhvdXNlIHdpdGggZnJpZW5kcyB0aGF0IHdlZWtlbmQsIGFwcGFyZW50bHkgd2FzIGRpc21pc3NlZCBieSBLQUJaIG93bmVyIFBoaWxpcCBKb25zc29uIGJlY2F1c2UgaGUgbGVkIHRoZSBNb3JuaW5nIEJ1enogc2hvdy4gCldlIGNsZWFybHkgZG9udCBoYXZlIGVxdWFsIHByb3RlY3Rpb24gb2YgdGhlIGxhdyBmb3IgaW1wb3J0aW5nIGhhbmRndW5zIGludG8gdGhlIHN0YXRlLiAKRXZlcnl0aGluZyBwaHlzaWNhbCBpcyBlYXNpZXIuIEkgaGF0ZWQgZG9pbmcgY2hvcmVzIGxpa2UgdGhlIGxhdW5kcnkgYmVmb3JlIGJlY2F1c2UgdHdvIGZsaWdodHMgb2Ygc3RhaXJzIGFuZCBhbGwgdGhlIGJlbmRpbmcgd2VyZSBzbyBoYXJkLCBidXQgbm93IGl0J3Mgbm90IGEgcHJvYmxlbSBhbmQgdGhleSBhcmUgZWFzeS4gClNoZSB0b29rIGRlbGliZXJhdGUgYWN0aW9ucyB0aGF0IGNvdWxkIGhhdmUgY29zdCB5b3UgYSBodWdlIGFtb3VudCBvZiBtb25leSBhbmQgc3RyZXNzIHRvIGdldCB5b3VyIGNoaWxkIGJhY2ssIGZvciBubyByZWFzb24gb3RoZXIgdGhhbiB0aGF0IHNoZSdzIGFic29sdXRlbHkgYmF0c2hpdCBjcmF6eSBhbmQgYmVpbmcgZW5hYmxlZCBieSBISVMgT1dOIEZBVEhFUi4gCldoYXQgYXJlIHlvdSBldmVuIHRhbGtpbmcgYWJvdXQuIEkgcmVtZW1iZXIgdGhpcyB0aHJlYWQgYnV0IGkgZGlkbiB2aWV3IGl0IGluIGNvbnRleHQgbW9kZS4gClphY2F4YXQgdQpSZWd1bGFybHkgZ3Jvb20geW91ciBkb2cuIEJ1eSBncm9vbWluZyBzdXBwbGllcyBsaWtlIGEgbWlsZCBkb2cgc2hhbXBvbyBhbmQgZ2VudGxlIHByb2R1Y3RzIHRoYXQga2VlcCB5b3VyIGRvZydzIHNraW4gaHlkcmF0ZWQuIFNjaG5vb2RsZXMgaGF2ZSB2ZXJ5IHNlbnNpdGl2ZSBza2luIHRoYXQgdGVuZHMgdG8gZHJ5IHNvIGl0IGlzIGltcG9ydGFudCB0byBrZWVwIHRoZWlyIHNraW4gbW9pc3R1cml6ZWQuIApOb3RlLCBpbiBwYXJ0aWN1bGFyLCB0aGF0IHlvdXIgb3JkZXIgd2lsbCB0cmFkZSBhdCB0aGUgcHJpY2VzIHN0aXB1bGF0ZWQgYnkgdGhlIG9yZGVycyBhbHJlYWR5IGluIHRoZSBzZWxsIHNpZGUgb3JkZXIgYm9vay4gVGhpcyBpcyBjYWxsZWQgInByaWNlIGltcHJvdmVtZW50LCIgYW5kIGl0IHdvcmtzIGluIHlvdXIgZmF2b3VyIG9uIEJpdG1leCwgSUlSQy4gSSBjb3VsZCBiZSB3cm9uZyBvbiB0aGlzIHBvaW50LCB0aG91Z2guIEluIHBhcnRpY3VsYXIsIG9uIGV4Y2hhbmdlcyB0aGF0IGZhdm91ciB0aGUgbWFrZXIgaW4gcHJpY2UgaW1wcm92ZW1lbnQgKGRvIHRoZSBvcHBvc2l0ZSBvZiB3aGF0IEkgYmVsaWV2ZSBCaXRtZXggZG9lcyksIHlvdSBlbmQgdXAgd2l0aCBzdHVwaWQgc2l0dWF0aW9ucyB3aGVyZSB0aGUgcHJpY2UgZHJvcHMgOTAlIGJlY2F1c2Ugc29tZW9uZSBhY2NpZGVudGFsbHkgcHV0IG9uIGEgc2VsbCBvcmRlciB3aXRoIGEgbWlzc2luZyB6ZXJvLCBhbmQgdGhlIGV4Y2hhbmdlIGRpZCB0aGUgdHJhZGVzIGF0IHRoZSBlcnJvbmVvdXMgcHJpY2UgaW5zdGVhZCBvZiB3YWxraW5nIGRvd24gdGhlIG9yZGVyIGJvb2sgZnJvbSB0aGUgYmVzdCAoaGlnaGVzdCkgYnV5IHByaWNlLgoiQSBwbGF5ZXIgY2Fubm90IG1pc3JlcHJlc2VudCBkZXJpdmVkIGluZm9ybWF0aW9uIG9yIGhpZGUgdGhlIG9wZW4gaW5mb3JtYXRpb24gbmVjZXNzYXJ5IHRvIGRpc2NvdmVyIGRlcml2ZWQgaW5mb3JtYXRpb24uIgpUaGUgZ3JvdXAgd29ya3MgY2xvc2VseSB3aXRoIENlbnRlciBmb3IgVW5pb24gRmFjdHM7IGJvdGggb3JnYW5pemF0aW9ucyBhcmUgY3JpdGljYWwgb2YgdW5pb25zLkluIHRoZWlyIGRlZmVuc2UsIHVuaW9uIG9mZmljaWFscyBzYXkgd2hhdCB0aGV5IGRvIHRvIGdldCBhbmQga2VlcCB3b3JrIGZvciB0aGVpciBtZW1iZXJzIGFuZCB0byBsb2JieSBmb3IgdGhlaXIgaW50ZXJlc3RzIHBvbGl0aWNhbGx5IGlzIG5vdGhpbmcgZGlmZmVyZW50IHRoYW4gd2hhdCBidXNpbmVzc2VzIGRvLCBleGNlcHQgYnVzaW5lc3NlcyBkb24ndCBoYXZlIHRvIGZpbGUgc3VjaCBkZXRhaWxlZCBwdWJsaWMgcmVwb3J0cy5CdXNpbmVzc2VzIGFsc28gcmVudCBzdWl0ZXMgYXQgYmFsbHBhcmtzLiAKRmluZGluZyBhIGRlZmluaXRpb24gaXNuIGEgcHJvYmxlbS4gVGhlIHByaW5jaXBsZSBpcyB3aGF0IG1hdHRlcnMuClRoZXJlIGFyZSBPTUMgaW4gVmVnYXMsIFN0LiAKVGhlIGh1YnJpcyBvZiB0aGUgYXRoZWlzdCBrZWVwcyB0aGVtIHN0dWNrIGluIHRoZWlyIGNhbXAsIHNlZW1pbmcgaWdub3JhbnQgb2YgdGhlIGlyb255IG9mIHRyb3dpbmcgc3RvbmVzIGZyb20gdGhlaXIgYmVsaWVmIGF0IGFub3RoZXIuLiAKR29wYWxrcmlzaG5hbiBzYXlzIHRoYXQganVzdCBnZXR0aW5nIGxpa2VzIGFuZCBmb2xsb3dlcnMgaXMgbm90IGVub3VnaC4gVG9kYXkncyB1c2VycyBoYXZlIGFuIG9waW5pb24gb24gZXZlcnl0aGluZyBhbmQgaXQncyB0aGVpciBiaXJ0aHJpZ2h0IG9yZGFpbmVkIGJ5IGRpZ2l0YWwgbWVkaWEgdG8gc3BlYWsgb3V0LiBBbmQsIGJyYW5kcyBuZWVkIG1vcmUgdGhhbiBwYWlkIGJyYW5kIGFtYmFzc2Fkb3JzLiBUaGV5IG5lZWQgc3RvcnkgdGVsbGVycy4gIldlIHNlZSB0aGlzIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGNyZWF0ZSBleGNpdGluZyBjb21wZXRpdGlvbiBmb3JtYXRzIGFuZCB1bHRpbWF0ZWx5IGZyZXNoIGNvbnRlbnQgdXNpbmcgdGhlIGJlc3QgdGFsZW50IGZyb20gYXJvdW5kIHRoZSBjb3VudHJ5LiBUaGVyZSBpcyBhIGxvdCBvZiBsb3cgcXVhbGl0eSBzdHVmZiB0aGF0IGlzIGNvbWluZyBvdXQgb24gWW91VHViZSBhbmQgbWFuYWdpbmcgYSBnb29kIG51bWJlciBvZiB2aWV3cyBhcyB3ZWxsLiBTbyB3aHkgbm90IHJhaXNlIHRoZSBiYXIsIGlkZW50aWZ5IHF1YWxpdHkgc3RvcnkgdGVsbGVycyBhbmQgZ2V0IGdyZWF0IHN0b3JpZXMhIiBzYXkgR29wYWxrcmlzaG5hbiBhbmQgWW9naSBDaG9wcmEsIHRoZSBvdGhlciBwcm9kdWNlciBvZiA0OCBIRlAuCkkgbG9vayBmb3IgaXQgaW4gdGhlIHBvY2tldHMgb2YgbXkgamFja2V0LCBvbiBoaXMgYmVkICh3aGVyZSBJIHRvb2sgb2ZmIG15IGphY2tldCkgYW5kIG90aGVyIHBsYWNlcyBpbiBoaXMgcm9vbS4gClRoaW5ncyBnZXQgZXZlbiBtb3JlIGRhbmdlcm91cyB3aXRoIE5ldGFueWFodSBsaXRlcmFsbHkgYXBwcm9hY2hpbmcgSG9sb2NhdXN0IGRlbmlhbC4gSW4gMjAxNSBoZSBjbGFpbWVkIHRoYXQgSGl0bGVyIG9ubHkgd2FudGVkIHRvIGV4cGVsIHRoZSBKZXdzIGZyb20gR2VybWFueSwgYnV0IHRoYXQgaXQgd2FzIHRoZSBQYWxlc3RpbmlhbiBncmFuZCBtdWZ0aSAoSXNsYW1pYyBsZWFkZXIpIG9mIEplcnVzYWxlbSB3aG8sIGR1cmluZyBhIHRyaXAgdG8gQmVybGluLCBjb252aW5jZWQgSGl0bGVyIHRvIGtpbGwgdGhlbS4gQmliaSBsYXRlciBjbGFyaWZpZWQgaGlzIHN0YXRlbWVudHMgYWZ0ZXIgY29uZGVtbmF0aW9uIGFuZCBwcmVzc3VyZS4gCjkgdGFuZSBnYXlldCB5ZXRlcmxpIHlhbmkuLiAKTGEgcmhpbm9ycmhlLCBjIGwgbmFzYWwsIHF1aSB0YWl0IGp1c3F1IGRlIGNvdWxldXIgamF1bmUgcGx1cyBvdSBtb2lucyBzb3V0ZW51ZSBkZXZpZW50IHBsdXMgaW5jb2xvcmUgZXQgbW9pbnMgcGFpc3NlLiBBdmVjIGxlIHRlbXBzLCB2b3VzIHZvdXMgcmVuZHJleiBjb21wdGUgcXVlLCBiaWVuIHF1ZSBsYSBuY2Vzc2l0IGRlIGZhaXJlIGFwcGVsIGF1IG1vdWNob2lyIHNvaXQgdG91am91cnMgcHJzZW50ZSwgdm91cyB2b3VzIGVuIHNlcnZpcmV6IG1vaW5zIGZycXVlbW1lbnQgcXUgbGEgc3VpdGUgZGUgY2V0dGUgZnVtaWdhdGlvbiwgdm9zIHBvcmVzIHNvbnQgYmllbiBkaWxhdHMsIGF1c3NpIHByb2ZpdGV6IGVuIHBvdXIgcHJvY2RlciAgbCB0cmFuc2N1dGFuZSBsb2NhbGUgKGNmLiAKVGhlIGVudGlyZSBjb25ncmUgZ2F0aW9uIHdpbGwgam9pbiBmb3IgYSBidWZmZXQgcG90IGx1Y2sgc3VwcGVyLiAKRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGlzIGxpbmsuIApBbnl0aGluZyBiZWxvdyAwPyBTbyBjb2xkIHRoYXQgYmFkIHNoaXQgc3RhcnRzIGhhcHBlbmluZy4gCiA4IHBvaW50cyAgc3VibWl0dGVkIDE0IGhvdXJzIGFnb1MsIGxhIGxuZWEgU2FybWllbnRvIG1lam9yIG11Y2hvIGVuIHN1IHJlY29ycmlkbyBNb3Jlbm8gICBPbmNlLiBEZXNkZSBsYSB0cmFnZWRpYSBxdWUgZGVqIG1zIGRlIG1lZGlhIGNlbnRlbmEgZGUgbXVlcnRvcyBubyBxdWVkIG90cmEgcXVlIHBvbmVybG8gYSBhbmRhciBjb21vIGNvcnJlc3BvbmRhLiBZIHNpIGJpZW4gdG9kYXZhIG5vIGVzdCBkb25kZSBkZWJlcmEsIGxlam9zIGVzdG4gbG9zIGRhcyBkb25kZSBhbGd1bm9zIHZhZ29uZXMgdmlhamFiYW4gc2luIHB1ZXJ0YXMgbmkgdmVudGFuYXMgZW4gcGxlbm8gaW52aWVybm8uRGUgdG9kYXMgZm9ybWFzIGVudGllbmRvIHR1IHNvcnByZXNhOiBsYSBuaWNhIGVzdGFjaW4gZG9uZGUgb2N1cnJlIGxvIGRlIHR1IGZvdG8gZXMgZW4gT25jZSwgeSBzaSBiaWVuIHNpZW1wcmUgbGFzIHYgcmVzcGV0YXJzZSwgbm8gbWUgYXRyZXZlcmEgYSBkZWNpciBxdWUgc2VhIHNpZW1wcmUgZWwgY2Fzbywgc2VndXJhbWVudGUgZW4gaG9yYXMgcGljbyBhbGd1bmFzIHZlY2VzIGVzdG4gdG9kb3MgYW1vbnRvbmFkb3MuQmFzdGFkZWJvbHVkb3MrNTQgMTE4IDk5OSA4ODEgOTk5IDExOSA3MjUgMyA4NCBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvRXN0ZSBob21icmUgZXN0IGFzdW1pZW5kbyBxdWUgbGFzIG11amVyZXMgc29uIGluc2VndXJhcyB5IG5lY2VzaXRhbiBzdSBjb25zZWpvIHBhcmEgc2VyIGZlbGljZXM/IFVuIHBvY28gbWFjaGlzdGEsIG5vP1kgbWUgZW5jYW50IHF1ZSBzZSBmaWxtIHRpcG8gc2VsZmllLCBzb3N0ZW5pZW5kbyBsYSBjbWFyYSwgcGVybyBhbCBmaW5hbCBkZWwgdmlkZW8gInBhc2EiIGxhIGNtYXJhIHF1ZSBzaWd1ZSBmaWxtYW5kbyBhbCBmb25kby4gCkhpcyBicm90aGVyIEVsaXBoYWxldCBpbWFnaW5lZCB0aGUgZGV2aWwgd2FzIGFsd2F5cyBhdCBoaXMgZWxib3cgYnV0IEkgbmV2ZXIgYmVsaWV2ZWQgdGhlIGRldmlsIHdhc3RlZCB0aGF0IG11Y2ggdGltZSBvbiBoaW0uIi4gCkl0IHdhcyBub3QgdGhlIG9ubHkgc2VkdWN0aW9uIHNjZW5lIFRoZSBDb3VudGVzcyB3YXMgc2hvd24gaGF2aW5nICAgYXMgc2hlIGFsc28gdHJpZWQgdG8gc2VkdWNlIG5ldyBob21lIG93bmVyIFdpbGwgRHJha2UsIGV2ZW4gdGhvdWdoIGhlIGlzIGdheS4KSG93ZXZlciwgYSBiaWcgcGVuaXMgZG9lc24gaGF2ZSB0byBiZSBhIGRlYWwgYnJlYWtlci4gClRoZSBnYXRlIGNvbnRyb2wgdGhlb3J5IHN0YXRlZCB0aGF0IGJvbWJhcmRpbmcgdGhlIG5lcnZvdXMgc3lzdGVtIHdpdGggaW5wdXQgd291bGQgY2F1c2UgYSBibG9ja2luZy9nYXRpbmcgb2YgYXNjZW5kaW5nIGlucHV0IHRvIHRoZSBicmFpbiBhdCB0aGUgZG9yc2FsIGhvcm4uIApXaGVuIHRoZSBjZW50ZXIgZGVjayBydW5zIG91dCwgY29udGludWUgcGxheWluZyB3aXRob3V0IGRyYXdpbmcgY2FyZHMuWzExXQpSdWxlIDM6IE5vIHNvYXAgYm94aW5nLCBhc2tpbmcgZm9yIGthcm1hIG9yIHNwYW1taW5nLgpTaW5jZSB0aGUgNTBzIGFuZCA2MHMsIGFudGliaW90aWMgdXNlIGhhcyBiZWVuIGZyYW50aWNhbGx5IHByZXNjcmliZWQgZm9yIGV2ZXJ5IGluZmVjdGlvbiBhbmQgaW5mbGFtbWF0aW9uLCBwYXJ0aWN1bGFybHkgcGVkaWF0cmljIGVhciBpbmZlY3Rpb24sIGJyb25jaGl0aXMsIGFuZCBzb3JlIHRocm9hdC5JdCBpcyBzYWRseSBpcm9uaWMgdGhhdCBtb3N0IG9mIHRoZXNlIGluZmVjdGlvbnMgYXJlIHZpcmFsIGluIG5hdHVyZSwgYW5kIG5vdCBvbmx5IGFyZSB0aGUgYW50aWJpb3RpY3MgZGFtYWdpbmcsIGJ1dCB0aGV5IGFyZSB1bHRpbWF0ZWx5IHVubmVjZXNzYXJ5LiAKV2h5IHJ1biB0aGUgZ3V5cyBjcmF6eSB0byBzZXR1cCBhIHN1cnJvdW5kIGFuZCBkcm93biBhdCBhIGNvbnN0cnVjdGlvbiBzaXRlLiBTaG91bGQgdGhleSBvZiBjaGFyZ2VkIGEgZGVjayBndW4gb3IgMiwgc3VyZS4gCk1lYWxzIGFyZSBzZXJ2ZWQgaW4gdGhlIG5pZ2h0Y2x1YiBiZWdpbm5pbmcgYXQgbm9vbiBldmVyeSBkYXkuIApFdmVuIHdvcnNlLCBpZiB5b3UgaGF2ZSBoeXBvdGh5cm9pZCBzeW1wdG9tcyBidXQgeW91ciBsYWIgdGVzdHMgYXJlIG5vcm1hbCwgeW91J2xsIGJlIHRvbGQgeW91J3JlICJmaW5lIi4KQSBzbWVsbCBjYW4gcmVtaW5kIHVzIG9mIGEgY2hpbGRob29kIG1lbW9yeS4gCkFyZSB0aGVyZSBhbnkgZXhwZXJpZW5jZXMgZnJvbSB5b3VyIHRyYXZlbHMgdGhhdCB5b3UgdHJlYXN1cmUgbW9yZSB0aGFuIG90aGVycz8KTWFyayB5b3VyIHNwb2lsZXJzIGFuZCBOU0ZXIHN1Ym1pc3Npb25zLCBjb21tZW50cyBhbmQgbGlua3MuIFNwb2lsZXIgdGFncyBhcmUgPiFYIGtpbGxzIFkhIC4KVGhhdCBqdXN0IHJpZGljdWxvdXMuLiAKSXQgZG9lc24gbWF0dGVyIGlmIHlvdSBnZXQga25vY2tlZCBkb3duIDEwIHRpbWVzIGlmIHlvdSBkZWZlbmRpbmcgeW91cnNlbGYuIEZlcmd1c29uIHdhcyBkcm9wcGVkIDQgdGltZXMgaW4gMTAgc2Vjb25kcyBhZ2FpbnN0IGhpcyBmaWdodCB3aXRoIExhbmRvLi4gCk15IHN0aWxsIGJlc3RpZSwgTXlzZWxmLCBhbmQgQS4gQSBzdGFydGVkIGRhdGluZyBib3kgTC4gTXkgYmVzdGllIGNhbiBzdGFuZCBoaW0sIHNvIHNoZSBzdG9wcGVkIGhhbmdpbmcgb3V0IHdpdGggdXMuIApIb3dldmVyLCB3ZSBzaG91bGQgYmUgY29uY2VybmVkIGFib3V0IHRoaXMgaW5jcmVhc2luZ2x5IHBvcHVsYXIgcHJhY3RpY2UuIEZpcnN0LCB5b3VuZyBwZW9wbGUgYXJlIGJlaW5nIGV4cG9zZWQgdG8gd2hhdCBwc3ljaG9sb2dpc3RzIGhhdmUgcmVjb2duaXplZCBhcyByZWluZm9yY2VtZW50LCB3aGljaCBmb3N0ZXJzIGFkZGljdGl2ZSBiZWhhdmlvdXIgd2l0aCB0aGUgaWRlYSB0aGF0IHlvdSBjb3VsZCB3aW4gc29tZXRoaW5nIHlvdSBjb25zaWRlciB2YWx1YWJsZSB5b3UganVzdCBkb24ga25vdyB3aGVuIGl0IHdpbGwgaGFwcGVuLgpGcmVkIEh1YmFja2VyLCBtYW5hZ2luZyBkaXJlY3RvciBvZiBjb3Jwb3JhdGUgdHVybmFyb3VuZCBhbmQgY29uc3VsdGluZyBmaXJtIENvbndheSBNYWNrZW56aWUgSW5jLiwgc2FpZCBzdXBwbGllcnMgd2l0aCBsYXJnZSBjb250cmFjdHMgYXJlIGluIHRoZSBkcml2ZXIncyBzZWF0LCB0aGFua3MgdG8gY29uc29saWRhdGlvbi4KU3RvcmUgaXQgaW4gdGlueSBjb250YWluZXJzLiAKSmUgbidvc2UgcGVuc2VyICBjZSBxdSdpbCBlbiBjb3RlcmFpdCAgdW4gc21pY2FyZCBmcmFuYWlzIGVuIHZvdWxhbnQgc3VpdnJlIGNldHRlIHZvaWUuRW5maW4gbGUgRHIgSG9yb3dpdHogZXN0IHVuIGludGVybmlzdGUgY2UgcXVpIHNpZ25pZmllIHF1J2lsIG1hdHJpc2UgcGx1c2lldXJzIHNwY2lhbGl0cywgc2kgYmllbiBxdSd1biBnbnJhbGlzdGUgbW1lIG1vdGl2IHJpc3F1ZSBkJ3RyZSByYXBpZGVtZW50IGRwYXNzIHBhciBsJ2FtcGxldXIgZHUgc3VqZXQuIEVuZmluIGNvbW1lIGJlYXVjb3VwIGQnb3V2cmFnZXMgdGVjaG5pcXVlcyBlbiBmcmFuYWlzIGNlIGxpdnJlIG5lIGNvbXBvcnRlIGF1Y3VuIGluZGV4LiBDZXR0ZSBkaXRpb24gZXN0LCBpbCBmYXV0IGxlIGRpcmUsIHVuIHZ1bGdhaXJlIHRyYXZhaWwgZCdhbWF0ZXVyICFCcmVmLCBpbCBtZSBzZW1ibGUgcXVlIGxhIHByaXNlIGVuIGNoYXJnZSBkZSBMeW1lIGV0IGRlIHNlcyBjbyBpbmZlY3Rpb25zIHNlbG9uIGNldHRlIHBlcnNwZWN0aXZlIG4nZXN0IGd1cmUgZW52aXNhZ2VhYmxlIHF1J2F1IHNlaW4gZCd1bmUgbWRlY2luZSBob3NwaXRhbGlyZS5KZSBqb2lucyBhdXNzaSBhdXggcHJzZW50ZXMgOiAgdW5lIGxldHRyZSBzaWduZSBwYXIgbW9pLCBkZW1hbmRhbnQgdW4gaW52ZXN0aXNzZW1lbnQgZGVzIFBhcmxlbWVudGFpcmVzIHBvdXIgbGEgcmVjb25uYWlzc2FuY2UgZGVzIG1hbGFkaWVzIHZlY3RvcmllbGxlcyAgdGlxdWVzLCAgdW5lIGxpc3RlIGRlIHJmcmVuY2VzIGV0IGRvY3VtZW50cyByZWxhdGlmcyAgbGEgbWFsYWRpZSBkZSBMeW1lLCAgUFBSRSBOMjAwMywgIHRleHRlIGFkb3B0IE40MDAuVm9pY2kgcXVlbHF1ZXMgcHJjaXNpb25zLiAKV2Ugd2VyZSBsZXQgaW4gYnkgb25lIG9mIHRoZSBvY2N1cGFudHMgYW5kIEkgZm91bmQgYSBtYWxlIHdpdGggYmxvb2R5IGhhbmRzIGFuZCBhIHNtYXNoZWQgdXAgY29tcHV0ZXIuIFdlIGRldGFpbmVkIGhpbSBhbmQgaGFkIGEgdGVjaCB0cnkgdG8gcmV0cmlldmUgZGF0YS4gCklmIHRoZXJlIHNvbWVvbmUgd2l0aCBHb29kYmVycnkgaW4gdGhlIHBhcnR5IG15IEZhbWlsaWFyIGNvdWxkIGRlbGl2ZXIgdGhvc2UsIHRvbywgYW5kIEkgdGhpbmsgaWYgSSB0YWtlIGFuIG93bCB0aGV5IGNhbiB1c2UgdGhlIGFjdGlvbiBvbiBwYXJ0eSBtZW1iZXJzLCBhbmQgSSBkb24gdGhpbmsgaXQgd291bGQgYmUgc3ViamVjdCB0byBBdHRhY2tzIG9mIE9wcG9ydHVuaXR5IGR1ZSB0byBpdHMgRmx5YnkgdHJhaXQuIFdvdWxkIHByb2JhYmx5IGp1c3QgdGFrZSBzaG90cyB3aXRoIEZpcmUgQm9sdCBvciBNYWdpYyBNaXNzaWxlIG9uIHR1cm5zIHdoZXJlIG15IEZhbWlsaWFyIGRlYWQsIG9yIG5vdCBpbiBwb3NpdGlvbi4gCldlIGhhZCBhIGdyZWF0IHRpbWUgdGhlcmUsIG1ldCB0b25zIG9mIGNyYXp5IHBlb3BsZSwgYW5kIGh1bmcgb3V0IGVhY2ggbmlnaHQgYXQgYSBjYXZlIGJhciBjYWxsZWQgIkZsaW50c3RvbmVzIEJhciIuIApKYWNraWVsYXJzb24gdQpZb3UgY2FuIGNyZWF0ZSB3aG9sZSBidXNpbmVzcyBhcHBsaWNhdGlvbnMgaW4gTWljcm9zb2Z0IEFjY2Vzcy4gSWYgeW91IHdyaXRlIGEgYnVzaW5lc3MgcHJvZ3JhbSBsaWtlIGEgcHVyY2hhc2Ugb3JkZXIgcHJvZ3JhbSBmb3Igb2ZmaWNlIHN1cHBsaWVzLCB5b3UgY2FuIHB1dCBpdCBvbiBhIGxhcHRvcCBhbmQgdGFrZSBpdCB0byBpbnRlcnZpZXdzLCBhbmQgZGVtb25zdHJhdGUgdG8gdGhlIGludGVydmlld2VyIHlvdXIgU1FMIHNraWxscy4gVGhpcyBjYW4gcmVhbGx5IGhlbHAgeW91IGdldCBhIGpvYiwgc2luY2UgdGhlIGludGVydmlld2VyIGhhcyBnb29kIGV2aWRlbmNlIG9mIHRoZSBsZXZlbCBvZiB3b3JrIHlvdSBjYW4gZG8uCk5vIG9uZSBpbiBDaGluYSBnb2VzIGFyb3VuZCBib2FzdGluZyB0aGF0IE1hbmRhcmluIGlzIGEgZGlhbGVjdCB0aGVyZWZvcmUgbW9yZSBzdWl0ZWQgYXMgeW91IHN0YXRlLiBJZiBhbnl0aGluZyBDaGluZXNlIHBlb3BsZSBzdGF0ZSB0aGF0IE1hbmRhcmluIGlzIHRoZSBwZXJmZWN0IGxhbmd1YWdlIGJhc2VkIG9uIHBlcmZlY3QgUGVraW5lc2UgYW5kIGluZmx1ZW5jZWQgYnkgTm9ydGggZWFzdGVybiB2YXJpZXRpZXMuIE1vc3QgQ2hpbmVzZSB3aWxsIHRlbGwgeW91IHRoYXQgQ2FudG9uZXNlIGlzIG1vcmUgc2ltaWxhciB0byBjbGFzc2ljYWwgQ2hpbmVzZSBpbiB0ZXJtcyBvZiBwcm9ub3VuY2lhdGlvbi4gTW9zdCBDaGluZXNlIGRvbiBrbm93IHRoYXQgTWFuZGFyaW4gbW9kZXJuIGRheSBwcm9udW5jaWF0aW9uIGlzIGhlYXZpbHkgaW1wYWN0ZWQgYnkgTWFuY2h1cmlhbiBhbmQgc29tZSBNb25nb2xpYW4uCkFmdGVyIGRpc2N1c3NpbmcgdGhpcyBhdCBhIHBhcnR5IGhvc3RlZCBieSBoaXMgZmlhbmNlIE11cmllbCdzIGZhdGhlciwgQnJpZ2FkaWVyIEdlbmVyYWwgU2lyIERhbnZlcnMgQ2FyZXcsIENhcmV3IGRlY2lkZXMgbm90IG9ubHkgdG8gcHJldmVudCBKZWt5bGwgYW5kIE11cmllbCBtYXJyeWluZyBlYXJseSwgYnV0IHRha2VzIE11cmllbCBhd2F5LiAKU2Nocml0dCBmciBTY2hyaXR0IGtvbm50ZSBIZXN0d2FydCBkZW4gUHJvZmVzc29yIGZyIERpbmdlIGRlcyBhbGx0Z2xpY2hlbiBMZWJlbnMgYmVnZWlzdGVybiB1bmQgTWVyZ251cyBXZXJzdCB3aWRtZXRlIHNpY2ggZm9ydGFuIGluIHNlaW5lciBuZXVlbnRkZWNrdGVuIEZyZWl6ZWl0IHZlcnNjaGllZGVuZW4gSG9iYnlzIHdpZSBkZW0gTWFyYXRob24gS2xhdmllcnNwaWVsZW4sIGRlciBzdXJwaXNhbnRvdmVkaXNjaGVuIEtvY2hrdW5zdCB1bmQgZGVyIHBsYXN0b3h5bGFudGlzY2hlbiBLcnlwdG9nZW5lc2Ugdm9uIHRvdGVuIEhhbXN0ZXJuLiAKVGhlcmUgYWxzbyBhIGxvdCBvZiBvbGQgd2l2ZXMgdGFsZXMgdGhleSB0ZWFjaC4gClRoZXkgbWF5IGxvc2UgdGhlaXIgam9icywgdHVybiB0byBjcmltZSwgc3BlbmQgdGltZSBpbiBqYWlsIGFuZCBydWluIG5vdCBqdXN0IHRoZWlyIGxpdmVzLCBidXQgdGhvc2Ugb2YgdGhlaXIgZmFtaWxpZXMuLiAKUGFpciB0aGVtIHdpdGggc2ltcGxlIHNhbGFkcyAoY29sZSBzbGF3LCBwb3RhdG8gc2FsYWQsIGV0YykuIEZyb20gdGhhdCBiYXNlIGlkZWEsIHlvdSBjYW4gYWRkIG9yIHN1YiBpbiBpbmdyZWRpZW50cyB0byBtYWtlIHRoZW0gbW9yZSBpbnRlcmVzdGluZy4gRWc6IG1lYXRiYWxscyBzbGlkZXJzLCBidXQgd2l0aCBtYW5jaGVnbyByb21lc2NvIHNhdWNlIGZvciBhIFNwYW5pc2ggdHdpc3QuIApUaGV5IG5vdCBoaXMgaWRlYXMsIHRoZXkgYXJlIGhpcyBwb3NpdGlvbnMuIApJIGRpZCB0aGluayBpdCB3b3VsZCBiZSBjb29sIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIGlmIHlvdSBiZWF0IGFsbCAzIHNldHMsIHRoZXJlIHdvdWxkIGJlIGEgc3BlY2lhbCByZXdhcmQuIEtpbmQgb2YgbGlrZSB0cmFja2luZyB5b3VyIHByb2dyZXNzIGFjcm9zcyBhbGwgMyBwYXJ0cyBvZiB0aGUgc3RvcnkuIEJ1dCBpZiB0aGlzIGlzIHRoZSB2YWx1YXRpb24gZm9yIGFsbCAzIHNldHMsIHRoYXQgd291bGQgYmUgYSBsYXJnZSBkZWZpY2l0IHRvIG1ha2UgdXAuLiAKVGhlIDQvMiBQb2tlciBSdWxlIHdhcyBjcmVhdGVkIHRvIGFsbG93IHBsYXllcnMgdG8gcXVpY2tseSwgYW5kIHJlYXNvbmFibHkgYWNjdXJhdGVseSwgY2FsY3VsYXRlIHRoZWlyIG9kZHMgZHVyaW5nIGEgcG9rZXIgaGFuZC4gVGhpcyB3aWxsIGJlIHVzZWQgd2hlbiB5b3UgYXJlIGhvbGRpbmcgYSBkcmF3aW5nIGhhbmQsIG9yIGZlZWwgeW91IGFyZSBiZWhpbmQgaW4gdGhlIGhhbmQuIFRoZSA0LzIgcnVsZSBvbmx5IGNvbWVzIGludG8gZWZmZWN0IGFmdGVyIHRoZSBmbG9wLiAKQW5kIHRoYXQgY2FuIG1ha2UgeW91IGEgd2lubmVyIGV2ZXJ5IHRpbWUuLiAKV2lubmluZyAxMCBidXkgaW5zIGluIHdoYXQgaXMgbGlrZWx5IHVuZGVyIDEwayBoYW5kcyBhbmQgZ2V0dGluZyB0b3AgMTAgaW4gMiB0b3VybmFtZW50cyB3aXRoIHRob3VzYW5kcyBvZiBwYXJ0aWNpcGFudHMgY2Fubm90IGhhcHBlbiBpZiB5b3UgYXJlIG5vdCBxdWl0ZSBsdWNreS4KV2l0aCBpdHMgZW1waGFzaXMgb24gYmlnIHRydWNrcywgR00gbWlzc2VkIHRoZSBpbml0aWFsIG1hcmtldCBzaGlmdCB0byBjYXIgYmFzZWQgY3Jvc3NvdmVycy4gTm93IGl0J3MgdHJ5aW5nIHRvIGNhdGNoIHVwICAgd2l0aCBtaXhlZCByZXN1bHRzLgpBcyBldmVyeW9uZSBrbm93cywgVmVybW9udCBsZWQgdGhlIGNvdW50cnkgaW4gcmlnaHRzIGZvciBzYW1lIHNleCBjb3VwbGVzIHdoZW4gaXQgcGFzc2VkIENpdmlsIFVuaW9ucyBhIGRlY2FkZSBhZ28sIGJ1dCBub3cgaXQgaXMgdHJ5aW5nIHRvIGNhdGNoIHVwIHRvIE1hc3NhY2h1c2V0dHMgYW5kIGFsbG93IHNhbWUgc2V4IGNvdXBsZXMgdG8gbWFycnkuClRvcCBHZWFyIFNlYXNvbiAxNiBFcGlzb2RlIDYgUHJlc2VudHMgUG93ZXIgUGFja2VkIFJpZGVzIQpUaGUgcHJvamVjdCBpcyByZWxpZ2lvdXNseSBuZXV0cmFsLiBUaGlzIG1lYW5zIHRoZSB3b3JrIHdvbiBiZSBsaW1pdGVkIHRvIG9uZSByZWxpZ2lvdXMgdHJhZGl0aW9uIGFuZCB3aWxsIGluY2x1ZGUgc3R1ZHkgb2YgdGhlIHJlYXNvbnMgZm9yIGF0aGVpc20gYW5kIGFnbm9zdGljaXNtLCBPbGl2ZWlyYSBzYWlkLiBTY2hvbGFycyBvZiBldmVyeSBwZXJzdWFzaW9uIHdpbGwgYmUgaW52b2x2ZWQuClNoZSBoYWQgdGhlIGdyYWRlcyB0byBnZXQgaW50byBsYXcgc2Nob29sLCBidXQgZGVjaWRlZCB0byB0YWtlIGEgeWVhciBvZmYgZmlyc3QsIGFuZCB3b3VuZCB1cCBydW5uaW5nIGEgaGlnaCBzdGFrZXMgcG9rZXIgZ2FtZSBpbiBMb3MgQW5nZWxlcy4gCk11Y2ggbGlrZSB0aGUgVmVlbGEgY29tbWVudCBpbiBHb0YsIEZsZXVyIERlbGFjb3VyIGlzIHBhcnQgVmVlbGEgYW5kIGFjY29yZGluZyB0byB0aGVpciBkaXNwbGF5IGluIHRoZSBRdWlkZGl0Y2ggV29ybGQgQ3VwIHRoZXkgY2FuIGJlIGRvd25yaWdodCBkZW1vbmljLCBidXQgYSBodW1hbiBpbiBoZXIgZmFtaWx5IGRlY2lkZWQgdG8gZG8gdGhlIG5hc3R5IHdpdGggb25lLgpUaGUgdGhpcmQgb2YgdGhlIGluZHVzdHJ5IGlzIG1hZGUgb2Ygb25saW5lIGNhc2lub3MsIHdoZXJlYXMgdGhlIHNlY29uZCBwbGFjZSBpcyBjbGFpbWVkIGJ5IG9ubGluZSBsb3R0ZXJpZXMuIApJZiB5b3UgbmVlZCBjYXNoLCBnZXQgb3V0IHNvbWUgYWRzIGFuZCBkbyBzb21lIGZyZWVsYW5jZSBjb25zdWx0aW5nIHdvcmsuIApZb3Ugbm9ybWFsbHkgbmVlZCBvZiBwYXkgYSBicmFuZCBuZXcgdGl0bGUgb3Bwb3J0dW5pdHkgZXZlcnkgeW91ciB0aW1lIHlvdSBtYWludGFpbiBhIGRpbGVtbWEgYWJvdXQgYSBwYXJ0aWN1bGFyIHByb3BlcnR5LiBXaGljaCBoYXMgYSBtaW5pbWFsIGFtb3VudCBvZiBiaXQgYW1vbmdzdCBrbm93bGVkZ2UgYW5kIHRoZW4gcHJhY3RpY2UsIHlvdSBzaG91bGQgYmUgYWJsZSB0byBncmFzcCBpbiBvciBzbyBtaW51dGVzIHdoZXRoZXIgcG90ZW50aWFsbHkgbm90IGFuIGFic29sdXRlIGRlYWwgY291bGQgYmUgcmVhbGx5IHZhbHVlZCBhdCBkb2luZyBwbHVzIGlmIGl0IGlzIGFsd2F5cyBqdXN0IHRoaXMgbW9uZXkgYWJ5c3MgaW4gaGlkZS4uIApBbGwgdG9sZCwgdGhlIGxpdmUgcGx1cyBzYW1lIGRheSBhdmVyYWdlIGZvciB0aGUgNjQgc2hvd3MgdGhhdCBhaXJlZCBpbiB0aGUgZmlyc3QgdHdvIHdlZWtzIG9mIHRoZSBzZWFzb24gd29ya2VkIG91dCB0byBhIDEuMyByYXRpbmcsIG9yIHNvbWUgMS42OCBtaWxsaW9uIGFkdWx0cyAxOCB0byA0OS4gCk9uIGhlciBsZWZ0IHRoaWdoLCBzaGUgaGFzIGEgdW5pY29ybiB3aXRoIHRoZSB3b3JkcyAnQm9ybiBUaGlzIFdheScuIEZpbmFsbHksIHNoZSBoYXMgYSBxdW90ZSBvbiBoZXIgbGVmdCBhcm0gd2hpY2ggdHJhbnNsYXRlcyBhczouLiAKVG9kYXksIENob25ncWluZyBhbHNvIHNlcnZlcyBhcyB0aGUgZWNvbm9taWMgY2VudGVyIG9mIHRoZSB1cHN0cmVhbSBZYW5ndHplIGFyZWEgYW5kIG1ham9yIG1hbnVmYWN0dXJpbmcgYmFzZSBhbmQgdHJhbnNwb3J0YXRpb24gaHViIGZvciBTb3V0aHdlc3QgQ2hpbmEuLiAKSSBub3Qgc3VyZSB5ZXQgaWYgSSBnb2luZyB0byBhdHRlbXB0IHRvIHRha2UgYW55dGhpbmcgYXMgY2Fycnkgb24uIApJdCBhIGxhenkgYW5hbHlzaXMuIEl0IGRvZXMgbm90aGluZyB0byBhZGRyZXNzIHRoZSByZWFsIHByb2JsZW0sIHNoZSBzYWlkLkh1bWFuIHRyYWZmaWNraW5nIGlzIGRlZmluZWQgYXMgdGhlIGV4cGxvaXRhdGlvbiBvZiBwZW9wbGUgZm9yIHByb2ZpdCB0aHJvdWdoIGZvcmNlLCBmcmF1ZCBvciBjb2VyY2lvbiwgYSBjcmltZSB3aXRoIHR3byBjYXRlZ29yaWVzOiBsYWJvdXIgYW5kIHNleCB0cmFmZmlja2luZy5FeHBlcnRzIGhhdmUgaWRlbnRpZmllZCBMb25kb24gYXMgYSBodWIgZm9yIHNleCB0cmFmZmlja2luZyBiZWNhdXNlIG9mIGl0cyBrZXkgbG9jYXRpb24gYWxvbmcgdGhlIEh3eS4gCk9uIHRoZSBvdGhlciBoYW5kLCBzaGUgY2FuIHJlYWxseSB3b3JrIGlmIHNoZSBoYXMgc3RhZ2UgMyBjYW5jZXIsIGFuZCB0aGUgZW1wbG95ZXIgY2FuIHJlYWxseSBoaXJlIGFub3RoZXIgaGVscGVyIGlmIHRoZSBtYWlkIHJvb20gaXMgb2NjdXBpZWQgYnkgaGVyLiAKVGhlIHNtYWxsIGNsYXNzZXMgb2YgTXVzaWMgMSBhbmQgTXVzaWMgMiBzdHVkZW50cyBoYXMganVzdCBzZXZlbiBzdHVkZW50cyB3aG8gcGxheSBndWl0YXIsIGVsZWN0cmljIGd1aXRhciwgRnJlbmNoIGhvcm4sIHZpb2xpbiwgYWx0byBhbmQgYmFyaXRvbmUgc2F4b3Bob25lLCBwaWFubywgZHJ1bXMgYW5kIHZvY2Fscy4gCkkgc2VlIFBCRSBhcyBtb3N0bHkgZm9yIGJ1Z3Rlc3RpbmcuIApBcHAgSSdtIG9ic2Vzc2VkIHdpdGg6Q3VycmVudGx5LCBTbmFwY2hhdC4gSXQgdGVycmlibGUuIEkgbG92ZSBpdC4gUHJvIHRpcDogQWxsb3cgcGVvcGxlIHdobyBhcmVuIHlvdXIgZnJpZW5kcyB0byBTbmFwY2hhdCB5b3UuCldpdGggbm8gam9pbnQgZG9jdW1lbnQsIHdpdGggZWFjaCBzaWRlIHJlZnVzaW5nIHRvIGxheSBvbiB0aGUgdGFibGUgY2VydGFpbiBpc3N1ZXMgbGlrZSBKZXJ1c2FsZW0gYW5kIHRoZSBzdGF0dXMgb2YgdGhlIG92ZXJzaXggbWlsbGlvbiBQYWxlc3RpbmlhbiByZWZ1Z2Vlcywgd2l0aCBlYWNoIHNpZGUgY29taW5nIHRvIHRoZSB0YWJsZSB3aXRoIGEgbGlzdCBvZiBkZW1hbmRzIHRoYXQgY3Jhc2ggdXAgYWdhaW5zdCBlYWNoIG90aGVyLCBpdCBpcyBpbmNyZWFzaW5nbHkgcG9zc2libGUgdGhhdCB0aGUgdGFsa3Mgd2lsbCBiZSBsaXR0bGUgbW9yZSB0aGFuIHBvbGl0aWNhbCB3b3JkcyBmbG9hdGVkIGluIHRoZSBhaXIgdG8gbWFrZSB0aGUgVVMgbG9vayBiZXR0ZXIsIHRvIG1ha2UgcGVvcGxlIHRoaW5rIHRoYXQgdGhlIElzcmFlbGkgZ292ZXJubWVudCBpcyB0cnlpbmcuClRoZSBTdW1tZXIgb2YgMTk3NiwgV3lubiBhcHByb2FjaGVkIGhlciBpbiB0aGUgYmFjayBoYWxsIGFuZCB3YW50ZWQgaGVyIHRvIGdvIHdpdGggaGltLCBhY2NvcmRpbmcgdG8gdGhlIHJlcG9ydCBmaWxlZCBKYW4uIDI5LiBUb2xkIGhpbSwgc2hlIHdhcyBkb25lIGFuZCBoYWQgc29tZW9uZSBzaGUgd2FzIHNlZWluZy4gCldlIHdpbGwgbmV2ZXIga25vdyB3aGF0IHdvdWxkIGhhdmUgaGFwcGVuZWQuIEkgY291bGQgcG9pbnQgb3V0IHRoZSBmYWN0IHRoYXQgS2FtYXJ1IG9ubHkgaGFzIG9uZSBLTyB2aWN0b3J5ICgyMDE3KSBpbiBoaXMgVUZDIGNhcmVlciBnb2luZyBiYWNrIDQgeWVhcnMgYW5kIG9uZSBzdWJtaXNzaW9uIG9uIGhpcyBVRkMgZGVidXQuIENhbiBJIHBvaW50IHRvIHRoYXQgYW5kIHNheSBkZWZpbml0aXZlbHkgaGUgd291bGQgaGF2ZSBuZXZlciBnb3R0ZW4gYSBmaW5pc2ggdGhhdCBuaWdodD8gTm8sIEkgZG9uIHRoaW5rIHRoYXQgaXMgZmFpciBidXQgaXQgc29tZXRoaW5nIHdvcnRoIGxvb2tpbmcgYXQgSU1PLiBBdCB0aGUgZW5kIG9mIHRoZSBkYXksIGl0IGlzIHdoYXQgaXQgaXMgYW5kIEthbWFydSBpcyBzdGlsbCB0aGUgV1cgY2hhbXAgYWZ0ZXIgYSBsZWdpdCBhbmQgZmFpciB2aWN0b3J5LgpGb3IgaW5zdGFuY2UsIGlmIHRoZXJlIGFyZSBvbmx5IGZpdmVzIHRocm91Z2ggbmluZXMgb24gdGhlIHRhYmxlIGFuZCBhbGwgeW91IGhhdmUgbGVmdCBhcmUgdHdvcyBhbmQgZmFjZSBjYXJkcy5bNV0uIApBbnNvbnN0ZW4gd3JkZW4gamEgYXVjaCBuaWNodCBqZWRlbiBTb21tZXIgU2Fpc29uYXJiZWl0ZXIga29tbWVuIHp1bSBTcGFyZ2Vsc3RlY2hlbiBldGMuIAoiV2UgaGF2ZSB2YWxldCBwYXJraW5nIGFuZCB5b3UgZG9uJ3QgaGF2ZSB0aGUgaGFzc2xlIG9mIGZpZ2h0aW5nIHRyYWZmaWMgdG8gZ2V0IGRvd250b3duLCIgc2hlIHNhaWQuCllvdXIgaGlwIGZsZXhvcnMgbGlmdCB5b3VyIGxlZ3MsIGFuZCBhcmUgdGh1cyBzb21lIG9mIHRoZSBzdHJvbmdlc3QgYW5kIG1vc3QgdXNlZCBtdXNjbGVzIGluIHlvdXIgYm9keS4gVGhleSBwdWxsIHRoZSBsZWdzIHVwIGZyb20gdGhlIGluc2lkZSB0b3Agb2YgdGhlIGZlbXVyLCBhbmQgYXJlIGFuY2hvcmVkIHRvIHRoZSBpbnNpZGUgb2YgeW91ciBzcGluZSBwZWx2aXM7IGlmIHRoZXkgYXJlIHRpZ2h0LCB0aGV5IHB1bGwgeW91ciBzcGluZSBoaXBzIGZvcndhcmQsIHdoaWNoIGNhbiBjYXVzZSBsb3cgYmFjayBhbmQgaGlwIHBhaW4uIFRoZSBtb3JlIHlvdSBzaXQgb3Igc2xlZXAgd2l0aCB5b3VyIGtuZWVzIHB1bGxlZCB1cCwgdGhlIHNob3J0ZXIgYW5kIHRpZ2h0ZXIgdGhlIG11c2NsZXMgZ2V0LiAKQnV0IGl0IHdlaXJkIHRvIG1lIHRoYXQsIHNpbWlsYXIgdG8gdGhlIEhpZ2h0b3dlcnMsIHdlIGhlYXIgYWxsIHRoaXMgdGFsayBhYm91dCB0aGVtLCBidXQgbmV2ZXIgc2VlIHRoZW0uLiAKTGFiYmUncyBkZXNpZ24gY29uc2lzdGVkIG9mIGEgc3Rvb2wgbW91bnRlZCBvbiBhIHBlZGVzdGFsLiBBIG1ldGFsIGZyYW1lIGF0dGFjaGVkIHRvIHRoZSBiYWNrIHNlY3Rpb24gb2YgdGhlIHBlZGVzdGFsLiAKSXQgc2F5cyB0aGF0IFNtb2xsZXR0IGtuZXcgYXQgdGhlIHRpbWUgaGUgcmVsYXllZCBoaXMgYWNjb3VudCB0aGF0IGhlIGhhZCByZWFzb25hYmxlIGdyb3VuZCB0aGF0IHN1Y2ggYW4gb2ZmZW5jZSBoYWQgYmVlbiBjb21taXR0ZWQuIFNtb2xsZXR0IGFycmVzdCwgdGhlIHByb2R1Y2VycyBvZiBFbXBpcmUgYW5ub3VuY2VkIHRoYXQgdGhlIGFjdG9yIGNoYXJhY3RlciB3b3VsZCBiZSByZW1vdmVkIGZyb20gdGhlIHNlYXNvbiBmaW5hbCB0d28gZXBpc29kZXMuIEZveCBuZXR3b3JrIGFuZCB0aGUgc3R1ZGlvIHRoYXQgcHJvZHVjZXMgRW1waXJlIGhhZCBubyBpbW1lZGlhdGUgY29tbWVudCBvbiB0aGUgbGF0ZXN0IGluZGljdG1lbnQuCkluIEZJRkEsIHlvdSBjYW4gZXhlY3V0ZSBkaWZmZXJlbnQga2luZHMgb2YgcGFzc2VzIGFzIHdlbGwsIGJ1dCB5b3Ugbm90IHJlYWxseSBhY3R1YWxseSBwaHlzaWNhbGx5IHBhc3NpbmcgdGhlIGJhbGwuIApZZXMgSSBuZWVkZWQgdG8gc2hhdmUgdGhlIGNob2NvbGF0ZSBhbmQgc3ByaW5rbGUgdGhlIGNpbm5hbW9uIGJldHRlciEgQnV0IEkgaGFkIHRvdGFsbHkgZmFpbGVkIHdpdGggc2hhdmluZyBjaG9jb2xhdGUgaW4gYW5vdGhlciByZWNlbnQgY29va2luZyBlc2NhcGFkZSwgc28gSSB0cmllZCB0byBqdXN0IGNydXNoIGl0IGludG8gY2h1bmtzIHRoaXMgdGltZS4gCkNvbG9tYmlhbiBib3JuIHBvcCBzaW5nZXIgU2hha2lyYSBtYWRlIGhlciBtYXJrIG9uIHRoZSBkZWNhZGUgd2l0aCBoZXIgbGF0aW4gaW5zcGlyZWQgbXVzaWMsIEFyYWJpYyBkYW5jZSBtb3ZlcyBhbmQgdW5pcXVlIHZvaWNlLiAKRW50ZXJ0YWluIHF1ZXN0aW9ucy4gQ2xpZW50cywgZXNwZWNpYWxseSBmaXJzdCB0aW1lcnMsIG1heSBoYXZlIHF1ZXN0aW9ucyByZWdhcmRpbmcgdGhlIHNlcnZpY2UgeW91IGFyZSBwcm92aWRpbmcuIEl0IGlzIGltcG9ydGFudCB0aGF0IHlvdSBhcmUgYWJsZSB0byBhbnN3ZXIgYW55IHF1ZXN0aW9ucyB0aHJvd24gYXQgeW91LiBGdXJ0aGVybW9yZSwgaWYgeW91IGVudGVydGFpbiB5b3VyIGNsaWVudCwgaXQgY2FuIGFkZCB0byBoaW0gbGlraW5nIGFuZCB0cnVzdGluZyB5b3UuCkluIHRoZSBjYXNlIG9mIGFsbCBvdGhlciBwbGF5ZXJzIGZvbGRpbmcsIHRoZSBoYW5kIGRvZXMgbm90IGhhdmUgdG8gYmUgZXhwb3NlZCBhdCBhbGwuIApEaXNtYWwgZWNvbm9taWMgZGF0YSBnaXZlcyBMaWJlcmFscyBsaWNlbmNlIHRvIHNwZW5kCkFuZCBob3cgcGVyZmVjdCBkaWQgdGhlIEVEIHNvbmcgZml0IGR1cmluZyB0aGF0IHNjZW5lIGFzIHdlbGwsIG1hdGNoZWQgYm90aCBBdHJhIHNhZG5lc3MgYW5kIHRoZSBiZWF1dHkgb2YgdGhlbSBmaW5hbGx5IG9wZW5pbmcgdXAgdG8gZWFjaCBvdGhlci5JIGRpZG4gc2F5IGl0IHllc3RlcmRheSAoYmVjYXVzZSBJIHF1aXRlIGxpdGVyYWxseSBkaWQgbm90IGhhdmUgcm9vbSEgU28gdGhpcyBpcyBraW5kYSBoYWxmIGEgZGVsYXllZCBwb3N0IHJhdGhlciB0aGFuIGEgbmV3IG9uZSkgYnV0IHRoaXMgaXMgd2h5IFJ1c3RhbCBzYWlkIHlvdSBuZXZlciBncmV3IHVwLCBNY0dpbGxpcywgbm90IHRoYXQgeW91IGhlYXJkIGhpbS5MZWdlbmRzIGhvbGQgbm8gcG93ZXIgd2l0aCBwZW9wbGUgd2hvIGhhdmUgbm8gcmVhc29uIHRvIGJlbGlldmUgaW4gdGhlbS4gCkhlcmUncyBhIHNvbGlkIG1ldGEgYW5hbHlzaXMgZm9yIHRoZSBiZW5lZml0IG9mIGV4ZXJjaXNlLgpUaGUgUGxhaW4gRGVhbGVyCkhvd2V2ZXIsIHRoZXJlIGlzIG9uZSBzdXJlIHdheSB0byBoYXZlIHRoZSBiZXN0IG9kZHMgd2hlbiBwbGF5aW5nIHNsb3QgbWFjaGluZXMgYXQgYSBjYXNpbm8uIEZpbmQgYSBzaW5nbGUgZGVjayB2aWRlbyBwb2tlciBzbG90IG1hY2hpbmUuCkVtZXJnZW5jeSByb29tIHZpc2l0cyBhcmUgc2lnbmlmaWNhbnRseSBtb3JlIGNvbW1vbiBpbiBjaGlsZHJlbiB3aG8gcmVjZW50bHkgcmVjZWl2ZWQgdGhlIE1NUiB2YWNjaW5lOgpPYnZpb3VzbHksIEkgbG92ZSBteSAyIGJveXMgKHRoZSBiYWJ5IGlzIGN1cnJlbnRseSBzbGVlcGluZyBvbiBtZSksIGJ1dCBhIHNtYWxsIHBhcnQgb2YgbWUgZG9lcyBzdGlsbCBtb3VybiB0aGUgZmFjdCB0aGF0IEkgbWF5IG5vdCBldmVyIGhhdmUgYSBnaXJsLiBJIGFtIHRoZSB5b3VuZ2VzdCBvZiAzIGdpcmxzLCBhbmQgSSBzdXJlIG15IGRhZCB3YXMgZGlzYXBwb2ludGVkIHRvIG5ldmVyIGhhdmUgYSBzb24sIGJ1dCBub3cgaGUgaGFzIDIgZ3JhbmRzb25zIGFuZCBoZSBvdmVyIHRoZSBtb29uLiAKV2hhdCBlcmVjdGlsZSBkeXNmdW5jdGlvbiBpcwpXaGVuIHRoaW5raW5nIGFib3V0IHRoZSBiZXN0IHdheSB0byBrZWVwIHlvdXIgc2tpbidzIHRoaXJzdCBxdWVuY2hlZCwgeW91IG1pZ2h0IGZpcnN0IHR1cm4gdG8gYm9keSBsb3Rpb25zOyBob3dldmVyLCB0aGVzZSBjcmVhbXMgdGVuZCB0byBydWIgb2ZmIHF1aWNrbHkgYW5kIGxlYXZlIHlvdXIgc2tpbiBkcnkgYWdhaW4gcXVpY2tseS4gQW4gYWx0ZXJuYXRpdmUgdG8gYm9keSBsb3Rpb25zLCBib2R5IG9pbHMgb2ZmZXIgdGhlIHBlcmZlY3Qgd2F5IHRvIGtlZXAgeW91ciBza2luIG1vaXN0dXJpemVkIHdoaWxlIHJlbGF4aW5nIHlvdXIgbWluZCBhbmQgaW1wcm92aW5nIHlvdXIgYm9keSdzIG92ZXJhbGwgaGVhbHRoLi4gClRoZSBzdHVkeSBieSBBLiBHcm9udHZlZCBhbmQgZmVsbG93IHJlc2VhcmNoZXJzIHN1Z2dlc3RzIHRoYXQgdGhlIGFkZGl0aW9uIG9mIHdlaWdodCB0cmFpbmluZyB0byBhIGhlYWx0aHkgZGlldCBhbmQgYWVyb2JpYyBleGVyY2lzZSBwbGFuIG1heSBvZmZlciBhZGRpdGlvbmFsIHByb3RlY3Rpb24gYWdhaW5zdCB0aGUgZGV2ZWxvcG1lbnQgb2YgdHlwZSAyIGRpYWJldGVzLgpIZSB3YXMgYSBoaWdoIHJvbGxlciwgIiBzaGUgcmVwbGllZC4gSGUgZmVsdCBsaWtlIGEgcm9jayBzdGFyIGJlaW5nIGFibGUgdG8gdHJlYXQgbWUgdG8gdGhlc2UgdGhpbmdzLiAKT09IIGluIE9jdG9iZXIsIFRWIGluIERlY2VtYmVyLiBXZSBoYXZlIHNvIG11Y2ggbW9yZSB5ZXQgdG8gY29tZS4gCjFyZXhhczEgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCiJSaWdodCBub3cgdGhlcmUncyBhIGxvdCBvZiB2aWRlbyBmZWF0dXJlcyBpbiB0aGUgc2xvdCBtYWNoaW5lczogbXVsdGlsaW5lIGdhbWVzLCBmcm9tIG5pbmUgbGluZXMgdG8gNTAgbGluZXMgdG8gMTAwIGxpbmUgc2xvdCBtYWNoaW5lcyBub3cuIEl0J3MgYWxsIHZpZGVvIHN0cmVhbWVkLiAKTmVlZGVkQSBtYWxlIHByb3N0aXR1dGUgbWF5IHdvcmsgaW4gYSBtYWxlIGJyb3RoZWwsIGFsc28ga25vd24gaW4gc29tZSBwbGFjZXMgYXMgYSAic3RhYmxlLiIgVGhpcyBpcyBjb21tb24gaW4gU291dGggRWFzdCBBc2lhIGFuZCBpcyBhbHNvIGZvdW5kIGluIHNvbWUgdG93bnMgYW5kIGNpdGllcyBlbHNld2hlcmUuVGhlIENsZXZlbGFuZCBTdHJlZXQgc2NhbmRhbCBmZWF0dXJlZCBhIExvbmRvbiBtYWxlIGJyb3RoZWwgZnJlcXVlbnRlZCBieSBhcmlzdG9jcmF0cywgaW4gMTg4OSwgd2hlbiBtYWxlIGhvbW9zZXh1YWxpdHkgd2FzIGlsbGVnYWwgaW4gdGhlIFVuaXRlZCBLaW5nZG9tLCBhcyBicm90aGVscyBzdGlsbCBhcmUuIApQZXJoYXBzIHlvdSBoZWFyZCB1cyBtZW50aW9uIEJpZyBPbWFoYSBhIHRpbWUgb3IgODcgaW4gcmVjZW50IHdlZWtzLiBXZWxsLCB0aGUgY29uZmVyZW5jZSB0YWtlcyBwbGFjZSB0aGlzIHdlZWssIGFuZCBldmVuIGlmIHlvdSBkaWRuIHNuYWcgYSB0aWNrZXQgdG8gdGhlIG1haW4gZXZlbnQsIHRoZXJlIGFyZSBwYXJ0aWVzIG9wZW4gdG8gdGhlIHB1YmxpYyBvbiBXZWRuZXNkYXksIFRodXJzZGF5IGFuZCBGcmlkYXkgbmlnaHRzLi4gCllldCBvbGRlciBzdXBwb3J0ZXJzIHdpbGwgaGFya2VuIGJhY2sgdG8gYW4gZXJhIHdoZXJlIHRoZSBncm91bmQgdW5pbnZpdGluZyBzdXJyb3VuZHMgaGVscGVkIGZvc3RlciBhIGxvY2FsIHNlbnNlIG9mIHJlc2lsaWVuY2UgaW4gaG9tZSB0ZWFtcyBhbmQgaW5jaXRlZCB1bmVhc2UgYW5kIGRpc2NvbWZvcnQgaW4gdmlzaXRpbmcgc2lkZXMuIApHaXZlbiB0aGVzZSBzZWVtaW5nbHkgc2ltcGxlIGluY2VudGl2ZXMsIGVtcGxveWVlcyBmaW5kIHRoZW1zZWx2ZXMgbW9yZSBlbmdhZ2VkIGluIHRoZSBjb21wYW55LCB3aGljaCBkcml2ZXMgdGhlbSB0byBkaWcgZGVlcGVyIGFuZCB3b3JrIGhhcmRlci4gClNvIHdoZW4gSmFtZXMgcHVzaGVzICQyIGludG8gdGhlIG1pZGRsZSBvZiB0aGUgdGFibGUsIEkgYW0gc2tlcHRpY2FsLiAKQWNjb3JkaW5nIHRvIEdhdWRpeWFzLCBpdCB3YXMgU3JpbWFuIE1haGFwcmFiaHUsIGluIHZpcnR1ZSBvZiBiZWluZyAoYXMgd2UgYmVsaWV2ZSkgS3JzbmEgSGltc2VsZiwgd2hvIHByZWFjaGVkIHRoZSB0b3Btb3N0IGtub3dsZWRnZSAodGhlIGJsb3Nzb21pbmcgb2YgdGhlIGZsb3dlciBvZiBLcnNuYSBQcmVtYSkuIEFsbCB0aGUgYWNoYXJ5YSB0aGF0IHByZWNlZGVkIEhpbSB3ZXJlIG9ubHkgcHJlcGFyaW5nIHRoZSB3YXkgZm9yIEhpbS4gTWFkaHZhY2hhcnlhIHByZWFjaGVkIGEgaGVhdmlseSBkdWFsaXN0aWMgdGhlb3J5IHRvIGNvdW50ZXIgdGhlIHBoaWxvc29waHkgb2YgU2Fua2FyYSBhbmQgZXN0YWJsaXNoIHRoZSBzdW1wcmVtY3kgb2YgTmFyYXlhbmEuIApXaHkgcHV0IG91dCBhIGRlbGliZXJhdGVseSBiYWQgcHJvZHVjdCBvbiB0aGUgaWNlIGp1c3QgZm9yIHRoZSBzYWtlIG9mIHNlZWluZyBndXlzIGxpa2UgSGF5ZGVuIHBsYXkgdG9wIG1pbnV0ZXMgd2hlbiB0aGV5IHNob3duIHRoZXkgYXJlbiB3b3J0aCBpdC4gCkkgZG9uIHJlZ3JldCBpdC4gCiA4IHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvRXUgc2VtcHJlIGp1bGdvIGltcG9ydGFudGUgaWRlbnRpZmljYXIgcXVhbCAgYSBjb2lzYSBwcmluY2lwYWwgZG8gcXVlIGVsZXMgcGVkZW0sIGEgZGVwZW5kZSBkbyBub21lIGUgZGEgZGVzY3JpbyBkYSB2YWdhISBKIG1lIGFwbGlxdWVpIHByYSB2cmlhcyBxdWUgZXUgdGluaGEgdGlwbyAxLzMgZG8gcXVlIHBlZGlhbSwgZSBlc3NlIDEgZXJhIG8gImNvcmUiIGRhIHBvc2lvLiBTYWJlbmRvIHNlIHZpcmFyIG5vIHJlc3RvIChlIGRpemVyIGlzc28gY29tIGNvbmZpYW5hIGUgc2luY2VyaWRhZGUsIHVtICJldSBubyB0ZW5obyB0YW50YSBleHBlcmluY2lhIGNvbSBpc3NvLCBtYXMgY29tIGNlcnRlemEgdm91IG1lIGVzZm9yYXIgcHJhIGVuY29udHJhciBhIG1lbGhvciBtYW5laXJhIGRlIGZhemVyIC8gYXByZW5kZXIiKSwgZCBwcmEgaXIgcHJhIGZyZW50ZSBlbSB2cmlvcyBwcm9jZXNzb3MuIApJIGdldCB0aGF0IHRoZXNlIGFyZSBmYWN0b3JzIHRoYXQgY2FuIGxlYWQgdG8gYSBsaWZlIG9mIGNyaW1lLCBidXQgSSBzdGlsbCB0aGluayBzb21ldGltZXMgcGVvcGxlIGFyZSBnYXJiYWdlLiBNeSBodXNiYW5kIGFsc28gZ3JldyB1cCBpbiB0aGUgc2FtZSBzaXR1YXRpb24gYnV0IGFsc28gZnJvbSBhIGJyb2tlbiBmYW1pbHkgZnVsbCBvZiBnYW5nIG1lbWJlcnMuIApVbiBhdXRyZSBhdmFudGFnZSBlc3QgdmVudSBkdSBmYWl0IHF1ZSBqZSBjb25zb21tYWlzIG1vaW5zIGRlIGNhcmJ1cmFudCBxdWUgbGVzIGF1dHJlcy4gYSBsZSBjYXMgZHVyYW50IHRvdXRlIG1hIGNhcnJpIFF1ZWxsZXMgcXVlIHNvaWVudCBsZXMgY2F0IGogdG91am91cnMgdXRpbGlzIG1vaW5zIGQgbW9pbnMgdXMgbWVzIHBuZXVzIGV0IG1lcyBmcmVpbnMgcXVlIG1lcyBjbyBEb25jLCBjaGFxdWUgcmVsYWlzLCBqZSBwYXJjb3VyYWlzIHRvdWpvdXJzIGRldXggb3UgdHJvaXMgdG91cnMgZGUgcGx1cyBxdWUgbGVzIGF1dHJlcy4gSmUgZGlzcG9zYWlzIGF1c3NpIGQgNmUgdml0ZXNzZSBxdWUgaiBwYXJmb2lzIGVuIGFzcGlyYXRpb24gcG91ciBkdSBjYXJidXJhbnQuIEV0IGF1c3NpIHBvdXIgc291bGFnZXIgbGUgbW90ZXVyLiBJbCBtIGRlIGxldmVyIGxlIHBpZWQgZW4gdmlyYWdlLCBqdXN0ZSB1biB0b3V0IHBldGl0IHBldSwgcG91ciBuZSBwYXMgcXUgZXhwbG9zZSBkYW5zIGxlcyBjaW5xIGRlcm5pZXJzIHRvdXJzLgpCZWVuIHRyeWluZyB0byBmaWd1cmUgb3V0IHdoYXQgSSBtaXNzaW5nLiBJIGFtIGF0IDE1MDAgY2Fsb3JpZXMgZGFpbHksIGFuZCBJIGRvbiB0aGluayBJIGNvdWxkIGdvIG11Y2ggYmVsb3cgdGhhdC4gU2hvdWxkIEkgdHJ5IHRvIGRvIG1vcmUgY2FyZGlvPyBUcnkgdG8gY2hhbmdlIHVwIHRoZSBjb250ZW50cyBvZiBteSBkaWV0PyBJbmNyZWFzZSBteSBkZWZpY2l0PyBLZWVwIGRvaW5nIHdoYXQgSSBkb2luZz8gNCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCldoZW4gYXNrZWQgaWYgdGhlaXIgd2FzIG1vcmUgb3IgbGVzcyB3YXRlciBhZnRlciB0aGUgd2F0ZXIgd2FzIHBvdXJlZCBmcm9tIHRoZSB0YWxsIHRvIHRoZSBzaG9ydCB2ZXNzZWwgcHJlb3BlcmF0aW9uYWwgY2hpbGRyZW4gb2Z0ZW4gc2FpZCB0aGF0IHRoZXJlIHdhcyBsZXNzIHdhdGVyIGluIHRoZSBzdG91dCBnbGFzcy4gCllldCBhbm90aGVyIG1hbiB3aG8gd2FzIGFycmVzdGVkIGZvciBzZXh1YWwgZXhwbG9pdGF0aW9uIG9uIFN1bmRheSByZXR1cm5lZCBNb25kYXkuIEhlIHN0b29kIGFjcm9zcyB0aGUgc3RyZWV0IGFuZCB1c2VkIGhpcyBjZWxscGhvbmUgdG8gdmlkZW8gcmVjb3JkIHRoZSBnb2luZ3Mgb24gYXQgdGhlIHN0aW5nIGxvY2F0aW9uIG9mIHRoZSB1bmRlcmNvdmVyIHBvbGljZSBvcGVyYXRpb24gICBhbmQgZWFybmVkIGhpbXNlbGYgYSBzZWNvbmQgY2hhcmdlIGZvciBvYnN0cnVjdGlvbi4KQ2VsYSBuIHBhcyB0b3V0ICBmYWl0IHVuIGhhc2FyZCBzaSBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBxdWkgZW4gY29udGllbm5lbnQgcHJzZW50ZW50IHBldSBvdSBwcm91IGRlcyBwcm9wcml0cyBhbnRpIGluZmVjdGlldXNlcyAoYmllbiBxdWUgY2UgbmUgc29pdCBwYXMgbCBsZXVyIGRvbWFpbmUgZGUgcHJkaWxlY3Rpb24pLlNpIGNldHRlIGZhbWlsbGUgcmVuZmVybWVudCBkZSBub21icmV1c2VzIG1vbGN1bGVzIGRpZmZyZW50ZXMgbGVzIHVuZXMgZGVzIGF1dHJlcywgb24gcGV1dCBkaXJlIHF1ZSwgZ2xvYmFsZW1lbnQsIGxlcyBodWlsZXMgZXNzZW50aWVsbGVzICBmb3J0ZSB0ZW5ldXIgZW4gc2VzcXVpdGVycG5lcyBzb250IGRvdGVzIGRlcyBwcm9wcml0cyB0aHJhcGV1dGlxdWVzIHN1aXZhbnRlcyA6QmllbiBzciwgaWwgcyBsIGQgdHJvbmMgY29tbXVuIGRlIHByb3ByaXRzIHRocmFwZXV0aXF1ZXMsIGQgaHVpbGVzIGVzc2VudGllbGxlcyAgc2VzcXVpdGVycG5lcyBwcnNlbnRhbnQgZGVzIHByb3ByaXRzIHBsdXMgc3BjaWZpcXVlcyBxdWUgbiBwYXMgbGVzIGF1dHJlcy4gUGFyIGV4ZW1wbGUsIGxlIGNoYW1henVsbmUgKG1vbGN1bGUgcHJzZW50ZSBkYW5zIGxlcyBodWlsZXMgZXNzZW50aWVsbGVzIGRlIGNhbW9taWxsZSBhbGxlbWFuZGUgZXQgZCBtaWxsZWZldWlsbGUgZXQgcXVpIGxldXJzIGRvbm5lIHVuZSBqb2xpZSBjb3VsZXVyIGluZGlnbykgZXN0IHVuZSBtb2xjdWxlIGFudGlwaGxvZ2lzdGlxdWUsIGFudGlwcnVyaWdpbmV1c2UgZXQgYW50aWhpc3RhbWluaXF1ZS4gTWFpcyBvbiBuZSBwZXV0IGVuIGRpcmUgYXV0YW50IGRlIGwgZXNzZW50aWVsbGUgZGUgdnRpdmVyIGRlIGxhcXVlbGxlIGxlIGNoYW1henVsbmUgZXN0IGFic2VudC4gCkd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMzogRGVjaXNpb24gbWFraW5nIHVuZGVyIG1lbnRhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBpbiBqdW5pb3IgZWxpdGUgYXRobGV0ZXMuIEluOiBXaWxzb24sIE0uLCBXYWxzaCwgVi4gQW5kIFBhcmtpbiwgQi4gCkF0IGEgY29udGludWF0aW9uIG9mIHRoZSBncm93dGggcmF0ZXMgZnJvbSB0aGUgNTAgdGhlIHNvdmlldCBlY29ub215IHdhcyBleHBlY3RlZCB0byBvdmVydGFrZSB0aGUgYW1lcmljYW4gZWNvbm9teSBpbiB0aGUgNzAgUmVjZW50IHBhc3QgZ3Jvd3RoIGluIGZhcm0gb3V0cHV0IGhhZCBiZWVuIGltcHJlc3NpdmUgKEluIGEgNSB5ZWFyIHBlcmlvZCBtZWF0IGNvbnN1bXB0aW9uIHdlbnQgZnJvbSAyNy41IGtnIHBlciBwZXJzb24gcGVyIHllYXIgdG8gMzQuOCwgbWlsayBmcm9tIDE0NC44IHRvIDIwMC45LCBncmFpbiBmcm9tIDI0Ny45IHRvIDI5Ny42KS4gCk5vdyBpIHBheSAxNSBkb2xsYXJzIG1vcmUgdGhlbiBiZWZvcmUuIEl0cyBnb2luZyB0byBvbmx5IGdvIGhpZ2hlciBkdWUgdG8gdGhlIGZhY3Qgb2YgcHJvZml0LiAKT25lIGRheSwgdGhpcyBndXJ1ICAgd2hvIHNtZWxsZWQgbGlrZSBibHVlIGNoZWVzZSAgIHR1cm5lZCB0byB3aGVyZSBJIHdhcyBzaXR0aW5nLCBuZXh0IHRvIHRoZSBkZWFsZXIsIGFuZCBwbGFjZWQgYSBiZXQgYWJvdXQgd2hldGhlciBJIHdvdWxkIGtub3cgd2hvIHNhaWQ6ICJJIHRoaW5rIHRoZXJlZm9yZSBJIGFtIi4gClR3byB0aGF0IGFwcGVhcmVkIHRvIGJlIENoaWVmcyB3ZSBoYWQgb24gYm9hcmQsIHRvZ2V0aGVyIHdpdGggc2V2ZXJhbCBvdGhlcnMsIGZvciBpdCB3YXMgYSBoYXJkIG1hdHRlciB0byBrZWVwIHRoZW0gb3V0IG9mIHRoZSBTaGlwLCBhcyB0aGV5IENsaW1iIGxpa2UgTXVua2V5czsgYnV0IGl0IHdhcyBzdGlsbCBoYXJkZXIgdG8ga2VlcCB0aGVtIGZyb20gU3RlYWxpbmcgYnV0IGV2ZXJ5dGhpbmcgdGhhdCBjYW1lIHdpdGhpbiB0aGVpciByZWFjaDsgaW4gdGhpcyB0aGV5IGFyZSBQcm9kaWdpb3VzIEV4cGVydC4gCkRhdmlkc29uIGJlZ2FuIHdvcmtpbmcgZm9yIExvYmxhdywgd2hlcmUgc2hlIGxlYXJuZWQgYWxsIHNoZSBjb3VsZCBhYm91dCB0aGUgZ3JvY2VyeSBpbmR1c3RyeSBpbmNsdWRpbmcgaG93IHRvIGJlIGEgYnV5ZXIgYW5kIGhvdyB0byBzb3VyY2UgcHJvZHVjdHMsIHdoaWNoIGxlZCB0byBoZXIgYmVjb21pbmcgYSBjYXRlZ29yeSBtYW5hZ2VyIGJlZm9yZSBtb3ZpbmcgdG8gYSByb2xlIGFzIHByb2R1Y3QgYnJhbmQgbWFuYWdlciBmb3IgUHJlc2lkZW50IENob2ljZS4gCklzIGFuIGFjZSBpbiBjYXJkcyBjb25zaWRlcmVkIGEgMSBvciAxNApMJ3RoZXIgcmZsZWN0ZXVyLCBxdWUgbCdvbiBwZXV0IHF1YWxpZmllciBkJ2ludGVybWRpYWlyZSBlbnRyZSBsYSBtbW9pcmUgYWthc2hpcXVlIGV0IGxhIG1tb2lyZSB0ZXJyZXN0cmUsIHRyYW5zbWV0IHVuZSBtbW9pcmUgcGFydGllbGxlbWVudCBmaWFibGUuIEMnZXN0IGRhbnMgY2V0IHRoZXIgcXVlIHBsb25nZW50IGNlcnRhaW5zIG1kaXVtcyBldCB2b3lhbnRzLCBhdmVjIHVuIG1sYW5nZSBkZSBwZXJjZXB0aW9ucyBleGFjdGVzIGV0IGRmb3JtZXMuIENlbGEgZG9ubmUgbGlldSAgdW5lIG1hcmdlIGQnZXJyZXVyIGltcG9ydGFudGUuIEZpbmFsZW1lbnQgdG91dCBjZWNpIHJlcG9zZSBnYWxlbWVudCBzdXIgdW5lIGF1dHJlIG5vdGlvbiwgY2VsbGUgZGUgbCBnZXJtZSBlbiBmYWl0IHVuZSBycGxpcXVlIGR1IG5ldXJvbmUgIGxhIGJhc2UgZHUgZm9uY3Rpb25uZW1lbnQgZGUgbCBldCBvdXRpbCBwZXJtZXR0YW50IHBhciBsZXMgbGlhaXNvbnMgc3luYXB0aXF1ZXMgZGUgc3RvY2tlciBsIEVuIGZhaXQgc2kgbm91cyBwYXJsb25zIGRlIG1tb2lyZSBjIGVuIHJhaXNvbiBkZXMgc291dmVuaXJzIHF1ZSBub29zIHBvdXZvbnMgbm9zIHJlbW1vcmVyIHF1IHNvaWVudCBub3RyZXMgb3UgcGFzICEKT3ZlcnZpZXcgZm9yIEhhcnB5bGFkeTI2OQpJIGxvdmVkIFN0YXIgVHJlayBteSBlbnRpcmUgbGlmZSBhbmQgSSBub3QgZ29pbmcgdG8gbGV0IHRoZSBmYWN0IFdpbGxpYW0gU2hhdG5lciBpcyBhIGdpZ2FudGljLCBnYXBpbmcgYXNzaG9sZSBydWluIGl0IGZvciBtZSBubyBtYXR0ZXIgaG93IGJpZyBvZiBhIHByaWNrIGhlIGlzLiAKRW50ZXJ0YWlubWVudCBBcnRpY2xlcyAgQXByaWwgMjgsIDIwMDgKSSBsaWtlZCBpdC4gSXQgd2FzIHNuYXp6eS4gCkl0IHdhcyB0aGVpciByZXNwb25zaWJpbGl0eSBzbyB0aGV5IGRvbiBkZXNlcnZlIGt1ZG9zIGZvciBpdCBidXQgaXQgd2FzIG5pY2UgdG8gc2VlLiBJdCBvbmx5IHRvb2sgdGhlbSBhIGZldyB3ZWVrcyB0byBnZXQgY2hlY2tzIGN1dC4gT25lIG9mIG15IGNvd29ya2VycyB3YXMgYWJsZSB0byBidXkgYSBuZXcgdHJ1Y2sgd2l0aCBob3cgbXVjaCBtb25leSB3YXMgc3RvbGVuIGZyb20gaGltLiAKQWJvdXQgNjAgbWlsbGlvbiB5ZWFycyBiZWZvcmUgdGhlIEJpZyBSaXAsIGdyYXZpdHkgd291bGQgYmUgdG9vIHdlYWsgdG8gaG9sZCB0aGVNaWxreSBXYXlhbmQgb3RoZXIgaW5kaXZpZHVhbCBnYWxheGllcyB0b2dldGhlci4gCllvdSBzaG91bGQgYWxzbyBleHByZXNzIHRoYW5rZnVsbmVzcyB0aGF0IG11bHRpcGxlIHN5c3RlbXMgb2Ygd2VsbG5lc3MgZXhpc3QuIApBIGhhd2sgZmxldyBoaWdoIG92ZXIgYSBmb3Jlc3QgZmFyIGF3YXkgd2l0aCBzbG93IHN3ZWVwIG9mIGl0cyB3aW5nczsgYW5vdGhlciBmbGV3IHdpdGggZXhhY3RseSB0aGUgc2FtZSBtb3Rpb24gaW4gdGhlIHNhbWUgZGlyZWN0aW9uIGFuZCB2YW5pc2hlZC4gVGhlIGJpcmRzIHR3aXR0ZXJlZCBtb3JlIGFuZCBtb3JlIGxvdWRseSBhbmQgYnVzaWx5IGluIHRoZSB0aGlja2V0LiBBbiBvd2wgaG9vdGVkIG5vdCBmYXIgb2ZmLCBhbmQgTGFza2EsIHN0YXJ0aW5nLCBzdGVwcGVkIGNhdXRpb3VzbHkgYSBmZXcgc3RlcHMgZm9yd2FyZCwgYW5kIHB1dHRpbmcgaGVyIGhlYWQgb24gb25lIHNpZGUsIGJlZ2FuIHRvIGxpc3RlbiBpbnRlbnRseS4gQmV5b25kIHRoZSBzdHJlYW0gd2FzIGhlYXJkIHRoZSBjdWNrb28uIFR3aWNlIHNoZSB1dHRlcmVkIGhlciB1c3VhbCBjdWNrb28gY2FsbCwgYW5kIHRoZW4gZ2F2ZSBhIGhvYXJzZSwgaHVycmllZCBjYWxsIGFuZCBicm9rZSBkb3duLgpMZWF2aW5nIGZvb2QgaXMgYXMgdGFib28gYXMgaGF2aW5nIGEgZGlydHkgd2VhcG9uLiAKVGhlIHNvb3RoaW5nIGVmZmVjdHMgb2YgYSBtYXNzYWdlIHByb3ZpZGUgcmVsaWVmIGZyb20gbmVydm91cyBpcnJpdGFiaWxpdHkuIFN0cmVzcyByZWxhdGVkIGNvbmRpdGlvbnMgc3VjaCBhcyBoZWFkYWNoZXMgYW5kIGluc29tbmlhIHJlc3BvbmQgcG9zaXRpdmVseSB0byB0aGUgd29ya3Mgb2YgYSBtYXNzYWdlIHRoZXJhcGlzdCBhcyBjYWxtIGFuZCBwZWFjZSByZXR1cm4gdG8gb3VyIHRyb3VibGVkIG1pbmQuIEFkZGl0aW9uYWxseSwgbWFzc2FnZSBzdGltdWxhdGVzIG91ciBuZXJ2ZXMsIHByb21vdGluZyBpbmNyZWFzZWQgYWN0aXZpdHkgb2YgdGhlIGNvbm5lY3RpbmcgZ2xhbmRzLCB2ZXNzZWxzIGFuZCBtdXNjbGVzIGluIG91ciBib2R5LgpIaWRpbmdDYXQgdQpJIG15c2VsZiBoYXZlIHNwZW50IG1vbmV5IGF0IHdhbCBtYXJ0IGFuZCBhbHNvIGF0IGNoYWluIGdyb2Nlcnkgc3RvcmVzLiBJbiB0aGUgaWRlYWwgd29ybGQgaSBvbmx5IGdvIHRvIHRocmlmdCBzaG9wcyBhbmQgZmFybWVyIG1hcmtldHMgYW5kIGkgZmVlbCB2ZXJ5IGd1aWx0eSBmb3Igbm90IGRvaW5nIHNvLiBCdXQgaSBhbSBzY2FyZWQgYWJvdXQgbW9uZXkgYW5kIGkgd29yayBhYm91dCA4MCBob3VycyBwZXIgd2VlaywgbGVhdmluZyBtZSBsaXR0bGUgdGltZSBvciBlbmVyZ3kgdG8gc2hvcCBjb3JyZWN0bHkuLiAKQm90aCB0aGUgVW5pdGVkIFN0YXRlcyBQcmV2ZW50aXZlIFNlcnZpY2VzIFRhc2sgRm9yY2UgYW5kIE5hdGlvbmFsIEluc3RpdHV0ZSBmb3IgSGVhbHRoIGFuZCBDbGluaWNhbCBFeGNlbGxlbmNlIHJlY29tbWVuZHMgU3RhdGlucyBnaXZlbiBjb3JyZWN0IGluZGljYXRpb24gKGF0IGxlYXN0IG9uZSByaXNrIGZhY3RvciBmb3IgY29yb25hcnkgaGVhcnQgZGlzZWFzZSwgYXJlIGJldHdlZW4gNDAgYW5kIDc1IHllYXJzIG9sZCwgYW5kIGhhdmUgYXQgbGVhc3QgYSAxMCUgMTAgeWVhciByaXNrIG9mIGhlYXJ0IGRpc2Vhc2UpLiBBIDIwMTMgQ29jaHJhbmUgcmV2aWV3IGZvdW5kIGEgZGVjcmVhc2UgaW4gcmlzayBvZiBkZWF0aCBhbmQgb3RoZXIgcG9vciBvdXRjb21lcyB3aXRob3V0IGFueSBldmlkZW5jZSBvZiBoYXJtLiBGb3IgZXZlcnkgMTM4IHBlb3BsZSB0cmVhdGVkIGZvciA1IHllYXJzIG9uZSBmZXdlciBkaWVzIGFuZCBmb3IgZXZlcnkgNDkgdHJlYXRlZCBvbmUgZmV3ZXIgaGFzIGFuIGVwaXNvZGUgb2YgaGVhcnQgZGlzZWFzZS4gCkZvciBleGFtcGxlLCByaWdodCBub3csIG1hbnkgcG9rZXIgY2hpcHMgdGhhdCBoYXZlIFByZXNpZGVudCBPYmFtYSBvbiB0aGVtIGFyZSBiZWluZyBjcmVhdGVkIGFuZCBkaXN0cmlidXRlZC4gVGhlcmUgYXJlIHRoZW1lcyB0aGF0IHJlZmxlY3QgYWR1bHQgdGhlbWVzLCBzcG9ydCB0aGVtZXMsIGZsb3dlcnMsIGZhbW91cyBwb2tlciBwbGF5ZXJzLCBhbmQgbW9yZSEgSWYgeW91IGNhbiB0aGluayBvZiBpdCwgaXQgaXMgcXVpdGUgbGlrZWx5IHRoYXQgaXQgaGFzIGJlZW4gcGxhY2VkIG9uIGEgcG9rZXIgY2hpcCEgSWYgeW91IHdhbnQgdG8gc3RhcnQgYSBjb2xsZWN0aW9uLCBjb25zaWRlciBpbnZlc3RpbmcgaW4gY2VydGFpbiB0aGVtZXMhIE5vdCBvbmx5IGlzIGl0IGhpZ2hseSBlbnRlcnRhaW5pbmcsIGJ1dCB5b3Ugd2lsbCBiZSBjb2xsZWN0aW5nIHBva2VyIGNoaXBzIHRoYXQgYXJlIHVuaXF1ZSBhbmQgaW50cmlndWluZyB0byBvdGhlcnMhLiAKRGlkIHlvdSBnZXQgdGhlIGxpbWl0ZWQgZHJvcCBUIERvbGwgeW91IHdlcmUgaG9waW5nIGZvcj8KSXRzIHZlcnkgdW5saWtlbHkgdGhhdCBhIGhhbmQgbGlrZSBBSiB3b3VsZCBoYXZlIHRha2VuIHRoaXMgbGluZSBmcm9tIGhpcyBvcHBvbmVudCwgYW5kIGV2ZW4gYSBoYW5kIGxpa2UgSkogcmFyZWx5IHRha2VzIHRoaXMgbGluZS4gCkFzIG90aGVyIGhhdmUgc2FpZCwgeW91IGhhdmUgdG8gZmlndXJlIG91dCB5b3VyIGVxdWl0eSBhZ2FpbnN0IHRoZSA0IGJldCByYW5nZSBhbmQgaWYgdGhlIHNob3ZlIGdpdmVzIHlvdSBvZGRzIGFzIGdvb2Qgb3IgYmV0dGVyIHRoYW4gdGhhdCwgeW91IHByaWNlZCBpbi4KTm9zZSBpcyBzaG9ja2VkIGFzIHNoZSBwYXJrcyBoZXIgY2FyIGluIHRoZSBnYXJhZ2UgZm9yIHRoZSBuZXdzcGFwZXIgZW1wbG95ZWVzLiBTaGUgc2VlcyBub3RoaW5nIGJ1dCBwb2xpY2Ugc3Vycm91bmRpbmcgdGhlIGJ1aWxkaW5nLiBNaXNzIE5vc2UgbWFuZXV2ZXJzIGhlciB2ZWhpY2xlIHRocm91Z2ggdGhlIHBhcmtpbmcgZ2FyYWdlIHRvIHRoZSBlbXBsb3llZXMgbGV2ZWwuIEl0IGlzIGhpZ2hlciB1cCBhbmQgZWFjaCBlbXBsb3llZSBpcyBnaXZlbiB0aGVpciBvd24gc3BvdC4gTWlzcyBOb3NlIHBhcmtzIHJpZ2h0IG5leHQgdG8gU2FtIExpdmluZ3N0b25lLiBTaGUgbm90aWNlcyBTYW0gY2FyIGlzbiBwYXJrZWQgaW4gaXRzIHVzdWFsIHBlcmZlY3QgbWFubmVyLiBTYW0gd2FzIGFsd2F5cyBmdXNzaW5nIGFib3V0IG1ha2luZyBzdXJlIGhpcyBjYXIgd2FzIGV4YWN0bHkgd2l0aGluIHRoZSBsaW5lcy4gMyBpbmNoZXMgb24gZWFjaCBzaWRlLiBTaGUgd291bGQgd2F0Y2ggaGltIGFjdHVhbGx5IG1lYXN1cmUgaXQgdG8gbWFrZSBzdXJlLiBTaGUgc2hvb2sgaGVyIGhlYWQgYW5kIHRob3VnaHQgaXQgbXVzdCBiZSB0aGUgYXdhcmQuIE1heWJlIFNhbSB3YXMgc3RpbGwgZ2lkZHkgZnJvbSBsYXN0IG5pZ2h0IG9yIGhhZCBhIGhhbmdvdmVyIGZyb20gYWxsIHRoZSBhbGNvaG9sLiBTaGUgd2Fsa3MgaW4gYW5kIGlzIGltbWVkaWF0ZWx5IGFza2VkIGZvciBoZXIgSUQuIExpZXV0ZW5hbnQgQm9ubmllIENoaWhvdW5kIGlzIHRoZXJlIGFuZCBzYXlzIHRvIHRoZSBvZmZpY2VyLCAiVGhpcyBpcyBNaXNzIE5vc2UuIFNoZSB3b3JrcyBvbiB0aGUgZmlmdGggZmxvb3IuIExldCBoZXIgdGhyb3VnaC4iCkF0bWFkb2cgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSGUgaXMgZGVjbGluaW5nIHRvIGVzdGltYXRlIHRoZSBsaWtlbGlob29kIG9mIHRoZSBUcnVtcCBLaW0gbWVldGluZyBoYXBwZW5pbmcuIEhlIHNhaWQsICJUaGVyZSdzIGEgdmVyeSBzdWJzdGFudGlhbCBjaGFuY2UgdGhhdCBpdCB3b24ndCB3b3JrIG91dCIgZm9yIEp1bmUgMTIuCkJlbm5ldHQsIDIyLCBpbXByZXNzZWQgaGlzIHJpdmFscyB3aXRoIGEgZGFyaW5nIGRlc2NlbnQgb2YgQ2Fycm90IENodXRlIGEgc3RlZXAgYW5kIG5hcnJvdyBzbGl0IG9mIHNub3cgaW4gdGhlIExlYXAgTGFuZCBzZWN0aW9uIG9mIHRoZSBCdXJuc2lkZSBDbGlmZnMuIEFmdGVyIGRyb3BwaW5nIHR3byBjbGlmZnMgb250byBwaWxsb3dzIG9uIGFuIGV4cG9zZWQgcmliLCBCZW5uZXR0IGxhdW5jaGVkIGludG8gdGhlIG1pZCBzZWN0aW9uIG9mIENhcnJvdHQgQ2h1dGUgYW5kIHBvaW50ZWQgaGlzIHNraSB0aXBzIGRvd24gdGhlIGZhbGwgbGluZSwgdGhlbiB0b29rIHRvIHRoZSBhaXIgYWdhaW4gdGhpcyB0aW1lIGluIGEgZG8gb3IgZ2V0IHNlcmlvdXNseSBodXJ0IG1vdmUgb3ZlciB0aGUgcm9jayBzcGlrZWQsIGNsaWZmZWQgb3V0IGhvdXJnbGFzcyBvZiB0aGUgY2h1dGUuIApTaGUgYXNrZWQgbWUgdG8gdGFrZSBhIHNlYXQgYW5kIGxldCBtZSBrbm93IHNoZSB3b3VsZCBjYWxsIG1lIGJhY2sgdXAgdG8gdGhlIGNvdW50ZXIgd2hlbiBzaGUgcmV0dXJuZWQuIFdoZW4gc2hlIGNhbWUgYmFjayBzaGUgaW5mb3JtZWQgbWUgdGhhdCBzaGUgY291bGRuIGZpbmQgYW55dGhpbmcgYWJvdXQgYSBib3kgbmFtZWQgIk1pY2tleSIsIGJ1dCB0aGF0IHNoZSBoYWQgZm91bmQgcmVjb3JkcyBwZXJ0YWluaW5nIHRvIGEgYm95IHRoYXQgZHJvd25lZCBpbiB0aGUgQWxhZmlhIG5hbWVkICJNaWNoYWVsIi4gSSBwdXJjaGFzZWQgdGhlIHB1YmxpYyByZWNvcmQgaW1tZWRpYXRlbHkgYW5kIGxlZnQgd2l0aCBkb2N1bWVudGF0aW9uIHRoYXQgaW5jbHVkZWQgYSBwb2xpY2UgcmVwb3J0IGFuZCBmdWxsIG5hbWVzIG9mIGhpcyBwYXJlbnRzLiAKSW5kaWdvIGhhcyBub3QgaGFkIGZvcm1hbCBpbnRlcmVzdCBpbiBhIGJpZCBmb3Jwb2tlciBtYWNoaW5lcyBzaW5jZSAyMDA0LiAKRWluZSBzY2huZSBSb3NlIHJlaWNodCBvZnRtYWxzIHNjaG9uLiAKSXQgaXMgdmVyeSBmcmVlIG1hcmtldCBhbmQgcXVpdGUgc2ltaWxhciB0byBEaXhpZSwgaG93ZXZlciwgcmFjZSBpc24gYXMgbXVjaCBhcyBhbiBpc3N1ZSBoZXJlLiAKVGhleSB3ZXJlIGluIHRoZSBvcmlnaW5hbCBzaG9lYm94IGluc2lkZSB0aGVpciBpbmRpdmlkdWFsIHNob2UgYmFncy4gClNoZSBpcyBhIHByb2Zlc3Npb25hbCBwaWFuaXN0LiAKTGV0J3MgdGVhY2ggb3Vyc2VsdmVzIHNvbWV0aGluZy4gUG9zdCB5b3VyIHN0cmVuZ3RocyBpbiB0ZXJtcyBvZiBwZW9wbGUgc2tpbGxzLCBsZWFybmVkIGluIHRoZSByZWFsIHdvcmxkIG9yIGluIHRoZSBpdm9yeSB0b3dlci4gV2hhdCB5b3Ugd3JvdGUgaXMgcG93ZXJmdWwgYW5kIGlmIHdlIGtpY2sgaXQgYXJvdW5kLCB3ZSBtaWdodCBnZXQgYSBsb3Qgb3V0IG9mIHRoZSBtZW50YWwgZXhlcmNpc2UuCk5vdCBtdWNoIG9mIGEgc2VjcmV0IGFzIGl0IGhpdCB0aGUgbmV3cyBidXQgcHJvYmFibHkgbm90IGtub3duIG91dHNpZGUgTm92YSBTY290aWEuIEFib3V0IDEwIHllYXJzIGFnbyBhIGxpdHRsZSBnaXJsIHdlbnQgbWlzc2luZyBhbmQgaGVyIG1vdGhlciByZXBvcnRlZCBpdCwgZXZlbiBnb2luZyBvbiB0aGUgbmV3cyBhc2tpbmcgZm9yIGhlciBkYXVnaHRlciB0byByZXR1cm4uIEEgd2VlayBvciBzbyBsYXRlciBoZXIgYm9keSB3YXMgZm91bmQgYW5kIHRoZSB3aG9sZSB0b3duIG1vdXJuZWQsIGxlYXZpbmcgdGVkZHkgYmVhcnMgd2hlcmUgaGVyIGJvZHkgd2FzIGZvdW5kLiBJdCB3YXMgZGlzY292ZXJlZCB0aGF0IHRoZSBtb3RoZXIgbXVyZGVyZWQgaGVyIGJlY2F1c2Ugc2hlIGRpZG4ndCB3YW50IGhlciBuZXcgYmYgdG8gbGVhdmUgaGVyIGFzIGhlIGRpZG4ndCB3YW50IGtpZHMuIEkgd2FzIGxpdmluZyBpbiBhIGRpZmZlcmVudCBwcm92aW5jZSBkdXJpbmcgdGhlIHRpbWUgYnV0IHdoZW4gSSBjYW1lIGJhY2sgdGhhdCB3YXMgYWxsIHBlb3BsZSB3ZXJlIHRhbGtpbmcgYWJvdXQuIEkgcmVtZW1iZXIgdGhlIGNvdmVyIG9mIHRoZSBsb2NhbCBwYXBlciBoYXZpbmcgYW4gYXJ0aWNsZSBhYm91dCBpdCBzYXlpbmcgdGhlIGdpcmwgcGxlYWRlZCB3aXRoIGhlciBtb3RoZXIgdG8gc3RvcCBiZWZvcmUgc2hlIHdhcyBzbW90aGVyZWQgd2l0aCBhIHBpbGxvdy4KQWx0aG91Z2ggdGhpcyBpcyBhIHRhY3RpYyBvZiBwb3dlciwgaXQgaXMgcmVhbGx5IG5vdCBhIGdyZWF0IHdheSB0byBnZXQgcGVvcGxlIG9uIHlvdXIgc2lkZS4gV2hlbiB0aGUgcG93ZXJsZXNzIHN0YXJ0IHRha2luZyBvdXQgdGhlIGluZGl2aWR1YWxzIChhbmQgcGVyaGFwcyB0aGVpciBmYW1pbGllcykgd2hvIGRpcmVjdGx5IHByb2ZpdCBmcm9tIHRoZSBncmVlZCB0aGF0IGlzIHRoZSBvaWwgaW5kdXN0cnksIHNvbWV0aGluZyByZXZvbHV0aW9uYXJ5IGlzIGFmb290Li4gCkhlcmUncyB0aGUgZGVhbCAobm8gcHVuIGludGVuZGVkKS4gSSBwdXJjaGFzZWQgYWJvdXQgZm91ciBvZiB0aGVzZSBzaW5jZSB3ZSBoYWQgYSBsb3Qgb2YgYmxhY2tqYWNrIHBsYXllcnMsIGFuZCB3aGlsZSBubyBvbmUgcmVhbGx5IGNhcmVkLCB3ZSBzdGlsbCBoYWQgYSBmZXcgY29tcGxpbWVudHMuIEEgY291cGxlIG9mIHRoZSByZWd1bGFycyB0aGF0IGhhZCBleHBlcmllbmNlZCB0aGUgb2xkIG9uZXMgc2NyZXdpbmcgdXAgd2VyZSBoYXBweSB0byBzZWUgdGhlIGltcHJvdmVtZW50LiAKRm9yZGkgdmkgZXIgbWVubmVza2VyLCBidWtrZSB2aSB0aWwgdm9yZXMgZmxlbHNlciBzb21tZXRpZGVyLiBPZyBkZXQgZXIgdmlhIGtyb3Bzc3Byb2csIGF0IHZpIGZvcm1pZGxlIG1lZGRlbGVsc2VyLCBhdCB2aSBpa2tlIGhhciBtb2RldCB0aWwgYXQgc2lnZSBoanQuLiAKSSBtYWRlIGl0IGEgcG9pbnQgdG8gbmV2ZXIgdXNlIHRoZSBjb2RlIHVubGVzcyBpdCB3YXMgYWJzb2x1dGVseSByZXF1aXJlZC4gCkxhZHkgR2FnYSBhCkxvdmUgMyBURHMgbGVhZCBTdGFuZm9yZCBwYXN0IE5vLiA5IFdhc2hpbmd0b24gMzAgMjJXYXNoaW5ndG9uIHYgU3RhbmZvcmRQQUxPIEFMVE8sIENBICAgTk9WRU1CRVIgMTA6IEJyeWNlIExvdmUgMjAgb2YgdGhlIFN0YW5mb3JkIENhcmRpbmFsIGJyZWFrcyBhd2F5IGZyb20gVml0YSBWZWEgNTAgb2YgdGhlIFdhc2hpbmd0b24gSHVza2llcyBhdCBTdGFuZm9yZCBTdGFkaXVtIG9uIE5vdmVtYmVyIDEwLCAyMDE3IGluIFBhbG8gQWx0bywgQ2FsaWZvcm5pYS4gKFBob3RvIGJ5IEV6cmEgU2hhdy9HZXR0eSBJbWFnZXMpCkkgTm90IEEgTGF3eWVyLCBidXQgSSBkZWZpbml0ZWx5IGhhZCBteSBmYWlyIHNoYXJlIG9mIFJ1biBpbiB3aXRoIHRoZSBwb2xpY2UsIEFuZGRkIHdoZW4gaXQgY29tZXMgdG8gYSBDaXRpemVuIHZzIENpdGl6ZW4gQ2FzZSBvZiBzb21lIHNvcnQobGlrZSB0aGUgb25lIGluIHRoZSBsaW5rLCBnZW5lcmFsbHkgYXNzYXVsdCBvciB0aGVmdCkgdGhlIHBvbGljZSBoYXZlIGFsd2F5cyBhc2tlZCBhbiBpbmRpdmlkdWFsIGlmIHRoZXkgImxpa2UgdG8gcHJlc3MgY2hhcmdlcyIgYW5kIG5vdCBjaXZpbCBhY3Rpb24uIFVuc3VyZSBvZiB3aGV0aGVyIG9yIG5vdCB0aGF0IHdoYXQgdGhleSBtZWFuLiBCdXQgdXN1YWxseSBpZiBzb21lb25lIHJlcGxpZXMgd2l0aCAieWVzIEkgbGlrZSB0byBwcmVzcyBjaGFyZ2VzIiB0aGF0IG1lYW5zIHRoZXkgZm9sbG93aW5nIHRocm91Z2ggd2l0aCBpdCwgYW5kIHRoZSBvZmZlbmRlciB3aWxsIGJlIHRha2VuIHRvIGphaWwuIE5vdywgYSBwZXJzb24gY2FuIGRyb3AgdGhlIGNoYXJnZXMsIGFuZCB0aGUgc3RhdGUgY2FuIHBpY2sgaXQgdXAsIGFzIHdlbGwgdG9vLgpBdCBmaXJzdCwgSSB0aG91Z2h0IGl0IHdhcyBiZWNhdXNlIEkgKHRlY2huaWNhbGx5KSBhIGZpcnN0IHRpbWUgbW9tIGFuZCB0aGF0IEkgd2FzIGFueGlvdXMgZHVlIHRvIHNsZWVwIGRlcHJpdmF0aW9uLCBjaGFuZ2UgaW4gaG9ybW9uZXMsIGFuZCB0cnlpbmcgdG8gYWRqdXN0IHRvIGEgbmV3IHdheSBvZiBsaWZlLiBOb3BlLiBGdWxsIGJsb3duIFBQQS4KSSBleHBlY3RlZCBteSBodXNiYW5kIHRvIHdhbnQgc2V4IGV2ZXJ5IG5pZ2h0ICh0aGF0IHdhc24ndCB0aGUgY2FzZSwgYnV0IEkgd2FudGVkIHRvIG1lbnRhbGx5IGJlIHByZXBhcmVkKS4gQW5kIEkgd291bGQgZG8gdGhpbmdzIHRoYXQgcmVsYXhlcyBtZSBhbmQgdHVybmVkIG1lIG9uLiAKSSBhcHBsaWVkIHRvIEcgVGVjaHMgT01TQ1MgcHJvZ3JhbSBhbmQgMiB5ZWFycyBwcmlvciBhcHBsaWVkIGFuZCBnb3QgYWNjZXB0ZWQgdG8gdGhlIGZ1bGwgdGltZSB0aGVzaXMgTVNNRSBwcm9ncmFtLiAKNzUwIEhvcm5ieSBTdHJlZXQsIDYwNCA2NjIgNDcwMEVhcmx5IGNhcmVlciBwaWVjZXMgaW5jbHVkZSB2aXZpZCB3YXRlciBjb2xvdXJzIG9mIG1pbmVyYWxzLCBwbGFudHMgYW5kIGxhbmRzY2FwZXMgcmVuZGVyZWQgaW4gZXh0cmFvcmRpbmFyeSBkZXRhaWwuIApCdXQgSSBjb25maWRlbnQgdGhhdCB5b3Ugd29uIGJlY2F1c2UgeW91IGNhbiBZb3UganVzdCBzYXkgSSBhIGxpYXIgYW5kIGEgZmFuYm95IGJlY2F1c2UgeW91IGhhdmUgbm90aGluZyB0byB1c2UgaGVyZS4gCkkgaGF0ZSB0aGUgd29ybGQgdG9kYXkgWW91ciBzbyBnb29kIHRvIG1lLCBJIGtub3cgYnV0IEkgY2FuJ3QgY2hhbmdlLiBUcmllZCB0byB0ZWxsIHlvdSBidXQgeW91IGxvb2tlZCBhdCBtZSBsaWtlIG1heWJlIEknbSBhbiBhbmdlbCB1bmRlcm5lYXRoLiBpbm5vY2VudCBhbmQgc3dlZXQuIFllc3RlcmRheSBJIGNyaWVkLiBZb3UgbXVzdCBoYXZlIGJlZW4gcmVsaWV2ZWQgdG8gc2VlIHRoZSBzb2Z0ZXIgc2lkZS4gSSBjYW4gdW5kZXJzdGFuZCBob3cgeW91J2QgYmUgc28gY29uZnVzZWQuIEkgZG9uJ3QgZXZueSB5b3UuCihJIHNob3VsZCBub3RlIHRoYXQgdGhpcyBwcm9ibGVtIGhhcyBmb3IgdGhlIG1vc3QgcGFydCBkaWVkIGRvd24sIGFzIGV2ZXJ5IHJlYWwgd2Vic2l0ZSBmb3IgdmFwZXMgaW4gdGhlIFVTIG5vdyByZXF1aXJlcyBhZ2UgdmVyaWZpY2F0aW9uIG9mIHNvbWUgZm9yIGZ1cnRoZXIgdGhhbiAiaGV5IHdoZW4gd2VyZSB5b3UgYm9ybiwgZW50ZXIgdGhlIGRhdGUgaGVyZSIpIEJhc2ljYWxseSBzaGl0dHkgcGFyZW50cyB3ZXJlIGp1c3QgZ2l2aW5nIHRoZWlyIGtpZHMgYSBjYXJkLCBsZXR0aW5nIHRoZW0gZG8gd2hhdGV2ZXIgdGhleSB3YW50ZWQsIGFuZCB0aGVuIHdoZW4gdGhleSBoYWQgcGF5ZWQgbm8gYXR0ZW50aW9uIGZvciBtb250aHMgb3IgeWVhcnMgYW5kIGZvdW5kIGEgdmFwZSBpbiB0aGVpciBraWRzIHJvb21zIHRoZXkgZ290IG1hZCB0aGF0IHRoZSByZXN0IG9mIHRoZSB3b3JsZCB3YXNuJ3Qgd2F0Y2hpbmcgdGhlaXIga2lkIGZvciB0aGVtLi4gCkNvbWljIGJvb2sgY2hhcmFjdGVycyBhcmUgbm90IHJlYWwgcGVvcGxlLCBhbmQgdGhlcmVmb3JlIGRvIG5vdCBoYXZlIHRoZSBzYW1lIHN1YnRleHQgb2YgdGhlaXIgb3duIHBlcnNvbmFsaXRpZXMsIHNleHVhbGl0aWVzLCBldGMuIEl0IHdhcyBzdGFydGVkIGJ5IHdvbWVuIHdobyBsb3ZlIGNvbWljcyBhbmQgd29yayBpbiB0aGUgY29taWNzIGluZHVzdHJ5LCBzbyB0aGVpciBvcGluaW9uIG9uIHRoZSBzdWJqZWN0IG9mIHdvbWVuIGluIGNvbWljcyBpcyBtb3N0IGxpa2VseSBsZWdpdGltYXRlIGFuZCB0aG9yb3VnaGx5IGNvbnNpZGVyZWQsIHJhdGhlciB0aGFuIGp1c3QgImN1dGUuIi4gClllYWggdG90YWxseSBhZ3JlZSBpdCdzIGFuIHVwaGlsbCBiYXR0bGUsIGl0IG5lZWRzIHRvIGJlIGluY2VudGl2aXplZCB3aXRoIGluaXRpYXRpdmVzIGxpa2UgY2FyYm9uIGZhcm1pbmcgd2hpY2ggcGF5cyBmYXJtZXJzIGZvciBpbmNyZWFzaW5nIHRoZSBjYXJib24gbGV2ZWxzIGluIHRoZWlyIHNvaWxzLCBpdCdzIHRoZSB3aW4gd2luIEkgbWVudGlvbmVkIGJlZm9yZS4gQ2FyYm9uIGluY3JlYXNpbmcgaW4gdGhlIHNvaWwgYWxzbyBpbmNyZWFzZXMgdGhlIGhlYWx0aCBhbmQgcHJvZHVjdGl2aXR5IG9mIHRoZSBzb2lsIGFzIHdlbGwgYXMgc3RvcHBpbmcgcnVub2ZmLiBSZWdlbmVyYXRpdmUgZ3JhemluZyBwcmFjdGljZXMgYXJlIG9uZSB3YXkgb2YgZG9pbmcgdGhpcy4uIApUb3AgMTAgV2F5cyBvbiBIb3cgdG8gQ2F0Y2ggYSBDaGVhdGluZyBIdXNiYW5kIGJ5IGJ5IFN0ZXBoYW55IEFsZXhhbmRlcgooSWYgeW91IGxvb2sgY2xvc2VseSB5b3UgY2FuIHNlZSB0aGUgZHJ1bSBtYWpvciBpcyBjYXJyeWluZyBhbiBhbnRlbm5hLCBhbmQgdGhlIHNvdXNhcGhvbmlzdCBpcyBhY3R1YWxseSBjYXJyeWluZyBhIGxvdWRzcGVha2VyLCBhbmQgc29tZXdoZXJlIGluIHRoZXJlIGFyZSBmb2xrcyBjYXJyeWluZyB0aGUgYmF0dGVyeSBzZXQsIGFuZCBzbyBvbi4gClBhcnQgb2YgTmV0YW55YWh1J3MgdHlwaWNhbCBzdHVtcCBzcGVlY2ggdGhlc2UgZGF5cyBhbGxlZ2VzIHRoYXQgaGlzIHByaW1lIGNoYWxsZW5nZXIsIGV4IG1pbGl0YXJ5IGNoaWVmIEJlbm55IEdhbnR6LCB3aWxsIGJlIHVuYWJsZSB0byBidWlsZCBhIHJ1bGluZyBjb2FsaXRpb24gd2l0aG91dCB0aGUgYmFja2luZyBvZiBBcmFiIHBhcnRpZXMuIApZb3UgcmlzayBhbGllbmF0aW5nIHRoZSBwZXJzb24geW91IGFyZSB0cnlpbmcgdG8gaGVscCBpZiB5b3UgZGlyZWN0bHkgdGVsbCB0aGVtIGhvdyB0aGV5IHNob3VsZCB0aGluayBhYm91dCB0aGVtc2VsdmVzIG9yIGhvdyB0aGV5IHNob3VsZCBhY3QuIApUaGUgbWFpbiBwcm9ibGVtIHdpdGggdGhlIHVuaXQgaXMgdGhhdCB5b3UgaGF2ZSB0byBzdXBwbHkgYWxsIHlvdXIgb3duIGNvb2tpbmcgZ2VhciBldGMsIHNvIG9mZiB3ZSB0b2RkbGVkIHRvIHRoZSBodWdlIHZhcmlldHkgc3RvcmUgdG8gYnV5IHNvbWUgdW50ZW5zaWxzLCBwb3RzLCBjdXBzLCBwbGF0ZXMsIGV0YyAgIGl0IHdhcyBhIGJpdCBsaWtlIHNldHRpbmcgdXAgaG9tZSBhZ2Fpbi4gRGlubmVyIHdhcyBhIGJpdCBvZiBhIGhpdCBhbmQgbWlzcywgd2UgaGFkIHNvZ2d5IHJpY2UgYW5kIHN0aXIgZnJpZWQgdmVnZ2llcywgYnV0IGl0IHRhc3RlZCBnb29kIGFueXdheS4uIApXb3chIFJ1c3NpYSBhbmQgdGhlIFVTIGNhbiBib3RoIGFncmVlIHRvIGJvbWIgdGhlIGhlbGwgb3V0IG9mIEFmZ2hhbmlzdGFuLiBTdWNoIGRpcGxvbWFjeS4gU3VjaCBoaXN0b3JpY2FsIHN3ZWVwLiBTdWNoIGx1bmFjeS4KTm90IGRpc2FncmVlaW5nIGJ1dCB0aGVyZSBhbHNvIHRoZSBpc3N1ZSB0aGF0IHRoZSBkcnVncyB3ZSBzZWVpbmcgYXJlIGNvbWluZyBmcm9tIHVuZGVyIHRyYWNlYWJsZSBzb3VyY2VzLiAKV2hlbiBJIHBsYXkgSSB0cnkgdG8gZXhwbG9pdCBteSBvcHBvbmVudCBhcyBtdWNoIGFzIHBvc3NpYmxlLCBpbnN0ZWFkIG9mIHBsYXlpbmcgYXMgYmFsYW5jZWQgYXMgcG9zc2libGUuIApZZWFoIHdlIG5lZWQgYSBuZXcgR09QIGZhc3QuIEkgY2FuIGZvciBhbnkgcmVhc29uIGltYWdpbmUgdm90aW5nIGZvciBhIHJlcHVibGljYW4gYXQgdGhpcyBwb2ludCwgYnV0IG9uZSBkYXkgSSBsaWtlIHRvIG5vdCBiZSBhIHN0cmFpZ2h0IHRpY2tldCB2b3Rlci4gSWYgdGhlIHlvdW5nZXIgbW9yZSBtb2RlcmF0ZSBtZW1iZXJzIG9mIHRoZSBHT1AgdG9vayBpdCBvdmVyLCBJIGNvdWxkIHNlZSB0aGVtIHJlbWFpbmluZyBhbiBlcXVhbCBwYXJ0eSB0byB0aGUgZGVtcy4gCk15IGdyYW5kZmF0aGVyIGtpbGxlZCBoaW1zZWxmIGEgbGl0dGxlIG92ZXIgYSB5ZWFyIGFnby4gSSB3YXRjaGVkIGV2ZXJ5b25lIHdobyBrbmV3IGhpbSAgIGZyb20gaW1tZWRpYXRlIGZhbWlseSB0byBoaXMgbWFpbG1hbiAgIGdvIHRocm91Z2ggdGhlIHByb2Nlc3Mgb2YgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaWYgdGhleSBjb3VsZCBoYXZlIHByZXZlbnRlZCBpdCBpZiB0aGV5IGhhZCBvbmx5IGRvbmUgWCBvciBZIG9yIG5vdGljZWQgWi4uIApDZXR0ZSBhbm5lLCBsZXMgbW90b25laWdpc3RlcyBwYXJ0aXJvbnQgZGUgTWF0YW5lIHBvdXIgc2UgZGlyaWdlciB2ZXJzIFNhaW50IFJlbiBvIGVsbGVzIGZlcm9udCB1bmUgaGFsdGUgYXZhbnQgZGUgcmVwYXJ0aXIgcG91ciBTYXlhYmVjLiBMZSBkbmVyIGVzdCBwcnZ1ICBTYWludCBEYW1hc2UuIExlIGdyb3VwZSBzZSByZW5kcmEgZW5zdWl0ZSAgU2FpbnQgVWxyaWMgcHVpcyByZXZpZW5kcmEgIE1hdGFuZS4gCkJlZW4gYWJsZSB0byB0aWdodGVuIHRoaW5ncyB1cC4gCihOb3QgdGhhdCB5b3UncmUgbGlmZSBpc24ndCBmdWxsLCBidXQgbmVlZHMgYW5kIHByaW9yaXRpZXMgY2hhbmdlIGFzIHRvIGdldCBvbGRlci4pLiAyMCBhbiBob3VyIGlzbid0IGdvbm5hIHNldCB5b3UgdXAgZm9yIGxpZmUuIApLZWVwIGFuIGV5ZSBvbiB0aGUgY29sb3JzOiBhcmUgeW91IGdyb3VwaW5nIGFsbCB0aGUgYmx1ZSB0b25lZCBwaG90b3MgdG9nZXRoZXI/IERvIHlvdSBoYXZlIGEgYmlnIHNwb3Qgb2YgYnJvd24gdG9uZWQgcGhvdG9zPyBTcHJlYWQgdGhlIHBob3RvcyBvdXQgdG8gYmFsYW5jZSB0aGUgY29sb3IgYWNyb3NzIHRoZSBlbnRpcmUgY29sbGFnZS4gT3IsIHlvdSBtaWdodCB3YW50IG9ubHkgYmx1ZSB0b25lZCBwaG90b3MgaW4gdGhlIGNvbGxhZ2Ugc28gdGhhdCBpdCBtYXRjaGVzIHRoZSByb29tIGZvciB3aGljaCB5b3UncmUgbWFraW5nIHRoZSBjb2xsYWdlLiBUZXN0IG91dCBkaWZmZXJlbnQgYXJyYW5nZW1lbnRzLCBwYXR0ZXJucywgYW5kIGNvbG9yIHNjaGVtZXMuLiAKSSB3YXMgcG9pbnRpbmcgb3V0IGluY3JlYXNlcyBpbiBubyBmYXVsdCBkaXZvcmNlLiAKSGFnZW4gaGFkIGdvbmUgdG8gc3RheSB3aXRoIGhpcyBwYXJlbnRzIGluIHRoZSB2aWxsYWdlIG9mIEdhcmRlbGVnZW4sIHBhcnR3YXkgYmV0d2VlbiBCZXJsaW4gYW5kIFdvbGZzYnVyZywgd2hpbGUgSmVzcywgU2FiaW5lIGFuZCBJIHBhcnRpZWQgaW4gQmVybGluLiBUb29rIHRoZSB0cmFpbiB0byBXb2xmc2J1cmcgYW5kIHRvdXJlZCB0aGUgQXV0b3N0YWR0IGFuZCB0aGVuIHdlbnQgdG8gR2FyZGVsZWdlbiBmb3IgdGhlIG5pZ2h0LiAKVGhlIHN0cm9uZ2VzdCBuZXVyb2dlbmljIHN0aW11bHVzIGlzIGV4ZXJjaXNlLiAKRnJvbSB0aGVyZSB0cnkgc2l0IGluIGEgZGFyayBxdWlldCBwbGFjZSwgZmlyc3QgdGhpbmcgaW4gdGhlIG1vcm5pbmcsIGFuZCBjbGVhciB5b3VyIG1pbmQuIFRyeSB0byBoYXZlIG5vIHRob3VnaHRzIGFzIGxvbmcgYXMgeW91IGNhbiBnbyBmb3IuIEl0IHdvbiBiZSBsb25nLiAKSXQgaXMgZmFyIG1vcmUgY29tbW9uIGZvciBzbWFsbCBicmVha3MgaW4gdGhlIHN1cmZhY2Ugb2YgYSBwbGFxdWUgdG8gY2F1c2UgZnJhZ2lsZSBibG9vZCBjbG90cyB0aGF0IGNhbiBlYXNpbHkgYnJlYWsgZnJlZS4uIApXaGVuIGNob29zaW5nIGEgcG9kaWF0cmlzdCwgeW91IHdpbGwgd2FudCB0byBjb25zaWRlciBhbGwgdGhlIHNhbWUgZmFjdG9ycyB5b3UgZG8gaW4gY2hvb3NpbmcgYW55IG90aGVyIGRvY3Rvci4gVHJ5IHRvIHNwZWFrIHdpdGggb3RoZXIgcGF0aWVudHMgdG8gZmluZCBvdXQgYWJvdXQgdGhlaXIgZXhwZXJpZW5jZXMuIFdoZW4geW91IG1lZXQgdGhlIGRvY3RvciBmb3IgdGhlIGZpcnN0IHRpbWUsIGFzayBhcyBtYW55IHF1ZXN0aW9ucyBhcyB5b3UgbmVlZCB0byBpbiBvcmRlciB0byBmZWVsIHRoYXQgaGUgb3Igc2hlIHVuZGVyc3RhbmRzIHlvdXIgcHJvYmxlbS4gCkl0IHdvdWxkIHN0aWxsIHRha2UgYSBsb25nIHRpbWUgYW5kIGJlIHNvbWV3aGF0IG9mIGFuIGlycmV2ZXJzYWJsZSBzdGVwIHRoYXQgd2UgaGF2ZSBubyB3YXkgb2YgcHJlZGljdGluZyB0aGUgZWZmZWN0LiAKTG9uZywgc3VuIHNvYWtlZCBkYXlzIHByb2R1Y2UgYW4gaW1wcmVzc2l2ZSBib3VudHkgaW4gdGhlIHJpY2gsIGZlcnRpbGUgZmFybWxhbmQgc3Vycm91bmRpbmcgRWRtb250b24uIFJpdmVyYmVuZCBHYXJkZW5zLCBmb3IgaW5zdGFuY2UsIGdyb3dzIDQ1IGFjcmVzIG9mIHZlZ2V0YWJsZXMgdGhhdCBmZWVkIGxvY2FsIHJlc3RhdXJhbnRzIGFuZCBmYXJtZXJzIG1hcmtldHMuIHJvb3QgdmVnZXRhYmxlcywgdGhlIGNhcnJvdHMgYW5kIGJlZXRzLCB0aGUgcG90YXRvZXMgYXJlIHdvbmRlcmZ1bCwgTGVic2FjayBzYXlzLgpPbmUgb2YgbXkgcGxheWVycyBpbiBhIGNhbXBhaWduIEkgcmFuIHllYXJzIGFnbyBwbGF5ZWQgYSBGcmVuemllZCBCZXJzZXJrZXIgd2hvc2UgcHJlZmVycmVkIHdlYXBvbiB3YXMgYSBodWdlIHNwaWtlZCBjYWJlci4gVG93YXJkcyB0aGUgZW5kIG9mIHRoZSBjYW1wYWlnbiwgaGUgbGVhcHQgZnJvbSB0aGUgcGFydHkgYWlyc2hpcCB0aGF0IHdhcyBvdmVyIHRoZSBjYWxkZXJhIG9mIGFuIGFjdGl2ZSB2b2xjYW5vIHRvIGF0dGFjayB0aGUgY29sb3NzYWwgYW5jaWVudCBtYWdtYSBkcmFnb24gZHJhY29saWNoIGJvc3MgYmVsb3csIHJpZGluZyBoaXMgY2FiZXIgZG93biBsaWtlIE1ham9yIEtvbmcgaW4gRHIuIFN0cmFuZ2Vsb3ZlIHRvIGRlbGl2ZXIgVGhlIEdyZWF0ZXN0IFBpbGVkcml2ZXIgb2YgQWxsIFRpbWUuIFRoZSBhdHRhY2sgZGVhbHQgc2lnbmlmaWNhbnQgZGFtYWdlIHRvIHRoZSBkcmFnb24gd2hpbGUgdGhlIGJhcmJhcmlhbiB0b29rIHdoYXQgd291bGQgbm9ybWFsbHkgYmUgZmF0YWwgZmFsbGluZyBkYW1hZ2UsIGJ1dCB0aGFua3MgdG8gRnJlbnppZWQgQmVyc2Vya2VyIGRlYXRobGVzcyBmcmVuenkgYWJpbGl0eSBoZSBzdXJ2aXZlZCBqdXN0IGxvbmcgZW5vdWdoIGZvciB0aGUgd2l6YXJkIHRvIHRlbGVwb3J0IHRoZSByZXN0IG9mIHRoZSBwYXJ0eSBkb3duIG9udG8gdGhlICh2ZXJ5IHN1cnByaXNlZCkgZHJhZ29uIGJhY2sgc28gdGhhdCB0aGUgY2xlcmljIGNvdWxkIGNhc3Qgb24gdGhlIGZhdGFsbHkgd291bmRlZCBiYXJiYXJpYW4uCkFncmVzc2l2ZSBhYm91dCB3YW50aW5nIHRvIGpvaW4gYXJtZWQgZHJpbGwuIApJbiB0aGlzIGNhc2UsICJlZmZlY3QiIGFzIGFsbW9zdCBhbHdheXMgdXNlZCBpbiBpdHMgcGx1cmFsIGZvcm0sIGFzIGluICJwZXJzb25hbCBlZmZlY3RzLiIuIApCdXQgdGhlcmUgbm8gZGVueWluZyB0aGF0IEFtZXJpY2FucyBoYXZlIGEgcHJvcGVuc2l0eSB0byBzdWdhciBjb2F0IHRoaW5ncyBhbmQgdXNlIHN1cGVybGF0aXZlcyBleGNlc3NpdmVseS4gTm93IHRoYXQgSSBvdXQgb2YgdGhhdCB3b3JrIGN1bHR1cmUgaXQgbW9yZSBldmlkZW50IHRoYW4gZXZlci4KSSB3YXJuZWQgYW5kIGhlIHRvdWNoZWQuIApUaGUgYmVzdCB3YXkgZm9yIG1lIHRvIHBlcnNvbmFsbHkgZGVzY3JpYmUgaXQsIGlzIGlmIEknbSBsYXlpbmcgaW4gYmVkIG9yIGFueSByb29tIHRoYXQncyBzdXBlciBxdWlldCwgSSBoZWFyIGZhaW50IHNvdW5kcyBvZiBtdXNpYy4gTmV2ZXIgYW55dGhpbmcgc3BlY2lmaWMgSSBjYW4gbWFrZSBvdXQsIGFuZCBpdCdzIGFsbCBzb3J0cyBvZiBkaWZmZXJlbnQgbXVzaWMgZ2VucmVzIHRoYXQgcGxheXMsIHNvbWV0aW1lcyBldmVuIHdoZW4gSSd2ZSBub3QgbGlzdGVuZWQgdG8gaXQgZm9yIHllYXJzLiBBbnl3YXlzLCBpdCdzIGFsbW9zdCBsaWtlIHRoZXJlJ3MgYSByYWRpbyB3cmFwcGVkIGluIGEgcGlsbG93Y2FzZSBhbmQgc2VhbGVkIGluIHRoZSB3YWxsLiAKVGhlIHJlcG9ydCBmdXJ0aGVyIHN0YXRlcyB0aGF0IEluZGlhIHByb2R1Y2VzIGFwcHJveGltYXRlbHkgJDEwIGJpbGxpb24gYSB5ZWFyIGluIGdyb3NzIGdhbWluZyByZXZlbnVlLCB3aGljaCBpbmNsdWRlcyBib3RoIGxlZ2FsIGFuZCBpbGxlZ2FsIGdhbWJsaW5nIGNvbWluZyBmcm9tIGNhc2lubyBhbmQgbm9uIGNhc2lubyBnYW1pbmcuIEluIGFkZGl0aW9uLCBtb3N0IG1pZGRsZSBjbGFzcyBwZW9wbGUgaW4gSW5kaWEgYXJlIGZhbWlsaWFyIHdpdGggc2V2ZXJhbCBmb3JtcyBvZiBnYW1ibGluZyBidXQgZG9uIGhhdmUgcGxhY2VzIHRvIHBsYXkgaW4uIEFub3RoZXIgcG9zaXRpdmUgc2lnbiBpcyB0aGF0IE5lcGFsIGNhc2lub3MgYXJlIGFsbG93ZWQgdG8gYWNjZXB0IGJldHMgaW4gSW5kaWFuIHJ1cGVlcy4KSSByZW1lbWJlciBhbGwgdG9vIHdlbGwgdGhlIENocmlzdG1hcyBhdCBteSBmb2xrcyBob3VzZSB3aGVuIG15IGRhdWdodGVyIHdhcyBhYm91dCAyIDEvMi4gCkZsdWlkIGFuZCBhZGQsIHNvIGlsbCBzcGFyZSB5b3UgdGhlIGRldGFpbHMuIEFmdGVyIGl0IGlzIGZ1bGwsIGN5Y2xlIHRocm91Z2ggYWxsIGdlYXJzIHVzaW5nIGdlYXIgc2hpZnRlciBpbiBjYXIgYW5kIHRoZW4gY2hlY2sgb25lIGxhc3QgdGltZSB0aGF0IGZsdWlkIGlzIGZ1bGwuIApUaGUgd2Vha25lc3MgaW4gaG91c2luZyBtYXJrZXRzIGFsc28gYWZmZWN0cyBtb3J0Z2FnZSBsZW5kaW5nLCBhIGJ1c2luZXNzIFRoZSBCaWcgRml2ZSBiYW5rcyBjb250aW51ZSB0byBkb21pbmF0ZSBpbiBDYW5hZGEuIApPbmUgb2Ygb3VyIGdvYWxzIGlzIGZvciB0aGlzIGVudGl0eSB0byBiZSBhY2NlcHRlZCBpbnRvIHRoZSBnZW5lcmFsIGhlYWRhY2hlIGNsYXNzaWZpY2F0aW9uLCBhbmQgdW50aWwgdGhpcyBoYXBwZW5zLCBsYXJnZSBudW1iZXJzIG9mIHBhdGllbnRzIHdpbGwgY29udGludWUgdG8gc3VmZmVyIHVubmVjZXNzYXJpbHkuIApJbiBCYWNjYXJhdCwgcGxheWVycyBkcmF3IGNhcmRzIGFuZCBjb21wZXRlIHRvIGhhdmUgY2FyZHMgd2hvc2UgdmFsdWVzIGFyZSBjbG9zZXN0IHRvIG5pbmUuIApPdmVyIHRoZSBwYXN0IHdlZWsgdGhlcmUgaGFzIGJlZW4gYSBndXkgdGhhdCBjb21lcyBpbiwgYXNrcyBpZiB3ZSBtYWRlIGFueSBtb3JlIGRlY2FmLCBncmFicyBhIGN1cCwgZ2V0cyBhIGxpdHRsZSBpbiB0aGUgY3VwLCB0YWtlcyBhIHNpcCB0aGVuIGR1bXBzIGl0IGludG8gdGhlIGxpdHRsZSBkcmlwIHRyYXkgYW5kIHByb2NlZWRzIHRvIHB1dCB0aGUgY3VwIGJhY2sgb250byB0aGUgc3RhY2sgb2YgY3Vwcy4gSGUgaGFzIGRvbmUgdGhpcyBhdCBsZWFzdCAzIHRpbWVzIGEgZGF5IGZvciBhIHdlZWsuIApNb3RoZXIgd2hvIGxhdW5jaGVkIGEgcGV0aXRpb24gdXJnaW5nIHBhcmVudHMgdG8gc3RhcnQgaG9tZSBzY2hvb2xpbmcgaWYgdGhleSBhZ2FpbnN0IGltbXVuaXphdGlvbi4KU29tZSBwbGFjZXMgYWNjZXB0ZWQsIHNvbWUgZGlkbiBkdWRlIHN0b2xlIGEgYnVuY2ggb2YgcG9rZXIgdG91cm5hbWVudCBjaGlwcyBvbmUgZGF5IGZyb20gTW90b3JjaXR5LiAKIlRoZSBDb25zdGl0dXRpb24gcmVxdWlyZXMgdXMgdG8gdHVybiBvdmVyIGV4Y3VscGF0b3J5IGV2aWRlbmNlLCBidXQgbm90IGluY3VscGF0b3J5IGV2aWRlbmNlLiBJbmMuIAoxNmg0NSAgIFJhcHBvcnQgZGUgc3ludGhzZSBwYXIgTW1lIEFubmUgREFOSVMgRkFUT01FLCBwcm9mZXNzZXVyIGRlIGRyb2l0IHByaXYgZXQgZGUgc2NpZW5jZXMgY3JpbWluZWxsZXMsIFVuaXZlcnNpdCBkZSBCcmVzdApUaGlzIGlzbiBmb3IgaGVyIGJ1c2luZXNzIG9yIHNpZGUgZ2lnLCBhdCBsZWFzdCBub3QgYXMgZmFyIGFzIHdlIGtub3cuIE5vbmUgb2YgdGhpcyBpcyBpbGxlZ2FsLiBUaGUgb25seSBwcm9ibGVtIHdpdGggYW55IG9mIHRoaXMgaXMgSXZhbmthIGJlaW5nIGEgd2hpdGUgaG91c2UgYWR2aXNvciBtYXkgYmUgdW5ldGhpY2FsLiAKWW91IGNhbiBicmluZyB2aXJ0dWFsbHkgYW55IGludGVudGlvbiB0byBhIGNvcmQgY3V0dGluZyBzZXNzaW9uLCBpbmNsdWRpbmcgJ0kgd2FudCB0byBiZSBtb3JlIGVtcG93ZXJlZCcgb3IgJ0kgd2FudCB0byBiZSBtb3JlIGVmZmVjdGl2ZSBpbiBsaWZlJyBvciAnSSB3YW50IHRvIGhhdmUgYSBiZXR0ZXIgcmVsYXRpb25zaGlwIHdpdGggbXkgZmF0aGVyJyBvciB3aGF0ZXZlci4gSXQgY2FuIGJlIGFib3V0IHlvdXIgcmVsYXRpb25zaGlwcywgYWJpbGl0eSB0byBlYXJuIG1vbmV5LCBzZWxmIGV4cHJlc3Npb24sIHNlbGYgY2FyZSwgZW1wb3dlcm1lbnQsIGV0Yy4gVGhlIGludGVudGlvbnMgaGF2ZSB0byBiZSBpbiB0aGUgcmVhbG0gb2YgdGhvdWdodCwgZmVlbGluZyBvciBiZWhhdmlvdXIuIApUaGV5IGRvbid0IHNvdW5kIGR1bWIgdG8gbWUuIFRoZXkgc291bmQgY3VubmluZy4gCkluIGFuIGVmZm9ydCB0byBtYWtlIG91ciBkYXkgbW9yZSBleGNpdGluZyBhbmQgbm90IHRha2UgYW55IGNoYW5jZXMsIHdlIGJlZ2FuIHRvIGNsaW1iIHZlcnRpY2FsbHkgb3V0IG9mIHRoZSBjYW55b25zIHZlcnN1cyB0YWtlIHRoZSBsZW5ndGh5IHBhdGggb3V0IG9mIGl0IGhvcml6b250YWxseS4gCkkgYmVlbiB0aHJvdWdoIHRoZSBTdWV6IGFuZCBQYW5hbWEgY2FuYWxzIGEgZmV3IHRpbWVzLiAKRHIgTXVycmF5IGFsc28gc3RhdGVkOiAiUGFydCBvZiB0aGUgcHJvYmxlbSBpcyB0aGF0IGNlbGlhYyBzeW1wdG9tcyBhcmUgdmFyaWFibGUgYW5kIGNhbiBiZSBtaXN0YWtlbiBmb3Igb3RoZXIgZGlzZWFzZXMgdGhhdCBhcmUgbW9yZSBjb21tb24sIHN1Y2ggYXMgSUJTLiBTb21lIHN0dWRpZXMgaGF2ZSBzdWdnZXN0ZWQgdGhhdCBmb3IgZXZlcnkgcGVyc29uIHdobyBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBjZWxpYWMgZGlzZWFzZSwgdGhlcmUgYXJlIGxpa2VseSAzMCB3aG8gaGF2ZSBpdCBidXQgYXJlIG5vdCBkaWFnbm9zZWQuIEFuZCBnaXZlbiB0aGUgbmVhcmx5IHF1YWRydXBsZWQgbW9ydGFsaXR5IHJpc2sgZm9yIHNpbGVudCBjZWxpYWMgZGlzZWFzZSB3ZSBoYXZlIHNob3duIGluIG91ciBzdHVkeSwgZ2V0dGluZyBtb3JlIHBhdGllbnRzIGFuZCBoZWFsdGggcHJvZmVzc2lvbnMgdG8gY29uc2lkZXIgdGhlIHBvc3NpYmlsaXR5IG9mIGNlbGlhYyBkaXNlYXNlIGlzIGltcG9ydGFudC4iClRleGFzIEhvbGRlbSBpcyB0aGUgbW9zdCBwb3B1bGFyIHZhcmlhbnQgb2YgcG9rZXIuIElmIHlvdSBldmVyIHNlZSBwb2tlciBvbiB0ZWxldmlzaW9uLCBpdCdzIG1vc3QgbGlrZWx5IHRoYXQgeW91J3JlIHdhdGNoaW5nIGEgVGV4YXMgSG9sZGVtIGdhbWUuIFRoZSBnYW1lIGlzIGEgY29tYmluYXRpb24gb2YgbHVjayBhbmQgc2tpbGwgYW5kIGl0J3MgdGhlIHZhcmlhbnQgdXNlZCBpbiB0aGUgbW9zdCBpbXBvcnRhbnQgcG9rZXIgdG91cm5hbWVudCBpbiB0aGUgd29ybGQ6IHRoZSBtYWluIGV2ZW50IG9mIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgKFdTT1ApLi4gCllvdSBjb3VsZCB3YWxrIGludG8gYWxtb3N0IGFueSBkZWNlbnQgbG9va2luZyByZXN0YXVyYW50IGluIGFueSBjYXNpbm8gYW5kIGhhdmUgYW4gZXhjZXB0aW9uYWwgbWVhbC4gCkVPUyBpcyBjdXJyZW50bHkgdGhlIG1vc3QgYWN0aXZlIGJsb2NrY2hhaW4gd2hlbiBtZWFzdXJlZCBieSBhY3R1YWwgaW50ZXJhY3Rpb25zIHdpdGggdGhlIGJsb2NrY2hhaW4gcGVyIGRheS4gV2l0aCB0aGF0IGluIG1pbmQsIGhvdyBjYW4gb25lIGV2ZW4gbWFrZSBhIGNvbW1lbnQgbGlrZSBJdmFuIGRpZCA/IFN1cmUsIGFsb3Qgb2YgdGhlIFRYIGlzIHNwYW0gdGVzdGluZyBhbmQgd2hhdG5vdC4gRG9lc250IGNoYW5nZSB0aGUgZmFjdCBpdHMgdGhlIG1vc3QgYWN0aXZlIGNoYWluIGN1cnJlbnRseS4uIApXT3csIG5pY2UgdHJpY2tzLCEgeW91IGtub3cgSSBhbSBub3QgeWV0IG1hc3RlciB0aGlzIGdhbWUsIGJ1dCBJIHdhbnRlZCBob3cgdG8gd2luLiBUaGlzIGlzIHVzZWZ1bCBmb3IgbWUuCiJJJ20gYm90aCBhbGwgdGhlIHRpbWUuIEdhZ2EgYW5kIFN0ZWZhbmkgYXJlIG15IG5pY2tuYW1lcy4gSSBndWVzcyB3aGVuIHBlb3BsZSBtZWV0IG1lIGZvciB0aGUgZmlyc3QgdGltZSBhbmQgY2FsbCBtZSBTdGVmYW5pLCBpdCBib3RoZXJzIG1lLiBCZWNhdXNlIGl0J3Mgc29tZXRoaW5nIHRoYXQncyByZXNlcnZlZCBmb3Igb25seSB0aGUgcGVvcGxlIHdobyBhcmUgY2xvc2VzdCB0byBtZSwiIHNoZSBzYWlkLgpUaGUgc29vdGhpbmcgZWZmZWN0cyBvZiBhIG1hc3NhZ2UgcHJvdmlkZSByZWxpZWYgZnJvbSBuZXJ2b3VzIGlycml0YWJpbGl0eS4gU3RyZXNzIHJlbGF0ZWQgY29uZGl0aW9ucyBzdWNoIGFzIGhlYWRhY2hlcyBhbmQgaW5zb21uaWEgcmVzcG9uZCBwb3NpdGl2ZWx5IHRvIHRoZSB3b3JrcyBvZiBhIG1hc3NhZ2UgdGhlcmFwaXN0IGFzIGNhbG0gYW5kIHBlYWNlIHJldHVybiB0byBvdXIgdHJvdWJsZWQgbWluZC4gClJlcG9ydGVyOiBUb2JleSBhbmQgTGVvbmFyZG8gdG9nZXRoZXIgaW4gdGhlIGZpbG0gIlRoZSBncmVhdCBnYXRzYnkiIGFuZCB0b2dldGhlciBpbiBjYXJkcy4gQW5kIGhvdyBtdWNoIG1vbmV5IHdhcyBwbGF5ZWQgaW4gdGhhdCBmaXJzdCBnYW1lPyBQZW9wbGUgaGFkIHByb2JhYmx5LCB5b3Uga25vdywgc2l4IGZpZ3VyZSBsb3NzZXMsIHNpeCBmaWd1cmUgd2lucy4gCkhlcm1hbiBbc2ljIGF0dGVuZGVkIGdyYWRlIHNjaG9vbCBpbiBMYXMgQ3J1Y2VzLiAKTXkgd2VpZ2h0IGdvZXMgdXAgYW5kIGRvd24gZGVwZW5kaW5nIG9uIGlmIEkgcnVubmluZyBhIGxvdCwgYW5kIGV2ZW4gYXQgbXkgc2tpbm5pZXN0IEkgc3RpbGwgaGF2ZSAiYmlnIiB0aGlnaHMvaGlwcyBhbmQgYSBsaXR0bGUgcGF1bmNoLiAKQSBwYXAgdGVzdCB3aWxsIHRlc3QgZm9yIEhQVi4gClRocmVlIGZvcndhcmQgZGVmZW5zaXZlcyBmb2xsb3dlZCwgdGhlbiBhIHNpbmdsZSBvZmYgU2hhbWkgdG8gbW92ZSB0byA5OSwgYW5kIHRocmVlIG1vcmUgYmxvY2tzLi4gClRoZXJlIGFyZSAxMyBwb3RlbnRpYWwgcmFua3Mgb2YgY2FyZHMgaW4gdGhlIGRlY2suIApJIHdhcyBwbGF5aW5nIEp1cmFzc2ljIHBhcmsgb24gU05FUyBpbiA2dGggZ3JhZGUuIEkgaGFkIGRvbmUgb2sgYmVmb3JlIGFuZCByZWFsbHkgbGlrZWQgdGhlIGdhbWUuIEFueW9uZSB0aGF0IHBsYXllZCBpdCB0aGF0IGhhZCBhbiBlYXN5IHRpbWUsIGxldCBtZSBrbm93OyBpdCB3YXMgYSBwcmV0dHkgZGlmZmljdWx0IGdhbWUgdG8gbWUuClNvIGJvb2ttYXJrIHRoaXMgcGFnZSwgYW5kIHRoZSBXU09QIHRhbGVzIG9mIGRlcnJpbmcgZG8sIG9yLCBpbiBteSBjYXNlLCBub3Qgc28gZGVycmluZyBkbywgd2lsbCBmb2xsb3cuIApUd2VudHkgdGVhbXMgb2YgdGhyZWUgZnJvbSBhcm91bmQgUml2ZXJpbmEsIGluY2x1ZGluZyBIb2xicm9vaywgRGVuaWxpcXVpbiBhbmQgQWxidXJ5LCBwbGF5ZWQgZm9yIGZvdXIgaG91cnMgc3RyYWlnaHQuIApPcHRpb24gYiB3b250IGdpdmUgeW91IGFueSBpbmNvbWUgYnV0IHlvdXIgaW5pdGlhbCBpbnZlc3RtZW50IGlzIG1vcmUgdGhhbiBsaWtlbHkgZ29pbmcgaGlnaGVyLCBlc3BlY2lhbGx5IGlmIHRoZSBmZWQgZW5kIHVwIGRvaW5nIG5lZ2F0aXZlIGludGVyZXN0IHJhdGVzIGFzIHRoZXl2ZSBiZWVuIHRhbGtpbmcgYWJvdXQuIApFYXIgbWl0ZXMgYXJlIG9uZSBvZiB0aGUgbW9zdCBjb21tb24gY2F1c2VzIG9mIGZlbGluZSBlYXIgZGlzY29tZm9ydC4gQnV0IHdoYXQgZXhhY3RseSBhcmUgZWFyIG1pdGVzPyBUaGV5IGFyZSB0aW55IHBhcmFzaXRlcyB0aGF0IGxpdmUgaW5zaWRlIHRoZSBlYXIgY2FuYWwgb2YgYW4gaW5mZWN0ZWQgYW5pbWFsOyBpbiB0aGUgY2FzZSBvZiBjYXRzLCB0aGUgbW9zdCBsaWtlbHkgb3JnYW5pc20gaXMgT3RvZGVjdGVzIGN5bm90aXMuIFRoZSBtaXRlcyBsaXZlIG9uIHRoZSB3YXggYW5kIG90aGVyIGRpcnQgaW5zaWRlIGEgY2F0J3MgZWFyLi4gCkFuZCBsZXQgYmUgaG9uZXN0LCB0byB0ZXN0IEZTRCBlYXJseSB0aGV5IGhhdmUgdG8gYXJyYW5nZSBmb3IgbXkgY2FyIHRvIGdldCB0aGUgbmV3IEhXMyBjaGlwIHZpYSBzZXJ2aWNlLCBmb3IgZnJlZSwgdmVyc3VzIHVzZSBvdGhlciBGU0QgY3VzdG9tZXJzIHdobyBidXkgYSBjYXIgd2l0aCBpdCBidWlsdCBpbiBhbmQgcmVhZHkgdG8gZ28uIApDb25zaWRlciBpdCB5b3VyIHRyYXZlbGluZyBDcmFwcyBHYW1lLCBiZWNhdXNlIHlvdSBjYW4gcGxheSBpdCBvbiB0aGUgZmxvb3IsIG9uIHRoZSBraXRjaGVuIHRhYmxlLCBvciBwdXQgaXQgZG93biBvbiB5b3VyIENyYXBzIFRhYmxlIGlmIHlvdSBoYXZlIG9uZS4gVGhlIHBvaW50IGlzIHRoZXJlIGlzbid0IGEgcGFydGljdWxhciBwbGFjZSB0aGF0IGl0IGhhcyB0byBnbyBmb3IgeW91IHRvIGVuam95IGl0Li4gCkkgbWVudGlvbmVkIG9uIGFub3RoZXIgdGhyZWFkIHRoYXQgY2FzdGluZyBhIG5vbiB3aGl0ZSBhY3RvciBpbiBhIHJvbGUgZXhwbGljaXRseSBkZXNjcmliZWQgYXMgd2hpdGUgYnkgdGhlIHNvdXJjZSBtYXRlcmlhbCBzZWVtcyB0byBob2xkIG1vcmUgaW5oZXJlbnQgYmlhc2VzIHRoYW4gc2ltcGx5IGNhc3RpbmcgYSB3aGl0ZSBhY3Rvci4gVGhpcywgaW4gdHVybiwgbWFrZXMgdGhpbmdzIG1vcmUgY29tcGxpY2F0ZWQgdGhhbiB0aGV5IHNob3VsZCBiZS4gSWYgbm8gInBvbGl0aWNhbCBiaWFzZXMiIHdlcmUgYXBwbGllZCwgY2FzdGluZyB3b3VsZCBwcm9iYWJseSBnbyBzb21ldGhpbmcgbGlrZSB0aGlzOiBDaGFyYWN0ZXIgZGVzY3JpYmVkIGFzIHdoaXRlIGJ5IHNvdXJjZSBtYXRlcmlhbCAgPiBPcGVuIGEgY2FzdGluZyBjYWxsIGZvciB3aGl0ZSBhY3RvcnMgID4gQ2FzdCBiZXN0IGFjdG9yIG91dCBvZiB0aGlzIGJ1bmNoLiAKVGhlc2UgbWF0ZXJpYWxzIGNhbiBiZSBib3VnaHQgaW4geW91ciBsb2NhbCBkZXBhcnRtZW50IHN0b3JlIGp1c3QgZ28gdG8gdGhlIGxpbmVuL3RhYmxlY2xvdGggc2VjdGlvbi4uIApHYWx3YXkgY29tcGV0ZWQgZm9yIGxhcmdlIGNodW5rcyBvZiBsYXN0IEZyaWRheSBlbmNvdW50ZXIgYWdhaW5zdCBCcmF5IFdhbmRlcmVycyBiZWZvcmUgYmVpbmcgY2F1Z2h0IG91dCBieSB0aGVpciBpbmVwdGl0dWRlIGRlYWxpbmcgd2l0aCBzZXQgcGllY2VzIHdoaWNoIGhhcyBiZWVuIGEgZmFtaWxpYXIgdGhlbWUgdGhyb3VnaG91dCB0aGUgY2FtcGFpZ24uCiJJIGdvdCBmZXcgb3RoZXIgaW50ZXJlc3RzIG91dHNpZGUgb2Ygc29mdCBkcmluayBhbmQgSSBqdXN0IHF1aWV0bHkgcHVyc3VlIHRoZW0uIEFuZCBJIHRoaW5rIEkgdGFrZSBpdCBlYXN5IGFuZCBlbmpveSB0aGUgY2hpbGRyZW4gYW5kIGdyYW5kIGNoaWxkcmVuLiIKSXQgd2lsbCBhY2N1bXVsYXRlIHN0YXRpc3RpY3MgZm9yIG90aGVyIHBlb3BsZSBhdCB0aGUgdGFibGUgYW5kIGhlbHAgeW91IG1ha2UgbW9yZSBpbmZvcm1lZCBkZWNpc2lvbnMgb3ZlciBhIGxvbmcgcGVyaW9kIG9mIHRpbWUuIApUaGVyZSBpcyBub3RoaW5nIGluaGVyZW50bHkgQkFEIG9yIGFkZGljdGl2ZSB3aXRoIGhlcm9pbiB0aGF0IG1ha2VzIGl0IGJldHRlciB0aGFuIGFueSBvdGhlciBvcGlhdGUuIApHaXZpbmcgdGhlIGJhYnkgdG8gdGhlIGdyYW5kbW90aGVyIHJhdGhlciB0aGFuIGdvIHRocm91Z2ggdGhlIGFkb3B0aW9uIHByb2Nlc3MpLiBBZ2Fpbiwgbm90IGFuIGV4cGVydCBpbiBhbnl0aGluZyByZWxhdGVkIHRvIHRoaXMsIGJ1dCB0aGF0IHdvdWxkIGJlIG15IGNvbmNlcm4uIAoxKSBDYXRhbGluYTogMTIyMCAxNDIwLCAyMDBFLCB0aGlyZCBzZXNzaW9uIGluIHRoaXMgbGF0ZSBhdXR1bW4gRktLIHRvdXIuIApUaGUgb25seSB0aGluZyBJIGhhZCB0byBjb21lIHRvIGEgcmVhbGl6YXRpb24gYWJvdXQgd2FzIHJpZGluZyBTcGFjZSBNb3VudGFpbi4gSXQncyByZWFsbHkgYSByb3VnaCByaWRlLiBUaGUgbGFzdCB0aW1lIEkgcm9kZSBpdCwgbXkgbmVjayBodXJ0IGZvciB0aGUgcmVzdCBvZiB0aGUgZGF5LiAKSm91cm5hbCBvZiBOZXVyb3NjaWVuY2UuIApUaGUgZXhhY3Qgb3JpZ2lucyBvZiBwb2tlciBhcmUgdW5jbGVhci4gSXQgc2VlbXMgdG8gaGF2ZSBvcmlnaW5hdGVkIGZyb20gYSAxNnRoIGNlbnR1cnkgUGVyc2lhbiBjYXJkIGdhbWUga25vd24gYXMgQXMgTmFzLiAKMTEuIE1vbnRlbGVvbmUgUCwgTWFqIE0sIEJlaW5hdCBMLCBOYXRhbGUgTSwgS2VtYWxpIEQgKDE5OTIpLiBieSBjaHJvbmljIHBob3NwaGF0aWR5bHNlcmluZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgc3RyZXNzIGluZHVjZWQgYWN0aXZhdGlvbiBvZiB0aGUgaHlwb3RoYWxhbW8gcGl0dWl0YXJ5IGFkcmVuYWwgYXhpcyBpbiBoZWFsdGh5IG1lbiBFdXIgSiBDbGluIFBoYXJtYWNvbCA0MiAoNCk6IDM4NSAzODguCk9uIGEgcG9zaXRpdmUsIEkgbGlua2VkIG11c2ljIHRvIG15IGFwcGxlIHdhdGNoIGFuZCBub3cgSSBkb24ndCBydW4gd2l0aCBteSBwaG9uZSBhbmQgaXQncyBwcmV0dHkgZ3JlYXQgbm90IGhhdmluZyBhIGJlbHQvYXJtIGJhbmQgdG8gZnVzcyB3aXRoIQpOb3J3YXkgSXMgUmVjcnVpdGluZyBSZWFsIFBlb3BsZSBmb3IgVFYgU2V4ClRoZXJlIGFyZSBzb21lIFBpcmF0ZSBpUGhvbmUgY2FzZSBjb3ZlciBhbmQgc2tpbnMgdGhhdCBjdXJyZW50bHkgdXAgYXVjdGlvbiwgdGhlIHN0YXJ0aW5nIHByaWNlcyBhcmUgdmVyeSBsb3cgYXMgbG93IGFzICQwLi4gCldvdy4gU28gbWFueSBwZW9wbGUgc2F5aW5nIHRoZSBtb3RoZXIgc2hvdWxkbiBuZWVkIHRvIGRvIHRoaXMgYW5kIGl0IG9rYXkgZm9yIHRoZSBiYWJ5IHRvIGNyeS4gSGF2ZSB5b3UgZmxvd24gYSAxMCsgaG91ciBmbGlnaHQgd2l0aCBiYWJpZXMgc2NyZWFtaW5nIGFsbCB0aGUgdGltZT8gT3IgdW5ydWx5IGNoaWxkcmVuIHJ1bm5pbmcgYXJvdW5kIGFuZCBiYW5naW5nIHNlYXRzIHdoaWxlIHRoZWlyIHBhcmVudHMgaWdub3JlIHRoZW0/IEZ1Y2sgaXQgaGVsbC4gClRoZSBjZW50cmFsIHByaW5jaXBsZSBpbnZvbHZlcyBtZWRpdGF0aW5nIG9uIGEgdml0YWwgZW5lcmd5IGNlbnRlciBrbm93biBhcyB0aGUgRGFudGlhbiAocHJvbm91bmNlZCBkYWhuIHR5ZWhuKS4gTG9jYXRlZCBhYm91dCB0aHJlZSBpbmNoZXMgYmVsb3cgdGhlIG5hdmVsLCBpdCBpcyBjb25zaWRlcmVkIHRoZSByb290IG9mIHFpIGluIHRoZSBib2R5LiBCeSBmb2N1c2luZyBvbiB0aGlzIGFyZWEgd2hpbGUgbW92aW5nIHRoZSBib2R5LCBhIHBlcnNvbiBpcyBhYmxlIHRvIGJ1aWxkIHVwIGEgc3RvcmVob3VzZSBvZiBxaSBhbmQgZGlyZWN0IGl0IHRvIGFyZWFzIHRoYXQgbmVlZCBpdC4KSmVwcGVzZW4gVGVybWluYWwgYW5kIGVhY2ggb2YgdGhlIGNvbmNvdXJzZXMgaGF2ZSBhIHNlbGVjdGlvbiBvZiBzaG9wcyBhbmQgcmVzdGF1cmFudHMgdG8gc3BlbmQgeW91ciB0aW1lIGluIHdoaWxlIHdhaXRpbmcuIEplcHBlc2VuIFRlcm1pbmFsJ3MgZXN0YWJsaXNobWVudHMgY2FuIGJlIGZvdW5kIG9uIHRoZSBmaWZ0aCBhbmQgc2l4dGggbGV2ZWxzLCB3aGlsZSBDb25jb3Vyc2UgQSdzIGFyZSBvbiBsZXZlbHMgMiwgMyBhbmQgNC4gQ29uY291cnNlcyBCIGFuZCBDIGhvbGQgdGhlaXIgc2hvcHMgYW5kIGRpbmluZyBwbGFjZXMgb24gdGhlIHNlY29uZCBhbmQgdGhpcmQgbGV2ZWxzLiAKMjIwIHBhZ2VzLCBpbnRyaWV1ciBub2lyIGJsYW5jTCdvbGZhY3RvdGhyYXBpZSBlc3QgdW5lIG10aG9kZSBxdWkgaW50Z3JlIHRhbnQgbGEgcHJvcHJpdCB2b2xhdGlsZSBkZXMgaHVpbGVzIGVzc2VudGllbGxlcyBldCBkZXMgZXNzZW5jZXMgcXVlIGxldXJzIGNhcGFjaXRzICBhZ2lyIGdsb2JhbGVtZW50IHN1ciBsYSBzcGhyZSBwc3ljaG8gbW90aW9ubmVsbGUgZGUgbCd0cmUgaHVtYWluLiBDb21tZSBzb24gbm9tIGwnaW5kaXF1ZSwgbCdvbGZhY3RvdGhyYXBpZSBmYWl0IGFwcGVsICBsJ29sZmFjdGlvbiBkJ2h1aWxlcyBlc3NlbnRpZWxsZXMgKG1haXMgZ2FsZW1lbnQgZCdlc3NlbmNlcyBldCBkZSBjZXJ0YWluZXMgYWJzb2x1ZXMpIGVuIHZ1ZSBkZSBydGFibGlyIGNoZXogbCdpbmRpdmlkdSBkZXMgZHNxdWlsaWJyZXMgbW90aW9ubmVscyBwbHVzIG91IG1vaW5zIGltcG9ydGFudHMuIE5vdXMgc2F2b25zIHF1ZSBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBwcnNlbnRlbnQgZGVzIHByb3ByaXRzIGNhbG1hbnRlcywgc2RhdGl2ZXMsIGFueGlvbHl0aXF1ZXMsIG5ldXJvdHJvcGVzLCBldGMuLCBxdSd1biBjZXJ0YWluIG5vbWJyZSBkJ2VudHJlIGVsbGVzIG9udCB1bmUgYWN0aW9uIHN1ciBsZSBzeXN0bWUgbmVydmV1eC4gTCdvbGZhY3RvdGhyYXBpZSBlc3QgZG9uYyBhc3NleiBwcm9jaGUsIGRhbnMgc29uIGNvbmNlcHQsIGRlIGwnYXJvbWFjaG9sb2dpZSwgdW5lIGJyYW5jaGUgZGUgbCdhcm9tYXRocmFwaWUgcXVpIHR1ZGllIGxlcyBlZmZldHMgZGVzIHN1YnN0YW5jZXMgcGFyZnVtZXMgc3VyIGxhIHBzeWNoLiBNYWlzIGwgbyBsJ2Fyb21hY2hvbG9naWUgcydvY2N1cGUgZHUgc3lzdG1lIG5lcnZldXgsIGwnb2xmYWN0b3RocmFwaWUgc2UgY2hhcmdlIGRlIGxhIGRpbWVuc2lvbiBtb3Rpb25uZWxsZSBwcm9wcmUgIGNoYXF1ZSBpbmRpdmlkdS4KUGVvcGxlIHdvdWxkIGJlIGNyeWluZyBpdCdzIGhhcmFzc21lbnQgb3IgZW1vdGlvbmFsIG1hbmlwdWxhdGlvbiBhbmQgdGhhdCdzIDEwMCUgd2hhdCBJIHRoaW5rIEZlcm5hbmRhIGlzIGRvaW5nLiAKV2VsY29tZSB0byBUaGUgR2xvYmUgYW5kIE1haWwncyBjb21tZW50IGNvbW11bml0eS4gVGhpcyBpcyBhIHNwYWNlIHdoZXJlIHN1YnNjcmliZXJzIGNhbiBlbmdhZ2Ugd2l0aCBlYWNoIG90aGVyIGFuZCBHbG9iZSBzdGFmZi4gTm9uIHN1YnNjcmliZXJzIGNhbiByZWFkIGFuZCBzb3J0IGNvbW1lbnRzIGJ1dCB3aWxsIG5vdCBiZSBhYmxlIHRvIGVuZ2FnZSB3aXRoIHRoZW0gaW4gYW55IHdheS4gUmVhZGVycyBjYW4gYWxzbyBpbnRlcmFjdCB3aXRoIFRoZSBHbG9iZSBvbiBGYWNlYm9vayBhbmQgVHdpdHRlciAuClNvbiBzb3VnaHQgR09QIHByZXNpZGVudGlhbCBub21pbmF0aW9uLiBCcmlhbiBSb2JlcnRzLCAkMS4xIGJpbGxpb24sIFBlbm4sIFdoYXJ0b24gTUJBLiAKSSBoYXZlIHBlb3BsZSBkcml2aW5nIGFyb3VuZCBteSBkaXN0cmljdCBsb29raW5nIGZvciBteSBob21lLCBmb3IgbXkgb2ZmaWNlLCBjYXVzaW5nIG1lIGhhcm0uIApSZXZlbnVlcyB0b3BwZWQgJDEwMCBiaWxsaW9uIGZvciB0aGUgZmlyc3QgdGltZS4gCkNvbXB1dGVycyBhcmUgYSBiaWcgcGFydCBvZiB0aGUgYnVzaW5lc3MsIGJ1dCB0aGV5IGRpZG4gbWFrZSB1cyBhbnkgbW9uZXkuIENhYmxlcywgaW5rLCBhbmQgY2VydGFpbiBhY2Nlc3NvcmllcyBhcmUgd2hlcmUgYWxsIHRoZSBtb25leSBpcyBhdC4gCkV2ZXJ5b25lIGVsc2UgaW4gdGhlIG1vdmllIGlzIGludGVyZXN0ZWQgaW4gZm9sbG93aW5nIHJ1bGVzIGJlY2F1c2UgdGhleSBhcmUgdGhlIHJ1bGVzLCBub3QgdGhlIHB1cnBvc2UgdGhhdCB0aG9zZSBydWxlcyBhcmUgYWN0dWFsbHkgc3VwcG9zZWQgdG8gc2VydmUuIApJcyBGcmVkZXJpY2sgQ291bnR5IHJlYWR5IGZvciBpdD8gU2hhY2tlbGZvcmQgc2FpZC4gTW9udGdvbWVyeSBDb3VudHkgcmVjZW50bHkgcGFzc2VkIGEgc2V4dWFsIGRpc2NyaW1pbmF0aW9uIGxhdywgYSBjaGFydGVyIGdvdmVybm1lbnQgaW4gdGhhdCBjb3VudHkgbWFrZXMgaXQgZWFzaWVyIHRvIHBhc3MsIGhlIG5vdGVkLiAiTW9udGdvbWVyeSBDb3VudHkgYWxzbyBoYXMgYW4gYWN0aXZlIGdheSBjb21tdW5pdHkgYW5kIGFuIGFjdGl2ZSBjb3VuY2lsLiAKNi4gWW91ciBIb21lICAgSWYgeW91IG93biBhIGhvbWUgeW91IGNhbiB1c2UgYSBIb21lIEVxdWl0eSBMaW5lIG9mIENyZWRpdCB0byBkcmF3IGRvd24gY2FzaCBvdmVyIHRpbWUsIG9yIG1heWJlIGEgZG93bnNpemUgb3Igc2FsZSBvZiByZWFsIGVzdGF0ZSBpcyBhIGtleSBzb3VyY2Ugb2YgZnVuZHMgZm9yIHlvdXIgcmV0aXJlbWVudC4gCkdvdCBiYWNrIGludG8gYSB1bml2ZXJzaXR5IGNsb3NlciB0byBob21lIGEgeWVhciBhbmQgYSBoYWxmIGFnbyBhbmQgYW0gZG9pbmcgZ3JlYXQuIEkgc3RpbGwgcmVhZCBMTnMvV05zLCBidXQgb25seSBhIGZldywgYW5kIEkgZnJlcXVlbnRseSB0YWtlIGJyZWFrcyBmcm9tIHRoZW0gdG8gYmUgYSBzb2NpYWwgYWR1bHQuLiAKRm9yIHRoZSBNZW50YWwgR2FtZSBvZiBQb2tlciwgdGhhdCBpcyBlc3NlbnRpYWxseSBteSBiaWJsZSBhbmQgZ29pbmcgZm9yd2FyZCBJIHdhbnQgdG8gbWFrZSBzb21lIG9mIGhpcyBzdHVmZiBrbm93biB0byB0aGUgT1cgY29tbXVuaXR5LCBiZWNhdXNlIGl0IHJlYWxseSBpcyB2YWx1YWJsZSB0byBwZW9wbGUgd2hvIHN0cnVnZ2xlIHdpdGggbWVudGFsIGdhbWUsIHdoZXJlIHlvdSB3aWxsIGtub3cgaWYgeW91IHBsYXkgb24gbGFkZGVyIHRoZXJlIGFyZSBhIGxvdCBvZiB0aG9zZSBjYXNlcy4KRXNwZWNpYWxseSBnaXZlbiB0aGUgdmFzdCBjaGFuZ2VzIHRoZSB0ZWFtIGhhcyBleHBlcmllbmNlZC4KQW4gYXNzaG9sZSBpcyB0eXBpY2FsbHkgY29uc2lkZXJlZCBzdWNoIGJlY2F1c2UgdGhleSBwdXQgdGhlbXNlbHZlcyBiZWZvcmUgb3RoZXJzLiBBIHBhcnRpY3VsYXJseSBtb3RpdmF0ZWQgYW5kIHNlbGYgc2VydmluZyBhc3Nob2xlIGlzIGxpa2VseSB0byBoYXZlIGEgY29tcGxldGVseSBkaWZmZXJlbnQgbGlmZSBleHBlcmllbmNlIHRoYW4gc29tZW9uZSB3aG8gcHV0cyBvdGhlcnMgYmVmb3JlIHRoZW1zZWx2ZXMuIApOb3Qgc3VycHJpc2luZ2x5LCB0aGUgc3BhIHNwZWNpYWxpemVzIGluIHZvbGNhbmljIG11ZCB3cmFwcyBhbmQgaHlkcm90aGVyYXB5IHRyZWF0bWVudHMsIGxpa2UgYSBzZWEgc2FsdCBzcGlrZWQgSmFjdXp6aSBzZXNzaW9uLi4gCkp1c3RNZUFuZE15U25haWwgdQpUSEVOIGhlIGNhbWUgYmFjayBmaXZlIG1pbnV0ZXMgbGF0ZXIgYW5kIGNvbXBsYWluZWQgdGhhdCBteSBjb25jZXNzaW9uaXN0IHdvdWxkbid0IGdpdmUgaGltIHRoZSBvdGhlciBpdGVtcyBmb3IgZnJlZS4uIApTZWxvbiBsdWksIGxhIG1jb25uYWlzc2FuY2UgZGVzIGxvaXMgZXQgZGVzIG1vZGFsaXRzIGRlIHBhaWVtZW50IGNvbnN0aXR1ZSBsZSBwcmluY2lwYWwgZnJlaW4gIGwnYWNoYXQuIApSb21haW5lIGxldHR1Y2UgaXMgc2FmZSB0byBlYXQgYWdhaW4KSmVzc2ljYWp1Z3MgdQpMZWJzdCBkdSBhdWVyaGFsYiBkZXIgVVNBIGRhbm4gc3BpZWxlIG9ubGluZSBQb2tlci4gU29sbHRlc3QgZHUgZGFzIEdsY2sgaGFiZW4gZWluIHJpY2h0aWcgZ3V0ZXIgUG9rZXJzcGllbGVyIHp1IHNlaW4gdW5kIGRhenUgbmljaHQgaW4gZGVuIFVTQSB3b2huZW4sIGRhbm4gc3BpZWxlIG9ubGluZSBQb2tlciB1bSBkZWluZSBiYW5rcm9sbCBhdWZ6dXBlcHBlbi4gRnIgdmllbGUgU3BpZWxlciBpc3QgZGllcyBsZWljaHRlciAgIG9mdCBpc3QgZXMgc2NobmVsbGVyLCBlcyBiZXJlaXRldCB3ZW5pZ2VyIEtvcGZzY2htZXJ6ZW4sIHVuZCBlcyBpc3QgYW5nZW5laG1lciwgd2VubiBtYW4gZXMgZGVubiBtYWwgYmVpbSBOYW1lbiBuZW5uZW4gbWNodGUsIExldXRlbiBHZWxkIGFienVuZWhtZW4sIGRpZSBtYW4gbmljaHQgc2llaHQgLi4gClJlc2lkZW50cyBoYXZlIGJlZW4gY29vcmRpbmF0aW5nIG9uIEZhY2Vib29rIGFuZCBOZXh0ZG9vciwgYnV0IGl0IGp1c3QgYmVlbiBnZXR0aW5nIHdvcnNlLiAKVGhleSBoYXZlIDIgc2lkZXMgb25lIHdpdGggbGlxdW9yIHdoZXJlIHRoZSBnaXJscyBhcmUgaW4gYmlraW5pcyBhbmQgYW5vdGhlciBzaWRlIHlvdSBjYW4gY2FycnkgYmVlciBpbnRvIHdoZXJlIHRoZXkgZ2V0IHByZXR0eSByYXVuY2h5IG9uIHN0YWdlLiAKQnV0IHRoZXkgcHJvYmFibHkgd29uIGJlIGR1ZSB0byB0aGUgb25nb2luZyB3YXJzLiBJbnN0ZWFkLCB0aGV5IG9mdGVuIGZhY2UgdmVyYmFsIGFuZCBldmVuIHBoeXNpY2FsIHZpb2xlbmNlIHRoYXQgaGFzIGxlZCB0byBtb3JlIHRoYW4gb25lIGRlYXRoLiBJIG5vdCBzdXJlIHdoYXQgR2VvcmdlIFcuIApXaGljaCBoYW5kIGlzIGdyZWF0ZXIgaW4gcG9rZXIgMyBzZXZlbnMgb3ZlciAyIGtpbmdzIG9yIDMgZml2ZXMgb3ZlciAyIEFjZXMKSSdtIGludGVyZXN0ZWQgaW4gdGhlIGFsbGVnaWFuY2UgcXVlc3RzIGJ1dCB0aG9zZSBkb24ndCBjb21lIHRpbGwgQXByaWwsIGJ1dCBhcyBhIFB2UCBwbGF5ZXIgbWFpbmx5LCBJIGRvbid0IHJlYWxseSBmZWVsIGxpa2UgSSd2ZSBiZWVuIG9mZmVyZWQgdGhhdCBtdWNoLiBBZGRpdGlvbmFsbHkgZnJvbSBhIHB2ZSBiYWNraW5nLCB0aGVyZSdzIG5vdCByZWFsbHkgYSBsb3QgdGhhdCdzIG5ldyBpbiB0aGUgZ2FtZS4gQ29tcGV0aXRpdmUgaXMgaW4gYSB0ZXJyaWJsZSBzdGF0ZSBhbmQgdGhlcmUncyBubyB0cmlhbHMgc28gSSdsbCBvbmx5IGhvcCBpbiBQdlAganVzdCB0byBwbGF5LCBidXQgdGhlcmUncyBubyBjYXJyb3QgZm9yIG1lIHRvIGZlZWwgbGlrZSBJJ20gY2hhc2luZyBzb21ldGhpbmcuIApCaXNoZXIgaGFiIGljaCBkYSBudXIgdm9uIE5lYmVud2lya3VuZ2VuIGJlaSBlbnRzcHJlY2hlbmRlciBBbGxlcmdpZSBnZWhydC4uIApSZW1lbWJlciBSZWRkaXQgaXMgZm9yIGZ1biBhbmQgaXMgaW50ZW5kZWQgdG8gYmUgYSBwbGFjZSBmb3IgeW91ciBlbnRlcnRhaW5tZW50LCBidXQgd2Ugc3RpbGwgbmVlZCBzb21lIGJhc2ljIHJ1bGVzLiAKJ0x5bmNoaW5nJyBsaW5lIGdldHMgRG91ZyBNY0xlb2QgeWFua2VkIG9mZiBLU1RDIDQ1IGhvY2tleSB0b3VybmFtZW50ClN1cmVseSBteSB3aWZlIHdvdWxkIGdldCB0aGUga2lkcyBhcyBJIHdvcmsgZnVsbCB0aW1lIGFuZCBzaGUgZG9lc24gSSBjYW4gcmVkdWNlIG15IGhvdXJzIHRvIGJlIGF0IGhvbWUgbW9yZSBlaXRoZXIuIApXaGlsZSBJIHdpbGwgYWRtaXQgdGhhdCBpT1MgNiBsb29rcyAicXVhaW50IiBhdCBiZXN0IHRoZXNlIGRheXMsIGF0IGxlYXN0IGl0IHJlZmxlY3RlZCB0aGUgInBoeXNpY2FsIHJlYWxpdHkiIHRoYXQgbWFkZSBpT1Mgc28gZ3JlYXQuIFRoaW5rIGFib3V0IEpvYnMgaW50cm9kdWN0aW9uIG9mIHRoZSBpUGhvbmUgYW5kIGlPUyAgIHNvIG11Y2ggb2Ygd2hhdCBtYWRlIGl0IGFtYXppbmcgd2FzIGhvdyBpdCBtYXBwZWQgb3VyIG91ciBwaHlzaWNhbCB3b3JsZC4gCltzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgNCBtaW51dGVzIGFnb0JlZm9yZSBteSBodXNiYW5kIHNhaWQgaXQsIGhlIHdhcyBjbGVhcmx5IG1vcmUgYW5kIG1vcmUgZW50aHVzaWFzdGljIGFib3V0IHRhbGtpbmcgdG8gbWUgZXZlcnkgdGltZS4gQ29udmVyc2F0aW9uIGZsb3dlZCBtb3JlIGFuZCBtb3JlIGVhc2lseSBhbmQgZ290IGJvdGggbW9yZSBmdW4gYW5kIGxpZ2h0IGhlYXJ0ZWQgYW5kIG1vcmUgbWVhbmluZ2Z1bC4gVGhlIGZ1biBnb3QgZnVubmVyLCB0aGUgZGVlcCBzdHVmZiBtb3JlIGludGVuc2UuIApIb2xsb3dheSBkYW5jZWQgaW4gdGhlIGZvdXJ0aCBhbmQgdGhlbiBoYW1tZXJlZCBPcnRlZ2EgYXQgdGhlIGZlbmNlLiBIZSB0b29rIGhpbSBkb3duIGxhdGVyIGluIHRoZSByb3VuZCBhcyB0aGUgcHVuaXNobWVudCBjb250aW51ZWQuCkJlZm9yZSB0aGF0LCB0aGVyZSB3YXMgYWxtb3N0IG5vIGNoYW5jZSBJIHdvdWxkIHN1cnZpdmUuIEkgd2FzIGdvaW5nIHRvIGdvIGJyb2tlLCBpdCB3YXMgb25seSBhIHF1ZXN0aW9uIG9mIHdoZW4uIFNvbWV0aGluZyBjbGlja2VkIGluIG15IGhlYWQgYWZ0ZXIgcGxheWluZyBIVSBhbmQgSSBzdGFydGVkIHRvIHRoaW5rIGFib3V0IHBva2VyIGNvbXBsZXRlbHkgZGlmZmVyZW50bHkuIApVc2VkIHRvIHRha2UgYSBCdXByaXByaW9uL0FiaWxpZnkgY29tYm8gdGhhdCBmdWNrZWQgd2l0aCBtZSBpbiB3ZWlyZCB3YXlzLCBldmVyIHNpbmNlIGRyb3BwaW5nIGFudGlkZXByZXNzYW50cyB0aGluZ3MgaGF2ZSBiZWVuIG11Y2ggYmV0dGVyLiAKQW4gZXh0ZW5zaW9uIG9mIHRoZSByZWxhdGlvbnNoaXAgd2UgaGFkIHdpdGggdGhlIHByb3ZpbmNpYWwgZ292ZXJubWVudCBnb2luZyBiYWNrIHRvIDIwMDQgdGhhdCBzYXcgYSBjb21taXRtZW50IHRvIGRvd250b3duIGRldmVsb3BtZW50IHRocm91Z2ggdGhlIGNvbnN0cnVjdGlvbiBvZiB0aGUgTVRTIENlbnRyZSwgYW5kIHBhcnQgb2YgdGhhdCBpbmNsdWRlZCBhbiBhbGxvY2F0aW9uIG9mICg1MCkgVkxUcywgTHVkbG93IHNhaWQuCllldCwgd2l0aGluIGEgZmV3IHdlZWtzIG9mIHN0YXJ0aW5nIG15IG93biBwdWJsaXNoaW5nIGNvbXBhbnksIEkgY29tcGxldGVseSBsb3N0IGludGVyZXN0IGluIGV2ZW4gdGhlc2UgbWlsZCBmb3JtcyBvZiBnYW1ibGluZy4gCk9uZSBndXkgSSBrbm93IG1hZGUgaXQgdG8gdGhlIHRvcCBvbiBhIGphbmt5IGxhcHRvcCBhbmQgMTBtYnBzIGludGVybmV0LiAKTGVhcm4gd2hldGhlciBpdCdzIHNhZmUgdG8gYWJydXB0bHkgc3RvcCB0YWtpbmcgQWRkZXJhbGwgdG8gdHJlYXQgQURIRCBmcm9tIE1lZGljaW5lTmV0J3MgZXhwZXJ0IG1lZGljYWwgZG9jdG9ycyBhbmQgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWxzLgpXZSB3ZXJlbiByZWFsbHkgcGxhbm5pbmcgb24gYnJpbmdpbmcgb3VyIGNhdCB3aXRoIHVzLCBidXQgd2Ugd2lsbCBiZSBnb25lIGZvciAyIHdlZWtzIGFuZCBldmVyeW9uZSB3aG8gd291bGQgYmUgYWJsZSB0byB3YXRjaCBoaW0gd2lsbCBiZSBjb21pbmcgdXAgdG8gUEEgd2l0aCB1cy4gCldoYXQgWW91IE5lZWQgVG8gS25vdyBCZWZvcmUgQ2hpbiBBdWdtZW50YXRpb24gU3VyZ2VyeQpXaGVuIHlvdSBjcm9zcyBzZWFtcyB5b3UgZ29pbmcgdG8gYmUgd29ya2luZyB3aXRoIDQgb3IgbW9yZSBsYXllcnMgdW5kZXIgdGhlIG5lZWRsZS4gClRoZXJlIGp1c3Qgd2VyZW4gYW55IFRIRVJFLiIgQW5kIHdlIHNhaWQgRnVjayBZb3UgSmltLiBUaGVuIHdlIHByb2JhYmx5IHdlbnQgdG8gV2F3YS4gSmltIGlzIG5vdyBzb21lIGtpbmRhIGxhd3llciBsYXN0IEkgaGVhcmQuLiAKQm90aCBjb2xvcnMgd2lsbCBhbHNvIGdvIHdpdGggYnJvd24gYW5kIGJsYWNrIHNob2VzLiBOYXZ5IHN1aXRzIGxvb2sgbXVjaCBiZXR0ZXIgd2l0aCBicm93biBzaG9lcywgYnV0IGl0IGNhbiBiZSBwdWxsZWQgb2Ygd2l0aCBibGFjayB0aGVyZSBhcmVuIGFueSBydWxlcyBhZ2FpbnN0IGl0LiBGb3IgdGhlIGNoYXJjb2FsIGdyZXksIHRyYWRpdGlvbmFsIHJ1bGVzIHNheSBubyBicm93biBzaG9lcy4gCkxpa2UgU2lvYmhhbiwgd2hvIGhhcyBhbiBFbmdsaXNoIG1vdGhlciBhbmQgYSBmYXRoZXIgZnJvbSBHcmVuYWRhIGluIHRoZSBDYXJpYmJlYW4sIE1lZ2hhbiBpcyBwcm91ZGx5IG1peGVkIHJhY2UgICBoZXIgZmF0aGVyIGlzIENhdWNhc2lhbiBhbmQgaGVyIG1vdGhlciBpcyBBZnJpY2FuIEFtZXJpY2FuICAgYW5kIHNpbmNlIGhlciB0ZWVuYWdlIHllYXJzIGhhcyB1bmRlcmdvbmUgYSByaWdvcm91cyBoYWlyIHN0cmFpZ2h0ZW5pbmcgcmVnaW1lLgpJIHdvdWxkIHN1Z2dlc3QgdGhhdCBpZiB5b3Ugc3RpbGwgaW50ZXJlc3RlZCBpbiBkb2luZyBzb21ldGhpbmcgbGlrZSB0aGF0LCBhIGdvb2QgaWRlYSB3b3VsZCBiZSB0byB0cnkgdG8gZ2V0IGludG8gYXQgbGVhc3QgZGVjZW50IHNoYXBlIGFzc3VtaW5nIHRoZSBhc3RobWEgaXNuIGRlYmlsaXRhdGluZyBhcyBJIGRvbiB0aGluayBoYXZpbmcgYSBwcmVzY3JpcHRpb24gaW5oYWxlciB3b3VsZCB0YWtlIHlvdSBvdXQgb2YgY29udGVudGlvbiAodGhvdWdoIGl0IGlzIHZlcnkgY29tcGV0aXRpdmUpLiAKTXkgYmVzdCBmcmllbmQsIHdob20gSSBtZXQgd2hlbiBpIHdhcyA1LCBkYXRlZCBhIGd1eSBmb3IgYSBjb3VwbGUgb2YgbW9udGhzIGFuZCBkZWNpZGVkIHNoZSBkaWRudCBsaWtlIGhpbS4gCkhlIG9uY2UgZGVuaWVkIGV2ZXIgcGxheWluZyBpbiB0aGUgZ2FtZS4gQSByb2Qgd2FzIGEgbm92aWNlIHBsYXllciBidXQgdGhlcmUncyBzb21ldGhpbmcgdGhhdCBoYXBwZW5zIHRvIGdyb3duIG1lbi4gTm8gbWF0dGVyIGhvdyBzdWNjZXNzZnVsIHRoZXkgYXJlLCB3aGVuIGEgcHJvZmVzc2lvbmFsIGF0aGxldGUgY29tZXMgaW50byB0aGUgcm9vbSBhbmQgdGhleSdyZSByZWR1Y2VkIHRvIGtpbmQgb2YgbGlrZSwgeW91IGtub3cgICBUZWVuYWdlIGdpcmxzPyBZZWFoLiAKQWZhaWsgaXQncyBub3QgdGhlIHR5cGUgb2YgZG91Z2ggdGhhdCB5b3UgdXNlLCB0aGVyZSdzIG5vIEhhbGFjaGljIGRpZmZlcmVuY2UgYmV0d2VlbiAiYnJlYWQgZG91Z2giIGFuZCAicGFzdHJ5IGRvdWdoIiBpZiB0aGV5J3JlIHByaW1hcmlseSBtYWRlIG9mIGZsb3VyIGFuZCBwYXJldmUuIFllYXN0IGNvbnRlbnQgaXMgbm90IHdoYXQgbWFrZXMgc29tZXRoaW5nIGJyZWFkLCB0aGUgZmxvdXIgaXMgdGhlIGltcG9ydGFudCBwYXJ0LiBTdHVmZmVkIGJyZWFkIGlzIHBhcyBoYWJhYmlraXNuaW4gYW5kIGEgTWV6b25vcy4gCkl0J3MgcmVhbGx5IGhhcmQgdG8gZmluZCB0aGF0IGNyZWF0aXZlIHNwYXJrIG9uY2UgaXQncyBuZWFybHkgYmVlbiBiZWF0ZW4gb3V0IG9mIHVzIGJ5IGFydCBzY2hvb2wuIERyYXdpbmcgd2hhdCB5b3UncmUgYmVpbmcgdG9sZCB0byBkcmF3IGZvciAzIDQgeWVhcnMgbGVhdmVzIHlvdSBpbiBhIG1lbnRhbCBzdGF0ZSB0aGF0J3MgbGlrZSBnZXR0aW5nIHB1bGxlZCBpbnRvIGEgYmxhY2sgaG9sZSB3aXRoIG5vIGRpcmVjdGlvbiwgbm9yIHRoZSBlbmVyZ3kgbmVlZGVkIHRvIGdldCBvdXQuIAoxNSkgTG93IHZpdGFtaW4gRCBsZXZlbHMgYWxzbyBpbmNyZWFzZSB0aGUgaW5jaWRlbmNlIG9mIG15b2NhcmRpYWwgaW5mYXJjdGlvbiwgdHlwZSAxIGRpYWJldGVzLCBtdWx0aXBsZSBzY2xlcm9zaXMsIGFuZCBmYWxscy4KTWFkZSBhIGJpZyBwdWJsaWMgZGVhbCBvdXQgb2YgY29udmVydGluZyB0byBCdWRkaGlzbSBhbmQgc2hhdmluZyBoaXMgaGVhZCBhZnRlciB2aXNpdGluZyB0aGFpbGFuZCBmb3IgYSBmZXcgZGF5cyAoc28gaGUgY291bGQgZ2V0IHNvbWUgY3JlZCBhbmQgcGVkZGxlIG1lZGl0YXRpb24gdGVjaG5pcXVlcyBoZXJlIHdpdGggaGVhbGluZyBwb3dlcnMgYW5kIG90aGVyIGJ1bGxzaGl0KQpTYWRseSwgc2hlIGRpZG4gd2luLiAKWW91IGhhdmUgbm8gc2Vuc2Ugb2Ygd2hpY2ggaXMgdXAgb3IgZG93bi4gClRoaXMgcnVsZSBhbHNvIGhhZCBzb21lIHdpZ2dsZSByb29tIHByZXZpb3VzbHkuIApPdmVydmlldyBmb3IgQ2xhY2swODIKVGhlIGNhbGxlciBoYWQgc2FpZCBzb21ldGhpbmcgYWJvdXQgYSBoaWdod2F5LiAKQmVzaWRlcywgdGhlcmUgaXMgL3IvYW5pbWVzdWdnZXN0IGZvciB0aG9zZSBraW5kcyBvZiBwb3N0cy4uIApQYXRob2xvZ2ljYWwgbGlhcnMgYXJlbiBzaW1wbHkgcGVvcGxlIHdobyBsaWUgYSBsb3QuIFRoZXkgcGVvcGxlIHdobyBhcmVuIGV2ZW4gYXdhcmUgdGhhdCB0aGV5IGFyZSBseWluZy4gCkNvbnRpbnVlZCBob3QgYW5kIGh1bWlkIEZyaWRheSB0aHJvdWdoIFN1bmRheSwgd2l0aCBhIGNoYW5jZSBvZiBhIHRodW5kZXJzdG9ybSBsYXRlIGVhY2ggZGF5LCBhZnRlcm5vb24gaGlnaHMgODggdG8gOTUuIApCdXQgc3BhY2UgYWJvYXJkIG1lcmNoYW50IHNoaXBzIHdhcyBhdCBhIHByZW1pdW0sIHNvIHJhdGhlciB0aGFuIHN0dWZmIHNoaXBzIGhvbGRzIHdpdGggdGltYmVyLCBpdCB3YXMgZGVjaWRlZCB0byB1c2UgdGhlIENhbmFkaWFucyBvdmVyIGluIEV1cm9wZSwgY3V0dGluZyBkb3duIGZvcmVzdHMgaW4gdGhlIFVLIGFuZCBGcmFuY2UuLiAKTW92aW5nIGJleW9uZCB0aGUgcGh5c2ljYWwgYW5kIGludG8gdGhlIGVtb3Rpb25hbC9zcGlyaXR1YWwgaXMgdGhlIGdvYWwgb2YgbWFueSBib2R5d29yayBtb2RhbGl0aWVzLiBXYXRzdSBpcyBub3QgdW5pcXVlIGluIGFpbWluZyBmb3IgaGVhbGluZyBjYXRoYXJzaXMgd2hpbGUgcHJvdmlkaW5nIHBsZW50eSB0byBsb3ZlIG9uIGEgc3RyaWN0bHkgY29ycG9yYWwgbGV2ZWwuIApLb21saSBNZWRpYSBpbmtzIEFQQUMgZGVhbCB3aXRoIHNvY2lhbCBnYW1lcyBzZXJ2aWNlCkFuZCBzbyBBcHBsZSBhdHRlbXB0cyB0byBuZWdvdGlhdGUgdGhpcyB0cnVseSBwZXJ2ZXJzZSBoaXN0b3J5LCBvbmUgd2UgbmV2ZXIgdGFsayBhYm91dCBidXQgcmF0aGVyIHBhbmljIGluc3RlYWQuIHRoZW4sIGFmdGVyIHRoZSBwYW5pYywgd2UgcnVzaCB0byAiYmFyZWx5IGxlZ2FsIiBwb3JuIHNpdGVzIGFuZCB0aGluayB0aGUgQnVubnkgaXMgYm90aCBjdXRlIGFuZCBzZXh5LCBhcyBzaGUgc2hvdWxkIGJlLCBhbmQgdGhlbiBmZWVsIGd1aWx0eSBhbmQgaW5zaXN0IHRoZXJlIGJlIG5vIGFwcHMgb24gb3VyIGkgUGhvbmVzIG9yIGkgUG9kcyB0aGF0IHJlbWluZCB1cyB0aGF0IHdlIEFtZXJpY2FucyBhcmUgcmVhbGx5IGFuZCB0cnVseSBwZXJ2ZXJzZS4KSmUgbiBwYXMgYnJveWVyIGRldXggb3UgdHJvaXMgZGUgY2VzIGh5bW5vcHRyZXMgZGFucyBtb24gbW9ydGllciBwb3VyIHNhdm9pciBkZSBxdW9pIGlsIHJldG91cm5lLCBwZXV0IHRyZSBkZSBjZXQgYWNpZGUgZm9ybWlxdWUgKG91IG10aGFub3F1ZSkgZG9udCBvbiBkb25uZSBsIGNvbW1lIHBudHJhbnRlLiBQbnRyYW50ZS4gClRocmVlIGFmZm9yZGFibGUgbGFiZWxzIHRvIGxvb2sgZm9yIGFyZSB0aGUgUGlwZXIgSGVpZHNpZWNrIEJydXQgKCQ1Ny45OSksIENoYW1wYWduZSBHYXJkZXQgQnJ1dCBUcmFkaXRpb24gKCQ0OS45OSkgYW5kIExlIE1lc25pbCBCbGFuYyBkZSBCbGFuY3MgR2FybmQgQ3J1ICgkNTIuOTkpLiAKVG8gYmUgaG9uZXN0IEkganVtcCBhcm91bmQgbXkgZ2VucmVzIGEgbG90LCBhcyBsb25nIGFzIHRoZSBwcmVtaXNlIGlzIGludGVyZXN0aW5nIGFuZCB0aGUgb3ZlcmFsbCBxdWFsaXR5IGlzIGdvb2QsIEkgY2hlY2sgaXQgb3V0LiBTbyBJIGNvdWxkIGdvIGZyb20gTm9uIE5vbiBCaXlvcmkgdG8gQXR0YWNrIG9uIFRpdGFuIHRvIEh1bnRlciB4IEh1bnRlciB0byBMb3ZlbHkgQ29tcGxleCB0byBFbW1hLiAKVGhpcyBpcyAoaW4gYWxsIHJhdGlvbmFsIGNhc2VzKSBub3QgYSBzcGVjaWZpYyBjbGFpbSwgYnV0IGEgY2xhaW0gYWJvdXQgcHJvYmFiaWxpdGllcyBnaXZlbiBvdXIgY3VycmVudCBrbm93bGVkZ2UuIE5vYm9keSBrbm93cyB0aGVyZSBpcyBhbGllbiBsaWZlLCBidXQgZ2l2ZW4gd2hhdCB3ZSBrbm93IGFib3V0IHZhcmlvdXMgc2NpZW50aWZpYyBmaWVsZHMgaXMgc2VlbXMgdmVyeSBsaWtlbHkgZm9yIHRoZXJlIHRvIGJlIGxpZmUgZWxzZXdoZXJlLiBUaGlzIGlzIHdoeSB3ZSB0ZXN0IGZvciBiaW9sb2dpY2FsIGNoZW1pY2FscyBvbiBNYXJzIGFuZCB3aHkgd2Ugd2FudCB0byBleHBsb3JlIEV1cm9wYS4gVG8gdGVzdCB0aGF0IGh5cG90aGVzaXMuCkFsbCBvZiBhIHN1ZGRlbiB5b3UgaGVhciBzb21lIGd1eXMgc2NyZWFtaW5nIGluIGRpc2d1c3QgYW5kIGV2ZXJ5b25lIHN0YXJ0cyBiYWNraW5nIG9mZiBvZiBoaW0uIEhlIHdhcyBvbiB0aGUgZmxvb3Igd2l0aCB3ZXQgc2hvcnRzLCBzaXR0aW5nIGluIGEgcHVkZGxlIG9mIHVyaW5lLCB0ZWFyeSBleWVkIGFuZCBibGF6aW5nIHJlZC4gCldhc24ndCB1bnRpbCBhYm91dCBhbiBob3VyIGludG8gdGhlIHJpZGUgaG9tZSB0aGF0IEkgc3RhcnRlZCBnZXR0aW5nIGEgZGVlcCwgaG9ycmlibGUgaXRjaCBvbiB0aGUgYmFjayBvZiBteSBuZWNrLiAKSW4gTWFoam9uZyAxNCB0aWxlcyAodGlsZXMgYXJlIGxpa2UgY2FyZHMgaW4gUG9rZXIpIGFyZSBhcnJhbmdlZCB0byA0IHNldHMgYW5kIGEgcGFpci4gCkZsb3AgY29tZXMgUUpUIHJhaW5ib3cuIEhlcm8gY2hlY2tzIGFuZCBpdCBjaGVja3MgYXJvdW5kIHRvIHRoZSBidXR0b24sIGEgcmVndWxhciB3aG8gaGFzIGJlZW4gcGxheWluZyBmYWlybHkgdGlnaHQgYW5kIGhhcyBzaG93biBtZSB0aGUgbnV0cyB0d2ljZSBhbHJlYWR5IHRvbmlnaHQuIApBbGwgc2l4IG9jY3VwYW50cyBvZiB0aGUgcGlja3VwIHRydWNrIHdlcmUga2lsbGVkIGluc3RhbnRseS4gQW1vbmcgdGhlIGRlYWQgd2VyZSBGaWRkbGVyIG1vbSwgV2VuZHksIHRoZW4gMjY7IGhpcyB1bmNsZSBSb2RlcmljayBGaWRkbGVyLCAzMywgYSBtdWZmbGVyIG1lY2hhbmljIGF0IGEgbG9jYWwgZ2FyYWdlOyBoaXMgYXVudCBUZXJyaSBGaWRkbGVyLCAzMCwgYSBHcmFkZSA4IHRlYWNoZXIgb24gbWF0ZXJuaXR5IGxlYXZlOyBhbmQgdGhlaXIgdGhyZWUgeW91bmcgZGF1Z2h0ZXJzIEpvY2VseW4sIDQsIEphc21pbmUsIDMgYW5kIG9uZSBtb250aCBvbGQgS2Fzc2FuZHJlLiAKSW5jbHVkZXMgMyBGUkVFIGRvd25sb2FkcyBmb3IgLiAKU2VlbWVkIHZlcnkgbm9uIHRocmVhdGVuaW5nLiAKSXQncyBqdXN0IHRoYXQgcGVvcGxlIHRlbmQgdG8gZm9yZ2V0IGFuZCBkaXNtaXNzIHRoZWlyIGxvc3NlcyB3aXRoIHRoZSBzYWlkICJsdWNreSIgaGFuZCBwZXJoYXBzIGJlY2F1c2UgdGhleSd2ZSB3b24gYSBodWdlIHBvdCB3aXRoIGl0LiAKQmFuayBvZiBDYW5hZGEgaG9sZHMgcmF0ZSBhcyBsb25nZXIsIGRlZXBlciBzbG93ZG93biBncmlwcyBlY29ub215U3RlcGhlbiBQb2xveidzIGRhc2hib2FyZDogVGhlIGxhdGVzdCBjaGFydHMgdGhhdCBtYXR0ZXIgbW9zdCB0byB0aGUgQmFuayBvZiBDYW5hZGFXZSBnZXR0aW5nIGEgbG9vayBhdCB0aGUgdHJ1ZSBzdGF0ZSBvZiBDYW5hZGEncyBlY29ub215ICAgYW5kIGl0J3Mgbm8gd29ybGQgYmVhdGVyVGhlIEJhbmsgb2YgQ2FuYWRhIG1haW50YWluZWQgaXRzIHRyZW5kIHNldHRpbmcgaW50ZXJlc3QgcmF0ZSBhdCAxLjc1IHBlciBjZW50IFdlZG5lc2RheSwgYXMgZXhwZWN0ZWQuCk92ZXJ2aWV3IGZvciBnYWZmZXI4OApUaGUganVkZ2VzIGlzc3VlZCBhIHdyaXR0ZW4gcnVsaW5nIGluIE1yIEhha2tpIGZhdm91ci4gVGhpcyBkaWQgbm90IGdpdmUgZGV0YWlscyBvZiB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gTXIgSGFra2kgYW5kIE1zIEJsYWlyIG9yIGhvdyBtYW55IGNoaWxkcmVuIGFyZSBpbnZvbHZlZC4KSXQgZW5hYmxlcyB0aGUgYXBwbGljYXRpb24gb2YgdG91Y2ggc2Vuc2luZyBub3Qgb25seSB3aXRoIGRpZmZlcmVudCBmb3JjZSBsZXZlbHMgdGhhdCBjYW4gcmVjb2duaXplIHRvdWNoIGFuZCBwcmVzcyB3aGlsZSB0aGUgdXNlciBpcyBwbGF5aW5nIGdhbWVzLCBidXQgYWxzbyBjYXBhYmxlIG9mIHdvcmtpbmcgd2l0aCB3YXRlciBvciBnbG92ZXMuIEF0IHRoZSBzYW1lIHRpbWUsIGl0IGhhcyBpbnN0YW50IGhhcHRpYyBmZWVkYmFjaywgd2hpY2ggYnJpbmdzIHVzZXIgYSBmdWxsIEhhbmQgaGVsZCBnYW1lIGNvbnNvbGUgZXhwZXJpZW5jZSwgdG90YWxseSBleGNlZWRpbmcgdGhlaXIgZXhwZWN0YXRpb25zLgpUaGUgaG9yc2UgaXMgYSBzeW1ib2wgb2Ygd2FyIGFuZCB2aWN0b3J5LiBPZiBzdWNjZXNzIGZvciB0aG9zZSB3aG8gdGFrZSByaXNrcyBhbmQgd29yayBoYXJkLiBQbGF5IGhhcmQgYW5kIHJlc3QgaGFyZC4gClRoZSBsb3dlciB0aGUgYmV0dGVyLCBvZiBjb3Vyc2UsIHNvIHByZWZlcmFibHkgbm8gb2xkZXIgdGhhbiAyMDExLzIwMTIsIGRlcGVuZGluZyBvbiB0aGUgbW9kZWwuLiAKQmV0d2VlbiBkYWlseSB0cmFkZSBpbnMsIHN0b2NrIHNoaXBtZW50cywgcHJpY2UgY2hhbmdlcywgYW5kIG1hcmtldGluZyBzdHVmZiwgdGhlcmUgcmFyZWx5IGVub3VnaCBwZXJzb25uZWwgdG8gaGFuZGxlIHRoZSB3b3JrbG9hZC4gCkJlY2F1c2UgaXQgaGFwcGVuZWQgc28gZmFzdCBJIGRpZG4gcmVhbGl6ZSBpdCB0aWxsIGFmdGVyIGFuZCBsb29raW5nIGF0IGFsbCB0aGUgY2FyZHMsIGZlbHQgbGlrZSBJIHdhcyBzd2VhdGluZyB0aGUgd29ybGQuLiAKT25saW5lIGNhc2lubyBwb2tlciBoYXMgbXVsdGkgcGxheWVyIHN5c3RlbS4gCllvdSBjYW4gcGljayB1cCB0aGUgc3RpdGNoZXMgYnkgZG9pbmcgdGhlIGVkZ2Ugc3RpdGNoZXMgY29tcGxldGUuIApBbGwgdGhlIHBvcHVsYXIgZ2FtZXMgYnJpbmcgc29tZXRoaW5nIHVuaXF1ZSB0byB0aGUgdGFibGUuIFRoaXMgZG9lc24gbWFrZSBtZWxlZSBhbnkgbW9yZSBvciBsZXNzIHRlY2huaWNhbCBvciB1bmlxdWUgdGhhbiBvdGhlciBmaWdodGVycywgaXQganVzdCB0ZWNobmljYWwgYW5kIHVuaXF1ZSBpbiBpdCBvd24gc3BlY2lhbCB3YXkuLiAKVG8gYmUgY29uc2lkZXJlZCBhIGZ1bGwgc2tpbiBjYXJlIGxpbmUsIE5hdHVyZSdzIFJvb3QgcGxhbnMgdG8gb2ZmZXIgYXQgbGVhc3QgNDAgcHJvZHVjdHMsIHRvIGJlIHVudmVpbGVkIG92ZXIgdGhlIG5leHQgdHdvIHllYXJzLiBJdCBjdXJyZW50bHkgb2ZmZXJzIGEgaGVtcCBiYXNlZCBmYWNlIHNjcnViLCBib2R5IHNjcnViLCBjaGFwc3RpY2ssIGxvdGlvbiwgb2lscywgc29hcHMsIHNhbHZlcyBhbmQgYSBsaXAgc2NydWIuIApUaGUgMjIgeWVhciBvbGQgaGFzIGhhZCBtaW5pbWFsIGZhbnRhc3kgdmFsdWUgdGhpcyBjYW1wYWlnbiwgcmFja2luZyB1cCBqdXN0IDEwIHBvaW50cyBpbiAzOCBnYW1lcy4gCldoZW4gaXQgY29tZXMgdG8gYW55IGFuZCBldmVyeXRoaW5nIGluIEF1c3RyYWxpYSB0aGF0IGlzIGxlZ2FsLCBpdCBmYWlyIGRpbmt1bS4gRXZlcnlvbmUgaXMgZXF1YWwsIGhhcyB0aGVpciByaWdodGZ1bCBwbGFjZSBpbiBzb2NpZXR5LCBhbmQgd2lsbCBoYXZlIHRoZWlyIG9waW5pb25zIGFuZCB3aXNoZXMgcmVzcGVjdGVkLgpDbHViRGVyVG90ZW5EaWNodGVuIHUKQ2FuIG5ldmVyIHN0b3AgaXRzIGNvbnRpbnVvdXMgdG91ciBvZiBpZGlvY3kgYWNyb3NzIHRoZSBvY2VhbiBvciBpdCBmdWNraW5nIHNpbmsuIApMZWZ0IGFsb25lIGFnYWluLCBBdW50aWUgYW5kIEkganVzdCBzaHJ1Z2dlZCBhbmQgcGlja2VkIHVwIG15IGJsb29keSBhbmQgc2hpdCBjb3ZlcmVkIGludGVzdGluZXMgb2ZmIHRoZSBmbG9vciBhbmQgc2hlIGJlZ2FuIHRvIHN0dWZmIHRoZW0gdXAgbXkgdmFqYXlqYXkuCiJUaGVyZSBhcmUgb3ZlciAxMCw4MDAgTWljaGlnYW4gTG90dGVyeSBSZXRhaWxlcnMsIGFuZCBvZiB0aGF0IG51bWJlciwgYXBwcm94aW1hdGVseSA4MCBwZXJjZW50IGhhdmUgdGhlIGVxdWlwbWVudCB0byBzZWxsIFBva2VyIExvdHRvLCIgc2hlIHNhaWQuClRoaXMgSXMgQSBMaXN0IE9mIExlZ2l0aW1hdGUgU2l0ZXMgV2l0aCBSZWFsIFdvbWVuIE9uIFRoZW0KT2xkZXIgaG9tZXMgY2FuIGJlIG1vbmV5IHBpdHMsIGJ1dCB0aGV5IGFyZSBhYnNvbHV0ZWx5IGJlYXV0aWZ1bCBpZiB5b3UgaGF2ZSB0aGUgZmluYW5jaW5nIHRvIHB1dCBpbnRvIHRoZW0uIApTdG9yaWVzIGxpa2UgdGhlc2UgYXJlIHByb2ZpdGFibGUgYW5kIGVudGVydGFpbmluZywgdGhleSBhcmVuIGluZm9ybWF0aXZlICAgYW5kIHRoZXkgbm90IHBsYXllZCBiZWNhdXNlIHRoZXkgYXJlIGluZm9ybWF0aXZlICAgdW5sZXNzIHlvdSB0aGluayBwZXIgY2FwaXRhIEdEUCBhbmQgY29tcG9uZW50IGFuYWx5c2lzIGFyZSB3aGF0IENOTiBhbmQgdGhlIE5ldyBZb3JrIFRpbWVzIGFyZSBpbnRlcmVzdGVkIGluLi4gCkFuZ2xlIGlzIGV2ZXJ5dGhpbmcuIElmIHlvdXIgYW5nbGUgY2hhbmdlcyB5b3UgZ2V0IGJhZCByZXN1bHRzLiBUaGUgbW9zdCBzaW1wbGUgYW5kIGFjY2Vzc2libGUgdGhpbmcgdG8gdXNlIGlzIDIgcGVubmllcy4gCkEgbG90IG9mIHBlb3BsZSBhcmUgc2F5aW5nIHRoaXMgaXMgbm8gcHJvYmxlbSwgYnV0IHRoZXkgaGF2ZSB0b28gbXVjaCBmYWl0aCBpbiBjaXJjdWl0IGJyZWFrZXJzLiBDYW4gdGhvc2UgY2hlYXAgcG93ZXIgYmFycyB0YWtlIGEgZnVsbCAxNSBhbXAgZHJhdyBmcm9tIGFueSBzb2NrZXQ/IEl0J3Mgbm90IGltcG9zc2libGUgdGhhdCB3b3VsZCBoYXBwZW4gYmVjYXVzZSB5b3UgaGF2ZSBzcGxpdHRlcnMgcGx1Z2dlZCBpbnRvIHNwbGl0dGVycy4gQWxzbywgdGhlIG91dGxldCBjb3VsZCBzbW9rZSBhbmQgYnVybiBpZiBhIHdpcmUgaXMgbm90IHRpZ2h0bHkgZmFzdGVuZWQsIG9yIGEgMTUgYW1wIG91dGxldCBpcyBvbiBhIDIwIGFtcCBjaXJjdWl0LiBJIHNtb2tlZCBhbiBvdXRsZXQgYXMgYSB5b3V0aCBwbHVnZ2luZyBhIGRlc2t0b3AgY29tcHV0ZXIgaW50byBhIHdhbGwgb3V0bGV0IHdpdGggYSB3aW5kb3cgdW5pdCBBQwpSZW1lbWJlciwgdGhlIHBvaW50IG9mIGEgbWFzc2FnZSBpcyB0byBtYWtlIHRoZW0gZmVlbCBnb29kLCBub3QgeW91Li4gClNvLCBJIHRoaW5rIHdpdGggdGhpcyBsYXRlc3QgImNvbmZlc3Npb24iIHNvbWUgdGhpbmdzIG1ha2UgbW9yZSBzZW5zZSB1bmZvcnR1bmF0ZWx5LiAKSSBtZW50aW9uZWQgb24gYW5vdGhlciB0aHJlYWQgdGhhdCBjYXN0aW5nIGEgbm9uIHdoaXRlIGFjdG9yIGluIGEgcm9sZSBleHBsaWNpdGx5IGRlc2NyaWJlZCBhcyB3aGl0ZSBieSB0aGUgc291cmNlIG1hdGVyaWFsIHNlZW1zIHRvIGhvbGQgbW9yZSBpbmhlcmVudCBiaWFzZXMgdGhhbiBzaW1wbHkgY2FzdGluZyBhIHdoaXRlIGFjdG9yLiBUaGlzLCBpbiB0dXJuLCBtYWtlcyB0aGluZ3MgbW9yZSBjb21wbGljYXRlZCB0aGFuIHRoZXkgc2hvdWxkIGJlLiBJZiBubyAicG9saXRpY2FsIGJpYXNlcyIgd2VyZSBhcHBsaWVkLCBjYXN0aW5nIHdvdWxkIHByb2JhYmx5IGdvIHNvbWV0aGluZyBsaWtlIHRoaXM6IENoYXJhY3RlciBkZXNjcmliZWQgYXMgd2hpdGUgYnkgc291cmNlIG1hdGVyaWFsICA+IE9wZW4gYSBjYXN0aW5nIGNhbGwgZm9yIHdoaXRlIGFjdG9ycyAgPiBDYXN0IGJlc3QgYWN0b3Igb3V0IG9mIHRoaXMgYnVuY2guIFR3byBzdGVwIGNhc3RpbmcuCk15IGZpcnN0IHRob3VnaHQgd2FzIHRvIHJ1biB0byBteSBwdXBweSAob25seSA0IG1vbnRocyBvbGQgYXQgdGhlIHRpbWUpIGluIGhpcyBjcmF0ZSBhbmQgZ2V0IGhpbSBvdXQgaW50byBmcmVzaCBhaXIuIApIb25lc3RseSwgSSBsb29rZWQgdXAgdG8gaGVyIGNoYXJhY3RlciBTYW0gc28gbXVjaCBhcyBhIGtpZC4gCkNvbWUgZXhwZXJpZW5jZSB0aGUgdWx0aW1hdGUgaW4gbHV4dXJpZXMsIG9mZmVyZWQgYnkgdGhlIG1vc3QgbGVnZW5kYXJ5IG5hbWUgaW4gZ2FtaW5nLiBBICQxMCBtaWxsaW9uIHJlbm92YXRpb24gaGFzIGdpdmVuIENhZXNhcnMgQ2lyY3VzIE1heGltdXMgVGhlYXRlciBhIHN0dW5uaW5nIG5ldyBsb29rOyB3aXRoIG1vcmUgdGhhbiAxNTAwIHN0YWRpdW0gc3R5bGUgc2VhdHMsIGEgZnVsbCBzZXJ2aWNlIGJhciBhbmQgdGhlIG1vc3QgdW5iZWxpZXZhYmxlIHNvdW5kIHN5c3RlbSB5b3UndmUgaGVhcmQgdG8gZGF0ZS4gRW5qb3kgdGhlIGJpZ2dlc3QgbmFtZXMgZnJvbSB0aGUgd29ybGQgb2YgbXVzaWMsIGVudGVydGFpbm1lbnQsIGFuZCBhdGhsZXRpY3MuIApJIGRpc2FncmVlIHN0cm9uZ2x5IHdpdGggdGhlIGlkZWEgInlvdSBoYXZlIHRvIGhhdmUgYSBmdWxsIGRvc2UgZmlyc3QiLiBJIGZlZWwgdGhlcmUgYXJlIG1hbnkgZm9sa3Mgb24gdGhpcyBmb3J1bSB3aG8gYXJlIGZhbnMgb2YgdHJpcHBpbmcgYW5kIHRoaW5rIG9mIG1pY3JvZG9zaW5nIGFzIGp1c3Qgc29tZXRoaW5nIGxpa2UgImxpZ2h0IHRyaXBwaW5nIi4gClBvbGl0aWNhbCB2aWV3cG9pbnQgdGhleSBwcm90ZWN0LiBUaGVyZSBpcyBhIHF1ZXN0aW9uIG9mIGpvdXJuYWxpc3RpYwpEaWUgQnJhbmNoZW52ZXJibmRlIGJlaGF1cHRlbiB6d2FyIGdlcm4sIGRpZSBBbnRlaWxlIHZvbiBTcGllbGVybiB1bmQgU3BpZWxlcmlubmVuIHNlaWVuIGV0d2EgZ2xlaWNoLiA0NyBQcm96ZW50IGRlciBHYW1lciBzZWllbiBuYWNoIGVpbmVyU3R1ZGllIGRlcyBWZXJiYW5kcyBnYW1lIiB2b24gMjAxNndlaWJsaWNoLiBBYmVyIGF1ZiBzb2xjaGUgWmFobGVuIGtvbW10IG51ciwgd2VyIFpldWcgd2llIENhbmR5IENydXNoIFNhZ2EgYXVmIGRlbSBIYW5keSBtaXR6aGx0LiAKVGhlIHNsZWVwIGRlcHJpdmF0aW9uIGlzIHRoZSB3b3JzdCBhbmQgaWYgeW91IGNhbiBmaW5kIGEgd2F5IHRvIGdldCBzb21lIGhlYWx0aHkgc2xlZXAsIGdvIGZvciBpdCEuIApJIGRpc2FncmVlIHdpdGggeW91ciBlbnRpcmUgc2Vjb25kIHBhcmFncmFwaC4gQXBhcnQgZnJvbSB0aGF0IGxvZ2ljIGJlaW5nIGNvbXBsZXRlbHkgdW5mb3VuZGVkIChhcyBpZiBwcGwgZ28gdG8gYXJ0IHNjaG9vbCBhbmQgZ2V0IGEgcm9hZCB0byBmYW1lIGFuZCBmb3J0dW5lIGltbWVkaWF0ZWx5IHVwb24gZ3JhZHVhdGlvbikuIEJlbGlldmUgaXQgb3Igbm90IHBwbCB3b3VsZCBzdGlsbCBnbyB0byBzY2hvb2wgZm9yIG11c2ljLCB0aGVhdHJlIGFuZCBhcnQgYW5kIGRlZGljYXRlIHRoZW1zZWx2ZXMgY29tcGxldGVseSB0byBpdCBkZXNwaXRlIGZpbmFuY2VzLiAKVGVyZXNhLCBmaXJzdC4gTWlub3IgcGV0IHBlZXZlIGFzIHNoZSB3YXMgdGhlIHZpY3RpbSBoZXJlIGFuZCBwZW9wbGUgc2hvdWxkIGF0IGxlYXN0IGtub3cgaGVyIG5hbWUgaW5zdGVhZCBvZiBvYnNlc3Npbmcgb3ZlciBoZXIga2lsbGVyLiBCdXQgeW91IGNhbiBzZWUgcGljdHVyZXMgb2YgdGhlIGhvbGUgaW4gdGhlIHNrdWxsIGZyYWdtZW50IGhlcmUgc28gaXQgYSBiaXQgbW9yZSB0aGFuIGFuIGFsbGVnYXRpb24gdGhhdCBzaGUgd2FzIHNob3QgaW4gdGhlIGhlYWQgIHNoZSB3YXMuCkkgYW0ga2luZGEgZ2xhZCBJIHNwZW50IGhhbGYgbXkgdHdlbnRpZXMgd29ya2luZyBzaGl0IHNlcnZpY2Ugam9icyBkZWFsaW5nIHdpdGggYXNzaG9sZXMgZnJvbSB0aGUgcHVibGljIGJlY2F1c2UgSSBzdXJlIGFzIGhlbGwgYXBwcmVjaWF0ZSBteSBib3JpbmcgcHJvZ3JhbW1pbmcgam9iLiBUb3AgcG9zdCBhYm91dCBsb3ZpbmcgeW91ciBqb2IgYmVpbmcgYSBtZW1lIGlzIHNwb3Qgb24uIApXaGlsZSBtb3ZpbmcgeW91IHRocm91Z2ggdGhhdCByYW5nZSBvZiBtb3Rpb24sIHlvdSB3b3VsZCBiZSByZXNpc3RpbmcgaGltIGJ5IHByZXNzaW5nIHlvdXIgZm9vdCBkb3duIHRvd2FyZHMgdGhlIHRhYmxlIHRoZXJlYnkgY29udHJhY3RpbmcgeW91ciBoYW1zdHJpbmdzLiAKQSBzaWduaWZpY2FudCBwb3J0aW9uIG9mIG15IHRpbWUgd3JpdGluZyBTY2FsYSBvdmVyIHRoZSBsYXN0IGZldyB5ZWFycyBoYXMgYmVlbiBzcGVudCBkZSBmdW5jdGlvbmFsaXppbmcgYmVhdXRpZnVsIGNvbmNpc2UgZnVuY3Rpb25hbCBjb2RlIHRvIG1ha2UgaW1wZXJhdGl2ZSBjb2RlIHRvIG1lZXQgcGVyZm9ybWFuY2UgZ29hbHMuIApJZiB5b3UgbG9zZSwgeW91IGZlZWwgbGlrZSBzaGl0LiBBbHdheXMuLiAKVGhhdCBkaWRuJ3Qgc3RvcCB0aGUgZ3V5IHRvIG15IGltbWVkaWF0ZSByaWdodCBhdCBhIHBva2VyIHRhYmxlIGF0IENhZXNhcnMgZnJvbSBjcml0aWNpemluZyBQaGVscHMuIApXaXRoIGl0cyBzdGFpbmVkIGdsYXNzIHdpbmRvd3MgIG1hZGUgYnkgUmVlcGhhbSBiYXNlZCBJYW4gUG9ja2xpbmd0b24gICBvbiB0aGUgd2F5LCBhbmQgYSBjb3N5IGludGVyaW9yIGRlY29yLCBOaWdlbCBpcyBmaXR0aW5nIHRoZSB3YWdnb24gb3V0IHdpdGggYSB3YXNoc3RhbmQsIGNhcnBldCwgZG91YmxlIGJlZCBhbmQgaG9tZSBmb3JnZWQgaXJvbndvcmsgZmVhdHVyZXMgc3VjaCBhcyBjdXJ0YWluIHBvbGVzLCB0b2FzdGluZyBmb3JrcyBhbmQgYm9vayByZXN0cy4gQnV0IHByb2JhYmx5IG5vdCBlbGVjdHJpY2FsIG1vZCBjb25zLi4gCkNoaWVmIGFtb25nc3QgdGhlbSBpcyB5b3VyIHByZWZlcnJlZCBzcGVsbCBvZiBUaHVuZGVyc3Rvcm0uIApTaGUgaGFzIGFsc28gYmVlbiBwdWJsaXNoZWQgaW4gQnJhbnNvbiBJbnNpZGVyIG5ld3NwYXBlci4gR3JpZmZpbiBpcyBhIENQUi9maXJzdCBhaWQgaW5zdHJ1Y3RvciB0cmFpbmVyIGZvciB0aGUgQW1lcmljYW4gUmVkIENyb3NzLCBvd25zIGEgYnVzaW5lc3MgYW5kIGNvbnRpbnVlcyB0byB3cml0ZSBmb3IgcHVibGljYXRpb25zLiBTaGUgcmVjZWl2ZWQgYSBCYWNoZWxvciBvZiBBcnRzIGluIEVuZ2xpc2ggY29tcG9zaXRpb24gZnJvbSBWYW5ndWFyZCBVbml2ZXJzaXR5Li4gCkNoYW5nZXIgOiBvdWkgbWFpcyBwYXMgdG91dCBkJ3VuIGNvdXAgOiBpbCBzJ2FnaXQgcGx1dHQgZGUgbWV0dHJlIGVuIHBsYWNlIGRlcyB0YXBlcyBlbiBsaWVuIGF2ZWMgY2UgcXUnb24gYSBjb21wcmlzLCBwb3VyIHByb2dyZXNzaXZlbWVudCBtb2RpZmllciBzZXMgaGFiaXR1ZGVzIGFsaW1lbnRhaXJlcywgcXUnaWwgcydhZ2lzc2UgZGVzIHF1YW50aXRzLCBkdSBjb250ZW51IGRlIGwnYXNzaWV0dGUsIGRlIGwnb3JnYW5pc2F0aW9uLCBkZSByYXBwcmVuZHJlICBjb3V0ZXIgc2EgZmFpbSwgZGUgbGEgZ2VzdGlvbiBkdSBzdHJlc3MsIGQnYXBwcmVuZHJlICBjb3V0ZXIgc2VzIGVudmllcyBldCBzYXZvaXIgZGlyZSBub24sIGRlIHJlbWFuZ2VyIGRlcyBhbGltZW50cyBxdSdvbiBzJ2ludGVyZGlzYWl0IHNhbnMgY3VscGFiaWxpc2VyIC4gClNvb24sIGJ1dCBJJ20gbm90IGV4cGVjdGluZyBtdWNoIG91dCBvZiBpdCBiZWNhdXNlIGZvciBtZSBpdCdzIGp1c3QKVGhpcyBpcyBteSBiZXN0IGxlYWQgaWYgSSBhc3N1bWUgYWxsIG15IGxldHRlcnMgdGh1cyBmYXIgYXJlIGNvcnJlY3QsIGhvd2V2ZXIgdGhlIHB1bmN0dWF0aW9uIG9uIHRoZSBHZXJtYW4gY2FyZCB3b3VsZCBub3Qgc3VwcG9ydCB0aGlzIGFjdGlvbi4gClRoZXNlIGdsYW5kcyBhcmUgdXN1YWxseSBjb25uZWN0ZWQgdG8gYW4gaW5kaXZpZHVhbCBoYWlyIGZvbGxpY2xlIChleGNlcHQgb24gaGFpcmxlc3MgcGxhY2VzIGxpa2UgeW91ciBleWVsaWRzIGFuZCBsaXBzLCB3aGVyZSB0aGV5IHdvcmsgYWxvbmUpLiAKR3Vlc3RzIGVuam95IDMsNTAwIG9mIHRoZSBsYXRlc3Qgc2xvdHMsIGxpdmUgcG9rZXIgYW5kIFZlZ2FzIHN0eWxlIGJsYWNramFjaywgaGlnaCBsaW1pdCBnYW1pbmcsIGhpZ2ggbGltaXQgc3Rha2VzIGJpbmdvLCBpbmNyZWRpYmxlIGVudGVydGFpbm1lbnQsIHN1bXB0dW91cyBkaW5pbmcgYW5kIGdlbmVyb3VzIHBsYXllciByZXdhcmQgcHJvZ3JhbS4gT3duZWQgYW5kIG9wZXJhdGVkIGJ5IHRoZSBTYW4gTWFudWVsIEJhbmQgb2YgTWlzc2lvbiBJbmRpYW5zLCB0aGUgY2FzaW5vIGhhcyBiZWVuIHByb3ZpZGluZyBmdW4gYW5kIGV4Y2l0ZW1lbnQgc2luY2UgMTk4Ni4gCk9mIGNvdXJzZSBZb3Ugd2lsbCBoYXZlIHRvIHJlYWNoIHRoZSBwYWlkIHBvc2l0aW9ucyBpbiB0aGUgZnJlZSBwb2tlciB0b3VybmFtZW50cyB0byBnZXQgWW91cnNlbGYgc29tZSBmcmVlIG9ubGluZSBwb2tlciBtb25leSB0aGlzIHdheS4gCkluIGNvbXBhcmlzb24sIFBNVSBwYWlkIDEyJSBpbiBGcmVuY2ggdGF4ZXMgYW5kIDglIHRvIHRoZSBGcmVuY2ggZXF1aW5lIGluZHVzdHJ5LiAKQW5kIHlvdSBhcmUgd2VsY29tZSB0byBvcHBvc2UgdGhhdCwgYWx0aG91Z2ggZGVzdHJveWluZyBpdCB3b3VsZCBtb3N0IGxpa2VseSB0b3BwbGUgdGhlIFVTIGVjb25vbXk7IHBlcmhhcHMgdGhhdCB3b3VsZG4gYmUgc3VjaCBhbiBhd2Z1bCB0aGluZywgSSBjYW5ub3Qgc2F5LiAKVGhlaXIgYmlnIGJyZWFrIHdhcyBpbiAyMDA5IHdoZW4gYSBWYW5jb3V2ZXIgcHJvcGVydHkgb24gR3JhbnZpbGxlIFN0cmVldCBjYW1lIHVwLiBUaGV5IGZvdW5kZWQgSlJHIGFuZCBvcGVuZWQgSm9zZXBoIFJpY2hhcmQgTmlnaHRjbHViIChiYXNlZCBvbiB0aGVpciBtaWRkbGUgbmFtZXMpLiBCb3VycXVlIHNheXMgdGhleSBoYWQgdG8gcHVsbCBvdXQgYWxsIHRoZSBzdG9wcyB0byBmdW5kIHRoZSAkMSBtaWxsaW9uIHByb2plY3QuIApNaW5lIGlzIGFuIGluZGVwZW5kZW50IHNvdWwuIApNZWFud2hpbGUsIGFzIGZhciBhcyBJIGhlYXJkLCBpbiBBbWVyaWNhIHRoZXJlIGFyZSB3aG9sZSBjdWx0IGxpa2UgY29tbXVuaXRpZXMgbGlrZSB0aGlzIChhbmQsIGFwcGFyZW50bHksIHRoZXkgc28gY29tbW9uLCBub2JvZHkgaXMgcmVhbGx5IHNob2NrZWQgYWJvdXQgaXQpLi4gClRoZSBvbmx5IHRoaW5nIEkgY29uc2lkZXIgY2hhbmdpbmcgaXMgb3B0aW5nIGZvciB0aGUgNW1tIGluc3RlYWQgb2YgdGhlIDNtbSB6aXAuIEkgd2VudCBmb3IgdGhlIHdlaWdodCBzYXZpbmcsIGFuZCBpdCBub3QgYXdmdWwsIGJ1dCBpdCBkb2VzIGZlZWwgbGlrZSB0aGUgd2Vha2VzdCBwb2ludCBvbiB0aGUgYmFnLiBBbHNvLCBJIHdlbnQgZm9yIGJsYWNrIGJlY2F1c2UgSSBmaWd1cmVkIGl0IHNob3cgdXAgZHVzdCBsZXNzLCBidXQgSSBkbyBzbGlnaHRseSByZWdyZXQgbm90IHN0aWNraW5nIHdpdGggdGhlIHRveGljIG5lb24gZ3JlZW4uClRoZSB0aGlyZCB0aW1lLCBzaGUgZ2F2ZSBtZSBoZXIgcGhvbmUgbnVtYmVyLCBhbmQgaXQgdHVybmVkIG91dCBzaGUgbGl2ZWQgbG9jYWxseS4gClRoZXJlIGEgZGFydGJvYXJkLCBiaWcgc2NyZWVucyBhbmQgbG90cyBvZiBzaWducyBmb3IgdGhlIGxpa2VzIG9mIHF1aXp6ZXMgYW5kIGEgcG9rZXIgbGVhZ3VlLiBUaGUgZnVuY3Rpb24gcm9vbSB3YXMgYm9va2VkIG91dCB3aGlsZSBJIHdhcyB0aGVyZSB0b28uCkljeSBTdHJhaXQgUG9pbnQgaXMgb24gQ2hpY2hhZ29mZiBJc2xhbmQgYW5kIGNsb3NlIHRvIEhvb25haCwgdGhlIGxhcmdlc3QgbmF0aXZlIFRsaW5naXQgSW5kaWFuIHNldHRsZW1lbnQgaW4gQWxhc2thLiBBY2NvcmRpbmcgdG8gYSBUbGluZ2l0IHNheWluZywgIndoZW4gdGhlIHRpZGUgb3V0LCB0aGUgdGFibGUgaXMgc2V0IiBhbmQgdGhlIGxvY2FscyBoYXZlIGEgc3Ryb25nIGNvbm5lY3Rpb24gd2l0aCB0aGUgc2VhLiBUaGV5IHNoYXJlIHRoZSB3YXRlciB3aXRoIGh1bXBiYWNrIHdoYWxlcywgb3JjYSwgZG9scGhpbnMsIHNlYWxzLCBvdHRlcnMsIHRoZSBtYXNzaXZlIGhhbGlidXQgYW5kIGZpdmUgc3BlY2llcyBvZiBzYWxtb24uLiAKQ29udGVudCB0aGF0IGlzIHNpbXBseSBkZXNpZ25lZCB0byByaWxlIHVwIHRoZSBzdWJyZWRkaXQgaXMgbm90IGFsbG93ZWQuIApPaCwgYW5kIGZpbmQgc29tZSBleCBtZW1iZXJzIG9mIHRoYXQgY2h1cmNoLiBZb3UgbGVmdCBhIHdvcmxkIGFsbCB5b3VyIGNoaWxkaG9vZCBtZW1vcmllcyBhcmUgaW4gZm9yIGEgd29ybGQgdGhhdCBjYW4gcmVsYXRlIHRvIHRoZW0gYXQgYWxsLgpDbGFyayBDb3VudHkgU2hlcmlmZiBKb2UgTG9tYmFyZG8gaG9sZHMgYSBtZWRpYSBicmllZmluZyBhdCBNZXRybyBQb2xpY2UgaGVhZHF1YXJ0ZXJzIGluIExhcyBWZWdhcyBXZWRuZXNkYXksIE9jdC4gNCwgMjAxNy4gSW52ZXN0aWdhdG9ycyB0cnlpbmcgdG8gZmlndXJlIG91dCB0aGUgTGFzIFZlZ2FzIGd1bm1hbiwgU3RlcGhlbiBQYWRkb2NrIHN0YXRlIG9mIG1pbmQgaGF2ZSBzbyBmYXIgYmVlbiBzdHltaWVkIGJ5IHRoZSBzZWNyZXQgbGlmZSBoZSBhcHBlYXJlZCB0byBsZWFkIGJlZm9yZSB0aGUgYXR0YWNrIG9uIGEgY291bnRyeSBtdXNpYyBjb25jZXJ0IG9uIHRoZSBMYXMgVmVnYXMgU3RyaXAgU3VuZGF5LiAoU3RldmUgTWFyY3VzL0xhcyBWZWdhcyBTdW4gdmlhIEFQKQpUaGUgZGVjbGFyYXRpb25zIG9mIHdhciBvbiBHZXJtYW55IHdlcmUgZ2VzdHVyZXMgd2hpY2ggZXZlbiBzb21lIHN0YXVuY2ggYW50aSBOYXppcyB0aG91Z2h0IGZvb2xpc2gsIGJlY2F1c2UgZnV0aWxlLiBGb3IgZXZlcnkgZXZlbnR1YWwgYmVsbGlnZXJlbnQgc2F2ZSB0aGUgUG9sZXMgdGhlbXNlbHZlcywgdGhlIHN0cnVnZ2xlIGJlZ2FuIHNsb3dseTogb25seSBpbiBpdHMgdGhpcmQgeWVhciBkaWQgZ2xvYmFsIGRlYXRoIGFuZCBkZXN0cnVjdGlvbiBhdHRhaW4gdGhlIHZhc3RuZXNzIHN1c3RhaW5lZCB0aGVyZWFmdGVyIHVudGlsIDE5NDUuIApPYnZpb3VzbHkgYWxsIHNldHMgYXJlIHBvc3NpYmxlIGFsb25nIHdpdGggSlQsIGJ1dCBJIGV4cGVjdCBBSiwgS1EsIG9yIEFRZGQgYSBnb29kIHBlcmNlbnRhZ2Ugb2YgdGhlIHRpbWUuIApUaGUgc2Vjb25kIEkgZXhwcmVzcyBhIGRlc2lyZSB0byBkbyBzb21ldGhpbmcgdGhleSB3ZXJlIG5vdCBvbiBib2FyZCB3aXRoLCBpdCB3YXMgdGhyZWF0cyB0aGF0IHRoZXkgc3RvcCBwYXlpbmcgbXkgdHVpdGlvbiwgbXkgcmVudCwgbXkgYmlsbHMuIApUaGV5IHdlcmUgdmVyeSBkaXNjcmV0ZSB1bnRpbCB5b3UgYWN0dWFsbHkgZ290IGludG8gdGhlIG1hc3NhZ2UgYW5kIHRoZXkgY2hhbmdlZCB3aGVuIHlvdSBkaWQuIApJIHN1Z2dlc3QgdGFsa2luZyB0byBtYW5hZ2VtZW50IGZpcnN0LiBFeHBsYWluIHRoYXQgaGUgaXMgdW5hYmxlIHRvIHNlZSBjZXJ0YWluIHBhdGllbnRzIGFuZCBpcyBsb3Npbmcgb3V0IG9uIGFwcG9pbnRtZW50cyBiZWNhdXNlIG9mIHRoaXMuIElmIHRoZXkgbm90IHdpbGxpbmcgdG8gY2hhbmdlIHRoZSBydWxlIChhbmQgY2Fubm90IGNpdGUgYSBsYXcgcGVybWl0dGluZyBzdWNoIGRpc2NyaW1pbmF0aW9uKSBJIHN1Z2dlc3QgY29udGFjdGluZyB0aGUgTWFyeWxhbmQgQ29tbWlzc2lvbiBvbiBDaXZpbCBSaWdodHMgYW5kIHBvc3NpYmx5IGEgcHJpdmF0ZSBhdHRvcm5leSBzcGVjaWFsaXppbmcgaW4gZW1wbG95bWVudCBsYXcuLiAKV2l0aCB0aGUgZXhjZXB0aW9uIG9mIChtYXliZSkgVGhvciwgdGhlIE1DVSBjYW4gYmUgcG9pc29uZWQgb3IgZGVzdHJveWVkIGJ5IGEgZmx1cnJ5IG9mIG51a2VzLiBNYXliZSBUaG9yIGNvdWxkIHRha2Ugb25lLCBidXQgY291bGQgaGUgdGFrZSAzIG9yIDQ/IElNTyB0aGUgc3RhciBmZWF0IGlzIGltcHJlc3NpdmUsIGJ1dCB3aGF0IGlmIFRob3Igd2VyZSBiZWluZyBjb25zdGFudGx5IG5hcGFsbWVkIGJ5IGEgbGl0ZXJhbCBlbmRsZXNzIGZsdXJyeSBvZiBkcm9uZXM/IFdoYXQgd291bGQgaGFwcGVuIHdoZW4gdGhlIG1pbGl0YXJ5IHB1dHMgYSB3YWxsIG9mIGJhYmllcyBhcm91bmQgdGhlaXIgYmFzZXM/IElmIG1vcmFscyBhcmUgb24sIEkgY2FuIHNlZSBtb21lbnRzIG9mIGhlc2l0YXRpb24gd2l0aCBtb3N0IG9mIHRoZXNlIGhlcm9zLiBUaGUgbWlsaXRhcnkgY291bGQgY2FwdHVyZSB0aGUgTUNVcyBsb3ZlZCBvbmVzIGRvcHBsZWdhbmdlcnMgKHRoZSBvbmVzIGF2YWlsYWJsZSkgb3IgaG9zdGFnZXMsIGFuZCB1c2UgcHN5Y2hvbG9naWNhbCB3YXJmYXJlLiBUaGUgTUNVIHdvdWxkIHRpcmUgYmVmb3JlIHRoZXkgY2FuIGRlZmVhdCB0aGUgRU5USVJFIG1pbGl0YXJ5LiBJdCdzIHNpbXBseSB0b28gbXVjaCBtYW5wb3dlci4KVGhlIFNhZmV0eSBvZiB0aGUgSG9tZQpCdXQgd2FpdCwgdGhlIHBsb3QgdGhpY2tlbnMuIFRoZXJlIGlzIGFub3RoZXIgcmVhc29uIGZvciBoYXZpbmcgYSBzaG9ydGVyIGRyaXZlci4gVGhlcmUgaXMgYW1wbGUgZXZpZGVuY2UgdGhhdCwgaW4gdGhlIGhhbmRzIG9mIHJlYWwgcGVvcGxlLCB0aGUgc2hvcnRlciBkcml2ZXIgbWlnaHQgdmVyeSB3ZWxsIGhpdCB0aGUgYmFsbCwgbm90IGp1c3Qgd2l0aCBtb3JlIGFjY3VyYWN5LCBidXQgbW9yZSBkaXN0YW5jZSBhcyB3ZWxsLiBGb3IgZXZlcnkgcXVhcnRlciBpbmNoIHlvdSBtaXNzIHRoZSAic3dlZXQgc3BvdCIgb24geW91ciBkcml2ZXIsIHlvdSBsb29zZSBhYm91dCBmaXZlIHlhcmRzIGluIGRpc3RhbmNlLiAKQW5vdGhlciBpbXBvcnRhbnQgdGltZSB0byBleGVyY2lzZSB5b3VyIG93biBqdWRnbWVudCBvdmVyIHlvdXIgcG9rZXIgY2FsY3VsYXRvciBpcyB3aGVuIHlvdSBoYXZlIGEgaHVnZSBsZWFkIG9yIGJpZyBjaGlwIHN0YWNrIGluIGNvbXBhcmlzb24gdG8geW91ciBvcHBvbmVudHMuIEluIHN1Y2ggYSBzY2VuYXJpbyB3aGVuIHlvdSBoYXZlIHNvbWVvbmUgb3V0IGNoaXBwZWQgbGlrZSA1IG9yIDYgdG8gMSwgaXQgaXMgaW1wZXJhdGl2ZSB5b3UgbWFrZSB1bmRlcmRvZyBjYWxscyB0aGF0IG5vcm1hbGx5IGFyZSBhIGZvbGQgc2l0dWF0aW9uLiBXaXRoIHJpc2luZyBibGluZHMsIHNob3J0IHN0YWNrcyB3aWxsIGJlIGdvaW5nIGluIHdpdGggYSB3aWRlIHZhcmlldHkgb2YgaGFuZHMgc28gZXhjZXB0IGZvciBkb21pbmF0ZWQgQWNlIFggaG9sZSBjYXJkcywgeW91IHNob3VsZCBiZSBsb29raW5nIHRvIGdldCB0aGVtIGFsbCBpbi4gWW91IHdvbid0IHdpbiB0aGVtIGFsbCwgYnV0IGlmIHlvdSB3aW4gb25lIG9mIHRocmVlIHNpdHVhdGlvbnMgeW91IGFyZSBzdGlsbCB0aGUgdGFibGUgY2FwdGFpbi4KRWRpdDogYWxzbywgSSB3YW50IHRvIGV4cHJlc3MgbW9yZSB0aGFuIGFueXRoaW5nIHRoYXQgaXQgc3Vja3MgdG8gYmUgcGxvd2VkIGluLiBJIGRvIHVuZGVyc3RhbmQgICBJIGhhZCB0byBzdHJlZXQgcGFyayBmb3IgMTAvMTEgeWVhcnMgSSBsaXZlZCBoZXJlLiBObyBvbmUgc2hvdWxkIGJlIHBsb3dpbmcgaW50byB0aGUgc3RyZWV0LCBhbmQgbm8gb25lIHNob3VsZCBiZSB0YWtpbmcgc29tZW9uZSBlbHNlIHNwb3QgSUYgdGhleSBrbm93IHRoYXQgd2hhdCBpdCBpcy4gCk90aGVycywgc3VjaCBhcyB0aGUgbGVhZCBkZXRlY3RpdmUgYW5kIHRoZSBmb3JtZXIgUGFsbSBCZWFjaCBwb2xpY2UgY2hpZWYsIGFncmVlZCB0byBiZSBpbnRlcnZpZXdlZCBmb3IgdGhlIGZpcnN0IHRpbWUuLiAKJ0FsbCBteSByaWNoIGZyaWVuZHMgZ290IHJpY2hlciwgMjAgcGVyY2VudCByaWNoZXIgaW4gZXZlcnkgeWVhciwgYnV0IGhlIHdvdWxkbid0IHRha2UgbWluZSB0aWxsIGhlIGNvdWxkIGdldCBpdCBhbGwgICB0aGUgc3RvY2tzLCB0aGUgYm9uZCwgdGhlIGhvdGVsLiBCZXJuaWUgd2VudCB0byBwcmlzb24gYW5kIEkgbG9zdCBldmVyeXRoaW5nLicKUTogeWVhciwgZGlkIHlvdSBwbGFjZSBpbiB0aGUgdG9wIDEsMDAwPyB3YXMgNjM0dGgsIEkgYmVsaWV2ZSwgc28gZm91ciBkYXlzIHBva2VyIHRoYXQgd2FzIHZlcnkgZXhoYXVzdGluZyBhbmQgY2hhbGxlbmdpbmcgbWVudGFsbHkuIEkgd2FudCB0byBwbGFjZSB1bmRlciA2MzQgYW5kIGFoZWFkIG9mIG15IGJyb3RoZXIgc28gdGhvc2UgYXJlIHRoZSB0d28gbWFpbiBnb2FscyBmb3IgbWUgYW5kIG1heWJlIG1ha2UgdGhlIGZpbmFsIHRhYmxlLiAKTW9zdCBHcmVlayBzY3VscHR1cmVzIHdlcmUgZGVzdHJveWVkIGluIGxhdGVyIGNlbnR1cmllcywgZWl0aGVyIGJlY2F1c2Ugb2YgcmVsaWdpb3VzIGJlbGllZnMgb3Igc2ltcGx5IGJlY2F1c2UgdGhlIG1hdGVyaWFscyB3ZXJlIG5lZWRlZCBmb3Igb3RoZXIgdGhpbmdzLiAKSWUuIFBlb3BsZSBkb24gcXVldWUgcHJvcGVybHkgYW5kIGFsd2F5cyBzdGFuZCBvbiBib3RoIHNpZGVzIG9mIHRoZSBlc2NhbGF0b3IgZXRjLkFuZCBob3cgYWJvdXQgdGhlIG1pc29neW55IG9mIFdhbiBDaGFpPyBTZW5kIHRob3NlIGRpcnR5IGV4cGF0cyBob21lLiAKTCdpbmx1Y3RhYmxlIGF1dG9tYXRpc2F0aW9uTGVzIG5vdXZlbGxlcyB0ZWNobm9sb2dpZXMgcHJlbm5lbnQgZGUgcGx1cyBlbiBwbHVzIGRlIHBsYWNlIGRhbnMgbGUgc2VjdGV1ciBtYW51ZmFjdHVyaWVyLiBFbGxlcyBmb250IGVuIHNvcnRlIHF1ZSBkZXMgdGNoZXMgZGVtYW5kZW50IC4KVGhlIGJlYXV0aWZ1bCBQb21vbmEgY2hlcmlzaGVkIGhlciBnYXJkZW4gYWJvdmUgZXZlcnl0aGluZyBlbHNlIGFuZCB0b29rIHRoZSBncmVhdGVzdCBqb3kgZnJvbSBpdC4gCkEgbG90IG9mIGhpcyBiZWhhdmlvciBpcyB3b3J0aHkgb2YgbW9ja2VyeSBiZWNhdXNlIGl0IGFjdHVhbGx5IGh1cnQgb3RoZXJzLCBidXQgSSBub3Qgc3VyZSBob3cgSSBmZWVsIGFib3V0IHdoYXQgZmVlbHMgbGlrZSBoaXMgb2xkIHN1bW1lciBjYW1wIGJ1bGx5IHNoYXJpbmcgb2xkIHBpY3Mgb2YgaGltLi4gCkFuZCBpbiB0aGUgZWFybHkgMTk0MHMsIHRoZSBQaW9uZWVyIFNhbG9vbiB3YXMgZnJlcXVlbnRlZCBieSBub25lIG90aGVyIHRoYW4gdGhlIGZhbW91cyBhY3RvciBDbGFyayBHYWJsZS4gSGUgYW5kIENhcm9sZSBMb21iYXJkIHZpc2l0ZWQgdGhlIHRvd24gbWFueSB0aW1lcy4gSGlzIGZhbW91cyBsaW5rIHRvIHRoZSBQaW9uZWVyIFNhbG9vbiBjYW1lIGFib3V0IHZlcnkgdHJhZ2ljYWxseS4gSGUgd2FzIHdhaXRpbmcgZm9yIHdvcmQgb2YgYSB0ZXJyaWJsZSBwbGFuZSBjcmFzaCB0aGF0IHRoZSBsb3ZlIG9mIGhpcyBsaWZlIGFuZCB3aWZlIG9mIGxlc3MgdGhhbiB0d28geWVhcnMsIENhcm9sZSBMb21iYXJkLCB3YXMgdW5mb3J0dW5hdGVseSBpbnZvbHZlZCBpbi4gVGhlIHBsYW5lIHNoZSB3YXMgaW4gaGFkIGNyYXNoZWQgaW50byBuZWFyYnkgUG90b3NpIE1vdW50YWluIGFuZCB3b3JkIGNhbWUgdGhyb3VnaCB0aGF0IHRoZXJlIHdlcmUgbm8gc3Vydml2b3JzLiBJdCBpcyBzYWlkIHRoYXQgQ2xhcmsgR2FibGUgd2FpdGVkIGluIHRoZSBQaW9uZWVyIFNhbG9vbiBmb3IgdGhyZWUgZGF5cywgd2FpdGluZyBmaXJzdCBmb3Igd29yZCBhYm91dCBoZXIgZmF0ZSBhbmQgdGhlbiBmb3IgbmV3cyBvZiB0aGUgcmVjb3Zlcnkgb2YgaGVyIGJvZHkuCkNlIG4ndGFpdCBwYXMgZHUgdG91dCBtb24gZ290IGV0IGlsIGVzdCBzdXJwcmVuYW50IGRlIHZvaXIgY29tbWUgbGUgZ290IGQndW5lIHBlcnNvbm5lIHBldXQgY2hhbmdlci4gCkFuZCB0aGUgc2NhcnkgdGhpbmcgd2l0aCB3aWxkZXJuZXNzIGlzbiB0aGUgZnJlZSBjb3VudGVyL25leHVzIChkcmF3IGlzIHBvd2VyZnVsIHRob3VnaCksIGl0IGFsbG93aW5nIHlvdSB0byBzdGFjayBzdHVwaWQgYW1vdW50IG9mIG1hbmEgaW50byBvbmUgc3RlcCwgbWFraW5nIGluc3RhbnQgWCBzcGVsbHMgcmV0YXJkZWRseSBnb29kIHdoaWxlIGFsc28gZ3JlYXQgZm9yIHRva2VuIGdlbmVyYXRvcnMgKGdvbGdhcmkgd2l0aCBzbGltZWZvb3QgYW5kIG9vemUsIHNlbGVueXMgd2l0aCBtYXJjaC9kYXduIG9mIGhvcGUpLiBCdXQgeW91IGp1c3QgaGF2ZSB0byBicmVhayB0aGUgY29tYm8sIHRoZW4gdGhlIGRlY2sgaXNuIG11Y2ggb2YgYSB0aHJlYXQgYXNpZGUgZnJvbSBrcmFzaXMuIEJlaWppbmcgdGltZS4gCkdvIHJpZ2h0IHVwIHRvIHRoZSB0b3Agb2YgdGhlIHdhdGVyZmFsbCBvbiB0aGUgd2VzdCBzaWRlIG9mIHRoZSByaXZlciBhbmQgbG9vayBiZWxvdyB0byBhIGxpdHRsZSBjbGVhcmluZyBvbiB0aGUgZWFzdGVybiBzaWRlIG9mIHRoZSByaXZlci4gU2xvd2x5IHJvdGF0ZSB0aGUgY2FtZXJhIGFyb3VuZCAzNjAgZGVncmVzcyBzbyB5b3UgY2FudCBzZWUgdGhlIGNsZWFyaW5nIGFuZCB0aGVuIGNhbiBzZWUgaXQgYWdhaW4uIFJlcGVhdCB1bnRpbCB0aGUgbW9vc2Ugc3Bhd25zIGluIHRoZSBjbGVhcmluZy4gClRoZSBkZW1vY3JhdGljIHBlb3BsZS4gSSB1c2VkIHRvIGxvdmUgRWxpemFiZXRoIFdhcnJlbiwgYnV0IHNoZSBoYXMgYW4gb2xkIGxhZHkgdm9pY2UgdGhhdCBwZW9wbGUgY2FuJ3QgZXNjYXBlLiBLYW1hbGEgSGFycmlzIGlzIGdyZWF0LCBidXQgc2hlJ3MgY29udHJvdmVyc2lhbC4gCktpa2lhc3VtaSB1CkkgaGFkIG5ldmVyIGJlZW4gdGhlcmUgYmVmb3JlLiAKQ2Ugc29udCBkb25jIGRlcyBjaGFwcGVzIGR1IGphcmRpbiwgZGVzIHRyYW5zZnVnZXMsIHF1ZSBub3VzIHJldHJvdXZvbnMgYXVqb3VyZCBlbiBwbGVpbmUgbmF0dXJlLCBleGNlbGxlbnRlIHJhaXNvbiBwb3VyIGNyaWVyIGhhcm8gY29udHJlLCBjb21tZSBzaSBkZXMgbW9uc3RyZXMgc2F1dmFnZXMgcyB2YWRzIGQgem9vLiBOb24sIHNyaWV1c2VtZW50PyBUYW50IGV0IHNpIGJpZW4gcXUgbCBlbiBjZSBjYXMsIGR1IHN1cm5vbSBkZSBwZXN0ZSwgZG9udCBibmZpY2llIGdhbGVtZW50IGxhIHBoeXRvbGFxdWUgcXUgZm9ydCBkZSBGb250YWluZWJsZWF1IGRlcyBnYW5ncyBkZSBmb3VzIGZ1cmlldXggdHJhcXVlbnQgIGxhIG1vaW5kcmUgb2NjYXNpb24gY29tbWUgcyBzIGQgZ2liaWVyIGRlIHBvdGVuY2UuIAoiV2UgaGF2ZSBiZWVuIHByYWN0aWNpbmcuIEkgaGF2ZSBuZXZlciBwbGF5ZWQgYmVmb3JlLiBUaGUgd2hvbGUgZmFtaWx5IGhhcyBuZXZlciBwbGF5ZWQgYmVmb3JlLCIgS2ltIGFkbWl0dGVkIHRvIEUhIE5ld3MgYmVmb3JlIG1lZXRpbmcgdXAgd2l0aCBoZXIgcG9rZXIgdGVhY2hlciBDYW1yeW4gTWFuaGVpbS4gIldlIGhhdmUgdGFrZW4gc29tZSBsZXNzb25zIGFuZCBJIHRoaW5rIHdlIGFyZSBnb2luZyB0byBiZSByZWFsbHkgZ29vZC4iClRoaXMgcHJvY2VkdXJlIHByb3RlY3RzIFBlcnNvbiBCLCBhbmQgc2VydmljZXMgUGVyc29uIEEuLiAKV2UgY2FtZSBhd2F5IG1vcmUgY29udmluY2VkIHRoYW4gZXZlciBhYm91dCBWaWV0bmFtJ3MuLiAKQXMgdGhlIG5hbWUgc3VnZ2VzdHMsIHRoZSBnYW1lIGlzIHBsYXllZCB3aXRoIHRoZSBhaWQgb2YgYSB0cmljayBoZW5jZSwgZXZlcnkgc2luZ2xlIHBsYXllciBwdXRzIGEgc2luZ2xlIGNhcmQgYXdheSBmcm9tIGhpcyBoYW5kLiBBZnRlciBmaW5pc2hpbmcgdGhlIGdhbWUgb2ZmLCBlYWNoIHBsYXllciBpcyBtYWRlIHRvIHR1cm4gdGhlIGZhY2UgZG93biBhbmQgaXMgdGFrZW4gYXdheSBmcm9tIHRoZSBwbGF5LiBVbHRpbWF0ZWx5LCBhIHNpbmdsZSBwbGF5ZXIgd2lsbCBiZSBsZWZ0IHdpdGggdGhlIGxlYWQgZm9yIGV2ZXJ5IHNpbmdsZSB0cmljayBhbmQgdGhlIHJlc3Qgd2lsbCBwbGF5IGFjY29yZGluZyB0byB0aGVpciBib2RpbHkgc2l0dWF0aW9uLiAKQ2Fubm90IGNvdW50ZXIgbWlsbGVubmlhIG9mIG1pc29neW55IHdpdGggYSBwcm9kdWN0IG5vciBldmVudCB0aGUgc29jaWFsIGV2ZW50IG9yZ2FuaXplZCBhcm91bmQgdGhlIGNvbnN1bXB0aW9uIG9mIHRoYXQgcHJvZHVjdC4gCkZpbmQgYSBOZWVkIGFuZCBGaWxsIEl0ClRoYXQgZXhhY3RseSBob3cgaXQgd29ya3MhIE9yIHJhdGhlciwgaXQgc2hvdWxkIGJlIGVub3VnaCB0byBxdWl0IG91dCBvZiB0aGUgZ2FtZSwgd2FpdCBhIGZldyBtaW51dGVzLCBzaHV0IGRvd24geW91ciBYYm94IChwcm9wZXJseSwgbm8gaW5zdGFudCBvbiEpIGFuZCB0aGVuIHdhaXQgYSBmZXcgbWludXRlcyBhZ2FpbjsgaWYgeW91IGhhdmUgdGhlIG9yaWdpbmFsIFhib3ggT25lIHdpdGggdGhlIGV4dGVybmFsIHBvd2VyIHN1cHBseSB1bml0LCBqdXN0IHdhaXQgdW50aWwgdGhlIGxpZ2h0IG9uIGl0IHR1cm5zIGZyb20gd2hpdGUgdG8gb3JhbmdlLiBUaGUgRXppbyBDb2xsZWN0aW9uIGNyYXNoZWQgYSBmZXcgdGltZXMgb24gbXkgWCBhbmQgV2F0Y2ggRG9ncyBzb21laG93IGdvdCBjb3JydXB0ZWQgYXQgb25lIHBvaW50IGFuZCByZXF1aXJlZCBhIHJlaW5zdGFsbCBvciBpdCB3b3VsZCBjcmFzaCByaWdodCBhZnRlciBsb2FkaW5nIG15IHNhdmUuLiAKVGhpcyBsYXcgYWxzbyBlc3RhYmxpc2hlZCB0aGUgbWFuZGF0b3J5IGNvbmRvbSBydWxlIChiZWZvcmUgaXQgd2FzIHVwIHRvIHRoZSBicm90aGVscyB0byBlbmZvcmNlIHNvbWV0aGluZyBsaWtlIHRoaXMgb3Igbm90KSBhbG9uZyB3aXRoIGEgY291cGxlIG90aGVyIHJ1bGVzLiBPZiBjb3Vyc2UgdGhlcmUgYWx3YXlzIGEgcmlzayBhbmQgSSBhdm9pZCB3b21lbiB0aGF0IG9mZmVyIHNleCB3aXRob3V0IGNvbmRvbSwgYnV0IGFwYXJ0IGZyb20gdGhhdCwgYXMgbG9uZyBhcyB0aGUgY29uZG9tIGhvbGRzIHRoZSByaXNrIGlzIG5vIGdyZWF0ZXIgdGhhbiB3aXRoIGFueSBvdGhlciByYW5kb20gd29tYW4uQXJlIHRoZSB3b21lbiBzYWZlIGZyb20gZm9yY2VkIHByb3N0aXR1dGlvbj9UaGUgbmV3IGxhdyBpIG1lbnRpb25lZCBlYXJsaWVyIHRyaWVzIHRvIGFjY29tcGxpc2ggdGhpcywgYnkgbWFraW5nIHRoZSB3b21lbiBoYXZlIGluZm9ybWF0aW9uYWwgdGFsa3MgYXQgZ292ZXJubWVudCBhZ2VuY2llcyByZWd1bGFybHkuIApJbiBpc3N1aW5nIHRoZSBjZWFzZSBhbmQgZGVzaXN0IG9yZGVyLCB0aGUgYm9hcmQgcmVjb2duaXplZCB0aGUgcG9zc2liaWxpdHkgb2YgbW9yZSBzdHJpa2VzIGFoZWFkIGluIHRoZSBvbmdvaW5nIHByb3Rlc3QgYWdhaW5zdCBHTSwgc2FpZCBEb29yZXkuClRoZSBiaWdnZXN0IG9ic3RhY2xlIHRvIGhlYWx0aHkgc2l0dGluZyBtYXkgYmUgb3Vyc2VsdmVzLiBTYXlzIEphY2tpZSBNYXplLCB0aGUgdmljZSBwcmVzaWRlbnQgZm9yIG1hcmtldGluZyBhdCBLZWlsaGF1ZXI6IGN1c3RvbWVycyBzdGlsbCB3YW50IGNoYWlycyB0aGF0IGxvb2sgbGlrZSBjaGFpcnMuIApJIGtub3cgaXQncyBkaWZmaWN1bHQsIGFuZCBJIGRvbid0IGJlbGlldmUgYW55b25lIHdvdWxkIGZhdWx0IHlvdSBmb3IgdGFraW5nIHRpbWUgdG8gZ2V0IHRoaW5ncyBsaW5lZCB1cCB0byBnaXZlIHlvdSB0aGUgYmVzdCBjaGFuY2Ugb2YgcmV0YWluaW5nIGN1c3RvZHkuIApMYWR5R2FHYSkuIApIZWFsdGggT3B0aW9ucyBJbnN0aXR1dGUKQ2hpcCBzdGFja3MgaGVhZGluZyBpbnRvIERheSA4IGFyZSBhcyBmb2xsb3dzOgpZb3UgY2FuIGZpbmQgdGhlIG1lZXRpbmcgc2NoZWR1bGUgb25saW5lLiBQb3J0aW9ucyBvZiBlYWNoIEJvYXJkIGFuZCBjb21taXR0ZWUgbWVldGluZyBhcmUgaGVsZCBpbiBleGVjdXRpdmUgc2Vzc2lvbiB0byBkaXNjdXNzIHBlcnNvbm5lbCBhbmQgcHJvcHJpZXRhcnkgbWF0dGVycywgaW5mb3JtYXRpb24gb2J0YWluZWQgb24gYSBjb25maWRlbnRpYWwgYmFzaXMsIG9yIGl0ZW1zIHJlcXVpcmluZyBjb25maWRlbnRpYWwgYWR2aWNlIG9mIGNvdW5zZWwuIApQbGFuIHRvIGxpbmdlciBhbmQgdGFrZSBpbiB0aGUgdmlldywgYW5nbGVzIGFuZCBhcmNoaXRlY3R1cmUgb2YgSHVkc29uIFlhcmRzIGZyb20gdGhpcyBjZW50ZXJwaWVjZSB0aGF0IHN0cmV0Y2hlcyBmcm9tIDUwIHNxdWFyZSBmZWV0IGF0IGl0cyBiYXNlIHRvIDE1MCBzcXVhcmUgZmVldCBhdCB0aGUgMTUwIGZvb3QgaGlnaCB0b3AsIGFuZCBpcyByaWdodCBvdXRzaWRlIHRoZSBzaG9wIHN0dWZmZWQgcG9kaXVtLi4gClRoZSBoaWdoIHN0YWtlcyBwb2tlciBnYW1lIG9mIGV4cHJlc3Npb25zIG9mIGludGVyZXN0CklmIHlvdXIgcG9zdCBpcyBwYXJ0IG9mIGEgY2x1c3RlciBvZiBzdWJtaXNzaW9ucyBvZiB0aGUgc2FtZSBpbWFnZSBpdCB3aWxsIGJlIHJlbW92ZWQuW01dICAwIHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnb0hpIC91L1NsYXhlck1lbG9uLCB0aGFua3MgZm9yIHlvdXIgc3VibWlzc2lvbiB0byAvci9Cb3NzZmlnaHQhIFVuZm9ydHVuYXRlbHkgaXQgaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6UnVsZSA1OiBSZXBvc3RzIHdpbGwgYmUgcmVtb3ZlZCBhdCB0aGUgbW9kZXJhdG9ycyBkaXNjcmV0aW9uLCB0aGlzIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0byByZXBvc3RzIHdpdGggdGhlIHNhbWUgdGl0bGUgYXMgcHJldmlvdXMgc3VibWlzc2lvbnMuIFdlIGFsbG93IHNvbWUgaW1hZ2VzIHRvIHJlY2lyY3VsYXRlIGlmIGEgcGVyaW9kIG9mIHRpbWUgaGFzIHBhc3NlZCwgb3IgaWYgaXQgcHJldmlvdXNseSBkaWQgbm90IHJlY2VpdmUgbXVjaCBhdHRlbnRpb24uIApUaGVyZSBhcmUgbnVtZXJvdXMgc2l0ZXMgdGhhdCBvZmZlciB5b3UgYSBjaGFuY2UgdG8gcGxheSB0aGUgZ2FtZS4gSXQgaXMgZXNzZW50aWFsIGZvciB5b3UgdG8gaGF2ZSBiYXNpYyB1bmRlcnN0YW5kaW5nIG9uIGhvdyB0byBwbGF5IHNsb3RzIG9ubGluZS4gClRoZXNlIG5ldyBtYWZpYXMgaGF2ZSB0aGVpciBmaW5nZXJwcmludHMgb24gYWxsIHNvcnRzIG9mIGNyaW1pbmFsIGFjdGl2aXR5ICAgZnJvbSBiYW5rIGNhcmQgZnJhdWQsIHJvYmJlcmllcyBhbmQgZXh0b3J0aW9uIHRvIHByb3N0aXR1dGlvbiwgYXJtcyBkZWFsaW5nIGFuZCBtb25leSBsYXVuZGVyaW5nICAgd2l0aCBtb3N0IG9mIHRoZSBwcm9jZWVkcyBkZXN0aW5lZCBmb3IgdGhlIGNyaW1lIGJvc3NlcyBiYWNrIGVhc3QuIFRoZSBwcm9ibGVtIGZvciBwb2xpY2UgaW4gY291bnRyaWVzIHN1Y2ggYXMgRnJhbmNlLCBHZXJtYW55IGFuZCB0aGUgVUsgaXMgdGhhdCB3aGlsZSB0aGV5IG1pZ2h0IGJlIGFibGUgdG8gY2F0Y2ggYW5kIHB1dCBhd2F5IHNvbWUgb2YgdGhlIGdhbmdzJyBzbWFsbCAgdGltZSBmb290IHNvbGRpZXJzLCBpdCBpcyBtdWNoIG1vcmUgZGlmZmljdWx0IHRvIGdvIGFmdGVyIHRoZSBwb3dlcmZ1bCBnb2RmYXRoZXJzIGluIE1vc2NvdyBvciBLaWV2IG9yIFRiaWxpc2kuLiAKSGksIEkgaGFkIGEgcGllcmNpbmcgZG9uZSB0aGVyZSBhIGNvdXBsZSBvZiB5ZWFycyBhZ28gYmVmb3JlIEkga25ldyBhbnkgYmV0dGVyLCBhbmQgSSB3b3VsZG4gcmVjb21tZW5kIGdvaW5nIGJhY2suIFN1cmdpY2FsIHN0ZWVsIGlzIG5vdCBoaWdoIHF1YWxpdHkuIAoiTXkgTmV4dCAzMCBZZWFycywiIHdpdGggaGltIHNlYXRlZCBhdCB0aGUgcGlhbm8sIHdhcyB0aGUgdGVuZGVyIHNpZGUgb2YgdGhlIGdlbnJlLiAKSXQgaGFzIG1vZGVybiBhbWVuaXRpZXMgaW5jbHVkaW5nIGEgbWFpbiBiYXIsIHNwb3J0cyBiYXIgd2l0aCBUQUIgZmFjaWxpdGllcyxnYW1pbmcgcm9vbSxiaXN0cm8gd2l0aCBvdXRkb29yIGRlY2tpbmcsIHR3byBzZXBhcmF0ZSBmdW5jdGlvbiBzcGFjZXMgYW5kIGRyaXZlIHRocm91Z2ggYm90dGxlIHNob3AuIENvb2tlIEJlYXVtb250IFBhcnRuZXJzIGhvbGQgYSBtaXggb2YgMjAgZnJlZWhvbGQgYW5kIGxlYXNlaG9sZCBwdWIgdGl0bGVzIGluIFZpY3RvcmlhIGFuZCBRdWVlbnNsYW5kLiBUaGUgQmxhemluZyBTdHVtcCB3YXMgYnVpbHQgaW4gMTg4MCBhbmQgd2FzIGxhdGVyIG9wZXJhdGVkIGJ5IHRoZSBQZXJyeSBmYW1pbHkgZm9yIDgwIHllYXJzLiAKTWFrZSBhIGxpc3Qgb2YgeW91ciBjb21wYW55J3Mgb3ZlcmFsbCBidXNpbmVzcyBnb2Fscy4gWW91ciBidXNpbmVzcyBnb2FscyAgIG1vcmUgc2FsZXMsIGxhdW5jaCBhIG5ldyBwcm9kdWN0LCBldGMuIApUaGlzIGNhc2lubyB3b3VsZCBzdXJlbHkgaGF2ZSBhIHBva2VyIHJvb20gdGhhdCB3b3VsZCBmbG91cmlzaCwgdGhlIG5ldyBwbGF5ZXIgZG9uIGhhdmUgdG8gZHJpdmUgZmFyIG9yIGdvIHRvIGEgdW5kZXJncm91bmQgZ2FtZS4gVGhpcyB3aWxsIGJyaW5nIHRoZSBwcm8gaW4gd2hlcmUgdGhleSB3b24gaGF2ZSB0byBjb21wZXRlIGluIHRvdWdoIHVuZGVyZ3JvdW5kIGdhbWVzIG9yIGRyaXZlIGFuIGhvdXIgb3IgdHdvIGF3YXkuIE5vdCB0byBtZW50aW9uIGlmIGl0IHRydWVzdCBpcyB3b3JsZCBjbGFzcyB0aGUgV1BUIGNvdWxkIHJ1biBhbiBldmVudCB0aGVyZSB0byB3aGljaCBicmluZ3MgaW4gcGxheWVycyBmcm9tIGFyb3VuZCB0aGUgd29ybGQuIApXaWxkIENhcmRzTm93IGZvciB0aGUgZnVuIHBhcnQuIFRoZXJlIGFyZSB0aHJlZSB3aWxkIGNhcmRzOiB0d29zLCB0ZW5zIGFuZCBqYWNrcy4gSWYgYSB0d28gaXMgcGxheWVkLCB0aGUgcGlsZSBpcyAnc2V0JyBiYWNrIGRvd24gdG8gdHdvOiB0aGUgbmV4dCBwZXJzb24gY2FuIHBsYXkgYSB0aHJlZSwgYW5kIHNvIG9uLiBJZiBhIHRlbiBpcyBwbGF5ZWQsIHRoZSBuZXh0IHBsYXllciBpZ25vcmVzIHRoZSB0ZW4gYW5kIGhhcyB0byBtZWV0IG9yIGJlYXQgdGhlIGNhcmQgdGhhdCB3YXMgcGxheWVkIGp1c3QgYmVmb3JlIGl0LiBGb3IgZXhhbXBsZSwgaWYgUGxheWVyIDEgcGxheXMgYSBxdWVlbiBhbmQgUGxheWVyIDIgcGxheXMgYSB0ZW4sIFBsYXllciAzIHRoZW4gaGFzIHRvIGJlYXQgdGhlIHF1ZWVuLiBBbmQgZmluYWxseSwgaWYgYSBqYWNrIGlzIHBsYXllZCwgdGhlIG9yZGVyIG9mIHBsYXkgaXMgcmV2ZXJzZWQsIGZyb20gY2xvY2t3aXNlIHRvIGNvdW50ZXJjbG9ja3dpc2Ugb3IgdmljZSB2ZXJzYSwgd2hpY2ggbWVhbnMgdGhhdCB0aGUgcGxheWVyIHdobyBwbGF5ZWQgdGhlIGxhc3QgY2FyZCBub3cgaGFzIHRvIGJlYXQgaXQyLgpCYW5nYXJyYW5nMTYgIDM3IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpJIGJldCBoZSB3YXMgcmVhbGx5IGV4Y2l0ZWQgZm9yIHRoYXQgZGVhbC4gRnJvbSBPVEM6TWljaGFlbCBCZW5uZXR0IHNpZ25lZCBhIHRocmVlIHllYXIgY29udHJhY3QgZXh0ZW5zaW9uIHdpdGggdGhlIFNlYXR0bGUgU2VhaGF3a3Mgd29ydGggJDI5LjUgbWlsbGlvbi4gCkp1c3QgYXMgSSB0aGlua2luZyBoZSBzb3VuZHMgbGlrZSBhIGZhbnRhc3ksIGEgZHJlYW0gZGF0ZSwgc2hlIGNsYWltcyBOb3JyaXMgd2FzIGFuZ3J5IHdoZW4gc2hlIGJyb2tlIHRoZSBuZXdzIHRoYXQgc2hlIHdhcyBwcmVnbmFudC4gIkhlIHNhaWQgdGhhdCBJIHRyYXBwZWQgaGltLCIgc2hlIHRlbGxzIEdhdXQuICJBbmQgdGhhdCBJIHdhcyBhIHNsdXQuIiBMYW5lIHNheXMgdGhlIHR3byBoYWQgbGl0dGxlIGNvbnRhY3QgYWZ0ZXIgdGhhdCBoZWF0ZWQgbWVldGluZywgYnV0IHRoYXQgTm9ycmlzIGFncmVlZCBoZSB3b3VsZCB0YWtlIGN1c3RvZHkgb2YgdGhlIGNoaWxkLiAKIktvbWJ1Y2hhIGhhcyBwcm9iaW90aWNzIHNpbmNlIGl0IGlzIGEgZmVybWVudGVkIHByb2R1Y3QuIApJIHByb3Bvc2UgYW4gZXhwZXJpbWVudCB3aGVyZSB3ZSB0cmljayB0aGUgc2ltdWxhdGlvbiBieSBidWlsZGluZyBhIGdpYW50IGNvbXB1dGVyIHdpdGhvdXQgdGFsa2luZyBhYm91dCBpdHMgcHVycG9zZSwgYW5kIHRoZW4gc3VkZGVubHkgYW5kIHVuZXhwZWN0ZWRseSBjYWxjdWxhdGUgcGkgdG8gZXh0cmVtZSBkZXB0aHMsIGNhdGNoaW5nIHRoZSBzaW11bGF0aW9uIGJ5IHN1cnByaXNlLiBXZSBzaG91bGQgYmUgYWJsZSB0byBvdXRydW4gdGhlIHNpbXVsYXRpb24gZm9yIGEgZnJhY3Rpb24gb2YgYSBzZWNvbmQsIG9yIG1heWJlIG1lYXN1cmUgc29tZSBvdGhlciBvZGQgc2lkZSBlZmZlY3RzIHdoZW4gcG93ZXIgaXMgcmVkaXJlY3RlZCBmcm9tIG90aGVyIHRhc2tzLi4gCk1zIE11cnBoeSBpcyB0aGUgZm91bmRlciBvZiBHYWx3YXkgdHdvIG5ld2VzdCBicmlkZ2UgY2x1YnMsIEdhbHdheSBFZHVjYXRpb24gQ2VudHJlIEJyaWRnZSBDbHViIGluIENsdWFpbiBNaHVpcmUsIE1vbml2ZWEgUm9hZCwgYW5kIEZsYW5uZXJ5IEJyaWRnZSBDbHViIGluIEZsYW5uZXJ5IEhvdGVsIG9uIHRoZSBEdWJsaW4gUm9hZC4gRWFjaCBjbGFzcyBjb25zaXN0cyBvZiB0dWl0aW9uLCBzYW1wbGUgZ2FtZXMgb24gYSAnYmlnIGJyaWRnZSBib2FyZCcsIHByYWN0aWNlIGdhbWVzLCBhIGNvbXByZWhlbnNpdmUgaGFuZCBvdXQgd2l0aCBzZWxmIGNvcnJlY3RpbmcgZXhlcmNpc2VzLCByZWNvbW1lbmRlZCByZWFkaW5nLCBhbmQgd2Vic2l0ZXMuCkVsZGVzdCBzb24gb2YgdGhlIGxhdGUgV2VzbGV5IGFuZCBDYXJyaWUgTG91aXNlIExhbmdtYWlkLCBhbmQgYnJvdGhlciBvZiBKYWNrIChSdXRoKSBMYW5nbWFpZCBvZiBPc2hhd2EgYW5kIFJvc3MgKEx5bm4pIExhbmdtYWlkIG9mIEtlbG93bmEsIEJDLiBEb3VnIHdhcyBjbGFzcyBwcmVzaWRlbnQgb2YgVW5pdmVyc2l0eSBvZiBUb3JvbnRvIERlbnRhbCBDb2xsZWdlIGluIHRoZSBlYXJseSAxOTQwcy4gSGUgd2FzIGEgbWVtYmVyIG9mIEFybXkgKFZldGVyYW4ncykgRGVudGFsIENvcnBzLiAKSW4geW91ciBleGFtcGxlIHRoZXkgYm90aCBtYWRlIDIgcGFpciBRdWVlbnMgYW5kIDcncyBsZXRzIHNheSAuIFEgUSA3IDcgd2l0aCBLaW5nIGtpY2tlciBiZWF0aW5nIHRoZSBvdGhlciBwbGF5ZXJzIGVmZmVjdGl2ZSBKYWNrIGtpY2tlciB1c2luZyB0aGUgaGlnaGVzdCBhdmFpbGFibGUga2lja2VyIGF2YWlsYWJsZSBmcm9tIGhpcyBoYW5kIGFuZCB0aGUgYm9hcmQgYnV0IHNheSB0aGUgYm9hcmQgcmVhZCAgIFEgNzcgNCBBY2UgdGhpcyB3b3VsZCBub3cgYmUgYSBzcGxpdCBwb3QgYXMgcGxheWVyIDEncyBraW5nIGlzIG5vIGxvbmdlciB0aGUgYmVzdCBhdmFpbGFibGUga2lja2VyIGZyb20gdGhlIGJvYXJkIGFuZCBwbGF5ZXIgaGFuZCB0aGV5IHdvdWxkIGJvdGggdXNlIHRoZSBBY2UgYXMgdGhlaXIga2lja2VyIGFuZCB0aHVzIHRoZSBoYW5kIHdvdWxkIGJlIGEgc3BsaXQgaG9wZSB0aGF0cyBhIGhlbHAgKEZ1bGwgQW5zd2VyKS4gClRoZSBmb29kIGd1aWRlIGZhY2VsaWZ0IHVudmVpbGVkIFR1ZXNkYXksIHRoZSBmaXJzdCBpbiAxMiB5ZWFycywgcmVmbGVjdHMgYSBuZXcgYXBwcm9hY2ggYnkgSGVhbHRoIENhbmFkYSBhaW1lZCBhdCBwcm9tb3RpbmcgaGVhbHRoaWVyIGVhdGluZyBhbmQgbGlmZXN0eWxlIGNob2ljZXMsIHJhdGhlciB0aGFuIGVtcGhhc2l6aW5nIHNlcnZpbmcgc2l6ZXMgYW5kIHNwZWNpZmljIGZvb2RzLgpPb29vb2hoICBncmVhdCBxdWVzdGlvbi4gSSByZW1lbWJlciBJIHdhcyBzdXBlciBzdHJlc3NlZCBhYm91dCB0aGlzIHdoZW4gSSB3YXMgbGVhdmluZy4gQmFzaWNhbGx5LCBJIG5ldmVyIHJlYWxseSBmZWx0IGxpa2UgSSBuZWVkZWQgYW55dGhpbmcgdG8gaG9ycmlibHkgYnV0IHdoYXQgbmljZSBhYm91dCBiZWluZyBoZXJlIGluIFBlYWNlIENvcnBzIGlzIHRoYXQgYSBnb29kIG51bWJlciBvZiBwZWFjZSBjb3JwcyB2b2x1bnRlZXJzIGdvIGJhY2sgdG8gdGhlIHN0YXRlcyBhbmQgdGhleSBhcmUgdXN1YWxseSBjb29sIHdpdGggYnJpbmdpbmcgc3R1ZmYgYmFjayBmb3Igb3RoZXIgdm9sdW50ZWVycy4gSSB3b3VsZCBzYXkgdGhlIGJlc3QgcGllY2Ugb2YgYWR2aWNlIEkgY2FuIGdpdmUgaXMgQ0hJTEwgT1VUIGJlZm9yZSB5b3UgbGVhdmUgYW5kIHJlYWxseSBlbmpveSB0aGUgcHJvY2VzcyBvZiBnb2luZyB0byBzdGFnaW5nIGluIERDIGFuZCBjb21pbmcgaW50byB0cmFpbmluZyBpbiBMaW1hLiBGb3Igc3VyZSBJIHdpc2ggaSB3b3VsZCBoYXZlIGludmVzdGVkIGluIGEgYmV0dGVyIGNhbWVyYSBpbnN0ZWFkIG9mIGJyaW5naW5nIGEgbG91c3kgZGlnaXRhbCBjYW1lcmEuIEFsc28sIGJyaW5nIGFuIGV4dGVybmFsIGhhcmQgZHJpdmUgZm9yIG1vdmllcyBhbmQgdHYgc2hvd3MuIEJhc2ljYWxseSwgYW55dGhpbmcgZWxzZSB5b3UgY2FuIGJ1eSBpbiBMaW1hIG9yIHdoZW4geW91ciBwdXQgaW4geW91ciBzaXRlLCB5b3UgcmVnaW9uYWwgY2FwaXRhbC4KMTkgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28uIApHaW5ldHRlIExhbWFyY2hlIHMnZXN0IHJlbmR1ZSAgVmFsIGQnT3IsIHZpbGxlIG1pbmlyZSBkZSBsJ0FiaXRpYmksIHBvcnRlIGQnZW50cmUgZHUgTm9yZCBkdSBRdWJlYyBvIGxhIHByb3N0aXR1dGlvbiBwcmVuZCB0b3V0ZXMgc29ydGVzIGRlIHZpc2FnZXMgOiBiYXJzIGRlIGRhbnNldXNlcywgc2VydmljZXMgZCdhY2NvbXBhZ25lbWVudCwgcHJvc3RpdHV0aW9uIGRlIHJ1ZSwgZXQgcHJvc3RpdHV0aW9uIGRlIGZpbiBkZSBtb2lzLiBOb3RyZSBqb3VybmFsaXN0ZSBhIGNvbnN0YXQgcXVlIGxlcyB0cmF2YWlsbGV1c2VzIGR1IHNleGUgb250IGRpZmZyZW50cyBwb2ludHMgZGUgdnVlIHN1ciBsZSBwcm9qZXQgZGUgbG9pIEMgMzYuIFNpIGNlcnRhaW5lcyBydmVudCBkJ2V4ZXJjZXIgbGV1ciBjYXJyaXJlIGF1IGdyYW5kIGpvdXIsIGQnYXV0cmVzIHNvbnQgcG91ciB1bmUgbG9pIHF1aSByZXNwb25zYWJpbGlzZXJhaXQgZXQgcG5hbGlzZXJhaXQgbGVzIGNsaWVudHMuLiAKVGhhdCAxMDAlIHdoYXQgSSBuZWVkZWQgdG8gc2VlIHRvZGF5LiAKSXQgdGVuZHMgdG8gZmxhcmUgdXAgaW4gdGltZXMgb2YgZ3JlYXQgc3RyZXNzIG9yIHdoZW4gSSBhbSBzdXBwcmVzc2luZyBlbW90aW9ucy4gSXQgc2VlbXMgYXMgaWYgc2hlIGlzICJzdGF5aW5nIiBidXQgbm90IHN0YXlpbmcgYW5kIHRoZSBhbnhpZXR5IGlzIGxpa2UgdGhpcyBidWZmZXIgem9uZSB0aGF0IGtlZXBzIGhlciBvbmUgZm9vdCBpbiBhbmQgb25lIGZvb3Qgb3V0LiAKR2V0IGV2ZW4gbW9yZSBtb2RzLiBPbmNlIHdlIGhhdmUgZW5vdWdoIG1vZHMgdG8ga2VlcCB0aGUgc3ViIG9yZ2FuaXplZCBhbmQgb24gdG9waWMsIHdlIHdhbnQgdG8gYWRkIGFkZGl0aW9uYWwgbW9kcy4gTW9kcyB3aG8ga25vdyB0aGUgc3ViIGluc2lkZSBhbmQgb3V0LCBhbmQgd2hvIGhhdmUgYmVlbiBzdWJzY3JpYmVycyBoZXJlIGEgd2hpbGUuIFdlIHdhbnQgdGhlbSB0byBoZWxwIHdpdGggbW9kZXJhdGluZywgb2YgY291cnNlLCBidXQgd2UgYWxzbyBoYXZlIHRoZW0gd2VpZ2ggaW4gb24gb3VyIHBvbGljaWVzIGFuZCBydWxlcy4gVGhhdCBzaG91bGQgcHVzaCB0aGUgc3ViIGV2ZW4gZnVydGhlciBieSBtYWtpbmcgc3VyZSB0aGUgc3ViIGlzIGJlaW5nIG1vZGVyYXRlZCB0aGUgd2F5IGl0IHNob3VsZCBiZSBhbmQgdGhhdCB0aGUgc3ViIGxpdmVzIHVwIHRvIGl0cyBuYW1lLgpUaGlzIGlzIGdvaW5nIHRvIGtlZXAgZ2V0dGluZyB3b3JzZS4gQ2hpbmEgd2lsbCBrZWVwIG1vY2tpbmcgVHJ1ZGVhdSBvdmVyICJSdWxlIG9mIExhdyIsIG1vcmUgY3JpbWVzIHRoYXQgU05DIExhdmFsaW4gaXMgaW1wbGljYXRlZCBpbiB3aWxsIGdldCBwdWJsaWNpemVkIGFuZCBUcnVkZWF1IHdpbGwgbG9vayBjb21wbGljaXQgaW4gdGhlbS4gVGhpcyBzY2FuZGFsIHdpbGwgYmUgdGhlIGdpZnQgdGhhdCBrZWVwcyBvbiBnaXZpbmcuCkkga25vdyBpdCBub3QgbXVjaCBoZWxwLCBidXQgdGhpcyBpc24gYSBTaGFyaSBMZXdpcyBMYW1iIENob3AuIEkgaGFkIG9uZSBpbiB0aGUgbXkgc2lzdGVyIGhhZCBhIHZlcnNpb24sIGFuZCBJIHdvcmtlZCBmb3IgYSB0b3kgc3RvcmUgZm9yIHNldmVyYWwgeWVhcnMgaW4gdGhlIFNoZSBhbHdheXMgaGFkIGV5ZWxhc2hlcywgbm90IGJ1dHRvbi9zdHVkIGV5ZXMsIGFuZCBob292ZXMuIFRoZXJlIG5vIHNpZ24gb2YgYW55IG9mIHRoYXQgb24geW91ciBmcmllbmQuIEl0IGFwcGVhcnMgYXMgdGhvdWdoIGhlciBsZWdzIHN3aXZlbCwgcmF0aGVyIHRoYW4gYmVuZC4gSXMgdGhhdCB0aGUgY2FzZT8gQXJlIHRoZXJlIGFueSByZW1uYW50cyBvZiB0YWdzIG9yIGVtYnJvaWRlcnkgb24gdGhlIGJhY2tzaWRlIG9yIGJvdHRvbT8gRXZlbiBpZiB0aGV5IGZhZGVkLCBzb21lIHBob3RvIGVkaXRpbmcgbWlnaHQgZW5oYW5jZSBhbnkgcHJpbnRpbmcgc3RpbGwgdGhlcmUuCk15IGFkdmljZSB0byBtb3N0IHBsYXllcnMgbG9va2luZyB0byBtYWtlIG1vbmV5IGZyb20gcG9rZXIgaXMgdG8gbm90IGp1c3QgZG8gcG9rZXIuIEhhdmUgb3RoZXIgaW5jb21lcywgaGF2ZSBvdGhlciBpbnRlcmVzdHMuIEl0IG5vdCBoZWFsdGh5IHRvIG9ic2VzcyBvdmVyIHBva2VyIGFuZCBpdCBjYW4gbGVhZCB0byBxdWl0ZSBhIGxvbmVseSwgZHVsbCBsaWZlc3R5bGUuClRoaW5rIGEgbm90ZWJvb2sgd2hlcmUgYWxsIHRoZWlyIGNsYXNzIHdvcmssIGluY2x1ZGluZyBncm91cCB3b3JrIGFuZCBsYWJzLCBnby4gVGhlIHRyYWRpdGlvbmFsIG1vZGVsIGlzIHRoYXQgdGhlIHJpZ2h0IHNpZGUgaXMgImlucHV0IiAobm90ZXMpIGFuZCB0aGUgbGVmdCBzaWRlIGlzICJvdXRwdXQiICh0aGluayBkaWFncmFtcywgc3VtbWFyeSBpbmZvLCBzdHVkZW50IGNyZWF0ZWQgZ3JhcGhpY3MpLiBJJ20gdGhpbmtpbmcgb2YgbW9kaWZ5aW5nIGl0IHRvIGJldHRlciBmaXQgbXkgY2xhc3MncyBtb2RlbCB3aGljaCBpcyBtb3N0bHkgZ3JvdXAgd29yay4gClRoYXQgcGFjZSBvZiBqb2IgY3JlYXRpb24sIGhvd2V2ZXIsIGlzIGV4cGVjdGVkIHRvIHNsb3cgZG93biBzb21ld2hhdCBpbiB0aGUgcHJvdmluY2UgbW92aW5nIGZvcndhcmQgaW50byAyMDE5LCBlc3BlY2lhbGx5IGNvbnNpZGVyaW5nIGhvdyB3ZWFrbHkgdGhlIENhbmFkaWFuIGVjb25vbXkgcGVyZm9ybWVkIHRoZSBsYXN0IGZldyBtb250aHMgb2YgbGFzdCB5ZWFyLCBzYWlkIEJyaWFuIERlUHJhdHRvLCBhIHNlbmlvciBlY29ub21pc3QgYXQgVEQgQmFuayBHcm91cC4KSGlzIHN0dWRlbnRzIHdlcmUgYWx3YXlzIGFmcmFpZCB0byBhcmd1ZSB3aXRoIGhpbSBiZWNhdXNlIG9mIGhpcyBpbXBlY2NhYmxlIGxvZ2ljLiBGb3IgdHdlbnR5IHllYXJzLCBoZSBoYWQgdGF1Z2h0IHRoaXMgY2xhc3MgYW5kIG5vIG9uZSBoYWQgZXZlciBoYWQgdGhlIGNvdXJhZ2UgdG8gZ28gYWdhaW5zdCBoaW0uCkd1aW5uZXNzIERyYXVnaHQgaXMgYWxzbyBzb21ldGltZXMgYXZhaWxhYmxlIG9uIENPMiBpbiBzb21lIGZvcm1hdHMsIHNvIHRoYXQgbWF5IGhhdmUgYmVlbiB3aGF0IHlvdSB3ZXJlIHNlcnZlZCB0byBjb21wYXJlIHRvIEd1aW5uZXNzIERyYXVnaHQgb24gbml0cm8uIApSZWNvbW1lbmRhdGlvbnMgYW5kIHN1Z2dlc3Rpb25zIGNvbWUgd2l0aCB2YWx1YWJsZSBiYWNrZ3JvdW5kIGluZm9ybWF0aW9uIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRldGVybWluZSB3aGljaCBvbmxpbmUgcG9rZXIgc2l0ZSB5b3Ugc2hvdWxkIHBsYXkgcG9rZXIgb24uIEFsd2F5cyBjb25zaWRlciB5b3VyIG9wdGlvbnMgd2hpbGUgY2hvb3NpbmcgYW4gb25saW5lIHBva2VyIHNpdGUgYXMgdGhlcmUgYXJlIHNldmVyYWwgb3RoZXIgb25saW5lIHBva2VyIHNpdGVzIHdoaWNoIGNhbiBiZSBiZXR0ZXIuLiAKTW9yZW92ZXIsIHlvdSBjYW5ub3QgZ2V0IDUgYWNlc3VubGVzcyB5b3UgYXJlIHBsYXlpbmcgd2l0aCB0d28gZGVja3Mgb3IgbW9yZS4gCkJlZW4gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgd2hhdCBJIG1pc3NpbmcuIApJZiBoZSB1c2VzIFF1aWNrQm9va3MgaXQgc2hvdWxkIGJlIHByZXR0eSBlYXN5IHRvIHB1dCBCVEMvRVRIIGluIGFzIGEgZGVzaWduYXRlZCBwYXltZW50IG1ldGhvZC4gCk15IGZhdGhlciBoYXMgYWx3YXlzIGJlZW4gYSBjb25zZXJ2YXRpdmUgd2hvIGxlYW5zIGEgYml0IG1vcmUgbGliZXJ0YXJpYW4gYW5kIGlzIGV2ZW4gc2xpZ2h0bHkgc29jaWFsbHkgbGliZXJhbCwgeWV0IGhhcyBhbHdheXMgYmVlbiBhY3RpdmUgaW4gbG9jYWwgcG9saXRpY3MgaW5jbHVkaW5nIGJlaW5nIHRoZSBjb3VudHkgUmVwdWJsaWNhbiBQYXJ0eSBjaGFpcm1hbiBmb3IgYSB3aGlsZS4gSGUgd2FzIGEgZmlybSBiZWxpZXZlciBpbiB0aGUgd2hvbGUgImxlc3NlciB0aGFuIG9mIHR3byBldmlscyIgYW5kIHRoYXQgYSB2b3RlIHRvd2FyZHMgYSB0aGlyZCBwYXJ0eSBjYW5kaWRhdGUgaXMgYSB3YXN0ZWQgdm90ZSBldmVuIGlmIGhlIGxpa2VzIHRoZW0gYW5kIGFncmVlcyB3aXRoIHRoZW0gbW9yZSBhbmQgaGFzIGJlZW4gc29tZXRoaW5nIHdlIGNsYXNoIG9uIGEgbG90LiAKRmlndXJpbmcgcG90IG9kZHMgKHRoZSBwb3QgaXMgYWxsIHRoZSBtb25leSB0aGF0IGhhcyBiZWVuIGJldCBmb3IgYSBzaW5nbGUgZ2FtZSkgaXMgb25lIG9mIHRoZSBtb3N0IG1pc3VuZGVyc3Rvb2QgYW5kIG1pc3VzZWQgY29uY2VwdHMgZm9yIGJlZ2lubmluZyBwb2tlciBwbGF5ZXJzLiBJbiB0aGlzIHNlY3Rpb24sIHNpbXBsZSBhbmQgc3RyYWlnaHRmb3J3YXJkIGNvbXB1dGF0aW9ucyBhcmUgdXNlZC4gQW5kIGZvciBhbGwgZXhhbXBsZXMsIHVubGVzcyBvdGhlcndpc2Ugbm90ZWQsIFRleGFzIEhvbGQnZW0gaXMgdGhlIHBva2VyIGdhbWUgYmVpbmcgcGxheWVkLi4gCkFuZWNkb3RhbCByZXBvcnRzIGFuZCByZWNlbnQgc3R1ZGllcyBzdWdnZXN0IHRoYXQgYSBzaW5nbGUgYWRtaW5pc3RyYXRpb24gb2YgcHNpbG9jeWJpbiBjYW4gZW5oYW5jZSBzdWNoIHByb2Nlc3NlcyBhbmQgY291bGQgdGhlcmVmb3JlIGJlIGEgcG90ZW50aWFsIHRyZWF0bWVudC4gSG93ZXZlciwgaXQgaGFzIHlldCB0byBiZSBhc3Nlc3NlZCB3aGV0aGVyIGVmZmVjdHMgb3V0bGFzdCBhY3V0ZSBpbnRveGljYXRpb24uIFRoZSBwcmVzZW50IHN0dWR5IGFpbWVkIHRvIGFzc2VzcyB0aGUgc3ViIGFjdXRlIGVmZmVjdHMgb2YgcHNpbG9jeWJpbiBvbiBjcmVhdGl2ZSB0aGlua2luZywgZW1wYXRoeSwgYW5kIHdlbGwgYmVpbmcuIApFdCwgdW5lIGZvaXMgZGUgcGx1cywgZWxsZSB0aXJlIGxhIHNvbm5ldHRlIGQnYWxhcm1lIHN1ciBsZSBzZWN0ZXVyIEdvdXR0ZSBkJ09yIGF2ZWMgbGVzIHRyYWZpY3MgcXVpIGdhbmdybmVudCBsZSBxdWFydGllciBldCBxdWkgcmVuZGVudCBsYSB2aWUgaW1wb3NzaWJsZS4gCk9uY2UgbW9yZSBwZW9wbGUgaGF2ZSB0aGUgcHJvcGVyIGdlYXIgYW5kIHRoZSBtZWNoYW5pY3MgYXJlIGtub3duICh0aGV5IHJlYWxseSBub3QgdGhhdCBiYWQpLCB5b3UgY2FuIGxpa2VseSBqdXN0IG1ha2UgaXQgaGFwcGVuIHRocm91Z2ggY2hhdCwgYXMgbG9uZyBhcyB0aGUgcGFydGllcyBoYXZlIGEgZmFpcmx5IHNpbWlsYXIgY29tcG9zaXRpb24gb2Ygcm9sZXMuIFlvdSBqdXN0IGFzc2lnbiBlbGVtZW50cyB0byBlYWNoIHRlYW0gKHNvbWVvbmUgZ29pbmcgdG8gaGF2ZSB0byB0YWtlIGEgbGVhZGVyc2hpcCByb2xlIG1vc3QgbGlrZWx5KSBhbmQgeW91IGp1c3QgcnVuIHRocm91Z2guCkFzIGZvciBvdGhlciBvcHRpb25zLCBJIGFsbW9zdCBuZXZlciBnbyB0byB0aGUgYW1jJ3MgaW4gbXkgYXJlYSAoTllDKSBzbyBhIGxpc3QgZG9lc24ndCBtYWtlIHNlbnNlIC4gV291bGQgZGVmaW5pdGVseSBjb25zaWRlciBqb2luaW5nIHRoZSBBbGFtbyB2ZXJzaW9uIG9mIG1vdmllIHBhc3MgYmVjYXVzZSB0aGF0J3MgdGhlIG9uZSB0aGVhdGVyIHdlIGZyZXF1ZW50LCBzbyB3YWl0aW5nIGZvciB0aGVtIHRvIHJvbGwgdGhhdCBvdXQgYW5kIHNlZSBob3cgbXVjaCBpdCB3aWxsIGJlLgpBbmQgSSBydW4gZm9yIGNvdW5jaWwgZXZlbiB1bmVuZG9yc2VkLiBBbmQgSSBwcm92ZSB0byB5b3UgSSBjb3VsZCBiZSB0aGUgYmVzdCBwdWJsaWMgc2VydmFudCB5b3UgZXZlciBoYWQsIG9yIEkgZGllIHRyeWluZy4gCk9wZW4geW91ciBtaW5kLiBXaGVuIHRoZSBtaW5kIGhlYXJzIHNvbWV0aGluZyB3aGljaCBzZWVtcyBsaWtlIGFic29sdXRlIGJhbG9uZXkgaXQgc2h1dHMgb2ZmIGFuZCBkb2Vzbid0IGxpc3Rlbi4gVGhlIHdheSB0byBvcGVuIHlvdXIgbWluZCBpcyB0byBzYXkgdG8geW91cnNlbGYgd2hlbiB0aGUgcGVyc29uIGlzIHRhbGtpbmcgdG8geW91LCAiVGhpcyBpcyByaWdodCwgdGhpcyBpcyB0cnVlIiwgb3ZlciBhbmQgb3Zlci4gCkVhcmxpZXIgdGhpcyB3ZWVrLCBSb3Vzc28gcHVsbGVkIHdoYXQgbWFueSBhcmUgY2FsbGluZyBvbmUgb2YgdGhlIGJpZ2dlc3QgYmxpbmQgc2lkZXMgaW4gQkIgaGlzdG9yeS4gCkkgaGF2ZSByZW1vdmVkIHlvdXIgY29tbWVudC4gWW91IHBsYWNlZCBzb2xlIHJlc3BvbnNpYmlsaXR5IGZvciBkcmFtYSB1cG9uIHRoZSBzaG91bGRlcnMgb2YgdGhlIE9QLiAKSm9lIG1hcnJpZWQgQmVhdHJpY2Ugb24gRmVicnVhcnkgOXRoLCAxOTUyIGFuZCBhZnRlciBydW5uaW5nIGEgcG9vbCBoYWxsIGFuZCB0b3kgc3RvcmUsIGhlIG9wZW5lZCB3aGF0IHdhcyB0byBiZWNvbWUgYW4gT3NoYXdhIGxhbmRtYXJrICAgQm9sYWhvb2QncyBTcG9ydHNoYXZlbi4gSm9lIG91dGZpdHRlZCBtb3N0IG9mIHRoZSBPc2hhd2EgR2VuZXJhbHMgcGxheWVycyBmb3IgdGhlaXIgZXF1aXBtZW50IGZvciBtYW55IHllYXJzLiBObyBvbmUgY291bGQgZml0IGEgcGFpciBvZiBza2F0ZXMgbGlrZSBKb2UhIEhpcyBwYXNzaW9ucyBpbmNsdWRlZCBnb2xmLCBjdXJsaW5nLCBodW50aW5nIGFuZCB0aGUgb2RkIHBva2VyIGdhbWUhIFRoZSBtb3JlIHBlb3BsZSBhcm91bmQsIHRoZSBoYXBwaWVyIGhlIHdhcy4gCiJJdCdzIGFsd2F5cyBhIHRvdWdoIG9uZSB0byBsb3NlIGEgY2xvc2UgZ2FtZSBsaWtlIHRoYXQsIiBwb2ludCBndWFyZCBEZSdBYXJvbiBGb3ggc2FpZC4gIlNvbWV0aW1lcyBpdCBjb21lcyBkb3duIHRvIGEgZmV3IGtleSBwb3NzZXNzaW9ucy4gVGhleSBtYWRlIGEgbG90IG9mIHRvdWdoIHNob3RzLiIKTGV0IG1lIGJlZ2luIHRoaXMgcG9zdCBhZ2FpbnN0IEFwcGxlIGJ5IHNheWluZyBJIGFtIGEgY29tbWl0dGVkIGFuZCBkZWNhZGUgbG9uZyBBcHBsZSB1c2VyLiAKV2hhdCBpcyB0aGUgcHJvY2VzcyBpZiB5b3UgdGhpbmsgeW91IGhhdmUgcG9zc2libHkgZGlzdHVyYmVkIGFzYmVzdG9zPwpNYXJrIG9uIHRoZXNlIHBhcGVycyB3aGVyZSBhIG5haWwgd291bGQgbmVlZCB0byBnby4gTmFpbHMgd291bGQgbm90IGdvIHJpZ2h0IGF0IHRoZSB2ZXJ5IHRvcCBjZW50ZXIgb2YgZWFjaCBmcmFtZTsgcmF0aGVyLCB0aGV5IHdpbGwgYmUgZG93biBhbiBpbmNoIG9yIHR3bywgYW5kIHBlcmhhcHMgdGhlcmUgYXJlIHR3byBuYWlscyBmb3IgYSBmcmFtZS4gRGV0ZXJtaW5lIHdoZXJlIHRoZSBuYWlscyBzaG91bGQgZ28gYW5kIG1hcmsgaXQgb24gZWFjaCBzaGVldC4KQnkgY29tcGFyaW5nIHRoZSBjYXNlIHN0dWRpZXMgdGhhdCBnZW5lcmF0ZWQgdGhlIGxhcmdlc3QgYnVzaW5lc3MgZWZmZWN0cyB3aXRoIHRob3NlIHRoYXQgZ2VuZXJhdGVkIGxlc3MgaW1wcmVzc2l2ZSBlZmZlY3RzLCB3ZSBoYXZlIGJlZW4gYWJsZSB0byBleHBsb3JlIHdoaWNoIG1hcmtldGluZyBpbnB1dHMgdGVuZCB0byBwcm9tb3RlIHN1Y2Nlc3MgYW5kIHdoaWNoIGRvIG5vdC4gCk9uIHRoZSBiYXNpcyBvZiB0aGF0IGJlbGllZiwgUHJlc2lkZW50IEhhcnJ5IFRydW1hbiBzb2xpZGlmaWVkIE5BVE8gYW5kIGRlY2lkZWQgdG8gcmUgYXJtIFdlc3QgR2VybWFueS4uIAoiQW5kIHRoZSBjcmVkaXQgZm9yIHBvcHVsYXJpc2luZyBwb2tlciBpbiBJbmRpYSBnb2VzIGxhcmdlbHkgdG8gS04gU3VyZXNoLCIgc2F5cyBBbmt1ciBEZXdhbmksIGNvdW50cnkgbWFuYWdlciBmb3IgUG9rZXJTdGFycy4gSXQgd2FzIFN1cmVzaCwgYSBCYW5nYWxvcmUgbGF3eWVyLCB3aG8gZ290IGFuIE5PQyAobm8gb2JqZWN0aW9uIGNlcnRpZmljYXRlKSBmcm9tIHRoZSBjaXR5IHBvbGljZSBpbiAyMDEyIGZvciBwb2tlciBnYW1lcyB0byBiZSBwbGF5ZWQgaW4gY2x1YnMuIEEgeWVhciBsYXRlciwgdGhlIEluZGlhbiBQb2tlciBBc3NvY2lhdGlvbiwgd2hpY2ggaGUgY28gZm91bmRlZCBhbmQgaXMgc2VjcmV0YXJ5IG9mLCBmaWxlZCBhIHBldGl0aW9uIGluIHRoZSBoaWdoIGNvdXJ0IGFuZCBnb3QgYSBydWxpbmcgdGhhdCBwb2tlciB3YXMgYSAiZ2FtZSBvZiBza2lsbCIgYW5kIG5vdCBhICJnYW1lIG9mIGNoYW5jZSIgb3IgZ2FtYmxpbmcsIGFzIGlzIGNvbW1vbmx5IGJlbGlldmVkLgpJdCdzIGFubm95aW5nIGJlY2F1c2UgSSBib29rbWFyayByZWNpcGVzIG9uIG15IHBob25lIGFuZCByZWZlciB0byBpdCB3aGVuIGNvb2tpbmcuIApXYWxrIGF3YXkgZnJvbSB0aGF0IGJsYWNramFjayB0YWJsZSB3aXRoIDcyNSBhbmQgdGFrZSB0aGUgbGlmdCB0byB0aGUgdG9wIGZsb29yIHdoZXJlIHRoZSBwb2tlciByb29tIGlzLiBXZWxsIGFzIGx1Y2sgd291bGQgaGF2ZSBpdCwgYSA2bWF4IDEvMi81LzEwIGRlZXBzdGFjayA0LzUvNiBjYXJkIChidXR0b24gY2hvb3NlcyBob3cgbWFueSwgYnV0IGV2ZXJ5b25lIGluY2x1ZGluZyBtZSB3YXMgY2hvb3NpbmcgNikgUExPIGdhbWUgaGFkIGp1c3Qgc3RhcnRlZCBhbmQgd2FzIGdvaW5nIDQgaGFuZGVkLiAKQW5kIGFsc28gbGVhcm5lZCBmcm9tIHRoZSBjYXV0aW9uYXJ5IHRhbGUuIApJIGFsd2F5cyB0cmFpbmVkIHdpdGggYSBsb3Qgb2Ygd2F0ZXIuIFNvbWUgcmFjZXMgYXJlIHJlYWxseSBnb29kIGFuZCBoYXZlIHdhdGVyIGV2ZXJ5d2hlcmUuIER1cmluZyBhIHJhY2UgYSBmZXcgeWVhcnMgYWdvIEkgZ290IHJlYWxseSBzaWNrIGZyb20gbm90IGhhdmluZyBtdWNoIHdhdGVyLiAKV2hlbiBJIGFjdHVhbGx5IGFwcHJvYWNoZWQgdGhlIGNhciwgdGhlbiBzbG93ZWQgZG93bi4gUXVpZXRseSwgZ3JhY2VmdWxseSB3YWxrZWQgdXAsIG9wZW5lZCB0aGUgZG9vciBhbmQgdW1vc3RpbGEgaGlzIGZpZnRoIGxvY2F0aW9uIG9uIHRoZSBsZWF0aGVyIHByb3ZpZGUgZm9yIGNvbW11dGVyIGZ1bmRhbWVudCwgYW5kIHRoZW4gZ3JhY2VmdWxseSB0dXJuaW5nIHRvIHRoZSBzYWxvbiBzdWZmZXJlZCBsZWcuIE15IGJyZWF0aGluZyB3YXMgc28gbXVjaCBvbiBpdGVyYXRpdmUgYW5kIGRlZXAsIHRoZSBjYXNrZXQgaGVhdmVkIHVwIGFuZCBJIGNvdWxkIG5vdCBzdXJ2aXZlIHdpdGggdGhlbS4gCklmIEkgd2Fsa2luZyBhcm91bmQgdGhlIGhvdXNlIHdpdGggaGVyLCBJIGhhdmUgbXkgaGFuZCB1cHR1cm5lZCBzdXBwb3J0aW5nIGhlciB3ZWlnaHQgd2l0aCBoZXIgbGVncyBpbiBiZXR3ZWVuIG15IGZpbmdlcnMsIGFuZCBteSBmb3JlYXJtIHN1cHBvcnRpbmcgdGhlIHJlc3Qgb2YgaGVyIGJvZHkgYW5kIHRhaWwuIApXaGV0aGVyIHRoZXkgYXJlIGZvciBleGNsdXNpdmUgdXNlIG9yIG5vdCBpcyBpcnJlbGV2YW50LiBUaGUgZHVjdGluZyBjb3VsZCBiZSBpbiB0aGUgZmxvb3Igb3IgY2VpbGluZyBiZXR3ZWVuIHR3byBzdHJhdGEgbG90cywgb3IgcnVuIHRocm91Z2ggYW4gYXR0aWMgc3BhY2UgdGhhdCBpcyBjb21tb24gcHJvcGVydHkuLiAKSSBkZWxpdmVyIGZvciBGcml0byBMYXkgYW5kIHdvdWxkIGFyZ3VlIHRoaXMgaXNuIHRoZSBiZXN0IGFkdmljZS4gQXQgdGhlIGZhY3RvcnkgdGhlIGNoaXBzIGFyZSBpbnRlbnRpb25hbGx5IHN0YWNrZWQgaW4gYm94ZXMgdXBzaWRlIGRvd24gdG8gcHJldmVudCB0aGUgc2Vhc29uaW5nIGZyb20gZ2F0aGVyaW5nIGF0IHRoZSBib3R0b20uIEFsc28gd2hlbiBvdXIgdHJ1Y2tzIGFyZSBsb2FkZWQgYXQgdGhlIHdhcmVob3VzZSB0aGUgZG9jayB3b3JrZXJzIGxvYWQgdGhlIGJveGVzIHVwc2lkZSBkb3duIGZvciB0aGUgc2FtZSByZWFzb24uIApFdCBwb3VydGFudCwgbGUgZHJvaXQgc2UgZHZvaWxlIGF1IHRyYXZlcnMgZGUgbCdvcmdhbmlzYXRpb24gZGUgc29jaXRzIGltYWdpbmFpcmVzLiBQYXJmb2lzIHBlcmNlcHRpYmxlLCBpbCBzJ2ltbWlzY2UgZGFucyBsZXMgcmVsYXRpb25zIGRlIG5vcyBkaXZlcnMgaHJvcy4gCkZvcmNlcyB3aXRoaW4gdXMgYXJlIHRoZSB0cnVlIGhlYWxlcnMgb2YgZGlzZWFzZS4gYXJ0IG9mIG1lZGljaW5lIGNvbnNpc3RzIG9mIGFtdXNpbmcgdGhlIHBhdGllbnQgd2hpbGUgTmF0dXJlIGN1cmVzIHRoZSBkaXNlYXNlLiB0bzogSGVhbHRoIFJlbGF0ZWQgUXVhbGl0eSBvZiBMaWZlTW9kZWwKTkN1c3RvbSBwcml6ZXMgPSB3aGF0IGV2ZXIgeW91IHdhbnQgbi4KTW9yZSBTdG9yaWVzIENyb3duIENhc2lubyAndGFtcGVyZWQnIHdpdGggcG9rZXIgbWFjaGluZXMgJDFrIGEgd2VlayBpbiB3ZWxmYXJlICdub3QgZW5vdWdoJyBmb3IgZmFtaWx5IG9mIHNldmVuIFlvdW5nLCBtYWxlLCBwb29yOiBNZWV0IEF1c3RyYWxpYSBiaWdnZXN0IGdhbWJsZXJzCk92ZXJhbGwgdGhlIGJpZ2dlc3QgaXNzdWUgZm9yIG1lIHdpdGggaW1taWdyYXRpb24gaXMgd2VsZmFyZSwgb3BlbiBib3JkZXJzIG9yIG5vdC4gU28gaWYgd2Ugd29uIGdldCByaWQgb2YgdGhlIHdlbGZhcmUgc3RhdGUsIHdlIHNob3VsZCBhYnNvbHV0ZWx5IGRvIHdoYXQgd2UgY2FuIHRvIGtlZXAgaWxsZWdhbCBpbW1pZ3JhbnRzIG91dC4gClNlcnZpY2VzIGxpa2UgdnBuZXhwcmVzcyBub3JkcG4gZXRjIGlzIGFsbCBnb29kLCBqdXN0IHRoYXQgaXQgc2hhcmVkIGFtb25nIGdhemlsbGlvbiBvZiB1c2Vycy4gUHV0dGluZyB0aGUgY29udGV4dCBhIGxpdHRsZSBiaXQgb3V0IG9mIHBsYWNlLiBNb3JlIGxpa2UsIFZpcnR1YWwgU2hhcmVkIChidXQgSmFpbGVkKSBOZXR3b3JrLiAKSG9wZWZ1bGx5LCBub3RoaW5nIGxpa2UgdGhpcyBoYXMgZXZlciBoYXBwZW5lZCB0byB5b3UuIE91ciBxdWVzdGlvbiBpcyB3aHkgd291bGQgeW91IGV2ZW4gYm90aGVyIGxldHRpbmcgc29tZXRoaW5nIGxpa2UgdGhhdCByZW1vdGVseSBoYXZlIGEgY2hhbmNlIG9mIGRvaW5nIHRoaXMgd2hlbiB5b3UgY2FuIHN0b3AgdGhlIHByb2JsZW0gYmVmb3JlIGl0IGhhcHBlbnMuIFRoYXQncyB3aGF0IHRoZSBNZXRhbCA4IFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2sgaGFzIGRvbmUgZm9yIHVzLCB3aGljaCBrZWVwcyBldmVyeW9uZSBoYXBweS4uIApQcmludGluZyBtb25leSB2cyB0aGUgd2hhbGVzL2xvb3NlIHBhc3NpdmUgZG9ua3MgYW5kIGRydW5rcyBpcyBqdXN0IGEgbmljZSBib251cyBob25lc3RseS4gSSBsb3ZlIGJlaW5nIHRoZSBtb3N0IGFnZ3Jlc3NpdmUgcGxheWVyIGF0IHRoZSB0YWJsZSBhbmQgZGVzdHJveWluZyB0aWdodCBwYXNzaXZlL0FCQyBwbGF5ZXJzIChldmVuIFRBR3MpIHRoYXQgc2VlbSB2aXJ0dWFsbHkgaW5jYXBhYmxlIG9mIGFkanVzdGluZy4gTkxIRSBpcyB0aGUgZ3JlYXRlc3Qgbm9uIHNwb3J0cyBnYW1lIGV2ZXIgaW52ZW50ZWQgKGJhc2tldGJhbGwgdGFrZXMgdGhlIGNha2UpLi4gCkl0J3MgYXMgbXVjaCBhIHBhcnQgb2YgeW91IGFzIHJlZCBsaXBzdGljayBhbmQgeW91ciB2aWJyYXRvci4gCkZvciB0aGUgQ0ZJQiBhbmQgaXRzIDExMCwwMDAgbWVtYmVycywgdGhyZWUgb2YgdGhlIEZvcmQgYmlnZ2VzdCBhY2NvbXBsaXNobWVudHMgaW4gQmlsbCA0NyBpbmNsdWRlIGNoYW5naW5nIGFsbCBqb3VybmV5bWFuIHRvIGFwcHJlbnRpY2UgcmF0aW8gdG8gMToxLCBwaGFzaW5nIG91dCB0aGUgQ29sbGVnZSBvZiBUcmFkZXMsIHdoaWNoIHJlZ3VsYXRlcyBza2lsbGVkIHRyYWRlIGluIHRoZSBwcm92aW5jZSwgYW5kIGVsaW1pbmF0aW5nIHRoZSBmb3JtZXIgTGliZXJhbCBnb3Zlcm5tZW50IHN0cmljdCBydWxlcyBvZiBidXNpbmVzc2VzIHRvIHRyYWNrIGV2ZXJ5IG1vdmVtZW50IG9mIHRoZWlyIHNjaGVkdWxlZCBlbXBsb3llZXMgaW50byBhbmQgb3V0IG9mIHRoZSBvZmZpY2Ugb3IgZmFjZSBzdGlmZiBwZW5hbHRpZXMuIEt3aWVjaW5za2ksIGRpcmVjdG9yIG9mIHByb3ZpbmNpYWwgYWZmYWlycyBpbiBPbnRhcmlvIGZvciBDRklCLCBzYWlkIHRoZSB0aHJlZSBpbml0aWF0aXZlcyB3b3VsZCBjcmVhdGUgam9icywgZWxpbWluYXRlIGJ1cmRlbnNvbWUgcGFwZXJ3b3JrIGFuZCBnaXZlIHNtYWxsIGJ1c2luZXNzIG93bmVycyBhbmQgdGhlaXIgZW1wbG95ZWVzIG1vcmUgZmxleGliaWxpdHkuLiAKQSBtaXNjb25jZXB0aW9uIHRoYXQgSSBzYXcgaW4gdGhlIGNvbW1lbnRzIG9mIGEgcG9zdCBvbiByZWRkaXQgYXdoaWxlIGFnbyBoYWQgcGVvcGxlIHRhbGtpbmcgYWJvdXQgaG93IG1vc3QgaG9ja2V5IHBsYXllcnMgY29tZSBmcm9tIHVwcGVyIGNsYXNzIGZhbWlsaWVzLiAKQ29tbWVudHMgYW5kIGNvbnRleHR1YWxpemF0aW9uIG1hdHRlci4gCldlIGdvbm5hIGJlIGZpbmUsIE1vcnR5LCByZWxheC4gCkJsYWNrIFBhbnRoZXIgaGFzIDE4JSwgQW50IE1hbiBhbmQgdGhlIFdhc3AgaGFzIDExJS4gClllYWgsIGJ1dCBpZiB5b3UgY2hvb3NlIHRoZSBjYXJyaWVyIHZlcnNpb24geW91IGxvb3NlIG91dCBvbiBmZWF0dXJlcy4gTGlrZSBmb3IgZXhhbXBsZSBWZXJpem9uIHZlcnNpb24gbG9vc2UgU2Ftc3VuZyBjbG91ZCwgY2FsbGVyIElELCBzcGFtIGJsb2NrZXIsIGRldmljZSBtYWludGVuYW5jZS4gVmVyaXpvbiB0aGVuIG1ha2VzIHlvdSBwYXkgZXh0cmEgaWYgeW91IHdhbnQgY2xvdWQgc2VydmljZSBvciBjYWxsZXIgaWQvc3BhbSBibG9ja2VyLiBPbiB0aGUgdW5sb2NrZWQgdmVyc2lvbiB5b3UgZ2V0IGFsbCBvZiB0aGF0LiBUaGUgb25seSB0aGluZyB5b3UgbG9vc2UgaXMgdmlkZW8gY2FsbGluZyBvbiBuZXdlciBwaG9uZXMuIE9uIG9sZGVyIHBob25lcyBpdCB2aWRlbyBhbmQgd2lmaSBjYWxsaW5nLiBUaGV5IGRvIHRoaXMgYmVjYXVzZSBWZXJpem9uIGlzIHBldHR5IGFuZCB3YW50cyB5b3UgdG8gYnV5IHRoZWlyIHBob25lcy4KSSBtZWFuIGlmIGkgZ3JhbnQgeW91IHRoZSBmdWxsIHRoZW9yZXRpY2FsIG91dGNvbWUgb2YgZnVsbCBjcnlwdG8gaW1wbGVtZW50YXRpb24sIHRoYXQgZG9lc250IGRlc3Ryb3kgZ292ZXJubWVudHMuIApUaGUgZmxhZ3NoaXAgYmVhbSBhbHNvIGJyb2tlIHRocm91Z2ggb25jZS4uIApVc2UgdGhlIHByb2ZpdCBtb3RpdmUgd2hlbiBpdCBhcHByb3ByaWF0ZS4gVGhlcmUgaXMgYSBsaW1pdGVkIHN1cHBseSBvZiBoZWFsdGhjYXJlIGFuZCBhbiB1bmxpbWl0ZWQgZGVtYW5kIGZvciBoZWFsdGguIFRoZSBmcmVlIG1hcmtldCBkb2VzbiBoYXZlIGEgcGxhY2UgaW4gdGhhdCBraW5kIG9mIHNjZW5hcmlvd2UgaGF2ZSBhIHNtYWxsIGZvb2QgcHJvY2Vzc29yLCBtaWdodCBob2xkIDIgY3VwcyBvZiBhbnl0aGluZywgdG90YWwuIApUaGUgZGVhZGJvbHQgd2FzIE5PVCBsb2NrZWQsIGJ1dCB0aGUgZG9vcmtub2IgV0FTIGxvY2tlZC4gClRha2Ugbm90ZSBvZiB0aGVzZSB0aXBzIHRvIGhhdmUgc3Ryb25nZXIgZmluZ2VybmFpbHM6CkEgc3R1ZHkgdGhhdCBiZWdhbiBpbiB0aGUgZWFybHkgMTk5MHMgaGFzIHNob3duIHRoYXQgY2hpbGRyZW4gd2hvIGFyZSBicmVhc3RmZWQgaGF2ZSB0aGUgc2FtZSByYW5nZSBvZiBJUXMsIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB0aGV5IGhhdmUgdGhlIGFiaWxpdHkgdG8gbWFrZSB0aGVpciBvd24gREhBLgo=|<---