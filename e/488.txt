--->|VGhlIGRlZmVjdCBzcGVha2VycyBhcmUgY29ubmVjdGVkIHNlcGVyYXRlbHkgdGhyb3VnaCBvcGVuIGVuZGVkIGNhYmxlcyBpbiB0aGUgYmFjayBvZiB0aGUgYW1wIGFuZCB0aGUgd29ya2luZyBvbmVzIGFyZSBqdXN0IHNvbWUgMy41bW0gUGMgc3BlYWtlcnMgd2hpY2ggaSBjb25uZWN0ZWQgdGhyb3VnaCB0aGUgaGVhZHBob25lIGphY2soaSBzYWlkIEF1eCBvdXQgY2F1c2UgbXkga25vd2xlZGdlIG9mIHRoaXMgaXMgdmVyeSBsaW1pdGVkKS4gCkxpdmUgVGhlYXRyZSBDbGVhcmx5LCB0aGlzIGlzIHRoZSBWZWdhcyBvZiB0aGUgRWFzdCwgd2hlcmUgdGhlYXRyZXMgYW5kIHRoZSBsYXJnZXIgdGhhbiBsaWZlIGNlbGVicml0eSBwZXJmb3JtZXJzIGFyZSBib29rZWQgeWVhcnMgaW4gYWR2YW5jZSBhbmQgc2hvd3MgYXJlIHNvbGQgb3V0LiAKT3RoZXIgdGhhbiB0aGF0IGl0IHJlYWxseSBkZXBlbmRzIG9uIHdoZXJlIGFuZCBmb3IgaG93IGxvbmcgd2lsbCB5b3UgYmUgc3RheWluZy4KIkFzIGFjdG9ycywgaXQgaXMgb3VyIGpvYiB0byBzdGF5IHVwIHRvIHRoZSBtYXJrIGFuZCB3ZSB3ZXJlIHByZXBhcmVkIGZvciBpdCBiZWZvcmUgZW50ZXJpbmcgdGhpcyBpbmR1c3RyeS4gCk1vcmUgQXJ0aWNsZXMgVGhpbmdzIHRvIEtub3cgYXMgYSBQZXJzb25hbCBUcmFpbmVyCkl0IHdpbGwgbm8gbG9uZ2VyIGJlIGNhbGxlZCBtb3Vzc2UuIEl0IGlzIG9ubHkgbW90aGVyIG1pbGsuIEl0IGhhcyBhbHdheXMgYmVlbiBzby4uIApXaXNoaW5nIEkgY2FuIG1ha2UgaXQgYmV0dGVyIGZvciBhbGwgb2YgdXMuIAoiU28gd2UnbGwgc2VlIHdoYXQgaGFwcGVucy4gWW91IGtub3csIEkgb2Z0ZW4gc2F5LCAnV2hvIGtub3dzPycgV2hvIGtub3dzPyBNYXliZSBhIGxvdCBvZiB0aGluZ3MgY2hhbmdlLiIKQW5kIG9mIGFsbCBwZW9wbGUgeW91IGhhdmUgYSBjYW5kaWRhdGUgZnJvbSB0aGUgV2VzdCBTaWRlIGJpdGNoaW5nIGFib3V0IHRoZSByb2Fkcy4gSSBndWVzcyBXZXN0IFNpZGVycyBhcmUgZmluYWxseSBmZWVsaW5nIGNoYXJpdGFibGUgd2FudCBzdHJlZXQgaW1wcm92ZW1lbnRzIGluIG90aGVyIHBhcnRzIG9mIHRoZSBDaXR5LiBNYXgsIHRoZSBkaXN0cmljdCBhbGwgaW5jbHVkZXMgZG93bnRvd24gYW5kIGl0IGhhcyBzaGl0dHkgc3RyZWV0cyEiQ29ycmVjdGlvbi4gSXQgaGFzIGNoYXJhY3Rlci4gc2hvdWxkIHB1bGwgaXQgb2ZmLCBidXQgSSBjYW5ub3QgaW1hZ2luZSB0aGUgTW9uZXkgZ3V5cyB3YW50aW5nIHRvIHRocm93IGF3YXkgbW9uZXkgdG8gcHJvdmUgYSBwb2ludCwgdGhhdCBzb21ldGhpbmcgRXNjb2JhciB3b3VsZCBkby4gCkJsb29tIGNhbiBtZWFuIHRvIGh5ZHJhdGUgZ2VsYXRpbiBpbiB3YXRlciBiZWZvcmUgYWRkaW5nIGl0IHRvIHdoYXQgeW91IGFyZSB0aGlja2VuaW5nLiBCbG9vbSBjYW4gYWxzbyByZWZlciB0byB0aGUgY2hhbGt5IHdoaXRlIGNvYXRpbmcgdGhhdCBhcHBlYXJzIG9uIGltcHJvcGVybHkgc3RvcmVkIGNob2NvbGF0ZSwgd2hlcmUgY29jb2EgYnV0dGVyIGhhcyBzZXBhcmF0ZWQgb3V0IGFuZCBzZXQgb24gdGhlIHN1cmZhY2UuU29mdCBjaGVlc2VzIHN1Y2ggYXMgQnJpZSBhcmUgc2FpZCB0byBiZSBibG9vbSByaXBlbmVkIGJlY2F1c2Ugb2YgdGhlIGxpZ2h0LCB3aGl0ZSBjb2F0aW5nIHRoYXQgZm9ybXMgb24gdGhlIHJpbmQgYXMgdGhlIGNoZWVzZSBhZ2VzLkJsb29tIGNhbiBhbHNvIHJlZmVyIHRvIHRoZSBiZW5lZmljaWFsIGZsb3JhIHRoYXQgZ3JvdyBvbiBzb21lIHZlZ2V0YWJsZXMgYW5kIGZydWl0cywgc3VjaCBhcyBncmFwZXMuUnVobG1hbiBzYXlzIGFub3RoZXIgbWVhbmluZyBvZiB0aGUgd29yZCBpcyB3aGVuIGNoZWZzIHB1dCBzcGljZXMgb3IgYXJvbWF0aWNzIGluIG9pbCBzbyB0aGF0IHRoZXkgImJsb29tIiBhbmQgcmVsZWFzZSB0aGVpciBmbGF2b3VyIGludG8gaXQuS2F0ZSwgb2YgY291cnNlLCBpcyBsb29raW5nIGZvciBpbmZvcm1hdGlvbiBvbiB0aGF0IGRlZmluaXRpb24uVGhlIHRlY2huaXF1ZSBpcyBtb3N0IG9mdGVuIHVzZWQgaW4gaG90IHByZXBhcmF0aW9ucywgc3VjaCBhcyBhbiBJbmRpYW4gY3VycnksIHdoZXJlIHNwaWNlcyBhcmUgaGVhdGVkIGluIG9pbCB0byBoZWxwIGRldmVsb3AgYW5kIHJlbGVhc2UgdGhlaXIgZmxhdm91cnMuVGhlIGJsb29taW5nIG9mIHNwaWNlcyBjYW4gYmUgZG9uZSBzZXBhcmF0ZWx5IGluIHRoZSBvaWwgb3Igb3RoZXIgZmF0LCBzdWNoIGFzIGdoZWUgKGNsYXJpZmllZCBidXR0ZXIpLiBJdCBjYW4gYWxzbyBiZSBkb25lIHdoZW4gb3RoZXIgaW5ncmVkaWVudHMgYXJlIGJlaW5nIGNvb2tlZCwgc3VjaCBhcyBzcHJpbmtsaW5nIGEgZ3JvdW5kIHNwaWNlIGluIHRoZSBwYW4gd2hlbiBpbmdyZWRpZW50cywgc3VjaCBhcyBvbmlvbnMgYW5kIGdhcmxpYywgYXJlIGZyeWluZy5BY2NvcmRpbmcgdG8gSGFyb2xkIE1jR2VlJ3MgYm9vayBPbiBGb29kIGFuZCBDb29raW5nOiBUaGUgU2NpZW5jZSBhbmQgTG9yZSBvZiB0aGUgS2l0Y2hlbiwgaGVhdGluZyBhIG1peCBvZiBzcGljZXMgaW4gdGhpcyB3YXkgYWxsb3dzIHRoZSBkaWZmZXJlbnQgY2hlbWljYWxzIHRvIHJlYWN0IHRvIGVhY2ggb3RoZXIgc28gdGhhdCB0aGUgZmxhdm91cnMgYmVjb21lIG1vcmUgaW50ZWdyYXRlZC4gCkkgd291bGQgZ3Vlc3MgdGhlcmUgYXJlIGFzIG1hbnkgcmFjaXN0cyBpbiB0aGUgRGVtb2NyYXRpYyBQYXJ0eSBhcyBpbiB0aGUgUmVwdWJsaWNhbiBQYXJ0eS4gCkkgbWVhbiwgdG8ga2VlcCB0aGVzZSBndXlzIGhhcHB5LiAKSkNvbmdvICA1IHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvCk1hc3NhZ2UgdGhlcmFwaXN0cyBzdWUgRmF2cmUKU2hlIHNob3VsZCBiZSBpbnZlc3RpZ2F0ZWQgYW5kIGhlciBjdWxwYWJpbGl0eSBlc3RhYmxpc2hlZC4gV2FzIHNoZSB3aWxsaW5nLCB3YXMgc2hlIGdyb29tZWQsIGhvdyBkaWQgaXQgaGFwcGVuIHdoYXQgaXMgdGhlIGNvbnRleHQgYW5kIGF0IHRoYXQgcG9pbnQgc29jaWV0eSBjYW4gZGVjaWRlIGhvdyBzaGUgc2hvdWxkIGJlIHB1bmlzaGVkLgpJdCBzYWQsIGJ1dCBpdCBhbHNvIGVuZHMgYSBsb3Qgb2Ygc3VmZmVyaW5nIGFuZCBwYWluIHRoYXQgcGVvcGxlIGhhdmUgYmVlbiBsaXZpbmcgd2l0aCBmb3IgeWVhcnMgKEkgYWxzbyB3b3JrIHdpdGggYSBtb3N0bHkgZ2VyaWF0cmljIGNocm9uaWNhbGx5IGlsbCBwYXRpZW50IHBvcHVsYXRpb24pLi4gCllvdSBjYW4gc3RpbGwgaGVhciBwZW9wbGUgdGFsa2luZyB0byB5b3UuIEkgZG9uIHNlZSBob3cgYW55b25lIHdvdWxkIHNlZSB0aGF0IGFzIHJ1ZGUuIApJIGFkbWl0dGVkbHkgYSBwZXNzaW1pc3QgYnV0IEkgdGhpbmsgaXQgY3JhenkgdG8gbm90IGhhdmUgc29tZSBraW5kIG9mIGRldGVycmVudCB0byB0eXJhbm55IHdoZW4geW91IHNlZSBhIFRydW1wIHR5cGUgaW4gdGhlIFdoaXRlIEhvdXNlLi4gCkNhdGFuIGJlbG9uZ3MgdG8gYSBzdWIgZ3JvdXAgb2YgYm9hcmQgZ2FtZXMgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgR2VybWFuIHN0eWxlIGJvYXJkIGdhbWVzLCBiZWNhdXNlIG1hbnkgb2YgdGhlbSBjb21lIGZyb20gdGhlcmUuIFRoZXkgYXJlIG9mdGVuIG1vcmUgYWJvdXQgc29jaWFsIGludGVyYWN0aW9uIG9yIGJ1aWxkaW5nIHRoaW5ncyB0aGFuIGp1c3QgbW92aW5nIHBpZWNlcyBhcm91bmQgYSBib2FyZCwgYXMgd2VsbCBhcyBiZWluZyBhYm91dCBzY29yaW5nIHJhdGhlciB0aGFuIGVsaW1pbmF0aW5nIG90aGVyIHBsYXllcnMuIE90aGVyIGdhbWVzIG9mIHRoaXMgdHlwZSBhcmUgQ2FyY2Fzc29ubmUgYW5kIFRpY2tldCB0byBSaWRlLiBUaGVzZSBnYW1lcyBhcmUgcmVsYXRpdmVseSBlYXN5IHRvIHBpY2sgdXAgYW5kIGhhdmUgd29uIG1hbnkgaW50ZXJuYXRpb25hbCBhd2FyZHMuIFRoZXNlIGFyZSB3b25kZXJmdWwgZ2FtZXMgZm9yIGZhbWlsaWVzIG9yIGdyb3VwcyBvZiBob2JieSBnYW1lcnMuIFRoZXkgYXJlIHNpbXBsaXN0aWMsIHlldCBkZWVwLgpJIGxpdGVyYWxseSBqdXN0IHNhdCB0aGVyZSBhd2FrZSwgZGljayBvdXQgY292ZXJlZCBpbiBqaXp6IGZvciBsaWtlIGEgaGFsZiBob3VyIHVudGlsIHNoZSBwYXNzZWQgb3V0LiAKSXQgcmVhbGx5IGRlcGVuZHMgb24gdGhlIHN0YWtlcyB5b3Ugd2FudCB0byBwbGF5LiAKT3VyIGZyZWVkYXRpbmcgc2VydmljZSBnaXZlcyB5b3Ugc2ltcGxlIHRvb2xzIHRvIGZpbmQgcGVvcGxlIGluIHlvdXIgYXJlYSBsb29raW5nIGZvciBsb3ZlLCB3YW50aW5nIGEgcmVsYXRpb25zaGlwIG9yIGp1c3Qgd2FudGluZyB0byBtZWV0IG5ldyBmcmllbmRzLiAKSWRlYXMgYW5kIGluc3BpcmF0aW9uIGF0IHRoZSBCQyBIb21lCkl0IHdhcyBhIG15c3RlcmlvdXMgZGVhbC4gVGhlIHdob2xlIHRoaW5nIGlzIG9kZC4gSSBkb24gcmVhbGx5IGtub3cgaG93IHRvIGV4cGxhaW4gaXQgYW5kIEkgZG9uIHRoaW5rIGFueWJvZHkgZWxzZSBkb2VzIGVpdGhlci4gLiBIb3cgW0dyZWVuZV0gd29uIHRoZSBwcmltYXJ5IGlzIGEgYmlnIG15c3RlcnksIGFuZCB1bnRpbCB5b3UgcmVzb2x2ZSB0aGF0IEkgZG9uIHRoaW5rIGhlIGNhbiBjbGFpbSB0byBiZSBhIHN0cm9uZywgY3JlZGlibGUgY2FuZGlkYXRlLiIKUHJhY3RpY2UgcmVsYXhhdGlvbiB0ZWNobmlxdWVzIGFuZCBkbyBhbHRlcm5hdGl2ZSBtZXRob2RzIHN1Y2ggYXMgbWVkaXRhdGlvbiwgbWFzc2FnZSwgaHlwbm9zaXMsIHRhaSBjaGksIGFjdXB1bmN0dXJlIGFuZCBvdGhlcnMgdG8gYWxsZXZpYXRlIHRoZSBzeW1wdG9tcyBvZiBhIGhpYXRhbCBoZXJuaWEuCkdhZGdldHMgR2l6bW9zIEdhbG9yZSBBdCBDRVMgMjAxMzIwMTMgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBIaWdobGlnaHRzIE5ld2VzdCBUZWNobm9sb2d5QSBnZW5lcmFsIHZpZXcgb2YgdGhlIExHIFBvY2tldCBQaG90byBwcmludGVyIGRpc3BsYXkgdGhhdCB1c2VzIE5GQyB0ZWNobm9sb2d5IGF0IHRoZSAyMDEzIEludGVybmF0aW9uYWwgQ0VTIGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA4LCAyMDEzIGluIExhcyBWZWdhcywgTmV2YWRhLiAKRElTQ09WRVJZIENIQU5ORUwgVEFLRVMgQSBMT09LIEFUIEhPVyBCUlVDRSBMRUUgQ0hBTkdFRCBUSEUgV09STEQgSU4gQSBTUEVDSUFMIFRSSUJVVEUgVE8gVEhFIE1BUlRJQUwgQVJUUy4gTW92aWVzIFRWIE5ldyBSZWxlYXNlcyBCZXN0IFNlbGxlcnMgRGVhbHMgQmx1IHJheSA0SyBVbHRyYSBIRCBUViBTaG93cyBLaWRzIEZhbWlseSBBbmltZSBBbGwgR2VucmVzIFByaW1lIFZpZGVvIFlvdXIgVmlkZW8gLiBCcnVjZSBMZWUgKEEgV2FycmlvcidzIEpvdXJuZXkgLyBJbiBQdXJzdWl0IG9mIHRoZSBEcmFnb24pIChEb3VibGUgRmVhdHVyZSAuIApUaGlzIEZyaWRheSwgd29tZW4gYnVzaW5lc3Mgb3duZXJzLCBjcmVhdGl2ZXMsIGFuZCBhbGxpZXMgd2lsbCBjb21lIHRvZ2V0aGVyIGZvciBhIGRheSBvZiBza2lsbHMgc2hhcmluZywgY29tbWVyY2UsIGFuZCBuZXR3b3JraW5nLiAKVGhlc2UgMSVlcnMgd2hvIGNvbm5lY3QgZm91ciBvciBmaXZlIHJlZ2lvbmFsIGNvbXBhbmllcyB0byBjcmVhdGUgYSBiYXR0bGVzaGlwIHRoYXQgYmxvd3MgYWxsIGNvbXBldGl0aW9uIG91dCBvZiB0aGUgd2F0ZXIgbmVlZCB0byBiZSByZW1pbmRlZCB0aGF0IEFtZXJpY2Egd2FzIGJ1aWx0IG9uIGNvbXBldGl0aW9uLiAKVGhlcmUgYXJlIGEgbG90IG9mIHBlb3BsZSB3aG8gaGF2ZSBiZWFyIGNvbXBhbmlvbnMgYXMgcGV0cyBpbiBOb3J0aCBFYXN0ZXJuIEV1cm9wZS4gSW4gYSBsb3Qgb2YgdGhvc2UgY291bnRyaWVzIGl0IG5vdCBpbGxlZ2FsLCBvciBldmVuIGZyb3duZWQgdXBvbiBhbmQgd2hpbGUgb24gb2NjYXNpb25zIGl0IGRvZXMgZW5kLiAKVGhleSBhcmUgdGhlIG9uZXMgeW91IHdpbGwgYmUgZmFjZSBhZ2FpbnN0IGluIHRoZSBsYXN0IDIgdGFibGVzLi4gClRoaXMgb25lIGxpdGVyYWxseSBuZXZlciBoYXBwZW5lZCBhcyBmYXIgYXMgYW55b25lIGNhbiB0ZWxsLiBXb21lbiBwcm90ZXN0aW5nIGFnYWluc3QgdGhlIDE5NjggTWlzcyBBbWVyaWNhIGNvbnRlc3QgaW4gTmV3IFlvcmsgZGlkIHRvc3Mgc2V2ZXJhbCBpdGVtcyBpbnRvIGEgdHJhc2ggY2FuLCBpbmNsdWRpbmcgYnJhcywgZ2lyZGxlcywgaGlnaCBoZWVsZWQgc2hvZXMgYW5kIHdvbWVuJ3MgbWFnYXppbmVzLCBsYWJlbGluZyB0aGVtICJpbnN0cnVtZW50cyBvZiB0b3J0dXJlLiIgQnV0IG5vIGZpcmUgd2FzIGludm9sdmVkLCBleGNlcHQgZm9yIHRoZSBmaXJlIG9mIGJ1cm5pbmcgZmVtaW5pbmUgcmFnZS4gTmVpdGhlciBkaWQgdGhlIHdvbWVuIGFjdHVhbGx5IHJlbW92ZSB0aGVpciBicmFzIGF0IHRoZSBwcm90ZXN0LCBpbmV4cGxpY2FibHkgb3B0aW5nIHRvIGdhdGhlciB0aGUgYnJhcyBiZWZvcmVoYW5kLCBhbmQgcmVtYWluIGZ1bGx5IGNsb3RoZWQuLiAKWW91IGtlZXAgYmVsaWV2aW5nIHRoaXMgY291bnRyeSBpcyBjZW50cmlzdCBhbmQgbG9zZSBhbm90aGVyIGVsZWN0aW9uIHRvIFRydW1wLk1vZGVyYXRlcy9jZW50cmlzdHMgY2FuIHZvdGUgaG93ZXZlciB0aGV5IGxpa2UuIApXZXJlIHRoZXkgdG9vIGFoZWFkIG9mIHRoZWlyIHRpbWU/IE5vdCBhdCBhbGwuIApOYXR1cmUncyBSb290IGFsc28gc2F5cyB0aGUgQ0JEIG9pbHMgaGF2ZSBkZWVwZXIgcGVuZXRyYXRpb24gb2YgdGhlIG11c2NsZSBhbmQgdGhlIGVmZmVjdHMgbGFzdCBsb25nZXIgdGhhbiB0cmFkaXRpb25hbCBtYXNzYWdlIG9pbC4KTmF0dXJhbGx5LCB0aGUgaW5jdW1iZW50IHByb3ZpZGVycyByZWFsaXplZCB0aGF0IG90aGVycyBjb3VsZCBkbyB0aGlzIHRvbywgc28gdGhleSBhcHByb2FjaGVkIHRoZSBnb3Zlcm5pbmcgYm9kaWVzLCByYW5naW5nIGZyb20gZmVkZXJhbCB0byBzdGF0ZSB0byBsb2NhbCwgYW5kIHdpdGggdmFyeWluZyBkZWdyZWVzIG9mIHN1Y2Nlc3MgaW4gZWFjaCwgYmVnYW4gdG8gZXhwbGFpbiBob3cgdGhleSBjb3VsZCBtdWNoIG1vcmUgZWFzaWx5IHJlYWNoIHRoZSBpc29sYXRlZCBhcmVhcywgYW5kIGhvdyB0aGV5IGNvdWxkIHByb3ZpZGUgdGhlIGdvdmVybm1lbnRzIHRoZW1zZWx2ZXMgd2l0aCBuZXcgYW5kIGJldHRlci9mYXN0ZXIgc2VydmljZXMgaWYgdGhleSB3ZXJlIGdyYW50ZWQgZXhjbHVzaXZpdHkgaW4gdGhlIHRlcnJpdG9yeS4gTGF3cyB3ZXJlIGVuYWN0ZWQgYWxsIG92ZXIgdGhpcyBncmVhdCBsYW5kIHByb2hpYml0aW5nIGFueW9uZSwgaW4gbWFueSBjYXNlcyBpbmNsdWRpbmcgY2l0aWVzIGFuZCBjb3VudGllcyB0aGVtc2VsdmVzIGZyb20gYnVpbGRpbmcgc3F1YXQgaW4gdGhlIHRlbGVjb21tdW5pY2F0aW9ucyBmaWVsZC4uIApBbHNvICAgd2hlbiBkaWQgc2xlZXBvdmVycyB3aXRoIGdyYW5kcGFyZW50cyBiZWNvbWUgIm5vcm1hbCIgLyBzb21laG93IGltbWVkaWF0ZWx5IGV4cGVjdGVkIGFzIGEgInJpZ2h0IiBieSBncmFuZHBhcmVudHM/IFlvdXIgc29uIGFscmVhZHkgaGFzIGEgaG9tZS4gClByZXR0eSBtdWNoIGV2ZXJ5dGhpbmcgeW91IGNvbWUgaW4gY29udGFjdCB3aXRoIG9uIGEgZGFpbHkgYmFzaXMgaXMsIHRvIHNvbWUgZGVncmVlLCBhIHByb2R1Y3Qgb2YgYSBzb2NpZXR5IG9mIGh1bWFucyB3b3JraW5nIHRvZ2V0aGVyIHRvIHVuZGVyc3RhbmQgc29tZXRoaW5nIG5vIHBlcnNvbiBjb3VsZCBoYXZlIGV2ZXIgZmlndXJlZCBvdXQgaW4gYSBkb3plbiBsaWZldGltZXMuLiAKU2hlIHVzaW5nIHRoZSBub3ZlbCBmb3JtYXQgdG8gZ2V0IGl0IGFsbCBhY3Jvc3MuIFRoZSBzdG9yeSBmb2xsb3dzIGEgbWFuIHdobyBoYXMgY29tcGFueSB3aXRoIGEgdG9uIG9mIGRlYnQsIHdobyBnZXRzIGEgdGlja2V0IHRvIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIFdoaWxlIGhlIHRoZXJlIGhlIG1lZXRzIGEgZmVtYWxlIGVudHJlcHJlbmV1ciwgYW5kIHRvZ2V0aGVyIHRoZXkgaGF2ZSBuaW5lIGRheXMgdG8gdHVybiBoaXMgZm9ydHVuZXMgYXJvdW5kLi4gCkZZSS4gVGhlIEdhbWUgb2YgQmxhY2tKYWNrIChhcyBhIENhc2lubyBHYW1lKSBJcyBUaGUgT05MWSBHYW1lIHRoYXQgYWxsb3dzIGEgcGxheWVyIHRvIHJlZHVjZSB0aGUgaG91c2UgJSBvZGRzLCBhcyBhIGRpcmVjdCByZXN1bHQgb2YgaG93IHRoZSBwbGF5ZXIgcGxheXMgdGhlIGNhcmRzIHRocm91Z2hvdXQgdGhlIGdhbWUuIElmIHlvdSBkb24ndCB1bmRlcnN0YW5kIHRoYXQgKGFzIGl0IGFwcGVhcnMgZnJvbSB5b3VyIHBvc3QsIHRoYXQgeW91IGRvbid0KSB5b3Ugc2hvdWxkIHJlZnJhaW4gZnJvbSBnaXZpbmcgYWR2aWNlIHRoYXQgeW91IHdvdWxkIHdpc2ggdG8gaGF2ZSBhY2NlcHRlZCBhcyAncXVhbGZpZWQuJwpBY2NvcmRpbmcgdG8gTWFlZGEsIGhlIHN0YXJ0ZWQgdGhlIHByYWN0aWNlIGluIG9yZGVyIHRvIGdldCBhcm91bmQgSmFwYW4ncyBzdHJpY3QgY2Vuc29yc2hpcCBsYXdzLCB3aGljaCBmb3JiYWRlIHRoZSBkZXBpY3Rpb24gb2YgYSBwZW5pcyBidXQgZGlkIG5vdCBmb3JiaWQgcGVuZXRyYXRpb24gYnkgYW55dGhpbmcgZWxzZS4uIApJIHBsYXllZGZvciAxOCB5ZWFycyBhY3R1YWxseSBhcyBhIHByb2Zlc3Npb25hbHBva2VyIHBsYXllci4gSW4gMjAxMiBJIGZ1bGx5IHJldGlyZWQgYW5kc3RhcnRlZCByZWFsbHkgZm9jdXNpbmcgZnVsbCB0aW1lIG9uIHRoZXdvcmsgdGhhdCByZXN1bHRlZCBpbiB0aGUgYm9va1RoaW5raW5nSW1wYWN0cy4gCkEgc2luZ2xlIHBlcnNvbiBjbGFpbWVkIHRoaXMsIG5vdCBhIGJ1bmNoLiAKSXMgdGhlIHdvcmRpbmcgb2YgdGhlIGFydGljbGUgc28gYnJvYWQgYXMgdG8gcGVybWl0IHRoaXMgYXZlbnVlPyBJcyB0aGVyZSBwcmV2aW91cyBjYXNlIGxhdyB0byBnaXZlIGRpcmVjdGlvbiBoZXJlPwpUaGV5IHdvbid0IGJlIGluIHRoZSB3YXkgYW5kIHRoZSBmb2xkaW5nIGxlZ3MgbWFrZSB0aGVtIGVhc3kgdG8gcHV0IGF3YXkgZm9yIHN0b3JhZ2UuIApUaGUgTmF0aXZlIGRpcmVjdCB0byBjb25zdW1lciBkZW9kb3JhbnQgYnJhbmQgUCBhY3F1aXJlZCBsYXN0IHllYXIgcmVjZW50bHkgbW92ZWQgaW50byBUYXJnZXQsIG11Y2ggbGlrZSBQIHJpdmFsIEhhcnJ5J3MgaGFzIG1vdmVkIGludG8gVGFyZ2V0IGFuZCBXYWxtYXJ0LgpPYnZpb3VzbHksIGl0IHdvdWxkIGhhdmUgYmVlbiBhIGJhZCB3YXkgZm9yIEZyb2NoIHRvIGVuZCBoaXMgY2FyZWVyIG9uIGEga25vY2tvdXQuIApIZSBhbHNvIHNhaWQgdGhlIHdvbWVuIHdlcmUgZnJlZSB0byBjb21lIGFuZCBnbyBhcyB0aGV5IHBsZWFzZWQuU29saXMgdG9sZCBwb2xpY2UgdGhhdCBhZnRlciBzZXZlcmFsIHdlZWtzIGhlIGFuZCBMb3BleiBoYWQgZ2l2ZW4gdGhlIHdvbWFuIG1vcmUgY29udHJvbCBvZiB0aGUgb3BlcmF0aW9uIGFuZCBsZXQgaGVyIGNvbGxlY3QgbW9uZXkgZnJvbSB0aGUgb3RoZXJzLiAKQXBwbGljYXRpb25zIHNob3VsZCBiZSBzdWJtaXR0ZWQgZWxlY3Ryb25pY2FsbHkgdG8gdGhlIGtleSBhZG1pbmlzdHJhdGl2ZSBjb250YWN0IGluIHlvdXIgU2Nob29sIG9yIGRlcGFydG1lbnQgYnkgMjYgQXByaWwgMjAxOSwgc28gdGhhdCBhcHBsaWNhdGlvbnMgY2FuIGJlIGNvbnNpZGVyZWQgYXQgU2Nob29sIFNlbGVjdGlvbiBQYW5lbHMgd2hpY2ggbm9ybWFsbHkgbWVldCBhdCB0aGlzIHRpbWUuIAoiWW91J3ZlIGdvdHRhIGhhdmUgdGhlIHRvdWNoLCBvYnZpb3VzbHksIHlvdSBrbm93IHdoYXQgSSdtIHNheWluZz8iIE1vcnJpcyBzYWlkLiAiSGUgZGlkbid0IGtub3cgaG93IHRvIHBsYXkgYXQgZmlyc3QsIGFuZCBub3cgaGUncyByZWFsbHkgZ29vZCBhdCBpdC4gSGUgZm91bmQgaGlzIHJoeXRobS4gSXQncyBsaWtlIGJhc2tldGJhbGw6IFlvdSBzaG9vdCBhIGxpdHRsZSBiaXQgYW5kIHlvdSdyZSBvZmYsIGFuZCB0aGVuIHlvdSBmaW5kIHRoYXQgcmh5dGhtIGFuZCBnbyBmcm9tIHRoZXJlLiIKRmFzdCBmb3J3YXJkIHRvIDIwMTE6IG15IGZhbWlseSBpcyBwbGFubmluZyBvbiBidXlpbmcgdGlja2V0cyB0byBnYW1lIDYuIApNYW5pYWNzIGhhdmVuJ3QgYW55IHJlZ2FyZCBmb3IgdGhlIHF1YW50aXR5IG9mIG1vbmV5IGFuZCB3aWxsIGZyZXF1ZW50bHkgaGF2ZSBhIGxvdCBvZiBpdC4gCkkgaGF0ZSBmZWVsaW5nIGxpa2UgSSdtIG5vIHVzZSB0byBzb2NpZXR5IGFuZCBJIHN0cml2ZSB0byBiZSBhYmxlIHRvIGVhcm4gbXkgb3duIHdheS4uIApKb3MgQ2FyaW9jYSBpcyBhIGRhcHBlciBCcmF6aWxpYW4gcGFycm90IHdobyBtYWRlIGhpcyBmaXJzdCBhcHBlYXJhbmNlIGluIHRoaXMgZmlsbS4gQSBncmVlbiBiaXJkIHdpdGggYSB5ZWxsb3cgYmVhaywgaGUgdXN1YWxseSBjYXJyaWVzIGFuIHVtYnJlbGxhIGFuZCBjaWdhciBhbmQgd2VhcnMgYSBib3cgdGllIGFuZCBoYXQuIApJbiBBbGJlcnRhLCBhIGNvdXBsZSB3ZSBjYWxsIE1hcnksIDM3LCBhbmQgUmFscGgsIDQ1LCBhcmUgcmFpc2luZyB0aGVpciBjaGlsZCwgRXRoYW4sIGFnZSAyLiBCb3RoIHJlc2VhcmNoZXJzIGluIGNvbW11bmljYXRpb25zLCB0aGV5IGJyaW5nIGhvbWUgJDgsNTYzIHBlciBtb250aCBhbmQgYWRkICQxMjUgZnJvbSB0aGUgQ2FuYWRhIENoaWxkIEJlbmVmaXQgZm9yIHRvdGFsIG1vbnRobHkgZGlzcG9zYWJsZSBpbmNvbWUgb2YgJDgsNjg4IHBlciBtb250aC4gCk9uZSB3b3VsZCBob3BlIHRoZSBQbGFpbnRpZmYgd2FzbiBwdXNoZWQgb250byB0aGF0IHNsb3BlIGJ5IGFueW9uZSBhY3RpbmcgaW4gYmVoYWxmIG9mIHRoZWlyIG93biBiZXN0IGludGVyZXN0IGFuZC9vciBwdWJsaWNhdGlvbnMgcmF0aGVyIHRoYW4gdGhlIERlZmVuZGFudCBiZXN0IGludGVyZXN0cyBnaXZlbiB0aGUgY2FzZSBzZWVtcyByaXBlIGZvciBjb3VudGVyLi4gCkFjY29yZGluZyB0byBkYXRhIGZyb20gQWxsaWFueiBHbG9iYWwgQXNzaXN0YW5jZSwgYSBsZWFkaW5nIHRyYXZlbCBpbnN1cmFuY2UgY29tcGFueSwgc3RhdGlzdGljcyBzaG93IHRoYXQgTmV3IFlvcmsgQ2l0eSBjbGFpbXMgdGhlIG51bWJlciBvbmUgc3BvdCBmb3Igcm9tYW50aWMgZGVzdGluYXRpb25zIGluIDIwMTkgZm9yIHRoZSB0aGlyZCB5ZWFyIGluIGEgcm93LiBGcm9tIHRyYWRpdGlvbmFsIHJvbWFuY2UgdG8gY29udGVtcG9yYXJ5IGNvdXJ0c2hpcCwgdGhlIEFwcGxlIGhhcyBldmVyeXRoaW5nIGZyb20gZmluZSBkaW5pbmcgdG8gQnJvYWR3YXkgc2hvd3MgdG8gY291bnRsZXNzIG11c2V1bXMuLiAKRHVuZ2VvbnMgYWN0dWFsbHkgYXJlIHByZXR0eSBkaWZmaWN1bHQgdG8gc29tZSBleHRlbnQuIFRoZXJlIGFyZSBtb2JwYWNrcyB0aGF0IG5lZWQgdG8gYmUgY2NlZCBpbXBvcnRhbnQgZGVidWZmcyB0byBkaXNwZWxsIGFuZCBoYXJkIGhpdHRpbmcgYm9zc2FiaWxpdGllcyB1IG5lZWQgdG8gZG9kZ2UuCkxlIHJhcHBvcnQgZGUgQ2hhcHRhbCBhdSBDb3JwcyBMZ2lzbGF0aWYgY29uY2VybmFudCBjZXR0ZSBsb2kgc291bGlnbmUgcXVlIGNldHRlIGRpdmlzaW9uIGVuIGRwYXJ0ZW1lbnQgYSByc2lzdCAgIHRvdXMgbGVzIG9yYWdlcyBkJ3VuZSBsb25ndWUgUnZvbHV0aW9uLCBwYXJ1dCB0b3Vqb3VycyByZXNwZWN0ZSBldCBpbmJyYW5sYWJsZSBhdSBtaWxpZXUgZGVzIHJ1aW5lcyBldCBkZXMgZGVzdHJ1Y3Rpb25zIC4gClRoZXkgYmVsaWV2ZSB0aGV5IGFyZSBvd2VkIHNvbWV0aGluZywgaGF2aW5nIGRvbmUgbm90aGluZy4gQW5kIGJlY2F1c2UgdGhlIGdyb3VwIGlzIGNvbnRlc3RpbmcgdGhpcyBzdXBwb3NlZCBkZWJ0LCB0aGV5IGhhdmUgYW4gYXJteSBvZiB2b2x1bnRlZXIgcHJvcGFnYW5kaXN0cyBydW5uaW5nIGFyb3VuZCBwb3N0aW5nIHNoaXQgb24gdGhlIGludGVybmV0IHRvIHRyeSB0byBkcnVtIHVwIHN1cHBvcnQuCkEgY291cGxlIG9mIHdlZWtzIGFnbywgSmFtZXMgTyAyNSwgYW5kIEhhbm5haCBHaWxlcywgMjAsIGNyZWF0ZWQgYSBuYXRpb25hbCBzY2FuZGFsIG92ZXIgdGhlIHByb2dyZXNzaXZlIEFDT1JOIGdyb3VwIGJ5IHJlbGVhc2luZyBhIHZpZGVvIHN1cHBvc2VkbHkgc2hvd2luZyB0aGF0IEFDT1JOIGVtcGxveWVlcyB3ZXJlIGFueGlvdXMgdG8gaGVscCBydW4gcHJvc3RpdHV0aW9uIHJpbmdzLiBUaGUgdmlkZW8gd2FzIHJ1biBvbiBBbmRyZXcgQnJlaWJhcnQgdWx0cmFjb25zZXJ2YXRpdmUgQmlnIEdvdmVybm1lbnQgd2Vic2l0ZSBhbmQgdGhlbiBiZWNhbWUgIm5ld3MuIi4gCjI6IFdhaXQgdW50aWwgeW91ciB0dXJuLCB0aGVuIGJlZm9yZSB5b3UgaGl0IGNhbGwgb3IgcmFpc2UsIHR5cGUgcG9rZXJ0ZW4gYWdhaW4sIHRoZW4gaGl0IGNhbGwgb3IgcmFpc2UuIFlvdSdsbCBrbm93IHlvdSd2ZSBnb3QgaXQgd2hlbiBhIDksIEogb2YgY2x1YnMsIGFuZCA0IGNvbWUgdXAuIApIYXZpbmcgdGhhdCByaXNrIHBhbiBvdXQuIApCdXQgcHJhY3RpY2UgbWFrZXMgcGVyZmVjdC4gCk9ubGluZSBwb2tlciBzdGF0aXN0aWNzIG5vd2FkYXlzIGNhbiBnaXZlIHlvdSBudW1lcm91cyB0aXBzIG9uIHdoYXQgeW91IGhhdmUgYmVlbiBkb2luZyBpbiB0aGUgcGFzdCwgaG93IHN1Y2Nlc3NmdWwgeW91IGhhdmUgYmVlbiwgd2lubmluZyByYXRpbywgdG91cm5hbWVudCBhdmVyYWdlIHBsYWNlbWVudCwgYW5kIG1hbnkgb3RoZXIgdXNlZnVsIGluZm9ybWF0aW9uIHdoaWNoIGluIHR1cm4gbWlnaHQgaGVscCB5b3Ugd2luIG1vcmUgaGFuZHMgYW5kIGltcHJvdmUgeW91ciBnYW1lIGJhc2VkIG9uIHlvdXIgcGFzdCBwZXJmb3JtYW5jZSBhcyBpdCBzaG93cyB5b3Ugd2hlcmUgeW91IGhhdmUgZmFpbGVkIGluIHRoZSBwYXN0LiBBc2lkZSBmcm9tIHRoaXMgbWFqb3IgYWNoaWV2ZW1lbnQsIHNvbWV0aGluZyB0byBrZWVwIGluIG1pbmQgaXMgdGhhdCBvbmxpbmUgcG9rZXIgbm90IG9ubHkgb2ZmZXJzIG51bWVyb3VzIHRvdXJuYW1lbnRzIGFuZCAyNCAgIDcgZ2FtZSB2YXJpYXRpb25zLCBidXQgaXQgYWxzbyBnaXZlcyBjbGllbnRzIHRoZSBvcHBvcnR1bml0eSB0byBwbGF5IGF0IGNhc2ggdGFibGVzIHdpdGggYWxsIHNvcnRzIG9mIGxpbWl0cyByYW5naW5nIGZyb20gcGVubnkgbGltaXRzIHRvIGh1bmRyZWRzIG9mIGRvbGxhciBWSVAgbGltaXRzIGFuZCBtb3JlLiAKSXQncyBwYXJ0IG9mIHRoZSByZWFzb24gc2VpenVyZXMgYXJlIHNvIHVuc2V0dGxpbmcsIHNlZWluZyBzb21lb25lIG1vdmUgaW4gc3VjaCBhbiB1bm5hdHVyYWwgZmFzaGlvbiBpcyBpbW1lZGlhdGVseSByZWNvZ25pc2FibGUgYXMgc29tZW9uZSdzIGJvZHkgJ21hbGZ1bmN0aW9uaW5nJyBmb3Igd2FudCBvZiBhIGJldHRlciB3b3JkLiBJdCBsb29rcyBub3RoaW5nIGxpa2UgdGhpcyBjb29yZGluYXRlZCBzaGl2ZXIvc3Bhc20uIEFsbCBJIHNlZSBpcyBzb21lb25lIHNoYWtpbmcgdGhlaXIgb3duIGxlZ3MgYW5kIHRvcnNvLCBhcyB0aGUgY2FtZXJhIHBhbnMgYmFjayB1cCB5b3UgZXZlbiBzZWUgaGVyIGxlZnQgc2hvdWxkZXIgdGVuc2UgYW5kIG1vdmUgaW4gb3JkZXIgdG8gZ2FpbiBtb3JlIGxldmVyYWdlIGR1ZSB0byB0aGUgZWZmb3J0IHRoYXQgaXMgcmVxdWlyZWQgdG8gZG8gdGhhdC4gCkkgZXZlbiByZWFkIHRoZSBlbnRpcmUgYmlibGUgd2hlbiBJIHdhcyAxMiBhdCB0aGUgY3J1eCBvZiBteSBpbnZvbHZlbWVudCBhdCBjaHVyY2guIEkgdGhpbmsgdGhhdCB3YXMgdGhlIG1vbWVudCB0aGF0IEkgcmVhbGl6ZWQgSSB3YXMgZG9uZSB3aXRoIGl0Li4gClRoYXQgaW5jbHVkZXMgc2xlZXBpbmcgd2l0aCBrbmVlIHNsZWV2ZXMgb24gKGRvbnQgZ28gZnVsbCBTQkQgaGVyZSB0aG91Z2gsIGJ1eSBhIGNoZWFwIGFuZCB0aGluIHBhaXIgZnJvbSBhIGdlbmVyYWwgc3BvcnQgc3RvcmUgb3Igd2hhdGV2ZXIsIGkgdXNlZCBSZWhiYW5kcykgYW5kIHNwZW5kaW5nIDUgMTAgbWludXRlcyB3aGVuIGV2ZXIgaSBzaG93ZXJlZCBqdXN0IHRyeWluZyB0byBoZWF0IHVwIG15IGtuZWVzIHdpdGggaG90IHdhdGVyLgpXaGF0IG9uIEVhcnRoIGFyZSB5b3UgdGFsa2luZyBhYm91dD8gQ291bGQgeW91IGJlIGFueSBtb3JlIHZhZ3VlPwpJbnZlc3QgaW4gYnJhbmQgam91cm5hbGlzbS4KT25saW5lIFBva2VyIG9yIExpdmUgUG9rZXIKMyBEZXZlbG9wIGEgbGlzdCBvZiBjcmVkZW50aWFscyB0aGF0IGlsbHVzdHJhdGUgd2h5IGxvdCBiZXR0ZXIgdG8gaGF2ZSB0aGUgbW9uZXkgaW4gaGFuZCBiZWZvcmUgeW91IGdvIGFueXdoZXJlLiBCZSBwcmVwYXJlZCB0byBiYWNrIHVwIHlvdXIgZGVzaXJlZCBzYWxhcnkgYW5kIGEga2l0Y2hlbiBhbmQgZnJpZGdlIG9uIGJvYXJkLCBhbmQgbm8gbG9uZ2VyIGJlIGEgc2xhdmUgdG8gYmF0aHJvb20gYnJlYWtzIGFuZCBmYXN0IGZvb2QgbWVhbHMuIEJlY2F1c2Ugb2YgdGhlIGNvbXBldGl0aW9uIHRoYXQgdGhlIGludGVybmV0IGhhcyBicm91Z2h0IGFib3V0LCBtYW55IHJldGFpbCB0aGUga2V5cyB0byB0aGUgYmVzdCBmbGlnaHRzLCB0aGUgYmVzdCByZXN0YXVyYW50cyBhbmQgYmVzdCB0b3Vycy4gSG93ZXZlciBpZiB0aGUgdmFjYXRpb24gaXMgZWFybmVkIG9ubHkgb24gaG91cnMgd29ya2VkLCBlYXN5IHRvIHN0b3AgbWFpbCBkZWxpdmVyeSBmcm9tIHRocmVlIHRvIDMwIGRheXMuIEFuIGFkdmFudGFnZSB0byBjb3VjaCBzdXJmaW5nIHRoYXQgeW91IHdvbid0IGdldCBmcm9tIHZhY2F0aW9uIHRpbWUgd2l0aCB0aGUgbGlzdCBvZiBxdWFsaWZpY2F0aW9ucyB5b3UgY3JlYXRlZC4gTWFueSB1c2VycyBvZiBPdXRsb29rIEV4cHJlc3MgYXJlIGRpc2NvdXJhZ2VkIHRvIGxlYXJuIHRoYXQgdGhlIHByb2dyYW0gc21pbGUgYXMgeW91IHJlY29nbml6ZSB0aGUgcGVyc29uYWxpdGllcyB5b3UndmUgYWx3YXlzIGtub3duLiBZb3UgY2FuIG5hcnJvdyB5b3VyIHNlYXJjaCBieSBwcmljZSByYW5nZSBhbmQgb3RoZXIgdmFyaWFibGVzIGFjdGl2aXRpZXMgb24geW91ciB2YWNhdGlvbiB3aXNoIGxpc3QsIHlvdSBoYXZlIGFsc28gc2F0aXNmaWVkIG51bWJlcnMgNCA2IGFsc28uClF1b3RlIEkgbWlnaHQgaGF2ZSBzYWlkOldlbGwsIHRoZSBsYXRlc3QgIk92ZXJIZWFyZCIgSSBzYXcgcG9zdGVkIGFib3V0IG15c2VsZiBvbiBUd2l0dGVyIHdhcyBmcm9tIGEgcG9rZXIgcGFydHkgSSBob3N0ZWQgbGFzdCB3ZWVrZW5kLCBhbmQgdGhhdCBxdW90ZSB3YXMsIG5vdCB3cmVzdGxlIGhlcmUuIERvIG5vdC4gSnVzdC4gS2VlcC4gRGFuY2luZy4iUG9rZXIgb2J2aW91c2x5IGRpZG4ndCBsYXN0IGxvbmcuClRoZSBUb29sIExhdGVyYWx1cyBleWUgbG9nbyBtYXkgYmUgYSAodmVyeSkgZGlzdGFudCBwc3ljaGVkZWxpYyBpY29uIHNlY29uZC4KU2hlIGlzIG5vdyBoYXZpbmcgbmlnaHRtYXJlcyBhYm91dCBiZWluZyBpbiBhIGRhcmssIGNvbGQsIHVuZGVyd2F0ZXIgQWJ5c3MgYW5kIGJlaW5nIHB1cnN1ZWQgYnkgU09NRVRISU5HLiAKV2UgZGVmaW5lIGNvdWxkIGNhcmUgbGVzcyBhbmQgY291bGRuJ3QgY2FyZSBsZXNzIG9uIHRoZSBzYW1lIHBhZ2UsIHdpdGggdGhlIHNpbmdsZSBkZWZpbml0aW9uICJ1c2VkIHRvIGluZGljYXRlIHRoYXQgb25lIGlzIG5vdCBhdCBhbGwgY29uY2VybmVkIGFib3V0IG9yIGludGVyZXN0ZWQgaW4gc29tZXRoaW5nLiIgV2UgZG8gbm90IHB1dCB0aGVzZSBzZWVtaW5nbHkgZGlzcGFyYXRlIGlkaW9tcyBvbiB0aGUgc2FtZSBwYWdlIGluIG9yZGVyIHRvIHNhdmUgc3BhY2UsIG9yIHNvIHRoYXQgd2UgbWlnaHQgY2F1c2UgeW91IHBhaW4uIApJbiB0aGUgZm9sbG93aW5nIHNlY3Rpb25zLCB3ZSB3aWxsIGRpc2N1c3MgYmFzaWMgc3RyYXRlZ3kgYW5kIGFkdmFuY2VkIHN0cmF0ZWdpZXMgZm9yIHN0YXJ0aW5nIGhhbmQgc2VsZWN0aW9uLCBhcyB3ZWxsIGFzIHBsYXlpbmcgb24gdGhlIGZsb3AsIHR1cm4sIGFuZCByaXZlci4uIApSZWdnaWUgd2Fsa2VkIHRvIGEgY291c2luJ3MgaG91c2UgYW5kIHdhcyB0YWtlbiB0byBob3NwaXRhbC4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRoZSBSYWlsd2F5IEhvdGVsIGlzIHNldCB0byBlbnRlciBhIG5ldyBlcmEgdGhpcyBGcmlkYXkgYXMgaXQgcHJlcGFyZXMgdG8gb3BlbiBpdHMgZG9vcnMgZm9yIHRoZSBmaXJzdCB0aW1lIGluIHNpeCBtb250aHMuIFRoZSBoaXN0b3JpYyBCYXRodXJzdCBob3RlbCBpcyBub3cgdW5kZXIgbmV3IG93bmVyc2hpcCwgd2l0aCBvd25lcnMgR2VyYWxkaW5lIFdpbGxpYW1zIGFuZCBHYXZpbiBTY2h1bWFjaGVyIHB1cmNoYXNpbmcgdGhlIHZlbnVlIGluIEF1Z3VzdC4gTXMgV2lsbGlhbXMgaXMgaG9waW5nIHRvIGNyZWF0ZSBhIGZyaWVuZGx5IGFuZCB3ZWxjb21pbmcgYXRtb3NwaGVyZSBmb3IgdGhlIEhhdmFubmFoIFN0IHZlbnVlLiAKTm8sIEpvaG4gRG9lIHdhc24ndCBvcmlnaW5hbGx5IGEgc2VyaWFsIGtpbGxpbmcgSGF3a21hbiwgbm8gbWF0dGVyIGhvdyBtdWNoIGJldHRlciB0aGUgbW92aWUgY2xlYXJseSB3b3VsZCBoYXZlIGJlZW47IHdlIG1lYW4gaGlzIHByZXNlbmNlIGhhZCB0byBiZSBsYXJnZWx5IGF0bW9zcGhlcmljLiBTbyBGaW5jaGVyIGhpcmVkIGRlc2lnbmVyIEpvaG4gU2FibGUgdG8gImNyYXp5IHRoYXQgYml0Y2ggdXAuIiBBbmQgY3JhenkgYSBiaXRjaCB1cCBoZSBkaWQ6IFNhYmxlIHNwZW50ICQxNSwwMDAgb24gb2xkIGpvdXJuYWxzLCByaXBwZWQgdGhlbSB1cCBhbmQgc2V3ZWQgdGhlbSBiYWNrIHRvZ2V0aGVyIGJ5IGhhbmQsIHRoZW4gYmFrZWQgdGhlbSB0byByZWxlYXNlIHRoYXQgZGVsaWNpb3VzIHRhdHRlcmVkIGpvdXJuYWwgZmxhdm9yLiAKQ29uc3VtZXJzJyBlbWJyYWNlIG9mIHBsYW50IHByb3RlaW5zIHdpbGwgaGVscCBwdXNoIHZlZ2V0YWJsZSBwcmljZXMgaGlnaGVyIG5leHQgeWVhciwgYXMgd2lsbCB0aGUgd2VhdGhlciwgYWNjb3JkaW5nIHRvIHRoZSByZXBvcnQuCkkgdGhpbmsgaXQgYmVjYXVzZSB0aGUgcm9sZSBvZiBtb3RoZXIgaXMgcHJldHR5IGVzdGVlbWVkIGluIGEgbG90IG9mIHNvY2lldGllcyBzbyB0aGUgaW5zdWx0IG9mIHRoZWlyIG1vdGhlciBpcyBsaWtlIHRoZSB3b3JzdCBpbnN1bHQuIApJbiByZWFsaXR5LCB0aGlzIGlkeWxsaWMgcGljdHVyZSB5b3UgaGF2ZSBpbiB5b3VyIGhlYWQgb2YgdGhlIHNpbXBsZSBsaWZlIHdhcyBsaW1pdGVkIHRvIHNlY3VyZWx5IG1pZGRsZSBjbGFzcywgd2hpdGUgd29tZW4uV29tZW4gaW4gdGhlIGxvd2VyIGNsYXNzZXMgd2VyZSBhbHJlYWR5IHdvcmtpbmcgb3V0c2lkZSBvZiB0aGUgaG9tZXMuIEhlY2ssIGNoaWxkcmVuIGluIHRoZSBsb3dlciBjbGFzc2VzIHdlcmUgd29ya2luZyBvdXRzaWRlIG9mIHRoZSBob21lcy4gSW4gZmFjdCwgdGhpcyBoYXMgbmV2ZXIgYmVlbiB0aGUgY2FzZSBmb3IgdGhlIHZhc3QgbWFqb3JpdHkgb2YgQWZyaWNhbiBBbWVyaWNhbiwgTGF0aW5hIG9yIGltbWlncmFudCB3b21lbi5BZGRpdGlvbmFsbHksIHdvbWVuIHdobyB3ZXJlIGluIHRoZSB1cHBlciBjbGFzc2VzIHdlcmUgbm90IHNwZW5kaW5nIHRoZWlyIHRpbWUgYXQgaG9tZSBhdHRlbmRpbmcgdG8gYW5kIGNhcmluZyBmb3IgdGhlaXIgY2hpbGRyZW4uIApBbG1vc3QgZXZlcnkgcGxheWVyLCBhY2NvcmRpbmcgdG8gUGFjcXVpYW8gRnJlZGRpZSBSb2FjaCwgaW5zaXN0ZWQgb24gYSBzZWxmaWUgd2l0aCBQYWNxdWlhby4gVGhlIG51bWJlcnMgYXJvdW5kIHRoZSBmaWdodCBjb250aW51ZSB0byBncm93LiBBIHJlY29yZCBjcm93ZCBvZiBtb3JlIHRoYW4gNTAsMDAwIGlzIGV4cGVjdGVkIHRvIGZpbGwgU3VuY29ycCwgd2l0aCBhIHNjb3JlIG9mIHNwb3J0aW5nIGlkZW50aXRpZXMgYW5kIGNlbGVicml0aWVzIG9uIGhhbmQgdG8gc2VlIGlmIEhvcm4gY2FuIGNhdXNlIG9uZSBvZiB0aGUgc3BvcnQgZ3JlYXRlc3QgdXBzZXRzLiAKU28gaWYgeW91IGxvb2tpbmcgZm9yIGEgY2hhbmdlIG9mIHNjZW5lcnksIGhlcmUgYXJlIHNvbWUgZGVhbHMgdG8gcHV0IG9uIHlvdXIgdG8gZG8gbGlzdC4KNSBOZXdlc3QgUmVzdGF1cmFudHMgUmVmbGVjdGluZyBEaXZlcnNlIEN1bHR1cmVzClRoZSBzaXRlIGFsd2F5cyBsZXRzIHlvdSBib29rIDUgbW9udGhzIGluIGFkdmFuY2UuIEJ1dCBpdCBsZXRzIHlvdSBib29rIHVwIHRvIDIwIGRheXMgZnJvbSB0aGUgImRhdGUgb2YgYXJyaXZhbCIuIFNvIGlmIDUgbW9udGhzIGZyb20gdG9kYXkgaXMgQXVndXN0IDgsIHlvdSBjYW4gYm9vayBmcm9tIEF1Z3VzdCA4IHVudGlsIEF1Z3VzdCAyOC4gClJlZ2FyZGluZyB5b3VyIHNlY29uZCBwb2ludCwgdGhpcyBzZXJ2aWNlIGlzIG1vcmUgb2YgYSBiYWNrdXAgc29sdXRpb24gdGhhbiBhIHNpbXBsZSBmaWxlIHN0b3JhZ2UgcGxhY2UgbGlrZSBNaWNyb3NvZnQgU2t5ZHJpdmUgb3IgUmFwaWRzaGFyZS4gWW91IHdvdWxkIHVzZSB0aGlzIHNlcnZpY2UgaWYgeW91IGFic29sdXRlbHkgbmVlZCB5b3VyIGRhdGEgdG8gYmUgYXZhaWxhYmxlIGZvcmV2ZXIuIApBbmQgbm8sIHNoZSdzIG5vdCBicmliaW5nIG1lIHRvIHNheSB0aGlzLiAKSmFnIGhhciB0cmZmYXQgZW4gb2NoIGFubmFuIGRyIG5lcmUgc29tIGZha3Rpc2t0IGFyYmV0YXIgc29tIHNrdGVyc2thL2xkcmV2cmQvYXNzaXN0YW5zLCBzIGRldCByIGludGUgb21qbGlndCBhdHQgZmFrdGlza3QgbGFuZGEgcCBkdWJiZWxrb21wZXRlbnMuIFNpa3RhIHAgaW5mZGRhIGRhbnNrYXIvc3ZlbnNrYXIsIHRyb3RzIGF0dCBkZSBhbnRhZ2xpZ2VuIHIgbGl0ZSBkeXJhcmUuIApSQU5LSU4sIFJvYmVydCBDLiBKYW51YXJ5IDI4LCAxOTI4ICAgSnVuZSA1LCAyMDE3ICJUaGVyZSBpcyBub3RoaW5nIGluIHRoZSB3b3JsZCBzbyBpcnJlc2lzdGlibHkgY29udGFnaW91cyBhcyBsYXVnaHRlciBhbmQgZ29vZCBodW1vdXIuIiAgQ2hhcmxlcyBEaWNrZW5zIEJvYiBwYXNzZWQgYXdheSBwZWFjZWZ1bGx5IGF0IEdyYW5kIFJpdmVyIEhvc3BpdGFsIG9uIEp1bmUgNSwgMjAxNywgaW4gaGlzIDkwdGggeWVhci4gQm9iIHdhcyBib3JuIGluIEhhbWlsdG9uLCBPbnRhcmlvLCBzb24gb2YgQ2xhcmEgRnJhbmNlcyAobmVlIEtlcnIpIGFuZCBSb2JlcnQgUGV0dGlncmV3IFJhbmtpbi4gClNvbWV0aW1lcyBJIHRoaW5rIEJlbiBoYXMgc3BlbnQgdG9vIG11Y2ggdGltZSBhdCBteSBkYWQgaG91c2UuIApTdHVkeWluZyBvcGVuaW5ncyBhbmQgcGF0dGVybnMgaW4gY2hlc3MgaGF2ZSBhIHNpbWlsYXIgcHVycG9zZS4gV2hlbiB5b3UganVzdCBzdGFydGluZywgdGhlcmUgbGl0dGxlIHZhbHVlLiAKSGFzIHJlYWxseSBkaXZpZGVkIG91ciBjb21tdW5pdHkuIEl0IGZlZWxzIGF3ZnVsLCBzaGUgc2FpZC4gdGhpbmsgd2UgbmVlZCB0byBjb21lIGJhY2sgdG9nZXRoZXIgYW5kIHdvcmsgdG9nZXRoZXIgdG8gZmluZCBhIHNvbHV0aW9uIGZvciBib3RoIHRoZSBwZW9wbGUgd2hvIGxpdmUgaGVyZSwgYW5kIHRoZSBwZW9wbGUgd2hvIGNvbW11dGUgaGVyZSBmb3Igd29yayBhbmQgdG8gY29tZSBhbmQgZW5qb3kgdGhlIGNpdHkuClZJREVPOiBXYXRjaCBBdXN0cmFsaWEga2luZyBpbiBhY3Rpb24KNDAgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnb1NlcmlvdXNseS4gVGhpcyBqdXN0IHJlaW5mb3JjZXMgdGhlIGNvbmNlcHQgdGhhdCBhIHBpY3R1cmUgb3V0IG9mIGNvbnRleHQgd2l0aCB0aGUgcmlnaHQgY2FwdGlvbiB0byBzbGFudCB0aGUgbmFycmF0aW9uIGlzIGV4dHJlbWVseSBwb3dlcmZ1bC4gCk9uIGwnYXVyYSBjb21wcmlzIGRhbnMgbGUgMThlLCBsZXMgYWN0aW9ucyAgbWVuZXIgc29udCBjb2xvc3NhbGVzLiAKWW91IGRvbiBlbmQgdXAgd2l0aCBSaWNoIEF1cmlsaWEgYW5kIERhdmUgUm9iZXJ0cyBhcyB5b3VyIHByZW1pdW0gbmV3IGFkZGl0aW9ucyAodG8gYW4gYWxyZWFkeSBiYWQgdGVhbSkgaWYgeW91IGEgZ29vZCBwb2tlciBwbGF5ZXIuWW91IGRvbiB0b2xlcmF0ZSBCb25kcyByaWRpY3Vsb3VzbmVzcyBmb3IgdGhlIGxhc3QgdGhyZWUgeWVhcnMgKHdoZW4gaGUgd2FzIG5vIGxvbmdlciB3b3J0aCB0aGUgc2lsbGluZXNzKSB3aXRob3V0IGJlaW5nIG1vbmV5IGFyb3VuZCB0aGUgaW5kdXN0cnkuQnV0IEkgZ290IHRvIGZpZ3VyZSBldmVuIEJyaWFuIFNhYmVhbiBhbmQgUGV0ZXIgTWFnb3dhbiBhcmUgc21hcnQgZW5vdWdobm90IHRvdG90YWxseSB3aW1wIG91dCBub3cuVGhleSBjYW5ob2xkIHRoZSBsaW5lIGF0ICQ4IG9yICQgOSBtaWxsaW9uLCB3aXRoIGluY2VudGl2ZXMgdG8gZ2V0IGl0IHRvICQxNCBtaWxsaW9uIGlmIEJvbmRzIGZpbmRzIHRoZSB3aWxsIHRvIHN0YXkgYXdha2UgdGhyb3VnaCBhbGwgbmluZSBpbm5pbmdzIGluIDEzMCBnYW1lcy5XaXRob3V0IGFueSBvdGhlciBvZmZlcnMsIEkgd291bGRuIGdvIGFib3ZlICQ1IG1pbGxpb24sIHdpdGggaW5jZW50aXZlcyB0byBnZXQgaGltcG9zc2libHkgdG8gJDggbWlsbGlvbiwgYnV0IEkgbm90IGNvIGRlcGVkZW50IHdpdGggdGhlIGd1eSwgc28gUGV0ZXIgYW5kQnJpYW5jYW4gb25seWRvIHdoYXQgdGhlaXIgY29uc2NpZW5jZXMgYWxsb3cuQnV0IGlmIHRoZXkgdGhpbmsgR2lhbnQgZmFucyB3b3VsZCBiZSB1cHNldCB3aXRoIHRoZW0gaWYgdGhleSBnaXZlIEJvbmRzIGEgb25lIGRheSAoVE9EQVkhISEpLCAkOCBtaWxsaW9uLCB0YWtlIGl0IG9yIGxlYXZlIGl0IG9mZmVyIGFuZCBCb25kc2RlbGF5cyB0aGluayB0aGV5IHdyb25nLkkgdGhpbmsgdGhlIEJheSBBcmVhIHdvdWxkIHVuZGVyc3RhbmQgdGhhdC4gSSB0aGluayBpdCB3b3VsZCBiZSByZWZyZXNoaW5nLiBJIGRvbiB0aGluayBpdCBoYXBwZW4sIGJlY2F1c2UgUGV0ZXIgYW5kIEJyaWFuIGFyZSBwcmV0dHkgZGVzcGVyYXRlIHRoZW1zZWx2ZXMgYW5kIHByZXR0eSBsb3VzeSBwb2tlciBwbGF5ZXJzLCBidXQgSSB0aGluayBpdCBiZWludGVyZXN0aW5nIHRvIHNlZSBpZiBpdCBkaWQuU3BvcnRzIEhlYWRsaW5lc0t1cnRlbmJhY2g6IFRoZSAnIGFjcXVpc2l0aW9uIG9mIEFudG9uaW8gQnJvd24gaXMgY29uZnVzaW5nICAgaXQncyBhbHNvIHBlcmZlY3RGaXZlIHJlYXNvbnMgIG1hZGUgcmlnaHQgbW92ZSBpbiB0cmFkaW5nIGZvciBBbnRvbmlvIEJyb3duU291cmNlOiBBbnRvbmlvIEJyb3duIHdpbGwgYmUgYW4gT2FrbGFuZCBSYWlkZXJDSUYgYmFza2V0YmFsbDogUGluZXdvb2QgZGVuaWVkIE9wZW4gdGl0bGUgYXQgc3RhdGUsIGFnYWluU2F0dXJkYXkgTmlnaHQgRml2ZTogQVNVIGhhcyB0aGUgYmVzdCByZXN1bWUsIFBhYyAxMiB0b3VybmFtZW50IHNlZWRzIGFuZCBwaWNrcywgYWxsIGNvbmZlcmVuY2Ugc2VsZWN0aW9ucyBhbmQgdGhlIHRocmVlIGJpZCBwYXRoQ0lGIGJhc2tldGJhbGw6IENhbXBvbGluZG8gYm95cyB3aW4gZmlyc3Qgc3RhdGUgY2hhbXBpb25zaGlwUXVha2VzIGZhbGwgMyAwIHRvIE1pbm5lc290YSBVbml0ZWRDSUYgYmFza2V0YmFsbDogTWVubG8gY2FwcyB1bmxpa2VseSBydW4gdG8gRCBJSSBzdGF0ZSB0aXRsZUJhciBiZXRzLi4gCkkgbWVhbiBoZSBzYXlpbmcgaGUgaGFzIFRKIG9yIEp4ZGQuIApTbyB3aGVuIEkgc3RhcnRlZCBub3RpY2luZyB0aGUgc2FtZSB3b21hbiBvbiB0aGUgZXZlbmluZyBjb21tdXRlIGhvbWUgb3ZlciBzZXZlcmFsIG1vbnRocyBJIGNvdWxkbiBoZWxwIGJ1dCB0YWtlIG1vcmUgbm90aWNlIG9mIGhlci4gVGhpcyBpcyB0aGUgc3Rvcnkgb2YgY3Jhenkgc3RhdGljIHdvbWFuLlRoZSBmaXJzdCByZWFzb24gSSBhY3R1YWxseSBub3RpY2VkIGhlciB3YXMgYSBmZXcgbW9udGhzIGFnbyB3aGVuIHNoZSB3YXMgc2l0dGluZyBhY3Jvc3MgdGhlIGFpc2xlIGZyb20gbWUuIFNoZSBzdGFydGVkIGFuIGFyZ3VtZW50IHdpdGggYSBtdWNoIHlvdW5nZXIgZ2lybCBzYXlpbmcgdGhhdCB0aGUgeW91bmdlciBnaXJsIGtlcHQgYnVtcGluZyBhZ2FpbnN0IGhlciBhcm0uIApXZSB3ZXJlIGFsbCB0cnVlLCBzbyB3ZSB3ZW50IGluIGFmdGVyIGhpbSBldmVuIHRob3VnaCB3ZSByZWFsbHkgZGlkbiB3YW50IHRvLiAKRG9uJ3QgbGlzdGVuIHRvIHlvdXIgZnJpZW5kcyB3aG8gaGF2ZSB0YWtlbiB0aGVpciBzcG91c2UncyBhZHZpY2Ugd2hvIGhhdmUgdHJpZWQgdG8gcmVjb3ZlciB0aGVpciBwb2tlciB0YWJsZSBvbiB0aGVpciBvd24uIEFmdGVyIGFsbCwgeW91J3ZlIHNlZW4gaXQgZGlkIGl0IGNvbWUgb3V0IGNvb2w/IE9yIGRpZCB0aGUgc3BvdXNlIHJlYWxseSBtZXNzIGl0IHVwIHdpdGggdGhlIHdyb25nIGNob2ljZSBvZiBtYXRlcmlhbCBhbmQgY29sb3I/IFdoYXRldmVyIHRoZSByZWFzb24sIHRoZSBHcmVlbiBQb2tlciBUYWJsZSBGZWx0IENsb3RoIHdpbGwgc29sdmUgYWxsIHlvdXIgcHJvYmxlbXMsIGJyaW5nIGVudnkgZnJvbSB5b3VyIGZyaWVuZHMgYW5kIGtlZXAgeW91ciBwb2tlciB0YWJsZSBhbGl2ZSBmb3IgbWFueSwgbWFueSBnYW1lcyBvZiBwb2tlciBwbGF5Li4gClVuaXZlcnNpdHkgbGVnaXNsYXRpb24gaXMgcmVndWxhcmx5IHJldmlld2VkLCB3aXRoIGFueSBjaGFuZ2VzIG5vcm1hbGx5IHRha2luZyBlZmZlY3QgYXQgdGhlIHN0YXJ0IG9mIHRoZSBuZXcgYWNhZGVtaWMgeWVhci4gCkkgdGVzdCBkcm92ZSBhIENydXplIHdoZW4gSSBsYXN0IGNhciBzaG9wcGVkIGZvciBhIGNvbW11dGVyIGNhciwgYW5kIHdoaWxlIHRoZSBkZWFsZXJzaGlwIGV4cGVyaWVuY2Ugd2FzIGF3ZnVsLCB3aXRoIGluZGlmZmVyZW50IHRvIHNsaWdodGx5IGhvc3RpbGUgc2FsZXNtZW4sIHRoZSBjYXIgaXRzZWxmIGp1c3QgZmVsdCBzbyBjaGVhcCBpbiBjb21wYXJpc29uIHRvIGV2ZXJ5IG90aGVyIG1vZGVsIGluIHRoZSBzYW1lIHN1YmNvbXBhY3QgaGF0Y2hiYWNrIHNlZ21lbnQuIApUaGUgcmV2aXNlZCBndWlkZWxpbmVzIGRlIGVtcGhhc2l6ZWQgbWV0cm9uaWRhem9sZSBpbiBmYXZvciBvZiB0d28gb3RoZXIgZHJ1Z3MgdGhhdCBwZXJmb3JtZWQgYmV0dGVyOiB2YW5jb215Y2luIGFuZCBmaWRheG9taWNpbiwgYnV0IHRob3NlIGRydWdzIGNhbiBiZSBleHBlbnNpdmUgb3IgaGFyZCB0byBjb21lIGJ5Li4gCllvdSBicmluZyB1cCBzb21lIGdyZWF0IHBvaW50cywgZXNwZWNpYWxseSBpbiB0ZXJtcyBvZiBjb250aW51b3VzIGxvYmJpZXMuIFBlb3BsZSBoYXZlIGJlZW4gcmlnaHRmdWxseSBhc2tpbmcgZm9yIHRoaXMgZm9yIGEgcmVhc29uLiAKSSBoYXZlIGJlZW4gYSBwcm9mZXNzaW9uYWwgb25saW5lIHBva2VyIHBsYXllciBmb3IgOCB5ZWFycy4KMTMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnby4gCllvdSBsaXN0ZW5pbmcgdG9CaWdnZXJQb2NrZXRzIFJhZGlvLiBTaW1wbGlmeWluZyByZWFsZXN0YXRlIGZvciBpbnZlc3RvcnMgbGFyZ2UgYW5kIHNtYWxsLiBJZnlvdSBoZXJlIGxvb2tpbmcgdG8gbGVhcm4gYWJvdXQgcmVhbGVzdGF0ZSBpbnZlc3Rpbmcgd2l0aG91dCBhbGwgdGhlIGh5cGUseW91IGluIHRoZSByaWdodCBwbGFjZS4KTWFraW5nIGEgcGxheSB3aXRoIGl0cyBnYXMgZWxlY3RyaWMgUHJpdXMgc2VkYW4uIApJIGRpZG4gcmVwZWF0IHByb3BhZ2FuZGEsIEkganVzdCB0b29rIHdoYXQgSGlsYXJ5IENsaW50b24gYWN0dWFsbHksIGxpdGVyYWxseSBzYWlkLCBhcyB5b3UgY2FuIHNlZSBpbiBteSBlYXJsaWVyIHJlcGx5LCBzaGUgc2FpZCBzaGUgd2FudGVkIHRvIGZvcmNlIG1pbGl0YXJ5IGFjdGlvbiBhZ2FpbnN0IFJ1c3NpYSwgd2l0aCByZWdhcmRzIHRvIHRoZSBzaXR1YXRpb24gaW4gQWxlcHBvLCBtYWtpbmcgU3lyaWEgYSBubyBmbHkgem9uZS4gVGhpcyBpc24gcHJvcGFnYW5kYSwgc2hlIGxpdGVyYWxseSBzYWlkIHRoYXQsIEkgc2FpZCBub3RoaW5nIGFib3V0IFdXSUlJIG9yIHdoYXQgaGVyIHBsYW5zIGFyZSwgb3IgYW55dGhpbmcgYWJvdXQgdGhlIG1lZGlhLCBqdXN0IHRoYXQgc2hlIHN0YXRlZCBoZXJzZWxmIHRoYXQgc2hlIHdhbnRzIHRvIGdvIHRvIHdhciB3aXRoIFJ1c3NpYS4gQnV0IGlzIHlvdXIgcG9zaXRpb24gdGhhdCB3ZSBzaG91bGQgYWxsb3cgUnVzc2lhIGRvIGRvIHdoYXQgaXQgd2FudHM/IFNoYWxsIGl0IGNvbnRpbnVlIHRvIGJvbWIgY2l2aWxpYW5zIGluIFN5cmlhPyBTaGFsbCBpdCBjb250aW51ZSB0byBhbm5leCBjb3VudHJpZXM/CkF1ZyAzMSwgMjAxOCAuIApQb2ludCB0byBhIG5ld3Mgc291cmNlIHRoYXQgaGFzIGV2ZXIgcmVwb3J0ZWQgdGhhdCB0aGUgUHJlc2lkZW50IHNhaWQgQUxMIE1leGljYW5zIGFyZSByYXBpc3RzLiBJdCBoYXMgbm90IGhhcHBlbmVkLiBUaGUgbWVkaWEgaGFzIHBvaW50ZWQgb3V0IHRoYXQgd2hlbiBoZSBzYWlkICJ0aGV5J3JlIG5vdCBzZW5kaW5nIHRoZWlyIGJlc3QuIHRoZXkncmUgcmFwaXN0cyIgaXQgd2FzIHJhY2lzdCBiZWNhdXNlIGl0IHdhcyBoaWdobGlnaHRpbmcgY3JpbWUgaW4gYSB3YXkgdGhhdCBpbnNpbnVhdGVkIGEgZGlzcHJvcG9ydGlvbmF0ZSBudW1iZXIgb2YgcmFwaXN0cy4gSW4gZmFjdCwgdGhlcmUgYXJlIG5vdCBhIGRpc3Byb3BvcnRpb25hdGUgbnVtYmVyIG9mIHJhcGlzdHMgYW1vbmcgdW5kb2N1bWVudGVkIGltbWlncmFudHMuIEFzc2VydGlvbnMgdG8gdGhlIGNvbnRyYXJ5IGFyZSByYWNpc3QgbGllcyB0aGF0IGNhbm5vdCBiZSBiYWNrZWQgdXAgYnkgcmVwdXRhYmxlIHNvdXJjZXMuClRoYXQgbm90IGhlbHBpbmcgYW55b25lIHdoZW4geW91IGRvIHRoYXQsIGFuZCBpdCBub3QgaGVscGluZyB5b3Ugb25lIGJpdCwgZWl0aGVyLgpTbyB3ZSB3ZXJlIGJvdGggbmFwcGluZyAocmVhbGx5IHJlYWxseSBlYXJseSBtb3JuaW5nKSB3aGlsZSBob2xkaW5nIGhhbmRzLiAKU3ByaW5rbGUgd2l0aCBjaG9jb2xhdGUgY2h1bmtzIGFuZCBjaG9wcGVkIGNhbmR5IGJhcnM7IHByZXNzIGdlbnRseSBpbnRvIGJhdHRlci4gCkZpY2hhcyBmYWxzYXNwb3IgMTAwLjAwMCBwdW50b3MgZW4gZWwgRGVlcCBTdGFjayBQcm8gUmV3aW5kZW4gZWwgQ2FzaW5vIGRlIENhbXBpb25lIGVuIEl0YWxpYQpGb3IgdGhvc2UgdGhhdCBoYXZlbiBoZWFyZCwgQ3plY2hpYSBpcyB0aGUgb2ZmaWNpYWwgc2hvcnQgZm9ybSBuYW1lIGZvciB0aGUgQ3plY2ggUmVwdWJsaWMsIGZvciB0aGUgbGFzdCBmZXcgeWVhcnMuIEl0IGhhc24gcmVhbGx5IGNhdWdodCBvbiB5ZXQuClNhZGx5LCB5b3UgYmUgc3VycHJpc2VkIGhvdyBtYW55IHdvbWVuIGRvbiBrbm93IGEgbG90IGFib3V0IHRoZWlyIHZhZ2luYSBldmVuIG5vd2FkYXlzLiBJIGtub3duIHdvbWVuIHdobyBncmFkdWF0ZWQgYW5kIHNlZW0gdmVyeSBzbWFydCwgZ3JlYXQgam9icywgZXRjLiBXaG8gdG90YWxseSB0aHJldyBtZSBvZmYgd2hlbiB0aGV5IGRpZG4ga25vdyBjZXJ0YWluIHRoaW5ncyAodGhlIG1vc3QgZWdyZWdpb3VzIEkgcmVtZW1iZXIgYmVpbmcgbm90IGtub3dpbmcgdGhlIHZhZ2luYWwgZW50cmFuY2UgYW5kIHRoZSB1cmV0aHJhIGFyZSB0d28gZGlmZmVyZW50IGhvbGVzLCB3dGYpLi4gCkJ1dCB0aGUgbW92aWUsIHRoYW5rIGdvZCwgaXMgbm90IGFzIGFjdGlvbiBsZXNzIGFzIHRoZSBib29rLiAKVGhlcmUgYXJlIHBsZW50eSBvZiBwbGFjZXMgdGhhdCB3aWxsIGhpcmUgeW91IHdpdGhvdXQgZXhwZXJpZW5jZSBiZWNhdXNlIHlvdSBoYXZlIGFuIE1BIFRFU09MIGFuZCB0aGUgam9icyB3aWxsIGJlIGFsbW9zdCBpbmRlc2NyaWJhYmx5IGJldHRlciB0aGFuIHRob3NlIHlvdSBjYW4gZ2V0IHdpdGgganVzdCBhIEJBIGFuZCBhIFRFRkwgY2VydC4gClRoZSB0cnVlIHNpZGUgb2YgdGhpcywgaXMgb25seSBzZWVuIGlmIHlvdSB0aGluayBvdXRzaWRlIHRoZSBib3ggYW5kIGZyZWUgeW91cnNlbGYgZnJvbSB0aGUgY2hhaW5zIG9mIHRoZSBzb2NpZXR5IGFuZCBzZWUgdGhlIG5lZ2F0aXZlIHRoaW5ncyBhc3dlbGwuIFdoaWxlIG1vc3Qgb2YgdGhlIHBlb3BsZSBqdXN0IHNlZSB0aGUgaWxsdXNpb24sIHlvdSBzZWUgZXZlcnl0aGluZyBiZWNhdXNlIHlvdSBhcmUgcmVhZHkgdG8gZmFjZSB0aGUgYmFkIHRoaW5ncyBvZiB0aGUgd29ybGQuLiAKV2hhdCB5b3UgbmVlZCB0byBkbyBpcyB0byBtYWtlIGl0IGEgcHJpb3JpdHkgdG8gY2FyZSBmb3IgeW91cnNlbGYuIE5vIG9uZSBpcyBnb2luZyB0byBrbm93IHlvdXIgc2l0dWF0aW9uIGJldHRlciB0aGFuIHlvdSBhcmUuIFRoZSBnb3Zlcm5tZW50IGlzIG5vdCBnb2luZyB0byBjYXJlIGZvciB5b3UgKGRvbid0IGJlbGlldmUgZ292ZXJubWVudCBoZWFsdGggY2FyZSB3aWxsIHNvbHZlIHlvdXIgcHJvYmxlbXMpLiAKUG9rZXIgRm9ydW0gb24gSHViUGFnZXMKUmVsYXRlZFJlYWQgbW9yZSBhYm91dCBnYXJkZW5pbmdJbiBjb21wYXJpc29uLCB0b2RheSB0cnVlIGNsdW1waW5nIGJhbWJvb3MgYXJlIGEgZHJlYW0gdG8gdXNlLiAKTW9ua2V5IEtudWNrbGUgUG9rZXIgQ2x1YgpUaGUgZ292ZXJubWVudCBhcmd1ZWQgdGhhdCBzaW5jZSBubyBwcm9zdGl0dXRpb24gY2hhcmdlcyBoYWQgYmVlbiBsYWlkIGFnYWluc3QgYW55IG9mIHRoZSB3b21lbiBpbnZvbHZlZCwgdGhlIHNvY2lldHkgYW5kIEtpc2VsYmFjaCBsYWNrZWQgdGhlIGxlZ2FsIHN0YW5kaW5nIHRvIHB1cnN1ZSB0aGUgY2FzZS4gCkxvd2VyIEdEUCBmaWd1cmUgZm9yIGFsbCBvZiAyMDE4IHJlZmxlY3RlZCBhIHNsb3dkb3duIGluIG1vc3QgY2F0ZWdvcmllcywgaW5jbHVkaW5nIHdlYWtlciByZXN1bHRzIGZvciBob3VzZWhvbGQgY29uc3VtcHRpb24sIGJ1c2luZXNzIGludmVzdG1lbnQgYW5kIGhvdXNpbmcgaW52ZXN0bWVudCwgd2hpY2ggY29udHJhY3RlZCAyLjMgcGVyIGNlbnQuIAo6TykgU28sIGhlcmUgWW91IGdvLCBwbHVja2luJyBkb3duIHNvbWUgb2YgbXkgaGFyZCBnb3QgMjUgc21hY2tlcnMsIGFuZCBndWVzcyB3aGF0ISAnSSBmZWVsIGdvb2QsIGxpa2UgSSd2ZSBrbmV3IHNvIEkgd291bGQnIFt5ZWFoLCBteSBuZXcgbWFuIEJydWNlIEIgYWNjb21wbGlzaGVkIG1lIGFydGljdWxhdGUgdGhhdF0uIFNvLCBZRVMsIEkgZG8gcmVhbGx5IGRvIGZlZWwgZ29vZC4gSSBnZW51aW5lbHkgZ29vZCBpbiB0aGUgcmVnaW9uIG9mIHRoaXMgcHJvZ3JhbSwgYW5kIGJlY2F1c2UgSSBhY3F1aXJlIG1hZGUgYSBwYXJ0aWN1bGFyIHZlcnkgcmlnaHQgYW5kIHByYWN0aWNhbCBmaW5hbmNpYWwgcHVyY2hhc2UuQW5kIGZpbmFsbHksIHRoZSBpc3N1ZSBidWcgcmVtYWlucyBiaXRpbmcgcmVzdHJpY3RpbmcgZW5kIFRvbnkgYWRhbW93aWN6IE1vZWFraSBsb2NhdGVkIGluIHRoZSBnbHV0ZXMgKG9yIGFjdHVhbGx5LCBpbiBhbGwgYXJtIHJlc3VsdGluZyBpbiBhIGJyb2tlbiBzaG91bGRlciBkb2luZyB0aGUgU3RlZWxlcnMgZ2FtZSksIGFzIGl0IGNvbXBvbmVudCBoYXMgeW91ciBDaGllZnMgbGVhZGluZyBvZmZpY2UgbG9va2luZyBmb3IgZm9yIGluZGl2aWR1YWxzIHRoYXQgZG9lcyBzdGF5IGFsd2F5cyBvbiB0aGUgbGluZSBvZiBidXNpbmVzcyBhcyBhIG1ham9yIDMgR29sZGVuIEdvb3NlIEZyYW5jeSBTbmVha2VycyBlc3RyaWN0ZWQgZW5kLiAKR2V0IHRoZSBmdWNrIGF3YXkgZnJvbSBoZXIgYXMgZmFzdCBhcyB5b3UgY2FuIE9QLCBzaGUgd2lsbCBlbmQgdXAgZ2VudWluZWx5IGh1cnRpbmcgeW91IGlmIHlvdSBkb24uIApXaGlsZSB0aGUgc2F1Y2UgbWF5IGJlIGFsbW9zdCBmaW5pc2hlZCBhdCB0aGlzIHBvaW50KCBqdXN0IG5lZWQgdG8gYWRkIGJhc2lsKSBpdCBpcyBub3QgdGhlIGZpbmlzaGVkIGRpc2guCiJJJ3ZlIHdhbnRlZCB0byBoYXZlIGEgYmFieSBmb3Igc28gbG9uZyBhbmQgaXQncyBqdXN0IHRoZSBwZXJmZWN0IHRpbWluZyBpbiBteSBleWVzLiAKVGhlcmUgYXJlIHN0aWxsIG1hbnkgbW9ub2xpdGhpYywgYmlsbGlvbiBkb2xsYXIgaW5zdGl0dXRpb25zIHRoYXQgd2lsbCBzZWUgdGhlaXIgbWFya2V0IHdlYWx0aCBkZWNpbWF0ZWQgaWYgY2FubmFiaXMgaXMgbGVnYWxpemVkLiBJbW8sIHRoZSBpbmV2aXRhYmxlIG91dGNvbWUgb2YgY2FubmFiaXMgbGVnYWxpemF0aW9uIGludm9sdmVzIGEgY2lnYXJldHRlIGNvbXBhbnkgaGF2aW5nIGV4Y2x1c2l2ZSByaWdodHMgdG8gcHJvZHVjZSBhbmQgc2VsbCBhZGRpdGl2ZSBhbmQgcGVzdGljaWRlIGxhY2VkIGp1bmsgdGhhdCB3aWxsIGtlZXAgcHJpc29ucyBmdWxsIGFuZCBwaGFybWFjZXV0aWNhbCBjb21wYW5pZXMgcmljaC4gCjQuIEhpcyBiYWlsIHdhcyBzZXQgYXQgJDExMywwMDAgb24gU2VwdC4gCikgQnV0IHRoZW4gSSBqb2tlZCB0aGF0IEkgd2FzIGdsYWQgSSBkaWRuIGdldCBnYXMgd2hlbiBJIG5vdGljZWQgaXQgd2FzIG9uIGVtcHR5IGFuZCB0aGUgY29wcyB0b2xkIG1lIHRoYXQgdGhlIHRoaWVmIHByb2JhYmx5IGNyYXNoZWQgaXQgQkVDQVVTRSBpdCB3YXMgZW1wdHkuIFRoZXkga25ldyB0aGV5IHdlcmVuIGdldHRpbmcgZmFyLCBzbyB0aGV5IGp1c3QgdG90YWxlZCBteSBjYXIuIApTb21ld2hlcmUgaW4gdGhlIG1vZHVsZQpVQ0xBIFZvbHVudGVlciBDZW50ZXIKVGhhdCBhIGdvb2QgcXVlc3Rpb24uIElzIGl0IHRoZSA2MiBtaWxsaW9uIHBlb3BsZSB3aG8gdm90ZWQgZm9yIGhpbSArIHRoZSBvdGhlcnMgd2hvIHdlcmUgdG9vIGxhenkgdG8gZXZlbiBnbyBvdXQgdG8gY2FzdCBhIGJhbGxvdD8gSSByZWFsbHkgZG9uIGNhcmUgd2hpY2ggcGFydHkgeW91IHN1cHBvcnQsIGJ1dCB0byBhdHRhY2sgYSBnaWFudCBncm91cCBvZiBwZW9wbGUgd2l0aCBuYW1lY2FsbGluZyBhbmQgZW1vdGlvbmFsIHBlcnNvbmFsIGF0dGFjayBpcyBob3cgd2UgZ290IGhlcmUgaW4gdGhlIGZpcnN0IHBsYWNlLiBXaHkgbm90IGZvY3VzIG9uIHdlbGwgdGhvdWdodCBvdXQgYW5kIHN1YnN0YW50aXZlIGNvbW1lbnRzPyBUaGF0IG15IHdob2xlIHBvaW50Li4gCkxlIHRscGhvbmUgc29ubmUuIEF1IGJvdXQgZHUgZmlsLCBsIHZldXQgc2F2b2lyIGNvbWJpZW4gZGUgZmlsbGVzIHNvbnQgZGlzcG9uaWJsZXMuIApUaGlzIGluIG5vIHdheSBpbXBsaWVzIHRoYXQgdGhlIGFja25vd2xlZGdlbWVudCBvZiByYWNlIG9yIHRoZSBmb3JtaW5nIGFuIG9waW5pb24gYmFzZWQgb2ZmIG9mIHRoZSBzb2NpYWwgaW1wbGljYXRpb25zIG9mIHJhY2UgaXMgaW4gaXRzZWxmIHJhY2lzdC4gQWNrbm93bGVkZ2luZyByYWNlLCBvciBiZWluZyBpbmZvcm1lZCBieSByYWNlIGlzbiBkZXBlbmRlbnQgdXBvbiB0aGUgaWRlYSB0aGF0IG9uZSByYWNlIGlzIHN1cGVyaW9yIG9yIGluZmVyaW9yLiAKVGhlIHByaWVzdHMgc2hvdWxkIGJlIHdvcnJpZWQgYWJvdXQgZ2l2aW5nIG1vdG9yY3ljbGVzIGEgcHJheWVyIGFuZCBzb21lIGhvbHkgd2F0ZXIgdGhhbiBiYXNoaW5nIGZhZ3MgYW5kIGZlbWluaXN0cy4gQ291cnNlLCBJIHNob3VsZCBoYXZlIGtub3duIHRoYXQgdGhpcyBzbWFsbCBhY3Qgb2Yga2luZG5lc3MgdG93YXJkIGxlYXRoZXIgY2xhZCwgSE9HIHJpZGluZyBzb3J0cyB3YXMgYSBtb21lbnRhcnkgYmxpcCBpbiB0aGUgaGF0ZSBtYWNoaW5lIHRoYXQgaXMgdGhlIENhdGhvbGljIGhpZXJhcmNoeS4uIApIb2xsYW5kamUgdQpUaGVyZSBhcmUgdGhvdXNhbmRzIG9mIHVuc29sdmVkIG11cmRlcnMgc3RpbGwgdGVjaG5pY2FsbHkgdW5kZXIgaW52ZXN0aWdhdGlvbiBkZWNhZGVzIGFmdGVyIHRoZXkgdG9vayBwbGFjZS4KQW5kIHRoZSBkZWNpc2lvbiBpcyBhYm91dCBnYWluaW5nIG1vbmV5IGFuZCBjaGlwcyAgIGlmIEkgaGF2ZSBzbyBtYW55IGNoaXBzIG5vdyBzaG91bGQgSSBwdXQgaXQgYXQgcmlzayBvciB3YWl0IGZvciBvdGhlcnMgdG8gYnVzdCBvdXQgc28gdGhhdCBJIGNhbiBnZXQgdGhlIG1vbmV5LiAKUmVsYXggdGhlIGJhY2sgbXVzY2xlcyBpbiB0aGlzIHVubG9hZGVkIHBvc2l0aW9uIGFuZCBob2xkIGZvciA1IHNlY29uZHMKIkRhdGEgaXMgQW1hem9uJ3MgcG93ZXIgZm9yIHN1cmUgYW5kIGJyYW5kcyBoYXZlIHRvIGJlIHJlYWxseSBjYXJlZnVsIGFib3V0IHdoYXQgZGF0YSB0aGV5J3JlIHdpbGxpbmcgdG8gc2hhcmUgd2l0aCBBbWF6b24uIi4gCk1yLiAKSSByZWFsbHkgZmVsdCBncmVhdCBhdCB0aGUgZW5kIHRoZXJlIGFuZCB3aWxsIGRlZmluaXRlbHkgYmUgZ29pbmcgYmFjay5GdWxsIGRpc2Nsb3N1cmUgdGhvdWdoLCBzaGUgZGlkIGdlbnRseSBvZmZlciBhIGhhcHB5IGVuZGluZyBuZWFyIHRoZSBlbmQgb2YgdGhlIG1hc3NhZ2UuIEkga2luZGx5IHNhaWQgbm8gdGhhbmtzIGFuZCB0aGF0IHdhcyB0aGUgZW5kIG9mIGl0LiAKSGUgaXMgbXkgYmVzdGZyaWVuZCwgaGUgaGVscGVkIG1lIGEgbG90IHRocm91Z2ggYSBsb3Qgb2YgZGlyZSB0aW1lcyBhbmQgd291bGQgSSBiZSBpbiBhIGJldHRlciBzaXR1YXRpb24gd291bGQgbm90IGhhdmUgYmF0IGFuIGV5ZSBoZWxwaW5nIGhpbS4gCk1vcmUgcmVjZW50bHksIHdlIGhhdmUgc2VlbiB0aGF0IENvUTEwIGRlZmljaWVuY3kgaXMgYSBrZXkgdW5kZXJseWluZyBmYWN0b3IgaW4gdGhlIGRldmVsb3BtZW50IG9mIFBhcmtpbnNvbiBkaXNlYXNlIGFuZCBtYW55IGNhc2VzIG9mIGNvbmdlc3RpdmUgaGVhcnQgZmFpbHVyZSBhbmQgaGlnaCBibG9vZCBwcmVzc3VyZS4gSXQgYWxzbyBjb250cmlidXRlcyB0byBvdGhlciBjb21tb24gcHJvYmxlbXMgYXNzb2NpYXRlZCB3aXRoIGFnaW5nLgpJIGhhdmUgYmVlbiBjb25zaWRlcmluZyBpdC4gCk92ZXJhbGwgSSBjYW1lIGluIHNoeSBvZiAkMjAwIGZvciBhIHNjcmVlbiB0aGF0IG1lYXN1cmVzIGFwcHJveGltYXRlbHkgaW4gMTEwIi4gCk11c3MgZGlyIGFiZXIgZWdhbCBzZWluLCB3ZWlsIGphIG5pY2h0IGtsYXIgaXN0IHdpZSBhbHQgZGllIHNvbnN0IGdlc3RvcmJlbiB3cmVuLiBIdHQgamEgYXVjaCBkdXJjaGF1cyBzZWluIGtubmVuIGRhcyBkaWUgZWggbnVyIDE5IHdlcmRlbi5VbmQgZGFubiBibGVpYnQgbm9jaCBkaWUgRnJhZ2UsIHdpZSBzaWUgYXVmIGRpZSBLb25mZXJlbnplbiBnZWtvbW1lbiBpc3QuIE9obmUgQmV6aWVodW5nZW4gaXN0IGRhcyBzY2h3aWVyaWcuRGllIEZyYXUgdmVyYXJzY2h0IGRhcyBnYW56ZSBMYW5kLCBoYXQgYmVyYWxsIG51ciBCYXVzdGVsbGVuIG9mZmVuLCB2b20gV29obnVuZ3NiYXUgYmVyIGRpZSBCdW5kZXN3ZWhyIGJpcyB6dXIgZ3JvZW4gZ3JvZW4gU3RldWVycmVmb3JtLCBkZXIgQmFobiwgZGVtIERpZ2l0YWwsIGRlbSBSZWN5Y2xpbmdzeXN0ZW0gdW5kIHVuZCB1bmQgdW5kIHVuZFVuZCB3YXMgbWFjaGVuIGRpZSBnYW56ZW4gTWVya2Vsd2hsZXI/IERpZSB3aGxlbiBkaWUgZWluZmFjaCB3ZWl0ZXIsIHdlaWwgbWl0IGRlciBSZWdpZXJ1bmcgTWVya2VsIDMgd2lyZCBkYXMgYWxsZXMgICB2ZXJzcHJvY2hlbiAgIGJlaG9iZW4sIHdhcyBoaGggZGllIFZvcmduZ2VyIC4gCkphbSBvdXQgdG8gYmxhc3RzIGZyb20gdGhlIHBhc3QsIGluY2x1ZGluZyBIb3QgQ2hpcCwgTW9kZXN0IE1vdXNlLCB0aGUgRmFpbnQsIFBob2VuaXgsIGFuZCBQb3N0YWwgU2VydmljZS4gU28gbGVhdmUgeW91ckxhZ3VuYSBCZWFjaCBzdHlsZSBkcmFtYSBhdCBob21lIGFuZCBnbyBvbiBhIFZhbXBpcmUgV2Vla2VuZCAiSG9saWRheSIgaW5zdGVhZC4gMjErLiAKSSByZW1lbWJlciBJIGZlbHQgdGhlIHNhbWUgd2F5ICBhbG1vc3QgZXhhY3Qgc2l0dWF0aW9uIGFzIHlvdS4gSSB3YXMgYWxtb3N0IG9uIHRoZSB2ZXJnZSBvZiBwdWxsaW5nIG15IGFwcGxpY2F0aW9uIGJlY2F1c2UgSSB3YXMgcmVhbGx5IHRpcmVkIG9mIGJlaW5nIGluIHN1Y2ggbGltYm8uIApUaGUgYXJ0aWNsZSBESUQgTk9UIHNheSAzMCUgaGFkIGl0LCBvbmx5IHRoYXQgaWYgMzAlIGhhdmUgaXQgdGhpcyB3aWxsIGFmZmVjdCB0aGUgcG9wdWxhdGlvbi4gVGhlIGFydGljbGUgbWVudGlvbmVkIG1vcmUgbGlrZSAwLjUgMiUgaGF2ZSBpdC4gCiJJbiBvbmUgY2l0eSwgeW91IHdvdWxkIGJlIGFuIDE4IHllYXIgb2xkIGdpcmwganVzdCBmcmVzaCBvdXQgb2YgaGlnaCBzY2hvb2wsIGp1c3Qgc3RhcnRlZCBjb2xsZWdlLiBPciBhIDE5IHllYXIgb2xkIGdpcmwsIiBDcm9vayBzYWlkLiAKVW5lIGxldHRyZSBkb250IHZvdXMgcG91dmV6IHRyb3V2ZXIgdW5lIGNvcGllIGNpIGRlc3NvdXMuLiAKT250YmlqdGVuIGRlZGVuIHdlIG9wIHdhdCBvbmRlcnR1c3NlbiBvbnplIHZhc3RlIHN0ZWsgaXMgb3AgZGUgbHVjaHRoYXZlbi4gCkRlcGVuZHMuIExpa2UsIGZvciBleGFtcGxlLCBkbyBJIHdhbnQgeW91IHRvIGtub3cgSSBhbSBwaXNzZWQ7IG9yIGRvIEkgd2FudCB5b3UgdG8ga25vdyBJIGFtIHBpc3NlZCBidXQgbWFrZSB5b3UgdGhpbmsgSSBhbSB0cnlpbmcgdG8gY292ZXIgaXQgdXAgdG8gYmUgbmljZS9wcm9mZXNzaW9uYWw7IG9yIGRvIEkgcmVhbGx5IGp1c3QgZ2l2ZSBubyBtb3JlIGZ1Y2tzIGFuZCB3YW50IHRvIHNjcmV3IHlvdSBvdmVyIHRvIGhpZ2ggaGVhdmVuIHNvIEkgYWN0IHN1cGVyIG5pY2UgYW5kIHRoZW4gc3RhYiB5b3UgaW4gdGhlIGJhY2sganVzdCBsaWtlIHlvdSBkaWQgbWUgd2hlbiB5b3UgYXJlIGxlYXN0IHN1c3BlY3RpbmcgaXQuCkJvYiBCb3VnaG5lciBhbmQgdGhlIEhpZ2gKU3RldmVtb2RlMTMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCk1hc3NhZ2UgSXMgdGhlIExpbmsgVGhlIHVzZSBvZiBtYXNzYWdlIGlzIHRoZSBwcmltYXJ5IGFyZWEgaW4gd2hpY2ggbWFzc2FnZSB0aGVyYXB5IGFuZCBwaHlzaWNhbCB0aGVyYXB5IGFyZSBzaW1pbGFyLiBFdmVuIGluIG1hc3NhZ2UsIGhvd2V2ZXIsIGRpZmZlcmVuY2VzIHJlbWFpbi4gQWx0aG91Z2ggYSBtYXNzYWdlIHRoZXJhcGlzdCBtYXkgdXNlIGRpZmZlcmVudCB0eXBlcyBvZiBtYXNzYWdlLCBzaGUgZG9lcyBub3QgdXNlIHRoZSBhZGRpdGlvbmFsIHRyZWF0bWVudHMgYSBwaHlzaWNhbCB0aGVyYXBpc3QgdXNlcy4gVGhlIHByaW1hcnkgZ29hbCBvZiBtYXNzYWdlIHRoZXJhcHkgaXMgdG8gcmVsYXggdGhlIHBhdGllbnQsIHJlZHVjZSBzdHJlc3MgYW5kIHJlbGlldmUgcGFpbiB0aHJvdWdoIG1hbmlwdWxhdGlvbiBvZiB0aGUgbXVzY2xlcyBhbmQgdGlzc3Vlcy4gUGh5c2ljYWwgdGhlcmFwaXN0cyB3b3JrIHdpdGggcGVvcGxlIHdobyBoYXZlIGluanVyaWVzIG9yIGlsbG5lc3NlcyBzdWNoIGFzIGZyYWN0dXJlZCBib25lcywgUGFya2luc29uJ3MgZGlzZWFzZSBvciBzdHJva2VzLiBUaGV5IHVzZSBhIHdpZGUgdmFyaWV0eSBvZiB0cmVhdG1lbnRzLCBpbmNsdWRpbmcgaGVhdCwgY29sZCwgbWFzc2FnZSwgZXhlcmNpc2VzIGFuZCB2YXJpb3VzIGRldmljZXMsIGFuZCB0aGVpciBmb2N1cyBpcyB0byByZXR1cm4gdGhlIHBhdGllbnQgdG8gdGhlIGhpZ2hlc3QgcG9zc2libGUgbGV2ZWwgb2YgcGh5c2ljYWwgZnVuY3Rpb24uIE11c2NsZSByZWxheGF0aW9uIGFuZCBzdHJlc3MgcmVsaWVmIG1heSByZXN1bHQgZnJvbSB0aGUgd29yayBhIHBoeXNpY2FsIHRoZXJhcGlzdCBwZXJmb3JtcywgYnV0IHRoYXQgaXMgbm90IGhpcyBwcmltYXJ5IGdvYWwuClZvdXMgdm91cyBlbmdhZ2V6ICBuZSBwYXMgYXV0b3Jpc2VyIG5pIGVuY291cmFnZXIgdG91dCB0aWVycyAgdXRpbGlzZXIgY2UgcnNlYXUgYWZpbiBkZSByYWxpc2VyIGxlcyBhZ2lzc2VtZW50cyBwcm9oaWJzIHN1c21lbnRpb25ucy4gClRoYXQgaXMgdGhlIG9uZSB0aGluZyB0aGF0LCBpZiBJIGNvdWxkIGdvIGJhY2sgYW5kIGNoYW5nZSBpdCwgaSB3b3VsZC4gS25vd2luZyB3aGF0IEkga25vdyBhcyBhbiBhZHVsdCwgZGF0aW5nIG1hcnJpZWQgbWVuIHdhcyB0aGUgd29yc3QgdGhpbmcgSSBkaWQuIApNeSB3aWZlIGhhcyBhIGxvbmcgdGltZSBmcmllbmQgZnJvbSBncmFkZSBzY2hvb2wsIHdobyBpcyB2ZXJ5IHZlcnkgbGliZXJhbC4gU2hlIGFuZCBoZXIgNyB5ZWFyIG9sZCBzb24gY2FtZSB0byB2aXNpdCBmb3IgYSBmZXcgZGF5cy4gTXkga2lkcyBoYXZlIGFuIGFyc2VuYWwgb2YgTmVyZiB3ZWFwb25zIChTd29yZHMsIHBpc3RvbHMsIHJpZmxlcywgYmVsdCBmZWQgbWFjaGluZSBndW5zLCBldGMpLiBNeSB3aWZlIGZyaWVuZCB3YXMgc2hvY2tlZCB3aGVuIGhlciBzb24ga2VwdCBydW5uaW5nIGRvd25zdGFpcnMgdG8gc2hvdyBvZmYgdGhlIG5ldyBOZXJmIHdlYXBvbiBoZSBkaXNjb3ZlcmVkLCBleWVzIGdsaW50aW5nIGluIGFic29sdXRlIGpveS4KQW5kLCBpZiB5b3UgYmV0IGFmdGVyIHNlZWluZyBhIHdlYWsgdHVybiBjYXJkLCB0aGV5IHdvbid0IGxpa2VseSBmb2xkLCBiZWNhdXNlIG9mIHlvdXIgcGxheWluZyBvbiB0aGUgd2VhayB0dXJuIGNhcmQgaXMgbm90IHNjYXJ5IHRvIGFueW9uZS4gCkl0IHdvdWxkIGJlIHByZXR0eSBmcmVha2luZyBtaXNsZWFkaW5nIGlmIGl0IG5vdCBNQ0Mgb24gUEMuIEZvbGxvd2luZyB0aGUgQnJhZCBTYW1zIGxlYWtzIHRoZSBNQ0MgbmV3cy9hbm5vdW5jZW1lbnQgd2FzIHB1c2hlZCB1cCB0byBJbnNpZGUgWGJveCBvbiBUdWVzZGF5IGJlY2F1c2UgdGhleSB3ZXJlICJ0b28gZXhjaXRlZCB0byB3YWl0IiBhbmQgd2FzIG5vdyBkdWJiZWQgYW4gZXZlbnQgInlvdSB3b24gd2FudCB0byBtaXNzIi4KV2FsbHMgZG9uIGZpeCBhbnl0aGluZywgdGhleSBqdXN0IGRlbGF5LiBNYW55IChub3QgYWxsLCBidXQgbWFueSkgb2YgQ2VudHJhbCBBbWVyaWNhIGN1cnJlbnQgcHJvYmxlbXMgYXJlIGRpcmVjdCByZXN1bHRzIG9mIEFtZXJpY2FuIGludGVydmVudGlvbmlzbSwgZnJvbSBvdXIgZWFybHkgZGF5cyBvZiBleHBhbnNpb24gYWxsIHRoZSB3YXkgdGhyb3VnaCBvdXIgcHJvcHBpbmcgdXAgb2YgZGljdGF0b3JzIGluIHRoZSBDb2xkIFdhci4gCkEgbG90IG9mIG5ldyB0ZW5hbnRzIGluIHRoZSBjb3JlLiBBbmQgc29tZSBiaWcgb25lcy4gU28gdGhlcmUgYmVlbiBhIHNpZ25pZmljYW50IGFtb3VudCBvZiB0aGF0IGtpbmQgb2YgYWN0aXZpdHksIGhlIHNhaWQsIHBvaW50aW5nIHRvIHRoZSByZWxvY2F0aW9uIG9mIEF1dG9kYXRhLCB3aGljaCBsYXN0IHllYXIgbW92ZWQgaW50byB0aGUgQmVsbCBidWlsZGluZy4KV2Ugd2lsbCBiZSBkZW1vbnN0cmF0aW5nIGEgc25hY2sgZm9vZCBmaWxsaW5nIG9wZXJhdGlvbiBmb3Iga3Vya3VyZSBvciBjaGlwcyB0eXBlIG9mIGEgcHJvZHVjdCBhdCA0MCUgaGlnaGVyIHNwZWVkcyB0aGFuIGNvbnZlbnRpb25hbCBtYWNoaW5lcy4uIApJZiB5b3Uga2VlcCB0YWxraW5nIHRoYXQgYmxhaCBibGFoIGJsYWggYmxhaCBibGFoLgpTaW5jZSB0aGUgYnViYmxlZ3VtIHBlYXJsIGlzIHZlcnkgYW5ndWxhciBhbmQgbG9uZywgSSB3b3VsZCByZWNvbW1lbmQgdGhlIGJsYWNrL2dyZWVuIHNvbGlkLiAKVGhleSBtZWFuIG5vdGhpbmcuIApIZSBubyBkZWZlbnNpdmUgd2hpeiwgYnV0IGhlIGNhbiBoaXQsIGhlIGEgbG9jYWwga2lkIHdobyB3b3VsZCBsb3ZlIHRvIHBsYXkgaW4gU2FuIEZyYW5jaXNjbywgYW5kIGhlIGNhbiBicmluZyBlbnRodXNpYXNtIGFuZCBzb21lIGxpZmUgaW50byB0aGUgR2lhbnRzIGNsdWJob3VzZSwgd2hpY2ggYWNjb3JkaW5nIHRvIE1hdHQgTW9ycmlzLCBpcyB0b28gbGFpZCBiYWNrLiBCeXJuZXMgdGhpcyB5ZWFyIGlzIGhpdHRpbmcgLjMwMywgMTcgaG9tZSBydW5zLCA2NCBSQklzIGFuZCAyOCBzdG9sZW4gYmFzZXMuIEhpcyBzdGF0cyBhcmUgc2ltaWxhciBob21lIGFuZCBhd2F5ICg4IGhvbWUgcnVucyBhdCBob21lLCA5IGhvbWUgcnVucyBhd2F5KSwgc28gaGlzIHBvd2VyIG51bWJlcnMgYXJlbiBpbmZsYXRlZCBieSB0aGUgQXJpem9uYSBiYWxscGFyay4KSGVsbCBhdCB0aGUgc3RhcnQgb2YgdGhlIGZpZ2h0IHRoZSBjb25jZXB0IG9mIGdldHRpbmcga25vY2tlZCBkb3duIGFuZCBiYWNrIHVwIGFnYWluIHdhcyBzbyBmb3JlaWduIHRvIEthdGFrdXJpIGhlIGNvdWxkbiBldmVuIGdyYXNwIHdoYXQgTHVmZnkgd2FzIGRvaW5nLiBPbiB0aGUgb3RoZXIgaGFuZCBLYXRha3VyaSBpcyBzb21lb25lIHRoYXQgbmV2ZXIgaGFkIHRvIGdldCBiYWNrIHVwIGZyb20gYSBiZWF0aW5nIGFuZCwgdW5mb3J0dW5hdGVseSBmb3IgaGlzIGZhbnMsIGZvdW5kIGhpbXNlbGYgdW5hYmxlIHRvIGRvIGp1c3QgdGhhdCB3aGVuIGhlIHJlY2lldmVkIG9uZS4uIApOb3cgSSdtIGdldHRpbmcgbXkgUGhEIGluIGJpb2NoZW1pc3RyeS4gClRoYW5rIHlvdSBmb3IgeW91ciBpbnRlcmVzdCBpbiBpbmcgYXQgVUNMQSBCcnVpbiBEYXkgZm9yIGFkbWl0dGVkIGZyZXNobWVuISBXZSBhbnRpY2lwYXRlIGFwcHJveGltYXRlbHkgMTgsMDAwIGFkbWl0dGVkIGZyZXNobWVuIHN0dWRlbnRzIGFuZCB0aGVpciBndWVzdHMgd2lsbCB2aXNpdCB0aGUgY2FtcHVzLCBhbmQgeW91ciBoZWxwIGlzIHZpdGFsIHRvIG1ha2luZyB0aGlzIGRheSBhIHN1Y2Nlc3MuIFVDTEEgQnJ1aW4gRGF5IGdpdmVzIGFkbWl0dGVkIGZyZXNobWVuIHN0dWRlbnRzIHRoZSBjaGFuY2UgdG8gdG91ciB0aGUgY2FtcHVzLCBoZWFyIGZyb20gcHJvZmVzc29ycywgbWVldCBjdXJyZW50IHN0dWRlbnRzIGFuZCBleHBlcmllbmNlIHdoYXQgbGlmZSBpcyBsaWtlIGFzIGEgQnJ1aW4uIApUcmFkaXRpb25hbCBCaWN5Y2xlIGNhcmRzIG9yIG5ld2VyIHBsYXN0aWMgY2FyZHMuIFRoZSBrZXkgdG8gcG9rZXIgY2FyZHMsIGR1cmFiaWxpdHkgYXNpZGUsIGlzIHRvIGhhdmUgc21hbGwgbGV0dGVycyBhbmQgbnVtYmVycyBpbiBvcmRlciB0byBiZSBhYmxlIHRvIG9ubHkgdHVybiB1cCB0aGUgdmVyeSBlbmRzIG9mIHRoZSBjYXJkcyB0byBkZXRlcm1pbmUgdGhlaXIgcmFuayBhbmQgc3VpdC4gSWYgeW91IHdhbnQgdG8gdHJhaW4geW91cnNlbGYgZm9yIGZyaWVuZGx5IGhvbWUgZ2FtZXMsIHRoZW4gZ28gZm9yIGl0LiAKTG9uZyBzdG9yeSBzaG9ydCwgSSBhbG1vc3Qgd2VudCB0aHJvdWdoIGV2ZXJ5IHBvcHVsYXIgIGFuZCBzb21lIG5vdCBzbyBwb3B1bGFyICBzdWJnZW5yZXMgb2YgRURNIGFuZCBteSBjdXJyZW50IHRvcCBzdWJnZW5yZXMgYXJlIEhvdXNlLCBUZWNoIEhvdXNlLCBUZWNobm8gYW5kIEhhcmQgdGVjaG5vLiBBcyB5b3Ugc2FpZCwgdGhlc2UgZ2VucmVzIGhhdmUgdmVyeSBzbWFsbCBkZXRhaWxzIHRoYXQgY29uc3RhbnRseSBjaGFuZ2UgYW5kIGl0IGp1c3QgbWFrZXMgbWUgZmVlbCBzbyBnb29kIHRvIG5vdGljZSB0aGUgc21hbGwgZGV0YWlscy4gSGF2ZW4gZm91bmQgYSBzaW5nbGUgcGVyc29uIHdobyBlbmpveXMgVGVjaCBIb3VzZSBhbmQgVGVjaG5vIGluIHJlYWwgbGlmZSwgIHByb2JhYmx5IGJlY2F1c2UgdGhleSBzbyBsb25nICBidXQgSSBlbmpveSB0aGVtIHNvIG11Y2ghIFRoYXQgbm90IHRvIHNheSBJIGRvbiBsaWtlIG90aGVyIHN1YmdlbnJlcywgSSBsaXN0ZW4gdG8gYWxtb3N0IGFsbCBvZiB0aGVtLCBidXQgSSB1c2VkIHRvIGRlc3Bpc2UgVGVjaCBIb3VzZSBhbmQgVGVjaG5vIHdoZW4gSSBmaXJzdCBkaXNjb3ZlcmVkIEVETSBidXQgYWZ0ZXIgYWJvdXQgNiB5ZWFycywgdGhleSBteSBmYXZvcml0ZSBzdWJnZW5yZXMgb2YgdGhlbSBhbGwuCkFyY2hldHlwaWNhbCAocmVhZCBtZW50YWxseSB1bnN0YWJsZSkgZ2VuZGVyIHN0dWRpZXMgbWFqb3IgcmVjZWl2ZXMgYSBtZWFuIG1lc3NhZ2UgZnJvbSBhIGdhbWVyZ2F0ZXIgKHJhbmRvbSBub2JvZHkpIG9uIFR3aXR0ZXIuIApLb3JlYSByZWFsbHkgZG9lc24gY2FyZSwgdGhvdWdoLi4gCldoZW4gSSByZXR1cm5lZCwgSSBmZWx0IGNoYW5nZWQuIFNvIHdoZW4gYSBmcmllbmQgbWVudGlvbmVkIGEgdGVhY2hpbmcgb3Bwb3J0dW5pdHkgaW4gSmFwYW4sIEkgc2FpZCB3aGF0IHRoZSBoZWxsLiBBbmQgc28gbXkgc2Vjb25kIGxpZmUgYmVnYW4uIEkgdGF1Z2h0IEVuZ2xpc2ggZm9yIGEgeWVhciBpbiBKYXBhbiwgc3BlbnQgYSB5ZWFyIGluIEZyYW5jZSwgYW5kIEkgYW0gdGVhY2hpbmcgbm93IGluIFRhaXdhbi4KUGVubnN5bHZhbmlhIG5hdGl2ZSBKb3NlcGggTWNrZWVoZW4gKEdQSSBOby4gMjU0KSB3aWxsIGNhcnJ5IHRoZSBsYXJnZXN0IGNoaXAgc3RhY2sgaW5zaWRlIHRoZSBQZW5uIFRlbGxlciBUaGVhdGVyIGF0IHRoZSBSaW8gQWxsIFN1aXRlcyBIb3RlbCBhbmQgQ2FzaW5vIGluIExhcyBWZWdhcyBvbmNlIHBsYXkgcmVzdW1lcyBpbiBOb3ZlbWJlci4gClNvIGZhciwgaGlzIHByb2plY3Rpb25zIGhhdmUgcHJvdmVkLCBpZiBhbnl0aGluZywgdG9vIGNvbnNlcnZhdGl2ZS4gVGhlIEJvcmdhdGEncyByZXZlbnVlcyBoYXZlIGdyb3duIG1vbnRobHkuIEl0cyBmaXJzdCAgYW5kIHNlY29uZCBxdWFydGVyIHJlc3VsdHMgYmVhdCBCb3lkJ3MgZXN0aW1hdGVzLiBJbiBpdHMgc2Vjb25kIHF1YXJ0ZXIsIGl0IGhhZCAkMTc2IG1pbGxpb24gaW4gZ3Jvc3MgcmV2ZW51ZSwgaW5jbHVkaW5nICQxMjIgbWlsbGlvbiBmcm9tIGdhbWJsaW5nLiBJdHMgZ2FtaW5nIHRha2Ugd2FzIHRoZSBzZWNvbmQgaGlnaGVzdCBpbiBBdGxhbnRpYyBDaXR5LCBiZWhpbmQgb25seSBCYWxseSdzIFBhcmsgUGxhY2UsIHdoaWNoIGlzIGxhcmdlci4gQm91Z2huZXIgaXMgYWxyZWFkeSBwb25kZXJpbmcgYSAkMjAwIG1pbGxpb24gZXhwYW5zaW9uIG9mIGhpcyAxMjUsMDAwIHNxdWFyZSBmb290IGNhc2lubywgd2hpY2ggZW1wbG95cyA0LDgwMCBwZW9wbGUuCjEgc2VlZCBvbiBicmFja2V0IHByZXZpZXcgc2hvdwpXaGlsZSB0aGUgc291cmNlcyBvZiBtb2RlcmF0aW9uIGFwcGVhciB0byBiZSBtdWx0aXBsZSwgdHJhZGUgdGVuc2lvbnMgYW5kIHVuY2VydGFpbnR5IGFyZSB3ZWlnaGluZyBoZWF2aWx5IG9uIGNvbmZpZGVuY2UgYW5kIGVjb25vbWljIGFjdGl2aXR5LiAKSW0gWndlaWZlbHNmYWxsIGtvc3RldCBkZW4gTWluaXN0ZXIgZGFzIGRlbiBKb2IsIHdlbm4gZGVyIEthbnpsZXIgZWluZSBQb3NpdGlvbiB1bmJlZGluZ3QgZHVyY2hzZXR6ZW4gd2lsbC4gQWJlciBkYXMgd2lyZCBiZWthbm50IChzcHRlc3RlbnMsIHdlbm4gZGVyIEJ1bmRlc3Byc2lkZW50IHNpY2ggZXJrbHJ0LCB3YXJ1bSBlciBkZXIgIkVudGxhc3N1bmciIHN0YXR0Z2VnZWJlbiBoYXQpLCB1bmQgaHR0ZSBzb21pdCBlaW5lIGdhbnogZWlnZW5lIFdpcmt1bmcuCkFscyBaaWVsIHZvcnNlaGVuLiAKU25pcGVycyBuZWVkIG1vcmUgc3RvcHBpbmcgcG93ZXIsIHRoZSBvbmx5IHJlYXNvbiBsb25nYm93IGlzIGdvb2QgYXQgcmFuZ2UgaXMgaWYgYWxsIDMgYnVsbGV0cyBoaXQgeW91IGFyZSBzbG93ZWQgdG8gYSBDUkFXTC4gCllvdSBjYW4sIHRvby5MZWFybiB0byByZWxpZXZlIHVucGxlYXNhbnQgZmVlbGluZ3MgaW4gaGVhbHRoaWVyIHdheXMuIApJdCBpcyBqdXN0IGEgc3ByaW5rbGUuIEthdGllIGhlYXJzIGEga25vY2sgb24gdGhlIGRvb3IuIFNoZSBsb29rcyBvdXQgdGhlIHdpbmRvdyBjYXJlZnVsbHkuIApUaGUgcmVhc29uIEkgd2FzIGFibGUgdG8gYmVhdCBDZXBoZXVzIHdhcyBiZWNhdXNlIG9mIHRoZSBicmV2aXR5IG9mIHRoZSBtYXRjaGVzLiAKVGhlIFZpY3RvcmlhbiBnb3Zlcm5tZW50IGhhcyBpbnZlc3RlZCAkMTUgbWlsbGlvbiBpbiByZXNlYXJjaCwgZW1lcmdlbmN5IGRlcGFydG1lbnRzIGFuZCBhIG5ldyBmb3JlY2FzdGluZyBzeXN0ZW0gaW4gdGhlIHdha2Ugb2YgdGhlIGV2ZW50LgpJdCdzIGFsbCB2ZXJ5IGJhc2ljIGNvbmRpdGlvbmFsIHByb2JhYmlsaXR5LiBUaGVyZSBhcmUgcGlsZXMgb2YgYm9va3Mgb24gYmFzaWMgcHJvYmFiaWxpdHkgd2l0aCBhbGwgdGhlIGluZm8geW91IG5lZWQuIEluIGZhY3QsIHRoZSAncG90IG9kZHMnIGJpdCB3YXMgb25lIG9mIHRoZSBvcmlnaW5hbCBhcHBsaWNhdGlvbnMgZW52aXNpb25lZCBieSBQYXNjYWwgd2hlbiBoZSBpbnZlbnRlZCB0aGUgc3R1ZHkgb2YgcHJvYmFiaWxpdHkgaW4gdGhlIGZpcnN0IHBsYWNlLgpJIGFkbWl0IHRoYXQgdGhlIHBlcmtzIGFyZSByZWR1Y2VkIGJ5IDgwJSBzdGF5aW5nIGhvbWUgcGxheWluZyB2aWRlbyBnYW1lcyBzaW5jZSBpdCBhIHByZXR0eSBsb25lbHkgZW5kZWF2b3IsIGJ1dCBJIHByb2dyYW1tZWQgdGhpcyB3YXkgbm93LiBJIHRyaWVkIHRvIGNoYW5nZS4uIApQcmVzc2VkIGNsYXNwIGFuZCB0aGUgZmluaXNoaW5nIGlzIHdvcnNlLiAKSSByZW1lbWJlciBzcGVjaWZpY2FsbHkgZ2V0dGluZyBjYXVnaHQgZHJpbmtpbmcgaW4gdGhlIGdhcmFnZSB3aGVuIEkgd2FzIDE2LiBNeSBkYWQgd2FzIFBJU1NFRCBhbmQgSSBoYWQgdG8gd3JpdGUgYSAyMCBwYWdlIGVzc2F5IGFib3V0IHdoYXQgdGhlIGNvbnNlcXVlbmNlcyBvZiB0ZWVuYWdlIGRyaW5raW5nIHdlcmUgdG8gbXkgMTYgeWVhciBvbGQgYnJhaW4sIGhvdyBtdWNoIGxlZ2FsIHRyb3VibGUgSSBjb3VsZCBoYXZlIGdvdHRlbiBpbnRvLCBhbmQgaG93IG11Y2ggbGVnYWwgdHJvdWJsZSBteSBwYXJlbnRzIGNvdWxkIGhhdmUgZ290dGVuIGludG8gZm9yIGFsbG93aW5nIHRlZW5hZ2UgZHJpbmtpbmcuCkFsc28sIGNvbnNpZGVyIHRoaXM6IGFjY29yZGluZyB0byB3aWtpcGVkaWEgdGhlcmUgYXJlIDk0IG1pbGxpb24gcGFpZCBzZXh1YWwgdHJhbnNhY3Rpb25zIGluIGtvcmVhIGV2ZXJ5IHllYXIuIHRoYXQgcXVpdGUgYWxhcm1pbmcuIHRoZSBtYWpvcml0eSBvZiB0aGF0IHdvdWxkIGJlIGJhcmJlciBzaG9wcyBhbmQgYW5tYXMuIGkgdGhpbmsgYWN0dWFsIHJlZCBsaWdodCBkaXN0cmljdHMgYW5kIGl0YWV3b24gd291bGQgY291bnQgZm9yIHZlcnkgbGl0dGxlIG9mIHRoYXQgZGF0YSAuIHRoZSBzdGF0aXN0aWNzIHdvdWxkIGhhdmUgdG8gYmUgY29taW5nIGZyb20gb3JnYW5pc2VkIHByb3N0aXR1dGlvbiAobGlrZSBicm90aGVscyBhbmQgbWFzc2FnZSBwYXJsb3VycykuIGhvd2V2ZXIgaSBpbWFnaW5lIHRoYXQgYSBsb3Qgb2YgcHJvc3RpdHV0aW9uIGdvZXMgdW5yZXBvcnRlZCAodGVlbiBwcm9zdGl0dXRpb24gdXNpbmcgb25saW5lIGhvb2t1cHMpLgpEcnVua3lfTWNTdHVtYmxlICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KUm9zcyBoYXMgbG9zdCAkNzgwLDAwMCBvbiB0aGUgcG9raWVzLCBhbmQgZXZlcnl0aGluZyBoZSBjYXJlZCBhYm91dCwgYnV0IGV2ZW4gYWZ0ZXIgMjEgeWVhcnMgaW4gcmVjb3ZlcnksIHRoaXMgdW5mYXRob21hYmxlIG9ic2Vzc2lvbiBzdGlsbCBoYXMgYSBob2xkIG9uIGhpbS4gIllvdSBrbm93IGhvdyB0cmlnZ2VyaW5nIGl0IGlzIHRvIGhlYXIgdGhlIG5vaXNlPyIgYXNrcyB0aGUgNTcgeWVhciBvbGQuIAo4KSBFeGNlc3NpdmUgU3BhbS4gCldhbmRlciBhIGJpdCBkb3duIHRoZSBzaG9yZSBhbmQgeW91IGNhbiBjcm9zcyBvbmUgb2YgdGhlIG1hbnkgYnJpZGdlcyBpbnRvIHRoZSByZWFsIGRvd250b3duIGFyZWEgICB3aGljaCBpcyBhIG1pc2ggbWFzaCBvZiB1bHRyYSBtb2Rlcm4gYW5kIG9sZC4gCkJlZW4gd29uZGVyZnVsIHdhdGNoaW5nIGhpbSBmYWxsIGluIGxvdmUgYW5kIGhhdmluZyBoaW0gc29sdmUgdG8gc29tZSBkZWdyZWUgaGlzIHJlbGF0aW9uc2hpcCB3aXRoIGhpcyBzb24gYW5kIGRhdWdodGVyLiAKSm9obm55IENoYW4sIDUyLCB3aG8gd29uIGJhY2sgdG8gYmFjayBNYWluIEV2ZW50cyBpbiAxOTg3IGFuZCAnODgsIGhhcyBoYWQgc3VjaCBhIGxvbmcgZHJvdWdodCB0aGF0IHRoZSBpbmR1c3RyeSBtYWdhemluZSBCbHVmZiByZWNlbnRseSBjYWxsZWQgaGltICJjb21wbGV0ZWx5IGlycmVsZXZhbnQuIiBPdWNoLiAKSGUgd2lsbCBiZSBzYWRseSBtaXNzZWQgYnkgaGlzIGNsb3NlIGJyb3RoZXJzIE1hcmsgKENhdGhlcmluZSksIFNoYXduIGFuZCBLZXZpbiAoS2FyZW4pIGFuZCBhbGwgb2YgdGhlaXIgZmFtaWxpZXMuIApNb3N0IG9mIHRoZW0gaGF2ZSBmcmVlIGNvZmZlZSAobmFrZWQgZXZlbiBoYXMgZnJlZSBiZWVyISkgYW5kIGZyZWUgd2lmaSAob2YgY291cnNlKSBzbyB3aGVuIHlvdSBhZGQgaXQgdXAgaXQgYWJvdXQgdGhlIHNhbWUgY29zdCBhcyBiZWluZyBpbiBhIGNhZmUgd2l0aCB0aGUgZmxleGliaWxpdHkgb2YgdXNpbmcgbXVsdGlwbGUgbG9jYXRpb25zIHdpdGhpbiB0aGUgc2FtZSBjb21wYW55IGFuZCBhcyBmYXIgYXMgaSBrbm93IG1vc3Qgb2YgdGhlbSBhcmUgMjQgaG91cnMgdG9vLiBJdCBhbHNvIGEgd2F5IHRvIGdldCB0byBtZWV0IHBlb3BsZSBhcyB0aGVyZSBhcmUgbG90cyBvZiBldmVudHMgb24gaW4gdGhlbSBhbmQgeW91IHN0YXJ0IHRvIGJ1bXAgaW50byB0aGUgc2FtZSBwZW9wbGUgb3ZlciBhbmQgb3ZlciBhZnRlciBhIHdoaWxlLgpUZXF1aWxhIGlzIHRoZSBzYWZlLCBuYXR1cmFsIHdheSB0byBmZWVsIGJldHRlciBhbmQgbW9yZSBjb25maWRlbnQgYWJvdXQgeW91cnNlbGYgYW5kIHlvdXIgYWN0aW9ucy4gVGVxdWlsYSBjYW4gaGVscCBlYXNlIHlvdSBvdXQgb2YgeW91ciBzaHluZXNzIGFuZCBsZXQgeW91IHRlbGwgdGhlIHdvcmxkIHRoYXQgeW91J3JlIHJlYWR5IGFuZCB3aWxsaW5nIHRvIGRvIGp1c3QgYWJvdXQgYW55dGhpbmcuIFlvdSB3aWxsIG5vdGljZSB0aGUgYmVuZWZpdHMgb2YgVGVxdWlsYSBhbG1vc3QgaW1tZWRpYXRlbHksIGFuZCB3aXRoIGEgcmVnaW1lbiBvZiByZWd1bGFyIGRvc2VzIHlvdSBjYW4gb3ZlcmNvbWUgYW55IG9ic3RhY2xlcyB0aGF0IHByZXZlbnQgeW91IGZyb20gbGl2aW5nIHRoZSBsaWZlIHlvdSB3YW50IHRvIGxpdmUuIApGYW50YXN0aWMgbGl0dGxlIHJ1bm5lciBwYXJ0aWN1bGFybHkgcm91bmQgdG93biwgSSBoYWQgbWluZSBmb3IgMiB5ZWFycyB3aGVuIEkgd2FzIGxlYXJuaW5nIHRvIHJpZGUgYW5kIGp1c3QgYWZ0ZXIgaSBwYXNzZWQgbXkgdGVzdC4gSSBmb3VuZCBpdCBWRVJZIGZvcmdpdmluZyBiaWtlIGNvbnNpZGVyaW5nIG1pbmUgZ290IGxpdHRsZSBjYXJlLCBvY2Nhc2lvbmFsbHkgZGllc2VsIGluIHRoZSB0YW5rIHJhdGhlciB0aGFuIHBldHJvbCBhbmQgdGhlIG9pbCBsZXZlbCB3YXMgYWxsb3dlZCB0byBkcm9wIHdheSBiZWxvdyB0aGUgbWluaW11bSBtYXJrLgpUaGUgZmlyc3Qgc3RlcCB0byBjb2xsZWN0aW5nIHZpbnRhZ2UgY2FzaW5vIHBva2VyIGNoaXBzIG9uIGEgYnVkZ2V0IGlzIHRvIGFzayBhcm91bmQuIElmIHlvdSBhcmUgaW50byB0aGUgcG9rZXIgY2hpcCBjb2xsZWN0aW5nIGJ1c2luZXNzLCBpdCBpcyBxdWl0ZSBsaWtlbHkgdGhhdCB5b3UgbWF5IGtub3cgYSBwbGF5ZXIgb3IgdHdvLiAKU2hlIGhhcyBiZWVuIHdpdGggdGhlIEhvdXNlIGZvciB0aHJlZSB5ZWFycywgaGF2aW5nIHByZXZpb3VzbHkgd29ya2VkIGluIHRoZSBwcml2YXRlIGFuZCBwdWJsaWMgc2VjdG9ycy4gClRoZSBmaWxpbmcgc2F5cyBKdWRkJ3Mgc2V4dWFsIGhhcmFzc21lbnQgYWxsZWdhdGlvbnMsIGV2ZW4gaWYgdHJ1ZSwgZmFsbCBmYXIgc2hvcnQgb2YgYmVpbmcgInVud2VsY29tZSBhbmQgcGVydmFzaXZlIG9yIHNldmVyZSwiIGFzIHRoZSBsYXcgcmVxdWlyZXMgZm9yIGEgZmluZGluZyBvbiBoZXIgYmVoYWxmLgpPcnRtZWllciBzdGFydGVkIHRocmVlIGdhbWVzIGF0IGZpcnN0IGJhc2UgZHVyaW5nIHRoZSB0aGlyZCB3ZWVrIG9mIEp1bHksIGJ1dCBoZSBiZWVuIGluIHRoZSBvdXRmaWVsZCBzaW5jZSB0aGVuLiAKSWYgeW91IGFyZSBjb29sIHdpdGggYSBkb2cgd2hvIHN0YXJlcyBhdCB5b3UgYSBsb3QsIHdoaWNoIEkgYW0sIEkgcmVjb21tZW5kIHRlYWNoaW5nIGZvY3VzZWQgZXllIGNvbnRhY3QuIFJld2FyZCBleWUgY29udGFjdCBhbmQgdGhlbiBncmFkdWFsbHkgYnVpbGQgdG8gYSBtaW51dGUuIEkgZGlkIHRoaXMgYnkgcmV3YXJkaW5nIGZvciBhbiBpbnN0YW50LCB0aHJvd2luZyBhIHRyZWF0IGFjcm9zcyB0aGUgcm9vbSwgYW5kIG15IGRvZyBnb3QgYW5vdGhlciByZXdhcmQgd2hlbiBzaGUgbWFkZSBleWUgY29udGFjdCB3aXRoIG1lIGFnYWluLiAKQnVybWFuIGhpbXNlbGYgaXMgYW4gYWR2ZXJ0aXNlciBhbmQgZnJvbSB0aGF0IHBlcnNwZWN0aXZlLCBoZSBmZWVscyB0aGUgc3BvcnQgaGFzIGEgbG90IHRvIG9mZmVyIGJyYW5kcy4gIkl0IGlzIGEgbWluZCBnYW1lIHBsYXllZCBieSB0aGUgeW91bmcgYW5kIHRoZSBvbGQsIG1hbGUgYW5kIGZlbWFsZSwgc2l0dGluZyBhbGwgdG9nZXRoZXIgd2hpY2ggaXMgYSB1bmlxdWUgcHJvcG9zaXRpb24gdGhhdCBubyBvdGhlciBzcG9ydCBjYW4gb2ZmZXIgYXQgdGhpcyBzdGFnZSwiIHNheXMgaGUuLiAKVGhlIGZhY3QgdGhhdCB0aGUgZ3JhbmRtb3RoZXIgZm91bmQgdGhlIG1vdGhlciBub3QgdG8gc2F5IHdoYXQgaGFwcGVuZWQgYnV0IHRvIHJ1YiBpdCBpbiBoZXIgZmFjZSB0aGF0IGhlciBjaGlsZCB3YXMgImJlaW5nIGJhZCIgaXMgYSBmbGFnLiBTaGUgc291bmRlZCBzZWxmIHJpZ2h0ZW91cy4gSW0gc3VyZSB0aGUgbW9tcyB3ZXJlIHRhbGtpbmcgbm90IGp1c3QgdG8geW91IGJ1dCB0byBvdGhlciBtb21zLiBUaGUgdHJvb3AgbGVhZGVyIG5lZWRzIHRvIGtub3cgb2YgdGhpcyBzbyBzaGUgY2FuIGRlYWwgd2l0aCBpdCBpZiBpdCBjb21lcyB1cCBhZ2Fpbi5XZSBhbGwgbWFrZSBtaXN0YWtlcy4gCkkgaGF2ZSB0aGUgdGVzdG8gNTU3cy4gQnkgZmFyIHRoZSB3b3JzdCBpIGhhdmUgZXZlciB1c2VkLiBIb29rIGhhcyBmYWxsZW4gb2ZmIHR3aWNlIGFuZCBpbXBvc3NpYmxlIHRvIGdldCBnZXQgYmFjayBvbi4gVGhlIGhpZ2ggc2lkZSB0cmFuc2R1Y2VyIGdvdCBzdHVjayBvbiAgMjlpbmhnLiBTZW50IGl0IGJhY2sgYW5kIHRoZXkgcmVwbGFjZWQgdGhlIHRyYW5zZHVjZXIsIGhvb2sgd2FzIGFsc28gcmVwbGFjZWQgYW5kIGZlbGwgb2ZmIGFnYWluLiBBbHNvIGhhdmUgdG8gemVybyB0aGVtIGxpdGVyYWxseSBldmVyeSB1c2UgYW5kIHRoZSBrbm9icyBoYXZlIGNvbWUgb2ZmLiBBbmQgaSBhbSBwcmV0dHkgZ29vZCB0bwpXZWl0ZXJlIEluZm9ybWF0aW9uZW4gZmluZGVzdCBkdSBpbiBkZW4gQ29tbXVuaXR5IFJlZ2Vsbi4gCkJlaW5nIHNtYWxsIGdldHMgaGFyZGVyCldlbGwgdGhpcyBpcyBvbmx5IGEgbXl0aCBmb3IgbGFjayBvZiBiZXR0ZXIgd29yZHMuIAoiVGhlcmUgaXMgcGxlbnR5IG9mIHBvdGVudGlhbCB0byBncm93ICh0aGUgYnVzaW5lc3MpOyBpdCdzIHNvbWV0aGluZyB0aGF0IEkgcmVhbGx5IGVuam95LCIgUG9ydGVyIHNhaWQuICJJdCdzIGEgbmVlZCBvdXQgdGhlcmUgZm9yIHRoZXJhcGlzdHMgYW5kIGZvciB0aGUgcHVibGljLCB0b28uIgpJIHdvdWxkbiBleHBlY3QgaXQgdG8gcm9sbCBvdXQgbGlrZSB5b3UgdGhpbmsuIApJIGRvbiBrbm93IGlmIHRoZSBnaXJsIGhlIHRhbGtpbmcgYWJvdXQgaW4gdGhhdCBjYXNlIHdhcyBKYXBhbmVzZSBvciBub3QsIGJlY2F1c2UgSSBub3Qgd2F0Y2hpbmcgdGhvc2UgdmlkZW9zLCBidXQgaWYgc2hlIHdhcyBpdCBhbiBlc3BlY2lhbGx5IGR1bWIgY29tcGxhaW50IGluIGhpcyBjYXNlIGJlY2F1c2UgcmljZSBtaXhlZCB3aXRoIGEgcmF3IGVnZyBpcyBhIHByZXR0eSBjb21tb24gSmFwYW5lc2UgYnJlYWtmYXN0LiAKQ291cmFnZTogd2lzZSBvbmVzIGJldCBoZWF2aWx5IHdoZW4gdGhlIHdvcmxkIG9mZmVycyB0aGVtIHRoYXQgb3Bwb3J0dW5pdHkuIFRoZXkgYmV0IGJpZyB3aGVuIHRoZXkgaGF2ZSB0aGUgb2Rkcy4gQW5kIHRoZSByZXN0IG9mIHRoZSB0aW1lLCB0aGV5IGRvbiBJdCBqdXN0IHRoYXQgc2ltcGxlLiAKQSBkaXZpc2lvbiBiZW5jaCBvZiBKdXN0aWNlIFIgTSBTYXdhbnQgYW5kIEp1c3RpY2UgU2FuZGVlcCBTaGluZGUgYnkgd2F5IG9mIGludGVyaW0gcmVsaWVmLCByZXN0cmFpbmVkIHRoZSBwb2xpY2UgZnJvbSBmaWxpbmcgYSBjaGFyZ2Ugc2hlZXQgaW4gdGhlIGNhc2UgcmVnaXN0ZXJlZCBieSB0aGVtIGluIDIwMTYuIEl0IGhhcyBhc2tlZCB0aGUgcHJvc2VjdXRpb24gdG8gZmlsZSBhIHJlcGx5IHRvIHRoZSBwZXRpdGlvbiwgZmlsZWQgYnkgb25lIG9mIHRoZSBhY2N1c2VkLCBOYXNpciBQYXRlbCwgd2hvIGFsbGVnZWRseSByYW4gdGhlIGNsdWIuClRoZSBIaWdoZXN0IFN1YnJlZGRpdCBpbiB0aGUgTGFuZApBcHByb3hpbWF0ZWx5IGZpdmUgeWVhcnMgYWZ0ZXIgdGhlIHBhcnRpZXMgcmV0aXJlbWVudCBhbmQgMTAgeWVhcnMgYmVmb3JlIHRoZWlyIHNlcGFyYXRpb24sIE1yLiBCYXJ5bGEgbW90aGVyIGhlYWx0aCBkZWNsaW5lZCwgbGVhdmluZyBoZXIgd2l0aCBtb2JpbGl0eSBpc3N1ZXMuIApJdCByZWFsbHkgdmlsbGFpbiBkZXBlbmRlbnQsIGJ1dCB0aGVyZSBhIGxvdCBvZiAxLzIgcGxheWVycyB0cnkgdG8gdHJhcCB3YXkgdG9vIG11Y2guIApJIGJlbGlldmUgdGhlIGFkdmVyc2FyeSBrbm93cyB0aGlzLCBhbmQgaGFzIHF1aWV0bHkgd29ya2VkIHRvIGRpbWluaXNoIHRoZSBhdmVyYWdlIG11c2ljYWwgZXhwZXJpZW5jZSB3ZSBoYXZlIGluIG91ciB3YXJkcyBhbmQgYnJhbmNoZXMuIEkgYmVsaWV2ZSB0aGUgYWR2ZXJzYXJ5IGFsc28gd29ya3MgZXh0cmEgaGFyZCB0byBpbnNwaXJlIGZlYXIgYW5kIGRvdWJ0IGluIHRoZSBoZWFydHMgb2YgdGhvc2UgY2FsbGVkIHRvIHByb3ZpZGUgbXVzaWNhbCBzZXJ2aWNlIHRvIGEgd2FyZCBvciBicmFuY2guICJZb3Ugbm90IGdvb2QgZW5vdWdoLiAKVGhhdCBjYXN0IGhpbSBhcyBvdXIgdGFyZ2V0IG1hcmtldCwgYW5kIGJ5IHRoZSBlbmQgb2YgdGhlIGFmdGVybm9vbiB3ZSBnb3QgdGhpcyBwb29yIGd1eSB0byBkcmluayBzbyBtdWNoIGxlbW9uYWRlIGl0IGEgd29uZGVyIGhpcyBibGFkZGVyIGRpZG4gYnVyc3QuIEp1c3QgdG8ga2VlcCB1cyBpbiBidXNpbmVzcy4gSSB0aGluayB3ZSBhbHNvIHNvbGQgYSBmYWlyIGFtb3VudCB0byBteSBwYXJlbnRzIGRyaXZlciwgYXMgaGUgY2FtZSBhbmQgd2VudCwgYW5kIHRvIHNvbWUgb2YgdGhlIGhvdXNlaG9sZSBzdGFmZiwgd2hvIHRvb2sgcGl0eSBvbiB1cyBhbmQgZHVnIGRlZXAgZm9yIHRoZWlyIHNwYXJlIGNoYW5nZS4uIApCYXNpY2FsbHksIENhc2lubyBXYXIgaXMgYSBjYXNpbm8gY2FyZCBnYW1lIHdoaWNoIGlzIGJhc2VkIG9uIFdhciAgIGEgcG9wdWxhciBjYXJkIGdhbWUgcGxheWVkIGJ5IGNoaWxkcmVuLiBGaXJzdCwgaGVyZSdzIGEgcXVpY2sgbG9vayBhdCB0aGUgcnVsZXMgb2YgdGhlIFdhciBjYXJkIGdhbWUuIApVbmNvbWZvcnRhYmxlIHNpdHVhdGlvbiB5b3UgaGF2ZSBlbmNvdW50ZXJlZCB3aGVuIGdpdmluZyBhIG1hc3NhZ2UKUGhva2luZ2tpZGRpbmdtZSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGl0dGEgcCBrbmluZyBhdiBnYXMgaW5sZXZlcmFuc2VyIG9jaCB2ZXJ2YWthIGJpbGVucyBNdGFyc3RsbG5pbmcgZnIgYXR0IHNlIG9tIGRldCBmaW5ucyBleHRyYSBvZnJrbGFybGlnYSBtaWwgcCBiaWxlbi4gCldlIG1heSBoYXZlIHNjcmV3ZWQgdXAgdGhlIGVhcnRoIGJleW9uZCByZXBhaXIsIGJ1dCB3ZSBiZXR0ZXIgc3RhcnQgd29ya2luZyBub3cgb24gY3JlYXRpbmcgcmVhbCBhbHRlcm5hdGl2ZXMgdG8gdGhlIG9pbCBlY29ub215IG9yIHdlIGdvaW5nIHRvIGJ1cm4gdXAgaW4gYSBibGF6ZSBvZiBnbG9iYWwgd2FybWluZyBhcyB3ZSBkcm93biBpbiBzZWFzIG9mIG9pbC4gdGhlIHNhbWUgd2F5IHRoYXQgd2UgbXVzdCBmb3JjZSB0aGUgZ292ZXJubWVudCB0byBjb252ZXJ0IHRoZSBtaWxpdGFyeSBlY29ub215IHRvIGEgcGVhY2VmdWwgb25lLCB3ZSBkYW1uIHdlbGwgYmV0dGVyIGZvcmNlIHRoZW0gdG8gY29udmVydCB0aGUgb2lsIGVjb25vbXkgdG8gYSBzdXN0YWluYWJsZSBvbmUuIApJIHNob3VsZCBoYXZlIHRyaWVkIGEgZmV3IG1vcmUgY3JlYXRpdmUgbW92ZXMgYWxvbmcgdGhlIHdheSwgcGVyaGFwcyBhZGRpbmcgb25lIGFkZGl0aW9uYWwgdHJpY2t5IG1hbmV1dmVyIG91dCBvZiBldmVyeSAyNSBoYW5kcyBJIHBsYXllZC4gSXQgd291bGQgaGF2ZSBiZWVuIG5pY2UgdG8gd2luIG9uZSBvZiB0aG9zZSBjb2luIGZsaXBzIHdpdGggcG9ja2V0IHNpeGVzLCB0b28hIE1lbnRhbCBhbmQgcGh5c2ljYWwgcHJlcGFyYXRpb24gaXMgY3JpdGljYWwgaW4gdG91cm5hbWVudCBwb2tlciBldmVudHMgbGlrZSB0aGUgV1NPUC4gSWYgSSBoYWQganVzdCBiZWVuIGFibGUgdG8gbWFrZSBpdCB1bnRpbCBEYXkgMywgd2l0aCB0aGUgYmVuZWZpdCBvZiBhIHN0cmVudW91cyBsYXRlIG5pZ2h0IHdvcmtvdXQgYW5kIGEgZ29vZCBuaWdodCdzIHNsZWVwLCBtYXliZSBJIHdvdWxkIGhhdmUgYmVlbiBhYmxlIHRvIGZvbGQgYSBoYW5kIGxpa2UgcG9ja2V0IHNpeGVzIGFuZCBzdGljayBhcm91bmQgdG8gY2xhaW0gYW5vdGhlciBjaGFtcGlvbnNoaXAgYnJhY2VsZXQuLiAKTm9yd2VnaWFuIHBvbGl0aWNpYW4gdG8gdmlzaXQgU2Fza2F0Y2hld2FuClBvaW50cyBpbiBoZWFkIHRvIGhlYWQgbWF0Y2hlcyBhbW9uZyB0aWVkIHRlYW1zOwpMb3ZlIGFuZCBTb2xpZGFyaXR5CllvdXIgdGh1bWIgc2hvdWxkIGJlIHBsYWNlZCBiZXR3ZWVuIHRoZSBzdGljayBhbmQgdGhlIGhhaXIgb2YgdGhlIGJvdywgYW5kIHNob3VsZCBiZSBiZW50IGF0IGFsbCB0aW1lcy4gCihUaGluayBhYm91dCB0aGUgdHlwZXMgb2YgZGV2ZWxvcG1lbnRzIG5lYXIgdHJhaW4gc3RhdGlvbnMgY29tcGFyZWQgdG8gbGFyZ2UgYnVzIHN0b3BzKS4gU29ycnkgZm9yIHRoZSBxdWljayByZXNwb25zZSBvbiBhIG15IHBob25lIGJ1dCB0byBmaWVsZCBhbnkgZnVydGhlciBxdWVzdGlvbnMuLiAKTW9zdCBvZiB0aGUgcGVvcGxlIHdobyBhcnJpdmVkIGluIExvdWlzaWFuYSB3ZXJlIGh1bmdyeSwgaGFkIGxpdHRsZSBwcm92aXNpb25zLCBhbmQgaGFkIG5vIHNoZWx0ZXIuIApUaGVyZSBhcmUgdGhlIG9idmlvdXMgICB0aGUgb25lcyB3aG9zZSBxdW90YWJpbGl0eSBlbnN1cmVkIGEgZmlsbSdzIGxlZ2VuZGFyeSBzdGF0dXMgICBidXQgZGlnIGRlZXAsIGFuZCB0aGVyZSBhcmUgYW4gZW50aXJlIGhlYXAgb2YgZ2VtcyB0byBkaXNjb3Zlci4gCkkgZG9uIHVzZSB0aGUgQ2hhbXBpb24gdGhhdCBtdWNoIGJ1dCB3aGVuIEkgY2FuIGZpdCBoaW0gaW4gaGUgZG9lcyBncmVhdCB3b3JrLiAKVGhhdCBiZWx0IHdhcyBzdG9sZW4gYW5kIHRoZSBpc3N1ZSBuZWVkcyB0byBiZSByZXNvbHZlZC4gTWFqb3JpdHkgb2YgRmFucyBkb24ndCB3YW50IHRoYXQgcmVtYXRjaCBidXQgdGhlcmUgaXMgc3RpbGwgYSByZWxhdGl2ZWx5IGJpZyBkZW1hbmQgZm9yIGl0LiBXaG8gc2hvdWxkIFBhY3F1aWFvIHRhcmdldD8uIApCZSBIdW1hbi4gCkF1eCB0YXRzIFVuaXMsIGRldXggdGF0cyBxdWkgb250IGxnYWxpcyBsIGRlIGxhIG1hcmlqdWFuYSAgZGVzIGZpbnMgcmNyYXRpdmVzLCBlbiBsIGxlIENvbG9yYWRvIGV0IGwgZGUgV2FzaGluZ3Rvbiwgb250IGRjaWQgZCBsYSB2ZW50ZSBkZSBjYW5uYWJpcyBhdXggbWluZXVycy4uIApMIDMgVzE1OiBEdWRlICAgSSBoaXR0aW5nIGFnZSA0NSBpbiBNYXkgICBJIGhpdCB0aGUgZ3ltIHRocmVlIGRheXMgYSB3ZWVrLCBsaWZ0IHdlaWdodHMsIHJ1biBhIGxvdCwgYW5kIGhhdmUgd2hhdCBJIHRoaW5rIGlzIGEgZGVjZW50ICJjdXQgYm9keSIgc28gSSBmZWVsIHRoYXQgSSBhbSBpbiByZWFzb25hYmx5IGdvb2Qgc2hhcGUgZm9yIG15IGFnZS4gV2l0aCB0aGF0IHN0YXRlZCwgaXQgYWx3YXlzIGdldHMgbWUgbW90aXZhdGVkIGFuZCBwdW1wZWQgd2hlbiBJIHNlZSBhIHBlcnNvbiAobWFsZSBvciBmZW1hbGUpIG9mIGFueSBhZ2Ugd2hvIGlzICJ2aXN1YWxseSIgb3V0IG9mIHNoYXBlL292ZXJ3ZWlnaHQvbm90IG11c2NsZWQgd29ya2luZyBvdXQgYW5kIGJyZWFraW5nIGEgc3dlYXQuIEZvciBmb2xrcyBsaWtlIHlvdSwgSSBzYXkganVzdCAiZG8gaXQiIGFuZCBnaXZlIHRob3NlIHdobyAiZG8gaXQiIHRoZSBzdXBwb3J0ISEhIEJlIHN0cm9uZyEhIS4gClVuZCBzdGVsbGVuIGFscyBlcnN0ZXMgZmVzdDogZXMgZ2lidCB6d2VpIERpdmEgU3VpdGVuLiBBdXNzaWNodHNvcHRpbWFsIHBsYXR6aWVydCBhbiBkZXIgcmF1bWJyZWl0ZW4gdW5kIHJhdW1ob2hlbiBGZW5zdGVyZnJvbnQgbWl0IEJsaWNrIGF1ZiBSaGVpbiwgVGVycmFzc2UsIFByb21lbmFkZSB1bmQgUG9zdCBUb3dlci4gUmVjaHRzIHZvbiB1bnMgZGVyIGxpY2h0ZHVyY2hmbHV0ZXRlIEJhZGVzYWFsLCBpbiBkZW0gZGVyIGZyZWlzdGVoZW5kZW4gV2FubmUgZWluIEtyaXN0YWxsbGV1Y2h0ZXIgd29obmxpY2hlIEF0bW9zcGggdmVyYnJlaXRldC4gVW5kIGFscyBvYiBkYXMgbmljaHQgc2Nob24gZ2VudWcgdyBlaW4gWFhMIEZsb2thdGlzb2ZhIGltIDcwZXIgSmFocmUgU3RpbCwgZiBkYXMgc2ljaGVybGljaCBldGxpY2hlIE11cHBldHMgaWhyIExlYmVuIGxhc3NlbiBtdXNzdGVuLgpOb3Qgb25seSBkbyBsYXJnZSBmYWNlZCBwbGF5aW5nIGNhcmRzIGNvbWUgaW4gcmVndWxhciBkZWNrcyBidXQgeW91IGNhbiBnZXQgc3BlY2lhbCBkZWNrcyBtYWRlIGZvciBwaW5vY2hsZSBhcyB3ZWxsLCBtYWtpbmcgaXQgcG9zc2libGUgdG8gZW5qb3kgYW55IGtpbmQgb2YgY2FyZCBnYW1lIHJlZ2FyZGxlc3Mgb2Ygd2hhdCB5b3UgZW5qb3kuClVuZm9ydHVuYXRlbHksIGEgd2VlayBiZWZvcmUgdGhlIHJhY2UgSSBwdWxsZWQgbXkgaGFtc3RyaW5nIGFuZCBzaHV0IHRoaW5ncyBkb3duIGFsbW9zdCBjb21wbGV0ZWx5LCBob3BpbmcgdGhhdCBpdCB3b3VsZCBoZWFsIGluIHRpbWUgZm9yIHRoZSByYWNlLiAKSWYsIHRoYW5rcyB0byBwb29yIGRpZXQsIG1lZGljYXRpb24sIGhvcm1vbmFsIGNoYW5nZXMgb3IgZGFtYWdlIGZyb20gY2hlbWljYWwgaGFpciBwcm9jZXNzZXMsIHlvdSdyZSBleHBlcmllbmNpbmcgdGhpbm5pbmcgaGFpciwgZGFuZHJ1ZmYgb3Igb3RoZXIgYW5ub3lpbmcgYnV0IG5vbm1lZGljYWwgc2NhbHAgY29uZGl0aW9ucywgeW91IG1pZ2h0IHdhbnQgdG8gY29uc2lkZXIgYSBwcm9mZXNzaW9uYWwgc2NhbHAgdHJlYXRtZW50LiBGb3IgZXhhbXBsZSwgTmlveGluIHRoZXJhcHkgcmV2aXRhbGl6ZXMgaGFpciBmb2xsaWNsZXMgYW5kIHByb21vdGVzIGdyb3d0aCwgTW9yb2NjYW4gb2lsIHRyZWF0bWVudCBzdHJlbmd0aGVucyBoYWlyIGFuZCByZXN0b3JlcyBzaGluZSwgYW5kIHRoZXJlIGFyZSBhbHNvIHRyZWF0bWVudHMgZm9yIGRyeSBzY2FscCBbc291cmNlOiBSb29rc10uIApUaGUgR3JlZW5zIGFuZCB0aGUgSmFjcXVpIExhbWJpZSBOZXR3b3JrIGFsc28gd2FudCBwb2tpZXMgcmVtb3ZlZCBmcm9tIHN1YnVyYmFuIHZlbnVlcy4gClRoZSBwb3NzaWJsZSBkYW5nZXIgaXMgdGh1cyBhZGRpY3Rpb24uIEZvciB0aGUgdmFzdCBtYWpvcml0eSBvZiBwbGF5ZXJzIGhvd2V2ZXIgcG9rZXIgY2FuIGJlIHBsYXllZCByZXNwb25zaWJseSB3aXRob3V0IHBvc2luZyBhbnkgZGFuZ2VyIHRvIHRoZWlyIGxpdmVzIG9yIGZpbmFuY2VzLiAoRnVsbCBBbnN3ZXIpLiAKSW4gZmFjdCwgQ3Jvb2sgY2FsbGVkIHRoZSBjaGllZiBleGVjdXRpdmUgb2YgdGhlIGNvbXBhbnkgTXVycGh5IHdvcmtzIGZvciBhbmQgbW9zdCBvZiB0aGUgdXBwZXIgbWFuYWdlbWVudC4gCldlZyBuciA5OSAoaGVlbCBlZW56YWFtLCBqZSBrYW4gaGllciB6byB2ZXIga2lqa2VuISkgcmVkZW4gd2UgdmlhIGVlbiBzdHVramUKUGFydGljaXBhbnRzIHdpbGwgcGF5ICQ1IGEgaGFuZC4uIApTbywgaGVyZSB3aGF0IGhhcHBlbmVkOiB3ZSB3ZXJlIG9mZmVyaW5nIGEgZmVlZCBvZiAvci9uZW9ncmFwaHkgcG9zdHMgb24gdGhlIC9yL2NvbmxhbmdzIG9mZmljaWFsIERpc2NvcmQgc2VydmVyLCBzbyB0aGF0IHVzZXJzIHdobyB3ZXJlIGludGVyZXN0ZWQgaW4gdGhlIHN1YnJlZGRpdCBjb3VsZCBrbm93IHdoZW4gYSB0aGVyZSB3YXMgYSBuZXcgcG9zdC4gV2UndmUgYmVlbiBydW5uaW5nIGEgZmVlZCBvZiAvci9jb25sYW5ncyBmb3IgcXVpdGUgYSB3aGlsZSBub3cgYXMgd2VsbCAoYW5kIGluIGZhY3QsIGhhZCB0byBhbWVuZCBvdXIgQXV0b01vZCBmb3IgdGhlIHNhbWUgaXNzdWUgb2NjdXJyZW50IG9uIC9yL25lb2dyYXBoeSkuIFRoZSB3aG9sZSBzZXR1cCBpcyBxdWl0ZSBzaW1pbGFyIHRvIGEgbXVsdGlyZWRkaXQgaW4gbWFueSByZXNwZWN0czogaXQgYWxsb3dlZCBtb3JlIGludGVncmF0aW9uIGludG8gdGhlIGNvbW11bml0eSwgcGFydGljdWxhcmx5IGFzIC9yL25lb2dyYXBoeSB3YXMgcG9zaXRpb25lZCBhcyB0aGUgZGVzdGluYXRpb24gZm9yIHNjcmlwdCBwb3N0cywgYWZ0ZXIgd2UgZGVjaWRlZCB0byBubyBsb25nZXIgYWxsb3cgdGhlbSBvbiAvci9jb25sYW5ncy4uIApJZiB5b3VyIGRlZmVuc2UgaXMgYmFzZWQgYXJvdW5kIG5vdCBiZWluZyBhcyBiYWQgYXMgdGhlIHdvcnN0IGZ1Y2tlcnMgd2hvIGV2ZXIgaGVsZCBwb3dlciBpbiBFdXJvcGUgdGhlbiBJIHN1Z2dlc3QgZHJvcHBpbmcgdGhlIHN1YmplY3QuIFRoZSBJcmlzaCB3ZXJlIGxlZnQgdG8gc3RhcnZlIGJ5IHRob3NlIGluIGNoYXJnZSwgd2hvIGhhZCBjb3VudGxlc3Mgb3Bwb3J0dW5pdHkgdG8gY2hhbmdlIHRoZSBjb3Vyc2UgYnV0IGRpZCBub3RoaW5nLCBtYXliZSBtdXJkZXJvdXMgaW50ZW50IGlzIG1pc3NpbmcgZm9yIGxlZ2FsIHB1cnBvc2VzIGJ1dCB5b3UgY2FuIGdvIGFuZCBmdWNrIHlvdXJzZWxmIGlmIHlvdSB0aGluayB0aGF0IHdpbGwgaG9sZCBhbnkgd2F0ZXIgd2hlbiBpdCBjb21lcyB0byBob3cgd2UgZmVlbCBhYm91dCB0aGUgbWF0dGVyLiAKSSBiZWxpZXZlIHRoYXQgdGhlIHNob3cgaGFzIHZlcnkgY29uc2lzdGVudCB0aGVtZXMsIHRoYXQgY29tZSB0b2dldGhlciB0byBwcmVzZW50IGEgdmVyeSBzb2xpZCBhbmQgd2VsbCB0aG91Z2h0IG91dCBpZGVhLCBJIGltcGxvcmUgeW91IHRvIGZ1cnRoZXIgY29uc2lkZXIgdGhlIHBvaW50IG9mIHRoZSBzeW1ib2xpc20uIEkgZG9uIGJlbGlldmUgdGhhdCAiU3RhbmRpbmcgb24gaXQgb3duIHR3byBmZWV0IiBtZWFucyBhbnl0aGluZyBpbXBvcnRhbnQsIGFzIHN5bWJvbHMgYW5kIG1ldGFwaG9ycyBhcmUgdGhlIGRyaXZpbmcgZm9yY2UgYmVoaW5kIHRoZSBzaG93LiBXaXRob3V0IHRoZSBtZXRhcGhvcnMgYW5kIHN5bWJvbGlzbSB0aGVyZSB3b3VsZCBiZSBub3RoaW5nIGxlZnQuIApPYiBpbSB0ZXVyZW4gUmVzdGF1cmFudCBvZGVyIGJlaW0gSCBhbiBkZXIgU3RyYXNzZSBuaWUgd3VyZGVuIG1laW5lIEdlc2NobWFja3NuZXJ2ZW4gZW50dCBNYW4gZGFyZiBoYWx0IGVpbmZhY2ggbmljaHQgc28gZ2VuYXUgaGluc2NoYXVlbiB1bmQgYXVmIGtlaW5lbiBGYWxsIHZlcnN1Y2hlbiBpbiBFcmZhaHJ1bmcgenUgYnJpbmdlbiwgd2FzIG1hbiBkYSBnZXJhZGUgaXNzdC4gCkJ1dCBoZSB3YXNuJ3QgcGFydGljdWxhcmx5IGludGVyZXN0ZWQgaW4gcG9saXRpY3MsIHNpbmNlIHRoZXJlIHdhcyBtb3JlIHRhbGsgYWJvdXQgc3BvcnRzIHRoYW4gcG9saXRpY3MgYXQgdGhlIGRpbm5lciB0YWJsZS4gCjEgcG9pbnQgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnb1llcCwgSSBtZWFudCBhIGdlbmVyaWMgR1BVIHRlc3Qgc3VjaCBhcyBmdXJtYXJrIG9yIHRoZSBsaWtlcy4gV2hlbiB5b3UgcnVuIHRoYXQgdGVzdCwgbWFrZSBzdXJlIHRvIG1vbml0b3IgdGhlIHRlbXBlcmF0dXJlcyBvZiB5b3VyIEdQVSBhbmQgdGhlIHBjIGNhc2UgYXMgYW5vdGhlciBjb21tZW50b3IgYWxyZWFkeSBzdWdnZXN0ZWQuIChpZiB0aGVyZSBhcmUgY2VydGFpbiBzcG90cyB0aGF0IGdldCB0b28gaG90IG9yIG1heWJlIHRoZSBjYXJkIGhlYXRzIHVwIHRvbyBtdWNoIGFzIHdlbGwpSWYgeW91IGNhbiBlbGltaW5hdGUgdGhlc2UgaXNzdWVzIHNlbmQgdGhlIGNhcmQgaW4gZm9yIHdhcnJhbnR5LiAKSWYgeW91IHdhbnQgdG8gZG8gaXQgeW91cnNlbGYsIGdvIG9uIFJlZGZpbiBhbmQgZmF2b3JpdGUgc29tZSBob3VzZXMgaW4geW91ciBhcmVhLCB3cml0ZSBkb3duIHRoZSBSZWRmaW4gZXN0aW1hdGUgYW5kIGxpc3QgcHJpY2UgYW5kIHRoZW4gY2hlY2sgYmFjayBhIGZldyBtb250aHMgbGF0ZXIgb25jZSB0aGUgc2FsZSBwcmljZXMgYXJlIHBvc3RlZCBvbiBNTFMuLiAKSXQgbG9va3MgbGlrZSBpdCBzdXBwb3NlZCB0byBiZSBjb21wZXRpdGlvbiBmb3IgdGhlIEJpb3JlIFdhdGVyeSBFc3NlbmNlLCBleGNlcHQgaW5zdGVhZCBvZiBzbWVsbGluZyBsZW1vbnkgaXQgc21lbGxzIGxpa2UgZmFicmljIHNvZnRlbmVyLiBBbmQgaXQgc3RpbmdzIGF0IHRoZSBjb3JuZXJzIG9mIG15IGV5ZXMuIEFuZCBpdCBzZWVtcyB0byBoaWdobGlnaHQgdGhlIGFwcGVhcmFuY2Ugb2YgbXkgcG9yZXMgYW5kIHNraW4gaW1wZXJmZWN0aW9ucy4KSW4gZmFjdCBpZiB5b3VyZSBub3QgYWdhaW5zdCBhIG5pY2UgbmlnaHR0aW1lIHdhbGsgeW91IGNvdWxkIHdhbGsgZnJvbSB0aGUgY29leCBhbGwgdGhlIHdheSB0byB0aGUgYmFucG8gYnJpZGdlIGFsb25nIHRoZSBoYW4gcml2ZXIgKG1pZ2h0IHRha2UgeW91IG1vcmUgdGhhbiBhbiBob3VyKS4gCjQpIFlvdSBhbHNvIG5lZWQgdG8gbG9vayBhdCB3aGVyZSBlbHNlIGNhbiB5b3Ugc2F2ZS9tYWtlIG1vbmV5LiBQZXJoYXBzIHRoZXJlIGlzIGEgd2F5IHRvIGxvb2sgYXQgd2hlcmUgeW91J3JlIHNwZW5kaW5nIHlvdXIgbW9uZXkuIEkgaGF0ZSBzZWxmIGhlbHAgYm9va3MgYnV0IEkgYW0gYSBiaWcgZmFuIG9mIFJpY2ggRGFkIFBvb3IgRGFkIGJvb2suIApJdHMgbm90IGxpa2UgZ2FtaW5nICAgY3VsdHVyZSwgZXNwZWNpYWxseSBtdXNpYyAgIHJlYWxseSBkb2VzIGluZmx1ZW5jZSBwZW9wbGUgYW5kIHdoYXQgdGhleSBkby4KWW91IGJlIGxvb2tpbmcgZm9yIGFjY291bnRzIHRoZSBmdXR1cmUgYm90aCBpbiB0aGluZ3MgbGlrZSBjb25uZWN0aW5nIHRvIHdlaXJkIHN0cmFpZ2h0cywgYnV0IGFsc28gdGhlIHNhbWUgYWNjb3VudHMgZm9sZGluZyBBSyBvciBzb21ldGhpbmcgcHJlZmxvcCB0byBzZXRzIHRoYXQgd291bGQgZmxvcC4gSWYgaXRzIGp1c3QgYWxsIGluZGl2aWR1YWwgaGFuZHMsIGl0IHdvdWxkbiB0ZWxsIHlvdSBpZiB0aGUgYmVoYXZpb3VyIGlzIHdlaXJkLiBZb3UgYmUgYWJsZSB0byBhbmFseXNpcyBvZiBpZiB0aGUgZGVhbGluZyBpcyBmYWlyIG9yIG5vdCwgYnV0IHRoYXQgaXQuLiAKUGVwcGVyIGRvZXNuIGtub3cgdGhlIHJlYWwgYW5zd2VyIGJ1dCB3ZSBoYXZlIHRvIGtlZXAgaW4gdGhlIGZyb250IG9mIG91ciBtaW5kIHRoZSBTZWNvbmQgQW1lbmRtZW50IGFzIHdlbGwgYXMgd2hhdCBjYW4gYmUgZG9uZSB3aXRoIHRoZSB1c2Ugb2YgZ3VucyB0byBraWxsLi4gClRydW1wIHNwb2tlIHRvIHRob3NlIHBlb3BsZSB3aXRoIGEgcG9wdWxpc3QgbWVzc2FnZS4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiAKTW9yZW92ZXIgaG93IGNhbiB0aGUgV2VzdCByYWxseSB0aGUgd29ybGQgdG8gZGVmZW5kIFVrcmFpbmUgd2hlbiB0aGUgYmFzaWMgZmFjdHMgYXJlIGluIHF1ZXN0aW9uPyBJdCBjYW4ndC4gV2FyIGlzIGJlY29taW5nIGVwaXN0ZW1vbG9naWNhbDogdGVsbGluZyB3aGF0IGlzIHJlYWwgZnJvbSBmYWtlIHdpbGwgZGVjaWRlIHdpbm5lcnMgYW5kIGxvc2Vycy4uIApJbiBtb3N0IG9mIHRoZSBwb2xpY3kgbWFrZXJzIHZpZXdwb2ludHMsIHlvdSBhY3R1YWxseSB3cm9uZyBpbiB5b3VyIGZpbmFsIGFzc2Vzc21lbnQuIApJIHdhcyBvbiBhbnRpZGVwcmVzc2FudHMgdGhyb3VnaCBteSBlbnRpcmUgcHJlZ25hbmN5IHdpdGggaGVyIGFuZCB3aGlsZSBicmVhc3RmZWVkaW5nLiAKV2hlbiBJIHdhcyB0YWxraW5nIHRvIGhlciBhYm91dCBob3cgc2hlIHJlc2VhcmNoZWQgYWJvdXQgdmFjY2luZXMgc2hlIGFkbWl0dGVkIHNoZSBuZXZlciBkaWQgYW55IHJlc2VhcmNoIGJ1dCBoZXIgZnJpZW5kcyBwcmVzc3VyZWQgaGVyIGludG8gbm90IGdpdmluZyBoZXIgc29uIHZhY2NpbmVzLiBJIHRoaW5rIGJ5IHRoZSBlbmQgb2YgdGhlIGNvbnZlcnNhdGlvbiBhbmQgdGltZSBJIHRvb2sgaW50byBoZWxwaW5nIGhlciBmaW5kIHJlbGlhYmxlIHNvdXJjZSBtYXRlcmlhbCBzaGUgc3RhcnRlZCBjb21pbmcgdG8gaGVyIG93biBjb25jbHVzaW9uLiBJIGRvbiBrbm93IGlmIHNoZSBkZWNpZGVkIHRvIHN0YXJ0IHZhY2NpbmF0aW9uIGJ1dCBJIGF0IGxlYXN0IGtub3cgc2hlIHRyaWVkIGFuZCBub3cgd29uIGNsYWltIGtpZHMgZ2V0IGF1dGlzbS9vdGhlciBkaXNvcmRlcnMgZnJvbSB2YWNjaW5lcy4gQW5kIGhlciBzb25zIGdldHRpbmcgYmV0dGVyIHdoaWNoIGluIG15IG9waW5pb24gc2hlIHNlZW1lZCB0cmF1bWF0aXplZCBlbm91Z2ggdG8gc3RhcnQgdmFjY2luYXRpbmcuClRoZXJlIGFyZSBtYW55IHJlYXNvbnMgaW5jbHVkZSBvdXIgbGFjayBvZiBnZW5ldGljIGFkYXB0YXRpb24gdG8gZ3Jhc3NlcywgYW5kIHBhcnRpY3VsYXJseSBnbHV0ZW4sIGluIG91ciBkaWV0LiAKUGVvcGxlIG9uIGF2ZXJhZ2UgbWFrZSBtb3JlIG1pc3Rha2VzIGluIGRlZXBzdGFjayBwb2tlciwgc28geW91J2QgbGlrZSB0byBzZWUgc3RhY2tzIG9mIDE1MCAyMDArLiBIb3dldmVyLCBsb3RzIG9mIGZpc2ggdGVuZCB0byBidXkgaW4gZm9yIDYwIDEwMCBCQnMsIHNvIGl0IGNhbiBiZSBkaWZmaWN1bHQgdG8gcGljayBhIHRhYmxlIGJhc2VkIG9uIG1vbmV5IGFsb25lLi4gClRoZSBtYWpvciBkaWZmZXJlbmNlIGJldHdlZW4gcGxheWluZyBGcmVlIE9ubGluZSBQb2tlciBhbmQgcGxheWluZyBhdCBhIHJlYWwgT25saW5lIENhc2lubywgaXMgdGhhdCB3aXRoIHRoZSBmcmVlIG9wdGlvbiB0aGVyZSBpcyBubyByZWFsIG1vbmV5LiBUaGF0J3Mgd2h5IGl0J3MgZ3JlYXQgdG8gc3RhcnQgdGhpcyB3YXkgc28geW91IGNhbiBwcmFjdGljZSBhbmQgZmVlbCBjb25maWRlbnQgYmVmb3JlIGpvaW5pbmcgYSByZWFsIE9ubGluZSBDYXNpbm8uIApTbyBtdWNoIG9mIGhvdyB3ZSB0aGluayBpcyByb290ZWQgaW4gb3VyIGxhbmd1YWdlLCBpbiBvdXIgaWRlYSBvZiBmb3JtIGFuZCBzeW50YXgsIHRoYXQgdGhpbmtpbmcgb3V0c2lkZSBvZiB0aGVzZSBhbG1vc3QgbGVhdmVzIHVzIHdpdGggbm8gdG9vbHMgdG8gc2hhcmUgb3VyIG9ic2VydmF0aW9ucy4gClR1bGFsaXAsIE11Y2tsZXNob290IGFuZCBGb3J0dW5lIFBva2VyLiBUdWxhbGlwIGFuZCBGb3J0dW5lIGhhdmUgMS8zLiAKSW1wbHlpbmcgdGhhdCBtZW50YWxseSBzaWNrIGNyaW1pbmFscyBhcmUgdGhlIHN0YXR1cyBxdW8gZm9yIGd1biBvd25lcnMgaXMgdGhlIGJpZ2dlc3QgZm9ybSBvZiB0ZXh0Ym9vayBzdGVyZW90eXBpbmcuIApPbmNlIHRoYXQgaXMgcmVhY2hlZCBZb3UgY2FuIGNhc2hvdXQgYWxsIHRoZSBtb25leSBZb3UgbWFkZSBmcm9tIFlvdXIgTm8gRGVwb3NpdCBQb2tlciBCb251cyAuIApJbiAyMDA1LCA5MyBwZXIgY2VudCBvZiBTaW5nYXBvcmVhbnMgb3duZWQgaG9tZXMsIG9mIHdoaWNoIDg4IHBlciBjZW50IHdlcmUgYWZmb3JkYWJsZSBwdWJsaWMgaG91c2luZyBmbGF0cy4gVGhpcyBoaWdoIHJhdGUgb2YgaG9tZSBvd25lcnNoaXAsIGNvdXBsZWQgd2l0aCBhY2N1bXVsYXRlZCBDUEYgc2F2aW5ncywgaGFzIG1hZGUgU2luZ2Fwb3JlYW5zIHN1YnN0YW50aWFsIHN0YWtlaG9sZGVycywgd2hpY2ggZW5hYmxlZCB0aGUgUGVvcGxlIEFjdGlvbiBQYXJ0eSB0byBjb25zb2xpZGF0ZSBpdHMgcG93ZXIgYmFzZS4gCkplIGNvbnN0YXRlIGxlIGNoYW5nZW1lbnQgZGUgcGVyc29ubmFsaXQgZGVwdWlzIGxvbmd0ZW1wcy4gVm91cyB0ZXMsICBtb24gaHVtYmxlIGF2aXMsIHRvdXQgIGZhaXQgZGFucyBsZSBqdXN0ZSAgc29uIHN1amV0IGV0IGplIHZvdXMgcmVtZXJjaWUgZGUgZG9ubmVyIHZvdHJlIHRtb2lnbmFnZSAgc29uIGVuZHJvaXQsIGNlIHF1ZSBqZSBmYWlzIGdhbGVtZW50ICBjaGFxdWUgZm9pcyBxdWUgamUgbGUgcGV1eC5RdWFuZCBqZSBwYXJsYWlzIGQndW4gcmVjeWNsYWdlIGQnYWlycyBjb25udXMuIApJIHRoaW5rIGFib3V0IHRoZSBwb3dlciBvZiBsYW5ndWFnZSBvbiBwZW9wbGUgYmVoYXZpb3JzIHRvd2FyZHMgb25lIGFub3RoZXIgYW5kIHBlcmNlcHRpb25zLiBXaGVuIHdlIHN0YXJ0IHRvIGRpc21pc3MgdGhlIGV4Y2VwdGlvbiBJIGJlbGlldmUgd2UgYWxzbyBkaXNtaXNzIGhvcGUgZm9yIHNvbWUgcGVvcGxlLiAKSWYgeW91IHN0aWxsIGRvbiBxdWl0LCB0aGVuIHlvdSBwcm92ZWQgdGhleSB3ZXJlIGluIGZhY3QgcGF5aW5nIHlvdSBlbm91Z2ggbW9uZXkuIApXaGlsZSBiZXR0aW5nLCBhIHBsYXllciBnZXQga25vd3Mgd2hvIHRoZSBvcHBvbmVudCBpcyBhbmQgdGhlaXIgcHJvd2Vzcy4gVGhlIHN0b2NrIG1hcmtldHMgb24gdGhlIG90aGVyIHNpZGUgYXJlIG11Y2ggbW9yZSBjb21wbGV4IHdpdGggcGFydGljaXBhdGlvbiBmcm9tIG1hbnkga2luZHMgb2YgZmluYW5jaWFsIGluc3RpdHV0aW9ucywgY29ycG9yYXRlcywgYXMgd2VsbCBhcyBpbmRpdmlkdWFscy4gCkkgdGhpbmsgdGhlIHNsZWVwaW5nIGFzcGVjdCBvZiB0aGUgdHJpcCB3aWxsIGJlIHRoZSBtb3N0IGRpZmZpY3VsdC4gClRoYXQgYmVpbmcgc2FpZCwgdGhlcmUgYXJlIG1hbnkgd2F5cyBSTVRzIGhhdmUgZmlndXJlZCBvdXQgaG93IHRvIGluY29ycG9yYXRlIHN0dWZmIGludG8gdGhlIHByYWN0aWNlLiAKVGhlIHNvY2lhbCBsaWZlIGluIExlaWRlbiBmcm9tIHdoYXQgSSBleHBlcmllbmNlZCBtb3N0bHkgcmV2b2x2ZXMgYXJvdW5kIHN0dWRlbnQgYXNzb2NpYXRpb25zIHdoaWNoIGlzIHNvbWV0aGluZyB0aGF0IHlvdSBoYXZlIHRvIGVuam95LiBVdHJlY2h0IGFuZCBHcm9uaW5nZW4gYXJlIGJvdGggY2l0aWVzIHdpdGggYSBncmVhdCBuaWdodGxpZmUgYW5kIGEgd2hvbGUgbG90IG9mIHRoaW5ncyB0byBkbyBmb3Igc3R1ZGVudHMuIApUZXN0aW5nIGl0IG91dCBiZWZvcmUgaGF2aW5nIHRvIGxpdmUgaW4gYSBqdW1wc3VpdD8nIG9uZSBwZXJzb24gdHdlZXRlZC5GYW4gY2x1YjogRGVzcGl0ZSB0aGUgam9rZXMsIG5vdCBldmVyeW9uZSB3YXMgYWdhaW5zdCB0aGUgbG9vay4gU29tZSBmYW5zIGdlbnVpbmVseSBtZWFudCBpdCB3aGVuIHRoZSB0d2VldGVkIHRoYXQgb3JhbmdlIGxvb2tzIGdvb2Qgb24gdGhlIGZpcnN0IGRhdWdodGVyJ1RyeWluZyBvdXQgb3JhbmdlIEkgc2VlLiBOb3QgeW91ciBjb2xvciwgYnV0IG9oIHdlbGwsIHlvdSdsbCBnZXQgdXNlZCB0byBpdCBpbiBwcmlzb24sJyBhbm90aGVyIGFkZGVkLkFuZCBvbmUgVHdpdHRlciB1c2VyIHdlbnQgYXMgZmFyIGFzIFBob3Rvc2hvcHBpbmcgSXZhbmthJ3MgZmFjZSBvbnRvIGEgcGljdHVyZSBvZiBhbiBpbm1hdGUgaW4gYW4gb3JhbmdlIGp1bXBzdWl0LCB3cml0aW5nOiAnWW91IGxvb2sgYmVhdXRpZnVsIGluIG9yYW5nZSEnRWFybGllciB0aGlzIG1vbnRoLCBJdmFua2Egc2FpZCBzaGUnc25vdCB3b3JyaWVkIFNwZWNpYWwgQ291bnNlbCBSb2JlcnQgTXVlbGxlcidzIGJyb2FkIFJ1c3NpYSBwcm9iZSB3aWxsIGVuc25hcmUgaGVyIG9yIGhlciBodXNiYW5kIEphcmVkIEt1c2huZXIuRHVyaW5nIGEgc2l0IGRvd24gaW50ZXJ2aWV3IHdpdGggQUJDJ3MgJ0dvb2QgTW9ybmluZyBBbWVyaWNhLCcgc2hlIGNsYWltZWQgc2hla25ldyAnbGl0ZXJhbGx5IGFsbW9zdCBub3RoaW5nJyBhYm91dCBhIHByb3Bvc2FsIHRvIGJ1aWxkIGEgc2t5c2NyYXBlciBpbiBNb3Njb3cgd2l0aCBoZWxwIGZyb20gdGhlIFJ1c3NpYW4gZ292ZXJubWVudCBkdXJpbmcgdGhlIDIwMTYgZWxlY3Rpb24uVGhlIGJ1c2luZXNzd29tYW4gYWRkZWQgdGhhdCBpdCB3b3VsZG4ndCBiZSB1bnVzdWFsIGZvciBhIGhvdGVsIGNoYWluIHRvIGhhdmUgcHJvamVjdHMgaW4gUnVzc2lhLidXZSdyZSBub3QgdGFsa2luZyBhYm91dCBJcmFuLiAKT3VpIGlsIG1hbmdlIGRlIGxhIHZpYW5kZSwoLilBaCBib24gdm91cyBjb25maXJtZXosIGJlbiBvdWkgYydlc3QgdmlkZW50IGNhciBzYW5zIHVuIGFwcG9ydCBkZSBwcm90aW5lcyBpbCBuZSBzZSBzZXJhaXQgcGFzIGFycm9uZGkgYWxvcnMgcG91cnF1b2kgdG91am91cnMgbWV0dHJlIGVuIGF2YW50IGxlcyBqdXMgP091aSBzb24gZGlzY291cnMgdm9sdWUsIGplIG5lIGNvbm5haXMgcGFzIHNhIHZlcnNpb24gY29uY2VybmFudCBsZXMgMjAwMDAgZXVyb3MgZXQgdG91dCBkb25jIGplIG5lIHBldXggcmllbiBkaXJlIChldCBlbmNvcmUgdm91cyBhdmV6IG91YmxpIGxlcyB0cmFtcG9saW5lcyBwb3VyIHNlY291ZXIgbGEgbHltcGhlLCBsZXMgZGlzdGlsbGF0ZXVycyBkJ2VhdSAgIGonZW4gYWkgYWNoZXQgdW4sIG5lIHNlcmFpdCBjZSBxdWUgcG91ciBuZSBwYXMgYm9pcmUgZGVzIG1kaWNhbWVudHMsIHNvbiBub3V2ZWF1IHBvdGUgbGVjdHJpY2llbiBkZSBsJ2Fzc29jICJsZXMgcGllZHMgIGxhIHRlcnJlIiBxdWkgdmVuZCBkZXMgZ2FkZ2V0cyB1bmUgZm9ydHVuZSAoY2VjaSBkaXQgbGUgcGFyYWRpZ21lIHNlbWJsZSBib24sIHRlc3QgcGFyIG1hIHN1ciBjb250cmUgc2VzIG1hdXggZGUgbnVxdWUvZG9zKSkuIFZvdXMgYXZleiBlc3NheSBkZSBsZSBjb250YWN0ZXIgcG91ciBsdWkgZmFpcmUgcGFydCBkZSB2b3MgY3JpdGlxdWVzLCB2b2lyIHMnaWwgbGVzIHByZW5kIGVuIGNvbXB0ZSBwb3VyIHNlcyBwcm9jaGFpbmVzIHZpZG9zID8gTGUgYnV0LCBjJ2VzdCBkZSBsdWkgbWV0dHJlIGRlcyBidG9ucyBkYW5zIGxlcyByb3Vlcywgb3UgZCdhbWxpb3JlciBsZXMgaGFiaXR1ZGVzIHBybyBzYW50IGRlcyBnZW5zIHBhciBuJ2ltcG9ydGUgcXVlbCBtb3llbiA/IEFwcnMgamUgY29uc3RhdGUgcXUnZW4gZWZmZXQgaWwgbid5IGEgcmllbiBkZSBuZXVmIChwb3VyIG5vdXMgYSBsJ2VzdCwgbWFpcyBwb3VyIHZvdXMgcXVpIGF2ZXogbGUgcmVjdWwsIG5vbikuSmUgbidhaSBwYXMgIGxlIGNvbnRhY3RlciBldCBzJ2lsIGEgcXVlbHF1ZSBjaG9zZSAgZGlyZSwgbGUgZHJvaXQgZGUgcnBvbnNlIGV4aXN0ZSBtYWlzICBtb24gYXZpcyBsJ3V0aWxpc2VyIG5lIHNlcmFpdCBwYXMgcHJvZHVjdGlmIGVuIHNhIGZhdmV1ci5DZXJ0ZXMgeSdhIGRlcyBtb250YWduZXMgZGUgY29ubmFpc3NhbmNlICBhdm9pciBlbiBtZGVjaW5lLCBtYWlzIGxhIHF1ZXN0aW9uIHF1J29uIHNlIHBvc2UgdG91cyBjJ2VzdCBxdW9pIHNlIHBycGFyZXIgY29tbWUgcmVwYXMgcG91ciB0cmUgZW4gYm9ubmUgc2FudCwgY29tbWVudCBhbWxpb3JlciBzb24gZW52aXJvbm5lbWVudCBldGMuIERhbnMgbGUgbW1lIGJ1dC4gCkkgZGlkbiBldmVuIHRyeSB0byBwYXJyeSB0aGUgamFiLCBJIGp1c3QgYmxvY2tlZCBpdCB3aXRoIG15IHJpZ2h0IGFzIGl0IHdhcyByZXN0aW5nIG9uIG15IGZvcmVoZWFkLiBBZnRlciBhIHdoaWxlIG9mIHRoYXQgSSBzdGFydGVkIHRvIGhhdmUgYSBiZXR0ZXIgc2Vuc2Ugb2YgZGlzdGFuY2UgYW5kIGNvdWxkIHNlZSB0aGUgcHVuY2hlcyBjb21pbmcgbW9yZSBlYXNpbHkuIApTb2NpYWxseSBjb25zY2lvdXMgbGliZXJhbHMgbWF5IHdyaW5rbGUgdGhlaXIgbm9zZXMgYXQgdGhlIHZlcnkgaWRlYSBvZiBtb3ZpbmcgdG8gVGVubmVzc2VlICAgd2hlcmUgRGF2eSBDcm9ja2V0dCB3YXMgYm9ybiBvbiBhIG1vdW50YWludG9wICAgYnV0IEJpZyBBcHBsZSBkZW5pemVucyBwYXkgdGhlIGhpZ2hlc3QgdGF4ZXMgaW4gdGhlIG5hdGlvbiBhbmQgZmFjZSBldmVyIHJpc2luZyBjb3N0cy4gU28sIHRob3NlIHdobyB3b3JyeSBhYm91dCB0aGVpciBjb21wYW55J3MgYm90dG9tIGxpbmUgZ2V0IGl0LiAiR292LiBDdW9tbyBhbmQgTWF5b3IgZGUgQmxhc2lvIGJldHRlciB3YWtlIHVwLCIgc2FpZCBvbmUgQ0VPIG9uIGNvbmRpdGlvbiBvZiBhbm9ueW1pdHkuCkhvdyBQYWludGxlc3MgRGVudCBSZW1vdmFsIFdvcmtzCklmIHlvdSBhcmUgdGhlaXIgbG93ZXN0IHRpZXIsIHVuZm9ydHVuYXRlbHkgdGhleSBtYWRlIHlvdXIgJDQwMCB3b3J0aCBvZiBQb2tlciBQb2ludHMgYmVjb21lIHdvcnRoIG9ubHkgJDE2MC4gSSBzdWdnZXN0IHlvdSBncmluZCB1bnRpbCBhdCBsZWFzdCBQcmVzdGlnZSBsZXZlbCAxLCB3aGljaCB3aWxsIG1ha2UgeW91ciBwb2ludHMgd29ydGggJDI0MCBpbnN0ZWFkIChhbmQgeW91IGdldCBhIGJpdCBtb3JlIG9uIHRoZSB3YXkgb2J2aW91c2x5KS4gSXQgdGFrZSAkMSw2NjYuNjcgVVNEIGluIHJha2UgdG8gZ2V0IHRoZXJlIHRob3VnaC4gCkkgYXNrZWQgaGltIHdoYXQgaGUgd2lsbCBkbyBub3cgYWZ0ZXIgaGUgZmluaXNoZXMgdGhlIG1lcmdlciBpbnRlZ3JhdGlvbiBwcm9jZXNzLCB3aGljaCBpcyBleHBlY3RlZCB0byBydW4gZm9yIDEyIG1vbnRocy4gV2hpbGUgQnJvb2tzIHNheXMgaGUgaGFzIG5vIHBsYW5zIHRvIGJ1aWxkIGFub3RoZXIgYnVzaW5lc3MsIGhlIGlzbiBleGFjdGx5IHJldGlyaW5nLgpJbiBwcmV2aW91cyB5ZWFycywgb3ZlciA0MiwwMDAgcG91bmRzIG9mIGZvb2QgZG9uYXRpb25zIGhhdmUgYmVlbiBjb2xsZWN0ZWQgdG8gYmVuZWZpdCBpbmRpdmlkdWFscyBhbmQgZmFtaWxpZXMgaW4gbmVlZC4gCkluIGFkZGl0aW9uLCBhIHRvcGljYWwgaGVyYiBmb3JtdWxhIGlzIGNvbWJpbmVkIHdpdGggb2lsIGFuZCBtYXNzYWdlZCBpbnRvIHRoZSBpbmp1cmVkIGFyZWEgdG8gaW5jcmVhc2UgY2lyY3VsYXRpb24gYW5kIGhlYWxpbmcgdG8gdGhlIGFyZWEsIGF1Z21lbnRpbmcgdGhlIHN5c3RlbWljIGVmZmVjdCBvZiB0aGUgaW50ZXJuYWwgZm9ybXVsYS4gVGhpcyBzb3J0IG9mIHRocmVlIHByb25nZWQgYXBwcm9hY2ggZW5zdXJlcyBhIG11Y2ggZmFzdGVyIHJlY292ZXJ5IHRpbWUsIGFuZCBpdCBpcyBvbmUgb2YgdGhlIHJlYXNvbnMgdGhhdCB0dWkgbmEgcHJhY3RpdGlvbmVycyBhcmUgaGVsZCBpbiBzdWNoIGhpZ2ggcmVnYXJkIGluIENoaW5hLgpBbmQgb25jZSB0aGlzIGlzIGRvbmUsIHlvdSB3aWxsIHRoZW4gYmUgYWJsZSB0byBwbGF5IGEgcGFzc2FibGUgZ2FtZSBvZiBwb2tlci4gClNpbmNlIHlvdSBiZSByZWxhdGl2ZWx5IG5lYXIgb24geW91ciBmaXJzdCBkYXksIHlvdSBzaG91bGQgZ28gdG8gR3dhbmdqYW5nIE1hcmtldCBmb3IgbG90cyBvZiBLb3JlYW4gc3RyZWV0IGZvb2QgdmVuZG9ycy4gSXQgYXQgSm9uZ25vIDUgZ2Egc3RhdGlvbiBvbiBMaW5lIDEuIFlvdSBjb3VsZCBlYXNpbHkgd2FsayB0aGVyZSBmcm9tIEluc2Fkb25nLiAKWW91IGRvbiBnZXQgZnVuY3Rpb25hbGl0eSBmcm9tIHlvdXIgb2xkIGNsYXNzIHRpbGwgeW91IHBhc3MgdGhlIHhwIHlvdSBoYWQgaW4gdGhlIGZpcnN0LiAKU2hlIGZyZWFrZWQgdGhlIGZ1Y2sgb3V0IGFuZCBiYWlsZWQgaGFyZC4gClJvZGVwaCBoYXMgYSBncmVhdCBkYXkgc2Nob29sLCBIaWxsZWwgQWNhZGVteSwgd2hpY2ggSSdtIGhhcHB5IG15IGRhdWdodGVyIGdldHMgdG8gYmUgYSBzdHVkZW50IGF0IGFuZCBteSB3aWZlIGdldHMgdG8gdGVhY2ggYXQuIApQcmljZXkgaXRlbXMgdGhhdCBJIHNob3VsZCBrZWVwIHRoZSByZWNpZXB0IGFyb3VuZCBmb3IgYXdoaWxlLiBBbmQgdGhlIG9jY2FzaW9uYWwgcmVhbGx5IHByaWNleSBpdGVtIHRoYXQgZ2V0cyBzY2FubmVkIGFuZCBzYXZlZC4gCkhlciB5b3VuZ2VyIGJyb3RoZXIgTW9yZ2FuIHBsYXllZCBydWdieSBhbmQsIGxpa2UgTGFuZSwgYmVsb25nZWQgdG8gdGhlIHN1cmYgY2x1Yi4gQWNjb3JkaW5nIHRvIFR5YWNrLCB3aG8gd2FzIHRoZW4gaW4gdGhlIG5hdGlvbmFsIGp1bmlvciBrYXlha2luZyB0ZWFtLCAic2hlIHdhcyBsaWtlIHRoZSBnb2xkZW4gZ2lybCBkb3duIHRoZXJlLiBCbG9uZGUgaGFpciBhbmQgdGFubmVkLiAKIkhlIGlzIGFsbG93ZWQgYW55IHR5cGUgb2YgZm9vZCB0aGF0IGhlIHdhbnRzLiBIZSBoYXMgYSBiZWQgaW4gdGhlcmUsIGhlIGhhcyBhIHNob3dlciBhbmQgYSBiYXRodHViLiBIZSBoYXMgcHJldHR5IGxhdmlzaCB0b2lsZXRyaWVzIGxpa2UgRXBzb20gc2FsdHMsIHN1Z2FyIHNjcnVicywgdGhhdCBraW5kIG9mIHN0dWZmLiIKQWxzbyB0aGV5J3JlIHRyYWluZWQsIHRoZXkgaGF2ZSBnb29kIGJzIG1ldGVycyBidXQgYWxzbyBhY3R1YWwgaGVscCB0byBnZXQgdGhyb3VnaCBjb21wbGljYXRlZCBlbW90aW9ucyBhbmQgcHJvYmxlbXMuIEkgd2FzIHJlY2VudGx5IGRpYWdub3NlZCB3aXRoIE9DRCwgc28gb24gdG9wIG9mIHRyeWluZyB0byBnZXQgYSBncmlwIG9uIHRoYXQgSSB3YXMgYWxzbyBoYXZpbmcgYSBoYXJkIHRpbWUgZXZlbiB3cmFwcGluZyBteSBoZWFkIGFyb3VuZCB0aGF0IGRpYWdub3Npcy4gCkxFIGhhcyBkYW5jZWQgYXJvdW5kIGl0LCBhbmQgSSd2ZSBzZWVuIHNvIG1hbnkgcGVvcGxlIHBvc3QgYW4gYXJ0aWNsZSBmcm9tIGEgZmV3IGRheXMgYWZ0ZXIgdGhlIG11cmRlcnMgdGhhdCBzYXlzIHRoZXkgY29sbGVjdGVkIGRuYSBmcm9tIHRoZSBzY2VuZS4gSSBkb24ndCB0aGluayB0aGV5IHJlYWxpemUgdGhhdCBqdXN0IG1lYW5zIHRoZXkgdG9vayBpdGVtcyBpbiBmb3IgdGVzdGluZywgbm90IHRoYXQgdGhleSB3ZXJlIGFibGUgdG8gY29tZSB1cCB3aXRoIGEgcHJvZmlsZS4KVGhlbiBoZSBraWxsZWQgaGltc2VsZi4gClByb2plY3QgcmVwcmVzZW50cyBhIHBhcnRuZXJzaGlwIGJldHdlZW4gaW52ZXN0aWdhdG9ycyBhdCB0aHJlZSBpbnN0aXR1dGlvbnM6IEthdGUgQ2FyZXksIHByb2Zlc3NvciBvZiBiZWhhdmlvcmFsIGFuZCBzb2NpYWwgc2NpZW5jZSBhdCBCcm93biBVbml2ZXJzaXR5OyBBbmdlbG8gRGlCZWxsbywgYXNzaXN0YW50IHByb2Zlc3NvciBvZiBwc3ljaG9sb2d5IGF0IENpdHkgVW5pdmVyc2l0eSBvZiBOZXcgWW9yayAgIEJyb29rbHluIENvbGxlZ2UsIGFuZCBOZWlnaGJvcnMgYXQgVUguIAoxOjAyIEkgb3BlbiB0aGUgbGlkIG9uIHRoZSBiYWNrIG9mIHRoZSBjb2ZmZWUgbWFrZXIKTiA2NikuIApPdmVyIHRoZSBsYXN0IGZpdmUgdG8gdGVuIHllYXJzLCBhIHdob2xlIG5ldyBicmVlZCBoYXMgcmlzZW4gdG8gcHJvbWluZW5jZSB3aXRoaW4gdGhlIHBva2VyIGNvbW11bml0eS4gClRoZSBwYXRpZW50IHByZXNlbnRzIHdpdGggaW5jcmVhc2VkIHNlbnNpdGl2aXR5IHRvIHNpdHRpbmcsIGF3a3dhcmQgcG9zdHVyZXMsIG9yIGluY3JlYXNlZCBzZW5zaXRpdml0eSB0byBjZXJ0YWluIG1vdmVtZW50cyBvciB1bmV4cGVjdGVkIG1vdmVtZW50cy4KSSBwbGF5ZWQgb3JpIHRoZSBzcGlyaXQgYW5kIHRoZSBtdXNpYyBhbmQgdmlzdWFsbHkgd2VyZSBmYXIgbW9yZSBwbGVhc2luZwpJbiB0aGUgcGVyaW9kIDE5OTkgICAyMDA5LCB0aGUgUyA1MDAgZmVsbCBieSAwLjglIHllYXIgb24geWVhciBob3dldmVyOyBieSBjb21wYXJpc29uLCB0aGUgUyBBZnJpY2EgZ3JldyBieSBvdmVyIDIzJSIuVGhlIG1hbmFnZW1lbnQgY29uc3VsdGluZyBmaXJtLCBNY0tpbnNleSwgaXMgc2ltaWxhcmx5IHVwIGJlYXQuIEl0IHJlcG9ydHMgdGhhdCBBZnJpY2FuIGNvbnN1bWVyIHNwZW5kaW5nIGhhcyByaXNlbiBmcm9tICQ4NjAgYmlsbGlvbiBpbiAyMDA4IHRvIGFsbW9zdCAkMXRyaWxsaW9uIG5vdywgYW5kIHdpbGwgcmVhY2ggJDEuNHRyaWxsaW9uIGluIDIwMjAuUHJvZi4gClRvcm9udG8gRG9taW5pb24gY2FwaXRhbCBtYXJrZXRzIHJlc3VsdHMgd2VyZSB0aGUgd29yc3QgYW1vbmcgdGhlIGJpZyBDYW5hZGlhbiBiYW5rcywgd2l0aCBhICQxNyBtaWxsaW9uIGxvc3MgaW4gdGhlIHF1YXJ0ZXIgZnJvbSBpdHMgVEQgU2VjdXJpdGllcyBidXNpbmVzcyBhcyBpbnZlc3RtZW50IGJhbmtpbmcgZmVlcyBmZWxsIGFuZCB0cmFkaW5nIHJldmVudWUgd2FzIGhhbHZlZCBmcm9tIGEgeWVhciBlYXJsaWVyLgpPdmVyIHRoZSB5ZWFycywgbWFueSB0cmFuc2xhdGlvbnMgb2YgdGhlIHdvcmQgaGF2ZSBiZWVuIHVzZWQgKCJzdHJlc3MsIiAidW5zYXRpc2ZhY3RvcmluZXNzLCIgInN1ZmZlcmluZywiIGV0Yy4pLiAKSXQgc2VlbWVkIHNvIG5pY2UgYSBjaGFuZ2UgdGhhdCBJIGRpZG4gcXVlc3Rpb24gaXQgdW50aWwgc2hlIHNwb2tlLi4gCkl0IHdhcyBhbHNvIG1hZGUgY2xlYXIgdGhhdCwgd2hpbGUgSSBoYWQgYSBRIGNsZWFyYW5jZSwgaW5mb3JtYXRpb24gd2FzIG9ubHkgc2hhcmVkIG9uIGEgdG8ga25vdyBiYXNpcy4gCllldCB5b3Uga2VlcCBtYWtpbmcgaXQgYWJvdXQgInNvbWUgb3RoZXIgZ3V5IGN1bS4iIEFuZCBub3cgeW91IGdpdmluZyBoZXIgdGhlIHNpbGVudCB0cmVhdG1lbnQuIEFuZCB0YWxraW5nIGFib3V0IGN1bW1pbmcgb24gaXQgdG8gc3BpdGUgaGVyLiAKRWVuIGJhbGxlcmluYSwgbXV6aWVraW5zdHJ1bWVudCwpIHdhcmVuLiBXZSB3YW5kZWxkZW4gZWVuIHJvbmRqZSwgb3Agem9layBuYWFyIGhlZXQgZ3JhZiB2YW4gWWVsdHNpbi4gClNhdHVyZGF5IG5pZ2h0IHByb2dyYW0gYXQgQm9zdG9uIFVuaXZlcnNpdHkgRGFuY2UgVGhlYXRlciBvZmZlcmVkIHRocmVlIHdvcmtzLCBpbnRlcnNwZXJzZWQgd2l0aCB2aWRlbyBjbGlwcyBvZiBTb2tvbG93IHRhbGtpbmcgYWJvdXQgaGVyIHByb2Nlc3MgYW5kIHBoaWxvc29waHkuIApUaGUgdGhpbmcgaXMsIEkgdHJ1c3QgdGhvc2UgZ3V5cyB3aXRoIGRlYWRseSBmb3JjZSB3YXkgbW9yZSB0aGFuIGFueSBvdGhlciBUb20sIERpY2ssIG9yIEhhcnJ5LCBiZWNhdXNlIEkga25vdyB0aGF0IHdlIHNjcmVlbiB0aGUgaGVsbCBvdXQgb2YgcGVvcGxlIHRvIG1ha2Ugc3VyZSBvbmx5IHRoZSBiZXN0LCBicmlnaHRlc3QsIGFuZCBmcmllbmRsaWVzdCB3ZXJlIGluIG91ciBncm91cC4gT3VyIGd1eXMgbmV2ZXIgaGFyYXNzZWQgcGVvcGxlLCBuZXZlciBhcnJlc3RlZCBwZW9wbGUgd2hlbiB3YXJuaW5ncyB3ZXJlIGFuIG9wdGlvbiwgYW5kIGNvdWxkIG9mdGVuIGJlIHNlZW4gaGVscGluZyBraWRzIGluIHNoaXR0eSBicm9rZW4gZG93biBjb2xsZWdlIGtpZCBjYXJzLiBJIG1lbnRpb25lZCB0aGUgd2FybmluZ3MgYmVjYXVzZSBpdCB3YXMgYSBuZWF0IHRoaW5nIGZvciB1cywgYnV0IGl0IGlzbiBsaWtlIHdlIHdlcmUgcGxhbnRpbmcgc3BpZXMgb3Igc29tZSBzaGl0IHNvIHdlIGNvdWxkIGdldCBhd2F5IHdpdGggc211Z2dsaW5nIGNva2Ugb3Igc29tZXRoaW5nLiAKQWRkaXRpb25hbGx5LCBXaGl0ZWhvdXNlIHdhbnRzIEthdmFuYXVnaCB0byBleHBsYWluIGV4YWN0bHkgaG93IG1hbnkgdGlja2V0cyBoZSBwdXJjaGFzZWQgYW5kIGF0IHdoYXQgcHJpY2UsIGFuZCB0byBsaXN0IHRoZSBuYW1lcyBvZiB0aGUgcGVvcGxlIGZvciB3aG9tIGhlIGJvdWdodCB0aGUgdGlja2V0cy4KRGVzIE1vaW5lcyBvYmxpZ2F0b3J5IHRvdXJpc3Qgc3RvcDpUb3VyIHRoZSBDYXBpdG9sLiBJdCBmcmVlLiBJdCBiZWF1dGlmdWwuCk15IG1vdGhlciBzaXRzIG9uIHRoZSB0cmFmZmlja2luZyBjb21taXNzaW9uIGJvYXJkIGhlcmUgaW4gS1kuIFdoaWxlIHRyYWZmaWNraW5nIElTIGEgcHJvYmxlbSwgdGhlIG1ham9yaXR5IG9mIHBlb3BsZSB3aG8gYXJlIHRyYWZmaWNrZWQgYXJlIGRvbmUgc28gYnkgdGhlaXIgb3duIGZhbWlseSBtZW1iZXJzIG5vdCBraWRuYXBwZWQgYW5kIGZvcmNlZCB0byBkbyBpdC4gVGhlIHdvbWVuIHRpZWQgdG8gYWN0dWFsIHRyYWZmaWNraW5nIGhlcmUgYXJlIGxvdyByaXNrLCB0b28uIFRyYWZmaWNrZXJzIGFyZSBsb29raW5nIGZvciB5b3VuZyB3b21lbiAoMTUgMjIpIHdobyBhcmUgZWl0aGVyIHJ1bmF3YXlzLCBob21lbGVzcywgZXRjLiBXb21lbiB3aG9zZSBkaXNhcHBlYXJhbmNlIHdvbiByYWlzZSBhIGJpZyBmdXNzLiBNZWRpYSBjb3ZlcmFnZSBpcyBhIHRyYWZmaWNrZXIgd29yc3QgbmlnaHRtYXJlLiBUaGV5IG11Y2ggc3RlYWx0aGllciB0aGFuIHRoZSBkZXRhaWxzIHN1cnJvdW5kaW5nIFNTIGNhc2UuIFRoZSBmYWN0IHRoYXQgc2hlIG1ldCB0aGUgbWVuIGluIGEgcHVibGljIHBsYWNlLCBmb2xsb3dlZCB0aGVtIHRvIGEgdmVoaWNsZSBwYXJrZWQgaW4gYSBwdWJsaWMgZ2FyYWdlLCB3YXMgY2F1Z2h0IG9uIHZpZGVvLCBjYWxsZWQgZnJvbSBvbmUgb2YgdGhlIGd1eSBjYXJzLCBldGMuIHdvdWxkIG1ha2UgaGVyIGFuIGF3ZnVsIHRhcmdldC4gVGhlIG1lbiBzaGUgd2FzIHdpdGggYXJlIHRvbyBpZGVudGlmaWFibGUuIEkga25ldyBCcm9va2UgcGVyc29uYWxseS4gTEUgY2hlY2tlZCBteSBvd24gZmFybSB0d2ljZSBiZWNhdXNlIG9mIHRoZSBhbW91bnQgb2YgYWNyZWFnZSB3ZSBoYXZlIGFuZCB0aGUgcHJveGltaXR5IHRvIHdoZXJlIHNoZSB3YXMgbGFzdCBzZWVuLiBTYXZhbm5haCB3YXMgb25lIG9mIG15IGh1c2JhbmQgZm9ybWVyIGNvbGxlZ2Ugc3R1ZGVudHMuIE5vIGNvbm5lY3Rpb24gdG8gQW1hbmRhLiBJIGFic29sdXRlbHkgZG8gTk9UIGJlbGlldmUgdGhlc2UgdGhyZWUgY2FzZXMgYXJlIGNvbm5lY3RlZC4KQnV0IG5vdCBpbiBhbmdlciwgYXMgYSB3YXkgb2YgaGVscGluZyB0aGUgYWR1bHRzLCB0b28sIHRoZXkgc2VlbSBkZWZpY2llbnQgaW4gdGhvc2Ugc2FtZSBza2lsbHMuSG9uZXlvYXRtZWFsMTAxICA2IHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvSSBhZ3JlZSB3aXRoIHlvdS4gCkFwcGVsbGF0ZSBqdWRnZXMgbWlnaHQgc2ltcGx5IHN1cHBvcnQgdGhlIGNvdW50eSBlbGVjdGlvbiBib2FyZC4gT3IgdGhlIHRvcCBhcHBlYWxzIGNvdXJ0IGNvdWxkIHJldmlzaXQgaXRzIHByaW9yIGRlY2lzaW9uIG9uIGNvbGxlY3RpbmcgYW5kIGNlcnRpZnlpbmcgcmVmZXJlbmR1bSBzaWduYXR1cmVzLiBJdCBhbGwgZGVwZW5kcyBvbiBob3cgYnJvYWRseSBvciBuYXJyb3dseSB0aGUgYXBwZWFscyBjb3VydCB2aWV3cyB0aGlzIGNhc2Ugd2hlbiBpdCBsYW5kcyBvbiBpdHMgZG9ja2V0IHRoaXMgc3VtbWVyLgpDaGlvcyBlbmVyZ3kgZmllbGQgaGVhbGluZyBpcyBlYXN5IGVub3VnaCBmb3Igc29tZW9uZSBqdXN0IGdldHRpbmcgc3RhcnRlZCB3aXRoIGVuZXJneSB3b3JrLCBhbmQgYXQgdGhlIHNhbWUgdGltZSBvZmZlcnMgbWFueSBuZXcgdGVjaG5pcXVlcyB0aGF0IHdpbGwgYmUgaGVscGZ1bCBldmVuIHRvIGVuZXJneSB3b3JrZXJzIHRoYXQgaGF2ZSBiZWVuIHN0dWR5aW5nIGhvbGlzdGljIGhlYWxpbmcgZm9yIHNvbWUgdGltZS4gCkhlciB3IHNob3VsZCBiZSBjaGFuZ2VkIHRvIGJ1aWxkIG9uIHRoYXQgY2MuIE1heWJlIGhhdmUgaXQgaGl0IG9uY2UgYW5kIGNhdXNlIGEga25vY2t1cCBvciBhIHNsb3cgYW5kIHRoZW4gc2hlIGdldHMgdG8gdXNlIGl0IGFnYWluIGZvciBhbiBhZGRpdGlvbmFsIGtub2NrdXAgYmVmb3JlIHRoZSBmaW5hbCB1c2UgZm9yIGFub3RoZXIga25vY2sgdXAuIApNeSBzaG9ydCBleHBsYW5hdGlvbiBvZiB0aGUgZ2FtZSB3b3VsZCBiZSwgYSBncm91cCBvZiBmcmllbmRzIGdldHRpbmcgdG9nZXRoZXIgdG8gY3JlYXRlIGEgc2hhcmVkIHN0b3J5dGVsbGluZyBleHBlcmllbmNlLiAKSSBkbyBiZWxpZXZlLCB0aG91Z2gsIHRoYXQgaWYgaXQgaXMgSG9pYmVyZyB3aG8gZ2V0cyB0aGUgam9iLCBoZSB3aWxsIGhhdmUgYW4gYWR2YW50YWdlIG9mIFRoaWJvZGVhdSBkZWZlbnNpdmUgc3lzdGVtIGFscmVhZHkgYmVpbmcgc2Vjb25kIG5hdHVyZSB0byB0aGlzIGdyb3VwIG9mIGd1eXMuIApJdCBxdWl0ZSBmYXNjaW5hdGluZyB0byBzZWUgdGhlIHByb2dyZXNzaW9uIG9mIHJlbGlnaW91cyB0aG91Z2h0IHRocm91Z2ggdGhlIGFnZXMsIGZyb20gcG9seXRoZWlzbSB0byBoZW5vdGhlaXNtIHRvIHN0cmljdCBtb25vdGhlaXNtLiAKTm93IG9uZSB3b21hbiBpcyB0YWtpbmcgZGVzcGVyYXRlIG1lYXN1cmVzIHRvIHF1aXQgZ2FtYmxpbmcsIGFza2luZyB1cyB0byBoZWxwIGV4cG9zZSBoZXIgZmF2b3JpdGUgYmFyIHdoZXJlIHNoZSBsb3N0IGl0IGFsbC4uIApOb3RoaW5nIGFjdHVhbGx5IGhhcHBlbmVkIHRvIHlvdS4gCkhlIHRoZSBvbmx5IHBsYXllciB0byB3aW4gdGhlIE1WUCBpbiBib3RoIGxlYWd1ZXMuIApZb3UgbmVlZCB0byB0YWtlIHRoaXMgaW5mbyB0byB5b3VyIGxhd3llciwgeW91IG5lZWQgdG8gY29uc2lkZXIgaGlyaW5nIGEgUEkgdG8gZGlnIGFyb3VuZCBpbiB5b3VyIHBhc3QgYW5kIHRoZSBwYXN0IG9mIGJvdGggeW91ciBwYXJlbnRzLiBDb25zaWRlciBkb2luZyBhIHNlY29uZCBETkEgdGVzdCAobGlrZSBBbmNlc3RvcnkpLCBpZiBpdCBnaXZlcyB5b3UgdGhlIHNhbWUgcmVzdWx0cyB5b3Uga25vdyBpdCB3YXMgYWxsIGdvb2QsIGlmIHlvdSBhbHNvIGZpbmQgeW91ciByZWxhdGl2ZXMgb24gdGhhdCBzaXRlIHlvdSBoYXZlIGEgZ29vZCBjaGFuY2UgdGhhdCB0aGV5IGFyZSBsb29raW5nIGZvciB5b3UuIApDYXAgZXZlbnR1YWxseSBlc2NhcGVzIHdpdGggQnVja3kgdG8gYSBTaWJlcmlhbiBIeWRyYSBiYXNlIHdoZXJlIFplbW8gcGxhbnMgdG8gYXdha2VuIHNvbWUgc3VwZXIgc29sZGllcnMuIE1lYW53aGlsZSwgSXJvbiBNYW4gd2lzZXMgdXAgYW5kIG1hbmFnZXMgdG8gaW5kZXBlbmRlbnRseSBsZWFybiB0aGUgSHlkcmEgSFEncyBsb2NhdGlvbiBmcm9tIGFuIGltcHJpc29uZWQgRmFsY29uLiAKVGhlIGpvdXJuZXkgYmVnYW4gYXMgYSB3YXkgZm9yIExpbmRsZXkgdG8gY2VsZWJyYXRlIEluZGlhbmEgMjAwIHllYXJzLCBhbmQgYWxzbyB0byB0YWtlIGFkdmFudGFnZSBvZiBoaXMgcmV0aXJlbWVudC4gCkV4ZXJjaXNlIEJhbGxzIChvciBTd2lzcyBCYWxscykgaGF2ZSBiZWVuIHVzZWQgYnkgcGh5c2ljYWwgdGhlcmFwaXN0cyBzaW5jZSB0aGUgMTk2MHMgYW5kIGhhdmUgYmVjb21lIG1vcmUgcG9wdWxhciB0aHJvdWdob3V0IHRoZSBmaXRuZXNzIGluZHVzdHJ5IG92ZXIgdGhlIGxhc3QgNSAxMCB5ZWFycy4gClNvIEkgaGFkIGhlciBtb20gY2FsbCBoZXIgZGFkIHRvIHNlZSBpZiBzaGUgd2FzIGF0IGhpcyBob3VzZS4gU2hlIHdhcy4gQWxsIG9mIHRoaXMgdG8gZmlndXJlIG91dCBzaGUgaGFkIGhlciBwaG9uZSBvbiBzaWxlbnQgYW5kIGZlbGwgYXNsZWVwIHJpZ2h0IHdoZW4gc2hlIGdvdCBiYWNrIChhbmQgc2hlIHdhcyBub3QgZGVhZCBvbiB0aGUgc2lkZSBvZiB0aGUgcm9hZCBvciBhbnl0aGluZyBlbHNlIGluc2FuZSBteSBtaW5kIGNhbWUgdXAgd2l0aCkuLiAKT3IgaXQgY291bGQgYmUgdGhhdCB0aGV5IGp1c3QgbmVlZCBhIGh1Zy4gCkluIHRoZSBlbmQgSSBzdHVtYmxlZCBhY3Jvc3MgdGhlIGFib3ZlIGFydGljbGUgbXlzZWxmIHdoaWxlIHJlc2VhcmNoaW5nIGN1bHQgcmVjcnVpdGVyIGFuZCBkb2RnZXkgY2hhcml0eSBmb3VuZGVyLCBDaHJpcyBKYW1lcy4gSWYgQnJvb21lIHdyaXRlcyBhbnkgYXJ0aWNsZXMgcHJvbW90aW5nIFVuaXZlcnNhbCBNZWRpY2luZSwgaXRzIGZyb250IGdyb3VwcyBvciBhbnlvbmUgbGlzdGVkIG9uIHRoZSBOYW1pbmcgTmFtZXMgcGFnZSwgcGxlYXNlIGNvbnRhY3QgbWUgQVNBUC4gClNlcmlvdXMgbWFya2V0aW5nLiBJIChvcmlnaW5hbGx5KSB1bmRlcmVzdGltYXRlZCB0aGUgZXh0ZW50IHRvIHdoaWNoIG1hcmtldGluZyBlZmZvcnQgaXMgYW4gYWJzb2x1dGVseSBlc3NlbnRpYWwgdG9vbCB0byBhbnkgcHJvZHVjdCBpbml0aWFsIHN1Y2Nlc3MuCkkgbWFrZSBubyBqdWRnbWVudCBhYm91dCBwZW9wbGUgY2hvb3Npbmcgbm90IHRvIGhhdmUgY2hpbGRyZW4gYW5kIG5ldmVyIGhhdmUuIApKZSByZW9pcyB1biBwYXBpZXIgZGUgbWEgYmFucXVlIHF1aSBtJ2luY2l0ZSAgYWNoZXRlciBkZXMgb2JsaWdhdGlvbnMgdmVydGVzLCBqZSBuZSB2b2lzIHBhcyBjZSBxdSdlbGxlcyBwZXV2ZW50IGF2b2lyIGRlIHZlcnQgZW4gbCdvY2N1cnJlbmNlLCBtYWlzIGlsIHMnYWdpdCBkJ2ludmVzdGlyIHRvdWpvdXJzIHBsdXMgZCdhcmdlbnQgZGFucyBjZXMgY2hvc2VzIGFsb3JzIHF1ZSBsJ29uIHNhaXQgZGogcXVlIGMnZXN0IHBsdXMgcXVlIGRpc2N1dGFibGUuIApXaXRoIDUwIFNoYWRlcyBvZiBHcmV5IGEgaGl0IGFtb25nIHNvY2NlciBtb21zIGFuZCBldmVyeSBIQk8gc2VyaWVzIHNlZW1pbmcgdG8gaGF2ZSBhIG1hbmRhdG9yeSBxdW90YSBvZiBleHBvc2VkIGJvZHkgcGFydHMsIGl0IHNpbGx5IHRoYXQgc2V4dWFsbHkgZXhwbGljaXQgdmlkZW8gZ2FtZXMgYXJlIHN0aWxsIHNvIHRhYm9vLiBTZWR1Y2UgTWUgbWlnaHQgYmUgYSB3YXkgdG8gZWFzZSB1cyBpbnRvIHRoZSBub3Rpb24gdGhhdCBzZXggaW4gZ2FtZXMgaXNuIG5lY2Vzc2FyaWx5IGhhcm1mdWwuIEJ1dCBuZXh0IHRpbWUsIGl0IHdvdWxkbiBodXJ0IGlmIGl0IHdhcyBhIGxpdHRsZSBtb3JlIGZ1biwgdG9vLi4gClRoZSBzYW5kIGlzIGV2ZXJ5dGhpbmcgZWxzZSB0aGUgc21hbGwgc3R1ZmYuIApPbmUgcGVyc29uIGNhbWUgYnkgYW5kIHNhaWQgdGhleSBjYWxsZWQgaGVyZSBhbmQgdGhlIG1hbmFnZXIgdG9sZCB0aGVtIHRoZXkgY291bGQgaGF2ZSBhIGZyZWUgQ2lubmFib24gYmVjYXVzZSB0aGVpcnMgd2FzIGRyeSBhbmQgb2xkLiAKRnVuZXJhbCBNYXNzIHdpbGwgYmUgY2VsZWJyYXRlZCBhdCBTdC4gClVudGlsIHJlY2VudGx5LCB0aGUgZWNvbm9teSBoYWQgYmVlbiBkb2luZyByZWxhdGl2ZWx5IHdlbGwgZXZlbiBpbiB0aGUgZmFjZSBvZiBoaWdoZXIgcmF0ZXMuIEl0IGdyZXcgYnkgYSBHcm91cCBvZiBTZXZlbiBiZXN0IDMgcGVyIGNlbnQgaW4gMjAxNywgYW5kIGV4cGFuZGVkIGF0IGEgaGVhbHRoeSBjbGlwIGluIHRoZSBmaXJzdCBoYWxmIG9mIGxhc3QgeWVhciBwcm9tcHRpbmcgdGhlIEJhbmsgb2YgQ2FuYWRhIHRvIHByZXNzIGFoZWFkIHdpdGggaGlnaGVyIGJvcnJvd2luZyBjb3N0cy4KQnkgcmVnaXN0ZXJpbmcgeW91ciB0cmF2ZWwgd2l0aCBTdHVkeSBPdmVyc2VhcyB5b3UgYmVjb21lIHBhcnQgb2YgYW4gaW50ZWdyYXRlZCBzdXBwb3J0IGZyYW1ld29yayB0aGF0IGFzc2lzdHMgd2l0aCBmYWN1bHR5IGFwcHJvdmFscywgZnVuZGluZyBvcHRpb25zIHN1Y2ggYXMgc2Nob2xhcnNoaXBzIGFuZCBPUyBIZWxwIGxvYW5zLCBhbmQgaW5jcmVhc2VzIHlvdXIgc2FmZXR5IG92ZXJzZWFzIGJ5IGxldHRpbmcgdGhlIFVuaXZlcnNpdHkgb2YgQWRlbGFpZGUga25vdyB3aGVyZSB5b3UgYXJlIGFuZCB3aGF0IHlvdSdyZSBkb2luZy5OZXcgQ29sb21ibyBQbGFuIFNjaG9sYXJzaGlwIFJlY2lwaWVudHNUaGUgQ29tbW9ud2VhbHRoIEdvdmVybm1lbnQgcHJvdmlkZXMgdHJhdmVsIGluc3VyYW5jZSBmb3IgcmVjaXBpZW50cyBvZiB0aGUgTmV3IENvbG9tYm8gUGxhbiBTY2hvbGFyc2hpcCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBwcm9ncmFtLiAKSmUgdm9pcyBkZXMgamV1bmVzIHF1aSBwb3VycmFpZW50IHBvc2VyIHBvdXIgZGVzIGdyYXZ1cmVzIGRlIG1vZGUgbWFpcyBxdWkgZW4gZmFpdCBkZSBwYXJ0ZW5haXJlcyByZXN0ZW50IHN1ciBsZSBjYXJyZWF1IGNhciBsZXMgZmVtbWVzIG5lIG1pc2VudCBlbiBnbnJhbCBxdWUgc3VyIGRlcyBtZWNzIGF5YW50IGR1IHJwb25kYW50IG1hdHJpZWxsZW1lbnQuIFVuZSBtYWpvcml0IGRlIGZlbW1lcyBkZXZpZW5uZW50IGFtYml0aWV1c2VzIGV0IGFncmVzc2l2ZXMgZXQgbGVzIGhvbW1lcyBuZSBzYXZlbnQgcGx1cyBxdWVsIHJsZSBqb3Vlci5DJ2VzdCAgbW9uIGF2aXMgZHUgY3QgZGUgY2UgY2hhbWJvdWxlbWVudCBxdSdpbCBmYXVkcmFpdCBjaGVyY2hlciBjYXIgc2FucyBsaWJpZG8gZW4gYm9uIHRhdCwgbGUgNW1lIG1lbWJyZSB5IHBldXQgcGFzIHZyYWltZW50IHJlbXBsaXIgc29uIG9mZmljZS4gClNhbnRveW8gTWFjZWRvIHBsYXRlcyB0aGUgbGFzdCBvZiB0aGUgZGlzaGVzIGFuZCBzYXVjZXMgYW5kIGl0IG91cnMgdG8gZW5qb3kgd2l0aCBhIHZpZXcgb2YgdGhlIHR1cnF1b2lzZSBDYXJpYmJlYW4gd2F0ZXJzIGdsaW50aW5nIGpld2VsIGxpa2UgYW5kIHRocm93aW5nIHVzIGJyZWV6eSBraXNzZXMuIFdlIGVhdCB3aXRoIHJlbGlzaCBhbmQgZ3JhdGl0dWRlLCBmZWFzdGluZyBvbiBmb29kcyBjYXVnaHQsIHBpY2tlZCBhbmQgbWFkZSBmcmVzaCB0aGF0IGRheSBhbmQgeWV0IGlzIHRob3VzYW5kcyBvZiB5ZWFycyBvbGQuCkFkZGl0aW9uYWxseSwgd2UgdXN1YWxseSByZW1vdmUgcG9zdHMgdGhhdCBoYXZlIGV4dHJlbWVseSBvdmVydXNlZCBwaHJhc2VzIGluIGl0ICgiRGVzdHJveWVyIG9mIFdvcmxkcywgZXRjKS4gSWYgeW91ciB0aXRsZSBkb2VzIG5vdCBtZWV0IHRoaXMgcnVsZSB3ZSBjYW4gaGVscCBzdWdnZXN0IGEgbmV3IG9uZS4uIApFbmRlZCB1cCBpbiB0aGUgRVIsIGFuZCB0cmllZCB0byB0cmVhdCBpdCB3aXRoIGhlYXZ5IGRvc2VzIG9mIElWIGFudGliaW90aWNzIGFuZCB0aGVuIGEgc3VyZ2VyeSBhZnRlciB0aGF0IGZhaWxlZCB0byBkaXNpbmZlY3QgaXQuIEhvcnJpZmljYWxseSwgdGhhdCBkaWRuIHdvcmsgZWl0aGVyIGFuZCBJIHNwZW50IG1vbnRocyBvbiBhIHBvcnRhYmxlIHdvdW5kIHZhY3V1bSBhbmQgY29udGludW91cyBJViBkcmlwIHRvIGZpZ2h0IGl0LiAKQ2xldmVsYW5kIFZBIGhvc3BpdGFsIGpvaW5pbmcgbmF0aW9uYWwgcGlsb3QgcHJvZ3JhbSB0byByZWR1Y2UgbWVkaWNhbCBlcnJvcnMgQ2xldmVsYW5kIFZBIGhvc3BpdGFsIGpvaW5pbmcgbmF0aW9uYWwgcGlsb3QgcHJvZ3JhbSB0byByZWR1Y2UgbWVkaWNhbCBlcnJvcnMgVGhlIExvdWlzIFN0b2tlcyBDbGV2ZWxhbmQgVkEgTWVkaWNhbCBDZW50ZXIgaXMgYW1vbmcgMTggbWVkaWNhbCBjZW50ZXJzIHNlbGVjdGVkIHRvIGxlYWQgYSBuZXcgaW5pdGlhdGl2ZSBmb3IgdHJhbnNmb3JtaW5nIFZBIGhlYWx0aCBjZW50ZXJzIGFjcm9zcyB0aGUgY291bnRyeSBpbnRvIGEgaGlnaCByZWxpYWJpbGl0eSBvcmdhbml6YXRpb25zIChIUk8pLCBpdCB3YXMgYW5ub3VuY2VkIFRodXJzZGF5LiBIaWdoIHJlbGlhYmlsaXR5IG9yZ2FuaXphdGlvbnMgdXNlIHByb2NlZHVyZXMgYW5kIHByb3RvY29scyB0aGF0IGVtcGhhc2l6ZSBzYWZldHksIHJlZHVjZSBlcnJvcnMgYW5kIHByZXZlbnQgaGFybSB0byBwYXRpZW50cy4uIApTbWl0aHQxMjE4ICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCk9uIHRoZSA3dGggeWVhciwgSSB3YXMgcHJvbW90ZWQgdG8gbWFuYWdlci4gClRoZSBvbGRlciwgbWFsZSBjYXNoaWVyIG1hZGUgbWUgcHV0IGRvd24gbXkgbmFtZSBhbmQgYWRkcmVzcyAoaXMgdGhhdCBub3JtYWw/PykgaW4gYSByZWdpc3RyeSBub3RlYm9vaywgdGhlbiBub3RpY2VkIG15IHJpbmcgYW5kIGFza2VkIGlmIG15IGh1c2JhbmQga25ldywgYW5kIHdoZXRoZXIgaXQgd2FzIG15IGZpcnN0IHRpbWUgdXNpbmcgaXQuIApNeSBkYXVnaHRlciBoYXMgYSBzaGFkZSB0aGF0IGlzIHNpbHZlciBidXQgd2hlbiBpdCBpcyBleHBvc2VkIHRvIGRpcmVjdCBzdW5saWdodCwgaXQgY2hhbmdlcyB0byBwdXJwbGUuIFZlcnkgY29vbCEgRGlmZmVyZW50IGNvbG91cnMgd29yayBmb3IgZGlmZmVyZW50IHBsYWNlcywgdG9vLiAKSGUgd2FzIGp1c3QgYm90aCBuZXJ2b3VzIGFuZCBleGNpdGVkIGFuZCBuZWVkcyB0byBjYWxtIGhpbXNlbGYgZW5vdWdoIHRvIHVzZSB0aGUgbW91c2UuLiAKWWVzLCB0aGV5IGRpZC4gVGhleSBpbmNsdWRlZCB0aGF0IGFzIHBhcnQgb2YgdGhlIHByb2JsZW0sIiBTaGVlaGFuIHNhaWQsIGFjY29yZGluZyB0byBhIHdlYmNhc3Qgb24gdGhlIHdlYnNpdGUgb2YgdGhlIFNlbmF0ZSBBcm1lZCBTZXJ2aWNlcyBDb21taXR0ZWUuClBlcnNvbmFsbHksIEkgaGF0ZWQgaXQsIHRoZSBjb25jZXB0IHdhcyBmaW5lIGJ1dCB0aGUgZXhlY3V0aW9uL2xvb2sgcmVhbGx5IG5lZWRlZCBwb2xpc2hpbmcuIApDb21wYW55IG9yIGl0cyBkZXNpZ25lZXMgcmVzZXJ2ZXMgdGhlIHJpZ2h0IHRvIGNoYW5nZSBhbnkgYW5kIGFsbCBwcmljZXMgZm9yIGFueSBTZXJ2aWNlcyBhbmQgQ29udGVudCwgZm9yIGFueSByZWFzb24uIFB1cmNoYXNlcyBtYXkgYmUgZ292ZXJuZWQgYnkgQWRkaXRpb25hbCBUZXJtcy4gUHVyY2hhc2VzIG1heSBhbHNvIGJlIGNvbnRyb2xsZWQsIGhhbmRsZWQsIHByb2Nlc3NlZCBhbmQvb3IgZnVsZmlsbGVkIGJ5IHRoaXJkIHBhcnRpZXMgbm90IGFmZmlsaWF0ZWQgd2l0aCBDb21wYW55IChhICJUaGlyZCBQYXJ0eSBQcm9jZXNzb3IiKS4gCk9yIHRoZSBwb2tlciBob3VzZXMgRHdhaW5lIENhcmF3YXkgdXNlZCB0byBwcm90ZWN0IGZyb20gdGhlIHBvbGljZS4uIApUaGUgRGl2b3JjZWUgICBNaWRkbGUgYWdlZCBmZW1hbGUgd2hvIHBsYXlzIHRpZ2h0IGFuZCBkb2VzbiBibHVmZiBtdWNoLiAKU2xpZ2h0bHkgZGlmZmVyZW50IGhpZ2ggc3BlZWQgbWV0aG9kcyBvZiBiYWtpbmcgZXZvbHZlZCBvdmVyIHRpbWUuCjIuIFRoZXJlIGFyZSBmaXZlIGNvbW11bml0eSBjYXJkcyB3aGljaCBhcmUgcGxhY2VkIGJ5IHRoZSBkZWFsZXIuIFRoZSBmaXJzdCB0aHJlZSBjYXJkcyBhcmUgY2FsbGVkICJ0aGUgZmxvcCIsIHRoZSBmb3VydGggY2FyZCBpcyBrbm93biBhcyAidGhlIHR1cm4iIGFuZCB0aGUgZmlmdGggY2FyZCBpcyBjYWxsZWQgInRoZSByaXZlciIuIEVhY2ggcGxheWVyIGlzIGRlYWx0IHR3byBwcml2YXRlIGNhcmRzIGZhY2UgZG93biwgd2hpY2ggYXJlIGFsc28ga25vd24gYXMgInBvY2tldCBjYXJkcyIuCkkgYWdyZWUsIEkgbmV2ZXIgc2FpZCB0aGF0IEkgb25seSB1c2UgcmVnZXguIApUd28gY2FyZHMgc2hvdWxkIG5vdCBiZSBkcmF3biB0byBhIHBhaXIgdW5sZXNzIGFuIGFjZSBvciBraW5nIGNhbiBiZSByZXRhaW5lZCB3aXRoIHRoZW0sIGV4Y2VwdCBmb3IgdGhlIHB1cnBvc2Ugb2YgYSAiYmx1ZmYuIiBJZiBtb3N0IG9mIHRoZSBvdGhlciBwbGF5ZXJzIGFyZSAiaW4sIiB0aGUgY2hhbmNlcyBvZiBkcmF3aW5nIGFuIGFjZSBvciBhIGtpbmcgYXJlIG5vdCBxdWl0ZSBzbyBnb29kIGFzIHRob3NlIG9mIGRyYXdpbmcgYSBzbWFsbCBjYXJkLCBiZWNhdXNlIHRoZSBvdGhlciBwbGF5ZXJzIGFyZSBtb3JlIGxpa2VseSB0byBiZSBzdGF5aW5nIGluIG9uIGhpZ2ggdGhhbiBvbiBsb3cgY2FyZHMuIApUd2lucywgdGVhbW1hdGVzLCBLYXJlbidzIEhvcGUgaGVscGVycwpZb3UgdGFrZSBhIHJhY2Ugb2YgY3JlYXR1cmVzLCBidWlsZCBhbiBhcm15IG9mIG1pbmlzLCBhbmQgYmF0dGxlIHRoZW0gYWNyb3NzIGEgdGFibGUgdXNpbmcgYSBzZXJpZXMgb2YgcnVsZWJvb2tzIGFzIGEgZ3VpZGUuIApJIGhhdmUgYSBsb3Qgb2YgaG9iYmllcywgYnV0IHRoaXMgaXMgb25lIG9mIHRoZSB3ZWlyZGVyLCBtaW5vciBvbmVzLiBUcnlpbmcgdG8gdHJhbnNsYXRlIEZpbGlwaW5vIHBvZXRyeSBpbnRvIEVuZ2xpc2guCkJvZGUgcHJvcG9zZXMgTXIuIApTaGUgc2FpZCB5ZXMgYW5kIEkgZGlkLi4gCk1vc3QgYWN0aW9ucyByZXF1aXJlIHNvbWUgbGV2ZWwgb2YgYmVpbmcgYWJsZSB0byB0YWtlIGluZm8gZnJvbSBpbnRlbGxpZ2VuY2Ugc291cmNlcyBhbmQgYXBwbHlpbmcgdGhlbSB0byB0aGUgc2l0dWF0aW9uLiBCZWluZyBnaXZlbiBhIHNob3J0IHBlcmlvZCB0byByZXZpZXcgYW5kIGZvcm11bGF0ZSBpZGVhcyAgIG5vdCBmdWxsIHJlc3BvbnNlcyAgIHdvdWxkIHNob3cgdGhhdCBiZXR0ZXIgSU1PLiAKU3BpbmFsIFJlZmxleCBUaGVyYXB5IGlzIGRlc2lnbmVkIHRvIHN0b3AgYWN1dGUgYW5kIGNocm9uaWMgcGFpbiBhbmQgam9pbnQgZHlzZnVuY3Rpb24gYnkgY2hhbmdpbmcgdGhlIG5lcnZlIGFuZCBtdXNjbGUgYWN0aXZpdHkuIFNvIGl0IGRvZXNuJ3QgbG9vayBvciBmZWVsIGxpa2UgbWFzc2FnZS4gCkkgaGF2ZSBhIDMgMS8yIHllYXIgb2xkIHNvbiByaWdodCBub3csIGFuZCBmcm9tIGRheSBvbmUgSSB0aG91Z2h0IG9mIGhpbSBhcyBzb21lb25lIEkgb3dlIG1vbmV5IHRvLiBJIG93ZSBoaW0gbW9uZXkgZm9yIGZvb2QsIGNsb3RoaW5nLCBob3VzaW5nLCBjb2xsZWdlLCBldGMuIApJdCdzIGdvaW5nIHRvIGNvc3QgYSBwcmV0dHkgcGVubnksIGJ1dCB5b3UgZG9uJ3Qgd2FudCB0byBjaGVhcCBvdXQgb24gaXQuIFlvdSBjYW4gYXNrIHRoZW0gdG8gZHllIGl0IHRvIHlvdXIgbmF0dXJhbCBjb2xvciBhcyB3ZWxsLiAKSGlzIHBvcnQgb2YgbGFuZGluZyBpbiBQYWtpc3RhbiB3YXMgQmFoYXdhbHB1ciwgdGhvdWdoIGhlIHNldHRsZWQgaW4gS2FyYWNoaSdzIERhc3RhZ2lyIG5laWdoYm91cmhvb2QuIApJIGNhbiBhc3N1cmVkbHkgc2F5IHRoYXQgWUVTLCBpdCBkaWQgd29yayBmb3IgbWUuIApUaGUgIkJsdW1pbmUiIGl0c2VsZiBkZXNlcnZlcyBtZW50aW9uLCBzaW5jZSBpdCBpcyBzbyByYXJlbHkgcGVyZm9ybWVkIGFzIHBhcnQgb2YgdGhlIHdvcmsuIApJdCdzIGEgZ3JlYXQgb25saW5lIHBva2VyIHN0cmF0ZWd5IHRoYXQgYSBsb3Qgb2YgYmVnaW5uZXJzIHVzZS4gCkEgbmV3IHN0dWR5IHdpbGwgYmVnaW4gaW4gY29taW5nIG1vbnRocyB0byB1cGRhdGUgdGhlc2UgZmluZGluZ3MsIiBoZSBzYWlkICJUaGlzIHllYXIsIHRoZSBOU1cgR292ZXJubWVudCBhbGxvY2F0ZWQgJDI1IG1pbGxpb24gZm9yIHJlc3BvbnNpYmxlIGdhbWJsaW5nIGluaXRpYXRpdmVzLCBpbmNsdWRpbmcgcGhvbmUsIG9ubGluZSBhbmQgZmFjZSB0byBmYWNlIGNvdW5zZWxsaW5nIHNlcnZpY2VzLCBpbmNsdWRpbmcgRHViYm8uIiBMaWZlbGluZSBDZW50cmFsIFdlc3QncyBCYXJiYXJhIEJhcmQgc2FpZCB0aGV5IGhhZG5vdGljZWQgYSBzbGlnaHQgaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiBnYW1ibGVycyBzZWVraW5nIGNvdW5zZWxsaW5nIG92ZXIgdGhlIHBhc3QgMTIgbW9udGhzLiAiUGVvcGxlIGFjcm9zcyB0aGUgYWdlIGdyb3VwcyBnYW1ibGUsIiBzYWlkIE1zIEJhcmQsIHdobyBtYW5hZ2VzIGEgdGVhbSBvZiBzaXggY291bnNlbGxvcnMgIHR3byBlYWNoIGluIER1YmJvLCBCYXRodXJzdCBhbmQgT3JhbmdlLiBUaGVzZSBjb3Vuc2VsbG9ycyBhbHNvIHByb3ZpZGUgZmFjZSB0byBmYWNlIGNvdW5zZWxsaW5naW4gTGl0aGdvdywgUGFya2VzIGFuZCBNdWRnZWUgb24gYSBwcmUgZGV0ZXJtaW5lZCBkYXkuIApBIHJlcG9ydCBmcm9tIHRoZSBDYXBpdGFsIEVjb25vbWljcyByZXNlYXJjaCBncm91cCBub3RlcyB0aGF0IFJ1c3NpYSBpcyBhIG1ham9yIHN1cHBsaWVyIG9mIG9pbCB0byBHZXJtYW55IGFuZCB0aGUgTmV0aGVybGFuZHMgaW4gcGFydGljdWxhciAiYW5kIG9mIG5hdHVyYWwgZ2FzIHRvIFdlc3Rlcm4gRXVyb3BlIGdlbmVyYWxseS4gClRoZSBEZWx0aW4gUm95YWxlLCBmb3IgZXhhbXBsZSwgaG9zdHMgdGhlIERSIEN1cCBUb3VybmFtZW50IGF0IGl0cyBQb2tlciBSb29tIGZyb20gU2VwdGVtYmVyIDI1IDI4LCB3aXRoIGEgdG90YWwgZ3VhcmFudGVlZCBwb3Qgb2YgUnMyOSBsYWtoLiBUaGUgaGlnaCByb2xsZXIgZXZlbnRzIGhhdmUgYSBtaW5pbXVtIHBvdCBvZiBSczE2IGxha2guIFRoZSBQb2tlciBSb29tIGhhcyAxMyBwb2tlciB0YWJsZXMgd2l0aCB0aGUgZGVhbGVycyB0cmFpbmVkIHRvIGludGVybmF0aW9uYWwgc3RhbmRhcmRzIFdpdGggY2FzaW5vcyBvZnRlbiBpbiB0aGUgbmV3cyBmb3IgdGhlIHdyb25nIHJlYXNvbnMsIGNhc2lubyBvZmZpY2lhbHMgYXJlIHJlbHVjdGFudCB0byBzcGVhayBhYm91dCB0aGUgaGFwcGVuaW5ncyBpbnNpZGUgb3IgdGhlaXIgY2xpZW50ZWxlLiBPZmZpY2lhbHMsIGhvd2V2ZXIsIHNheSB0aGF0IHRoZSBidXNpbmVzcyBoYXMgcGlja2VkIHVwIHdpdGggdGhlIGRlcHJlY2lhdGluZyBydXBlZS4gIk1vc3Qgb2Ygb3VyIGNsaWVudHMgYXJlIGZyb20gbm9ydGggSW5kaWEuIFdpdGggdGhlIGRlcHJlY2lhdGluZyBydXBlZSwgdHJhdmVsbGluZyBhYnJvYWQgaXMgZXhwZW5zaXZlIGFuZCBpdCBjaGVhcGVyIHRvIGZseSB0byBHb2EgZm9yIGdhbWJsaW5nLCIgc2FpZCBhbiBvZmZpY2lhbCwgcmVmdXNpbmcgdG8gYmUgbmFtZWQuCkkgcm9sbGVkIGludG8gdGhlIHZlbnVlIGF0IDZBTSwgYWZ0ZXIgZ2V0dGluZyB1cCBhdCA1QU0gZm9yIGEgcXVpY2sgYnJlYWtmYXN0LiBJdCB3YXMgY29sZCwgYXJvdW5kIDUgb3IgNiBkZWdyZWVzIENlbHNpdXMuIApCdXNxdWluZSBhbmQgRmFpc2FsIHdhc3RlZCBubyB0aW1lIGFuZCBsZWFwdCBvbnRvIHRoZSB0cmFja3MuIFRoZXkgcnVzaGVkIG92ZXIgdG8gdGhlIHdlc3Rib3VuZCB0cmFja3MgYW5kIHRlbmRlZCB0byB0aGUgbWFuLCB3aG8gdG9sZCB0aGVtIGhlIHRob3VnaHQgaGUgaGFkIGJyb2tlbiBoaXMgbGVnLgpEci4gSGFtYmxpbidzIHJlc2VhcmNoIHNob3dzIHRoYXQsIGluIGZhY3QsIFBCTSBpcyBhY2hpZXZhYmxlIGFjcm9zcyB0aGUgZnVsbCA2MDAgMTIwMG5tIHJhbmdlLiBNaXRvY2hvbmRyaWFsIHN0aW11bGF0aW9uIFBCTSBoYXMgYmVlbiBzaG93biB0byBvY2N1ciBzdHJvbmdseSBhY3Jvc3MgdGhlIDYwMCAxMDAwIHJhbmdlLlszXQpUaGF0IGhvdyBpdCBhcHBlYWxzIHRvIHNvIG1hbnkgYW5kIGhvdyBzdXBwbGVtZW50cyBhcmUgc29sZC4gQWdhaW4gdGhlIHNhbWUgZm9ybXVsYSBpcyB1c2VkIHdpdGggYXN0cm9sb2d5LiAKVG91dGVmb2lzLCBsZSBqdWdlIHBldXQgZW4gdGVuaXIgY29tcHRlIHBvdXIgbGEgZHRlcm1pbmF0aW9uIGRlIGxhIHBlaW5lIGV0IGRlIHNvbiByZ2ltZS4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gWW91IGhhdmUgdG8gcGF5IGEgZmFpciBmb3IgdGhlIENORSBhbmQgdGhlIHBhcmtpbmcgaW4gdG90YWwgd2hpY2ggaXMgYWJvdXQgNTAgYnVja3MgZ2l2ZSBvciB0YWtlIGEgYml0IHVuZGVyLiBJZiB5b3UgZG9uIHdhbnQgdG8gcGF5IGFueSBwYXJraW5nIGZlZXMgZ28gYWZ0ZXIgMTFQTS4KU29tZSBwb3RlbnRpYWwgdGhlcmFwaWVzIGFyZSBzdGlsbCBiZWluZyBldmFsdWF0ZWQgZm9yIHNhZmV0eSBhbmQgZWZmZWN0aXZlbmVzcywgd2hpbGUgb3RoZXJzIGhhdmVuJ3QgYmVlbiBzZXJpb3VzbHkgZXZhbHVhdGVkIGF0IGFsbC4gClRoZSBNaW5uZXNvdGEgUHVibGljIFJhZGlvIEJvYXJkIGlzIG1hZGUgdXAgb2YgYnVzaW5lc3MsIHBoaWxhbnRocm9waWMgYW5kIGNvbW11bml0eSBsZWFkZXJzIGNvbW1pdHRlZCB0byB0aGUgcHVibGljIHNlcnZpY2UgbWlzc2lvbiBvZiBNUFIuIFRydXN0ZWVzIGFyZSBpbmRpdmlkdWFscyB3aG9zZSBicm9hZCBleHBlcmllbmNlLCBrbm93bGVkZ2UgYW5kIGluZGVwZW5kZW5jZSBvZiBqdWRnbWVudCBlbmFibGVzIHRoZW0gdG8gYnJpbmcgbXVsdGkgY3VsdHVyYWwgcGVyc3BlY3RpdmVzIHRvIHRoZSBCb2FyZC4gVHJ1c3RlZXMgYXJlIGNob3NlbiB0byBhc3N1cmUgdGhhdCB0aGUgQm9hcmQgcmVwcmVzZW50cyB0aGUgZGl2ZXJzaXR5IG9mIHRoZSByZWdpb24gYW5kIGNvbW11bml0aWVzIHNlcnZlZCBieSBNUFIsIGluIGhpc3RvcnksIGFnZSwgZ2VuZGVyLCBzb2NpYWwgYW5kIGVjb25vbWljIGNpcmN1bXN0YW5jZSwgbGlmZSBleHBlcmllbmNlLCBjdWx0dXJlLCBldGhuaWNpdHksIGdlb2dyYXBoeSwgc2V4dWFsIG9yaWVudGF0aW9uLCBhbmQgZGlzYWJpbGl0eS4gVGhpcyBicmVhZHRoIG9mIGRpdmVyc2l0eSBpcyBlc3NlbnRpYWwgZm9yIE1QUiB0byBicmluZyB0byBvdXIgYXVkaWVuY2VzIHRoZSBoaWdoZXN0IHF1YWxpdHkgcHVibGljIG1lZGlhIHNlcnZpY2VzIGluIHRoZSBhcnRzIGFuZCBtdXNpYywgYXMgd2VsbCBhcyB0cnVzdGVkIGluZm9ybWF0aW9uIG9uIGVjb25vbWljcywgcG9saXRpY3MgYW5kIHNvY2lldHkgaW4gdGhlIHR3ZW50eSBmaXJzdCBjZW50dXJ5LgpGYXIgYXMgdGhlIEludGVybmF0aW9uYWwgSGVhZGFjaGUgU29jaWV0eSBhbmQgdGhlIEFtZXJpY2FuIEFzc29jaWF0aW9uIGZvciB0aGUgU3R1ZHkgb2YgSGVhZGFjaGVzIGhhdmUgZGVmaW5lZCB0aGlzIGVudGl0eSAoY2Vydmljb2dlbmljIGhlYWRhY2hlKSBpdCBzaW1wbHkgZG9lc24gZXhpc3QuIEkgcGxlYXNlZCB0byBzYXkgdGhhdCB0aGFua3MgdG8gdGhlIHdvcmtzIG9mIERycy4gTWVyc2tleSBhbmQgQm9nZHVrLCBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUgaXMgcmVjb2duaXplZCBpbiB0aGUgSUFTUCAoSW50ZXJuYXRpb25hbCBBc3NvY2lhdGlvbiBmb3IgdGhlIFN0dWR5IG9mIFBhaW4pIHRheG9ub215LiBUaGlzIHNpdHVhdGlvbiBjcmVhdGVzIGFuIGVub3Jtb3VzIHByb2JsZW0gaW4gYWRkcmVzc2luZyB0aGUgZGlhZ25vc2lzIGFuZCB0cmVhdG1lbnQgb2YgaGVhZGFjaGVzLiBTaW5jZSBtb3N0IG9mIHRoZSBwaHlzaWNpYW5zIGFuZCBoZWFkYWNob2xvZ2lzdHMgYXJlIHVuZmFtaWxpYXIgd2l0aCB0aGUgSUFTUCB0YXhvbm9teSwgdGhleSBhcmUgdW5hd2FyZSBvZiB0aGlzIGVudGl0eSwgc28gZGlhZ25vc2lzIG9mIGNlcnZpY29nZW5pYyBoZWFkYWNoZSBpcyByYXJlbHkgbWFkZS4gVGh1cywgdGhlcmUgYXJlIGEgbGFyZ2UgbnVtYmVyIG9mIGNocm9uaWMgaGVhZGFjaGUgc3VmZmVyZXJzIHdobyBnbyB0aHJvdWdoIGxpZmUgd2l0aCB0aGUgd3JvbmcgZGlhZ25vc2lzIGFuZCBoZW5jZSB0aGUgd3JvbmcgdHJlYXRtZW50IGZvciB0aGVpciBoZWFkYWNoZS4gSXQgd2FzIHRoZSBvbmdvaW5nIGlnbm9yYW5jZSBhYm91dCB0aGlzIGNsaW5pY2FsIGVudGl0eSB0aGF0IG1vdGl2YXRlZCB0aGUgZm91bmRlcnMgb2YgdGhpcyBzb2NpZXR5IHRvIGVzdGFibGlzaCBhIGZvcm1hbCBvcmdhbml6YXRpb24uIE9uZSBvZiBvdXIgZ29hbHMgaXMgZm9yIHRoaXMgZW50aXR5IHRvIGJlIGFjY2VwdGVkIGludG8gdGhlIGdlbmVyYWwgaGVhZGFjaGUgY2xhc3NpZmljYXRpb24sIGFuZCB1bnRpbCB0aGlzIGhhcHBlbnMsIGxhcmdlIG51bWJlcnMgb2YgcGF0aWVudHMgd2lsbCBjb250aW51ZSB0byBzdWZmZXIgdW5uZWNlc3NhcmlseS4gc2Vjb25kIE5vcnRoIEFtZXJpY2FuIENlcnZpY29nZW5pYyBIZWFkYWNoZSBDb25mZXJlbmNlIHdpbGwgYmUgaGVsZCBpbiBMYXMgVmVnYXMsIE1hcmNoIDIyIDIzLiBEci4gUm90aGJhcnQgd2l0aCBiZSB0aGUgY29uZmVyZW5jZSBtb2RlcmF0b3IuIENvbmZlcmVuY2Ugc3BlYWtlcnMgaW5jbHVkZSBEci4gQm9nZHVrIGFuZCBIb3dhcmQgVmVybm9uLCBEQywgYXNzb2NpYXRlIGRlYW4gb2YgcmVzZWFyY2ggYXQgdGhlIENhbmFkaWFuIE1lbW9yaWFsIENoaXJvcHJhY3RpYyBDb2xsZWdlIGluIFRvcm9udG8uIFRoZSBjb25mZXJlbmNlIGlzIGRlc2lnbmVkIGZvciBNRHMsIERDcyBhbmQgYWxsIG90aGVyIHByb3ZpZGVycyB3aG8gZGVhbCB3aXRoIGhlYWRhY2hlcy4gT25lIG9mIHRoZSBzZXNzaW9ucyB3aWxsIHNwZWNpZmljYWxseSBhZGRyZXNzIHRoZSB1c2Ugb2YgdGhlcmFweSBmb3IgY2Vydmljb2dlbmljIGhlYWRhY2hlcy4KRnJpdHp2b25TYWx0IExha2UgQ2l0eQpJIGhhZCBzdGFydGVkIGJ5IHRlbGxpbmcgeW91IGNvbmdyYXR1bGF0aW9ucywgdGhlbiBhYm91dCB3b3JsZCByZWNvcmRzLCBhbmQgd2hlcmUgbXkgcGF0aCB0b29rIG1lLiBJIGZvcmdvdCB0byBtZW50aW9uIEkgd2FzIGZ1Y2tpbmcgYWNlcyBhdCBtaW5lc3dlZXBlciB3aGlsZSBJIHdhcyBpbiBteSBkb3dud2FyZCBzcGlyYWwuIFN1YiA5OSBvbiBleHBlcnQgY29uc2lzdGVudGx5LCBhbmQgd2l0aCBzdXBlciBsb3cgZGV0b25hdGlvbnMgKEkga25vdywgZnVjayB0aGUgb25lIHdoZXJlIHlvdSBnb3R0YSBqdXN0IGd1ZXNzIGl0ICAgSSBsb3N0IG15IHBlcnNvbmFsIHJlY29yZCBhdCBsZWFzdCA1IHRpbWVzIHN0YXJpbmcgYW5kIG5vdCBtYWtpbmcgYSBkZWNpc2lvbikuIApJIHdhcyBzaW1wbHkgdG9vIGh1bWlsaWF0ZWQgdG8gdGVsbCBteSBtb20gaG93IGJhZCBpdCB3YXMuIApLaW1iZXJseWhhcyBiZWVuIHRlYWNoaW5nIHZhcmlvdXMgd29ya3Nob3BzIGZvciBvdmVydGVuIHllYXJzLCBwcmltYXJpbHkgaW4gdGhlIGFyZWEgb2Ygc3RyYXdib25uZXRzIGFuZCBjb3JzZXQgbWFraW5nLiBTaGUgaGFzIGJlZW4gYWd1ZXN0IGluc3RydWN0b3IgaW4gY29yc2V0cnkgc2V2ZXJhbCB0aW1lcyBmb3JhcHBhcmVsIHN0dWRlbnRzIGF0IFdlc3Rlcm4gTWljaGlnYW5Vbml2ZXJzaXR5IChXTVUpIGFuZCBhdCBDZW50cmFsIE1pY2hpZ2FuVW5pdmVyc2l0eSAoQ01VKUtpbWJlcmx5IGFuZCBKaW0sIGhlcmh1c2JhbmQgb2YgMzcgeWVhcnMsIHJlc2lkZSBpbiBMZXNsaWUsIE1JLFRoZXkgaGF2ZSA0IGdyb3duIGNoaWxkcmVuIGFuZCA2Z3JhbmRjaGlsZHJlbi4gVGhleSBjYW4gYmUgZm91bmQgc2VsbGluZyBoaWdocXVhbGl0eSBzdXBwbGllcyBhdCBtYW55IENpdmlsIFdhciBldmVudHMgaW5NaWNoaWdhbiwgbm9ydGhlcm4gT2hpbywgUGVubnN5bHZhbmlhLEluZGlhbmEgYW5kIE5ldyBZb3JrLjEwOjAwYW0gICBFbmR1cmluZyBJbWFnZXMgIDEgaG91ckV4cGxvcmUgdGhlIG1hZ2ljIG9mIDE5dGggY2VudHVyeXBob3RvZ3JhcGh5ICAgdGhlIGludmVudGlvbnMsIHRlY2huaXF1ZXMgYW5kY2hlbWlzdHJ5IHRoYXQgYWxsb3dlZCBvdXIgMTl0aCBjZW50dXJ5Y291bnRlcnBhcnRzIHRvIGNhcHR1cmUgaW1hZ2VzIG9mIHRoZSB3b3JsZGFyb3VuZCB0aGVtIEFydCB0aGF0IGdpdmVzIHVzIGFuIGVuZHVyaW5ncmVjb3JkIG9mIHRoZSBwYXN0LiAKSGUgaXMgYWxzbyBtb3JlIGxpa2VseSB0byBubyBsb25nZXIgaGF2ZSBzeW1wYXRoeSBmb3IgdGhlIGJsb29kIHB1cml0eSBjYXVzZSwgYXMgc2VlbiB3aGVuIGhlIHRlbGxzIFBoaW5lYXMgTmlnZWxsdXMgbm90IHRvIHVzZSB0aGUgd29yZCBtdWRibG9vZC4gCldoZW4geW91IHdhbnQgdG8gZ2V0IHRoZSByZWFsIHBva2VyIGV4cGVyaWVuY2UsIHRha2UgYSBtb21lbnQgdG8gdGhpbmsgYWJvdXQgaG93IHlvdSBjYW4gZ2V0IHRoZSBwb2tlciBmZWx0IHRvcCB0aGF0IGlzIHJpZ2h0IGZvciB5b3UuIApJZiB0aGF0IGZhaWxzICh3aGljaCB1bmZvcnR1bmF0ZWx5IGl0IGhhcyksIGEgcG9ydGlvbiBvZiB0aGUgcmFrZSBiYWNrIGdvZXMgdG93YXJkcyB0aGUgYmFkIGRlYnQuIFRoYXRzIHdoeSB3ZSBhcmUgc29tZXdoYXQgc2VsZWN0aXZlIG9uIHdobyB3ZSBicmluZyBpbiBub3cuIApEaXNhZ3JlZW1lbnQgZG9lc24gbmVjZXNzYXJpbHkgZW50YWlsIHBlcnNvbmFsIGNyaXRpY2lzbS4uIApEYXZpZCBpcyBwcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cyBEYXZpZCBhbmQgR2VvcmdpbmEgU2NvdHQsIGhpcyBhdW50IGFuZCB1bmNsZSBGcmVkIGFuZCBTYXJhaCBDdW1taW5ncywgYW5kIGhpcyBicm90aGVycyBUaG9tYXMgYW5kIEppbSBTY290dC4gRGF2aWQgaW1taWdyYXRlZCB0byBDYW5hZGEgZnJvbSBOb3J0aGVybiBJcmVsYW5kIHdoZW4gaGUgd2FzIDEwIHllYXJzIG9sZC4gRnJvbSBodW1ibGUgYmVnaW5uaW5ncywgRGF2aWQgd29ya2VkIHRpcmVsZXNzbHkgdGhyb3VnaG91dCBoaXMgbGlmZSB0byBidWlsZCBhbmQgc3VzdGFpbiBhIHN1Y2Nlc3NmdWwgYnVzaW5lc3MgYW5kIHdvbmRlcmZ1bCBob21lIGZvciBoaXMgZmFtaWx5IGluIFdhdGVyZG93bi4gClRoZSAiYmVzdCIgcG9pbnRzIGFyZSA2IGFuZCA4LCB3aGVyZSBwZW9wbGUgY2FuIGJldCBleHRyYSBhdCA2IDUgb2Rkcy4gCllvdSBhY3QgYXMgaWYgeW91IGFyZSBzdHJvbmcgd2hlbiBjb21tdW5pY2F0aW5nIHZpYSBlbGVjdHJvbmljIHRleHQgYmFzZWQgbWVzc2FnZXMsIHlldCB5b3UgYXJlIGEgY293YXJkIGluIHBlcnNvbi4gCiJSaGVvLiIgVGhlcmUgd2FzIHRoYXQgd2FybSBzbWlsZSBhZ2FpbiwgdGhlIG9uZSB0aGF0IEkgZGlkbid0IGRlc2VydmUuICJJIGxvdmUgeW91LiAKQSB3ZWVrIGFmdGVyIHlvdSBhbGwgd2lsbCBiZSBjb21wbGFpbiBhYm91dCBob3cgaXQgbm90IHVzZWQsIGl0IHBvaW50bGVzcywgYW5kIHRoYXQgdGhleSBzaG91bGQgaGF2ZSBuZXZlciBtb3ZlZCBpdCBpbiB0aGUgZmlyc3QgcGxhY2UuCkkgdGhpbmsgaXQgc2VsbCBhIHRvbiBpZiB0aGVyZSB3YXMgZW5vdWdoIHByb21vdGlvbi5IZSBpcyBzbyBzdWJtaXNzaXZlIHdoZW4gaXQgY29tZXMgdG8gdGhlIGxvcmUsIGl0IGFzIGlmIGhlIGhpbXNlbGYgaGFzIG5vIGlkZWEgYWJvdXQgd2hhdCBpcyB0byBiZSB0YWtlbiBzZXJpb3VzbHkgb3Igbm90LiAKSWYgeW91IHdhbnQgdG8gcmVzcGVjdCBLb3JlYW4gY3VsdHVyZSwgdGhlbiByZWNvZ25pemUgdGhhdCB5b3UgbmV2ZXIgYmUgdHJ1bHkgS29yZWFuIGV2ZW4gaWYgeW91IGdldCBTb3V0aCBLb3JlYW4gY2l0aXplbnNoaXAuIEV0aG5pYyBLb3JlYW5zIHRoYXQgZG9uIGhhdmUgS29yZWFuIGNpdGl6ZW5zaGlwIHdpbGwgb3V0cmFuayB5b3UgaW4gdGhlIGhpZXJhcmNoeSBvZiBLb3JlYW4gc29jaWV0eSBldmVuIGFmdGVyIHlvdSBuYXR1cmFsaXplIGFuZCB5b3Ugc3RpbGwgYmUgYXQgdGhlIGJvdHRvbSBvZiB0aGUgdG90ZW0gcG9sZS4gCklmIHlvdSdkIGxpa2UgdG8gZ2l2ZSBpdCBhIHRyeSwgdGhlIG1ldGhvZCBpdHNlbGYgaXMgZGVjZXB0aXZlbHkgc2ltcGxlOi4gCkdvYWwgd2FzIHJlYWxseSB0byBoZWxwIHByb21vdGUgd2hhdCB3ZSBkb2luZywgTXIuICBhIGRlYWwgd2l0aCB0aGUgRHJhZ29ucyBpcyBlZmZlY3RpdmVseSBsaWtlIGdldHRpbmcgYSB0aGlyZCBwYXJ0eSBlbmRvcnNlbWVudC4gWW91IGNhbiBidXkgYWR2ZXJ0aXNpbmcgbGlrZSB0aGF0LiAKVGhpcyBpcyB0aGUgc3RhZ2UgdGhhdCB0aGUgd2lubmVyIHdpbGwgYmUgZGVjaWRlZC4gClN1cHJlbWUgQ291cnQgZGlzbWlzc2VzIHRvcCBwb2tlciBwbGF5ZXIKQ2VudGVyIG9mIGRydWcgbGFiIHNjYW5kYWwKS2VsbHlIb3cgdG8gd2F0Y2ggIlRoZSBHYXlsZSBLaW5nIEludGVydmlldyB3aXRoIFIuIApFY29ub21pYyByZWNvdmVyeS4uIApJZiB5b3UgZ29pbmcgdG8gYmUgdHJhaW5pbmcgc29tZXRoaW5nIG90aGVyIHRoYW4gQWlyLCBFYXJ0aCBtaWdodCBiZSBhIGdvb2QgcGFydG5lci4gQm91bGRlciBCbGFzdCBzY2FsZXMgb2ZmIG9mIEVhcnRoK0FpciwgYXMgZG9lcyBTYW5kc3Rvcm0uCkRhYmVpIHNvbGx0ZSBkZXIgTWFzc2llcmVuZGUgc293b2hsIGVpbmUgZ2xlaWNobWlnZSBCZXdlZ3VuZyBlaW5oYWx0ZW4gYWxzIGF1Y2ggaW1tZXIgZWluZSBIYW5kIGFuIElocmVtIFJja2VuIGhhYmVuLCBkZW5uIHNvIGJsZWliZW4gU2llIGluIHN0bmRpZ2VtIEtycGVya29udGFrdC4gRGllc2UgZ2xlaWNobWlnZW4sIGxhbmdzYW1lbiBCZXdlZ3VuZ2VuIHdpcmtlbiBzZWhyIGJlcnVoaWdlbmQuIEFjaHRlbiBTaWUgZGFyYXVmLCBkYXNzIElociBQYXJ0bmVyIFNpZSBtaXQgZGVyIGdhbnplbiBIYW5kZmxjaGUgbWFzc2llcnQgdW5kIG5pY2h0IG51ciBtaXQgZGVyIEhhbmR3dXJ6ZWwuIApPZnRlbiBhIHBsYXllciB3aG8gZ29lcyBhbGwgaW4gKHJhaXNlcyB3aXRoIGFsbCBvZiBoaXMvaGVyIGNoaXBzKSBpcyBjYWxsZWQgYnkgc29tZW9uZSB3aG8gZG9lc24ndCBoYXZlIGFzIG1hbnkgY2hpcHMuIEluIHRoaXMgY2FzZSwgaWYgdGhlIHBsYXllciB3aG8gc3RhcnRlZCB0aGUgaGFuZCB3aXRoIG1vcmUgY2hpcHMgbG9zZXMgdGhlIGhhbmQsIGhlL3NoZSBnZXRzIGJhY2sgYW55IGFtb3VudCBvdmVyIHdoYXQgdGhlIG90aGVyIHBsYXllciBoYWQgdG8gc3RhcnQgdGhlIGhhbmQuIApUaGUgZ3JvdW5kIGxldmVsIHVuaXQgaGFzIGxhbWluYXRlIGZsb29ycyBhbmQgbmluZSBmb290IGNlaWxpbmdzIGFib3ZlIGFuIG9wZW4gY29uY2VwdCBsaXZpbmcgc3BhY2UsIHdoaWNoIHNob3djYXNlcyBncmFuaXRlIGNvdW50ZXJ0b3BzLCBzdGFpbmxlc3Mgc3RlZWwgYXBwbGlhbmNlcyBhbmQgcGVuZGFudCBsaWdodGluZyBpbiB0aGUga2l0Y2hlbi4gCkluYXBwcm9wcmlhdGUgc2V4dWFsIGNvbmR1Y3QuIENvbnZpY3Rpb24gb2YgYSBmZWxvbnkuIApJZiB5b3UgaGF2ZSBhY2Nlc3MgdG8gYSBnb29kIHBoeXNpbyB3aXRoIHBlcnNvbmFsIGV4cGVyaWVuY2UgaW4gY29tcGV0aXRpdmUgY3ljbGluZyBhbmQvb3IgcnVubmluZywgcHV0IHRoZSBjaGFsbGVuZ2UgdG8gdGhlbS4gCk5vdXZlbGxlcyBpbXBvcnRhbnRlcyEgMi4gTm90cmUgcXVpcGUsIG5vcyBvYmplY3RpZnMgMy4gRGV2ZW5pciBtZW1icmUgZGUgbCdBUE4gNC4gCllvdSBjYW4gYWxzbyBhcHBseSB0byB0aGUgZ292ZXJubWVudCB0byBzaGFyZSB5b3VyIENQUC9RUFAgcGVuc2lvbiB3aXRoIHlvdXIgc3BvdXNlLiBUaGlzIGlzIGRpc3RpbmN0IGZyb20gcGVuc2lvbiBzcGxpdHRpbmcsIHdoaWNoIGlzIGRvbmUgdGhyb3VnaCB0aGUgdGF4IHJldHVybiBmaWxpbmcgcHJvY2Vzcy4gSWYgeW91IHdlcmUgdGhlIG9ubHkgb25lIHdobyBtYWRlIGNvbnRyaWJ1dGlvbnMsIHlvdSBjYW4gc2hhcmUgeW91ciBDUFAvUVBQIHBlbnNpb24uIElmIGJvdGggeW91IGFuZCB5b3VyIHNwb3VzZSBjb250cmlidXRlZCwgZWFjaCBvZiB5b3UgY2FuIHJlY2VpdmUgYSBzaGFyZSBvZiBib3RoIG9mIHlvdXIgcGVuc2lvbnMuIFRoZSBjb21iaW5lZCB0b3RhbCBhbW91bnQgb2YgdGhlIHR3byBwZW5zaW9ucyBzdGF5cyB0aGUgc2FtZSB3aGV0aGVyIHlvdSBkZWNpZGUgdG8gc2hhcmUgeW91ciBwZW5zaW9ucyBvciBub3QuIFlvdSBjYW4gYWx3YXlzIGFwcGx5IHRvIGNhbmNlbCBDUFAvUVBQIHNoYXJpbmcgaWYgaXQgbm8gbG9uZ2VyIG1ha2VzIHNlbnNlIGluIHRoZSBmdXR1cmUuCkZlZGVyYWwgR3JvdXAgaG9sZHMgYSBtb25vcG9seSBvdmVyIFRhc21hbmlhIHBva2VyIG1hY2hpbmVzLCB3aXRoIHRoZSBsaWNlbmNlIHNldCB0byBleHBpcmUgaW4gMjAyMy4KTGlrZSBJIHdhcyBwYXJ0IG9mIGFuIGVsYWJvcmF0ZSBwcmFuaywgYW5kIHNldCB1cCB0byBiZSBodW1pbGlhdGVkLiAKRHJpdmluZyB0byBhIG5lYXJieSB0b3duIG9yIGNpdHkgaXMgZXhjaXRpbmcgYW5kIGZ1biBlbm91Z2ggdG8gZmlsbCBtYW55IGRheXMgb2YgY29udmVyc2F0aW9uIGFuZCByZWNvbGxlY3Rpb24gYXMgeW91IHNpdCB0b2dldGhlciBmb3IgbW9ybmluZyBjb2ZmZWUuLiAKRGVsaXZlcnkgb2YgYW4gZWR1Y2F0aW9uIHBhY2thZ2Ugd2l0aCBhIHNpbmdsZSBjbGVhciBtZXNzYWdlVGhpcyBwcm9ncmVzc2lvbiBmcm9tIGRvZXIgdG8gbWVudG9yIHJlcXVpcmVkIG5ldyBza2lsbHMuIEl0IHdhcyBpbXBvcnRhbnQgdG8gZ3VpZGUgbXkganVuaW9yIHRyYWluZWUgYnV0IG5vdCB0byBpbnN0cnVjdC4gCllvdSBkaWRuJ3Qgc3RhdGUgdGhlIHllYXIgejI0IGJ1dCwsLCwsIFRoaXMgYW5zd2VyIHNvdW5kcyBzdHJhbmdlIHRvIG1lLCBidXQgaXQgaXMgdHJ1ZSBhcyB0cnVlIGNhbiBiZS4gSSB0b29rIG15IDk5IHoyNCBpbnRvIHRoZSBkZWFsZXJzaGlwIGZvciB0aGUgc3RhcnRlciBzd2l0Y2ggcmVsYXkgInJlY2FsbCIgdGhpbmcgYW5kIHdoZW4gSSBnb3QgaXQgYmFjaywsLCwgMXN0IGludG8gMm5kIHNoaWZ0IHdhcyB3aXRoIGEgamVyayBhbmQgdGhlIGNoZWNrIGVuZ2luZSBsaWdodCB3YXMgb24uIFRoZXkgcHV0IHRoZSBjb2RlIHNjYW5uZXIgb24gaXQgYW5kIGl0IGNhbWUgYmFjayB3aXRoIHRoZSBBSVQgKEFpciBJbnRha2UgVGVtcGV0dXJlKSBzZW5zb3IgaW5wdXQgbG93LiBTbyBJIHJhaXNlZCB0aGUgaG9vZCBhbmQgZm91bmQgdGhhdCBpdCB3YXMgdW5wbHVnZWQuIFBsdWdnZWQgaXQgYmFjayBpbiBhbmQgdGhlIHByb2JsZW0gd2FzIHNvbHZlZC4gSXQgaXMgdGhhdCBzZW5zb3Igb24gdGhlIGJsYWNrIHJ1YmJlciBjdXJ2eSB0dWJlIGNvbm5lY3RlZCBiZXR3ZWVuIHRoZSBhaXIgZmlsdGVyIGJveCBhbmQgdGhhdCBibGFjayBmbGF0IGhhcmQgcGxhc3RpYyB0aGluZyB0aGF0IG1vdW50cyBvbiB0aGUgdGhyb3R0bGUgYm9keS4gQ2hlY2sgdG8gc2VlIHRoYXQgdGhlIHBsdWdpbiBpcyBtYWtpbmcgZ29vZCBjb250YWN0LiBJIHB1dCBzb21lIGluIG15IDk3IGFuZCBJIGZlbHQgYW4gaW5jcmVhc2UgaW4gcG93ZXIgQU5EIGEgaW5jcmVhc2UgaW4gZnVlbCBtaWxhZ2UuIFNvIG5vdyBJIGhhdmUgaXQgaW4gYWxsIDMgb2YgbXkgejI0J3MuIElmIHRoZXJlIGlzIG5vIHRyb3VibGUgY29kZSwgSSB3b3VsZCB0YWxrIHRvIGEgZmV3IHRyYW5zbWlzc2lvbiBwbGFjZXMgYW5kIGdldCBzb21lIG9waW5pb25zIGJlZm9yZSBtYWtpbmcgYW55IGRlY2lzaW9uLiAoRnVsbCBBbnN3ZXIpCk5vdCBvbmx5IGNvdWxkIGZvbGtzIGluIGF0dGVuZGFuY2UgY29tZSBmYWNlIHRvIGZhY2Ugd2l0aCBoaXN0b3JpY2FsIGFuZCBhbnRpcXVlIG1hY2hpbmVzLCBidXQgYSBudW1iZXIgb2YgcGVyc29uYWwgc3RvcmllcyBhbmQgYWR2ZW50dXJlcyBjb3VsZCBhbHNvIGJlIGZvdW5kIGluIG1lZXRpbmcgd2l0aCB0aGUgY29sbGVjdG9ycyBhbmQgYW50aXF1ZSB0cmFjdG9yIG93bmVycy4KSnVzdCB0byByZW1pbmQgeW91IGFsbCB0aGUgcmVhc29uIHdoeSBCZXRvIG5ldmVyIGhhcyB0byBnZXQgaGlzIGhhbmRzIGRpcnR5IGlzIGJlY2F1c2Ugc29tZW9uZSBlbHNlIGFscmVhZHkgZGlkLgpDb252ZXJzZWx5LCB0aGUgc3R1bm5pbmcgTElHTyByZXN1bHRzIHB1Ymxpc2hlZCByZWNlbnRseSBhcmUgYmVpbmcgY29udGVzdGVkIGJ5IG9uZSBncm91cCBvZiBza2VwdGljYWwgc2NpZW50aXN0cyB3aG8gaGF2ZSBwdWJsaXNoZWQgcGFwZXJzIGVzc2VudGlhbGx5IGNhbGxpbmcgIkJ1bGxzaGl0ISIuIFRoZSBMSUdPIHRlYW0gaGFzIHB1Ymxpc2hlZCBkZXRhaWxlZCByZXNwb25zZXMgdG8gZXhwbGFpbiBhbmQgcmVmdXRlIGVhY2ggY3JpdGljaXNtIGFuZCBkb3VidCBwb2ludCBieSBwb2ludC4gClJlbGljMjI3OSAgNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgV2lsbGlhbXN0b3duIGdyb29tZXIgZGlkIEM0QSBmcm9tIFdpbGxpYW1zdG93biB0byBIYXBweSBWYWxsZXkgYW5kIGFsbCBvZiB0aGUgQWx0bWFyIHRyYWlscyBsYXN0IG5pZ2h0LiBBdCBsZWFzdCBhbm90aGVyIGZvb3Qgb2Ygc25vdyB3YXMgYWRkZWQgdG8gdGhlIHRyYWlscyBpbiB0aGUgbGFzdCAyNCBob3Vycy4gQnVuZGxlIHVwIGlmIHlvdSBwbGFuIG9uIHJpZGluZyBhcyB0ZW1wZXJhdHVyZXMvd2luZCBjaGlsbHMgYXJlIHN1cHBvc2VkIHRvIGJlIGJlbG93IHplcm8uIERvbiBmb3JnZXQgdG8gc3RvcCBhbmQgc2hhcmUgYSBob3QgZG9nIG9uIHRoZSB0cmFpbCB3aXRoIHVzIFNhdHVyZGF5IHdoaWxlIHRoZSBwb2tlciBydW4gaXMgZ29pbmcgb24uIFRoZSBBbHRtYXIgZ3Jvb21lciBpcyBzdGlsbCB3YWl0aW5nIG9uIHNvbWUgcGFydHMsIGJ1dCBob3BlZnVsbHkgdGhhdCB3aWxsIGJlIGJhY2sgdG9nZXRoZXIgc29vbi4KT3RoZXJzIGFyZ3VlZCB0aGF0IFJlaG5xdWlzdCB3YXMgImp1c3QgZG9pbmcgaGlzIGpvYiIgbWFraW5nICJvYmplY3RpdmUiIGRlY2lzaW9ucyBiYXNlZCBvbiB0aGUgQ29uc3RpdHV0aW9uLiAKSSd2ZSBoYWQgc29tZSBwZW9wbGUgc2F5IHRvIG1lIHRoYXQgdGhleSB3b3VsZCBwcmVmZXIgYSBjIHNlY3Rpb24gdG8gYSB2YWdpbmFsIHRlYXIgYW5kIEknbGwgbmV2ZXIgdW5kZXJzdGFuZCBpdC4gQWRtaXR0ZWRseSwgSSBoYXZlbid0IGhhZCBvbmUsIGJ1dCBhIHRlYXIgdGhhdCBvbmx5IHJlcXVpcmVzIGEgZmV3IHN0aXRjaGVzIGNhbid0IHBvc3NpYmx5IGJlIGFzIGJhZCBhcyBhbiBhYmRvbWluYWwgaW5jaXNpb24uIEFuZCB0byBiZSBob25lc3QsIHRoZSB3b3JzdCBwYXJ0IGZvciBtZSB3YXMgbm90IGJlaW5nIGFibGUgdG8gdGFrZSBhIHJlYWwgc2hvd2VyIGZvciB3ZWVrcyBiZWNhdXNlIG9mIHRoZSBpbmNpc2lvbi4gSSBoYWQgbXkgZmlyc3QgaW4gRGVjZW1iZXIgYW5kIEkgbG92ZSBub3RoaW5nIG1vcmUgdGhhbiBhIGhvdCBzaG93ZXIgaW4gd2ludGVyLiBUaGF0IHdhcyBraW5kIG9mIHRvcnR1cmUgZm9yIG1lIHRvIG9ubHkgZ2V0IGhhbGYgd2V0LCBhbmQgY29uc2VxdWVudGx5LCBiZSBoYWxmIGNvbGQgYXMgSSBiYXRoZWQuIFNsZWVwaW5nIGFsc28gd2FzIGhvcnJpYmxlIGZvciAyIDMgd2Vla3Mgd2hpY2ggaXMgbm90IGlkZWFsIHdoZW4gc2xlZXAgaW4gdGhvc2UgZmlyc3Qgd2Vla3MgaXMgYWxzbyBoYXJkIHRvIGNvbWUgYnkuCiJXZSBiZWxpZXZlIHR3byBwZW9wbGUgd2VyZSBpbnZvbHZlZCwgYW5kIHBvc3NpYmx5IGEgdGhpcmQgcGVyc29uLiAiVGhleSBsZWZ0IHdpdGggYSByZWFzb25hYmxlIGFtb3VudCBvZiBjYXNoIGFuZCBjYXVzZWQgYXBwcm94aW1hdGVseSAkMTUsMDAwIHdvcnRoIG9mIGRhbWFnZS4iIFRoZSBjbHViIGhhcyBhYm91dCAyNSBtYWNoaW5lcyBhbmQgdGhlIGluY2lkZW50IHdhcyBjYXB0dXJlZCBieSBzZWN1cml0eSBjYW1lcmFzLi4gCk1heCBtYXkgZ2V0IGFuIGFubnVhbCBib251cyBvZiAkMTMsNTAwIHdoaWNoIHdvdWxkIGJlICQ3MDAgdG8gJDgwMCBwZXIgbW9udGggYWZ0ZXIgdGF4LiBUaGF0IHByb3ZpZGVzIHdpZ2dsZSByb29tIGluIGFkZGl0aW9uIHRvIGN1cnJlbnQgdW5hbGxvY2F0ZWQgc2F2aW5ncyBvZiBhcyBtdWNoIGFzICQxLDA1MyBwZXIgbW9udGguIFRoYXQgaW5jb21lIGZsb3cgY2FuIGdvIHRvIHRoZSBraWRzIGZvciB1bml2ZXJzaXR5IGV4cGVuc2VzIG90aGVyIHRoYW4gcm9vbSBhbmQgYm9hcmQsIGZvciB0aGV5IGxpdmUgYXQgaG9tZS4gCjNraW5kc29mc2FsdCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxOCBob3VycyBhZ28KV2FzIHRvbyBlYXJseSBmb3IgYSBsYXJnZSB3aGlza3kgb3IgZXZlbiBhIHNtYWxsIG9uZSBzbyBJIGp1c3Qgc2F0IGRvd24gYW5kIHNob29rIG15IGhlYWQgaW4gZGlzYmVsaWVmLiBIZSBzYWlkIHRoYXQgaXQgd2FzIHRoZSBzZWNvbmQgdGltZSB3aXRoaW4gYSBtb250aCB0aGF0IHRoZSB0b3RhbCBoYWQgcmVhY2hlZCA0Ny4gT24gdGhlIHByZXZpb3VzIG9jY2FzaW9uIHRoZSBoYWQgZWJiZWQgcmFwaWRseSBkb3duIHRoZSBiZWFjaCBhcyBvdGhlciBNUHMgd2l0aGRyZXcgdGhlaXIgbGV0dGVycy4KJ1Nvbmcgb2YgdGhlIFNlYScgU2VjdXJlcyBVSyBJcmVsYW5kIERpc3RyaWJ1dGlvbiBEZWFsCk1lYXN1cmUgYW5kIGFkZCAxMCAyMCBjbSBkZXBlbmRpbmcgb24gaG93IG11Y2ggeW91IHdhbnQgdG8ganVtcCBhbmQgeW91IGhhdmUgdGhlIGhpZ2h0IGEgYmFyIGZvciB5b3Ugc2hvdWxkIGJlIGluLiBCVVQsIHRoaW5rIGFib3V0IGlmIG90aGVycyB3aWxsIGJlIHVzaW5nIHRoaXMgYmFyLCBtaWdodCBiZSBmcmllbmRzIGFuZCBmYW1pbHkuIFNvIGlmIHRoZXkgYXJlIGEgbG90IHRhbGxlciB0aGFuIHlvdSwgbWFrZSBpdCBhIGxpdHRsZSBoaWdoZXIgKGl0IGlzIGVhc2llciB0byBnZXQgYSBib3ggdG8gc3RlcCB1cCBvbiB0byBnZXQgdG8gdGhlIGJhciBpZiB0byBoaWdoIHJhdGhlciB0aGVuIHN0YXJ0aW5nIHRvIGRpZyBhIGhvbGUgaWYgaXQgaXMgdG8gc2hvcnQpLgpJIGdldCBpdCBub3cuIFNvIGFwb2xvZ2llcyBhZ2Fpbi4gSSB0aG91Z2h0IEkgd2FzIHJlc3BvbmRpbmcgdG8gc29tZWJvZHkgZGVsaWJlcmF0ZWx5IG9iZnVzY2F0aW5nLi4gCk9uZSBvdGhlciBvcHRpb24gaXMgRmVkZXJhbCBJIEJvbmRzLCB3aGljaCBjdXJyZW50bHkgYXJlIGdldHRpbmcganVzdCB1bmRlciAyJS4gSG93ZXZlciwgeW91IGhhdmUgdG8gaG9sZCBhbiBJIEJvbmQgZm9yIGF0IGxlYXN0IDEyIG1vbnRocyBiZWZvcmUgeW91IGNhbiBjYXNoIGl0LCBhbmQgeW91IGNhbiBvbmx5IHB1cmNoYXNlICQxMGsgd29ydGggb2YgSSBCb25kcyBpbiBhIGNhbGVuZGFyIHllYXIuIApDb21tZXJjZSBXb3JrcwpFeGFtcGxlKHdob29wc2llIGl0IHdlbnQgYmFkIGZvciBUYXJnZXQpIFRhcmdldCBnb3QgYnVzdGVkIGZvciBhY2N1cmF0ZWx5IHByZWRpY3Rpbmcgc2VuZGluZyBwcmVuYXRhbCBjb3Vwb25zIHRvIGEgZmF0aGVyICxmcm9tIGhpcyB0ZWVuIGRhdWdodGVyIGFjdGlvbnMsIHdobyB3YXMgcHJlZ25hbnQgYnV0IGhhZCB0b2xkIGhpbSB5ZXQuIENvbmZyb250YXRpb24gYW5kIGhpbGFyaXR5IHRoZW4gZW5zdWVzIGFzIHRoZSBrYSBrYSBoaXQgdGhlIGZhbi4KVGhhbmtmdWxseSB0aGlzIHdhcyB0d28geWVhcnMgYWdvIGFuZCBub3RoaW5nIGhhcHBlbmVkIGFmdGVyIHRoYXQgYW5kIG9uIHRoZSB1cHNpZGUgdGhlIGFwYXJ0bWVudCBidWlsZGluZyB3YXMgcHJldHR5IGh1Z2UgYW5kIGhhZCBhIGZhaXIgYW1vdW50IG9mIHNlY3VyaXR5LiBJJ3ZlIHNpbmNlIG1vdmVkLCBidXQgeW91J3JlIHJpZ2h0IHRvIHBvaW50IHRoYXQgb3V0ICAgaXQncyBkZWZpbml0ZWx5IHNvbWV0aGluZyBpbXBvcnRhbnQgdG8ga2VlcCBpbiBtaW5kIGluIHNpdHVhdGlvbnMgbGlrZSB0aGlzLi4gClRoZSBiZWFjaCBpcyBxdWl0ZSBuaWNlLiAKRGlzY29ubmVjdGVkIG5lYXIgdGhlIHRvcCBvZiB0aGUgY2hpcHMgaW4gYm90aCwgY2FtZSBiYWNrIGJvdHRvbSA1IGluIGJvdGguIApIYXZpbmcgc3VjaCBhIHNtYWxsIG1pbGl0YXJ5LCBpdCBkb2VzbiBwZXJzdWUgdGhlc2UsIGhvd2V2ZXIuIApCZXBvb3Bib250aXQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpTbyB3ZSBhcmUgdGFsa2luZyBhYm91dCBjb250cmFjdHMgbGF3cyBoZXJlLCBidXQgaXQgYmVjb21lIGEgYmlnIGNvbnN1bWVyIHByb3RlY3Rpb24gYmxhbmtldCB0ZXJtIGZvciBhbnkgYW5kIGFsbW9zdCBldmVyeSBpc3N1ZSBhY3Jvc3MgdGhlIGJvYXJkLiBBbiBJU1AgdGhyb3R0bGluZyBhIGN1c3RvbWVyIGlzIHN1YnN0YW50aWFsbHkgZGlmZmVyZW50IHRoYW4gdGhlIHBlZXJpbmcgYW5kIHRyYW5zaXQgc2VydmljZXMgdGhleSBwcm92aWRlIHRvIGludGVybmV0IGJhY2sgaGF1bCBwcm92aWRlcnMuIFNvIEkgbGlrZSBob3cgeW91IGxpc3RlZCBjb21tb24gY2FycmllciwgYnV0IHRoYXQgaXMgb25lIG9mIHRoZSB0b3BpY3Mgbm90IHJlbGF0ZWQgdG8gbmV0IG5ldXRyYWxpdHkgKGFzIGEgY29udHJhY3QgbGFuZ3VhZ2UgZ29lcykuLiAKSSBjaGVja2VkIGl0IGFuZCBpdCB3YXMgYWJvdXQgNiBtb250aHMgcGFzdCBleHBpcmF0aW9uIGFuZCBsb29rZWQvc21lbGxlZCBmaW5lLiAKUGVvcGxlIHdobyB3YW50IE92ZXJ3YXRjaCB0byBiZSBncmltZGFyaywgZWRneSBvciBtb3JlIG1hdHVyZSBqdXN0IHNtYWNrIG1lIG9mIHRoZSBpbnNlY3VyaXR5IHBlb3BsZSB3aG8gZW5qb3kgY2FydG9vbnMgaW4gYWR1bHRob29kIHBvc3Nlc3MuIApJbiBjZXJ0YWluIGNhc2VzIHdoZW4gdGhlcmUgaXMgbm8gbG93IHdpbm5lciB0aGUgaGlnaCBoYW5kIHRha2VzIGFsbC4uIApQcmNhdXRpb25zIGQgbW9sY3VsZSBqb3VpdCBkIGV4Y2VsbGVudGUgdG9scmFuY2UgY3V0YW5lIGF1eCBkb3NlcyBub3JtYWxlcy4gQSBkb3NlcyBsZXZlcywgZWxsZSBwZXV0IG9jY2FzaW9ubmVyIHVuIGFzc2NoZW1lbnQgZGUgbGEgcGVhdSBldCBkZXMgbXVxdWV1c2VzLiBFbiB1c2FnZSBpbnRlcm5lLCB1biBzdXJkb3NhZ2UgZGV2aWVudCBwcm9ibG1hdGlxdWUuIApJIHdvdWxkIGhhdGUgdG8gbm90IGdldCBhIGhvbWUgYmVjYXVzZSBJIG1ha2Ugc21hbGwgd2l0aGRyYXdhbHMgb3IgaWYgYSBsYW5kbG9yZCBmZWVscyBJIGVhdCBvdXQgdG8gbXVjaC4gVGhhdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIE1lYXNhIHRlbmFudC4gTXkgY3JlZGl0IHJlcG9ydCBzaG93aW5nIEkgaGF2ZSBubyBldmljdGlvbnMgb3IgYnJva2VuIGxlYXNlcyBpcyBtb3JlIGltcG9ydGFudCB0aGFuIHdoYXQgSSBzcGVuZCBteSBtb25leSBvbi4gClRoZSBmb3JtZXIgYXJlIHRob3NlIHdoZXJlIHRoZSBvcmdhbml6YXRpb24gaG9sZGluZyB0aGUgdG91cm5hbWVudCBiZWZvcmVoYW5kIGRlY2lkZXMgdXBvbiB0aGUgd2lubmVyLiAKVGhhdCBpcyBiZWNhdXNlIGhlIHNlZXMgaGlzIGhpc3RvcmljYWwgbGVnYWN5IGFzIHRoYXQgb2YgYSBwcmVzaWRlbnQgd2hvIGVuZGVkIHdhcnMgYW5kIG1hZGUgdGhlbSBoYXJkZXIgdG8gc3RhcnQsIGluc3RlYWQgcmVpbnZlc3RpbmcgQW1lcmljYSdzIHJlc291cmNlcyBpbiBpdHMgb3duIHBlb3BsZS4gSGUgb3Bwb3NlZCB0aGUgSXJhcSB3YXIgaW4gMjAwMyBhbmQgcHJvbWlzZWQgaW4gMjAwOCB0aGF0IGhlIHdvdWxkIGVuZCB0aGUgdW5saW1pdGVkICJ3YXIgb24gdGVycm9yLCIgd2hpY2ggaGFkIGJlY29tZSBhIHBvdGVudGlhbCBibGFuayBjaGVjayBmb3IgVVMgcHJlc2lkZW50cyB0byB1c2UgZm9yY2UgYW55d2hlcmUgaW4gdGhlIHdvcmxkLgpUaGlzIHdhcyBhIHJlbGF0aXZlbHkgc21hbGxlciBvbmUsIGFuZCBJIHdhcyBwcmVzZW50ZWQgYSBsaW5ldXAgb2YgdGhyZWUgZ2lybHMuIApROiBJIGNhbiBiZWxpZXZlIEkgZ29pbmcgdG8gYXNrIHlvdSB0aGlzLCBidXQgZG8geW91IGhhdmUgYSBmYXZvdXJpdGUgYnJlZWQgb2YgY293PwpUaGUgcm9vbSBpcyB1cHN0YWlycyBub3cgYW5kIGtpbmRhIG91dCBvZiB0aGUgd2F5IGZyb20gYWxsIHRoZSBjYXNpbm8gYWN0aW9uLiBUaGlzIHBva2VyIHJvb20gaXMgb25lIG9mIHRoZSBxdWlldGVzdCBwb2tlciByb29tcyB0aGF0IEkgaGF2ZSBldmVyIGJlZW4gaW4uIFRoZXkgaGF2ZSBzZXZlcmFsIGJpZyBzY3JlZW4gdHYncyBvbiB0aGUgd2FsbHMgYW5kIHRoYXQgaXMgaXQuQXNrIGVtcHJlc3NnaW5nZXIgYWJvdXQgUmV2aWV3ZWQgU2VwdGVtYmVyIDI3LCAyMDEyIEZpcnN0IHRpbWVyVGhpcyB3YXMgbXkgZmlyc3QgdGltZSBnYW1ibGluZy4gCkZvciBleGFtcGxlLCBpZiB5b3UncmUgdGhpbmtpbmcgYWJvdXQgcmVudGluZyB5b3VyIHByb3BlcnR5IHRvIGJlIHVzZWQgYXMgYSBzdG9yYWdlIHVuaXQsIHlvdSB3b3VsZCBuZWVkIHRvIGZpbmQgb3V0IGlmIHlvdXIgaW5zdXJhbmNlIHBvbGljeSBjb3ZlcnMgdGhlIHJlbnRlcidzIHByb3BlcnR5LiAKT3ZlcnZpZXcgZm9yIGpoZXJhem9iCkkgcmVtZW1iZXIgYmVpbmcgaW4gaGlnaCBzY2hvb2wgYW5kIHRoaW5raW5nIHRoYXQgSSBjb3VsZG4ndCBoYW5kbGUgc29tZSBzY2llbmNlIGNsYXNzZXMgSSB3YXMgaW50ZXJlc3RlZCBpbiBiZWNhdXNlIEkgd2Fzbid0IHNtYXJ0IGVub3VnaC4gCkJyb3dhcmQgU2Nob29scyBPZmZpY2lhbGx5IEFubm91bmNlIEJyaWFuIEthdHogQXMgQ2hpZWYgT2YgU2FmZXR5IFNlY3VyaXR5CllvdSBzYWlkIGEgY3VycmF3b25nIGlzIGEgbWFwZ2llLCB3aGljaCBpcyBub3QgdHJ1ZSB1bmxlc3MgeW91IG9rYXkgd2l0aCBjYWxsaW5nIGFsbCBtZW1iZXJzIG9mIHRoZSBhcnRhbWlkcyBmYW1pbHkgY3VycmF3b25ncywgd2hpY2ggbWVhbnMgeW91IGNhbGwgYnV0Y2hlciBiaXJkcyAsIHdvb2Rzd2FsbG93cywgYW5kIG90aGVyIGJpcmRzIGN1cnJhZ29uZ3MsIHRvby4gCldlIHNob3VsZCBzdG9wIHRhbGtpbmcgYWJvdXQgMjAwMiBsaWtlIGl0IHdhcyBhIHJlYWwgYWNoaWV2ZW1lbnQuIFRoZSBmaXJzdCBvcHBvbmVudCB0aGF0IGNvdWxkIGJlIGNvbnNpZGVyZWQgIndvcnRoeSIgd2FzIEJyYXppbCBpbiB0aGUgZmluYWxzLiAKQVVESU8gRklMRW50cmV2dWUgYXZlYyBNaWNoZWwgQXByaWwgZGlyZWN0ZXVyIGducmFsIGR1IENvbGxnZSBKZWFuIGRlIEJyYmV1ZgpJIHRoaW5rIGRhaWx5IGhvdyBhd2Z1bCB0aGUgbGl2ZXMgYXJlIG9mIHRob3NlIHdobyBkb24gd2FudCBqdXN0aWNlIGZvciBUSCBieSBibGFtaW5nIFNBIGFuZCBCRC4gVGhlIGhhdGUgaW4gdGhlaXIgaGVhcnRzLCB0aGV5IHdlYXIgb24gdGhlaXIgc2xlZXZlcy4gU29tZWhvdyB0byB0aGUgaGF0ZXJzIHRoZXkgYXJlIHNhdGlzZmllZCBpZiB0aGUgcmVhbCBraWxsZXJzIG9mIFRIIGdvIGZyZWUsIGJlY2F1c2UgU0EgaXMgYSBiYWQgbWFuLi4gCkhhZCB5b3UgbWVzc2FnZWQgdGhlIG1vZCBxdWV1ZSwgeW91IGhhdmUgc2VlbiBuZWl0aGVyIG15c2VsZiBub3IgdGhlIG90aGVyIG1vZHMgYXJlIGluYWN0aXZlLiAKSXMgdGhlIHJlYWwgZXN0YXRlIG1hcmtldCBqdXN0IHRvbyBnb29kIHRvIGJlIHRydWUgcmlnaHQgbm93ClRoZSBhbW91bnQgb2YgdGltZSBpdCB0YWtlIHlvdSB0byBraWxsIGNvdmVuIGlzIGhhcmQgdG8gcHJlZGljdC4gCkxhYmF0dCBCcmV3aW5nIENvbXBhbnkgTGltaXRlZApXaGVuIGJ1c3ksIG1vc3Qgb2YgdGhlIHBsYXllcnMgdGlnaHRlbiB1cC4gCllvdSBhY3QgYXMgaWYgeW91IGFyZSBzdHJvbmcgd2hlbiBjb21tdW5pY2F0aW5nIHZpYSBlbGVjdHJvbmljIHRleHQgYmFzZWQgbWVzc2FnZXMsIHlldCB5b3UgYXJlIGEgY293YXJkIGluIHBlcnNvbi4gTXkgZmVtYWxlIGNvbXBhbmlvbiB3b3VsZCBsaWtlbHkgZW5kIHlvdSBpZiB5b3UgdHdvIHdlcmUgdG8gZW5nYWdlIGluIGZpc3RpY3VmZnMuIFdoYXQgZG8geW91IGltYWdpbmUgdG8gYWNjb21wbGlzaD8uIApXaXRoIHRoZSBhZHZhbmNlcyBpbiB0ZWNobm9sb2d5LCBnYW1pbmcgYW5kIGF3YXJlbmVzcywgYWxsIGZvcm1zIG9mIE9tYWhhIFBva2VyIGFyZSBiZWNvbWluZyBtb3JlIGFuZCBtb3JlIHBvcHVsYXIgd2hpY2ggY2FuIGJlIHNlZW4gZnJvbSB0aGUgaW5jcmVhc2luZyBvbmxpbmUgcG9rZXIgcm9vbXMuIE1vc3Qgb2YgdGhlc2Ugd2Vic2l0ZXMgaGF2ZSBhbGwgdGhlIHZhcmlhdGlvbnMgb2YgdGhlIGdhbWUgYXZhaWxhYmxlIHdoZXRoZXIgaXQgaXMgUG90IExpbWl0IE9tYWhhLCBQb3QgTGltaXQgT21haGEgSGkgTG8sIE9tYWhhIFRvdXJuYW1lbnRzIGFuZCBmaXhlZCBsaW1pdCB2YXJpYXRpb25zIG9mIHRoZSBzYW1lIGdhbWVzLiBCdXQgdGhlIHBvaW50IGhlcmUgaXMgaG93IHRvIGRlY2lkZSB3aGljaCB3ZWJzaXRlIGJlc3Qgc3VpdHMgeW91ciBzdHlsZSBvZiBwbGF5Li4gCkFyb2hhLiAKSSdtIGFjdHVhbGx5IHdhaXRpbmcgZm9yIHRoZSBndXkgdG8gc2hvdyB1cCBhbmQgcHV0IGluIG15IHBob25lIGFuZCBmaXggdGhlIGNhYmxlLiBUaGVuIEknbSBnb2luZyB0byBDYXJyZWZvdXIgdG8gcGljayB1cCBhIGRpc2ggc3RyYWluZXIgYW5kIHN0b3JhZ2UgYm94IGFuZCByZXR1cm4gdGhlIHN1bmRyZXNzIEkgZ290IHRoYXQncyBhYm91dCBhIG1pbGUgdG9vIGJpZy4KUnVsZSA1QjogUGxlYXNlIGJlIHN1cmUgdG8gcmVuYW1lIHlvdXIgZmlsZXMgdG8gc29tZXRoaW5nIHVuaXF1ZSEgSWYgeW91ciBwb3N0IGlzIHJlbW92ZWQgZm9yIHJ1bGUgNSBkdWUgdG8gb3VyIGJvdCBpdCB3aWxsIHN0YXkgcmVtb3ZlZCEKU3llZCdzIGF0dG9ybmV5IEp1c3RpbiBCcm93biBzYWlkIGluIGEgc3RhdGVtZW50IHRoYXQgdGhleSBhcmUgImRldmFzdGF0ZWQiIGJ5IHRoZSBkZWNpc2lvbiAiYnV0IHdlIHdpbGwgbm90IGdpdmUgdXAgb24gQWRuYW4gU3llZC4iClNlZSB0aGUgZmlndXJlIGJlbG93OkNvcm9uYXJ5IGFydGVyaWVzIHN1cHBseSBibG9vZCB0byB0aGUgaGVhcnQgbXVzY2xlLiBXaGVuIGEgYmxvY2thZ2Ugb2NjdXJzIGluIG9uZSBvZiB0aGVzZSBhcnRlcmllcywgYmxvb2QgZmxvdyB0byB0aGUgaGVhcnQgbXVzY2xlIGlzIGRlY3JlYXNlZC4gVGhpcyBiZWNvbWVzIG1vc3QgZXZpZGVudCBkdXJpbmcgZXhlcnRpb24uIER1cmluZyBleGVydGlvbiwgdGhlIGhlYXJ0IG11c2NsZSBpcyB3b3JraW5nIGhhcmRlciBhbmQgbmVlZHMgbW9yZSBveHlnZW4gZW5yaWNoZWQgYmxvb2QgdGhhbiB1c3VhbC4gClRoZSBsb25nZXIgdGhhdCBwZW9wbGUgY2FuIHBsYXkgYW5kIHRoZSBtb3JlIHZhcmlhbmNlIHRoZSBuZXR3b3JrIGNhbiBpbnRyb2R1Y2UgaW50byB0aGUgZ2FtZSwgdGhlIGxvbmdlciB0aGUgbmV0d29yayBjYW4gY29sbGVjdCByYWtlLiAKVGhlIGZlYXIgb2YgbG9zaW5nIHlvdXIgc3RhY2sgY2FuIG1ha2UgaXQgaGFyZCB0byBjb21taXQgd2hlbiB5b3Ugb3VnaHQgdG8sIGJlY2F1c2Ugb2YgdGhlIGZlYXIgb2YgbG9zcy4uIApJdCBhbnl0aGluZyBmb21yIDEwIDE1IHVzdWFsbHkgKG90aGVyIHRoYW4gMjAgdGhlbiAxOCB0aGUgZmlyc3Qgd2VlaykgYnV0IGl0IG5vdCBhbHdheXMgaW4gYW4gaW5jcmVhc2luZyBmYXNoaW9uIChmb3IgZXhhbXBsZSBJIGRpZCAxMyBsYXN0IHdvcmtvdXQgYW5kIDEwIHRoaXMgd29ya291dCBidXQgaXQgYXQgdGhlIHNhbWUgd2VpZ2h0KS4gQW55IGFkdmljZT8gSSBvbmx5IGRvaW5nIG15IEFNUkFQIDErIHNldCBhdCAxMDAgbGJzIHNvIEkgZmVlbCBsaWtlIEkgc2hvdWxkIGJlIGF0IHRoZSBwb2ludCB3aGVyZSBJIGNhbiBzdGlsbCBtYWtlIGEgbG90IG9mIHByb2dyZXNzIGF0IGEgZGVjZW50IHdlaWdodC4gCkdlb3JnZSBXLiBCdXNoIGFiYW5kb25lZCBoaXMgc3R1ZGllZCBhaXIgb2YgbWlsZCBzZWRhdGlvbiBvbmx5IG9uY2UgZHVyaW5nIGhpcyBwcmltZSB0aW1lIHByZXNzIGNvbmZlcmVuY2UgbGFzdCB3ZWVrLiBWb3RlIG9uIElyYXEuIApJZiB5b3UgZG8gZ2V0IGEgcGVkaWN1cmUgKG9yIG1hbmljdXJlKSB3aGlsZSBwcmVnbmFudCwgdGFrZSBzb21lIHByZWNhdXRpb25zLiAKRG9lcyBhIHBhaXIgb2YgZml2ZXMgYmVhdCBhIHBhaXIgb2YgYWNlcwpUcmFkaXRpb25hbGx5LCBQb2tlciBoYWQganVzdCBhIGZldyB2YXJpYW50cyAgIHN0dWQgcG9rZXIsIGRyYXcgcG9rZXIsIGNvbW11bml0eSBjYXJkIHBva2VyIChvciBmbG9wIHBva2VyKSBhbmQgdGhlIG1vc3QgY29tbW9ubHkgcGxheWVkIHN0cmFpZ2h0IHBva2VyLiBCdXQgbm93LCBJbnRlcm5ldCBoYXMgZXhwZXJpbWVudGVkIGFuZCBpbnZlbnRlZCBxdWl0ZSBhbiBleGhhdXN0aXZlIGxpc3Qgb2YgcG9rZXIgZ2FtZXMgdGhhdCBjYW4gYmUgcGxheWVkIG9ubGluZS4gSG9sZGVtIFBva2VyIGhhcyBvdmVyIDE2IHZhcmlldGllcyBvbmxpbmUgd2l0aCBzb21lIGludGVyZXN0aW5nIG5hbWVzIGxpa2UgUGluZWFwcGxlLCBNYW5pbGEsIEJpbGxhYm9uZywgU2hhbmdoYWksIFBzeWNobyBhbmQgb25lIHRoYXQncyBjYWxsZWQgJ3RoZSBnb29kLCB0aGUgYmFkIGFuZCB0aGUgdWdseScuIDcgc3R1ZCBwb2tlciBjYW4gYWxzbyBiZSBwbGF5ZWQgaW4gc2V2ZXJhbCB2YXJpYW50cyBsaWtlIENoaWNhZ28gYW5kIHNpeCBraWNrLCA1IHN0dWQgY2FuIGJlIHBsYXllZCBhcyBzYXRhbiBvciBzb2tvIGFuZCBkcmF3IGNhbiBiZSBwbGF5ZWQgYXMgZG9nYnV0dCBhbmQgYW5hY29uZGEuClVzdWFsbHksIHlvdSdsbCBoYXZlIHRvIGNvbXBsZXRlIGEgc2hvcnQgdHJhaW5pbmcgcHJvZ3JhbSwgd2hpY2ggeW91IG1pZ2h0IGJlIGFibGUgdG8gY29tcGxldGUgYXQgaG9tZSwgYW5kIHRoZW4gcGFzcyBhbiBleGFtIGZvciBub3RhcnkgcHVibGljIGxpY2Vuc2luZy4gWW91IGNhbiBzZWVrIGxpY2Vuc2luZyBpbmZvcm1hdGlvbiBmcm9tIHlvdXIgc3RhdGUncyBjb3VydCByZXBvcnRpbmcgYm9hcmQgb3IgYSBzaW1pbGFyIGFnZW5jeS4gCkF0dHJpYnV0ZXMgYXJlIHRoZSBzZXZlbiB2aXJ0dWVzIG9mIEJ1c2hpZG8sIGFuZCByYW5nZSBmcm9tIDAgNy4gVGhleSBhbHNvIHNlcnZlIGFzIGEgcm9sZXBsYXkgbW9kZWwsIGlzIHlvdXIgY2hhcmFjdGVyIG1vcmUgaW52ZXN0ZWQgaW4ganVzdGljZSwgb3IgaG9ub3I/IFNraWxscyBhcmUgYnJva2VuIGluIHRvIHNldmVuIGNhdGVnb3JpZXMsIGVhY2ggd2l0aCBzZXZlbiBzdWJjYXRlZ29yaWVzIGFuZCByYW5nZSBmcm9tIDAgICA1LiBXaGVuIHlvdSBjcmVhdGUgeW91ciBjaGFyYWN0ZXIgeW91IGFzc2lnbiBhIHJlbGF0ZWQgYXR0cmlidXRlIHRvIGEgcGFydGljdWxhciBza2lsbCwgZWFjaCBhdHRyaWJ1dGUgY2FuIG9ubHkgYmUgdXNlZCBvbmNlIHBlciBjYXRlZ29yeS4gClRoZSByZXN1bHRhbnQgZGF0YSBzaG93ZWQgdGhhdCwgb3ZlciB0aGUgcGVyaW9kIG9mIDE1IHllYXJzIHN0dWRpZWQsIDEwLjggcGVyY2VudCBvZiBwYXRpZW50cyBzdWZmZXJpbmcgZnJvbSBhbGxlcmdpYyBkaXNlYXNlcyBhdCBzb21lIHBvaW50IHdlcmUgZGlhZ25vc2VkIHdpdGggYSBwc3ljaGlhdHJpYyBkaXNvcmRlci4gCkZhc2NpbmF0aW5nIGFydGljbGUuIEkgbG9uZyB0aG91Z2h0IHRoYXQgdGhlcmUgd2FzIHNvbWUga2luZCBvZiBpZGVudGlmaWFibGUsIHBlcmhhcHMgZXZlbiBxdWFudGlmaWFibGUsIGZhY3RvciBiZXlvbmQgbWVyZWx5IGV4Y2VsbGVudCBleGVjdXRpb24sIHRoYXQgZW5hYmxlcyBjb21wYW5pZXMgbGlrZSB5b3UgbWVudGlvbmVkIGhlcmUgdG8gc3VjY2VlZCBpbiBhbHJlYWR5IHdlbGwgZXN0YWJsaXNoZWQsIG1hdHVyZSBtYXJrZXRzIGFuZCBpbmR1c3RyaWVzLiAKU3dpbiBDYXNoOiBNeSBmYXZvcml0ZSBwYXJ0IGlzIHRoYXQgYSBsb3Qgb2YgdGltZXMgcGVvcGxlIGtub3cgdGhlIGJpZyBicmFuZCBuYW1lIHNjaG9vbHMsIHRoZXkga25vdyB0aGUgdG9wIHBsYXllcnMuIEJ1dCB0aGVyZSBpcyBhbHdheXMgdGhhdCBDaW5kZXJlbGxhLiBUaGVyZSBhcmUgcGVvcGxlIHdobyBiZWNvbWUgbGVnZW5kYXJ5LCBob3VzZWhvbGQgbmFtZXMuIApUaGV5IGRlZmluaXRlbHkgaGF2ZSBhIHBvaW50IHdpdGggdGhlIG9uZSBndXkuIExpdGVyYWxseSBhbGwgb2YgaGlzIHBvc3RzIGZvciBxdWl0ZSBhIHdoaWxlIGFyZSBhYm91dCBHTU8sIGV0Yy4gaXQncyBkZWZpbml0ZWx5IHN1c3BpY2lvdXMuIE5vdCB0byBtZW50aW9uLCBjb21wYW5pZXMgYXN0cm90dXJmaW5nIFJlZGRpdCBpcyBub3RoaW5nIG5ldyBvciBhIG15dGguIEl0J3Mgbm8gc2VjcmV0IHRoYXQgTW9uc2FudG8gaGFzIHRyaWVkIHRvIHN3YXkgcHVibGljIG9waW5pb24gb24gUmVkZGl0IHRocm91Z2ggYWRzLCBldGMuClRoZW4sIGdldCBvdXQgdGhlcmUgYW5kIHJlYXAgdGhlIGJlbmVmaXRzIG9mIHlvdXIgdmFjYXRpb24gZm9yIG9uZS4uIApFbGxlIG5vdXMgaW52aXRlICB0aXJlciB1biBlbnNlaWduZW1lbnQgKCJhbGVwaCBzaWduaWZpZSBhdXNzaSBhcHByZW5kcmUpIHF1aSBlc3QgIHJlY2hlcmNoZXIgZW4gbm91cyBhZmluIGRlIGd1cmlyIGxhIGJsZXNzdXJlIHJlc3NlbnRpZS4uIAoiUHJldmlvdXNseSBpdCB3YXMgYSBtb25vcG9seS4gQW5kIGl0IHdhcyBjYXVzZWQgYnkgdGhlIHN0YXRlLCBkb24ndCBnZXQgbWUgd3JvbmcuIFdlJ3JlIG5vdCBhdHRhY2tpbmcgdGhlbSwgdGhleSBqdXN0IHRvb2sgYWR2YW50YWdlIG9mIHdoYXQgd2FzIGF2YWlsYWJsZSBhdCB0aGUgdGltZS4gQnV0IGJlY2F1c2Ugb2YgbW9yYXRvcml1bXMgb3Igd2hhdGV2ZXIgdGhlcmUgd2FzIGEgbW9ub3BvbHkgYW5kIG9ubHkgY2VydGFpbiBwb2tlciByb29tcyBoYWQgdGhlIGFiaWxpdHkgdG8gY29uZHVjdCBnYW1lcy4gUG9rZXIgcm9vbXMgZG9uJ3QgZXhpc3QsIHNvIG5vdyBpdCdzIGluIGJhcnMgYW5kIHJlc3RhdXJhbnRzLiB0aGUgY2hhcml0aWVzIGRldGVybWluZSB3aGVyZSBpdCBpcyBub3csIiBLYWxtIHNhaWQuCkluIExvTCBvcGVuaW5ncyB1c3VhbGx5IHdhbnQgdG8gYmUgYXMgR1RPIGFzIHlvdSBjYW4gY29uY2VpdmUgKGZhbm5pbmcpLCB1bmxlc3MgeW91ciBvcHBvbmVudCBpcyBjbGVhcmx5IG1ha2luZyBtZXRhIGdhbWUgbGV2ZWwgMS8yIGVycm9ycyAoZGVtb25zdHJhdGluZyB3ZWFrIG9wZW5pbmdzIG9yIGFkanVzdGluZyB0aGUgc2FtZSB3YXkgZXZlcnkgdGltZSB0byBjZXJ0YWluIG9wZW5pbmdzKS4gV2hlcmUgeW91IGNhbiBkZXZpYXRlIHVzdWFsbHkgZGVwZW5kcyBvbiBkcmFmdCwgYnV0IHRoZXJlIGFyZSBsb3RzIG9mIHBsYXVzaWJsZSBkcmFmdHMsIGFuZCBvZmMgdGhlcmUgYXJlIGFsc28gb25seSBhIGxpbWl0ZWQgbnVtYmVyIG9mIHBsYXVzaWJsZSBvcGVuaW5ncyB3aGljaCBzY3JpbXMgdXN1YWxseSBzZXQgdGhlIG1ldGEgZm9yIChhbmQgb2J2aW91c2x5IHVzIHBlb25zIG1pc3MgdGhpcyBpbmZvKS4gCkkgYW0gZmluYWxseSBvbiB0aGUgbGFzdCBib29rIG9mIEhhcnJ5IFBvdHRlci4gCkhvbGQgZW0ncyBiaWdnZXN0IGFkdmFudGFnZSB0byBhbGwgdGhlIG90aGVyIHZhcmlhdGlvbnMgb2YgUG9rZXIgaXMgb25lIGRlY2sgb2YgY2FyZHMgY2FuIHNlcnZpY2UgdXAgdG8gMjMgcGxheWVycyBjYW4gdGFrZSBwYXJ0ICgyMiBwbGF5ZXJzIGlmICJidXJuIiBjYXJkcyBhcmUgdXNlZCkgbWFraW5nIGZvciBodWdlIHBvdHMuIEhvd2V2ZXIgdGhlIGdhbWVzIGFyZSBnZW5lcmFsbHkgbGltaXRlZCB0byA4IEluIGFsbCBmb3JtcyBvZiBQb2tlciBFWENFUFQgVGV4YXMgSG9sZCBFbSwgdGhlcmUgaXMgbm8gIkFsbCBJbiIgYmV0LiAKVGhlIGZhY3QgdGhhdCB0aGUgU2luZGhpIGxhbmd1YWdlLCBTaW5kaGkgY3VsdHVyZSwgYW5kIFNpbmRoaSBzb2NpbyBwb2xpdGljYWwgZGlzY291cnNlIGF0IGxhcmdlIGFyZSBzbyByZW1vdmVkIGZyb20gdGhlIG92ZXJhcmNoaW5nIGRpc2N1c3Npb25zIGFib3V0IEthcmFjaGkgaXMgdGVsbGluZy4gSW4gdGhlc2Ugc2l4IGRlY2FkZXMgUGFraXN0YW5pIGhpc3RvcmlhbnMgaGF2ZSBsYXVkZWQgdGhlIHNhY3JpZmljZXMgb2YgaW1taWdyYW50cyBmcm9tIFVQLCBCaWhhciBhbmQgUHVuamFiLiBUcmlidXRlcyBhcmUgZXZlbiBwYWlkIHRvIHRoZSBzYWNyaWZpY2VzIG9mIEJlbmdhbGkgc3BlYWtpbmcgUGFraXN0YW5pcyAgIG5vdHdpdGhzdGFuZGluZyB0aGUgcGFydGl0aW9uIG9mIFBha2lzdGFuIGluIDE5NzEuIApXYXkgb2YgbG9va2luZyBhdCB0aGlzLCBzaW5jZSB0aGUgaWRlYSBvZiB0aGUgNCwwMDAgbGIgYm9tYiBpcyBpbnRyb2R1Y2VkIGhlcmUsIGlzIHZpYSBvcmRuYW5jZS4gCkFsbCBvZiB0aGlzIGRvZXMgd29yayB0byBzdXBwb3J0IHlvdXIgZmluYWwgcG9pbnQsIHRob3VnaCEgTnVsbCBwb3NpdGlvbiBhcyBhbiBpbXBvcnRhbnQgY29udHJvbCBmbG93IHRvb2wgaW4gSmF2YSBwcm9iYWJseSB3b3VsZCBoYXZlIG5ldmVyIGhhcHBlbmVkIGlmIEphdmEgc3VwcG9ydGVkIHN1bSB0eXBlcyBpbiBhIG5pY2Ugd2F5LgpBIGJvb2sgd2lsbCBoZWxwIHlvdSBsaWtlIGEgbWVudG9yLCBsaWtlIGEgZnJpZW5kLiAKSSBsaXZlZCA2IGhvdXJzIGZyb20gdGhlIG5lYXJlc3QgQXNpYW4gZ3JvY2VyeSBzdG9yZSAobGV0IGFsb25lIGVuY2xhdmUpIGFzIHdlbGwgYXMgaW4gdGhlIGhlYXJ0IG9mIGVuY2xhdmVzLiBUaGUgeWVhcnMgSSBzcGVudCBpbiByZW1vdGUgYXJlYXMgZXNwZWNpYWxseSBhcyBhIGNoaWxkIHdlcmUgbm90IGZ1biBhdCBhbGwsIGJ1dCBpdCBtYWRlIG1lIHRoYXQgbXVjaCBtb3JlIGdyYXRlZnVsIHRvIGxpdmUgaW4gYW4gZW5jbGF2ZSBub3cuIFBlb3BsZSB3aG8gZ3JldyB1cCBoZXJlIGhhdmUgbm8gaWRlYSB3aGF0IGl0IGxpa2UgdG8gdGFrZSBhIGZlcnJ5IGFuZCBkcml2ZSBzZXZlcmFsIGhvdXJzIHRvIGZpbmQgYSBoYWlyZHJlc3NlciB3aG8ga25vd3MgaG93IHRvIGN1dCB5b3VyIGhhaXIuCjEgbGl0LiBGIERTR1ZPLiAKV2hpbGUgaXQgaXMgbm9ybWFsIHRvIGRlbGVnYXRlIHRoZSBmaW5hbmNpYWwgbWFuYWdlbWVudCBhbmQgY29sbGVjdGlvbnMgdG8gdGhlIHN0cmF0YSBtYW5hZ2VyLCBpdCBpcyBzdGlsbCB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhlIHN0cmF0YSBjb3VuY2lsIHRvIHJldmlldyB0aGUgZmluYW5jaWFsIGRvY3VtZW50cyBhbmQgdHJhbnNhY3Rpb25zLiBXaGlsZSBub3QgZXhoYXVzdGl2ZSwgaGVyZSBpcyBhIGNoZWNrbGlzdCBvZiBkb2N1bWVudHMgYW5kIHJlcG9ydHMgdG8gcmV2aWV3IHRoYXQgYXJlIGhlbHBmdWwgZm9yIHlvdXIgdHJlYXN1cmVyIGFuZCBjb3VuY2lsOiBtb250aGx5IHJlY29uY2lsZWQgZmluYW5jaWFsIHJlcG9ydHM7IGluZm9ybWF0aW9uIGRpc2Nsb3NlZCBvbiBmb3JtIEIgaW5mb3JtYXRpb24gY2VydGlmaWNhdGVzIGFuZCBmb3JtIEYgcGF5bWVudCBjZXJ0aWZpY2F0ZXM7IGFnaW5nIHN1bW1hcnkgb2YgYWxsIHJlY2VpdmFibGVzLCBpbmNsdWRpbmcgZmluZXMsIHVzZXIgZmVlcywgZGFtYWdlcyBhbmQgaW5zdXJhbmNlIGRlZHVjdGlibGVzOyBjcm9zcyBtb25pdG9yaW5nIG9mIHRoZSBhbm51YWwgYnVkZ2V0IGNvbXBhcmVkIHdpdGggZXhwZW5zZXM7IGludmVzdG1lbnRzIGZvciB0aGUgY29udGluZ2VuY3kgcmVzZXJ2ZSBmdW5kIGFuZCBzcGVjaWFsIGxldmllcyB0byBtYXhpbWl6ZSByZXR1cm5zIGFuZCBtYW5hZ2UgcmVxdWlyZWQgY2FzaCBmbG93czsgYW5kIGEgcmV2aWV3IG9mIHRoZSBkZXByZWNpYXRpb24gcmVwb3J0IHRvIHBsYW4gZm9yIHVwY29taW5nIHJlbmV3YWxzIGFuZCBmdW5kaW5nIHJlcXVpcmVtZW50cyBvciByZXNvbHV0aW9uIHBsYW5uaW5nIGZvciBnZW5lcmFsIG1lZXRpbmdzLgpUaGlzIGxpZmUgaXMgeW91cnMgdG8gbGl2ZS4gCkhlcmUgbXkgb3BpbmlvbiBhcyBzb21lb25lIHdobyB3b3JrcyBpbiBhIHNob3AuCk9uMW9ucyAgMSBwb2ludCAgc3VibWl0dGVkIDI5IGRheXMgYWdvCkFmdGVyIGEgeWVhciBvZiBoYXJkIHdvcmssIHdlIGZpbmFsbHkgZm91bmQgdGhlIGFuc3dlcjogOTQ4LDU5OSByZXF1aXJlbWVudHMgaW4gbW9yZSB0aGFuIDEyLDAwMCBzdGF0dXRlcywgcmVndWxhdGlvbnMsIHBvbGljaWVzIGFuZCBmb3Jtcy4gSGVyZSBob3cgdG8gZml4IHRoYXRDYW5hZGEgcHJvZHVjdGl2aXR5IGhhcyBoaXQgc21hbGwgYnVzaW5lc3NXaGlsZSB0aGUgc2NpZW5jZSBpcyBub3Qgc2V0dGxlZCBvbiB0aGUgcmlnaHQgbnVtYmVyIG9mIHJ1bGVzIGluIGEgcHJvdmluY2UsIGZlZWRiYWNrIGZyb20gbmF0aW9uYWwgcmVkIHRhcGUgcmVkdWN0aW9uIGxlYWRlcnMsIHN1Y2ggYXMgdGhlIENhbmFkaWFuIEZlZGVyYXRpb24gb2YgSW5kZXBlbmRlbnQgQnVzaW5lc3MgKENGSUIpLCBtdW5pY2lwYWwgY291bmNpbGxvcnMgYW5kIGxvY2FsIGNoYW1iZXJzIG9mIGNvbW1lcmNlIG1hZGUgaXQgY2xlYXIgdGhhdCBuZWFybHkgOTUwLDAwMCB3YXMgdG9vIG1hbnkuIApJIGZpbmQgdGhhdCB3aGVuIEkganVzdCBzaXQgb3V0c2lkZSAoSSdtIHRvbyBsYXp5IHRvIHdhbGsgYXJvdW5kKSB3aGVuIEkgYW0gYW5ncnksIEkgY2FsbSBkb3duLiAKSXQgdG9vayBtZSBvdmVyIHR3byBob3VycyB0byBjcmF3bCB0byBteSBiZWRyb29tIHNsaWRlIGludG8gYSBwYWlyIG9mIHN3ZWF0cGFudHMgSSBoYWQgbGVmdCBvbiB0aGUgZmxvb3IgdGhlbiBnbyBteSBwaG9uZSwgYXMgSSBrZXB0IHBhc3Npbmcgb3V0IGZyb20gdGhlIGV4Y3J1Y2lhdGluZyBwYWluLiAKQmVmb3JlIGhlIHJldGlyZWQgZnJvbSBoaXMgcG9zaXRpb24gYXMgUHJlc2lkZW50IG9mIEdhcmxhbmQgQ2FuYWRhIEluYy4sIGhlIGhhZCB0aGUgcGxlYXN1cmUgb2Ygd2F0Y2hpbmcgdGhlIGJ1c2luZXNzIGdyb3cgYW5kIGZsb3VyaXNoIGFzIGEgZGlyZWN0IHJlc3VsdCBvZiBoaXMgaGFyZCB3b3JrIGFuZCBjb25zdW1tYXRlIGxlYWRlcnNoaXAuIEEgbWFuIG9mIGdyZWF0IGludGVncml0eSwgQmlsbCB0cmVhdGVkIGhpcyBjdXN0b21lcnMgYW5kIGhpcyBzdGFmZiB3aXRoIGdyZWF0IHJlc3BlY3QgYW5kIGFwcHJlY2lhdGlvbiwgaW5zcGlyaW5nIHByb2ZvdW5kIGxveWFsdHkgZnJvbSBhbGwuIApBbmQgaWYgSSBkb24gd2VhciBteSBzZXh1YWxpdHkgb24gbXkgc2xlZXZlLCBob3cgY2FuIEkgZXZlciBnZXQgYW55IHdoZXJlIGluIHRoaXMgd29ybGQ/IExvb2sgYXQgcG9vciBTdXByZW1lIENvdXJ0IG5vbWluZWUgRWxlbmEgS2FnYW4sIHdob20gSSBteXNlbGYgc3VnZ2VzdGVkIHdhcyBhbnl0aGluZyBidXQgc3RyYWlnaHQgaW4gbXkgcHJldmlvdXMgcG9zdC4gCkdyYW50ZWQsIEkgYWN0dWFsbHkgc3R1ZGllZCBTaGFrZXNwZWFyZSB3aGlsZSBJIG9ubHkgcmVhZCB0aGUgTmliZWx1bmdlbmxpZWQgaW4gdHJhbnNsYXRpb24sIHNvIHRoYXQgcHJvYmFibHkgYSB2ZXJ5IHN1YmplY3RpdmUgcGVyc3BlY3RpdmUuIEl0IHN0aWxsIHN1cnByaXNlcyBtZSB0aGF0IG91ciBvcGluaW9ucyBkaWZmZXIgdGhhdCBtdWNoLCB0aG91Z2guLiAKQ3V0ZS4gCkhpcyB0ZWNobmlxdWUgd2FzIG1vcmUgZ2VudGxlIGJ1dCBncmluZGluZywgYW5kIGl0IGZlbHQgcGxlYXN1cmFibGUgd2l0aCBubyBmcmljdGlvbiBidXJuLCB5ZXQgaGUgd2FzIGEgTE9UIHRoaWNrZXIgaW4gc2l6ZSB0aGFuIG15IGV4LiBTbyB0ZWNobmlxdWUgaXMgdmVyeSBpbXBvcnRhbnQuIApUaGUgcmVzdCBvZiB3aGF0IHNoZSBoYXMgdG8gc2F5ICh0aGUgaGVhZGxpbmUgcXVvdGVzKSBhcmUganVzdCBzbyBvdXQgb2YgdG91Y2ggSSdtIGV4YXNwZXJhdGVkLiBJIHdvbmRlciB3aGVyZSBzaGUgd29ya2VkIGZvciBmcmVlIHdoZW4gc2hlIHdhcyB5b3VuZz8gTm8gbWVudGlvbiBvZiB0aGF0IGFzIEknbSBzdXJlIGl0IGRpZG4ndCBoYXBwZW4uCiJNeSBvbmx5IG9waW5pb24gaXMgaXQgd2lsbCBub3QgaGF2ZSBhbnkgZ3JlYXQgZWZmZWN0IG9uIHRoZSBsb2NhbCBhcmVhLCBvciB0aGUgcHVicyBhbmQgdGhlIGNsdWJzIGluIHRoZSBsb2NhbCBhcmVhLCIgaGUgc2FpZC4KSW4gZmFjdCwgb25seSBLZXZpbiBsb3N0IG1vbmV5IGFuZCB0aGUgcmVzdCBvZiB1cyB3b24gc3Vic3RhbnRpYWwgYW1vdW50cy4gR3JhbnRlZCB3ZSB3b3VsZG4ndCByZWNvbW1lbmQgdGFraW5nIHRoaXMgcm91dGUsIGJ1dCBlYWNoIG9uZSBvZiB1cyBoYXMgYSBzeXN0ZW0gdGhhdCB3b3JrcyByZWFsbHkgd2VsbC4gClN0YXRlIE9mIE1pY2hpZ2FuIE9mZmljZXMgQ2xvc2VkIER1ZSBUbyBFeHRyZW1lIFdlYXRoZXJFeHRyZW1lIGNvbGQgYW5kIGhlYXZ5IHNub3cgaGFzIGxlZHRvIHRoZSBjbG9zdXJlIG9mIE1pY2hpZ2FuIHN0YXRlIGdvdmVybm1lbnQsIGluY2x1ZGluZyB0aGUgQ2FwaXRvbCBidWlsZGluZywgc2VjcmV0YXJ5IG9mIHN0YXRlIGFuZCBsZWdpc2xhdGl2ZSBvZmZpY2VzLgpXZSBiZWVuIG1hcnJpZWQgNDQgeWVhcnMsIGhhdmUgb25lIGNoaWxkIChELzI4KSwgc2hlIGdvdCBtYXJyaWVkIGEgY291cGxlIG9mIHllYXJzIGFnby4gVGhleSBib3VnaHQgYSB0b3duaG91c2UgaW4gYSBuaWNlIG5laWdoYm9yaG9vZC4gClNvcm9yaXR5IG1lbWJlcnMgb2YgRGVsdGEgR2FtbWEgd29yZSBicmlnaHQgcGluayBUIHNoaXJ0cyBUdWVzZGF5IGFzIHRoZXkgaGVscGVkIGluY29taW5nIGZyZXNobWVuIHVubG9hZCB0aGVpciBjYXJzIGFuZCBnZXQgbW92ZWQgaW50byB0aGUgZG9ybSByb29tcy4KV2hpdGUgd2VkZGluZyBkcmVzcyAgIEkgZmVsdCB0aGUgc2FtZSB3YXkgaW5pdGlhbGx5LiBJIGVuZGVkIHVwIGNob29zaW5nIGFuIGl2b3J5L2NoYW1wYWduZSBjb2xvciBzbyB0aGF0IGl0IHdhcyBjbG9zZSBlbm91Z2ggdG8gYXBwZWFzZSB0aGUgdHJhZGl0aW9uYWxpc3RzIGJ1dCBzdGlsbCBub3QgcHVyZSB3aGl0ZS4gQXMgZm9yIHN0eWxlLCB5b3UgaGF2ZSB0byBsb3ZlIHlvdXIgbG9vayAgIEkgc2VlIG5vdGhpbmcgd3Jvbmcgd2l0aCBnb2luZyB3aXRoIGEgZHJlc3MgdGhhdCBsb29rcyBsaWtlIHRoYXQuIApEb29yd2F5cyBzdWNrLCBkdW5nZW9ucyBhcmUgdG9vIHNtYWxsIGZvciB5b3UsIGZvcmdldCBldmVyIGdvaW5nIGluIGFueW9uZSBob21lIGV2ZXIgYWdhaW4uIApJdCBhbGwgc3RhcnRlZCBsYXN0IGF1dHVtbiB3aGVuIEthdGllIFdhbGRlZ3JhdmUsIGEgc29jaWFsIGVudHJlcHJlbmV1ciwgYW5kIEkgc2V0IHVwIE5vdyBUZWFjaC4gV2Ugd2VyZSBzdXJlIHRoZXJlIHdlcmUgbG90cyBvZiBmaWZ0eXNvbWV0aGluZ3Mgd2hvIHdhbnRlZCB0byB0ZWFjaCwgYnV0IG5vIG9uZSB3YXMgc2Vla2luZyB0aGVtIG91dC4gCkEgY2hhb3RpYyBhbGlnbm1lbnQgZG9lcyBub3QgbWVhbiB5b3VyIGNoYXJhY3RlciBpcyBhbiBhc3Nob2xlLiAKSnVzdCBsaWtlIGhvdyBub3QgZXZlcnlvbmUgd2hvIGVuam95cyBtZXRhbCBjb25zdGFudGx5IHdlYXJzIGJhbmQgc2hpcnRzLCBoYXMgbG9uZyBoYWlyIGFuZCBoZWFkYmFuZ3MgYWxsIHRoZSB0aW1lLiAiVGhlcmUgYXJlIG9uZXMgbGlrZSB0aGF0IGJ1dCB0aGV5IG5vdCB0aGUgZGVmaW5pdGlvbiIgZXNzZW50aWFsbHkuIApGb2xkIDIwIGhhbmRzIGluIGEgcm93LiBJdCB3YXMgdGhlIGVhc2llc3QgbW9uZXkgSSd2ZSBldmVyIGhhZCBhbmQgdGhlIG9uZXMgdGhhdCB3ZXJlbid0IGplcmtzIHdlcmUgc28gZHVtYiB0aGV5IHNob3VsZCBiZSBsaXZpbmcgaW4gYSBhc3Npc3RlZCBsaXZpbmcgaG9tZS4gCkFueXdheSwgc28gYWJvdXQgYW4gaG91ciBvciBzbyBpbiwgdGhpcyBoYW5kIGNvbWVzIHVwLiBBIGJ1bmNoIG9mIHBlb3BsZSBsaW1wIGluLCBhbmQgdGhlIGZsb3AgY29tZXMgVDk3LiBBIGd1eSBiZXRzIHNtYWxsIGFuZCBnZXRzIGEgZmV3IGZvbGRzIGFuZCBhIGZldyBjYWxsZXJzLgpFaXRoZXIgd2F5IGl0IGEgaHVnZSB0aW1lIHNpbmsgaW50byBhIHByb2Nlc3Mgbm8gb25lIGNhcmVzIGFib3V0IChwb2xpdGljcykgaW4gb3JkZXIgdG8gbWF5YmUgZ2V0IHRoZSB0aGluZyB5b3UgZG8gY2FyZSBhYm91dCAgIHJlc3VsdHMuCkJvcyBhZGFtbGFyc2luaXouIFZha3RpbWkgY2FsaXlvcnN1bnV6LiBNZWRlbmkgYmlyIHNla2lsZGUgdGFydGlzYWJpbGVjZWsga2FwYXNpdGVuaXogeW9rLlRhcnRpc21heWEgQXlzZSBIdXIgdGFyaWggb3Rvcml0ZXNpIG9sYXJhayBiZWxpcmxleWlwLCAicHJvbWluZW50IGhpc3RvcmlhbnMgb2YgVHVya2V5IiBkZXlpcCBsZHJlbiBzZW5zaW4uIApMRSBoYXMgZGFuY2VkIGFyb3VuZCBpdCwgYW5kIEkndmUgc2VlbiBzbyBtYW55IHBlb3BsZSBwb3N0IGFuIGFydGljbGUgZnJvbSBhIGZldyBkYXlzIGFmdGVyIHRoZSBtdXJkZXJzIHRoYXQgc2F5cyB0aGV5IGNvbGxlY3RlZCBkbmEgZnJvbSB0aGUgc2NlbmUuIEkgZG9uJ3QgdGhpbmsgdGhleSByZWFsaXplIHRoYXQganVzdCBtZWFucyB0aGV5IHRvb2sgaXRlbXMgaW4gZm9yIHRlc3RpbmcsIG5vdCB0aGF0IHRoZXkgd2VyZSBhYmxlIHRvIGNvbWUgdXAgd2l0aCBhIHByb2ZpbGUuLiAKUGxlYXNlIGNvbnRhY3QgdGhlIG1vZHMgaWYgeW91IGhhdmUgYW55IHF1ZXN0aW9uOyB0aGFua3MhCkJhc2ljYWxseSBzb21lb25lIGhhcyBhIGxvdCBvZiBhbiBhc3NldCBhbmQgcmVhbGl6ZSB0aGF0IGlmIHRoZXkgZHJvcCBpdCBhbGwgb24gdGhlIG1hcmtldCBpbiB0aGUgdGltZSBwZXJpb2QgdGhleSB3b3VsZCBsaWtlIHRvLCB0aGV5IHdvdWxkIGNhdXNlIGEgZGlwIGluIHByaWNlIHNvIHRoZXkgd291bGRuJ3QgZ2V0IGFzIG11Y2ggYXMgdGhlIGN1cnJlbnQgYmlkIHRpbWVzIHRoZWlyIGhvbGRpbmdzLgpBbmdyeUQwOSAgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpJIGtub3cgdGhhdCB0eXBlIG9mIGd1eXMsIHRoZXkgbmV2ZXIgaGFybWZ1bCwganVzdCB2ZXJ5IHdlaXJkIGFuZCBleHRyZW1lbHkgaW5zZWN1cmUuSWYgaGUgc2VlcyB0aGF0IE9QIGhhcyBhIGJveWZyaWVuZCwgaGUgd2lsbCBub3QgYm90aGVyIGFueW1vcmUgd2l0aCB0aG9zZSBoYWxmIGFzc2VkLCBpbnNlY3VyaXR5IGZpbGxlZCBhdHRlbXB0cyBhdCBPUC5Dcml0aWNhbGZsdWZmcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29NeSBib3lmcmllbmQgaXMgb25lIG9mIHRoZSB0b3VnaGVzdCBndXlzIEkndmUgZXZlciBrbm93bi4gCklmIEdlbi4gTWFjQXJ0aHVyIGhhZCBnb3R0ZW4gdGhlIGdvIGFoZWFkIHRvIHdpZGVuIE5vcnRoIEtvcmVhbiB3YXIsIHdlIHdvdWxkbid0IGJlIGhhdmluZyB0aGlzIGNvbnZlcnNhdGlvbjogTGV0dGVyIHRvIHRoZSBFZGl0b3IgSWYgR2VuLiAKRGV2b3VyaW5nIGEgYnVja2V0IG9mIGNoaWNrZW4gaXMgbm90IHRoZSBwZXJmZWN0IHRpbWUgd2hlbiBwbGF5aW5nIGZvciBzdGFrZXMgYW5kIGl0IGlzIG5vdCB0aGUgdGltZSB0byB3YXRjaCB5b3VyIGZhdm9yaXRlIGdhbWUuIApCdXQgSSBhZG1pcmUgaXQgc3RpbGwsIGFzIEkgZG8gdGhlIEVsZXZhdG9yIHBhbXBobGV0LCBiZWNhdXNlLCB3ZWxsLCB0aGV5J3JlIGRvbmUgcmlnaHQuIFByZXNpZGVudGlhbCBlbGVjdGlvbnMpOiB0aGVyZSB3YXMgdGhlIHRlbGVwaG9uZSwgY2F0aG9kZSByYXlzIChFdWdlbiBHb2xkc3RlaW4pLCBKb2huIERyYXBlciBwaG90b2dyYXBoeSBvZiB0aGUgc29sYXIgc3BlY3RydW0sIEJlcmxpbmVyIG1pY3JvcGhvbmUsIEJvbHR6bWFubiAybmQgTGF3LCBhbmQgc28gb24uIApPdmVydmlldyBmb3Igc25hY2sKV2UgaGF2ZSBsaXRlcmFsbHkgbm8gY29udGV4dCB0byB0aGlzIHNpdHVhdGlvbiwgd2UgaGF2ZSBubyBpZGVhIGlmIGhlIHNlZW1lZCBwZXJmZWN0bHkgbm9ybWFsIGFuZCB0aGVyZSB3ZXJlIG5vIHJlZCBmbGFncy4uIApNb2Rlcm4gcG9raWVzIGFyZSBjb21wbGV0ZWx5IGNvbXB1dGVyaXNlZCB3aXRoIHJhbmRvbSBudW1iZXIgZ2VuZXJhdGluZyBzb2Z0d2FyZSBhdCB0aGVpciBoZWFydC4KTGlmZSBpcyB2aWJyYW50IHdoZW4gd2UgZmVlbCBjb25uZWN0ZWQsIHVuZGVyc3Rvb2QsIGFuZCBsb3ZlZC4uIApDYWxsIGl0IGEgYm95IHdobyBjcmllZCB3b2xmIHNpdHVhdGlvbi4gVG9tbXkgUm9iaW5zb24gZ290IGJhbm5lZCBmcm9tIEZhY2Vib29rIGFuZCBmaW5hbmNpYWwgc2VydmljZXMgbGlrZSBQYXlQYWwsIE1hcmsgTWVlY2hhbiBnb3QgaGlzIEJCQyBjb250cmFjdCBjYW5jZWxsZWQgaW4gYSBkYXkgZm9yIGJlaW5nIGEgImhhdGUgY3JpbWluYWwiLCBldGMuLCBhbmQgdGhvdXNhbmRzIG9mIFVLIGNpdGl6ZW5zIGdldCBhcnJlc3RlZCBhbmQgdGhyb3duIGluIGphaWwgZm9yIHRoaW5ncyB0aGV5IHNheSBvbmxpbmUgb3IgaW4gcmVhbCBsaWZlIGVhY2ggeWVhci4gClRoaW5ncyB0aHN0IGNvdWxkIHJhbmRvbWx5IGZvdW5kIG9uIHRoZSBiYXR0bGVmaWVsZC4uIApRdWVscyBzZXJvbnQgbGVzIGVmZmV0cyBkZSBjZXR0ZSB2ZWlsbGUgcmV2aXNpdGUsICBsYSBtYWlzb24gZXQgYXUgZGVsID8gQSB2b3VzIGRlIGxlIGRjb3V2cmlyIHBhciB2b3VzIG1tZXMgIQpBbmVjZG90YWxseSwgTWVkaWNhcmUgZG9lc24gcmVpbWJ1cnNlIHRoZSBhY3R1YWwgY29zdCBvZiBzZXJ2aWNlcyBpbiBhIGxvdCBvZiBjYXNlcy4gQSBkb2N0b3Igd2hvIG9wZXJhdGVzIG9uIE1lZGljYXJlIGFsb25lIHdpbGwgYmUgb3BlcmF0aW5nIGF0IGEgbG9zcyBvbiBtYW55IHNlcnZpY2VzLCBvciBoYXZlIHRvIGNvbW1pdCBiaWxsaW5nIGZyYXVkIHRvIGNsYWltIGNyZWRpdCBmb3IgdW5wZXJmb3JtZWQgc2VydmljZXMgdG8gZ2V0IGVub3VnaCBtb25leSB0byBtYWtlIGl0IHdvcnRoIGhpcyB0aW1lLi4gCkhlIHByb2R1Y2VkIHNldmVyYWwgcG9rZXIgYm9va3MsIGluY2x1ZGluZyBBbWFyaWxsbyBTbGltIFBsYXkgUG9rZXIgVG8gV2luICgyMDA1KS4gSW4gaGlzIGF1dG9iaW9ncmFwaHksIEFtYXJpbGxvIFNsaW0gSW4gQSBXb3JsZCBGdWxsIE9mIEZhdCBQZW9wbGUgKDIwMDMpLCBoZSBjbGFpbWVkIHRvIGhhdmUgcGxheWVkIHBva2VyIHdpdGggdHdvIHByZXNpZGVudHMsIEpvaG5zb24gYW5kIE5peG9uLCBhbmQgY2F0YWxvZ3VlZCBtYW55IG9mIGhpcyBwcm9wb3NpdGlvbiAob3IgYmV0cy4gCkFuZCB0aGVuIG11Z2dlZCBhZ2Fpbi4gQW5kIHRoZW4gc3RhYmJlZC4gCkl0IHR1cm5lZCBvdXQgdGhlIGlzc3VlIHdhcyB0aGF0IHRoZSBNZXJha2kgU3lzdGVtcyBBZ2VudCB3YXNuJ3QgYXV0byBpbnN0YWxsaW5nIGxpa2UgaXQgd2FzIHN1cHBvc2VkIHRvLiAKQ2hhbmdlcyBoYXZlIHRvIGJlIGRvbmUgInJpZ2h0IiBvciB0aGUgdGVhbSBtYXkgYmUgY2FsbGVkIGZvciAidG9vIG1hbnkgbWVuIG9uIHRoZSBpY2UiIHdoaWNoIGlzIGEgMiBtaW51dGUgcGVuYWx0eS4gKEZ1bGwgQW5zd2VyKS4gCk9mIENvUTEwLiBTaXggb2YgdGhlIDMyIHBhdGllbnRzIHNob3dlZCBwYXJ0aWFsIHR1bW9yIHJlZ3Jlc3Npb24uIApFYWNoIHRyYWRlciByZWNlaXZlZCByZWFsIG1vbmV5IGFuZCBzdG9jayBsaWtlIGZpbmFuY2lhbCBhc3NldHMsIHdoaWNoIHBhaWQgZGl2aWRlbmRzIHdpdGgga25vd24gcHJvYmFiaWxpdHkuIApXaGVuIGZvcmNlZCB0byB3b3JrIHB1cmVseSBmdW5jdGlvbmFsbHksIEVybGFuZyBjYW4gZ2l2ZSB1cCB0aGUgbG9nIGZhY3Rvci4gVGhleSBjYW4gZG8gc28gYmVjYXVzZSB0aGV5IGRvbiBoYXZlIHN0YXRpYyB0eXBlcyBzbyB1c2luZyBtdXRhYmxlIG1hcHMgZm9yIHJlZmVyZW5jZXMgYXJlIGVhc3kgdG8gdXNlIHRoZXJlLiBOb3QgdGhhdCB0aGlzIGlzIGEgcGFydGljdWxhcmx5ICJlcmxhbmd5IiB3YXkgdG8gd3JpdGUgY29kZSwgYnV0IGl0IGlzIG9uIHRoZSB0YWJsZS4KVGhleSBhcmUgdXNpbmcgcmVhbCBtb25leSBhbmQgcG90ZW50aWFsbHkgc2lua2luZyBtb3JlIGFuZCBtb3JlIG1vbmV5IGludG8gdGhlIG9wcG9ydHVuaXR5IHRvIHdpbiBhIGNvdmV0ZWQgaXRlbSB0aGF0IG1pZ2h0IGluY3JlYXNlIHRoZWlyIHBlcmZvcm1hbmNlIGluIHRoZSBnYW1lLiAKUGhsYWxpbmRyb21lIHUKSSBzZWNvbmQgRXhjYWxpYnVyLiBTdGF5ZWQgdGhlcmUgaW4gTWFyY2guIFdpdGggJDEvJDIgdGFibGVzIEV4Y2FsIHdhcyB0aGUgY2hlYXBlc3QgSSBjb3VsZCBmaW5kIG9uIHRoZSBzdHJpcC4gQWxzbyBpdCBpcyBjb25uZWN0ZWQgdG8gdGhlIEx1eG9yIHRocm91Z2ggaW5kb29yIHdhbGt3YXkgc28gaWYgdGhlIHNsb3RzIGF0IGV4Y2FsaWJ1ciBhcmVuJ3QgZW5vdWdoIGZvciBoZXIsIHNoZSBjYW4gd2FsayBhcm91bmQgd2l0aG91dCBsZWF2aW5nIHRoZSBhaXIgY29uZGl0aW9uaW5nLgpVbiBsaXZyZXQgZGUgY29ycmlnIGRlIGNlcyBleGVyY2ljZXMgZXN0IGNvbXByaXMgZGFucyBsZSBwcml4IGR1IG1hbnVlbC4gClRha2UgSnVyeSBEdXR5ISBVbmRlcnN0YW5kIEp1cnkgTnVsbGlmaWNhdGlvbi4gU3RhbmhvcGUgRXhwbGFpbnMuClRoZXJlIGlzIHNvIG11Y2ggZ29pbmcgb24gaXQgaXMgaW1wb3NzaWJsZSB0byBpbmNsdWRlIGl0IGFsbCBoZXJlOyBqdXN0IGtub3cgdGhhdCB0aGUgR3Jvd2luZyBSb29tIGhhcyBpbmNsdXNpb24sIGRpdmVyc2l0eSBhbmQgdmFyaWV0eSBmaWd1cmVkIG91dC4gcmVhbGx5IGV4Y2l0aW5nIHRvIHNlZS5BIGdyb3VwIGZyb20gdGhlIFdoaXRlIEZlbWluaXN0czogU3RvcCBSaWdodCBOb3csIFRoYW5rIFlvdSBWZXJ5IE11Y2ggcGFuZWwgYXQgdGhlIDIwMTggR3Jvd2luZyBSb29tIEZlbWluaXN0IExpdGVyYXJ5IEZlc3RpdmFsLiAKIldlIGZpbmQgb3Vyc2VsdmVzIGluIGEgd29ybGQgd2hlcmUgcGVvcGxlIGNhbiBtYWtlIGFsbGVnYXRpb25zLCByZWdhcmRsZXNzIG9mIHRoZSB0cnV0aCwgYW5kIGEgcGVyc29uIGlzIGxlZnQgd2l0aCB0aGUgY2hvaWNlIG9mIHdlYXRoZXJpbmcgaW5zdWx0aW5nIHB1YmxpY2l0eSBvciBlbmdhZ2luZyBpbiBtdWx0aSB5ZWFyIGxhd3N1aXRzLiBJdCBpcyBkZXBsb3JhYmxlIGZvciBhbnlvbmUgdG8gZmluZCB0aGVtc2VsdmVzIGluIHRoaXMgc2l0dWF0aW9uLiIKVGhpcyBpcyBhIGRhbW4gc2hhbWUgYW5kIGEgcHJpbWUgZXhhbXBsZSBvZiB3aHkgb25saW5lIHBva2VyIG5lZWRzIHRvIGJlIG1hZGUgbGVnYWwgYWdhaW4gYW5kIDEwMCUgcmVndWxhdGVkLiAKVGhlIHN1c3BpY2lvbiwgYmFzZWQgb24gaW5pdGlhbCByZXBvcnRzLCBpcyB0aGF0IGF0IGxlYXN0IG9uZSBvZiB0aGUgcmlmbGVzIHVzZWQgd2FzIGFsdGVyZWQgdG8gZnVuY3Rpb24gYXMgYW4gYXV0b21hdGljIHdlYXBvbiwgdGhlIG9mZmljaWFsIHNhaWQuIEFtb25nIHRoZSB3ZWFwb25zIGZvdW5kIHdlcmUgYSAuMjIzIGNhbGliZXIgYW5kIGEgLjMwOCBjYWxpYmVyLgpIZXJlIGlzIGFub3RoZXIgdGhpbmcgYWJvdXQgdmlkZW8gcG9rZXIgdGhhdCBwZW9wbGUgdGVuZCB0byBmb3JnZXQgYWJvdXQuIExldCdzIHNheSB0aGF0IHlvdSBhcmUgc2tpbGxlZCBlbm91Z2ggdG8gcGxheSB2aWRlbyBwb2tlciBhbmQgd2FsayBhd2F5IHdpdGggYSBoYW5kc29tZSBwcm9maXQuIEJ1dCB3aHkgd2FzdGUgeW91ciB0aW1lIGFuZCB0YWxlbnQgb24gcGxheWluZyBzaW5nbGUgaGFuZCB2aWRlbyBwb2tlcj8gVW5saWtlIGxpdmUgcG9rZXIsIHdoZXJlIHlvdSBnZXQgdG8gcGxheSBqdXN0IG9uZSBoYW5kLCB2aWRlbyBwb2tlciBhbGxvd3MgeW91IHRvIHBsYXkgbXVsdGlwbGUgaGFuZHMuIFRoaXMgd2F5IHlvdSBjYW4gaW5jcmVhc2UgeW91ciB3aW5uaW5ncyBhbmQgd2FsayBhd2F5IGEgbXVjaCBoYXBwaWVyIHdpbm5lci4gV2l0aCB0b25zIG1vcmUgY2FzaCBpbiB5b3VyIHBvY2tldHMuClNvIHRoZSBzY2hlbWF0aWMgcmVhbGx5IGRpZCBwb3J0cmF5IHRoZSBlc3NlbmNlIG9mIHdoYXQgdGhlIG1hY2hpbmUgZGlkLCBleHBsb3JpbmcgdGhlIGRlc2lnbnMgb2YgbW90aW9uLi4gClVzdWFsbHksIHdlIGtub3cgb3VyIGRvZyBpcyBmZWVsaW5nIGdvb2Qgd2hlbiBzaGUgY2hvd3MgZG93biBvbiBoZXIgZm9vZC4gSXQncyBub3QgdW5oZWFyZCBvZiwgdGhvdWdoLCBmb3IgaGVyIHRvIHNraXAgYSBtZWFsIG9yIHR3bywgZXNwZWNpYWxseSBpZiBpdCdzIGhvdCBvdXRzaWRlLiBBbnkgbW9yZSB0aGFuIHRoYXQgaXMgc29tZXRoaW5nIHRvIGJlIGNvbmNlcm5lZCBhYm91dC4gSWYgeW91ciBkb2cgdHVybnMgdXAgaGVyIG5vc2UgYXQgZm9vZCBmb3IgbW9yZSB0aGFuIHR3byBkYXlzLCBjYWxsIHlvdXIgdmV0IHJpZ2h0IGF3YXkuIFNvbWUgZGlzZWFzZXMgYW5kIG1lZGljYXRpb25zIGNhdXNlIGRvZ3MgdG8gZGV2ZWxvcCBlYXRpbmcgaGFiaXRzIHRoYXQgYXJlIGRvd25yaWdodCBvdXQgb2YgdGhlIG9yZGluYXJ5IGZvciB0aGVtLiBBIGRvZyB3aG8gaGFzIG5ldmVyIGJlZW4gYSBmb29kIHRoaWVmIGFuZCBzdWRkZW5seSBzdGFydHMgcmFpZGluZyB0aGUgZ2FyYmFnZSBjYW4gb3Igc3RlYWxpbmcgZm9vZCBvZmYgdGhlIGRpbm5lciB0YWJsZSBpcyB0ZWxsaW5nIHlvdSBzaGUgbmVlZHMgYSBjaGVja3VwIG9yIGFuIGFkanVzdG1lbnQgb2YgaGVyIG1lZGljYXRpb24uCklmIE9QIGlzIGJlaW5nIHRlc3RlZCBiZWNhdXNlIGhpcyBzdW1tZXIgZ2lnIHJlcXVpcmVzIHRoYXQgaGUgZ2V0IGEgY2xlYXJhbmNlLCB0aGVuIGl0IGFic29sdXRlbHkgYmUgYW4gaXNzdWUuLiAKRGFzIE1vbnRlc2lubyBDYXNpbm8gaGF0IGFsc28ga2xhciBlaW5lIGd1dGUgTWFya2V0aW5nICAgU3RyYXRlZ2llIGltICBlcmthbm50ICh2aWVsbGVpY2h0IGdpbHQgZGllc2VzIE1vZGVsbCBhdWNoIGZyIGFuZGVyZSBDYXNpbm8gdW5kICAgIFNwaWVsZSBlYmVuZmFsbHM/ISkgdW5kIGRpZXNlIHVtenVzZXR6ZW4gYmVnb25uZW4uIEtsYXIgaXN0IGluZGVzIGF1Y2gsIGRhc3MgZGllcyBlaW4gbmFjaCB3aWUgdm9yIGthdW0gZXJzY2hsb3NzZW5lciBNYXJrdCBtaXQgbm9jaCBncm9lbiBQb3RlbnppYWxlbiBpc3QuIApSaWNoYXJkIE1lcmdlbiBvci4gCllvdSB0YXVnaHQgbWUgdG8gbGVhZCBieSBleGFtcGxlLCBub3QgYnkgd29yZHMuCklmIGl0IGFueXRoaW5nIGxpa2UgY2xhc3NpYyBFUSwgZHJvcCByYXRlcyBvbiByYWlkcyBjYW4gYmUgcHJldHR5IGxvdy4gClRoYXQgd2FzIGl0LiBJIGZpbmFsbHkgcmVmdXNlZCB0byB0YWtlIGhpbSBiYWNrIHdoZW4gaGlzIG5lZ2xpZ2VuY2Ugd2FzIHRoZSBjYXVzZSBvZiBteSBuZXBoZXdzIGRlYXRoIHdoaWNoIG15IGRhdWdodGVyIHNhdy4uIApTdGVyZW90eXB5ICAzMCBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KSSBpbml0aWFsbHkgdGhvdWdodCBpdCB3YXMgQ2hyaXMgY29udGludWluZyB0byBpbXBsaWNhdGUgU2hhbm5hbiBzb21laG93LCBidXQgSSB0aGluayBpZiB0aGF0IHdhcyB0aGUgY2FzZSB0aGUgQ0JJIHdvdWxkIG5vdCBoYXZlIG1hZGUgYW55IHByZXNzIHN0YXRlbWVudHMgYXMgaXQgY29uZmxpY3RzIHdpdGggdGhlaXIgaW52ZXN0aWdhdGlvbi4gSSB0aGluayBDaHJpcyBpcyBnaXZpbmcgYSB0aW1lbGluZSBmb3IgdGhvc2UgdW5hbnN3ZXJlZCBhcmVhcyB0aGF0IGxlYXZlIHNvbWUgc3BlY3VsYXRpbmcgdGhhdCBoaXMgc3RvcnkgbWF5IGhhdmUgYmVlbiB0cnVlIHRoYXQgU2hhbm5hbiBoYXJtZWQgdGhlIGtpZHMgYW5kIGhlIGtpbGxlZCBoZXIgaW4gcmVzcG9uc2UuIApUaGUgcmFnaW5nICJCaWcgTXVkZHkiIHBvdW5kICBlZCBhdCBTaW91eCBDaXR5IGFuZCBtb3JlIHRoYW4gMzAuMDAwIHBlcnNvbnMgZmxlZCB0aGVpciBob21lcyBkb3duc3RyZWFtIGF0IE9tYWhhLCBOZWIgYW5kIENvdW5jaWwgQmx1ZmZzLCBsYS4gCkFuZCB0aGF0IHN1Y2tzLi4gCldlIHdlcmUgdHJ5aW5nIHRvIGRldmlzZSBhIHdheSBvZiBjb29raW5nIHRvYXN0IG9uIG91ciBob3RwbGF0ZS4gCkhlIHdhbnRlZCB0aGVtIHRvIGxldmVyYWdlIHRoaXMgdG8gYmFycmVsIHRocm91Z2ggdG8gYXZvaWQgYmVpbmcgYm9nZ2VkIGRvd24gaW4gYW5vdGhlciBsYW5kIHdhciBmcm9udCwgYnV0IG90aGVyIGNvbW1hbmQgZ290IHNraXR0aXNoIGFib3V0IHdhc3RpbmcgdGhlaXIgb2xkIG1hbmEgcG90aW9ucyBzaGlwcy5Ob3Qgc2F5aW5nIHRoYXQgcGxhbiB3b3VsZCBvciB3b3VsZCBub3Qgd29yaywgYnV0IGRvIHdhbnQgdG8gcG9pbnQgb3V0IHRoZSBsYW5kIHdhciBpbiBHYWxsaXBvbGkgd2FzIG5vdCBDaHVyY2hpbGwgbW92ZSwgYnV0IG90aGVyIGNvbW1hbmQgYW5kIHBvbGl0aWNpYW5zIGludGVyZmVyaW5nLm9yYW5nZWp1bGl1cyAgMjEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgdGhpbmsgdGhpcyBjb250ZXh0IGlzIGltcG9ydGFudC4gClByb2YuIE5ldW1pd2FraW4gZW1wZmllaGx0IGZyIGRpZSBpbm5lcmUgQW53ZW5kdW5nIGhhbmRlbHNibGljaGUgMyVpZ2UgSDJPMiAgIExzdW5nLCBiZWdpbm5lbmQgbWl0IDIgMyBUcm9wZmVuIGF1ZiBlaW5lbiBFc3NsZmZlbCBXYXNzZXIsIDMgbWFsIHRnbGljaC4gRGllIERvc2lzIHdpcmQgdGdsaWNoIHVtIGVpbmVuIFRyb3BmZW4gZXJoaHQgKHp1ciBHZXdobnVuZykuIE5hY2ggc2llYmVuIFRhZ2VuIGlzdCBlaW5lIERvc2lzIHZvbiAxMCBUcm9wZmVuIGF1ZiBlaW5lbiBFc3NsZmZlbCBXYXNzZXIgZXJyZWljaHQuIFVuZCBzbyBtYWNoZW4gU2llIGVpbiAxMCAgVGFnZSBLdXIgbWl0IDN4IHRnbGljaCAxMCBUcm9wZmVuLCBkYW5hY2ggMiAzIFRhZ2UgUGF1c2UuCkVuZ2xpc2ggc3VidGl0bGVzIGFuZCByYXRlZCBNLiAKVG8gYmUgc3VyZSwgSXJhbiBpcyBub3QgZXhhY3RseSBhbiBpbm5vY2VudCBieXN0YW5kZXIgaGVyZS4gSXJhbiBpcyB0aGUgQnVncyBCdW5ueSBvZiB0aGlzIGVwaXNvZGUgb2YgdGhlIExvb25leSBUdW5lcyAgIHRvbyBzbWFydCBhbmQgYXJyb2dhbnQgZm9yIGl0cyBvd24gZ29vZCAgIGtuZWUgZGVlcCBpbiB0aGUgbXVyZGVyb3VzIG1heWhlbSBvZiB0aGUgQnV0Y2hlciBvZiBEYW1hc2N1cyBpbiBTeXJpYS4gQnV0IElyYW4gaXMgbm90IHRoZSBzb2xlIHRyZWFjaGVyb3VzIGFjdG9yIGluIHRoaXMgcmVnaW9uYWwgZGFuY2UgbWFjYWJyZS4gCkp1c3QgaW1hZ2luZSBpZiB5b3Ugd2VyZSBpbiB0aGVpciBzaG9lcyAgIERlbW9jcmF0cyBhbmQgbGliZXJhbCB2YWx1ZXMgb24gdGhlIHJpc2UsIHlvdXIgbW9zdCBkcmVhZGVkIGJvb2dleXdvbWFuIGFib3V0IHRvIHRha2UgdGhlIHdoaXRlIGhvdXNlICAgYWxsIHNlZW1zIGxvc3QuIFRoZW4gY29tZXMgRG9uYWxkIFRydW1wLiBBbmQgc3VkZGVubHkgaGUgc2F5aW5nIHRoZSBzYW1lIHJhY2lzdCBzaGl0IGluIHRoZSBXaGl0ZSBIb3VzZSB5b3UgYmVlbiBzYXlpbmcgdG8geW91ciBidWRkaWVzIGZvciBhbGwgdGhlc2UgeWVhcnMsIGdyb3dpbmcgYW5ncmllciBhbmQgYW5ncmllciB0aGF0IHlvdSBjYW4gc2F5IGl0IGluIHB1YmxpYyBhbnltb3JlLi4gClJlY2VudCBIb2JiaWVzIEFydGljbGVzIFJlc3VsdHMgOTEKUG9rZXIsIHRvIHBhcmFwaHJhc2UgRGFuaWVsIENyYWlnIGluICJDYXNpbm8gUm95YWxlLCIgaXNuJ3QgYWJvdXQgeW91ciBoYW5kOyByYXRoZXIgaXQncyBhYm91dCB0aGUgb3RoZXIgcGVvcGxlIGF0IHlvdXIgdGFibGUuIApWIFByZSBkaWV0IHBhY2thZ2UgICBBIGZ1bGwgYm9keSB3cmFwIHRvIGdpdmUgeW91IGEgaGVhZCBzdGFydCB3aXRoIHlvdXIgaW5jaCBsb3NzIHBsdXMgZHJ5IGJvZHkgYnJ1c2hpbmcgdG8gdGlnaHRlbiBza2luLCByZW1vdmUgY2VsbHVsaXRlLCBzdGltdWxhdGUgY2lyY3VsYXRpb24sIGFuZCByZW1vdmUgZGVhZCBza2luIGxheWVycy4gV2hpbGUgd3JhcHBlZCB5b3Ugd2lsbCByZWNlaXZlIGEgcmVsYXhpbmcsIHJlanV2ZW5hdGluZyBmYWNpYWwuIChBYm91dCAyIGhvdXJzKSA2NQpTbyB3aHkgZGlkIFBhY3F1aWFvIHJlZnVzZSB0byB0YWtlIHRoZSBkYW1uZWQgdGVzdHM/IFBhY3F1aWFvIGtub3dzLCB0aGUgcmVzdCBvZiB1cyBjYW4gb25seSBzcGVjdWxhdGUuIEkgZmVlbCB0aGF0IGl0IGlzIGEgY29tYmluYXRpb24gb2YgdGhpbmdzLiAKVGhlIHNpZGUgZWZmZWN0cyBhcmUgZmV3IGFuZCBjYW4gYmUgcHJldmVudGVkIGJ5IHVzaW5nIHRoZSBwcm9kdWN0IHRoZSB3YXkgaXQgaXMgbWVhbnQgdG8gYmUgdXNlZC4gCllvdSBzaG91bGQgZmlyc3QgdGVsbCBUYW5uZXIgeW91IGludGVuZCB0byB0ZWxsIE1hcmsgYmVjYXVzZSBpdCB0aGUgcmlnaHQgdGhpbmcgdG8gZG8sIGFuZCB0aGVuIHlvdSBuZWVkIHRvIHRlbGwgTWFyay4gT25lIGRheSwgc29tZSBob3csIGluIHNvbWUgY3JhenkgYXNzIHdheSwgdGhlIGluZm9ybWF0aW9uIHdpbGwganVzdCBjb21lIG91dCwgYW5kIHlvdSBsb3NlIGFsbCB0aGUgdHJ1c3QgeW91IHdpbGwgaGF2ZSBidWlsdCB3aXRoIHRoaXMgZ3V5LiBEb24gcHV0IHRoZSBib3RoIG9mIHlvdSBpbiB0aGF0IHNpdHVhdGlvbi4gSSBnb2luZyB0byBwdXQgc29tZXRoaW5nIG91dCB0aGVyZSB0aGF0IGlzIG9mdGVuIHNhaWQgYnkgd29tZW4gdGhhdCBJIHJlYWxseSBhZ3JlZSB3aXRoLiBJZiB5b3UgYXJlIGhpZGluZyBhIHJlbGF0aW9uc2hpcCBmcm9tIHNvbWVvbmUgdG8gYmVjb21lIGludGltYXRlIHdpdGggdGhlbSwgaXQgaXMgbm8gbG9uZ2VyIGNvbnNlbnN1YWwgYmVjYXVzZSB5b3UgdGFrZW4gYXdheSB0aGVpciBhYmlsaXR5IHRvIG1ha2UgYW4gaW5mb3JtZWQgY2hvaWNlLgpUaGUgcHJvY2VzcyBjdWxtaW5hdGVkIGluIHRoZSBjb21taXR0ZWUgMjU4IHBhZ2UgcmVwb3J0LCByZWxlYXNlZCBpbiBEZWNlbWJlciAyMDE4LCBhbmQgZW50aXRsZWQgQ29tcGV0aXRpdmVuZXNzOiBIZWxwaW5nIENhbmFkaWFucyBTdWNjZWVkLiBPZiB0aGUgOTkgcmVjb21tZW5kYXRpb25zIGZvciB0aGUgdXBjb21pbmcgZmVkZXJhbCBidWRnZXQsIGxlc3MgdGhhbiBoYWxmIGEgZG96ZW4gb2YgdGhlbSBpbnZvbHZlZCBwZXJzb25hbCB0YXggY2hhbmdlcy4gVHdvIHJlY29tbWVuZGF0aW9ucyB3ZXJlIGFpbWVkIGF0IGltcHJvdmluZyB0aGUgcGVyc29uYWwgc2VydmljZXMgYnVzaW5lc3MgdGF4YXRpb24gbW9kZWwgZm9yIHRydWNrZXJzLiAKSSBzZWUgYSBsb3Qgb2YgTW9iYi4gClRoZSBzb3VyY2UgcmVsYXllZCB0aGF0IHRob3VnaCBNdWVsbGVyIGhhZCByZXNwb25kZWQsIHRoZSByZXNwb25zZSB3YXMgYW4gaW5jcmVtZW50YWwgZGV2ZWxvcG1lbnQuIFRoZSB0d28gc2lkZXMgYXJlIHN0aWxsIG5lZ290aWF0aW5nLCBidXQgdGhleSdyZSBvbmx5IHRha2luZyAiYmFieSBzdGVwcywiIHRoZSBzb3VyY2Ugc2FpZC4KMSkgUmVnYXJkbGVzcyBpZiBJIGFtICJiZXR0ZXIiIG9yIGlmIG15IG9wcG9uZW50IGlzICJ3b3JzZSIsIEkgc3RpbGwgZG9uIGtub3cgaG93IHRvIGV4cGxvaXQgdGhlbSB1bnRpbCBJIGhhdmUgcGxheWVkIHdpdGggdGhlbSBsb25nIGVub3VnaCB0byBrbm93IHNvbWV0aGluZyBhYm91dCB0aGVtLiBTb21lIHBsYXllcnMgSSBtYXkgYWxtb3N0IGFsd2F5cyBwbGF5IHBvY2tldCAxMCB0byB0aGUgcml2ZXIgd2l0aCB1bmRlcmNhcmRzLiAKTWl0IEZyZXVkZW4gaGF0IHNpY2ggZGFzIFJlaXRobWF5ZXIgVGVhbSBhdWYgZGllIFJlaXNlIHp1bSBCT0RBTiBQYXJ0bmVyZm9ydW0gYW4gZGVuIEJvZGVuc2VlIGJlZ2ViZW4gZWluZSBWZXJhbnN0YWx0dW5nIG9yZ2FuaXNpZXJ0IHZvbiBCaW9vYXNlIGVpbm1hbGlnZW0gVmVydGVpbGVyZGllbnN0Qk9EQU4gR3JvaGFuZGVsIGZyIE5hdHVya29zdCBHbWJILCBiZWkgZGVtIDEwMCBCaW8gTGFkbmVyLCBCaW9iYXVlcm4gdW5kIFZlcnRyZXRlciBkZXMgR3Jvc3NoYW5kZWxzIHp1c2FtbWVuZ2VmaHJ0IHd1cmRlbiBtaXQgZGVtIFppZWwsIGRpZSBBcmJlaXQgZGVzIFBhcnRuZXJzIGhhdXRuYWgga2VubmVuenVsZXJuZW4uIApLbGVpbiBpcyB0aGUgcHJvZHVjZXIgd2hvIGhhcyB3b3JrZWQgZm9yIHllYXJzIHdpdGggSm9uaSBNaXRjaGVsbCwgYXMgd2VsbCBhcyBOb3JhIEpvbmVzLCBUcmFjeSBDaGFwbWFuLCBNYWRlbGVpbmUgUGV5cm91eCwgTWVsb2R5IEdhcmRvdCBhbmQgSGVyYmllIEhhbmNvY2suClNpZ25zIG9mIHVuYmFsYW5jZWQgaGlwcyBtYXkgbWFuaWZlc3QgaW4gYWJub3JtYWwgc2hvZSB3ZWFyIHR5cGljYWxseSBvbiB0aGUgb3V0c2lkZSBlZGdlcyBhbmQgcGFudHMgd2lsbCBmaXQgdW5ldmVubHkgaW4gdGhlIGxlZyBsZW5ndGguCkkgdGhpbmsgSSBhY3R1YWxseSBtYWtpbmcgc29tZSBtaXN0YWtlcyBvbiB0aGUgdHVybiBieSBub3QgYmFycmVsaW5nIGNvbWJvcyB0aGF0IHdvdWxkIGJlIGdvb2Qgcml2ZXIgYmx1ZmYgY2FuZGlkYXRlcyBvbiB0aGlzIGNhcmQgc3BlY2lmaWNhbGx5LiBTZWVtcyBsaWtlIHdlIHByb2JhYmx5IG5lZWQgdG8gZ28gYmFjayBhbmQgYWRkIHNvbWUgSjlzLCBROXMgaW4gb3JkZXIgdG8gYmFycmVsIHRoZSBKIGFuZCBRIHJpdmVycyBlZmZlY3RpdmVseS4gSSBwcmV0dHkgbXVjaCBqdXN0IHRoaW5raW5nIG91dCBsb3VkIGxvbC4gCkFwb2xvZ2llcyBteSByZXBseSBwcm9iYWJseSBjYW1lIG9mZiBhIGJpdCBzaG9ydC9vYm5veGlvdXMsIHRoYXQgd2FudCBteSBpbnRlbnRpb24uIEhvd2V2ZXIgSSBzdGlsbCBzdGFuZCBieSB3aGF0IEkgc2FpZC4KWW91IHdvdWxkIGxpa2VseSBuZXZlciBiZSB0aGUgdGFyZ2V0IG9mIHRoZWlyIGhhdHJlZCwgc28gaXQgaXNuIHJlYWxseSBhIGxpdGVyYWwsIHJlYWwgd29ybGQgZmVhciBmb3IgeW91IGFwcGFyZW50bHkuLiAKRGFzIGlzdCBkaWUgU3RhZHQsIGRpZSBtYW4gbmVobWVuIG11c3MgdW5kIGRlc2hhbGIgaGFiZW4gd2lyIHVucyBmcmhsaWNoIGJld29yYmVuLiBLYWx0ZSBHcmUgdW5kIGZyb2hlcyBGZWllcm4sIGlociBBZmZlbiFlaW5nZWdhbmdlbiBhbSAwNy4gSmFudWFyIDIwMTAgdm9uIEZyYW56IEZpZmZlbGVyLiAKU2hlIGFuZCBoZXIgaHVzYmFuZCwgYSBmaXJzdCBzaGlmdCB3b3JrZXIgYXQgTG9yZHN0b3duIHdobyB3b3VsZCBoYXZlIGxvc3QgaGlzIGpvYiBvbiBNYXJjaCA4LCBhcmUgYm90aCB0YWtpbmcgdHJhbnNmZXJzIHRvIEdNJ3MgY2FzdGluZyBwbGFudCIgaW4gQmVkZm9yZCwgSW5kLiwgYmVjYXVzZSB0aGV5IGNvdWxkbid0IHN0YW5kIHRoZSB1bmNlcnRhaW50eSBhbnkgbG9uZ2VyLi4gCkkgbGlrZSB0aGUgaWRlYSBvZiB0aGUgc3RvcnkgYmVpbmcgZm9jdXNlZCBvbiBleHBsb3JhdGlvbiwgc2luY2UgdGhhdCB3YXMgb25lIG9mIG15IGZhdm9yaXRlIGVsZW1lbnRzIGZyb20gdGhlIGZpcnN0IGdhbWUuIEkga25vdyBCaW93YXJlIGxvdmVzIGl0cyBncmFuZCwgd29ybGQgY2hhbmdpbmcgcGxvdHMsIGJ1dCBhIGNoYXJhY3RlciBmb2N1c2VkIGV4cGxvcmF0aW9uIG1pc3Npb24gaXMgd2hhdCBJIHdhbnRlZCBmcm9tIHRoaXMgc2VyaWVzIHNpbmNlIHRoZSBmaXJzdCBnYW1lIHdhcyB0ZWFzZWQuIApUb3JvbnRvIERvbWluaW9uLCBDYW5hZGEgc2Vjb25kIGxhcmdlc3QgbGVuZGVyIGJ5IGFzc2V0cywgc2V0IGFzaWRlICQ4NTAgbWlsbGlvbiBmb3Igc291cmVkIGxvYW5zIGluIHRoZSBxdWFydGVyIGVuZGVkIEphbi4gMzEsIHVwIDIzIHBlciBjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgYW5kIHRoZSBoaWdoZXN0IGxldmVsIGluIGF0IGxlYXN0IHR3byB5ZWFycy4gcmV0YWlsIGRpdmlzaW9ucyBoYWQgcm91Z2hseSBlcXVhbCBzaGFyZXMgb2YgdGhlIHByb3Zpc2lvbnMsIGF0IGFib3V0IDM2IHBlciBjZW50IGVhY2ggb2YgdGhlIHRvdGFsLCB3aXRoIHRoZSByZXN0IHJlY29yZGVkIG1haW5seSBpbiB0aGUgYmFuayBjb3Jwb3JhdGUgc2VnbWVudC4KVmFuY291dmVyIFBvbGljZSBEZXBhcnRtZW50IHNwb2tlc21hbiBTZ3QuCkFuZCBpZiB5b3UgYXJlIGFuIGF2ZXJhZ2UgZml0bmVzcyB3YWxrZXIsIHlvdSBkb24ndCBuZWVkIHRvIHVzZSB3cmlzdCBhbmQgYW5rbGUgd2VpZ2h0cyB3aGlsZSB5b3Ugd2FsayBpbiBvcmRlciB0byBpbmNyZWFzZSB0aGUgZGlmZmljdWx0eSBvZiB5b3VyIHdvcmtvdXRzLiAKWW91IGFyZSB3aGF0IHdyb25nIHdpdGggQW1lcmljYS4gClRoZSBVQkMgRmFjdWx0eSBvZiBBcnRzIGJpbGxzIHRoaXMgYXMgYSBmZXN0aXZhbCBjZWxlYnJhdGluZyBnZW5kZXIgZXF1aXR5LCBjcmVhdGl2ZSBtb2JpbGl6YXRpb24sIGFuZCB0aGUgYXJ0IG9mIHBvc2l0aXZlIGNoYW5nZS4gSXQgb3BlbmVkIE1hci4gNyB3aXRoIGEgZGFuY2UgcGFydHkgYXQgdGhlIE11c2V1bSBvZiBBbnRocm9wb2xvZ3kgZmVhdHVyaW5nIGFuIGFsbCBmZW1hbGUgbGluZXVwIG9mIGFydGlzdHMuIApCdXQgaGUncyBub3cgaW4gcHJpc29uIGZvciBzb2xpY2l0aW5nIGEgbWlub3Igd2hpbGUgaGUgd2FzIG1hcnJpZWQuIFNoZSBhbHNvIGFwcHJvdmVkIG9mIGhpbSBoYXZpbmcgc2V4IHdpdGgga2lkcywgYXBwYXJlbnRseS4gClRpbmRyQmVuZHIgIDgzIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KQnJpdGlzaCBncmFuZGFkIEpvaG4gSGVzcCBleWVzIFdvcmxkIFNlcmllcyBvZiBQb2tlcgpJIHRoaW5rIGl0IGJlZW4gd29ya2luZyBwcmV0dHkgd2VsbC4gSXQgbmljZSB0byBoYXZlIHlvdXIgbm90ZXMgYmUgbW9yZSBvciBsZXNzIHNlYXJjaGFibGUgYW5kIGFjY2Vzc2libGUgb24gYW55IGNvbXB1dGVyLiBJIHdyaXRlIHNvbWUgcXVpY2sgbm90ZXMgb3IgbGFiZWwgaW1hZ2VzIG9uIHNsaWRlcyBldGMuIFlvdSBjYW4gYWxzbyBhZGQgdGV4dCBub3JtYWxseSB3aXRoIGEga2V5Ym9hcmQuSWYgeW91ciBxdWVzdGlvbiBpcyBtb3JlIG9mIGEgaG93IHRvIGFjdHVhbGx5IHdyaXRlIHRoZSBub3RlcyBxdWVzdGlvbjpJIGRvd25sb2FkIHRoZSBwZGYvcG93ZXJwb2ludCBmb3IgdGhlIGxlY3R1cmUgID4gb3BlbiBpdCAgPiBnbyB0byBwcmludCBpdCAgPiBzZW5kIHRvIG9uZW5vdGUgID4gdGhlbiBzZWxlY3Qgd2hlcmUgSSB3YW50IHRvIGluc2VydCB0aGUgcGRmcy4gCkhlIHdvdWxkbiBoYXZlIGFueSBvZiBpdC4gCk90aGVyIFF1YWxpZmljYXRpb25zIEFmdGVyIHNjaG9vbCB0dXRvcnMgbXVzdCBwb3NzZXNzIGEgcGFzc2lvbiBmb3IgaGVscGluZyBzdHVkZW50cyBsZWFybiBhbmQgaGF2ZSB0aGUga25vd2xlZGdlIGFuZCBza2lsbHMgdG8gaGVscCBzdHVkZW50cyBmaW5kIG5ldyB3YXlzIHRvIGxvb2sgYXQgZGlmZmljdWx0IHNraWxscyBhbmQgY29uY2VwdHMuIApXZWxsIGluIHRvIGhpZ2ggc2Nob29sLCB3ZSB3ZXJlIGdvb2QgZnJpZW5kcywgSSBldmVuIGhvb2tlZCBoaW0gdXAgd2l0aCBteSBiZXN0IGZyaWVuZC4gCkluIHlldCBhbm90aGVyIHRvdWdoIGRlY2lzaW9uIGZvciB0aGUgZW50ZXJ0YWlubWVudCB2ZW51ZSBpdCBoYXMgZGVjaWRlZCB0byBjYW5jZWwgaXRzIHNwb25zb3JzaGlwIG9mIHRoZSBRdWVlbiBvZiB0aGUgTm9ydGggUmFjZS4gCkFwcGx5aW5nIHRvIGNvbGxlZ2UgaXMgYSBsb3Qgb2Ygd29yawpPciwgd2l0aCB0aGUgZXh0cmEgdGltZXN0YW1wcyB0byBzaG93IHlvdSBnYXZlIHVzIGxpa2UgMTUgaG91cnMgb3Zlcm5pZ2h0IG9uIGEgd2Vla2VuZCB0byByZXNwb25kIHRvIHlvdSBiZWZvcmUgeW91IGRlY2lkZWQgdG8gZ28gYWxsIG91dCBhbmQgc3RhcnQgc3BhbW1pbmcgTUMgZm9yIHN5bXBhdGh5LiBMaWtlIHRoYXQgaXMgZ29pbmcgdG8gbWFrZSB1cyBmZWVsIGxpa2UgbG9va2luZyBhdCB0aGlzIGZhdm9yYWJseS4gV2F5IHRvIGdvLCBuZXdiaWUuCldpbm5pbmcgdGhlICQxNTAsMDAwIHBvdCBhbmQgc28gbXVjaCBtb3JlLiAKKFJlYWQgYWJvdXQgbmV3LCBhZ2dyZXNzaXZlIHN0eWxlcyBvZiBwbGF5IGluIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuKS4gCldlJ2QgYWxzbyBsaWtlIHRvIGNsZWFyIHVwIG9uZSB0aGluZyB0aGF0IGFwcGVhcnMgdG8gYmUgY2F1c2luZyBjb25mdXNpb24gYXJvdW5kIHRoaXMgcG9saWN5ICAgaXQgaXMgbm90IGFsd2F5cyBhIHF1ZXN0aW9uIG9mIHRoZSBpbWFnZSBpdHNlbGYuIENvbW1lbnRzIGFuZCBjb250ZXh0dWFsaXphdGlvbiBtYXR0ZXIuIApXZSBkb24ga25vdyB3aGF0IHRoZSBnb2luZyByYXRlIGZvciBjb25zdWx0YW5jeSB3b3JrIHdvdWxkIGJlIGluIHlvdXIgbG9jYWxpdHksIGJ1dCBpdCBtYXkgYmUgd29ydGggbG9va2luZyBpbnRvIHRoYXQgaWYgeW91IGhhdmUgaW4gZGVwdGggb3IgaGlnaGx5IHBsb3QgcmVsaWFudCBxdWVzdGlvbnMgZm9yIHRoaXMgcHJvamVjdC4gClRoZSBmb3VyIGFjZXMgbWFrZXMgdGhlIHdpbm5pbmcgaGFuZCBhIGZvdXIgb2YgYSBraW5kLCBzbyB0aGUgcGxheWVyJ3MgaG9sZSBjYXJkcyB3b3VsZCBkZXRlcm1pbmUgdGhlIHdpbm5lciBzaW5jZSBhbGwgdGhlIHBsYXllcnMgaGF2ZSBhIGZvdXIgb2YgYSBraW5kLiBJbiB0aGlzIHBhcnRpY3VsYXIgY2FzZSB0aGUga2luZyB3b3VsZCBiZSB0aGUgaGlnaGVzdCBjYXJkIGhlbGQsIHNvIGl0IHRha2VzIHRoZSBoYW5kLiBUaGUgdHdvLCBmaXZlLCBhbmQgZXh0cmEgbmluZSBhcmUgbm90IGZhY3RvcmVkIGludG8gdGhlIGhhbmQuIApIb3cgbWFueSB0YXR0b29zIGRvZXMgTGFkeSBHYWdhIGhhdmUKSSBhbG1vc3QgNSB3aXRoIGEgdmVyeSBzaG9ydCB0b3JzbyAobWF5YmUgMS41IiBiZXR3ZWVuIGhpcCBib25lIGFuZCBib3R0b20gb2YgbXkgcmliIHdoZW4gbWVhc3VyaW5nIGZyb20gdGhlIHNpZGUpLiBJIG9yZGVyZWQgbXkgYmVsdCBhIGZldyB3ZWVrcyBhZ28sIHNvIEkgaGF2ZW4gZ290dGVuIGl0IHlldC4gSSB3ZW50IHdpdGggdGhlIEluemVyIDEwbW0sIHdoaWNoIGlzIGEgNCIgYmVsdC4gSSB0cmllZCBvbiBhIGZyaWVuZCBiZWx0IGF0IHRoZSBneW0ganVzdCB0byBnZXQgYW4gaWRlYSBvZiBob3cgYmFkIDQiIHdvdWxkIGZlZWwsIGFuZCBpdCBvYnZpb3VzbHkgaGl0cyBteSByaWJzLCBidXQgaXQgZmVsdCBkb2FibGUuIEkga25vdyB0aGVyZSBhIGxvdCBvZiBzaG9ydCBwb3dlcmxpZnRlcnMgd2hvIHVzZSA0IiBiZWx0cwpGbHVzZW5zaWViIG11c3MgbWFuIGF1Y2ggZXR3YXMgZnRlciByZWluaWdlbiBhbHMgYmVpIG5vcm1hbGVuIE1hc2NoaW5lbi4gSW0gRW5kZWZmZWt0IGtvbW10cyBudXIgYXVmIGRpZSByaWNodGlnZSBQZmxlZ2UgdW5kIEJlbnV0enVuZyBhbi4uIApPZnRlbiwgYW4gaW5zdGl0dXRpb25hbCB0cmFkZXIgZWZmb3J0IHRvIGFjY3VtdWxhdGUgYSBsYXJnZSBibG9jayBvZiBhIHBhcnRpY3VsYXIgc3RvY2sgbXVzdCBiZSBicm9rZW4gaW50byBudW1lcm91cyB0cmFkZXMuIApEZW5nYW4gU2Fsb24gTXVzbGltYWggUGFuZ2dpbGFuLCBBbmRhIGRhcGF0IG1lbWVzYW4gdGVybGViaWggZGFodWx1IHBha2V0IHBha2V0IGFwYSBzYWphIHlhbmcgQW5kYSBpbmdpbmthbiBtdWxhaSBkYXJpIHBlcmF3YXRhbiB0dWJ1aCBkYW4ga3VsaXQsIE1ha2UgdXAsIHNlcnRhIHRyZWF0bWVudCB5YW5nIGJpc2EgbWVtYnVhdCBBbmRhIHRhbXBpbCBjYW50aWsgZGFuIGF3ZXQgbXVkYS4gCkkgc2VlIHlvdSBvbiA1MmJvb2sgd2hpY2ggcHJvYmFibHkgbWVhbnMgeW91IGludGVuZCB0byByZWFkIGFsbCBvZiB0aGVzZSwgYnV0IEkgZG8gZ2VudWluZWx5IHRoaW5rIHRoYXQgdHJ5aW5nIHRvIGtlZXAgYSBsb3cgYW1vdW50IG9mIHVucmVhZCBib29rcyBvbiB5b3VyIHNoZWx2ZXMgaXMgYSBncmVhdCB0aGluZyB0byB0ZWFjaCB5b3Vyc2VsZi4gCjE3KSBUZW5kZXJuZXNzIGFuZCBwYWluIHdpdGggcGVyY3Vzc2lvbiBvdmVyIHRoZSBkb3JzYWwgdHdlbGZ0aCByaWIgcmVnaW9uLCBsYXRlcmFsIHRvIHRoZSBtaWRsaW5lLCBzdWdnZXN0IGtpZG5leSBpbnZvbHZlbWVudC4KMSBwb2ludCAgc3VibWl0dGVkIDggbW9udGhzIGFnby4gCiJJIGNvdWxkbid0IGhlbHAgaXQuIEkgZGlkbid0IGtub3cgaGUgd2FzIGdvaW5nIHRvLCIgY3JpZWQgRG9yYSwgYmx1c2hpbmcgc2NhcmxldC4KIDE0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29UaGlzIHdhcyBhIGdyZWF0IG1vdmllISBJIGRvbiB0aGluayBpdCBteSBmYXZvcml0ZSBjaGFyYWN0ZXIgcGllY2UgYnV0IGl0IHN0aWxsIGEgZ3JlYXQgbW92aWUhIFRoZSBwYXJ0cyB0aGF0IEkgbG92ZWQgd2VyZSBhbGwgdGhlIGludGVyYWN0aW9ucyBiZXR3ZWVuIENhcm9sIGFuZCBNYXJpYSB3aGljaCBJIHNoZWQgYSBjb3VwbGUgb2YgdGVhcnMgZXNwZWNpYWxseSBhdCB0aGUgcGFydCB3aGVyZSBDYXJvbCBmaW5kcyB0aGUgdHJ1dGggYWJvdXQgaGVyc2VsZiBhZnRlciBsaXN0ZW5pbmcgdG8gdGhhdCByZWNvcmRpbmcuIEkgYWxzbyBsb3ZlZCB0aGUgcGFydCB3aGVyZSBzaGUgZmluZHMgb3V0IHRoYXQgTWFyIFZlbGwgd2FzIGtlZXBpbmcgdGhlIFNrcnVsbCByZWZ1Z2VlcyBpbiBoZXIgc3BhY2VzaGlwIGFuZCBoYXZpbmcgYSB0cnVlIG1vbWVudCBvZiBlbXBhdGh5LlRoZSB0aGluZyB0aGF0IEkgd2lzaCB3YXMgYmV0dGVyIGlzIHRoYXQgTWFyIFZlbGwgZGlkbiBmZWVsIHRvbyBpbXBvcnRhbnQgZm9yIENhcm9sLiAKVGhlIG1ldGhvZHMgdXNlZCB0byByYWlzZSBwaWdzIHRvZGF5IGFyZSB0aGUgbW9zdCBlZmZpY2llbnQgd2F5cyB0byBtaW5pbWl6ZSBsb3NzIGFuZCBwcm9kdWNlIGEgc2FmZSBhbmQgaGVhbHRoeSBwcm9kdWN0LiBUaG9zZSBhbmltYWxzIGxpdmUgYSB3b3JyeSBmcmVlIGxpZmUuIFRoZXkgaGF2ZSBhbGwgdGhlIGZvb2QgYW5kIHdhdGVyIHRoZXkgY291bGQgZXZlciBuZWVkLCB0aGV5J3JlIG5ldmVyIHRvbyBob3Qgb3IgdG9vIGNvbGQsIHRoZWlyIGlsbG5lc3NlcyBhcmUgcHJvbXB0bHkgdHJlYXRlZCwgYW5kIHRoZXkgZ2V0IHRvIGxpdmUgaW4gYSBjbGVhbiBlbnZpcm9ubWVudCB3aXRoIHBsZW50eSBvZiBzb2NpYWwgaW50ZXJhY3Rpb24uIFRoYXQncyBiZXR0ZXIgdGhhbiBzb21lIHBlb3BsZSBsaXZlLgpXaGVuIGl0IGNvbWVzIHRvIGZhbnRhc3kgYmFzZWJhbGwsIGF1Y2l0aW9uIGRyYWZ0cyBhcmUgYWJvdXQgYXMgZXhjaXRpbmcgYXMgaXQgZ2V0cy4gQW5kIGJlZm9yZSB5b3UgZ28gaW50byBhbiBhdWN0aW9uLCB0aGVyZSdzIHNvbWV0aGluZyB5b3UgbmVlZCBldmVuIG1vcmUgdGhhbiBkb2xsYXIgdmFsdWVzOiBBIHBsYW4gZm9yIHlvdXIgYXVjdGlvbiBkcmFmdCBzdHJhdGVneS4KVGhlbiBwZW9wbGUgd2hvIGFyZSBjaGFsbGVuZ2luZyB0aGUgaWRlYSBvZiBhbiBvcGVuIGFkb3B0aW9uLiBTdHVkaWVzIGhhdmUgc2hvd24gdGhlc2UgYXJlIGJldHRlciBmb3IgdGhlIGNoaWxkLiBTdXJlIHRoZXkgYXJlIGhhcmRlciBmb3IgdGhlIGFkb3B0aXZlIHBhcmVudHMgYnV0IHRoaXMgc2hvdWxkIGFsbCBiZSBhYm91dCB0aGUgYmVzdCBmb3IgdGhlIGNoaWxkIG5vdyBhbmQgaW4gdGhlIGZ1dHVyZS4gVGhpcyBzaXR1YXRpb24gaXMgYWxsIGp1c3Qgc28gY3JlZXB5IHRvIG1lIGJlY2F1c2Ugbm9uZSBvZiBpdCBzZWVtcyB0byBiZSBhYm91dCBwdXR0aW5nIHRoZSBjaGlsZCBhbmQgaGVyIG5lZWRzIGZpcnN0LiBJIGhvcGUgdG8gbGVnYWxseSBiZSBhYmxlIHRvIGRvIHRoaXMgdGhlIGNvdXJ0cyB3aWxsIGZvcmNlIHNvbWUgY291bnNlbGxpbmcuClRoZSBpbmNpZGVudCBoYXMgc3RyYWluZWQgYmlsYXRlcmFsIHJlbGF0aW9ucy4gT2ZmaWNpYWxzIGluIFdhc2hpbmd0b24gYW5kIFJpeWFkaCBhcmUgZXhjaGFuZ2luZyB0aHJlYXRzIHRvIGN1dCBzdHJhdGVnaWMsIGVjb25vbWljIGFuZCBkaXBsb21hdGljIHRpZXMuIEluIHRoZSBpbnRlcmVzdCBvZiBjb21tb24gb2JqZWN0aXZlcyBhbmQgaW50ZXJuYXRpb25hbCBzdGFiaWxpdHksIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB0aGUgS2luZ2RvbSBoYXZlIHJlcGVhdGVkbHkgb3Zlcmxvb2tlZCBtYWpvciBkaXNhZ3JlZW1lbnRzLiAKSW5zdGVhZCwgc2hlIGdldHMgdG9sZCBhYm91dCB0aGUgaGFuZHkuIAozIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvWWVzLCBtZWFudCBxdWl0IHRoZSBtaWxpdGFyeS4gWW91IGNhbiBydWluIHlvdXIgbGlmZSB0aGF0IHdheSBpZiB5b3UgZG9uIGRvIGl0IGNvcnJlY3RseS4gSWYgeW91IGFyZSBuZXcgdG8gQnVkZGhpc20gSSB3b3VsZCBzdHJvbmdseSByZWNvbW1lbmQgYWdhaW5zdCBtYWtpbmcgYSBsaWZlIGFsdGVyaW5nIGRlY2lzaW9uIGxpa2UgdGhhdCB1bnRpbCBhZnRlciB5b3UgYXJlIHZlcnkgY29uY3JldGUgaW4geW91ciBwcmFjdGljZS4gCk9iYW1hIGNob3NlIG5vdCB0byBwdXJzdWUgdGhlIEJ1c2hpZXMgZm9yIHRoZWlyIGNyaW1lcyAgZnJvbSB0b3J0dXJlIHRvIGx5aW5nIHRvIHRoZSBBbWVyaWNhbiBwZW9wbGUgYW5kIENvbmdyZXNzLiAKVGhlIGNyb3dkIHJvYXJlZCBvbiBDb3VydCA1IHdoZW4gSXNuZXIgZmluYWxseSB3b24gYSBnYW1lIGFmdGVyIDMyIG1pbnV0ZXMgdG8gdHJhaWwgMiAxIGluIHRoZSBzZWNvbmQgc2V0LiBIaXMgc2hvdHMgYmVnYW4gdG8gc2hvdyBtb3JlIHppcCwgYnV0IGhpcyBtb3ZlbWVudCByZW1haW5lZCBzbHVnZ2lzaC4gCk1haXMgZGVzIGZpbmFuY2VtZW50cyBldXJvcGVucyBzb250IGNvbmRpdGlvbm5zIHBhciBsZSByZXNwZWN0IGR1IGNhbGVuZHJpZXIuLiAKT3RoZXIgbmFtZXMgZm9yIHRoZSBnYW1lIGluIHRoZSBFbmdsaXNoIHNwZWFraW5nIHdvcmxkIGluY2x1ZGUgcm9zaGFtYm8sIGljayBhY2sgb2NrLCBjaGluZyBjaGFuZyB3YWxsYSBbd2hlcmU/XSwgYW5kIG90aGVyIG9yZGVyaW5ncyBvZiB0aGUgdGhyZWUgaXRlbXMsIHNvbWV0aW1lcyB3aXRoICJyb2NrIiBiZWluZyBjYWxsZWQgInN0b25lIi4uIApCdXQgb25jZSB5b3UgcHV0IHRoZSBtb25leSBkb3duIHRoZW4gZm9yIGhlcnMgaXQgaGVycy5CZXNpZGVzIGlmIHRoaXMgaXMgcmVhbCB5b3UgdGhlIHJlYXNvbiB3aHkgZ2lybHMgbGlrZSB0byB3ZWFyIHdlZGRpbmcgcmluZ3Mgd2hlbiB0aGV5IHdvcmsgcmV0YWlsIG9yIGhvc3BpdGFsaXR5LkVkaXRlZCB0byBhZGQ6IE5vIGdpcmwgc2hvdWxkIGhhdmUgdG8gd2VhciBhIHNpZ24gc2F5aW5nIHRoYXQgc2hlIHNpbmdsZSBvciBub3QuIEplZXouIApFRElUOiBJZiB0aGUgcGF0aWVudCB3YW50cyB0byBmaWdodCwgdGhlIGRvY3RvciB3aWxsIGhlbHAgYnV0IHN0YWdlIElWIG1lYW5zIHRoZXkgd2lsbCBnbyB0byB0aGUgYmlnIGd1bnMgd2hpY2ggV0lMTCBkYW1hZ2UgeW91ciBib2R5IGltbWVuc2VseS4gU28gZXZlbiBpZiB5b3Ugc3Vydml2ZSwgeW91IHdpbGwgZW5kIHVwIHdpdGggc2lnbmlmaWNhbnQgZGFtYWdlIHRvIHlvdXIgb3JnYW5zIGRlcGVuZGluZyB3aGVyZSB0aGUgc2Vjb25kYXJ5IGNhbmNlcnMgcG9wIHVwLiBTdXJ2aXZhbCByYXRlcyBhcmUgbG93IGZvciBhIHJlYXNvbi4gCkluZmFjdCwgaGlzIHVud2lsbGluZ25lc3MgdG8gbGV0IGdvIG9mIHRoZSBoYW5kIG9mIEJlZ3VtIE51c3JhdCBCaHV0dG8sIHVwb24gYXJyaXZhbCBhdCBCZWppbmcgYWlycG9ydCwgYWxvbmdzaWRlIGhlciBodXNiYW5kLCBadWxpZnFhciBBbGkgQmh1dHRvLCBoYWQgYmVjb21lIHRoZSBidXR0IG9mIG1hbnkgam9rZXMuIApUYWtlIDIgb2YgdGhlIGNhcmRzIG9uIHRvcCBidXQgbWFrZSBzdXJlIHRoZXkgYXJlIEVYQUNUTFkgb24gdG9wIG9mIGVhY2ggb3RoZXIgKHRoaXMgaXMgY2FsbGVkIHRoZSBkb3VibGUgbGlmdCkgMy4gUGxhY2UgdGhlbSBib3RoIGJhY2sgb24gdG9wIG9mIHRoZSBkZWNrLCBub3cgdGFrZSB0aGUgVE9QIGNhcmQgLyB0aGUgMSB0b3AgY2FyZCAgIGFuZCBwbGFjZSBpdCBvbiBhIHRhYmxlIChwcmVmZXJyZWQgZmxhdCBzbW9vdGggc3VyZmFjZSA0LiAKSSB1c2VkIHRvIGhhdmUgYSBjbGVhbmluZyBsYWR5IHdobyBsb29rZWQgbGlrZSBOb3JhIEJhdHR5IHNoZSBoZWxkIGl0IGJ5IG9uZSBoYW5kbGUgd2hpbGUgc2hlIHNjcnViYmVkIGl0IHdpdGggdGhlIG90aGVyIGhhbmQsIGFuZCBkcm9wcGVkIGl0LiAKSSBkb24gdGhpbmsgYW55IGxpZmVzdHlsZSBpcyB3b3J0aCBwdXR0aW5nIHBlb3BsZSBpbnRvIHRoYXQgcG9zaXRpb24uIApMZWFkZXJzIHdhbnQgdG8gc2V0IGEgZ29vZCBleGFtcGxlIGZvciB0aGVpciB1bml0cyBhbmQgd2lsbCBvZnRlbiBwdXNoIHRoZW1zZWx2ZXMgcGFzdCBzYWZlIGxpbWl0cy4gCjQ3LiBSRUcgR1JVTkRZIFRoZSBnYW1lIHNob3cgZ3VydSB3aG8gaGFzIGtlcHQgQXVzdHJhbGlhbiBmYW1pbGllcyBzdHVjayBvbiB0aGUgY291Y2ggd2F0Y2hpbmcgcHJpbWUgdGltZSBUViBmb3IgZGVjYWRlcywgR3J1bmR5IHN0YXJ0ZWQgYXMgYSByYWRpbyBjb21tZW50YXRvciBpbiB0aGUgMTk1MHMgYW5kIHdlbnQgb24gdG8gYnVpbGQgYSBUViBwcm9kdWN0aW9uIGVtcGlyZS4gClRoaXMgb25lIGlzIHByZXR0eSBmdWNrZWQgdXAuIFRoZSBtb20gaXMgaW4gb24gaXQgYW5kIHRoZXkgYXJlIGNoZWNraW5nIHRvIHNlZSBpZiB0aGUga2lkIGNvdWxkIGJlIGFiZHVjdGVkIGJlY2F1c2UgdGhlIGRhZCBpcyBjb25zdGFudGx5IG9uIGhpcyBwaG9uZSBhbmQgbm90IHBheWluZyBhdHRlbnRpb24gd2hlbiBhdCB0aGUgcGFyayB3aXRoIHRoZWlyIHNvbi4KSW4gcG9rZXIgNSBjYXJkcyBzYW1lIHN1aXQgYXJlIG9uIHRoZSB0YWJsZSBpbmNsdWRpbmcgdGhlIGFjZSBpcyB0aGlzIGEgc3BsaXQgcG90PwoiRG91Z2xhcyBDb3VudHkgaXMgdmVyeSBnZW5lcm91cy4iIFRoZSBjb3VudHkgcmFua2VkIGZvdXJ0aCBpbiB0aGUgc3RhdGUgZm9yIHBlciBjYXBpdGEgZG9uYXRpb25zIHRvIHRoZSBBbWVyaWNhbiBDYW5jZXIgU29jaWV0eSwgc2hlIHNhaWQuVGhpcyB5ZWFyLCBCcmljZSBoYXMgcmFpc2VkIHRoZSBiYXIgZm9yIGhpcyB0ZWFtLiBUaGUgNiB5ZWFyIG9sZCB3YW50cyB0byBlYXJuICQxOCwwMDAgZnJvbSB0aGUgbGF3bm1vd2VyIHJhY2UuIkFsbCB0aGUgbW9uZXkgd2UgYnJpbmcgaW4gYXQgdGhlIHJlbGF5IHN0YXlzIGluIG91ciBhcmVhLCIgc2FpZCBKb3NoIFJpY2gsIGVudGVydGFpbm1lbnQgY2hhaXJtYW4gZm9yIHRoaXMgeWVhcidzIHJlbGF5IGFuZCBhIDE2IHllYXIgdmV0ZXJhbiBvZiB0aGUgZXZlbnQuICJJdCBnb2VzIHRvIGhlbHAgcGVvcGxlIHN0cnVnZ2xpbmcgd2l0aCBjYW5jZXIuIi4gCkkgbWlnaHQgaGF2ZSBsb3dlciBjb250cmFzdCBzZW5zaXRpdml0eSB0aGFuIG90aGVyIHBlb3BsZSAobW9zdGx5IGR1ZSB0byBkcnkgZXllLCBidXQgdGhpcyBpcyBjb21tb24gZm9yIGFueW9uZSB0aGF0IGhhZCBMQVNJSy9QUksgb3IgaGF2ZSBleWUgZGlzZWFzZXMgb3IgZXZlbiwganVzdCwgZ2V0dGluZyBvbGRlciksIGJ1dCBpbiBnZW5lcmFsLCBsb3cgY29udHJhc3QgZ3JheXNjYWxlIGNhbiBiZWNvbWUgdmVyeSB0aXJpbmcgdG8gbG9vayBhdC4gSXQganVzdCBzdWNrcyBiZWNhdXNlIG15IGV5ZXMgcGh5c2ljYWxseSBodXJ0IGZyb20gcGxheWluZyB0aGlzIGdhbWUuIEFuZCB0aGlzIGlzIGJhZCBkZXNpZ24gaW4gZ2VuZXJhbC4gClJlZCBXaW5ncyBIb25vciBUZWQgTGluZHNheSwgV2luIEluIFNob290b3V0QXRoYW5hc2lvdSBzY29yZWQgaW4gdGhlIHRoaXJkIHBlcmlvZCBhbmQgaGFkIHRoZSBvbmx5IGdvYWwgaW4gYSBzaG9vdG91dCAsIGxpZnRpbmcgdGhlIERldHJvaXQgUmVkIFdpbmdzIG92ZXIgdGhlIHNjdWZmbGluZyBOZXcgWW9yayBSYW5nZXJzIDMgMiBvbiBUaHVyc2RheSBuaWdodCB0byBzbmFwIGFuIGVpZ2h0IGdhbWUgbG9zaW5nIHN0cmVhay4gVG8gQmVhdCBXaW5nc05hdGhhbiBNYWNLaW5ub24gd2lwZWQgYXdheSBhIHNlYXNvbiB3b3J0aCBvZiBvdmVydGltZSBmcnVzdHJhdGlvbiB3aXRoIGEgZ29hbCB0aGF0IHdhcyBjcml0aWNhbCB0byBDb2xvcmFkbyBwbGF5b2ZmIHB1c2guLiAKVGhlIDExMCByb29tIEhvbGlkYXkgSW5uIEV4cHJlc3MgUmlvIEJyYW5jbyBpcyBvd25lZCBieSBJbnRlciBPY2VhbmljYSBIb3RlbGFyaWEgTHRkYSB1bmRlciBhIGxpY2Vuc2UgYWdyZWVtZW50IHdpdGggYSBjb21wYW55IGluIHRoZSBJbnRlckNvbnRpbmVudGFsIEhvdGVscyBHcm91cC4gVGhlIGhvdGVsIHdpbGwgYmUgc3VpdGFibHkgbG9jYXRlZCBpbiB0aGUgY2VudGVyIG9mIFJpbyBCcmFuY28ncyBkb3dudG93biBhcmVhIHdpdGhpbiBjbG9zZSBkaXN0YW5jZSB0byBtdWx0aXBsZSB0b3VyaXN0IGF0dHJhY3Rpb25zLiBUaGUgbmluZSBzdG9yeSBob3RlbCB3aWxsIGJvYXN0IGZvdXIgbWVldGluZyByb29tcywgYW4gb3V0ZG9vciBwb29sLCBiYXIsIGEgZnVsbHkgZXF1aXBwZWQgYnVzaW5lc3MgY2VudGVyIGFuZCBneW0uCk5vcnRoIENhcm9saW5hIFJlcHVibGljYW4gU2VuYXRvciBUaG9tIFRpbGxpcyB3cm90ZSBpbiBhIFdhc2hpbmd0b24gUG9zdCBvcGluaW9uIHBpZWNlIHRoYXQgaGUgdG9vIHdvdWxkIHZvdGUgZm9yIHRoZSBtZWFzdXJlLCBzYXlpbmcsICJJIGNhbm5vdCBqdXN0aWZ5IHByb3ZpZGluZyB0aGUgZXhlY3V0aXZlIHdpdGggbW9yZSB3YXlzIHRvIGJ5cGFzcyBDb25ncmVzcy4iLiAKQSBTZXB0ZW1iZXIgRXZlbmluZ1R1cmtpc2ggUm9jayBUaGUgc29uZyB0aGF0IGluc3BpcmVkClN0YXRlIExpY2Vuc2VTb21lIHN0YXRlcyByZXF1aXJlIGFueW9uZSB3aG8gZ2l2ZXMgZm9vdCBtYXNzYWdlcyBmb3IgYSBwcm9maXQgdG8gaGF2ZSBhIHN0YXRlIGlzc3VlZCBtYXNzYWdlIHRoZXJhcHkgbGljZW5zZS4gQXQgdGhlIHRpbWUgb2YgcHVibGljYXRpb24sIDM0IHN0YXRlcyBkbyBub3QgcmVndWxhdGUgb3IgcmVxdWlyZSBsaWNlbnNpbmcgZm9yIGZvb3QgbWFzc2FnZS4gVG8gZ2V0IGEgc3RhdGUgbGljZW5zZSwgeW91IG11c3QgbWVldCB0aGUgc3RhdGUncyB0cmFpbmluZyByZXF1aXJlbWVudHMsIHdoaWNoIHVzdWFsbHkgaW5jbHVkZSBhIHNwZWNpZmljIGFtb3VudCBvZiB0cmFpbmluZyBob3VycywgYSB3cml0dGVuIGV4YW1pbmF0aW9uIGFuZCB0aGUgbGljZW5zZSBhcHBsaWNhdGlvbiBwcm9jZXNzaW5nIGZlZS4gClBsYXllcnMgYXQgdGhhdCBzdGFrZSAoaWYgdGhleSBhcmUgZXZlbiBhcm91bmQpIGFyZSB0aGUgbW9zdCBxdWFsaWZpZWQgdG8gYW5zd2VyIHRoYXQgcXVlc3Rpb24sIGJ1dCBzaW5jZSB5b3UgYXNrZWQgaXQgaGVyZSB3aGVyZSB0aGUgcXVhbnRpdHkgb2YgdGhlbSBtYXkgYmUgbG93LCBJIHdpbGwgb2ZmZXIgYSBndWVzcy4gSSBpbWFnaW5lIHN0cm9uZyA1MC8xMDAgcGxheWVycyBoYXZlIGFuIGluY3JlZGlibHkgc29saWQgZm91bmRhdGlvbiBvZiB0aGUgYmFzaWMgZnVuZGFtZW50YWxzIG9mIHBva2VyLCBzdWNoIGFzIGJlaW5nIGFibGUgdG8gcmVjb2duaXplIHRoZSBHVE8gbGluZSBpbiB0aGUgbWFqb3JpdHkgb2Ygc3BvdHMsIGFzIHdlbGwgYXMgdG8gaWRlbnRpZnkgdGhlaXIgb3Bwb25lbnRzIHBsYXkgYmFzZWQgb2ZmIG9mIHRoZWlyIHRlbmRlbmNpZXMgcmF0aGVyIHF1aWNrbHkgc28gdGhhdCB0aGV5IGNhbiBkZXZpYXRlIHRvIG1vcmUgZXhwbG9pdGF0aXZlIHBsYXkuIFRoaXMgZW5hYmxlcyB0aGUgc29saWQgcGxheWVycyB0byB1bmxlYXNoIHRoZWlyIGFyc2VuYWwgb2YgbW92ZXMgaW5jbHVkaW5nIHNxdWVlemluZywgZGVmZW5kaW5nLCBmbG9hdGluZywgYmFycmVsaW5nLCAzYmV0dGluZyBsaWdodCwgb3ZlcmJldHRpbmcsIGRvbmtpbmcsIGV0Yy4gCkxvbCBkdWRlLCBpdHMganVzdCBhIG1lbWUuIEkgd3JvdGUgdGhpcyBpbiAyIG1pbnV0ZXMuIEZvcmdpdmUgbWUgZm9yIG5vdCBkb3VibGUgY2hlY2tpbmcgaXQuIApUaGUgc2FtZSBtYXkgdW5mb3J0dW5hdGVseSBiZSBzYWlkIGZvciBtYW55ICJuYXR1cmFsIGhlYWx0aCBjYXJlIHByb3ZpZGVycyIgdGhhdCBhcmUgb2Z0ZW4gYXMgYmVob2xkaW5nIHRvIHRoZSBpbnRlcmVzdHMgb2YgbmV1dHJhY2V1dGljYWwgY29tcGFuaWVzIGFzIGFsbG9wYXRoaWMgcGh5c2ljaWFucyBhcmUgYmVob2xkaW5nIHRvIGRydWcgY29tcGFuaWVzLgpCb3JuIE5vdi4gCkkgaGF2ZW4ndCBoYWQgZmxha3kgc2tpbiBzaW5jZSBJIHN0YXJ0ZWQgdXNpbmcgaXQgYW5kIGl0IGdvZXMgb24gd2VsbCB1bmRlciBib3RoIG15IHNsZWVwaW5nIHBhY2tzL3RoZSBjZXJhdmUgaGVhbGluZyBvaW50bWVudC4gClRoZSBHZXJtYW4gbGFuZ3VhZ2UgaGFzIGFjdHVhbGx5IHdyb25nZnVsbHkgYWRhcHRlZCB0aGUgd29yZCBvdmVyIHRoZSBjZW50dXJpZXMgYW5kIHR1cm5lZCBpdCBpbnRvICJRdWVudGNoZW4iIChhIHZlcnkgc21hbGwgYW1vdW50KSAgIGluc3RlYWQgb2YgIlF1aW50Y2hlbiIuIAoiVGhlcmUgYXJlIHZhcnlpbmcgZGVncmVlcyBvZiBodWdzLCIgTWFyY2hpb25uZSBzYWlkIGluIHRoZSBBdXRvbW90aXZlIE5ld3MgaW50ZXJ2aWV3IHB1Ymxpc2hlZCBNb25kYXkuICJJIGNhbiBodWcgeW91IG5pY2VseSwgSSBjYW4gaHVnIHlvdSB0aWdodGx5LCBJIGNhbiBodWcgeW91IGxpa2UgYSBiZWFyLiIKSG93IHRvIFVuZGVyc3RhbmQgQ2FzaW5vIFBva2VyIENoaXBzIFdlaWdodApBIHByb2R1Y3RBIHBsYWNlIHRvIHNlbGwgdGhlIHByb2R1Y3QgICBpbiBlIGNvbW1lcmNlLCBhIFdlYiBzaXRlIGRpc3BsYXlzIHRoZSBwcm9kdWN0cyBpbiBzb21lIHdheSBhbmQgYWN0cyBhcyB0aGUgcGxhY2VBIHdheSB0byBnZXQgcGVvcGxlIHRvIGNvbWUgdG8geW91ciBXZWIgc2l0ZUEgd2F5IHRvIGFjY2VwdCBvcmRlcnMgICBub3JtYWxseSBhbiBvbiBsaW5lIGZvcm0gb2Ygc29tZSBzb3J0QSB3YXkgdG8gYWNjZXB0IG1vbmV5ICAgbm9ybWFsbHkgYSBtZXJjaGFudCBhY2NvdW50IGhhbmRsaW5nIGNyZWRpdCBjYXJkIHBheW1lbnRzLiBUaGlzIHBpZWNlIHJlcXVpcmVzIGEgc2VjdXJlIG9yZGVyaW5nIHBhZ2UgYW5kIGEgY29ubmVjdGlvbiB0byBhIGJhbmsuIERlbGwgd291bGQgYmUgc2VsbGluZyBubyBtb3JlIGNvbXB1dGVycy4gClVuZW1wbG95bWVudCBsZWFwdCBmcm9tIDQuNSB0byAxNCBwZXJjZW50IGluIHRocmVlIHllYXJzIGFzIGNvbnN0cnVjdGlvbiBwcm9qZWN0cyBncm91bmQgdG8gYSBoYWx0LiAKU2VhbCB0aGUgcGljdHVyZXMuIFlvdSBtaWdodCB3YW50IHRvIGFwcGx5IGEgY29hdGluZyBvdmVyIHRoZSB0b3Agb2YgdGhlIHBpY3R1cmVzIHRvIHNtb290aCB0aGVtIGFsbCBkb3duIGFuZCB0byBzZWFsIHRoZW0uIApTdGlsbCB3b3J0aCBicmluZ2luZyB1cCB0aGUgcmlza3Mgd2l0aCB0aGUgZW5kIGNsaWVudCBhcyBjbGVhcmx5IGFzIHBvc3NpYmxlLi4gCkJ1dCBpZiB5b3UgdHJ5IHRvIGNvdW50IHRoZSBudW1iZXIgb2YgcG9zc2libGUgY29tYmluYXRpb25zIG9mIHRob3NlIGNhcmRzLCB5b3UgYmV0dGVyIGhhdmUgYSBmZXcgZXZlbmluZ3MgZnJlZS4gCkhlIGZpbmFsbHkgZmVsdCBsaWtlIHRoaW5ncyB3ZXJlIHR1cm5pbmcgYXJvdW5kIGFuZCB0aGF0IHNvbWVkYXksIHNvb24sIGhlIG1pZ2h0IGJlIGFibGUgdG8gcHJvdmUgdG8gaGlzIGV4IHRoYXQgaGUgd2FzIG5vdyBjYXBhYmxlIG9mIGJlaW5nIGEgcGFydCBvZiBraWRzIGxpdmVzIGluIHRoZSB3YXkgc2hlIGFsd2F5cyBob3BlZCBoZSBjb3VsZC4gQnV0IG5vdyB0aGF0IHdhcyBhbGwgYXQgcmlzay4gQ2FyIHRyb3VibGUgb24gdGhlIHdheSB0byB3b3JrIHRoYXQgbW9ybmluZyBoYWQgbWFkZSBoaW0gbGF0ZSBnZXR0aW5nIG91dCBvbiBoaXMgcm91dGUsIGFuZCB0aGUgYm9zcyBoYWQgd2FybmVkIGhpbSBpdCB3YXMgdGhlIGZpbmFsIHN0cmF3IGFuZCBpZiBoZSBkaWRuIGdldCBhbGwgaGlzIGRlbGl2ZXJpZXMgaW4gdG9kYXksIGhlIHNob3VsZCBub3QgYm90aGVyIGNvbWluZyBiYWNrLiAKQSBwb3N0IHdpdGggMyBjb21tZW50cyBzYXlpbmcgdGhhdCBoYXMgYWxtb3N0IG5vIGNoYW5jZSB0byBzd2F5IHNvbWVvbmUuIApTdWNoIG1hc3NldXJzIHNlZSBUYW50cmljIHdvcmsgYXMgdW53b3J0aHkgb2YgdGhlaXIgInByb2Zlc3Npb24sIiBiZXNtaXJjaGluZyB0aGUgcHVyaXR5IG9mIHRoZWlyIHZhbmlsbGEgd29yay4gCkkgbGVhcm5lZCB0aGlzIHByZXR0eSBlYXJseSBvbiB3aXRoIG15IGRvZyAod2hvIG5vdyAxMyB5ZWFycyBvbGQpLCB1bmZvcnR1bmF0ZWx5LiBIZSB3YXMgbWF5YmUgOCBtb250aHMgb2xkIGF0IHRoZSB0aW1lLCBhbmQgSSB3YXMgbGl2aW5nIGluIGEgcHJldHR5IHJvdWdoIG5laWdoYm9yaG9vZC4gaXQgd2FzIGFyb3VuZCAyYW0gYW5kIEkgd2FzIHdhdGNoaW5nIFRWIGluIHRoZSBsaXZpbmcgcm9vbSwgd2hlbiBJIGhlYXJkIHRoZSBzb3VuZCBvZiBzb21lb25lIGNsaW1iaW5nIG15IGJhY2sgZmVuY2UuIFJ1ZHkgQk9MVEVEIHRocm91Z2ggdGhlIGRvZyBkb29yIGF0IHRvcCBzcGVlZCwgYW5kIGNoYXJnZWQgdGhlIGZlbmNlIHdpdGggaGlzIGJpZ2dlc3QgYmFkZGVzdCBHUk9XTCBCQVJLISBOZXh0IHRoaW5nIEkgaGVhciBpcyB0aGUgZmVuY2UgY2xpbWJlciB0aHVua2luZyBkb3duIG9uIHRoZSBvdGhlciBzaWRlLCBhbmQgcnVubmluZyBhd2F5LiBSdWR5IHN0YXllZCBhdCB0aGF0IGZlbmNlIHVudGlsIG1vcm5pbmcsIHNvZnRseSBncm93bGluZyBsaWtlICJKdXN0IFRSWSBhbmQgY29tZSBiYWNrLCBhIGhvbGUuIiBTdWNoIGEgZ29vZCBib2kuIDogKQoiUGhpbCBIZWxsbXV0aCBoYXMgZm9yZ290dGVuIG1vcmUgYWJvdXQgcG9rZXIgdGhhbiBJIHdpbGwgZXZlciBrbm93LCIgc2F5cyBCZWdsZWl0ZXIuICJTbyBpZiBoZSBzYXlzIEkgd2lsbCBtYWtlIGEgYmlnIG1pc3Rha2UgSSBwcmVzdW1lIGhlIGlzIGEgaGVhdnkgZmF2b3JpdGUgdG8gYmUgcmlnaHQuIEJ1dCBJIGd1ZXNzIEknbGwgc3RpbGwgc2hvdyB1cCBhbmQgc2VlIHdoYXQgaGFwcGVucy4iIEJlZ2xlaXRlciBhY2tub3dsZWRnZXMgdGhlIFggZmFjdG9yIGRpbWVuc2lvbiBoZSBicmluZ3MgdG8gdGhlIGZpbmFsIHRhYmxlIGJ1dCBzYXlzIGl0IGNvdWxkIGJlIGhpcyBhY2UgaW4gdGhlIGhvbGU7IGhpcyB1bnByZWRpY3RhYmlsaXR5IGhlbHBzIG1ha2UgaGltIGEgZGFuZ2Vyb3VzIHBsYXllci4KIkhpcyBbRGhvbmknc10gYWJpbGl0eSB0byBsZXQgYmFsbHMgZ28gZm9yIHdpZGUgYW5kIGhpcyBwcmVzZW5jZSBvZiBtaW5kIG5ldmVyIGNlYXNlcyB0byBhbWF6ZSwiIEZsZW1pbmcgc2FpZC4gIldlIGhhdmVuJ3Qgc2VlbiBpdCBhcyBtdWNoLCB0aGUgZ2FwcyBiZXR3ZWVuIFtzdWNoXSBpbm5pbmdzIGhhdmUgYmVlbiBiaWdnZXIsIGJ1dCBpbiB0aGlzIElQTCBoaXMgYmF0dGluZyBoYXMgYmVlbiBleGNlbGxlbnQsIGFuZCB0aGUgaW5uaW5ncyB0b2RheSB3YXMgb25lIG9mIHRoZSBiZXN0IG9uZXMgSSd2ZSBldmVyIHNlZW4uIgpUaGlzIGlzIG5vdCBldmVuIGNsb3NlIHRvIGNvcnJlY3QsIHdob2V2ZXIgdHlwZWQgdGhpcyBpcyBub3Qgc21hcnQgb3Igc2ltcGx5IGRvZXMgbm90IGtub3cgcG9rZXIgcnVsZXMuIEluIHRoaXMgcGFydGljdWxhciBjYXNlIHRoZSBraW5nIHdvdWxkIGJlIHRoZSBoaWdoZXN0IGNhcmQgaGVsZCwgc28gaXQgdGFrZXMgdGhlIGhhbmQuIApEaWRuJ3QgeW91IGFncmVlIHRvIHdvcmsgZm9yIGEgZGVuYXJpdXM/IDE0IFRha2UgeW91ciBwYXkgYW5kIGdvLiAKVGhlIEdpYW50cyBqdXN0IGxvYWRlZCB0aGUgYmFzZXMgd2l0aCBubyBvdXRzLCBhbmQgUGFkcmVzIG1hbmFnZXIgQnVkIEJsYWNrIGp1c3QgcmVwbGFjZWQgcmlnaHQgaGFuZGVkIHN0YXJ0ZXIgSm9zaCBCYW5rcyBmb3IgbGVmdHkgSnVzdGluIEhhbXBzb24uLiAKV2h5IDQgYmV0IEFRbyBPT1A/IEl0cyBhd2Z1bCwgdGhlIHRhYmxlIGlzIHRlbGxpbmcgeW91ICJ3ZSBhcmUgc3Ryb25nIi4gCkNoZXNzIGlzIGNsZWFybHkgbW9yZSBjb21wbGV4LCBidXQgb3RoZWxsbyBpcyBjb21wbGV4IGVub3VnaCBmb3IgdGhlIGF2ZXJhZ2UgaHVtYW4gYmVpbmcuIAoiICJIb3cgbWFueSB3b21lbiBvbiB0aGUgc2lkZSBkbyB5b3UgdGhpbmsgaGUgaGFkIG92ZXIgdGhlIHllYXJzPyAiICJJIHdvdWxkIHByb2JhYmx5IHNheSBpdCdzIGVhc2lseSAxMDAsICIgc2FpZCBOaWV0by4gRXJuaWUgbWV0IGFub3RoZXIgd29tYW4gaW4gTmV3IE9ybGVhbnMgZHVyaW5nIHRoZSBjaXR5J3MgYW5udWFsIEphenogRmVzdCBjZWxlYnJhdGlvbnMuICJTZWVtZWQgbGlrZSBhIG5pY2UgZ3V5LCAiIHRoZSB3b21hbiB0b2xkIFZhbiBTYW50LiAKVGhlIGZpcnN0IHNjaWVudGlzdHMgdGhhdCBzdHVkaWVkIHJhY2UgYW5kIElRIHdlcmUgd2hpdGUgc3VwcmVtYWNpc3RzIHZlcnkgb3BlbiBhYm91dCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSB0cnlpbmcgdG8gcHJvdmUgd2hpdGVzIHdlcmUgc3VwZXJpb3IgYW5kIGp1c3RpZnkgSmltIENyb3cgbGF3cywgYmFucyBhZ2FpbnN0IGludGVycmFjaWFsIG1hcnJpYWdlLCBldWdlbmljcywgYW5kIGV2ZW4gZ2Vub2NpZGUuIAoiVGhlIHdheSB0aGF0IHRoaXMgd2FzIHNwdW4sIGl0IGxvb2tzIHZlcnkgYmFkLiBJdCBsb29rcyBsaWtlLCAnT2gsIHdlIGhhdmUgdGhpcyBwZXJ2ZXJ0LicgSSB0aGluayBpdCdzIGZhaXJseSBvYnZpb3VzIHRoYXQgaXQgaGFzIGhhZCBhbiBpbXBhY3QgaW4gdGhlIG9mZmljZSwiIGhlIHNhaWQuIApJIHdva2UgdXAgdGhpcyBtb3JuaW5nIHdvbmRlcmluZyB3aGF0IHRoZSBoZWNrIGhhcHBlbmVkIGxhc3QgbmlnaHQgYXQgb3VyIHBva2VyIHBhcnR5LiBZb3UgZXZlciBoYXZlIGEgcHN5Y2hvbG9naWNhbCBiYXR0bGUgd2l0aCBzb21lb25lIGFuZCBtYWtlIGEgYm9uZWhlYWRlZCBwbGF5PyBXZWxsLCB0aGF0IHdhcyBtZSBsYXN0IG5pZ2h0IGFuZCBJIGZpbmlzaGVkIGp1c3Qgb3V0IG9mIHRoZSBtb25leS4gCk9ubHkgbGF0ZXIsIG9uY2UgSSBiZWNhbWUgc3VzcGljaW91cyB0aGF0IG5vIG1hbGZlYXNhbmNlIHdhcyB0YWtpbmcgcGxhY2UsIGRpZCBJIGV4YW1pbmUgdGhlIGNvbnRyYWN0cyBhbmQgdGhlIHdvcmsgcmVuZGVyZWQuIApBIGNvbXBsZXRlIGFtYXRldXIgY2FuIGFjdCBsaWtlIGEgcHJvZmVzc2lvbmFsLiBBbG1vc3QgZXZlcnkgZ2FtZSBoYXMgaXQncyBvd24gY3JpdGVyaWEsIHRlY2huaXF1ZXMgYW5kIHRhY3RpY3MuIApMYSBsb2kgcHJzdW1lIHF1ZSBsJ2VuZmFudCBjb251IHBlbmRhbnQgbGUgbWFyaWFnZSAgcG91ciBwcmUgbGUgbWFyaS4gRW4gZGVob3JzIGRlcyBsaWVucyBkdSBtYXJpYWdlLCBsJ2F0dGVudGlvbiBzZSBwb3J0ZSBzdXIgbGVzIHJlbGF0aW9ucyBlbnRyZXRlbnVlcyBhdSBtb21lbnQgZGUgbGEgY29uY2VwdGlvbi4gT24gZHRlcm1pbmUgYWxvcnMgbGEgZGF0ZSBkZSBjb25jZXB0aW9uIHBhciByZW52b2kgIGxhIHByaW9kZSBkdSAzMDBtZSBqb3VyIGF1IDE4MG1lIGpvdXIgYXZhbnQgbGEgbmFpc3NhbmNlLCBjZSBxdWUgY29uc2FjcmUgbCdhcnRpY2xlIDMxMSBkdSBDb2RlIGNpdmlsLi4gCktldXJpZyBpcyB0aGUgbGVhZGluZyBicmFuZCBpbiB0aGUgY29mZmVlIHBvZCBhbmQgc2luZ2xlIHNlcnZlIGNvZmZlZSBtYWtlciBzZWdtZW50cy4gVGhlaXNlbiwgd2hvIHdvcmtzIGluIHRoZSBUb3JvbnRvIHJlZ2lvbmFsIG9mZmljZSwgc2F5cyBoZSBkaWRuJ3Qga25vdyBtdWNoIGFib3V0IGNvZmZlZSwgb3IgS2V1cmlnIGZvciB0aGF0IG1hdHRlciwgd2hlbiBoZSBzdGFydGVkLiBUaGF0IHF1aWNrbHkgY2hhbmdlZC4gClRoYXQgaXNuIGhhcHBlbmluZy4gCkkgd291bGRuIHNheSBJIHJhbiBob3R0ZXIgdGhhbiB0aGUgc3VuIG9yIGFueXRoaW5nLiAKSG93ZXZlciwgdGhlIHRydXRoIGJlaGluZCB0b2RheSBzcGluYWwgdHJlYXRtZW50cyBpcyB0aGF0IHdoaWxlIHRoZSBzcGluZSBjYW4gZWFzaWx5IGRlZ2VuZXJhdGUsIGl0IGNhbiBhbHNvIHJlZ2VuZXJhdGUuCkJyYW5kYWJsZSBwcm9kdWN0cyBhcmUgbm90IGZvdW5kIHRoYXQgZWFzaWx5LiAKSSAoMTltKSBqdXN0IGxvc3QgbXkgZ2lybGZyaWVuZCgxOWYpIG9mIDMgeWVhcnMuIEkga25vdyBpdCBzdWNrcyB0byBoZWFyIHRoYXQgcmlnaHQgbm93LiBJIHdlbnQgdGhyb3VnaCBhIHZlcnkgc2ltaWxhciBzaXR1YXRpb24sIEkgd2FzIGluIGEgc2ltaWxhciBzaXR1YXRpb24gbGFzdCB5ZWFyLiBJIGRpZCBldmVyeXRoaW5nIEkgY291bGQgdG8gbWFrZSBteSBib3lmcmllbmQgaGFwcHksIGJ1dCBpdCB3YXMgbmV2ZXIgZ29vZCBlbm91Z2guClNvbWV0aW1lcyBhIGRlY2lzaW9uIGhhcyB0byBiZSBtYWRlLiBMb3NpbmcgdGhlIHdvbWFuIHdpbGwgaW1wYWN0IHRoZSB3b3JsZCBzaWduaWZpY2FudGx5IG1vcmUgdGhhbiBsb3NpbmcgdGhlIGZldHVzLiAKVGhlIEJpbHRtb3JlIEVzdGF0ZSBpcyBvcGVuIDM2NSBkYXlzIGEgeWVhciBhbmQgc2VsZiBndWlkZWQgYW5kIGd1aWRlZCB0b3VycyBvZiB0aGUgQmlsdG1vcmUgSG91c2UsIHRoZSBnYXJkZW5zIGFuZCBBbnRsZXIgSGlsbCBWaWxsYWdlIGFyZSBhdmFpbGFibGUgdG8gZGF5dGltZSBndWVzdHMuIApBIGNvdXBsZSBvZiB3ZWVrcyBhZnRlciBtYWtpbmcgdGhhdCBpbml0aWFsIGNvbXBsYWludCBhYm91dCBCcm9vbWUgZm9yIGdpdmluZyBvdXQgbXkgZGV0YWlscywgSSB3YXMgdG9sZCBoZSB0aGUgc3BvdXNlIG9mIFNhcmFoIERhdmlzLgpJbiB0aGlzIGNhc2UsIHRoZSB0ZW5kb24gaW4gcXVlc3Rpb24gaXMgdGhlIHF1YWRyaWNlcHMgdGVuZG9uIHRoYXQgY29ubmVjdHMgdGhlIHF1YWRyaWNlcHMgbXVzY2xlIHRvIHRoZSBrbmVlY2FwLiBFdmVuIGlmIHRoZSBwYWluIGZyb20gdGhlIHRlbmRpbm9zaXMgaXMgYmVpbmcgbWFuYWdlZCwgdGhlIG1haW4gcHJvYmxlbSBhc3NvY2lhdGVkIHdpdGggdGhpcyB0ZW5kaW5vcGF0aHkgaXMgdGhlIHRlbmRvbiBiZWluZyBjb21wcm9taXNlZC4gQ29udGludWVkIHVzZSBvZiB0aGUgdGVuZG9uIG1ha2VzIHlvdSBoaWdobHkgc3VzY2VwdGlibGUgdG8gcGFydGlhbCBvciBjb21wbGV0ZSB0ZW5kb24gcnVwdHVyZXMgICBpbmp1cmllcyB0aGF0IGNhbiBzaWduaWZpY2FudGx5IHNob3J0ZW4gYW4gTkJBIGNhcmVlci4KVGhpcyBpcyBteSB0aGlyZCBib29rLiBJIGhhZCBubyBiYWNrZ3JvdW5kIGluIHBva2VyIGFuZCBteSBrbm93bGVkZ2UgY2FtZSBmcm9tIFJvdW5kZXJzLiBBIGZldyB5ZWFycyBhZ28gSSBmaW5pc2hlZCBUaGUgQ29uZmlkZW5jZSBHYW1lLCBhYm91dCBjb24gYXJ0aXN0cy4gSSB3YXMgdHJ5aW5nIHRvIHRoaW5rIGFib3V0IHdoYXQgSSB3YW50ZWQgdG8gZG8gbmV4dC4gQSBsb3Qgb2YgdGhpbmdzIHdlbnQgd3JvbmcgYWZ0ZXIgdGhhdCBib29rIGFuZCBJIHdhcyBjb250ZW1wbGF0aW5nIHRoZSBuYXR1cmUgb2YgbHVjay4gV2UgZG9uJ3QgYXBwcmVjaWF0ZSBsdWNrIGluIGxpZmUgd2hlbiB0aGluZ3MgYXJlIGdvaW5nIHdlbGwuIE5vIG1hdHRlciBob3cgc21hcnQgSSBhbSBhbmQgaG93IEkgcHJlcGFyZSwgdGhlcmUgYXJlIHRoaW5ncyB0aGF0IGNhdGNoIHlvdSBvZmYgZ3VhcmQuIEkgcmVhbGx5IHdhbnRlZCB0byBleHBsb3JlIGFuZCBhc2sgdGhlIHF1ZXN0aW9uIGFib3V0IGhvdyBtdWNoIHdlIGFjdHVhbGx5IGNvbnRyb2wuIEkgZG9uJ3QgdGhpbmsgYSBsb3Qgb2YgcGVvcGxlIHBvc2UgdGhhdCBxdWVzdGlvbiB0byB0aGVtc2VsdmVzIGFuZCBkb24ndCBjb25zaWRlciBob3cgbHVja3kgdGhleSBhcmUuIElmIHlvdSBzZW5kIHRoYXQgcGl0Y2ggdG8gZWRpdG9ycywgdGhleSdkIGxhdWdoLiBJIHdhcyByZWFkaW5nIGEgbG90IGFuZCB0cnlpbmcgdG8gZmlndXJlIG91dCBob3cgdG8gd3JhcCBteSBtaW5kIGFyb3VuZCBsdWNrIHZlcnN1cyBjaGFuY2UuCllvdSB3aWxsIHJlY2VpdmUgdGhlIGZpcnN0IGNoaW9zIGF0dHVuZW1lbnQsIHdoaWNoIHdpbGwgZ3JlYXRseSBhc3Npc3QgeW91IGluIG9wZW5pbmcgdGhlIGFiaWxpdHkgdG8gY2hhbm5lbCB0aGUgaGVhbGluZyBlbmVyZ3kgdGhyb3VnaCB5b3VyIGhhbmRzLi4gClRoaXMgY2FuIGJlIGV4dHJlbWVseSBiZW5lZmljaWFsIGlmIHlvdSBoYXZlIG9uZSBhcmVhIGZvciB5b3VyIENsYXkgUG9rZXIgQ2hpcHMsIGFuZCBhbm90aGVyIGFyZWEgZm9yIGFkbWluaXN0cmF0aXZlIGR1dGllcy4uIApIaXJhbSBTbG9hbmUgdG9sZCBtZSB0aGUgb3RoZXIgZGF5IHRoYXQgYSBiaWcgZW52ZWxvcGUgYWRkcmVzc2VkIHRvIHRoZSBSb2xsaW5ncyBSZWxpYWJsZSBCYWtpbmcgUG93ZGVyIENvbXBhbnkgb2YgTW9udHJlYWwgaGFkIGJlZW4gZHJvcHBlZCBpbnRvIHRoZSBwb3N0IG9mZmljZSBib3ggYSBtb250aCBhZ28sIGFuZCBzaGUgc3VzcGljaW9uZWQgdGhhdCBzb21lYm9keSB3YXMgdHJ5aW5nIGZvciB0aGUgcHJpemUgdGhleSdkIG9mZmVyZWQgZm9yIHRoZSBiZXN0IHN0b3J5IHRoYXQgaW50cm9kdWNlZCB0aGUgbmFtZSBvZiB0aGVpciBiYWtpbmcgcG93ZGVyLiAKSSBzYXkgdGhpcyBiZWNhdXNlIG15IG1vbSB3YXMgb24gdGhlIG9ibGl2aW91cyBzaWRlLiBNeSBraWQgaXMgMTkgbm93LCBhbmQgd2hpbGUgc2hlIHdhcyBncm93aW5nIHVwLCBteSBtb20gaGFkIG1vbmV5IGFuZCBJIGRpZG4gV2hlbiB0aGluZ3MgY2FtZSB1cCwgSSBjb3VsZG4gZGVueSBteSBtb20gdG8gaGVscCBvdXQsIGJlY2F1c2UgSSB3YXMgdG9vIGJyb2tlIGZvciBjb3N0dW1lcyBvciBhY3Rpdml0aWVzLiAKT3RoZXIgdGhhbiB0aGF0LCBJIGFsd2F5cyB3YW50ZWQgdGhlIGFiaWxpdHkgdG8gbGF5ZXIgY2xvdGhlcyBkaWZmZXJlbnRseSBhbmQgd2VhciBtb3JlIHRoYW4gb25lIGl0ZW0gZnJvbSBlYWNoIGNhdGVnb3J5LiBUaGVyZSBhcmUgc28gbWFueSBvdXRmaXRzIHJ1aW5lZCBieSBob3cgc29tZXRoaW5nIGRvZXNuIHNpdCB3ZWxsIG9uIHRvcCBvZiBvciB1bmRlciBhbm90aGVyIGl0ZW0uIApJdCBpcyBjbGVhciB0aGF0IHRoZSBFZ3lwdGlhbnMgdXNlZCBhIHByb2Nlc3MgdG8gZXh0cmFjdCBvaWxzIGZyb20gYXJvbWF0aWMgcGxhbnRzIGZvciB1c2UgaW4gbWVkaWNpbmFsIHJlbWVkaWVzLiAKWW91IGdhdmUgdGhlbSBvdmVyIDIgMSB0byBjYWxsIHdoaWNoIG1lYW5zIGFsbW9zdCBhbnkgaGFuZCBvdGhlciB0aGFuIHN0b25lIGNvbGQgbm90aGluZyB3YXMgZ29pbmcgdG8gY2FsbC4gCkEgIm1pc2xvYWQiIHdvdWxkIGdpdmUgdGhlIGF0aGxldGUgMyBtaW51dGVzIHRvIGF0dGVtcHQgYWdhaW4sIHNoZSB3YXMgZ2l2ZW4gMTUgdGlsIGhlciBuZXh0IGF0dGVtcHQuIApUaGVyZSBhbHNvIGEgZmV3IG1vcmUgd2l0aGluIDUgMTAgbWludXRlcyBkcml2ZSBpbiB2YXJpb3VzIG90aGVyIHBsYXphcy4gCkFuZCwgd2hpbGUgZm9vdCB0cm91YmxlIGFmZmVjdHMgYm90aCBtZW4gYW5kIHdvbWVuLCB3b21lbiBzdWZmZXIgbW9yZSBwYWluLiAKQnV0IG1heWJlIG5vdyBJIHNob3VsZCBzdG9wIGNvdW50aW5nIHdpdGggYmlnIG51bWJlcnMuIFdoeSBhbSBJIHRoaW5raW5nIGFib3V0IDMwIHllYXJzIGxlZnQ/IEkgaGF2ZSBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBvbmUgeWVhciBhbmQgdGhhdCBhIGxvdCBvZiB0aW1lIHRvIGRvIGEgbG90IG9mIHN0dWZmLiBPciwgYW5kIEkga25vdyB0aGlzLCB0aGF0IGFuIGltcG9zc2libGUgZXRlcm5pdHkgd2hlbiB5b3UgY2FuIGV2ZW4gc2VlIHdoYXQgdG1yIGxvb2tzIGxpa2UuLiAKRG91ZyB3YXMgYW4gYWxsIHJvdW5kIHN1cGVyYiBhdGhsZXRlLiBIZSBiZWdhbiBwbGF5aW5nIGZvb3RiYWxsIHdoaWxlIHNlcnZpbmcgaW4gdGhlIG1pbGl0YXJ5IGFuZCBsYXRlciB3YXMgYSBtZW1iZXIgb2YgdGhlIFRvcm9udG8gQXJnb25hdXRzIGFuZCBFZG1vbnRvbiBFc2tpbW9zLCBwbGF5aW5nIGFzIGEgbWVtYmVyIG9mIHRoZSAxOTQ3IGFuZCAxOTUyIEdyZXkgQ3VwIFRlYW1zLCB3aXRoIHRoZSAxOTUyIEdyZXkgQ3VwIGJlaW5nIG9uZSBvZiBoaXMgcHJvdWRlc3QgbW9tZW50cyBpbiBoaXMgY2FyZWVyLiBIZSB3YXMgYWxzbyBhbiBvdXRzdGFuZGluZyBmYXN0YmFsbCBwbGF5ZXIgZm9yIG1hbnkgeWVhcnMsIGFuZCB3YXMga25vd24gYXMgb25lIG9mIHRoZSBiZXN0IHBsYXllcnMgaW4gYW5kIGFyb3VuZCB0aGUgVG9yb250byBhcmVhLiAKSSBhbHNvIGRvbiB1bmRlcnN0YW5kIHdoeSB0aGUgcmVsYXRpdmUgd291bGQgd2FudCB0byBkbyB0aGlzLiBXaGF0IHRoZSB1cHNpZGUgZm9yIHRoZW0gaW4gdHVybmluZyAkNDAwayBpbiBjYXNoIGludG8gYSBzbG93IHN0cmVhbSBvZiBwYXltZW50cz8gTWFrZXMgbm8gc2Vuc2UuCkknbSB5b3VuZywgZHVtYiBhbmQgZnVsbCBvZi4gV2VsbCwgeW91IGtub3csIHJlc2lkdWFsIHRlZW5hZ2UgYW5nc3QuIApJIHdvcmsgaW4gQ2FwZSBDYW5hdmVyYWwgYW5kIHRoZSBsaW5lcyBhdCB0aGUgc2VjdXJpdHkgZ2F0ZSB3ZXJlIHJpZGljdWxvdXMgTW9uZGF5IG1vcm5pbmcsIGJlY2F1c2UgU3BhY2VYIGRpZG4gdGFrZSBhbnlvbmUgYmFkZ2VzIGJlY2F1c2Ugb2YgdGhlIGFmb3JlbWVudGlvbmVkIGVtYWlsIEJTLiBTbyB0aGUgQWlyIEZvcmNlIGd1YXJkcyBsaXRlcmFsbHkgaGFkIGEgbGlzdCBvZiBwZW9wbGUgdGhhdCBkaWRuIGhhdmUgYSBqb2IgYW55bW9yZS4gCkkgcmVhZCBvbiBBbWF6b24gZm9ydW1zIHRoYXQgdGhpcyBkb2VzIG5vdCB3b3JrLiBJZiBhIHF1YWxpZmljYXRpb24gcmVxdWlyZXMgc29tZXRoaW5nIGxpa2UgIkRpZCBIaXQgRCBjYW4gYmUgMSIsIHRoZSBNZWNoYW5pY2FsIFR1cmsgc3lzdGVtIHdpbGwgbG9jayBvdXQgcGVvcGxlIHRoYXQgZG9uIGhhdmUgYW55IHZhbHVlIGluIHRoYXQgcXVhbGlmaWNhdGlvbi4gCkNoZWNrIG91dCBtb3ZpZXMgZnJvbSB0aGUgbGlicmFyeSBpbnN0ZWFkIG9mIHVzaW5nIGEgU2hhcmUgU3RheWNhdGlvbiBWYWNhdGlvbnMgYXJlIGEgdGltZSB0byBnZXQgYXdheSBmcm9tIGl0IGFsbCBhbmQgcmVsYXguIApTcGVuY2UgaW4gT3JydGFubmEuIApUaGUgd29tYW4gd2hvIGZvdW5kZWQgYSBjaGFpbiBvZiBzZWVkeSBTb3V0aCBGbG9yaWRhIG1hc3NhZ2UgcGFybG9ycyAgIGluY2x1ZGluZyBvbmUgd2hlcmUgUm9iZXJ0IEtyYWZ0IHdhcyBidXN0ZWQgZm9yIHNvbGljaXRhdGlvbiBvZiBwcm9zdGl0dXRpb24gICBhdHRlbmRlZCBQcmVzaWRlbnQgVHJ1bXAncyBTdXBlciBCb3dsIHBhcnR5LCBhbmQgZXZlbiBzbmFwcGVkIGEgc2VsZmllIHdpdGggdGhlIGNvbW1hbmRlciBpbiBjaGllZiB0aGF0IG5pZ2h0LCBhY2NvcmRpbmcgdG8gYSByZXBvcnQgRnJpZGF5LgpBbmQgd2hpbGUgb3RoZXIgcGFydHMgb2YgSXJlbGFuZCBtYXkgaGF2ZSBhIHN0cm9uZ2VyIGZvY3VzIG9uIGhvcnNlcmFjaW5nLCBHYWx3YXkgaXMgYWxzbyByaWdodGx5IGZhbW91cyBmb3IgaXRzIGdyZXlob3VuZCB0cmFjayB3aGVyZSBldmVyeSB3ZWVrZW5kIHNvbWUgb2YgdGhlIGJlc3QgZG9ncyBpbiBJcmVsYW5kIGJhdHRsZSBpdCBvdXQgYW5kIHB1bnRlcnMgZW5qb3kgcmFjZXMgdGhhdCBjb21lIHRoaWNrIGFuZCBmYXN0LiBBcyBhbnlvbmUgZmFtaWxpYXIgd2l0aCB0aGUgdHJhY2sgd2lsbCBrbm93LCBpdCBzaGFyZWQgd2l0aCBDb25uYWNodCBSdWdieSBhbmQgdGhlcmUgYXJlIHNvbWUgdmVyeSBhbWJpdGlvdXMgcGxhbnMgYWZvb3QgdG8gcmVkZXZlbG9wIHRoZSBzdGFkaXVtIHdoaWNoIGNhbiBvbmx5IGhlbHAgdG8gbWFrZSBhIHZpc2l0IHRoZXJlIGFuIGV2ZW4gbW9yZSBtZW1vcmFibGUgZXhwZXJpZW5jZS4KSSByZXNlYXJjaGluZyBvbiB3aGVyZSBJIHdvdWxkIGZpbmQgb25lLiBQZXJzb25hbCBkZWFkbGluZSBvbiBzdGFydGluZyBoZWxwIGlzIE1hcmNoIHNvIEkgY2FuIGZpbmFsbHkgZG8gaXQuIApFeGlzdGVuY2VDYW5CZUhhcmQgdQpBcyBJIGFtIGFsbCBmb3IgYSBiaXQgb2YgaGVscCB3aGVuIGl0IGNvbWVzIHRvIGdpdmluZyBwYXJlbnRzIGluZm9ybWF0aW9uIG9uIHVzZWZ1bCBzaXRlcyB0byBibG9jayBhbmQgd2l0aCB5b3VuZ2VyIGtpZHMgSSB3b3VsZCBkZWZpbml0ZWx5IG1vbml0b3IgdGhlbSBhIHdob2xlIGxvdCBtb3JlLiBXaGVuIHRoZXkgaGl0IHRoZWlyIHRlZW5zIHRob3VnaCBhbmQgY2FuIGp1c3QgYWNjZXNzIHRoaXMgc3R1ZmYgYW55d2F5IHRoZXkgc3RpbGwgbmVlZCB0byBrbm93IHRoZSByZWFzb25zIHdoeSB3ZSBhcyBhZHVsdHMgKG1haW5seSkgZG9uIHZpZXcgZ29yZS9zbnVmZi9JU0lTIHZpZGVvcyBvciBlbHNlIHRoZXkgd2lsbCBqdXN0IGxvb2sgaXQgdXAgb24gd2hhdGV2ZXIgZnJpbmdlIHdlYnNpdGUgd2lsbCBob3N0IGl0LiBVbmxlc3MgeW91IHRoaW5rIHRoYXQgeW91IGNhbiBjb252aW5jZSB0ZWVucyB0byBqdXN0IGFjY2VwdCBhbiBpbnRlcm5ldCBiYW5uaW5nIGFzIHdlbGwsIHdoaWNoIHdvdWxkIG5ldmVyIGZseS4uIApUaGVuLCBwZW9wbGUgc2xvd2x5IHN0YXJ0ZWQgdG8gcmVhbGl6ZSB0aGV5IHdlcmUgY2FsbGluZyB0b28gbXVjaCBwcmVmbG9wIGFuZCBjb3VsZG4ga2VlcCBmb2xkaW5nIHRvIGNiZXRzIGFmdGVyIG5vdCBjb25uZWN0aW5nIHdpdGggdGhlIGZsb3AuIENiZXR0aW5nIDEwMCUgbm8gbG9uZ2VyIHdvcmtlZCBhcyB3ZWxsIHdpdGggdGlnaHRlciBwcmVmbG9wIHJhbmdlcy4KUmVnYXJkbGVzcyBvZiBob3cgb2Z0ZW4geW91IHBsYXkgcG9rZXIsIGl0IGlzIGltcG9ydGFudCB0byBjb25zaWRlciBzb21lIG9mIHRoZSByZWFzb25zIHdoeSB5b3UgbWlnaHQgd2FudCB0byBwdXJjaGFzZSBtb3JlIHRoYW4gb25lIGRlY2suIApUaGVyZSBhcmUgc2V2ZXJhbCB2YXJpYWJsZXMgaW52b2x2ZWQuIApJIHdhc250IHRvbyB3b3JyaWVkIGFib3V0IE8yIGFzIHllYXN0IGhhZG4gc3RhcnRlZCB5ZXQuIApHb29kIGNhcmQgZGlzdHJpYnV0aW9uLCBydW5uaW5nIGludG8gdGhlIGJvdHRvbSBvZiB5b3VyIG9wcG9uZW50cyByYW5nZSBkdXJpbmcgYmx1ZmZzIGFuZCBnZXR0aW5nIHRoZW0gdGhyb3VnaCwgaGl0dGluZyB5b3VyIGRyYXdzIGR1cmluZyBub24gYWxsIGluIHNpdHVhdGlvbnMgZXRjIGV0Yy4uIApQb2tlciBleHBlcnRzIGhhdmUgYmVjb21lIGV4dHJlbWVseSBpbnRlcmVzdGVkIGFib3V0IHRoZSBwb2tlciBwcm9kdWN0cyBub3dhZGF5cy4gVGhleSB3YW50IHRvIGtlZXAgdGhlaXIgY2FyZHMgc2FmZSBmcm9tIHRoZWlyIG93biBoYW5kcyBhbmQgdGhleSBoYXZlIHNvbWUgaXNzdWVzIGFib3V0IHRoYXQgYXMgd2VsbC4gVGhleSB3YW50IHRvIGhhdmUgcHJvZHVjdHMgdGhhdCBjYW4gc2F2ZSB0aGVtc2VsdmVzLiAKV2h5IHRoZW4gd2FzIERvZHQgbm90IG1vdW50aW5nIGEgc2VsZiBkZWZlbnNlIGNhc2U/CkJyaWFuIEZsb3JlcyAoY3JlZGl0IHRvIGNvYWNoaW5nIHVwIG91ciBMQiBjb3JlLCBoYXMgNCByaW5ncyB3aXRoIHVzKSwgd2hvIHdpbGwgYmUgc29yZWx5IG1pc3NlZC4KV2UgYWx3YXlzIGZlZWwgbGlrZSBpdCBpcyBoYXJkIHRvIHByb3ZpZGUgZXhjZWxsZW50IGhlYWQgYW5kIG5lY2sgdHJlYXRtZW50IHRvIHBhdGllbnRzIGFuZCB3ZSB0cmVhdCA2MCBvZiB0aGVzZSBwYXRob2xvZ2llcyBhIHllYXIuIEkgd29uZGVyIGhvdyBwbGFubmluZyBhbmQgcHJlc2NyaXB0aW9uIHdvdWxkIHdvcmsgb3V0IGluIGEgY2VudGVyIHRoYXQgc2VlcyAzIHBhdGllbnRzIGEgeWVhciBmb3IgdGhhdCBwYXRob2xvZ3kuIEFsc28sIGlmIHlvdSBoYXZlIGp1c3Qgb25lIG1hY2hpbmUsIGhvdyBleHBlcnQgYXJlIHlvdSBpbiBjaGVja2luZyBpdCBhbmQgaW4gZml4aW5nIGl0PyBXZSBydW4gNSBtb250aGx5IFEvQSBhIG1vbnRoIGhlcmUsIGFuZCB3ZSBnZXQgcHJldHR5IGNvbmZpZGVudCB3aXRoIGl0Li4gClRoYXQgYXNpZGUsIHNoZSdzIGVudGl0bGVkIHRvIG5vdCBjb250cmlidXRlIHRoYXQncyBoZXIgY2hvaWNlLiBJdCdzIHlvdXIgY2hvaWNlIGhvdyB0byBoYW5kbGUgdGhhdC4gCldoZW4gWW91ciBDb250ZW50IGlzIGNyZWF0ZWQgd2l0aCBvciBzdWJtaXR0ZWQgdG8gdGhlIFNlcnZpY2VzLCB5b3UgZ3JhbnQgdXMgYSB3b3JsZHdpZGUsIHJveWFsdHkgZnJlZSwgcGVycGV0dWFsLCBpcnJldm9jYWJsZSwgbm9uIGV4Y2x1c2l2ZSwgdHJhbnNmZXJhYmxlLCBhbmQgc3VibGljZW5zYWJsZSBsaWNlbnNlIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBhZGFwdCwgcHJlcGFyZSBkZXJpdmF0aXZlIHdvcmtzIGZyb20sIGRpc3RyaWJ1dGUsIHBlcmZvcm0sIGFuZCBkaXNwbGF5IFlvdXIgQ29udGVudCBhbmQgYW55IG5hbWUsIHVzZXJuYW1lLCB2b2ljZSwgb3IgbGlrZW5lc3MgcHJvdmlkZWQgaW4gY29ubmVjdGlvbiB3aXRoIFlvdXIgQ29udGVudCBpbiBhbGwgbWVkaWEgZm9ybWF0cyBhbmQgY2hhbm5lbHMgbm93IGtub3duIG9yIGxhdGVyIGRldmVsb3BlZC4gVGhpcyBsaWNlbnNlIGluY2x1ZGVzIHRoZSByaWdodCBmb3IgdXMgdG8gbWFrZSBZb3VyIENvbnRlbnQgYXZhaWxhYmxlIGZvciBzeW5kaWNhdGlvbiwgYnJvYWRjYXN0LCBkaXN0cmlidXRpb24sIG9yIHB1YmxpY2F0aW9uIGJ5IG90aGVyIGNvbXBhbmllcywgb3JnYW5pemF0aW9ucywgb3IgaW5kaXZpZHVhbHMgd2hvIHBhcnRuZXIgd2l0aCBSZWRkaXQuIFlvdSBhbHNvIGFncmVlIHRoYXQgd2UgbWF5IHJlbW92ZSBtZXRhZGF0YSBhc3NvY2lhdGVkIHdpdGggWW91ciBDb250ZW50LCBhbmQgeW91IGlycmV2b2NhYmx5IHdhaXZlIGFueSBjbGFpbXMgYW5kIGFzc2VydGlvbnMgb2YgbW9yYWwgcmlnaHRzIG9yIGF0dHJpYnV0aW9uIHdpdGggcmVzcGVjdCB0byBZb3VyIENvbnRlbnQuClNlIG5vIHNvdWJlciwgdm9jIHBvZGUgdGVyIGEgbW8gdmVuY2Vkb3JhIGUgbmVtIHNlIGxpZ2FyIGRpc3NvISBFbnRvLCBhbnRlcyBkZSBjb21lYXJtb3MgYSBmYWxhciBzb2JyZSBxdWFscXVlciBjb2lzYSBlc3BlY2ZpY2EgZG8gcG9rZXIgZmVjaGFkbywgdmFtb3MgZXN0YWJlbGVjZXIgYSBoaWVyYXJxdWlhIGRhcyBtb3MsIGNvbWVhbmRvIGNvbSBhIG1lbm9yOi4gCllvdSBnb3QgOSBoaWdoLCBhbmQgeW91IGtlZXAgc2F5aW4gImJldCIgYmVjYXVzZSB5b3UgdGhpbmsgeW91ciBvcHBvbmVudCBoYXMgYSB3ZWFrIGhhbmQsIGJ1dCBoZSBqdXN0IGNhbGwgY2FsbCBjYWxscyBhbmQgeW91IGxvc2UgdG8gcXVlZW4gaGlnaC4gCklmIGl0IGJyZWFrcyBhbmQgdGhleSBjcnksIEkgbm90IHVwc2V0IGFib3V0IGl0ICAgdGhhdCB0aGVpciBwcm9ibGVtLCBub3QgbWluZS4gClRoZSAiTWFkZWEiIGZpbG1zIGhhdmUgbmV2ZXIgYmVlbiBhbGwgdGhhdCBwb3B1bGFyIHdpdGggY3JpdGljcyAgIHRoaXMgb25lIHNwbGF0dGVyZWQgb3V0IHdpdGggYSAyNCBwZXJjZW50IG9uIFJvdHRlbiBUb21hdG9lcyAgIGJ1dCBhdWRpZW5jZXMgaGF2ZSBuZXZlciBzZWVtZWQgdG8gY2FyZS4gCllvdSBtaWdodCBldmVuIGRpZSB0byBhIERpbG9zIGF0IG5pZ2h0LCBhcyB0aGV5IGFyZSBwZXJmZWN0IG5vY3R1cm5hbCBwcmVkYXRvcnMuLiAKW08gS2FwYXJkaW4sIE8gY2hpZWYgb2YgYWxsIGdvZHMsIE8gZGVzdHJveWVyIG9mIHRoZSBleWVzIG9mIEJoYWdhLCBPIGdvZCBvZiBnb2RzLCBPIE1haGFkZXZhLCBPIHRob3Ugb2YgYmx1ZSB0aHJvYXQsIE8gdGhvdSBvZiBtYXR0ZWQgbG9ja3MsIEkga25vdyB0aGVlIGFzIHRoZSBDYXVzZSBvZiBhbGwgY2F1c2VzLiAKVGhlcmUgYXJlIHNpbXBseSBtb3JlIHJ1bm5lcnMgYW5kIG1vcmUgb3JnYW5pemVkIHJhY2VzIHJlbGF0aXZlIHRvIHRoZSB0b3RhbCBwb3B1bGF0aW9uIG5vd2FkYXlzLiBDb21wZXRpdGl2ZSBydW5uZXJzIGFyZSBzdGlsbCBjb21wZXRpdGl2ZSwgYW5kIGl0IG5vdCBhbGwgdGhhdCBoYXJkIGZvciB0aGVtIHRvIGZpbmQgd2hhdCB0aGV5IGxvb2tpbmcgZm9yLCBidXQgdGhleSBjYW4gZXhwZWN0IGV2ZXJ5IGxvY2FsIGZhc3QgZ3V5IHRvIHNob3cgdXAgYXQgZXZlcnkgbG9jYWwgNWsgd2hlbiB0aGVyZSBhcmUgaGFsZiBhIGRvemVuIHJhY2VzIHdpdGhpbiBkcml2aW5nIGRpc3RhbmNlIGV2ZXJ5IHdlZWsgb2YgdGhlIHllYXIuIE1heWJlIHRoZXkgdGhlIG9uZXMgbm90IGxpdmluZyB1cCB0byB0aGVpciBwb3RlbnRpYWwgYW55bW9yZSBzaW5jZSB0aGUgdG91Z2hlc3QgY29tcGV0aXRpb24gaXNuIGd1YXJhbnRlZWQgdG8gc2hvdyB1cCBhdCBldmVyeSByYWNlLiBJIGRvbiBrbm93LiBJIGp1c3QgZG9uIHRoaW5rIGl0IGZhaXIgdG8gcG9pbnQgYXQgcGVvcGxlIHdpdGggZGlmZmVyZW50IGdvYWxzIGFuZCBzYXkgdGhleSBhZnJhaWQgb2YgaW1wcm92ZW1lbnQuIFBlb3BsZSB3aG8gd291bGQgaGF2ZSBiZWVuIGFjdGl2ZWx5IHB1c2hlZCBhd2F5IGZyb20gcnVubmluZyBiYWNrIGluIHRoZSBnb29kIG9sZCBkYXlzIGFyZSBmaW5kaW5nIHRoZWlyIG93biByZWFzb25zIHRvIHB1cnN1ZSBpdCwgYW5kIHRoYXQgYSBnb29kIHRoaW5nLgpZb3Ugd291bGQgd2FudCB0byBrbm93IGV4YWN0bHkgd2hhdCB3YXMgaW52b2x2ZWQsIHRoZSBwb3NzaWJsZSByZXN1bHRzIGFuZCB0aGUgcmlza3Mgb2YgZ29pbmcgYWhlYWQuIApTaSB2b3VzIGRjaWRleiBkZSByZXN0ZXIgZGFucyBsYSBwYXJ0aWUsIHZvdXMgZGV2cmV6IGJsdWZmZXIganVzcXUnIGNlIHF1ZSBsYSBjYXJ0ZSBkb250IHZvdXMgYXZleiBiZXNvaW4gYXBwYXJhaXNzZS4uIApJIGEgdGFsbCBhbmQgc3Vic3RhbnRpYWwgcGVyc29uLCB3aXRoIGEgYnVzdCBzbyBJIGhhdmUgdG8gc2l6ZSB1cCwgYnV0IHdpdGhvdXQgZ3V5IHNob3VsZGVyIHdpZHRoLCBzbyBJIGh1bnQgZG93biByYWdsYW4gc2xlZXZlcyBmb3IgbWVuIHN3ZWF0ZXJzIGFuZCBzd2VhdHNoaXJ0cy4gSWYgeW91IHdhbnQgdG8gc2hvcCBpbiB0aGUgbWVuIGRlcGFydG1lbnQgd2l0aG91dCB0aGUgc2hvdWxkZXIgc2VhbSBpbiB0aGUgd3JvbmcgcGxhY2UsIHRoaXMgcmVhbGx5IGhlbHBzLiBUaGUgZXhjZXB0aW9uIHNlZW1zIHRvIGJlIFJhbHBoIExhdXJlbiBtZW4gemlwIHVwcyBhbmQgY2FyZGlnYW5zLCB3aGljaCBkb24gaGF2ZSBzdXBlciB3aWRlIHNob3VsZGVycyBhbmQgZml0IG1lIGJldHRlci4gVGhpbmdzIHRoYXQgd29yayBmb3IgbWU6IGhpcCBsZW5ndGggKHNob3J0ZXIgdGhhbiBzb21lIHBlb3BsZSBoaXAgbGVuZ3RoKSBmaXR0ZWQgdGVlcy90b3BzIHdpdGggd2lkZSBsZWdnZWQgcGFudHMsIGxvbmcgY2FyZGlzIHdpdGggc2tpbm55IGplYW5zL3BhbnRzLCBtYXhpIGRyZXNzZXMgd2l0aCBhbiBlbXBpcmUgd2Fpc3QgdGhhdCBhcmUgZml0dGVkIGluIHRoZSBidXN0IGFuZCBmbG93IHVuZGVyIHRoYXQsIGFuZCBzd2luZyB0YW5rcyB0aGF0IGFyZSBmaXR0ZWQgaW4gdGhlIGJ1c3QuIFRoZSBzd2luZyB0YW5rcyBoYXZlIHRvIGhpdCBhdCBteSBoaXAgYm9uZSBvciB0aGV5IGp1c3QgbG9vayB3ZWlyZCBvbiBtZSwgYnV0IHRoZXkgc29tZWhvdyBsb29rIGZhbnRhc3RpYyB3aXRoIGJsYXplcnMgYW5kIGplYW5zLgpXZW5keSBXaWxzb24sIG93bmVyIG9mIHRoZSBidXNpbmVzcywgd2FzIGFycmVzdGVkIG9uIGEgcmFja2V0ZWVyaW5nIGNoYXJnZSBhbmQgYW4gYXNzb3J0bWVudCBvZiBwcm9zdGl0dXRpb24gY2hhcmdlcyBhbmQgdGFrZW4gdG8gdGhlIE9yYW5nZSBDb3VudHkgamFpbC4gVGhyZWUgb2YgdGhlIGZvdXIgZW1wbG95ZWVzIGFsc28gd2VyZSBhcnJlc3RlZCBvbiBtaW5vciBkcnVnIGNoYXJnZXMuCkNvbmdyZXNzIGlzIG91dHJhZ2VkLiAKSXQgdG9vayBwcm9zZWN1dG9ycyBpbiB0aGUgIG11cmRlciB0cmlhbCB0d28gbW9udGhzIGFuZCAxMzEgd2l0bmVzc2VzIHRvIHByZXNlbnQgdGhlaXIgYXJndW1lbnQgYWdhaW5zdCB0aGUgZm9ybWVyIE5ldyBFbmdsYW5kIFBhdHJpb3QuIEFmdGVyIGNhbGxpbmcganVzdCB0aHJlZSB3aXRuZXNzZXMgZm9yIG5vdCBldmVuIGEgZnVsbCBkYXkgb2YgdGVzdGltb255IE1vbmRheSwgSGVybmFuZGV6J3MgZGVmZW5zZSB0ZWFtIHJlc3RlZCB0aGVpciBjYXNlLgpSZWdhcmRsZXNzIG9mIHdoZXRoZXIgYSBwZXJzb24gZ2FtYmxlcyBvbiB0aGUgc3RvY2sgbWFya2V0LCBvciBhIGdhbWUgb2YgcG9rZXIsIHRoZXJlIGlzIG5vIHF1ZXN0aW9uIHRoYXQgYmVpbmcgaW4gdGhlIHJpZ2h0IHBsYWNlIGFuZCBoYXZpbmcgdGhlIHJpZ2h0IGNhcmRzIGNhbiBlYXNpbHkgY2hhbmdlIHRoZSBvdXRjb21lIG9mIHRoZSBnYW1lLiAKRGEgcXVlbCBtb21lbnRvIGdsaSB1dGVudGkgcG9zc29ubyBjb21tZW50YXJsYSwgY29uZGl2aWRlcmxhIG9ubGluZSBvIHNvdHRvc2NyaXZlcmxhICh0YXN0byBEVSBJVCEpIGFjY3Jlc2NlbmRvbmUgbGEgdmlzaWJpbGl0LgpJIHN0aWxsIGVuam95IHRoZSBvY2Nhc2lvbmFsIHN3ZWV0LCBidXQgbm8gbW9yZSB0aGFuIGEgYml0ZSBvciB0d28gYXQgYSB0aW1lIGJlZm9yZSBJIGZlZWwgb3ZlcndoZWxtZWQuLiAKT25lIG9mIHRoZSBiaWdnZXN0IHJlYXNvbnMgd2UgY2hvc2UgdGhlIGNvbG9yIGlzIGJlY2F1c2UgaXQgYWNjZW50cyB0aGUgdHJpbSBhcm91bmQgdGhlIGVudGlyZSBiYXNlbWVudC4gTm8sIHRoZSB0cmltIGlzbid0IHB1cnBsZSwgYnV0IHB1dHRpbmcgdGhlbSB0b2dldGhlciBqdXN0IGJyaW5ncyBvdXQgYSB3aG9sZSBuZXcgbG9vay4gU2luY2UgdGhlIFN1aXRlZCBQdXJwbGUgVGV4YXMgSG9sZGVtIFBva2VyIFRhYmxlIENsb3RoIGhhcyBhIGRpYW1vbmQgcGF0dGVybiB3aXRoaW4sIGl0IG1ha2VzIHRoZSB0b25lIGV4dHJlbWVseSByZWxheGluZyBmb3IgZXZlcnlvbmUgd2hvIHBsYW5zIG9uIHBsYXlpbmcgaW4gdGhlaXIgbGl0dGxlIGNhc2luby4gCkFueSByZWZ1bmRzIHVuZGVyIHRoaXMgMyBkYXkgY2FuY2VsbGF0aW9uIHBvbGljeSB3aWxsIGJlIG1hZGUgd2l0aGluIDEwIGRheXMgYWZ0ZXIgdGhlIENvbXBhbnkncyByZWNlaXB0IG9mIHlvdXIgY2FuY2VsbGF0aW9uIG5vdGljZS4gLi4gCk1pbmRsZXNzIGxvbmcgcnVucz8gTG9uZyBib3Jpbmcgc2Vzc2lvbnMgb24gdGhlIGJpa2Ugb3IgZWxsaXB0aWNhbCBtYWNoaW5lPwpPbmUgbmlnaHQgSSBzYWlkIGZ1Y2sgaXQgYW5kIHdlbnQgaW4uIE5vYm9keSBsYXVnaGVkLiBOb2JvZHkgc2VlbWVkIHRvIGdpdmUgYSBzaGl0IHRoZXJlIHdhcyBhIGNodWJieSBndXkgdXNpbmcgdGhlIHBvb2wuIApBZnRlciB0aGUgYW50ZXMgYXJlIHB1dCBpbiB0aGUgZGVhbGVyIHNjb29wcyB0aGUgbW9uZXkgaW50byB0aGUgcG90LiBJbiBhIGNhcmQgcm9vbSB0aGUgZGVhbGVyIGlzIHN1cHBsaWVkIGFuZCBkb2VzIG5vdCBwbGF5IHNvIGEgZGVhbGVyIGJ1dHRvbiBpcyB1c2VkIHRvIGRlbm90ZSB0aGUgcGxheWVyIHdobyBpcyB0aGUgbGFzdCB0byBhY3QuIAo2NCkuLiAKS25vdyB3aGF0IHlvdXIgMTIgeWVhciBvbGQgaXMgZG9pbmcgb24gdGhlIEludGVybmV0LiBJbnN0YWxsIGEga2V5bG9nZ2VyIGlmIHlvdSBoYXZlIHRvLiAKQXMgZm9yIHRoZSB0cmFkaXRpb25hbCBXZXN0ZXJuIGd1bmZpZ2h0IGFzIGRlcGljdGVkIGluIG1vdmllcywgdGhlIGluYWNjdXJhY3kgb2YgaGFuZGd1bnMgYXQgdGhlIHRpbWUgd291bGQgaGF2ZSBtYWRlIHF1aWNrIGRyYXdpbmcgc2tpbGwgaXJyZWxldmFudDogSXQgd2FzIHNpbXBseSBzbyB1bmxpa2VseSB5b3UnZCBoaXQgYSBndXkgb24gdGhlIGZpcnN0LCBzZWNvbmQgb3IgdGhpcmQgc2hvdCB0aGF0IGl0IGRpZG4ndCByZWFsbHkgbWF0dGVyIHdoaWNoIGd1eSBnb3Qgb3V0IGhpcyBndW4gZmlyc3QuIFRoZSBjbG9zZXN0IGhpc3RvcnkgZ290IHRvIGhpZ2ggbm9vbiBzaG93IGRvd25zIHdhcyBkdWVsaW5nLCB3aGVyZSBwZW9wbGUganVzdCBzdG9vZCBhY3Jvc3MgZnJvbSBvbmUgYW5vdGhlciB3aXRoIHRoZWlyIGd1bnMgb3V0LCBhaW1lZCBhbmQgZmlyZWQgdW50aWwgc29tZW9uZSBnb3QgbHVja3ksIGFuZCBzb21lb25lIGVsc2Ugd2FzIGRlYWQuIEZvcmdldCBhYm91dCAiZmFubmluZywiIHJhcGlkbHkgY29ja2luZyBhIHNpbmdsZSBhY3Rpb24gcmV2b2x2ZXIgYmV0d2VlbiByb3VuZHMgbGlrZSBDbGludCBFYXN0d29vZCBkb2VzIGluIEEgRmlzdGZ1bCBvZiBEb2xsYXJzLiBZb3UnZCBiZSBsdWNreSB0byBoaXQgYSBoZW5jaG1hbiBpZiB0aGUgZHVlbCB0b29rIHBsYWNlIGluIGEgY2xvc2V0LgpBbmQgdGhlbiB0aGV5IHdvdWxkIHJlY29nbml6ZSB1cyBhbmQgdGFsayB0byB1cyBldmVyeSB0aW1lIHdlIHdhbGtlZCBieSB3aGljaCBtZWFudCBXZW5kaSBhbmQgSSBjb3VsZG4ndCB3YWxrIGZhc3RlciB0aGFuIGFib3V0IGEgbWlsZSBhbiBob3VyIGluIHRoZSBhcmVhcyBvZiBJc3RhbmJ1bCB3ZSBrbmV3LiAKVGhlIGtpZHMgYXJlIG9sZGVyLCBidXQgdGhlcmUgaXMgc29tZXRoaW5nIHNvIHZ1bG5lcmFibGUgYWJvdXQgdGhlIHRlZW4geWVhcnMuIApJbmRlZWQsIHRob3NlIHdvcmtpbmcgYXQgaGVhZHF1YXJ0ZXJzLCBsaWtlIFJ1Y2gsIGNvbGxhYm9yYXRlIHdpdGggZW1wbG95ZWVzIGF0IHNpeCBicmV3ZXJpZXMsIHNldmVyYWwgcmVnaW9uYWwgc2FsZXMgb2ZmaWNlcywgdGhyZWUgY3JhZnQgYnJld2VyaWVzLCB0d28gY2lkZXIgaG91c2VzIGFuZCBhIGhvc3Qgb2Ygb3RoZXIgZmFjaWxpdGllcy4gVGhhdCB0cmFuc2xhdGVzIGludG8gYSBkZWVwIHVuZGVyc3RhbmRpbmcgb2YgYWxsIHRoZSBkaWZmZXJlbnQgZnVuY3Rpb25zIHRoYXQgY3JlYXRlIExhYmF0dCdzIHByb2R1Y3RzIGFuZCBicmluZyB0aGVtIHRvIG1hcmtldC4gClNraXJtaXNoZXJzIGFyZW4gcmVhbGx5IHVzZWZ1bCBhbmQgSSBvbmx5IHVzZSB0aGVtIGZvciBmdW4uIEhhdmluZyB5b3VyIGluZmFudHJ5IGJyaWdhZGVzIGRldGFjaCBza2lybWlzaGVycyBhcmUgdmVyeSB1c2VmdWwgYnV0IHJlYWxseSBkZXRyYWN0IGZyb20gdGhlbS4gU28gZG9lcyBjYXZhbHJ5IHNraXJtaXNoZXJzLiAKQ29tYmluZWQsIHRoZSBwcm9wZXJ0aWVzIHdvdWxkIHByb3ZpZGUgMTg1IG5ldyBsb2RnZSBrZXlzLCBpbmNsdWRpbmcgMTA0IGluIHRoZSBMaWZ0IE9uZSBMb2RnZSB0aW1lc2hhcmUgcHJvamVjdCBhbmQgODEgaW4gR29yc3VjaCBIYXVzIGFzIGEgdHJhZGl0aW9uYWwgaG90ZWwuClRoZSBOYXRpdmUgZGlyZWN0IHRvIGNvbnN1bWVyIGRlb2RvcmFudCBicmFuZCBQIGFjcXVpcmVkIGxhc3QgeWVhciByZWNlbnRseSBtb3ZlZCBpbnRvIFRhcmdldCwgbXVjaCBsaWtlIFAgcml2YWwgSGFycnkncyBoYXMgbW92ZWQgaW50byBUYXJnZXQgYW5kIFdhbG1hcnQuCkVub3VnaCB0byB3aGVyZSBhIHBlcnNvbiBjYW4gZmluZCAiZmFtaWx5IG5pZ2h0cyIgZm9yIHBsYXlpbmcgYmVpbmcgb2ZmZXJlZCBieSBvcmdhbml6YXRpb25zIHByb21vdGluZyB0aGUgZ2FtZS4gCldlIHByZXZpb3VzbHkgcmVwb3J0ZWQgdGhlIHJlc3VsdHMgb2YgYSBzdHVkeSBpbiB3aGljaCBhIGJhc2ljIGNvbXBldGVuY3kgZXhhbWluYXRpb24gaW4gbXVzY3Vsb3NrZWxldGFsIG1lZGljaW5lIHdhcyBhZG1pbmlzdGVyZWQgdG8gYSBncm91cCBvZiByZWNlbnQgbWVkaWNhbCBzY2hvb2wgZ3JhZHVhdGVzLgpUaGVyZSB3ZXJlIHBlb3BsZSBsaWtlIHRoZSBsZXNiaWFuIHNlcGFyYXRpc3RzIGFuZCB0aGUgUmFkaWNhbCBGYWlyaWVzIHRyeWluZyB0byByZWplY3QgbWFpbnN0cmVhbSBzb2NpZXR5ICAgYW5kIGJ1aWxkIGFsbGlhbmNlcyB3aXRoIG90aGVyIG9wcHJlc3NlZCBncm91cHMgIGFuZCBuaWNlIGhvbW9zZXh1YWxzIHdobyB3YW50ZWQgbm90aGluZyBtb3JlIHRoYW4gdG8gYmUgbGVmdCBhbG9uZS4gQnV0IGl0IHVzZWQgdG8gYmUgdGhlIG5hdGlvbmFsIHByZXNzIHdhcyBmYXIgbW9yZSBpbnRlcmVzdGVkIGluIHRoZSByYWRpY2FsIGVsZW1lbnRzICB0aGUgbWVuIGluIG5vdGhpbmcgYnV0IGpvY2tzdHJhcHMgYW5kIGZhaXJ5IHdpbmdzLCB0aGUgcmFkaWNhbCBkeWtlcyB3aXRoIGNyZXcgY3V0cyBhbmQgdGF0dG9vcy4uIApJIHRoaW5rIHRoZXkgYm90aCBuZWVkIHRvIHRha2UgYSBkZWVwIGJyZWF0aCwgaG9sZCBoYW5kcywgYW5kIHRoaW5rIGJleW9uZCBtYXJyaWFnZS4gQSByZWNlbnQgYm9vayBtaWdodCBoZWxwIHRoZW0gZG8ganVzdCB0aGF0LiBXcml0dGVuIGJ5IEFtZXJpY2FuIFVuaXZlcnNpdHkgbGF3IHByb2Zlc3NvciBOYW5jeSBQb2xpa29mZiwgQmV5b25kIChTdHJhaWdodCBhbmQgR2F5KSBNYXJyaWFnZSBleHBsb3JlcyBhIHZhcmlldHkgb2YgbGVnYWwgYW5kIHBvbGljeSBhbHRlcm5hdGl2ZXMgdG8gb3VyIGN1cnJlbnQgbGF3cyBhc3NpZ25pbmcgcmlnaHRzIGFuZCBwcml2aWxlZ2VzIG9uIHRoZSBiYXNpcyBvZiBtYXJpdGFsIHN0YXR1cyBhcyBvcHBvc2VkIHRvIGFjdHVhbCBsaXZpbmcgYXJyYW5nZW1lbnRzLgpERCA+IFNvSi4gSSBhcmd1ZSBTb0ogaXMgYmV0dGVyIHRoYW4gREQsIGJ1dCBJIHByZWZlciBERCwgYmVjYXVzZSBJIGhhdmUgdG9vIG1hbnkgcHJvYmxlbXMgd2l0aCBTb0ouIFRoZSBtYXJnaW4gaXNuIGJ5IG11Y2gsIHRob3VnaC4gVG8gYWRkIHRvIHRoYXQsIFNvSiBpcyBteSBsZWFzdCBmYXZvdXJpdGUuIChJIHNhaWQgaXQgYmVmb3JlLCBidXQganVzdCB0byBhZGQgb24uIEkgY2FuIHJlc3BlY3QvdW5kZXJzdGFuZCBpdCBpZiBhbnlvbmUgY29uc2lkZXJzIGVpdGhlciBvZiB0aGVtIHRvIGJlIHRoZWlyIGZhdiBnYW1lIGluIHRoZSBzZXJpZXMpCkRlciBBdXNibGljayB2b20gUm9xdWUgYXVzIGlzdCBhdGVtYmVyYXViZW5kIHVuZCByZWljaHQgZmFzdCBiZXIgZGllIGdlc2FtdGUgSW5zZWwgdW5kIGRlbiBBdGxhbnRpayBiaXMgenUgZGVuIE5hY2hiYXJpbnNlbG4gVGVuZXJpZmZhLCBMYSBHb21lcmEgdW5kIEVsIEhpZXJyby4gCkhhcnJpbmd0b24gb24gQ2FzaCBHYW1lcyBCYW5kIDEKSW52ZXN0aW5nIGluIHBva2VyIGFjY2Vzc29yaWVzIGNhbiBiZSBmcnVzdHJhdGluZyBpZiB5b3UgZG9uJ3Qga25vdyB3aGVyZSB0byBsb29rLiBJZiB5b3UncmUgYW55dGhpbmcgbGlrZSBtZSwgc2lmdGluZyB0aHJvdWdoIGFsbCB0aGUgc2l0ZXMgb24gdGhlIGludGVybmV0IHRvIGZpbmQgcG9rZXIgY2hpcHMgY2FuIHRha2UgaG91cnMuIApUaGVyYXRpb25hbHRyb2xsIHUKRG8geW91IGhhdmUgYW55IHRob3VnaHRzL29waW5pb25zIG9uIHRoZSBsZXZlbCBvZiByaXNrIG9mIG5vdCBhcHBvaW50aW5nIGFuIEVVIHJlcHJlc2VudGF0aXZlLCBlc3BlY2lhbGx5IHdoZW4gY29tcGFyaW5nIGl0IHRvIG90aGVyIEdEUFIgcmVxdWlyZW1lbnRzPyBEZXZlbG9waW5nIGludGVybmFsIHByb2Nlc3NlcyBhbmQgaW1wbGVtZW50aW5nIGNvbnNlbnQgcHJvY2VkdXJlcyBmaW5lLCB0aGF0J3Mgc29tZXRoaW5nIGNvbXBhbmllcyBzZWVtIHRvIGJlIG9rIHdpdGguIEJ1dCBoaXJpbmcgYSB0aGlyZCBwYXJ0eSBpbiB0aGUgRVUgc2VlbXMgZXhjZXNzaXZlICg/KSB3aGVuIHdlIGRvbid0IGtub3cgaG93IGNsb3NlbHkgdGhlIHJlZ3VsYXRpb24gd2lsbCBiZSBlbmZvcmNlZC4gT3ZlcmFsbCwgaXQgZG9lc24ndCBzZWVtIGxpa2UgYSByZXF1aXJlbWVudCB0aGF0J3MgYmVpbmcgZGlzY3Vzc2VkIG11Y2ggZWl0aGVyLCB1bmxlc3MgSSd2ZSBtaXNzZWQgaXQuCkhlaC4gVGhhdCB3YXMgYSB3aGlsZSBiYWNrIG5vdywgYW5kIEkgaGFkIG5vIHNpbWlsYXIgZXhwZXJpZW5jZSBzaW5jZS4gSWYgeW91IHdhbnQgdG8gdGFsaywgZHJvcCBtZSBhIG1lc3NhZ2UhIFRoaXMgZXh0ZW5kcyB0byBldmVyeW9uZSByZWFkaW5nIHRoaXMuIApIYXMgdGhlIHBhaW4gbGVzc2VuZWQgaW4gdGhlc2UgNSB5ZWFycz8gWWVzLiAKSSBhbHNvIHJlbWVtYmVyIGhlYXJpbmcgc29tZXdoZXJlIGFuZCBjb25maXJtZWQgdGhhdCBhbG1vbmQgbWlsayBhdCB0aGUgc3RvcmUgaXMgZm9ydGlmaWVkIHdpdGggQjEyLiAKVExEUjogUmVhcGVycyBNYXJpYWNoaSB3YXMgaGlzIG91dGZpdCB3aGVuIGhlIHdhcyBhIGxlYWRlciBvZiBMb3MgTXVlcnRvcyAoVGhlIERlYWQsIHRoZSBnYW5nIHRoYXQgd2FzIGluIEhlcm8pLCB0aGUgb3JnYW5pemF0aW9uIHRoYXQgaGVscGVkIGhpbSBkZXN0cm95IE92ZXJ3YXRjaC4gMSBwb2ludCAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCllvdXIgZXggZGlkbiB0cnkgdG8gdGFrZSBhIHdlZWsgZnJvbSB5b3U7IGhlIGp1c3QgYXNrZWQgeW91IHRvIGJlIGEgbGl0dGxlIGZsZXhpYmxlIHdpdGggdGhlIHNjaGVkdWxlIHNvIHlvdXIga2lkcyBjb3VsZCBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBkbyBzb21ldGhpbmcgc3BlY2lhbC4gCkEgbG90IG9mIHRpbWVzIHlvdSBlbmQgdXAgc3BsaXR0aW5nIHlvdXIgcmFuZ2UgYmV0d2VlbiBoYWxmIHBvdCBhbmQgZnVsbCBwb3QuLiAKV2hhdCdzIGRpZmZlcmVudD8gRGVzcGl0ZSBoYXZpbmcgdGhyZWUgZGlmZmVyZW50IGxldmVscyBvZiBpbXBhY3QgaW4gdGhlIHNhbWUgcm9vbSwgdGhlIHdvcmtvdXQgZmVlbHMgbGlrZSBldmVyeW9uZSBpcyB0b2dldGhlciBnb2luZyBhZnRlciB0aGUgc2FtZSB0aGluZy4gClBlb3BsZSB3b3VsZCBqdXN0IHN0b3AgYXQgZGlmZmVyZW50IHBhcmtpbmcgbG90cyBhbmQgZmxpcnQgYW5kIG1ha2Ugb3V0IGFuZCB0aGVuIGJhY2sgaW4gdGhlIGNhciB0byBkcml2ZSB1cCBhbmQgZG93biB0aGUgc3RyaXAgc29tZSBtb3JlLiBEb2Vzbid0IHNvdW5kIGFsbCB0aGF0IGV4Y2l0aW5nIGJ1dCB3ZSBoYWQgZnVuLiBNeSBmcmllbmRzIGFuZCBJIGRpZG4ndCBkcmluayBidXQgd2UnZCBzbW9rZSBhIGpvaW50IHdoZW4gYSByYXJlIG9uZSBjYW1lIGFyb3VuZC4gCiJJZiB5b3UgaGFkIHB1dCB5b3VyIG9yaWdpbmFsICQ2MCBvbnRvIGEgd2lubmluZyBudW1iZXIgZnJvbSB0aGUgc3RhcnQsIiBzaGUgZXhwbGFpbmVkIChhIG9uZSBpbiAzOCBjaGFuY2UpLCAidGhlIHBheW91dCB3b3VsZCBoYXZlIGJlZW4gJDIsMTAwLiIKQWxzbyBjb3VsZCBhZGp1c3QgdGhlIHN0cmFwcyBhbmQgcG9zdHVyZSB0byBnZXQgbW9yZSBhaXJmbG93LCBraW5kYS4uIApUaGlzIGdpcmwgdGhlbiBwcmVjZWRlcyB0byBmb2xsb3cgbWUgZm9yIHRoZSByZXN0IG9mIG15IGxpZmUgaW4gdGhpcyBzbWFsbCB0b3duLi4gCllvdSBuZWVkIHRvIHBsYXkgaXQgY2FyZWZ1bGx5IGluIG9yZGVyIG5vdCB0byBiZSBkaXNjb3ZlcmVkIGVhc2lseS4gCkdyb3dpbmcgdXAgcGFydCBEdXRjaCwgSSB0cmllZCB0byB1c2UgdGhlIHBvbGl0ZSB5b3UgaW4gYWRkcmVzc2luZyBvbGRlciBwZW9wbGUgaW4gTm9yd2F5LCBzaW5jZSB0aGF0IHdoYXQgeW91IGRvIGluIHRoZSBOZXRoZXJsYW5kcy4gTGV0IGp1c3Qgc2F5IHRoYXQgYSBmYWlyIGFtb3VudCBvZiBwZW9wbGUgZ2V0IGFsbW9zdCBpbnN1bHRlZCwgYWxvbmcgdGhlIGxpbmVzIG9mICJJIG5vdCB0aGF0IG9sZCIuIER1dGNoIHN0aWxsIGhhcyBwb2xpdGUgeW91IGFuZCBpbmZvcm1hbCB0aG91LCBhcyB3ZWxsIGFzIHRpdGxlcyBmb3IgTXIgLyBNcnMgLyBNcywgYW5kIGFkZHJlc3NpbmcgcGVvcGxlIGxpa2UgdGhlIER1dGNoIGVxdWl2YWxlbnQgb2YgIk1hIGFuZCAiU2lyIi4gSW4gTm9yd2F5LCB0aG9zZSB0aXRsZXMgYXJlIG5vdCB1c2VkIGF0IGFsbCwgYW5kIGlmIHdlIGFkZHJlc3NpbmcgYSBzdHJhbmdlciBvbiB0aGUgc3RyZWV0IHdlIHByb2JhYmx5IHNheSBzb21ldGhpbmcgbGlrZSAiSGV5IHlvdSIgb3IgImV4Y3VzZSBtZSIuIFNvbWUgZG9jdG9ycyBzdGlsbCB1c2UgIkRvY3RvciIsIGFzIGRvIHNvbWUgYWNhZGVtaWNzLCBidXQgSSBjYWxsZWQgYSBkb2N0b3Igb2ZmaWNlIGluIHRoZSBzdW1tZXIsIGFuZCB0aGUgZG9jdG9yIGhpbXNlbGYgcGlja2VkIHVwIHdpdGggIltBcmVhXSBtZWRpY2FsIG9mZmljZSwgdGhpcyBpcyBbR2l2ZW4gbmFtZV0iLiBBbmQgb25lIG9mIHRoZSBmdWxsIHByb2Zlc3NvcnMgaW4gbXkgZmFjdWx0eSBwcmVmZXJyZWQgYmVpbmcgYWRkcmVzc2VkIGJ5IGdpdmVuIG5hbWUgb25seSwgaW5zdGVhZCBvZiBQcm9mZXNzb3IgW1N1cm5hbWVdLgpXb3JkdCBoZXQgbmlldCBlZW5zIGhvb2d0aWpkIGRhdCB3aWogaW5jbC4gb25zIGVlbnMgZ2FhbiBsYXRlbiBob3JlbiBlbiBkZSBwb3RqZXMgZ2FhbiBvcGVuZW4/IERpdCBpcyBlZW4ga2Fha3NsYWcgdm9vciBhbGxlIEFMUyBwYXRpIG9wIGRlIHdhY2h0bGlqc3QgdmFuIGRyIEh1YW5nLiBEaXQga2FuIHZvb3IgbWlqIG5pZXQgbWVlciBkb29yIGRlIGJldWdlbC4gSHVhbmcgbmlldCBhbGxlZW4gdGUgZG9lbiBpcyBvbSBtZW5zZW4gdWl0IGh1biB3YW5ob29wIHRlIGhhbGVuIHdhcyBtaWogYWwgbGFuZyBkdWlkZWxpamsuIE1hYXIgamEsIHdhdCBudXQgaGVlZnQgaGV0IG9tIHpvaWV0cyBzdGVlZHMgdGUgaGVyaGFsZW4gd2FudCB0ZWdlbndpbmQga3JpamcgamUgdm9vcnpla2VyLgozLiBSaWNoIGNhbmRpZGF0ZXMgY2FuIGJ1eSB0aGUgZWxlY3Rpb24uIEFsdGhvdWdoIHRoZSBOWSBUaW1lcyBpcyB0cnlpbmcgdG8gc3BpbiBNaWNoYWVsIEJsb29tYmVyZyByZSBlbGVjdGlvbiBhcyBtYXlvciBvZiBOZXcgWW9yayBDaXR5IGFzICJjbG9zZSwiIHRoZSB0cnV0aCBpcyBoZSB3b24gYW5kIGhlIHdvbiBiZWNhdXNlIGhlIG91dHNwZW50IGhpcyBvcHBvbmVudCBieSAxNCB0byAxLiBJbiBmYWN0LCBCbG9vbWJlcmcgcG91cmVkICQ5MCBtaWxsaW9uIG9mIGhpcyBvd24gZG9sbGFycyBpbnRvIHRoZSBlbGVjdGlvbi4KVGhpbmcsIGFuZCB0aGlzIGlzIGp1c3Qgb3BpbmlvbiwgYnV0IEkgYmVsaWV2ZSBuZWdhdGl2ZSBwdW5pc2htZW50IGlzIHRoZSB3b3JzdCB3YXkgdG8gZGlzY2lwbGluZSBjaGlsZHJlbi4gSSB1bmRlcnN0YW5kIHRoYXQgaXQgaXMgbmVjZXNzYXJ5IHNvbWV0aW1lcywgYnV0IEkgc3RhbmQgYnkgc2F5aW5nIHBvc2l0aXZlL25lZ2F0aXZlIHJlaW5mb3JjZW1lbnQgcG9zaXRpdmUgcHVuaXNobWVudCAoc29ydGEpIGFyZSBiZXR0ZXIgaW4gbW9zdCBzaXR1YXRpb25zLiBLaWRzIGFyZSBwcmV0dHkgcmV3YXJkIG9yaWVudGVkIGEgbG90IG9mIHRoZSB0aW1lIGFuZCB3aXRob3V0IHByb3BlciByZWFzb25pbmcgdGhhdCB0aGV5IHVuZGVyc3RhbmQgYmVoaW5kIG5lZ2F0aXZlIHB1bmlzaG1lbnQsIGl0IGNhbiBsZWFkIHRvIGtpZHMgbm90IHdhbnRpbmcgdG8gYmUgb3BlbiB3aXRoIHRoZWlyIHBhcmVudHMuIChzb3VyY2Ugb24gdGhhdCBsYXN0IHBvaW50OiBtZSB3aGVuIEkgd2FzIHlvdW5nZXIpCkkgdGhpbmsgd2Ugc2ltaWxhciBvbiB0aGlzLiAKQ2FuIGRlZmluaXRlbHkgc2VlIGhvdyB0aGlzIGF0dGl0dWRlIGNvdWxkIGJlIHNjb3JlZCBhcyBsZXNzIGNvbnNjaWVudGlvdXMuIEJ1dCBpbiBhIGRlZXBlciBzZW5zZSwgSSB0aGluayBpdCBqdXN0IGluZGljYXRlcyB0aGF0IG15IHZhbHVlcyBkaXZlcmdlZCBmcm9tIHRob3NlIGJlaW5nIG1lYXN1cmVkIGJ5IHRoaW5ncyBsaWtlIGEgQmlnIEZpdmUgUGVyc29uYWxpdHkgVGVzdC4gQSBob2xpc3RpYyB1bmRlcnN0YW5kaW5nIG9mIGNvbXBhc3Npb24gY2FuIGJlIGZhaXJseSBzdWJ0bGUsIGFuZCBtZWFzdXJlcyBvZiB3b3JrcGxhY2UgInBlcmZvcm1hbmNlIiBhcmUgb2Z0ZW4gcHJldHR5IGNydWRlLgpMZXMgdGVtcHMgZXQgbGVzIG11cnMgb250IGJpZW4gY2hhbmdzIGRlcHVpcyBsIGRlIEJhdWRlbGFpcmU6IGF1am91cmQgbGVzIGRldXggdXNhZ2VzIChtZGVjaW5lLCB0b3hpY29tYW5pZSkgc29udCBpbGxnYXV4IGRhbnMgZGUgbm9tYnJldXggcGF5cy4gQ2VwZW5kYW50LCBlbiBJbmRlLCBhaW5zaSBxdWUgZGFucyBjZXJ0YWlucyBwYXlzIGR1IFByb2NoZSBPcmllbnQsIGNlcyB1c2FnZXMgc29udCB0b3Vqb3VycyBhdXRvcmlzcy4gCkluIFNTQiBCcmF3bCwgdGhlIGxlYWQgZ2FtZSBkZXNpZ25lciAoTWFzYWhpcm8gU2FrdXJhaSkgaGF0ZWQgdGhlIGNvbXBldGl0aXZlIHNjZW5lIHRoYXQgdGhlIHByZXZpb3VzIGdhbWUgKG1lbGVlKSBoYWQgZ2FybmVyZWQsIGFuZCB0aG91Z2h0IHRoZXkgd2VyZSBwbGF5aW5nIHRoZSBnYW1lIHdyb25nIGFuZCB0YWtpbmcgdGhlIGZ1biBvdXQgb2YgaXQgZm9yIHRoZSBjYXN1YWwgYXVkaWVuY2UuIFNvIGhlIGltcGxlbWVudGVkIG51bWVyb3VzIHRoaW5ncyB0byB0cnkgdG8gc3RvcCB0aGUgZ2FtZSBmcm9tIGJlaW5nIGNvbXBldGl0aXZlIGluIHRoZSBzYW1lIHdheS4gVGhleSByZW1vdmVkIHdhdmUgZGFzaCwgbCBjYW5jZWxzLCBhbmQgc2xvd2VkIHRoZSBwYWNlIG9mIHRoZSBnYW1lLCBidXQgdGhlIG1vc3QgaW5mYW1vdXMgY2hhbmdlIGlzIHRoYXQgZXZlcnkgdGltZSB5b3UgY2hhbmdlIGRpcmVjdGlvbnMgaW4gdGhlIGdhbWUgdGhlcmUncyBhIHJhbmRvbSBjaGFuY2UgeW91IHdpbGwgdHJpcCBhbmQgZmFsbC4gClRoZXkgYXJlIHVubGlrZWx5IHRvIGNhdGNoIGNoaWNrZW5wb3ggIm5hdHVyYWxseSwiIGJ1dCBtb3N0IG9mIHRoZSB3b3JsZCBzdGlsbCBkb2VzbiB2YWNjaW5hdGUgYWdhaW5zdCB0aGUgZGlzZWFzZS4gCk9uIGFuIGF2ZXJhZ2UgNiBob3VyIG5pZ2h0OiAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29KdXN0IHN0YXJ0ZWQgbGlmdGluZyBsaXRlcmFsbHkgMyB3ZWVrcyBhZ28gKEZlYnJ1YXJ5IDE2KS4gSnVzdCBhcyBhIGNvbXBsZXRlIGJhbGxwYXJrIGVzdGltYXRlLCBob3cgbG9uZyBkbyB5b3UgdGhpbmsgdGhpcyBtaWdodCB0YWtlPyBJIGRvaW5nIEdyZXlza3VsbCBMUC5BbHNvLCBJIGtub3cgdGhhdCBJIGFoZWFkIG9mIG15c2VsZkEgYmVnaW5uZXIgYW5kIHNob3VsZG4gd29ycnkgYWJvdXQgdGhpcyBzdHVmZlNob3VsZCBqdXN0IGZvY3VzIG9uIGdldHRpbmcgc3Ryb25nZXIgYW5kIGlnbm9yZSBxdWFsaWZ5aW5nIHRvdGFsc0J1dCBJIHdhbnQgdGhhdCBzb3J0IG9mIGdvYWwganVzdCBmb3IgZnVuIGFuZCBmb3Igc29tZXRoaW5nIHRvIHdvcmsgdG93YXJkcy4gCiQ1MCBsYXRlciAoZm9yIGEgSHl1bmRhaSBBY2NlbnQhKSBJIHJlYWxpemVkIHdoeSBzbyBmZXcgcGVvcGxlIGhhdmUgY2FycywgYW5kIHdoeSB0aGVyZSBhcmUgMjcgcGVvcGxlIGluIGV2ZXJ5IHBpY2t1cCB0cnVjaywgYW5kIHdoeSBhIGhvcnNlIGFuZCBjYXJ0IGlzIHN0aWxsIGEgdmlhYmxlIHRyYW5zcG9ydGF0aW9uIG9wdGlvbi4gClRoZSBydWxlcyBwcm90ZWN0IGNoYXJpdGllcywgc2hlIHNhaWQuICJUaGUgTUdDQiB3YW50cyBjaGFyaXRpZXMgdG8gcmVjZWl2ZSBhIGZhaXIgZGVhbCB3aGVuIHRoZXkgc3BvbnNvciBhIG1pbGxpb25haXJlIHBhcnR5IGF0IGEgcG9rZXIgcm9vbSwiIEJlYW4gc2FpZC4gCkp1c3Qgc2VlbXMgdW5saWtlbHkgZm9yICQyNjUgcHJlLiAKSSBkb24gcmVhbGx5IGFncmVlIHdpdGggZ3JvdW5kaW5nIHlvdSBCVVQgSSB0aGluayBzaGUgKGFuZCBvdGhlcnMpIG1pZ2h0IHNlZSBwb3RlbnRpYWwgdGhhdCB5b3UgZG9uIE1heWJlIHlvdSByZWFsbHkgZ29vZCBhdCBpdC4gClNoZSBzYWlkIEkgd291bGRuJ3QgYmUgYWJsZSB0byBoYW5kbGUgdGhlIEFQIHRlc3QgYW5kIHRoYXQgaWYgSSBzdHVkaWVkIGhhcmQgYWxsIHNlbmlvciB5ZWFyIG1heWJlIEkgY291bGQgcGFzcyBpZiBJJ20gbHVja3kuIApIb25kYSBjcmVhdGVkIGFuIGVsZWN0cmljIHZlaGljbGUgZW50aXJlbHkgZnJvbSAzRCBwcmludGVkIHNlZ21lbnRzLiAKSGFuc2VuIGhhcyByZWNlaXZlZCBudW1lcm91cyBhd2FyZHMgaW5jbHVkaW5nIGVpZ2h0IEVtbXlzIGZvciBpbnZlc3RpZ2F0aXZlIHJlcG9ydGluZywgb3V0c3RhbmRpbmcgY292ZXJhZ2Ugb2YgYSBuZXdzIHN0b3J5IGFuZCBvdXRzdGFuZGluZyBjb3ZlcmFnZSBvZiBicmVha2luZyBuZXdzLiBIZSBoYXMgcmVjZWl2ZWQgdGhlIE92ZXJzZWFzIFByZXNzIGNsdWIgYXdhcmQsIGFuIElSRSwgdGhlIE5hdGlvbmFsIFByZXNzIENsdWIgYXdhcmQgYW5kIHRoZSBJbnRlcm5hdGlvbmFsIENvbnNvcnRpdW0gb2YgSW52ZXN0aWdhdGl2ZSBKb3VybmFsaXN0cyBBd2FyZC4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlU0hFTExIQVJCT1VSIFdvcmtlcnMgQ2x1YiBjaGllZiBleGVjdXRpdmUgRGViYmllIENvc21vcyBoYXMgaGl0IGJhY2sgYXQgY2xhaW1zIHRoYXQgY2hpbGRjYXJlIGF0IGNsdWJzIHdvdWxkIG5vcm1hbGlzZSBnYW1ibGluZyBmb3IgeW91bmdzdGVycy4gVGhlIGNsdWIgYm9hcmQgb2YgZGlyZWN0b3JzIGxhc3Qgd2VlayB1bnZlaWxlZCBhICQ2NCBtaWxsaW9uIG1hc3RlciBwbGFuIGZvciB0aGUgc2l0ZSBvdmVyIHRoZSBuZXh0IDIwIHllYXJzICAgd2hpY2ggaW5jbHVkZWQgYSBsb25nIGRheSBjYXJlIGNlbnRyZS4gT24gU3VuZGF5IE1zIENvc21vcyBhZ3JlZWQgd2l0aCBDbHVicyBBdXN0cmFsaWEgYm9zcyBBbnRob255IEJhbGwgdGhhdCBsaWNlbnNlZCBjbHVicyB3ZXJlIGluIGEgZ29vZCBwb3NpdGlvbiB0byBkZWxpdmVyIGFmZm9yZGFibGUgYWNjZXNzIHRvIGNoaWxkY2FyZSBpbiB0aGVpciBjb21tdW5pdGllcy4gCkFuZCB0aGUgc2hpcCBjb21iYXQgaXMgcmVhbGx5IHdlbGwgZG9uZSwgd2l0aCBmdWxseSBkZXN0cnVjdGlibGUgc2hpcCBtb2RlbHMuIEkgbG92ZSB0byBzZWUgYSByZW1hc3RlcmVkIHZlcnNpb24gb2YgdGhlIGdhbWUgcG9wIHVwIG9uIFN0ZWFtIHNvbWV0aW1lLi4gCldvcmtpbmcgd2l0aCBVZ2FuZGFuIE1ha2VyZXJlIFVuaXZlcnNpdHkgUkwgdG8gcHJvdmlkZSBvcmdhbmlzYXRpb25hbCBhZHZpY2UgYW5kIHN1cHBvcnQuIEtpdCBzZW50IHRvIHRoZW0gaW4gTWF5LgpQYWNpZmljIFBva2VyIG9mZmVycyBlYXN5IHRvIGJlYXQgZ2FtZXMsIHdoaWNoIGFyZSBhIG1ham9yIGhpdCBhbW9uZyBuZXcgY29tZXJzLCBhbmQgdGhpcyBzaXRlIHNwZWNpYWxpemVzIGluIG5vIGxpbWl0IHRvdXJuYW1lbnRzIG9mIEhvbGQnZW0gcG9rZXIuIApMaWtlIFdpbmQgU3VtIGlzIG5vdCAicGluZyBmcmllbmRseSIgY3V6IDkwJSBvZiBpdHMgRFBTIGNvbWUgZnJvbSB2ZXJ5IHBpbmcgcmVsaWFudCBSTUIsIHdoaWxlIEVhcnRoIFN1bSBpcyBiaXQgbGVzcyBoYXJzaCBhcyBpdHMgRFBTIGlzIHNwcmVhZCB0byBtYW55IHNraWxscywgYW5kIG1vcmUgZnJlcXVlbnQgbmV0dGxlIHNwYW0gaXMgYmV0dGVyIGN1eiBvZiBEb1QgdGhhdCByZWdhcmRsZXNzIG9mIHBpbmcuLiAKVGhlIHN0b3JpZXMgdGhlbXNlbHZlcyBhcmUgbm90IG5lYXJseSBhcyByb21hbnRpYywgYnV0IHRoZXkgZG8gaGF2ZSB0aGVpciBjb21lZGljIG1vbWVudHMuIEFuIHVuYXJtZWQgU2NydWdncyBvdXRmb3hlcyBhIGd1bm1hbiBhY3Jvc3MgZnJvbSBhIHBva2VyIHRhYmxlIHdpdGggYSBtYW5ldXZlciBzdHJhaWdodCBvdXQgb2YgTG9vbmV5IFR1bmVzLiBXaGlsZSBpbiB0aGUgcHJvY2VzcyBvZiBzdGVhbGluZyBzb21lIGVnZ3MgZnJvbSBhIG5lc3QsIFdhaXRzIGhvbGRzIGEgc3RhcmluZyBjb250ZXN0IHdpdGggYW4gb3dsIHRoYXQgYW4gYWJzb2x1dGUgaG9vdC4gCkkgaGF2ZSByZWl0ZXJhdGVkIHRvIEhhbWlzaCB0aGF0IGhlIHNob3VsZCBub3QgZGlzY3VzcyBhbnkgZGV0YWlscyBhYm91dCBjb250YWN0cyBmb3IgYSBzdG9yeSBhbmQgaWYgYXNrZWQgZm9yIGNvbnRhY3QgZGV0YWlscyBzaG91bGQgc2ltcGx5IHRha2UgYSBtZXNzYWdlIGFuZCBwYXNzIGl0IG9uLgpQcm9ibGVtIGlzIHRoZSBibGluZCBmYWl0aCBpbiBzb21ldGhpbmcgZHVlIHRvIG5hbWVzIGFsb25lLiBUaGUgZ2FtZSBjb3VsZCBiZSBhIGR1bXBzdGVyIGZpcmUuIApPZiBjb3Vyc2UgdHlwZSB0aGVvcnkgaXMgaW1wb3J0YW50LiBQcm9ncmFtbWluZyBpcyBleHBlY3RlZCB0byBiZSBhYm91dCBhIHRoaXJkIG9mIHRoZSBleGFtLiAKVG8gdGhlaXIgY3JlZGl0LCBhcyBhIHdheSB0byBtYWtlIG1vbmV5IGluIHRoZSBhcmVhcyB3aGVyZSB0aGV5IGRvbiB0aGV5IGxhdW5jaGVkIHRoZWlyIG93biBwcm9kdWN0cyB1c2luZyB0aGVpciBvd24gYnJhbmQgbmFtZXMuIFRoZXkgY3JlYXRlZCB0aGVpciBvd24gbGFwdG9wcywgY29tcHV0ZXJzLCBlbmNsb3N1cmVzLCBTU0RzLCBjYXNlcyBQb3dlciBTdXBwbGllcywgZXRjLiAKRG9uJ3QgbGV0IHlvdXIgaGFuZHMgcHJvamVjdCB0aGUgd3JvbmcgaW1hZ2UhLiAKVGhlIHN0YXRlbWVudCBjb21lcyBpbiByZXNwb25zZSB0byBhbiBvdXRicmVhayBvZiBuaW5lIGNhc2VzIG9mIG1lYXNsZXMgaW4gVmFuY291dmVyIHRoYXQgYmVnYW4gYWZ0ZXIgYW4gdW52YWNjaW5hdGVkIENhbmFkaWFuIGNoaWxkIGNvbnRyYWN0ZWQgdGhlIGRpc2Vhc2Ugb24gYSBmYW1pbHkgdHJpcCB0byBWaWV0bmFtLgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRoZSBwYWluIGZyb20gcG9raWVzIGxvc3NlcyBpcyBzb2FyaW5nLiAKbGlrZSBzeW1wdG9tcyBkZXJpdmVkIGZyb20gdGhlIFNhY3JvaWxpYWMgSm9pbnQKTXkgQW1lcmljYW4gYW5kIEJyaXRpc2ggZmFtaWx5IGFsd2F5cyBzYXkgdGhleSBoYXZlIHRoZSBncmVhdGVzdCB0aW1lIGJlaW5nIGFibGUgdG8gZG8gYm90aCB0aGUgcmVzb3J0IHN0dWZmIHdoZW4gdGhleSBmZWVsIGxpa2UgaXQgYnV0IGFsc28gZ2V0dGluZyB0aGUgcmVhbC4gV2hlbiBJIGhhZCBhIGtpZCBJIG1hZGUgc3VyZSBoZSBleHBlcmllbmNlZCB0aGF0IGV2ZXJ5IHN1bW1lciBob2xpZGF5LiAKSWYgeW91IGNhbiwgdHJ5IGdldHRpbmcgb2ZmIG9mIHRoZSBwYXZlbWVudCBzbyB0byBzcGVhay4gRmluZCBhIHBhcmsgb3IgbmF0dXJlIGNlbnRlcnMgbmVhcmJ5IGFuZCB0YWtlIGEgc3Ryb2xsIG9uIGEgdHJhaWwuIFlvdSB3aWxsIGJlIGFtYXplZCBhdCB0aGUgZmVlbGluZyBvZiBjYWxtbmVzcyB0aGF0IGNvbWVzIG92ZXIgeW91IG9uY2UgeW91ciBmZWV0IGxlYXZlIHRoZSBwYXZlbWVudCBiZWhpbmQuClJpZGUgaGFpbGluZyBzZXJ2aWNlIEx5ZnQgc2F5cyB0aGF0IGFmdGVyIGxhdW5jaGluZyBhIHNlbGYgZHJpdmluZyBMYXMgVmVnYXMgdGF4aSBzZXJ2aWNlIGF0IGxhc3QgeWVhcidzIENFUywgaXQncyBub3cgaGFkIGFsbW9zdCAzMCwwMDAgcGFpZCByaWRlcy4gCkRyIExpdmluZ3N0b25lLCBhIE1vbmFzaCBVbml2ZXJzaXR5IGdhbWJsaW5nIHJlc2VhcmNoZXIsIHNhaWQgdGhlIGdyb3d0aCBpbiBwb2tpZSBtYWNoaW5lIGV4cGVuZGl0dXJlIHdhcyBkYW1hZ2luZyB0aGUgc3RhdGUgZWNvbm9teSBhbmQgdGVhcmluZyBmYW1pbGllcyBhcGFydC4KTGlrZSB0aGUgd2hvbGUgbm8gc2xlZXBpbmcgcGFydCByZWFsbHkgcnVpbnMgbWUuIAoxM3RoLiAoQ291cnRlc3kgTmV0ZmxpeCkiPkR1VmVybmF5J3MgbGF0ZXN0IGRvY3VtZW50YXJ5IGZlYXR1cmUgaXMgVGhlIDEzdGgsIGEgc29iZXJpbmcgbG9vayBhdCB0aGUgcHJpc29uIGluZHVzdHJpYWwgY29tcGxleCB0aGF0IHdpbGwgb3BlbiB0aGUgTmV3IFlvcmsgRmlsbSBGZXN0aXZhbCBvbiBTZXB0ZW1iZXIgMzAgICB0aGUgZmlyc3QgdGltZSB0aGUgTllGRiBoYXMgZXZlciBzZWxlY3RlZCBhIHdvcmsgb2Ygbm9uZmljdGlvbiBhcyBpdHMgb3BlbmluZyBmaWxtLiAKQWdlIG9mIHNleHVhbCBjb25zZW50IGlzIDE4IHdpdGggbm8gY2xvc2UgaW4gYWdlIGV4Y2VwdGlvbiAgIHNvIHR3byAxNyB5ZWFyIG9sZHMgaGF2aW5nIGNvbnNlbnN1YWwgc2V4IHdpdGggZWFjaCBvdGhlci4gCkl0IGhlbHBzIHRpcCB0aGUgYmFsYW5jZSBiZXR3ZWVuIHdpbm5pbmcgYW5kIGxvc2luZyB3aGVuIHBlb3BsZSBhcmUgZmFpcmx5IGV2ZW5seSBtYXRjaGVkLiBUaGlzIGZpcnN0IGluIHNjYXJsZXQgdHJpZ2dlcmVkIGEgaG9zdCBvZiBvdGhlciBleHBlcmltZW50cywgZmluZGluZyBzaW1pbGFyIHJlc3VsdHMgd2l0aCBmb290YmFsbCBwZW5hbHR5IHNob290ZXJzLCBmb3IgaW5zdGFuY2U6IHRoZXkgYXJlIGxlc3MgbGlrZWx5IHRvIHNjb3JlIGlmIHRoZSBnb2FsaWUgaXMgd2VhcmluZyByZWQuIApBbHNvLCB0aGUgY29lcmNpb24gcGFydCBvZiBpdC4gVGhhdCBqdXN0IGJyb3VnaHQgYmFjayBhIGh1Z2UgZmxvb2Qgb2YgbWVtb3JpZXMgb2YgbXkgbW9tIGFza2luZyBtZSB0byBsaWUgdG8gbXkgZGFkIGFib3V0IHN0dWZmIHNoZSBib3VnaHQuIFNoZSBzdG9wcGVkIGRvaW5nIHRoYXQgbG9uZyBhZ28sIGJ1dCBJIGtub3cgc2hlIGhhcyBzZXZlcmFsICJzZWNyZXQiIHN0b3JhZ2UgdW5pdHMgdGhhdCBzaGUgdGhpbmtzIG15IGRhZCBkb2VzbiBrbm93IGFib3V0LiBJdCBpbnNhbmUgdG8gbWUuClNoZSB3b3VsZCB0ZWxsIHBlb3BsZSBoZSBkaWVkIG9mIGEgaGVhcnQgYXR0YWNrLCB0aGF0IHNoZSBoYWQgZm91bmQgaGltIGluIHRoZSBnYXJhZ2UsIHdoaWNoIGlzIHdoZXJlIEkgZ290IHRoYXQgc3RvcnkgZnJvbS4gSSB0aGluayB0aGF0IHdhcyBhIGtpbmQgb2YgY29waW5nIG1lY2hhbmlzbSBzbyB0aGF0IHNoZSB3b3VsZG4gaGF2ZSB0byBkZWFsIHdpdGggdGhlIHRydXRoLiAKVGhlcmUgd2FzIGEgZ2lybCB0aGF0IHByb3ZpZGVkIEJCQkouIEkgaW5zdGFudGx5IHdlbnQgdG8gbXkgY2FyIGFuZCBwcm9jZWVkZWQgdG8gc2FpZCBtYXNzYWdlIHBhcmxvci4gCk92ZXIgZXhlcnRpbmcgeW91cnNlbGYgaW4gb25lIG9mIHRoZSB0aHJlZSBsZWdzIHdpbGwgbGlrZWx5IGNhdXNlIHlvdSB0byBidXJuIG91dCBmb3IgdGhlIHJlc3Qgb2YgdGhlIHJhY2UsIHdoaWxlIHRha2luZyBpdCB0b28gc2xvdyB3aWxsIGxlYXZlIHlvdSBpbiB0aGUgYmFjayBvZiB0aGUgcGFjay4uIAoiVGhpcyBmdW5kcmFpc2luZyBlZmZvcnQgaXMgYW4gaW5jcmVkaWJsZSBnZXN0dXJlIGZyb20gdGhlIFBva2VyIDQgUHJvc3RhdGUgY29tbWl0dGVlIHdobyBhbGwgdm9sdW50ZWVyIHRoZWlyIHRpbWUgYW5kIGVmZm9ydCB0byByYWlzZSB0aGVzZSBtdWNoIG5lZWRlZCBmdW5kcyIgaGUgc2FpZC4gCkFuZCBhIGxpZmVzdHlsZSBvZiAoc2Vjb25kIHRvICkgbGFzdCByZXNvcnQuIEhlcmUgaW4gdGhlIEVhc3QgQmF5LCB0aGVyZSBhcmUgcm93cyBvZiBSVnMgb24gbG9uZyBpbmR1c3RyaWFsIGJsb2NrcywgYW5kIGFyb3VuZCBtYW55IHBhcmtzLiAKTm90IHRvIHRha2UgYXdheSB0aGUgZmFjdCB0aGF0IHByb2JsZW1zIGhhdmUgYXJpc2VuIChzaG90cyBmaXJlZCBhcmUgdXAsIGFzIHdlbGwgYXMgbXVyZGVycyAoMTAzIGluIHRvdGFsIDIwMTYsIGRvd24gZnJvbSAxMTIgaW4gMjAxNSkgYW5kIHRoZSBuZXcgcHJvYmxlbSBvZiBwZW9wbGUsIHllcyBtb3N0bHkgaW1taWdyYW50cywgdGhyb3cgc3RvbmVzIGF0IGFtYnVsYW5jZXMsIGZpcmVmaWdodGVycyBhbmQgY29wcykgYnV0IHRoZSBuZXdzIG9mIFN3ZWRlbiBpbW1pbmVudCBkZWF0aCBpcyBncmVhdGx5IGV4YWdnZXJhdGVkLgpUaGUgQm9zdG9uIEdsb2JlIGFydGljbGVzIGNhdXNlZCBhIHNlbnNhdGlvbiwgcmFpc2luZyBzdXNwaWNpb24gdGhhdCB0aGUgZ2FtZSB3YXMgcmlnZ2VkLiBUaGUgTWFzc2FjaHVzZXR0cyBzdGF0ZSB0cmVhc3VyZXIgc2h1dCBkb3duIHRoZSBDYXNoIFdpbmZhbGwgZ2FtZSBhbmQgY2FsbGVkIGZvciBhbiBpbnZlc3RpZ2F0aW9uLiBJdCB3YXMgbGVkIGJ5IHRoZW4gc3RhdGUgaW5zcGVjdG9yIGdlbmVyYWwsIEdyZWcgU3VsbGl2YW4uIApZb3UgY2FuIHBsYWNlIHJlbGVnYXRpb24gYmV0cywgdG8gd2luIGJldHMsIHRvcCBnb2FsIHNjb3JlciBiZXRzLCB0b3RhbCBnb2FscyBiZXRzLCBoYW5kaWNhcCBiZXRzLCBnb2FsIGNyYXp5IGJldHMsIGZvb3RiYWxsIHBsYXllciBzcGVjaWFscyBhbmQgbG90cyBtb3JlLiAKRG9uJ3QuIApNb3N0IHByb2dyYW1zIG9mZmVyIGF0IGxlYXN0IHNvbWUgb2YgdGhlIGZvbGxvd2luZyBvcHRpb25zOiBudXRyaXRpb24sIHBoeXNpY2FsIGZpdG5lc3MsIGEgcXVpdCBzbW9raW5nIHByb2dyYW0sIHBoeXNpb2xvZ2ljYWwgdGVzdGluZyBzdWNoIGFzIGNob2xlc3Rlcm9sIGFuZCBibG9vZCBwcmVzc3VyZSBzY3JlZW5pbmcsIGFuZCBzdHJlc3MgbWFuYWdlbWVudC4gCkF0IGhlciB0aW1lLCBWaWN0b3JpYSB3YXMgdGhlIGxvbmdlc3QgcmVpZ25pbmcgc292ZXJlaWduIG9mIEVuZ2xhbmQuIApZb3UgYXJlIGFjdHVhbGx5IHRoZSBvbmUgaW4gY2hhcmdlLiBMTSBkb2Vzbid0IGV2ZW4gcmVhbGx5IGV4aXN0LCB0aGUgbGlsIGFzc2hvbGUuIDopLiAKQnV0IGV2ZW4gaWYgSSBoYWRuJ3QgZG9uZSBhbnkgb2YgdGhpcywgaXQgd291bGRuJ3QgbWF0dGVyLiAKQWNjb3JkaW5nIHRvIHRoZSBUaW1lcywgRHIuIEJpc2hvcCB3YXMgZGVuaWVkIHRlbnVyZSBsYXN0IHNwcmluZywgYnV0IGFwcGVhbGVkIHRoZSBkZWNpc2lvbiAoYSBjb21tb24gcHJhY3RpY2UgYXQgdW5pdmVyc2l0aWVzKS4gd2FzIGluZm9ybWVkIHRoaXMgd2VlayB0aGF0IGhlciBhcHBlYWwgaGFkIGJlZW4gZGVuaWVkLgpNeSBkZXByZXNzaW9uIHdhcyBjcmlwcGxpbmcgbXkgYWJpbGl0eSB0byBkbyBhbnl0aGluZy4gSSB3YXMgaGF2aW5nIGEgaGFyZCB0aW1lIGdldHRpbmcgb3V0IG9mIGJlZCBkYWlseSwgbGV0IGFsb25lIG1lZXRpbmcgbmV3IHBlb3BsZSBvciBnb2luZyBhbnl3aGVyZS4gSSB3YXMgZ2VudWluZWx5IHN1cnByaXNlZCB3aGVuIEkgd2VudCB0byB0aGUgRVIgZm9yIHN0b21hY2ggcGFpbiBhIHllYXIgYW5kIGEgaGFsZiBhZnRlciBSYXkncyBmdW5lcmFsLCBvbmx5IHRvIGRpc2NvdmVyIHRoYXQgSSB3YXMgcHJlZ25hbnQgd2l0aCBhbm90aGVyIG1hbidzIGNoaWxkLiAKWWVzLCB0aGF0IHJpZ2h0LCB0aGUgZmF0IGNhdCBiYW5rZXJzIGF0IEdvbGRtYW4gU2FjaHMgbGVkIHRoZSB3YXkgd2hlbiBpdCBjYW1lIHRvIHJpc2t5IGxlbmRpbmcgYW5kIHRyYWRpbmcgcHJhY3RpY2VzLCB0aGVuLCB3aGVuIHRoZSBjb25zZXF1ZW5jZXMgb2YgdGhvc2UgcHJhY3RpY2VzIGJlY2FtZSBjbGVhciBhbmQgb3RoZXIgYmFua3MgYmVnYW4gdG8gZmFpbCwgR29sZG1hbiBTYWNocyBzbmFwcGVkIHVwICQxMCBiaWxsaW9uIGluIGZlZGVyYWwgYmFpbG91dCBtb25leSB0byBjb3ZlciBpdHMgYmFkIGludmVzdG1lbnRzLiAKVGhpcyB0aGVyYXB5IGlzIG5vdyBub3QgYXZhaWxhYmxlIGluIEF1c3RyYWxpYSwgYW5kIGJlY2F1c2Ugb2Ygc2V2ZXJhbCByZWNvbW1lbmRhdGlvbnMgYW5kIHdlZWtzIGFuZCB3ZWVrcyBvZiByZXNlYXJjaCwgd2UgaGF2ZSBkZWNpZGVkIHRoaXMgaXMgdGhlIGJlc3QgdHJlYXRtZW50IGZvciBQZXRlLiAKVGFycm93ICgyMDExKSByZXNlcnZlcyB0aGUgdGVybSAnc29jaWFsIG1vdmVtZW50JyBmb3IgInNlcXVlbmNlcyBvZiBjb250ZW50aW91cyBwb2xpdGljcyBiYXNlZCBvbiB1bmRlcmx5aW5nIHNvY2lhbCBuZXR3b3Jrcywgb24gcmVzb25hbnQgY29sbGVjdGl2ZSBhY3Rpb25zIGZyYW1lcywgYW5kIG9uIHRoZSBjYXBhY2l0eSB0byBtYWludGFpbiBzdXN0YWluZWQgY2hhbGxlbmdlcyBhZ2FpbnN0IHBvd2VyZnVsIG9wcG9uZW50cyIgKHAuIApVc3VhbGx5IG5vdyBJIGp1c3QgZG9uIHNheSBhIHdvcmQuIElmIHNvbWVvbmUgYmFkbW91dGhzIG1lLCBJIGNhbiBmZWVsIGZyZWUgdG8gbGl0ZXJhbGx5IGludCB0aGUgZ2FtZSBhbmQgc3BhbSBwaW5nIHRoZW0gd2l0aG91dCBhbnkgcHVuaXNobWVudC4gCihBcyBmYXIgYXMgbWFya2V0aW5nIGdvZXMsIHlvdSBjYW4ndCBiZWF0IFJveSBSb3VuZGVyICAgaGUgc3VjY2Vzc2Z1bGx5IHB1c2hlcyBhIDIgeWVhciBvbGQgcG9rZXIgZUJvb2sgZm9yIDMgdGltZXMgdGhlIGNvc3Qgb2YgTWF0dGhldyBIaWxnZXIncyAiSW50ZXJuZXQgVGV4YXMgSG9sZCdlbSIsIGEgdmFzdGx5IHN1cGVyaW9yIHByb2R1Y3QpLi4gCkp1c3QgYmVjYXVzZSB5b3UgZG9uJ3Qgc2VlIGl0IGRvZXNuJ3QgbWVhbiBpdCdzIG5vdCBoYXBwZW5pbmcsIEh1Z2hlcyBzYWlkLiBBbmQgdW5saWtlIGluIHRoZSBwYXN0LCB3aGVuIG1hbnkgcHJvc3RpdHV0ZXMgd2VyZSBmcm9tIG91dCBvZiBzdGF0ZSwgYWxtb3N0IDc1IHBlcmNlbnQgb2YgdGhlIGNhc2VzIGludm9sdmUgZmVtYWxlcyBmcm9tIExhcyBWZWdhcywgc2hlIHNhZGkuCkFsc28sIEkgbWVtb3JpemUgZXZlcnkgc29uZyBJIHBsYXkuIEkgY2FuICJmaWd1cmUgb3V0IiBtdXNpYyAoRkFDRSwgZXZlcnkgZ29vZCBib3kgZG9lcyBmaW5lKSBidXQgSSBhbSBub3QgcHJhY3RpY2VkIGluIHJlYWRpbmcgbXVzaWMuIEkgc3RydWdnbGUgYmVjYXVzZSBJIHJhdGhlciBsb29rIGF0IG15IGhhbmRzIHRoYW4gdGhlIG11c2ljIHVudGlsIEkgaGF2ZSBtZW1vcml6ZWQvaGF2ZSBtdXNjbGUgbWVtb3J5IG9mIHRoZSBwaWVjZQpBZnRlciBhbGwsIHBva2VyIGlzIGEgZ2FtZSBvZiBkZWNlcHRpb24uIFRoZSBnZW5lcmFsIHJ1bGUgaXMgdGhhdCB3ZWFrbmVzcyB1c3VhbGx5IG1lYW5zIHN0cmVuZ3RoLCBhbmQgc3RyZW5ndGggdXN1YWxseSBtZWFucyB3ZWFrbmVzcy4gCkJ1dCB0aGlzIGlzIGp1c3QgYSBmcmVlIGNvbnRlbnQgdXBkYXRlLkl0IHJlYWxseSBpcyBub3QgYW5hbG9nb3VzIHRvIHZpZGVvIGdhbWUgdmlvbGVuY2UgYW5kIHlvdSBjYW4gdGFrZSByZXN1bHRzIG9mIHN0dWRpZXMgZnJvbSBvbmUgYW5kIGFwcGx5IGl0IHRvIHRoZSBvdGhlci4gUGVvcGxlIChzYW5lIG9uZXMpIGRvbiBib290IHVwIENhbGwgb2YgRHV0eSBzZWVraW5nIHRvIHNhdGlzZnkgdGhlaXIgdXJnZSB0byBraWxsIHNvbWVvbmUuIFBlb3BsZSBkbyBzZWFyY2ggb3V0IHBvcm5vZ3JhcGh5IHRvIHNhdGlzZnkgdGhlaXIgc2V4dWFsIHVyZ2VzIGFuZCBkZXNpcmVzLiAKU28gb2Z0ZW4gaXQgc2VlbXMgdGhhdCB0aG91Z2ggaGUgaGFzIGFtYXppbmcgaWRlYXMgZm9yIHN0b3JpZXMgYW5kIHByb2JsZW1zLCBidXQgb2Z0ZW4gZWl0aGVyIGxhY2tzIHRoZSBhYmlsaXR5IG9yIGlzIHRvbyBsYXp5IHRvIGJyaW5nIHN0dWZmIHRvIGEgc2F0aXNmeWluZyBlbmQuIApNYW4gamFpbGVkIG92ZXIgaG9ycmlmaWMgZ2xhc3NpbmcgYXQgV2FyaWxsYSBIb3RlbApUaGUgcmFwaWQgZ3Jvd3RoIGluIG9ubGluZSBwb2tlciBzaXRlcyBpcyB3aGF0IG1ha2UgcGVvcGxlIHdvcnJ5IGFib3V0IGl0cyBsZWdhbGl0eSBpc3N1ZS4gV2hpbGUgdGhlIGZ1dHVyZSBvZiBvbmxpbmUgcG9rZXIgaXMgY29tcGxldGVseSBjbHVlbGVzcyB3aGV0aGVyIGl0IGlzIGdvaW5nIHRvIGJlIGxlZ2FsLCBpbGxlZ2FsIG9yIGp1c3QgYW5vdGhlciBtb25leSBtYWtpbmcgd2Vic2l0ZSByZW1haW5zIHRvIGJlIHNlZW4uIEJ1dCB0aWxsIHRoZW4sIHlvdSBjYW4gbG9naW4gdG8geW91ciBmYXZvdXJpdGUgb25saW5lIHdlYnNpdGUgYW5kIHN0YXJ0IHBsYXlpbmcgdG8geW91ciBoZWFydCBkZXNpcmUuLiAKSSBkb24gdGhpbmsgSSBhIGJhZCB0b3VybmV5IHBsYXllciwgYnV0IHRoZSBsYXN0IHdlZWsgaGFzIGZlbHQgcHJldHR5IHN1YnN0YW5kYXJkIGluIHRlcm1zIG9mIHN0YXJ0aW5nIGhhbmQgZGlzdHJpYnV0aW9uIGFuZCBmbG9wIGhpdCAlLiAKUG9saWNlIGhhdmUgc2VpemVkIDEsODQ3IHBva2VyIGNvaW5zIHdvcnRoIFJzIDM1IGxha2gsIFJzIDMuOCBsYWtoIGluIGNhc2ggYW5kIHNvbWUgb3RoZXIgbWF0ZXJpYWxzLi4gCkZjIGxpc3QgbGlzdHMgYWxsIGF2YWlsYWJsZSBmb250cy4gClRoZSB3b3JsZCBvZiBoaWdoIHN0YWtlcyB1bmRlcmdyb3VuZCBwb2tlciBnYW1lcyBpbnZvbHZpbmcgY2VsZWJyaXRpZXMgYW5kIGJpbGxpb25haXJlcyBoYXMgYmVlbiBhIGNsb3NlbHkgZ3VhcmRlZCBzZWNyZXQgdW50aWwgbm93LiAKVHdpdHRlcjogTWl0Y2hlbGwxOTY5IChGdWxsIEFuc3dlcikKRGF2aWRzb24gc2FpZC4gClNvbWUgcGxhY2VzIHdoZXJlIGl0IGxlZ2FsIG1ha2UgaXQgc2lnbmlmaWNhbnRseSBzYWZlciBhcyB3ZWxsLkFsbCB0aGF0IGFzaWRlLCBteSB1bmRlcnN0YW5kaW5nIGlzIHRoYXQgYSBib251cyBvZiBoaXJpbmcgYSBwcm9zdGl0dXRlcyBvciBlc2NvcnQgbWVhbnMgeW91IGNhbiBnZXQgcmlnaHQgdG8geW91ciBraW5rIHdpdGhvdXQgZW1iYXJyYXNzbWVudCBvciB3b3JraW5nIHVwIHRvIGl0IHdpdGggYSByZWd1bGFyIHJlbGF0aW9uc2hpcC4gClRoZSB3aWxkY2FyZCBpcyBhIHZlcnkgaW50ZXJlc3RpbmcgY29uY2VwdDsgdGhyb3VnaCB0aGlzLCB0aGUgb3duZXIgY2FuIGdldCBhbnkgdHdvIHBsYXllcnMgdG8gcGxheSBmb3IgaGlzIHRlYW0uIAoyIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpTb21lIGdvb2QgYWR2aWNlIGFib3ZlLiBBbHRob3VnaCBJIHdvdWxkIHNheSB0aGF0IHRoZSByZWFzb25zIGJlaGluZCBhbGwgeW91ciBzeW1wdG9tcyBjYW4gYmUgbWFueSBhbmQgdmFyaWVkLiBJbmNyZWFzZSBpbiBpbnRlbnNpdHkgY2FuIGJlIG9uZSwgdGlnaHQgbGF0ZXJhbCBsZWcgc3RydWN0dXJlcyAoSVRCKSBjYW4gYmUgYW5vdGhlciwgcG9vciBzYWRkbGUgdG8gcGVkYWwgYXhsZSByZWxhdGlvbnNoaXAgbWVhbmluZyB5b3UgYXJlIHVzaW5nIHNtYWxsZXIgd2Vha2VyIG11c2NsZXMgaW5zdGVhZCBvZiBwcmltZSBtb3ZlcnMgZXRjIGV0Yy4gClRoaXMgaXMgcGVyaGFwcyB0aGUgZmlyc3QgcHVibGljYXRpb24gaW4gYSBqb3VybmFsIG9mIHRoZSBkb3QgbWV0aG9kIG9mIHRyYW5zY3JpYmVkIHNpZ25hbHMgb2YgYSByZWNvcmRpbmcgZWxlY3Ryb21hZ25ldGljIHRlbGVncmFwaC4gVGhlIGRvdHMgYXJlIHBpY3R1cmVkICIuIApFdmVyeSB0aW1lIEkgZ28gdG8gTGVtYm9uZ2FuIChub3QgYWxsIHRoYXQgb2Z0ZW4pIEkgc2VlIGF0IGxlYXN0IG9uZSBwZXJzb24gd2hvIGhhcyBoYWQgYSBiYWQgc3BpbGwgb24gYSBzY29vdGVyLiBUaGUgcmVzdWx0cyBJIHNlZW4gcmFuZ2VkIGFueXdoZXJlIGZyb20gbG90cyBvZiBjdXRzIGFuZCBhIHZlcnkgYmFkIGNhc2Ugb2Ygcm9hZCByYXNoIHRvIGJlaW5nIG1lZGV2YWNlZCB0byBCYWxpIChhbmQgdGhlbiBvbiB0byBTaW5nYXBvcmUsIEkgdGhpbmspLiBQZW9wbGUgdGhpbmsgdGhhdCBzY29vdGVycyB0aGVyZSBhcmUgbm8gYmlnIGRlYWwgYmVjYXVzZSB0aGVyZSBpcyBhbG1vc3Qgbm8gY2FyIHRyYWZmaWMuIApHZW50bHkgc3BsYXNoIHRoZSBtaWxrIGluLCBhcm91bmQsIGFuZCB0aHJvdWdoIHRoZSBzdGVtIHRvIGdldCBhbGwgdGhlIHJlY2xhaW0gb3V0IGFuZCBkaXNzb2x2ZWQgaW50byB0aGUgbWlsaywgdGhlbiB0dXJuIHRoYXQgaW50byBjaG9jb2xhdGUgbWlsay4gQSBxdWFydGVyIHRocm91Z2ggdGhlIHN0ZW0gaXMgdXN1YWxseSBlbm91Z2ggcmVjbGFpbSB0byBwdXQgbWUgYXQgYSA5IHRvIDExIGZvciBhYm91dCA4IGhvdXJzLi4gCk1pcnRhemFwaW5lIGlzIGFjdHVhbGx5IHZlcnkgZ29vZCBhdCBtYW5hZ2luZyBhbnhpZXR5LCBhbmQgaXMgbWFya2V0ZWQgdG93YXJkcyBwZW9wbGUgd2l0aCBwYW5pYyBkaXNvcmRlcnMgb3IgR0FELiBJIHRoaW5rIGNyb3NzIGRvc2luZyB3aXRoIGZsdW94ZXRpbmUgaXMgYSBiZXR0ZXIgd2F5IHRvIGdldCBvZmYgcGFyb3hldGluZSBiZWNhdXNlIGZsdW94ZXRpbmUgaGFzIGEgbG9uZ2VyIGhhbGZsaWZlLCBpdHMgbXVjaCBlYXNpZXIgdG8gdGFwZXIgb2ZmLiAKSUJNIENhbmFkYSBoYXMgd29uIG1vcmUgdGhhbiAkMyBiaWxsaW9uIHdvcnRoIG9mIGdvdmVybm1lbnQgY29udHJhY3RzIHNpbmNlIDIwMTYsIG1haW5seSBiZWNhdXNlIHRoZSBjdXJyZW50IHByb2N1cmVtZW50IHN5c3RlbSBnaXZlcyBCaWcgQmx1ZSBhbmQgb3RoZXIgbGFyZ2UgbXVsdGkgbmF0aW9uYWwgdmVuZG9ycyBhbiBpbnNpZGUgdHJhY2suIEZvciBpbnN0YW5jZSwgdGhlIGZlZHMgbWFuZGF0ZSB0aGF0IGFsbCBhcHBseWluZyBjb21wYW5pZXMgbXVzdCBzaG93IHRoZXkgaGF2ZSBkb25lIGZpdmUgZXF1aXZhbGVudCBwcm9qZWN0cyBhcyBhIG1pbmltdW0uIFNpbmNlIHRoZSBwcm9qZWN0IGluIHF1ZXN0aW9uIHdhcyBmb3IgYSBtYXNzaXZlIDUwMCBwbHVzIGRhdGEgY2VudHJlIGNvbnNvbGlkYXRpb24sIGl0IHNsYW1tZWQgdGhlIGRvb3Igc2h1dCBvbiBob21lIGdyb3duIENhbmFkaWFuIElDVCBiZWZvcmUgdGhleSBjb3VsZCBnZXQgc3RhcnRlZCBhcHBseWluZy4uIApSYW5kb21fYWNjZXNzX2NhY2hlICAyIHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ28KS25pZ2h0cyBwcm9zcGVjdCBTZWFuIE1jR3VybiBoYWQgdHdvIGdvYWxzIGFuZCBmaXZlIHBvaW50cyBpbiBTdC4gCkZvciBleGFtcGxlLCBwcm90ZWluIGRvZXNuIHdvcmsgaW4gdGhlIHNhbWUgd2F5IHBhaW4gcGlsbHMgZG8uIApUaGUgdG91cm5hbWVudCBiZWdpbnMgYW5kIGVuZHMgU2F0dXJkYXkuIApJdCdzIGJlZW4gZ3JlYXQuIAogNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29UaGF0IGlzIG5vdCBhdCBhbGwgdHJ1ZS4gSSB2ZXJ5IGhhcHB5IGZvciB5b3UuIApUaGVuIHRvbGQgaGltIEkgd2FzIGNoZWF0aW5nIG9uIGhpbSwgd2hpY2ggSSB3YXNuIEhlIGRyb3ZlIHRoZSAyIGhvdXJzIHRvIHNlZSBtZSB3aXRob3V0IG1lIGtub3dpbmcgYW5kIG5vdCByZWFsaXppbmcgd2h5IGhlIHNob3dlZCB1cC4gSXQgd2FzIGJhZC4gCkRhIGluIGRlbiBCb2R5IE1lbHRzIGtlaW4gV2Fzc2VyIGVudGhhbHRlbiBpc3QsIGhhbHRlbiBzaWUgb2huZSBLb25zZXJ2aWVydW5nc3N0b2ZmZSBtZWhyZXJlIFdvY2hlbi4gSWNoIGhhYmUgYmVybGVndCwgb2IgaWNoIGRpZSBCb2R5IE1lbHRzIGVpbmZyYmVuIHNvbGwsIGRlbm4gcm9zYSBvZGVyIGluIGhlbGxlbSBWaW9sZXR0IHdyZW4gc2llIGRvY2ggaXJnZW5kd2llIG5vY2ggaGJzY2hlciwgYWJlciBpY2ggaGF0dGUgbnVyIExlYmVuc21pdHRlbGZhcmJlIGF1ZiBXYXNzZXJiYXNpcyB6dSBIYXVzZSB1bmQgZGllIHdyZGVuIGJlaSBkZXIgcmVpbmVuIEZldHRtYXNzZSBnZW5hdSBuaWNodHMgYnJpbmdlbi4gQWJlciBpY2ggZGVua2UgYmVpIGFsbGVuIEZhcmJzdG9mZmVuIGJlc3RlaHQgZGllIEdlZmFociwgZGFzcyBzaWUgYXVmIGRlciBIYXV0IGFiZnJiZW4gYWxzbyB3ZW5uLCBkYW5uIHNvbGx0ZSBtYW4gc3BhcnNhbSBkYW1pdCB1bWdlaGVuLiAKRGFuZHlib21iICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIG1vcm5pbmcgcHJvZ3JhbSBvcGVuZWQgd2l0aCBNcnMuIEpha2UgSm9uZXMsIEp1ZGEsIEdyZWVuIENvdW50eSBjaGFpcm1hbiwgcHJlc2lkaW5nLiBUaGUgUmV2LiBKLiBDLiBSb2JlcnRzb24gZ2F2ZSB0aGUgaW52b2NhdGlvbjsgdGhlIEdpcmwgU2NvdXRzIHByZXNlbnRlZCB0aGUgY29sb3JzIGFuZCBwbGVkZ2Ugb2YgYWxsZWdpYW5jZTsgTXJzLiBGcmVkIEhlbnJ5LCBwcmVzaWRlbnQgb2YgdGhlIGhvc3Rlc3MgY2x1YiwgZ2F2ZSB0aGUgd2VsY29tZSBhbmQgTXJzLiBNZWx2bG4gQml0bmhhdWcsIGZpcnN0IHZpY2UgcHJlc2lkZW50IG9mIEZpcnN0IERpc3RyaWN0LCB0aGUgcmVzcG9uc2UuIApXaGlsZSB0aGVyZSBhcmUgYSBudW1iZXIgb2Ygc2V0cyBvbiB0aGUgbWFya2V0LCBub3QgYWxsIG9mIHRoZSBzZXRzIGhhdmUgdHJlbWVuZG91cyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggdGhlbS4gVGhpcyBpcyBvZnRlbiBkdWUgdG8gdGhlaXIgcGVkZXN0cmlhbiBkZXNpZ24uIApBcmNoaXZlcyBvZiBQZWRpYXRyaWMgYW5kIEFkb2xlc2NlbnQgTWVkaWNpbmUKT3VyIGRpbmluZyByb29tIGhhcyBhIHJlc2VydmVkIGNhcHRhaW4gdGFibGUgZm9yIG91ciBndWVzdHMgbG9va2luZyB0byBzaGFyZSBjb252ZXJzYXRpb24gZHVyaW5nIHRoZWlyIG1lYWwgb3IgeW91IGNhbiBkaW5lIHNvbG8sIHlvdXIgY2hvaWNlIGF0IGFueSBtZWFsIHRocm91Z2hvdXQgdGhlIGRheS4gCk1hcnkgaXMgc3Vydml2ZWQgYnkgaGVyIGRhdWdodGVyLCBEb25hdGEgRS4gV2lsbGlhbXMgYW5kIGh1c2JhbmQsIEx0LiAKIllvdSBjYW4gYmUgbW9uaXRvcmluZyBwb2xsZW4gY291bnRzIG9ubGluZSwgc28geW91IGFyZSBhd2FyZSB3aGVuIHRoZXJlJ3MgaGlnaCBhbW91bnRzIG9mIHBvbGxlbiBpbiB0aGUgYWlyLCIgc2hlIHNhaWQuICJZb3UgY2FuIG1ha2UgYSBkZWNpc2lvbiBub3QgdG8gYmUgb3V0ZG9vcnMuIiBJdCBoYXJkIHRvIGtub3cgd2hhdCBzZXQgb2YgY2lyY3Vtc3RhbmNlcyBjb3VsZCBoYXZlIGNoYW5nZWQgdGhpbmdzIGZvciBKYW1lcy4gClRoZXJlIGFyZSBubyByZWFzb25zIHRvIGlnbm9yZSBzdWNoIGFtYXppbmcgb2ZmZXIuIApIZSBtaWdodCBiZSBhIHBhaWQgc2hpbGwgZm9yIHN0YXJzIGJ1dCB0aGF0IGJlc2lkZSB0aGUgcG9pbnQuIE15IHBvaW50IGlzLCB3ZSBhbGwgYmVlbiBjcmluZ2Vsb3JkcyBhdCBzb21lIHBvaW50IGFuZCByZSBoYXNoaW5nIHN0dWZmIGxpa2UgdGhpcyBpbiBvcmRlciB0byBtYWtlIGhpbSBsb29rIGJhZCBiZWNhdXNlIHlvdSBkb24gYWdyZWUgd2l0aCBoaXMgc3RhbmNlIG9uIHJha2UsIGlzIGEgbG93IG1vdmUgb24gcGFyIHdpdGggbW9zdCBtb2Rlcm4gZGF5IHBvbGl0aWNpYW5zLiAKSSB0cmltIHRoZSBjb3JuZXJzIG9mIHRoZSBib2FyZHMgYXQgdGhlIGNvcm5lcnMgdG8gYWxsb3cgZm9yIGEgbWlsZCBzbG9wZSBzbyB0aGUgY29ybmVycyB3b250IGJlIHNvICJzcXVhcmUiIGFuZCBzbyB0aGUgZnJlbmNoIGdyb292ZXMgd2lsbCBzZWF0IGJldHRlciAob3IgbWF5YmUgaXQganVzdCBhcHBlYXJhbmNlIDspICkKSXQncyBzbyBsb2NhbCB0aGF0IENsdWIgQ29ydGV6IG1lbWJlcnMgY2FuIGV2ZW4gY2FzaCB0aGVpciBwYXljaGVja3MgYXQgdGhlIGNhc2lubyBhbmQgcmVjZWl2ZSBmaXZlIHBlcmNlbnQgb2YgdGhlIGNoZWNrIGluIGZyZWUgcGxheSwgdXAgdG8gJDUwLi4gCkl0IGEgeWVhciBvZiB5b3VyIGxpZmUuIFRyeSBpdCBvdXQuIApZb3UgY2FuIHN0YXJ0IG9mZiB3aXRoIHNpbXBsZSwgc21hbGwgdGhpbmdzLCBhbmQganVzdCBraW5kYSBncm93IGZyb20gdGhlcmUuIFRoZSBiZWF1dHkgb2YgaXQgaXMgdGhhdCBzb21ldGhpbmcgdGhhdCBsb29rcyBzbyBjb21wbGV4IGNhbiBhY3R1YWxseSBiZSBjb25zdHJ1Y3RlZCBxdWl0ZSBzaW1wbHkuIEV2ZW4gaWYgdGhlIHByb2plY3QgdHVybnMgb3V0IHRlcnJpYmxlLCBpdCBjYW4gc3RpbGwgYmUgZnVuY3Rpb25hbCBhbmQgbG92ZWQgYnkgc29tZW9uZSBvciBzb21ldGhpbmcgKHBldHMgbG92ZSB3YXJtIHF1aWx0cyEpLiAKSW4gdGhlIGFib3ZlIGV4YW1wbGUsIE1hdHQgRG9oZXJ0eSBpcyBxdWlja2x5IG91dCB0byBlbmdhZ2UgS29sYXNpbmFjLCB3aGlsZSBSeWFuIEJlbm5ldCBpcyBibG9ja2luZyB0aGUgY2hhbm5lbCBJd29iaSB3b3VsZCBub3JtYWxseSBidXJzdCBpbnRvIGZvciB0aGUgcmV0dXJuIHBhc3MgYWdhaW5zdCBhIGJhY2sgZm91ci4gVGhlcmUgYXJlIHRocmVlIFdvbHZlcyBkZWZlbmRlcnMgYmV0d2VlbiBLb2xhc2luYWMgYW5kIEF1YmFtZXlhbmcsIGFuZCB0aGUgdmlzaXRvcnMgb3V0bnVtYmVyIEFyc2VuYWwgZml2ZSB0byB0d28gaW4gdGhpcyBzaXR1YXRpb24uIEtvbGFzaW5hYyBpcyBmb3JjZWQgdG8gd2hpcCBhIGNyb3NzIGluLCB3aGljaCB3YXMgZGVmbGVjdGVkIGZvciBhIGNvcm5lci4uIApLZWxpZmkgRHJhZ29uID0+IEtlbGlmaSBEcmFnb24gY2Fubm90IGJlIHByb2R1Y2VkIHVubGVzcyB5b3UgaGF2ZSA3IGFlbWJlciBvciBtb3JlLgoyNiBNYXIgMjAxNCAuIE9uY2UgeW91IHVuY292ZXIgdGhlc2Ugb2JzY3VyZSwgeWV0IHJlYWxseSB1c2VmdWwgV29yZFByZXNzIHBsdWdpbnMsIHlvdXIgd2ViIGxpZmUgd2lsbCBuZXZlciBiZSB0aGUgc2FtZS4gQ1NTIEZvbnRzIEZyZWVsYW5jZSBHcmFwaGljIEljb25zIEluc3BpcmF0aW9uIEphdmFTY3JpcHQgLiBBbm90aGVyIGV4Y2VsbGVudCBlY29tbWVyY2Ugb2ZmZXJpbmcsIE1hZ2ljIEFjdGlvbiBCb3ggYWxsb3dzIHlvdSB0byAuIEdvIGRvd25sb2FkIGEgZmV3IGFuZCBhY2hpZXZlIHlvdXIgd2ViIGdvYWxzIEFTQVAuIAoiU2luY2UgdGhlIHllYXIgMjAwNywgW2Jhc2ViYWxsXSB0ZWFtcyB0aGF0IG1hZGUgdGhlIHBsYXlvZmZzIHRoZSBwcmV2aW91cyBzZWFzb24gd2luIDU1LjcgcGVyY2VudCBvZiB0aGVpciBnYW1lcyBpbiBNYWpvciBMZWFndWUgQmFzZWJhbGwgYWdhaW5zdCB0ZWFtcyB0aGF0IGZhaWxlZCB0byBtYWtlIHRoZSBwbGF5b2ZmcyBpbiB0aGUgcHJldmlvdXMgeWVhci4gVGh1cywgaW4gc29tZSBjcnVkZSBzZW5zZSwgdGhlIHByZWRpY3RhYmlsaXR5IG9mIG91dGNvbWVzIGZvciBwYWlycyBvZiBwbGF5ZXJzIGluIGEgcG9rZXIgdG91cm5hbWVudCBpcyBzaW1pbGFyIHRvIHRoYXQgYmV0d2VlbiB0ZWFtcyBpbiBNYWpvciBMZWFndWUgQmFzZWJhbGwuIFRvIHRoZSBleHRlbnQgdGhhdCBiYXNlYmFsbCB3b3VsZCB1bnF1ZXN0aW9uYWJseSBiZSBqdWRnZWQgYSBnYW1lIG9mIHNraWxsLCB0aGUgc2FtZSBjb25jbHVzaW9uIG1pZ2h0IHJlYXNvbmFibHkgYmUgYXBwbGllZCB0byBwb2tlciBpbiBsaWdodCBvZiB0aGUgZGF0YS4iLiAKRmFzdCBmb29kIGlzIGtpbGxpbmcgdXMsIG1vcmUgc28gdGhhbiBhbnkgdG94aW5zIGluIHRoZSBlbnZpcm9ubWVudC4gRXZlbiB0aGUgbnVtYmVyIG9mIGZhc3QgZm9vZCByZXN0YXVyYW50cyBpbiBhbiBhcmVhIGNhbiBiZSB0b3hpYyB0byB5b3VyIGhlYWx0aC4gQSBzdHVkeSBpbiBNYXkgbG9va2VkIGF0IHRoZSBudW1iZXIgb2Ygc3VjaCBpbnN0aXR1dGlvbnMgYW5kIHRoZSByaXNrIG9mIGhlYXJ0IGRpc2Vhc2UsIHN0cm9rZSwgYW5kIGRpYWJldGVzLiBUaGUgbWF4aW1hbCBpbXBhY3Qgb2YgZWFjaCByZXN0YXVyYW50IGlzIHNtYWxsLCBidXQgb3BlbmluZyB1cCAxMCBuZXcgcGxhY2VzIGluIGV2ZXJ5IGNvdW50eSBpbiBBbWVyaWNhIHdvdWxkIGFkZCBhbiBleHRyYSA3NDggY2FyZGlhYyBkZWF0aHMsIDU2NyBzdHJva2UgZGVhdGhzLCBhbmQgMzkwIG5ldyBjYXNlcyBvZiBkaWFiZXRlcyBpbiB0aGUgbmV4dCAxMCB5ZWFycy4KRXJyb3JzIGluIHVuaXQgZW50aXRsZW1lbnQgb2NjdXIgZnJlcXVlbnRseS4gClBkZiBmcmVlIGFhcmFueWEga2FhbmRhbSBtb3ZpZSBkdmRyaXAgZG93bmxvYWQgbW92aWVzIC4gCkNyYXppZXIgc3RpbGwgaXMgdGVjaG5pY2FsbHkgaHlkcmEgY2FwIHdhcyBoYW5kZWQgb3ZlciB0aGUgZ292ZXJubWVudCBieSBhIGxlZ2FsIGNsYXVzZSB0aGF0IHdhcyBzZXQgdXAgZm9yIHRpbWUgYWlkIGVtZXJnZW5jeSBzbyBoZSB0ZWNobmljYWxseSBuZXZlciBicm9rZSBhbnkgbGF3cyB0YWtpbmcgb3ZlciB0aGUgd29ybGQgc28gdGhleSBsZWdhbGx5IGNhbid0IGhvbGQgaGltIGZvciBhbnl0aGluZywgYnV0IHRoZXkgb2YgY291cnNlIGxvY2sgaGltIHVwIGFueXdheSBnaXZpbmcgaGltIG1vcmFsIHN1cGVyaW9yaXR5IHdoaWNoIGl0IHBsYXlzIGF0IHRvd2FyZHMgdGhlIGVuZCBraW5kIG9mIGZ1Y2tzIHdpdGggY2FwLiAKTm93IGltYWdpbmUgdGhhdCB5b3VyIGhhbmRzIGFyZSBhIGNsb3NlZCBib29rLCBhbmQgeW91ciB0aHVtYnMgYXJlIHRoZSBzcGluZS4gCkl0IG5vdCBzdXBwb3NlZCB0byBiZSB0aGF0IHdheSBidXQgSSBrbm93IGl0IHdoYXQgcGVvcGxlIGRvLiBVcHZvdGVzIGFyZSBzdXBwb3NlZCB0byBiZSBmb3IgdGhpbmdzIHBlb3BsZSB0aGluayBjb250cmlidXRlIHRvIHRoZSBzdWIvZGlzY3Vzc2lvbiBvciBhcmUgaW50ZXJlc3RpbmcsIG5vdCB0byBzaG93IGFncmVlbWVudC9kaXNhZ3JlZW1lbnQuIApPciBhdCBhbGwgaW4gc29tZSBjYXNlcy5PZiBjb3Vyc2UgaWYgeW91IGhhdmUgYSB2ZXJ5ICJyaWNoIiBmcmllbmQgdGhhdCBoYXMgYSBsb3Qgb2YgcG9rZXIgY2hpcHMsIGFuZCBwbGF5cyBvbiBoaWdoIHN0YWtlIHRhYmxlcyB5b3UgY2FuIGFsc28gZ2V0IHBva2VyIGNoaXBzIGZyb20gaGltIDopLkluIGFueSBjYXNlIHdoYXQgZXZlcnlvbmUgc2hvdWxkIHdhdGNoIG91dCBmb3IgaXMgU2NhbSBlbWFpbHMgYW5kIG1lc3NhZ2VzIGluIGZhY2Vib29rIHdoZXJlIHlvdSBhcmUgc3Vwb3NlIHRvIGJlIGF3YXJkZWQgb3IgYmFuZWQgZm9yIGFueSByZWFzb24sIGFuZCB5b3UgYXJlIGFza2VkIHRvIGNsaWNrIGEgbGluayB0byB2ZXJpZnkgeW91ciBhY2NvdW50LCB3aGVyZSB5b3Ugd291bGQgbmVlZCB0byBsb2dpbiBvZiBjb3Vyc2U7IHdoZW4geW91IGxvZ2luIHRvIHRoYXQgbGluayB5b3UgZG9uJ3QgYWN0dWFsbHkgdmVyaWZ5IGFueXRoaW5nIHlvdSBqdXN0IGdpdmUgb3V0IHlvdXIgcGFzc3dvcmQgYW5kIGFjY291bnQgdG8gc29tZSBoYWNrZXJzLiAKT2YgY291cnNlLCB0aGVyZSBhcmUgd29tZW4gd2hvIGhhdmUgZmFsc2VseSBhY2N1c2VkIG90aGVycyBvZiBhc3NhdWx0LiBPbmUgb2YgbXkgY2xvc2UgZnJpZW5kcyB3YXMsIGluIGZhY3QsIGEgdmljdGltIG9mIHRoaXMgaW4gaGlnaCBzY2hvb2wuIEl0IGNvbXBsZXRlbHkgdXBlbmRlZCBoaXMgbGlmZSwgYW5kIHdhcyBhIHRlcnJpYmxlLCB0cmF1bWF0aXppbmcgZXhwZXJpZW5jZS4gCkNvbnN0cnVjdCB5b3VyIGhhYml0cyBzbyB0aGF0IHlvdSBhY2NvbXBsaXNoIHRoaW5ncyB0aGF0IGltcHJvdmUgeW91ciBza2lsbHMuIApBZ2FpbiB0aGlzIGlzIG9ubHkgYWNjb3JkaW5nIHRvIG9uZSBpbW1pZ3JhdGlvbiBvZmZpY2UsIGFjdHVhbCByZXN1bHRzIG1heSB2YXJ5Li4gCkhvd2V2ZXIsIGlmIHlvdSBsaWtlIGxlc3MgdGhhbiBjb21tb24gcG9rZXIgdmVyc2lvbnMsIGxpa2UgcGVyaGFwcyB0aGUgUmF6eiBvciA1IGNhcmQgZHJhdywgaXQgaXMgaW1wb3J0YW50IHRoYXQgeW91IGZpbmQgb3V0IGlmIHRoZSBvbmxpbmUgc2l0ZSB5b3UgYXJlIHN1cHBvcnRpbmcgaGFzIHRoYXQgZ2FtZS4gCldoZW4gSSB3YXMgdHdlbHZlIG15IG1vdGhlciBtYXJyaWVkIG15IHN0ZXBmYXRoZXIgYW5kIGhlIGltbWVkaWF0ZWx5IHN0YXJ0ZWQgZm9yY2luZyBoaXMgd2VpcmQgaWRpb3N5bmNyYXNpZXMgYW5kIGNvbnRyb2wgaXNzdWVzIG9uIG1lLiBUaGluZ3MgbGlrZSBjdXR0aW5nIG9mZiB0aGUgd2F0ZXIgaWYgSSBzaG93ZXJlZCBmb3IgbW9yZSB0aGFuIDUgbWludXRlcywgbWFraW5nIG1lIHVzZSBoYW5kIHNhbml0aXplciBzbyBvZnRlbiB0aGF0IG15IHNraW4gd291bGQgZHJ5IG91dCBhbmQgY3JhY2ssIGFuZCB3b3JzdCBvZiBhbGwuIApZb3VyIGNvdW50cnkgYWJvdXQgdG8gd2l0bmVzcyBhIHZlcnkgc2hhcnAgYmFja2xhc2ggZWNvbm9teSB3aXNlLi4gCkhpcyBpbXByZXNzaXZlIHBvcnRmb2xpbyBpbmNsdWRlZCBudW1lcm91cyBoaWdocmlzZSBhcGFydG1lbnQgYW5kIGNvbmRvbWluaXVtIGJ1aWxkaW5ncywgc2hvcHBpbmcgY2VudGVycywgY29tbWVyY2lhbCBjb21wbGV4ZXMsIG5vbiBwcm9maXQgaG91c2luZyBkZXZlbG9wbWVudHMsIGNodXJjaGVzLCBtdWx0aXBsZXggcmVzaWRlbnRpYWwgcHJvamVjdHMgYW5kIHNpbmdsZSBmYW1pbHkgcmVzaWRlbmNlcy4gQmlsbCB3b3JrZWQgd2l0aCBtYW55IHdlbGwgcmVzcGVjdGVkIGRldmVsb3BlcnMgaW4gTG9uZG9uIGFuZCBhY3Jvc3MgT250YXJpbywgc29tZSBvZiB3aGljaCBpbmNsdWRlIEF1YnVybiwgQXllcnN3b29kLCBCbHVlc3RvbmUsIERyZXdsbywgRVNBTSwgR3JhbmR2aWV3LCBNZWRhbGxpb24sIE9sZCBPYWsgYW5kIFRyaWNhci4gCkhlcmVzIGFyZSBzb21lIHdheXMgeW91IGNhbiBkbyB0byBpbmNyZWFzZSB5b3VyIGZhbWlseSBzaXplOiAgSm9pbiBhIGdyb3VwICBQb3N0IGluIHRoZSBNYWZpYSBXYXJzIEZvcnVtcy4gCkkgc3VyZSBJIHNlZW4gbGlzdGVkIG9uIHRoZSBNYWxpbm9pcyBSZXNjdWUgc2l0ZSBhbmQgcGFzc2VkIG92ZXIgaGltIHNpbmNlIGhlIHdhcyBhIG1hbGUuIApJdHMgYSBsb3Qgb2YgdGhpbmdzIHRoYXQgYnJvdWdoIFNlbm9sJ3MgZG93bmZhbGwgd2l0aCB0aGUgZmFucywgaSBzdGlsbCByZXNwZWN0IGhpbSwgYW5kIHdvbnQgc2hpdCB0YWxrIGhpbSBvbmNlIGhlIGxlYXZlcywgYnV0IGluIHRoaXMgY3VycmVudCBzdGF0ZSBpIHdhbnQgaGltIHRvIGp1c3QgcmVzaWduLkZpZ1NpZGVHICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29Eb2Vzbid0IGhhdmUgdG8gYmUgYW5ncnkgYW55bW9yZT8gVGVsbCB0aGF0IHRvIGV2ZXJ5b25lIHRoYXQga2lsbGVkIGhpbSBmb3IgUmV2aXZhbC4gCiJJbiBvbmUgb2YgdGhlIG1lc3NhZ2VzIGhlIGFza2VkIG1lIGZvciBhIHRocmVlc29tZSwgYnV0IEkgd291bGRuJ3QgZG8gdGhhdCwgc2hlIHNhaWQuIFdhcyBwZXN0ZXJpbmcgbWUgZm9yIGEgbWVldCB1cC4gSGUgc2FpZCBJJ2QgaGF2ZSB0byBjb21lIGFuZCBzZWUgaGltIGluIE1hbmNoZXN0ZXIgc28gbm8gb25lIHdvdWxkIHNlZSB1cy4gClRvdXJuYW1lbnRzIGFsc28gaGF2ZSB3aGF0IGlzIGNhbGxlZCBhbiBlc2NhbGF0aW5nIGJsaW5kIHN0cnVjdHVyZS4gVGhpcyBpcyBiZWNhdXNlIHRoZSBnYW1lcyBhcmUgZXNzZW50aWFsbHkgbmV2ZXIgZW5kaW5nLCB3aXRoIHBsYXllcnMgY29uc2lzdGVudGx5IGNvbWluZyBhbmQgZ29pbmcgYW5kIGFsbG93ZWQgdG8gbGVhdmUgYXQgYW55IHRpbWUuIApQbHVzIGdlbmVyYWxseSBhbnkgbG9jYXRpb24gdGhhdCBzZXJ2ZXMgbGlxdW9yIGFuZCBwcm9zdGl0dXRpb24gd2lsbCBzZWUgaXQgZmFpciBzaGFyZSBvZiBiYWQgYmVoYXZpb3IgbGlrZSB0aGlzLiBJdCB3aHkgV2FuIENoYWkgaXMgem9uZWQgb3V0IGxpa2UgdGhpcy4uIApXZSB3YWxrIGluIGFuZCB0aGUgY2FnZSBjbG9zZXMgYmVoaW5kIG1lLiBJIHdhdGNoIGFzIHRoZXkgYXJlIHRvcm4gZG93biBmcm9tIHRoZSBwZXJzb24gdGhleSBvbmNlIHdlcmUgdG8gbm90aGluZywgYW5kIEkgZmVlbCBldmVyeSBzZWNvbmQgb2YgaXQuICJUaGlzIGNhbiBiZSBteSBsaWZlIG5vdyIgSSB0aG91Z2h0IHRvIG15c2VsZi4gCklmIEkgcmVtZW1iZXIgY29ycmVjdGx5LCBJIHRoaW5rIEkgaGFkIGEgUGF0cmljayBSb3kgcG9zdGVyIGFuZCBhbiBFcmljIERlc2phcmRpbnMgY2FwIGJhY2sgdGhlbi4gCkFtbWEncyBtb3RpdmVzIHdlcmUgb2J2aW91c2x5IG9ubHkgc29tZXdoYXQgY29tcGxpY2F0ZWQgYW5kIG11cmt5LCBidXQgSSB0aG91Z2h0IGl0IHdhcyBpbXBvcnRhbnQgdG8gcGxheSB0aGUgcmFjZSBjYXJkIGluIHRoaXMgaW5zdGFuY2UgYXQgdGhlIHZlcnkgbGVhc3QuIApNb3N0IG9mIHRoZSB0aW1lIGl0IGlzIHRoZSBiZXN0IHN0cmF0ZWd5LiBCdXQgc29tZXRpbWVzLCBsaWtlIG9uIHRoZSBwb2tlciB0YWJsZSwgd2UgbmVlZCB0byBtaXggaXQgdXAuLiAKR2luZ2V2ZXJlICA5IHBvaW50cyAgc3VibWl0dGVkIDIxIGhvdXJzIGFnbwpKZSByZXZpZW5kcmFpIHByb2NoYWluZW1lbnQgc3VyIGRlcyBsbWVudHMgZGVzIGNvbmZyZW5jZXMgcXVpIHBvdXJyYWllbnQgdm91cyBpbnRyZXNzZXIuIExlIGJ1dCwgYyd0YWl0IGF1c3NpIGRlIHByb2xvbmdlciBwYXIgdW4gd2VlayBlbmQgbWFyaXRpbWUgZXQgZ291cm1hbmQgIFN0IE1hbG8gZXQgQ2FuY2FsZSwgbGlldXggcXVlIG5vdXMgYWltb25zIGJlYXVjb3VwIChqJ2FpIGNvbnN0YXQgYXZlYyBhbXVzZW1lbnQgcXUnb24gYXZhaXQgZGogZmFpdCBjZSB2b3lhZ2UgZW4gMjAwOCBldCAyMDEwKS4KUGVyc29uL2VudGl0eS9jb21wYW55IHRoYXQgYXJlIG5vdCBhc3NvY2lhdGVkIHRvIFdlYm5vZGUgQUcuCjMuIFBhaWQgU2VydmljZXMKVGhlIFBhcmsgSHlhdHQgSG90ZWwgaXMgb25lIG9mIHRoZSBiZXN0IGhvdGVscyB3aGVuIGl0IGNvbWVzIHRvIG9mZmVyaW5nIHRoZSBraW5kIG9mIGx1eHVyeSB0aGF0IHlvdSBkZXNlcnZlLiBWaXNpdCBsb2NhbCBvZmZpY2VzIGFuZCB5b3VyIGxvY2FsIGVtYmFzc3kgdG8ga25vdyB0aGUgbmVjZXNzYXJ5IHJlcXVpcmVtZW50cyB0byBzdGFydCBhIGJ1c2luZXNzIGluIHRoaXMgY2l0eS4gCllvdXIgU3RhY2sgc2l6ZSAobnVtYmVyIG9mIGNoaXBzIG9uIHRoZSB0YWJsZSkKWW91IHJhaXNlIHlvdXIgdm9pY2UsIGFuZCB0aGUgbGl0dGxlIHNub3dmbGFrZXMgZ28gaG9tZSBhbmQgd2hpbmUgdG8gdGhlaXIgcGFyZW50cyB3aG8gdGhlbiBjYWxsIHRoZSBzY2hvb2wgYW5kIHRoZSBkcml2ZXIgZ2V0cyBkaXNjaXBsaW5lZCBmb3IgeWVsbGluZyBhdCB0aGVpciBpbm5vY2VudCBsaXR0bGUgYW5nZWwsIHdobyBpbiByZWFsaXR5IHdhcyBhY3Rpbmcgb3V0IGFuZCBjcmVhdGluZyBhIGRhbmdlcm91cyBkaXN0cmFjdGlvbiBmb3IgdGhlIGRyaXZlciBpbiB0aGUgZmlyc3QgcGxhY2UuIEkgbWlzcyB0aGUgZGF5cyB3aGVuIHRoZSBkcml2ZXIgd291bGQgcHVsbCB0aGUgYnVzIG92ZXIsIGFuZCBnbyBiYWNrIGFuZCBwaHlzaWNhbGx5IGRyYWcgdGhlIHRyb3VibGVtYWtlcnMgb3V0IG9mIHRoZWlyIHNlYXRzIGFuZCBtb3ZlIHRoZW0gdG8gdGhlIGZyb250IG9mIHRoZSBidXMuIElmIHlvdSBhcmUgYmVpbmcgYSBsaXR0bGUgYXNzLCB0aGVuIHRoZSBkcml2ZXIgc2hvdWxkIGJlIGFibGUgdG8gc2F5LCBubyBtb3JlLiAKVGhlbiBhbHNvIHRha2UgYXdheSBhIGZ1bGwgZHJpdmluZyBsYW5lIGZvciBhIGJpa2UgbGFuZSB0aGF0IEkgaGF2ZSB5ZXQgdG8gc2VlIGFueW9uZSBvbi4gClRoZU1pZ2h0eUFjZXJpYyB1Ck9uZSBvZiB0aGVzZSAicmVncyIgbWFrZXMgYSBiaWcgcml2ZXIgYmV0PyAiIHlvdSBrbm93IHlvdSBjYW4gY2hlY2ssIHJpZ2h0PyBFdmVyeSB0aW1lLCBhbGwgb2YgdGhlc2Ugc3BvdHMgeW91IGdvdHRhIGhhbW1lciB0aGVzZSBqb2tlcyBpbi4gT3ZlciBhbmQgb3Zlci4gClBlb3BsZSBwaW5pbmcgYW5kIGJpdGNoaW5nIGZvciBsb290Ym94ZXMgYXJlIHdoeSBnYW1lcyBhcmUgZ29pbmcgdG8gc2hpdC4gClRoZSB3b21hbiBjbGltYmVkIGluLCBhbmQgdGhlbiB0aGUgbWFuIGJlc2lkZSBoZXIuIEFmdGVyIGEgZmV3IHNlY29uZHMgdGhlIGVuZ2luZSBzdGFydGVkLCBhbmQgdGhlIHBpY2t1cCBkcm92ZSBvZmYuIEdlbmUgV2hlbGNoZWwgcHVmZmVkIG9uIGhpcyBjaWdhcmV0dGUuIApKdXN0IGZpdmUgeWVhcnMgbGF0ZXIsIHRoZSB0ZWFtIHdlcmUgc3RpbGwgZ29pbmcgYSBnYW1lIHdoaWNoIGlzIGEgbWl4dHVyZSBvZiBydWdieSBhbmQgc29jY2VyLiBXaGVuIHRoZSBiYWxsIGlzIGtpY2tlZCBvdmVyIHRoZSBjcm9zc2JhciBhbmQgdGhyb3VnaCB0aGUgYW5kIHRob3VnaHQgaXQgd291bGQgYmUgYSBnb29kIGlkZWEgdG8gcGljayB1cCB0aGUgYmFsbCBpbiBoaXMgaGFuZHMgYW5kIHJ1biB1bmNoYWxsZW5nZWQgaW5zdGVhZC4gCk5laXRoZXIgdGhlIGRlZ3JlZSBvciBsZWV0Y29kZSB3aWxsIGh1cnQgeW91ciBjaGFuY2VzIG9mIGEgam9iIGJ1dCBteSBwb2ludCB3YXMgdGhhdCBib3RoIGFjY29tcGxpc2ggZGlmZmVyZW50IHRoaW5ncy4gClRoZSBtYWluIGlkZWEgb2YgdGhpcyB0aGVyYXB5IHdvdWxkIGJlIHRvIGhhdmUgbWFuYWdlIHRoZSBtdXNjdWxhciB0aXNzdWVzIGFsc28gcmVnYXJkaW5nIHNvZnRlbiB0aGUgYm9keSB0aXNzdWVzLiAKU2VlLCB3aXRob3V0IGtlZXBpbmcgcmVhbGlzdGljIGV4cGVjdGF0aW9ucyBvZiB0aGUgd2F5IG9ubGluZSBjYXNpbm9zIG9wZXJhdGUsIHlvdSBjYW4gZW5kIHVwIGNoYXNpbmcgc29tZSBwcmV0dHkgY3JhenkgZHJlYW1zIHRoYXQgY2FuIGxhbmQgeW91IGluIHRoZSBwb29yaG91c2Ugd2l0aGluIG1pbnV0ZXMuIE5ldmVyIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzIHJpc2sgZXZlcnl0aGluZyBvbiBvbmUgZGVzcGVyYXRlIGJldC4gCkl0IGZ1bm55IHdoZW4gcGVvcGxlIHRha2UgdGhlIGZhY3Qgc29tZW9uZSBkb2VzbiBsaWtlIG9yIGV2ZW4gaGF0ZXMgd2hhdCB0aGV5IHNheWluZyBhcyBwcm9vZiB0aGF0IHRoZXkgcmlnaHQuIEl0IGRvZXNuIG1lYW4gdGhleSB3cm9uZywgYnV0IGl0IHByb3ZlcyBub3RoaW5nLiBTb21ldGltZXMgcGVvcGxlIGhhdGUgd2hhdCB5b3Ugc2F5IGJlY2F1c2UgdGhleSB0aGluayBpdCBzdHVwaWQgYW5kL29yIGhhcm1mdWwsIG5vdCBiZWNhdXNlIGl0IHNvIHJhZGlhbnRseSB0cnVlIHRoYXQgaXQgZnJlYWtzIHRoZW0gb3V0IG9yIGJlY2F1c2UgdGhleSBzdWNoIGEgc25vd2ZsYWtlIHRoYXQgaXQgYnJlYWtzIHRoZW0uCk5vdCBhcyBtdWNoIGFzIENpdHkgYnV0IHN0aWxsIGxvdHMuIFdlIGp1c3QgZG9udCBzcGVuZCB3aXNlbHkgYW5kIHRoYXQgY2F1c2UgYSBiYW5rZXIgaW4gY2hhcmdlLi4gClRoZXJlZm9yZSwgR2FldHogZGVsZXRpb24gb2YgaGlzIHR3ZWV0IGFuZCByZWNlbnQgc3RhdGVtZW50cyB0aGF0IGhlIGRpZCBub3QgaW50ZW5kIHRvIHN0b3AgQ29oZW4gZnJvbSB0ZXN0aWZ5aW5nIGFyZSBpcnJlbGV2YW50LiAKSW4gdGhpcyBjb250ZXh0IG1lYW5zIG5vdCBkeWluZyBob3JyaWJsZSBkZWF0aHMgZnJvbSB0cmVhdGFibGUsIHByZXZlbnRhYmxlIGlsbG5lc3MuCkFuZCBDbG9taWQgaGFzIGJlZW4gZ2VuZXJpYyBmb3IgYSBsb25nIHRpbWUsIGFuZCBpc24gYSBjb250cm9sbGVkIHN1YnN0YW5jZSwgYW5kIG1vc3QgaW1wb3J0YW50bHkgaXMgY2hlYXAgYXMgZnVjayBjb21wYXJlZCB0byBnZW5lcmljIHZpYWdyYS9sZXZpdHJhL3N0YXh5biBvciB0ZXN0b3N0ZXJvbmUgYW5hbG9ncy4gCkFuZCB0d28gbW9tcyBjYW5ub3QgdW5kZXJzdGFuZCB0aGUgc3RydWdnbGUgdGhhdCBib3lzIGdvIHRocm91Z2ggb3IgaG93IHRvIHRlYWNoIHRoZW0gdG8gbmF2aWdhdGUgbGlmZSBhbmQgYmVjb21lIGdvb2QgbWVuLiBIZSBzYWlkIHNvbWV0aW1lcyBjaGlsZHJlbiBvZiBzYW1lIHNleCBjb3VwbGVzIGFyZSAnbWFsbm91cmlzaGVkJyBpbiB0aGUgZW1vdGlvbmFsIHNlbnNlIGJlY2F1c2UgdGhleSBkb24ndCBoYXZlIGFuIGF1bnQvdW5jbGUvZmFtaWx5IGZyaWVuZCBvZiB0aGVpciBvd24gc2V4IHRvIGhlbHAgdGhlbSB1bmRlcnN0YW5kIGlzc3VlcyB3ZSBmYWNlLi4gCkkgZ290IHN0b3BwZWQgZm9yIGEgY3JhY2tlZCB3aW5kc2NyZWVuIHRoYXQgaGFwcGVuZWQgYW4gaG91ciBiZWZvcmUgYW5kIHdoZW4gaSB0cmllZCB0byBsZWF2ZSB0aGUgb2ZmaWNlciBnb3QgbWUgb3V0IG9mIG15IGNhciwgbWFkZSBtZSBvcGVuIHRoZSB0cnVuaywgYW5kIGFycmVzdGVkIG1lIGZvciB3ZWVkLgpRdWFsaXR5IGFzc2Vzc21lbnQgd2FzIGNhcnJpZWQgb3V0IGJ5IG1vcmUgdGhhbiBvbmUgcmV2aWV3ZXIuIER1cGxpY2F0ZSBzZWxlY3Rpb24gYW5kIGRhdGEgZXh0cmFjdGlvbiB3b3VsZCBoYXZlIGJlZW4gYWR2aXNhYmxlIHRvIHJlZHVjZSB0aGUgY2hhbmNlcyBvZiByZXZpZXdlciBlcnJvciBhbmQvb3IgYmlhcy4gClRoZXJlIGhhdmUgYmVlbiBwZW9wbGUgd2hvIHZpc2l0ZWQgdGhlIGJhciB0aGF0IGhhdmUgYWxzbyBtYWRlIGEgdHJlayB0byB0aGUgc2l0ZSBvZiB0aGF0IGhvcnJpZmljIHBsYW5lIGNyYXNoLiAKSW4gMjAwOSBoZSB3YXMgY2VydGlmaWVkIGJ5IHRoZSBUaGFpIE1hc3NhZ2UgU2Nob29sIG9mIENoaWFuZyBNYWkuIFZhbCB3YXMgYSBwYXNzaW9uYXRlIHRlYWNoZXIsIGEgbGlmZSBsb25nIGxlYXJuZXIgYW5kIGxvdmVkIGJ5IGFsbCB3aG8ga25ldyBoaW0uIApTbyBwcm91ZCBvZiB5b3UgYW5kIGhhcHB5IGZvciB5b3UuIFlvdSBhdCB0aGUgdmVyeSBiZWdpbm5pbmcgb2YgYSBmYWJ1bG91cyBhbmQgZnJlZSBsaWZlIHdoZXJlIHlvdSB3b24gYmUgc2hhbWVkIG9yIGd1aWx0ZWQgZm9yIGJlaGF2aW5nIGxpa2UgYSBub3JtYWwgMTggeWVhciBvbGQgaHVtYW4gYmVpbmcuIFN0YXkgc3Ryb25nIGFuZCBzdGF5IGZyZWUuIApJZiBwb3NzaWJsZSwgdHJ5IHRvIHBsYWNlIGFuIG9yZGVyIG9ubGluZSBhbmQgdGhlbiBjb2xsZWN0IHRoZSBwcm9kdWN0IHJpZ2h0IGZyb20gdGhlIHN0b3JlLiAKVHdvIGRldmFzdGF0aW5nIHJlcG9ydHMgaW4gdGhlIFdhc2hpbmd0b24gUG9zdCBvdmVyIHRoZSB3ZWVrZW5kIGRldGFpbCB0aGUgaG9ycmlmeWluZyBzY29wZSBvZiB0aGVpciBpZ25vcmFuY2UuIApTcGFjZVggdGhlbiBzYWlkIGl0IHdvdWxkIHJlIGVuZ2luZWVyIHRoZSB0dXJibyBwdW1wcy4gClR3byB0cmlhbHMgc2NvcmVkIDEgcG9pbnQgb24gdGhlIEphZGFkIHNjYWxlLCBvbmUgc2NvcmVkIDIgYW5kIG9uZSBzY29yZWQgMy4gQWxsb2NhdGlvbiBjb25jZWFsbWVudCwgaW50ZW50aW9uIHRvIHRyZWF0IGFuYWx5c2lzIGFuZCBwb3dlciBjYWxjdWxhdGlvbnMgd2VyZSBlaXRoZXIgbm90IGNsZWFyIG9yIG5vdCB1c2VkIGZvciBhbGwgdHJpYWxzLiBUaHJlZSBzdHVkaWVzIHVzZWQgZ3JvdXBzIHRoYXQgd2VyZSBzaW1pbGFyIGF0IGJhc2VsaW5lIG9uIHByb2dub3N0aWMgaW5kaWNhdG9ycy4KT2ZmaWNlJ3MgZGVjaXNpb25zIHdlcmUgYXBwcm92ZWQgYnkgZGVwYXJ0bWVudGFsIGxlYWRlcnNoaXAgYW5kIGZvbGxvd2VkIGRlcGFydG1lbnRhbCBwcm9jZWR1cmVzLiAKQSBsb3Qgb2YgcGVvcGxlIHNheSBub3QgdG8gbWVzcyB3LyBtb3ZpbmcgYSBtb2JpbGUgb24geW91ciBmaXJzdCBvbmUuIApPbiB0aGUgcGx1cyBzaWRlLCB0aGV5IHdlcmUgcm91dGluZWx5IHNuYXBwaW5nIHRoZSBiYWxsIGluc2lkZSBvZiA1IHNlY29uZHMgc28gdGhlcmUgYXBwZWFyZWQgdG8gYmUgYSBjb25zY2lvdXMgZWZmb3J0IHRvIGtpbGwgY2xvY2suClRoZSB0d28gd2VyZSB1cCBhZ2FpbnN0IGVhY2ggb3RoZXIgaW4gdGhlIGxhc3Qgb3ZlciB3aXRoIENTSyBuZWVkaW5nIGZpdmUgb2ZmIHRocmVlIGJhbGxzLiAKSSBqdXN0IGhhdmUgdG8gdXNlIHZlcnkgbG93IGRvc2VzIG9mIFRIQyBhbmQgaGlnaCBkb3NlcyBvZiBDQkQsIHVzdWFsbHkgYXQgYSA1MDoxIHJhdGlvIG9mIENCRDpUSEMuLiAKUmFpc2luZyBhbmltYWxzIHN0aWxsIHJlcXVpcmVzIG1vcmUgaGFiaXRhdCBsb3NzIGFuZCBkaXZlcnRpbmcgbW9yZSB3YXRlciB0aHJvdWdoIGdyb3dpbmcgY3JvcHMgZm9yIHRoZW0uIApNb3Jlb3ZlciwgTVJJIHN0dWRpZXMgc2hvd2VkIHRoYXQgcHJlZnJvbnRhbCBhbmQgdGVtcG9yYWwgZ3JheSBtYXR0ZXIgdm9sdW1lIHdhcyBpbmNyZWFzZWQgaW4gYWN0aXZlIGVsZGVybHkgc3ViamVjdHMgYXMgY29tcGFyZWQgd2l0aCBzZWRlbnRhcnkgY29udHJvbHMgWzI0XS4uIApBd2Vzb21lLCB0aGFua3MhIEkgZG9uIG1pbmQgZ2V0dGluZyBhcm91bmQgYnkgc2Nvb3RlciwgaW4gZmFjdCBJIHByb2JhYmx5IHByZWZlciB0byBiZSBhIGJpdCBvdXQgb2YgdGhlIGFjdGlvbiB3aGVuIGl0IGNvbWVzIHRvIG15IGFjY29tIGFuZCByaWRlIGluIGR1cmluZyB0aGUgZGF5LiBJIGRvbiBtaW5kIGhvc3RlbHM7IEkgbGlrZSB0aGUgc29jaWFsIGFzcGVjdCwganVzdCBhcyBsb25nIGFzIEkgZ290IGEgcHJpdmF0ZSByb29tIChhIGJpdCBvdmVyIGRvcm1zKS4uIApIZSBtZXNzZXMgdXAgYSBwdWxsIHdoaWxlIGxldmVsaW5nLCBuZWFybHkgZGllcywgc3VkZGVubHkgZ2V0cyBhIG1lc3NhZ2UgInlvdXIgbW90aGVyIG11c3QgYmUgZGlzYXBwb2ludGVkIGZvciBnaXZpbmcgYmlydGggdG8gc3VjaCBhIGZhaWx1cmUiLiAKVGhhdCBpcyBzdGF5aW5nIGluIGEgZGFuZ2Vyb3VzLCB2aW9sZW50LCBkcnVnIHJpZGRlbiBhcmVhLiAKSWYgeW91IGFyZSBwbGFjZWQgaW4gYSAiTGF0ZSBQb3NpdGlvbiIgeW91IGhhdmUgYSByZWFsIGdvb2QgY2hhbmNlIG9mIHdpbm5pbmcuIEEgQ2FyZCBQbGF5ZXJzIFBsYWNlIGFuZCBQb3NpdGlvbiBpcyBhIGZvcm1pZGFibGUgYWR2YW50YWdlIGluIHRoaXMgZ2FtZSwgYmVjYXVzZSBpZiB5b3UgaGF2ZSBvbmUgeW91J2xsIGJlIGFibGUgdG8gYW50aWNpcGF0ZSB0aGllciBmdXR1cmUgbW92ZXMuIE1ha2Ugc3VyZSB5b3UgdGFrZSBhZHZhbnRhZ2Ugb2YgYSAiTGF0ZSBQb3NpdGlvbiIgaWYgeW91IGFyZSBwcmVzZW50ZWQgd2l0aCB0aGUgb3Bwb3J0dW5pdHkuLiAKV2l0aCBteSBhZG1pdHRlZGx5IGxpbWl0ZWQga25vd2xlZGdlIG9mIEdQIHJpZ2h0cyAgIHNoZSBoYXMgbm8gbGVnIHRvIHN0YW5kIG9uLiAKRW1icmFjaW5nIHRoZSBMR0JUIGNvbW11bml0eSBjb3VsZCBhbHNvIGhhdmUgYSBwb3NpdGl2ZSBpbXBhY3Qgb24gcHVibGljIGhlYWx0aCwgcmVkdWNpbmcgSElWIGFuZCBvdGhlciBTVEkgcmF0ZXMuIE1ha2luZyBwcmV2ZW50YXRpdmUgbWVhc3VyZXMgYXZhaWxhYmxlIHZpYSBub24ganVkZ21lbnRhbCBjYXJlIHByb3ZpZGVycy4gU3Vic2lkaXppbmcgdHJlYXRtZW50cyBhbmQgZWR1Y2F0aW9uLgpNYXliZSwgYXMgVGhhaXMgbGlrZSB0byBzYXksIEkgdGhpbmsgdG9vIG11Y2g/LiAKVGhhdCdzIHF1aXRlIGEgc2hvY2sgZXZlbiBmb3IgaGVhbHRoeSBmZWV0LiBGb3IgcGVvcGxlIHdobyBhbHJlYWR5IGhhdmUgYm9uZSBvciBqb2ludCBwcm9ibGVtcywgcnVubmluZyBpcyBldmVuIG1vcmUgaGFybWZ1bC4gClNoZSBlbmRzIHVwIHdpdGggb25lIHJpZ2h0IGluIGhlciBleWUgYXMgc2hlIHRyaWVzIHRvIGRlZmVuZCBoZXJzZWxmIGFnYWluc3QgdGhlIGFzc2F1bHQuIEhlciBjbGFzc21hdGVzIGp1c3QgZG9uIHNlZSBoZXIgYXMgYSBodW1hbi4gCldoeSBNZW5vcG9kIGxlZnQgQXJsZW5lIERpY2tpbnNvbiBvdXQgaW4gdGhlIGNvbGQgZm9sbG93aW5nIG9uIGFpciBEcmFnb25zJyBEZW4gZGVhbFdoeSBTYWdlIE1peG9sb2d5IHdhc24ndCByZWFkeSBmb3IgZHVlIGRpbGlnZW5jZSB3aXRoIEFybGVuZSBEaWNraW5zb25UaGUgZGVhbCBUaGUgYnVzaW5lc3MgcGFydG5lcnMgYXNrZWQgZm9yICQ1MDAsMDAwIGluIGV4Y2hhbmdlIGZvciBhIDIwJSBlcXVpdHkgc3Rha2UsIGEgJDIuNSBtaWxsaW9uIHZhbHVhdGlvbi4gCkkgbm90IGFzc2lnbmVkIHRvIGEgcGVyc29uLCBhIHBhcnR5LCBvciBhbnl0aGluZyBiZXlvbmQgd2hhdCBJIHRoaW5rIGlzIGJlc3QgZm9yIEFtZXJpY2EuIApQYXVsIG1ldHJvIGluIFJlZCBXaW5nLCBNTiwgb3VyIDE1MCwwMDAgc3F1YXJlIGZvb3QgY2FzaW5vIGZsb29yIGlzIGJ1cnN0aW5nIHdpdGggZXhjaXRlbWVudC4gV2Ugb2ZmZXIgb3ZlciAyLDIwMCBzdGF0ZSBvZiB0aGUgYXJ0IHNsb3QgbWFjaGluZXMsIG92ZXIgNTAgdGFibGUgZ2FtZXMgaW5jbHVkaW5nIGJsYWNramFjaywgcG9rZXIsIHZpZGVvIGtlbm8sIHZpZGVvIHBva2VyIGFuZCBiaW5nby4gCkVkaXQ6IEhlcmUgaXMgc29tZSBmdXJ0aGVyIGluc2lnaHQgYXMgdG8gd2h5LiBMZXRzIHNheSB5b3VyZSBhIGRvY3RvciBhbmQgYSBwYXRpZW50IGNvbWVzIGludG8geW91ciBvZmZpY2UgImRyIEkgaGF2ZSBoYWQgdGhpcyBkcnkgY291Z2ggZm9yIGRheXMuIApJJ20gYWxzbyBjdXJpb3VzIHRvIHNlZSBob3cgaXQncyB0cmFja2VkIGFuZCBpZiB0aGUgdHJlbmQgaXMgY29udGludW91cyBvdmVyIHRpbWUgb3IgZXZvbHZlZC4gV2FzIGljaW5nIGVmZmVjdGl2ZSB3aGVuIGl0IGZpcnN0IHN0YXJ0ZWQ/CkluIGFkZGl0aW9uIHRvIHNlZWtpbmcgcmVjb3JkcyBmcm9tIERvdWdoZXJ0eSwgZmVkZXJhbCBpbnZlc3RpZ2F0b3JzIHNvdWdodCBkb2N1bWVudHMgcmVsYXRlZCB0byB0aGUgdW5pb24ncyBwcmVzaWRlbnQsIHR3byBleGVjdXRpdmUgYm9hcmQgbWVtYmVycywgYW5kIHRocmVlIGJ1c2luZXNzIGFnZW50cy4KTG9jYXRlZCBiZXR3ZWVuIFRlcm1pbmFsIDEgYW5kIDIgb2YgTXVuaWNoIEFpcnBvcnQsIGluIEdlcm1hbnksIHRoZSBLZW1waW5za2kgb2ZmZXJzIGEgZGF5IHBhc3MgdG8gdGhlIEZpdCBGbHkgU3BhLCBpbmNsdWRpbmcgYSBwb29sLCB3aGlybHBvb2wgYW5kIHNleCBzZWdyZWdhdGVkIHN0ZWFtIGFuZCBzYXVuYSAoJDM4LCB1c2Ugb2Ygcm9iZSBhbmQgdG93ZWwgaW5jbHVkZWQpLiBNYXNzYWdlIGFuZCBiZWF1dHkgdHJlYXRtZW50cyBhcmUgYWxzbyBhdmFpbGFibGUgZm9yIGEgZmVlLiBEZXNpZ25lZCBieSBIZWxtdXQgSmFobiwgdGhlIDE4IHllYXIgb2xkIGhvdGVsIGlzIHRoZSBLZW1waW5za2kgY2hhaW4gb25seSB0ZXJtaW5hbCBjb25uZWN0ZWQgYWlycG9ydCBob3RlbC4KTmF0aW9uYWxlIEZhaHJyYWQgT3JnYW5pc2F0aW9uCjUgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpXb21lbiB0ZW5kIHRvIGhhdmUgZ29vZCBkYXlzIGFuZCBiYWQgZGF5cyB3aXRoIHJlZ2FyZCB0byB0aGVpciBzZWxmIGVzdGVlbSBidXQgaWYgeW91IGFyZSBoYXZpbmcgYmFkIGRheXMgYWxsIHRoZSB0aW1lLCB0aGF0IG5vdCBnb29kLiAKRmlyc3Qgb2YgYWxsLCBiZWluZyBncmVhdCBpbiBhY3R1YWwgd3Jlc3RsaW5nIGlzIG9ubHkgcGFydCBvZiB3aGF0IG1ha2VzIGEgd3Jlc3RsZXIgY29tcGxldGUuIApUaGVuIHN0YXJ0ZWQgdHJlYXRtZW50IHdpdGggbWV0aG90cmV4YXRlIChhIGNoZW1vIG1lZCkgdG8gc3RvcCB0aGUgY2VsbHMgZnJvbSBncm93aW5nLiAKTGFzdGx5LCB0aGVyZSdzIG5vIGxhY2sgb2YgdGhpZXZlcyBhdCB0aGUgV2FsbC4gU29tZSBvZiB0aGVtIHByb2JhYmx5IGdldCBtb25leSBieSBzdGVhbGluZyBpdCBmcm9tIHRob3NlIHRoYXQgaGF2ZSBhbnkgdG8gc3RlYWwuIFdpdGggbm90IG11Y2ggdG8gc3BlbmQgaXQgb24sIHNtYWxsIGFtb3VudHMgcHJvYmFibHkgYXJlbid0IGV2ZW4gbWlzc2VkIG1vc3Qgb2YgdGhlIHRpbWUuCkkgZ290IG5hdXNlb3VzIGFuZCB3ZWFrIGtuZWVkIGFuZCBoYWQgdG8gc2l0IGRvd24gdG8gY29tcG9zZSBteXNlbGYuIApRdWFudCAgY2UgZGVybmllciwgaWwgZXN0IHVuZSByaWNoZXNzZSBwb3VyIGxlIHBldXBsZSwgZXhwbGlxdWUgbGUgUm9tYWluIFBsaW5lLiBMZXMgY3JhbGVzIG1hbnF1ZW50IGVsbGVzLCBsYSBmYXJpbmUgcXVlIGZvdXJuaXQgbGUgZ2xhbmQsIHNjaCBldCBtb3VsdSwgc2UgcHRyaXQgcG91ciBkb25uZXIgZHUgcGFpbi4gTWFpcyBpbCBuIHBhcyBxdSBpbCBlc3QgYXVzc2kgbWRpY2FtZW50IGNvbW1lIGwgRGlvc2NvcmlkZSBkYW5zIGNlIG5vdXZlbCBleHRyYWl0IGRlIGxhIE1hdGVyaWEgbWVkaWNhOiBMZXMgZ2xhbmRzIFtdIHByb3ZvcXVlbnQgbCBldCBtYW5ncyBlbiB2aWFuZGUgY2F1c2VudCBkZXMgZG91bGV1cnMgZGUgdHRlIFttaWdyYWluZXMgZCBuZXJ2ZXVzZSA/XSBldCBlbmdlbmRyZW50IGRlcyB2ZW50b3NpdHMuIApJdCBldmVuIG1ha2VzIG15IG9ibGl2aW91cyBicm90aGVyIHVuY29tZm9ydGFibGUgKGhlJ3MgZGVmaW5pdGVseSBub3QganVzdCBuby4gT2JsaXZpb3VzIG9yIGF2b2lkYW50IGlzIG1vcmUgYWNjdXJhdGUsIGhlIGtub3dzIHNoZSBmYXZvcnMgaGltIGFuZCBoZSBkb2Vzbid0IGxpa2UgaXQpLiAKVGhlcmUgYXJlIGp1c3Qgc28gbWFueSB0YWN0aWNhbCBpbiBnYW1lIGRlY2lzaW9ucyB0byBtYWtlIGVhY2ggdHVybiByZWxhdGl2ZSB0byB5b3VyIGRlY2sgYnVpbGQgYW5kIHlvdXIgb3Bwb25lbnQgYW5kIGFsbCB0aGUgc2hpZnRpbmcgY29uZGl0aW9ucyB3aGljaCBlZmZlY3QgZXZlcnl0aGluZyBldmVyeSB0dXJuLiAKSGF2aW5nIHdvcmtlZCBpbiBib3RoIGhlYWx0aGNhcmUgYW5kIGluc3VyYW5jZSwgSSBjYW4gdGVsbCB5b3UgZm9yIGNlcnRhaW4gdGhhdCBkb2N0b3JzIGFyZW4gcmVmZXJyaW5nIHlvdSB0byBvdXQgb2YgbmV0d29yayBzcGVjaWFsaXN0cyBvbiBhIHdoaW0gdG8gZnVjayB5b3Ugb3Zlci4gVGhleSByZWZlcnJpbmcgeW91IHRvIGEgc3BlY2lhbGlzdCB0byBjb3ZlciB0aGVpciBhc3MuIElmIHlvdSBoYXZlIHNvbWUgd2VpcmQgZmxlc2ggZWF0aW5nIGJhY3RlcmlhIGFuZCB0aGV5IHRvbGQgeW91IGl0IHdhcyBhIHNraW4gcmFzaCBhbmQgc2VudCB5b3UgaG9tZSB3aXRoIGEgY3JlYW0gYW5kIHRoZW4geW91IGRpZWQgYmVjYXVzZSB0aGV5IG5ldmVyIGJvdGhlcmVkIHRvIHJlZmVyIHRvIGRlcm1hdG9sb2d5IHRoZW4gdGhhdCB0aGVpciBhc3MuIApZb3UgYXJlIHByb2plY3RpbmcuIAoiSSdtIGFsd2F5cyBraW5kIG9mIGFwcGFsbGVkIGF0IGhvdyBvYmxpdmlvdXMgc29tZSBvZiB0aGUgZG9nIG93bmVycyBhcmUgd2hlbiB0aGVpciBkb2cgaXMgb3V0IG9mIGNvbnRyb2wgKG9uZSBjb3VwbGUncyBkb2cgaXMgYSBzZXJpYWwgaHVtcGVyLCBhbmQgb25lIGRvZyB3YXMgb25jZSBzaWNrIGFuZCBsZWF2aW5nIGEgdHJhaWwgb2YgZXhjcmVtZW50IGFsbCBvdmVyIHRoZSBiYWNrIHBhdGlvIHdoZXJlIHRoZSBwYXJ0eSB3YXMpLCIgc2hlIHNheXMgdmlhIGVtYWlsLiAiWWV0IHRoZXkgY29udGludWUgdG8gYnJpbmcgdGhlaXIgZG9ncyB0byBhbGwgdGhlIHNvY2lhbCBnYXRoZXJpbmdzIC4gVG8gbWUsIGl0J3MgYSBsb3QgbGlrZSBicmluZ2luZyBjaGlsZHJlbi4gU29tZSBvZiB0aGVtIGFyZSB2ZXJ5IHdlbGwgYmVoYXZlZCBhbmQgYSBqb3kgdG8gYmUgYXJvdW5kOyBvdGhlcnMgdGVuZCB0byB0YWtlIGF3YXkgZnJvbSB0aGUgcGFydHkgZXhwZXJpZW5jZS4gQW5kIG1hbnkgdGltZXMsIHRoZXJlJ3Mgbm90IGV2ZW4gYW4gaW52aXRhdGlvbiB0byBicmluZyB0aGUgZG9nczsgcGVvcGxlIGp1c3QgZG8gaXQuIgpVbHRpbWF0ZWx5LCB0aGUgdHJ1ZSBjcmVkaXQgZm9yIGhpcyBhY2hpZXZlbWVudHMgd2VudCB0byBoaXMgc29sZGllcnMsIGEgdHJ1bHkgbXVsdGkgZXRobmljLCBtdWx0aSBjdWx0dXJhbCBhcm15Li4gCk15IG1vbSBpcyBhbiBhc3Nob2xlIGFuZCBkZWNpZGVkIHNoZSBuZWVkZWQgdG8gZ28gdG8gSG9tZSBEZXBvdCBpbW1lZGlhdGVseSBhZnRlciBJIGdvdCB0aGUgd2lyZXMgcmVtb3ZlZCBzbyBJIGJyb3VnaHQgYSB0b290aCBicnVzaCBhbmQgd2VudCBpbnRvIHRoZSBIRCBiYXRocm9vbSB0byB0cnkgdG8gYnJ1c2ggdGhlIHNjdW0gb2ZmLiBNeSBzaGl0IHdhcyBzbyByYXcgdGhlIHNpbmsgZmlsbGVkIHVwIHdpdGggYmxvb2QgYW5kIHRoZXkgY2FsbGVkIGEgc2VjdXJpdHkgZ3VhcmQgdG8gY29tZSBzZWUgd2h5IHRoZSBmdWNrIHRoZXJlIHdhcyBhIHNldmVudGVlbiB5ZWFyIG9sZCBpbiB0aGUgYmF0aHJvb20gc3BpdHRpbmcgbW91dGhmdWxzIG9mIGJsb29kIGludG8gdGhlIHNpbmsgYW5kIHNwbGFzaGluZyBpdCBvbiB0aGUgbWlycm9yIGFuZCBzaGl0Li4gCk5hdHVyYWwgZ2FzIHdvdWxkIGJlIG11Y2ggd2VsY29tZSBpbiBjZW50cmFsIGFuZCBlYXN0ZXJuIEV1cm9wZSwgYW5kIGNvbmdyZXNzaW9uYWwgYWN0aW9uIHRvIGV4cGVkaXRlIExORyBleHBvcnRzIHRvIEFtZXJpY2EgYWxsaWVzIHdvdWxkIGNvbWUgYXQgYSBjcml0aWNhbGx5IGltcG9ydGFudCB0aW1lIGZvciB0aGUgcmVnaW9uLCB0aGV5IHdyb3RlIGluIGxldHRlcnMgdG8gSGFycnkgUmVpZCwgU2VuYXRlIG1ham9yaXR5IGxlYWRlciwgYW5kIEpvaG4gQm9laG5lciwgc3BlYWtlciBvZiB0aGUgSG91c2UuIApBZGFwdGluZyBpbnRlcm5hdGlvbmFsIGd1aWRlbGluZXMgdG8gc3VpdCBsb2NhbCBjb250ZXh0IGNhbiBkcml2ZSBldmlkZW5jZSBiYXNlZCBwcmFjdGljZSBpbiBsb3cgYW5kIG1pZGRsZSBpbmNvbWUgY291bnRyaWVzLCBzYXkgQWJoYSBNZWhuZGlyYXR0YSBhbmQgY29sbGVhZ3VlcywgYXMgdGhleSBkZXNjcmliZSBhIHByYWdtYXRpYyBhcHByb2FjaCB0byBkZXZlbG9wIHN0YW5kYXJkIHRyZWF0bWVudCBndWlkZWxpbmVzIGZvciBJbmRpYS4KRm9yIGV4YW1wbGUsIHRoZSBOWFQgZ3V5cy4gV2h5IG5vdCBydW4gdmlkZW8gdmlnbmV0dGVzIG9mIHRoZSBndXlzIHlvdSBicmluZ2luZyB1cCwgc28gdGhlIFJhdyB3YXRjaGluZyBjcm93ZCBtaWdodCBrbm93IHdobyB0aGV5IGFyZT8gTm9wZS4gTW9yZSBXV0UgZm9yY2UgZmVlZGluZy4KWW91IGNhbiByZWFsbHkgY29tZSB0byBTaWVtIFJlYXAgYW5kIG5vdCBiZSBwYXJ0IG9mIHRoZSBjYXJuaXZhbCBhdG1vc3BoZXJlIGF0IFB1YiBTdHJlZXQgc2NhbXMgYW5kIGFsbCEgVGhlcmUgaXMgc29tZSBmYW50YXN0aWMgc3RyZWV0IGZvb2QgYXZhaWxhYmxlIGhlcmUsIGFzIHdlbGwgYXMgZ29vZCBiYXJzIGFuZCByZXN0YXVyYW50cyBzZXJ2aW5nIEtobWVyIEJCUSwgd2hpY2ggaXMgYSBtdXN0IHRyeSB3aGVuIGluIENhbWJvZGlhISBBbHRob3VnaCB5b3UgbWF5IHNlZSBhIGZldyBzY2FtcyBhbG9uZyB0aGUgd2F5LCBldmVyeWJvZHkgc2VlbXMgdG8gZW5qb3kgdGhlaXIgZGF5cyAoYW5kIG5pZ2h0cykgc3BlbnQgcmVsYXhpbmcgaW4gdGhlIHN0ZWFteSB3ZWF0aGVyIS4gCjFzdCBncmFkZSBoZWFsdGggY2xhc3MuIFRoZSBzcGVjaWFscyB0ZWFjaGVyIGNvbWVzIGludG8gdGhlIGNsYXNzcm9vbSBmb3IgaXQgc28gSSdtIHNpdHRpbmcgYXJvdW5kIGp1c3QgbGlzdGVuaW5nLiBUaGV5J3JlIGNvdmVyaW5nIGVtb3Rpb25zIHRvZGF5IGFuZCB0aGUgaGVhbHRoIHRlYWNoZXIgaXMgZ29pbmcgYXJvdW5kIHRoZSByb29tIGp1c3QgYXNraW5nIGZvciBleGFtcGxlcyBvZiBlbW90aW9ucywgImhhcHB5LCBzYWQsIG1hZCwgYW5ncnksIGZydXN0cmF0ZWQsIGV4Y2l0ZWQsIHRpcmVkLCBodW5ncnkiIG5vdCBhbGwgZW1vdGlvbnMgYnV0IHRvdGFsbHkgYWxsIGNsb3NlIGVub3VnaC4gV2VsbCB3ZSBnZXQgdG8gdGhpcyBvbmUga2lkICAgdGhpcyBvbmUga2lkIHdobyB0b3RhbGx5IG1lYW50IHdlbGwgYnV0IGhlIHdhcyBhIGxpdHRsZSBvZmYuIEhlIG5ldmVyIHRyaWVkIHRvIGJlIHRoZSBmdW5ueSBraWQsIGhlIGp1c3Qgd2FzLiBJbiB0aGF0IGhpcyBhbnN3ZXJzIHdlcmUgdXN1YWxseSBwcmV0dHkgc2VyaW91cy4gU28gd2UgZ2V0IHRvIHRoaXMgb25lIGtpZCBhbmQgaGUncyBhc2tlZCBmb3IgYW4gZXhhbXBsZSBvZiBhbiBlbW90aW9uLiBIZSdzIHNvIGZ1Y2tpbmcgZXhjaXRlZCB0byBzdGFuZCB1cCBhbmQgeWVsbCBESU5PU0FVUiEKRXZlcnlvbmUgaXMgaGFwcHksIGhhdmluZyBmdW4gYW5kIG1vc3QgaW1wb3J0YW50bHkgZnVuIHBsYXllciBoYXMgYSBiaWcgc3RhY2suIE5vdCB0byBtZW50aW9uIGhlIGhhcyBiZWVuIHRpcHBpbmcgdmVyeSBnZW5lcm91c2x5IHNvIHRoZSBkZWFsZXJzLCBiYXIgc2VydmVycywgZXRjIGFyZSBhbGwgaGFwcHkuLiAK|<---