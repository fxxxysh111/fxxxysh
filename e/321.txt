<!DOCTYPE html>
<html lang="en" xmlns:fb="http://www.facebook.com/2008/fbml" xmlns:og="http://opengraphprotocol.org/schema/">
 <head prefix="og: http://ogp.me/ns# flixstertomatoes: http://ogp.me/ns/apps/flixstertomatoes#">
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width,initial-scale=1" name="viewport"/>
  <meta content="VPPXtECgUUeuATBacnqnCm4ydGO99reF-xgNklSbNbc" name="google-site-verification">
   <meta content="034F16304017CA7DCF45D43850915323" name="msvalidate.01"/>
   <noscript>
   </noscript>
   <title>
    [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
   </title>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
   <meta content="The Boss" name="movieTitle"/>
   <meta content="326803741017" property="fb:app_id"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
   <meta content="video.movie" property="og:type"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
   <meta content="https://resizing.flixster.com/gg47LDBNV0lntl4thI3C7UzakVQ=/300x300/v1.bTsxMTIzNjc4MjtqOzE3OTk1OzEyMDA7Mjg0OzQwNQ" property="og:image"/>
   <meta content="summary" name="twitter:card"/>
   <meta content="@rottentomatoes" name="twitter:site"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
   <meta content="https://resizing.flixster.com/gg47LDBNV0lntl4thI3C7UzakVQ=/300x300/v1.bTsxMTIzNjc4MjtqOzE3OTk1OzEyMDA7Mjg0OzQwNQ" name="twitter:image"/>
   <meta content="771411543" name="movieID"/>
  </meta>
 </head>
 <body class="body ">
  <div id="emptyPlaceholder">
  </div>
  <div id="fb-root">
  </div>
  <div id="overlay" style="height:0px;">
  </div>
  <div aria-labelledby="navMenu" class="modal fade" id="navMenu" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-body">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span class="glyphicon glyphicon-remove">
        <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>
       </span>
      </button>
      <div class="pull-left">
       <ul class="list-inline social">
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div class="items">
       <div class="item">
        [ahref]
        
       </div>
       <div class="item">
        [link]
        
       </div>
       <div class="item">
        [link]
        
       </div>
       <div class="item">
        [ahref]
        
       </div>
       <div class="item">
        [ahref]
        
       </div>
       <div class="item">
        [link]
        
       </div>
      </div>
      <div class="loginArea">
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="body_main container">
   <div id="header_and_leaderboard">
    <div class="leaderboard_wrapper " id="top_leaderboard_wrapper">
     <div class="leaderboard_helper" id="top_leaderboard_helper">
      <div id="leaderboard_top_ad">
      </div>
     </div>
    </div>
   </div>
   <nav class="header_main container" id="header-main">
    <div class="navbar navbar-rt" id="navbar" role="navigation">
     <div class="navbar-header pull-right hidden-xs">
      <div class="header_links">
       [link]
       
       [ahref]
       
       <div id="headerUserSection" style="display: inline-block;">
       </div>
      </div>
     </div>
     <div class="col-sm-13 col-full-xs" id="header_brand_column">
      <div class="hidden-xs desktopNav">
       <div class="navbar-brand" id="navbar_brand">
        [link]
        
        <div id="new_logo_ad" style="display:none;">
        </div>
       </div>
       <div id="desktop-search-root">
        <form action="/search/" method="get">
         <div class="navbar-searchbox main">
          <div class="input-group">
           <div class="input-group-btn">
            <button class="btn btn-default searchBtn" type="submit">
             <em class="glyphicon glyphicon-search">
             </em>
            </button>
           </div>
           <div class="navbar-close">
            <button class="btn btn-default" type="button">
             <span class="glyphicon glyphicon-remove">
             </span>
            </button>
           </div>
          </div>
         </div>
        </form>
       </div>
      </div>
      <div class="visible-xs mobileNav">
       <div>
        [link]
        
       </div>
       <div class="navbar-brand">
        [ahref]
        
       </div>
       <div id="mobile-nav">
        <div class="mob-nav-bottom clearfix">
         <ul class="nav-list" id="nav-list">
          <li class="nav-item">
           [ahref]
           
          </li>
          <li class="nav-item">
           [link]
           
          </li>
          <li class="nav-item">
           [ahref]
           
          </li>
          <li class="nav-item">
           [link]
           
          </li>
          <li class="nav-item">
           [link]
           
          </li>
         </ul>
        </div>
        <div class="mobile-nav-overlay" id="mobile-nav-overlay">
         <ul class="mobile-menu-panel">
          <li class="nav-item">
           [link]
           
          </li>
          <li class="nav-item clearfix d-block">
           <div class="login-signup-box pull-left">
            [link]
            
            [link]
            
           </div>
           <div class="social-media-box pull-right">
            [ahref]
            
            [link]
            
           </div>
          </li>
         </ul>
        </div>
       </div>
      </div>
     </div>
     <div class="navbar-nav col-sm-11 hidden-xs" id="menu">
      <ul class="list-inline">
       <li class="menuHeader center dropdown noSpacing">
        [ahref]
        
        <div aria-labelledby="movieMenu" class="dropdown-menu" id="movie-menu" role="menu">
         <div class="row-sameColumnHeight">
          <div class="col-xs-5 subnav">
           <div class="innerSubnav">
            <h2 class="title">
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
            <ul class="list-unstyled" id="header-movies-in-theaters">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="col-xs-5 subnav">
           <div class="innerSubnav">
            [link]
            
            <ul class="list-unstyled" id="header-on-dvd-streaming">
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="col-xs-3 subnav">
           <div class="innerSubnav">
            <h2 class="title">
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
            <ul class="list-unstyled" id="header-movies-more">
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="col-xs-11 subnav">
           <h2 class="title">
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <div class="freshPicks inDropdown" id="header-certified-fresh-picks">
            <div class="cfpItem">
             [link]
             
            </div>
            <div class="cfpItem">
             [link]
             
            </div>
            <div class="cfpItem">
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="menuHeader center dropdown noSpacing dropdown-toggle">
        [link]
        
        <div aria-labelledby="tvMenu" class="dropdown-menu" id="tvMenuDropdown" role="menu">
         <div class="row-sameColumnHeight">
          <div class="col-xs-7 subnav">
           <div class="innerSubnav" id="header-tv-col1">
            <div class="clickForMore">
             [link]
             
            </div>
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <table class="movie_list tv_list" id="tv-list-21">
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
            </table>
           </div>
          </div>
          <div class="col-xs-7 subnav">
           <div class="innerSubnav" id="header-tv-col2">
            <div class="clickForMore">
             [ahref]
             
            </div>
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <table class="movie_list tv_list" id="tv-list-24">
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [link]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [ahref]
               
              </td>
             </tr>
             <tr class="tv_show_tr tvTopListTitle">
              <td class="left_col">
               [ahref]
               
              </td>
              <td class="middle_col">
               [link]
               
              </td>
             </tr>
            </table>
           </div>
          </div>
          <div class="col-xs-5 subnav">
           <div class="innerSubnav">
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <ul class="list-unstyled" id="header-tv-more">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
            <h2 class="title" style="margin-top: 20px">
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
            <ul class="list-unstyled" id="header-tv-episodic-reviews">
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="col-xs-5 subnav freshPicks inDropdownTv">
           <div class="innerSubnav">
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <div class="cfpItem">
             [link]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="menuHeader center dropdown noSpacing dropdown-toggle">
        [link]
        
        <div aria-labelledby="newsMenu" class="dropdown-menu" role="menu">
         <div class="row-sameColumnHeight noSpacing">
          <div class="col-xs-4 subnav">
           <div class="innerSubnav" id="header-news-columns">
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <ul class="list-unstyled">
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
          <div class="col-xs-6 subnav">
           <div class="innerSubnav" id="header-news-best-worst">
            <div class="clickForMore">
             [ahref]
             
            </div>
            <h2 class="title">
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
            <div class="newsContainer">
             <div class="newsContainerItem">
              [link]
              
             </div>
             <div class="newsContainerItem">
              [link]
              
             </div>
            </div>
           </div>
          </div>
          <div class="col-xs-6 subnav">
           <div class="innerSubnav" id="header-news-guides">
            <div class="clickForMore">
             [ahref]
             
            </div>
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <div class="newsContainer">
             <div class="newsContainerItem">
              [link]
              
             </div>
             <div class="newsContainerItem">
              [link]
              
             </div>
            </div>
           </div>
          </div>
          <div class="col-xs-6 subnav">
           <div class="innerSubnav" id="header-news-rtnews">
            <div class="clickForMore" style="margin-bottom: 0">
             [ahref]
             
            </div>
            <h2 class="title">
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <div class="newsContainer">
             <div class="newsContainerItem">
              [ahref]
              
             </div>
             <div class="newsContainerItem">
              [link]
              
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li class="h2 menuHeader center noSpacing" id="header-tickets-showtimes" style="border-radius: 5px">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="trendingBar hidden-xs">
     <div class="fr">
      <ul class="list-inline social" id="trending_bar_social">
       <li class="header">
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
      <div id="trending_bar_ad" style="display: none;">
      </div>
     </div>
     <ul class="list-inline trendingEl">
      <li class="header">
       Trending on RT
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
    </div>
   </nav>
   <div class="container " id="main_container">
    <div id="super">
     <div id="super_movie_tv_ad" style="height:0px;">
     </div>
    </div>
    <aside class="col mob col-right hidden-xs" id="movieListColumn">
     <div id="movies_sidebar">
      <nav id="main_movie_sidebar_content">
       <ul class="nav nav-tabs" role="tablist">
        <li class="in-theaters-tab " role="presentation">
         [link]
         
        </li>
        <li class="on-dvd-tab active" role="presentation">
         [ahref]
         
        </li>
        <li class="on-tv-tab " role="presentation">
         [link]
         
        </li>
       </ul>
       <div class="tab-content" style="height:auto;">
        <section class="tab-pane fade " id="in-theaters">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list opening">
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
         </table>
         <div class="showAll openingMore">
          [link]
          
         </div>
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list top_box_office">
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            <a href="/m/bohemian_rhapsody">
             <span class="icon tiny fresh">
             </span>
             <span class="tMeterScore">
              62%
             </span>
            </a>
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
         </table>
         <div class="showAll topBoxOfficeMore">
          [link]
          
         </div>
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list comingSoon">
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [link]
            
           </td>
          </tr>
          <tr class="">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
            [ahref]
            
           </td>
          </tr>
         </table>
         <div class="showAll comingSoonMore" style="margin-bottom:5px">
          [ahref]
          
         </div>
        </section>
        <section class="tab-pane fade active in" id="on-dvd">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list top_rentals">
          <tr class="sidebarDvdTopRentals">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdTopRentals">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdTopRentals">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdTopRentals">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdTopRentals">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
         </table>
         <div class="showAll topRentalsMore">
          [link]
          
         </div>
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list new_release">
          <tr class="sidebarDvdComingSoon">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdComingSoon">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdComingSoon">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdComingSoon">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
          <tr class="sidebarDvdComingSoon">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
           <td class="right_col right">
           </td>
          </tr>
         </table>
         <div class="showAll newReleaseMore" style="margin-bottom:10px">
          [link]
          
         </div>
        </section>
        <section class="tab-pane fade " id="on-tv">
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list tv_list">
          <tr class="tv_show_tr tvList1">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList1">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList1">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList1">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList1">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
         </table>
         <div class="showAll tvList1More">
          [ahref]
          
         </div>
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list tv_list">
          <tr class="tv_show_tr tvList2">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList2">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList2">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList2">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList2">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
         </table>
         <div class="showAll tvList2More">
          [link]
          
         </div>
         <h3>
          [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
         </h3>
         <table class="movie_list tv_list">
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [ahref]
            
           </td>
           <td class="middle_col">
            [ahref]
            
           </td>
          </tr>
          <tr class="tv_show_tr tvList3">
           <td class="left_col">
            [link]
            
           </td>
           <td class="middle_col">
            [link]
            
           </td>
          </tr>
         </table>
         <div class="showAll tvList3More" style="margin-bottom:10px">
          [ahref]
          
         </div>
        </section>
       </div>
      </nav>
      <aside class="panel-rt" style="border-bottom:none">
       <div class="panel-body" style="padding:0px;">
        <aside class="medrec_ad " id="medrec_top_ad" style="width:300px">
        </aside>
       </div>
      </aside>
     </div>
     <div id="sponsored_media_sidebar_ad" style="height:0">
     </div>
    </aside>
    <div class="col mob col-center-right col-full-xs" id="mainColumn">
     <div class="movie" id="heroImageContainer">
      [link]
      
     </div>
     <div class="admin_panel" id="movie-admin-panel">
     </div>
     <h1 class="title clearfix visible-xs" data-type="title" id="movie-title">
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
     <div id="topSection">
      <div class="col-sm-7 col-xs-9" id="movie-image-section">
       <div class="center">
        [ahref]
        
        <div class="hidden-xs" id="critics-add-article" style="display:none;">
         [ahref]
         
        </div>
       </div>
      </div>
      <div class="score_panel col-sm-17 col-xs-15" id="scorePanel">
       <div class="col-sm-16 col-xs-12 tmeter-panel">
        <ul class="pull-right hidden-xs" role="tablist">
         <li class="active pull-left critics-score">
          [ahref]
          
         </li>
         <li class="pull-left superPageFontColor">
          |
         </li>
         <li class="pull-left critics-score">
          [ahref]
          
         </li>
        </ul>
        <h3 class="scoreTitle superPageFontColor">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="tab-content">
         <div class="tab-pane active" id="all-critics-numbers">
          <div class="row">
           <div class="col-sm-12">
            <div class="tomato-left">
             <div class="critic-score meter">
              [link]
              
             </div>
             <div class="hidden-xs" id="scoreStats">
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor">
                Average Rating: [link]<li>[link]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               4.4/10
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor">
                Reviews Counted:
               </span>
               <span>
                184[link][ahref]<li>[link]</li>[ahref]<li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
               </span>
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor audience-info">
                Fresh:
               </span>
               <span>
                40
               </span>
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor audience-info">
                Rotten: [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               <span>
                144
               </span>
              </div>
             </div>
            </div>
           </div>
           <div class="col-sm-12 tomato-info hidden-xs" style="padding-left:0">
            <div class="progress">
             <div class="progress-bar rotten" style="width:22%;">
             </div>
            </div>
            <p class="critic_consensus superPageFontColor">
             [search][search]<li>[ahref]</li><li>[link]</li>[link]<li>[link]</li>
            </p>
           </div>
          </div>
         </div>
         <div class="tab-pane" id="top-critics-numbers">
          <div class="row">
           <div class="col-sm-12">
            <div class="tomato-left">
             <div class="critic-score meter">
              [ahref]
              
             </div>
             <div class="hidden-xs" id="scoreStats">
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor">
                Average Rating: <li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               4.4/10
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor">
                Reviews Counted:
               </span>
               <span>
                40
               </span>
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor audience-info">
                Fresh:
               </span>
               <span>
                7[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>
               </span>
              </div>
              <div class="superPageFontColor">
               <span class="subtle superPageFontColor audience-info">
                Rotten: <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>
               </span>
               <span>
                33<li>[link]</li><li>[search]</li>[search][link][search]<li>[ahref]</li>[ahref]<li>[link]</li>
               </span>
              </div>
             </div>
            </div>
           </div>
           <div class="col-sm-12 tomato-info hidden-xs" style="padding-left:0">
            <div class="progress">
             <div class="progress-bar rotten" style="width:18%;">
             </div>
            </div>
            <p class="critic_consensus superPageFontColor">
             [ahref]<li>[search]</li>[ahref][ahref]<li>[ahref]</li><li>[search]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="col-sm-8 col-xs-12 audience-panel">
        <h3 class="scoreTitle superPageFontColor">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div class="audience-score meter">
         [ahref]
         
        </div>
        <div class="audience-info hidden-xs superPageFontColor">
         <div>
          <span class="subtle superPageFontColor">
           Average Rating:<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[link]<li>[search]</li>[ahref][ahref]
          </span>
          3/5
         </div>
         <div>
          <span class="subtle superPageFontColor">
           User Ratings:
          </span>
          27,049
         </div>
        </div>
       </div>
       <div class="col-full-xs visible-xs clearfix">
        <p class="critic_consensus tomato-info noSpacing superPageFontColor">
         [link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>[ahref]<li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </p>
       </div>
       <div class="page_ad hidden-xs" id="tomatometer_sponsorship_ad" style="margin-left:-10px">
       </div>
      </div>
      <div class="pull-left col-full-xs visible-xs" id="mobile-movie-image-section" style="text-align:center;">
      </div>
      <div id="affiliate_integration_button_ad" style="height:0px;display:none">
      </div>
      <div id="rating-root">
      </div>
     </div>
     <aside class="interscroller_ad visible-xs center mobile-interscroller " id="interscroller_ad" style="width:300px">
     </aside>
     <section class="panel panel-rt panel-box " id="movie-videos-panel">
      <h2 class="panel-heading">
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div class="panel-body content_body allow-overflow">
       <div id="videos-carousel-root">
       </div>
       <div class="clickForMore viewMoreVideos">
        [ahref]
        
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="movie-photos-panel">
      <h2 class="panel-heading">
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div class="panel-body content_body allow-overflow">
       <div id="photos-carousel-root">
       </div>
       <div class="clickForMore viewMorePhotos">
        [link]
        
       </div>
      </div>
     </section>
     <aside class="str-ad">
      <div class="visible-xs">
       <div id="sharethrough_top_ad">
       </div>
      </div>
     </aside>
     <section class="panel panel-rt panel-box movie_info media">
      <aside class="pull-right">
       <div class="hidden-xs" id="outbrainTopMobAd">
       </div>
      </aside>
      <div class="media-body">
       <div class="heading-wrapper">
       </div>
       <h2 class="panel-heading">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <div class="panel-body content_body">
        <div class="movie_synopsis clamp clamp-6" id="movieSynopsis" style="clear:both">
         Academy Award (R)-nominated star Melissa McCarthy (Bridesmaids, The Heat, Tammy) headlines The Boss as a titan of industry who is sent to prison after she's caught for insider trading. When she emerges ready to rebrand herself as America's latest sweetheart, not everyone she screwed over is so quick to forgive and forget. McCarthy is joined in The Boss by an all-star cast led by Kristen Bell, Peter Dinklage and Kathy Bates. Directed by Ben Falcone (Tammy), the comedy is based on an original character created by McCarthy and written by McCarthy and Falcone alongside their Groundlings collaborator, Steve Mallory. The film is produced by McCarthy and Falcone through their On the Day productions and Will Ferrell, Adam McKay and Chris Henchy through their Gary Sanchez Productions.
        </div>
        <ul class="content-meta info">
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Rating:
          </div>
          <div class="meta-value">
           R (for sexual content, language and brief drug use)
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Genre:
          </div>
          <div class="meta-value">
           <a href="/browse/opening/?genres=6">
            Comedy
           </a>
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Directed By:
          </div>
          <div class="meta-value">
           [ahref]
           
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Written By:
          </div>
          <div class="meta-value">
           [link]
           
           ,
           [link]
           
           ,
           [ahref]
           
          </div>
         </li>
         <li class="meta-row clearfix js-theater-release-dates">
          <div class="meta-label subtle">
           In Theaters:
          </div>
          <div class="meta-value">
           <time datetime="2016-04-07T17:00:00-07:00">
            Apr 8, 2016
           </time>
           <span style="text-transform:capitalize">
            wide
           </span>
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           On Disc/Streaming:
          </div>
          <div class="meta-value">
           <time datetime="2016-07-25T17:00:00-07:00">
            Jul 26, 2016
           </time>
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Box Office:
          </div>
          <div class="meta-value">
           $54,489,847
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Runtime:
          </div>
          <div class="meta-value">
           <time datetime="P105M">
            105 minutes
           </time>
          </div>
         </li>
         <li class="meta-row clearfix">
          <div class="meta-label subtle">
           Studio:
          </div>
          <div class="meta-value">
           [ahref]
           
          </div>
         </li>
        </ul>
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="watch-it-now">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <div class="movie_links">
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [link]
        
       </div>
      </div>
     </section>
     <div class="centered">
      <aside class="medrec_ad visible-xs center mobile-medrec" id="medrec_mobile_mob_top_ad" style="width:300px">
      </aside>
     </div>
     <section class="panel panel-rt panel-box " id="">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <div class="castSection ">
        <div class="cast-item media inlineBlock ">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Michelle Darnell">
           <br/>
           as Michelle Darnell
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock ">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Claire">
           <br>
            <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>
           </br>
           as Claire
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock ">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Renault">
           <br>
            [link][link]<li>[ahref]</li><li>[search]</li><li>[link]</li>[link]<li>[search]</li>[ahref]
           </br>
           as Renault
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock ">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Sandy">
           <br/>
           as Sandy
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock ">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Ida Marquette">
           [search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock ">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Moisa">
           [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Dana Dandridge">
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Sister Aluminata">
           [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><li>[ahref]</li>[link][search]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Mike">
           <br/>
           as Mike
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Rachel">
           <br>
            [search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
           </br>
           as Rachel
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Stephan">
           <br>
            <li>[ahref]</li>[link][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>
           </br>
           as Stephan
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Jan Keller">
           <br>
            [search][link][link]<li>[search]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
           </br>
           as Jan Keller
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Chrystal">
           <br>
            <li>[search]</li><li>[search]</li><li>[link]</li><li>[search]</li><li>[search]</li>[ahref]<li>[search]</li>[search]<li>[search]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
           </br>
           as Chrystal
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Mariana">
           <br>
            [search][link]<li>[link]</li><li>[search]</li>[search]<li>[link]</li>[search]<li>[link]</li>[search][link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>
           </br>
           as Mariana
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Helen">
           <br>
            <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
           </br>
           as Helen
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Hannah">
           <br>
            <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[search][ahref]<li>[search]</li>[search][link]
           </br>
           as Hannah
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Marty">
           <br>
            <li>[search]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[search]</li>[link][ahref][ahref]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li><li>[link]</li>
           </br>
           as Marty
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Bryce Crean">
           <br/>
           as Bryce Crean
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="SEC Agent Fields">
           <br/>
           as SEC Agent Fields
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Guard Kenny">
           <br/>
           as Guard Kenny
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Tito">
           [link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link]<li>[search]</li><li>[link]</li><li>[link]</li><li>[search]</li>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Boss">
           <br/>
           as Boss
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Helicopter Pilot Phil">
           <br>
            [search]<li>[link]</li><li>[search]</li><li>[link]</li>[ahref][search]
           </br>
           as Helicopter Pilot Phil
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Cammy">
           <br>
            [ahref]<li>[link]</li>[link][search]<li>[ahref]</li><li>[search]</li><li>[link]</li>
           </br>
           as Cammy
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Prison Guard">
           <br/>
           as Prison Guard
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Ping">
           <li>[ahref]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li><li>[link]</li>[link]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Kid">
           <br>
            <li>[ahref]</li><li>[ahref]</li>[search]<li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>
           </br>
           as Kid
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Carl">
           <br/>
           as Carl
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Building Security Guard">
           <br/>
           as Building Security Guard
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="as Herself">
           <br/>
           as as Herself
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="5-Year-Old Michelle">
           <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="10-Year-Old Michelle">
           <br>
            <li>[search]</li>[link]<li>[ahref]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><li>[link]</li>[ahref]
           </br>
           as 10-Year-Old Michelle
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="15-Year-Old Michelle">
           [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Waiter">
           <br/>
           as Waiter
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Himself">
           <br/>
           as Himself
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Darnell Dancer">
           [link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Darlings at Fight">
           <li>[link]</li>[ahref][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Darnell Dancer">
           [search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Darnell Dancer">
           <br>
            <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
           </br>
           as Darnell Dancer
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [link]
          
          <span class="characters subtle smaller" title="Darlings at Fight">
           <br>
            <li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[search][link]
           </br>
           as Darlings at Fight
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="1975 Mom">
           <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[link]</li>
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [link]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Darnell Dancer">
           <br>
            [ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li><li>[search]</li>
           </br>
           as Darnell Dancer
          </span>
         </div>
        </div>
        <div class="cast-item media inlineBlock castRemaining">
         [ahref]
         
         <div class="media-body">
          [ahref]
          
          <span class="characters subtle smaller" title="Darnell Dancer">
           <li>[search]</li><li>[ahref]</li><li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </span>
         </div>
        </div>
        [ahref]
        
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="newsSection">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <div class="fl" id="newsContainer">
        <div class="newsRow col-sm-8 col-full-xs">
         [link]
         
        </div>
        <div class="newsRow col-sm-8 col-full-xs">
         [link]
         
        </div>
        <div class="newsRow col-sm-8 col-full-xs">
         [link]
         
        </div>
       </div>
       <div class="clickForMore">
        [ahref]
        
       </div>
      </div>
     </section>
     <div id="friend-reviews-root">
     </div>
     <section class="panel panel-rt panel-box " id="contentReviews">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <p id="criticHeaders">
        [link]
        
        |
        [ahref]
        
        <span class="hidden-xs" style="display:inline">
         <li>[link]</li><li>[search]</li><li>[ahref]</li>[search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref]<li>[search]</li>[search][search]
        </span>
       </p>
       <div id="reviews">
        <div class="quote_bubble top_critic pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten">
            </span>
           </div>
           <div class="media-body">
            <p>
             The Boss is sketch comedy, with none of the lines colored in.<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
            </p>
            <div class="pull-right smaller">
             July 22, 2016 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [link]
            
           </div>
           <div>
            [link]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble top_critic pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten">
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][ahref][ahref]
            </span>
           </div>
           <div class="media-body">
            <p>
             Dinklage is awful as the foppish villain, and aside from one uproarious, ad-libbed riff, McCarthy seems to be on autopilot.<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li>
            </p>
            <div class="pull-right smaller">
             April 21, 2016 |
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [link]
            
           </div>
           <div>
            [link]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble top_critic pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small fresh" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 2.5/4">
            </span>
           </div>
           <div class="media-body">
            <p>
             An opportunity to watch a comedic performer at the top of her game revel boldly in her own confident weirdness.
            </p>
            <div class="pull-right smaller">
             April 13, 2016 | Rating: 2.5/4 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [ahref]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[search]</li>
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble top_critic pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten">
             [ahref]<li>[link]</li>[link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>[search][ahref][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref]
            </span>
           </div>
           <div class="media-body">
            <p>
             The movie is all too neat a package for McCarthy's exuberantly inventive comic artistry.
            </p>
            <div class="pull-right smaller">
             April 11, 2016 |
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [link]
            
           </div>
           <div>
            [ahref]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble top_critic pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 2/5">
            </span>
           </div>
           <div class="media-body">
            <p>
             Even though The Boss is co-written by McCarthy and her husband, director Ben Falcone (who should know his wife's strengths better), the film often strands its title character in shrill one-note caricature, mostly unchallenged.[search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
            </p>
            <div class="pull-right smaller">
             April 10, 2016 | Rating: 2/5 |
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [link]
            
           </div>
           <div>
            [link]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble top_critic pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: D">
             [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
            </span>
           </div>
           <div class="media-body">
            <p>
             I persist in believing that Melissa McCarthy is capable of starring in a movie that not only makes a scads of money but is -- you know -- good. The latest refutation of my belief is The Boss.
            </p>
            <div class="pull-right smaller">
             April 8, 2016 | Rating: D |
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [link]
            
           </div>
           <div class="small superreviewer">
            <span class="glyphicon glyphicon-star">
            </span>
            Top Critic
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: C-">
             [link][search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
            </span>
           </div>
           <div class="media-body">
            <p>
             [Melissa] McCarthy has an ability to elevate so-so material to a level that allows McCarthy to shine in every scene. It's just difficult to find those who can keep up with her energy.
            </p>
            <div class="pull-right smaller">
             December 10, 2018 | Rating: C- |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 3/10">
             <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </div>
           <div class="media-body">
            <p>
             Rarely do I whip through a review as quickly as this, but there is so little worth mentioning here that I think I'd rather get back to my dessert tray than dwell on this any longer.[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            <div class="pull-right smaller">
             October 25, 2018 | Rating: 3/10 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 2/5">
             <li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </div>
           <div class="media-body">
            <p>
             "The Boss" forces all its characters on us and doesn't have a direction that justifies any of the events in the film. A disappointing comedy that struggles to keep its story afloat. [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<li>[link]</li><li>[ahref]</li>[ahref]<li>[link]</li><li>[link]</li><li>[ahref]</li>[search]
            </p>
            <div class="pull-right smaller">
             August 31, 2018 | Rating: 2/5 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [link]
            
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 2/5">
             [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search]
            </span>
           </div>
           <div class="media-body">
            <p>
             McCarthy had been on an upswing with her films, like last year's Spy, but as disgraced business mogul Darnell, she's surprisingly unfunny.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li>[ahref]
            </p>
            <div class="pull-right smaller">
             March 21, 2018 | Rating: 2/5 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [link]
            
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-left cl">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten">
            </span>
           </div>
           <div class="media-body">
            <p>
             Movies don't need to have sophisticated plots, but they do need to make sense.[link]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </p>
            <div class="pull-right smaller">
             March 7, 2018 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
        <div class="quote_bubble hidden-xs pull-right cr">
         <div class="review_quote">
          <div class="media">
           <div class="pull-left">
            <span class="media-img icon small rotten" data-placement="right" data-toggle="tooltip" rel="tooltip" title="Original Score: 1/5">
            </span>
           </div>
           <div class="media-body">
            <p>
             Peter Dinklage is far too talented to be showing up in garbage comedies like this
            </p>
            <div class="pull-right smaller">
             December 4, 2017 | Rating: 1/5 |
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           <div>
            [ahref]
            
           </div>
           <div>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="view-all">
        [ahref]
        
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="audience_reviews">
      <h2 class="panel-heading">
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div class="panel-body content_body">
       <div>
        <div class="quote_bubble fl cl">
         <div class="review_quote" id="quoteBubble141876">
          <div class="media">
           <div class="media-body">
            <div class="starHeader">
             <span class="glyphicon glyphicon-star">
              [search]<li>[link]</li>[link]<li>[ahref]</li><li>[link]</li>
             </span>
             <span class="glyphicon glyphicon-star">
              [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><li>[search]</li>[search][link][link]<li>[link]</li>
             </span>
             <span class="glyphicon glyphicon-star">
             </span>
            </div>
            <p class="comment clamp clamp-6">
             Fans of Melissa Mccarthy will enjoy this ridiculous but highly amusing movie!<li>[link]</li>[ahref][link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
            </p>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           Film Crazy
           <p class="superreviewer small">
            <span class="glyphicon glyphicon-star">
            </span>
            Super Reviewer
           </p>
          </div>
         </div>
        </div>
        <div class="quote_bubble fr cr">
         <div class="review_quote" id="quoteBubble140111">
          <div class="media">
           <div class="media-body">
            <div class="starHeader">
             <span class="glyphicon glyphicon-star">
             </span>
             <span class="glyphicon glyphicon-star">
              <li>[search]</li><li>[search]</li>[ahref][ahref][link]<li>[ahref]</li>
             </span>
             ½
            </div>
            <p class="comment clamp clamp-6">
             It's almost as if the weight of the entire film rested on lead McCarthy and despite her array of zingers and antics that make for some edgy laughs it becomes an exhausting endeavor even for her shoulders. When stripped of this, the Boss lies naked as another comedy with a forgettable story.

There are parts of the premise that set up laughs that stand out (the Girl Scout brawl for one) but despite solid performances from even the supporting cast there are too many thrown-together storytelling elements that inhibit the film from breaking the mold of it's genre.
            </p>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           Drake Tsui
           <p class="superreviewer small">
            <span class="glyphicon glyphicon-star">
            </span>
            Super Reviewer
           </p>
          </div>
         </div>
        </div>
        <div class="quote_bubble fl cl">
         <div class="review_quote" id="quoteBubble82663">
          <div class="media">
           <div class="media-body">
            <div class="starHeader">
             <span class="glyphicon glyphicon-star">
              [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
             <span class="glyphicon glyphicon-star">
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li><li>[search]</li>[search][link]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             ½
            </div>
            <p class="comment clamp clamp-6">
             Pretty lame.  A few funny parts, but bloody hell, those turtlenecks! I get the joke, but I wanted to rip them off her every scene.
            </p>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           Nicki Marie
           <p class="superreviewer small">
            <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>
           </p>
          </div>
         </div>
        </div>
        <div class="quote_bubble fr cr hidden-xs">
         <div class="review_quote" id="quoteBubble162">
          <div class="media">
           <div class="media-body">
            <div class="starHeader">
             <span class="glyphicon glyphicon-star">
             </span>
             <span class="glyphicon glyphicon-star">
              <li>[link]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[search]</li><li>[search]</li>[ahref]
             </span>
             ½
            </div>
            <p class="comment clamp clamp-6">
             Beginning with a slight nod to recent headlines involving the over-the-top antics of the rich and famous, this slight riff never rises above skit-on-SNL level, despite the talents of the participants involved. The best bit? An all out girl-on-girl scout gang fight, which alone should justify your time.
            </p>
           </div>
          </div>
         </div>
         <div class="review_source media">
          <div class="pull-left">
          </div>
          <div class="media-body">
           Kevin M. Williams
           <p class="superreviewer small">
            [link]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[link][ahref][search]<li>[ahref]</li>[search][search][link]<li>[ahref]</li>[ahref]
           </p>
          </div>
         </div>
        </div>
       </div>
       <div class="view-all">
        [ahref]
        
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="quotesList">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <div class="media">
        <div class="pull-right hidden-xs" style="width:310px;">
         <aside class="medrec_ad " id="medrec_bottom_ad" style="width:300px">
         </aside>
         <br>
          <li>[search]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
         </br>
        </div>
        <div class="media-body">
         <div class="quote_bubble fullWidth">
          <div class="review_quote media">
           <table class="table-dl-like">
            <tr>
             <td class="bold quote_actor">
              Tito:
             </td>
             <td class="line">
              Congratulations on your balls, Claire!
             </td>
            </tr>
           </table>
           <div class="quoteFooter">
           </div>
          </div>
         </div>
         <div class="quote_bubble fullWidth">
          <div class="review_quote media">
           <table class="table-dl-like">
            <tr>
             <td class="bold quote_actor">
              Michelle Darnell:
             </td>
             <td class="line">
              We are going to start a brownie empire.
             </td>
            </tr>
           </table>
           <div class="quoteFooter">
           </div>
          </div>
         </div>
         <div class="quote_bubble fullWidth">
          <div class="review_quote media">
           <table class="table-dl-like">
            <tr>
             <td class="bold quote_actor">
              Michelle Darnell:
             </td>
             <td class="line">
              Huh. Look at that, a bed in a sofa.
             </td>
            </tr>
           </table>
           <div class="quoteFooter">
           </div>
          </div>
         </div>
         <div class="quote_bubble fullWidth">
          <div class="review_quote media">
           <table class="table-dl-like">
            <tr>
             <td class="bold quote_actor">
              Michelle Darnell:
             </td>
             <td class="line">
              You have a child. Was that through intercourse? I picture you with an a-sexual vibe.
             </td>
            </tr>
           </table>
           <div class="quoteFooter">
           </div>
          </div>
         </div>
         <div class="clickForMore" style="display:inline-block; width:100%">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </section>
     <section class="panel panel-rt panel-box " id="newsAndFeatures">
      <h2 class="panel-heading">
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="panel-body content_body">
       <div class="panel-body">
        <div class="col-sm-15">
         <div id="FeaturedSection">
          <div class="newsItem col-xs-12 odd">
           [ahref]
           
          </div>
          <div class="newsItem col-xs-12 odd">
           [ahref]
           
          </div>
          <div class="newsItem col-xs-12 odd">
           [ahref]
           
          </div>
          <div class="newsItem col-xs-12 odd">
           [ahref]
           
          </div>
         </div>
         <div class="clickForMore">
          [link]
          
         </div>
        </div>
        <div class="col-sm-9 newsList hidden-xs">
         <h2 class="" id="top-headlines">
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <div class="col-sm-24">
          <ul class="redDot">
           <li>
            [link]
            
            <br>
             [ahref]<li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
            </br>
            <span class="subtle">
             – Rotten Tomatoes
            </span>
           </li>
           <li>
            [link]
            
            <br/>
            <span class="subtle">
             – Rotten Tomatoes[search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
            </span>
           </li>
           <li>
            [link]
            
            <br>
             <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[link]</li>[link]
            </br>
            <span class="subtle">
             – Rotten Tomatoes[link]<li>[search]</li><li>[link]</li><li>[search]</li>[ahref][ahref]<li>[ahref]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </li>
           <li>
            [ahref]
            
            <br>
             [ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li>[search][link][search][ahref]<li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li>[ahref][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </br>
            <span class="subtle">
             – Rotten Tomatoes
            </span>
           </li>
           <li>
            [link]
            
            <br>
             <li>[ahref]</li><li>[ahref]</li>[search]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[ahref][link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[search][ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>
            </br>
            <span class="subtle">
             – Rotten Tomatoes
            </span>
           </li>
           <li>
            [link]
            
            <br>
             <li>[link]</li>[search][ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
            </br>
            <span class="subtle">
             – Rotten Tomatoes
            </span>
           </li>
           <li>
            [link]
            
            <br>
             <li>[search]</li><li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
            </br>
            <span class="subtle">
             – Rotten Tomatoes<li>[search]</li>[ahref]<li>[link]</li>[search][search]<li>[ahref]</li><li>[link]</li>[link]
            </span>
           </li>
           <li>
            [link]
            
            <br>
             [search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
            </br>
            <span class="subtle">
             – Rotten Tomatoes[link]<li>[ahref]</li>[ahref][search][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </li>
          </ul>
         </div>
         <div class="top-headlines-clickForMore-narrow clickForMore">
          [link]
          
         </div>
        </div>
       </div>
      </div>
     </section>
     <aside class="medrec_ad visible-xs center mobile-medrec" id="medrec_mobile_mob_bottom_ad" style="width:300px">
     </aside>
    </div>
   </div>
   <div class="sleaderboard_wrapper hidden-xs">
    <div id="leaderboard_bottom_ad" style="margin-left:auto;margin-right:auto;display:inline-block">
    </div>
   </div>
   <div id="skin_ad">
   </div>
   <footer class="hidden-xs" id="foot">
    <div class="row">
     <div class="col-xs-5 subnav">
      <ul class="unstyled">
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="col-xs-4 subnav">
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="col-xs-7 subnav center">
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <div class="default-half-margin-vertical">
       Get the freshest reviews, news, and more delivered right to your inbox!
      </div>
      <div class="default-margin">
       [ahref]
       
      </div>
     </div>
     <div class="col-xs-8 subnav">
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <div>
       [link]
       
       [ahref]
       
       [link]
       
       [link]
       
       [ahref]
       
      </div>
     </div>
    </div>
    <div class="subtle" style="padding:10px">
     <span class="easteregg">
      Copyright © Fandango. All rights reserved.
     </span>
     <span style="color:#313131">
      V2
     </span>
     [ahref]
     
     |
     [link]
     
     |
     [ahref]
     
    </div>
   </footer>
   <footer class="visible-xs-block" id="mobileFoot">
    <div class="white">
     Copyright © Fandango. All rights reserved.
     <span style="color:#313131">
      V2[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[link]<li>[link]</li>[link][ahref]<li>[search]</li>
     </span>
    </div>
    <div class="default-margin">
     [link]
     
    </div>
    <div>
     [link]
     
     [ahref]
     
     [link]
     
    </div>
   </footer>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0324
  </b>
 </body>
</html>
