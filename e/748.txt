--->|Tm8gSSdtIGFic29sdXRlbHkgbm90IGluIHZpb2xhdGlvbiBvZiBhbnkgcnVsZXMuIFN0b3AgYWN0aW5nIGxpa2UgeW91IGtub3cgYW55dGhpbmcgYWJvdXQgdGhpcyB0b3BpYyB0aGF0IHlvdSBqdXN0IGxlYXJuZWQgYWJvdXQgdmlhIGdvb2dsZS4gVGhpcyBpcyBteSBqb2IgYW5kIEkga25vdyB3aGF0IEknbSBhbGxvd2VkIHRvIHNheS4gTm90aGluZyBJJ3ZlIHNhaWQgY29tZXMgYW55d2hlcmUgY2xvc2UgdG8gdmlvbGF0aW5nIGFueSBydWxlcy4gQW5kIGlmIHlvdSBkaXNhZ3JlZSwgZmlyZSB1cCBnb29nbGUgYWdhaW4gYW5kIHNlbmQgbWUgc29tZSBsaW5rcy4gRnVuIGZhY3QsIG1pbGl0YXJ5IHBlcnNvbm5lbCBhcmUgYWxsb3dlZCB0byBpZGVudGlmeSB0aGVtc2VsdmVzIGFzIGJlaW5nIGluIHRoZSBtaWxpdGFyeSBhbmQgYXJlIGFsbG93ZWQgdG8gaGF2ZSBwb2xpdGljYWwgb3BpbmlvbnMuIEFub3RoZXIgZnVuIGZhY3Q6IHdlJ3JlIGNvbnNpZGVyZWQgY2l0aXplbnMsIGFyZSBhbGxvd2VkIHRvIHZvdGUsIGFuZCBkb24ndCBoYXZlIHRvIGJlIHNpbGVudCByb2JvdHMuIEZ1Y2sgb2ZmLiBJIGRvIHRoYXQgbm93LCBiZWNhdXNlIHRoYXQncyBob3cgVHJ1bXBzIGNhbXBhaWduIGRvZXMgaXQsIGluIHRoZSB0d2ljZSAgYW5kIHNvbWV0aW1lcyB0aHJpY2UgIGVtYWlscyBJIGdldCBkYWlseS4gRXZlcnkgZGF5LCBoZSBzZW5kcyBvdXQgdHdvIGVtYWlscyBiZWdnaW5nIGhpcyBzdXBwb3J0ZXJzIHRvIHJhaXNlIHdoYXRldmVyIG51bWJlciBvZiBtaWxsaW9uIHRoZXkgbmVlZCAod2FsbCwgbGF0ZWx5KSBhbHdheXMgZG9uZSB3aXRoIHRoZSBjYXBpdGFsIGxldHRlciBPLiBJdCdzIGN1dGUuIFRoZXkncmUgY3V0ZSB3aXRoIHRoZSBoYXRlcyBhbmQgd2hhdG5vdC4KSXRzIGRhbWFnZSBwb3RlbnRpYWwgaXMgYWxzbyB2ZXJ5IGhpZ2ggYW5kIGhhbmRsZXMgc29tZSBrZXkgdGhyZWF0cyBpbiB0aGUgbWV0YSBhbmQgY2FuIGdvIHRvZSB0byB0b2UgaWYgbm90IHdpbiB2ZXJzdXMgYW55dGhpbmcgZWxzZS4gCkRlc2lnbnNBbiBhY2Ugb2Ygc3BhZGVzIHRhdHRvb3MgY2FuIGJlIGRlc2lnbmVkIGluIG1hbnkgZGlmZmVyZW50IHdheXMuIEl0IGNhbiBiZSBkZXNpZ25lZCBhbG9uZSBvciBwb3J0cmF5ZWQgd2l0aCBzZXZlcmFsIG90aGVyIHN5bWJvbHMgYW5kIGVsZW1lbnRzLiBEdWUgdG8gdGhpcywgdGhlcmUncyBhIHZhcmlldHkgYWNlIG9mIHNwYWRlcyB0YXR0b29zLgooT2JhbWEpIGJsZXcgdXAgdGhlIFVuaXRlZCBOYXRpb25zLiBUaGUgY2xlYXIgcG9pbnQgaXMsIHlvdSBwb29yIG5hdGlvbnMgY2FuIHNwb3V0IG9mZiBhbGwgeW91IHdhbnQgLiAKT3JpZ2luYWwgaXMgYW4gdW5kZXJzdGF0ZW1lbnQgZm9yIHRoaXMgYWlyIHNpZ24uIApJbiB0aGVvcnksIGFsd2F5cyBvcHRpbmcgZm9yIGRlY2lzaW9ucyB3aXRoIGEgcG9zaXRpdmUgRVYgd2lsbCBldmVudHVhbGx5IHdvcmsgb3V0IGluIHlvdXIgZmF2b3I7IGhvd2V2ZXIsIEVWIHNob3VsZG4ndCBiZSB1c2VkIGFzIGEgc29sZSBmYWN0b3IgaW4geW91ciBkZWNpc2lvbiBtYWtpbmcuIApPbmNlIHdoZW4gQW5qZWxpY2EgcmFuIHRvIG1lZXQgaGVyIGZhdGhlciBmb3IgYnJlYWtmYXN0IGluIHRoZSBCaWcgSG91c2Ugc2hlIHdhcyBncmVldGVkIGJ5IFJpbiBLYWdhLCBhIHNhbXVyYWkgd2FycmlvciBpbiBmdWxsIGNvc3R1bWUgY29taW5nIGRvd24gdGhlIHN0YWlycy4gSHVzdG9uIGhhZCBqdXN0IHJldHVybmVkIGZyb20gSmFwYW4gYWZ0ZXIgbWFraW5nIFRoZSBCYXJiYXJpYW4gYW5kIHRoZSBHZWlzaGEsIGFuZCBicm91Z2h0IG9uZSBvZiB0aGUgYWN0b3JzIGJhY2sgd2l0aCBoaW0uIFRvIGhlciBzdXJwcmlzZSB0aGUgc2FtdXJhaSB3YXMgd2VlcGluZyB3aXRoIGhhcHBpbmVzcyB0byBiZSBhdCBTdCBDbGVyYW5zLiBIdXN0b24gZXhwbGFpbmVkIGF0IGJyZWFrZmFzdCB0aGF0IGhpcyB0ZWFycyB3ZXJlIGEgZ3JlYXQgY29tcGxpbWVudCwgYXMgc2FtdXJhaSB3ZXJlIG9ubHkgcGVybWl0dGVkIHRvIGNyeSBhIGZldyB0aW1lcyBpbiB0aGVpciBsaXZlcy4gUG9vciBBbmplbGljYSwgd2hvIGFkbWl0cyB0byBoYXZlIGNyaWVkIGFuIGF2ZXJhZ2UgdGhyZWUgb3IgZm91ciB0aW1lcyBhIGRheSwgd2FzIG15c3RpZmllZC4KV2VsbCwgd2UgdG9vIGZhaWwgdG8gdW5kZXJzdGFuZCB3aHkgY2FuJ3QgdGhlIFBUSSB0ZWxsIHVzIGl0cyBkZW1hbmRzIGFib3V0IGVsZWN0b3JhbCByZWZvcm1zLiAKQWZ0ZXIgcGxheWluZyBmb3IgYSBjb3VwbGUgd2Vla3MsIGV2ZXJ5IGZldyBkYXlzIG9yIHNvLCBJIGFscmVhZHkgaGF2ZSBhIFR1cnJldCBidWlsZCBzZXQsIGEgTXVsdGlzaG90IHNldCwgYXMgd2VsbCBhcyBhbiBJbXBhbGUgYnVpbGQgc2V0IG9uIG15IERILiAKTm90IHlvdXIgY29sb3IsIGJ1dCBvaCB3ZWxsLCB5b3UnbGwgZ2V0IHVzZWQgdG8gaXQgaW4gcHJpc29uLCcgYW5vdGhlciBhZGRlZC5BbmQgb25lIFR3aXR0ZXIgdXNlciB3ZW50IGFzIGZhciBhcyBQaG90b3Nob3BwaW5nIEl2YW5rYSdzIGZhY2Ugb250byBhIHBpY3R1cmUgb2YgYW4gaW5tYXRlIGluIGFuIG9yYW5nZSBqdW1wc3VpdCwgd3JpdGluZzogJ1lvdSBsb29rIGJlYXV0aWZ1bCBpbiBvcmFuZ2UhJ0VhcmxpZXIgdGhpcyBtb250aCwgSXZhbmthIHNhaWQgc2hlJ3Nub3Qgd29ycmllZCBTcGVjaWFsIENvdW5zZWwgUm9iZXJ0IE11ZWxsZXIncyBicm9hZCBSdXNzaWEgcHJvYmUgd2lsbCBlbnNuYXJlIGhlciBvciBoZXIgaHVzYmFuZCBKYXJlZCBLdXNobmVyLkR1cmluZyBhIHNpdCBkb3duIGludGVydmlldyB3aXRoIEFCQydzICdHb29kIE1vcm5pbmcgQW1lcmljYSwnIHNoZSBjbGFpbWVkIHNoZWtuZXcgJ2xpdGVyYWxseSBhbG1vc3Qgbm90aGluZycgYWJvdXQgYSBwcm9wb3NhbCB0byBidWlsZCBhIHNreXNjcmFwZXIgaW4gTW9zY293IHdpdGggaGVscCBmcm9tIHRoZSBSdXNzaWFuIGdvdmVybm1lbnQgZHVyaW5nIHRoZSAyMDE2IGVsZWN0aW9uLlRoZSBidXNpbmVzc3dvbWFuIGFkZGVkIHRoYXQgaXQgd291bGRuJ3QgYmUgdW51c3VhbCBmb3IgYSBob3RlbCBjaGFpbiB0byBoYXZlIHByb2plY3RzIGluIFJ1c3NpYS4nV2UncmUgbm90IHRhbGtpbmcgYWJvdXQgSXJhbi4gCkltbywgaXQgbW9yZSBsaWtlIEthZ3V5YSBhbmQgS2FndXlhIGNoYW4gYXJlIGp1c3QgcGFydHMgb2YgaGVyIG92ZXJhbGwgcGVyc29uYWxpdHkgYnJhbmNoaW5nIG91dCBhcyBzaGUgYmVjYW1lIG1vcmUgb3Blbi4gCiJQZW9wbGUgbGlrZSBpdCBiZWNhdXNlIHlvdSBnZXQgdGhlIGNyb3dkIGdvaW5nLCB5b3UgZG8gdGhlIGRhbmNlIHRvZ2V0aGVyLiBldmVyeWJvZHkgYXNrcyBmb3IgaXQuIgpObyBzcG90dGVycywgbm8gdHJhY2sgY29uZXMgb3IgaGF5IGJhbGVzLCBubyByb2FkIGJsb2NrcywgY291cGxlIG1hdGVzIG1pbGxpbmcgYWJvdXQgb24gdGhlIHJvYWQgYW5kIGEgZ29wcm8gdG9ib2dnYW4gYmVoaW5kIGhpbSwgcHJvbGx5IG9uIGEgc2VsZmllIHN0aWNrIGtub3dpbmcgdGhlc2Ugc3F1aWRzLiAKSXQgaXMgdHJ1ZSB0aGF0IG5vdCBhIHNpbmdsZSBmZWF0dXJlIG9mIEJyaXRpc2ggQ2VsdGljIGhhcyBiZWVuIGNvbnZpbmNpbmdseSBpZGVudGlmaWVkIGluIHRoZSBtb3JwaG9sb2d5IGFuZCBzeW50YXggb2YgT2xkIEVuZ2xpc2g7IHRoZSB0d28gYXNwZWN0cyBvZiBsYW5ndWFnZSB3aGVyZSBhIGhpc3RvcmljYWwgbGluZ3Vpc3Qgd291bGQgZXhwZWN0IHRvIGZpbmQgaW5mbHVlbmNlIGZyb20gYSBzdWJzdHJhdGUgbGFuZ3VhZ2UsIGFzIGFkdWx0cyB3aG8gYWNxdWlyZSBhIHNlY29uZCBsYW5ndWFnZSAoZXNwZWNpYWxseSBpbiB0aGUgY29udGV4dCBvZiB0aGUgYXJyaXZhbCBvZiBhIG5ldyBwb2xpdGljYWwvc29jaWFsIGVsaXRlIG92ZXIgYW4gaW5kaWdlbm91cyBwb3B1bGF0aW9uKSBhcyBhIHJ1bGUgZmluZCBpdCBtb3JlIGRpZmZpY3VsdCB0byBtYXN0ZXIgcHJvbnVuY2lhdGlvbiBhbmQgc2VudGVuY2Ugc3RydWN0dXJlIHRoYW4gbGVhcm5pbmcgbmV3IHZvY2FidWxhcnkuIEluZGVlZCwgdGhpbmsgb2YgYSBtb25vbGluZ3VhbCBFbmdsaXNoIHNwZWFrZXIgbGVhcm5pbmcgRnJlbmNoOyB0aGV5IGhhdmUgbGl0dGxlIGVmZm9ydCBsZWFybmluZyBGcmVuY2ggd29yZHMgYnV0IG1heSBzdHJ1Z2dsZSB3aXRoIHByb25vdW5jaW5nIHVuZmFtaWxpYXIgc291bmRzIGxpa2UgYSB1dnVsYXIgdHJpbGwgYW5kIHdpbGwgb2Z0ZW4gc3Vic3RpdHV0ZSB0aGUgY2xvc2VzdCBhcHByb3hpbWF0ZSBmcm9tIEVuZ2xpc2guIE92ZXIgdGltZSB0aGVzZSBzdWJzdGl0dXRpb25zIHNvbGlkaWZ5IGludG8gY29uY3JldGUgbGluZ3Vpc3RpYyBjaGFuZ2VzLgonTW9vcmUncyBsYXcnIHNheXMgdGhhdCB0aGUgbnVtYmVyIG9mIHRyYW5zaXN0b3JzIG9uIGEgY2hpcCB3aWxsIGFwcHJveGltYXRlbHkgZG91YmxlIGV2ZXJ5IDE4IG1vbnRocy4gCk1lIGJlaW5nIGEgd2hpdGUgcGVyc29uIHdobyBsaWtlcyB0byBjbHViLCBJIHRyaWVkIGVudGVyaW5nIG9uZSBvZiB0aGUgcGxhY2VzIHRoYXQgdGhlIGtvcmVhbnMgYWx3YXlzIHF1ZXVlZCB1cCBmb3IsIGJ1dCBvbmNlIEkgZ290IHRvIHRoZSBmcm9udCBvZiB0aGUgbGluZSwgdGhlIGJvdW5jZXIgYXNrZWQgdGhlIEtvcmVhbiBndXkgSSB3YXMgY2hhdHRpbmcgd2l0aCBpZiBJIHdhcyB3aXRoIGhpbS4gTm9wZS4gQXBwYXJlbnRseSwgYmVjYXVzZSBJIHdhcyBhIGZvcmVpZ25lciB1bmFjY29tcGFuaWVkIGJ5IGEgS29yZWFuIGNoYXBlcm9uZSwgSSB3YXMgbm90IGFsbG93ZWQgaW50byB0aGUgY2x1Yi4gClRPUk9OVE8gICBQZW9wbGUgd2l0aCBkZXZlbG9wbWVudGFsIGRpc2FiaWxpdGllcyBhcmUgbW9yZSBsaWtlbHkgdGhhbiB0aGUgbm9uIGRpc2FibGVkIHRvIGVuY291bnRlciBwcm9ibGVtcyB3aXRoIE9udGFyaW8ncyBoZWFsdGggY2FyZSBzeXN0ZW0gcmVnYXJkbGVzcyBvZiBhZ2UsIHNleCBvciBjbGFzcywgYSBuZXcgc3R1ZHkgc3VnZ2VzdHMuCklmIHRoZSB0b3RhbCBhbW91bnQgaXMgYmVsb3cgdGhlIGRlZHVjdGlibGUsIGVhY2ggb3duZXIgd291bGQgYmUgcmVzcG9uc2libGUgZm9yIHRoZSByZXBhaXJzIHRvIHRoZWlyIHN0cmF0YSBsb3RzLiBUaGlzIGlzIG9uZSBvZiB0aGUgbW9zdCBjb21tb24gb2NjdXJyZW5jZXMgd2hlbiBzb21lb25lJ3MgdG9pbGV0IG9yIHR1YiBvdmVyZmxvd3MuIApZb3UgY2FuIGFsc28gbWFrZSB0aGlzIGEgZ3JlYXQgZGF5IHRvIGJlIHlvdS4gQW5kIEkgbWVhbiB0aGlzIHdoZW4gSSBzYXksIGhhdmUgYSBIYXBweSBWYWxlbnRpbmUncyBEYXksIExhZGllcy4uIApUaGUgd2F5IGluY3JlYXNlZCBkZW1hbmQgZ2V0cyBpbXBsYW50ZWQgaW50byBjb25zdW1lcnMgaXMgc28gc29waGlzdGljYXRlZCBhdCB0aGlzIHBvaW50IHRoYXQgaXQgaXMgbmVhcmx5IGltcG9zc2libGUgdG8gcmVzaXN0LiAKVGhleSBoYWQgY2FtZXJhcyB3aXJlZCBpbnNpZGUgaXQuIApJdCB3YXMgYSBwcm91ZCBtb21lbnQgZm9yIG1lIHRoYXQgdGhlIHRlYW0gcHVsbGVkIGl0IG9mZiBhbmQgbWFuYWdlZCB0byBzdGF5IGNhbG0gZGVzcGl0ZSB0aGUgaW1tZW5zZSBwcmVzc3VyZS4gCkRpZXNlcyBUaGVtYSBpc3QgZnIgamVkZW4gUG9rZXJzcGllbGVyIGFic29sdXQgUGZsaWNodCwgZGFzIGF1cyBkaWVzZW0gQnVjaCBhbmdlaWduZXRlIFdpc3NlbiB3aXJkIGplZGVuIExlc2VyIGVpbmVuIGd1dGVuIFZvcnRlaWwgdmVyc2NoYWZmZW4gYmVpIGRlbiBzcHRlcmVuIFBva2Vyc3BpZWxlbi4KSSBoYWQgYSBodWdlIGFtb3VudCBvZiBjcmFzaGVzIHRvby4gCjEwIFN0ZXBzIHRvIEdyZWF0IEZpcnN0CkJ1dCB0aGUgY29tbWVudCBpdHNlbGYgd2FzIGp1c3QgdGhlIGluc3BpcmF0aW9uIGZvciB0aGUgcG9zdCwgSSBub3Qgd29ycmllZCBhYm91dCBob3cgdGhlIGd1eXMgc2VlIG91ciBwYXJ0IG9mIHRoZSBjb21tdW5pdHkuIE1heWJlIEkgc2hvdWxkbiBoYXZlIGV2ZW4gbWVudGlvbmVkIGl0LCBtYW55IHNlZW0gdG8gZm9jdXMgb24gdGhlIHdob2xlIFRSUCB2cyBSUFcgdGhpbmcgYW55d2F5LkkgcmVhbGx5IGp1c3QgbG9va2luZyBmb3IgbmV4dCBzdGVwIG1hdGVyaWFsL2luZm8vaWRlYXMvaW5zcGlyYXRpb24uIExpa2Ugc29tZSB3b21lbiBoZXJlIGFyZSA1MCwgc3VyZWx5IHRoZXkga25vdyBzdHVmZiBJIGRvbiBidXQgYW0gb2JsaXZpb3VzIHRvPyBJIGxpa2UgbGVhcm5pbmcgZnJvbSBvdGhlciBwZW9wbGVzIG1pc3Rha2VzIG1vcmUgdGhhbiBmcm9tIG15IG93bi4gCkkgc3VnZ2VzdCB5b3UgcHJlcGFyZSB0byBnbyBpbnRvIHdoYXQgSSBjYWxsICJzdXJ2aXZhbCBtb2RlIi4gClRoZXNlIGZpZ3VyZXMganVzdGlmeSBHZWVsb25nIENvdW5jaWwgdHJ5aW5nIHRvIHN0ZW0gdGhlIHRpZGUgb2YgZ2FtYmxpbmcgaGFybSB0byBieSBvcHBvc2luZyBhbiBhcHBsaWNhdGlvbiBmb3IgMzAgZXh0cmEgbWFjaGluZXMgYXQgb25lIGxvY2FsIHZlbnVlLiBDb3VuY2lsIGxhd3llcnMgd2lsbCBhcHBlYXIgYmVmb3JlIHRoZSBjb21taXNzaW9uIGxhdGVyIHRoaXMgbW9udGggdG8gYXJndWUgdGhlaXIgY2FzZS4KU28gSSBsZWZ0IHRoZSBzdGV3LCBwbG9kZGluZyBvbiBvdmVyIHRvIHRoZSBkb29yLCBhbmQgcXVpY2tseSB0aHJ1c3QgaXQgb3BlbiwgaG9waW5nIHRvIGdldCB0aGUgcGFpbiBvdmVyIHdpdGggcXVpY2suCk15IGhvcGUgd291bGQgYmUgdGhhdCBieSBwcmVwYXJpbmcgeW91cnNlbGYsIHRoZSBhbnhpZXR5IHdoZW4geW91IGFjdHVhbGx5IGVuY291bnRlciBhIHNpdHVhdGlvbiBpbiByZWFsIGxpZmUgd291bGQgYmUgbGVzcy4uIApXb3JrIHRoYXQgdW5kb3VidGVkbHkgbmVlZGVkIGRvaW5nIGJ1dCB3aGljaCB3YXMgYWN0dWFsbHkgaGVsZCB1cCBhbmQgbWFkZSBtb3JlIGNvbXBsZXggYnkgdGhlIGFjdGlvbnMgb2YgdGhlIFJlc2VhcmNoZXIuIEFzIG9mIHRvZGF5LCB0aGlzIFJlc2VhcmNoZXIgaGFzIGJlZW4gc3VzcGVuZGVkIGZvciBhIHNpZ25pZmljYW50IHBlcmlvZCBvZiB0aW1lIGFuZCBzb21lIHZlcnkgY2xlYXIgY29uZGl0aW9ucyBhdHRhY2hlZCB0byB0aGVpciBldmVudHVhbCByZXR1cm4uIApQb3VyIHN1cHBsZXIgdW4gdGFudGluZXQgIGxhIHZ1ZSBkZmFpbGxhbnRlIGRlIEJhciBaaW5nLCBsJ2FtaSBCb2IgY29uc2VpbGxlIGQndXRpbGlzZXIgZCdhbmNpZW5zIHBldGl0cyBkZXNzaW5zICBnYXJkcyBzb3VzIGxlIGNvdWRlICBzYW5zIGF2b2lyIHQgamFtYWlzIGRpdHMuCkFuIHVubGljZW5zZWQgbWFzc2V1ciBpbiBDb25uZWN0aWN1dCBzZXh1YWxseSBhc3NhdWx0ZWQgYSB3b21hbiBhZnRlciBhc2tpbmcgaGVyIGlmIHNoZSBoYWQgYSBib3lmcmllbmQgYW5kIHN1Z2dlc3RpbmcgdGhhdCBzaGUgcmVtb3ZlIGhlciB1bmRlcndlYXIsIGEgbGF3c3VpdCBjbGFpbXMuCkJ1dCBOaWNrb2xzIHNheXMgaGUncyBub3QgYWxsb3dlZCB0byBwdXQgdG9nZXRoZXIgZXZlbnRzIGZvciB0d28gZ3JvdXBzIG5vdyB1bmRlciB0aGUgbmV3IHJ1bGVzLiBHdW50aGVyIG9mIHRoZSBTdC4gSm9obnMgS2l3YW5pcywgc2FpZCBhbm90aGVyIG5ldyByZXF1aXJlbWVudCBpcyB0aGF0IHRocmVlIHJlcHJlc2VudGF0aXZlcyBmcm9tIHRoZSBjaGFyaXR5IGJlIHRoZXJlLiAKV2hhdCBjYW4gSSBkbyB3aXRoIGEgY29saWNreSBiYWJ5P0FjdHVhbGx5LiBZb3UgbWF5IG5vdCBuZWVkIHRvIGRvIGFueXRoaW5nLiBUaGVyZSdzIG5vIGV2aWRlbmNlIHRoYXQgY29saWMgaHVydHMgYmFiaWVzIGluIHRoZSBsb25nIHRlcm0sIGFsdGhvdWdoIGlmIGl0IG1ha2VzIHBhcmVudCBpbmZhbnQgcmVsYXRpb25zaGlwcyB0ZW5zZSwgdGhhdCBjYW4gYmUgYW4gaXNzdWUuIApNeSBodXNiYW5kIHVzZWQgdG8gYmUgZ3JlYXQgYW5kIHJvbWFudGljIGFuZCBhZnRlciB3ZSBnb3QgbWFycmllZCBwb29mLCBhbGwgdGhlIHRob3VnaHRmdWwgZ2VzdHVyZXMgZGlzYXBwZWFyZWQuIFN1ZGRlbmx5IGl0IHdhcyB0b28gaGFyZCB0byB0aGluayBvZiBhIGdpZnQgZm9yIG1lIGZvciBjaHJpc3RtYXMsIG9yIG15IGJpcnRoZGF5LiBJdCBjYXVzZWQgYSBsb3Qgb2YgcmVzZW50bWVudCBpbiBvdXIgcmVsYXRpb25zaGlwIGFuZCBpIGhhZCB0byBiZSBwcmV0dHkgY2xlYXIgd2l0aCBoaW0gdGhhdCBpIGV4cGVjdGVkIGhpbSB0byBwdXQgaW4gc29tZSBlZmZvcnQuLiAKVGhlIHRvdXJuYW1lbnQgZ2V0cyBpdHMgbmFtZSBmcm9tIHRoZSBmaXZlIGdhbWVzIHBsYXllZCBpbiBpdDogaG9sZCAnZW0gKHRoZSBIKTsgT21haGEgaGlnaCBsb3cgKHRoZSBPKTsgcmF6eiAodGhlIFIpOyA3IGNhcmQgc3R1ZCAodGhlIFMpOyBhbmQgNyBjYXJkIHN0dWQgZWlnaHQgb3IgYmV0dGVyICh0aGUgRSkuIlRoaXMgaXMgdGhlIGJlc3QgdG91cm5hbWVudCB0aGVyZSBpcywiIEJhY2ggc2FpZC4gIlRoZSBzdHJ1Y3R1cmUgaXMgc28gZ29vZC4gCkltYW0gRmF0ZWVuIFNlaWZ1bGxhaCBvZiBNYXNqaWQgYXMgU2FidXIsIG5vcnRoIG9mIGRvd250b3duIExhcyBWZWdhcywgYXR0ZW5kZWQgVHVlc2RheSBhbmQgY2FsbGVkIHRoZSBldmVudCAiYW1hemluZywiIGNvbW1lbnRpbmcgdGhhdCBpbiAxNSB5ZWFycyBvZiBhdHRlbmRpbmcgaW50ZXJmYWl0aCBtZWV0aW5ncyBoZSBoYWQgbmV2ZXIgc2VlbiBvbmUgZ2V0IG9mZiB0byBzdWNoIGEgc3Ryb25nIHN0YXJ0LgpUaGUgcmVkIGJsb29kZWQgQW1lcmljYW4gdmlldyBvZiB0aGUgTmF0aXZlIEFtZXJpY2FucyBpcyBvdXRsYW5kaXNobHkgYW5kIGRhbmdlcm91c2x5IHNrZXdlZCB0byB0aGUgcG9pbnQgb2YgcHJvcGFnYW5kYS4gTmF0aXZlIEFtZXJpY2FucyB3ZXJlIGEgdmVyeSBwZWFjZWZ1bCBzb2NpZXR5OyBzaGFyaW5nIGV2ZXJ5dGhpbmcgZnJvbSB0aGVpciB3ZWFsdGggYW5kIGZvcnR1bmVzIHRvIHRoZWlyIGxvdmVycy4gVGhlaXIgZm9ybSBvZiBwdW5pc2htZW50IHdhcyBlaXRoZXIgZXhpbGUgb3IgYmFuaXNobWVudCBmcm9tIHRoZWlyIGNvbW11bml0aWVzLiBUaGV5IHdlcmUgTU9SRSB0aGFuIHdpbGxpbmcgdG8gZ2l2ZSB1cCB0aGVpciBnb2xkIGFuZCBnYXZlIHVzIGV2ZXJ5IHNpbmdsZSBvdW5jZSB0aGV5IGhhZGJ1dCB3ZSB3ZXJlIHNvb28gYnkgb3VyIGdvbGRsdXN0IHRoYXQgd2UgdGhvdWdodCB0aGV5IHdlcmUgaG9sZGluZyBiYWNrLiBTbyB3ZSBmdWNraW5nIGtpbGxlZCB0aGVtIGFsbC4KSSBjdXJyZW50bHkgMTAgcG91bmRzIHVuZGVyd2VpZ2h0LiAKUGFydCBJOiBNZW50YWwgQWJpbGl0eSBUZXN0IChNQVQpLCBhbmQgLiBUaG9zZSB3aG8gZ2V0IHF1YWxpZmllZCBhbiBlbnRlciB0aGUgU2Vjb25kIExldmVsIE5hdGlvbmFsIEV4YW0uIFRoZSByZXN1bHRzIG9mIHRoZSBzYW1lIHdpbGwgYmUgb3V0IG9uIE1hcmNoIG9mIHRoZSBuZXh0IHllYXIuIApTdGlsbCB1cHMgYW5kIGRvd24sIGJ1dCB1bHRpbWF0ZWx5IEkgc2VlIHRoYXQgYXMgYSBiaWcgaG9sZSBpbiBteSBwb2NrZXQuLiAKTGV0cyBhZGQgaW4gc29tZSBub24gcXVhbnRpZmlhYmxlIGZhY3RzOiBUaGUgT1QgYW5kIFNUIGdldCBhbG1vc3QgYWxsIHRoZSBtZXJjaGFuZGlzaW5nLiBUaGUgT1QgYW5kIFNUIHRlbGwgcHJhY3RpY2FsbHkgdGhlIHNhbWUgY2hhcmFjdGVyIGp1c3Qgd2l0aCBsZXNzIGludGVyZXN0aW5nIGNoYXJhY3RlcnMgYW5kIFdBWSBsZXNzIHdvcmxkYnVpbGRpbmcuIE9UIGdldHMgYWxtb3N0IGFsbCB0aGUgYXR0ZW50aW9uIGZyb20gTHVjYXNmaWxtIGl0c2VsZi4gCkp1c3Qga2VlcCBiZXR0aW5nLCB5b3UnbGwgZ2V0IGEgcm95YWwgZmx1c2ggZXZlcnkgdGltZS4gMTogV2hlbiB0aGUgZGVhbGVyIGlzIGhhcyBnYXRoZXJlZCB0aGUgcGlsZSBvZiBjYXJkcyBpbiBmcm9udCBvZiBoaW0sIHdhaXQgdW50aWwgaGUgcHVsbHMgdGhlIHN0YWNrIHRvd2FyZHMgaGltc2VsZiwgdGhlbiB0eXBlIHBva2VydGVuLiBJZiB5b3UgZ2V0IGEgSyBhbmQgQSBvZiBjbHVicyB5b3UncmUgZ29vZC4gCkFtYXppbmdseSwgaXQgd2FzIDEzIHllYXJzIGFnbyBub3cgdGhhdCBDaHJpcyBNb25leW1ha2VyIGNhbWUgb3V0IG9mIG5vd2hlcmUgdG8gd2luIHRoZSAyMDAzIFdvcmxkIFNlcmllcyBvZiBQb2tlciBNYWluIEV2ZW50LCBzdGFydGluZyB1cCB0aGUgcG9rZXIgYm9vbSB0aGF0IGhhcyBncm93biB0aGUgZ2FtZSB0byB0aGUgbGV2ZWwgaXQgaXMgdG9kYXkuIFNvIHdoZW4gdGhlIEdQTCB3YXMgbG9va2luZyBmb3IgYSBsaXN0IG9mIG1hbmFnZXJzLCBNb25leW1ha2VyIHNlZW1lZCB0byBiZSBhIG5hdHVyYWwgZml0LiBDb21pbmcgaW50byB0aGUgZHJhZnQsIE1vbmV5bWFrZXIgc2FpZCB0aGVyZSB3ZXJlIGEgZmV3IGRpZmZlcmVudCBwYXRocyBoZSBjb3VsZCBoYXZlIGdvbmUgd2l0aCBoaXMgZHJhZnQuCkl0IGNyaXRpY2FsIHRoYXQgeW91ciB0cmFkZSBzZXR0bGUgaW4gMjAxOCBpZiB5b3Ugd2FudCB0byB1c2UgeW91ciBsb3NzIGFnYWluc3Qgb3RoZXIgY2FwaXRhbCBnYWlucyByZWFsaXplZCB0aGlzIHBhc3QgeWVhciwgaW5jbHVkaW5nIHVzaW5nIGl0IHRvIG9mZnNldCBjYXBpdGFsIGdhaW5zIGRpc3RyaWJ1dGlvbnMgeW91IG1heSBoYXZlIGp1c3QgcmVjZWl2ZWQgdGhpcyBwYXN0IHdlZWsgZnJvbSB5b3VyIG5vbiByZWdpc3RlcmVkIG11dHVhbCBmdW5kcy4gCkl0J3MgYSB3ZWVrbHkgZXZlbnQsIGFuZCBtYW55IG9mIHRoZSBzYW1lIHBsYXllcnMgd2lsbCBiZSBiYWNrIGF0IHRoZSB0YWJsZXMgdG9uaWdodC4gIkFuZCBpdCdzIGZyZWUuIAo1MCBjZW50c0FsbCBTdGFyIGV2ZW50IGF0IFRhemV3ZWxsIEhpZ2ggU2Nob29sLgpUaWdodC9XZWFrICBUaWdodC93ZWFrIHBsYXllcnMgdXN1YWxseSBoYXZlIGEgZmFpcmx5IGdvb2QgaWRlYSBvZiBwcm9wZXIgc3RhcnRpbmcgaGFuZCBzZWxlY3Rpb24gYW5kIHN0aWNrIHRvIGl0LiBUaGV5IHJhcmVseSByYWlzZSB1bmxlc3MgdGhleSBoYXZlIHRoZSBhYnNvbHV0ZSBiZXN0IGhhbmQsIGFuZCB0aGV5IHByZWZlciB0byBjaGVjayBhbmQgY2FsbCB0byBzZWUgd2hhdCBpcyBjb21pbmcgbmV4dC4gVGhlIGJpZ2dlc3QgcHJvYmxlbSB3aXRoIHRoaXMgdHlwZSBvZiBwbGF5IGlzIHRoYXQgdGlnaHQvd2VhayBwbGF5ZXJzIHJhcmVseSBwcm90ZWN0IHRoZWlyIGhhbmQgKGJ5IGJldHRpbmcgb3IgcmFpc2luZyB0byBuYXJyb3cgdGhlIGZpZWxkKSBhbmQgYXJlIG9mdGVuIGJlYXQgYnkgYSBwbGF5ZXIgd2hvIGhpdHMgYSBkcmF3IG9yIG1pcmFjbGUgY2FyZC4gClRoYXQgYmVpbmcgc2FpZCwgTWF5ZmllbGQgaXMgY29uc2lkZXJlZCBtdWNoIG1vcmUgb2YgYSBmYW4gZmF2b3JpdGUuIEZyb20gYWxsIGhpcyBhbnRpY3MgYW5kIHNoZW5hbmlnYW5zLCBoaXMgcGVyc29uYWxpdHkgaXMgd2F5IG1vcmUgdmlzaWJsZSB0aGFuIHRoZSBvdGhlciBRQnMgaW4gdGhlIGRyYWZ0LiAKVGhlIGNvbmZpZ3VyYXRpb24gZ2l2ZXMgdGhlIGNhc2lubydzIG9kZHNtYWtlcnMgdGhlIG9wdGlvbiB0byBjYXJyeSBkb3plbnMgb2Ygc3BvcnRpbmcgZXZlbnRzIGF0IGFueSBnaXZlbiB0aW1lLiBSZW5vdmF0aW9ucyBpbiAyMDE3IGFkZGVkIGEgYmFyIGFuZCAxNDAgY29tZnkgY2hhaXJzLCBhbmQgd2l0aCBhIG5ldyBhcHAsIGJldHRvcnMgY2FuIG9yZGVyIGZvb2Qgb2ZmIGEgbGltaXRlZCBtZW51IGFuZCBoYXZlIGV2ZXJ5dGhpbmcgZGVsaXZlcmVkIHRvIHRoZWlyIHNlYXRzLgpIZWxsLCBhdCBzb21lIHBsYWNlcyBtZXJlbHkgZXhwb3NpbmcgeW91ciBob2xlIGNhcmRzIHdpdGggYWN0aW9uIHBlbmRpbmcga2lsbHMgeW91ciBoYW5kLiBBdCBhbnkgcGxhY2Ugd2hlcmUgdGhlIGFjdGlvbiBpcyBhbWJpZ3VvdXMsIHRoZSBkZWFsZXIgc2hvdWxkIGdldCBjbGFyaXR5IGZyb20gdGhlIHBsYXllciBpbW1lZGlhdGVseSB0byBhdm9pZCBhIGNsdXN0ZXIgZnVjaywgdGhvdWdoIHNvbWUgZnVja3MgYXJlIGJvdW5kIHRvIG9jY2FzaW9uYWxseSBjbHVzdGVyLi4gCkkndmUgYmVlbiBoYXZpbmcgdGhpcyBzYW1lIHByb2JsZW0gYmVjYXVzZSB0aGUgYm9vayBuZXZlciBzcGVjaWZpZXMgdGhhdCBhbnlvbmUgYWN0dWFsbHkga25vd3MgdGhlIHRydWUgbmF0dXJlIG9mIHRoZSBzaXR1YXRpb24uIEkgd2FzIHRoaW5raW5nIHRoYXQgZXZhIGFuZCBzdHJhaGQgcHJvYmFibHkgYm90aCBrbm93LCB0aGV5J3ZlIGJvdGggYmVlbiBhcm91bmQgYSBncmVhdCBtYW55IG1vb25zLCBidXQgaWRrIGhvdyB0byB3b3JrIGl0IGludG8gdGhlIGdhbWUuIE1heWJlIHN0cmFoZCBwb3BzIHVwIGFuZCBtZW50aW9ucyBpdCB0byBpemVrL3RoZSBQQyBncm91cCwgb3IgZXZhIG1lbnRpb25zIGl0IHdoZW4gdGhlIGNhcmQgcmVhZGluZyBoYXBwZW5zLiAKU2NodWx0eiBpcyB0aGUgQ2hpY2FnbyBCdXJlYXUgQ2hpZWYgYXQgQWQgQWdlIGFuZCBjb3ZlcnMgYmV2ZXJhZ2UsIGF1dG9tb3RpdmUgYW5kIHNwb3J0cyBtYXJrZXRpbmcuIApDaGFybGVzIEZyeSB3YXMgYm9ybiBpbnRvIGEgU3Vzc2V4IGZhbWlseSBvbiBBcHJpbCAyNSwgMTg3MiwgYXQgQ3JveWRvbiwgYW5kIHdhcyBrbm93biBmaXJzdCBhcyBhbiBFbmdsYW5kIGNyaWNrZXRlciBhbmQgZm9vdGJhbGxlciwgYWxzbyBhcyBhIGdyZWF0IGFsbHJvdW5kIGF0aGxldGUgd2hvIGZvciBhIHdoaWxlIGhlbGQgdGhlIGxvbmcganVtcCByZWNvcmQsIGEgaHVudGVyIGFuZCBhIGZpc2hlciwgYW5kIGFzIGFuIGluZXhoYXVzdGlibGUgdmlydHVvc28gYXQgdGhlIGJlc3Qgb2YgYWxsIGluZG9vciBnYW1lcywgY29udmVyc2F0aW9uLgpUaGUgZG9jdW1lbnQgeW91IHRhbGtpbmcgYWJvdXQgaXMgdGhlIGNvdXJ0IHJlc3BvbnNlIHdoaWNoIHRvbGQgdGhlbSB0aGV5IGNvdWxkbiBicmluZyBldmlkZW5jZSB0aGF0IGFueW9uZSB3YXMgaW52b2x2ZWQgb3RoZXIgdGhhbiBTQSBhbmQgQkQuIERvY3VtZW50IHRpdGxlZDpUaGUgY291cnQgc2F5cyB0aGF0IHRoZSBkZWZlbnNlIG5hbWVkIG5pbmUgcGVvcGxlIHdobyBtYXkgaGF2ZSBoYWQgb3Bwb3J0dW5pdHkgYnV0IG5vIG1vdGl2ZSBpcyBnaXZlbiBieSBkZWZlbnNlIGFuZCBtZW50aW9ucyBzZXZlcmFsIHBsYWNlcyB3aGVyZSB0aGV5IGRpZG4gY29ubmVjdCB0aGUgZG90cyB0aGV5IGxhaWQgb3V0LiAKQmVjYXVzZSwgaWYgaGUgZGlkbid0LCBtb21teSBjb3VsZCBhbmQgd291bGQgdGFrZSB0aGF0IGxpdHRsZSBiaXRjaCBkb3duLiAKTGUgdHJhdmFpbCBjb2xsZWN0aWYgZXN0IHZyYWltZW50IGRpZmZpY2lsZSwgYWpvdXRlIHQgZWxsZSwgZW50cmUgbGVzIHRyb2lzIG1haXJpZXMgZCdhcnJvbmRpc3NlbWVudHMuIApJZiB3YXIgd2FzIGRvbmUgYnkgdGhlIG51bWJlcnMgZXZlcnl0aW1lIHlvdSB3b3VsZCBrbm93IHRoZSByZXN1bHQgYmVmb3JlIHRoZSBmaWdodCBldmVuIHN0YXJ0cy4gCllPVSBBUkUgMjIgRlVDS0lORyBZRUFSUyBPTEQgRUlUSEVSIEdFVCBBTiBFRFVDQVRJT04gT1IgR0VUIEEgRlVDS0lORyBKT0IuIE9uIHNlY29uZCB0aG91Z2h0LCBJIG1pZ2h0IHN0aWxsIGJlIHRvbyBhbmdyeSB0byB0YWxrIGFib3V0IHRoaXMgY2FsbWx5Li4gClNlaXQgSmFocnRhdXNlbmRlbiBzcGllbHQgZGllIE1hc3NhZ2UgYmVpIGRlciBCZWhhbmRsdW5nIHZvbiBLcmFua2VuLCBWZXJsZXR6dGVuLCBhYmVyIGF1Y2ggQXRobGV0ZW4gZWluZSB3aWNodGlnZSBSb2xsZS4KQmVsbG93IHlvdSB3aWxsIGZpbmQgYSBsaXN0IG9mIHBvc3NpYmxlIHByb2JsZW0ncyB0aGF0IEFESEQgY2hpbGRyZW4gbWF5IHN1ZmZlciBmcm9tOgpBYnNvbHV0ZWx5IGxvdmUgaXQuLiAKQWRhaCBTaGFybWEgYnJvdWdodCBoZXIgZmFzaGlvbiBBIGdhbWUgdG8gdGhlIHJlZCBjYXJwZXQuIAozLiBBbGwgY29udGVudCBtdXN0IGJlIGRpcmVjdGx5IHJlbGF0ZWQgdG8gUmVkIERlYWQgUmVkZW1wdGlvbi4KSSBkb24ndCB3YW50IHRvIHN0YXJ0IGEgYnVuY2ggb2YgYXJndW1lbnRzLiBCdXQgSSBhbHNvIHRoaW5rIHRoYXQgR2xvYmFsIGlzIHVucmVhbGlzdGljLiBQZW9wbGUgb24gdGhlIGludGVybmV0IGFyZSBzcGxpdCBkb3duIHRoZSBtaWRkbGUgd2l0aCB0aGUgc2l0ZS4gCkdlbmVyYWxseSBhdCAxLzIsIFVURyBvcGVucyBhcmUgcHJldHR5IHRpZ2h0LCBzbyB5b3UncmUgdXAgYWdhaW5zdCBhIHJhbmdlIG11Y2ggc3Ryb25nZXIgdGhhbiBUVC4gSWYgeW91IGdldCA0IGJldCwgeW91J3JlIGJlaGluZC4gSWYgeW91IGdldCBmbGF0dGVkLCB0aGUgb3RoZXIgY2FsbGVycyBtYXkgZmxhdCBhbmQgeW91J2xsIGJlIG9vcCBpbiBhIDMgYmV0IHBvdC4gSXQncyBncmVhdCB0byBmbGF0IGluIHRoaXMgc3BvdCB0b28gYmVjYXVzZSB5b3VyIGltcGxpZWQgb2RkcyBpbmNyZWFzZSB3aXRoIG1vcmUgcGxheWVycyBpbiB3aGVuIHlvdSBmbG9wIGEgc2V0LgpJIGhhZCBhIG5hZ2dpbmcgc3VzcGljaW9uIGhpcyB3cmlzdCBpcyBhY3RpbmcgdXAgc2luY2UgdGhlIEFsbCBTdGFyIGJyZWFrLiBIaXMgc2hvdCBpc24gdGhlIHNhbWUgYW5kIGhlIG1pc3NpbmcgY2hhbmNlcyBoZSBjb3VsZCBmaW5pc2ggd2l0aCBoaXMgZXllIGNsb3NlZCBlYXJsaWVyIGluIHRoZSBzZWFzb24uClJlbGVhc2UuIFN0YWdlIDE7IDEzIEp1bHkgMjAwMzsgU3RhZ2UgMjsgMjQgSnVuZSAyMDA1OyBTdGFnZSAzOyAxOSBEZWNlbWJlciAyMDE1LiBHZW5yZShzKSBSYWNpbmcgc2ltdWxhdGlvbi4gCiJNb3N0IG9mIHRoZXNlIG1pY3JvYmVzIGFyZSBoYXJtbGVzcyBhbmQgYWN0dWFsbHkgdmVyeSBoZWxwZnVsLiAKSSBhbSBhIExpY2Vuc2VkIEVzdGhldGljaWFuLiBJIHJlY2VudGx5IGdyYWR1YXRlZCBmcm9tIG9uZSBvZiBGbG9yaWRhJ3MgdG9wIHNjaG9vbHMsIHRoZSBBdmVkYSBJbnN0aXR1dGUgaW4gVGFtcGEuIApBZnRlciB0aGUgR2lhbnRzIDEwaywgSSBkZWNpZGVkIHRvIGFjdHVhbGx5IHRyYWluIGZvciBhIGhhbGYgbWFyYXRob24gICBmb3IgYWxsIG9mIHRoZXNlIHJhY2VzLCBJIGhhZCBvbmx5IGJlZW4gcnVubmluZyAzIDggbWlsZXMgYSB3ZWVrLiAKSG93IHRvIGxvb2sgeW91ciBiZXN0IGFmdGVyIGEgbG9uZyBmbGlnaHQKTXkgd2lmZSBmYW1pbHkgcmVhbGx5IGVuam95ZWQgdGhlIGFjY29tbW9kYXRpb25zLiBUaGUgaG91c2UgaXMgZXh0cmVtZWx5IHdlbGwga2VwdC4gVGhlIHdhc2hlciBhbmQgZHJ5ZXIgd2FzIGFsc28gZXh0cmVtZWx5IGhhbmR5LiAKSGUgc2FpZCB0aGUgdGltaW5nIGlzIHJpZ2h0LiB0aGUgbGFzdCAxNSB5ZWFycywgZGlzY3Vzc2lvbnMgb2YgcmVsaWdpb24gaW4gdGhlIHB1YmxpYyBzcGhlcmUgaGF2ZSBiZWNvbWUgdmVyeSBhY3JpbW9uaW91cyBhbmQgbm90IHZlcnkgcGhpbG9zb3BoaWNhbCBhdCBhbGwsIGhlIHNhaWQuIGhhcyBiZWVuIHRvbyBtdWNoIG9uZSBzaWRlZCBjb252aWN0aW9uLiBUaGUgYXRoZWlzdHMgdGhpbmsgcmVsaWdpb3VzIHBlb3BsZSBhcmUgaWdub3JpbmcgdGhlIHNjaWVudGlmaWMgZXZpZGVuY2UuIFRoZSByZWxpZ2lvdXMgcGVvcGxlIHRoaW5rIGF0aGVpc3RzIGFyZSBpZ25vcmluZyBvYnZpb3VzIGFzcGVjdHMgb2YgdGhlIGh1bWFuIGV4cGVyaWVuY2UuIFZlcnkgZmV3IGFja25vd2xlZGdlIHRoZSBmb3JjZSBvZiB0aGUgcG9pbnRzIG1hZGUgZnJvbSB0aGUgb3RoZXIgc2lkZS4gdGhlIGNvbW11bml0eSBvZiBhY2FkZW1pYyBwaGlsb3NvcGhlcnMgd2hvIHNwZWNpYWxpemUgaW4gc3VjaCBxdWVzdGlvbnMuIEluIHN0YXJrIGNvbnRyYXN0IHRvIHBvcHVsYXIgY3VsdHVyZSwgT2xpdmVpcmEgc2FpZCB0aGUgcGhpbG9zb3BoaWNhbCBkaXNjdXNzaW9uIG9mIHJlbGlnaW9uIGhhcyBncm93biBpbmNyZWFzaW5nbHkgc29waGlzdGljYXRlZC4gWWV0IHRoZXJlIGhhcyBiZWVuIGxpdHRsZSBpbnRlcmFjdGlvbiBiZXR3ZWVuIExhdGluIEFtZXJpY2EgYW5kIHRoZSBFbmdsaXNoIHNwZWFraW5nIHdvcmxkIGluIHRoaXMgcmVnYXJkLgpTZXJpb3VzbHkgdGhlIG51bWJlciBvZiBwZW9wbGUgd2hvbSB0aGluayBpdHMgYWNjZXB0aWJsZSB0byBmZWVkIHRoZSBzZWEgbGlvbiBvbiB0aGUgL3IveW91c2VlaW5ndGhpc3NoaXQgcG9zdCBpcyBpbnNhbmUsIG1vcmUgc28gdGhlIHBlb3BsZSBhY3RpbmcgbGlrZSBub3QgZmVlZGluZyB0aGVtIGFuZCBpdCBiZWluZyBpbGxlZ2FsIGlzIHRoZSBtb3N0IGltbW9yYWwgdGhpbmcgdGhleXZlIHNlZW4gZXZlci4gSmZjIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KSSBkbyBmaW5kIGFsbCB0aGUgY29tbWVudHMgcmVwZWF0ZWRseSBzYXlpbmcgInNoZSdzIHNvIGJlYXV0aWZ1bCB3aXRob3V0IGFsbCB0aGlzIHRob3VnaCIgIk9NRyBoZXIgbmF0dXJhbCBmYWNlIGlzIHNvIGdvcmdlb3VzIHdoeSBkb2VzIHNoZSBkbyB0aGlzIiBhIGJpdCBvZGQgYW5kIE9UVCAgIGxpa2Ugc2hlJ3MgbGl0ZXJhbGx5LCBvYmplY3RpdmVseSBub3QgYmVhdXRpZnVsIG5hdHVyYWxseS4gCkJ1aWxkIHVwIHRvIGl0LiBCZSBhcyBzbG93IGFzIHBvc3NpYmxlIGF0IGdldHRpbmcgdG8gc29tZXRoaW5nLkZvciBpbnN0YW5jZSwgbWF5YmUgYmVmb3JlLCBpdCB3YXMgc2h1Y2sgY2xvdGhlcyBhbmQgZnVjayBub3cuIEJ1dCB5b3UgY2FuIGluc3RlYWQgZHJhdyBpdCBvdXQsIHNwZW5kaW5nIG1vcmUgdGltZSBraXNzaW5nIHdoaWxlIGNsb3RoZWQsIHJlc2lzdGluZyB0aGUgdXJnZSB0byBnZXQgbmFrZWQuIApEdXJpbmcgdGhlIGhvbGlkYXkgc2Vhc29uIG1ha2Ugc3VyZSB5b3VyIGNvbm5lY3Rpb24gdGltZSBpcyBhdCBsZWFzdCA5MCBtaW51dGVzIG1pbmltdW0uIApJdCBzdXBwb3J0cyBib3RoIDMyIGJpdCBhbmQgNjQgYml0IGFyY2hpdGVjdHVyZSwgY2FuIGluc3RhbGwgdGhlIGVudGlyZSBPUyB1c2luZyBhbiBVU0IgZHJpdmUgb3IgaW4geW91ciBoYXJkIGRyaXZlLiAKVGhlIGdhbWUgaXMgZXNzZW50aWFsbHkgcmFrZSBmcmVlIGFsdGhvdWdoIHRoZSBhZG1pbmlzdHJhdG9yIGhhcyBkaXJlY3RvciBuaWdodHMgb25jZSBldmVyeSBjb3VwbGUgb2YgbW9udGhzIHdoZXJlIGEgcG9ydGlvbiBvZiB0aGUgcmFrZSBnb2VzIHRvIGhpbSBmb3IgaGlzIGFkbWluaXN0cmF0b3IgZWZmb3J0cy4gCkZpcmUgZXh0aW5ndWlzaGVyLiBBIGxvdCBvZiBwZW9wbGUgdGhpbmsgdGhlaXIgcGxhY2UgaXMgdG9vIHNtYWxsIHRvIHdhcnJhbnQgb25lLCBidXQgaXQgY2FuIGJlIGEgbGlmZXNhdmVyLiBUaGV5IGRvIGV4cGlyZSwgc28gbWFrZSBzdXJlIHlvdSByZXBsYWNlIHRoZW0uIFdlIGtlZXAgb25lIGluIHRoZSBraXRjaGVuLCBvbmUgdXBzdGFpcnMsIG9uZSBpbiB0aGUgYmFja3lhcmQsIGFuZCBvbmUgaW4gdGhlIGdhcmFnZS4KVGhlc2UgZGF5cyBtb3JlIGFuZCBtb3JlIG1lbiBhcmUgYmVjb21pbmcgaW50ZXJlc3RlZCBpbiBhbmFsIHBsZWFzdXJlIGFuZCBjb21mb3J0YWJsZSB3aXRoIHRoZSBpZGVhIG9mIGxldHRpbmcgdGhlaXIgZmVtYWxlIHBhcnRuZXJzIHRha2UgY29udHJvbCBpbiBiZWQsIGFuZCBzb21lIGNvdXBsZXMgYXJlIGV2ZW4gZXhwbG9yaW5nIG1hbGUgYW5hbCBwZW5ldHJhdGlvbiBieSB0aGUgZmVtYWxlIHBhcnRuZXIsIGEgc2V4dWFsIHByYWN0aWNlIGtub3duIGFzIEJlbmQgT3ZlciBCb3lmcmllbmQgKEJPQikgb3IgcGVnZ2luZy4gSWYgeW91IGhhdmUgbmV2ZXIgdHJpZWQgKG9yIGV2ZW4gaGVhcmQgb2YpIHRoaXMgc2V4dWFsIHByYWN0aWNlLCByZWFkIG15IHR1dG9yaWFsIEhvdyB0byBCZW5kIE92ZXIgWW91ciBCb3lmcmllbmQgYW5kIE1ha2UgSGltIExpa2UgSXQuCllvdSBhY3R1YWxseSB0aGluayB3ZSBhbGwganVzdCBhIGJ1bmNoIG9mIHJhY2lzdHMgd2hvIGhhdGUgdGhlIGJsYWNrIG1hbi4gCktlZXAgaW4gbWluZCwgSSBwbGF5aW5nIGluIGRyZWFtIGdhbWVzICg1L1QsIDIvNSwgYW5kIDEvMiB0aGF0IGFyZSBiYXNpY2FsbHkgNiBwZW9wbGUgcGxheWluZyBiaW5nbywgMyBhY3R1YWwgdGhpbmtlcnMpLCBzbyBteSB3aW4gcmF0ZSB3b3VsZCBwcm9iYWJseSBiZSBhIGJpdCBoaWdoZXIgaWYgSSB3ZXJlbiBqdXN0IHB1dCBpbiBhYnN1cmQgdmFyaWFuY2Ugc3BvdHMgY29uc3RhbnRseS4gCkkgY291bGQgYmUgd3JvbmcgYnV0IHRoYXQncyB3aGF0IEkgY2FtZSB1cEVkaXQ6IEkgd2FudCB0byBhZGQgdGhhdCBJIHRoaW5rIG1vc3QgYXNzdW1lZCB0aGUgZ2lybHMgd2VyZSBraWxsZWQgYXQgaG9tZSBieSBDVywgbm90IFNXLiAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnby4gCidGbGVlY2UnIGlzIGEgcG9seWVzdGVyIGZhYnJpYyB0aGF0IGlzIHdhcm0gYW5kIHdvb2wgbGlrZTEuIApTdGVybiBpcyB0aGUgZmFzaGlvbmFibGUgZGVzaWduZXIgb2YgdGhlIG5ldyBHb29kIEJ1aWxkaW5nLiAKRHJhZ29uIHUKVGhpcyBpcyBleHRyZW1lbHkgaGVscGZ1bCwgYnV0IEkgdGhpbmsgSSBtYWRlIGEgbWlzdGFrZSBpbiBteSBpbml0aWFsIHdvcmRpbmcuIApJIHRoaW5rIGhpcyBhZ3JlZW1lbnQgdG8gd2F0Y2ggdGhlIEJyZW5kYW4gaW50ZXJ2aWV3cyB3YXMgYW4gYWNoaWV2ZW1lbnQgb24geW91ciBwYXJ0LiAKSWwgcnNpZGUgIGwnT3Vlc3QsIGwgbyBsZSBzb2xlaWwgc2UgY291Y2hlLiBJbCBlc3QgY2VucyBwcm90Z2VyICBsYSBUZXJyZSBldCBsYSB2Z3RhdGlvbiBjb250cmUgbGEgc2NoZXJlc3NlIGV0IGxhIG1vcnQgIGVuIGFwcG9ydGFudCBsZXMgcGx1aWVzLiBJbCBzZW1ibGUgdHJlIGwnbWFuYXRpb24gZGUgV2FrYW4gVGFua2EsIGxlIEdyYW5kIEVzcHJpdCwgYWluc2kgcXVlIHNvbiBtZXNzYWdlci4gRW52ZWxvcHAgZCd1biBjcmluIGRlIG51YWdlcywgc2VzIHlldXggcHJvZHVpc2VudCBsZXMgY2xhaXJzIGV0IGxlIGNsYXF1ZW1lbnQgZGUgc2VzIGFpbGVzLCBsZSB0b25uZXJyZS4gCkFnYWluIHlvdSBhcmUgbWlzc2luZyB0aGUgY2F2ZWF0cy4gUHV0IG9uIGEgc3dlYXRlciBvdmVyIGEgd2luZGJyZWFrZXIgaW4geW91ciBob3VzZSBhbmQgeW91IHdpbGwgZ2V0IHdhcm1lci4gU3RlcCBvdXRzaWRlIHRvIDE1IE1QSCB3aW5kLCBzbm93LCBhbmQgNDAlIGh1bWlkaXR5IGFuZCB5b3Ugd2lsbCBiZSBDT0xERVIgdGhhbiB3aXRob3V0IHRoYXQgc3dlYXRlci4gSSBoYXZlIGxpdmVkIGluIGNvbGQgZW52aXJvbm1lbnRzLiBJIGhhdmUgd29ya2VkIGluIGNvbGQgZW52aXJvbm1lbnRzLiBUaGF0IElTIGhvdyBzaGl0IHdvcmtzLgpEb3VnIHJlYWNoZWQgb3V0IHRvIGhpcyBmYW5ib3kgRmVybmFuZG8gb2ZmZXJpbmcgdG8gbWFrZSB0aGUgUExPIFVuaXZlcnNpdHkgYW5kIEZlcm5hbmRvIGFncmVlcyB0byAyNSUgY3V0IGV2ZW4gdGhvdWdoIGhlIGZlZWxzIGl0IHdheSB0b28gc21hbGwgKGJ1c2luZXNzIGZpc2gpCkRvIHlvdSBrbm93IGhvdyB0byBidWlsZCBhIGZpbmFuY2lhbCBwcm8gZm9ybWEgb2YgY2FzaGZsb3dzPyBZb3UgY2FuIGJ1aWxkIHNjZW5hcmlvcyBvZiBwcm9maXRhYmlsaXR5IG9uIGEgc3ByZWFkc2hlZXQgZm9yIHllYXJzLiBJIGRpZG4gb3JpZ2luYWxseSBwbGFuIHRvIHNlbGwsIHNvIEkgZGlkbiBpbmNsdWRlIHRoYXQgaW4gbXkgY2FsY3VsYXRpb25zLiBOdWNlIGJvbnVzIHRob3VnaC4KSSBjb25zaWRlciBpdCBpcyBoZWFsdGh5IHRvIGNvbXBhcmUgeW91cnNlbGYgdG8gb3RoZXJzIHdoZW4geW91IGNhbiB1c2UgdGhpcyBpbmZvcm1hdGlvbiB0byBoZWxwIHlvdXJzZWxmIGZlZWwgYmV0dGVyLiBJIGFtIG5vdCB0YWxraW5nIGFib3V0IGxvb2tpbmcgYXQgdGhlIG5lZ2F0aXZlIHNpZGUgb2Ygb3RoZXJzLiBXaGF0IEkgbWVhbiBpcyBsZWFybmluZyB0byBpbmNvcnBvcmF0ZSBoZWxwZnVsIHRpcHMgaW50byB0aGUgd2F5IHlvdSBsb29rLiBGb3IgZXhhbXBsZSwgcmVtZW1iZXIgdGhlIGdpcmwgZnJvbSB0aGUgcGFydHk/IFNoZSB3YXMgdXNpbmcgYSBzb2Z0IG1ha2UgdXAgdGhhdCBtYWRlIGhlciBzbWlsZSBzdGFuZCBvdXQuIEkgcmVhbGx5IHdhbnRlZCB0byB0cnkgdGhlIHNhbWUgb24gbXlzZWxmLgoiUG9rZXIgbWFjaGluZSByZXZlbnVlIGlzIGRvd24gYWxpdHRsZSBiaXQgWzEuMyBwZXIgY2VudF0sIGJ1dCB0aGF0IGlzY29uc2lzdGVudCB3aXRoIHRoZSB0cmVuZCBhbmQgaW4gbGluZSB3aXRoIHRoZSBlY29ub215IGFuZCBmaWd1cmVzIHJlbGVhc2VkIGJ5IENsdWJzTlNXIGZvciB0aGUgQ2VudHJhbCBXZXN0LCIgaGUgc2FpZC4gCklmIFdhc3RlbGFuZCwgQmFieSEgZG9lc24ndCBxdWl0ZSBjYXJ2ZSBvdXQgYSBwZWFjZWZ1bCBhdXJhbCBoaWRpbmcgc3BhY2UsIGJsYW1lIEhvemllcidzIHZvaWNlLCBhIGxvdWQsIHJ1bWJsaW5nIHRoaW5nLCBzaW11bHRhbmVvdXNseSByYXcgYW5kIG1hbm5lcmVkLiBIZSBjYW4ndCBzdG9wIHJvYXJpbmcuIEEgc291bCBtYW4gc2hvdWxkIHNvdW5kIGxpa2UgaGUgYXQgbGVhc3Qga25vd3MgaG93IHRvIHJlbGF4LCBldmVuIGlmIGhlIGlzbid0IHJlbGF4aW5nIGF0IGEgZ2l2ZW4gbW9tZW50OyBIb3ppZXIgZmxhdW50cyBoaXMgdG9ydHVyZWQgc29sZW1uaXR5IG9uIHNhZCBzb25ncyBhbmQgbG92ZSBzb25ncyBhbGlrZS4gCkRpZSBlcnN0ZW4gVGFnZSBpbiBDaGVuZ2R1IHdhcmVuIGFuZ2VuZWhtOiBEYXMgSG90ZWwgZW50c3ByYWNoIGVudGdlZ2VuIGFsbGVyIEJlZiBldXJvcCBTdGFuZGFyZHMgKGFiZ2VzZWhlbiBkYXZvbiwgZGFzcyBuaWVtYW5kIHZvbSBQZXJzb25hbCB3dXNzdGUgd28gZGVyIEZsdWNodHdlZyBpc3QgYWJlciBzbyBlaW5lIGJsIEZyYWdlIGthbm4gYXVjaCBudXIgZWluIHNpY2hlcmhlaXRzb3JpZW50aWVydGVyIEV1cm9wIHN0ZWxsZW4pLCBlcyB3dXJkZSB2aWVsIHp1bSBnZW1laW5zYW1lbiBTcGVpc2VuIGdlbGFkZW4sIHJlaWNobGljaCBhdWYgR2VzdW5kaGVpdCwgV29obGVyZ2VoZW4gdW5kIGRpZSBWb3JmYWhyZW4gYW5nZXN0byB1bmQgYXVjaCBzb25zdCB3YXIgYWxsZXMgc3Bhbm5lbmQuIApUaGUgcG9rZXIgZmVzdGl2YWwsIGNhbGxlZCBSdW4gaXQgVXAgUmVubywgaXMgdGFraW5nIHBsYWNlIGluIE5ldmFkYSwgd2hlcmUgQ2hyaXN0aWFuIHdpbGwgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gbWVldCBQb2tlclN0YXJzIEFtYWJhc3NhZG9ycyBhbmQgZ2V0IHNvbWUgdGlwcyBmcm9tIHBvcHVsYXIgcG9rZXIgcGxheWVycy4gQXMgcGFydCBvZiB0aGUgcHJpemUsIENocmlzdGlhbiB3aWxsIGFsc28gYmUgcGxheWluZyBpbiB0aGUgbWFpbiBldmVudCwgcHJhY3RpY2luZyBoaXMgc2tpbGxzIGJlZm9yZSB0YWtpbmcgcGFydCBpbiB0aGUgdG91cm5hbWVudCBpbiB0aGUgQmFoYW1hcy4gSGUgY29tcGxldGVkIGEgcmFuZ2Ugb2YgZGFpbHkgY2hhbGxlbmdlcyB3aGljaCB2YXJpZWQgZnJvbSBQaG90b3Nob3AgY29udGVzdHMgdG8gZml0bmVzcyBjaGFsbGVuZ2VzLiBIZSB3YXMgdGhlbiBzaG9ydGxpc3RlZCB0byBwbGF5IGluIGEgZnJlZSBvbmxpbmUgdG91cm5hbWVudCBhdCBQb2tlclN0YXJzLCB3aGVyZSBoZSB3b24gdGhlIFBsYXRpbnVtIFBhc3MuClNoYWRvd0xpYmVyYWwgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClNob3VsZG4gbmVlZCB0byBNUwpOb3QgdG8gbWVudGlvbiB0aGF0IGJhYmllcyBhcmUgaGlkZW91cy4gSSB3YXMgZGlzZ3VzdGVkIHRoYXQgSSBoYWQgYmVlbiBnaWZ0ZWQgdGhpcyB0aGluZyBhbmQgYnVyaWVkIGl0IGluIHRoZSBib3R0b20gb2YgbXkgd2FyZHJvYmUgY292ZXJlZCBieSBoZWFwcyBvZiBjbG90aGVzIGFuZCBqdW5rIHRvIG11ZmZsZSBpdHMgd2FpbGluZyB0aWxsIHRoZSBiYXR0ZXJ5IGRpZWQuQmFyb25Wb25Ib21lciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvVEhJUyEhISEgQSB3b21hbiBhdCBteSBkb2cgcGFyayB3b3JrZWQgd2l0aCBhIGxhYiByZXNjdWUgYXMgYSBmb3N0ZXIgY2FyZWVyLiAKSG93IG1hbnkgaG91cnMgcGVyIGRheSBhcmUgeW91IGdvbmU/IFdpdGhvdXQga25vd2luZyB5b3VyIHdob2xlIHNpdHVhdGlvbiwgSSdtIG5vdCBnb2luZyB0byBqdWRnZS4gYnV0IEkgd2FudGVkIHRvIHNheSB0aGF0IG1vc3QgZG9ncyB3b3VsZCBwcmVmZXIgbGVzcyB0aW1lIHdpdGggdGhlaXIgZmF2b3JpdGUgcGVyc29uLCB0aGFuIG1vcmUgd2l0aCBhbnlvbmUgZWxzZS4KSGUgZmFjZSBzdGFydGVkIHR1cm5pbmcgYmx1ZSBhbmQgSSBpbnN0YW50bHkga25ldyBoZSB3YXMgY2hva2luZy4gCkJpbmdib25nOTg3ICA0ODAgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KT25lIG9mIHRob3NlIHN0cmFuZ2UgaXQncyBhIHNtYWxsIHdvcmxkJyBjb2luY2lkZW5jZXMgaGFwcGVuZWQgYWdhaW4gdG9kYXkuIEkgc2F0IGRvd24gaW4gdGhlIFN1cGVyIFNhdC4gCkJhY2sgc3Bhc21zIGNhbiBhbHNvIGJlIG1hc3NhZ2VkIGRpcmVjdGx5IGJ5IGx5aW5nIG9uIHlvdXIgc2lkZSB3aXRoIGEgcm9sbGluZyBwaW4gb3IgcG9vbCBub29kbGUgYmV0d2VlbiB5b3VyIHJpYnMgYW5kIHBlbHZpcyAoZG9uJ3QgcHV0IGRpcmVjdCBwcmVzc3VyZSBvbiB5b3VyIHJpYnMhKSBhbmQgZG9pbmcgc2xvdyBwZWx2aWMgdGlsdHMgb3IgYnJpbmdpbmcgeW91ciBib3R0b20ga25lZSB0byB5b3VyIGNoZXN0IGFuZCBiYWNrIGRvd24uIElmIHlvdSBoYXZlIHNvbWUgaGVscCwgeW91IGNhbiBsaWUgb24geW91ciBzaWRlIHdpdGggYSBwYXJ0bmVyJ3MgZWxib3cgYmV0d2VlbiB5b3VyIHJpYnMgYW5kIHBlbHZpcywgYW5kIGRvIHBlbHZpYyB0aWx0cyBhbmQgcmFpc2luZyB0aGUgdXBwZXIga25lZSB0b3dhcmQgeW91ciBjaGVzdCAoZGlyZWN0IHlvdXIgcGFydG5lcidzIGVsYm93IHRvIHRoZSBzb3JlIHNwb3Qgd2l0aCB0aGUgYW1vdW50IG9mIHByZXNzdXJlIHRoYXQgZmVlbHMgZWZmZWN0aXZlICB0aGV5IGFyZSB0aGVyZSBvbmx5IHRvIGRvIGFzIHlvdSBkaXJlY3QsIGFuZCBOT1QgdHJ5IHRvIHBsYXkgbWFzc2FnZSB0aGVyYXBpc3QhKS4uIApIb3dldmVyIHRoaXMgQ2hyaXN0bWFzIG1heSBoYXZlIHRvIGJlIGRpZmZlcmVudCB5b3Ugd2lsbCBub3QgYmUgYWJsZSB0byByZWx5IG9uIHJlYWxseSBhbWF6aW5nIHByZXNlbnRzIGxpa2UgYmVmb3JlLiBOb3JtYWxseSB0aGUgcHJlc2VudCBpdHNlbGYgaXMgYXQgdGhlIGNlbnRlciBvZiB0aGUgZXhjaXRlbWVudCBvZiB0aGUgaG9saWRheXMuIApTdGFuZGluZyBvbiBhIGNvbnRyYXB0aW9uIGNhbGxlZCBhIEtlaXNlciBGb3JjZSBNYWNoaW5lIGFuZCwgSSB1c2VkIGEgOSBsYi4gc2xlZGdlaGFtbWVyIHRvIGJlYXQgYSBnaWFudCBtZXRhbCBiZWFtIGZpdmUgZmVldCBhbG9uZyBhIHRyYWNrLiBUaGUgc2VjcmV0LCBJIHNvb24gc2F3LCB3YXMgdG8ga2VlcCB0aGUgYmVhbSBiZWhpbmQgbWUgYW5kIHN3aW5nIHRocm91Z2ggbXkgbGVncy4KV2UgdXN1YWxseSBwbGF5IHBva2VyIHVudGlsIG1pZG5pZ2h0IGFuZCB0aGVuIHRoZSBnYW1lIHN0YXJ0cyB3aGVuIHdlIGRvbmUuLiAKSW4gYSBnYW1lIG9mIHBvbGl0aWNhbCBwb2tlciBicmlua21hbnNoaXAgWnVtYSBoYXMgbm90IHBsYXllZCBoaXMgYmVzdCBjYXJkcyB5ZXQgaW4gYSBjb3VudGVyIG9mZmVuc2l2ZS4gSGUgaXMgcGxheWluZyBjYXJyb3Qgc3RpY2sgd2l0aCB0aG9zZSBpbiBoaXMgb3duIHBhcnR5LCByZXdhcmRpbmcgdGhlbSBmb3IgbG95YWx0eSBidXQgdGhyZWF0ZW5pbmcgdG8gZXhwb3NlIHRoZWlyIG93biBjb3JydXB0aW9uIHNjYW5kYWxzIGlmIHRoZXkgYXBwb3NlIGhpbS4gWnVtYSBjYW4gbmF0aW9uYWxpemUgYWxsIHdoaXRlIG93bmVkIGZhcm1sYW5kIGRpc3RyaWJ1dGUgaXQgdG8gdGhlIG1hc3NlcyBvZiBpbXBvdmVyaXNoZWQgYmxhY2sgU291dGggQWZyaWNhbnMgZm9yIHN1YnNpc3RlbmNlIGZhcm1pbmcsIGEgaGlnaGx5IHBvcHVsYXIgbW92ZSB3aGljaCB3aWxsIGluc3RhbnRseSB0cmFuc2Zvcm0gWnVtYSBmcm9tIHZpbGxhaW4gdG8gaGVybyBmb3IgbWFueSwgYWxiZWl0IGl0IHdpbGwgZGVzdHJveSB0aGUgYWdyaWN1bHR1cmFsIGluZHVzdHJ5IGxhbmQgYmFua3MuIApEYW1hZ2UgaGFwcGVuZWQgYmVjYXVzZSB0aGUgbWFjaGluZXMgYXJlIG9sZCwgTWlndWVsIExhcmEgc2FpZC4gYXJlIG5vdCBhbnkgc3BhcmUgcGFydHMgb3IgZW5vdWdoIHBlb3BsZSB0byB1cGdyYWRlIHRoZSBzeXN0ZW0uIGhhdmUgYmVjb21lIGEgZGFpbHkgb2NjdXJyZW5jZSBhY3Jvc3MgVmVuZXp1ZWxhIGFzIHRoZSBlY29ub21pYyBjcmlzaXMgaGFzIHdvcnNlbmVkLCBidXQgb25lIG9mIHRoaXMgbWFnbml0dWRlIGlzIHJhcmUuClJlZHVjdGlvbiBpbiBicmVhc3QgY2FuY2VyIHJpc2sKU2F5IHJhaXNlIGlmIGEgYmV0IGV4aXN0cyBhbmQgaGUgd2FudHMgdG8gaW5jcmVhc2UgdGhlIG1vbmV5IGluIHRoZSBwb3QuCkkgZmVlbCBsaWtlIHRoZSBST00gaXMgc2ltaWxhciBlbm91Z2ggYmV0d2VlbiBpbmNsaW5lIGFuZCBmbGF0IGJlbmNoIHRoYXQgaXRzIGtpbmQgb2YgYSB3YXNoLCBzbyB0aGUgZmFjdCB5b3UgY2FuIGxpZnQgbW9yZSBtYWtlcyBiZW5jaCBzdXBlcmlvciBmb3Igb3ZlcmFsbCBtdXNjbGUgZ3Jvd3RoLiBUaGlzIG9mIGNvdXJzZSBpcyBteSBvcGluaW9uLgpIdXBwZXJ0IGhhZCBiZWVuIGEgZmFuIG9mIFZlcmhvZXZlbiAgIHRoZSBEdXRjaCBwcm92b2NhdGV1ciBlcXVhbGx5IHJlbm93bmVkIGFuZCByZXZpbGVkIGZvciBCYXNpYyBJbnN0aW5jdCAoMTk5MikgYW5kIFNob3dnaXJscyAoMTk5NSkgICBnb2luZyBhbGwgdGhlIHdheSBiYWNrIHRvIG9uZSBvZiBoaXMgZWFybGllc3QgZmVhdHVyZXMsIFR1cmtpc2ggRGVsaWdodCAoMTk3MyksIGFib3V0IHRoZSB0ZW1wZXN0dW91cyByZWxhdGlvbnNoaXAgYmV0d2VlbiBhIHNjdWxwdG9yIGFuZCBoaXMgd2lmZS4gIkkgcmVtZW1iZXIgcmVhZGluZyB0aGlzIHZlcnkgZ29vZCByZXZpZXcgb2YgW1R1cmtpc2ggRGVsaWdodF0gaW4gQ2hhcmxpZSBIZWJkbywiIHNoZSByZWNhbGxzLiAiVGhlIGZpbG0gd2FzIGNvbXBsZXRlbHkgbmVnbGVjdGVkIHJlbGVhc2Ugd2lzZTsgaXQgd2FzIFtzaG93bl0gaW4gYSBzZW1pIHBvcm5vIG1vdmllIGhvdXNlLCBhbmQgdGhhdCdzIHdoZXJlIEkgc2F3IGl0LiIKTWFzcyBwaGlsYW50aHJvcHkgdG9vayBvZmYgaW4gYSB3aWRlIHZhcmlldHkgb2YgZmllbGRzLiBDb21tdW5pdHkgY2hlc3RzIHNwcmFuZyB1cCBpbiBldmVyeSBtYWpvciBjaXR5LCBhbmQgdGhlIFJlZCBDcm9zcyB0b29rIHZvbHVudGVlcmlzbSBhbmQgZ3Jhc3Mgcm9vdHMgcGhpbGFudGhyb3B5IHRvIG5ldyBsZXZlbHMgdG8gc3VwcG9ydCB0aGUgdHJvb3BzIGFicm9hZC4gQnkgdGhlIDE5MzBzLCB3aGVuIFByZXNpZGVudCBGcmFua2xpbiBELiAKSSdtIG5vdCBlaXRoZXIgdGJoLCBlc3BlY2lhbGx5IGEgImtpZHMiIHRoZW1lLiBCdXQgdGhlIHByb21wdCBpcyB0aGVyZSBhbmQgaXQgY2FuIGJlIHJlYWxseSBmcmVlaW5nIHRvIHdyaXRlIGZyb20gYSBjZXJ0YWluIGJveCwgcmF0aGVyIHRoYW4gaGF2aW5nIHRoZSBlbnRpcmUgd2FyZWhvdXNlIHRvIGxvb2sgdGhyb3VnaC4KV2VsbCB3aGF0IEkgYW0gc2F5aW5nIGlzIHlvdSBjYW5ub3QgZ2V0IHRoZSBtZXNzYWdlIGRldGFpbHMgc2FtZSBnb2VzIGZvciBhbGwgdGhlIG51bWJlcnMuIApUaGUgYXZlcmFnZSBqb2Ugd2hvIGRvZXNudCBjYXJlIGFib3V0IGFueXRoaW5nIGRlZXBlciB0aGFuIGRyYW1hdGljIGhlYWRsaW5lcyBhbmQgZWFzaWx5IGRpZ2VzdGlibGUgcG9wY29ybiBuYXJyYXRpdmVzLiAKRGlmZmVyZW50IG5vdGVzIHJlcXVpcmUgZGlmZmVyZW50IGFuZ2xlcywgYmVjYXVzZSBsaWtlIGFsbCB3aW5kIGluc3RydW1lbnRzLCBub3QgZXZlcnkgbm90ZSB3aWxsIGJlIGluIHR1bmUgYXQgdGhlIHNhbWUgdGltZS4gCkxvbmRvbiBhcmVhIGpvYmxlc3MgcmF0ZSByaXNlcyBhcyBncm93dGggZWxzZXdoZXJlIGJ5cGFzc2VzIHVzClF1YWQgU3RyZXRjaDogU3RhbmQgYmVoaW5kIGEgY2hhaXIgd2l0aCB5b3VyIGxlZnQgaGFuZCBvbiB0aGUgYmFjayBvZiB0aGUgY2hhaXIgdG8gaGVscCB5b3UgbWFpbnRhaW4geW91ciBiYWxhbmNlLiBCZW5kIHlvdXIgcmlnaHQga25lZSwgcmFpc2UgeW91ciByaWdodCBmb290IHVwIGJlaGluZCB5b3UsIGFuZCBncmFzcCB0aGUgcmlnaHQgZm9vdCB3aXRoIHlvdXIgcmlnaHQgaGFuZC4gR2VudGx5IHB1bGwgdXB3YXJkIG9uIHRoZSBmb290IHVudGlsIGl0IHJlYWNoZXMgdGhlIGJ1dHRvY2tzLiBIb2xkIGl0IHRoZXJlIGZvciBzZXZlcmFsIHNlY29uZHMuIFlvdSBzaG91bGQgZmVlbCBhIHN0cmV0Y2ggaW4gdGhlIGxhcmdlIG11c2NsZSBhdCB0aGUgZnJvbnQgb2YgeW91ciB0aGlnaC4gKERvIG5vdCBhcmNoIHlvdXIgYmFjayBhcyB5b3UgZG8gdGhpcyBleGVyY2lzZS4pIFBsYWNlIHlvdXIgcmlnaHQgZm9vdCBiYWNrIG9uIHRoZSBmbG9vciwgYW5kIHJlcGVhdCB0aGUgc3RyZXRjaCB3aXRoIHRoZSBsZWZ0IGZvb3QuCkkgbGlrZSB0byBnaXZlIGEgbGl0dGxlIGFjdGlvbiBhdCBob21lIGdhbWVzIGFzIHdlbGw7IGl0IG1ha2VzIHlvdSBmdW4gdG8gcGxheSB3aXRoIGFuZCBpbmNyZWFzZXMgdGhlIGxpa2VsaWhvb2QgeW91IGdldCBpbnZpdGVkIGJhY2suIFRoaXMgZG9lc24ndCBtZWFuIHlvdSBoYXZlIHRvIGdvIGJlcnNlcmsgYW5kIGRvbmF0ZSBidXQgaXQncyBvayB0byAzIGJldCBvciByYWlzZSB3aXRoIHNvbWUganVuayBldmVyeSBub3cgYW5kIHRoZW47IGFnYWluIGlmIHlvdSBkb24ndCBmZWVsIGNvbWZvcnRhYmxlIHdpdGggdGhpcyByZXRoaW5rIGlmIHlvdSBiZWxvbmcgaW4gdGhlIGdhbWUuCkRyIEplbmtpbnMgc2FpZDogdG8ga25vdyBhIGZhY2UgdGhhdCB5b3UgZG9uIGtub3cgaXMgbGlrZSBwcmV0ZW5kaW5nIHRvIGtub3cgYSBsYW5ndWFnZSB0aGF0IHlvdSBkb24ga25vdyBqdXN0IGRvZXNuIHdvcmsuIFRoZSBvbmx5IHN5c3RlbSB0aGF0IGNhbiByZWxpYWJseSByZWNvZ25pemUgZmFjZXMgaXMgYSBodW1hbiB3aG8gaXMgZmFtaWxpYXIgd2l0aCB0aGUgZmFjZXMgY29uY2VybmVkLiBpbml0aWFsIHN0dWR5IGNvbWJpbmVzIHRoZSBjb2duaXRpdmUgc2NpZW5jZSBvZiBmYWNlIHBlcmNlcHRpb24gYW5kIHRoZSBjb21wdXRlciBzY2llbmNlIG9mIHNlY3VyZSBhdXRoZW50aWNhdGlvbiB0byB3b3JrIGluIHN5bXBhdGh5IHdpdGggdGhlIHN0cmVuZ3RocyBhbmQgbGltaXRhdGlvbnMgb2YgaHVtYW4gbWVtb3J5LgpUaGVyZSB3ZXJlIHRocmVlIGpvYnMgYWxsIG1heWJyIDMwIG1pbnV0ZXMgYXdheSBhdCBkaWZmZXJlbnQgQ291bnR5IE1hcmtldCBzdG9yZXMsIHNvIEkgc2NoZWR1bGVkIG9uZSBlYWNoIGZvciB0dWVzZGF5IHRocm91Z2ggdGh1cnNkYXkuIApXZSBoYWQgb2lycyBpbiBhIGNvbW11bml0eSBjZW50cmUgaW4gVmFsIGRlcyBtaW50cyBiZWNhdXNlIGZhbWlseSB3YXMgb3V0IHRoZXJlLiAKSGVhZCBvZmZpY2UgZW1wbG95ZWVzIGF0IE5hdHVyZSdzIFBhdGggbWFpbnRhaW4gYSBsYXJnZSBvcmdhbmljIHN0YWZmIGdhcmRlbiB3aGljaCBmZWF0dXJlcyBjb21wb3N0aW5nIGJpbnMgYW5kIGNvbXBsZW1lbnRzIHRoZSBjb21wYW55J3MgYW1iaXRpb3VzIHdhc3RlIG1hbmFnZW1lbnQgcHJvZ3JhbSB3aXRoIGEgdGFyZ2V0ZWQgOTklIHdhc3RlIGRpdmVyc2lvbiByYXRlICAgdGhlIGNvbXBhbnkncyBoZWFkIG9mZmljZSBhbHNvIGZlYXR1cmVzIGFuIDExIHN0cmVhbSByZWN5Y2xpbmcgc3RhdGlvbiB3aGljaCBjYXB0dXJlcyBldmVyeXRoaW5nIGZyb20gb3JnYW5pY3MgdG8gc3R5cm9mb2FtIHRvIGJhdHRlcmllcywgYW5kIHR3byBvZiBpdHMgdGhyZWUgbWFudWZhY3R1cmluZyBwbGFudHMgYXJlIGNlcnRpZmllZCBhcyB6ZXJvIHdhc3RlIGZhY2lsaXRpZXMgYnkgdGhlIFVTIFplcm8gV2FzdGUgQnVzaW5lc3MgQ291bmNpbApTdHJlc3MgaXMgdW5hdm9pZGFibGUgdGhlc2UgZGF5c2FuZCB0aGVyZSBhcmUgbWFueSB3YXlzIHRvIGhlbHAgcmVkdWNlIHN0cmVzcy4KVGhlIDc3IHllYXIgb2xkIGZvcm1lciBOZXcgWW9yayBDaXR5IG1heW9yLCBvbmUgb2YgdGhlIHJpY2hlc3QgbWVuIGluIHRoZSB3b3JsZCwgYW5ub3VuY2VkIGhpcyBkZWNpc2lvbiBub3QgdG8gam9pbiB0aGUgY3Jvd2RlZCBEZW1vY3JhdGljIGZpZWxkIGluIGEgQmxvb21iZXJnIE5ld3MgZWRpdG9yaWFsIG9uIFR1ZXNkYXkuClRvIGRvIHRoYXQsIHdlIG5lZWQgdG8gc3RvcCB0aGlzIGdlbmVyYXRpb24gb2YgYmlnIHRlY2ggY29tcGFuaWVzIGZyb20gdGhyb3dpbmcgYXJvdW5kIHRoZWlyIHBvbGl0aWNhbCBwb3dlciB0byBzaGFwZSB0aGUgcnVsZXMgaW4gdGhlaXIgZmF2b3IgYW5kIHRocm93aW5nIGFyb3VuZCB0aGVpciBlY29ub21pYyBwb3dlciB0byBzbnVmZiBvdXQgb3IgYnV5IHVwIGV2ZXJ5IHBvdGVudGlhbCBjb21wZXRpdG9yLiBXaG8gaGFzIGJlZW4gc2VlbiBhcyBhIGZvZSBvZiBXYWxsIFN0cmVldCwgaGFzIHNhaWQgaW4gdGhlIHBhc3QgdGhhdCB0aGUgbGFyZ2VzdCB0ZWNobm9sb2d5IGNvbXBhbmllcywgd2hpY2ggYWNjb3VudCBmb3Igb3ZlciAkMiB0cmlsbGlvbiBpbiBtYXJrZXQgY2FwLCBuZWVkIHNvbWUgcmVpbmluZyBpbi4uIApJdCBkZXBlbmRzIG9uIHdoYXQgeW91IHdhbnQgb3V0IG9mIGJvd2xpbmcsIHN1cmUgd2l0aCB0d28gaGFuZHMgeW91IGFyZSBwdXR0aW5nIG1vcmUgcm90YXRpb24gb24gdGhlIGJhbGwsIGFuZCB3aXRoIG1hbnkgaG91c2UgY29uZGl0aW9ucyB5b3Ugd2lsbCBiZSBhYmxlIGhpdCB0aGUgcG9ja2V0IHdpdGggbW9yZSBmb3JjZSBhbmQgYSBsYXJnZXIgZW50cnkgYW5nbGUsIGJ1dCB5b3VyIGNvbnNpc3RlbmN5IHdpbGwgYmUgYWxsIG92ZXIgdGhlIHBsYWNlLCBiZWNhdXNlIHlvdSBoYXZlIHNvIG11Y2ggZ29pbmcgb24gdGhhdCB5b3UgZG9uIGV2ZW4gcmVhbGl6ZSByaWdodCBub3cgYW5kIGl0IHdpbGwgYmUgaW1wb3NzaWJsZSBmb3IgeW91IHRvIHJlcGVhdCBzaG90cywgd2hpY2ggaXMgdGhlIG5hbWUgb2YgdGhlIGdhbWUuIEhvd2V2ZXIgaWYgeW91IGxldCBncmF2aXR5IGRvIGFsbCB5b3VyIHdvcmsgYW5kIGp1c3QgZm9jdXMgb24gaW1wcm92aW5nIHlvdXIgcmVsZWFzZSx0aW1pbmcgYW5kIGZvbGxvdyB0aHJvdWdoIHRoYXQgaXMgc29tZXRoaW5nIHRoYXQgaXMgdmVyeSByZXBlYXRhYmxlLiAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28uIApJIHVzZSBhIHNsZWVwIG1hc2sgZm9yIG5hcHMgYW5kIHNsZWVwaW5nIGluIG9uIHRoZSB3ZWVrZW5kcyB3aGVuIEknbSBvZmYgd29yay4gRHVyaW5nIHRoZSB3ZWVrZGF5cywgSSBkb24ndCB1c2UgYSBzbGVlcCBtYXNrIGJlY2F1c2UgSSB1c2UgYSBzdW5yaXNlIGFsYXJtIGNsb2NrIHRvIHdha2UgdXAuIApTb3J0YSBmYWxscyBpbnRvIHRoZSB3aG9sZSBjYW4gbWVtZS4gQW1vbmcgb3RoZXIgdGhpbmdzLCBoZSBoYWQgZmFybWVycyBtZWx0IGRvd24gZmFybSBpbXBsZW1lbnRzIGZvciBzY3JhcCBtZXRhbC4gSXQgd2FzIG9idmlvdXNseSBtaXNndWlkZWQsIGFuZCBpdCByZXN1bHRlZCBpbiB0ZW5zIG9mIG1pbGxpb25zIG9mIGRlYXRocy4uIApJIGhhdmUgbmV2ZXIgaGFkIGEgcHJvYmxlbSB3aXRoIGxvb3NlIGRvZ3Mgd2hlbiBJIGRvIHRoaXMuIApIb3cgV2hlYXQgKGFuZCBHbHV0ZW4pIFRyaWdnZXJzIFdlaWdodCBHYWluLCBQcmVkaWFiZXRlcywgRGlhYmV0ZXMgYW5kIE1vcmUKSWwgbidlc3QgcGFzIHRyb3AgdGFyZCBwb3VyIHByZW5kcmUgcXVlbHF1ZXMgbWludXRlcyBwb3VyIHJmbGNoaXIgIGNlIHF1aSB2b3VzIGF2YWl0IHZyYWltZW50IGZhaXQgZHUgYmllbiBlbiB2YWNhbmNlcywgY2UgcXVlIHZvdXMgYXZleiBmYWl0IGF2ZWMgcGxhaXNpciwgc2FucyBjb250cmFpbnRlLiBQYXIgZXhlbXBsZSwgYWxsZXIgYXUgbWFyY2gsIHByZW5kcmUgbGUgdGVtcHMgZGUgY3Vpc2luZXIgZGVzIHBsYXRzIHNpbXBsZXMgZXQgYm9ucyBzYW5zIHNlIHByZXNzZXIsIGJvdWdlciwgbmFnZXIsIHZvdXMgcHJvbWVuZXIgZGFucyBsYSBuYXR1cmUsIHBhc3NlciBkdSB0ZW1wcyBhdmVjIHZvcyBwcm9jaGVzLCBwcmVuZHJlIHZvdHJlIHRlbXBzLCBsaXJlLCBuZSByaWVuIGZhaXJlLCBkb3JtaXIuCkJyZWYsIENhc2Fzbm92YSBwb3VycmFpdCB0cmUgdW4gZGVzY2VuZGFudCBkZSBtYXJyYW5lIHF1aSBzJ2lnbm9yZSwgY2UgcXVpIGV4cGxpcXVlcmFpdCBwcm9iYWJsZW1lbnQgZXQgZW4gcGFzc2FudCwgc2EgY2FwYWNpdCAgcmVib25kaXIgYXZlYyBzdWNjcyBzdXIgbGUgcGxhbiBjb25vbWlxdWUuIApVVG1wYSAgMSBwb2ludCAgc3VibWl0dGVkIDUgZGF5cyBhZ28KUGFzdGV1ciBmdWxsIHF1b3RlICAgIkluIHRoZSBmaWVsZCBvZiBvYnNlcnZhdGlvbiwgY2hhbmNlIGZhdm9ycyBvbmx5IHRoZSBfcHJlcGFyZWRfIG1pbmQiIGlzIHRoZSB1c3VhbCB0cmFuc2xhdGlvbiAgIGlzIHRyeWluZyB0byBtYWtlIHRoZSBwb2ludCB0aGF0IHNjaWVudGlzdHMgYW5kIGVuZ2luZWVycyBkb24gZ2V0IGx1Y2t5IGF0IGEgdGhpbmcgdW5sZXNzIHRoZXkgYmVlbiB0cmFpbmVkIHRvIGRvIHRoYXQgdGhpbmcuIEl0IGEgbmFycm93ZXIgYnV0IHN0cm9uZ2VyIHN0YXRlbWVudC4KQ29tbWVudCBqb3VlciBhdSBwb2tlcgpJIGhhZCB0aGUgZ29vZCBmb3J0dW5lIHRvIGJlIHRhYmxlc2lkZSwgcmVwb3J0aW5nLCB3aGVuIFBoaWwgSXZleSB3b24gdGhlIDIwMDUgTW9udGUgQ2FybG8gTWlsbGlvbnMuIEJ5IGdlbmVyYWwgY29uc2Vuc3VzLCBhIGhhbmQgaGUgcGxheWVkIGluIHRoYXQgZmluYWwsIHZlcnN1cyBFbmdsYW5kJ3MgUGF1bCAiQWN0aW9uSmFjayIgSmFja3NvbiwgbWlnaHQganVzdCBiZSB0aGUgbW9zdCBhbWF6aW5nIGhhbmQgb2YgUG9rZXIgZXZlciBwbGF5ZWQsIHdoZW4gYm90aCBwbGF5ZXJzIHdlcmUgYmx1ZmZpbmcsIGFuZCBQaGlsICAgd2l0aCBub3RoaW5nIGJ1dCBxdWVlbiBoaWdoICAgZm9yY2VkIFBhdWwgSmFja3NvbiB0byBmb2xkIGFmdGVyIDUgYmV0dGluZy4gVG8gYmUgZmFpciwgUGF1bCBvbmx5IGhhZCA2IGhpZ2gsIGJ1dCBJdmV5IGNvdWxkIG5vdCBwb3NzaWJseSBrbm93IHRoYXQuIEl0IHdhcyBicmVhdGggdGFraW5nIHN0dWZmLCBlc3BlY2lhbGx5IGdpdmVuIHRoZSBjb250ZXh0IHRoYXQgdGhleSB3ZXJlIHBsYXlpbmcgZm9yIGEgbWlsbGlvbiBkb2xsYXIgZmlyc3QgcHJpemUuIFdlIGFsbCB3ZW50IHRvIGRpbm5lciBhZnRlcndhcmRzLCBhbmQgSXZleSwgd2hvIGdlbmVyb3VzbHkgcGFpZCBmb3IgdGhlIGRpbm5lciwgKGFkbWl0dGVkbHkgaGUgaGFkIGp1c3Qgd29uIGEgbWlsbGlvbiBkb2xsYXJzKSBpbnNpc3RlZCBoZSBhYnNvbHV0ZWx5IGtuZXcgZm9yIGNlcnRhaW4sIDEwMCUsIHRoYXQgUGF1bCBoYWQgYmVlbiBibHVmZmluZy4gSSd2ZSBuZXZlciBzZWVuIGEgaGFuZCBvZiBQb2tlciBsaWtlIGl0LCBiZWZvcmUgb3Igc2luY2UsIGFuZCBJIHN0aWxsIGhhdmUgbm8gaWRlYSBob3cgaGUgcHVsbGVkIHRoZSB0cmlnZ2VyIGluIHRoYXQgc3BvdC4KSWdub3JlIHRoZSBjYWxscywgaGFuZyB1cCBpZiB0aGV5IGJyaW5nIGl0IHVwLCB3YWxrIG91dCBvZiB0aGUgcm9vbSwgZG9uIHJlcGx5IHRvIHRleHRzLCAiSSB0b2xkIHlvdSB3aGVyZSBJIHN0YW5kIG9uIHRoaXMuIApUcmFpbnMgY29tZSBmcmVxdWVudGx5IGJ1dCB0aGV5IGFyZSBhbGwgb24gdGhlIHZlcmdlIG9mIG1heCBjYXBhY2l0eS4gCkJ1dCBNYXJ4IGxlZnQgdXMgYSB3YXkgb3V0IG9mIGJlbGlldmluZyBpbiB0aGUgaWRlYXMgb2YgdGhlIHJ1bGluZyBjbGFzczogY29uc2Npb3VzbmVzcy4gRm9yIE1hcngsIG91ciBsaXZlZCBleHBlcmllbmNlcyAgbGlrZSBiZWluZyBhIExhdGluYSBvciBiZWluZyBhIHdvcmtlciAgc2hhcGUgd2hhdCB3ZSBrbm93IGFuZCB0aGVyZWZvcmUgb2Z0ZW4gZ2l2ZSB1cyBhIG1vcmUgYWNjdXJhdGUgc2Vuc2Ugb2Ygd2hhdCBpcyByZWFsbHkgZ29pbmcgb24gaW4gdGhlIHdvcmxkIHNpbmNlIGEgd29ya2VyIG9yIGEgTGF0aW5hIG9yIGEgd29ya2luZyBjbGFzcyBMYXRpbmEgc2VlcyB0aGUgd29ybGQgYXMgdGhlIHJ1bGluZyBjbGFzc2VzIHNlZSBpdCAod2UgYWxsIGRvKSBhbmQgYWxzbyBmcm9tIGhlciBvd24gc3RhbmRwb2ludCBhbmQgdGhlcmVmb3JlIGhhcyBhIGRvdWJsZSAob3IgdHJpcGxlKSBjb25zY2lvdXNuZXNzLiAKT21lZ2F0ZSAgMSBwb2ludCAgc3VibWl0dGVkIDIwIGRheXMgYWdvCkl0IGNlbnRyZXMgb24geW91bmcgcm9va2llIERldGVjdGl2ZSBKZXRlciAoQmVhdSBNaXJjaG9mZiksIHdob3NlIHJlY2VudCBidXN0IGhhcyBlbGV2YXRlZCBoaW0gdG8gdGhlIHJhbmtzIG9mIHRoZSBlbGl0ZSBjb3BzIChSb24gUGVybG1hbiwgVGl0dXMgV2VsbGl2ZXIsIEdpYW5jYXJsbyBFc3Bvc2l0bywgUm9uIEVsZGFyZCBhbmQgQ29yZXkgTGFyZ2UpIHdobyBtZWV0IGZvciBhIHdlZWtseSBwb2tlciBnYW1lLiBBdCBoaXMgZmlyc3QgbmlnaHQgd2l0aCB0aGVtLCBlYWNoIHJlY291bnRzIGhpcyBtb3N0IGljb25pYyBjYXNlLCBhbmQgYWZ0ZXJ3YXJkcyBKZXRlciBzdGFnZ2VycyBvdXQgYSBiaXQgdGlwc3ksIHJ1bm5pbmcgaW50byBoaXMgdW5kZXJhZ2VkIGdpcmxmcmllbmQgQW15IChIYWxzdG9uIFNhZ2UpIHdobyBpcyBiZWluZyBtZW5hY2VkIGJ5IGEgbWFuIChNaWNoYWVsIEVrbHVuZCkgaW4gYSB0ZXJyaWZ5aW5nIG1hc2suIApPbmUgdGltZSBJIHdhcyBhdCBhIGZvb2QgcGxhY2Ugd2l0aCByb29tbWF0ZXMgYW5kIHdlIGdvdCBpbnRvIGEgZGlzY3Vzc2lvbiBhYm91dCB3aGV0aGVyIENoZXdiYWNjYSBjb3VsZCB1c2UgdGhlIGZvcmNlLCBzbyBuYXR1cmFsbHkgSSBnb29nbGVkIGl0LiBUaGUgZmlyc3QgdmlkZW8gdGhhdCBjYW1lIHVwIHdhcyBzb21lIHZlcnkgZmF0IGxhZHkgc2hvd2luZyBoZXIgYnV0dCB0byB0aGUgY2FtZXJhIGFuZCBmYXJ0aW5nIHRoZSBiZXN0IENoZXdiYWNjYSBJIGV2ZXIgaGVhcmQgZnJvbSBhbiBhc3MuIEkgZGVjaWRlZCB0byBoaWRlIHRoaXMgdmlkZW8gb24gbXkgcm9vbW1hdGVzIGNvbXB1dGVyIGFuZCBoYXZlIGEgc2NyaXB0IHBsYXkgdGhlIHZpZGVvIHdoZW4gSSBjaG9zZSB0by4gCjQuIE9uY2UgdGhlIGJvdHRvbSBwaWVjZSBpcyBhdHRhY2hlZCB0byB0aGUgUG9rZXIgQ2hpcCwgc2ltcGx5IGF0dGFjaCB0aGUgZGVjb3JhdGl2ZSBlYXJyaW5nIGhvb2tzIHRvIHRoZSB2ZXJ5IHRvcCBob2xlLiBZb3Ugd2lsbCBvZnRlbiBmaW5kIGEgc21hbGwgbWV0YWwgcGllY2Ugb3IgYSBzbWFsbCBiZWFkIHRoYXQgd2lsbCBjbGFzcCBkb3duIGZpcm1seSBvbiB0b3Agb2YgdGhlIGNoaXAgdG8gaG9sZCB0aGUgaG9vayBpbiBwbGFjZS4gCkJhbmR3aWR0aCBzdGFuZHMgZm9yIGEgbW9udGhseSBsaW1pdCBmb3IgdGhlIHNpemUgb2YgdGhlIGltYWdlcyBhbmQgZmlsZXMgZG93bmxvYWRlZCB0byB0aGUgY29tcHV0ZXJzIG9mIHlvdXIgdmlzaXRvcnMsIHdoZW5ldmVyIHRoZXkgb3BlbiB5b3VyIHdlYnNpdGUuIEdldGhpZ2hlcmJhbmR3aWR0aCBhbmQgZW5qb3kgdGhlIGluY3JlYXNpbmcgbnVtYmVyIG9mIHZpc2l0b3JzIHdpdGhvdXQgd29ycmllcy4KSSB3b3JrIGluIHRlY2guIE15IGluY29tZSBpcyBtb3JlIHRoYW4gZG91YmxlIHRoYXQgb2YgdGhlIGF2ZXJhZ2UgZmFtaWx5IGluIHRoZSBVUy4gCkNhdWdodCBwcm9tb3RlciBEbWl0cml5IFNhbGl0YSBleWUgZWFybHkgbGFzdCB5ZWFyLCBmaWdodGluZyB0byBhIGRyYXcgYWdhaW5zdCBvbmUgb2YgU2FsaXRhIGZpZ2h0ZXJzLCBZdGFsbyBQZXJlYSwgYSBmb3JtZXIgT2x5bXBpYW4uLiAKQWZ0ZXIgZm91ciBtb250aHMgb2YgdHJlYXRtZW50IGV2ZXJ5ZGF5IG9yIGV2ZXJ5IG90aGVyIGRheSwgaGUgd2FzIHR1cm5lZCBvdXQgaW4gdGhlIHBhZGRvY2sgYW5kIGNhbnRlcmVkIGZvciBmaXJzdCB0aW1lIGluIHllYXJzIG9uIGhpcyBvd24uIEl0IHdhcyByZWFsbHkgYW1hemluZyB0byBzZWUuSSBwZXJzb25hbGx5IGhhdGUgbWFudWFsIGFkanVzdG1lbnRzIG9uIG15c2VsZiBiZWNhdXNlIGl0IHNjYXJlcyBtZSBhbmQgaXQgZG9lc24gYWx3YXlzIGZlZWwgcGxlYXNhbnQsIGxpa2UgaWYgaXQgdGFrZXMgYSBmZXcgdHJpZXMgYmVmb3JlIHRoZSBzcG90IGNyYWNrcywgc28gSSBtYWlubHkgb25seSBnZXQgYWN0aXZhdG9yIGFkanVzdG1lbnRzLiBIb3dldmVyLCBJIG9jY2FzaW9uYWxseSBmZWVsIHRoYXQgdGhleSBhcmVuIHdvcmtpbmcgb24gYSBwYXJ0aWN1bGFyIHNwb3Qgc29tZXRpbWVzIGFuZCBoYXZlIHRvIGdldCBhIG1hbnVhbCBhZGp1c3RtZW50IHRvIHJlYWxseSBraWNrIGl0IGJhY2sgaW50byBwbGFjZS4gCklmIGl0IHdlcmVuIGZvciBoZXIgdmlvbGluLCBzaGUgd291bGRuIGF0dGVuZCB0aGlzIHNjaG9vbCBhdCBhbGwuIApDbGFzcyBiZWdpbnMgd2l0aCBhIHlvZ2EgZmxvdywgd2hpbGUgSG9saXR6YSB1c2VzIGhlciBpbnR1aXRpb24gdG8gdGFrZSBub3RlIG9mIHN0dWRlbnRzJyBpbWJhbGFuY2VzIGFuZCBuZWVkcywgd2hpY2ggc2hlIHNoYXJlcyB3aXRoIHRoZSBvdGhlciBwcmFjdGl0aW9uZXJzLiBUaGVuLCB0aGUgeW9nYSBtb3ZlcyBpbnRvIG1vcmUgcmVzdG9yYXRpdmUsIHNsb3dlciBwb3N0dXJlcywgd2hpbGUgdGhlIGRpZmZlcmVudCBwcmFjdGl0aW9uZXJzIHdvcmsgdGhlaXIgd2F5IGFyb3VuZCB0aGUgY2xhc3Nyb29tLCBwcm92aWRpbmcgYnJpZWYsIHBlcnNvbmFsaXplZCB0cmVhdG1lbnRzIGRlc2lnbmVkIHRvIGVuaGFuY2UgdGhlIHByYWN0aWNlIGFuZCBzcGFyayBoZWFsaW5nIGFuZCBiYWxhbmNpbmcuCkhlcmUgYXQgQmlnZ2VyUG9ja2V0cywgd2UgYmVsaWV2ZSB0aGF0IHNlbGYgZWR1Y2F0aW9uIGlzIG9uZSBvZiB0aGUgbW9zdCBjcml0aWNhbCBwYXJ0cyBvZiBsb25nIHRlcm0gc3VjY2VzcywgaW4gYnVzaW5lc3MgYW5kIGluIGxpZmUsIG9mIGNvdXJzZS4gVGhpcyBsaXN0LCBjb21waWxlZCBieSB0aGUgcmVhbCBlc3RhdGUgZXhwZXJ0cyBhdCBCaWdnZXJQb2NrZXRzLCBjb250YWlucyAyMCBvZiB0aGUgYmVzdCBib29rcyB0byBoZWxwIHlvdSBqdW1wc3RhcnQgeW91ciByZWFsIGVzdGF0ZSBjYXJlZXIuIGZpcnN0IHByaW5jaXBsZSBpcyB0aGF0IHlvdSBtdXN0IG5vdCBmb29sIHlvdXJzZWxmIGFuZCB5b3UgYXJlIHRoZSBlYXNpZXN0IHBlcnNvbiB0byBmb29sLiAgUmljaGFyZCBQLiBGZXlubWFuCk92ZXJ2aWV3IGZvciBwaW50b2Z0b21hdG9lcwpUaGV5IHdpbGwgYnkgZGVmYXVsdCBhc3N1bWUgdGhlIG1hbGUgaXMgdGhlIGFnZ3Jlc3NvciwgcmVnYXJkbGVzcyBvZiBjaXJjdW1zdGFuY2VzIG9yIGV2aWRlbmNlLiBFdmVuIGlmIHlvdSBjYW4gcHJvdmUgc2hlIHdhcyB0aGUgYXR0YWNrZXIsIHRoZSBvZGRzIGFyZSBwcmV0dHkgZ29vZCB0aGF0IHlvdSBhcmUgc3RpbGwgZ2V0dGluZyBjdWZmZWQsIHRvc3NlZCBpbiB0aGUgY3J1aXNlciwgYW5kIHRha2VuIHRvIGphaWwgYmVjYXVzZSB5b3UgbGlrZWx5IHdvbiBiZSBnaXZlbiBhIGNoYW5jZSB0byBwcm92ZSBpdCB1bnRpbCB5b3UgYXJlIGluIGNvdXJ0LiAKT2ZmZXJpbmcgYSBjb25kaXRpb24gdG8geW91ciBjaG9wICgiSSBuZWVkIHRvIGdldCAkWCBtaW5pbXVtIGJlY2F1c2Ugb2YgbXkgc3RhY2sgb3Igbm8gY2hvcCIpIGlzbiB5b3UgYmVpbmcgZ3JlZWR5LCBpdCBpcyB5b3UgcHJvdGVjdGluZyB5b3Vyc2VsZi4uIApJIGxlZnQgdGhlIHRoZWF0ZXIgYWdpdGF0ZWQsIG15IHBhdGllbmNlIHRlc3RlZCwgdGhpbmtpbmcgdGhhdCB0aGUgZmlsbSBkaWRuIHF1aXRlIHdvcmsuIFRoZW4sIGhvdXJzIGxhdGVyLCBpdCB3YXMgYWxsIEkgY291bGQgdGhpbmsgYWJvdXQuIApIZSB3b3VsZCBvcGVuIHdpdGggJDI1IGV2ZXJ5IHNpbmdsZSBoYW5kLiBPbmNlIHRoZSBmbG9wIGNhbWUgaGUgd291bGQgc2hvdmUuIApSZW1lbWJlciB3aGVuIEVsbGVuIHdhcyBzdHJhaWdodD8gd2hvIHdyb3RlIGFib3V0IHRoYXQgbG9uZyBiZWZvcmUgc2hlIGJlY2FtZSBFbGxlbiB0aGUgbGVzYmlhbj8gd2hlbiBpdCBzZWVtZWQgbGlrZSBCdXNoIHdhcyB1bnRvdWNoYWJsZT8gd2hvIHdyb3RlIGFib3V0IGhpcyBkcmlua2luZyBwcm9ibGVtcyBhbmQgaG93IExhdXJhIHdhbnRzIHRvIGxlYXZlIGhpbSBsb25nIGJlZm9yZSBoaXMgcG9wdWxhcml0eSBpbiB0aGUgcG9sbHMgc3RhcnRlZCB0byBzbGlwPyBOYXRpb25hbCBFbnF1aXJlci4gcmVwb3J0ZXJzIHRoZXJlIHNlZW0gdG8ga25vdyB0aGluZ3MgdGhhdCBvdGhlciBqb3VybmFsaXN0cyBqdXN0IGRvbiBzZWUuIHRoYXQgb3RoZXIgam91cm5hbGlzdHMgZG9uIGxvdmUgYSBzY2FuZGFsLgpIb3cgYWJvdXQgbW92ZSBsaW5lcyBhcm91bmQgYW5kIGdpdmUgbW9yZSBwbGF5aW5nIHRpbWUgdGhlIHlvdW5nIHBsYXllcnMuIEN1dCA4OCwgMTksIDIwLCAyLCA3IG1pbnV0ZXMgYW5kIGluY3JlYXNlIENhdCwgU3Ryb21ib2xpLCBLb2Vrb2VrLCBEYWhsc3Ryb20sIFBlcmxpbmksIEZvcnNsaW5nLCBEZWxpYSwgU2lrdXJhLCBhbmQgSGF5ZGVuIG1pbnV0ZXMgaW5zdGVhZC4gCkJ1dCB0aGUgd2F5IHRoZXkgbWFuYWdlIHRoZSBzaXR1YXRpb3MgaXMganVzdCB3cm9uZy4uIApJdCB3aWxsIGJlIGEgcGVyZmVjdCBjb3ZlciwgaXQgc3RvcmUgdGhlIG1lc3NhZ2VzIGluIGl0IG93biB2YXVsdCwgYW5kIGl0IHdvbiBiZSBhY2Nlc2libGUgZWFzaWx5LiAKSW4gdGhlIGNvbmZlcmVuY2Ugcm9vbSBzaXRzIHRoZSB3YXIgd2VhdGhlcmVkIGVsZiwgQ3Vyc2FudGUuIFdpdGggaGltIGFyZSBDcnVtIGFuZCBGaXIuIFNsb3dseSByb3RhdGluZyBhYm92ZSB0aGUgdGFibGUgaXMgYW4gaW1hZ2Ugb2YgYSBzbWFsbCBob3VzZSBhbmQgYSBoaW50IG9mIHRoZSBzdHJlZXRzIGFyb3VuZCBpdC4gVGhlIHR3byBzdG9yeSBob3VzZSBpcyBhIGNvcm5lciBsb3Qgd2l0aCBhIHdoaXRlIHBpY2tldCBmZW5jZSBhbmQgYSBiYXNrZXRiYWxsIGhvb3AgYWJvdmUgdGhlIGRyaXZlIHdheS4gQ3Vyc2FudGUgcyBleWVzIHRoZSBpbWFnZSB0aGUgd2F5IGEgaHVuZ3J5IHdvbGYgZG9lcyBhIHJhYmJpdC4KQ29tcGxldGVseSB1bmRlcnN0YW5kYWJsZS4uIApJIHdvdWxkIHNheSBpZiB5b3UncmUgbmV3IHRvIG1lZGl0YXRpbmcsIG5vdGljaW5nIHRoZSBub3RpY2luZyBpcyBwYXJ0IG9mIHRoZSBuYXR1cmFsIHByb2dyZXNzaW9uLiBKdXN0IGxpa2UgYW55dGhpbmcgbmV3IGluIHlvdXIgbGlmZSwgaXQncyBnb2luZyB0byBiZSBlYXNpZXIgdG8gbm90aWNlIGF0IGZpcnN0IGJ1dCBldmVudHVhbGx5IHlvdSBnYWluIGJldHRlciBjb250cm9sIG9mIHlvdXIgY29uY2VudHJhdGlvbiBhbmQgdGhlIG5vdGljaW5nIGJlY29tZXMgYSB0b29sIG9mIG9ic2VydmF0aW9uIGZvbGxvd2VkIGJ5IGRldGFjaG1lbnQuIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnby4gCiJUaGUgYW1vdW50IG9mIG1vbmV5IHRha2VuIHdhcyB0aGUgZ3JhbmQgc3VtIG9mICQxMSwiIE1yIEhlbXNsZXkgc2FpZC4gClJlbWVtYmVyaW5nIHRoYXQgY2FuIG91ciAnU2lnbmF0dXJlIFN0b3JpZXMnIG5lZWRzIHRvIHF1aXRlIHBvc3NpYmx5IGJlIHJpdmV0aW5nIHRoZW4gdG9wbm90Y2gsIHdlIGFyZSBnb2luZyB0byB3aWxsIGhpdCB1cG9uIHRoYXQgYXMgbG9uZyB0byBiZSB3ZSBhY2hpZXZlIHRoZW0gaW5kaXZpZHVhbCBhbmQgJ291ciBvd24sJyBvdXIgbmV3IGxpc3RlbmVycyBtYXkgdmVyeSB3ZWxsIHJlYWN0ICAgdXMgcGx1cyBvdXIgdmFsdWFibGUuIEdvb2QgZXhwZXJpZW5jZXMgYXJlIHVzdWFsbHkgaW50ZXJuYWxpemVkLCBjb25zaWRlcmFibHkgd2Ugc2VlaW5nIGFzIGxpc3RlbmVycyB3aWxsIGJlIGFibGUgdG8gYmUgY2FwYWJsZSB0byBwcmVzdW1lIGJhY2sgYW5kIGFzIGEgY29uc2VxdWVuY2UgcmVtZW1iZXIgdGhlIHBvaW50cyBkZXJpdmVkIGluIG1vc3Qgb2YgdGhlIHByZXNlbnRhdGlvbi4gCkNvbW1lbnQgbW9pbnMgZW4gc3ViaXIgbGVzIGNvbnNxdWVuY2VzIGV0IG1vaW5zIGVuIHNvdWZmcmlyID8gRXQgbWlldXggbCdhY2NvbXBhZ25lciBjdCBtb25kZSBtZGljYWwgP0QnYWJvcmQsIGxlcyByYWNpbmVzIGR1IHN1cnBvaWRzLiBPbiBuZSBwZXV0IGwgZW5jb3JlIHBhcyBnbnJhbGlzZXIgbWFpcyBiZWF1Y291cCBkZSBwZXJzb25uZXMgb250IHByaXMgZHUgcG9pZHMgc3VpdGUgIHVuIHRyYXVtYXRpc21lLCBkZXMgdmlvbGVuY2VzIHBoeXNpcXVlcywgcHN5Y2hvbG9naXF1ZXMgb3Ugc2V4dWVsbGVzLCB1bmUgY2FyZW5jZSBhZmZlY3RpdmUuIApUaGUgZ3VpZGUgd2FzIHRhbGtpbmcgYWJvdXQgdGhlIEJlZG91aW4gbGlmZXN0eWxlLCBvZiBsaXZpbmcgaW4gdGVudHMgYW5kIG1vdmluZyB3aGVuIHJlc291cmNlcyByYW4gb3V0LCBhbmQgdGhlIG1vbSBzYWlkLCAiT2ggeWVzLCB0aGF0IGxpa2Ugc29tZXRoaW5nIHdlIGRvIGluIHRoZSBVUywgY2FsbGVkIGNhbXBpbmciLiBDYW4geW91IGltYWdpbmUgY29tcGFyaW5nIGNhbXBpbmcgdG8gYSBub21hZGljIGxpZmVzdHlsZT8gV2VuZGkgYW5kIEkgcmFuIHRoZSBvdGhlciB3YXkgYmVmb3JlIGFueW9uZSB3b3VsZCB0aGluayB3ZSB3ZXJlIGZyb20gdGhlIHNhbWUgY291bnRyeS4uIApCZWluZyBhbiBpbmRpdmlkdWFsIHdobyB3YXMgYm9ybiBhbmQgaGFzIGV4cGVyaWVuY2VkIGxpZmUgYXMgYSBzaW5nbGUgcGh5c2ljYWwgZW50aXR5IGZvciBtYW55IHllYXJzLCBteSBjdXJyZW50IHNlbnNlIG9mIGNvbnNjaW91c25lc3MgaXMgaW4gZmFjdCBubyBkaWZmZXJlbnQgbm93IGZyb20gd2hhdCBpdCB3b3VsZCBiZSBpZiBteSBjdXJyZW50IGZvcm0gd2FzIGluIGZhY3Qgb25lIG9mIGEgY2xvbmUsIG9yIG9mIGEgY29tcHV0ZXIgdGhhdCBteSBvcmlnaW5hbCBzZWxmIHdhcyB1cGxvYWRlZCB0byBiZWZvcmUgYmVpbmcgZGVzdHJveWVkLgpUaGV5IGVuZGVkIHVwIG5vdCBjdXR0aW5nIG9mZiBzdXBwb3J0IGVudGlyZWx5LiBUaGV5IGluc3RlYWQgY3V0IHRoZWlyIHN1cHBvcnQgYmFjayBncmFkdWFsbHkgKGFuZCBub3QgdW5yZWFzb25hYmx5KS4gQnV0IG9uY2UgdGhleSB3ZXJlIG5vIGxvbmdlciBzdXBwb3J0aW5nIG1lIGZpbmFuY2lhbGx5LCB0aGV5IHN0YXJ0ZWQgdXNpbmcgcHJvbWlzZXMgb2YgZ2lmdHMgdG8gdHJ5IHRvIGluZmx1ZW5jZSBtZS4gSSBsZWFybmVkIHRvIGp1c3QgaWdub3JlIHRoYXQuIEkgbWFrZSBkZWNpc2lvbnMgYmFzZWQgb24gd2hhdCBpcyBiZXN0IGZvciBteSBodXNiYW5kIGFuZCBJLiBUaGV5IGRvIG5vdCBmYWN0b3IgaW50byBteSBsaWZlIGNob2ljZXMuIElmIHRoZXkgd2FudCB0byBnaXZlIG1lIHNvbWV0aGluZywgZmluZS4gQnV0IHRoYXQgZG9lcyBub3QgZW50aXRsZSB0aGVtIHRvIGNvbnRyb2wgb3ZlciBteSBsaWZlLiBBIGdpZnQgaXMgYSBnaWZ0IGFuZCB0aGVyZSBzaG91bGQgYmUgbm8gc3RyaW5ncyBhdHRhY2hlZC4gVGhhdCBkb2VzbiBtYWtlIG1lIHVuZ3JhdGVmdWwuClRoZSByaXNlIG9mIGZlbnRhbnlsLCBhbiBpbmNyZWFzZSBpbiB0aGUgcG90ZW5jeSBvZiB3aGF0IGlzIHNvbGQgYXMgaGVyb2luLCBhbmQgYSBkcm9wIGluIGl0cyBwcmljZSBoYXMgY29sbGlkZWQgd2l0aCBhIHdhdmUgb2YgcGVvcGxlIGFkZGljdGVkIHRvIG9waW9pZCBwYWlua2lsbGVycywgd2l0aCBhcm91bmQgMzAwIG1pbGxpb24gcHJlc2NyaXB0aW9ucyBhIHllYXIuIEFzIHBvbGljZSBoYXZlIHNodXQgZG93biBwaWxsIG1pbGxzLCBmYXRhbCBvdmVyZG9zZXMgaGF2ZSBzaGlmdGVkIGZyb20gcGFpbiBtZWRpY2F0aW9ucyB0byBoZXJvaW4sIG9mdGVuIHNwaWtlZCB3aXRoIGZlbnRhbnlsLCBhY2NvcmRpbmcgdG8gdGhlIENEQy4gClRoZSBzaGFyZSBvZiB0aG9zZSB3aG8gcmVwb3J0ZWQgbmVnYXRpdmUgb3Igc29tZXdoYXQgbmVnYXRpdmUgZWZmZWN0cyB3YXMgNDEgcGVyIGNlbnQsIHVuY2hhbmdlZCBmcm9tIHRoZSBwcmV2aW91cyBzdXJ2ZXkuLiAKTm90IHF1aXRlIGFzIGF1dG9tYXRlZCBhcyB3aGF0IHlvdSBhcmUgc3VnZ2VzdGluZywgYnV0IHNvbWV0aGluZyBsaWtlIHRoaXMgbWF5IGJlIHBvc3NpYmxlIGFuZCBmYWlybHkgY2hlYXAuLiAKT3IgdGhleSBjYW4ganVzdCBtYWtlIFJpbiB0cmFucy4gQ29uc2lkZXJpbmcgaG93IEF0bHVzVVNBIHN0dWNrIHdpdGggdGhlaXIgdHJhbnNsYXRpb24gb2YgUDQgKEkgbWVhbiBhIGxvdCBvZiB0aGluZ3Mgd291bGRuIG1ha2Ugc2Vuc2UgaWYgdGhleSBzdWRkZW5seSBjYWxsZWQgdGhlIGNoYXJhY3RlciB0cmFucykgdGhleSBwcm9icyB3aWxsIGRvIHRoZSBzYW1lIHRoaW5nIGhlcmUuIApXZSB3b3JrIG9uIHNvbWV0aGluZyBlbHNlLCBvciB3ZSBjYW4gZ28gZmlzaGluZyBhbmQgd29yayB0aGUgbmV4dCBkYXkgaW5zdGVhZC4gVGhpcmQgbGVzc29uIGlzIHRvIGVzdGFibGlzaCB3aGF0IHRoZSBib3R0b20gbGluZSBpcyB3aXRoIGEgcmlza3kgcHJvamVjdC4gSGUgYW5kIGhpcyB3aWZlIFNhcmFoIGhhZCBhIGZyYW5rIGNvbnZlcnNhdGlvbiBhcm91bmQgdGhlIGNvc3Qgb2YgYnV5aW5nLCByZW5vdmF0aW5nIGFuZCBydW5uaW5nIHRoZSByZXNvcnQsIGFzIHdlbGwgYXMgdGhlIHBvdGVudGlhbCBpbXBhY3QgdG8gdGhlIGNoaWxkcmVuIGVkdWNhdGlvbnMgZnJvbSBiZWluZyBvdXQgb2YgZm9ybWFsIHNjaG9vbGluZyBmb3IgYW4gZXh0ZW5kZWQgcGVyaW9kLiAKV2VsbCBhcyBzb29uIGFzIHlvdSB0dXJuIG9uIHRoZSBjYW1lcmEgeW91IHdvdWxkIGhhdmUgYWxyZWFkeSBjYXB0dXJlZCB0aGUgYXRtb3NwaGVyZSB3aGljaCBpcyBpbiBhIHBlcnBldHVhbGx5IHBvbGx1dGVkIHN0YXRlLiBJIGFsc28gdGhpbmsgaXQgd291bGQgYmUgYSBncmVhdCB0aGluZyB0byBmaWxtIGVkdWNhdGlvbmFsIHZpZGVvcyBpbiBtYW55IGRpZmZlcmVudCBsYW5ndWFnZXMgb24gaG93IHRvIHNlcGFyYXRlIHJ1YmJpc2ggcHJvcGVybHkgd2hpY2ggaXMgc29tZXRoaW5nIHRoYXQgbWFueSBvZiB5b3Ugc2VlbSB0byBoYXZlIHNvbWUgdHJvdWJsZSBkb2luZyBwcm9wZXJseSwgdW5sZXNzIG9mIGNvdXJzZSB5b3UgbGl2ZSBvbiBhIFVTIG1pbGl0YXJ5IGJhc2Ugd2hpY2ggaXMgcHJldHR5IG11Y2ggZXhlbXB0ZWQgZnJvbSBwb2xsdXRpb24gcmVzdHJpY3Rpb25zLiBGaWxtaW5nIGFueSBmb29kIGl0ZW0gc2hvdWxkIGJlIGZpbmUgYXMgd2VsbCBzaW5jZSB0aGV5IGhhdmVuIHlldCBiZWVuIGdyYW50ZWQgYW55IGNpdmlsIHJpZ2h0cyBhcyBmYXIgYXMgSSBrbm93LgpObyBjYW1wYWlnbiB3YXMgYSBiaXQgb2YgYSBibG93IHRvIG1lLiAKTXkgZXggd291bGQgcmVhbGx5IG9ubHkgbGlzdGVuIHRvIHdoYXQgaGlzIGF0dG9ybmV5IHNhaWQsIHNvIHRoZSBzb29uZXIgSSBnb3QgdGhlIGlzc3VlIHRvIHRoYXQgZ3V5LCB0aGUgc29vbmVyIHNhaWQgaXNzdWUgd2FzIHJlc29sdmVkLiAKUmFjY29sdGEgcHJlbm90YXppb25pIGUgc2Vydml6aW8gc2VncmV0ZXJpYUFSVCBlbGV2ZW4gZGVzaWRlcmEgYXVtZW50YXJlIGxlIG9wcG9ydHVuaXQgZGkgZm9ybWF6aW9uZSBlIGNyZXNjaXRhIGRlaSBwcm9wcmkgc29jaSBhZGVyZW50aSB0cmFtaXRlIGwgZGkgdW4gZ2FtbWEgZGkgc2Vydml6aSBlIGluaXppYXRpdmUgcmVhbGl6emF0aSBncmF6aWUgYWxsYSBjb2xsYWJvcmF6aW9uZSBjb24gYW5pbWUgYWZmaW5pICh3aW4gd2luICBpbCBub3N0cm8gbW90dG8pCkF1Z3VzenQsIENha2UgU2hvcCwgYW5kIFJ1c3p3dXJtIGFyZSBmYWJ1bG91cyBidXQgZnVydGhlciBhd2F5OyBJIGxpa2UgQ2VudHJhbCBLYXZlaGF6IGFzIHdlbGwgYnV0IHNvbWUgdGhpbmsgaXQgdG9vIHRvdXJpc3R5LiAKSnVzdCBsaWtlIHNoZSBrbmV3IHdoYXQgdGhlIGNvbnNlcXVlbmNlcyBvZiBzcGVuZGluZyBoZXIgY2FyZWVyIGxvY2tpbmcgdXAgbWlub3JpdGllcyBmb3IgYnVsbHNoaXQgZHJ1ZyBjaGFyZ2VzIHdvdWxkIGJlLiBJIHByZWZlciBub3QgdG8gaW5zdWx0IGhlciBpbnRlbGxpZ2VuY2UgbGlrZSBoZXIgYXBvbG9naXN0cy4gClcuLCBmb2xsb3dpbmcgYSB0d28gbW9udGggaW52ZXN0aWdhdGlvbi4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApJIGFsc28gdXNlZCBkYWlseSBmaXNoIG9pbChoZWxwcyB0aGUgQ0JEKSwgbHR5cm9zaW5lIGluIHRoZSBtb3JuaW5nLCBtdWx0aXZpdGFtaW4sIG1hcnkgamFuZSwgYW5kIGJlbnpvIHRvIHNsZWVwIHNvbWUgZGF5cy4gCktub3cgd2hhdCB5b3VyIDEyIHllYXIgb2xkIGlzIGRvaW5nIG9uIHRoZSBJbnRlcm5ldC4gCiJKb2hubnkgRG9jIiBEb3VnaGVydHkuU291cmNlcyBzYWlkIHRoZSBpbnZlc3RpZ2F0aW9uIGlzIGEgam9pbnQgRkJJL0lSUyBwcm9iZSBpbnRvIGFsbGVnZWQgbWlzdXNlIG9mIHVuaW9uIGZ1bmRzIGFuZCBoYXMgYmVlbiB1bmRlcndheSBmb3IgbW9yZSB0aGFuIHR3byB5ZWFycy4gRGVwYXJ0bWVudCBvZiBMYWJvci5JbiBjb21wYXJpc29uLCBDaHJpc3RvcGhlciBFcmlrc29uLCB3aG8gbGVhZHMgdGhlIDI3LDgxNyBtZW1iZXIgTmV3IFlvcmsgSUJFVyBMb2NhbCAzLCB0b29rIGluICQyMTMsMjE5IGluIDIwMTU6ICQxNzcsMjg5IGluIHNhbGFyeSBhbmQgJDM1LDkzMCBpbiBvZmZpY2lhbCBkaXNidXJzZW1lbnRzLkV2ZW4gZm9yIG5vbiB3b25rcywgdGhlIDc3IHBhZ2UgTG9jYWwgOTggcmVwb3J0IG1ha2VzIGZhc2NpbmF0aW5nIHJlYWRpbmcuIApIb25lc3RseSwgc29tZXRoaW5nIGxpa2UgdGhpcyBpcyBzbyB0cml2aWFsIHRoYXQgeW91IHJlYWxseSBkb24ndCBldmVuIG5lZWQgdG8gbGV0IGl0IGJlY29tZSBhICJ0aGluZyIuIFlvdXIga2lkcyB3YXRjaCB3aGF0IHlvdSBkZWVtIGFwcHJvcHJpYXRlIGZvciB0aGVtIHdoaWxlIHRoZXkncmUgaW4geW91ciBjYXJlLiAKVGhlIHdhdGVyIGxldmVsIGluIExhIE1lc2EgRGFtIHJlYWNoZWQgaXRzIGxvd2VzdCBpbiAxMiB5ZWFycyBvbiBGcmlkYXkgYW5kIG1heSBnbyBkb3duIHRvIGl0cyBjcml0aWNhbCBsZXZlbCBvZiA2OSBtZXRlcnMgaW4gdGhlIG5leHQgdHdvIGRheXMgaW4gdGhlIGxhdGVzdCBzaWduIG9mIHRoZSB3b3JzZW5pbmcgRWwgTmlvIHBoZW5vbWVub24uIApQcmVmbG9wOiBCQiBpcyAkMTAuIFBsYXllciBBIHJhaXNlcyB0byAkMjUuIE1pbmltdW0gcmFpc2UgZm9yIHRoZSBuZXh0IHBsYXllciBpcyBhIHRvdGFsIG9mICQ0MDsgdGhlIGZpcnN0IHBsYXllciByYWlzZWQgJDE1IG1vcmUsIHNvIHRoZSBuZXh0IHBsYXllciBtdXN0IHJhaXNlIGF0IGxlYXN0ICQxNSBtb3JlLiAKTm93IHRoYXQgaGUgaXMgYmF0aHJvb20gc2VsZiBzdWZmaWNpZW50LCBhIGdvb2QgY29tbXVuaWNhdG9yLCBhbmQgbGVhcm5pbmcgdG8gcmVhZCBoZSdzIGEgbGl0dGxlIHNpZGVraWNrLiBUaGV5J3ZlIGludHJvZHVjZWQgaGltIHRvIHRoZWlyIGhvYmJpZXMgYW5kIGhlIGlzIGEgbGl0dGxlIGdlZWsgd2hvIGNhbiBraWNrIG15IGFzcyBhdCBNYXJpb2thcnQgYW5kIHBsYXlzIEQKSGUgbG92ZWQgZmluZGluZyB0aGUgcGVyZmVjdCBDaHJpc3RtYXMgdHJlZS4gSGUgbG92ZWQgdG8gcGxheSB0aGUgdWt1bGVsZSBhbmQgYmFuam8gYW5kIHRvIHJlY2l0ZSBlcGljIHBvZW1zLiBIZSBsb3ZlZCB0byB0cmF2ZWwgd2l0aCBOb3JlZW4gYW5kIHRvIGF0dGVuZCBFbGRlciBIb3N0ZWxzIGFuZCBtYWtlIG5ldyBmcmllbmRzIG9mIGFsbCBhZ2VzLiAKRkZYSVYgc3RpbGwgaGFzIGN1cnJlbmN5IGdlYXIgYW5kIGJyaW5nIGFibGUgdG8gYWN0dWFsbHkgdHJhY2sgeW91ciBwcm9ncmVzcyB0byBhIG5ldyBpdGVtIGZlZWxzIGZhciBiZXR0ZXIuIEFuZCBhbnkgdXBncmFkZXMgZnJvbSBkcm9wcyBpbiB0aGUgbWVhbnRpbWUgYXJlIGEgcGxlYXNhbnQgc3VycHJpc2UgcmF0aGVyIHRoYW4gc29tZXRoaW5nIHlvdSBhZ29uaXNlIG92ZXIuLiAKQWh1bmdyeWxpbHNhbmR3aGljaCB1Ckkgd291bGQgcmVjb21tZW5kIG51bWJlcmVkIHBva2VyIGNoaXBzIFRoZXkgaGF2ZSBjb21wZXRpdGl2ZSBwcmljZXMsIGEgZ3JlYXQgZ3JhcGhpYyBkZXNpZ25zIHRlYW0gd2hvIGFyZSB2ZXJ5IGZyaWVuZGx5IGFuZCBlYXN5IHRvIHdvcmsgd2l0aCBidXQgbW9zdCBpbXBvcnRhbnRseSB0aGVpciBkZXNpZ25zIGFyZSB0aGUgbW9zdCB1bmlxdWUgSSBoYXZlIHNlZW4gLiAKQWdyZWVkLCBzYXlpbmcgdGhlIHdheSB0byBjcmVhdGUgbW9yZSBlbnRyZXByZW5ldXJzIGlzIHRvIHBlb3BsZSBhdCBhbiBlYXJseSBhZ2UgYW5kIHNob3cgdGhlbSB3aGF0IG90aGVyIGVudHJlcHJlbmV1cnMgaGF2ZSBkb25lLiBXZSBoYXZlIHRvIGdldCBvdXIga2lkcyBmb2N1c2VkIG9uIHdoYXQgZ29pbmcgb24gaW4gdGhlIHdvcmxkLiBUaGluayBlbnRyZXByZW5ldXJzIGFyZSBtYWRlLCBDcm94b24gc2FpZC4gClNjaG1vc2J5IHUKVGhlIG1vcmUgeWVhcnMgeW91IHB1dCBpbiwgdGhlIG1vcmUgUFRPIHlvdSBnZXQgZWFjaCB5ZWFyLiBJZiB5b3UgZG9uJ3QgdXNlIGFsbCB5b3VyIFBUTywgeW91IGNhbiBidXkgaXQgb3V0IGF0IHRoZSBlbmQgb2YgdGhlIHllYXIgZm9yIGEgYm9udXMuIApDYW5hZGEgY2VudHJhbCBiYW5rIGxlZnQgaXRzIGJlbmNobWFyayBpbnRlcmVzdCByYXRlIHVuY2hhbmdlZCBhdCAxLjc1IHBlciBjZW50IG9uIE1hcmNoIDYgYW5kIHNpZ25hbGxlZCB0aGF0IHBvbGljeSBoYXMgZW50ZXJlZCBhbiBleHRlbmRlZCBwZXJpb2Qgb2Ygc3Rhc2lzLgoyLDEgYmFybiBwZXIga3Zpbm5lIGVyIGZkc2Vsc3JhdGVuIHNvbSBza2FsIHRpbCBmb3IgYXQgZm9sa2V0YWxsZXQgaG9sZGVyIHNlZyBydW5kdCBzYW1tZSBuaXYgKDAsMSBla3N0cmEgZm9yICBnanJlIG9wcCBmb3IgZGUgc29tIGlra2Uga2FuIGYgYmFybiwgZHIgdGlkbGlnIG9zdikuCk11Y2ggbGlrZSBhIHBsYXN0aWMgcHJvdGVjdG9yIGNvdmVycyB0aGUgZW5kIG9mIHlvdXIgc2hvZWxhY2UsIHRlbG9tZXJlcyBrZWVwIGNocm9tb3NvbWUgZW5kcyBmcm9tIGZyYXlpbmcsIHdoaWNoIGtlZXBzIGFuIG9yZ2FuaXNtJ3MgZ2VuZXRpYyBpbmZvcm1hdGlvbiBpbnRhY3QuIFdpdGhvdXQgdGVsb21lcmVzLCBjZWxscyBjb3VsZCBub3QgZGl2aWRlIHdpdGhvdXQgbG9zaW5nIGdlbmVzLiBIb3dldmVyLCBhcyBjZWxscyBkaXZpZGUsIHdoaWNoIHRoZXkgZG8gdGhyb3VnaG91dCBvdXIgbGl2ZXMgdG8gcmVwbGVuaXNoIHNraW4gYW5kIG90aGVyIG9yZ2FucywgdGVsb21lcmVzIHNocmluay4gClZzLiBJdCBxdWl0ZSBzdHJhaWdodCBmb3J3YXJkIHdpdGggdGhlIGJpZ2dlc3QgaHVyZGxlIGJlaW5nIGNyZWF0aW5nIGNhcmVlciBza2lsbHMgZm9yIHZhcmlvdXMgU1IgZmxhdm9yZWQgcGVvcGxlLgoyKSBJdCBjb3VsZCBhbHNvIG1lYW4gdGhhdCB0aGVyZSB3YXMgYSByZWFsbHkgcm91Z2ggZHJhZnQgb2YgVklJSSBvdXQgdGhlcmUsIGp1c3QgdmVyeSBiYXNpYywgYW5kIFJpYW4gZGlkbiBrZWVwIGFueSBvZiB0aGF0LiBUaGF0IGNvdWxkIG1lYW4gc28gbWFueSB0aGluZ3MsIHRob3VnaC4gTWF5YmUgaXQgbWVhbnMgaGUgZGlkbiBrZWVwIGFueSBvZiB0aGUgd3JpdHRlbiBsaW5lcyBidXQga2VwdCB0aGUgbWFpbiBzdG9yeS4gCkluIG1vc3QgcG9rZXIgcm9vbXMgaXQgaXMgbm90IGFsbG93ZWQgdG8gaGlkZSB5b3VyIGNhcmRzIGZyb20gdmlldy4gVGhpcyBpcyBiZWNhdXNlIHBsYXllcnMgbWFrZSB0aGVpciBkZWNpc2lvbnMgYmFzZWQgb24gaG93IG11Y2ggcGVvcGxlIGFyZSBjdXJyZW50bHkgcGxheWluZyBpbiB0aGUgaGFuZCBiYXNlZCBvbiB0aGVpciBwb3NpdGlvbi4gCkkgbGlrZSBUZXNsYSBhbmQgVGVzbGEgaGFzIGJlZW4gbXkgZHJlYW0gY2FyIGZvciBhYm91dCA1IHllYXJzIHNpbmNlIEkgd2FzIGEgeW91bmcgdGVlbmFnZXIsIGJ1dCBJIG5vdCBvbmUgdG8gcm9vdCBmb3IgY29tcGFuaWVzIGp1c3QgYmVjYXVzZSBvZiB0aGVpciBuYW1lIG9yIGhpc3RvcnkuIEkgcm9vdCBmb3Igd2hvZXZlciBicmluZ3MgdGhlIG1vc3QgaW5ub3ZhdGl2ZSBwcm9kdWN0IHRvIG1hcmtldC4gClRoaXMgd2FzIHRoZSB0cnVlIGFjdCBvZiBoZXJvaXNtIS4gCldlbGwgdGhlcmUgaXMgbm90IG11Y2ggc3RyYXRlZ3kgZm9yIGNvcnZldHRlIGNsYXNzIGFuZCB5b3Ugc2hvdWxkIGFkdmFuY2UgcGFzcyB0aGUgdXNlZnVsbmVzcyBvZiBpdCBxdWl0ZSBmYXN0LiAKVGV4YXMgcG9rZXIgZXZlbiBoYXMgZGlmZmVyZW50IHZlcnNpb25zLCBhcyB0aGVyZSBhcmUgbm8gbGltaXQsIHBvdCBsaW1pdCwgYW5kIGZpeGVkIGxpbWl0IHZhcmlhdGlvbnMuIFRoZXNlIGFsbCByZWZlcnJlZCB0byB2YXJpb3VzIHdhZ2VyaW5nIGxpbWl0cyBkdXJpbmcgdGhlIGNvdXJzZSBvZiBhIGdpdmVuIGhhbmQsIHRoZSBiYXNpYyBydWxlcyBvZiB0aGUgZ2FtZXMgdGhlbXNlbHZlcyByZW1haW5lZCB1bmNoYW5nZWQuIFRoZSBubyBsaW1pdCB2ZXJzaW9uIGlzIHRoZSBraW5kIHBsYXllZCBvbiB0ZWxldmlzaW9uLiBJdCBpcyBwcm9iYWJseSB0aGUgbW9zdCBleGNpdGluZyBhbmQgdGhhdCBpcyB3aHkgaXQgZ2V0cyBzbyBtdWNoIGFpcnRpbWUuIEluIG5vIGxpbWl0IHBva2VyLCBhIHBsYXllciBjYW4gbWFrZSB0aGUgZmFtb3VzIGFsbCBpbiBiZXQgYXQgZHVyaW5nIGFueSByb3VuZCBvZiBiZXR0aW5nLiBJbiBwb3QgbGltaXQgcG9rZXIsIHBsYXllcnMgYXJlIGxpbWl0ZWQgaW4gdGhlaXIgd2FnZXJpbmcgdG8gdGhlIHNpemUgb2YgdGhlIHBvb2wsIG9yIHBvdCwgd2hpbGUgYmV0dGluZy4gRml4ZWQgbGltaXQgcG9rZXIgaGFzIGhhcmQgYW5kIGZhc3QgcnVsZXMgYWJvdXQgaG93IG11Y2ggeW91IGNhbiBiZXQsIG9yIGEgbXVsdGlwbGUgb2YgdGhlIGFudGUsIGFzIHRoZSBiZXR0aW5nIGxpbWl0LgpUaGF0IGl0LiAKVGVycnkgRGF2aXMsIG9mIHRoZSBNZXRybyB2aWNlIHVuaXQsIHNhaWQgaGlzIHJlY29tbWVuZGF0aW9uIHRvZGF5IHdvdWxkIGJlIG5vIGRpZmZlcmVudCB0aGFuIGluIHRoZSBtaWQgMTk5MHMuIllvdSdyZSBhc2tpbmcgZm9yIG1vcmUgcHJvYmxlbXMgaW4gcmVnYXJkcyB0byBpbnN0YW5jZXMgb2YgcHJvc3RpdHV0aW9uIHdoZW4geW91IGFsbG93IGNyb3NzIGdlbmRlcmVkIG91dGNhbGwsIiBEYXZpcyBzYWlkLkRhdmlkIExlZSwgZGlyZWN0b3Igb2YgYnVzaW5lc3MgbGljZW5zaW5nIGZvciBIZW5kZXJzb24sIHNhaWQgdGhlIHBvdGVudGlhbCBmb3IgaWxsZWdhbCBzZXh1YWwgYWN0aXZpdHkgaXMgdGhlcmUgaW4gZWl0aGVyIGNhc2UuIkV2ZXJ5b25lIHdvcnJpZXMgYWJvdXQgb3V0Y2FsbCBjcm9zcyBnZW5kZXJlZCBtYXNzYWdlLCBidXQgZXZlbiB3aXRoIHNhbWUgc2V4IG1hc3NhZ2UgeW91J3JlIG5ldmVyIGdvaW5nIHRvIGJlIDEwMCBwZXJjZW50IHN1cmUuIFRoZXJlJ3MgYWx3YXlzIGEgZmV3IGJhZCBhcHBsZXMsIGJ1dCB0aGF0IHNob3VsZG4ndCBzcG9pbCB0aGUgd2hvbGUgYmFycmVsLCIgTGVlIHNhaWQuU3RhdGlzdGljcyBmcm9tIE1ldHJvIFBvbGljZSBzdWdnZXN0IHRoYXQgdGhlcmUgYXJlIHNldmVyYWwgImJhZCBhcHBsZXMiIGluIHRoZSBvdXRjYWxsIG1hc3NhZ2UgaW5kdXN0cnkuU3Rpbmcgb3BlcmF0aW9ucyBkdXJpbmcgZmlzY2FsIHllYXIgMjAwMCAyMDAxIGludm9sdmluZyBzb21lIG9mIHRoZSAxNjAgc3VjaCBsaWNlbnNlZCBidXNpbmVzc2VzIGluIExhcyBWZWdhcyBhbmQgQ2xhcmsgQ291bnR5IHJlc3VsdGVkIGluIDcwIGFycmVzdHMgZm9yIHByb3N0aXR1dGlvbiwgYWNjb3JkaW5nIHRvIHJlY29yZHMgcHJvdmlkZWQgYnkgcG9saWNlLiBWaWNlIGRldGVjdGl2ZXMgd2VyZSBhc2tlZCB0byBwYXkgZm9yIHNleCBhZnRlciBjb250YWN0aW5nIG91dGNhbGwgbWFzc2FnZSBlc3RhYmxpc2htZW50cyBhZHZlcnRpc2VkIGluIG1hZ2F6aW5lcywgdGhlIHBob25lYm9vayBvdmVyIHRoZSBJbnRlcm5ldCBhbmQgZWxzZXdoZXJlLlRob3NlIGFycmVzdHMgcmVwcmVzZW50IGFuICJpbmZpbml0ZXNpbWFsbHkgc21hbGwgYW1vdW50IiBvZiByZWxhdGVkIHByb3N0aXR1dGlvbiB0aGF0IGdvZXMgdW5kZXRlY3RlZCwgU2d0LiAKVGhlIHpvbmVzIGFyZSBhbGwgYXdlc29tZSBhbmQgYWxsLCBidXQgdGhlICJvdGhlciBjb250aW5lbnQiIGlzIG1vc3RseSBkZXZvaWQgb2YgcXVlc3RzIHNhdmUgYSBmZXcgbmV1dHJhbCBxdWVzdGxpbmVzLiBBcyBhbGwgQkZBIGNvbnRlbnQsIGl0IHdhcyBkb25lIGFuZCBwdXQgb24gZmFybSBpbiB0aGUgZmlyc3Qgc2V2ZW4gZGF5cyBmb3IgbW9zdCBwZW9wbGUsIG1vc3RseSBsZWF2aW5nIG1vcmUgdGhhbiAzIG1vbnRocyBvZiB3YWl0IHVudGlsIDguMSBmb3IgbmV3IGNvbnRlbnQuIER1cmluZyBMZWdpb24sIHRoZSBhdmVyYWdlIHBrYXllciBjb21wbGV0ZWQgdGhlIFN1cmFtYXIgbm9uIHJlcGVhdGFibGUgY29udGVudCBieSB0aGUgbWlkZGxlIG9mIE9jdG9iZXIsIHJpZ2h0IG9uIHRpbWUgZm9yIDcuMSByZWxlYXNlIG9uIE9jdG9iZXIgMjV0aCAyMDE2Li4gCkRhenUgbXVzcyBlciBuYXRybGljaCB6dXZvciBmYWxzY2ggZ2VtaXNjaHQgdW5kIGFiZ2Vob2JlbiBoYWJlbiB1bSBkaWUgTGFnZSBkZXIgS2FydGVuIHp1IGVya2VubmVuLiBEaWUgYmVrYW5udGVzdGVuIE1ldGhvZGVuIHNpbmQgZGVyIHNlY29uZCBkZWFsIHVuZCBkZXIgYm90dG9tIGRlYWwuIApBIERhbmlzaCBjb21wYW55IGNhbGxlZCBDb21mb3J0IE9iamVjdHMgcmVwdXJwb3NlcyB2aW50YWdlIEhlcm1zIHNjYXJ2ZXMgYXMgJDE5MCAiaGFpciBjbG91ZHMuIiBNYWlzb24gQ2xvLCBhIEZyZW5jaCBvbmxpbmUgcmV0YWlsZXIsIHNlbmRzIGl0cyBjdXN0b21lcnMgYSBmcmVlIHNjcnVuY2hpZSB3aXRoIGV2ZXJ5IG9yZGVyLiAKSG93IFRvIFN0b3AgTmFpbCBCaXRpbmcKQWx0aG91Z2ggeW91IGNhbiBpbWFnaW5lIHRoZSBzY2VuZS4gQXMgdGhlIHBsYW5lIGhvdmVycyBvdmVyIEhlYXRocm93LCB0aGUgcGlsb3Qgc2F5cyAiR29vZCBhZnRlcm5vb24uIFRoaXMgaXMgeW91ciBwaWxvdC4gCk5vdywgbGV0cyBnZXQgb24gd2l0aCB0dXJuaW5nIHRoaXMgdGVhbSBhcm91bmQsIHdoaWNoIG1lYW5zLCBzYWRseSwgZWxpbWluYXRpbmcgQmFycnkgYW5kIGhpcyBvdmVycHJpY2VkIHNhbGFyeSBhbmQgZ2V0dGluZyB5b3VuZywgZWFnZXIgcGxheWVycyB3aG8gYWN0IGxpa2UgdGhleSB3YW50IHRvIHdpbi4gCkkgbmV2ZXIgaGFkIGtpZHMsIGJ1dCBJIGluY2xpbmVkIHRvIGFncmVlIHdpdGggaGVyLi4gClNoZSBhbHNvIGJlbGlldmVzIHN0cm9uZ2x5IHRoYXQga25vd2xlZGdlIGlzIHBvd2VyLiAKV2UgYWxzbyBsZWFybmVkIHRoYXQgU2NhbmRpbmF2aWFuIGFuZCBOb3J3ZWdpYW4gaG9zcGl0YWxzIGhhZCBsb3cgaW5mZWN0aW9uIHJhdGVzLiAKVGhlIGNvdXBsZSBJIGhhZCB0aGF0IGNsYWltIDIrIE1pbGxpb24gYXJlIGFib3V0IHRoZSBzYW1lIGxldmVsIG9mIGNoYW9zIGFzIHRoZSBLYW1ha2l6ZS4gCkMgY2lucSBhbnMgZGUgciBKIGwgZGUgZGVtYW5kZXIgYXV4IGFydGlzdGVzIHF1ZWxzIHNvbnQgbGV1cnMgciBsZXMgcGx1cyBmb3VzLiBJbCB5IGEgbG9uZ3RlbXBzLCBJYml6YSwgcXVlbHF1IG0gZGl0IHF1IHNvdWhhaXRhaXQgaW50IHVuZSBub3V2ZWxsZSBhcmNoaXRlY3R1cmUgZGFucyBkZXMgY2ltZXRpIGF1eCBQaGlsaXBwaW5lcyBwb3VyIHF1IHNvaWVudCBtb2lucyBtb3JiaWRlcy4gQyB1biBjb25jZXB0IHRyIHBoeXNpcXVlLiBNYWlzLCBwYXJ0aXIgZGUgbCBqIGNvbW1lbmMgciBwb3VyIHIgbGUgcml0dWVsIGRlIGxhIG1vcnQgcG91ciBlbiBmYWlyZSB1bmUgYyBkZSBsYSB2aWUuIE9uIGF2YW5jZSBncmFkdWVsbGVtZW50IGRhbnMgY2UgcHJvamV0LiBDZSBuIHF1ZSBsYSBwcmVtaSBFbnN1aXRlLCBvbiBwZW5zZSBhdXggbGlldXggZGUgbSBjb21tZSBsZXMgbWF1c29sIFBvdXIgbGUgcmVzdGUsIHRvdXQgZCBkZXMgcHJvZ3IgZGUgbGEgdGVjaG5vbG9naWUuCkl0IHNlZW1zIC9yL3JlbGF0aW9uc2hpcHMgaXMgdXN1YWxseSBqdXN0IHBlb3BsZSBub3Qgc2VlaW5nIHRoZWlyIHBhcnRuZXIgZm9yIHdobyB0aGV5IGFyZSAoZXNwZWNpYWxseSByaWdodCBiZWZvcmUgYSBicmVha3VwKS4gVGhpcyBpcyBqdXN0IGJpemFycmUuIEkgd291bGQgdmVyeSBtdWNoIG5vdCBob2xkIGl0IGFnYWluc3QgaGltLgpXaGlsZSBwYWNrZWQgdG8gdGhlIGJyaW0gd2l0aCBhcmNhZGUgZ2FtZXMsIHBvb2wsIGFpciBob2NrZXkgYW5kIHBpbmcgcG9uZywgdGhlIFdhbHJ1cyBzZWVtcyB0byBiZSBrbm93biBmb3IgdGhpcyBnYW1lLiBUaGUgcm9wZSwgdGllZCB0byB0aGUgY2VpbGluZywgaGFzIGEgc21hbGwsIG1ldGFsIGhvb3AgYXQgdGhlIGVuZC4gT24gYSBwb3N0LCB0aGVyZSdzIGEgaG9vay4gClNvbWUgY29udGV4dCBmb3IgdGhlIHF1ZXN0aW9uLiAKSG93ZXZlciwgZXhjbHVkaW5nIGNlcnRhaW4gb25lIHRpbWUgaXRlbXMsIHRoZSBkaXZpc2lvbiBhZGp1c3RlZCBuZXQgaW5jb21lIHdhcyAkNjMyIG1pbGxpb24sIGRvd24gJDI2IG1pbGxpb24gb3IgZm91ciBwZXIgY2VudCBmcm9tIHRoZSBzYW1lIHBlcmlvZCBpbiAyMDE4Li4gCkkgaGVyZSBjb21tdW5pY2F0aW5nIHRvIHBlb3BsZSBvbiBSZWRkaXQsIHRoYXQgYWxyZWFkeSBtYWtlcyBtZSBtb3JlIGZvcnR1bmF0ZSB0aGFuIHByb2JhYmx5IDUwJSBvZiBodW1hbml0eS4gCk1hdHQgYnVsa2luZyB1cCBieSA1MCBwb3VuZHMuIApBbmQgb24gdGhlIHdhbGwgaXMgYSBjb2xsYWdlIG9mIGFydGlmYWN0cywgbGlrZSB0aGUgZGVjayBvZiBjYXJkcyB0aGF0IHdhcyBiZWluZyB1c2VkIHRoYXQgZmF0ZWZ1bCBkYXkuLiAKRXZlbnR1YWxseSwgaGUgYWNjZXB0cyB0aGF0IGV2ZW4gdGhvdWdoIHRoZSBwcm9mZXNzb3IgaXMgbm90IHBhcnRpY3VsYXJseSBsaWtlYWJsZSwgaGUgcHJlcGFyZXMgc3R1ZGVudHMgZm9yIHRoZSBraW5kIG9mICJoYW5kIHRvIGhhbmQgY29tYmF0IiB0aGV5IHdpbGwgZmFjZSBhZnRlciB0aGV5IGdyYWR1YXRlLiAKQnkgdXNpbmcgdGhpcyBzdWJyZWRkaXQsIHlvdSBhZ3JlZSB0aGF0IG5vIHBvc3Qgb3IgY29tbWVudCBhbnl3aGVyZSBpbiB0aGlzIHN1YnJlZGRpdCBjb25zdGl0dXRlcyBsZWdhbCBhZHZpY2Ugb3IgY3JlYXRlcyBhbiBhdHRvcm5leSBjbGllbnQgcmVsYXRpb25zaGlwIGJldHdlZW4geW91IGFuZCBhbnkgcGVyc29uLiAKSSB0aG91Z2h0IGl0IHdhcyBhIHZlcnkgaG9uZXN0IGFuZCBicmF2ZSBhbnN3ZXIuLiAKSWYgeW91IHdhbnQgeW91ciBwb2tlciBjYXJkcyBzYWZlIGluIGV2ZXJ5IHNpdHVhdGlvbiwgeW91IHNob3VsZCBnZXQgaG9sZCBvZiBhIHBva2VyIGNhcmQgY292ZXIgb2YgaW50ZXJuYXRpb25hbCBzdGFuZGFyZC4gVGhlc2UgY2FyZCBjb3ZlcnMgb3IgY2FyZCBndWFyZHMgYXJlIGF2YWlsYWJsZSBpbiBhbGwgdGhlIGludGVybmF0aW9uYWwgcG9rZXIgc3RvcmVzLiBXaGVuIHRoZSBpbnRlcm5hdGlvbmFsIHBlb3BsZSBzdGFydGVkIGJlY29taW5nIGNvbmNlcm5lZCBhYm91dCB0aGUgcG9rZXIgY2FyZHMsIHRoZSBtZXJjaGFudHMgd2VyZSBhbHNvIGludGVyZXN0ZWQgaW4gc2VsbGluZyB0aGVtIGFzIHdlbGwuIFNpbHZlciBDdXQgT3V0IEhlYXJ0IFBva2VyIENhcmQgUHJvdGVjdG9yIGlzIG9uZSBvZiB0aGUgY2FyZHMgYmVpbmcgcG9wdWxhciBpbiBhbGwgdGhlIG1hcmtldHBsYWNlcyBhcm91bmQuIFRoYXQncyB3aHkgdGhlIG1lcmNoYW50cyBhcmUgc3RvcmluZyBhbGwgdGhlc2UgZm9yIHRoZSBwbGF5ZXJzIGFyb3VuZC4gWW91IGNhbiBwdXJjaGFzZSB0aGUgcHJvZHVjdHMgZnJvbSBhbiBvbmxpbmUgc3RvcmUgYW5kIHdhaXQgZm9yIHByb2R1Y3QgZGVsaXZlcnkgcmlnaHQgYXQgeW91ciBob21lLgpJdCBhbGwgdGhlIHNhbWUgYXMgaXQgaXMgZm9yIGhlciB0byBzYXkgd2hhdCBzaGUgd2FudHMgdG8uIApCYWNrLCB0YWlsIGRvd24sIGFueXRoaW5nIHRoYXQgc2hvd3MgYSBzaWduIG9mIGRpc2NvbWZvcnQsIHN0b3AhCkp1c3QgdGVsbGluZyB0aGUgc3Rvcnkgb2Ygd2hhdCBoYXBwZW5lZCB0byBtZSBiZWNhdXNlIEkgdGhvdWdodCBpdCB3YXMgaW50ZXJlc3RpbmcgZW5vdWdoIGFuZCBJIHJlYWxseSBuZWVkZWQgdG8gZ2V0IGl0IG9mZiBteSBjaGVzdC4gSSBrbm93IHRoaXMga2luZHMgb2YgdGhpbmdzIGFyZSBoYXJkIHRvIHVuZGVyc3RhbmQgYW5kIGV2ZW4gaGFyZGVyIHRvIGJlbGlldmUgd2hlbiB5b3UgaGF2ZSBuZXZlciBleHBlcmllbmNlZCBzb21ldGhpbmcgbGlrZSBpdCwgYW5kIGFsc28gSSBhbSBub3Qgc3RhdGluZyB0aGF0IHRoZXkgYXJlIHRydWUgb3IgdGhhdCB5b3Ugc2hvdWxkIGJlbGlldmUgaW4gdGhlbSBlaXRoZXIuIEV2ZXJ5b25lIGhhcyB0aGVpciBvd24gYmVsaWVmcy4KSSBhbHNvIGhhdmUgc29tZSByZWFsbHkgZ3JlYXQgJDMwIDQwIHNob3J0cyB0aG91Z2gsIHNvIGl0IG5vdCBhcyBpZiB5b3UgaGF2ZSB0byBzcGVuZCBhIHRvbiBvZiBtb25leSB0byBnZXQgc29tZXRoaW5nIGdvb2QuIApZb3UgY2FuIHJlYXNvbmFibHkgZGlzY291bnQgY2VydGFpbiBoYW5kcyBsaWtlIDc1byB1c3VhbGx5IHdoZW4gc29tZW9uZSByYWlzZXMgdXRnLiAKSW4gdGhlIGVuZCBvZiAyMDA2LCBJIG1hZGUgYSBnb2FsIG9mIG15c2VsZjogdG8gYmUgdGhlIG1vc3QgZmFtb3VzIGZlbWFsZSBwb2tlciBwbGF5ZXIgaW4gdGhlIHdvcmxkLiAKVGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBkcmV3IDgyLDM2MCBwbGF5ZXJzIGxhc3QgeWVhciB3aXRoIDEwIHBlciBjZW50IHdpbm5pbmcgc29tZSBvZiB0aGUgJDIyNy43IG1pbGxpb24gaW4gcHJpemUgbW9uZXkuIEJ1dCB0aGlzIHllYXIgYXBwZWFyZWQgdG8gYmUgdW51c3VhbGx5IGFtYml0aW91cywgY2F0ZXJpbmcgdG8gdGhlIHJlZ3VsYXIgZ3V5IHdobyBkb2VzbiBtaW5kIHBhcnRpbmcgd2l0aCAkNTY1IGJ1dCB3b3VsZCBibHVzaCBhdCBzcGVuZGluZyAkMSwwMDAsIHdoaWxlIHN0aWxsIGF0dHJhY3RpbmcgcHJvcyB3aG8gZG9uIHdhbnQgdG8gcGxheSBhZ2FpbnN0IHRob3NlIGd1eXMuIApTaGUgZmVlbHMgbGlrZSBMYXJpc3NhIG1vdmVkIGludG8gSEVSIGhvdXNlLCBzbyBzaGUncyB0aGUgSEJJQy4gClJ1cmFsIGFuZCByZWdpb25hbCBWaWN0b3JpYW5zIHNpbXBseSBjYW5ub3Qgc3VzdGFpbiBnYW1ibGluZyBsb3NzZXMgd29ydGggbW9yZSB0aGFuIGhhbGYgYSBiaWxsaW9uIGRvbGxhcnMgZWFjaCB5ZWFyLiBUaGF0J3MgJDEuNiBtaWxsaW9uIGJlaW5nIGxvc3QgZXZlcnkgZGF5IG91dHNpZGUgb2YgbWV0cm9wb2xpdGFuIE1lbGJvdXJuZS4gCkl0IGNhbiBhbHNvIGhhdmUgdG8gZG8gd2l0aCB0aGUgZW52aXJvbm1lbnQsIGlmIHlvdSBidW5jaGVkIHVwIGluIGEgc21hbGwgcm9vbSB3aXRoIG1pbmltYWwgdmVudGlsYXRpb24sIHlvdSBnb25uYSBnZXQgYSBob3Rib3ggZWZmZWN0LiBJIGtub3cgY2F1c2UgaW4gdGhvc2Ugc2l0dWF0aW9ucyBqdXN0IG9uZSBwdWxsIGlzIGVub3VnaCB0byBnZXQgbWUgdG8gYSBbNSA2XSB3aGlsZSBhbiBhcmVhIHN1Y2ggYXMgb3V0ZG9vcnMgSSBub3doZXJlIG5lYXIgdGhhdC4uIApZb3UgZmVlbCBsaWtlIGxlc3Mgb2YgYSB3b21hbiBub3QgYmVjYXVzZSB5b3UgZG9uIGhhdmUgY2hpbGRyZW4sIGJ1dCBiZWNhdXNlIHlvdSBpbmNhcGFibGUgb2YgaGF2aW5nIGNoaWxkcmVuLiBJIG1ha2Ugbm8ganVkZ21lbnQgYWJvdXQgcGVvcGxlIGNob29zaW5nIG5vdCB0byBoYXZlIGNoaWxkcmVuIGFuZCBuZXZlciBoYXZlLiAKSSB0aGluayB5b3UgYXJlIGF3YXJlIHdoZW4geW91IHNheSBoZXJlIGJ1dCBoZXJlIGFuZCBTRiBiYXkgdGVuZCB0byBiZSBwZW9wbGUgd2hvIHdhbnQgdG8gbWluL21heCB0aGVpciBjYXJlZXIuIEkgY2FsbCBpdCBlbGl0ZWNvZGUgZm9yIGEgcmVhc29uLiBOZWl0aGVyIHRoZSBkZWdyZWUgb3IgbGVldGNvZGUgd2lsbCBodXJ0IHlvdXIgY2hhbmNlcyBvZiBhIGpvYiBidXQgbXkgcG9pbnQgd2FzIHRoYXQgYm90aCBhY2NvbXBsaXNoIGRpZmZlcmVudCB0aGluZ3MuIExlZXRjb2RlIHdpbGwgaGVscCB3aXRoIHRoZSBpbnRlcnZpZXcgcHJvY2VzcyBhbmQgc2hvdWxkIGJlIHVzZWQgYXMgaW50ZXJ2aWV3IHByZXAuIFRoZSBkZWdyZWUgd2lsbCBpbmNyZWFzZSB5b3VyIGZ1bmRhbWVudGFsIGtub3dsZWRnZSB3aGlsZSBsZWV0Y29kZSBpcyBtb3JlIGFib3V0IGxlYXJuaW5nIHRvIGlkZW50aWZ5IHBhdHRlcm5zLiBTdXJlIExTQVQgcHJlcCBoZWxwcyB5b3UgZG8gYmV0dGVyIGJ1dCBpZiB5b3UgZG9uIGtub3cgdGhlIGZ1bmRhbWVudGFscyB0aGVuIHRyeWluZyB0byBtZW1vcml6ZSBwcm9ibGVtcyBpcyBub3QgZWZmZWN0aXZlLiBBIGxvdCBvZiBzdHVmZiBpc24gdGVzdGVkIGR1cmluZyBhbiBpbnRlcnZpZXcgYnV0IHRoZSBPTVNDUyB3aWxsIGxvb2sgYSBsb3QgYmV0dGVyIG9uIHlvdXIgcmVzdW1lIGFuZCBoZWxwIHlvdSBnZXQgeW91ciBmb290IGluIHRoZSBkb29yIGFuZCBuZWdvdGlhdGUgaGlnaGVyIHNhbGFyaWVzLgpLbm93IGhvdyB0byBwbGF5IGEgYmFzaWMgZ2FtZS4gCkZvciBsb2NhbCBzdHVmZiwgTmF2ZXIvRGF1bSBkZWZpbml0ZWx5IGdpdmUgYmV0dGVyIHJlc3VsdHMuIApIaXMgZGVjaXNpb24gbWF5IGhhdmUgYmVlbiByYXRpb25hbC4uIApCcmFkeSBzaHJ1Z2dlZCBhbmQsIGdldHRpbmcgc3RlYWRmYXN0IHByb3RlY3Rpb24sIGNvbm5lY3RlZCB3aXRoIENocmlzIEhvZ2FuIGZyb20gdGhlIDI2IGZvciBhbm90aGVyIHRvdWNoZG93bi4KQnV0IHlvdSB3b24gZmluZCBhbnl0aGluZyB1bmRlciAiQXJ0Ii4gCkhvcGtpbnNvbiBhZGRlZCB0aGF0IHBvbGljZSByZWNlaXZlZCBzZXZlcmFsIHRpcHMgdGhyb3VnaCBzb2NpYWwgbWVkaWEgYWJvdXQgdGhlIGlkZW50aXR5IG9mIHRoZSBzdXNwZWN0LgpJdCB3YXMgYSBxdWVzdGlvbiBvZiB3aGV0aGVyIG9yIG5vdCBhIHBlcnNvbiB3b3VsZCB2YWx1ZSByZXNwb25zaWJsZSBwZXJzb25hbCBmaW5hbmNlIGFuZCB0aGUgbWFueSBiZW5lZml0cyBvZiBoYXZpbmcgYSBnb29kIGNyZWRpdCBzY29yZS4gSSBsYWlkIG91dCBhIGNhc2UgZm9yIG15c2VsZiBhbmQgd2h5IEkgZG9uIHRoaW5rIEkgd291bGQgaGF2ZSBsZWFybmVkIHVubGVzcyBJIGhhZCBmYWlsZWQuIApDeWNsaXN0IGtpbGxlZCBpbiBoaXQgYW5kIHJ1biBjcmFzaCBhdCAzMHRoIGFuZCBKYXkgUm9hZCBpbiBCb3VsZGVyIENvdW50eQpUaGUgZW50aXJlIG5vdmVsIGhlIHRyaWVzIHRvIGdldCBwZW9wbGUgdG8gbGlzdGVuIHRvIGhpbSwgYW5kIHRob3VnaCBzb21lIGRvLCBoZSBkb2VzbiByZWFsbHkgZmluZCB0aGUgY29tZm9ydCBoZSBuZWVkcyBmcm9tIHRoZW0uIEhlIHdpdG5lc3NlcyBhIHNjaG9vbG1hdGUgZGllIHdlYXJpbmcgaGlzIHN3ZWF0ZXIsIGhlIGxvc3QgaGlzIGJyb3RoZXIsIGFuZCBoZSBiZWVuIGtpY2tlZCBvdXQgb2Ygc2Nob29sLiBIb2xkZW4gaXNuICJ3aGlueSIgbGlrZSBtb3N0IGtpZHMgYXJlLCBoZSByZWFsbHkgZG9lcyBoYXZlIGFuIGlubmVyIGJhdHRsZSBoZSBzdHJ1Z2dsZXMgdG8gZmlnaHQuIApTaW5naCBzYWlkIHRoZSBMb25kb25lcnMgc3RydWdnbGVzIGFyZSBjb21tb24gYWNyb3NzIHRoZSBjb3VudHJ5LCB3aGVyZSB0aGUgYXBhcnRtZW50IHZhY2FuY3kgcmF0ZSBpcyBqdXN0IDIuNCBwZXIgY2VudCwgdXAgc2xpZ2h0bHkgZnJvbSBMb25kb24gMi4xIHBlciBjZW50LgoobXkgY2hhcmFjdGVyKSBBbGx5LCB0aGVyZSBhIHN1Z2dlc3Rpb24gb2YgaXQgYXMgd2VsbCwgd2hlbiBzaGUgd2Fsa3MgdXAgdGhlIHN0YWlycyBhbmQgc2F5cyB0byBoZXIgZmF0aGVyLCBrbm93IGFsbCBhYm91dCBkcnVncyBzaGUgc2hhcmVkLiBUaGluayBpdCBpbXBvcnRhbnQgdG8gY2FyZSBmb3IgcGVvcGxlIGFuZCB0byBsb29rIG91dCBmb3IgdGhlaXIgbWVudGFsIGhlYWx0aC4gVGhpcyB5ZWFyLCBzaGUgY29uZmVzc2VkIHRoZSBmaWxtIGhhZCBjaGFuZ2VkIGhlciBhbmQgbWFkZSBoZXIgbW9yZSBjb25maWRlbnQ6IChkaXJlY3RvciBhbmQgY28gc3RhcikgQnJhZGxleSAoQ29vcGVyKSB3b3JrIHdhcyBwaGVub21lbmFsIGFuZCB0aGVuIGhhdmluZyBoaW0gYmVsaWV2ZSBpbiBtZSwgaXQgZ2F2ZSBtZSBtb3JlIGFtbXVuaXRpb24gdG8gYmVsaWV2ZSBpbiBteXNlbGYgYW5kIEkganVzdCBmZWVsIHNvIGJsZXNzZWQgdG8gaGF2ZSBoYWQgdGhhdCBleHBlcmllbmNlLi4gCkJ1dCBoaW0gaGFtbWVyaW5nIHRoYXQgb3ZlciBhbmQgb3ZlciwgaXQncyBiZWNvbWUgc2Vjb25kIG5hdHVyZS4uIApJbiB0aGUgc2FtZSB3YXksIGlmIHlvdSBjYXJ0IGhhbGYgb2YgeW91ciBwb3NzZXNzaW9ucyBvbnRvIHlvdXIgZnJvbnQgbGF3biBmb3IgYSB5YXJkIHNhbGUsIHlvdSBhcmUgcGFydGljaXBhdGluZyBpbiBjb21tZXJjZSBmcm9tIGEgZGlmZmVyZW50IGFuZ2xlLiAKUG9raW5nIGFyb3VuZCwgaXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgYSBsb3Qgb2YgZXllZ2xhc3MgbWFudWZhY3R1cmVycyBhbmQgb25saW5lIHJldGFpbGVycyB3aG8gYXJlIHN0aWxsIGluZGVwZW5kZW50LiAKT25lIGNvdWxkIGFyZ3VlIHRoYXQgd2UgaGF2ZSB0aGUgdGhlcm1hbCBiaW5vcywgYnV0IHRoYXQgaGFyZGx5IGEgcmVhc29uYWJsZSBzdWJzdGl0dXRlIGZvciBhIG5pZ2h0L3RoZXJtYWwgc2NvcGUgYXR0YWNobWVudCBvbiBhIHdlYXBvbi4gCkkgdGhpbmsgYW55b25lIGNhbiBqb2luIHRoZSBsZWFndWUgbW9zdCBvZiB0aGUgeWVhciBpZiB5b3UgaGF2ZSBleHBlcmllbmNlLCBidXQgYm90aCB0aGVpciB0ZWFtcyBzaG91bGQgYmUgaGF2aW5nIHRyeW91dHMgaW4gSmFudWFyeSBhcyB3ZWxsLlJ1Ymlja2sgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ29Db21wbGV0aW5nIG9mZmVycyBmb3IgY3Jvd25zIGlzIGEgaHVnZSByaXAgb2ZmLiBJIGhhZCB0byBvcGVuIGEgdGlja2V0IGZvciBhbG1vc3QgZXZlcnkgc2luZ2xlIG9uZSAob25seSBvbmUgdGhhdCB3b3JrZWQgYXV0b21hdGljYWxseSB3YXMgdGhlIEZpbmFsIEZhbnRhc3kgb2ZmZXIpLCBhbmQgdGhleSBBTFdBWVMgcmVqZWN0IGFueSB0aWNrZXQgYXV0b21hdGljYWxseS4gSSBwbGF5ZWQgdGVuIGxldmVscyBpbiBBcm15IE1lbiBTdHJpa2UsIHRvb2sgc2NyZWVuIHNob3RzIG9mIGV2ZXJ5dGhpbmcsIGFuZCB0aGV5IGhhdmUgcmVqZWN0ZWQgbXkgdGlja2V0IG92ZXIgYW5kIG92ZXIgYWdhaW4uRG9uIHdhc3RlIHlvdXIgdGltZS4gCkluc2lkZSB0aGV5IHVzdWFsbHkgaGF2ZSBhIGJhciBhbmQgc29tZSBzaXR0aW5nIGFyZWFzLCB3aGVyZSB5b3UgY2FuIGhhdmUgYSBkcmluayBhbmQgdGFsayB0byB0aGUgbGFkaWVzLCB0byBnZXQgdG8ga25vdyB0aGVtIGEgYml0LiBLaXNzIG9yIGEgYml0IG9mIHRvdWNoaW5nKS4gClRoZXJlIGFyZSBhIGxvdCBvZiBvcGVuIHBsYXphcywgYXJlYXMsIHN0cmVldHMsIGV0YyBhbmQgaXQgZG9lc24gZmVlbCBhcyBjcm93ZGVkIGFzIHNvbWV3aGVyZSBsaWtlIE5ZQyBvciBQaGlsbHkuLiAKQSByYWlsIGNvbnN0cnVjdGlvbiBwcm9qZWN0IHRoYXQgY3VycmVudGx5IGhhcyAzIHNlcGVyYXRlIERPSiBpbnZlc3RpZ2F0aW9ucyBpbnRvIGl0IGludm9sdmluZyBlbWJlenpsZW1lbnQsIGJyaWJlcnksIGZyYXVkLCBsaWtlbHkgaW52b2x2aW5nIGZvcm1lciBtYXlvcnMsIGdvdmVybm9ycywgZXRjLiAKR2VuZGVyIG5ldXRyYWwgYmlydGggY2VydGlmaWNhdGVzIGFyZSBjdXJyZW50bHkgYWxzbyBhdmFpbGFibGUgaW4gTmV3Zm91bmRsYW5kIGFuZCBMYWJyYWRvciBhbmQgaW4gdGhlIE5vcnRod2VzdCBUZXJyaXRvcmllcywgYW5kIEZlcmd1c29uIGhvcGVzIG1vcmUgcHJvdmluY2VzIHdpbGwgZm9sbG93IHN1aXQuClJhbXBMZVZpZXdzICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpBc2sgdGhlbSBhYm91dCB0aGVpciB0aHJvdyBvciBhc2sgdG8gc2VlIGEgdHJpY2sgdGhleSBqdXN0IGRpZCBhZ2FpbiBldmVuIGlmIHlvdSBhbHJlYWR5IGtub3cgaG93IHRvIGRvIGl0LiAKVGhlIHBlcnNvbiBJIHdhcyByZWZlcnJpbmcgdG8gd2FzIEhhbGRlci4gRGllbHMgd2FzIGFsc28gaW1wcmlzb25lZCBhZnRlciBwYXJ0aWNpcGF0aW5nIGluIGFuIGFzc2Fzc2luYXRpb24gYXR0ZW1wdCBvZiBIaXRsZXIuIApUaGUgcGFydHkgZGlzY3Vzc2VzIGZvciBhIHdoaWxlIGFuZCBjb21lcyB1cCB3aXRoIGFub3RoZXIgcGxhbi4gVGhlIGJhcmQgaXMgYSBuYXR1cmFsIHBlcmZvcm1lciB3aXRoIGluY3JlZGlibGUgY2hhcmlzbWEuIFNvbWVib2R5IGluIHRoZSBwYXJ0eSBoYXMgc29tZSBzb3J0IG9mIGRpc2d1aXNlIHNwZWxsLiBUaGUgcGFydHkgaXMgZ29pbmcgdG8gdXNlIHRoZSBzcGVsbCBvbiB0aGUgYmFyZCB0byBkaXNndWlzZSBpdHNlbGYgYXMgYSAiYmFieSBvZ3JlIiBhbmQgdGhlbiBlbnRlciB0aGUgY2F2ZSB0byB0cnkgYW5kIHRhbGsgdG8gd2hvZXZlciBtaWdodCBiZSBpbnNpZGUsIGNsYWltaW5nIHRvIGJlIGEgbG9zdCBiYWJ5IG9ncmUuCk51IG4gciBvbmxpbmUgc3BlbHV0dmVja2xhcmUgc3BpcmFuZGUgZiByIGF0dCBwcm9kdWNlcmEgYXZhbmNlcmFkZSBwbGF0c2VyIGYgciBkZXNzYSB0eXAgYWxsYSwgb25saW5lIG0ga2xhcmZpcm1vciBkaXJla3Qga29tbWVyIGF0dCB2IGdyYSBhdHQgdGEgZGluYSBwZW5nYXIuIApCYWhhbWFzIEJlaGVtb3RoIFRoZSBDYXJpYmJlYW4gY2FzaW5vIGdhbWJsaW5nIHNjZW5lIGlzIGR5bmFtaWMgYW5kIGV2ZXIgY2hhbmdpbmcsIGJ1dCB0aGUgYmlnZ2VzdCBvZiB0aGUgcmVnaW9uJ3MgY2FzaW5vcywgYXMgb2Ygc3ByaW5nIDIwMTAsIHdhcyBhdCB0aGUgQXRsYW50aXMgUGFyYWRpc2UgSG90ZWwgaW4gdGhlIEJhaGFtYXMuIApPbmNlIHBvcHVsYXIgaW4gbWFueSBvbmxpbmUgYmluZ28gc2l0ZXMgb25seSBhcyBtaW5pIGdhbWVzLCBzbG90IGdhbWVzIGhhdmUgY2hhbmdlZCB0aGUgd2F5IHBlb3BsZSB2aWV3IHN1Y2ggc2l0ZXMuIFRvZGF5LCB0aGVzZSBnYW1lcyBhcmUgbm90IG1lcmVseSBhbiBhZGRpdGlvbmFsIGF0dHJhY3Rpb24gYnV0IHZlcnkgbXVjaCBhIHBhcnQgb2YgYWxsIHRoZSBtYWpvciBvbmxpbmUgYmluZ28gc2l0ZXMuIApNeSBtb20gb2ZmZXJlZCB0byBsZXQgaGVyIDdZTyBzb24gc3RheSB3aXRoIHVzIHJhdGhlciB0aGFuIGhpbSBnb2luZyB0byBhIGZvc3RlciBob21lICh0aGVpciBleHRlbmRlZCBmYW1pbHkgd291bGRuIHRha2UgaGltIGluLCBmb3Igd2hhdGV2ZXIgcmVhc29uKS4gCldoaWxlIFN0ZXBoZW4gUGFkZG9jayBhcHBlYXJlZCB0byBoYXZlIG5vIGNyaW1pbmFsIGhpc3RvcnksIGhpcyBmYXRoZXIgd2FzIGEgbm90b3Jpb3VzIGJhbmsgcm9iYmVyLCBFcmljIFBhZGRvY2sgY29uZmlybWVkIHRvIFRoZSBPcmxhbmRvIFNlbnRpbmVsLiAKVGhlIHB1cnBvc2Ugb2YgdGhlIHByb2Nlc3Mgc2VlbXMgdG8gaGF2ZSBhIHNpbWlsYXIgZ29hbC4gV2l0aCB3aGF0IGkga25vdy4gCkhlIHdvdWxkIHdpbiB0aG91c2FuZHMgb2YgZG9sbGFycyBpbiBhIG1hdHRlciBvZiBob3VycyBhbmQgYXNzdXJlZCBtZSBoZSB3YXMgbm90IGFkZGljdGVkLCBhbmQgdGhhdCBpdCBpcyBhIGdhbWUgb2Ygc2tpbGwsIGFuZCBoZSBuZWVkZWQgdG8gcGxheSBzbyBoZSBjb3VsZCBzdXBwb3J0IHVzIGp1c3QgbGlrZSBpdCB3YXMgYSBzZWNvbmQgam9iLiBTaW5jZSBJIG5ldmVyIGhhZCBhbnkgZG91YnQgaW4gaGltIG9yIG5ldmVyIGhhZCBhIHJlYXNvbiB0byBub3QgdHJ1c3QgaGltLCBJIGxldCBoaW0gcGxheSBwb2tlciBhdCBuaWdodCBhZnRlciB3b3JrLiAKQSB0ZXh0IGJvb2sgYW5kIGhhbmRvdXRzIHdpbGwgYmUgcHJvdmlkZWQuIFlvdSBtYXkgd2FudCB0byBicmluZyBhIG5vdGVib29rIG9yIGV4dHJhIHBhcGVyIGZvciBub3Rlcy4KRmZuZW4gU2llIElocmVuIEdlaXN0LiBXZW5uIGRlciBWZXJzdGFuZCBldHdhcyBocnQgZGllIHNjaGVpbnQgd2llIGFic29sdXRlciBRdWF0c2NoIGF1c3NjaGFsdGV0IHVuZCBuaWNodCBocmVuLiAKVGhlIHJlYWxpdHkgb2YgdGhlIG1vZGVybiB3b3JsZCBpcyB0aGF0IHN1cGVyIHBvd2VycyBsaWtlIHRoZSBVUyBjb3VsZCBjcnVzaCBqdXN0IGFib3V0IGFueSBzbWFsbGVyIGNvdW50cnkgaWYgdGhleSB3YW50ZWQgdG8uIApXaXRoIGRpbm5lciBkaXNwZXJzZWQsIHRoZSByaWRlcnMgYW5kIHN0YWZmIGdhdGhlciBpbiB0aGUgY3JhbXBlZCBsb2JieSBmb3IgYSB0b2FzdC4gT25lIHN1c3BlY3RzIHRoYXQgdGhlIHJlYWwgYmFjayBzbGFwcGluZyBhbmQgcHJhaXNlIGhhcyBiZWVuIGhhbmRlZCBvdXQgYXQgdGhlIHJpZGVycycgb3duIHByaXZhdGUgZGlubmVyIGJ1dCB3aXRoIGEgc3RhZ2Ugd2luIGNvbWVzIHRoZSBvYmxpZ2F0b3J5IHByZXNzIGludmFzaW9uIGFuZCB0aGUgcmlkZXJzIGFyZSBzdW1tb25lZCB0byB0b2FzdCBDYXZlbmRpc2gncyB3aW4uIFRoZSBtYW4gaGltc2VsZiBpcyBvbiB0aGUgd2F0ZXIgZXZlciB0aGUgcHJvIHdoaWxlIFJlbnNoYXcgc3RhbmRzIGluIGNsb3NlIHByb3hpbWl0eS4uIApZb3UgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIGEgZmFidWxvdXMgYW5kIGZyZWUgbGlmZSB3aGVyZSB5b3Ugd29uIGJlIHNoYW1lZCBvciBndWlsdGVkIGZvciBiZWhhdmluZyBsaWtlIGEgbm9ybWFsIDE4IHllYXIgb2xkIGh1bWFuIGJlaW5nLiAKQ2hpbmVzZSBpcyBoYXJkLiAKSXQgdW5yZWFsaXN0aWMgdG8gZXhwZWN0IGV2ZXJ5b25lIHRvIGxlYXJuIEFTTCBmbHVlbnRseSwgc28gdGhlIG5leHQgYmVzdCB0aGluZyBpcyBpbnRlcnByZXRlcnMsIG11c2V1bSBndWlkZXMgaW4gc2lnbiBsYW5ndWFnZSwgc3VidGl0bGVkIG5ld3MsIGV0YyBldGMgc28gdGhhdCBkZWFmIHBlb3BsZSBjYW4gaW50ZXJhY3Qgd2l0aCBzb2NpZXR5IHBlciBzZSBvbiB0aGUgc2FtZSBsZXZlbC4gClRoZSBzcGVjaWFsIGZlZWxpbmcgeW91IGZlZWwgYXJvdW5kIGhpbSBpcyBvbmUgdGhhdCBhcm9zZSBpbiB5b3Ugb24geW91ciBvd24gYW5kIGhlIGhhcyBqdXN0IGZpZ3VyZWQgb3V0IGhvdyB0byBwdXNoIHRoYXQgYnV0dG9uIGp1c3QgcmlnaHQgdG8ga2VlcCB5b3UgaG9va2VkLiBIZSBpc24gbWFraW5nIHlvdSBmZWVsIGJ1dHRlcmZsaWVzLCB5b3UgYXJlLCBiZWNhdXNlIHVuZm9ydHVuYXRlbHkgd2UgY2FuIGhlbHAgd2hvIHdlIGF0dHJhY3RlZCB0by4gQnV0IHdlIGNhbiBoZWxwIHdobyB3ZSBkZWRpY2F0ZSBvdXIgdGltZSBhbmQgZW5lcmd5IHRvLiAKSXRzIHRpZ2h0bHkgcGFja2FnZWQgdXAgaW4gcHJvdGVpbnMgY2FsbCBoaXN0b25lcyBhbmQgdGhlIHRpZ2h0bmVzcyBvZiB0aGlzIHBhY2thZ2luZyBpcyBhbm90aGVyIGxheWVyIG9mIHJlZ3VsYXRpb24uIElmIHRoZSBoaXN0b25lcyBiaW5kIHRoZSBETkEgdG9vIHRpZ2h0bHkgb3RoZXIgcHJvdGVpbnMgZG9uIGhhdmUgYWNjZXNzIHRvIHRoYXQgc3BvdCBzbyB0aGUgZ2VuZXMgYXQgdGhhdCBwYXJ0aWN1bGFyIGxvY2F0aW9uIG9mIHRoZSBETkEgZG9uIGdldCBtYWRlLiAKU28gSSBzcGVuZCBhIGxvdCBvZiB0aW1lIHN0YXJpbmcgYXQgcGhvdG9zIG9mIHNwaWRlcnMgYW5kIHJlYWRpbmcgYWJvdXQgdGhlbS4gClRoZSB3b3JsZCBjb3VsZCBmb2N1cyBvbiBmaW5kaW5nIHNvbHV0aW9ucyB0byBwcm9ibGVtcyBpbnN0ZWFkIG9mIHdhc3Rpbmcgb3h5Z2VuIGNvbXBsYWluaW5nIGFib3V0IHRoZW0sIHdlIHdvdWxkIGJlIGJpbGxpb25zIG9mIHllYXJzIG1vcmUgYWR2YW5jZWQgdGhhbiB3ZSBhcmUgbm93LgpPdGhlciBzdHVudHMgaW5jbHVkZSBhbiBhZCBmb2xsb3dpbmcgdGhlIG11Y2ggcHVibGljaXplZCAkNDUwIG1pbGxpb24gc2FsZSBvZiBEYSBWaW5jaSdzICJTYWx2YXRvciBNdW5kaSwiIHdoaWNoIHN1Z2dlc3RlZCB0aGF0IHRoZSBuZXcgb3duZXIgbW91bnQgaXQgaW4gYW4gSWtlYSBmcmFtZS4uIApTZWxic3QgaW4gZWluZXIgd29obGhhYmVuZGVuIEdlZ2VuZCBkZXMgb2huZWhpbiBzY2hvbiBuaWNodCBhcm1lbiBCYWRlbiBXcnR0ZW1iZXJncyBoYWJlbiB3aXIgZGllIEtsYXNzZW56aW1tZXIgdW5kIEhlaXp1bmdlbiB2b24gZGVuIEVsdGVybiBzdHJlaWNoZW4gbGFzc2VuIG1zc2VuLCB3ZWlsIGRpZSBTdGFkdC8gZGVyIExhbmRrcmVpcywgZGFmciBrZWluIEdlbGQgcmF1c3Jja2VuIHdvbGx0ZS4gVW5kIGRhcyBvYndvaGwgZGVyIFNvaG4gZGVzIEJyZ2VybWVpc3RlcnMgenUgZGVyIFplaXQgYW4gdW5zZXJlciBTY2h1bGUgd2FyLiAKV2hpY2ggbWFrZXMgc2Vuc2U6IGlmIHB1YmxpYyBtb25leSBpcyBiZWluZyBzcGVudCwgdGhlcmUgc2hvdWxkIGJlIGEgcHVibGljIHJldHVybi4uIApPYnZpb3VzbHksIHdlJ3JlIG5vdCB0aGUgb25seSBvbmVzIHRoYXQgaGF2ZSBhIGJlZWYgd2l0aCB0aGUgSW50ZXJhY3RpdmUgR2FtYmxpbmcgQWN0LiBObyBsZXNzIHRoYW4gU2VuYXRvciBMZXlvbmhqZWxtIGhhcyB2b2ljZWQgaGlzIG9wcG9zaXRpb24gdG8gdGhlIEFjdCwgY2FsbGluZyBpdCBhbmQgd2UgcXVvdGUgIlN0dXBpZCIuCkJldHR5IGFuZCBKaW0ncyBOZXcgWWVhcidzIEV2ZSBwYXJ0aWVzIHdlcmUgZmFtb3VzIGZvciB0aGVpciBsYXJnZSBhdHRlbmRhbmNlIGFuZCBTY290dGlzaCBkYW5jaW5nLiAKVG8geW91ciBzZWNvbmQgcGFydCAgIGp1c3QgYWR2aXNlIHRoYXQgeW91IGhhdmUgc29tZSBkZWJ0IHlvdSdkIGxpa2UgdG8gYmxlbmQuIFRoZXkgd2lsbCB1c2UgYSBjb21iaW5hdGlvbiBvZiB5b3VyIGV4aXN0aW5nIHJhdGUgYW5kIGEgbmV3ZXIgcmF0ZSBmb3IgdGhlIGRlYnQgYmVpbmcgYWRkZWQgYW5kIGdpdmUgeW91IHRoZSByYXRlIG9mIHRoZSBhZ2dyZWdhdGUuIEl0J3MgYSBncmVhdCBzb2x1dGlvbiBmb3IgbWFueSBwZW9wbGUgdGhhdCBmcmFua2x5LCBpc24ndCBleHBsb3JlZCBlbm91Z2ggSU1PLiAKTGUgcGF0cm9uIGQKSGF2aW5nIHNhaWQgdGhhdCwgdG8gZ2V0IHRvIFJFQUxMWSBoaWdoIHN0YWtlcyBQUyBwbGF5IG1vbmV5IHBva2VyIHlvdSB3b3VsZCBoYXZlIHRvIGVpdGhlciBwbGF5IGZvciBhIExPTkcgdGltZSBvbiB0aGVyZSBhY2NydWluZyBjaGlwcyB0byBwbGF5IHRoYXQgaGlnaCwgb3IgcHVyY2hhc2UgbWlsbGlvbnMgKG9yIGJpbGxpb25zKSBvZiBwbGF5IGNoaXBzIGZyb20gUFMuIFRoZXJlZm9yZSwgaSBzdHVkaWVkIHBva2VyIGEgdG9uIGJlZm9yZSBJIHB1dCBtb25leSBvbnRvIGFueSB3ZWJzaXRlLiAKQWxzbywgSSBjYW4gdGVsbCBzaW5jZSBJIGRvbiBoYXZlIGFjY2VzcyB0byBteSBvcmlnaW5hbGx5IGNpdGVkIHRhYmxlIGRhdGFzZXQsIGJ1dCBpZiB1bmlkZW50aWZpZWQgc2VyaWFsIGtpbGxlcnMgYXJlIGluY2x1ZGVkIGluIHRoZWlyIGNvdW50IHRoZW4gaXQgZW50aXJlbHkgcG9zc2libGUgdGhhdCBpZiB0aGUgVW5pdGVkIFN0YXRlcyBwdXRzIG1vcmUgcmVzb3VyY2VzIGludG8gdGhlIGludmVzdGlnYXRpb24gb2Ygc2VyaWFsIGtpbGxlcnMgdGhhdCB0aGV5IHdvdWxkIGlkZW50aWZ5IG1vcmUgY2FzZXMgd2hlcmUgdGhleSBoYXZlIHNlcmlhbCBraWxsZXJzIHRoYXQgdGhleSBoYXZlbiBpZGVudGlmaWVkLCBhZGRpbmcgZXh0cmEgcGFkZGluZyB0byB0aGVpciBzdGF0aXN0aWMuIApTbyB0aGUgb25seSBzb2x1dGlvbiBpIGNhbiByZWFsbHkgZ2l2ZSB5b3UgaXMgd2FpdCBmb3IgaXQgdG8gZG8gc29tZXRoaW5nLiAKVGhlIGNvbXBhbnkgb2ZmZXJlZCBpdHMgZmlyc3QgbW9kZWxzIG9mIGhlaWdodCBhZGp1c3RhYmxlIGRlc2tzIGluIDIwMDQuIEluIHRoZSBsYXN0IGZpdmUgeWVhcnMsIHNhbGVzIG9mIGl0cyBsaW5lcyBvZiBhZGp1c3RhYmxlIGRlc2tzIGFuZCB0aGUgdHJlYWRtaWxsIGRlc2sgaGF2ZSBzdXJnZWQgZml2ZWZvbGQsIHRvIG1vcmUgdGhhbiAkNDAgbWlsbGlvbi4KQW5kIGFuIGFjdHVhbCBhY3Rvci4gSSBtZWFuLCB0aGUgZnJlbmNoIFNoYXRuZXIgZG9lcyBub3QgaGF2ZSB0aGF0IHdlaXJkIHBocmFzaW5nIFNoYXRuZXIgdXNlZCB0byBoYXZlOyBoZSBzcGVha3MgbGlrZSBhIG5vcm1hbCBwZXJzb24uIAooSWYgeW91IGNob29zZSBhIHNpdHRpbmcgcG9zaXRpb24sIGtlZXAgeW91ciBzcGluZSBzdHJhaWdodCBidXQgeW91ciBzaG91bGRlcnMgcmVsYXhlZC4pIEl0IGFsc28gaGVscHMgdG8gaGF2ZSBhIHF1aWV0IHBsYWNlIHdoZXJlIHlvdSB3b24ndCBiZSBkaXN0cmFjdGVkIG9yIGRpc3R1cmJlZC4uIApZb3UgY2FuIGRvIHRoaXMuIEFsbW9zdCBldmVyeW9uZSBoYXMgdG8gZmVlbCB0aGlzIHBhaW4gdGhhdCB5b3UgZmVlbGluZyBub3cuIApNeSBmYW1pbHkgYXJlIGFsc28gS2htZXIgcmVmdWdlZXMuIE15IHBhcmVudHMnIHdvcmsgZXRoaWMgaXMgc2ltaWxhciB0byB5b3VyczogZW5kbGVzcyBhbmQgd2l0aG91dCBjb21wbGFpbnQuIApNZW4gZGV0IHZhciBpbnRlIGRldCBkdSBzYS4gClN1bnRvcnlCb3NzICAxIHBvaW50ICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ28KSWYgeW91IGxvdmUgcG9rZXIgYW5kIGFsc28gcHJlZmVyIHRvIHRha2UgcGFydCBpbiBpdCBvbmxpbmUgZm9yIGNhc2ggeW91IGNhbiBtZXJlbHkgc2VhcmNoIHRoZSBuZXQuIEluIG9yZGVyIHRvIGRpc2NvdmVyIHRoZSBCZXN0IFBva2VyIFNpdGVzLCB5b3UgY2FuIGtleSBpbiB0aGUga2V5d29yZHMgYW5kIHNlYXJjaC4gWW91IHdpbGwgZGVmaW5pdGVseSBub3RpY2UgcGxlbnR5IG9mIG91dGNvbWVzIG9uIHRoZSBmaXJzdCB3ZWJwYWdlIG9mIEdvb2dsZSBvciBvdGhlciB3ZWJzaXRlLiAKRmVsaWNpYW5vIG15IHVuZGVyc3RhbmRpbmcgaXMgdGhhdCB5b3UgdHJhaW5lZCBEci4gCkxpa2Ugb3ZlciB0aGUgdG9wIGZvcndhcmQgYW5kIGFjdGluZyBpbnRlcmVzdGVkIGluIG1lLiAKQWxzbywgcGxlYXNlIGxlYXZlIGEgZGVjZW50IHRpcCBiYXNlZCBvbiB0aGUgZnVsbCBwcmljZSBvZiB0aGUgc2VydmljZSBiZWZvcmUgYW55IGRpc2NvdW50cyBhcmUgdGFrZW4uIEJlYXIgaW4gbWluZCB0aGF0IGluIHRoZSBzZXJ2aWNlIGluZHVzdHJ5LCBhIHdhaXRlciByZWNlaXZlcyBhIDEyIDIwJSB0aXAgZm9yIHlvdXIgdGFibGUgYWxvbmUuIAoxLiBFZmZsZXVyYWdlICAgbWFraW5nIGxvbmcgYW5kIGdsaWRpbmcgc3Ryb2tlcyBhbG9uZyB0aGUgYm9keS4gVGhlIHJ1YmJpbmcgYW5kIHB1c2hpbmcgb2YgdGhlIG11c2NsZXMgaGVscHMgeW91IHJlbGF4IHBsdXMgcmVkdWNlIHRlbnNpb24gYW5kIHN0cmVzcyBsZXZlbHMuIApHb29kIEx1Y2shIChGdWxsIEFuc3dlcikuIApKdXN0IGxpa2UgaG93IG5vdCBldmVyeW9uZSB3aG8gZW5qb3lzIG1ldGFsIGNvbnN0YW50bHkgd2VhcnMgYmFuZCBzaGlydHMsIGhhcyBsb25nIGhhaXIgYW5kIGhlYWRiYW5ncyBhbGwgdGhlIHRpbWUuIApQSU9UUk9XU0tJLCBBZGFtIEJvbGVzbGF3IE9mIEtpdGNoZW5lciBhbmQgTG9uZG9uLCBpbiBoaXMgOTB0aCB5ZWFyLCBkaWVkIHBlYWNlZnVsbHkgb24gRmVicnVhcnkgMjYsIDIwMTQgYXQgVmljdG9yaWEgSG9zcGl0YWwgaW4gTG9uZG9uIGZyb20gY29tcGxpY2F0aW9ucyBmb2xsb3dpbmcgYSBzdHJva2UuIEJlbG92ZWQgaHVzYmFuZCBmb3IgNjIgeWVhcnMgb2YgSGVsZW4gKG5lZSBDaGFkYW0pOyBkZWFyIGZhdGhlciBvZiBTdGFuIGFuZCBHZXJhbGRpbmUgb2YgUmFsZWlnaCwgTm9ydGggQ2Fyb2xpbmEsIE1hcnlhbm4gYW5kIEJyaWFuIEtvcGUgb2YgTG9uZG9uLCBDYXJvbGluZSBvZiBXaW5uaXBlZywgYW5kIFN0ZXZlbiBvZiBQZXJ0aCwgQXVzdHJhbGlhLiAKVGhpcyBtYWtlcyBtb3JlIHNlbnNlLCBJJ20gbm90IHRyeWluZyB0byBhdHRhY2sgeW91IGFuZCB5b3UgZG8gbWFrZSBzb21lIGdvb2QgcG9pbnRzLCB0aG9zZSBpbnRlcmVzdGVkIGluIHRyeWluZyBpdCBkZXNwaXRlIHBhc3QgZXhwZXJpZW5jZXMsIHRoZXJlIHZlcnkgd2VsbCBtYXkgYmUgYSBzdHJhaW4gb3V0IHRoZXJlIHRoYXQgd29ya3Mgd29uZGVycy4gSSBndWVzcyBJIGp1c3QgZ2V0IGZydXN0cmF0ZWQgd2l0aCB0aGUgcGVvcGxlIG91dCB0aGVyZSBwYXJhZGluZyBpdCBhcm91bmQgYXMgYSBjdXJlIGFsbCwgYnV0IHBlb3BsZSBuZWVkIHRvIGJlIGhvbmVzdCwgaXQgZGVmaW5pdGVseSBpc24ndCB0aGF0LCBidXQgdGhhdCdzIG5vdCB0byBzZWxsIGl0IHNob3J0IGFuZCBzYXkgaXQncyBub3QgYmVuZWZpY2lhbC4gSXQganVzdCBtYWtlcyB0aG9zZSBvZiB1cyB3aG8gZG8gdW5kZXJzdGFuZCBsb29rIGxpa2Ugd2UncmUgYnV5aW5nIGludG8gc29tZSBraW5kYSBzbmFrZSBvaWwgYW5kIHdlIGhhdmUgbm8gY2x1ZSB3aGF0IHdlJ3JlIHRhbGtpbmcgYWJvdXQsIHdlJ3JlIGp1c3QgdHJ5aW5nIHRvIGdldCBoaWdoIGFuZCBibGFtZSBpdCBvbiBzb21ldGhpbmcgZWxzZS4gaXQncyBmcnVzdHJhdGluZyBidWRkeSBoYWhhLCBidXQgSSdtIHNvcnJ5IGlmIEkgY2FtZSBhY3Jvc3MgbGlrZSBJIHdhcyBhdHRhY2tpbmcgeW91LCBub3QgbXkgaW50ZW50aW9uIGF0IGFsbCEKVGhhdCBqdXN0IG1ha2VzIG1lIGZlZWwgYSBsaXR0bGUgYmFkIGZvciBoaW0gbm93LCBsaWtlIGhlIGhhcyBzb21lIGtpbmQgb2YgZGlzYWJpbGl0eS4gCkkgd2FzIG15IGJlc3QgZnJpZW5kJ3MgcGF1bCBiZWFyZXIgYXMgYSAxNyB5ZWFyIG9sZC4gCihBbmRyZXcgRWNjbGVzKSI+VGhlIGFjdHJlc3MncyBhYmlsaXR5IHRvIGJyaW5nIGxldml0eSB0byBldmVuIHRoZSBtb3N0IHNpbmlzdGVyIHNjZW5hcmlvcyBpcyBjcnVjaWFsIHRvIGEgcHJvamVjdCBhcyBwZXJwbGV4aW5nIGFuZCB1bnNldHRsaW5nICAgYW5kIGZ1bm55ICAgYXMgVmVyaG9ldmVuJ3MgRWxsZSwgYSBmaWxtIHRoYXQgdW5tb29ycyBzcGVjdGF0b3JzIGZyb20gdGhlIHN0YXJ0OiBBZnRlciBNaWNobGUgaXMgdmlvbGF0ZWQgaW4gaGVyIGx1eGUgU2FpbnQgR2VybWFpbiBob21lLCBzaGUgY2FsbWx5IHN3ZWVwcyB1cCB0aGUgZGVicmlzLCBkcmF3cyBoZXJzZWxmIGEgYnViYmxlIGJhdGgsIGFuZCBjYWxscyBmb3IgdGFrZW91dCBzdXNoaS4gV2hlbiBzaGUgZGlzY292ZXJzIHRoZSBpZGVudGl0eSBvZiBoZXIgYXNzYWlsYW50LCBzaGUgcHVyc3VlcyBoaW0sIGJ1dCBpbiBoaWdobHkgdW5leHBlY3RlZCB3YXlzLgpBbHRlcm5hdGl2ZWx5IHlvdSBjYW4gYXNrIHRoZSBjdXN0b21lciBzdXBwb3J0IG9mIEJldFZpY3Rvciwgb3IgeW91IGNhbiBqdXN0IHRyeSBhbmQgcmVnaXN0ZXIgYW5kIHNlZSB3aGF0IGhhcHBlbnMuIApUaGUgY29sbGVjdGl2ZSBjYW4gc2VydmUgYSBkZXJpdmF0aW9uYWwgcHVycG9zZSBhcyB3ZWxsLiAKTm93IEkgY2FuIGFncmVlIHRoZSB0b25lIG9mIG15IGZpcnN0IGNvbW1lbnQgZG9lcyBjb21lIG9mZiBsaWtlIEkgYXR0YWNraW5nIHdvbWVuIGZvciBsZWF2aW5nIG1lbiBhbmQgSSBhcG9sb2dpc2UgZm9yIHRoYXQgYnV0IHdoYXQgSSBkb2luZyBpcyBwb2ludGluZyBvdXQgaG93IG92ZXIgdGhlIGxhc3QgY291cGxlIGRlY2FkZXMgdGhlIGxhd3MgaGF2ZSBzaGlmdGVkIHRvIHN1cHBvcnQgbm8gZmF1bHQgZGl2b3JjZSBhbmQgdGhhdCB0aG9zZSBsYXdzIG92ZXJ3aGVsbWluZ2x5IGZhdm9yIHdvbWVuIG92ZXIgbWVuIGZpbmFuY2lhbGx5IGFuZCBpbiByZWdhcmRzIHRvIGN1c3RvZHkuIFRoaXMgaXMgYSBtYWpvciByZWFzb24gd2h5IGl0IGVhc2llciB0byBzYWZlbHkgbGVhdmUgYSBtYXJyaWFnZSBhbmQgdW50aWwgeW91IGFjdHVhbGx5IGRlYmF0ZSB0aGlzIGFuZCBzaG93IHRoYXQgSSBpbmNvcnJlY3QgaW4gbXkgc3RhbmNlIGluc3RlYWQgb2YganVzdCBzY3JlYW1pbmcgIm1pc29neW5pc3QiIEkgaGF2ZSBubyByZWFzb24gdG8gdGhpbmsgb3RoZXJ3aXNlLiAKTGV0J3MgdGFrZSBhIGxvb2sgYmFjayBhdCBhIGNhcmVlciB0aGF0J3MgbG9uZyB0aHJpdmVkIG9uICJvYmplY3RpZmljYXRpb24iOlRoZXJlIHdlcmUgbm8gY29tcGxhaW50cyBhYm91dCB0aGUgbWVkaWEncyAic3BvcnRsaWtlIHNjcnV0aW55IiBhbmQgc2V4aXNtIGluIDE5OTYsIHdoZW4gQW5pc3RvbiBwb3NlZCBuYWtlZCBmb3IgdGhlIGNvdmVyIG9mICwgbGFuZ3VpZGx5IGx5aW5nIG9uIGEgYmVkLCB3aXRoIGhlciB3ZWxsIHRvbmVkIGJ1dHQgaW4gYWxsIGl0cyBzb2Z0IGZvY3VzZWQgZ2xvcnkuIE5vciBkaWQgdGhlICJGcmllbmRzIiBzdGFyIGRlY3J5IHRoZSBodW5kcmVkcyBvZiBtYWdhemluZXMgdGhhdCBsYXRlciBmZWF0dXJlZCBoZXIgZmxhdW50aW5nIGhlciBjbGVhdmFnZSBvbiB0aGVpciBjb3ZlcnMuIChFdCB0dSwgVm9ndWU/KS4gCkVtcGxveWVlIHJlcGxpZWQuIFRoZSBjb2ZmZWUgaXMgc3Ryb25nZXIgaW4gdGhhdCBvbmUuIiBUaGVuIGFjdHVhbGx5IGV4cGxhaW5zLCBpbiBkZXRhaWwsIHdoYXQgY2FyYW1lbCBpcy4gTGlrZSwgQ2hyaXN0LCBJIGNhbiB1bmRlcnN0YW5kIG5vdCBnZXR0aW5nIHdoYXQgY2hhaSBtZWFucyBidXQgbm90IHVuZGVyc3RhbmRpbmcgY2FyYW1lbCBpcyBiZXlvbmQgc3R1cGlkLiAKQXJrYW5zYXMgaW5pdGlhdGl2ZSBjYW1wYWlnbnMgbmVhciBkZWFkbGluZSBmb3IgcGV0aXRpb25zCihQcml2YWN5IFBvbGljeSlSZW1hcmtldGluZyBQaXhlbHNXZSBtYXkgdXNlIHJlbWFya2V0aW5nIHBpeGVscyBmcm9tIGFkdmVydGlzaW5nIG5ldHdvcmtzIHN1Y2ggYXMgR29vZ2xlIEFkV29yZHMsIEJpbmcgQWRzLCBhbmQgRmFjZWJvb2sgaW4gb3JkZXIgdG8gYWR2ZXJ0aXNlIHRoZSBIdWJQYWdlcyBTZXJ2aWNlIHRvIHBlb3BsZSB0aGF0IGhhdmUgdmlzaXRlZCBvdXIgc2l0ZXMuIENvbnZlcnNpb24gVHJhY2tpbmcgUGl4ZWxzV2UgbWF5IHVzZSBjb252ZXJzaW9uIHRyYWNraW5nIHBpeGVscyBmcm9tIGFkdmVydGlzaW5nIG5ldHdvcmtzIHN1Y2ggYXMgR29vZ2xlIEFkV29yZHMsIEJpbmcgQWRzLCBhbmQgRmFjZWJvb2sgaW4gb3JkZXIgdG8gaWRlbnRpZnkgd2hlbiBhbiBhZHZlcnRpc2VtZW50IGhhcyBzdWNjZXNzZnVsbHkgcmVzdWx0ZWQgaW4gdGhlIGRlc2lyZWQgYWN0aW9uLCBzdWNoIGFzIHNpZ25pbmcgdXAgZm9yIHRoZSBIdWJQYWdlcyBTZXJ2aWNlIG9yIHB1Ymxpc2hpbmcgYW4gYXJ0aWNsZSBvbiB0aGUgSHViUGFnZXMgU2VydmljZS4gKFByaXZhY3kgUG9saWN5KUNvbXNjb3JlQ29tU2NvcmUgaXMgYSBtZWRpYSBtZWFzdXJlbWVudCBhbmQgYW5hbHl0aWNzIGNvbXBhbnkgcHJvdmlkaW5nIG1hcmtldGluZyBkYXRhIGFuZCBhbmFseXRpY3MgdG8gZW50ZXJwcmlzZXMsIG1lZGlhIGFuZCBhZHZlcnRpc2luZyBhZ2VuY2llcywgYW5kIHB1Ymxpc2hlcnMuIApUaGVpciBidXNpbmVzcyBpcyBtZXJlbHkgZmluZGluZyBuZXcgYW5kIGNyZWF0aXZlIHdheXMgdG8gZnJhbWUgdGhlIG9uZ29pbmcgIndhciIgc28gdGhhdCBpdCBjYW4gYWx3YXlzIGJlIGEgcHJvYmxlbSwgdGhleSBjYW4gYWx3YXlzIGJlIHZpY3RpbXMgb3Igc2lnbmFsIHRoZWlyIGFsbGVnaWFuY2UgdG8gdGhlIHZpY3RpbSBjbGFzcywgYW5kIHRoZXkgY2FuIGdhaW4gaW1hZ2luYXJ5IG1vcmFsIGN1cnJlbmN5IHNpbWlsYXIgdG8gaG93IHRoZSB3YXIgb24gZHJ1Z3MgaGFzIG5vIGludGVyZXN0IGluIGRvaW5nIGF3YXkgd2l0aCBhbnkgc3Vic3RhbnRpYWwgcHJvYmxlbXMsIGFuZCBzZWVrcyBvbmx5IHRvIGVuc3VyZSB0aGUgY3ljbGUgYmVjb21lcyBtb3JlIGZpcm1seSBlbnRyZW5jaGVkIGluIHNvY2lldHkgc28gdGhleSB3aWxsIHBlcnBldHVhbGx5IGhhdmUgYSBoYXJkIHRvIGRlZmluZSBib29nZXltYW4gdG8gImZpZ2h0Ii4gVGhpcyBwaGVub21lbm9uIGlzIG5vdGhpbmcgbmV3Li4gCk5vdywgb250byB0aGUga2lkcy4gRGF2aXMgbG9va3MgZXhjaXRpbmcuIEkgd291bGQgbG92ZSB0byBzZWUgc29tZSBzcGVlZCBmcm9tIHRoZXNlIEdpYW50cyB0ZWFtcyBhbmQgaGUgY2VydGFpbmx5IGJyaW5ncyBpdC4gRnJhbnNkZW4gSSB0aGluayBuZWVkcyBtb3JlIHRpbWUgYXMgd2VsbC4gTGFzdCB5ZWFyIHdlIGFsbCB0aG91Z2h0IGhlIHdhcyB0aGUgc2Vjb25kIGNvbWluZyBvZiBSb2JiaWUgVGhvbXBzb24uIE5vdyBoZSBzdWNrcz8gVGhlIGtpZCBkb2VzbnQgcGxheSBmb3Igd2Vla3MsIHRoZW4gZ2V0cyBtb3ZlZCBmcm9tIDJuZCB0byBzcyB0byBsZWZ0IGZpZWxkLCBJIGFtIHN1cHJpc2VkIHdpdGggb3VyIG5lZWQgb2YgbW9yZSByZWxpZXZlcnMgaGUgaGFzbnQgcGl0Y2hlZCB5ZXQuIEdFVCBSSUQgT0YgRFVSSEFNLiBIaXMgZG91YmxlIHBsYXkgZ3JvdW5kb3V0cyBhcmUgTU9SRSB0aXJlc29tZS4KV2hhdCBwZXJjZW50YWdlIG9mIHllc3RlcmRheSdzIDQwMDAgdW5pcXVlcyBhcmUgUmVkZGl0IGx1cmtlcnMgd2hvIHNhaWQgbmVnYXRpdmUgY29tbWVudHM/IFllcywgSSBzZWUgdGhlIG5lZ2F0aXZlIGNvbW1lbnRzIGFuZCB0aGVyZSBhcmUgcG9zaXRpdmUgY29tbWVudHMgYXMgd2VsbCBvbiBSZWRkaXQuIExpdmUgYXQgdGhlIEJpa2UgYW5kIHRoZSByZXN0IG9mIHRoZSBodW1hbiBwb3B1bGF0aW9uIGRvIG5vdCByZXZvbHZlIGFyb3VuZCBSZWRkaXQgY29tbWVudHMuIApJIGNhbWUgYWNyb3NzIGtldG8gcm91Z2hseSB0aGUgc2FtZSB3YXkgdHdvIHllYXJzIGFnbyBhbmQgaXQgYWxzbyBoYXBwZW5lZCB0byB3b3JrLiAKQW5kIHRoYXQgY291bGQgdGFrZSB1cCB0aW1lIERpc25leSBkb2VzIG5vdCBoYXZlIHNpbmNlIGl0IG5lZWRzIHRvIHNlbGwgWUVTIGFuZCB0aGUgMjEgb3RoZXIgUlNOcyB3aXRoaW4gOTAgZGF5cyBvZiBjbG9zaW5nIG9uIHRoZSAkNzEgYmlsbGlvbiBGb3ggYWNxdWlzaXRpb24uLiAKQnV0IEkgY29sb3IgY29kZSBhIGxvdC4gCkl0IGhhcyBiZWVuIG9uIHRlbGV2aXNpb24gc2luY2UgdGhlIGxhdGUgc2V2ZW50aWVzIGJ1dCBuZXZlciBtYW5hZ2VkIHRvIGdhaW4gbXVjaCBwb3B1bGFyaXR5LiAKV2UgdXNlZCBzdWJwb2VuYXMsIHdlIGxvb2tlZCBhdCBkb2N1bWVudHMsIHdlIGludGVydmlld2VkIGRvemVucyBvZiBwZW9wbGUgdG8gbG9vayBhdCB0aGlzIGluIGRldGFpbCB3aXRoIGEgaHlwb3RoZXNpcyB0aGF0IHNvbWV0aGluZyBpbGxlZ2FsIGhhZCBoYXBwZW5lZC4gQXMgdGhlIHN0b3J5IHVuZm9sZGVkLCB3ZXJlIHlvdSBzdXJwcmlzZWQgYnkgd2hhdCB5b3UgZm91bmQ/R3JlZyBTdWxsaXZhbjogSSB3YXNuJ3Qgc3VycHJpc2VkLiAKTW9yZSB0cmFpbnMgYmVpbmcgYWRkZWQgdG8gU2VvdWwgU3Vid2F5IExpbmUgOQpTb21lIGJhY2tncm91bmQ6IGJlY2F1c2UgUHVlcnRvIFJpY28gaXMgbm90IHBhcnQgb2YgdGhlIFVTQSBhbmQgaXRzIHJlc2lkZW50cyB0aGVyZWZvcmUgbm90IGVudGl0bGVkIHRvIGVxdWFsIHByb3RlY3Rpb24gb2YgdGhlIGxhdywgdGhleSBhcmUgdGhlcmVmb3JlIG5vdCBlbnRpdGxlZCB0byByZWNlaXZlIFNOQVAgYXQgYSBndWFyYW50ZWVkIGxldmVsIGxpa2UgcGVvcGxlIGluIHRoZSBVU0EgYXJlLiBJbnN0ZWFkIENvbmdyZXNzIGNyZWF0ZWQgYSBiZXNwb2tlLCBQdWVydG8gUmljbyBvbmx5IHByb2dyYW0gY2FsbGVkIE5BUCAoTnV0cml0aW9uYWwgQXNzaXN0YW5jZSBQcm9ncmFtKSB3aGljaCBpcyBhIGJsb2NrIGdyYW50IGFuZCB0aHVzIGNhcHBlZCBhdCBhIGNlcnRhaW4gdG90YWwgbGV2ZWwgaXJyZXNwZWN0aXZlIG9mIGFjdHVhbCBuZWVkLi4gCk1heWJlIEkgc2hvdWxkbiBoYXZlIHRyaWVkIHRvIHJlYWNoIG91dCB0byBoZXIsIGFuZCBqdXN0IGFjY2VwdGVkIHRoYXQgc29tZXRpbWVzIHBlb3BsZSBmYWxsIG91dCBvZiB5b3VyIGxpZmUuIElmIEkgbmV2ZXIgdGFsa2VkIHRvIGhlciBpbiB0aGUgZmlyc3QgcGxhY2UsIHNoZSB3b3VsZCBoYXZlIGp1c3Qgc3RheWVkIGEgaGFwcHkgbWVtb3J5IGZyb20gbXkgY2hpbGRob29kLiAKVGhleSBsb29rZWQgYXJvdW5kLCBjaGVja2VkIHRoZSB3YWxrIGluIGNvb2xlciwgdGhlIGJhdGhyb29tcy4gVGhleSBjb3VsZCBmaW5kIG5vIGNsZXJrLiAKTXkgc2lzdGVyIGhhc24gYWx3YXlzIGJlZW4gdGhpcyB3YXksIHNvIHdlIHdlcmUgY2xvc2UgdW50aWwgYWJvdXQgMTUgeXJzIGFnby4gU2hlIGxlYXJuZWQgdG8gbGVhdmUgbWUgb3V0IG9mIHRoYXQgYW5kIGRvbiBiaXRjaCB0byBtZS4gSSBqdXN0IHN0b3AgcmVzcG9uZGluZyB0byBoZXIgdGV4dHMvRE1zIHdoZW4gc2hlIHN0YXJ0cyBoZXIgY3JhcC4gClRoZSBjZW50ZXIgY2xhaW1zIDEwIG1pbnV0ZXMgb24gdGhlIG1hY2hpbmUgZXF1YWxzIG9uZSBob3VyIG9mIHR5cGljYWwgZXhlcmNpc2UgYXQgdGhlIGd5bS4KRmxvcGRvICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpCcmlnaHQsIGJvbGQsIHBzeWNoZWRlbGljIGFuZCBleHRyZW1lbHkgY29sb3VyZnVsLCB0aGUgcG9wIHBhaW50aW5ncyBlbGljaXQgc21pbGVzLCBvb2hzIGFuZCBhaHMsIGFuZCB3b25kZXJtZW50LiBEcmF3aW5nIG9uIG1hbmdhLCBhbmltZSBhbmQgSmFwYW5lc2UgY3VsdHVyZSwgTXVyYWthbWkgdGhyZWUgZGVjYWRlcyBvZiB3b3JrIGhhcyBhbHNvIGRyYXduIHRoZSBhdHRlbnRpb24gb2YgcmV0YWlsZXJzIHN1Y2ggYXMgTG91aXMgVnVpdHRvbiwgTWFyYyBKYWNvYnMgYW5kIFZBTlMgYW5kIGhpcCBob3AgYXJ0aXN0cyBLYW55ZSBXZXN0IGFuZCBQaGFycmVsbCBXaWxsaWFtcy4KUmVtZW1iZXIgYSBjYXNpbm8gcG9rZXIgZ2FtZSByZXF1aXJlcyBtb3JlIHByb2ZpY2llbmN5LCBpZiBpbiBjb21wYXJpc29uIHRvIG90aGVyIGNhc2lubyBnYW1lcywgYXMgdGhpcyBpcyBhIGdhbWUgb2Ygc2tpbGwuIFRob3VnaCBuZWFybHkgYWxsIG9mIHZldGVyYW5zIGFuZCBwcm9mZXNzaW9uYWxzIHBsYXkgdGhlIGdlbmVyYWwgZ2FtZSBzaW5jZSBpdCBpcyBrbm93biBhcyB0aW1lIGNvbnN1bWluZywgYW55IHBlcnNvbiBwcm92aWRlZCBzaGUgb3IgaGUncyBwcm9maWNpZW50IGNhbiBlbmpveSBleGFjdGx5IHRoZSBzYW1lIGdhbWUuLiAKSW0gU3RhdHVzIFF1byBoYXQgTW9za2F1IHp1bWluZGVzdCBlaW4gZ2V3aXNzZXMgRHJ1Y2ttaXR0ZWwsIHVtIGRpZSBleHRyZW1lbiBFeHplc3NlIGVpbmRtbWVuIHp1IGtubmVuLCB1bmQgc2VsYnN0IDEwIHRvdGUgU2Nod3VsZSBzaW5kIGFuZ2VzaWNodHMgYW5kZXJlciBLb25zZXF1ZW56ZW4gaGNoc3RlbnMgdHJhZ2lzY2guLiAKIEF1am91cmQnaHVpLCBvbiBlc3QgcmVuZHUgIDI1IHBhc3NhZ2VzLCAgMzAwIGdyYW1tZXMgcGFyIG10cmUgY2FyciAsIGluZGlxdWUgUGhpbGlwcGUgU2Fib3VyaW4uLiAKSSd2ZSBiZWVuIHByZXR0eSBjaGVhcCBhYm91dCBpdCwgdXN1YWxseSBoaXR0aW5nIHRhcmdldCBzYWxlcyByYWNrcy4gQnV0IGNvbWluZyBpbnRvIHNob3J0cyBzZWFzb24sIEkgbmVlZCBnb29kIHJ1bm5pbmcgc2hvcnRzLiAKSXQgd2FzIHN1Y2ggYSBqb3lvdXMgZGF5IHdoZW4gdGhleSBtb3ZlZCBvdXQgdHdvIHllYXJzIGxhdGVyLi4gCkxpa2UsIHRoZXJlIGEgY2hhcmFjdGVyIG5hbWVkIFN1bGx5IChwcm9iYWJseSkuIApBcyBUaW1tb25zIGVudGVyZWQgdGhlIHN0b3JlLCBoZSBwYXNzZWQgaW4gdGhlIGRvdWJsZSBkb29yd2F5IGEgeW91bmcgY291cGxlLCB3aG8gd2VyZSBsZWF2aW5nLiAKQm91bGRlciBuYXR1cmFsIGZvb2QgY29tcGFueSBQdXJlbHkgRWxpemFiZXRoIGhhcyByZWNlaXZlZCBhICQzIG1pbGxpb24gbWlub3JpdHkgaW52ZXN0bWVudCBmcm9tIEdlbmVyYWwgTWlsbHMgdGhhdCBjb3VsZCBwYXZlIHRoZSB3YXkgZm9yIGEgZnV0dXJlIGFjcXVpc2l0aW9uLiBGdWxsIFN0b3J5Ck1lcmlrdXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KT3VyIGV2ZW50cyB0YWtlIHBsYWNlIGluIHJlc3RhdXJhbnRzLCBsb3VuZ2VzIGFuZCBvdGhlciB1cHNjYWxlIHZlbnVlcy4gVGhlIG51bWJlciBvZiBlbGRlcmx5IHBlb3BsZSwgZXNwZWNpYWxseSB0aGUgZ2VuZXJhdGlvbiBvZiBiYWJ5IGJvb21lcnMgaXMgZ3Jvd2luZyByYXBpZGx5LiBZb3Ugd2lsbCBtZWV0IHVwIHRvIDE1IENocmlzdGlhbiBzaW5nbGVzIGF0IGVhY2ggQ2hyaXN0aWFuIHNwZWVkIGRhdGluZyBldmVudC4gCkZvciBhIGxvdCBvZiBwZW9wbGUsIGl0IGEgZ3JheSBhcmVhLiBUaGV5IG1heSB2ZXJnZSBvbiB0aGUgYWJzb2x1dGUgb24gdGhpbmdzIGxpa2UgbXVyZGVyIGlzIHdyb25nLCBjdWx0dXJhbCByZWxhdGl2aXNtIG5vdHdpdGhzdGFuZGluZywgYnV0IG90aGVyd2lzZSBnaXZlIGEgbG90IG9mIGxhdGl0dWRlLCBvYnNlcnZpbmcgYnV0IG5vdCBqdWRnaW5nLiAKRnVuIGZhY3QhIEl0IGlzIGFjdHVhbGx5IGNoZWFwZXIgaW4gdGhlIGxvbmcgcnVuIHRvIGp1c3QgZ2l2ZSBob21lbGVzcyBwZW9wbGUgaG9tZXMgdGhhbiBsZXQgdGhlbSBzdGF5IGhvbWVsZXNzLiBJZiB0aGV5IGRvbiBoYXZlIHNoZWx0ZXIgYW5kIGhlYWx0aGNhcmUgdGhleSBnZXQgbXVjaCBzaWNrZXIgYW5kIGVuZCB1cCBhdCBlbWVyZ2VuY3kgd2hlcmUgdHJlYXRpbmcgdGhlbSBpcyBtb3JlIGV4cGVuc2l2ZS4gClRoZSB0aGlyZCBmbG9vciB0ZXJyYWNlIHByb3ZpZGVzIGxvdW5nZSBjaGFpcnMgZm9yIGV2ZXJ5b25lIHRvIGVuam95IHRoZSBiZWF1dGlmdWwgdmlldyBvZiB0aGUgYmVhY2ggYW5kIHN1bnNldHMgb2YgUmluY29uLCBhbiBhIHZpZXcgdGhhdCBzZWVtIGxpa2UgdGhlIHdhdmVzIGFyZSBicmVha2luZyBsaXRlcmFsbHkgYXQgeW91ciBmZWV0LiAKWW91IHdpbGwgYWxzbyBmaW5kIHRoYXQgdGhlc2UgY2hpcHMgaGF2ZSB0aGUgdW5pcXVlIGVkZ2VzcG90IGRlc2lnbiBhbmQgdGhhdCBvbiB0b3Agb2YgdGhhdCwgdGhleSBhbHNvIGhhdmUgdGhlIHNvZnQgZmVlbCBvZiB0aGUgY2xheSBzdXJmYWNlIHRoYXQgbGV0cyB0aGVtIGhhdmUgdGhlIHNvdW5kIGFuZCBjb2xvcmF0aW9uIG9mIGEgcmVhbCBjYXNpbm8gY2hpcC4gWW91J2xsIGZpbmQgdGhhdCB0aGVzZSBjaGlwcyBoYXZlIGEgZ3JlYXQgbG9vayBhbmQgZmVlbCwgYXMgd2VsbCBhcyBhIHJlY2Vzc2VkIGNlbnRlciB0aGF0IGFsbG93cyB5b3UgdG8gaW5zZXJ0IGEgY3VzdG9tIGRlc2lnbmVkIDEgaW5jaCBsYWJlbC4gWW91IHdpbGwgYWxzbyBoYXZlIHlvdXIgY2hvaWNlIG9mIHNldmVuIGFzc29ydGVkIHR3byB0b25lIGNvbG9ycy4gVGhlIGNoaXBzIHRoYXQgeW91IGNob29zZSBjYW4gbWFrZSBhIGh1Z2UgZGlmZmVyZW5jZSB0byB0aGUgZ2FtZSB0aGF0IHlvdSBwbGF5LgpIb29rZXIgaGVhcmQgdGhlIHNob3RzIGFuZCBoYXMgcnVzaGVkIG91dCBvZiB0aGUgc3RvcmUgdG8gaGVscC4gQWRyaWFuIHNpdHMgdXAsIGFuZCBldmVuIHRob3VnaCB3ZSB0aG91Z2h0IGhlIGdvdCBzaG90IGluIHRoZSBzaG91bGRlciwgaXQgdHVybnMgb3V0IGhlIGp1c3QgZ290IGNyZWFzZWQgaW4gdGhlIGZvcmVoZWFkLCB3aGljaCB3b3VsZCBsb29rIHJlYWxseSBuYXN0eSwgaWYgaXQgbG9va2VkIGEgbGl0dGxlIGxlc3MgbGlrZSBSaXQgZHllIG1hZGUgaW50byBhIHBhc3RlIGFuZCBzbWVhcmVkIG9uIGhpcyBmYWNlLiAKSSBoYXZlIHRoZSAyMDE1IDE1IiBNQlAgdGhhdCBJIG5vdyB1c2UgZm9yIHdvcmsgKHRoYXQgd2FzIGFsc28gcmVmdXJiZWQhKSBhcyBJIHVwZ3JhZGVkIHRvIHRoZSAyMDE4IE1CUCBmb3IgcGVyc29uYWwgdXNlICAgdGhlIHJlZnVyYmVkIG1hY2hpbmVzIGFyZSBmYWIgKCBhdCBsZWFzdCwgbWluZSB3YXMgYnJhbmQgbmV3IGxvb2tpbmcgYWxzbyAgIHdpdGggb25seSA4IGJhdHRlcnkgY3ljbGVzKS4KQSBkb2cgd2hvIGhhcyBuZXZlciBiZWVuIGEgZm9vZCB0aGllZiBhbmQgc3VkZGVubHkgc3RhcnRzIHJhaWRpbmcgdGhlIGdhcmJhZ2UgY2FuIG9yIHN0ZWFsaW5nIGZvb2Qgb2ZmIHRoZSBkaW5uZXIgdGFibGUgaXMgdGVsbGluZyB5b3Ugc2hlIG5lZWRzIGEgY2hlY2t1cCBvciBhbiBhZGp1c3RtZW50IG9mIGhlciBtZWRpY2F0aW9uLi4gClRoZSBjb25zZW5zdXMgb2Ygb3BpbmlvbiBpcyB0aGF0IEFyb21hdGhlcmFweSBiZWdhbiBpbiBFZ3lwdC4gQSBwYXB5cnVzIChhbmNpZW50IEVneXB0aWFuIG1hbnVzY3JpcHQpLCBkYXRpbmcgYmFjayB0byBhcm91bmQgMTU1NUJDLCBkZXRhaWxzIHJlbWVkaWVzIGZvciB2YXJpb3VzIHR5cGVzIG9mIGlsbG5lc3Nlcy4gVGhlIG1ldGhvZHMgZGVzY3JpYmVkIGZvciBjdXJpbmcgdGhlc2UgYWlsbWVudHMgYmVhciBhIHN0cmlraW5nIHJlc2VtYmxhbmNlIHRvIHRvZGF5J3MgQXJvbWF0aGVyYXB5LgpIZSBoYWQgbW92ZWQsIGluIGhpcyBtaW5kLiBIZSB3b3VsZCBzaXQgb24gdGhlaXIgYmFsY29ueSBhbmQgbG9vayBvdXQgb3ZlciBvdXIgdGlueSBjaXR5L3Rvd24sIGJ1dCB3aGF0IGhlIHdhcyBsb29raW5nIGF0IHdhcyB0aGUgcml2ZXIgYW5kIHZpbGxhZ2Ugd2hlcmUgaGUgZ3JldyB1cC4uIApUaGUgZmluYWwgc3RvcCB3YXMgdGhlIGNvbGxpc2lvbiBjZW50ZXIsIHdoZXJlIHRoZSBzdGFmZiBoZWxkIHJhZmZsZXMgYW5kIGdhdmUgcHJpemVzIGJhc2VkIG9uIHRoZSBwb2tlciBoYW5kcyB0aGF0IHBhcnRpY2lwYW50cyBoYWQgY29tcGlsZWQsIFNoYXcgc2FpZC4KSGUgaGFzIGRvbmUgd2hhdCBub2JvZHkgaGFkIGltYWdpbmVkIGhlIGNvdWxkIChib29raWVzIGhhZCBoaXMgdmljdG9yeSBvZGRzIGF0IDEgYWdhaW5zdCAxNTApLiAKT3VyIGJ1eSB3aWxsIGluY3JlYXNlIGZyb20gbGFzdCB5ZWFyIGFuZCB3ZSBhcmUgbWFraW5nIG91ciBpbnZlc3RtZW50IG11Y2ggbW9yZSBlZmZpY2llbnQuIFdlJ3JlIHNoaWZ0aW5nIG1vcmUgb2YgYnVkZ2V0IHRvd2FyZHMgZGlnaXRhbCBhbmQgc29jaWFsIGNoYW5uZWxzIHRvIGVuc3VyZSB0aGF0IG91ciBtZXNzYWdlIGlzIHJlYWNoaW5nIG91ciB0YXJnZXQgZ3Jvd3RoIGNvbnN1bWVycyBhdCB0aGUgcmlnaHQgcGxhY2UgYW5kIHRpbWUuCkkgYXJndWUgU29KIGlzIGJldHRlciB0aGFuIERELCBidXQgSSBwcmVmZXIgREQsIGJlY2F1c2UgSSBoYXZlIHRvbyBtYW55IHByb2JsZW1zIHdpdGggU29KLiAKVGhlIExpc3Q6IENoYW1iZXJzIG9mIGNvbW1lcmNlLCBEZWMuIDI0LCAyMDE4IERlYy4gMjQsIDIwMTggQnkgVkVHQVMgSU5DIHN0YWZmIEZpbmQgb3V0IGFib3V0IGxvY2FsIGNoYW1iZXJzIG9mIGNvbW1lcmNlLiBUaGlzIHdlZWssIHdlIHJhbmsgdGhlbSBieSBtZW1iZXJzIGFzIG9mIE5vdi4gMS4KQWx0aG91Z2ggaXQgd2FzIENhZ2UncyBmaXJzdCB0aW1lIHNob3dpbmcgYXQgdGhlIE1vcmdhbiBDb3VudHkgZXZlbnQsIGhlJ3MgdGFrZW4gaGlzIG9sZCBnaXJsIG91dCB0byByaWRlIGluIHRoZSBCcnVzaCBGb3VydGggb2YgSnVseSBwYXJhZGUgZm9yIHRoZSBwYXN0IDE1IHRvIDIwIHllYXJzLi4gCkFuZCBpdHMgY29sb25pZXMgZG8gdGhlIHNhbWUgdGhpbmcsIHNvIHNvbWUgc3VicyBkZXN0cm95IHRoZSBBbGxpZWQgdHJvb3BzLiBIZW5jZSBJdGFseSBzdGVhbXJvbGxzIGluIEFmcmljYSB3aXRoIDQgZGl2aXNpb25zLiAKR29vZCBsdWNrLCBpdCBhIGhhcmQgdHJpY2sgdG8gbGVhcm4uCkVhY2ggY29tcGFueSB3b3VsZCBvd24gNTAlLiBJdCB0b29rIG9ubHkgZm91ciBob3VycyBmb3IgdGhlIG1hbmFnZW1lbnQgdGVhbSBhdCBCb3lkIEdhbWluZywgd2hlcmUgQm91Z2huZXIgd2FzIHRoZW4gY2hpZWYgb3BlcmF0aW5nIG9mZmljZXIsIHRvIGRlY2lkZSB0byBwcm9jZWVkLiAiVHdvIHdlZWtzIGxhdGVyLCB3ZSBoYWQgYW4gYWdyZWVtZW50IHRvIGRvIGEgJDUwMCBtaWxsaW9uIGRlYWwsIiBoZSBzYXlzLi4gCkFuZCBJIGNhbiBqdXN0IHNlZSB0b2RheSdzIGNoaWxkcmVuIGZlZWxpbmcgdGhlIHNhbWUuIFRoaXMgd291bGQgYmUgYSBjb29sIENocmlzdG1hcyBwcmVzZW50LCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgcGxhbm5pbmcgYSBmYW1pbHkgc3RheWNhdGlvbiB0aGlzIHllYXIuIApUaGUgZW50cmVwcmVuZXVycyBhcmUgaHVuZ3JpbHkgbGVhcm5pbmcgYW55dGhpbmcgdGhleSBjYW4gYXMgdGhleSB0cnkgdG8gcmVhbGl6ZSBkcmVhbXMuIAo3LiBCZSB3YXRjaGZ1bC4gTW9zdCBzZWVkcyB3aWxsIGdlcm1pbmF0ZSBpbiBhdmVyYWdlIGhvdXNlaG9sZCB0ZW1wZXJhdHVyZXMuIFlvdXIgc2VlZCBjYXRhbG9ndWUgb3IgcGFja2V0IHdpbGwgZ2l2ZSBhcHByb3hpbWF0ZSB0aW1lcyBvZiBnZXJtaW5hdGlvbi4gSXQgY2FuIHZhcnkgZnJvbSB0aHJlZSBvciBmb3VyIGRheXMgdG8gdHdvIG9yIG1vcmUgd2Vla3MsIGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiBzZWVkLiBBbGwgc2VlZHMgbmVlZCB0byBiZSBjaGVja2VkIGRhaWx5IHRvIG1ha2Ugc3VyZSB0aGUgc29pbCBvciBncm93aW5nIG1lZGlhIGlzIG1vaXN0LCBub3Qgd2V0LCBhdCBhbGwgdGltZXMuCkRlY2lkZSBvbiB0aGUgY29udGFpbmVyIGZvciB0aGUgZ2lmdC4gQSBiYWJ5IGJhc2tldCBpcyBub3QgYW55bW9yZSB0aGUgdHJhZGl0aW9uYWwgc3R1ZmYgdGhhdCBpcyBjYXJyaWVkIGluIGEgbGl0ZXJhbCBiYXNrZXQuIAogMTMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0pvYmJldCBpIGJ1dGlrZXJuYSByIGZyIGRldCBtZXN0YSBicmEuIAoiWW91cmUgYXNzdW1pbmcgcXVpdGUgYSBiaXQgYWJvdXQgbXkgZ2FtZSIsIG5vIHlvdSBkaWQgdGhpcyBmaXJzdCB3aGVuIHRhbGtpbmcgYWJvdXQgdGhlIGRpZmZpY3VsdHkgb2YgbXkgZW5jb3VudGVycywgd2hpY2ggd2FzIGlycmVsdmFudCB0byB0aGUgZGlzY3Vzc2lvbiBvZiB0aGUgZWZmZWN0IG9mIGNyaXRpY2FsIGhpdHMuCkE6IE5vLiBOaWNlIHRyeSwgdGhvdWdoLiBNeSBzdGFuZGFyZCBnYWcgYWJvdXQgdGhlIHNvbmcgaXMgdGhhdCB3aGVuIEkgc2F3IEd1eSBDbGFyayBKci4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uTk9SVEggRWFzdCByZXNpZGVudHMgaGF2ZSBsb3N0IG5lYXJseSAkMzAgbWlsbGlvbiB0aHJvdWdoIHBva2VyIG1hY2hpbmVzIGluIHRoZSBsYXN0IGZpbmFuY2lhbCB5ZWFyLiAKVGhlIHRpcHMgeW91IGhhdmUgcHJvdmlkZWQgYXJlIGdvb2QgYW5kIGFwcGxpY2FibGUgaW4gYSBsb3Qgb2Ygd2F5cy4gCkFtIGluIGZ1bGwgc3VwcG9ydCBvZiB0aGUgT1AuIEFzIGEgcGVyc29uIGxpdmluZyBpbiAzcmQgd29ybGQgY291bnRyeSwgeW91IGxpdGVyYWxseSBnZXQgYm9tYmFyZGVkIHdpdGggdGhlc2UgcGFuaGFuZGxlcnMgYXQgZXZlcnkgc2lnbmFsLgpUaGF0J3Mgbm8gZnVuIGF0IGFsbC4uIApDZXR0ZSBhbm5lLCBsZXMgbW90b25laWdpc3RlcyBwYXJ0aXJvbnQgZGUgTWF0YW5lIHBvdXIgc2UgZGlyaWdlciB2ZXJzIFNhaW50IFJlbiBvIGVsbGVzIGZlcm9udCB1bmUgaGFsdGUgYXZhbnQgZGUgcmVwYXJ0aXIgcG91ciBTYXlhYmVjLiBMZSBkbmVyIGVzdCBwcnZ1ICBTYWludCBEYW1hc2UuIExlIGdyb3VwZSBzZSByZW5kcmEgZW5zdWl0ZSAgU2FpbnQgVWxyaWMgcHVpcyByZXZpZW5kcmEgIE1hdGFuZS4gCjMuIFRha2UgYW5vdGhlciBsb29rIGF0IGhvdXNlIGhhY2tpbmcuCkFub3RoZXIgaW1wcmVzc2l2ZSBwcm9mZXNzb3IgaXMgRHIuIFRvd25zZW5kLCB3aG8gdGVhY2hlcyBNb25leSBhbmQgQmFua2luZy4gSW5pdGlhbGx5LCBTdG91dCBmaW5kcyB0aGlzIGNvdXJzZSAgIHdoaWNoIGZvY3VzZXMgb24gdGhlIEZlZGVyYWwgUmVzZXJ2ZSBhbmQgZGlzY291bnQgcmF0ZXMgICBwdXJlIHRvcnR1cmUuIApJIGhvcGUgbm90aGluZyBiYWQgaGFwcGVuZWQgdG8gbXkgYnJvdGhlciBiZWNhdXNlIGhlIHdvdWxkbiBiZSBhYmxlIHRvIGV4cGxhaW4gb3IgZGVmZW5kIGhpbXNlbGYuIExvY2tlZCByb29tcyBhcmUgbm90IGFsbG93ZWQgaW4gaGVyZS4gCkNvbnNpZGVyYXRpb25zVGhlIElvd2EgUmFjaW5nIGFuZCBHYW1pbmcgQ29tbWlzc2lvbiByZXBvcnRzIHRoYXQgdGhlIGF2ZXJhZ2UgcGF5YmFjayBmb3Igc2xvdHMsIHZpZGVvIHBva2VyIGFuZCB2aWRlbyBrZW5vIGlzIGFib3V0IDkxIHBlcmNlbnQgaW4gdGhlIHN0YXRlJ3MgY2FzaW5vcy4gCk5TVyBHcmVlbnMgTVAgSm9obiBLYXllIG9wcG9zZWQgaGF2aW5nIGNoaWxkcmVuICJob2xlZCB1cCBpbiB3aGF0IGFyZSBlc3NlbnRpYWxseSBnYW1ibGluZyBkZW5zIiB3aGlsZSBUaW0gQ29zdGVsbG8sIHdobyBsZWFkcyB0aGUgQXVzdHJhbGlhbiBDaHVyY2hlcyBHYW1ibGluZyBUYXNrZm9yY2UsIHNhaWQgdGhlIG1vdmUgd291bGQgbm9ybWFsaXNlIGdhbWJsaW5nIGZvciBraWRzLiBNcyBDb3Ntb3MgcmVmdXRlZCB0aGUgY2xhaW1zLCBzYXlpbmcgImNsZXZlciBjbHVicyIgd2VyZSB0aGlua2luZyBvdXRzaWRlIHRoZSBzcXVhcmUuIApCb2JiaW5zLCBEaWNrIEdlbnRyeSwgQ2hhcmxlcyBXb3J0bWFuLiBUaG9tYXMgVGlsc29uLCBhbmQgUnVzc2VsbCBDbGl0aGVyby4gCkluIHRoZSBlbmQsIEkganVzdCB0cmllZCB0byBtYWtlIGl0IGN1dGVzeSBsaWtlIEkgd291bGQgaGF2ZSBpZiBJIGJlZW4gb2xkZXIuIApUaGUgVVMgaW50ZXJ2ZW50aW9uIHdhcyBmdW5kYW1lbnRhbGx5IHdyb25nIGFuZCBpbW1vcmFsLCBhcyBwZXIgNzIgb2YgQW1lcmljYW5zIHN1cnZleWVkIGluIDE5NzUuIFRoZXkgaGFkIG5vIHJpZ2h0IHRvIGRlY2lkZSB3aGF0IGFub3RoZXIgY291bnRyeSB3YW50cywgd2hpY2ggd2FzIG5hdGlvbmFsIHVuaWZpY2F0aW9uLiAKVGhlIFRldHJpcyBncm91cCBpbXByb3ZlZCBvbiBhIG1hdGggZmx1ZW5jeSB0YXNrLCBhbmQgYm90aCBncm91cHMgaW1wcm92ZWQgb24gdGhlIGRlbGF5ZWQgcmVjYWxsIG9mIGEgc3RvcnkgbWVtb3J5IHRhc2suIEhvd2V2ZXIsIHRoZSBBcnQgQWNhZGVteSBncm91cCBhbHNvIGVuZ2FnZWQgaW4gdGhlIGludGVydmVudGlvbiBmb3Igc2lnbmlmaWNhbnRseSBtb3JlIG1pbnV0ZXMgb2Ygb3ZlcmFsbCBwbGF5IHRpbWUgdGhhbiB0aGUgVGV0cmlzIGdyb3VwLCBwb3RlbnRpYWxseSBjb25mb3VuZGluZyB0aGUgcmVzdWx0cy4gCk1vc3QgcG9rZXIgY2hpcHMgYXJlIGNvbXBvc2VkIG9mIHBsYXN0aWMsIGNsYXksIGNlcmFtaWNzLCBhbmQgd29vZC4gCldlIGhhdmUgdG8gdGhyb3cgaXQgYXdheS4uIAoiIExvdyBrZXkiIGlzIG1lYW50IHRvIGJlIGEgImtlZXAgaXQgb24gdGhlIGRvd25sb3ciIHR5cGUgb2Ygc3RhdGVtZW50LiBJdCBoYXMgYSBwdXJwb3NlLiAKU29kYWJyb3RoZWwgICAyIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCldlIG5ldmVyIGRvbmUgYW55dGhpbmcgaW5hcHByb3ByaWF0ZS4gCiJQcm9wb3NpdGlvbmFsIFRob3VnaHQsIiBpcyBjaGFyYWN0ZXJpc3RpYyBvZiB0aGUgZm9ybWFsIG9wZXJhdGlvbmFsIHN0YWdlLiBDaGlsZHJlbiBjYW4gbm93IGV2YWx1YXRlIGxvZ2ljYWwgcHJvcG9zaXRpb25zLiBBbiBleHBlcmltZW50IHRoYXQgaWxsdXN0cmF0ZXMgdGhpcyB3YXMgZG9uZSB3aXRoIHBva2VyIGNoaXBzLiAKODIgc3RvY2sgc291bmQgY2xpcHMgc3RhcnRpbmcgYXQgJDIuIERvd25sb2FkIGFuZCBidXkgaGlnaCBxdWFsaXR5IEtldHRsZSBXaGlzdGxlIHNvdW5kIGVmZmVjdHMuIApZb3UgY2FuIHRoaW5rIG9mIGl0IGEgbG90IGxpa2UgYSBwYWlyIG9mIHNvY2tzLiAKQnkgZGVmaW5pdGlvbiwgc2NpZW5jZSBpcyBzdWJqZWN0IHRvIGNvbnN0YW50IHJlIHRlc3RpbmcsIHJldmlzaW9uIGFuZCBjb3JyZWN0aW9uLiBBTlkgc2NpZW50aWZpYyB0aGVvcnksIGh5cG90aGVzaXMgb3IgY29uamVjdHVyZSBpcyBvbmx5IG9uZSBwaWVjZSBvZiBleHBlcmltZW50YWwgZGF0YSBhd2F5IGZyb20gYmVpbmcgY2hhbmdlZCBvciBlbnRpcmVseSBzY3JhcHBlZC4gRWluc3RlaW4gd2FzIGZhbW91c2x5IGFza2VkIGluIGFuIGludGVydmlldyBzaG9ydGx5IGFmdGVyIHB1Ymxpc2hpbmcgaGlzIGNvbnRyb3ZlcnNpYWwgdGhlb3J5IG9mIHJlbGF0aXZpdHksICJIb3cgZG8geW91IHJlc3BvbmQgdG8gdGhlIDEsMDAwIHNjaWVudGlzdHMgd2hvIHNheSB0aGF0IHJlbGF0aXZpdHkgbXVzdCBiZSB3cm9uZz8iIEhlIHJlcGxpZWQsICJJZiBpdCB3YXMgcmVhbGx5IHdyb25nIHRoZXkgd291bGRuIG5lZWQgMSwwMDAgc2NpZW50aXN0cy4gSnVzdCBvbmUgcGllY2Ugb2YgZGF0YSB3b3VsZCBkby4iCkVzc2VudGlhbGx5LCB3ZSBoYXZlIHRvIGRlY2lkZSB3aGV0aGVyIHdlIGEgc29jaWV0eSB3aGVyZSB0aG9zZSB0aGF0IGhhdmUgY29sbGVjdGl2ZWx5IGNhcmUgZm9yIHRob3NlIHRoYXQgZG9uIGhhdmUgKGFuZCB0aHVzIHRoZSByaWNoIHNob3VsZCBwYXkgbW9yZSB0aGFuIGN1cnJlbnRseSBwYWlkKSwgb3Igd2hldGhlciB3ZSB3YW50IHRvIGxpdmUgaW4gYSAiZG9nIGVhdCBkb2csIHNpbmsgb3Igc3dpbSwgYWxsIEkgY2FuIG9mZmVyIHlvdSBhcmUgdGhvdWdodHMgYW5kIHByYXllcnMgc29jaWV0eSAoeW91IHByb2JhYmx5IGEgbG9zZXIgaWYgeW91IGFyZW4gbWFraW5nIG1vbmV5IGFueXdheSkiIHNvY2lldHkgKHdoZXJlIHdlIGNvbXBsYWluIHRoYXQgdGhlIHJpY2ggYXJlIGhlbHBpbmcgdG9vIG11Y2ggYXMgaXMsIGFzIHRoaXMgR09QIHJlcCBzdWdnZXN0cykuClRoZSBhY3R1YWwgam91cm5hbGlzbSBvZiBmb3ggaXMgcmVhbGx5IHNvbGlkLiBUdiBuZXdzIGluIGdlbmVyYWwgdGhvdWdoIGlzIG5vdCBncmVhdCwgYW5kIEZveCBpcyBwcm9iYWJseSB0aGUgd29yc3Qgb2ZmZW5kZXIuIFRoZWlyIGFuY2hvcnMgYW5kIGV4cGVydHMgYXJlIGJhdHNoaXQgY3Jhenkgc29tZXRpbWVzLgpTdGF0ZXMsIHRoZSBXb3JsZCBQb2tlciBUb3VyIHdpbGwgYmUgbWFraW5nIGl0cyBtYWlkZW4gdm95YWdlIGludG8gT2tsYWhvbWEgdGhpcyB3ZWVrZW5kIHdpdGggdGhlIHByZXNlbnRhdGlvbiBvZiBXUFQgQ2hvY3Rhd2luIER1cmFudC4gVGhlIGV2ZW50LCB3aGljaCB3aWxsIGJlIHRlbGV2aXNlZCBhbmQgcHJlc2VudGVkIG9uIEZveCBTcG9ydHMgbGF0ZXIgdGhpcyB5ZWFyLCBraWNrcyBvZmYgRnJpZGF5LgpUaHJvdWdoIGNoYWxsZW5nZXMgdGhleSBmYWNlZCwgaGUgZXhwbGFpbmVkLCBoZSBhbmQgaGlzIGNsYXNzbWF0ZXMgbGVhcm5lZCBtdWNoIGFib3V0IHRoZW1zZWx2ZXMuIApBIGJyZWFrIGluIGluIEFwcmlsLCBpbiB3aGljaCBwb2xpY2Ugc2F5IEFsdmFyYWRvIHVzZWQgU3dpZnQncyBzaG93ZXIgYW5kIHNsZXB0IGluIGhlciBiZWQsIHB1dCBoaW0gYmVoaW5kIGJhcnMgZm9yIG1vcmUgdGhhbiBuaW5lIG1vbnRocy4gQXMgcGFydCBvZiB0aGUgc2VudGVuY2UsIGEganVkZ2UgYWxzbyBvcmRlcmVkIEFsdmFyYWRvIHRvIGNvbXBsZXRlIGEgbWVudGFsIGhlYWx0aCBwcm9ncmFtLgpZb3UgY2FuIGRvIHRvbnMgb2YgdGhpbmdzIGJlaGluZCB0aGUgd2hlZWwgdGhhdCBjYW4ga2lsbCBzb21lb25lLCBub25lIG9mIHRoZW0gaG9sZCB0aGUgc2FtZSBjb25zZXF1ZW5jZSBvZiBhbiBPV0kvRFVJLiAKMiBkZWNhZGVzIGxhdGVyLCBJJ2xsIHdvbmRlciAid2h5PyIgb25jZSBhZ2Fpbi4uIApBcyBwbGF5IGNvbnRpbnVlcywgcGxheWVycyB3aWxsIGJ1c3Qgb3V0IGFuZCBjaG9vc2UgdG8gbGVhdmUuIFdoZW4geW91IGFyZSBwbGF5aW5nIG11bHRpcGxlIHRhYmxlcywgaXQgaXMgdW5mYWlyIHRvIGhhdmUgYSBsYXJnZSBkaXNwYXJpdHkgaW4gdGhlIG51bWJlciBvZiBwbGF5ZXJzIGF0IGVhY2ggdGFibGUuIApUaGVzZXNvbmdzIGFyZSBvbiBhbiBhbGJ1bSBjYWxsZWQgIldhbG1hcnQgc291bmRjaGVjay4iIFRoZSBsYXR0ZXIgZm91cnNvbmdzIGhhdmUgIk9yaWdpbmFsIHBlcmZvcm1hbmNlIHNlcmllcyIgaW4gdGhlaXIgbmFtZXMuIApTbyB0cnVtcCBoYXMgb25seSBtaWxkIHRyYW5zZ3Jlc3Npb25zPyBPYnN0cnVjdGlvbiBvZiBKdXN0aWNlPyBBZG1pdHRpbmcgb24gbmF0aW9uYWwgdGVsZXZpc2lvbiBvZiBvYnN0cnVjdGlvbiBvZiBqdXN0aWNlLCBjYW1wYWlnbiB3aXRoIHRpZXMgdG8gUnVzc2lhLCBvdmVycmlkaW5nIGF0IGFuIHVucHJlY2VkZW50ZWQgMzArIHRpbWVzIGdpdmluZyBzZWN1cml0eSBjbGVhcmFuY2VzIHRvIHBlb3BsZSB3aG8gd2VyZSBkZW5pZWQ/IENhbGxpbmcgYSBzdGF0ZSBvZiBlbWVyZ2VuY3ksIHN0YXRpbmcgb24gbmF0aW9uYWwgdGVsZXZpc2lvbiBpdCdzIG5vdCBhbiBlbWVyZ2VuY3ksIGNhbXBhaWduIG1hbmFnZXIgd2FzIHdvcmtpbmcgd2l0aCBhbmQgZ2l2aW5nIFJ1c3NpYW5zIGVsZWN0aW9uIGluZm9ybWF0aW9uLCB1c2luZyBDYW1icmlkZ2UgYW5hbHl0aWNhIHRvIG1hbmlwdWxhdGUgdGhlIHB1YmxpYywgdGhlIGZpcnN0IE5hdGlvbmFsIFNlY3VyaXR5IEFkdmlzb3Igd2FzIGEgZm9yZWlnbiBhZ2VudC4gVGhlIGxpc3QgZ29lcyBvbiBhbmQgb24uIEhvdyBhcmUgdGhlc2UgdHdvIHNjb29wcyBvZiBpY2UgY3JlYW0gcHJvYmxlbXM/IEFueW9uZSBvZiB0aGVzZSB3b3VsZCBoYXZlLiAKSSBkbyBmZWVsIGxpa2UgcGVvcGxlcyBwZXJjZWl2ZWQgbGFuZ3VhZ2UgYmFycmllciB3aXRoIHNvbWVvbmUgbGVhZHMgdGhlbSB0byBiZSBmcnVzdHJhdGVkIGFuZCBjb2xkICAgaGFyc2gsIGV2ZW4sIHdoZW4gdGFsa2luZyB0byB0aGVtLiAKVGhlIHN0aW11bGF0aW9uIG9mIHRoZXNlIHJlZmxleGl2ZSB6b25lcyBhbmQgdGhlIHN0YXJ0IG9mIHRoZSBkZXRveGlmaWNhdGlvbiBwcm9jZXNzIHByb21vdGUgYSBzdHJvbmcgcmV2aXZhbCBvZiB0aGUgd2hvbGUgYm9keS4gCkl0IHNlZW1zIHRvIG1lIGxpa2UgdGhlIGJveXMgZW5qb3kgZG9pbmcgdGhlaXIgc3RlcmVvdHlwaWNhbGx5IG1hc2N1bGluZSBhY3Rpdml0aWVzIGFuZCB0aGUgZ2lybHMgYXBwZWFyIHRvIGJlIHVuaGFwcHkgd2l0aCB0aGVpciBjbGljaCBmZW1hbGUgYWN0aXZpdGllcy4gSSBzdWdnZXN0IHRoYXQgdGhlIGdpcmxzIHJlcGxpY2F0ZSB0aGUgYm95cyBhY3Rpdml0aWVzIGFuZCBjdXJyaWN1bHVtIGFuZCByZXRhaW4gdGhlaXIgb3duIHNwYWNlIGFuZCBvcmdhbml6YXRpb24uIFJhdGhlciB0aGFuIGhpamFja2luZyBhbmQgZm9yY2luZyBlbnRyeSBpbnRvIGEgbWFsZSBzcGFjZSBhbmQgcmV0YWluaW5nIHRoZWlyIGZlbWFsZSBzcGFjZS4uIApEZXIgbGV0enRlIFRlaWwgZGVyIG9uIEhvbGRlbSBpc3QgZWluIHJlaW5lcyBBcmJlaXRzYnVjaCB1bmQgaGVpdCBhdWNoIHNvLiBIaWVyIGdpYnQgZXMgZm5memlnIEF1ZmdhYmVuLCBkaWUgaW4gZWluaWdlIEZyYWdlbiB1bnRlcnRlaWx0IHNpbmQgdW5kIGRlcmVuIExzdW5nIHVtZmFuZ3JlaWNoc3QgYmVncm5kZXQgd2VyZGVuLiAKVGhlIFNlY3JldCBHYXJkZW4gb2YgU2llZ2ZyaWVkIFJveSBhdCB0aGUgTWlyYWdlIEhvdGVsIGlzIGEgdHJ1bHkgd29uZHJvdXMgaGFiaXRhdCB3aGVyZSBJIHNhdyBzb21lIG9mIHRoZSB3b3JsZCdzIHJhcmVzdCBhbmQgbW9zdCBleG90aWMgYW5pbWFscywgbGl2aW5nIHNpZGUgYnkgc2lkZSBpbiBwZXJmZWN0IGhhcm1vbnkuIFVwIGNsb3NlIGluIHRoaXMganVuZ2xlIHNldHRpbmcsIEkgd2FzIGFibGUgdG8gdmlldyByb3lhbCB3aGl0ZSB0aWdlcnMsIHN0cmlwZWQgd2hpdGUgdGlnZXJzLCB3aGl0ZSBsaW9ucywgYmxhY2sgcGFudGhlcnMsIHNub3cgbGVvcGFyZHMgYW5kIGEgaHVnZSBmb3VyIHRvbiBBc2lhbiBlbGVwaGFudC4gCiJORU8ncyBtaXNzaW9uIGlzIHRvIGZpZ2h0IGZvciBmYWlybmVzcyBhbmQgcHVzaCBiYWNrIGFnYWluc3QgZW50cmVuY2hlZCB2aWV3cyB0aGF0IGxpbWl0IGNvbXBldGl0aW9uIGFuZCBncm93dGggYWNyb3NzIHRoZSBDYW5hZGlhbiBjYXBpdGFsIG1hcmtldHMuIEl0IGlzIGZvciB0aGlzIHJlYXNvbiB3ZSByZWFkaWx5IGVtYnJhY2UgcHJvZ3JhbXMgdGhhdCBwcm9tb3RlIGVxdWFsaXR5IGF0IGV2ZXJ5IGxldmVsIG9mIGFuIG9yZ2FuaXphdGlvbi4gV2UgZmlybWx5IHN0YW5kIGJ5IHRoZXNlIHZhbHVlcyB3aXRoIG91ciBuZXcgYW5kIGNvbnRpbnVlZCBjb21taXRtZW50cyB0byB0aGUgV29tZW4ncyBFbXBvd2VybWVudCBQcmluY2lwbGVzIGFuZCB0aGUgU3VzdGFpbmFibGUgU3RvY2sgRXhjaGFuZ2UgSW5pdGlhdGl2ZSwiIHNhaWQgSm9zIFNjaG1pdHQsIFByZXNpZGVudCBhbmQgQ0VPLCBORU8uIApUaGVyZSBhIG1hc3NpdmUgcHJvYmxlbSB3aXRoIHRoZXNlIGFnZW5jaWVzIG5vdCBiZWluZyBhYmxlIHRvIHRlbGwgd2hvIGlzIHRydWx5IGNhcGFibGUgb2YgZG9pbmcgYSBqb2IsIGFuZCB3aG8gaXMgbm90LiAKVHJ1ZSwgYnV0IGl0IHNlZW1zIGhhcmQgdG8gZ2V0IHRob3VzYW5kcyBvdXQgb2YgdGhpcyBzeXN0ZW0uIFlvdSBjYW4gZ2FpbiBtb3JlIHRoYW4gb3RoZXIgcGVvcGxlIHB1dCBpbi4gQW5kIHdoYXQgdGhleSBwdXQgaW4gaXMgYmVpbmcgZmVkIG91dCBhdCBhIHN0ZWFkeSByYXRlIGFsc28uIApUaGV5IHRoZW4gdXNlIHRoYXQgb3Bwb3J0dW5pdHkgdG8gZ2V0IHRob3NlIGV5ZWJhbGxzIHRvIG90aGVyIHNob3dzIG9yIHByb2dyYW1taW5nLmluIHRoYXQgd2F5IHNwb3J0cyBpcyBtb3JlIHZhbHVhYmxlIHRvIHRoZSBuZXR3b3JrcyB0aGFuIGl0IGlzIGZvciB0aGUgbGVhZ3Vlcy4gVGhleSBoYXZlIG90aGVyIHdheXMgdG8gbGV2ZXJhZ2UgdGhvc2UgZXllYmFsbHMgaW50byBzb21ldGhpbmcgZWxzZS4gU28gdGhleSBjYW4gbG9zZSBtb25leSB0aGVyZSBidXQgZ2FpbiBtb3JlIGFkIHJldmVudWUgaW4gb3RoZXIgcHJvZ3JhbW1pbmcudmlld2luZyBoYWJpdHMgYXJlIGNoYW5naW5nIHRob3VnaCBzbyB0aGlzIG1pZ2h0IG5vdCBiZSBhIHZpYWJsZSBtb2RlbCBmb3IgbXVjaCBsb25nZXIgYnV0IHRoYXQgdGhlIGlkZWEgYmVoaW5kIHRoZXNlIGh1Z2UgdHYgY29udHJhY3RzLiAKSSBub3QgaW50ZW50aW9uYWxseSB0cnlpbmcgdG8gbWFrZSB5b3UgZmVlbCBiYWQgYnV0IHlvdSBuZWVkIHRvIHVuZGVyc3RhbmQgeW91ciBmbG9wIGxlYWQgaGVyZSBpcyBhIGdpZ2FudGljIG1pc3Rha2U7IGl0IHJlYWxseSBiYWQuVHVybiBzdWNrcyBidXQgeW91IHBsYXllZCBpdCBmaW5lLiAKVG8gZGF0ZSwgQnJhZHkgbG95YWx0eSB0byBHdWVycmVybyBoYXMgcmVtYWluZWQgc3RlYWRmYXN0LiBJZiBub3QgZm9yIEd1ZXJyZXJvIGxpZmUgYWx0ZXJpbmcgaW50ZXJ2ZW50aW9uIGFzIGhpcyBjb2FjaCBhIGRlY2FkZSBhZ28sIEJyYWR5IGhhcyBzYWlkLCBoZSB3b3VsZCBub3QgYmUgd2hvIGhlIGlzIHRvZGF5OiBhIHJlaWduaW5nIFN1cGVyIEJvd2wgY2hhbXBpb24gd2hvLCBhdCBhZ2UgMzgsIGlzIG91dHBlcmZvcm1pbmcgZWxpdGUgcXVhcnRlcmJhY2tzIHRocm91Z2hvdXQgdGhlIHNwb3J0LgpJIHRoaW5rIHRoZXkgZG8gYSByZWFsbHkgZ3JlYXQgam9iIGluIHRoZSBib29rIGFuZCB0aGUgc2VyaWVzIG9mIHNob3dpbmcgaG93IGl0IGFmZmVjdGVkIGhlciBzZXh1YWxseSAgbGlrZSB3aXRoIGhvdyBpdCB3YXMgZWFzaWVyIGZvciBoZXIgdG8gYmUgZmluZ2VyZWQgYnkgUmljaGFyZCB0aGFuIGtpc3NlZCBieSBoaW0gYW5kIGhvdyBpdCBzZWVtcyBzaGUgY2FuIG9ubHkgbWFzdHVyYmF0ZSB3aGVuIHNoZSBoYXMgZmxhc2hlcyBvZiB0aGUgY2FiaW4uLiAKUm9hc3QgbGFtYiBhbmQgb3IgdHVya2V5IHdvdWxkIGJlIGEgZmluZSBtYXRjaC4gCkJ1dCBhIHdoaWxlIGFmdGVyIHRoZXkgY2FtZSBvdXQsIEkgd2FzIGluIHRoZSBsb2NhbCBBcHBsZSBTdG9yZSB0byBsb29rIGF0IGdldHRpbmcgYSBuZXcgaVBvZCAodGhlIGJhdHRlcnkgaW4gbWluZSBoYWQgZGllZCBmb3IgdGhlIHNlY29uZCB0aW1lLCBhbmQgcmF0aGVyIHRoYW4gcmVwbGFjZSBpdCBhZ2FpbiBJIHRob3VnaHQgSSB1cGdyYWRlKS4gVGhleSBoYWQgYSBjb3VwbGUgb2YgdGFibGVzIGZ1bGwgb2YgaVBob25lcywgYW5kIEkgc3RvcHBlZCB0byBwbGF5IHdpdGggb25lLgpUaGUgbGFzdCBwZXJzb24gdG8gd2luIHR3byBNYWluIEV2ZW50cywgSm9obm55IENoYW4gZGlkIHNvIHdpdGggZW50cmFudCBwb29scyBvZiBqdXN0IDE1MiBhbmQgMTY3IHBsYXllcnMgcmVzcGVjdGl2ZWx5LiAKQ2hhY3VuZSBzYWl0IGNvbWJpZW4gZGUgdGl0cmVzICJjaGF1ZHMiIGVsbGUgcG9zc2RlLCBtYWlzIGlnbm9yZSBsZSBjb250ZW51IGR1IHBvcnRmb2xpbyBkZSBzYSB2b2lzaW5lLiAKT25lIHZlcnkgZGFuZ2Vyb3VzIHN5c3RlbSB0byBnZXQgaW52b2x2ZWQgd2l0aCBpZiB5b3UgYXJlIGEgR2FtYmxpbmcgUG9rZXIgYmVnaW5uZXIgaXMgdGhlIE5lZ2F0aXZlIFByb2dyZXNzaW9uIEJldHRpbmcgU3lzdGVtLiAKRWxsZSBwYXJsZSBkZSBkYmF0IHN1ciBsIG1haXMgc2FucyB0cmFuY2hlciBsZSBkYmF0LCBpbCBtZSBzZW1ibGUgcXVlIGwgc3VwcG9zZSBhdSBtb2lucyBsZSBjb25zZW50ZW1lbnQgZGUgbGEgcGVyc29ubmUgZXV0aGFuYXNpZSwgb3IgdW4gZW5mYW50IGRlIDMgYW5zIG4gcGFzIGVuIG1lc3VyZSBkZSBjb25zZW50aXIuIApOb25lIG9mIHRoaXMgc3R1ZmYgd2FzIG15IGRhZHMgb3IgbWluZS4gClRha2UgYSBwaWNuaWMgYmxhbmtldC4gQXQgU3VtbWVybGFuZCBIb3VzZSBGYXJtLCAyNTMgV2FyZGVsbCBSb2FkLCBBbHN0b252aWxsZSwgdGhpcyBTYXR1cmRheSBmcm9tIDEybm9vbiB0byA4cG0uLiAKTm90IHRoZSBndXkgeW91IHJlcGxpZWQgdG8gYnV0IGdybiBpcyBqdXN0IHNob3J0IGZvciAiZ3JhaW4iLCB3aGljaCByZWZlcnMgdG8gdGhlIG1hc3Mgb2YgdGhlIHByb2plY3RpbGUuCk15IGJmZiBpcyBub3QgZ29vZCBhdCBwbGFubmluZyB0aGluZ3MsIHNvIGhhdmluZyBoZXIgZG8gYSBiYWNoZWxvcmV0dGUgcGFydHkgd291bGQgaGF2ZSBiZWVuIHRlcnJpYmxlLiAyMzYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApIb3cgdGYgYW0gSSBzdXBwb3NlZCB0byBkbyBib3RoPyBIZWxsLCBob3cgYW0gSSBzdXBwb3NlZCB0byBkbyB0aGUgc2VsZiBhc3N1cmVkIHN0dWZmIGF0IGFsbD8gSSBrbm93IGhvdyB0byBiZSBhIGhhcmQgYXNzLCBJIGRvbiBrbm93IHd0ZiBJIGRvaW5nIG9uIHRoZSBjb25maWRlbnQgc2lkZS4gClRoZSBkYXkgYWZ0ZXIgdGhlIGNlbnRyYWwgYmFuayBsb3dlcmVkIGl0cyBlY29ub21pYyBvdXRsb29rIGFnYWluLCBNb3JuZWF1IG1ldCB3aXRoIGhpcyBBZHZpc29yeSBDb3VuY2lsIG9uIEVjb25vbWljIEdyb3d0aCBhbmQgcmVsZWFzZWQgdGhlIHBhbmVsIGluaXRpYWwgc2V0IG9mIHJlY29tbWVuZGF0aW9ucyBvbiBob3cgdG8gYm9vc3QgdGhlIENhbmFkaWFuIGVjb25vbXkgb3ZlciB0aGUgbG9uZyB0ZXJtLCBpbmNsdWRpbmcgY3JlYXRpbmcgYSBuZXcgaW5mcmFzdHJ1Y3R1cmUgYmFuazsgY3JlYXRpbmcgYSBmb3JlaWduIGRpcmVjdCBpbnZlc3RtZW50IGFnZW5jeTsgYW5kIGRyYW1hdGljYWxseSBib29zdGluZyBpbW1pZ3JhdGlvbi4KTW9qb3NvZnQgUGhvdG8gRnJhbWUgU3R1ZGlvLiAKQSBzZWNvbmQgc2V0IG9mIGV5ZXMgb24gYSBjcml0aWNhbC9jb21wbGV4IHB0IGNhbiBiZSBodWdlLiAKVGhlIGdvb2QgbmV3czogdGhlIHByb3ZpbmNpYWwgYnVkZ2V0IGluY2x1ZGVzIHNpZ25pZmljYW50IGNvbW1pdG1lbnRzIHRvIGFmZm9yZGFibGUgaG91c2luZywgaW5jbHVkaW5nICQyOTEgbWlsbGlvbiBlYXJtYXJrZWQgZm9yIG1vZHVsYXIgaG91c2luZyBhbmQgYSBmdXJ0aGVyICQyMDggbWlsbGlvbiB0byBidWlsZCAxLDcwMCBuZXcgcmVudGFsIGhvdXNpbmcgdW5pdHMgZm9yIGxvdyBpbmNvbWUgcmVudGVycy4uIApIZSBzcGVkIHVwLCBnb3QgaW4gZnJvbnQgb2YgdXMsIGFuZCBzbGFtbWVkIG9uIGhpcyBicmFrZXMuIApJIGxvdmUgdG8gZ2V0IHNvbWUgYWRkaXRpb25hbCBoYW5kcyB0byBoZWxwIGtlZXAgdGhpcyBwbGFjZSB0aWdodC4uIApXYWRlIFNjb3JlcyAxNCBJbiA0dGggVG8gSGVscCBIZWF0IFN0YXZlIE9mZiBIYXdrcywgMTE0IDExM1RoZSBNaWFtaSBIZWF0IG1heSBiZSB0dXJuaW5nIGEgY29ybmVyLCBhbmQgaXQncyB0aGVpciBncml6emxlZCBsZWFkZXIgd2hvIGlzIHNob3dpbmcgdGhlbSB0aGUgd2F5LgpUaGUgc3RhdGUgdm90ZWQgNjkgdG8gMzEgcGVyY2VudCBUdWVzZGF5IHRvIHBhc3MgQW1lbmRtZW50IDEzLCB3aGljaCBiYW5zIHRoZSBzcG9ydCBiZWdpbm5pbmcgb24gSmFuLiAKQnV0IG5vdyBnaXZlbiB0byBtb3JvbnMuIFRoZSBzaGl0IFJ1c3NpYSBtdXN0IGtub3cgYnkgbm93LiAKV2hpY2ggaXNuIHN1cnByaXNpbmcuIEhlIHdhcyBzbyBydWRlIHRvIHRoZSBwcm9zZWN1dGlvbiB0aGF0IGhlIGhhZCB0byBmb3JtYWxseSBhcG9sb2dpemUuIApBY2NhcmRvIGFueW9uZT8uIApCdXNxdWluZSwgd2VhcmluZyBhIHdoaXRlIHBhdHRlcm5lZCBUIHNoaXJ0LCBjYW4gYmUgc2VlbiBpbiB0aGUgcGhvdG8gd2lwaW5nIHN3ZWF0IGZyb20gaGlzIGJyb3cuCldoZW4gVG9kZCByZXBlYXRlZGx5IG1lbnRpb25zIHRoYXQgaXQgdXMsIHdlIGJlaW5nIGFtYml0aW91cyBhbGx1ZGluZyB0byB0aGUgY2hhcmFjdGVyaXN0aWNzIG9mIEJHUywgSSB3b3VsZG4gYmUgc3VycHJpc2VkIGlmIGNvbnNvbGVzIGFyZSB3aGF0IGtlZXAgY2F1c2luZyBCR1Mgc3R1ZGlvcyB0byBkdW1iIGRvd24uIApUaGUgbWFzc2l2ZSBldmFjdWF0aW9uIGhhcyBjb21wbGV0ZWx5IGRpc3J1cHRlZCB0aGUgcmh5dGhtIG9mIGRhaWx5IGxpZmUsIGJ1dCBmb3IgcmVzaWRlbnRzIHN1Y2ggYXMgQm9pc3Nvbm5lYXVsdCwgaW1wb3J0YW50IG1hcmtlcnMgb2YgbGlmZSBzdGlsbCBnbyBvbiAgIGFsdGhvdWdoIG5vdCBleGFjdGx5IGFzIHBsYW5uZWQuCkNhdWdodCBpbiB0aGUgbWlkZGxlIGFyZSBCcmF6aWxpYW5zIHdobyBkaXNsaWtlIGJvdGggY2FuZGlkYXRlcyBhbmQgc2VlIHRoZW0gYXMgc3ltYm9scyBvZiBhIGJyb2tlbiBzeXN0ZW0uCkN1bWEgbmFtYXpuIG1haGFsbGUgc2FraW5sZXJpIGlsZSBiaXJsaWt0ZSBrbGFuIEJha2FuIFNlcmthbiBBY2FyLCBhcmRuZGFuIHRheml5ZSBldmluZGUgdmF0YW5kYWxhcmxhIHNvaGJldCBldHRpLiAKQWZ0ZXIgYWJvdXQgMiBtaW51dGVzLCB5b3Ugd2lsbCBmaW5kIE5hdGFyZWUgb24geW91ciByaWdodCwgc2V0IGJhY2sgZnJvbSB0aGUgcm9hZC4gSnVzdCBhZnRlciBhIFRoYWkgcmVzdGF1cmFudCwgZGlwIGluIHRvIHRoZSBsaXR0bGUgZW5jbGF2ZSBhbmQgeW91IHdpbGwgc2VlIE5hdGFyZWUuIEFjdHVhbGx5LCB0aGVyZSBhcmUgdHdvIE5hdGFyZWUgam9pbnRzLCBidXQgZ28gaW4gdGhlIGZpcnN0IG9uZSAob3IsIHdoZW4gZmFjaW5nIHRoZW0sIGdvIGludG8gdGhlIG9uZSBvbiB0aGUgcmlnaHQpLiAKV2UndmUgYmVlbiBydW5uaW5nIGEgZmVlZCBvZiAvci9jb25sYW5ncyBmb3IgcXVpdGUgYSB3aGlsZSBub3cgYXMgd2VsbCAoYW5kIGluIGZhY3QsIGhhZCB0byBhbWVuZCBvdXIgQXV0b01vZCBmb3IgdGhlIHNhbWUgaXNzdWUgb2NjdXJyZW50IG9uIC9yL25lb2dyYXBoeSkuIApBZnRlciBhIHNob3J0IHBhdXNlLCBzaGUgZ2F2ZSBtZSBDQkogYW5kIEkgZ2F2ZSBoZXIgNSBtaW4gbWFzc2FnZS4gClRoZSByb3V0ZSBjb25zaXN0cyBvZiA1IDYgZGlmZmVyZW50IGxvY2F0aW9ucyBsb2NhdGVkIGluIENhbHZlcnQsIENoYXJsZXMsIGFuZCBTdC4gTWFyeSBjb3VudGllcy4gUmlkZXJzIGVuZCB1cCBiYWNrIGF0IEJ1Y2tldHMgU3BvcnRzIEJhciBhdCB0aGUgZW5kIG9mIHRoZSByaWRlIHdoZXJlIHRoZXkgZmluZCBvdXQgd2hvIGhhcyB3b24uIApIb3dldmVyLCB0byBtYWtlIGl0IGVhc2llc3Qgb24geW91cnNlbGYgYW5kIHlvdXIgcGxheWVycywgSSBzdWdnZXN0IGtlZXBpbmcgdG8gYSBwcmV0dHkgc2ltcGxlIGZvcm11bGEuIFN0YXJ0IGVhY2ggcGxheWVyIHdpdGggJDIwMDAgaW4gY2hpcHMuIApXaGVuIHlvdXIgYXNzYWlsYW50IHNlZXMgdGhhdCB5b3UncmUgY2FycnlpbmcgYSBndW4gb3Iga25pZmUsIHRoZXkgaW1tZWRpYXRlbHkga25vdyB0aGVpciBjaXJjdW1zdGFuY2VzLiAKRm9yIGV4YW1wbGUsIHlvdSBjb3VsZCBzcGVuZCAxNTAgRVVSIG9uIHRyYWluaW5nIHNpdGVzIG92ZXIgc29tZSBudW1iZXIgb2YgbW9udGhzLCBwbGF5IGEgdG9uIG9mIGhhbmRzLCBnZXQgYSBidW5jaCBvZiBwcmFjdGljZSB3aXRoIHRoZSBjb25jZXB0cywgdGhlbiBwYXkgYSBnb29kIGNvYWNoIDEwMCBFVVIgdG8gcmV2aWV3IHNvbWUgaGFuZHMsIGxvb2sgdGhyb3VnaCB5b3VyIGRhdGFiYXNlIHRvIHBsdWcgbGVha3MsIGV0Yy4gCkFzIHNvbWVvbmUgd2hvIHdvcmtlZCBhdCB0aGUgQmlnNCBpdCdzIG5vdCBtYWdpYyBvciBhbiBhcnQuIApXaGF0IHlvdSdyZSBzZWVpbmcgZmxvcHBpbmcgYXJvdW5kIGluc2lkZSBhcmUganVzdCB0aGUgcG9ja2V0cyAganVzdCByZWd1bGFyIHBvY2tldHMuIFRoZXkgYXJlbid0IGhpZGRlbiBiZXR3ZWVuIHRoZSBmYWNpbmcgYW5kIHRoZSBsaW5lciBsaWtlIG9uIHNvbWUgb3RoZXIga2luZHMgb2YgY29hdCwgYmVjYXVzZSB0aGUgcmVhbCBvbmVzIGFyZSBqdXN0IGxhbWJza2luICBubyBmYWNlLCBubyBsaW5pbmcsIHlvdSBqdXN0IGxlYXZlIHRoZSB3b29sIG9uLCBhbmQgYXNzZW1ibGUgaXQgc28gdGhlIHdvb2wgaXMgaW5zaWRlIGFuZCB0aGUgbGVhdGhlciAgdGhlIHBhcnQgdGhhdCB3YXMgImluc2lkZSIgdGhlIHNoZWVwICBpcyBvbiB0aGUgb3V0c2lkZS4gCkFzIGdhbWluZyBhbmQgZ2FtYmxpbmcgY29udmVyZ2UsIGl0IHdvbiBiZSBsb25nIGJlZm9yZSBwZW9wbGUgYXJlIHBsYWNpbmcgYmV0cyBvbiB0aGUgc29jaWFsIG1lZGlhIHNpdGUgb3IgdGhyb3VnaCBhcHBzIG9uIGlQYWRzLiAKSSdsbCBleHBhbmQgbW9yZSBpZiB0aGV5IGFzayBidXQgaWYgSSBzZW5zZSBqdWRnZW1lbnQgb24gc29tZXRoaW5nLCBJIHN0YW5kIGJ5IG15IGRlY2lzaW9uLiAKWW91IGNhbiBmaW5kIHBva2VyIG9kZHMgY2FsY3VsYXRvciBvbiB0aGUgSW50ZXJuZXQuIEFzIHNhaWQsIGl0IGlzIGp1c3QgYSBzb2Z0d2FyZTsgbWFueSBzaXRlcyBhbGxvdyB5b3UgdG8gZG93bmxvYWQgaXQgZm9yIGZyZWUuIE5ldmVydGhlbGVzcywgeW91IHNob3VsZCBrbm93IHRoZSB0eXBlIG9mIGdhbWUgeW91IHdhbnQgdG8gcGxheSBhbmQgYWNjb3JkaW5nbHkgeW91IGhhdmUgdG8gZmluZCB0aGUgcG9rZXIgY2FsY3VsYXRvci4gCkFub3RoZXIgZXhlY3V0aXZlLCB3aG8gYXNrZWQgdG8gcmVtYWluIGFub255bW91cyBiZWNhdXNlIGhlIGRvZXMgYnVzaW5lc3Mgd2l0aCBGYWNlYm9vayBhbmQgR29vZ2xlLCBzYWlkIHRoZSBncnVtYmxpbmcgYWJvdXQgZGF0YSBzaGFyaW5nIGhhcyBpbnRlbnNpZmllZCB0byB0aGUgcG9pbnQgdGhhdCBpdCdzIHRpbWUgZm9yIG1hcmtldGVycyB0byB2b3RlIHdpdGggdGhlaXIgZG9sbGFycyByYXRoZXIgdGhhbiBqdXN0IGNvbXBsYWluLiAKQnV0IGJlZm9yZSBwbGF5aW5nIGEgc2VyaW91cyBnYW1lIG9mIHBva2VyIHdpdGggeW91ciBmcmllbmRzLCBjaGVjayB3aGV0aGVyIHBsYXlpbmcgZm9yIHJlYWwgbW9uZXkgaXMgbGVnYWwgd2l0aGluIHlvdXIgYXJlYS4gV2hpbGUgc29tZSBhcmVhcyBwZXJtaXQgc21hbGwgc3Rha2VzIHBva2VyIGdhbWVzIGFtb25nIGF0IGhvbWUsIHNvbWUgcGxhY2VzIGhhdmUgc3RyaWN0ZXIgZ2FtYmxpbmcgbGF3cy4gSXQgaXMgYSBmaW5lIGlkZWEgdG8gbm90ZSB0aGUgcmlza3Mgb2YgYW4gb3BlbiBsb3cgc3Rha2VzIGdhbWUuIApIaXN0b3JpY2FsbHksIHRoZSBvbmx5IHdheSBib3dlbCB0b3hpbnMgZW50ZXJlZCB0aGUgYmxvb2Qgc3RyZWFtIHdhcyB0aHJvdWdoIHRyYXVtYSwgZm9yIGV4YW1wbGUgYnkgc3dvcmQgb3Igc3BlYXIuVGhpcyBxdWlja2x5IGxlZCB0byBzZXB0aWNlbWlhIHRoYXQgbWlnaHQgYmUgdHJlYXRhYmxlLCBvciBtb3JlIHByb2JhYmx5LCBlbmRlZCBpbiBkZWF0aC4gClRoZSByZWFsaXR5IGlzIHRoYXQgaWYgdGhleSB3ZXJlIHRvIGdldCBtYXJyaWVkIGluIE1vcm9jY28sIGl0IGNvdWxkIGJlIHdyaXR0ZW4gaW4gdGhlIG5pa2FoIChtYXJyaWFnZSBjb250cmFjdCkgdGhhdCBoZSBjb3VsZCBoYXZlIHVwIHRvIDQgd2l2ZXMuIEJ1dCBoZSdkIGhhdmUgdG8gYmUgYWJsZSB0byBzaG93IGhlIGNvdWxkIGFmZm9yZCB0byBoYXZlIG11bHRpcGxlIHdpdmVzICh1bmxpa2VseSkgYW5kIG5lZWQgdGhlIHBlcm1pc3Npb24gb2YgYW55IHdpdmVzIGhlIGFscmVhZHkgaGFkIGJlZm9yZSBhZGRpbmcgYW5vdGhlci4gCkVzcGVjaWFsbHkgYmFiaWVzIGFuZCB0b2RkbGVycyBuZWVkIGFuaW1hbCBwcm9kdWN0cyBmb3IgYSBoZWFsdGh5IGRpZXQgYW5kIHByb3BlciBncm93dGguLiAKVGhpcywgbGlrZSBhbGwgZ2VuZXJhbGl6YXRpb25zLCBpcyBhIGxvdmVseSBmYW50YXN5LiAKQWR2YW50YWdlcyBhbmQgRGlzYWR2YW50YWdlcyBvZiB0aGUgUG9rZXIgT2RkcyBDYWxjdWxhdG9yCkNhcmVlciBnYW1ibGVyIEJhbmEgbWF5IGJlIGEgaG90c2hvdCBhdCB0aGUgdGFibGVzLCBidXQgaGUgbm8gd2lubmVyIGF0IHRoZSByZWxhdGlvbnNoaXAgZ2FtZS4gQXMgaGlzIHBva2VyIGxlZ2VuZCBwYXBhIFJvYmVydCBEdXZhbGwgc2F5cywgdGhlIGtpZCBwbGF5cyBjYXJkcyB0aGUgd2F5IGhlIHNob3VsZCBsaXZlIGxpZmUgYW5kIGxpdmVzIGxpZmUgdGhlIHdheSBoZSBzaG91bGQgcGxheSBjYXJkcy4gCkkgYW0gc2F5aW5nIHRoYXQgaGUgZ2F2ZSBhIHRvbiBvZiBtb25leSB0byB3aGl0ZSBzdXByZW1hY2lzdHMgYW5kIHRoYXQgc2hpdHR5LiAKTGFzdCB3ZWVrZW5kIHRoZSBCQURQIGFuZCBBQ0NFU1MgaGVsZCBvdXIgZmlyc3QgY29tYmluZWQgdm9sdW50ZWVyIHRyYWluaW5nLiBXZWxjb21lIHRvIG91ciAxMiBuZXdseSB0cmFpbmVkIGRvdWxhcyFTdW5kYXkncyB0cmFpbmluZywgbGVkIGJ5IEJBRFAgY28gY29vcmRpbmF0b3IgUG9vbmFtIERyZXlmdXMgUGFpLCBvZmZlcmVkIGFuIGV4cGxhbmF0aW9uIG9mIHRoZSBCQURQJ3MgZ29hbHMsIHRoZSBhYm9ydGlvbiBkb3VsYSByb2xlLCBhbmQgcHJhY3RpY2Ugd2l0aCBzcGVjaWZpYyBzdXBwb3J0IHRlY2huaXF1ZXMuIFJhbmksIGEgQkFEUCBkb3VsYSBhbmQgbWFzc2FnZSB0aGVyYXBpc3QsIHRhdWdodCB0aGUgZG91bGFzIGhvdyB0aGV5IGNhbiByZWxheCBhbmQgc3VwcG9ydCBhIHBhdGllbnQgdGhyb3VnaCBtZWRpdGF0aW9uIGFuZCBtYXNzYWdlIHdoaWxlIGluIHRoZSBjbGluaWMgb3IgZHVyaW5nIHRoZWlyIHByb2NlZHVyZXMuIFRoaXMgd2FzIGVzcGVjaWFsbHkgaGVscGZ1bCBmb3IgZG91bGFzIHdobyBuZWVkIHRvIGNvbW11bmljYXRlIHdpdGggcGF0aWVudHMgd2hvIGRvIG5vdCBzcGVhayBFbmdsaXNoIGFuZCBjYW5ub3QgY29tbXVuaWNhdGUgdGhlaXIgYW54aWV0eSBvciBzdHJlc3MgZHVlIHRvIGxhbmd1YWdlIGJhcnJpZXJzLgpWb3RlIGZvciBpdCBiZWZvcmUgaXQgdG9vIGxhdGUuIi4gCklmIHlvdSBoYXRlIGJpZyBidXNpbmVzc2VzIGFuZCB0aGluayB0aGV5IGFsbCBvdXQgdG8gbWFrZSBhIHByb2ZpdCwgeW91IGhhdmUgdG8gY29uc2lkZXIgaG93IGluc3VyYW5jZSBjb21wYW5pZXMgZml0IGludG8gdGhpcy4KVGhlbiB3ZSBhcmUgaGF2aW5nIFBvbmNlIGRlIExlb24gTWFyZXMgY29udGVzdGluZyB0aGUgV0JDIGZlYXRoZXJ3ZWlnaHQgdGl0bGUgYSB0aXRhbmljIGZpZ2h0IG9mIHR3byBNZXhpY2FucyB3aG8gd2lsbCBoYXZlIGEgdHJ1ZSB3YXIgc3RvcnkgbGlrZSBpdCBhbHdheXMgaGFwcGVucyB3aGVuIHlvdSBoYXZlIHR3byBncmVhdCBNZXhpY2FucyBtZWV0aW5nIGVhY2ggb3RoZXIgaW4gdGhlIHByb3VkIHRyYWRpdGlvbiBvZiBUb2x1Y28gTHBleiBKb3MgTWVkZWwsIFJvZG9sZm8gTWFydG5leiAgUmFmYWVsIEhlcnJlcmEsIENodWNobyBDYXN0aWxsbyBSdWJlbiBPbGl2YXJlcywgRXJpayBNb3JhbGVzIE1hcmNvIEFudG9uaW8gQmFycmVyYSwgYW5kIElzcmFlbCBWYXpxdWV6IFJhZmFlbCBNcnF1ZXosIHRvIG1lbnRpb24gYnV0IGEgZmV3LiBBIHRydWx5IGdyZWF0IGZpZ2h0IGJldHdlZW4gdHdvIHJpbmcgd2FycmlvcnMgd2hvIHdpbGwgY29tcGV0ZSB3aXRoIGNvbW1pdG1lbnQsIHBhc3Npb24sIGFuZCBwcmlkZSBsaWtlIGFsbCBNZXhpY2FucyBkby4gVGhpcyBmaWdodCB3aWxsIGJlIGEgd2FyLi4gCkl0IHdpbGwgYmUgdXNlZCB0byBob3VzZSBib3RoIHRoZSBtZW50YWxseSBlbGwgYW5kIHRoZSBtZW50YWxseSBpbmZpcm0uIE9uZSBmbG9vciB3aWxsIGJlIFtkZXZvdGVkIHRvIG1lbiwgdGhlIG90aGVyIHRvIHdvbSBsZW4uIEFudGljaXBhdGUgNSBQZXQuIEJvb3N0IGluIFNjaHFvbCBCdWRnZXQgYXQgQmVsb2l0IEJFTE9JVCBBIHRlbnRhdGl2ZSAxOTU1IEJlbG9pdCBzY2hvb2wgYnVkZ2V0IG9mICQyLDEzOCw0MzUgY2FsbGluZyBmb3IgYSB0YXggbGV2eSBvZiA/MSw2OTMsMjkwIHdhcyBkaXNjdXNzZWQgYXQgYSBqb2ludCBtZWV0aW5nIG9mIGNpdHkgY291bmNpbG1lbiBhbmQgc2Nob29sIGJvYXJkIG1lbSAgYmVycyBUaHVyc2RheSBuaWdodC4gClBlb3BsZSB3b3VsZCBtb2FuIGFib3V0IEdUQSBtdHgsIG5vdyB3aXRoIFJETyB0aGUgbWljYWh0cmFuc2FjdGlvbnMgaGF2ZSBqdXN0IGJlZ3VuLiAKQWxsIHRoZXkgZGlkIGlzIGVuc3VyZSB0aGF0IGl0cyBnb2luZyB0byBiZSBpbmZpbml0ZWx5IGhhcmRlciBmb3IgdGhpcyBraWQgdG8gYmUgYSBjb250cmlidXRpbmcgbWVtYmVyIG9mIHNvY2lldHkgZ29pbmcgZm9yd2FyZC4gCkRpcmVjdGVkLCBzY3JpcHRlZCwgcHJvZHVjZWQgYW5kIGFjdGVkIGluIGEgc2VyaWVzIG9mIHVuZGVyY292ZXIgdmlkZW9zIHNob3djYXNpbmcgcmFjaXNtIGFuZCBzdGF0dXRvcnkgcmFwZSBhdCBQbGFubmVkIFBhcmVudGhvb2QgaW4gMjAwNyBhbmQgMjAwOC4KVGhhbiBvbmNlIEkndmUgYm91Z2h0IGhvdXNlcyB3aXRoIGJyb2tlbiBzZXdlciBsaW5lcyB0aGF0IEkgZGlkbid0IGtub3cgYWJvdXQuIE1vcmUgdGhhbiBvbmNlIEkndmUgbWlzc2VkIHRoYXQgYSBob3VzZSBoYWQgZ2FsdmFuaXplZCBwbHVtYmluZyB0aGF0IHdhcyBzbyBydXN0ZWQgb3V0IGl0IG5lZWRlZCB0byBiZSByZXBsYWNlZC4gTW9yZSB0aGFuIG9uY2UgSSBoYXZlIG1pc2p1ZGdlZCB0aGUgSFZBQyBvciB3aW5kb3dzb3Igcm9vZm9yIG1pc3NlZCBrbm9iIGFuZCB0dWJlIHdpcmluZyBvciBzdWJzdGFudGlhbGx5IHVuZGVyZXN0aW1hdGVkIHRoZSBuZWNlc3NhcnkgYnVkZ2V0IG9mIGEgcHJvamVjdCBvciB1c2VkIGJhZCBjb21wcyB3aGVuIGFuYWx5emluZyB0aGUgTFRWIG9mIGEgcHJvcGVydHkuIAoxMy4gClRoZXJlIGFyZSB0aHJlZSB0eXBlcyBvZiBtZWxhc21hLCBlYWNoIGNsYXNzaWZpZWQgYWNjb3JkaW5nIHRvIHRoZSBsYXllciBvZiBza2luIHRoZSBjb25kaXRpb24gYWZmZWN0cy4gRXBpZGVybWFsIG1lbGFzbWEgYWZmZWN0cyB0aGUgZXBpZGVybWlzLCBvciB0aGUgdG9wIGxheWVyIG9mIHNraW4uIFRoZXNlIHBhdGNoZXMgYXJlIHVzdWFsbHkgZGFyayBicm93biB3aXRoIHdlbGwgZGVmaW5lZCBib3JkZXJzLCBhbmQgdGhleSByZXNwb25kIGVhc2lseSB0byB0cmVhdG1lbnQuIERlcm1hbCBtZWxhc21hIGFmZmVjdHMgdGhlIHNlY29uZCwgZGVlcGVyIGxheWVyIG9mIHNraW4sIGNhbGxlZCB0aGUgZGVybWlzLiBJbiBkZXJtYWwgbWVsYXNtYSB0aGUgcGF0Y2hlcyBhcmUgbGlnaHRlciBicm93biB0aGFuIGVwaWRlcm1hbCBtZWxhc21hLCBoYXZlIGJvcmRlcnMgdGhhdCBhcmUgbGVzcyBwcmVjaXNlIGFuZCBkbyBub3QgcmVzcG9uZCB3ZWxsIHRvIHRyZWF0bWVudC4gVGhlIHRoaXJkIHR5cGUgb2YgbWVsYXNtYSBpcyBjYWxsZWQgbWl4ZWQgbWVsYXNtYSwgd2hpY2ggaXMgYSBjb21iaW5hdGlvbiBvZiBlcGlkZXJtYWwgYW5kIGRlcm1hbCBtZWxhc21hLiBNaXhlZCBtZWxhc21hIHVzdWFsbHkgaW1wcm92ZXMgc29tZXdoYXQgd2hlbiB0cmVhdGVkLgpNeSBwcmlvcml0eSBpc24gc2FmZWd1YXJkaW5nIGV2ZXJ5IGxhc3Qgam9iLiAKU2Vsb24gY2VzIGNvbGVzLCBJaSBzZXJhaXQgdHJzIG1hdXZhaXMgcG91ciBsYSB0aHlyb2RlIGV0IGxlIHBhbmNyYXMuIEplIHRyb3V2ZSBmaW5hbGVtZW50IGNldHRlIHVuYW5pbWl0IGFzc2V6IHN1c3BlY3RlLiBWb2lyIDpMYSBzYWdlc3NlIHJlY29tbWFuZGUgZGUgcydlbiB0ZW5pciAgdW4gdXNhZ2UgcGFyY2ltb25pZXV4IGRlcyBzZXVscyBwcm9kdWl0cyBmZXJtZW50cy4gClRoZXJlIGFyZSBtYW55IHdheXMgdG8gYmUgaW50aW1hdGUgc28gc3RpY2sgd2l0aCB0aGUgb25lcyB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoLiAKODMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb0kgZGVjaWRlZCB0byBsb29rIHVwICJjaGlubyBoaWxscyBiYXNrZXRiYWxsIiBvbiB5b3V0dWJlLiBJIGhlYXJkIExlb25hcmRvIEJhbGwgb3Igd2hhdGV2ZXIgdGhlIGZ1Y2sgd2FzIGZhbW91cyBmb3IgY2h1Y2tpbmcgNDAgZm9vdGVycyBhbmQgd2Fsa2luZyBvdXQgb2YgZ2FtZXMvdG91cm5hbWVudHMuIEhvbHkgZnVjaywgYXBwYXJlbnRseSB0aGF0IE1hdGVyIERlIHRlYW0gaXMgc3VwcG9zZWQgdG8gYmUgbGlrZSB0aGUgYmVzdCBpbiB0aGUgd2VzdCBjb2FzdCBvciBzb21ldGhpbmc/IFRoZXkgYXJlIGdldHRpbmcgZGVtb2xpc2hlZCBieSBDaGlub3Mgc3lzdGVtLiAKUmVkdWNpbmcvcmVtb2RlbGxpbmcgc2NhciB0aXNzdWUgICBXaGVuIGFuIGluanVyeSBvY2N1cnMgc2NhciB0aXNzdWUgY2FuIGZvcm0gZHVyaW5nIHRoZSBoZWFsaW5nIHByb2Nlc3MuIFRoZSBpbmp1cmVkIG11c2NsZSB3aWxsIHNsb3dseSBsb3NlIGl0cyBmbGV4aWJpbGl0eSBhbmQgZWxhc3RpY2l0eSBpbmNyZWFzaW5nIHRoZSBtdXNjbGUncyBzdGlmZm5lc3MuIApUaGF0IHNhaWQsIFRoZSB0aGlyZCB3b3JsZCBpcyBiZXlvbmQgZnVja2VkIGJlY2F1c2UgdGhlcmUgaXMgYSBnbG9iYWwgYmFuIG9uIGZvc3NpbCBmdWVsIGludmVzdG1lbnQgaW50byB0aG9zZSBjb3VudHJpZXMuIApTbyB0aGUgJ09kZCBDb3VwbGUnIHNob3VsZCBnaXZlIGhpbSBjcmVkaXQgdG8gc3RhZ2Ugc3VjaCBhIHBsYXkgdGhhdCBoYXMgZW5kdXJlZCB0aGUgdGVzdCBvZiB0aW1lIGFuZCBzdXJ2aXZlZCBhcyBhIHRpbWVsZXNzIGNsYXNzaWMgdGhhdCBmaXQgaW4gdG8gYWxsICdzd2VldCBuIHNvdXInIHJlbGF0aW9uc2hpcHMuIApNb3JlIGFkdmFuY2VkIGFsZ2VicmEgdG9waWNzIChzaW11bHRhbmVvdXMgZXF1YXRpb25zLCBwb2x5bm9taWFscyBldGMpIGFyZSBwcm9iYWJseSBiZXlvbmQgdGhlIHF1aWNrIGZpeCBzY29wZSwgYnV0IHByb2JhYmx5IG5vdCBuZWNlc3NhcnkgZm9yIGEgZGlwbG9tYS4gCiJIZSB3YXMgZG9pbmcgdGhhdCBmaXZlIGRheXMgYSB3ZWVrLCBzbyB0aGF0J3MgJDIwMDAuIgpJIChBbWVyaWNhbikgb25jZSBoYWQgYSBFdXJvcGVhbiBzdHVkZW50IChEdXRjaCBJIHRoaW5rPykgdGhhdCBsaXZlZCBvbiBteSBmbG9vciBhdCB1bml2ZXJzaXR5LiBJIHdhcyBnZXR0aW5nIG9uIHRoZSBlbGV2YXRvciBqdXN0IGFzIGhlIHdhcyBnZXR0aW5nIG9mZiwgYW5kIGhlIGFza2VkIG1lICJIb3cgYXJlIHlvdSBkb2luZz8iCiJXaGF0IHlvdSBuZWVkZWQgd2FzIG9uZSBvZiB0aGUgZmluZXN0IGFjdHJlc3NlcyBpbiB0aGUgd29ybGQsIiBoZSBleHBsYWluZWQgYXQgdGhlIG1vdmllJ3MgVG9yb250byBJbnRlcm5hdGlvbmFsIEZpbG0gRmVzdGl2YWwgcHJlc3MgY29uZmVyZW5jZS4gIlRoZXJlIHdhcyBhIG51YW5jZSB0byB0aGlzIHJvbGUsIGEgc3RyZW5ndGgsIGEgdmVyeSBpbnRlcmVzdGluZyBzZW5zZSBvZiBodW1vci4gCkxlYXJuaW5nIHRvIHBpY2sgeW91ciBiYXR0bGVzIGlzIGFuIGltcG9ydGFudCBwYXJ0IG9mIG1hcnJpYWdlLiBJbiBteSBvcGluaW9uLCB0aGlzIGlzIGEgYmF0dGxlIHdvcnRoIGZpZ2h0aW5nLiBCb3RoIGJlY2F1c2UgdGhlIGNvbnNlcXVlbmNlcyBhcmUgc28gZmFyIHJlYWNoaW5nICAgeW91IGdvaW5nIHRvIGJlIHBheWluZyBvZmYgYSAkMzBrIHdlZGRpbmcgZm9yIHllYXJzICAgYW5kIGJlY2F1c2UgaXQgaGVscHMgc2V0IHRoZSB0b25lIGZvciB5b3VyIGVudGlyZSBtYXJyaWFnZS4gRG8geW91IGp1c3QgcGxhbiB0byBnbyB3aXRoIHRoZSBmbG93IGlmIHlvdSB0d28gZGlzYWdyZWUgb24ga2lkcyAod2hlbiwgaG93IG1hbnksIGhvdyB0byByYWlzZSB0aGVtLCBldGMpPwpEdWUgdG8gdGhlIHZhZ2FyaWVzIG9mIHRvdXJuYW1lbnQgcG9rZXIsIGluIGEgdHlwaWNhbCBmaWVsZCBldmVuIHRoZSB2ZXJ5IGJlc3QgcGxheWVycyBhcmUgb25seSBhYm91dCB0aHJlZSB0byBmb3VyIHRpbWVzIGFzIGxpa2VseSB0byB3aW4gYXMgdGhlIGF2ZXJhZ2UgcGxheWVyLiBJbiBvdGhlciB3b3JkcywgaW4gYW55IGdpdmVuIHRvdXJuYW1lbnQgd2l0aCA0MDAgZW50cmFudHMsIHRoZSB0b3AgcGxheWVyIGluIHRoZSBmaWVsZCB3b3VsZCBiZSBubyBiZXR0ZXIgdGhhbiBhIDEwMCAxIHNob3QgdG8gd2luIGl0LiAKVHJ1bXAgc2FpZCBoZSBob3BlZCB0aGF0IENoaW5lc2UgUHJlc2lkZW50IFhpIEppbnBpbmcgd2FzIGNvbW1pdHRlZCB0byB0aGUgZ29hbCBvZiBkZW51Y2xlYXJpemluZyB0aGUgS29yZWFuIHBlbmluc3VsYSwgY2FsbGluZyBoaW0gYSB3b3JsZCBjbGFzcyBwb2tlciBwbGF5ZXIuIEJ1dCBoZSBzYWlkIGhlIHdhcyBkaXNwbGVhc2VkIGJ5IENoaW5hJ3Mgc29mdGVuaW5nIG9mIGJvcmRlciBlbmZvcmNlbWVudCBtZWFzdXJlcyBhZ2FpbnN0IE5vcnRoIEtvcmVhLgpUaGUgNTAwIHNjYXJlZCBtZSB0aGUgZmlyc3QgZmV3IHJpZGVzLCB0aGUgZGlmZmVyZW5jZSBpbiBwb3dlciBhbmQgc3BlZWQgYXZhaWxhYmxlIGJldHdlZW4gdGhlIHRocmVlIHdhcyBsaWtlIG5pZ2h0IGFuZCBkYXkuIApJJ20gcnVubmluZyBvdXQgb2YgJ25vbiBlcm9naW5vdXMgem9uZXMuJyB0aHVzIGZhcjouIApTdmVuc29uXzI2ICAzMCw1OTcgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgZGVjaWRlZCB0byB1c2UgbXkgdGh1bWJuYWlsIHRvIGJyZWFrIHRoZSB3b29kIGF3YXkgZnJvbSB0aGUgdGlwIGFuZCBleHBvc2UgdGhlIGdyYXBoaXRlIHNvIHRoYXQgSSBkaWRuIGhhdmUgdG8gc2hhcnBlbiBpdC4gCk15IGF1bnRzIHVzZWQgdG8gYXNrIGZvciB0aGluZ3MgZm9yIGZyZWUgYWxsIHRoZSB0aW1lIGFuZCBJIGNhdmUgc29tZXRpbWVzIGFuZCBnaXZlIHRoZW0gb25lIGZyZWUgaXRlbSBldmVuIHRob3VnaCBJIGRpZG4gd2FudCB0byAodGhlIG9uZSBmcmVlIGl0ZW0gc3VwcG9zZWQgdG8gYmUgcmVzZXJ2ZWQgZm9yIG15IG1vbSBhbmQgZ3JhbmRtYXMgb25seSkuIApPbiBhIHRlbXBvcmFyeSB2aXNhIHRvIGdldCBoZXIgc29uIG1lZGljYWwgdHJlYXRtZW50LiBTaGUgc2FpZCBMb3BleiB0b29rIGhlciBzb24gYW5kIHNoZSBkaWRuJ3Qgc2VlIGhpbSBmb3IgYWJvdXQgYSB3ZWVrLlNoZSBhbHNvIHRvbGQgcG9saWNlIHRoYXQgU29saXMgYW5kIExvcGV6IGZvcmNlZCBoZXIgdG8gYWRvcHQgYSBkaWZmZXJlbnQgbmFtZSwgdG9vayBhd2F5IGhlciBwaG9uZSBhbmQgSUQgY2FyZCBhbmQgdG9sZCBoZXIgbm90IHRvIGNvbnRhY3QgaGVyIHNvbidzIGZhdGhlciBpbiBNZXhpY28uU29saXMgYW5kIExvcGV6IHdlcmUgYXJyZXN0ZWQgaW4gYSBTV0FUIHJhaWQgSnVuZSAzIG9uIGNvdW50cyBvZiBzZXh1YWwgYXNzYXVsdCwga2lkbmFwcGluZyBhbmQgc2V4IHRyYWZmaWNraW5nIG9mIGFuIGFkdWx0LiBUaGUgcG9saWNlIHJlcG9ydCByZWRhY3RlZCB0aGUgYWdlIG9mIHRoZSB3b21hbiBhbmQgaGVyIHNvbi4gCklzIGRvaW5nIGV2ZXJ5dGhpbmcgc2hlIGNhbiB0byBnZXQgYXR0ZW50aW9uLCBidXQgdGhlIG90aGVyIGZyZXNocGVyc29ucyB3aG8gaGFwcGVuIHRvIGJlIHdvbWVuIGFyZSBqdXN0IHRvbyBtdWNoIGZvciBoZXIgdG8gb3ZlcmNvbWUuIApJJ3ZlIGZvdW5kIHRoYXQgdGhlcmUncyBhIGZ1Y2sgdG9uIG9mIDdzIG91dCB0aGVyZSB0aGF0IGhhdmUgc25lYWt5IG5pY2UgYm9kaWVzIG9yIHZlcnkgY3V0ZSBmYWNlcy4gQW5kIEkgaGF2ZSB2ZXJ5IGhpZ2ggc3RhbmRhcmRzIHRvbyBidXQgd2hlbiBzaGUgZ2V0cyBuYWtlZCB0aGluZ3MgY2hhbmdlIGEgbGl0dGxlIGxpa2UgeW91IGhhdmUgdG8gYmUgZmF0IG9yIHJlYWxsbGxseSB1bmF0dHJhY3RpdmUgdG8gbm90IGdldCBtZSB0dXJuZWQgb24uIApVbSAkMC4zMCBhdWYgJDAuNTAgZ2VzY2hlaGVuLi4gCkxpdmluZyBvZmYgdGhlIGxhbmQgZG9lc24ndCBoYXZlIHRvIGVxdWFsIGEgbGlmZSBvZiBudXRzIGFuZCBiZXJyaWVzLCBvciBldmVuIHZlZ2V0YXJpYW5pc20gICBodW50aW5nLCBmaXNoaW5nLCBhbmQga2VlcGluZyBzbWFsbCBsaXZlc3RvY2sgKHN1Y2ggYXMgY2hpY2tlbnMgYW5kIGdvYXRzKSBrZWVwIGRlcHJpdmF0aW9uIGF0IGJheSBmb3IgbWVhdCBlYXRlcnMuIEV2ZW4gaWYgeW91J3JlIGEgbm92aWNlIGZpc2hlcm1hbiwgZm9yYWdlIGZpc2ggICBzbWFsbCBzY2hvb2xpbmcgZmlzaCBzdWNoIGFzIGFuY2hvdmllcyBhbmQgc2FyZGluZXMgdGhhdCBhcmUgb2Z0ZW4gbWVhbHMgZm9yIG90aGVyIGZpc2ggICBhcmUgcGFja2VkIHdpdGggcHJvdGVpbiBhcyB3ZWxsIGFzIG9tZWdhIDMgZmF0dHkgYWNpZHMsIGNhbGNpdW0gYW5kIG90aGVyIGltcG9ydGFudCBtaW5lcmFscyAuIEFuZCByYWlzaW5nIGFuaW1hbHMgZm9yIGZvb2QgbWVhbnMgeW91J2xsIGtub3cgeW91ciBtaWxrIGFuZCBlZ2dzIGFyZSBmcmVzaCBhbmQgZnJlZSBvZiBwZXN0aWNpZGVzLCBhbnRpYmlvdGljcyBhbmQgYWRkZWQgaG9ybW9uZXMuCkdldHRpbmcgb25lIG9mIGFueXRoaW5nIHRvIHdvcmsgZm9yIGFsbCBzZWFzb25zIGFuZCB0cmlwIGxlbmd0aHMgd2FzIGFsd2F5cyBnb2luZyB0byBiZSB1bmxpa2VseSBmb3IgbWUuIApTY2hyb2VkZXIncyB0ZWFtLkZvciBtb3JlIGluZm9ybWF0aW9uIG9uIHRoZSBVU0EgT2x5bXBpYyB3YXRlciBwb2xvIHRlYW0sIGdvIHRvIFVTQSBXYXRlciBQb2xvLlRoZSBkcnVnbGVzcywgdW5mYWlyIGFkdmFudGFnZUEgbmV3ZXIgZGV2ZWxvcG1lbnQgb2YgY2hpcm9wcmFjdGljIGlzIHB1c2hpbmcgdGhlIGxpbWl0cyBvZiBhdGhsZXRpYyBwb3NzaWJpbGl0aWVzLkFyb3VuZCB0aGUgd29ybGQgdG9kYXkgbWFueSBjaGlyb3ByYWN0b3JzIGFyZSBsZWFybmluZyBGdW5jdGlvbmFsIE5ldXJvbG9neS5UaGlzIGlzIGEgY29tcGxleCBwcm9ncmFtIG9mIHN0dWR5IHRoYXQgcmVxdWlyZXMgaHVuZHJlZHMgb2YgaG91cnMgb2YgYWNhZGVtaWMgYW5kIGNsaW5pY2FsIHRyYWluaW5nIG9mIHRoZSBodW1hbiBuZXJ2b3VzIHN5c3RlbSBhbmQgaXMgdGF1Z2h0IGJ5IHRoZSBDYXJyaWNrIEluc3RpdHV0ZSBmb3IgR3JhZHVhdGUgU3R1ZGllcy5XaGF0IGtpbmQgb2YgYXRobGV0ZSB3b3VsZG4ndCB3YW50IHRoYXQ/T25lIGdyb3VwIG9mIGF0aGxldGVzIG9mdGVuIG92ZXJsb29rZWQgaW4gdGhlIE9seW1waWNzIGlzIHRoZSBQYXJhbHltcGljczsgYXRobGV0ZXMgd2hvIGhhdmUgc3VzdGFpbmVkIHBlcm1hbmVudCBpbmp1cmllcyBidXQgc3RpbGwgaGF2ZSBhIHN0cm9uZyBhdGhsZXRpYyBhYmlsaXR5LlNvbWUgcGFyYWx5bXBpYW5zIHJlY2VpdmUgY2hpcm9wcmFjdGljIGNhcmUgdG8gZW5oYW5jZSB0aGVpciBwZXJmb3JtYW5jZSwgb3ZlcmNvbWUgaW5qdXJpZXMgZmFzdGVyIGFuZCBoZWxwIHRoZWlyIGJvZGllcyBzdGFiaWxpemUgYW5kIGFkYXB0IHRvIGFuIGFsdGVyZWQgYm9keSBmdW5jdGlvbi5Eci4gCllvdSBib3RoIGNoZWNrIHRoZSBmbG9wIGFuZCB0aGUgdHVybiBzaG93cyA4Yy4gCllldCBib21iaW5nIHRoZSBpbmRpdmR1YWxzIHJlc3BvbnNpYmxlIGlzIHN0aWxsIHRoZSB0YWN0aWMgb2YgcmV2b2x1dGlvbmFyeSBncm91cHMuIFN0YXRlcyBhbmQgc3RhdGUgbGlrZSBlbnRpdGllcywgbGlrZSB0aGUgVVMgb3IgQWwgUWFlZGEsIHByZWZlciB0byBib21iIGlubm9jZW50IGNpdmlsaWFuIHBvcHVsYXRpb25zLiAKRm9ydHVuYXRlbHksIHRoZXNlIHBva2VyIGJvdHMgbWF5IG5vdCBiZSBhIHRocmVhdCBmb3IgbG9uZy4gQnV0IHlvdSBtaWdodCB0aGluaywgd2h5IHNob3VsZCB0aGVzZSBwb2tlciByb29tcyBjYXJlLCBzaW5jZSBwb2tlciBib3RzIG1ha2UgYXMgbXVjaCBtb25leSBmb3IgdGhlbSBhcyByZWFsIHBlb3BsZSBkbz8gVGhlIGFuc3dlciBpcyByZWFsIHBlb3BsZSBnZXQgcmVzdGxlc3MuIEF0IHRoZSByaXNrIG9mIHRoZWlyIHJlYWwgaHVtYW4gY3VzdG9tZXJzIGJveWNvdHRpbmcgb25saW5lIHBva2VyIGFsdG9nZXRoZXIsIHRoZXkgYXJlIG5vdyB0YWtpbmcgbm90aWNlIGFuZCBhcmUgdHJ5aW5nIHRvIGRvIHNvbWV0aGluZyBhYm91dCB0aGlzIGdyb3dpbmcgbWVuYWNlLi4gCk15IGRpc2FncmVlbWVudHMgd2l0aCBoaW0gd2VyZSBudW1lcm91cywgYnV0IEkgZmVsdCBoZSB3YXMgd2VsbCByZWFzb25lZCwgYW5kIEkgYXQgbGVhc3QgcmVzcGVjdGVkIGhpcyBkZWNpc2lvbnMuLiAKVGhlIGRpdmlzaW9uIGJldHdlZW4gY2l0aXplbnMgaXMgZHJpdmVuIGFuZCBkZXNpZ25lZCBieSB0aGVtIGluIG9yZGVyIHRvIGRlZmxlY3QgZXhwb3N1cmUgYW5kIGRpc3RyYWN0IGZyb20gcmVhbGl0eS4gVGhpcyBpcyBub3QgYSBSL0Qgb3IgcmlnaHQvbGVmdCBzY2VuYXJpby4gV2hpbGUgYmF0dGxpbmcgb3ZlciB0aGUgZ3VucywgaGVhZHNjYXJmcywgYmF0aHJvb21zLCBnZW5kZXIsIGV0YyB0aGV5IGFyZSB2YWN1dW1pbmcgd2VhbHRoLCBkZWdyYWRpbmcgaGVhbHRoY2FyZSBhbmQgcHJpdmFjeS9yaWdodHMsIHByb3RlY3RpbmcgdGhlaXIgaW50ZXJlc3RzIHdpdGggeW91ciBkb2xsYXJzLCBhbmQgYWxsIHRoZSB3aGlsZSBkZXBsZXRpbmcgZWR1Y2F0aW9uLCB3YXRlci9haXIgcXVhbGl0eSwgYW5kIGdlbmVyYWwgd2VsbGJlaW5nLi4gCkkgbGlrZWQgdGhlIHNpZ25hdHVyZSB0aHJlZSBob3VyIFJveWFsIEJhbnlhbiAoJDE5NSkgdHJlYXRtZW50OiBhIG1pbnQgZm9vdGJhdGgsIGEgbGVtb25ncmFzcyBhbmQgY3VjdW1iZXIgcnViLCBhIG1hc3NhZ2UgdXNpbmcgVGhhaSBoZXJiYWwgcG91Y2hlcywgYW5kIGEgYmF0aCBpbiBhIGZsb3dlciBmaWxsZWQgdHViLiBPbmUgb2YgdGhlIGZpdmUgcmVzdGF1cmFudHMgc2VydmVzIHNwYSBjdWlzaW5lLiBDYXZlYXQ6IFRoZSBCYW55YW4gVHJlZSBpcyBwYXJ0IG9mIHRoZSBtYXNzaXZlIExhZ3VuYSBkZXZlbG9wbWVudCwgNSByZXNvcnRzIHdpdGggMSwwODggcm9vbXMsIDMwIHJlc3RhdXJhbnRzLCBhIGdvbGYgY291cnNlLCBzaG9wcGluZywgYW5kIHJlc2lkZW5jZXMuIApJIHBlcnNvbmFsbHkgaGF2ZSBsdWNpZCBkcmVhbXMgZXZlcnkgbmlnaHQuIEx1Y2lkIGRyZWFtcyBhcmUgd2hlcmUgeW91IGFyZSBhd2FrZSBpbiB5b3VyIGRyZWFtcy4gWW91IGtub3cgeW91IGFyZSBkcmVhbWluZywgYW5kIGNhbiBjb250cm9sIHRoZW0uIApTb21lIHBlb3BsZSBwbGF5IHBva2VyIGdhbWVzIGZvciByZWxheGF0aW9uIHB1cnBvc2VzLiBNb3N0IHBsYXllcnMsIGhvd2V2ZXIsIHBsYXkgaW4gb3JkZXIgdG8gZWFybiBhZGRpdGlvbmFsIGNhc2guIElmIHlvdSdyZSBqdXN0IGEgcG9rZXIgcGxheWVyIHdobydzIGEgbm92aWNlIGFuZCB5b3UgYWltIHRvIHdpbiBpbiBwb2tlciwgeW91J2xsIHN1cmVseSBiZW5lZml0IGZyb20gdGhlIHRpcHMgc2hhcmVkIGhlcmUuClRoZXkgdGhpbmsgbG9uZ2VyIHRlcm0gYW5kIGhhdmUgZ3JlYXRlciBwYXRpZW5jZSB0aGFuIHRoZSBVUy4gWGkgZG9lc24gbmVlZCB0byB3b3JyeSBhYm91dCBlbGVjdGlvbnMgYW5kIHRoZWlyIGNvbnRyb2wgb2YgdGhlIG1lZGlhIHdpbGwgbWFrZSBpdCBzbyB0aGV5IGNhbiBjb252aW5jZSB0aGUgY2l0aXplbnMgdGhhdCB0aGVpciBwcm9ibGVtcyBhcmUgYmVjYXVzZSBvZiB0aGUgVVMgYW5kIG5vdCB0aGUgY29tbXVuaXN0IGdvdmVybm1lbnQuTWVhbndoaWxlLCB0aGV5IGNhbGxlZCBUcnVtcCBibHVmZiBhYm91dCBpbmNyZWFzaW5nIHRoZSB0YXJpZmZzLiAKVGhlIHNvbmcgZGlkIHJlYWNoIDEgb24gc29tZSByZWdpb25hbCBjaGFydHMuIApQb2xpY2UgdmFucyBodXJ0bGVkIHBhc3QgYXQgaGlnaCBzcGVlZCBhbmQgc2lyZW5zIHJvc2Ugc3RlYWRpbHkgaW4gcGl0Y2guIEF0IG9uY2UsIHRoZSBhdG1vc3BoZXJlIGluIHRoZSBjaXR5IHRyYW5zZm9ybWVkIGZyb20gc3ViZHVlZCB0byB0ZW5zZSBhbmQgYWdpdGF0ZWQuIE91ciByZXNlcnZlIGZpbmFsbHkgYnJva2UgYW5kIGJyYXZlIGZhY2VzIGNvbnRvcnRlZCB3aXRoIHRlYXJzLgpTb21lIHdobyd2ZSBqdW5rZWQgc2hhbXBvbyB1c2Ugb25seSBob3Qgd2F0ZXIgdG8gcmluc2UgdGhlIGhhaXIuIApJIHRhbGtpbmcgYWJvdXQgdGhlIGhhdGUgbmluamEgZ2V0cyBiZWluZyB1bndhcnJhbnRlZCBpbiBteSBvcGluaW9uLiAKQ29tZSB3aXRoIG1lLiBXZSdyZSBvbiBvbmUgcGF0aC4gCkkgd291bGQsIGFuZCBhbSBjdXJyZW50bHkgZG9pbmcgcmVzZWFyY2ggdG8gY2hvb3NlIG9uZS4gRnVydGhlcm1vcmUsIHdlIHNob3VsZCBhbGwgcHJvYmFibHkgY29uc2lkZXIgaXQuIDgwJSBvZiB0aGUgaHVtYW4gcG9wdWxhdGlvbiBlYXRzIGluc2VjdHMgYXMgYSByZWd1bGFyIHBhcnQgb2YgdGhlaXIgZGlldCBTb3VyY2UuIFNvIHRoZSBhbnN3ZXIgdG8gd2hvIGRvZXMgaXQgaXMgbW9zdCBwZW9wbGUgZWF0IGJ1Z3MsIGp1c3QgbWF5YmUgbm90IHRocm91Z2ggYSBwcm90ZWluIHNoYWtlLiBFdmVuIHRoZSBtaW5vcml0eSBvZiB1cyB3aG8gZG9uIHB1cnBvc2VseSBlYXQgaW5zZWN0cyBhcmUgY29uc3VtaW5nIGEgbG90IG9mIGluc2VjdHMgdGhhdCBhcmUgYWxsb3dhYmxlIHdpdGhpbiBvdXIgZm9vZCBwcm9kdWN0aW9uLgpJIGFsc28gc2VlbiBzb21lIG9mIHRoZSBwdWJsaWMgZGFuY2UgcGVyZm9ybWFuY2VzIGF0IFlhc2FrYSBTaHJpbmUgZm9yIHRoZSBIaWdhc2hpeWFtYSBIYW5hdG9yb3UuIApJbiBmYWN0LCB0aGUgb2ZmZW5zZSBvZiB0aHJlYXRlbmluZyB3aXRuZXNzZXMgYnkgcGh5c2ljYWwgaGFybSBpcyBhZGRyZXNzZWQgYnkgYSBzZXBhcmF0ZSBzdWJzZWN0aW9uLCAgMTUxMihhKS4gSWQuIApIZSBkb2VzIGFkbWl0IHRvIGdldHRpbmcgdGhpbmdzIHdyb25nLCBkZXNwaXRlIGhpcyBwZWRpZ3JlZS4gCkV4cG9ydHMgd2VyZSBkb3duIDMuOCBwZXIgY2VudCB0byAkNDYuMyBiaWxsaW9uIGluIERlY2VtYmVyLgo1IGRheXMgYWdvQVNFViBUSE0nREVOIFRSSyBaWUFGRVRBbGlhYWxsYXJuIGdubG5kZSB0YWh0IGt1cmFuIEFsaWFhIEJlbGVkaXllc2kgU2FuYXRldmkgKEFTRVYpIFRyayBIYWxrIE16aWkgKFRITSkgS29yb3N1IEJhaGFyIEtvbnNlcmkgaWxlIHRyayBzZXZlcmxlcmluIGthcnNuYSBrdC4gCkdldCByZWRkaXQgcHJlbWl1bVRoaXMgU3VicmVkZGl0IGlzIGRlc2lnbmVkIGZvciB0aGUgbmV3IENhbGwgb2YgRHV0eTogQmxhY2sgT3BzIDQgQmF0dGxlIFJveWFsZSwgQmxhY2tvdXQuIEFueXRoaW5nIHRoYXQgaXMgbm90IHdpbGwgYmUgcmVtb3ZlZCAoSGFzIHRvIGhhdmUgc29tZXRoaW5nIHRvIGRvIHdpdGggQmxhY2tvdXQsIHNtYWxsIHJlZmVyZW5jZXMgdG8gb3RoZXIgZ2FtZXMgaXMgYWxsb3dlZCBidXQgc3RheSBvbiB0b3BpYykgV2Ugd2FudCB0aGlzIFN1YnJlZGRpdCB0byBmZWVsIGFzIHdlbGNvbWUgYXMgcG9zc2libGUsIGFuZCBpZiB0aGVyZSBpcyBhbnkgb3RoZXIgd2F5IHRvIGhlbHAgdXMgcGxlYXNlIHNlbmQgdXMgaW5mbywgdXNpbmcgdGhlIE1lc3NhZ2UgTW9kZXJhdG9ycyBidXR0b24uIApVbnRpbCB0aGF0IHZlcnkgc2Vjb25kIEkgc2F3IGhlci4gSnVzdCBsaWtlIHlvdSwgaXQgZmxpcHBlZCBpbiBhIHNwbGl0IHNlY29uZC4gSSBoYXZlIG5ldmVyIGV4cGVyaWVuY2VkIGFuIG92ZXIgZmxvd2luZyBmZWVsaW5nIG9mIGxvdmUuIFB1cmUgYWJzb2x1dGUgbG92ZSBzbWFja2VkIG1lIHJpZ2h0IGluIHRoZSBmYWNlISBJIGxvb2tlZCBhdCBteSBodXNiYW5kIGFuZCBzYWlkICJJIGxpa2UgaGVyLCB3ZSBhcmUga2VlcGluZyBoZXIiIG5vdCB0aGF0IG5vdCBrZWVwaW5nIGhlciB3YXMgZXZlciBhbiBvcHRpb24uCkxhc2FnbmFtbSB1CldoZW4gcHJpdmF0ZSBjaGF0dGluZyB5b3UgY2FuIHVwbG9hZCBpbWFnZXMgb25lIG9uIG9uZSB3aXRoIHNvbWVvbmUgeW91IGtub3cgb3IgaWYgeW91ciBjaGF0dGluZyB3aXRoIHN0cmFuZ2Vycy5GcmVlIE9ubGluZSBDaGF0IEZvciBTaW5nbGVzLCBGcmVlIENoYXQgUm9vbXMsIERhdGluZyBDaGF0cm9vbXMsIENoYXQgU2l0ZUNsaWNraW5nIG9uIGFnYWluIHdpbGwgdGFrZSB5b3VyIGJhY2sgdG8gY2hhdC4gClRydWUgZmFjdCB3ZSBoYXZlIGEgcmFjaWFsIGJpYXMgd2hlbiBpdCBjb21lcyB0byBBbWVyaWNhbiBwb2xpY2luZy4gQmxhY2sgcGVvcGxlKSBidXQgaW4gcmVhbGl0eSB0aGV5IGFyZSBqdXN0IG1vcmUgcG9saWNlZC4gClRhc3R5dGFzdHlhdm9jYWRvIHUKUGVvcGxlIGxpa2UgdGhlIERhbGFpIExhbWEgdW5kZXJzdGFuZCBjb21wYXNzaW9uLiAKQSBjbGVhciBtYWpvcml0eSBvZiBDYW5hZGlhbnMsIG9yIDU1IHBlciBjZW50LCBjb250aW51ZSB0byBzYXkgaGlnaGVyIGJvcnJvd2luZyBjb3N0cyBhcmUgZWl0aGVyIGhhdmluZyBubyBpbXBhY3QsIG9yIGEgcG9zaXRpdmUgb25lLCBvbiB0aGVpciBwZXJzb25hbCBzcGVuZGluZywgbGl0dGxlIGNoYW5nZWQgZnJvbSA1NyBwZXIgY2VudCBpbiBPY3RvYmVyLCBhY2NvcmRpbmcgdG8gYSBzdXJ2ZXkgYnkgTmFub3MgUmVzZWFyY2guIFRoZSBzaGFyZSBvZiB0aG9zZSB3aG8gcmVwb3J0ZWQgbmVnYXRpdmUgb3Igc29tZXdoYXQgbmVnYXRpdmUgZWZmZWN0cyB3YXMgNDEgcGVyIGNlbnQsIHVuY2hhbmdlZCBmcm9tIHRoZSBwcmV2aW91cyBzdXJ2ZXkuClNvbWVvbmUgdmVyeSBkZWFyIHRvIG1lIGFjdHVhbGx5IHdhcyB1bmZvcnR1bmF0ZSBlbm91Z2ggdG8gZW5kIHVwIHdpdGggYSBmZWxvbnkuIEhlIGRpZCBmYXN0IGZvb2QgZm9yIGEgd2hpbGUgYW5kIHRoZW4gZ290IGludG8gbWFya2V0aW5nIGZyb20gdGhlIGludGVybmV0LiBCYXNpY2FsbHkgc2VsbGluZyBwcm9kdWN0cyBmb3IgY2VydGFpbiB2ZW5kb3JzIGZvciBhIHNldCBjb21taXNzaW9uLiBJdCdzIHNsaWdodGx5IGRpZmZpY3VsdCB0byBnZXQgaW50bywgYnV0IGl0IHBheXMgb2ZmIGluIHRoZSBlbmQuIFRoYXQncyB3aGVyZSBXaWxsaWFtIHN0YXJ0ZWQgYW5kIGhlJ3MgcHJldHR5IHdlbGwgb2ZmIGF0IHRoZSBtb21lbnQuIFRoZXJlJ3MgYSB0b24gdG8gbGVhcm4gc28gZG9uJ3QgZ2l2ZSB1cCEgKEZ1bGwgQW5zd2VyKQpNeSBnb2QsIHRoZSBlbXBhdGh5IHlvdSBmZWx0IGZvciBoaW0uIiBHYWZmaWdhbiB1c2VkIHRvIHdvcmsgaW4gYWR2ZXJ0aXNpbmcsIGJ1dCBhZnRlciBtb3ZpbmcgdG8gTmV3IFlvcmsgdG8gZnVydGhlciBoaXMgY2FyZWVyLCBoZSBwdXJzdWVkIGhpcyBkcmVhbSBvZiBiZWNvbWluZyBhIHN0YW5kdXAgY29taWMgYW5kIGFjdG9yIGluc3RlYWQuIEZyaWRheSBhbmQgU2F0dXJkYXkuIApGcm9tIHRoZSB0b3Agb2YgZmxvb3JzIDI0LCAyNiwgMjcgYW5zIDMyIHRoZXNlIGNvc3kgNzAgbXNxLiAKV2hhdCB0aGV5IGhhdmUgaXMgc29tZXRoaW5nIHNpbXBsZSwgYW5kIEplbm55IGRvZXNuIHRoaW5rIHRoYXQgY291bGQgYmUgcmVhbC4uIApUaGluayBJIG9ubHkgcGlja2VkIExhbGxhbmEgYW5kIElGIEJhdHMgYXMgcGxheWVyIHJld2FyZHMgYW5kIGJvdGggb2YgdGhlbSBlbmRlZCB1cCBpbiBhbiBTQkMgcmF0aGVyIHNvb25lciB0aGFuIGxhdGVyLgpJIG9ubHkgd2FzIGFibGUgdG8gZG8gYWJvdXQgdHdvIHN5cmluZ2VzIHdvcnRoIHVudGlsIEkgZmVsbCBvdXQgYW5kIHdhcyB1bmNvbmNpb3VzLiBJdCB3YXNuIGVub3VnaCB0byBkaWUsIGp1c3QgcGFzcyBvdXQuIApBIGJhcmJlciBzaG9wIHNldHMgaXQgcHJpY2VzLiBUaGV5IHNheSwgcGF5IG1lIFggbW9uZXkgdG8gY3V0IHlvdXIgaGFpci4gSSBzYXkgb2suIFRoZXkgY3V0IG15IGhhaXIuIFNvIHdoeSBhbSBJIGV4cGVjdGVkIHRvIHRpcCB0aGVtPyBUaGV5IGxpdGVyYWxseSBkaWQgdGhlaXIgam9iLgpBZHZlcnNpdHkgZ2l2ZXMgYmlydGggdG8gY291cmFnZS4gCkN1c3RvbSBUYXR0b28gRGVzaWduIGxldHMgY29uc3VtZXJzIGNyZWF0ZSBhIG9uZSBvZiBhIGtpbmQgZGVzaWduIHdpdGggb25lIG9mIGN1cnJlbnRseSAyMDAgZnJlZWxhbmNlIHByb2Zlc3Npb25hbCBncmFwaGljIGFydGlzdHMgYW5kIGRlc2lnbmVycy4gQSB2aXJ0dWFsIGFzc2lzdGFudCByZXNwb25kcyB0byBhbGwgY2xpZW50cyBhbmQgd2Fsa3MgdGhlbSB0aHJvdWdoIHRoZSBwcm9jZXNzLiBEZXNpZ25zIGFyZSBwcmljZWQgYnkgTXIuIFJvbGxlciBhbmQgaGlzIHRlYW0gYmFzZWQgb24gY29tcGxleGl0eSBhbmQgc2l6ZSwgd2l0aCBhbiBhdmVyYWdlIHByaWNlIG9mICQxNTAuIE9uY2UgdGVybXMgYXJlIGFncmVlZCBvbiwgdGhlIGNvbnN1bWVyIHBheXMgaGFsZiB0aGUgY29zdCB1cCBmcm9udC4KKElmIHlvdSBsaXZlIG5lYXIgdGhlIGNvYXN0IGl0IHNpbWlsYXIgdG8gdGhhdCBicmVlemUgZnJvbSB0aGUgc2VhLikgQWxzbyB0aGVyZSBubyByZWZ1Z2UgaW5zaWRlIGJlY2F1c2UgYnVpbGRpbmcgaW5zdWxhdGlvbiBhbmQgaGVhdGluZyBhcmUgYW1pc3MuIFlvdSB3aWxsIHN1cmVseSBuZWVkIHRvIHdyYXAgdXAgbW9yZSBvZnRlbiB0aGFuIGhvbWUuIElmIHlvdSB2aXNpdGluZyBkdXJpbmcgd2ludGVyLi4gCkhlciBhdXRvIHNob3VsZCBkbyAlaHAgYmFzZWQgZGFtYWdlLiBUaGV5IHNob3VsZCBqdXN0IGd1dCBoZXIgdWx0IGFueXdheSBpdHMgdXNlbGVzcy4gUGVyaGFwcyBzb21ldGhpbmcgbGlrZSB0cmFuc2Zvcm1pbmcgaW50byBhIGdpYW50IGFuZ2VsIGZvciB2aXN1YWxzIG9ubHkgd2l0aCBubyByZWFsIGJlbmVmaXQgdG8gaGVyIGtpdCBhbmQgZGVzaWduLi4gClRoZXJlIHdhcyBhIENhbmFkaWFuIHN0dWR5IGRvbmUgaW4gMjAxMiB0aGF0IHNhaWQgdGhlIGRpcmVjdCBoZWFsdGhjYXJlIGNvc3RzIGluY3VycmVkIGZyb20gc21va2luZyBhcmUganVzdCBvdmVyICQ2Qi95ZWFyLlRoYXQgYWxzbyBkb2VzbiBhY2NvdW50IGZvciBpbmNpZGVudGFsIGNvc3RzLCBvciBsb3N0IHJldmVudWVzIGJlY2F1c2UgYSBmdWxsIHF1YXJ0ZXIgb2YgcGVvcGxlIHRoYXQgYXJlIG1lZGljYWxseSBhZmZlY3RlZCBmcm9tIHNtb2tpbmcgaW4gQ2FuYWRhIGFyZSBwcmltZSBlbXBsb3lhYmxlIGFnZSwgc28gdGhlcmUgYSB3aG9sZSBob3N0IG9mIGxvc3QgZWFybmluZyBwb3RlbnRpYWwgdGhlcmUgdG9vLnRoZSBlbnRpcmUgaWRlYSBvZiBpdCBiZWluZyBjaGVhcGVyIHJlbGllcyBvbiBwZW9wbGUgZHlpbmcgYmVmb3JlIHRoZXkgb3RoZXJ3aXNlIHJlYXNvbmFibHkgd291bGQgYW5kIHRoYXQgc3VjaCBhbiB1Z2x5IGFuZCBjeW5pY2FsIHRoaW5nIHRvIGhvcGUgZm9yLkp1c3Qgb3V0c2lkZSBvZiBFZG1vbnRvbiB0aGVyZSBOZXcgSG9yaXpvbnMgQ2hhcnRlciBTY2hvb2wgd2hpY2ggaXMgYSBzY2hvb2wgZm9yIGdpZnRlZCBsZWFybmVycyBzbyB0aGV5IGNhbiBmb3N0ZXIgaW5kZXBlbmRlbnQgbGVhcm5pbmcgYW5kIGFjYWRlbWljcyBpbiBhbiBlbnZpcm9ubWVudCBidWlsdCB0byBzdXBwb3J0IHRoYXQsIGJlY2F1c2UgaW4gcmVndWxhciBwdWJsaWMgcHJvZ3JhbXMgdGhlIGxlYXJuZXJzIHRoYXQgZXhjZWwgdGVuZCB0byBnZXQgZm9yZ290dGVuIGJlY2F1c2UgdGVhY2hlcnMgc2ltcGx5IGRvIG5vdCBoYXZlIHRoZSBzcGFyZSB0aW1lLCBlc3BlY2lhbGx5IGFmdGVyIGRlYWxpbmcgd2l0aCBpbmRpdmlkdWFscyB3aXRoIGhpZ2hlciBsZWFybmluZyBuZWVkcyBpbiBsYXJnZSBjbGFzcyBzaXplcy5BbGwgY2hhcnRlciBzY2hvb2xzIGluIEFsYmVydGEgbXVzdCBiZSBwdWJsaWMsIGhhdmUgdG8gYmUgaW5kaXZpZHVhbGx5IGFwcHJvdmVkIGJ5IHRoZSBFZHVjYXRpb24gbWluaXN0ZXIgYW5kIGFyZSBzdGlsbCBhY2NvdW50YWJsZSB0byB0ZWFjaCB0aGUgQWxiZXJ0YSBFZHVjYXRpb24gY3VycmljdWx1bS5TbyB5ZWFoLCBwcml2YXRlIHJlbGlnaW91cyBzY2hvb2xzIGJhZCwgYnV0IENoYXJ0ZXIgc2Nob29scyBpbiBBbGJlcnRhIGFyZSBzb21ldGhpbmcgZW50aXJlbHkgZGlmZmVyZW50IHRoYW4gd2hhdCBpbiB0aGUgc3RhdGVzIGFuZCBtb3N0IEFsYmVydGFucyBkb24gdW5kZXJzdGFuZCB0aGVtLk1hZ3BpZUJ1cmVhdSAgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0NoYXJ0ZXIgc2Nob29saW5nIHRvIGZpbGwgcGFydGljdWxhciBuZWVkcyBpcyBwZXJmZWN0bHkgcmVhc29uYWJsZS4gCkl0IGlzIGFsd2F5cyBpbmRlcGVuZGVudCBvZiBvdGhlciBlbmdpbmVlcmluZyBtb2RpZmllcnMuIApNb3N0IGltcG9ydGFudCwgd2UgaGF2ZSBsZWFybmVkIHRoYXQgcGF0aWVudHMgZmFyZSBiZXR0ZXIgd2hlbiB0aGV5IHRyYW5zaXRpb24gdG8gbW9yZSBhY3RpdmUgY2FyZSAoaW5jbHVkaW5nIGV4ZXJjaXNlKSBhcyBzb29uIGFzIHBvc3NpYmxlLiBXZSBoYXZlIGxlYXJuZWQgdGhhdCB0aGVzZSBwcm9ibGVtcyBhcmUgdmVyeSByZWFsIGFuZCB2ZXJ5IGNvc3RseSB0byBhbGwgcGFydGllcyBpbnZvbHZlZC4KSXQncyBjYWxsZWQgYSBUdXJraXNoIFRvZmFzIFNhaGluLiBOZXZlciBoZWFyZCBvZiBpdD8gSG93IHdvdWxkIEkgZGVzY3JpYmUgaXR3ZWxsLCBpdCdzIG9sZCBhbmQgc2xvdy4gCkxvdWlzIG1hbmFnZWQgdG8gd2luIHRoZSBXb3JsZCBTZXJpZXMgd2l0aG91dCBNb3JyaXMgRVJBIChJIGV4YWdnZXJhdGUsIHNsaWdodGx5KS4gSW1hZ2luZS4oSWYgaXQgd2FzIHVwIHRvIFRvbnksIEkgdGhpbmsgaGUgb2ZmZXIgTWFyayBNY0d3aXJlIGEgbGlmZXRpbWUgJDMwMCBtaWxsaW9uIGRlYWwsIGp1c3QgdG8gcmVtYWluIG5leHQgdG8gaGlzIEJyYXdueSBTcGVjaWFsbmVzcy4pQm9uZHMgYXBwYXJlbnRseSBoYWQgc2V2ZXJhbCB0YWxrcyB3aXRoaGlzIG9sZCBtYW5hZ2VyIEppbSBMZXlsYW5kLHdobywgYWdhaW4sIGRvZXNuIGhhdmUgcGVyc29ubmVsIHBvd2VyIGluIERldHJvaXQgYW5kIGp1c3QgYWRkZWQgR2FyeVNoZWZmaWVsZCBhbmQgcmUgc2lnbmVkIFNlYW4gQ2FzZXkgYW55d2F5LlNvIHdoYXQgZGlkIEJCYWNjb21wbGlzaD8gTm90aGluZywgaWYgeW91IGtub3cgcG9rZXIuIEhldGlwcGVkdGhhdCBoaXMgaGFuZCBpcyB3ZWFrIGJ5IGdvaW5nIGFsbCBpbiB3aGVuIGFsbCBpbiB3YXMgbm90IHRoZSBwbGF5IHBva2VyIHRyYW5zcGFyZW50IGJsdWZmLklmIGFueXRoaW5nLCBoZSB3b3JzZW5lZCBoaXMgcG9zaXRpb24uIApGb3IgYXdoaWxlIGl0IHdhcyAiZGVleiBudXRzISIgd2hpY2ggSSBzdGlsbCBkb24gdW5kZXJzdGFuZC4gCllvdSBsaXZlZCB3aGVyZSB0aGUgbm9uIFdlc3Rlcm4gZm9yZWlnbmVycyB3ZXJlbiBZb3VyIGNvbW1lbnQgc3Vja2VkLiBUaGUgc3RhdHMgZG9uIGxpZS4gVGVsbCBtZSBhZ2FpbiBob3cgcHJhY3RpY2FsbHkgYWxsIGZvcmVpZ25lcnMgYXJlIFdlc3Rlcm5lcnMgb3Igd2hhdGV2ZXIuIFN1Y2ggYSBsb3VkIG9mIGdhcmJhZ2UuIApBdCBsZWFzdCB5b3VyIHRhc3RlIGlzIGNvbnNpc3RlbnQuIFJlZ2FyZGxlc3MsIHRoZSBwb2ludCBpcyBub3QgdGhhdCB5b3UgaGF2ZSB0byBsaWtlIE9vVCwgYnV0IG1vcmVvdmVyIHRoYXQgdGhlIGdhbWUgaXMgc3RpbGwgYSBaZWxkYSBnYW1lIGRlc3BpdGUgdGhlIHJldmlzaW9uaW5nIG9mIG5lYXJseSBldmVyeSBhc3BlY3Qgb2YgdmlzdWFscywgc291bmQsIGFuZCBnYW1lcGxheS4gSXQgZXBvdXNlZCBhIG5ldyBzdGFuZGFyZCBvZiBaZWxkYSAgIG9uZSB0aGF0LCBmb3IgdGhlIG1vc3QgcGFydCBvdXRzaWRlIG9mIG1vYmlsZSBjb25zb2xlcywgbWFpbnRhaW5lZCBjb25zaXN0ZW50IHRocm91Z2hvdXQgdGhlIGZyYW5jaGlzZS4gCjIpIFJlZ3VsYXIuIFBlb3BsZSBkb2luZyBhIHJlZ3VsYXIgYnVsayBvZnRlbiBjb25zdW1lIHN0ZWFrLCBjaGlja2VuIGJyZWFzdCwgdHVuYSwgbWlsaywgeW9ndXJ0LCBlZ2dzLCBwaXp6YXMgKG5vdCB0b28gZ3JlYXN5KSwgd2hvbGUgb3IgYnJvd24gYnJlYWQsIGJlYW5zLCBmcnVpdHMgYW5kIG90aGVyIGZvb2RzLiBUaGlzIHR5cGUgb2YgYnVsayBpcyB1c3VhbGx5IHByZWZlcnJlZCBieSB0aGUgYXZlcmFnZSBwZXJzb24gd2l0aCB0aGUgYXZlcmFnZSBtZXRhYm9saXNtLgpBdXRyZSBqb3VybmUsIGF1dHJlcyBhbGxnYXRpb25zLiBMIEhhcnZleSBXZWluc3RlaW4gY29udGludWUgZGUgcHJlbmRyZSBkZSBsIGFsb3JzIHF1IHF1YXJhbnRhaW5lIGRlIGZlbW1lcyBvbnQgbWFpbnRlbmFudCBhZmZpcm0gcHVibGlxdWVtZW50IGF2b2lyIHQgYWdyZXNzZXMgb3UgaGFyY2VsZXMgcGFyIGxlIHByb2R1Y3RldXIgYW1yaWNhaW4uIFF1aSBzb250IGVsbGVzPwpCdXQgaGV5LCBhdCBsZWFzdCBDb3JleSBnb3QgdG8gcGxheSBIYWxvLiAKTXkgc3ViY29uc2Npb3VzbmVzcyBraWNrZWQgaW50byBnZWFyIGV2ZW4gdGhvdWdoIEkgd2FzbiBldmVuIHRyeWluZyB0byBnbyB0byBzbGVlcC4gCk5vdywgYXMgY29uc3RydWN0aW9uIGRyYXdzIHRvIGEgY2xvc2UgYW5kIHRoZSBjb21wYW55IHByZXBhcmVzIHRvIG1vdmUgaW4sIHRoZXJlJ3Mgc29tZSBldmlkZW5jZSB0aGF0IGl0cyBleGVjcyBhcmUgbGlzdGVuaW5nIHRvIHJlc2lkZW50cyB3b3JyaWVkIGFib3V0IGhvdXNpbmcgc2hvcnRhZ2VzIGFuZCB0cmFmZmljLi4gCkd1dCBzbywgZGVubiBkZXIga2xlaW5lIFN0cmFuZCBQbGF5YSBFbCBGYXJvIGdsZWljaCBuZWJlbiBkZW4gU2FsaW5lbiBnZWhydCB3ZWdlbiBzZWluZXIgZ3JvYmVuIEtpZXNlbCB1bmQgZGVyIG1pdHVudGVyIHN0YXJrZW4gU3RybXVuZyBlaGVyIHp1IGRlbiB3ZW5pZ2VyIGJlbGllYnRlbiBCYWRlZ2VsZWdlbmhlaXRlbi4gCkJlc2lkZXMsIGhhdmluZyBhIGJhYnkgdG8gcmFpc2UgYW5kIGRvdGUgb24gd2FzIGFsd2F5cyBTZXJlbmEgZHJlYW0sIG5vdCBGcmVkLiAKVGhlcmUgYWxzbyB0aGUgZmFjdCB0aGF0IHBlb3BsZSB0ZXRoZXJpbmcgb24gdGhlIGVkZ2Ugb2YgYnJlYWtpbmcgdXAgd2l0aCB0aGVpciBzcG91c2Ugb3Igd2hhdGV2ZXIsIGFyZSBpbiBhIHZ1bG5lcmFibGUgYW5kIHN1Z2dlc3RpdmUgcG9zaXRpb24sIG1vcmUgbGlrZWx5IHRvIGJlIHN3YXllZCBieSB0aGUgb3V0cG91cmluZyBvZiBvZnRlbiB2ZXJ5IHNpbWlsYXIgYWR2aWNlLgpCdXQgaWYgeW91IGxpc3QgYWxsIHRoZSBkb2N1bWVudGVkIHN5c3RlbWF0aWMgcmFwZXMsIHdhcnMsIGZhbWluZXMsIGdlbm9jaWRlcywgYmxhaCBibGFoIGJsYWggZXVyb3BlYW5zIGZ1Y2tpbmcgdGFrZSB0aGUgY2FrZS4gClRIQVQgYWxyZWFkeSBoYXBwZW5pbmcuIEFueXRoaW5nIGRpc2N1c3NlZCB3aXRoaW4gdGhlIDEwIG1lbWJlcnMgb2YgQXNlYW4sIHlvdSBjYW4gYmUgc3VyZSB0aGUgQ2hpbmVzZSBlbWJhc3NpZXMgaW4gdGhyZWUgY291bnRyaWVzIHdpbGwgYmUgaW5mb3JtZWQ6IExhb3MsIE15YW5tYXIgYW5kIENhbWJvZGlhICAgYW5kIHRoZXkga25vdyBleGFjdGx5IHRoZSBwb3NpdGlvbiBvZiBlYWNoIEFzZWFuIGNvdW50cnkuIFdoYXQgaXMgaXQgeW91IHdhbnQ/IEZhY2lsaXRpZXMgZm9yIGEgc3VtbWl0IGluIExhb3M/IEkgYnVpbGQgeW91IGEgY29uZmVyZW5jZSBoYWxsLCBJIGJ1aWxkIHlvdSBhIGhvdGVsLCBJIHByb3ZpZGUgeW91IHdpdGggdGhlIGZhY2lsaXRpZXMuIFRoZSB3YXkgdGhleSBleGVyY2lzZSBzb2Z0IHBvd2VyIGdvZXMgYmFjayB0byBhIHZlcnkgdHJhZGl0aW9uYWwgQ2hpbmVzZSB3YXkuCkluIHBva2VyIGRvZXMgMyBwYWlyIGJlYXQgZnVsbCBob3VzZQpJIGdvdCBhIG5ldyBhcHBsaWNhbnQgdG9kYXkgdGhhdCBjbGFpbXMgc2hlIGlzIGEgcmVjZW50bHkgZGl2b3JjZWQgbW9tIHdpdGggdHdvIGtpZHMuIFNoZSBpcyBhIHNjaG9vbCB0ZWFjaGVyIGJ1dCBzYWxhcnkgZnJvbSB0ZWFjaGluZyBhbG9uZSBpcyBub3QgZW5vdWdoIHRvIHBhc3MgaW5jb21lIGNyaXRlcmlhLCBidXQgSWYgSSBhZGQgdGhlIGFtb3VudCBvZiBjaGlsZCBzdXBwb3J0IHNoZSBnZXRzIGZyb20gaGVyIGV4IGh1c2JhbmQsIHRoZW4gc2hlIHF1YWxpZmllcywgdGhlIHF1ZXN0aW9uIGlzIGhvdyBjYW4gSSB2ZXJpZnkgdGhlIGNoaWxkIHN1cHBvcnQgaW5jb21lPy4gCldoZW4gSSBsaXZlZCBpbiBBcml6b25hLCBsZWF2aW5nIHRoZSB3aW5kb3dzIG9wZW4gYW5kIGFpcmluZyBvdXQgZGlkIHdvbmRlcnMuIEkgbm93IGluIG9oIHNvIGh1bWlkIFRleGFzIGFuZCBvcGVuaW5nIHVwIHRoZSB3aW5kb3dzIHRvIGFpciBvdXQgaXMgYSBubyBnby4gTm93IHRoYXQgeW91IG1lbnRpb24gaXQsIEkgaGF2ZSB6ZXJvIHBsYW50cyBpbiBteSBob3VzZS4gCkNocm9uaXF1ZSBkdSB0ZW1wcyBxdSdpbCBmYWl0CjQgcG9pbnRzICBzdWJtaXR0ZWQgMTcgaG91cnMgYWdvUmVmZXIgdG8gcHJldmlvdXMgY29tbWVudHMuIApBc2sgdGhlIHN0dWRlbnRzIHRvIHRlbGwgeW91IGhvdyB0byBmaWd1cmUgaXQgb3V0LiAKQmVjYXVzZSBpdCBhIGRpdmVyZ2VuY2UgYW5kIHNvbWV0aGluZyBjb21wbGV0ZWx5IG5ldy4uIApCZWNhdXNlIHRoZXkgd2VyZSB0ZW5lbWVudHMsIGFuZCBlc3NlbnRpYWxseSBjYXNoIGdyYWJzIGJ5IHdlYWx0aHkgUm9tYW5zLCB0aGV5IHdlcmUgZ2VuZXJhbGx5IGJ1aWx0IG9mIHBseXdvb2QgYW5kIHdlcmUgc3VzY2VwdGlibGUgdG8gY29sbGFwc2UgYW5kL29yIGZpcmUuIApBcmUgYSBsb3Qgb2Ygd29tZW4gbG9jYWxseSBJIGRvbiB0aGluayBhcmUgYXdhcmUgeWV0IG9mIHRoZSBwcm9ncmFtLCBzYWlkIEx1dHosIHdobyBjYW1lIHRvIFdpbmRzb3IgaW4gU2VwdC4gMjAxNi4gd2FudCB0byBsZXQgcGVvcGxlIGtub3cgd2UgaGVyZS4gaXRzIGZpcnN0IHllYXIsIHRoZSBob3NwaXRhbCBhZ3JlZWQgdG8gZnVuZCBhdCBsZWFzdCAxNSBwYXRpZW50cy4gVGhlIGR1byBlc3RpbWF0ZXMgdGhleSBoYXZlIGhlbHBlZCBiZXR3ZWVuIDE1IGFuZCAyMCB3b21lbiBhbHJlYWR5LgpNeSBNSUwgaXMgdGhlIHNhbWUuIEknbSB2ZWdldGFyaWFuIGFuZCBhbHNvIGhhdmUgYSBkYWlyeSBzZW5zaXRpdml0eSBhbmQgdHJ5IG5vdCB0byBlYXQgY2hlZXNlIG9yIG1pbGsuIAoiT2YgY291cnNlIHRoZXJlJ3MgYSBsb3Qgb2YgZW1vdGlvbnMgdGhhdCBnbyB0aHJvdWdoIHlvdSwgYnV0IGF0IHRoZSBzYW1lIHRpbWUgSSBjYW4gb25seSBjb250cm9sIHdoYXQgSSBjYW4gY29udHJvbC4gSSBqdXN0IHRyaWVkIHRvIGJlIG9wZW4gYW5kIGhvbmVzdCB3aXRoIG15IGRlY2lzaW9uLiBTbyBhdCB0aGUgZW5kIG9mIHRoZSBkYXksIGl0IGlzIHdoYXQgaXQgaXMuIApDb25zZW50IGZvcm1zIGFyZSBkb3plbnMgb2YgcGFnZXMgbG9uZywgb2Z0ZW4gY29uZnVzZSBwYXRpZW50cywgYW5kIG9uIG9jY2FzaW9ucyBjYW4gc2NhcmUgdGhlbS4gVGhlIGltcGFjdCBvZiB0aGlzIGdvZXMgdW4gcmVjb2duaXNlZCwgYnV0IGFueSBjaGFsbGVuZ2UgdG8gdGhpcyBwcm9jZXNzIGlzIHJlZ2FyZGVkIGFzIHRhbnRhbW91bnQgdG8gc2VyaW91cyBwcm9mZXNzaW9uYWwgbWlzY29uZHVjdC4gCk5ldW1pd2FraW4gZW1wZmllaGx0IGZyIGRpZSBpbm5lcmUgQW53ZW5kdW5nIGhhbmRlbHNibGljaGUgMyVpZ2UgSDJPMiAgIExzdW5nLCBiZWdpbm5lbmQgbWl0IDIgMyBUcm9wZmVuIGF1ZiBlaW5lbiBFc3NsZmZlbCBXYXNzZXIsIDMgbWFsIHRnbGljaC4gCkVkaXQ6IGZpeGluZyBzb21lIHJlbW5hbnRzIG9mIHJld29yZGluZywgdGhhbmtzIHUvYm9ib2tlZW4gZm9yIHBvaW50aW5nIG91dCB0aGUgZXJyb3IKSWYsIHRoYW5rcyB0byBwb29yIGRpZXQsIG1lZGljYXRpb24sIGhvcm1vbmFsIGNoYW5nZXMgb3IgZGFtYWdlIGZyb20gY2hlbWljYWwgaGFpciBwcm9jZXNzZXMsIHlvdSdyZSBleHBlcmllbmNpbmcgdGhpbm5pbmcgaGFpciwgZGFuZHJ1ZmYgb3Igb3RoZXIgYW5ub3lpbmcgYnV0IG5vbm1lZGljYWwgc2NhbHAgY29uZGl0aW9ucywgeW91IG1pZ2h0IHdhbnQgdG8gY29uc2lkZXIgYSBwcm9mZXNzaW9uYWwgc2NhbHAgdHJlYXRtZW50LiBGb3IgZXhhbXBsZSwgTmlveGluIHRoZXJhcHkgcmV2aXRhbGl6ZXMgaGFpciBmb2xsaWNsZXMgYW5kIHByb21vdGVzIGdyb3d0aCwgTW9yb2NjYW4gb2lsIHRyZWF0bWVudCBzdHJlbmd0aGVucyBoYWlyIGFuZCByZXN0b3JlcyBzaGluZSwgYW5kIHRoZXJlIGFyZSBhbHNvIHRyZWF0bWVudHMgZm9yIGRyeSBzY2FscCBbc291cmNlOiBSb29rc10uIFNpbWlsYXIgdGhlcmFwaWVzIGNhbiBiZSBmb3VuZCBhdCBtb3N0IHByb2Zlc3Npb25hbCBzYWxvbnMsIGFuZCBwcm9mZXNzaW9uYWwgaGFpciBjYXJlIHByb2R1Y3RzIGxpa2UgRHJlbmNoIGFuZCBNb3JvY2NhbiBvaWwgY2FuIGFsc28gYmUgcHVyY2hhc2VkIG9ubGluZSBhbmQgdXNlZCBhdCBob21lLi4gCk1vc3RseSBmb29kIGlzIG5vdCBhIGNyaXRpY2FsIHJlc291cmNlIGFuZCBtb3N0IHBlb3BsZSB3b3VsZCBoYXZlIGxpdHRsZSB0cm91YmxlIG5vdCBlYXRpbmcgZm9yIGEgZGF5LldoeSB0YWtlIGEgcHJvdGFibGUgc2hlbHRlciBpZiB5b3Uga25vdyB5b3UgY2FuIHN0YXkgaW4gYSBodXQgb3Igc29tZXRoaW5nLiAKT25saW5lIHBva2VyIHRvdXJuYW1lbnRzIGFyZSB3b3J0aCBwbGF5aW5nCiJBbGwgc3Vic3RhbmNlcyBjb3ZlcmVkIHdlcmUgZGV0ZWN0ZWQgaW4gYSBudW1iZXIgb2YgYnJlYXRoIHNhbXBsZXMuIENvbnNpZGVyaW5nIHRoYXQgYnJlYXRoIHNhbXBsaW5nIHdhcyBvZnRlbiBkb25lIGFib3V0IDI0IGhvdXJzIGFmdGVyIGludGFrZSwgdGhlIGRldGVjdGlvbiByYXRlIHdhcyBjb25zaWRlcmVkIHRvIGJlIGhpZ2ggZm9yIG1vc3Qgc3Vic3RhbmNlcy4iLiAKVGhlbiBzaGUgd2VudCB0byBoZXIgcGFyZW50cyBob3VzZSwgd2hlcmUgc2hlIHNob3dlcmVkIGFuZCBjaGFuZ2VkIGludG8gaGVyIGNyZWFtIHN1aXQuIEluIGNvdXJ0LCBoZXIgbW90aGVyLCBTYW5kcmEsIHNheXMgc2hlIG5vdGljZWQgbm90aGluZyB1bnVzdWFsIGFib3V0IGhlciBiZWhhdmlvdXIgdGhhdCBhZnRlcm5vb24uIENvcm9uZXIgQWJlcm5ldGh5IHJlZ2lzdGVycyBoaXMgYW1hemVtZW50LiAKRE9NSU5BVEUgWU9VUiBEUkFGVDogVWx0aW1hdGUgQ2hlYXQgU2hlZXQKSSByZWZ1c2UgdG8gZ2V0IGEgc2lkZSBqb2IsIG91dCBvZiBwdXJlIHN0dWJib3JubmVzcyAoYW5kIHRoZSBmYWN0IG15IGpvYiBpcyBhY3R1YWxseSB2ZXJ5IHRpbWUgZGVtYW5kaW5nIHdpdGggdHJhdmVsIHNvIGl0IHdvdWxkIGJlIGhhcmQgdG8gd29yayBhcm91bmQgaXQpLiAKSnVzdCBzb21lIHJhbmRvbSB0b3VybmFtZW50LiBCZXR0aW5nIGh1bmRyZWRzIG9uIHRoZSBvdXRjb21lIG9mIHNpbmdsZSBnYW1lcywgb24gcGxheWVycyBJIGtub3cgbm90aGluZyBhYm91dC4gR2FtYmxpbmcgaXMgYSBtb3RoZXJmdWNrZXIuLiAKWW91IG5vdCBiZWNvbWUgcHJvZmVzc2lvbmFsIGpvdXJuYWxpc3QgeW91IGdvdCB0byBkbyBqb2IgYmV0dGVyLCBIZXh0YWxsIGFuZCBIYWtzdG9sIG5lZWQgMTAgeWVhcnMgc28gYWxsIHRoZXJlIGZsb3dlcnMgY2FuIGJsb29tIGl0IHRha2VzIGxvbmcgdGltZSB0byBibG9vbSBqdXN0IGxpa2UgdW5pdmVyc2UgdG9vay4gCldoaWxlIHlvdSBhcmUgcGVyZmVjdGx5IGp1c3RpZmllZCBpbiB3aXRoaG9sZGluZyB0aXBzIHdoZW4gdGhleSBrZWVwIHNjcmV3aW5nIHlvdXIgb3JkZXIgdXAsIHlvdSBkbyBvcmRlciBlbm91Z2ggdG8gYmUgYSByZWd1bGFyIGFuZCB3aGlsZSAxMCUgaXNuIHRlcnJpYmxlLCBpdCBub3QgZ29vZCBlaXRoZXIsIHNvIHRoZSBtb3JlIGV4cGVyaWVuY2VkIGRyaXZlcnMgbWF5IHNlZSB5b3VyIGluZm8gY29tZSB1cCBvbiB0aGUgc2NyZWVuIGFuZCBwYXNzIHlvdSBvZmYgb24gYSBuZXdlciBkcml2ZXIgdGhhdCBtb3JlIGxpa2VseSB0byBtYWtlIG1pc3Rha2VzLiBKdXN0IHNvbWUgcGVyc3BlY3RpdmUgZnJvbSB0aGUgb3RoZXIgc2lkZS4KVGhvdWdoIGl0IHN0aWxsIGRhdW50aW5nLCBvcmRlcmluZyBhIGZldyAyOEQvRERzIG9ubGluZSBzb3VuZHMgbGlrZSBpdCB3aWxsIGJlIHRoZSBsZWFzdCBzdHJlc3NmdWwgZm9yIHlvdS4gTW9zdCBpbnRlcm5ldCBicm93c2VycyBoYXZlIGFuIG1vZGUgKG9uIENocm9tZSB5b3Ugc2VsZWN0IEZpbGUsIE5ldyBJbmNvZ25pdG8gV2luZG93KSB3aGVyZSB5b3VyIGJyb3dzZXIgaGlzdG9yeSB3aWxsIG5vdCBiZSBzYXZlZCwgc28gZXZlbiBpZiB5b3VyIHBhcmVudHMgZ28gdGhyb3VnaCB5b3VyIGJyb3dzZXIgaGlzdG9yeSB0aGV5IHdvbiBiZSBhYmxlIHRvIHNlZSBpdC4gUGx1cyBtb3N0IFVLIGJyYW5kcyB3aWxsIHNoaXAgdG8gUG9ydHVnYWwuCkkgZGlkIGEgbG90IG9mIHJlc2VhcmNoIGFzIHdlbGwgYW5kIGV2ZXJ5dGhpbmcgSSBmb3VuZCB3YXMgc2F5aW5nIHRoYXQgdGhlIGNoZWFwIENoaW5lc2Ugb3B0aW9ucyBvbiBBbGkgd2VyZSB0aGUgZXhhY3Qgc2FtZSBhcyB0aGUgInByZW1pdW0iIG9uZXMgeW91IGdldCBmcm9tIFVTUG1vdG9yc3BvcnRzLCBTaG9wREFQLCBldGMuIApFdCBsYSByaHViYXJiZSwgamUgbCdhcHByY2llIGdyYW5kZW1lbnQgYXVzc2kgcXVhbmQgbGVzIGF1dHJlcyBsYSBwcnBhcmVudCBhdmVjIHRhbGVudCwgZW4gcGFydGljdWxpZXIgQ2xhaXJlIERhbW9uLCBwdGlzc2lyZSBwZXJmZWN0aW9ubmlzdGUgZXQgdHJzIHJlc3BlY3R1ZXVzZSBkZXMgc2Fpc29ucywgcXVpIG9mZmljaWUgY2hleiBkZXMgR3RlYXV4IGV0IGR1IFBhaW4uIEVsbGUgYSBjciBwbHVzaWV1cnMgcHRpc3NlcmllcyBhdXRvdXIgZGUgbGEgcmh1YmFyYmUgKGV0IHVuZSBnbGFjZSBhdXNzaSwgcXVlIGplIGdvdGVyYWkgdm9sb250aWVycykuIEonYWkgY2hvaXNpIGxlIGNob3UsIHVuZSBtZXJ2ZWlsbGUgZGUgZG91Y2V1ciwgY3JlIHBhciBsZSBtbGFuZ2UgZCd1bmUgY29tcG90ZSBldCBkJ3VuZSBjcm1lICBsYSByaHViYXJiZS4uIApBIGZsb3AgY2hlY2sgcmFpc2UgaW5zdGVhZCBvZiBjYmV0IGZlZWxzIGEgYml0IGVhc2llciB0byBpbmNvcnBvcmF0ZSBzb21lIGJsdWZmcyB0aGFuIGEgY2hlY2sgY2FsbCBjaGVjayByYWlzZS4gVGhhdCBqdXN0IHRoZSBzdGFrZXMgSSBwbGF5IHRob3VnaCwgYnV0IHRoYXQgd2hhdCBzZWVtcyBiZXN0IGluIHRoZSBtaWNyb3Mgb3IgTExTTkwgdG8gbWUuLiAKQ29tYmluYXRpb25zLCAzIHByLiBTb2NrcywgYmFsYWNsYXZhLCAyIGNha2VzIHNvYXAsIDIgc3RpY2tzIHNoYXZpbmcgc29hcCwgdG9vdGggcG93ZGVyLCBmYWNlIGNsb3RoLCBhIHNoaXJ0IChpdCdzIHByZXR0eSB0aGluKSwgcHVsbG92ZXIsIHdvb2xsZW4gZ2xvdmVzLCB0b3dlbCAobm90IG11Y2ggdXNlKSwgd29vbGxlbiBzY2FyZiBhbmQgYSBwci4gCkxvZ2ljYWxseSwgZ29pbmcgYSBmdWxsIHBvdCBzaXppbmcgZG9lc24gbWFrZSBzZW5zZSB3aXRoIGEgc2V0IG9mIEFBIG9yIGEgc2V0IG9mIEpKIGFzIHRoZSBib2FyZCBpcyByYWluYm93IGFuZCB0aGVyZSByZWFsbHkgaXMgbm8gYXBwYXJlbnQgZHJhd3MuIApJdCB3aWxsIGNvbWUgdXAgYXMgYSBwcml2YXRlIHRyZWUgZm9yIGFueW9uZSB3aG8gYSBETkEgbWF0Y2ggYW5kIHRoZXkgY2FuIGNvbnRhY3QgaGltIChhcyB0aGUgb3duZXIgb2YgdGhlIHRyZWUpIHRvIHJlcXVlc3QgYW4gaW52aXRhdGlvbiB0byBzZWUgaXQuQmUgc3VyZSB5b3UgaW52aXRlZCB0byB0aGUgdHJlZSBhcyBhbiBFZGl0b3IgaWYgeW91IHBsYW5uaW5nIHRvIG1hbmFnZSB0aGUgdHJlZSBmb3IgaGltLCBvciBhcyBhIENvbnRyaWJ1dG9yIG9yIEd1ZXN0IGlmIGhlIG1hbmFnZSBpdCBoaW1zZWxmLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVXaHkgUGVsbGV0IFdlaWdodHMgTmVlZCB0byBiZSBDb25zaWRlcmVkCkZvciBleGFtcGxlLCBpZiB5b3UgYXJlIGluIGxhdGUgcG9zaXRpb24gYW5kIGNvbnNpZGVyaW5nIGFuc3dlcmluZyBhIDN4IGJsaW5kIHJhaXNlIGZyb20sIG9oIGxldCdzIHNheSwgRHVlY2VzQ3Jhenk5OSwgYWxsIHlvdSBoYXZlIHRvIGRvIGlzIGNoZWNrIHRoZSBWUElQIG1ldGVyLiAKUG9rZXIgTWFzdGVyOiBCZWNvbWUgYSBUZXhhcyBIb2xkJ2VtIFBva2VyIE1hc3RlciBUaXAgIDEKMjAxNCBoYXMsIHRvIGRhdGUsIGJlZW4gYW4gZXh0cmVtZWx5IGdvb2QgeWVhciBmb3IgSmVmZiBNYWRzZW4gKEdQSTM5KSBvbiB0aGUgbGl2ZSB0b3VybmFtZW50IGNpcmN1aXQuIApJIGZpZ3VyZSBzb21lZGF5IG15IHRhc3RlcyB3aWxsIGNoYW5nZSBidXQgdW50aWwgdGhlbiwgdGhlcmUgbm8gcG9pbnQgaW4gdHJ5aW5nIHRvIHByZXRlbmQgdG8gbGlrZSBzb21ldGhpbmcgdGhhdCBJIGRvbiBhbmQgd2FzdGluZyBtb3JlIG1vbmV5IG9uIGl0IGp1c3QgYmVjYXVzZSBpdCBzb3BoaXN0aWNhdGVkLgpJIGZpbmQgdGhlIGVudGlyZSBwbG90IHRvIGJlIGJvcmluZyBhbmQgdW5pbnRlcmVzdGluZyBhcyB3ZWxsLiAKSSBkb24gaGF2ZSBhbnkgaXNzdWUgd2l0aCBiYXJuZXkgYmVpbmcgaW4gdGhlcmUsIG5vIG1hdHRlciBob3cgdGhlIFBEQyB0cnkgdG8gc3BpbiBpdCB0aGUgcHJlbWllciBsZWFndWUgaXMganVzdCBhIGZ1biBleGhpYml0aW9uIGV2ZW50IHRoYXQgYWxzbyBtYWtlcyB0aGVtIGEgYml0IG9mIG1vbmV5IGFuZCBoZW5jZSBpdCBtYWtlcyBzZW5zZSBmb3IgdGhlbSB0byBwdXQgYWxsIHRoZWlyIGJpZ2dlc3QgY3Jvd2QgZmF2b3VyaXRlcy9kcmF3cyBpbiAod2hpY2ggYmFybmV5IGlzIG9uZSBvZiwgZXNwZWNpYWxseSBzaW5jZSBpdHMgaGlzIGxhc3Qgc2Vhc29uKSwgYnV0IGhlIGRlZmluaXRlbHkgbm90IHRoZXJlIG9uIG1lcml0LiAKR3JlY3MgZXQgUm9tYWlucyBuJ2F2YWllbnQgdmlzaXQgcXVlIGxlcyByZ2lvbnMgZGUgbGEgcGFydGllIG5vcmQsIHNhbnMgcG91c3NlciBwbHVzIGVuIGF2YW50IGxldXJzIGVudHJlcHJpc2VzLiBMJ3VzYWdlIGRlIGwnb3JhbGl0IG4nYSBqYW1haXMgZW1wY2ggbGEgcHJhdGlxdWUgZGUgYm9uIG5vbWJyZSBkZSBkaXNjaXBsaW5lcyBzY2llbnRpZmlxdWVzIGF1IHNlaW4gZGVzIGNpdmlsaXNhdGlvbnMgYWZyaWNhaW5lcy4gCkkgd291bGQgZ28gc28gZmFyIGFzIHNheWluZyB0aGF0IGl0IG11c3QgYmUgYWRkcmVzc2VkLCBvciBlbHNlIHdlIGZpbmQgaXQgaGFyZCB0byBtYWludGFpbiBhIHByYWN0aWNhbCBjb21tYW5kIG9mIHRoZSBrbm93bGVkZ2Ugd2UgYWNxdWlyZWQgc28gZmFyLCBnaXZlbiB0aGF0IG5vYm9keSB3YW50cyB0byBkZWFsIHdpdGggdGhlIGFzc2hvbGVzIHdobyBjb3VsZCB0ZWFjaCB0aGVtLiAKSSB2b3RlZCBlYXJseSBmb3IgVHJ1bXAsIHRoZW4gZGVtb2NyYXRpYyBkb3duIHRpY2tldCwgYWxsIGFmdGVyIGV4dGVuc2l2ZSBjb25zaWRlcmF0aW9uLiAKSGlnaCB2b2x0YWdlIHRyYW5zbWlzc2lvbiBsaW5lcyBnZW5lcmFsbHkgaGF2ZSBlZmZpY2llbmN5IGxvc3Mgb2YgYXJvdW5kIDIgNCUsIGFuZCB0aGV5IGp1c3QgYSByZWxhdGl2ZWx5IGNoZWFwIHN0ZWVsIGFuZCBhbHVtaW5pdW0gY2FibGUuIApJIHdvdWxkIGFsd2F5cyBiZSBoYXBweSB0byBnaXZlIGhpbSBoaXMgY3V0IG9mIG15IHdpbm5pbmdzLiBJIHdhcyBsZWFybmluZyBwcm9ncmFtbWluZyBhdCBhcm91bmQgMjMsIHdoaWxlIHBsYXlpbmcgb24gYSBmcmllbmRzIHN0YWtlIHRvIG1ha2UgZW5kcyBtZWV0LiBUaGFua2Z1bGx5IEkgZG9uJ3QgaGF2ZSB0byBncmluZCBmb3IgYSBsaXZpbmcgYW55bW9yZSwgYnV0IEkgYWx3YXlzIGZlbHQgaGUgd2FzIHByb3VkIHRoYXQgSSBiZWNhbWUgZGVjZW50IGF0IGEgZ2FtZSBoZSB0YXVnaHQgbWUuLiAKU08gVEhJUyBPTkUgVElNRSwgTElLRSwgSSBET04gS05PVywgQSBXSElMRSBBR08sIE1ZIFdJRkUgV0FTIEdJVklORyBNRSBBIEJKLiAKVGhpbmsgd2UgZ290IGEgbG90IG9mIGEgdmFsdWUgZm9yIHdoYXQgd2UgcGFpZCBwZXIgc3F1YXJlIGZvb3QgZm9yIG91ciBuZXcgY29uZG8gY29tcGFyZWQgdG8gYW55d2hlcmUgZWxzZSwgaGUgc2FpZC4gTG92ZSB0aGUgbG9jYXRpb24gdG9vLiAKSWwgbHVpIHRhaXQgcmVzdCBxdWVscXVlIGNob3NlIGQnYXZvaXIgY29udHJhY3QgdW5lIG1hbGFkaWUgYXBwZWxlICJvcmVpbGxvbnMiIGRhbnMgc29uIGVuZmFuY2UuUG91ciBlbiByZXZlbmlyIGF1IGJvbiB0YXQgZGVzIGNvbGxvZGVzLCBsZSBjYXMgZHUgRW1nICh1biBwcm9kdWl0IGNoaW1pcXVlKSBtb250cmUgYmllbiBxdSdpbCBuZSBzdWZmaXQgcGFzIGQndXNlciBkJ3VuIHJnaW1lIGRwdXJhdGlmIGNsYXNzaXF1ZSAodGlzYW5lIGQnYXJ0aWNoYXV0IGV0IENpZSkgcG91ciBwYXJ2ZW5pciAgdG91am91cnMgcmVzdGF1cmVyIGxldXIgaW50Z3JpdC4gCkRpZSBPbHltcGlzY2hlbiBTb21tZXJzcGllbGUgMjAyNCBrbm50ZW4gaW4gRGV1dHNjaGxhbmQgc3RhdHRmaW5kZW4gICBhbHMgQXVzcmljaHRlciBTdGR0ZSBiZXdlcmJlbiBzaWNoIEJlcmxpbiB1bmQgSGFtYnVyZywganVzdCBkaWUgYmVpZGVuIFN0ZHRlIG1pdCBkZW4gbWVpc3RlbiBIb3RlbGJhdSBQcm9qZWt0ZW4gZGVzIExhbmRlcy4gSW4gQmVybGluIHdlcmRlbiBkZXJ6ZWl0IDMyIG5ldWUgSG90ZWxzIGdlYmF1dCwgaW4gSGFtYnVyZyBzaW5kIGVzIDIwIEhvdGVsYmF1IFByb2pla3RlLiBJbnNnZXNhbXQgZW50c3RlaGVuIGRlcnplaXQgaW4gRGV1dHNjaGxhbmQgNDQzIG5ldWUgSG90ZWxzLgpCdXQgSSBhbHNvIHRoaW5rIHRoYXQgR2xvYmFsIGlzIHVucmVhbGlzdGljLiBQZW9wbGUgb24gdGhlIGludGVybmV0IGFyZSBzcGxpdCBkb3duIHRoZSBtaWRkbGUgd2l0aCB0aGUgc2l0ZS4gCkFuZCBJIHdhbnQgdG8gcmVwbGFjZSB0aGUgd2luZG93cy4uIApIYSwgaGEsIGhhIEZhdCBDYXQgQmFua2VyIHdobyB3cm90ZSB0aGlzLCB0aGUgam9rZSBpcyBvbiB5b3UuIFdoaWxlIHlvdSB3ZXJlIHdvcmtpbmcgZnJvbSA1YW0gdGlsbCAxMHBtLCB3ZSB3ZXJlIGVuam95aW5nIHRpbWUgd2l0aCBvdXQgZmFtaWx5IGFuZCBmcmllbmRzLCBlYXRpbmcgZGlubmVyLCB3YWxraW5nIGluIHRoZSBwYXJrLiBXaGlsZSB5b3Ugd2VyZSBnaXZpbmcgeW91cnNlbGYgYSBraWRuZXkgaW5mZWN0aW9uIGJ5IG5vdCBnZXR0aW5nIHVwIHRvIHBlZSB3aGVuIHlvdSBuZWVkIHRvICh1bSwgcmVhbGx5PyB5b3UgcHJvdWQgb2YgdGhhdD8pIHdlIHdlcmUgZ29pbmcgdG8gdGhlIGJhdGhyb29tIHdoZW5ldmVyIHdlIG5lZWRlZCB0by4gClZBTkNPVVZFUiBCb3RoIENhbmFkaWFuIHdvcmtlcnMgYW5kIHRoZWlyIGVtcGxveWVycyB3aWxsIHNvb24gYmUgb24gdGhlIGhvb2sgZm9yIGhpZ2hlciBjb250cmlidXRpb25zIHRvIHRoZSBDYW5hZGEgUGVuc2lvbiBQbGFuIGFmdGVyIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgcmVhY2hlZCBhbiBhZ3JlZW1lbnQgd2l0aCBtb3N0IG9mIHRoZSBwcm92aW5jZXMgTW9uZGF5IHRvIHJldmFtcCB0aGUgcHJvZ3JhbSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gbmVhcmx5IHR3byBkZWNhZGVzLgpFdmVuIGJlZm9yZSBoaXMgY29sbGVnZSBjYXJlZXIgYmVnYW4sIGhlIHBvc3Nlc3NlZCBhIGxvdmUgZm9yIHRoZSB3cml0dGVuIGFuZCBzcG9rZW4gd29yZC4uIApXaHkgd2FzIGhlIHRoZSBzbWFydGVzdD8gT2YgYWxsIHRoZSBDUCByYWlkcyBJIGNvb3JkaW5hdGVkLCBldmVyeSBzdXNwZWN0IGVpdGhlciBnaXZlcyB1cCB0aGVpciBkZXZpY2VzIGFuZC9vciBhZG1pdHMgdG8gcG9zc2Vzc2luZyBpdC4gVGhpcyBndXkgY2xlYXJseSBrbmV3IGhlIHdhcyBkb2luZyB3cm9uZyBhbmQgaGFkIHN0dWRpZWQgdXAgb24gaXQuIExpa2UgaGUgd2FzIGFsbW9zdCBleHBlY3RpbmcgdG8gYmUgcmFpZGVkLiBIZSB3YXMgcHJlcGFyZWQuIEl0IHdhc24gdGhhdCBoZSBtYWRlIG91ciBqb2JzIGhhcmRlciB0aGF0IHBpc3NlZCBtZSBvZmYsIGl0IHdhcyB0aGF0IGhlIHdhcyBhIHNjaG9vbCB0ZWFjaGVyLiBCeSBsYXcsIHdlIGNvdWxkIG5vdCBpbmZvcm0gaGlzIGVtcGxveWVyIHRoYXQgaGUgd2FzIHVuZGVyIGludmVzdGlnYXRpb247IG9ubHkgaWYgYW5kIHdoZW4gYWN0dWFsIGNoYXJnZXMgd2VyZSBmaWxlZC4gV2UgY291bGQgYmUgc3VlZCBmb3IgaGFyYXNzbWVudC4gU28gdGhpcyBndXkgd2VudCBhYm91dCBoaXMgYnVzaW5lc3MgYXMgYSB0ZWFjaGVyIHRvIHRoaXMgZGF5LgpTb21lIGhhZCB0aGF0IGNob2ljZSBtYWRlIGZvciB0aGVtLiBJdCBhIGZpbmUgbGlmZXN0eWxlLiAKQmVuZ2FsaUJveSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgMjAxOSB0aGVtZSAnVGhpbmsgZXF1YWwsIGJ1aWxkIHNtYXJ0LCBpbm5vdmF0ZSBmb3IgY2hhbmdlJyBmb2N1c2VzIG9uIGlubm92YXRpdmUgd2F5cyBpbiB3aGljaCB3ZSBjYW4gYWR2YW5jZSBnZW5kZXIgZXF1YWxpdHkgYW5kIHRoZSBlbXBvd2VybWVudCBvZiB3b21lbi4gCkZlZWxzIHZlcnkgZGlmZmVyZW50LCIgQ3lubiBzYWlkLCB3aGVuIGFza2VkIGFib3V0IGhpcyAyMDE2IGFuZCAyMDE4IG1haW4gZXZlbnQgcmVzdWx0cy4gCldlIHdhbmRlbGRlbiB2ZXJkZXIsIHJpY2h0aW5nIGRlIFR1aW5lbiBSaW5nLCBkZSBhbmRlcmUgZ3JvZW5lIHJpbmd3ZWcgcm9uZG9tIGhldCBjZW50cnVtLiBMYW5ncyBoZXQgVHJpdW1waGFsbmF5YSBQbGVpbiAoZHJ1ayBrcnVpc3B1bnQhKSBtZXQgaGV0IE1heWFrb3Zvc2tpeSBNb251bWVudCwgd2FhciBibGlqa2JhYXIgdmFhayB2ZXJ6YW1lbGQgd29yZHQgdm9vciBiZXRvZ2luZ2VuLiBFbiBtZXQgdWl0emljaHQgb3AgdmFuIGRlIHNldmVuIHNpc3RlcnMgKG1vb2llIHdpdHRlbiB3b2xrZW5rcmFiYmVycyB6aWpuIGRhdCwgaWsgdm9uZCB6ZSB3ZWwgaWV0cyBoZWJiZW4pLiAKU29ycnksIGJ1dCByZWdhcmRsZXNzIG9mIHRoZSByZXN0IG9mIGhpcyBiZWhhdmlvciBvciB5b3VyIHRpbWUgd29ya2luZyBhdCB0aGUgY291bnRyeSBjbHViLCB0aGF0IHNwZWNpZmljIGludGVyYWN0aW9uIHdhcyBub3Qgc2V4aXNtIG9yIGNvbmRlc2NlbnNpb24uIApXYXMgdGhlIGdpZnQgdG8gTXIuIApFZGRpZS4iIFdhcm5lLCBhIHByb2xpZmljIHNvY2lhbCBtZWRpYSB1c2VyLCBhbHNvIHRvb2sgdG8gSW5zdGFncmFtICAgaGUgaGFzIG1vcmUgdGhhbiAyODAsMDAwIGZvbGxvd2VycyAgIHRvIHZlbnQgaGlzIGRpc3BsZWFzdXJlIGFuZCBjbGFpbSBoZSB3YXMgdGhlIHZpY3RpbSBvZiBhIHZlbmRldHRhLiAKSXQgbWlnaHQgYmUgd29ydGh3aGlsZSBmb3IgYWxsIHRob3NlIHdobyBzeW1wYXRoaXplIHdpdGggdGhlIG9jY3VwaWVycyBvZiBadWNjb3R0aSBQYXJrIGFuZCBvdGhlciBwbGF6YXMgYW5kIHNxdWFyZXMgYXJvdW5kIHRoZSBjb3VudHJ5IHRvIGxlYXJuIGZyb20gdGhlIGV4YW1wbGUgb2YgdGhlIENocmlzdG1hcyBTZWFscyBjYW1wYWlnbi4gV2UgaGF2ZSBubyBzaG9ydGFnZSBvZiB1cmdlbnQgY2F1c2VzIHRoYXQgd2lsbCBiZW5lZml0IGZyb20gdGhlIGVuZXJneSBvZiB0aGUgZ3Jhc3Mgcm9vdHMuIFRoZSBzZWFscyBjYW1wYWlnbiBzaG93ZWQgdGhhdCB0aGUgOTkgcGVyY2VudCwgZXZlbiB3aGVuIGZlZWxpbmcgZGlzZW5mcmFuY2hpc2VkLCBhcmUgaGFyZGx5IHBvd2VybGVzcyB0byByZXBhaXIgdGhlIHNhZmV0eSBuZXQgICBhbmQgZXZlbiBpbmZsdWVuY2UgdGhlIGFjdGlvbnMgb2YgdGhlIDEgcGVyY2VudC4gCldoZW4geW91IGFyZSBub3Qgc3VyZSBhYm91dCB3aGF0IHRvIGRvLCBsZXRzIGdvIHRocm91Z2ggdGhlIHJldmlld3MgYXZhaWxhYmxlIGluIHRoZSB3ZWJzaXRlcy4gClNvdXJjZSBmb3IgbW9zdCBvZiB0aGlzIGluZm9ybWF0aW9uIGFyZSB0aGUgbGV0dGVycyBhbmQgZGlhcnkgZW50cmllcyBvZiBEaWNrZW5zIGxvbmcgdGltZSBmcmllbmQgYW5kIHN1cHJlbWUgY29uZmlkZW50LCBKb2huIEZvcnN0ZXIxICh3aG8gcGFwZXJzIGFyZSBub3cgaW4gdGhlIEJyaXRpc2ggTGlicmFyeSksIGFuZCB0YWtlIHRoZSBmb3JtIG9mIGFuIG91dGxpbmUgZm9yIGEgbm92ZWwgYW5kIHNvIGNvbmZ1c2luZyBmYWN0IHdpdGggZmljdGlvbiwgcGVyaGFwcyBleHBsYWluaW5nIHRoZSByZWxhdGl2ZSBsYWNrIG9mIGF0dGVudGlvbiB0byB0aGlzIGZhc2NpbmF0aW5nIHBhcnQgb2YgRGlja2VucyAgaW50ZXJlc3QgaW4gcHVyc3VpbmcgdGhlIHB1cnN1YWJsZSwgb2YgY3JpbWluYWxzIGFuZCBjcmltZSBhbmQgcHJpc29ucyBhbmQgd29ya2hvdXNlcyBhbmQgc28gb24sIGhhcyBiZWVuIGxvbmcgZXN0YWJsaXNoZWQsIGEgcHVyc3VpdCBvZiBoaXMgdGhyb3VnaG91dCB0aGUgd2hvbGUgb2YgaGlzICBhZGRpdGlvbiB0byBlc3RhYmxpc2hpbmcgYSBwcm90b2NvbCBmb3IgdGhlIGludmVzdGlnYXRpb24gb2YgY3JpbWUsIERpY2tlbnMgc2VlbXMgdG8gYmUgdGhlIGZpcnN0IHRvIHJlY29nbml6ZSB0aGUgZ3JlYXQgdmFsdWUgb2YgYSBzdGFuZGFyZGl6ZWQgbWV0aG9kIG9mIGNvbW11bmljYXRpbmcgdGhlIGRlc2NyaXB0aW9uIG9mIGNyaW1pbmFscyBmcm9tIG9uZSBqdXJpc2RpY3Rpb24gdG8gdGhlIG5leHQuIApBY2NvcmRpbmcgdG8gYSAyMDExIGNvdXJ0IGZpbGluZyBieSBhbGxlZ2VkIEVwc3RlaW4gdmljdGltIFZpcmdpbmlhIFJvYmVydHMgR2l1ZmZyZSwgc2hlIHNhdyBDbGludG9uIGFuZCBQcmluY2UgQW5kcmV3IG9uIHRoZSBpc2xhbmQgYnV0IG5ldmVyIHNhdyB0aGUgZm9ybWVyIHByZXNpZGVudCBkbyBhbnl0aGluZyBpbXByb3Blci4gR2l1ZmZyZSBoYXMgYWNjdXNlZCBQcmluY2UgQW5kcmV3IG9mIGhhdmluZyBzZXggd2l0aCBoZXIgd2hlbiBzaGUgd2FzIGEgbWlub3IsIGEgY2hhcmdlIEJ1Y2tpbmdoYW0gUGFsYWNlIGRlbmllcy4gClRoZSB1cGhlYXZhbCBpcyB1bmRlcnN0b29kIHRvIGhhdmUgY2F1c2VkIGZ1cnRoZXIgY29uc3Rlcm5hdGlvbiBhdCBDb25zdW1lciBBZmZhaXJzLiBUaGUgcmVndWxhdG9yIGhhZCByZW5ld2VkIHRoZSBmb3VuZGF0aW9uIGNoYXJpdHkgbGljZW5jZSBpbiBTZXB0ZW1iZXIgaW4gcGFydCBiYXNlZCBvbiB1bmRlcnRha2luZ3MgQ29sZW1hbiAgIG9uIGJlaGFsZiBvZiB0aGUgYm9hcmQgICBoYWQgZ2l2ZW4gdG8gaW1wcm92ZSBpdHMgcmVwb3J0aW5nIGFuZCBhY2NvdW50aW5nIHByYWN0aWNlcy4gWWV0LCBqdXN0IHRocmVlIG1vbnRocyBsYXRlciwgdGhlIHBlcnNvbiByZXNwb25zaWJsZSBmb3IgaW1wbGVtZW50aW5nIHRoZSBjaGFuZ2VzIHdhcyBsZWF2aW5nIGFuZCB0aGVyZSB3YXMgbm8gcGxhbnMgdG8gcmVwbGFjZSBoZXIuIApFcm5lc3QgRm9nZWxiZXJnIChsZWZ0KSBhbmQgRHIuIApCdXQgdGhlbiBpdCB3YXMgbm90IGFuIG9jY2FzaW9uIGZvciBzdWJzdGFudGl2ZSBkaXNjdXNzaW9uLi4gCkFjY29yZGluZyB0byBzb21lIHN1cnZleXMsIHRoZXNlIGtpbmRzIG9mIG1hY2hpbmVzIGFyZSByZXNwb25zaWJsZSBvZiB1cCB0byBzZXZlbnR5IHBlcmNlbnQgb2YgdGhlIHdvcmtpbmcgb2YgdGhlIGNhc2lub3MgYWxsIG92ZXIgdGhlIHdvcmxkLiAKQXMgdGhlIGRheSBnb2VzIG9uIEkgaGFkIG1pbGQgYm91dHMgb2YgZmF0aWd1ZSBhbmQgd2Vha25lc3MuIApQb3VyIGN1aXNpbmVyLCB1dGlsaXNleiB1bmUgaHVpbGUgbW9ubyBpbnNhdHVyZSBjb21tZSBsJ2h1aWxlIGQnb2xpdmUgb3UgZGUgY2Fub2xhLkNvbnNvbW1leiBkZXMgZnJ1aXRzIGV0IGxndW1lcywgZW4gcGFydGljdWxpZXIgZGUgbGd1bWVzIHZlcnRzLCBvcmFuZ2VzIGV0IGphdW5lcywgZGUgYmFpZXMgZm9uY2VzIGV0IGQnYWdydW1lcy4gTGVzIGNvbXBvc2FudHMgYW50aW94eWRhbnRzIHByc2VudHMgZGFucyBjZXMgcGxhbnRlcywgY29tbWUgbGVzIGNhcm90bmVzLCBsZXMgZmxhdm9ub2RlcywgbGUgc2xuaXVtLCBsYSB2aXRhbWluZSBFIGV0IGxhIHZpdGFtaW5lIEMsIGpvdWVudCB1biBybGUgZXNzZW50aWVsIGNvbnRyZSBsZSBkdmVsb3BwZW1lbnQgZGUgbCdhdGhyb3NjbHJvc2UuQXVnbWVudGV6IHZvdHJlIGNvbnNvbW1hdGlvbiBkZSBmaWJyZXMuIFVuZSBhbGltZW50YXRpb24gcmljaGUgZW4gZmlicmVzIHBlcm1ldCBkZSBwcm90Z2VyIGwnb3JnYW5pc21lIGNvbnRyZSBsJ2F0aHJvc2Nscm9zZS4gClZhcmlhbmNlIG1vc3RseSBjb21lcyBmcm9tIHBsYXlpbmcgYSBub3QgY29tcGxldGVseSBndG8gYW5kIG5vdCBwbGF5aW5nIGVub3VnaC4gT25jZSB5b3UgcGxheSBHVE8gZXZlbnR1YWxseSB2YXJpYW5jZSBiZWNvbWVzIGEgbG90IGxlc3MuIENlcnRhaW4gZ2FtZXMgaGF2ZSBtb3JlIHZhcmlhbmNlIHRoYW4gb3RoZXJzIGEgaHVuZHJlZCBwZXJjZW50IGJ1dCBtb3N0IHZhcmlhbmNlIGlzIGFib3V0IGJhZCBwbGF5IHdoaWxlIHJ1bm5pbmcgYmFkLiAKV2l0aCBOYWRsZXIgcmVxdWVzdCBvZiA4MCBkb2NzIGl0IGdpdmVzIHRoZSBjaGFuY2UgZm9yIHNvbWUgd2hvIGFyZSB3aWxsaW5nIHRvIGNvb3BlcmF0ZSBiZWZvcmUgdGhlIGhhdmUgdGhlIGxlbmd0aHkgc3VicG9lbmEgcHJvY2Vzcy4gCkkgYWxzbyB3YW50IHRvIGFwb2xvZ2l6ZSBmb3IgdGhlIG1pc2NvbW11bmljYXRpb24gdGhhdCBoYXBwZW5lZCB3aXRoIHRoZSBidWcgc3ByYXkuIApCdXQgc3VwcG9ydCBmb3IgdGhlIEFmZ2hhbiB3YXIgaGl0IGFuIGFsbCB0aW1lIGxvdyBpbiBhIENOTi9PcGluaW9uIFJlc2VhcmNoIENvcnAuIFBvbGwgcmVsZWFzZWQgbGFzdCB3ZWVrLiBUaGF0IHN1cnZleSBmb3VuZCAzOSBwZXJjZW50IHN0aWxsIGZhdm9yIHRoZSB3YXIsIGNvbXBhcmVkIHdpdGggNTggcGVyY2VudCB3aG8gb3Bwb3NlIGl0ICAgbWFraW5nIGl0IGFsbW9zdCBhcyB1bnBvcHVsYXIgYXMgdGhlIElyYXEgd2FyIGhhcyBiZWNvbWUgaW4gcmVjZW50IHllYXJzLiAKUHJlbWl1bSBtYXNzIHBsYXllcnMgcGF5IGNsb3NlIGF0dGVudGlvbiB0byB0aGUgb2RkcyBpbiB0aGUgZ2FtZSB0aGV5IHBsYXlpbmcgYW5kIHRoZSBwYXlvdXQsIGFuZCB0aGV5IHR5cGljYWxseSBuZWVkIGFjY2VzcyB0byBhIGxvdCBvZiBtb25leSBiZWNhdXNlIHRoZXkgbWF5IGhhdmUgbG9uZyBkcnkgc3BlbGxzIHdoZXJlIHRoZXkgbG9zZSBleG9yYml0YW50IGFtb3VudHMuCkxhIFRlbmUgc3R5bGUgb2JqZWN0cyBldmlkZW50bHkgaGFkIHNvbWUgImJyYW5kIGFwcGVhbCIgdGhhdCBsZWQgc29jaW8gcG9saXRpY2FsIGVsaXRlcyBvZiBvdGhlciBsaW5ndWlzdGljIGNvbW11bml0aWVzIHRvIG9idGFpbiB0aGVtIGluIG9yZGVyIHRvIGRlbW9uc3RyYXRlIHRoZWlyIGhpZ2hlciBzdGF0dXMsIGp1c3QgYXMgR2F1bGlzaCBzcGVha2luZyBhcmlzdG9jcmF0cyB3b3VsZCBoYXZlIGRvbmUuIE5vciB3YXMgTGEgVGVuZSBhcnQgYW4gZXhjbHVzaXZlbHkgIkNlbHRpYyIgYXJ0IHN0eWxlOyBpdCB3YXNuIGV2ZW4gcHVyZWx5ICJDZWx0aWMiIGluIGl0cyBnZW5lYWxvZ3kuIApUaGlzIGxpdHRsZSB0YXNrIHRvb2sgbWUgc28gbXVjaCB0aW1lLCBiZWNhdXNlIEkgd2FzIG9ic3RydWN0IGJ5IGVuZW15IFNhdGFuIGluIG1hbnkgZm9ybXMuIApTbyBJIHdhcyBkb3duIHRoZXJlIGJ5IG15c2VsZiwgdGFraW5nIHBpY3R1cmVzLCBhbmQgYWZ0ZXIgYSBjb3VwbGUgb2YgbWludXRlcyBJIHN0YXJ0ZWQgZmVlbGluZyBkb3ducmlnaHQgbmF1c2VvdXMuIExpa2UsICJJJ20gZ29pbmcgdG8gZ2V0IHNpY2sgcmlnaHQgaGVyZSIgbmF1c2VvdXMuIApObywgdGhlIGFyZWFzIHdlIGFscmVhZHkgaGF2ZSBhIHdhbGwgYXJlIGNhdXNpbmcgc2VyaW91cyBlbnZpcm9ubWVudGFsIGRhbWFnZSBlc3BlY2lhbGx5IHRvIHRoZSBsb2NhbCB3YXRlciB0YWJsZXMgaW4gQXJpem9uYSwgTmV3IE1leGljbywgVGV4YXMsIGFuZCBDYWxpZm9ybmlhIC4gV2UgYXJlIGFscmVhZHkgZmFjaW5nIHNlcmlvdXMgd2F0ZXIgc2hvcnRhZ2UgZnJvbSB0aGUgQ29sb3JhZG8gUml2ZXIsIHdlIGdyb3cgYSBsb3Qgb2Ygb3VyIGNvdW50cnkgd2ludGVyIGZvb2Qgc3VwcGx5IGluIHRoZXNlIGFyZWFzIGFuZCB0aGUgbG9jYWwgZmFybWVycyBhcmUgYWxyZWFkeSBzdWZmZXJpbmcuIEl0IGh1cnRzIEFtZXJpY2Egc21hbGwgYnVzaW5lc3NlcyBvd25lcnMgYW5kIHByZXZlbnRzIHVzIGZyb20gZ3Jvd2luZyBvdXIgb3duIGZvb2QuCk5PVEVTOiBQYW50aGVycyBHIEphbWVzIFJlaW1lciByZXR1cm5lZCBhZnRlciBtaXNzaW5nIGZpdmUgZ2FtZXMgd2l0aCBhIGxvd2VyIGJvZHkgaW5qdXJ5IGFuZCBiYWNrZWQgdXAgTW9udGVtYmVhdWx0LiBXaWxkIEMgTHVrZSBLdW5pbiB3YXMgc2NyYXRjaGVkIHdpdGggYW4gdXBwZXIgYm9keSBpbmp1cnkgc3VzdGFpbmVkIGluIFRodXJzZGF5IGdhbWUgYXQgVGFtcGEgQmF5LiAKVGhpcyBpbmNsdWRlcyBzaWduIHVwIGJvbnVzZXMsIGRlcG9zaXQgYm9udXNlcyBhbmQgZXZlbiBiaXJ0aGRheSBib251c2VzISBUaGVzZSBib251c2VzIGFyZSBhY3R1YWxseSBub24gZXhpc3RlbnQgaW4gcmVhbCBjYXNpbm9zIHNvIGl0IHJlYWxseSBtYWtlcyBvbmxpbmUgcG9rZXIgc2l0ZXMgbW9yZSBhcHBlYWxpbmcgdG8gcG9rZXIgcGxheWVycy4gClRocm93YXdheWxvc2VyMTAwMCAgMTIwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCiJJIGFsd2F5cyBzYWlkLCBmb3IgdGhvc2Ugc2V2ZW4geWVhcnMsIEkgaGFkIHRoZSBiZXN0IGpvYiBpbiBDYW5hZGEgICB3YXkgYmV0dGVyIHRoYW4gYSBwcmltZSBtaW5pc3Rlciwgd2F5IGJldHRlciB0aGFuIGFueXRoaW5nLiBJdCB3YXMgc28gZmFudGFzdGljIHRvIGxlYXJuLCB0byBsaXZlIGFuZCBidWlsZCB0aGF0IHdvbWFuIGFuZCBsaXZlIGluIHdobyBzaGUgd2FzLCIgRGFsZSBzYWlkIGluIGFuIGludGVydmlldy4KVGhlIGNvbW11bml0eSBjYXJkIGl0c2VsZiBjYW5ub3QgYmUgdXNlZC4gCkl0IG1pZ2h0IHNlZW0gdHJpdGUsIGJ1dCBJJ3ZlIGhlYXJkIG9mLCBhbmQgdHJpZWQgaW4gdGhlIHBhc3QsIGFuIGVudmVsb3BlIHN5c3RlbSBkdXJpbmcgc2hvcnQgdHJpcHMgdG8gVmVnYXMuIApIZXV0ZSB1bWZhc3N0IGRpZSBIb3RlbGtldHRlIFJhZmZsZXMgYWNodCBhdXNnZXN1Y2h0ZSBBZHJlc3NlbiBpbiBBc2llbiB1bmQgRXVyb3BhLi4gCkkgdG9vayBhIGNsb3NldXAsIHlvdSBjYW4gc2VlIHRoZSBza2luIG5leHQgdG8gdGhlIGZ1bGwgWHMgZm9yIGNvbXBhcmlzb246SXQgYWN0dWFsbHkgbXVjaCBuZWF0ZXIgKGJ1dCB3YXkgbW9yZSB3b3JrKSB0byBkbyAxIG92ZXIgMSBmdWxsIGNyb3NzLCB0aGF0IHdoYXQgbW9zdCBzZXJpb3VzIHN0aXRjaGVycyBkbyBmb3Igc2tpbi4gQnV0IG9idmlvdXNseSwgaXQgZG91YmxlIHRoZSB3b3JrIG9mIHRlbnQgKHdoaWNoIGlzIGFscmVhZHkgZG91YmxlIHRoZSB3b3JrIG9mIGp1c3QgcHV0dGluZyBhbiBYIHRoZXJlIGxpa2UgaXQgY2hhcnRlZCEpClBhdHRlcnNvbiBtYWRlIGxpdHRsZSBhdHRlbXB0IHRvIGNvcnJlY3Qgc3VjaCBpbnRlcnByZXRhdGlvbnMgb2YgdGhlIEJhbmsgb2YgQ2FuYWRhJ3MgdGhpbmtpbmcuIEJ1dCBzaGUgZGlkIG9mZmVyIGEgcmVtaW5kZXIgdGhhdCBhbiB1bmNlcnRhaW4gb3V0bG9vayBpcyBkaWZmZXJlbnQgdGhhbiBhIG5lZ2F0aXZlIG9uZS4gIldlIHN0aWxsIGV4cGVjdCBDYW5hZGlhbiBlY29ub21pYyBncm93dGggdG8gcGljayB1cCBsYXRlciBpbiB0aGUgeWVhciwgc3VwcG9ydGVkIGJ5IG9uZ29pbmcgc3RyZW5ndGggaW4gZW1wbG95bWVudCBhbmQgcmlzaW5nIHdhZ2VzLCIgc2hlIHNhaWQuCldlIGxvdmUgYmlydGhkYXlzIGFuZCB0aGV5IG1hdHRlciB0byB1cyBiZWNhdXNlIHdlJ3JlIENGLiAKVGhpcyBpcyBhIGRyYW1hdGljIGZpbG0gd2l0aCBhIGxpZ2h0IHRvdWNoIHlvdSdsbCBiZSBzdXJwcmlzZWQgaXMgc28gd2F0Y2hhYmxlLi4gClRoYXQgYW1iaXZhbGVuY2UgICB3aGVyZSB5b3UgYWNjZXB0IG9yIGRvbiBzZWVtIHRvIGNhcmUgdGhhdCB5b3UgZXF1YXRlIHlvdXIgbG92ZSB0b3dhcmRzIHlvdXIgY2hpbGRyZW4gdG8gdGhhdCBvZiB5b3VyIG5pZWNlL25lcGhldyAgIHdvdWxkIGJlIG1vcmUgdXBzZXR0aW5nIHRvIG1lIHRoYW4gYW55dGhpbmcgZWxzZS4uIApUaGUgd2FyIGxhc3RlZCBmb3IgdGhyZWUgeWVhcnMgd2l0aCBFYXJ0aCBBbGxpYW5jZSBiZWluZyBhbG1vc3QgdG90YWxseSBvdXRtYXRjaGVkIGJ5IHRoZSBNaW5iYXJpIGFuZCBlbmRlZCB3aXRoIHRoZSB1bmV4cGVjdGVkIE1pbmJhcmkgc3VycmVuZGVyIGF0IHRoZSBCYXR0bGUgb2YgdGhlIExpbmUuIFRoZSBNaW5iYXJpIHN1cnJlbmRlciBvY2N1cnJlZCB3aGVuIHRoZXkgZGlzY292ZXJlZCB3aGF0IHRoZXkgYmVsaWV2ZWQgd2FzIHRoZSBzb3VsIG9mIHRoZSBncmVhdGVzdCBNaW5iYXJpIHRvIGhhdmUgbGl2ZWQsIFZhbGVuLCBoYWQgYmVlbiByZWluY2FybmF0ZWQgaW4gdGhlIGh1bWFuIGZvcm0gb2YgY2FwdHVyZWQgcGlsb3QgSmVmZnJleSBTaW5jbGFpci4uIApCdXQgc28gZGlkIGRvY3RvcnMsIGFjYWRlbWljcywgYSBjbGVyZ3ltYW4sIGZpbG0gbWFrZXJzLCBwb2xpY2Ugb2ZmaWNlcnMsIHNvbGRpZXJzIGFuZCBhdGhsZXRlcy4gCldlIGNhbiBwYXJhcGhyYXNlLCB0aGVuOi4gCkkgcHV0ICQxODAgaW50byBtb3VudGFpbiBwb2tlciBhbmQgd2FzIG93ZWQgJDYwMCwgd2hpY2ggSSBkb3VidCBJIGV2ZXIgc2VlLiAKWW91bmcgbWVuIGVzcGVjaWFsbHkgc2hvdWxkIHRha2UgdGhpcyB2ZXJ5IHNlcmlvdXNseSwgZXNwZWNpYWxseSBpZiB0aGUgY2hhbmdlIGlzIHN1ZGRlbi4gCkhlIGxldCBoaXMgc3Vycm9nYXRlcyBhbmQgc3VwcG9ydGVycyBhdHRhY2sgQ2xpbnRvbiwgYW5kIHNwcmVhZCBjb25zcGlyYWN5IHRoZW9yaWVzLCB0byB0aGUgcG9pbnQgdGhhdCB0aGVyZSB3YXMgYW4gYWxtb3N0IHJpb3QgYXQgdGhlIGNvbnZlbnRpb24uIEhlIGNvdWxkIGFuZCBzaG91bGQgc2h1dCB0aGVtIGRvd24gKGxpa2UgTWNDYWluIGZhbW91c2x5IGRpZCB3aXRoIGhpcyBzdXBwb3J0ZXJzIGF0dGFja2luZyBPYmFtYSkuIApMZXRzIHRhbGsgYWJvdXQgaG93IG11Y2ggcGVvcGxlIG1hZGUgdGhlbi4gSSB1c2VkIHRvIGF2ZXJhZ2UgYXJvdW5kIGEgJDMwMDAgeWVhcmx5IHRheCByZXR1cm4uIApUaGVuLCB3ZSBzdGFydGVkIGdldHRpbmcgcGlja2VkIHVwIGluIHRoZSBwcmVzcy4gT3VyIENFTyB3YXMgd3JpdGluZyBjb2x1bW5zLiBXZSB3ZXJlIHBvc3RpbmcgYmxvZ3MsIGFuZCB3ZSBqdXN0IGtlcHQgcmVwZWF0aW5nIGl0IGFuZCByZXBlYXRpbmcgaXQsIGFuZCBpdCBzdGFydGVkIHN0aWNraW5nLi4gClRoZSB0cmlvLCBhbGwgZnJpZW5kcyBmcm9tIHRoZSBJbGxhd2FycmEgY2lyY3VpdCwgYWdyZWVkIHRvIHNwbGl0IHRoZSBwcml6ZSBwb29sIGZvciB0aGUgdG9wIHRocmVlIHBsYWNpbmdzIGV2ZW5seSBiZXR3ZWVuIHRoZW0uIApUaGUgd2Vic2l0ZSBtYXkgbG9vayB2ZXJ5IHdlbGwgbGlrZSBmYWNlYm9vayBvciBhbnkgb3RoZXIga2luZCBvZiBzZWN1cml0eSBpbnZlbnRlZCB3ZXNiaXRlLiBXaGVuIHlvdSBnZXQgdGhlIHBhZ2Ugb3BlbiwgZW50ZXIgaW4gdGhlIHdlYiBhZGRyZXNzIG9mIHRoZSBzaXRlIHlvdSB0aGluayB5b3UgbWF5IHdhbnQgdG8gcHVyY2hhc2UgZnJvbS4gTW9yZSBpbXBvcnRhbnQgdGhhbiBmaW5kaW5nIHRoZSBjaGVhcGVzdCBwcmljZSBpcyBmaW5kaW5nIHNvbWVvbmUgd2hvIGlzIHJlbGlhYmxlLiAKSSB3YXNuJ3QgZmlnaHRpbmcgZm9yIHRoZSB0diBvciBjZW5zb3Jpbmcgd2hhdCBJIHdhcyB3YXRjaGluZyBiZWNhdXNlIHRoZXJlJ3MgYW4gZWlnaHQgeWVhciBvbGQgcnVubmluZyBhcm91bmQuIApUaGUgZmlsbSdzIHRvbmUsIGVzcGVjaWFsbHkgaW4gdGhlIGVhcmx5IGdvaW5nLCBpcyBvcGVubHkgY29tZWRpYyB3aXRoIG1hbnkgb2YgdGhlIHNlY29uZGFyeSBjaGFyYWN0ZXJzIHByZXNlbnRlZCBhcyBtb3JvbmljIGJ1ZmZvb25zIGFuZCBtb3N0IG9mIHRoZSBodW1vciBiZWluZyBnZWFyZWQgdG93YXJkIHRoZSB1bmRlciAxMCBjcm93ZC4gVGhlIHByZXZpb3VzIEhvdyB0byBUcmFpbiBZb3VyIERyYWdvbnMgY29udGFpbmVkIGNvbWVkaWMgZWxlbWVudHMgYnV0IHRoZXkgd2VyZSBiZXR0ZXIgYmFsYW5jZWQgd2l0aCB0aGUgbW9yZSBzZXJpb3VzLCBjaGFyYWN0ZXIgYmFzZWQgZWxlbWVudHMuIE1lYW53aGlsZSwgR3JpbW1lbCBpcyBkaXNhcHBvaW50aW5nbHkgb25lIGRpbWVuc2lvbmFsLiBObyBhdHRlbXB0IGlzIG1hZGUgdG8gZ2l2ZSBoaW0gYSBjcmVkaWJsZSBtb3RpdmF0aW9uIG9yIG1ha2UgaGltIGludGVyZXN0aW5nIG9uIGFueSBsZXZlbC4gSGUgaXMgYSBnZW5lcmljIGJhZCBndXkuIChIaXMgcmVhc29uIGZvciBnZW5vY2lkZTogQmVjYXVzZSBpdCBtYWtlcyBoaW0gZmVlbCBnb29kLikKS2VlcCBwbGF5aW5nIHVudGlsIHNvbWVvbmUgd2lucyBieSBydW5uaW5nIG91dCBvZiBjYXJkcyBpbiB0aGVpciBoYW5kISBJZiB5b3Ugd2FudCB0byBsZWFybiBob3cgdG8ga2VlcCBzY29yZSBvciBwbGF5IHdpdGggY29tbW9uIHZhcmlhdGlvbnMsIGtlZXAgcmVhZGluZyB0aGUgYXJ0aWNsZSEuIApBbnl3YXkuIEkgY291bGQga2VlcCBnb2luZyBidXQgSSBvbiBtb2JpbGUgYW5kIGl0IGEgbG90IG9mIHdvcmsuIApUaGUgZmluYWwgd2FzIG9uZSBvZiBteSBiaWdnZXN0IHBva2VyIGRpc2FwcG9pbnRtZW50cy4gClRoZSBjdXJyZW50IGJ1c2luZXNzIHBsYW4gd2lsbCBzZWUgdGhlIGNvdXJzZSByZWNvbmZpZ3VyZWQgdG8gYWxsb3cgZm9yIGEgNDIgbG90IGJhdHRsZWF4ZSBzdWJkaXZpc2lvbiBiZXNpZGUgRHVubW9yZSBSb2FkLCB3aGljaCBpdCBpcyBob3BlZCB3aWxsIG1ha2UgYSBwcm9maXQgb2YgJDUgbWlsbGlvbiBvbmNlIGRldmVsb3BtZW50IGNvc3RzIGFyZSB0YWtlbiBpbnRvIGFjY291bnQuIFRoZSBob3RlbCB3aWxsIGJlIHVwZ3JhZGVkIHRvIGFjY29tbW9kYXRlIDEwIHBva2VyIG1hY2hpbmVzLiAKSGVyIGJyb3RoZXIuIApUaGV5IGFyZSBvZmZlcmVkIGJ5IGZyZWUgcG9rZXIgd2Vic2l0ZXMgYW5kIHBva2VyIGNvbW11bml0aWVzIG9uIHRoZSBuZXQuIApUaGV5IHNoaXAgZXZlcnl0aGluZyBpbiB0aG9zZSBiaWcsIG9idmlvdXMgYm94ZXMgc28gdGhlcmUgYSBoaWdoZXIgdGhhbiBub3JtYWwgY2hhbmNlIHRoYXQgY3VzdG9tcyBhZ2VudHMgd2lsbCBzcG90IGl0IGFuZCB5b3UgaGF2ZSB0byBwYXkgbW9yZSBiZWZvcmUgaXQgY2FuIGJlIGRlbGl2ZXJlZC4gVGhlcmUgbm8gbWluaW11bSB2YWx1ZSBmb3IgY3VzdG9tcyBvbiBjb3NtZXRpY3Mgd2hlcmUgSSBmcm9tLCBzbyB0aGUgY2hhcmdlIGlzIDIzJSBvZiB0aGUgdG90YWwgdmFsdWUgaW5jbHVkaW5nIHNoaXBwaW5nIHBsdXMgYSAxMCBwcm9jZXNzaW5nIGZlZS4gClNjaG5vb2RsZXMgbmVlZCB0aGVpciBleGVyY2lzZS4gVGFrZSB5b3VyIGRvZyBvdXQgZm9yIGEgZGFpbHkgc3Ryb2xsIG9yIGxldCBpdCBydW4gYXJvdW5kIGluIHlvdXIgeWFyZC4gCkFuZCB0aGF0IGlzIGp1c3Qgd2hhdCBtb3JlIHRpdGFuIDYwMCBFbHlyaWFucyBkaWQgeWVzdGVyZGF5IGF0IE5vcnRoIFJlY3JlYXRpb24nSWNlIHNrYXRpbmcgcmluay4gClRoaXMgY2FuIGVhc2lseSBzb290aGUgeW91ciB3aWZlJ3MgbWluZCBhcyB3ZWxsIGFzIGhlciBib2R5LiAKV2llIG1hbmlwdWxpZXJlIGljaCBkaWVzZW4gdW5kIHdpZSB2ZXJsZWl0ZSBpY2ggbWVpbmVuIEdlZ25lciB6dSBGZWhsZXJuLiAKTmljZSB0aG91Z2h0LCBidXQgSSB0aGluayB0aGF0IHdyb3VnaHQgd2l0aCBjb25zZXF1ZW5jZXMgd2UgZG9uIHdhbnQuIFRoZSByZWFsaXR5IGlzIHBvbGl0aWNpYW5zIHN0aWxsIG5lZWQgdG8gbGl2ZS4gSWYgeW91IGRvbiBwYXkgdGhlbSBhbnl0aGluZyBhdCBhbGwsIHRoZW4geW91IGFyZSByZXN0cmljdGluZyB5b3VyIHBvb2wgb2YgY2FuZGlkYXRlcyB0byBlaXRoZXIgdGhvc2Ugd2hvIGFyZSB3ZWFsdGh5IGVub3VnaCB0byBzdXN0YWluIHRoZW1zZWx2ZXMgd2l0aG91dCBhIHBheSBjaGVxdWUsIG9yIHRob3NlIHdobyBjYW4gbWFuYWdlIHRvIGdldCBzb21lIG90aGVyIG9yZ2FuaXphdGlvbiB0byBzcG9uc29yIHRoZW0uCkhhZCBhIHZlcnkgc2ltaWxhciBoYXBwZW4gdG8gbXkgZnJpZW5kIGFuZCBJLiBXZSB3ZXJlIHNoYXJpbmcgYSB0ZW50IHdoaWxlIG9uIGEgc2Nob29sIGNhbXBpbmcgdHJpcCBhbmQgd2UgYWx3YXlzIGRlY2lkZWQgdG8gZ28gZmFyIGZyb20gdGhlIHJlc3Qgb2YgdGhlIGdyb3VwIHNvIHdlIGNvdWxkIHRhbGsgd2l0aCBkaXN0dXJiaW5nIG90aGVycyBhdCBuaWdodC4gClRoZSB0ZXJtIGNpcyB3YXMgaW50cm9kdWNlZCB0byByZXBsYWNlIHRoZSB1c2FnZSBvZiAibm9ybWFsIiBvciAicmVndWxhciIgaW4gdGhlc2Ugc2l0dWF0aW9ucyB0byBiZSBtb3JlIGluY2x1c2l2ZSBvZiB0cmFucyBwZW9wbGUuIEluIHRoZSBzZW5zZSB0aGF0IGl0IGNvdWxkIGJlIGNvbnNpZGVyZWQgZGVtZWFuaW5nIHRvIGNvbnRyYXN0IGJlaW5nIHRyYW5zIHdpdGggYmVpbmcgbm9ybWFsLiAKRXZlciB3b25kZXJlZCB3aHkgUG9rZXIgUHJvbWluZW5jZSBjYXJkIFJORyBmZWx0IG9mZgpJIGRvbiBnZXQgd2h5IFdlbmdlciBpcyBhc3N1bWVkIHRvIGhhdmUgY29udHJvbCBvdmVyIHdhZ2UgYW5kIHRyYW5zZmVyIGJ1ZGdldHMuIApLZWVwcyB0aGUgc29hcCBmcm9tIGdldHRpbmcgZXZlcnl3aGVyZS4gCk9uZSBzdGlja3kgaXNzdWUgaXMgdGhhdCBhIGNvbXBldGl0b3IsIEJsYWNrUm9jaywgaGFzIGFscmVhZHkgY29tbWl0dGVkIHRvIDg0Niw5OTAgc3F1YXJlIGZlZXQgb24gdGhlIGxvd2VyIGJsb2NrIG9mIGZsb29ycywgYnV0IG9uZSBzb3VyY2UgZGlzbWlzc2VkIHRoYXQgYXMgYSBUaGUgMjFzdCBmbG9vciBpcyBhIGJ1aWxkaW5nIFNreSBMb2JieSBhbmQgYW1lbml0eSBjZW50ZXIgdGhhdCBpbmNsdWRlcyBtYXNzYWdlIHN0YXRpb25zLgpJdCB3aWxsIGFsc28gaGVscCB5b3UgaXNvbGF0ZSB0aGUgYW1hdGV1ciBwcm8uIApMZSAxNyBtYWkgMTk1MiwgUGF1bGkgY3JpdCAgbGUgSGllcm9zIEdhbW9zIChtYXJpYWdlIHNhY3IpIGRvbnQgdm91cyBwcmRpc2V6IGwgIChwLiAxMjgpLCBldCBsZSAyNyBmdnJpZXIgMTk1MywgZGFucyB1bmUgdHJzIGxvbmd1ZSBsZXR0cmUgcmFjb250YW50IHF1ZWxxdWVzIHJ2ZXMsIGlsIGNyaXQgOiAgbGUgSGllcm9zIEdhbW9zIHF1ZSB2b3VzIHZveWV6IHBvaW50ZXIgIGwgZG9pdCBhdXNzaSBhcHBvcnRlciBsYSBzb2x1dGlvbiAgY2UgcHJvYmxtZSBwc3ljaG9waHlzaXF1ZS4gIChwLiAKV2hpdGUgd2luZSBjaG9pY2VzIGhhdmUgZmluYWxseSBtb3ZlZCBiZXlvbmQgQ2hhcmRvbm5heSBhbmQgU2F1dmlnbm9uIEJsYW5jIG5vdCB0aGF0IHlvdSBzaG91bGQgcnVuIGZyb20gdGhlIHBvcHVsYXIgcGlja3MgYnV0IGEgY2hhbmdlIHVwIG9mIEl0YWxpYW4gd2hpdGVzIG9yIFNwYW5pc2ggQWxiYXJpbm9zLCBvciBSaG9uZSBzdHlsZSB3aGl0ZSBibGVuZHMgd291bGQgYWxsIGJlIGZpbmUgc3Vic3RpdHV0ZXMuIFNvIGlzIGFueSB3ZWxsIG1hZGUgUmllc2xpbmcuClRoZSBHcmVhdCBMZWFwIEZvcndhcmQgaGFkIGhvcnJpYmxlIHJlc3VsdHMgeWVzLCBidXQgdGhlIGZhbWluZXMgaXQgY2F1c2VkICh3aGVyZSBhIG1ham9yaXR5IG9mIGRlYXRocyBvY2N1cnJlZCkgd2VyZSB1bmludGVudGlvbmFsLiAKSSB1c2VkIHRvIHBsYXkgYSBsb3Qgb2Ygd3JhaXRoIEkgdXNlZCBpdCB0byBoZWxwICJzbmVhayIgbXkgZW5lbWllcyBhY3Jvc3Mgb3BlbiBhcmVhcy4gClRoZXkgc3luYXBzZSBvbiBuZXVyb25zIHdpdGhpbiB0aGUgc3BpbmFsIGNvcmQgc2VnbWVudCB0aGF0IHRoZXkgZW50ZXJlZCBhbmQgYWxzbyBvbiBuZXVyb25zIG9uZSB0byB0d28gc2VnbWVudHMgYWJvdmUgYW5kIGJlbG93IHRoZWlyIHNlZ21lbnQgb2YgZW50cnkuIApNZXQgb25lIGdpcmwgd2hpIHdhcyAzMCBhbmQgd2hvIHdlbnQgYWxsIG5pZ2h0IGxvbmcgZm9yIDEwMDAgcGVyIGRhdGUuIE5pY2UgdGl0cywgbG92ZWQga2lzc2luZywgYW5kIHJlYWxseSBzZXh1YWwgYW5kIHdldC4gCkRpZCBvbmUgYW5kIGl0IHdhcyB3aW5keSBhcyBmdWNrLiBGYWlsZWQgYmVjYXVzZSBJIGNvdWxkbiBzdGFuZCBvbiBvbmUgZm9vdC4gT2ZmaWNlciB0b2xkIG1lIGhlIHdhcyBzdXJlIGhlIHdhcyB0YWtpbmcgbWUgdG8gamFpbC4gQmxldyAwLjA2LiBIZSB0aGVuIHRvbGQgbWUgaGUgZGlkbiBrbm93IGhvdyBJIHdhcyBhYmxlIHRvIHBhc3MgYSBicmVhdGhhbHl6ZXIgYW5kIEkgbXVzdCBiZSBvbiBzb21ldGhpbmcuIFNvIGhlIG1hZGUgbWUgY2FsbCBhIGZyaWVuZCB0byBwaWNrIG1lIHVwLiBOZXZlciBiZWVuIHNvIHNjYXJlZCBpbiBteSBsaWZlLiBJIHNheSBpbiB0aGUgZnJvbnQgc2VhdCBvZiB0aGlzIGRlcHV0aWVzIGNhciBmb3IgdGhlIHRlbiBtaW51dGVzIHJlcXVpcmVkIHRvIGRvIHRoZSB0ZXN0IHdpdGggdGhlIEdlcm1hbiBTaGVwYXJkIGRvZyBnb2luZyBjcmF6eSBpbiB0aGUgYmFjay4gSSB3ZW50IGhvbWUgdG8gbXkgYmVkIHRoYXQgbmlnaHQuIEFuZCBub3cgSSBkb24gZHJpdmUgaWYgSSBiZWVuIGRyaW5raW5nIG1vcmUgdGhhbiBsaWtlIHR3byBiZWVycy4KQnV0IFRpbGx5IGtuZXcgYmV0dGVyLiAKT2J2aW91c2x5IGl0IHdhc24gdGhlIHNtYXJ0ZXN0IG1vdmUuIEkgbWVhbiwgaWYgaGUgd2FudGVkIHRvIG1ha2Ugc3VjaCBhIGNyaXRpcXVlIHRoZXJlIHdlcmUgYmV0dGVyIGFuZCBtb3JlIHN1YnRsZSB3YXlzLCBJIGd1ZXNzLiBJbiBhbnkgY2FzZSwgSSBhcG9sb2dpemUgZm9yIG91ciBpbmNvbXBldGVudCBsZWFkZXIuIF8KVGFrZSwgZm9yIGV4YW1wbGUsIHRoZSByZWNlbnQgY2FzZSBpbnZvbHZpbmcgYW4gT250YXJpbyBhY2NvdW50YW50IHdobyB3YXMgZW1wbG95ZWQsIGZ1bGwgdGltZSwgYnkgYSBsb2NhbCBtdW5pY2lwYWxpdHkgZnJvbSBNYXJjaCAyMDA1IHRocm91Z2ggTWF5IDMxLCAyMDA3LCBhcyBpdHMgdHJlYXN1cmVyLCBjaGllZiBmaW5hbmNpYWwgb2ZmaWNlciBhbmQgdWx0aW1hdGVseSwgYXMgY2hpZWYgYWRtaW5pc3RyYXRpdmUgb2ZmaWNlci4gCkxvdmUgMyBURHMgbGVhZCBTdGFuZm9yZCBwYXN0IE5vLiA5IFdhc2hpbmd0b24gMzAgMjJXYXNoaW5ndG9uIHYgU3RhbmZvcmRQQUxPIEFMVE8sIENBICAgTk9WRU1CRVIgMTA6IEJyeWNlIExvdmUgMjAgb2YgdGhlIFN0YW5mb3JkIENhcmRpbmFsIGJyZWFrcyBhd2F5IGZyb20gVml0YSBWZWEgNTAgb2YgdGhlIFdhc2hpbmd0b24gSHVza2llcyBhdCBTdGFuZm9yZCBTdGFkaXVtIG9uIE5vdmVtYmVyIDEwLCAyMDE3IGluIFBhbG8gQWx0bywgQ2FsaWZvcm5pYS4gCkkgYWxzbyBncmV3IHVwIGluIE1pbm5lc290YSwgc3BlY2lmaWNhbGx5IHRoZSBXYXl6YXRhIGRpc3RyaWN0LiBJIGhhdmUgbm8gaWRlYSB3aGF0IHNvcnQgb2YgZGVhbCB3aXRoIHRoZSBkZXZpbCB0aGUgZGlzdHJpY3QgZGlkLCBidXQgdGhleSBtdXN0IGhhdmUgcGFpZCBhIHByZW1pdW0gZm9yIHBsb3cgcm91dGVzIHRvIGJlZ2luIHdpdGggV2F5emF0YSBidXMgcm91dGVzLgpCYXR0ZXJlZCBieSBtZW50YWxseSBjcnVzaGluZyB2aXNpb25zIG9mIHBlcmZlY3QgZmVtYWxlIGZvcm0gYW5kIGhhdGVmdWwgbW9ja2luZyB3b3JkcyBvZiBsb2dpYywgd2lsbCBzaGUgc3Vydml2ZSB0aGUgbmlnaHQ/LiAKT25jZSB0aGUgaW5ncmVkaWVudHMgYXJlIHJlYWR5IHRvIGdvIHRoaXMgY2FuIGJlIHB1dCB0b2dldGhlciB3aXRoIGVhc2UuIApXaGVuIEZyZWVsYW5kIGxhdGVyIGFwcGVhcmVkIGF0IGEgcHJlc3MgY29uZmVyZW5jZSBhdCB0aGUgQ2FuYWRpYW4gRW1iYXNzeSwgaG93ZXZlciwgaXQgd2FzIGFzIGlmIHRoZSBkYXkgd2FzIGFsbCBodW5reSBkb3J5LgpUaGUgZmlyc3QsIGZvciB0aGUgZmlsbSBCaWlkYWFiYW46IEZpcnN0IExpZ2h0LCB0YWtlcyB0aGUgdmlld2VyIGludG8gYW4gYWx0ZXJuYXRlIFRvcm9udG8sIHJlY2xhaW1lZCBieSBuYXR1cmUgYW5kIGFzIHNlZW4gdGhyb3VnaCB0aGUgbGVucyBvZiBJbmRpZ2Vub3VzIEZ1dHVyaXNtLiBUaGUgc2Vjb25kLCBmb3IgSG9tZXN0YXksIGV4cGxvcmVzIHRoZSByZWFsaXRpZXMgb2YgQ2FuYWRpYW4gZmFtaWxpZXMgaG9zdGluZyBpbnRlcm5hdGlvbmFsIHN0dWRlbnRzIGluIHRoZWlyIGhvbWVzLi4gCkFub3RoZXIgb3B0aW9uIGlzIHRvIGFwcGx5IGZvciBmZWRlcmFsbHkgZnVuZGVkIGZpbmFuY2lhbCBhaWQuIENoZWNrIHRvIHNlZSBpZiB5b3VyIHNjaG9vbCBhY2NlcHRzIHRoaXMgdHlwZSBvZiBhaWQgYW5kIGZpbGwgb3V0IHRoZSBGcmVlIEFwcGxpY2F0aW9uIGZvciBGZWRlcmFsIFN0dWRlbnQgQWlkIChGQUZTQSkuIFRoaXMgaXMgdGhlIHNhbWUgZm9ybSB1c2VkIGJ5IHRyYWRpdGlvbmFsIGZvdXIgeWVhciBzY2hvb2xzLiAKVGhlIGdhbWUgb2YgaGVhcnRzIGlzIHBsYXllZCB3aXRoIGZvdXIgcGVvcGxlIGFuZCB0aGUgd2lubmVyIGlzIHRoZSBwZXJzb24gd2l0aCB0aGUgbG93ZXN0IHNjb3JlIHdoZW4gc29tZW9uZSByZWFjaGVzIDEwMCBwb2ludHMuIEhlcmUgYXJlIHNvbWUgc3RyYXRlZ2llcyB0byBiZSB0aGF0IGxvd2VzdCBwZXJzb24uCkluIGRlciBhYmdlbGF1ZmVuZW4gTkhMIFNhaXNvbiBmYW5kIGVyIGltIEFic2NobHVzcyB6dSBhbHRlciBTdCB6dXIgMzAgVG9yZSB1bmQgMzMgVm9ybGFnZW4gd3VyZGVuIGluIDgyIEhhdXB0cnVuZGVuIFBhcnRpZW4gZ2V6IEVzIHdhciBkYXMgendlaXRlIE1hbCBpbiBzZWluZXIgS2FycmllcmUsIGRhc3MgZXIgZGllIE1hcmtlIHZvbiAzMCBUcmVmZmVybiBrbmFja3RlLiAKV2hlbiBJIHNoYXJlZCBhIGhvdXNlIGluIEJhdGggc29tZSB5ZWFycyBhZ28sIHRoZXJlIHdhcyBhIHJlc2lkZW50IGZlbGluZSB0aGF0IGhhZCBhIGRvZyBsaWtlIG9ic2Vzc2lvbiB3aXRoIHR1bW15IHRpY2tsZXMuIApaYW1ib25pIENvLiwgSW5jLiAyMDE4LiBBbGxlIFJlY2h0ZSB2b3JiZWhhbHRlbi4gCkR5bmFtaXF1ZSBldCBwdWduYWNlLCBsaXNhYmV0aCBDYXJ0ZXJvbiwgbGUgdmVyYmUgaGF1dCBldCBsZSBjb250YWN0IHBhcmZvaXMgcnVndWV1eCwgcydlc3QgZW5nYWdlIGRhbnMgc29uIHF1YXJ0aWVyIG1haXMgYXVzc2kgYXVwcnMgZGUgbCdBc3NlbWJsZSBkZXMgZmVtbWVzIGQnSWxlIGRlIEZyYW5jZSwgYXNzb2NpYXRpb24gcmdpb25hbGUgcXVpIGEgcG91ciBvYmplY3RpZiBkZSBwcm9tb3V2b2lyIGxhIHBhcml0IGRhbnMgZGVzIGxpZXV4IGRlIGRjaXNpb24gcG9saXRpcXVlIGV0IGRlIGRmZW5kcmUgbGVzIGRyb2l0cyBkZXMgZmVtbWVzLiBQb3VyIEFjdGlvbiBCYXJiZXMsIGVsbGUgYXZhaXQgbCdvYmplY3RpZiBhbWJpdGlldXggZCdhbWxpb3JlciBsZSBjYWRyZSBkZSB2aWUgZGVzIGhhYml0YW50cyBkdSBxdWFydGllciBhdXRvdXIgZHUgY2FycmVmb3VyIEJhcmJzLCBhdXggY29uZmlucyBkZSB0cm9pcyBhcnJvbmRpc3NlbWVudHMgdm9pc2lucyA6IDE4ZSwgOWUgZXQgMTBlLCBkZSBsYSBnYXJlIGRlIGwnRXN0ICBsYSBydWUgUmFtZXkgZW4gcGFzc2FudCBwYXIgbGEgR291dHRlIGQnb3IsIHNhbnMgb3VibGllciBsZSBib3VsZXZhcmQgUm9jaGVjaG91YXJ0LiAgSWwgeSBlbiBhIGV1IGRlcyBkb3NzaWVycywgYmVhdWNvdXAgZCdpbXBvcnRhbnRzIGRvc3NpZXJzIHBvdXIgY2UgcXVhcnRpZXIgIHR1ZGllciwgIGZhaXJlIGF2YW5jZXIsICBkaXNjdXRlciBhdmVjIHRyb2lzIG1haXJpZXMgZGlmZnJlbnRlcywgY2UgcXVpIGNvbXBsaXF1ZSBiaWVuIGRlcyBjaG9zZXMgLCBwcmNpc2UgdCBlbGxlLgpJZiB5b3UgYXJlIGluIHRvIGFyY2FkZSBnYW1lcywgUXVhcnRlcnMgaXMgdGhlIG9ubHkgYXJjYWRlL2JhciBJIGtub3cgb2YgYXJvdW5kIGhlcmUuIApIYWhhaGEuLiAKUmljaGFyZCB3YXMgYSBsb25nIHRpbWUgZWR1Y2F0b3IgKDM1IHllYXJzKSBpbiBMYW1idG9uIENvdW50eSwgcmVzcGVjdGVkIGJ5IGNvbGxlYWd1ZXMgYW5kIHN0dWRlbnRzLiAKRXJpYyBOb2JsZSwgcHJlc2lkZW50IG9mIFRoZSBDYXIgTGFiIGNvbnN1bHRpbmcgZmlybSBpbiBPcmFuZ2UsIENhbGlmLiwgc2VlcyBUb3lvdGEgYXMgdGhlICI4MDAgcG91bmQgZ29yaWxsYSBvZiBoeWJyaWQgdGVjaG5vbG9neS4iIEhlIGJlbGlldmVzIFRveW90YSB3aWxsIGhhdmUgYSBsb2NrIG9uIGxpY2Vuc2luZyBpdHMgaW50ZWxsZWN0dWFsIHByb3BlcnR5LiBMaWNlbnNpbmcgdGhlIHRlY2hub2xvZ3kgZnJvbSBUb3lvdGEgaXMgInNtYXJ0ZXIgdGhhbiBwYXJhbGxlbCBjb21wZXRpbmcgZGV2ZWxvcG1lbnQsIGVzcGVjaWFsbHkgd2hlbiBubyBvbmUgY2FuIGtlZXAgdXAgaW4gc3BlbmRpbmcgd2l0aCBUb3lvdGEsIiBOb2JsZSBhZGRzLiAKVEw7RFI6IGFueSByZWd1bGF0aW9uIHRoYXQgc2luZ2xlcyBvdXQgcmVsaWdpb3VzIG9yZ2FuaXphdGlvbnMgZm9yIHNwZWNpYWwgdHJlYXRtZW50IGlzIHN1c3BlY3QuIElmIGl0IHBvc2l0aXZlIHRyZWF0bWVudCwgaXQgcG90ZW50aWFsbHkgYW4gRXN0YWJsaXNobWVudCBDbGF1c2UgdmlvbGF0aW9uLiBJZiBpdCBuZWdhdGl2ZSB0cmVhdG1lbnQsIGl0IHBvdGVudGlhbGx5IGEgRnJlZSBFeGVyY2lzZSB2aW9sYXRpb24uIApDYXN0aW5nIHRoZSBuZXQgd2lkZUFkaXR5YSBpcyBub3QgdGhlIG9ubHkgSW5kaWFuIHRvIGJlIHRyYXZlbGxpbmcgdGhlIHdvcmxkLCBwbGF5aW5nIGFuZCB3aW5uaW5nIGF0IHBva2VyLiBBIEphbnVhcnkgMjAxNSBhcnRpY2xlIG9uIFBva2VyIEd1cnUsIGEgd2Vic2l0ZSBvbiB0aGUgZ2FtZSBpbiBJbmRpYSwgbGlzdGVkIHNldmVyYWwgInlvdW5nIGd1bnMiIHdobyBiZWVuIHRvIFZlZ2FzIHRvIHBsYXkgaW4gV1NPUCBpbmNsdWRpbmcgU2FoaWwgQWdhcndhbCwgYSAyNyB5ZWFyIG9sZCBJVCBlbmdpbmVlciBmcm9tIEJodWJhbmVzd2FyIGVtcGxveWVkIHdpdGggSW5mb3N5cywgUmFhaGlsIEJoYXRpYSBmcm9tIEZhcmlkYWJhZCBhbmQgRHl1dGlkaGFyIFN1cmVzaCBmcm9tIEJhbmdhbG9yZS4gCkRhbmEgUG9pbnQgVG91cmlzbURhbmEgUG9pbnQgSG90ZWxzRGFuYSBQb2ludCBCZWQgYW5kIEJyZWFrZmFzdERhbmEgUG9pbnQgVmFjYXRpb24gUmVudGFsc0RhbmEgUG9pbnQgVmFjYXRpb24gUGFja2FnZXNGbGlnaHRzIHRvIERhbmEgUG9pbnREYW5hIFBvaW50IFJlc3RhdXJhbnRzVGhpbmdzIHRvIERvIGluIERhbmEgUG9pbnREYW5hIFBvaW50IFRyYXZlbCBGb3J1bURhbmEgUG9pbnQgUGhvdG9zRGFuYSBQb2ludCBNYXBEYW5hIFBvaW50IFRyYXZlbCBHdWlkZUFsbCBEYW5hIFBvaW50IEhvdGVsc0RhbmEgUG9pbnQgSG90ZWwgRGVhbHNMYXN0IE1pbnV0ZSBIb3RlbHMgaW4gRGFuYSBQb2ludEhvdGVscyBuZWFyIE1vbmFyY2ggQmVhY2ggUmVzb3J0QnkgSG90ZWwgVHlwZURhbmEgUG9pbnQgRmFtaWx5IEhvdGVsc0RhbmEgUG9pbnQgQnVzaW5lc3MgSG90ZWxzRGFuYSBQb2ludCBTcGEgUmVzb3J0c0RhbmEgUG9pbnQgQmVhY2ggSG90ZWxzUm9tYW50aWMgSG90ZWxzIGluIERhbmEgUG9pbnREYW5hIFBvaW50IEx1eHVyeSBIb3RlbHNEYW5hIFBvaW50IFJlc29ydHNEYW5hIFBvaW50IEdyZWVuIEhvdGVsc0J5IEhvdGVsIENsYXNzNSBzdGFyIEhvdGVscyBpbiBEYW5hIFBvaW50NCBzdGFyIEhvdGVscyBpbiBEYW5hIFBvaW50MyBzdGFyIEhvdGVscyBpbiBEYW5hIFBvaW50QnkgSG90ZWwgQnJhbmRCZXN0IFdlc3Rlcm4gSG90ZWxzIGluIERhbmEgUG9pbnRQb3B1bGFyIEFtZW5pdGllc0RhbmEgUG9pbnQgSG90ZWxzIHdpdGggUG9vbHNQZXQgRnJpZW5kbHkgSG90ZWxzIGluIERhbmEgUG9pbnRQb3B1bGFyIERhbmEgUG9pbnQgQ2F0ZWdvcmllc1N1aXRlIEhvdGVscyBpbiBEYW5hIFBvaW50V2VkZGluZyBIb3RlbHMgaW4gRGFuYSBQb2ludERhbmEgUG9pbnQgSmFjdXp6aSBTdWl0ZSBIb3RlbHNEYW5hIFBvaW50IENoZWFwIFBldCBGcmllbmRseSBIb3RlbHNEYW5hIFBvaW50IEJlYWNoIFNwYSBSZXNvcnRzRGFuYSBQb2ludCBCZWFjaCBTcGEgSG90ZWxzRGFuYSBQb2ludCBQZXQgRnJpZW5kbHkgQmVhY2ggSG90ZWxzRGFuYSBQb2ludCBCZWFjaCBTdWl0ZSBIb3RlbHNEYW5hIFBvaW50IENsZWFuIEhvdGVsc0RhbmEgUG9pbnQgSG90ZWxzIHdpdGggQmFsY29uaWVzTmVhciBMYW5kbWFya3NIb3RlbHMgbmVhciBNaXJhdmFsSG90ZWxzIG5lYXIgTWlyYXZhbCBMaWZlIGluIEJhbGFuY2UgU3BhSG90ZWxzIG5lYXIgTW9uYXJjaCBCZWFjaCBHb2xmIExpbmtzSG90ZWxzIG5lYXIgU2FsdCBDcmVlayBCZWFjaEhvdGVscyBuZWFyIERhbmEgUG9pbnQgTGlicmFyeUhvdGVscyBuZWFyIEVjbyBBZHZlbnR1cmUgQ2VudGVyIGF0IFRoZSBSaXR6IENhcmx0b24sIExhZ3VuYSBOaWd1ZWxIb3RlbHMgbmVhciBUaGUgUml0eiBDYXJsdG9uIFNwYSwgTGFndW5hIE5pZ3VlbEhvdGVscyBuZWFyIFNlYSBDYW55b24gUGFya0hvdGVscyBuZWFyIFNlYSBUZXJyYWNlIFBhcmtOZWFyIFRyYWluIFN0YXRpb25zSG90ZWxzIG5lYXIgU2FuIEp1YW4gQ2FwaXN0cmFubyBTdGF0aW9uSG90ZWxzIG5lYXIgTGFndW5hIE5pZ3VlbCAvIE1pc3Npb24gVmllam8gU3RhdGlvbkhvdGVscyBuZWFyIFNhbiBDbGVtZW50ZSBQaWVyIFN0YXRpb25OZWFyIEFpcnBvcnRzSm9obiBXYXluZSBBaXJwb3J0IEhvdGVsc09udGFyaW8gSW50bCBBaXJwb3J0IEhvdGVsc0xvbmcgQmVhY2ggTXVuaWNpcGFsIEFpcnBvcnQgSG90ZWxzTmVhciBDb2xsZWdlc0hvdGVscyBuZWFyIFNva2EgVW5pdmVyc2l0eSBvZiBBbWVyaWNhSG90ZWxzIG5lYXIgU291dGggT3JhbmdlIENvdW50eSBDb21tdW5pdHkgRGlzdHJpY3RIb3RlbHMgbmVhciBTYWRkbGViYWNrIENvbGxlZ2VIb3RlbHMgbmVhciBMYWd1bmEgQ29sbGVnZSBvZiBBcnQgYW5kIERlc2lnbkhvdGVscyBuZWFyIE1hcmluZWxsbyBTY2hvb2xzIG9mIEJlYXV0eUhvdGVscyBuZWFyIEFsbGllZCBBbWVyaWNhbiBVbml2ZXJzaXR5QWxsIERhbmEgUG9pbnQgUmVzdGF1cmFudHNSZXN0YXVyYW50cyBuZWFyIE1vbmFyY2ggQmVhY2ggUmVzb3J0QWxsIHRoaW5ncyB0byBkbyBpbiBEYW5hIFBvaW50VGhpbmdzIHRvIGRvIG5lYXIgTW9uYXJjaCBCZWFjaCBSZXNvcnRUcmF2ZWwgR3VpZGVzQXBwc0NydWlzZXNHcmVlbkxlYWRlcnNSb2FkIFRyaXBzCkZyb20gRmFjZWJvb2sgVGhlIGJlc3Qgd2F5IHRvIGdldCBsb2FkcyBvZiBwb2tlciBjaGlwcyBvbiBmYWNlYm9vayBpcyB0byBhc2sgb3RoZXIgcGxheWVycyB0byBkb25hdGUgdGhlaXIgY2hpcHMgdG8geW91IG9yIGJ1eSB0aGVtIGZyb20gdmFyaW91cyBzaXRlcyB3aGljaCBtYXkgYmUgdW50cnVzdHdvcnRoeS4gT25lIHdheSB0byBnZXQgZnJlZSBmYWNlYm9vayBwb2tlciBjaGlwcyB3b3VsZCBiZSB0by4gV0lOIHRoZW0hIFllcywgdGhlIGdhbWUgbm93IGdpdmVzIGEgbG90IG1vcmUgY2hhbmNlcyB0byB3aW4gcG9rZXIgY2hpcHMsIGFuZCBhIGxvdCBtb3JlIHRoYW4gYmVmb3JlLiAKSVQgV0FTIEEgRkFOVEFTVElDIERFQ0lTSU9OISBJdCB0b29rIGEgbGl0dGxlIHRpbWUgZm9yIHRoZSBndWlsdCB0byBzdWJzaWRlLCBidXQgaG9uZXN0bHkgaXQgaW1wcm92ZWQgYm90aCBvZiBvdXIgbGl2ZXMgc28gbXVjaC4gSG9uZXN0bHkgYXQgdGhpcyBwb2ludCwgaXQgZG9lc24gbWF0dGVyLiAKRXNwZWNpYWxseSBpZiBpdCB3YXMgcGFpcmVkIHdpdGggc29tZXRoaW5nIHRoYXQgd291bGQgaW1wcm92ZSBhY2Nlc3MgdG8gdm90aW5nL21ha2Ugdm90aW5nIGVhc2llci4gClBhcnRzIGFyZSBub3QganVzdCBhIHNjcmlwdC4gUGFydHMsIHRoZXkgYXJlIHBpZWNlcyBvZiBhIGJpZyBzdG9yeSBzbyBteSBjdXJpb3NpdHkgZXh0ZW5kcyBpbnRvIHRoZSBzdG9yeS4gSSBsb3ZlIGxlYXJuaW5nLkkga25vdyBvbmUgb2YgeW91ciBiZXN0IGZyaWVuZHMsaW4gcmVhbCBsaWZlLCBhbmQgSSBub3RpY2UgeW91IGFyZSB2ZXJ5IHByb3RlY3RpdmUgb2YgeW91ciBmcmllbmRzIGFuZCBmYW1pbHksIGlzIHRoYXQgYSBuYXR1cmFsIHRoaW5nIHRvIHlvdT9UaGF0J3Mgc29tZXRoaW5nIEkgbmV2ZXIga25ldyBhYm91dCBteXNlbGYgdW50aWwgcmVjZW50bHkuIApUaGUgcHJvcG9zYWwgd291bGQgbGVnYWxpemUgY2FzaW5vcyBpbiBCb29uZSwgTWlsbGVyIGFuZCBXYXNoaW5ndG9uIGNvdW50aWVzIGZvciB0aHJlZSBjb21wYW5pZXMgb3duZWQgYnkgc3VwcG9ydGVycyBvZiB0aGUgYW1lbmRtZW50LiBUaGUgY29tcGFuaWVzIHdvdWxkIGhhdmUgdGhlIHJpZ2h0IHRvIHRyYW5zZmVyIHRoZSBsaWNlbnNlcyBmb3IgdGhlIGNhc2lub3MuIFRoZSBncm91cCBiZWhpbmQgdGhlIGluaXRpYXRpdmUgaGFzIHRvdXRlZCB0aGUgcHJvcG9zYWwgYXMgYSB3YXkgdG8gYm9vc3QgdG91cmlzbSBhbmQgam9icyBmb3IgdGhlIHN0YXRlLgpMb3ZlR2FtZSB3YXMgaW5pdGlhbGx5IHBsYW5uZWQgdG8gYmUgdGhlIDNyZCBzaW5nbGUgZnJvbSB0aGUgYWxidW0gYnV0IGR1ZSB0byBBdXN0cmFsaWEgYmFubmluZyB0aGUgY29udHJvdmVyc2lhbCB2aWRlbyBhbmQgbHlyaWNzLCBHYUdhIGRlY2lkZWQgdG8gY2hhbmdlIHRoZSBJcmlzaCBzaW5nbGUgcmVsZWFzZSB0byBQYXBhcmF6emkgLiAKV2UgZ290IGEgYmV0dGVyIHJldHVybiB0b28sIGFuZCBEIFJ1c3NlbGwgd2FzIHNlZW4gYXMgYSBsb2NrZXJyb29tIGNhbmNlciAvIGxhenkgYXQgdGhlIHRpbWUuIApHcmFiIGEgZmV3IGZyaWVuZHMgdG8gZ28gYmlrZSByaWRpbmcsIHNrYXRlYm9hcmRpbmcsIG9yIHRvIGp1c3QgZ2V0IG91dHNpZGUgYW5kIHBsYXkgaW4gdGhlIHBhcmsuWzEzXS4gCkRyLiBTdXNhbiBTYWx2byBpcyBhIG1hc3NhZ2UgdGhlcmFwaXN0IHdobyB3b3JrcyB3aXRoIG1hc3NhZ2UgdGhlcmFwaXN0cyBhbmQgc3R1ZGVudHMgdG8gcHJvbW90ZSBiZXN0IHByYWN0aWNlcy4gU3VzYW4ga25vd3MgdGhhdCBlZHVjYXRpb24gYW5kIHJlc2VhcmNoIGFyZSB0aGUgbW9zdCBlZmZlY3RpdmUgd2F5cyB0byBhZHZhbmNlIHRoZSBwcm9mZXNzaW9uLiBTaGUgdGVhY2hlcyxpcyBhY3RpdmVseSBpbnZvbHZlZCBpbiByZXNlYXJjaCwgYW5kIGhhcyB3cml0dGVuIHR3byB3aWRlbHkgdXNlZCB0ZXh0Ym9va3M6IE1hc3NhZ2UgVGhlcmFweTogUHJpbmNpcGxlcyBhbmQgUHJhY3RpY2UgYW5kIE1vc2J5IFBhdGhvbG9neSBmb3IgTWFzc2FnZSBUaGVyYXBpc3RzLiBTdXNhbiBoYXMgYmVlbiBob25vcmVkIHdpdGggbnVtZXJvdXMgYXdhcmRzIGFuZCBmcmVxdWVudGx5IHByZXNlbnRzIGF0IGNvbmZlcmVuY2VzIGFuZCBjb252ZW50aW9ucyBhY3Jvc3MgdGhlIGNvdW50cnkuIFN1c2FuIGhhcyBhIGRvY3RvcmF0ZSBpbiBlZHVjYXRpb24gZnJvbSBMYW1hciBVbml2ZXJzaXR5LgpBbSBJIGNyYXp5IHRvIHRoaW5rIHRoYXQgaXQgbW9yZSBza2V0Y2h5IHRoYXQgdGhpcyBoYXBwZW5lZCBkdXJpbmcgdGhlIHBvbGFyIHZvcnRleCB3aGVuIGl0IHdhcyAgMjAgZGVncmVlcyBvdXRzaWRlPyBXaGVuIHRoZSBjaXR5IGhhcyBzaHV0IGRvd24gc2Nob29scyBhbmQgcHVibGljIHRyYW5zcG9ydGF0aW9uIChpaXJjKSBpbiB0aGUgZGF5cyBzdXJyb3VuZGluZyB0aGUgZXZlbnQgYmVjYXVzZSBpdCB3YXMgc3ViIHplcm8gb3V0c2lkZT8gV2hvIHRoZSBmdWNrIGlzIG91dHNpZGUgd2Fsa2luZyBhcm91bmQgd2l0aCBhIGJvdHRsZSBvZiBibGVhY2ggaW4gdGhvc2UgY29uZGl0aW9ucz8gV2hvIHRoZSBmdWNrIHNlZXMgdGhlIG1lcmN1cnkgZGlwIGJlbG93IDAgYW5kIHRoaW5rIHRoYXQgdGhlIHBlcmZlY3QgdGltZSB0byBjb21taXQgYSBoYXRlIGNyaW1lPyBUaG9zZSBhcmUgdGhlIHBvaW50cyB0aGF0IG1hZGUgbWUgcXVlc3Rpb24gdGhpcy4KT25lIGFsdGVybmF0aXZlIHN5c3RlbSwgTGlxdWlkbmV0LCB3YXMgbGF1bmNoZWQgaW4gMjAwMiB0byBzZXJ2ZSBjbGllbnRzIHN1Y2ggYXMgcGVuc2lvbnMgYW5kIG11dHVhbCBmdW5kcy4gSXQgbGltaXRzIHRyYWRpbmcgdG8gYSBncm91cCBvZiBhcHByb3ZlZCBwYXJ0aWNpcGFudHMgYW5kIGJhcnMgZGVhbGVycyB3aG8gY291bGQgbGVhayBzZWNyZXRzLiBBbmQgaXQgcGVybWl0cyB0cmFkaW5nIGF0IHByaWNlcyB0aGF0IGluY2x1ZGUgZnJhY3Rpb25zIG9mIGEgcGVubnksIGEgc2lnbmlmaWNhbnQgYmVuZWZpdCB0byBhbnlvbmUgdHJhZGluZyBtaWxsaW9ucyBvZiBzaGFyZXMuIApUaGUgcmlja3NoYXcgZHJpdmVycyBhdCB0aGUgc3RhdGlvbiB3ZXJlIGVzcGVjaWFsbHkgYWdncmVzc2l2ZSBhbmQgd2UgaGFkIHRvIGZpZ2h0IG91ciB3YXkgdGhyb3VnaCB0aGVtIHRvIHdhbGsgdG8gYSBwaG9uZSBodXQgYW5kIGNhbGwgdGhlIGhvdGVsLiBUaGV5IGZpbmFsbHkgcGlja2VkIHVzIHVwIGFuZCB3ZSBnb3QgYSBmZXcgbW9yZSBob3VycyBvZiBzbGVlcC4uIAoiVGhlIGZvbGtzIHRoYXQgd2VyZSBydW5uaW5nIHRoaXMgaWxsaWNpdCBnYW1pbmcgaG91c2UgbGFzdCBuaWdodCAgIHRoZWlyIG1vbmV5IGdvZXMgdG8gZnVuZCB0aGVpciBpbGxpY2l0IGFjdGl2aXRpZXMsIGluY2x1ZGluZyBodW1hbiB0cmFmZmlja2luZyBhbmQgcHJvc3RpdHV0aW9uLCIgRmlubiBzYWlkLgpBIHBlcnNvbmFsaXR5IGlzIGEgY29tYmluYXRpb24gb2YgdmlzaWJsZSBhbmQgaW52aXNpYmxlIGNoYXJhY3RlcmlzdGljcywgdHJhaXRzIGFuZCBhdHRyaWJ1dGVzLi4gCkVzcGVjaWFsbHkgd2l0aCByZWdhcmQgdG8gZXhwZW5zaXZlIG5laWdoYm9yaG9vZHMsIGJ1eWluZyBhc3NldCBtYXkgc2hvdWxkIGhhdmUgYSBHb2xkZW4gR29vc2UgU3VwZXJzdGFyIFdvbWVucyBTbmVha2VycyBBdXN0cmFsaWEgU3RvY2tpc3RzIHJvcGVydHkgdG8gc3VibWl0IHRvIHN1YnN0YW50aWFsIHJlZ3VsYXRpb25zIGhvdyBHb2xkZW4gR29vc2UgQXVzdHJhbGlhIGhlaXIgb3duIG9yIGhlciBob21lIHR5cGljYWxseSBpcyB0byBnZW5lcmFsbHkgYmUgbWFpbnRhaW5lZCBhbmQgYWZ0ZXIgdGhhdCB0cmVhdGVkLiBTb21lIHNvcnQgb2YgaG9tZW93bmVycycgb3JnYW5pemF0aW9uIHVzdWFsbHkgaGFzIGdvdCBzdWNoIHJlZ3VsYXRpb25zLiAKUHJvYmFibHkgdGhlIHZpZGVvIGNhcmQuIEkgaGF2ZSBhbiBvbGRlciBjb21wdXRlciB0aGF0IGRvZXNuJ3QgZnJlZXplIGZvciBkYXlzIC4gV2Vla3MuIApOb3cgSSBrbm93LiBJIHdhcyBhYmxlIHRvIHNhdmUgbW9uZXkgYW5kIGhvYXJkIGNhc2ggYXQgYSBwYWNlIEkgaGFkIG5ldmVyIGV4cGVyaWVuY2VkLiAKU2VlLCB0aGV5IGNvdWxkIGdvIGluLCBidXkgYSBob3VzZSwgYW5kIGFjdHVhbGx5IHBheSBsZXNzIHRoYW4gdGhlIGludGVyZXN0IG9uIHRoZSBsb2FuLiAKNiwgMTkxOSBpbiBDb2JhbHQsIE9udGFyaW8sIEhhemVsIG1vdmVkIHRvIEtpcmtsYW5kIExha2UgYXMgYSB5b3VuZyBnaXJsLCBhdHRlbmRlZCBLTENWSSwgd29ya2VkIGF0IHRoZSBUZWxlcGhvbmUgQ29tcGFueSwgVEJTIERlcHQgU3RvcmUsIE1hcnkncyBMYWRpZXMgV2VhciwgYW5kIEpvYW4ncyBEcmVzcyBTaG9wLiAKVGhvdWdoIHBlcmVubmlhbCBmcm9udCBydW5uZXIgUGV0aXQgTW91Y2hvaXIgaXMgaW4gdGhpcyByYWNlLCBpdCBzZWVtcyBtb3JlIGxpa2VseSB0aGF0IFRvbWJzdG9uZSB3aWxsIG1ha2UgdGhlIHBhY2UuClRydXRoIGlzLCBpZiB5b3UgYSBnb29kIGRyaXZlciwgYW5kIGlmIGdvb2QgZHJpdmVycyBhcmUgc2NhcmNlIHRoZXJlLCB5b3VyIG1hbmFnZXIgcHJvYmFibHkgd29uIGZpcmUgeW91IGZvciB0ZWxsaW5nIGhpbS9oZXIgeW91IGNhbiBkbyBpdC4gVGhleSBiZSBwaXNzZWQsIG1heWJlIGV2ZW4gaGF2ZSBhIG1pbm9yIHBhbmljIGF0dGFjayBsb2wsIG9yIGN1dCB5b3VyIGhvdXJzIGJhY2ssIGJ1dCBnb29kIHBlb3BsZSBhcmUgZGVmaW5pdGVseSBoYXJkIHRvIGNvbWUgYnksIGFuZCBleHBlbnNpdmUgdG8gdHJhaW4uIApEZWFyIGJyb3RoZXIgdG8gUGF0cmljaWEgU2F1bmRlcnMgKE1pa2UpLiBQcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cyBKb3NlcGggYW5kIEthdGhsZWVuIGFuZCBieSBoaXMgYnJvdGhlcnMgSm9zZXBoIGFuZCBNaWNoYWVsLiBIZSB3aWxsIGJlIGRlYXJseSBtaXNzZWQgYnkgYWxsIGhpcyBleHRlbmRlZCBmYW1pbHkgYW5kIG1hbnkgZnJpZW5kcy4gCklmIHlvdXIga25lZXMgYXJlbiB0cmFja2luZyBvdXQgaW4gdGhlIHNhbWUgZGlyZWN0aW9uIGFzIHlvdXIgdG9lcywgeW91IGF0IHJpc2sgZm9yIGluanVyeS4gClNoZSBoYWQgY2hhbmdlZCBoZXIgZHJlc3MgdG8gYSBicm93biBmaWd1cmVkIG11c2xpbiwgd2hpY2ggc3RyZXRjaGVkIHRpZ2h0IG92ZXIgaGVyIHJhdGhlciB3aWRlIGhpcHMgYXMgVG9tIGhlbHBlZCBoZXIgdG8gdGhlIHBsYXRmb3JtIGluIE5ldyBZb3JrLiBBdCB0aGUgbmV3cyBzdGFuZCBzaGUgYm91Z2h0IGEgY29weSBvZiBUb3duIFRhdHRsZSBhbmQgYSBtb3ZpbmcgcGljdHVyZSBtYWdhemluZSwgYW5kIGluIHRoZSBzdGF0aW9uIGRydWcgc3RvcmUgc29tZSBjb2xkIGNyZWFtIGFuZCBhIHNtYWxsIGZsYXNrIG9mIHBlcmZ1bWUuIFVwIHN0YWlycywgaW4gdGhlIHNvbGVtbiBlY2hvaW5nIGRyaXZlIHNoZSBsZXQgZm91ciB0YXhpY2FicyBkcml2ZSBhd2F5IGJlZm9yZSBzaGUgc2VsZWN0ZWQgYSBuZXcgb25lLCBsYXZlbmRlciBjb2xvcmVkIHdpdGggZ3JheSB1cGhvbHN0ZXJ5LCBhbmQgaW4gdGhpcyB3ZSBzbGlkIG91dCBmcm9tIHRoZSBtYXNzIG9mIHRoZSBzdGF0aW9uIGludG8gdGhlIGdsb3dpbmcgc3Vuc2hpbmUuIApBbHRlcm5hdGl2ZWx5LCBzb21lIHRhY3RpY2FsIGF0aGxldGVzIGhhdmUgZGVzayBqb2JzLCBidXQgYXJlIHN0aWxsIHJlcXVpcmVkIHRvIHBhc3MgcmVndWxhciBwaHlzaWNhbCBmaXRuZXNzIGFzc2Vzc21lbnRzLiBUaGVzZSBpbmRpdmlkdWFscyBhcmUgbGlrZWx5IHRvIGhhdmUgcHJvYmxlbXMgYXNzb2NpYXRlZCB3aXRoIGRlc2sgYm91bmQgcHJvZmVzc2lvbnMgYW5kIHByb2JsZW1zIGFzc29jaWF0ZWQgd2l0aCBzdWRkZW4gaW5jcmVhc2VzIGluIHBoeXNpY2FsIGFjdGl2aXR5IHRvIHByZXBhcmUgZm9yIGZpdG5lc3MgdGVzdHMsIHdoaWNoIG1heSBsZWFkIHRvIG92ZXJ1c2UgaW5qdXJpZXMuCkhvdXJzIG9mIG9wZXJhdGlvbiBhcmUgTW9uZGF5IHRocm91Z2ggRnJpZGF5IGZyb20gODowMCBhbSB0byA1OjAwIHBtLi4gCkJvcmt5Ym9ya3lib3JrICAyIHBvaW50cyAgc3VibWl0dGVkIDI3IGRheXMgYWdvCkhhbmQgNTogSSBob25lc3RseSB0aG91Z2h0IGFib3V0IGNoZWNraW5nIHRoaXMgYmFjayBvbiB0aGUgcml2ZXI7IG9uIHRoZSB0dXJuIEkgd2FzIGhvcGluZyBoZSBoYWQgQTUgb3IgQTQgc28gSSBkaWRuJ3QgdGhpbmsgdGhlIHJpdmVyIHdhcyB0b28gZ3JlYXQgZm9yIHVzLiBCdXQgSSB0cnkgdG8ga2VlcCBteXNlbGYgZnJvbSB0aGlua2luZyBzaGl0IGxpa2UgIndlbGwgdGhpcyBpcyB0aGUgd29yc3QgZnVsbCBob3VzZSBJIGNhbiBoYXZlIHNvIEkgaGF2ZSB0byBjaGVjayIsIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgdGhlIHN0YWNrIHNpemUuIEkgc2hvdmUsIGhlIHRhbmtzIGZvciBhIHNvbGlkIHR3byBtaW51dGVzIHNvIEknbSBwb3NpdGl2ZSBJJ20gZ29vZCBhbmQgaGUgZmluYWxseSBzaWdocywgdGhyb3dzIGhpcyBzdGFjayBpbiwgc2F5cyAiQVEgaXMgZ29vZCIgYW5kIHNob3dzIG1lIEE1LiAKT3ZlcnZpZXcgZm9yIHhXb2xmcGFsYWRpbgpUcmlua2V0LiBObyBlZmZlY3QsIGJ1dCBmb25kIG1lbW9yaWVzIGNvbWZvcnQgdHJhdmVsZXJzLgozMCBhbnMgYXBycywgamUgbWUgc291dmllbnMsIGplIG1lIHJhcHBlbGxlLCBjZXR0ZSBmaWxsZSBkYW5zIG1hIGNoYW1icmUgZGUgYm9ubmUsIGNvdXRhbnQgYXZlYyBtb2ksIG1haXMgcG91cnF1b2kgZG9uYyA/LCB1biBkaXNxdWUgZGUgRnJhbmsgWmFwcGEuCk1heWJlIGEgYmV0dGVyIHF1ZXN0aW9uIHdvdWxkIGJlLCB3aHkgZG8gbWFueSBoZXJlIG5vdCBzZWUgdGhpcyBhcyAiQ2hpbGRyZW4gYXJlIGlkZWFsLCBidXQgc29tZXRpbWVzIG1lZGljYWwgaXNzdWVzIG9yIGV4dHJlbWUgc29jaWFsIGlzc3VlcyByZXF1aXJlIGEgbm9uIGlkZWFsIHNvbHV0aW9uIiB2cyB3aGF0IHNlZW1zIHRvIGJlICJhYm9ydGluZyBhIHByZWduYW5jeSBpcyBva2F5IHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLCBldmVuIGlmIHlvdSBqdXN0IGNoYW5nZSB5b3VyIG1pbmQsIGluIG9yZGVyIHRvIHByZXNlcnZlIHRoZSBpZGVhbCBvZiBwZXJzb25hbCBhdXRvbm9teSI/ClNvIGlmIDUgbW9udGhzIGZyb20gdG9kYXkgaXMgQXVndXN0IDgsIHlvdSBjYW4gYm9vayBmcm9tIEF1Z3VzdCA4IHVudGlsIEF1Z3VzdCAyOC4gCkFib3V0IDQwJSBvZiBib3RoIExpYmVyYWwgYW5kIE5EUCBzdXBwb3J0ZXJzIGlkZW50aWZ5IHRoZSBvdGhlciBwYXJ0eSBhcyB0aGVpciBzZWNvbmQgY2hvaWNlIGJ1dCBvbmx5IDEzJSBvZiBMaWJlcmFsIHN1cHBvcnRlcnMgYW5kIDglIG9mIE5EUCBzdXBwb3J0ZXJzIHdvdWxkIGNvbnNpZGVyIHZvdGluZyBDb25zZXJ2YXRpdmUuIApUaGlzIGlzbiBzdHJpY3RseSByZWxhdGVkIHRvIHRoZSBicmFuZCBpdHNlbGYsIGJ1dCBJIHJlY2VudGx5IGRpc2NvdmVyZWQgdGhhdCBDb3N0Y28gaGFzIGEgU2NvdHRpc2ggYnJhbmNoIGluIEVkaW5idXJnaC4gRm9yIG1lICAgYW4gQW1lcmljYW4gICBmaW5kaW5nIHRoYXQgc3RvcmUgd2FzIGxpa2UgZGlzY292ZXJpbmcgYSBzbWFsbCBwaWVjZSBvZiBob21lLiAKQ3VycmVudCBwYXRjaCBpbiBNUCBJIGNhbiBvbmx5IHBsYXkgNDAwIHN0YXIgYW5kIGV2ZW4gdGhlbiBpdCBnZXRzIHNsb3dlciBsYXRlciBvbi4gCkxpbmRzYXkgTG9oYW4gbWlzdGFrZW4gZm9yIFBva2VyIGZhY2VkIExhZHkgR2FnYQpXZSBtdXN0IHJlcXVpcmUgbG9jYWwgcmVzaWRlbmN5IGJ5IGxhbmRsb3Jkcy4gTm9uZSBvZiB0aGlzIENhbGlmb3JuaWEgbGFuZGxvcmRzIGZvciBJbmRpYW5hIGhvbWUgcmVudGFscy4gCk1rYW4geW9rIGJpbGl5b3J1bSBhbWEgbHRmZW4gYmlyaSBiZW5pIEthZGlyIE1zcm9sdSBOaWhhdCBIYXRpcG9sdSBOaWhhdCBEb2FuIEJhbGllayBsdGVyIEFobWV0IEhha2FuIE9yaGFuIEdlbmNlYmF5IEh1bHVzaSBBa2FyIEZldGh1bGxhaCBHbGVuIFRya2l5ZSBhbHNuLCBiZW5pIERhcmlvIE1vcmVubyBUdXJhbiBEdXJzdW4gRnVhdCBLcHJsIGJyYWhpbSBhbGwgTmloYWwgQXRzeiBLYXptIEthcmFiZWtpciBOYXptIEhpa21ldCBGaWtyZXQgS3psb2sgTWV0aW4gT2t0YXkgVGFuanUgT2thbiB2ZSBlbiBuZW1saXNpIE11c3RhZmEgS2VtYWwgVHJraXllIGdlcmkgZ3Ryc24uIEx0ZmVuLiBCYW5hIGxrZW1pIGdlcmkgdmVyaW4uIApMb3ZldGhlYmxhemVyICAyMzQgcG9pbnRzICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvClN1bW1hcnkgb2YgQmFja2dyb3VuZCBEYXRhLiBTcGluYWwgdHJhY3Rpb24gaXMgYSBjb25zZXJ2YXRpdmUgdHJlYXRtZW50IGZvciBkaXNjIGRpc29yZGVycy4gVGhlIHJlY29nbml6ZWQgYmlvbWVjaGFuaWNhbCBiZW5lZml0cyBpbmNsdWRlIGRpc2MgaGVpZ2h0IHJlY292ZXJ5LCBmb3JhbWVuIGVubGFyZ2VtZW50LCBhbmQgaW50cmFkaXNjYWwgcHJlc3N1cmUgcmVkdWN0aW9uLiBIb3dldmVyLCB0aGUgaW5mbHVlbmNlIG9mIHRyYWN0aW9uIHRyZWF0bWVudCBvbiBhbnVsdXMgbWljcm9zdHJ1Y3R1cmUsIG1vbGVjdWxhciB0cmFuc3BvcnRhdGlvbiBhbmQgY2VsbCB2aWFiaWxpdHkgb2YgZGVncmFkZWQgZGlzY3MgaGFzIG5vdCBiZWVuIGZ1bGx5IGludmVzdGlnYXRlZC4KV2VsbCwgaXQgaXMgcG9zc2libGUgdG8gY29uc3RydWN0IGEgaGFuZCB3aGVyZSBvbmUgZ3V5IGlzIGFoZWFkLCBidXQgZHJhd2luZyBkZWFkIG9uIHRoZSB0dXJuIChoZSBoYXMgbm8gY2hhbmNlIHRvIHdpbiB0aGUgaGFuZCBvdXRyaWdodCB3aGF0c29ldmVyKS4gRm9yIGluc3RhbmNlLCBjdXJyZW50IGxlYWRlciBoYXMgNzIsIGhlcm8gaGFzIDY1LCBib2FyZCBpcyA0NDMzLiAycyBhbmQgN3MgbWFrZSBhIHN0cmFpZ2h0LCA2cyBhbmQgNXMgbWFrZSBhIGJldHRlciB0d28gcGFpciBhbmQgZXZlcnl0aGluZyBlbHNlIGlzIGEgY2hvcC4KQnV0LCB3ZSB3ZXJlIHRhbGtpbmcgYWJvdXQgcmVjb3Jkcy4gQW5kIHRoZW4gSSBnb3QgdGhlIGNhbGwuIEFuZCBJIGtlZXAgbm90IGdldHRpbmcgdG8gdGhlIHBvaW50LCBzbyBoZXJlIGl0IGlzLCBteSBpbnRlcmVzdGluZyBmYWN0IGFib3V0IG15c2VsZjogaGVyIG5hbWUgd2FzIExhdXJlbi4uIApUaGlzIHByYWN0aWNlIHRoYXQgeW91ciBpbiBuZXR3b3JrIHByb3ZpZGVyIGlzIHBhcnRpY2lwYXRpbmcgaW4gaXMgY2FsbGVkIGJhbGFuY2UgYmlsbGluZy4gQmFsYW5jZSBiaWxsaW5nIGlzIGhpZ2hseSBhZ2FpbnN0IHRoZSBsYXcgYW5kIGlzIGFjdGVkIHVwb24gdmVyeSBzd2lmdGx5IGJ5IHlvdXIgc3RhdGUncyBpbnN1cmFuY2UgY29tbWlzc2lvbi4gQ2FsbCB5b3VyIHByb3ZpZGVyIGFuZCBzdGF0ZSB0aGF0IHlvdSB3aWxsIG5vdCBwYXkgdGhlIGJhbGFuY2UgYXMgaXQgaXMgYmFsYW5jZSBiaWxsaW5nIGFuZCBpZiB0aGV5IHJlZnVzZSB0byBkcm9wIHRoZSBiYWxhbmNlIG5vdGlmeSB0aGVtIHlvdSB3aWxsIGJlIGNvbnRhY3RpbmcgdGhlIGluc3VyYW5jZSBjb21taXNzaW9uLiAKQ2hyaXN0aW5hIG1vdmVkIHRvIHRoZSBVUyBhbmQgd2FzIGZvciBhIHdoaWxlIGluIGEgcmVsYXRpb25zaGlwIHdpdGggYW5vdGhlciB3b21hbiBpbiBUZXhhcy4gCkl0IGZlZWxzIGxpa2UgeW91IGRvaW5nIHNvbWV0aGluZyB3cm9uZyB3aGVuIHRoYXQgaXNuIHlvdXIgc3RvcnksIGFuZCBzb2NpZXR5IG5ldmVyIHRhbGtzIGFib3V0IHRoZSByZWFsaXR5IHRoYXQgbG93IGZlcnRpbGl0eSBvciBpbmZlcnRpbGUgd29tZW4gZXhwZXJpZW5jZS4uIApUaGV5J3JlIG1vcmUgZWZmaWNpZW50IGNvbXBhcmVkIHRvIHNtb2tpbmcuIFRoZSBiYXNlKHdoYXQgeW91IHNlZSBpbiBPUHMgcGljdHVyZSkgc2hvb3RzIGhvdCBhaXIgdXAgaW50byB0aGUgY2hhbWJlciB3aGVyZSB0aGUgd2VlZCBpcyB3aGljaCB2YXBvcml6ZXMgaXQgYW5kIHRoZSBjaGFtYmVyIGlzIGF0dGFjaGVkIHRvIGEgYmlnIGJhZyB3aGljaCBmaWxscyB1cCB3aXRoIHRoZSB2YXBvcih0aGluayBiYWxsb29uIHdpdGggYSBub3p6bGUgb24gaXQpLiBBZnRlciBpdCBmaWxscyB1cCB5b3UgdW5jbGlwIGl0IGZyb20gdGhlIGNoYW1iZXIgYW5kIGNsaXAgaXQgaW50byB0aGUgbW91dGhwaWVjZSBhbmQgeW91IHRha2UgZHJhd3MgZnJvbSB0aGUgYmFnIHVudGlsIGl0J3MgZW1wdHkgb2YgdmFwb3Igb3IgeW91ciB0b28gaGlnaCB0byBoaXQgaXQgYW55bW9yZSBjYXVzZSB0aGlzIGFsd2F5cyBwdXRzIG1lIG9uIG15IGFzcyBsb2wuCk5vIG1hdHRlciB3aGF0IHRoZSBzdWIgc2F5cywgSSB0aGluayB0aGlzIHJvc3RlciByZWFsbHkgaGFzIHBvdGVudGlhbCwgZXNwZWNpYWxseSB3aXRoIHRoZSBzdWJzLiAKVGhpcyBpcyBoZWxwZnVsIGZvciBzZWxmIGRlZmVuc2Ugb3IgTGF3IGVuZm9yY2VtZW50IGZvciB0d28gbWFpbiByZWFzb25zLiAKIkkgdGhpbmsgdGhlIGxlc3NvbnMgbGVhcm5lZCBpbiB0aGUgKHJlY2Vzc2lvbikgYXJlIHRoYXQgeW91IGNhbid0IGJ1eSB3b3JrIG9yIHRha2UgbG93IG1hcmdpbiB3b3JrLiAKU3RyaXAgcG9rZXIgaGFzIGJlZW4gd2l0aCB1cyBmb3IgYWdlcywgYW5kIGNvbnRyYXJ5IHRvIHBvcHVsYXIgYmVsaWVmLCBzdHJpcCBwb2tlciBpcyBvcmlnaW5hbGx5IG5vdCBhIHNlbnN1YWwsIGVyb3RpYyBnYW1lLiAKSGUgYXBwZWFyZWQgb24gdGhlIHByb2dyYW0gYXQgdGhlIGNvbnZlbnRpb24gd2l0aCBhIHRhbGsgaW4gd2lpaWNoIGhlIHBvaW50ZWQgb3V0IHRoYXQgdGhlIHRyZW5kIGluIGx1YnJpY2F0aW9uIGlzIHRvd2FyZCBhIG1vcmUgdmVyc2F0aWxlIHByb2R1Y3QuIE5vdywgaGUgc2FpZCwgc2luZ2xlIGdyZWFzZXMgd2lsbCBkbyBzZXZlcmFsIGpvYnMgd2hlcmUgZm9ybWVybHkgZGlmZmVyZW50IGx1YnJpY2FudHMgd2VyZSByZXF1aXJlZC4gSGVtbWluZ3dheSBoYXMgYmVlbiBjaGFpcm1hbiBvZiBhIGNvbW1pdHRlZSB0byBkZXZlbG9wIGEgcHJhY3RpY2UgZm9yIHRoZSBsdWJyaWNhdGlvbiBvZiBmcm9udCB3aGVlbCBhdXRvbW9iaWxlIGJlYXJpbmdzLiAKSSB3YXNuJ3QgZGlzYXBwb2ludGVkLiBBIGZldyBmZWxsb3cgY2xhc3NtYXRlcyBhbmQgSSBzcGVudCB0aGUgZmFsbCBGcmlkYXlzIG9mIG91ciBmaXJzdCB5ZWFyIGRyaXZpbmcgdG8gTmV3IFlvcmsgKGFnYWluc3QgU2Nob29sIHdpc2hlcykgdG8gcG91bmQgb24gdGhlIGRvb3JzIG9mIHdoYXRldmVyIHRyYWRpbmcgZmxvb3IgbWlnaHQgbGV0IHVzIGluLiBXZSB3ZXJlIG9sZGVyIHN0dWRlbnRzIHdobyBoYWRuJ3Qgd29ya2VkIGluIGZpbmFuY2UsIHNvIHdlIHdhbnRlZCBhbiBlZGdlLiAKSnVzdCBsaWtlIFRBIGFuZCBtdWx0aWZpZHVzIGluIHRoZSBiYWNrLCB0aGUgYWx0ZXJlZCBtdXNjbGUgYWN0aXZhdGlvbiBpcyBhIHJlc3VsdCBvZiB0aGUgcGFpbiwgbm90IHRoZSBjYXVzZSwgYW5kIHlvdSBqdXN0IG5lZWQgdG8gZ2xvYmFsbHkgc3RyZW5ndGhlbiB0aGUgbXVzY2xlcyB0byBtYWtlIGEgZGlmZmVyZW5jZSAoaW4gdGhlIGNhc2Ugb2YgVk1PLCBqdXN0IHN0cmVuZ3RoZW4gdGhlIHF1YWRzIGluIGdlbmVyYWwhKSA0IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQnVsbGl3eWYgIDg3MSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkZJTEUgICBJbiB0aGlzIEFwcmlsIDExLCAyMDE4LCBmaWxlIHBob3RvIEZhY2Vib29rIENFTyBNYXJrIFp1Y2tlcmJlcmcgYXJyaXZlcyB0byB0ZXN0aWZ5IGJlZm9yZSBhIEhvdXNlIEVuZXJneSBhbmQgQ29tbWVyY2UgaGVhcmluZyBvbiBDYXBpdG9sIEhpbGwgaW4gV2FzaGluZ3Rvbi4gWnVja2VyYmVyZydzIG5ldyAicHJpdmFjeSBmb2N1c2VkIHZpc2lvbiIgZm9yIEZhY2Vib29rIGxvb2tzIGxpa2UgYSB0cmFuc2Zvcm1hdGl2ZSBtaXNzaW9uIHN0YXRlbWVudCBmb3IgdGhlIG11Y2ggY3JpdGljaXplZCBzb2NpYWwgbmV0d29yay4gQnV0IGNyaXRpY3Mgc2F5IHRoZSBhbm5vdW5jZW1lbnQgb2JzY3VyZXMgRmFjZWJvb2sncyBkZWVwZXIgbW90aXZhdGlvbnM6IFRvIGV4cGFuZCBsdWNyYXRpdmUgbmV3IGNvbW1lcmNpYWwgc2VydmljZXMsIGNvbnRpbnVlIG1vbm9wb2xpemluZyB0aGUgYXR0ZW50aW9uIG9mIHVzZXJzIGFuZCB0byBkZXZlbG9wIG5ldyBkYXRhIHNvdXJjZXMgZm9yIHRyYWNraW5nIHBlb3BsZS4gClllYXJzIEkgaGF2ZSBkeWVkIG1pbmUgcmFkaWNhbGx5IGRpZmZlcmVudCBjb2xvcnMgYXMgYSBzb3J0IG9mIHNvY2lhbCBleHBlcmltZW50ICB0cnlpbmcgdG8gZGlzcnVwdCB0aGUgbm90aW9uIHRoYXQgYW55b25lIGhhcyAibmF0dXJhbGx5IiBicmlnaHQgYmxvbmQgaGFpciBieSBkeWluZyBpdCBkYXJrIGJyb3duIHRoZSBuZXh0IHRpbWUsIG9yIHJlZCwgb3Igc3RyYXdiZXJyeSBibG9uZC4gSSBsZWFybmVkIGlzIHRoYXQgaWYgbXkgaGFpciBpcyBibG9uZGVyIHRoYW4gImRhcmsgYmxvbmQiIHBlb3BsZSB0cmVhdCBtZSBkaWZmZXJlbnRseSAgYXMgaWYgSSBzdHVwaWQgb3IgYSBjaGlsZC4gClRoZSBzd2ltbWVycyBmb3IgdGhlIEJvdWxkZXIgUGFudGhlcnMgaGF2ZSBwdXQgaW4gdGhlIHRpbWUsIHdvcmsgYW5kIGRldGVybWluYXRpb24gdG8gYmUgb25lIG9mIHRoZSBiZXN0IGF0IHRoZSBzdGF0ZSBtZWV0LgpTYWZldHkgYW5kIFdlbGxiZWluZyBIU1cgRkFRcwpUaGF0IGEgbG90IG9mIHRoZWlyIHlvdW5nIGxpdmVzIHRoZXkgc3BlbnQgdG9nZXRoZXIuVGhhdCBjaGFuZ2VzIGNvbWUgU2F0dXJkYXkuIFRoZXJlIG1pZ2h0IGJlIGFuIGFsbCBzdGFyIGdhbWUgb3IgdHdvIGFzIHRoZSB5ZWFyIHdpbmRzIGRvd24gYnV0LCBhZnRlciBTYXR1cmRheSwgdGhlIHRyaW8gYWxsIHN0YXJ0IG5hcnJvd2luZyB0aGVpciBmb2N1cyBvbiB0aGVpciBuZXh0IHRlYW1zLlJvd2VsbCwgYSBwb2ludCBndWFyZCwgaXMgaGVhZGluZyB0byBQaG9lbml4IHRvIGpvaW4gdGhlIEdyYW5kIENhbnlvbiBBbnRlbG9wZXMsIHdoaWxlIGZvcndhcmRzIFRheWxvciBhbmQgV2lzb3R6a2kgd2lsbCBzdGljayBjbG9zZXIgdG8gaG9tZSBhZnRlciBzaWduaW5nIG9uIHdpdGggdGhlIFRyaW5pdHkgV2VzdGVybiBTcGFydGFucyBhbmQgU0ZVIENsYW4sIHJlc3BlY3RpdmVseS5iZSBhIGxvdCBvZiBrZWVwaW5nIHRyYWNrIG9mIGVhY2ggb3RoZXIgdGVhbXMuIFdlIGJlIEZhY2VUaW1pbmcgYSBsb3QuIApEZSBsZWVyZG9lbGVuIHdvcmRlbiBnZWtvcHBlbGQgYWFuIGRlIGNvbXBldGVudGllZ2ViaWVkZW4gZW4gZXIgd29yZHQgZ2VrZWtlbiBuYWFyIGRlIGJlbm9kaWdkZSBzdGFwcGVuL21pZGRlbGVuIG9tIGRlIGxlZXJkb2VsZW4gdGUgYmVoYWxlbi4uIAoiT3VyIGF2ZXJhZ2UgYWdlIGZvciB5b3VuZyBnYW1lcnMgaXMgYXJvdW5kIDI2IHllYXJzLCIgaGUgc2FpZC4KTWlkYXNwICAxNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpBbHNvLCBwbGVhc2UgZG9uIHNwcmF5IGFib3V0IGV0aGljcy4gVGhlc2UgYXJlIGp1c3QgWU9VUiBldGhpY3MgYW5kIEkgZG9uIHdhbnQgdG8ga25vdyB0aGVtLiBJIHRyeWluZyB0byBzdGF5IHB1cmUgYW5kIG9uc2lnaHQgbXkgY29uY2VwdHVhbCBmcmFtZXdvcmsgZm9yIHdoYXQgY29uc3RpdHV0ZXMgR29vZCBTdHlsZSBjbGltYmluZy4gSGF2aW5nIGFkdmFuY2Uga25vd2xlZGdlIG9mIGNvbW11bml0eSBzdGFuZGFyZHMgcmVhbGx5IHJ1aW5zIG15IGFiaWxpdHkgdG8gZGV2ZWxvcCBteSBvd24gdGhpbmcgaGVyZS4gSSBkb24gd2FudCB0byByZWRwb2ludCBzb21lb25lIGVsc2UgY2xpbWJpbmcgY3VsdHVyZSwgSSB3YW50IHRvIHB1dCB1cCBhIGZpcnN0IGFzY2VudCBpbiBteSBmdXR1cmlzdGljIG9sZCBzY2hvb2wgc3lzdGVtIG9mIGJlaW5nLiBZb3VyIHJhbnQgdGFrZXMgbWUgb3V0IG9mIG15IGZsb3cgc3RhdGUuCldlIGhhdmUgYSBmYW1pbHkgbWVtYmVyIGJhYnlzaXR0aW5nLCBzbyBvdXIgcGxhbiBpcyB0byBlYXQgYW4gZWFybHkgZGlubmVyIHdpdGggdGhlIGZhbWlseSBiZWZvcmUgd2UgaGVhZCBvdXQuIApMYWR5IEdhR2EpLiBUaGlzIHNvbmcgaXMgYXZhaWxhYmxlIG9uIHRoZSBzb3VuZHRyYWNrIGNhbGxlZCAiR25vbWVvIGFuZCBKdWxpZXQiIGFuZCB0aHVzIGlzIG9uIGlUdW5lcy4gNTQgOTIpIEFsbCB0aGUgc29uZ3MgbGlzdGVkIGhlcmUgYXJlICJVbnJlbGVhc2VkLiIgWW91IGNhbiBmaW5kIHRoZW0gb24gWW91dHViZTogQW5pbWFsLCBLYWJvb20gKGZlYXQuIExhZHkgR2FHYSksIFd1bmRlcmxhbmQgKGZlYXQuIExhZHkgR2FHYSksIExldCBMb3ZlIERvd24sIEJsdWViZXJyeSBLaXNzZXMsIFJlZCBBbmQgQmx1ZSwgUmV0cm8gUGh5c2ljYWwsIFJvY2sgU2hvdywgU2Vjb25kIFRpbWUgQXJvdW5kLCBTZXh5IFVnbHksIEdsaXR0ZXIgQW5kIEdyZWFzZSAoQXJvdW5kKSwgTm8gRmxvb2RzLCBSaWJib25zLCBPaCBXZWxsLCBGdXR1cmUgTG92ZSAoTGl2ZSksIE91dCBPZiBDb250cm9sIChzaG9ydCBkZW1vKSwgV29yZHMsIFdvbmRlcmZ1bCwgV2lzaCBZb3UgV2VyZSBIZXJlLCBTaGFrZSBZb3VyIEtpdHR5LCBTb21ldGhpbmcgQ3JhenksIEZpbHRoeSBQb3AsIEZhbmN5IFBhbnRzLCBGZXZlciwgRGlydHkgSWNlIENyZWFtLCBLYW5keSBMaWZlLCBGb29sZWQgTWUgQWdhaW4gKEhvbmVzdCBFeWVzKSwgUmVsb2FkZWQsIENhcHRpdmF0ZWQgRWxlY3RyaWMgS2lzcywgTGl2aW5nIE9uIFRoZSBSYWRpbywgU3BpbiBVIEFyb3VuZCAoZmVhdC4gCk5vdCBzdXJlIHdoYXQgeWVhciBpdCB3YXMgYnV0IHN0dWR5aW5nIHRoaXMgd2hlbiBJIHdhcyBnZXR0aW5nIG15IGVudmlyb25tZW50YWwgc2NpZW5jZSBkZWdyZWUgd2FzIHZlcnkgaW50ZXJlc3RpbmcuIFNjaWVudGlzdCBlc3RpbWF0ZSwgYXQgY3VycmVudCB0ZWNobm9sb2dpZXMsIHRoYXQgdGhlIHdvcmxkIGNhbiBzdXN0YWluIGFyb3VuZCA4IHRvIDIwIGJpbGxpb24gcGVvcGxlICh5ZXMgSSBrbm93IHRoaXMgaXMgYSBodWdlIGdhcCkuIApKYW1lcyBNY01hbnVzIGRlc2NyaWJlcyBzb21lIGluIGhpcyBib29rIG9uIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgKEkgZm91bmQgdGhhdCBsaW5rIHVzaW5nIGdvb2dsZSBib29rIHNlYXJjaCB3aGlsZSByZXNlYXJjaGluZyB0aGlzIGFzaywgYnR3LiAKIlRoaXMgaXMgbm90IGxpa2VseSB0aGUgbGFzdCB0aW1lIHlvdSdsbCBzZWUgQmVuIEFmZmxlY2sgYXQgb25lIG9mIG91ciBmaW5hbCB0YWJsZXMsIiBzYWlkIHNwb2tlc3dvbWFuIE5hbmN5IEZyaWVkbWFuLiAiSGUgaGFzIGJlY29tZSBhIHJlc3BlY3RlZCBtZW1iZXIgb2YgdGhlIHBva2VyIGVsaXRlIGFuZCBjb250aW51ZXMgdG8gd29yayB0byBpbXByb3ZlIGhpcyBnYW1lLiIKT2Z0ZW4sIHRoZSBwb2tlciBmYW5hdGljcyBhcmUgYWxzbyB0aGUgdHJpY2sgcGxheWVycywgYnV0IHBva2VyIGNoaXAgdHJpY2tzIGhhdmUgc3VycGFzc2VkIHRoZSBtZXJlIHBva2VyIGdhbWUuIFRoZXJlIGFyZSBldmVuIHBva2VyIGNoaXAgdHJpY2sgdG91cm5hbWVudHMgaW4gdGhlIFVTIS4gCkkgaGFkIHRvIGxlYXJuIG11Y2ggbW9yZSB0aGFuIEkgd2FudGVkIGFib3V0IEFuZHJvaWQuIEJ1dCBpbnN0YWxsZWQgVFdSVCBhbmQgTE9TIGFuZCBteSBwaG9uZSB3YXMgYmFzaWNhbGx5IHJlYWxseSBhbWF6aW5nLiAKQWt0dWVsbCBmaHJ0IEp1bWVpcmFoIDE5IEhvdGVscy4gClNoZSBwbGFjZWQgNDFzdCBvbiBCaWxsYm9hcmQncyAnVG9wIEFydGlzdHMgb2YgdGhlIERlY2FkZScgbGlzdC4uIApUaGlzIHNlZW1zIHRvIGhhdmUgY29zdCBoZXIgdGhlIGNvbnRlc3QuIFBlcmV6IGFkbWl0cyBzaGUgd2FzIHRoZSBmcm9udCBydW5uZXIgdXAgdW50aWwgdGhlbiBhbmQgdGhhdCB0aGUgcXVlc3Rpb24gY29zdCBoZXIgYSBsb3QuIApNYWtlIHN1cmUgeW91ciBwYXJ0bmVyIGlzIG5vdCBpbnRveGljYXRlZC4gSWYgdGhleSBhcmUgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBkcnVncyBvciBhbGNvaG9sIHRvIHRoZSBwb2ludCB0aGV5IGFyZSBub3QgY29oZXJlbnQgb3IgaW5jYXBhY2l0YXRlZCB0aGVuIGFueSBjb25zZW50IHdvdWxkIG5vdCBiZSB2YWxpZC4KSSB0aGluayBWUi9BUiBpcyBzbyBhZHZhbmNlZCBhbmQgc29waGlzdGljYXRlZCB0aGF0IGlmIHlvdSBub3QgYWxyZWFkeSBkb2luZyBzb21ldGhpbmcgcmlnaHQgbm93IChvciBoYXZlIGEgcGFydG5lcnNoaXAgd2l0aCBzb21lb25lIHdobyBpcykgeW91IHRvbyBmYXIgYmVoaW5kLiAKV2hhdCBhYm91dCBhIG9mZmljZSB3b3JrZXIgcmVjZWl2aW5nIG5vIHBheWNoZWNrIGZvciBiZWluZyBvZmYgdGhlaXIgZ2FtZS4gCkZvciBleGFtcGxlLCBJIGhhdmUgYSBuaWVjZSBhbmQgbmVwaGV3IGFuZCBpZiBteSBzaXN0ZXIgYW5kIGJybyBpbiBsYXcgd2VyZSBraWxsZWQgaW4gZnJlYWsgYWNjaWRlbnQgSSB3b3VsZCBnbGFkbHkgdGFrZSBvbiB0aGUgZHV0eSBvZiByYWlzaW5nIG15IG5pZWNlIGFuZCBuZXBoZXcgc28gaW4gdGhhdCBzZW5zZSBJIGFtIG5vdCBhICJoYXJkIG5vIiBhbHRob3VnaCBpbiB0ZXJtcyBvZiBldmVyeSBkYXkgbGlmZSBJIGFtLi4gCkkgaGF2ZSBjb25mbGljdGluZyBlbW90aW9ucyBhYm91dCB0aGVpciByZWxhdGlvbnNoaXAuIEJlY2F1c2Ugb24gdGhlIG9uZSBoYW5kLCB0aGV5IGFzIGEgY291cGxlIHdoZXJlIHRoZSB0eXBlIG9mIGNvdXBsZSB0aGF0IHJlbWVtYmVyZWQgdG8gaGF2ZSBmdW4sIHRoYXQgc3VwcG9ydGVkIGVhY2ggb3RoZXIgaW5kZXBlbmRlbmNlIGFuZCB0aGF0IGFsd2F5cyB0cmllZCB0byBmaW5kIGhvYmJpZXMgdG8gc2hhcmUgYW5kIGJvbmQgb3Zlci4gVGhleSB3ZXJlIGEgcG93ZXIgY291cGxlIGFuZCBvbiB0aGUgc3VyZmFjZSBpbmNyZWRpYmx5IGZ1biBhbmQgaGFwcHkuIApNaXJ6eWEsIHRoYXQgcmVsZWFzZXMgdG9kYXksIHdpbGwgaW50cm9kdWNlIHR3byBuZXcgZmFjZXMgaW4gdGhlIGluZHVzdHJ5IEhhcnNodmFyZGhhbiBLYXBvb3IgYW5kIFNhaXlhbWkgS2hlci4gCkl0IG1hZGUgbWUgd29yayBoYXJkZXIgYW5kIEkgYWxzbyBnb3QgbWVudG9ycyB0byB0ZWFjaCBtZS4gCkZvcmdpdmVuZXNzIGRvZXNuIG1lYW4gdHJ1c3Qgb3IgaWdub3JpbmcgYW4gaXNzdWUuIApDYWxsaW5nIG9uIHRoZSB0dXJuIHNlZW1zIG9rIGFzIHBsYXllZC4KSGVyIHdlZGRpbmcgd2FzIGhlbGQgYXQgdGhlIEJvcmdpYSBQYWxhY2UgaW4gR2FuZGlhLCBTcGFpbi4gSGVyIGJyaWRhbCBwb3J0cmFpdHMgdGFrZW4gYXQgWGF0aXZhIENhc3RsZS4gSSBrbm93LCB0aGluZ3MgbGlrZSB0aGlzIGFyZSBhbHdheXMgc2FpZCBhYm91dCBzb21lb25lIHdobyBoYXMgcGFzc2VkLCBidXQgRXJpbiB3YXMgdHJ1bHkgYSB2ZXJ5IHNwZWNpYWwgaHVtYW4gYmVpbmcsIG9uZSBJIHdhcyBhbmQgY29udGludWUgdG8gYmUgdmVyeSBwcm91ZCB0byBoYXZlIGtub3duLiAKVHJpc3RhbiBUemFyYSdzIERhZGFpc3QgUG9ldHJ5IEVuZ2luZQoxNCwgMjAxMyBXaGVuIGl0J3MgeW91ciB0dXJuIHRvIGFjdCBhdCB0aGUgcG9rZXIgdGFibGUgICBpdCdzIHRoZSBtb21lbnQgZm9yIGNsYXJpdHksIGZvciB3aXNkb20sIGZvciBleHBlcmllbmNlIGFuZCBmb3IgbG9naWMgdG8gc3VyZmFjZS4gClJlZGRpdGF1MzQgIDExIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KVGhlIGJlc3QgdGhlb3J5IGkgcmVhZCBzeWFzIHRoYXQgaW4gYSBodW5kcmVkIHllYXJzLCBtb3N0IGNvdW50cmllcyB3aWxsIGhhdmUgc3BhY2UgY29sb25pZXMsIHdoaWNoIHdpbGwgYmUgdXNlZCB0byBnYXRoZXIgZW5lcmd5IGFuZCBtaW5lcmFscy4gCkluIHJlY2VudCB5ZWFycyBEcm9naGVkYSBlY29ub215IGhhcyBkaXZlcnNpZmllZCBmcm9tIGl0cyB0cmFkaXRpb25hbCBpbmR1c3RyaWVzLCB3aXRoIGFuIGluY3JlYXNpbmcgbnVtYmVyIG9mIHBlb3BsZSBlbXBsb3llZCBpbiB0aGUgcmV0YWlsLCBzZXJ2aWNlcyBhbmQgdGVjaG5vbG9neSBzZWN0b3JzLiBUaGUgdG93biBhbHNvIGhhcyBhIGNvbW11bml0eSBvZiBpbmRlcGVuZGVudCBhcnRpc3RzIGFuZCBtdXNpY2lhbnMgd2hvIGhhdmUgYmVlbiBsb29raW5nIHRvIHRoZSBsb2NhbCBlY29ub215IHJhdGhlciB0aGFuIER1YmxpbiBmb3IgZW1wbG95bWVudC4KTm93IHlvdSBrbm93IGhvdyB0byBzdGFydCBwbGF5aW5nIGF0IFdQVCBDbHViOiBubyBkb3dubG9hZCBpcyByZXF1aXJlZC4gSnVzdCB1c2Ugb3VyIGxpbmssIHZpc2l0IHRoZSBzaXRlLCByZWdpc3RlciBhbmQgcGxheSBmcm9tIHlvdXIgYnJvd3Nlci4gVGhpcyB3aWxsIGFsc28gZ2l2ZSB5b3UgMiB3ZWVrcyBvZiBmcmVlIFZJUCBhY2Nlc3MuIApUaGF0IHdhcyB0aGUgcmVhc29uIGZvciBtZSB0byBzZXR0bGUgaW4gTG91aXN2aWxsZSBhbmQgaXQgd29ya2VkIHdlcnkgd2VsbC4gT24gdGhlIGNvbnRyYXJ5LCBsZWF2aW5nIEJvdWxkZXIgZHVyaW5nIGV2ZW5pbmcgcnVzaCBob3VyIHdoZW4gYWxsIHJvYWRzIHRvIHRoZSBlYXN0IGFyZSBibG9ja2VkIGlzIGEgc2xvdyBhZmZhaXI7IHlvdSB3b24gbWFrZSBpdCBmcm9tIEJvdWxkZXIgdG8gRElBIGluIGFuIGhvdXIgYXQgdGhpcyB0aW1lLiBEb24gbGl2ZSBpbiBCb3VsZGVyLCBhaW0gZWFzdC4gCkRpZSB2ZXJsaW5rdGVuIFNlaXRlbiB3dXJkZW4genVtIFplaXRwdW5rdCBkZXIgVmVybGlua3VuZyBhdWYgbWdsaWNoZSBSZWNodHN2ZXJzdGUgYmVycHJmdC4gCk5ldXJvc3VyZ2VvbiBmb3IgdGhlIFBpdHRzYnVyZyBTdGVlbGVycwpZb3VyIHdpZmUgZGlkbiB3YW50IGNoaWxkcmVuIHRoZSBlbnRpcmUgdGltZSB5b3UgYmVlbiB0b2dldGhlciB1bnRpbCByZWNlbnRseS4gCkxhcyBWZWdhcyBwb2xpY2UgY2xvc2VkIHRoZWlyIGludmVzdGlnYXRpb24gbGFzdCBBdWd1c3QsIGFuZCBDbGFyayBDb3VudHkgU2hlcmlmZiBKb2UgTG9tYmFyZG8gZGVjbGFyZWQgdGhlIHBvbGljZSB3b3JrIGNvbXBsZXRlIGFmdGVyIGh1bmRyZWRzIG9mIGludGVydmlld3MgYW5kIHRob3VzYW5kcyBvZiBob3VycyBvZiBpbnZlc3RpZ2F0aXZlIHdvcmsuIExvbWJhcmRvIHZvd2VkIG5ldmVyIHRvIHNwZWFrIFBhZGRvY2sgbmFtZSBhZ2FpbiBpbiBwdWJsaWMuIEEgTGFzIFZlZ2FzIHBvbGljZSBzcG9rZXNtYW4gZGVjbGluZWQgdG8gY29tbWVudCBvbiB0aGUgRkJJIHJlcG9ydC4uIApZb3UgY2FuIHBsYXkgYSBsb3Qgb2YgZ2FtZXMgYmVjYXVzZSB0aGUgZGlzdHJpYnV0aW9uIG9mIGhhbmRzIGlzIGZhc3Rlci4gClRoaXMgaGFuZCBkb2VzbiB3b3JrIG5lYXJseSBhcyB3ZWxsIGFzIGEgY29sZCA0IGJldCBhcyBvdGhlcnMgc2VlbSB0byB0aGluay4gWW91IHVwIGFnYWluc3QgdHdvIHVuY2FwcGVkIHJhbmdlcywgT09QLCBhbmQgMzAwIEJCIGRlZXAgd2l0aCBhIGhhbmQgdGhhdCBiYXNpY2FsbHkgbmV2ZXIgZ29pbmcgdG8gd2FudCB0byBwbGF5IGZvciBzdGFja3MuIEV2ZW4gbW9yZSBvZiBhIHNuYXAgZm9sZCB3aGVuIHlvdSBzaG90IHRha2luZywgYmVjYXVzZSBldmVuIGlmIDQgYmV0dGluZyBpcyArRVYsIGl0IG1hcmdpbmFsIGFuZCBoaWdoIHZhcmlhbmNlClRoZSBIaXRjaGhpa2VyJ3MgR3VpZGUgdG8gdGhlIEdhbGF4eSBGb3VuZGF0aW9uCkFuZCBhZnRlcndhcmRzIGhlIHdhcyBhbHdheXMgb24gdGhlIHJ1bi4gSGUgZGlkbiBrbm93IGhvdyB0byBiZSBhIHBhcmVudCBmb3IgSGFycnkgY2F1c2UgaGUgaGFkIGZ1Y2tpbmcgc2hpdCBmb3IgcGFyZW50cyBoaW1zZWxmLi4gCkFncmVlIHdpdGggd2hhdCBvdGhlcnMgaGF2ZSBzYWlkLiBJIGNhbm5vdCB0ZWxsIGlmIGhlIG1hZGUgdGhpcyBmb3IgeW91ciBncmVhdCBncmVhdCBncmFuZG1vdGhlciBvciBpZiBpdCB3YXMgYSBwcmUgbWFkZSBwbGFxdWUgdGhhdCBoZSBwZXJzb25hbGl6ZWQgd2l0aCBoaXMgaW5mb3JtYXRpb24sIGJ1dCBpdCBzZWVtcyB0byBiZSBhIGNvbW1lbW9yYXRpdmUgaXRlbSBmb3IgaGlzIFdXSSBzZXJ2aWNlLiAKSXRlbSAgIDM4MDUzWW91ciBQcmljZTogJDI5Ljk1CkJvdXJnZW9pc2llIHBhaW50ZWQgdGhlIHVwcGVyIGNsYXNzZXMgYXMgYSBidW5jaCBvZiBkZWJhdWNoZWQgYW5kIGVmZmV0ZSBtYWxlcyB3aG8gY291bGQgbm90IG1hbiB1cCB0byB0aGUgam9iIG9mIHJ1bm5pbmcgV2FsbCBTdC4gT3IgREMuIFdvcmtpbmcgY2xhc3MgbWVuIHdlcmUgbWFubHksIG9mIGNvdXJzZSwgYnV0IHdpdGggZGVnZW5lcmF0ZSBtaW5kcyBhbmQgcXVlc3Rpb25hYmxlIHBoeXNpY2FsIGZpdG5lc3MuIAoiSGUncyBhIHdvcmsgaW4gcHJvZ3Jlc3MsIiBzYWlkIFdhcm5lLiAKSSBhbHNvIGEgaHVnZSBmYW4gb2YgdG9ydGlsbGEgcGl6emFzLiBJdCBub3QgbWVhbCBwcmVwLCBidXQgaXQgZ3JlYXQgZm9yIG5pZ2h0cyB3aGVuIHlvdSBqdXN0IGNhbiBzdG9tYWNoIHRoZSBpZGVhIG9mIHlvdXIgcHJlcCBvciBuZWVkIHRvIHVzZSB1cCB2ZWdnaWVzLiBJIGxpa2UgdG8gZG8gYSBwZXN0bywgYWxmcmVkbywgb25pb24sIGJlbGwgcGVwcGVyLCBhbmQgbW96emFyZWxsYSBvbmUgc2luY2UgSSB1c3VhbGx5IGFsd2F5cyBoYXZlIHRob3NlIGluZ3JlZGllbnRzLgpXZSBleHBlY3QgdG8gc2VlIGEgMjAlIGxpZnQgaW4gc2FsZXMgd2hlbiB0aGUgbmV3IHBhY2thZ2luZyBpcyBvbiBzdG9yZSBzaGVsdmVzLCBzaGUgc2FpZC4gQW5kIHRvIGxhdW5jaCBuZXcgYWxsIG5hdHVyYWwgaGVhbHRoeSBwcm9kdWN0cy4uIApBbmQgV2Fsc2gsIFYuIDIwMTcuIEd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMjogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIHN1YmVsaXRlIGF0aGxldGVzLiAKSXQgb2ZmZXJzIG1vcmUgZmVhdHVyZXMgdGhhbiBtb3N0IG9mIHRoZSBiZXN0IGRhdGluZyBzaXRlcyBvbmxpbmUuIApKdF9kdW5uc2tpQnJlYWt0aHJvdWdoIChBMSkgICBVUwpUaGUgQUtBIHdhcyBwcmVzZW50IGFzIHdhcyBEciBNY0N1cmR5LiBUaGV5IHdlcmUgdG9laW5nIFNjb3R0IEdvdHRsaWViJ3MgbGluZSBhbmQgdXNpbmcgaGlzIG1pc2luZm9ybWF0aW9uIGFzIHRoZSBiYXNpcyBmb3IgYWxsIG9mIGl0LiAKVG8gYmUgc2hvcnQoZXIpLCBzb21lIG5ldyBkZWNpc2lvbiBtYWtlcnMgYXQgY2hpbGRyZW4gZGVjaWRlZCBvbmUgZGF5IHRoYXQgdGhlIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uIHdhcyBub3QgbWFraW5nIGVub3VnaCBtb25leSwgYW5kIHdhcyBub3QgYnJhbmRlZCB0byB0aGVpciBsaWtpbmcuIEN1ZSBzdGFmZmluZyBjdXRzLCBob3VycyByZWR1Y3Rpb25zLCBpbmNyZWFzZSBvZiBwYXRpZW50Pm51cnNlIHJhdGlvcywgcGF5IGZyZWV6ZXMsIEVDVC4gCkkgY3VycmVudGx5IHdvcmtpbmcgb24gYSBwcm90b3R5cGUgInBvc2l0aXZlIiB0aGF0IEkgdXNlIHRvIG1ha2UgYSBtb2xkLCBhbmQgdGhlbiBhcyBmYXIgYXMgbWFraW5nIHRoZSBwcm9kdWN0aW9uIHBhcnRzIGl0IGp1c3QgYmUgZG9pbmcgdGhlbSBpbiB0aGUgbW9sZC4gClNvLCB0aGUgc2VjcmV0IHNvY2lldGllcy4gVG9vbHMgb2YgY29udHJvbCBub3cuIApUaGUgYWN0aW9ucyB3ZSB0b29rICAgcGFzc2luZyB0aGUgUmVjb3ZlcnkgQWN0LCBzdGFiaWxpemluZyB0aGUgYmFua2luZyBzeXN0ZW0sIHByZXNzaW5nIHRvIGdldCBjcmVkaXQgZmxvd2luZyBhZ2FpbiBhbmQgaGVscGluZyByZXNwb25zaWJsZSBob21lb3duZXJzICAgYnJvdWdodCB1cyBiYWNrIGZyb20gdGhlIHByZWNpcGljZS4gTW9udGhseSBqb2IgbG9zc2VzIGFyZSBkb3duLCBmaW5hbmNpYWwgbWFya2V0cyBhcmUgaW1wcm92ZWQsIGFuZCBlY29ub21pYyBjb250cmFjdGlvbiBoYXMgc2xvd2VkLiAKUGxhY2UgeW91ciBmaW5nZXJzIG9uIHRoZSBzdHJpbmdzLCBhbmQgdW5sZXNzIHlvdXIgcGx1Y2tpbmcgeW91ciB2aW9saW4sIGhvbGQgeW91ciBib3cgaW4geW91ciByaWdodCBoYW5kLiAKQnV0IGxpa2Ugd2l0aCBhbnkgZmFuZG9tLCB0aGUgYnJvbnkgcGhlbm9tZW5vbiBpcyBvbmUgb2YgdGhvc2UgdGhpbmdzIHdoZXJlIHRoZSBzcXVlYWt5IHdoZWVsIGdldHMgdGhlIG9pbDsgdGhlIGxvdWRlc3QgYW5kIHByb3VkZXN0IG1lbWJlcnMgdGVuZCB0byBhbHNvIGJlIHRoZSBvbmVzIHRoYXQgYXJlIHRoZSBtb3N0IG9ibm94aW91cywgYW5kIGZyYW5rbHkgaW5hcHByb3ByaWF0ZS4gCkkgbGlrZSBpdCBmaW5lLCBidXQgSSBmZWVsIHplcm8gbG95YWx0eSB0byB0aGUgY29tcGFuaWVzIEkgd29yayBmb3IgYW5kIEknbSBpbiBpdCBvbmx5IGZvciBhcyBsb25nIGFzIEknbSBkb2luZyBpbnRlcmVzdGluZyBlbm91Z2ggd29yayB3aXRob3V0IHBvbGl0aWNhbCBub25zZW5zZS4gR29vZCBsdWNrISBJIGRvdWJ0IHlvdSdsbCByZWdyZXQgaXQuLiAKSSB0b28gd291bGQgaWYgSSBoYWQgdG8gZG8gYSBsb3ZlbGluZSB3aXRoIG15IGZyaWVuZCBvciBicm90aGVyLk9jZWFuX01hZG5lc3NEYWxsYXMgRnVlbCAgTG9zIEFuZ2VsZXMgR2xhZGlhdG9ycyAyNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb01heWJlIGhpcyBaZW4gd2FzbiBncmVhdCwgYnV0IHdlIGhvbmVzdGx5IGRvbiBrbm93IHRoYXQgYmVjYXVzZSBoZSBnb3Qgbm8gcGVlbHMgb3Igc3VwcG9ydCBmcm9tIGFueSBvZiBoaXMgdGVhbS4gCkEgbW9yZSBtb2RlcmF0ZSBjYW5kaWRhdGUgbGlrZSBCaWRlbiB3b3VsZCBoYXZlIHdhbGxvcGVkIFRydW1wLjIwMTYgd2FzIGxvc3QgYmVjYXVzZSB0aGUgMzAgeWVhciBvbGQgd2l0Y2ggaHVudCB0aGUgcmVwdWJsaWNhbnMgbGVkIGFnYWluc3QgQ2xpbnRvbiAoYWJseSBoZWxwZWQgYnkgU2FuZGVycyBjbyB3aXRoIHRoZWlyIHJJZ0dlRCBidWxsc2hpdCApIHBvaXNvbmVkIGEgbG90IG9mIHBlb3BsZS4gSXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBpbXBsaWVkIGZhaWx1cmUgb2YgY2VudHJpc20gb3IgbW9kZXJhdGlzbWJoZWxsYnVzICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgd291bGQgbGlrZSB0byBzZWUgdGhpcyBwb2xsIHRoYXQgeW91IGFyZSByZWZlcnJpbmcgdG8uIEkgYW0gYXJndWluZyB0aGF0IGlmIHBlb3BsZSB3YW50IHRoZSBwYXJ0eSB0byBiZSBtb3JlIG1vZGVyYXRlOyBpdCBzZWVtcyBjb250cmFkaWN0b3J5IHRvIGhvdyB0aGV5IGZlZWwgYWJvdXQgdGhlIGFjdHVhbCBwb2xpY2llcyB0aGV5IHN1cHBvcnQuIApJIGNhbWUgdG8gdGhlIGxvbmcgd2luZG93IG9mIHdoYXQgSSB0aG91Z2h0IG9mIGFzIHRoZSBGYXQgQmFieSBOdXJzZXJ5LiBUaGlzIHdhcyB0aGUgcGxhY2UgZm9yIGhlYWx0aHkgbmV3Ym9ybnMgZ29saWF0aHMgd2hvIHdhaWxlZCBwZXR0eSBjb21wbGFpbnRzIHdpdGggcm9idXN0IGx1bmdzLiAKSGUgaXMgYWxzbyBtb3JlIGxpa2VseSB0byBubyBsb25nZXIgaGF2ZSBzeW1wYXRoeSBmb3IgdGhlIGJsb29kIHB1cml0eSBjYXVzZSwgYXMgc2VlbiB3aGVuIGhlIHRlbGxzIFBoaW5lYXMgTmlnZWxsdXMgbm90IHRvIHVzZSB0aGUgd29yZCBtdWRibG9vZC4gCk1heSBoZSBSZXN0IEluIFBlYWNlLi4gCk9uY2UgeW91IGdvIGRvd24gdGhhdCByb2FkIHlvdSBsZWF2aW5nIHRoZSByZXN0IG9mIHlvdXIgY29tcmFkZXMgaGlnaCBhbmQgZHJ5LiBXZSBuZWVkIHlvdSBpZiB3ZSBnb2luZyB0byB1bmZ1Y2sgdGhpcyB3b3JsZC4gVGhvc2Ugb2YgdXMgaW4gb3VyIDMwcyBhbmQgNDBzIGFuZCA1MHMgaGF2ZSBiZWVuIHRocm91Z2ggd2hhdCB5b3UgZ29pbmcgdGhyb3VnaCBhbmQgd2UgY2FyZSBhYm91dCB5b3UgYW5kIHdlIGNhbiBoZWxwIGlmIHlvdSBuZWVkIGhlbHAgKGZlZWwgZnJlZSB0byBETSBtZSwgZm9yIGV4YW1wbGUpLi4gCk5vdCBhbGwgd3JpdGluZ3Mgc3Vydml2ZSB0aWxsIG1vZGVybiBkYXkgaGlzdG9yaWFucyBjYW4gbG9vayBhdCB0aGVtLiBQYXBlciBkb2VzbiBsYXN0IGZvcmV2ZXIsIGV2ZW4gaWYgaXQgd2FzIG1hZGUgc3R1cmRpZXIgMjAwMCB5ZWFycyBhZ28uIEFuZCBzb21ldGltZXMgcGVvcGxlIGhhdmUgYmVlbiBrbm93biB0byB0ZWFyIHVwIG9yIGJ1cm4gd3JpdGluZ3MgdGhleSBkb24gbGlrZSBpbiBvcmRlciB0byBhZHZhbmNlIHRoZWlyIG93biBhZ2VuZGEsIGluIHRoZSBVUyBhbG9uZSB5b3UgY2FuIGZpbmQgcGxlbnR5IGV4YW1wbGVzIG9mIGJvb2sgYnVybmluZ3Mgb3ZlciB0aGUgbGFzdCBmZXcgY2VudHVyaWVzLiBXaXRob3V0IGEgcHJpbnRpbmcgcHJlc3MgYSBidXJuaW5nIGJvb2tpbmcgd291bGQgYmUgZmFyIG1vcmUgZWZmZWN0aXZlIGJhY2sgdGhlbi4KT24gdGhpcyBwYXJ0aWN1bGFyIGRheSB0aGVyZSB3ZXJlIHR3byBwcm9ibGVtcy4gVGhleSBzZWVtZWQgbW9yZSBkaWZmaWN1bHQgdGhhbiB1c3VhbC4gClRoZXknbGwgbWFrZSB5b3Ugd2FudCB0byBzdGVwIG9uIHlvdXIgc2lkZWtpY2sncyBudXRzCllvdSBzaG91bGQgc2V0IHVwIHlvdXIgb2ZmaWNlIGluIGFuIGFyZWEgdGhhdCBpcyBhbGwgaXRzIG93bi4gSW4gb3RoZXIgd29yZHMsIGRvIG5vdCBtaXggeW91ciBDbGF5IFBva2VyIENoaXBzIGJ1c2luZXNzIHdpdGggeW91ciBob21lIGxpZmUuIElmIHlvdSBoYXZlIGFuIGV4dHJhIGJlZHJvb20sIHNldCBpdCB1cCBhcyBhIGhvbWUgb2ZmaWNlci4gCldvdywgeW91IG1pc3NpbmcgdGhlIHBvaW50IGFnYWluLiBUaGVyZSBhIGRpZmZlcmVuY2UgYmV0d2VlbiA1YmIgZWZmIGFuZCA1YmIgYXZnIHN0YWNrLiBJbiB0aGUgZmlyc3Qgb25lLCB5b3Ugc2hvcnQgd2l0aCA1YmIgKHdpdGggYSB0YWJsZSBhdmcgb2YgMjAgMjUgYmIpIGFuZCBwdXNoIEs4cyBmcm9tIHRoZSBjby9idSBhbmQgYmIgd2l0aCAzMGJiIGNhbGxzIHdpdGggODlzLiAKRS4gQ29saSBpcyBhIGJhY3RlcmlhIHRoYXQgbGl2ZXMgaW4gdGhlIGludGVzdGluZXMgb2YgY2F0dGxlLCBwb3VsdHJ5IGFuZCBvdGhlciBhbmltYWxzLiBBY2NvcmRpbmcgdG8gSGVhbHRoIENhbmFkYSwgbW9zdCBzdHJhaW5zIGFyZSBoYXJtbGVzcyB0byBodW1hbnMgYnV0IHNvbWUgdmFyaWV0aWVzIGFyZSBjYXBhYmxlIG9mIGNhdXNpbmcgaWxsbmVzcy4gCkkgdXNlZCBUViwgYW5kIGp1c3QgdHJpZWQgdG8gZXh1ZGUgbXkgZmF2b3JpdGUgdHYgY2hhcmFjdGVycyAoc2hvdyBoYXMgdG8gYmUgbGl2ZSBhY3Rpb24gYW5kIGFnZSBhcHByb3ByaWF0ZSBmb3IgaXQgdG8gd29yaywgdGhvdWdoLikgSSBoYXZlIHRoaXMgd2hvbGUgbG9uZyBzeXN0ZW0sIEkgY291bGQgUE0geW91IGlmIHlvdSdkIGxpa2UsIGJ1dCBJIHdvbid0IHRha2UgdXAgdG9vIG11Y2ggb2YgeW91ciB0aW1lIGhlcmUgaWYgeW91J2QgcmF0aGVyIG5vdC4uIApJdCBlYXN5IGZvciBhIGNvdW5jaWxsb3IgdG8gc2F5IGEgY2FzaW5vIHdpbGwgYnJpbmcgdGhlIHdyb25nIGtpbmRzIG9mIGpvYnMgd2hlbiB0aGUgbmVpZ2hib3VyaG9vZCB0aGF0IGNvdW5jaWxsb3IgcmVwcmVzZW50cyBpcyBjaG9jayBmdWxsIG9mIHRoZW0uIEluIFJleGRhbGUsIGFsbW9zdCBhbnkgam9iIGlzIGJldHRlciB0aGFuIG5vbmUuLiAKSWYgeW91IGFyZSBsb29raW5nIGZvciB2YWxpZGF0aW9uIHRoZSBvbmx5IG9uZSB0byBtYXR0ZXIgaXMgeW91ciBvd24uIElmIHlvdSBjYW4gdHJ1bHkgc2F5IHlvdSBhcmUgaGFwcHkgZG9pbmcgdGhpcyB0aGVuIGRvIGl0IGZvciB5b3UuLiAKTW9zdCBtZW4gZG9uIGhhdmUgYSBwcm9ibGVtIHdpdGggSW5kaWFuYSBKb25lcyBvciBldmVuIEtyYXRvcyBkZXNpZ25zIChhbHRob3VnaCB0aGVyZSBpcyB0aGUgdG9waWMgb2YgdW5yZWFsaXN0aWMgYm9kaWx5IHByb3BvcnRpb25zIGZvciBtZW4sIHdoaWNoIGlzIGEgdmFsaWQgaXNzdWUgdGhhdCBkZXNlcnZlcyBzb21lIHRob3VnaHQpLiBXaGlsZSB0aGV5IGF0dHJhY3RpdmUgdG8gd29tZW4sIHRoZXkgYWxzbyBlbXBvd2VyaW5nIHRvIHNvbWUgZGVncmVlIGZvciBtZW4gICB0aGV5IGFyZSBjaGFyYWN0ZXJzIGluIG1lZGlhIHRoYXQgaXMgYWltZWQgdG93YXJkIG1lbiwgYWZ0ZXIgYWxsLiAKTWFya2V0IHdhdGNoZG9ncyBhcmUgaW4gdGhlIGluaXRpYWwgc3RhZ2VzIG9mIGEgcHJvYmUgYWltZWQgYXQgdW5jb3ZlcmluZyBuYXR1cmUgYW5kIGV4dGVudCBvZiBhYnVzaXZlIHNob3J0IHNlbGxpbmcgaW4gdGhlIG1hcmtldHBsYWNlLiBCdXQgQXhsZXIgc2FpZCBoZSB2aWV3cyB0aGUgcmVndWxhdG9yeSBlbnZpcm9ubWVudCBpbiBib3RoIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBDYW5hZGEgYXMgcG9zaXRpdmUgZm9yIHNob3J0IHNlbGxlcnMuLiAKQW5kIEJJTkdPISBpdCB3b3JrZWQuIEFuZCBnb2QgZGlkIGl0IGZpbGwgZ29vZC4gSW0ganVzdCB3b25kZXJpbmcgd2h5IGkgd2FzIGhhdmluZyB0aGUgc3VkZGVuIHVyZ2UgdG8gaGF2ZSB0byBwZWUgYXMgaXQgd2FzIGZlZWxpbmcgZ29vZC4gCkFuZCBzdHVkZW50cyBiZWluZyBzYXZ2eSwgdGhlcmUgd2lsbCBhbHdheXMgYmUgd2F5cyB0byBnYW1lIHRoZSBzeXN0ZW0sIHRvIHRod2FydCB0aGUgc29mdHdhcmUsIHRvIGVsdWRlIGNhcHR1cmUgYnkgdGhlIHJvYm90cyB0aGVyZSB0byBmZXJyZXQgdGhpZXZlcyBvdXQuIApEdXJhbnQgY2VzIHByZXNxdWUgcXVpbnplIGFubmVzLCBkZSBtZGVjaW4gZGUgdmlsbGUsIENhemluIGRldmllbnQgbWRlY2luIGRlIGNhbXBhZ25lLiAKSSBub3QgdGhlIGVsZGVzdCB0cmVlLiBJIGJlIGVudGVyaW5nIG15IG1pZCAzMHMgc29vbiBhbmQgSSBiZWVuIGNvbnN1bWluZyBzb21lIGZvcm0gb2YgY2FubmFiaXMgYWxtb3N0IGRhaWx5IHNpbmNlIEkgYmVnYW4uIE15IHZvaWNlZCByZWFzb25pbmcgZm9yIHVzaW5nIGl0IGNoYW5nZWQgY29uc2lkZXJhYmx5IHRocm91Z2ggbXkgdGVlbnMgYW5kIDIwcywgYnV0IHRoZSByZWFsIGNvcmUgb2YgaXQgaGFzIGFsd2F5cyByZW1haW5lZCB0aGUgc2FtZTsgSSBqdXN0IHJlYWxseSBsb3ZlIGJlaW5nIGhpZ2guClRlY2huaWNhbGx5LCBJJ20gbm90IHN1cmUgeW91IGxhbmRsb3JkIGNhbiBqdXN0IHJlZnVzZSB0byBicmluZyBhbiBhbHJlYWR5IHRlbmFudGVkIHByb3BlcnR5IHVwIHRvIGNvZGUuIFlvdSBtaWdodCBhc2sgYXQgdGhlIGxlZ2FsIGFzc2lzdGFuY2Ugb2ZmaWNlIGF0IHlvdXIgdW5pdmVyc2l0eSBmb3IgYWR2aWNlIG9uIHRoaXMgY2FzZS4gSSB0aGluayBoZSBjYW4ndCBraWNrIHlvdSBvdXQgb3ZlciB0aGlzLiAKVGhlcmUgYWxzbyBhcHBhcmVudGx5IGV2aWRlbmNlIHRoYXQgdGhpcyBwb2xsIHdhcyBkZXNpZ25lZCBmb3IgYSBzcGVjaWZpYywgdW51c3VhbCBwdXJwb3NlLCBhbmQgYSAzIHBhZ2UgYnJpZWZpbmcgbm90ZSB3YXMgcHJvdmlkZWQgYnkgS2lsaW1uaWsgdG8gZnJhbWUgdGhlIHF1ZXN0aW9ucy4KT24gQXVndXN0IDI0LCAxOTY4LCBCaWxsIG1hcnJpZWQgTmFuZXR0ZSBpbiBOb3J3YWxrLCBDb25uZWN0aWN1dC4gQmlsbCB0b29rIGEgcG9zaXRpb24gd2l0aCBDb25zdW1lcnMgRW5lcmd5IGluIE1pY2hpZ2FuLCBhbmQgdG9nZXRoZXIsIEJpbGwgYW5kIE5hbmV0dGUgd2VyZSBibGVzc2VkIHRvIHdlbGNvbWUgZm91ciBjaGlsZHJlbiAoRGF2aWQsIE5pbmEsIExpc2EsIGFuZCBNYXJjKSBpbnRvIHRoZWlyIGxpdmVzLCB3aG9tIHRoZXkgcmFpc2VkIHdpdGggZ3JlYXQgY2FyZSBhbmQgZGV2b3Rpb24uIEFmdGVyIDM1IHllYXJzIG9mIHNlcnZpY2UgYXMgYSBwcm9mZXNzaW9uYWwgZW5naW5lZXIsIEJpbGwgcmV0aXJlZCBmcm9tIENvbnN1bWVycyBFbmVyZ3kgKGhlIGhlbHBlZCAia2VlcCB0aGUgbGlnaHRzIG9uIikuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZU9uZSBvZiB0aGUgbGVnYWNpZXMgb2ZUaW0gTGV2ZXNxdWUncyBkZWNhZGUgbG9uZ3N0aW50IHdpdGh0aGUgTXVsd2FsYSBXYXRlciBTa2kgQ2x1YiB3YXMgc3RhcnRpbmcgdGhlIEZyZWVzdHlsZSBTcG9ydHMgRXhwbzE1IHllYXJzIGFnby4gClBpY3R1cmUgdG8gY29tZSkgYW5kIEkgd2FzIHNvb28gc2NhcmVkIGJlY2F1c2UgSSBoYWQgdG8gbm93IGFkanVzdCB0byBhIHdob2xlIG5ldyBsaWZlLCBsaWtlIHNvbWVob3cgYXQgdGhlIGFnZSBvZiAxMCBJIHdlbnQgaW50byB3aXRuZXNzIHByb3RlY3Rpb24uIApGb3IgZnVja3Mgc2FrZSwgRm9ycmVzdCBpcyByZXRhcmRlZC4gSmVubnksIG91dCBvZiBldmVyeW9uZSB3aG8gZXZlciBtZXQgaGltLCBrbm93cyB0aGlzIGJlc3Qgb2YgYWxsLiBTaGUga25vd3MgdGhhdCBoZXIgY2xvc2VzdCBmcmllbmQgYW5kIG9ubHkgbG92ZWQgb25lIGlzIGEgZnVja2luZyBpZGlvdC4gCklmIHlvdSBjb25zaWRlciB5b3Vyc2VsZiBhIHNwb3J0IGJldHRpbmcgZW50aHVzaWFzdCwgYnV0IGhhdmUgbmV2ZXIgcGxhY2VkIGEgYmV0IG9uIHNwb3J0cyBvbmxpbmUsIHRoZW4gVGl0YW4gQmV0IGlzIHRoZSBwbGFjZSBmb3IgeW91LiAKZnJvbSBDRklCIGZvciBjdXR0aW5nIHJlZCB0YXBlIGZvciBzbWFsbCBidXNpbmVzc2VzCkluIExhdGUgcG9zaXRpb24gQ2FsbCB3aXRoIEEgWHMsIEsgVHMsIFEgVHMsIEogVHMsIEEgSiwgQSBUIGFuZCBzbWFsbCBwYWlycy4gKG5vdGUgeCBkZW5vdGVzIGFueSBjYXJkKSBJdCB0YWtlcyBhIHN0cm9uZ2VyIGhhbmQgdG8gY2FsbCBhIHJhaXNlIHRoYW4gaXQgZG9lcyB0byBtYWtlIHdpdGggb25lLCBJZiB0aGVyZSBpcyBhIHJhaXNlIGJlZm9yZSBpdCBpcyB5b3VyIHR1cm4gdG8gYWN0IHlvdSBzaG91bGQgZm9sZC4gV2h5IHB1dCBpbiB0d28gYmV0cyB3aXRoIG1hcmdpbmFsIGhhbmRzPyAuLiAKSXQgaXMgYSBiaXQgYW1iaWd1b3VzIHdoZXRoZXIgb3Igbm90IFN0YW4gY2lyY3VsYXRlZCByZWFsIHBpY3R1cmVzIG9mIHRoZSB0aHJlZSBvZiB0aGVtLCBidXQgZ2l2ZW4gdGhlIHNjZW5lIGluIHRoZSBwYXJraW5nIGdhcmFnZSwgSSBkb24gdGhpbmsgdGhhdCBsaWtlbHkuUGFpZ2Ugd2FzIG5ldmVyIG9uIHRoZSBnb3Zlcm5tZW50IHJhZGFyLiBTaGUgd2FzIHRoZSBzYWZlc3Qgb3V0IG9mIHRoZSB0aHJlZSBvZiB0aGVtLCBhbmQgSSB0aGF0IHdhcyBhIGZhY3RvciBzaGUgY29uc2lkZXJlZCB3aGVuIHNoZSBnb3Qgb2ZmIHRoZSB0cmFpbi5MaW9uVHdlZXRlciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0NvbXBsYWludDogd2h5IGNhbiBJIHJ1biA3IG1pbGVzIHdpdGggbm8gcHJvYmxlbSBvbiBTdW5kYXksIGJ1dCBhIHRocmVlIG1pbGUgcnVuIGxhc3QgbmlnaHQgbWFrZXMgbXkgY2FsZiBmZWVsIGxpa2UgaXQncyBiZWVuIHNldCBvbiBmaXJlIHNldmVyYWwgdGltZXMgb3Zlcj8gSXQncyBiZWVuIGEgd2VpcmQgbmlnZ2xpbmcgcGFpbiAganVzdCBiZWxvdyB0aGUgbWVhdCBvZiBteSBjYWxmIG11c2NsZSBvbiB0aGUgaW5zaWRlIG9mIG15IHJpZ2h0IGxlZyAgb2ZmIGFuIG9uIGZvciBhIHllYXIgbm93LCBhbmQgSSdtIHRlcnJpZmllZCBydW5uaW5nIG9uZSBtb3JlIG1pbGUgY291bGQgbWFrZSBteSBsZWcgYnJlYWsgaW4gaGFsZi5UcmFpbmluZyBmb3IgdGhlIE5ZQyBIYWxmIGluIE1hcmNoIGFuZCByZWxpZ2lvdXNseSBmb2xsb3dpbmcgdGhlIE5ZUlIgdHJhaW5pbmcgcHJvZ3JhbSBJIHNoZWxsZWQgb3V0ICQzMCBmb3IsIGFuZCBsdWNraWx5IGl0IGNhbGxzIGZvciBhICJmbGV4L3Jlc3QiIGRheSB0b2RheSBhbnl3YXlzLCBzbyBzdGF5aW5nIG9mZiBteSBmZWV0IHRvIGdpdmUgbXkgY2FsZiBhIGJyZWFrLkNvbmZlc3Npb246IEkgZmVlbCBzbyBndWlsdHkgdGFraW5nIHRvZGF5IG9mZiBmcm9tIGFueSBneW0gd29yayAgIG5vIGNhcmRpbywgbm8gc3RyZW5ndGggdHJhaW5pbmcuIApJbnRlcm5ldCBwb2tlciBkb2VzIG5vdCB2aW9sYXRlIGFueSBmZWRlcmFsIGxhdyBvciB0aGUgbGF3cyBvZiBtb3N0IHN0YXRlcy4gQ291cnQgb2YgQXBwZWFscyBmb3IgdGhlIDV0aCBDaXJjdWl0IGluIHRoZSAyMDAyIEluIFJlOiBNYXN0ZXJDYXJkIGRlY2lzaW9uICAgc3RhdGVkIHRoYXQgdGhlIDE5NjEgV2lyZSBBY3QsIGFudGkgZ2FtYmxpbmcgbGVnaXNsYXRpb24gcm91dGluZWx5IGNpdGVkIGJ5IHRoZSBKdXN0aWNlIERlcGFydG1lbnQgdG8gbWFsaWduIG9ubGluZSBwb2tlciwgYXBwbGllZCBvbmx5IHRvIG9ubGluZSBzcG9ydHMgYmV0dGluZy4gTW9zdCBmZWRlcmFsIGFuZCBzdGF0ZSBsYXdzIGRlZmluZSBnYW1ibGluZyBhcyBnYW1lcyBvZiBjaGFuY2UuIEJ1dCBwb2tlciBpcyBhIGdhbWUgd2hlcmUgYSBwbGF5ZXIncyBzdWNjZXNzIGlzIHByZWRvbWluYW50bHkgZGV0ZXJtaW5lZCBieSB0aGF0IHBsYXllcidzIHNraWxsLiBBbHRob3VnaCB0aGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGNvbnRpbnVlcyB0byBpbnNpc3QgdGhhdCBJbnRlcm5ldCBwb2tlciBpcyBhIGdhbWUgb2YgY2hhbmNlLCB0aGUgbGF3ICAgYW5kIGFueSBwb2tlciBwbGF5ZXIncyBleHBlcmllbmNlICAganVzdCBkb2Vzbid0IHN1cHBvcnQgdGhhdCBjb250ZW50aW9uLgpFbGVuY2VsaSBhbmxhciBzdW5hbiBveXVuIGF5biB6YW1hbmRhIGRvYSB2ZSBhYSBzZXZnaXNpbmkgZGUgb2N1a2xhcmEgYWxhZC4gVGl5YXRyb251biB5YW4gc3JhIG9jdWtsYXJuIGJ5ayBiaXIga2V5aWZsZSBpemxlZGlpIHNpaGlyYmF6IHZlIHl6IGJveWFtYSBldGtpbmxpa2xlcmkgZGUgb2N1a2xhcmEgZS4uIApUaGUgc2Vjb25kIHBvc2l0aW9uIGhhcyBhIGxvdCBvZiB0aGluZ3MgZ29pbmcgb24uIFByaW1hcmlseSB3aGl0ZSBpcyBub3QgZGV2ZWxvcGVkIGF0IGFsbCBhbmQgYWxsIG9mIGhpcyBwaWVjZXMgb2YgYXdheSBmcm9tIHRoZSBraW5nIHNpZGUuIApTbyBpdCBzZWVtcyBsaWtlIHlvdSBiYXNpY2FsbHkgYWdyZWUgd2l0aCB3aGF0IEkgc2FpZC4gVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgdHdvIGNsYXNzaWZpY2F0aW9ucyB0byB5b3UgaXMganVzdCBhIG1hdHRlciBvZiBzY2FsZS4gQ3VsdHMgYWZmZWN0cyB2ZXJ5IGZldy4gUmVsaWdpb25zIGFmZmVjdHMgbWFueS4gU28gcmVsaWdpb25zIGFyZSBiYXNpY2FsbHkgY3VsdHMgdGhhdCB3ZW50IHZpcmFsLgpUaGUgd29tYW4gd2hvIHdvdWxkIGJlY29tZSB0aGUgYmFieSdzIG1vdGhlciwgQ2xhcmEsIHdhcyBnZXR0aW5nIHNvbWV0aGluZyBzaGUnZCBiZWVuIGRyZWFtaW5nIG9mIGZvciBhIGxvbmcgdGltZS4gClR3byBmdW5kYW1lbnRhbCB0cnV0aHMgYWJvdXQgcGFja2FnaW5nIGFyZSByb3V0aW5lbHkgb3Zlcmxvb2tlZCBieSBtYXJrZXRlcnMuIApRUSBvbiB0aGUgYnV0dG9uIHZpbGxpYW4gcmFpc2VzIHRvIC4xNSBJIHJlcmFpc2UgdG8gMzAuIApZb3Ugd2lsbCBkbyB0aGlzIGFmdGVyIGVhY2ggaGFuZCB5b3UgbGF5IG9uIHRoZSB0YWJsZS4gVGhlcmUgYXJlIGEgbGFyZ2UgbnVtYmVyIG9mIHBva2VyIGdhbWVzLCB5b3UgY2FuIGZpbmQgdGhlIGZ1bGwgcnVsZXMgZm9yIGVhY2ggdHlwZSBpbiB0aGUgcmVsYXRlZCBsaW5rLiAKTGFkeSBSZWRkaXRvciBoZXJlLiBZZXMsIHlvdXIgcG9vciByZWFkaW5nIGNvbXByZWhlbnNpb24gaXMgYSBiaXQgb2YgYSBmdWNrIHVwLiBJTU8sIGJvdGggaW5zdGFuY2VzIHdoZXJlIHlvdSB1c2UgdGhlIHdvcmQgInJpZGljdWxvdXMiIHRvIGRlc2NyaWJlIHRoZSBjb3N0IG9mIGRpbm5lciBhbmQgaGVyIGZlZWxpbmdzIChFU1BFQ0lBTExZIGhlciBmZWVsaW5ncykgaXMgdGhlIGJpZ2dlciBmdWNrIHVwLiBWYWxlbnRpbmUgRGF5IGlzIGEgbGl0dGxlIHJpZGljdWxvdXMgbm8gbWF0dGVyIGhvdyB5b3UgY2hvb3NlIHRvIGNlbGVicmF0ZSBpdC4gSXQgYSBkYXkgY2VudGVyZWQgYXJvdW5kIHByb2NsYWltaW5nIHlvdXIgbG92ZSBmb3Igc29tZW9uZSBpbiBhIGxhcmdlciB0aGFuIHVzdWFsIHdheS4gIkxhcmdlciB0aGFuIHVzdWFsIiBsb29rcyBkaWZmZXJlbnQgZm9yIGV2ZXJ5IHJlbGF0aW9uc2hpcCwgZGVwZW5kaW5nIG9uIGJ1ZGdldCBhbmQgc3R5bGUgb2YgZWFjaCBwZXJzb24uClNhbGVzIHdlcmUgYXQgJDg1MCwwMDAgZm9yIGFsbCB0aHJlZSBicmFuZHMsIHdpdGggdGhlIGFwcGxlIGNoaXBzIGFjY291bnRpbmcgZm9yICQ0NjAsMDAwIGluIHJldmVudWUuIApUaGUgd2Vic2l0ZSwgUG9rZXJTY291dCwgYW4gaW5kdXN0cnkgd2Vic2l0ZSB0aGF0IHRyYWNrcyBwbGF5ZXJjb3VudHMgZm9yIHJlYWwgbW9uZXkgY2FzaCBnYW1lcywgYWxzbyB0cmFja3MgcGxheSBtb25leSBnYW1lcyBhdHRoZSB3b3JsZCdzIGxhcmdlc3Qgc2l0ZXMgcGxheSBtb25leSBzaXRlcy4gKGVkaXQpIFlvdSBjYW4gYWRkIDg4OCxBQ1IgYW5kIEJDUCBpbiB0aGUgbGlzdC4gWW91IGNhbiBwbGF5IHdpdGhvdXRkZXBvc2l0IGp1c3QsIHdpbiBvciBhaW0gZm9yIDEwdGggb3IgaGlnaGVyIHBsYWNlIGluIGZyZWVyb2xscyBhbmR5b3VyIGdvb2QgdG8gZ28uIApEdW1ibGVkb3JlQ2Fscmlzc2lhbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwpTaGUgaGFkIGEgZnJlYWtvdXQgYXQgYW4gZW1wbG95ZWUgdGhlIG90aGVyIHdlZWsgYmVjYXVzZSB0aGV5IGhhZCBicm9rZW4gYSB0aW4gb3BlbmVyIGluIHRoZSBraXRjaGVuLiBQQSBzY3JlYW1lZCBhdCBoaW0gdGhhdCB0aGlzIGlzIG5vdCBhIHN0dWRlbnQgZG9ybSBhbmQgdGhhdCB3ZSBoYXZlIHRvIHRha2UgYmV0dGVyIGNhcmUgb2Ygb2ZmaWNlIG93bmVkIHRoaW5ncy4gQW5kIEkgbWVhbiwgc2NyZWFtZWQuIFNoZSB3YXMgcHJvbXB0bHkgc2VudCBob21lIGFmdGVyIHRoYXQsIGJ1dCB0aGlzIHdlZWsgc2hlIGhhZCBhIGNvbXBhbnkgd2lkZSBtZWV0aW5nIGFib3V0IHRoZSBuZXcgcG9saWNpZXMgc2hlIGlzIGludHJvZHVjaW5nLiBUaGV5IHdpbGwgYmUgcHJvdmlkZWQgd2l0aCBiYWRnZXMuCkRpZG4gaGF2ZSB0aGlzIHdoZW4gSSB3YXMgY29taW5nIHVwLCBoZSBzYWlkLgpJdCBjcmF6eSBob3cgZmFzdCBpdCBnb2VzLiAKVGhhdCByZW1haW5lZCB0aGUgc3RvcnlsaW5lICAgdW50aWwgRHVrZSBjYW1lIHRvIGxpZmUgaW5zaWRlIHRoZSA4IG1pbnV0ZSBtYXJrLiBDbGFya2UsIHdobyBtaXNzZWQgbGFyZ2UgY2h1bmtzIG9mIHRoZSBnYW1lIHdpdGggZm91bCB0cm91YmxlLCBhbmQgSGFjaGltdXJhIGJvdGggcGlja2VkIHVwIHRoZWlyIGZvdXJ0aCBmb3VscyBhbmQgdGhlIEJsdWUgRGV2aWxzIHRvb2sgYWR2YW50YWdlIHdpdGggZHJpYmJsZSBwZW5ldHJhdGlvbiBhbmQgcGFpbnQgcG9pbnRzLgpCZWNhdXNlIGl0IDIwIERvbGxhcnMsIG5vdCBEb2xsYXJzIDIwLCBzbyBpZiB5b3UgYXJlIHRoaW5raW5nIGFib3V0IGhvdyBpdCBpcyBwcm9ub3VuY2VkLCB5b3UgcHV0IGl0IHRoaXMgd2F5ClRoZXkgYXJlIHRyeWluZyB0byBtYWtlIGEgbmFtZSBmb3IgdGhlbXNlbHZlcyBhcyAid2lubmluZyIgcHJvc2VjdXRvcnMsIHBlcmhhcHMgdG8gbWF5YmUgY2xpbWIgdGhlIGxhZGRlciB0byBiZWNvbWUgRmVkZXJhbCBqdWRnZXMuIApCdXQgRHVuZm9yZCBtYXkgYWxzbyBiZSBrZWVwaW5nIGhpcyBleWVzIG9uIGFub3RoZXIgZ3JvdXAgaW4gdGhlIGF1ZGllbmNlLiBUaGUganVzdGljZXMgb2YgdGhlIFN1cHJlbWUgQ291cnQgd2hvIGFsc28sIGJ5IHRyYWRpdGlvbiwgZG9uJ3QgcmVhY3Qgb3IgcmVzcG9uZCB0byBwb2xpdGljYWwgc3RhdGVtZW50cyBieSBhbnkgcHJlc2lkZW50LiAKTGEgc2FudCBlc3QgZWxsZSAgY2UgcHJpeCA/KSBBIGNvdXAgc3IsIGNlIGxpdnJlIGZpbmlyYSBjb21tZSB1bHRpbWUgcmZyZW5jZSBlbiBsYSBtYXRpcmUgc3VyIGwgZCAgYm9ibyAgcXVpIG5lIG1hbnF1ZSBwYXMgZGUgbW95ZW5zLiBMZSBncm9zIGRlcyB0cm91cGVzLCBwYXNzZXogdm90cmUgY2hlbWluLi4gCkNsYXNzLi4gCihNYW55IHBlb3BsZSB3aG8gdXNlIHN0YW5kaW5nIGRlc2tzIGVuZCB1cCBsZWFuaW5nIGF3a3dhcmRseSBhcyB0aGV5IHdvcmssIGhlIGFyZ3Vlcy4pLiAKVW5sZXNzIHRoZSBvdGhlciBwbGF5ZXIgaG9sZHMgYSBxdWVlbiBvciBuaW5lIHlvdSBhcmUgdGhlIGZhdm91cml0ZSB0byB3aW4uIEhvd2V2ZXIsIHRoZSBvdGhlciBwbGF5ZXIgY2FuIGVhc2lseSBiZXQgdG8gcmVwcmVzZW50IGEgcGFpciBhbmQgdGhlbiB5b3UgYXJlIGluIGEgZGlmZmljdWx0IHBvc2l0aW9uLiBUaGlzIGdldHMgd29yc2Ugc2hvdWxkIGFub3RoZXIgZmFjZSBjYXJkIHNob3cgdXAgb24gdGhlIHR1cm4gb3Igcml2ZXIuIApJIGtub3cgdGhpcyBiZWNhdXNlIEkndmUgc3BlbnQgc2V2ZXJhbCB3ZWVrcyB0cnlpbmcgdG8gZmluZCB0aGUgcGVyZmVjdCB3YXkgdG8gd29yayBhdCBteSBjb21wdXRlciB3aXRob3V0IGEgY2hhaXIuIFRoZSBzZWFyY2ggd2FzIG5vdCBxdWl4b3RpYzsgc3RhbmRpbmcgdXAgaXMgaW4gdm9ndWUuIE1lZGljYWwgcmVzZWFyY2hlcnMgaGF2ZSBmb3VuZCB0aGF0IHBlb3BsZSB3aG8gc3RhbmQgYXQgd29yayB0ZW5kIHRvIGJlIG11Y2ggaGVhbHRoaWVyIHRoYW4gdGhvc2Ugd2hvIHNpdCwgYW5kIHRoZXJlJ3MgYSBsYXJnZSBvbmxpbmUgc3ViY3VsdHVyZSBvZiBzdGFuZCB1cCBmYW5hdGljcyB3aG8gc3dlYXIgdGhhdCBnZXR0aW5nIHJpZCBvZiB5b3VyIGNoYWlyIHdpbGwgY2hhbmdlIHlvdXIgbGlmZS4uIApXaGlsZSB5b3VyIG5lZ2F0aXZlIGl0ZW1zIGFyZSBiZWluZyBkaXNwdXRlZCwgdGhleSBzdG9wIGFmZmVjdGluZyB5b3VyIHNjb3JlLiAKRGlzbmV5IHNwZW50ICQyMDAgbWlsbGlvbiB0byBtYWtlIHRoZSBmaWxtIGFuZCAkMTUwIG1pbGxpb24gbWFya2V0aW5nIGl0IG92ZXIgdGhlIG5pbmUgbW9udGhzIGJlZm9yZSBpdHMgZGVidXQsIHNvIGV4cGVjdGF0aW9ucyB3ZXJlIGhpZ2guIEJ1dCBDb29nbGVyIGRlbGl2ZXJlZCBhICQxLjMgYmlsbGlvbiBiZWhlbW90aCwgc3BlYXJoZWFkZWQgYnkgdGhlIGZpZnRoIGxhcmdlc3QgbW92aWUgb3BlbmluZyBvZiBhbGwgdGltZS4gSXQgd2FzIGEgd2F0ZXJzaGVkIG1vbWVudCBmb3IgYmxhY2sgYXVkaWVuY2VzIGFyb3VuZCB0aGUgd29ybGQsIGFuZCBmb3IgcmVwcmVzZW50YXRpb24gaW4gYSBIb2xseXdvb2QgYmxvY2tidXN0ZXIuIApZb3UgZG9uIGdldCBoaXQgaW4gdGhlIGZhY2UuIApUaGUgdmlkZW8gc3RydWNrIGEgY2hvcmQgb24gc29jaWFsIG1lZGlhLCB3aGVyZSB0aG91c2FuZHMgb2YgdXNlcnMgbGlrZWQsIHNoYXJlZCBhbmQgZXhjbGFpbWVkIG92ZXIgdGhlIGNoaWxkcmVuJ3Mgb2J2aW91cyBleGNpdGVtZW50LgpUaGVzZSBhZGp1c3RtZW50cyB3ZXJlIHRoZSBtYWluIGluY3JlYXNlIGluIGFwcGFyZW50IHJhdGUgb2YgaW5jcmVhc2UuIApUaGlzIGlzIGluIE9udGFyaW8uIElmIHRoZSBvZmZlciBpcyBhY2NlcHRhYmxlIHRvIHVzIGFuZCB3ZSBhZ3JlZSB0byB0aGUgcHJpY2UgdGhlbiBJIGRvbiBwZXJzb25hbGx5IHNlZSBhIHJlYXNvbiB0byBub3QgZm9sbG93IHRocm91Z2ggb24gdGhlIGRlYWwuIApFdmVudHVhbGx5IHRoaXMgc2lsdmVyIGlzIGdvaW5nIHRvIGZlZWwgcmVhbGx5IGdyZWF0LCBidXQgcmlnaHQgbm93IHRoZSBnb2xkIHdhcyByZWFsbHkgY2xvc2UuIkluIGZhY3QsIGl0IHdhcyBhIGZyYWN0aW9uIG9mIGFuIGluY2ggYXdheS4gCk9uZSB0aGluZyB5b3UgbWlnaHQgYmUgYSBsaXR0bGUgbGltaXRlZCBieSBpcyB0aGUgYWJpbGl0eSB0byBvbmx5IG1ha2UgdGhlIDMuNXggcmFpc2UgcG90IGxpbWl0IGFsbG93cyB3aGVuIHlvdSB3b3VsZCBsaWtlIHRvIGdvIGFsbCBpbiBhbmQgbWF4aW1pemUgeW91ciBmb2xkIGVxdWl0eS4gVGhlIHRydXRoIGlzIHRoYXQgdGhlcmUgaXMgbGl0dGxlIGRpZmZlcmVuY2UgYmVjYXVzZSB0aGUgdHdvIGJlY2F1c2UgaWYgb25lIGNhbGxzIGZvciBzdWNoIGEgYmlnIHBlcmNlbnRhZ2Ugb2YgdGhlaXIgc3RhY2sgcHJlZmxvcCB0aGV5IHNob3VsZCB1c3VhbGx5IHB1dCB0aGUgcmVzdCBpbiBhZnRlciB0aGUgZmxvcCwgYnV0IG1vc3Qgb2YgeW91ciBvcHBvbmVudHMgZG9uJ3QgcmVjb2duaXplIHRoaXMuIEFnYWluc3QgYmFkIHBsYXllcnMsIG9mdGVuIHRpbWVzIHlvdSB3aWxsIGdldCBjYWxsZWQgYW5kIGhhdmUgdG8gdGFrZSBhIGZsb3AgaW4gYSBiYWQgc2l0dWF0aW9uIHdoZXJlIGl0IGlzIGxpa2VseSB5b3Ugd2lsbCBoYXZlIHRvIHBsYXkgZm9yIGFsbCB5b3VyIGNoaXBzLiBUaGUga2V5IG9uIHRoZXNlIGZsb3BzIGlzIGlmIGl0IGlzIGNoZWNrZWQgdG8geW91LCBiZXQgdGhlIG1heGltdW0gKHdoaWNoIHdpbGwgdXN1YWxseSBiZSBhbGwgaW4pIHdpdGggYW55IHBpZWNlIG9mIHRoZSBmbG9wLiBNYW55IHBsYXllcnMgd2lsbCBtYWtlIHNvbWUgdmVyeSBiYWQgZm9sZHMgaW4gdGhpcyBzcG90IGFuZCB0aGVzZSBzdGVhbHMgYWxvbmUgY2FuIGdpdmUgeW91IGEgYmlnIGVkZ2UuIEJ1dCBkb24ndCB0YWtlIHRoaXMgdG9vIGZhci4gSWYgeW91IHJhaXNlZCB3aXRoIEEyNEosIGZvciBleGFtcGxlLCBhbmQgZmxvcCBjb21lcyBRSlQsIGp1c3QgY2hlY2sgYmVoaW5kIGFuZCBob3BlIGZvciBhIGZyZWUgc2hvd2Rvd24uClRoaXJkLCBhZGQgdGhpcyB2YWx1ZSB0byB0aGUgc2l6ZSBvZiB0aGUgcG90IGFuZCBjYWxjdWxhdGUgeW91ciBwb3Qgb2RkcyBhZ2Fpbi4gClR3byBhZGRpdGlvbmFsIGRlYWxzIHRvIHNlbGwgdGhlIHNjaG9vbCdzIGludGVsbGVjdHVhbCBwcm9wZXJ0eSAgIHdoaWxlIGxlYXZpbmcgdGhlIGJ1aWxkaW5nLCBmdXJuaXR1cmUgYW5kIGVxdWlwbWVudCAgIGZlbGwgdGhyb3VnaC5OYXJvcGEgVW5pdmVyc2l0eSwgYSBwb3RlbnRpYWwgYnV5ZXIgaW4gdHdvIG9mIHRoZSBkZWFscywgZGVjaWRlZCBsYXN0IHdlZWsgbm90IHRvIHB1cmNoYXNlIHRoZSBpbnRlbGxlY3R1YWwgcHJvcGVydHksIGFuZCB0aGUgRGl2aXNpb24gb2YgUHJpdmF0ZSBPY2N1cGF0aW9uYWwgU2Nob29scyBvbiBNb25kYXkgaW5mb3JtZWQgQm91bGRlciBDb2xsZWdlIG9mIE1hc3NhZ2UgVGhlcmFweSBvZmZpY2lhbHMgdGhhdCB0aGUgc2Nob29sIHNob3VsZCBjbG9zZS4iKFRoZSBzdGF0ZSkgZmVsdCB0aGVyZSB3YXMgdG9vIG11Y2ggcmlzayBhbmQgZmluYW5jaWFsIGV4cG9zdXJlIGFuZCwgZGVzcGl0ZSB0aGUgZmFjdCBJIGRpc2FncmVlIHdpdGggdGhlbSwgdGhleSBkZWNpZGVkIGl0IHdvdWxkIGJlIHRoZSBiZXN0IHRoaW5nIGZvciB0aGUgc3R1ZGVudHMgdG8gaW1tZWRpYXRlbHkgZW5yb2xsIGluIGEgdGVhY2ggb3V0IHByb2dyYW0gYXQgYW5vdGhlciBzY2hvb2wsIiBoZSBzYWlkLCBhZGRpbmcgaGUgZG9lcyBub3QgYmxhbWUgQ29sb3JhZG8gQm9uZFNoYXJlcy4gCkhlYWxpbmcgdGhlIHdvdW5kcyB0aG9zZSB0aW1lcyBjcmVhdGVkIG5vdCBvbmx5IHJlc3VsdGVkIGluIGEgcmV1bmlvbiBvZiBDcmVlZCBsYXN0IHllYXIsIFN0YXBwIHNheXMsIGJ1dCBhbHNvIHRvb2sgaGltIGJhY2sgdG8gdGhlIGNvcmUgb2Ygd2hhdCBtYWRlIHRob3NlIHNvbmdzIHNvIGdvb2QuCkkgZ3Vlc3MgZG9uIHRoaW5rIHRvbyBoYXJzaGx5IGFib3V0IHlvdXIgZGFkLiBOb25lIG9mIHVzIHJlYWxseSBrbm93IHdoYXQgdGYgd2UgZG9pbmcgYW5kIGlmIGhlIGEgZ29vZCBndXkgaGUgcHJvYmFibHkganVzdCBkb2luZyBoaXMgYmVzdCB0byBwcmVwYXJlIHlvdSBmb3IgYWxsIHRoZSBzaGl0IGhlIGhhZCB0byBnbyB0aHJvdWdoLkkgbm90IGNvbXBsYWluaW5nIHRoYXQgaGUgc2NvbGRzLCBpbSBhbiBhZHVsdCB3aXRoIGEgam9iIG15c2VsZiBhbmQgaSBrbm93IG1vcmUgdGhhbiBhbnlvbmUgdGhhdCBoZSBzY29sZHMgZm9yIG15IG93biBnb29kIGltIGp1c3Qgc2F5aW5nIGl0cyBoYXJkIHRvIHVuZGVyc3RhbmQgaGltIGFuZCBoZSBpcyBraW5kIG9mIGF3a3dhcmQuIApMYSBtZWRpdGF6aW9uZSBLdW5kYWxpbmkgIHVuYSBmb3JtYSBkaSBtZWRpdGF6aW9uZSBPc2hvIGZpbmFsaXp6YXRhIGEgcmlzdmVnbGlhcmUgdW5hIHBlY3VsaWFyZSBmb3JtYSBkaSBlbmVyZ2lhLCBkZW5vbWluYXRhIEt1bmRhbGluaS4gQ29uIEt1bmRhbGluaSBzaSAgc29saXRpIGludGVuZGVyZSB1bmEgZm9ybWEgZGkgZW5lcmdpYSByZXNpZHVhbGUsIHByb3ZlbmllbnRlIGRhbGxhIGNyZWF6aW9uZSwgbG9jYWxpenphdGEgaW4gY2lhc2N1bm8gZGkgbm9pLiBBbGxvIHN0YXRvIGxhdGVudGUsIGxhIEt1bmRhbGluaSBkaW1vcmEgbmVsbGEgem9uYSBkZWxsJ29zc28gc2Fjcm8sIHBvc3RvIGFsbGEgYmFzZSBkZWxsYSBjb2xvbm5hIHZlcnRlYnJhbGUsIG5lbGxhIHpvbmEgZGVsIHBlcmluZW8sIGNoZSBsb2NhbGl6emEgTXVsYWRoYXJhLCBpbCBwaSBiYXNzbyBkZWkgY2hha3JhLgpTb2NpYWwgbWVkaWEgY29udGVudCBvZiBhbnkga2luZCBpcyBub3QgYWxsb3dlZC4gCkJ1dCB0aGlzIGhhcyBnb25lIGJ5IHRoZSB3YXlzaWRlIGFzIHlvdW5nZXIgcGFyZW50cyBhbmQgdGhlIE1pbmlzdHJ5IG9mIEVkdWNhdGlvbiBoYXZlIGRldGVybWluZWQgdGhhdCB0ZWFjaGVycyBhcmUgbm8gbG9uZ2VyIHRvIHVzZSBhbnkgc29ydCBvZiBwdW5pc2htZW50LiAKIklzIHNvbWV0aGluZyB3cm9uZyB3aXRoIGJlaW5nIHBvb3IgYW5kIG5vdCBoYXZpbmcgYSBsb3Qgb2YgbW9uZXk/IgpXZSBjaGF0dGVkIGZvciBhIGxvbmcgdGltZSBhbmQgbGlzdGVuZWQgdG8gbXVzaWMuIAoiVGhpcyBpcyBhIHdob2xlIG5ldyBsZXZlbC4iQ2FycmllIEhhdmVyZmllbGQsIGEgc2hlcmlmZidzIG9mZmljZSBzcG9rZXN3b21hbiwgc2FpZCBzaGUgY291bGQgbm90IGNvbmZpcm0gd2hldGhlciBDb2xsaW5zIHdhcyBzdXBwb3NlZCB0byBiZSB3ZWFyaW5nIGFuIGFua2xlIG1vbml0b3IuIldlIGhhdmUgc29tZSByZXN0cmljdGlvbnMgb24gd2hhdCB3ZSBjYW4gcmVsZWFzZSBmb3IganV2ZW5pbGVzLCIgSGF2ZXJmaWVsZCBzYWlkLiAiV2UgZG9uJ3Qgd2FudCB0byB0aXAgb3VyIGhhbmQgYWJvdXQgdG9vIG11Y2ggaW5mb3JtYXRpb24uIkxldmVyZW50eiBzYWlkIGhlJ3Mgd29ycmllZCBhYm91dCB0aGUgbG9uZyB0ZXJtIHJlY292ZXJ5IG9mIGhpcyBtb3RoZXIsIGFuZCBoZSdzIHNldCB1cCBhIEdvRnVuZE1lIGFjY291bnQgdG8gcmFpc2UgbW9uZXkgdG8gaGVscCBvZmZzZXQgaGVyIG1lZGljYWwgYmlsbHMuIApGb2xsb3cgdGhlaXIgcGFnZSBmb3IgdXBkYXRlcyBvbiBmcmVlIGZsdSBmYWlycyBhbmQgb3RoZXIgb3V0cmVhY2ggZXZlbnRzIG9uIGNhbXB1cywgY29udGVzdHMgYW5kIGdpdmVhd2F5cyBmb3IgeW91ciBzdHVkZW50IGFuZCBpbXBvcnRhbnQgaGVhbHRoIGFubm91bmNlbWVudHMgZnJvbSBUaGUgQXNoZSBDZW50ZXIuUHJpbWFyeSBDYXJlVGhlIEFzaGUgQ2VudGVyIG9mZmVycyBkaWFnbm9zaXMgYW5kIHRyZWF0bWVudCBvZiBpbGxuZXNzLCBpbmp1cnksIGFuZCBvbmdvaW5nIGNvbmRpdGlvbnM7IHNjcmVlbmluZyBmb3Igc2V4dWFsbHkgdHJhbnNtaXR0ZWQgaW5mZWN0aW9ucyBhbmQ7IHByZXZlbnRhdGl2ZSBoZWFsdGggY291bnNlbGluZyBhbmQgZWR1Y2F0aW9uLlJhdGhlciB0aGFuIHdhaXQgZm9yIGFuIGFwcG9pbnRtZW50IHdpdGggYW4gQXNoZSBjbGluaWNpYW4sIGFsbCBzdHVkZW50cyBub3cgaGF2ZSB0aGUgb3B0aW9uIG9mIHNwZWFraW5nIHdpdGggYSByZWdpc3RlcmVkIGNvbnN1bHQgbnVyc2UuIApEYXRhIGNhbiBiZSByZXRyaWV2ZWQgZnJvbSBoZXJlIGJyb3VnaHQgaW50byBSQU0sIGRhdGEgY2FuIGJlIHN0b3JlZCBoZXJlIGZyb20gUkFNLiAKVHJ1bXAgYWN0dWFsbHkgcHV0IGEgY2FzaW5vIG91dCBvZiBidXNpbmVzcy4gSGUgd2VudCBiYW5rcnVwdCBzZXZlcmFsIHRpbWVzLiAKV2UgaGF2ZSBhIGdhbWUgcGxhbiwgYW5kIHdlIHN0aWNrIHdpdGggaXQsIHdlIG5lZWQgZXZlcnlib2R5IHRvIGJlIG9uIHRoZSBzYW1lIHBhZ2UuIEkgZG9uIHRoaW5rIGV2ZXJ5IGdhbWUgd2UgcGxheWVkIGV2ZXJ5b25lIGJlZW4gb24gdGhlIHNhbWUgcGFnZS4gCiJJdCdzIHZlcnkgbmljZSB0byBiZSBiYWNrIGluIFNpbmdhcG9yZSBhbmQgSSdtIHZlcnksIHZlcnkgaGFwcHkgd2l0aCB0aGUgbWF0Y2ggdG9uaWdodCwgd2l0aCB0aGUgcGVyZm9ybWFuY2UgdG9uaWdodCwiIFN2aXRvbGluYSB0b2xkIHRoZSBjcm93ZC4gIkkgaGFkIHRvIHN0YXkgZm9jdXNlZCBhbmQgYmUgc3Ryb25nIG1lbnRhbGx5LiBJIGhhZCB0byBwbGF5IHF1aWNrbHkgYW5kIGtlZXAgbW92aW5nIG15IGZlZXQgc28gSSBuZWVkIGEgbWFzc2FnZSBub3cuClNpbmNlIGl0IGFwcGVhcnMgb24gdGhlIDE2dGggY2VudHVyeSBwbGFucywgU3RlZXIga25vd3MgaXQncyBhdCBsZWFzdCB0aGF0IG9sZCwgYnV0IGhlJ3Mgc3RpbGwgaG9waW5nIHRvIGVzdGFibGlzaCBhbiBhY3R1YWwgY29uc3RydWN0aW9uIGRhdGUuIApSZWxhdGVkICJib2FyZCByZWFkaW5nIHNraWxscyIuIGxlYXJuIHRvIHF1aWNrbHkgaWRlbnRpZnkgdGhlIG51dHMsIHRoZW4gdGhlIDEgdGhyb3VnaCBudGggbnV0cywgZXRjLiBDb3VudGluZyB0aGUgcG90LCBrbm93aW5nIHBvdCBvZGRzLCBldGMuCldoZW4gR29uemFnYSBhbm5vdW5jZWQgaW4gT2N0b2JlciB0aGF0IFRpbGxpZSBoYWQgc3VyZ2VyeSB0byByZXBhaXIgYSBzdHJlc3MgZnJhY3R1cmUgaW4gaGlzIHJpZ2h0IGFua2xlLCB0aGUgcmVsZWFzZSBub3RlZCBhbiBhcHByb3hpbWF0ZSByZWNvdmVyeSB0aW1lIG9mIGVpZ2h0IHdlZWtzLiBUaGF0IHR1cm5lZCBvdXQgdG8gYmUgbmVhcmx5IHNwb3Qgb24uIFRoZSBzY2hvb2wgaXNzdWVkIGFub3RoZXIgcmVsZWFzZSBTYXR1cmRheSBvbiBUaWxsaWUncyBsYXRlc3QgaW5qdXJ5LCBub3RpbmcgdGhlIHRpbWVsaW5lIHRvIHJldHVybiBpcyAidW5jZXJ0YWluLiIuIAoiTGV0IHRoZW0gaGF2ZSBpdCwiIHNoZSBzYXlzIGlmIGl0J3Mgc29tZXRoaW5nIHlvdSBhcmVuJ3QgaW52ZXN0ZWQgaW4uIApBcmUgbm90IGxvY2tlZCBpbnRvIGEgY29udHJhY3QgbGlrZSB5b3UgYXJlIHdpdGggY2VsbHBob25lIG9yIHJlbnRhbCBhZ3JlZW1lbnRzLiAKQXMgcmVwb3J0ZWQgYnkgYSBCcml0aXNoIG5ld3NwYXBlciwgQ2FtcGJlbGwgaGFzIG5ldmVyIHNlZW4gaGVyIGJpb2xvZ2ljYWwgZmF0aGVyLCB3aG8gaXMgYmVsaWV2ZWQgdG8gaGF2ZSBsZWZ0IGhlciBtb3RoZXIgd2hpbGUgc2hlIHdhcyBzdGlsbCBwcmVnbmFudC4gCllvdSBiZXQgcG90IGFuZCB2aWxsYWluIGNvdWxkIGNhbGwgd2l0aCBhIGZsdXNoIGRyYXcsIHdoaWNoIGlzIGluIGZhY3QgZmFyIG1vcmUgbGlrZWx5IHRoYXQgOHggc2luY2UgOHggaXMganVzdCBhIGd1dHNob3QgYW5kIHRoZXJlIGFyZW4gdGhhdCBtYW55IGNvbWJvcyBvZiA4eCB0aGF0IG1ha2Ugc2Vuc2UuIApOb3RoaW5nIHdyb25nIHdpdGggQ0cgaWYgdGhhdCB3aGF0IHdvcmtzIGZvciB5b3UsIGJ1dCBpdCB3YXMgaGVsbCBvbiBteSBqb2ludHMuIEkgd2FzIHdlYXJpbmcga25lZSBicmFjZXMgYW5kIHRoaW5raW5nIG9mIGdldHRpbmcga25lZXMgcmVwbGFjZWQgYWZ0ZXIgQ0cgd29ya291dHMoSSAzMSBhbmQgb3ZlcndlaWdodCwgYnV0IG5vdCBvYmVzZSkuIEkgZW5kZWQgdXAgaHVydGluZyBteXNlbGYgZG9pbmcgQ0cgYmVjYXVzZSB0aGUgdHJhaW5lciB3YXMgaGF2aW5nIHVzIGRvIGFzIG1hbnkgcmVwcyBhcyB3ZSBjb3VsZCBnZXQgaW4sIHJhdGhlciB0aGFuIGZvY3VzaW5nIG9uIHRoZSBmb3JtLiAKVGhlIGFuc3dlciBkZXBlbmRzIG9uIHdoaWNoIGNvdW50cnkgeW91IGNvbWUgZnJvbS4gCk5vdywgd2hlbiBjcmVhdGluZyB0aGUgbWVzc2FnZSBpbiBzdWNoIGEgd2F5IHRoYXQgeW91IHdhbnQgdG8gY3JlYXRlIGEgY2xlYXIgY2FsbCB0byBhY3Rpb24sIGl0IGlzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3UgYXZvaWQgZGlzdHJhY3RpbmcgdGhlIHJlYWRlci4gClRoZSBjb21tdW5pdHkgZXhjaXRlbWVudCBmb3IgT25lIFdlZWsgS0MsIENvb21lcyBzYWlkLCBpcyBwYWxwYWJsZS4gdGhlIGNvbnZlcnNhdGlvbnMgSSBoYWQgd2l0aCBwZW9wbGUgYSBsb3Qgb2YgdGhlbSBhcmUgcmVhbGx5IGV4Y2l0ZWQgYWJvdXQgZ2V0dGluZyBvdXQgdGhpcyB3ZWVrLCBoZSBzYWlkLiBwZW9wbGUgZXZlbiBzYWlkLCBJIG1pZ2h0IHRha2Ugb2ZmIHdvcmsgZm9yIGEgZmV3IGRheXMgYW5kIG1ha2Ugc3VyZSBJIGNhbiBnZXQgdG8gYSBsb3Qgb2YgdGhlc2UgZXZlbnRzLiBzYWlkIE9uZSBXZWVrIEtDIG9yZ2FuaXplcnMgZHJldyBpbnNwaXJhdGlvbiBmcm9tIHRoZSBsaWtlcyBvZiBCb3VsZGVyIFN0YXJ0dXAgV2VlayBhbmQgQ2hpY2FnbyBJZGVhcyBXZWVrLCBidXQgdGhlIGV2ZW50IHdpbGwgZmVhdHVyZSBhIGRpc3RpbmN0IEthbnNhcyBDaXR5IGZsYXZvci4gQW5kIENvb21lcyBob3BlcyBpdCBjYW4gY2hhbmdlIHNvbWUgcGVyc3BlY3RpdmVzIG9uIHRoZSBhYmlsaXR5IHRvIGJ1aWxkIGEgYnVzaW5lc3MgaW4gdGhlIG1ldHJvIGFyZWEuClJld2FyZCBiZWZvcmUgbWFraW5nIGEgYmV0LiBTaW1wbGUgZm9ybXVsYSBpcyBFVj0gKHJpc2spLyhyaXNrK3Jld2FyZCkuIApEb24gYmUgYWZyYWlkIG9mIEhFQ1MgYmVjYXVzZSB5b3UgYmVlbiBzY2FyZWQgaW50byB0aGlua2luZyBpdCBkZWJ0IGFuZCBkZWJ0IGlzIGJhZC4gClRoZSBmb29kIGlzIGFtYXppbmcgYW5kIGFsY29ob2wgZmxvd3MgbGlrZSBhIHJpdmVyLiAKV2hhdCdzIHRoZSBmaXJzdCB0aGluZyB5b3UnbGwgYnV5IHdpdGggdGhlIG1vbmV5IGlmIHlvdSB3aW4/RGVmaW5pdGVseSBhIGZsYXQgaW4gTG9uZG9uLiAKUmVsYXRlZCBhcnRpY2xlOiBUaGUgU2NpZW5jZSBvZiBTcGluZSBhbmQgSm9pbnQgSGVhbHRoCk1vdWFpcyAhIGlsIGF1cmFpdCBwdSBwcnNlbnRlciB1bmUgZGVzIGlsbHVzdHJhdGlvbnMgcmFsaXNlcyBwb3VyIGwncGlzb2RlIDpDaGV6IGxlcyBib25vYm9zCkthcmwgTWFyeCBiZWxpZXZlZCBtYW55IHRoaW5ncywgYnV0IGhlIGRpZCBub3Qgc2V0IHVwIHRoZSBibHVlcHJpbnQgZm9yIHRoZSBzdGF0ZSB0aGF0IGFsbCB0aG9zZSBuYXRpb25zIHlvdSBtZW50aW9uZWQgdXNlZCBub3IgZGlkIHRoZXkgZm9sbG93IGhpcyBpZGVhcy4gTWFyeCB3YXMgYSBzdHJvbmcgYmVsaWV2ZXIgaW4gSGVnZWxpYW4gRGlhbGVjdGljcywgd2hpY2ggaXMgYSB3YXkgb2Ygdmlld2luZyBoaXN0b3J5IGFzIGEgc2VxdWVuY2Ugb2YgY29uZmxpY3RzLCB3aGVyZSBvbmUgc2lkZSBwcmVzZW50cyBhIHRoZXNpcyBhbmQgdGhlIG9wcG9zaW5nIGFuIGFudGl0aGVzaXMsIGFuZCB0aGUgdHdvIGNsYXNoLCBtZXJnaW5nIGFzcGVjdHMgb2YgYm90aCB0byBmb3JtIGEgc3ludGhlc2lzIHRvIGNyZWF0ZSB0aGUgbmV4dCBjb25mbGljdC4gCkl0IHdvdWxkIGJlIGludGVyZXN0aW5nIHRvIGNvbXBhcmUgdGhpcyBzb3J0IG9mIGV2ZW50IHdpdGggcGFzdCBldmVudHMuIEltbWVkaWF0ZWx5IGNvbWluZyB0byBtaW5kIGlzIFdlc3Rlcm4gc2V0dGxlcnMgc2hvd2luZyB1cCBpbiB0aGUgQW1lcmljYXMuIEl0IGEgbmljZSB0aG91Z2h0IHRoYXQgYSBjaXZpbGl6YXRpb24gd291bGQgZmluZCB1cyAoZm9yIHRoaXMgc2NlbmFyaW8gaXQgbm90IHRoZSBvdGhlciB3YXkgYXJvdW5kKSBhbmQgd2FudCB0byB0cmFkZSBhIHRlYWNoIHVzIHNlY3JldHMgb2YgdGhlIGdhbGF4eSwgYnV0IGl0IHdvcnJpZXMgbWUgdGhhdCB3ZSB3b3VsZCBiZSBmYXIgb3V0IG9mIG91ciBkZXB0aC4gRm9yIGluc3RhbmNlLCB0aGUgTmF0aXZlcyAic29sZCIgaHVnZSBwYXJ0cyBvZiBsYW5kIHRvIFdlc3Rlcm5lcnMgZm9yIHdoYXQgYW1vdW50ZWQgdG8gdHJpbmtldHMgYW5kIGxvb3NlIGNoYW5nZS4gV2hhdCBpZiB3ZSBtYWtlIGEgc2ltaWxhciBibHVuZGVyPyBXZSBtaWdodCBiZSBzbyBjb21wbGV0ZWx5IHVuYXdhcmUgb2YgcG90ZW50aWFsIHVzZXMgZm9yIGVsZW1lbnRzIHRoYXQgd2UganVzdCBnaXZlIHRoZW0gYXdheSBmb3Igbm90aGluZy4gRXZlbiB3b3JzZSBpcyBhIHNjZW5hcmlvIHdoZXJlIGFsaWVucyBzaG93IHVwIGFuZCBpbmZvcm0gdXMgdGhhdCB0aGV5IG5vdyBvd24gdGhpcyBzZWN0aW9uIG9mIHRoZSBnYWxheHkuIFdlIHdvdWxkIHByb3Rlc3QsIGJ1dCB0aGV5IHdvdWxkIHNheSB0aGF0IHNpbmNlIHdlIGFyZSBub3QgYW4gYWR2YW5jZWQgZW5vdWdoIGNpdmlsaXphdGlvbiB3ZSBhcmUgbm90IGVsaWdpYmxlIHRvIG93biBwYXJ0cyBvZiB0aGUgZ2FsYXh5LiBXZSBhcmUgZ2l2ZW4gdGhlIGNob2ljZSB0byBwYXkgYSB0YXggb3IgbGVhdmUuClVuZCBkZXIgZWlucHJ1Y2hnZWJlciBtdXNzdGUgYW0gRW5kZSBkaWUgWmVjaGUgYmV6YWhsZW4uIHNlaXRkZW0gaGFiZSBpY2ggenVtaW5kZXN0ZW5zIGluIGRlciByaWNodHVuZyBydWhlLgpJIHVuZGVyc3RhbmQgdGhhdCB0YWtpbmcgYSB5ZWFyIGF3YXkgZnJvbSBlYWNoIG90aGVyIGlzIHJlYWxseSB0b3VnaCwgSSBkb25lIGEgdHJhbnNhdGxhbnRpYyBMVFIgYW5kIGl0IHdhcyByZWFsbHkgdG91Z2gsIEkgd29uIGxpZS4gCkxvbmcgYXMgeW91IGRvbiBnb3QgYXJvdW5kIHllbGxpbmcgeW91IG1ha2luZyBtb25leSBhYnJvYWQsIHlvdSBzaG91bGQgYmUgZ29vZC4gT2YgY291cnNlIEkgdGhpbmsgaWYgeW91IGdvdCB0aGUgbW9uZXkgZ2V0dGluZyBhIHdvcmsgcGVybWl0IGlzIGEgbm8gYnJhaW5lci4gQXMgdGhlIHdvcmsgcGVybWl0IHJ1bnMgYSBiaWcgc3RhcnQgdXAgcHJpY2UgYWxvbmcgd2l0aCB0aGUgYW5udWFsIHJlbmV3YWxzLiBCdXQgd29ydGggaXQgZm9yIHRoZSBwZWFjZSBvZiBtaW5kLgpUaGlzIGlzbiBhIHF1ZXN0aW9uLCBidXQgSSBzdGlsbCBsaWtlIHRvIHJlc3BvbmQgdG8gaXQuIEFtIEkgIndlbGwga25vd24iIGZvciBoYXZpbmcgcGFydGlzYW4gdmlld3M/IFdoaWNoIHZpZXdzIGFyZSB0aG9zZT8gSSB0aGluayB0aGF0IEkgYW0gc2xpZ2h0bHkgaW4gZmF2b3Igb2YgU3RhY2sgYXMgYSBidWlsZCB0b29sIGNvbXBhcmVkIHRvIENhYmFsLiBFdmVuIHNvIEkgcmVjb2duaXplIHRoYXQgQ2FiYWwgKGFuZCBOaXgpIGFyZSB1c2VmdWwgdG8gcGVvcGxlIGJ1dCB0aGV5IHNpbXBseSBkb24gZml0IG15IHdvcmtmbG93IHRoYXQgd2VsbCByaWdodCBub3cuLiAKQWZ0ZXIgdGhhdCwgdGhlIG5leHQgcGxheWVyIGNhbiBwbGF5IGFueXRoaW5nIHJhbmtlZCBoaWdoZXIgdGhhbiB0aGUgbGFzdCBoYW5kLiAKSW4gZG9pbmcgc28sIGl0IGFpbXMgdG8gZXhhbWluZSBob3cgdG8gYXBwbHkgYW5kIGRldmVsb3AgcHN5Y2hvbG9naWNhbCBpbnNpZ2h0cyB1c2VmdWwgdG8gYW4gZWxpdGUgc3BvcnRpbmcgZW52aXJvbm1lbnQuMzIgc3ViZWxpdGUgYXRobGV0ZXMgKDE4IG1hbGVzLCBtZWFuIGFnZTogMjAgeWVhcnMpIHBhcnRpY2lwYXRlZCBpbiB0aGUgc3R1ZHkuIFBlcmZvcm1hbmNlIGFjcm9zcyB0aHJlZSBjYXRlZ29yaWVzIG9mIGRlY2lzaW9uIG1ha2luZyB3YXMgYXNzZXNzZWQgdW5kZXIgY29uZGl0aW9ucyBvZiBsb3cgYW5kIGhpZ2ggcGh5c2ljYWwgcHJlc3N1cmUuIERlY2lzaW9uIG1ha2luZyB1bmRlciByaXNrIHdhcyBtZWFzdXJlZCB3aXRoIHBlcmZvcm1hbmNlIG9mIHRoZSBDYW1icmlkZ2UgR2FtYmxpbmcgVGFzayAoQ0dUOyBSb2dlcnMgZXQgYWwuLCAxOTk5KSwgZGVjaXNpb24gbWFraW5nIHVuZGVyIHVuY2VydGFpbnR5IHdpdGggdGhlIEJhbGxvb24gQW5hbG9ndWUgUmlzayBUYXNrIChCQVJUOyBMZWp1ZXogZXQgYWwuLCAyMDAyKSwgYW5kIGZhc3QgcmVhY3RpdmUgcmVzcG9uc2VzIGFuZCBpbmhpYml0aW9uIHZpYSB0aGUgU3RvcCBTaWduYWwgUmVhY3Rpb24gVGltZSBUYXNrIChTU1JUOyBMb2dhbiwgMTk5NCkuIApBdHRlbXB0IHRvIGxvY2F0ZSBhaXJlZC4gVGhlIGp1dmVuaWxlIHdhcyBsaXN0ZWQgYXMgbWlzc2luZy9ydW5hd2F5IGluIHRoZSBhcHByb3ByaWF0ZSBkYXRhYmFzZXMuIFRoZSBqdXZlbmlsZSByZXR1cm5lZCBob21lIG9uIGhpcyBvd24sIHNhZmUuIE9mZmljZXJzIHJlc3BvbmRlZCB0byBhIGJ1c2luZXNzIG9uIFBsYXphIERyaXZlIGZvciBhIHN1c3BlY3QgKDM0IHllYXIgb2xkIFdNKSBhdHRlbXB0aW5nIHRvIHN0ZWFsIGEgY2F0LiBUaGUgc3VzcGVjdCByZXNpc3RlZCBjb250YWN0IGJ5IHN0b3JlIGVtcGxveWVlcy4gVGhlIHN1c3BlY3Qgd2FzIGFycmVzdGVkIGZvciB0aGVmdCBvZiBkb21lc3RpYyBhbmltYWwgYW5kIGRpc29yZGVybHkgY29uZHVjdC4gCklmIHRoZSBjbGllbnQgcmVhbGx5IHdhbnRzIHNvbWUgY29uY2VhbG1lbnQsIEknZCBnbyB3aXRoIHRoZSB2YWRkaW8gaW4gYSBoZWFydGJlYXQgYmVjYXVzZSB0aGUgdmFsdWUgaXMgdGhlcmUgYW5kIHRoZSBoaWRpbmcgc29sdXRpb24gaXMgYXBwZWFsaW5nLgpNZXVuaWVyIFJpY2hhcmQgR2VvcmdlIERpY2sgUSBDCkpha2NDU0dPIHUKVGhpcyB5ZWFyJ3MgcHJvZ3JhbSAnaGFzIG9uZSBkZWNpZGVkIGFkdmFudGFnZSBmb3IgdGhlIHJlY3J1aXRpbmcgY29tcGFueSB3aGljaCB3YXMgbGFja2luZyBpbiB0aGUgZmlyc3QgYXR0ZW1wdCB0byBpbnRlcmVzdCBjb2xsZWdlIHN0dWRlbnRzIGluIGpvYnMgImF0IGhvbWUuIiBIb21ldG93biBDYXJlZXJzIGlzIG5vdyBvcGVuIHRvIHN0dWRlbnRzIGdyYWR1YXRpbmcgaW4gMTkwOCBmcm9tIGVpdGhlciB0d28gb3IgZm91ciB5ZWFyIGluc3RpdHV0aW9ucy4gCkxldCdzIHNheSB0aGVyZSBpcyBhIHBvcHVsYXRpb24gb24gMTAwIGRvZ3MuIDUwIGhhdmUgYmxhY2sgZnVyLCAyNSBoYXZlIGJyb3duIGFuZCAyNSBoYXZlIHdoaXRlLiBGb3Igc2ltcGxpY2l0eSBsZXQncyBzYXkgVGhlIGZ1ciBjb2xvciBpcyBjb250cm9sbGVkIGJ5IG9uZSBnZW5lIHdlIHdpbGwgY2FsbCAiYyIsIHdoZXJlIHRoZSBnZW5vdHlwZSBDQyBtYWtlcyB3aGl0ZSBmdXIsIGNjIG1ha2VzIGJyb3duIGZ1ciBhbmQgQ2MgbWFrZXMgYmxhY2suIFRoZSBkb2dzIGRvbid0IGNhcmUgYWJvdXQgZnVyIGNvbG9yIHdoZW4gdGhleSBicmVhZCwgYW5kIHRoZSBmdXIgY29sb3IgZ2VuZSBpcyBvbmx5IG1hcmdpbmFsbHkgbGlua2VkIHRvIG90aGVyIGdlbmVzIHdoaWNoIGFmZmVjdCB0aGUgZG9ncyBmaXRuZXNzLgpBcyB0aGUgYmVuZWZpdCBvZiBmYWxzZSBkaXNjb25uZWN0cyBpbiBsaW1pdCBwb2tlciBpcyBtdWNoIHNtYWxsZXIsIG1hbnkgcG9rZXIgcm9vbXMgcHJvdmlkZSBwcm90ZWN0aW9uIG9ubHkgb24gdGhlIGxpbWl0IG9yIGFkZCBzcGVjaWFsIHRhYmxlcyB3aXRob3V0IHByb3RlY3Rpb24gb24gdGhlIG5vIGxpbWl0IGFuZCBwb3QgbGltaXQuIFRoZXJlIGlzIG5vIGRpc2Nvbm5lY3QgcHJvdGVjdGlvbiBpbiB0b3VybmFtZW50cyBhdCBhbGwuLiAKQnV0IHRoZSBDb2xvcmFkbyBCdXJlYXUgb2YgSW52ZXN0aWdhdGlvbiBvbiBUaHVyc2RheSByZWxlYXNlZCBkZXRhaWxzIG9mIGEgRmViLiAxOCBwcmlzb24gaW50ZXJ2aWV3IGluIFdpc2NvbnNpbiB3aXRoIFdhdHRzLCBhYm91dCBmb3VyIG1vbnRocyBhZnRlciBwbGVhZGluZyBndWlsdHkgdG8gdGhlaXIgbXVyZGVycy4gClRoYW5rIGZvciB5b3VyIGtpbmQgd29yZHMuIEl0cyBoYXJkIHRvIGtub3cgd2hhdCB0byBkbyBhdCBhbGwgYXQgdGhpcyBwb2ludC4gCkEgTWVzc2FnZSBGcm9tIE91ciBTcG9uc29yClRoZXkgYXJlIHRoZSByZXN1bHQgb2YgdHdvIGxpdmluZyBjZWxscywgb25lIGZyb20gZWFjaCBvZiB0aGVpciBwYXJlbnRzLiAKVHJhY2sgeW91ciBwdXJjaGFzZXMgcmVsYXRpdmUgdG8geW91ciBidWRnZXQ6IEV2ZXJ5IGF1Y3Rpb24gaXMgZGlmZmVyZW50LCBhbmQgeW91IGNhbid0IHByZWRpY3QgcHJlY2lzZWx5IGhvdyBtdWNoIHBsYXllcnMgd2lsbCB3aW5kIHVwIGdvaW5nIGZvci4gWW91ciBidWRnZXQgd29uJ3QgbWF0Y2ggdXAgZXhhY3RseSB3aXRoIGV2ZXJ5IHBsYXllciwgYnV0IHlvdSBzdGlsbCBuZWVkIHRvIHRyYWNrIHdoZXJlIHlvdSBzdGFuZCBzbyB5b3VyIGJpZGRpbmcgY2FuIGJlIGluZm9ybWVkIGFuZCB5b3UgY2FuIG1ha2UgdGhlIG1vc3Qgb2Ygd2hhdCB5b3VyIHJlbWFpbmluZyBkb2xsYXJzLiAKVGhpcyByZWFsaXplZCwgZmxpZ2h0IHdhcyBub3QgbG9uZyB0byBmb2xsb3cgZml2ZSB5ZWFycyBmcm9tIHNpY2tiZWQgYW5kIG5lYXIgZGVhdGggdG8gMTAwMCBnbGlkZXMsIHNldmVuIHRvIHBvd2VyZWQgZmxpZ2h0LCBhbGwgcGFpZCBmb3IgYnkgdGhlIGJyb3RoZXJzLCBhbmQgbW9zdGx5IGZ1bmRlZCBieSB0aGVpciBiaWtlIHNob3AuIEFuZCBieSB0aGUgd2F5LCBhY2NvcmRpbmcgdG8gRGF2aWQgTWNDdWxsb3VnaCBpbiBoaXMgYmlvZ3JhcGh5IG9mIHRoZSBXcmlnaHRzIHRoZSB3aG9sZSBmbHlpbmcgZXhlcmNpc2UgaW5jbHVkaW5nIG1hdGVyaWFscywgYm9va3MsIG1hY2hpbmVyeSwgdHJhdmVsLCBmb29kLCBhbmQgc28gb24gZnJvbSAxOTAwIHRvIDE5MDMsIGNvc3QgdGhlIGJyb3RoZXJzIHVuZGVyICQxMDAwLiApLiAKSWYgcGVvcGxlIGhhdmUgbm90aWNlZCBhIGNoYW5nZSBpbiB5b3UgdGhhdCBpcyBzaWduIGFuZCBkZXByZXNzaW9uIGlzIGNvbnRhZ2lvdXMuIApJZiB0aGVyZSBpcyBkZW1hbmQgZm9yIGl0LCBpdCBoYXBwZW5zLiBOb2JvZHkgbmVlZHMgdG8gY29udmluY2UgYW55Ym9keS4gClRpY2tldHMgZm9yIHRoZSAyMSBvdmVyIHNob3cgcmFuZ2UgZnJvbSAkODUgdG8gJDE1OS41MCBhbmQgYXJlIGF2YWlsYWJsZSBub3cgb24gVGlja2V0bWFzdGVyIGFuZCBhdCB0aGUgUm9ja3Npbm8gYm94IG9mZmljZS4gCklmIFRveW90YSBwbGF5cyBpdHMgY2FyZHMgcmlnaHQsIG90aGVyIGF1dG9tYWtlcnMgd2lsbCBoYXZlIHRvIHBheSBsaWNlbnNpbmcgZmVlcyB0byBUb3lvdGEgZm9yIGV2ZXJ5IGZ1ZWwgY2VsbCBjYXIgdGhleSBidWlsZC4gIlRveW90YSBpcyBidWlsZGluZyB0aGVpciBvd24gcG93ZXIgY29udHJvbGxlcnMgYW5kIG1vdG9ycywgYW5kIHRoZXkgaGF2ZSBhIGpvaW50IHZlbnR1cmUgd2l0aCBQYW5hc29uaWMgdG8gYnVpbGQgYmF0dGVyaWVzLCIgc2F5cyBhbmFseXN0IER1bGVlcC4gClRoZU1pZ2h0eUFjZXJpYyB1CllvdXIgZmVldCBhcmUgYSB3aG9sZSBsb3QgZmFyIG1vcmUgc2Vuc2l0aXZlIHRoYW4gdGhleSBhcHBlYXIuIFlvdSBjYW4gbG9jYXRlIG51bWVyb3VzIG5lcnZlIGVuZGluZ3MgaW4gdGhpcyBwYXJ0IG9mIHlvdXIgcGh5c2lxdWUgYW5kIG1hc3NhZ2luZyB5b3VyIHRvZXMgY291bGQgc3VwcG9ydCB5b3UgcmVsaWV2ZSB0aGUgZGlzY29tZm9ydCB5b3UgZXhwZXJ0aXNlIGluIHlldCBhbm90aGVyIGVsZW1lbnQgb2YgeW91ciBib2R5LiBBIGZvb3QgdGhlcmFwZXV0aWMgbWFzc2FnZSBpcyBhbHNvIGEgd29uZGVyZnVsIHdheSB0byBtaW5pbWl6ZSBzdHJlc3MuLiAKVGhhdCBhZHZhbmNlZCBCZXJyeSBwcm9ncmVzc2lvbiwgaW1vLCBhbmQgbGVkIHRvIHdoYXQgaGUgd2FzIGluIDIwMTcuIE9yIHN0YXJ0aW5nIFBhaWdlIGFzIGEgZnJlc2htYW4gZGlkIHRoZSBzYW1lLiAKRm9yIGluc3RhbmNlLCBvbmUgY2FuIGRpc2N1c3MgZ2VvbWV0cmljIHByb2JhYmlsaXRpZXMgaW52b2x2aW5nIHRocmVlIGRpbWVuc2lvbmFsIHNwYWNlLiAoRnVsbCBBbnN3ZXIpLiAKIlByaW5jZXNzIG9mIEhlYXJ0IiBpcyBrb2tvcm8gbm8gcHVyaW5zZXN1ICgpLCBmb3IgaW5zdGFuY2UuIEhlYXJ0LCBhcyBpbiB0aGUgb3JnYW4sIGlzIHNoaW56ICgpLkkgZ2V0IHdoYXQgeW91IHdlcmUgdHJ5aW5nIHRvIHNheSwgYnV0IHlvdSB1c2luZyBhbGwgdGhlIHdyb25nIHdvcmRzIGFuZCBpdCBtYWtlcyBtZSBub3QgdHJ1c3QgeW91ciBvcGluaW9uIG9uIHRoaXMuSSBkb24gdGhpbmsgR3JpZmZpbiBpcyBhIGJhZCBETSBhdCBhbGwuIApTaWdoQnV0IEkgaGF2ZSBqdXN0IGZpZ3VyZWQgb3V0IGhvdyB0byByYWlzZSAkMzAgYmlsbGlvbiBkb2xsYXJzIGluIHRheCBkb2xsYXJzIG5vdCBzbGF0ZWQgZm9yIHdhciBhbmQgc3R1cGlkaXR5LiAKR3JlYXQsIGV4dHJhIHdlaWdodCBmb3Igbm90aGluZyEgVGhhdCdzIHdoYXQgSSBnZXQgZm9yIG1ha2luZyBhIGxhc3QgbWludXRlIGRlY2lzaW9uLiAKU2FtdWVsQmVsemJlcmcga25vd3MgdGhpcyBmaXJzdCBoYW5kLiBCZW5lZmljaWFyeSBvZiBsaWZlIHNhdmluZyB0cmVhdG1lbnQsIHRoZSBwaGlsYW50aHJvcGlzdCBhbmQgY2FuY2VyIHN1cnZpdm9yLCBhbG9uZyB3aXRoIGhpcyB3aWZlIEZyYW5jZXMgYWdyZWVkIHRvIG1hdGNoIGV2ZXJ5IGRvbGxhciBnZW5lcmF0ZWQgYXQgdGhlIGZhc2hpb24gZiBhcyBhIHdheSB0byB0aGFuayByZXNlYXJjaGVycywgY2xpbmljaWFucyBhbmQgZG9jdG9ycy4gVGhlIGFubm91bmNlbWVudCBtYWRlIGJ5IG1hc3RlciBvZiBjZXJlbW9uaWVzIENocmlzR2FpbHVzIGJ1b3llZCBkb25hdGlvbnMgYW5kIGtlcHQgQWRlc3NhIGF1Y3Rpb25lZXIgSm9obk1hY0RvbmFsZCBleHRyZW1lbHkgYnVzeS4uIApJIGZpcnN0IGdvdCBpbnRvIGdhbWJsaW5nIHNvY2lhbGx5LCB3aGVyZSBJIHdvbiBiaWcgYW5kIGJlZ2FuIHRvIGZlZWwgSSBjb3VsZCB3aW4gbW9yZS4gQXMgSSBzdGFydGVkIHRvIGdhbWJsZSBtb3JlIGl0IGJlZ2FuIHRvIHRha2UgYW4gZW1vdGlvbmFsIGFuZCBwaHlzaWNhbCB0b2xsLCBhbmQgSSBiZWNhbWUgdW5tb3RpdmF0ZWQgYm90aCBhdCB3b3JrIGFuZCBhdCB1bmkuIENvbWluZyB0byB0aGVyYXB5IGhhcyBoZWxwZWQgbWUgc2VlIHRoYXQgZ2FtYmxpbmcgaXMganVzdCBhIHNob3J0IHRlcm0gdGhyaWxsIGZvbGxvd2VkIGJ5IGxvbmcgdGVybSBwYWluLi4gClB1dCBzaW1wbHksIHRoZSBsYXJnZXIgdGhlIGdhbWUgc3BhY2UsIHRoZSBmdXJ0aGVyIHdlIGFyZSBmcm9tIGJlYXRpbmcgdGhlIGdhbWUuIEJ5IGdhbWUgc3BhY2UgSSBtZWFuIG51bWJlciBvZiBwb3NzaWJsZSBnYW1lIHN0YXRlcy4gVGhlIHJlYXNvbiBsaW1pdCBpcyBzbyBmYXIgYWhlYWQgb2Ygbm8gbGltaXQgaXMgc2ltcGx5IHRoYXQgdGhlcmUgYXJlIGEgaHVnZSBudW1iZXIgb2YgcG9zc2libGUgZ2FtZSBzdGF0ZXMgaW4gbm8gbGltaXQgYXMgeW91IGNhbiBiZXQgYW55IGFtb3VudCBvZiB5b3VyIHN0YWNrIGF0IGFueSB0aW1lICAgaW4gbGltaXQgdGhlcmUncyBvbmx5IGEgaGFuZGZ1bCBvZiBwb3NzaWJsZSBiZXR0aW5nIHNlcXVlbmNlcyBpbiBjb21wYXJpc29uLi4gCldlbGwgSSB3YXMgc3BlZWNobGVzcyAoaG9uZXN0IGd1diwgSSB3YXMgbG9zdCBmb3Igd29yZHMpLiAKTmVlZGxlc3MgdG8gc2F5IGl0IHdhcyBhIG1lZGlhIHpvby4gVGhlIHN0b3J5IGFsc28gYmVjYW1lIHBhcnQgb2YgYSBsYXJnZSBib2R5IG9mIGh1bW9yLCBpbmNsdWRpbmcgbXkgZmF2b3JpdGUgam9rZSwgYSBidW1wZXIgc3RpY2tlciB0aGF0IHJlYWQgIkxvcmVuYSBCb2JiaXR0IGZvciBTdXJnZW9uIEdlbmVyYWwuIiBUbyBtYWtlIG1hdHRlcnMgd29yc2UsIEpvaG4gQm9iYml0dCBkZWNpZGVkIHRvIHJlbWFpbiBpbiB0aGUgcHVibGljIGV5ZSBieSBjb250aW51aW5nIHRvIGJlYXQgdGhlIGNyYXAgb3V0IG9mIGdpcmxmcmllbmRzIGFuZCB3aXZlcyBhcyB3ZWxsIGFzIHN0YXJpbmcgaW4gYSBjb3VwbGUgb2YgcG9ybm8gZmxpY2tzLCBvbmUgb2Ygd2hpY2ggd2FzIGNhbGxlZCAiSm9obiBXYXluZSBCb2JiaXR0OiBVbmN1dCIgYW5kIHRoZSBvdGhlciAiRnJhbmtlbnBlbmlzLiIgQm95LCB0YWxrIGFib3V0IHlvdXIgZGV0YWNoYWJsZSBwaGFsbHVzLgooSWYgeW91ciBiYWJ5IHN0aWZmZW5zIHRoZWlyIGFybSwgdHJ5IGppZ2dsaW5nIGl0IGdlbnRseSBmcm9tIHRoZSBlbGJvdyB1bnRpbCB0aGV5IHJlbGF4LikgTm93IHdpdGggdGhlIG90aGVyIGhhbmQgc3Ryb2tlIGRvd24gdGhlIGluc2lkZSBvZiB0aGUgdXBwZXIgYXJtLCBpbnRvIHRoZSBjYXZpdHkgb2YgdGhlIGFybXBpdCwgYW5kIG9mZi4gTWFrZSBzdXJlIHRoaXMgb25lIGlzIGZpcm0sIHNvIHRoYXQgaXQgZG9lcyBub3QgdGlja2xlLiBNb3ZlbWVudHM6IGhvbGRpbmcgaXQgYnkgdGhlIHdyaXN0LCB0YWtlIG9uZSBhcm0gZG93biB0byB0aGUgYmFieSdzIHNpZGUsIHRoZW4gdXAgYW5kIGFjcm9zcyB0byB0aGUgb3Bwb3NpdGUgY29sbGFyYm9uZSwgaW4gdGhlIHN0eWxlIG9mIGEgUm9tYW4gc2FsdXRlLiAKSSBzaG91bGQgaGF2ZSBnb25lIHN0cmFpZ2h0IGhvbWUgZnJvbSB0aGUgcG9zdCBvZmZpY2UgZm9yIHdlIGhhdmUgY29tcGFueS4gQnV0IEkgc2ltcGx5IGhhZCB0byBjb21lIGFuZCBoZWFyIHRoZSBuZXdzLiAKUXUzM2Z3ZWxsaW5ndG9uICAyMSBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvClRoZSBib29rIGlzIG5vdCBhIHN0b3J5IGFib3V0IGEgbWFuIHNlZWtpbmcgdmVuZ2VhbmNlIGFnYWluc3QgYWxsIG9mIGhpcyBjb25zcGlyYXRvcnMgbm9yIGlzIGl0IGVuY291cmFnaW5nIGl0LiBJbiBmYWN0LCBpdCBkaXNjb3VyYWdlcyBpdCwgYXMgaXQgaXMgYWJvdXQgYSBtYW4gd2hvIHB1cnN1ZXMgdmVuZ2VhbmNlIHNvIG11Y2ggdGhhdCBoZSBsb3NlcyBoaXMgaHVtYW5pdHksIHJ1aW5pbmcgaW5ub2NlbnQgcGVvcGxlLCBhbmQgdGhlbiByZWFsaXppbmcgdGhlIGNvbnNlcXVlbmNlcyBvZiB2ZW5nZWFuY2UgdXBvbiBib3RoIG90aGVycyBhbmQgaGltc2VsZi4KU2lnbmFsb25zIHF1YW5kIG1tZSBxdWUgdHJvaXMgcGFnZXMgZW50aXJlcyBwcnNlbnRlcyBkYW5zIGwnb3V2cmFnZSBhbXJpY2FpbiBuJ29udCBwYXMgdCByZXByb2R1aXRlcyBwYXIgTWFyaWphYy4gClRoZSBzaXR1YXRpb24gU2xvdmFraWEgZmFjZWQgd2FzIGEgc3Rpbmtlci4gSWYgdGhlIEVVIGJhaWxvdXQgZnVuZCBjYW4gaGFuZGxlIHRoZSBkZWJ0IGNyaXNpcywgdGhlbiBhbGwgb2YgRXVyb3BlLCBhbmQgcGVyaGFwcyB0aGUgZ2xvYmUsIHdpbGwgbGlrZWx5IGJlIHBsdW5nZWQgaW50byBhIGRlZXAgcmVjZXNzaW9uLiAKQnJlbmRhbiBwcm9iYWJseSB3b3VsZCBoYXZlIGJlZW4gY29udmljdGVkIGluIDQ4IG9yIDQ5IG9mIHRoZSA1MCBzdGF0ZXMgYmVjYXVzZSBpdCBpcyBleHRyZW1lbHkgZGlmZmljdWx0IGZvciBqdXJvcnMgdG8gdW5kZXJzdGFuZCBob3cgb3Igd2h5IHBlb3BsZSB3b3VsZCBjb25mZXNzIHRvIGNyaW1lcyB0aGV5IGRpZG4gY29tbWl0LiAKIkNvbXBzIiBhcmUgbW9zdCBmcmVxdWVudGx5IGRpc3RyaWJ1dGVkIHRocm91Z2ggcGxheWVyIHJld2FyZHMgY2x1YnMuIE1lbWJlcnMgYXJlIGlzc3VlZCBjcmVkaXQgY2FyZCBzaXplZCBwbGFzdGljIGNhcmRzLCB1c3VhbGx5IHdpdGggYW4gZW5jb2RlZCBtYWduZXRpYyBzdHJpcCBvbiB0aGUgYmFjay4gCkRlZmluaXRlbHkgd29ya2VkIGZvciBtZSwgYnV0IGdvdCB0aXJlZCBvZiB0YWtpbmcgc28gbWFueSBwaWxscyBhbmQgYWxzbyBpdCBhIGxvdCBtZXNzaWVyIHRvIGNsZWFuIHVwIGFmdGVyLi4gClZlcnkgcGFuaWNrZWQgdGhhdCBJIG5vdCBnb2luZyB0byBiZSBhYmxlIHRvIGhhbmRsZSBpdCwgYW5kIEkganVzdCBnb2luZyB0byBoYXZlIGh1cnQgZmVlbGluZ3MgZm9yIGEgcmVhbGx5IGxvbmcgdGltZS4gCkRldXhpbWVtZW50LCBsZSBub3V2ZWwgYXJ0aWNsZSBpbmRpcXVlICJsJ2hvbW1lIGV0IGxhIGZlbW1lIG5lIHBldXZlbnQgY29udHJhY3RlciBtYXJpYWdlIGF2YW50IDE4IGFucyBydm9sdXMiLiBMJ21hbmNpcGF0aW9uIHNlIHRyb3V2ZSB0cmUgdW5lIHByb2NkdXJlIGV4Y2VwdGlvbm5lbGxlIHBlcm1ldHRhbnQgIHVuIG1pbmV1ciBkJ3RyZSBhc3NpbWlsICB1biBtYWpldXIsIHNvaXQgZGUgZGV2ZW5pciBjYXBhYmxlLiBPciwgbGEgbm91dmVsbGUgbG9pIHJldGlyZSBjZXR0ZSBleGNlcHRpb24gdW5pcXVlbWVudCBlbiBtYXRpcmUgZGUgY29udHJhdCBkZSBtYXJpYWdlLiBMJ21hbmNpcGF0aW9uIG4nYSBwYXMgdCByZXRpcmUgZXQgcmVzdGUgcG9zc2libGUgc3VpdmFudCBsYSBwcm9jZHVyZSBkZXMgYXJ0aWNsZXMgNDc2IGV0IHN1aXZhbnRzIGR1IENvZGUgQ2l2aWwuCihDYWxsIGl0IGEgInBsYXlsaXN0IiBpZiB0aGF0IG1ha2VzIHlvdSBtb3JlIGNvbWZvcnRhYmxlLikgIkltYWdpbmUiIGluZHVsZ2VzIGluIGEgZG91YmxlIGZhbnRhc3kgb2YgaW50aW1hdGUga2luaywgYnV0IHRoYXQgc29vbiBnaXZlcyB3YXkgdG8gYW4gSVJMIHB1c2ggYW5kIHB1bGw6IEZpcnN0IHNoZSdzICJOZWVkeSwiIHRoZW4gb24gIk5BU0EiIHNoZSdzIGRlbWFuZGluZyBzcGFjZSwgZmluYWxseSBzaGUgY29tZXMgZnVsbCBjaXJjbGUgb24gIkluIE15IEhlYWQsIiB3aGVyZSBzaGUgcmVhbGl6ZXMgaGVyIGxvdmVyIGlzIGp1c3QgdGhlIHN1bSBvZiBoZXIgaG9wZWZ1bCBwcm9qZWN0aW9ucy4gCkEgc2VwZXJhdGUgc2lkZSBjb25jbHVzaW9uIEkgY2FtZSBhY3Jvc3MgaXMgd2hhdCBjb21iYXQgc3BlZWQgYnkgcmFjZSBtZWFucy4gVGhlcmUgYXJlIHBvc3RzIG9uIHRoZSBpbnRlcm5ldCB0YWxraW5nIGFib3V0IGhvdyB0aGUgIkNvbWJhdCBNb3ZlIFNwZWVkIG11bHQiIHRoYXQgc2hvdWxkIGJlbmVmaXQgcmFjZXMgbGlrZSBIaXZlciBQcmluY2Ugc3VwcG9zZWRseSBkb2VzbiBzZWVtIHRvIG1ha2UgYW55IG1lYW5pbmdmdWwgZGlmZmVyZW5jZSBpbiBnYW1lLiBJZiB5b3UgdGFrZSB0aGUgaWRlYXMgcHJlc2VudGVkIGJ5IHRoaXMgdmlkZW8gdGhvdWdoLCBpdCBpcyBwb3NzaWJsZSB0aGF0IHdoYXQgdGhhdCBjb21iYXQgc3BlZWQgcmFjaWFsIG11bHRpcGxpZXIgZG9lcyBpcyBtYWtlIHRoZSBIaXZlciBQcmluY2UgbW9yZSByZXNpc3RhbnQgdG8gY29tYmF0IHNwZWVkIHBlbmFsdGllcyBmcm9tIGhlYXZpZXIgYXJtb3IuIFRoZSB2aWRlbyBzdWdnZXN0cyB0aGF0IGl0ZW1zIHN1Y2ggYXMgdGhlIHdvb2RlbiBzYW5kYWxzIGRvbiBhY3R1YWxseSBhd2FyZCB5b3UgYSBib251cyB0byBjb21iYXQgc3BlZWQgb3V0cmlnaHQsIGJ1dCByYXRoZXIgdGhleSBjYW4gYmUgZXF1aXBwZWQgdG8gY2FuY2VsIG91dCBzb21lIG9mIHRoZSBuZWdhdGl2ZSBjb21iYXQgc3BlZWQgcGVuYWx0aWVzIG9uIGl0ZW1zIGxpa2UgdGhlIFNhbXVyYWkgQ2hlc3RwbGF0ZS4gSWYgdGhpcyBpcyB0cnVlLCB0aGUgaW1wbGljYXRpb24gaXMgdGhhdCBhIFNoZWsgd291bGQgc2VlIGEgbW9yZSBwcm9ub3VuY2VkIGNvbWJhdCBzcGVlZCBwZW5hbHR5IHRoYW4gYSBIaXZlciBQcmluY2Ugd2hlbiB3ZWFyaW5nIEhlYXZ5IGFybW9yLiBXaGVuIGJvdGggb2YgdGhlbSB1c2UgbGlnaHQgYXJtb3IsIHRoZXJlIHNob3VsZCBiZSBubyBub3RpY2VhYmxlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGVpciBhdHRhY2sgc3BlZWRzLiBXaGVuIGJvdGggYXJlIHdlYXJpbmcgZnVsbCBoZWF2eSBhcm1vciB3aXRoIGRlY2VudCBjb21iYXQgc3BlZWQgcGVuYWx0aWVzLCBpdCBwb3NzaWJsZSB0aGUgSGl2ZXJzIHJldGFpbiB0aGVpciBjb21iYXQgc3BlZWQgYmV0dGVyLiBUaGlzIHdvdWxkIGFsc28gaGVpZ2h0ZW4gdGhlIHZhbHVlIG9mIHRoZSB3b29kZW4gc2FuZGFscyBzaW5jZSB0aGVyZSBhcmUgYWx0ZXJuYXRpdmVzIGZvciBwcm90ZWN0aW5nIHRoZSBsZWdzIHZpYSBsZWdnaW5ncyBhbnl3YXlzLCBhbmQgZXF1aXBwaW5nIHRoZW0gd291bGQgYmUgZW5vdWdoIHRvIGNvdW50ZXJhY3QgdGhlIGNvbWJhdCBzcGVlZCBwZW5hbHR5IG9mIHNhbXVyYWkgY2hlc3RwbGF0ZXMgb3IgdGhlIGxpa2UuIEFzc2Fzc2luIFJhZ3Mgb24gdGhlIG90aGVyIGhhbmQgc2VlbSBsaWtlIG92ZXJraWxsLCBhbHRob3VnaCB0aGlzIHdvdWxkIGltcGx5IHlvdSBjYW4gZXF1aXAgdGhlbSBzYWZlbHkgd2l0aCB3aGF0ZXZlciBjaGFpbiBhcm1vciB5b3UgbGlrZSB3aXRoIHplcm8gZmVhciBvZiB5b3VyIGNvbWJhdCBzcGVlZCBiZWluZyByZWR1Y2VkLiBJIGhhdmUgdG8gdGVzdCB0aGlzIGluIGdhbWUgc29tZXRpbWUgdG8gc2VlIGlmIEkgY2FuIG5vdGljZSBhbnkgZGlmZmVyZW5jZSwgYXMgYSBncmVhdCBudW1iZXIgb2YgZmFjdG9ycyAoc3RyZW5ndGggcmVxdWlyZW1lbnQgbWV0KSBjYW4gb3ZlcnJpZGUgb3RoZXIgYXR0YWNrIHNwZWVkIHJ1bGVzLgpJbmZhbnRzIGFuZCB0b2RkbGVycyBhcmUgaW4gYSBncmVhdCBwb3NpdGlvbiB0byBiZSBleHBvc2VkIHRvIHBhdGhvZ2VucyB0aHJvdWdoIHZhY2NpbmVzLiAKRWluIFByb2JsZW0sIHdlbGNoZXMgaWNoIGRhbWl0IHNlaGUsIGlzdCBkZXIgc3RhcmtlIEVpbmZsdXNzLCBkZW4gRWx0ZXJuIGF1ZiBpaHJlIEtpbmRlciBoYWJlbi4gCkNvb21lcyAobGVmdCkgc2FpZCB0aGUgbGVzcyBmb3JtYWwgZXZlbnRzIG9uIHRoZSBjYWxlbmRhciBjYW4gYmUganVzdCBhcyBpbXBvcnRhbnQgYXMgdGhlIGhlYWRsaW5lcnMuIEhlIGVhZ2VyIHRvIHNlZSBjb25uZWN0aW9ucyBtYWRlIGFuZCBpZGVhcyBleGNoYW5nZWQgb3ZlciByb29mdG9wIGNvY2t0YWlscy4gT3IgYXJvdW5kIHRoZSBwb2tlciB0YWJsZS4gT3Igb3ZlciBhIHdhcm0gc3RhY2sgb2Ygd2FmZmxlcy4gT25lIFdlZWsgS0Mgc2NoZWR1bGUgbWFrZXMgcm9vbSBmb3IgdGhvc2UgdGhpbmdzLCB0b28uCkkgYWxtb3N0IGJsYWNrZWQgb3V0IGZyb20gbGFjayBvZiBveHlnZW4gc2V2ZXJhbCB0aW1lcy4gCkF0IHRoZSBiZWdpbm5pbmcgSSBjb3VsZG4gcmlkZSBhIGtpbG9tZXRlciB3aXRob3V0IGJlaW5nIG91dCBvZiBicmVhdGgsIGFuZCB0aGF0IG5vdCBhbiBleGFnZ2VyYXRpb24sIHNpbmNlIEkgaGFkIGxpdGVyYWxseSBuZXZlciB0cmFpbmVkIGNhcmRpbyBpbiBteSBsaWZlLiBOb3cgbXkgRlRQIGlzIGFyb3VuZCA0Ljd3L2tnLCBhbmQgbXkgVk8yIG1heCBpcyBpbiB0aGUgbG93IDcwcy4KSWYgY2VsbHVsaXRlIGlzIHlvdXIgY29uY2VybiwgdHJ5IHRvIGluY29ycG9yYXRlIGhlYWx0aHkgZWF0aW5nIGFuZCBleGVyY2lzZSB0byBhY2hpZXZlIHRoZSBiZXN0IHBvc3NpYmxlIHJlc3VsdHMuIApUaGUgSW5ub2NlbmNlIFByb2plY3QgaXMgbm90IGVxdWlwcGVkIHRvIGhhbmRsZSBjYXNlIGFwcGxpY2F0aW9ucyBvciBpbnF1aXJpZXMgYnkgZW1haWwgb3Igb3ZlciB0aGUgcGhvbmUuIEFsbCBjYXNlIHN1Ym1pc3Npb25zIGFuZCBmb2xsb3cgdXAgY29ycmVzcG9uZGVuY2Ugd2lsbCBiZSBoYW5kbGVkIGJ5IG1haWwgb3Igb3Zlcm5pZ2h0IGRlbGl2ZXJ5IHNlcnZpY2VzIG9ubHkuClNlY29uZGFyeSBlbmRwb2ludHMgaW5jbHVkZWQgZm9vZCBzcGVjaWZpYyBJZ0cgbGV2ZWxzIGF0IGJhc2VsaW5lIHJlbGF0ZWQgdG8gdGhlIGJlaGF2aW91ciBvZiB0aGUgZGlldCBncm91cCByZXNwb25kZXJzIGFmdGVyIElnRyBiYXNlZCBmb29kIGNoYWxsZW5nZXMuIFRoZSBwcmltYXJ5IGFuYWx5c2VzIHdlcmUgaW50ZW50aW9uIHRvIHRyZWF0IGZvciB0aGUgZmlyc3QgcGhhc2UgYW5kIHBlciBwcm90b2NvbCBmb3IgdGhlIHNlY29uZCBwaGFzZS4gSU5DQSBpcyByZWdpc3RlcmVkIGFzIGFuIEludGVybmF0aW9uYWwgU3RhbmRhcmQgUmFuZG9taXNlZCBDb250cm9sbGVkIFRyaWFsLCBudW1iZXIgSVNSQ1ROIDc2MDYzMTEzLkJldHdlZW4gTm92IDQsIDIwMDgsIGFuZCBTZXB0IDI5LCAyMDA5LCAxMDAgY2hpbGRyZW4gd2VyZSBlbnJvbGxlZCBhbmQgcmFuZG9tbHkgYXNzaWduZWQgdG8gdGhlIGNvbnRyb2wgZ3JvdXAgKG49NTApIG9yIHRoZSBkaWV0IGdyb3VwIChuPTUwKS4gClRoaXMgbW9ybmluZyBpbnN0ZWFkIG9mIHN0YXJ0aW5nIG9uIG15IGhvbWV3b3JrIGxpa2UgSSBzaG91bGQgSSBkZWNpZGVkIHRvIGZpbmQgYSBmcmVlIGRpZ2l0YWwgcGFpbnRpbmcgcHJvZ3JhbSAoSSB1c2VkIEZpcmVBbHBhY2EpIGFuZCB3YXRjaCBhIGZldyB2aWRlb3MgYWJvdXQgZGlnaXRhbCBwYWludGluZy4KVGhlc2UgbGl0dGxlIGd1eXMgYXJlIG1vcmUgYWR2YW5jZWQsIGxvdmluZywgd2lzZSwgYW5kIGludGVyZXN0aW5nIHRoYW4gaHVtYW4gYmVpbmdzIHRlbmQgdG8gYmUsIGFuZCB0aGV5IG1ha2UgbGlmZSBlbnRocmFsbGluZyBhbmQgcmljaCB3aXRoICJtZWFuaW5nLiIgSSB0aGluayB0aGF0IHRoZSBtb3N0IGFjY3VyYXRlIHdvcmQsIHRob3VnaCBvZiBjb3Vyc2Ugb3VyIGxhbmd1YWdlIGlzIHZlcnkgaW1wcmVjaXNlLi4gCkhpcyBiYXNlIGlzIGp1c3QgZ3VsbGlibGUgYXMgaGVsbCBzbyB0aGV5IHRha2UgaGlzIHR3ZWV0cyBhcyBmYWN0IG9mIGhpbSBiZWluZyBnYXkgZnJpZW5kbHkuIApUaGlzIHZpZGVvIGlsbHVzdHJhdGlvbiBleGVjdXRlcyB0aGUgdGhvdWdodHMgb2YgdGhlIHdpbm5lcnMgdG8gdGhlIG5ldyBjaGFsbGVuZ2Vycy4gQSBjb21wbGV0ZSBuZXdiaWUgY2FuIGxlYXJuIHRoZSBtb3N0IHVuaXF1ZSB0ZWNobmlxdWUgb2YgcG9rZXIgb3Zlcm5pZ2h0IHdpdGggdGhlIGNvbGxlY3Rpb24gYXQgaG9tZS4gV2VsbCwgdGhpcyBEVkQgZG9lcyBub3QgZW5zdXJlIHdpbiBpbiBldmVyeSBnYW1lIHlvdSBwbGF5LiAKSG93IEVmZmVjdGl2ZSBBcmUgUG9rZXIgQm9va3MKQ2FuIGJlIGZvdW5kIG9uICJUaGUgRmFtZS4iIEFzaWFuIGNvdW50cmllcyBib251cyBzb25nLjE2IDE4KSBQb2tlciBGYWNlL0p1c3QgRGFuY2UvIEVoLCBFaChOb3RoaW5nIEVsc2UgSSBDYW4gU2F5KSBmcm9tICJUaGUgQ2hlcnJ5IFRyZWUgU2Vzc2lvbnMiIGZyb21pVHVuZXMuIApCb3RoIHNpZGVzIHdlbnQgcHVibGljIHdpdGggdGhlaXIgZmlnaHQgbGFzdCB3ZWVrIGF0IE1XQyBCYXJjZWxvbmEsIHRoZSB3b3JsZCdzIGJpZ2dlc3Qgd2lyZWxlc3MgaW5kdXN0cnkgc2hvdywgd2l0aCBIdWF3ZWkncyByb3RhdGluZyBjaGFpcm1hbiBzYXlpbmcgaW4gYSBrZXlub3RlIHNwZWVjaCB0aGF0ICJ3ZSBkb24ndCBkbyBiYWQgdGhpbmdzIiBhbmQgd291bGQgIm5ldmVyIHBsYW50IGJhY2tkb29ycyIgaW4gaXRzIGVxdWlwbWVudC4gCkdvZCBmb3JiaWQgdGhlcmVzIDMgb2YgdGhlbSBpbiBhIHBsYXRvb24uIFRoZSBvbmx5IGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgNzUgYW5kIDc2IHZlcnNpb24gaXMgdGhhdCB0aGV5IGdhdmUgaXQgYSBndW4gdGhhdCBjb3VsZCBlbmdhZ2UgZW5lbXkgaGVhdmllcyBGUk9OVEFMTFkuIApUbyB1bmRlcnN0YW5kIHdoeSBncmVlbmhvdXNlIGdhc2VzIGFyZSBoYXJkZXIgdG8gZml4LCBhbmQgeW91IG5lZWQgYXQgbGVhc3QgZG91YmxlIHRoZSB5ZWFybHkgZW5lcmd5IGV4cGVuZGl0dXJlIHRvIGdvIG5ldXRyYWwsIHVuZGVyc3RhbmQgdGhhdCA4MCUgb2YgdGhlIHdvcmxkIGVuZXJneSBjb21lcyBmcm9tIGZvc3NpbCBmdWVscy4gUHJvZHVjZXMgNTAgcG91bmRzIG9mIENPMiBmb3IgZXZlcnkgb25lIHBvdW5kIG9mIHRyYXNoIGdlbmVyYXRlZC4gQ08yIGlzIGEgaGVhdnkgbW9sZWN1bGUgd2l0aCBleHRyYSBveHlnZW4gYXRvbXMgZm9yIGV2ZXJ5IGNhcmJvbiBpbiB0aGUgb3JpZ2luYWwgY2FyYm9uIGNoYWluIGFuZCBpdCBpcyByZWxhdGl2ZWx5IGRpZmZ1c2UsIHNvIGl0IGlzIGhhcmQgdG8gY2FwdHVyZSBhbmQgbW92ZS4gCk1HTSBoYXMgYWxyZWFkeSBjb25maXJtZWQgYSBjb25jZXJ0IGJ5IENoZXIgb24gQXByaWwgMzAgYXQgdGhlIE1hc3NNdXR1YWwgQ2VudGVyIG5leHQgZG9vciwgYW5kIG90aGVyIGFubm91bmNlbWVudHMgYXJlIGNvbWluZyBzb29uLCBoZSBzYWlkLgpJZiB5b3UgaGF2ZSBhIGZsdXNoIGFuZCB0aGUgYm9hcmQgcGFpcnMgKHR3byBjYXJkcyBvbiB0aGUgYm9hcmQgYXJlIHRoZSBzYW1lLCBsaWtlIEsgSyBvciAyIDIpLCB0aGVuIHlvdSBoYXZlIHByb2JhYmx5IGxvc3QgdG8gYSBmdWxsIGhvdXNlLiBUaGlzIGlzIG9uZSBvZiB0aGUgcmVhc29ucyBpdCBpcyBpbXBvcnRhbnQgdG8gaGF2ZSBoYW5kcyB0aGF0IGhhdmUgYm90aCBoaWdoIGFuZCBsb3cgcG90ZW50aWFsLi4gCkkganVzdCB3YW50IHRvIGhlbHAgb3RoZXJzIGdldCB0aGF0IHNhbWUgc2VsZiBzYXRpc2ZhY3Rpb24vcHVycG9zZS4uIApHZXQgdGhlIGJlc3QgZW50ZXJ0YWlubWVudCBleHBlcmllbmNlIHdpdGggV2luZG93cyA3IEhvbWUgUHJlbWl1bS4gClRoZXkgbGl2ZSBpbiBPbmlkYSwgYW5kIE1hdHQgZmFybXMgdGhlIGZhbWlseSBmYXJtIHdpdGggaGlzIERhZCBhbmQgYnJvdGhlci4gCkFuZCBpdCBub3QgbGlrZSBJIGFtIGZ1Y2tpbmcgY3JhenkuIAo=|<---