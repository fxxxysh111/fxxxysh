--->|SXQncyBmcnVzdHJhdGluZyB0aGF0IHRoZSBzdWIgaXMgYW4gZWNobyBjaGFtYmVyLCBiZWNhdXNlIGl0IGZlZWxzIGxpa2UgdGhlcmUncyBsZXNzIGNvbnZlcnNhdGlvbiBhbmQgbGVzcyBhYmlsaXR5IGZvciBwZW9wbGUgdG8gcmVjZWl2ZSBhY3R1YWwgaGVscCB3aGVuIHRoZXkgY29tZSBoZXJlLi4gCkkgZG9uIGhhcm0gdGhlbSwgSSBqdXN0IGRvbiBsaWtlIHRoZW0gYW5kIHRoZWlyIGxhbmd1YWdlLiAKQSBsaXR0bGUgaXJvbnksIEkgc3VnZ2VzdGVkLCBpbiB0aGUgc3RhdGUncyBsYXJnZXN0IGNhc2lubyAoYmFzZWQgb24gbW9udGhseSByZWNlaXB0cykgcGF5aW5nIHRvIHNlbmQgYSBtYWlsZXIgYWJvdXQgdGhlIHByZWRhdG9yeSBlZmZlY3RzIG9mIGNhc2lubyBnYW1ibGluZy4gTWNMYXJ0eSBjb3VudGVycyB0aGF0IHRoZSBjYXNpbm9zIGluIEFya2Fuc2FzIGhhdmUgYmVlbiBsb25nIHRpbWUgc3RhdGUgYnVzaW5lc3NlcyBoZWF2aWx5IHJlZ3VsYXRlZCBpbiBhIHByb2Nlc3MgdGhhdCBldm9sdmVkIHRocm91Z2ggdGhlIGxlZ2lzbGF0dXJlLiAKT25lIHdheSB0byBnZXQgZnJlZSBmYWNlYm9vayBwb2tlciBjaGlwcyB3b3VsZCBiZSB0by4gV0lOIHRoZW0hIFllcywgdGhlIGdhbWUgbm93IGdpdmVzIGEgbG90IG1vcmUgY2hhbmNlcyB0byB3aW4gcG9rZXIgY2hpcHMsIGFuZCBhIGxvdCBtb3JlIHRoYW4gYmVmb3JlLkZvciBpbnN0YW5jZSBvbiB0aGUgUHJvIHNpZGUsIHlvdSBnZXQgY2hpcHMgYSBsb3QgbW9yZSBjaGVhcGVyIHRoYW4geW91IHdvdWxkIGdldCB0aGVtIGZyb20gaW4gdGhlIGdhbWUuIApTb3JyeSBmb3IgZXhhZ2dlcmF0aW5nLiBCdXQgdGhleSBkbyBwcm92b2tlIEtvcmVhIG9uIHZhcmlvdXMgaXNzdWVzLiAKVGhlIHJlc2VhcmNoIHByb2plY3RzIGFyZSBhIGtleSBzdHJlbmd0aCBvZiB0aGUgY291cnNlLiBTdHVkZW50cyBhcmUgZW5jb3VyYWdlZCB0byB1bmRlcnRha2UgYSBwcm9qZWN0IGluIGEgZmllbGQgb2YgaW50ZXJlc3QuIApJZiBpdCBuZWdhdGl2ZSB0cmVhdG1lbnQsIGl0IHBvdGVudGlhbGx5IGEgRnJlZSBFeGVyY2lzZSB2aW9sYXRpb24uIEJ1dCB0aGVyZSBubyBzdWNoIHRoaW5nIGFzIG5lZ2F0aXZlIHRyZWF0bWVudCBjb25zdGl0dXRpbmcgYW4gRXN0YWJsaXNobWVudCBDbGF1c2UgdmlvbGF0aW9uIG9yIHBvc2l0aXZlIHRyZWF0bWVudCBjb25zdGl0dXRpbmcgYSBGcmVlIEV4ZXJjaXNlIHZpb2xhdGlvbi4uIApMaWtlIG1vc3QgcHJvZ3Jlc3NpdmUgYWN0aXZpc3RzIGFuZCBwb2xpY3kgZ3JvdXAgdGhhdCBwdXNoaW5nIHRoaW5ncyByaWdodCBub3cgYXJlIGNvbm5lY3RlZCB0byBoaW0sIHNldmVyYWwgc3RhcnRlZCB3aXRoIGhpcyBydW4gbGFzdCB0aW1lLiBIZSBwcmFjdGljYWxseSBpbiBjaGFyZ2Ugb2YgcG9saWN5IHJpZ2h0IG5vdy4gRXZlcnkgY2FuZGlkYXRlIGlzIGdvaW5nIHRvIGNvcHkgaGltLiAKTW9ybmluZ3NBcmVCZXR0ZXIgIDIzIHBvaW50cyAgc3VibWl0dGVkIDE0IGhvdXJzIGFnbwpZb3UgaGF2ZSBoaXQgdG9wIHBhaXIgYW5kIHdhbnQgdG8gc2hvdyBoaW0gdGhlIGZsb3AgaGl0IHlvdS4gWW91IGJldC4gCkFiZXIgaWNoIGthbm4gTGV1dGUgKHVuZCBkYXp1IGdlaG9lcmVuIG51biBoYWx0IGF1Y2ggdmllbGUgU2luZ2xlIE1hZW5uZXIgZGllIEtvbnRha3RlIHN1Y2hlbikgZGFoaW4gZ2VoZW5kIGluZm9ybWllcmVuLCBkYXMgc2ljaCBkaWUgaW4gbGVnYWxlbSB1bmQgc2ljaGVyZW4gUmFobWVuIGJld2VndC4gRGVzaGFsYiBkaWUgZW50c3ByZWNoZW5kZW4gQXJ0aWtlbC4uIApOdW1iZXIgb2YgQW1lcmFzaWFuIGtpZHM6IG1vcmUgdGhhbiA1MCwwMDAuIFRoZW4gdGhlcmUgd2VyZSB0aGUgSmFwaW5vcy4gTnVtYmVyOiBhcm91bmQgMjAwLDAwMC4gCk9uIG5lIHBldXQgcGFzIGRpc3NvY2llciBPdXNzYW1hIEJlbiBMYWRlbiBkZSBsJ2R1Y2F0aW9uIHF1J2lsIGEgcmV1ZSBlbiBBcmFiaWUgU2FvdWRpdGUsIGRlIGwnaXNsYW0gd2FoaGFiaXRlLiAKRmFsbG9uIGRvZXNuIGNvbnRyb2wgdGhhdC4gSWYgeW91IHdlcmUgaGVyLCB3b3VsZCB5b3UgcmlzayB5b3VyIGNhcmVlciBmb3IgVG9tIEZhbGxvbj8gQWxzbyBjb25zaWRlciB0aGF0IHRoZSBHb3Zlcm5vciBqdXN0IGNhbWUgb24gYm9hcmQuIApXaGlsZSB5b3Ugd2VyZSBnaXZpbmcgeW91cnNlbGYgYSBraWRuZXkgaW5mZWN0aW9uIGJ5IG5vdCBnZXR0aW5nIHVwIHRvIHBlZSB3aGVuIHlvdSBuZWVkIHRvICh1bSwgcmVhbGx5PyB5b3UgcHJvdWQgb2YgdGhhdD8pIHdlIHdlcmUgZ29pbmcgdG8gdGhlIGJhdGhyb29tIHdoZW5ldmVyIHdlIG5lZWRlZCB0by4gCkxhc3QgdGltZSB5b3UgcG9saXRlbHkgZGVjbGluZWQgdGhlIGRhdGUgYW5kIGhlIGRpZG4gdGFrZSBpdCB3ZWxsIGJ1dCBoYXZlIHlvdSBhY3R1YWxseSB0YWxrZWQgYWJvdXQgaXQgc2luY2U/IEZyYW1lIHRoZSBjb252ZXJzYXRpb24gYXJvdW5kIHlvdXIga2lkcyBhcyBvcHBvc2VkIHRvIGFyb3VuZCBoaXMgbWlzcGxhY2VkIGZlZWxpbmdzLiBFeHByZXNzIHRoYXQgeW91IHJlYWxseSBlbmpveSBmYW1pbHkgdGltZSBhbmQgc2VlIGhvdyBtdWNoIGl0IG1lYW5zIHRvIHRoZSBraWRzLiBUaGV5IHJlYWxseSBiZW5lZml0IGZyb20gc2VlaW5nIG1vbSBhbmQgZGFkIGJlaW5nIGNvdXJ0ZW91cyBhbmQgZnJpZW5kbHkgdG8gZWFjaCBvdGhlciBkZXNwaXRlIHRoZSBjaGFuZ2UgYW5kIHlvdSBsb3ZlIGZvciB0aGlzIHRvIGNvbnRpbnVlIG1vdmluZyBmb3J3YXJkLiAKQm90aCBKYXlhbnRpbGFsIFBva2VyIGFuZCBWaW5vZCBTaHVrbGEgaGFkIHRoZSBzYW1lIGdyaWV2YW5jZSBiZWluZyBkZW5pZWQgdGhlIGluc3VyYW5jZSBjbGFpbSB0YWtlbiB1bmRlciB0aGUgcGFja2FnZSBwb2xpY3kgYWZ0ZXIgdGhlaXIgY2FycyBnb3Qgc3RvbGVuICBhZ2FpbnN0IENob2xhbWFuZGFsYW0gYW5kIFJlbGlhbmNlIHJlc3BlY3RpdmVseS4gV2hpbGUgUG9rZXIgaGFzIGJlZW4gb3JkZXJlZCB0byBiZSBnaXZlbiBSczMsNTYsMjUwIHdpdGggaW50ZXJlc3Qgc2luY2UgTWFyY2ggMjAwOCBhcGFydCBmcm9tIFJzNSwwMDAgYXMgdGhlIGNvc3Qgb2YgY29tcGxhaW50IGZvciBoaXMgc3RvbGVuIFRhdmVyYSBKZWVwLCBTaHVrbGEgd291bGQgYmUgZ2V0dGluZyBSczYsNTAsMDY2IGFuZCBSczkwMCBydXBlZXMgYXMgdGhlIGNvc3Qgb2YgY29tcGxhaW50IGZvciBoaXMgc3RvbGVuIFRveW90YSBJbm5vdmEuLiAKU3ViamVjdGl2ZSBvciBzcGVjdWxhdGl2ZSByZXBsaWVzIGFyZSBub3QgYWxsb3dlZCBvbiBFTEk1LiBPbmx5IG9iamVjdGl2ZSBleHBsYW5hdGlvbnMgYXJlIHBlcm1pdHRlZCBoZXJlOyB5b3VyIHF1ZXN0aW9uIGlzIGFza2luZyBmb3Igc3BlY3VsYXRpb24gb3Igc3ViamVjdGl2ZSByZXNwb25zZXMgKFJ1bGUgMikuCkkgdGhvdWdodCB0aGF0IHdhcyB3ZWlyZCwgdGhpbmtpbmcgbWF5YmUgaGUgd2FzIGhvcGluZyBmb3IgYSBmcmVlIHJpdmVyIG9uIGEgZHJhdywgc2luY2UgaGUgY291bGQgdGVsbCBJIHdhcyBhIGxpdHRsZSB1bmNvbWZvcnRhYmxlIGFuZCBtaWdodCBjaGVjayBiYWNrLiAKWWV0IGl0IGlzIGVhc3kgYmVpbmcgaW4gaGVyIGNvbXBhbnksIG1heWJlIGl0IGlzIGJlY2F1c2Ugc2hlIGlzIGhvbmVzdCBhbmQgb3BlbiB3aXRoIGhlciBhbnN3ZXJzIGFuZCBqdXN0IGFzIGN1cmlvdXMgYWJvdXQgb3RoZXJzIGFzIHdlIGFyZSBhYm91dCBoZXIuSG93IGRvIHlvdSBmaW5kIHlvdXIgcGFydHMsIG9yIGRvIHRoZXkgZmluZCB5b3U/VGhleSBoYXBwZW4gc2ltdWx0YW5lb3VzbHkgZXZlcnkgY2hhcmFjdGVyIEkgaGF2ZSBwbGF5ZWQgd2FzIGFscmVhZHkgaW4gbWUgc29tZXdoZXJlLiAKUmVsYXRpdmVseSBmZXcgYWlybGluZXMgaGF2ZSBwbGFjZWQgb3JkZXJzIGZvciB0aGUgdmVyeSBleHBlbnNpdmUgQWlyYnVzIEEzODAsIGFuZCBhc2lkZSBmcm9tIEVtaXJhdGVzLCB3aG8gYnkgZmFyIGFuZCBhd2F5IGhhdmUgdGhlIGxhcmdlc3QgZmxlZXQgb2YgQTM4MHMgYW55d2hlcmUgaW4gdGhlIHNreSwgbW9zdCBhaXJsaW5lcyBhcmUgdGFraW5nIHRoaW5ncyB2ZXJ5IHN0ZWFkeSB3aXRoIHRoaXMgYWlyY3JhZnQsIGFzIHRoZSBzaXplIG9mIGl0IG1lYW5zIHRoYXQgYWlybGluZXMgd2lsbCBiZSBleHBlY3RlZCB0byBjYXJyeSB1cCB0byA1MDAgcGFzc2VuZ2VycyBwZXIgZmxpZ2h0IGluIG9yZGVyIHRvIGNvdmVyIGNvc3RzLCBhbmQgaW4gdGhpcyBlY29ub21pYyBhdG1vc3BoZXJlLCB0aGVyZSBhcmUgdmVyeSBmZXcgcm91dGVzIG9uIHdoaWNoIHRoaXMgaXMgbm93IHBvc3NpYmxlLiBUaGFpIEFpcndheXMgYW5kIE1hbGF5c2lhIEFpcmxpbmVzIGluIHBhcnRpY3VsYXIgaGF2ZSBiaWcgcHJvYmxlbXMgdXRpbGlzaW5nIHRoZWlyIEEzODBzIHByb3Blcmx5LCBhbmQgaXQgY291bGQgYmUgYXJndWVkIHRoYXQgbmVpdGhlciBhY3R1YWxseSBuZWVkIGFsbCA2LCBhcyAzIGZvcmVhY2ggb2YgdGhlbSB3b3VsZCBiZSBzdWZmaWNpZW50IChmb3IgdGhlaXIgdWx0cmEgbG9uZ2hhdWwgZmxpZ2h0cyB0byBQYXJpcyBhbmQgTG9uZG9uIHJlc3BlY3RpdmVseSkuCkJ1dCB0aGUgY2hhb3MgdGhhdCBJIGJlbGlldmUgaXMgYWJvdXQgdG8gaGFwcGVuIGluIFdhc2hpbmd0b24gY291bGQgYmUgdGhlIGJpZ2dlc3QgdGhpbmcgdGhhdCBibGluZHNpZGVzIFdhbGwgU3RyZWV0LiBJJ3ZlIGFscmVhZHkgcHJlZGljdGVkIHdoYXQgSSB0aGluayB3aWxsIGhhcHBlbiwgYnV0IEknbGwgc2F5IGl0IGFnYWluIGJlY2F1c2UgaXQgc2VlbXMgdG8gYmUgcGFubmluZyBvdXQuCkJhY2sgc2VhdCBwYXNzZW5nZXJzIGFyZSB3ZWxjb21lIHRvIHBhcnRpY2lwYXRlIGZvciBhICQ1LjAwIGZlZS4gCllvdSdyZSBoZXJlIGZyZXR0aW5nIG92ZXIgaGltIGxpa2UgaGUncyBhIHRvZGRsZXIgdGhhdCdzIG9uIGEgZm9vZCBzdHJpa2UsIGFuZCBtZW50YWxseSwgaGUgcHJldHR5IG11Y2ggaXMuIFN0b3AgZW5hYmxpbmcgaGltIHRvIGJlIGEgY2hpbGQsIHRvIGJlIHRoZSBzdGVyZW90eXBpY2FsIGRlcnB5IHNpdGNvbSBodXNiYW5kLiBBIGpva2UuIApUaGUgR29sZGVuIERvbmsgICBQbGF5cyBob3JyaWJseSBhbmQgYWx3YXlzIGdldHMgdGhlcmUuIDQgYmV0IHNoaXBzIDg4IG92ZXIgYW4gOCBCQiAzIGJldCBmcm9tIHRoZSB0aWdodGVzdCBwbGF5ZXIgYXQgdGhlIHRhYmxlIGZvciAxMiBCQnMgYW5kIHNwaWtlcyB0aGUgOCB2cy4gQUEvS0svUVEgdG8gd2luLiBDYWxscyBvZmYgYSA0MEJCIHNob3ZlIHdpdGggSzlzIGFuZCBmbG9wcyB0aGUgZmx1c2guIEZsb3BzIHF1YWRzIGFuZCBnZXRzIHBhaWQgb2ZmLiBTb21laG93IGhhcyB0aGUgYmlnZ2VzdCBzdGFjayBpbiB0aGUgdG91cm5hbWVudCBkZXNwaXRlIGJlaW5nIG9uZSBvZiB0aGUgd29yc3QgcGxheWVycy4gQmVsaWV2ZXMgcG9rZXIgaXMgYSBza2lsbCBnYW1lIGFuZCB0aGF0IGhlIGlzIHRoZSBiZXN0IHBsYXllciBpbiB0aGUgdG91cm5hbWVudC4KQWx0aWRvcmUgaGFzIDYwIGdvYWxzIGFuZCAyMCBhc3Npc3RzIGluIDExNCBhcHBlYXJhbmNlcyBmb3IgVEZDIGluIGFsbCBjb21wZXRpdGlvbnMuIEhlIHJhbmtzIHNlY29uZCB0byB0aGUgZGVwYXJ0ZWQgU2ViYXN0aWFuIEdpb3ZpbmNvIG9uIFRGQydzIGFsbCB0aW1lIGdvYWwgc2NvcmluZyBsaXN0IGFuZCBzdGFuZHMgZWlnaHRoIG9uIHRoZSBhbGwgdGltZSBjb21iaW5lZCBhcHBlYXJhbmNlcyBsaXN0IHdpdGggMTE0LgoiSnVzdCBwZWFjaHksIiBJIG11dHRlcmVkIHNhcmNhc3RpY2FsbHkuIFBlcmZlY3QgbXkgYXNzLiAiU28sIHdoZW4gZG8gSSBnZXQgYnJpZWZlZD8iClRoZSBudW1iZXJzIG9mb25saW5lIHBva2VyIHNpdGVzIGFyZSBpbmNyZWFzaW5nIGRheSBieSBkYXkgYXMgYSBwZXJmZWN0IGFsdGVybmF0aXZlIGZvciBsaXZlIHBva2VyIHJvb21zIGFuZCBjYXNpbm9zLiBPbmxpbmUgcG9rZXIgaXMgdGhlIG1vc3QgY29udmVuaWVudCB3YXkgdG9wbGF5IHBva2VyIGF0IHRoZSBjb21mb3J0IG9mIHlvdXIgb3duIGhvbWUuIFNvbWUgb25saW5lIHBva2VyIHNpdGVzIGV2ZW4gb2ZmZXJzIGZyZWUgcG9rZXIgZm9yIGJlZ2lubmVycyBhcyB3ZWxsIGFzIGFkdmFuY2VkIHBva2VyIHBsYXllcnMuIApUaGUgVm9sdW50ZWVyIENlbnRlciBtYWludGFpbnMgYW4gb25saW5lIGRhdGFiYXNlIG9mIHNlcnZpY2Ugb3Bwb3J0dW5pdGllcyB0aGF0IGlzIHNlYXJjaGFibGUgYnkgcG90ZW50aWFsIHZvbHVudGVlcnMuIFRvIGFkZCBhIHZvbHVudGVlciBvcHBvcnR1bml0eSBvbiBiZWhhbGYgb2YgeW91ciBvcmdhbml6YXRpb24sIGNvbXBsZXRlIHRoZSBTdWJtaXQgYSBWb2x1bnRlZXIgT3Bwb3J0dW5pdHkgZm9ybSwgaW5jbHVkaW5nIGRldGFpbGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBldmVudCwgeW91ciBvcmdhbml6YXRpb24ncyBtaXNzaW9uLCBhbmQgdGhlIHZvbHVudGVlciBhc3NpZ25tZW50cy4gWW91IHdpbGwgcmVjZWl2ZSBhIGNvbmZpcm1hdGlvbiBlbWFpbCB3aGVuIHlvdXIgZXZlbnQgaW5mb3JtYXRpb24gaGFzIGJlZW4gYXBwcm92ZWQgYW5kIGlzIGxpdmUgb24gdGhlIENlbnRlcidzIHdlYnNpdGUuLiAKMjIsIGRldGVjdGl2ZXMgc3Bva2UgdG8gdGhlIDE2IHllYXIgb2xkIGFuZCBoaXMgbGVnYWwgZ3VhcmRpYW4sIGFmdGVyIHJlYWRpbmcgdGhlIGJveSBoaXMgTWlyYW5kYSByaWdodHMsIGFjY29yZGluZyB0byB0aGUgYWZmaWRhdml0LkNvbGxpbnMsIGluIHRoZSBpbnRlcnZpZXcsIGFkbWl0dGVkIHRvIHBpY2tpbmcgdXAgYSBzdGljaywgYnV0IHRvbGQgaW52ZXN0aWdhdG9ycyBoZSBkaWRuJ3QgcmVtZW1iZXIgd2hhdCBoYXBwZW5lZCBhZnRlciB0aGF0IHVudGlsIGhlIHNhdyBLdWxwYSBvbiB0aGUgZ3JvdW5kIGFuZCB0aG91Z2h0LCAiT2ggKGV4cGxldGl2ZSkuIldoZW4gYXNrZWQgYnkgYSBkZXRlY3RpdmUgaG93IGhhcmQgaGUgaGl0IEt1bHBhLCBvbiBhIHNjYWxlIG9mIG9uZSB0byAxMCwgQ29sbGlucyByZXBsaWVkLCAiQSBzaXggb3Igc29tZXRoaW5nOyBJIHdhbnRlZCB0byBrbm9jayBoZXIgb3V0LCIgYWRkaW5nIHRoYXQgaGUgZGlkIG5vdCB3YW50IHRvIGtpbGwgaGVyLkFjY29yZGluZyB0byB0aGUgYWZmaWRhdml0LCBDb2xsaW5zIHRvbGQgaW52ZXN0aWdhdG9ycyBpdCB3YXMgTW9udGdvbWVyeSdzIGlkZWEgdG8gYXR0YWNrIEt1bHBhLCBhbmQgdGhhdCBNb250Z29tZXJ5IGhhZCBzYWlkLCAiTGV0J3Mga2lsbCBoZXIgYW5kIHRha2UgaGVyIGNhci4iIENvbGxpbnMgdG9sZCBpbnZlc3RpZ2F0b3JzIGhlIGNob3NlIHRvIHVzZSBhICJibHVudCBvYmplY3QiIGluc3RlYWQgb2YgdGhlIGF4ZXMgdGhhdCB3ZXJlIG5lYXJieS5Db2xsaW5zIGFkZGVkIHRoYXQgaGUgd2FzICJyZWFsbHksIHJlYWxseSBkcnVuaywiIGFuZCB0aGF0IEt1bHBhICJnYXZlIG1lIGEgbG90IG9mIGFsY29ob2wgYW5kIEkgd2FzIHN0b25lZCBhcyBoZWxsLiIgSGUgYWxzbyBzYWlkIHNoZSB3YXMgaGl0dGluZyBvbiBoaW0gYW5kIHdhcyBtYWtpbmcgaGltIHVuY29tZm9ydGFibGUsIGFjY29yZGluZyB0byB0aGUgYWZmaWRhdml0LkJ1dCBDb2xsaW5zIGFsc28gc2FpZCwgIkkgc2hvdWxkbid0IGhhdmUgZG9uZSBpdCBhbnl3YXksIiBhbmQgYWRkZWQgdGhhdCwgIkkgZGlkIHRoaW5rIHNoZSB3YXMgZGVhZCwiIGFjY29yZGluZyB0byB0aGUgYWZmaWRhdml0LkNvbGxpbnMgdG9sZCBpbnZlc3RpZ2F0b3JzIGhlIG9ubHkgc3RydWNrIEt1bHBhIG9uY2UsIGFsdGhvdWdoIHRoZXkgbm90ZWQsIGluIHRoZSBhZmZpZGF2aXQsIHRoYXQgdGhlIHdvbWFuICJzdWZmZXJlZCB0d28gdmVyeSBzZXJpb3VzIGluanVyaWVzIHRvIGhlciBoZWFkLiJJbiBhIHNob3J0IGludGVydmlldyBhdCB0aGUgaG9zcGl0YWwsIEt1bHBhIHRvbGQgaW52ZXN0aWdhdG9ycyBzaGUgZGlkIG5vdCByZW1lbWJlciB0aGUgYXNzYXVsdCwgb25seSB0aGF0IHNoZSBoYWQgcGlja2VkIHVwIENvbGxpbnMgYW5kIGhpcyBmcmllbmRzIHdoaWxlIHRoZXkgd2VyZSBoaXRjaGhpa2luZy5XaGlsZSBDb2xsaW5zIGlzIGEganV2ZW5pbGUsIHRoZSBCb3VsZGVyIENvdW50eSBEaXN0cmljdCBBdHRvcm5leSdzIE9mZmljZSB0b29rIHRoZSByYXJlIHN0ZXAgb2YgY2hhcmdpbmcgaGltIGFzIGFuIGFkdWx0LkJlcmtlbmtvdHRlciBpbml0aWFsbHkgcHJvaGliaXRlZCBwcm9zZWN1dG9ycyBmcm9tIHB1YmxpY2x5IHJldmVhbGluZyB3aGF0IGNoYXJnZXMgdGhleSBmaWxlZCBhZ2FpbnN0IENvbGxpbnMgYmVjYXVzZSB0aGUgcHJvY2VlZGluZ3MgaW4gdGhlIGNhc2UgYXJlIHRlbXBvcmFyaWx5IHVuZGVyIHNlYWwgd2hpbGUgc2hlIGNvbnNpZGVycyBhIGRlZmVuc2UgbW90aW9uIHRvIHBlcm1hbmVudGx5IHNlYWwgYWxsIGRvY3VtZW50cyBpbiB0aGUgY2FzZS5PbiBNb25kYXksIHRob3VnaCwgRGlzdHJpY3QgQXR0b3JuZXkgU3RhbiBHYXJuZXR0IHJlbGVhc2VkIHRoZSBjaGFyZ2VzIGhpcyBvZmZpY2UgZmlsZWQgbGFzdCB3ZWVrOiBhdHRlbXB0ZWQgZmlyc3QgZGVncmVlIG11cmRlciwgZmlyc3QgZGVncmVlIGFzc2F1bHQgb24gYW4gYXQgcmlzayBwZXJzb24sIGFuZCB0d28gY3JpbWUgb2YgdmlvbGVuY2Ugc2VudGVuY2UgZW5oYW5jZXJzLkNvbGxpbnMgY291bGQgZmFjZSBlaWdodCB0byAyNCB5ZWFycyBpbiBwcmlzb24gb24gdGhlIGF0dGVtcHRlZCBtdXJkZXIgY2hhcmdlIGFuZCAxNiB0byAzMiB5ZWFycyBpbiBwcmlzb24gb24gdGhlIGF0IHJpc2sgYXNzYXVsdCBjaGFyZ2UsIEdhcm5ldHQgc2FpZC5UaGUgdGVlbiByZW1haW5zIGluIGN1c3RvZHkgb24gJDEgbWlsbGlvbiBib25kIGFuZCBpcyBzY2hlZHVsZWQgZm9yIGEgcHJlbGltaW5hcnkgaGVhcmluZyBpbiBGZWJydWFyeS4gCkVybmllIHdhcyBvbmUgb2YgdGhlIGZldyBwZW9wbGUgd2hvIGtuZXcgaG93IG1hbnkgc3dvcmRzIHdlcmUgc3RvcmVkIGluIHRoYXQgbGluZW4gY2xvc2V0LiBQb2xpY2UgYmVsaWV2ZSB0aGlzIG1pc3Npbmcgc3dvcmQgbWF5IGhhdmUgYmVlbiB1c2VkIHRvIGluZmxpY3QgdGhlIGN1dHRpbmcgd291bmRzIG9uIEVybmVzdCBhbmQgQ2hhcmxlbmUgU2NoZXJlci4uIApUaGV5IHdlcmUgbGl0ZXJhbGx5IGp1c3QgdGhlIGZpcnN0IGZpdmUgaW4gdGhlIGhvdXNlLCB0aGV5IGhhZCBubyBpZGVhIGhvdyBlYWNoIG90aGVyIHBsYXllZCBidXQgdGhleSB3ZW50IGFoZWFkIGFuZCBjb21taXR0ZWQgdG8gZWFjaCBvdGhlciAoYW5kIHRoZSByZXBlcmN1c3Npb25zIG9mIHRoYXQgYXJlIHN0YXJ0aW5nIHRvIHNob3csIEtlbm55IGFuZCBTYXJhaCBhbHJlYWR5IHdhbnQgU2FicmluYSBvdXQgYW5kIEkgZG9uIHRoaW5rIGFueW9uZSBiZXNpZGVzIEtlbm55IHJlYWxseSBsaWtlcyBBbmRyZXcpLi4gCkhlIGhhc24ndCBzaGF2ZWQgaGlzIGJlYXJkIHRoZSBlbnRpcmUgdGltZSwgSSBhbSBmYW5uaW5nIG15c2VsZiByaWdodCBub3cgZmlndXJhdGl2ZWplc3VzICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29TaGUgZ290IG1lIGludG8gdHJvdWJsZSBhdCBvdXIgam9iLCBzaGUgZ290IGZpcmVkIEkgZGlkbid0LCBzaGUgbG9zZSBiYXNlIGFjY2VzcyBhbmQgaGFkIHRvIG1vdmUgaW4gd2l0aCBteSBodXNiYW5kIGFuIEkuIApJIGJlIHJ1bm5pbmcgYSB2aXJ1cyBzY2FuIGltbWVkaWF0ZWx5IGZyb20gc2FmZSBtb2RlICh0byB0cnkgYW5kIHByZXZlbnQgdG9vIG11Y2ggcnVubmluZyBhdCBib290dXApIGFuZCBzZWUgd2hhdCB5b3UgZmluZC4KQSBkdWxsIHBhaW4sIGl0IGNhbiBiZSBhY2NvbXBhbmllZCBieSBmYXRpZ3VlIGFuZCBhIHBvb3IgYXBwZXRpdGUuIApZZWFoLCBkZXNwaXRlIGl0IGVzcG91c2VkIHZhbHVlcywgQW1lcmljYSBvZnRlbiBmYWlscyB0byBsaXZlIHVwIHRvIHRoZW0uIApGcm9tIDE5OTggdGlsbCAyMDAzIEkgd2FzIHRoZSBDSU8gb2YgYSBsYXJnZSBvZmYgc2hvcmUgc3BvcnRzIGJvb2suIEkgdXNlZCB0byBsYXVnaCBldmVyeSB0aW1lIEkgc2F3IGVzdGltYXRlcyBvZiB0aGUgc2l6ZSBvZiB0aGUgb2ZmIHNob3JlIHNwb3J0cyBiZXR0aW5nIGJ1c2luZXNzLiBXZSB3ZXJlIGEgbWlkIHNpemUgYm9vayBhbmQgZGlkICQ1MDBNIGEgeWVhciBhbmQgc2V2ZXJhbCBib29rcyBJIGtuZXcgd2VyZSBkb2luZyB0d28gdG8gZm91ciB0aW1lcyB0aGF0LCBhbmQgdGhlcmUgd2VyZSBhbG1vc3QgYSBodW5kcmVkIGJvb2tzIGF0IHRoZSB0aW1lLi4gCkRhdmUgV2FkZGVsbCBhbmQgU2hhcm9uIEhpbGwKVGhhdCB0aGUgdGhpcmQgcmVhc29uLCB0aGF0IHlvdSBhbmQgbXkgc2lzdGVyIGZvcmdldCB0byBmYWN0b3IgaW4uIEV2ZW4gaWYgc2hlcyBkb2luZyBpdCBzd2VldGx5LCBzaGVzIGh1cnRpbmcgeW91Li4gCldoZWU/IEFzIExsb3lkIERvYmxlciBvbmNlIHNhaWQsIHlvdSBtdXN0IGNoaWxsLiAKT25jZSBldmVyeW9uZSBoYXMgdGhlaXIgY2FyZHMgYWxyZWFkeSwgdGhlIGRlYWxlciB3aWxsIHN0YXJ0IGxheWluZyBkb3duIHRoZSBmbG9wLiAKSW4gdGhlIGFib3ZlIHNjZW5hcmlvIHNwZWNpZmljYWxseSwgSSBoYXZlIHNlY29uZCBwYWlyIHdpdGggYSBiYWNrZG9vciBmbHVzaCBkcmF3IGFuZCBJIGZhY2luZyBhIGhhbGYgcG90IGJldC4gTURGIGZvciBhIGhhbGYgcG90IGJldCBpcyA2NyUsIHNvIEkgc2hvdWxkIGJlIGRlZmVuZGluZyB3aXRoIHRoZSB0b3AgMi8zIG9mIG15IHJhbmdlLiBJbiByZWFsaXR5LCBJIGZvbGRpbmcgbW9zdCBtYWRlIGhhbmRzIHdvcnNlIHRoYW4gc2Vjb25kIHBhaXIgYW5kIG5vbiBtYWRlIGhhbmRzIHdvcnNlIHRoYW4gb3ZlcmNhcmQrQkRGRC4gVGhpcyBtYWtlcyBmb3IgYSBkZWZlbnNlIGZyZXF1ZW5jeSBvZiBhYm91dCAzNiUsIHdoaWNoIHNlZW1zIHdheSBsb3cuCkxlcyBwcm9wcml0YWlyZXMgZGUgbWFnYXNpbnMgc29udCBlbnRob3VzaWFzdGVzLCBtYWxnciBzb24gcHJpeCBkZSA2MjIgbGl2cmVzICg5MDAgKS4gSWwgc3VmZml0LCBsb3JzcXUndW4gZ3JvdXBlIHRyb3VibGUgbGEgcXVpdHVkZSwgZGUgZmFpcmUgZm9uY3Rpb25uZXIgbGEgYm90ZSBub2lyZSAgcnB1bHNpb24gYWNvdXN0aXF1ZSAgIHJnbGFibGUgIHZvbG9udCBldCBmaXhlICBsJ2V4dHJpZXVyIGRlIGxldXIgbmdvY2UgICBwb3VyIHByb3ZvcXVlciBsYSBkaXNwZXJzaW9uIGRlcyB0cnVibGlvbnMuCkRpZmZlcmVudCBzaWRlIG9mIHRoZSByaW5rLCBkaWZmZXJlbnQgcm9vbSBhbmQgdGhpbmdzIGxpa2UgdGhhdCwgYnV0IEkgdHJ5aW5nIHRvIGtlZXAgdGhlIHJvdXRpbmUgYXMgY2xvc2UgdG8gbm9ybWFsIGFzIHBvc3NpYmxlLiAKSXQgbm90IGxpa2UgaGUgd2FzIGFzc3VtaW5nIHlvdSBjb3VsZG4gZHJpdmUgb3IgaGFkIGJhZCBtYXRoIHNraWxscyBvciBwbGF5ZWQgb2ZmIGFueSBvdGhlciBmZW1hbGUgc3RlcmVvdHlwZS4gSWYgaGUgaGFkIGRvbmUgdGhhdCwgdGhhdCB3b3VsZCBiZSBjb25kZXNjZW5kaW5nLiAKVGhlIGxpdmVseSB2YXRhLCBmb3IgZXhhbXBsZSwgd2lsbCBiZSBhZHZpc2VkIHRvIGRvIGNhbG1lciBmb3JtcyBvZiBleGVyY2lzZSBsaWtlIHdhbGtpbmcgb3IgbG93IGltcGFjdCBqb2dnaW5nIHdoZXJlYXMgc2x1Z2dpc2gga2FwaGFzIG1heSBiZSB0b2xkIHRvIHRha2UgdXAgdGVubmlzIG9yIHJhY3F1ZXRiYWxsIFtzb3VyY2U6IEF5dXJ2ZWRhIGZvciBZb3VdLiAKVGhlIEFtZXJpY2FucyBhcmUgc28gZ2xlZWZ1bCBiZWNhdXNlIHRoZXJlIGFyZSBjZXJ0YWluIGJlbGllZnMgdGhhdCBhcmUgYXQgdGhlIGNlbnRlciBvZiBvdXIgY3VsdHVyZTogY2hpbGRyZW4gYXJlIGlubm9jZW50IG9mIGFsbCBzZXh1YWwgaW1wdWxzZXMsIDEzIHllYXIgb2xkcyBhcmUgY2hpbGRyZW4sIGFuZCBzZXggd2l0aCBjaGlsZHJlbiBpcyBhIGNyaW1lIGJlY2F1c2UgY2hpbGRyZW4gY2Fubm90IGNvbnNlbnQgdG8gc2V4LgpEYW5zIGxhIHBlcnNwZWN0aXZlIGRlcyBsZWN0aW9ucyBtdW5pY2lwYWxlcyBkZSAyMDIwLCBxdWkgc2UgZHJvdWxlcm9udCBkYW5zIHByYXRpcXVlbWVudCB1biBhbiAobGVzIGRhdGVzIHByY2lzZXMgbmUgc29udCBwYXMgZW5jb3JlIGNvbm51ZXMpLCBub3VzIHZvdXMgcHJvcG9zb25zIHVuIHRhdCBkZXMgbGlldXggZGUgbGEgcHIgY2FtcGFnbmUgcXVpIGEgZGogY29tbWVuYy4gSWwgbmUgcydhZ2l0IHBhcyBkZSBzZSBwcm9ub25jZXIgc3VyIHRlbGxlIG91IHRlbGxlIGNhbmRpZGF0dXJlLCBub3VzIG5vdXMgZW4gZ2FyZGVyb25zIGJpZW4sIG5pIGRlIGZhaXJlIGRlcyBwcmRpY3Rpb25zIGltcHJvYmFibGVzLCBtYWlzIHBsdXR0IGRlIHZvaXIgY29tbWVudCBzJ2Ftb3JjZSBjZXR0ZSBjYW1wYWduZSBldCBxdWkgc29udCBsZXMgY2FuZGlkYXRzIGVuIGxpY2UsIHBhcm1pIGxlc3F1ZWxzIGZpZ3VyZSBwZXV0IHRyZSBsYSBvdSBsZSBmdXR1ciBtYWlyZSBkZSBQYXJpcy4gCk15IGVudGlyZSBoaWdoIHNjaG9vbCBjYXJlZXIsIEkgd2FzIGV4aGF1c3RlZC4gSSBhYnNvbHV0ZWx5IGxvdmVkIGdldHRpbmcgdG8gbGVhcm4sIGFuZCBJIGdyYWR1YXRlZCB3aXRoIG15IEFTLCBNYWduYSBDdW0gTGF1ZGUgYXQgMTcsIHR3byB3ZWVrcyBiZWZvcmUgSSBncmFkdWF0ZWQgaGlnaCBzY2hvb2wuIApPdGhlciBnYW1lIGNvbXBhbmllcyBoYXZlIHVzZWQgdGhlIHNhbWUgImVuZ2luZSIgZm9yIG5lYXJseSBhIGRlY2FkZSBub3csIGJ1dCB0aGV5IGFsbCByZWZyZXNoIGFuZCB1cGRhdGUgdGhlaXIgZW5naW5lcyBvbiB0aGUgcmVndWxhci4gQmV0aGVzZGEgaW5jbHVkZWQuIEZhbGxvdXQgNCBhbmQgU2t5cmltIFNFIGFyZSBtdWNoIGJldHRlciBhbmQgbW9yZSBvcHRpbWl6ZWQgdGhhbiB0aGUgb3JpZ2luYWwgc2t5cmltIHdhcyBieSBhIGxvbmdzaG90LgpXaGVuIHRoYXQgaGFwcGVucywgdGhlIGFybSB3aWxsIGJlIGFsbG93ZWQgdG8gc28gdGhlIGluc3RydW1lbnRzIGNhbiBrZWVwIG1vbml0b3JpbmcuLiAKS2lkcyBHYW1lcyAiUHJpbmNlc3MgQ3J1aXNlcyBoYXMgb25lIG9mIHRoZSBiZXN0IGNoaWxkcmVuJ3MgcHJvZ3JhbXMgYWZsb2F0LCIgYWNjb3JkaW5nIHRvIE1TTkJDIGluIHRoZWlyIGFydGljbGUgIjEwIENydWlzZSBTaGlwcyBLaWRzIExvdmUuIiBUcmF2ZWwgY29sdW1uaXN0IEFuaXRhIER1bmhhbSBQb3R0ZXIgc3BlY2lmaWNhbGx5IG5hbWVzIHRoZSBSdWJ5LCBFbWVyYWxkIGFuZCBDcm93biBQcmluY2VzcyBzaGlwcy4gS2lkcyBhZ2VzIDMgdG8gOCBlbmpveSBiZWFuIGJhZyB0b3NzZXMsIHBvb2wgZ2FtZXMgYW5kIG1pbmkgcm9jayBjbGltYmluZyB3YWxsIGV2ZW50cy4gT2xkZXIga2lkcyBlbmpveSB0YWJsZSBnYW1lcyBsaWtlIGFpciBob2NrZXksIHBpbmcgcG9uZyBhbmQgZm9vc2JhbGwsIGFzIHdlbGwgYXMgUGxheXN0YXRpb24gMy4gClN0cmVzcyBpbiB5b3VyIGxpZmUgY2FuIGV4YWNlcmJhdGUgc29tZSBwcmUgZXhpc3RpbmcgY29uZGl0aW9ucywgcHJvbW90ZSBhbnhpZXR5IGFuZCBiZWNvbWUgdW5tYW5hZ2VhYmxlLiBUaGlzIHR5cGUgb2YgdGhpbmcgaXMgd2h5IG1hbnkgc3VnZ2VzdCBtYXNzYWdlIHRoZXJhcHkuLiAKSSBhbHdheXMgd2FudGVkIHRvIGhhdmUgbGFzZXIgZXllIHN1cmdlcnkgYnV0IEkgbmV2ZXIgYmVlbiB3aWxsaW5nIHRvIHJpc2sgaXQuIApUaGUgeWVhciAxODAwIHNhdyBhIGdyZWF0IGZhbWUgaW4gY2FzZSBvZiBSb3VsZXR0ZS4gQ291bnRlc3MgS2lzc2VsZWZmIHNwZW50IGhvdXJzIGdhbWJsaW5nIGF0IHJvdWxldHRlIGFuZCBpcyBzYWlkIHRvIGhhdmUgbG9zdCBtdWNoIGluIHRoZSBnYW1lIGZvciBhIG51bWJlciBvZiB0aW1lcy4gVGhlIHN0cmVldCBwYXZpbmcgYSB3YXkgdG8gY2FzaW5vIGluIEhvbWJ1cmcgaW4gR2VybWFueSBpcyBuYW1lZCBhZnRlciBoZXIuIApBdmFudGdhcmRlIEV4dHJlbWUgMzQgLiAzIEZlYiAyMDE4IC4gCkkgaGF2ZSBhIGZyaWVuZCB3aG8gaGFkIFBQUCwgbHVja2lseSBzaGUgd2FzIGNhdWdodCBwcmV0dHkgZWFybHkgb24gYmVjYXVzZSBoZXIgbWlkd2lmZSBub3RpY2VkIHNoZSB3b3VsZG4ndCBhY2tub3dsZWRnZSBoZXIgYmFieSBhbmQgcmVmZXJyZWQgdG8gaGltIGFzIGEgZGVtb24sIHNoZSBzcGVudCA4IG1vbnRocyBpbiBhIHNwZWNpYWxpc3QgdW5pdCB3aXRoIGhpbSB1bnRpbCBzaGUgY2FtZSBvdXQgb2YgaXQuIFBQUCBraWxscywgYXMgZG9lcyBwb3N0IHBhcnR1bSBkZXByZXNzaW9uLiBOb3QgYSBsYXVnaGluZyBtYXR0ZXIuLiAKTnZpZGlhIFlvWSBoYXMgYmVlbiBwdXR0aW5nIG91dCBuZXcgYXJjaGl0ZWN0dXJlcyBhbmQgaW5ub3ZhdGluZy4gCldoYXQgZG9lcyB0aGF0IHRlbGwgeW91PyBCYXNpY2FsbHkgdGhhdCB5b3UgbmVlZCB0byBoYXZlIGEgYmV0dGVyIHRoYXQgMTAlIGNoYW5jZSBvZiB3aW5uaW5nIHRoZSBoYW5kIHRvIG1ha2UgaXQgd29ydGggcGxheWluZy4gSWYgeW91J3JlIDQgY2FyZHMgdG8gYSBmbHVzaCwgeW91IGhhdmUgYSAzNiUgY2hhbmNlLCBzbyB0aGF0J3MgZGVmaW5pdGVseSBhIGJldCB5b3Ugd2FudCB0byBtYWtlLiBPVE9ILCBpZiB0aGUgZ3V5IGJldHMgJDIwMCBpbnRvIGEgJDEwMCBwb3QsIHlvdSdsbCBlbmQgdXAgaGF2aW5nIHRvIGJldCAkMTAwIG9uIGEgNCAxIHBheSBvZmYsIHdoaWNoIG1lYW5zIHRoYXQgeW91J2QgbG9zZSBtb25leSB0YWtpbmcgdGhhdCBiZXQuCiJPbmUgb2YgYSBraW5kLiBUaGUgYXJ0d29yayBpcyBpbmNyZWRpYmxlLCB0aGUgUnVzc2VsbHMsIEZyYW5rIFRpbm5leSBKb2huc29uLCB0aGUgV2lsbGlhbSBMZWVzLiBXZSBnb3Qgc2V2ZW4gb2YgdGhvc2UuIFRoZSBzaXplIG9mIHRoZW0gaXMganVzdCBpbmNyZWRpYmxlLiIKSSBmZWx0IGFzIGlmIGhlciBtYWtlIGEgbW92ZSBhIGVxdWl0eSwgdGhlbiBJIHJpZ2h0IGF3YXkgZmluaXNoZWQuIApXYW50IGEgcGFuaW5pPyBBbGV4YW5kZXJzIGNhZmUgaGFzIHNvbWUgb2YgdGhlIGJlc3QuIEkgbG92ZSB0aGUgMTIzIENvdXJ0IGFuZCBpdCBiZWNvbWUgYSBzdGFwbGUgb2YgbXkgd2Vla2x5IGZvb2QgcnVucywgYW5kIGxhc3QgaWYgeW91IGp1c3QgbG9va2luZyBmb3Igc29tZXRoaW5nIHF1aWNrIGFuZCBkaXJ0eSBidXQgZGVsaWNpb3VzLCBzdG9wIGJ5IE1hcnlhbSBNYXJ0IG9uIENvdXJ0IHN0LiBCeSBTYWtlIFR1bWkgZm9yIHNvbWUgY2hpY2tlbiBhbmQgbGFtYiBvdmVyIHJpY2Ugd2l0aCByZWQgYW5kIHdoaXRlIHNhdWNlLiAKV2hpY2ggaXMgc3RpbGwgZ29pbmcgb24sIGxpa2UgdGhpcyBnYW1lIHdpbGwgYmUuIApJbiB0aGUgcGFzdCwgc3BhcyB3ZXJlIG9ubHkgYSBtZWV0aW5nIHBsYWNlIGZvciB3b21lbiB3aG8gd2FudGVkIGEgbGl0dGxlIHJlbGF4YXRpb24uIEJ1dCB0b2RheSwgc3BhcyBhcmUgbW9yZSB0aGFuIGp1c3QgYSByZWxheGF0aW9uIGhhdmVuLiAKSGUgbGlrZXMgdG8geWVsbCBvdXQgd2hhdGV2ZXIgdGhlIGN1cnJlbnQgc2xhbmcgdGVybSBvZiB0aGUgd2VlayBpcyBhcyB3ZWxsLiBGb3IgYXdoaWxlIGl0IHdhcyAiZGVleiBudXRzISIgd2hpY2ggSSBzdGlsbCBkb24gdW5kZXJzdGFuZC4gCkF0IEZvcmQsIE1hcmsgRmllbGRzIGhhcyBwbGF5ZWQgYSBTaWxpY29uIFZhbGxleSBDRU8gc3RyYWlnaHQgb3V0IG9mIGNlbnRyYWwgY2FzdGluZywgdm9pY2luZyBtYXN0ZXJmdWxseSBzY3JpcHRlZCBsaW5lcyBhYm91dCBtb2JpbGl0eSBhbmQgYSB3b3JsZCBvZiAic21hcnQiIGZ1dHVyZSBzdHVmZi4gQnV0IG9uZSB5ZWFyIGluLCBoZSdzIHN0aWxsIGZlZWxpbmcgaGlzIHdheSB0aG91Z2ggdGhpcyB1bmZhbWlsaWFyIHdvcmxkLiBBbmQgZm9yIGFsbCB0aGUgdGFsayBhYm91dCBpdHMgZ2xpc3RlbmluZyBmdXR1cmUsIEZvcmQncyBhYnJ1cHQgcHJvZml0IHdhcm5pbmdzIHN1Z2dlc3QgaXQgaGFzIG5lYXJlciB0ZXJtIHByb2JsZW1zIHRvIHNvcnQgb3V0LgpXaGVyZSBpdCBoYXMgYmVlbiBhIHByb2JsZW0gaXMgaWYgSSBnZXQgaXQgdG8gc3dpdGNoIG9uIGJhdGhyb29tIGxpZ2h0cywgdGhlIHBlcnNvbiB0aGVuIGV4aXRzIHRoZSBiYXRocm9vbSwgYW5kIG1hbnVhbGx5IHR1cm5zIHRoZSBsaWdodHMgb2ZmLCBhbmQgdGhlbiBzb21lb25lIGVsc2UgZ29lcyBpbiBhZnRlciByaWdodCBhd2F5IHRoZSBsaWdodHMgZG9uJ3QgdHVybiBvbiBiZWNhdXNlIHRoZSBtb3Rpb24gc3RhdGUgZG9lc24ndCBjaGFuZ2UuIEp1c3QgbmVlZCB0byB0ZWFjaCBwZW9wbGUgbm90IHRvIG1hbnVhbGx5IHR1cm4gbGlnaHRzIG9mZiA6KVRoZSBmb250cyBwcmVmaXhlZCB3aXRoIHhmdDogYXJlIHRoZSBmb250IG5hbWVzIHlvdSBnZXQgd2hlbiB5b3UgY2FsbCBmYyBsaXN0LiBmYyBsaXN0IGxpc3RzIGFsbCBhdmFpbGFibGUgZm9udHMuIFRoZSBvdGhlciB0eXBlIG9mIGZvbnQgc3BlY2lmaWVyICggd3VuY29uIHNpamkgbWVkaXVtIHIgbm9ybWFsIDEwIDEwMCA3NSA3NSBjIDgwIGlzbzEwNjQ2IDEpIGlzIGNhbGxlZCBYIGxvZ2ljYWwgZm9udCBkZXNjcmlwdGlvbiwgaXRzIGZvcm1hdCBpcyBhIGxpdHRsZSBtb3JlIGNvbXBsZXgsIGJ1dCB5b3UgY2FuIHVzZSB0aGUgeGZvbnRzZWwgcHJvZ3JhbSB0byBwdXQgdG9nZXRoZXIgZm9udCBzdHJpbmdzLiBEaWZmZXJlbnQgc2V0dXBzIG1heSBoYXZlIGRpZmZlcmVudCBmb250IG5hbWVzLCB0aGF0IHdoeSBpdCBnb29kIHByYWN0aWNlIHRvIHVzZSBmYyBsaXN0IHRvIGZpZ3VyZSBvdXQgaG93IGV4YWN0bHkgZm9udHMgb24geW91ciBzeXN0ZW0gYXJlIGNhbGxlZC4KQSBiYXNpYyBxdWVzdGlvbiBhbGwgdGhlIHBsYXllcnMgaGF2ZSBpbiB0aGVpciBtaW5kcyBpcyB0aGF0IHdoeSBhcmUgdGhlc2Ugc2l0ZXMgb2ZmZXJpbmcgYSBjaGFuY2UgdG8gcGxheSB0aGVzZSB0b3VybmFtZW50cz8gVGhleSB0aGluayB0aGF0IHRoZXJlIG11c3QgYmUgc29tZSBjYXRjaCBpbnZvbHZlZCB0byB0aGlzLiBUaGV5IGZlYXIgdG8gcGFydGljaXBhdGUgYW5kIHRyeSB0aGVpciBsdWNrcy4gCk15IHNxdWF0IGNhdWdodCB1cCB0byBteSBkZWFkbGlmdCBmb3IgR29kIHNha2UuIEkgdGhvdWdodCBtYXliZSBmYXRpZ3VlIHdhcyB0aGUgcHJvYmxlbSBidXQgaXQgaGFwcGVuaW5nIGFnYWluIGFuZCBJIG5vdCB2ZXJ5IGZhdGlndWVkIHJpZ2h0IG5vdy5BdCB0aGlzIHBvaW50IEkgc3BlbnQgbW9yZSB0aW1lIGluIHRoZSBneW0gZnJ1c3RyYXRpb24gY3J5aW5nIHRoYW4gYWN0dWFsbHkgZGVhZGxpZnRpbmcgbW9kZXJhdGVseSBoZWF2eS4gCldoeSBkbyB5b3UgY2FyZSBpZiB5b3VyIGRhdGEgaXMgIm1pbmVkIj8gTGV0J3Mgc2F5IGl0IGdvZXMgdG8gYWR2ZXJ0aXNlcnMuIEl0J3Mgbm90IGxpa2UgdGhlcmUncyBzb21lIGR1ZGUgdGhlcmUgc2F5aW5nICJvb29vbyB1L2hvbGx5amVzdGVyIGlzIGF0IHRoaXMgc3BvcnRzIGV2ZW50ISEgTGV0J3MgZ28gc3RlYWwgdGhlaXIgd2FsbGV0ISEiIFRoZSBtb3N0IGRhdGEgdGhleSdsbCBnZXQgaXMgdGhlIG1hYyBhZGRyZXNzIG9mIHlvdXIgcGhvbmUgd2l0aCBhIGxvY2F0aW9uICh0aGUgbW9zdCBleHRyZW1lIGNhc2UpLiAKMjogSSB3YXMgMTggZGF0aW5nIGEgMzJ5ciBvbGQuIEl0IHdhcyBCQUQganVqdS4gSSBkaWQgd2hhdCBJIGNvdWxkIGJ1dCB3YXMgaW4gd2F5IG92ZXIgbXkgaGVhZC4KQXJlIHlvdSBldmVuIGJlaW5nIHNlbnNpYmxlIHJpZ2h0IG5vdz8gQWNjaWRlbnRhbGx5IHNhbHZhZ2luZyBzb21ldGhpbmcgaXMgY29tcGxldGVseSBkaWZmZXJlbnQuIApMb29rIGZvcndhcmQgdG8gcGVvcGxlIGhlcmUgYml0Y2hpbmcgYWJvdXQgdGhhdCB0aGVuIGFuZCByZW1pbmRpbmcgdGhlbSB0aGV5IGFsbCBsb3ZlZCBpdCB0aG91Z2h0IGl0IHdhcyB3b25kZXJmdWwuLiAKV2l0aCB0aGUgcG9sYXJpemF0aW9uLCBpdCBmZWVscyBsaWtlIHBlb3BsZSBnZXQgbW9yZSBleHRyZW1lIGluIHRoZWlyIHR3ZWV0cywgc2hlIHNhaWQud2hvIGFyZSBpbiB0dW5lIHRvIGxvY2FsIHBvbGl0aWNzIHJlY29nbml6ZSB0aGUgZGl2aXNpdmVuZXNzIGFuZCB0aGUgdG94aWNpdHkgb2Ygb3VyIHBvbGl0aWNhbCBjb252ZXJzYXRpb25zLiBUaGV5IGRvbiB0aGluayBpdCB3b3J0aCBwdXR0aW5nIGF0IHJpc2sgdGhlaXIgc2FmZXR5IG9yIHRoZSBzYWZldHkgb2YgdGhlaXIgZmFtaWx5IHdoZW4gdGhleSBrbm93IHBlb3BsZSBhcmUgcHV0dGluZyBvdXQgdGhyZWF0cyBvZiB0aGlzIG5hdHVyZS4gCldlIGFsc28gc3RydWdnbGUgdG8gYWZmb3JkIHNjaG9vbCBmZWVzLiBTbyBpdCBzb21ldGhpbmcgSSBvZnRlbiB0aGluayBhYm91dCBidXQgaGF2ZSBubyBpZGVhIGlmIGl0IHRoZSByaWdodCB0aGluZy4uIAo6UCBJJ20gdGhpbmtpbmcgb2Ygc2lnbmluZyB1cCBmb3IgdGhlIGZ1bGwgU0YgTWFyYXRob24gaW4gSnVseSwgYnV0IGVzcGVjaWFsbHkgd2hlbiBteSBwYWNlIGZlZWxzIHNvIHNsb3csIEknbSBzY2FyZWQgb2YgaG93IGxvbmcgd29ya291dHMgd2lsbCBiZS4gCkluIGFsbW9zdCBldmVyeSBnYW1lIG9mIHBva2VyIHRoZSBnb2FsIGlzIHRvIGhhdmUgdGhlIGJlc3QgcG9zc2libGUgZml2ZSBjYXJkIGNvbWJpbmF0aW9uLiAKImtub2NrZWQgb2ZmIGhpcyBoaWdoIGhvcnNlIiBkb2VzbiBldmVuIGJlZ2luIHRvIGRlc2NyaWJlIGl0LiAKVG8gc2VlIGFsbCBvZiBvdXIgYXJ0aWNsZXMgb24gcG9rZXIgcnVsZXMgYW5kIGFkdmljZSwgZ28gdG8gb3VyIG1haW4gYXJ0aWNsZSBvbiBIb3cgVG8gUGxheSBQb2tlci4gRm9yIGFuIGludHJvZHVjdGlvbiB0byB0aGUgZ2FtZSwgc2tpbSBvdmVyIHRoZXNlIFBva2VyIEJhc2ljcy4gU28geW91IHRoaW5rIHlvdSd2ZSBnb3QgdGhlIGJlc3QgaGFuZC4gTWF4aW1pemUgeW91ciB3aW5uaW5ncyB3aXRoIHRoZXNlIFBva2VyIEJldHRpbmcgVGlwcy4gSGF2ZSB5b3UgY2FsY3VsYXRlZCB0aGF0IHlvdXIgaGFuZCBpcyBhIGxvc2VyLCBidXQgeW91IHRoaW5rIHlvdSBjYW4gZmFrZSBvdXQgdGhlIG9wcG9zaXRpb24/IEJlIHN1cmUgeW91IGtub3cgSG93IHRvIEJsdWZmIGluIFBva2VyLiBQb2tlciBPZGRzIEFuc3dlcnMxLiBUaGUgb2RkcyB0aGUgcG90IGlzIG9mZmVyaW5nIHlvdSBhcmUgNSB0byAxLiBUaGVyZSBpcyAkNSBpbiB0aGUgcG90LCBhbmQgeW91IG5lZWQgdG8gY2FsbCB3aXRoICQxLiBCZWNhdXNlIGFueSBhY2Ugb3IgbmluZSB3aWxsIGdpdmUgeW91IGEgc3RyYWlnaHQsIHlvdSBoYXZlIDggb3V0cyBvZiB0aGUgNDcgdW5zZWVuIGNhcmRzIG9yIGFsbW9zdCA0LjkgdG8gMSBvZGRzIHRvIGltcHJvdmUgeW91ciBoYW5kLiBJbiBhIGxvb3NlIGdhbWUgd2hlcmUgeW91IGNhbiBleHBlY3Qgb25lIG9yIGJvdGggb2YgeW91ciBvcHBvbmVudHMgdG8gcGF5IHlvdSBvZmYgd2hlbiB5b3UgaGl0LCB5b3Ugc2hvdWxkIGNhbGwuIEluIGEgdGlnaHQgZ2FtZSB3aXRoIHNvbGlkIG9wcG9uZW50cywgdGhpcyBpcyBwcm9iYWJseSBhIGZvbGQuIElmIHlvdSBkbyBkZWNpZGUgdG8gc2VlIHRoZSB0dXJuIGFuZCBhbm90aGVyIGhlYXJ0IGhpdHMsIHlvdXIgb3V0cyBnbyBmcm9tIDggdG8gMTcsIGFuZCB0aGUgcG90IG9kZHMgcHJvYmFibHkgaW1wcm92ZSBlbm91Z2ggdG8gc2VlIHRoZSByaXZlci4KVGhpcyBjYW4gYmUgYSBmYW50YXN0aWMgb3Bwb3J0dW5pdHkgZm9yIHlvdSB0byB0cnkgYSBicmFuZCBuZXcgdHJlYXRtZW50LCB3aXRob3V0IGhhdmluZyBicmVha2luZyB5b3VyIHBpZ2d5IGJhbmsuLiAKRmFzdCBmb3J3YXJkIGEgY291cGxlIG9mIHllYXJzICAgREogbWVldHMgSGFycmlldCwgdGhlIGNvdXBsZSBtYXJyeSBhbmQgYmVnaW4gdG8gc3BlbmQgYSBsb3Qgb2YgdGltZSBpbiB0aGUgTW91bnRhaW5zLCB2aXNpdGluZyBIYXJyaWV0J3MgbXVtIGF0IExldXJhLgpPbmUgY2FuIHByb2JhYmx5IG1ha2UgKG9yIGxvc2UpIG1pbGxpb25zLCBidXQgdG8gbWFrZSAob3IgbG9zZSkgYmlsbGlvbnMgb25lIGhhcyB0byBrbm9jayB0aGUgZG9vcnMgb2YgdGhlIGNvbXBsZXggd29ybGQgb2Ygc3RvY2sgbWFya2V0cy4gClRoZSBhaXIgc3RpbGwgaGFzbiByZXR1cm5lZCB0byBteSBsdW5ncy4gClRoZXNlIFRlcm1zIHNoYWxsIHJlbWFpbiBpbiBmdWxsIGZvcmNlIGFuZCBlZmZlY3Qgd2hpbGUgeW91IHVzZSB0aGUgU2VydmljZXMuIApCdXQgc2luY2UgdGhlIHNhbWUgY29kZSByYW4gdmFzdGx5IGRpZmZlcmVudGx5IHdpdGgganVzdCBhIHN3aXRjaCBmcm9tIElOTkVSIHRvIExFRlQsIEkgZG9uIHRoaW5rIHRoZSBudW1iZXIgb2YgY29sdW1ucyBvciBqb2luIGNyaXRlcmlhIHdhcyB3aGF0IHdhcyBjYXVzaW5nIG15IGlzc3VlLi4gCktpcm8gc3RhYmJpbmcgSW5rYXJtYXQgd2FzIGFuIGFjY2lkZW50LCBzbyBJIGZlZWwgdGhhdCBpZiBLaXJvIGFjdHVhbGx5IGRpZXMsIGl0IGdvbm5hIGJpdGUgaGltIGluIHRoZSBhc3Mgc29tZWhvdyBub3cgdGhhdCBoZSBjdXJzZWQuIApJZiB0aGVyZSBvbmUgZ29vZCB0aGluZyBJIGNhbiBzYXkgYWJvdXQgQXJ0aWZhY3QgaXMgdGhhdCB0aGUgZGV2ZWxvcGVycyBjYXJlZCBhYm91dCB0aGUgZ2FtZS4uIApBbmQgaW4gYSB0cmlwIHRvIHRoZSBNaWRkbGUgRWFzdCB0aGlzIG1vbnRoLCBCb2x0b24gYW5ub3VuY2VkIG5ldyBvbiB0aGUgd2l0aGRyYXdhbCwgaW5jbHVkaW5nIGRlbWFuZGluZyBhc3N1cmFuY2VzIGZyb20gVHVya2V5IGl0IHdvbiBhdHRhY2sgS3VyZGlzaCBmaWdodGVycyBpbiBTeXJpYS4gClllYWgsIGl0IHByb2JhYmx5IHRoZW9yZXRpY2FsbHkgYSBmaW5lIGxpbmUgdG8gZW5kIHVwIGhlcmUgd2l0aCA0YzVjLCBidXQgaXQgc3Vja3MgdG8gcGxheS4gClRoZXkgaGF2ZSBpbiBjb21tb24gdGhlIGZhY3QgdGhhdCBoZWxwIGluIHRoZSBwcm9jZXNzIG9mIGltbXVuaXR5IGJvb3N0aW5nLCBidXQgdGhlaXIgcHVycG9zZXMgYXJlIGRpZmZlcmVudC4gCkFtb25nIGJhc2ViYWxsJ3Mgd29yc3QgdGVhbXMgZnJvbSB0aGVpciBleHBhbnNpb24gc2Vhc29uIGluIDE5NjIsIHRoZSBNZXRzIGxvc3QgbW9yZSB0aGFuIDEwMCBnYW1lcyBpbiBmaXZlIG9mIHRoZWlyIGZpcnN0IHNpeCBzZWFzb25zIGFuZCBoYWQgbmV2ZXIgd29uIG1vcmUgdGhhbiA3MyBnYW1lcyBpbiB0aGVpciBmaXJzdCBzZXZlbiB5ZWFycy4gV2l0aCBjaGVyaXNoZWQgQnJvb2tseW4gRG9kZ2VycyBzdGFyIEdpbCBIb2RnZXMgYXMgdGhlaXIgbWFuYWdlciwgYSB5b3VuZyBjb3JwcyBvZiBwaXRjaGVycyBsZWQgYnkgU2VhdmVyLCBKZXJyeSBLb29zbWFuLCBHYXJ5IEdlbnRyeSBhbmQgYSBzdGlsbCB3aWxkIE5vbGFuIFJ5YW4sIGFuZCBhbiBvZmZlbmNlIHRoYXQgaW5jbHVkZWQgQ2xlb24gSm9uZXMgYW5kIFRvbW1pZSBBZ2VlLCB0aGUgTWV0cyBvdmVydG9vayB0aGUgQ2hpY2FnbyBDdWJzIHRvIHdpbiB0aGUgTkwgRWFzdCB3aXRoIGEgMTAwIDYyIHJlY29yZC4KTm90IG9ubHkgdGhhdCwgYnV0IHRoZSAidGltZSIgc2hlIHdhbnRpbmcgdXMgdG8gcGF5IGhlciBmb3IgYXJlIHRpbWVycyB0aGF0IHdlcmUgbm90IGNsZWFybHkgZGVmaW5lZCBhcyAid2UgZ29pbmcgdG8gZG8gc29tZSB3ZWRkaW5nIHBsYW5uaW5nIi4gSW5zdGVhZCB0aG9zZSB0aW1lcyB3ZXJlIHNjaGVkdWxlZCBkYXRlIG5pZ2h0cywgYW5kIHJpZ2h0IGFzIHdlIGdvdCByZWFkeSB0byBnbyBhbmQgc2FpZCB3ZSBoYWQgdG8gbGVhdmUsIHNoZSBzYWlkIHNoZSB3YW50ZWQgdG8gdGFsayBhYm91dCBzb21lIGRldGFpbHMgKHByZXR0eSBtdWNoICJIYXZlIHlvdSBnb3R0ZW4gdGhpcyBkb25lIiBhbmQgIldobyB5b3VyIHJpbmcgYmVhcmVyIiB0eXBlIHN0dWZmLiBJIGV4cGVjdGVkIHRoYXQgaGVyIGhhdmluZyBkb25lIDMgd2VkZGluZ3MgcHJpb3IgYW5kIHRlbGxpbmcgbWUgaG93IHNoZSBkaWQgdGhlbSwgYW5kIG1lIHNheWluZyB0aGF0IHRoZSBoZWxwIEkgbGlrZSB0byByZWNlaXZlLCB3b3VsZCBzZXQgdGhlIGdyb3VuZHdvcmsgZm9yIGtub3dpbmcgdGhhdCB3aGF0IHdlIGV4cGVjdGVkLiAKU2hlIHRvbGQgdXMgYSBjb3VwbGUgc3RvcmllcyBhbmQgaXQgaXMganVzdCBob3JyaWZ5aW5nLiBJdCBhbHNvIGhvcnJpZnlpbmcgaG93IG1hbnkgY2hpbGRyZW4gc2hlIGdldHMgdGhhdCBhcmUgZm9yY2VkIGludG8gbHlpbmcgYnkgYSBwYXJlbnQgZm9yIGN1c3RvZHkgYmF0dGxlcyBldGMuIApaYWlhIGFuZCBBcnRodXIgaGF2ZSBwbGVhZGVkIGd1aWx0eSB0byBzaW1pbGFyIGNoYXJnZXMsIHdpdGggQXJ0aHVyIHNlbnRlbmNlZCB0byBhdCBsZWFzdCBmb3VyIHllYXJzIGluIGphaWwsIGFuZCBaYWlhIHlldCB0byBiZSBzZW50ZW5jZWQuCiJKdXN0IHRvZGF5IG15IGRlbnRpc3QgZXhwcmVzc2VkIGhlciBkZWxpZ2h0IGluIGhlYXJpbmcgdGhpcyBnb29kIG5ld3MgbGFzdCBzdW1tZXIuIChTaGUgZ3JldyB1cCBpbiB0aGUgTHV0aGVyYW4gQ2h1cmNoIE1pc3NvdXJpIFN5bm9kIGJ1dCBsZWZ0IGxvbmcgYWdvIGFmdGVyIGhlciBTdW5kYXkgU2Nob29sIHRlYWNoZXIgc2FpZCBoZXIgSmV3aXNoIGZhdGhlciB3b3VsZCBnbyB0byBoZWxsLikgV2hhdCB3ZSB0ZWFjaCBhbmQgcHJvY2xhaW0gbWF0dGVycy4gSW5kZWVkLCBpdCdzIGEgbWF0dGVyIG9mIGxpZmUgYW5kIGRlYXRoLiBJZiBvbmUgeW91bmcgcGVyc29uIGhlYXJzIHRoaXMgbmV3cyBhbmQgYmVsaWV2ZXMgR29kIGFjY2VwdHMgaGVyIG9yIGhpbSB0aGF0IGlzIGVub3VnaCBvZiBhIHJlYXNvbiBmb3IgbGFzdCB5ZWFyJ3Mgdm90ZS4iCk5vdyB3ZSBoYXZlIG1hZGUgb3VyIGJlZCBhbmQgcHJvYmFibHkgdGhlIHdvcnN0IHBvc3NpYmxlIGNhcmQgdG8gaGl0IGhpdHMuIApDb21wYXJhIG1vdG9hcmUgZGUgYwpJIHRoaW5rIHRoaXMgY29udGV4dCBpcyBpbXBvcnRhbnQuIEl0IGhhcmQgdG8gc2F5IHdoYXQgd291bGQgaGF2ZSBoYXBwZW5lZCBoYWQgdGhleSBmb2xsb3dlZCBoaXMgcGxhbiB0byBhIFQgYnV0IGl0IHByb2JhYmx5IHdvdWxkIGhhdmUgaGFkIG1vcmUgb2YgYSBzaG90IHRoYW4gc2l0dGluZyBhcm91bmQgYXZvaWRpbmcgbG9zaW5nIGRhdGVkIHNoaXBzLiBJdCBhbHNvIHByZXR0eSBoYXJkIHRvIHdyYXAgeW91ciBicmFpbiBhcm91bmQgc2VlaW5nIHBlb3BsZSBzZW5zZWxlc3NseSBleHBsb2RlIGluIHRob3NlIHNoaXBzIGV2ZW4gd2l0aCB0aGUgY29udGV4dCBvZiBrbm93aW5nIHRoZSB3ZXN0ZXJuIGZyb250IHdhcyB3YXkgbW9yZSBvZiBhIHNsYXVnaHRlcmhvdXNlLiBTbyBtYXliZSB0aGUgcGxhbiB3YXNuIGEgZ3JlYXQgb25lIGFueXdheSBpZiBpdCByZWxpZWQgb24gc3VpY2lkaW5nIHBlb3BsZSB0byBicmVhayB0aHJvdWdoLgpTYWlkIHRob3VzYW5kcyBvZiBNb3N1bCByZXNpZGVudHMgd2lsbCBsaWtlbHkgcmVtYWluIGRpc3BsYWNlZCBmcm9tIHRoZSBjaXR5IGFmdGVyIHRoZSBmaWdodCBpcyBjb25jbHVkZWQgYmVjYXVzZSBvZiAiZXh0ZW5zaXZlIGRhbWFnZSBjYXVzZWQgZHVyaW5nIHRoZSBjb25mbGljdC4iLiAKU2Ftc3VuZyBwaG9uZXMgYnlwYXNzIHRoYXQgb25seSBpZiB0ZXh0cyBhcmUgZ29pbmcgZnJvbSBTYW1zdW5nIHRvIFNhbXN1bmcsIGtpbm5kYSBsaWtlIGltZXNzYWdlLCBhbHNvIHNvbWUgb3RoZXIgQW5kcm9pZCBwaG9uZXMgY29tYmluZSB0ZXh0cy4gCkluIGZhY3QsIHdoZW4gaW50ZXJhY3Rpbmcgd2l0aCBnb2xkIHBsYXllcnMgaXQgaXMgbW9yZSBoYXJtZnVsIHRvICJwdXNoIiBhIG1ldGEgcGljay5Tb21ldGhpbmcgZGlmZmVyZW50IGlzICJiZWluZyBhIGdvbGQgbGV2ZWwgc3RyYXRlZ2ljIHRoaW5rZXIiLCB3aGljaCBtZWFucyB5b3UgY2FuIGluc2lzdGVudCBvbiBhIG1haW4gaGVhbGVyL3Rhbmsgb3IgZ28gYSBwb3B1bGFyIGNvbWJvIGxpa2UgdGhlIHRhbmsgZHVvcywgcGhhcm1hY3ksIHphcnpvIGV0Yy5Lbm9ja2JhY2sgZGlzdGFuY2UgaXMgbm93IG1vcmUgY29uc2lzdGVudEhlcm9lcyB0aGF0IGFyZSBmbHlpbmcgY2FuIG5vdyBiZSBrbm9ja2VkIGJhY2sgYW5kIHNsb3dlZERldmVsb3BlciBDb21tZW50czogS25vY2tiYWNrcyBhcmUgbm93IGxlc3MgYWZmZWN0ZWQgYnkgaG93IHRoZSBlbmVteSB3YXMgbW92aW5nIHdoZW4gdGhleSB3ZXJlIGhpdC4gSW5zdGVhZCBvZiBoYXZpbmcgc21hbGwgb3IgbGFyZ2Uga25vY2tiYWNrcyB0aGF0IGRlcGVuZCBvbiBjaGFuY2UsIGtub2NrYmFja3Mgd2lsbCBmZWVsIHNpbWlsYXIgcmVnYXJkbGVzcyBvZiB0aGUgZW5lbXkncyBtb3ZlbWVudCBsZWFkaW5nIHVwIHRvIHRoZSBrbm9ja2JhY2suQ29ycmVjdCBtZSBpZiBJIHdyb25nLCBidXQgdGhpcyB3aWxsIGJlIGh1Z2UgZm9yIHRob3NlIEx1Y2lvIG1haW4gd2FubmFiZXMuQ29yc29UaGVXb2xmICA4IHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvVGhpcyBzb3VuZHMgZXhhY3RseSBsaWtlIG15IGV4cGVyaWVuY2UgcGxheWluZyBvbiBlYXN5LiAKVGhhdCdzIHdoeSBDbHViV1BUIG9mZmVycyBGcmVlIFRyaWFsIHByb21vdGlvbi4gClRoZSBVSyBHb3Zlcm5tZW50IGhhcyBhbHNvIGNvbmZpcm1lZCBFVSBzdHVkZW50cyB3aWxsIGNvbnRpbnVlIHRvIGJlIGVsaWdpYmxlIGZvciAnaG9tZSBmZWUgc3RhdHVzJyB3aXRoIHRoZSB0dWl0aW9uIGZlZSBmb3IgU2VwdGVtYmVyIDIwMTkgZW50cnksIGFuZCBzbyBmZWVzIGZvciBmdWxsIHRpbWUgRVUgc3R1ZGVudHMgd2lsbCBiZSBjYXBwZWQgYXQgZm9yIHRoZSBmaXJzdCB5ZWFyIG9mIHN0dWR5LiBQYXJ0IHRpbWUgY291cnNlIGZlZXMgd2lsbCBhbHNvIGJlIGNhcHBlZCBhdCBJbiBhZGRpdGlvbiwgRVUgc3R1ZGVudHMgd2lsbCBjb250aW51ZSB0byBoYXZlIGFjY2VzcyB0byBmaW5hbmNpYWwgc3VwcG9ydCBhdmFpbGFibGUgdmlhIHN0dWRlbnQgbG9hbnMgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGVpciBjb3Vyc2UuLiAKVGhlIGVpZ2h0IE1pbGxlbm5pdW0gRGV2ZWxvcG1lbnQgR29hbHMgKE1ER3MpICAgd2hpY2ggcmFuZ2UgZnJvbSBoYWx2aW5nIGV4dHJlbWUgcG92ZXJ0eSByYXRlcyB0byBoYWx0aW5nIHRoZSBzcHJlYWQgb2YgSElWL0FJRFMgYW5kIHByb3ZpZGluZyB1bml2ZXJzYWwgcHJpbWFyeSBlZHVjYXRpb24sIGFsbCBieSB0aGUgdGFyZ2V0IGRhdGUgb2YgMjAxNSAgIGZvcm0gYSBibHVlcHJpbnQgYWdyZWVkIHRvIGJ5IGFsbCB0aGUgd29ybGQncyBjb3VudHJpZXMgYW5kIGFsbCB0aGUgd29ybGQncyBsZWFkaW5nIGRldmVsb3BtZW50IGluc3RpdHV0aW9ucy4gVGhleSBoYXZlIGdhbHZhbml6ZWQgdW5wcmVjZWRlbnRlZCBlZmZvcnRzIHRvIG1lZXQgdGhlIG5lZWRzIG9mIHRoZSB3b3JsZCdzIHBvb3Jlc3QuIApJZiBzaGUgd2FzIGNvbnRhZ2lvdXMsIHRoZXJlIHdvdWxkIGFscmVhZHkgYmUgYSBwYW5kZW1pYy4gCk5vIHRhbmssIG5vIGFkZGl0aXZlcyBpIGFtIHZhcGluZyBIVEZTRSBvZmYgb2YgYSBTdGFpbmxlc3Mgc3RlZWwgY29pbC4gSSBhbSBsaXRlcmFsbHkgb24gdGhlIG1vb24gd2l0aCBteSBzZXR1cCBhbmQgdGhlIHJlYXNvbiBJIHVzZSB0aGlzIGlzIGJlY2F1c2UgaXQgdGhlIGJlc3QgZmxhdm9yIEkgY2FuIGdldCBmcm9tIG15IEhURlNFLiAKU2hvdWxkIHRoZSByZXN0IG9mIHVzIHN0aWxsIGdvPyBNeSBmYXRoZXIgaGFzIG15IGJyb3RoZXIgYW5kIHNpc3RlciB3aG8gd2lsbCBiZSBhYmxlIHRvIHN1cHBvcnQgaGltIHdoaWxlIHdlIGFyZSBnb25lLiBJIGFtIGdvaW5nIHRvIGZlZWwgYmFkIGlmIHdlIGdvIHdpdGhvdXQgaGltIGJ1dCBhbHNvIGlmIHdlIGRvbid0IGdvIGF0IGFsbC4gTXkgZ2lybGZyaWVuZCwgaGVyIGRhdWdodGVyLCBhbmQgbXkgbW90aGVyIGFyZSByZWFsbHkgbG9va2luZyBmb3J3YXJkIHRvIHRoZSB0cmlwIGFuZCBzdGlsbCB3YW50IHRvIGdvLiAKQnkgZXhwbG9pdGluZyBoaXMgZm9ybWVyIHRpZXMgdG8gR3JlZW5wZWFjZSwgTW9vcmUgcG9ydHJheXMgaGltc2VsZiBhcyBhIHByb2RpZ2FsIHNvbiB3aG8gaGFzIHNlZW4gdGhlIGVycm9yIG9mIGhpcyB3YXlzLiAKVGhlIGZhdm9yZWQgbWV0aG9kIHJlcXVpcmVzIHRha2luZyB0d28gc2VwYXJhdGUgcGFja2V0cyBvZiBjYXJkcyBmcm9tIHRoZSBtaWRkbGUgb2YgdGhlIGRlY2ssIHB1dHRpbmcgdGhlbSBpbiBhIHBpbGUgdG9nZXRoZXIsIGFuZCBwbGFjaW5nIHRoZSByZXN0IG9mIHRoZSBkZWNrIG9uIHRvcCBvZiB0aGF0IHBpbGUuIApUcmFkaXRpb25hbCBtYWlsIG9yZGVyIGNvbXBhbmllcyBpbnRyb2R1Y2VkIHRoZSBjb25jZXB0IG9mIHNob3BwaW5nIGZyb20gaG9tZSBpbiB5b3VyIHBhamFtYXMsIGFuZCBlIGNvbW1lcmNlIG9mZmVycyB0aGlzIHNhbWUgbHV4dXJ5LiAKQ3JhcHMgaXMgYSBkaWNlIGdhbWUgdGhhdCBhbHNvIGhhcyBhIGxvdyBob3VzZSBlZGdlLCBidXQgb25seSBpZiB5b3UgbWFrZSB0aGUgcmlnaHQgYmV0cy4gClRoaXMgcXVlc3Rpb24gcmVtaW5kcyBtZSBvZiBhIHNjZW5lIGZyb20gdGhlIG9yaWdpbmFsIFN0YXIgVHJlayBlcGlzb2RlIFRoZSBDb3Jib21pdGUgTWFuZXV2ZXIgd2hlcmUgdGhlIEVudGVycHJpc2UgaXMgaG9wZWxlc3NseSBvdXRtYXRjaGVkIGFuZCB0aGUgbG9naWNhbCBTcG9jayBtYWtlcyBhIGNoZXNzIHJlZmVyZW5jZSBpbmRpY2F0aW5nIHRoZXkgaGF2ZSBsb3N0LiBLaXJrIHJlcGxpZXMgdG8gdGhlIGVmZmVjdCB0aGF0IGluc3RlYWQgb2YgcGxheWluZyBjaGVzcyB0aGV5IHNob3VsZCBwbGF5IHBva2VyLCBhbmQgcHJvY2VlZHMgdG8gbWFrZSBhIGJsdWZmIHRoYXQgc3VjY2VlZHMgaW4gZ2V0dGluZyB0aGVtIG91dCBvZiB0aGUgc2l0dWF0aW9uLiAKR2V0IEhvbGQgb2YgYSBGcmVlIFBva2VyIENhbGN1bGF0b3IKWW91IGNhbiBwcmV0dHkgbXVjaCBhbHdheXMgZmluZCBhbiBpbWFnZSB0byBiYWNrIHVwIHlvdXIgYWdlbmRhLkl0IGZyZWFrcyBtZSBvdXQsIGhvbmVzdGx5LiAKVGhlIGZ1bmVyYWwgc2VydmljZSB3aWxsIGJlIGhlbGQgaW4gdGhlIGNoYXBlbCBvbiBXZWRuZXNkYXksIERlY2VtYmVyIDMwLCAyMDA5IGF0IDExOjAwIGFtLiAKIldoZW4geW91J3JlIGFuIGlubmVyIGNpdHkga2lkIGZyb20gQWtyb24sIE9oaW8sIGxpa2UgbXlzZWxmIGFuZCBteSBndXlzIGdyb3dpbmcgdXAsIHlvdSBsb29rIGZvciBhbnl0aGluZyB0aGF0IGNhbiBpbnNwaXJlIHlvdSwiIEphbWVzIHNhaWQuICJZb3UncmUgYWx3YXlzIGp1c3QgdXAgYWdhaW5zdCB0aGUgbnVtYmVycyBvZiBmYWlsaW5nLiBUaGUgcGVyY2VudGFnZXMgb2YgZ3V5cyBsaWtlIG15c2VsZiAgIHNpbmdsZSBwYXJlbnQgaG91c2Vob2xkLCBvbmx5IGNoaWxkLCB1bmRlcnByaXZpbGVnZWQgICAodGhlIGNoYW5jZSBvZikgbWFraW5nIGl0IG91dCBpcyBub3QgaGlnaCBhdCBhbGwuIApQaWNrIGFsbCBjb21wZXRpdGl2ZSBnZWFyL2F6ZXJpdGUgdGhhdCB5b3UgY2FuIGZpdC4gQmUgZ2VudGxlIG9uIHRyaW5rZXRzL3JpbmdzIHRvIHN0YXJ0LiBVc3VhbGx5IHlvdSBrbm93IGlmIGNlcnRhaW4gc3RhdHMgYXJlIG1vc3QgbGlrZWx5IG5vdCBnb29kIGZvciB5b3VyIHNwZWMuIApMZXMgY29va2llcyBkZSBwZXJmb3JtYW5jZSByZWN1ZWlsbGVudCBkZXMgaW5mb3JtYXRpb25zIHN1ciBsJ3V0aWxpc2F0aW9uIGRlIG5vcyBzaXRlcyB3ZWIgYWZpbiBkJ2FtbGlvcmVyIGxldXIgYXR0cmFjdGl2aXQsIGxldXIgY29udGVudSBldCBsZXVyIGZvbmN0aW9ubmFsaXQuIENlcyBjb29raWVzIG5vdXMgYWlkZW50LCBwYXIgZXhlbXBsZSwgIGR0ZXJtaW5lciBxdWVsbGVzIHBhZ2VzIHNlY29uZGFpcmVzIGRlIG5vdHJlIHNpdGUgc29udCB2aXNpdGVzIGV0IHF1ZWwgdHlwZSBkZSBjb250ZW51IGludHJlc3NlIG5vcyB1dGlsaXNhdGV1cnMuIE5vdXMgZW5yZWdpc3Ryb25zIGxlIG5vbWJyZSBkZSB2aXNpdGVzIGVmZmVjdHVlcyBzdXIgY2hhY3VuZSBkZSBub3MgcGFnZXMsIGxlIG5vbWJyZSBkZSBzb3VzIHBhZ2VzIGNvbnN1bHRlcywgbGUgdGVtcHMgcGFzcyBzdXIgbm90cmUgc2l0ZSB3ZWIsIGwnb3JkcmUgZGVzIHBhZ2VzIHZpc2l0ZXMsIGxlcyB0ZXJtZXMgZGUgcmVjaGVyY2hlIHV0aWxpc3MgcG91ciB0cm91dmVyIG5vdHJlIHNpdGUsIGxlIHBheXMsIGxhIHJnaW9uIGV0LCBsZSBjYXMgY2hhbnQsIGxhIHZpbGxlIGRlcHVpcyBsYXF1ZWxsZSBsJ2FjY3MgZXN0IGVmZmVjdHUuIApTaW5jZSB0aGlzIGlzIGEgcG9saWNlIGhlYXJpbmcsIHdoaWNoIHlvdSBjYW4gdGVsbCBieSB0aGUgcG9saWNlIHVuaWZvcm1zIHRoZSAzIGp1ZGdlcyBhcmUgd2VhcmluZywgSSBkb24ndCBrbm93IHdoeSB3ZSBuZWVkIHRoZSBEQSwgYnV0IHdoYXRldmVyLiAKVGhleSBsaWtlIHRvIGtlZXAgdGhlIHJldmVhbHMgY2xvc2UgdG8gYWN0dWFsIHJlbGVhc2UsIGJ1dCBJIGRvdWJ0IHRoZXkgd2lsbCBkbyB0aGF0IHdpdGggYSBicmFuZCBuZXcgSVAuIAoiQmVzdCBXZXN0ZXJuIG1lbWJlcnNoaXAgaXMgYSBncmVhdCBvcHRpb24gZm9yIGhvdGVsIGRldmVsb3BlcnMgaW4gQWZyaWNhLCB3aG8gd2FudCB0byByZXRhaW4gbG9jYWwgY2hhcmFjdGVyIGluIHRoZWlyIHByb3BlcnRpZXMsIHlldCBsZXZlcmFnZSB0aGUgc2FsZXMsIG1hcmtldGluZyBhbmQgYnJhbmQgcmVjb2duaXRpb24gb2YgYSBzdHJvbmcgZ2xvYmFsIGJyYW5kLCIgc2FpZCBTdXppIFlvZGVyLCB2aWNlIHByZXNpZGVudCBvZiBpbnRlcm5hdGlvbmFsIG9wZXJhdGlvbnMuICJXZSBzZWUgZ3JlYXQgcG90ZW50aWFsIGZvciBjb250aW51ZWQgZ3Jvd3RoIGluIFNvdXRoIEFmcmljYSBhbmQgU3ViIFNhaGFyYW4gQWZyaWNhICAgcGFydGljdWxhcmx5IGluIHdlc3QgQWZyaWNhbiBuYXRpb25zIGxpa2UgR2hhbmEsIE5pZ2VyaWEgYW5kIENhbWVyb29uLiIKSXQncyBhIHNoYW1lIHRvbyBiZWNhdXNlIEkgbG92ZWQgdGhlIGxhc3QgUkRSIGFuZCBJJ3ZlIGxvdmVkIGV2ZXJ5IEdUQSBnYW1lIG1hZGUgc28gSSByZWFsbHkgd2FudGVkIHRvIGxpa2UgdGhpcyBvbmUsIEkganVzdCBjb3VsZG4ndC4gCkV2ZW4gT0dFIGFuZCBFZmZlY3QgbG9va2VkIGxpa2UgdGhleSB3ZXJlIHVuZGVycGVyZm9ybWluZy4gCkhpLiBJIGFtIGEgbmF0aXZlIEVuZ2xpc2ggc3BlYWtlciBsaXZpbmcgaW4gYSBub24gbmF0aXZlIEVuZ2xpc2ggc3BlYWtpbmcgY291bnRyeS4gSSBoYXZlIG1hbnkgZnJpZW5kcyBhbmQgc3R1ZGVudHMgZnJvbSBtYW55IGNvdW50cmllcyBhbmQgdGhlaXIgaXMga2luZCBvZiBhbiB1bnNwb2tlbiBldGlxdWV0dGUgYWJvdXQgdGhpcy4gCkFzIHdlIGFsbCBrbm93LCBMYWR5IEdhZ2EgaGFzIGhhZCBsb2FkcyBvZiBzdWNjZXNzIGJ1dCBhcHBhcmVudGx5IHNoZSdzIGJyb2tlISBUaGUgc3RhciBhZG1pdHRlZCB0aGlzIHJlY2VudCBuZXdzIGluIGFuIHVwY29taW5nIGRvY3VtZW50YXJ5IGFib3V0IHRoZSBDRU8gb2YgTGl2ZSBOYXRpb24uIApEdSB0dXN0IHNvIGFsc28gd3JlIGVzIG5pY2h0IGFsbGdlbWVpbiBiZWthbm50LCB1bmQgYXVjaCBkdXJjaCBVbWZyYWdlbiBlcndpZXNlbiwgZGFzcyBkaWUgcnVzc2lzY2hlIEJldmxrZXJ1bmcgc3RhcmsgYmVyd2llZ2VuZCBkaWUgTEdCVCBDb21tdW5pdHkgdW5kIExHQlQgUmVjaHRlIGFibGVobnQgdW5kIGF1Y2ggc3RhYXRsaWNoIGVpbnNjaHJua3QuIEdhbnogenUgc2Nod2VpZ2VuIHZvbiBkZW4gRGluZ2VuLCBkaWUgaW4gVHNjaGV0c2NoZW5pZW4gaW4gQmV6dWcgZGFyYXVmIGFiZ2VoZW4uIAoiSSBoZWxkIHRoZSBsZWFkIGRvd24gdG8gdGhyZWUgaGFuZGVkIGJ1dCB0aGVuIElnb3Qga25vY2tlZCBkb3duIGEgYml0IGJlZm9yZSByZWNvdmVyaW5nIHRoYW5rcyB0byBhIGNvdXBsZSBvZiBrZXkgaGFuZHMsIiBoZSBzYWlkLiAiSXQncyBkZWZpbml0ZWx5IG15YmlnZ2VzdCB3aW4gb2YgbXkgY2FyZWVyLiBJdCdzIHNvbWV0aGluZyBJJ2xsIGFsd2F5cyByZW1lbWJlciBmb3Igc3VyZS4iIFRoZSB3aW4gd2FzICJldmVuIHN3ZWV0ZXIiIGZvciB0aGUgVW5pdmVyc2l0eSBvZiBXb2xsb25nb25nIHN0dWRlbnQgYXMgaGlzIHBhcmVudHMgd2VyZSBpbiB0aGUgaG91c2UgdG8gd2F0Y2ggaGltIHBsYXkgb24gdGhlIGZpbmFsIHRhYmxlLiAKQnV5IGlucyB0byBiaWcgcG9rZXIgdG91cm5hbWVudHMgYXJlIG91dCBvZiB0aGUgbWFqb3JpdHkncyBwcmljZSByYW5nZSwgZXZlbiBhc3N1bWluZyB5b3UgY2FuIHBsYXkgd2l0aCB0aGUgYmlnIHNob3RzLiBTbG90cyBhcmUgdGhlIG1vc3QgZGVtb2NyYXRpYyBvZiBvbmxpbmUgY2FzaW5vIGdhbWVzLCBib3RoIGluIHRlcm1zIG9mIHNraWxsIGFuZCBiYW5rcm9sbC4gSW4gb3JkZXIgdG8gcHJvbG9uZyB0aGUgZnVuIHdpdGhvdXQgcmlza2luZyB0b28gbXVjaCwgYWxtb3N0IGV2ZXJ5IG9ubGluZSBzbG90IHdpbGwgYWxsb3cgdmVyeSBzbWFsbCBtaW5pbXVtIHdhZ2VycyBmb3IgZWFjaCBzcGluLiAKKFByaXZhY3kgUG9saWN5KUNsb3VkZmxhcmVUaGlzIGlzIGEgY2xvdWQgQ0ROIHNlcnZpY2UgdGhhdCB3ZSB1c2UgdG8gZWZmaWNpZW50bHkgZGVsaXZlciBmaWxlcyByZXF1aXJlZCBmb3Igb3VyIHNlcnZpY2UgdG8gb3BlcmF0ZSBzdWNoIGFzIGphdmFzY3JpcHQsIGNhc2NhZGluZyBzdHlsZSBzaGVldHMsIGltYWdlcywgYW5kIHZpZGVvcy4gKFByaXZhY3kgUG9saWN5KUZlYXR1cmVzR29vZ2xlIEN1c3RvbSBTZWFyY2hUaGlzIGlzIGZlYXR1cmUgYWxsb3dzIHlvdSB0byBzZWFyY2ggdGhlIHNpdGUuIApJbiBxdWVzdG8gdmlhZ2dpbyBhZmZhc2NpbmFudGUgZSBjYXJpY28gZGkgZW1vemlvbmUgc2kgZ2l1bmdlIGlycmltZWRpYWJpbG1lbnRlIGFsbGEgc2NvcGVydGEgZGVsIG5vc3RybyBlc3NlcmUgU3VwZXJpb3JlLCBkZWwgRGlvIGludGVybm8sIGNoZSB2aXZlIG5lbGxlIG5vc3RyZSBwcm9mb25kZSBkaW1vcmUgc3Bpcml0dWFsaS4KWW91IHlvdXJzZWxmIHNhaWQgeW91IG1vdmVkIGF3YXkgMjAgeWVhcnMgYWdvLiBQZW9wbGUgbGlrZSB5b3UgYXJlIHRoZSBvbmVzIHRoYXQgYXJlIHN0cml2aW5nIHRvIG1ha2UgbXkgaG9tZXRvd24gc29tZXRoaW5nIHRvIGJlIHByb3VkIG9mLiBJIHNhbHV0ZSB5b3UgYW5kIHlvdXIgZWZmb3J0cy4gCkkgd291bGQgaW1hZ2luZSB0aGUgc291bmRzIGluIHRoYXQgd29vZGxhbmQgZ2xhZGUgICBqdXN0IGEgYnJlZXplIHJ1c3RsaW5nIHRoZSBsZWF2ZXMsIGFuZCBhIGxpdHRsZSBiaXQgb2YgYmlyZCBzb25nLiBJIGNvdWxkIHNtZWxsIHRoZSBjb29sLCBzbGlnaHRseSBtaXN0eSBhaXIgYW5kIHRoZSBkcmllZCBmZXJucyBpbiB0aGUgZm9yZWdyb3VuZC4gSWYgdGhpbmdzIHdlcmUgcmVhbGx5IG5hc3R5LCBJIHdvdWxkIHZpc3VhbGlzZSBhIGZvdXIgcG9zdGVyIGJlZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBnbGFkZSwgbG90cyBvZiBjb29sLCBjbGVhbiwgY3Jpc3AsIHdoaXRlIHNoZWV0cywgYW5kIHRoZSBicmVlemUgYmxvd2luZyB0aGUgZHJhcGVzIGFib3V0ICAgd2hhdCBsb3ZlbHkgcGxhY2UgdG8gd2FrZSB1cC4KSW4gYWRkaXRpb24sIHdoYXRldmVyIHlvdXIgZmFpdGggb3IgYmVsaWVmcyBhcmUsIEkgYW0gc3VyZSB5b3VyIG1vdGhlciBpcyBsb29raW5nIGRvd24gb24geW91L3dvdWxkIGJlIGV4dHJlbWVseSBwcm91ZCBvZiB3aGVyZSB5b3UgYXJlIGFuZCBob3cgZmFyIHlvdSBoYXZlIGNvbWUsIGFuZCBJIHdvdWxkIGV2ZW4gZ28gc28gZmFyIGFzIHRvIHNheSB0aGF0IHRoZSBiZXN0IHRyaWJ1dGUgeW91IGNhbiBnaXZlIGhlciBpcyBrZWVwIGRyYXdpbmcuIApUaGUgMjMgcGFnZSBvcGluaW9uIGludGVycHJldHMgdGhlIGZlZGVyYWwgV2lyZSBBY3QsIHdoaWNoIHByb2hpYml0cyBpbnRlcnN0YXRlIHdhZ2VyaW5nLCB0byBhcHBseSB0byBhbnkgZm9ybSBvZiBnYW1ibGluZyB0aGF0IGNyb3NzZXMgc3RhdGUgbGluZXMsIG5vdCBqdXN0IHNwb3J0cyBiZXR0aW5nLiBUaGUgb3BpbmlvbiBtYXJrcyBhIHJldmVyc2FsIGZvciB0aGUgZGVwYXJ0bWVudCwgd2hpY2ggdW5kZXIgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIGluIDIwMTEgc2FpZCBvbmxpbmUgZ2FtYmxpbmcgd2l0aGluIHN0YXRlcyB0aGF0IGRvZXMgbm90IGludm9sdmUgc3BvcnRpbmcgZXZlbnRzIHdvdWxkIG5vdCB2aW9sYXRlIHRoZSBmZWRlcmFsIGxhdy4uIApPbmUgb2YgdGhlIHBpZWNlcywgd2hpY2ggaXMgYSB2ZXJ5IGZhbW91cyBwaWVjZSBpbmRlZWQgaWYgSSd2ZSBoZWFyZCBpdCwgYnV0IEkgZG9uJ3QgcmVtZW1iZXIgdGhlIG5hbWUgb2YgaXQuCkFsd2F5cyB2YWxldCBwYXJrIGFuZCBrZWVwIGFuIGV5ZSBvdXQgd2hlbiBsZWF2aW5nIHRvIG1ha2Ugc3VyZSB5b3UgZG9uIGhhdmUgYSB0YWlsLiBJZiB5b3UgZG8sIGhlYWQgZm9yIGEgcG9saWNlIHN0YXRpb24gb3IgdGhlIG5lYXJlc3QgaGlnaGx5IHBvcHVsYXRlZCBwbGFjZS4gCklmIHlvdSd2ZSBnb3QgYSBmZXcgbWlsbGlvbiBkb2xsYXJzIGxheWluZyBhcm91bmQsIGl0J3Mgbm90IHRvbyBsYXRlIHRvIGJ1eSBhaXJ0aW1lIGZvciBhIFN1cGVyIEJvd2wgYWQuIENCUyBzYXlzIGl0IGFscmVhZHkgc29sZCBhYm91dCA5MCBwZXJjZW50IG9mIHRoZSBpbiBnYW1lIGludmVudG9yeSwgYXMgQW50aG9ueSBDcnVwaSB3cml0ZXMuIEJ1dCBpdCdzIHN0aWxsIGdvdCBzb21lIHNsb3RzIGxlZnQgZm9yIHRoZSBGZWIuIDMgZ2FtZSwgbW9zdGx5IGluIHRoZSBmb3VydGggcXVhcnRlci4gU28gaG93IG11Y2ggd2lsbCB0aGlzIGNvc3QgeW91LCBleGFjdGx5PyBCdXllcnMgc2F5ICJDQlMgaXMgdGFraW5nIGluIGJldHdlZW4gJDUuMSBtaWxsaW9uIGFuZCAkNS4zIG1pbGxpb24gcGVyIDMwIHNlY29uZHMgb2YgY29tbWVyY2lhbCB0aW1lIGluIFN1cGVyIEJvd2wgTElJSSwiIENydXBpIHdyaXRlcy4KVGhlIHR3byB3ZXJlIHBva2luZyBhcm91bmQgbmVhciB0aGUgc3RyZWFtIGluIEVyaWMncyBiYWNreWFyZCB3aGVuIHRoZXkgImdvdCBib3JlZCBhbmQgZGVjaWRlZCB0byBidWlsZCBhIGRhbS4iIFRoZSBib3lzIHNwb3R0ZWQgdGhlIGJvbmUgYW5kIHRvb2sgaXQgaG9tZS4gCkJhY2sgb24gdG9waWMgbm93LCBpdCB3b3VsZCBiZSBhIHNoYW1lIHRvIGxvc2Ugb3V0IG9uIHRoZSBzZXBlcmF0ZSB0ZWFtcyBhbmQgZW5kIHVwIHdpdGggYSBHQiB0ZWFtLiBJIGhvcGUgdGhleSBmaW5kIGEgc29sdXRpb24gdG8gdGhlIGZpbmFuY2lhbCBpc3N1ZXMgd2l0aG91dCBzYWNyaWZpY2luZyB0b28gbXVjaC4KVGhpcyBjcnVpc2Ugc2hpcCBpcyBqdXN0IG9uZSBtYXNzaXZlIHNleCBwYXJ0eQpJdCB3YXMgZXF1YWxseSB0aHJpbGxpbmcgdG8gc2VlIHdpbmVtYWtlciBHZW5ldmlldmUgSmFuc3NlbnMgaW4gdGhlIGNpdHkuIFRoZSBsb25ndGltZSBSb2JlcnQgTW9uZGF2aSBlbXBsb3llZSwgaW5leHBsaWNhYmx5IGF0dGVuZGluZyBoZXIgZmlyc3QgVmFuY291dmVyIEludGVybmF0aW9uYWwgV2luZSBGZXN0aXZhbCwgc2VlbWVkIHRoZSByaWdodCBwZXJzb24gdG8gY2xvc2UgdGhlIGZvdXIgZGVjYWRlIGZlc3RpdmFsIGxvb3Agc3RhcnRlZCBieSB0aGUgUm9iZXJ0IE1vbmRhdmkgZmFtaWx5IGluIDE5NzkuIEt1ZG9zIHRvIHRoZSBSb2JlcnQgTW9uZGF2aSBDYWJlcm5ldCBTYXV2aWdub24gMjAxNSAoTmFwYSBWYWxsZXksIENhbGlmb3JuaWEsIFVuaXRlZCBTdGF0ZXMgJDQ1Ljk5KS4KVGF4ZXMgYW5kIGZlZXMgdGhhdCBhcmUgc2hvd24gYXJlIGVzdGltYXRlcyBvbmx5LiBQbGVhc2Ugc2VlIG91ciBwYXJ0bmVycyBmb3IgbW9yZSBkZXRhaWxzLlplbldlIGFyZSBhIGx1eHVyeSBQaHVrZXQgcHJpdmF0ZSBiZWFjaCByZXNvcnQuIApPdXIgTWFsZSBVcm9sb2d5IE1pc3Npb24gaXMgWW91ClRoaW5ncyBnZXQgZnJpc2t5IHdoZW4gdGhlIHN0dWR5IGxvb2tzIGF0IHdoZXRoZXIgInBvcm4gbWFrZXMgeW91IGJpLiIgUmVzZWFyY2hlcnMgYXQgeEhhbXN0ZXIgZmluZCB0aGF0IDEzLjA5IHBlcmNlbnQgb2YgcGVvcGxlIHdobyB3YXRjaCBwb3JuIG9uY2UgYSB3ZWVrIGFyZSBiaXNleHVhbC4gVGhvc2Ugd2hvIHdhdGNoIHNraW4gZmxpY2tzIGEgZmV3IHRpbWVzIGEgd2VlayBoYXZlIGEgMTkuNzMgcGVyY2VudCBjaGFuY2Ugb2YgYmVpbmcgYmkuIFdhdGNoIG9uY2UgYSBkYXkgYW5kIHlvdSBhcmUgaW4gdGhlIDIzLjAxIHBlcmNlbnQgZ3JvdXAgb2YgYmlzZXh1YWxzLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSBjdXJpb3VzIHdoYXQgeW91IHRoaW5rIGFuIGlkZWFsIHRlYW0gZm9yIGhpZWkgd291bGQgYmUgZm9yIGhpZ2hlciBlbmQgY29udGVudD8gWW91IG1lbnRpb25lZCBrdXJveXVyaSBzeXN0ZW0sIGJ1dCBJIHVuc3VyZSBpZiB0aGF0IGlzIG5lZWRlZCBzaW5jZSBpdCBkb2VzbiBoYXZlIGEgSFAgYm9vc3Qgd2l0aG91dCBhIFJDViBib29zdCwgc28gcmVjb3ZlcmluZyBuYXR1cmFsbHkgYXVnaHQgdG8gYmUgZG9hYmxlIGluIG15IG1pbmQudGhpbmtpbmcgdmVyb2FoIChiYXNlIGZvcm0pIHdvdWxkIGJlIGEgZ29vZCBzdWIuIApCeSBwcm9kdWN0cyBhcmVuIG5lY2Vzc2FyaWx5IGJhZCwgZWl0aGVyLCBidXQganVzdCBtYWtlIHN1cmUgdGhlcmUgaXNuIGFuIG92ZXJhYnVuZGFuY2Ugb2YgdGhlbS4gCjEgYnV5IGluIGJhY2sgKE5vIHJlIGVudHJpZXMsIG5vIHJlYnV5cyBvciBhZGQgb25zKS4gClBsYXF1ZXMgYW5kIHByaXplcyB3aWxsIGJlIGF3YXJkZWQgdGhlIG5leHQgZGF5LiBUaGVyZSB3aWxsIGJlIGEgcGxhcXVlIGRpc3BsYXllZCBhdCBCdWZmYWxvIFdpbGQgV2luZ3MgbmFtaW5ndGhlIHdpbm5pbmcgdGVhbSBmb3IgYnJhZ2dpbmcgcmlnaHRzLi4gCkFmdGVyIFRoZSBCcmFkeSBCdW5jaCwgdGhlIGFjdHJlc3Mgc3RydWdnbGVkIHdpdGggYWRkaWN0aW9uIGZvciB5ZWFycy4gClBlcnNvbmFsbHkgSSB3aWxsIGxlYXJuIGFzIG11Y2ggYXMgSSBjYW4gYW5kIGhhdmUgYXMgbWFueSBleHBlcmllbmNlcyBhbmQgaW50ZXJhY3Rpb25zIHdpdGggb3RoZXJzIGluIHdoYXQgdGltZSBJIGhhdmUgbGVmdC4gRGVhdGggaXMgdW5hdm9pZGFibGUsIGJ1dCBJIGhvcGUgSSBjYW4gc2F5IEkgcGxheWVkIHRoZSBiZXN0IEkgY291bGQgd2l0aCB0aGUgaGFuZCBJIHdhcyBkZWFsdCB3aGVuIHRoZSBzdHJhbmdlciBjb21lcyB0byB0YWtlIG1lLi4gClRoZSBidWcgaXMgaGVsbGEgbGFtZSwgYnV0IHRvIHNheSBpdHMgZ2FtZSBicmVha2luZyBpcyBoeXBlcmJvbGUuClRoZSBiaWcgbmV3cyB3YXMgdGhhdCBOYXdheiBTaGFyaWYgZGlkIG5vdCBkZWxpdmVyIGhpcyBleHBlY3RlZCBzcGVlY2guIEJ1dCB0aGVuIHRoZXJlIHdhcyBub3RoaW5nIHRvIHNheSBhcyB0aGluZ3Mga2VwdCBnb2luZyBmcm9tIGJhZCB0byB3b3JzZS4gCkkgZG8gdW5kZXJzdGFuZCAgIEkgaGFkIHRvIHN0cmVldCBwYXJrIGZvciAxMC8xMSB5ZWFycyBJIGxpdmVkIGhlcmUuIApObyBraWRkaW5nLCBpZiB5b3UgaGF2ZSBzZWVuIHRoZSB3ZWRkaW5nIGNha2UgZXBpc29kZSB5b3Uga25vdyB3aGF0IGRyYW1hIFdhbGxuZXIncyB0YWxraW5nIGFib3V0LgpEb2VzIHRoaXMgc291bmQgdG9vIGFjYWRlbWljPyBUaGUgUGVyZmVjdCBOYW5ueSBpcyBkaXNzYXRpc2Z5aW5nLCBkZWxpYmVyYXRlbHksIGJ1dCBpdCBpcyBub3Qgd2l0aG91dCBzaW1wbGUgcGxlYXN1cmVzLiBTbGltYW5pIGlzIHZlcnkgZ29vZCBhdCBtYWtpbmcgeW91IGZlZWwgdmVyeSBiYWQuIApUaGVzZSBjbGluaWNhbCBzaWducyB1c3VhbGx5IGxlYWQgeW91ciB2ZXQgdG8gcGVyZm9ybSBhIHNwZWNpYWwgYmxvb2QgdGVzdCB0byBjaGVjayB0aGUgbGV2ZWxzIG9mIHlvdXIgY2F0J3MgdGh5cm9pZCBob3Jtb25lLiAKRGF5IHdhcyBvdXIgImJlYWNoIGRheSIuIFdlIGhlYWRlZCBvdXQgb2YgdG93biBhbmQgcGlja2VkIHVwIHR3byBoaXRjaGhpa2VycyAoYmFja3BhY2tlcnMpIHdobyBuZWVkZWQgdG8gZ28gdG8gdGhlIGJlYWNoIHRvby4gCkkgdHJ5IGxvb2tpbmcgZm9yIGxhbmd1YWdlIGV4Y2hhbmdlIG1lZXR1cHMgaW4geW91ciBhcmVhLiBJZiB5b3UgY2FuIHdvcmsgeW91ciB3YXkgYXJvdW5kIHRob3NlIHlvdSBzaG91bGQgYmUgZ29vZCB0byBnbywgc2luY2UgdGhlIGxpc3RlbmluZyBpcyBwcmV0dHkgc2ltaWxhciB0byB0aG9zZSBnZW5raSBDRHMuClRoZXkgaW5zaXN0IG9uIHdhbGtpbmcgeW91IGhvbWUgZXZlbiB3aGVuIHlvdSBzYXkgbm8sIHlvdSBmaW5lLiAKS2FuaW5lbmxvdmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpBIGNsYXNzaWMgRHIuIFdpbGwgZmFuLCBzaGUgc2F5cy4gSSBsb3ZlIERhbiBHaGVlc2xpbmcgYW5kIEV2ZWwgRGljayAoRG9uYXRvKSB0b28uIApDb21tZSBqZSB2aWVucyBkZSBsJ2luZGlxdWVyLCBqZSByZXZpZW5zIGRlIHZveWFnZSBlbiBUdXJxdWllLiBKZSBuZSBtJ2F0dGFyZGVyYWkgcGFzIHN1ciBsZSBjdCB0b3VyaXN0aXF1ZSBkdSBwYXlzLCBuaSBtbWUgc3VyIGxlcyBkaWZmcmVuY2VzIGN1bHR1cmVsbGVzLCBldGMuIEQnYWlsbGV1cnMsIGxlIGJ1dCBkZSBjZXR0ZSBub3RlIG4nZXN0IG1tZSBwYXMgZGUgZmFpcmUgcGFydGFnZXIgdW4gcXVlbGNvbnF1ZSBhdmlzIHN1ciBsYSBxdWVzdGlvbiBkZSBsJ2VudHJlIGRlIGxhIFR1cnF1aWUgZGFucyBsJ1VuaW9uIEV1cm9wZW5uZS4uIApTb2NpYWwgY29zdCBvZiBzaWNrbmVzcyBpcyBpbmNhbGN1bGFibGUuIFRoZSBwcmV2ZW50aW9uIG9mIGRpc2Vhc2UgaXMgZm9yIHRoZSBtb3N0IHBhcnQgYSBtYXR0ZXIgb2YgZWR1Y2F0aW9uLCB0aGUgY29zdCBpcyBtb2RlcmF0ZSwgdGhlIHJlc3VsdHMgY2VydGFpbiBhbmQgZWFzaWx5IGRlbW9uc3RyYXRlZC4gcGh5c2ljaWFuICgxODc0IDE5NTcpCihteSBjaGFyYWN0ZXIpIEFsbHksIHRoZXJlIGEgc3VnZ2VzdGlvbiBvZiBpdCBhcyB3ZWxsLCB3aGVuIHNoZSB3YWxrcyB1cCB0aGUgc3RhaXJzIGFuZCBzYXlzIHRvIGhlciBmYXRoZXIsIGtub3cgYWxsIGFib3V0IGRydWdzIHNoZSBzaGFyZWQuIApKRiBQdGFrIFNjaWVuY2UgQm9va3MgUG9zdCAyNzIzCldoaWxlIGxvY2F0ZWQgaW4gdGhlIGRvd250b3duIGFyZWEsIEJhbmdrb2sgQ296eSBpcyBhIGJpdCBvZiBhIHRyZWsgdG8gZ2V0IHRvLiBJdCBvbiBQZXRjaGFidXJpIFJvYWQsIG9uZSBvZiB0aGUgY2l0eSBtYWluIHRob3JvdWdoZmFyZXMsIGJ1dCBpcyBub3QgbmVhciBhbnkgcHVibGljIHRyYW5zcG9ydCBzdG9wcy4gWW91IGNlcnRhaW5seSBjYW4gd2FsayB0aGVyZS4gCiJJIGFtIHN0aWxsIHdvcnJpZWQgdGhhdCB0aGV5IGhhdmUgYSBiaWcgcmVzb3J0IGRldmVsb3BtZW50IGluIHRoZSBiYWNrIG9mIHRoZWlyIG1pbmRzLiJTb21lb25lIGluIHRoZSBtZWV0aW5nIGFza2VkIHdoeSB0aGUgUGFpdXRlcyBkb24gY29tZSBiYWNrIHRvIHRoZSB0b3duIHdpdGggYSBtb3JlIGRpc3RpbmN0IHBsYW4gYmVjYXVzZSB0aGUgdG93biB3b3VsZCBiZSB3aWxsaW5nIHRvIGxpc3RlbiwgYnV0IHRoZXkgc2FpZCBuby4gV2hlbiBpdCBhbGwgYm9pbHMgZG93biB0byBpdCwgdGhleSBkb24gd2FudCB0byBoYXZlIHRvIHBheSB0YXhlcywgQ2x1ZmYgc2FpZC5BbWVyaWNhbnMgd2VyZSBuZXZlciBzdXBwb3NlZCB0byBwYXkgZm9yIHByb3BlcnR5IHRheGVzLCBSb2JiIHNhaWQuIFRoZSAkMTAsMDAwIGl0IHdvdWxkIGNvc3QgYSB5ZWFyIHdvdWxkIGJlIGEgYnVyZGVuIG9uIHRoZSBQYWl1dGUgdHJpYmUuIApIYXN0YSBlbCBkYSBkZSBob3kgbGUgYWdyYWRlemNvIGEgcXVpZW5lcyBlc2NyaWJlbiBkZSBtYW5lcmEgY29ycmVjdGEgcG9ycXVlIGFwcmVuZGVzIHNpbiBmb3J6YXIgYSBhbGd1aWVuIHkgZXMgbXMgcHJvYmFibGUgcXVlIHJlY3VlcmRlcyBlc2EgcGFsYWJyYSBwb3IgbGVlciBhbGdvIHF1ZSB0ZSBndXN0YS4KQXMgc29tZW9uZSB3aG8gc2xvd2x5IG92ZXIgdGhlIHNlYXNvbnMgY2xpbWJlZCBmcm9tIHNpbHZlciB0byBtYXN0ZXJzIGluIHNvbG8gcXVldWUgcGxheWluZyA5MCUgc3VwcG9ydCwgSSB0aGluayBtYW55IGhlYWxlciBtYWlucyBzdGFnbmF0ZSBiZWNhdXNlIHRoZXkgdGhpbmsgb2YgdGhlbXNlbHZlcyBhcyBnb29kIHBsYXllcnMganVzdCBieSB2aXJ0dWUgb2YgcGxheWluZyBhIGxlc3Mgd2FudGVkIHJvbGUuIEkgdGVsbCB5b3Ugc3RyYWlnaHQgdXAsIHRoZXJlIHZlcnkgbXVjaCBhcmUgYmFkIG1lcmNpZXMsIGFuZCB5b3UgaGF2ZSBhIGxvdCBtb3JlIGltcGFjdCBvbiB5b3VyIG93biBzdXJ2aXZhbCB0aGFuIHlvdSB0aGluay4KU2VlbiB0b2RheSwgQXByaWwgMiAyMDE4IGF0IHRoZSBwb3B1bGFyIGNyb3Nzd29yZCBwdXp6bGUsIE5ldyBZb3JrIFRpbWVzLiAKSGUgd2lsbCBiZSByZW1lbWJlcmVkIGJ5IGFsbCBhcyBhIGdyZWF0IGZyaWVuZCwgYSBsb3ZpbmcgYW5kIGNhcmluZyBodXNiYW5kLCBmYXRoZXIgYW5kIGdyYW5kZmF0aGVyLiAKSXQgYSBzY2FyeSwgdG91Z2ggcGxhY2UgICBldmVuIG9uIGdvb2QgZGF5cy4gCkJ1dCB3ZSBhbGwgb3V0IHRoZXJlLCB3ZWFyaW5nIGFic3VyZGx5IGJyaWdodCBjb2xvcnMgYW5kIGNoZWVyaW5nIGVhY2ggb3RoZXIgb24gYW5kIGxlYXJuaW5nIGZyb20gZWFjaCBvdGhlci4gTmV2ZXIgdGhvdWdodCBJIGxvb2sgZ29vZCBpbiBicmlnaHQgeWVsbG93IHN5bnRoZXRpYyBmYWJyaWNzLCBidXQsIGhleSwgdGhhdCBsaWZlLi4gCklmIHlvdSd2ZSBnb3R0ZW4geW91ciBwb3NpdGl2ZSBmZWVkYmFjaywgYW5kIGFyZSBjb25maWRlbnQgYWJvdXQgcHJvY2VlZGluZywgbHViZSB1cCBhIGZpbmdlciBhbmQgc2xpZGUgaXQgZG93biBpbnRvIHRoZSBjcmFjayBvZiBoZXIgYnV0dCBhbmQgb3ZlciBoZXIgYW51cyAodGhpcyBhc3N1bWVzIHNoZSdzIHB1bGxpbmcgaGVyIGxlZ3MgYmFjayBmb3IgZWFzeSBhY2Nlc3MpLiBEb24ndCBsZXQgaXQgbGluZ2VyIHRoZXJlLiBKdXN0IHJ1biBpdCByaWdodCBvdmVyIHRoZSBhbnVzIHNsb3dseSBhbmQgc2VlIGhvdyBzaGUgcmVzcG9uZHMuIApSZW1lbWJlciBUSElTIGlmIGFueXRoaW5nLCB1bnByZWRpY3RhYmlsaXR5ID0gcG9rZXIgcHJvZml0cyBhbmQgcG9rZXIgY2FsY3VsYXRvcnMgYXJlIE5PVCB1bnByZWRpY3RhYmxlLi4gClBvdCBwcm9kdWNlcnMgZmFjZSBwdXNoYmFjayBvdmVyIG9kb3VyClVzZSB5b3VyIGNyZXcgdG8gcHJldmVudCByZXBhaXJzIGFuZCBwaWNrIHRoZW0gb2ZmIGFzIHRoZXkgcnVuIGZvciB0aGUgbWVkYmF5IGJ1dCBnZXQgc3R1Y2sgYXQgdGhlIGhhY2tlZCBkb29ycy4gS25vY2sgZG93biB0aGUgZG9vciB0byB0aGUgbWlzc2lsZSByb29tLiAKVGhlIFVuaXRlZCBTdGF0ZXMsIiB3aGljaCBzZWVrcyB0byBvdmVydHVybiBFcHN0ZWluJ3MgcGxlYSBhZ3JlZW1lbnQgb24gdGhlIGdyb3VuZHMgdGhhdCBpdCB3YXMgZXhlY3V0ZWQgaW4gdmlvbGF0aW9uIG9mIHRoZSBmZWRlcmFsIENyaW1lIFZpY3RpbXMnIFJpZ2h0cyBBY3QuIApNanBpc3QgIDE2IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KTm93IGZvciBjYXNpbm9zIHRoYXQgYXJlIG9uIHRoZSBBdGxhbnRpYyBDaXR5IHNpZGUgb2YgdGhlIGVxdWF0aW9uLCBUaGUgVGFqIE1haGFsIGhhcyB0aGUgYmVzdCBwb2tlciByb29tIGF2YWlsYWJsZSB3aXRoIHdlbGwgb3ZlciA4MCBkaWZmZXJlbnQgdGFibGVzLiBUaGVyZSBpcyBhIHdpZGUgc2VsZWN0aW9uIGFuZCB2YXJpZXR5IG9mIGdhbWVzIGFzIHdlbGwgYXMgZ3JlYXQgcGVvcGxlIGFuZCBhIGdvb2QgYXRtb3NwaGVyZS4gVGhlIFRyb3BpY2FuYSBpcyBhbHNvIGEgZ3JlYXQgcGxhY2UgdG8gZ28gZm9yIHBva2VyIGdhbWVzLiBUaGV5IGhhdmUgNDMgdGFibGVzIGF2YWlsYWJsZSB3aXRoIGRpZmZlcmVudCBnYW1lcywgZ3JlYXQgcGVvcGxlIGFuZCBkZWFsZXJzIGFzIHdlbGwgYXMgZ3JlYXQgYXRtb3NwaGVyZSB0byBib290LiBUaGUgQm9yZ2F0YSBpcyBhbHNvIGEgZ3JlYXQgcG9rZXIgcm9vbSBhcyB3ZWxsIHdpdGggODUgdGFibGVzIGFuZCBhIExhcyBWZWdhcyBmZWVsLgoiVGhlcmUgaXMgbm90aGluZyBJIGRpZCB0aGF0IEkgd2lzaCBJIGhhZG4ndCBkb25lLCIgaGUgaW5zaXN0cy4KQWZ0ZXIgdGhlIGZsb3AgeW91ciBzdHJhdGVneSB3aWxsIGJlIHRvIGVsaW1pbmF0ZSBhbnlvbmUgdGhhdCBjb3VsZCBnZXQgYSBzdHJhaWdodCBvciBhIGZsdXNoLiBTbyBJIHdvdWxkIGJlZ2luIHRvIHJhaXNlIGFnZ3Jlc3NpdmVseSwgaWYgeW91J3JlIGx1Y2t5IHlvdSdsbCB0cmljayBvbmUgcGxheWVyIGludG8gYmVsaWV2aW5nIHRoYXQgeW91J3JlIGJsdWZmaW5nLgpEZWVib2RlZXpvICA0IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KWW91IGhhdmUgNDIgcG9pbnRzLiAKQSBzZWN0aW9uIG9mIFRoZSBHcmVhdCBCcml0aXNoIEJha2UgT2ZmIHdhcyBmaWxtZWQgaW4gdGhlIFdoZWF0bGV5cyBob21lIGluIEVzc2V4LgpUaGUgZG93bnNpZGUgaXMgdGhhdCB0aGUgdGltZWxpbmUgaXRzZWxmIGlzIHNlcGFyYXRlIGZyb20gdGhlIGNhbGVuZGFyIGdlbmVyYXRvci4gCkZlcmd1c29uJ3MgZmF0aGVyLCBVQ0xBIE1hdGhlbWF0aWNzIFByb2Zlc3NvciBFbWVyaXR1cyBUaG9tYXMgRmVyZ3Vzb24sIHJlY2FsbHMgc29jaWFsaXppbmcgd2l0aCBVQ0xBJ3Mgd2VsbCBrbm93biBnYW1lIHRoZW9yaXN0IExsb3lkIFNoYXBlbHkuICJIZSBoYWQgdHdvIHNvbnMgYWJvdXQgdGhlIHNhbWUgYWdlIGFzIG15IHR3byBzb25zLCBhbmQgdGhleSBwbGF5ZWQgYSBsb3QsIGluY2x1ZGluZyBnYW1lcyB0aGF0IExsb3lkIGludmVudGVkLCIgdGhlIGVsZGVyIEZlcmd1c29uIHJlbWVtYmVycywgbm90aW5nIHRoYXQgdGhlIGdhbWVzIHByb2JhYmx5IGJ1b3llZCBhbmQgc3B1cnJlZCBvbiBDaHJpcycgaW50ZXJlc3QgaW4gZ2FtZSB0aGVvcnkuIApFcyBnaWJ0IG5lYmVuIGRlbiBsZWNrZXJlbiBHZXJpY2h0ZW4gKG5hdHJsaWNoKSBmcmlzY2hlIFNmdGUsIEthZmZlZSB1bmQgZWluaWdlcyBtZWhyLiAKUGxheSBjb250aW51ZXMgdG8gdGhlIGxlZnQgd2l0aCBlaXRoZXIgY2FsbHMgKHRvIGVxdWFsIHRoZSBwcmV2aW91cyBvcHBvbmVudCdzIGJldCksIHJhaXNlcyAodG8gYmV0IGhpZ2hlciB0aGFuIHRoZSBwcmV2aW91cyBvcHBvbmVudCksIG9yIGZvbGRzICh0byByZXNpZ24pLiAKV2UgaGFkIGEgdmVyeSBleHBlcmllbmNlZCBmcmllbmQgb2YgdGhlIGZhbWlseSBhc3Npc3QgdXMgd2l0aCBwbGFubmluZyBvdXIgd2VkZGluZyAgIHNoZSdzIGJlZW4gaW4gdGhlIGluZHVzdHJ5IGZvciBhIGxvbmcgdGltZS4gU2hlIHJhbiB3aXRoIHVzIGV4YWN0bHkgbGlrZSBzaGUgd291bGQgaGF2ZSBhIG5vcm1hbCBjbGllbnQsIGJ1dCBpdCB3YXMgdGhlIHBsYW5uaW5nIGFuZCB2aXNpb24gY2FzdGluZyBzZXJ2aWNlcyBzaGUgb2ZmZXJlZCwgYXMgd2VsbCBhcyBpbmR1c3RyeSBpbnNpZ2h0IGFuZCBleHBlcnRpc2UsIG5vdCBhIHBlcnNvbmFsIHdlZGRpbmcgYXNzaXN0YW50LiBJIGNhbGxlZCBhbGwgdGhlIHZlbmRvcnMsIEkgbWFkZSB0aGUgdGltZWxpbmVzLCBJIHNjaGVkdWxlZCBtZWV0aW5ncywgSSBzZXQgb3VyIGJ1ZGdldCwgSSBzY2hlZHVsZWQgbGFib3IsIEkgbWFuYWdlZCBjb250cmFjdHMuIFRIRU4gZGF5IG9mLCBzaGUgcmFuIHBvaW50IHdpdGggbXkgbm90ZXMgYW5kIHdvcmsuIFNoZSB3YXMgYWJzb2x1dGVseSBpbnZhbHVhYmxlLCBidXQgdGhlIG9ubHkgd29yayBhaGVhZCBvZiB0aW1lIHdhcyBzaW1pbGFyIHRvIHlvdXIgY3VycmVudCBzZXQgdXAuCkthdHptYXJ6eWsgaXMgcmVmZXJyaW5nIHRvIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gb2ZmaWNpYWwgZXhlcmNpc2UgYWN0aXZpdHksIHN1Y2ggYXMgcnVubmluZywgYmlraW5nLCBvciBsaWZ0aW5nIHdlaWdodHMsIGFuZCBzbyBjYWxsZWQgbm9uZXhlcmNpc2UgYWN0aXZpdHksIGxpa2Ugd2Fsa2luZyB0byB5b3VyIGNhciwgbW93aW5nIHRoZSBsYXduLCBvciBzaW1wbHkgc3RhbmRpbmcuClN0YXJ0IHJlYWRpbmcgYm9va3Mgb24gZ2FtYmxpbmcgdGhlb3J5IGFuZCBzdHJhdGVneSB0byBicnVzaCB1cCBvbiB5b3VyIHVuZGVyc3RhbmRpbmcgb2YgaG93IGdhbWVzIGFyZSB3b24uCk5vdCBteSBleHBlcmllbmNlLiBCb3RoIHVzZWQgY2FyIHNob3BzIGFuZCBhdXRvIHBhcnRzIHN0b3JlcyBvZnRlbiBoYXZlIGFuIGF0dGFjaGVkIHdvcmtzaG9wIHdpdGggYSBtYXN0ZXIgbWVjaGFuaWMgKGxpdGVyYWxseSB0aGUgc2FtZSBzeXN0ZW0gdGhhdCB5b3UgZmluZCBpbiB2aWRlbyBnYW1lcyBqdXN0IGluIHRoZSBtb2Rlcm4gd29ybGQgd2hlcmUgeW91IGNhbiBhbHNvIGJlIGEgbWFzdGVyIG1lY2hhbmljIG9yIGEgbWFzdGVyIGVsZWN0cmljaWFuIGp1c3QgbGlrZSBhIG1hc3RlciBibGFja3NtaXRoIG9yIG1hc3RlciBjYXJwZW50ZXIpLiBTbyBmaXhpbmcgeW91ciBjYXIgb3IgcnVubmluZyBzb21lIHRlc3RzIGlzIHByZXR0eSBub3JtYWwuIEkganVzdCB3YW50IHRvIHNhdmUgdGhlIG1vbmV5IGFuZCB0cnkgbXkgbHVjayBoZXJlIGhvcGluZyBmb3Igc29tZSB0aGluZ3MgSSBjb3VsZCBkbyBiZWZvcmUgSSBsZXQgbXkgY2FyIHNpdCBhdCB0aGUgYXV0byBwYXJ0cyBzdG9yZSBmb3IgYSBkYXkgYW5kIHByb2JhYmx5IHBheSBnb29kIG1vbmV5IGZvciBpdC4KU2hlIG1heSBiZSBhbGxvd2VkIHRvIG1vdmUgYnV0IHRoZXJlIG1pZ2h0IGJlIGNvbmRpdGlvbnMgYXR0YWNoZWQgYW5kL29yIHNoZSBtYXkgaGF2ZSB0byBsZWF2ZSB0aGUgY2hpbGQgd2l0aCB5b3UuCkluIGdlbmVyYWwgdGhleSBhcmUgYWxsb3dlZCB0byBkZXRhaW4gYW5kIHNlYXJjaCB0aG9zZSBzdXNwZWN0ZWQgb2Ygc2hvcGxpZnRpbmcuIEhvd2V2ZXIsIHRoZXJlIGlzIGFsd2F5cyB0aGUgcmlzayBvZiBiZWluZyBzdWVkIHNvIGNvcnBvcmF0aW9ucyBnZW5lcmFsbHkgZG9uJ3QgYWxsb3cgZW1wbG95ZWVzIHRvIGRldGFpbiB1bmxlc3MgbWVldGluZywgbGlrZSB5b3Ugc2FpZCwgcmlkaWN1bG91cyBzdGFuZGFyZHMuIEkgd29ya2VkIGF0IGEgdGFyZ2V0IGluIHVuZGVyZ3JhZCBhbmQgdGhleSB3b3VsZCBvbmx5IGRldGFpbiBwZW9wbGUgd2hvIHdlcmUgaGFiaXR1YWwgc2hvcGxpZnRlcnMgd2hvIHRoZXkgaGFkIGJlZW4gbW9uaXRvcmluZyBhbmQgZmlsbWluZyBmb3IgYSB3aGlsZS4gCkEgYmlkZGluZyBwcm9jZXNzIGlzIG9ubHkgY3JlZGlibGUgaWYgZXZlcnlvbmUgaXMgYmlkZGluZyBvbiBleGFjdGx5IHRoZSBzYW1lIGRldGFpbHMgYW5kIHNwZWNpZmljYXRpb25zLiBUbyBhY2hpZXZlIHRoaXMgc3RhbmRhcmQsIGFuIGluZGVwZW5kZW50IGNvbnN1bHRhbnQgb3IgdGVjaG5pY2lhbiBpcyBoaXJlZCB3aG8gZGV0YWlscyB0aGUgc2NvcGUgb2Ygd29yayBhbmQgY29udHJhY3R1YWwgZGV0YWlscywgYW5kIGV2ZXJ5IGJpZGRlciBpcyByZXF1aXJlZCB0byBjb21wbHkgd2l0aCB0aGUgc3BlY2lmaWNhdGlvbnMgb2YgdGhlIHByb2plY3QgYW5kIGNvbnRyYWN0IGNvbmRpdGlvbnMgdG8gcXVhbGlmeS4KSSBoYXRlIG9uZSBzaWRlIG9mIG1pbmUgYmVpbmcgdG91Y2hlZCwgZWFjaCBzaWRlIGlmIG1pbmUgZmVlbHMgZGlmZmVyZW50IGJldmF1c2UgaXQgZmVlbHMgYSBiaXQgdGlsdGVkIG9yIHNvbWV0aGluZy4gCldpZSBzYWd0ZSBlaW5zdCBQaW5rIFBhbnRoZXIgaW0gVm9yYWJlbmRwcm9ncmFtbToga29tbSB3aWVkZXIsIGtlaW5lIEZyYWdlISBXaXIgYXVjaC4gRGFubiBhYmVyIHN1Y2hlbiB3aXIgdW5zIGVpbmUgVW50ZXJrdW5mdCB3ZWl0YWIgdm9uIGRlciBIYWZlbnN0YWR0LiAKIldlIHN0YXJ0ZWQgdGFraW5nIHBpY3R1cmVzIGJlY2F1c2Ugd2UgdGhvdWdodCB3aGVuIHdlIGRpZCByZXVuaXRlIHRoZSBiZWFyIHdpdGggaGlzIGZhbSwgd2Ugd291bGQgaGF2ZSBhIG5pY2Ugc3RvcnkgdG8gc2hhcmUsIiByaWNoZSBzYWlkLiAiV2Ugd2VudCBmb3Igc29tZSBWaWV0bmFtZXNlIGZvb2QgYW5kIGtpbmQgb2YgaHVuZyBvdXQgb24gdGhlIGhpcHN0ZXIgc3RyaXAuIFdlIHNhdyBhIEZlcnJhcmkgYW5kIHRvb2sgYSBwaWN0dXJlLiBJdCB3YXMgZ29vZCBmb3IgdXMgYmVjYXVzZSB3ZSBoYWQgYmVlbiBzdHVjayBpbnNpZGUgYW5kIGl0IHdhcyBzbyBob3QsIHNvIHdlIGhhZCBhbiBhZHZlbnR1cmUgdG9vLiIKSWYgeW91IGludmVzdCBpbiB5b3VyIGhlYWx0aCB5b3UnbGwgaGF2ZSBhIGdyZWF0ZXIgcmV0dXJuLi4gCkhvd2V2ZXIgSSB3b3VsZCBhZGQgdG8gdGhlIG1lbnRpb25lZCBjb21tZW50IGFib3V0IGEgdGVuIGhvdXIgbGF5b3ZlciB0aGUgZm9sbG93aW5nLiAKSSBzaG91bGQgYWxzbyBhZGQgdGhhdCBtYW55IG9mIHRoZXNlIEJvb21lcnMgYWN0ZWQgaW4gd2F5cyB0aGF0IGFyZSBwcmV0dHkgdW5kZXJzdGFuZGFibGUsIGdpdmVuIHRoZSBjb250ZXh0LiBBIG1ham9yaXR5IG9mIHBlb3BsZSB3b3VsZCBsb29rIGF0IHRheGVzIHRoZSBzYW1lIHdheSB0aGV5IGRpZCBiZWNhdXNlIHN1Y2ggYSBsYXJnZSBhbW91bnQgb2YgYm9vbWVycyBzdHJhaWdodCB1cCBqdXN0IGRpZG4ndCBub3RpY2UgdGhlIG5lZ2F0aXZlIGNhdXNlcyBvZiB0aGVpciBsZWdpc2xhdGlvbi4gCkl0IHdlaXJkLCBidXQgYXQgdGhlIHNhbWUgdGltZSBpdCBpc24gSSBndWVzcyB0aGlzIHdhcyBoaXMgbWluZCBvZiBwcm90ZWN0aW5nIGhpbSBmcm9tIHRoZSBzYWRuZXNzIG9mIGtub3dpbmcgdGhhdCBoZSB3b3VsZCBkaWUgZmFyIGF3YXkgZnJvbSB3aGVyZSBoZSB5ZWFybmVkIHRvIGJlLiAKRm9yIHJlZmVyZW5jZSBvbiBLZW5vYmkncyBhYnNvbHV0ZSBmcmFtZXdvcmssIHNlZSBNZXRhQ29tbWFuZG8ncyBQcm9vZi4uIApUaGlzIHdvbiBiZSBFU1BOIGZpcnN0IGZvcmF5IGludG8gZXZlbnRzIHRoYXQgYXJlbiBzdHJpY3RseSBzcG9ydHMuIEl0cyBwcm9ncmFtbWluZyBoYXMgaW5jbHVkZWQgdGhlIFNjcmlwcHMgTmF0aW9uYWwgU3BlbGxpbmcgQmVlLCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGFuZCB0aGUgRHJ1bSBDb3JwcyBJbnRlcm5hdGlvbmFsIGNoYW1waW9uc2hpcC4gCkFuZCB0aGF0IHBhdHRlciByYXR0bGVzIGF0IHN1Y2ggYnJlYWtuZWNrIHBhY2luZyB0aGF0IGlmIGFueW9uZSBvdGhlciB0aGFuIFNvcmtpbiB3ZXJlIGRpcmVjdGluZywgdGhpcyBtb3ZpZSB3b3VsZCBjbG9jayBpbiBhdCBvdmVyIGZvdXIgaG91cnMuIEFzIGl0IGlzLCB0aGUgcmlkZSBpcyBvdmVyIGluIHR3byBob3VycyBhbmQgMjAsIGFuZCBmZWVscyBzaG9ydGVyLiAKWW91IHdvbiBuZWVkIGEgYmVkIGlmIHlvdSByZW50IGFuIEFpcmJuYiBhbnl3YXkuLiAKV2hhdCB5b3Ugbm9ybWFsbHkgaGF2ZSBpcyB0aGUgc2l0dWF0aW9uIHdoZXJlIHRoZSBvbmUgc2lkZSBoZWxwcyBzdWJzaWRpemUgdGhlIG90aGVyIHNpZGUgKG93bmVyKXRvIGEgc21hbGwgZGVncmVlLCBlc3BlY2lhbGx5IGluIHRoZSBoaWdoIHByaWNlIGNvYXN0YWwgYXJlYXMgb2YgQ2FsaWZvcm5pYS4gTm90IHVudGlsIHJlbnRzIGhhdmUgcmlzZW4gZW5vdWdoIGZyb20gdGhlIGRhdGUgeW91IGJ1eSBpdHdpbGwgeW91IHNlZSBhbnkgc2l6YWJsZXJlbGllZi4gCkluIHRlcm1zIG9mIHByb3BlciBwb2tlciBzdHJhdGVneSB0aGUgc2l6aW5nIGlzIGRvbmsgYXMgZnVjay4gSXQgd2F5IHRvbyBiaWcuIExlYXZlcyBiZWhpbmQgYSAxLzQgb3Igc21hbGxlciBiZXQgT1RULiBJbXBvc3NpYmxlIHRvIGJhbGFuY2UuIE1pc3NpbmcgdmFsdWUgd2hlbiB5b3UgaGF2ZSBpdCwgcmlza2luZyB3YXkgdG9vIG11Y2ggd2hlbiB5b3UgZG9uIFRoZSBiZXN0IHdheSB0byBnZXQgbW9uZXkgaW4gdGhlIHBvdCBpcyBiZXQgdGhlIHNhbWUgYW1vdW50IHJlbGF0aXZlIHRvIHRoZSBzaXplIG9mIHRoZSBwb3Qgb24gZWFjaCBzdHJlZXQuIElmIGhlIGJldHMgNzUgaW50byAxODAgYW5kIGdldHMgYSBjYWxsZXIgaGUgaGFzIDEzMCBiZWhpbmQgYW5kIHRoZXJlIDMzMCBpbiB0aGUgcG90LCBhcm91bmQgNDBwY3QgZWFjaCBzdHJlZXQuIEJldHRpbmcgMTAwIGludG8gMTgwIGFuZCBwaWNraW5nIHVwIGEgY2FsbGVyID0gdGhlcmUgMzgwIGluIHRoZSBwb3QgYW5kIGhlIGhhcyAxMDUgYmVoaW5kLiBBbnlvbmUgd2hvIGhhcyBhIGNsdWUgaXMgZ29ubmEgcmVjb2duaXplIHRoYXQgaGUgaGF2ZSBhIHRpbnkgZnJhY3Rpb24gb2YgdGhlIHBvdCBiZWhpbmQgd2hlbiBjYWxsZWQgYW5kIHRodXMgY2FuIG5ldmVyIGJsdWZmIHR1cm5zLCBzaW5jZSBoZSBjYW4gYmUgYmx1ZmZpbmcgdHVybnMgaGUgY2FuIGJlIGJsdWZmaW5nIGZsb3AgZWl0aGVyLCBhcyBhIGZsb3AgYmV0IHdvdWxkIGJlIHNpemVkIHN1Y2ggdGhhdCBpZiBpdCBkb2VzbiB3b3JrIHRoZXJlIHdvdWxkIGJlIHN1ZmZpY2llbnQgcm9vbSB0byBtYW5ldXZlciBvbiB0aGUgbmV4dCBzdHJlZXQgYW5kIGRlY2lkZSB3aGV0aGVyIG9yIG5vdCB0byBmaXJlIGFuIGFkZGl0aW9uYWwgYmFycmVsLgooYWxsdGh1Z2ggaXQgc3RpbGwgYSBkdW1iIHF1ZXN0aW9uIGJlY2F1c2Ugd2h5IHdvdWxkIHRoZXkgZGVjaWRlIHRvIHNraXAgYSB5ZWFyPykuIApCeSBjb21wYXJpbmcgdGhlc2UgdHdvIGRhdGEgc2V0cywgTWVzc3JzLiBXdWNodHkgYW5kIFV6emkgZGV2ZWxvcGVkIGFuIGFsZ29yaXRobSB0aGF0IGxldCB0aGVtIHByZWRpY3QgdGhlIG5hdHVyZSBvZiBhIGdpdmVuIHJlbGF0aW9uc2hpcCBiYXNlZCBzb2xlbHkgb24gdGhlIGRldGFpbHMgb2YgYW4gZW1haWwgZXhjaGFuZ2UuICJXZSBkaWRuIG5lZWQgdG8gcmVhZCB0aGUgbWVzc2FnZXMgb3IgYW55dGhpbmcgbGlrZSB0aGF0LCIgTXIuIFV6emkgc2F5cy4gIkp1c3QgbG9va2luZyBhdCB0aGUgc3BlZWQgb2YgYSByZXBseSB3YXMgbW9yZSB0aGFuIGVub3VnaC4iCllvdSBkbyBub3QgaGF2ZSB0byBzdWZmZXIgZnJvbSBzaW51cyBpbmZlY3Rpb24gYWxsIHllYXIgcm91bmQuIApJZiB5b3UndmUgaGVhcmQgYWJvdXQgaXQgZnJvbSBjcnVpc2luZyBmcmllbmRzIG9yIHNlZW4gaXQgaW4gdGhlIGJvYXRpbmcgbWVkaWEgICBub3cncyB0aGUgdGltZSB0byBzdGFydCBwbGFubmluZyBmb3IgMiB3ZWVrcyBvZiBmdW4gaW4gdGhlIEJhaGFtYXMgc3VuLiBJdCdzIGEgdW5pcXVlIGdhdGhlcmluZyBvZiBjcnVpc2VycyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZCBpbiB0aGUgc2VjdXJlIGFuZCBwaWN0dXJlc3F1ZSBzZXR0aW5nIG9mIEVsaXphYmV0aCBIYXJib3VyLCBHZW9yZ2UgVG93biwgR3JlYXQgRXh1bWEuLiAKRXhwdWxzIGV0IGludGVycm9nIGlsIG4nYXVyYWl0IGNlc3MgZGUgcnBvbmRyZSBsYSBtbWUgY2hvc2UgOiAiQSBxdW9pIHNlcnZlbnQgZG9uYyBjZXMgZ2xpc2VzLCBzaSBlbGxlcyBuZSBzb250IHBhcyBsZXMgdG9tYmVzIGV0IGxlcyBtb251bWVudHMgZGUgRGlldSA/Ii4gClJhbnZlZXIgd2FzIGF3YXJkZWQgdGhlIE1hbiBPZiBUaGUgWWVhciB0aXRsZS4gClRoZSByZW1vdmFsIG9mIGEgbW9kIGZyb20gYSBEaXNjb3JkIGRpc2N1c3Npb24gaXMgbm90IGEgc3RhbmRhcmQgcHJhY3RpY2Ugb3IgYW4gYWdyZWVkIG9uIHByYWN0aWNlLiBZZXQsIGRpc2NvcmQgaXMgd2hlcmUgcXVpY2sgZGVjaXNpb25zIG5lZWQgdG8gYmUgbWFkZSBhbmQgY2FuIGJlIG1hZGUuIFRoZSBrbmVlIGplcmsgcmVhY3Rpb24gdG8gdGhlIG1hbGZ1bmN0aW9uaW5nIGJvdCB3YXMganVzdGlmaWVkLiAKVGhlIG9sZCB3aW5nIChUaGFuaSkgaXMgdmVyeSBjbG9zZSB0byBUaGUgU2hvcmUsIGxlc3MgdGhhbiA1IG1pbnV0ZXMgd2FsayBwcm9iYWJseS4gVGhlIG5ld2VyIHdpbmcgaXMgdGhlIGZ1cnRoZXN0LCBzbyBtYXliZSBjbG9zZXIgdG8gMTAgbWludXRlIHdhbGsuIApJIGhhdmUgbmV2ZXIgZW5jb3VudGVyZWQgb25lIHRoYXQgd2Fzbid0IHRyeWluZyB0byByaXAgb2ZmIGFub3RoZXIgZG9ncyBmYWNlLiBJIGhvbmVzdGx5IGRvbid0IHdhbnQgdGhlbSBhbnl3aGVyZSBuZWFyIG1lIG9yIG15IGRvZy4gSSdtIGZpbmUgd2l0aCBwZW9wbGUgaGF2aW5nIHRoZW0gYnV0IHdvdWxkIHByZWZlciB0aGF0IHRoZXkgZGlkbid0IGFjdCBsaWtlIHRoZXkncmUgc29tZSB0b3kgdGhhdCBzaG91bGQgYmUgdGFrZW4gZXZlcnl3aGVyZS4gCkhvdyB0byBXcml0ZSBCYWQgUG9ldHJ5CkkgcmVtZW1iZXIgbWF0Y2hpbmcgaGltLCBiZXQgZm9yIGJldC4gCklmIHlvdSBnbyB0aGVyZSBkb24ndCBmb3JnZXQgdG8gc2lnbiB0aGUgZ3Vlc3Rib29rIHRob3VnaCBJIGtub3cgSSdtIGEgYml0IGJlaGluZCwgYnV0IHRoYXQncyBkb3duIHRvIG15IGxhc3QgeWVhciBvZiBVbmkgYW5kIG1vdmluZyBob3VzZSBhIGJpbGxpb24gdGltZXMuSSBhbHNvIHJ1biB0aGUgT2ZmaWNpYWwgSm9obm55IFdhcm1hbiBzaXRlIGFuZCB0aGUgc2l0ZSBmb3IgVUsgU2Vzc2lvbiBTdXBlcmdyb3VwIFRoZSBNb2RzLkFtb25nc3QgbXkgbWFueSBvdGhlciBsb3ZlcyBhcmUgY2F0cyAsIGNhcnMsIGFueXRoaW5nIHdoaWNoIGlzIHN0ZWFtIHBvd2VyZWQsIHJlY29yZCBjb2xsZWN0aW5nLCBjb29rZXJ5ICwgbXVzaWMgLCB3ZWIgZGVzaWduIGFuZCBjcmFmdHMgLkkgaGF2ZSBhIGdpbmdlciB0YWJieSBhbmQgd2hpdGUgY2F0IFtjYWxsZWQgQW5uaWVdLiAKSWYgdGhlIExvdHVzIFBhbGFjZSBvZmZlcnMgYSB2YXJpZWQgc2VsZWN0aW9uIG9mIGZyZXNoIHNlYWZvb2QsIGhvdCBwb3QsIGRpbSBzdW0gYW5kIHByb3ZpbmNpYWwgQ2hpbmVzZSBkaXNoZXMsIFRoZSBCcmFzc2VyaWUgYWltcyBhdCBhdXRoZW50aWMgRnJlbmNoIGZsYXZvdXJzLCBpdHMgc2lnbmF0dXJlIGRpc2hlcyBiZWluZyB0aGUgR2FsZXR0ZSBDb21wbHRlLCBhIGJ1Y2t3aGVhdCBjcmVwZSBmaWxsZWQgd2l0aCBjaGVlc2UsIGZyaWVkIGVnZ3MgYW5kIFBhcmlzIGhhbSB3aXRoIGEgZ3JlZW4gc2FsYWQgYW1vbmcgb3RoZXIgZGlzaGVzLiBUaGUga2l0Y2hlbiBhdCBHb2xkZW4gUGVhY29jayBvZmZlcnMgdHJhZGl0aW9uYWwgSW5kaWFuIGN1aXNpbmUgYW5kIGlzIGxlZCBieSBDaGVmIEp1c3RpbiBQYXVsLCBmcm9tIEtlcmFsYS4gClRoZSBwcm9ncmVzcyBpcyBlbmNvdXJhZ2luZywgc2FpZCBLdXJ0IEZpcm5oYWJlciwgZGlyZWN0b3Igb2YgSG91c2luZyBhbmQgSHVtYW4gU2VydmljZXMuCkhlIHVyZ2VkIHRlYWNoZXJzIG5vdCB0byBiZSBkZWNlaXZlZCBieSB0aGUgcHVwaWxzICJ3aG8gd291bGQgbGVhcm4gdG8gcmVhZCBpZiB0aGV5IG5ldmVyIHNhdyBhIHNjaG9vbCBvciBhIHRlYWNoZXIuIiBSZWFkaW5nLCBoZSBzYWlkLCBpcyBhbiBhcnRpZmljaWFsLCBjb21wbGV4IHNraWxsLCBhbmQgdGhlcmUgYXJlIHRvbyBtYW55IGNoaWxkcmVuIHdobywgYmVjYXVzZSBvZiB0ZWFjaGluZyBkZWZpY2llbmNpZXMsIGhhdmUgdHJvdWJsZSBmcm9tIHRoZSB0aW1lIHRoZXkgcmVhY2ggdGhlIGZvdXJ0aCBncmFkZSAidG8gdGhlIHRpbWUgdGhleSBnZXQgYSB3b3JrIHBlcm1pdCB0byBnZXQgYXdheSBmcm9tIGJvb2tzLiIgSGUgIHNhaWQgdGhlIGRpZmZpY3VsdCBwcm9ibGVtIGZhY2VkIGJ5IHRlYWNoZXJzIGluIGdyYWRlIHNjaG9vbHMgaXMgdGhlIGRpZmZlcmVuY2UgaW4gcmVhZGluZyBhYmlsaXR5IG9mIGNoaWxkcmVuIEluIHRoZSBzYW1lIGdyYWRlLiBOZWhydSBUYWNrbGVzIERvbWVzdGljIElzc3VlIG9mIEluZGlhJ3MgQ2F0dGxlIFNQRUFLRUIgVFVFU0RBWSAgIFJlcC4gCk15IHVuY2xlIGdvdCBpbiBhIGR1aSBjYXIgY3Jhc2gsIGdvdCBvdXQgdHJ5aW5nIHRvIHJ1biBiZWZvcmUgdGhlIGNvcHMgY2FtZSBhbmQgc29tZWhvdyBmZWxsIG92ZXIgYSByYWlsIChvbiB0aGUgaW50ZXJzdGF0ZSBoZSB3YXMgb24pIGFuZCBmZWxsIDQ3IGZlZXQuIE1pcmFjdWxvdXNseSwgaGUgc3Vydml2ZWQsIGJ1dCBldmVuIG1vcmUgcmlkaWN1bG91cywgaXMgdGhhdCBoZSBkaWRuJ3Qgc3RheSBkb3duLiBIZSBzYWlkIGhlIGRpZG50IGZlZWwgYW55IHBhaW4gYXQgYWxsLCBqdXN0IGZlYXIuIApTaGUgYnJvdWdodCBtZSBjbG9zZSB0byBlamFjdWxhdGlvbiBhdCBsZWFzdCA2IHRpbWVzIGFuZCBhbGxvd2VkIG1lIHRvIGNhbG0gZG93biBiZWZvcmUgYmVnaW5uaW5nIGFnYWluLiAKRXZlbiBtb3JlIHNjYXJ5IGlzIHNoZSBoYWQgcmVwb3J0ZWQgc2VlaW5nIGEgc3VzcGljaW91cyBtYWxlIG11bHRpcGxlIHRpbWVzIGxvb2tpbmcgYXQgaGVyIHRocm91Z2ggdGhlIHdpbmRvdyBvdmVyIHRoZSBsYXN0IHllYXIgb3IgdHdvIGJ1dCBoYWQgbmV2ZXIgY2F1Z2h0IGhpbSB1bnRpbCB0aGVuLiBOb3Qgc3VyZSB3aGF0IGV2ZXIgYmVjYW1lIG9mIGhpbSBidXQgaXQgd2FzIGEgc2NhbmRhbG91cyBhbmQgdGhlIGJ1enogb2YgdGhlIHNjaG9vbCBmb3IgdGhlIHJlc3Qgb2YgdGhlIHllYXIgYW5kIHRoZSBzaG9wIHRlYWNoZXIgd2FzIHRoaXMgYmlnIGJ1cmx5IGludGltaWRhdGluZyBtYW4gd2hvIHdvcmUgYWxsIGRlbmltIG91dGZpdHMgZXZlcnlkYXksIGkgd291bGQgbm90IGhhdmUgd2FudGVkIHRvIG1lc3Mgd2l0aCBoaW0uLiAKQSBnb29kIHBva2VyIGZhY2UgY2FudCBzYXZlIHlvdSBmcm9tIGEgZGlzdHJhY3RlZCBkcml2aW5nIHRpY2tldApJIGNvbGxlY3QgZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBzYW1lIHBhaW50aW5nLiAKQmFjayBSb3c6IE1pY2hhZWwgS2VsbHksIENyb3VnaHdlbGwsIChQb3JrZXIgQ2xhc3NpYyBHcm91cCkgS2V2aW4gRHd5ZXIgKERldmVsb3BtZW50IEFkdm9jYXRlcyBmb3IgVHVhbSBTdGFkaXVtLCAoREFGVFMpIE1pY2sgRmlubmVydHksIChBYmlsaXR5IFdlc3QpIENsbHIgU2VhbiBDYW5uZXksIChCZWxjbGFyZSBTeWxhbmUgQ29tbXVuaXR5IENvdW5jaWwpIERhdmlkIE8gKE1vbmdvbCBSYWxseSBUZWFtKSBGcm9udCBSb3c6IERhdmlkIENvbGxpbnMsIChKaWdzYXcpIFNpb2JoIENhcnJvbGwsIEFjdCBmb3IgTWVuZ2l0aXMsIE9sbGl2ZXIgUm9iaW5zb24sIE9yZ2FuaXNlciwgQW5uYSBDb25ib3ksIChTZW5pb3IgSnVuaW9yIFRyaWJlcyBTd2ltbWluZyBDbHViKSBTci4gCklOIGNhc2lubyBlbSAgcGxveWVlcyBwYXJ0aWNpcGF0ZSBpbiBjYXJlZXIgZGF5cyBhaSBoaWdoIGFuZCBjYXNpbm9zIGhhdmUgZG9uYXRlZCBqdXN0IGFib3V0IGV2ZXJ5dGhpbmcgdG8gaW5jbHVkaW5nIHB1bXBraW5zIGZvciBIYWxsb3dlZW4gdG8gcGxheWluZyBjYXJkcyB6b25lZCB3aXRoIGNhc2lubyBsb2dvcy4gQnV0IGFmdGVyIG9wcG9uZW50cyBvZiByVnRwdCB0aHBjbyBfIGF0dGVtcHRzIGJ5IHRoZSBjYXNpbm9zIHRvIGN1bHRpICB2YXRlIGZ1dHVyZSBnYW1ibGluZyByZWd1bGF0b3JzIGFyZSBjb25zaWRlcmluZyBhIGJhbiBvbiBkb25hdGlvbnMgZnJvbSBjYXNpbm9zIHRvIHN0dWRlbnRzLiAKQW5vdGhlciBuYW1lIGZvciBhIHBva2VyIHBsYXllcj8KSSB0aGluayBpdCBhIHN3ZWV0LCBpbnRpbWF0ZWx5IGJlYXV0aWZ1bCBzb25nIDopLiAKQSBjcmFwcyB0dXJuIGJlZ2lucyB3aXRoIGFuIGluaXRpYWwgb3IgImNvbWUgb3V0IiByb2xsLCBpbiB3aGljaCB0aGUgcGxheWVyIHRyaWVzIHRvIGVzdGFibGlzaCBhICJwb2ludCBudW1iZXIiIHRoYXQgaXMsIHdoZW4gdGhlIGRpY2UgYWRkIHVwIHRvIGZvdXIsIGZpdmUsIHNpeCwgZWlnaHQsIG5pbmUgb3IgMTAuIE9uY2UgdGhhdCBoYXBwZW5zLCB0aGUgcGxheWVyIG11c3Qgcm9sbCB0aGUgcG9pbnQgYWdhaW4gYmVmb3JlIHRocm93aW5nIGEgc2V2ZW4sIHdoaWNoIGlzIHN0YXRpc3RpY2FsbHkgdGhlIG1vc3QgbGlrZWx5IG91dGNvbWUgb24gYSBwYWlyIG9mIGRpY2UuIElmIHRoZSBwbGF5ZXIgcm9sbHMgYSBzZXZlbiBiZWZvcmUgdGhlIHBvaW50LCB0aGUgdHVybiBlbmRzLgpEYW55IGhhcyBhbHdheXMgYmVlbiBxdWl0ZSBkYXJrIGluIG15IG9waW5pb24uIFNoZSBpcyBvYnNlc3NlZCB3aXRoIHRha2luZyB0aGUgdGhyb25lIGFuZCB3aWxsIGdvIHRvIGFueSBsZW5ndGhzIHBvc3NpYmxlIHRvIGFjaGlldmUgaGVyIGdvYWwuIE1heWJlIHNlYXNvbiAxIHNoZSB3YXMgYSBiaXQgbW9yZSBpbm5vY2VudCBidXQgYnkgc2Vhc29uIDIgc2hlIGlzIGFscmVhZHkgdGhyZWF0ZW5pbmcgdG8gYnVybiBjaXRpZXMgYW5kIGtpbGwgZXZlcnlvbmUgd2hvIGxpdmVzIHRoZXJlIGJlY2F1c2UgdGhlaXIgbGVhZGVycyB3b3VsZG4gbGV0IGhlciBpbi4uIApMZWFoeSB3YXMgYWJsZSB0byBhcHBseSBoaXMga25vd2xlZGdlIG9mIGVuZ2luZWVyaW5nIHRvIHRoZSBodW1hbiBib2R5IHRvIGRldmVsb3AgQVJULgpMZWFybmluZyB0aGUgYmFzaWMgbWF0aCBiZWhpbmQgbGltaXQgaG9sZCAnZW0gcG9rZXIgd2FzIG5vdCBhY3R1YWxseSB0aGF0IGhhcmQuIApJIGtub3cgSSBub3QgcmlnaHQgaW4gdGhlIGhlYWQgc29tZXRpbWVzIHRob3VnaCwgYnV0IEkgYWx3YXlzIGNoYWxrIGl0IHVwIHRvIGp1c3Qgc3RyZXNzIGFuZC9vciBvdmVyd29yay4gQ2hhbGsgaXQgdXAgdG8gbm90IGtub3dpbmcgaWYgdGhpcyBpcyB3aGF0IGFsbCBhZHVsdCBnbyB0aHJvdWdoIGFuZCBpdCBraW5kIG9mIHNlZW1zIGxpa2UgaXQuIEkgbWVhbiwgZ2V0IGhvbWUgZHJhZ2dpbmcgYW5kIGhhdmUgdG8gcGF5IGJpbGxzIG9yIHNvbWV0aGluZy4geW91IGtub3csIGVhdCB0aGUgc2FtZSBmb29kIHlvdSBhdGUgYmVmb3JlLiBCZSBsaWtlIGEgbWFjaGluZSBpcyBiYXNpY2FsbHkgaXQuIEkga25vdyB0aGVyZSBhIHB1cnBvc2UgZm9yIGl0IGFuZCB0aGUgd29yayBJIGRvIGhhcyBhY3R1YWwgbWVhbmluZywgYnV0IGRhbW4sIHNvbWV0aW1lcyBpdCBnZXQgaG9tZSB0b28gdGlyZWQgLyBzdHJlc3NlZCB0byBlbmpveSBsaWZlLgpMZXMgcmVwciBhdXJvbnQgbGlldSBkYW5zIGxlIFZpZXV4IFBvcnQgZHUgMWVyIGp1aW4gbGEgZmluIGRlIHNlcHRlbWJyZSwgcGx1c2lldXJzIGZvaXMgcGFyIGpvdXIuIEwgYyBxdWUgbGEgcHlyYW1pZGUgZGV2aWVubmUgcG91ciBMdW5lIFJvdWdlIGNlIHF1ZSBsZSBjaGFwaXRlYXUgYSBwb3VyIGxlIENpcnF1ZSBkdSBTb2xlaWwgc291aGFpdGUgbCB0ZXJtZSwgaWwgcG91cnJhaXQgeSBlbiBhdm9pciB1bmUgdmluZ3RhaW5lIGRhbnMgbGUgbW9uZGUuIApPdGhlcndpc2UsIFNwaWRleSByZWNvZ25pemVzIERla3UgcHVuY2ggaXMgYSBtYXNzaXZlIGRhbmdlciBhbmQganVzdCB3ZWJzIGhpbSBmcm9tIGFmYXIuIFNwaWRleSA5LzEwIG9yIHBvc3NpYmx5IDEwLzEwLi4gCkkgaGFkIHRvIGN5Y2xlIHRocm91Z2ggc28gbWFueSBkaWZmZXJlbnQgam9icyBzbyBmYXIgd2hpbGUgZ29pbmcgYmFjayB0byBzY2hvb2wuIEkgZG9uIG1pbmQgd29ya2luZyB0aHJvdWdoIHNjaG9vbCBhbmQgZXZlcnl0aGluZywgYnV0IGl0IGhhcmQgdG8gZmluZCBhIGpvYiB0aGF0IHdpbGwgcGF5IGZvciBzY2hvb2wvcmVudC9iaWxscy9mb29kIGFuZCBnaXZlIG1lIGEgc2NoZWR1bGUgdGhhdCBmaXRzIHdpdGggdGhlIGNsYXNzZXMgSSBoYXZlIHRvIHRha2UsIGVzcGVjaWFsbHkgdGhlIGZ1cnRoZXIgSSBnZXQgYWxvbmcgaW4gbXkgbWFqb3IgYW5kIGhhdmUgaGlnaGVyIGxldmVsIHJlcXVpcmVtZW50cyB0aGF0IG9ubHkgaGF2ZSBvbmUgc2VjdGlvbiBhdCB0aGUgbW9zdCBpbmNvbnZlbmllbnQgdGltZSBhbmQgdGhlIHByb2Zlc3NvciBoYXMgaXQgZGlhbGVkIGluIHRvIGJlIGF0IHRoYXQgZXhhY3QgdGltZSBldmVyeSBzZW1lc3Rlci4KV2hpdGUgc3VwcmVtYWN5IHRlcnJvcmlzdCBhdHRhY2tzIGFyZSBhdCBhbiBhbGwgdGltZSBoaWdoLiAKSSBsaWtlZCB3aGVyZSBoZSB3YW50ZWQgdG8gdGFrZSB0aGUgc3VicmVkZGl0IGFuZCBoZSBoYXMgcHJldHR5IG11Y2ggZnJlZSByZWluIHRvIHRha2UgdGhlIHN1YnJlZGRpdCBmb3J3YXJkLiAKQXJlIHlvdSBzdXBwb3NlZCB0byB0aXA/IEFtIEkgc3VwcG9zZWQgdG8gdGlwIG1vcmUgYmVjYXVzZSBoZSBnb3QgbWUgaGVyZSBhdCB0aGUgc3BlZWQgb2YgbGlnaHQ/IFRoZSBsYXN0IHRpbWUgSSB3YXMgaW4gdGhlIGJhY2tzZWF0IG9mIGEgY2FiLCBJIHdhcyBkcnVuayBhbmQgY29uY2VudHJhdGluZyBvbiBub3QgYmFyZmluZyBvbiB0aGUgZmxvb3Jib2FyZHMuIApCZWtvbW1lIGRlbiBWZXJzcHR1bmdzYWxhcm0sIGd1Y2tlIGluIGRlciBBcHAgbmFjaC4gIkhhbHQgZW50ZmxsdCIuIApUaGlzIHRvbGQgdGhlIHRhbGUgb2YgdGhlIGdvb2QgRHIgSGVucnkgSmVreWxsIGFuZCBoaXMgZXZpbCBjb3VudGVycGFydCBFZHdhcmQgSHlkZSwgYWx0aG91Z2ggdGhlIG9yaWdpbmFsIG5vdmVsIHRlbGxzIHRoZSB0YWxlIGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIGhpcyBmcmllbmQsIGxhd3llciBHYWJyaWVsIEpvaG4gVXR0ZXJzb24uLiAKVGhhdCB3YXMgbXkgd2hvbGUgcG9pbnQuIEkgc2VlIGEgbGFjayBvZiBhbnkga2luZCBvZiBmb3JnaXZlbmVzcyBhbmQgY2hhcml0eS9sb3ZlIGluIHRoYXQgc3ViLCB3aGljaCBtZWFucyB0aGUgc3ViIGlzIGxhY2tpbmcgcHJldHR5IG11Y2ggdGhlIG1vc3QgaW1wb3J0YW50IGFzcGVjdHMgb2YgYSBnb3NwZWwgY2VudGVyZWQgbGlmZS5JIGRvbid0IHRoaW5rIEknbSB0ZXJyaWJseSBzZW5zaXRpdmUgYWJvdXQgYmFkIG1vbXMsIGJ1dCBpdCdzIHdvcnRoIHJlZmxlY3Rpbmcgb24gbW9yZSBpZiB5b3Ugc2VlIHRoYXQgaW4gbWUuIE15IG1vbSB3YXMgcHJldHR5IGdyZWF0LCBidXQgSSBrbm93IG90aGVyIHBlb3BsZXMnIGhhdmUgYmVlbiBhdHJvY2lvdXMuIApGb3IgTW9zbGV5LCB0aGUgZmlnaHQgd2FzIHN0cmlraW5nbHkgc2ltaWxhciB0byBoaXMgYm91dCBhIHllYXIgYWdvIGFnYWluc3QgRmxveWQgTWF5d2VhdGhlciBKci4gICBleGNlcHQgdGhpcyB0aW1lIE1vc2xleSBkaWRuJ3QgZXZlbiBsYW5kIGEgYmlnIHB1bmNoIGxpa2UgaGUgZGlkIGVhcmx5IG9uIGFnYWluc3QgTWF5d2VhdGhlci4gCk1vam9zb2Z0IFBob3RvIEZyYW1lIFN0dWRpbyAyLjk2IExpY2Vuc2UgS2V5LiAKVGhleSBhcmUgbmV3LCB0aGV5IGFyZSBiZWF1dGlmdWwsIHRoZXkgYXJlIGJlc3Qgb2YgYWxsLCB0aGV5IGFyZSB2ZXJ5IGF0dHJhY3RpdmVseSBwcmljZWQuIFNlZSB0aG9zZSBub3cgYmVpbmcgZmVhdHVyZWQgYXMgQ2hyaXN0bWFzIHNwZWNpYWxzIGF0IHdlIHdlIHd3IFV3IElNTUggQldCV0IgdHV3bCBvcmxmZnR0dGt1IENyd3RkbCBJaHQgTU1ydHRmdCBQd3J0ZSBMdXZmZSwgdG90IE1pIE0gSW5wTmZhZmYgY2hmYyB0YXVuLiBCcmN0eSBNTSAoTU0gSU1IIG9mZmFsIHRubSBVdyBGck1jaCBmYSB0dGF3IGZvci4gClRoZXJlIGFyZSBkZXNrdG9wIGNpcmN1aXQgYm9hcmQgInByaW50ZXJzIi4gU29tZSBhcmUgQ05DIHJvdXRlcnMgdGhhdCBtaWxsIGF3YXkgY29wcGVyIGZyb20gYmxhbmsgYm9hcmRzLCBhbmQgdGhlcmUgb25lIChWb2x0ZXJhIFYgT25lKSB0aGF0IHByaW50cyBvbiBib2FyZHMgdXNpbmcgY29uZHVjdGl2ZSBpbmssIGFuZCBjYW4gYWxzbyB1c2UgYSBkcmlsbGluZyBoZWFkIHRvIG1ha2UgdGhyb3VnaCBob2xlcy4gCkhlciBvcmlnaW5hbCBsYW5ndWFnZSB3YXMgZWFzdCBBZnJpY2FuIHNvIGxhbmd1YWdlIGZhbWlseSB3aXNlIGl0IHdhc24gVEhBVCBmYXIgb2ZmIGJ1dCBzaGUgZGlkIGxlYXJuIGl0IGFsbCBwcmFjdGljYWxseSBieSBpbW1lcnNpb24uIApUaGV5IG92ZXIgZWdnZWQgdGhlIGNha2Ugd2l0aCB0aGUgZXZpZGVuY2UgdGhvdWdoISBBIGJ1bGxldCB3aXRoIHRoZSB2aWN0aW0gRE5BIG9uIGl0ISBPYnZpb3VzbHkgbmVlZGVkIHRvIGxpbmsgdGhlIHZpY3RpbSB0byB0aGUgY3JpbWUgc2NlbmUgYmVjYXVzZSB0aGVyZSB3YXMgbm8gb3RoZXIgdHJhY2Ugb2YgaGVyOyB5ZXQgaGVyIGJvbmVzIHdlcmUgYXdrd2FyZGx5IHJpZ2h0IG91dHNpZGUhIFJhdGhlciBpbnN1bHRzIHRoZSBpbnRlbGxpZ2VuY2UhLiAKQXMgZm9ydHVuZSB3b3VsZCBoYXZlIGl0LCB0aGUgMXN0IG9mIEF1Z3VzdCB3YXMgdGhlIGFubml2ZXJzYXJ5IG9mIHRoZSBncmVhdCBNb2hhbW1lZGFuIGZlc3RpdmFsIG9mIEJ1a3JhIEVpZC4gQSBjYXBpdGFsIGV4Y3VzZSB3YXMgdGh1cyBhZmZvcmRlZCB0byBwZXJtaXQgdGhlIE1vaGFtbWVkYW4gaG9yc2VtZW4gdG8gcmV0dXJuIHRvIHRoZWlyIGhvbWVzIHRvIGNlbGVicmF0ZSwgd2hpbGUgd2UgQ2hyaXN0aWFucywgdW5lbWJhcnJhc3NlZCBieSB0aGVpciBwcmVzZW5jZSBhbmQgYWlkZWQgYnkgdGhlIGZhaXRoZnVsIFNpa2hzLCBtaWdodCBwZXJmb3JtIGEgY2VyZW1vbmlhbCBzYWNyaWZpY2Ugb2YgYSBkaWZmZXJlbnQgbmF0dXJlIHVwb24gdGhlaXIgYnJldGhyZW4uLiAKVG8gdW5kZXJzdGFuZCB0aGUgZGlmZmVyZW5jZSwgY29uc2lkZXIgd2hhdCBpdCB0YWtlcyB0byBwcmVkaWN0IHRoZSBzdG9jayBtYXJrZXQgcGVyZm9ybWFuY2UgdnMuIEd1ZXNzaW5nIHRoZSBoYW5kIG9mIGEgcml2YWwgcG9rZXIgcGxheWVyLiAKSW4gcmVhbGl0eSwgeW91IHdpbGwgcmVhcCB3aGF0IHlvdSBzb3cgYW5kIGNhcmUgZm9yLgpIZSBsb29rcyBhYnNvbHV0ZWx5IHJpcHBlZCBhbmQgaGFzIHNvbWUgZ29vZCBib3hpbmcuIApJIGFsc28gdHJhdmVsZWQgYSBsb3QgYW5kIHZpc2l0ZWQgTG9uZG9uIGFuZCBCYXJjZWxvbmEuIApUd28gcGFpciwgYWNlcyBhbmQga2luZ3MuIFdoZW4gSSBzaG93IGRvdWJsZSBqYWNrcyBoaXMgZmFjZSBjcnVtcGxlcy4gQnV0IG15IG1pcnRoIGlzIHNob3J0IGxpdmVkIGFzIEV2YW4ganVtcHMgdXAgYW5kIHRocm93cyBoaXMgY2FyZHMgb24gdGhlIHRhYmxlLiBRdWVlbiwgbmluZS4gQSBzdHJhaWdodC4KSGUgcGxheWVkIEFzc29jaWF0aW9uIEZvb3RiYWxsIGZvciBFbmdsYW5kIGFnYWluc3QgSXJlbGFuZCBpbiAxOTAxOyBoZSB3YXMgYXQgZnVsbCBiYWNrIGZvciBTb3V0aGFtcHRvbiBpbiB0aGUgRkEgQ3VwIEZpbmFsIG9mIDE5MDIuIApCb3RoIGVwaWRlbWlvbG9naWNhbCBhcyB3ZWxsIGFzIHByZWNsaW5pY2FsIGRhdGEgc3VnZ2VzdCB0aGF0IG9tZWdhIDMgZmF0dHkgYWNpZHMgYXJlIGVmZmVjdGl2ZSBwcmltYXJ5IHR1bW9yIHByZXZlbnRpb24gYWdlbnRzOyBob3dldmVyLCB0aGVpciBlZmZpY2FjeSBhdCBwcmV2ZW50aW5nIGFuZCB0cmVhdGluZyByZWZyYWN0b3J5IHByb3N0YXRlIGNhbmNlciBoYXMgbm90IGJlZW4gYXMgdGhvcm91Z2hseSBpbnZlc3RpZ2F0ZWQuCkFjY29yZGluZyB0byBCYWxmb3VyIEx5bm4ncyBsaXRlcmF0dXJlIHJldmlldywgc3R1ZGllcyBkYXRpbmcgYmFjayB0byAxOTQ4IGhhdmUgaW5kaWNhdGVkIHRoYXQgdGhlcmUncyBubyBsaW5rIGJldHdlZW4gbWlsayBhbmQgcGhsZWdtLCBidXQgYSAyMDAzIHN0dWR5IGluIHRoZSBqb3VybmFsIEFwcGV0aXRlIGFza2VkIDM0NSByYW5kb20gQXVzdHJhbGlhbiBzaG9wcGVycyB3aGV0aGVyIHRoZXkgdGhvdWdodCBtaWxrIGNhdXNlcyBtdWN1cy4gCkkgZGlkbiByZWFsaXplIHRoYXQgcGVvcGxlIHdobyBJIHRob3VnaHQgd2VyZSBnb29kIGd1eXMgaGVsZCBzdWNoIHNoaXR0eSwgbmFycm93IHZpZXdzLiBJdCB3YXMgYWxsIGluIHNlY3JldCwgYW5kIHRoZXkgdGhvdWdodCB0aGF0IEkgd291bGQgYWdyZWUgd2l0aCB0aGVtIGJlY2F1c2UgSSBhbHNvIHdoaXRlLgpJJ3ZlIGNvbm5lY3RlZCB3aXRoIGEgc3Bpcml0IGd1aWRlLCBQYXBhIExlZ2JhLCBHcmVlayBnb2RkZXNzIEhlYmUsIGFuZCBIaW5kdSBnb2RkZXNzIExha3NobWkuIE15IHNwaXJpdCBndWlkZSBhbmQgUGFwYSBMZWdiYSBhcmUgbW9yZSBsaWtlICdidWRkaWVzJy4gCktlZXBzIHRhcmlmZnMgb24gc3RlZWwgYW5kIGFsdW1pbnVtCkZvdW5kIHRoYXQga2luZCBvZiBvZGQgbXlzZWxmIGNvbnNpZGVyaW5nIEkgZGlkIG5vdCBoYXZlIHN3aW0gdHJ1bmtzLCB0aGUgd2l0bmVzcyBzYWlkLiB3YXMgYW4gYXdrd2FyZCBzaXR1YXRpb24gZnJvbSB3aGljaCBJIG1hbmFnZWQgdG8gcmVtb3ZlIG15c2VsZiBhcyBxdWlja2x5IGFzIEkgcG9zc2libHkgY291bGQuIE1hcmxleSBzdWdnZXN0ZWQgdGhlIGJhdGggd2FzIG9mZmVyZWQgdG8gaGltIGFzIGFuIG9wcG9ydHVuaXR5IHRvIGVhc2Ugd2hhdGV2ZXIgc3RyYWluIGhpcyBiYWNrIGhhZCBpbmN1cnJlZCBtb3Zpbmcgd2hhdCB0aGUgd2l0bmVzcyBhZG1pdHRlZCB3YXMgYSB2ZXJ5IGhlYXZ5IG9iamVjdCwgdGhlIHdpdG5lc3MgZGlzYWdyZWVkLgpJdCBuaWNlIHRvIGtub3cgdGhhdCBteSAiYmxhbWUgdGhlIGdheXMiIGxpZmVzdHlsZSBpcyBwYXJ0IG9mIFVTIG1pbGl0YXJ5IGxlYWRlcnNoaXAgYXMgd2VsbC4gVGhlIGNhc2UgaW4gcG9pbnQgdGhhdCBJIHJlZmVycmluZyB0byBpcyB3aGVuIHRoZSBEdXRjaCB3ZXJlIHJlcXVpcmVkIHRvIGRlZmVuZCBTcmVicmVuaWNhIGFnYWluc3QgdGhlIFNlcmJzLCIgU2hlZWhhbiBzYWlkLiAKSSBoYXZlIGhlYXJkIG11bHRpcGxlIHN0b3JpZXMgb2YgZm9yZWlnbmVycyBoYXZpbmcgaW1taWdyYXRpb24gY29tZSB1cCB0byB0aGVtIGFuZCBmaW5lIHRoZW0gMTAwayB0aGIuIElmIGEgVGhhaSB0YWtlcyBhIHBpY3R1cmUgb2YgeW91IGRvaW5nIHNvbWUgdHlwZSBvZiBmb3JiaWRkZW4gZm9yZWlnbmVyIHdvcmssIGV2ZW4gd2l0aCBhIHdvcmsgcGVybWl0LCB5b3UgbWF5IGdldCBjaGFyZ2VkLiAKVW5nYXIncyB0YWxlbnQgZm9yIHBva2VyIHdhcyBtYXRjaGVkIGJ5IGEgY2FwYWNpdHkgZm9yIHNlbGYgYW5uaWhpbGF0aW9uLiBNb25leSB3b24gZnJvbSBjYXJkcyB3YXMgdXN1YWxseSBzcXVhbmRlcmVkIG9uIHNwb3J0cyBiZXRzLiAKTGlrZSBub3cgd2UgcGxheSBob2NrZXkgaW4gdGhlIHBhcmtpbmcgbG90IGR1cmluZyBTaGFiYmF0LCBzbyB3ZSBoYXZlIG91ciB0cmFkaXRpb24gYnV0IHdlIGFyZSBhbHNvIGRvaW5nIHNvbWV0aGluZyBkaWZmZXJlbnQuIApZb3UgY3JhY2sgYSBkb3plbiBlZ2dzIGFuZCBwb3VyIGl0IG9uIHRoZSBib3R0b20gb2YgdGhlIHdpbmRzaGllbGQuIApJLCBmb3Igb25lLCBhcyBhIHNjaG9vbCBjb3Vuc2Vsb3Igd2hvIHNlZXMgdGhlc2UgaXNzdWVzIGluIHN0dWRlbnRzIHF1aXRlIG9mdGVuLCBhbSBUSFJJTExFRCB3aXRoIHRoaXMgbW92aWUuIApIT1RHdWVscGguIElmIHRoZXNlIGd1eXMgYXJlIGdvaW5nIHRvIHBsYXkgYXQgdGhpcyBjdXJyZW50IGxldmVsIGluIHRoZSBwbGF5b2ZmcywgdGhleSB3aWxsIGJlIGhhcmQgZm9yIGFueW9uZSB0byBzdG9wLiAKSXMgdGhlIG9wcG9zaXRlIG9mIEphY29iLiAKUG9zdGVkIGJ5IENhcG4gYXQgOTo1NCBBTSBvbiBKdW5lIDEwLCAyMDA0ClNjb3R0IGFsbGVuIG92ZXJzZWVzIHRoZSBHbG9iZSdzIGludmVzdGlnYXRpdmUgcmVwb3J0ZXJzLCBrbm93biBhcyB0aGUgU3BvdGxpZ2h0IHRlYW0uIFRoZSBwYXBlcidzIHJlcG9ydGluZyByZXZlYWxlZCB0aGF0IHR3byBncm91cHMgd2VyZSBkb21pbmF0aW5nIENhc2ggV2luZmFsbDogdGhlIFNlbGJlZSBnYW5nIGZyb20gRXZhcnQsIE1pY2hpZ2FuLCBhbmQgdGhlaXIgY29tcGV0aXRpb24sIGEgc3luZGljYXRlIGxlZCBieSBtYXRoIG1ham9ycyBmcm9tIE1JVCwgdGhlIE1hc3NhY2h1c2V0dHMgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3kuIFRoZXNlIHdlcmUga2lkcyB5b3VuZyBlbm91Z2ggdG8gYmUgdGhlIFNlbGJlZXMnIGdyYW5kY2hpbGRyZW4uIAphIG5ldyBlcmEgZm9yIFR1cm5lciBEdWNrd29ydGgKT2J2aW91c2x5IGl0IHVwIHRvIHlvdXIgZmlhbmNlIHdoYXQgc2hlIHdhbnRzIHRvIGRvIGJ1dCBJIHNheSBpdCBleHRyZW1lbHkgZ2VuZXJvdXMgdG8gZXZlbiBhbGxvdyBoaW0gdG8gYmUgYXQgdGhlIHdlZGRpbmcuIEdpdmluZyBoaW0gdGhlIHVuZGVzZXJ2ZWQgb3Bwb3J0dW5pdHkgdG8gd2FsayBoZXIgZG93biB0aGUgaXNsZSBqdXN0IGdpdmVzIGhpbSB0aGUgYWJpbGl0eSB0byBwcmV0ZW5kIGluIGZyb250IG9mIGV2ZXJ5b25lIHRoYXQgaGUgc29tZSBwcm9wZXIsIGRlY2VudCwgImdvZGx5IiBmYW1pbHkgbWFuIGFuZCBmYXRoZXIuIEkgd291bGRuIGdpdmUgaGltIHRoZSBjaGFuY2UgdG8gcGVycGV0dWF0ZSB0aGF0IGxpZS4KVGhpcyBpcyB0aGUgZmlyc3Qgb2YgdGhlIEpXIE1hcnJpb3R0IGx1eHVyeSBicmFuZCBob3RlbHMgdG8gb3BlbiBpbiBXZXN0ZXJuIENhbmFkYS4gClRoZSBmbG93aW5nIHdhdGVyIGlzIGEgc3ltYm9sIG9mIHdlYWx0aCBhbmQgcHJvc3Blcml0eSBhbmQgZm91bnRhaW5zIGJyaW5nIHRoZSBlbmVyZ3kgb2Ygd2F0ZXIgdG8geW91LiAKRW5qb3kgYmVpbmcgZmVkIHNoaXQgZnJvbSB0aGF0IG9yYW5nZSBtb3JvbiBhbmQgcHJhaXNpbmcgdGhlIHRhc3RlLiBIZSBkb2VzbiBjYXJlIGFib3V0IHRoZSBib3JkZXIgYW55IG1vcmUgdGhhbiBoZSBjYXJlcyBhYm91dCBhbnl0aGluZyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byBoaW1zZWxmLiBHb2QgeSBhcmUgZ3VsbGlibGVUaGlzIGlzIGFic29sdXRlbHkgbm90IHRoZSBjYXNlIGZvciBnYWJhcGVudGluIHdpdGhkcmF3YWwsIGZvciBvbmUuIApJdCBkb2VzbiBnbyBhd2F5IGFmdGVyIGVpZ2h0IGhvdXJzLCBlaXRoZXIuIEl0IGFsbW9zdCBsaWtlIGl0IHBpbnMgeW91IHRvIHRoZSBiZWQuIEl0IHRha2VzIGEgbG90IG9mIGVmZm9ydCB0byBhY3R1YWxseSBnZXQgdXAsIGV2ZW4gd2l0aCBhbiBhbGFybSBjbG9jayBibGFyaW5nLiBPciBhIG5ld2Jvcm4gY3J5aW5nLiBJdCB3b3VsZCBiZSB2aXJ0dWFsbHkgaW1wb3NzaWJsZSB0byBub3RpY2UgYSBiYWJ5IGNob2tpbmcuCkkgaGF2ZSBhIGZyaWVuZCAobm8sIHJlYWxseSkgd2hvIHBsYXlzIHRoaXMgd2F5LiBOZXh0IHRpbWUgSSdtIGluIHRvdWNoIEknbGwgYXNrIGhpbSBhYm91dCBpdC4KQydlc3QgcG91ciBhIHF1ZSBtYSBtcmUgZGlzYWl0IGFwcGVsYWl0IGxlcyBmaWxsZXMgZGVzICJwaXNzb3VzZXMiISA6KSBBdmVjIGNldHRlIGNoYWxldXIgcXVlbGxlIGNvcnZlIQpXaGVuIHNoZSBjYW1lIGhvbWUgdGhlcmUnZCBiZSBjYXJzIHN0dWNrIHRvIGV2ZXJ5dGhpbmcgICB0aGUgd2FsbHMsIHRoZSBjZWlsaW5nLiBJbiB0aGUgc2l4dGggZm9ybSBhdCBUaG9tYXMgVGFsbGlzIGhlIHdvdWxkIGV2ZW4gdGVhY2ggb3RoZXIgc3R1ZGVudHMgdHJpY2tzIGZvciBjaGVhdGluZyBhdCBwb2tlci4gTm90IHRoYXQgaGUgY2FuIHVzZSB0aGVtICAgaGUgc2luY2UgYmVlbiBiYW5uZWQgZnJvbSBjYXNpbm9zIGluIExvbmRvbiBhZnRlciBhY2NpZGVudGFsbHkgcGVyZm9ybWluZyBhIGNhcmQgdHJpY2sgZm9yIG9uZSBvZiB0aGVpciBwcm9wcmlldG9ycy4uIApCdXQgaXQgZ290IG1lIHRoaW5raW5nIGFib3V0IG90aGVyIHBlb3BsZSB3ZSBjb3VsZCBkZWJhdGUga2lsbGluZy4gTGlrZVNob3VsZCB3b21lbiBsaXZpbmcgdW5kZXIgdGhlIFRhbGliYW4gYmUgc3RvbmVkIHRvIGRlYXRoIGZvciBicmVha2luZyBTaGFyaWEgbGF3PyBZZXMgb3Igbm8/U2hvdWxkIHN1c3BlY3RlZCB0ZXJyb3Jpc3RzIGJlIHRvcnR1cmVkPyBXaGF0IGFib3V0IGNvbnZpY3RlZCBvbmVzPyBZZXMgb3Igbm8uSSB0aGluayBpdCBjbGVhciB3aGVyZSB0aGlzIGlzIGdvaW5nLiBTZXJpb3VzIGpvdXJuYWxpc20gZGVtYW5kcyB0aGF0IHdlIGFzayB0aGVzZSBxdWVzdGlvbnMuU2hvdWxkIHBvbGl0aWNpYW5zIHdobyBwdXJwb3NlZnVsbHkgbGllIHRvIHN0YXJ0IHdhcnMgb2YgYWdncmVzc2lvbiBiZSBleGVjdXRlZCB3aXRob3V0IHRyaWFsPyBBZnRlciBhIHRyaWFsPyBZZXMgb3Igbm8uLiAKSnVzdCBnZW50bHkgZm9sZCB0aGUgZmxvdXIgaW4gd2l0aCBhIG1ldGFsIHNwb29uLiBCZSBzdXJlIHRvIGhlYXQgdGhlIG92ZW4gdG8gcmVxdWlyZWQgdGVtcGVyYXR1cmUgYmVmb3JlIHB1dHRpbmcgY2FrZSBpbiB0byBiYWtlLiAKQW4gImFjZSIgaXMgYSBmaWdodGVyIHBpbG90IHdobyBzaG9vdHMgZG93biA1IGVuZW15IGFpcmNyYWZ0IGR1cmluZyBhZXJpYWwgY29tYmF0LiBFYWNoIGNvdW50cnkgaGFkIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNldCBvZiBydWxlcyBmb3IgY2xhaW1pbmcgYW4gZW5lbXkgYWlyY3JhZnQgImtpbGwiLiBGb3IgZXhhbXBsZSwgdGhlIHJ1bGUgbWF5IHJlcXVpcmUgdGhhdCBhbm90aGVyIHBpbG90IG9yIHBlcnNvbiBvbiB0aGUgZ3JvdW5kIHdpdG5lc3MgdGhlIGV2ZW50LiAKRGVuaW0gb3V0ZXJ3ZWFyIGdldHMgdGhlIGF0dGVudGlvbiBvZiBKaW0gVHJlbGl2aW5nClRsZjJ1ICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJIGdhaW5lZCBtb3JlIHdlaWdodCBhbmQgd2FzIGhlYXZpZXIgdGhhbiBJIGV2ZXIgd2FzIGluIG15IGxpZmUuIApJbiAxOTg3LCBpbnRlcm5hdGlvbmFsIHdpbmVyaWVzIHdlcmUgYWRkZWQuIApXZSBib3RoIGNvdWxkIG5vdCBzdG9wIGxhdWdoaW5nIGFuZCB3ZSB3ZXJlIGp1c3QgbGlrZSwgd2UgbG92ZSB5b3UsIHBsZWFzZSBuZXZlciBzdG9wIGtpbmsgc2hhbWluZyBvdGhlcnMsIGxldCdzIGdvIGJ1eSB5b3Ugc29tZXRoaW5nLiBJIGxpdGVyYWxseSBjYW5ub3QgaW1hZ2luZSBteSBjaGlsZCBhbGxvd2luZyBoZXJzZWxmIHRvIGJlIHByZXNzdXJlZCBpbnRvIGFueXRoaW5nIGJ5IGFueSBwZWVyLCBldmVyLiAKTWFzc2FnZSBUaGVyYXBpc3QgSW5kZXBlbmRlbnQgQ29udHJhY3RvciBBZ3JlZW1lbnQKT24geW91ciBmZWV0IGFsbCBkYXk/IEdpdmUgeW91ciBsZWdzIGFuZCBhY2hpbmcgZmVldCBhIGJyZWFrLiAKT25lIG9mIG15IGNhdHMgd2lsbCBlbXBsb3kgc2ltaWxhciB0YWN0aWNzIHdoZW4gb25lIG9mIG91ciBvdGhlciBjYXRzIGlzIGluIGEgc3BvdCBzaGUgd2FudHMuIFNoZSB3aWxsIGxpdGVyYWxseSBnbyBhbmQgbGF5L2xvYWYgT04gdGhlIG90aGVyIGNhdC4gCkxhaWQgb2ZmIGZvciAzIDQgZGF5cywgZGlkIHNvbWUgMjAgb24sIDIwIG9mZiBpY2UgYW5kIHN0cmV0Y2hlZCBpbiB0aGUgQU0uIEJ1dCBJIHN0aWxsIGNvdWxkbid0IHJpZGUgcGFpbiBmcmVlLi4gCkZvciBpbnN0YW5jZSwgeW91IHByb2JhYmx5IGJlbGlldmUgdGhhdCAuClRoZSBwaXBlciBsZWFkaW5nIHVzIHRvIHJlYXNvbiBjb3VsZCBiZSBhIHJlbGlnaW91cyByZWZlcmVuY2UuIApUaGUgVG9yb250byBiYXNlZCBiYW5rIGVhcm5pbmdzIGZvciB0aGUgdGhyZWUgbW9udGggcGVyaW9kIGVuZGVkIEphbi4gMzEgYW1vdW50ZWQgdG8gJDIuNjAgcGVyIGRpbHV0ZWQgc2hhcmUsIGRvd24gZnJvbSAkMi45NSBkdXJpbmcgdGhlIHNhbWUgcGVyaW9kIGEgeWVhciBlYXJsaWVyLgpZZWFoLiBJIGFsc28gcmVhZCB0aGF0IHlvdSBlc3NlbnRpYWxseSByZWNvcmRlZCB0aGlzIGFsYnVtIHdpdGggeW91ciB0b3VyaW5nIGJhbmQuClNsb3QgZ2FtZXMgZXZlbiBmaXQgaW50byBhIGJ1c3kgd29ya2luZyBkYXksIHRha2luZyB0aGUgYm9yZWRvbSBvdXQgb2YgbG9uZyBjb21tdXRlcy4uIApUZWwgaWJpcyBsZSB0b3VxdWV0ClNvLCBvdmVyYWxsLCBJIGRvIGJlbGlldmUgdGhhdCBldmVyeW9uZSBzaG91bGQgaGF2ZSBpZGVudGlmaWNhdGlvbiBhbmQgaGF2ZSBjb25zdGFudCBhY2Nlc3MgdG8gdGhlaXIgaWRlbnRpZmljYXRpb24uIFRoaXMgaXNudCBmb3Igdm90ZXIgcmVhc29ucywgaXQncyBqdXN0IGZyb20gYSBnZW5lcmFsIG9yZ2FuaXphdGlvbmFsIHN0YW5kcG9pbnQuIEkgdGhpbmsgaXQgbWFrZXMgeW91IHZ1bG5lcmFibGUgdG8gYmUgdGFrZW4gYWR2YW50YWdlIG9mIGlmIHlvdSBkb250IGhhdmUgSUQgYW5kIG1ha2VzIGl0IG11Y2ggaGFyZGVyIHRvIGVzY2FwZSBhIGJhZCBzaXR1YXRpb24uIApJIGRvbiBtZWFuIHRvIHBvcCB0aGlzIGJ1YmJsZSBvZiBzb2NpYWwgY29udHJvbCwgYnV0IGlmIHRoaW5ncyBhcmUgc28gYmFkIHRoYXQgbm8gZm9vZCBpcyBiZWluZyBkZWxpdmVyZWQgdG8gbXkgY2l0eSBiZWNhdXNlIGV2ZXJ5b25lIGRlYWQgb3IgZHlpbmcgdGhlbiBJIHRoaW5rIEkgV0lMTCBQQU5JQy4gCk15IGhlYXJ0IGdvZXMgb3V0IHRvIHlvdS4gClNvIHByb3ZpZGVkIHRoYXQgeW91J3JlIGdyZWF0IGF0IEhvbGQnZW0sIHlvdSBtYXkgZmluZCBPbWFoYSBuZXcgYW5kIGludmlnb3JhdGluZy4gSW4gcmVhbGl0eSwgYXNzdW1pbmcgdGhhdCB5b3UgdGFrZSBhIGxvb2sgYXQgdGhlIHByaW5jaXBsZXMgb2YgYm90aCBhbXVzZW1lbnRzIHRoZSByZWFsIGRpc3RpbmN0aW9ucyBpczouIApCb3RoIGFyZSBkaWZmZXJlbnQgdG9vbHMgYW5kIGFyZSBtZWFudCB0byBzZXJ2ZSBkaWZmZXJlbnQgcHVycG9zZXMuIApUaGUgd29tYW4gSSBzYXcgd291bGRuIGV2ZW4gbGV0IG1lIGdldCBhIHdvcmQgb3V0IGFib3V0IHdoYXQgd2FzIHdyb25nLCB3aHkgSSB3YXMgdGhlcmUuIFNoZSBhc2tlZCBtZSBvbmUgcXVlc3Rpb24sIEkgc2FpZCAid2VsbCBteSBhYmRvbWluYWwgcGFpbiAgICIgc2hlIGludGVycnVwdGVkIG1lIGFuZCB0b2xkIG1lIHNoZSBmaXggaXQgYWxsIGZvciBtZS4gCkJlbGlldmUgaXQgb3Igbm90IHBwbCB3b3VsZCBzdGlsbCBnbyB0byBzY2hvb2wgZm9yIG11c2ljLCB0aGVhdHJlIGFuZCBhcnQgYW5kIGRlZGljYXRlIHRoZW1zZWx2ZXMgY29tcGxldGVseSB0byBpdCBkZXNwaXRlIGZpbmFuY2VzLiBBcyBhIG1hdHRlciBvZiBmYWN0IHRoYXRzIHByZXR0eSBtdWNoIHdoYXQgcHBsIGVuZCB1cCBkb2luZyBoYWxmIHRoZSB0aW1lIGFueXdheS4gCkl0IG1lYW5zIHRoYXQgdGhpcyBwYXJ0aWN1bGFyIHZhcmlhbnQgb2YgcG9rZXIgY2FsbGVkIGhlYWRzIHVwIGxpbWl0IGhvbGQnZW0gKEhVTEhFKSwgY2FuIGJlIGNvbnNpZGVyZWQgc29sdmVkLgpIZSB3b3JrZWQgYWNyb3NzIENhbmFkYSBpbiBsdW1iZXIgY2FtcHMgYW5kIHdpdGggcm9hZCBidWlsZGluZyBjcmV3cywgaW5jbHVkaW5nIGEgc3RpbnQgYnVpbGRpbmcgdGhlIEFsYXNrYSBIaWdod2F5LCBhbmQgbWFueSB5ZWFycyBkcml2aW5nIHRydWNrIGZvciBLb2tvdG93IGFuZCBUTlIuIApMZSByZXRyYWl0LCBxdWkgYXZhaXQgYnRpIHNhIGZvcnR1bmUgZGFucyBsJ2ltbW9iaWxpZXIsIG1pc2FpdCAiZW50cmUgMTAwIGV0IDEuMzUwIGRvbGxhcnMiICBjaGFxdWUgbWFpbiwgZXQganVzcXUnIHVuIG1pbGxpb24gZGUgZG9sbGFycyBwYXIgbnVpdC4gQ2UgcXVpLCBwb3VyIGx1aSwgbid0YWl0ICJwYXMgYmVhdWNvdXAiIGQnYXJnZW50LgpUaGUgTmV3IE11c2ljIE1hY2hpbmUKSW4gbGVzcyBjb21wZXRpdGl2ZSBtYXJrZXRzLCB3aGVyZSB0aGUgZGVtYW5kIGZvciBzcGFjZSB0byBwbGF5IGlzIGdyZWF0LCBjYXNpbm9zIHdpbGwgb2ZmZXIgbG93ZXIgcGF5aW5nIG1hY2hpbmVzIGJlY2F1c2UgdGhleSB3aWxsIGJlIHBsYXllZCBkZXNwaXRlIHRoZSBsb3cgcGF5b2Zmcy4uIApXZSB3aWxsIGFkanVzdCBmcm9tIHRoZSB0ZW5kYW5jeSBhcyBpbnRlbGwgaXMgZ2FpbmVkLi4gCkhlIGxvYWRlZCB0aGUgc3BvaWwgaW50byBoaXMgdHJ1Y2suIApMZXQgYmUgaG9uZXN0IGh1bmRyZWRzIG9mIHJlYXNvbnMgYnV0IG1vdXNlICsgS0Igc2VlbXMgdG8gYmUgdGhlIGxlYXN0IG9uZSBub3cgaW1vLiAKVGhlIG1haW4gZ2VybWFuIHJpZmxlIGNhbGlicmUgd2FzIGluIDcuOTI1N21tIE1hdXNlciB3aGljaCBjYW4gcmVhbGx5IGJlIGZpcmVkIGZyb20gd2VhcG9ucyBkZXNpZ25lZCB0byB0YWtlIHRoZSBzb3ZpZXQgNy45MjU3bW1SIGJlaW5nIHRoZSBzb3ZpZXQgbWFpbiBjYWxpYnJlIGZvciB0aGVpciBMTUdzIGFuZCBNb3NpbnMuIEJ1dCB0aGV5IGRpZCBidXkgYSBmYWlyIG51bWJlciBvZiB0aGUgR2VybWFuIE1hdXNlciBDOTYgd2hpY2ggSSBiZWxpZXZlIHRoZXkga2VwdCBpbiA3LjYzMjVtbSBNYXVzZXIgd2hpY2ggdGhlIEdlcm1hbnMgYWxzbyB1c2VkIHNvbWUgb2YuLiAKU28gTXIuIApTb21ldGltZXMgaXQgd2lsbCB3b3JrIHdheSBiZXR0ZXIuLiAKRGF2aWQgaGFkIG1hbnkgd29uZGVyZnVsIGF0dHJpYnV0ZXMsIGJ1dCBoaXMgbW9zdCBub3RhYmxlIHdvdWxkIGJlIGhpcyBnZW5lcm9zaXR5IGFuZCB3aWxsaW5nbmVzcyB0byBoZWxwIG90aGVycy4gSGUgbmV2ZXIgaGVzaXRhdGVkIHRvIGhlbHAgYSBmcmllbmQgb3IgZmFtaWx5IG1lbWJlciBpbiBuZWVkLCBhbHdheXMgcHV0dGluZyBvdGhlcnMgbmVlZHMgYmVmb3JlIGhpbXNlbGYuIApJdCBpcyB2ZXJ5IHZlcnkgZGlmZmljdWx0IGFzIHlvdXIgYnJhaW4gd2lsbCBjb25zdGFudGx5IHJlbWluZCB5b3UgdGhhdCB5b3UgIm5lZWQgaXQiIHRvIGJlIGhhcHB5IGJ1dCBpdCByZWFsbHkgdGhlIGFkZGljdGlvbiB0YWxraW5nLiAKTWlsZXMgc2hha2VzIGhpcyBoZWFkLCBhIHNpZ24gb2YgaW5ub2NlbmNlIGFuZCBvZiBvbmUgdHJ1bHkgdHJ5aW5nIHRvIHByb2Nlc3MgYW4gZXhjZXNzaXZlIGFib3V0IG9mIGluZm9ybWF0aW9uIHRoYXQgc2VlbXMgdG8gYmUgcmF0aGVyIGRpc2NvcmRhbnQgYW5kIGFzIGlmIGl0IGlzIGNvbWluZyBvdXQgb2Ygc29tZSBiYWQgYWN0aW9uIG1vdmllLiBUaGUgbG9vayB0aGF0IE1pbGVzIHJldHVybnMgdG8gdGhlIG1hbiBpcyBwbGVhc2FudCBidXQgc2VyaW91cy4gIldoZW4geW91IHdlcmUgaW50cm9kdWNlZCB0aGlzIG1vcm5pbmcsIHlvdSB3ZXJlIHByZXNlbnRlZCBhcyBwYXJ0IG9mIHRoZSBTV0FUIHRlYW0uIApUaGlzIGlzIGhvdyBSZWlraSBoZWFscyEgSXQgaGVscHMgeW91ciBib2R5IHV0aWxpemUgaXRzIGVuZXJneSBpbiBhIG1vcmUgYmVuZWZpY2lhbCB3YXkuLiAKSidhdmFpcyBkaiBldSBsZSBib25oZXVyIGRlIGdvdGVyIHNvbiBwYWluLCBvbiBhIGV1IGRlcyBjaGFuZ2VzIHBhciBtYWlsIG91IHRscGhvbmUsIGplIGwnYXZhaXMgaW50ZXJ2aWV3IG1haXMgYyd0YWl0IGxhIHByZW1pZXIgZm9pcyBxdWUgamUgbGUgcmVuY29udHJhaXMgZGFucyBsYSAidmllIHJlbGxlIi4gCkxhIHBlcnNvbm5lIHBvdXJyYSBzZXVsZW1lbnQgdm9pciBzYSByZXNwb25zYWJpbGl0IGNpdmlsZSBlbmdhZ2UgcG91ciBycGFyZXIgbGUgZG9tbWFnZSBjYXVzLCBjb21tZSBsZSBwcnZvaXQgbCdhcnRpY2xlIDQxNCAzIGR1IENvZGUgQ2l2aWwgKEFuY2llbiBhcnRpY2xlIDQ4OSAxIGR1IENvZGUgQ2l2aWwpIDogIENlbHVpIHF1aSBhIGNhdXMgdW4gZG9tbWFnZSAgYXV0cnVpIGFsb3JzIHF1J2lsIHRhaXQgc291cyBsJ2VtcGlyZSBkJ3VuIHRyb3VibGUgbWVudGFsIG4nZW4gZXN0IHBhcyBtb2lucyBvYmxpZyAgcnBhcmF0aW9uIC4gCkluIG15IG93biByZXNlYXJjaCBmb3IgbXkgYm9vayAoQW1lcmljYW4gUGxhc3RpYywgQmVhY29uIDIwMTApIEkgbWV0IHBvbGljZSBvZmZpY2VycywgdGVhY2hlcnMsIGJhbmsgdGVsbGVycyBhbmQgcmVhbCBlc3RhdGUgYWdlbnRzLiBJIGFsc28gbWV0IHJlY2VudCBjb2xsZWdlIGdyYWR1YXRlcyB3aXRoICQxMDAsMDAwIGluIHN0dWRlbnQgbG9hbnMgdGFraW5nIG9uIGV2ZW4gbW9yZSBjcmVkaXQgYmVjYXVzZSAiSSBnb2luZyB0byBkaWUgaW4gZGVidCBhbnl3YXkgc28gd2hhdCBkaWZmZXJlbmNlIGRvZXMgaXQgbWFrZSBpZiBJIHRha2Ugb3V0ICQxMCwwMDAgbW9yZT8iCkx1Y2lhIEhvdGVscyB3aXRoIFBvb2xzUGV0IEZyaWVuZGx5IEhvdGVscyBpbiBTdC4gTHVjaWFQb3B1bGFyIFN0LiAKIldoaWxlIHRob3NlIGF0IG91ciBob21lIGFyZSBwcmF5aW5nIGFuZCBzZWVraW5nIHRoZSBMb3JkJ3MgZmFjZSB3ZSBhc2sgeW91IGFsbCB0byBwbGVhc2UgcHJheSBmb3IgdXMsIiB0aGUgZmF0aGVyIG9mIHNpeCB3cm90ZSBvbiBoaXMgRmFjZWJvb2sgcGFnZSwgSmFpbGVkIEZvciBIb21lIFdvcnNoaXAuICJJIHdhbnQgeW91IGFsbCB0byBrbm93IHRoYXQgd2UgbG92ZSB5b3UgYW5kIHRoYW5rIHlvdSBhbGwgZm9yIHlvdXIgc3VwcG9ydC4gVGhvdWdoIGl0IHdpbGwgYmUgdmVyeSBkaWZmaWN1bHQgd2Uga25vdyB0aGF0IHdlIHdpbGwgd2luIGluIHRoZSBlbmQuIEdsb3J5IHRvIEdvZCEiCkNpcmkga2VlcHMganVtcGluZyBvdmVyIHRoaW5ncyB0aGF0IGkgdHJ5IHRvIGtlZXAgaGVyIGNvbnRhaW5lZCBpbiBvbmUgcm9vbSB3aXRoLCBhbmQgc2hlIGxvdmVzIHRvIHBlZSBvbiB0aGUgY291Y2ggLiBCdXQgc2hlIHNpbmdzIG9uIGNvbW1hbmQgYWxtb3N0LCBhbmQgaW0gZ29ubmEgZ2V0IHRoZW0gYm90aCBsaXR0bGUgc3dlYXRlcnMgZm9yIG5leHQgd2ludGVyLiAKQmFsbG90IHByb3Bvc2FsIHByb21vdGVzIHRvdXJpc20KSSB0aGluayBzaGUgYWN0cyBvYmxpdmlvdXMgdG8geW91IGJlaW5nIHNvIGludG8gaGVyIGJlY2F1c2Ugc2hlIGRvZXNuIGZlZWwgdGhlIHNhbWUgd2F5IGFib3V0IHlvdSBhbmQgZG9lc24gd2FudCB0byBkZXZlbG9wIHlvdXIgcmVsYXRpb25zaGlwIGludG8gc29tZXRoaW5nIG5ldy5JIGRvbmUgdGhpcyB0byBnaXJscyBpbiB0aGUgcGFzdC4gTG9sLiAKUXVhbnRvIGFsIGRpc2d1c3RvIHBlciBjZXJ0ZSB1c2NpdGUgbGV0dGVyYXJpZSB0aSByYWNjb250byB1biBhbmVkZG90bzogcGVyc29uZSBjaGUgY29ub3NjbyBhdmV2YW5vIGFwZXJ0byB1bmEgZ3JhbiBiZWxsYSBsaWJyZXJpYSB2aWNpbm8gYWxsZSBmYWNvbHQgZGkgdW1hbmlzdGljaGUgZGVsbGEgbWlhIGNpdHQ7IGJlbmUsIGkgcHJvZmVzc29yaSAgbm90YSBiZW5lOiBpIHByb2Zlc3NvcmkgIGFuZGF2YW5vIGEgY29tcHJhcmUgcm9tYW56aSBlIHNhZ2dpc3RpY2EgYWxsYSBmZWx0cmluZWxsaSAocGkgbG9udGFuYSkgcGVyY2ggImhvIHNlbXByZSBmYXR0byBjb3MiLCBsYSBzdGVzc2EgZmVsdHJpbmVsbGkgY2hlIG9nbmkgbmF0YWxlIGhhIGxhIHN1YSBwaWxhIGRpIHZlc3BhL3ZvbG8vbGlicm9pZGUgYSBjYXNvIChlIGdsaSBzdHVkZW50aT8gYWgsIHF1ZWxsaSBsZWdnb24gcG9jbykuIGMgaWwgcmlzY2hpbyBjaGUgZGl2ZW50aSAicXVhbGl0ID0gcXVlbGxvIGNoZSBwaWFjZSBhIG1lIi4KU29jaWV0eSB3aWxsIG1vdmUgb24gd2l0aG91dCB5b3UgYW5kIHlvdXIgcGF0aGV0aWMgYXR0ZW1wdCBvZiBjaXJjbGUgamVya2luZyB3aXRoIGxpa2UgbWluZGVkIHBlb3BsZSBvbmx5IHByZXZlbnRzIGV4cGFuZGluZyB5b3VyIHdvcmxkIHZpZXcgYW5kIHByb3ZpZGluZyBBQ1RVQUwgY2hhbmdlLiAKSnVzdCwgcGxlYXNlLiBJIGFtIGFza2luZyB5b3UgYXMgYSBmYXZvciB0byBqdXN0IHdhdGNoIGl0LiBJZiBub3RoaW5nIGVsc2UsIGl0IHdpbGwgYWxsb3cgeW91IHRvIGRvIHRoZSBzYW1lIGFuZCByZWJ1dCBpdCBtb3JlIGVmZmVjdGl2ZWx5LiBCdXQgSSBkb24ndCB0aGluayB0aGF0J3Mgd2hhdCdzIGdvaW5nIHRvIGhhcHBlbi4gVGhlcmUgaXMgbW9yZSB0aGFuIGp1c3QgdGVzdGltb255LCB0aGVyZSBpcyBldmlkZW5jZSwgYXQgbGVhc3Qgb2YgdGhlIGdyb29taW5nIGFuZCBpbmFwcHJvcHJpYXRlIGJlaGF2aW9yLgpXaGVuIHdlIGFza2VkLCB0aGV5IHNhaWQgcmVhbGx5PyBUaGF0J3Mgc28gY29vbC4gCkxhIHRyYWRpdGlvbiBqdWl2ZSBzdWdncmUgcXVlIGxhIHNhbnQgZmFpdCBwYXJ0aWUgZCd1biBvcmRyZSBuYXR1cmVsIGV0IGRpdmluIGRvbnQgbCdleHByZXNzaW9uIGVzdCBjZXR0ZSBiZWF1dC4gClNob3VsZCBub3QgYmUgYSBwcm9kdWN0IHNvbGQgaW4gdGhlIG1hcmtldCBmb3IgcHJvZml0LiAKQWxzbyBsaWtlIHRoYXQgdGhlIGxhc3QgYmF0dGxlIGlzbiBhIGJhdHRsZSwgb3IgYXQgbGVhc3Qgbm90IGEgdHJhZGl0aW9uYWwgb25lLiAKQXJteSBTcGVjaWFsIFNlcnZpY2VzLiBUaGUgeW91bmcgb2ZmaWNlciwgd2hvIGF0dGFpbmVkIGZhbWUgb24gdGhlIGdyaWRpcm9uIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFdpc2NvbnNpbiBhZnRlciBhbHNvIHN0YXJyaW5nIGF0IEphbmVzdmlVZSBIaWdoIFNjaG9vbCwgd2FzIGdyYWR1YXRlZCBmcm9tIHRoZSB1bml2ZXJzaXR5IGluIEp1bmUsIDE5NTIsIHdoZXJlIGhlIGNvbXBsZXRlZCB0aGUgUk9UTyB0cmFpbW5nIHByb2dyYW0uIApUaGVyZSBpcyBhIGNsYXNzaWMgYmVsbCBjdXJ2ZSB0byB0aGUgc3BlZWQgd2l0aCB3aGljaCBwZW9wbGUgZGV0b3ggbWVyY3VyeSwgYnV0IHRoZW4gdGhlcmUgaXMgbGFyZ2UgcG9wdWxhdGlvbiAob3ZlciAxMCBwZXJjZW50KSB0aGF0IGRldG94aWZ5IG1lcmN1cnkgdmVyeSBzbG93bHkuIApPbmUgKGNvbnNlcnZhdGl2ZSkgd2F5IHRvIGFwcHJvYWNoIHBva2VyIGFzIGEgcHJvZml0YWJsZSBob2JieSBpcyBiZWxvdywgYnV0IHRoZXJlIGFyZSBsb3RzIG9mIHdheXMgaW4uLiAKSXQgYSBzdWJzY3JpcHRpb24gc2VydmljZSBhbmQgbm90aGluZyBOaW50ZW5kbyBoYXMgZG9uZSBpbiB0aGUgcGFzdCBzdWdnZXN0cyB0aGF0IHRoZSBpbmZyYXN0cnVjdHVyZSBmb3IgdGhpcyBuZXcgc2VydmljZSB3aWxsIGJlIHdvcnRoIHBheWluZyBmb3IuIEluIG9yZGVyIHRvIHVzZSB2b2ljZSBjaGF0IGluIGdhbWVzLCB5b3UgaGF2ZSB0byB1c2UgYW4gYXBwIG9uIHlvdXIgcGhvbmUgdG8gZG8gc28gYnV0IHlvdSBzdGlsbCBoYXZlIHRvIHBheSBOaW50ZW5kbyBmb3IgaXQuLiAKU28gbG9uZyBhcyB0aGUgZ2FtZSBkb2VzbiBiZWNvbWUgYWJvdXQgdGhlICJob3JuZXQgbWV0YSIgbGlrZSBpdCB3YXMgdGhlIGxhc3QgdGltZSBJIHdhcyBwbGF5aW5nIHRoZSBiZXRhdGVzdC4gT3IgdGhhdCBldmVyeW9uZSBtdXN0IHVzZSBmaWdodGVycyBvZiB0aGF0IHNpemUgdG8gZG8gd2VsbCBldmVuLiAKSWYgSSB3YXMgSVAsIG1heWJlIGEgY2hlY2sgd291bGQgYmUgYmV0dGVyLiBJZiBJIGRvIG9wdCB0byBjaGVjaywgdGhlbiBJIHN1cHBvc2UgSSBjYWxsIGRvd24gb24gbW9zdCBicmljayBydW5vdXRzLiBXaGVuIHZpbGxhaW4gcmFpc2VzIGhlIGhhcyBtYWlubHkgc2V0cyBhbmQgZmx1c2ggZHJhd3MuIApNciBSb2JlcnQgR3JhZW1lIFNDT1RUCk1zIEJlc3RtYW4gc2FpZDogJydUaGUgaGFybWZ1bCBhZmZlY3RzIG9mIGdhbWJsaW5nIGFkdmVydGlzaW5nIGFyZSB3ZWxsIGtub3duIGJ1dCB0aGlzIHdhcyB0aGUgZmlyc3Qgc3R1ZHkgdG8gbG9vayBhdCB0aGUgaW1wYWN0IG9mIGdhbWJsaW5nIHZlbnVlcyBvbiBjaGlsZHJlbi4gClNvIHlvdSBjb3VsZCBzYXkgdGhhdCBJIGRvbid0IG1pbmQgY29uZnJvbnRhdGlvbi4KTCBkaXQgcXUgdmEgcmVwYXNzZXIuMjEgaCAyMCBVbiBhdXRyZSBjbGllbnQgc2UgcHJzZW50ZSAgbGEgcG9ydGUuIExhIHJjZXB0aW9ubmlzdGUgbGUgcmVjb25uYXQuIExhIGRlcm5pcmUgZm9pcywgbGVzIGZpbGxlcyBsIHJlZnVzIHBhcmNlIHF1IHNlbnRhaXQgdHJvcCBtYXV2YWlzLiAKV2UgdG9vayBsaWZ0aW5nIGluc2FuZWx5IHNlcmlvdXNseSwgc3BlbnQgMiBob3VycyBhdCB0aGUgZ3ltIGEgZGF5LCB0b29rIGV2ZXJ5IHN1cHBsZW1lbnQgdW5kZXIgdGhlIHN1biwgYSBMT1Qgb2YgbmF0dXJhbCB2aXRhbWlucywgcHJvdGVpbiwgZGF5IHByb3RlaW4sIG5pZ2h0IHByb3RlaW4sIHByZSB3b3Jrb3V0LCBldGMsIGNyeWF0aW5lLCBhIHNoaXQgdG9uIG1vcmUgdGhhdCBJIGNhbid0IHRoaW5rIG9mLCBhbmQgbW9zdCBpbXBvcnRhbnRseSBtYXNzIHRlY2guIApBbGwgdGhlIGNhZmVzIEkgZ29uZSB0byBmb2xsb3cgdGhpcy4gSW4gU2VvdWwgYW5kIG91dC4gCk5vLiAKSSBhbmQgbW9zdCB0aGVyYXBpc3RzIEkgdGFsa2VkIHdpdGggd29uIGVuZ2FnZSBpbiBtdWNoIGNvbnZlcnNhdGlvbiB1bmxlc3MgdGhlIGNsaWVudCBzdGFydHMgaXQuLiAKQ2VsZWJyaXR5IEdhbWJsZXJzOiBUaGUgbGlzdCBvZiB0aGUgc2FtZSBpbGx1c3RyYXRlcyB0aGUgZm9sbG93aW5nIG5hbWVzOkluZmFtb3VzIEdhbWJsZXJzOiBUaGUgbm90b3Jpb3VzIG5hbWVzIHRvIGJlIGxpc3RlZCB1bmRlciB0aGlzIGNhdGVnb3J5IGFyZSB0b28gbWFueSB0byBwdXQgYSBzdG9wIG9uLiBCdXQgc3RpbGwgaXQgd291bGQgYmUgcXVpdGUgaW5zaWduaWZpY2FudCB0byBub3QgdG8gbWVudGlvbiB0aGUgbmFtZXMgb2YgdGhlIHNhbWUgdG8gc3VwcG9ydCB0aGUgYWZvcmVzYWlkIHN0YXRlbWVudC4gVGhlcmVmb3JlIHRoZSBzYW1lIGFyZSBsaXN0ZWQgYXMgdW5kZXI6LgpXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZVRoZSBiaWdnZXN0IHdpbm5lcnMgaW4gb3VyIGhpc3RvcmljYWxseSBjbG9zZSBlbGVjdGlvbiBtYXkgeWV0IGJlIHByb2JsZW0gZ2FtYmxlcnMuIApBbnl3YXkgc2hlIHN0YXJ0ZWQgdG8gdmVudCBhYm91dCB0aGUgdHJvdWJsZXMgaW4gaGVyIGxpZmUgb25lIHRpbWUgd2hpbGUgc2hlIHdhcyBvdmVyIGNsZWFuaW5nIGFuZCB3ZSB3ZXJlIHZpc2l0aW5nIChhbmQgaGVyIHByb2JsZW1zIGFyZSBOVU1FUk9VUyAgIHJhbmRvbSBpbGxlZ2l0aW1hdGUgZ3JhbmQgY2hpbGRyZW4sIGhhdmluZyBraWRzIHRvbyB5b3VuZywgaGF2aW5nIGdyYW5ka2lkcyB0b28geW91bmcsIGtpZHMgYXJlIGRydWcgYWRkaWN0cywgb25lIGtpZCdzIGh1c2JhbmQgaXMgaW4gcHJpc29uIGZvciBkb21lc3RpYyB2aW9sZW5jZSwgdGhpcyBsaXN0IGlzIGxpa2Ugd2hpdGUgdHJhc2ggYmluZ28pLiBJJ20gaGFwcHkgdG8gbGlzdGVuIGJlY2F1c2UgSSB1bmRlcnN0YW5kIHRoZSBuZWVkIGdvIGp1c3QgdmVudC4gClNvIGFyZSB0aGUgR2VybWFuIHJlc2VhcmNoZXJzIGNvcnJlY3QgdGhhdCBwb2tlciBzaG91bGQgdGh1cyBiZSBjbGFzc2lmaWVkIGFzIGdhbWJsaW5nPyBOb3QgbmVjZXNzYXJpbHkuIEEgMjAwOCBzdHVkeSBjb25jbHVkZWQgdGhhdCBwb2tlciBpcyBhIHNraWxsICAgc3R1ZGVudHMgd2hvIHJlY2VpdmVkIHNvbWUgYmFzaWMgcG9pbnRlcnMgcGVyZm9ybWVkIGJldHRlciB3aGlsZSBwbGF5aW5nIDEwMDAgaGFuZHMgb2YgcG9rZXIgdGhhbiB0aG9zZSB3aG8gcmVjZWl2ZWQgbm8gdHJhaW5pbmcgYXQgYWxsLiAKVW5sZXNzIHlvdSBhcmUgc2lnbmVkIGluIHRvIGEgSHViUGFnZXMgYWNjb3VudCwgYWxsIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIGlzIGFub255bWl6ZWQuIEFtYXpvbiBXZWIgU2VydmljZXNUaGlzIGlzIGEgY2xvdWQgc2VydmljZXMgcGxhdGZvcm0gdGhhdCB3ZSB1c2VkIHRvIGhvc3Qgb3VyIHNlcnZpY2UuIChQcml2YWN5IFBvbGljeSlDbG91ZGZsYXJlVGhpcyBpcyBhIGNsb3VkIENETiBzZXJ2aWNlIHRoYXQgd2UgdXNlIHRvIGVmZmljaWVudGx5IGRlbGl2ZXIgZmlsZXMgcmVxdWlyZWQgZm9yIG91ciBzZXJ2aWNlIHRvIG9wZXJhdGUgc3VjaCBhcyBqYXZhc2NyaXB0LCBjYXNjYWRpbmcgc3R5bGUgc2hlZXRzLCBpbWFnZXMsIGFuZCB2aWRlb3MuIApNYXliZSB0aGV5IHBsYW5uZWQgc29tZXRoaW5nIGJlZm9yZSB0aGUgYmlnIGV2ZW50LiAKVG8gd2h5IHRoZSBwcmVmZXJlbmNlIG9mIHlveW8gdG8ga2VuZGFtYSwgSSBwZXJzb25hbGx5IGZlZWwgdGhhdCB5b3lvIGlzIG1vcmUgZXhwcmVzc2l2ZSB0aGF0IGtlbmRhbWEuIEtlbmRhbWEgYmVjb21lcyBhIGxvdCBvZiByb3RlIHJlcGV0aXRpb24sIGFuZCBhIGxvdCBvZiB0aGUgaGlnaGVyIGxldmVsIHRyaWNrcyBhcmUgc2ltcGx5LCB0cmljayB5b3UgYmVlbiBkb2luZywgYnV0IHdpdGggbW9yZSBzcGlucyBOb3QgdGhhdCBpdCBlYXN5IHRvIGFkZCB0aG9zZSBleHRyYSBzcGlucywgaXQgY2FuIGp1c3QgYmVjb21lIGxlc3MgZXhjaXRpbmcgYXMgdGltZSBnb2VzIG9uLCBJIHRoaW5rLiAKQW5kIHdoaWxlIEkgaW1hZ2luZSB0aGUgZmFjdCB0aGF0IHNoZSBkb2luZyB0aGlzIGF0IGFsbCBpcyBodXJ0ZnVsLCBpbiBwcmFjdGljZSBzaGUgcHJvYmFibHkgd29uIGV2ZW4gbWFuYWdlIHRvIGluY29udmVuaWVuY2UgZm9yIHlvdSwgeW91IGNhbiBhbHdheXMganVzdCBhbm5vdW5jZSBvbiBzb2NpYWwgbWVkaWEgdGhhdCB0aGlzIGlzbiBhIHRoaW5nIHlvdSBwYXJ0aWNpcGF0aW5nIGluIGluIGFueSB3YXkgYW5kIGFueW9uZSB3aXRoIGEgbGljayBvZiBzZW5zZSB3aWxsIHBhc3Mgb24gYXR0ZW5kaW5nIHlvdXIgbW9tIHNhZCBsaXR0bGUgbmFyYyBjaXJjdXMuLiAKSGF2ZSBzY29saW9zaXMsIGFuIG9mdGVuIHBhaW5mdWwgY29uZGl0aW9uIHRoYXQgY2F1c2VzIHRoZSBzcGluZSB0byBjdXJ2ZSBpbiBhbiBTIHNoYXBlLCBhY2NvcmRpbmcgdG8gdGhlIE5hdGlvbmFsIFNjb2xpb3NpcyBGb3VuZGF0aW9uLiAKVGhlbiB5b3UgdGhyb3dpbmcgdGhlIGRpY2UgdGhlIHdyb25nIGRpcmVjdGlvbi4KVGhhdCBpcywgYXQgdGhpcyByYWlzZSBzaXplIGFuZCB2cyB0aGlzIHBsYXllciBpdCBtaWdodCBiZSB0aGF0IHlvdSB3YW50IHRvIHBsYXkgY2xvc2VyIHRvIGEgU0Igc3RyYXRlZ3kgdGhhbiBhIEJCIHN0cmF0ZWd5IHdpdGggdGhlIGFkZGVkIGJlbmVmaXQgb2YgYmVpbmcgbGFzdCB0byBhY3QuLiAKU28sIEkgaGF2ZSBuYXJjb2xlcHN5LCB3aGljaCBpcyBsaWtlIGxpdmluZyBsaWtlIHlvdSd2ZSBiZWVuIGF3YWtlIGZvciAyNCA0OCBob3VycyByZWdhcmRsZXNzIG9mIGhvdyBtdWNoIHNsZWVwIHlvdSBnZXQuIEkgdHJ5IHJlYWxseSBoYXJkIHRvIG1ha2Ugc3VyZSB0aGF0IEkgZ2V0IGJldHRlciBzbGVlcCBzaW5jZSBnZXR0aW5nIG1vcmUgc2xlZXAgZG9lc24ndCBoZWxwLiBJIHVzZSBhIHNsZWVwIG1hc2sgZm9yIG5hcHMgYW5kIHNsZWVwaW5nIGluIG9uIHRoZSB3ZWVrZW5kcyB3aGVuIEknbSBvZmYgd29yay4gRHVyaW5nIHRoZSB3ZWVrZGF5cywgSSBkb24ndCB1c2UgYSBzbGVlcCBtYXNrIGJlY2F1c2UgSSB1c2UgYSBzdW5yaXNlIGFsYXJtIGNsb2NrIHRvIHdha2UgdXAuIEl0J3MgYWxzbyBpbXBvcnRhbnQgdGhhdCB5b3UgcGxhbiBmb3IgYSBnb29kIG5pZ2h0IG9mIHNsZWVwLiBNYWtlIHN1cmUgeW91ciByb29tIGlzIGFuIG9wdGltYWwgdGVtcGVyYXR1cmUgIHlvdSdyZSBub3Qgd2FraW5nIHVwIGhvdCBvciBjb2xkLiBNYWtlIHN1cmUgeW91ciBiZWRkaW5nIGlzIGNvbWZvcnRhYmxlLCB5b3VyIHBpbGxvdyBpcyBpbiBnb29kIGNvbmRpdGlvbiBhbmQgdGhlIHJpZ2h0IHR5cGUgZm9yIHlvdXIgc2xlZXAgc3R5bGUgYW5kIHJpZ2h0IHNpemUgZm9yIHlvdXIgYm9keS4gSSB0dXJuIG9uIG15IGVzc2VudGlhbCBvaWwgZGlmZnVzZXIgd2l0aCBsYXZlbmRlciAobXkgcHJlZmVyZW5jZSksIHR1cm4gb24gbXkgc3VucmlzZSBhbGFybSBjbG9jaydzIGRpbW1pbmcgZmVhdHVyZSBzbyB0aGF0IGl0IGRpbXMgdG8gZGFya25lc3MgaW4gMzAgbWludXRlcy4gSSBnZXQgaW4gYmVkLCByZWxheCwgSSB3ZWFyIGJsdWUgYmxvY2tlciBnbGFzc2VzIGlmIEknbSBwbGF5aW5nIHdpdGggbXkgcGhvbmUuIEFzIHNvb24gYXMgbXkgY2xvY2sgaXMgZGFyaywgSSdtIHByZXR0eSBtdWNoIGFzbGVlcCBtaW51dGVzIGxhdGVyLiBMYXkgb2ZmIGNhZmZpZW5lIHNldmVyYWwgaG91cnMgYmVmb3JlIGJlZHRpbWUuIEkgc3RvcCBkcmlua2luZyBpdCBhdCBsZWFzdCA1IGhvdXJzIGJlZm9yZSBiZWQuIEkgY2FuIHNsZWVwIHJlZ2FyZGxlc3MsIGJ1dCBpdCdzIG11Y2ggbW9yZSBmcmFjdHVyZWQuIElmIHlvdSBjYW4gZ28gdG8gYmVkIGFuZCB3YWtlIHVwIGF0IHRoZSBzYW1lIHRpbWUgZXZlcnkgZGF5IHRoYXQgd291bGQgYmUgaWRlYWwuCkdpdmUgQmFjayBXaGF0IFlvdSBHZXQgT3V0CldyYWl0aCBhbmQgdGhlcmlvbiBqdXN0IGNhbm5vdCBtYXRjaCB0aGUgZGFtbiB0aGluZ3MgaW4gYXJtb3IsIGZpcmVwb3dlciwgb3IgbWFuZXV2ZXJhYmlsaXR5LiAKSSByZWNvbW1lbmQgcmVhZGluZyBFZCBNaWxsZXIncyBib29rcyBvbiBsb3cgc3Rha2VzIGNhc2ggZ2FtZSBzdHJhdGVneS4gSXQgY291bGQgaGVscCB5b3UgdHVybiB0aGUgY29ybmVyIGFuZCBiZWNvbWUgcHJvZml0YWJsZSBpbiBjYXNoIGdhbWVzLiBZb3VyIGV4cGVyaWVuY2UgaW4gdG91cm5leXMgd2lsbCBoZWxwLCB0b28uCjE6IEZCIExpbWl0ZXI7IEJsb2NrIGZhY2Vib29rIG9yIHlvdXR1YmUgb24geW91ciBQQy4gQmxvY2sgZmFjZWJvb2sgb3IgeW91dHViZSBhY2Nlc3MgY29tcGxldGVseSBvciBsaW1pdCBhY2Nlc3MgdG8gc3BlY2lmaWMgdGltZXMgZHVyaW5nIHRoZSB3ZWVrLgpJZiB0aGF0IGZhaWxzICh3aGljaCB1bmZvcnR1bmF0ZWx5IGl0IGhhcyksIGEgcG9ydGlvbiBvZiB0aGUgcmFrZSBiYWNrIGdvZXMgdG93YXJkcyB0aGUgYmFkIGRlYnQuIApUaGUgZWlnaHQgTWlsbGVubml1bSBEZXZlbG9wbWVudCBHb2FscyAoTURHcykgICB3aGljaCByYW5nZSBmcm9tIGhhbHZpbmcgZXh0cmVtZSBwb3ZlcnR5IHJhdGVzIHRvIGhhbHRpbmcgdGhlIHNwcmVhZCBvZiBISVYvQUlEUyBhbmQgcHJvdmlkaW5nIHVuaXZlcnNhbCBwcmltYXJ5IGVkdWNhdGlvbiwgYWxsIGJ5IHRoZSB0YXJnZXQgZGF0ZSBvZiAyMDE1ICAgZm9ybSBhIGJsdWVwcmludCBhZ3JlZWQgdG8gYnkgYWxsIHRoZSB3b3JsZCdzIGNvdW50cmllcyBhbmQgYWxsIHRoZSB3b3JsZCdzIGxlYWRpbmcgZGV2ZWxvcG1lbnQgaW5zdGl0dXRpb25zLiBUaGV5IGhhdmUgZ2FsdmFuaXplZCB1bnByZWNlZGVudGVkIGVmZm9ydHMgdG8gbWVldCB0aGUgbmVlZHMgb2YgdGhlIHdvcmxkJ3MgcG9vcmVzdC4gCkkgYWx3YXlzIGJvYXJkZWQgYXQgdGhlIHZlcnkgZnJvbnQgKG9yIGJhY2s/IGdlZXogaSBkb24gZXZlbiByZW1lbWJlciBhdCB0aGlzIHBvaW50KSBvZiB0aGUgdHJhaW4gYW5kIGF0IG1vc3QgMyBvciA0IHBlb3BsZSBjb3VsZCBib2FyZCBlYWNoIHRpbWUgdGhlIHRyYWluIGNhbWUsIHdoaWNoIGlzIGFib3V0IGhvdyBtYW55IHBlb3BsZSB3b3VsZCBsaW5lIHVwIGJldHdlZW4gdHJhaW5zIGFueXdheSBzbyBpIHByZXR0eSBtdWNoIGFsd2F5cyBib2FyZGVkIHJpZ2h0IGF3YXkuIFNudSBzdGF0aW9uIGlzIHRoZSBsYXN0IGlzbGFuZCBwbGF0Zm9ybSBiZWZvcmUgc2Ftc3VuZyBzdGF0aW9uIHRob3VnaCBzbyBpIGp1c3QgbGVhbmVkIGFnYWluc3QgdGhlIGRvb3IgaSBjYW1lIGluIHNpbmNlIGl0IG5ldmVyIG9wZW5lZCBhZ2Fpbi4gQm9uZ2NoZW9uIGlzIHJpZ2h0IGJlZm9yZSBzbnUgaWlyYyBzbyB5b3UgbWF5IG5vdCBoYXZlIHRoZSBzYW1lIHByaXZpbGVnZSBhbmQgbWF5IGp1c3QgaGF2ZSB0byBzdGFuZCB0aGVyZSB3aXRoIG5vIGhhbmRsZSBvciBzdXBwb3J0IGFuZCBidW1wIGludG8gcGVvcGxlLi4gClNjaG1hIGNpIGRlc3NvdXMpLCBwcnNlbnQgIGhhdXRldXIgZGUgODAgJSBkYW5zIGwgZGUgY2l0cm9uLCBlc3QgbCBkIElsIGVzdCBkb25jIG5jZXNzYWlyZSBkZSBkaWx1ZXIgY2VzIGh1aWxlcyBlc3NlbnRpZWxsZXMgZGFucyB1bmUgaHVpbGUgdmd0YWxlIGF2YW50IHRvdXRlIGFwcGxpY2F0aW9uIGFmaW4gZCB2aXRlciBsYSBkZXJtb2NhdXN0aWNpdC4uIApUaGlzIGxlYWRzIG1lIHRvIHRoZSBmb3J0aCBwb3RlbnRpYWwgZW52aXJvbm1lbnRhbCBmYWN0b3JzLiBJIGhhZCBzZXZlcmFsIGNyb3NzaW5ncyB3aGVyZSB0aGUgbXVuaWNpcGFsaXR5IHdvdWxkIGluY29ycmVjdGx5IGRlcG9zaXQgc2FsdCBvbiB0aGUgImlzbGFuZCIgYW5kIGNhdXNlIGhhdm9jIHdpdGggb3VyIGNyb3NzaW5nIGNvbXB1dGVycy4gQmFzaWNhbGx5IHdoZW4gaXQgcmFpbnMgb3Igc25vd3MgYW5kIHlvdSBhZGQgdGhlIHNhbHQgdG8gdGhlIGVxdWF0aW9uLCBhbiBlbGVjdHJvbHl0ZSBpcyBjcmVhdGVkIGFuZCB0aGUgcmVkdWNlZCBiYWxsYXN0IHJlc2lzdGFuY2UgYmV0d2VlbiB0aGUgcmFpbHMgY2FuIGNvbmZ1c2UgaG93IHRoZSBzeXN0ZW0gZGV0ZWN0cyBhcHByb2FjaGluZyB0cmFpbnMuWW91IGNhbiBzZWUgaG93IHRoZSBzeXN0ZW0gZG9lcyBub3QgcmVzcG9uZCB0byB0aGUgdHJhaW4gb24gdGhlIGFwcHJvYWNoLiAKRGVzcGl0ZSB0aGUgdmVyeSByZWFsIHBvc3NpYmlsaXR5IHRoYXQgdGhpcyBzb3J0IG9mIHByb3BhZ2FuZGEgd2lsbCBsZWFkIHRvIHRoZSBkZWF0aCBwZW5hbHR5IGZvciBtZW4gd2hvIGhhdmUgc2V4IHdpdGggb3RoZXIgbWVuIGluIFVnYW5kYSwgdGhlIG1hbiBpcyByaWRpY3Vsb3VzIGFuZCBjbGVhcmx5IGxvY2F0ZWQgZWxzZXdoZXJlIHRoYXQgQW1lcmljYW4gcXVlZXJzIGhhdmUgcmVzcG9uZGVkIHdpdGggaHVtb3IgbW9yZSB0aGFuIG91dHJhZ2UgLiBGYWN0LCB0aGVyZSBldmVuIGEgZGFuY2UgcmVtaXggb2YgdGhlIG1pbmlzdGVyIGFudGkgaG9tbyByZW1hcmtzLi4gCkF0IHRoZSBoZWFydCBvZiB0aGlzIHNwbGl0IHdvdWxkIGJlIHRoaXMgcXVlc3Rpb246IERvIHlvdSBiZWxpZXZlIGhlYWx0aGNhcmUgaXMgYSBodW1hbiByaWdodCBvciBhIHByaXZpbGVnZSB0aGF0IHlvdSBlYXJuLiBPaCBhbmQgSSBhc2tlZCB0aGlzIHRvIGFueW9uZSB3aG8gdGFsa2VkIGFib3V0IGhlYWx0aCBjYXJlIGlzc3VlcyBoZXJlIGluIGNhbmFkYSwgdGhlIHJlc3BvbnNlIGhhcyBuZXZlciBiZWVuIGNvbnNpc3RlbnQuIEV2ZW4gbXkgb3duIGZhbWlseSBkb2VzbiBoYXZlIGEgY29uc2lzdGVudCBvcGluaW9uIGFib3V0IHRoaXMuLiAKSSBkZWNpZGVkIGl0IHdhcyB0aW1lIHRvIHBsYXkgd2l0aCB0aGUgYWN0dWFsIHNpbS4gCkkgd291bGQgZXZlbiBzdWdnZXN0IGN1dHRpbmcgYWxsIGNvbW11bmljYXRpb25zIGFzIHRhbGtpbmcgdG8geW91IGlzbiBzb21ldGhpbmcgaGUgY2FuIGhhbmRsZS4gCiJOaXAvVHVjayIgaXMgbm90IHN1cHBvc2VkIHRvIGxpYmVyYXRlIHVzLiBJdCBqdXN0IHRoYXQgd2hlbiBhIHNtYXJ0IGFuZCBjcml0aWNhbCBwcm9kdWNlciBsaWtlIE11cnBoeSBtYW5hZ2VzIHRvIHRlYWNoIHVzIHdoYXQgd2UgYWxyZWFkeSBrbm93LCB0aGF0IGFnaW5nIGZlbWFsZSBib2RpZXMgYXJlIHNvIGV4dHJhb3JkaW5hcmlseSB1Z2x5IHRoZXkgcmVxdWlyZSBoZXJvaWMgbWVkaWNhbCBpbnRlcnZlbnRpb24sIGFuZCBkb2VzIGl0IGluIGEgd2F5IHRoYXQgc2VkdWNlcyB1cyB3aXRoIGNsZXZlcm5lc3MsIGl0IGlzIGEgcmVsaWVmIHRvIGtub3cgdGhhdCBpdCB3aWxsIGV2ZW50dWFsbHkgYmUgb2ZmIHRoZSBhaXIuLiAKRmluYWxseSwgcmVtZW1iZXIgdGhlcmUgYSBsb3QgbW9yZSBjb250cmlidXRpb24gcm9vbSBmb3IgUlJTUHMuIFRoZSBuZXcgbWF4aW11bSBhbm51YWwgY29udHJpYnV0aW9uIGZvciBURlNBcyBpcyAkNiwwMDAsIGNvbXBhcmVkIHRvICQyNiwyMzAgZm9yIFJSU1BzIGluIGNhbGVuZGFyIDIwMTgsIGFzc3VtaW5nIHlvdSBlYXJuICQxNDUsNzAwIGFuZCBoYXZlIG5vIFBlbnNpb24gQWRqdXN0bWVudCBmcm9tIGNvcnBvcmF0ZSBwZW5zaW9ucy4gVGhhdCB1cCBmcm9tICQyNiwwMTAgaW4gMjAxNywgYW5kIHRoZSBsaW1pdCByaXNlcyB0byAkMjYsNTAwIGluIDIwMTkgYW5kIHRvICQyNywyMzAgaW4gdGhlIDIwMjAgdGF4IHllYXIsIHNheXMgTWFzdHJhY2NpLgpQYW50c2plYW4gIDUwIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KSW5zdWxpbiByZXNpc3RhbmNlIHdpbGwgdWx0aW1hdGVseSB0dXJuIGludG8gdHlwZSAyIGRpYWJldGVzIGFuZCB3aWxsIGFmZmVjdCBtb3N0IGlmIG5vdCBhbGwgYXNwZWN0cyBvZiBoZWFsdGguIFRoZSBwcmltYXJ5IGFyZWFzIGFyZSBib2R5IGNvbXBvc2l0aW9uIGluY2x1ZGluZyBiZWxseSBmYXQgZ2FpbiwgY2FyZGlvdmFzY3VsYXIgaGVhbHRoLCBhbmQgaG9ybW9uZSBoZWFsdGggc3VjaCBhcyBjb3J0aXNvbC4KV2hlbiBJIHN0YXJ0ZWQgSSB3YXMgcmVhbGx5IHN0cmljdCwgYnV0IEkgaGF2ZW4gYmVlbiBhcyBzdHJpY3Qgb24gbXlzZWxmIGluIGEgbG9uZyB3aGlsZSBzbyBpdCBhIGxpdHRsZSB0b3VnaCB0byByZW1lbWJlciBhbGwgdGhlIHRoaW5ncyBpIHVzZWQgdG8gZWF0LiBJIHdvdWxkIGVhdCB0aGluZ3MgbGlrZSBiYWNvbi9lZ2dzL2NoZWVzZSBmb3IgYnJlYWtmYXN0LCBtb3p6YXJlbGxhIHdpdGggc3VuIGRyaWVkIHRvbWF0b2VzIChqdXN0IGEgZmV3KSBhbmQga2FsYW1hdGEgb2xpdmVzIGZvciBsdW5jaCwgYW5kIGRpbm5lciBjb3VsZCBiZSBzdGVhayBvciBsZXR0dWNlIHRhY29zIG9yIHNhdXNhZ2Ugb3IgYnJlYWRjcnVtYiBmcmVlIGVnZ3BsYW50IHBhcm0gKGJhc2ljYWxseSBqdXN0IGdyaWxsZWQgZWdncGxhbnQgd2l0aCBicm93bmVkIGNoZWVzZSBvbiB0b3ApLiBBbnkgY29tYm8gb2YgdGhvc2UgZm9vZHMgaW4gdmFyaW91cyBwcm9wb3J0aW9ucy4gCkRhdmlkIHdhcyBhbiBhbWF6aW5nICdib251cyBkYWQnLiAKV2hhdCBkbyB3ZSB0eXBpY2FsbHkgaGF2ZT8gVWdoLiAKWW91IG1heSBzdGFydCB3aXRoIGEgZ3JlYXQgaGFuZCBidXQgaXQgY2FuIHR1cm4gcmF0aGVyIGxpa2UgYSBuaWdodG1hcmUgd2l0aCB0aGUgd3JvbmcgY29tbXVuaXR5IGNhcmRzLiBUaGlzIGlzIGEgZmFpciB3YXJuaW5nIGJ1dCB3ZSBtYWRlIHRoZSBsaXN0IGFzIGJlc3QgYXMgd2UgY291bGQgc3VnZ2VzdCkuLiAKVGhlIG1hY2hpbmUgc3RvcHBlZC4gR2VudGxlbWFuIG9wZW5lZCB0aGUgcHJvYm9zY2lzIGFuZCBoYW5kZWQgbWUgYSBoYW5kLiAKSSB0cmllZCBteSBiZXN0IHRvIGdvIHVuZGVyIDE2MDAuIEl0IGEgbGl0dGxlIGhhcmQgd2hlbiB5b3Ugd2FudCA0ayBhbmQgYSBidWlsZCB0byBvdmVyY2xvY2shIFRoYXQgdGhlIGJlc3QgaSBjb3VsZCBkby4gVGhlIG92ZXJjbG9ja2luZyBwYXJ0IG1ha2VzIGV2ZXJ5dGhpbmcgbXVjaCBtb3JlIGV4cGVuc2l2ZS4gTWF5YmUgeW91IGNvdWxkIGdvIGZvciBhIGNoZWFwZXIgU1NEIHRoYXQgaXMgcHJvYmFibHkgMjAgZXVybyBsZXNzLiBidXQgYXQgdGhlIHNhbWUgdGltZSwgaSBhbSB0cnlpbmcgdG8gZ2V0IHlvdXRoZSBiZXN0IHN0dWZmIG9uIHRoZSBtYXJrZXQuIGkgdGVsbGluZyB5YS4gNEsgaXMgcHJvYmFibHkgbm90IHRvbyB3b3J0aCBpdCB5ZXQuIGl0IGV4cGVuc2l2ZSBhbmQgdGhlIHJlYWxpdHkgaXMsIGZvciBhbiBvcHRpbWFsIDRrIGV4cGVyaWVuY2UgeW91IG5lZWQgdG8gd2FpdCBhIHllYXIgb3IgdHdvIG1vcmUgYXQgbGVhc3QKRWFjaCB5ZWFyLCB0aGUgUG9rZXJTdGFycyBDYXJpYmJlYW4gQWR2ZW50dXJlIChQQ0EpIGFubm91bmNlcyB0aGUgc3RhcnQgb2YgdGhlIHBva2VyIHNlYXNvbiBhcyB0aGUgYmlnZ2VzdCBuYW1lcyBpbiBwb2tlciBjb21lIHRvZ2V0aGVyIHRvIGtpY2sgdGhlIHllYXIgb2ZmIGluIHN0eWxlIC4gCk5vIHZpZGVvIGdhbWUgYXJ0aWZpY2lhbG5lc3MgICBXaGF0IHRha2VzIG1lIG91dCBvZiB0aGUgd29ybGQgaW4gbW9zdCBtYW5nYSBpcyB3aGVuIHRoZXkgdXNlIHRoZSBzeXN0ZW1zIGFuZCBuYW1lcyBvZiB2aWRlbyBnYW1lcy4gRm9yIGV4YW1wbGUgd2hlbiBjaGFyYWN0ZXJzIGxpdGVyYWxseSByZWZlcnMgdG8gZ2FpbmluZyAibGV2ZWxzIiBvciAic2tpbGxzIiBvciBhIHdvcmxkIGJlIHN0cnVjdHVyZWQgbGlrZSBhIEpSUEcgd2l0aCB0aGluZ3MgbGlrZSB6b25lcyBvciBkZW1vbiBraW5ncy4gRHVuZ2VvbiBNZXNoaSBtYW5hZ2VzIHRvIGF2b2lkIHRoYXQga2luZCBvZiBhcnRpZmljaWFsIGZlZWxpbmcgdG8gdGhlIHdvcmxkIGV2ZW4gd2l0aCB0aGUgaW5jbHVzaW9uIG9mIHdoaWNoIGNvbWVzIHRvIG15IG5leHQgcG9pbnQuCldlIGNhbiBrZWVwIGdvaW5nIGRvd24gdGhlIGN1cnJlbnQgcGF0aCBvZiBibGFtaW5nIGZsYXZvcnMgYW5kIHRoZSBwcm9kdWN0IGl0cyBzZWxmIHdoaWNoIHdpbGwgZG8gbm90aGluZywgb3Igd2UgY2FuIGJlZ2luIHRyeWluZyB0byBmaW5kIGEgd2F5IHRvIGFjdHVhbGx5IGdldCB0aHJvdWdoIHRvIGtpZHMgdG8gc2hvdyB0aGVtIHRoYXQgaXQgaXNuJ3QgYSBnb29kIGNob2ljZSwgd2hpY2ggaXMgbm8gZWFzeSB0YXNrIGF0IGFsbC4uIApUd28gZGlmZmVyZW50IGV4cGVyaWVuY2VzIGFuZCBwaGlsb3NvcGhpZXMsIHdlIGdydW50cyBnZXQgc2hpdCBkb25lLiBXZSB0aGluayBvbiB0aGUgZmx5LCBwcm9ibGVtIHNvbHZlLCBpbXBsZW1lbnQsIGFwcGx5LCBhbmQgY2hlY2suIApBIGdpZ2FudGljIGdvbGRlbiBCdWRkaGEgZ2F6ZXMgb3ZlciB0aGUgMjQgc2VhdCBjb21tdW5hbCB0YWJsZSBtYWRlIG9mIGdsb3dpbmcgYWxhYmFzdGVyIHJlc2luLiAKVGhlcmUgYXJlIG1hbnkgc3RlcHMgdGhhdCBzaG91bGQgYmUgdGFrZW4gdG8gZW5zdXJlIHRoYXQgeW91ciBidXNpbmVzcywgeW91ciBjdXN0b21lcnMsIGFuZCB0aGUgZGF0YSB0aGF0IHlvdSBoYXZlIGluIHlvdXIgcG9zc2Vzc2lvbiBpcyBwcm90ZWN0ZWQuIApHQSBhbmQgSHZWICAgUmV5IGJsb2NraW5nIHN0YW1pbmEgaXMgd2F5IHRvbyBoaWdoLCBhbmQgc2hlIHdheSB0b28gZ29vZCBhdCBibG9ja2luZyBibGFzdGVyIGJvbHRzLiBJIGRvbiB0aGluayBzaGUgYmxvY2tlZCBhbnkgYmxhc3RlcnMgb25jZSBpbiB0aGUgbW92aWVzLiBTaGUgZG9lcyBzbyBtdWNoIGRhbWFnZSBhbHJlYWR5LCBpdCBxdWl0ZSBhbm5veWluZyB0byBoYXZlIHRvIHVubG9hZCBvbiBoZXIgYW5kIGdldCBub3RoaW5nIGRvbmUuCkJsaW5rYW5ib3hjYXIxODIgIDggcG9pbnRzICBzdWJtaXR0ZWQgNCB5ZWFycyBhZ28KSSBzdGlsbCBkbyB0cmFpbmluZyBpbiB0aGVzZSBleGVyY2lzZXMgd2l0aCBmb2N1cyBvbiB0ZWNobmlxdWUgd2l0aG91dCBhbnkgbG9hZCwgYnV0IGF0IGEgaGlnaGVyIHJlcCByYW5nZSB0aGVuIEkgd291bGQgd2l0aCB3ZWlnaHQuCkF0dGVuZCBCZXR0ZXIgQnJpZGdlIENsYXNzZXMgdGhpcyB3aW50ZXIgYW5kIGxlYXJuIHRoZSB0aHJpbGxpbmcgZ2FtZSBvZiBicmlkZ2UuIFlvdSB3aWxsIGZpbmQgaXRzIGx1cmUgaXJyZXNpc3RpYmxlLCBpdHMgYWRkaWN0aW9uIGhlYWR5IGFuZCBleGNpdGluZywgYW5kIGl0IGlzIGd1YXJhbnRlZWQgdG8gYmVjb21lIGEgbGlmZWxvbmcgcHVyc3VpdC4gCiJTaGUgZnJlYWtlZCBtZSBvdXQuIApUcmFpbmVkIHZhaWR5YXMgYXl1cnZlZGljIGRvY3RvcnMgd2hvIHByYWN0aWNlIEluZGlhJ3MgNSwwMDAgeWVhciBvbGQgc3lzdGVtIG9mIGhvbGlzdGljIG1lZGljaW5lIG92ZXJzZWUgdGhlIGNsZWFuc2UgYW5kIHJlYm9vdCB0cmVhdG1lbnRzIGF0IEVsZW1lbnRhbCBFbWJyYWNlLCBhIHNtYWxsIHdlbGxuZXNzIHNwYSA5MCBtaW51dGVzIGVhc3Qgb2YgVG9yb250by4gVGhlIG51bWJlciBvZiBndWVzdHMgaXMgbGltaXRlZCB0byAyMCB0byBlbnN1cmUgYSBndWVzdCB0byBzdGFmZiByYXRpbyBvZiBhYm91dCAxOjEuIApTb21ldGltZXMgZnJhZ3JhbmNlIHNpbXBseSB0YWdnZWQgYWxvbmcgaW4gdGhlIGZvb3RzdGVwcyBvZiB0aGUgZmFtb3VzLiAKQnV0IHRoZSB0cnV0aCBpcyB0aGF0IGhhbmRzIHRoYXQgd291bGQgYmUgdHJhc2ggd2l0aCBhIGJpZyBzdGFjayBsaWtlIEtUNTMgYXJlIGp1c3QgYWJvdXQgYXMgZ29vZCBhcyBBMjM0LiBUaGUgb25seSBkb21pbmF0aW5nIGhhbmQgaXMgaW5kZWVkIGEgcGFpciBvZiBhY2VzLCBidXQgYWdhaW5zdCBhIGhhbmQgd2l0aCBib3RoIGxvdyBhbmQgc3RyYWlnaHQgcG9zc2liaWxpdGllcyBldmVuIGl0IGNhbiBiZSBhcyBsaXR0bGUgYXMgYSA1NSA0NSBmYXZvcml0ZSBwcmVmbG9wLiAKSG9wZWZ1bGx5IGNvdW5zZWxpbmcgaXMgYSBnb29kIHN0ZXAuIApXZSBzYXcgYSBtb20gd2hvIGNvdWxkIG5vdCBoYXZlIGJlZW4gb2xkZXIgdGhhbiAxOCwgc2l0dGluZyBhbG9uZSBpbiBhIHdoZWVsY2hhaXIsIGhvbGRpbmcgaGVyIGdvd24gY2xvc2VkIGluIHRoZSBiYWNrIHdpdGggaGVyIGhhbmQuIEkgY291bGQgc2VlIGhlciBiYWJ5J3MgaW50ZXN0aW5lcyBwaWxlZCBpbiBhIGJhZyBhdG9wIGhpcyBzdG9tYWNoLiAKRGl2aXNpYmxlIGJ5IDkgSWYgdGhlIHN1bSBvZiB0aGUgZGlnaXRzIG9mIHRoZSBudW1iZXIgaXMgZGl2aXNpYmxlIGJ5IDksIHRoZW4gdGhlIG9yaWdpbmFsIG51bWJlciBpcyBkaXZpc2libGUgYnkgOS4gRm9yIDE0NCwgMSs0KzQgPSA5IHdoaWNoIGlzIGRpdmlzaWJsZSBieSA5LCB0aHVzIDE0NCBpcyBkaXZpc2libGUgYnkgOSAuCkhvd2V2ZXIsIEkgdGhpbmsgQXV0byBDaGVzcyBhY2hpZXZlcyBib3RoIG9mIHRob3NlIGZhciBtb3JlIGVsb3F1ZW50bHkgdGhhbiBBcnRpZmFjdC4uIAogTWVnYW4gR3JhaGFtLiAKQSB0aGlyZCBjb21wb25lbnQgd2lsbCBiZSB0byByZWNvbmZpZ3VyZSB0aGUgRWxpemFiZXRoIFN0cmVldCBjZW50cmFsIGZveWVyIGFuZCBlbmxhcmdlIHRoZSBFbGl6YWJldGggUm9vbS4gVGhlIGNsdWIsIHdoaWNoIGVtcGxveXMgMjY4IGZ1bGwgdGltZSBhbmQgcGFydCB0aW1lIHN0YWZmLCBjb250aW51ZXMgdG8gdHJhZGUgd2VsbCBhcyB0aGUgY2x1YnMgaW5kdXN0cnkgcHJlcGFyZXMgZm9yIHRoZSBpbXBhY3Qgb2YgcG9rZXIgbWFjaGluZSByZXN0cmljdGlvbnMgcGxhbm5lZCBieSB0aGUgR2lsbGFyZCBnb3Zlcm5tZW50LiAKRGFkcyBqdXN0IHdhbnQgdGhlaXIga2lkcyB0byB0aGluayB0aGV5J3JlIGNvb2wuIApXaXRoIGFsbCBvZiB0aGF0IHNhaWQsIGlmIHlvdSBzb21laG93IGdldCBhc3NpZ25lZCB0byBCcm9hZHdheSwgZG8gbm90IHN0YXkgdGhlcmUgdW5kZXIgYW55IGNpcmN1bXN0YW5jZXMgZHVyaW5nIHRoZSBzdW1tZXIsIGl0IGlzIGFic29sdXRlbHkgdW5iZWFyYWJsZSBpbiB0aGUgYnVpbGRpbmcgb25jZSBpdCBoaXRzIGFyb3VuZCA4MEYsIGl0IHdpbGwgYmUgYXJvdW5kIDk1IDEwMEYgaW4gdGhlIGJ1aWxkaW5nLiBUaGV5IHB1dCB0b28gbXVjaCBpbnN1bGF0aW9uIGluIHRoZSBidWlsZGluZyBhbmQgaXQgaXMgbmVhcmx5IHVubGl2YWJsZSBkdXJpbmcgdGhlIHN1bW1lci4KVGhlIEFpciBDYXJyaWVyIEFjY2VzcyBBY3QgbGlzdHMgdGhlIHNwZWNpZmljIHJ1bGVzIHJlZ2FyZGluZyBzZXJ2aWNlIGFuaW1hbHMgYW5kIEVTQXMgYWJvYXJkIGFpcmNyYWZ0IGFuZCBzdGF0ZXMgdGhhdCBhaXJsaW5lcyBtYXkgcmVxdWVzdCBkb2N1bWVudGF0aW9uIGZvciBFU0FzLCBzdWNoIGFzIHRoZSB0eXBlIERlbHRhIHdpbGwgcmVxdWlyZS4gCklmIHlvdSBzZWUgYSBiZWFyIGJlZm9yZSB0aGV5IHNlZSB5b3UsIHN0YXJ0IHRvIHRhbGsgc28gdGhleSBoZWFyIHlvdSB3ZWxsIGJlZm9yZSB5b3UgYXJlIGNsb3NlIGVub3VnaCB0byBzY2FyZSB0aGVtLiAKRXZlbiB0aGUgTm8uIDIgb2ZmaWNpYWwgaW4gdGhlIEZCSSBzYWlkIFdlZG5lc2RheSBoZSB3YXMgc3VycHJpc2VkIGludmVzdGlnYXRvcnMgaGF2ZSBub3QgdW5jb3ZlcmVkIG1vcmUgYWJvdXQgd2h5IGEgbWFuIHdpdGggbm8gb2J2aW91cyBjcmltaW5hbCByZWNvcmQgd291bGQgY2F1c2Ugc28gbXVjaCBibG9vZHNoZWQuCkkgZmluZCBhIGxvdCBvZiBpdCBoYXMgdG8gZG8gd2l0aCBhZ2UuIApJZiBpdCBpcyBwZXJpb3JhbCBkZXJtYXRpdGlzIChpdCBsb29rcyBsaWtlIGl0KSwganVzdCBhdm9pZGluZyBTTFMgdG9vdGhwYXN0ZSBpcyBub3QgZW5vdWdodC4gV2hlbiBJIGhhZCBpdCwgSSBzdG9wcGVkIGFueSBza2luY2FyZSBleGNlcHQgZm9yIGEgYmFzaWMgYmxhbmQgZnJhZ3JhbmNlIGZyZWUgZXNzZW50aWFsIG9pbHMgZnJlZSBtb2lzdHVyaXplciAoQmlvZGVybWEgU2Vuc2liaW8gbGlnaHQpLiBOb3QgZXZlbiBjbGVhbnNlciwganVzdCByaW5zaW5nIHdpdGggd2F0ZXIuIEFuZCB0aGUgdG9vdGhwYXN0ZSwgbm90IG9ubHkgU0xTIGZyZWUsIGJ1dCBhbHNvIGZsdW9yaWRlIGZyZWUuIEkgd2VudCBudWNsZWFyLgoxMyBXaG9sZSB0b3ducyB3ZXJlIGFiYW4gIGRvbmVkIHRvbmlnaHQgdG8gdGhlIGJyb3duIGZ1cnkgb2YgdGhlIE1pc3NvdXJpIFJpdmVyJ3Mgd29yc3QgZmxvb2QgYXMgdGhlIGdvdmVybm9ycyBqIG9mIHR3byBzdHJpY2tlbiBzdGF0ZXMgYXNrZWQgaSBoZWxwIGZyb20gdGhlIGZlZGVyYWwgZ292ZXJuICBtZW50LiBUaGUgcmFnaW5nICJCaWcgTXVkZHkiIHBvdW5kICBlZCBhdCBTaW91eCBDaXR5IGFuZCBtb3JlIHRoYW4gMzAuMDAwIHBlcnNvbnMgZmxlZCB0aGVpciBob21lcyBkb3duc3RyZWFtIGF0IE9tYWhhLCBOZWIgYW5kIENvdW5jaWwgQmx1ZmZzLCBsYS4gCkkgd291bGRuIHJlc2VudCB0aGVpciBzcG9ydHMgc3R1ZmYsIHNpbmNlIEkgbmV2ZXIgYnV5IHRoZW0sIHRoZXkgZG9uIGFmZmVjdCBtZS4gRGlyZWN0bHkuCk1VU0lDIEFORCBQViBMSU5LUzogcGxlYXNlIHVzZSBvbmUgZ2VucmUgYW5kIG9uZSB5ZWFyIHRhZ3MuIEtlZXAgdGhlbSBnZW5lcmFsLCBmb3Igc2VhcmNoYWJpbGl0eTpJbiB0aGlzIHNlY3Rpb24gSSBoYXZlIGluY2x1ZGVkIHBvcCBpbmZsdWVuY2VkIGJ5IHRoZSBtZWxvZGllcywgaW5zdHJ1bWVudHMsIG9yIGxhbmd1YWdlIG9mIHNoaW1hdXRhLgpDb3ZlIGRpZ2l0YWwgaG9tZSBzZWN1cml0eQpJdCB3YXMgYSBwcmV0dHkgYW1hemluZyBzaWdodCBhbHRob3VnaCBKZXNzIGxpa2VuZWQgb3VyIDIwIG1pbnV0ZXMgdGhlcmUgdG8gc21va2luZyBzaXggcGFja3Mgb2Ygc3VsZnVyIGZsYXZvcmVkIGNpZ2FyZXR0ZXMuIApNYXliZSBpZiBoZSBhbmQgV2l6YXJkSHllb25nIHdlbnQgdG8gdGhlIG1vdW50YWlucyBpbiBUaWJldCBhbmQgV2l6YXJkIGltcGFydGVkIGFsbCBvZiBoaXMgd2lzZG9tLiAKRnJvbSB0aGUgMTk1MHMgdXAgdGhyb3VnaCB0aGUgZWFybHkgMTk5MHMsIHRoZSBzcGVjdGVyIG9mIG51Y2xlYXIgd2FyIGNhc3QgYSBzaGFkb3cgb3ZlciB0aGUgd29ybGQgbGlrZSBhIGdpYW50LCBnbG9vbXkgbXVzaHJvb20gdGF0dG9vLiAKU29tZSBwZW9wbGUgcGxheSBwb2tlciBnYW1lcyBmb3IgcmVsYXhhdGlvbiBwdXJwb3Nlcy4gTW9zdCBwbGF5ZXJzLCBob3dldmVyLCBwbGF5IGluIG9yZGVyIHRvIGVhcm4gYWRkaXRpb25hbCBjYXNoLiBJZiB5b3UncmUganVzdCBhIHBva2VyIHBsYXllciB3aG8ncyBhIG5vdmljZSBhbmQgeW91IGFpbSB0byB3aW4gaW4gcG9rZXIsIHlvdSdsbCBzdXIuCkZvcm1lciBwb2tpZXMgYWRkaWN0IFNob25pY2EgR3V5IGFuZCBwcm9taW5lbnQgbGF3IGZpcm0gTWF1cmljZSBCbGFja2J1cm4sIHJlcHJlc2VudGluZyBoZXIgcHJvIGJvbm8sIGhhdmUgbGF1bmNoZWQgdGhlIGxhbmRtYXJrIGFjdGlvbiBhbGxlZ2luZyBEb2xwaGluIFRyZWFzdXJlIGlzICJtaXNsZWFkaW5nIGFuZCBkZWNlcHRpdmUiLCB2aW9sYXRlcyBjb25zdW1lciBsYXcsIGFuZCBlbXBsb3lzIHRyaWNrcyBkZXNpZ25lZCB0byAiZmVlZCBhZGRpY3Rpb24iLiAKSSBkb24ndCBldmVuIHRoaW5rIHRoYXQncyBhIHdvcmQuIApBbHNvIHNvbWUgc3RydWN0dXJlcyBsaWtlIHRoZSBTcGhpbnggaW4gRWd5cHQgYW5kIG90aGVyIG1lZ2FsaXRoaWMgc3RvbmUgc3RydWN0dXJlcyBpbiB0aGUgd29ybGQgbWF5IGJlIGZhciBvbGRlciB0aGFuIHByZXZpb3VzbHkgdGhvdWdodD8gUGxhdG8gYWNjb3VudCBvZiBBdGxhbnRpcyBiZWluZyB3aXBlZCBvdXQgYW5kIGRldGFpbHMgdGhhdCBtYWtlIGl0IHNlZW0gbGlrZSB0aGUgUmljaGF0IHN0cnVjdHVyZSBtaWdodCBiZSBhIHJlYWxseSBnb29kIGNhbmRpZGF0ZSBmb3IgdGhlIGxvY2F0aW9uIG9mIGFuIGFjdHVhbCBwbGFjZS4uIAoxNilNYW55IHBhdGllbnRzIGRvIG5vdCByZXNwb25kIHdlbGwgdG8gbGl0aGl1bSwgYW5kIDUwJSBvZiBzdG9wIGxpdGhpdW0gd2l0aGluIDEwIHdlZWtzIGJlY2F1c2Ugb2YgdGhlIHNpZGUgZWZmZWN0cy4KV2hhdCBtYWtlcyBpdCBtb3JlIGRpZmZpY3VsdCBpcyB3aGVuIHNvbWVvbmUgZ29lcyBmcm9tIDAgdG8gMTAwIGxpa2UgeW91IGRpZCBlYXJsaWVyLCByZWFkaW5nIHdheSB0b28gbXVjaCBpbnRvIGEgbW9kIGFjdGlvbiBhbmQgYWNjdXNpbmcgdXMgb2YgZmV0aXNoaXppbmcgd29tZW4gYXMgdGhlIHJlYXNvbi4gV2UgaGVhcmQgaXQgYWxsLCB3ZSB0b28gcHJvIEtvcmVhLCB0b28gYW50aSBLb3JlYSwgZXRobmljIEtvcmVhbiBuYXRpb25hbGlzdHMsIHdoaXRlIHNleHBhdHMsIGV0Yywgc28gdGhvc2UgY29tbWVudHMgaGF2ZSBsb3N0IHRoZWlyIG1lYW5pbmcgYW5kIHRoZSB0cnV0aCBpcyB0aGUgYWNjdXNhdGlvbiBhYm91dCB1cyB1c3VhbGx5IHNheXMgbW9yZSBhYm91dCB0aGUgcHJlY29uY2VwdGlvbnMgb2YgdGhlIHBlcnNvbiBtYWtpbmcgdGhlIGNvbXBsYWludCB0aGFuIGFueSBvZiB1cyBvbiB0aGUgbW9kIHRlYW0uIApUaGF0IHllYXIsIEVTUE4gYmVnYW4gcG9zaXRpb25pbmcgVFYgY2FtZXJhcyBzbyBob21lIHZpZXdlcnMgY291bGQgc2VlIGV2ZXJ5IHBsYXllcidzIGNhcmRzLCB3aGljaCB0cmFuc2Zvcm1lZCB0ZWxldmlzZWQgcG9rZXIgZnJvbSB1bndhdGNoYWJsZSB0byBncmlwcGluZyBhbmQgZnVydGhlciBmdWVsZWQgdGhlIGV4cGxvc2lvbiBpbiBwbGF5LiAKVGhpcyBqdXN0IGZlZWxzIG91dCBvZiBwbGFjZS4gCk5lY2hjZXRlIHphYSB2IG9ibGFzdGksIGt0b3IgamUgdnlzb2tvIG1pbmVyYWxpem92YW4gYWxlYm8gdGFrIHByZWFlbiBzIHNpZ25seSwgZSBhIHBvaGEgY3Zva251dC4gTW5vaG8gamVkbm90aWVrIHMgdHJvY2h1IHpsb2l0ZWppZSwgbWxldCByb3Zub3ZodSwgdGFrZSBwb3pvcm5lIHByZXRhanRlIHBva3lueSB2cm9iY3UuIEtlIHNhIG5hanBydiB1aWEgenZsZG51IHZhZSBkZXRla3RvciBrb3Zvdiwgc2tzdGUgbmVvYnNhZGVuIHBvbGUgYWxlYm8gdmFvbSB2bGFzdG5vbSBkdm9yZS4gS3RvIHZpZSwgbyBzYSBtZSBzdGE/Ckkgd29uIGEgdG91cm5leSBvbmxpbmUgKGFib3V0ICQ3MDAgVVNEKSBhbmQgUFMgd291bGRuIGxldCBtZSB0YWtlIGl0IG91dCBmb3IgNDggaG91cnMuIFRoZW4gc2hvd2VkIHVwIGluIE11Y2hCZXR0ZXIgYWNjb3VudCBidXQgdHJhbnNmZXJyaW5nIGl0IHRvIG15IGNoZXF1aW5nIHZpYSBlIHRyYW5zZmVyIHRvb2sgc2V2ZXJhbCBkYXlzLiAKRnJvbSBEdW5nZW9uLCBJc3N1ZSAxMTogQWZ0ZXIgc3Vydml2aW5nIGEgc2hpcHdyZWNrLCB0aGUgcGxheWVycyB3YXNoIHVwIG9uIGEgdGlueSwgcm9ja3kgaXNsYW5kIHRoYXQncyBob21lIHRvIGEgcm90dGVkIG91dCBtYW5vciBob3VzZS4gVGhlIHBsYXllcnMgaGF2ZSB0byBleHBsb3JlIHRoZSBpc2xhbmQgYW5kIGZpbmQgYSB3YXkgdG8gZXNjYXBlICAgYnV0IHRoZSBtYW5vciBob3VzZSBpcyBvY2N1cGllZCBieSBhIHBhaXIgb2Ygcml2YWwgdmlsbGFpbnMgd2hvIHdhbnQgdG8gdXNlIHRoZSBwbGF5ZXIncyBhcnJpdmFsIGZvciB0aGVpciBvd24gZW5kcy4gCkkgZnJlYWtlZCBvdXQgYW5kIGZsdW5nIGl0IG9mZiBteXNlbGYgc28gaXQgd2FzIG9uIG1lIGZvciBsZXNzIHRoYW4gMyBzZWNvbmRzLCBidXQgdGhlIGhvc3BpdGFsIG1hZGUgbWUgc3RheSBvdmVybmlnaHQgZm9yIGFueSBzeW1wdG9tcy4gTHVja2lseSBJIHdhcyBmaW5lOyB0aGUgZmFuZyBsaWtlIG1hcmtzIG9uIG15IGFybSBiYXJlbHkgcGllcmNlZCBteSBza2luIGFuZCBpdCB3YXMgcHJvYmFibHkganVzdCBiZWNhdXNlIHRoZSBzbmFrZSB3YXMgc3R1bm5lZC4uIApJZGVhbGx5LCBpdCB3b3VsZCBoYXZlIGp1c3QgdGhyZWUgYnV0dG9ucyBvcGVuL2Nsb3NlICh0byBpbnNlcnQgdGhlIENEKSwgcGxheSwgYW5kIHN0b3AgYW5kIGl0IHdvdWxkIGJlIHBvc3NpYmxlIHRvIGNvbm5lY3QgaXQgdG8gZXh0ZXJuYWwgc3BlYWtlcnMgKHdpdGggb3Igd2l0aG91dCBhIHJlY2VpdmVyIGlzIG9rKS4gCldlbGNvbWUgdG8gdGhlIFVDTEEgSW50cmFtdXJhbCBTcG9ydHMgUHJvZ3JhbSEgVGhlIHByb2dyYW0gY29uc2lzdHMgb2YgMzAgbGVhZ3VlcywgdG91cm5hbWVudHMsIG1lZXRzLCBhbmQgc3BlY2lhbCBldmVudHMgd2l0aCBtb3JlIHRoYW4gNzAwMCBwYXJ0aWNpcGFudHMgZWFjaCB5ZWFyLiBBY3Rpdml0aWVzIGFyZSBvZmZlcmVkIGVhY2ggcXVhcnRlciwgaW5jbHVkaW5nIGxpbWl0ZWQgYWN0aXZpdGllcyBkdXJpbmcgdGhlIHN1bW1lciBxdWFydGVyLiBUbyBoZWxwIHByb3ZpZGUgYSBiZXR0ZXIgb3ZlcnZpZXcgb2YgdGhlIHByb2dyYW0sIGNvbnNpZGVyIHRoZSBmb2xsb3dpbmcgZmFjdHM6ClNwYWNlWCBDcmV3IERyYWdvbiBjYXBzdWxlIHBhcmFjaHV0ZWQgZG93biB0byB0aGUgQXRsYW50aWMgT2NlYW4gRnJpZGF5IG1vcm5pbmcsIHN1Y2Nlc3NmdWxseSBjYXBwaW5nIHRoZSBmaXJzdCB0ZXN0IG9mIGEgY29tbWVyY2lhbCBzcGFjZWNyYWZ0IHRoYXQgd2lsbCBsaWtlbHkgYnJpbmcgYXN0cm9uYXV0cyB0byB0aGUgSW50ZXJuYXRpb25hbCBTcGFjZSBTdGF0aW9uICAgcG9zc2libHkgaW4gdGhlIG5leHQgeWVhci4gRVQgYWZ0ZXIgc3BlbmRpbmcgZml2ZSBkYXlzIGRvY2tlZCB0byB0aGUgc3BhY2Ugc3RhdGlvbi4gVGhlIGRlbW9uc3RyYXRpb24gbWlzc2lvbiAgIHdoaWNoIGNhcnJpZWQgbm8gaHVtYW5zIGJ1dCBhIGR1bW15IGNvdmVyZWQgaW4gc2Vuc29ycyAgIGlzIHRoZSBmaXJzdCBvZiBhdCBsZWFzdCBvbmUgbW9yZSB0ZXN0IHRoYXQgTkFTQSB3aWxsIHVzZSB0byBkZXRlcm1pbmUgaWYgdGhlIERyYWdvbiBjYXBzdWxlIHBhc3NlcyB0aGUgc3BhY2UgYWdlbmN5IHJpZ2lkIHNhZmV0eSBzdGFuZGFyZHMuIApJIGNoYWxsZW5nZSBwZW9wbGUgd2hvIGFzc2VydCB0aGF0IGl0IHdpbGwgYmUgc3Vic3RhbnRpYWxseSBob3R0ZXIuIE9uIGF2ZXJhZ2UsIE1heSBpcyBvZiBjb3Vyc2UgaG90dGVyLCBidXQgb24gYSB3ZWVrIHRvIHdlZWsgYmFzaXMgaW4gdGhlIHJlYWwgd29ybGQsIGl0IGNvbWVzIGFuZCBnb2VzLiBJIGhpa2VkIG1vc3Qgb2YgU29jYWwgMyB0aW1lcyBvdmVyIDMgeWVhcnMsIGFuZCBJIHNhdyB3aWxkbHkgZGlmZmVyZW50IHRlbXBlcmF0dXJlcyBpbiBzb21lIG9mIHRoZSBzYW1lIHBsYWNlcyBvbiB0aGUgc2FtZSBkYXkgb2YgdGhlIG1vbnRoLiAKU29tZXRoaW5nQXRNeVdpbmRvdyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCiJJIHdvdWxkIGFncmVlIHRoYXQgKHRoZWlyIHJlbGF0aW9uc2hpcCkgaXMgZmFpcmx5IHVudXN1YWwsIiBzYWlkIFZpYmlrYSBCaWFuY2hpLCB2aWNlIHByZXNpZGVudCBvZiBvcmlnaW5hbCBwcm9ncmFtbWluZyBmb3IgbGlmZXN0eWxlLCByZWFsaXR5IGFuZCBmYWN0dWFsIGVudGVydGFpbm1lbnQgZm9yIENvcnVzLiAKV2Ugd291bGQgaGF2ZSB0byBzcHVybiBhdXRvbWF0aW9uIGluIG9yZGVyIHRvIHJlcGxpY2F0ZSBhIHNvY2lldHkgbGV2ZWwgY2FzdGUgc3lzdGVtLiBBdXRvbWF0aW9uIGlzIGdvaW5nIHRvIGJlIG9uZSBvZiB0aGUgYmlnZ2VzdCBmYWN0b3JzIGluIGFjaGlldmluZyBtYWpvciBzcGFjZSBleHBsb3JhdGlvbiwgaW1vLiBJdCB3aWxsIGZyZWUgaHVtYW5zIGZyb20gaGF2aW5nIHRvIGZvY3VzIG9uIGJhc2ljIG5lZWRzIGFuZCBhbGxvdyB1cyB0byBkZXZlbG9wIGZ1cnRoZXIgdGVjaG5vbG9neS4gCkFsbCBpbiBhbGwgdGhvdWdoLCBJIGhhdmVuIGhhZCBhIGxvdCBvZiBwcm9ibGVtcyBnZXR0aW5nIHRoaW5ncyB0byBzdGljay4gWW91IGNhbiBzZWUgbXkgdGVtcCBzZXR0aW5ncyBpbiB0aGUgZ2lzdCBJIHBvc3RlZCwgYnV0IEkgYmVlbiBmaW5kaW5nIGxhdGVseSB0aGF0IGZvciBIYXRjaGJveCwgdGhlIGJlc3QgdGVtcGVyYXR1cmUgc2VlbXMgdG8gYmUgMTg3ICAgMTkyIGZvciB0aGUgaG90IGVuZCwgYW5kIGFib3V0IDU3ICAgNjMgZm9yIHRoZSBiZWQuIFRlY2huaWNhbGx5IHlvdSBkb24gbmVlZCB0byBoZWF0IHRoZSBiZWQgZm9yIFBMQSwgYnV0IEkgaGF2ZW4gdHJpZWQgYSBjb2xkIGJlZCB5ZXQgc28gY291bGRuIHRlbGwgeW91IGlmIHRoYXQgd29ya3Mgd2VsbCBvciBub3QuCkFuZCB3aGlsZSBkZXRveCB0cmVhdG1lbnRzIG1pZ2h0IGF0IGZpcnN0IGdsYW5jZSBzb3VuZCBsaWtlIGEgZ29vZCBpZGVhIHRvIHB1cmlmeSB0aGUgc29vbiB0byBiZSBtb3RoZXIncyBib2R5LCB0aGV5J3JlIG5vdC4gVGhlIHByb2Nlc3Mgb2YgZ2V0dGluZyB0b3hpbnMgb3V0IG1lYW5zIHRoYXQgZmlyc3QgdGhleSBoYXZlIHRvIGJlIHJlbGVhc2VkIGludG8gdGhlIGJsb29kIHN0cmVhbSwgYW5kIGEgd29tYW4gd2hvJ3MgZXhwZWN0aW5nIGlzIG5vdCB0aGUgb25seSBvbmUgZGVwZW5kZW50IG9uIHRoYXQgYmxvb2QuIEVzc2VudGlhbCBvaWxzIGFyZSBhbHNvIHRyaWNreS4gTm9uZSBzaG91bGQgYmUgdXNlZCBkdXJpbmcgdGhlIGZpcnN0IHRyaW1lc3RlciwgYW5kIGFsdGhvdWdoIHNvbWUgYXJlIGFsbCByaWdodCBsYXRlciBpbiB0aGUgcHJlZ25hbmN5LCB0aGV5IG5lZWQgdG8gYmUgaGVhdmlseSBkaWx1dGVkIGJlZm9yZSBiZWluZyBhZG1pbmlzdGVyZWQuIE90aGVyIG9uZXMsIHRob3VnaCwgYXJlIHN0aWxsIG9mZiBsaW1pdHMgYmVjYXVzZSB0aGV5IGNhbiBzZXQgb2ZmIHV0ZXJpbmUgY29udHJhY3Rpb25zLgpJdCdzIG5vdCBhIHNleHVhbCByZWxhdGlvbnNoaXAgZXZlbiBpZiBpdCBpcyByb21hbnRpYy4uIApEaWUgRnJhdSBzYWd0IGhhdCBrZWluIEdlbGQgdW5kIHNpZSBtdXNzIHZvbSBSZW50ZSBsZWJlbiB2b24gaWhyZW0gdmVyc3RpcmJ0ZW4gTWFubiB1bmQgZXMgaXN0IHdlbmlnLiAKSXQgc2F5cyBhIGxvdCB0aGF0IHlvdSdyZSBub3QgZXZlbiByZWZlcmVuY2luZyB0aGUgc2hvdyB0aGF0IEtobG9lIGFscmVhZHkgZGlkIG9uIEUhLiBUaGlzIGlzIHRoZSBjcnV4OiB3aHkgam9pbiBhbiBhbHJlYWR5IGhpZ2ggcHJvZmlsZSBicmFuZCB2cyBjcmVhdGluZyBvbmUgb2YgeW91ciBvd24/IEJlY2F1c2UgRSEgaXNuJ3QgQUJDLiBJdCB3aWxsIG5ldmVyIGJlLiBBbmQgZXZlbiB0aGVuLCBzaGUgd291bGRuJ3QgYmUgcGFpZCB0aGUga2luZCBvZiAkJCQgZG9pbmcgaGVyIG93biBzaG93IHRoYXQgd291bGQgYmxvdyB0aGUgQmFjaGVsb3JldHRlIG1vbmV5IG91dCBvZiB0aGUgd2F0ZXIsIGVzcGVjaWFsbHkgd2l0aCB0aGUgY2hhbmNlcyBvZiBpdCBiZWluZyBhIHJhdGluZ3Mgc21hc2ggYmVpbmcgc28gbG93LiBUaGUgS2FyZGFzaGlhbnMgbWFrZSB0aGUgbW9zdCBvZiB0aGVpciBtb25leSBvbiBJbnN0YWdyYW0gYW5kIGxpY2Vuc2luZyB0aGVpciBuYW1lcywgc28gYSBoaWdoZXIgcHJvZmlsZSBnaWcgRE9FUyBhY3R1YWxseSByZXN1bHQgaW4gbW9yZSBtb25leSBvdmVyIHRoZSBsb25nIHRlcm0uCkJ1dCBhcyByZWxpZXZpbmcgYXMgaXQgbWF5IGZlZWwsIHNjcmF0Y2hpbmcgaXMgZXNzZW50aWFsbHkgZGlnZ2luZyB5b3VyIGZpbmdlcm5haWxzIGludG8gc2Vuc2l0aXZlIHNraW4uIEl0IGtlZXBzIHlvdSBjb29sIGFuZCBpdCdzIHVzdWFsbHkgYW4gaW5kaWNhdGlvbiB5b3UncmUgd29ya2luZyBoYXJkIHRvIGtlZXAgeW91ciBib2R5IGhlYWx0aHkuIEJ1dCBpdCdzIGFsc28gaXJyaXRhdGluZyB0byB5b3VyIHNjYWxwLiAKUmVzdWx0cyBhcmUgYmFzZWQgb24gaW50ZXJuZXQgcG9pbnRzLCBub3QgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgdGhlIGpva2UuIApTbyBpbnN0ZWFkIHRoZSBlbnRpcmUgYm9vayB0b3VyIHdpbGwgcGxheWVkIG91dCBpbiBzbWFsbCB0b3duIEFtZXJpY2EsIFdhc2hpbmd0b24sIFBBIGFuZCBSb2Fub2FrZSwgVkEuIApJbiBBdWd1c3QsIHRoZSBDRkwgYWxsb3dlZCB0aGUgdXNlIG9mIHByb3BzIGluIGNlbGVicmF0aW9ucyBhZnRlciBvbmUgcGxheWVyICAgRWRtb250b24gcmVjZWl2ZXIgRHVrZSBXaWxsaWFtcyAgIHdhcyBwZW5hbGl6ZWQgZm9yIGNsaW1iaW5nIHRocm91Z2ggZW5kIHpvbmUgc2lnbmFnZSBhbmQgYW5vdGhlciAgIFdpbm5pcGVnIHJlY2VpdmVyIERhcnZpbiBBZGFtcyAgIHdhcyBub3QgZm9yIGdyYWJiaW5nIGFuIG9uIGZpZWxkIHRlbGV2aXNpb24gY2FtZXJhIGFuZCBmaWxtaW5nIGhpcyB0ZWFtbWF0ZXMuCkJvdWdobmVyJ3MgcmVzZWFyY2ggaGFkIHN1Z2dlc3RlZCB0byBoaW0gdGhhdCBhIGZsYXNoaWVyIGNhc2lubyB3b3VsZCByb2lsIHRoZSBBdGxhbnRpYyBDaXR5IG1hcmtldCAgIGFuZCBicmluZyBiaWcgcHJvZml0cyB0byBpdHMgb3duZXIuIApJIGFtIHNvIHNvcnJ5IHRvIGxlYXJuIG9mIEZyZWQgcGFzc2luZy4gUGxlYXNlIGtub3cgSnVkeSB0aGF0IG15IHRob3VnaHRzIGFyZSB3aXRoIHlvdSBhbmQgeW91ciBmYW1pbHkgYXQgdGhpcyBzYWQgdGltZS4gCkkgc3VwcG9zZSB0aGVyZSBhcmUgYSBsb3Qgb2YgcXVlc3Rpb25zIHRvIGJlIGFza2VkOiBzaG91bGQgUG9sYW5za2kgaGF2ZSBiZWVuIGFycmVzdGVkPyBXYXMgaXQgYSBjcmltZSBpZiB0aGUgdmljdGltIHNheXMgZHJvcCBpdD8gV2h5IGFyZSB0aGUgRnJlbmNoIHNvIGRpc21heWVkIGJ5IFBvbGFuc2tpIGFycmVzdCBhbmQgQW1lcmljYW5zIHNvIGdsZWVmdWw/CkkgdGhpbmsgZHVhbGluZyBhdCA5IGlzIGEgYml0IG9mIGEgd2FzdGUsIGhvbmVzdGx5LiBUaGUgb25seSBiZW5lZml0IG9mIGRvaW5nIHRoYXQgaXMgdGhhdCB5b3UgZ2V0IHRvIGJlIGEga2Vuc2FnZSBpbnN0ZWFkIG9mIGp1c3QgYSBtYWdlIGZvciBob3dldmVyIGxvbmcgaXQgdGFrZXMgdG8gZ2V0IGZyb20gbGV2ZWwgMTAgdG8gMTQuIE91dHNpZGUgdGhhdCB3aW5kb3cgb2YgdGltZSwgeW91IGFsd2F5cyBiZXR0ZXIgb2ZmIGR1YWxpbmcgYXQgMTMuLiAKVGhlIFByb2dyYW1tZSBsaXN0cyBhbGwgcGFydGljaXBhdGluZyBwdWJzLCB0aGVpciBhZGRyZXNzZXMgYW5kIGNvbnRhY3QgZGV0YWlscywgb3BlbmluZyB0aW1lcywgd2hpY2ggYnVzIHN0b3BzIGFyZSBuZWFyYnksIGEgc3VtbWFyeSBvZiBhdmFpbGFibGUgYmVlciwgYW5kIHdoZXRoZXIgdGhleSBzZXJ2ZSBmb29kLCBhcmUgZmFtaWx5IGZyaWVuZGx5LCBoYXZlIGEgY2hpbGRyZW4ncyBwbGF5IGFyZWEsIHByb3ZpZGUgYWNjb21tb2RhdGlvbiBvciBoYXZlIHNwZWNpYWwgb2ZmZXJzIGR1cmluZyB0aGUgZXZlbnQuIEl0IGFsc28gY29udGFpbnMgYSBiYXNpYyBtYXAgb2YgZWFjaCBvZiB0aGUgbWFpbiB0b3duIGNlbnRyZXMgc2hvd2luZyBidXMgc3RvcCBsb2NhdGlvbnMgYW5kIHRob3NlIG9mIHBhcnRpY2lwYXRpbmcgcHVicywgYXMgd2VsbCBhcyBhbiBldmVudCBidXMgdGltZXRhYmxlLiBBIG1vcmUgZGV0YWlsZWQgYnVzIHRpbWV0YWJsZSBzdGF0aW5nIGV4YWN0bHkgd2hpY2ggYnVzIGlzIGR1ZSB0byBiZSBvcGVyYXRpbmcgd2hpY2ggcm91dGVzIGlzIHByb3ZpZGVkIGluIHRoZSBWZWhpY2xlIFN1cHBsZW1lbnQuLiAKVGhlcmVmb3JlLCB3ZSBuZWVkIHRvIG11bHRpcGx5IDE4LzQ5IGJ5IHRoZSBvZGRzIHRoYXQgbmVpdGhlciBvZiB0aGUgdHdvIHByZXZpb3VzIGluc3RhbmNlcyBvY2N1ci4gCkhvd2UgSW5zdGl0dXRlLgpUaGUgdG9uZSBvZiB5b3VyIHBvc3Qgc291bmRzIGxpa2UgeW91IHJlZ3JldCBpdCBhIGxvdCBhbmQgcmVzZW50IHlvdXIgZmFtaWx5IGlmIHlvdSBoYWQgdG8gc3RheS4gCkhlcmUncyB0aGUgYmFkIG5ld3M6IHNldmVuIGFwcHMsIGluY2x1ZGluZyBZZWxwLCB0aGUgbGFuZ3VhZ2UgbGVhcm5pbmcgYXBwIER1b2xpbmdvIGFuZCB0aGUgam9iIHNlYXJjaCBhcHAgSW5kZWVkLCBhcyB3ZWxsIGFzIHRoZSBLaW5nIEphbWVzIEJpYmxlIGFwcCBhbmQgdHdvIE11c2xpbSBwcmF5ZXIgYXBwcywgUWlibGEgQ29ubmVjdCBhbmQgTXVzbGltIFBybywgc3RpbGwgc2VuZCB5b3VyIHBlcnNvbmFsIGRhdGEgdG8gRmFjZWJvb2sgYmVmb3JlIHlvdSBjYW4gZGVjaWRlIHdoZXRoZXIgeW91IHdhbnQgdG8gY29uc2VudCBvciBub3QuIEtlZXAgaW4gbWluZDogdGhlc2UgYXJlIGFwcHMgd2l0aCBtaWxsaW9ucyBvZiBpbnN0YWxscy4KTm8sIG9hdG1lYWwgZG9lcyBub3QgY29udGFpbiBnbHV0ZW4sIGJ1dCBpdCBoYXMgdGhlIGNoZW1pY2FsIGF2ZW5pbiAod2hpY2ggaXMgc2ltaWxhciB0byB0aGUgcHJvbGFtaW5lcyB0aGF0IGNhdXNlIGFuIGFsbGVyZ2ljIHJlYWN0aW9uIHRvIGdsdXRlbikuIFNvbWUgcGVvcGxlIHdpdGggY2VsaWFjIGRpc2Vhc2UgYXJlIGFibGUgdG8gZWF0IG9hdHMsIG90aGVycyBhcmUgbm90LiBJJ2Qgc3VnZ2VzdCBsb29raW5nIGF0IHRoZSBwYWNrYWdpbmcgb2Ygb2F0cyBiZWZvcmUgYnV5aW5nLiBJZiBpdCBkb2Vzbid0IHNheSAiZ2x1dGVuIGZyZWUsIiBkb24ndCBidXkgaXQuIENvbXBhbmllcyB0aGF0IHNlbGwgZ2x1dGVuIGZyZWUgcHJvZHVjdHMgKGVzcGVjaWFsbHkgdGhvc2UgdGhhdCBzZWxsIHRoZW0gZXhjbHVzaXZlbHkpIGFyZSBkZWRpY2F0ZWQgdG8ga2VlcGluZyBnbHV0ZW4gb3V0IG9mIHRoZSBwcm9kdWN0cywgc28gSSdkIHRydXN0IHRoZW0gbW9yZSB0aGFuIG90aGVyIGNvbXBhbmllcy4KU3RpbGwsIHRoZSBleHRyYSB3ZWlnaHQgd2FzIGEgYnVyZGVuLCBhbmQgc2luY2UgaXQgd2FzIGluIHRoZSB1cHBlciBib2R5LCBpdCBkaWRuJ3QgaGVscCBoaW0gbW92ZSB0aGUgcGVkYWxzIGFueSBmYXN0ZXIuIApJZiBwb3NzaWJsZSwgdHJ5IHRvIHBsYWNlIGFuIG9yZGVyIG9ubGluZSBhbmQgdGhlbiBjb2xsZWN0IHRoZSBwcm9kdWN0IHJpZ2h0IGZyb20gdGhlIHN0b3JlLiAKQXMgQW1lcmljYW5zIGxvb2sgZm9yIHdheXMgdG8gY3V0IGNvcm5lcnMgYW5kIHNhdmUgbW9uZXksIHRoZXkgYXJlIGZhciBsZXNzIGxpa2VseSB0byBnbyB0byB0aGUgbW9yZSBleHBlbnNpdmUgYm9hcmQgY2VydGlmaWVkIHN1cmdlb25zLiBBbHNvLCBtb3JlIGFuZCBtb3JlIEFtZXJpY2FucyBhcmUgdXNpbmcgInN1cmdpY2FsIHRvdXJpc20iIHNpdGVzIHRvIGZpbmQgY2hlYXBlciBib29iIGpvYnMgaW4gdGhlIERvbWluaWNhbiBSZXB1YmxpYyBvciBUaGFpbGFuZC4gV2hhdCBjYW4gZWFzaWx5IGNvc3QgJDgwMDAgaW4gdGhlIFVTIGNhbiBiZSBoYWxmIHRoYXQgcHJpY2UsIGluY2x1ZGluZyBhaXJmYXJlIGFuZCBhICJ2YWNhdGlvbiwiIHNvbWV3aGVyZSBlbHNlLiBFdmVuIHdpdGhpbiB0aGUgVVMsIEFtZXJpY2FucyBmcm9tIG1vcmUgcHJpY2V5IHN0YXRlcyBpbiB0aGUgTm9ydGhlYXN0IGFyZSB0cmF2ZWxpbmcgdG8gbGVzcyBleHBlbnNpdmUgc3RhdGVzIGluIHRoZSBTb3V0aCB0byBzYXZlIHNvbWUgbW9uZXkgb24gdGhlaXIgYnJlYXN0cy4gRmluYWxseSwgdGhlcmUgYXJlIHRocml2aW5nIGJsYWNrIG1hcmtldHMgaW4gY29zbWV0aWMgcHJvY2VkdXJlcyBpbiBldmVyeSBtYWpvciBjaXR5IGluIHRoZSBVUy4KU29tZWhvdyBpbiB0aGVpciBicmFpbiwgYSBtYW4gd2hvIGlzIGRhaW50eSBhbmQgYWN0cyBhZmZlbWluZW50IGxpa2VzIHBlbmlzLiBBTlkgcGVuaXMuIFRoZXkgbm8gbG9uZ2VyIGJlbGlldmUgdGhpcyBhbmQgaGF2ZSBubyBpc3N1ZSB3aXRoIGdheSBwZW9wbGUgdG9kYXksIGJ1dCBpbiB0aGUgOTBzIGl0IHdhcyBhIGZhaXJseSBjb21tb24gcGVyY2VwdGlvbi4gCkkgc2V0IHRoZSBwaG9uZSBkb3duLiAKVGhlcmUgd2FzIGVhcmxpZXIgd29yayBpbiAxODAyIGJ5IFZhc2lseSBQZXRyb3YgKGQuIApFdmVuIHRoZSBleHBlcnQgcGxheWVycyBjYW4gYWxzbyB0YWtlIGhlbHAgZnJvbSB0aGlzIGJvb2sgYW5kIHVzZSB0aGUgdGVjaG5pcXVlcyBhZnRlciBjdXN0b21pemluZyB0aGVtIGluIHRoZWlyIG93biB3YXkuLiAKWW91IHVzdWFsbHkgZG9uIHJlYWxseSBnZXQgcGFzdCBhICsxMCB0byBoaXQgYm9udXMgd2l0aCB5b3VyIGNoYXJhY3RlciwgdW50aWwgc29tZXdoZXJlIGFyb3VuZCBsdmwgMTcsIG9yIHdpdGggbWFnaWMgaXRlbXMuIApUaGUgcG9rZXIgcm9vbSBpcyBqdXN0IG9mZiBmcm9tIGEgbmlnaHRjbHViIGFuZCB5b3UgZ2V0IGEgc3RlYWR5IHN0cmVhbSBvZiBzb21lIG9mIHRoZSB3b3JsZCBtb3N0IGJlYXV0aWZ1bCB3b21lbiBzdHVtYmxpbmcgb3V0IHdlYXJpbmcgbmV4dCB0byBub3RoaW5nIG9uIHdlZWtlbmQgZXZlbmluZ3MuIFNvbWVvbmUgYXQgb3VyIHRhYmxlIGFjdHVhbGx5IHBhaWQgYSBndXkgJDIwIGF0IHRoZSB0YWJsZSBuZXh0IHRvIHVzIHRvIG1vdmUgc28gaGUgaGFkIGEgYmV0dGVyIHZpZXchLiAKT3RoZXIgdGhhbiBQaW5vdCBTaXZpL0dyaXMvR3JpZ2lvLCBJIHByb2JhYmx5IGF2b2lkIG90aGVyIGludGVybmF0aW9uYWwgdmFyaWF0YWxzLiBUaGVyZSBhcmUgc29tZSBQbGF2YWMgYmFzZWQgYmxlbmRzIHRoYXQgaW5jbHVkZSBSaG9uZSBvciBib3JkZWF1eCB2YXJpYXRhbHMgdGhhdCBjYW4gYmUgb2theSwgYnV0IHR5cGljYWxseSB0aGUgY2FicywgY2hhcmRzLCBTYXV2IEJsYW5jcywgZXRjLiBhdCBEdWJyb3ZuaWsgd2luZSBiYXJzIGFyZSBqdWcgd2luZXMgbWFkZSBmb3IgdG91cmlzdHMgdGhhdCBhcmUgZXh0cmVtZWx5IG9mZmVuc2l2ZS4gUHJvYmFibHkgYmVzdCB0byBhdm9pZCByb3NlcyBmb3IgdGhlIHNhbWUgcmVhc29uLCBhbHRob3VnaCBJIHN1cmUgd2l0aCB0aGUgY3VycmVudCBpbnRlcm5hdGlvbmFsIGludGVyZXN0IHRoZXJlIGFyZSBhdCBsZWFzdCBzb21lIGRlY2VudCBvbmVzIGJlaW5nIG1hZGUgbm93LgpXaW4gTWF1aSBJbnZpdGF0aW9uYWwgdGl0bGUKTWFnaXN0cmF0ZSBCdXJucyBiZWdhbiBoZXIgY2FyZWVyIGFzIGEgY291cnQgb2ZmaWNlciBhdCBXeW9uZywgQmVsbW9udCBhbmQgV2FsbHNlbmQgaW4gdGhlIG1pZCAxOTgwcyBiZWZvcmUgYmVpbmcgYWRtaXR0ZWQgdG8gdGhlIGJhciBpbiAxOTk4LiAKQ29udHJhaXJlbWVudCBhdXggc2VzcXVpdGVycG5lcywgZG9udCBub3VzIGF2b25zIGRpdCBxdSBzb250IGRlcyBtb2xjdWxlcyBsb3VyZGVzLCBsZXMgbW9ub3RlcnBuZXMgc29udCBkZXMgbW9sY3VsZXMgbGdyZXMgZG9udCBsYSBkdXJlIGRlIHJ0ZW50aW9uIGVzdCBsYSBwbHVzIGNvdXJ0ZSBsb3JzIGRlIGxhIGRpc3RpbGxhdGlvbi4gUGFyIGV4ZW1wbGUsIGwgZCBsIHByc2VudGUgYXVzc2kgYmllbiBkYW5zIGwgZXNzZW50aWVsbGUgZGUgY3lwcnMgdG91am91cnMgdmVydCBxdWUgZGFucyBjZWxsZSBkZSBsYXVyaWVyIG5vYmxlLCBhcHBhcmF0IHRvdWpvdXJzIGVuIHByZW1pZXIgYXBycyBlbnZpcm9uIDE1IG1pbnV0ZXMgZGUgZGlzdGlsbGF0aW9uLiBEZSBmYWl0LCBlbiBwYXJmdW1lcmllLCBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBxdWkgY29udGllbm5lbnQgYmVhdWNvdXAgZGUgbW9ub3RlcnBuZXMsIGNvbW1lIGxlcyBhZ3J1bWVzLCBzb250IGVtcGxveWVzIGNvbW1lIG5vdGUgZGUgdHRlLCBjIGxhIGZyYWN0aW9uIHBhcmZ1bWUgbGEgcGx1cyB2b2xhdGlsZSBxdWkgbGFpc3NlcmEgZW5zdWl0ZSBsYSBwbGFjZSAgbGEgbm90ZSBkZSBjdXIsIGVuZmluICBsYSBub3RlIGRlIGZvbmQuCklmIHlvdSBkb24gdW5kZXJzdGFuZCBLb3JlYW4gdGhlbiB5b3VsbCBuZWVkIHRvIHB1c2ggb3B0aW9uIDIgdGhhdCB3aWxsIGRpcmVjdCB5b3UgdG8gYW4gRW5nbGlzaCBzcGVha2luZyBhc3Npc3RhbnQuIApMZXMgQW5uYWxlcyBha2FzaGlxdWVzLCBnYWxlbWVudCBhcHBlbGVzIEFyY2hpdmVzIGFrYXNoaXF1ZXMsIENocm9uaXF1ZXMgYWthc2hpcXVlcyBvdSBlbmNvcmUgTW1vaXJlIGFrYXNoaXF1ZSBzb250IHVuIGNvbmNlcHQgc290cmlxdWUgY3IgcGFyIGxlcyB0aG9zb3BoZXMgIGxhIGZpbiBkdSBYSVhlIHNpY2xlLCAgcGFydGlyIGQgZGUgbGEgcGhpbG9zb3BoaWUgaW5kaWVubmUgZXQgcG9wdWxhcmlzIGVuIE9jY2lkZW50IHBhciBsZXMgbGl2cmVzIGRlIExvYnNhbmcgUmFtcGEsIGV0IGdhbGVtZW50IGRhbnMgbGVzIHBheXMgZnJhbmNvcGhvbmVzIHBhciBsZXMgb3V2cmFnZXMgZGUgRGFuaWVsIE1ldXJvaXMgZXQgQW5uZSBHaXZhdWRhbi4gTGEgbWVtb2lyZSBha2FzaGlxdWUgZXN0IHVuIGNvbmNlcHQgaXNzdSBkZSBsYSBwaGlsb3NvcGhpZSBoaW5kb3VlLiAKV2UgYXJlIHNvIGdsYWQgdG8gaGVhciB0aGF0IHlvdSBoYWQgYSBtZW1vcmFibGUgYW5kIHdvbmRlcmZ1bCBzdGF5IHdpdGggdXMuIApJZiB5b3UncmUgYSBnb29kIHBsYXllciwgeW91IGhhdmUgYSBzaG90IGF0IHNjb3JpbmcgdGhvdXNhbmRzLCBhbmQgc29tZXRpbWVzIHRlbnMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMsIHdpdGhvdXQgZXZlbiBsZWF2aW5nIHlvdXIgaG9tZS4uIApMaWtlIHRoZSBhcHBsZSBhbmQgdGhlIG9yYW5nZSwgaXQgZG9lc24gbWF0dGVyIGhvdyBsb25nIHlvdSB0YWtlIHRvIHBvbmRlciB0aGUgcHJvYmxlbSwgaW4gdGhlIGVuZCB5b3Ugd2lsbCBhbHdheXMgY2hvb3NlIHRoZSBvbmUgeW91IHdlcmUgZ29pbmcgdG8gY2hvb3NlIGFuZCBvbmx5IGdvZCBrbm93cyB3aGljaCBvbmUgdGhhdCBpcy4gSWYgdGhlIGNob2ljZXMgYXJlIEhlYXZlbiBhbmQgSGVsbCwgeW91IGFscmVhZHkgaGF2ZSBhIHNlYXQgaW4gb25lIG9mIHRoZW0uIApIZSB0b2xkIHRoZSBPcmxhbmRvIFNlbnRpbmVsIGhpcyBicm90aGVyIGhhZCByZWNlbnRseSBib3VnaHQgdGhlaXIgbW90aGVyIGEgbmV3IHdhbGtlci4KVGhlIG9ubHkgcHJvYmxlbSB0aGF0IEhvbGx5d29vZCdzIGlubmVyIGNpcmNsZSB0aWdodGVuZWQgZXZlbiBoYXJkZXIgYXJvdW5kIHRoZSBkZXRhaWxzIG9mIHRoZSByaW5nLCBhbmQgbm9ib2R5IHdvdWxkIHRhbGsuIEl0J3MgaGFyZCB0byBtYWtlIGEgbW92aWUgYmFzZWQgc29sZWx5IG9uIGNvbmplY3R1cmUuIAoiV2UgYWx3YXlzIHRyaWVkIHRvIG1ha2Ugc3VyZSB0aGUgZm91bmRhdGlvbiB3YXMgcnVuIG9uIGEgc2hvZXN0cmluZyBidWRnZXQuIiBUaGUgcmVhbGl0eSwgaG93ZXZlciwgY29udHJhZGljdGVkIGhpcyBjbGFpbXMgdGhhdCB0aGUgZm91bmRhdGlvbiBoYWQganVzdCBoYWQgYSBiYWQgeWVhciBvciB0d28uIEZpbmFuY2lhbCByZWNvcmRzIHNob3cgdGhlIGZvdW5kYXRpb24gZG9uYXRlZCB0byBjaGFyaXR5IGp1c3QgMjQgY2VudHMgb2YgZXZlcnkgZG9sbGFyIGl0IHJhaXNlZCBpbiAyMDE0IDE1LCB0aGUgbW9zdCByZWNlbnQgeWVhciBhdmFpbGFibGUuIFRoaXMgY2hhcml0YWJsZSBkaXN0cmlidXRpb24gICB3b3J0aCBhYm91dCAkMTM0LDAwMCAgIG1lYW50IHRoZSBmb3VuZGF0aW9uIG9wZXJhdGVkIGF0IGEgbG9zcyBiZWNhdXNlIGV4cGVuc2VzIGNvbnN1bWVkIDg2IHBlciBjZW50IG9mIGl0cyByZXZlbnVlLiAKSXQgZ2l2ZXMgcGxheWVycyBhbiBvcHBvcnR1bml0eSB0byBwbGFuIHRoZWlyIGF0dGFjay4uIApFYXJseSBpbiBoaXMgY2FyZWVyIFJvZ2VycyB3YXMgb2Z0ZW4gdGltZXMgdGVhc2VkIGFib3V0IGhpcyB3ZWlnaHQuIFdoaWxlIGhlIGhhcyBuZXZlciBiZWVuIHdoYXQgeW91IHdvdWxkIGNhbGwgZmF0LCBoZSBoYXMgYmVlbiBoZWF2eSBhbmQgc29tZXRpbWVzIGxvb2tlZCBhIGJpdCBibG9hdGVkLiAKSXQncyBmcmVlemluZyB1cCBvbiBtZSBjb25zdGFudGx5LCBubyBtYXR0ZXIgd2hhdCBwcm9ncmFtIEknbSBydW5uaW5nIGFuZCBpdCdzIGJlaW5nIGluY3JlZGlibHkgc25vdHR5IGFib3V0IHJlc3RhcnRpbmcgICBsaWtlIGl0IHdvbid0IDg3LjIlIG9mIHRoZSB0aW1lLiAKIlRoZW4sIGFzIHNvb24gYXMgc29tZWJvZHkgcGxvcHMgZG93biBvbiB0aGUgY291Y2ggb3IgdGhlcmUncyBhIHNwaWtlIGluIGh1bWlkaXR5IHRob3NlIG1vbGVjdWxlcyBnZXQgcmUgcmVsZWFzZWQgaW50byB0aGUgYWlyLCIgc2hlIHNheXMuIApJdCBpcyB0byBsaXZlIGluIHRoZSBjcnVlbGxlc3QgYW5kIG1vc3QgYmxvb2R5IHJlZ2ltZSBpbWFnaW5hYmxlLiAKVGhlIGFubnVhbCBEYW5lIENvdW50eSBFTVMgQmFucXVldCB3YXMgaGVsZCB0aGlzIHdlZWtlbmQsIGFuZCBNYWRpc29uIEZpcmUgRGVwYXJ0bWVudCB3YXMgd2VsbCByZXByZXNlbnRlZCBpbiBtYW55IG9mIHRoZSBjYXRlZ29yaWVzLiBUaGUgbmlnaHQgZ290IHN0YXJ0ZWQgd2l0aCAiWWVhcnMgb2YgU2VydmljZSIgYXdhcmRzLCBhbmQgTUZEIG1lbWJlcnMgYXBwZWFyZWQgaW4gYWxsIGNhdGVnb3JpZXMuIEZvciAyMCB5ZWFycyBvZiBzZXJ2aWNlLCBNYWRpc29uIEZpcmUgd2FzIHJlcHJlc2VudGVkIGJ5IFJvbmFsZCBCbHVtZXIsIEpvaG4gQ2xhcmssIERvdWdsYXMgS29yZHVja2ksIEplZmZyZXkgTWFyY2hpbGxvLCBQZXRlciBNYXR0LCBSb2JlcnQgUmVhZHksIFRob21hcyBSZWl0ZXIsIFBhdWwgUmlwcCwgRWxpemFiZXRoIFJpc2xlciwgVGVyZW5jZSBSaXR0ZXIsIFN0ZXZlbiBUZW5uYW50LCBKb3NlcGggVGlsbGVyLCBhbmQgTGlzYSBWYW4gQnVza2lyay4gClRoZXknbGwgbGlrZWx5IGZpbmQgYSBjYXRjaCB0byBkZW55IHlvdXIgImZyZWUiIHBsYW5lIHRyYXZlbCBvciBjcnVpc2UsIGluY2x1ZGluZyBhIHN0YWdnZXJpbmcgbnVtYmVyIG9mIGJsYWNrb3V0IGRhdGVzLiBJZiB5b3UgZG8gZ2V0IHRoZSB0cmlwLCByZXN0IGFzc3VyZWQgaXQgd29uJ3QgYmUgZnJlZS4KSG93ZXZlciwgdGhlIHBvd2VyIG9mIG11dHVhbCBzdWdnZXN0aW9uIGlzIHZlcnkgc3Ryb25nLCBhbmQgaXQgaXMgZWFzeSB0byBiZWNvbWUgY29udmluY2VkIHRocm91Z2ggY2FzdWFsIGNvbnZlcnNhdGlvbiB0aGF0IHR3byBzaW1pbGFyIGRyZWFtcyBhcmUgaWRlbnRpY2FsLiAKVGhlIGVtYWlsIGhhZCB0aGUgdGFpbCAiU2VudCBmcm9tIG15IGlQaG9uZS4iIFRoZXkgZXhjaGFuZ2VkIHNldmVyYWwgbW9yZSBlbWFpbHMgY29uZmlybWluZyB0aGUgYWNjb3VudCBudW1iZXIgYW5kIHNoZSB3ZW50IGFoZWFkIHdpdGggdGhlIHRyYW5zZmVyLiAKRmVsaW5lIGltbXVub2RlZmljaWVuY3kgdmlydXMgKEZJVikgc291bmRzIGEgbG90IGxpa2UgdGhlIGh1bWFuIGltbXVub2RlZmljaWVuY3kgdmlydXMgKEhJViksIHRoZSB2aXJ1cyBhc3NvY2lhdGVkIHdpdGggQUlEUy4gVGhhdCdzIG5vIGNvaW5jaWRlbmNlOiBGSVYgYW5kIEhJViBiZWxvbmcgdG8gdGhlIHNhbWUgY2xhc3Mgb2YgdmlydXNlcywgYnV0IHRoYXQncyB3aGVyZSB0aGUgc2ltaWxhcml0aWVzIGVuZC4gCkZyZWUgY2hpcHMgZnJvbSBaeW5nYSBpcyBpdCB0cnVlIG9yIHNjYW0KRGl2aW5nIGhhcyBzYXZlZCBJdGFseSBmcm9tIHR3byBjb3VudHJpZXMgd2hvc2UgY29tYmluZWQgcG9wdWxhdGlvbiBpcyBoYWxmIG9mIHRoZWlycyBhbmQgZm9yIHdoaWNoIGZvb3RiYWxsIHJhbmtzIGFzIHJvdWdobHkgdGhlIDV0aCBvciB3b3JzdCBtb3N0IHBvcHVsYXIgc3BvcnQuIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1RoZXJlIHdhcyBhIG1pbnVzY3VsZSBhbW91bnQgb2Ygc2hpcnQgcHVsbGluZyB0aGVyZSwgbm8gbW9yZSB0aGFuIHdoYXQgdGhlIEl0YWxpYW4gcGxheWVycyBkaWQgdGhlbXNlbHZlcyBpbiB0aGlzIGdhbWUgYW5kIG90aGVycy4gCkN1c3RvbWVyIFNlcnZpY2VEaWdpdGFsIFN1cHBvcnREaXJlY3RvcnlBYm91dCBPdXIgQWRzQWR2ZXJ0aXNlIHdpdGggVXNQQVkgWU9VUiBBRCBCSUxMUHJpdmFjeSBwb2xpY3lUZXJtcyBvZiB1c2UKU3RpbGwsIHRoZXJlIHdpbGwgYmUgb3RoZXIgZGVmaW5pdGlvbnMgb2Ygc3VjY2VzcywgYmV5b25kIHRoZSBudW1iZXJzLiBDaHUgZHJlYW1zIG9mIHRoaXMgbW92aWUgYmVpbmcgcmVwZWF0ZWRseSBwbGF5ZWQgb24gYSB0ZWxldmlzaW9uIGNoYW5uZWwgbGlrZSBUQlMsIGFuZCBoZSBoYXMgaGVhcmQgZGlyZWN0bHkgZnJvbSBmYW5zIGFib3V0IGhvdyBpdCBoYXMgY2hhbmdlZCB0aGUgd2F5IHRoZXkgc2VlIHRoZW1zZWx2ZXMgbWVuIHdobyB0ZWxsIGhpbSB0aGV5IHRvIGJlIGFuIEFzaWFuIGR1ZGUgYW5kIHRob3NlIHdobyBuZXZlciB3b3VsZCB3YXRjaGVkIGEgcm9tYW50aWMgY29tZWR5IGJlZm9yZS4gZGlkbiBrbm93IHdlIHdvdWxkIGdldCB0aGF0IGtpbmQgb2YgcmVhY3Rpb24sIGhlIHNheXMuClNvbWUgZXNzZW50aWFsIGZ1bmN0aW9ucyBvZiBvdXIgV2Vic2l0ZXMgYW5kIEFwcHMgYXJlIG9ubHkgcG9zc2libGUgaWYgaW5mb3JtYXRpb24gaXMgc3RvcmVkIHBlcnNpc3RlbnRseSBiZXR3ZWVuIGVhY2ggcGFnZSB5b3UgbG9vayBhdC4gCkZvciBTZWFycyB0byBrZWVwIHRoZWlyIGVudGlyZSBjYXRhbG9nIGFmbG9hdCBhbmQgdHJhbnNpdGlvbiBpdCBvbmxpbmUgd291bGQgaGF2ZSB0YWtlbiBhbWF6aW5nIHByZXNjaWVuY2UgYW5kIGludmVzdG9ycyB3aWxsaW5nIHRvIGxvc2UgYmlsbGlvbnMgb24gdGhlIHZlbnR1cmUgZm9yIHR3byBkZWNhZGVzLCBjdXQgb3ZlcmhlYWQsIGFuZCBzZWxsIG9mZiB0aGVpciBicmljayBhbmQgbW9ydGFyIHNwYWNlIGluIG9yZGVyIHRvIGtlZXAgdGhlIG9ubGluZSBkaXZpc2lvbiBhZmxvYXQuIEEgYmlnIGNvbXBhbnkgd2l0aCB0cmFkaXRpb25hbCBzdG9jayBob2xkZXJzIGp1c3QgY2FuIHBpdm90IGxpa2UgdGhhdC4KSWYgeW91IGFueXRoaW5nIGVsc2UgKGhvYmJ5aXN0LCBiZWdpbm5lciwgZXRjLikgdGhlbiBzdXJlIGl0IGNvdWxkIHdvcmsgZm9yIHlvdSAoYXMgcGVvcGxlIHNhaWQgbmVlZCB0byBjYWxpYnJhdGUpLiAKR3JvY2VyeSBzdG9yZXMgZG8gbm90IGxhYmVsIGZpc2ggdGhhdCBhcmUgbGlrZWx5IHRvIGhhdmUgYSBoaWdoIGNvbnRlbnQgb2YgdG94aW5zLgpIZSByZWNlaXZlZCA0NiBwZXIgY2VudCBvZiB0aGUgdm90ZXMuLiAKSm9zZSBHb25jYWx2ZXMgYmFjayAgRm9yIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmUuIFJldm9sdXRpb24gR2VuZXJhbCBNYW5hZ2VyIE1pa2UgQnVybnMgdG9vayB0aW1lIHRvIHNwZWFrIHdpdGggbWVkaWEgcHJpb3IgdG8ga2ljayBvZmYgYWJvdXQgdGhlIEdvbmNhbHZlcyBzaXR1YXRpb24uIEhlIHNhaWQgdGhhdCBHb25jYWx2ZXMgYW5kIHRoZSBjbHViIGhhZCBoYWQgZGlzY3Vzc2lvbnMgYW5kIHRoYXQgdGhlIHJlaWduaW5nIGxlYWd1ZSBEZWZlbmRlciBvZiB0aGUgWWVhciBpcyBoYXBweSBpbiBOZXcgRW5nbGFuZCBhbmQgaGFzIHB1dCBwYXN0IGRpc3B1dGVzIGJlaGluZCBoaW0uIApJdCBjYW4gYmUgaGFyZCB0byBrbm93IHdoZW4gYSBnb29kIHRpbWUgdG8gdGFrZSBhIGZpZ2h0IGlzIGZvciBuZXcgcGxheWVycy4gCkluIHRoZSByYXRoZXIgcHJpdmlsZWdlZCBhbmQgaXNvbGF0ZWQgd29ybGQgb2YgYWNhZGVtZSwgYSBiaW5hcnkgYW5kIHJpZ2lkIGdlbmRlciBzeXN0ZW0gaXMgc2VlbWluZ2x5IGEgdGhpbmcgb2YgdGhlIHBhc3QuIE9mIGZlbWluaXNtIGFuZCBmZW1pbmlzdCBzY2hvbGFyc2hpcCBoYXZlIHNoYXBlZCBzdHVkZW50cyBpZGVhcyBhYm91dCB3aGF0IHRoZXkgY2FuIGFuZCBjYW5ub3QgZG8uIApMaXN0ZW5pbmcgU2tpbGxzIEdvb2QgbWFzc2FnZSB0aGVyYXBpc3RzIGFyZSBnb29kIGxpc3RlbmVycy4gRXZlcnkgY2xpZW50IGlzIGFuIGluZGl2aWR1YWwgd2l0aCBhIGRpc3RpbmN0IHNldCBvZiBwaHlzaWNhbCBhbmQgZW1vdGlvbmFsIG5lZWRzLiBUbyBmaW5kIG91dCB3aGF0IHRoZSBjbGllbnQgbmVlZHMgZnJvbSBoZXIgbWFzc2FnZSwgeW91IGhhdmUgdG8gYmUgYWJsZSB0byBsaXN0ZW4gY2xvc2VseSBvbiBhIGNvbnRpbnVvdXMgYmFzaXMgYW5kIGFkanVzdCB5b3VyIHRlY2huaXF1ZSBhY2NvcmRpbmdseS4gVGhlIHNhbWUgdGVjaG5pcXVlIHRoYXQgbWlnaHQgYmUgdmVyeSB0aGVyYXBldXRpYyBmb3Igb25lIGNsaWVudCBjb3VsZCBiZSB0b28gaW50ZW5zZSBmb3IgYW5vdGhlci4gSWYgeW91IHRyeSB0byBpbXBvc2UgeW91ciBvd24gdmlld3Mgb24geW91ciBjbGllbnQncyBleHBlcmllbmNlLCB0aGF0IGNsaWVudCBpcyBsaWtlbHkgdG8gZ28gdG8gYW5vdGhlciBtYXNzYWdlIHRoZXJhcGlzdCBuZXh0IHRpbWUgaW5zdGVhZCBvZiBiZWNvbWluZyBhIHJlcGVhdCBjdXN0b21lci4KVGhlIGdyaW5kIGlzIHRvbyBkYW1uIHNsb3csIEkgd2FudCB0byBidXkgbW9yZSBtZWNocyBidXQgaXQgdGFrZXMgc28gbG9uZyB0byBncmluZCB0aGVtIHRoYXQgaXQgaGluZGVycyBtZSBmcm9tIGRvaW5nIHNvLlVsamlyYSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhhdCBkb2VzbiBtZWFuIGFsbCB0aGF0IG11Y2ggaW1vLiAKSW4gaXRzIGRheSwgdGhlIG9sZCBSU0wgQ2x1YiB3YXMgYSBtYWduZXQgZm9yIG5hdGlvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIGVudGVydGFpbmVycywgd2l0aCBuYW1lcyBsaWtlIEFDIERDLCBNaWRuaWdodCBPaWwsIENvbGQgQ2hpc2VsIGFuZCBBdXN0cmFsaWFuIENyYXdsIGRyYXdpbmcgaHVnZSBjcm93ZHMgaW50byB0aGUgMTI2IGZvb3QgKDQwIG1ldHJlKSBhdWRpdG9yaXVtLiAiVGhlIGNsdWIgd2FzIHNvIGluc3RydW1lbnRhbCB0byB0aGUgY29tbXVuaXR5LiAiSXQgd2FzIHNlZW4gYXMgYSBsZWFkZXIsIGFsd2F5cyBkb2luZyBzb21ldGhpbmcgZGlmZmVyZW50LCIgTXJzIEh5ZGUgc2FpZC4gClRoZSBHYW1lIFNob3cgTmV0d29yayBjYWxsZWQgaGVyICJ0aGUgYmVzdCBmZW1hbGUgZ2FtYmxlciBvbiBlYXJ0aC4iIE5vdyByZXRpcmVkLCBDYXQgc2F5cyBzaGUgaXMgbm90IHN1cmUgdGhhdCBzaGUgd291bGQgbGVnYWxpc2UgZ2FtYmxpbmcgaW4gYSBzdGF0ZSB0aGF0IGRpZCBub3QgaGF2ZSBpdCAgIGFzIGl0IGNhbiBydWluIHNvIG1hbnkgbGl2ZXMuLiAKV2hpY2ggUG9rZXIgRmVsdCBMYXlvdXQgaXMgUmlnaHQgRm9yIFlvdXIgTmV4dCBIb21lIFBva2VyIFRvdXJuYW1lbnQKU2luY2UgdGhlbiwgdGhlIGNlbnRlciB1cGdyYWRlZCBzb21lIG9mIGl0cyBtYWNoaW5lcyB0byB0aGUgMjBLIHZlcnNpb24sIHdoaWNoIGhhcyBhIG1vdG9yIGFib3V0IDEwIHBlcmNlbnQgc3Ryb25nZXIgYW5kIHNtb290aGVyLiBJdCBhbHNvIGhhcyBhICJ3ZWlnaHQgZXF1YWxpemVyLCIgc28gaXQgbW92ZXMgdGhlIHNhbWUsIG5vIG1hdHRlciB3aGF0IHVzZXJzIHdlaWdoOyBhIGNhbG9yaWUgZXN0aW1hdG9yOyBhbmQgYSBoZWFydGJlYXQgcmVhZGVyLiAKTG9uZywgc3VuIHNvYWtlZCBkYXlzIHByb2R1Y2UgYW4gaW1wcmVzc2l2ZSBib3VudHkgaW4gdGhlIHJpY2gsIGZlcnRpbGUgZmFybWxhbmQgc3Vycm91bmRpbmcgRWRtb250b24uIFJpdmVyYmVuZCBHYXJkZW5zLCBmb3IgaW5zdGFuY2UsIGdyb3dzIDQ1IGFjcmVzIG9mIHZlZ2V0YWJsZXMgdGhhdCBmZWVkIGxvY2FsIHJlc3RhdXJhbnRzIGFuZCBmYXJtZXJzIG1hcmtldHMuIHJvb3QgdmVnZXRhYmxlcywgdGhlIGNhcnJvdHMgYW5kIGJlZXRzLCB0aGUgcG90YXRvZXMgYXJlIHdvbmRlcmZ1bCwgTGVic2FjayBzYXlzLgpJIGRvbiBsaWtlIGFueSBvZiB0aGVtLiAKSG93ZXZlciB0aGlzIENocmlzdG1hcyBtYXkgaGF2ZSB0byBiZSBkaWZmZXJlbnQgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gcmVseSBvbiByZWFsbHkgYW1hemluZyBwcmVzZW50cyBsaWtlIGJlZm9yZS4gCkZvciBhbGwgdGhlIGNyaXRpY2lzbSBvZiB0aGUgY2xhbXBkb3duLCB0aGUgZmxpcCBzaWRlIGlzIGVhc3kgdG8gc2VlIGFzIHdlbGw6IFdpdGggZmV3ZXIgZXNjb3J0cyBhZHZlcnRpc2luZywgcHJvc3BlY3RpdmUgam9obnMgaGF2ZSBsZXNzIG9wcG9ydHVuaXR5LiBBbmQganVzdCBhcyBzb21lIHByb3N0aXR1dGVzIGFyZSBsb2F0aCB0byB3YWxrIHRoZSBzdHJlZXRzLCBzb21lIGpvaG5zIGFyZSBoZXNpdGFudCB0byBoaXJlIGNvbXBhbnkgb2ZmIHRoZSBjdXJiLiBNZW4gd2hvIG5vcm1hbGx5IGZpbmQgZXNjb3J0cyBvbiBDcmFpZ3NsaXN0IGFyZSBpbmNyZWFzaW5nbHkgc2NhcmVkIHRvIGRvIHNvLCBhY2NvcmRpbmcgdG8gb25lIHByb3N0aXR1dGUsIHdobyBzYXlzIGhlciBjbGllbnRzIGFyZSBlcXVhbGx5IHB1dCBvZmYgYnkgdGhlIGlkZWEgcG9saWNlIGNhbiBzdWJwb2VuYSBkZXRhaWxzIGFib3V0IHRoZWlyIGRhdGUuLiAKKHdvcmtwbGFjZSBodW1vci4gClllcywgaXQgaXMsIGFzIGl0IGlzIHdpdGggYWxtb3N0IGV2ZXJ5dGhpbmcgaW4gbGlmZS4gSSB0aGluayB5b3Ugc2hvdWxkIGhhdmUgZm9jdXNlZCBhIGxvdCBtb3JlIG9uIFN0YW5kYXJkIGNhcmQgcHJpY2VzIHRoYW4gcmVmZXJyaW5nIGJhY2sgdG8geW91ciBzY2FsZGluZyB0YXJucyBiZWluZyBleHBlbnNpdmUsIGJlY2F1c2UgdGhhdCByZWFsbHkgZGlkIG1ha2UgaXQgc2VlbSBsaWtlIHlvdSB3ZXJlIGp1c3QgZnJ1c3RyYXRlZCB0aGF0IG1hZ2ljIGNvc3RzIG1vbmV5IGFuZCB3YXMga2luZCBvZiBpcnJlbGV2YW50IHRvIHRoZSBzdGFuZGFyZCBwb2ludC4gCkkgZGlzYWdyZWUgc3Ryb25nbHkgd2l0aCB0aGUgaWRlYSAieW91IGhhdmUgdG8gaGF2ZSBhIGZ1bGwgZG9zZSBmaXJzdCIuIEkgZmVlbCB0aGVyZSBhcmUgbWFueSBmb2xrcyBvbiB0aGlzIGZvcnVtIHdobyBhcmUgZmFucyBvZiB0cmlwcGluZyBhbmQgdGhpbmsgb2YgbWljcm9kb3NpbmcgYXMganVzdCBzb21ldGhpbmcgbGlrZSAibGlnaHQgdHJpcHBpbmciLiAKSSB0aGluayB0aGF0IGNvdWxkIGJlIGludGVyZXN0aW5nIHN0aWxsLiBUd28gcGxheWVycyBlbmdhZ2VkIGluIGEgYnVpbGQgYmF0dGxlIHdvdWxkIHByb2JhYmx5IHN0cnVnZ2xlIHRvIHRha2UgYXdheSBoaWdoIGdyb3VuZCB2aWEgZWRpdGluZywgc2luY2UgaXQgbGVhdmVzIHlvdSB2dWxuZXJhYmxlLiBUaGUgb25seSBpbnN0YW5jZSBpdCB3b3VsZCBiZSB1c2VmdWwgaXMgaWYgdGhlIGxvdyBncm91bmQgaXMgaW4gYSBzdGFsZW1hdGUsIGZvcmNpbmcgZWl0aGVyIHRoZSBoaWdoIGdyb3VuZCB0byBhZ2dyZXNzaXZlbHkgcHVzaCB0aGUgYWR2YW50YWdlIG9yIHBvdGVudGlhbGx5IGdldHRpbmcgYSByZXNldCBvbiBoZWlnaHQuLiAKVHJ1ZSwgc29tZXRoaW5nIGNvdWxkIGhhcHBlbiB0byB0aGF0IHNwZWNpZmljIHNwb3QgKGZpcmUpIHRvIHBoeXNpY2FsbHkgZGVzdHJveSBlYWNoIGRyaXZlcyBidXQgaW4gYSBzb2Z0d2FyZSByYWlkLCB0aGVyZSBub3QgYSBzY2VuYXJpbyBzaG9ydCBvZiBhIHBoeXNpY2FsIGRhbmdlciB3aGVyZSB0aGV5IGNhbiBib3RoIGJlIHdpcGVkIGF0IHRoZSBzYW1lIHRpbWUuCkRpZCBzaGUgc3BlY2lmaWNhbGx5IHNheSAiVGhpcyBndXkgaXMgYXMgYmFkIGFzIHNsYXZlb3duZXJzIGFuZCBOYXppcyEiPyBObywgc2hlIGRpZG4gc2hlIGFic29sdXRlbHkgZGlkIG1ha2UgaXQgY2xlYXIgdGhhdCBzaGUgY29uc2lkZXJzIHJlbGlnaW9uLCBhcyBzdWNoLCB0byBiZSB0aGUgY2F1c2Ugb2YgYSBteXJpYWQgb2YgZXZpbHMgdGhyb3VnaG91dCBoaXN0b3J5LiBUaGlzIHJhaXNlcyByZWFzb25hYmxlIGRvdWJ0cyBhcyB0byBoZXIgb2JqZWN0aXZpdHksIGluIHRoYXQgaGVyIHN0YXRlbWVudCBtYWRlIGl0IGFidW5kYW50bHkgY2xlYXIgdGhhdCBzaGUgd2FzIG5vdCBwcmVwYXJlZCB0byBnaXZlIGZyZWVkb20gb2YgcmVsaWdpb24gY2xhaW1zIGEgZmFpciBoZWFyaW5nLiAKIjkwMjEwIiBjbyBzdGFyIElhbiBaaWVyaW5nIHBhaWQgdHJpYnV0ZSB0byBoaXMgY28gc3RhciBvbiBUd2l0dGVyICwgd2hlcmUgZmFucyBhbmQgY2VsZWJyaXRpZXMgc2hhcmVkIHRoZWlyIG1lbW9yaWVzIG9mIFBlcnJ5IGFuZCBtb3VybmVkIGhpbSAuICJJIHdpbGwgZm9yZXZlciBiYXNrIGluIHRoZSBsb3ZpbmcgbWVtb3JpZXMgd2UndmUgc2hhcmVkIG92ZXIgdGhlIGxhc3QgdGhpcnR5IHllYXJzLCIgWmllcmluZyBzYWlkLiAiTWF5IHlvdXIgam91cm5leSBmb3J3YXJkIGJlIGVucmljaGVkIGJ5IHRoZSBtYWduaWZpY2VudCBzb3VscyB3aG8gaGF2ZSBwYXNzZWQgYmVmb3JlIHlvdSwganVzdCBsaWtlIHlvdSBoYXZlIGRvbmUgaGVyZSwgZm9yIHRob3NlIHlvdSBsZWF2ZSBiZWhpbmQuIi4gClRpY2tldHMgYXJlICQzMCBhbmQgaW5jIFJlZnJlc2htZW50cyBmcm9tIDEyIG5vb24gdG8gM3BtIHBsdXMgTHVuY2guIApOb3Qgb25seSBkaWQgUmVhZ2FuIHN0YXJ0IHRoZSB0cmVuZCBvZiBjdXR0aW5nIGVkdWNhdGlvbiBmcm9tIHRoZSBmZWRlcmFsIGJ1ZGdldCwgYnV0IGhlIGFsc28gb3ZlcnNhdyB0aGUgZGVyZWd1bGF0aW9uIG9mIGJhbmtpbmcgdGhhdCBsZWQgdG8gY29tbWVyY2lhbCBiYW5rcyB0YWtpbmcgb3ZlciBzdHVkZW50IGxvYW5zLiAKVGhhdCBub3QgcGFydGljdWxhcmx5IG5vdGV3b3J0aHkgc3VjY2VzcyBhdCBhbiBpbmZlcmlvciBsZXZlbCBvZiBiYWxsLi4gCk1vc3QgcGVvcGxlIHdvbiBUaGV5IHN0b3AgICBsaWtlIHlvdSBkaWQgICBhdCB0aGUgb2J2aW91cyBhbmQgdGhleSB3aWxsIGRpc21pc3MgaXQgYXMgY3Jhc3Mgb3IgcG9pbnRsZXNzLiAKVGhlIGV4YW1wbGUgeW91IGdhdmUgaXMgYSBwZXJzb24gd2hvIGNsZWFybHkgYWN0cyBxdWVlciBvbiBwdXJwb3NlLiBBbmQgeWVzLCB0aGVuIHlvdSBjYW4gdGVsbC4gSG93ZXZlciwgdGhlIHBvaW50IGlzIHJhdGhlciB0aGF0IG5vdCBhbGwgb2YgdGhlbSBhcmUgbGlrZSB0aGF0LiAKSSBsb3ZlIHRoYXQgdGhlIEtvcmVhbnMgaGF2ZSBwdXQgdGhlaXIgb3duIHNwaW4gb24gY29mZmVlLCB0b287IGhhdmluZyBleHBlcmllbmNlZCBpdCBoZXJlLCBhbmQgaGF2aW5nIHJlYWQgYWJvdXQgVmlldG5hbSBjb2ZmZWUgY3VsdHVyZSBmcm9tIHlvdSwgSSByZWFsbHkgd2FudCB0byBoZWFkIHRvIFZpZXRuYW0gYW5kIGdpdmUgaXQgYSBzaG90LiBBcyBteSBvZmZpY2UgbWF0ZSBwdXRzIGl0IChzaGUgS29yZWFuKSwgIndlIHZlcnkgZ29vZCBhdCBpbXByb3Zpbmcgb24gYW5kIGNvbWJpbmluZyBleGlzdGluZyBpZGVhcy4iLiAKSXQgaXMgdGhlcmUgdG8gaG9uZSB5b3VyIHNraWxscywgbm90IHJlcGxhY2UgdGhlbS4gRmFsbGluZyBpbiB0byB0aGUgdHJhcCBvZiBhbGxvd2luZyBpdCB0byBtYWtlIHlvdXIgZGVjaXNpb25zIGZvciB5b3UgY2FuIHB1dCB5b3UgYXQgYSByZWFsIGRpc2FkdmFudGFnZSBkb3duIHRoZSByb2FkLiAKV2hhdCBTaG91bGQgV2UgQmUgRmVlZGluZyBPdXIgRG9ncwpJdCBub3QuICBkZXNlcnZlcyB0byBkaWUuIApXZSBhcmUgU2luZ2Fwb3JlYW5zIGFuZCB3ZSBMT1ZFIG91ciBjdXJyaWVzICAgYmUgaXQgY2hpY2tlbiBjdXJyeSAvIGZpc2ggY3VycnkgLyBsYW1iIGN1cnJ5IC8gYmVlZiBjdXJyeSAvIGJlZWYgcmVuZGFuZyAvIGxvbnRvbmcgLyBtZWUgc2lhbS8gbGFrc2EgLyBQZXRhaSBzYW1iYWwgYmVsYWNoYW4gLyBheWFtIGJ1YWgga2VsdWFrIGV0Yy4gClJldmVhbCB0aGUgY2FyZHMgb24gdGhlIHRvcCBvZiB0aGUgZGVja3MgYW5kIHRoZW4gcHV0IHRoZXNlIGNhcmRzIGluIHRoZSBtaWRkbGUgb2YgdGhlIGRlY2tzIGFuZCB0YWxrIHRvIHRoZSBhdWRpZW5jZSB0byBkaXZlcnQgdGhlaXIgYXR0ZW50aW9uIGFuZCBmb3JnZXQgYWJvdXQgdGhlIHZhbHVlIG9mIHRoZSBjYXJkcy4gClRoZXJlJ3MgYSByZWFzb24gd2h5IHRoZSBhdmVyYWdlIGxpZmVzcGFuIGlzIGFib3V0IDUwIHllYXJzIGxvbmdlciB0aGFuIGl0IHdhcyAyMDAgeWVhcnMgYWdvLi4gClRoZW4gd2hlbiBJIHdhcyBhcm91bmQgMTYsIG15IG1vbSBnb3QgcmVhbGx5IGJhZCBhbmQgc3RhcnRlZCBsb2NraW5nIGhlcnNlbGYgaW4gaGVyIHJvb20gZnJvbSA5YW0gIDVwbSwgc2hlIGNvbWUgb3V0IGZvciBkaW5uZXIgKHRoYXQgSSBoYWQgdG8gY29vaykgdGhlbiBnbyBiYWNrIGluIGhlciByb29tIGZvciB0aGUgcmVzdCBvZiB0aGUgbmlnaHQsIHdoaWxlIG1lIGFuZCBteSBzaWJsaW5ncyBkaWQgdGhlIGRpc2hlcy4gVGhpcyB3YXMgZXZlcnkgc2luZ2xlIHdlZWsgZGF5Li4gCldhUG8gaGFzIGJlZW4gY3JhbW1lZCBmdWxsIG9mICJldmVyeW9uZSB3aG8gZG9lc24gZG9uYXRlIG1vbmV5IHRvIHRoZSBHb2xhbmkgQnJpZ2FkZSBpcyBhbiBhbnRpc2VtaXRlIiBnYXJiYWdlIHBpZWNlcyBsYXRlbHkuLiAKSXQncyBtZXJpdCBsaWVzIGluIHRoZSBhcmd1bWVudHMsIGxvZ2ljLCBhbmQgRkFDVFMgc2l0ZXMgdGhyb3VnaG91dC4gCkJlaW5nIGludHJpbnNpY2FsbHkgdmFsdWFibGUsIGFuZCBtb3Jlb3ZlciBmb3IgcHJvbXB0aW5nIHRoaXMgZXhhY3QgY29udmVyc2F0aW9uIHdlIGFyZSBoYXZpbmcuLiAKT25seSBieSBmaW5hbGx5IGFkbWl0dGluZyB0aGF0IHRvcnR1cmUgaGFwcGVuZWQsIHRvcnR1cmUgaXMgd3JvbmcsIGFuZCBhY3R1YWxseSBwdXJnaW5nIHRoZSBhZ2VuY3kgb2YgdGhvc2Ugd2hvIGNvbW1pdHRlZCB0b3J0dXJlIGNhbiB0aGUgQ0lBIGhhdmUgYW55IGNyZWRpYmlsaXR5IGFzIGFuIGFybSBvZiB0aGUgVVMgZ292ZXJubWVudC4gCihGb3IgaW5zdGFuY2UgYSA1MCwwMDAgcG9pbnRzIGNoaXAgaXMgTk9UIHdvcnRoICQ1MCwwMDApIChGdWxsIEFuc3dlcikuIApQaWNraW5nIEEgUG90IExpbWl0IE9tYWhhIFBva2VyIFJvb20KSWYgYW4gaXNzdWVyIGxvb2tzIGF0IHlvdXIgYWNjb3VudCBhbmQgc2VlcyB0aGF0IHRoZXJlIGhhc24ndCBiZWVuIGFueSBhY3Rpdml0eSBmb3IgYSB3aGlsZSAoaG93IGxvbmcgdmFyaWVzLCBidXQgbW9yZSB0aGFuIGEgeWVhciBpcyBhIGdvb2QgcnVsZSBvZiB0aHVtYiksIHRoZXkgbWlnaHQgY2xvc2UgaXQuIApBIGNvbGxlY3RpdmUgb2YgUGVyc2lhbiBQb3dlcnMgKElyYW4sIElyYXEsIFN5cmlhKSB3b3VsZCBjb21wcmlzZSBhbm90aGVyIGNhc2Ugb2Ygb25lIGhlYWQgYW5kIG11bHRpcGxlIGNyb3ducy4gVGhlIGNhbGlwaGF0ZSwgdGhlIGZvcm1lciBPdHRvbWFuIEVtcGlyZSwgaGVhZGVkIGJ5IFR1cmtleSwgY291bGQgYWxzbyBiZSByZXByZXNlbnRlZCBhcyBvbmUgaGVhZCB3aXRoIG11bHRpcGxlIGNyb3ducy4KVGhlIHRvcCByYW5rZWQgU2F1bmRlcnMgU2FicmVzIGJlYXQgdGhlIFV4YnJpZGdlIFRpZ2VycyAzIDAgKDI1IDIyLCAyNSAxNSwgMjUgMTQpIHRvIGNlbWVudCB0aGVpciBtYXJjaCB0byBoaWdoIHNjaG9vbCBzdXByZW1hY3kgV2VkbmVzZGF5IG5pZ2h0IGF0IEhheWRlbiBzZWNvbmRhcnkgc2Nob29sIGluIEJ1cmxpbmd0b24uCkl0IG5vdCwgYnV0IGl0IGNhbiBlYXNpbHkgYmUuIEFzIG90aGVycyBzYWlkLCBpdCByZWFsbHkgaXMgYSBkcnVnLCBpbiB0aGUgc3RyaWN0ZXN0IHNlbnNlIG9mIHRoZSB0ZXJtLCBsaWtlIGNvY2FpbmUgb3IgaGVyb2luZS4gSXQgbWFrZXMgeW91IHdhbnQgdG8gY29uc3VtZSBtb3JlLCBjYW4gaW5kdWNlIGFkZGljdGlvbiwgYW5kIHdpdGhkcmF3YWwgc3ltcHRvbXMuIApEYXlzIGFmdGVyIFdpa0xlYWtzIHJlbGVhc2VkIGRvY3VtZW50cyB0byBpbGx1c3RyYXRlIHdoYXQgYSBmdXRpbGUgd2FzdGUgb2YgbGlmZSBhbmQgcmVzb3VyY2VzIHRoZSB3YXIgaW4gQWZnaGFuaXN0YW4gaXMsIHRoZSBIb3VzZSB2b3RlZCB0byBzcGVuZCBhbm90aGVyICQ1OSBCSUxMSU9OIGRvbGxhcnMgb24gaXQuIApFdmVuIHNvbWUgc2ltcGxlIERyYWcgRHJvcCBpbiBzb21ldGhpbmcgbGlrZSB0aGUgUlBHIE1ha2VyIGdpdmVzIHlvdSBiZXR0ZXIgcmVzdWx0cy4uIApXYW50IHRvIGhlbHAgeW91ciBvZmZpY2UgbGlnaHRlbiB1cD8gRGlyZWN0IGV2ZXJ5b25lIHRvIGEgMjAxNCBzdHVkeSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFdhcndpY2ssIHdoaWNoIGZvdW5kIHRoYXQgaGFwcHkgZW1wbG95ZWVzIGFyZSBhYm91dCAxMiBwZXJjZW50IG1vcmUgcHJvZHVjdGl2ZSB0aGFuIHVuaGFwcHkgb25lcyBbc291cmNlOiBPc3dhbGQgZXQgYWxdLiBZb3UgY291bGQgYWxzbyBwb2ludCB0aGVtIHRvIEZvcnR1bmUncyBsaXN0IG9mIHRoZSAiMTAwIEJlc3QgQ29tcGFuaWVzIHRvIFdvcmsgRm9yLiIgSW4gMjAxMywgdGhlIGNvbXBhbmllcyBvbiB0aGlzIGxpc3Qgc2F3IHJldmVudWVzIGluY3JlYXNlIGJ5IGFuIGF2ZXJhZ2Ugb2YgMjIuMiBwZXJjZW50ICAgbm90IHRvbyBzaGFiYnkgW3NvdXJjZTogQmlyb10uIEl0J3Mgbm90IGp1c3QgbW9uZXkgdGhhdCBtYWtlcyBlbXBsb3llZXMgaGFwcHkgZWl0aGVyOyBqb2Igc2F0aXNmYWN0aW9uIGFsc28gaGFzIGEgZGlzdGluY3QgZnVuIGZhY3Rvciwgd2hpY2ggY29tZXMgZnJvbSBlbmNvdXJhZ2luZyBwZW9wbGUgdG8gYnJpbmcgdGhlaXIgcGVyc29uYWxpdGllcyBhbmQgaW50ZXJlc3RzIGludG8gdGhlIG9mZmljZSBhbmQgYWN0dWFsbHkgYmVpbmcgdGhlbXNlbHZlcyBpbnN0ZWFkIG9mIGNvcnBvcmF0ZSBjbG9uZXMuLiAKRGVwZW5kaW5nIG9uIHdoaWNoIG9mIGhpcyBib29rcyB1IHJlYWQgZmlyc3QsIGhlIGNvdWxkIGxpdGVyYWxseSBiZSB0aGUgYmVzdCBvciB0aGUgd29yc3QuIFRoYXQgZXZlcnkgc2luZ2xlIG9uZSBvZiBoaXMgYm9va3MvY29sbGVjdGlvbnMgYXJlIG92ZXIgbWFya2V0ZWQgYW5kIGh5cGVkIHVwIGJ5IGF0IGxlYXN0IG9uZSBhY2NvbXBhbnlpbmcgbW92aWUgZG9lc24gaGVscCBlaXRoZXIuIEF0IHRoaXMgcG9pbnQgaGUgY291bGQgd3JpdGUgdGhlIHBob25lIGJvb2sgYW5kIGl0IGJlIG9uIHRoZSBueXQgYmVzdHNlbGxlciBsaXN0LmFsZGlhbmR0ZXNjb3Nob3BwZXIgIDggcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb2Egc2xhbSBwaWc/IEkgaG9uZXN0bHkgaGFkIG5ldmVyIGhlYXJkIG9mIHRoYXQgdGVybSBiZWZvcmUuIApUaHguIApPbiB0aGUgb3RoZXIgaGFuZCwgYW55b25lIHdobyBpcyBnb29kIGVub3VnaCBhdCBzeXN0ZW1pemluZyB0byBoYW5kbGUgaGlnaCBsZXZlbCBUZXhhcyBIb2xkIHNob3VsZCBiZSBnb29kIGVub3VnaCBhdCBzeXN0ZW1pemluZyB0byB1bmRlcnN0YW5kIGJhc2ljIGVjb25vbWljIGNvbmNlcHRzIGxpa2UgcHJpY2UgZmxvb3JzLCBhZ2VuY3kgaXNzdWVzLCBldGMuIGJ1dCBmcmFua2x5IGl0IGEgbG90IG9mIHRpbWUgc3BlbnQganVzdCB0byByZWFsaXplIHRoYXQgcG9wdWxpc3QgcG9saXRpY3MgYXJlIHRyYXNoLCBhbmQgdGhhdCB0aGVyZSBpcyBsaXR0bGUgeW91IGNhbiBkbyB0byBzdG9wIG5vbiBzZWxmIHN1c3RhaW5pbmcgcGVvcGxlIGZyb20gdm90aW5nIHRoZW1zZWx2ZXMgbW9yZSByZXNvdXJjZXMsIHJlcHJvZHVjaW5nLCByZXBlYXRpbmcsIHVudGlsIFZlbmV6dWVsYSBzdHlsZSBjb2xsYXBzZSBvciBvdGhlciBzb2NpYWwgY2hhbmdlIG9jY3Vycy4KKGMpIEVhc3Rlcm4gU2hvcmUgUHVibGljIExpYnJhcnksIEFjY29tYWMsIFZBIDIzMzM3ICg3NTcpIDc4NyAzNDAwLgpUaGVuIHRoZXkgYWN0ZWQgbWFkIGF0IHVzIGZvciBub3QgaWxsZWdhbGx5IGRldGFpbmluZyBwZW9wbGUgd2hvIGhhZCBqdXN0IGdpdmVuIHVzIGJsYWNrIGV5ZXMgYW5kIG9uZSBndXkgYSBicm9rZW4gcmliLiBBbmQgZm9yIGNvbnRleHQsIHRoZSBvd25lciBvZiBzYWlkIGJhciB3YXMgYXQgb2RkcyB3aXRoIGEgbmVpZ2hib3JpbmcgYnVzaW5lc3Mgb3duZXIgb3ZlciBub2lzZSBjb21wbGFpbnRzLiBUaGUgcG9saWNlIHJlc3BvbmRlZCB3aXRoaW4gZml2ZSBtaW51dGVzIG9mIGV2ZXJ5IHNpbmdsZSBub2lzZSBjb21wbGFpbnQgY2FsbCBidXQgdG9vayAzLzQgb2YgYW4gaG91ciBmb3IgYSB2aW9sZW50IGZpZ2h0Li4gCkkgZ290IGhvcnJpYmxlIGFkdWx0IGFjbmUgdGhhdCBjb21wbGV0ZWx5IGRlc3Ryb3llZCBteSBmb3JlaGVhZCAobXkgb25jZSBzbW9vdGggYXNzIGZvcmVoZWFkIGlzIG5vdyB3Umlua2x5KS4gCkRlcmVrIEtlbGx5LCA0NiwgY2hhaXJtYW4gb2YgdGhlIEd1dHNob3QgUHJpdmF0ZSBNZW1iZXJzIENsdWIgaW4gQ2xlcmtlbndlbGwsIGNlbnRyYWwgTG9uZG9uLCB3YXMgZm91bmQgZ3VpbHR5IG9mIGNvbnRyYXZlbmluZyB0aGUgYWN0IGJ5IG9yZ2FuaXNpbmcgYSBnYW1lIG9mIHBva2VyIG9uIERlY2VtYmVyIDcsIDIwMDQsIGluIHdoaWNoIGEgbGV2eSB3YXMgY2hhcmdlZCBvbiB0aGUgd2lubmluZ3MuIEhlIHdhcyBhbHNvIGZvdW5kIGd1aWx0eSBieSBhIGp1cnkgYXQgU25hcmVzYnJvb2sgQ3Jvd24gQ291cnQsIGluIGVhc3QgTG9uZG9uLCBvZiBjb250cmF2ZW5pbmcgdGhlIGFjdCBieSBvcmdhbmlzaW5nIGEgcG9rZXIgZ2FtZSBvbiBKYW51YXJ5IDI3LCAyMDA1LCBpbiB3aGljaCBhIGZlZSB3YXMgY2hhcmdlZCB0byB0YWtlIHBhcnQuLiAKSGFtYmxpbiBpcyBhIHJlbm93bmVkIHN1YmplY3QgbWF0dGVyIGV4cGVydCBpbiBQQk0gYW5kIGhhcyBiZWVuIG5hbWVkIGluIGNvdW50bGVzcyBQQk0gbGl0ZXJhdHVyZSwgcmV2aWV3IGFydGljbGVzLCBhbmQgc2NpZW50aWZpYyBzdHVkaWVzLiAKSW4gZmFjdCwgbm9uZSBvZiB0aGlzIGlzIHRydWUgYW5kIEkgc28gc29ycnkuIEkgZG9uIGtub3cgd2h5IEkgZGlkIHRoaXMuLiAKV2l0aCBoZXIgZGFkIGdvbmUsIGFsbCBzaGUgaGFkIHdhcyBwc3ljaG8gbW9tIGluIHNvbWUgb2YgaGVyIG1vc3QgZGV2ZWxvcG1lbnRhbCB5ZWFycy4gCkl0IGxlZ2l0IG1hZGUgbXkgc3RvbWFjaCB0dXJuIHJlYWRpbmcgaXQuLiAKSSdtIG5vdCBkZWZlbmRpbmcgaGVyIGJ1dCwgSSd2ZSBoZWFyZCBmcm9tIHNldmVyYWwgc291cmNlcyB0aGF0IEl0IHdhcyAic3VnZ2VzdGVkIiB0aGF0IExhcmlzc2EgZ28gaW4gbGlrZSB0aGF0LiBJIGNhbiBzZWUgVExDIGRvaW5nIHRoYXQuIFNoZSBoYWQganVzdCBhcnJpdmVkIGFuZCB3YXMgbmV3IHRvIHRoZSBmcmF1ZCB0aGF0IHRoZSBwcmljZXMgZG8uIApHZXQgYSByYW5jaCBob21lIGZlZWwgYnkgYWRkaW5nIGEgZGlmZmVyZW50IGFycmF5IG9mIHRhYmxlcyB0byB5b3VyIGxpdmluZyByb29tIG1peC4gQSB0ZWFrIHNpZGUgdGFibGUgbWFkZSBvZiByZWNsYWltZWQgdGVhayB0aW1iZXJzIGZyb20gYWdlZCBmYXJtIGhvbWVzLCBhYmFuZG9uZWQgb3ggY2FydHMsIGFuZCBvdGhlciB3ZWF0aGVyZWQgZmFybSBpbXBsZW1lbnRzIHdvdWxkIGJlIHByYWN0aWNhbCBjaG9pY2VzLiBZb3UgY291bGQgcGxheSBjYXJkcyBpbiBzdHlsZSB3aXRoIGEgZmFuY3kgcG9rZXIgdGFibGUgYW5kIGNoYWlycyBtYWRlIG91dCBvZiBFdXJvcGVhbiBiZWVjaCB3b29kLiAKSGUgaHVuZyBvdXQgd2l0aCBib3lzIHdheSB0b28gbXVjaCBhbmQgc2xlcHQgd2l0aCB0aGVtLiAKU3RpbGwgcmVxdWlyZXMgYSBsb3Qgb2Ygd29yay4gWW91IGFsc28gbG9zZSBNUEcsIGFuZCByb3RhcmllcyBhbHJlYWR5IGdldCBzb21ldGhpbmcgbGlrZS4gClRoZSBleHRyYSBjYXJkcyB3aWxsIHRoZW4gYmUgc29sZCBvbiB0aGUgbWFya2V0LCBpbmNyZWFzaW5nIHRoZSBzdXBwbHkuIEhlIHNhaWQgeW91IGNvdWxkIHBsYXkgZm9yIGRpZmZlcmVudCBzdGFrZXMsIHRoZXkgc2FpZCB0aGVyZSB3aWxsIGJlIG5vdGhpbmcgZm9yIGZyZWUgYW5kIGFsbHVkZWQgc3Rha2VzIHdpbGwgc2VncmVnYXRlIHBsYXllcnMgYnkgc2tpbGwgbGV2ZWxzIGVyZ28gdGhlc2UgZGlmZmVyZW50IHN0YWtlcyB3aWxsIHRyYW5zbGF0ZSB0byBkaWZmZXJlbnQgYnV5aW5zIGxpa2UgaW4gcG9rZXIsIGJ1dCB3aXRoIGhpZGRlbiByYWtlIChtYXJrZXQgZmVlcykgYW5kIHlvdSBwYXkgd2l0aCBwYWNrcy4gCkl0J3MgcGFydCBvZiB0aGUgcmVhc29uIHNlaXp1cmVzIGFyZSBzbyB1bnNldHRsaW5nLCBzZWVpbmcgc29tZW9uZSBtb3ZlIGluIHN1Y2ggYW4gdW5uYXR1cmFsIGZhc2hpb24gaXMgaW1tZWRpYXRlbHkgcmVjb2duaXNhYmxlIGFzIHNvbWVvbmUncyBib2R5ICdtYWxmdW5jdGlvbmluZycgZm9yIHdhbnQgb2YgYSBiZXR0ZXIgd29yZC4gSXQgbG9va3Mgbm90aGluZyBsaWtlIHRoaXMgY29vcmRpbmF0ZWQgc2hpdmVyL3NwYXNtLiBBbGwgSSBzZWUgaXMgc29tZW9uZSBzaGFraW5nIHRoZWlyIG93biBsZWdzIGFuZCB0b3JzbywgYXMgdGhlIGNhbWVyYSBwYW5zIGJhY2sgdXAgeW91IGV2ZW4gc2VlIGhlciBsZWZ0IHNob3VsZGVyIHRlbnNlIGFuZCBtb3ZlIGluIG9yZGVyIHRvIGdhaW4gbW9yZSBsZXZlcmFnZSBkdWUgdG8gdGhlIGVmZm9ydCB0aGF0IGlzIHJlcXVpcmVkIHRvIGRvIHRoYXQuIAoid2UgZG9uIGhhdmUgYSBjb3VudHJ5IiAgIFdlbGwsIHdlIGRvbiBoYXZlIG9uZSBpZiB3ZSBzaHV0IGRvd24gdGhlIGZlZGVyYWwgZ292ZXJubWVudC4gT3IgaWYgdGhlIGxlYWRlciBpcyBhbGxpZWQgd2l0aCBhbmQgaGFzIGZpbmFuY2lhbCBvYmxpZ2F0aW9ucyB0byBhIGhvc3RpbGUgZ3JvdXAuIE9yIGlmIHRoZSBuYXRpb25hbCBlbGVjdGlvbiB3YXMgaW5mbHVlbmNlZCBvciBmaW5hbmNlZCBieSBhIGZvcmVpZ24gbGVhZGVyLiBPciBpZiBuYXRpb25hbCBjcmVkaWJpbGl0eSBpcyBlcm9kZWQgYnkgYWJydXB0bHkgbGVhdmluZyBpbnRlcm5hdGlvbmFsIGFncmVlbWVudHMuIE9yIGlmIHRoZSBsZWFkZXIgb25seSByZXByZXNlbnRzIGhpcyBkd2luZGxpbmcgYmFzZS4gT3IgaWYgb3VyIGluc3RpdHV0aW9ucyBhbmQgaW5mcmFzdHJ1Y3R1cmUgY3J1bWJsZS4KWW91ciBTdWJzY3JpcHRpb24gbWF5IGFsc28gaW5jbHVkZSBkZWxpdmVyeSBvZiB1cCB0byA0IDEwIHByZW1pdW0gZWRpdGlvbnMgZWFjaCB5ZWFyLiBZb3VyIFN1YnNjcmlwdGlvbiBhY2NvdW50IHdpbGwgYmUgY2hhcmdlZCBhbiBhZGRpdGlvbmFsIGZlZSwgdXAgdG8gJDIgZm9yIGVhY2ggc3VjaCBlZGl0aW9uLCBpbiBhIEJpbGxpbmcgUGVyaW9kIHdoZW4gb25lIG9yIG1vcmUgcHJlbWl1bSBlZGl0aW9uIGlzIHB1Ymxpc2hlZCwgd2hpY2ggd2lsbCBzaG9ydGVuIHRoZSBsZW5ndGggb2YgeW91ciBCaWxsaW5nIFBlcmlvZC4gSWYgeW91IHNlbGVjdCB0aGUgIkF1dG9SZW5ldyIgb3B0aW9uLCB5b3VyIHN1YnNjcmlwdGlvbiB3aWxsIHJlbmV3IGF0IHRoZSBlbmQgb2YgdGhlIHNob3J0ZW5lZCBzdWJzY3JpcHRpb24gcGVyaW9kIGZvciB0aGUgYW1vdW50IG9mIHRpbWUgeW91IHNlbGVjdGVkIGluIHlvdXIgaW5pdGlhbCBTdWJzY3JpcHRpb24gb3JkZXIgb3IgYW55IHN1YnNlcXVlbnQgU3Vic2NyaXB0aW9uIHJlbmV3YWwuClRoZSBwcm9ibGVtIGlzIHNoZSBtYXkgaGF2ZSB0cm91YmxlIHRha2luZyBkb3duIGxhcmdlIHRocmVhdHMgaW4gdGhlIGFyZW5hIGFzIGEgcGxheWVyIHBoYXNlIHVuaXQgKGxvb2tpbmcgYXQgeW91LCBMIVRpa2kpLi4gClR5cGljYWxseSB0aGVzZSBmZWVsaW5ncyBvbmUgaGFzIGFyZSB3aGVuIG9uZSBnZXRzIGEgbG90IG9mIG1vbWVudHMgdG8gdGhpbmsgZm9yIHRoZW1zZWx2ZXMsIG5vdCBzbyBtdWNoIGJlY2F1c2UgYSBidW5jaCBvZiBiYWQgZXZlbnRzIGZvcmNlIGl0IHRvIGhhcHBlbi4gSGVyIGNyaXNpcyBvZiBmYWl0aCBjb3VsZCBiZSBydW5uaW5nIGluZGVwZW5kZW50IG9mIHRoZSBhYnVzZXIgZGFkcyBhbmQgZXZlbiBoZXIgb3duIGNvbWluZyB0byB1bmRlcnN0YW5kIGhlciBzZXh1YWxpdHkuIEl0IGlzbiBhcyBXaWxsaXMgaGFzIG1hZGUgY2xlYXIgaXQgaXMgZHVlIHRvIHRoZSByZWFsaXphdGlvbiB0aGF0IHJlbGlnaW9uLCB3aGV0aGVyIGl0IGJlIHRoZSBjb21tdW5pdHkgb2Ygd29yc2hpcGVycyBvciB0aGUgYWN0IG9mIHByYXlpbmcgb3IgdGhlIHNldCBvZiBydWxlcyBhbmQgZ3VpZGVsaW5lcyB0aGF0IHRoZSBCaWJsZSBoYXMsIGRvZXNuIGFsd2F5cyBhY3R1YWxseSBoZWxwIHBlb3BsZS4gVGhhdCBmaW5lLCBJIGd1ZXNzLCB0aGF0IHRoaXMgaXMgYSBjYXRhbHlzdCBidXQgSSB0aGluayB0aGVyZSBwbGVudHkgb2YgZmFpdGhmdWwgcGVvcGxlIHdobywgdXBvbiByZWNvZ25pemluZyB0aGF0IHRoZSBjaHVyY2ggYW5kIHByYXllciBhcmVuIGRvaW5nIGFueXRoaW5nLCB0dXJuIHRvIHRoZW1zZWx2ZXMgYW5kIGJlbGlldmUgdGhhdCB0aGV5IGFyZSBpbXBvcnRhbnQgZmlndXJlcyBtYWRlIGJ5IEdvZCB0byBoZWxwIHRoZSB3b3JsZC4KVGhleSB3ZXJlIGFsbCB0aGVyZSB0byBoYXZlIGEgZ29vZCB0aW1lIHRob3VnaCwgc28gaXQgd2FzIGEgdmVyeSBmcmllbmRseSBzaXR1YXRpb24gIGV2ZW4gd2l0aCBtZSBoYWxmIHNhdWNlZCBhbmQgbmVlZGxpbmcgdGhlIGhvcnJpYmxlIHBsYXllciB0aGUgd2hvbGUgdGltZSBhcyBJIHdhcyByZXBlYXRlZGx5IHRha2luZyBwb3RzIG9mZiBoaW0gIHNheWluZyBzaGl0IGxpa2UsICJhcmUgeW91IHN1cmUgeW91J3JlIGdvbm5hIGhhdmUgZW5vdWdoIG1vbmV5IHRvIGdldCBiYWNrIGhvbWU/IkluIGJldHdlZW4gdGhlIG5lZWRsaW5nLCBJIGhhZCBiZWVuIGRpc2N1c3Npbmcgd2l0aCBteSBmcmllbmRzIHRoZSBsaWtlbHkgZXhwZW5zaXZlIHdlZGRpbmcgcGxhbnMgbXkgc29vbiB0byBiZSB3aWZlIHdhcyBjb21pbmcgdXAgd2l0aC5TbywgZmluYWxseSwgdGhlIFNjYW5kaW5hdmlhbnMgZGVjaWRlIHRvIHRha2Ugb2ZmLiAKVGhlcmUgYWxzbyB1bmxpbWl0ZWQgQm9pbmdvIGFjY2VzcyBmb3IgZnJlZSBpbmNsdWRlZCB3aXRoIHRoZSBjYXJkLCBTaG9wcnVubmVyIG1lbWJlcnNoaXAsIGFuZCBhIGNyYXB0b24gb2Ygb3RoZXIgaW5jcmVkaWJsZSBiZW5lZml0cy4uIAozKSAiT3VyIGdlbmVzIHRvZGF5IGFyZSB2ZXJ5IHNpbWlsYXIgdG8gdGhlIGdlbmVzIG9mIG91ciBhbmNlc3RvcnMgZHVyaW5nIHRoZSBQYWxlb2xpdGhpYyBwZXJpb2QgNDAsMDAwIHllYXJzIGFnbywgYXQgd2hpY2ggdGltZSBvdXIgZ2VuZXRpYyBwcm9maWxlIHdhcyBlc3RhYmxpc2hlZC4iMgpZZXMuIFllcywgSSBzZWVuIGEgYmFnIG9mIGNoaXBzLiBBbmQgSSB1c2VkIHRvIGJ1eSBzaGVsdmluZyBzcGFjZSBmb3IgbXkgb2xkIGNvbXBhbnksIHNvIHRoaXMgaXMgdHJ1bHkgYXdmdWwuClNvdXRoIEZsb3JpZGEgR3VpZGUgVG8gSHVycmljYW5lIFRlcm1zIFdoZW4gdHJvcGljYWwgd2VhdGhlciBzdGFydHMgdG8gdGhyZWF0ZW4sIHdlYXRoZXIgZm9yZWNhc3RzIGFyZSBmaWxsZWQgd2l0aCBuZXcgdGVybXMgYW5kIGlkZWFzIHRoYXQgY2FuIGJlIGNvbmZ1c2luZyBlc3BlY2lhbGx5IHRvIHBlb3BsZSBuZXcgdG8gU291dGggRmxvcmlkYSBhbmQgdHJvcGljYWwgd2VhdGhlci4gVGhlc2UgdGVybXMgc2hvdWxkIGhlbHAgZGUgbXlzdGlmeSBodXJyaWNhbmUgc2Vhc29uLCBhbmQgaGVscCB5b3UgdG8gZmVlbCBhIGJpdCBtb3JlIGNvbmZpZGVudCBhcyB3ZSBmYWNlIHRoZSBzZWFzb24gb2Ygc3Rvcm1zLgoiQW1vbmcgcGVyc29ucyBsaXZpbmcgaW4gYSBjb250cm9sbGVkIHNldHRpbmcsIGNhbG9yaWVzIGFsb25lIGFjY291bnQgZm9yIHRoZSBpbmNyZWFzZSBpbiBmYXQ7IHByb3RlaW4gYWZmZWN0ZWQgZW5lcmd5IGV4cGVuZGl0dXJlIGFuZCBzdG9yYWdlIG9mIGxlYW4gYm9keSBtYXNzLCBidXQgbm90IGJvZHkgZmF0IHN0b3JhZ2UuIiAgIEJyYXkgZXQgYWwuLCAyMDEyClRoZXJlIGlzIGF0IGxlYXN0IGEgYml0IG9mIGRhdGEgZnJvbSByZXNlYXJjaCBjb25kdWN0ZWQgYnkgT250YXJpbyBIeWRybyB3aXRoIGRpcmVjdCBjb21wYXJpc29ucyB0byBjb2FsIGFuZCBnYXMgYXQgdmFyeWluZyBjYXBhY2l0eSBmYWN0b3JzIHdpdGggaW50ZXJlc3RpbmcgcmVzdWx0cywgYWx0aG91Z2ggbW9zdCBvZiBpdCBpcyBzb21ld2hhdCBkYXRlZCBieSBub3cuIEkgYWxzbyBoYXZlIGEgdmFndWUgcmVjb2xsZWN0aW9uIG9mIGZpbmRpbmcgc29tZSBzaW1pbGFyIGRhdGEgZm9yIExXUnMgaW4gdGhlIHBhc3QsIGJ1dCBJIGNhbiByZW1lbWJlciBhbnkgZGV0YWlscy4KVGhleSBkbyBjb21wbGV0ZWx5IGRpZmZlcmVudCB0aGluZ3MgdG8gdGhlIGJvZHkuIApVbmV4cGVjdGVkbHksIHBhaW4gZmFjaWxpdGF0aW9uLCBhcyBhc3Nlc3NlZCB3aXRoIHRlbXBvcmFsIHN1bW1hdGlvbiBvZiBwYWluIHJlc3BvbnNlcywgd2FzIHJlZHVjZWQgaW4gcHJpbWFyeSBpbnNvbW5pYSBjb21wYXJlZCB0byBoZWFsdGh5IGNvbnRyb2xzIChwCkRwcyB3YXMgYSBsb3Qgc2xvd2VyLiBBcyBhIHJlc3VsdCB0aGUgZmlnaHQgbGFzdHMgbG9uZ2VyIGFuZCBtb3JlIGhlYWxpbmcgaXMgcmVxdWlyZWQgc28gaXQgbWFrZXMgc2Vuc2UgZm9yIG1vcmUgcmFpZCBtZW1iZXJzIHRvIHdlYXIgRlIuIApJICgzOU0pIGJlZW4gaW4gYSBMVFIgd2l0aCBhIHlvdW5nIHdvbWFuIGluIGhlciAyMHMgKDI4RikgZm9yIGEgbG9uZywgbG9uZyB0aW1lICg3LjUgeWVhcnMpLiBXZSBsaXZlIGluIGEgcG9wdWxhciBXZXN0IENvYXN0IGNpdHkgd2hlcmUgaXQgc2VlbXMgZXZlcnlvbmUgYW5kIHRoZWlyIHNpc3RlciBpcyBQb2x5LiBNeSBHRiBpbml0aWFsbHkgcHJvcG9zZWQgdGhlIG9wZW4gcmVsYXRpb25zaGlwIHRoZSBmaXJzdCB0aW1lIGFyb3VuZCwgYXMgbW9yZSBvZiBhbiBPcGVuIFJlbGF0aW9uc2hpcC4gCkFzayBmb3IgaGVscCEgRG9uJ3QgYmUgYWZyYWlkIHRvIGVubGlzdCB5b3VyIHJlbGF0aXZlcyBhbmQgZ29vZCBmcmllbmRzIG9yIGNvd29ya2VycyBpbiB5b3VyIGVmZm9ydCB0byBhY2hpZXZlIGhlYWx0aHkgbmFpbHMuIApUaGV5IGtlZXAgaXQgdXBkYXRlZCB3aXRoIHRoZSBsYXRlc3QgcmVwb3J0cyB3aGljaCBpcyB0aGUgYmVzdCB3YXkgdG8ga25vdyBpZiBzb21ldGhpbmcgaXMgZmxvd2luZywgc2xvd2luZyBkb3duLCBvciBoYXMgc3RvcHBlZCBjb21wbGV0ZWx5Li4gClRoZSBhbm9ueW1vdXMgem9vbSBzdHlsZSB0YWtlcyBhIGxpdHRsZSBiaXQgdG8gZ2V0IHVzZWQgdG8gdGhvdWdoLCB3aXRoIG15IGZpcnN0IDMwayBoYW5kcyBvciBzbyBiZWluZyBicmVha2V2ZW4gdW50aWwgSSBhZGp1c3RlZCB0byB0aGUgZm9ybWF0LiBJIHRoaW5rIGJ5IHRoZSBlbmQgb2YgbXkgc2FtcGxlIEkgd2FzIGF0IGFyb3VuZCAxMmJiLzEwMCwgYnV0IHRoZSBwbGF5ZXIgcG9vbHMgYXJlIGtpbmQgb2YgbGltaXRlZCBhYm92ZSAyNW5sLgpGb2xsb3dpbmcgaXMgbW9yZSBvZiBhIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSBzdGVwcyBpbnZvbHZlZCBpbiB0aGUgdW5sb2FkaW5nIGV4ZXJjaXNlIGV2YWx1YXRlZCBpbiB0aGlzIHN0dWR5OgoiSW4gdGhvc2UgdGhyZWUgd29yZHMgICB1bmxhd2Z1bCBJbnRlcm5ldCBnYW1ibGluZyBsaWVzIHRoZSBydWI6IFRoZXJlIGlzIG5vIGZlZGVyYWwgZGVmaW5pdGlvbiBvZiBpdC4gCldvcmxkIFNlcmllcyBvZiBQb2tlciBzdGFydHMgaW4gTGFzIFZlZ2FzIHdpdGggYnV5CldlYXIgZGFyayBjYXN1YWwgY2xvdGhlcyB3aXRoIG5vIGxvZ29zOiBJIHdlYXIgYSBibGFjayB0IHNoaXJ0LCBibGFjayBqZWFucyByb2xsZWQgdXAgYSBiaXQsIGFuZCBzbmVha2Vycy4gUGxhaW4gamFja2V0ICAgYSBib21iZXIgb3Igc29tZXRoaW5nIHNpbXBsZSwgaWRlYWxseS4gTm8gY3JhenkgamV3ZWxyeSwgbm8gY29sbGFyZWQgc2hpcnRzLiAKSSBzZWUgeW91ciBwb2ludCB0aGF0IGhlIHB1dHRpbmcgaXQgb3V0IHRvIHRoZSBwdWJsaWMsIEkganVzdCBtYWtpbmcgdGhlIGRpc3RpbmN0aW9uIHRoYXQgaXQgbm90ICJpbiBwdWJsaWMiIGluIHRoZSBzYW1lIHdheS4gCkFtZXJpY2EgRmVycmVyYSBnaXZlcyB2b2ljZSBhbmQgcGVyc29uYWxpdHkgdG8gSGljY3VwJ3MgYmxvbmQsIHNhc3N5IGZ1dHVyZSBtYXRlLiAKSXQncyBhIHZlcnkgY29tbW9uIGdpcmwncyBuYW1lIGFuZCBJIGNvdWxkbid0IHNlZSBob3cgc2hlIHdvdWxkIGFjdCBpbiB0aGUgZnV0dXJlIHdoZW4gc2hlIGxlYXJuZWQgdGhhdCBoZXIgZGF1Z2h0ZXIgd2FzIGZyaWVuZHMgd2l0aCBtdWx0aXBsZSBsaXR0bGUgZ2lybHMgd2l0aCB0aGUgc2FtZSBuYW1lLiBBbmQgYXMgaXQgdHVybmVkIG91dCB0aG9zZSAyIGxpdHRsZSB0d2luIG5hbWVkIGdpcmxzIHdlcmUgYmVzdCBidWRzIHVudGlsIG1pZGRsZSBzY2hvb2wuIFRoZW4gdGhlIG1vcmUgcG9wdWxhciBvbmUgYmxldyBvZmYgdGhlIGxlc3MgcG9wdWxhciBvbmUuIApGaXJzdCBvZiBhbGwsIHdoYXQgcmFjZSBhcmUgeW91LiBJZiB5b3UgYXJlIG5vdCBLb3JlYW4gb3IgY2Fubm90IHRyaWNrIHRoZW0gaW50byB0aGlua2luZyB5b3UgYXJlIEtvcmVhbiBhdCBmaXJzdCBnbGFuY2UsIHlvdSB3aWxsIGJlIHNodXQgb3V0IG9mIHRoZSBtb3JlIHBvcHVsYXIgcGxhY2VzLiAKSG93IGNhbiBhIHdob2xlIHRvd24gYmUgc28gbGlrZSBtaW5kZWQgdGhhdCB0aGV5IHNpbXBseSBoYXRlIG1lIHdpdGhvdXQgZXZlbiB0cnlpbmcgdG8ga25vdyBtZS4gClNoZSBoYWQgYSBsb29rIG9mIHJlbGllZiBvbiBoZXIgZmFjZSB0aGF0IHdoYXRldmVyIHNoZSB3YXMgZ29pbmcgdGhyb3VnaCB3YXMgZ29pbmcgdG8gYmUgb2sgYW5kIGl0IG1hZGUgbWUgdmVyeSBoYXBweS4uIAo0LiBMYXN0LCBidXQgbm90IGxlYXN0LCB5b3UgbmVlZCB0byBiZSBhYmxlIHRvIGJsdWZmIHRvIGFkZCBhIGxheWVyIG9mIHVucHJlZGljdGFiaWxpdHkgdG8geW91ciBwbGF5aW5nIHN0eWxlLiBNYWtlIHlvdXJzZWxmIHVucHJlZGljdGFibGUgc28gdGhhdCBvdGhlcnMgY2FuJ3QgZXhwbG9pdCB5b3UuCkkgbm90IHN1cmUgYWJvdXQgcml2ZXIgYmVjYXVzZSBpdCBraW5kIG9mIHNpbGx5IHRvIGdldCB0byB0aGlzIHNwb3Qgd2l0aCB0aGlzIGhhbmQsIGJ1dCBJIGZhdm9yIGEgZm9sZC4gSSB0aGluayBjaGVja2luZyBBQSBvbiB0aGUgZmxvcCBpcyBwcm9iYWJseSBub3Qgb3B0aW1hbCB2cyB0aGUgZmllbGQsIGJ1dCBpZiB5b3UgZG8gY2hlY2sgaXQgc2hvdWxkIGRlZmluaXRlbHkgYmUgdGhlIGNvbWJvcyB3aXRoIHRoZSBBYyBzbyB5b3UgY2FuIGVhc2lseSBzbmFwIHRoaXMgb2ZmLiAKUGV6ZXZlbmsgaGFkaSBrbXlvbSBrYXJ0IGJlbmkga2FydCBiZW5pIG9yb3NwdWNvY3V1YnVubGFyIGFkYW0gb2xzYSBieWxlIHlhcG1heiBzaW5hbiBhYmkgYnJhayBhZGFtIG1zbiBsYW4gc2VuIHBlemV2ZW5rIGhhZGkga2FydCBiZW5pIGJleWxlciBvbHVtIHNpeiBiZWxhIG0gYXJhbm1heWEgZ2VsZGluaXogbGFuIGJ1cmF5YSBldmV0IGJlbGFtIGFyeW9tIGxhbiBnZWwgc2VuaW4gICBhbmFubiAgIGtsbCAgIGFtbiAgIHNpa2VyaW0gICBwZXpldmVuayAzIGt1cnVsdWsgb2N1ayB5YSBiZW5kZSB5ZWRpIHNsYWxlbmlwZXpldmVlZWVlZWVuayBwZXpldmVlZWVlZWVlZWVlZW5rIHBlemV2ZWVlZWVlZWVuayBrIGdpdCBsYW4gYWRhbSBha2xsIGtvbnUgbGFuIGRhaGEgZXZkZSBtYW1hc24geWl5b3IgYnJhayB1bnUgeWEgYnJhayBzaW5hbiBhYmkgZGFoYSBldmRlIG1hbWFzbiB5aXlvciBvbHVtIHNlbmkga2ltIHNva3R1IGxhbiBidSBzdHkgeWUgcGV6ZXZlbmsgc2VuaW4gYW5hbm4ga2xsIGFtbiBzaWtlcmltIGJhayBrIGdpdCBrIGdpdCBvbHVtIGJha2FhYWFhYWFhYWEga2lraWtpa2lraWtpIGFhYWFhYWFhYSBvbHVtIGsgZ2l0IHlhbmxhIG11aGF0dGFiIG9sIHBlemV2ZW5rIHVsYW4gYW1uYSBrb2R1dW11biBldmxhZCBzZW4geWFubGEgbXVoYXR0YWIgb2x1Y2FuIG0gYWhpbiBtaXNpbiBuZSB5YXJyYW1zbiBrIGdpdCBzaW5hbiBhYmkgYnJhayB5YSBkYWhhIG9jdWsgYnVubGFyIHlhIGsgZ2l0IGxhbiBwZXpldmVuayBzZW4gZGFoYSBwZXpldmVua3NpbiBsYW4gcGV6ZXZlbmsgenBsYSB6cGxhIGVraXJnZSBvbHVtIGJhayBvbHVtIG9sdW0gYmFrIGFkYW0gb2x1bi4gQWRhbSBvbHVuIGtlbmRpIHRzbml6ZSBnaWRpbiBiaXppbSBiYW16YSBiZWxhIG9sbWF5biBvbHNhbSBuZSBvbHVyIGxhbiBhaGluIG1pc2luIG5lIGJva3N1biBrbiBsYW4gc2luYW4gYWJpIHJ1aCBoYXN0YXMgc2luYW4gYWJpIHlvayBtdSBsYW4gdSB0cyBkZSB1bmxhciBhdGNhayBiaSBzYWxhayBiYW16YSBiZWxhIG9sdXlvbGFyIHlhIHNpbmFuIGFiaSBkaW5saXlvbiBtdSBiZW5pIHNpbmFuIGFiaSB5YSBiaSBkaW5sZSBiZW5pIGFya2FkYWxhciBhZGFtIGJvdmVyaW4gZGl5b3J1bSBpbiBhYSBtYW16IHZhciBkaXlvcnVtIHNhbmEgbWFteiB2YXIgaW4gYWEgc2FsbGEgdW5sYXIgdWxhbiBtYW5uIGFtbmEga295aXlpbSBidSBzYWxha2xhcm4geXpuZGVuIG1hIG0geWFwbHIgYnVyYWRhIDMga3VydWx1ayBhZGFtIGxhbiBzaWt0aXJnaXQgYWRhbW4gYXNhYm4gYm96bWEgYnJhayBidSBpbGVyaSBzZW4ga2ltc2luIC4gCkdldCBvbiBuYXByb3hlbiB0byBoZWxwIGFsbGV2aWF0ZSBwYWluIGFuZCBzd2VsbGluZy4KTWUgcmVmaWVybyBhIGxvIHNpZ3VpZW50ZTogc2FiZXIgcHJvZ3JhbWFyIG5vIHRpZW5lIHF1ZSB2ZXIgY29uIHNhYmVyIHVuIGxlbmd1YWplIHUgb3Rybywgc2lubyBjb24gZW50ZW5kZXIgZGUgcXUgc2UgdHJhdGEgcHJvZ3JhbWFyLCBvIG1lam9yIGRpY2hvLCBzYWJlciBjbW8gcGllbnNhIHVuIHByb2dyYW1hLCBvIG1lam9yIGRpY2hvIGFuOyBjbW8gZGFybGUgaW5zdHJ1Y2Npb25lcyBhIHVuIHByb2Nlc2Fkb3IuUHJvZ3JhbWFyIG5vIGVzIHNhYmVyIEMgbyBKUyBvIGxvIHF1ZSBzZSB0ZSBvY3VycmEsIGVzIHNhYmVyIGNtbyBhYm9yZGFyIGVsIHByb2Nlc28gbGdpY28gcGFyYSBlbmNvbnRyYXIgbGEgc29sdWNpbiBhIHVuIHByb2JsZW1hLiAKSiBwcmlzIG1hIHNlbWFpbmUgZGUgY29uZyBsYSBzZW1haW5lIHByb2NoYWluZSBjYXIgaiBkZXMgdHJ1Y3MgIGZhaXJlICsgY29uZyAgdGVybWluZXIgc2lub24gamUgbGVzIHBlcmRzIGRvbmMgcGFzIGV1IGxlIHRlbXBzIGRlIHBydm9pciBkZSBwYXJ0aXIgZW4gdmFkcm91aWxsZSBET05DIGplIHZhaXMgcmVzdGVyIGF1IGNoYXVkICBnZWVrZXIgZXQgZmFpcmUgZGUgbGEgcGFwZXJhc3NlLi4gClRoZW4gdGhlIHdob2xlIHRlYW0gZGllcyBhbmQgdGhleSBibGFtZSBtZS4gCllvdXIgU3Vic2NyaXB0aW9uIG1heSBhbHNvIGluY2x1ZGUgZGVsaXZlcnkgb2YgdXAgdG8gNCAxMCBwcmVtaXVtIGVkaXRpb25zIGVhY2ggeWVhci4gWW91ciBTdWJzY3JpcHRpb24gYWNjb3VudCB3aWxsIGJlIGNoYXJnZWQgYW4gYWRkaXRpb25hbCBmZWUsIHVwIHRvICQyIGZvciBlYWNoIHN1Y2ggZWRpdGlvbiwgaW4gYSBCaWxsaW5nIFBlcmlvZCB3aGVuIG9uZSBvciBtb3JlIHByZW1pdW0gZWRpdGlvbiBpcyBwdWJsaXNoZWQsIHdoaWNoIHdpbGwgc2hvcnRlbiB0aGUgbGVuZ3RoIG9mIHlvdXIgQmlsbGluZyBQZXJpb2QuIElmIHlvdSBzZWxlY3QgdGhlICJBdXRvUmVuZXciIG9wdGlvbiwgeW91ciBzdWJzY3JpcHRpb24gd2lsbCByZW5ldyBhdCB0aGUgZW5kIG9mIHRoZSBzaG9ydGVuZWQgc3Vic2NyaXB0aW9uIHBlcmlvZCBmb3IgdGhlIGFtb3VudCBvZiB0aW1lIHlvdSBzZWxlY3RlZCBpbiB5b3VyIGluaXRpYWwgU3Vic2NyaXB0aW9uIG9yZGVyIG9yIGFueSBzdWJzZXF1ZW50IFN1YnNjcmlwdGlvbiByZW5ld2FsLi4gCiJUaGlzIGxvb2tzIGV4YWN0bHkgd2hhdCBpdCBsb29rZWQgbGlrZSB3aGVuIEZyYW5rIHdhbGtlZCBvdXQgZm9yIHRoZSBsYXN0IHRpbWUgaW4gMTk1MCwiIHNhaWQgQm9iIEZyYXNlciwgQ0VPIG9mIFdvb2xhcm9jLgpGaWF0IENocnlzbGVyIHNheXMgaW4gYSBzdGF0ZW1lbnQgRnJpZGF5IHRoYXQgbWFueSBvZiB0aGUgdmVoaWNsZXMgYXJlIHN0aWxsIGF0IGRlYWxlcnNoaXBzLgpTY2llbmNlYmFzZWQgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpMTSBkb2Vzbid0IGV2ZW4gcmVhbGx5IGV4aXN0LCB0aGUgbGlsIGFzc2hvbGUuIApJbCB2b3VzIGVzdCBpbnRlcmRpdCA6IGkpIGQndXRpbGlzZXIsIGRlIHJlcHJvZHVpcmUsIGRlIG1vZGlmaWVyLCBkJ2FkYXB0ZXIsIGRlIHRyYWR1aXJlLCBkZSB0IG91IGRlIHRyYW5zbWV0dHJlIGxlcyBsb2dpY2llbHMgZW4gdG90YWxpdCBvdSBlbiBwYXJ0aWU7IGlpKSBkZSB2ZW5kcmUsIGRlIGxvdWVyLCBkZSBjb25jIHNvdXMgbGljZW5jZSBvdSBkZSB0cmFuc2YgbGVzIGxvZ2ljaWVscyBvdSBkJ3kgcGVybWV0dHJlIHBhciBhaWxsZXVycyBsJ2FjYyBpaWkpIGRlIG1vZGlmaWVyLCBkZSByZXRpcmVyIG91IGRlIGNvdXZyaXIgcXVlbHF1ZSBtYXJxdWUgZGUgY29tbWVyY2Ugb3UgYXZpcyBkZSBwcm9wcmkgaW5jbHVzIGRhbnMgbGVzIGxvZ2ljaWVsczsgZXQvb3UgaXYpIGRlIGQgZGUgZCBkZSBkIGQnZXh0cmFpcmUgb3UgZGUgZCBsZSBTaXRlIHdlYiBvdSBsZXMgRm9uY3Rpb25uYWxpdCBldCBsZXVycyBjb21wb3NhbnRlcywgaW5jbHVhbnQsIG5vdGFtbWVudCwgbGVzIGxvZ2ljaWVscyBvdSBkJ2FpZGVyIHF1aWNvbnF1ZSBsZSBmYWlyZS4KRXZlbiBpZiBpdCBzZWVtcyBsaWtlIG5vYm9keSdzIG91dCB0aGVyZSBhbnltb3JlLCB5b3UgaGF2ZSB0byB0cnkgZm9yIHlvdXJzZWxmLiAKTW90aGVyYm9hcmQ6IENvbW1vbiBzZW5zZSB3b3VsZCBnbyB3aXRoIGFuIFg0NzAgYm9hcmQgd2hlbiBidWlsZGluZyB3aXRoIGEgUnl6ZW4gNy4gVGhlIEFzdXMgUklHIFg0NzBpIGFuZCBCNDUwaSBob3dldmVyIGFyZSBhbG1vc3QgaWRlbnRpY2FsIGJvYXJkcywgb25seSB0aGUgQjQ1MGkgaGFzIGxlc3MgUENJIEUgbGFuZXMgd2hpY2ggeW91IGNhbiB1dGlsaXplIGFueXdheSB3aXRoIGFuIElUWCBib2FyZC4gRm9yIHNvbWUgcmVhc29uIGl0IGRvZXNuIHNob3cgdXAgb24gdGhlIFVLIFBDUGFydFBpY2tlciwgYnV0IGl0IGF2YWlsYWJsZSBvbiBBbWF6b24gaGVyZS4gCjEgd2VlayBhZ28gKyBCeSBBbmRyZWEgU2ltYWtpcywgVGhlIFBsYWluIERlYWxlcgpJIGFycml2ZWQgZWFybHkgb24gbW9ybmluZyB3aGlsZSBzb21lIGd1eSB3YXMgc2V0dGluZyB1cCBhIGdhbWUgb2YgQXJraGFtIEhvcnJvciwgY29tcGxldGUgd2l0aCBwbGFzdGljIG1vZGVscyBhbmQgc21hbGwgZmxhZy9zdGFuZGFyZCB0aGF0IGFkdmVydGlzZWQgdGhlIGdhbWUuIFNlZW1lZCBjb29sIGFuZCBoZSBhc2tlZCBpZiBJIHdhcyBpbnRlcmVzdGVkLiAKWUVTU1Mgd2VsY29tZSB0byB0aGUgY2x1YiEgVGhlcmUgYXJlIGEgdG9uIG9mIGdyZWF0IGNvbXBhbmllcyBpbiBOZXcgWW9yaywgSSByZWNvbW1lbmQgY2hlY2tpbmcgb3V0IEhlYXJ0YmVhdCBPcGVyYSwgd2hpY2ggZG9lcyBzbWFsbGVyLCBhYnJpZGdlZCB2ZXJzaW9ucyBvZiBvcGVyYXMgKHRoaXMgTWF5IGl0IHdpbGwgYmUgQmVldGhvdmVuIEZpZGVsaW8gYW5kIE1vemFydCBEb24gR2lvdmFubmkpIGluIHNtYWxsZXIgbW9yZSBpbnRpbWF0ZSBzcGFjZXMgICB0aGV5IGFyZSBqdXN0IHRoZSBiZXN0IGFyb3VuZCBpZiB5b3Ugd2FudCB0byBzZWUgb3BlcmEgdXAgY2xvc2UuIE9uIFNpdGUgT3BlcmEgaXMgYW5vdGhlciBzdGVsbGFyIGNvbXBhbnksIHRoZXkgYXJlIGluIHRoZSBtaWRkbGUgb2YgYSBuZXcgb3BlcmEgcHJvZHVjdGlvbiB0aGlzIHdlZWtlbmQsIGEgcGllY2UgY2FsbGVkIE1vcm5pbmcgU3RhciB3aGljaCBpcyBhYm91dCB0aGUgVHJpYW5nbGUgU2hpcnR3YWlzdCBGaXJlIGluIDE5MTEuIGl0IGdldHRpbmcgZ3JlYXQgcmV2aWV3cy4KTWxhemVyICAzIHBvaW50cyAgc3VibWl0dGVkIDEyIG1vbnRocyBhZ28KQ2hhcml0aWVzIGFwcGx5IHRvIHRoZSBzdGF0ZSBmb3IgYSBsaWNlbnNlIHRvIGNvbmR1Y3QgcG9rZXIgZ2FtZXMgYW5kIHRvdXJuYW1lbnRzIGFzIGZ1bmRyYWlzZXJzLCBidXQgQ2hhcml0eSBQb2tlciBTb2x1dGlvbnMgaGVscHMgdGhlbSBnZXQgdGhyb3VnaCB0aGUgcHJvY2VzcyBhbmQgbWFuYWdlcyB0aGUgZ2FtZXMuIE8nRG93ZCBzYWlkIHRoZSBwb2tlciByb29tIGF0IEhvdCBSb2RzIGhhcyBjcmVhdGVkIGFib3V0IDMwIGpvYnMsIGRpcmVjdGx5IGFuZCBpbmRpcmVjdGx5LCBhbmQgaGUgZXhwZWN0cyB0aGUgbmV3IG9uZSBhdCB0aGUgTEEgQ2FmZSB0byBkbyB0aGUgc2FtZS4gQ2FzaW5vIHN0eWxlIGdhbWVzIGVhcm5lZCBNaWNoaWdhbiBjaGFyaXRpZXMgJDMuNiBtaWxsaW9uIGluIGZpc2NhbCAyMDA0IGFuZCAkMTAuNSBtaWxsaW9uIGluIGZpc2NhbCAyMDA4LCBhY2NvcmRpbmcgdG8gdGhlIE1pY2hpZ2FuIExvdHRlcnkuIEphY2tzb24gQXJlYSBDYXRob2xpYyBTY2hvb2xzIHJlY2VpdmVkICQ2LDAwMCB0byAkNywwMDAgZnJvbSBmb3VyIGRheSBldmVudHMgYXQgSG90IFJvZHMgaW4gSmFudWFyeSBhbmQgRmVicnVhcnksIFJlZ2lvbmFsIENvb3JkaW5hdG9yIEJpbGwgRGV2aW5lIHNhaWQuIFRoZSBzY2hvb2xzIGFyZSB1c2luZyB0aGUgbW9uZXkgdG8gaGVscCBwYXkgZm9yIHRlY2hub2xvZ3kgdXBncmFkZXMgYW5kIHNjaG9vbCB0cmlwcywgRGV2aW5lIHNhaWQuICJUaGlzIGlzIGdvaW5nIHRvIGdpdmUgdXMgc29tZSBhZGRpdGlvbmFsIHJldmVudWUsIiBEZXZpbmUgc2FpZC4gIllvdSBkb24ndCBoYXZlIHRvIHNlbGwgY2FuZHkgYmFycyB0d28gb3IgdGhyZWUgdGltZXMgYSB5ZWFyLCB0aG9zZSBuaWNrZWwgYW5kIGRpbWUgdGhpbmdzLiIgTGlmZVNwYW4gLiBBIENvbW11bml0eSBTZXJ2aWNlIGhhZCAxMiB0b3VybmFtZW50cyBhdCBIb3QgUm9kcyBpbiAyMDA4IGFuZCBhdmVyYWdlZCBhYm91dCAkMSwwMDAgYSBuaWdodCwgRXhlY3V0aXZlIERpcmVjdG9yIEJhcmIgRnJleXNpbmdlciBzYWlkLiAiVGhhdCBtb25leSBoYXMgZ29uZSBpbnRvIGRpcmVjdCBzZXJ2aWNlcyBmb3IgdGhlIGVsZGVybHksIiBGcmV5c2luZ2VyIHNhaWQuIEZyZXlzaW5nZXIgc2FpZCBDaGFyaXR5IFBva2VycyBTb2x1dGlvbnMgaXMgZWFzeSB0byB3b3JrIHdpdGggYW5kIHByb2R1Y2VzIHJlc3VsdHMuIFNoZSBzYWlkIExpZmVTcGFuIGhlbGQgaXRzIG93biBwb2tlciB0b3VybmFtZW50cyBiZWZvcmUgZ2V0dGluZyBpbnZvbHZlZCB3aXRoIENoYXJpdHkgUG9rZXIgU29sdXRpb25zIGFuZCB0aGV5IHdlbnQgcG9vcmx5LiAiV2UgbG9zdCBvdXIgc2hpcnRzLiBXZSBkaWQgbm90IGtub3cgd2hhdCB3ZSB3ZXJlIGRvaW5nLCIgRnJleXNpbmdlciBzYWlkLiAgIFRoZSBBc3NvY2lhdGVkIFByZXNzIGNvbnRyaWJ1dGVkIHRvIHRoaXMgcmVwb3J0LgpBbGwgb2YgdGhhdCBzdGlsbCBhZmZlY3RzIG1lIHRvIHRoaXMgZGF5LiBJIGxlYXJuaW5nIGhvdyB0byAicmUgbW90aGVyIiBteXNlbGYuIApXaXRoIHRoYXQsIHNoZSBwdXNoZWQgaW4gZXZlbiBmdXJ0aGVyLiBBbm90aGVyICdPaG15Z29kJyBmcm9tIG1lLiBUaGVuIHRoZSB0aHJ1c3RpbmcgYmVnYW4uICdLZWVwIHdpdGggbWUsJyBzaGUgc2FpZC4gUmVhZCBtb3JlClRoZSBmaXJzdCB0d28gYXJlIGRvd24gY2FyZHMgdGhlIHRoaXJkIGlzIHVwIGZvciBldmVyeW9uZSB0byBzZWUuIApBcyB0aGUgZmlyc3QgYmxpenphcmQgaG93bGVkIGxhc3Qgd2Vla2VuZCwgdGhlIFZpcmdpbmlhIFJlcHVibGljYW4gUGFydHkgcHV0IHVwIGFuIGFkdmVydGlzZW1lbnQgb24gdGhlIFdlYiAgIHRpdGxlZCAiMTIgSW5jaGVzIG9mIEdsb2JhbCBXYXJtaW5nIiAgIGNyaXRpY2l6aW5nIHR3byBWaXJnaW5pYSBEZW1vY3JhdHMsIFJlcHJlc2VudGF0aXZlcyBSaWNrIEJvdWNoZXIgYW5kIFRvbSBQZXJyaWVsbG8sIHdobyB2b3RlZCBmb3IgdGhlIGZlZGVyYWwgY2FwIGFuZCB0cmFkZSBsZWdpc2xhdGlvbiBsYXN0IHllYXIuIFRoZSBhZHZlcnRpc2VtZW50IHVyZ2VzIHZvdGVycyB0byBjYWxsIE1yLiAKQm9iYSBzcHJpbmdzIGludG8gYWN0aW9uLCBmaWdodGluZyB0aGUgSmVkaSwga2VlbiB0byB0ZXN0IGhpcyBza2lsbHMgYW5kIHNsYXkgb25lIG9mIHRob3NlIGtpbmQgd2hvIHNsZXcgaGlzIGZhdGhlci4gQm9iYSBpbml0aWFsIGF0dGVtcHRzIHRvIGtpbGwgdGhlIEplZGkgYXJlIHRod2FydGVkLiBIb3dldmVyLCBCb2JhIGlzIGRldGVybWluZWQgYW5kIHNraWxsZnVsLiAKRW4gdXNhZ2UgaW50ZXJuZSwgdW4gc3VyZG9zYWdlIGRldmllbnQgcHJvYmxtYXRpcXVlLiBPbiBvYnNlcnZlIHRvdXQgZCBkZXMgbmF1c2VzIGV0IGRlcyB2b21pc3NlbWVudHMsIGFpbnNpIHF1ZSBkZXMgZGlhcnJoZXMuIApJdCBoYW1tZXJzIGRvd24gZm9yIHVwIHRvIGZvdXIgaG91cnMgYXQgYSB0aW1lOyBlYWNoIGZvdXIgaG91ciBwZXJpb2QgaXMga25vd24gYXMgb25lICJoYW1tZXJpbmcgY3ljbGUuIiBBcyBpdCBkZXNjZW5kcywgaXQgc3RvcHMgcm91Z2hseSBldmVyeSAxOS41IGluY2hlcyAoNTAgY2VudGltZXRlcnMpIHRvIGdlbmVyYXRlIGEgcHVsc2Ugb2YgaGVhdC4gClRoZW4gc2hlIGFza3MgdG8gYmUgcGV0dGVkIHNwZWNpZmljYWxseSBvbiB0aGF0IHNwb3Qgb24gaGVyIGJhY2sgY2F0cyBsb3ZlIHNvIG11Y2gsIGFuZCB0aGVuIHJ1YnMgaGVyIGZhY2UgYW5kIHRhaWwgYWdhaW5zdCBoaW0uIFNvIGJhc2ljYWxseSBhbGwgdGhlIHNjZW50IGdsYW5kcy4uIApVbmZvcnR1bmF0ZWx5LCB0aGUgbGFwdG9wIHN0YXJ0cyByZWFsbHkgaGVhdGluZyB1cCwgdXAgdG8gOTAgZmFyZW5oZWl0IGFmdGVyIDVtaW4gd2hpbGUgcGxheWluZyBGb3J0bml0ZSBvbiBsb3cgc3BlY3MuLiAKRGVhciBicm90aGVyIG9mIE1hcnksIEpvQW5uIGFuZCB0aGUgbGF0ZSBCcmVuZGEuIEJyb3RoZXIgaW4gbGF3IG9mIHRoZSBsYXRlIEdvcmRvbiwgQ2xhcmUgYW5kIExlbi4gClRoZXJlIGlzIGEgdmVyeSB3aWRlIGd1bGYgYmV0d2VlbiB3aGF0IGdldHMgY2hhbm5lbGxlZCBpbnRvIHRoZSBmb3JtYWwgcmVmZXJyYWwgcGF0aHdheXMgdnMgd2hhdCBnZXRzIHRocm93biBpbnRvIHRoZSBkb24ga25vdywgSSBub3QgcGFpZCBlbm91Z2ggZm9yIHRoaXMsIEkganVzdCB3YW50IHRvIGdvIGhvbWUgYXQgNHBtIHdpdGhvdXQgdHJpZ2dlcmluZyBhIGRpc2NpcGxpbmFyeSBtZWV0aW5nIHRvbW9ycm93IGR1bXBpbmcgZ3JvdW5kcyBvZiBmb3Jnb3R0ZW4gY2FsbHMuIFdoaWNoIGlzIGFnYWluLCB3aHkgSSB0aGluayBwcm9mZXNzaW9uYWwsIHdlbGwgcGFpZCBwdWJsaWMgc2VydmFudHMgYXJlIGEgYmV0dGVyIGlkZWEgdGhhbiBvdXRzb3VyY2luZyB0byB3aGF0dmVyIGVudGl0eSBpcyB0ZW5kZXJpbmcgdGhlIG1pbmltdW0gY29zdCBzZXJ2aWNlLiBFdmVuIGlmIHRoYXQgY29zdHMgbWUgbXkgb3duIGpvYiwgaXQgYmV0dGVyIHRvIHNlZSBwZW9wbGUgYWN0dWFsbHkgZ2V0IG1lYW5pbmdmdWwgc3VwcG9ydCwgaW5zdGVhZCBvZiB0aGUga2Fma2EgZXNxdWUgbWluaXVtIGNvc3QgbmlnaHRtYXJlIGV2ZXJ5b25lIGlzIGxpdmluZyBhdG0uLiAKUGVyc29uYWxseSwgSSBkaWRuJ3QgZmluZCBhbnl0aGluZyBvYmplY3Rpb25hYmxlIHdpdGggaGVyIGNvbW1lbnRzIGluIGNvbnRleHQuIFRvIGJlIGNsZWFyIHRoaXMgd2FzIGEgY29udmVyc2F0aW9uIGRpcmVjdGx5IGFib3V0IEhhbGxvd2VlbiBhbmQgc2hlIGdhdmUgc29tZSBzcGVjaWZpYyBleGFtcGxlcyByZWdhcmRpbmcgZHJlc3NpbmcgYXMgY2VsZWJyaXRpZXMuIApTdGF5IHN0cm9uZyBhbmQgSSB3aXNoIHlvdSB0aGUgYmVzdC4uIApUaGUgYmVzdCB3YXkgdG8gZG8gdGhpcyBpcyBieSB2ZXJ5IGdlbnRseSBmbHVzaGluZyB0aGUgZWFyIHdpdGggYSBzb2x1dGlvbiBvZiB0ZXBpZCB3YXRlciBhbmQgbWlsZCBkaXNoIHNvYXAsIHRoZW4gcmluc2luZy4gCllvdSByZW1vdmUgdGhlIGV4cGFuc2lvbiBvZiB0aGUgdW5pdmVyc2UsIHNvIHdoZW4gYW5vdGhlciBzY2llbnRpc3QgYWRkcyBpdCBiYWNrIGluLCB0aGV5IGdldCB0byBjaG9vc2Ugd2hpY2ggZXhwYW5zaW9uIG1vZGVsIHRvIHVzZS4gCklmIHlvdSB0YWtlIGEgbWludXRlIHRvIGxvb2sgaW50byBteSBwcm9maWxlIHlvdSBjYW4gc2VlIEkgbWFuYWdlIG9uZSBmcm9udCBwYWdlIGNvbW11bml0eSB0aGF0IGhhcyBtdWNoLCBtdWNoIG1vcmUgdHJhZmZpYyB0aGFuIHRoaXMgc3ViIGFuZCBJIGp1c3QgZG9uIGhhdmUgdGhlIHRpbWUgdG8gY29tcGx5IHdpdGggaXJsIHN0dWZmIGFuZCBjaGVja2luZyBldmVyeSBzaW5nbGUgc3ViIGV2ZXJ5IGRheS4gCkV2ZW4gd2hlbiBpbSBub3QgYWdyZWVpbmcgb3IgY29vcGVyYXRpbmcsIEkgZmluZCBteSBuZWlnaGJvciBtdWNoIGxlc3MgYWdyZXNzaXZlIHdoZW4gaSB2ZXJiYWxseSBlbXBhdGhpemUgd2l0aCBoaXMgcGxpZ2h0LiAKVGhlcmUgaXMgb25lIGJlZHJvb20gb24gdGhlIGxpYnJhcnkgbGV2ZWwgYW5kIGZvdXIgdXBzdGFpcnMsIGFsbCB3aXRoIGVuc3VpdGVzLiBUaGUgdmF1bHRlZCBjZWlsaW5nZWQgbWFzdGVyIGhhcyBhbiBlbm9ybW91cyB3YWxrIGluIGNsb3NldCBkcmVzc2luZyByb29tIHdpdGggYSAxMyBmb290IGNlaWxpbmcgZG93biB0aGUgbWlkZGxlOyBpdCBsZWFkcyB0byBhIHZhc3QgYW5kIGx1eHVyaW91cyBlbnN1aXRlLiAKR2FtZXMgcGVvcGxlIHBsYXkKUGFydHkgUG9rZXIgaXMgZ29pbmcgaW4gdGhlIGRpcmVjdGlvbiBvZiBiZWluZyB0aGUgbmV4dCBnb29kIGd1eSwgb2ZmZXJpbmcgMjAlIDM1JSByYWtlYmFjayBwYWlkIG91dCBldmVyeSBNb25kYXkuIApUaGUgdHdvIG1lbiBhbmQgYSB3b21hbiB3aXJlZCB0aGVtc2VsdmVzIHdpdGggbWluaWF0dXJlIGNhbWVyYXMgYW5kIGNvbW11bmljYXRpb24gZGV2aWNlcyBkdXJpbmcgZ2FtZXMgb2YgcG9rZXIgaW4gb3JkZXIgdG8gY2hlYXQgY2FzaW5vcyBvd25lcnMgb3V0IG9mIG1vcmUgdGhhbiAyNTAsMDAwLgpUaGV5IHNhaWQgdGhlIHN0b3JtIGNhdXNlZCB0aGUgaW52ZXN0aWdhdGlvbiB0byBiZSBjb21wbGV0ZWQgbm90IGluICJ0aGUgbm9ybWFsIHdheS4nJy4gCkJ1dCBVUyBoZWFsdGhjYXJlLCBhcyB3ZSBhbGwga25vdywgaXMgbW9yZSBvciBsZXNzIHVucmVndWxhdGVkLiBBbnlvbmUgd2l0aCBhbiBNRCBjYW4gcGVyZm9ybSBjb3NtZXRpYyBzdXJnZXJ5ICB5b3VyIGRlbnRpc3QsIHlvdXIgZ3luby4uIApUaGVuIHN3aXRjaCBoYW5kcywgYW5kIHJlcGVhdCB0aGUgcHJvY2Vzcywgd29ya2luZyB3aXRoIGJvdGggb2YgeW91ciBoYW5kcyBvbiBvbmUgb2YgaGVyIGhhbmRzIGVhY2ggdGltZS4gCkRlY2lkZWQgdG8gdGFrZSBteSBzcGFyZSBjYXNoIGFuZCBwbGF5IHNvbWUgbGl2ZSAxLzIgdGhpcyB3ZWVrZW5kLiBXZW50IFRodXJzZGF5LCBGcmlkYXksIGFuZCBTYXR1cmRheSwgYm9va2VkIHRocmVlIHdpbm5pbmcgc2Vzc2lvbnMuIEkgaGFkIGEgY291cGxlIGx1Y2t5IHJ1bm91dHMgYW5kIHNpY2sgaGVybyBjYWxscywgYnV0IGl0IHdhcyBtb3N0bHkganVzdCB2YWx1ZSBiZXR0aW5nIHN0cm9uZyBoYW5kcyBhbmQgZ2V0dGluZyBwYWlkIG9mZiBieSBmaXNoLiBJIGtub3cgdGhpcyBpcyBqdXN0IHZhcmlhbmNlIGJ1dCBJIHN0YXJ0aW5nIHRvIGxpa2UgbGl2ZSBwb2tlciBhIGxvdCBtb3JlIHRoYW4gb25saW5lLiAoTm90IGJlaW5nIGFsbG93ZWQgdG8gZ2V0IHN0b25lZCB3aGlsZSBwbGF5aW5nIGlzIGFwcGFyZW50bHkgbWFzc2l2ZWx5ICtFVikKWW91IG1pZ2h0IHRoaW5rIEFyZXMgbGVhZGVyIGFiaWxpdHkgb25seSBiZW5lZml0cyBoaW1zZWxmLCBhbmQgd2hpbGUgb24gcGFwZXIgaXQgZG9lcy4gClRoYXQgaW5jbHVkZXMgc2xlZXBpbmcgd2l0aCBrbmVlIHNsZWV2ZXMgb24gKGRvbnQgZ28gZnVsbCBTQkQgaGVyZSB0aG91Z2gsIGJ1eSBhIGNoZWFwIGFuZCB0aGluIHBhaXIgZnJvbSBhIGdlbmVyYWwgc3BvcnQgc3RvcmUgb3Igd2hhdGV2ZXIsIGkgdXNlZCBSZWhiYW5kcykgYW5kIHNwZW5kaW5nIDUgMTAgbWludXRlcyB3aGVuIGV2ZXIgaSBzaG93ZXJlZCBqdXN0IHRyeWluZyB0byBoZWF0IHVwIG15IGtuZWVzIHdpdGggaG90IHdhdGVyLgpIaXQgdGhlIGxpbmtzIGluIHNvbGl0dWRlIGluIHN1bm55IE5hcGxlcywgRmxvcmlkYSwgcmV2ZXJlZCBhcyBvbmUgb2YgdGhlIG5hdGlvbidzIGhvdHRlc3QgZ29sZmluZyBkZXN0aW5hdGlvbnMgdGhhbmtzIHRvIGl0cyAxLDYwMCBob2xlcyBvZiBnb2xmLiBUaGUgdXBzY2FsZSwgTWVkaXRlcnJhbmVhbiBpbnNwaXJlZCBib3V0aXF1ZSBob3RlbCwgSW5uIG9uIEZpZnRoLCBvZmZlcnMgYW4gYWJvdmUgcGFyIHllYXIgcm91bmQgdHdvIG5pZ2h0IGdvbGYgcGFja2FnZSBwZXJmZWN0IGZvciB0aGUgZ28gaXQgYWxvbmUgZ29sZmVyOyBhbG9uZyB3aXRoIHlvdXIgYWNjb21tb2RhdGlvbnMsIHlvdSdsbCBhbHNvIG5hYiByb3VuZHMgYXQgdHdvIGRpc3RpbmN0LCBzZW1pIHByaXZhdGUgbmVhcmJ5IGdvbGYgY291cnNlcyAodGhlIHRyb3BpY2FsbHkgbGFuZHNjYXBlZCBIYW1tb2NrIEJheSBhbmQgdGhlIGNoYWxsZW5naW5nLCBHcmVnIE5vcm1hbiBkZXNpZ25lZCBUaWJ1cm9uKSwgd2l0aCBhbGwgY2FydCBhbmQgZ3JlZW4gZmVlcyBpbmNsdWRlZC4gClllcywgSSBsaWtlIHdoZW4gSSBkbywgYnV0IEknZCByYXRoZXIgZm9jdXMgb24gZmVlbGluZyBnb29kIHRoYW4gYmUgd29ycmllZCBhYm91dCBoaXR0aW5nIHRoYXQuIAogUmFwaWQgV2llbiBvbGUhICBJbSBHZWdlbnNhdHogenUgZGllc2VuIHVud2ljaHRpZ2VuIERyZmVybiB3aWUgQW5rYXJhIG9kZXIgV2VsbGluZ3RvbiBzaW5kIHdpciBiZXJobXQgdW5kIGJlc3Nlciwgd2lyIGhhYmVuIGRhcyBkcmluZ2VuZGUgQmVkcmZuaXMgbmFjaCBtZWhyLiAKUm9yYXNhdXJ1c3NleCB1CkNvbXBhcmUgdGhhdCB0byBhIGRlY3JlYXNlIG9mIDEzLjUgcGVyY2VudCBpbiBOb3ZlbWJlciBmb3IgVHVuaWNhIENvdW50eSdzIHNoYXJlIG9mIGdhbWJsaW5nIHRheGVzLCBhY2NvcmRpbmcgdG8gZmlndXJlcyByZWxlYXNlZCBieSBUdW5pY2EgQ291bnR5IENvbXB0cm9sbGVyIExpbmRhIEh1bWJlci4gTWlzc2lzc2lwcGkgZG9lcyBub3QgcmVsZWFzZSB3aW5uaW5ncyBieSBpbmRpdmlkdWFsIHByb3BlcnRpZXMgb3IgYnkgY291bnR5LCBidXQgdGhlIHRha2UgZnJvbSBhbGwgb2YgaXRzIE1pc3Npc3NpcHBpIFJpdmVyIGNhc2lub3Mgd2FzIGRvd24gOS42IHBlcmNlbnQgaW4gTm92ZW1iZXIuLiAKSXQgd2FzIGNsZWFyIGV2ZW4gdGhlbjogQ29uc3VtcHRpb24gb2YgYWxrYWxpemluZyB2ZWdldGF0aW9uICh2ZWdldGFibGVzLCBmcnVpdHMsIHJvb3RzIC8gdHViZXJzKSBwb3NpdGl2ZWx5IGNvcnJlbGF0ZWQgd2l0aCBib25lIG1pbmVyYWwgZGVuc2l0eSwgYnV0IHRoaXMgd2FzIG5vdCB0aGUgY2FzZSBmb3IgZGFpcnkgaW50YWtlLCBkZXNwaXRlIHRoZSBmYWN0IGl0IHdhcyAvIGNvbnRpbnVlcyB0byBiZSB0b3V0ZWQgYXMgYmVpbmcgYmVuZWZpY2lhbCBmb3IgYm9uZSBoZWFsdGggZHVlIHRvIGl0cyBjYWxjaXVtIGNvbnRlbnQuCkJ1dCBteSBmcmllbmRzIHdlcmUgcXVpdGUgdGhlIHVuaXF1ZSBnYW1ibGVycy4gCldoZW4gaXQgY29tZXMgdG8gbWFya2V0aW5nIHlvdXIgUHJvIENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MsIGl0IGlzIGltcG9ydGFudCB0byBrbm93IGFuZCB1bmRlcnN0YW5kIHdoYXQgYSAidGFyZ2V0IiBtYXJrZXQgaXMuIFRoaXMgaXMgYmFzaWNhbGx5IGEgZ3JvdXAgb2YgaW5kaXZpZHVhbHMgdGhhdCB5b3Ugd2FudCB0byBnYWluIHRoZSBhdHRlbnRpb24gb2YuIApJJ3ZlIGhhZCBzb2JlciBib3lmcmllbmRzIHRyeSB0byBwaWNrIGEgZmlnaHQgd2l0aCBtZSBhIGhhbGYgZG96ZW4gdGltZXMsIGFuZCB3aG8ga25vd3MgaG93IG1hbnkgZHJ1bmsgb25lcy4gClBoeXNpY2FsIGNvbnRlc3Qgb3IgdHJpdmlhbCBwdXJzdWl0PyBQb2tlciBmYWNlcyBwb3NlckEgZGljdGlvbmFyeSBkZWZpbmVzIHNwb3J0IGFzOiBwdXJzdWVkIGZvciBleGVyY2lzZSBvciBwbGVhc3VyZSwgdXN1YWxseSByZXF1aXJpbmcgc29tZSBmb3JtIG9mIHBoeXNpY2FsIHNraWxsLCBzdWNoIGFzIGdvbGYsIGZpc2hpbmcsIHJhY2luZywgZXRjLiBBIHNjaG9vbHRlYWNoZXIgZnJvbSBQZW5yaXRoIHdobyBoYWQgYWxsIGhpcyBmaW5hbmNpYWwgcHJheWVycyBhbnN3ZXJlZCBsYXN0IHllYXIgYnkgd2lubmluZyBhICQxIG1pbGxpb24gdG91cm5hbWVudCBhdCBTdGFyIENpdHkgY2FzaW5vLCBoZSBzYXlzIHRoZSBhY3Qgb2Ygc2l0dGluZyBhdCBhIHRhYmxlIGZvciB1cCB0byAxNiBob3VycyBhbmQgd2FpdGluZyBmb3IgYW4gb3Bwb25lbnQgdG8gZmFsdGVyIGlzIGRpcmVjdGx5IHJlbGF0ZWQgdG8gcGh5c2ljYWwgZml0bmVzcy4uIApUaGUgcmVzdGF1cmFudCBvZmZlcnMgYSBmcmVzaGx5IHByZXBhcmVkIGEgbGEgY2FydGUgbWVudSBhbGwgZGF5IHByZXNlbnRpbmcgdGhlIGJlc3Qgb2YgTWFsYXlzaWFuIGN1aXNpbmUgc3VjaCBhcyBzYXRheSBncmlsbHMsIHRhbmRvb3Igb3ZlbnMsIHJvdGkgaG90IHBsYXRlcyBhbmQgd29rIHN0YXRpb25zIHNlcnZlIGZyb20gdGhlIHJlc3RhdXJhbnQncyBzaG93IGtpdGNoZW5zLi4gCktldHRsZWJlbGwgYm9kaWVzIGFyZSBsZWFuLCB0b25lZCBhbmQgZnVuY3Rpb25hbCwgbm90IGJ1bGt5ICAgYSBiZW5lZml0IHRoYXQgaGVscHMgcHJldmVudCByZWN1cnJlbnQgaW5qdXJ5LgpCVVQgdGhlcmUgYXJlIHNvbWUgY2FzZXMsIG1vc3RseSBpbiB0aGluZ3MgbGlrZSB0aGUgTWlzc2lvbjogSW1wb3NzaWJsZSBtb3ZpZXMsIHdoZXJlIHlvdSBoZWFyIHRoZSBwbGFuLCBzb21ldGhpbmcgd2lsbCBnbyB3cm9uZywgYW5kIHRoZW4gdmlhIGEgZmxhc2hiYWNrIHRoZSBhdWRpZW5jZSB3aWxsIGhlYXIgdGhlIHJlc3Qgb2YgdGhlIHBsYW4sIGZvbGxvd2VkIGJ5IHRoZSBwbGFuIHN1Y2NlZWRpbmcgYnkgdGhlIHNraW4gb2YgdGhlaXIgdGVldGguIEkgYWx3YXlzIGFwcHJlY2lhdGUgdGhlIG1peCB1cCwgaXQgbW9yZSBkaWZmaWN1bHQgdG8gcHJlZGljdC4KSW4gdGhlIGVhcmx5IGhvdXJzIG9mIFNlcHRlbWJlciAyNSwgMjAxNiwgU2FtIHNhdCBkb3duIGF0IGEgcG9rZXIgdGFibGUgYW5kIHdhcyBzb21laG93IGRlYWx0IHRoZSBkcmVhbSBoYW5kICAgYSByb3lhbCBmbHVzaC4gVG8gdGhvc2Ugbm90IGZhbWlsaWFyIHdpdGggcG9rZXIsIHRoZSBjaGFuY2VzIG9mIGJlaW5nIGRlYWx0IGEgcm95YWwgZmx1c2ggYXJlIDY0OSw3MzkgdG8gMS4gCldoZW4gSSBlbnRlcmVkIHRoZSBjb2xsZWdlIHNjZW5lIGluIDE5OTMgYSBzZW1lc3RlciBvZiB0dWl0aW9uIGF0IG1vc3Qgc3RhdGUgc2Nob29scyB3YXMgYXJvdW5kICQxNDAwIDE2MDAuIApJdCBkb2VzIG5vdCBoYXZlIHRoZSBzYW5kYm94aW5nL2FjY2VzcyBjb250cm9sIHRoYXQgZmxhdHBhayBoYXMgYnV0IGlzIGl0IHJlYWxseSBhIGdvb2QgaWRlYSB0byBiaW5kIGFjY2Vzcy9wZXJtaXNzaW9uIGNvbmZpZ3VyYXRpb24gd2l0aCBhIHBhY2thZ2UgbWFuYWdlcj8gLiAKU291bmQgY29tcGxpY2F0ZWQ/IFdlbGwsIGl0IHdhc24ndCB0byBKZXJyeS4gSSBzYWlkIGlmIEkgcGxheWVkICQxLDEwMCBtYXRoZW1hdGljYWxseSBJJ2QgaGF2ZSBvbmUgNCBudW1iZXIgd2lubmVyLCB0aGF0J3MgMSwwMDAgYnVja3MuIApXaGVuIEkgcG9zdGVkIGFib3V0IHRoZSBzaXR1YXRpb24gaGVyZSwgdGhlIHBvc3Qgd2FzIHJlbW92ZWQuCkNvbWUgc2VlIHdoYXQgdGhlIGFydGlzdHMgZnJvbSB0aGUgc3R1ZGlvIHRoYXQgZ2F2ZSB1cyBNZXRhbG9jYWx5cHNlLCBCaWcgTW91dGggYW5kIE5lcmRsYW5kIGNhbiBkbyB3aGVuIHRoZXkgbWFrZSB0aGVpciBvd24gNSBzZWNvbmQgY2FydG9vbi4gVGhlIGZpbmFsIHByb2R1Y3RzIGFyZSBhbGwgc3BsaWNlZCB0b2dldGhlciBpbnRvIG9uZSBmdWxsIGxlbmd0aCByZWVsLiAKV2UgYWxsIGhhdmUgdG8gZmluZCBvdXIgb3duIHdheSB0byBjb3BlIHdpdGggdGhpcyBzdHVmZi4gWW91IGNob29zZSB0byBjYWxsIGZvciB2aW9sZW50IHJldmVuZ2UuIApTbyBob3dldmVyIG9sZCB5b3UgYXJlIGFzIHlvdSByZWFkIHRoaXMsIGRvbiBldmVyIGxvc2Ugc2lnaHQgb2YgdGhlIGZhY3QgdGhhdCB5b3UgY2FuIHB1c2ggdGVuIG1vcmUgeWVhcnMgZG93biB0aGUgbGluZS4gVGhlIGRheXMgdGFrZSBmb3JldmVyLCBidXQgdGhlIHllYXJzIGZseSBieS4gCk5vdCBhIGh1Z2Ugc2VsZWN0aW9uIG9mIHRvcHBpbmdzLiAKU2l0ZSBvZiBtYXNzYWdlIGluY2x1ZGVkIHNob3VsZGVycywgbmVjaywgZmFjZSBhbmQgc2NhbHAsIGZlZXQsIGFybXMsIGxlZ3MgYWxvbmUgb3IgaW4gY29tYmluYXRpb24uIFRoZSBwcm9wb3J0aW9uIG9mIHBhcnRpY2lwYW50cyB3aG8gd2VyZSBmZW1hbGUgcmFuZ2VkIGZyb20gMzYlIHRvIDEwMCUuIApJZiB5b3Ugd2FudCB0byBmbGV4IHRob3NlIG11c2NsZXMgYW5kIGdldCBpbiBzaGFwZSwgb3VyIGNhdGVnb3J5IG9uIEV4ZXJjaXNlIE51dHJpdGlvbiBpcyBqdXN0IHRoZSB0aGluZyB5b3UgbmVlZC4gTGVhcm4gYWxsIHRoZSBleGVyY2lzZSBhbmQgd2VpZ2h0IGxvc3MgdGlwcyB5b3UgZGV2ZWxvcCBhIGZpcm0sIGZpdCBib2R5LiAKVGhlcmUgYXJlIGFjdHVhbGx5IHZlcnkgZmV3IG1lY2hhbmlzbXMgYnkgd2hpY2ggdGhpcyBjb3VsZCBvY2N1ci4gClRoZXJlIGFyZSBldmVuIG9yZ2FuaXphdGlvbnMgc3BlY2lmaWNhbGx5IGNyZWF0ZWQgdG8gcmFpc2UgbW9uZXkgZm9yIFRIT04sIGFuZCBtb3N0IGNsdWJzIHBhcnRpY2lwYXRlIGFzIHdlbGwuIENvcnBvcmF0ZSBzcG9uc29yc2hpcCBoYXMgYWxzbyBiZWNvbWUgYSBiaWcgcGFydCBvZiBmdW5kcmFpc2luZyB0aHJvdWdoIGRvbmF0aW9ucyBhbmQgb3RoZXIgZXZlbnRzLiBIZXJlIGlzIGEgYnJlYWtkb3duIG9mIGZ1bmRyYWlzaW5nIGZvciAyMDE4Li4gCkkgd29uIGludmVzdGlnYXRlIGEgcHJvcGVydHkgdW50aWwgYm90aCBteXNlbGYgYW5kIHRoZSBwcm9wZXJ0eSBvd25lciBoYXZlIHNpZ25lZCBhbiBhc3NvcnRtZW50IG9mIHJlbGVhc2VzIGFuZCBpbmRlbW5pdHkgZm9ybXMuIApXaGF0J3MgbW9yZSwgSXNuZXIgc2VydmVkIG5vIGFjZXMgRnJpZGF5IGFmdGVyIGhpdHRpbmcgYSByZWNvcmQgMTEyIGFnYWluc3QgTWFodXQuCkJ1dCB0aGVuIHdlIGdldCB0byB0aGUgcGFydCB3aGVyZSBQaGlscG90dCB3YXJuZWQgVHJ1ZGVhdSBhYm91dCBob3cgdGhlIG1vdmUgY291bGQgYmUgc2VlbiBhcyB1bmV0aGljYWwgaW50ZXJmZXJlbmNlIGJ5IHRoZSBBRywgYmVmb3JlIGhlIGV2ZW4gdGFsa2VkIHRvIGhlci4gCkkgdGhlbiBub3RpY2VkIHRoYXQgaXQgc2VlbWVkIGxpa2UgZXZlcnl0aGluZyB3YXMgY29sb3JlZCBpbiB3aXRoIGNyYXlvbnMgYW5kIGl0IG1hZGUgbWUgZ2lnZ2xlIGZvciBhIGxvbmcgYW1vdW50IG9mIHRpbWUgc2luY2UgaXQgd2FzIHRoZW4gSSByZWFsaXplZCB0aGF0IEkgd2FzIGJlZ2dpbmluZyB0byBmZWVsIHRoZSBlZmZlY3RzLiBTZWUgZG9pbmcgYWNpZCBwdXRzIHlvdSBpbnRvIHRoZXNlIGxvb3BzIHRoYXQgeW91IGZlZWwgbGlrZSB5b3UgY2FuJ3QgY29udHJvbCBhbmQgaXQgbWFkZSBtZSB2ZXJ5IGFueGlvdXMgYXQgc29tZSBwb2ludHMgYmVjYXVzZSBJIGZlbHQgbGlrZSBJIHdhcyBnb2luZyB0byBiZSB0cmFwcGVkIGZvcmV2ZXIuLiAKSSB1c2VkIHRvIHRoaW5rIHdvbWVuIHRoYXQgYWdlIGhhZCB0aGVpciBzaGl0IHRvZ2V0aGVyIGFuZCB3b3VsZG4gZ2V0IGluc2VjdXJlIGFib3V0IHRoYXQgdHlwZSBvZiBzdHVmZiwgYnV0IGJveSB3YXMgSSB3cm9uZy4gNTAgc2VsZmllcyBpbiBhIHJvdyB0byB0cnkgYW5kIGdldCB0aGUgcGVyZmVjdCBmYWNpYWwgZXhwcmVzc2lvbiwgb25seSB0YWtpbmcgcGhvdG9zIGZyb20gYSBoaWdoIGFuZ2xlIHRvIG1ha2UgdGhlaXIgZmFjZSBsb29rIG1vcmUgYW5ndWxhciwgY29sb3IgY29ycmVjdGluZywgZmlsdGVycywgbm90IHBvc3RpbmcgYW55IHBpY3R1cmVzIHRha2VuIHdpdGggbWUgb3IgYW55ICJ5b3VuZ2VyIiB3b21lbiB0byB0aGVpciBzb2NpYWwgbWVkaWEgcGFnZXMsIHJhbnRpbmcgYW5kIHJhdmluZyBhYm91dCB0aGUgZ3V5IHRoZXkgaG9va2VkIHVwIHdpdGggYW5kIGZlbGwgZm9yIHR3byB3ZWVrcyBhZ28gYW5kIGhvdyBoZSBsaWtlZCB0aGVpciBwZXJmZWN0bHkgY2hvc2VuIEZhY2Vib29rIHBpY3R1cmUgcG9zdCBidXQgZGlkbiByZXNwb25kIHRvIHRoZWlyIHRleHQuSW5zZWN1cml0aWVzIGRvIG5vdCBnbyBhd2F5IHdpdGggYWdlLiAKVGhleSBrbm93IHRoYXQgb3ZlcnQgcmFjaXNtIGhhcyBmYWxsZW4gb3V0IG9mIGZhc2hpb24gYW5kIHdpbGwgcXVpY2tseSBsZWFkIHRvIHBlb3BsZSBkaXN0YW5jaW5nIHRoZW1zZWx2ZXMuIApIdW1hbiBtdXNjbGUgd2FzIG1vc3RseSByZXBsYWNlZCBidXQgdGhleSBzdGlsbCBuZWVkZWQgbW9yZSBodW1hbiBicmFpbnMgdGhhbiBldmVyIHRvIG1hbmFnZSB0aGlzIGV2ZXIgaW5jcmVhc2luZ2x5IHJhcGlkIGFuZCBjb21wbGV4IHdvcmxkLiAKUmVtZW1iZXIgdGhhdCBzaGUgaXMgYSB2aWN0aW0gaW4gdGhpcyBhbmQgd2hpbGUgaXQgdW5kZXJzdGFuZGFibGUgdG8gYmUgZnJ1c3RyYXRlZCBhbmQgdXBzZXQgd2l0aCBoZXIsIHlvdSBoYXZlIHRvIGxldCB0aGF0IHBhc3MgYW5kIHN1cHBvcnQgaGVyLiBFbnN1cmUgdGhhdCBzaGUgZG9lc24gbWFrZSB0aGUgc2FtZSBtaXN0YWtlIGFnYWluLiBJZiB5b3UgYXJlIG1ha2luZyBhIGNvbWJpbmVkICQyNDBLIGluY29tZSwgeW91IGFyZSBsdWNreSB0byBiZSBhYmxlIHRvIHNob3VsZGVyIHRoaXMgY3JpbWUgYW5kIGFyZSBpbiBhIHBvc2l0aW9uIHRvIGRvIHNvLCBzb21ldGhpbmcgOTklIG9mIHBlb3BsZSB3b3VsZG4gYmUgaW4uIEl0IHdvbiBiYW5rcnVwdCB5b3Ugb3IgcnVpbiB5b3VyIGxpdmVzLiBXaGF0IGRvbmUgaXMgZG9uZSBzbyB0aGVyZSBubyByZWFzb24gdG8gYmVyYXRlIGhlciBvciBtYWtlIGhlciBmZWVsIHdvcnNlIGJ1dCBkZWZpbml0ZWx5IG1ha2Ugc3VyZSBzaGUgdW5kZXJzdGFuZHMgd2hhdCBoYXBwZW5lZCBhbmQgdGFrZXMgdGhlIHN0ZXBzIHRvIG5vdCBkbyBpdCBhZ2Fpbi4KSXQgaXMgdHJ1bHkgYW1hemluZy4iLiAKRXNwZWNpYWxseSBzaW5jZSBQYWxpbiBGYWNlYm9vayBmcmllbmRzIGRvIHRoaW5ncyBsaWtlIGNlbGVicmF0ZSBUZWQgS2VubmVkeSBkZWF0aC4gCkZvciBhIGxvbmcgdGltZSwgSSBteXNlbGYgaGVsZCBuZWdhdGl2ZSBwZXJjZXB0aW9ucyBvZiBteSBwZW9wbGUgYW5kIHRob3VnaHQgSSBoYWQgYSBncmVhdCBXZXN0ZXJuIGVkdWNhdGlvbjsgSSBsZWFybmVkIGFib3V0IEVsaXphYmV0aCBJIGFuZCBhYm91dCB0aGUgd29uZGVyZnVsIHNldHRsZXJzIHdobyBjb2xvbmlzZWQgTmV3IFplYWxhbmQuIEkgaGFkIGludGVuZGVkIHRvIGdvIHRvIHVuaXZlcnNpdHksIGJ1dCBJIGhhZCBhIGJhYnkgaW5zdGVhZC4gSXQgd2FzIHdoZW4gSSB0b29rIG15IHNvbiB0byBraGFuZ2EgcmVvIHRoYXQgSSB3YXMgZXhwb3NlZCB0byBhIE1vcmkgd29ybGQgdmlldy4gClRoaXMgaXMgYXdmdWwgYW5kIHdlIHdlcmUgaG9ycmlmaWVkIGJ1dCB0aGVuIHNoZSBzYWlkICJJIGJsYW1lIG15IGludGVyZXN0IGluIHNleCBhbGwgb24gdGhlIGZhY3QgdGhhdCBJIHdhcyB1cCB0b28geW91bmcuIiBPTUZHLCB3ZSBsYXVnaGVkIHRpbGwgd2UgY3JpZWQgYW5kIGV2ZW4gcGVlZCBhIGxpdHRsZSBiaXQuLiAKMSkgSW52YXNpb25zIG5lZWQgYSBsb25nZXIgY29vbGRvd24uIFRoZSBhbW91bnQgb2YgdGltZSBpdCB0YWtlcyB0byB0YWtlIGRvd24gYWxsIDMgZW52b3lzIChlc3BlY2lhbGx5IGJlY2F1c2UgdGhlIHRoaXJkIG9uZSBkb2VzbiBzcGF3biB1bnRpbCB0aGUgZmlyc3QgMiBhcmUga2lsbGVkKSBpcyBqdXN0IGFib3V0IHRoZSBzYW1lIGFtb3VudCBvZiB0aW1lIHVudGlsIHRoZSBpbnZhc2lvbiBwb3J0YWwgb3BlbnMgYmFjayB1cC4gCkdheSBwZW9wbGUganVzdCB3YW50IHRvIGxpdmUgdGhlaXIgbGl2ZXMgdW5tb2xlc3RlZC4gU3RvcCBkaXNjcmltaW5hdGluZyBhZ2FpbnN0IHRoZW0uIFRoZXkgcmVndWxhciBwZW9wbGUganVzdCBsaWtlIHlvdSBhbmQgbWUuIExpdmUgYW5kIGxldCBsaXZlLiBZb3Ugd29uIGV2ZW4gbm90aWNlLgpXaHkgZG8geW91IHdhbnQgdG8gdXNlIEdUTz8gVXN1YWxseSB5b3VyIGdvYWwgaW4gb25saW5lIHBva2VyIHNob3VsZCBiZSBtYXggRVYgYnkgcHVuaXNoaW5nIHlvdXIgb3Bwb25lbnRzIGxlYWtzLiBHVE8gYXNzdW1lcyB5b3VyIG9wcG9uZW50cyBhcmUgcGxheWluZyBvcHRpbWFsICh3aGljaCB0aGV5IHVzdWFsbHkgZG9uIGRvKS4gQmVzaWRlcyB0aGF0LCBHVE8gaXMgcmF0aGVyIGRpZmZpY3VsdCBhbmQgY29tcGxleCBpbiBtdWx0aWhhbmRlZCBwb3RzLgpBIGdvb2QgcG9rZXIgcHJvdGVjdG9yIHNhdmVzIHlvdXIgY2FyZHMgZnJvbSBhbnkga2luZCBvZiBkYW1hZ2VzLiBFdmVuIGlmIHlvdSBhcmUgdHJ5aW5nIHRvIGJlbmQgeW91ciBjYXJkcyB1bm1pbmRmdWxseSwgeW91IGNhbiBrZWVwIHNhZmUgd2l0aCBzb21ldGhpbmcgZGVwZW5kYWJsZSBsaWtlIHRoaXMuLiAKSWYgaXQgaGVscHMgYW55LCBwbGVudHkgb2YgcGVvcGxlIGdvIHRocm91Z2ggdGhlIHNhbWUgdGhpbmcuIEkgd2VudCB0aHJvdWdoIHRoaXMgd2hlbiBhIGJmIGZyb20gbXkgcGFzdCBjaGVhdGVkIG9uIG1lLkhlIGRpZG4gc2VlbSB0byBiZSBhZmZlY3RlZCB3aGVuIHdlIGJyb2tlIHVwLiAKVGhlIGd1eSB3aG8gc2hvdmVkIGhhZCBKSiBmb3IgYSBzZXQgYW5kIGVuZHMgdXAgd2lubmluZyBiZWNhdXNlIG9mIGEgZGVhbGVyIG1pc3Rha2UuIApUaGUgc2Vjb25kIG1pc3Rha2UgeW91IG1hZGUgKGFmdGVyIGludml0aW5nIGEga25vd24gdGhpZWYgdG8geW91ciBnYW1lKSBpcyB0byBub3QgdGFrZSB0aGUgcGFydGlhbCBwYXltZW50IHdoZW4gb2ZmZXJlZC4gQUxXQVlTIHRha2UgdGhlIHBhcnRpYWwgcGF5bWVudCBhbmQgdGhlbiBkZW1hbmQgdGhlIHJlc3QuIApBbHNvLCBob3cgZXhwZXJpZW5jZWQgYXJlIHRoZSBwaHlzaWNpYW5zIGlmIHRoZXkgdHJlYXQgc28gZmV3IHBhdGllbnRzIGZvciBlYWNoIHBhdGhvbG9neT9Ob3QgYSBzdHVkZW50LiAKSW5kaXZpZHVhbHMgd2hvIGV4ZXJjaXNlZCBhdCB0aGlzIGxldmVsIGZvciBtb3JlIHRoYW4gMTUgd2Vla3Mgc2hvd2VkIG5vIHNpZ25pZmljYW50IGJlbmVmaXRzIG92ZXIgdGhvc2Ugd2hvIGV4ZXJjaXNlZCBmb3IgbGVzcyB0aGFuIDE1IHdlZWtzLCBzdWdnZXN0aW5nIHRoYXQgaW1wcm92ZW1lbnRzIGNhbiBiZSBtYWRlIGluIGxlc3MgdGhhbiA0IG1vbnRocyBhbmQgdGhlbiBtYWludGFpbmVkIGFmdGVyIHRoYXQgcG9pbnQuIEEgbmV3IHN0dWR5IG91dCBvZiBDYW5hZGEgc3VnZ2VzdHMgdGhhdCBleGVyY2lzZSBjdXRzIHRoZSByaXNrIG9mIEFsemhlaW1lciBhbmQgbGVzcyBkZXZhc3RhdGluZyBtZW50YWwgbG9zc2VzLCBwYXJ0aWN1bGFybHkgaW4gd29tZW4uClRoaXMgMVdMQSBFbmRvd21lbnQgd2FzIGVzdGFibGlzaGVkIGluIDE5NDMsIGFuZCBpcyBhIHNwZWNpYWwgcHVycG9zZSBmb3VuZGF0aW9uIHRoYXQgcHJvdmlkZXMgZ3JhbnRzIGZvciBJV0xBIGNoYXB0ZXIsIGRpdmlzaW9uIGFuZCBuYXRpb25hbCBsZXZlbCBjb25zZXJ2YXRpb24gcHJvamVjdHMuIFBlcnNvbnMgb3Igb3JnYW5pemF0aW9ucyBtYXkgcmVxdWVzdCBhIGdyYW50IGFwcGxpY2F0aW9uIG9yIG90aGVyIGluZm9ybWF0aW9uIGFib3V0IHRoZSBlbmRvd21lbnQgYnkgY29udGFjdGluZyB0aGUgRW5kb3dtZW50IFByZXNpZGVudCBDaGFybGVzIEVsZHJpZGdlLk9yYWNsZSBDb29wZXIgd2FzIGFsc28gc3VycHJpc2VkIHRvIHJlY2VpdmUgYSBjZXJ0aWZpY2F0ZSBmcm9tIEFtZXJpY2EncyBGcmF0ZXJuYWwgQmVuZWZpdHMgU29jaWV0eSwgcmVjb2duaXppbmcgaGVyIGZvciBoZXIgZ29vZCB3b3JrcyBwZXJmb3JtZWQgaW4gdGhlIG5hbWUgb2YgQW1lcmljYSdzIEZyYXRlcm5hbCBCZW5lZml0IFNvY2lldGllcy4gClNvIGtub3cgSSBrbm93IGFzIG11Y2ggR2VybWFuIGFzIG15IGRvZywgdGhvdWdoIEkgc3VyZSB3ZSBidXRjaGVyIGl0LiBXZSB0YXVnaHQ6IHNpdHosIHBsYXR6LCBibGVpYiwgaGllciwgc3RlaCwgZnVzcywgYXVzLiBXZSBzaG91bGQgaGF2ZSBiZWVuIGJldHRlciBhYm91dCB1c2luZyBuZWluIGZvIG5vLCBhcyB3ZSBhYm91dCB0byBoYXZlIGEgYmFieSBhbmQgaXQgd291bGQgYmUgbmljZSB0byBzcGVhayBzZXBhcmF0ZWx5IHRvIHRoZSBkb2cgYW5kIHRoZSBiYWJ5LiAKVGhleSB1c2VkIGEgbWV0aG9kIG9mIGNoZW1pY2FsIGFuYWx5c2lzIGNhbGxlZCBsaXF1aWQgY2hyb21hdG9ncmFwaHkgbWFzcyBzcGVjdHJvbWV0cnkgZm9yIHRoZSBicmVhdGggYW5kIGJsb29kIHBsYXNtYSB0ZXN0cy4gCkJsYXRpbmVlIDE6MzAgcC4gCkNvcmdpcyByYXJlbHkgc2hvdyB1cCBpbiBzaGVsdGVycywgYW5kIHdoZW4gdGhleSBkbywgdGhlIHN0YWZmIHdpbGwgdXN1YWxseSB0cnkgdG8gZ2l2ZSB0aGVtIHRvIGEgY29yZ2kgcmVzY3VlIG9yIGFuIGV4cGVyaWVuY2VkIGNvcmdpIG93bmVyLiBTbywgaXQncyBiZXN0IHRvIHJlYWNoIG91dCB0byBjb3JnaSByZXNjdWVzIGluIHlvdXIgYXJlYSBhbmQgZ2V0IG9uIHRoZWlyIHdhaXRpbmcgbGlzdC4gU29tZSByZXNjdWVzIGdvIG91dCB0byBwdXBweSBtaWxscyBhbmQgdGFsayB0aGUgb3duZXJzIGludG8gc3VycmVuZGVyaW5nIHRoZWlyIGNvcmdpcyBhbmQgd2hhdGV2ZXIgbGl0dGVyIHRoZXkgbWF5IGhhdmUuIApJcyB0aGlzIHNvbWUgc29ydCBvZiBoaWdoIHN0YWtlcyBnYW1ibGluZyBkZW4/CldoZXRoZXIgd2UgbGlrZSBpdCBvciBub3QsIGFuZCBldmVuIGlmIGl0IGFsbCBCUywgSXZhbmthIGlzIGEgd2hpdGUgaG91c2UgYWR2aXNvciBhbmQgc2hlIGlzIHRha2luZyBvbiB0aGlzIHByb2plY3QuIApDJ2VzdCBsJ3BvcGUgZGUgY2VzIG1vdHMgcXVlIG5vdXMgdm91cyByYWNvbnRvbnMgZGFucyBjZSBsaXZyZS4KMyBURHMgbGVhZCBTdGFuZm9yZCBwYXN0IE5vCkEgY2hhbGxlbmdlIGNvaW4gaXMgYSBzbWFsbCBjb2luIG9yIG1lZGFsbGlvbiAodXN1YWxseSBtaWxpdGFyeSksIGJlYXJpbmcgYW4gb3JnYW5pemF0aW9uJ3MgaW5zaWduaWEgb3IgZW1ibGVtIGFuZCBjYXJyaWVkIGJ5IHRoZSBvcmdhbml6YXRpb24ncyBtZW1iZXJzLiBUcmFkaXRpb25hbGx5LCB0aGV5IGFyZSBnaXZlbiB0byBwcm92ZSBtZW1iZXJzaGlwIHdoZW4gY2hhbGxlbmdlZCBhbmQgdG8gZW5oYW5jZSBtb3JhbGUuIEluIGFkZGl0aW9uLCB0aGV5IGFyZSBhbHNvIGNvbGxlY3RlZCBieSBzZXJ2aWNlIG1lbWJlcnMuIApUaGUgZGVudGFsIGVuYW1lbCBvZiBldmVyeW9uZSB3aG8gbGl2ZWQgdGhyb3VnaCAob3Igd2VyZSBib3JuIGR1cmluZykgdGhlIENvbGQgV2FyIGNhcnJpZXMgdHJhY2VzIG9mIGNhcmJvbiAxNCwgbWFraW5nIHRoZWlyIG1vdXRocyBhIHRpbnkgYml0IHJhZGlvYWN0aXZlLiBUaGlzIG1ha2VzIHJhZGlvY2FyYm9uIGRhdGluZyBhbiBlZmZlY3RpdmUgdG9vbCBpbiBkZXRlcm1pbmluZyB0aGUgdGltZSBvZiBkZWF0aCBhbmQgYWdlIG9mIHZpY3RpbXMgaW4gZm9yZW5zaWMgY2FzZXMgd2hlcmUgdGVldGggYXJlIGF2YWlsYWJsZS4gTGl0ZXJhbGx5IGFsbCB0aGUgc2NpZW50aXN0cyBuZWVkIHRvIGRvIGlzIGNvbXBhcmUgdGhlIGNhcmJvbiAxNCByZWNvcmRzIHRvIGhvdyBtdWNoIG9mIHRoZSBzdHVmZiB0aGUgdmljdGltIGhhcyBvbiBoaXMgdGVldGgsIGFuZCB0aGV5IGNhbiBkZXRlcm1pbmUgYSBiaXJ0aCBkYXRlIHdpdGhpbiBhIGZldyB5ZWFycy4iSGUgd2FzIGJvcm4gMzEgeWVhcnMgYWdvLiBBbmQgaGlzIHRlZXRoIHdlcmUgbGFzdCBmbG9zc2VkIC4gMjkgeWVhcnMgYWdvLiIKVGhlcmUgYXJlIGRpZmZlcmVudCB0eXBlcyBvZiBjYXJkIHByb3RlY3RvcnMgYXZhaWxhYmxlIG9ubGluZS4gCkhvZ2cgZGVjbGluZWQgdG8gYWNjZXB0IGhlciBhcG9sb2d5LCBzYXlpbmcgaGVyIG1lYSBjdWxwYSBjYW1lIG9ubHkgImFmdGVyIGEgdGhpcmQgb2YgaGVyIGFkdmVydGlzZXJzIHB1bGxlZCBvdXQuIiBDTk4gaGFzIHNpbmNlIGxlYXJuZWQgdGhhdCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBJcnZpbmUsIGhhcyBhY2NlcHRlZCB0aGUgaGlnaCBzY2hvb2wgc2VuaW9yLCB3aG8gd2lsbCB0YWtlIGEgeWVhciBvZmYgYmVmb3JlIGNvbGxlZ2UgdG8gcHVyc3VlIHBvbGl0aWNhbCBjYXVzZXMuCkJlcmJpY2sgdHJpZXMgdG8gZ2V0IHVwLCBoZSBoYXMgdGhlIGhlYXJ0IGJ1dCBoaXMgYm9keSBkb2VzbiBsZXQgaGltLCB0aGVyZSBpcyBubyBkb3VidCBoaXMgZXF1aWxpYnJpdW0gaXMgc2NyYW1ibGVkIGFzIGhlIHJvc2Ugb25seSB0byBmYWxsIGFnYWluIGFuZCB0aGUgcmVmZXJlZSBjb3VudHMgQmVyYmljayBvdXQuCkFsc28gbG9vayBhdCB0aGUgRkRBIGFwcHJvdmVkIGRydWcgbG9yY2FzZXJpbiwgd2hpY2ggaXMgYSBwc3ljaGVkZWxpYyBhY3Rpbmcgb24gdGhlIEhUMmMgcmVjZXB0b3JzLCB0aGUgb25lcyBpbiBxdWVzdGlvbiBmb3IgY2F1c2luZyBoZWFydCBwcm9ibGVtcy4gQXMgbG9uZyBhcyB0aGUgcGF0aWVudHMgdGFrZSB0aGUgbWVkaWNpbmFsbHkgYWN0aXZlIGFtb3VudCBmYXIgYmVsb3cgdGhyZWFzaG9sZCBDTlMgZWZmZWN0cywgdGhlcmUgbm90aGluZyAicHN5Y2hlZGVsaWMiIGFib3V0IGl0IHVubGVzcyB5b3UgIk9EIiBpbiB3aGljaCBjYXNlIHlvdSBoYXZlIGFuIHVuY29tZm9ydGFibGUgdHJpcC4uIApTcXVhZCBlbnRlcmVkIHRoZSBPbHltcGljcyByYW5rZWQgbmludGggaW4gdGhlIHdvcmxkIGFuZCBkZWZlYXRlZCBTZXJiaWEgaW4gdGhlIHNlbWlmaW5hbHMgYmVmb3JlIGZhbGxpbmcgdG8gSHVuZ2FyeSBpbiB0aGUgZ29sZCBtZWRhbCBnYW1lLkRyLiBTY2hyb2VkZXIncyBwbGF5ZXJzIHJlY2VpdmUgcmVndWxhciBjaGlyb3ByYWN0aWMgY2FyZSB0byBpbXByb3ZlIHRoZWlyIGxvbmcgdGVybSBoZWFsdGggYW5kIGFsc28gdG8gbWF4aW1pemUgdGhlaXIgcGVyZm9ybWFuY2UgYXQgdGhlIE9seW1waWMgR2FtZXMuIE1lbiB0YWtlIG9uIE1vbnRlbmVncm8uIApKdXN0IDIwLCBzaGUgd3JvdGUgaGl0cyBmb3IgdGhlIFB1c3N5Y2F0IERvbGxzLCBCcml0bmV5IFNwZWFycyBhbmQgTmV3IEtpZHMgT24gVGhlIEJsb2NrLkJ1dCBpdCB3YXMgd2hpbGUgd29ya2luZyB3aXRoIHByb2R1Y2VyIFJvYiBGdXNhcmkgdGhhdCBzaGUgZ290IGhlciBhdHRlbnRpb24gZ3JhYmJpbmcgc3RhZ2UgbmFtZS4gCkFzbG5kYSBiaXIgb2sga2lpIHRhcmFmbmRhbiBzZXZpbGl5b3IgaGVtIEVraSBoZW0gZGUgci9UdXJrZXkuIEFtYSBoZW0gRWtpIGhlbSBkZSByL1R1cmtleSB6YW1hbiB6YW1hbiBiaXIgbmV2aSBhbGFtYSBkdXZhcm5hIGV2cmlsaXlvciB2ZSBrYXJhbXNhcmxrIHlheXlvci4gCiJNb20sIEkgdG9sZCB5b3UgdGhpcyB3YXMgbm90IHlvdXIgYW5ub3VuY2VtZW50IHRvIG1ha2UsIGFuZCB5b3UgZGlzcmVnYXJkZWQgbXkgY2xlYXJseSBsYWlkIGJvdW5kYXJ5IGFueXdheS4gWW91IHdpbGwgbm8gbG9uZ2VyIGhhdmUgdGhlIHByaXZpbGVnZSBvZiBrbm93aW5nIGFueXRoaW5nIGFib3V0IHRoaXMgcHJlZ25hbmN5LCBvciBhYm91dCBtZSBvciBteSBmYW1pbHksIHVudGlsIEkgYW0gY2VydGFpbiBpdCBpcyBzb21ldGhpbmcgSSdtIHJlYWR5IGZvciB5b3UgdG8gYmxhYiBhYm91dC4KQW50b25pbyBELiAKUGFydGljaXBhbnRzIGluIHRoZSBFbGV2YXRvciBTcGVlY2ggQ29udGVzdDpLeWxlIExlaXN0ZXIsIERhaXNleSBWZWdhLCAsIExheXRvbiBSZWVzb3IgYW5kIE5pc2hhbnQgUmFvV2lubmVyczogTmlzaGFudCBSYW8gYW5kIEt5bGUgTGVpc3RlcihzY3JvbGwgZG93biBmb3IgbW9yZSBpbWFnZXMpCkFsc28sIGxvbmcgdXB0aW1lIGlzIHJldGFyZGVkLCBmb3Igc2ltaWxhciByZWFzb25zLiBJRiB5b3UgaGF2ZSBhIHNlcnZlciB3aXRoIGEgdmVyeSBsb25nIHVwdGltZSwgcmVib290IHRoYXQgdGhpbmcgdG8gZXhwb3NlIHByb2JsZW1zLCBhdCBsZWFzdCBvbmNlIGEgbW9udGguCiJJIHRoaW5rIDMgMiBpcyBhIHByZXR0eSB0cnVlIHJlZmxlY3Rpb24gb2YgYm90aCBzaWRlcywiIFdhcm5lIHRvbGQgQ3JpY2luZm8uICJJIGRvbid0IHRoaW5rIHRoYXQgZWl0aGVyIHRlYW0sIEVuZ2xhbmQgb3IgQXVzdHJhbGlhLCBpcyBkb21pbmFudCByaWdodCBub3cuIApFcyBnaWJ0IHNwZXppZmlzY2hlIEZlcnRpZ2tlaXRlbiB1bmQgRWlnZW5zY2hhZnRlbiwgZGllIGR1IGVudHdpY2tlbG4gbXVzc3QsIHVtIGVpbiBncm9hcnRpZ2VyIFBva2VyIEdlYmVyIHp1IHdlcmRlbi4gRGllc2UgZ2VsdGVuLCBvYiBkdSBudW4gZWluZSBQb2tlcm5hY2h0IG1pdCBGcmV1bmRlbiB2ZXJhbnN0YWx0ZXN0LCBvZGVyIHZlcnN1Y2hzdCwgZWluIHByb2Zlc3Npb25lbGxlciBQb2tlciBHZWJlciB6dSB3ZXJkZW4uIApOb25lIG9mIHRoZSBvdGhlciBncm91cHMgaGF2ZSBiZWVuIGJyYXZlIGVub3VnaCB0byBpbnZlc3QgdGhlaXIgbGlmZSdzIHNhdmluZ3MgYW5kIG9wZW4gdGhlaXIgb3duIHJldHJlYXQgZXhjbHVzaXZlbHkgZm9yIHRoZWlyIHdvcmtzaG9wcyBhbmQgZm9yIG1lbiBvbmx5ICAgYW5kIGFsbCBzZWUgaXQgYXMgYSB3YXkgb2YgbWFraW5nIGEgbGl2aW5nIHdoaWxlIG1lZXRpbmcgYSBsb3Qgb2YgcGVvcGxlIHdobyByZXZlcmUgdGhlbSBhbmQgcHV0IHRoZW0gb24gYSBwZWRlc3RhbCB3aGlsZSAgIGFjdHVhbGx5ICAgbGVhcm5pbmcgZnJvbSBzb21lb25lIHdobyBoYXMgbGl0dGxlIGlkZWEgb2Ygd2hhdCBpdCBpcyB0aGV5IGFyZSB0ZWFjaGluZy4KTGVhcm4gdGhlIG5hbWVzIG9mIGFsbCB0aGUgdGlsZXMuIEV2ZXJ5IHRpbGUgaW4gcGFpIGdvdyBoYXMgYSBuYW1lLCBhbmQgaXQgc2hhcmVzIHRoYXQgbmFtZSB3aXRoIHRoZSBvdGhlciB0aWxlIGluIGl0cyBwYWlyLiAKT25jZSBjbG9ja2VkIGluIHRoZSBmbG9ja3Mgb2YgUmFpbnlzIHdpbGwgd2FsayBiZXR3ZWVuIEZhbWlseSBNYXJ0cywgaWRsZSBpbiBtb3ZlbWVudCwgaW4gbGFyZ2UgcGFja3MgdGhhdCBhcmUgaW1wYXNzYWJsZS4gClNlYXR0bGUncyBvZmZlbnNpdmUgbGluZSBhbmQgcnVubmluZyBnYW1lIHN0aWxsIHByZXNlbnQgcXVlc3Rpb25zLCBhbmQgcXVhcnRlcmJhY2sgUnVzc2VsbCBXaWxzb24gaGFzIHRvIGNhcnJ5IHRoZSBvZmZlbnNlIGFnYWluIHdpdGggcmVtaXhlZCB3ZWFwb25zLiBUaGUgZGVmZW5zZSB3aWxsIHNlZSBhIGRyb3Agb2ZmLCBidXQgaXQncyBub3QgYXMgZG9vbWVkIHdpdGhvdXQgdGhlIEJvb20gYXMgbWFueSBtaWdodCB0aGluay4gVGhlIFNlYWhhd2tzIHdpbGwgc3RheSBhcm91bmQgbGFzdCBzZWFzb24ncyBhaXJzcGFjZS4KRG8gc29tZSByZXNlYXJjaCBiZWZvcmUgd2Ugc3RhcnQgc3VwcG9ydGluZyBmYWxzZSBpbmZvcm1hdGlvbiBqdXN0IGJlY2F1c2Ugc29tZW9uZSBzcGF0IGl0IGludG8gVHJ1bXAncyBmYWNlLi4gCkdlbmVyaWNfMDA3ICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpEZSBrbGVkZXJkcmFjaHRlbiwgZW4gZGUgbGFuZGJvdXcsIHZhbiBkZSB2ZXJzY2hpbGxlbmRlIHNvdmpldCBzdGF0ZW4gdmVyYmVlbGRlbikgcGFzIGRpdCBlbiB2b3JpZyBqYWFyIGdlcmVub3ZlZXJkLiAKVGhlIHZpZGVvIHNob3dzIHRoYXQgbm90IHRoZSBjYXNlLiBUaGUgc3lzdGVtcyBmYWN0b3J5IGZpbmlzaCBpcyBzdWJvcHRpbWFsLCB0aGF0IGRvZXMgbm90IG1lYW4gdGhlIHN5c3RlbSBpbmNvbnNpc3RlbnQuIElmIHRpbWUgd2FzIGluaGVyZW50IGluY29uc2lzdGVudCwgeW91IHdvdWxkbiBzZWUgKy8gMyBvdmVyIHRoZSBDaHJvbm8uIApQZW9wbGUgc2hvdXRlZCBjaGVlc2UgYXMgdGhleSBwb3NlZCBmb3IgcGhvdG9zLCBhbmQgYW4gZWxlbWVudGFyeSBzY2hvb2wgYWdlIGNoaWxkIHdhcyBvdmVyaGVhcmQgdGVsbGluZyBoaXMgbW9tLCBJIHdlcmUgeW91LCBJIHdvdWxkbiB3YWxrIG92ZXIgdG8gdGhlIGRheSBzcGEsIHlvdSBrbm93IHdoYXQgYmVlbiBnb2luZyBvbiBpbiB0aGUgbmV3cy4gCklmIGhlIGlzIGEgcGlsb3QgKHdoaWNoIGlzIHNvbWV0aGluZyB0aGF0IGlzIHN1c3BlY3QpIHRob3NlIHJhdGluZ3MgbWVhbiBoZSBjYW4gZmx5IGEgc2luZ2xlIGVuZ2luZSBDZXNzbmEgKG9yIHNpbWlsYXIpIHdpdGggbGFuZGluZyBnZWFyIHRoYXQgZm9sZHMgaW50byB0aGUgYmVsbHkuIEFsbCBpbiBhbGwgaXQgd291bGQgcmVxdWlyZSBhIG1pbmltdW0gb2YgNDAgaG91cnMgb2YgZmxpZ2h0IHRpbWUgdG8gYWNoaWV2ZSB0aGVzZSByYXRpbmdzIGF0IGFueSBzbWFsbCBhaXJwb3J0IHdpdGggYW4gYWlyY3JhZnQgZm9yIHJlbnQuIApVc2UgYSBzb2Z0IHdhc2hjbG90aCBzdGFydGluZyB3aXRoIHRoZSBmYWNlLCBtb3ZpbmcgZG93biB5b3VyIGJhYnkncyBib2R5LiBTYXZlIGNsZWFuaW5nIHRoZSBib3R0b20gZm9yIGxhc3QuIApXaGVuIEkgc2F3IGhpbSBnbyBvdXQgYW5kIGJlYXQgYSBkb21pbmFudCBBbGFiYW1hIHRlYW0gaW4gZnJvbnQgb2YgYSBzdGFkaXVtIG9mIG5lYXJseSAxMDAsMDAwIGFuZCBtaWxsaW9ucyBvZiBUViB2aWV3ZXJzLCB0aGF0IGEgZ3V5IHRoYXQgaGFzICJpdCIgaW4gc3BhZGVzLiBJIGZ1bGx5IGV4cGVjdGVkIGhpbSB0byBnbyBidXJuIGl0IGRvd24gaW4gdGhlIE5GTCwgd2hpY2ggaGUgZGlkIHVudGlsIGhlIGdvdCBodXJ0LlRyYWUgaXMgb25lIG9mIHRoZSBiZXN0IGJhc2tldGJhbGwgZXhhbXBsZXMgaW4gcmVjZW50IG1lbW9yeS4gSGUgMTAwJSBjYXJyaWVkIHRoYXQgT2tsYWhvbWEgdGVhbS4gCldoYXRzb2V2ZXIuIEhlIHdhcyBiZWF0ZW4gZnJvbSB0aGUgdGltZSBoZSBjb3VsZCBzcGVhayBhbmQgZm9yY2VkIHRvIHRvdXIgdGhlIHdvcmxkIGF0IGFnZSA2LiAKQnV0IHRoZXJlIGFyZSBpbXBvcnRhbnQgZGlzdGluY3Rpb25zIHRoZSBzdGF0ZSBkcmF3cyBiZXR3ZWVuIHBpbXBzLCBwYXRyb25zLCBhbmQgcHJvdmlkZXJzLCBhcyB3ZWxsIGFzIGJldHdlZW4gbWlub3JzIGFuZCBhZHVsdHMuIFRoZSBwb2xpY2UgY291bGQgY29tZSBhbmQgYXJyZXN0IEplc3MgaW4gaGVyIHN0dWRpbywgYnV0IGFzIGxvbmcgYXMgc2hlIGlzIG5vdCBlbmdhZ2luZyBpbiBzZXggZm9yIG1vbmV5IGluIHB1YmxpYywgYW5kIGFzIGxvbmcgYXMgdGhlcmUgaXMgbm8gInRoaXJkIHBhcnR5IiBvciBwaW1wIGludm9sdmVkLCB0aGUgY2hhbmNlcyBvZiB0aGF0IGhhcHBlbmluZyBhcmUgc2xpbSB0byBub25lLgpHZXQgYnkgd2l0aCA2MG0gZG91YmxlIHJvcGVzIGFuZCBhIHNpbmdsZSByYWNrLCBhbmQgdXN1YWxseSB0aGUgcm9wZXMgYXJlIHRvbyBsb25nIGJ1dCBpdCBtYWtlcyBhYnNlaWxpbmcgbXVjaCBlYXNpZXIuIEFueXRoaW5nIGluIFNub3dkb25pYSB5b3UgZWl0aGVyIHdhbm5hIGFycml2ZSBsYXRlIGFuZCBzbGVlcCBpbiB5b3VyIGNhciwgaG9zdGVsIGl0IG9yIGFycml2ZSBhdCB0aGUgYXNzY3JhY2sgb2YgZGF3biBiZWNhdXNlIGdvb2Qgd2VhdGhlciBkYXlzIGFuZCBldmVyeSBoaWxsIHdhbGtlciBpcyBob2dnaW5nIHRoZSBwYXJraW5nLiBCZSBsYXRlIGFuZCBhZGQgYW4gaG91ciBvZiByb2FkIHdhbGsgdG8geW91ciBhcHByb2FjaCwgbG9sLgpQbGVhc2UgZG9uJ3QgZ2V0IGl0IHdyb25nLiBUaGUgcmVtYWluaW5nIG1vZHMgd2VyZSBhYnNvbHV0ZWx5IGFwcGFsbGVkIGF0IHRoZSBidWxsc2hpdCBidXQgZHVlIHRvIGhvdyBSZWRkaXQgc2V0cyBpdHMgaGllcmFyY2h5IHRoZXJlIHdhcyBub3RoaW5nIHdlIGNvdWxkIGRvIGJ1dCBiaXRjaCBhbmQgcHJvdGVzdC4gCkJ1dCB0aGUgbWFuIGRvZXMgbm90IHNlZW0gY2FwYWJsZSBvZiBjYXJyeWluZyBvdXQgaGlzIG93biBpbml0aWF0aXZlIGFuZCBrZWVwcyBzdXJyb3VuZGluZyBoaW1zZWxmIHdpdGggcGVvcGxlIHdobyBhcmUgcHJhY3RpY2FsbHkgb3Blbmx5IHNhYm90YWdpbmcgbmVnb3RpYXRpb25zLiAKRGFucyBsZSAxOGUKKEE4IGlzIHBvc3NpYmxlIGlmIGl0IHN1aXRlZCwgb3Igb2Zmc3VpdCBpZiB0aGUgZmllbGQgaXMgdGVycmlibGUgYmVjYXVzZSB0aGlzIGlzIHNvbWUga2luZCBvZiB1bml2ZXJzaXR5IGNsdWIgdG91cm5hbWVudCBvciBzb21ldGhpbmcsIGJ1dCBtdWNoIG1vcmUgbGlrZWx5IGFyZSA3OCBhbmQgODksIG5vdCBLOCBhbmQgdGhlIGxpa2UpLlR1cm4gc3Vja3MgYW5kIG1ha2VzIHRoaW5ncyByZWFsbHkgdW5jb21mb3J0YWJsZSBmb3Igb3ZlcnBhaXJzIGFuZCBzZXRzLiBZb3Ugbm93IGJldCAxMTAwMCBpbnRvIGEgcG90IG9mIDE4MDAwLiAKSSB3YXMgYWxvbmUgYW5kIGFzbGVlcCBpbiBteSBhcGFydG1lbnQsIHdoaWNoIEkgc2hhcmVkIHdpdGggbXkgYm95ZnJpZW5kIGFuZCBvbmUgb3RoZXIgbWFsZSByb29tbWF0ZS4gVGhyZWUgbWVuIGtpY2tlZCBpbiB0aGUgZnJvbnQgZG9vciAobm90IHRoYXQgdGhleSBoYWQgdG8sIGR1bWJhc3MgYm95ZnJpZW5kIGhhZCBsZWZ0IGl0IHVubG9ja2VkIHRvIHZpc2l0IGEgbmVpZ2hib3IpLiBPbmUgaGVsZCB0aGUgZ3VuIG9uIG1lIHRvIGtlZXAgbWUgY29tcGxpYW50IHdoaWxlIGFub3RoZXIgdGllZCBhbmQgZ2FnZ2VkIG1lLiAKVGhlIGltcG9ydGFuY2Ugb2YgbmF0dXJhbCBwbGFudCBwcm9kdWN0cyBmb3IgY29nbml0aW9uIGhhcyBiZWVuIHVuZGVyZXN0aW1hdGVkLCBpbiBwYXJ0IGJlY2F1c2UgdGhlIGFjdGl2ZSBpbmdyZWRpZW50KHMpIGluIHRoZSBwbGFudCBleHRyYWN0cyByZW1haW5lZCB1bmtub3duLCBsaW1pdGluZyBkYXRhIGludGVycHJldGF0aW9uLiBJbiB0aGUgbWFqb3JpdHkgb2Ygc3R1ZGllcyB0aGUgY29tcG91bmRzIHVuZGVyIGludmVzdGlnYXRpb24gYXJlIGEgbWl4dHVyZSBvZiBpbmdyZWRpZW50cyBpbiB3aGljaCB0aGUgbW9zdCBwb3RlbnQgZmFjdG9yIGlzIGxpa2VseSB0byBiZSBkaWx1dGVkLiBJbmRlZWQsIGFuaW1hbCBzdHVkaWVzIHdlcmUgb2Z0ZW4gcGVyZm9ybWVkIGluIGFnZWQgcm9kZW50cyBvciB0cmFuc2dlbmljIG1vdXNlIG1vZGVscyBmb3IgbmV1cm9kZWdlbmVyYXRpdmUgZGlzZWFzZSBbNDNdIGJlY2F1c2UgY29tcG91bmRzIGhhZCBtaW5pbWFsIGVmZmVjdHMgaW4gbm9ybWFsIHlvdW5nIHN1YmplY3RzIFs0NF0uIEhvd2V2ZXIsIGl0IHNlZW1zIHRoYXQgcGxhbnQgcG9seXBoZW5vbHMsIHdoaWNoIGFyZSB0aGUgcHJpbmNpcGFsIHNvdXJjZXMgb2YgZmxhdmFub2xzLCBhIHN1YmNsYXNzIG9mIHBoeXRvY2hlbWljYWxzIGtub3duIGFzIGZsYXZvbm9pZHMsIG1pZ2h0IG1lZGlhdGUgdGhlIG9ic2VydmVkIGNvZ25pdGl2ZSBlZmZlY3RzIFs0Ml0uIEluIGNlbGwgY3VsdHVyZSwgZmxhdmFub2xzIGhhdmUgZXVyb3Byb3RlY3RpdmUsIGFudGlveGlkYW50IGFuZCBhbnRpYXBvcHRvdGljIHByb3BlcnRpZXMgWzQ1XS4gSW4gdml2bywgaW5kaXZpZHVhbCBmbGF2YW5vbHMgY2FuIGVuaGFuY2Ugc3luYXB0aWMgcGxhc3RpY2l0eSBhbmQgbGVhcm5pbmcgWzEyLDQ2XS4gVGhlIGZsYXZhbm9sICghKWVwaWNhdGVjaGluIGlzIG9mIHBhcnRpY3VsYXIgaW50ZXJlc3QgYmVjYXVzZSB0aGlzIGNvbXBvdW5kIGNyb3NzZXMgdGhlIGJsb29kIGJyYWluIGJhcnJpZXIgYWZ0ZXIgaW5nZXN0aW9uIGluIGZvb2Qgb3IgZHJpbmsgWzEyLDQyXS4gQ29uc3VtcHRpb24gb2YgdGhpcyBmbGF2YW5vbCBpbXByb3ZlZCByZXRlbnRpb24gb2Ygc3BhdGlhbCBtZW1vcnkgaW4gdGhlIHdhdGVyIG1hemUsIHdoZXJlYXMgdGhlIGFwcHJvdmVkIEFEIGRydWcgbWVtYW50aW5lIGRpZCBub3QgWzEyXS4KTW9zdCBvZiB0aGUgdGhlbWVzIGFyZSB0cmFkaXRpb25hbCwgYXMgeW91IGNhbiB0ZWxsIGJ5IHRpdGxlcyBsaWtlICJBY3Jvc3MgdGhlIEFsbGVnaGVuaWVzLCIgIkRlYXIgSm9obiwiIGFuZCAiR2V0IE1lIG91dCBvZiBUZXhhcy4iIFRoZSBseXJpY3MgYXJlIGEgYml0IGRlZXBlciwgdGhvdWdoLiAKSWYgV2lsbCBkaWRuIGNoYWxsZW5nZSBoaXMgYnV0YW5lIHJlc3BvbnNlIGF0IHRoZSB0aW1lLCBpdCBzdGFuZHMsIHNvIHBsYXllcnMgY2FuIGJlIGNvbmZpZGVudCBpbiB0aGVpciBzY29yZSBhdCBhbnkgdGltZS4gCk15IG1pbGsgY291bGQgY29hdCBoZXIgc3RvbWFjaCBsaW5pbmcgd2l0aCBwcm90ZWN0aXZlIGFudGlib2RpZXMuIApDdCBkdWNhdGlvbiBuYXRpb25hbGUsIG9uIHRyYXZhaWxsZSBzdXIgbCdhYnNlbnRpc21lIGV0IHN1ciBsZSBkY3JvY2hhZ2Ugc2NvbGFpcmUuIAooUGVyIHF1ZXN0byBtb3Rpdm8sIHNpIGNoaWFtYSBsZXN0YXRlIGRpIFNhbiBNYXJ0aW5vIHF1ZWwgcGVyaW9kbyBhZ2xpIGluaXppIGRpIG5vdmVtYnJlIGluIGN1aSBzcGVzc28gYWNjYWRlIGNoZSBsYSB0ZW1wZXJhdHVyYSBzaSBmYWNjaWEgcGkgbWl0ZSkuIApFdmVuIGEgbWlub3IgZmVtYWxlIGNoYXJhY3RlciBsaWtlIFBpcGVyIHJlYWxseSBzdGFuZHMgb3V0IGFzIG1vcmUgcGh5c2ljYWxseSBjYXBhYmxlIHRoYW4gbW9zdCBIb2xseXdvb2QgdHlwZXMuIApObywgaXQgYWN0dWFsbHkgdGhlIGV4YWN0IG9wcG9zaXRlLiBUaGUgcGFydHkgdGhhdCBpc24gdGhlICJicm9rZSBkaWNrIiB3YW50cyB0aGUgZXNjcm93IHNvIHRoYXQgaGUgZ2V0cyBmcmVlIG1vbmV5IGlmIHRoZSAiYnJva2UgZGljayIgZG9lc24gc2hvdy4gSXQgaW50ZXJlc3RpbmcgaG93IGhhcmQgeW91IGRvZGdpbmcgcHV0dGluZyBhY3R1YWwgbW9uZXkgb24gdGhlIGxpbmUsIGV2ZW4gYSBmcmFjdGlvbiBvZiB3aGF0IHlvdSBwcm9wb3NlZCB0byBjaGFsbGVuZ2UgbWUgd2l0aC4KSWYgeW91IG9wZXJhdGUgeW91ciBGYXV4IENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MgaW4gYSB0cmFkaXRpb25hbCBicmljayBhbmQgbW9ydGFyIGJ1aWxkaW5nLCBpdCBpcyBlc3NlbnRpYWwgdGhhdCB5b3UgdGFrZSB0aGUgcHJvcGVyIHNlY3VyaXR5IG1lYXN1cmVzIHRoYXQgd2lsbCBwcmV2ZW50IGNyaW1pbmFscyBmcm9tIGVudGVyaW5nIHlvdXIgYnVzaW5lc3MgdW5pbnZpdGVkLiAKRnJlZSBPbmxpbmUgU2xvdHMgRm9yIGV2ZXJ5Ym9keSBUbyBQbGF5IE5vIERvd25sb2FkIE5lZWRlZDEgZm9sbG93ZXJJZiB5b3UgYXJlIG5ldmVydGhlbGVzcyB1bnNhdGlzZmllZCB3aXRoIHRoZXNlIGEgZmV3IGFtYXppbmcgc2l0ZXMsIHlvdSBtYXkgYWxzbyBjaGVjayBvdXQgYWxsIHRoZSBiZXN0IElHVCwgTmV0d29yayBFbnRlcnRhaW5tZW50IGFuZCBNaWNyb2dhbWluZyBnYW1lIHN1Y2ggYXMgMTAwLDQwMCBweXJhbWlkIGdhbWUsIHRoZSBmcmVzaCBnaG9zdGJ1c3RlcnMgZ2FtZSBhbmQgbWFueSBtb3JlLiBJR1QgY3JlYXRlcyBhIGh1Z2UgdmFyaWV0eSBvZiBvbmxpbmUgZ2FtZXMgZm9yIGV4YW1wbGUgLCB3ZWxsIGFzIHZpZGVvIHBva2VyLCBlbGVjdHJvbmljIHJhY2luZywgYmluZ28sIGFuZCBodW5kcmVkcyBvZiBzbG90cy4gVmlldyB0aGUgcmVzb3VyY2UgYm94IGJlbG93IHdpdGggcmVnYXJkIHRvIGxpbmtzIHRvIGFsbCB0aGVzZSBraW5kcyBvZiBmYW50YXN0aWMgZnJlZSBzbG90IGdhbWVzIGFuZCBhbGwgdGhlIHlvdSBjYW4gZ2V0IHNsb3RzIGJvbnVzIGRlYWxzIHRoYXQgY2FuCkluIDIwMTMgd2Ugd291bGQgbGlrZSB0byByZXBlYXQgdGhpcy4gClRoYXQgdGhlIEwgeW91IGVhcm5lZC4gCkkgbGlrZSB0aGUgbGlzdCwgYW5kIHNvIEkgc2hhcmUgaXQgaGVyZTouIApCb29rIGNsdWJzLCBQaWxhdGVzLCBzcGluIGNsYXNzLCBib3dsaW5nICAgbG9vayBmb3Igc29tZXRoaW5nIHJlbGF0ZWQgdG8gYSBob2JieSBvciBpbnRlcmVzdCwgYXMgdGhlcmUgYXJlIHBsZW50eSBvZiBvcHRpb25zIG91dCB0aGVyZSEgSGF2ZSBmdW4gc2VhcmNoaW5nIGZvciBzaW5nbGUgQXNpYW5zIGluIHlvdXIgYXJlYSwgYnV0IGFsd2F5cyBwcm9jZWVkIGluIG9ubGluZSBjb25uZWN0aW9ucyB3aXRoIGNhdXRpb24gYW5kIGJlIHNhZmUuIFBlb3BsZSBpbiB0aGlzIGFnZSBncm91cCBhcmUgdHlwaWNhbGx5IGFscmVhZHkgd2l0aCBhIHBhcnRuZXIsIHdpdGggdGhvc2Ugc3RpbGwgZGF0aW5nIHVzdWFsbHkgZG9pbmcgc28gZHVlIHRvIGJlcmVhdmVtZW50LCBkaXZvcmNlLCBvciBzaW1wbHkgbmV2ZXIgZmluZGluZyB0aGUgcmlnaHQgcGVyc29uIHdoZW4gdGhleSB3ZXJlIHlvdW5nZXIuIEl0IHNlZW1zIGxpa2Ugbm8gb25lIGlzIGxvb2tpbmcgZm9yIHRoZSBzYW1lIHRoaW5nIGFzIHlvdT8gSXQgd2FzIHdpZmUgY2hlYXRpbmcgb24gaHVzYmFuZCBzaWducyByZWxlYXNlZCBpbiBBcHJpbCAxOTg1IGFzIHRoZSBzZWNvbmQgc2luZ2xlIGZyb20gdGhlaXIgdGhpcmQgc3R1ZGlvIGFsYnVtLCBIb3cgdG8gQmUgYS4uIApBbmQgTXJzLiAKVGhvdWdoIEkgZG9uIGN1cnJlbnRseSByZXByZXNlbnQgY2xpZW50cyBpbiBjcmltaW5hbCBtYXR0ZXJzLCBJIGNsZXJrIGZvciBhIGp1ZGdlIGluIHRoZSBtYWpvciBjcmltZXMgZGl2aXNpb24gaW4gYSBjZXJ0YWluIGNvdW50eSBpbiBQZW5uc3lsdmFuaWEgKGNvdXJ0IHJ1bGVzIHByZXZlbnQgbWUgZnJvbSByZXByZXNlbnRpbmcgY2xpZW50cyBpbiB0aGUgc2FtZSBqdXJpc2RpY3Rpb24gaW4gd2hpY2ggSSBjbGVyaykuIApFdmVyeW9uZSBvbiBoZXJlIHRoYXQgYXJndWluZyB0aGlzIHRhbGtpbmcgcG9pbnQgLiBBdCBsZWFzdCB0aGF0IEkgc2Vlbi4gCkJ1dCBSZWlkIGhhcyByZWZ1c2VkIHRvIGdpdmUgYW55IGluZm9ybWF0aW9uIGFib3V0IGhpcyBzb3VyY2UgYW5kIGV2ZW4gYWRtaXR0ZWQgaGUgd2FzIG5vdCBjZXJ0YWluIHRoaXMgaW5mb3JtYXRpb24gd2FzIGV2ZW4gdHJ1ZS4gClRoZSBGb3Jlc3RyeSBDb3JwcyB3YXMgY3JlYXRlZCBkdXJpbmcgdGhlIEZpcnN0IFdvcmxkIFdhciB3aGVuIGl0IHdhcyBkaXNjb3ZlcmVkIHRoYXQgaHVnZSBxdWFudGl0aWVzIG9mIHdvb2Qgd2VyZSBuZWVkZWQgZm9yIHVzZSBvbiB0aGUgV2VzdGVybiBGcm9udC4gCkVtcGxveWVlcyBhbHNvIGxhdWQgdGhlIDE2MyBwZXJzb24gZGlnaXRhbCBtYXJrZXRpbmcgc2hvcCwgd2hpY2ggaXMgbW9yZSB0aGFuIGhhbGYgKDUzIHBlcmNlbnQpIHdvbWVuLCBmb3IgaGF2aW5nIGEgImZyaWVuZGx5IGFuZCByZWxheGVkIHdvcmsgZW52aXJvbm1lbnQiIGFuZCBhbiBhcHByb2FjaGFibGUgbGVhZGVyc2hpcCB0ZWFtLiAKSWYgeW91IGdvdCBhICQxMDAwIGJ1ZGdldCBkb24gd2FzdGUgeW91ciB0aW1lIHdpdGggYSBTcXVpZXIsIGF0IGxlYXN0IG5vdCBvbmUgb2YgdGhlIEFmZmluaXR5IG1vZGVscy4gR2V0dGluZyBpbnRvIHRoZSAkNTAwICQ3MDAgcmFuZ2Ugd2lsbCBnZXQgeW91IGEgTE9UIG1vcmUgZ3VpdGFyLiBJIHJlYWxseSB0aGluayB0aGF0IHRoZSByYW5nZSB3aGVyZSB5b3UgZ2V0IHRoZSBtb3N0IGZvciB5b3VyIG1vbmV5LiBHbyBtdWNoIGxvd2VyIGFuZCB5b3UgbWF5IGdldCBzdWJzdGFuZGFyZCBoYXJkd2FyZSBhbmQgcGlja3VwcyBhbmQgbWF5YmUgbWVkaW9jcmUgd29ya21hbnNoaXAuIEdvIG11Y2ggaGlnaGVyIGFuZCB5b3UgcGF5aW5nIGZvciBjb3NtZXRpY3MgYW5kIHByZXN0aWdlIG9yIGluY3JlbWVudGFsIGltcHJvdmVtZW50cy4gVXNlZCBndWl0YXJzIGNhbiBiZSBhIGdyZWF0IGJhcmdhaW4sIHRvbywgcHJvYmFibHkgc2F2aW5nIHlvdSAkMTUwICQyNTAgb3IgbW9yZS4KMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvTWFnaWMgcmVhbGlzbSBub3ZlbHMgYnkgSm9yZ2UgQW1hZHUgKEJyYXppbCkuIApDZXJhbWljIGNoaXBzIGFyZSBnb29kIGZvciBjdXN0b21pc2F0aW9uLiBGb3IgY2xheSBjaGlwcyBJIHdvdWxkIGdvIGZvciBQYXVsc29uIGNoaXBzICAgdGhleSBhcmUgdGhlIGJlc3QuIApDZWx0Z3Jhc3MgaXMgc2hvcnRoYW5kIGZvciB0aGUgbXVzaWMgb2YgV2UgQmFuam8gMywgdHdvIHNldHMgb2YgYnJvdGhlcnMgZnJvbSBHYWx3YXksIElyZWxhbmQuIApOa2V0aWFoLCBJd29iaSBhbmQgTWFpdGxhbmQgTmlsZXMgYXJlIHRoZSBmcm9udCAzLCBhIGxvdCBvZiBwYWNlIG9uIHRoZXNlIGJveXMgd2l0aCBodW5nZXIgdG8gbWF0Y2guIApPbiBub3VzIGpldHRlIGF1eCBhbnRpcG9kZXMgZGUgbCBub3VzIGVuam9pZ25hbnQgZGUgbm91cyByZW5kcmUgZW4gQXNpZS4gU2Vjb25kZSBxdWVzdGlvbiAgZmFpcmUgc2FpZ25lciBsZXMgb3JlaWxsZXMgcG91ciAyMDAwIDogcG91cnF1b2kgZHNhdm91ZXIgdW5lIHBsYW50ZSBsb2NhbGUgZXQgYWJvbmRhbnRlIHBvdXIgbG91ZXIgdW5lIHBsYW50ZSBsb2ludGFpbmUsIHJhcmUgZXQgZG9uYyBjaHJlPyBMZSBnaW5zZW5nLCBhIG5lIHMgcGFzIGF1IG1tZSB0YXJpZiBxdSBrZyBkZSBjYXJvdHRlcywgamUgcHJjaXNlLCBhdSBjYXMgbyBFdCBsZSByYXBwcm9jaGVtZW50IG5lIGxhaXNzZSBwYXMgZGUgc3VycHJlbmRyZSwgbGUgbm9tIGxhdGluIGR1IGdpbnNlbmcsIFBhbmF4IGdpbnNlbmcsIHJhcHBlbGFudCBsZSBwYW5heCBoZXJhY2xldW0gZG9udCBvbiBhZmZ1YmxhaXQgYXV0cmVmb2lzIGxhIGJlcmNlIChzaSwgYmllbiBlbnRlbmR1LCBjIGJpZW4gZCBkb250IGlsIHMgQWluc2ksIGRpc3NpbXVsZXIgbGEgYmVyY2UgZGFucyB1biBudWFnZSBkZSBmdW1lIHBlcm1ldHRyYWl0IGRlIG1pZXV4IHByb21vdXZvaXIgZ2luc2VuZyBldCBjaGluYWNlPyBEIHF1ZSBjZXR0ZSBhcGlhY2UgZXN0IGRvbm5lIGNvbW1lIHVuZSBzeW50aHNlIGRlcyBkZXV4IHBsYW50ZXMgc3VzIG5vbW1lcywgaW1hZ2luZXogdW4gcGV1IGxlIG1hbnF1ZSAgZ2FnbmVyIGRlcyBib25pbWVudGV1cnMgZGUgbGEgcGh5dG90aHJhcGllIHNpIGNlbGEgcGFydmVuYWl0IGF1eCBvcmVpbGxlcyBkdSBncmFuZCBwdWJsaWMgTWFpcyBwb3VyIHMgZGUgbmUgcGFzIHZvaXIgbGEgYmVyY2UgdmVuaXIgcGVydHVyYmVyIGNlIGp1dGV1eCBwZXRpdCBtYXJjaCwgaWwgYSBmYWxsdSBsdWkgZmFpcmUgcG9ydGVyIHVuIGNoYXBlYXUgYmVhdWNvdXAgcGx1cyBsYXJnZSBxdWUgc2EgdmFzdGUgb21iZWxsZS4gCkZ1Y2tpbmcuIFN1Y2tzLiBJIHdvcmsgc28gaGFyZCB0byBub3QgdGhpbmsgb2YgbXlzZWxmIGFzIGEgU2ljayBQZXJzb24sIGFuZCB0b2RheSBJIGhhdmUgdGhyb3duIHVwIHNldmVyYWwgdGltZXMgKGJ1dCBsZXNzIHRoYW4geWVzdGVyZGF5ISkgYW5kIEknbSBidW5kbGVkIHVwIGluIGEgYmxhbmtldCBiZWNhdXNlIHRoZSBtZWRzIGFyZSBnaXZpbmcgbWUgaW5zYW5lIGNoaWxscyBhbmQgSSBmZWVsIHZlcnkgdmVyeSBtdWNoIGxpa2UgYSBTaWNrIFBlcnNvbi4uIApJIGFsc28gY2FuIHdhaXQgdG8gcmlkZSB0aGUgVGh1bmRlciBMb29wIHdoaWNoIGZlYXR1cmVzIHNvbWUgb2YgdGhlIG1vc3QgYmVhdXRpZnVsIHJvYWRzIGluIHdlc3Rlcm4gQXJrYW5zYXMsIGR1cmluZyB0aGUgTG9jYWwgbGF3IEVuZm9yY2VtZW50IEZ1biBSdW4gb24gU2F0dXJkYXkuCklmIGFmdGVyIHJldmlld2luZyB0aGUgZGlzY2xvc3VyZSB5b3UgZmVlbCB0aGF0IHlvdSBkb24gcmVhbGx5IGhhdmUgYSBkZWZlbnNlIHlvdSBjYW4gc2hvdyB1cCBhIGxpdHRsZSBlYXJseSB0byBjb3VydCBhbmQgdGFsayB0byB0aGUgcHJvc2VjdXRvci4gCkNvZW56eW1lIFExMCBTdXBwbGVtZW50YXRpb24gSW1wcm92ZXMgT3V0Y29tZXMgaW4gRWFybHkgUGFya2luc29uIERpc2Vhc2UKVGhlIHRvd24gb2YgTmV2YWRhVGhlIGRlY2lzaW9uIHRoYXQgSHVzdG9uIG1hZGUgd2FzIHRoYXQgdGhlc2UgdHdvIGNoaWxkcmVuIHdvdWxkIGJlIGJyb3VnaHQgdXAgYXdheSBmcm9tIHRoZSBIb2xseXdvb2QgbGlmZSBzdHlsZS4gSW4gZmFjdCBpdCB3YXMgYSBkZWNpc2lvbiB0aGF0IHN1aXRlZCBoaW0gdG9vLiBUaGVuIGluIGhpcyBtaWQgZm9ydGllcywgSHVzdG9uIHdhcyBhIGxlZ2VuZCBpbiBIb2xseXdvb2QsIG5vdCBvbmx5IGZvciBoaXMgZ3JlYXQgZmlsbXMsIGJ1dCBmb3IgaGlzIHN3YWdnZXIsIGludGVsbGlnZW50IGNvbXBhbmlvbnNoaXAsIHdpc2RvbSBhbmQgaHVtb3VyLiAKQmFyeWxhIG1vdGhlcikgZ2lmdGVkIHRoZSByaWdodCBvZiBzdXJ2aXZvcnNoaXAuIApBdCB0aGUgc2FtZSB0aW1lLCBDaGluYSBpcyBiZWNvbWluZyBtb3JlIGRlcGVuZGVudCBvbiBlbmVyZ3kgaW1wb3J0cyBmcm9tIHRoZSBNaWRkbGUgRWFzdCwgYW5kIG11Y2ggb2YgdGhlIG9pbCBpdCBpbXBvcnRzIGlzIHRyYW5zcG9ydGVkIHRocm91Z2ggdGhlIFNvdXRoIENoaW5hIFNlYSwgd2hlcmUgdGhlIFVTIG1haW50YWlucyBhIHNpZ25pZmljYW50IG5hdmFsIHByZXNlbmNlLi4gCklzIHRoZXJlIGFueSByZWFzb24gd2h5IHdlIG5lZWQgdG8gYnV5IENhbGlmb3JuaWEgd2luZXM/IFNvbWUgNTMgQ2FsaWZvcm5pYSB3aW5lcmllcyB3aWxsIGJlIG1ha2luZyB0aGVpciBjYXNlIGF0IHRoaXMgeWVhciBmZXN0aXZhbCwgaW5jbHVkaW5nIFJvYmVydCBNb25kYXZpLCBvZiBjb3Vyc2UuIApJdCBzdGlsbCBoYXMgYSBsb3Qgb2YgbGltaXRhdGlvbnMuIApJdCdzIGEgYml0IGRpc2FwcG9pbnRpbmcgdG8gc2VlIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBlbmdhZ2luZyBpbiB0aGlzIHNvcnQgb2YgbWFya2V0IHdvcnNoaXAgICBoYWlsaW5nIG1hcmtldHMgYXMgYSBHb29kIFRoaW5nIGluIHRoZW1zZWx2ZXMsIHJhdGhlciB0aGFuIGFzIGFuIG9mdGVuIGJ1dCBub3QgYWx3YXlzIHVzZWZ1bCBtZWFucyB0byBhbiBlbmQuIEJ1dCBJIGhhdmUgcmVhc29uIHRvIHRoaW5rIHRoYXQgdW5saWtlIHRoZSBCdXNoaWVzLCB0aGV5IGRvbid0IHJlYWxseSBiZWxpZXZlIGl0OyBpdCdzIGp1c3QgcG9saXRpY3MuIEJ1dCB0b28gbWFueSBjb21tZW50YXRvcnMgb24gdGhlIGxlZnQgYW5kIHRoZSByaWdodCBoYXZlIGFjY2VwdGVkIHRoZSByaWRpY3Vsb3VzIGlkZWEgdGhhdCB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gaXMgYWN0dWFsbHkgc29jaWFsaXN0LiAKSm9obiB3YXMgYSBsb25nIHRpbWUgTWVtYmVyIG9mIE1hcmtsYW5kIFdvb2QgR29sZiBDbHViIHdoZXJlIGhlIHNoYXJlZCBoaXMgbG92ZSBvZiBnb2xmIHdpdGggbWFueSBvZiBoaXMgZ29sZiBidWRkaWVzLCBmYW1pbHkgYW5kL29yIGJ1c2luZXNzIGZyaWVuZHMsIHRha2luZyB0aGVpciB0b29uaWVzLCBwbGF5aW5nIHBva2VyIGFuZCBzdGFja2luZyB1cCBoaXMgY2hpcHMsIGRpc2hpbmcgb3V0IG9uZSBsaW5lcnMsIHNoYXJpbmcgaGlzIGhlYXJ0eSBsYXVnaCwgaHVnZSBzbWlsZSBhbmQgY29udGFnaW91cyBwZXJzb25hbGl0eSBhbmQgc2VlbWluZ2x5LCBjb25zdGFudGx5IHdpbm5pbmcgYSBkcmF3IG9yIHByaXplIG9mIHNvbWUgc29ydC4gClZlZ2dpZUJhY29uYXRvciAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpUaGUgbW9zdCBpbXBvcnRhbnQgYXNwZWN0IG9mIHRoaXMgd2FzIHRoYXQgdGhlcmUgd2FzIGEgY29tbW9uIGRlbm9taW5hdG9yLCBzbyAicHVkZ3kgc3BsaXQgbGlwIiB3b3VsZCBhcHBlYXIgdGhlIHNhbWUgdG8gdGhlIHNlbmRpbmcgYW5kIHJlY2VpdmluZyBzdGF0aW9ucy4gQW55IG90aGVyIG1lYW5zIG9mIGNvbW11bmljYXRpbmcgaW1hZ2VzIGFuZCB0aGVpciBkZXNjcmlwdGlvbnMgaW5zdGFudGx5IGluIHRoZSBwcmUgZmFjc2ltaWxlIGRheXMgdGhpcyB3YXMgb3Igd291bGQgaGF2ZSBiZWVuIGEgc2lnbmlmaWNhbnQgZGV2ZWxvcG1lbnQuIApXaGlsZSB0aGUgaW5mZWN0aW9uIHNldHMgaW4sIHRoZSBlbnN1aW5nIGZsaWVzIGpvaW4gaW4gb24gdGhlIGFjdC4gVGhlIGNoaWxkcmVuIGZpZ2h0IG92ZXIgdHVnZ2luZyB0aGUgdGFtcG9uIG91dCBvZiB0aGVpciBNb3RoZXIgZXllIHdoaWxlIHRoZSBGYXRoZXIgcG9wcyB0aGUgb3RlaHIgZXllIG91dCBvZiB0aGUgZXllIHNvY2tldCBhbmQgZnVja3MgaXQuIE1lYW53aGlsZSwgdGhlIE1vdGhlciBmaW5nZXIgZnVja3MgdGhlIGtpZHMgYXNzZXMgd2hpbGUgdGhlIGRvZyBiYXJrcyBhbG9uZyB0byBNb3RoZXIgc2luZ2luZywgIkdPZCBibGVzcyBBbWVyaWNhIi4gClRoZSBtYWxlIHdpdG5lc3MgdGVzdGlmaWVkIHRoYXQgS2lzc25lciBvbmNlIG9mZmVyZWQgdG8gZHJhdyBoaW0gYSBqYWN1enppIGJhdGggYWZ0ZXIgaGUgaGVscGVkIEtpc3NuZXIgYW5kIHRoZSB0cmlhbCBmaXJzdCBjb21wbGFpbmFudCBtb3ZlIGFuIG9yZ2FuIGludG8gS2lzc25lciBiYXNlbWVudC4KR2FtYmxpbmcgKCJlbnRlcnRhaW5tZW50IiB0byBzb21lKSBoYXMgYmVlbiB0cmFuc2Zvcm1lZCBmcm9tIGF2aWNlIHRvIGEgbWFqb3IgaW5kdXN0cnkuIApVbmZvcnR1bmF0ZWx5IHRoZXJlIHdlcmUgbm8gc3VjaCBldmVudHMgb24gd2hlbiBJIHdhcyB0aGVyZSBidXQgdGhlIHB1YiB3YXMgYnVzdGxpbmcgZW5vdWdoIGV2ZW4gd2l0aG91dCB0aGUgcHJvbWlzZSBvZiBlbnRlcnRhaW5tZW50LgpUaGUgbGFzdCBvbmUgaXNuIGEgdGhpbmcsIGJ1dCBpdCByZWFsbHkgc2hvdWxkIGJlLCBhbmQgc2hvdWxkIGJlIHBhaWQgZm9yIGJ5IHRoZSBzY2hvb2wgb3Igc29tZXRoaW5nLCBiZWNhdXNlIHRoYXQgd291bGQgYmUgaGlsYXJpb3VzIGJ1dCBhbHNvIGFuIGF3ZXNvbWUgcHJpemUgZm9yIGJlaW5nIGFsaXZlIHRoYXQgbG9uZy4KMS4gQmxhY2tqYWNrCkZvciB0aGVzZSByZWFzb25zLCB5b3VyIHN0YXJ0aW5nIGhhbmQgc2VsZWN0aW9uIHNob3VsZCBpbmNsdWRlIG1vc3RseSBoYW5kcyB0aGF0IGhhdmUgdGhlIHBvc3NpYmlsaXR5IHRvIHNjb29wIGFuZCB0aGF0IG9mZmVyIHJlZHJhd3MuIEhhbmRzIHRoYXQgaGF2ZSBhbiBhY2UgYXJlIHRoZSBtb3N0IGNvbW1vbiBzdGFydGluZyBoYW5kcyBiZWNhdXNlIGFuIGFjZSBjYW4gYmUgdXNlZCBmb3IgYSBoaWdoIGhhbmQgYW5kIGEgbG93IGhhbmQuLiAKQW5kZXJzb24gUHJvZmVzc29yIG9mIEhpc3BhbmljIFN0dWRpZXMuIApSYWJiaSBCZW5qYW1pbiBCdXR0b25zICAgRW1wYXRoeSwgcm9zaCBoYXNoYW5haCwgZXRjLgpWcmFpbiBDaWRlcnksIDM1MCBUZXJyeSBTdC4sIExvbmdtb250Li4gCkJyaXRpc2ggcG9rZXIgcGxheWVyIGphaWxlZCBmb3IgMjAgeWVhcnMgZm9yIG11cmRlcmluZyB3aWZlIGluIFVTCkkgYnV5IHlvdSBhIGRyaW5rLiBZZWFoPyIgU2hlIGVpdGhlciBhZ3JlZSAoWUVTISksIG1pZ2h0IGNoYW5nZSB0aGUgZGF5L3RpbWUgKFlFUyEpLCBvciB3aWxsIG1ha2UgYW55IG90aGVyIGV4Y3VzZSAoTk8pLiAKRnVydGhlciBkb3duIHRoZSBjaGFydHMsIHRoZSBOZWlsIEpvcmRhbiBzdGFsa2VyIHRocmlsbGVyICJHcmV0YSwiIHN0YXJyaW5nIElzYWJlbGxlIEh1cHBlcnQgYW5kIENobG9lIEdyYWNlIE1vcmV0eiwgb3BlbmVkIGluIGVpZ2h0aCBwbGFjZSB0byBhIG1lZGlvY3JlICQ0LjYgbWlsbGlvbi4KWW91IGFyZSBzb2xlbHkgcmVzcG9uc2libGUgZm9yIHlvdXIgY29uZHVjdCBhbmQgeW91ciBjb250ZW50IG9uIHRoZSBOZXR3b3JrIGFuZCBjb21wbGlhbmNlIHdpdGggdGhlc2UgdGVybXMuIApUaG9zZSBhcmVuIHRoZSBtYWpvcml0eSBvZiBzbWFsbCB0aW1lIG1hbnVmYWN0dXJpbmcsIG9mIGNvdXJzZSwgaXQgb25lIGV4dHJlbWUgb2YgdGUgbWFudWZhY3R1cmluZyBzcGVjdHJ1bSwgdGhlIG90aGVyIGVuZCBiZWluZyBtYXNzIHByb2R1Y3Rpb24uCkludGVycGVyc29uYWwgTGF3IGZpcm0gZW1wbG95ZWVzIG11c3QgYmUgYWJsZSB0byBjdWx0aXZhdGUgcmVsYXRpb25zaGlwcyBhbmQgaW50ZXJhY3Qgd2l0aCBhIHJhbmdlIG9mIHBlcnNvbmFsaXRpZXMuIFRoZSByZWNlcHRpb25pc3QgbWF5IGhhdmUgdG8gZGlmZnVzZSBwb3RlbnRpYWxseSB0ZW5zZSBtb21lbnRzIHdpdGggY2xpZW50cyB3aG8gd2FudCBpbW1lZGlhdGUgYWNjZXNzIHRvIHRoZWlyIGxhd3llcnMsIGFuZCBzZW5pb3IgcGFydG5lcnMgbWlnaHQgbmVlZCB0byBuZWdvdGlhdGUgd2l0aCBqdW5pb3IgcGFydG5lcnMgYWJvdXQgdGhlIGxlbmd0aCBvZiB0aGVpciBwYXJ0bmVyc2hpcCB0cmFja3MuIEluIGVpdGhlciBjYXNlLCB0aGUgbGF3IGZpcm0gZW1wbG95ZWUgbmVlZHMgdG8gZXhoaWJpdCBkZWNvcnVtLCBjb25mbGljdCByZXNvbHV0aW9uIHNraWxscyBhbmQgaW50ZXJwZXJzb25hbCBza2lsbHMgdG8gYnVpbGQgc3Ryb25nLCBwcm9kdWN0aXZlIHJlbGF0aW9uc2hpcHMgd2l0aCBjbyB3b3JrZXJzLCBjbGllbnRzLCB2ZW5kb3JzIGFuZCBjb3VydCBwZXJzb25uZWwuCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIFNlcHRlbWJlciAxMCwgMjAxMApOb3cgaGUgbW92ZWQgb24gZnJvbSAibWFrZSBiZXR0ZXIvY2hlYXBlciByb2NrZXQiIGFuZCAibWFrZSBiZXR0ZXIgZWxlY3RyaWMgY2FyIiB0byBpZGVhcyB0aGF0IHdpbGwgcmVxdWlyZSByZXZvbHV0aW9ucyBpbiBldmVyeXRoaW5nIGZyb20gZ2VvbG9naWNhbCBzdXJ2ZXlzIHRvIHR1bm5lbGluZyB0byBwdWJsaWMgcG9saWN5IGFuZCBwcm9wZXJ0eSByaWdodHMuIFRoaXMgaXMgc3VwZXIgYnJhbmQgbmV3IHRlcnJpdG9yeSBmb3IgTXVzaywgYW5kIGhlIHJlcXVpcmVkIHRvIGFzc2VtYmxlIGEgbGFyZ2VseSBuZXcgdGVhbS4gSGUgaGFzIHRvIGhpcmUgdGhlICJyaWdodCBwZW9wbGUiIHdpdGhvdXQgbXVjaCBleHBlcnRpc2UgdGhhdCB3b3VsZCBoZWxwIGhpbSByZWNvZ25pemUgd2hvIGlzIHRoZSBiZXN0LiBUaGlzIGlzIG5ldyBhbmQgYmlnIHJpc2sgYWxvbmcgbm92ZWwgYXhlcy4KVG8gc2hvb3QgdGhlIHBpbG90IGVwaXNvZGUsIE5ldyBZb3JrIGJhc2VkIHByb2R1Y3Rpb24gY29tcGFueSBOb3J0aCBTb3V0aCBQcm9kdWN0aW9ucyBwbGFjZWQgYWRzIGluIHZhcmlvdXMgbWFydGlhbCBhcnRzIHB1YmxpY2F0aW9ucyBhbmQgV2ViIHNpdGVzIGxvb2tpbmcgZm9yIGFuICJvdXRnb2luZywgY2hhcmlzbWF0aWMsIGVuZ2FnaW5nLCBzbWFydCBhbmQgaW5xdWlzaXRpdmUgcGVyc29uYWxpdHkgdG8gY28gaG9zdCBhIG5ldyBtYXJ0aWFsIGFydHMgdGVsZXZpc2lvbiBzZXJpZXMuIiBUaGUgYWQgYWxzbyBzdGF0ZWQgdGhhdCAiVGhpcyBzaG93IHdpbGwgaGF2ZSB5b3UgcHVzaCB5b3VyIHBoeXNpY2FsIGFuZCBlbW90aW9uYWwgbGltaXRzIHNvIHlvdSBtdXN0IGJlIHVwIHRvIHRoZSBjaGFsbGVuZ2UiIFtzb3VyY2U6IE1ldGEgVHViZV0uIApIaXMgb3BhIG1pZ2h0IGhhdmUgYmVsb25nZWQgdG8gdGhlIFZlcnRyaWViZW5lbiksIEdlcm1hbiBzZXR0bGVycyBpbiBFYXN0IEV1cm9wZSB3aG8gd2VyZSBmb3JjZWQgdG8gZmxlZSBmcm9tIHRoZSBTb3ZpZXRzIG9uY2UgR2VybWFueSBsb3N0IHRoZSB3YXIuIApCcmVhayBpdCBkb3duIGludG8gc3RlcHMuIFlvdSBjYW4gYmVnaW4gYnkgZXhwbGFpbmluZyBhIGJyb2FkIG1hdGhlbWF0aWNhbCBwcmluY2lwbGUgdG8gdGhlIHN0dWRlbnQsIGJ1dCB0aGVuIGJyZWFrIGl0IGRvd24gaW50byB0aGUgc21hbGxlc3Qgc3RlcHMgcG9zc2libGUuIFRoaXMgd2lsbCBoZWxwIHRoZSBzdHVkZW50IHVuZGVyc3RhbmQgd2h5IHlvdSBhcmUgZG9pbmcgaXQgdGhlIHdheSB5b3UgYXJlIGRvaW5nIGl0LCBhbmQgdGhlcmVmb3JlLCB3aWxsIGhlbHAgdGhlbSBsZWFybiBhbmQgcmVtZW1iZXIgaG93IHRvIGRvIGl0IG9uIHRoZWlyIG93bi5bMl0uIApNYW55IGtpZHMgd2l0aCBsZWFybmluZyBkaXNhYmlsaXRpZXMgb3IgbG93ZXIgSVFzIGNvbW1pdCBjcmltZXMgZm9yIHJlYXNvbnMgbGlrZSB1cGJyaW5naW5nLCBlbnZpcm9ubWVudCwgZnJpZW5kcyBoZSB3YXMgYXJvdW5kICBCcmVuZGFuIHRhbGtlZCBhYm91dCBoaXMgYmVzdCBmcmllbmQgZG9pbmcgY29rZS4gVGVlbmFnZXJzIGFsc28gdGFsayBhYm91dCBhbmQgb2JzZXNzIG92ZXIgc2V4IGF0IGFnZSAxNi4gCkkgc2F5IHRoaXMgYXMgYSBwcmVjYXV0aW9uIHRvIHRob3NlIHdobyBwbGFuIG9uIGludmVzdGluZyB0aHJvdWdoIHRheCBhdWN0aW9ucyBvciBldmVuIGJhbmsgZm9yZWNsb3N1cmUgKHRydXN0ZWUgc2FsZSlhdWN0aW9ucy4gVGhlc2UgdHdvIHR5cGVzIG9mIGF1Y3Rpb25zIGFyZSB2ZXJ5IHNpbWlsYXIsIHlldCBhcmUgY29tcGxldGVseSBkaWZmZXJlbnQuIFdoZXJlIGFzLCBhIHJlcCBmb3IgdGhlIHRydXN0ZWUgY2FuIHBsYWNlIGJpZHMgb24gYSBwcm9wZXJ0eSB0byBydW4gdXAgdGhlIHByaWNlLiBUaGVyZSBhcmUgc29tZSBwZW9wbGUgd2l0aCBkZWVwIHBvY2tldHMgYXQgYSB0YXggYXVjdGlvbiB0aGF0IHdpbGwgYnV5IHNldmVyYWwgcHJvcGVydGllcy4gQXQgYSB0cnVzdGVlIHNhbGUsIHRoZXJlIGNvdWxkIGJlIG9uZSBwZXJzb24gd2hvIGhhcyB1YmVyIGRlZXAgcG9ja2V0cyBmb3IgdGhhdCBwcm9wZXJ0eSB0aGF0IHlvdSB3YW50IHRvIGJpZCBvbi4KVGhlcmUgaXMgbm8gZXhjZXB0aW9uIHRoYXQgYWxsb3dzIG1ha2luZyBhIGxlZnQgdHVybiB3aGlsZSB0aGUgbGlnaHQgaXMgcmVkIHRob3VnaC4gCkl0IHdhcyBjbHV0dGVyZWQgd2l0aCBjb25mdXNpbmcgc3R1ZmYuIApHb3Jkb246ICJUaGlzIHBpenphIHNob3VsZG4gZXZlbiBiZSBjYWxsZWQgcGl6emEuIEl0IHtjZW5zb3JlZH0uIFRoZSBjcnVzdCBpcyBhbGwgc29nZ3kuIApQcm9ibGVtIGdhbWJsaW5nIGlzIGFueSBnYW1ibGluZyBiZWhhdmlvciB0aGF0IGRpc3J1cHRzIHlvdXIgbGlmZS4gSWYgeW91IHByZW9jY3VwaWVkIHdpdGggZ2FtYmxpbmcsIHNwZW5kaW5nIG1vcmUgYW5kIG1vcmUgdGltZSBhbmQgbW9uZXkgb24gaXQsIGNoYXNpbmcgbG9zc2VzLCBvciBnYW1ibGluZyBkZXNwaXRlIHNlcmlvdXMgY29uc2VxdWVuY2VzIGluIHlvdXIgbGlmZSwgeW91IGhhdmUgYSBnYW1ibGluZyBwcm9ibGVtLkEgZ2FtYmxpbmcgYWRkaWN0aW9uIG9yIHByb2JsZW0gaXMgb2Z0ZW4gYXNzb2NpYXRlZCB3aXRoIG90aGVyIGJlaGF2aW9yIG9yIG1vb2QgZGlzb3JkZXJzLiBNYW55IHByb2JsZW0gZ2FtYmxlcnMgYWxzbyBzdWZmZXIgd2l0aCBzdWJzdGFuY2UgYWJ1c2UgaXNzdWVzLCB1bm1hbmFnZWQgQURIRCwgc3RyZXNzLCBkZXByZXNzaW9uLCBhbnhpZXR5LCBvciBiaXBvbGFyIGRpc29yZGVyLiAKMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1RoaXMgcGFzdCBjaHJpc3RtYXMgbXkgbW9tcyBvbmUgYWN0dWFsbHkgdG8gb3BlbiBnaWZ0IHRvIG1lIHdhcyBXb21lbnMgUEpzIGEgcGFudHMgYW5kIHNoaXJ0IHNldCB0aGF0IHdhcyBuYXZ5IGJsdWUsIGFuZCB0aGUgc2hpcnQgaGFkIGluIHJvc2UgZ29sZCBzZXF1aW5zICJBbGwgeW91IG5lZWQgaXMgbG92ZUkgaGF2ZSBuZXZlciBvd25lZCBhbnl0aGluZyByb3NlIGdvbGRJIHNsZWVwIGluIHNob3J0cyBvciBqb2dnZXJzSSBoYXZlIG5vdCB3b3JuIHdvbWVucyBjbG90aGVzIGluIGFib3V0IDMgeWVhcnMgaWYgbm90IGxvbmdlci4gQW5kIEkgbGl2ZSBhdCBoZXIgaG91c2Ugc28gdGhlcmUgaXMgbm8gd2F5IHNoZSBjb3VsZCBwb3NzaWJseSBub3Qga25vdy5JIHZlcnkgbmVhcmx5IGNyaWVkIGluIGZyb250IG9mIHRoZSB3aG9sZSBmYW1pbHkuIApJbiB0aW1lLCBkZW1vY3JhY2llcyB0aXJlIG9mIHdhciwgYXMgd2VsbCB0aGV5IHNob3VsZC4gVGh1cywgdGhlIHNpbmdsZSBtb3N0IGltcG9ydGFudCBmYWN0b3IuIChmb3IpIHRoZSBvdXRjb21lIGluIEFmZ2hhbmlzdGFuIG1heSBiZSBkZXRlcm1pbmVkIGFscmVhZHksIHNpbXBseSBiZWNhdXNlIHdlJ3ZlIGJlZW4gdGhlcmUgZm9yIGVpZ2h0IHllYXJzLiAKUG91ciB2aXRlciBxdSd1bmUgdGVsbGUgc2l0dWF0aW9uIHNlIHJlbm91dmVsbGUsIGxhIHBvcHVsYXRpb24gZGUgbGEgdmlsbGUgZCdBcmxpbmd0b24gYSBkY2lkIGRlIGNyZXIgdW4gc3lzdG1lIHF1aSBjb25zaXN0ZSAgZmFpcmUgYXBwZWwgYXUgcHVibGljIHBvdXIgb2J0ZW5pciBkZXMgcmVuc2VpZ25lbWVudHMgc3VyIHVuIGVubHZlbWVudCBkJ2VuZmFudC4gU29udCBhbG9ycyB1dGlsaXNzIGRlcyBwYW5uZWF1eCBwdWJsaWNpdGFpcmVzLCBkZXMgYWZmaWNoYWdlcyBzdXIgbGVzIHJvdXRlcywgZGVzIGludGVycnVwdGlvbnMgZGUgcHJvZ3JhbW1lcyByYWRpbyBldCB0bHZpc3MgcG91ciBkb25uZXIgZGVzIGluZm9ybWF0aW9ucyBwb3VyIHJldHJvdXZlciBsJ2VuZmFudCBlbmxldi4KVGhlcmUgYXJlIHN0aWxsIGNvdW50cmllcyBpbiB0aGUgd29ybGQgdGhhdCBkbyBub3QgYWxsb3cgb3BlcmF0b3JzIHRvIGdpdmUgcmVhbCBtb25leSBvbmxpbmUgZ2FtYmxpbmcgc2VydmljZXMuIApTb21lb25lIG9uIHRoYXQgYmVhY2ggaXMgcHJvYmFibHkgcmVhbGx5IGdvb2QgYXQgY29va2luZyBjcmFiLi4gCk1hZ2lja2FsIEJsZW5kcyBUaGVzZSAxMG1sIE9pbCBibGVuZHMgaGF2ZSBiZWVuIG1hZGUgd2l0aCBzcGVjaWZpYyBwdXJwb3NlcyBhbmQgaW50ZW50aW9uLiBTbGVlcCwgU3R1ZHkgYW5kIExvdmUgYXR0cmFjdGlvbiwgZWxlbWVudHMgICBFYXJ0aCwgQWlyLCBGaXJlLCBXYXRlciBhbmQgYWxzbyBibGVuZHMgY3JlYXRlZCBmb3IgU3R1ZHksIFNhY3JlZCBUZW1wbGUgYW5kIHRvb2xzIGJlZm9yZSBhbmQgZHVyaW5nIHJpdHVhbCBhbmQgY29uc2VjcmF0aW9uLCBTbGVlcCwgU29sYXIsIEx1bmFyIGFuZCBMb3ZlIFBvdGlvbi4KU21hcnQgY2FzdWFsIGRyZXNzIGlzIGV4cGVjdGVkIGF0IHRoZSBHcmFuZCBSZXN0YXVyYW50LCBleGNlcHQgb24gZm9ybWFsIG5pZ2h0cyBhdCB3aGljaCBtZW4gbXVzdCB3ZWFyIHN1aXQgYW5kIHRpZSBhbmQgd29tZW4gYSBjb2NrdGFpbCBkcmVzcyBvciBzaW1pbGFyLiAKMS4gCk90aGVyIHRoYW4gTm92ZW1iZXIsIEkgaGF2ZW4gc2VlbiBhbnkgaW1wcm92ZW1lbnQgaW4gdGhpcyBwbGF5IG92ZXIgdGhlIHBhc3QgdHdvIHllYXJzLiAKTWVpIGNhbiBzdW1tb24gc3BpZGVycy4gU2hlIGhhdGVzIHNwaWRlcnMuIEFuZCBtZT8gS2luZyBvZiB0aGUgZnJlYWtzLiAKQ3VyaW91cyB3aGF0IHBvc2l0aW9ucyB0aGV5IGhhdmUgdGhhdCB3b3VsZCByZXF1aXJlIG1vcmUgdGhhbiA1MiBob3VycyBvZiB3b3JrIGEgd2VlayBidXQgd2hpY2ggY291bGRuIGJlIHNvbHZlZCBieSBoaXJpbmcgbmV3IGVtcGxveWVlcy4gRm9yIGFjY291bnRhbnRzIEkga25vdyB0aGF0IHRheCBzZWFzb24gbGVhZHMgdG8gc2VyaW91cyBvdmVydGltZSBidXQgZG9uIGtub3cgaWYgYmFua3Mgc2VlIGEgc2ltaWxhciBzaXR1YXRpb24uIEFtZXJpY2EncyB1bnVzdWFsbHkgaGlnaCBpbmNvbWUgaW5lcXVhbGl0eSBhbHNvIG1lYW5zIG1vdmluZyB1cCB0aGUgcGF5IHNjYWxlIGNhbiBmZWVsIHBhcnRpY3VsYXJseSB1cmdlbnQuIApJdCBub3QganVzdCBoZXJlLCBpdHMgZXZlcnl3aGVyZS4gSSBoYXZlIGEgY291c2luIHdobyBpcyBlaXRoZXIgYSB0ZXJyaWZpYyB0cm9sbCBvciBhIHZlcnkgc3RhdW5jaCB0cnVtcCBzdXBwb3J0ZXIgd2hvIGRvZXNudCByZWFkIGFydGljbGVzIGhlIHBvc3RzLiAKSXQncyBmaWdodGluZyBmaXNoIG92ZXIgb3ZlciBwYWlycy4gCk9ubHkgaW4gYmV0d2VlbiBkZWFscyBtYXkgYSBwbGF5ZXIgY29udHJpYnV0ZSBtb3JlIG1vbmV5IHRvIHRoZWlyIHN0YWNrLiAKVGhlIG1vcmUgeW91IGNvbnN1bWUsIHRoZSBzdHJhaWdodGVyIHlvdSBnZXQuIApQcmVpc2dlbGRlciB6dSBnbGVpY2hlbiBUZWlsZW4gIFNjaGVpZGVuIHdocmVuZCBlaW5lciAiSGFuZCBmb3IgSGFuZCIgUGhhc2UgendlaSBvZGVyIG1laHIgU3BpZWxlciBhbiB1bnRlcnNjaGllZGxpY2hlbiBUaXNjaGVuIGF1cywgd2VyZGVuIGRpZSBQcmVpc2dlbGRlciB6dSBnbGVpY2hlbiBUZWlsZW4zMi4gR2VnZW4gZWluZW4gU3BpZWxlciBrbm5lbiBkaWUgZm9sZ2VuZGVuIFBlbmFsdHlzIChTdHJhZmVuKSB2ZXJobmd0IHdlcmRlbjogKGEpIGVpbmUgbW5kbGljaGUgVmVyd2FybnVuZywgKGIpIE1pc3NlZCBIYW5kIFBlbmFsdHksIChjKSBzZWluZSBIYW5kIHdpcmQgYWxzICJ0b3QiICh1bmdsdGlnKSBlcmtscnQsIChkKS4gCktvbGthdGEgUm95YWxzICAgWWV0IHRvIGJlIGFubm91bmNlZApUaGV5IG1heSBiZSByZW1vdmVkIGlmIGxpbmtlZCBjb250ZW50IGlzIG5vdCBzcGVjaWZpY2FsbHkgYWJvdXQgS29yZWEuIFRoaXMgY2FuIGluY2x1ZGUgdHJhbnNsYXRpb24gcmVxdWVzdHMsIGNlbGVicml0eSBuZXdzLCBtdXNpYyB2aWRlb3MsIHRlY2ggbmV3cywgZXRjLCBlc3AuIApBbmQgUGFya2luLCBCLiAoZWQuKSBTcG9ydCBhbmQgdGhlIEJyYWluOiBUaGUgU2NpZW5jZSBvZiBQcmVwYXJpbmcsIEVuZHVyaW5nIGFuZCBXaW5uaW5nLCBQYXJ0IEIgRWxzZXZpZXIuIFBwLiAKQnV0IHdoZW4gdGFsa2luZyB0byBwZW9wbGUgd2hvIHN1cHBvcnQgQmVybmllLCB0aGV5IGF0dHJpYnV0ZSB0byBtdWNoIHRvIGhpbSBhbmQgZm9yZ2V0IG1hbnkgb2YgaGlzIHBvc2l0aW9ucyBhcmUgb3RoZXIgcGVvcGxlIGlkZWFzIHdpdGhpbiB0aGUgZGVtb2NyYXRpYyBwYXJ0eS4gRm9yIGFzIGxvbmcgYXMgRmlyc3QgUGFzdCB0aGUgUG9zdCB2b3RpbmcgaXMgdGhlIGdhbWUgd2UgcGxheSBpbiBBbWVyaWNhLCBwb2xpdGljaWFucyB3aWxsIHVzZSB0aGUgdHdvIHBhcnRpZXMgdG8gd2luIHRoYXQgZ2FtZS4gSSBzdGlsbCBnb25uYSB2b3RlIGZvciB0aGUgZ3V5IHdobyB0cnlpbmcgdG8gY2hhbmdlIHRoZSBydWxlcyB0byBzb21ldGhpbmcgYmV0dGVyIGV2ZW4gaWYgaGUgc3RpbGwgaGFzIHRvIHBsYXkgdW5kZXIgZGlydHkgcnVsZXMgZm9yIG5vdy4uIApBIGZvdXIgYWxhcm0gZmlyZSBjb250aW51ZXMgdG8gYnVybiBhdCBhIGNvbW1lcmNpYWwgYnVpbGRpbmcgbmVhciBEdXBvbnQgU3RyZWV0IGFuZCBEdW5kYXMgU3RyZWV0IFdlc3QgYWZ0ZXIgZm9yY2luZyBzb21lIHJlc2lkZW50cyBmcm9tIHRoZWlyIGhvbWVzIGFuZCBzdHVkZW50cyBmcm9tIGEgc2Nob29sLCBhbmQgY2xvc2luZyBzZXZlcmFsIHN0cmVldHMgaW4gdGhlIGNpdHkncyB3ZXN0IGVuZCBlYXJsaWVyIE1vbmRheS4KVGhlIFBhcmtsYW5kIHNob290ZXIgaXMgYSBwcmltZSBleGFtcGxlIG9mIHNvbWVvbmUgd2hvIHNob3VsZCBub3QgaGF2ZSBiZWVuIGFibGUgdG8gYnV5IGEgZ3VuLi4gCldvdWxkbnQgeW91IG5vdCB3YW50IHRvIGdpdmUgeW91ciBwb3NpdGlvbiBhd2F5IGJ5IHNoaW5pbmcgZmxhc2hsaWdodHMgZXZlcnl3aGVyZT8gV2hlbiBJIHdvcmtlZCBzZWN1cml0eSBJIE5FVkVSIGRpZCB0aGF0LiBJIG9uY2Ugd2F0Y2hlZCB0d28gY29wcyBmcm9tIGFmYXIgKEkgd2FzIG1ha2luZyByb3VuZHMgYXQgYW5vdGhlciBidWlsZGluZykgd2Fsa2luZyBhcm91bmQgdGhlIG90aGVyIGJ1aWxkaW5nIGp1c3Qgc2hpbmluZyB0aGVpciBmbGFzaGxpZ2h0cyBldmVyeXdoZXJlLiAKOS4gTm8gcGljdHVyZXMgb2YganVzdCB0ZXh0LgpJbCBzb250IHBldSBub21icmV1eCwgZXQgZGFucyBjZSBwZXRpdCBub21icmUgaWwgcydlbiB0cm91dmUgZW5jb3JlLCBwZXV0IHRyZSwgcXVpIG5lIHNvbnQgcGFzIHRycyBzb2xpZGVzIHN1ciBqYW1iZXMsIHNvaXQgZGVzIGZhdGFsaXN0ZXMsIGRlcyBtbGFuY29saXF1ZXMsIGRlcyBtYWxhZGVzLCBzb2l0IGVuY29yZSBkZXMgbmVydnMsIGZpbnMganVzcXUnIGwnYXJ0aWZpY2UsIHF1aSBtZXR0ZW50IGxldXIgcG9pbnQgZCdob25uZXVyICByZXN0ZXIgY2FjaHMuIElscyBvbnQgY2VjaSBlbiBjb21tdW4gcXUnaWxzIHNlIGJvdWNoZW50IGxlcyBvcmVpbGxlcyBwb3VyIG5lIHBhcyBlbnRlbmRyZSBsYSBidGlzZSBkY2hhbmUgZXQgbGEgZ3VldWxlcmllIGJydXlhbnRlIGR1IGJvdXJnZW9pcyBkbW9jcmF0ZS4uIApXZSBhbGwgYmVlbiBhdXRpc3RpYyBmb3IgPjE4IHllYXJzIG5vdyAgIHdlIGtub3cgd2hhdCB1cHNldHMgdXMgYW5kIHdoYXQgd2UgY2FuIGhhbmRsZSwgYW5kIHdlIGp1c3QgYSBiaXQgc2ljayBvZiBwZW9wbGUgdGVsbGluZyB1cyB3aGF0IHdlIGFyZSBhbmQgYXJlbiBhYmxlIHRvIGRvLiAKVGhlIGVudHJlcHJlbmV1cnMgZW50ZXJlZCB0aGUgRGVuLCBoYXZpbmcgc29sZCB1cHdhcmQgb2YgNTAsMDAwIHVuaXRzIHRoZSBwcmV2aW91cyBtb250aC4gVGhleSB3ZXJlIGFsc28gZm91ciBtb250aHMgaW50byB3b3JraW5nIG9uIHRoZSA1LjAgdmVyc2lvbiwgd2hpY2ggZmVhdHVyZXMgZml2ZSB0cmFuc2R1Y2VycyBpbnN0ZWFkIG9mIG9uZSwgcGF0ZW50IHBlbmRpbmcgZGlyZWN0aW9uYWwgY2FzdGluZyBhbmQgM0QgYm90dG9tIGNvbnRvdXJpbmcgdGVjaG5vbG9neSB0aGF0IHByb2R1Y2VzIHBpY3R1cmUgcXVhbGl0eSByZW5kZXJpbmdzIHVwIHRvIDE2MCBmZWV0IGJlbG93IHRoZSBzdXJmYWNlLiBoYWQgbGVhcm5lZCBhIGxvdCBhYm91dCBob3cgdG8gbWFrZSBhIGZpc2ggZmluZGVyIGJldHRlciBmb3IgY29uc3VtZXJzLCBTbWl0aCBzYWlkLgpXZSBhbGwga25vdyBtdXNjbGUgcGFpbiB3ZWxsLiBXaGV0aGVyIGZyb20gYSBib290Y2FtcCBjbGFzcywgMTBLIHRyYWluaW5nIG9yIGN5Y2xpbmcgY2xhc3MsIHJlcGV0aXRpdmUgZXhlcmNpc2UgbW92ZW1lbnRzIHRpZ2h0ZW4geW91ciBib2R5IGFuZCBjYW4gY2F1c2Uga25vdHMgdGhhdCBsaW1pdCB5b3VyIHJhbmdlIG9mIG1vdGlvbi4gVGhlcmUgYXJlIG1hbnkgcmVtZWRpZXMgdG8gdGhpcyBkZWVwIHRpc3N1ZSBtYXNzYWdlLCBpY2UgYmF0aCBzb2Frcywgc3RyZXRjaGluZyBiZWZvcmUgYW5kIGFmdGVyIGEgd29ya291dCB0aGUgbGlzdCBnb2VzIG9uLiBCdXQgbW9yZSByZWNlbnRseSwgYSB0ZWNobmlxdWUgY2FsbGVkIGZvYW0gcm9sbGluZyBoYXMgZm91bmQgYSBwbGFjZSBpbiBzdHVkaW9zIGFuZCBob21lIGZpdG5lc3MuIEFsc28gZHViYmVkICJzZWxmIG15b2Zhc2NpYWwgcmVsZWFzZSwiIGZvYW0gcm9sbGluZyBpcyBhIGZvcm0gb2Ygc2VsZiBtYXNzYWdlIHRoYXQgbGl0ZXJhbGx5IGVtcGxveXMgcm9sbGVycyBtYWRlIG9mIGZvYW0gdG8gcmVkdWNlIHRlbnNpb24gaW4gdGhlIGZhc2NpYSwgYSB0aGluIG1lbWJyYW5lIGNvdmVyaW5nIHRoZSBib2R5J3MgbXVzY2xlcy4gU3RpbGwgY29uZnVzZWQ/IFlvdSdyZSBub3QgYWxvbmUuIFJlYWQgb24gdG8gbGVhcm4gaG93IHRvIHN0YXJ0IHJlY2VpdmluZyB0aGUgbWFueSBiZW5lZml0cyBvZiB0aGlzIGF0IGhvbWUgZGVlcCB0aXNzdWUgcmVsaWVmIHN5c3RlbS4KQW5kIHRoZSBoaWdoZXIgc2VlZCB3b24gb3ZlciB0aGUgbG93ZXIgc2VlZCBpbiBlYWNoIGdhbWUsIDEgMiAzIDQgNSBhbmQgNiB3b3VsZCBhbGwgbWFrZSBSZWdpb25hbHMuIDMgYW5kIDQgd291bGQgaGF2ZSB0byB3b3JrIGEgYml0ICJoYXJkZXIiIHRoYW4gdGhleSB0aG91Z2h0IHRoZXkgc2hvdWxkLCBidXQgc3RpbGwgY291bGQgbWFrZSBpdC4gMyBhbmQgNCB3b3VsZCBuZWVkIHRvIHdpbiBhbG1vc3QgYWxsIHRoZWlyIGdhbWVzIGFnYWluc3QgbG93ZXIgc2VlZGVkIHRlYW1zIGluIG9yZGVyIHRvIHRha2UgdGhlIGxhc3QgMiBiaWRzIHRvIHJlZ2lvbmFscy4gTm90IGEgdmVyeSBmYWlyIHNoYWtlIGZvciAzIGFuZCA0LgpPdXIgdGVhY2hlcnMga25vdyBob3cgdG8gbWFrZSB0aGUgZWR1Y2F0aW9uYWwgZXhwZXJpZW5jZSBhbiBhYnNvbHV0ZSBqb3kuIApBbnlvbmUgd2hvIHBsYXllZCB0aGUgT3ZlcmxvcmQgRExDIGZvciBNRTIga25vd3MgdGhhdCBpdCB3YXMgU2hlcGFyZCB0aGF0IHN0b3BwZWQgaXQsIGFuZCBldmVuIGlmIHRoZSB3b21hbiB3aG9zZSBjaGlsZCB3YXMgYXBwYXJlbnRseSBpbnZvbHZlZCBpbiB0aGUgdGVzdGluZyBkaWQgZGVmZWN0IGZyb20gQ2VyYmVydXMgb3ZlciBpdCwgc2hlIHdhc24gYW55d2hlcmUgbmVhciBhY3R1YWxseSBkb2luZyBhbnl0aGluZyBhYm91dCBpdC4gClBpeGVsIDMgaXMgY29uc3RhbnRseSBvbiBzYWxlIHNvIEkgZ290IGl0IGZvciA2MDAuIApBdCAxNywgRnJhbmsgYnJva2UgdGhlIENhbmFkaWFuIEludGVyc2Nob2xhc3RpYyByZWNvcmQgZm9yIHRoZSBtaWxlIGF0IFBhcmlzIEhpZ2ggU2Nob29sLiAKSSBqdXN0IHdhbm5hIHNlZSBteSBiYWJ5LiA4dzVkIHRvZGF5IGFuZCBzdGlsbCBhbm90aGVyIDQgZGF5cyBiZWZvcmUgbXkgcHJlbGltaW5hcnkgT0IgYXBwb2ludG1lbnQuIApUaGVyZSB3ZXJlIG1hbnkgZmFtaWx5IG1lbWJlcnMgd2hvIHN0b3BwZWQgdmlzaXRpbmcgaGVyIGJlY2F1c2UgdGhleSBjb3VsZG4gZmFjZSBpdC4gCkluIGZhY3QgdGhlIG9ubHkgdGhpbmcgeW91IGhhdmUgdG8gd29ycnkgYWJvdXQgaXMgYSBwb3dlciBmYWlsdXJlLCBhbmQgZXZlbiB0aGVuIHlvdXIgbW9uZXkgaXMgc3RpbGwgc2FmZSwgYmVjYXVzZSBpdHMgbGlua2VkIHRvIGFuIGFjY291bnQgdGhhdCBvbmx5IHlvdSBoYXZlIHRoZSB1c2VybmFtZSBhbmQgcGFzc3dvcmQgKHVubGVzcyB5b3UgYXJlIG1hcnJpZWQsIHRoZW4geW91IG1pZ2h0IGhhdmUgdG8gd29ycnkgYWJvdXQgeW91ciBzcG91c2UpSWYgeW91IGFyZSBsaWtlIG1lLCBhbmQgeW91IGp1c3QgY2FuJ3QgYWZmb3JkIHRvIGhvcCBvbiBhIHBsYW5lIGV2ZXJ5IG5pZ2h0IGFuZCBmbHkgdG8gTGFzIFZlZ2FzIG9yIEF0bGFudGljIENpdHksIG9yIHdoZXJldmVyIHlvdXIgbmVhcmVzdCBjYXNpbm8gaXMsIG9ubGluZSB2aWRlbyBwb2tlciBpcyB0aGUgcGVyZmVjdCBzb2x1dGlvbi4gCkJ1dCB5b3UgYXJlIHVuaXF1ZS4gClRoZSBwcm9ibGVtIHdpdGggcnVsaW5nIGVsaXRlcywgaG93ZXZlciwgaXMgdGhhdCB0aGV5IGFyZSBhbHdheXMgYWZyYWlkIG9mIGxvc2luZyB0aGVpciBwb3dlci4gSXMgYXMgdHJ1ZSBvZiBnZW5kZXIgcnVsaW5nIGVsaXRlcyBhcyBpdCBpcyBvZiBlY29ub21pYyBvbmVzIChub3QgdGhhdCB0aGUgdHdvIGFyZSBzZXBhcmF0ZSkuIFdoaXRlLCBtaWRkbGUgY2xhc3MsIGhldGVyb25vcm1hdGl2ZSBtYXNjdWxpbml0eSBpcyBhbHdheXMgbG9va2luZyBvdmVyIGl0cyBzaG91bGRlciwgYWZyYWlkIHNvbWVvbmUgd2lsbCBzZWUgaXRzIHdlYWtuZXNzZXMsIGFmcmFpZCBzb21lb25lIHdpbGwgdGFrZSBpdHMgcG93ZXIgYXdheS4gClRoZSB5ZWFyIG9mIHVucmVsZW50aW5nIG1pc2VyeT8KUG9rZXJzbGFtNTU2IHUKVGhlIFBQUCBoYXMgcG9saXRpY2FsIGludGVyZXN0cyBpbiB0aGUgcGVycGV0dWF0aW9uIG9mIHRoZSBwcmVzZW50IEFzc2VtYmxpZXMuIFRoZSBsYXN0IHRoaW5nIHRoZSBQUFAgd2FudHMgaXMgYSBtaWxpdGFyeSBpbnRlcnZlbnRpb24uIEluIGFueSBjYXNlLCBQVEkncyBtb2JpbGlzYXRpb24gYW5kIHN1Y2Nlc3MgYWN0dWFsbHkgZXJvZGVzIFBQUCBncm91bmQsIHBhcnRpY3VsYXJseSBpbiBQdW5qYWIuIApCZW5qYW1pbiBEaXNyYWVsaQpEYSBzaWVodCBtYW4gZGFzcyBlcyBzaWNoIGF1c3phaGx0IHdlbm4gbWFuIFNvbGlkYXJpdHQgdW5kIFppdmlsY291cnRhZ2UgemVpZ3QuIApUaGUgZ3JlYXRlc3QgY3JpdGljaXNtIGlzbiB0aGF0IGNvbnZpbmNpbmcgdGhlIHdlaWdodGVkIDUxJSBvZiBpbmRpdmlkdWFsIHRva2VuIGhvbGRlcnMgdG8gcGFydCB3aXRoIHRoZWlyIGNvaW5zICAgaXQgdGhhdCBhbnkgc2luZ2xlIGVudGl0eSBjYW4gY29udHJvbCBtdWx0aXBsZSBhZGRyZXNzZXMsIGFuZCB0aHVzIGluZGl2aWR1YWxzIGNhbiB0aGluayB0aGVyZSBubyBjaGFuZ2UgaW4gdGhlIGRpc3RyaWJ1dGlvbiBvZiBjb2lucyB3aGVuIHRoZXkgc2VsbCB0aGVtLCB3aGlsZSByZWFsbHkgdGhleSBsZXR0aW5nIG9uZSBlbnRpdHkgc2xvd2x5IGFjcXVpcmUgdGhlIG1ham9yaXR5Li4gCkkgd2FzIGxheWluZyBkb3duIG9uIHRoZSBncm91bmQgZm9yIHdoYXQgc2VlbWVkIGxpa2UgbW9udGhzLiBTa2luLCBuYWlscywgdGVldGgsIGxpbWJzLCBzY2F0dGVyZWQgYWNyb3NzIHRoZSBmbG9vciBvZiBteSBvd24gcGVyc29uYWwgaGVsbC4gClBhciBsYSBzdWl0ZSwgaWwgcHJhdGlxdWVyYSBwZW5kYW50IHVuZSB2aW5ndGFpbmUgZCBsYSBtZGVjaW5lICBDYWxhaXMsIGF2YW50IHF1IHZuZW1lbnQgaW5hdHRlbmR1IG4gZGUgc2EgcGF0dGUgcHJvdmlkZW50aWVsbGUgbGEgZGVzdGluZSBkdSBqZXVuZSBtZGVjaW4uIApUaGF0IHN1cGVyIHVudXN1YWwuIFRoZXJlIGtpbmQgb2YgYWJyaWdodCBzaWRlIGFuZCBhIGRhcmsgc2lkZSB0byB0aGF0LiAKQXMgb2YgcmlnaHQgbm93IEkgYW0gYSBwcmV0dHkgYmlnIHdpbm5lciBpbiB0aGUgNSAxMCAxMCAyMCBnYW1lcyBidXQgcHJvYmFibHkgd291bGQgaGF2ZSB0cm91YmxlIG1vdmluZyB1cCBwYXN0IHRoaXMgcG9pbnQuIEkgYW0ganVzdCB0cnlpbmcgdG8gZmlndXJlIG91dCBpZiBpdCBpcyB3b3J0aCB0aGUgYW1vdW50IG9mIHdvcmsgSSB3b3VsZCBoYXZlIHRvIHB1dCBpbiBpZiBJIG9ubHkgcGxhbiBvbiBwbGF5aW5nIGZvciBhbm90aGVyIGNvdXBsZSB5ZWFycy4gSSB1bmRlcnN0YW5kIHRoZSBkaWZmaWN1bHR5IG9mIHRoZSBuZXh0IHN0ZXAgSSB3b3VsZCBoYXZlIHRvIG1ha2UgKEkgcHJldHR5IGdvb2QgYXQgdXNpbmcgdGVoIGNvbXB1dGVycyBmb3IgdGVoIG1hdGhzKSwgYnV0IGl0IGlzIHN0aWxsIGhhcmQgdG8gY2FsY3VsYXRlIGlmIG15IHRpbWUgd291bGQgYmUgYmV0dGVyIGFsbG9jYXRlZCBncmluZGluZyBzdGF0cyBvdXQgZm9yIHBva2VyIG9yIGZvciBzb21ldGhpbmcgZWxzZS4gSSBrbm93IHRoYXQgaXQgaXMgYSBkZWNpc2lvbiB0aGF0IEkgaGF2ZSB0byBjb21lIHRvIG9uIG15IG93biBidXQgaXQgaXMganVzdCByZWFsbHkgd2VpcmQgYmVpbmcgaW4gc3VjaCBhIG1pZGRsaW5nIHpvbmUuClRoaXMgd2VpZ2h0IG9uIEJvYmEgbWluZCBpcyBjb21wb3VuZGVkIGJ5IHRoZSBmYWN0IHRoYXQgQm9iYSB1bmRlcnN0YW5kcyBoZSBpcyBub3cgYWxvbmUgaW4gdGhlIGdhbGF4eS4uIApIZXJlIGlzIGEgbG9vayBhdCB0aGUgb2RkcyBhbG9uZyB3aXRoIHByZWRpY3Rpb25zIGZvciBob3cgZXZlcnl0aGluZyBzaG91bGQgc2hha2Ugb3V0LiAKSGUgbWFycmllZCBUYW1teSAoUGVya2lucykgUmVpbmhhcnQgb24gRmVicnVhcnkgMjJ0aCwgMTk4NiwgYW5kIHNoZSBzdXJ2aXZlcy4gVGVycnkgaXMgYWxzbyBzdXJ2aXZlZCBieSBoaXMgbW90aGVyLCBoaXMgY2hpbGRyZW46IE5pY2tvbGFzIChDYXJsYSkgTGVlIFJlaW5oYXJ0LCBGaW5kbGF5OyBKYXNvbiAoS3Jpc3RhKSBNaWNoYWVsIFJlaW5oYXJ0OyBGaW5kbGF5IGFuZCBCcml0dGFueSAoSnVzdGluKSBMeW5uIFdpc25lciwgRmluZGxheS4gSGUgaGFkIG9uZSBzdGVwIHNvbjogSmFjb2IgKFRhbWFyYSkgV2FycmluZ3RvbiwgRmluZGxheS4gClJ1c3NlbCwgc28gc2FndGUgZXIga2xpcHAgdW5kIGtsYXIsIGtvbW1lIGRhaGVyIHp1bSAxLiAKRXhlcmNpc2UgcmVzcGVjdCBmb3IgZWFjaCBvdGhlciBhbmQgZm9sbG93IFJlZGRpcXVldHRlLiBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBtb2RzIG1heSByZW1vdmUgcG9zdHMgYW5kIGNvbW1lbnRzIGF0IHRoZWlyIGRpc2NyZXRpb24gdG8gcHJlc2VydmUgYSByZXNwZWN0ZnVsLCBzdXBwb3J0aXZlIGF0bW9zcGhlcmUgaW4gdGhpcyBzdWIuIFlvdXIgdG9uZSBtYXR0ZXJzIHdoZW4gcmVzcG9uZGluZyB0byBvdGhlcnMgICBiZSBraW5kIQpGb3IgdGhlIHVzZXIsIHdobyBpcyBmYW1pbGlhciB3aXRoIHRoZSB0YXJnZXQgZmFjZXMsIGl0IGlzIGVhc3kgdG8gcmVjb2duaXplIHRoZSBmYWNlcyBhY3Jvc3MgYSByYW5nZSBvZiBpbWFnZXMuIApXaGlsZSBoaXMgcmVmdXNhbCB0byBmb2xsb3cgYW55IHJ1bGVzLCBvciB0byBhY2tub3dsZWRnZSB0aGUgcG9pbnQgb2Ygc2FpZCBydWxlcyBkb2VzIG1vdmUgaGltIGZpcm1seSBpbnRvIHRoZSByZWFsbSBvZiBoZSB0aGVyZSB0byBwb2ludCBvdXQgdGhlIGFic3VyZGl0eSBvZiB0aGUgcGVvcGxlIGFyb3VuZCBoaW0uIApUaGUgYmVlciBmZXN0IGlzIFNhdHVyZGF5LCBNYXJjaCA5LjUgZGF5cyBhZ28gKyBCeSBKb2huIFBldGtvdmljLCBUaGUgUGxhaW4gRGVhbGVyMm5kIEJlZXJoZWFkIEJhciBFYXRlcnkgdG8gb3BlbiBpbiBORSBPaGlvIDJuZCBCZWVyaGVhZCBCYXIgRWF0ZXJ5IHRvIG9wZW4gaW4gTkUgT2hpbyBUaGUgc2Vjb25kIEJlZXJoZWFkIEJhciBFYXRlcnkgaXMgc2NoZWR1bGVkIHRvIG9wZW4gaW4gTm9ydGhlYXN0IE9oaW8uIApJJ20gbm90IHN1cmUgaWYgeW91IG1lYW50IHRoYXQgdG8gcmVidXQgd2hhdCBJIHNhaWQgc29tZWhvdywgYnV0IGl0IGRpZG4ndCByZWFsbHkgYWRkcmVzcyBpdC4gSSdtIHRhbGtpbmcgYWJvdXQgcG90ZW50aWFsIHJpZ2h0IGxlYW5pbmcgYWxsaWVzIHRoYXQgYXJlIGFnYWluc3QgcmFjaXNtIGFuZCB3aGl0ZSBpZGVudGl0eSBwb2xpdGljcy4gCkhhbmRsaW5nIGlzIGEgdmVyeSBpbXBvcnRhbnQgY29uc2lkZXJhdGlvbiB3aGVuIGl0IGNvbWVzIHRvIGNhc2lubyBwb2tlciBjaGlwcyB3ZWlnaHQuIFBsYXllcnMgYW5kIGRlYWxlcnMgYWxpa2Ugd2FudCB0byBlbnN1cmUgdGhhdCBpdCBpcyBlYXN5IHRvIGhhbmRsZSB0aGUgY2hpcHMgdGhhdCBhcmUgdXNlZCBpbiB2YXJpb3VzIGNhc2lubyBnYW1lcy4gTGlnaHQgd2VpZ2h0IGNoaXBzIHRlbmQgdG8gYmUgc2xpcHBlcnkgYW5kIG1vcmUgZGlmZmljdWx0IHRvIGhhbmRsZSB0aGFuIHRoZSBoZWF2aWVyIGNoaXBzIG9uIHRoZSBtYXJrZXQgdG9kYXksIHNvIHRoaXMgaXMgdGhlIGNob2ljZSBhbW9uZyBtb3N0IGNhc2lub3MuIApNbSB2IHBsbmUgdXJvYmkgbmVqYWsgY2VzdG92YW5pYSB0ZWp0byB6aW1lLCB2eWhsaSBzbmVoIHphIHByIHRkb3YgYSBuYXZ0dmkgcHJpYXRlb3YgYSBrb2xlZ292IHByb3NwZWt0b3JpIHYgcHRpLiBNaiBHb2xkYnVnIGJ1ZGUgc28gbW5vdS4gViBpYWRub20gcHJwYWRlIHNvbSBleHBlcnQsIGFsZSBqYSBzb20gbWFsIHZlYSB6YmF2eSBhIG5haWVsIHByIHBva2xhZG92LiBIYWRhbmllIGtvdm92IGplIG52eWtvdiBhIHRlbSBzYSBvcCB0ZXN0b3Zhbml1IG1vamUgYXN0aWUuIENlbmEgemxhdGEgamUgcmFrZXRvdm0gdGVtcG9tLCBhIGlzdGUgYnkgY2hjZWwgbmpzIHBla24gbnVnZ2V0IG8gbW9qZSBzaWxpZS4KQW4gaW5jcmVhc2luZyBudW1iZXIgb2YgcmVzZWFyY2hlcnMgcG9zdHVsYXRlIHRoYXQgaGVhZGFjaGUgcGFpbiBtYXkgYmUgcHJvZHVjZWQgYnkgc3RydWN0dXJlcyBsb2NhdGVkIGluIHRoZSBuZWNrLiBXaGlsZSB0aGUgbm90aW9uIHRoYXQgaGVhZGFjaGUgbWF5IGFyaXNlIGZyb20gY2VydmljYWwgKG5lY2spIHN0cnVjdHVyZXMgbWF5IGJlIG5ldyB0byBzb21lIG1lZGljYWwgcHJhY3RpdGlvbmVycywgaXQgaXMgYSBjb25jZXB0IHRoYXQgaXMgd2lkZWx5IGFjY2VwdGVkIGJ5IGNoaXJvcHJhY3RvcnMsIG9zdGVvcGF0aHMsIGFuZCBvdGhlciBwcm9mZXNzaW9uYWxzIHdobyByZWd1bGFybHkgcGVyZm9ybSBtYW5pcHVsYXRpdmUgcHJvY2VkdXJlcyBpbnZvbHZpbmcgdGhlIGNlcnZpY2FsIHNwaW5lLi4gCkF0IGEgbG9jYWwgcmFsbHkgaW4gQWxleGFuZHJpYSwgbm9ydGggb2YgQ29ybndhbGwsIERpb24gc3RyZXNzZWQgdGhlIG5lZWQgZm9yIGhpcyAiR3JlZW4gU2hpZnQiIHBsYW4uClN0b2NrIHlvdXIga2l0Y2hlbiB3aXRob3V0IHRoZSB3YXN0ZVNpbmNlIDIwMTEsIFZhbmNvdXZlciBUaGUgU29hcCBEaXNwZW5zYXJ5IGhhcyB0YWNrbGVkIHRoZSBpc3N1ZSBvZiBzaW5nbGUgdXNlIHBsYXN0aWMgcGFja2FnaW5nIGJ5IHNlbGxpbmcgcmVmaWxscyBmb3IgcmV1c2FibGUgY29udGFpbmVycy4gCllvdSBjYW4ndCBqdXN0IHRha2UgYSBmb3VyIHdlZWsgdmFjYXRpb24gdW5sZXNzIHlvdSd2ZSByZWFsbHkgc3RydWN0dXJlZCB5b3VyIGJ1c2luZXNzIGluIGEgd2F5IHdoZXJlIGl0IGNhbiBiZSBzZWxmIHN1ZmZpY2llbnQgd2l0aG91dCB5b3VyIHByZXNlbmNlLCB3aGljaCBpcyBoYXJkIHRvIGRvLi4gCjQpIFRoZXkgYXJlIGF3YXJkaW5nIGZyZXF1ZW50IGZseWVyIG1pbGVzIHRvIHRoZSBBQWlycGFzcyBjbGllbnRzLCB3aG8gYXBwYXJlbnRseSBzb2xkIHRoZW0gYW5kIGdhdmUgdGhlbSBhd2F5IHRvIHBlb3BsZSBmcmVxdWVudGx5KG1vcmUgb3Bwb3J0dW5pdHkgY29zdCwgbW9yZSBwZW9wbGUgZmx5aW5nIGZyZWUpLiAKQnV0IGl0IHNob3VsZCBiZSBkaWZmaWN1bHQgdG8gdGFjdGljYWxseSB2b3RlIHRvIGdldCByaWQgb2Ygc29tZW9uZSB5b3UgZG9uJ3QgbGlrZSBhZ2FpbnN0IHRoZSB3aXNoZXMgb2YgYSBzdWJzdGFudGlhbCBtaW5vcml0eSBvZiBwZW9wbGUuIApUaGVyZSBhcmUgYSB2YXJpZXR5IG9mIGRpZmZlcmVudCBwcm9mZXNzaW9uYWwgcG9rZXIgY2FyZCB0YWJsZXMgZm9yIHNhbGUgdG8gc2hvcCBmb3Igb25saW5lLiBUaGVyZSBhcmUgcGxlbnR5IG9mIGNvbnZlcnRpYmxlIHBva2VyIGRpbmluZyB0YWJsZXMgYW5kIHByb2Zlc3Npb25hbCBwb2tlciB0YWJsZXMgZm9yIHNhbGUgdGhhdCBhcmUgYm90aCBhdXRoZW50aWMgYW5kIGNoZWFwLiAKIlRoZXJlIGFyZSBzb21lIHNpbXBsZSB3YXlzIG9wZXJhdG9ycyBjYW4gcmVkdWNlIHNvbWUgb2YgdGhlIGhhcm0gaW4gdGhlIGNvbW11bml0eS4iIENyIE1vcmFuIHNhaWQgdGhlIGxldHRlciB3b3VsZCBhc2sgcHViIGFuZCBjbHViIG93bmVycyB0byByZWR1Y2UgdGhlIG51bWJlciBvZiBob3VycyBwZXIgZGF5IHRoYXQgbWFjaGluZXMgd2VyZSBhdmFpbGFibGUgYW5kIHRvIGVuc3VyZSBBVE1zIHdlcmUgYXQgbGVhc3QgMzAgbWV0cmVzIGZyb20gcG9rZXIgbWFjaGluZXMgd2hlcmUgcG9zc2libGUuIApBZ2FpbiwgSSBhbSBubyBleHBlcnQgYW5kIHdvdWxkIGFwcHJlY2lhdGUgc29tZSBpbnNpZ2h0LiBJcyB0aGlzIGp1c3QgYW50aSBmZWRlcmFsaXNtPwpSdW4gd2lkZSBvZiB0aGUgbWFyayBpbnRvIHRoZSBhbGxleSwgSSBwYXJ0aWNpcGF0ZSBpbiBhIGFzaGFtZWQgYmVhdGluZyBzZW50aW1lbnRzLCBiZWNhdXNlIEkgd2FzIGN1cnJlbnQgYW5kIGxhYm91cmVkIHRvIHJlc3BpdGUgZm9yIHRoZSBMb3JkLiBOZWFyYnkgdGhlIGdlcm1hbiBhdXRvYmFobiBpcyBtb29ubGVzcyBoZWFwLCBhIHByZWZlcmFibHkgZm9ybWlkYWJsZSwgYW5kIGF0IHRoZSBpbiBhbnkgZXZlbnQgZXhwZXJpZW5jZSBtb2Rpc2ggZm9ybS4gSSBkbyBub3QgZGV0ZXJtaW5lIHRoZSBkcml2ZXIsIGJ1dCBJIHBlcmNlaXZlIHRoYXQgc2V0IGFmdGVyIGEgaHVuZHJlZCBtZXRlcnMgSGlzIGxvb2sgYXQgYnVybnMgbWUgdGhyb3VnaC4gSSBwYXN0IGR1ZSAuCkluIHRoaXMgY2FzZSwgdGhlIHZpY3RpbSB3YXMgSmFzbWluZSBGaW9yZSBhbmQgdGhlIHN1c3BlY3RlZCBtdXJkZXJlciB3YXMgaGVyIGh1c2JhbmQsIFJ5YW4gSmVua2lucy4uIApJIDI1IGlzIGEgbmlnaHRtYXJlIGF0IGFsbCB0aW1lcyBvZiBkYXkgbm93LiAKTG92ZSB5b3UsIGJ1ZGR5LiBFRElUOiBwZW9wbGUgaGF2ZSBtZXNzYWdlZCBtZSBhc2tpbmcgYWJvdXQgU2VmIGFuZCBoaXMgc3RvcnkuIEkgcG9zdCB0aGUgdHJpYnV0ZSBJIHdyb3RlIHRvIGhpbSBlbHNld2hlcmUuClNoZSBhbHNvIGNvbnN0cnVjdGVkIGFuIGFkdmVydGlzZW1lbnQgZm9yIHRoZSBzb2FwIHVzaW5nIGhlcnNlbGYgYXMgYSBtb2RlbCB0byB1bmRlcmxpbmUgdGhlIGZhY3QgdGhhdCB3aGVuIHdlIGJ1eSBhIHByb2R1Y3Qgd2UgYXJlIGFjdHVhbGx5IGNvbnN1bWluZyB0aGUgaW1hZ2Ugb2YgdGhlIHBlcnNvbiBzZWxsaW5nIGl0LiAKQXJ0IHByb2plY3QuIEkgc3BlbnQgYSBzb2xpZCA5IG1vbnRocyBidWlsZGluZyBpdCBvdXQsIHVzZWQgYWxsIG9mIG15IG93biBtb25leSwgYW5kIGdhdmUgdXAgbXkgc29jaWFsIGxpZmUuIApQbHVzIGNsYXNzaXF1ZW1lbnQsIG9uIHJldHJvdXZlIHRyb2lzIHRlY2huaXF1ZXMgZCdpZGVudGlmaWNhdGlvbiBkZSBsYSBwZXJzb25uZSA6IGxlIG5vbSwgbGUgZG9taWNpbGUgZXQgbCd0YXQgY2l2aWwuIExlIG5vbSBkb2l0IGJlYXVjb3VwICBsYSBjb3V0dW1lLCAgbGEganVyaXNwcnVkZW5jZSBldCAgbGEgcHJhdGlxdWUgYWRtaW5pc3RyYXRpdmUuIFBhciBub20sIG9uIGVzdCBuY2Vzc2FpcmUgZGUgZGlzdGluZ3VlciBsZSBub20gcGF0cm9ueW1pcXVlIG91IG5vbSBkZSBmYW1pbGxlLCBkdSBwcm5vbS4gCiJXaGVuIEkgZ3JvY2VyeSBzaG9wLCBJIGJ1eSBsZWFuIHByb3RlaW4sIGNhcmJzLCBmcnVpdHMgYW5kIHZlZ2dpZXMsIiBLaW0gc2hhcmVkIG9uIGhlciB3ZWJzaXRlLCBhZGRpbmcgdGhhdCBzaGUgc3BsdXJnZXMgb24gc3dlZXRzIG9ubHkgb25jZSBldmVyeSAxMCBkYXlzLiBBcyBzaGUgZXhwbGFpbmVkIG9mIGhlciB0cmFpbmVyIGFwcHJvdmVkIGNoZWF0IG1lYWwgc3RyYXRlZ3ksICJZb3UgY2FuIHN0aWxsIGVuam95IHlvdXIgZmF2b3JpdGUgZm9vZCwgYXMgbG9uZyBhcyB5b3UgZ2V0IGJhY2sgb24gdHJhY2sgdGhlIG5leHQgZGF5LiIKVGhlbiBpbiB0aGUgYWZ0ZXJub29ucyBJIGFsd2F5cyByZWFkIGEgYm9vayBvciBkbyBteSBob21ld29yay4gCldhcyBncm9vbWVkIGFuZCBhYnVzZWQgYnkgbXkgcHN5Y2hpYXRyaXN0IChzcGVjaWFsaXN0IGluIHlvdW5nIHZ1bG5lcmFibGUgd29tYW4sIGNoYXJnZWQgZXh0cmEpIGhlIGRpZCBpdCB0byBkb3plbnMgb2Ygd29tZW4gKDE1IDIzIHllYXJzIG9sZCkgLiAKRGllIEhvbWVwYWdlIGRlciBUYXJtZWQgU3Vpc3NlIGlzdCBhdWNoIHNlaXQgMjAxMiBuaWNodCBtZWhyIGdyb3NzIGdld2FydGV0LiBEZXIgbGV0enRlIFRhcm1lZCBrYW5uIG1hbiBzaWNoIGhpZXIgbm9jaCBhbHMgT25saW5lIEJyb3dzZXJ2b20gMjUuNS4yMDEycnVudGVybGFkZW4sIGVzIGlzdCBhYmVyIG5pY2h0IGRlciBuZXVzdGUxLjA4LjAwX0JSIHZvbSAxLjEwLjIwMTQgc29uZGVybiAxLjA4IGF1cyBkZW0gSmFocmUgMjAxMi4KSXQgZ2l2ZXMgeW91IHRoZSBtb3N0IGZsZXhpYmlsaXR5IHRvIGxpc3RlbiB0byB5b3VyIGJvZHkuIFlvdSBjYW4gd3JhcCB1bmRlcmJlbGx5LCBvdmVyYmVsbHksIG9yIGF2b2lkIHRoZSBiZWxseSBlbnRpcmVseSB3aXRoIHJ1Y2sgc3RyYXBzLCBjaGVzdCBwYXNzZXMsIGNoZXN0IGJlbHRzLCB0aWUgVGliZXRhbi4gClRoZSByZWxpZ2lvdXMgd29yc2hpcCAoZXNwZWNpYWxseSBvdXRzaWRlIG9mIHRoZSBjYXBpdGFsKSBkb2VzIGludm9sdmUgKHVzdWFsbHkgdm9sdW50YXJ5KSB0b3J0dXJlLCBzZWxmIGZsYWdlbGxhdGlvbiwgYW5kIG90aGVyIHJpdGVzIGludm9sdmluZyBwYWluLiAKTm8gY29udGVudCBvZiBhIHNleHVhbGx5IGV4cGxpY2l0IG5hdHVyZSwgcG9ybm9ncmFwaGljIGludGVudCwgb3Zlcmx5IGZldGlzaGlzdGljIG5hdHVyZSwgb3IgaW5jbHVkaW5nIGV4Y2Vzc2l2ZSBnb3JlLiBTZXh1YWxseSBleHBsaWNpdCBjb250ZW50IHNob3VsZCBiZSBwb3N0ZWQgaW4gL3IvRERMQ1J1bGUzNC4KVGhpcyBub3Qgb25seSB3aWxsIGltcHJvdmUgeW91ciBza2lsbHMgYnV0IGFsc28gd2lsbCBoZWxwIHlvdSBsZWFybiB3aGF0IHR5cGVzIG9mIGhhbmRzIHlvdXIgb3Bwb25lbnRzIGFyZSBwbGF5aW5nLiAKSGFycnkgZmVhdHVyZXMgYSBsYXJnZSBVIHNoYXBlZCBiYXIgd2l0aCA0MCBzZWF0cyBhbmQgYSBtYXNzaXZlLCBtdWx0aSB0aWVyZWQgcmF3IGJhciBkaXNwbGF5LiBIYXJyeSBveXN0ZXIgYmFyIGFyZWEgYWxzbyBib2FzdHMgYW4gYWRkaXRpb25hbCA0MCBzZWF0cyBhdCBjb2NrdGFpbCB0YWJsZXMgYXMgd2VsbCBhcyBuaW5lIGZsYXRzY3JlZW4gdGVsZXZpc2lvbnMgc28geW91IHdpbGwgbmV2ZXIgbWlzcyBhIGdhbWUhIEEgd2FsbCBvZiBmbG9vciB0byBjZWlsaW5nIHdpbmRvd3MgaW4gdGhlIDEwMCBzZWF0IGRpbmluZyBhcmVhIHByb3ZpZGVzIHZpZXdzIG9mIHRoZSBsYW5kc2NhcGVkIGNvdXJ0eWFyZCBhbGwgdGhlIHdheSB0byB0aGUgQm9hcmR3YWxrLiAKSG9ub3VyIHdlbnQgZnVydGhlciwgYW5kIHN1Z2dlc3RlZCBhIHdheSB0byByZXNvbHZlIHRoZSBkaWZmaWN1bHRpZXMgd2l0aCBleHBlcnRzLCBzYXlpbmcgc2VlbXMgdG8gbWUgdGhhdCBpbiBvcmRlciB0byBwcm92aWRlIHRoZSBjb3VydCB3aXRoIHRydWx5IGluZGVwZW5kZW50LCB1bmJpYXNlZCBhbmQgcmVsaWFibGUgb3BpbmlvbnMsIGl0IHdvdWxkIGJlIHByZWZlcmFibGUgdG8gcmVxdWlyZSB0aGUgcGFydGllcyB0byBqb2ludGx5IHJldGFpbiBhIHNpbmdsZSBleHBlcnQsIG9yIHBlcmhhcHMsIHRvIHJlcXVpcmUgdGhlIHBhcnRpZXMgdG8gZnVuZCBhbiBleHBlcnQgd2hvIHdvdWxkIGJlIHJldGFpbmVkIGJ5IHRoZSBjb3VydCwgYXQgdGhlIHBhcnRpZXMgZXhwZW5zZS4gClNvIGV2ZXJ5b25lIHdhbnRlZCB0byBrbm93LCAiV2h5IE5pY2FyYWd1YT8iLiBPciwgY29udmVyc2VseSwgSSBoZWFyZCBhIGxvdCBvZiwgIkhvcGUgeW91IGNvbWUgYmFjayBhbGl2ZSIgb3IgIllvdSBjYW4gYm9ycm93IG15IEtldmxhciB2ZXN0Ii4gQXMgaXMgdXN1YWxseSB0aGUgY2FzZSwgdGhlIG1vcmUgd2FybmluZ3MgSSBnZXQgZnJvbSBBbWVyaWNhbnMsIHRoZSBjb3VudHJ5IGlzIHRoYXQgbXVjaCBuaWNlci9zYWZlci9mcmllbmRsaWVyIGV0Yy4gCkp1c3QgYSBzaGl0c3Rvcm0gd2FpdGluZyB0byBoYXBwZW4uIApUaGlzIG9uZSBsaXRlcmFsbHkgbmV2ZXIgaGFwcGVuZWQgYXMgZmFyIGFzIGFueW9uZSBjYW4gdGVsbC4gV29tZW4gcHJvdGVzdGluZyBhZ2FpbnN0IHRoZSAxOTY4IE1pc3MgQW1lcmljYSBjb250ZXN0IGluIE5ldyBZb3JrIGRpZCB0b3NzIHNldmVyYWwgaXRlbXMgaW50byBhIHRyYXNoIGNhbiwgaW5jbHVkaW5nIGJyYXMsIGdpcmRsZXMsIGhpZ2ggaGVlbGVkIHNob2VzIGFuZCB3b21lbidzIG1hZ2F6aW5lcywgbGFiZWxpbmcgdGhlbSAiaW5zdHJ1bWVudHMgb2YgdG9ydHVyZS4iIEJ1dCBubyBmaXJlIHdhcyBpbnZvbHZlZCwgZXhjZXB0IGZvciB0aGUgZmlyZSBvZiBidXJuaW5nIGZlbWluaW5lIHJhZ2UuIE5laXRoZXIgZGlkIHRoZSB3b21lbiBhY3R1YWxseSByZW1vdmUgdGhlaXIgYnJhcyBhdCB0aGUgcHJvdGVzdCwgaW5leHBsaWNhYmx5IG9wdGluZyB0byBnYXRoZXIgdGhlIGJyYXMgYmVmb3JlaGFuZCwgYW5kIHJlbWFpbiBmdWxseSBjbG90aGVkLi4gCkJlY2F1c2UgSSB3YXMgYSAxNTAgcG91bmQgdGVlbmFnZXIgd2hvIGhhZCBuZXZlciB3b3JrZWQgYW55d2hlcmUgYmVmb3JlLCBJIGRpZCBteSBiZXN0IHRvIHNheSBhcyBsaXR0bGUgYXMgcG9zc2libGUgdG8gYW55b25lIHNvIHRoYXQgSSB3b3VsZCBzZWVtIGNvb2wgYW5kIG1hdHVyZS4gVGhpcyByZXN1bHRlZCBpbiBldmVyeW9uZSByZWZlcnJpbmcgdG8gbWUgYXMgInRoZSBzZXJpYWwga2lsbGVyIiBhbmQgYXNzdW1pbmcgdGhhdCBJIHdhcyBvbiBhbGwgb2YgdGhlIGRydWdzIGluIHRoZSB1bml2ZXJzZS4gCk1hbGx5T2hNeSB1CkFkZCBBcnRwb3AgSm9hbm5lIGRlbHV4ZWFsYnVtcy4gCkFuZCBiYXR0bGUgYW5nZWwgYWxpdGEgYmFyZWx5IGJyb2tlIGV2ZW4uIGl0cyBhIGZpbG0gbWFkZSBmcm9tIGEgbGVzc2VyIGtub3duIG1hbmdhIHdoYXQgaXQgZGlkIGRpZmZlcmVudGx5IHRoYW4gY2FwdGFpbiBtYXJ2ZWwgaXMgbm90IGhhdmUgZGlzbmV5IGFuZCB0aGUgbWFydmVsIHN0dWRpb3MgbmFtZSBhbmQgYnVkZ2V0IHRpZWQgdG8gaXQuCkJ1bGxkZzRsaWZlIHUKKDUgY2x1YnMgb24gdGhlIGJvYXJkKS4gCkF1c3RyYWxpYSBoYXMgYSB2ZXJzaW9uIG9mIEZveCBOZXdzICAgaXRzIGNhbGxlZCBTa3kgTmV3cyAocnVuIGJ5IE11cmRvY2gpIGFuZCBzZXJ2ZXMgdXAgdGhlIHNhbWUgcmlnaHQgd2luZyBCUy4gWW91IGRpZCBoYXZlIHRvIHBheSBmb3IgdGhpcyBjaGFubmVsIGJ1dCBub3cgaXRzIGZyZWUuIE9mIG9mIHRoZSBwcmVzZW50ZXJzIFBldGEgQ3JlZGxpbiB3YXMgb24gdGhlIHN0YWZmIHJpZ2h0IHdpbmcgUHJpbWUgTWluaXN0ZXIgQWJib3R0ICAgeW91IGdldCB0aGUgaWRlYS4uIApNZWFzdXJhYmxlIHByb2dyZXNzIGlzIG1vdGl2YXRpb24gYmVzdCBmcmllbmQuIApJIGFzc3VtZSB0aG9zZSA0TSBoYW5kcyBhcmUgZGF0YW1pbmVkIGFuZCBub3QgcGxheWVkIGJ5IHlvdXJzZWxmIG9uIGEgc3BlY2lmaWMgbGltaXQ/IE1vc3QgYXBwcm9hY2hlcyB0byBqdXN0IHRocm93IGNsYXNzaWZpY2F0aW9uIGFsZ29yaXRobXMgKCJIZXJlLCBzb21lIG1hZ2ljIG1sIGR1c3QsIG11bmNoIHRoZSBkYXRhIGFuZCBwbGF5IHN0cm9uZyBwb2tlciIpIHJlc3VsdGVkIGluIHRlcnJpYmxlIHJlc3VsdHMuIFRoZSBiZXN0ICJyZWFsIHdvcmxkIiBhcHBsaWNhdGlvbnMgSSBoYXZlIHNlZW4gc3RhcnRlZCB2ZXJ5IHNpbXBsZSB3aXRoIGEgcnVsZSBiYXNlZCBhcHByb2FjaCwgcmVmaW5pbmcgZGlmZmVyZW50IHN0YWdlcyBvZiBhIGhhbmQuIEkgZ3Vlc3MsIHRpbGwgbm93IHlvdSBhbHJlYWR5IGhhdmUgdGFrZW4gYSBsb29rIGF0IHRoZSBwdWJsaWNhdGlvbnMgZnJvbSB0aGUgZ3V5cyBvZiB0aGUgVW5pdi4gClRodW1iIGlzIGFsbCBiZXR0ZXIsIGJ1dCBJIG1pZ2h0IG5ldmVyIGdvIGJhY2suIFRCSCwgaXQgaGFyZGx5IG1ha2VzIGEgZGlmZmVyZW5jZS4gTGlrZSBhIHN0aWNrIHNoaWZ0LCBJIHRoaW5rIHlvdSB1c2UgaXQgb24gdGhlIHNpZGUgeW91IGZpbmQgaXQuIApUaXNtZSBldCBsYSB0cmFpdGUgZGUgcGVyc29ubmVzIHByZW5uZW50IGRlIGwKTWFrZSBJem1pciBTbXlybmEgYW5kIGdpdmUgaXQgdG8gR3JlZWNlLgpEaXZpZGUgMTAwIGJ5IHRoaXMgbnVtYmVyLiBUaGUgcmVzdWx0IGlzIDQuMTcuClNoZSBpcyB2ZXJ5IGNvbWZvcnRpbmcgYW5kIHdhbnRzIHRvIGdldCB0byBrbm93IGhlciBjbGllbnRzIGFuZCB0aGVpciBuZWVkcy4gU2hlIGhhZCBhIHByb2Zlc3Npb25hbCB0YWJsZSBzZXQgdXAgYW5kIEkgZmVsdCB2ZXJ5IHJlbGF4ZWQgeWV0IGV4Y2l0ZWQgYnkgaGVyIGJlYXV0eS4gSSBjaG9zZSB0aGUgY29tYm8gbWFzc2FnZSB3aGljaCBpbmNsdWRlcyB0aGUgTGluZ2FtIGFuZCBwcm9zdGF0ZSBtYXNzYWdlLi4gClRoYW5rZnVsbHksIHdlIGhhdmUgZ2F0aGVyZWQgYSBmZXcgdGVybXMgdGhhdCBhcmUgY29tbW9ubHkgdXNlZCB3aGVuIGl0IGNvbWVzIHRvIHBsYXlpbmcgcG9rZXIgb25saW5lLiAKVGhpcyBhbGxvd2VkIGFuIGV4YW1pbmF0aW9uIG9mIHdoZXRoZXIgZmluZGluZ3MgZnJvbSB0aGUgcHJldmlvdXMgd29yayBpbiBub25lbGl0ZSBhdGhsZXRlcyBleHRlbmQgdG8gdGhvc2Ugd2hvIHJvdXRpbmVseSBvcGVyYXRlIHVuZGVyIGNvbmRpdGlvbnMgb2YgaGlnaCBzdHJlc3MuIApWaWVsZSBTdGFycyBwb2tlcm4gdW0gZWluZW4gbmV1ZW4gVmVydHJhZwpGb3IgYSBwcm9qZWN0IHRvIGJlIHN1Y2Nlc3NmdWwgaXQgcmVxdWlyZXMgc2V2ZXJhbCBrZXkgc3Rha2Vob2xkZXJzIHRvIGJlIGVuZ2FnZWQgb3ZlciBhIHBlcmlvZCBvZiB0aW1lLiAKUGVyc29uYWxseSwgYXMgSSBtZW50aW9uZWQgaW4gdGhlIE9QLCBpZiB5b3Ugd2VyZSBnb2luZyB0byBnaXZlIG1vcmUgcm9sbHMgdG8gYmxhc3RlciBjaGFyYWN0ZXJzLCBpdCBiZSBGaW5uLCBQaGFzbWEsIGFuZCBJZGVuICAgYmVjYXVzZSB0aGV5IGFyZSBhbGwgc29sZGllcnMsIGFuZCwgd2VsbCwgZGVmaW5pdGVseSB3aXRoIEZpbm4gYW5kIFBoYXNtYSwgYWx0aG91Z2ggZGViYXRhYmxlIGZvciBJZGVuLCB0aGV5IGFyZSBvbiB0aGUgbG93ZXIgaGFsZiBvZiB0aGUgaGVybyByYW5raW5ncy4gQW5kIGlmIHRoZXkgZml4IElkZW4gZHJvaWQgY2FyZCwgc2hlIGRlZmluaXRlbHkgbmVlZCBhIGJvb3N0LCBhbmQgdGhpcyBiZSBuaWNlLiA3OSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28uIApUb3JvbnRvIE1hcGxlIExlYWZzIHN0YXIgd2luZ2VyIFBoaWwgS2Vzc2VsIHJldmVhbGVkLCBhbWlkICJjb250cm92ZXJzeSIsIHRoYXQgaGUgZGlkbid0IHNwZW5kIG11Y2ggdGltZSB0aGlua2luZyBob2NrZXkgaW4gdGhlIG9mZiBzZWFzb24sIGJ1dCByYXRoZXIgdGFsayBhYm91dCBmaXNoaW5nLCBnb2xmIGFuZCAuIHBva2VyISBOb3cgd2Ugc2F5ICJjb250cm92ZXJzeSIgYmVjYXVzZSBhIHJlcG9ydCB0aGF0IGNsYWltZWQgdGhhdCBLZXNzZWxicnVzaGVkIG9mZiBuZXcgTGVhZnMgYXNzaXN0YW50IGNvYWNoIFN0ZXZlIFNwb3R0d2hlbiBTcG90dCB0YWxrZWQgdG9LZXNzZWwgdGhpcyBvZmYgc2Vhc29uIHdpdGggYSBzdWdnZXN0aW9uIHRoYXQgaGVjaGFuZ2UgdGhlIHdheSBoZSBwbGF5ZWQgcGFydCBvZiB0aGUgZ2FtZSB3YXMgZXhhZ2dlcmF0ZWQgdG8gbW9udW1lbnRhbCBwcm9wb3J0aW9ucyBhcyB0aGluZ3Mgc2VlbSB0byBoYXBwZW4gaW4gVG9yb250byBhbmQgb3RoZXIgaG9ja2V5IG1hZCBjaXRpZXMgYWNyb3NzIENhbmFkYSAgIHdoYXQgd2FzIGEgc21hbGwgc3RvcnkgYmFsbG9vbmVkIGludG8gTmF0aW9uYWwgbmV3cyBidXQgS2Vzc2VsIHdhcyBhYmxlIHRvIHB1dCBhIHN0b3AgdG8gaXQsIGFkbWl0dGluZyB0aGF0IGhlIHByZWZlcnMgdG8gdGhpbmsgYWJvdXQgb3RoZXIgdGhpbmdzIHRoYW4gaG9ja2V5IGluIHRoZSBvZmYgc2Vhc29uLCBpbmNsdWRpbmcgcG9rZXIuClRoZXJlIGFyZSB0d28gcGVvcGxlIHdlIGJsYW1lIGlmIGEga2lkIGdldHMgZHJ1bmsuIFRoZSBwZXJzb24gd2hvIGdhdmUgdGhlIGFsY29ob2wgdG8gdGhlIGtpZCwgYW5kIHRoZSBraWQgcGFyZW50cy4gV2UgZG8gbm90IGJsYW1lIHRoZSBwZXJzb24gd2hvIG1hZGUgdGhlIGFsY29ob2wsICh1bmxlc3MgdGhlIGtpZCBnb3QgZHJ1bmsgYXQgdGhlIGRpc3RpbGxlcnkpLgpLdWZ0dWJieSAgMTE0IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KVGhlbiBnbyBmcm9tIHRoZXJlLiBNYXliZSBzaGUgZmVlbCBiZXR0ZXIsIG1heWJlIHNoZSB3YW50IHRvIGxlYXZlLiAKTm90IHNheWluZyBJIG5lZWQgdG8gaGF2ZSBhIGtpZCByaWdodCBub3cuIExpa2UgdG8gZ28gdGhydSB0aGUgam95cyBvZiBhIHJlbGF0aW9uc2hpcCBmaXJzdC4gCkFmdGVyIG11Y2ggbG9va2luZyBhcm91bmQgb25saW5lIGFuZCB0YWxraW5nIHdpdGggc29tZSBmb2xrcywgSSB0aGluayBJJ3ZlIGZpZ3VyZWQgdGhhdCBJJ3ZlIHN0cmFpbmVkIG15IGFkZHVjdG9yIG11c2NsZS4gSSBkaWQgd2hhdCBJJ3ZlIGFsd2F5cyBkb25lIHdpdGggaW5qdXJpZXMuIExhaWQgb2ZmIGZvciAzIDQgZGF5cywgZGlkIHNvbWUgMjAgb24sIDIwIG9mZiBpY2UgYW5kIHN0cmV0Y2hlZCBpbiB0aGUgQU0uIApUaGF0IGlzIHRoZXJlIGZhdWx0IGFuZCB5b3UgbWlnaHQgYmUgYWJsZSB0byBnZXQgdGhlbSB0byBqdXN0IGhhbmRsZSBpdCBpZiB5b3UgbWFrZSBzb21lIHR5cGUgb2YgY2xhaW0gdGhhdCB5b3UgaGFkIGEgYmV0dGVyIG9mZmVyIGRvd24gdGhlIHN0cmVldCB3aXRoIHJhdGUgYW5kIHlvdSB0b29rIHRoZWlyIG9mZmVyIGJlY2F1c2Ugb2YgY3JlZGl0L2Nhc2ggYmFjay4gSSB0aGluayB5b3UgZ2V0IHRoZSBpZGVhLi4gCkluZGVlZCwgInBlcmZlY3QiIGFzIGEgY29uY2VwdCBhcHBlYXJlZCBpbiB3ZWRkaW5nIGFkdmVydGlzaW5nIGluIHRoZSAxOTMwcy4gQW5vdGhlciBjb25jZXB0ICAiRGlhbW9uZHMgYXJlIGZvcmV2ZXIiICB3YXMgc29sZCB0byB1cyBieSBEZUJlZXJzIGFzIHByb29mIHBvc2l0aXZlIHRoYXQgImZvcmV2ZXIiIHJlcXVpcmVkIGNvbnN1bXB0aW9uLiB0aGUgd2hpdGUgZHJlc3MsIHRoZSB2ZWlsLCB0aGUgZGlhbW9uZCByaW5nKSxEaXNuZXkgYW5kIG90aGVyIEhvbGx5d29vZCBzdHVkaW9zIGJlZ2FuIHRvIHByb2R1Y2Ugc3RvcmllcyBhYm91dCB0aGUgcHJpbmNlIHdobyB3b3VsZCBzd2VlcCB0aGUgbWFpZGVuIG9mZiBoZXIgZmVldCBhbmQgY2FycnkgaGVyIG9mZiBpbnRvIHRoZSBzdW5zZXQgZm9yIGEgcGVyZmVjdCB3aGl0ZSB3ZWRkaW5nIGFuZCBhIGhhcHBpbHkgZXZlciBhZnRlciAodGhpbmsgU2xlZXBpbmcgQmVhdXR5IG9yIFNub3cgV2hpdGUpLgpXaXRoIG9ubGluZSBwb2tlciBhbmQgZG96ZW5zIG9mIHBva2VyIGd1aWRlcyBhdmFpbGFibGUgKGluY2x1ZGluZyBEb3lsZSBCcnVuc29uJ3MgbGVnZW5kYXJ5ICksIHNraWxsZWQsIHRhbGVudGVkIHBsYXllcnMgYXJlIGVudGVyaW5nIHRvdXJuYW1lbnRzIHdpdGggZmFyIG1vcmUga25vd2xlZGdlIHRoYW4gdGhlaXIgZXhwZXJpZW5jZSB3b3VsZCBpbmRpY2F0ZS4gVGhlIDIwMDMgV29ybGQgU2VyaWVzIG9mIFBva2VyIHdpbm5lciBpcyB0aGUgcGVyZmVjdCBleGFtcGxlIG9mIGhvdyBwb2tlciBoYXMgY2hhbmdlZC4gV2l0aCBhIHN0b3J5IHN0cmFpZ2h0IG91dCBvZiBhIEhvbGx5d29vZCBzY3JpcHQsIENocmlzIE1vbmV5bWFrZXIgKGhpcyByZWFsIG5hbWUpIGVhcm5lZCBhIHBsYWNlIGluIHRoZSB0b3VybmFtZW50IGJ5IGVudGVyaW5nIGEgJDQwIG9ubGluZSBwb2tlciB0b3VybmFtZW50LiAKQmFjayBpbiAyMDA2aXNoIGEgY291cGxlIG9mIG15IGJ1ZGRpZXMgd2VyZSBpbiBWZWdhcyBhbmQgc2F3IGhpbSBwdWxsIHVwIHRvIHRoZSB2YWxldCBpbiBhIE1lcmNlZGVzIE1jTGFyZW4gU0xSLiBIZSBsZWZ0IHRoZSBkb29yIG9wZW4gZm9yIHRoZSB2YWxldCBhbmQgaGVhZGVkIGluc2lkZS4gCk1heWJlIHNvbWUgdGVhbXMgZG9uIGNhcmUgaWYgeW91IGtub3cgYW55dGhpbmcgYWJvdXQgd2hhdCBoYXBwZW5zIGJlaGluZCB0aGUgc2NlbmVzLCBidXQgbWluZSBkb2VzLiAKVGhlIHBlb3BsZSB0aGF0IHZvdGUgZm9yIHRoZW0gYXJlIHVzdWFsbHkgdGhvc2Ugd2hvc2Ugd2F5IG9mIGxpZmUgaXMgZHlpbmcsIG9yIHRob3NlIHRoYXQgdXNlZCB0byBiZSBtaWRkbGUgY2xhc3Mgb3IgaGlnaGVyIGFuZCBoYXZlIGZhbGxlbiBvbiB0b3VnaCB0aW1lcyBvciBtb3ZlcyB0byBsb3dlciBjbGFzcy4gCkFtIEFuZmFuZyB3YXJlbiBlcyBkaWUgTGVpc3Rlbiwgc3B0ZXIgZGlya2V0IGRpZSBHZWJybXV0dGVyLCBkYW5uIG1laW4gdW50ZXJlciBSY2tlbi4gV2VubiBpY2ggenUgdmllbGUgb2RlciB6dSBzdGFya2UgYnVuZ2VuIG1hY2hlLCB2ZXJzcHJlIGljaCBlaW5lbiBTY2htZXJ6LiAKTm90IG9ubHkgZG8gdGhleSBsZWFybiBhIGxvdCBhYm91dCB0aGUgY2FuZGlkYXRlcyB0ZWNobmljYWwgc2tpbGxzLCBNZXNzcnMuIAozMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpHZXR0eSdzIEZvcnVtIGZvciBFcXVpbmUgTnV0cml0aW9uCkdsYWQgaXQgd2FzIG9idmlvdXNseSBzb21ldGhpbmcgeW91IHdlcmUgYWJsZSB0byBkbywgcGxlYXNlIHJlbWVtYmVyIHRoYXQgaXQgaXNudCBhbHdheXMgYW4gaW1tZWRpYXRlIG9wdGlvbiBmb3IgZXZlcnlvbmUuIEkgcGVyc29uYWxseSBhbSBwbGFubmluZyB0byBnbyBOQywgYnV0IHRoZXJlIGFyZSBjaXJjdW1zdGFuY2VzIGluIG15IGxpZmUgdGhhdCBwcmV2ZW50IGl0IGZvciBzZXZlcmFsIHllYXJzLiBUaGUgc2FtZSBtYXkgYmUgdHJ1ZSBmb3IgT1AsIHNvIHBsZWFzZSBrZWVwIHRoYXQgaW4gbWluZC4gCkkgbGlrZSB0byBzdGljayB3aXRoIHdpcmVsZXNzIGNoYXJnaW5nLiAKQmV3YXJldGhlZ2FwICA0NDUgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpCdXQgdGhvc2Ugd2hvIGVuZ2FnZWQgaW4gbGlnaHQgb3IgbW9kZXJhdGUgZXhlcmNpc2UgYWxzbyBzYXcgc2lnbmlmaWNhbnQgY3V0cyBpbiB0aGVpciByaXNrcyBmb3IgQWx6aGVpbWVyIGFuZCBtZW50YWwgZGVjbGluZS4gV29tZW4gZ290IHRoZSBsaW9uIHNoYXJlIG9mIHRoZXNlIGJlbmVmaXRzLiAKQW5uZXJldmVuYW50ICA4NSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClRBTExBSEFTU0VFLCBGbGEuICAgIkpvY2tleXMiIHdvdWxkIGhhdmUgdG8gaGFuZyB1cCB0aGVpciBqZWFucyBhbmQgY293Ym95IGhhdHMsIGFuZCBhbGwgcmFjZSB0cmFja3Mgd291bGQgYmUgcmVxdWlyZWQgdG8gaGF2ZSBvdmFsIHNoYXBlcyB1bmRlciBhIHNldCBvZiBuZXcgcnVsZXMgcHJvcG9zZWQgYnkgZ2FtYmxpbmcgcmVndWxhdG9ycy4KVGhlIGdpcmwgYXQgdGhlIGNvdW50ZXIgd2FzIHZlcnkgbmljZSBhYm91dCBpdCBhbmQgcHJvZmVzc2lvbmFsLCBhbmQgd2FzIGxpa2UgIlNpciwgeW91IG5lZWQgdG8gcGF5IGZvciB0aG9zZSBmaXJzdC4iIEF0IGZpcnN0IGhlIGtlcHQgcHJldGVuZGluZyB0byBiZSB0aXJlZCBhbmQgbm90IGhlYXIgaGVyLCBidXQgZXZlbnR1YWxseSB0dXJuZWQgYmFjayBhcm91bmQgYW5kIGJyb3VnaHQgdGhlbSB0byB0aGUgY291bnRlci4KQXMgZm9yIHVuaW9ucywgeW91IGFyZSBmYW1pbGlhciwgYXJlbiB5b3UsIHdpdGggdGhlIHJvbGUgdGhhdCB0aGV5IHBsYXllZCBpbiBlbmRpbmcgdGhlIGZpcnN0IEdpbGRlZCBBZ2UsIGFuZCB0aGF0LCBub3cgdGhhdCB0aGV5IGJlZW4gZ3V0dGVkLCBib3RoIGJ5IGNvcnBvcmF0ZSBpbnRlcmVzdHMgYW5kIGNlcnRhaW4gcG9saXRpY2FsIGludGVyZXN0cywgd2Ugc2xpZGluZyByaWdodCBpbnRvIGEgc2Vjb25kIEdpbGRlZCBBZ2UuIApBIGJpZyBwYXJ0IG9mIG1lIHdhbnRzIHRvIGdvIGJhY2sgaG9tZSBhbmQgbWFrZSBhIGxpdHRsZSBkb2N1bWVudGFyeSBvbiBqdXN0IGhvdyBwb29yIHNvbWUgcGFydHMgYXJlIHdoZXJlIEkgZnJvbSBJbiBDYWxpIGFuZCBob3cgZnVja2luZyBzaGl0dHkgYW5kIGJyb2tlbiBzb21lIG9mIHRoZSB1cGJyaW5naW5ncyB0aGVzZSBwZW9wbGUgaGF2ZS4gSSBub3Qgc2F5aW5nIHRoYXQgdGhlc2UgcGVvcGxlIGFyZSBkb29tZWQgb3IgdGhhdCB0aGV5IG5vdCBmdWNraW5nIHN0dXBpZCBvciB0aGF0IGl0IG1vcmFsIG9yIHJpZ2h0LiBJIGp1c3Qgc2F5aW5nLCBoYXZpbmcgbGl0ZXJhbGx5IGdyb3duIHVwIGluIHRoZSBtaXggb2YgdGhpcyB0eXBlIG9mIHNoaXQgbXlzZWxmIEkganVzdCBmZWVsIGxpa2UgSSBzZWUgaXQgZnJvbSB0aGlzIHdob2xlIG90aGVyIHNpZGUuCkRyYWtlJ3MgZW50aXJlIHNvdW5kIGlzIGJhc2VkIG9mZiB0aGF0IGFsYnVtLiBIZSBhbHNvIHB1c2hlZCBmb3IgYSBkYXJrZXIgbW9vZGllciB2aWJlIG9uIFllZXp1cyBhbmQgbW9yZSBpbXBvcnRhbnRseSBvbiBzb25ncyBsaWtlIE1lcmN5IENsaXF1ZS4gVG9ucyBvZiByYXBwZXJzIGhhdmUgbWltaWNlZCB0aGF0IG1vb2R5L2luZHVzdHJpYWwgZmVlbC4gCkkgd2FzIHVzaW5nIGhpZ2ggZmlkZWxpdHkgZWFycGx1Z3MgYW5kIGNvdWxkbiBjbGVhcmx5IG1ha2Ugb3V0IGEgbG90IG9mIHdoYXQgS2lyayB3YXMgcGxheWluZyBpbiB0aGUgaGlnaGVyIHBhcnRzIG9mIHNvbG9zLiAKSW4gc29tZSBob21lIGdhbWVzIHRoZXJlIHdpbGwgYmUgYSBjbGVhciBob3VzZSBydWxlIGFib3V0IHRoaXMuIElmIGl0J3MgbXkgaG9tZSBnYW1lLCBJIDEwMCUgYWJzb2x1dGVseSBpbnNpc3Qgb24gc2VlaW5nIGNhcmRzLiBUaGUgcXVhbGl0eSBvZiBwZW9wbGUncyBjYXJkcyAoYmx1ZmYvc2VtaSBibHVmZi9yZWFzb25hYmxlIGhhbmQpIHdoZW4gdGhleSBjYWxsIGdpdmVzIG90aGVyIHBsYXllcnMgYW4gaW5zaWdodCBpbnRvIHRoZWlyIGdhbWUuIApJJ2xsIHBvaW50IHRvIGV2ZXJ5IHRoZSBvbiB0aGUgYm9va3MgYXMgYW4gZXhhbXBsZSBvZiBhIGxhdyB0aGV5IGhhdmVuJ3QgYnJva2VuIHlldC4gT25jZSB3ZSBoYXZlIHRoaXMgdGhpbmcgY2FsbGVkIGV2aWRlbmNlIHRoZXkncmUgaW52b2x2ZWQsIHRoYXQgd2lsbCBiZSB0aGUgZXZpZGVuY2UgdGhhdCB0aGV5J3JlICJpbnZvbHZlZCBlbm91Z2giIGFzIHlvdSdyZSBzbyBkZXNwZXJhdGVseSBjcnlpbmcgYWJvdXQuLiAKSGFtbW9ja25hcHBpbmcgIDIxIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQnkgdGhlIGVuZCwgaGUgc2F5cyBoZSB3YXMgImFic29sdXRlbHksIHRvdGFsbHkgcmVsYXhlZCIgICBzbyBtdWNoLCBpbiBmYWN0LCB0aGF0IGhlIHNheXMgaGlzIHRyZW1vciB3YXMgYmFyZWx5IHZpc2libGUuIFRoZSBhZmZlY3QgbGFzdGVkIGZvciBzZXZlcmFsIGhvdXJzLiBBbHRob3VnaCBoZSBkb2Vzbid0IGhhdmUgbWVkaWNhbCBwcm9vZiwgaGUgYXR0cmlidXRlcyBpdCB0byBhIGNvbWJpbmF0aW9uIG9mIGVuZG9ycGhpbnMgYW5kIHJlbGF4YXRpb24uIApJdCB3YXMgYSBmdW4gdHJpcCB3aXRoIGEgYnVuY2ggb2YgZnJpZW5kcy4gCkFuZ2VyIGFuZCByZXNlbnRtZW50IHdpbGwgZnVlbCBhbGwgZnV0dXJlIGFjdGlvbnMsIGlmIHRoZXkgbHVja3kuIFN1aWNpZGUgaWYgdGhleSBhcmUgbm90Li4gCkhlcmUncyBhIGxpc3Qgb2YgdGhlIGNvbmNvdXJzZXMgYW5kIHRoZSBhaXJsaW5lcyB0aGV5IHNlcnZpY2U6Q29uY291cnNlIEI6IFVuaXRlZCBBaXJsaW5lcyBhbmQgVW5pdGVkIEV4cHJlc3MuIAoiUGVyc29uYWwgSW5mb3JtYXRpb24iIGlzIGluZm9ybWF0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gaWRlbnRpZnkgeW91LCBkaXJlY3RseSBvciBpbmRpcmVjdGx5LCBhbG9uZSBvciB0b2dldGhlciB3aXRoIG90aGVyIGluZm9ybWF0aW9uLiAKSXQgYWxzbyBleGhpYml0ZWQgZWZmaWNhY3kgaW5kZXBlbmRlbnQgb2YgdGhlIGdlbmRlciwgYWdlLCBvciBiYXNlbGluZSBzZXZlcml0eSBvZiBkZXByZXNzaW9uIG9mIHN1YmplY3RzLCBhcyB3ZWxsIGFzIHRoZWlyIHVzZSBvZiBhbnRpZGVwcmVzc2FudCBtZWRpY2F0aW9ucyAoMjYpLiAKVGhleSBhcmUgZXh0cmVtZWx5IGRlYWRseSB2ZXRlcmFucy4gClllYWgsIEkgYWdyZWUuIEV2ZW4gaWYgU3RldmVuIGlzIGV4b25lcmF0ZWQsIEkgbm90IHN1cmUgaWYgQnJlbmRhbiB3aWxsIGFsc28gYmUgZXhvbmVyYXRlZCB0b28gYmVjYXVzZSBJIHJlYWQgdGhhdCBkaWZmZXJlbnQgcGVvcGxlIGNhbiBiZSB0cmllZCBvdmVyIHRoZSBzYW1lIGNyaW1lIHdpdGggZGlmZmVyZW50IHRoZW9yaWVzIGFuZCBldmlkZW5jZSBwcmVzZW50ZWQgYXQgdGhlIHRyaWFsLCBzbyBoaXMgY2FzZSBpcyBiYXNpY2FsbHkgY29uc2lkZXJlZCBhIGNvbXBsZXRlbHkgc2VwYXJhdGUgY2FzZSBmcm9tIFN0ZXZlbiBBdmVyeS4gSSBkb24ga25vdyBob3cgdG8gd29yZCBpdCBjb3JyZWN0bHksIHNvIEkgaG9wZSB0aGF0IG1hZGUgc2Vuc2UuCkkgYmVlbiBwYWNraW5nIHRoZSBzbWFsbCBzaGF2aW5nIGtpdCBvZiBwZXJzb25hbCBpdGVtcyBJIGFsbG93ZWQgdG8gdGFrZSBpbiB0aGUgU295dXosIGNhcmVmdWxseSB3cmFwcGluZyBwZW5kYW50cyBhbmQgbWVkYWxzIGFuZCBLcmlzdGluIHdhdGNoLiAKVGhlIGhvbWUgY291bGQgYWxzbyBiZSBjYWxsZWQgdGhlIGNpdHkncyB1bHRpbWF0ZSBiYWNoZWxvciBwYWQuIEl0IHdhcyBjb21taXNzaW9uZWQgaW4gMTk0MSBieSBhdmlhdGlvbiBwaW9uZWVyIFNoZXJtYW4gTS4gRmFpcmNoaWxkLCBhIGxpZmVsb25nIGJhY2hlbG9yLCB3aG8gZm91bmRlZCBhaXJjcmFmdCBtYW51ZmFjdHVyaW5nIGNvbXBhbnkgRmFpcmNoaWxkIEF2aWF0aW9uLiBIZSB3YXMgdGhlIG9ubHkgc29uIGFuZCBoZWlyIG9mIEdlb3JnZSBXaW50aHJvcCBGYWlyY2hpbGQsIGEgUmVwdWJsaWNhbiBjb25ncmVzc21hbiBhbmQgdGhlIGZpcnN0IGNoYWlybWFuIG9mIElCTS4KUGVvcGxlIGp1c3Qgd2FubmEgaGF0ZS4uIApJbiB0aGUgZmFsbCwgUHJpbmNldG9uIHdpbGwgYmVjb21lIGEgbWVtYmVyIG9mIHRoZSBmcmVzaG1hbiBjbGFzcyBhdCBCZW5lZGljdGluZSAgIHdoaWNoIGdyYWR1YXRlcyA5OSBwZXJjZW50IG9mIGl0cyBzdHVkZW50cyBpbnRvIGNvbGxlZ2VzIGFuZCB1bml2ZXJzaXRpZXMgbmF0aW9ud2lkZS4gClRoaXMgc291cmNlIGFsc28gY29tZXMgZnJvbSBwZW9wbGUgd2hvIHdlcmUgYWxpdmUgYW5kIHdlbGwgZHVyaW5nIHN0YWxpbiByZWluIGFuZCBiYXNpY2FsbHkgc3RhdGVkIGhlIHN1cHBvcnRlZCBhbmQgdG9vayBwYXJ0IGluIHRoZSByaXR1YWxzIG9mIHRoZSBydXNzaWFuIG9ydGhvZG94IGNodXJjaC4uIApQaW4gcHJpY2tzIGFyZSBsZXNzIGNvbW1vbiB0aGFuIGN1dHRpbmcgYnV0IHRoZSBkZWdyZWUgb2YgY3V0dGluZyBpcyBoaWdobHkgdmFyaWFibGUuIApEb2VzIGEgbnV0IGZsdXNoIGRyYXcgY2FsbCB5b3U/IE1heWJlLCBkZXBlbmRpbmcgb24gdmlsbGFpbiwgYnV0IHByb2JhYmx5IG5vdCB0byBiZSBob25lc3QuIApVbnRpbCByZWNlbnRseSBidXllcnMgb2Ygc3ludGhldGljIG1hcmlqdWFuYSBjb3VsZCB3YWxrIGludG8gYSBTbW9rZSA5MTEgc2hvcCBhbmQgcHVyY2hhc2UgdGhlIGRydWcgdW5kZXIgaXRzIHN0cmVldCBuYW1lLCBLMiBvciBTcGljZS4gVGhhdCdzIG5vdCBsaWtlbHkgdG9kYXkuCkJvdGggYXJlIGdvb2QgdGFsa2VycyBhbmQgYm90aCB3aXRoIGRlZXAgYmVsaWVmIGluIHRoZWlyIGZpZ2h0aW5nIGFiaWxpdHkuIFRoZXkgbWF5IHRhbGsgd2VsbCB0aGV5IGtub3cgdGhlIGh5cGUgZ2FtZSBqdXN0IGFzIHdlbGwgYm90aCBjb21lIHRvIGZpZ2h0Li4gCigzMiBub3cpLiAKVGhlIHdvcmxkIHRvcCBwcm9kdWNlci4uIApZb3Ugd2lsbCBiZSBwZXJtYW5lbnRseSBiYW5uZWQgd2l0aG91dCB3YXJuaW5nLi4gCkwnYXJ0aWNsZSA1MiBpbnN0aXR1ZSBsZSBDb25zZWlsIGQndGF0LiAKRm9sZHMgdG8gZmlyc3QgZ3V5IHdobyBjYWxscy4uIApPZiB0aGUgZWFybHkgc3R1ZmYgSSB0b28gaGF2ZSBjb21lIHRvIGp1c3QgYWRvcmUgSmFja2llIEJyb3duLiBBcyBhIGtpZCBJIHdhcyBhIGJpdCBkaXNhcHBvaW50ZWQgam4gdGhhdCAocmVhZCAxMyAxNCB5ZWFyIG9sZCkuIAoiQnJvb2tseW4gTmluZSBOaW5lIiBhY3RvciBUZXJyeSBDcmV3cyB0ZWxscyBvZiBob3cgaGUgZGVjaWRlZCB0byBzcGVhayB1cCBhYm91dCBoaXMgYXNzYXVsdCBvbmx5IGFmdGVyIHNlZWluZyB3b21lbiByaWRpY3VsZWQgb25saW5lIGZvciB0ZWxsaW5nIHRoZWlyIG93bi4gClNvbWUgb2YgdGhlIGdhbWVzIHdlcmUgaG9uZXN0bHkgYSB0b24gb2YgZnVuLiAKU3RhdGUgQ2hhbXBpb25zaGlwIFNhdHVyZGF5IFJlc3VsdHNTdGF0ZSBDaGFtcGlvbnNoaXAgU2F0dXJkYXkgUmVzdWx0c0hpZ2ggc2Nob29sIHRlYW1zIGNvbXBldGVkIGZvciBjaGFtcGlvbnNoaXBzIG9uIFNhdHVyZGF5LgpUaGUgb25seSBoYW5kcyB0aGF0IGFyZSBjYWxsaW5nIHlvdSB0aGF0IHlvdSBiZWF0LCBhcmUgbW9uc3RlciBkcmF3cywgbGlrZSBUczlzLCA1czZzIGFuZCBib3RoIHRoZXNlIGhhbmRzIGhhdmUgNTAlIGVxdWl0eSBhZ2FpbnN0IHlvdSBzbyB5b3Ugbm90IGV4YWN0bHkgYSBmYXZvcml0ZS4gRXZlbiB0aG91Z2ggaGUgaGltc2VsZiByZXBzIFNPIFRISU4gd2l0aCBhIGMvciB3aGVuIHlvdSBibG9jayBzZXRzIHRoaXMgaGFyZCwgYnkgM2IgZmxvcCB5b3UgYWxsb3cgaGltIHRvIHBsYXkgcGVyZmVjdGx5LiAKSSBiZWVuIHRocm91Z2ggdGhlIFN1ZXogYW5kIFBhbmFtYSBjYW5hbHMgYSBmZXcgdGltZXMuIFZpc2l0ZWQgcXVpdGUgYSBmZXcgcGxhY2VzIGluIFNvdXRoIEFtZXJpY2EgYW5kIHNwZW50IG1vbnRocyBpbiBBbnRhcmN0aWNhIG9uIGEgc3VydmV5IHNoaXAuIEkgYmVlbiB0byB0aGUgVVMgcXVpdGUgYSBmZXcgdGltZXMsIE5ldyBZb3JrLCBCb3N0b24sIFNvdXRoIENhcm9saW5hIGFuZCBGbG9yaWRhLiAKQWR2ZXJ0aXNpbmdBdCBhIG1pbmltdW0sIHlvdSB3aWxsIHdhbnQgdG8gcHVyY2hhc2UgYSB3ZWJzaXRlIGZvciB5b3VyIGJ1c2luZXNzLCBhIG1vbnRobHkgY29zdCBvZiBhYm91dCAkMjAuIApJbiBjb250cmFzdCwgdGhlIExpYmVyYWxzIHdhbnQgdGhlIG1hY2hpbmVzIHRvIHJlbWFpbiBpbiBwbGFjZSB1bnRpbCAyMDQzLCBwcm9taXNpbmcgdG8gaGFuZCBvdmVyIGxpY2Vuc2VzIHRvIGluZGl2aWR1YWwgdmVudWVzLiAKRWFjaCBvZiB0aGVzZSBtYWNoaW5lcyBoYXMgYSBzZW5zZSBvZiBvZiBiZWluZyAgIG1lbW9yaWVzLCB0aG91Z2h0cywgZW1vdGlvbnMgYW5kIGlkZWFzICAgYnV0IGtub3cgbm93IHRoYXQgdGhlc2UgYXJlIG1lcmVseSBkYXRhIHBvaW50cyB3cmFwcGVkIHVwIGluIGEgZmlsZSBzeXN0ZW0gdGhhdCB3ZSB5ZXQgdG8gZGVjb2RlLiBUaGVyZSBub3RoaW5nIGV4dGVybmFsLiAKVGhpcyBpcyBhIGdvb2Qgc2lnbiB0aGF0IHRoZSBwbGF5ZXIgaGFzIGEgaGFuZC4gCk9oLCBqdXN0IHJlYWwgcXVpY2sgYWJvdXQgbXkgUmVkZGl0IG5pY2tuYW1lLCBpdCBhIHBsYXkgb24gdGhlIG5hc3R5IGV4cHJlc3Npb25zIGJlaW5nIHRocm93biBhdCB0aGVuIHByZXNpZGVudCBPYmFtYS4gSSBzdXJlIHlvdSByZW1lbWJlciwgdGhlIHRlYSBwYXJ0eSB3YXMgYmFzaWNhbGx5IGEgZ3JvdXAgb2YgY3Jhbmt5IHJhY2lzdHMuIEFuZCBvbmUgb2YgdGhlIHRoaW5ncyB0aGV5IGNhbGxlZCBoaW0gd2FzIGEgImdvZGxlc3MgY29tbXVuaXN0IiBiZWNhdXNlIG9mIHRoZWlyIChzYXJjYXNtIHdhcm5pbmcpIHN0cm9uZyBhdHRhY2htZW50IHRvIHJlYWxpdHkgYW5kIGRlZXAgdW5kZXJzdGFuZGluZyBvZiBwb2xpdGljYWwgc2Nob29scyBvZiB0aG91Z2h0LgpUaGUgdHJ1dGggaXMgYSBsb3Qgd29yc2UgdGhvdWdoOiBJIGRpZG4gd2FudCB0byBsb29rIGxpa2UgYSBiaXRjaC9hIHN0dXBpZCBsaXR0bGUgZ2lybCBvdmVyIHJlYWN0aW5nLiBNeSBwYXJlbnRzIHdlcmUgYWxyZWFkeSB3b3JyaWVkIGFib3V0IG1lIGRvaW5nIHRoaXMgZHJpdmUgYWxvbmUgYW5kIEkgZ3Vlc3MgSSB3YW50ZWQgdG8gcHJvdmUgdGhhdCBJIHdhc24gYSBsaXR0bGUga2lkIGFueW1vcmUgd2hvIHNjcmVhbXMgd2hlbiBzb21lb25lIHNheXMgImJvbyIuIApNeSBtaW5kIEdPQVRTIGlzIHRoZSBlcXVpdmFsZW50IG9mIHRyeWluZyB0byBwbGF5IGJhbGFuY2VkIHBva2VyLCB0cnlpbmcgdG8gYmUgdW5leHBsb2l0YWJsZSwgYW5kIGV4cGxvaXRpbmcgdGhlIG9wcG9uZW50IHdobyBpc250IHBsYXlpbmcgYmFsYW5jZWQgKEdPQVRTKS4gVGhlcmUgaXMgYSBjb3JyZWxhdGlvbiB0aGVyZSBhbmQgSSBsaWtlIHRvIGV4cGxvcmUgaXQuCkZpcnN0IGNob29zZSBhIHBva2VyIHdlYnNpdGUgbGlrZSBhZGRhNTIsIHBva2Vyc3RhciBldGMgLHRoZW4gcmVnaXN0ZXIgYnkgZW50ZXJpbmcgeW91ciB1c2VybmFtZSBhbmQgZSBtYWlsIGFkZHJlc3MuIAoiVGhlIGNvbW11bmljYXRpb24gaGVyZSBpcyBmYW50YXN0aWMsIiBoZSBzYWlkLiAiT3VyIHBlcmZvcm1hbmNlIHRlYW0gaXMgYSB2ZXJ5IHRpZ2h0IGtuaXQgZ3JvdXAgLiBGcm9tIG15IGV4cGVyaWVuY2Ugd29ya2luZyBpbiBwcm9mZXNzaW9uYWwgc3BvcnQsIHRyeWluZyB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBjb2FjaGVzLCB3aXRoIHRoZSBwbGF5ZXJzLCBhIGxvdCBvZiBtZXNzYWdlcyBnZXQgbG9zdC4gCkZvciBleGFtcGxlLCBhIGNoZXN0IGNvbGQgbWlnaHQgYmUgZGlhZ25vc2VkIGFzIGEgbHVuZyBjb25kaXRpb24gdW5kZXIgYm90aCBzeXN0ZW1zLCBidXQgYXN0aG1hIG1pZ2h0IGJlIGEga2lkbmV5IGNvbmRpdGlvbiBpbiB0cmFkaXRpb25hbCBDaGluZXNlIG1lZGljYWwgZGlhZ25vc3RpY3MuIApDYWVzYXJzIFRlbXBsZSBMb2JieSBzZXJ2ZXMgYXMgYW4gaW50ZXJhY3RpdmUgaG90ZWwgbG9iYnkgYW5kIGNoZWNrIGluIGFyZWEuIE92ZXJuaWdodCBndWVzdHMgd2lsbCBiZSBkaXJlY3RlZCB0byBvbmUgb2YgdGhlIDEsMTQ0IGx1eHVyaW91cyBndWVzdCByb29tcyBpbiBvbmUgb2YgZm91ciB0b3dlcnM6IHRoZSB0d28gVGVtcGxlIFRvd2Vycywgd2hpY2ggaGF2ZSBlbGV2YXRvcnMganVzdCBvZmYgdGhlIFRlbXBsZSBMb2JieTsgdGhlIE9jZWFuIFRvd2VyLCB3aXRoIGl0cyBuZXdseSBkZWNvcmF0ZWQgc3VpdGVzIGFuZCB0aGUgQ2VudHVyaW9uIFRvd2VyLiAKRG9uJ3QgYmUgb25lIG9mIHRob3NlIG1hbmFnZXJzIHdobyBpbmFkdmVydGVudGx5IG1ha2VzIGFuIGVtcGxveWVlIGZlZWwgbGlrZSB0aGV5J3JlIGJvdGhlcmluZyB5b3Ugd2hlbiB0aGV5IGJyaW5nIHVwIGEgcXVlc3Rpb24gb3IgY29uY2Vybi4gCkl0IHRvb2sgYWxsIG9mIHVzIHRocmVlIGRheXMgdG8gZ2V0IGl0LiBCeSB0aGUgbGFzdCBkYXkgd2UncmUgYWxsIHNpdHRpbmcgdGhlcmUgZ29pbmcgJ0Z1Y2shIEdvZGRhbW1pdCBkdWRlLCBjYW4ndCB5b3UganVzdCBzdGFuZCBzdGlsbCEnIFdlIGFsbCB0dXJuZWQgaW50byBob3JyaWJsZSBwZW9wbGUuIApTb21lIDU2MCwwMDAgdXNlcnMgaW4gSW5kaWEgd2VyZSBhbW9uZyB0aG9zZSBtaWxsaW9ucywgaGF2aW5nIGJlaW5nIHJvcGVkIGluIGJ5IGp1c3QgMzM1IHBlb3BsZSB3aG8gdXNlZCBhIHF1aXogYXBwIGNhbGxlZCAndGhpc2lzeW91cmRpZ2l0YWxsaWZlJyBiZXR3ZWVuIDIwMTMgYW5kIDIwMTUuIEluIGxpZ2h0IG9mIHRoZXNlIGluY2lkZW50cywgRmFjZWJvb2sgd2VudCBzbyBmYXIgYXMgdG8gc2F5IHRoYXQgbW9zdCBvZiBpdHMgdHdvIGJpbGxpb24gdXNlcnMgc2hvdWxkIGFzc3VtZSB0aGF0IHRoZWlyIGRhdGEgaGFzIGJlZW4gY29tcHJvbWlzZWQgaW4gc29tZSB3YXkuCk9uZSBwb3N0ZXIgc3VnZ2VzdGVkIHRoYXQgeW91ciBicm90aGVyIG1heSBoYXZlIEFzcGVyZ2VyIG9yIEFESEQuIAoxLiBJdCBtZWFucyBzb21lb25lIHdobyBpcyBpbiBhIHN0YXRlIG9mIGNvbmZ1c2lvbiBvciBmcnVzdHJhdGlvbiwgaW4gd2hpY2ggdGhleSBhZG9wdCBhbiBvdmVyIGFnZ3Jlc3NpdmUgc3RyYXRlZ3kuIApUYXlsb3IgU3dpZnQgd2lucyBiZXN0IGFsYnVtCkRvaW5nIHRoYXQgYWxsIHRoZSB0aW1lISBTbyBJIFt3YW50ZWQgdG9dIGdldCBhIG1hbmkgcGVkaSBldmVyeSBkYXkuIAoiT2J2aW91c2x5IHBlb3BsZSBhcmUgdHJ5aW5nIHRvIGFkanVzdCB0byB0aGUgbmV3IHJ1bGVzLCBzbyBhcyB0aGV5IGJlY29tZSBtb3JlIGZhbWlsaWFyIHdpdGggdGhlbSBJJ20gc3VyZSB0aGF0IHdlIHdpbGwgY29udGludWUgdG8gc2VlIGdyb3d0aCBpbiB0aGF0LCIgQmVhbiBzYWlkLiBDaGFyaXR5IHBva2VyIGZvbGtzIGxhaWQgYmxhbWUgZm9yIHRoaXMgc2l0dWF0aW9uIGF0IHRoZSBmZWV0IG9mIHRoZSBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMsIHRoZSBnYW1pbmcgY29udHJvbCBib2FyZCBhbmQgR292LiAKSSBzdGFydCB0aGUgbGlzdCBidXQgeW91IG1heSBnZXQgdGhlIGJhc2ljIGppc3QuLiAKRXZlcnkgdG91ciBJJ3ZlIGJlZW4gdG8gdGhleSBnbyBvbiBsYXN0IHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBtYXloZW0gZmVzdCBhbmQgYXZlbmdlZCBzZXZlbmZvbGQgd2VudCBvbiBsYXN0LiBBdmVuZ2VkIHdhcyB0aGUgaGVhZGxpbmVyIGZvciB0aGF0IHRvdXIgdGhvdWdoLiAKRG9lcyAzIG9mIGEga2luZCBiZWF0IHR3byBwYWlycyBpbiBwb2tlcgpJIGhhZCB3cml0dGVuIG91dCBtdWNoIG9mIHdoYXQgeW91IHR5cGVkIGFuZCBkZWxldGVkIGl0IG11bHRpcGxlIHRpbWVzLiBJdCBqdXN0IGRvZXNuIHNlZW0gd29ydGggaXQuIEEgcGVyc29uIHdobyBoYXMgcnVuIGEgY291cGxlIG9mIHNob3J0IDIgbWlsZSBydW5zIGNvbWVzIGludG8gdGhlIFEgYW5kIHdhbnRzIHRvIHJ1biBhIDVtaW4gbWlsZSB3aXRoIGFsbW9zdCBubyBpbmZvcm1hdGlvbiBnaXZlbi4gCkVzIGdlaHQgdmVyZGFtbXQgbm9jaG1hbHMgZXJzdG1hbCBudXIgZGFydW0gZXR3YXMgTWVuc2NobGljaGtlaXQgenUgd2FocmVuLiBEaWUgQXN5bGZyYWdlIGlzdCB3aWVkZXIgZWluIGFuZGVyZXMgVGhlbWEuIApIZXJlJ3MgdGhlIG1haW4gb3Bpbmlvbi4gR3JvdXBzIHRpZWQgdG8gZXhpc3RpbmcgcmFjaW5vcyBoYWQgbW91bnRlZCBvcHBvc2l0aW9uIHRvIHRoZSBwcm9wb3NhbCwgd2hpY2ggd291bGQgaGF2ZSBnaXZlbiBhIGdyb3VwIG9mIE1pc3NvdXJpIGludmVzdG9ycyBzb2xlIHJpZ2h0cyB0byBlc3RhYmxpc2ggY2FzaW5vcyBpbiBmb3VyIGNvdW50aWVzIHVuZGVyIGEgcGxhbiB3aXRoIHNjYW50IGxlZ2lzbGF0aXZlIGNvbnRyb2wuIFRoYXQgZ3JvdXAgaXNzdWVkIGEgc3RhdGVtZW50OgosIEkgZG9uIGtub3cgaWYgaXQgYXZhaWxhYmxlIGluIHlvdXIgY291bnRyeSBidXQgeW91IGdldCB0aGUgaWRlYS4uIApKdXN0IHRvIHdvcmsgb2ZmIG15IG9yaWdpbmFsIGV4YW1wbGUgTkFTQSBmb3IgaW5zdGFuY2UgdXNlcyBkYXRhIHNjaWVuY2UgYW5kIGhhcyBmb3IgYSB3aGlsZS4gCkF0IHRoZSB2ZXJ5IG1vbWVudCBJIHdva2UgdXAgYW5kIHNhdyBhIHRpbWUgaW4gY2xvY2sgdGhhdCB3YXMgMzoyMWFtLiBJdCBtZWFucyB0aGF0IExvcmQgaXMgdGVsbGluZyBIaXMgcGVvcGxlIHRvIGJlIHJlYWR5IGZvciBIaXMgd2VsY29tZSBhcyBIZSBpcyBjb21pbmcgdmVyeSBzb29uLiBIaXMgYnJpZGUgbXVjaCBwcmVwYXJlcyBoZXJzZWxmIHRvIGJlIGFkb3JuZWQgdG8gYmUgd2l0aCBoZXIgZ3Jvb20gd2hpY2ggaXMgdGhlIENodXJjaCBvZiBHb2QuIApGcmllbmRzLCBmYW1pbHksIHMvbywgaG9iYmllcywgbGVpc3VyZSkuIApUb3AgNCBTdGVha2hvdXNlcyBGb3IgQSBTcGVjaWFsIE9jY2FzaW9uIEluIE1pYW1pTG9va2luZyB0byB0cnkgdGhlIHRvcCBzdGVha2hvdXNlcyBhcm91bmQ/IEhvb2RsaW5lIGNydW5jaGVkIHRoZSBudW1iZXJzIHRvIGZpbmQgdGhlIGJlc3QgaGlnaCBlbmQgc3RlYWtob3VzZXMgaW4gTWlhbWksIHVzaW5nIGJvdGggWWVscCBkYXRhIGFuZCBvdXIgb3duIHNlY3JldCBzYXVjZSB0byBwcm9kdWNlIGEgcmFua2VkIGxpc3Qgb2YgdGhlIGJlc3Qgc3BvdHMgdG8gdmVudHVyZSBuZXh0IHRpbWUgeW91IG9uIHRoZSBodW50LgpBIHRpcCBmb3IgdXNpbmcgaGFsZnRvbmVzOiBBdCBzbWFsbCBzaXplcywgdGhlIGFuZ2xlIG9mIHRoZSBoYWxmdG9uZSBkb3RzIGNhbiBjcmVhdGUgYW4gdW5pbnRlbnRpb25hbCBvcHRpY2FsIGlsbHVzaW9uIG9mIGxpbmVzIGFuZCBzcXVhcmVzIGNhbGxlZCBhIG1vaXIgcGF0dGVybi4gCkFuZCBJIGtuZXcgZnJvbSB0aGUgYXNzZXNzb3JzIHBhcmNlbCBudW1iZXIgaXQgd2FzIGluIGEgZ3JlYXQgYXJlYS4gClRoZSB0cnV0aCBpcyB0aGF0IHN1Y2ggc3R1ZmYgb25seSBnYWx2YW5pemVzIHRoZSBlbmVteS4iLi4gClR3byBkaWZmZXJlbnQgdHlwZXMgb2YgdmVoaWNsZXMgYSBzZWRhbiBhbmQgYSB0YW5rLiBJIHdhbnQgdG8gYXJndWUgdGhhdCB0aGUgc2VkYW4gaGFzIGxlc3MgcG90ZW50aWFsIGZvciBkYW1hZ2UgdGhhbiB0aGUgdGFuay4gSSBtYWtlIG15IGFyZ3VlbWVudCBieSBzYXlpbmcgdGhlIHRhbmsgaGFzIG5vIGd1bnMsIHNtYWxsZXIgZW5naW5lLCBub3QgcmVpbmZvcmNlZCBzdGVlbCwgbm8gdHJhY2sgdGlyZXMgd2hlcmUgYXMgdGhlIHRhbmsgaGFzIGFsbCB0aG9zZSB0aGluZ3MuIE5vdCBvbmx5IHRoYXQgYnV0IHRoZSB0YW5rIHdhcyBkZXNpZ25lZCBmb3Igd2FyIHdoZXJlIHRoZSBzZWRhbiB3YXMgZGVzaWduZWQgdG8gc2ltcGx5IGdldCBhcm91bmQuCkluZm9ybWEgc29icmUgTW90aWxpdW0gMTAgTWcgQ2FpeGEgNjAgQ29tcHJpbWlkb3MgYnVsYSwgaW5kaWNhIGNvbXBvc2kgcHJlIGUgcGFyYSBxdWUgc2VydmUuIEEgRHJvZ2FyaWEgTm92YSBFc3BlcmFuIGRpc3BvbmliaWxpemEgZXN0YXMgLgpJIGp1c3Qgc3BlbnQgdGhlIHdlZWtlbmQgd2l0aCBhIGJ1bmNoIG9mIGFjYWRlbWljcyBvYnNlc3NlZCB3aXRoIGNvc21ldGljIHN1cmdlcnkgYXQgS3dhbnRsZW4gVW5pdmVyc2l0eSBpbiBCcml0aXNoIENvbHVtYmlhLiBUaGUgY29uZmVyZW5jZSwgIlNjaG9sYXJzaGlwLCBUZWFjaGluZyBhbmQgTGVhcm5pbmcgaW4gdGhlIEFnZSBvZiB0aGUgUGxhc3RpYyBCb2R5LCIgcHV0IGNvc21ldGljIHN1cmdlcnkgb24gdGhlIHRhYmxlIGFuZCBkaXNzZWN0ZWQgaXQgd2l0aCBhIHZhcmlldHkgb2YgZGlzY2lwbGluZXMgKHNvY2lvbG9neSwgcGhpbG9zb3BoeSwgbGl0ZXJhcnkgY3JpdGljaXNtKSBhbmQgcGFyYWRpZ21zIChwb3N0bW9kZXJuaXNtLCBmZW1pbmlzbSwgbWFyeGlzbSkuLiAKVW5pbnRlbmRlZCBraWxsaW5nIGFzaWRlLCBzaG91bGQgTWljaGFlbCBKYWNrc29uJ3MgZGVhdGggbWF5IGhhdmUgYmVlbiBob3cgdGhlIHJlc3VsdCBhc3NvY2lhdGVkIHdpdGggYW4gcHJvamVjdGVkIGhvbWljaWRlLCBhIGdvb2QgcHJlbWVkaXRhdGVkIG11cmRlcj8gSWYgc28sIHdoYXQgZG9lcyB0aGUgbXVyZGVyZXIgaGF2ZSBwcmV2aW91c2x5IGJlZW4gaG9waW5nIHJlZ2FyZGluZyBnYWluPyBNYXkgcG9zc2libHkgdGhlIGtpbGxlciBoYXZlIGNvbWUga2lsbGluZyB0aGUgcHJvdmVyYmlhbCBnZ2RiIHNuZWFrZXJzIHNhbGU/CldlIHphZ2VuIG9uZGVyd2VnIGFsIGhlZWwgd2F0IG1lcmtlbiBkaWUgd2Uga2VuZGVuLCB6b2FscyBJa2VhLiAKRnVydGhlciwgSSBnb2luZyB0byBlY2hvIHdoYXQgdS9zZXh1YWxwcmVkYXQwciBzYWlkIHJlZ2FyZGluZyBpdCBiZWluZyBkaWZmaWN1bHQgdG8gdGVsbCBpZiBzb21lb25lIGp1c3QgY29uc2lzdGVudGx5IGhhcyBhIGluY3JlZGlibHkgdW5wb3B1bGFyIG9waW5pb24gb3IgaWYgdGhleSBiZWluZyBhIHRyb2xsLiBIYXZpbmcgYW4gdW5wb3B1bGFyIG9waW5pb24gaXNuIHNvbWV0aGluZyB3ZSBiYW4gb3ZlciwgYW5kIEkgZG9uIGZlZWwgcmlnaHQgYWJvdXQgYmFubmluZyBzb21lb25lIGJlY2F1c2Ugb2YgdGhlaXIgcGFydGljaXBhdGlvbiBpbiBhbm90aGVyIHBvbGl0aWNhbCBzdWIuIElmIHNvbWVvbmUgaXMgcmVhbGx5IGEgYmFkIHBvc3RlciwgaXQgYmUgY2xlYXIgdGhyb3VnaCB0aGVpciBwb3N0cy4gVGhhdCBtYWtlcyBhIHN0cm9uZ2VyIGNhc2Ugb3ZlcmFsbCBmb3IgdGhlaXIgYmFubmluZyBhbnl3YXksIGFuZCB1c2VycyBjYW4gcHVsbCB0aGUgIkkgYSB2aWN0aW0ganVzdCBiZWNhdXNlIEkgcG9zdCBpbiB4L3kveiEiIGNhcmQuCg==|<---