--->|VGhlIFNvdXRoIEtvcmVhbiBhdXRvbWFrZXIgZ2lubmVkIHVwIGFydHdvcmsgb2YgdGhlIEVsZXZhdGUgd29ya2luZyBhcyBhbiBlbWVyZ2VuY3kgcmVzcG9uc2UgdmVoaWNsZSBpbiByb2NreSBtb3VudGFpbm91cyB0ZXJyYWluLCB3aXRoIHRoZSBsZWdzIG5pbWJseSBjbGltYmluZyBvdmVyIHRyZWFjaGVyb3VzIHJvY2tzLiAKVGhlcmUgbm8gY2x1ZSBpbiB0aGlzIHNob3J0IGFydGljbGUgd2h5IHRoaXMgZGVtb25zdHJhdGlvbiB3YXMgdGFraW5nIHBsYWNlLCBidXQgaXQgZGlkLiAKVGhhdCdzIGp1c3Qgbm90IG15IGV4cGVyaWVuY2UgaW4gbGlmZSBkdWRlLiAKQSBsb3Qgb2YgdGhlIHRpbWUgdGhleSBzaW1wbHkgZG9uIHB1c2ggb3V0IG9mIGZlYXIgd2hlbiB0aGV5IHRvdGFsbHkgY291bGQgYW5kIHdpbiB0aGUgZ2FtZSwgbXkgbWluZXMgd291bGRuIGZ1Y2tpbmcgc3RvcCB0aGVtIHVubGVzcyB0aGV5IGR1bWIgZW5vdWdoIHRvIHdhbGsgdXAgaW4gYSA1IGZvcm1hdGlvbiBhbmQgc3VpY2lkZSBzcXVhZCBvbiB0aGVtLi4gCk1heWJlIGEgZG96ZW4gcHJpdmF0ZSB2ZWhpY2xlcyBhIGRheSwgdGhlIHJlc3Qgd2VyZSB0aGVyZSBmb3IgdGhlIGNvbnN0cnVjdGlvbi4gQSBtYW4gY2FtZSByaWdodCBpbiB0aGUgcGxhbnQgZHVyaW5nIHdvcmsgaG91cnMsIGRyZXNzZWQgbGlrZSBoZSB3YXMgd29ya2luZyB0aGVyZSwgc3RhcnRlZCB1cCBhIGxhcmdlLCBJIG1lYW4gbGFyZ2UhIFRlbGVoYW5kIGZvcmtsaWZ0LiAKWW91ciBvd24gcmVzb3VyY2VzIG5vdyBiZWluZyBjYWxjdWxhdGVkIG1vbnRobHkgaW5zdGVhZCBvZiBpbnN0YW50bHkuIApzZXR0bGVtZW50IHdpdGggc3RhZmZlciBpbmNsdWRlcyBwYXRlcm5pdHkgY2xhaW0KQSByZWFkZXIgc2VudCBpbiB0aGUgY29tbWVudCBiZWxvdy4gV2hpbGUgbXVjaCBvZiBpdCBjb250YWlucyB3b25kZXJmdWwgaW5mb3JtYXRpb24gb2YgaG93IGhlciBoZWFsdGggaGFzIGRyYW1hdGljYWxseSBpbXByb3ZlZCBvbiBhIGdsdXRlbiBmcmVlIGRpZXQgKHNvbWV0aGluZyBJIG5ldmVyIGdldCB0aXJlZCBvZiBoZWFyaW5nISksIG90aGVyIHBhcnRzIGFyZSBwYXJ0aWN1bGFybHkgaW5zaWdodGZ1bCBhbmQgc3VycHJpc2luZy4gU2VlIHdoYXQgeW91IHRoaW5rLgpJbiBhZGRpdGlvbiB0byB0aGlzIG9ubGluZSBwb2tlciByb29tcyBhcmUgbXVjaCBmYXN0ZXIgYmVjYXVzZSB0aGVyZSBpcyBsZXNzIGludGVycnVwdGlvbnMgZHVlIHRvIGF1dG9tYXRpYyBhbmQgaW5zdGFudGFuZW91cyBkZWFsaW5nIGFuZCBzaHVmZmxpbmcgb2YgcGFwZXJzIGFuZCB0aGVyZSBhcmUgbm8gZGVsYXlzIHJlbGF0aW5nIHRvIGNvdW50aW5nIGNoaXBzIG9yLiAKSSB3b3JrZWQgaW4gYWRtaW5pc3RyYXRpb24gZm9yIG9uZSBpbiB0aGUgOTBzIGFuZCBoYWQgbXkgY2hpbGRyZW4gaW4gdGhlbSBmb3IgZGF5Y2FyZSBhbmQgdmFyaW91cyBwcmVzY2hvb2wgcHJvZ3JhbXMgZm9yIGEgZmV3IHllYXJzLiBCYWNrIHRoZW4sIHRoZXkgd2VyZSB2ZXJ5IHdlbGwgcnVuLiAKSXQgbWF5IGJlIGZhaXIgdG8ganVkZ2UgYSBib29rIGJhc2VkIG9uIGl0IGNvdmVyLCBidXQgeW91IG1pZ2h0IG5ldmVyIGVuZCB1cCBsZWFybmluZyB3aGF0IGluc2lkZS4uIApBbG1vc3QgYWx3YXlzIEJldEZyZWQgb2ZmZXJzIGV4dHJhIHBsYWNlcyBvbiBiaWcgaG9yc2UgcmFjZXMgYW5kIGNvbW1lbnRhcnkgb24gc2VsZWN0ZWQgaG9yc2UgcmFjZXMuIFRoZSBmb2N1cyBpcyBwdXQgbWFpbmx5IG9uIFVLIGFuZCBJcmlzaCByYWNlIHRyYWNrcywgd2l0aCBhIHNtYWxsZXIgZm9jdXMgb24gaW50ZXJuYXRpb25hbCByYWNlcy4gCkpvbiBXZXJ0aGVpbTogWW91ciBjb3Jwb3JhdGlvbiwgJDI2IG1pbGxpb24uIApZb3VyIHJvdXRlciBpcyB0YWxraW5nIGluIGEgdmVyeSBidXN5IGZyZXF1ZW5jeSByYW5nZS4gSXQgbGlrZSB0cnlpbmcgdG8gaGF2ZSBhIGNvbnZlcnNhdGlvbiBhdCBhIHJvY2sgY29uY2VydC4KQ09OQ0xVU0lPTlM6IEZpc2ggYW5kIG9saXZlIG9pbHMgbWF5IGhlbmNlIGNvbnRyaWJ1dGUgdG8gbG93ZXIgaW5zdWxpbiBsZXZlbCBhbmQgSE9NQSBJUiBieSBpbmNyZWFzaW5nIERBRyBjb25jZW50cmF0aW9uIGFuZCBtYXkgaGF2ZSBtb3JlIGhlYWx0aCBiZW5lZml0cyB0aGFuIG90aGVyIGZhdCBzb3VyY2VzIGluIGRpZXRzLgpCYWxhbmNlIFRyYWluaW5nIFByb2dyYW0KVGhlIGNoYW5nZW92ZXIgYWxzbyBpbmNsdWRlcyBicmluZ2luZyBpbiA0MDAsMDAwIEpBQ0sgYnJhbmRlZCBjaGlwcyAkMTM1IG1pbGxpb24gd29ydGggYW5kIDEsODAwIEpBQ0sgYnJhbmRlZCBkaWNlLiBUaGUgU3ByZWFkIEJ1ZmZldCB3aWxsIGJlIHJlbmFtZWQgdGhlIE1hcmtldCBEaXN0cmljdCBCdWZmZXQsIHRoZSBUYWcgQmFyIHdpbGwgYmVjb21lIHRoZSBSb2NrIEJhciBhbmQgdGhlIERpYW1vbmQgTG91bmdlIHdpbGwgYmVjb21lIFRoZSBMaWJyYXJ5LgpJbCBzZSBjb25zdHJ1aXQgcGFyIEludGVybmV0IGRlcyBycHV0YXRpb24gZmFsbGFjaWV1c2VzLk1haXMgaWwgeSBhIGRlcyBleGNlcHRpb25zICBjZXR0ZSBjb25zdGFudGUsIEZyYW5vaXMgQXNzZWxpbmVhdSBlbiBlc3QgdW4uSmUgdm91cyBlbmdhZ2UgIHZvdGVyIG1hc3NpdmVtZW50IEFzc2VsaW5lYXUgYXUgMWVyIHRvdXIuTGEgY29tbXVuaWNhdGlvbiBub24gdmlvbGVudGUgPyBFbmNvcmUgdW5lIGFybmFxdWUgIUplIGNvbW1lbmNlcmFpIHBhciBkbm9uY2VyIHVuIGFydGljbGUgc3VyIGxhIGNvbW11bmljYXRpb24gbm9uIHZpb2xlbnRlIChDTlYpLiBCZWxsZSBmb3V0YWlzZSBxdWFuZCB0b3V0ZSBsYSBjb21tdW5pY2F0aW9uLCAgbGEgdHRlIGR1ICJTeXN0bWUiIGVzdCB1bHRyYSB2aW9sZW50ZSAhQWluc2kgbGVzIHBhcnRpY3VsaWVycyBkZXZyYWllbnQgcydhc3RyZWluZHJlICB0b3Vqb3VycyBhcnJvbmRpciBsZXMgYW5nbGVzLiAKVGhlIHF1YWxpdHkgb2Ygc3BlZWQgY2xvdGggbWFrZXMgaXQgbXVjaCBzaW1wbGVyIHRvIHByaW50IG9uIGl0LCBhbmQgYmVjYXVzZSBvZiB0aGlzLCB5b3Ugd2lsbCBmaW5kIHRoYXQgdGhlcmUgYXJlIGEgbnVtYmVyIG9mIGRpZmZlcmVudCByZWFzb25zIHRvIGNvbnNpZGVyIHdoYXQgeW91IG1pZ2h0IHdhbnQgb24geW91ciBwb2tlciB0YWJsZS4gCklzbiBpbnRlcmVzdGVkIGluIGhpZGluZyBpbmZvcm1hdGlvbiBmcm9tIEFtZXJpY2FucyBidXQgaXMgd2lsbGluZyB0byBiZSBob25lc3QgYW5kIHRydXRoZnVsIGFib3V0IGZhY3RzLiBJIHRoaW5rIHRoaXMgc2F5cyBpdCBhbGwuIExvb2sgYXQgdGhlIGxpZXMgYW5kIGNvdmVyIHVwcyB3ZSBhbGwga2VlcCBkZW55aW5nIGlzIGhhcHBlbmluZyB0aGlzIGVsZWN0aW9uIHllYXIuIApUaGUgc291bmQgdGhhdCBwZW9wbGUgb24gc3RhZ2UgaGVhciBpcyBvZnRlbiB2ZXJ5IGRpZmZlcmVudCBmcm9tIHdoYXQgdGhlIGF1ZGllbmNlIGhlYXJzICAgZm9yIGV4YW1wbGUgdGhlIG5hdHVyYWwgcmV2ZXJiIG9mIHRoZSBhcmVhIG1pZ2h0IG1lc3MgdXAgdGhlIHJoeXRobSwgdGhlcmUgYSB3ZWlyZCBkZWxheSBiZXR3ZWVuIHRoZSBhdWRpZW5jZSBhdWRpbyBhbmQgdGhlIHN0YWdlIGF1ZGlvIGluIGxhcmdlIHZlbnVlcywgYW5kIG9mdGVudGltZXMgeW91IGRvbiByZWFsbHkgaGVhciBhbGwgdGhlIGluc3RydW1lbnRzIHByb3Blcmx5IGFuZCBpdCBqdXN0IGEgYnVuY2ggb2Ygbm9pc2UgZXRjLiAKWWVzLCBlYXJseSBvciBsYXRlIHBvc2l0aW9uLCB0aWdodCBlYXJseSwgbG9vc2VyIGxhdGUsIGVxdWl0aWVzIGFyZSBtZWFzdXJlZCBhcyBwZXJjZW50YWdlcywgbmV2ZXIgYXMgZGVjaW1hbHMgb3IgZnJhY3Rpb25zLCBpZiB5b3UgaGVsZCBBQSBvbiB0aGUgYnV0dG9uIGFnYWluc3Qgb25lIHBsYXllciB5b3VyIGVxdWl0eSB3b3VsZCBiZSA4NSUsIHR3byBwbGF5ZXJzLCA2NSUgdGhyZWUgcGxheWVycywgNTUlIGZvdXIgcGxheWVycyA0NSUgdGhlc2UgYXJlIG9mZiB0aGUgY3VmZiBhcG9yb3hpbWF0aW9ucywgeW91ciBlcXVpdHkgZGltaW5pc2hlcyBwZXIgbnVtYmVyIG9mIG9wcG9uZW50cywgeW91IGNhbiB0d2VlayB0aGVzZSBpbiBvciBvdXQgb2YgcG9zaXRpb24sIGdlbmVyYWx5IHdlIHBsYXkgZGlmZnJlbnQgaW4gcG9zaXRpb24gdGhhbiBvdXQsIHdlIGNhbiBibHVmZi92YWx1ZSBtb3JlIGluIHBvc2l0aW9uIGFuZCBjaGVjay9jYWxsIG1vcmUgb3V0IG9mIHBvc2l0aW9uIGFzIGEgc2FmZSBydWxlIG9mIHRodW1iLgoiSSB3b3JrIGZvciB0aGUgSW50ZXJuYXRpb25hbCBHYW1lIFRlY2hub2xvZ3kgbWFraW5nIHBva2VyIG1hY2hpbmVzLCIgaGUgc2FpZC4gCllvdSBhcmUgb24gdGhlIGJyaW5rIG9mIGRlYXRoLCBhbHdheXMgZmVlbGluZyBsaWtlIHlvdSBhcmUganVzdCBhYm91dCB0byBkaWUuIApTdGFydCB3aXRoIGEgZ2VudGxlIHJhbmdlIG9mIG1vdGlvbi4gClRoZSBvcmdhbiBpcyBvbmUgb2YgdGhlIGZldyB0aGF0IHJlcXVpcmVzIHRocmVlIGxvYmVzLiBTaW5jZSB3ZSBhcmVuIHVzZWQgdG8gdXNpbmcgdGhyZWUgaW4gZXZlcnlkYXkgbGlmZSwgaXQgZG9lc24gaGFwcGVuIGF1dG9tYXRpY2FsbHkuIFRoZSBsb2JlIG1vc3Qgb2Z0ZW4gbmVnbGVjdGVkIGJ5IGFtYXRldXIgb3JnYW5pc3RzIGlzIHRoZSBsb2JlIHJlc3BvbnNpYmxlIGZvciBzdWJqZWN0aXZlIGRlY2lzaW9uIG1ha2luZywgc3VjaCBhcyBsaXN0ZW5pbmcgdG8geW91ciBwbGF5aW5nIGFuZCBjb21wYXJpbmcgaXQgdG8gdGhlIGV4cGVyaWVuY2UgdGhlIGNvbmdyZWdhdGlvbiBpcyBoYXZpbmcsIGFuZCBkZWNpZGluZyBpZiBpdCBzaG91bGQgYmUgZmFzdGVyLCBzbG93ZXIsIGxvdWRlciBvciBzb2Z0ZXIuIApTbyBuYXJ3aGFscyBoYXZlIGRldmVsb3BlZCBhbiBhYmlsaXR5IHRvIGZvcmVjYXN0IGljZSBmb3JtYXRpb25zIHVzaW5nIHRoZSBtb3RoZXIgb2YgYWxsIGJ1Y2tlZCB0ZWV0aC4gVGhleSBjYW4gYWxzbyBkZXRlY3QgdGVtcGVyYXR1cmUgYW5kIHdhdGVyIHByZXNzdXJlLCBhbmQsIHdoZW4gaXQncyBoZWxkIGFib3ZlIHRoZSB3YXRlciwgdGhlIHR1c2sgbWF5IGV2ZW4gYmUgYWJsZSB0byBkZXRlY3QgYmFyb21ldHJpYyBwcmVzc3VyZS4gQWxsIG9mIHRoaXMgd2l0aCBhIHNpbmdsZSwgZ2lnYW50aWMgdG9vdGguIkl0J3Mgbm9ybWFsbHkgbXVjaCBsb25nZXIsIGJ1dCB0aGlzIHdhdGVyIGlzIGZyZWV6aW5nISIuIApPbiBlYWNoIHJlZWwgdGhlcmUgYXJlIG1hbnkgc3ltYm9scy4gVGhlcmUgYXJlIHRoZSBzdGFuZGFyZCA5cywgYW5kIDEwczsgSmFja3MgYW5kIFF1ZWVuczsgS2luZ3MgYW5kIEFjZXMuIFRoZW4gdGhlcmUgYXJlIHR1cnRsZXMgYW5kIHRyZWFzdXJlIGNoZXN0czsgb2N0b3B1c2VzIGFuZCBzZWFob3JzZXM7IGFuZCBwaWN0dXJlcyBvZiBmaXNoLCBzdGFyZmlzaCBhbmQgc3VucmlzZXMuIApEbyB5b3UgbWVhbiByb3VuZCBvciBzcXVhcmUgYmFzZXM/IEZvciBXYXJoYW1tZXIgRmFudGFzeSBCYXR0bGVzLCB0aGVyZSBpcyBubyBiYXNlIGNoYXJ0LCBhbmQgdGhlIHJ1bGVib29rIGV2ZW4gc2F5cyB0aGF0IHlvdSBzaW1wbHkgZmllbGQgeW91ciBtaW5pYXR1cmVzIHdpdGggd2hhdGV2ZXIgYmFzZXMgdGhleSBjYW1lIHdpdGguIDl0aCBBZ2UgaGFzIHNvbWUgdmVyeSBzdHJpY3QgYmFzaW5nIHJ1bGVzIGJhc2VkIG9uIHRoZSBsYXRlc3QgcmVsZWFzZXMgZnJvbSBHVyBiZWZvcmUgV2FyaGFtbWVyIEZhbnRhc3kgd2FzIGRpc2NvbnRpbnVlZCwgc28geW91IGNhbiBhbHdheXMgY2hlY2sgdGhlIDl0aCBBZ2UgYXJteSBsaXN0cyBhbmQgdXNlIHRoZW0gYXMgYSBndWlkZWxpbmUuIApUaGUgZW5lcmd5IGJlY29tZXMgYmxvY2tlZCBpZiB0aGUgc3BpbmFsIGNvbHVtbiBpcyBtaXNhbGlnbmVkLiAKSXQgd2FzIGFsbW9zdCBjbGljaGUgdGhlIHdheSB0aGluZ3MgdHVybmVkIG91dCBmb3IgMjYgeWVhciBvbGQgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBBbm5hIEtoYWl0IHdoZW4gc2hlIHdhcyBkZWFsdCBhbiB1bmx1Y2t5IGhhbmQgYnkgbGFkeSBsdWNrIGFuZCBvdXN0ZWQgZnJvbSBTdXJ2aXZvciBLYW9oIFJvbmcgdGhpcyB3ZWVrLiBCdXQgdGhhdCBleGFjdGx5IGhvdyB0aGUgZ2FtZSBvZiBTdXJ2aXZvciBnb2VzIGFuZCBwcmVjaXNlbHkgd2h5IEFubmEgaXMgc3VjaCBhIGZhbiBvZiBpdC4gVGhlIEJyb29rbHluIGJlYXV0eSBmb3VuZCBoZXJzZWxmIG9uIHRoZSB3cm9uZyBzaWRlIG9mIHRoZSBudW1iZXJzIHdoZW4gYSBzdXJwcmlzZSB0cmliZSBzd2FwIHBpbm5lZCBoZXIgYWdhaW5zdCBmb3JtZXIgQmVhdXR5IHRyaWJlIG1lbWJlciBUYWkgVHJhbmcsIGFuZCBldmVudHVhbGx5IHNoZSBiZWNhbWUgdGhlIHVuZm9ydHVuYXRlIHBsYXllciB2b3RlZCBvdXQgb2YgdGhlIEdvbmRvbCB0cmliZSBvbiBkYXkgMTQuCldpdGhvdXQgc2hhbXBvbywgc2hlJ3MgZm91bmQgaGVyIGhhaXIgaGFzIGEgbG9vc2UsIHByZXR0eSB3YXZlIHRvIGl0LCByYXRoZXIgdGhhbiB0aGUgdW5ydWxpbmVzcyBzaGUgdGhvdWdodCBzaGUgd2FzIGN1cnNlZCB3aXRoLiBTaGUncyByZWFsbHkgbGVhcm5lZCB3aGF0IGhlciBoYWlyIGNhbiBkbyAgIGFsbCBieSBkb2luZyBtdWNoLCBtdWNoIGxlc3MuLiAKVGhlc2UgY29tcGFuaWVzIGhhdmUgZ3Jvd24gbGFyZ2VyIGFuZCBtb3JlIHBvd2VyZnVsLCB0aGV5IGhhdmUgdXNlZCB0aGVpciByZXNvdXJjZXMgYW5kIGNvbnRyb2wgb3ZlciB0aGUgd2F5IHdlIHVzZSB0aGUgSW50ZXJuZXQgdG8gc3F1YXNoIHNtYWxsIGJ1c2luZXNzZXMgYW5kIGlubm92YXRpb24sIGFuZCBzdWJzdGl0dXRlIHRoZWlyIG93biBmaW5hbmNpYWwgaW50ZXJlc3RzIGZvciB0aGUgYnJvYWRlciBpbnRlcmVzdHMgb2YgdGhlIEFtZXJpY2FuIHBlb3BsZSwgV2FycmVuIGFkZGVkIGluIGhlciBwb3N0LiBSZXN0b3JlIHRoZSBiYWxhbmNlIG9mIHBvd2VyIGluIG91ciBkZW1vY3JhY3ksIHRvIHByb21vdGUgY29tcGV0aXRpb24sIGFuZCB0byBlbnN1cmUgdGhhdCB0aGUgbmV4dCBnZW5lcmF0aW9uIG9mIHRlY2hub2xvZ3kgaW5ub3ZhdGlvbiBpcyBhcyB2aWJyYW50IGFzIHRoZSBsYXN0LCBpdCdzIHRpbWUgdG8gYnJlYWsgdXAgb3VyIGJpZ2dlc3QgdGVjaCBjb21wYW5pZXMuIApUaGUgcG9saWN5IGVtcGhhc2l6ZWQgdGhhdCBubyBlbXBsb3llZXMgd291bGQgYmUgcHVuaXNoZWQgZm9yIHRha2luZyBhY3Rpb25zIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcG9saWN5Li4gClRoYW5rcyBmb3IgeW91ciBpbnB1dC5HYXZpdGhlciAgNiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvU2VhIGxldmVsIGFyY2hhZW9sb2d5IChhbmQgY29udGluZW50YWwgc3ViZHVjdGlvbiwgbm90IHN1cmUgaG93IHdlIGNhbiBkaWcgdGhhdCBvbmUpIGFyZSB0aGUgbGlrZWxpZXN0IGxlYWQgdG8gc2V2ZXJhbCBvZiBvdXIgcGxhbmV0IG15c3Rlcmllcy4gCldlIG1heSBtb2RpZnkgdGhlc2UgVGVybXMgZnJvbSB0aW1lIHRvIHRpbWUgYW5kIGF0IGFueSB0aW1lIGluIG91ciBzb2xlIGRpc2NyZXRpb24uIApQYXRyb25zIHBsYWNlZCB0aGUgc2VhbHMgYWxvbmdzaWRlIHJlZ3VsYXIgc3RhbXBzIHRvIHJhaXNlIGF3YXJlbmVzcyBvZiB0aGUgY2FtcGFpZ24uLiAKUGFsZSBieSBLaW0gSGFyZ3JlYXZlcyBQYXR0ZXJuIEJvb2sgMjEgcGF0dGVybnMgUlJQICQyOC45MCBQcmljZTogJDI4LjgwLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25UaGUgcGFpbiBmcm9tIHBva2llcyBsb3NzZXMgaXMgc29hcmluZy4gSXQncyBjYXVzaW5nIGRldmFzdGF0aW5nIGhhcm0gdG8gcGVvcGxlIGFjcm9zcyBydXJhbCBhbmQgcmVnaW9uYWwgVmljdG9yaWEuIEZyb20gcmVsYXRpb25zaGlwIGJyZWFrZG93bnMsIGZhbWlseSB2aW9sZW5jZSBhbmQgbWVudGFsIGlsbG5lc3MgdG8gaW5jcmVhc2VkIGNyaW1lIHJhdGVzIGFuZCBsb3NzIG9mIGxpZmUuIEJ1dCB0aGUgaW1wYWN0cyBhZmZlY3QgbW9yZSB0aGFuIGp1c3QgcHJvYmxlbSBnYW1ibGVycyAgIHdpdGggZmFtaWx5IG1lbWJlcnMsIG90aGVyIHJlbGF0aXZlcywgZW1wbG95ZXJzLCB3b3JrbWF0ZXMgYW5kIHRoZSB3aWRlciBjb21tdW5pdHkgYWxsIGltcGFjdGVkLiAKVGhlIG5ldyBwbGFudCBpbiBNaXNzaXNzYXVnYSBzaWduYWxzIHRoZSBjb21wYW55IGluY3JlYXNlZCBpbnRlcmVzdCBpbiB0aGUgQ2FuYWRpYW4gbWFya2V0LCBTb2RhU3RyZWFtIHNhaWQuCjM4eW8gYW5kIG15IGJhY2sgaXMgZ2V0dGluZyBhY2hleSBhZnRlciBzcXVhdHMgYW5kIGRlYWRsaWZ0cy4gdG8gdGhlIHBvaW50IHdoZXJlIGEgd2VlayBwb3N0IHNxdWF0cyBhbmQgaW0gc3RydWdnbGluZyB0byBiYXJiZWxsIHJvdyB3aXRoIGp1c3QgdGhlIGJhci4gSXRzIHBhaW5mdWwuCkdvdHRhIGdldCBpbiB0aGVpciBoZWFkLiAKSWYgSSBoYWQgYW5vdGhlciBjaGFuY2UgYXQgYnVzaW5lc3MsIEkgbmVlZGVkIHRvIG1ha2UgaXQgY291bnQuIFRoZSBjaGFuY2UgZmluYWxseSBhcnJpdmVkIG9uZSBkYXkgICBkYXkgNzAsIGluIGZhY3Qgd2hlbiBhbiBvbGQgZnJpZW5kIGNhbGxlZCBhbmQgb2ZmZXJlZCBtZSB3aGF0IHdvdWxkIGJlY29tZSBhIGxpZmUgY2hhbmdpbmcgb3Bwb3J0dW5pdHkuIApUd28gb2YgdGhlIGd1bSB0cmVlcyBhcmUgZXZlbiBoZXJpdGFnZSBsaXN0ZWQgYW5kIHdlcmUgcGFydCBvZiBhIHBsYW5uaW5nIGRpc3B1dGUgYSBjb3VwbGUgb2YgeWVhcnMgYWdvICAgdGhlIGNvdW5jaWwgd291bGRuIGxldCB0aGUgcHJvcGVydHkgZGV2ZWxvcGVycyBjdXQgdGhlbSBkb3duLCB0aGV5IHdlcmUgdG9vIGltcG9ydGFudCB0byB0aGUgc3RyZWV0c2NhcGUhLiAKQW5kIGl0IHdpbGwgY29zdCB0aGVtIHNlcnZlciBzcGFjZSBvciBodW1hbiBsYWJvciB0byB0cmFuc2ZlciB0aGF0IGRhdGEgdG8gdGhlIENpdHkuIFZpZGVvIGZpbGVzIGFyZSBodWdlIGFuZCB0cmFuc2ZlcnJpbmcgdGhlbSBpc24gZnJlZS4uIApGdXp6eTk2OTEgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkEgc3VjY2Vzc2Z1bCBpbnZlc3RvciBoYXMgdGhlaXIgb3duIHNldCBvZiBiZWxpZWZzIGFuZCBjb252aWN0aW9ucyB0aGV5IHN0aWNrIHRvIGJhc2VkIG9uIHRoZWlyIGNyaXRlcmlhLiAKVGhlIHBlb3BsZSBvZiBEZXRyb2l0IHN1cHBvcnRlZCwgYmFja2VkLCBhbmQgdm90ZWQgdGhhdCBjb3JydXB0aW9uIGludG8gcG93ZXIgZm9yIDQwIHllYXJzLiBUaGVyZSB3YXMgbm8gbXlzdGVyeSByZWdhcmRpbmcgdGhlIGNvcnJ1cHRpb24gYW5kIHNjYW5kYWwgb2NjdXJyaW5nIGFzIGl0IHdhcyBhbGwgb3ZlciB0aGUgbmV3cy4gSWYgeW91IHdhbnQgdG8gaGF2ZSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIERldHJvaXQgcG9saXRpY3MsIGxvb2sgaW50byBDb2xlbWFuIFlvdW5nLiAKVGhlIFN1aXRlZCBFbWVyYWxkIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBDbG90aCBpcyBhIGR1cmFibGUgYW5kIHdhdGVyIHJlc2lzdGFudCB0YWJsZWNsb3RoIHRoYXQgaXMgbWFkZSBvZiA3MCUgcG9seWVzdGVyIGFuZCAzMCUgT2xlZmluLiAKTCdlbmZhbnQgbmFpdCBzdWpldCBkZSBkcm9pdCBzJ2lsIG5haXQgdml2YW50IGV0IHZpYWJsZS4uIApMYXNlciBsaWdodCBkb2VzIG5vdCBleGNpdGUgb3IgaW50ZXJhY3Qgd2l0aCB0aGUgbW9sZWN1bGVzIGluIG1ldGFsIG9yIHBsYXN0aWMuClRvZGF5LCB0aGUgaG9vcGxhIGlzbiB0aGVyZSwgYnV0IEphbnVhcnkgYW5kIEZlYnJ1YXJ5IGFyZSBzdGlsbCB0aGUgYnVzaWVzdCBtb250aHMgZm9yIGludmVzdG1lbnQgZmlybXMuIFJSU1AgYW5kIFRGU0EgY29udHJpYnV0aW9ucyBhcmUgYSBwYXJ0IG9mIHRoYXQsIGJ1dCBpdCBhbHNvIGEgdGltZSB3aGVuIGludmVzdG9ycyBzaXQgZG93biBhbmQgZXZhbHVhdGUgdGhlaXIgcG9ydGZvbGlvcy4gVGhleSBoYXZlIHRoZWlyIGFubnVhbCBhY2NvdW50IHN0YXRlbWVudHMgaW4gaGFuZCwgYW5kIG1vcmUgaW5kb29yIHRpbWUgdG8gY29uc2lkZXIgbmV4dCBzdGVwcy4KTW92aW5nIGJleW9uZCB0aGUgcGh5c2ljYWwgYW5kIGludG8gdGhlIGVtb3Rpb25hbC9zcGlyaXR1YWwgaXMgdGhlIGdvYWwgb2YgbWFueSBib2R5d29yayBtb2RhbGl0aWVzLiBXYXRzdSBpcyBub3QgdW5pcXVlIGluIGFpbWluZyBmb3IgaGVhbGluZyBjYXRoYXJzaXMgd2hpbGUgcHJvdmlkaW5nIHBsZW50eSB0byBsb3ZlIG9uIGEgc3RyaWN0bHkgY29ycG9yYWwgbGV2ZWwuIEluIGhpcyBwcmFjdGljZSwgSmFlZ2VyIHNlZXMgd2hvIGNvbnNpZGVyIHRoZW1zZWx2ZXMgNSB0byAxNSBwb3VuZHMgb3ZlcndlaWdodCB5b3Uga25vdywgbW9zdCBvZiB1cyByZSB2aXNpb25pbmcgdGhlbXNlbHZlcyBhcyBzbGVlayBhbmQgYmVhdXRpZnVsLiBib2RpZXMgZG8gdGhlIGJlc3QgaW4gd2F0ZXIuIEEgbGl0dGxlIGJpdCBvZiBmYXQgaGVscHMgeW91IGZsb2F0LiBNeSBtb3N0IHJlY2VudCBlcGlwaGFueSB0b29rIHBsYWNlIG9uIHRoZSB1bmxpa2VseSBjb3JuZXIgb2YgNzB0aCBhbmQgUm9vc2V2ZWx0LCBpbiBTZWF0dGxlIFJvb3NldmVsdCBEaXN0cmljdC4gU2VtaXMgcm9hcmVkIGRvd24gdGhlIGJsb2NrIGFzIEkgZW50ZXJlZCB0aGUgYmFtYm9vIGdhdGVzIG9mIE0gKCBmbG9vZCBteXNlbGYgd2l0aCBsaWdodCBhbiB1cmJhbiByZXRyZWF0IHdoZXJlIG93bmVyIEJyaWRnZXQgVGhvbXBzb24gd2FzIGFib3V0IHRvIG9wZW4gYSBXYXRzdSBmYWNpbGl0eS4gQSBzdW5ueSBicmljayBjb3VydHlhcmQgc2V0IGFib3V0IHdpdGggc21hbGwgZm91bnRhaW5zIGFuZCBzdGF0dWVzIG9mIEFzaWFuIGRlaXRpZXMgYnJvdWdodCBtZSB0byBicmFuZCBuZXcgd29vZGVuIHN0ZXBzIGxlYWRpbmcgdG8gdGhlIGV2ZW4gbmV3ZXIgcG9vbCA0IGZlZXQgZGVlcCwgMTIgZmVldCBpbiBkaWFtZXRlciB1bmRlciBhIGNoYXJtaW5nIHdvb2RlbiBnYXplYm8uIEphZWdlciwgYSBsb25nIGRyaW5rIG9mIHdhdGVyIGRyaW5raW5nIGEgbG9uZyBib3R0bGUgb2YgU21hcnQgV2F0ZXIsIGRpcmVjdGVkIG1lIHRvIGEgZmlndXJlIGVpZ2h0IHNoYXBlZCBiYW1ib28gc3RydWN0dXJlIG9mIHR3byByb29tczogdGhlIGNoYW5naW5nIHJvb20gYW5kIHNob3dlci4gTm93IHNldmVuIG1vbnRocyBwcmVnbmFudCwgSSB3YWRkbGVkIGludG8gdGhlIHBvb2wsIGVhZ2VyIGZvciB3ZWlnaHRsZXNzIGdyYWNlLgpUaGlzIFJQMkQgaXMgZXhwZWN0ZWQgdG8gYmUgaW4gdGhlIHRoZXJhcGV1dGljYWxseSBhY3RpdmUgcmFuZ2UgYmFzZWQgb24gcHJlY2xpbmljYWwgZWZmaWNhY3kgc3R1ZGllcy4gCkVsZSBwb2RlcmlhIHBhZ2FyIHRvZG9zIHNhbHJpb3MgZW5vcm1lcyB4aWl0YSBjb25xdWlzdGFyIGEgQXJiaWEgU2F1ZGl0YSBlIG9zIEVzdGFkb3MgZG8gR29sZm8uIApXaGVuIHlvdXIgaGVhcnQgaGVhbHRoIGdvZXMgcGFzdCBjYXN1YWwgbW9uaXRvcmluZyBhbmQgcmVxdWlyZXMgaG9zcGl0YWwgZ3JhZGUgdHJhY2tpbmcgeW91IGNhbiBkZXBlbmQgb24sIHRoZSBuZXcgQXBwbGUgV2F0Y2ggU2VyaWVzIDQgaXMgdGhlIHNpZGVraWNrIHlvdSd2ZSBiZWVuIHdhaXRpbmcgZm9yLiBKdXN0IHJlbGVhc2VkIGluIHRoZSBmYWxsIG9mIDIwMTgsIHRoZSBTZXJpZXMgNCB3YXMgYmxlc3NlZCB3aXRoIG51bWVyb3VzIHVwZGF0ZXMgIG9uZSBvZiB0aGUgbW9zdCBpbXByZXNzaXZlIGJlaW5nIGFuIGV4Y2x1c2l2ZSBFQ0cgYXBwIGZvciBoZWFydCByYXRlIG1vbml0b3JpbmcuIApNYXliZSB3aXRoIDUga2V5cyB0aGUgaG9sZGVycyB3ZW50IGFwYXJ0IGFmdGVyIHRoZSBrZXkgd2FzIHJlbW92ZWQuIApEYXZ5IGRlaWduZWQgbm8gcmVzcG9uc2UuIEhlIG1hcmNoZWQgYXdheSBkb3duIHRoZSBsYW5lLCBmb2xsb3dlZCBieSB0aGUgbWVlayBEb3JhLiBCdXQgaGlzIHNvdWwgc2VldGhlZCB3aXRoaW4uIApCdXQgdGhlbiBhcyBvdGhlciBwZW9wbGUncyB0ZXN0aW1vbmllcyBjb21lIGludG8gdGhlIHN0b3J5IGFzaWRlIGZyb20gaGlzIG93biBhY2NvdW50LCBoZSBtb3JwaHMgaW50byBhIHBhcmFub2lkIGFuYXJjaGlzdC4uIApMYWJvciBpcyByZXBvcnRlZGx5IGNvbnNpZGVyaW5nIHZvdGluZyBmb3IgdGhlIGZ1bGwgJDE0MCBiaWxsaW9uIHRheCBjdXQgYW5kIGJhbmtpbmcgb24gd2lubmluZyB0aGUgZWxlY3Rpb24gdG8gcmV2ZXJzZSB0aGUgcGFydHMgaXQgZG9lc24ndCBsaWtlLgpBUlBBTkVULCBvbmUgb2YgdGhlIEludGVybmV0J3MgcHJlZGVjZXNzb3JzLCBiZWdhbiBtb2Rlc3RseSBhcyBhIHRocmVlIG5vZGUgbmV0d29yay4gClNtb290aCBtdXNjbGUgaGFzIHRoZSBhYmlsaXR5IHRvIHN0cmV0Y2ggYW5kIG1haW50YWluIHRlbnNpb24gZm9yIGxvbmcgcGVyaW9kcyBvZiB0aW1lLiBJdCBjb250cmFjdHMgaW52b2x1bnRhcmlseSwgbWVhbmluZyB0aGF0IHlvdSBkbyBub3QgaGF2ZSB0byB0aGluayBhYm91dCBjb250cmFjdGluZyBpdCBiZWNhdXNlIHlvdXIgbmVydm91cyBzeXN0ZW0gY29udHJvbHMgaXQgYXV0b21hdGljYWxseS4gCkluIHNtYWxsIHNwYWNlIGdhcmRlbnMsIGNsdW1waW5nIGZvcm1zIGFyZSBxdWl0ZSBhdCBob21lLCBhZGRpbmcgYSB0cm9waWNhbCB0b3VjaCB0byBvdXIgbGFuZHNjYXBlcy4gCkl0IHN0dXBpZCBpbiBoaW5kc2lnaHQsIGJlY2F1c2UgdGhlcmUgYSBsb3Qgb2Ygc3R1ZmYgbXkgcGFyZW50cyBhY3R1YWxseSBkaWQsIHdoZXJlYXMgdGhpcyBpcyBvbmx5IHNvbWV0aGluZyB0aGF0IHRoZXkgdHJpZWQgdG8gZG8sIGJ1dCBpdCBmZWVscyBsaWtlIEkgd2FzIGhhbmRsaW5nIGV2ZXJ5dGhpbmcgYWxsIHJpZ2h0IHVudGlsIHRoaXMgY2FtZSBvdXQsIGFuZCB0aGVuIHN1ZGRlbmx5IEkgY291bGRuIGFueW1vcmUuLiAKU2x5UmVmZXJlbmNlICA1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJZiB5b3Ugd2FudCB0byBsZWFybiBhbnkgb3RoZXIgbmV3IHNraWxsIGxpa2UgZm9vdGJhbGwsIGNvb2tpbmcgb3IgY3JhZnRpbmcsIHlvdSBiZWdpbiBieSBvYnNlcnZpbmcgb3RoZXJzLiAKRnN0b3BwZXJzIEhvdyBUbyBCZWNvbWUgQSBQcm9mZXNzaW9uYWwgQ29tbWVyY2lhbCBXZWRkaW5nIFBob3RvZ3JhcGhlciBUb3JyZW50IERPV05MT0FEIGMxMTM2MWFkZWQgUHJvZmVzc2lvbmFsIFBob3RvZ3JhcGh5IENvdXJzZXMgYW5kIC4gOSBNYXIgMjAxOCAuIEhvdyBUbyBCZWNvbWUgQSBQcm9mZXNzaW9uYWwgQ29tbWVyY2lhbCBXZWRkaW5nIFBob3RvZ3JhcGhlciBUb3JyZW50IGJ5IFF1eXJ5cGVyLCByZWxlYXNlZCAwOSBNYXJjaCAyMDE4IEhvdyBUbyBCZWNvbWUgQS4gT3VyIEZzdG9wcGVycyB0dXRvcmlhbCBIb3cgVG8gQmVjb21lIGEgUHJvZmVzc2lvbmFsIENvbW1lcmNpYWwgV2VkZGluZyBQaG90b2dyYXBoZXIgaXMgZmluYWxseSBoZXJlISBMZWUgTW9ycmlzIGFuZCBJIGhhdmUgc3BlbnQgb3ZlciAzIHllYXJzIHBsYW5uaW5nIGFuZC4gCkluIHRoZSBwZXJmZWN0IHdvcmxkIGl0IHdvdWxkIGJlIGEgdGhpcmQgY2hlY2ssIGZpcnN0IG1pcnJvciwgc2hvdWxkZXIgY2hlY2sgYW5kIHRoZW4gYmxpbmRzcG90IG1vbml0b3IuIEkgbGlrZSBzYWZldHkgdGVjaCBidXQgaXQgYWxzbyB3b3JyeWluZyBhdCB0aGUgc2FtZSB0aW1lLi4gCkZyZWRlcmlrIEFuZGVyc2VuIHdpbGwgc3RhcnQgaW4gZ29hbCBmb3IgdGhlIExlYWZzLgpUcmFpbmluZywgTGljZW5zaW5nIGFuZCBDZXJ0aWZpY2F0aW9uSWYgeW91IHdhbnQgdG8gcHJhY3RpY2UgbWFzc2FnZSB0aGVyYXB5IGFuZCBxdWFsaWZ5IGZvciBsaWFiaWxpdHkgaW5zdXJhbmNlLCB5b3UgbmVlZCB0byBiZSBsaWNlbnNlZCBpbiB5b3VyIHN0YXRlLiBJbiBtb3N0IHN0YXRlcywgeW91IG5lZWQgYXQgbGVhc3QgNTAwIGhvdXJzIG9mIHRyYWluaW5nIGZyb20gYW4gYWNjcmVkaXRlZCBwcm9ncmFtLiBCZWZvcmUgZW5yb2xsaW5nIGluIGFueSBzY2hvb2wsIGhvd2V2ZXIsIHZlcmlmeSB0aGUgcmVxdWlyZW1lbnRzIGluIHlvdXIgc3RhdGUuCiAgeWFoIFdURi4uIApCdXQgbWFuIHdhdGNoaW5nIHRoYXQgdmlkZW8gYnJvdWdodCBtZSBiYWNrIHRvIGEgd2VpcmQgcGxhY2UsIHdoZXJlIEkgZ290IHRvIGNvZXhpc3Qgd2l0aCBteSAxMCB5ZWFyIG9sZCBraWRzZWxmIHdobyB3YW50ZWQgdG8gc2V0IHJlY29yZHMgYW5kIG15IDIwIHllYXIgb2xkIGtpZHNlbGYgYWxsIGJyb2tlbiBhbmQgYWJvdXQgdG8gICBhbnl3YXkuIApBZnRlciB0aGUgY2FyZHMgYXJlIGV4Y2hhbmdlZCwgZGV0ZXJtaW5lIHRoZSB3aW5uZXIgb2YgdGhlIGdhbWUuIFdoaWNoIGZpdmUgY2FyZCBkcmF3IHBva2VyIGhhbmQgYmVhdHMgd2hpY2g/IFJldmlldyB0aGUgbGlzdCBiZWxvdywgZnJvbSBiZXN0IGhhbmQgdG8gd29yc3Q6VGhlIHJveWFsIGZsdXNoIGlzIHRoZSBiZXN0LiBJdCBjb250YWlucyBhbiBhY2UsIGtpbmcsIHF1ZWVuLCBqYWNrIGFuZCAxMC4gCk1hbnkgcGVvcGxlIGhhdmUgd2F0Y2hlZCBUZXhhcyBIb2xkZW0gdG91cm5hbWVudHMgb24gdGVsZXZpc2lvbiBhbmQgaXQgbG9va3MgZWFzeSB0byBwbGF5LiBIb3dldmVyIGJlZm9yZSB5b3UgcmFjZSBkb3duIHRvIHRoZSBjYXNpbm8gYW5kIHNpZ24gdXAgZm9yIGEgaGlnaCBzdGFrZXMgdG91cm5hbWVudCB5b3UgbmVlZCB0byBsZWFybiB0aGUgYmFzaWNzIG9mIHRoZSBnYW1lIGFuZCBnZXQgc29tZSBwbGF5aW5nIGV4cGVyaWVuY2UgaW4gbG93IGxpbWl0IGdhbWVzLiBUaGF0IG1lYW5zIHRoYXQgYXQgYW55IHRpbWUgYSBwbGF5ZXIgY2FuIGJldCBhbGwgb2YgaGlzIGNoaXBzLiBUaGlzIGlzIGEgZ3JlYXQgZm9ybWF0IGZvciB0b3VybmFtZW50cyBidXQgYXMgYSBiZWdpbm5pbmcgcGxheWVyIHlvdSB3aWxsIHdhbnQgdG8gZmlyc3QgbGVhcm4gdG8gcGxheSBMaW1pdCBUZXhhcyBIb2xkJ2VtLiBMaW1pdCBnYW1lcyBoYXZlIHN0cnVjdHVyZWQgYmV0dGluZyByb3VuZHMgYW5kIHlvdSBhcmUgbGltaXRlZCB0byB0aGUgYW1vdW50IG9mIG1vbmV5IHlvdSBjYW4gYmV0IGR1cmluZyBlYWNoIHJvdW5kLiBNb3JlIHByZWNpc2VseSB5b3Ugd2lsbCB3YW50IHRvIHBsYXkgTG93IExpbWl0IFRleGFzIEhvbGQnZW0gYXMgeW91IGxlYXJuIHRoZSBnYW1lLiBTb21lIG9mIHRoZSBsb3cgbGltaXQgZ2FtZXMgeW91IHdpbGwgZmluZCBpbiB0aGUgY2FyZHJvb20gYXJlIGhhdmUgYSBiZXR0aW5nIHN0cnVjdHVyZSBvZiAkMi80LCAkMy82ICQ0LzguIEFmdGVyIHlvdSBnYWluIGV4cGVyaWVuY2UgeW91IGNhbiBtb3ZlIHVwIHRoZSBoaWdoZXIgbGltaXRzIG9yIE5vIExpbWl0IGlmIHlvdSBkZXNpcmUsIGJ1dCB5b3UgbXVzdCBsZWFybiB0byB3YWxrIGJlZm9yZSB5b3UgY2FuIHJ1bi4gTGV0IG1lIGV4cGxhaW4gdGhlIGdhbWUgYW5kIHRoZW4gZ2l2ZSB5b3Ugc29tZSB3aW5uaW5nIHRpcHMgdG8gZ2V0IHN0YXJ0ZWQuClRoZSBsYXN0IHRpbWUgSSBzcG9rZSB3aXRoIGhlciBhYm91dCA1IHllYXJzIGFmdGVyIHRoZSBzdGFydCBvZiBoZXIgZW5kZWF2b3IuIE1vc3Qgb2YgdGhlIHB1cHMgYmVpbmcgYm9ybiBoYXZlIGxvbmdlciBub3NlcyBhbmQgaGF2ZSB3YXkgbGVzcyBicmVhdGhpbmcgcHJvYmxlbXMuIFNoZSBhbHNvIGlzIG5vdyB3b3JraW5nIHdpdGggYW4gRW5nbGlzaCBidWxsIGRvZyBicmVlZGVyLiBUaGVpciBjdXJyZW50IGdvYWwgaXMgdG8gaGF2ZSB0aGUgZG9ncyBiZSBhYmxlIHRvIHJlcHJvZHVjZSBvbiB0aGVpciBvd24sIHRoZW4gd29yayB1cCB0byBoYXZpbmcgYSBuYXR1cmFsIGJpcnRoIGluc3RlYWQgb2YgYSBjIHNlY3Rpb24uR3dlbkx1cnkgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ29QdXQgaXQgdG8gdGhlbSB0aGlzIHdheSwgIlNpbmNlIHlvdSBvdmVycnVsZWQgbXkgd2lzaGVzLCB0aGlzIGlzIHdoYXQgZ29pbmcgdG8gaGFwcGVuLiAKU28gd2hhdCB0aGluZ3MgZGlkIHRoZXkgZG8gb3IgZGlkbid0IGRvIHRoYXQgbWFkZSBtZSBhIGNyYW5reSBjdXN0b21lcj8gVGhleSBhcmUgcHJvYmFibHkgdGhlIHNhbWUgdGhpbmdzIHRoYXQgbWFrZSB5b3UgYW5kIHlvdXIgY3VzdG9tZXJzIGdyaW1hY2UuIExldCBtZSBzYXksIHRoYXQgd2l0aCBqdXN0IGEgbGl0dGxlIGF0dGVudGlvbiB0byB0aGUgZGV0YWlscyBpbiBhIGJ1c2luZXNzLCB5b3UgY2FuIHR1cm4gdGhhdCBjcmFua3kgY3VzdG9tZXIgaW50byB5b3VyIG51bWJlciBvbmUgY2hlZXJsZWFkZXIhCkJvcmdhdGEgaXMgc3VpbmcgSXZleSwgU3VuLCBHZW1hY28sIGFuZCBhIEpvaG4gRG9lLCByZWZlcnJpbmcgdG8gdGhlIGluZGl2aWR1YWwgZW1wbG95ZWUgYXQgdGhlIGNhcmQgY29tcGFueSB3aG8gd2FzIHJlc3BvbnNpYmxlIGZvciBpbnNwZWN0aW5nIHRoZSBjYXJkcyBzZW50IHRvIHRoZSBjYXNpbm8uLiAKQmFkZ2VzIGFyZSB0aGUgbGl0dGxlIHJlZCBjaXJjbGVzIHRoYXQgYXBwZWFyIGluIHRoZSB1cHBlciByaWdodCBjb3JuZXIgb2YgYXBwcywgc3VjaCBhcyB0aGUgTWFpbCBhcHAsIHRoYXQgbm90aWZ5IHlvdSBvZiB1bnJlYWQgbWVzc2FnZXMuIFlvdSBjYW4gc3RvcCB5b3VyIGlQaG9uZSBmcm9tIGRpc3BsYXlpbmcgYW55IGFsZXJ0cyBieSB0YXBwaW5nICJTZXR0aW5ncyIgYW5kIHRoZW4gIk5vdGlmaWNhdGlvbnMuIiBUYXAgIk1lc3NhZ2VzIiBhbmQgdGhlbiB0YXAgIk5vbmUiIGJlbmVhdGggQWxlcnQgU3R5bGUuIApFZGl0OiBQbGVhc2Uga2VlcCBpbiBtaW5kIHRoYXQgaXMgdmVyeSBoYXJkIG9uIHRoZSBibGFkZSBvZiB5b3VyIGtuaWZlLCBzbyB5b3Ugd2lsbCBuZWVkIGEgaGlnaCBxdWFsaXR5IGtuaWZlIHdpdGggYSBzdGVlbCBibGVuZCB0aGF0IG1hZGUgZm9yIHRvdWdoIG91dGRvb3IgdXNlLiBCcmFuZHMgc3VjaCBhcyBCdXNzZSBhbmQgRXNlZSwgYXJlIHJlcHV0YWJsZSBicmFuZHMgdGhhdCBjYW4gc3RhbmQgdXAgdG8gdGhhdCBraW5kIG9mIGFidXNlLiBUaGV5IGEgYml0IG9mIGFuIGludmVzdG1lbnQsIGJ1dCB3ZWxsIHdvcnRoIHRoZSBwcmljZSBhbmQgeW91IHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGtleSBwYXJ0cyBvZiB5b3VyIGtpdCwgYXJlIHRoZSBvbmVzIHRoYXQgV09OIGZhaWwgb24geW91IGluIHRoZSBtaWRkbGUgb2YgdGhlIGJhY2tjb3VudHJ5IS4gClRoaXMgd2FzIHRoZSBtb3N0IGZ1biB3ZSBoYWQgYnkgZmFyIGFuZCBzdXJwcmlzaW5nbHkgZW5vdWdoIHRoZSBjb29sZXN0IHB1cmNoYXNlIHdlIG1hZGUgdGhhdCBqdXN0IHB1dCB0aGUgaWNpbmcgb24gdGhlIGNha2Ugd2FzIGEgU3VpdGVkIEJyb256ZSBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgQ2xvdGguIE5vdyBpdCByZWFsbHkgZG9lc24ndCBzb3VuZCBsaWtlIG11Y2ggYnV0IHlvdSB3b3VsZG4ndCBiZWxpZXZlIGhvdyBtdWNoIGRpZmZlcmVudCBpdCBtYWRlIHRoZSBlbnRpcmUgcm9vbS4gV2hlbiB5b3Ugd2FsayBkb3duc3RhaXJzIGl0J3MgbGlrZSB5b3UncmUgaW4gdGhpcyBmYW5jeSBsaXR0bGUgaG90ZWwgbG9iYnkgb3Igc29tZXRoaW5nIGV4Y2VwdCB0aGVyZSBpcyBhIGJ1bmNoIG9mIGNhc2lubyB0YWJsZXMgd2l0aCBtYXJibGUgZmluaXNoIGFsbCBhcm91bmQuLiAKRmFpbGluZyB0aGlzIEknZCBiZSBoYXBweSB3aXRoIGEgY29tcHJlaGVuc2l2ZSBkYXRhIHNldCBvZiBhbnkgZmluYWwgdGFibGUgb2YgYSBoaWdoIHJhbmtpbmcgcHJvZmVzc2lvbmFsIHJlYWwgd29ybGQgKG5vdCBvbmxpbmUpIHBva2VyIHRvdXJuYW1lbnQuIEhvbGRlbSBpcyBhIGdpdmVuIChub3QgaW50ZXJlc3RlZCBpbiBvdGhlciBwb2tlciBmb3JtYXRzIHRoYW5rcykuIApJbiBJTCBmaW5nZXJwcmludHMgYXJlIG5vdCBtYW5kYXRvcnkgYXQgdGhlIHByZXNlbnQgdGltZSBidXQgYXJlIHJlY29tbWVuZGVkIHRvIGV4cGVkaXRlIGFuZCBzaG9ydGVuIHRoZSBkdXJhdGlvbiBvZiB0aGUgRkNDTCBhcHByb3ZhbCBwcm9jZXNzLiBNYXJ0aW4gcG9zc2libHkgdGhvdWdodCB0aGF0IGhlIHdhcyBpbiB0aGUgY2xlYXIgc2luY2UgdGhlIGxlc3Mgcmlnb3JvdXMgRk9JRCB2ZXR0aW5nIGRpZG4ndCB1bmNvdmVyIGhpcyAxOTk1IGZlbG9ueSBjb252aWN0aW9uIGluIE1TIGFuZCBzb3VnaHQgdG8gZmFzdCB0cmFjayBoaXMgRkNDTCBhcHBsaWNhdGlvbi4gQWxzbywgaGUgbXVzdCBoYXZlIGxpZWQgd2hlbiBmaWxsaW5nIG91dCB0aGUgNDQ3MyBmb3JtIHJlcXVpcmVkIGJ5IEZGTHMgdG8gcHVyY2hhc2UgYSBmaXJlYXJtIGFuZCBzdGFydGluZyB0aGUgdGhyZWUgZGF5IHdhaXRpbmcgcGVyaW9kIGJlZm9yZSBjb21wbGV0aW5nIHRoZSBwdXJjaGFzZSB0cmFuc2FjdGlvbiB3aXRoIHRoZSBndW4gZGVhbGVyLgpGb3JjZWQgdG8gbWFrZSBhIG1vdmUsIGhlIGJldCBhbGwgb2YgaGlzIHJlbWFpbmluZyBjaGlwcyB3aXRoIGEgc3VpdGVkIHF1ZWVuIG5pbmUgYmVmb3JlIHRoZSBmbG9wLiBCZWhpbmQgaGltLCBXYXJyZW4gWmFja2V5IGhhZCBhbiBlYXN5IGNhbGwgd2l0aCBhbiBhY2UgYW5kIGEga2luZywgYSB2ZXJ5IHN0cm9uZyBoYW5kLiAKU29tZXRoaW5nIHNvIHVuaXF1ZSBjb3VsZCBub3QgYWZmb3JkIGV2ZW4gYSBzZWNvbmQgb2YgaXQgbWlzc2VkLlVudGlsLCBvZiBjb3Vyc2UsIGhlIHdhcyBtaXNzZWQgZW50aXJlbHkuIEl0IHdhcyBvbmx5IHRoZW4gdGhhdCBwZW9wbGUgcmVhbGl6ZWQgaGUgd2FzIG5vdCBhIG1vbnN0ZXIsIG5vciBhIEdvZC5IZSBydXNoZWQgbG93LCBjbGluZ2luZyB0byB0aGUgd2FsbCwgYW5kIHNtYXNoZWQgaW50byB0aGUgZG9vci4gQW5vdGhlciBndWFyZCB0dXJuZWQgYSBjb3JuZXIsIHdhbGtpbmcgc3RyYWlnaHQgdG93YXJkIGhpbSwgY29tcGxldGVseSB1bmZhemVkLiAKVGhlIG5leHQgZGF5IEkgaGFkIGFuIG9mZmVyLi4gClRoZSBlY29ub215IHdpbGwgY29udGludWUgdG8gdGFuayBhcyBwdWJsaWMgcmVzb3VyY2VzIGR3aW5kbGUsIHByaXZhdGUgaW52ZXN0bWVudCBmb2xsb3dzLiAKSWYgeW91IGFyZSBmaW5lIHdpdGggdGhlIGdhbWUgYmVjb21pbmcgbmljaGUgd2l0aCAyayBwbGF5ZXIgYmFzZSwgc3VyZSBsZXQgZ2l2ZSBpdCBzb21lIHRpbWUuIEJ1dCB0aGUgbGVhdmluZyBwbGF5ZXJzIHdvbiBiZSBjb21pbmcgYmFjaywgaGVhcnRoc3RvbmUgaXMgc3RpbGwgdGhlcmUsIE1URyBhcmVuYSBpcyBhc3NlcnRpbmcgaXQgcHJlc2VuY2UgZm9yIG1vcmUgaGFyZGNvcmUgcGxheWVycy4gCkxheSdzIFN1cGVyIENoaXBzIChIZWlueiBLZXRjaHVwL01leGljYW4gUGVwcGVyL1BlcmZlY3QgUGlja2xlcy9TYWx0ICduJyBQZXBwZXIgW2FsbCB0aHJvdWdoIERlbGhhaXplICkgYW5kIExheSdzIEJha2VkIENoaXBzIChNZWRpdGVycmFuZWFuIEhlcmJzL3Rocm91Z2ggRGVsaGFpemUgKS4gQXMgd2l0aCBEb3JpdG9zLCBMYXkncyBhcmUgbWFudWZhY3R1cmVkLCBkaXN0cmlidXRlZCBhbmQgaW1wb3J0ZWQgaW4gR2VybWFueSBieSBGcml0byBMYXkncyBCZW5lbHV4IGRpdmlzaW9uLCBTbWl0aCdzIEZvb2QgR3JvdXAuIApHZXQgaW4gdGhlcmUgbGF0ZSBnZXQgdG8gd29yayBhbmQgbGVhdmUgd2l0aCBzb21ldGhpbmcgYnkgMiAyMzAgYXQgdGhlIGxhdGVzdC4gCkhlIGxpdmVkIGhpcyBsaWZlIHRvIHRoZSBmdWxsZXN0LCBkb2luZyBleGFjdGx5IHdoYXQgaGUgd2FudGVkIHRvIGRvLiAKQ2FuYWRhIFBlbnNpb24gUGxhbiBiZW5lZml0cyB3b3JrIG91dCB0byB0aGUgJDkwMCBwZXIgbW9udGggaGUgY3VycmVudGx5IHJlY2VpdmVzIGFuZCBhIHByb2plY3RlZCAkOTAwIHBlciBtb250aCBmb3IgTG91aXNhLiAKVW5sZXNzLCB0aGF0IGlzLCBhIGxlZ2lzbGF0aXZlIHdvcmthcm91bmQgY2FuIGJlIGZvdW5kIGFraW4gdG8gdGhlIHNsZWlnaHQgb2YgaGFuZCB0aGF0IG9wZW5lZCB0aGUgZG9vciB0byBjYXNpbm8gZ2FtYmxpbmcgZGVzcGl0ZSBhIGNvbnN0aXR1dGlvbmFsIHByb2hpYml0aW9uIGFnYWluc3QgZ2FtYmxpbmcuIApNZWluIEZyZXVuZCBNaWNoaSBoYXQgaW4gZGVyIGt1cnplbiBaZWl0IHNlaW5lcyBCZXN1Y2hzIGF1ZiBMYSBQYWxtYSB2aWVsZSBTdHJuZGUgdW5kIEJhZGVtZ2xpY2hrZWl0ZW4gZGVyIEluc2VsIGVya3VuZGV0LiBTZWluZSBMYSBQYWxtYSBTdHJhbmQgSW1wcmVzc2lvbmVuIHZlcmZmZW50bGljaGUgaWNoIGFscyBrbGVpbmUgU2VyaWUgdm9uIEdhc3RiZWl0cmdlbi4gSGV1dGUgVGVpbCAzIGRlciBTZXJpZSwgZGllIEJhZGVwbHR6ZSBFbCBSZW1vIHVuZCBQdW50YSBMYXJnYToKTXkgZ3JhbmRtb3RoZXIgYW5kIGdyZWF0IGdyYW5kbW90aGVyIGp1c3QgZGVhbHQgd2l0aCBpdCBmb3IgeWVhcnMuIEV2ZW50dWFsbHksIHdoZW4gb25lIG9mIG15IGdyZWF0IHVuY2xlcyAoYWxzbyBpbnZvbHZlZCBpbiB0aGUgbWFmaWEpIHdhcyBpbiBoaXMgZWFybHkgdHdlbnRpZXMsIGhlIGdvdCBoaXMgZGFkIHRvIGZpbmFsbHkgbGVhdmUgdGhlbSBhbG9uZSBieSBkYW5nbGluZyBoaW0gaGVhZGZpcnN0IG91dCBvZiBhIHdpbmRvdy4uIApJbiB0aGUgd29ybGQgb2Ygc3VwZXJidWdzIChiYWN0ZXJpYSB0aGF0IGhhcyBncm93biByZXNpc3RhbnQgdG8gYW50aWJpb3RpY3MpIENsb3N0cmlkaW9pZGVzIGRpZmZpY2lsZSwgYSBiYWN0ZXJpdW0gdGhhdCBjYXVzZXMgZGlhcnJoZWEgYW5kIGNvbGl0aXMsIGlzIGFtb25nIHRoZSBtb3N0IHN0dWJib3JuLiBJbiAyMDEzIHRoZSBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgY2FsbGVkIEMuIERpZmYgYW4gdGhyZWF0IGFmdGVyIGNhdXNpbmcgMzAsMDAwIGRlYXRocyBpbiAyMDExLiAKQWRkaXRpb25hbGx5LCB0aG91c2FuZHMgb2YgY2l2aWxpYW5zIHdlcmUgZXN0aW1hdGVkIHRvIGhhdmUgYmVlbiBraWxsZWQsIGFjY29yZGluZyB0byBOaW5ldmVoJ3MgcHJvdmluY2lhbCBjb3VuY2lsLiBUaGF0IGRpZCBub3QgaW5jbHVkZSB0aG9zZSBzdGlsbCBiZWxpZXZlZCBidXJpZWQgdW5kZXIgY29sbGFwc2VkIGJ1aWxkaW5ncy4KQW1hem9uIGlzIGJ1aWxkaW5nIGEgbWFya2V0aW5nIGVjb3N5c3RlbSB0aGF0IGNvdWxkIHJpdmFsIEdvb2dsZSwgdGhvdWdoLiBJdCBhbHNvIGhhcyB2aWRlbywgdGhyb3VnaCBGaXJlIFRWIGFuZCBUd2l0Y2gsIHRoZSBzdHJlYW1pbmcgc2VydmljZSBzaW1pbGFyIHRvIFlvdVR1YmUuIEFtYXpvbiBhbHNvIG93bnMgSU1EQiwgd2hpY2ggc2hvd3MgdmlkZW8gYWRzLCBhbmQgYWxzbyBoYXMgcHVibGlzaGVyIHNlcnZpY2VzIHRoYXQgZGVhbCB3aXRoIHdlYnNpdGVzIGp1c3QgbGlrZSBHb29nbGUncyBwdWJsaXNoZXIgYWQgbmV0d29yaywgd2hlcmUgaXQgY2FuIHRhcmdldCBhZHMgb3V0c2lkZSB0aGUgd2Vic2l0ZXMgaXQgZGlyZWN0bHkgb3ducy4uIApUaGUgYWN0b3IncyB3aWZlIHNhaWQgc2hlIHdhcyBzaGVwaGVyZGluZyBoZXIgY2hpbGRyZW4gUm9iaW4sIDExOyBKb25hdGhhbiwgOCwgYW5kIEplbm5pZmVyLCA1LCBhY3Jvc3MgYnVzeSBDYW5vbiBEcml2ZSB0byB0aGVpciBzY2hvb2wuIE1ycy4gQWxpY2UgQ29yZXkgdG9sZCBwb2xpY2U6ICJGcmllZGEgc3RvcHBlZCBtZSBhbmQgdG9sZCBtZSBub3QgdG8gdGFrZSB0aGUgY2hpbGRyZW4gYWNyb2ZzLiAKSW52ZXN0aW5nIGluIHBva2VyIGFjY2Vzc29yaWVzIGNhbiBiZSBmcnVzdHJhdGluZyBpZiB5b3UgZG9uJ3Qga25vdyB3aGVyZSB0byBsb29rLiBJZiB5b3UncmUgYW55dGhpbmcgbGlrZSBtZSwgc2lmdGluZyB0aHJvdWdoIGFsbCB0aGUgc2l0ZXMgb24gdGhlIGludGVybmV0IHRvIGZpbmQgcG9rZXIgY2hpcHMgY2FuIHRha2UgaG91cnMuIApCYXNlZCBvbiB0aGUgc3R1ZHkncyBjb21wYXJpc29uIHdpdGggYSBwcmV2aW91cyB0YWtlb2ZmLCB0aGUgTmF0aW9uYWwgVHJhbnNwb3J0YXRpb24gU2FmZXR5IEJvYXJkIChOVFNCKSBkZXRlcm1pbmVkIHRoYXQgdGhlIGFpcnBsYW5lJ3MgbGFjayBvZiByb3RhdGlvbmFsIHJlc3BvbnNlIHRvIHRoZSBjb250cm9sIGNvbHVtbiBpbnB1dCBkaWQgbm90IGJlY29tZSBhcHBhcmVudCB0byB0aGUgY2FwdGFpbiBpbiB0aW1lIGZvciBoaW0gdG8gaGF2ZSBzdG9wcGVkIHRoZSBhaXJwbGFuZSBvbiB0aGUgcnVud2F5Li4gCklzIGl0IGZhaXIgdGhhdCBzb21lb25lIHdobyBjb21taXRzIGZyYXVkIHNob3VsZCBubyBsb25nZXIgb3duIGEgZ3VuIG9yIHZvdGU/IEkgY2FuIHVuZGVyc3RhbmQgaWYgeW91IGdvIGluIHdpdGggYSBwaXN0b2wgYW5kIHNob290IHVwIGEgN0VsZXZlbiwgdGhlbiBJIHRoaW5rIHlvdSBzaG91bGRuIGJlIGFsbG93ZWQgeW91ciB3ZWFwb24gZm9yIGEgd2hpbGUgYnV0IHN0aWxsLCB5b3Ugc2hvdWxkIGJlIGFsbG93ZWQgdG8gdm90ZS4gCiJUaGlzIGluZm9ybWF0aW9uIGlzIHZpdGFsIGZvciBjb21tdW5pdHkgZGViYXRlIGFuZCByZXNwb25zZSB0byB0aGUgZXh0ZW5zaXZlIHNvY2lhbCBhbmQgZmluYW5jaWFsIGhhcm0gY2F1c2VkIGJ5IHBva2VyIG1hY2hpbmUgYWRkaWN0aW9uLCIgaGUgc2FpZC4gCldoYXQgd29yc2UgaXMgdGhhdCB0aGUgYm91bmNlciB0b2xkIHRoaXMgdG8gdGhlIHN0cmFuZ2VyIEkgd2FzIGNoYXR0aW5nIHdpdGggYW5kIG5vdCB0byBtZSwgd2hpY2ggcmVhbGx5IHN0cnVjayBhIG5lcnZlIHdpdGggbWUgYW5kIGNhdXNlZCBtZSB0byB5ZWxsIGF0IHRoZSBib3VuY2VyIChpbiBrb3JlYW4pIHRoYXQgdGhpcyBpcyBub3QgYWNjZXB0YWJsZSBhbmQgdGhlcmUgaXMgbm8gcmVhc29uIHRvIGJhciBtZSBmcm9tIGVudGVyaW5nIHRoZSBjbHViLiAKQWxkZXJhYW4gaGFkIGJlZW4gdGhlIGluaXRpYWwgdGFyZ2V0IGFsbCBhbG9uZywgYXMgT2JpIFdhbiB3aXRoIHRoZSBoaWdoIGdyb3VuZCB3YXMgdGhlIHByaW1hcnkgdGhyZWF0IHRvIHRoZSBEZWF0aCBTdGFyLiAKV2h5IHNob3VsZCBvbmxpbmUgZ2FtYmxpbmcgb3BlcmF0b3JzIGFuZCB0aGVpciBjdXN0b21lcnMgYmUgdGhlIG9ubHkgb25lIHRvIGJlYXIgdGhlIGJydW50IG9mIHRoZSBuZXcgbGF3cz8gU3VyZWx5IHRoZSBnYW1ibGluZyBpbmR1c3RyeSBpcyBqdXN0IGFzIGRlc2VydmluZyBvZiB0aGUgY29uY2Vzc2lvbnMgZ3JhbnRlZCB0byBzcG9ydHMgYmV0dGluZyBlc3RhYmxpc2htZW50cz8uIApNY0Rvd2VsbCwgYSByZXRpcmVkIHB1YmxpYyB3b3JrcyBkaXJlY3RvciwgYW5kIGhpcyB3aWZlIHdlcmUgZ2FtYmxpbmcgYXQgdGhlIEJvcmdhdGEgSG90ZWwgQ2FzaW5vIGluIEF0bGFudGljIENpdHkgb24gdGhlIHdlZWtlbmQgd2hlbiBoZSBiZXQgdGhlIGNhc2ggb24gYSBTaXggQ2FyZCBCb251cyBpbiBUaHJlZSBDYXJkIFBva2VyLCBoZSBzYWlkLgpUaGVuIHlvdSBoYXZlIHRvIHdlYXIgdGhlbSBhbiBob3VyIGJlZm9yZSB0aGUgcGxhbmUgZGVzY2VuZHMgYW5kIGxhbmRzLiAKV2lubmVycyBhcmUgZW5kdXJpbmc6IFRoZSB0cml1bXBoYW50IHBsYXllcnMgYXJlIHVzdWFsbHkgdG9sZXJhbnQuIEl0IGlzIG9mdGVuIHNlZW4gdGhhdCB0aGUgcGxheWVycyBkbyBnZXQgaW1wYXRpZW50IGFmdGVyIHRoZSBkZWFsaW5nIG9mIGhhbmQgYWZ0ZXIgaGFuZCBvZiBkZWJyaXMgY2FyZHMuIApZb3UgcmlnaHQuIEkgZG8gbmVlZCB0byB0YWxrIHRvIGFuIGF0dG9ybmV5LiBJIGhhdmUgY29tcGxleCBtZWRpY2FsIGlzc3VlcyBhbmQsIHRvIGJlIGhvbmVzdCwgSSBoYXZlbiBzZWVuIGEgZ2VuZXJhbCBwcmFjdGl0aW9uZXIgb3IgZm91bmQgb25lIHRvIHJlcGxhY2UgaGVyIHNpbmNlIHNoZSBmaXJlZCBtZS4gKFRoZSBraWRzLCB5ZXMsIGJ1dCBub3QgbWUuKSBUaGUgc2l0dWF0aW9uIHdhcyBraW5kIG9mIHRyYXVtYXRpYyBmb3IgbWUgYmVjYXVzZSBub3Qgb25seSBkaWQgSSBsb3NlIGEgZG9jdG9yIEkgbGVnaXRpbWF0ZWx5IGxpa2VkIGFuZCB0cnVzdGVkLCBidXQgaXQgYWxzbyBzZW50IG1lIGludG8gYSByZWFsbHkgaGFyZCB3aXRoZHJhd2FsIGZyb20gT3h5Y29kb25lLiBJIGhhdmUgYSB0aG9yYWNpYyBhbmV1cnlzbSBhbmQgcGFpbiBjb250cm9sIGlzIGltcG9ydGFudCB0byBtZS4gSXQgd2FzIGp1c3QgYSBzaGl0dHkgZXhwZXJpZW5jZSBhbGwgdGhlIHdheSBhcm91bmQuIEx1Y2tpbHksIG15IG9ydGhvIGRvY3RvciBzZW50IG1lIHRvIGEgcGFpbiBtYW5hZ2VtZW50IHNwZWNpYWxpc3QgYSBmZXcgbW9udGhzIGxhdGVyIGFuZCBJIGZvdW5kIHNvbWUgbmF0dXJhbCB3YXlzIHRvIGhlbHAgbXkgcGFpbiwgYnV0IGl0IHN0aWxsIHN1Y2tlZC4KT2gsIGFuZCBJJ3ZlIGFsc28gc2VlbiB0aGUgc2V0cyB0aGF0IGNhbiBiZSBwZXJzb25hbGl6ZWQgb3IgZ28gYWxvbmcgd2l0aCBhIHBva2VyIHJvb20gdGhlbWUuIEkgZG9uJ3Qga25vdyBhYm91dCB5b3UsIGJ1dCBJIGxvdmUgYSBnb29kIGdsYXNzIG9mIEd1aW5uZXNzc3RvdXQgLiBTbywgZ3Vlc3Mgd2hhdCBJJ20gY29uc2lkZXJpbmc/IFllYWggYSBwcm9mZXNzaW9uYWwgcG9rZXIgc2V0IHdpdGggdGhlIEd1aW5uZXNzIG5hbWUgYW5kIGxvZ28gb24gaXQuIApUaGF0IHNhaWQsIFJlYWNoIHdlYXBvbnMgYXJlIGluZGVlZCBiZXR0ZXIgYXQgZ2V0dGluZyBQQU0gb3Bwb3J0dW5pdHkgYXR0YWNrcywgYnV0IHRoZXkgZ2VuZXJhbGx5IHdvcnNlIGF0IGJhdHRsZWZpZWxkIGRlbmlhbC4gSWYgdGhlIG9ubHkgYXZlbnVlIGJldHdlZW4gdGhlIGVuZW1pZXMgYW5kIHlvdXIgYWxsaWVzIGlzIDIwIDI1IGZlZXQgd2lkZSwgdGhlbiB5ZWFoLCBhIEhhbGJlcmQgd2lsbCBkbyB3b25kZXJzIGJlY2F1c2UgeW91IGNhbiB0aHJlYXRlbiB0aGUgZW50aXJlIGF2ZW51ZS4gCkluanVyeSBhbmQgSW5mZWN0aW9uV29ya2luZyBhcyBhIG1hc3NhZ2UgdGhlcmFwaXN0IGlzIGV4dHJlbWVseSBwaHlzaWNhbGx5IGRlbWFuZGluZy4gTWFzc2FnZSB0aGVyYXBpc3RzIGFyZSB0eXBpY2FsbHkgb24gdGhlaXIgZmVldCBmb3IgbW9zdCBvZiB0aGVpciB3b3JraW5nIGRheXMgYW5kIHJlZ3VsYXJseSBjYXJyeSBvdXQgbW90aW9ucyB0aGF0IGNhbiBsZWFkIHRvIHJlcGV0aXRpdmUgc3RyYWluIGluanVyaWVzIGFuZCBmYXRpZ3VlLiAKR2FnYSwgd2hvIGlzIHdvcmtpbmcgb24gYSBmb2xsb3cgdXAgYWxidW0gdG8gMjAxMydzIEFSVFBPUCwgbGF0ZXIgYWRtaXR0ZWQgdGhhdCBtYW55IHBlb3BsZSB3ZXJlIHBpdGNoaW5nIGluIGFoZWFkIG9mIGhlciBiaWcgZGF5LiAiSWYgSSB3b3VsZCBoYXZlIGRlbmllZCB0aGUgd29tZW4gb2YgbXkgbGlmZSB0aGUgcGxhbm5pbmcgb2YgdGhlIHdlZGRpbmcgdGhleSB3b3VsZCBwcm9iYWJseSBraWxsIG1lLCIgc2hlIHRvbGQgUnlhbiBTZWFjcmVzdCBvbiBoaXMgS0lJUyBGTSByYWRpbyBzaG93IGluIE1hcmNoLiAiSSBoYXZlIGFsbCB0aGUgaGVscCBpbiB0aGUgd29ybGQsIGluIGEgd2F5ISIgVGhhdCBzYW1lIG1vbnRoLCBFISBOZXdzIGNhdWdodCB1cCB3aXRoIEtpbm5leSwgd2hvIGFkbWl0dGVkIGhpcyBmaWFuYyB3YXMgY2FsbGluZyBtb3N0IG9mIHRoZSBzaG90cy4gIkkgbGVhdmUgdGhhdCB1cCB0byBoZXIsIiBoZSBzYWlkLiBSZWdhcmRpbmcgd2hlbiB0aGV5IHdvdWxkIHRpZSB0aGUga25vdCwgaGUgc2FpZCwgIldlIGhhdmUgYSBjb3VwbGUgaW4gbWluZCwgYnV0IG5vIHNldCBkYXRlLiIKT3ZlcnZpZXcgZm9yIGpmcmVkZXR0Ck15IGh1bmdlciByZXN1bHRzIHdlcmUgYWxzbyBhIGxpdHRsZSBtb3JlIHN1YmR1ZWQuIEhvd2V2ZXIsIGJlY2F1c2UgSSBkaWRuJ3Qgbm90aWNlIGhvdyB1cmdlbnRseSBJIG1heSBuZWVkIHRvIGVhdCwgSSBmb3VuZCB0aGF0IGl0IGNvdWxkIHNwaXJhbCBkb3duIGludG8gYSBkaXJlIHNpdHVhdGlvbi4gClRvd2FyZHMgdGhlIGVuZCBvZiB0aGUgY2FtcGFpZ24sIGhlIGxlYXB0IGZyb20gdGhlIHBhcnR5IGFpcnNoaXAgdGhhdCB3YXMgb3ZlciB0aGUgY2FsZGVyYSBvZiBhbiBhY3RpdmUgdm9sY2FubyB0byBhdHRhY2sgdGhlIGNvbG9zc2FsIGFuY2llbnQgbWFnbWEgZHJhZ29uIGRyYWNvbGljaCBib3NzIGJlbG93LCByaWRpbmcgaGlzIGNhYmVyIGRvd24gbGlrZSBNYWpvciBLb25nIGluIERyLiAKQXQgdGhlIHNpdGVzIG9mIHRoZSBseW5jaGluZ3MsIHdoaXRlcyB3b3VsZCBnYXRoZXIgYXJvdW5kIGluIGxhcmdlIG51bWJlcnMsIGJyaW5nIHBpY25pY3MgYW5kIHRoZSBjaGlsZHJlbiwgdG8gc2VlIGJsYWNrIG1lbiB0b3J0dXJlZCwga2lsbGVkLCBidXJuZWQsIGFuZCB0aGVuIG9mdGVuIGN1dCBpbnRvIGxpdHRsZSBwaWVjZXMgYXMgc291dmVuaXJzLiBEdWJvaXMsIHRoZSBncmVhdCBBbWVyaWNhbiBzb2Npb2xvZ2lzdCwgd3JvdGUgdGhhdCBvbiBoaXMgd2F5IHRvIHRyeSBhbmQgc3RvcCBhIGx5bmNoaW5nIGluIEdlb3JnaWEgaGUgcmVhbGl6ZWQgaGUgd2FzIHRvbyBsYXRlIHdoZW4gaGUgc2F3IHRoZSBtYW4gZmluZ2VycyBvbiBkaXNwbGF5IGF0IGEgY291bnRyeSBzdG9yZS4uIApJIG5lZWQgdGhlIG1hcmtldCB0byBwdW1wIE5PVyBzbyBJIGNhbiBzd29vcCBpbiBqdXN0IGJlZm9yZSBzaGUgZ2l2ZXMgaGVyICJwYWNrIGl0IHVwLCBidXQgdGhhbmsgeW91IHNvIG11Y2ggZm9yIHlvdXIgc3VwcG9ydCIgZXRjLiAKTWFzc2FnZSBPaWxzIEFuZCBMb3Rpb24gUHVyY2hhc2UgYW4gYXNzb3J0bWVudCBvZiBtYXNzYWdlIG9pbHMgYW5kIGxvdGlvbnMgdG8gYWlkIHlvdSBhcyB5b3UgbWFzc2FnZSB5b3VyIGNsaWVudHMuIFRyeSBzY2VudHMgdGhhdCBhcmUga25vd24gdG8gcHJvdmlkZSBhIGNhbG1pbmcgZWZmZWN0cywgc3VjaCBhcyBjaW5uYW1vbiwgbGF2ZW5kZXIsIHNhbmRhbHdvb2QsIGNoYW1vbWlsZSwgamFzbWluZSwgcm9zZSBhbmQgWWxhbmcgWWxhbmcuIFdpdGggdGhpcyB2YXJpZXR5LCB5b3UgY2FuIGdpdmUgY2xpZW50cyB0aGUgb3B0aW9uIHRvIHNlbGVjdCB0aGUgc2NlbnRzIHRoZXkgd2FudCB1c2VkIGR1cmluZyB0aGVpciBtYXNzYWdlcy4uIApUaGV5IGdvaW5nIHRvIGNvbWUgaGVyZSBhbnl3YXk7IEkganVzdCBkb24ga25vdyB3aHkgd2UgZ2l2ZSB0aGVtIHRoZSBiZXN0IHRhbGVudCwgZ2l2ZSB0aGVtIG91ciBJUCwgZ2l2ZSB0aGVtIHRheCBjcmVkaXRzIGZvciB0aGUgcmVzZWFyY2gsIGdpdmUgdGhlbSB0aGUgcmVkIGNhcnBldCBmb3IgZ292ZXJubWVudCByZWxhdGlvbnMsIGRvbiBhbGxvdyB0aGVtIHRvIHBheSB0YXhlcywgYW5kIHRoZW4gaGF2ZSBhbGwgdGhlIHdlYWx0aCBmbG93IG91dCBvZiB0aGUgY291bnRyeS4gSXMgZW50cmVuY2hpbmcgaXRzIGFkdmFudGFnZSBvbiBkaWdpdGFsIHRyYWRlLiAKQSBza2lsbGVkIHBsYXllciBrbm93cyBleGFjdGx5IGhvdyBtdWNoIGhlIGlzIGFibGUgdG8gc2hha2UgdGhlIG1hY2hpbmUgd2l0aG91dCBzZXR0aW5nIG9mZiB0aGUgdGlsdCBzZW5zb3IuIApUaGVyZSBhcmUgdGhyZWUga2luZHMgb2YgQmFjY2FyYXQuIE5vcnRoIEFtZXJpY2FuIEJhY2NhcmF0LCBQdW50byBCYW5jbywgaXMgdGhlIG9ubHkgb25lIHdpdGggYWJzb2x1dGVseSBubyBza2lsbCBpbnZvbHZlZC4gTm9uZSAgIHRoZSAncGxheWVyJyBhbmQgJ2JhbmtlcicgZG9uJ3QgZXZlbiBnZXQgdG8gY2hvb3NlIHdoZW4gdG8gdGFrZSBjYXJkcywgdGhlIGVudGlyZSB0aGluZyBpcyBlbnRpcmVseSBwcmVkZXRlcm1pbmVkLCBhbmQgaXQncyBvbmUgb2YgdGhlIGhpZ2hlc3Qgc3Rha2VzIGdhbWVzIGluIEFtZXJpY2EuIApZb3Ugd2lsbCBmZWVsIHNhZmVyIGFib3V0IHlvdXIgcG9rZXIgY2FyZHMuIApEYXVlcnJlZ2VuIGdpYnQgZXMgZGFubiBrZWluZW4uIApTaSBvbiBuZSBzJ2VzdCBwYXMgcXVpcCBhdSBwcmFsYWJsZS4gCk1hZ25lc2l1bSBpb25zIGNvbnN0aXR1dGUgdGhlIG1vc3QgcGh5c2lvbG9naWNhbGx5IGFjdGl2ZSBmcmFjdGlvbiBvZiBtYWduZXNpdW0gaW4gdGhlIGJvZHk7IHRoZXkgYXJlIGZyZWUgdG8gam9pbiBpbiBiaW9jaGVtaWNhbCBib2R5IHByb2Nlc3NlcyBhbmQgYXJlIG5vdCBhdHRhY2hlZCB0byBvdGhlciBzdWJzdGFuY2VzLiA4IE1vc3QgY2xpbmljYWwgbGFib3JhdG9yaWVzIG9ubHkgYXNzZXNzIHRvdGFsIG1hZ25lc2l1bSwgd2hpY2ggbWl4ZXMgdXAgYm90aCBhY3RpdmUgYW5kIGluYWN0aXZlIHR5cGVzLgpTdHVkZW50cyBmcm9tIG92ZXJzZWFzIHNob3VsZCBzZWN1cmUgc3R1ZHkgdmlzYXMgb3IgZ3JlZW4gY2FyZHMgb24gdGhlaXIgb3duIGJlZm9yZSB0aGV5IGNhbiBxdWFsaWZ5IHRvIHN0dWR5IGluIHRoaXMgc2Nob29sLi4gCkhvdyBUbyBCZSBTZXh5IGF0IDQ2CkkgbWFkZSBhbiBJRyBhY2NvdW50LiAKQ2F0ZWdvcnkgMyBpcyBhIHN0YXRlIHdpZGUgZnVuZGluZyBwb29sIGZvciBsYXJnZSBzY2FsZSBwcm9qZWN0cyBhc3NvY2lhdGVkIHdpdGggc3BvcnQsIGhlYWx0aCBhbmQgY29tbXVuaXR5IGluZnJhc3RydWN0dXJlIGZyb20gMC40IHBlciBjZW50IG9mIHBva2VyIG1hY2hpbmUgcHJvZml0cy4gCk1yTGVsYW5nICAyIHBvaW50cyAgc3VibWl0dGVkIDMgeWVhcnMgYWdvCk92ZXIgaGlzIGhlYWQgTGV2aW4gbWFkZSBvdXQgdGhlIHN0YXJzIG9mIHRoZSBHcmVhdCBCZWFyIGFuZCBsb3N0IHRoZW0gYWdhaW4uIFRoZSBzbmlwZSBoYWQgY2Vhc2VkIGZseWluZzsgYnV0IExldmluIHJlc29sdmVkIHRvIHN0YXkgYSBsaXR0bGUgbG9uZ2VyLCB0aWxsIFZlbnVzLCB3aGljaCBoZSBzYXcgYmVsb3cgYSBicmFuY2ggaWYgYmlyY2gsIHNob3VsZCBiZSBhYm92ZSBpdCwgYW5kIHRoZSBzdGFycyBvZiB0aGUgR3JlYXQgQmVhciBzaG91bGQgYmUgcGVyZmVjdGx5IHBsYWluLiAKSW4gdGhlIGxhdGVyIHZpZGVvcywgdGhleSBzdGFydCBpbnRyb2R1Y2luZyBtb3JlIEdUTyBwbGF5IGFuZCB3aXRoIG1lcmdlZCBiZXR0aW5nIGFuZCBibG9ja2VyIGVmZmVjdHMuIApXZWxjb21lIHRvIHRoZSBmdXR1cmUuIApXaGVuIHlvdSBhcmUgbG9va2luZyBhdCB0aGUgMzAwIFBva2VyIENoaXAgU2V0cywgeW91IHdpbGwgZmluZCB0aGF0IG9uZSBncmVhdCBzZXQgZm9yIHlvdSB0byB0YWtlIGEgbG9vayBhdCBpbmNsdWRlcyBhIDMwMCBDaGlwIFRyaSBDb2xvciBTdWl0IERlc2lnbiB3aXRoIEdlbnVpbmUgT2FrIENhc2UuIApZb3UgYXJlIHByZXNzdXJlZCB0byBtYWtlIG1vdmVzIHdpdGggd2Vha2VyIHRoYW4gcHJlbWl1bSBoYW5kcywgd2hpY2ggaW4gdHVybiBuYXJyb3dzIGRvd24gdGhlIHRvdXJuYW1lbnQgZmllbGQgYXMgcGVvcGxlIGdldCBlbGltaW5hdGVkLiAKQmV0dHkgTG91IE1hbml6ZXIgaXMgZ3JlYXQgYnV0IHdheSB0b28gZGFyayBvbiBteSB3aW50ZXIgc2tpbnRvbmUsIHNvIEkgaG9waW5nIHRvIHBhbiBpdCB0aGlzIHN1bW1lciwgYW5kIHVudGlsIHRoZW4gSSB1c2luZyBpdCBhcyBhbiBleWVzaGFkb3cgb3IgdmVyeSwgdmVyeSBsaWdodGx5IG92ZXIgbXkgY29udG91ci4gQmV0dHkgZG9lcyBoZXIgYmVzdCB0aG91Z2gsIEkgaGF2ZSBubyBjb21wbGFpbnRzIChldmVuIHRob3VnaCBpdCBtYWtlcyBtZSBsb29rIGxpa2UgYSBKZXJzZXkgU2hvcmUgZXh0cmEgd2hlbiBJIGFjY2lkZW50YWxseSBhcHBseSB0b28gbXVjaCkuIApXaGlsZSB0aGV5IHdlcmUgZ3JhdGVmdWwgYWJvdXQgdGhlIHByaWNpbmcsIGl0IHdhcyB0aGUgZmFjdCB0aGF0IHRoZSBNZXRhbCAxMiBSb3cgQ2FzaW5vIFRhYmxlIENoaXAgVHJheSB3aXRoIENvdmVyIGFuZCBMb2NrIGNhbWUgd2l0aCBhIGxvY2sgYW5kIGtleS4gCk1pc3Npb24gaXMgdG8gZWR1Y2F0ZSwgY29ubmVjdCBhbmQgaW5zcGlyZSBlbnRyZXByZW5ldXJzIHdoaWxlIGludmlnb3JhdGluZyB0aGUgcmVnaW9uIHN0YXJ0dXAgY29tbXVuaXR5LCBUaXBwbWFubiBzYWlkLiAKVGhlIHBhcnQgbGFzdCBlcGlzb2RlIHdoZXJlIGhlIGdvdCBhbmdyeSBhbmQgc2FpZCBtZWFuIHRoaW5ncyBvdXQgb2YgaGVhcnRicmVhayAobm90IGV4Y3VzaW5nIGl0IGFzIG9rYXkgYnV0IGl0IGZlbHQgdW5kZXJzdGFuZGFibGUgaW4gdGhlIGNvbnRleHQpLCBidXQgeW91IGNvdWxkIHNlZSBpbiBoaXMgZmFjZSBob3cgbXVjaCBoZSBjYXJlZCBmb3IgaGVyIHRoaXMgZXBpc29kZSBldmVuIGFmdGVyIGFsbCB0aGF0IHN0dWZmIHdpdGggSm9obiB3ZW50IGRvd24uIApUaGVuIG91ciBmbGlnaHQgd2FzIGNhbGxlZC4gCkZyZWUgU0MgYW5kIEVhcmx5IEFjY2VzcyBjYW4gb25seSBnbyBzbyBmYXIgYXMgd2VsbCwgZXZlbiBpZiB0aGV5IHByaW9yaXRpemUgbXkgY2FyIGZvciBoYXJkd2FyZSB1cGdyYWRlLiAKSSBob3BpbmcgdGhhdCBzaGUgaXMganVzdCBsb29raW5nIG91dCBmb3IgeW91ciB3ZWxsYmVpbmcgYW5kIHdhbnRzIHlvdSB0byBzdWNjZWVkIHdpdGggeW91ciBzb2JyaWV0eSBhbmQgc3RheWluZyBvdXQgb2YgdHJvdWJsZS4gCkJ1dCB3aGVuIHdoZW4geW91IG1vdmUgYWdncmVzc2l2ZWx5IHByYWN0aWNlIGNhdXRpb24uIApIZWFydHMgSUlJIFJldmlldzogVmlzdWFsbHkgU3VtcHR1b3VzIEJ1dCBXaXRoIEEgVmVyeSBDb25mdXNpbmcgTmFycmF0aXZlJ0tpbmdkb20gSGVhcnRzIElJSScgaXMgYSB2aXN1YWxseSBzdHVubmluZyBnYW1lLiBJdCdzIGJlZW4gYSB3aGlsZSBzaW5jZSB3ZSBoYWQgYSBwcm9wZXIgbWFpbmxpbmUgS2luZ2RvbSBIZWFydHMgZ2FtZSBhbmQgdGhlIGxhdGVzdCBpbnN0YWxsbWVudCBoYXMgYSBncmVhdCBkZWFsIHRvIGxpdmUgdXAgdG8uIEZvciB0aGUgbW9zdCBwYXJ0LCBLaW5nZG9tIEhlYXJ0cyBJSUkgaXMgYSBsb3Qgb2YgZnVuIGJ1dCBpdCBjYW4gZ2V0IHF1aXRlIGNvbmZ1c2luZyBhdCB0aW1lcy4gSWYgeW91IGFyZSBub3QgZmFtaWxpYXIgd2l0aCB0aGUgS2luZ2RvbSBIZWFydHMgZ2FtZXMsIHRoZXNlIGFyZSBmYXNjaW5hdGluZyBjcm9zc292ZXJzIHdpdGggZmFtb3VzIERpc25leSBjaGFyYWN0ZXJzIGFuZCBwcm9wZXJ0aWVzIHdyYXBwZWQgdXAgaW4gdGhlIHdvcmxkIG9mIGEgY2xhc3NpYyBTcXVhcmUgRW5peCBhY3Rpb24gcm9sZSBwbGF5aW5nIGdhbWUuIFRoZSBmaXJzdCB0d28gZ2FtZXMgb24gdGhlIFBsYXlTdGF0aW9uIDIgd2VyZSBhbWF6aW5nIGFuZCBlbnRpcmVseSBzdHJhbmdlLCBhcyBhdCB0aGUgdGltZSB3ZSBkaWRuJ3QgcmVhbGx5IGhhdmUgdGhlLjYgZGF5cyBhZ28KVGhleSBhY3R1YWxseSBzdGFydGVkIHNvbWUgd2hhdCBjaXJjdWxhdGluZyBhcyBjdXJyZW5jeS4gCksuIApJbiB0aGUgZ2FtZSBhZ2FpbnN0IHRoZSBMYW5rYW5zLCB0aGF0IG90aGVyIHBva2VyIHBsYXllciwgTWFoZWxhIEpheWF3YXJkZW5lLCByZWNlbnRseSByZWluc3RhdGVkIGFzIGNhcHRhaW4sIGFsbW9zdCBwdWxsZWQgdGhlIHdvb2wgb3ZlciBEaG9uaSBleWVzIGJ5IHNodWZmbGluZyB0aGUgYm93bGVycyByaWdodCBhdCB0aGUgZW5kIHNvIHRoYXQgTWFsaW5nYSB3b3VsZCBnZXQgdG8gYm93bCB0aGUgNDh0aCBhbmQgNTB0aCBvdmVycy4gClRoYXQgbm90IHByb2R1Y3RpdmUgdG8geW91ciBoZWFsaW5nLkZvY3VzIG9uIHlvdXJzZWxmLiBCZSBwcmVwYXJlZCB0byBzbGFtIHRoZSBkb29yIGluIGNhc2UgaGUgY29tZXMgYmFjay4gRG8gbm90IGxldCBoaW0gYmFjayBpbi4gCkVuc3VpdGUsIEpla3lsbCBuZSByZXRyb3V2ZXJhIHNvbiB2aXNhZ2UgbGlzc2UgZXQgbHVuYWlyZSBxdWUgbG9yc3F1J2lsIHNlcmEgbW9ydCwgYWJhdHR1IHBhciBsYSBwb2xpY2UsIGV0IGNlLCBzYW5zIHVuZSBvbmNlIGRlIG1vcmFsZSwgc2FucyB1bmUgcXVlbGNvbnF1ZSBzZW50ZW5jZSBiaWVuc2FudGUuLiAKQXQgdGFibGUgZ2FtZXMsIGVhY2ggdGFibGUgaGFzIGEgcmVjdGFuZ3VsYXIgc2lnbiBkZXRhaWxpbmcgbWluaW11bSBhbmQgbWF4aW11bSBiZXRzLiBVc3VhbGx5IHRoZSBzaWducyBhcmUgY29sb3IgY29kZWQgdG8gY29ycmVzcG9uZCB0byB0aGUgY29sb3Igb2YgY2FzaW5vIGNoaXBzICAgYSB3aGl0ZSBzaWduIHVzdWFsbHkgZGVub3RlcyBhIHRhYmxlIHdpdGggYSAkMSBtaW5pbXVtIGJldCwgYSByZWQgc2lnbiBkZW5vdGVzIGEgJDUgbWluaW11bSwgYSBncmVlbiBzaWduIGRlbm90ZXMgYSAkMjUgbWluaW11bSwgYW5kIGEgYmxhY2sgc2lnbiBkZW5vdGVzIGEgJDEwMCBtaW5pbXVtLCBqdXN0IGFzIGF0IG1vc3QgY2FzaW5vcyAkMSBjaGlwcyBhcmUgd2hpdGUsICQ1IGNoaXBzIGFyZSByZWQsICQyNSBjaGlwcyBhcmUgZ3JlZW4sIGFuZCAkMTAwIGNoaXBzIGFyZSBibGFjay4gRG8gbm90IHRha2UgdGhpcyBzeXN0ZW0gZm9yIGdyYW50ZWQsIGhvd2V2ZXI7IGEgZmV3IGNhc2lub3MgaGF2ZSBzaWducyBhbGwgb2YgdGhlIHNhbWUgY29sb3Igb3IgdXNlIGRpZmZlcmVudCBjb2xvciBjb2RpbmcuIApZb3UgaGF2ZSBjb21lIHRoaXMgZmFyLiBJIHNlZSB0cnVlIGJlYXV0eSwgaW50ZWxsaWdlbmNlLCBkZXB0aCwgc3RyZW5ndGgsIGFuZCByZXNpbGllbmNlLiBUaGFuayB5b3UgZm9yIHBvc3RpbmcuIApUcmF2ZWxpbmcgb24gdGhlIGxha2UgaGFzIGJlZW4gZGlmZmljdWx0IHdpdGggdGhlIGFtb3VudCBvZiBzbm93IHdlIGhhdmUgcmVjZWl2ZWQgb3ZlciB0aGUgbGFzdCBmZXcgZGF5cy4gUmVwb3J0cyBhcmUgaW5kaWNhdGluZyB0aGUgYml0ZSBoYXMgYmVlbiBzbG93IGZvciB0aG9zZSB0aGF0IGhhdmUgdmVudHVyZWQgb3V0LiBBIGZldyBzbWFsbCB3YWxsZXllIGFsb25nIHdpdGggc29tZSBwZXJjaCBhY3Rpdml0eSBpbiAyMCAzMCBmZWV0IG9mIHdhdGVyIGhhcyBiZWVuIHJlcG9ydGVkLiAKTHVndWFlZG9zICA2IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkhvbGRlbSBJbmRpY2F0b3IsIFBva2VyIENhbGN1bGF0b3IgUHJvLCBIb2xkZW0gR2VuaXVzLCBTaXQgbiBHbyBTaGFyaywgTWFnaWMgSG9sZGVtLCBQb2tlcmJpbGl0eVBva2VyIFRyYWNrZXJzIGNvbGxlY3QgYW5kIHByb3ZpZGVzIGRhdGEgZnJvbSB5b3VyIGFuZCB5b3VyIG9wcG9uZW50cyBwbGF5aW5nIHN0eWxlLCB5b3UgY2FuIGFuYWx5emUgdGhlbSBhbmQgYWRqdXN0IHlvdXIgb3duIHN0eWxlLiBUaGUgbW9yZSBhZHZhbmNlIHBva2VyIHRvb2xzIGFyZSBwb2tlciB0cmFja2VycyB3aXRoIGludGVncmF0ZWQgSFVEICJIZWFkcyBVcCBEaXNwbGF5IiBvcHRpb24sIHRoaXMgbWVhbnMgdGhhdCB5b3UgaGF2ZSBpbnN0YW50IGluZm9ybWF0aW9uIGFib3V0IHlvdXIgb3Bwb25lbnRzIGluIHJlYWwgdGltZSBhcyBpY29ucyBsaWtlICJtb3VzZSwgYm9tYiwgcm9jaywgZmlzaCIgZXRjLiBCZXNpZGUgZWFjaCBwbGF5ZXIgb250byB5b3VyIHRhYmxlLiAKQnV0IHRoZSBkZXRlY3RpdmUgSSB0YWxrZWQgdG8gYXNrZWQgYSBsb3Qgb2YgcXVlc3Rpb25zIHRvIGNvcnJvYm9yYXRlIHRoZSBhY2NvdW50LCBhbmQgc2FpZCBpbiB0aGVzZSBjYXNlcyB0aGV5IHJlYWxseSB0cnkgdG8gYXZvaWQgZ29pbmcgdG8gdHJpYWwsIGJlY2F1c2Ugd2l0bmVzcyBpbnRpbWlkYXRpb24gaXMgYSByZWFsIHRoaW5nIGFuZCB5b3UncmUgcHJldHR5IGVhc3kgdG8gZmluZCBhZnRlciB0ZXN0aWZ5aW5nIGFib3V0IHNvbWV0aGluZyB0aGF0IGhhcHBlbmVkIGluL25lYXIgeW91ciBob21lIG9yIGJ1c2luZXNzLiBXaXRuZXNzZXMganVzdCBkb24ndCB3YW50IHRvIGV2ZW4gY29tZSB0byBjb3VydCwgc28gaWYgdGhleSBjYW4ndCBnZXQgYSBwbGVhLCB0aGVyZSdzIHVzdWFsbHkgbm8gdHJpYWwuIEFuZCBJIHN1cHBvc2Ugbm8gdHJpYWwgbWVhbnMgdGVjaG5pY2FsbHkgdW5zb2x2ZWQuCklmIHRoZSBjaGFyZ2UgZm9yIGZ1bGZpbGxpbmcgYSByZXF1ZXN0IGV4Y2VlZHMgJDQwLjAwLCB0aGUgcmVxdWVzdG9yIHdpbGwgYmUgcHJvdmlkZWQgYW4gaXRlbWl6ZWQgd3JpdHRlbiBlc3RpbWF0ZSBvZiB0aGUgY2hhcmdlcyBhbmQgd2lsbCBiZSBpbmZvcm1lZCBpZiBhIGxlc3MgY29zdGx5IGFsdGVybmF0aXZlIGlzIGF2YWlsYWJsZS4gSWYgdGhlIGVzdGltYXRlZCBjaGFyZ2UgaXMgbW9yZSB0aGFuICQxMDAuMDAsIHRoZSBVbml2ZXJzaXR5IHdpbGwgcmVxdWlyZSBhIHByZXBhaWQgZGVwb3NpdCBvciBib25kIChhcHByb3hpbWF0ZWx5IDUwJSBvZiB0aGUgZXN0aW1hdGVkIGNoYXJnZSkgYmVmb3JlIGNvbXBpbGluZyB0aGUgaW5mb3JtYXRpb24uIApHZW5lcmFsbHkgaXQgaW52b2x2ZXMgbWFuYWdpbmcgY29udGludW91cyBkZWxpdmVyeSBwaXBlbGluZXMsIHVzaW5nIGJ1aWxkIGZyYW1ld29ya3MsIHNvdXJjZSBjb250cm9sIHRvb2xzIGxpa2UgZ2l0IG9yIHBlcmZvcmNlLCBjcmVhdGluZyBjdXN0b20gdG9vbHMgYW5kIHNjcmlwdHMgYW5kIHBvc3NpYmx5IG1hbmFnaW5nIGluZnJhc3RydWN0dXJlLiAKVGhlbiBJIHdhcyBnb2luZyB0byBkZWxvYWQgYSB3ZWVrLiAKSXQgaXMgZW50aXJlbHkgZGVwZW5kZW50IG9uIHlvdXIgb3RoZXIgbGF5ZXJzIGFuZCB3aGF0IHlvdSBhcmUgZG9pbmcuIApUaGFuayB5b3UgZm9yIHRoZXNlIHF1ZXN0aW9ucywgaXQgaGVscGluZyBhIGxvdCEgVGhlIGdvbGQgdHJhcGV6b2lkIHRoaW5nIGlzIHRyeWluZyB0byBnaXZlIGRlcHRoIHRvIHRoZSBiYXJuIGFuZCBtYWtlIGl0IGxvb2sgb3Blbi4gQXMgZm9yIHRoZSByaWdodCBwb3J0aW9uIG9mIGl0LCB0aGF0IHdhcyBzdXBwb3NlZCB0byBnaXZlIHZpc3VhbCBiYWxhbmNlIGFuZCByZXByZXNlbnQgYSBzaGFkb3cuIEl0IGZlbHQgdG9vIGhlYXZ5IHdpdGggaXQgYWxsIGRhcmtlciByZWQsIGJ1dCBpdCBmZWVscyByZWFsbHkgZW1wdHkgYW5kIGZsYXQgaWYgaW5zaWRlIHRoZSBiYXJuIGlzIHdoaXRlIG9yIGdvbGQuIApXYW50IHRvIGtub3cgd2h5IGh1bWFucyBhcmUgZ3JlZWR5IGJhc3RhcmRzIHdobyBsaXZlIG91dHNpZGUgdGhlIG1lYW5zIG9mIG91ciBlbnZpcm9ubWVudHM/IEl0J3Mgbm90IGxpa2UgaHVtYW5zIGFyZSBzdHVwaWQgYXMgaGFzIGJlZW4gc3VnZ2VzdGVkOyBzaW1wbHksIGN1bHR1cmVzIGFuZCBncm91cHMgb2YgcGVvcGxlIHRocm91Z2hvdXQgaGlzdG9yeSB3aG8gZXNwb3VzZWQgbGl2aW5nIGluIGJhbGFuY2UgYW5kIGhhcm1vbnkgd2l0aCB0aGVpciBlbnZpcm9ubWVudHMgd2VyZSBjb25xdWVyZWQgYW5kIHB1c2hlZCBvdXQgb3Iga2lsbGVkIGJ5IG90aGVyIGh1bWFucyBleHBhbmRpbmcgdGhlaXIgcmVhY2ggZm9yIHJlc291cmNlcy4gV2hhdCB3YXMgYWx3YXlzIHRoZSBhcmd1bWVudD8gIlRob3NlIFNpb3V4IHdhbnQgRGFrb3RhIHRlcnJpdG9yeSBhcyB0aGVpciBncmVhdCByZXNlcnZhdGlvbj8gVGhlcmUncyBvbmx5IGxpa2UgMTUsMDAwIG9mIHRoZW0sIHRoZSBsYW5kIGlzIHNpdHRpbmcgZW1wdHkgYW5kIHRoZXkncmUgbm90IHVzaW5nIGl0LiBJZiB0aGV5IHVzZWQgaXQgY29ycmVjdGx5LCB0aGV5IHdvdWxkbid0IG5lZWQgdGhhdCBtdWNoIGxhbmQsIGlmIHRoZXkgc3RvcHBlZCB0aGlzIGJ1c2luZXNzIG9mIHdhbmRlcmluZyBhcm91bmQgZm9sbG93aW5nIGJ1ZmZhbG8uIi4gClRoaXMgd2FzIGEgUEMgb25saW5lIHRoYXQgdXNlZCB0byBiZSBtYWMsIHdpdGggUEMgcGFydHMuIEl0cyBwcmV0dHkgc3Ryb25nIGJ1dCBzaW5jZSBJIHR1cm5lZCBpdCBiYWNrIHRvIFBDIGl0IHJlc3RhcnRzIG1heWJlIG9uY2UgYSB3ZWVrIHdpdGggYSBibHVlIHNjcmVlbiBhbmQgb25lIGxpbmUgb2YgY29kZSBvbiBpdCwgdGhlbiBpdHMgc3dlZXQsIGNvdWxkIHRoYXQgYmUgYW55dGhpbmcgdG8gZG8gd2l0aCB3aGF0cyBoYXBwZW5lZD8KQW55dGhpbmcgZXZlbiBjbG9zZSB0byB2aXNpdGluZyBwbGFuZXRzIHdvdWxkIGJlIGEgaGVhdmlseSBidXRjaGVyZWQgdmVyc2lvbiBvZiB3YWxraW5nIG9uIGEgc3BhY2Ugc3RhdGlvbiwgYnV0IHdpdGggYSBwbGFuZXRhcnkgdGV4dHVyZSBhcHBsaWVkLiAKSSBub3QgZGVmZW5kaW5nIHRoaXMgZ3V5IGFjdGlvbnMsIEkgc3VnZ2VzdGluZyB0aGF0IHlvdXIgcmVhY3Rpb24gaXMgbW9yZSBhYm91dCBob3cgdXBzZXQgeW91IGFyZSB0aGF0IHlvdXIgd29uZGVyZnVsIGdlbmVyb3NpdHkgaGFzIGJlZW4gdW5kZXJtaW5lZC4gCldlIGxvdmVkIG91ciAxMCsgeWVhcnMgaW4gQXVzdGluLCBidXQgYXJlIHJlYWR5IHRvIGV4cGVyaWVuY2Ugc29tZXRoaW5nIG5ldyBhbmQgcmVhbGx5IGFyZSBob3BpbmcgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIGJlYXV0eSBhbmQgb3V0ZG9vcnMgb2YgU0xDLiAKVGhlIFlhbmtlZXMgYXJlIGEgYnVzaW5lc3MgZGVzaWduZWQgdG8gbWFrZSBtb25leS4gSWYgdGhleSBhcmUgZ29pbmcgdG8gdGFrZSBteSBtb25leSwgeW91IGRhbW4gd2VsbCBhdHRlbXB0IHRvIHNwZW5kIGl0IHdoZW4gcHJlc2VudGVkIG9uIGFyZ3VhYmxlIGEgdG9wIDEwIHBsYXllci4gSSdtIG5vdCBzYXlpbmcgeW91IGhhdmUgdG8gYnV5IGhpbSwgd2hpY2ggaW4gdGhpcyBjYXNlIHRoZXkgaGFkIGNvbnZlcnNhdGlvbnMsIGJ1dCBlbnRlcnRhaW4gdGhlIGlkZWEgdGhhdCBoZSdkIGJlIHVzZWZ1bC4gClNhcmFoIERRVUJUIFBBUkRPTiBBbGJlcnQuIApMaWtlIGFsbW9zdCBldmVyeSBndXkgaW4gdGhlIHVuZGVyd29ybGQgdHJhZGUsIGhlIGhhZCBhIG5pY2tuYW1lLiAKVGhpcyB3YXMgdGhlIGZpcnN0IHRoaW5nIHRoYXQgSSB0aG91Z2h0IG9mLCB0b28uIE5vdCB0aGF0IHRoZSBwYXJlbnRzIGFyZSBjb250cm9sIGZyZWFrcyBhbmQgaGVsaWNvcHRlcmluZyB0aGVpciAyMnlvLCBidXQgdGhhdCB0aGV5IGRvbiB3YW50IHRvIGJlIHJlZ3VsYXJseSBkaXN0dXJiZWQuIApZb3UgZG9uJ3QgbmVlZCBudW1iZXJzLiAKT3VyIGZlZWxpbmdzIGFib3V0IGEgcG90ZW50aWFsIGNsaWVudCBhbmQgdGhlaXIgZmVlbGluZ3MgYWJvdXQgdXMgYXJlIHRoZSBtaXggb2YgdGhlc2UgYmFzaWMgZW1vdGlvbnMuIFdlIHdhbnQgb3VyIGNsaWVudHMgdG8gYmUgY29tZm9ydGFibGUgd2l0aCB1cyBhbmQgZmVlbCBzYWZlIGFuZCBzZWN1cmUgd2l0aCB1cyBmcm9tIHRoZSBtb21lbnQgd2UgbWVldC4gSWYgdGhleSBmZWVsIGEgc3Vydml2YWwgZW1vdGlvbiBlbWVyZ2UgZHVyaW5nIHRoZSBtZWV0aW5nLCB5b3UgY2FuIGJlIHN1cmUgdGhleSB3aWxsIGV4cGVyaWVuY2UgYSBmZWVsaW5nIG9mIGZyaWdodCwgZmlnaHQsIGZsaWdodCBvciBmcmVlemUuIElmIHRoYXQgaGFwcGVucywgdGhlcmUgaXMgYSBnb29kIGNoYW5jZSB0aGV5IHdpbGwgYmUgdW5zdXJlIG9mIHlvdSBhcyBhIHBlcnNwZWN0aXZlIHBhcnRuZXIuCkkgbmV2ZXIgcmVjZWl2ZWQgYW55ICJhZGRpdGlvbmFsIiBzZXJ2aWNlIGFuZCB0aGUgd2F5IEkgZ290IGFyb3VuZCB0aGlzIHdhcyB0aGF0IEkgcGFpZCB0aGVtIGV4dHJhICJ0aXBzIiB0byBqdXN0IGNoYXR0aW5nIGRpcnR5IHdpdGggbWUgaW5zdGVhZCB3aGlsZSBtYXNzYWdpbmcgbWUuIEkgdG9sZCB0aGVtIChpbiB0aGVpciBuYXRpdmUgbGFuZ3VhZ2UsIEkgc3BlYWsgYm90aCBDYW50b25lc2UgYW5kIE1hbmRhcmluKSB0aGF0IEkgZG9uIGRvIGV4dHJhIHNlcnZpY2VzICJhbnltb3JlIiBkdWUgdG8gYSBtZWRpY2FsIHJlYXNvbiBidXQgdGhhdCBJIHN0aWxsIGVuam95IHNleHVhbCB0YWxrIGR1cmluZyB0aGUgbWFzc2FnZSAoaWUuIHRlYXNpbmcpLiBJZiBJIGRpZG4gZG8gdGhpcywgaXQgd291bGQgcmFpc2Ugc3VzcGljaW9uIGFzIHRvIHdobyBvciB3aGF0IEkgd2FzIGRvaW5nLgpJIGhhdmUgbm8gaW50ZW50aW9uIG9mIHdlaWdoaW5nIGluIG9uIHRoZSB2aWRlbyBpdHNlbGYgb3Igd2hhdCBzb2xkaWVycyB3ZXJlIG9yIHdlcmUgbm90IGRvaW5nIGluIGl0LiBCdXQgSSBtdXN0IHdlaWdoIGluIG9uIHRoZSB1dHRlciBhbmQgY29tcGxldGUgbGFjayBvZiBqb3VybmFsaXN0aWMgaW50ZWdyaXR5IGF0IHRoZSBUaW1lcy4gCiJPaCwgZG9uJ3QgeW91IGtub3cgaXQ/IFRoYXQncyB0aGUgaGFyZS4gQnV0IGVub3VnaCB0YWxraW5nISBMaXN0ZW4sIGl0J3MgZmx5aW5nISIgYWxtb3N0IHNocmlla2VkIExldmluLCBjb2NraW5nIGhpcyBndW4uCkdldCBSZWRkaXQgUHJlbWl1bQpKdXN0IHRoYXQgb25lIGNvbmNlcHQgZHJpdmVzIFNPIG11Y2ggb2YgdGhpcyBwaWVjZS4gCkkgaGF2ZSwgYW5kIGV2ZW4gdGhvdWdoLCBpbiBteSBUTCBleGFjdCB3b3JkcyBmcm9tIHRvZGF5LCBlaWdodCBvZiB0aGUgdGhpcmQsIGEgZ2VudWluZWx5IHVuaXJvbmljIGFuZCB2ZXJ5IGNvbXBsaW1lbnRhcnk6ICJ0aGUgZmVlZGJhY2sgSSBnZXR0aW5nIGlzIHRoYXQgdGhlIHN1biBzaGluZXMgb3V0IG9mIHlvdXIgYXNzIi4gCkZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIGdvdmVybmFuY2UsICBoYXMgdGFrZW4gcGFpbnMgdG8gYXZvaWQgYmVjb21pbmcgYSBuYW5ueSBzdGF0ZSB3aXRoIGEgZGVwZW5kZW5jeSBjdWx0dXJlIGJ1dCBpdCBpcyBub3QgYW4gdW5jYXJpbmcgY2FwaXRhbGlzdCBuYXRpb24uIEZvciBpbnN0YW5jZSwgaXRzIENlbnRyYWwgUHJvdmlkZW50IEZ1bmQgKENQRikgc3lzdGVtIGFuZCBob3VzaW5nIHBvbGljeSBoYXZlIGdpdmVuIGFucyBlY29ub21pYyBzZWN1cml0eS4gVGhvdWdoIGluY29tZSBpcyBub3QgZXF1YWxseSBkaXN0cmlidXRlZCBpbiAgaXQgY2FuIGJlIHNhaWQgdG8gYmUgYW4gZWNvbm9taWNhbGx5IHByb3NwZXJvdXMgYW5kIHJlbGF0aXZlbHkgc2FmZSBjb3VudHJ5LgpXZXIga25udGUgU2FudGEgQ3J1eiBiZXNzZXIga2VubmVuLCBhbHMgZGVyIGJla2FubnRlc3RlIEdydG5lciBkZXIgSGF1cHRzdGFkdCwgZGVyIGFscyBkZSBsb3MgQmFsY29uZXMgbmljaHQgbnVyIGRpZSBzY2huc3RlbiBCYWxrb25lIGRlciBTdGFkdCBnZXN0YWx0ZXQsIHNvbmRlcm4gYXVjaCBadWdhbmcgaGF0IHp1IHByaXZhdGVuIERhY2h0ZXJyYXNzZW4sIHZlcnRydW10ZW4gSW5uZW5oZmVuIHVuZCBnZWhlaW1uaXN2b2xsZW4gR3J0ZW4uIFNvIGtvbW10IG1hbiBtaXQgSGVpa28gaW4gSHVzZXIsIEVja2VuIHVuZCBXaW5rZWwgZGVyIFN0YWR0LCBkaWUgc29uc3Qga2VpbiBUb3VyaXN0IHp1IHNlaGVuIGJla29tbXQuTWlrZSB1bmQgSGVpa28gZXJ6aGxlbiBiZWkgZGllc2VyIFRvdXIgYXVmIGh1bW9ydm9sbGUgV2Vpc2UgR2VzY2hpY2h0ZW4gYXVzIGRlbSBoZXV0aWdlbiBMZWJlbiB1bmQgYXVzIHZlcmdhbmdlbmVyIFplaXQsIGFscyBkaWUgUGlyYXRlbiBub2NoIGRpZSBNZWVyZSB1bnNpY2hlciBtYWNodGVuLiBXZXIgZGllc2UgYXVlcmdld2hubGljaGUgdW5kIGluZGl2aWR1ZWxsZSBTdGFkdGZocnVuZyBlcmxlYnQgaGF0LCB3aXJkIHNpY2ggc2ljaGVyIG5vY2ggbGFuZ2UgbWl0IFNjaG11bnplbG4gZGFyYW4gZXJpbm5lcm4hTWl0IG1heGltYWwgMTIgUGVyc29uZW4gc3RyZWlmZW4gZGllIGJlaWRlbiBsYW5namhyaWdlbiBLZW5uZXIgTGEgUGFsbWFzIGV0d2EgMiAxLzIgU3R1bmRlbiBkdXJjaCBTYW50YSBDcnV6LiBXaWUgYmVpIHVuc2VyZXIgZ2VzdHJpZ2VuIEZocnVuZyBkdXJjaCBkYXMgd2VpaG5hY2h0bGljaCBnZXNjaG1ja2UgU2FudGEgQ3J1eiwga2FubiBlcyBhbGxlcmRpbmdzIHBhc3NpZXJlbiwgZGFzcyBIZWlrbyBhbiBqZWRlciB6d2VpdGVuIEVja2UgRnJldW5kZSB1bmQgQmVrYW5udGUgdHJpZmZ0IHZvbSBCcmdlcm1laXN0ZXIgYmVyIEt1bmRlbiwgYmVpIGRlbmVuIG1hbiBkYW5uIGF1Y2ggYXVlcnBsYW5taWcgZGVuIHByaXZhdGVuIGJlZ3JudGVuIElubmVuaG9mIGJld3VuZGVybiBrYW5uLCBiaXMgaGluIHp1IEtuc3RsZXJuLCBkaWUgaW4gaWhyZW0gQXRlbGllciBuaWNodCBudXIgaWhyZSBLdW5zdHdlcmtlIHByc2VudGllcmVuLCBzb25kZXJuIGF1Y2ggaGF1c2dlbWFjaHRlIFRhcGFzIHVuZCBlaW4gR2xhcyBXZWluIHp1ciBTdHJrdW5nIGFuYmlldGVuIHNvIGRhdWVydGUgZGllIEZocnVuZyBkYW5uIDMgMS8yIFN0dW5kZW4sIHdhciBkYWJlaSBrdXJ6d2VpbGlnIHVuZCBzcGFubmVuZCB2b24gZGVyIGVyc3RlbiBiaXMgenVyIGxldHp0ZW4gTWludXRlISBBbHMgb2RlciBkZXMgZ2FuemVuIFVybGF1YnMgYmV6ZWljaG5lbiB2aWVsZSBUZWlsbmVobWVycmlubmVuIGRpZXNlIGV0d2FzIGFuZGVyZSBTdGFkdGZocnVuZy4KTGFzdGx5LCB0aGVyZSdzIG5vIGxhY2sgb2YgdGhpZXZlcyBhdCB0aGUgV2FsbC4gU29tZSBvZiB0aGVtIHByb2JhYmx5IGdldCBtb25leSBieSBzdGVhbGluZyBpdCBmcm9tIHRob3NlIHRoYXQgaGF2ZSBhbnkgdG8gc3RlYWwuIFdpdGggbm90IG11Y2ggdG8gc3BlbmQgaXQgb24sIHNtYWxsIGFtb3VudHMgcHJvYmFibHkgYXJlbid0IGV2ZW4gbWlzc2VkIG1vc3Qgb2YgdGhlIHRpbWUuCkNCQyBOZXdzICAgV29ybGQgICBVbmRlcm5vdXJpc2hlZCBzdXJwYXNzIDEgYmlsbGlvbjogVU4uCkVkaXQ6IEZXSVcgSSBwbHVnZ2VkIGl0IGludG8gYSBzb2x2ZXIgYW5kIHRoaXMgaXMgd2hhdCBpdCBzdWdnZXN0ZWQuIEhKIDEwMCBCQiBkZWVwLiAKTXkgJ2Zhdm9yaXRlJyBtZW1vcnkgb2YgaGVyIHdhcyB0aGUgd2VlayBzaGUgY2FycmllZCBvbiBhYm91dCBhIGdpcmxzIHNsdW1iZXIgcGFydHkuIEkgbWVhbiBhbGwgd2VlayB3ZSBoYWQgdG8gaGVhciBhYm91dCBpdCwgaG93IGFsbCB0aGUgZ2lybHMgd2VyZSBpbnZpdGVkLiAKQ2FsbGluZyBpdCBIYXJyYWg/cyBQaGlsYWRlbHBoaWEgd2FzIGEgbWFya2V0aW5nIGRlY2lzaW9uLCBzbyBkb24/dCBsZXQgdGhlIG5hbWUgZm9vbCBDaHJpc3RpbmUgQ2FtLCBlSG93IENvbnRyaWJ1dG9yIFNoYXJlIEEgd2lubmluZyBoYW5kIFdpbm5pbmcgYXQgRnVsbCBUaWx0IFBva2VyIGlzIGZ1biBhbmQgcHJvZml0YWJsZS4gCkJ1dCB0aGF0IGRvZXNuIG1lYW4gSSBhc3NpZ24gIGlzbSAgYmFzZWQgYXR0cmlidXRlcyBvciBleHBsYW5hdGlvbnMgdG8gYWxsIHNpdHVhdGlvbnMgb3IgYmVoYXZpb3JzLi4gCjIuIFdhdGNoIFBhd24gU3RhcnMgd2l0aCBESC4gClNlZW1zIGxpa2UgbW9zdCBvZiB0aGUgbW90b3JjeWNsZXMgdGhhdCBjb21lIGludG8gbWlkdG93bi9kb3dudG93biBleGNlZWQgdGhlIGxlZ2FsIGRlY2liZWwgbGltaXQsIHRodXMgdHJpZ2dlcmluZyBoYWxmIGEgYmxvY2sgb2YgY2FyIGFsYXJtcy4gCkZyb20gdGhlIG1vdXRoIG9mIFN1a2h1bXZpdCBSb2FkLCB0dXJuIGluIHRvIFNvaSAyNCBhbmQgYWZ0ZXIgYWJvdXQgMTAwIG1ldHJlcyBvbiB5b3VyIGxlZnQgeW91IHdpbGwgZmluZCBhIHNtYWxsIHBsYXphIGNvbnNpc3RpbmcgbW9zdGx5IG9mIG1hc3NhZ2Ugc2hvcHMuIApQb2tlciBib251c2VzIGFyZSAnZnJlZSBjYXNoJyBnaXZlbiBieSBwb2tlciByb29tcyBzbyB5b3UgY2FuIGNoZWNrIHRoZSBzaXRlIGFuZCBpdHMgZ2FtYmxpbmcgcHJvZHVjdHMuIFRoZSBtb3N0IHBvcHVsYXIgdHlwZSBvZiBwb2tlciBib251cyBpcyB0aGUgc2lnbiB1cCBvZmZlciBnZW5lcmFsbHkgdGFpbG9yZWQgdG8gY2F0Y2ggdGhlIGV5ZXMgb2YgbmV3IHBsYXllcnMuIEhvd2V2ZXIsIGJlZm9yZSBjbGFpbWluZyBhIGJvbnVzIHlvdSBzaG91bGQgY2FyZWZ1bGx5IHJlYWQgdGhlIHRlcm1zIGFuZCBjb25kaXRpb25zIHNvIHlvdSBjYW4gZ2V0IHRoZSBiZXN0IG91dCBvZiB5b3VyIG1vbmV5Li4gCkluc3RlYWQsIHRoZSBtZW4gb2YgdGhlIHZpbGxhZ2Ugd2VyZSBsb2FkZWQgb250byB0cnVja3MsIG9yZGVyZWQgdG8gZGlnIGEgc2hhbGxvdyBncmF2ZSBhbmQgZXhlY3V0ZWQgaW4gb25lIGFmdGVybm9vbi4gCk9uIHRoZSBvdGhlciBoYW5kLCB0aGUgbmFtZSBvZiB0aGUgZml2ZSBjYXJkIHBpZWNlIGluIFBhaSBHb3cgcG9rZXIgaXMgY2FsbGVkIGJlaGluZCwgaGlnaCBoYW5kLCBiaWcgaGFuZCwgYm90dG9tIGhhbmQgb3IgYmlnLiAKUGx1cywgaGFycGluZyBvbiBzb21lb25lJ3MgZmVlbGluZ3MgaHVydGluZyB0d2VldHMgZnJvbSAyMDEyIGlzIGEgc2FkIGdhbWUgdGhhdCBJIHdpc2ggZXZlcnlvbmUgd291bGQgc3RvcCBwbGF5aW5nLiBCdXQgSSB3b24ndCBhcmd1ZSB0aGF0IFdlaXNzIGlzIGNvbXBsZXRlbHkgdW5yZWFzb25hYmxlIHRvIHNheSB0aGF0LiAKU3BlYWtpbmcgb2YgaW1tdW5lIHN5c3RlbXMsIGFzIHNvbWUgb2YgeW91IGhvbWV5cyBrbm93LCBJIHdvcmsgZm9yIGFuIGluc3VyYW5jZSBjb21wYW55IGFuZCB3ZSBoYXZlIHBoeXNpY2lhbnMgdGhhdCBjb25zdWx0IGZvciB1cy4gCllvdSBsaXRlcmFsbHkgdHJhbnNsYXRlIHRoZSBsaW5lIHRoYXQgcmVmZXJzIHRvIGl0IGFzIHRoZSBzdGFyIHRoYXQgc2lnbmFsZWQgdGhlIGFycml2YWwgb2YgdGhlIFNvbiBvZiBHb2QsIHlldCB5b3Ugc3RpbGwgdHJhbnNsYXRlIGl0IGFzIHRoZSBTdGFyIG9mIEIgQ2FuIHlvdSBiZSBhbnkgd29yc2UgYXQgeW91ciBqb2JzPyBBY3R1YWxseSwgZG9uIGFuc3dlciB0aGF0LiBUaGUgYW5zd2VyIGlzIGFsd2F5cyB5ZXMuCk15IGN1cnJlbnQgcm91dGluZSBjb25zaXN0cyBvZiB0aGF0IGZhY2Ugd2FzaCwgdGhlIHBpeGkgcmV0aW5vbCB0b25lciAoaSB3YXMgcHJldmlvdXNseSB1c2luZyB0aGUgZ2xvdyB0b25pYyB3aGljaCBoZWxwZWQgY2xlYXIgYWNuZS9zY2FycmluZyBidXQgb25seSB0byBhIGNlcnRhaW4gcG9pbnQpLCB0aGUgYmFoaSBjb3NtZXRpY3Mgc3VuZmxvd2VyIG9pbCAod2hpY2ggaSB0aGluayBoYXMgc2F2ZWQgbXkgc2tpbiwgYnV0IGFnYWluLiBubyBpZGVhIHdoYXQgaSdtIHRhbGtpbmcgYWJvdXQpLCB0aGUgbmV1dHJvZ2VuYSBzcG90IG9uIHRyZWF0bWVudCAod2hpY2ggaGFzIGhlbHBlZCB3aXRoIHNjYXJyaW5nIGJ1dCBicmVha3MgbXkgY2hpbiBvdXQgZXZlbiBtb3JlPz8/PyksIGFuZCBpIHVzZSB0aGUgbHVicmlkZXJtIGFkdmFuY2VkIHRoZXJhcHkgbW9pc3R1cml6ZXIgb24gbXkgZm9yZWhlYWQgd2hpY2ggaGVscHMgYSBsb3QgYW5kIGRvZXNuJ3QgYnJlYWsgbWUgb3V0LCBob3dldmVyIGkgY2FuJ3QgdXNlIGl0IG9uIHRoZSByZXN0IG9mIG15IGZhY2UuIGkgb25seSBkbyB0aGlzIGF0IG5pZ2h0IChmZWVsIGZyZWUgdG8gYnVsbHkgbWUgZm9yIG5vdCBoYXZpbmcgYSBtb3JuaW5nIHJvdXRpbmUpIGJlY2F1c2UgaSBrbm93IGkgc2hvdWxkbid0IHVzZSB0b25lciB3aGVuIGknbSBnb2luZyB0byBiZSBvdXQgaW4gdGhlIHN1biAoaSB0aGluaz8/PykgYW5kIHN1bnNjcmVlbiBicmVha3MgbWUgb3V0LiBpIGFsc28gdXNlIGh5cmRvY29sbG9pZCBwYXRjaGVzLgpTb21lIG9mIHRoZSBzdHVmZiBJIGNhbiBnZXQgYmVoaW5kIGJ1dCBsaW5raW5nIHRvIGp1c3QgbWFueSBwb3B1bGFyIHNpdGVzIGZvciB3aGljaCBldmVyeW9uZSBoYXMgYm9va21hcmtzIGlmIHRoZXkgdXNpbmcgdGhvc2UgYW55d2F5IGp1c3QgY2x1dHRlcnMgdGhlIGxpc3RzIChZb3VUdWJlLCBOZXRmbGl4LCBSZWRkaXQsIFNwb3RpZnkuKS4KQnkgdGhlIHNhbWUgdG9rZW4sIGZhciB0b28gbWFueSBpbmRpdmlkdWFscyBoYXZlIHRvIHJ1biBhIGdhdW50bGV0IG9mIHNpZ24gd2llbGRpbmcganVkZ2VtZW50YWwgY3JldGlucyBkdXJpbmcgdGltZXMgb2YgcGVyc29uYWwgY3Jpc2lzLiBHYXRoZXJpbmcgdG8gc2ltcGx5IGdhdGhlciBhbmQganVkZ2UgZm9sa3MgZm9yIHRoZWlyIHNleHVhbCBpZGVudGl0eSwgcmlnaHQgdG8gbWFrZSBjaG9pY2VzLCByaWdodCB0byBwdXJzdWUgc2NpZW5jZSBhbmQgaGVhbHRoIGFuZCBtYW55IG90aGVyIGlzc3VlcyBnb2VzIGZhciBhZ2FpbnN0IHRoYXQgd2hpY2ggYSBtb2Rlcm4sIHBoaWxvc29waGljYWwgY2l2aWxpemF0aW9uIHdvdWxkIHByYWN0aWNlIGluIGl0cyBhZHZhbmNlbWVudC4gClN1cmUsIGlmIHlvdSBsaXN0ZW4gdG8gY3JhenksIGlkZW9sb2dpY2FsbHkgZHJpdmVuIHN0dWRpZXMgeW91IGNhbiBmaW5kIGV2aWRlbmNlIGZvciBhbnl0aGluZyB5b3Ugd2FudC4gR2FzcCwgaGV0ZXJvc2V4dWFsaXR5IGFzIHRoZSBjYXVzZSBvZiBjaGlsZCBhYnVzZS4gVGhlIHJlYWwgbGluayAgYmV0d2VlbiBtYXNjdWxpbml0eSwgcHJpdmlsZWdlLCBhbmQgYSBzZW5zZSBvZiBlbnRpdGxlbWVudCB0byBvdGhlcnMgYm9kaWVzICByZW1haW5zIHVuc2VlbiBhbmQgdW5zcG9rZW4uIApJbiB0aGUgMjAwOSBjaGFtcGlvbnNoaXAsIHRoZSB5b3V0aGZ1bCBwbGF5ZXIgZnJvbSBOb3J3YXkgaGFkIG9uZSBvdGhlciBhZHZhbnRhZ2UgYmVzaWRlcyB0aGUgaW52ZW50aXZlbmVzcyB0byB0dXJuIGhpcyBjaGFuY2VzIGFyb3VuZC4gUmVzcGVjdGZ1bCwgcGxlYXNhbnQgYW5kIGFydGZ1bGx5IGFzc2VydGl2ZSwgaGUgd2FzIHRoZSBraW5kIG9mIHBsYXllciB0aGUgb3RoZXJzIGRpZG4gbWluZCBsb3NpbmcgdG8uCkl0IGp1c3QgdGhhdCBwZW9wbGUgaGVyZSBuZXZlciB0cnkgdG8gdGFrZSB0aGVpciByaWdodHMgYW5kIHByZWZlciB0byBpbnN0ZWFkIHBsYXkgdGhlIHJvbGUgb2YgdGhlIHZpY3RpbSwgaGlkaW5nIGJlaGluZCB0aGUgdHlwaWNhbCBKb3JkYW5pYW4gImFoaGggd2hhdCBnb25uYSBoYXBwZW4/IE5vdGhpbmcgd2lsbCBoYXBwZW4sIGNvcnJ1cHRpb24gYmxhaCBibGFoIGJsYWgiLiAKVGhlIGhvbHkgcHJvcGhldCAoIHBpZWNlIGJlIHVwb24gaGltKSBzYWlkLCAiIFlvdXIgYm9keSBoYXMgcmlnaHQgdXBvbiB5b3UiIFRoZXJlZm9yZSwgaXQgaXMgb3VyIGR1dHkgdG8ga2VlcCBvdXIgYm9keSBjbGVhbiBhbmQgaGVhbHRoeS4gV2Ugc2hvdWxkIGRvIGFuZCBleGVyY2lzZSByZWd1bGFybHkuIFdlIHNob3VsZCBiZSByZWd1bGFyIGFuZCBwdW5jdHVhbCBpbiBvdXIgd29yay4gdGhhbmtzIHlhbWEgTUlBIE9NRVIgaGlnaCBzY2hvb2wgZ2NlIGNvbXB1dGVyIGxhYgpUaGUgYmlnZ2VzdCBjcmltZSB0aG91Z2gsIGlzIHBvY2tldCBRdWVlbnMuIEkgb2Z0ZW4gc2VlIHRvcCBwbGF5ZXJzIHNtb290aCBjYWxsIGEgcHJlIGZsb3AgcmFpc2Ugd2l0aCB0aGlzIGhhbmQuIApUaGUgUlNMIENsdWIgaGFzIGJlZW4gYXQgdGhlIHNpdGUgZm9yIDY1IHllYXJzLCBidXQgaXMgcmVsb2NhdGluZyB0byB0aGUgZm9ybWVyIFN5ZG5leSBIb3RlbCBidWlsZGluZy4KTWFueSBvZiB0aGUgaGlnaCBlbmQsIGV4cGVuc2l2ZSB0b29scyBhcmUgaW50ZW5kZWQgdG8gYmUgdXNlZCBhbG9uZyB0aGUgaW5zaWRlIG9mIHRoZSBwYW5lbCwgbXVjaCBsaWtlIGEgcHJvIHdvdWxkIGRvLiAoR2FpbmluZyBhY2Nlc3MgdG8gdGhlIGluc2lkZSBvZiBib2R5IHBhbmVscyBjYW4gYmUgYSBjaG9yZSwgdGhvdWdoLCBhbmQgb2Z0ZW4gaW52b2x2ZXMgY2FyZWZ1bCByZW1vdmFsIG9mIG11bHRpcGxlIGludGVyaW9yIHRyaW0gcGllY2VzLikgQWx0ZXJuYXRpdmVzICh3aGljaCB0ZW5kIHRvIGJlIHRoZSBsZXNzIGV4cGVuc2l2ZSBraXRzKSBmbGF1bnQgdGhlIGNvbnZlbnRpb25hbCB3aXNkb20gdGhhdCBzbWFsbCBkZW50cyBzaG91bGQgYmUgbWFzc2FnZWQgYmFjayBvdXQgZnJvbSBiZWhpbmQgdGhlIHBhaW50ZWQgc3VyZmFjZS4gVGhlc2Ugb3B0aW9ucyBpbnN0cnVjdCB0aGUgdXNlciB0byBnbHVlIGEgdG9vbCB0byB0aGUgZGVudGVkIHN1cmZhY2UgYW5kIHRoZW4gdHdpc3Qgb3IgcHVsbCBvbiB0aGUgdG9vbCB0byBwb3AgaXQgb3V0LiAKSGUgd2lsbCBiZSBzYWRseSBtaXNzZWQgYnkgaGlzIGNsb3NlIGJyb3RoZXJzIE1hcmsgKENhdGhlcmluZSksIFNoYXduIGFuZCBLZXZpbiAoS2FyZW4pIGFuZCBhbGwgb2YgdGhlaXIgZmFtaWxpZXMuIExvdmluZyBzb24gdG8gUm9zZSBhbmQgaGlzIGJlbGF0ZWQgZGFkIEpvaG4gS2VsbHkuIFNvbiBpbiBsYXcgdG8gTWFybGVuZSBUb3dlciBhbmQgSm9obiBXb3JvdG55LiBGb3JldmVyIHRoZSBjYXJkIHNoYXJrIERlYW4gbGl2ZWQgd2l0aCB0aGUgaGFuZCB0aGF0IGhlIHdhcyBkZWFsdCBhbmQgaGFuZGxlZCBpdCBsaWtlIGEgdHJ1ZSBjaGFtcGlvbi4gCkFsbCwgdGhlIGJhbmtzIGdvdCBiaWxsaW9ucyBvZiBkb2xsYXJzIGluIHZlcnkgbG93IGludGVyZXN0IGxvYW5zIHRoYXQgdGhleSB0aGVuIHR1cm5lZCBhcm91bmQgYW5kIGxlbnQgYmFjayB0byB0YXggcGF5ZXJzIGF0IGhpZ2ggaW50ZXJlc3QgcmF0ZXMgIG9uIGNyZWRpdCBjYXJkcywgaG9tZSBsb2FucywgZXRjLiAKTmF0b3JpIEZlYXRoZXJzIGlzIGEgY29tbW9uIGNob2ljZSBmb3IgcGVvcGxlIHdpdGggc2hhbGxvdyBhbmQgc2xpZ2h0bHkgd2lkZSBzZXQgdGlzc3VlLiBJZiB5b3UgY2FuIGdyYWIgdGhhdCBvbiBhbWF6b24gaW4gMjhDIChhbmQgbWF5YmUgMjhCLzMwQikgeW91IGNhbiB1c2UgaXQgdG8gdHJvdWJsZXNob290IHlvdXIgc2VhcmNoLiBEZXBlbmRpbmcgb24gaG93IHRoYXQgZml0cywgdGhpcyBjb21tdW5pdHkgY2FuIGdpdmUgcmVjb21tZW5kYXRpb25zLgpCdXQgaGUgYWRvcHRlZCBhIGNvbmNpbGlhdG9yeSB0b25lLCBhY2tub3dsZWRnaW5nIHRoYXQgdGhlIHByb2plY3Qgd2FzIHN0aWxsIGluIGl0cyBlYXJseSBzdGFnZXMgYW5kIENoaW5hIHdhcyBzdGlsbCBsZWFybmluZyBhbmQgcmVmaW5pbmcuCkkgZG9uIHN1Z2dlc3QgdmlkZW8gdGFwaW5nIHNvbWVvbmUgaWYgdGhleSBiZWNvbWUgdW5ydWxleSBhdCBvbmUgb2YgdGhlc2UgcGxhY2VzLi4gCldpbm5pbmcgYW4gb25saW5lIHRvdXJuYW1lbnQgZm9yICQzMzAwIHdhcyBwcmV0dHkgbmljZS4gCkFuIG9wZW4gYWNjb3VudCB3aGVyZSB0aGUgcGF5bWVudHMgZm9yIHNlcnZpY2VzIHJlbmRlcmVkIGFyZSByZW1vdmVkIHRoaXMgd2F5IGNhbiBjYXVzZSB0aGUgY29uc3VtZXIgdG8gbG9zZSBhY2Nlc3MgdG8gdGhhdCBzZXJ2aWNlIGFzIHRoZSBidXNpbmVzcyByZWZ1c2VzIHRvIHdvcmsgd2l0aCB0aGVtIHVudGlsIHBheW1lbnQgaXMgbWFkZSwgZGVidCBiZWluZyBzZW50IHRvIGEgY29sbGVjdGlvbiBhZ2VuY3ksIG9yIGEgbGF3c3VpdC4gClRoZW9yZXRpY2FsbHksIFBlcnNvbiBBIGFwcHJvYWNoZXMgeW91IGFib3V0IGZpbmRpbmcgUGVyc29uIEIuIFlvdSBleHBsYWluIHRvIFBlcnNvbiBBIHRoZSBwb3NzaWJsZSBvdXRjb21lczsgY2FuIGZpbmQgdGhlbSwgZGVjZWFzZWQsIGZpbmQgdGhlbSAobWF5YmUgdGhlcmUgYXJlIG1vcmUgYnV0IHdlIHN0aWNrIHdpdGggdGhlc2UpLgpJIHJlYWxseSBoYXBweSB3aXRoIGhvdyB0aGluZ3MgZW5kLiBLdWRlbGlhIGRyZWFtcyBjb21lIHRydWUsIHRoZSBUSyBnYW5nIGFsbCBnZXQgdG8gbGVhZCByZWFsIGxpdmVzLCBOb2JsaXNzIGdldHMgc21va2VkIG9uIHRoZSB0b2lsZXQsIGFuZCBLdWRlbGlhIEF0cmEgZ2V0IHRvIGJlIGhhcHB5IHRvZ2V0aGVyIHJhaXNpbmcgdGhlaXIgaGFyZW0gbGl2ZSBjaGlsZC4gCldpdGhvdXQgYSBzaGlydCBvbiB5b3UgY291bGQgc2VlIHRoZSBib3JkZXIgbGluZTsgdGhlIGNvbnRyYXN0IHdhcyBzdGFyay4gCkV2ZW4gYmVmb3JlIGhlciBmaXJzdCBldmVudCBpbiBJb3dhICAgZHViYmVkICdMZXQgdGhlIENvbnZlcnNhdGlvbiBCZWdpbiEiICAgaGVyIGZvY3VzIHNlZW1lZCB0byBiZSBvbiB0aGUgZ2VuZXJhbCBlbGVjdGlvbi4gU2hlIGhhZCBhbHJlYWR5IHNlZW4gb2ZmIHRoZSBjZW50cmlzdHMgU2VuYXRvciBFdmFuIEJheWggYW5kIEdvdmVybm9yIE1hcmsgV2FybmVyIGFuZCBiZWxpZXZlZCBoZXIgZ3JlYXRlc3QgdGhyZWF0IHdhcyBKb2huIEVkd2FyZHMsIHJ1bm5pbmcgYXMgYSBwb3B1bGlzdCBmcmllbmQgb2YgdGhlIGRvd250cm9kZGVuLgpObyBiaWcgZGVhbCwgaXQgYSByZWd1bGFyIGRheSBpbiB0aGUgdmlsbGFnZS4gClRoZSBwcmltZSBjb250cmFjdGluZyBjb21wYW55IGFuZCBhbnkgc3ViIGNvbnRyYWN0aW5nIGNvbXBhbnkgbWFrZSBtb25leSBieSByZWR1Y2luZyB0aGUgbW9uZXkgcGFpZCB0byB0aGUgZW5naW5lZXIuIApCdXQgZm9yIHRob3NlIHdobyB3YW50IHRvIGtlZXAgdGhlIHNwYWNlIGluIHRoZWlyIGJhY2tzZWF0cyBhbmQgdHJ1bmtzIGZvciBncm9jZXJpZXMgYW5kIHN1aXRjYXNlcyBpbnN0ZWFkIG9mIGZpbGxpbmcgaXQgd2l0aCBtb25vbGl0aGljIHNwZWFrZXJzLCB0aGVyZSBhcmUgbW9yZSBsdXh1cmlvdXMgb3B0aW9ucy4gQXVkaSwgZm9yIGluc3RhbmNlLCBvZmZlcnMgYSBCb3NlIHN1cnJvdW5kIHNvdW5kIHN5c3RlbSB3aXRoIDE0IHNwZWFrZXJzLCBpbmNsdWRpbmcgYSBzdWJ3b29mZXIuIFRoZXJlJ3MgZXZlbiBhIG1pY3JvcGhvbmUgdGhhdCBwaWNrcyB1cCBvbiB0aGUgbm9pc2UgbGV2ZWwgaW4gdGhlIGNhciBzbyB0aGF0IGl0IGNhbiBhdXRvbWF0aWNhbGx5IGFkanVzdCB0aGUgdm9sdW1lIGxvdWRlciB0byBjb21wZW5zYXRlIGZvciBiYWNrZ3JvdW5kIG5vaXNlIFtzb3VyY2U6IEF1ZGldLiBBbmQsIG5vdCB0byBiZSBvdXRkb25lLCBMaW5jb2xuIGV2ZW4gc3RhcnRlZCBpbmNvcnBvcmF0aW5nIFRIWCBjZXJ0aWZpZWQgKGJhc2ljYWxseSwgbW92aWUgdGhlYXRlciBxdWFsaXR5KSBhdWRpbyBzeXN0ZW1zIGluIHRoZWlyIGx1eHVyeSBjYXJzIFtzb3VyY2U6IENOZXRdLgpUaHJvdWdob3V0IHRoZSBkYXksIGV2ZXJ5IGVtb3Rpb25hbCBpbnRlcmFjdGlvbiB0YWtlcyBzb21ldGhpbmcgb3V0IG9mIHRoYXQgYmFuay4gCkhhbmRzIHRoYXQgaGF2ZSB0aHJlZSBjYXJkcyB3b3JraW5nIHRvZ2V0aGVyIHdpdGggb25lIGNhcmQgdGhhdCBkb2Vzbid0IChvZnRlbiBjYWxsZWQgYSBkYW5nbGVyKSBhcmUgd2Vha2VyIHRoYW4gb25lcyB3aXRoIGFsbCBmb3VyIHdvcmtpbmcgaW4gY29uanVuY3Rpb24uLiAKQ291bnRpbmcgVHVybm92ZXIgYW5kIFJldmVudWVUdXJub3ZlciBjYW4gYmUgY291bnRlZCBieSBjYWxjdWxhdGluZyBpbmNvbWluZyByZXZlbnVlLCBzdWNoIGFzIHdoZW4gaW52ZW50b3J5IHR1cm5pbmcgb3ZlciBicmluZ3MgaW4gc2FsZXMgaW5jb21lLiBCdXQgaW52ZW50b3J5IHR1cm5vdmVyIGNhbiBhbHNvIGJlIGV2YWx1YXRlZCBpbiBvdGhlciB0ZXJtcywgc3VjaCBhcyB0aGUgYW1vdW50IG9mIHRpbWUgaXQgdGFrZXMgeW91IHRvIHNlbGwgdGhlIHN0b2NrIHlvdSB0eXBpY2FsbHkgaGF2ZSBvbiBoYW5kLiBJbiB0aGlzIGluc3RhbmNlLCBhIHR1cm5vdmVyIGN5Y2xlIGlzIG1lYXN1cmVkIGluIHRlcm1zIG9mIHBlcmNlbnRhZ2Ugb2YgdG90YWwgaW52ZW50b3J5IGJlaW5nIHNvbGQgYW5kIHRoZSB0aW1lIGl0IHRha2VzIHRvIHNlbGwgaXQuIApBIGJvdHRsZSBvZiBDdXRleCBuYWlsIHBvbGlzaCBjb3N0IDM1IGNlbnRzIGluIDE5MzQsIGFuIGFmZm9yZGFibGUgbHV4dXJ5IGluIGEgdGltZSBvZiB0aWdodCBwdXJzZSBzdHJpbmdzLiAKTWF5YmUsIEkgZmVlbCBEZWxoaSBkaWRuIGJhY2sgbXkgc2tpbGxzIHdpdGggYmF0IGFuZCBiYWxsLiAKSSB0aGluayB0aGUgdHJ1dGggaXMgY2xvc2VyIHRvIHRoaXM6IHBlb3BsZSB3YW50IHRvIGZlZWwgaW1wb3J0YW50IGFuZCBmZWVsIGxpa2UgdGhleSBhcmUgb24gdGhlIGluc2lkZSBvZiBzb21lIGJpZyBzZWNyZXQgdGhhdCBub2JvZHkgZWxzZSBnZXRzLiBTYW1lIHJlYXNvbiBwZW9wbGUgYXJlIGFsbCBpbiBvbiB0aGUgZ29sZCBzdGFuZGFyZCwgYW5kIGJpdGNvaW4sIGFuZCBRLCBhbmQgcGl6emFnYXRlIGV0Yy4gSXQgbWFrZXMgdGhlbSBmZWVsIHNwZWNpYWwgdG8gYmUgY29udHJhcmlhbiwgZGVzcGl0ZSB0aGUgb3ZlcndoZWxtaW5nIG1vdW50YWluIG9mIGV2aWRlbmNlIHRoYXQgc2F5cyB0aGV5IGFyZSB3cm9uZy4KQWZ0ZXIgc2luZ2luZyBhIG1lZGxleSBvZiAiR29kIEJsZXNzIEFtZXJpY2EiIGFuZCAiVGhpcyBMYW5kIGlzIFlvdXIgTGFuZCIgd2l0aCBodW5kcmVkcyBvZiBkcm9uZXMgY3JlYXRpbmcgYW4gQW1lcmljYW4gZmxhZyBiZWhpbmQgaGVyLCBMYWR5IEdhZ2EgYXBwZWFyZWQgdG8ganVtcCBmcm9tIHRoZSByb29mIG9mIE5SRyBTdGFkaXVtIGluIEhvdXN0b24uIFNoZSB0aGVuIGZsb2F0ZWQgaW50byB0aGUgc3RhZGl1bSBhbmQgc3RhcnRlZCBzaW5naW5nICJQb2tlciBGYWNlLiIgVGhlIHdob2xlIHBlcmZvcm1hbmNlIHdhcyBpbXByZXNzaXZlLCBidXQgc2hlIGRpZG4ndCBhY3R1YWxseSBqdW1wIGZyb20gdGhlIHJvb2YuIFRoZSBiZWdpbm5pbmcgc2VnbWVudCB3aXRoIHRoZSBkcm9uZXMgd2FzIHByZXJlY29yZGVkLCBhbmQgZHVyaW5nIHRoZSBsaXZlIHNldCwgc2hlIHdhcyBsb3dlcmVkIGRvd24gZnJvbSB0aGUgcm9vZiBieSBoYXJuZXNzZXMuCkFzIHNoZSB3YWxrcyBkb3duIFdhc2hpbmd0b24gQXZlbnVlLCBzaGUgc3RvcHMgYXMgdGhlIGNhciBhcHByb2FjaGVzLiAKTW9zdCBwZW9wbGUgcHJlZmVyIHBsYXlpbmcgcG9rZXIgcmF0aGVyIHRoYW4gYW55IG90aGVyIGdhbWUgaW4gZnJlZSBjYXNpbm8gdG91cm5hbWVudHMgYXMgaXQgaXMgdmVyeSBlYXN5IHRvIHBsYXkgYW5kIHRoaXMgZ2FtZSBoYXMgdGhlIG1vc3QgbnVtYmVycyBvZiBwbGF5ZXJzIGFyb3VuZCB0aGUgd29ybGQuIFNvIGl0IGlzIGVhc3kgdG8gZmluZCBhIHRhYmxlIHdoZXJlIHN1ZmZpY2llbnQgbnVtYmVycyBvZiBwbGF5ZXJzIGFyZSB0aGVyZSB0byBjb21wZXRlIHdpdGggZWFjaCBvdGhlciBhbmQgd2luIHByaXplcy4gClRoZSBmdW4gY2FtZSB3aGVuIG9uZSBvZiB0aGUgc2Nob29sJ3MgZmluZXN0IHdlbnQgb24gdGhlIG9mZmVuc2l2ZS4gVGhlc2Ugd2VyZSB0aGUgdHlwZXMgd2hvIHdlcmUgYXR0cmFjdGVkIHRvIHRoZSBzbWVsbCBvZiBibG9vZCBpbiB0aGUgd2F0ZXIuIiBSaXZhbHJ5IGRvZXNuJ3QgaW50aW1pZGF0ZSBTdG91dDsgaXQgc3RpbXVsYXRlcyBoaW0uIEhlIGZhbGxzIGluIGxvdmUgd2l0aCBQaGlsYWRlbHBoaWEgYW5kIHRoZSBQZW5uIGNhbXB1cywgd2l0aCBpdHMgImRvcm1pdG9yaWVzIGZpcnN0IGJ1aWx0IGFsbCB0aGUgd2F5IGJhY2sgaW4gQmVuIEZyYW5rbGluJ3MgZXJhLCBzdGF0ZWx5IENvbGxlZ2UgSGFsbCwgdGhlIGFic29sdXRlbHkgbWFnbmlmaWNlbnQgRnVybmVzcyBMaWJyYXJ5LCBhbmQgZXZlbiB0aGUgZGlnbmlmaWVkIFBlbm4gQXJ0IE11c2V1bS4iLiAKU29kaXVtIGFuZCBDaGxvcmlkZSBhcmUgb25seSB1c2VmdWwgd2hlbiBjb21iaW5lZCB0b2dldGhlciwgYW5kIGFnYWluIGFyZSBmb3VuZCBpbiBuZWFybHkgYWxsIGZvb2RzIChhbmQgd2UgZnJlcXVlbnRseSBnZXQgbW9yZSB0aGFuIHdlIG5lZWQpClRoZXJlIGFyZSBubyBmdW5kYW1lbnRhbCBiYXJyaWVycyB0byB0aGlzIGtpbmQgb2YgcGFydG5lcnNoaXA7IGl0IGNvbWVzIGRvd24gdG8gc2ltcGx5IHB1dHRpbmcgYSB3b3JrZmxvdyBpbiBwbGFjZS4gSXMgU1ZQIG9mIEdsb2JhbCBUZWNobm9sb2d5IFNhbGVzIGF0IGFkdmFuY2VkIFRWIHBsYXRmb3JtIENhZGVudCwgcmVzcG9uc2libGUgZm9yIGxlYWRpbmcgc2FsZXMgc3RyYXRlZ3kgYW5kIGN1c3RvbWVyIGFjcXVpc2l0aW9uLiBQcmlvciB0byB0aGlzIHJvbGUsIEtlaXRoIGRyb3ZlIHRoZSBkeW5hbWljIGFkIGluc2VydGlvbiBkZXBsb3ltZW50IGF0IEJsYWNrQXJyb3csIG5vdyBwYXJ0IG9mIENhZGVudC4gCkNvbXBhbnkgYXNzdW1lcyBubyByZXNwb25zaWJpbGl0eSBmb3IgbW9uaXRvcmluZyB0aGUgU2VydmljZXMgZm9yIGluYXBwcm9wcmlhdGUgY29udGVudCBvciBjb25kdWN0LiBJZiBhdCBhbnkgdGltZSBDb21wYW55IGNob29zZXMgaW4gaXRzIHNvbGUgZGlzY3JldGlvbiB0byBtb25pdG9yIHRoZSBTZXJ2aWNlcywgQ29tcGFueSBub25ldGhlbGVzcyBhc3N1bWVzIG5vIHJlc3BvbnNpYmlsaXR5IGZvciBVc2VyIFBvc3RpbmdzIChhcyBkZWZpbmVkIGhlcmVpbiksIGFzc3VtZXMgbm8gb2JsaWdhdGlvbiB0byBtb2RpZnkgb3IgcmVtb3ZlIGFueSBVc2VyIFBvc3RpbmdzLCBhbmQgYXNzdW1lcyBubyByZXNwb25zaWJpbGl0eSBmb3IgdGhlIGNvbmR1Y3Qgb2YgYW55IHVzZXIuIApBbHNvLCB3b3JrZXJzIGFscmVhZHkgY2FuIG93biB0aGUgbWVhbnMgb2YgcHJvZHVjdC4gCk9uZSByZXF1aXJlcyAzNSB0YWJsZXMsIGFuZCBhcyBzdWNoLCB0aGUgYnJhbmQgaXMgc2Vla2luZyBhIG1pbm9yIHZhcmlhbmNlIG9mIDE0IGFkZGl0aW9uYWwgdGFibGVzLCBhbGxvd2luZyBIYXJkIFJvY2sgdG8gbWVldCBpdHMgZmluYW5jaWFsIG9ibGlnYXRpb25zIHRvIHRoZSBPTEcuIApOb3QgbGlrZSB0aGUgYmFyYmVyc2hvcC4gCkhlIGRpZCBub3QgZGV0YWlsIHRoZSBjb25kaXRpb25zIGhlIGhhZCBsYWlkIG91dCBmb3IgS2ltIGJ1dCBzYWlkIGlmIHRoZXkgYXJlbid0IG1ldCwgIndlIHdvbid0IGhhdmUgdGhlIG1lZXRpbmcuIiBQcmVzcyBTZWNyZXRhcnkgU2FyYWggU2FuZGVycyBzYWlkIFRydW1wIHdhcyByZWZlcnJpbmcgdG8gYSBjb21taXRtZW50IHRvIHNlcmlvdXNseSBkaXNjdXNzIGRlbnVjbGVhcml6YXRpb24uIGFuZCBTb3V0aCBLb3JlYW4gZm9yY2VzLiBpbnNpc3RlbmNlIG9uIHJhcGlkbHkgZGVudWNsZWFyaXppbmcgdGhlIHBlbmluc3VsYSwgaXNzdWluZyBhIGhhcnNobHkgd29yZGVkIHN0YXRlbWVudCB0aGF0IHRoZSBXaGl0ZSBIb3VzZSBkaXNtaXNzZWQgYXMgYSBuZWdvdGlhdGluZyBwbG95LgpBbWVyaWNhIGJlbmVmaXQgc3lzdGVtL3NvY2lhbCBzYWZldHkgbmV0IGJsb3dzIGNvbXBhcmVkIHRvIG1vc3QgYW55IG90aGVyIGRldmVsb3BlZCBuYXRpb24uIE5vIHBhaWQgbWF0ZXJuaXR5IGxlYXZlLCBubyBxdWFsaXR5IGhlYWx0aGNhcmUsIG5vIGRlbnRhbCBjYXJlLCBubyBkYXljYXJlLiAKUmlkaW5nIGluIGEgZ3JheSBhcmVhIG1ha2VzIHlvdSBhbmQgdGhlIG1vZCB0ZWFtIGxvb2sgbGlrZSB5b3UgZG9uIGtub3cgd2hhdCB5b3UgZG9pbmcuIFlvdSBoYXZlIGV4cGxpY2l0bHkgd3JpdHRlbiBydWxlcyBpbiB0aGUgc2lkZWJhciB3aGljaCBtYWtlIGNvbnRlbnQgZGVsaXZlcnkgZXhwZWN0YXRpb25zIGJsYWNrIGFuZCB3aGl0ZS4gSWYgd2UgZG9uIGZvbGxvdyB0aGVtLCB5b3UgZW5mb3JjZSB0aGUgc3ViIHNvIGl0IGNvbXBsaWVzIHdpdGggdGhvc2UgcnVsZXMsIGlmIHlvdSBhcyBhIG1vZCB0ZWFtIGZlZWwgdGhlIHJ1bGVzIG5lZWQgdG8gYmUgdXBkYXRlZCwgdGhlbiBkbyB0aGF0IHNvIGl0IHNwZWNpZmllcyB3aGF0IHlvdSB3YW50LiAKRGVhbCB3YXMgd2hpdGUgaG9zdGFnZXMgZ2V0IHJldHVybmVkLiBUaGV5IGRpZCBub3QgZG8gdGhhdC4gTWFyeSBNYXZlcmljaywgd2hvIGhlbHBlZCBjYXJlIGZvciB0aGUgZ2lybCwgd3JvdGUgYWxtb3N0IHNpeHR5IHllYXJzIGFmdGVyIHRoZSBldmVudCB0aGF0IExvY2toYXJ0IGhhZCBiZWVuIGJlYXRlbiwgcmFwZWQgYW5kIGhhZCBzdWZmZXJlZCBidXJucyB0byBoZXIgYm9keS4gTWF5YmUgMjAgeWVhcnMsIGFuZCB0aGF0IG9ubHkgYmVjYXVzZSBvZiB0aGUgcG9zc2liaWxpdHkgb2Ygc3VkZGVuIGRlYXRoLCBwb3RlbnRpYWxseSBsZWF2aW5nIHRoZWlyIHlvdW5nIGNoaWxkcmVuIGRlc3RpdHV0ZS4gVGhlIGN1cnJlbnQgcmVnaW1lIHRlbmRzIHRvIGRpc2NvdXJhZ2UgY3JlYXRpdml0eS4KSW4gTWFoam9uZyAxNCB0aWxlcyAodGlsZXMgYXJlIGxpa2UgY2FyZHMgaW4gUG9rZXIpIGFyZSBhcnJhbmdlZCB0byA0IHNldHMgYW5kIGEgcGFpci4gQSBzdHJlZXQgKCIxMjMiKSBhbHdheXMgdXNlcyBleGFjdGx5IDMgdGlsZXMsIG5vdCBtb3JlIGFuZCBub3QgbGVzcy4gQSBzZXQgb2YgdGhlIHNhbWUga2luZCAoIjExMSIpIGNvbnNpc3RzIG9mIGV4YWN0bHkgMyB0aWxlcywgdG9vLiBUaGlzIGxlYWRzIHRvIGEgc3VtIG9mIDMgIDQgKyAyID0gMTQgdGlsZXMuCkNvc21ldGljIHN1cmdlcnkgaGFzIGFsd2F5cyBtYWRlIGh1Z2UgdGVjaG5vbG9naWNhbCBqdW1wcyBhcyBhIHJlc3VsdCBvZiB0aGUgcmVjb25zdHJ1Y3RpdmUgc3VyZ2VyaWVzIG5lY2Vzc2FyeSBkdXJpbmcgd2FyLiAKWW91IHNlZSBBbWVyaWNhbiB0ZWxldmlzaW9uLCBmb3JlY2xvc3VyZXMgYXJlIHJlYWwuIEhlcmUsIHdlIGRvbiBoYXZlIHRoaXMgYmVjYXVzZSB0aGUgR292ZXJubWVudCBoYXMgYmVlbiB2ZXJ5IGNhcmVmdWwgdGhhdCBwZW9wbGUgc2hvdWxkIG5vdCBib3Jyb3cgdG9vIG11Y2guIFNpbmdhcG9yZWFucyBhcmUgdmVyeSBsdWNreS4KT3RoZXIgdmFyaWV0aWVzIGF2YWlsYWJsZSBuYXRpb25hbGx5IGluY2x1ZGUgQmFrZWQgTGF5J3MsIExheSdzIEtldHRsZSBDb29rZWQgYW5kIExheSdzIFN0YXguIFsgZWRpdCBdIEV1cm9wZSBUaGVyZSBhcmUgYSBudW1iZXIgb2YgdW5pcXVlIHByb2R1Y3RzIGluIHRoZSBVbml0ZWQgS2luZ2RvbSBzb2xkIHVuZGVyIHRoZSBXYWxrZXJzIGxhYmVsLCBpbmNsdWRpbmcgY2hlZXNlIG9uaW9uLCBzbW9rZXkgYmFjb24sIHByYXduIGNvY2t0YWlsLCBwaWNrbGVkIG9uaW9uLCBiZWVmIG9uaW9uIGFuZCBNYXJtaXRlIC4gCkJ1dCBJIGRvbiB5ZXQgY2FyZSB3aG8gZGlkIGl0LCBJIGZpcnN0IGNhcmUgYWJvdXQgd2hldGhlciBpdCBoYXBwZW5zLiBJZiB5b3Ugc2hvdyB0aGUgZGF0YSB3aXRoIG5vIG91dGxpZXJzLCB0aGVuIHRoZSBkZWJhdGUgaXMgb3Zlci4gSWYgeW91IHNob3cgdGhlIGRhdGEgd2l0aCBvdXRsaWVycywgdGhlbiB3ZSBjYW4gd29ycnkgYWJvdXQgd2hvIHRoZSBndWlsdHkgcGFydHkgaXMuIApCdXQgdGhlIHNlY29uZCBwcm9uZyBvZiB0aGUgUHV0aW4gZG9jdHJpbmUgKG9yIHVsdGltYXR1bSkgbWF5IGJlIG1vcmUgdXJnZW50IGluIHByYWN0aWNhbCB0ZXJtcywgYXMgdGhlc2Ugd2VuZCB0aGVpciB3YXkgdGhyb3VnaCBhIHN1Y2Nlc3Npb24gb2YgZ2xvYmFsIG1lZXRpbmcgcGxhY2VzLiBUbyBzYXkgdGhhdCB3ZSByZXR1cm4gdG8gdGhlIHBhdGggb2YgZGlwbG9tYXRpYyBhbmQgcG9saXRpY2FsIHNldHRsZW1lbnQgbWVhbnMgdGhhdCB3ZSBtdXN0IHJlYWNoIGEgbmV3IGNhcnZlIHVwLiBUaGUgQ29sZCBXYXIgcGFjdCB3aXRoIEVhc3QgYW5kIFdlc3QgaGF2aW5nIHRoZWlyIG11dHVhbGx5IGFncmVlZCBzcGhlcmVzIG9mIGluZmx1ZW5jZSBtYXkgbm90IHN0YW5kIGFueSBsb25nZXIsIGJ1dCBhIG5ldyBkZWFsIHdpbGwgaGF2ZSB0byBiZSBkb25lLiAKWW91IGhhdmUgdG8gdW5kZXJzdGFuZCBpdCBiZXlvbmQganVzdCBwaHlzaWNhbCBwZW5ldHJhdGlvbi4gV2UgYWxsIGhhdmUgdGhlIGFiaWxpdHkgdG8gaW1hZ2luZSBob3JyaWJsZSB0aGluZ3MgYW5kIGF0IHRpbWVzIGZlZWwgZ3JhdGlmaWNhdGlvbiBmcm9tIHRoZXNlIHRob3VnaHRzLiBUaGVyZSBhIGNlcnRhaW4gdmlicmF0aW9uIG9yIGZyZXF1ZW5jeSBJIHRoaW5rIGV2ZXJ5b25lIGhlcmUgaGFzIGV4cGVyaWVuY2VkLiAKQW5uZXJldmVuYW50ICAxNTUgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpTaGUga25ldyBoZSB3b3VsZCB1c2UgaGlzIEhpZGRlbiBJbW11bml0eSBJZG9sIChpdCB3YXMgdGhlIENhc3Rhd2F5cycgbGFzdCBjaGFuY2UgdG8gY2FzaCBpbiwgYW5kIFNhc2ggd291bGQgcmF0aGVyIGhhdmUgYSBtaWxsaW9uIGRvbGxhcnMgdGhhbiBhIHRva2VuIHNvdXZlbmlyKSwgc28gaGVyIHZvdGUgd2FzIG5vdGhpbmcgbW9yZSB0aGFuIGEgcGFydGluZyBzaG90IGF0IGhlciBiZXRyYXllci4KU2hpbHBhIGtuZXcgdGhhdCBhbmQgdG8gbWFrZSBoaW0gaGF2ZSBhIGdyZWF0IHRpbWUsIHNoZSBhbmQgaGVyIGh1c2JhbmQgUmFqIEt1bmRyYSwgdGhyZXcgYSBiaWcgcG9rZXIgbmlnaHQgcGFydHkgaW4gaGlzIGhvbm91ciBhIGZldyBkYXlzIGFnby4uIApXZSB3b3VsZCByZWFsbHkgbGlrZSB0byBkaXNjdXNzIHRoaXMgd2l0aCB5b3UsIGFuZCBob3BlZnVsbHkgZmluZCBvdXQgc29tZSBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIHVuZGVyc3RhbmQgd2hhdCBvY2N1cnJlZCBoZXJlIGFuZCBob3cgd2UgY2FuIHVzZSBpdCB0byBpbXByb3ZlLiBUaGF0IGlzIGFsd2F5cyBvdXIgZ29hbC4gV2UgbG9vayBmb3J3YXJkIHRvIHNwZWFraW5nIHdpdGggeW91IHNvb24sIGFuZCBob3BlZnVsbHkgd2UgaGF2ZSB0aGUgY2hhbmNlIHRvIGhvc3QgeW91IGFnYWluIGluIHRoZSBmdXR1cmUgYWZ0ZXIgd2UgY2xlYXIgdGhpcyB1cC4gCkFsc28sIG1hbnl2ZXJzaW9ucyBvZiBHYUdhJ3Mgc29uZ3MsIHN1Y2ggYXMgcGlhbm8gc29sb3MgYW5kIG1vcmUgbWVkbGV5cyBvZmhlciBzb25ncyBhcmUgdXN1YWxseSBwZXJmb3JtZWQgYXQgaGVyIHNob3dzLCBhbmQgc2VhcmNoaW5nIHlvdXR1YmVmb3IgdGhlbSBpZiB5b3UgYXJlIHNvIGludGVyZXN0ZWQgbWF5IHlpZWxkIG1vcmUgc29uZ3MuIApGb29kLCBkcmlua3MsIE1lcmNoIG9yIHdoYXRldmVyIGVsc2UgeW91J3JlIGludG8uIFN1bnNjcmVlbiBmb3Igc3VyZS4gCihOZXcgWW9yayBvZmZlcmVkIHR3aWNlIGFzIG11Y2ggaW4gaW5jZW50aXZlcyBhcyBWaXJnaW5pYSBkaWQuKSBCdXQgdGhlIGRlYWwgd2FzIG1ldCB3aXRoIGFuZ2VyIGFuZCBwcm90ZXN0IGZyb20gcmVzaWRlbnRzLiAKUm9ndWVESUwgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KQW5ncnlEMDkgICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KVGhlIGdsb29taW5lc3MgZG9lcyBub3Qgb25seSByZXN1bHRzIGluIHBoeXNpY2FsIGRlYXRoLCBidXQgYWxzbyBhIHNwaXJpdHVhbCBkZWF0aC4gCllldCBpdCBtb3N0IGxpa2VseSBwb3NzaWJsZSBhbnl0aGluZyBvbiAiaVR1bmVzIiBjYW4gYmUgZm91bmQgb24gVmlueWwvQ0QgZm9yIGhpZ2hlciBxdWFsaXR5LiBIb3dldmVyIHRoZSBXYWxtYXJ0IHNvdW5kY2hlY2sgbW9zdCBsaWtlbHkgY2FuIG9ubHkgYmUgZm91bmQgdGhyb3VnaCBXYWxtYXJ0cyBtcDMgc2l0ZS4gCldlIGRvbid0IG5lZWQgbm8gKG1pcyllZHVjYXRpb24KWW91IGFsd2F5cyBoYXZlIHRvIHdvcmsgaGFyZGVyIGZvciBsZXNzIHJlc3VsdHMuIApJIHVuZGVyc3RhbmQgd2hhdCBpdCdzIGxpa2UgdG8gd2FrZSB1cCBhbmQgZmVlbCBub3RoaW5nIGJ1dCBmdXRpbGl0eS4gQnV0IHRoYXQgZmVlbGluZyBpc24ndCBldmVyeXRoaW5nLiBUaGVyZSBpcyBzbyBtdWNoIG9mIGxpZmUgeW91IGhhdmVuJ3QgZXhwZXJpZW5jZWQgeWV0LCBhbmQgaXQgdHJ1bHkgZ2V0cyBiZXR0ZXIgYXMgeW91IGdldCBvbGRlci4gCllldCB3ZSBjb29rIHBvcmsgaW4gY2lkZXIsIGFuZCB0aGF0IGFib3V0IGl0LgpEb24gZ2V0IHRvbyBmYW5jeSB3aXRoIDEvMi4gSWYgdGhlIHJlZ3MgYXJlIGZvbGRpbmcgdG8geW91ciBjYmV0IDcwJSBvZiB0aGUgdGltZSB0aGVuIHlvdSBkb2luZyBqdXN0IGZpbmUgYW5kIHRoZXkgYXJlbiBhZGp1c3RpbmcuIEFsc28gMTUgc2Vzc2lvbnMgaXMgYSBzaGl0IHNhbXBsZS4KU2Nvb3AgUmV2aWV3IG9mIEJvb2tzIFNSQiBQaWNrcwpPdGhlciBtYWpvciBoaXRzIGJ5IEtvcmF5IGFyZSBGZXN1cGhhbmFsbGFoLCBJc3RlbWVtLCBTZXZpbmNlLCB5bGUgQmlyIEdlZXIgWmFtYW4ga2kgLCBFc3RhcmFiaW0sIEFyYXAgU2EsIFlhbG56bGFyIFJodG0sIEFrcmViaW4gR3psZXJpIGFuZCBwbGVyLgpIZSBzYXlzIElrZWEgaXMga2VlbiB0byBqb2luIHRoZSBjaXJjdWxhciBlY29ub215IGJ5IGxvb2tpbmcgYXQgbmV3IHdheXMgdG8gd29yayB3aXRoIHJlbmV3YWJsZSBhbmQgcmVjeWNsZWQgbWF0ZXJpYWxzLCBhbmQgcHJvbG9uZyB0aGUgbGlmZSBvZiBpdHMgcHJvZHVjdHMuCkZpbmFsbHksIHNoZSBwb2ludHMgb3V0LCB0aGVyZSBubyBzaGFtZSBpbiBhdXRvbWF0aW5nIG9yIG91dHNvdXJjaW5nIHRhc2tzIHRoYXQgeW91IGRvbiBsaWtlLCBvciBuZXZlciBnZXQgdG8uIEluIGZhY3QsIHRoYXQgbWF5IGJlIHRoZSBleGFjdCBmb3JtdWxhIHlvdSBuZWVkIHRvIGdhaW4gdGltZSB0byBkbyB0aGUgdGhpbmdzIHlvdSByZWFsbHkgd2FudCB0byBkby4KU291bmRzIGxpa2UgYSByZWNpcGUgZm9yIGRpc2FzdGVyLi4gCkJhY2tncm91bmQ6IEkgYSBjYXN1YWwgcnVubmVyLCBhcHByb3ggMTIgMTUgbXB3LCB3L3J1bnMgYWJvdXQgMyBtaWxlcyAzIHRpbWVzIGEgd2Vlay4gSSBzaWduZWQgdXAgZm9yIGEgaGFsZiBtYXJhdGhvbiBpbiB0aGUgc3ByaW5nIGFuZCBhbSB3b3JraW5nIG9uIGdldHRpbmcgYSBiYXNlIGFuZCBoYXZlIGluY3JlYXNlZCBteSBsb25nIHJ1biB0byBhYm91dCA1IG1pbGVzIGF0IHRoaXMgcG9pbnQuIEkgYWx3YXlzIGJlZW4gYSBydW5uZXIgYnV0IG5vdCByZWFsbHkgYSBmYXN0IG9uZSwgSSBoYWQgaGlwIHN1cmdlcnkgc2V2ZXJhbCB5ZWFycyBhZ28gYW5kIGhhdmUgYWRqdXN0ZWQgbXkgcnVubmluZyBmb3JtIGFib3V0IGEgeWVhciBhZ28gYXQgdGhlIHJlY29tbWVuZGF0aW9uIG9mIGEgUFQgKEkgd2FzIGEgcHJldHR5IGJhZCBoZWVsIHN0cmlrZXIpLCBhbmQgSSBjb21mb3J0YWJsZSB3aXRoIHRoaXMgbmV3IGZvcm0gbm93LgpCdXQgUG9saXNoIGJpc2hvcHMgY29tcGxhaW5lZCB0aGF0IGEgRGVjZW1iZXIgZGF0ZSB3b3VsZCBtYWtlIGl0IGRpZmZpY3VsdCBmb3IgUG9saXNoIHBpbGdyaW1zIHRvIGNvbWUgdG8gdGhlIFZhdGljYW4gYnkgYnVzIGFsb25nIHNub3d5LCBpY3kgcm9hZHMuIApXaGVuIHRoZSBsaWdodCBoaXRzIHBvaW50IEEsIGxpZ2h0IGdldHMgcmVmbGVjdGVkIGRvd24sIHRoZW4gMSBzZWNvbmQgcGFzc2VzIGJlZm9yZSB0aGUgbGlnaHQgcmVhY2hlcyBwb2ludCBCLiBIZXJlIHRoZSBsaWdodCBhZ2FpbiBnZXRzIHJlZmxlY3RlZCBkb3duLCBhIGxpdHRsZSBiZWhpbmQgKDEgc2Vjb25kIGJlaGluZCkgdGhlIGxpZ2h0IGZyb20gcG9pbnQgQS4gVGhlbiAxIHNlY29uZCBwYXNzZXMgYWdhaW4sIHRoZSBsaWdodCBoaXRzIHBvaW50IEMsIGFuZCB0aGUgbmV3bHkgcmVmbGVjdGVkIGxpZ2h0IGlzIDEgc2Vjb25kIGJlaGluZCBCIGRvd253YXJkIHJlZmxlY3RlZCBsaWdodCB3aGljaCBpcyBzdGlsbCAxIHNlY29uZCBiZWhpbmQgQSBkb3dud2FyZCByZWZsZWN0ZWQgbGlnaHQuIEFuZCBzbyBvbi4KSSBkb24gaW1hZ2luZSBsaXZpbmcgb3V0IG9mIGEgdHJ1Y2sgaW5kZWZpbml0ZWx5IGlzIGZvciB0aGUgZmFpbnQgb2YgaGVhcnQuIApOb3RoaW5nIHNheXMgdGFja3kgYWJvdXQgYSBob21lIGxpa2UgZGlydHkgYW5kIHdvcm4gb3V0IGZ1cm5pdHVyZS4gCldlIGFyZSBleHBlY3Rpbmcgcm9sbGVyY29hc3RlciB0ZW1wZXJhdHVyZXMgb3ZlciB0aGUgbmV4dCBmZXcgZGF5cy4gCkl0IHdvcmtlZC4gV2h5PyBCZWNhdXNlIHlvdSBrbm93IHRoZXNlIG5hbWVzIHRvIHRoaXMgZGF5LCA1MSB5ZWFycyBsYXRlcjoKVGhleSB3aWxsIGFzayBtZW4gdG8gcGF5IGZvciB0aGUgaGFwcHkgZW5kaW5nIGJlZm9yZSB0aGUgbWFzc2FnZSBzdGFydHMuIFNvIEkgd291bGQgZ3Vlc3Mgc29tZW9uZSBjb3VsZCBhdm9pZCB0aGlzIHN0aW5nIGlmIHRoZXkgZW5zdXJlIHRoYXQgdGhlIG1hc3NldXNlIGlzIHRvdWNoaW5nIHRoZWlyIHBlbmlzIGJlZm9yZSBhbnkgZGlzY3Vzc2lvbiBvZiBoYXBweSBlbmRpbmdzIG9jY3Vycy5hIHJhaWQsIHRoZSBwb2xpY2Ugd2lsbCBidXJzdCBpbnRvIGEgbWFzc2FnZSBwYXJsb3VyIGFuZCB0cnkgdG8gY2F0Y2ggbWVuIGhhdmluZyBzZXguIApPZmZpY2lhbHMgdG9sZCByZXBvcnRlcnMgYXQgdGhlIHNhbWUgZXZlbnQgdGhhdCB0aGV5IHdlcmUgcHJlc3Npbmcgb3RoZXIgZ292ZXJubWVudHMgYW5kIGNvbXBhbmllcyB0byBjb25zaWRlciB0aGUgdGhyZWF0IHBvc2VkIGJ5IEh1YXdlaSBidXQgZGlkIG5vdCBvZmZlciBhbnkgc3BlY2lmaWMgZXZpZGVuY2UgaXQgd2FzIGEgcmlzay4uIApNeSBkZXByZXNzaW9uIHdhcyBjcmlwcGxpbmcgbXkgYWJpbGl0eSB0byBkbyBhbnl0aGluZy4gCldlIGJ1eSB0aGUgYmlnIGhvdXNlIGJlY2F1c2UgaXQgaGFzIGEgeWFyZCBmb3Igb3VyIGZ1dHVyZSBraWRzIGFuZCBhIGtpdGNoZW4gaXNsYW5kIHRoYXQgZW50ZXJ0YWluZXIgZHJlYW0uIAo0IGxlc3NvbnMgZnJvbSBGYXJtVmlsbGVzIENFTwpHYWV0eiB3YXMgaW4gZmFjdCBhd2FyZSBvZiBDb2hlbiBoZWFyaW5nLiBUaGUgdHdlZXQgYWxvbmUgaXMgY2xlYXIgZXZpZGVuY2Ugb2YgdGhpcyBmYWN0LiBsZXNzIHRoYW4gMjQgaG91cnMgYmVmb3JlIHRoZSBoZWFyaW5nLgpJbiBoaXMgMjAxMCBpbnRlcnZpZXcsIGhlIGRpZCBoaXMgcGFydCB0byBtYWtlIGl0IGNsZWFyIHRoYXQgcHJvbWlzZXMgb2YgImhvcGUiIHdlcmUgYXBwZWFscyB0byBuYXZldCwgYW5kIHRvbGQgaGltIGhpcyBhcHByb2FjaCB0byBoZWFsdGggY2FyZSByZWZvcm0gd2FzIHRvbyB3ZWFrIGFuZCB0aW1pZCwgc2hvcnQgb2YgdGhlIGNoYW5nZSB0aGUgY291bnRyeSBuZWVkZWQgICBhbmQgaGFkIGF0IGxlYXN0IG9uZSBzZWdtZW50IG9uIGhpcyBzaG93IHdoZXJlIGhlIHRhbGtlZCBhdCBsZW5ndGggYWJvdXQgaG93IGJhZGx5IHRoZXkgdGhlbiBib3RjaGVkIHRoZSBBQ0Egcm9sbG91dC4gCkp1c3QgYmUuIFRoZSBmZWVsaW5nIG9mIG5vdCBiZWluZyBodXJ0IGV2ZXJ5IGRheSBpcyByZWFsbHkgYW1hemluZy4gCiJUaGUgTW9uZXltYWtlciBFZmZlY3QiIHdpbGwgYmUgaW4gZXZpZGVuY2UgdGhpcyBGcmlkYXkgYXMgaHVuZHJlZHMgb2YgcGxheWVycyB3aWxsIHRyYXZlbCBmcm9tIGFsbCBvdmVyIEV1cm9wZSBhbmQgcGF5IDQyMCBpbiB0aGUgaG9wZSBvZiBxdWFsaWZ5aW5nIGZvciB0aGUgZmluYWwgdHdvIGRheXMgb2YgdGhlIHByZXN0aWdpb3VzIFdvcmxkIFBva2VyIFRvdXIgJ1dQVDUwMCcgYW5kIGEgZ3VhcmFudGVlZCAkMSBtaWxsaW9uIHByaXplIHBvb2wgYXQgQXNwZXJzIENhc2lubyBpbiBMb25kb24gdGhpcyBFYXN0ZXIgd2Vla2VuZC4gCkFuZCB3aGVuIHRoZXkgZ2V0IG9uIHRoZSBjYXNpbm8gZmxvb3IgdGhlIHNlcnZpY2UgbGV2ZWwgdGhhdCBpcyBnb2luZyB0byBiZSBwcm92aWRlZCBmcm9tIHRoZWlyIGxvY2FsIGNvbW11bml0eSwgeWEga25vdywgdGhlIGxvY2FsIGVtcGxveWVlcyBpbiB0aGlzIGNvbW11bml0eS4gU28gSSB0aGluayB0aGF0IHRoYXQgaXMgdGhlIHdvdyBmYWN0b3IsIiBzYWlkIEdhbGxlLi4gCkl0IGRlZmluaXRlbHkgYSBzdG9yeSBtYWRlIGZvciBhZHVsdHMsIHRob3VnaCBvdmVyYWxsIGl0IGlzIGFsc28ganVzdCBhIGZlZWxnb29kLCBzbyBJIHN1cHBvc2UgZXZlcnlvbmUgY291bGQgcHJvYmFibHkgZW5qb3kgaXQKVGhlIGNvbXBldGl0aW9uIHRoaXMgeWVhciBmZWF0dXJlZCBjb250ZXN0YW50cyBmcm9tICwgLCAsICwgdGhlICwgLCAgYW5kIEhvbmcgS29uZywgd2l0aCBndWVzdCBwZXJmb3JtYW5jZXMgZnJvbSBBbWVyaWNhbiBjb3NwbGF5ZXJzLkkgd2VudCBvbmJvYXJkIE1hcmluZXIgb2YgdGhlIFNlYXMgbGFzdCB5ZWFyIHRvIGV4cGVyaWVuY2UgdGhlIGZpcnN0IENPU0ZFU1QgU0VBIGFuZCBzYWlsZWQgd2l0aCB0aGVtIGFnYWluIHRoaXMgeWVhci4gCkVzIHBsIFNwcmluZ2JydW5uZW4sIHcgZGVyIFdlaW4gZWluZ2VzY2hlbmt0IHdpcmQuIApNYWduZXNpdW0sIG9uIHRoZSBvdGhlciBoYW5kLCBtYXkgaGF2ZSBhIHNpbWlsYXIgbWVjaGFuaXNtIG9mIGFjdGlvbiBieSBpbnRlcmZlcmluZyB3aXRoIE5NREEgcmVjZXB0b3IgYWN0aXZhdGlvbiB3aXRob3V0IHRoZSBhZHZlcnNlIGNvbnNlcXVlbmNlcyBvZiBkcnVnIGluZHVjZWQgTk1EQSByZWNlcHRvciBibG9ja2FkZSAoMjUpLi4gClNoZSBob2xkcyBhIE1hc3RlciBvZiBBcnRzIGluIHNvY2lvbG9neSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIE1pc3NvdXJpIEthbnNhcyBDaXR5LiAKIldlIHdvdWxkIGJvdGggbGlrZSB0byB0aGFuayBhbGwgb2Ygb3VyIHN0YWZmLCBjbGllbnRzIGFuZCBmYW1pbGllcyBmb3IgdGhlaXIgbG95YWwgc3VwcG9ydCB0aHJvdWdoIHRoaXMgZGlmZmljdWx0IHRpbWUsIHdoaWNoIGhhcyBlbmFibGVkIHVzIHRvIGNvbnRpbnVlIHRvIHNlcnZlIGFzIHdlIGhhdmUgZm9yIHRoZSBsYXN0IDI1IHllYXJzIGFuZCwgZGVzcGl0ZSBKdXN0aW4ncyBjb25kdWN0LCB3aWxsIGNvbnRpbnVlIHRvIGRvIHNvLiIuIApQYWNpZmljIFBva2VyJ3MgT21haGEgSGlnaCBMb3cgaXMgdXN1YWxseSBkZXNjcmliZWQgYXMgYW4gZXhjaXRpbmcgZ2FtZSBhbmQgaGFzIGJpZ2dlciBwb3QgbW9uZXkgZm9yIHBsYXllcnMgdG8gd2luLi4gCkpvbiBIdW50c21hbiBTci4sJDEuMSBiaWxsaW9uLCBXaGFydG9uLiBTdGFydGVkIEh1bnRzbWFuIENoZW1pY2FsLCBhY3F1aXJlZCBtb3JlIHRoYW4gMzAgY29tcGFuaWVzLCBpbmNsdWRpbmcgVGV4YWNvJ3MgcGV0cm9jaGVtaWNhbHMgb3BlcmF0aW9uLCBzYXlzIEZvcmJlcy4gU29uIHNvdWdodCBHT1AgcHJlc2lkZW50aWFsIG5vbWluYXRpb24uIApKY2FzZXlzMzQgdQpOZXh0IHRpbWUsIEkgcHJvYmFibHkgYnJpbmcgb25lIG9mIG15IGhhbW1vY2sgcmlncy4gSSBuZXZlciB1c2VkIGEgR2F0ZSB3b29kLiAKQm91cnRvbiBvbiB0aGUgV2F0ZXIgaW4gR2xvdWNlc3RlcnNoaXJlIGlzIGFsc28gbWFkZSB1cCBvZiBzZXZlcmFsIGxpc3RlZCBidWlsZGluZ3MsIGFuZCB0aGUgbW9kZWwgb2YgdGhlIHZpbGxhZ2UgaXMgaXRzZWxmIEdyYWRlIElJIExpc3RlZC4uIApUaGUgZ2FtZSBpcyBzdGFydGVkIHdpdGggdGhlIGRlYWxlciBkaXN0cmlidXRpbmcgdGhlIGNhcmRzIHRvIHRoZSBwbGF5ZXJzIGluIGEgY2xvY2t3aXNlIG9yZGVyLiBUaGUgcGxheWVycyBoYXZlIGZvdXIgb3B0aW9ucyB0byBkZWFsIHdpdGggdGhlIGdhbWUuIApJIFZJRVcgdGhlIEVVIGxhY2sgb2YgdW5hbmltaXR5IGluIHJlc3BvbmRpbmcgdG8gdGhlIFJ1c3NpYW5zIGFzIGEgd2Vha2VuaW5nIG9mIHRoZSBzeXN0ZW0uIApNeSBmcmVzaG1lbiByb29tbWF0ZSBteSBsYXN0IHllYXIgd2FzIGEgc2ltaWxhciBzb3J0IG9mIGdvZGRhbW4gcGVyc29uaWZpZWQgZmlsdGgsIGFuZCB3ZSBraW5kYSBlc3RhYmxpc2hlZCBhbiB1bnNwb2tlbiByb3V0aW5lIHdpdGggdG9pbGV0IHBhcGVyICB5b3UgZmluaXNoIGl0LCB5b3UgcmVwbGFjZSBpdCBmcm9tIHlvdXIgc3Rhc2guIFVudGlsIHNoZSBmYWlsZWQgdG8gcmVwbGFjZSB0aHJlZSB0aW1lcyBpbiBhIHJvdywgbm90IHRvIG1lbnRpb24sIHNoZSBoYWQgdHdvIGJveWZyaWVuZHMgb3ZlciAyNC83LCBzbyBzaGUgd2FzIHVzaW5nIHRoZSBtYWpvcml0eSBvZiB0aGUgdG9pbGV0IHBhcGVyLiBTbyBJIGRlY2lkZWQgSSB3b3VsZG4gcmVwbGFjZSBpdCB0aGlzIHRpbWUuIApBbmVzdGhldGl6aW5nIGEgcGFpbmZ1bCBmYWNldCBqb2ludCBvciB0aGUgbWVkaWFsIGJyYW5jaCBvZiB0aGUgcG9zdGVyaW9yIHByaW1hcnkgcmFtaSB0aGF0IGlubmVydmF0ZXMgYSBwYWluZnVsIGZhY2V0IGpvaW50IHdpbGwgY29tcGxldGVseSBlbGltaW5hdGUgaXRzIHBhaW4uCkkgaG9wZSBldmVyeW9uZSB3aWxsIHRha2UgeW91ciBhZHZpY2UsIEkgY291bGRuIGFncmVlIG1vcmUuIFlvdXIgdGltZSBpcyBsaWtlIGEgYmFuayBhY2NvdW50LCBhbmQgZXZlcnkgdGltZSB5b3UgY29tbWl0IHRvIHNvbWV0aGluZywgeW91IHRha2luZyBtb25leSBvdXQgb2YgdGhhdCBhY2NvdW50LiBOb3cgc29tZSBvZiB0aG9zZSB3aXRoZHJhd2FscyBhcmUgaW52ZXN0bWVudHMsIGJ1dCBvdGhlcnMgYXJlIGV4cGVuc2VzLCBpdCBpcyB1cCB0byB5b3UgdG8gZGV0ZXJtaW5lIHdoaWNoIGlzIHdoaWNoIGFuZCBob3cgdG8gYXBwcm9wcmlhdGVseSAic3BlbmQiIHlvdXIgbW9uZXkuCkR1dGllcyBQYXN0b3JzIGdlbmVyYWxseSBvdmVyc2VlIG9yIHN1cGVydmlzZSB0aGUgYWN0aXZpdGllcyBvZiBhIGNodXJjaC4gVGhleSBhcmUgZXNzZW50aWFsbHkgInNoZXBoZXJkcyIgd2hvIG1pbmlzdGVyIHRvIHRoZWlyICJmbG9jaywiIHRoYXQgaXMsIHRoZSBjaHVyY2hnb2VycyB3aG8gYXR0ZW5kIHNlcnZpY2VzIGFuZCBhY3Rpdml0aWVzLiBVc3VhbGx5IHRoZXkgcHJlYWNoIHNlcm1vbnMgdG8gdGhlIGNvbmdyZWdhdGlvbiAgIG1vc3QgbGlrZWx5IG9uIFN1bmRheXMgICB0ZWFjaGluZyB0aGVtIGhvdyB0byBhcHBseSBTY3JpcHR1cmUgdG8gdGhlaXIgbGl2ZXMsIGFuZCBsZWFkaW5nIHRoZW0gaW4gcHJheWVyLiBUaGV5IG1heSBvZmZlciB0aGVtIGNvdW5zZWxpbmcuIEFkZGl0aW9uYWxseSwgdGhleSBtYXkgbGVhZCBDaHJpc3RpYW4gY2VyZW1vbmllcyBmb3IgYmFwdGlzbSwgQ29tbXVuaW9uLCBmdW5lcmFscyBhbmQgd2VkZGluZ3MuCldoYXQgZG8gRHIuIFZpYyBGZXksIGFuIG9ic3RldHJpY2lhbiBmcm9tIENsaW50b24sIE9rbGFob21hLCBhbmQgRXJpY2sgQnJlbmVzLCBhIGZhcm1lciBmcm9tIENvc3RhIFJpY2EgaGF2ZSBpbiBjb21tb24/IFRoZXkgYm90aCBtYWRlIGl0IHRvIHRoZSBmaW5hbCB0YWJsZSBvZiBUaGUgV29ybGQgUG9rZXIgVG91cidzIEFydWJhIFBva2VyIENsYXNzaWMuIEFuZCB3aGF0IG1ha2VzIGl0IG1vcmUgcmVtYXJrYWJsZSBpcyB0aGV5IHdvbiB0aGVpciAkNiwwMDAgYnV5IGluIGFuZCB0aGUgdHJpcCB0byBBcnViYSBieSBwbGF5aW5nIGEgJDI3IHNhdGVsbGl0ZSB0b3VybmFtZW50IGF0IHRoZSBvbmxpbmUgcG9rZXIgcm9vbSwgVWx0aW1hdGUgQmV0LiBOZWl0aGVyIG9mIHRoZXNlIG1lbiBhcmUgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcnMgYnV0IGF0IHRoZSBlbmQgb2YgdGhlIHRvdXJuYW1lbnQgVmljIEZleSBmaW5pc2hlZCBpbiA2dGggcGxhY2UgYW5kIHdvbiAkMTA1LDAwMCBhbmQgRXJpY2sgQnJlbmVzIGZpbmlzaGVkIGluIGZpcnN0IGFuZCB3ZW50IGhvbWUgdG8gQ29zdGEgUmljYSAkMSw0MTcsMDAwIHJpY2hlci4gTm90IGJhZCBmb3IgYSAkMjcgaW52ZXN0bWVudC4KV2hlbiBteSBkYXVnaHRlciB3YXMgYm9ybiwgd2UgaGFkIHRvIGp1c3QgbGV0IGhlciBjcnkgaXQgb3V0LiBTaGUgMyBub3csIGFuZCB3ZSBzdGlsbCBkb2luZyBpdC4gU2hlIGhhcyB0aGUgc3RhbWluYSBvZiBhIGRyYWZ0IGhvcnNlLCBhbmQgd2lsbCBjcnkgZm9yIGhvdXJzIG9uIGVuZC4KRXhjZWxsZW50IGFuc3dlci4gQXMgc29tZW9uZSBpbiByZWxpZ2lvdXMgc3R1ZGllcywgSSB3b3VsZCBhZGQgdGhhdCBtb3N0IGluIHRoZSBmaWVsZCB3b3VsZCBhcmd1ZSB0aGF0IHRoYXQgdGhlIGlkZWEgdGhhdCB0aGVyZSBpcyBzb21ldGhpbmcgY2FsbGVkICJyZWxpZ2lvbiwiIHNlcGFyYWJsZSBmcm9tIG90aGVyIGFzcGVjdHMgb2YgY3VsdHVyZSwgaXMgYSBtb2Rlcm4gY29uc3RydWN0LiAKSW4gaGlzIGp1bmlvciB5ZWFyIGhlIHdhcyBmcmVxdWVudGx5IGFic2VudCBzZWVpbmcgZG9jdG9ycyBhbmQgc3VjaC4gCk5vdyB3aXRoIHRob3NlIGNvbG9yIGNob2ljZXMsIHRoZSBwaW5rIG9uZXMgd2VyZW4gc2VsbGluZyBtdWNoIChvciBhdCBhbGwpLCBidXQgdGhlIGJsYWNrIGFuZCBncmV5IG9uZXMgd2VyZSBzZWxsaW5nIGZpbmUsIHNvIHRoZSBwaW5rIG9uZXMgd2VyZSBwdXQgb24gY2xlYXJhbmNlIGZvciBsaWtlICQ1IG9mZiB0byB0cnkgYW5kIGdldCB0aGVtIHNvbGQgc28gc29tZXRoaW5nIGVsc2UgY291bGQgYmUgcHV0IG9uIHRoZSBzaGVsZi4uIApBbGwgdGhlc2UgZ2FtZXMsIGxlYWRpbmcgdXAgdG8gcGxheW9mZnMsIGFyZSBwbGF5b2ZmIGdhbWVzLiBZb3UgaGF2ZSB0byBnZXQgYWxsIHRoZSBoYWJpdHMgcmlnaHQsIHNhaWQgQnJvc3NvaXQuIApUaGUgRmxhbWVzIHBsYXkgaW4gVmVnYXMgb24gV2VkbmVzZGF5IGFuZCBpbiBBcml6b25hIG9uIFRodXJzZGF5LgpJc3QgZGllcyBlcmxlZGlndCwgZGFubiBnZWhlIG1hbCB2b24gZGVtIEdld2lubiBlaW5lciBiaWcgYmV0IHBybyBTdHVuZGUgYXVzLiAKTXkgYmFkIGJpa2UgbGFuZSBpcyBiYW5uYXR5bmUuIApBbG9ycywgY29tbWVudCBsZSBmYWl0IGQndHJlIGdyb3Mgb3UgZ3Jvc3NlIGluZmx1ZW5jZSBsYSBzZHVjdGlvbiBlbnRyZSBpbmRpdmlkdXMsIGwnYW1vdXIsIGxhIGZjb25kaXQsIGxhIGdyb3NzZXNzZS4gCk9ubHkgYnkgZm9sbG93aW5nIGEgbGluayB0byB0aGUgb2RkcyBkb2VzIG9uZSBzZWUgdGhlIG9kZHMgb2YgZWFjaCBwYXlvdXQsIGFsb25nIHdpdGggYW4gdW5kZXIgc2l6ZWQgZGlzY2xhaW1lciByZWFkaW5nOiBpcyBub3QgYSByZWFsIFBva2VyIGdhbWUuIApPZGxlYmVlcyAgMTk1IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlIER1Y2hhbXAgd291bGQgY2F1c2UgdHJpYWwgYW5kIG9jY2FzaW9uYWwgb3V0cmFnZSBtdWNoIG9mIHRoZSBhcnR3b3JsZCBkdWUgbm8gZG91YnQgdG8gaXQgY2hhbGxlbmdpbmcgYWVzdGhldGljIEkgZG9uIGtub3cgd2hhdCB0aGUgcmVhZGVycyBvZiB0aGUgQ29tcHRlIFJlbmR1cyB0aG91Z2h0IHdoZW4gdGhleSBzYXcgdGhpcyBpbWFnZSwgYnV0IEkgc3VzcGVjdCBpdCBkaWQgbm90IGludm9sdmUgZXZhbHVhdGluZyBpdHMgYXJ0aXN0aWMgaW1wYWN0Li4gCk9obmUgd2VubiB1bmQgYWJlci4gVW5kIHdlbm4gc2llIGRhcyBuaWNodCB3b2xsZW4sIGRhbm4gYnJlY2hlbiB3aXIgaGllciBhYiwgZ2VoZW4gZWluZW4gS2FmZmUgdHJpbmtlbiwgdHJlbm5lbiB1bnMsIG9obmUgR3JvbGwgdW5kIFZvcndyZmUuIApPbmUgcHJvamVjdCBzcHVycmVkIGJ5IHRoZSB0YXNrIGZvcmNlIHdhcyB0aGUgbGF1bmNoIG9mIGFuIGV2ZW50IHRoYXQgZXBpdG9taXplZCB0aGUgY2hhcmdlLgpTaGUgbGlrZXMgInNlY3JldCIgYW5kIHRvZGF5J3Mgc2VjcmV0IGlzIHR3byBob3VyIHNlc3Npb24sIHNlY3JldCB0byBoZXIgY291c2luLiAKVGhpcyB3b3VsZCBiYXNpY2FsbHkgcHV0IHRoZW0gYXQgYnJlYWsgZXZlbiBsZXZlbHMuIApBIGNvbnN0YW50IHJlbWluZGVyIHRoYXQgdGhlIGFuc3dlciBvZiAid2hhdCBkaWQgSSBmaWdodCBmb3I/IiBFeGlzdHMgbW9yZSBpbiB0aGVvcmV0aWNhbCBwb2NrZXRzIG9mIHdoYXQgd2Ugd2FudCB1cyB0byBiZSwgYXMgb3Bwb3NlZCB0byBhIHN0cm9uZyBmYWJyaWMgb2Ygd2hhdCB3ZSBhcmUuIEkgZG8gdGFrZSBoZWFydCwgaG93ZXZlciBmb3IgdGhlcmUgYXJlIG1vcmUgb2YgdXMgd2VhdmluZyB0aHJlYWRzIGFuZCBtYWtpbmcgY29ubmVjdGlvbnM7IHN1Y2ggYWN0cyBmcmlnaHRlbiBhIGRlY2FkZXMgbG9uZyBjb25zZXJ2YXRpdmUgc3RhdHVzIHF1bywgYSBicm9rZW4gc29jaWFsIGluZXJ0aWEgcmVmdXNpbmcgdG8gZnVuY3Rpb24gZm9yIGFsbCBidXQgYSBzZWxlY3QgZmV3LgpUb3RhbCBuaWxhaSA5IGFkYWxhaCBhbmdrYSB0ZXJ0aW5nZ2kgZGFsYW0gcGVybWFpbmFuIGp1ZGkgY2VtZSBvbmxpbmUsIEppa2EgQmFuZGFyIG1lbmRhcGF0a2FuIG5pbGFpIDkgbWFrYSBiYW5kYXIgc3VkYWggMTAwJSBqYWRpIHBlbWVuYW5nIHB1dGFyYW4gdGVyc2VidXQgd2FsYXVwdW4gc2VtdWEgcGxheWVyIGRhcGF0IG5pbGFpOSBkYW4gamlrYSBiYW5kYXIgbWVuZGFwYXRrYW4gbmlsYWkgZGliYXdhaCA5IGRhbiBwbGF5ZXIgbWVuZGFwYXRrYW4gbmlsYWkgOSBtYWthIHBsYXllciBha2FuIG1lbmRhcGF0a2FuIGJheWFyYW4gMnggZGFyaSBuaWxhaSB0YXJ1aGFuLiAKU1VOREFZIEp1bHkgMTV0aCwgJDUgICBUaGUgZmFtb3VzIEJlZXIgTWlsZSBhbmQgSGFuZ292ZXIgSGFzaCEgU25hY2sgb24gYnJlYWtmYXN0IGFuZCBkcmluayBtaW1vc2FzL21pY2hlbGFkYXMgd2hpbGUgd2F0Y2hpbmcgYWxsIHdpbGxpbmcgcGFydGljaXBhbnRzIGF0dGVtcHQgdGhlIEJlZXIgTWlsZSEgQWZ0ZXIgdGhhdCB3ZSB0YWtlIG9mZiBvbiB3aGF0IG1hbnkgaGF2ZSBjYWxsZWQgdGhlIGJlc3QgaGFuZ292ZXIgaGFzaCBldmVyLCBhbmQga2lsbCB3aGF0IGxlZnQgb2YgdGhlIGtlZ3MsIHRoZSBmb29kIGFuZCBhbnkgcmVtYWluaW5nIGRpZ25pdHkuClRoZXJlIGNvdWxkbid0IGhhdmUgYmVlbiBhIGJldHRlciBvcGVuaW5nIHRvIHRoZSBmaW5hbCBkYXkuIE91dCB3YWxrZWQgYSBsdW1pbm91cyBNYWhpcmEgS2hhbiwgZm9sbG93ZWQgYnkgU2hlaGVyeWFyIE11bmF3YXIgYW5kIEFkZWVsIEh1c3NhaW4gYW5kIHlvdSBjb3VsZCBzZWUgQXNpbSBSYXphIHNtaWxpbmcgbGlrZSBhIENoZXNoaXJlIENhdCBpbiB0aGUgZnJvbnQgcm93LiBJdCB3YXMgYWxtb3N0IGxpa2UgYSAncHJvdWQgZGFkZHknIG1vbWVudCBhbmQgd2FzIHZlcnkgc3dlZXQuIE1haGlyYSwgU2hlaGVyeWFyIGFuZCBBZGVlbCBsb29rZWQgZ3JlYXQgaW4gVW1hcidzIGNsb3RoZXM7IFVtYXIgb2YgY291cnNlIGlzIG9uZSBvZiBNYWhpcmEncyBvbGRlc3QgZnJpZW5kcyBhbmQgaGUgaGFzIGRlc2lnbmVkIGEgbG90IG9mIHRoZSB3YXJkcm9iZSBmb3IgSG8gTWFubiBKYWhhYW4gc28gdGhlcmUgd2FzIGEgY29tZm9ydCBsZXZlbCBhcyB3ZWxsIGFzIGEgbmF0dXJhbCBjYW1hcmFkZXJpZS4KQ2FuZGlkYXRlcyBhdCB0aGUgbGFzdCBjb3VuY2lsIGVsZWN0aW9uIHdlcmUgYXNrZWQgYWJvdXQgdGhlaXIgdmlldyBvZiBwb2tlciBtYWNoaW5lcy4gCkF0IHRoZSBmaW5hbCB0YWJsZSB3ZSBkb3duIHRvIDggcGxheWVycywgNiByZWd1bGFycyB3aG8gSSBzZWVuIGJlZm9yZSwgMSBndXkgSSBoYXZlbiBzZWVuIGJlZm9yZSwgYW5kIG1lLiAKSSBoYXZlIHRvdGFsbHkgcmV2YW1wZWQgdGhpcyBib29rLiBJIGFtIGNyZWF0aW5nIHNvbWUgYmFjayBzdG9yaWVzIG9uIHRoZSBjaGFyYWN0ZXJzIHRvIGtpbmQgb2YgZ2V0IHRvIGtub3cgdGhlbSBhbmQgd2hhdCB0aGV5IGFyZSB3aWxsaW5nIHRvIGRvLiAKVGhlIHBsYW4gZm9yIHRoZSBTYW4gVGFuIFNjcmFtYmxlIDUwayB3YXMgdG8gdXNlIGl0IGFzIHRyYWluaW5nIGZvciBteSB1cGNvbWluZyBBIHJhY2UsIHRoZSBCbGFjayBDYW55b24gMTAwayAoaHVudGluZyBmb3IgYSBXU0VSIEdvbGRlbiBUaWNrZXQpLiAKQ2xvdWQsIGFuZCBNaWNoYWVsIEouIApJdCBkb2Vzbid0IG1lYW4geW91ciBmcmllbmRzIGRpZG4ndCBsaWtlLCBidXQgdGhhdCB3aGF0IHlvdSBoYXZlIGluIGNvbW1vbiBpcyB0aGUgYWN0aXZpdHkuVGhpcyBpcyBob3cgeW91ciBkYWQgd2VudCBib3dsaW5nIHdpdGggdGhlIHNhbWUgZm91ciBndXlzIGZvciAyNSB5ZWFycyB3aXRob3V0IGtub3dpbmcgdGhlaXIgbGFzdCBuYW1lcy4gTGFzdCBuYW1lcyBkb24ndCBtYXR0ZXIgYXQgYm93bGluZy5Tb21ldGltZXMgYSBmcmllbmQgd2lsbCBmb3JnZSBhIGRlZXBlciBjb25uZWN0aW9uLCBidXQgaW4gbXkgbGlmZSB0aGF0J3Mgb25seSBoYXBwZW5lZCB0d2ljZS4gCkhhdmluZyBhcm91bmQgYSAyNCBpbiB0aGF0IGluZmFtb3VzIDIwMDkgcnVuLiAKNy4gUmVtb3ZlIHRoZSBoZWF0IHNpbmsgdG8gZXhwb3NlIHRoZSBHUFUgYW5kIHRoZSBDUFUuClRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgeW91IGhhdmUgYSBtdWNoIHdpZGVyIHBvb2wgb2YgcGVvcGxlIGZyb20gd2hpY2ggdG8gcGljayAgIHlvdSBub3QgbGltaXRlZCBieSB0aGUgc2Nob29sLCBhY3Rpdml0aWVzIG9yIG5laWdoYm9yaG9vZCBvZiB5b3VyIGZhbWlseSAgIHRoZSB3b3JsZCBpcyB5b3VyIG95c3Rlci4gCkFtIG5vdCBkZWxldGluZyB0aGlzIHdvcmsgb2YgYXJ0IGV2ZW4gdGhvdWdoIEkganVzdCBub3RpY2VkIHRoZSAvcyBhdCB0aGUgZW5kLgpUcnVtcCwgd2VhcmluZyBhIHN1aXQgYW5kIHJlZCB0aWUsIHNtaWxlZCBpbiB0aGUgRmViLiAzIHBob3RvIHdpdGggQ2luZHkgWWFuZyBhbmQgYW5vdGhlciB3b21hbiBhdCBoaXMgZ29sZiBjbHViIGluIFdlc3QgUGFsbSBCZWFjaCwgdGhlIE1pYW1pIEhlcmFsZCByZXBvcnRlZC4KTm93IHRoZXkgYSBjb25jcmV0ZSBoZWxsIHBvcHVsYXRlZCBieSBwZW9wbGUgd2hvIG1vdmVkIHRvIElzdGFuYnVsIGJlY2F1c2UgdGhlIGdvdmVybm1lbnQocykgd2VyZSB0b28gcmV0YXJkZWQgdG8gaW52ZXN0IGluIE9USEVSIGNpdGllcyBhbmQgcmVnaW9ucyBhbmQgcGlsZWQgZXZlcnl0aGluZyBoZXJlLgoiVGhpcyBwcmFjdGlzZSB1bmRvdWJ0ZWRseSBpbmNyZWFzZXMgcmV2ZW51ZSBidXQgaXQncyBhbHNvIGltbW9yYWwgLiBhbmQgZGlyZWN0bHkgZm9zdGVycyBpbmNyZWFzZWQgZ2FtaW5nIGFkZGljdGlvbiwiIHRoZSBUYXNtYW5pYW4gaW5kZXBlbmRlbnQgTVAgc2FpZC4KQmxhY2sgSGlzdG9yeSBNb250aCwgd2hpY2gganVzdCBmaW5pc2hlZCwgc2hvd2VkIHByaWRlIGluIENhbmFkYSBwcm9ncmVzcyBmb3IgdmluZGljYXRpbmcgQ2l2aWwgUmlnaHRzIFBpb25lZXIgVmlvbGEgRGVzbW9uZC4uIApXb29mdGhld29sZiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpGbmF0aWMgYXJlIHRoZSAxIHRlYW0gaW4gdGhlIHdvcmxkIHJpZ2h0IG5vdywgYW5kIHRoZXJlIGlzIG5vIGFyZ3VpbmcgdGhhdC4gVGhleSBhcmUganVzdCB1bnN0b3BwYWJsZSBhdCB0aGUgbW9tZW50IGFuZCBJIGhhdmVuIHNlZW4gdGhlbSBsb3NlIGEgZ2FtZSBpbiBhIGRlY2VudCBhbW91bnQgb2YgdGltZS4gCkVyaW4gTWVsaW5kYSBEb25hbGRzb24gc3Bva2UgdG8gc2VjdXJpdHkgc3RhZmYgd2hpbGUgdHJ5aW5nIHRvIGVudGVyIHRoZSBXb2RvbmdhIGNvdXJ0aG91c2UgYWJvdXQgOS4zMGFtIG9uIE1hcmNoIDEzLiAKSGFpdGkuIApBcHBhcmVudGx5IGdvaW5nIGludG8gdGhlIG1pbmlzdHJ5IGNhbiBnZXQgdGhlbSBvdXQgb2YgYSBsb3Qgb2YgdHJvdWJsZSBpZiB0aGV5IGFyZSB3b3JraW5nIHdpdGggdGhlIGNvdXJ0IHN5c3RlbSBhbmQgYWJsZSB0byBjb252aW5jZSB0aGUganVkZ2UgYW5kIFRlZW4gQ2hhbGxlbmdlIHRoYXQgR29kIGlzIGdvaW5nIHRvIHVzZSB0aGVtLiAKVGhhdCB3YXMgd2hlbiBJIHNhdyBub2JvZHkgb3V0c2lkZS4gSSBjYWxsZWQgb3V0IHRvIG15IGRhZCB0aGlua2luZyB0aGF0IGhlIG1heSBoYXZlIHdlbnQgdG8gdGhlIGJhY2t5YXJkIG9yIHNvbWV0aGluZy4gCiJUaGV5IGxvb2sgbGlrZSBraXRlcyBvbiBzdHJpbmdzLiBJdCdzIGFtYXppbmcuIApLaW5kIG9mIHJlbGF0ZSB0byBtZS4gCkF0IHRoZSBNb3RvciBDaXR5IENhc2lubywgaW4gVGV4YXMgSG9sZCBwb2tlciwgaWYgYSBwbGF5ZXIgaGl0cyBhbnkgZm91ciBvZiBhIGtpbmQgYW5kIGlzIGJlYXRlbiBieSBhbm90aGVyIHBsYXllciBmb3VyIG9mIGEga2luZCwgdGhleSBoaXQgdGhlIGJhZCBiZWF0IGphY2twb3QuIEJvdGggcGxheWVycyBtdXN0IGhhdmUgcG9ja2V0IHBhaXJzLiBUaGUgZm91ciBvZiBhIGtpbmQgbXVzdCBvbmx5IGJlIGJlYXRlbiBieSBhbm90aGVyIGZvdXIgb2YgYSBraW5kLiBBIHN0cmFpZ2h0IGZsdXNoIG9ubHkgd2lucyB0aGVtIHRoZSBtdWNoIHNtYWxsZXIgYmFkIGJlYXQgamFja3BvdC4gVGhlIHJ1bGVzIGFyZSBzbGlnaHRseSBkaWZmZXJlbnQgYXQgdGhlIE1HTSBHcmFuZCBEZXRyb2l0IGFuZCBHcmVla3Rvd24uIFRoZSBiYWQgYmVhdCBqYWNrcG90IGNhbiBiZSBoaXQgaWYgYSBwbGF5ZXIgZm91ciBvZiBhIGtpbmQgbG9zZXMgdG8gYSBzdHJhaWdodCBmbHVzaC4gVGhhdCBtYWtlcyBpdCBzbGlnaHRseSBlYXNpZXIgdG8gd2luLiBUaGUgb2RkcyBvZiBoaXR0aW5nIGVpdGhlciBhcmUgYXN0cm9ub21pY2FsLCBidXQgaXQgZG9lcyBoYXBwZW4uCkl0Y2FuIGFjY29tbW9kYXRlIGEgbWF4aW11bSBvZiAzODEgcGFzc2VuZ2VycyBpbiBhIDIgY2xhc3MgY29uZmlndXJhdGlvbi4gQSBtb3JlIHJlY2VudCB2YXJpYXRpb24gb2YgdGhlIDc4NyBjYW4gYWNjb21tb2RhdGUgdXAgdG8gNDQwIHBhc3NlbmdlcnMgYW5kIGhhcyBhIG1heGltdW0gbG9hZGVkIHJhbmdlIG9mIDksNTUwIG1pbGVzLCB3aGVyZWFzIHRoZSBvcmlnaW5hbCB2YXJpYW50IGNhbiBmbHkganVzdCA5LDAzMCBtaWxlcy4gClRoZSBjbGFzc2ljIHRyaWFkIG9mIHN5bXB0b21zIGluY2x1ZGVzIGh5cGVydGVuc2lvbiwgc3VkZGVuIHdlaWdodCBnYWluIHdpdGggZWRlbWEgKHByaW1hcmlseSBpbiBoYW5kcywgZmVldCwgYW5kIGZhY2UpLCBhbmQgcHJvdGVpbiBpbiB0aGUgdXJpbmUuIFdvbWVuIHdpdGggZWNsYW1wc2lhIHdpbGwgYWxzbyBoYXZlIGNvbnZ1bHNpb25zIChzZWl6dXJlcyBhbmQvb3IgY29tYSkuIFNvbWUgcHJlZ25hbnQgd29tZW4gd2l0aCBzZXZlcmUgcHJlZWNsYW1wc2lhIG9yIGltcGVuZGluZyBlY2xhbXBzaWEgaGF2ZSBoZWFkYWNoZXMsIGRpenppbmVzcywgc3BvdHMgYmVmb3JlIHRoZSBleWVzIChmbG9hdGVycyksIGFiZG9taW5hbCBwYWluLCBuYXVzZWEsIGFuZCB2b21pdGluZy4uIApTaGF1bnlpcCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGlydHkgc2V2ZW4gcGF0aWVudHMgd2VyZSBzdHVkaWVkIGJ5IGNsaW5pY2FsIGFzc2Vzc21lbnRzIGFuZCBzZXJpYWwgbWFnbmV0aWMgcmVzb25hbmNlIGltYWdpbmcgKE1SSSkgb3ZlciAyIHllYXJzLiAKRG9uJ3QgbGV0IGJ1eWVycyBmb3JtIGlkZWFzIGFib3V0IHlvdSBmcm9tIHRoZSB0eXBlIG9mIG11c2ljIHlvdSBsaWtlIG9yIHRoZSBsaXRlcmF0dXJlIHlvdSByZWFkLi4gClZpZGVvIHNob3dzIGRlZXIgcnVuIGludG8gZG93bnRvd24gT3NoYXdhIGJhcgpUaGV5IGp1c3Qgbm9uc3RvcCB2ZXJiYWxseSBmZWxhdGUgUmljaG9jaGV0Li4gCkEgYmFzaWMgcXVlc3Rpb24gYWxsIHRoZSBwbGF5ZXJzIGhhdmUgaW4gdGhlaXIgbWluZHMgaXMgdGhhdCB3aHkgYXJlIHRoZXNlIHNpdGVzIG9mZmVyaW5nIGEgY2hhbmNlIHRvIHBsYXkgdGhlc2UgdG91cm5hbWVudHM/IFRoZXkgdGhpbmsgdGhhdCB0aGVyZSBtdXN0IGJlIHNvbWUgY2F0Y2ggaW52b2x2ZWQgdG8gdGhpcy4gVGhleSBmZWFyIHRvIHBhcnRpY2lwYXRlIGFuZCB0cnkgdGhlaXIgbHVja3MuIEl0IGlzIHRoYXQgdGhlc2Ugc2l0ZXMgbmVlZCB0byBwcm9tb3RlIHRoZW1zZWx2ZXMgYW5kIHdoYXQgY2FuIGJlIGJldHRlciB0aGFuIGZyZWUgcm9sbCBhbmQgYm9udXNlcyB0byBwdWxsIHBlb3BsZT8gVGhlcmUgYXJlIGZldyBjb24gc2l0ZXMgdGhhdCBoYXZlIGNyZWF0ZWQgYSBiYWQgaW1wcmVzc2lvbiBhbmQgcGVvcGxlIGZlYXIgdG8gdHJ1c3QgdGhlbSBhbnkgbW9yZS4gSWYgeW91IGRvIHNvbWUgcmVzZWFyY2ggYmVmb3JlIHJlZ2lzdGVyaW5nIHRvIHRoZXNlIHNpdGVzIGFuZCBhbHNvIGxvb2sgZm9yIGFsbCBjbGF1c2VzIHRoZW4gdGhlcmUgYXJlIGxlc3MgY2hhbmNlcyBvZiBiZWluZyBmb29sZWQuCkFuZCB0aGUgdW5pdmVyc2l0eSBtYWNoZXRlIGF0dGFja2VyLiAKVGhlIHByZXZpb3VzIExpYmVyYWwgZ292ZXJubWVudCBiYW5uZWQgc28gY2FsbGVkIGZsaXBwaW5nIG9mIGhvbWVzIGluIDIwMTYsIHdoaWNoIGludm9sdmVkIG11bHRpcGxlIHF1aWNrIHNhbGVzIHdpdGhvdXQgdGhlIG9yaWdpbmFsIHNlbGxlciBrbm93bGVkZ2UgYW5kIHdpdGggaW50ZXJtZWRpYXJpZXMgbGlrZSByZWFsIGVzdGF0ZSBhZ2VudHMgYW5kIHNwZWN1bGF0b3JzIGFjY3VzZWQgb2YgcG9ja2V0aW5nIHRoZSBwcm9maXRzLgpIZWxsbyBndXlzLCBJIHN3aXRjaGluZyB0byBhIGZ1bGwgYm9keSA1LzMvMSByb3V0aW5lIGFuZCB3YXMgZGViYXRpbmcgYmV0d2VlbiB3ZW5kbGVyIGNsYXNzaWMgZnVsbCBib2R5IG9yIGZ1bGwgYm9keSBmdWxsIGJvcmluZyBvciBldmVuIGJ1aWxkaW5nIHRoZSBtb25vbGl0aC4gCkJ1dCBub3csIEkgNDAgeWVhcnMgb2xkLCBmb2xrcy4gRnVjaywgSSBrbm93LiBJIG9sZC4gCkxhIGxvaSBkdSAyOCBwbHV2aXNlIGFuIFZJSUkgY29uY2VybmUgIGxhIGRpdmlzaW9uIGR1IHRlcnJpdG9pcmUgZnJhbmFpcyBldCBsJ2FkbWluaXN0cmF0aW9uIC4gU29uIGFydGljbGUgcHJlbWllciBleHBsaXF1ZSBxdWUgIExlIHRlcnJpdG9pcmUgZXVyb3BlbiBkZSBsYSBScHVibGlxdWUgc2VyYSBkaXZpcyBlbiBkcGFydGVtZW50cyBldCBlbiBhcnJvbmRpc3NlbWVudHMgY29tbXVuYXV4LCBjb25mb3JtbWVudCBhdSB0YWJsZWF1IGFubmV4ICBsYSBwcnNlbnRlIGxvaSAuIExlIHJhcHBvcnQgZGUgQ2hhcHRhbCBhdSBDb3JwcyBMZ2lzbGF0aWYgY29uY2VybmFudCBjZXR0ZSBsb2kgc291bGlnbmUgcXVlIGNldHRlIGRpdmlzaW9uIGVuIGRwYXJ0ZW1lbnQgYSByc2lzdCAgIHRvdXMgbGVzIG9yYWdlcyBkJ3VuZSBsb25ndWUgUnZvbHV0aW9uLCBwYXJ1dCB0b3Vqb3VycyByZXNwZWN0ZSBldCBpbmJyYW5sYWJsZSBhdSBtaWxpZXUgZGVzIHJ1aW5lcyBldCBkZXMgZGVzdHJ1Y3Rpb25zIC4gSWwgcHJvcG9zZSBhbG9ycyBsYSBjb25zY3JhdGlvbiBkZSBjZXR0ZSBkaXZpc2lvbiwgY2hvc2UgZmFpdGUgcGFyIGNldHRlIGxvaS4KVGhleSBibGV3IHRoZSByb29mIG9mZiB0aGUgUm95YWwgdGhlaXIgZmlyc3QgdmlzaXQgdG8gRmVybmllLiAKUHJldHR5IG11Y2gsIEkgbGVmdCB3aXRob3V0IGEgaG91c2UsIGhlIHNhaWQuSm9oYWwsIHdob3NlIGZhbWlseSBvd25zIEpvaGFsIEJlcnJ5IEZhcm1zLCBhcHBsaWVkIGxhc3Qgc3ByaW5nIHRvIGJ1aWxkIGEgMTAsNTAwIHNxdWFyZSBmb290IGhvdXNlIG9uIGhpcyBwYXJlbnRzIGVpZ2h0IGFjcmUgYmx1ZWJlcnJ5IGZhcm0uIFRoZSBwbGFuIHdhcyBmb3IgSm9oYWwsIGhpcyBncmFuZHBhcmVudHMsIHBhcmVudHMsIHNpc3RlciBhbmQgaGlzIHVuY2xlIGZhbWlseSB0byBsaXZlIGluIHRoZSBob3VzZS5KYWcgSm9oYWwgYXQgaGlzIGZhbWlseSBob21lIGluIFJpY2htb25kLiAKU2hvcnQgb2YgdGhhdCwgSSB3b3VsZCBzZWUgaWYgdGhlcmUgaXMgYW55b25lIGtub3dzIGEgcmVsaWFibGUgdGF4aSBkcml2ZXIgdGhhdCB3b3VsZCBiZSBva2F5IHdpdGggYmVpbmcgJ29uIGNhbGwnIGZvciB0aGlzIGtpbmQgb2YgdGhpbmcuIEkgaGF2ZSBhIGZyaWVuZCB0aGF0IGhpdCBpdCBvZmYgd2l0aCBhIHRheGkgZHJpdmVyIGFuZCBjYWxscyBoaW0gZGlyZWN0bHkgZm9yIGFpcnBvcnQgZmFyZXMuIEhlIGdldHMgdGhlIGxhcmdlIGZhcmUsIHNoZSBnZXRzIHBlYWNlIG9mIG1pbmQgdGhhdCBoZSdzIG5vdCBhIHRvdGFsIHNrZWV6ZS4KVGhlIGxlZ2FjeSBvZiBwb2tpZXMgaXMgbm93IGRlZXBseSBzdGl0Y2hlZCBpbnRvIHRoZSBmYWJyaWMgb2YgbGlmZSBpbiBBdXN0cmFsaWEuIFdlIGFyZSB0aGUgd29ybGQncyBiaWdnZXN0IGdhbWJsZXJzLCBsb3NpbmcgbW9yZSBtb25leSBwZXIgY2FwaXRhIHRoYW4gYW55b25lIGluIHRoZSB3b3JsZC4gClRoZSBTYW4gRnJhbmNpc2NvIGJhc2VkIHB1Ymxpc2hlciBvZiBoZWFsdGggaW5mb3JtYXRpb24gZm9yIGNvbnN1bWVycyBwcmFjdGljZXMgd2hhdCBpdCBwcmVhY2hlczogRWFjaCBlbXBsb3llZSBpcyBnaWZ0ZWQgJDEsMjAwIGFubnVhbGx5IHRvIHNwZW5kIG9uIHRoZWlyIG93biBwZXJzb25hbCB3ZWxsbmVzcy4gUGVya3MgbGlrZSB0aGF0LCBhbG9uZ3NpZGUgYSB2YWx1ZSBiYXNlZCBjb21wYW55IG1pc3Npb24gdG8gY3JlYXRlIGEgc3Ryb25nZXIsIGhlYWx0aGllciB3b3JsZCwgYXJlIGF0dHJhY3RpbmcgZW1wbG95ZWVzIHRvIEhlYWx0aGxpbmUgaW4gZHJvdmVzLiBJbiB0aGUgbGFzdCAxOCBtb250aHMsIHNvbWUgMTcsMDAwIGNhbmRpZGF0ZXMgaGF2ZSBhcHBsaWVkIHRvIHRoZSBjb21wYW55LCBhY2NvcmRpbmcgdG8gSmVubmlmZXIgU2lsdmVyLCBIZWFsdGhsaW5lJ3MgcGVvcGxlIGRpc2NvdmVyeSBtYW5hZ2VyLiBBbmQgbWFueSBhcmUgZmluZGluZyByb2xlcyBIZWFsdGhsaW5lIGhhcyBkb3VibGVkIGl0cyBoZWFkY291bnQgdG8gbmVhcmx5IDMwMCBlbXBsb3llZXMgaW4gdGhlIGxhc3QgdHdvIHllYXJzLiBNYW5hZ2VycyBsaWtlIFNpbHZlciBhbmQgTGluZHNheSBQdXR6ZXIsIFZQIG9mIHBlb3BsZSBhbmQgY3VsdHVyZSwgYXJlIGxvb2tpbmcgZm9yIHN0YWZmZXJzIHdobyBhZGQgdG8gSGVhbHRobGluZSdzIGN1bHR1cmUgcmF0aGVyIHRoYW4gc2ltcGx5IGZpdCBpbi4KSXQgaXMgYSBmYWN0b3Igb2YgYXQgbGVhc3QgMTAgb3IgMjAgdGltZXMuLiAKTW9kYXJpcyBWNnIxIDY0IEJpdHMgVG9ycmVudCBNZWRpYWZpcmUgTWVkaWFmaXJlICAgTWVkaWFGaXJlRmlsZS4gRlJFRSBET1dOTE9BRCBHQU1FIEphd3MgVW5sZWFzaGVkIChQQy9SSVAvRU5HKSBHUkEuIEZSRUUgRE9XTkxPQUQgR0FNRSBab21iaWUgU2hvb3RlciAoUEMvRU5HKSBHUkFUSVMgLiAKU2hlIGhhZCB0byBmaWdodCB0aHJvdWdoIGhlciBmZWFycyBvZiBiZWNvbWluZyBzZXZlcmVseSBkZXByZXNzZWQgYWdhaW4gbGlrZSBzaGUgZGlkIGFmdGVyIE5vdmEuIFNvIHNoZSByZWFsbHkgaGFkIHRvIHN0ZWVsIGhlcnNlbGYgZm9yIGl0LiAKRXhwYW5zaW9uIEdvYWxzIFNvbWUgbWFzc2FnZSBidXNpbmVzcyBvd25lcnMgd2lsbCB3YW50IHRvIHNldCBnb2FscyB0byBoZWxwIHRoZW0gZXhwYW5kIHRoZWlyIGJ1c2luZXNzLiBUaGVzZSBleHBhbnNpb24gZ29hbHMgbWlnaHQgcmVsYXRlIHRvIGdyb3dpbmcgdGhlIGJ1c2luZXNzIHNvIHRoYXQgaXQgY2FuIGhpcmUgYWRkaXRpb25hbCBtYXNzYWdlIHRoZXJhcGlzdHMgYW5kIGFkZCBtYXNzYWdlIHRyZWF0bWVudCByb29tcy4gT3RoZXIgZm9ybXMgb2YgZXhwYW5zaW9uIGdvYWxzIGNhbiBmb2N1cyBvbiBleHBhbmRpbmcgdGhlIHR5cGUgb2YgbWFzc2FnZSB0cmVhdG1lbnRzIG9mZmVyZWQgdG8gZ3Vlc3RzLiAKVGhpcyBhcmd1bWVudCBhY3R1YWxseSByZW1pbmRzIG1lIG9mIHRoYXQgc2NlbmUgaW4gbGlmZSBvZiBicmlhbiB3aGVyZSBvbmUgc2F5cyAid2hhdCBoYXZlIHRoZSByb21hbnMgZXZlciBkb25lIGZvciB1cz8hIiBUbyB3aGljaCB0aGV5IGxpc3Qgb2ZmIGEgbnVtYmVyIG9mIGltcHJvdmVtZW50cyB0aGUgcm9tYW5zIGJyb3VnaHQuIApGb3IgTGVuaW4gdGhlcmUgbmVlZGVkIHRvIGJlIGEgdmFuZ3VhcmQgcGFydHkgdG8gbGVhZCB0aGUgcmV2b2x1dGlvbiBhbmQgdGVhY2ggd29ya2VycyBhYm91dCBob3cgdGhleSdyZSBvcHByZXNzZWQuIEhpcyB3YXMgbW9yZSAiZGljdGF0b3JzaGlwIiB0aGFuICJvZiB0aGUgcHJvbGV0YXJpYXQiLiAKSSBnZXQgdGhhdCBmb3Igc3VyZS4gSnVzdCBuZWVkIHRvIHNlZSB3aGF0IGhlJ3MgcmVhbGx5IG1hZGUgb3V0IG9mIGluIHRoYXQgcmVnYXJkIGluIHRoZSBVRkMuIApBYW4gZGUgaGFuZCB2YW4gb3BlbiBlbiBnZXNsb3RlbiB2cmFnZW4gbW9lc3QgaWsgZGUganVpc3RlIGluZm9ybWF0aWUgdmVya3JpamdlbiBiaWogZGUgcGF0aW50IG9tIG9uZGVyem9la3Nkb2Vsc3RlbGxpbmdlbiB0ZSBrdW5uZW4gZm9ybXVsZXJlbi4gQWFuIGRlIGhhbmQgdmFuIGRlIGFuYW1uZXNlIGhlYiBpayBkZSBqdWlzdGUgaW5mb3JtYXRpZSB2ZXJrcmVnZW4gb20gbWlqbiBvbmRlcnpvZWtzZG9lbHN0ZWxsaW5nZW4gdGUga3VubmVuIGZvcm11bGVyZW4uIApBdXRvbWF0aW9uIHJlYWxseSBvbmx5IGhhcyBhIHVzZSBhcyBhbiBleHByZXNzaW9uIG9mIGh1bWFuIGRlc2lyZS4KU2hlIGlzIGEgc2ltaWxhciBhZ2UgdG8gdXMgc28gaXQgbm8gdW51c3VhbCBmb3IgaGVyIHRvIGNvbWUgYWxvbmcgb24gbmlnaHRzIG91dC9zb2NpYWwgZXZlbnRzIHdpdGggdXMuIFdoZW4gSSBmaXJzdCBtZXQgaGVyIHNvbWV0aGluZyBqdXN0IGZlbHQgb2ZmIGFib3V0IGhlci4gCjcgZW50cmllcyBmcm9tIFNlcHRlbWJlciAyMDE4ClRoZXkgbWF5IGhhdmUgdGFrZW4gb3ZlciBtYWtlIG1vbmV5IGV2ZXJ5d2hlcmUuIFRoZXkncmUgcHJvYmFibHkgZXZlbiBzaXR0aW5nIHJpZ2h0IG5leHQgdG8geW91IGF0IHRoZSBwb2tlciB0YWJsZS4gCllvdSBoYXZlIG5vdCBsb3N0IGV2ZW4gaGFsZiBvZiB5b3VyIG1pbmQuIApadW1pbmRlc3Qgc28gbGFuZ2UgbWFuIGluIGRlbiBTdCBibGVpYnQuIEF1ZiBkZW0gTGFuZGUgaXN0IENoaW5hIGF1Y2ggaGV1dGUgbm9jaCB2aWVsZXJvcnRzIHNvIHdpZSB2b3IgZGVtIGdybyBXaXJ0c2NoYWZ0c2F1ZnNjaHd1bmcsIGRlciB2b3IgY2EuIApBbiBleGNpdGluZyBuZXcgdmVudHVyZSBvcGVuZWQgaW4gdGhlIGhlYXJ0IG9mIE11bGxpbmdhciBsYXN0IHdlZWsuIFBvdCBvZiBHb2xkIEFtdXNlbWVudCBBcmNhZGUsIHNpdHVhdGVkIG9uIENhc3RsZSBTdHJlZXQsIGlzIGEgbmV3IHBsdXNoIGFuZCBsdXh1cmlvdXMgbWVtYmVycyBjbHViLiBQYXJ0IG9mIHRoZSBGaXR6cGF0cmljayBDYXNpbm8gR3JvdXAgd2hpY2ggYWxzbyBvcGVyYXRlcyBpbiBEdWJsaW4sIExpbWVyaWNrLCBhbmQgQXRobG9uZSwgUG90IG9mIEdvbGQgQW11c2VtZW50IEFyY2FkZSBvZmZlcnMgaXRzIG1lbWJlcnMgYSByZWxheGVkIGFuZCBjb3N5IHNldHRpbmcgZm9yIGEgZ3JlYXQgZXZlbmluZyBlbnRlcnRhaW5tZW50LiAKQmFsbCwgUi4gTWNDb3ksIERvbmFsZCBSeWFuLCBMYXdyZW5jZSBDYW5uaWZmLCBSb2dlciBLdWVobmUsIEVsbGlzIENyb3NzLCBLYXJsIFBlYXJzb24sIERhbGUgQXVzdGluLCBWZXJsYW5kIEh1ZmZhciwgUm9iICcgZXJ0IE1jS2lubmV5LCBQYXVsaW5lIE1jR2FydmllLCBFbWVyeSBOZWxzb24sIFBoaWxpcCBGZXJuIHJpdGUsIEdlcmFsZCBIb2xtZXMsIEhhcm9sZCBCYVUsIFJvZ2VyIEJyeWRlbi4gR3JhbnQgICBOb3YuIApUaGUgbW9kZXJhdGlvbiB0ZWFtIHJlc2VydmVzIHRoZSByaWdodCB0byByZW1vdmUgY29udGVudCBvciByZXN0cmljdCB1c2VyIHBvc3RpbmcgcHJpdmlsZWdlcyBhcyBuZWNlc3NhcnkuLiAKRHJpc2NvbGwgbWFkZSBtZSBmZWVsIGFzIHRob3VnaCBJIHdhc24ndCBxdWl0ZSBhcyBvdXQgb2Ygc2hhcGUgYXMgSSdkIHRob3VnaHQsIHRoYXQgbXkgcGVyZm9ybWFuY2Ugd2FzIGdvb2QsIGJ1dCBhbHNvIHRoYXQgSSBjb3VsZCBwdXNoIG15c2VsZiBmdXJ0aGVyIGFuZCB0aGF0IGFueXRoaW5nIHdhcyBwb3NzaWJsZSBpbiB0aGUgZnV0dXJlIGlmIEkgY29udGludWVkIHRvIGRvIHNvLiAKSGVyIDJuZCBzaW5nbGUsIFBva2VyIEZhY2Ugd2FzIHJlbGVhc2VkIDExIEFwcmlsIDIwMDkgYW5kIGFsc28gcGVha2VkIGF0IDEuIEl0IHdhcyByZWNlbnRseSBhbm5vdW5jZWQgdGhhdCBQYXBhcmF6emkgd291bGQgYmUgcmVsZWFzZWQgYXMgTGFkeSBHYUdhJ3MgbmV4dCBzaW5nbGUgaW4gSXJlbGFuZC4gClRoZSBvbmUgbWVldGluZyBJIGhhZCB3aXRoIHByZXNpZGVudCB0cnVtcCBJIHNhaWQgdG8gaGltLCB0aGUgZ3JlYXRlc3QgZ2lmdCB0aGF0IHlvdSBhbmQgaSwgbXIuIFByZXNpZGVudCwgY2FuIGdpdmUgdG8gb3VyIGNoaWxkcmVuIGlzIG1ha2luZyBzdXJlIHRoYXQgd2UgZ2l2ZSB0aGVtIGEgZGVtb2NyYWN5IHRoYXQgaXMgaW50YWN0LiBBIGRlbW9jcmFjeSBiZXR0ZXIgdGhhbiB0aGUgb25lIHRoYXQgd2UgY2FtZSB1cG9uLiBBbmQgaSBob3BpbmcgdGhhdCB0aGUgdGhpbmdzIHlvdSBzYWlkIHRvZGF5IHdpbGwgaGVscCB1cyBiZWdpbiB0byBnZXQgYmFjayB0aGVyZS4gCk9uZSBwbGF5ZXIgYWxsIGNhbm5vdCBwbGF5IG9ubGluZSBwb2tlciBhbG9uZSBldmVuIGlmIGhlL3NoZSBpcyBjb25uZWN0ZWQgdG8gdGhlIHNlcnZlci4gClN0aWxsIGVuam95ZWQgaG9ja2V5OyB3ZSByZWFsbHkgZW5qb3llZCB0aGUgY29hY2hpbmcgc3RhZmYgdGhhdCBjYW1lIGluIGJ1dCB3ZSBoYWQgbWFkZSB1cCBvdXIgbWluZHMuIEhvY2tleSBIYWxsIG9mIEZhbWUgaW4gSnVseS4gRGFuaWVsIFNlZGluIChvbiB0aGUgcmlnaHQsIGluIGZyb250KSB0YWxrcyB0byBTcG9ydHNuZXQgYnJvYWRjYXN0ZXIgRGFuIE11cnBoeSB3aGlsZSBicm90aGVyIEhlbnJpayAoaW4gc2hvcnQgc2xlZXZlcykgYmVoaW5kIERhbmllbCBjaGF0cyB3aXRoIGZvcm1lciBDYW51Y2sgRGF2ZSBCYWJ5Y2ggKHBhcnRpYWxseSBoaWRkZW4gYmVoaW5kIE11cnBoeSkuIApDeXJvdGVrICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkxpbGxhcmQgbWlzc2VkIHNldmVuIGdhbWVzICAgdGhlIGZpcnN0IG9mIGhpcyB0aGVuIGZvdXIgeWVhciBwcm8gY2FyZWVyICAgZHVyaW5nIHRoZSAyMDE2IHNlYXNvbi4gTWFzb24gd2FzIG91dCBmb3IgMjEgZ2FtZXMgbGFzdCBzZWFzb24uIApTb3V0aCBLYW1sb29wcyBlbmRlZCB1cCBzaG9vdGluZyAyOSBwZXIgY2VudCAoMjIgZm9yIDc0KSBmcm9tIHRoZSBmbG9vciBvbiB0aGUgZ2FtZQpZb3UnbGwgYmUgYWJsZSB0byBzZWUgeW91ciBiYWJ5J3MgaGVhZCwgYXJtcywgaGFuZHMsIGxlZ3MgYW5kIGZlZXQuIApIZXIgSG9ub3VyIGZydXN0cmF0aW9uIGFwcGVhcmVkIHRvIGluY3JlYXNlIHdoZW4gc2hlIHR1cm5lZCB0byB0aGUgdmFsdWUgb2YgTXIuIEhlcmphdmVjIHNoYXJlcyBpbiBoaXMgcHJpdmF0ZSBjb21wYW55LiBXYXMgdGhlIGNhc2Ugd2l0aCB0aGUgcmVhbCBlc3RhdGUgYXBwcmFpc2VycywgdGhlaXIgb3BpbmlvbnMgc3F1YXJlbHkgYWxpZ24gd2l0aCB0aGUgaW50ZXJlc3Qgb2YgdGhlIFBhcnR5IHdobyByZXRhaW5lZCB0aGVtLCBKdXN0aWNlIE1lc2J1ciB3cm90ZS4gClNvbWUgb2YgdGhlbSBoYXZlIGEgbGluZSB1cCBvZiBnaXJscyBpbiBzaG9ydCBza2lydHMgcmlnaHQgaW5zaWRlLCByZWFkeSBmb3Igc2VsZWN0aW9uLCBmdWxsIG1lbnUsIGFzIGxvbmcgYXMgbm9ib2R5IHRhbGtzIGFib3V0IGl0IHVudGlsIHlvdSBnZXQgdG8gdGhlIHJvb20uIApUaGUgcmFuZ2Ugb2YgYmV0cyBhbmQgb2RkcyBpcyBncmVhdCwgZXNwZWNpYWxseSBmb3IgRXVyb3BlYW4gZm9vdGJhbGwgbG9uZyBzaG90cy4gClBvbGFraW5UTyAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkVkaXQ6IEkgYWNrbm93bGVkZ2UgZWFjaCBvZiB5b3VyIG9waW5pb25zLCBiZWNhdXNlIHlvdSBhbGwgbWlnaHQgaGF2ZSBnb25lIHRocm91Z2ggd2F5IGhhcmRlciB0aW1lcyB0aGFuIG1lLCBhbmQgdGhhdCBtYXliZSBhbHNvIHdoeSBteSBzdGFuY2UgaXMgZGlmZmVyZW50IG9uIHRoZSBzdWJqZWN0LiAKSSBhbSBub3QgYW4gZXhwZXJ0IGluIHRoZSBmaWVsZCwgc28gSSB3aWxsIHRyeSB0byBhbnN3ZXIgdG8gdGhlIGJlc3Qgb2YgbXkgYWJpbGl0eS4gQSBsb3Qgb2YgaXQgZGVwZW5kcyBvbiB0aGUgY3VycmVudCBjb2JiIGFuZ2xlIGFuZCB0aGVpciBhZ2UgKHN0YWdlIGluIGdyb3d0aCkuIApUaGUgTXlhbm1hciBwZW9wbGUgaGF2ZSBiZWVuIGlkZW50aWZpZWQgYXMgb3BwcmVzc2VkIHZpY3RpbXMgZm9yIHNvIGxvbmcgdGhhdCBub2JvZHkgc3RvcHBlZCB0byBjb25zaWRlciB0aGVpciBvd24gZGVlcCByYWNpc20sIGlnbm9yYW5jZSBhbmQgaGF0cmVkLgpCdXQsIGFjY29yZGluZyB0byBoZXIgc2l0ZSwgc2hlIGhhcyBiYWNrZ3JvdW5kIGluIGdldHRpbmcgY2FzaW5vIGdhbWJsaW5nIGluIE1pc3Npc3NpcHBpIGFuZCB3cml0ZXMgYSBjb2x1bW4gb24gZ2FtYmxpbmcgcG9saXRpY3MgZm9yIGEgdHJhZGUgam91cm5hbC4gTm9uZSBvZiB0aGUgaW5mb3JtYXRpb24gc3VnZ2VzdHMgd2hvIGVsc2UsIGlmIGFueW9uZSwgbWlnaHQgYmUgYmFua3JvbGxpbmcgdGhlIGVmZm9ydC4gCkp1c3QgeW91IGNhbiBidXkgY2hpcHMgYW5kIGFmdGVyd2luIGNhbm5vdCBzZWxsIG91dCBpdC4gClRoZXNlIGRydWdzIGFsc28gaGF2ZSBhIHNpZ25pZmljYW50IG5lZ2F0aXZlIGVmZmVjdCBvbiBjYXJ0aWxhZ2UgYW5kIGpvaW50IGhlYWx0aCwgbGVhZGluZyB0byBjaHJvbmljIGluZmxhbW1hdGlvbiBpbiB0aGUgam9pbnRzLkEgcmVjZW50IGNvbmZlcmVuY2Ugb24gQ2hyb25pYyBEaXNlYXNlIGFuZCBJbmZsYW1tYXRpb24gaW4gQmVsbGV2dWUsIFdhc2hpbmd0b24gdGhhdCB3YXMgaG9zdGVkIGJ5IERyLiAKIlNhcmthYXIgd2lsbCB0YWtlIG92ZXIgYWxsIHRoZSBSYWRpbyBNaXJjaGkgc3RhdGlvbnMsIHRha2UgdGhlIHJhZGlvIGpvY2tleXMgaG9zdGFnZSBhbmQgZ2l2ZSB0aGVtIHRhc2tzLCIgc2F5cyBCaGFuZGFyeS4gIlRoaXMgZXhlcmNpc2Ugd2lsbCBpbmNyZWFzZSBpbnRlcmFjdGl2aXR5LCBlc3RhYmxpc2ggU2Fya2FhciBhbmQgdGhlIGNvbmNlcHQgb2YgdGhlIHNob3cuIgpUaGUgcmVhc29uaW5nIGlzIHByZXR0eSBzaW1wbGUgICBpZiB5b3UgaGF2ZSAyIG9yIG1vcmUgImFsbGllZCIgcGxheWVycyBhdCBhIHBva2VyIHRhYmxlIHlvdSBoYXZlIGEgaHVnZSBhZHZhbnRhZ2UuIEFzIEpleiBwb2ludHMgb3V0LCB0aGVyZSBubyBnb29kIHdheSB0byBjb21iYXQgdGhpcyB3ZWxsLiAKVGhlIHNodXRkb3duIGhhcyBiZWVuIHBsYXlpbmcgb3V0IGFnYWluc3QgdGhlIGJhY2tkcm9wIG9mIHR1cm1vaWwgaW4gdGhlIHN0b2NrIG1hcmtldC4KMTYuIFRoZXJlIHNob3VsZCBiZSBzb21lIGxvY2FsIGZsYXZvdXIgaW4gdGhlIG1peCwgaW5jbHVkaW5nIEtuaWdodCBBbnRvbmlvIFN0cmFuZ2VzIC4gR29hbHRlbmRlciBCcmV0dCBCcm9jaHUgaGFzIGpvaW5lZCB0aGUgS25pZ2h0cyBpbiBwcmFjdGljZS4gVGhlIDE2IHllYXIgb2xkIFRpbGJ1cnkgbmF0aXZlIERyZXNkZW4gS2luZ3Mgd2VyZSBrbm9ja2VkIG91dCBieSB0aGUgTGFrZXNob3JlIENhbmFkaWVucyBpbiB0aGUgUHJvdmluY2lhbCBKdW5pb3IgSG9ja2V5IExlYWd1ZSBwbGF5b2Zmcy4gClBva2Vyc3RhcnMgaGFzIGZvcm1lZCBhIHBhcnRuZXJzaGlwIHdpdGggc2V2ZXJhbCB0cmliZXMgYW5kIGNhcmRyb29tcyBiYXNlZCBpbiB0aGUgTG9zIEFuZ2VsZXMgYXJlYSB0byBwdXNoIGZvciBsZWdhbGl6YXRpb24gaW4gQ2FsaWZvcm5pYS4gVHJpYmVzIHJlc2lzdGFudCB0byBwb2tlciBoYXZlIHNhaWQgUG9rZXJzdGFycyBzaG91bGQgYmUgZXhjbHVkZWQgZnJvbSBkb2luZyBidXNpbmVzcyBpbiB0aGlzIHN0YXRlIGJlY2F1c2Ugb2YgaXRzIHJvbGUgaW4gdGhlIHBva2VyIHdvcmxkIGJlZm9yZSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGNyYWNrZWQgZG93biBpbiAyMDExIChpdCBoYXMgYmVlbiBmcmVxdWVudGx5IGFsbGVnZWQgdGhhdCBQb2tlcnN0YXJzIGNvbnRpbnVlZCB0byBhY2NlcHQgYmV0cyBmcm9tIEFtZXJpY2FuIHBsYXllcnMsIGV2ZW4gYWZ0ZXIgc3VjaCBhY3Rpdml0eSB3YXMgZGVjbGFyZWQgaWxsZWdhbCkuSG93ZXZlciwgdGhhdCBpc3N1ZSBtYXkgc29vbiBiZWNvbWUgbW9vdC4gCkkgd2FudGVkIGEgc3Ryb25nLCBldmVybGFzdGluZyBtYXJyaWFnZSBsaWtlIG15IGdyYW5kcGFyZW50cyBoYWQuIApGcm9tIGEgcHVyZWx5IGVjb25vbWljIHBlcnNwZWN0aXZlLCBpdCB3b3VsZCBzZWVtIHByZXR0eSBzdXJwcmlzaW5nL2luZWZmaWNpZW50IGlmIHRoaXMgd2VyZSB0aGUgY2FzZS4gCkN0b25lcyA6IGNhcnZvbmUsIG1vbGN1bGUgZ2FsZW1lbnQgcHJzZW50ZSBkYW5zIGwgZXNzZW50aWVsbGUgZGUgY2FydmkgKDMwICA0MCAlKQpZb3Ugd2lsbCBzZWUgaGVyIGRvIHNvbWV0aGluZyBvbmUgZGF5LCBidXQgYmUgaW5jYXBhYmxlIG9mIGl0IGFub3RoZXIuIApCZSBpdCBhcyBhIG1heW9yLCBhbiBhbmNob3IsIG9yIGEgY29tbWVudGF0b3IsIHdoYXRldmVyIGl0IHRvb2ssIEkgd2FzIGRldGVybWluZWQgdG8gaGF2ZSB5b3Uga25vdyB0aGF0IEkgd2FzIG1vcmUgdGhhbiBhIGNoZWNrIGFuZCBhIGhvb2tlciBvbiBhIG9uZSBuaWdodCBzdGFuZC4gRm9yIG1vcmUgb24gdGhlIEplcnJ5IFNwcmluZ2VyIHlvdSBwcm9iYWJseSBkb24ga25vdywgY2hlY2sgb3V0IHRoZSBUaGlzIEFtZXJpY2FuIExpZmUgZXBpc29kZSwgIkxlYXZpbmcgdGhlIEZvbGQuIkFtZXJpY2EgNTAgTW9zdCBTY2FuZGFsb3VzIFBvbGl0aWNhbCBTY2FuZGFsc1RoZSBEb24gU2hlcndvb2QgQ2hva2Vob2xkWW91IGNvdWxkIGxvb2sgYXQgRG9uIFNoZXJ3b29kIGZhaWxlZCAyMDA2IHJlZWxlY3Rpb24gY2FtcGFpZ24gYXMgYSByZWZlcmVuZHVtIG9uIHRoZSBSZXB1YmxpY2FuIHBhcnR5LCBvciB5b3UgY291bGQgc2VlIGl0IGFzIGEgZGlyZWN0IHJlc3VsdCBvZiBoaXMgbWlzdHJlc3MgbG9ja2luZyBoZXJzZWxmIGluIGhpcyBiYXRocm9vbSBhbmQgY2FsbGluZyA5MTEgdG8gcmVwb3J0IHRoYXQgaGUgaGFkIGtub2NrZWQgaGVyIGFyb3VuZCB0aGUgcm9vbSBhbmQgY2hva2VkIGhlci4gCldyaXRpbmcgICBvbmUgZGF5IEknbGwgZmluaXNoIHRoYXQgbm92ZWwuIExpc3RlbmluZyB0byBtdXNpYyAgIGFsbW9zdCBhbnl0aGluZyAoYnV0IG5vdCBqYXp6LCBoZWF2eSBtZXRhbCBvciBqdXN0IGFib3V0IGFueXRoaW5nIGluIHRoZSBjaGFydHMpLiBHb2luZyB0byB0aGUgdGhlYXRyZSAvIGNpbmVtYSAoZGVwZW5kcyBvbiB0aGUgcGxheSAvIGZpbG0sIHRob3VnaCkuIAoiTGFzIFZlZ2FzIHdlbnQgZnJvbSBib29tIHRvIGJ1c3QgaW4gYSB2ZXJ5IGRyYW1hdGljIGZhc2hpb24sIiBleHBsYWluZWQgUGFya2VyLiAiQW5kIHRoZSByZWNlc3Npb24gbGFzdGVkIGxvbmdlciBpbiBMYXMgVmVnYXMgdGhhbiBpbiB0aGUgcmVzdCBvZiB0aGUgbmF0aW9uLiIKSSBtZW50aW9uZWQgb24gYW5vdGhlciB0aHJlYWQgdGhhdCBjYXN0aW5nIGEgbm9uIHdoaXRlIGFjdG9yIGluIGEgcm9sZSBleHBsaWNpdGx5IGRlc2NyaWJlZCBhcyB3aGl0ZSBieSB0aGUgc291cmNlIG1hdGVyaWFsIHNlZW1zIHRvIGhvbGQgbW9yZSBpbmhlcmVudCBiaWFzZXMgdGhhbiBzaW1wbHkgY2FzdGluZyBhIHdoaXRlIGFjdG9yLiBUaGlzLCBpbiB0dXJuLCBtYWtlcyB0aGluZ3MgbW9yZSBjb21wbGljYXRlZCB0aGFuIHRoZXkgc2hvdWxkIGJlLiAKSmFzb24gaXMgc3Vydml2ZWQgYnkgaGlzIG1vdGhlciBMaW5kYSBEdW5uLCBzaXN0ZXIgSmVubmlmZXIgUHlrZSwgc29uIEpvc2VwaCBEdW5uIGFuZCBoaXMgbW90aGVyIFN0ZXBoIEhhcnRsaW5nLCBuZXBoZXdzIEJlbnRsZXkgVGlubmV5LCBoaXMgQXVudHMgSm8gYW5uZSBHb3J0aHkgKEdlb3JnZSkgYW5kIE1hdXJlZW4gUm9vdGhhbSAoTGFycnkpLCBtYW55IHdvbmRlcmZ1bCBjb3VzaW5zIERhcnJlbiBHb3J0aHkgKFNoYXJvbiksIEFkYW0gUm9vdGhhbSAoVGVycmkgTHlubiksIFNlYW4gUm9vdGhhbSAoUGF1bGEpLCBHZW9yZ2UgR29ydGh5IEpyLiAoRG9yaXMpIGFuZCBhbiBhYnVuZGFuY2Ugb2YgbG92aW5nIGZyaWVuZHMgZXNwZWNpYWxseSBTYXJhIE1hbnUuIEZ1bmVyYWwgc2VydmljZXMgdG8gYmUgaGVsZCBvbiBKYW51YXJ5IDI0LCAyMDE4IGF0IENhcnNvbiBGdW5lcmFsIEhvbWUgLCAyOTAgRmlyc3QgU3QuLCBNaWRsYW5kLiAKU28gaW4gdGhpcyBjYXNlIG1vc3Qgc2xhdmUgPSBtb3N0IGdyZWVuLiAKRm9yIHRpZ2h0IGNvcm5lcnMsIHJlbW92ZSB0aGUgc2F3IGFuZCByZWluc2VydCBpdCB3aGVyZSB0aGUgbGluZXMgY29ubmVjdC4uIApZb3Uga25vdyBvbmx5IGFyb3VuZCBhIG1pbGxpb24gcGVvcGxlIGRpZWQgaW4gdGhlIHJvdWdobHkgNjAwaXNoIHllYXJzIG9mIENydXNhZGVzIHJpZ2h0PwpUbyBmaW5kIG91dCB3aGF0IHRoZSBjbGllbnQgbmVlZHMgZnJvbSBoZXIgbWFzc2FnZSwgeW91IGhhdmUgdG8gYmUgYWJsZSB0byBsaXN0ZW4gY2xvc2VseSBvbiBhIGNvbnRpbnVvdXMgYmFzaXMgYW5kIGFkanVzdCB5b3VyIHRlY2huaXF1ZSBhY2NvcmRpbmdseS4gCkkgZG8gYmVsaWV2ZSB0aGF0IEV2ZXJ5b25lIGRlc2VydmVzIGEgbW9kaWN1bSBvZiB0aW1lIGRldm90ZWQgdG8gdGFraW5nIGNhcmUgb2YganVzdCB0aGVtc2VsdmVzLiAKTGFkeSBHYUdhKSwgTGV0IExvdmUgRG93biwgQmx1ZWJlcnJ5IEtpc3NlcywgUmVkIEFuZCBCbHVlLCBSZXRybyBQaHlzaWNhbCwgUm9jayBTaG93LCBTZWNvbmQgVGltZSBBcm91bmQsIFNleHkgVWdseSwgR2xpdHRlciBBbmQgR3JlYXNlIChBcm91bmQpLCBObyBGbG9vZHMsIFJpYmJvbnMsIE9oIFdlbGwsIEZ1dHVyZSBMb3ZlIChMaXZlKSwgT3V0IE9mIENvbnRyb2wgKHNob3J0IGRlbW8pLCBXb3JkcywgV29uZGVyZnVsLCBXaXNoIFlvdSBXZXJlIEhlcmUsIFNoYWtlIFlvdXIgS2l0dHksIFNvbWV0aGluZyBDcmF6eSwgRmlsdGh5IFBvcCwgRmFuY3kgUGFudHMsIEZldmVyLCBEaXJ0eSBJY2UgQ3JlYW0sIEthbmR5IExpZmUsIEZvb2xlZCBNZSBBZ2FpbiAoSG9uZXN0IEV5ZXMpLCBSZWxvYWRlZCwgQ2FwdGl2YXRlZCBFbGVjdHJpYyBLaXNzLCBMaXZpbmcgT24gVGhlIFJhZGlvLCBTcGluIFUgQXJvdW5kIChmZWF0LiBMYWR5IEdhR2EpLCBOb3RoaW4nIE9uIChCdXQgVGhlIFJhZGlvKS4gODQpIFRoaXMgdHJhY2sgaXMgZ29pbmcgdG8gYmUgcmVsZWFzZWQgb24gIkJvcm4gVGhpcyBXYXkiIHRoZSBhbGJ1bSwgYnV0IHRoZSB5b3V0dWJlIHZlcnNpb25zIGFyZSBkaWZmZXJlbnQuIApUaGVuIHRoZXJlIHNvbWUgZmFidWxvdXNuZXNzLCBsaWtlIHRoaXM6LiAKVGhlIG1hbiBpcyB1dHRlcmx5IGJyb2tlbiwgYW5kIGlzIGRyYWdnaW5nIHRoZSBVbml0ZWQgdGVhbSBkb3duIHdpdGggaGltIGFuZCBzb21laG93IHNwaW5uaW5nIGl0IGFzIFdvb2R3YXJkIG5vdCBzdXBwb3J0aW5nIGhpbS5OT1QgU1VQUE9SVElORyBISU0/IFdFIEhBVkUgTElURVJBTExZIFNJR05FRCBXSE8gSEUgV0FOVEVEIFVOQ0hBTExFTkdFRCBVTlRJTCBXT09EV0FSRCBGSU5BTExZIFNOQVBQRUQgSU5UTyBSRUFMSVRZIEFORCBTQUlEIE5PIFRPIDYwTSBGT1IgQSBGVUNLSU5HIDI5IFlFQVIgT0xELiAKRmxvcCBjb21lcyA4IDkgNCB0d28gY2x1YnMuIApJIHN3aXRjaGVkIGdlYXJzIGFuZCBwbGF5ZWQgZGVmZW5zZSBmb3IgYSBmZXcgcm91bmRzLCBjb25zb2xpZGF0ZWQgVGh1bmRlcnNwZWFrZXIgZGFoYW4gKHdoaWNoIGluIHR1cm4gaGVscGVkIGZyb20gbG9zaW5nIGV2ZW4gbW9yZSBwcmVzZW5jZSBkdWUgdG8gZGFoYW4gZGllaW5nKS4gRmluYWxseSBMaWdodG5pbmcgcGlja2VkIHVwIGEgZmV3IG1pbm9yIHBvd2VyIGNhcmRzIHRoYXQgY291bGQgaGVscCBnZW5lcmF0ZSBtb3JlIGZlYXIgYXQgbG93IGVuZXJneSBjb3N0LCBhcyB3ZWxsIGFzIGdpdmUgbG90cyBvZiBvcHRpb25zIGZvciB0aGUgZWxlbWVudHMuIEdldHRpbmcgbmVhciB0aGUgZW5kIG9mIHRoZSBnYW1lIGl0IGxvb2tlZCB0ZXJyaWJsZSwgdGhvdWdoLiBJIHRoaW5rIEkgaGFkIGp1c3Qgb25lIHNocmluZSBhbmQgb25lIHNpbmdsZSBwcmVzZW5jZSBmb3IgZWFjaCBvZiB0aGUgc3Bpcml0cy4gRmluYWxseSBvbiB0aGUgdmVyeSBsYXN0IHR1cm4gSSB3YXMgYWJsZSB0byBwbGF5IGVub3VnaCBjYXJkcyBmb3IgZWFjaCBzcGlyaXQgd2l0aCBleGFjdGx5IGVub3VnaCBlbmVyZ3kgdG8gZ2VuZXJhdGUgZW5vdWdoIGZlYXIgdG8gY2xlYXIgdGhlIGxhc3QgdHdvIGZlYXIgY2FyZHMsIGdpdmluZyBtZSB0aGUgd2luLiBJIGhhZCBqdXN0IG9uZSBtb3JlIGJsaWdodCBsZWZ0IG9uIHRoZSBibGlnaHQgY2FyZCwgYW5kIG9uZSBtb3JlIGNhcmQgb24gdGhlIGV4cGxvcmUgY2FyZCB0byBmbGlwLgpQam9uZXMwMzAzICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTWV0cm8sIHRoZSBjb3VwbGUncyBhbmltYWwgcmVsYXRlZCBkcmFtYSBkb2Vzbid0IGp1c3QgZXh0ZW5kIHRvIHBldHMuIExhc3QgeWVhciwgQ2hyaXMgUHJhdHQgZmFjZWQgYSBtYWpvciBiYWNrbGFzaCBmb3IgY29tbWVudHMgaGUgbWFkZSBhYm91dCBodW50aW5nLiAKMy40IFlvdSBncmFudCBCRyBhIHBlcnBldHVhbCwgbm9uZXhjbHVzaXZlLCB3b3JsZCB3aWRlLCByb3lhbHR5IGZyZWUsIHN1YiBsaWNlbnNhYmxlIGxpY2Vuc2UgdG8gdGhlIFN1Ym1pc3Npb25zLCB3aGljaCBpbmNsdWRlcyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0IGZvciBCRyBvciBhbnkgdGhpcmQgcGFydHkgaXQgZGVzaWduYXRlcywgdG8gdXNlLCBjb3B5LCB0cmFuc21pdCwgZXhjZXJwdCwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgcHVibGljbHkgZGlzcGxheSwgcHVibGljbHkgcGVyZm9ybSwgY3JlYXRlIGRlcml2YXRpdmUgd29ya3Mgb2YsIGhvc3QsIGluZGV4LCBjYWNoZSwgdGFnLCBlbmNvZGUsIG1vZGlmeSBhbmQgYWRhcHQgKGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0IHRvIGFkYXB0IHRvIHN0cmVhbWluZywgZG93bmxvYWRpbmcsIGJyb2FkY2FzdCwgbW9iaWxlLCBkaWdpdGFsLCB0aHVtYm5haWwsIHNjYW5uaW5nIG9yIG90aGVyIHRlY2hub2xvZ2llcykgaW4gYW55IGZvcm0gb3IgbWVkaWEgbm93IGtub3duIG9yIGhlcmVpbmFmdGVyIGRldmVsb3BlZCwgYW55IFN1Ym1pc3Npb24gcG9zdGVkIGJ5IHlvdSBvbiBvciB0byB0aGUgU2VydmljZXMgb3IgYW55IG90aGVyIFdlYiBzaXRlIG93bmVkIGJ5IEJHLCBpbmNsdWRpbmcgYW55IFN1Ym1pc3Npb24gcG9zdGVkIG9uIG9yIHRvIHRoZSBTZXJ2aWNlcyB0aHJvdWdoIGEgdGhpcmQgcGFydHkuCkkgdHVybiBvbiBteSBlc3NlbnRpYWwgb2lsIGRpZmZ1c2VyIHdpdGggbGF2ZW5kZXIgKG15IHByZWZlcmVuY2UpLCB0dXJuIG9uIG15IHN1bnJpc2UgYWxhcm0gY2xvY2sncyBkaW1taW5nIGZlYXR1cmUgc28gdGhhdCBpdCBkaW1zIHRvIGRhcmtuZXNzIGluIDMwIG1pbnV0ZXMuIApUaGluayBhYm91dCB0aGlzIGdpYW50IGNpcmN1bGFyIG9yIG92YWwgaG9sZSB0aGF0IGp1c3QgZ29lcyBkb3duIGFuZCBkb3duIGFuZCBkb3duLiAKV2hpbGUgU05DIG1pZ2h0IGJlIHRlbXB0ZWQgdG8gdHJ5IHRvIGZpbmQgYSBidXllciBmb3IgdGhlIGVudGlyZSBjb21wYW55LCBmaW5kaW5nIG9uZSBhdCB0aGUgcmlnaHQgcHJpY2UgY291bGQgYmUgYSBjaGFsbGVuZ2UsIGFjY29yZGluZyB0byB0aHJlZSBsYXd5ZXJzIHdpdGggZGVjYWRlcyBvZiBleHBlcmllbmNlIGluIG1lcmdlcnMgYW5kIGFjcXVpc2l0aW9ucy4gCkNvbW11bmljYXRpb24gUm91dGluZSBjb3JyZXNwb25kZW5jZSBhbmQgZmFjZSB0byBmYWNlIGludGVyYWN0aW9uIHdpdGggY29sbGVhZ3Vlcywgb3Bwb3NpbmcgY291bnNlbCBhbmQgY291cnQgcGVyc29ubmVsIHJlcXVpcmUgc3Ryb25nIHdyaXR0ZW4gYW5kIHZlcmJhbCBjb21tdW5pY2F0aW9uIHNraWxscy4gRm9yIGp1bmlvciBhc3NvY2lhdGVzIGFuZCBvdGhlcnMgd2hvIGRyYWZ0IGxlZ2FsIGRvY3VtZW50cywgd3JpdHRlbiBjb21tdW5pY2F0aW9uIHNraWxscyBhcmUgY3JpdGljYWwuIEEgbGF3IGZpcm0gZW1wbG95ZWUncyBjb21tdW5pY2F0aW9ucyBtdXN0IGJlIGNsZWFyIGFuZCBjb252aW5jaW5nIHRvIGJlIGVmZmVjdGl2ZSBhbmQgdW5kZXJzdG9vZCBieSBhIHZhcmlldHkgb2YgYXVkaWVuY2VzLgpTaGUgc2FpZCBhcyBtdWNoLi4gCklsIGZhdXQgZGlyZSBxdWUgbGUgY29tbWlzc2FpcmUgZmFpdCBkdSBsaWVuIGF2ZWMgbGVzIGhhYml0YW50cyB1biBheGUgZXNzZW50aWVsIGRhbnMgbGUgY2FkcmUgZGUgbCdvcHJhdGlvbiBCYXJicyBDaGFwZWxsZSBSZXNwaXJlIGRvbnQgaWwgZXN0IGxlIGNoZWYgZCdvcmNoZXN0cmUuIEMnZXN0IHBvdXIgbHVpIGluY29udG91cm5hYmxlIHBvdXIgbWVuZXIgIGJpZW4gc2VzIGFjdGlvbnMgZXQgcmFqdXN0ZXIgbGUgZGlzcG9zaXRpZiBhdSBwbHVzIHBycyBkZXMgb2JzZXJ2YXRpb25zLiBMYSBQcmZlY3R1cmUgZGUgcG9saWNlIChQUCkgZXQgbGEgdmlsbGUgZGUgUGFyaXMgKERQU1ApIHNvbnQgcGFydGllcyBwcmVuYW50ZXMuIApUSEUgQ1VTVE9NRVIgQzBVUlRFU1kgTUFTU0FHRSBQUk9HUkFNMS4gCkkgZ3JldyB1cCBpbiB0aGUgd2ludGVyeSBoZWxsIHRoYXQgaXMgY2VudHJhbCBBbGJlcnRhIGFuZCBteSBkYWQgd291bGQgYWx3YXlzIHNheSB0aGlzIHRvIHVzLiBFc3BlY2lhbGx5IHdoZW4gd2Ugd2VyZSBnb2luZyBvbiBsb25nIGRyaXZlcyB0byBnbyBwbGFjZXMsIGhlIHdvdWxkIG1ha2UgdXMgd2VhciBvdXIgZnVsbCBzbm93IHN1aXQgZ2VhciAgIHdhcm0gc29ja3MgYW5kIGJvb3RzLCBnbG92ZXMsIGhhdCwgc2NhcmYgYW5kIG1pdHRzLiBXZSB0b29rIHRoZW0gb2ZmIHdoaWxlIHJpZGluZyBpbiB0aGUgY2FyIGJ1dCB0aGUgaW1wb3J0YW50IHRoaW5nIHdhcyB0byBoYXZlIHRoZW0uIApUaGF0J3Mgd2h5IHlvdSBzaG91bGQgYmUgbW9yZSBjYXJlZnVsIGFib3V0IHNhdmluZyB0aGVzZSBleGN1c2l2ZSBwbGF5aW5nIGluc3RydW1lbnRzLiBTb21lIHBsYXllcnMgaGF2ZSBnb3QgdGhlIGNvbW1vbiBiYWQgaGFiaXQgYXMgdGhleSBiZW5kIHRoZWlyIGNhcmRzIGluIGhhbmRzIHVubWluZGZ1bGx5IGR1cmluZyBhIGdhbWUuIApNb3N0IHBva2VyIHBsYXllcnMgdGhhdCBwbGF5IHJ1c2ggcG9rZXIgdG91cm5hbWVudHMgYXJlIHRpZ2h0IGFnZ3Jlc3NpdmUgcGxheWVycy4gT3BlbiB5b3VyIGhhbmQgcmFuZ2UgdG8gc3RlYWwgdGhlIGJsaW5kcyBpbiBwb3NpdGlvbi4gRG9pbmcgdGhpcyBvbmNlIHlvdSByZWFjaCB0aGUgbWlkZGxlIHN0YWdlIG9mIHRoZSB0b3VybmFtZW50IGFsbG93cyB5b3UgdG8gZ3JhYiBjaGlwcyBvdGhlcnMgYXJlIHdpbGxpbmcgdG8gZGlzY2FyZCBhbmQgbW92ZSBvbnRvIHRoZSBuZXh0IHRhYmxlLgpMYXN0IHN1bW1lciwgbWUgYW5kIHNvbWUgZnJpZW5kcyBzcGVudCAzIHdlZWtzIHJvYWQgdHJpcHBpbmcgYWNyb3NzIHRoZSBVUyB2aXNpdGluZyBhbGwgdGhlIG1ham9yIG5hdGlvbmFsIHBhcmtzLiBUaGVuIEkgc3BlbnQgMiB3ZWVrcyB3aXRoIG15IEdGIGluIFB1ZXJ0byBSaWNvLiBUaGlzIGZhbGwgd2UgcGxhbm5pbmcgYSBtdWx0aSB3ZWVrIHRyaXAgdG8gRXVyb3BlIHRvIGNlbGVicmF0ZSBteSBHRiAzMHRoIGIgZGF5LiAKVGhlIHVnbHkgdHJ1dGggaXMgdGhhdCB1bml2ZXJzaXRpZXMgaGF2ZSBiZWNvbWUgbWluaSB2ZXJzaW9ucyBvZiBOZW9saWJlcmFsIGNvcnBvcmF0ZSBBbWVyaWNhLiBUaGUgcGVvcGxlIGF0IHRoZSB2ZXJ5IHRvcCAgdGhlIHByZXNpZGVudHMgYW5kIHByb3Zvc3RzIGFuZCBjb3VudGxlc3MgdmljZSBwcmVzaWRlbnRzICBtYWtlIGEgcXVhcnRlciBtaWxsaW9uIG9yIGV2ZW4gYSBoYWxmIG1pbGxpb24gZG9sbGFycyBhIHllYXIuIEEgZ29vZCBjaHVuayBvZiBhbGwgdGVhY2hpbmcgaXMgZG9uZSBieSAiQWRqdW5jdCIgcHJvZmVzc29ycywgbWVhbmluZyB0aGF0IGdldHRpbmcgdGhlaXIgUGhEIGhhcyBsYW5kZWQgdGhlbSBhIGpvYiB3aGVyZSB0aGV5IHRlYWNoIDQgY2xhc3NlcyBhIHNlbWVzdGVyIChtb3JlIHRoYW4gZnVsbCB0aW1lIGZhY3VsdHkpIGF0IGEgY291cGxlIG9mIHRob3VzYW5kIGRvbGxhcnMgYSBjbGFzcyB3aXRoIG5vIGJlbmVmaXRzLiBBbmQgdGhlIHN0YWZmICBhbHdheXMgdW5kZXJwYWlkICByZW1haW5zIHNvLgpGaW5hbGx5LCBpbiBhIHN0dWR5IGluIHRoZSBCcml0aXNoIGpvdXJuYWwgTGFuY2V0LCBmdW5kZWQgYnkgdGhlIEdhdGVzIEZvdW5kYXRpb24sIHJlc2VhcmNoZXJzIGxvb2tlZCBhdCB3aGF0IGNhdXNlZCBwZW9wbGUgdG8gZGllIHByZW1hdHVyZWx5IGluIEVuZ2xhbmQuIFRoZSBsZWFkaW5nIGNhdXNlIG9mIGRlYXRoLCBhcyBpbiBtb3N0IGNvdW50cmllcywgd2FzIGZyb20gaGVhcnQgZGlzZWFzZS4gTW9kaWZpYWJsZSByaXNrIGZhY3RvcnMgYWNjb3VudGVkIGZvciBhbG1vc3QgNDAgcGVyY2VudCBvZiB0aGUgZGVhdGhzLCBsZWQgYnkgYW4gdW5oZWFsdGh5IGRpZXQsIHNtb2tpbmcgY2lnYXJldHRlcywgYW5kIGRyaW5raW5nIHRvbyBtdWNoIGFsY29ob2wuIApJbiBhZGRpdGlvbiB0byB0aGF0LCB5b3Ugd2lsbCBmaW5kIHRoYXQgeW91IGFyZSBpbiBhIHBsYWNlIHdoZXJlIHlvdSBuZWVkIHRvIGxvb2sgaW50byB3aGF0IHlvdXIgb3B0aW9ucyBhcmUgZ29pbmcgdG8gYmUgd2hlbiB5b3UgYXJlIHRoaW5raW5nIGFib3V0IHRoZSBjYXNlIHRoYXQgeW91IHVzZSB0byBjYXJyeSB5b3VyIGNoaXBzLiAKQXMgZm9yIHdoYXQgdG8gZG8uIGZsaXAgdGhlIHNjcmlwdCBvbiBoZXIuIEdldCBjcmVhdGl2ZS4gRG9uIGJlIGFmcmFpZCB0byBiZSBzaWxseS4gTXkgZGF1Z2h0ZXIgcmVhbGx5IGh1cnQgbXkgZmVlbGluZ3Mgb25lIGRheS4gSSBzdG9wcGVkIHdoYXQgSSB3YXMgZG9pbmcsIGFuZCB0b2xkIGhlciB0aGF0IEkgbmVlZGVkIGEgdGltZSBvdXQuIEFuZCBmb3IgaGVyIHRvIGxldCBtZSBrbm93IHdoZW4gZml2ZSBtaW51dGVzIHdhcyB1cC4gV2hlbiBzaGUgYXNrZWQgd2h5LCBJIHRvbGQgaGVyIHRoYXQgSSBuZWVkZWQgdG8gaGF2ZSBhIHRlbXBlciB0YW50cnVtLCBhbmQgdGhlbiBJIHRvb2sgbXkgdGltZSBvdXQuIFNoZSBnb3QgaXQuClBhcnQgb2YgbWUgdGhpbmtzIGl0IG1heSBiZSBqZWFsb3VzeSwgYW5kIHRoYXQgcHJvYmFibHkgYSBiaWcgZWxlbWVudCBvZiBpdC4gClRoZSBwcmltYWN5IG9mIG1lYXQgZm9yIG11c2NsZSBidWlsZGluZyBnb2VzIGZ1cnRoZXI6IFRoZXJlJ3MgZXZpZGVuY2UgdGhhdCB0aGVyZSBpcyBzb21ldGhpbmcgYWJvdXQgInRoZSBtZWF0IGl0c2VsZiIgdGhhdCB5aWVsZHMgbWF4aW1hbCBtdXNjbGUgZ2FpbnMuIApJbiBhbiB1bmNhbm55IHJlcGxpY2F0aW9uIG9mIGEgbGF0ZSBoYW5kIGhlIGxvc3QgdG8gZXZlbnR1YWwgd2lubmVyIFNjb3R0IEJsdW1zdGVpbiAocHJpemUgJDguMTVtKSwgSm9obiBnb2VzICJhbGwgaW4iIHdpdGggaGlzIHJlbWFpbmluZyBjaGlwcyBhZ2FpbnN0IGFuIG9wcG9uZW50IGZhdGVmdWxseSBob2xkaW5nIGEgcGFpciBvZiBhY2VzLiBXaXRoIHRoZSBiZXQgY2FsbGVkIGFuZCBjYXJkcyByZXZlYWxlZCwgSm9obiBpcyBzdWRkZW5seSBjaGVja2luZyB0cmFpbiB0aW1lcyBiYWNrIHRvIEJyaWRsaW5ndG9uIGEgZGF5IGVhcmxpZXIgdGhhbiBhbnRpY2lwYXRlZC4uIApObyBkYXRhIGlzIHNoYXJlZCB3aXRoIFBheXBhbCB1bmxlc3MgeW91IGVuZ2FnZSB3aXRoIHRoaXMgZmVhdHVyZS4gKFByaXZhY3kgUG9saWN5KUZhY2Vib29rIExvZ2luWW91IGNhbiB1c2UgdGhpcyB0byBzdHJlYW1saW5lIHNpZ25pbmcgdXAgZm9yLCBvciBzaWduaW5nIGluIHRvIHlvdXIgSHVicGFnZXMgYWNjb3VudC4gCldlbGwsIHRoZXJlIGEgbGl0dGxlIGJpdCBvZiB0cnV0aCB0byBpdCB3aGVuIGl0IGNvbWVzIHRvIHRoZSBwZW5pcyBzaXplIGNsYWltcy4gSWYgeW91IGxvb2sgYXQgbGVnaXRpbWF0ZSBzY2llbnRpZmljIHN0dWRpZXMsIChldGhuaWMpIEVhc3QgQXNpYW5zIG9uIGF2ZXJhZ2UgaGF2ZSBhIHNtYWxsZXIgcGVuaXMgc2l6ZSB0aGFuIHBlb3BsZSBmcm9tIG90aGVyIHBhcnRzIG9mIHRoZSB3b3JsZC4gVGhpcyBtYWtlcyBzb21lIHNlbnNlICAgb24gYSBwb3B1bGF0aW9uIGxldmVsIGJvZGllcyB0ZW5kIHRvIGJlIHByb3BvcnRpb25hbCwgYW5kIEVhc3QgQXNpYW5zIGFsc28gdGVuZCB0byBiZSBzaG9ydGVyLgpMYW1iZXJ0LCB0aGUgb3duZXIgb2YgYSBnbGFzc3RvcHBlZCBzdG92ZSB0aGF0IHdhcyBzY3JhdGNoZWQgd2l0aCBhIHJhem9yIGJsYWRlLCB0YXNrZWQgaGltc2VsZiB3aXRoIGRldmVsb3BpbmcgYSBzYWZlciB3YXkgdG8gY2xlYW4gdGhlIHN1cmZhY2UuIApJIGJvdWdodCBKb2tlcktpbmdzLCBJIHBhaWQgb2ZmIHdoYXQgd2FzIG93ZWQgdG8gdGhlIHBsYXllcnMgZm9yIHRoZWlyIHdpbm5pbmdzLiAKQnkgdGhlIG1pZCBwb2ludCBvZiB0aGUgYm9vaywgcmVhZGVycyB3b25kZXIgaG93IFdlbmR5IHJlc3RyYWlucyBoZXJzZWxmIGZyb20gZ2V0dGluZyBpbnRvIGNvbnN0YW50IGZpc3RmaWdodHMgd2l0aCB0aG9zZSB3aG8gb2ZmZXIgdXAgdW5zb2xpY2l0ZWQgb3BpbmlvbnMgb2YgaGVyLi4gCk1hbnkgbXVzY2xlcyBpbiB0aGUgZnJvbnQgYW5kIGJhY2sgb2YgdGhlIHVwcGVyIGJvZHkgYXJlIGFjY2Vzc29yeSByZXNwaXJhdG9yeSBtdXNjbGVzLCBzaGUgZXhwbGFpbnMuICJXaGVuIGFueSBvZiB0aGVzZSBtdXNjbGVzIGFyZSBjaHJvbmljYWxseSB0aWdodCBhbmQgc2hvcnRlbmVkLCB0aGV5IGNhbiByZXN0cmljdCBub3JtYWwgYnJlYXRoaW5nIGFuZCBkaXNydXB0IGJyZWF0aGluZyBwYXR0ZXJucywiIHNoZSBleHBsYWlucy4gIk1hc3NhZ2UgdGVjaG5pcXVlcyB0byBsZW5ndGhlbiBhbmQgcmVsYXggdGhlc2UgbXVzY2xlcyBpbXByb3ZlIGJyZWF0aGluZyBjYXBhY2l0eSBhbmQgZnVuY3Rpb24uIgpVbnVzdWFsbHkgZm9ybWVkIGhhbmRzPyBMZXQgc2F5IHlvdSBoYWxmIGxvYnN0ZXIsIGhhbGYgYm95LiAKSXQgdGhhdCB0aGVpciBqb2tlcyAgIGNlbnRyZWQgYXJvdW5kIGJhc2ljIGNsaWNoZXMgYW5kIHN0ZXJlb3R5cGVzICAganVzdCBhcmVuIGZ1bm55LgpUaGVyZSBhIHByb2dyZXNzaW9uIG9mIHRoaW5raW5nIHRoYXQgVGhlIFdhbGwgdGhlIGJlc3QgYWxidW0gdGhlbiB0aGlua2luZyBBbmltYWxzIG9yIE1lZGRsZSBpcyB0aGUgYmVzdCBhbGJ1bSBiZWNhdXNlIHRoZSBXYWxsIGlzIHRvbyBvYnZpb3VzIGFuZCB0b28gb3ZlciB0aGUgdG9wIHRoZW4gdGhpbmtpbmcgdGhhdCBQaXBlciBhdCBUaGUgR2F0ZXMgb2YgRGF3biBpcyB0aGUgYmVzdCBhbGJ1bSBiZWNhdXNlIFN5ZCBCYXJyZXQgd2FzIHN1Y2ggYSBnZW51aXMgYnV0IGluIHRoZSBlbmQgeW91IHVsdGltYXRlbHkgcmVhbGl6ZSB0aGF0IFRoZSBXYWxsIGlzIHRoZSBiZXN0IGFsYnVtLiBJdCBQaW5rIEZsb3lkIGF0IHRoZWlyIG1vc3QgUGluayBGbG95ZC4gCklmIEkgdGVsbCB5b3UgSSBoYXZlIGEgcGFpciBvZiBnYXJkZW4gc2hlYXJzIGluIG15IGdhcmFnZSwgd291bGQgeW91IGJlbGlldmUgbWU/IFByb2JhYmx5LiBJZiB5b3Ugd2FsayBpbnRvIGFueSByYW5kb20gZ2FyYWdlIGluIHRoZSBVUywgY2hhbmNlcyBhcmUgZ29vZCB5b3Ugd2lsbCBmaW5kIGEgcGFpciBvZiBnYXJkZW4gc2hlYXJzLiAKSSB3b3JrIHdpdGggZ3V5cyB3aG8gYWx0ZXJlZCB0aGVpciBzY2hlZHVsZSB0byB0YWtlIHRoZWlyIGtpZHMgdG8gc2Nob29sIGluIHRoZSBtb3JuaW5nIGFuZCB3aG8gc29tZXRpbWVzIGhhdmUgdG8gc3RvcCBieSB0aGUgb2ZmaWNlIHdpdGggdGhlbSB0byBnZXQgc29tZXRoaW5nIGluIHRoZSBhZnRlcm5vb24uIFdoYXRldmVyIHlvdSBkZXNjcmliaW5nIGlzbiB1bml2ZXJzYWxseSBhY2NlcHRlZCBieSBtZW4uLiAKSSB3b3JrIHdvcmsgaW4gY2l0eS9jb21tdW5pdHkgZGVzaWduLiAKSSB1c3VhbGx5IGdldCBhIEdQIFQgc2hpcnQgZm9yIDUwIHRpeCwgd2hpY2ggaXMgc3BlY2lmaWMgZm9yIGVhY2ggc2Vhc29uLiAKSW4gZmFjdCwgbW9yZSB0aGFuIGEgZmV3LCBlbm91Z2ggdGhhdCBpdCB3b3VsZCBnZW5lcmF0ZSBhIHRyZW1lbmRvdXMgYW1vdW50IG9mIHJldmVudWUgZm9yIHRoZSBzdGF0ZS4gCllvdSBkbyB5b3UuIFdFIGFkbWlyZSB5b3UgYW5kIHNlbmQgeW91IGFsbCBvdXIgZ29vZCBwb3NpdGl2ZSB0aG91Z2h0cyBmb3IgdGhlIGZ1dHVyZS4gClllYXIgYmFuIG9uIGZlZGVyYWwgY29udHJhY3QgYmlkcyB3b3VsZCBtZWFuIGZvciBTTkMKVGhlIGJlbGllZiBpcyB0aGF0IHRoZSBSZWlraSBNYXN0ZXIgY3JlYXRlcyBhbiBlbmVyZ3kgcGF0dGVybiB3aGljaCBlbmFibGVzIHRoZSBzdHVkZW50IHRvIG5vdCBvbmx5IHJlY2VpdmUgdGhlIGVuZXJneSByZXByZXNlbnRlZCBieSB0aGUgc3ltYm9scyBidXQgdG8gYmUgYWJsZSB0byB0cmFuc21pdCB0aGUgUmVpa2kgZW5lcmd5IHVudG8gb3RoZXJzLi4gClRoZSBtYWNoaW5lIGhhcyB0byBtYWludGFpbiB0aGUgcGF5IG91dCBwZXJjZW50YWdlIHRoYXQgaXMgY2hvc2VuIGJ5IHRoZSBvcGVyYXRvci4gSW4gbGVnYWwgY2FzaW5vcyBpbiBvdGhlciBzdGF0ZXMsIHJlZ3VsYXRvcnMgbWFrZSBzdXJlIHRoYXQgdGhlaXIgbWFjaGluZXMgYXJlIHByb2dyYW1tZWQgYWJvdmUgdGhlIG1pbmltdW0gcGF5IG91dCBwZXJjZW50YWdlIHNldCBieSBzdGF0ZSBsYXcuClJlZnVzZSB0byBhY2NlcHQgdGhlIHNpdHVhdGlvbi4gCklmIHlvdSBsb29rIGF0IHRoZSBpbmZvcm1hdGlvbiBqdXN0IGJhc2VkIG9uIHdoYXQgeW91IGhhdmUgaXQgbWFrZXMgdG90YWwgc2Vuc2UgZm9yIGhpbSB0byBoYXZlIEFjZXMsIG9yIEFRLCB0aGVyZSdzIG5vIHdheSBoZSBoYXMgdGhlIGNvbmZpZGVuY2UgdGhlIGNoZWNrIHNob3ZlIEFLIGJlY2F1c2UgaGUgaGFzIGFscmVhZHkgcmVwcmVzZW50ZWQgYSBnb29kIGhhbmQuIFNvIGhlcmUgYXJlIGhlciBvcHRpb25zLCBzaGUgaXMgY2FsbGluZyBmb3IgYSBjaG9wLCB0aGUgNSUgaGUgaXMgYmx1ZmZpbmcgQUssIG9yIGhlIGhhcyBBY2VzLiBBSyBoZXJlIGhhcyByZXByZXNlbnRlZCB0b28gbXVjaCB0byBzaG92ZSBjb25maWRlbnRseSwgc28gdmVyeSB1bmxpa2VseS4gClBheWluZyAkNjAgZm9yIHRoaXMgZ2FtZSwgaW4gbXkgZXllcywgaXMgbm90IHdvcnRoIGl0LiBUcnVzdCBtZS4gSSBSRUFMTFkgZW5qb3kgdGhlIGdhbWUsIGFuZCBJIHNlZSB0aGUgcG90ZW50aWFsIGlzIHRoZXJlLiAKT3V0c2lkZSwgQmFuZmllbGQgc2F5cyBhIGhvdCB0dWIgaW5zdGFudGx5IGJvb3N0cyB0aGUgc2Vuc2Ugb2YgcmVsYXhhdGlvbiBhbmQgZGlzY29ubmVjdGlvbiBmcm9tIHVyYmFuIGxpZmUuIApCdXQgdGhlIDIwMTQgcmVjb3JkcyBzaG93IGp1c3QgMTFvZiBldmVyeSBkb2xsYXIgcmFpc2VkIHdlcmUgYWN0dWFsbHkgZWFybWFya2VkIGZvciBjaGFyaXRpZXMgdGhhdCBjYXJlIGZvciBzaWNrIGFuZCBuZWVkeSBjaGlsZHJlbiB0aGF0IHllYXIuIFRoZSBmb3VuZGF0aW9uIGlzIG9ubHkgbGVnYWxseSBvYmxpZ2VkdG8gZGlzdHJpYnV0ZSA0b2YgZXZlcnkgZG9sbGFyIGl0IHJhaXNlcy4gClNoZSBleHBsYWlucyB0aGF0IHRoZSBzcGluZSB3YXNuIG1lYW50IHRvIHN0YXkgZm9yIGxvbmcgcGVyaW9kcyBpbiBhIHNlYXRlZCBwb3NpdGlvbi4gR2VuZXJhbGx5IHNwZWFraW5nLCB0aGUgc2xpZ2h0IFMgc2hhcGUgb2YgdGhlIHNwaW5lIHNlcnZlcyB1cyB3ZWxsLgpMZWFmIEdyb3VwIGlzIGEgVVNBIFRPREFZIGNvbnRlbnQgcGFydG5lciBwcm92aWRpbmcgZ2VuZXJhbCB0cmF2ZWwgaW5mb3JtYXRpb24uIDMxIE1heSAyMDE4LgpHcm93dGggd2FzIGluIHRoZSBjYXJkcyBmb3IgQm9iIFJvaHJtYW4KSSB3YXMgdGhlcmUgdW50aWwgMiBmdWNraW5nIDMwLiBBbHNvLCBnZXQgdGhpcywgdGhleSBkb24gYWxsb3cgZm9vZCBvciBkcmluayBpbmNsdWRpbmcgd2F0ZXIuIApBbm90aGVyIGJpZyBwcm9qZWN0IGlzIHJlY29uc3RydWN0aW5nIFlwcmVzIEJvdWxldmFyZCBmcm9tIEZvcmVzdCBBdmVudWUgdG8gV2Fsa2VyLiBTcGVuZGluZyAkMzEuNiBtaWxsaW9uIGluIDIwMTkgb24gYW50aSBmbG9vZCBtZWFzdXJlcywgYWxtb3N0ICQxMCBtaWxsaW9uIG1vcmUgdGhhbiBwcmV2aW91cyB5ZWFycywgYXMgdGhlIGNpdHkgaW1wbGVtZW50cyBhIGxvbmcgbGlzdCBvZiBpbXByb3ZlbWVudHMgdG8gcmVkdWNlIHRoZSBkYW1hZ2Ugb2YgaGVhdnkgcmFpbmZhbGxzIHRoYXQgaW4gMjAxNiBhbmQgMjAxNyBmbG9vZGVkIHRob3VzYW5kcyBvZiBiYXNlbWVudHMuIAoyNCBnZW4gMjAxOCAuIApOb3cgdGhhdCB3ZSd2ZSBjb3ZlcmVkIHRoZSBiYXNpY3MsIGl0IGlzIGltcG9ydGFudCB0byBkaXNjdXNzIHdoYXQgdG8gZG8gYWZ0ZXIgdGhlIGNhcmRzIGFyZSBkZWFsdC4gSW4gdGhlIG5leHQgc2VjdGlvbiB3ZSB3aWxsIGRpc2N1c3Mgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBhc3BlY3RzIG9mIGFueSBwb2tlciBnYW1lOiBzdGFydGluZyBoYW5kIHNlbGVjdGlvbi4gV2hhdCBjYXJkcyBzaG91bGQgeW91IHBsYXkgYW5kIHdoaWNoIHNob3VsZCB5b3UgZm9sZD8KSSBoYXZlIHByZXR0eSBiYWQgZHlzaGlkcm90aWMgZWN6ZW1hLCBzbyBJIG9mdGVuIGhhdmUgcGF0Y2hlcyBvZiBibGlzdGVyZWQgc2tpbiBwb3BwaW5nIHVwIG9uIG15IGhhbmRzLiBSYXRoZXIgdGhhbiBoYXZlIHBlb3BsZSB3b25kZXJpbmcgaWYgaXQgY29udGFnaW91cyhpdCBub3QpLCBJIGZpZ3VyZWQgSSBjb3VsZCBqdXN0IGV4cGxhaW4gYXdheSB0aGUgYmxpc3Rlcnkgc2tpbiBieSBzYXlpbmcgSSBtYWtlIHN0dWZmIHdpdGggZ2xhc3MsIGFuZCBub3QgdGVjaG5pY2FsbHkgYnkgbHlpbmcuCk5laXRoZXIgQnJvd24gbm9yIGhlciBodXNiYW5kIGlzIGNlcnRhaW4gaG93IHRvIGV4cGxhaW4gdGhlIG5laWdoYm9yaG9vZCBjb21tZXJjZSB0byB0aGVpciB5b3VuZyBjaGlsZHJlbi4gIlRoZXkgbm90aWNlIHRoZSB3b21lbiBhbmQgc28gZmFyIHdlJ3ZlIGtlcHQgaXQgdW5kZXIgdGhlIHVtYnJlbGxhIG9mIHBlb3BsZSBtYWtpbmcgdW5oZWFsdGh5IGNob2ljZXMsIiBzaGUgc2F5cy4KR2VuZXNpcyAxOAoxMikgQXZyaWwgTGF2aWduZQpZZWxwZXIgU3RldmUgUy4sIHdobyByZXZpZXdlZCBCcm93bmUgRmFtaWx5IFZpbmV5YXJkcyBvbiBNYXJjaCAyMywgd3JvdGUsIGJlZW4gYSBmYW4gb2YgdGhlIHBpbmsgd2luZXMsIGJ1dCBEZXZvbiB3YXMgYSBmYWJ1bG91cyBob3N0IGFuZCB3YXMgYWJsZSB0byBvcGVuIG15IGV5ZXMgdG8gdGhlIHdvbmRlcmZ1bCByb3NlLiBUaGUgQ2FiIEZyYW5jIHdhcyBmYWJ1bG91cyBhbmQgdGhlIHNlcnZpY2Ugd2FzIG91dHN0YW5kaW5nLiAKT2YgY291cnNlLCBTZW5hdG9yIER1cmJpbiBhbHNvIHdhcm5lZCB1cyB0aGF0IHJlYWwgcmVmb3JtIG1pZ2h0IG5vdCBwYXNzIHRocm91Z2ggQ29uZ3Jlc3Mgc2luY2UgZnJhbmtseSB0aGUgYmFua2VycyAib3duIHRoaXMgcGxhY2UuIiBCdXQgcmVhbCByZWZvcm0gd2lsbCBoYXZlIHRvIHBhc3MgYXMgbW9yZSBhbmQgbW9yZSBBbWVyaWNhbnMgcmVhbGl6ZSB0aGF0IHRoZSBBbWVyaWNhbiBEcmVhbSBoYXMgYmVlbiBzdG9sZW4gZnJvbSB1cy4gUG9wdWxpc3QgcHJvdGVzdHMgaW4gQ2hpY2FnbyBtaWdodCBqdXN0IGJlIHRoZSBhbGFybSB0aGF0IHdha2VzIHVzIHVwLgpJIG1lYW4gbWF5YmUgcGVvcGxlIHdobyB3ZXJlIHNtYXJ0IHN0dWRpZWQgbW9yZSBhbmQgd29ya2VkIGhhcmRlciBhdCB0aGVpciBjbGFzc2VzLiAKU3RpbGwsIHRoZXJlIG5vdCBlbm91Z2ggcGl0eSB0byBhZ3JlZSB3aXRoIGhpcyByZWFzb25pbmcgZXZlbiBhIGxpdHRsZSBiaXQuIEp1c3QgZW5vdWdoIHRvIGZlZWwgZW1iYXJyYXNzZWQgZm9yIGhpbSBhbmQgaG9wZSB0aGF0IHNvbWVvbmUgaXMgdGhlcmUgbG9va2luZyBhZnRlciBoaW0gd2hpbGUgaGlzIHdpZmUgaXNuIHRoZXJlIHRvLiAKVGhlIGhvdXNlIGlzIHN0aWxsIHRoZXJlIG5vdywgaW4gdGhlIG1pZGRsZSBvZiB0aGUgYnVpbGRpbmcuLiAKVGhpcyBqdXN0IHJlYWxseSBjYW1lIHRvIGEgaGVhZCBhIHdlZWsgYWdvIHNvIGl0IHNvb28gc2F0aXNmeWluZyB0byBrbm93IHRoYXQgYW55IHNpZ24gb2YgZGlzcmVzcGVjdCBjYW4gYmUgZGVhbHQgd2l0aCBhY2NvcmRpbmdseS4gClRoaXMgaXMgYW4gaW1wb3J0YW50IGNvbmNlcHQ6IEJ5IGFkZGluZyB0byB5b3VyIHJlZ2lzdGVyZWQgYWNjb3VudHMsIHlvdSBoYXZlIGFuIG9wcG9ydHVuaXR5IHRvIHJlYmFsYW5jZSB0aGUgZW50aXJlIHBvcnRmb2xpby4KSSBjb3VsZCBub3QgZ28gYmFjayB0byB0aGUgZGVmYXVsdCBBbmRyb2lkIGxhdW5jaGVyICh0aGUgU2Ftc3VuZyBsYXVuY2hlci90b3AgYmFyIGlzIGV2ZW4gd29yc3QgdGhhbiBNaVVJIElNTykuLiAKU29jaWFsIG1lZGlhIGNvbnRlbnQgb2YgYW55IGtpbmQgaXMgbm90IGFsbG93ZWQuIFRoaXMgaW5jbHVkZXMgYW55dGhpbmcgZnJvbSBSZWRkaXQsIFR3aXR0ZXIsIFR1bWJsciwgRmFjZWJvb2ssIFlvdVR1YmUsIG9yIGFueSBvdGhlciBmb3JtIG9mICJjb21tZW50cyBzZWN0aW9uIiBvbiB0aGUgSW50ZXJuZXQsIGFzIHdlbGwgYXMgaW1hZ2VzIGFjY29tcGFuaWVkIGJ5IHRleHQgZnJvbSB0aG9zZSBwbGF0Zm9ybXMuIApZb3VyIGF3YXJlbmVzcyBpcyBvbmUgdGhpbmcsIHRoZSBwYWluIGlzIHNvbWV0aGluZyBzZXBhcmF0ZS4gClNsZWVwIHRyb3VibGVzIGNhbiBvY2N1ciB0byBhbnkgZm9sa3MuIEV2ZXIgc3RhcmUgYXQgdGhlIGNsb2NrIGR1cmluZyBzZXggYW5kIGdyb2FuIGFzIGluZGl2aWR1YWwgd2hvIGlzIGFsd2F5cyB5b3UndmUgZ290IGEgYnVzeSBkYXkgdG9tb3Jyb3cgdGhlbiBjb3JyZWN0IG1vcmUgYW54aW91cyBiZWNhdXNlIG9mIHRoZSBsYWNrIG9mIHNsZWVwPyBBIHBlcnNvbiB0b3NzIGFuZCB0dXJuIGR1cmluZyB0aGUgbmlnaHQgdG8gYSBtYXNzaXZlIGFycmF5IGFuZCBhd2FrZSBncm9nZ3kgYW5kIHRpcmVkPyBJZiB0aGF0IGlzIHRoZSBjYXNlIGRvIG5vdCB3b3JyeS4gSXQgaGFwcGVucyB0byBhIHRlcnJpZmljIGRlYWwgb2YgZXZlcnlkYXkuIApUaGUgcHJpbWFjeSBvZiBtZWF0IGZvciBtdXNjbGUgYnVpbGRpbmcgZ29lcyBmdXJ0aGVyOiBUaGVyZSdzIGV2aWRlbmNlIHRoYXQgdGhlcmUgaXMgc29tZXRoaW5nIGFib3V0ICJ0aGUgbWVhdCBpdHNlbGYiIHRoYXQgeWllbGRzIG1heGltYWwgbXVzY2xlIGdhaW5zLiBBIGNsYXNzaWMgc3R1ZHkgdGhhdCBjb21wYXJlZCBtdXNjbGUgZGV2ZWxvcG1lbnQgZnJvbSBhIGh5cGVydHJvcGh5IHN0eWxlIHRyYWluaW5nIHByb2dyYW0gaW4gb21uaXZvcmVzIGFuZCB2ZWdldGFyaWFucyB3aG8gYXRlIHRoZSBzYW1lIG1hY3JvbnV0cmllbnQgcmF0aW9zIHNob3dlZCB0aGF0IHRoZSBtZWF0IGVhdGVycyBnYWluZWQgNCBwZXJjZW50IG11c2NsZSBtYXNzIGFuZCBsb3N0IDYgcGVyY2VudCBmYXQgbWFzcywgd2hpbGUgaW5jcmVhc2luZyBUeXBlIElJIGZpYmVyIGFyZWEgYnkgOSBwZXJjZW50LiAKTGFzdCB0aW1lIEkgd2FzIHRoZXJlLCB0aGUgY2FzaW5vIEkgd2FzIGF0IGhhZCBnb3R0ZW4gcmlkIG9mIGEgbG90IG9mIHNtYWxsZXIgc3Rha2VzIGNhc2ggdGFibGVzIGFuZCByZXBsYWNlZCB0aGVtIHdpdGggZWxlY3Ryb25pYyB0YWJsZXMgICBiYXNpY2FsbHkgbGl2ZSB0YWJsZXMgd2l0aCBlbGVjdHJvbmljIGNoaXBzLCBjYXJkcyBhbmQgZGVhbGluZy4gTWFkZSBmb3IgZmFzdGVyIHBsYXksIGFsdGhvdWdoIG5vdCBhcyBtdWNoICJsaXZlIGZlZWwiIGFzIGNhcmRzIGFuZCBjaGlwcy4gVGhhdCB3YXMgNCB5ZWFycyBhZ28gb3Igc28gICBJIGhhdmUgbm8gaWRlYSBpZiB0aGF0J3Mgc3RpbGwgaGFwcGVuaW5nLgpOb3cgY3VyaW91cywgc2hlIGNhc3RzIHJlYWQgbWFnaWMgYW5kIHdhcyBhYmxlIHRvIGRlY2lwaGVyIHRoZSBzZW50ZW5jZSB0aGUgMyBwYXJjaG1lbnRzIG1hZGUgdXAuIEluIG9yZGVyIHRvIGFjdGl2YXRlIHRoZSAzIGV4cGxvc2l2ZSBydW5lcy4uIApIZSBiYXJlbHkgc2FpZCBhIHdvcmQgdG8gYW55b25lIGFsbCBkYXkuIAoiQXMgYSBsaWZlbG9uZyBFc3NlbmRvbiBzdXBwb3J0ZXIsIEkgYmUgYnV5aW5nIGEgTm9ydGggTWVsYm91cm5lIG1lbWJlcnNoaXAgaW4gMjAxOCBpZiBteSBjbHViIGhhc24gY29tbWl0dGVkIHRvIGV4aXQgdGhlIHBva2llcyBieSB0aGUgYmVnaW5uaW5nIG9mIG5leHQgc2Vhc29uLiIgTmVpbCBNdXJyYXksIG9mIENvbW11bml0eSBDbHVicyBWaWN0b3JpYSwgc2FpZCB0aGUgZ2FtYmxpbmcgZXhwZW5kaXR1cmUgYXQgQUZMIGNsdWJzIHZlbnVlcyB3YXMgInByb3ZpZGVkIHdpbGxpbmdseSBieSBjdXN0b21lcnMgd2hvIGdvIHRoZXJlIGZvciB0aGVpciBvd24gZW50ZXJ0YWlubWVudCBwdXJwb3NlcyIsIGFuZCB3YXMgaW52ZXN0ZWQgYmFjayBpbnRvIHRoZWlyIGNsdWJzLiAiVGhlIG1vbmV5IHJhaXNlZCBieSBBRkwgZ28gdG8gdGhlaXIgdHJ1ZSBwdXJwb3NlcyBhbmQgdGhlIGRldmVsb3BtZW50IG9mIGZvb3RiYWxsLCIgaGUgc2FpZC4gCkhvd2V2ZXIsIHRoZSB3YXlzIHRob3NlIGZpbG1zIGNoYW5nZWQgdGhlIGluZHVzdHJ5IGlzIGEgcHJldHR5IHN0YXJrIGNvbnRyYXN0IHRvIHdoYXQgdGhlIEFjYWRlbXkgY2xhaW1zIHRvIGJlIGFib3V0LiAKVGhpcyBpbXBhY3RlZCBtZSBiZWNhdXNlIEkgb25jZSBhdHRlbmRlZCBhIG1pbmlzdHJ5IHRyYWluaW5nIHNjaG9vbCB3aGVuIEkgd2FzIHN0cmFpZ2h0IG91dCBvZiBoaWdoIHNjaG9vbC4gT3VyIFByaW5jaXBhbCBoYXMgdmlzaXRlZCBOYWdhbGFuZCBhbmQgc3Bva2UgYXMgaWYgaXQgd2VyZSBhIGZhaXJ5dGFsZSBwbGFjZSAgIG92ZXIgOTAlIG9mIE5hZ2EgcGVvcGxlIGFyZSBDaHJpc3RpYW5zLCBhbmQgc3BlY2lmaWNhbGx5IEJhcHRpc3RzLiBUaGUgcHJpbmNpcGFsIGtlcHQgZXh0b2xsaW5nIHRoZSB3b25kZXJmdWwgdGhpbmdzIGFib3V0IHRoZSBjb3VudHJ5LCBlc3BlY2lhbGx5IGFzIHRoZSBwb3B1bGF0aW9uIGhhZCBtb3N0bHkgY29udmVydGVkLgpTYW0gdG9vayBhIHR1cm4gYXQgdGhlIHdoZWVsLiAKNiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSXQgZWxhYm9yYXRlcyBvbiB0aGUgYWxsZWdhdGlvbiB0aGF0IGhlIGZhbHNlbHkgcmVwb3J0ZWQgaGUgd2FzIGF0dGFja2VkIG9uIEphbi4gCkhlYXZpZXIgY2hpcHMgYXJlIGFsc28gZWFzaWVyIHRvIGhhbmRsZSBvdmVyYWxsLiAKVGhleSB0aGVuIHVzZSB0aGF0IG9wcG9ydHVuaXR5IHRvIGdldCB0aG9zZSBleWViYWxscyB0byBvdGhlciBzaG93cyBvciBwcm9ncmFtbWluZy5pbiB0aGF0IHdheSBzcG9ydHMgaXMgbW9yZSB2YWx1YWJsZSB0byB0aGUgbmV0d29ya3MgdGhhbiBpdCBpcyBmb3IgdGhlIGxlYWd1ZXMuIFRoZXkgaGF2ZSBvdGhlciB3YXlzIHRvIGxldmVyYWdlIHRob3NlIGV5ZWJhbGxzIGludG8gc29tZXRoaW5nIGVsc2UuIApUaGluZ3MgZ2V0IGRpY2V5IG9uIHRoZSBmbG9wLiBJIHVuZGVyc3RhbmQgeW91IHdhbnQgdG8gYmV0LCBidXQgd2hhdCB3b3JzZSBoYW5kIGlzIGNhbGxpbmc/IFlvdSBhbmQgdGhlIGJvYXJkIGJsb2NrIGFsbCB0aGUgbnV0IGZsdXNoIGRyYXdzIHRoYXQgd291bGQgaGF2ZSBjYWxsZWQgeW91ciAzYmV0IHByZS4gClRhbmRpcyBxdWUgbGEgbm91dmVsbGUgSnJ1c2FsZW0gc29ydCBhaW5zaSBkdSBkc2VydCwgYnJpbGxhbnRlIGRlIGNsYXJ0LCBqZXRleiBsZXMgeWV1eCBlbnRyZSBsYSBtb250YWduZSBkZSBTaW9uIGV0IGxlIFRlbXBsZTsgdm95ZXogY2V0IGF1dHJlIHBldGl0IHBldXBsZSBxdWkgdml0IHNwYXIgZHUgcmVzdGUgZGVzIGhhYml0YW50cyBkZSBsYSBjaXQuIApBbmQgd2VyZSBidWlsdCB1c2luZyBjbGlua2VyIGNvbnN0cnVjdGlvbiwgbWVhbmluZyB0aGF0IHRoZXkgZGlkIG5vdCBoYXZlIGludGVybmFsIHJpYnMgb3IgZnJhbWVzIG9uIHdoaWNoIHRvIGhhbmcgZGVja3MgKHRob3NlIHdlcmUgYWRkZWQgbGF0ZXIpLgpJbiB0aGUgZ2FtZSBhZ2FpbnN0IHRoZSBMYW5rYW5zLCB0aGF0IG90aGVyIHBva2VyIHBsYXllciwgTWFoZWxhIEpheWF3YXJkZW5lLCByZWNlbnRseSByZWluc3RhdGVkIGFzIGNhcHRhaW4sIGFsbW9zdCBwdWxsZWQgdGhlIHdvb2wgb3ZlciBEaG9uaSBleWVzIGJ5IHNodWZmbGluZyB0aGUgYm93bGVycyByaWdodCBhdCB0aGUgZW5kIHNvIHRoYXQgTWFsaW5nYSB3b3VsZCBnZXQgdG8gYm93bCB0aGUgNDh0aCBhbmQgNTB0aCBvdmVycy4gCjE1MDAgYW5kIHdpbiB0aWNrZXQgdG8gMzVLIE1haW4gZXZlbnQuIApUaGlzIGhhcyBhIGVub3Jtb3VzIHByb3NwZWN0aXZlIHVwc2lkZSBmb3IgdGhlIHBsYXllciB3aG8ncyBhIGNvbnNpc3RlbnQgd2lubmVyIHdpdGggYSB3ZWxsIGRlZmluZWQgc3R5bGUgb2YgcGxheS4gClRoZSBCcml0aXNoIGdvdmVybm1lbnQgY29uY2x1ZGVkIHRoYXQgdGhlcmUgd2FzIG5vYm9keSBtb3JlIGV4cGVyaWVuY2VkIG9yIHF1YWxpZmllZCBpbiB0aGUgQnJpdGlzaCBFbXBpcmUgdG8gaGFydmVzdCB0aW1iZXIgdGhhbiB0aGUgQ2FuYWRpYW5zLiBBdCBmaXJzdCB0aGUgaWRlYSB3YXMgdG8gaGFydmVzdCB0aGUgdHJlZXMgZnJvbSBDYW5hZGEgYWJ1bmRhbnQgZm9yZXN0cyBhbmQgYnJpbmcgdGhlbSBvdmVyc2Vhcy4gCkEgcHJpdmF0ZSBmYW1pbHkgc2VydmljZSBvZiByZW1lbWJyYW5jZSBhbmQgY2VsZWJyYXRpb24gb2YgQm9iJ3MgbGlmZSB3aWxsIGJlIGhlbGQuICJSZW1lbWJlciBtZSB3aXRoIHNtaWxlcyBhbmQgbGF1Z2h0ZXIsIGZvciB0aGF0IGlzIGhvdyBJIHdpbGwgcmVtZW1iZXIgeW91IGFsbCAiICBMYXVyYSBJbmdhbGxzIFdpbGRlci4gCiJNci4gS2VsbHkgaXMgc3Ryb25nLCIgR3JlZW5iZXJnIGFkZGVkLiBCaWxsIENvc2J5IHdlbnQgdG8gcHJpc29uIGxhc3QgeWVhciwgYW5kIGZvcm1lciBIb2xseXdvb2Qgc3R1ZGlvIGJvc3MgSGFydmV5IFdlaW5zdGVpbiBpcyBhd2FpdGluZyB0cmlhbC4KV2hpY2ggZmxhdm9yIG9mIFdpbmRvd3MgYXJlIHlvdSBydW5uaW5nIGF0IHdvcms/IFdpbjc/IDguMT8gb3IgMTA/IElmIHlvdSBnZXQgdGhlIFVBQyBwcm9tcHQgdGhhdCBwb3BzIHVwIGFza2luZyBmb3IgYW4gYWRtaW5pc3RyYXRvciBwYXNzd29yZCwganVzdCBoaXQgY2FuY2VsLiBUaGUgaW5zdGFsbGF0aW9uIHdpbGwgY29udGludWUgYW5kIHlvdSBzaG91bGQgc3RpbGwgYmUgYWJsZSB0byBnZXQgRmlyZWZveCBpbnN0YWxsZWQgb24gdGhlIFBDLiAKSWYgYSBtYW4gd2FudHMgdG8gaW5jcmVhc2UgaGlzIHN0YXlpbmcgcG93ZXIsIGhlIGRvZXNuJ3QgaGF2ZSB0byB3YWl0IGZvciBQcmlsaWd5LiBGb3IgdGhlIHBhc3QgMTAgeWVhcnMsIHBoeXNpY2lhbnMgaGF2ZSBiZWVuIHByZXNjcmliaW5nIGNlcnRhaW4gdHlwZXMgb2YgYW50aWRlcHJlc3NhbnRzIGZvciB0aGUgb2ZmIGxhYmVsIHRyZWF0bWVudCBvZiBwcmVtYXR1cmUgZWphY3VsYXRpb24uIFByb3phYyBhbmQgUGF4aWwsIGJvdGggc2VsZWN0aXZlIHNlcm90b25pbiByZXVwdGFrZSBpbmhpYml0b3JzIChTU1JJcyksIGFyZSB0d28gb2YgdGhlIG1vc3QgcG9wdWxhciBjaG9pY2VzLiAKSGF2ZSB0byBiZSBmbGV4aWJsZSB3aXRoIHRoZSBwcm9qZWN0LCB0b28uIApPbmx5IGFjdHVhbCBpbmRpdmlkdWFsIGRldmVsb3BlcnMgcGxlYXNlOiBXZSBhcmUgYWJzb2x1dGVseSBub3QgbG9va2luZyBmb3IgYWdlbmNpZXMsIGRldmVsb3BtZW50IGdyb3VwcyBldGMuCkhlIGRvZXNuIHdhbnQgdG8gcnVzaCBpbnRvIGl0IGFuZCBvbmx5IGRpc2xpa2VzIGl0IHdoZW4gSSBwdXNoIGhpbSBvbiB0aGUgbWF0dGVyIG9yIGdldCBtb3BleSBhYm91dCBzdGlsbCBiZWluZyBub24gZW5nYWdlZC4gSSBjYW4gbGllIHRvIG15c2VsZiBlaXRoZXIsIGNoaWxkcmVuIGFyZW4gdGhlIG9ubHkgdGhpbmcgdGhhdCBJIGNvbmNlcm5lZCBhYm91dC4gSSBoYXZlIGhhZCBhIG1ham9yIHJvbGUgaW4gdGhlIGhhcmQgcGFydCBvZiBoaXMgc3VjY2VzcyBhbmQgb3VyIGxpZmVzdHlsZSBhbmQgSSB3YW50IHRvIGJlIHdpdGggaGltIGZvciB0aGUgZnVuIHBhcnQuSSB3b3VsZCBhbHNvIGJlIGNvbmNlcm5lZCBhYm91dCB0aGUgd2F5IGhlIHNwZW5kaW5nIG1vbmV5LCBidXQgdGhhdCBiZXNpZGVzIHRoZSBwb2ludC4gCk51cm1hZ29tZWRvdidzIHN1c3BlbnNpb24gY2FuIGJlIHJlZHVjZWQgYnkgdGhyZWUgbW9udGhzIGlmIGhlIHBhcnRpY2lwYXRlcyB3aXRoIExhcyBWZWdhcyBwb2xpY2UgaW4gYW4gYW50aSBidWxseWluZyBwdWJsaWMgc2VydmljZSBhbm5vdW5jZW1lbnQsIGFjY29yZGluZyB0byBhIHNldHRsZW1lbnQgYXBwcm92ZWQgVHVlc2RheSBieSB0aGUgTmV2YWRhIEF0aGxldGljIENvbW1pc3Npb24uIFRoZSBjb21taXNzaW9uIG11c3QgYXBwcm92ZSB0aGUgUFNBIGFuZCBob3cgaXQncyBkaXN0cmlidXRlZC4KS2Vzc2VsIGhhcyBhbHNvIHBsYXllZCBpbiB0aGUgUG9rZXJTdGFycyBOSEwgQ2hhcml0eSBTaG9vdG91dCwgcGl0dGluZyBQb2tlclN0YXJzIHByb3MgTmVncmVhbnUsIEpvbmF0aGFuIER1aGFtZWwgYW5kIFZhbmVzc2EgUm91c3Nvd2l0aCBLZXNzZWwgYW5kIE5ITCBBbHVtbmkgbWVtYmVycyBhbGwgZm9yIGNoYXJpbHkuLiAKUHJldHR5IHRoZSBvcHBvc2l0ZS4gCkluIGNvbXBhcmlzb24gdG8gdGhlIG1hcnNobWFsbG93IHNwaW5lZCBPYmFtYSwgQXJub2xkIFNjaHdhcnplbmVnZ2VyIGRlY2lkZWQgbm90IHRvIHN1cHBvcnQgUHJvcCA4IGluIGNvdXJ0LiBJbiBvdGhlciB3b3JkcywgdGhlIEd1YmVuYXRvciwgd2hhdGV2ZXIgaGlzIHBlcnNvbmFsIG9yIGV2ZW4gcG9saXRpY2FsIGJlbGllZnMsIHJlY29nbml6ZXMgdGhhdCBQcm9wIDggaXMgcHJvYmFibHkgdW5jb25zdGl0dXRpb25hbC4gUHJvcCA4IG92ZXJ0dXJuZWQgc2FtZSBzZXggbWFycmlhZ2UgaW4gQ2FsaWZvcm5pYSwgYnV0IGFsc28gZXN0YWJsaXNoZWQgYSBkYW5nZXJvdXMgcHJlY2VkZW50IGluIHdoaWNoIGEgbWFqb3JpdHkgb2Ygdm90ZXJzIGNhbiBkZWNpZGUgdG8gZGVueSByaWdodHMgdG8gYSBtaW5vcml0eS4gV2hhdGV2ZXIgSSBtYXkgdGhpbmsgb2YgdGhlIEd1YmVuYXRvciBwb2xpdGljcyBvciBmaWxtcywgaGUgYXQgbGVhc3Qgc2VlbXMgdG8gaGF2ZSBzb21lIGJhY2tib25lLgpJbiB0aGUgY2FzZSBvZiB0aGUgcHJlc2VudCBjaGllZiwgdGhpcyBuZXR3b3JrIGFsbW9zdCBzdWNjZWVkZWQgaW4gY3JlYXRpbmcgYSBkYW1uaW5nIGNvbnRyb3ZlcnN5LiAKU2ltaWxhciBjYW4gYmUgZG9uZSBvbiBhIG1hY3JvIHNjYWxlLiBCYW5rcyBsZW5kIHRvIHJhaWxyb2FkIGNvbXBhbmllcyB3aG8gYnVpbHQgcmFpbHJvYWRzLiBOb3cgYWxsIG9mIEFtZXJpY2EgaGFzIGEgbmV3IGNhcGFiaWxpdHkgdG8gdHJhbnNwb3J0IGdvb2RzIGFyb3VuZCB0aGUgY291bnRyeSBmYXN0ZXIgdGhhdCB3ZSBkaWRuIGJlZm9yZSBib29zdGluZyBub3QganVzdCByYWlscm9hZCBjb21wYW5pZXMgYnV0IGFueSBjb21wYW55IHRoYXQgY2FuIG5vdyByZWFjaCBhY3Jvc3MgdGhlIGNvdW50cnkuCkxvd2VzdCBwcmljZVByb3BlcnRpZXMgcmFua2VkIHVzaW5nIGV4Y2x1c2l2ZSBUcmlwQWR2aXNvciBkYXRhLCBpbmNsdWRpbmcgdHJhdmVsbGVyIHJhdGluZ3MsIGNvbmZpcm1lZCBhdmFpbGFiaWxpdHkgZnJvbSBvdXIgcGFydG5lcnMsIHByaWNlcywgYm9va2luZyBwb3B1bGFyaXR5LCBsb2NhdGlvbiBhbmQgcGVyc29uYWwgdXNlciBwcmVmZXJlbmNlcy4KVGhlIGNocm9uaWMgZm9yZ2V0ZnVsbmVzcywgdGhlIHNoeW5lc3MgYW5kIGFueGlldHkgIHRoZXkgZmVlbCBtb3JlIGxpa2UgcGVyc29uYWxpdHkgdHJhaXRzIHRoYW4gcHJvYmxlbXMuIEJ1dCB0aGV5IGludGVyZmVyZSB3aXRoIG15IGFiaWxpdHkgdG8gbGl2ZSBhIG5vcm1hbCBsaWZlLCBzbyBJIGhhdmUgdG8gdHJ5IG15IGJlc3QgdG8gZGlzdGFuY2UgbXlzZWxmIGZyb20gdGhhdC4uIApCdXJnbmVyLiAKV2Vhc2xleSwgbGVhbmluZyBmb3J3YXJkIGluIGhpcyBzZWF0LiAKSSBsaWtlIGl0LCB0b28uIApJIGp1c3QgbWVhbiB0byBvbmUgcGVyc29uIHNoZSBtaWdodCBsb29rIHdoaXRlLiBCdXQgdG8gYW5vdGhlciBwZXJzb24gKG1heWJlIG5hdGl2ZSwgd2hvIGlzIGFyb3VuZCBtb3JlIG5hdGl2ZSBwZW9wbGUgYW5kIGNhbiBzcG90IHRob3NlIHNwZWNpZmljIGZlYXR1cmVzIGVhc2llciksIHNoZSBtaWdodCBiZSBlYXN5IHRvIHBlZyBhcyBtaXhlZCBQb0MuIApBIGZldyBtb21lbnRzIGxhdGVyLCB0aHJlZSBtb3JlIG9mZmljZXJzIGVudGVyIHRoZSBzdG9yZS4gVHdvIG9mIHRoZW0gYXBwZWFyIHRvIGhhdmUgdGhlaXIgd2VhcG9ucyBkcmF3bi4gT25lIG9mIHRoZSBvZmZpY2VycyB0aGVuIGNpcmNsZSBzIGJlaGluZCB0aGUgZnJvbnQgZGVzayBhbmQgcG9pbnQgcyB0aGUgbW91bnRlZCBzZWN1cml0eSBjYW1lcmEgdG93YXJkIHRoZSBjZWlsaW5nLgpBbHNvLCBqb2luaW5nIGEgcHJvZmVzc2lvbmFsIHNvY2lldHkgKGxpa2UgRVNBLCB0aGUgZmlzaGVyaWVzIHNvY2lldHksIGV0Yykgd2lsbCBwcm92ZSB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBhbmQgc3RhcnQgdG8gZ2l2ZSBjb25uZWN0aW9ucy4gCk5vdGhpbmcgaXMgZ29vZCBlbm91Z2guIExlYXJuIHRvIHByb3RlY3QgeW91cnNlbGYsIGxlYXJuIHlvdXIgbG9jYWwgbGF3cyBvbiBoYXJhc3NtZW50IGFuZCBob3cgdG8gcHJvdmUgaXQuIApBIHVuYW5pbW91cyByZXNvbHV0aW9uIGlzIGEgdm90ZSBieSBhbGwgdGhlIHZvdGVzIG9mIGFsbCB0aGUgZWxpZ2libGUgdm90ZXJzIHRvIHZvdGUgaW4gZmF2b3VyIG9mIHRoZSBjaGFuZ2VzLiBZZXMsIHRoYXQgd291bGQgYmUgMzAwIDMwMCBhcmUgcmVxdWlyZWQgdG8gdm90ZSBpbiBmYXZvdXIuIApNY0tpbm5leSBwb2tlciBjbHViIGNsb3NlcyByYXRoZXIgdGhhbiBmYWNlIGNyaW1pbmFsIGNoYXJnZXMgb3ZlciBpbGxlZ2FsIGdhbWJsaW5nCkhvd2V2ZXIgd2hpbGUgdGhlIHZhcG9yIGluZHVzdHJ5IGNsZWFybHkgaW5kaWNhdGVzIHRoZSBleGFjdCBsZXZlbCBvZiBuaWNvdGluZSB3aXRoaW4gdGhlIGJvdHRsZSwgbW9zdCB0b2JhY2NvIGNvbXBhbmllcyBvdXRyaWdodCByZWZ1c2UgdG8gbGlzdCBpbiBhbnkgd2F5IGhvdyBtdWNoIG5pY290aW5lLCBhcyB3ZWxsIGFzIHRoZSBtYW55IG90aGVyIGFkZGljdGl2ZSBjaGVtaWNhbHMgZm91bmQgaW4gYW4gYXZlcmFnZSBjaWdhcmV0dGUgYXJlIHdpdGhpbi4gU28gcmVhbGx5IGl0IGNvbWVzIGRvd24gdG8gdXNlci4gQXMgYSByZXNwb25zaWJsZSBhZHVsdCB5b3UgaGF2ZSB0byBtYWtlIHlvdXIgb3duIGNob2ljZXMsIGFuZCBkZWNpZGUgd2hlbiB5b3UgaGF2ZSBoYWQgZW5vdWdoLiAKQ2hpbmdsZXRyb25lICA1IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpCZWNhdXNlIHRoZXkgd2VyZSBhbmQgYXJlIHBvbGx1dGVycwoiRGV0ZWN0aXZlcyBhcmUgc2NhdHRlcmVkIGluIGFsbCBkb3dudG93biBzdG9yZXMgbm93IGFuZCB3aWxsIGJlIHVudGlsIGFmdGVyIHRoZSBob2xpZGF5cy4gIkl0IGlzIGFuIGVhc3kgbWF0dGVyIGZvciB0byB0YWtlIGEuIFB1cnNlIG91dCBvZiBhLiAKRXNwZWNpYWxseSByb3VuZCB0aGUgZG9vciBhcmVhLiAKVGhpcyBtYWtlcyB0aGUgcG90ICQ2LiAKV2hldGhlciB5b3UgYXJlIHBsYW5uaW5nIHRvIHJ1biBhIGdyZWF0IGdhbWUgYXQgeW91ciBob21lIG9yIGlmIHlvdSBoYXZlIGEgaHVnZSBiYXNoIHBsYW5uZWQgYW5kIHlvdSB3YW50IGEgcGljdHVyZSBwZXJmZWN0IGdhbWJsaW5nIGFyZWEgc2V0IHVwLCB5b3UnbGwgZmluZCB0aGF0IHRoZXNlIGNoaXBzIGFyZSB0aGUgd2F5IHRvIGdldCBpdC4gCkhhdmUgeW91IGV2ZXIgY2hlYXRlZCBpbiBmYWNlYm9vayB0ZXhhcyBob2xkZW0gcG9rZXIgdG8gZ2l2ZSB5b3Vyc2VsZiBtb3JlIGZhY2ViYnkgRmFjZWJvb2tQb2tlckNoaXAgOSB5ZWFycyBhZ280SHViUGFnZXMgVHV0b3JpYWxzIGFuZCBDb21tdW5pdHlXaHkgY2FuJ3QgSSBsb2cgaW4gdG8gaHVicGFnZXMgb24gbXkgYW5kcm9pZCBwaG9uZT9ieSBEYXZpZCBTcHJvdWxsIDcgeWVhcnMgYWdvV2h5IGNhbid0IEkgbG9nIGluIHRvIGh1YnBhZ2VzIG9uIG15IGFuZHJvaWQgcGhvbmU/NEdhbWVzLCBUb3lzLCBhbmQgSG9iYmllc3doeSBjYW50IGkgc3RvcCBwYWx5aW5nIHBva2VyIG9ubGluZT9ieSBzd2VkdmlraW5nIDggeWVhcnMgYWdvd2h5IGNhbnQgaSBzdG9wIHBhbHlpbmcgcG9rZXIgb25saW5lP1doeSBjYW4ndCBJIGxvZyBpbnRvIEh1YnBhZ2VzIGluIEZpcmVmb3g/YnkgQmVja2kgUml6enV0aSA0IHllYXJzIGFnb1doeSBjYW4ndCBJIGxvZyBpbnRvIEh1YnBhZ2VzIGluIEZpcmVmb3g/TXkgYmVzdCBmcmllbmQgY2FuLCBidXQgSSdtIG5vdCBhYmxlIHRvIGRvIGl0LiAKQXByaWwgMTUsIFRoZWF0ZXIsIDUyNCBNYWluIFN0LiwgU3Ryb3Vkc2J1cmcuIFRpY2tldHM6ICQ0OCwgJDYwLiBJcyBbQ3JlZWQgdG91cmluZyByaHl0aG0gZ3VpdGFyaXN0XSBFcmljIEZyaWVkbWFuIGdvaW5nIHRvIGJlIHdpdGggeW91IHRoaXMgdGltZT8gW0hlIHdhcyB3aXRoIGhpbSBmb3IgdGhlIGZhbGwgc2hvd3NdLiAKQXJlIHlvdSBhIGdhbWUgZGV2ZWxvcGVyPyBEbyB5b3UgdW5kZXJzdGFuZCB3aGF0IGdvZXMgaW50byBnYW1lIGRldmVsb3BtZW50PyBEZXNpZ24sIHRlc3RpbmcsIGl0ZXJhdGlvbiwgcmUgZGVzaWduLCB0ZXN0aW5nLCBpbXBsZW1lbnRhdGlvbiwgUUEsIG9uIGFuZCBvbj8gSWYgeW91IGRvLCB0ZWxsIHVzLCBzbyB3ZSBjYW4gYW5hbHl6ZSBZT1VSIHdvcmsuLiAKQWxzbyBzZW1pIHJlbGF0ZWQgdmVudGluZzogSSBjYW4gc3RhbmQgbXkgZ3JhbmRwYXJlbnRzIGFza2luZyBtZSB3aGVuIEkgZ29pbmcgdG8gZmluZCBhIE5pY2UgSmV3aXNoIEdpcmwgb3IgZ28gb24gQmlydGhyaWdodCBvciBqb2luIEhpbGxlbC4gCnJhZmZsZSBydWxlcyBwaXF1ZSBpbnRlcmVzdCBvZiBkcmF3IG9yZ2FuaXplcnMKVmVyeSBjb250cm9sbGVkLCBsb3cgd2VpZ2h0IGZvY3VzIG9uIHRoZSBiYWNrIG11c2NsZXMuIApUaGVVbmRlcmNvdmVyTWFuICAzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KSSByZWFwIHRoZSBiZW5lZml0cyBvZiBjb2xvbmlhbGlzbSwgYW5kIEkgaGF0ZSB0aGUgYnJpdHMgZm9yIGNvbG9uaXppbmcuIApUaGUgd29tYW4gd2FzIGNoYXJnZWQgd2l0aCBjYXVzaW5nIG1lbnRhbCBoYXJtIHRvIGEgY2hpbGQgYW5kIHRyeWluZyB0byBleHRvcnQgbW9uZXkgZnJvbSBNYXJlayB0byByZW1haW4gcXVpZXQgYWJvdXQgd2hhdCB3YXMgZG9uZSB0byBoZXIgZGF1Z2h0ZXIsIGFjY29yZGluZyB0byB0aGUgcmVjb3Jkcy4gVGhlIEFzc29jaWF0ZWQgUHJlc3MgZG9lc24ndCBpZGVudGlmeSB2aWN0aW1zIG9mIHNleHVhbCBjcmltZXMgYW5kIGlzIG5vdCByZXBvcnRpbmcgdGhlIHdvbWFuJ3MgbmFtZSB0byBwcm90ZWN0IGhlciBkYXVnaHRlcidzIGlkZW50aXR5LgpIb3dldmVyLCBtb3N0IG9mIHRoZSBjaGlwcyBvbiBlQmF5IGFuZCBBbWF6b24gYXJlIG1hZGUgb2YgcGxhc3RpYyBhbmQgaGF2ZSBtZXRhbCBpbnNlcnRzLiBQcm9mZXNzaW9uYWxzIGFuZCBjYXNpbm9zIHVzZSBjbGF5IGFuZCBjZXJhbWljIGNoaXBzLiAKSXQgd2Fzbid0IHRpbGwgMTk2NCB0aGF0IGEgc2Vjb25kIGZlYXR1cmUgYmVjYW1lIHBvc3NpYmxlLiAoTydTaGVhIGRpcmVjdGVkIHRoZSBzZWNvbmQgYW5kIHRoaXJkIGZlYXR1cmVzLikgSW4gdGhlIG1lYW50aW1lIGhlIGNvbnRpbnVlZCB0byBtYWtlIHNwb25zb3JlZCBkb2N1bWVudGFyaWVzIHRoYXQgd2VyZSAic2F0aXNmeWluZyBhbmQgYWJzb3JiaW5nLiIKU28gV29sZmllIG5lZWRlZCBhICJ0aHJlYXQiIGZyb20gSXJhcSBhbmQgaGUgZm91bmQgb25lLiAKU3VmZm9sayBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkgVGhvbWFzIFNwb3RhIGJlZ2FuIGludmVzdGlnYXRpbmcgaWxsZWdhbCBzcG9ydHMgZ2FtYmxpbmcgd2hlbiBoZSB0b29rIG92ZXIgdGhlIG9mZmljZSBpbiAyMDAxIGJlY2F1c2Ugb2YgdGhlIGVmZmVjdCBpdCBjYW4gaGF2ZSBvbiBhIGNvbW11bml0eSwgYWNjb3JkaW5nIHRvIENsaWZmb3JkLiAKQ2VsaWFjcyB3aG8ga2VlcCBlYXRpbmcgZ2x1dGVuIGhhdmUgYSBzaXhmb2xkIGhpZ2hlciByaXNrIG9mIGRldmVsb3BpbmcgY2FuY2VyIGFuZCBpbmNyZWFzZWQgcmlza3Mgb2Ygb3N0ZW9wb3Jvc2lzIGFuZCBvdGhlciBhdXRvaW1tdW5lIGNvbmRpdGlvbnMuCklrIGJlbiBpbmRlcmRhYWQgb29rIGJlbmlldXdkLCBvZiB6ZSBlY2h0IGdlZW4gcGVuc2lvZW4gaGVlZnQgb3BnZWJvdXdkIHZpYSBlZW4gcGVuc2lvZW5mb25kcy4gCkJ1dCBub3cgaSBvbmx5IGhhdmUgdGhlIG9wdGlvbiB0byBsb29rIGF0IGlsZXZlbHMgYW5kIHBvc3NpYmx5IHdoaXNwZXJlZCBhaGNoaWV2bWVudHMuIApEaWFiZXRlcyBUeXBlIDIgUmV2ZXJzYWwgd2l0aCBkaWV0CkZlbG9ueSBhbmQgcHJpc29uIHRpbWUuIApTY2FsaW5nIGJhY2sgYW5kIHJlZHVjaW5nIGNvc3RzIGhlbHBlZCBoaW0gZ2V0IGJhY2sgb24gY291cnNlLiBJdCB0b29rIG5lYXJseSB0aHJlZSB5ZWFycyB0byBnZXQgTW9kcm9iZXMgcnVubmluZyBmcmVlIGFuZCBjbGVhciBhZ2Fpbi4gRHVyaW5nIHRoYXQgdGltZSwgU2FsIERlYnVzIHJlc2VhcmNoZWQgZW52aXJvbm1lbnRhbGx5IHN1c3RhaW5hYmxlIGZhYnJpYyBvcHRpb25zLgpTbyBJIHdvdWxkIHBpY2sgYSBsYW5ndWFnZSBzaW1wbHkgYmFzZWQgb24gdHdvIHRoaW5nczogMSkgeW91ciB0YXN0ZSAvIHdoYXQgeW91J3JlIGNvbWZvcnRhYmxlIHdpdGggYW5kIDIpIHdoYXQncyBhdmFpbGFibGUgb24geW91ciB3ZWIgc2VydmVyLiBCdXQgSSd2ZSBkb25lIGEgbG90IG9mIFBIUCBhbmQgSmF2YSB0b28gYW5kIGRhYmJsZWQgaW4gdmFyaW91cyBvdGhlciBsYW5ndWFnZXMgYW5kIGxpa2UgSSBzYWlkLCBJIHJlYWxseSB0aGluayBpdCBib2lscyBkb3duIHRvIHBlcnNvbmFsIHRhc3RlIGF0IHRoaXMgcG9pbnQgaW4gaGlzdG9yeS4uIApJbiB0aGUgc2FtZSB5ZWFyIHRoYXQgdGhvc2UgYm90dG9tIDIwIG1pbGxpb24gdGF4cGF5ZXJzIHBhaWQgNTBibiBpbiBpbmNvbWUgdGF4LCB0aGUgbmV0IHdlYWx0aCBvZiB0aGUgVUsgcm9zZSBieSBuZWFybHkgaGFsZiBhIHRyaWxsaW9uIHBvdW5kcywgeWV0IGFsbW9zdCBub25lIG9mIHRoYXQgZ2FpbiB3YXMgdGF4ZWQuIEFzIHRoZSBjaGFuY2VsbG9yIGxpbmVzIHVwIHRoZSBzcHJpbmcgc3RhdGVtZW50LCB0aGUgZGViYXRlIHNob3VsZCBub3QgYmUgYWJvdXQgaW5jb21lIHRheCBvciBwZXJzb25hbCBhbGxvd2FuY2VzLCBidXQgaG93IHdlIHJlb3JpZW50YXRlIHRoZSB0YXggc3lzdGVtIHRvIHdoZXJlIHRoZSBtb25leSByZWFsbHkgbGllcy4gClZpbGxhaW4gaXMgYSBtaWQgMjBzIHdoaXRlIGd1eSB3ZWFyaW5nIGEgaG9vZGllIHdpdGggYWxsIHRoZSBzdWl0cyBvZiBjYXJkcyBvbiBpdC4gTm90IHN1cmUgd2hhdCB0byB0aGluayBhYm91dCB0aGF0LiAKTWFydGluIFNjaHVseidzIFNvY2lhbCBEZW1vY3JhdHMgKFNQRCkgdG9vayBvdmVyIDM3IHBlcmNlbnQgb2Ygdm90ZXMgaW4gdGhlIHdlc3Rlcm4gc3RhdGUgb2YgTG93ZXIgU2F4b255LCB0aGUgaG9tZSBvZiBWb2xrc3dhZ2VuLCBiZWF0aW5nIE1lcmtlbCdzIENEVSBhdCAzMy40IHRvIDM0LjMgcGVyY2VudCwgYWNjb3JkaW5nIHRvIGVzdGltYXRlcyByZWxlYXNlZCBieSBwdWJsaWMgYnJvYWRjYXN0ZXJzIEFSRCBhbmQgWkRGLgpQaGlsIEhlbGxtdXRoIEpyLiAgIFByb2Zlc3Npb25hbCBQb2tlciBQbGF5ZXIgUmV2aWV3IFNlcmllcwpJJ20gbm90IGluc2lzdGluZyBhbnl0aGluZyBtYW4uIEFsbCBJJ20gc2F5aW5nIGlzIHJhY2lzbSBpbiBnZW5lcmFsIGlzIG5vdCBvbmx5IHdyb25nLCBidXQgYW5ub3lpbmcgYmVjYXVzZSBpbiB0b2RheSdzIHdvcmxkIHdlIGFyZSBkZWNpZGluZyB3aG8gaXMgYWxsb3dlZCB0byBiZSByYWNpc3QgYW5kIHdobyBpc24ndC4gTGlrZSBJIHNhaWQgYmVmb3JlIHRoZSBkaXZpZGUgYmV0d2VlbiBibGFja3MgYW5kIHdoaXRlcyBpcyBqdXN0IGdvbm5hIGtlZXAgZ2V0dGluZyB3b3JzZSB1bnRpbCB3ZSBzdG9wIHNheWluZyByYWNpc3Qgc2hpdCB0b3dhcmRzIG9uZSBhbm90aGVyLiBXZSdyZSBnb25uYSBwb2ludCBmaW5nZXJzIGF0IGVhY2ggb3RoZXIgZm9yIGJlaW5nIHJhY2lzdCB1bnRpbCBhIGNvbWV0IGNvbWVzIGFuZCB3aXBlcyBhbGwgb2Ygb3VyIGV4aXN0ZW5jZSBvZmYgdGhlIGZhY2Ugb2YgdGhlIHBsYW5ldC4gVGhlbiBtYXliZSB3ZSBjYW4gc3RhcnQgb3ZlciB3aXRoIGEgY2xlYW4gc2xhdGUuClRoZXJlIGFyZSBzbyBtYW55IHBlb3BsZSBpbiBoZXJlIHdobyBoYXZlIG5ldmVyIHBsYXllZCBhIHNpbmdsZSBwb3NzZXNzaW9uIGFnYWluc3QgYSBnb29kIHNjb3Jlci4gSGFyZGVuIGlzIHdpdGhvdXQgYSBkb3VidCBvbmUgb2YgdGhlIG1vc3QgZ2lmdGVkIHNjb3JlcnMgb2YgYWxsIHRpbWUgYW5kIHRoZXkgZG9uIGhhdmUgYW55IGZyYW1lIG9mIHJlZmVyZW5jZSB0byBpdC4gCkl0J3MgdGlyZWQgYW5kIHJ1bmRvd24sIGFsbW9zdCBhIGhlYWx0aCBoYXphcmQgaW4gZmFjdCwgYnV0IGlmIHlvdSBldmVyIGdldCB0byBMYXMgVmVnYXMsIHlvdSBoYXZlIHRvIGdvIHRvIEJpbmlvbnMgYW5kIHBsYXkgYSBsaXR0bGUgcG9rZXIsIHRoZSBwbGFjZSByZWVrcyBvZiBwb2tlciB0cmFkaXRpb24gYW5kIGhpc3RvcnkuLiAKVGhlIGJsaW5kcyBhcmUgaW5jcmVhc2VkIHdoZW4gdGhlIGdhbWUgc3dpdGNoZXMgZnJvbSBObyBMaW1pdCB0byBMaW1pdCwgdG8gZW5zdXJlIHNvbWUgY29uc2lzdGVuY3kgaW4gdGhlIGF2ZXJhZ2UgcG90IHNpemUgaW4gZWFjaCBnYW1lLiBUaGUgYmV0dGluZyBydWxlcyBvbiBlYWNoIHJvdW5kIGZvbGxvdyB0aGUgcnVsZXMgZm9yIHRoYXQgZ2FtZSwgYXMgZGVzY3JpYmVkIGFib3ZlLiBCdXkgaW4gSW4gUG90IExpbWl0IGFuZCBObyBMaW1pdCwgdGhlIGdhbWVzIGFyZSByZWZlcnJlZCB0byBieSB0aGUgc2l6ZSBvZiB0aGVpciBibGluZHMgKGZvciBleGFtcGxlLCBhIDEvMiBOTCBvciBQTCBIb2xkZW0gZ2FtZSBoYXMgYSBzbWFsbCBibGluZCBvZiAkMSBhbmQgYSBiaWcgYmxpbmQgb2YgJDIpLiAKQWxsIHRoZXNlIGFjdGl2aXRpZXMgd2lsbCBoZWxwIHlvdSByZWxheCB3aGlsZSBlbmpveWluZyBlYWNoIG90aGVyJ3MgY29tcGFueSBhbmQgdGhlIHNjZW5lcnkuLiAKT3VyIG9mZmljZSBkb24gV2UgaGF2ZSBhY3R1YWwgS1BJcyB0aGF0IHJlcXVpcmUgcGVyZm9ybWFuY2UsIHBlb3BsZSB0aGF0IGFyZSAobWFpbmx5KSBoYXBweSBpbiB0aGVpciBqb2JzLCBhbmQgd2hpbGUgdGhlcmUgYSBsYXRlbnQgY2xvY2sgaW4gY2xvY2sgb3V0IGZlYXIgZnJvbSBHb2QgaW4gaGVhZG9mZmljZSwgY29taW5nIGVhcmx5IG9yIGxhdGUgb3IgbGVhdmluZyBpcyBzZWVuIGFzIG5vcm1hbCBhcyBsb25nIGFzIGEgbWl4IG9mIGVmZm9ydCBhbmQgcmVzdWx0cyBhcmUgdGhlcmUuIFRoaW5ncyB0aWNrIGFsb25nIHdlbGwuIFNoZSBhIGJpZyBwYXJ0IGluIGNyZWF0aW5nIHRoaXMgY3VsdHVyZSwgYnV0IHNhbmUgdW5saWtlIHRoZSBWaXZpYW4gdGhhdCB0aGUgdGhpcmQgaW4gb3VyIHRyaW8uIEhhcGkgbG9uZyB0ZXJtIHBsYW4gaXMgdG8gY29udGludWUgdG8gY29udGludWUgd29ya2luZyB0b2dldGhlci4gWW91IGRvbiBzaGl0IHdoZXJlIHlvdSBzbGVlcCBhbmQgSSBoYXZlIG5vIGRlc2lyZSB0byBzZXR0bGUgZG93biwgYXQgbGVhc3Qgbm90IHlldC4KU2ltdmFzdGF0aW4gRWZmZWN0cyBvbiBTa2VsZXRhbCBNdXNjbGUgICBSZWxhdGlvbiB0byBEZWNyZWFzZWQgTWl0b2Nob25kcmlhbCBGdW5jdGlvbiBhbmQgR2x1Y29zZSBJbnRvbGVyYW5jZS4gCkhvdyBUbyBHaXZlIFlvdXIgV2lmZSBhIE1hc3NhZ2UKU2hlIHNhaWQgaSBhbSBsaWtlIG9uZSBvZiB0aGUgcmVhbGVzdCBwZW9wbGUgb3V0IHRoZXJlLiBTaGUgc2FpZCBtZSBhbmQgaGVyIHdpbGwgcm9jayB0b2dldGhlciBmb3JldmVyLiBCdXQgdGhlc2UgcGFzdCA3IGRheXMgaSBmZWVsIGxpa2UgbWUgYW5kIGhlciB3ZXJlIGdldHRpbmcgZHJ5LCBsaWtlIGlmIG91ciBib25kIHdhc24ndCB0aGUgc2FtZSAsIGxpa2UgaWYgc29tZXRoaW5nIHdhcyB3cm9uZyB3aXRoIGhlci4gClphbWJvbmkgQ28uLCBJbmMuIApBIHNwbGl0IGluIE9uZSBOYXRpb24gZG9lc24gaGVscCB0aGUgY29hbGl0aW9uIGdldCB0aGUgZGVhbCB0aHJvdWdoLCBldmVuIGlmIGNoYW9zIGluIHRoZSBwYXJ0eSBoZWxwcyB0aGUgY29hbGl0aW9uIGluIHRoZSBsb25nIHJ1biB3aW4gYmFjayBjb25zZXJ2YXRpdmUgdm90ZXJzLiBDb3JtYW5uIHdpbGwga2VlcCBuZWdvdGlhdGluZywgYnV0IHRoZSBzZW5hdGUgd2hpc3BlcmVyIG1pZ2h0IGhhdmUgZm91bmQgaGlzIHRvdWdoZXN0IG9wcG9uZW50IGluIERlcnJ5biBIaW5jaC4gVGhlIFZpY3RvcmlhbiBzZW5hdG9yIGlzIHBsYXlpbmcgdGhlIHNhbWUgdG91Z2ggcG9rZXIgZ2FtZSBhcyBDb3JtYW5uLCBhbmQgaGUgd2FudHMgdGhlIGN1dHMgdG8gYmUgbGltaXRlZCB0byBjb21wYW5pZXMgd2l0aCB0dXJub3ZlcnMgdW5kZXIgJDUwMCBtaWxsaW9uLiAKQmVnaW4gYSB3YWxraW5nIHJvdXRpbmUgdmVyeSBtb2Rlc3RseSBhbmQsIG92ZXIgd2Vla3MgYW5kIG1vbnRocywgc2xvd2x5IGluY3JlYXNlIGl0cyBpbnRlbnNpdHkuIFlvdSBtaWdodCBzdGFydCBvdXQgYnkgd2Fsa2luZyBmb3IgMjAgbWludXRlcyBhIGRheSwgdGhyZWUgZGF5cyBhIHdlZWssIGFuZCBncmFkdWFsbHkgYWRkIHRvIGJvdGggdGhlIGxlbmd0aCBhbmQgZnJlcXVlbmN5IG9mIHlvdXIgd2Fsa3Mgc28gdGhhdCwgYWZ0ZXIgdGhlIGZpcnN0IHRocmVlIG9yIGZvdXIgbW9udGhzLCB5b3UgYXJlIHdhbGtpbmcgZm9yIDQ1IG1pbnV0ZXMgYSBkYXksIGZpdmUgZGF5cyBhIHdlZWsuIFRoZSBsYXR0ZXIgc2NoZWR1bGUgICBpZiB5b3Ugd2FsayBhdCBhIHBhY2Ugb2YgYXQgbGVhc3QgdGhyZWUgbWlsZXMgYW4gaG91ciAgIHNob3VsZCBwcm9kdWNlIGFsbCB0aGUgYWVyb2JpYyBiZW5lZml0cyBtZW50aW9uZWQgaW4gdGhlIGZpcnN0IHBhcnQgb2YgdGhpcyBwYWdlLiAKVGhpcyBoYW5kIGhhcyBhbG1vc3Qgbm8gbG93IHBvc3NpYmlsaXRpZXMgc2luY2UgdGhlIHNpeCBpcyB0b28gaGlnaC4gSWYgeW91IGhpdCBhIGZsdXNoIG9yIGEgc3RyYWlnaHQsIGVpdGhlciBvbmUgaXMgdG9vIGxvdyB0byB3aW4gaW4gbW9zdCBjYXNlcy5UaGlzIGxhc3QgZXhhbXBsZSBpbGx1c3RyYXRlcyBhbiBpbXBvcnRhbnQgcG9pbnQuIApXaG8gImdhdmUiIHlvdSB0aGF0IGd1aWRlPyBZb3Ugc2hvdWxkIGFic29sdXRlbHkgcmVwb3J0IGhpbSB0byB0aGUgZW50aXR5IGluIHF1ZXN0aW9uLCB3aGljaCBJIHF1aXRlIHN1cmUgd291bGQgbm90IGFwcHJvdmUgb2YgaGltIGVucmljaGluZyBoaW1zZWxmIGxpa2UgdGhhdC4KTEFUQiBoYXMgc29tZSBjcmF6eSBhY3Rpb24sIGFuZCB0aGUgYmVzdCBwbGF5ZXJzIGFyZSBvbiB0aGUgRnJpZGF5IHN0cmVhbS4gCk1heWJlIHlvdSBwdXQgb24gc29tZSBnb29kIG11c2ljIG9uIHRoZSBzdGVyZW8uIApNdXNsaW1zIHRoaW5rIHRoZSB0aGlyZCBvbmUgd2FzIHRoZSBiZXN0LCBhbmQgTW9ybW9ucyBsaWtlZCB0aGUgc2Vjb25kIG9uZSBzbyBtdWNoLCB0aGV5IHN0YXJ0ZWQgd3JpdGluZyBmYW5maWN0aW9uIHRoYXQgZG9lc24ndCBmaXQgd2l0aCBBTlkgb2YgdGhlIHNlcmllcyBjYW5vbi4uIApDYW4gY29udHJvbCB0aGUgZ2FtZSBmcm9tIHRoZSBiYWNrIGVuZCBhbmQgZnJvbSBhIHRlYW0gcGVyc3BlY3RpdmUsIHRoYXQgc29tZXRoaW5nIHdlIG5lZWQuIEZvciBoaW0gYW5kIG91ciBncm91cCBpZiB0aGF0IChzaWduaW5nKSBpcyB3aGF0IGVuZHMgdXAgaGFwcGVuaW5nIGl0IGEgc2hvdCBpbiB0aGUgYXJtLiBJbiB0aGlzIHdlZWsncyBXaGl0ZSBUb3dlbCBwb2RjYXN0LCBFZCBXaWxsZXMgam9pbnMgUGF1bCBDaGFwbWFuIHRvIGRlbHZlIGludG8gdGhlIGRlYmF0ZSBvdmVyIEJyb2NrIEJvZXNlciBiZWluZyBhIGdyZWF0IHlvdW5nIHBsYXllciBvciBtZXJlbHkgYSBnb29kIHBpZWNlLiBUaGUgcG9kY2FzdCBhbHNvIGFza3MgaWYgVmFuY291dmVyIGlzIGEgdG94aWMgbWFya2V0IGluIGxpZ2h0IG9mIEpvbmF0aGFuIERhaGxlbiBkZWxldGluZyBoaXMgc29jaWFsIG1lZGlhIGFjY291bnRzIGJlY2F1c2Ugb2YgYWJ1c2UgZnJvbSBDYW51Y2tzIGZhbnMuCkkgdGhpbmssIHdoZXRoZXIgdHJ5aW5nIHRvIG9yIG5vdCwgeW91IGlsbHVzdHJhdGVkIHRoZSBzeXN0ZW1hdGljIHNpY2tuZXNzIG9mIHNvY2lldHkuCkkga25vdyBhY3RpdmUgbWVtYmVycyBvZiB0aGUgQ2h1cmNoIHRoYXQgYXJlIGluIGdvb2Qgc3RhbmRpbmcgaW4gdGhlIENodXJjaCB3aG8gZHJpbmsgY2FmZmVpbmF0ZWQgc29kYXMgb24gYSBkYWlseSBiYXNpcy4gCk1hbnksIG1hbnkgb3RoZXIgZmFtaWxpYXIgZmFjZXMgcG9wIHVwIHRocm91Z2hvdXQgdGhlIGNvdXJzZSBvZiB0aGUgZmlsbSwgc29tZXRpbWVzIGluIG9kZGx5IHNtYWxsIHJvbGVzLiAKVXN1YWxseSB0aGUgb3RoZXIgaGFuZHMgYXJlIG5vIGdvb2QsIHNvIHRoZSBBSSBwbGF5ZXJzIGRvIG5vdCBiZXQgYmlnIHNvIHlvdSBlbmQgdXAgd2lubmluZyBieSB0YWtpbmcgdGhlIGluaXRpYWwgYmV0cyBvbmx5LiAKQ29uc3RydWN0aW9uIGV4cGVydHMgdG9sZCBtZSB0aGVzZSBpbWFnZXMgbW9zdCBsaWtlbHkgc2hvdyBzaXRlIHJlbWVkaWF0aW9uOiB0YWtpbmcgYXBhcnQgYSBidWlsZGluZyBhbmQgYnVyeWluZyB0aGUgZGVicmlzLiAKKGxldHRlciBIZWFsdGggLjE0IENvbnRyYWN0IEJyaWRnZS4xOSBEcmFpbnMsIEJpcnRocyAyQyBGaW5hbmNlLCBTbG9ja3MuNCBQcm9kdWNlLiAKSWYgeW91IHRyeSB0byBkYXRlIG90aGVycywgdGhleSBtYXkgZm9sbG93IHlvdSBvciB0aHJlYXRlbiB5b3VyIG5ldyBkYXRlLiBNb3JlIG9mdGVuIHRoYW4gbm90LCBhIGxvc2VyIGlzIGxpdmluZyBvbiBjcmVkaXQuIApXb29kYmluZSBDYXNpbm8KVGhyb3VnaCB0aGVzZSBzaXRlcyBhbGwgeW91IG5lZWQgdG8gZG8gaXMgdG8gcmVnaXN0ZXIgYW5kIHBsYXkgdGhlIGdhbWUgd2l0aG91dCBwYXlpbmcgYW55IGFtb3VudC4gCk15IGtpZHMgYXJlIHN0aWxsIHF1aXRlIHlvdW5nLCBteSBzb24gZG8gZ2V0IG9uIGVhY2ggb3RoZXIgbmVydmVzIGJ1dCBvdGhlciB0aGFuIHRoYXQgYWxsIGdldCBhbG9uZywgSSBzYXkuIApSdXRhY2VzIDogYmVyZ2Ftb3RlICgwLDIgIDAsNCAlKSwgY2l0cm9uICgKSSBndWVzcyBldmVyeW9uZSBkaWZmZXJlbnQuIE1pZ2h0IGJlIHRoZSB0ZXJwZW5lcyBvciBvdGhlciBjYW5uYWJpbm9pZHMgdGhhdCBhcmUgcHJlc2VudCBpbiB3aGF0ZXZlciB5b3UgdXNpbmc/IE9yIG1heWJlIHlvdSBqdXN0IFNVUEVSIHNlbnNpdGl2ZSB0byBjYW5uYWJpcyAoVEhDKSBhbmQgY2FuIGZlZWwgaXQgZXZlbiBpbiB0aGUgbG93ZXN0LCBtb3N0IG5lZ2xpZ2libGUgZG9zZXMuIFRoZSB0aGlyZCBvcHRpb24gaXMgdGhhdCB0aGlzIGlzIGp1c3QgaG93IHlvdSByZWFjdCB0byBDQkQgaXRzZWxmLiAgIE5vdyB5b3UgZ290IG1lIGludGVyZXN0ZWQgaW4gdGhpcyBicmFuZCwgaGFoYSA7KQpPdGhlciBndXlzIGluIHRoZSBvZmZpY2UgaGF2ZSB3aGlzcGVyZWQgaG93IG11Y2ggdGhleSB3b3VsZCBsb3ZlIHRvIGNvbm5lY3QgKGhhISkgd2l0aCBoZXIuIApBZGEgcG9saWNlIGhlYWRxdWFydGVycyBpcyBpbiB0aGUgQ2l0eSBIYWxsLCBhIG1vZGVybiBvbmUgc3RvcnkgYnJpY2sgYnVpbGRpbmcgd2l0aCBiYXNlbWVudCBvZmZpY2VzLCBvbiBUb3duc2VuZCBTdHJlZXQuIApGcmVlIFBhdHRlcm5zIGZvciBEb3dubG9hZCBmcm9tIENsYXNzaWMgRWxpdGUgWWFybnMuIEkgc2VhcmNoZWQgZm9yIGEgZnVuIHRvIGtuaXQgbGFjeSBwYXR0ZXJuIHdpdGggYSBzaW1wbGUgYm9iYmxlc29tZXRoaW5nIHRoYXQgd291bGQgc2hvdyBvZmYgdGhlIC4gCjYpIEl0IGlzIEVQQSB0aGF0IGluaGliaXRzIGN5Y2xvb3h5Z2VuYXNlIChDb3gpIGVuenltZXMuIChSZWNhbGwgdGhlIENveCBlbnp5bWVzIGNvbnZlcnQgdGhlIG9tZWdhIDYgZmF0IGFyYWNoaWRvbmljIGFjaWQgdG8gcHJvIGluZmxhbW1hdG9yeSBwcm9zdGFnbGFuZGluIEUyKQpSb2JlcnQgaGFzIGJlZW4gYSBib2FyZCBtZW1iZXIgc2luY2UgMTk2MiBhbmQgc2VydmVkIGFzIGJvYXJkIHByZXNpZGVudC4gCiJNaXQgZGVyIFVudGVyemVpY2hudW5nIGRlcyBQYWNodHZlcnRyYWdlcyBpc3QgZWluIHdlaXRlcmVyIHdlc2VudGxpY2hlciBNZWlsZW5zdGVpbiBpbiBkZXIgUHJvamVrdHVtc2V0enVuZyBlcnJlaWNodC4gCk90aGVyd2lzZSB5b3UgY2hlY2sgYmVjYXVzZSBtdWNoIG9mIHRoZSBCQiByYW5nZSBzbWFzaGVzIHRoZSBib2FyZC4uIApObywgSSdtIGRpc3B1dGluZyB0aGUgZmFjdCB0aGF0IHlvdSBzYWlkIGl0J3MgbGl0ZXJhbGx5IGltcG9zc2libGUgYW5kIG5vIHdheSBzZWNyZXQgc2VydmljZSB3aWxsIGxldCBzIGZvcm1lciBwcmVzaWRlbnQgZ28gYW55d2hlcmUgYWxvbmUuIFRoYXQgaXMgZGlzcHV0ZWQgYnkgdGhlIGZhY3QgdGhhdCBhIGZvcm1lciBwcmVzaWRlbnQgZGlkLCBpbiBmYWN0LCB0ZWxsIHRoZSBzZWNyZXQgc2VydmljZSBub3QgdG8gcHJvdGVjdCBoaW0uIApJY2ggYmluIGpldHp0IG5pY2h0IGRlciB0b3RhbGUgS2VubmVyIGJheWVyaXNjaGVyIExva2FscG9saXRpaywgYWJlciBiZWkgZGVuIGxldHp0ZW4gTGFuZHRhZ3N3YWhsZW4ga29ubnRlIGljaCBkaWUgUG9zaXRpb25lbiB2b20gQWl3YW5nZXIgbmljaHQgd2lya2xpY2ggdm9uIHR5cGlzY2hlbiBDU1UgUG9zaXRpb25lbiB1bnRlcnNjaGVpZGVuLiBBbiBtYW5jaGVuIFN0ZWxsZW4gbGVpY2h0IHByb2dyZXNzaXZlciwgZGFmciBhbiBhbmRlcmVuIG5vY2ggc3Rya2VyIGtvbnNlcnZhdGl2LiAzIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvCkJ1dCBpdCBpcyBqdXN0IHdyb25nIHRvIG1pc2xhYmVsIHRoaXMgZXZlbnQgaW4gdGVybXMgdGhhdCBUcnVtcCBkaWQgd3JvbmcsIHdoaWNoIGhhcHBlbnMgZmFyIHRvbyBvZnRlbiBhdCB0aGlzIHBvaW50LiAKVGhleSBoYWQgaXQgdGhlcmUgZm9yIGEgd2hpbGUgKDE5OCBkYXlzLCBhY2NvcmRpbmcgdG8gYSBHb29nbGUgc2VhcmNoLCB3aGljaCBpcyBhYm91dCBzaXggYW5kIGEgaGFsZiBtb250aHMpIGFuZCBnb3QgaXQgdG8gZWF0IHRoZSBmb29kIHRoZXkgZ2F2ZSBpdC4gCkVyIG11c3Mgc2ljaCBtaXQgZGVtIGRtbXN0ZW4gU3lzdGVtIGRlciBsZXR6dGVuIDI1IEphaHJlLCBXaW5kb3dzIDggaGVydW1zY2hsYWdlbiwgd2VpbCBlcyBrZWluIFdpbmRvd3MgNyBtZWhyIGdhYi4gCkFsdGhvdWdoIHNvbWUgZm9vZHMgY29udGFpbiBDb1ExMCwgdGhlaXIgaW50YWtlIGFsb25lIGlzIG5vdCBzdWZmaWNpZW50IHRvIGNvbXBlbnNhdGUgZm9yIHRoZSBib2R5IGRlY2xpbmluZyBDb1ExMCBudXRyaXRpb25hbCBzdGF0dXMgdGhhdCBvY2N1cnMgd2l0aCBhZ2luZy4KIkhvbWVsZXNzbmVzcyBpcyBhIGNvbXBsaWNhdGVkIGlzc3VlIGFuZCBpdCBpcyBhbGwgYWJvdXQgbWVldGluZyBwZW9wbGUgd2hlcmUgdGhleSBhcmUuIElmIHRoZXkgd2FudCB0byBzdGF5IG91dHNpZGUsIHdlIHByb3ZpZGUgc2VydmljZSB0byB0aGVtIG91dHNpZGUuIElmIHdlIGNhbiBjb252aW5jZSB0aGVtIHRvIGNvbWUgaW5zaWRlLCB0aGVuIHdlIHdpbGwgaGVscCB0aGVtIHRoZXJlLiAKVXBvbiByZXRpcmluZyBhdCB0aGUgZW5kIG9mIGxhc3QgeWVhciwgYW5kIGNsZWFybHkgaWdub3JhbnQgb2YgYW4gZW50aXJlIGdlbnJlIG9mIGhvcnJvciBtb3ZpZXMsIFN0ZWVyIGFuZCBzb21lIGZyaWVuZHMgcG9rZWQsIHByb2RkZWQsIGR1ZywgYW5kIGV4Y2F2YXRlZCwgdG9pbGluZyBhd2F5IGluIHRoZSBicnV0YWwgYW5kIHVuZm9yZ2l2aW5nIGxhbmQgb2YgVGhhdCBTcG90IGluIEZyb250IG9mIHRoZSBDb3VjaC4gVGhleSBldmVudHVhbGx5IHVuZWFydGhlZCBhIDE3IGZvb3QgZGVlcCBtZWRpZXZhbCB3ZWxsLiBTaW5jZSBpdCBhcHBlYXJzIG9uIHRoZSAxNnRoIGNlbnR1cnkgcGxhbnMsIFN0ZWVyIGtub3dzIGl0J3MgYXQgbGVhc3QgdGhhdCBvbGQsIGJ1dCBoZSdzIHN0aWxsIGhvcGluZyB0byBlc3RhYmxpc2ggYW4gYWN0dWFsIGNvbnN0cnVjdGlvbiBkYXRlLiAKT3R0byBXYXJtYmllciBkaWVkIGRheXMgYWZ0ZXIgTm9ydGggS29yZWEgc2VudCBoaW0gaG9tZSB0byBPaGlvLiBOb3cgUHJlc2lkZW50IFRydW1wIHNheXMgaGUgYWNjZXB0cyBLaW0gSm9uZyBVbidzIGFjY291bnQ6IEVkaXRvcmlhbCBCb2FyZCBSb3VuZHRhYmxlIE90dG8gV2FybWJpZXIgZGllZCBkYXlzIGFmdGVyIE5vcnRoIEtvcmVhIHNlbnQgaGltIGhvbWUgdG8gT2hpby4gTm93IFByZXNpZGVudCBUcnVtcCBzYXlzIGhlIGFjY2VwdHMgS2ltIEpvbmcgVW4ncyBhY2NvdW50OiBFZGl0b3JpYWwgQm9hcmQgUm91bmR0YWJsZSBBZnRlciBoaXMgSGFub2kgc3VtbWl0IHdpdGggTm9ydGggS29yZWEncyBLaW0gSm9uZyBVbiwgUHJlc2lkZW50IFRydW1wIHRvbGQgcmVwb3J0ZXJzIHRoYXQgaGUnZCByYWlzZWQgdGhlIE90dG8gV2FybWJpZXIgY2FzZSB3aXRoIEtpbSBidXQgdG9vayBoaW0gImF0IGhpcyB3b3JkIiB0aGF0IGhlIGRpZG4ndCBrbm93LCBhZGRpbmcgdGhhdCBLaW0gZmVsdCAidmVyeSBiYWRseSIgYWJvdXQgd2hhdCBoYWQgaGFwcGVuZWQuIFRoYXQgcHJvbXB0ZWQgYW4gYW5ncnkgc3RhdGVtZW50IGZyb20gV2FybWJpZXIncyBwYXJlbnRzLCB3aG8gb25jZSBsYXVkZWQgVHJ1bXAuIEFub3RoZXIgc3R1bWJsZSBieSB0aGUgcHJlc2lkZW50IGluIGhpcyBlZmZvcnRzIHRvIGVzdGFibGlzaCBwZXJzb25hbCBkaXBsb21hY3kgd2l0aCBkaWN0YXRvcnM/IFRoZSBFZGl0b3JpYWwgQm9hcmQgUm91bmR0YWJsZSB0YWtlcyBhIGxvb2suCkEgVGV4YXMgSG9sZCdlbSB0b3VybmFtZW50IGNhbiByYW5nZSBmcm9tIGEgc2luZ2xlIHRhYmxlIHRvdXJuYW1lbnQgaW52b2x2aW5nIDYgMTAgcGxheWVycyB0byBsYXJnZXIgdG91cm5hbWVudHMgd2l0aCBodW5kcmVkcywgZXZlbiB0aG91c2FuZHMsIG9mIGVudHJpZXMuIApVbiBob21tZSBhcHB1aWUgc3VyIGxlIGJvdXRvbiBkZSBzb25uZXR0ZSwgbGEgcG9ydGUgcyBEZSBsIGN0IGR1IGNvbXB0b2lyLCBsYSByY2VwdGlvbm5pc3RlIGRlbWFuZGUgIGwgcyBzIGRlIHNhIHByZW1pcmUgdmlzaXRlLiBOb24sIGRpdCBpbC4gRWxsZSBqZXR0ZSB1biBjb3VwIGQgIHNvbiBjcmFuLiAKR3VuIGV4cG9zZWQgcGVvcGxlIGFyZSBzYWZlciwgZ3VuIHVzZXJzIGdldCB0byBjb250aW51ZSB1c2luZyB0aGVpciBndW5zLi4gCkdldCBhIG1lbnRvci4gU29tZW9uZSB3aG8gaGFzIGJlZW4gZG9pbmcgaXQgZm9yIGEgd2hpbGUuIApJdCB1bnJlYWxpc3RpYyB0byBleHBlY3QgZXZlcnlvbmUgdG8gbGVhcm4gQVNMIGZsdWVudGx5LCBzbyB0aGUgbmV4dCBiZXN0IHRoaW5nIGlzIGludGVycHJldGVycywgbXVzZXVtIGd1aWRlcyBpbiBzaWduIGxhbmd1YWdlLCBzdWJ0aXRsZWQgbmV3cywgZXRjIGV0YyBzbyB0aGF0IGRlYWYgcGVvcGxlIGNhbiBpbnRlcmFjdCB3aXRoIHNvY2lldHkgcGVyIHNlIG9uIHRoZSBzYW1lIGxldmVsLiBJdCBub3QgcGVyZmVjdCAoYXMgaW4gZW5nYWdpbmcgaW50ZXJwcmV0ZXJzLCB5b3Ugc3RpbGwga2luZGEgZGVwZW5kZW50IG9uIHRoZW0gYW5kIHRoZSBleHRlbnQgb2YgdGhlaXIgaW50ZXJwcmV0aW5nIGFiaWxpdGllcy4gCkkgb25jZSB0b29rIEFtdHJhayBmcm9tIFdJIHRvIFRYLiBJdCB3YXMgdGhlIGJlc3QgYWxvbmUgdGltZSBJIGV2ZXIgc3BlbnQuIEkgbG92ZWQgdGhlIHdob2xlIGV4cGVyaWVuY2Ugd2l0aCB0aGUgZGluaW5nIGNhciwgc2lnaHRzZWVpbmcgY2FyLCBhbmQgdHJhdmVsaW5nIHRocm91Z2ggbWFueSBzdGF0ZXMgYmFja3lhcmRzLi4gClNvLCBJIHRvb2sgdGhhdCB0byBtZWFuIHRoZXkgd2VyZSBhIGJpdCB0b28gZm9jdXNlZCBvbiBzYWxlcy4gCkkgZG8gbm90IGVuZ2FnZSBpbiBhbnkgdW5sYXdmdWwgYWN0cy4gV2VsY29tZSB0byBpYmFja3BhZ2UgYW5kIGV4cGxvcmUgb3VyIGNvbXBsZXRlIGxpc3Qgb2YgLCAsIGFuZCB3aG8gd2lsbCBtYWtlIHN1cmUgdGhhdCB5b3Ugd2lsbCBiZSBoYXZpbmcgZnVuLiBZb3UgbmVlZCB0byBzaWduIHVwIGZpcnN0IG9uIG91ciB3ZWJzaXRlIGFmdGVyIHdoaWNoIHlvdSBjYW4gcHVibGlzaCB5b3VyIGFkcy4gVGFyZ2V0IHRoZSBjdXN0b21lcnMgd2hvIGFyZSBhY3R1YWxseSBpbnRlcmVzdGVkIGluIHlvdXIgc2VydmljZXMuIFdlIGhlbHAgeW91IHRvIHJlYWNoIHlvdXIgdGFyZ2V0IGF1ZGllbmNlLiBXaHkgU2hvdWxkIFlvdSBDaG9vc2UgaWJhY2twYWdlPyBUaGlzIHBhZ2Ugc2hvd3MgaG93IG1hbnkgZ2lybHMgYXJlIGFjdHVhbGx5IG91dCB0aGVyZSBhdmFpbGFibGUgdG8geW91LiBEbyB5b3UgbmVlZCBhIGJvb3N0IHRvIHlvdXIgYnVzaW5lc3M/IE5vIG1hdHRlciB3aGF0IHlvdXIgcGVyc29uYWwgdGFzdGVzIGFyZSwgbGV0IE1lZXQgTG9jYWwgQWR1bHRzIHNwaWNlIHVwIHlvdXIgb3RoZXJ3aXNlIGR1bGwgc29jaWFsIGxpZmUuCkFuZCB0aGVuIHlvdSdsbCBiZSBsZWZ0IGFsb25lIHRvIHJlbGF4ICAgYW5kIHN3ZWF0ICAgZm9yIGFib3V0IDMwIG1pbnV0ZXMuLiAKQS4gTWhhcm8uIEtlaSB0ZSBudWkgdGUgbWloaSBraSBhIFZpbmNlbnQgdGUgdGFrZSBuIHRlIGFyb3RhdSBvIGFuYSByYW5nYWhhdSBpIHB1dGEgbWFpIGFpIHRlIHBvbm8sIHRlIHRpa2EgbyBuZyBrcmVybyBhIG5nIHRwdW5hLCBuZyBrcmVybyBpIHR1a3UgaWhvIGtpIGEgbXRvdSwgZW5nYXJpIGtvcmUgaSB0ZSBrcmVyb3RpYSwga29yZSBpIHRlIHduYW5nYXRpYSBlIHRlIGFvIFBrZWguIE4gcmVpcmEga2VpIHRlIG51aSB0ZSBtaWhpIGtpIHRuZWkgUGtlaCBlIHdoYWkgbmVpIGkgdGUgcG9ubyBpIHRlIHRpa2EgbyBuZyBrcmVybyBpIHR1a3UgaWhvLiAoUGhvdG86IEFsaXNvbiBNY0N1bGxvY2gpSGFyZCB0byBGaW5kIEJvb2tzOiBGdW5kcmFpc2VyClByZWduYW5jeSBnaXZlcyBuYWlsIGdyb3d0aCBhIGJvb3N0LiAKQnV0IENNIFNoYWggZGlkIGhpbnQgdGhhdCBpbiB0aGUgRklBL1JhbmdlcnMgcmFpZCBhdCB0aGUgQ2l2aWMgQ2VudHJlLCB3aGVuIHRob3VzYW5kcyBvZiBmaWxlcyB3ZXJlIHRha2VuIGF3YXkgaW4gYSB0cnVjaywgdGhlcmUgd2VyZSBzZXZlcmFsIHNlbnNpdGl2ZSBmaWxlcyBXaGF0IGhlIG1lYW50IGJ5IHRoYXQgd2FzIG5vdCBleHBsYWluZWQgYnkgaGltIGF0IGhpcyBwcmVzcyBjb25mZXJlbmNlLi4gCkhvd2V2ZXIsIEkgZGlzY3Vzc2VkIHRoaXMgd2l0aCBhIGN1cnJlbnQgZnJpZW5kIG9uZSBldmVuaW5nIGFzIHdlIHdhbGtlZCBkb3duIG1lbW9yeSBsYW5lLiBUaGV5IHN1Z2dlc3RlZCB0aGF0IG1heWJlIGl0IGJlc3Qgbm90IHRvIGJyaW5nIHRoaXMgdXA7IHBlcmhhcHMgdGhpcyBjbGFzc21hdGUgaXMgZG9pbmcgYmV0dGVyIGFuZCBJIG1heSBicmluZyB1cCBzb21lIG9sZCBtZW1vcmllcyB0aGF0IHRoZSBwZXJzb24gbWF5IGhhdmUgZm9yZ290dGVuIChvciB3b3VsZCByYXRoZXIgZm9yZ2V0KSwgYW5kIG15IGNvbW1lbnRzIGNvdWxkIG1ha2UgdGhpbmdzIHdvcnNlLi4gCkF0IHRpbWVzIGl0IGhhcyBmZWx0IGxlc3MgbGlrZSBhIGJvb2sgYW5kIG1vcmUgbGlrZSBJJ20gcGFydCBvZiBzb21lIGtpbmQgb2Ygc29jaWFsIG1vdmVtZW50LiAKRW4gcGx1cyBkJ2V4ZXJjZXIgbm90cmUgY2FwYWNpdCAgbm91cyBkcGxveWVyIGV0ICBtZW5lciBkZXMgb3ByYXRpb25zIHRhY3RpcXVlcyBkYW5zIGxlIEdyYW5kIE5vcmQsIGwnb3ByYXRpb24gTnVuYWxpdnV0IGVzdCBhdXNzaSBsJ29jY2FzaW9uIGRlIG1ldHRyZSAgbCdlc3NhaSBkZXMgcXVpcGVtZW50cyBldCBkZXMgbXRob2RlcyBkJ2VudHJhbmVtZW50LgpXZSBkb24gaGF2ZSB0byB1bmRlcnN0YW5kIHRoZSBmdWxsIHJhbWlmaWNhdGlvbnMgb2YgaW5zZXJ0aW5nIGZvcmVpZ24gRE5BLiBXZSBqdXN0IG5lZWQgdG8ga25vdyBlbm91Z2ggdG8gc2F5IGl0IHJlYXNvbmFibHkgc2FmZSBmb3IgaHVtYW4gY29uc3VtcHRpb24uClBlb3BsZSBsaWtlIEJpbGwgR2F0ZXMgbWFuYWdlIHRvIGJlIGJpbGxpb25haXJlcyBhbmQgdXNlIHRoYXQgdG8gYmUgbWFzc2l2ZWx5IGhlbHBmdWwgaHVtYW4gYmVpbmdzLCB0aGUgZm9ybWVyIGdyb3VwIGhhdmUgbm8gcGxhY2UgaW4gYSBtb2Rlcm4gc29jaWV0eSBJTU8uIApSYW50IG92ZXIuIApZb3UgZ2V0IGEgZnJlZSB0aW1lIHNoaWZ0IGF0IHRoZSBiZWdpbm5pbmcgb2YgZWFjaCBjb3Vyc2UgYW5kIGdldCBhbiBleHRyYSBldmVyeSB0aW1lIHlvdSBnZXQgMzAgZWdncyBmaXJzdCB0aW1lLCA2MCAybmQsIDkwIDNyZCBldGMuIApNb3N0IHBlb3BsZSB0ZW5kIHRvIGNhcnJ5IHN0cmVzcyBpbiB0aGUgbXVzY2xlcyB0aGF0IGVsZXZhdGUgdGhlIHNob3VsZGVyIGJsYWRlcy4gClRoZSBuZXcgQmF0dGxlZnJvbnQgdXBkYXRlIHRoYXQgd2FzIHByb21pc2VkIG92ZXIgYSB5ZWFyIGFnbyBmaW5hbGx5IGNhbWUgb3V0LiBUb29rIG1lIGxlc3MgdGhhbiA1IG1pbnV0ZXMgdG8gZXhwZXJpZW5jZSB0aGUgbmV3IGNoYXJhY3RlciwgdGhlIDMwaXNoIGNvbG9yIHZhcmlhbnRzIG9mIHRoZSBzYW1lIGFybW9yIHRoYXQgd2FzIGFscmVhZHkgaW4gdGhlIGdhbWUsIGFuZCBhIG5ldyBtYXAgdGhhdCB3ZWxsLCBwcmV0dHkgYmxhbmQuIEkgaGFkIG9ubHkgcmUgaW5zdGFsbGVkIGl0IG91dCBvZiBjdXJpb3NpdHkuClRoYXQgR0kgY2FsbCB3YXMgdGhlIHNvZnRlc3QgZnVja2luZyBjYWxsIEkgZXZlciBzZWVuIGluIG15IGVudGlyZSB0aW1lIHdhdGNoaW5nIGhvY2tleS4gTm90IG9ubHkgd2FzIENodWNreSBvdXRzaWRlIHRoZSBjcmVhc2UgYW5kIEZsdWVyeSBtb3ZlZCB1cCB0byB0b3VjaCBoaW0sIEZsdWVyeSBtYWRlIGEgZnVja2luZyBzYXZlIGFuZCB0aGVuIGhhZCB0aW1lIHRvIGdldCBiYWNrIGludG8gdGhlIG5ldC4KU29mdHdhcmUgaXMgYmVpbmcgZGV2ZWxvcGVkIGZvciBoYW5kIGhlbGQgZGV2aWNlcyBhbmQgY2VsbCBwaG9uZXMgdG8gcGxheSBwb2tlci4gRGVhbHMgYXJlIGJlaW5nIG1hZGUgdG8gYnJvYWRjYXN0IGxpdmUgdG91cm5hbWVudHMgb3ZlciB0aGUgSW50ZXJuZXQgZnJvbSBsYW5kIGJhc2VkIGNhc2lub3MuIEFuZCBpZiB0aGF0J3Mgbm90IGVub3VnaCwgdGhlbiB0aGVyZSBhcmUgYSBncm93aW5nIG51bWJlciBvZiB0ZWxldmlzaW9uIHNob3dzIGJhc2VkIG9uIHBva2VyLiAKTXkgd2lmZSAzMmYgYm91Z2h0IG1lIDMxbSBhIG1hc3NhZ2UgZm9yIG15IGJpcnRoZGF5ClNoZSBpbXBsaWVkIGhhdmluZyBoaWdoZXIgbWFya2V0IHZhbHVlIGFuZCBlYWdlciBjYW5kaWRhdGVzLCBhbmQgdHVybmluZyB0aGVtIGRvd24gZm9yIHRyaXZpYWwgcmVhc29ucywgd2hpY2ggbWVhbnMgdGhleSB3ZXJlIGluIGFidW5kYW5jZS4gU2hlIHByb2plY3Rpbmcgd29ydGggaW4gYW4gdW5kZXJoYW5kZWQgd2F5LiAKSGVyIGJhc2UgZGFtYWdlIGlzIGp1c3QgYWJzb2x1dGVseSBhYnN1cmQuIFdoeSBpbiB0aGUgaGVsbCBkb2VzIHNoZSBnZXQgYW4gYWJpbGl0eSB0aGF0IGRvZXMgZXF1aXZhbGVudCBpZiBub3QgbW9yZSBkYW1hZ2UgdGhhbiBtb3N0IG90aGVyIGdvZHMgYnV0IHNoZSBnZXRzIFRXTyBDSEFSR0VTLiBMaWtlIHdobyB0aGUgZnVjayB0aG91Z2h0IHRoYXQgd2FzIGEgZ29vZCBpZGVhPwpSdWxlIDVBOiBSZXBvc3RzIHdpbGwgYmUgcmVtb3ZlZCBhdCB0aGUgbW9kZXJhdG9ycyBkaXNjcmV0aW9uLCB0aGlzIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0byByZXBvc3RzIHdpdGggdGhlIHNhbWUgdGl0bGUgYXMgcHJldmlvdXMgc3VibWlzc2lvbnMuIApJIHJlbWVtYmVyIHRoYXQgSSB3YXMgc29iYmluZyB1bmNvbnRyb2xsYWJseSB0aGUgZW50aXJlIHRpbWUgYW5kIHRoZSBzdHlsaXN0IHdhcyBTTyB1bmNvbWZvcnRhYmxlLiBJdCB0dXJuZWQgaW50byBhbiBhdCBsZWFzdCB0d2VudHkgbWludXRlIG9yZGVhbCBvZiBoZXIgdGVsbGluZyB0aGVtIHRoYXQgc2hlIGRpZG4gd2FudCB0byBkbyBpdC4gQnV0IGZpbmFsbHksIHNoZSByZWxlbnRlZC4gClN0ZXBoYW5lIEdhYmV0LCBhIFRWIHByb2R1Y3Rpb24gY29tcGFueSBqb3VybmFsaXN0LCB3ZW50IGZpc2hpbmcgYXJvdW5kIHRoZSBhdHRpYyBvZiByZXRpcmVkIHRheCBjb2xsZWN0b3IgSmFjcXVlcyBCZWxsYW5nZXIgYW5kIHB1bGxlZCBvdXQgdGhlIDQwMCB5ZWFyIG9sZCBoZWFkIG9mIGEgRnJlbmNoIG1vbmFyY2guIFRoYXQncyByaWdodDogV2hlcmUgdXMgY29tbW9uIGZvbGsgbWlnaHQgc3Rhc2ggdGhlIG9jY2FzaW9uYWwgYnJva2VuIHZhY3V1bSBjbGVhbmVyIG9yIGVtYmFycmFzc2luZyBCZWFuaWUgQmFieSBjb2xsZWN0aW9uIHVwIG91ciBob3VzZSdzIHNoYW1lIGhvbGUsIEphY3F1ZXMgaGFwaGF6YXJkbHkgc3Rvd2VkIGFuZCB0aGVuIHByb21wdGx5IGZvcmdvdCBhYm91dCB0aGUgaGVhZCBvZiBLaW5nIEhlbnJ5IElWLCB3aG8gcnVsZWQgRnJhbmNlIHVudGlsIGhpcyBkZWF0aCBpbiAxNjEwLi4gCkkgd2FzIHRhbGtpbmcgdG8gZHVkZXMgYWxsIG5pZ2h0IGFuZCB0aGlzIGd1eSB3YXMgZ2l2aW5nIG1lIGV5ZXMgYWNyb3NzIHRoZSByb29tIHRoZSB3aG9sZSB0aW1lLiBJIGNvdWxkIHRlbGwgaGUgd2FzIGJ1aWxkaW5nIHVwIHRoZSBjb3VyYWdlIHNvIGkgd2FudGVkIHRvIGdpdmUgaGltIGEgY2hhbmNlLiBMYXRlciBhdCB0aGUgcGFydHkgaSBzdG9vZCBhcm91bmQgd2l0aCBteSBnaXJsIGZyaWVuZHMgdHJ5aW5nIHRvIGxvb2sgYXBwcm9hY2hhYmxlIGFuZCBteSBmYXZvcml0ZSBhcnRpc3QgY2FtZSBvbi4gCjIpIFJhaXNpbmcgdGhlIG1pbmltdW0geWVhciBhcm91bmQgc2VydW0gdml0YW1pbiBEMyBsZXZlbCB0byA0MCB0byA2MCBuZy9tTCAoMTAwIDE1MCBubW9sL0wpIHdvdWxkIHByZXZlbnQgYXBwcm94aW1hdGVseSA1OCwwMDAgbmV3IGNhc2VzIG9mIGJyZWFzdCBjYW5jZXIgYW5kIDQ5LDAwMCBuZXcgY2FzZXMgb2YgY29sb3JlY3RhbCBjYW5jZXIgZWFjaCB5ZWFyLCBhbmQgdGhyZWUgZm91cnRocyBvZiBkZWF0aHMgZnJvbSB0aGVzZSBkaXNlYXNlcyBpbiB0aGUgVVMgYW5kIENhbmFkYS4gVGhpcyB3b3VsZCBhbHNvIHJlZHVjZSBmYXRhbGl0eSByYXRlcyBvZiBwYXRpZW50cyB3aG8gaGF2ZSBicmVhc3QsIGNvbG9yZWN0YWwsIG9yIHByb3N0YXRlIGNhbmNlciBieSBoYWxmLi4gCk90aGVyIGFwcGxpY2F0aW9ucyBvZiBtYWduZXNpdW0gaW5jbHVkZSBhdmVydGluZyBhc3RobWEgYW5kIGNvbG9uIGNhbmNlciBhbmQgZGVjcmVhc2luZyBoeXBlcmFjdGl2aXR5IGluIGNoaWxkcmVuIHdpdGggQURIRC4KRXZlcnlvbmUgaXMgYnVzeSB0aGVzZSBkYXlzLCBhbmQgc2xvdHMgcHJlc2VudCBhbiBpZGVhbCBvcHBvcnR1bml0eSB0byByZWxheCwgaGF2ZSBhIGZ1biBnYW1lIGFuZCBwb3NzaWJseSB3aW4gc29tZSBwcml6ZXMsIHdpdGhvdXQgaGF2aW5nIHRvIGdpdmUgeW91ciB1bmRpdmlkZWQgYXR0ZW50aW9uIHRvIHRoZSBzY3JlZW4uIFNsb3QgZ2FtZXMgZXZlbiBmaXQgaW50byBhIGJ1c3kgd29ya2luZyBkYXksIHRha2luZyB0aGUgYm9yZWRvbSBvdXQgb2YgbG9uZyBjb21tdXRlcy4uIApJIGhhbmdvdXQgd2l0aCBteSBleCBib3lmcmllbmQgKGRhdGVkIGZvciA3IHllYXJzKSBhbmQgSSBoYXZlIHplcm8gZmVlbGluZ3MgZm9yIGhpbSByb21hbnRpY2FsbHkgIEkgc3RpbGwgbG92ZSBoaW0gdG8gcGllY2VzIGJ1dCBub3QgbGlrZSB0aGF0LiAKVXBkYXRlZCAyMDE5IFByaWNlcyBSZXZpZXdzIE9yYW5qZXN0YWQKVGhlIG51bWJlciBvZiBiZXN0b2Ygc3VibWlzc2lvbnMgZnJvbSBkZWZhdWx0IHJlZGRpdHMgaXMgbm90ICJodWdlbHkgZGlzcHJvcG9ydGlvbmF0ZSIuIElmIHBvc3RzIHRvIGRlZmF1bHQgc3VicmVkZGl0cyBhY2NvdW50IGZvciA4MCUgb2YgdGhlIHRvdGFsIHBvc3RzIHRvIFJlZGRpdCwgdGhlbiBhYm91dCA4MCUgb2YgdGhlIGJlc3QgcG9zdHMgdG8gUmVkZGl0IHdvdWxkIGFsc28gYmUgZnJvbSB0aGUgZGVmYXVsdCBzdWJyZWRkaXRzLgpDaGFuZ2luZyB0aGF0IGlzbiBhcyBzaW1wbGUgYXMgbWFraW5nIGFuIGFubm91bmNlbWVudFdlIGtub3cgdGhpcyBkYW1uIHdlbGwsIGFuZCB0aGF0IG9uZSBvZiB0aGUgbWFpbiByZWFzb25zIHdoeSB3ZSBoYXZlbiBkb25lIGl0LiAKSGUgc21pbGVkIGF0IGl0IG9uY2UgbW9yZSBhcyBoZSB3YWxrZWQgdXAgdG8gdGhlIGRvb3IgYW5kIG9wZW5lZCBpdC4gVGhlIGdhcmFnZSBkb29yIGRvZXNuIGhhdmUgYSBsb2NrIG9uIGl0IHNvIGl0IGlzIGVhc3kgdG8gb3BlbiBmcm9tIHRoZSBnYXJhZ2UuIApIb3dldmVyIGZ1cnRoZXIgcmVzZWFyY2ggaXMgbmVlZGVkIHRvIGRlZmluZSB0aGUgYXBwcm9wcmlhdGUgdGhlcmFwZXV0aWMgZG9zZXMuIApJZiB5b3VyIG1vdmVtZW50IG9yaWdpbmF0ZXMgaW4gdGhlIGhpcHMgYW5kIHlvdXIgbGFyZ2UgcG9zdGVyaW9yIG11c2NsZXMsIHRoZSBtdXNjbGVzIHN1cnJvdW5kaW5nIHRoZSB2ZXJ0ZWJyYWUsIGFyZSBubyBsb25nZXIgYmVpbmcgY29tcHJlc3NlZCBvciBvdmVyd29ya2VkLiAKSSBnb3QgZHJ1bmsgYW5kIGFza2VkIGhlciBhYm91dCBpdC4gClRhbmlnYWtpIGlzIGZ1Y2tpbmcgaGltc2VsZiBvdmVyIGFnYWluLi4gCklmIHRoZXJlIGlzIHNvbWV0aGluZyB0aGF0IEkgYW0gbm90IHVuZGVyc3RhbmRpbmcgcGxlYXNlIGVubGlnaHRlbiBtZS4gCkEgZmV3IGRheXMgbGF0ZXIgc2hlIGNhbWUgdXAgdG8gbWUgd2l0aCBhIGJpZyBzbWlsZSBhbmQgc2FpZCAiSSBmaWd1cmVkIG91dCB3aHkgeW91IGxpa2UgeW91ciBjbG9jayEgV2hlbiB5b3UgbGF5IGRvd24gaW4gYmVkIGF0IG5pZ2h0LCB5b3UgY2FuIFNFRSEiIEkgaGF2ZSBuZXZlciBuZWVkZWQgZ2xhc3NlcyBhbmQgcHJvYmFibHkgd29uIGZvciBhIGxvbmcgdGltZSAodGhhbmtzLCBkYWQhKS4gSSBhcHBhcmVudGx5IGdhdmUgaGVyIGEgbG9vayBzaW1pbGFyIHRvIHRoZSBvbmUgc2hlIGdhdmUgbWUsIGJlY2F1c2Ugc2hlIGV4cGxhaW5lZCAiV2hlbiBJIGxheSBkb3duIGluIGJlZCwgbXkgZXllcyB0dXJuIG9mZiBhbmQgSSBjYW4gc2VlIGFueW1vcmUgYmVjYXVzZSBJIGhhdmUgdG8gdGFrZSBteSBnbGFzc2VzIG9mZi4iClNvb24gYWZ0ZXIgdGFraW5nIG9mZmljZSwgTXIuIFRydW1wIHF1aWV0bHkgZGVlbWVkIGxhcmdlIHNlY3Rpb25zIG9mIFllbWVuIGFuZCBTb21hbGlhIHRvIGJlICJhcmVhcyBvZiBhY3RpdmUgaG9zdGlsaXRpZXMiIHN1YmplY3QgdG8gd2FyIHpvbmUgcnVsZXMuIEluIGJhdHRsZSwgaXQgY2FuIGJlIGxhd2Z1bCB0byBjYXJyeSBvdXQgYSBzdHJpa2UgYXQgYSBtaWxpdGFyeSB0YXJnZXQsIGtub3dpbmcgdGhhdCBzb21lIG5lYXJieSBjaXZpbGlhbnMgbWF5IGRpZSwgc28gbG9uZyBhcyB0aGUgY29sbGF0ZXJhbCBkYW1hZ2UgaXMgZGVlbWVkIHRvIGJlIG5lY2Vzc2FyeSBhbmQgcHJvcG9ydGlvbmF0ZS4KRXZlcnkgY2xpZW50IGlzIGFuIGluZGl2aWR1YWwgd2l0aCBhIGRpc3RpbmN0IHNldCBvZiBwaHlzaWNhbCBhbmQgZW1vdGlvbmFsIG5lZWRzLiAKSSBkaWRudCBtZW50aW9uIHRoZSB3aW5kIGluIHllc3RlcmRheSdzIHBvc3QsIHdoaWNoIHdhcyByZWFzb25hYmx5IHN0cm9uZyBjb21pbmcgb2ZmIHRoZSBvY2VhbiBpbnRvIG91ciBmYWNlLCBidXQgaXQgY2VydGFpbmx5IGRpZG50IGZlZWwgd29yc2UgdGhhbiBhbnl0aGluZyB3ZSBoYXZlIGZlbHQgZWFybHkgdGhpcyBzZWFzb24gaW4gVG9yb250by4gVG9kYXkgdGhpbmdzIGNoYW5nZWQgYSBiaXQuIApBbHNvIFZpZXdlZCBTdGFydCBhIE1hc3NhZ2UgSG9tZSBCdXNpbmVzcyBTdWNjZWVkIGluIHRoZSBNYXNzYWdlIFRoZXJhcHkgQnVzaW5lc3MgV2hhdCBpcyB0aGUgQ29zdCB0byBTdGFydCBhIE1hc3NhZ2UgQnVzaW5lc3M/IFN0YXJ0IFlvdXIgT3duIE1hc3NhZ2UgVGhlcmFweSBCdXNpbmVzcyBUYXggV3JpdGUgT2ZmcyBmb3IgQnVzaW5lc3NlcyBJbXBsZW1lbnRpbmcgYSBXZWxsbmVzcyBQcm9ncmFtIFN1Y2ggYXMgQ2hhaXIgTWFzc2FnZSBCYXNpYyBTdXBwbGllcyB0byBTdGFydCBhIEhvbWUgU2tpbiBTcGEgQnVzaW5lc3MgR2V0IGEgTWFzc2FnZSBMaWNlbnNlCkluIHRoZSBmYWNlIG9mIHRoaXMgYWdncmVzc2lvbiB0aGUgRVUgc3RydWdnbGVzIHRvIHJlc3BvbmQgaW4gYSB3YXkgdGhhdCBjb3VsZCBwcm92aWRlIGEgcmVhbCBkZXRlcnJlbnQgdG8gVmxhZGltaXIgUHV0aW4uIApUaGVyZSBhcmUgYWxzbyBkZWVwZXIgYXZlbnVlcyBvZiBiZW5lZml0IHRoYXQgYXJlIHVuaXF1ZSB0byB0aGlzIHBhcnRuZXJzaGlwIHByYWN0aWNlOjEuIFNraW4gdG8gc2tpbiBjb250YWN0OiBGb3IgbWFueSBhZHVsdHMsIHBoeXNpY2FsIHRvdWNoIGlzIHR5cGljYWxseSByZXNlcnZlZCBmb3Igc2V4dWFsIHBhcnRuZXJzLCBidXQgYWNyb3lvZ2EgY2hhbGxlbmdlcyB0aGF0IGNvbnN0cnVjdC4gVGhlIHByYWN0aWNlIGxlbmRzIGl0c2VsZiB0byBkZXZlbG9waW5nIGEgcGh5c2ljYWwgaW50aW1hY3kgd2l0aCBvdGhlcnMgdGhhdCBpcyBwbGF0b25pYywgc2FmZSBhbmQgcGxheWZ1bC4gCkthbHR1ICJ3aGljaCBvbmVzPyIgdnMuIEthbHRvayAid2hpY2ggZ3JvdXBzIG9mIHRoZW0/IikuIE9ubHkgcGFpICJ3aGF0PyIgaGFzIGRpc3RpbmN0IHN0ZW1zIChwYWksIHBldiwgcGV0b2spOyB0aGUgb3RoZXJzIGp1c3QgdXNlIGFuIG9sZGVyIHBhdHRlcm4gb2YgZGVjbGVuc2lvbi5WZXJicyBhbHdheXMgbWFyayBmb3IgcGVyc29uIGFuZCBudW1iZXIgb2YgdGhlIGFnZW50IGxpa2UgdGhpczpPcmZ1IHZpbHMgKG1vc3kpIHVsbG9taXMsIChtb3N5KSBwcnM/IklzIHlvdXIgZGF1Z2h0ZXIgaW4gdGhlIGNpdHk/IlNvbWUgc3BlYWtlciB1c2UgYSBub3QgQShCKSBBIHN0cnVjdHVyZSBpbiBjb2xsb3F1aWFsIHNwZWVjaCBmb3IgcXVlc3Rpb25zIHdpdGggYW4gYXNzdW1lZCBuZWdhdGl2ZSB0cnV0aCB2YWx1ZSwgYW5kIHRoZW4gQSBpcyBvZnRlbiByZWR1Y2VkIHRvIG1vc3ksIHdoaWNoIGlzIGNvbW1vbmx5IHVzZWQgYXMgYW4gdW5pbmZsZWN0ZWQgcHJvdmVyYiBpbiBub25jb3B1bGFyIGRpYWxlY3RzLiAKSSBwbGFuIG9uIHRha2luZyBhIHJlc3QgZGF5IHRvZGF5LCBidXQgaWYgSSBkb24ndCBmZWVsIGFueSBwYWluLCBpcyBpdCBsZXNzIGxpa2VseSB0byBiZSB0ZW5kaW5pdGlzPyBBbnkgdGhvdWdodHMvb3BpbmlvbnMgZm9yIGhvdyBJIHNob3VsZCBnbyBhYm91dCBteSB0cmFpbmluZyAodGFrZSBhIGJyZWFrIGZvciBhIGZldyBkYXlzIG9yIGp1c3Qgc2xvdyBkb3duKSBhcmUgd2VsY29tZSBhbHNvLgpVZ2ggSSBwbGF5ZWQgd2l0aCBhIGd1eSBhIGZldyB3ZWVrcyBhZ28gdGhhdCBORVZFUiBPTkNFIGZvbGxvd2VkIHRoZSBhY3Rpb24gZW5vdWdoIHRvIGtub3cgaXQgd2FzIGhpcyB0dXJuLiAKVGhlIE9iYW1hIGl0ZXMgaGF2ZSBhbHNvIGJlZW4gcmVicmFuZGluZyB0aGUgd2FyIGluIElyYXEgIGFnYWluLCBub3QgZm9yIHRoZSBoZWFydHMgYW5kIG1pbmRzIG9mIElyYXFpcywgYnV0IGZvciB0aGUgQW1lcmljYW4gdm90ZXJzLiBJcmFxaSBGcmVlZG9tIGhhcyBub3cgYmVlbiBjaGFuZ2VkIHRvIE9wZXJhdGlvbiBOZXcgRGF3biwgZXZlbiB0aG91Z2ggSXJhcSBpcyBhcyBiaWcgYSBxdWFnbWlyZSBhcyBBZmdoYW5pc3RhbiBhbmQsIG9mIGNvdXJzZSwgVmlldG5hbS4gVGhlIHN1cHBvc2VkIDIwMTEgd2l0aGRyYXdhbCBkYXRlIGlzIGJhc2VkIG9uIGhvdyBzdGFibGUgdGhpbmdzIGFyZSBpbiBJcmFxIGFuZCByaWdodCBub3csIHRoaW5ncyBhcmUgZmFyIGZyb20gc3RhYmxlIHdpdGggYSBzZXJpZXMgb2YgYm9tYmluZ3MgYW5kIGNpdmlsaWFuIGRlYXRocyBpbiB0aGUgbGVhZCB1cCB0byB0aGUgbmV4dCBlbGVjdGlvbnMuLiAKRGFucyBsYSBwZW5zZSB0aG9zb3BoaXF1ZSwgdG91dCB0cmUgYSBsYSBmYWN1bHQgZGUgdmlicmVyLCBjZXR0ZSB2aWJyYXRpb24gcG91dmFudCB0cmUgcmV1ZSBldCBlbnJlZ2lzdHJlIGRhbnMgbGVzIGFubmFsZXMgYWthc2hpcXVlcy4gCkdhbWJsaW5nIGhhcyBwcm9saWZlcmF0ZWQgYWNyb3NzIHRoZSBOb3J0aGVhc3QsIHlvdSBnb2luZyB0byBjb250aW51ZSB0byBzZWUgdGhhdCwgc2FpZCBDbHlkZSBXLiBCYXJyb3csIGRpcmVjdG9yIG9mIHRoZSBDZW50ZXIgZm9yIFBvbGljeSBBbmFseXNpcyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBNYXNzYWNodXNldHRzIERhcnRtb3V0aC4gbGlrZSBhIGdhbWJsaW5nIGFybXMgcmFjZS4gbGVnaXNsYXRpb24gdGhhdCBwYXZlZCB0aGUgd2F5IGZvciBsYXN0IHllYXIgcmVmZXJlbmR1bSBvbiBzbG90IG1hY2hpbmVzIGluIE1hcnlsYW5kLCBob3dldmVyLCByZXF1aXJlcyBhbnkgZXhwYW5zaW9uIG9mIGdhbWJsaW5nIHRvIGJlIHN1YmplY3QgdG8gdm90ZXIgYXBwcm92YWwuClRoZSBmaW5hbCBzdG9wIHdhcyB0aGUgY29sbGlzaW9uIGNlbnRlciwgd2hlcmUgdGhlIHN0YWZmIGhlbGQgcmFmZmxlcyBhbmQgZ2F2ZSBwcml6ZXMgYmFzZWQgb24gdGhlIHBva2VyIGhhbmRzIHRoYXQgcGFydGljaXBhbnRzIGhhZCBjb21waWxlZCwgU2hhdyBzYWlkLgpBbHNvLCBpbmZlYXNpYmxlIHRvIGFuc3dlciBkdXJpbmcgdGhlIGRlYnQgY3Jpc2lzLiBXZSBkb24ga25vdyBob3cgbG9uZyBlYWNoIG1vdmllIHdpbGwgYmUsIGlmIHBlb3BsZSB3aWxsIGNvbnRpbnVlIHdhdGNoaW5nIHBhc3QgZXZlbiAxNSBvZiB0aGUgbW92aWVzIChGaW5hbCBGYW50YXN5IHNwYXJlIG1lIHlvdXIgd2lzZG9tKSwgaWYgdGhlIHF1YWxpdHkgd2lsbCBza3lyb2NrZXQgb3IgZmFsbCwgYW5kIG1vc3QgaW1wb3J0YW50bHk6Ckl0IHJlYWxseSBkZXBlbmRzIG9uIHdoZXJlIGNlcnRhaW4gcGxheWVycyBhcmUgZnJvbS4gCkxlZ3MgZm9yIGRheXM6IFRoZSBtb2RlbCBib29zdGVkIGhlciBzdGF0dWVzcXVlIGhlaWdodCwgYSBzdGFnZ2VyaW5nNSAxMCwgd2l0aCBhIHBhaXIgb2YgY2h1bmt5IGJsYWNrIHN0aWxldHRvcywgZW1iZWxsaXNoZWQgd2l0aCBhIGJlZGF6emxlZCBidWNrbGUKSmVmZiBCdWxpbmd0b24gd2FzIG5ldyBpbiB0b3duLiAKRm9yIGFuIGVudGlyZSB3ZWVrIEkgcHJvYmFibHkgZ290IGFib3V0IDEyIGhvdXJzIG9mIHNsZWVwLiAKU28gd2hhdCBkb2VzIFJlaWtpIGRvPwpJZiB5b3UgY2FuJ3QgaGF2ZSBhIGxpZmUgb2Ygb3JkZXIgd2l0aCBubyBlbW90aW9uYWwgb3IgbWVudGFsIHZhcmlhdGlvbnMgKHlvdSBwcm9iYWJseSBjYW4ndCB1bmxlc3MgeW91J3JlIGEgcHN5Y2hvcGF0aCkgdGhlbiB5b3Ugd2lsbCBhdCBsZWFzdCB0cnkgdG8gYXZvaWQgcGxheWluZyBwb2tlciB3aGVuIHlvdSBhcmUgZmVlbGluZyBlbW90aW9uYWxseSBvciBzcGlyaXR1YWxseSBkb3duLiAKQ2xhc3BlZCB0aWdodGx5IGluIGhpcyBoYW5kIHdhcyBhIGJvb2tsZXQgaGlzIGRhdWdodGVyIE1pY2hlbGxlIERhdmlzIG1hZGUgaGltLCBhbmQgaW5zaWRlIHRoZSBib29rbGV0IHdhcyBhIGxpc3Qgb2YgYWxsIDkyIEluZGlhbmEgY291bnRpZXMgYW5kIGEgbWFwIG9mIHRoZSBzdGF0ZS4gQXQgdGhlIHRpbWUgb2YgZW50ZXJpbmcgdGhlIERlbGF3YXJlIENvdW50eSBjbGVyayBvZmZpY2UsIDkxIG9mIHRoZSBjb3VudGllcyB3ZXJlIG1hcmtlZCBvZmYgaW4gcGluayBoaWdobGlnaHRlci4KRGVzcGl0ZSB0aGUgdW5pdGVkIGZyb250LCBzb21lIGJvYXJkIG1lbWJlcnMgd2VyZSBwcml2YXRlbHkgc2NhdGhpbmcgYWJvdXQgdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBjaGFyaXR5LCB3aXRoIG9uZSBicmFuZGluZyBpdCBhICJkaXNhc3RlciIuIFdoYXQgd2FzbiBhbm5vdW5jZWQgd2FzIHRoYXQgdGhlIG5ld2x5IGFwcG9pbnRlZCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBDb2xlbWFuIGhhZCBhY3R1YWxseSB0ZW5kZXJlZCBoZXIgcmVzaWduYXRpb24ganVzdCBkYXlzIGVhcmxpZXIsIHBsdW5naW5nIHRoZSBmb3VuZGF0aW9uIGludG8gYSBmcmVzaCBjcmlzaXMuIApXaGlsZSB0aGUgYWdyZWVtZW50IGZvcmVzdGFsbGVkIG1ham9yIGZpc2NhbCBkaXNydXB0aW9uIGZvciB0aGUgdGltZSBiZWluZywgaXQgd2FzIGEgcmFtc2hhY2tsZSBhbmQgaW5hZGVxdWF0ZSBhdHRlbXB0IHRvIGRlYWwgd2l0aCB0aGUgcHJvYmxlbXMgdGhhdCBpdCB3YXMgb3N0ZW5zaWJseSBkZXNpZ25lZCB0byBzb2x2ZS4gVGhlIGN1bG1pbmF0aW9uIG9mIGEgcHJvdHJhY3RlZCwgdHJhZ2kgY29taWMsIGFuZCBlbWJhcnJhc3Npbmcgc3BlY3RhY2xlLCB0aGUgQW1lcmljYW4gVGF4cGF5ZXIgUmVsaWVmIEFjdCBvZiAyMDEyICh0byBwYXJhcGhyYXNlIFdpbnN0b24gQ2h1cmNoaWxsKSB3YXMgbm90IHRoZSBlbmQsIG5vciBldmVuIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGVuZC4gSW4gbGVzcyB0aGFuIHR3byBtb250aHMsIHdlIG1heSBsZWFybiB0aGF0IGl0IHdhcyBub3QgZXZlbiB0aGUgZW5kIG9mIHRoZSBiZWdpbm5pbmcuCkluc2l0dSBTaWducyBBZ3JlZW1lbnQgd2l0aCBVbml2ZXJzaXR5IG9mIEFsYXNrYSBGYWlyYmFua3MgZgpTZWluZSBGaW5nZXIgbXNzZW4gbWl0IElocmVtIFJja2VuIGluIFZlcmJpbmR1bmcgc3RlaGVuLCBkYW1pdCBlciBmaGxlbiBrYW5uLCB3byBkaWUgVmVyc3Bhbm51bmdlbiBzaW5kIHVuZCBTaWUgZG9ydCBtYXNzaWVydC4gVmllbGUgRnJhdWVuIGJyYXVjaGVuIGVoZXIgZGllc2VuIGZsY2hpZ2VuIERydWNrLCBnZXJhZGUgaW0gTGVuZGVud2lyYmVsYmVyZWljaCBvZGVyIGF1ZiBkZW0gS3JldXpiZWluLiAKVGhpcyBpbnZvbHZlcyBhcm91c2luZyBjZXJ0YWluIGZlZWxpbmdzIGluIHlvdXIgcG90ZW50aWFsIGN1c3RvbWVycywgYW5kIGV2ZW4gZW5oYW5jaW5nIHNlbnNlcyBsaWtlIHRoYXQgb2YgdG91Y2guIENhbiB0aGV5ICJmZWVsIiB0aGUgcXVhbGl0eSBvZiB0aGUgQWxsIENsYXkgUG9rZXIgQ2hpcHMgdGhhdCB0aGV5IGFyZSBiZWluZyB1cmdlZCB0byBwdXJjaGFzZT8gRG8gdGhleSBhc3NvY2lhdGUgcG9zaXRpdmUgZmVlbGluZ3MgZnJvbSB0aGUgdGhvdWdodCBvZiBoYXZpbmcgYSBzZXQgb2YgUG9rZXIgQ2hpcHMgdGhhdCB5b3UgYXJlIG9mZmVyaW5nPyBJZiBub3QsIGl0IGlzIHRpbWUgdG8gaW50ZWdyYXRlIHRoZXNlIGFzcGVjdHMgaW50byB5b3VyIG1hcmtldGluZyBjYW1wYWlnbi4gCkknbSBzb3JyeSB0aGF0IHlvdSB0aGluayB0aGF0LiBHaXJsIFNjb3V0cyByZWFsbHkgaGFkIGEgaHVnZSBpbXBhY3Qgb24gbXkgbGlmZS4gCiJPdmVyYWxsLCB3ZSBjb25zaWRlciB0aGlzIHRvIGJlIGEgcG90ZW50aWFsIG5lZ2F0aXZlIGRldmVsb3BtZW50IGFzIGEgZGVsYXkgaW4gQ2FublRydXN0J3MgcmFtcCB0byBmdWxsIHByb2R1Y3Rpb24gd291bGQgbGltaXQgaXRzIGFiaWxpdHkgdG8gY2FwaXRhbGl6ZSBvbiB0aGUgbmVhciB0ZXJtIHVuZGVyIHN1cHBsaWVkIENhbmFkaWFuIG1hcmtldCwiIHNhaWQgQmFuayBvZiBNb250cmVhbCBhbmFseXN0IFRhbXkgQ2hlbiBpbiBhIHJlY2VudCBub3RlIHRvIGNsaWVudHMuCkl0IGlzIHRoZSBXT1JTRSBzb3VuZCBjaGFtYmVyIHRvIGJlIGluLCBldmVyISBUbyBtZSB0aGUgc3RlZWwgc3RhY2tzIGFyZSBidXR0IHVnbHksIGV4Y2VwdCBhdCBuaWdodCB0aW1lIHdoZW4gY29sb3JlZCBsaWdodHMgZGlzcGxheSB0aGVtLiBUaGVuIHRoZXkgYXJlIGEga2FmZmEgZXNrIGRpc3BsYXkgb2YgZGVjbGluaW5nIEFtZXJpY2EuIApSZXNlYXJjaGVycyBzdGF0ZSB0aGF0LCAiRHlzZnVuY3Rpb24gb2YgTk1EQSByZWNlcHRvcnMgc2VlbXMgdG8gcGxheSBhIGNydWNpYWwgcm9sZSBpbiB0aGUgbmV1cm9iaW9sb2d5IG9mIGRpc29yZGVycyBzdWNoIGFzUGFya2luc29uIGRpc2Vhc2UsQWx6aGVpbWVyIGRpc2Vhc2UsZXBpbGVwc3ksIGlzY2hlbWljIHN0cm9rZSwgYW54aWV0eSBhbmQgZGVwcmVzc2lvbiwiIHN1Y2ggdGhhdCwgImxpZ2FuZHMgaW50ZXJhY3Rpbmcgd2l0aCBkaWZmZXJlbnQgc2l0ZXMgb2YgTk1EQSByZWNlcHRvciBjb21wbGV4IGFyZSB3aWRlbHkgaW52ZXN0aWdhdGVkIGFzIHBvdGVudGlhbCBhZ2VudHMgZm9yIHRoZSB0cmVhdG1lbnQgb2YgYSB2YXJpZXR5IG9mIG5ldXJvcHN5Y2hpYXRyaWMgZGlzb3JkZXJzIiAoMjIpLiBJbiBmYWN0LCBkcnVnIGluaGliaXRvcnMgYXQgdGhlIE5NREEgcmVjZXB0b3IgY29tcGxleCwgc3VjaCBhcyBrZXRhbWluZSwgZGVtb25zdHJhdGUgYW50aWRlcHJlc3NhbnQgZWZmZWN0cyAoMjMsIDI0KSwgYnV0IGFsc28gaW5kdWNlIHN1Y2ggc2V2ZXJlIHNpZGUgZWZmZWN0cyB0aGF0IHRoZWlyIGNsaW5pY2FsIHV0aWxpdHkgaXMgbGltaXRlZCAoMzEpLiBNYWduZXNpdW0sIG9uIHRoZSBvdGhlciBoYW5kLCBtYXkgaGF2ZSBhIHNpbWlsYXIgbWVjaGFuaXNtIG9mIGFjdGlvbiBieSBpbnRlcmZlcmluZyB3aXRoIE5NREEgcmVjZXB0b3IgYWN0aXZhdGlvbiB3aXRob3V0IHRoZSBhZHZlcnNlIGNvbnNlcXVlbmNlcyBvZiBkcnVnIGluZHVjZWQgTk1EQSByZWNlcHRvciBibG9ja2FkZSAoMjUpLgpJdCB3YXMgbm90IGEgaGFwcHkgdGltZSBhbmQgaXQgd2FzIGhhcmQgdG8gd2F0Y2ggbXkgZnJpZW5kcyBlbmpveWluZyB0aGVpciBuZXcgYmFiaWVzLCB3aGlsZSBJIHdhcyBzaW1wbHkgdHJ5aW5nIHRvIHN1cnZpdmUgbWluZS4uIApUaGVyZSBoYXZlIGJlZW4gc2ltaWxhciBkZWJhdGVzIGluIGRpZmZlcmVudCB0aW1lcyBhbmQgcGxhY2VzLgpXaW5kb3dzIDcgQWxsIGluIG9uZSBJU08gRnJlZSBEb3dubG9hZCAzMiAvIDY0IEJpdCAuIFBybyBlZGl0aW9uICsgTGFuZ3VhZ2VzKTsgV2luZG93cyA3IFVsdGltYXRlIChSZXRhaWwgT0VNIHdpdGggY29tcGxldGUgZmVhdHVyZXMpLiBTaGFyZSB0aGlzIHBhZ2Ugd2l0aCB5b3VyIGZyaWVuZHMhICAgV2luZG93cyA3IFVsdGltYXRlICAgMzIgQml0IHgyOEF1dG8gQWN0aXZhdGlvbngyOSAgIENyYWNrZWQuIApCZWltIEtvY2hlbiwgZGFubiBzdGVoZSBpY2ggdm9yIGRlbSBIZXJkIHVuZCBncmVpZmUgbWlyIGlucyBIc2NoZW4uIEhhdXB0c2NobGljaCBzdGltdWxpZXJlIGljaCBtaXQgZGVtIEZpbmdlcm4gbWVpbmVuIEtpdHpsZXIsIGFiZXIgaWNoIGhhYmUgYXVjaCAgIG9oIE5FSU4hICAgZXR3YSAxMCB1bnRlcnNjaGllZGxpY2hlIFZpYnJhdG9yZW4sIGRpZSBpY2ggamUgbmFjaGRlbSwgd2llIG1pciB6dW11dGUgaXN0LCBhdXN3aGxlLiBVbmQgZGFubiAuIApEZXRlcm1pbmVkIHRvIG9jY3VweSBoaXMgdGltZSwgRGF2aWQsIGFjY29yZGluZyB0byBCbGFuY2hlLCBlbnJvbGxlZCBhdCBIb2ZzdHJhIFVuaXZlcnNpdHksIGF0IGFnZSA2NiwgdG8gd29yayBvbiBoaXMgQmFjaGVsb3IgZGVncmVlLgpBbSBJIHRoZSBvbmx5IG9uZSB0aGF0IGZpbmRzIGl0IG9kZCB0aGF0IGl0IHRvb2sgdGhlbSB0aGlzIGxvbmcgdG8gYXNrIHlvdSBwcmV0dHkgYmFzaWMgcXVlc3Rpb25zIGFib3V0IHlvdXIgZmFtaWx5PyBJIG1lYW4sIHNoZSBkaWRuJ3Qga25vdyB5b3VyIG1vbSB3b3JrZWQ/IEp1c3Qgb2RkIHRvIG1lIHRoYXQgaWYgaXQgd2FzIHN1Y2ggYSBiaWcgZGVhbCBkZWFsIGJyZWFrZXIgc2hlIHdvdWxkIGhhdmUgdmV0dGVkIHlvdSBzb29uZXIuLiAKU3VyZSwgdGhlcmUgd2VyZSBqb2tlcyB0aHJvd24gaW4gbGlrZSwgIkxvb2sgaXQncyBKYW1lcyBCb25kIiwgb3IgIlRoZXNlIEJlZXIgUG9rZXIgQ2hpcHMgYXJlIGluY3JlZGlibGUiLiAKVGhlIHR3byBicm90aGVycyBwaWN0dXJlZCBpbiB0aGUgcGhvdG8gbGF0ZXIgdG9sZCBwb2xpY2UgdGhhdCBTbW9sbGV0dCBoYWQgcGFpZCB0aGVtIHRvIHN0YWdlIHRoZSBhdHRhY2sgYmVjYXVzZSBoZSB3YW50ZWQgYSByYWlzZSBhbmQgdG8gZnVydGhlciBoaXMgY2FyZWVyLCBwcm9zZWN1dG9ycyBhbGxlZ2UuLiAKQW5kIHlvdSBzYXlpbmcgaXQgYXMgaWYgaXQgaW52YWxpZGF0ZXMgYW55dGhpbmcgSSBzYWlkLiAKQXQgdGhlIGxvd2VyIGxpbWl0cywgcG9zaXRpb24gaXMgbm90IG5lYXJseSBhcyBpbXBvcnRhbnQgaW4gT21haGEvOCBhcyBpdCBpcyBpbiBIb2xkJ2VtLiBXaGlsZSBpdCBpcyBuaWNlIHRvIGFjdCBsYXN0LCBpdCBjYW4gYmUgYWxtb3N0IGFzIGdvb2QgdG8gYWN0IGZpcnN0LCBhbmQgZXZlbiBhY3RpbmcgYmV0d2VlbiBwbGF5ZXJzIGlzIG5vdCBhcyBiYWQgYXMgZG9pbmcgc28gaW4gSG9sZCdlbS4gRHVlIHRvIHRoZSBtb3JlIHN0cmFpZ2h0Zm9yd2FyZCB3YXkgT21haGEvOCBwbGF5cyBhbmQgdGhlIGZhY3QgdGhhdCB5b3Ugc2hvdWxkIGhhdmUgYSB2ZXJ5IGdvb2QgaWRlYSBvZiB5b3VyIGNoYW5jZXMgdG8gd2luIGFmdGVyIHRoZSBmbG9wLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gcGxheSBhbG1vc3QgYW55IGhhbmQgeW91IGRlY2lkZSB0byBwbGF5IGluIGFueSBwb3NpdGlvbi4gQXMgeW91IGJlY29tZSBtb3JlIGV4cGVyaWVuY2VkIGFuZCBtb3ZlIHVwIGluIGxpbWl0cywgcG9zaXRpb24gcGxheXMgYSBtb3JlIGltcG9ydGFudCByb2xlLgpDb2FzdGVyIGJ1aWxkaW5nIGZsb3VyaXNoZWQgZnJvbSB0aGUgdHVybiBvZiB0aGUgY2VudHVyeSB0aHJvdWdob3V0IHRoZSByb2FyaW5nICcyMHMsIHdpdGggYW4gZXN0aW1hdGVkIDIwMDAgY29hc3RlcnMgYnVpbHQgaW4gdGhlIFVTQSBhbG9uZS4gRXZlcnkgcGFyayBvZiBzb21lIHNpemUgaGFkIGEgY29hc3Rlci4gV2hpbGUgdGhlc2Ugd2VyZSBub3QgYXMgaW50ZW5zZSBhcyB0b2RheSdzIHJpZGVzLCBpbWFnaW5lIGhhdmluZyBvbmUgaW4gZXZlcnkgbWFqb3IgY2l0eS4gCk5vbiBJbnZhc2l2ZSBIdW1hbiBCcmFpbiBTdGltdWxhdGlvbiBpbiBDb2duaXRpdmUgTmV1cm9zY2llbmNlOiBBIFByaW1lci4gClByaXZhdGUgRnJlZXJvbGxzIGhhdmUgZmFyIGxlc3MgcGxheWVycyB0aGFuIHRoZSBwdWJsaWMgb25lcyBhbmQgdXN1YWxseSBvZmZlciBiaWdnZXIgcHJpemUgcG9vbHMuIFNvbWUgaHVnZSBwb2tlciBjb21tdW5pdGllcyBoYXZlIHdlZWtseSBmcmVlcm9sbHMgd2l0aCB1cCB0byAkMjAwMCB0byB3aW4gZWFjaCB3ZWVrLiAKQW5kIGxldCBtZSB0ZWxsIHlvdSBvbmNlIGEgcm9vayBpcyBvdXQgdGhleSBhIHBhaW4gaW4gdGhlIGFzcyB0byBnZXQgcmlkIG9mLiBIYXZpbmcgYW4gZXh0cmEgcm9vayBvdmVyIHRoZSBvcHBvbmVudCBpcyBhbiBhYnNvbHV0ZWx5IG1hc3NpdmUgYWR2YW50YWdlLgpQcnVkZW5jZSwgaW5kZWVkLCB3aWxsIGRpY3RhdGUgdGhhdCBHb3Zlcm5tZW50cyBsb25nIGVzdGFibGlzaGVkIHNob3VsZCBub3QgYmUgY2hhbmdlZCBmb3IgbGlnaHQgYW5kIHRyYW5zaWVudCBjYXVzZXM7IGFuZCBhY2NvcmRpbmdseSBhbGwgZXhwZXJpZW5jZSBoYXRoIHNob3duLCB0aGF0IG1hbmtpbmQgYXJlIG1vcmUgZGlzcG9zZWQgdG8gc3VmZmVyLCB3aGlsZSBldmlscyBhcmUgc3VmZmVyYWJsZSwgdGhhbiB0byByaWdodCB0aGVtc2VsdmVzIGJ5IGFib2xpc2hpbmcgdGhlIGZvcm1zIHRvIHdoaWNoIHRoZXkgYXJlIGFjY3VzdG9tZWQuIApCRmx5MzAwMCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvCkZvciBpbnN0YW5jZSwgaWYgdGhlcmUgYXJlIG9ubHkgZml2ZXMgdGhyb3VnaCBuaW5lcyBvbiB0aGUgdGFibGUgYW5kIGFsbCB5b3UgaGF2ZSBsZWZ0IGFyZSB0d29zIGFuZCBmYWNlIGNhcmRzLls1XS4gCiJXZSBoYXZlIGEgdmFyaWV0eSBvZiB0YWJsZXMuIFdlIGhhdmUgMzMgYmxhY2tqYWNrIHRhYmxlcyBpbiB0b3RhbCwgOCBjcmFwcywgNiByb3VsZXR0ZSwgMyBtaW5pIGJhY2NhcmF0LCAyIFBhaSBHb3cgcG9rZXIsIiBzYWlkIE5lYWwgUGVycnksIGNhc2lubyB0YWJsZSBnYW1lcyBkaXJlY3Rvci4KQSBjYXQgd2l0aCBubyBtaXRlcyB1c3VhbGx5IGVuam95cyBpdCBvciwgYXQgd29yc3QsIHdpbGwgZnVzcyBhbmQgdHJ5IHRvIGdldCBhd2F5LiBBIGNhdCB3aG8gaGFzIHVud2FudGVkIGNvbXBhbnkgbGl2aW5nIGluIGhlciBlYXIgY2FuYWwgd2lsbCB1c3VhbGx5IHN0YXJ0IHNjcmF0Y2hpbmcgdmlnb3JvdXNseS4uIApHcmFmdCBjcnVzYWRlciBub3QgdG8gdHJ1c3QgUE0gTW9kaQpKdXNxdScgdW5lIGRhdGUgcmNlbnRlLCBqZSByb21wYWlzIGRlcyBsYW5jZXMgcGFzc2lvbm5lcyBlbiBmYXZldXIgZGUgbCdhbGxpYW5jZSBlbnRyZSBsYSBSdXNzaWUgZXQgbGEgRnJhbmNlLCBsJ0V1cm9wZSBvcmllbnRhbGUgZXQgbCdFdXJvcGUgb2NjaWRlbnRhbGUsIHNpIGluZGlzcGVuc2FibGUgIGwncXVpbGlicmUgZXVyb3BlbiA7IGonZXhhbHRhaXMgbGVzIHRyc29ycyBlc3RodGlxdWVzLCB0aG9sb2dpcXVlcywgc3Bpcml0dWVscyBkb250LCBwYXIgc2EgbHVtaW5ldXNlIHByc2VuY2UsIGwnZ2xpc2Ugb3J0aG9kb3hlIGVucmljaGl0IGxlIHBhdHJpbW9pbmUgcmVsaWdpZXV4IGRlIGxhIEZyYW5jZS4gCkkganVzdCBrbm93IHdoYXQgSSB3YW50IGFuZCBJIGdvIGFmdGVyIGl0IGxhc2VyIHZpc2lvbiBvbi4gCkkgTE9WRSBCT1RXIEFORCBJVCBDTEVBUkxZIEhBUyBUSEUgR1JFQVRFU1QgT1ZFUldPUkxEIElOIFRIRSBFTlRJUkUgU0VSSUVTLCBQT1NTSUJMWSBBTlkgU0VSSUVTLCBCVVQgTEVUIE5PVCBQUkVURU5EIElUIERST1BQRUQgQSBMT1QgT0YgR1JFQVQgVEhJTkdTIElOIE9SREVSIFRPIE1BS0UgVEhFIEdBTUUgSVQgV0FOVEVEIFRPIE1BS0UuClRha2UgY29ycmVjdGlvbnMgZ3JhY2lvdXNseS4gClRoZSBjbGFzc2ljIGNsYXkgY2hpcCBzZXRzIHRoYXQgaGF2ZSBiZWVuIGhpc3RvcmljYWxseSB1c2VkLCBhbmQgdGhhdCBhcmUgc3RpbGwgZW1wbG95ZWQgaW4gc29tZSBwbGFjZXMgZXZlbiBjdXJyZW50bHksIHdlcmVuJ3QgY3JlYXRlZCBlbnRpcmVseSBvZiBjbGF5IGV4Y2VwdCBhdCB0aGUgdmVyeSBiZWdpbm5pbmcuIFByZXR0eSBxdWlja2x5IG9uIGl0IHdhcyBkaXNjb3ZlcmVkIHRoYXQgdGhlIGNoaXBzIHRoYXQgd2VyZSBtYWRlIGNvbXBsZXRlbHkgb2YgY2xheSB3ZXJlIGp1c3QgdG9vIGVhc2lseSBicm9rZW4uIApTY2FsZXMsIHJlc2NydWl0ZXIuIFR1ZXNkYXkgdG8gaW50ZXJ2aWV3IG1lbiBpbnRlcmVzdGVkIGluIGpvaW5pbmcgdGhlIE5hdnkuIERFQVRIUyBPRiBUSEUgREFZIEJ5IFRIRSBBU1NPQ0lBVEVEIFBSRVNTIE1BUkJMRUhFQUQsIE1hc3MuIApDTyBzaG93cyBoaXMgaGFuZCB0byBVVEcsIGFuZCBVVEcgc2F5cyBoZSBzcGxpdCB0aGUgY29zdCBvZiB0aGUgY2FsbCB3aXRoIENPICh3dGYgYnV0IHdoYXRldmVyKS4gVVRHIHB1dHMgaW4gJDMwIGFuZCBDTyBmbGlwcyBvdmVyIEo0aGguIEkgc2F5ICJjYWxsPyIgYW5kIG1vdGlvbiB0byBmbGlwIG15IGNhcnMgb3Zlci4gClRoZXNlIGRheXMsIHRoZSA0NSB5ZWFyIG9sZCBpcyBkb2luZyBhIHdvbmRlcmZ1bCB3b3JrIGFzIHRoZSBwcmVzaWRlbnQgb2YgdGhlIE1jR3JhdGggRm91bmRhdGlvbiwgYSBicmVhc3QgY2FuY2VyIHN1cHBvcnQgYW5kIGVkdWNhdGlvbiBjaGFyaXR5IGhlIGZvdW5kZWQgd2l0aCBoaXMgZGVjZWFzZWQgZmlyc3Qgd2lmZSwgSmFuZS4uIApJbiBKYW51YXJ5LCB0aGUgU0VDIHNhaWQgdGhlIGVmZmVjdGl2ZSBkYXRlIGZvciBzb21lIGtleSBydWxlcyB3YXMgYmVpbmcgcHVzaGVkIGJhY2sgZnJvbSBlYXJseSBGZWJydWFyeSB0byBlYXJseSBNYXJjaC4gCkhvd2V2ZXIsIHRoZSBtb3ZlbWVudCdzIGluZGlyZWN0IGluZmx1ZW5jZSB3aXRoaW4gdGhlIFJlcHVibGljYW4gUGFydHkgcmVhY2hlcyBmYXIgYmV5b25kIGl0cyBvZmZpY2Vob2xkZXJzLiAKRXZlcnlkYXkgY2lyY3Vtc3RhbmNlcyBjYW4gcmVzdHJpY3QgYmxvb2QgZmxvdzogd2hlbiBmZWV0IGdldCBjb2xkIG91dGRvb3JzIG9yIGluIGNvbGQgd2F0ZXI7IHdoZW4gc2hvZXMsIHN0b2NraW5ncywgb3IgdW5kZXJnYXJtZW50cyBhcmUgdG9vIHRpZ2h0OyBldmVuIHdoZW4geW91J3ZlIHNhdCB0b28gbG9uZyB3aXRoIHlvdXIgbGVncyBjcm9zc2VkLiBTbW9raW5nIHJlZHVjZXMgY2lyY3VsYXRpb24gdG8gYWxsIHBhcnRzIG9mIHRoZSBib2R5LCBhcyBkb2VzIGRyaW5raW5nIHRvbyBtdWNoIGNvZmZlZSBvciBjYWZmZWluYXRlZCBzb2RhIChib3RoIG5pY290aW5lIGFuZCBjYWZmZWluZSBjb25zdHJpY3QgYmxvb2QgdmVzc2VscykuIEFuZCBpZiB5b3UgYXJlIHVuZGVyIHNldmVyZSBzdHJlc3MsIHlvdXIgbmVydmVzIGNhbiBjb25zdHJpY3QgeW91ciBzbWFsbCBibG9vZCB2ZXNzZWxzLCBsZXNzZW5pbmcgdGhlaXIgYWJpbGl0eSB0byBjYXJyeSBibG9vZC4gU29tZSBuZXJ2b3VzIGJyaWRlcyBhbmQgZ3Jvb21zIHJlYWxseSBkbyBoYXZlICJjb2xkIGZlZXQiIQpJIGxvdmUgZ2VudGxlbWVuIGFuZCBJIGxvdmUgZ2V0dGluZyBteSBoYW5kcyBvbiB0aGVtISBJIGFtIHBhdGllbnQsIGxvdmluZywgZ2VudGxlLiBXaGF0IGRvIHlvdSB3YW50IGluIGEgZ3JlYXQgYm9keSBydWI/IFRlbGwgbWUhIE9uZSB0aGluZyBJIGNvbnNpZGVyIGltcG9ydGFudDogbG90cyBvZiB0aW1lICAgYXQgbGVhc3QgYW4gaG91ciBhbmQgYSBoYWxmIHRvZ2V0aGVyICAgeW91IG9uIHRoZSB0YWJsZSBtb3N0IG9mIHRoZSB0aW1lLCBtZSBvbiB0aGUgdGFibGUgc29tZSBvZiB0aGUgdGltZSEKVGhlIG9ubHkgdGltZSB0aGlzIG1pZ2h0IGNhdXNlIHNvbWUgcHJvYmxlbXMgaXMgZHVyaW5nIHRoZSBwaGFzZSBiZWZvcmUgaGUgdGVsZXBvcnRzIHlvdSwgYXMgaGUgY2FuIHJlZ2VuZXJhdGUgaGlzIGhlYWx0aCBxdWlja2VyIHRoYW4geW91IGNhbiBkbyBkYW1hZ2Ugb25jZSB5b3UgcmV0dXJuLiBUaGlzIGhhcyBvbmx5IGhhcHBlbmVkIG9uY2Ugb3IgdHdpY2UuLiAKVGhleSBmYWlsIHRvIHJlYWxpemUgdGhhdCB0aGUgdmVyeSBwbGF0Zm9ybSB0aGF0IHRoZXkgZXNwb3VzaW5nIHRoZWlyIGFudGkgY2FwaXRhbGlzdCB2aWV3cyBvbiBvbmx5IGV4aXN0cyBiZWNhdXNlIG9mIGNhcGl0YWxpc20uIApZb3VyIHRoZW9yeSBpc24gdG90YWxseSByZWRpY3Vsb3VzLiBqdXN0IGEgc21hbGwgbGl0dGxlIHBsb3Rob2xlLCBDeWJlcmxpZmUgYW5kIEthbXNraSB3YW50IHRvIG1ha2UgbW9uZXksIHRoZXkgZG9uIG1ha2UgbW9uZXkgaWYgdGhleSBoYXZlIHRvIHJlbGVhc2UgYWxsIHRoZSBhbmRyb2lkcyBpbiB0aGVpciBwb3NzZXNzaW9uLiBUaGV5IGFyZSBhIGNvbXBhbnkuCkRSIG9yIERpbWluaXNoaW5nIFJldHVybnMgd2FzIGltcGxlbWVudGVkIChhZmFpaykgdG8gY29tYmF0IHRoaXMgdHlwZSBvZiBhZmsgYmVoYXZpb3IgYXMgaXQgd2FzIG9uY2UgcmFtcGFudCBvbiBhIGZhciBsYXJnZXIgc2NhbGUgYW5kIGluY2x1ZGVkIG11bHRpcGxlIGZhY2V0cyBvZiBib3QgcnVubmluZywgbWFjcm9pbmcsIGhvdGtleWluZywgM3JkIHBhcnR5IHByb2dyYW1zLCBhbmQgYm90dGVycyBsaW5rZWQgd2l0aCBnb2xkIHNlbGxpbmcgc2l0ZXMuIEhlcmUgaXMgdGhlIHdpa2kgbGluayBidXQgaWYgeW91cmUgbGF6eS4gCkFuIEZESUMgb3IgTkNVQSBpbnN1cmVkIHNhdmluZ3MgYWNjb3VudCBpcyB5b3VyIGJlc3QgYmV0IGZvciBlbWVyZ2VuY3kgbW9uaWVzLiBZZXMsIGludGVyZXN0IHJhdGVzIGFyZSBwb29yIHJpZ2h0IG5vdyBhbmQgcHJvYmFibHkgd29uIGdvIHVwIGZvciBhbm90aGVyIHllYXIsIGJ1dCBpbnZlc3RpbmcgaW4gYW55dGhpbmcgbGVzcyBsaXF1aWQgZGVmZWF0cyB0aGUgcHVycG9zZSBvZiBiZWluZyBhbiBlbWVyZ2VuY3kgZnVuZC4KSSBzdGlsbCB0aGluayBXQiBpcyBraW5kIG9mIHdhc3RpbmcgdGhlIGNvbmNlcHQgb2YgdGhlIFN1aWNpZGUgU3F1YWQuIElkZWFsbHkgd2Ugc2hvdWxkIG1lZXQgc29tZSBvZiB0aGVzZSBtb3JlIG1pbm9yIHZpbGxhaW5zIGluIGhlcm8gc29sbyBtb3ZpZXMsIGFuZCBmcm9tIHRoZXJlIHRoZXkgZ2V0IGFwcHJlaGVuZGVkIG9yIHdoYXRldmVyIGFuZCB0aGVuIFdhbGxlciByZWNydWl0cyB0aGVtIGZvciB0aGUgc3F1YWQuIFRoZXkgbGl0ZXJhbGx5IGhhZCBhIHRhbGVudGVkIGd1eSB3aG8gd2FzIHdpbGxpbmcgdG8gZG8gaXQuLiAKTGV0IGJlIGhvbmVzdCwgdGhlIG1haW4gcmVhc29uIGNyeXB0byBoYXMgdGFrZW4gb2ZmIGlzIGJlY2F1c2Ugb2YgdGhlIGh5cGUgdGhhdCBpdCB3b3VsZCBiZSBhbiBlYXN5IHJldHVybiBvbiB0aGVpciBpbnZlc3RtZW50LiBOb3QgYmVjYXVzZSBwZW9wbGUgd2FudCB0byB1c2UgaXQgYXMgYW4gYWx0ZXJuYXRpdmUgdmVyc2lvbiBvZiBtb25leSwgd2hpY2ggaXMgc3VwcG9zZWRseSBpdHMgbWFpbiBwdXJwb3NlLi4gCkFuZCBpdCdzIE9LIGlmIHRoZXJlIGFyZSBvbmUgb3IgdHdvIG1vcmUgc2VhdHMgdGhhbiB5b3Ugbm9ybWFsbHkgbmVlZC4gCllvdXIgYmFua2luZyBvbiB5b3VyIHRlYW1tYXRlcyB0byBkbyB0aGUgbWFqb3JpdHkgb2YgdGhlIGRhbWFnZSwgYW5kIHlvdSB0byBrZWVwIHRoZW0gYWxpdmUuT25lIHRoaW5nIHRoYXQgSSBwZXJzb25hbGx5IGRvLCBzbyBJIGNhbiBkbyBtb3JlIGRhbWFnZSBpcyBydW4gUHVsc2UgYXMgYSBzZWNvbmQgc2tpbGwgd2l0aCBhbiBTTUcuIFNNR3MgaGF2ZSBoaWdoIGJhc2UgQ3JpdCBjaGFuY2UgYW5kIGEgaGlnaCBlbGVjdHJvbmljcyBtZWFucyB5b3VyIFB1bHNlIGdldHMgbGlrZSAzNyUgbW9yZSBDSEMgYW5kIGlzIGFsd2F5cyBvZmYgY29vbGRvd24uIApUaGlzLiBUbyBiZSBhIGxpdHRsZSBtb3JlIHNwZWNpZmljLCBJIGhhdmUgaGVhcmQgcHJvcyBzYXksICJQb2tlciBpcyBtb3N0bHkgbG9zaW5nLiIgSXQgaXMgYWxsIGFib3V0IGtub3dpbmcgdGhlIG9kZHMgb2YgYSBjZXJ0YWluIG1vdmUgd29ya2luZyBhIGNlcnRhaW4gcGVyY2VudGFnZSBvZiB0aGUgdGltZS4gQXNrIGFueW9uZSBhYm91dCBhbiBhbGwgaW4gY2FsbCwgaWYgeW91IGhhdmUgcG9ja2V0IGFjZXMsIHBvY2tldCBraW5ncywgb3IgYWNlL2tpbmcgc3VpdGVkLCB0aGVzZSBhcmUgcHJlbWl1bSBoYW5kcyBhbmQgYXJlIGNvbnNpZGVyZWQgYXV0b21hdGljIGNhbGxzLCBidXQgdGhleSBhcmUgbm90IDEwMCUgd2luIGNvbmRpdGlvbnMsIGFzIGFueW9uZSB3aG8gcGxheXMgb2Z0ZW4gY2FuIHRlbGwgeW91LiBCdXQgdGhleSB3aWxsIHdpbiBNT1NUIG9mIHRoZSB0aW1lLiBJIGhhdmUgd2F0Y2hlZCBnYW1lcyB3aGVyZSB0aGUgaGFuZHMgd2VyZSByZXZpZXdlZCBhbmQgcGVyY2VudGFnZXMgc2hvd24gYWZ0ZXIgZWFjaCBjYXJkIGlzIGxhaWQ7IHJlYWwgcHJvcyBrbm93IHByZXR0eSBtdWNoIHdoZXJlIHRoZXkgc3RhbmQgaW4gdGhlIG9kZHMgZXZlcnkgc3RlcCBvZiB0aGUgd2F5LiBJdCBhbGwgYWJvdXQgY2FsbGluZywgYmV0dGluZywgb3IgZm9sZGluZyBhdCB0aGUgcmlnaHQgdGltZSB0byBnaXZlIHlvdXJzZWxmIHRoZSBncmVhdGVzdCBjaGFuY2UgYXQgbWFraW5nIG9yIHByZXNlcnZpbmcgbW9uZXkuIFlvdSBtYXkgaGF2ZSB0aGUgYmVzdCBoYW5kIGF0IHRoZSByaXZlciwgYnV0IHRoYXQgdHVybiBjYXJkIGNhbiBjaGFuZ2UgZXZlcnl0aGluZywgdGhlbiBpdCBpcyB0aW1lIHRvIGZvbGQuIFlvdSBsb3N0IHRoZSBoYW5kLCBidXQgbWFkZSB0aGUgcmlnaHQgbW92ZS4KVGhlIHByb2JsZW0gaXMgdGhhdCBvbmx5IGFib3V0IGhhbGYgdGhlIHBvcHVsYXRpb24gd2FudGVkIEJyZXhpdCwgYW5kIG5vIG9uZSBIQUQgYW55IGlkZWEgd2hhdCB0aGF0IHdvdWxkIGxvb2sgbGlrZSBpbiBhIHByYWN0aWNhbCBzZW5zZS4gClNlY29uZGluZyB0aGlzLiBJJ20gaW5qdXJlZCBub3cgYW5kIG91dCBmb3Igd2hhdCdzIGxvb2tpbmcgbGlrZSA2IHdlZWtzIChoZWxsbyBjcm9zcyB0cmFpbmluZyEpLCBidXQgbGVhZGluZyB1cCB0byBteSBpbmp1cnkgSSdkIGdldCBob3JyaWJseSBuZXJ2b3VzIHRoZSBkYXkgYmVmb3JlL2RheSBvZiBoYXJkIHdvcmtvdXRzLCBkZXNwaXRlIGFsd2F5cyBkb2luZyByYXRoZXIgd2VsbCBpbiB0aGVtIGFuZCBoYXZpbmcgbm8gcmVhbCByZWFzb24gdG8gZ2V0IG5lcnZvdXMuIFdpdGggdGhlIHBlcnNwZWN0aXZlIHRoZSBpbmp1cnkgaGFzIGdpdmVuIG1lIHNvIGZhciwgSSB3YXMgcHV0dGluZyB0b28gbXVjaCBwcmVzc3VyZSBvbiBteXNlbGYgKG1lbnRhbGx5IGFuZCBwaHlzaWNhbGx5KSwgYW5kIHRoYXQgcGVyZmVjdGlvbmlzbSBtYWRlIG1lIHNvcnQgb2YgbG9zZSB0aGUgZnVuIHBhcnQgb2YgdHJhaW5pbmcuLiAKTWF5YmUgZHVlIHRvIGNvb3JkaW5hdGlvbiwgb3IgbXVzY2xlIHRvbmUsIG9yIGVuZXJneSBsZXZlbHMsIHRoZXkgbm90IGNhcGFibGUgb2Ygd2Fsa2luZyB2ZXJ5IGZhciAgIGJ1dCB0aGV5IGFyZSB0ZWNobmljYWxseSBjYXBhYmxlIG9mIHdhbGtpbmcuIFNob3VsZCB3ZSBleHBlY3QgdGhlbSB0byBuZXZlciB1c2UgYSB3aGVlbGNoYWlyLCBqdXN0IGJlY2F1c2UgdGhleSBhcmVuIDEwMCUgd2hlZWxjaGFpciBib3VuZD8gRXZlbiBpZiBpdCBzZXZlcmVseSBsaW1pdHMgdGhlIGxpZmUgZXhwZXJpZW5jZXMgYXZhaWxhYmxlIHRvIHRoZW0/IFRoYXQgZG9lc24gbWFrZSBzZW5zZSB0byBtZS4gCjR0aCB5ZWFyIG1lZCBzdHVkZW50IGhlcmUuIE9uIG15IEVSIHJvdGF0aW9uIGEgY291cGxlIG1vbnRocyBiYWNrLCBJIHdhbGtlZCBpbiB0byB0aGUgRUQgYW5kIHdhcyBpbW1lZGlhdGVseSBhc2tlZCB0byBoZWxwIGEgbnVyc2UgYW5kIHJlc2lkZW50IHB1dCBhIGNhdGhldGVyIGluIGEgcGF0aWVudC4gTm93IGEgY2F0aGV0ZXIgcGxhY2VtZW50IGlzIHVzdWFsbHkgYSBvbmUgcGVyc29uIGpvYiBzbyBJIHdhcyBwcmV0dHkgY29uZnVzZWQgYXMgdG8gd2h5IHRoZXkgbmVlZGVkIG15IGhlbHAuClRIRSBJTkNPTUUgUEFSVE5FUlNISVAgUFJPR1JBTVRoaXMgcHJvZ3JhbSBpcyBkZXNpZ25lZCB0byBnZW5lcmF0ZSBhZGRpdGlvbmFsIHJldmVudWUgYXQgdHJhZGUgb3IgY29uc3VtZXIgc2hvdyBhcyB3ZWxsIGFzIGJlaW5nIG9mIGJlbmVmaXQgdG8geW91ciBhdHRlbmRlZXMuV2Ugc2V0IHVwIG91ciBtYXNzYWdlIGNoYWlycyBuZWFyIG9yIGFyb3VuZCB0aGUgdHJhZGUgc2hvdyBmbG9vci4gCkFmdGVyIHRoYXQsIHdlaXJkIGNvaW5jaWRlbmNlcyBzdGFydGVkIGhhcHBlbmluZyBsaWtlIHRoZSBkcnVtbWVyIGxlYXZpbmcgYmVmb3JlIHRoZSBlbmQgb2YgdGhlIHRvdXIsIHJhbmRvbSByZWNvcmRpbmcgZmlsZXMgbWlzc2luZyBmcm9tIHRoZWlyIGRyaXZlLCBhbmQgb3RoZXIgZm9ybXMgb2YgYmFkIGx1Y2suIEFuZCB0aGVpciBhbGJ1bSBEZWxvdXNlZCBpbiB0aGUgQ29tYXRvcml1bSB3YXMgaW5zcGlyZWQgYnkgdGhlIHN0dWZmIHRoZXkgdGhvdWdodCBtaWdodCBiZSBnb2luZyBvbiBpbnNpZGUgdGhlaXIgZnJpZW5kIGhlYWQgd2hvIHdhcyBpbiBhIGNvbWUgYXQgdGhlIHRpbWUuIApUaGUgUnVzc2lhbiBGZWRlcmF0aW9uIGhhc24ndCBicm9rZW4gYW55IEFtZXJpY2FuIGxhd3MgdGhhdCB3ZSBrbm93IG9mLiAKSGUgd2FpdGVkIGZvciBtZSB0byBzdGFuZCBhbGwgdGhlIHdheSB1cCwgbG9va2VkIG1lIHN0cmFpZ2h0IGluIHRoZSBleWVzLCBhbmQgcmVhY2hlZCBvdmVyIGFuZCBmbGlwcGVkIG15IHRyYXAgdXBzaWRlIGRvd24gKHRoZXkgYXJlIHVzZWxlc3MgdXBzaWRlIGRvd24pLCB3aXRob3V0IGJyZWFraW5nIGV5ZSBjb250YWN0LiAKQSBzdGF0ZSBsYXdtYWtlciBmcm9tIFF1ZWVucyBpcyB0cnlpbmcgdG8gY2xvc2UgdGhlIGN1cnRhaW4gb24gaGFwcHkgZW5kaW5nIG1hc3NhZ2UgcGFybG9ycyB3aXRoIGEgYmlsbCByZXF1aXJpbmcgc3BhcyB0byByZWdpc3RlciB3aXRoIHRoZSBzdGF0ZSB0byB3ZWVkIG91dCB0aG9zZSB0aGF0IGFyZSBmcm9udHMgZm9yIHByb3N0aXR1dGlvbiwgVGhlIFBvc3QgaGFzIGxlYXJuZWQuCklmIHJoeW1pbmcgY29tcGxpbWVudHMgdGhlIHdvcmRzL3NvbmcsIHRoZW4gSSB1c2UgaXQuIElmIGl0IGRvZXNuIEkgZG9uIHRyeSB0byBmb3JjZSBpdC4gSnVzdCBzb3J0YSBkZXBlbmRzIG9uIHdoYXQgc3VpdHMgdGhlIHNvbmcgYmVzdCwgd2hpY2ggaXMgYmFzaWNhbGx5IHRoZSBudW1iZXIgMSBydWxlIG9mIHNvbmd3cml0aW5nLiAKT2YgYWxsIHRoZSBtYW55IG91dHN0YW5kaW5nIGJlYWNoc2lkZSBkZXN0aW5hdGlvbnMgYWxvbmcgdGhlIEVhc3QgQ29hc3Qgb3IgZXZlbiB0aGUgV2VzdCBDb2FzdCwgQXRsYW50aWMgQ2l0eSBpcyB0cnVseSBvbmUgb2YgYSBraW5kLiBIb21lIHRvIEFtZXJpY2EgZmlyc3QgYm9hcmR3YWxrIGFuZCBWZWdhcyBzdHlsZSBjYXNpbm8gZ2FtYmxpbmcsIEF0bGFudGljIENpdHkgb2ZmZXJzIGEgbGl0dGxlIGJpdCBvZiBldmVyeXRoaW5nIGZvciBtb3N0IGV2ZXJ5IHR5cGUgb2YgdHJhdmVsZXIuIEFzIGEgZmFtaWx5IGZyaWVuZGx5IGRlc3RpbmF0aW9uIGFuZCB0aGUgZW50ZXJ0YWlubWVudCBjYXBpdGFsIG9mIHRoZSBKZXJzZXkgU2hvcmUsIHRoZXJlIGFyZSBtYW55IGxvY2FsIGF0dHJhY3Rpb25zIHRvIGVuam95LCBsaWtlIFN0ZWVsIFBpZXIsIHRoZSBvbGRlc3QgdGhlbWUgcGFyayBpbiB0aGUgY2l0eSwgdGhlIEF0bGFudGljIENpdHkgQXF1YXJpdW0gYW5kIHRoZSBBdGxhbnRpYyBDaXR5IEJvYXJkd2FsayBpdHNlbGYsIGluIGFkZGl0aW9uIHRvIGEgd2VhbHRoIG9mIGFmZm9yZGFibGUgcmVzdGF1cmFudHMgYW5kIGxvZGdpbmcsIGluY2x1ZGluZyBjYXNpbm8gaG90ZWxzIGxpa2UgQm9yZ2F0YSBIb3RlbCBDYXNpbm8gU3BhIGFuZCBDYWVzYXJzIEF0bGFudGljIENpdHkuIFdoaWxlIHRoaXMgaGlzdG9yaWMgc2Vhc2lkZSBkZXN0aW5hdGlvbiBtYXkgbm90IG1lYXN1cmUgdXAgdG8gTGFzIFZlZ2FzIGluIHRlcm1zIG9mIGhvdGVscywgY3VsaW5hcnkgY2hvaWNlcyBhbmQgbmlnaHRsaWZlLCBzb21ldGhpbmcgYWx3YXlzIHNlZW1zIHRvIGJlIGdvaW5nIG9uIGluIEF0bGFudGljIENpdHksIGZyb20gd29ybGQgY2xhc3MgbmlnaHRjbHVicyBsaWtlIEhhdmVuIGFuZCBCb29naWUgTmlnaHRzIGF0IHRoZSBUcm9waWNhbmEgSG90ZWwsIHRvIGxpdmUgZW50ZXJ0YWlubWVudCBsaWtlIHRoZSBmcmVlIHN1bW1lcnRpbWUgY29uY2VydHMgb3IgdGhlIEJlYWNoZmVzdCBDb25jZXJ0IFNlcmllcyBvbiB0aGUgYmVhY2gsIGFzIHdlbGwgYXMgdXBjb21pbmcgbGVhZGluZyBhY3RzIGxpa2UgS2V2aW4gSGFydCBhdCB0aGUgQm9hcmR3YWxrIEhhbGwsIFJpbmdvIFN0YXJyIGF0IEJvcmdhdGEgYW5kIHRoZSBUZWRlc2NoaSBUcnVja3MgQmFuZCBhdCBUcm9waWNhbmEuIElmIHRob3NlIHN1Z2dlc3Rpb25zIHN0aWxsIGFyZW4gZW5vdWdoIHRvIHNwZW5kIGEgYmVhY2hzaWRlIHZhY2F0aW9uIGluIEF0bGFudGEgQ2l0eSwgdGhlcmUgYXJlIHBsZW50eSBvZiBvdGhlciB0aGluZ3MgdGhpbmdzIHRvIGRvLCBzdWNoIGFzIHdhdGVyIHNwb3J0cyBsaWtlIGtheWFraW5nIGFuZCBqZXQgc2tpaW5nLCBzaG9wcGluZyBhdCBwbGFjZXMgbGlrZSBUaGUgUGxheWdyb3VuZCBhbmQgVGFuZ2VyIE91dGxldHMgVGhlV2FsayBhbmQgY3VsdHVyYWwgYXR0cmFjdGlvbnMgbGlrZSB0aGUgaGlzdG9yaWMgQWJzZWNvbiBMaWdodGhvdXNlLCBBdGxhbnRpYyBDaXR5IEV4cGVyaWVuY2UsIFdvcmxkIFdhciBJIE1lbW9yaWFsIGFuZCB0aGUgaWNvbmljIEx1Y3kgdGhlIEVsZXBoYW50LCBhIE5hdGlvbmFsIEhpc3RvcmljIExhbmRtYXJrIGluIHRoZSBuZWFyYnkgdG93biBvZiBNYXJnYXRlLgpBZ3JlZSB3aXRoIHRoZSBvdGhlciBwb3N0ZXIuIApJIGp1c3Qgc2F3IHlvdXJlIGluIE90dGF3YS4gSSBrZWVwIGhlYXJpbmcgYWJvdXQgQ291cnR5YXJkIGluIHRoZSBNYXJrZXQgYmVpbmcgYSBncmVhdCBvcHRpb24uIFdlIGhhZCBvaXJzIGluIGEgY29tbXVuaXR5IGNlbnRyZSBpbiBWYWwgZGVzIG1pbnRzIGJlY2F1c2UgZmFtaWx5IHdhcyBvdXQgdGhlcmUuIApKdXN0IGtub3cgSSd2ZSBiZWVuIHRocm91Z2ggdGhlIGEgd2lkZSB2YXJpZXR5IG9mIG1lZHMgYW5kIGxpa2UgdG8gcGFzcyB0aGUgaW5mb3JtYXRpb24gb24gdG8gb3RoZXJzIGluIGNhc2UgdGhleSBtYXkgYmUgbG9va2luZyBmb3IgYXNzaXN0YW5jZS5BbHNvIHRoZSBtZWRzIEkgbWVudGlvbmVkIGRvIGludGVyYWN0IHdpdGggb3RoZXIgbWVkcyBhbmQgYWxzbyBjb21lIHdpdGggdGhlIHBvdGVudGlhbCBmb3IgYWRkaWN0aW9uIGFuZCBhZHZlcnNlIGVmZmVjdHMuIApJdCBub3QgYSBnb3Zlcm5tZW50IHRha2VvdmVyIGFzIG11Y2ggYXMgaXQgYSBtYWtlIG92ZXIsIGhlYWx0aGNhcmUgaXMgbm90IGEgcHJvZHVjdCB0aGF0IHNob3VsZCBiZSBzb2xkIG9uIHRoZSBvcGVuIG1hcmtldC4gSXQgYSByaWdodCwgdGhhdCBuZWVkcyB0byBiZSB1bml2ZXJzYWwgZm9yIHRoZSBjb21tb24gZ29vZC4gVGhlIGJlc3Qgd2F5IHRob3VnaCB0byBwcmV2ZW50IHRoZSBzbG90aCB0aGF0IG9jY3VycyB3aXRoIGEgY29tcGxldGUgbmF0aW9uYWxpc2F0aW9uIGlzIHdpdGggdGhlIFNvY2lhbCBJbnN1cmFuY2UgTW9kZWwuIApBZnRlciB5b3UgaGF2ZSByZWdpc3RlcmVkIGp1c3QgbG9naW4gYW5kIG1ha2UgeW91ciBmaXJzdCBkZXBvc2l0LldlZWtseSBmcmVlIGJldHMgYXQgODg4IFNwb3J0IGFyZSBnaXZlbiB3aXRoIFRoZSBBY2NhIENsdWIgcHJvbW90aW9uLiAKU2luY2UgdGhleSBjYW1lIG9uIHRoZSBzY2VuZSwgdGhlIHRocmVlIGdhbWluZyBob3VzZXMgaGF2ZSBjb3JyYWxsZWQgYSBzaWduaWZpY2FudCBwaWVjZSBvZiB0aGUgcmVnaW9uYWwgZW50ZXJ0YWlubWVudCBkb2xsYXJzLiAKQXMgd2VsbCwgT250YXJpbyBIZWFsdGggVGVhbXMgd2lsbCBiZSBlc3RhYmxpc2hlZCB0byBwcm92aWRlIHdoYXQgRWxsaW90dCBjYWxsZWQgc2VhbWxlc3MgYWNjZXNzIHRvIGhlYWx0aCBzZXJ2aWNlcywgaW5jbHVkaW5nIHByaW1hcnkgY2FyZSwgaG9zcGl0YWxzLCBob21lIGFuZCBjb21tdW5pdHkgY2FyZSwgcGFsbGlhdGl2ZSBjYXJlLCByZXNpZGVudGlhbCBsb25nIHRlcm0gY2FyZSwgYW5kIG1lbnRhbCBoZWFsdGggYW5kIGFkZGljdGlvbnMgc2VydmljZXMuClRoZSBhY2N1c2VkIHNhaWQgc2hlIHdvcmtzIGZ1bGwgdGltZSBwdXR0aW5nIGluZGlnZW5vdXMgeW91dGggaW4gd29yayBhbmQgaGFzIGEgc3RhYmxlIGhvbWUgbGlmZS4KSGVhcmluZyB0aGlzIGZyb20gYSBwZXJzb24gSSBhZG1pcmVkLCBJIGZlbHQga2luZGEgdG91Y2ggYnV0IGFsc28gaGFkIGEgYml0IG9mIGEgYmFkIGNvbmNzY2llbmNlIGFmdGVyd2FyZCwgc28gSSBtYWRlIHN1cmUgdG8gaGVscCBoZXIgb3V0IGluIGNsYXNzIHdoZW4gc2hlIHdhcyBzdHJ1Z2dsaW5nLi4gCiBIaWdoLiAKWW91IG1pZ2h0IHNheSAiUmVsYXRpb25zaGlwIGJ1aWxkaW5nIGlzIGNyaXRpY2FsIGluIGdyb3dpbmcgc2FsZXMgcmVzdWx0cy4gSSB3YXMgdGhlIHRvcCBzZWxsZXIgdGhlIGxhc3QgdGhyZWUgbW9udGhzIGF0IGNvbXBhbnkgWCwgbGFyZ2VseSBiYXNlZCBvbiBteSBhYmlsaXR5IHRvIGNvbW11bmljYXRlIHdlbGwgYW5kIGJ1aWxkIHJhcHBvcnQgd2l0aCBjbGllbnRzLiIuIApTaSBsJ0FuY2llbiBDb2RlIHBuYWwgcGFybGUgZGUgZG1lbmNlLCBsZSBOb3V2ZWF1IENvZGUgcG5hbCByZXByZW5kIGNldHRlIGNhdXNlIHN1YmplY3RpdmUgZGUgbm9uIHJlc3BvbnNhYmlsaXQgIGwnYXJ0aWNsZSAxMjIgMSwgZW4gcmVudm95YW50ICBsYSBub3Rpb24gZGUgdHJvdWJsZSBwc3ljaGlxdWUgZXQgbmV1cm9wc3ljaGlxdWUgOgpUaGV5IGFsbCBzcG9rZSBvbiBjb25kaXRpb24gb2YgYW5vbnltaXR5IGZvciBmZWFyIG9mIHJldHJpYnV0aW9uLkFobWVkLCB3aG8gc3BvcnRzIGEgYnVzaHkgYmxhY2sgbXVzdGFjaGUgYW5kIHVzdWFsbHkgZHJlc3NlcyBpbiBhIHNpbXBsZSwgd2hpdGUgc2hhbHdhciBrYW1lZXosIGVhcm5lZCBhIHJlcHV0YXRpb24gZm9yIGNhcnJ5aW5nIG91dCBoaXMgaWxsaWNpdCB3b3JrIGVmZmljaWVudGx5LCBzYWlkIHR3byBwb2xpY2Ugb2ZmaWNlcnMgd2hvIGhhdmUga25vd24gaGltIGV2ZXIgc2luY2UgaGUgam9pbmVkIHRoZSBmb3JjZS4gCldoaWxlIHBhdGllbnRzIHdpdGggYSByZWd1bGFyIHNleCBwYXJ0bmVyIGNhbiBkbyB0aGVyYXB5ICJob21ld29yaywiIHNpbmdsZSBtZW4gYW5kIHdvbWVuLCB3aG8sIGFmdGVyIGFsbCwgbWlnaHQgYmUgc2luZ2xlIGJlY2F1c2UgdGhleSBuZWVkIHNleCB0aGVyYXB5LCBkb24ndCBoYXZlIHN0dWR5IGJ1ZGRpZXMuIApTaW5lcywgd2hvIGhhcyBvd25lZCBob21lcyBpbiB0aGUgYWZmbHVlbnQgQmVya3NoaXJlIHRvd25zIG9mIE9sZCBXaW5kc29yIGFuZCBWaXJnaW5pYSBXYXRlciwgaGFzIHByZXZpb3VzbHkgYmVlbiBhY2N1c2VkIG9mIGludGltaWRhdGluZyByZXNpZGVudHMgb24gb3RoZXIgbW9iaWxlIGhvbWUgcGFya3MsIGNoYXJnZXMgaGUgZGVuaWVkLgpJdCB1bmNsZWFyIGV4YWN0bHkgaG93IGFsbCBvZiB0aGlzIGhhcHBlbmVkLiBJIHBlcnNvbmFsbHkgYmxhbWUgUm9uYWxkIFJlYWdhbiwgYXMgSSBkbyBmb3IgbW9zdCB0aGluZ3MuIE5vdCBvbmx5IGRpZCBSZWFnYW4gc3RhcnQgdGhlIHRyZW5kIG9mIGN1dHRpbmcgZWR1Y2F0aW9uIGZyb20gdGhlIGZlZGVyYWwgYnVkZ2V0LCBidXQgaGUgYWxzbyBvdmVyc2F3IHRoZSBkZXJlZ3VsYXRpb24gb2YgYmFua2luZyB0aGF0IGxlZCB0byBjb21tZXJjaWFsIGJhbmtzIHRha2luZyBvdmVyIHN0dWRlbnQgbG9hbnMuIApTbyBob3cgeW91IGNvbmZyb250IHRoaXMgY2hhbGxlbmdlIGlzIG11Y2ggbW9yZSBpbXBvcnRhbnQgdGhhbiB0aGUgY2hhbGxlbmdlIGl0c2VsZi4gVGhlcmUgYXJlIHR3byBjb21wb25lbnRzIHRvIHRoaXMuIEZpcnN0IGRvIG5vdCByZXByZXNzIHlvdXIgZW1vdGlvbnMsIGJ1dCBhdCB0aGUgc2FtZSB0aW1lIGRvbiByZWFjdCB0byB0aGVtLiAKV2hpbGUgZWFjaCBvZiB0aGUgcmVlbHMgYXBwZWFycyB0byBiZSB0aGUgc2FtZSBzaXplLCB0aGUgZmlyc3QgZm91ciByZWVscyBpbiBmYWN0IGhhdmUgMzAgc3ltYm9scywgd2hpbGUgdGhlIGZpZnRoLCBhbmQgbGFzdCByZWVsIHRvIHN0b3Agc3Bpbm5pbmcsIGhhcyA0NCBzeW1ib2xzLCBtYWtpbmcgaXQgaGFyZGVyIHRvIHdpbiBvbiB0aGUgZmluYWwgcmVlbC4gVGhpcywgYWNjb3JkaW5nIHRvIE1hdXJpY2UgQmxhY2tidXJuLCBlbmNvdXJhZ2VzIHRoZSBwZXJjZXB0aW9uIHRoYXQgZ2FtYmxlcnMgaGF2ZSBoYWQgIm5lYXIgbWlzc2VzIiB3aGVuIHRoZXkgbG9zZS4gCk9yZmVvIFBvbnNpbiBkaWVkIGluIDE5NTIsIEp1YW4gTWFudWVsIFNhbnRpc3RlYmFuIGluIDE5NzYgYW5kIEVtaWxpbyBSYXZhc2lvIGluIDE5ODYuLiAKVGhlc2Ugc3RhcnQgYXQgY2xhc3MgQSBhbmQgcnVuIGZyb20gbGV2ZWxzIEkgdGhyb3VnaCBJVi4gCkl0IGFsd2F5cyB0aGUgdGltZWx5IHNhdmVzIHRoYXQgY291bnQuIApUaGF0IGlzIHNvIGF3ZXNvbWUuIE15IG1vdGhlciB3aG8gd2FzIGEgbWFzdGVyIHF1aWx0ZXIgcGFzc2VkIGF3YXkgbGFzdCBtb250aC4gCkFzayB0aGVtIGFib3V0IHRoZWlyIHRocm93IG9yIGFzayB0byBzZWUgYSB0cmljayB0aGV5IGp1c3QgZGlkIGFnYWluIGV2ZW4gaWYgeW91IGFscmVhZHkga25vdyBob3cgdG8gZG8gaXQuIApOZXh0IGlzIHdoZXJlIHlvdSBsaXZlLiBJcyBpdCBwb3NzaWJsZSB0byBtYWtlIGEgbGl2aW5nIHdoZXJlIHlvdSBjdXJyZW50bHkgYXJlPyAoSSBhc3N1bWluZyB5b3UgdGFsa2luZyBhYm91dCBsaXZlIHBva2VyKSBUaGlzIHdvdWxkIGFsbW9zdCBjZXJ0YWlubHkgcmVxdWlyZSBhIGZhaXIgYW1vdW50IG9mIGdhbWVzIHJ1bm5pbmcgY29uc3RhbnRseSwgYmlnIHdlZWtlbmRzIGFuZCB0aGVuIG9ubHkgMSBvciAyIHRhYmxlcyBvbiB3ZWVrZGF5cyBpc24gZ29pbmcgdG8gY3V0IGl0LiAKUHJlZmxvcCByYWlzZXMgb2YgJDMwIDUwLiAKU28gd2hlbiBJIHNlZSBzdHVmZiBsaWtlIHRoZXNlIGxpZ2h0cywgaXQgbWFrZXMgbWUgbGF1Z2guIApUaGUgY29tYmluYXRpb24gb2Ygb3VyIHN1Y2Nlc3NmdWwgaW5ub3ZhdGlvbnMgaW4gaW1hZ2luZyBzeXN0ZW0gcGxhdGZvcm1zLCB3b3JrZmxvdyBvcHRpbWl6YXRpb24gYW5kIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGVuYWJsZWQgaW5mb3JtYXRpY3MsIGNvbWJpbmVkIHdpdGggQ2FyZXN0cmVhbSdzIGNsb3VkIGJhc2VkIGVudGVycHJpc2UgaW1hZ2luZyBpbmZvcm1hdGljcyBwbGF0Zm9ybSBhbmQgY29tcGxlbWVudGFyeSBnZW9ncmFwaGljIGZvb3RwcmludCB3aWxsIHByb3ZpZGUgYSBzb2xpZCBmb3VuZGF0aW9uIHRvIGRlbGl2ZXIgb24gdGhlIHByb21pc2Ugb2YgcHJlY2lzaW9uIGRpYWdub3Npcy4iLiAKSG9tZW5ld3NIZWFkbGluZXNFdGhpb3BpYW4gQWlybGluZXMgZmxpZ2h0IGJvdW5kIGZvciBOYWlyb2JpIGNyYXNoZXM7IGFsbCAxNTcgb24gYm9hcmQga2lsbGVkQXN0cm8gQm9iOiBIb2xkIHlvdXIgaG9yc2VzLCBPcmlvbiAgIHRoZSBEU1QgcG9saWNlIGFyZSBoZXJlRm9yIHRob3NlIHdpdGggaW5jb21lIGp1c3QgbW9yZSB0aGFuIHRoZSBjdXRvZmYsIGhlYWx0aGNhcmUgY2xpZmYgbG9vbXNVcGRhdGU6IExlc3Mgc25vdyBleHBlY3RlZCB3aXRoIGxhdGUgd2ludGVyIHN0b3JtUmVnZW50cyBxdWVzdGlvbiByZW5hbWluZyBVbml2ZXJzaXR5IG9mIE1pbm5lc290YSBidWlsZGluZ3NidXNpbmVzc0hlYWRsaW5lc1JhaWwgdG8gVHdpbiBDaXRpZXMgaW50cmlndWVzIEFtdHJha01pbm5lc290YSBtZWRpY2FsIG1hcmlqdWFuYSBGQVFzIGJlbGlldmUgdGhpcyBpcyB0aGUgYmVzdCBtZWRpY2F0aW9uIGZvciBoaW0gRGVzcGl0ZSB0aGUgc3RpZ21hLCBwYXJlbnRzIGFkdm9jYXRlIGZvciBjaGlsZHJlbiBtZWRpY2FsIG1hcmlqdWFuYSB1c2VNaW5uZXNvdGEgbWVkaWNhbCBtYXJpanVhbmEgcHJvZ3JhbSBoYXMgb25lIG1ham9yIGZsYXc6IEl0IHRvbyBleHBlbnNpdmVIb3cgYW4gb25saW5lIHNwYWNlIGZvciBzdHJlc3NlZCBvdXQgeW91bmcgd29tZW4gdHVybmVkIGludG8gYSBidXNpbmVzc3Nwb3J0c0hlYWRsaW5lc0Zsb3JpZGEgZmlzaGluZyBmcmVuenk6IEdyb3VwJ3MgR3VsZiBncm91cGVyIGdhdGhlcmluZyBnb2VzIGdyZWF0Q09MTEVHRSBIT0NLRVkgUk9VTkRVUDogTWF2ZXJpY2tzLCBHb3BoZXJzIGFkdmFuY2UgaW4gY29uZmVyZW5jZSBwbGF5b2Zmc0VkaW5hIGJlc3RzIEVkZW4gUHJhaXJpZSBpbiBPVCBpbiB0aHJpbGxpbmcgQ2xhc3MgQUEgdGl0bGUgZ2FtZUdvcGhlcnMgd3Jlc3RsZXIgU3RldmVzb24gb25lIHdpbiBmcm9tIEJpZyBUZW4gdGl0bGVUb3ducyBkcm9wcyA0MCBpbiBUaW1iZXJ3b2x2ZXMgT1Qgd2luIG92ZXIgV2l6YXJkc21pbGVzdG9uZXNIZWFkbGluZXNSb2dlciBhbmQgU2hpcmxleSBEYXZpc0pvaG4gYW5kIFJvYmVydGEgQ2hyaXN0aWFuc2VuTGVvIEphY2tzb24gV2VlbXNSaWNoYXJkIGFuZCBEb3JvdGh5IEtudWRzZW5BbHZpbiBhbmQgRWx2aSBTYXJhbGFtcGlvcGluaW9uSGVhZGxpbmVzQ2FydG9vbmlzdCBWaWV3OiBHZXR0aW5nIHRoaW5ncyBkb25lQ2FydG9vbmlzdCBWaWV3OiBIYXRzIGluIHRoZSByaW5nTmF0aW9uYWwgVmlldzogQWxsIGNhbmRpZGF0ZXMgICBtZW4gYW5kIHdvbWVuICAgb3VnaHQgdG8gc3RyaXZlIHRvIGJlIGxpa2FibGVOYXRpb25hbCBWaWV3OiBTdWNoIG1lYXN1cmluZyBvZiBjYXBhYmxlIHdvbWVuIGNhbmRpZGF0ZXMgaXMgc2V4aXN0LCBoYXMgdG8gc3RvcENhcnRvb25pc3QgVmlldzogV2hpY2ggaXMgbW9yZSBvZmZlbnNpdmU/TEFLRSBFTE1PLCBNaW5uLiAKRWR1Y2F0aW9uIGlzIHNvbWV0aGluZyBubyBzYW5lIHBlcnNvbiBzaG91bGQgZXZlciB0cnVzdCB0byB0aGUgZ292ZXJubWVudC4gRXZlbiBpZiB5b3UgY291bGQgdHJ1c3QgaXQgaW4gcHJpbmNpcGxlLCB3aGF0IGhhcHBlbnMgd2hlbiBhIERvbmFsZCBUcnVtcCB3aW5zIGVsZWN0aW9uIGFuZCBpcyBwdXQgaW4gY2hhcmdlIG9mIHRoaXMgc2hpdD8gVGhpcyBzb3J0IG9mIHRoaW5nIGhhcHBlbnMgYWxsIHVwIGFuZCBkb3duIHRoZSBwb2xpdGljYWwgc2NhbGUgZnJvbSB0aGUgV2hpdGUgSG91c2UgZG93biB0byBjb3VudHkgYW5kIHNjaG9vbCBib2FyZCBsZXZlbC4KQ292ZXIgdGhlIGdsYXNzIGJvdHRsZSB3aXRoIHRoZSBsaWQsIGFuZCBzaGFrZSB0aGUgYm90dGxlIHdlbGwuClRoZXNlIHR3byBncmVhdCBhY2hpZXZlbWVudHMgb2YgTHVza2UgZWFybmVkIGhpbSB0aGUgc2Vjb25kIHJhbmsgaW4gdGhlIE1haW4gRXZlbnRzLCBuZXh0IHRvIERhbiBIYXJyaW5ndG9uLi4gCkFuZCBpZ25vcmUgaXQuIApMaXZpbmcgaW4gYSBwb3N0IGdlbmRlciB3b3JsZCB0aGF0IGlzIHNpbXVsdGFuZW91c2x5IHBhdHJpYXJjaGFsIG1heSBzZWVtIGltcG9zc2libGUsIGFuIG94eW1vcm9uIHdyaXR0ZW4gb24gdGhlIGJvZHkgYW5kIGxpdmVzIG9mIGFjYWRlbWljIHNvcnRzIGxpa2UgbWUuIApJZiB5b3UgaGF2ZSBubyBleHBlcmllbmNlLCBJJ2QgcmVjb21tZW5kIFVwc3dpbmcuIApTaGUgc2FpZDogIkknbSBlbmdhZ2VkLiBJIGhhdmVuJ3QgdG9sZCBhbnlvbmUgeWV0ICAgSSBtZWFuLCBJIGhhdmVuJ3QgdG9sZCB0aGUgd29ybGQuIEkgd2FudGVkIHRvIGtlZXAgaXQgcHJpdmF0ZS4iCkkgbG92ZWQgQmVydGllIGJ1dCBoYXRlZCBob3cgcnVzaGVkIHRoZSBsYXN0IGZldyBlcGlzb2RlcyB3ZXJlLiAKR3JlZW4gaXMgJDI1LjAwLCBhbmQgYmxhY2sgaXMgJDEwMC4wMC4gUHVycGxlIG5vcm1hbGx5IHN0YW5kcyBmb3IgJDUwMC4wMCBhbmQgT3JhbmdlIHN0YW5kcyBmb3IgJDEsMDAwLjAwIGluIG1vc3QgY2FzZXMuIApJZiBoZSBpcyBhIHBpbG90ICh3aGljaCBpcyBzb21ldGhpbmcgdGhhdCBpcyBzdXNwZWN0KSB0aG9zZSByYXRpbmdzIG1lYW4gaGUgY2FuIGZseSBhIHNpbmdsZSBlbmdpbmUgQ2Vzc25hIChvciBzaW1pbGFyKSB3aXRoIGxhbmRpbmcgZ2VhciB0aGF0IGZvbGRzIGludG8gdGhlIGJlbGx5LiBBbGwgaW4gYWxsIGl0IHdvdWxkIHJlcXVpcmUgYSBtaW5pbXVtIG9mIDQwIGhvdXJzIG9mIGZsaWdodCB0aW1lIHRvIGFjaGlldmUgdGhlc2UgcmF0aW5ncyBhdCBhbnkgc21hbGwgYWlycG9ydCB3aXRoIGFuIGFpcmNyYWZ0IGZvciByZW50LiBIZSBpcyB0cnlpbmcgdG8gaW1wcmVzcyB5b3UsIGJ1dCB0aGF0J3Mgd2hhdCBpdCByZWFsbHkgbWVhbnMuLiAKQW5kIGkgYW0gc3VyZSB0aGVyZSBhcmUgYSBsb3Qgb2YgaGlzdG9yaWMgY2FzZXMgdGhhdCBwcm92ZSB0aGF0LiAKU2NpZW50aXN0cyB3cml0ZSB0aGF0IGFuYWVyb2JpYyBpbnRlcnZhbHMgYXJlIG92ZXJ3aGVsbWluZ2x5IHByZWZlcmFibGUgdG8gYWVyb2JpY3MgZm9yIHByb2R1Y2luZyBiZWxseSBmYXQgbG9zcywgYW5kIHRoYXQgdGhlIGVzdGltYXRlZCBvcHRpbWFsIGRvc2Ugb2YgYWVyb2JpYyBleGVyY2lzZSBuZWNlc3NhcnkgdG8gbG9zZSBiZWxseSBmYXQgYXBwZWFycyB0byBiZSAzLDc4MCBjYWxvcmllcyBleHBlbmRlZCBwZXIgd2Vlay4gVGhpcyBpcyBhbiBlbm9ybW91cyB2b2x1bWUgb2YgZXhlcmNpc2UgdGhhdCB3b3VsZCByZXF1aXJlIDEgaG91ciBvZiBtb2RlcmF0ZSBpbnRlbnNpdHkgYWVyb2JpYyBjeWNsaW5nIDcgZGF5cyBhIHdlZWsgdG8gYnVybiA1NTAgY2Fsb3JpZXMgYSBkYXkgc28gdGhhdCB5b3UgY291bGQgbG9zZSBldmVuIGEgcG91bmQgYSB3ZWVrIQpDaGVmbWNkdWNrIHUKWW91IGNhbiBmaW5kIHBva2VyIG9kZHMgY2FsY3VsYXRvciBvbiB0aGUgSW50ZXJuZXQuIEFzIHNhaWQsIGl0IGlzIGp1c3QgYSBzb2Z0d2FyZTsgbWFueSBzaXRlcyBhbGxvdyB5b3UgdG8gZG93bmxvYWQgaXQgZm9yIGZyZWUuIE5ldmVydGhlbGVzcywgeW91IHNob3VsZCBrbm93IHRoZSB0eXBlIG9mIGdhbWUgeW91IHdhbnQgdG8gcGxheSBhbmQgYWNjb3JkaW5nbHkgeW91IGhhdmUgdG8gZmluZCB0aGUgcG9rZXIgY2FsY3VsYXRvci4gVXNpbmcgYSBwb2tlciBjYWxjdWxhdG9yIGlzIGNvbXBsZXRlbHkgbGVnYWwgYW5kIHlvdSBkbyBub3QgaGF2ZSB0byB3b3JyeSBhYm91dCB0aGF0IGlzc3VlIHdoaWxlIHVzaW5nIGl0LiBBbHRob3VnaCBpdCBjYW5ub3QgZW5zdXJlIHN1Y2Nlc3MsIHlldCBpdCBjYW4gaW5jcmVhc2UgaXRzIGNoYW5jZXMhIEdvIGFoZWFkIGFuZCB0cnkgaXQuClRoZSBidWlsZGluZyB1c2VkIHRvIGJlIHRoZSBKYXBhbmVzZSBoZWFkIG9mZmljZSBkdXJpbmcgY29sb25pYWwgcnVsZS4gSXQgd2FzIGxvY2F0ZWQgaGVyZS4gVGhpcyBhbmltYXRpb24gc2VlbXMgcGV0dHkuCkF0IHRoYXQgbXkgdGhvdWdodHMgcmFuIG9uIHRvIHF1ZXN0aW9uaW5nIGhvdyBpdCB3b3VsZCBiZSBkb25lIGlmIGl0IHdlcmUgZG9uZS4gV291bGQgdGhleSBzZWxsIG91dCBhbmQgcnVpbiB0aGUgd2hvbGUgaWRlYSBvbmx5IGVucmFnaW5nIG9sZCBjcmFzaCBmYW5zPyBPciB3b3VsZCB0aGV5IGtlZXAgdGhhdCBzYW1lIG9sZCBmZWVsIHdpdGggYSBmZXcgdXBkYXRlZCB0d2lzdHM/CkFsc28sIHdoeSBpcyBpdCBhc3N1bWVkIHRoYXQgUm9iYmllIHdvdWxkbid0IGhhdmUgdGFwcGVkIGlmIHRoZSBjaG9rZSB3YXMgYWN0dWFsbHkgYSBkYW5nZXI/IE5vbmUgb2YgaGlzIHN1YiBsb3NzZXMgaGF2ZSBiZWVuIGEgcmVzdWx0IG9mIGhpbSBjaG9vc2luZyB0byBnbyBvdXQuIFJvYmJpZSBoYXMgdGFwcGVkIGluIGV2ZXJ5IHN1Ym1pc3Npb24gbG9zcyBvZiBoaXMgY2FyZWVyLiBPciBpcyBpdCBhc3N1bWVkIHRoYXQgaGUgZGlkbid0IHJlYWxpemUgaGUgd2FzIGdvaW5nIG91dD8gSSBkb24ndCBiZWxpZXZlIHRoYXQgdmlldyBpcyBwYXJ0aWN1bGFyIHN0cm9uZyB3aGVuIGl0IGlzIGRlcGVuZGVudCB1cG9uIHRoZSB3ZWFrIGFzc3VtcHRpb25zIG9mIHRoZSBsaWtlbGlob29kIG9mIHRoZSBhYm92ZSB0aGUgbmVjayBjaG9rZSBpbiByZW5kZXJpbmcgc29tZW9uZSB1bmNvbnNjaW91cyBhbmQgdGhlIGxpa2VsaWhvb2QgdGhhdCBhIHZldGVyYW4gbGlrZSBSb2JiaWUgd291bGQgYmUgdW5mYW1pbGlhciB3aXRoIHRoZSBzaWducyBvZiBsb3NpbmcgY29uc2Npb3VzbmVzcy4KIkEgbG90IG9mIHBlb3BsZSBhcmUgbm93IHNheWluZyB3ZSBjYW5ub3QgY29udGludWUgdG8gcGxheSB0aGUgZ2FtZSBhbmQgcHJldGVuZCBJc3JhZWwgaXMgYSBzdGF0ZSBmb3IgYWxsIGl0cyBjaXRpemVucywiIGhlIHNhaWQuICJBbmQgdGhleSdsbCBzYXkgd2UgaGF2ZSB0byBoaWdobGlnaHQgdGhpcyBieSBib3ljb3R0aW5nIHRoZSBlbGVjdGlvbi4iCklmIHlvdSBnbyBiZXlvbmQgM2JldCB5b3UgYXJlIGdldHRpbmcgeW91cnNlbGYgYWdhaW5zdCBBQSBvciBLSyBtb3N0IG9mIHRoZSB0aW1lLiBJZiB5b3UgZm9sZCB5b3VyIEFLIHRvIGEgM2JldCBqdXN0IGEgdmVyeSBmZXcgdGltZXMgeW91IGJlIGFnYWluc3QgUVEgb3IgYW5vdGhlciBBSyBhbmQgZXZlbiBpbiB0aGF0IGNhc2UgeW91IG9ubHkgbG9zZSA0IDViYiBhcyBzdGF0ZWQgYWJvdmUuIApXaHkgc2hvdWxkIHlvdXIgbGlmZSBiZSBhbnkgbW9yZSBhZmZlY3RlZCBieSB0aGVpciBpc3N1ZXM/IElmIHRoZXkgaGF2ZSBhIHByb2JsZW0gd2l0aCB5b3UgbW92aW5nIG9uIChlaXRoZXIgcGh5c2ljYWxseSBvciBlbW90aW9uYWxseSkgc3RyYWl0IHVwIGFzayB0aGVtIHdoeSB0aGV5IHdhbnQgeW91IGluIHRoZWlyIGxpZmUuIE1ha2UgaXQgYWxsIHF1ZXN0aW9uIGFuZCBhbnN3ZXIgYW5kIGFzayB0aGVtIHRoZSBoYXJkIHJvb3RlZCBzdHVmZiAoaWU6IHdoeSBkbyB5b3Ugd2FudCBtZSB0byBiZSBpbiB5b3VyIGxpZmUgd2hlbiBJIGRvbiBhZ3JlZSB3aXRoIHRoZSB3YXkgeW91IGxpdmU/IGVjdCkuIApTaW1wbHkgcHV0LCBpbiBhIGhvYmJ5IGxpa2UgdGhpcyBtb25leSBpcyBhbHdheXMgZ29pbmcgdG8gYmUgYSBsaW1pdGluZyBmYWN0b3IsIGFuZCBJIHRoaW5rIGl0IG1vcmUgYWJvdXQgdW5kZXJzdGFuZGluZyB5b3VyIHByaWNlIHBvaW50IGFuZCB3aGF0IGxldmVsIHRoYXQgd2lsbCBhbGxvdyB5b3UgdG8gcGxheSBhdC4gCkNoYXJsZXMgQWlycG9ydEFsbCBTdC4gTHVjaWEgUmVzdGF1cmFudHNOZWFyIEhvdGVsc1Jlc3RhdXJhbnRzIG5lYXIgU2VyZW5pdHkgYXQgQ29jb251dCBCYXlSZXN0YXVyYW50cyBuZWFyIEVhc3QgV2luZHNSZXN0YXVyYW50cyBuZWFyIFZpbGxhIEJlYWNoIENvdHRhZ2VzUmVzdGF1cmFudHMgbmVhciBDcnlzdGFscyBTdCBMdWNpYVJlc3RhdXJhbnRzIG5lYXIgTGFkZXJhIFJlc29ydFJlc3RhdXJhbnRzIG5lYXIgUmVuZGV6dm91cyBSZXNvcnRSZXN0YXVyYW50cyBuZWFyIEphZGUgTW91bnRhaW4gUmVzb3J0UmVzdGF1cmFudHMgbmVhciBUaGUgTGFuZGluZ3MgUmVzb3J0IFNwYVJlc3RhdXJhbnRzIG5lYXIgQm9keUhvbGlkYXkgU2FpbnQgTHVjaWFSZXN0YXVyYW50cyBuZWFyIE1hcmlnb3QgQmF5IFJlc29ydCBhbmQgTWFyaW5hQWxsIHRoaW5ncyB0byBkbyBpbiBTdC4gCkJhYnkgYm9vbWVycyBoYWQgYWNjZXNzIHRvIGFuIHVuaW1hZ2luYWJsZSBhbW91bnQgb2Ygd2VhbHRoIG9uIGEgc2NhbGUgdW5zZWVuIGJlZm9yZSwgbGlrZSBhbnl3aGVyZS4gUGVyaW9kLiBUaGV5IHdlcmUgYSBtYXNzaXZlIGdlbmVyYXRpb24gdGhhdCBoYWQgdGhlIHdvcmxkIGF0IHRoZWlyIGZpbmdlcnRpcHMuIApMaWtlIHBlb3BsZSBnb2luZyBkb29yIHRvIGRvb3IsIGFuZCBwZW9wbGUgaGFuZ2luZyBvdXQgYXQgdGhlIGNvbW11bml0eSBjZW50ZXIgbmlnaHRseSB0cnlpbmcgdG8gY29sbGVjdCBzaWduYXR1cmVzLiAKQWZ0ZXIgZG93bmxvYWRpbmcgYSBjb3VwbGUgSURFcyBhbmQgY2hlY2tpbmcgb3V0IGEgZmV3IHR1dG9yaWFscyAoYWxsIGdlYXJlZCB0b3dhcmQgY29tcGxldGUgcHJvZ3JhbW1pbmcgbmV3YmllcyksIEkgZ290IGZydXN0cmF0ZWQgYW5kIHN0YXJ0ZWQgZ29vZ2xpbmcgc29tZSBtb3JlLi4gCldhbmcgd3JvdGUgZG93biBoaXMgZnVsbCBoaXN0b3J5LCBpbmNsdWRpbmcgd2hhdCBkcnVncyBoZSBoYWQgaW4gY2hlbW8gYW5kIHdhbnRlZCB0byBrbm93IHdoYXQgc3RyZW5ndGggcmFkaWF0aW9uIGhlJ2QgaGFkLi4gClNvbWV3aGVyZSBpbiB0aGUgY29zbW9zLCBoZSBzYWlkLCBhbG9uZyB3aXRoIGFsbCB0aGUgcGxhbmV0cyBpbmhhYml0ZWQgYnkgaHVtYW5vaWRzLCByZXB0aWxvaWRzLCBmaXNob2lkcywgd2Fsa2luZyB0cmVlb2lkcyBhbmQgc3VwZXJpbnRlbGxpZ2VudCBzaGFkZXMgb2YgdGhlIGNvbG91ciBibHVlLCB0aGVyZSB3YXMgYWxzbyBhIHBsYW5ldCBlbnRpcmVseSBnaXZlbiBvdmVyIHRvIGJpcm8gbGlmZSBmb3Jtcy4gClNjaHJpdHQgZnIgU2Nocml0dCBrb25udGUgSGVzdHdhcnQgZGVuIFByb2Zlc3NvciBmciBEaW5nZSBkZXMgYWxsdGdsaWNoZW4gTGViZW5zIGJlZ2Vpc3Rlcm4gdW5kIE1lcmdudXMgV2Vyc3Qgd2lkbWV0ZSBzaWNoIGZvcnRhbiBpbiBzZWluZXIgbmV1ZW50ZGVja3RlbiBGcmVpemVpdCB2ZXJzY2hpZWRlbmVuIEhvYmJ5cyB3aWUgZGVtIE1hcmF0aG9uIEtsYXZpZXJzcGllbGVuLCBkZXIgc3VycGlzYW50b3ZlZGlzY2hlbiBLb2Noa3Vuc3QgdW5kIGRlciBwbGFzdG94eWxhbnRpc2NoZW4gS3J5cHRvZ2VuZXNlIHZvbiB0b3RlbiBIYW1zdGVybi4gClRoZXJlIGFyZW4ndCBhIGxvdCBvZiBvdGhlciBidXNpbmVzc2VzIHdoZXJlIHRoaW5ncyBjYW4gZmVlbCBhcyBncmVhdCBpbiBvbmUgbW9tZW50IG9yIGFzIGNhdGFzdHJvcGhpYyB0aGUgbmV4dC4gCllvdSBjYW4gYWxzbyBjYWxsIHVzcHMgYW5kIGFzayBmb3IgZ3BzIGxvY2F0aW9uIG9mIGRlbGl2ZXJ5LiAKUmVsYXRlZCBBcnRpY2xlcyBJbmRpYW4gQ2FzaW5vcyBBbG9uZyBJIDUgaW4gQ2FsaWZvcm5pYSBCdWNreSdzIEFyaXpvbmEgSG90ZWwgQ2FzaW5vIENhc2lub3MgaW4gT3JvdmlsbGUsIENhbGlmb3JuaWEgQ2FzaW5vIEJ1cyBUcmlwcyBGcm9tIFRleGFzCkR1IGthbm5zdCBkaWNoIGF1ZiBkZW4gZWluc3RlbGx1bmdzdGVzdCB2b3JiZXJlaXRlbiwgZWluZmFjaCBnb29nbGVuIGRhIHNvbGx0ZSBlaW5pZ2VzIGtvbW1lbi4gCkhvdyB0byBHYW1ibGUgV2l0aCBhIENoYW5jZSBvZiBXaW5uaW5nIHdpdGggUGljdHVyZXMKVGhlIG1ham9yaXR5IG9mIHRoZW0gaGF2ZSBhdCBsZWFzdCBzb21lIGxldmVsIG9mIHBzeWNob2dlbmljICAgZXJyLCBJIG1lYW4gZnVuY3Rpb25hbCAgY29tcG9uZW50IG92ZXJseWluZyB0aGVpciBiYXNlbGluZSBlcGlsZXBzeS4gCihQcml2YWN5IFBvbGljeSlBa2lzbWV0VGhpcyBpcyB1c2VkIHRvIGRldGVjdCBjb21tZW50IHNwYW0uIChQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBHb29nbGUgQW5hbHl0aWNzVGhpcyBpcyB1c2VkIHRvIHByb3ZpZGUgZGF0YSBvbiB0cmFmZmljIHRvIG91ciB3ZWJzaXRlLCBhbGwgcGVyc29uYWxseSBpZGVudGlmeWFibGUgZGF0YSBpcyBhbm9ueW1pemVkLiAoUHJpdmFjeSBQb2xpY3kpSHViUGFnZXMgVHJhZmZpYyBQaXhlbFRoaXMgaXMgdXNlZCB0byBjb2xsZWN0IGRhdGEgb24gdHJhZmZpYyB0byBhcnRpY2xlcyBhbmQgb3RoZXIgcGFnZXMgb24gb3VyIHNpdGUuIApJdCB3YXMgYW4gYWxsIGJveXMgY2x1YiB1bnRpbCAxOTgwIHdoZW4sIGFuZWNkb3RlIGhhcyBpdCwgdGhlIHNpZ25zIG9uIHRoZSBsYXZhdG9yaWVzIHdlcmUgY2hhbmdlZCB0byByZWFkOiBZb3VyY2VuYXIuIFRoZSBzdGlycmluZ3Mgb2YgZGl2ZXJzaWZpY2F0aW9uIGhhdmUgcmVhY2hlZCB0aGUgaW5zdGl0dXRpb24uIFRoZSBBY2FkZW1pZSB2b3RlZCBvdmVyd2hlbG1pbmdseSB0byBhY2NlcHQgZGV2ZWxvcG1lbnRzIGFpbWluZyBhdCByZWNvZ25pemluZyBpbiBsYW5ndWFnZSB0aGUgcGxhY2Ugb2Ygd29tZW4gaW4gdG9kYXkgc29jaWV0eS4gYSBsZXNzIGF3a3dhcmQgc29sdXRpb24gdG8gaW5jbHVzaW9uIHdpbGwgZXZvbHZlIG92ZXIgdGltZS4gTWVhbndoaWxlLCBpdCBhIHN0ZXAuClRoZSBkZWZlbnNlIG5ldmVyIGFza2VkIGFueSB3aXRuZXNzZXMgYWJvdXQgd2h5IGl0IHRvb2sgZm91ciBob3VycyBmb3IgdGhlIFJBVjQgdG8gYXJyaXZlIGF0IHRoZSBXaXNjb25zaW4gU3RhdGUgQ3JpbWUgTGFiIGluIE1hZGlzaW9uIHdoZW4gdGhlIHRyaXAsIHBlciBHb29nbGUgTWFwcywgc2hvdWxkIGhhdmUgdGFrZW4gMiBob3VycyBhbmQgNDUgbWludXRlcyBhdCB0aGUgbGF0ZXN0Li4gCkkgdGVuZCB0byBkaXNhZ3JlZSB3aXRoIG1vc3Qgb2YgdGhlICJmb2xsb3cgeW91ciBmZWVsaW5ncyIgc29ydCBvZiB0aGluZy4gRm9yIGluc3RhbmNlIEkndmUgbWFkZSBhIGNvbW1pdG1lbnQgdG8gbXkgaHVzYmFuZCBhbmQgaXQgZG9lc24ndCBtYXR0ZXIsIGF0IHRoZSBlbmQgb2YgdGhlIGRheSwgaG93IEkgZmVlbC4gSSBtYXkgbm90IGFsd2F5cyB3YW50IHRvIGhhdmUgc2V4LCBidXQgSSBuZWVkIHRvIGZpZ3VyZSBvdXQgdGhlIHJvb3Qgb2YgaXQgaWYgdGhhdCdzIHRoZSBjYXNlLi4gCkxpdmluZyBpbiBXZXN0IENoZXN0ZXIsIE9oaW8gb3VyIGtpZHMgZ28gdG8gTGFrb3RhIEhpZ2ggU2Nob29sIGFuZCB0aGUgc2Nob29sIGNvbG9ycyBhcmUgYmxhY2sgYW5kIHJlZC4gTXkgd2lmZSBhbmQgSSBib3RoIGhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gZ28gdGhlcmUgd2hlbiB3ZSB3ZXJlIHlvdW5nZXIgYXMgd2VsbCBzbyB3ZSBhbGwgYmxlZWQgcmVkIGFuZCBibGFjay4gClRoZXkgd291bGQgbGlrZSB0byByZXRpcmUgd2hlbiBSb2JiaWUgaXMgNTAgYW5kIEVtaWx5IGlzIDUzLCB0aGVuIGxpdmUgaGFsZiB0aGUgeWVhciBpbiBhIHdhcm0gcGxhY2UgZmFyIGZyb20gQ2FuYWRhIHdpbnRlcnMuIApBdCB0cmlhbCB0aGUgY29wIHdpbGwgdGFrZSB0aGUgd2l0bmVzcyBzdGFuZCBhbmQgdGVzdGlmeSBhcyB0byB3aGF0IHRoZXkgc2F3LCB5b3Ugd2lsbCBnZXQgYSBjaGFuY2UgdG8gYXNrIHRoZSBjb3AgcXVlc3Rpb25zIHdoZW4gdGhleSBhcmUgb24gdGhlIHN0YW5kLiBZb3Ugd2lsbCB0aGVuIGJlIGdpdmVuIGEgY2hhbmNlIHRvIHRha2UgdGhlIHN0YW5kIGFuZCB0ZXN0aWZ5IGlmIHlvdSB3YW50LiBPbmNlIHRoZSBKdXN0aWNlIG9mIHRoZSBQZWFjZSBoYXMgaGVhcmQgYm90aCBzaWRlcyBoZS9zaGUgd2lsbCBtYWtlIHRoZWlyIGRlY2lzaW9uLgpGYXN0IGZvcndhcmQgdG8gRGVjZW1iZXIgMjAxMi4gVG8ga2VlcCBhIHZlcnkgbG9uZyBzdG9yeSBzaG9ydCwgYW4gaW5mZWN0aW9uIGF0dGFjaGVkIGl0c2VsZiB2ZXJ5IGRlZXBseSBhbmQgYWdncmVzc2l2ZWx5IHRvIHRoZSBoYXJkd2FyZSBpbiBteSBzcGluZS4gRW5kZWQgdXAgaW4gdGhlIEVSLCBhbmQgdHJpZWQgdG8gdHJlYXQgaXQgd2l0aCBoZWF2eSBkb3NlcyBvZiBJViBhbnRpYmlvdGljcyBhbmQgdGhlbiBhIHN1cmdlcnkgYWZ0ZXIgdGhhdCBmYWlsZWQgdG8gZGlzaW5mZWN0IGl0LiAKVGhlIGF2ZXJhZ2UgY2hhbmdlIGluIGhhYml0dWFsIHByb3RlaW4gaW50YWtlIGluIHN0dWRpZXMgc2hvd2luZyBoaWdoZXIgcHJvdGVpbiB0byBiZSBtb3JlIGVmZmVjdGl2ZSB0aGFuIGNvbnRyb2wgd2FzICs1OS41JSBjb21wYXJlZCB0byArNi41JSB3aGVuIGFkZGl0aW9uYWwgcHJvdGVpbiB3YXMgbm8gbW9yZSBlZmZlY3RpdmUgdGhhbiBjb250cm9sLgpQYXVsaXVzMjQ0NCB1ClNvIHlvdSBzYXlpbmcgdGhlIHdvbWVuIGdvdCB0aGVyZSBzb2xlbHkgYmVjYXVzZSB0aGV5IGhhdmUgdGhlIHNraWxscyBhbmQgdHJhaXRzIGluIGJ1Y2tldCBsb2FkcyBhbmQgYnkgZGVmYXVsdCB0aGUgZ3V5cyB3aG8gZGlkbiBnZXQgdGhlIHByb21vdGlvbnMgZGlkbiBoYXZlIHRoZSB0cmFpdHM/CkFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudGRpZ2l0YWwgc3RvcmVzLiBZZXQgaXQgbW9zdCBsaWtlbHkgcG9zc2libGUgYW55dGhpbmcgb24gImlUdW5lcyJjYW4gYmUgZm91bmQgb24gVmlueWwvQ0QgZm9yIGhpZ2hlciBxdWFsaXR5LiBJbiBhZGRpdGlvbiwgdGhlIHRlcm0ieW91dHViZSIgdGhyb3VnaG91dCB0aGUgbGlzdCBpcyB1c2VkIGhlcmUgdG8gbWVhbiB5b3V0dWJlIGl0c2VsZixidXQgYWxzbyAidGhlIGludGVybmV0IiBpbiBnZW5lcmFsLiAKVGhhdCBpcyB1bnRydWUgZm9yIG1vc3QgU0wganVtcHMgYW5kIG9ubHkgcGFydGlhbGx5IHRydWUgdW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2VzIGZvciBtaWxpdGFyeSBvcGVyYXRpb25zIGxpa2Ugd2VpZ2h0IGFuZCBiYWxhbmNlIGlzc3VlcyB3aXRoIG1hbnkganVtcGVycyBydW5uaW5nIHRvd2FyZCB0aGUgYmFjayBvZiB0aGUgYWlyY3JhZnQgYW5kIG5vdCBleGl0aW5nLiAoVGhpcyBhbHNvIGhhcHBlbnMgb24gY2l2aWxpYW4ganVtcHMsIGJ1dCBvbmx5IHdpdGggbGFyZ2UgZ3JvdXBzIG9yIHBlb3BsZSB0aGF0IGRvbiBrbm93IGhvdyB0byB3YWl0IHRvd2FyZCB0aGUgZnJvbnQgdW50aWwgdGhlaXIgdHVybi4pIEkgdGVhY2ggcGVvcGxlIGhvdyB0byB0ZWFjaCBwZW9wbGUgdG8gZG8gdGhlc2UgdGhpbmdzLiBObyBHb29nbGUgc2VhcmNoIHJlcXVpcmVkLiBZb3UgY2FuIGFic29sdXRlbHkgYmFjayBvdXQgYXQgYW55IHBvaW50IGJlZm9yZSBncmF2aXR5IGFuZCB0aGUgd2luZCBwcm9oaWJpdCB5b3UuIFByb2NlZHVyZXMgYXJlIGluIHBsYWNlIHRvIGFib3J0IHNhZmVseSBmb3IgYW55IHJlYXNvbi4KVG9kYXksIHNoYWRlcyBvZiBzY2FybGV0IGFyZSBsaW5rZWQgd2l0aCBwb3dlciwgYWdncmVzc2lvbiwgYW5kIHNleCBmcm9tIHRoZSB2ZXJtaWxpb24gb2YgdGhlIEJyaXRpc2ggUXVlZW4gcm95YWwgcmVnYWxpYSB0byB0aGUgZ2F1ZHkgbmVvbiBvZiBBbXN0ZXJkYW0gcmVkIGRpc3RyaWN0LiBBbmQgdGhvc2UgYXNzb2NpYXRpb25zIG1heSBub3QgYmUgY29pbmNpZGVuY2UuIEEgbmV3IGJyYW5jaCBvZiBzY2llbmNlIGNhbGxlZCBwc3ljaG9sb2d5IGhhcyBmb3VuZCB0aGF0IHJlZCBjYW4gaGF2ZSBhIHByb2ZvdW5kIGluZmx1ZW5jZSBvbiBvdXIgbW9vZCwgcGVyY2VwdGlvbnMgYW5kIGFjdGlvbnMuIApEb2luZyB0aGF0IHdoaWxlIGdvaW5nIHRvIHNjaG9vbCBhbmQgYmVpbmcgYmV0d2VlbiBob21lcyBtYWtlcyBpdCBoYXJkZXIuIApJIGhhZCBhIGJhZCBydW4gd2l0aCBjb2xvciBibGluZCBwZW9wbGUuIFdoZW4gSSB3YXMgaW4gY29sbGVnZSBJIHdvcmtlZCBmb3IgdGhlIGNvbXB1dGVyIHNjaWVuY2UgZGVwYXJ0bWVudCBkb2luZyBuZXR3b3JraW5nLiBUaGV5IGRlY2lkZWQgdG8gcmV3aXJlIHRoZSBidWlsZGluZyB3aXRoIG5ld2VyLCBiZXR0ZXIgbmV0d29yayBjYWJsZXMuIApSSVAgZmlyc3QgY2FyLiAKVHJhaW4gc2ltdWxhdG9ycyBhcmUgYSBuaWNoZSBwcm9kdWN0IHRvIGJlZ2luIHdpdGgsIGFuZCB0aGUgc29ydCBvZiBwZW9wbGUgdGhleSBhcmUgdGFyZ2V0ZWQgYXQgaGF2ZSB2ZXJ5IHBhcnRpY3VsYXIgdGFzdGVzLiAKQ2hhcml0aWVzLCBwb2tlciByb29tIG9wZXJhdG9ycywgZGVhbGVycyBhbmQgcGxheWVycyBhbGwgb3Bwb3NlIHRoZSBwcm9wb3NlZCBydWxlcywgYXJndWluZyB0aGF0IGl0IHdpbGwgaHVydCBub25wcm9maXQgZnVuZHJhaXNpbmcgYW5kIHJlc3VsdCBpbiBsb3N0IGpvYnMgZm9yIGRlYWxlcnMgYW5kIG90aGVyIHBva2VyIHJvb20gZW1wbG95ZWVzLiBUaGUgTWljaGlnYW4gQ2hhcml0YWJsZSBHYW1pbmcgQXNzb2NpYXRpb24gc3VwcG9ydHMgbGVnaXNsYXRpb24gdGhhdCB3b3VsZCBrZWVwIHBva2VyIHJvb21zIG9wZW4gd2hpbGUgb3V0bGluaW5nIHBlbmFsdGllcyBmb3IgdmlvbGF0aW9ucyBhbmQgZW5zdXJpbmcgYWNjb3VudGFiaWxpdHkgYW5kIHRyYW5zcGFyZW5jeS4uIApMZSAyNyBub3ZlbWJyZSAyMDE0LCBpbCBlc3QgYXJydCBlbiBwbGVpbiBhcHJzIG1pZGkgIExhIERmZW5zZSwgZGFucyBsZXMgSGF1dHMgZGUgU2VpbmUsIHBhciBkZXMgcG9saWNpZXJzIHNwY2lhbGlzcy4KSWYgeW91IGxpc3RlbiBjbG9zZWx5LCB5b3UgY2FuIGhlYXIgdGhlIG51bWJlcnMuIApCdXQgSSB3b3VsZCBkZWZpbml0ZWx5IHJlY29tbWVuZCB5b3UgbW9pc3R1cml6ZSB5b3VyIGlycml0YXRlZCBza2luLCBhcyBzaGF2aW5nIHNjcmFwZXMgYXdheSBhIHRoaW4gbGF5ZXIgb2Ygc2tpbiBsZWF2aW5nIHRoZSBza2luIGJhcnJpZXIgY29tcHJvbWlzZWQuIE1vaXN0dXJpemVyIGNyZWF0ZXMgYSBwcm90ZWN0aXZlIGJhcnJpZXIgb24gdG9wLCBhbGxvd2luZyB5b3VyIHNraW4gdG8gaGVhbC4gSWYgeW91IGNvbmNlcm5lZCBhYm91dCByZWFjdGlvbnMvY2xvZ2dpbmcsIHVzZSBhIHNpbXBsZSwgY2hlYXAsIHVuZnJhZ3JhbmNlZCBubyBmcmlsbHMgbW9pc3R1cml6ZXIuIFRoZSBmZXdlciB0aGUgaW5ncmVkaWVudHMsIHRoZSBzbWFsbGVyIHRoZSBjaGFuY2UgdGhhdCBzb21lIG9mIHRoZW0gd2lsbCBjYXVzZSB5b3UgdHJvdWJsZS4KVGh1cyBhIDIwQkIgc2hvdmUgcmFuZ2UgZnJvbSB0aGUgQ1UgaXMgY2FwcGVkOyB0aHVzIGEgZ29vZCBleHBsb2l0IHdvdWxkIGJlIHRvIGNhbGwgd2lkZXIgdGhhbiB5b3Ugbm9ybWFsbHkgd291bGQuIApCZWltIEtvY2hlbiwgZGFubiBzdGVoZSBpY2ggdm9yIGRlbSBIZXJkIHVuZCBncmVpZmUgbWlyIGlucyBIc2NoZW4uIApMYSBjb25mZXJtYSBkZWxsIG8gbWVubyBkaSBkYXRpIHBlcnNvbmFsaSBjaGUgbGEgcmlndWFyZGFubywgYW5jaGUgc2Ugbm9uIGFuY29yYSByZWdpc3RyYXRpLCBlIGxhIGNvbXVuaWNhemlvbmUgaW4gZm9ybWEgaW50ZWxsZWdpYmlsZSBkZWkgbWVkZXNpbWkgZGF0aSBlIGRlbGxhIGxvcm8gb3JpZ2luZTsKSm9sbHkgSG9saWRheXM6IDE1IEZyZWUgS25pdCBhbmQgQ3JvY2hldCBHaWZ0cyBhbmQgSG9saWRheSBQcm9qZWN0cyBlQm9vazogUmVkIC4gCkxldCBzYXkgSSB3YW50IHRvIGJvb2ttYXJrIHRoZSBsaW5rLCBvciBrZWVwIHRoZSB0YWIgb3Blbiwgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCwgSSBjYW4gb3BlbiBpdCB3aXRoIEZpcmVmb3ggZnJvbSBMaW5rIEJ1YmJsZS4gCk9uIHRoZSB3ZWJzaXRlLCBpdCBzYWlkIGhlIGhhZCB3b24uIE9uIHRoZSBhcHAsIGl0IHNhaWQgaXQgd2FzIGEgdGllIGFuZCBubyBvbmUgaGFkIHdvbiwgd2UgYm90aCBnb3QgMm5kIHBsYWNlLiAKSGUgbGlrZW5lZCB0aGUgcmFjZSBmb3IgdGhlIHByZW1pZXJzaGlwIGFzICJiZWlnZSB2ZXJzdXMgYmVpZ2UiLiAiR29kLCB3aG8gd291bGQgYmUgZm9yY2VkIHRvIHZvdGUganVzdCBiZXR3ZWVuIHRob3NlIHR3bywgd2hhdCBhIHRlcnJpYmxlIG9wdGlvbi4iIEJlcmVqaWtsaWFuIGlzICJ1bmV4Y2l0aW5nLCB1bmludGVyZXN0aW5nLCB1bmFkdmVudHVyb3VzIGFuZCBleHRyZW1lbHkgc2FmZSIuIApEdWRlIHdhcyB3b3JraW5nIDYwIDgwIGhyIHdvcmsgd2Vla3MgYXQgYSBwbGFjZSBoZSB2b2NhbGx5IGhhdGVkLCBnb2luZyBob21lIHRvIGRyaW5rLCBhbmQgdGhlbiBnb2luZyBzdHJhaWdodCB0byBzbGVlcCAgIGFuZCBwYXlpbmcgZm9yIGV2ZXJ5dGhpbmcgc2hlIGRpZCB3aXRoIHRoaXMgam9iLiAKSSBzYXcgb25lIHRocmVhZCB3aGVyZSB0aGUgd29tYW4gd2FzIGZvYW1pbmcgYXQgdGhlIG1vdXRoIHRhbGtpbmcgYWJvdXQgQmV0byBhbmQgQ3J1eiwgdGFsa2luZyBhYm91dCB2b3RpbmcgZm9yIHRoZSAibGVzc2VyIGV2aWwiIChDcnV6KS4gCk5vdyB0aGVuIG9uIHRvIHRoZSBleCBhbmQgZnV0dXJlIG9uZXMuIFRoZSBwZXJzb24geW91IGFyZSBkYXRpbmcsIHNob3VsZCBiZSB0cnlpbmcgdG8gaGVscCB5b3UgYmV0dGVyIHlvdXJzZWxmIG9yIGJlaW5nIHRoZSBiZXN0IGZyaWVuZCB5b3UgZXZlciBoYWQuIENhbGxpbmcgeW91IG5hbWVzIG9yIHRhbGtpbmcgZG93biB0byB5b3UgdGhvc2UgYXJlIHRoZSBvbmVzIHRvIGF2b2lkIGFzIHRoZXkgYXJlIG5vdCB3b3J0aCB5b3VyIHRpbWUuCldvcmsgaGFyZCBpbiB0aGUgY2l0eSBhbmQgd2UgbmVlZCBjaGlsbCB0aW1lIGF3YXkgZnJvbSBpdCBhbGwuIApXaGV0aGVyIHlvdSBhcmUgY29uc2lkZXJpbmcgYWRvcHRpb24gb3IgdHJ5aW5nIHRvIGNvbmNlaXZlIGEgY2hpbGQsIHlvdSBjYW4gZmluZCBmYWN0cyBvbiB0b3BpY3MgcmFuZ2luZyBmcm9tIGRlYWxpbmcgd2l0aCBwcmVnbmFuY3kgc3ltcHRvbXMgdG8gZmluZGluZyB0aGUgdmVyeSBiZXN0IGJhYnkgc3Ryb2xsZXIuIExhYm9yIGFuZCBkZWxpdmVyeSBxdWVzdGlvbnMgYXJlIHZlcnkgY29tbW9uOyB3ZSBoYXZlIHlvdXIgYW5zd2VycyBoZXJlLCBhbG9uZyB3aXRoIGluZm9ybWF0aW9uIG9uIGNoaWxkcmVuJ3MgYmVoYXZpb3IgYW5kIGhlYWx0aC4gWW91IG1heSBldmVuIHdhbnQgdG8ga25vdyBob3cgdG8gYWZmb3JkIGEgYmFieSBpbiB0aGlzIGVjb25vbXkuIE91ciBhcnRpY2xlcyBhcmUgZGVzaWduZWQgdG8gaGVscCB5b3UgYW5zd2VyIGFsbCBvZiB0aGVzZSBxdWVzdGlvbnMgYW5kIG1vcmUuCkFuZCBpbiBoaXMgMjAwOCBwcmVzaWRlbnRpYWwgcnVuLCBCaWRlbiByYWlzZWQgYmFyZWx5IGhhbGYgb2YgdGhlICQyMCBtaWxsaW9uIGZ1bmRyYWlzaW5nIGdvYWwgaGUgc2V0IGJlZm9yZSBkcm9wcGluZyBvdXQgb2YgdGhlIHJhY2UgZm9sbG93aW5nIGEgd2VhayBmaW5pc2ggaW4gdGhlIElvd2EgY2F1Y3VzZXMuLiAKU29tZSBndXlzIHRha2UgYSBzaG90IHdpdGggMTAgYnV5aW5zIGFuZCBvbmUgbW9udGgsIGlmIHRoZXkgZ28gYnJva2UgdGhleSBqdXN0IGdvIGJhY2sgdG8gdGhlaXIgOSB0byA1LiAKTGV0IGhlciBrbm93IHRoYXQgeW91IGNhcmUgYW5kIGFyZSB0cnlpbmcgdG8gdW5kZXJzdGFuZCwgYW5kIGFjY29tcGFueSBoZXIgdG8gdGhlIGRvY3RvcnMgb3IgY291bnNlbGxvcnMgaWYgc2hlIHdhbnRzIHlvdSB0by4gClRoZXNlIGZhY3RvcnMgcHJpbWFyaWx5IGFmZmVjdHMgdGhlIGNoZXN0IGFuZCBicmVhdGhpbmcgZHVlIHRvIGFsbGVyZ2VucyBpbiB0aGUgZW52aXJvbm1lbnQuIApXLiwgS2l0Y2hlbmVyLCBPTikuIApJIHdvdWxkIGJlIGhhcHB5IHRvIGFuc3dlciBhbnkgb3RoZXIgcXVlc3Rpb25zIHlvdSBtYXkgaGF2ZS4gSWYgeW91IHdvbmRlcmluZyB3aGV0aGVyIG9yIG5vdCB5b3Ugc2hvdWxkIGFwcGx5OiBBcHBseSEgV2UgYmUgaGFwcHkgdG8gaGVhciBmcm9tIHlvdSA6KQpUaGUgc2Vjb25kIGFydCBwaWVjZSBieSB0aGUgTWFsYXlzaWFuIGFydGlzdCwgQWJkdWwgTXVsdGhhbGliIE11c2EsIGlzIGEgZ29sZC9icm9uemUgc2N1bHB0dXJlIHJlc2VtYmxpbmcgYW4gZWxlZ2FudCB0b3dlci4gQSBjcmVzY2VudCBzaGFwZWQgc2N1bHB0dXJlLCBzeW1ib2xpYyB0byBCcnVuZWkgYW5kIE1hbGF5c2lhLCBpcyB0aGUgY2VudGVyIHBpZWNlIG9mIHRoZSBncm91bmQgZmxvb3IgbG9iYnksIHNpdHRpbmcgcGVyZmVjdGx5IGluIHRoZSBjYWxtIHBvbmQgYnkgdGhlIGdyYW5kIHN0YWlyY2FzZS4gVG8gY2hlY2sgaW4gdG8gdGhlIGhvdGVsLCBndWVzdHMgYXJlIHdoaXNrZWQgdG8gdGhlIEdyYW5kIEh5YXR0IEt1YWxhIEx1bXB1cidzIHNreSBsb2JieSwgc3RyYXRlZ2ljYWxseSBwb3NpdGlvbmVkIGF0IHRoZSBoaWdoZXN0IGxldmVsIG9mIHRoZSBidWlsZGluZyB0byBhbGxvdyBmb3IgYSBjYXB0aXZhdGluZyB2aWV3IG9mIHRoZSBjaXR5J3Mgc2t5bGluZSB3aXRoIHRoZSBpY29uaWMgUGV0cm9uYXMgVHdpbiBUb3dlcnMgYXMgdGhlIGJhY2tkcm9wLi4gClRoZSBtYXplIG1vdmVzIGFuZCBzaGlmdHMgYW5kIHdlIGdldCBzZXBhcmF0ZWQuIApUaG9zZSB3aG8gY2FtZSB3aWxsaW5nbHkgd2VyZSBvZmZlcmVkIGxhbmQgYW5kIHByb3Zpc2lvbnMuLiAKWW91ciBjcml0cyBpdCBmcm9tIDQ0MCBpc2ggdG8gODgwaXNoIHdoaWNoIGlzIGh1Z2UgaW4gdGVybXMgb2YgYSBzcXVpc2h5LiAKRGVjIDE3LCAyMDEyIC4gRG93bmxvYWQgdGhlIGZ1bGwgdmVyc2lvbiBvZiBNaWNyb3NvZnQgT2ZmaWNlIDIwMTAsIFZpc2lvIGFuZCAuIFVzZSBQdWJsaXNoZXIgYW5kIEluZm9wYXRoIDIwMTAgYXMgd2VsbCBpbiBhZGRpdGlvbiB0byB0aGUgcmVndWxhciBXb3JkLCBFeGNlbCwuIApDYWxsIHRoZSBkZWFsZXIgYW5kIGFzayB0byBzcGVhayB0byB0aGUgR00uIEp1c3QgZXhwbGFpbiB0byBoaW0vaGVyIHdoYXQgeW91IHNhdyBhbmQgd2hpbGUgeW91IHVuZGVyc3RhbmQgdGhlIG5lZWQgZm9yIGEgdGVzdCBkcml2ZSwgeW91IGFyZSBwcmV0dHkgZnJ1c3RyYXRlZCB0aGF0IHRoZXkgdG9zc2VkIGEgdGlyZSBpbnNpZGUgeW91ciBjYXIuIElmIHRoaXMgZGVhbGVyIHVwaG9sZHMgdGhlIGN1c3RvbWVyIHNlcnZpY2UgbWlzc2lvbiB0aGF0IEJNVyBwdXNoZXMgb24gdGhlbSwgSSBiZXQgeW91IHdpbGwgZ2V0IGEgZnJlZSBjYXIgZGV0YWlsIG9yIHNvbWUgbmljZSBnaWZ0IGNhcmQgdG8gcHVyY2hhc2Ugc29tZSBCTVcgbWVyY2guCkxvZyBvbiB0byBhIGNvbnRlbnQgbWFuYWdlbWVudCB0b29sIGRlc2lnbmVkIGJ5IE1yLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25BIFNQRUNJQUwgbWVldGluZyBvbiBUdWVzZGF5IHdpbGwgZGlzY3VzcyB0aGUgZnV0dXJlIG9mIEtoYW5jb2JhbkNvdW50cnkgQ2x1YiBhbWlkIGNvbmNlcm5zIG92ZXIgaXRzIHZpYWJpbGl0eS4gUHJlc2lkZW50IExpb25lbCBNYXJyaW5lciBzYWlkIHRoZSBmaW5hbmNpYWwgc2l0dWF0aW9uIHdhcyB1bnN1c3RhaW5hYmxlIGFzIHZvbHVudGVlcnMgYW5kIHN0YWZmIHRyaWVkIHRvIG1hbmFnZSBmYWNpbGl0aWVzIGFmZmVjdGVkIGJ5dGhlIHRvd24ncyBkZWNsaW5pbmcgcG9wdWxhdGlvbi4gTXIgTWFycmluZXIgc2FpZCB0aGUgbmluZSBob2xlIGdvbGYgY291cnNlIHdhcyBjb21wbGV0ZWx5IHJ1biBieSB2b2x1bnRlZXJzLCBidXQgdGhpcyB3YXMgYmVjb21pbmcgbW9yZSBkaWZmaWN1bHQgb3dpbmcgdG8gdGhlIGFnZSBvZiBzb21ld29ya2Vycy4gIlRoZSBjbHViJ3MgcHJvYmxlbSBpcyBpdCdzIGFzc2V0IHJpY2gsIGNhc2ggcG9vciwiIGhlIHNhaWQsICJXZSB3ZXJlIGFibGUgdG8gc2VsbCBvZmYgb3VyIGxhc3QgbG90IG9mIHBva2VybWFjaGluZXMgc29tZSAxNSBtb250aHMgYWdvLCB0aGF0IGNsZWFyZWQgYWxsIG91ciBkZWJ0cy4gQW5kIHdlJ3ZlIHJlYWNoZWQgdGhhdCBzdGFnZSB3aGVyZSB3ZSBjYW4gc2VlIGlmIHdlIGtlZXAgcHJvY2VlZGluZyB0aGUgd2F5IHdlJ3JlIGdvaW5nLCB3ZSdsbCBmaW5pc2ggdXAgaW4gdGhlIHJlZCBhZ2Fpbi4iIEluIGEgbGV0dGVyIHRvIE1lbWJlciBmb3IgQWxidXJ5IEdyZWcgQXBsaW4sIE1yIE1hcnJpbmVyIHNhaWRvcGVyYXRpbmcgb3ZlcmhlYWRzIHN1Y2ggYXMgcmF0ZXMsIGluc3VyYW5jZXMsIGdhcywgZWxlY3RyaWNpdHkgYW5kIGNsdWIgY29tcGxpYW5jZSBpc3N1ZXMgaGFkIGFsc28gY2F1c2VkIHByb2JsZW1zLiBUaGUgcHJlc2lkZW50IGhvcGVkIGEgbWVldGluZyBvZiBtZW1iZXJzIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMgbGlrZSBTbm93eSBIeWRybywgd2hpY2ggYnVpbHQgS2hhbmNvYmFuIG9yaWdpbmFsbHkgdG8gaG91c2Ugd29ya2VycyBhbmQgdGhlaXIgZmFtaWxpZXMsIHdvdWxkIHJlc29sdmUgdGhlIGNsdWIncyBmdXR1cmUgZGlyZWN0aW9uLiAiVG8gdHJ5IGFuZCBzZWUgaWYgdGhlcmUgYXJlIGFueSBvcHRpb25zIHRoYXQgdGhlIGN1cnJlbnQgYm9hcmQgaGF2ZW4ndCBjYW52YXNzZWQsIHdlJ3JlIGFza2luZyBtZW1iZXJzIHRvIGNvbWUgdXAgd2l0aCBpZGVhcywiIGhlIHNhaWQuICJXZSdyZSBob3BpbmcgdGhhdCB0aGVyZSdzIHNvbWUgJ21hZ2ljIGJ1bGxldCcgdGhhdCB3aWxsIGVuYWJsZSB1cyB0byB0dXJuIHRoZSBvcGVyYXRpb24gb2YgdGhlIGNsdWIgYXJvdW5kLiAiSWYgd2UgY291bGQgZmluZCBhIGNsdWIgdG8gYW1hbGdhbWF0ZSB3aXRoLCB0aGF0IHdvdWxkIGJlIGdvb2QuIiBNciBNYXJyaW5lciBob3BlZCBjbG9zaW5nIHRoZWNsdWIgYW5kIGl0cyBncmFzcyBncmVlbiBnb2xmIGNvdXJzZSBjb3VsZCBiZSBhdm9pZGVkLiAiSWYgdGhpcyBmYWNpbGl0eSBjbG9zZXMsIHRoZSByZWdpb24gdXAgaGVyZSB3aWxsIGJlIHRoZSBwb29yZXIgZm9yIGl0LCIgaGUgc2FpZC4gQW5kIHdlJ3ZlIHJlYWNoZWQgdGhhdCBzdGFnZSB3aGVyZSB3ZSBjYW4gc2VlIGlmIHdlIGtlZXAgcHJvY2VlZGluZyB0aGUgd2F5IHdlJ3JlIGdvaW5nLCB3ZSdsbCBmaW5pc2ggdXAgaW4gdGhlIHJlZCBhZ2Fpbi4iClNlcmlvdXNseSwgdGhlcmUgbXVzdCBiZSBhIGxhdyB0aGF0IHdhbGxzIHRheCBwYXllciBkb2xsYXJzIGZyb20gbmVwb3Rpc20uIEJlY2F1c2UgdGhpcyBpcyBjcmF6eS4gV2hlbiB5b3UgbG9vayBhdCBJdmFua2EgcGFzdCwgaGVyICJwcm9qZWN0cyIgaGF2ZSBhbHdheXMgYmVlbiB2ZXJ5IG11Y2ggYWJvdXQgaGVyIG93biBmaW5hbmNpYWwgc2VsZiBpbnRlcmVzdHMsIHdoaWNoIGluIHR1cm4gbWVhbnMgaGVyIGZhdGhlciB3aWxsIGFnYWluIGJlIGdldHRpbmcgYSBjdXQgb2YgdGhlIHByb2ZpdHMgdG9vLiBUaGV5IHVzdWFsbHkgZmlyc3QgbmVlZCBzbG9wcGlseSB2YWlsIHRoZSBleGN1c2UgYXMgZG9pbmcgc29tZSBnb29kLCBidXQgeW91IGRvbiBoYXZlIHRvIGRpZyBkZWVwIHRvIHNlZSBpdCBuZXZlciwgZXZlciwgRVZFUiBpcyB0aGF0LiBJdCBpcyBqdXN0IGZvciB0aGVpciBvd24gcGVyc29uYWwgZmluYW5jaWFsIGdhaW4uIEFuZCB0aGlzIGlzbiBhIHJhbnQsIHRoaXMgaXMganVzdCByZXBvcnRpbmcgaGlzdG9yaWNhbCBldmlkZW5jZSBvZiB0aGlzIGZhbWlseSBpbiBhbmQgb3V0c2lkZSB0aGUgd2hpdGUgaG91c2UuCkZvcm1hdCAyMSB4IDE1LCAzNDQgcGFnZXMsIG5vaXIgYmxhbmMKV2UgaGF2ZSBkaXNzaW1pbGFyIGxpZmVzdHlsZXMsIGJ1dCBoZXksIGlmIHRoYXQgeW91LCBpdCBmaW5lLiBBcyBsb25nIGFzIHlvdSBub3QgaHVydGluZyBhbnlvbmUgd2l0aCBpdC4gCk5vLCBJIGdvdCB0aGUgcG9pbnQuIEkgbmV2ZXIgY2xhaW1lZCB0aGV5IHByb3ZpZGUgYSBjdWxpbmFyeSBhZHZhbnRhZ2Ugb3RoZXIgdGhhbiBiZWluZyBtb3JlIHByZWNpc2Ugd2hpY2ggcmVhbGx5IG9ubHkgbWF0dGVycyB3aXRoIGl0ZW1zIHdoZXJlIHlvdSB3b3VsZCBub3JtYWxseSB1c2UgYSBkb3VibGUgYm9pbGVyIGxpa2UgY2hvY29sYXRlLiBUaGF0IGEgbm92ZWx0eSBmb3IgbW9zdCBwZW9wbGUuCkkgdW5kZXJzdGFuZCB5b3VyIGNvbmNlcm5zLCBidXQgSSB5b3UgYXJlIG1pc3JlcHJlc2VudGluZyB3aGF0IGhhcHBlbmVkLiBQaGlsIHdhcyBlcXVhbGx5IG91dHJhZ2VkIGFib3V0IHdoYXQgd2VudCBvbiBhdCBGdWxsIFRpbHQsIGFuZCBzdGlsbCBoYXMgYSBzdHJvbmcgcmVwdXRhdGlvbiBpbiB0aGUgcG9rZXIgY29tbXVuaXR5IChib3RoIERhbiBDb2xtYW4gYW5kIEJyaWFuIFJhc3QsIG91ciB0d28gb3RoZXIgcHJvIHdlcmUgdmVyeSBleGNpdGVkIHRvIHdvcmsgd2l0aCBQaGlsKS4gSGlzIHN0cmF0ZWdpYyB2YWx1ZSBpcyB1bnF1ZXN0aW9uYWJsZSBpbiBoaXMgYWJpbGl0eSB0byBjb25uZWN0IHVzIHRvIGFueW9uZSBpbiB0aGUgaW5kdXN0cnksIGFzIHdlbGwgYXMgcGxhbiBpbiBvdXIgb3duIGV2ZW50cy4KSSB3YXMgbG9va2luZyBmb3J3YXJkIHRvIGEgd2VlayBvZiB3YXNwaXNoIGdvc3NpcCB3aXRoIHNpbWlsYXJseSB2YWN1b3VzIGdpcmxmcmllbmRzIHdoZW4gbXkgZmVldCBnb3QgdGFuZ2xlZCB1cCB3aGlsZSBzdGVwcGluZyBvdXQgb2YgdGhlIHBlZGljdXJlIHR1YiBhbmQgSSB0cmlwcGVkIGFuZCBmZWxsIGZhY2UgZmlyc3QgaW50byBhIG5ld3NwYXBlci4gSSBzb3VnaHQgcmVmdWdlIGZyb20gdGhlIHdlaWdodGluZXNzIGNvbnRhaW5lZCB0aGVyZWluIGluIG15IGltcG9ydGVkIGZhY2V3YXNoIGJ1dCBhcyBJIGxhdGhlcmVkIGFuZCBlcmFzZWQsIHNwYXduIG9mIFNhdGFuIGFuZCBoZW5jZSBmbHVlbnQgaW4gdGhlIHNwZWFraW5nIG9mIHRvbmd1ZXMgdGhhdCBJIGFtLCBJIGxvb2tlZCBpbnRvIHRoZSBtaXJyb3IgYW5kIGFjY2lkZW50YWxseSByZWFkIHRoZSBuZXdzcHJpbnQgYmFja3dhcmRzLiAKU28gSSBoYXZlIHRoaXMgcHN5Y2hvdGljIGZ1Y2tpbmcgaGF0cmVkIG9mIGZlZXQgYW5kIGhhdmUgaGFkIGl0IGZvciBhcyBsb25nIGFzIEkgY2FuIHJlbWVtYmVyLiAKV2UgYXJlIHJlc2lsaWVudCwgYnV0IHRoZSBhbW91bnQgb2YgYnVyZGVuIHdlIGVuZHVyZSB3aGlsZSB3b3JraW5nLCB3aXRoIGtpZHMsIGlzIHRlbmZvbGQgb2Ygd2hhdCBtZW4gZW5kdXJlIChhdCBsZWFzdCBpbiBteSBleHBlcmllbmNlcykuIApHb29kIGx1Y2suIEkgbG92ZSBoYXZpbmcgY2xlYW5lcnMgYW5kIHdvdWxkIGdpdmUgdXAgbG90cyBvZiBvdGhlciAiZXh0cmFzIiBiZWZvcmUgSSdkIGdpdmUgdXAgdGhlIGNsZWFuaW5nIHNlcnZpY2UuCkluIGFkZGl0aW9uIHRvIGEgZnVsbCBzZXJ2aWNlIGNhc2lubyB3aXRoIHNsb3QgbWFjaGluZXMsIHRhYmxlIGdhbWVzLCBhIHBva2VyIHJvb20gYW5kIHNwb3J0cyBiZXR0aW5nLCB0aGUgQWxpYW50ZSBTdGF0aW9uIENhc2lubyBhbmQgSG90ZWwgYWxzbyBmZWF0dXJlcyBkZWx1eGUgaG90ZWwgcm9vbXMsIHNpeCBvbiBzaXRlIHJlc3RhdXJhbnRzLCBhIHBvb2wsIHNwYSwgbW92aWUgdGhlYXRlciBhbmQgbGl2ZSBlbnRlcnRhaW5tZW50IHZlbnVlLiAKVGhlIGdhbWVzIGhhdmUgYSBibGluZCBzdHJ1Y3R1cmUgYW5kIG1pbmltdW0gYmV0dGluZyBzdHJ1Y3R1cmUganVzdCBsaWtlIHJlZ3VsYXIgbGltaXQgZ2FtZXMuIApEaWUgTGV1dGUgbGVpZGVuIHNjaG9uIHNlaXQgSmFocmVuIHVuZCBzaW5kIG5pY2h0IGVyc3Qgc2VpdCBlaW5lciBXb2NoZSB1bmQgZ2VoZW4gYXVjaCBzY2hvbiBld2lnIGdlZ2VuIGRpZSBrb3JydXB0ZSBSZWdpZXJ1bmcgYXVmIGRpZSBTdHJhZW4uClRoaXMgaXMgYSB3ZWlyZCBvbmUuIEkgaGF0ZWQgdHJhdmVsLCBidXQgbXkgd2lmZSBhbmQgSSBib3RoIHBsYXkgTWFnaWMgdGhlIEdhdGhlcmluZy4gU28gd2Ugc3RhcnRlZCB0cmF2ZWxpbmcgdG8gdG91cm5hbWVudHMgaW4gZGlmZmVyZW50IHBsYWNlcy4gCiJHb2QgSSBzdHJlc3NlZC4gCkVuam95aW5nIGxpZmUuIFRoZSB1c3VhbC4gCkkgbmV2ZXIgcmVhbGx5IG5vdGljZWQgaG93IG11Y2ggdGhlIHNoYXBlIG9mIFRleGFzIGlzIGFsbCBvdmVyIGV2ZXJ5dGhpbmcgYmVmb3JlIGNvbWluZyBiYWNrIGZyb20gYSBsb25nIHRpbWUgb3V0IG9mIHRvd24uIApJIGpvaW5lZCBob3JkZSBiZWNhdXNlIGl0IHNlZW1lZCBsaWtlIHRoZSBtb3N0IGxheCBwbGFjZSBJIGNvdWxkIGpvaW4sIG1lIGJlaW5nIGJsYWNrbGlzdGVkIGZyb20gd2FmZmxlcywgdGVzdCwgYW5kIGdzZi4gSSBib3VnaHQgYSB0aGFubnkgYW5kIGdyaW5kZWQgZm9yIGFib3V0IDIgd2Vla3Mgd2hpbGUgbGlzdGVuaW5nIHRvIHBvZGNhc3RzIHRvIHBhc3MgdGhlIHRpbWUgYW5kIGV2ZW50dWFsbHkgYm91Z2h0IHRoZSBIZWwuIApGbGlnaHQsIGJ1dCB0aGV5IGhhdmUgdG8gcHV0IGVmZm9ydCBpbnRvIGl0IGVnIHRoZXkgaHVmZiBhbmQgcHVmZiBsaWtlIHRoZXkgcnVubmluZyBhbmQgYXJyaXZlIHN3ZWF0eSBhbmQgb3V0IG9mIGJyZWF0aC4gCk5pZ2h0IHRvIG1ha2UgYW5vdGhlciBzaGl0dHkgTGFzdCBBaXJiZW5kZXIgbW92aWUsIHNvIHdlIGNhbiBoYXZlIG1vcmUgbWVtZXMgYW5kIGNvbWVkaWMgcmV2aWV3cyBhbmQgc3R1ZmYuIApObyBtYXR0ZXIgd2hhdCwgdGhlcmUgYXJlIGltcGFjdHMgb24gaG93IHRoZSBhcnQgd29yayByZWFkcy4gCldoaWNoIEF1dG9tYXRpYyBDYXJkIFNodWZmbGVycyBhcmUgQmVzdApIYWQgdGhlIEZhY2Vib29rIHBhc3N3b3JkcyBvZiBzZXZlcmFsIHBhdGllbnRzIHRvICJtb25pdG9yIGRhbmdlcm91cyBiZWhhdmlvdXIiLiAKTXkgZ3JhbmRtYSB3YXMgZnVja2luZyBsb2FkZWQgYmFjayBpbiB0aGUgZGF5LCBhbmQgd2FzIHRoZSBmaXJzdCBibGFjayBwZXJzb24gaW4gb3VyIG5laWdoYm9yaG9vZC4gCk9uY2UgeW91IGF0IHRoZSB0YWJsZSwgdGVsbCBldmVyeW9uZSB5b3UgbmV3IHRvIHRoZSBnYW1lLiAKRnJvbSA5ODAgQUQgb253YXJkcywgdW50aWwgdGhlbHJlZCdzIGRlYXRoIGluIEFwcmlsIDEwMTYsIFZpa2luZ3MgYXR0YWNrZWQgRW5nbGFuZCBtb3JlIGFuZCBtb3JlIGZyZXF1ZW50bHkuIEZpbmFsbHksIGluIDEwMTYsIENudXQgd2FzIGRlY2xhcmVkIEtpbmcgb2YgYWxsIEVuZ2xhbmQuIApCdXQgbGlrZS4gCk9yIHRoaXMgbGlzdCBvZiBHT1AgY29uZ3Jlc3NwZW9wbGUgdGhhdCBoYXZlIGJlZW4gYXR0YWNrZWQgaW4gdGhlIGxhc3QgMTAgbW9udGhzOkp1c3QgdGhvdWdodCBpIHByb3ZpZGUgc29tZSBleGFtcGxlcyB0aGF0IHdlcmVuIGp1c3QgYW4gYXR0ZW1wdCB0byBzbGFuZGVyIHRoZSByaWdodCB3aW5nIGFzIGJlaW5nIHJhY2lzdHMgOikuIAo3bSB3aW5uaW5ncyBpbiBVSyBjb3VydCBjYXNlClRoZSBUcm9qYW5zIHdpbGwgbmVlZCBldmVyeSBiaXQgb2YgUmVuY2sncyBtdWx0aSBzcG9ydCBleHBlcmllbmNlLCBhcyB3ZWxsIGFzIGhpcyBiYXQsIGdsb3ZlIGFuZCBzcGVlZCwgYWZ0ZXIgZ3JhZHVhdGluZyBzZXZlbiBzZW5pb3JzIGZvbGxvd2luZyBsYXN0IHNwcmluZydzIHN0YXRlIHRvdXJuYW1lbnQgcnVuLiBCdXQgdGhleSBkbyBhbHNvIGhhdmUgcGxlbnR5IG9mIHRhbGVudCByZXR1cm5pbmcgaW4gc29waG9tb3JlIHN0YWZmIGFjZSBEZXZvbiBOb3dlbGxzLCB3aG8gcGl0Y2hlZCBoaXMgd2F5IHRvIGEgMy4wNSBFUkEgb3ZlciA0My4yIGlubmluZ3MgYXMgYSBmcmVzaG1hbiwgUmVuY2sncyBkb3VibGUgcGxheSBjb3VudGVycGFydCBhbmQgc2VuaW9yIHNob3J0c3RvcCBLYXNjZW4gRGVldGVyLCBhbmQgb3RoZXIgcmV0dXJuaW5nIHZhcnNpdHkgbGV0dGVybWVuIGxpa2Ugc2VuaW9ycyBHcmFudCBSdWxvbiBhbmQgQ2hyaXMgR3VtZXNvbi4KSWYgdGhlIHR1bW9yIGhhcyBub3QgZ3Jvd24gYW5kIGlmIERhbmllbCdzIHByb2dub3NpcyByZW1haW5zIG9wdGltaXN0aWMsIHRoZW4gY2hlbW90aGVyYXB5IGFuZCBwb3NzaWJsZSByYWRpYXRpb24gYXBwZWFyIHRvIGJlIGluIERhbmllbCdzIGJlc3QgaW50ZXJlc3QsIFJvZGVuYmVyZyB3cm90ZS4gVGhlIGp1ZGdlIHNhaWQgaGUgd291bGQgbm90IG9yZGVyIGNoZW1vdGhlcmFweSBpZiBkb2N0b3JzIGZpbmQgdGhlIGNhbmNlciBpcyB0b28gYWR2YW5jZWQuClRoZSBiYW5kIHBsYXllZCB0aGUgZmlyc3QgdGhyZWUgc29uZ3Mgb2ZmIHRoZSBuZXcgYWxidW0gIkV6bWVyZWxkYSwiICJXaWNrZWQiIGFuZCAiQW5pbWFsIiBhbmQgdGhlbiBjb250aW51ZWQgdG8gZW50ZXJ0YWluIGR1cmluZyBhIHdpZGUgcmFuZ2luZyBpbnRlcnZpZXcgd2l0aCBRdWVudGluLi4gCkRyb3BwaW5nIGluIGEgbGVzcyBjb250ZXN0ZWQgYXJlYSBuZWFyIGEgdmVyeSBjb250ZXN0ZWQgYXJlYSBpcyBhIHByb3ZlbiBzdHJhdGVneSB0aGF0IGNhbiBoZWxwIHN0cnVnZ2xpbmcgcGxheWVycyBsZWFybiB0aGUgZ2FtZSBhbmQgaGVscHMgdGhlbSBhbHNvIGp1c3QgZ2V0IG1vcmUgc2tpbGxlZCBhdCBhaW1pbmcgaW4gYSBzb21ld2hhdCBzYWZlciBlbnZpcm9ubWVudCAoM3JkIHBhcnR5aW5nIGlzIHNhZmVyIHRoYW4gZW5nYWdpbmcgYSBmcmVzaCB0ZWFtKS4gClJlYWQgbW9yZTogSWxsYXdhcnJhIGtpZHMgYXJlIGJlaW5nIHNlZHVjZWQgYnkgcG9raWVzLCBuZXcgc3R1ZHkgc2hvd3MgSW4gV2FyaWxsYSwgdGhlcmUgYXJlIHR3byBjbHVicyBhbmQgb25lIGhvdGVsIHdpdGggYSB0b3RhbCBvZiAzMDUgcG9rZXIgbWFjaGluZXMuIApMb29rZWQgdXAgYXQgb25lIHBvaW50IGFuZCwgaW4geW91ciBoZWFydCBvZiBoZWFydHMsIHlvdSBhbHdheXMgYmVsaWV2ZSB0aGF0IHlvdSBnb2luZyB0byB3aW4sIGJ1dCB3aGVuIEkgc2F3IG5pbmUgcG9pbnRzIEkgdGhvdWdodCwgY293IGFyZSB3ZXJlIGdvaW5nIHRvIGhpdCBkb3VibGUgZGlnaXRzPyBoYWQgYmVhdGVuIEtlbG93bmEgODIgNjQgaW4gRnJpZGF5IHNlbWlmaW5hbHMuIEtlbG93bmEgd2FzIHRoZSBwcmVzZWFzb24gTm8uIApJIGRvbid0IGdldCB0byBzZWUgYmFieSB1bnRpbCAyMCB3ZWVrcy4gSSdtIHByYXlpbmcgSSBjYW4gY29udmluY2UgdGhlbSB0byBnaXZlIG1lIGEgZGF0aW5nIHNjYW4uLiAKSSB0aGluayB3aGF0IHlvdSBhcmUgcmVmZXJyaW5nIHRvIGlzIHRyYW5zbXV0YXRpb24gd2hlcmUgcmFkaW9hY3RpdmUgaXNvdG9wZXMgYXJlIHN1YmplY3RlZCB0byBuZXV0cm9uIGlycmFkaWF0aW9uIHRvIHRyeSBhbmQgY29udmVydCB0aGVtIGludG8gc2hvcnRlciBsaXZlZCBpc290b3BlcyB3aGljaCBhcmUgZWFzaWVyIHRvIG1hbmFnZSBpbiB0aGUgbG9uZyB0ZXJtLiBJdCBpcyBhbiBvbGQgaWRlYSB0aGF0IGhhcyBuZXZlciBiZWVuIHByYWN0aWNhbGx5IGltcGxlbWVudGVkLiAKV2hhdCBncmluZHMgbWUgdGhpcyBvZmZzZWFzb24gaXMgdGhhdCBCcmF2ZXMgZmFucyBhbmQgQ29iYiBDb3VudHkgdGF4cGF5ZXJzIHdlcmUgcHJvbWlzZWQgdGhhdCBieSBtb3ZpbmcgdGhlIHRlYW0gb3V0IG9mIGRvd250b3duIGFuZCB0byB0aGUgbmV3IGJhbGxwYXJrIHRoYXQgcGF5cm9sbCB3b3VsZCBiZSBpbmNyZWFzZWQuIEZsYXNoIGZvcndhcmQgdHdvIHllYXJzIGFuZCB0aGUgYmF0dGVyeSBpcyBpbiBmYWN0IGJyaW5naW5nIGluIG1vcmUgcmV2ZW51ZSBmb3IgdGhlIHRlYW0sIGFuZCBieSBoYXZpbmcgYSB3aW5uaW5nIHRlYW0gcGxheSBpbiB0aGUgcGFyayBsYXN0IHNlYXNvbiBhdHRlbmRhbmNlIGFjdHVhbGx5IHdlbnQgdXAgdGhpcyBwYXN0IHllYXIuIEl0J3MgYWxtb3N0IGxpa2Ugd2lubmluZyBhbmQgZmllbGRpbmcgYSBjb21wZXRpdGl2ZSB0ZWFtIGlzIGdvb2QgZm9yIGJ1c2luZXNzLiAKSkQ6IEkgbWV0IGEgYnVuY2ggb2YgdGhlIGd1eXMgYnJpZWZseSwgYnV0IEkgaGF2ZW4gcGxheWVkIHdpdGggYW55IG9mIHRoZW0uIEkgcGxheWVkIHdpdGggTWljaGVsIFRoZXJyaWVuLCB0aG91Z2guIFRoYXQgd2FzIGEgbG90IG9mIGZ1bi4gClRoZXJlIGlzIHNvbWUgd29yZCBvdXQgdGhlcmUgdGhhdCB0aGUgUnVzc2lhbiBob25leXBvdCBsb2JieWlzdCBsYXd5ZXIgaXMgYSBDb21leSBGQkkgYXNzZXQuIApKdXN0IGJlY2F1c2UgdGhleSBib3RoIGFwcGVhciBpbiB5b3VyIGRyZWFtIGRvZXMgbm90IG1lYW4gdGhhdCB5b3UgYXJlIGdvaW5nIHRvIGhhdmUgdG8gY2hlYXQgb24gYm90aCBvZiB0aGVtLiAKVGhlIGdlbmVyYWwgcnVsZSAod2F5IG92ZXJzaW1wbGlmaWVkKSBpcyAid291bGQgSSBtYWtlIGEgc2FuZHdpY2ggd2l0aCB0aGlzIiBpZiBzbyAgIGhhbW90emkuIFNlcGhhcmRpbSBkb24ndCBldmVuIHdhc2ggb24gc3dlZXQgY2hhbGxhaC4gSXQgZ2V0cyB2ZXJ5IGNvbXBsaWNhdGVkLCBpZSBwaXp6YS4uIApBbGJ1cnkncyBDaHJpcyBPJ1Rvb2xlIGZpbmlzaGVkIHJ1bm5lciB1cCBhbmQgV29kb25nYSdzIEphc29uIFN0ZWFyLCAyNiwgZmluaXNoZWQgc2l4dGguClN0ZXZlbkFydml2ICA0IHBvaW50cyAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpaaXAgUGFzc3dvcmQgQ3JhY2tlciB2IEtleWdlbiBab2hvIE1hbmFnZUVuZ2luZSBBRE1hbmFnZXIgUGx1cyB2IFpvaG8gTWFuYWdlRW5naW5lIFNlcnZpY2VEZXNrIFBsdXMgdi4gCkxlcyBmb3JjZXMgZGUgcG9saWNlIHNvbnQgZWxsZXMgYWxsZXMgdGVzdGVyIGxhIHF1YWxpdCBkZXMgbWFzc2FnZXMgZGFucyBsZXMgcnVlcyBSb2RpZXIsIENvbmRvcmNldCwgZGUgTWF1YmV1Z2UuIApOb3QgdG9vIHNoYWJieSBmb3IgYSBob3VzZSBoYWNrLiBXaGVuIEkgY2xvc2VkLCBJIHJlY2VpdmVkIGp1c3Qgb3ZlciAkMWsgZm9yIHRoZSBzZWN1cml0eSBkZXBvc2l0IGFuZCBwcm9yYXRlZCByYXRlIGZvciBKdWx5LiAKVG8gbWFrZSB0aGluZ3MgZWFzeSBvbiB5b3Vyc2VsZiwgSSB3b3VsZCBzYXkgY29sbGVjdGluZyBmcm9tIGEgcGFydGljdWxhciBjYXNpbm8gaXMgbXVjaCBtb3JlIHByb2ZpdGFibGUgdGhhbiBjb2xsZWN0aW5nIGluIGdlbmVyYWwuIApQbHVzLCB5b3UgZG9uIGtub3cgd2hvIGlzIGdvbm5hIHB1bGwgb3V0IGEgZnVja2luIGd1biBpbiB0aGUgU3RhdGVzLiAKSSBhZ3JlZSBhbmQgc2xpZ2h0bHkgZGlzYWdyZWUgd2l0aCB0aGlzLiBPbmx5IGJlY2F1c2UgKHRvIG1lKSB0aGF0IHdoYXQgQ3Jvc3NGaXQgT25lIHBlcnNvbiB3cml0ZXMgYSB3b3Jrb3V0IChEYXZlKSwgYW5kIGV2ZXJ5Ym9keSB0cmllcyB0byBzZWUgaG93IHdlbGwgdGhleSBjYW4gZG8gaXQuIFRoZW4gZXZlcnlvbmUgdHJpZXMgdG8gZG8gaXQgYmV0dGVyLgpCeSBtaWxpdGFyeSBvZiBZYXppZCB0aGV5IGNvdWxkIG5vdCBkcmluayB3YXRlciBmcm9tIHRoZSBGb3JhdCByaXZlci4gCkkgdGhpbmsgSSBoYXZlIHdvcmtlZCBvbiB0aGlzIGFmdGVyIHNoZSB0b2xkIG1lIGJ1dCBpdCBhbm5veXMgbWUgdGhhdCBqdXN0IHNvdW5kaW5nIG1vcmUgY29uZmlkZW50IG1ha2VzIHBlb3BsZSB0YWtlIG1lIG1vcmUgc2VyaW91c2x5IGV2ZW4gdGhvdWdoIHRoZSBjb250ZW50IGlzIHRoZSBzYW1lLiBCdXQgaGV5LCBJIHN1cHBvc2UgSWYgSSBhbSBub3QgZXZlbiBjb25maWRlbnQgaW4gbXlzZWxmIHRoZW4gaG93IGNhbiBJIGV4cGVjdCBvdGhlcnMgdG8gaGF2ZSBjb25maWRlbmNlIGluIG1lPwpCZWNhdXNlIHRoZSBtaWdyYW50cywgbXVjaCBsaWtlIG1hbnkgd2hvIGxpdmUgaW4gdGhlIEFtZXJpY2FuIHNvdXRod2VzdCwgYXJlIGRlc2NlbmRhbnRzIG9mIFNwYW5pc2ggY29sb25pYWwgc3ViamVjdHMgYW5kIGFzIHN1Y2ggYXMgaGF2ZSB0aGUgcmlnaHQgb2YgbW92ZW1lbnQgb24gdGhlc2UgZm9ybWVyIFNwYW5pc2ggY29sb25pYWwgbGFuZHMuIExldCBkcm9wIHRoZSBwcmV0ZW5zZSBvZiAiaHVtYW4gcmlnaHRzIiBhbmQgIm1vcmFsaXR5Ii4gCkJvbWJpbmcgYSB2aWxsYWdlIGluIEthYnVsIG9yIGhhdmluZyBhIHNob290IG91dCB3aXRoIEFtZXJpY2FuIHRlcnJvcmlzdHMgaW4gc29tZSB2aWxsYWdlIGluIFRleGFzIGRvZXMgbm90IGxlYWQgdG8gbGVzcyB2aW9sZW5jZS4gClRoZXJlIGFyZSBhdCBsZWFzdCAzNTAgb3RoZXIgZmVydGlsaXR5IGNsaW5pY3MgYXJvdW5kIEluZGlhLCBhbHRob3VnaCBpdCBkaWZmaWN1bHQgdG8gc2F5IGhvdyBtYW55IG9mZmVyIHN1cnJvZ2FjeSBzZXJ2aWNlcyBzaW5jZSB0aGUgZ292ZXJubWVudCBkb2VzbiB0cmFjayB0aGUgaW5kdXN0cnkuIApJIHNheSBmaWxsIHRoZSB0YW5rIGV2ZXJ5IHRocmVlIGhvdXJzIHdpdGggbnV0cmllbnQgZGVuc2UgZm9vZHMuIFByb3RlaW4gc2hha2VzLiBEZWxpY2lvdXMgYXZvY2FkbyB0b2FzdC4gQ2FuIHdlIGVhdCB0aGlzPyBNYXliZSBkdXJpbmcgdGhlIGJyZWFrLiBQcm90ZWlucy4gUHJvdGVpbiBiYXJzLiBDaGlja2VuLiBZb3Ugd2FudCB0byBmaWxsIHRoZSB0YW5rIGluIGEgaGVhbHRoeSB3YXkuIFRoaXMgaXMgbm90IGFib3V0IGdldHRpbmcgZmFzdCBmb29kIGFuZCBwaWxpbmcgdGhlIG51bWJlciBvbiB0aGUgc2NhbGUgZ29pbmcgdXAuIApUaGUgQ29tbXVuaXN0IE1hbmlmZXN0bwpXaGlsZSB3ZSBvbiB0aGUgc3ViamVjdCwgaXQgZmFpciB0byBzYXkgYm90aCB0aGUgTUk2IG1hbiBhbmQgdGhlIGJhbmUgb2YgTGVpdGggc3BlbmQgYSBwZXJ2ZXJzZSBhbW91bnQgb2YgdGhlaXIgdGltZSBzbWFzaGluZyB1cCBwdWJsaWMgc3BhY2VzLiBBbmQgYmFycyB0YWtlIGEgZnJlcXVlbnQgcGFzdGluZy4KQmVuY2g6IHVucmFjaywgcGF1c2UgZm9yIGEgcXVpY2sgc2Vjb25kIGF0IHRoZSB0b3AgdGhlbiBnaXZlIHlvdXJzZWxmIGEgc3RhcnQgY29tbWFuZC4gCk5vLCB0aGF0IGRvZXNuIGVudGl0bGUgYW5vdGhlciBhZHVsdCB0byBhYnVzZSB0aGVpciBwb3dlciBhbmQgbG9zZSBjb250cm9sLCBidXQgdGhhdCBvdmVyIHJlYWN0aW9uIGRvZXNuIGRpc21pc3MgeW91ciBkYXVnaHRlciBhY3Rpb25zLiAKU3RheSBzdHJvbmcgYW5kIEkgd2lzaCB5b3UgdGhlIGJlc3QuLiAKVGhhdCBzYWlkLCBJIHJlYWxseSBkb24gdGhpbmsgdGhlIHNjaG9vbCBpcyB0aGF0IGxpYmVyYWwuIEluIG15IGV4cGVyaWVuY2UgYXMgYSBwb2x5IHNjaS9lY29uIHN0dWRlbnQsIEkgd291bGQgc2F5IGl0IGlzIHByZXR0eSBhdmVyYWdlLiAKT1AsIGF0IHRoaXMgcG9pbnQsIGZsb3dlcnMgYW5kIGEgaGFuZHdyaXR0ZW4gbGV0dGVyIG9mIHN5bXBhdGh5IHRvIHRoZSBpbW1lZGlhdGUgZmFtaWx5IHdvdWxkIGJlIGFwcHJvcHJpYXRlLiAKSWRldCBtaW5kc3RlIGVyIGRldCBldCBza3JpZHQgaSBkZW4gcmlndGlnZSByZXRuaW5nICEKSSBhbG1vc3Qgc3Ryb2tlZCBvdXQuIApTZWl0IGVpbmlnZW4gSmFocmVuIGlzdCBkZXIgcyBTcGVja2cgZGVyIEhhdXBzdHN0YWR0IHp1bSBXZWxsbmVzcyBQYXJhZGllcyBnZXdvcmRlbi4gTWVociBhbHMgZWluIER1dHplbmQgZ2Vob2JlbmVyIEhvdGVscyB3aXJidCB2b3IgYWxsZW0gdW0gTWFzc2FnZSBodW5ncmlnZXIgSGF1cHRzdCB2ZXJzdCBhYmVyIGF1Y2ggdW0gVG91cmlzdGVuIGF1cyBhbmRlcmVuIFJlZ2lvbmVuLiBEYXMgR3V0IGhhdCBlaW5lIGJ1bnRlIEdlc2NoaWNodGU6IEthcnQgaGF0dGVuIGhpZXIgaW0gTWl0dGVsYWx0ZXIgZWluZSBNIGdlYmF1dCwgZGFubiB3dXJkZSBkZXIgSG9mIHMgaW0gMTguIApOb3RoaW5nIHRoYXQgaGFwcGVucyB0byBUcnVtcCwgYXQgdGhpcyBwb2ludCwgaXMgZ29pbmcgdG8gZGlzc3VhZGUgdGhlbS4gVGhlc2UgcGVvcGxlIGhhdmUgZmluYWxseSBoYWQgYSB0YXN0ZSBvZiBhIFByZXNpZGVudCB3aG8gd2FzIG9wZW5seSwgbmFrZWRseSByYWNpc3QuIEFuZCBGb3ggTmV3cyBoYXMgdG9sZCB0aGVtIGZvciB0d28gc3RyYWlnaHQgeWVhcnMgdGhhdCBpdCBiZWVuIGdyZWF0LiBIZSB3aW5uaW5nLCBlY29ub215IGlzIGJvb21pbmcsIGFuZCB0aGVpciBsaXZlcyBhcmUgdGlwIHRvcC4KTmFuY3kgVG9kZCBzYXlzIGxlZ2lzbGF0dXJlIGNvdWxkIHJlZ3VsYXRlIGhlciBjYXNpbm9zCk1hbnkgY29uc3RhbnRseSB0ZXh0IGVhY2ggb3RoZXIgYXQgdGhlIHNhbWUgdGFibGUsIG90aGVycyB3aWxsIGp1c3Qgc3BlYWsgdGhlaXIgbmF0aXZlIGxhbmd1YWdlIGJldHdlZW4gaGFuZHMuIFNvbWV0aW1lcyB0aGV5IHNpdCBuZXh0IHRvIGVhY2ggb3RoZXIgYW5kIHdoaXNwZXIuCkF0IGp1c3QgNDIgbWludXRlcyBsb25nLCBpdCBpcyB0aGUgc2hvcnRlc3QgZmVhdHVyZSBsZW5ndGggZmlsbSBtYWRlIGJ5IFdhbHQgRGlzbmV5IFByb2R1Y3Rpb25zLiAKT2gsIEkga25vdy4gRXZlcnlvbmUgdGhpbmtzIGl0IHJpY2ggc3RhcmxldHMgd2hvIGdldCBib29iIGpvYnMgYW5kIGFnaW5nIHN0YXJsZXRzIHdobyBnZXQgZmFjZWxpZnRzLiAKSWYgeW91IHdhbnQgdG8gcmVzcGVjdCBLb3JlYW4gY3VsdHVyZSwgdGhlbiByZWNvZ25pemUgdGhhdCB5b3UgbmV2ZXIgYmUgdHJ1bHkgS29yZWFuIGV2ZW4gaWYgeW91IGdldCBTb3V0aCBLb3JlYW4gY2l0aXplbnNoaXAuIApUaGlzIGVkdWNhdGlvbmFsIGdhcCBjb250aW51ZXMgaW50byBwb3N0Z3JhZHVhdGUgdHJhaW5pbmcuIApSZWFkIHRoZSBFbnRpcmUgQXJ0aWNsZUF1dG9tYXRpYyBHYXRlcyBCcmluZyBIYXBwaW5lc3MgbyBUaG91c2FuZHMgQWNyb3NzIHRoZSBnbG9iZQpJIGtub3cgaXQncyBkaWZmaWN1bHQsIGFuZCBJIGRvbid0IGJlbGlldmUgYW55b25lIHdvdWxkIGZhdWx0IHlvdSBmb3IgdGFraW5nIHRpbWUgdG8gZ2V0IHRoaW5ncyBsaW5lZCB1cCB0byBnaXZlIHlvdSB0aGUgYmVzdCBjaGFuY2Ugb2YgcmV0YWluaW5nIGN1c3RvZHkuIApXaGVyZSB0aGUgZ2lybCB3YXMgaW50byBtZSwgYnV0IEkgZGlkbiBzZWUgY29tbW9uIGdyb3VuZC4gCkVzIHdlcmRlbiBuaWNodCBlaW56ZWxuZSBQZm9zdGVuIHZlcmJvdGVuLCB1bmQgZGFubiB3ZXJkZW4gd2VpdGVyZSBWZXJib3RlIGRhbWl0IGJlcmVjaHRpZ3QgZGFzcyBpbiBiZXN0aW1tdGVuIEZsbGVuIGFuZGVyZSBlaW56ZWxuZSBQZm9zdGVuIHZlcmJvdGVuIHdlcmRlbi4gCkN1dCB0byBzZXZlcmFsIHllYXJzIGxhdGVyLCBJIHdvcmtpbmcgYXQgYSBkb3dudG93biBneW0sIHB1dHRpbmcgbXlzZWxmIHRocm91Z2ggY29sbGVnZSwgYW5kIHdobyB3YWxrcyBpbj8gQWZvcmVtZW50aW9uZWQgZG91Y2hlLiAKIkkgYW0gcmVhbGx5IHNlbnNpdGl2ZSB0byBzdGF0aWMgc2hvY2tzIHNvIHBsZWFzZSBnaXZlIG1lIG1vcmUgc3BhY2UiLiBUaGUgbWFuIGxvb2tlZCByZWFsbHkgY29uZnVzZWQgYnV0IGdhdmUgaGVyIHNwYWNlLlRoZSB0aGlyZCB0aW1lIHdhcyBhIGNvdXBsZSBvZiB3ZWVrcyBhZ28uIFRoaXMgdGltZSBjcmF6eSBzdGF0aWMgd29tYW4gd2FzIHN0YW5kaW5nLiBJdCB3YXMgYSBwcmV0dHkgY3Jvd2RlZCBzaXR1YXRpb24gd2hlcmUgdGhlcmUgd2VyZSBwbGFjZXMgd2hlcmUgdGhlcmUgd2VyZSB1cCB0byAzIHBlb3BsZSBpbiB0aGUgYWlzbGUgKHR3byBmYWNpbmcgYXdheSB0b3dhcmRzIHRoZSBzZWF0cywgYW5kIG9uZSBpbiBiZXR3ZWVuKS4gCkkgcmVjb21tZW5kIHJlYWRpbmcgQSBHYXJkZW4gb2YgRm9ya2luZyBQYXRocy4gCjR0aCBncmFkZS4gQWxsIG9mIHRoZSBraWRzIGluIG15IGNsYXNzIGhhZCBmaWd1cmVkIG91dCB0aGF0IHRoZXkgY291bGQgZ2V0IHVwIHRvIHNoYXJwZW4gdGhlaXIgcGVuY2lscyB3aGVuZXZlciB0aGV5IHdhbnRlZCAgIGEgd2F5IHRvIGJyZWFrIHVwIHRoZSBtb25vdG9ueSBJIHN1cHBvc2UuIApTZWl0IDMwIEphaHJlbiBzaW5kIGRpZSBLYW5hcmlzY2hlbiBJbnNlbG4gZWluZSBkZXIgYXV0b25vbWVuIFJlZ2lvbmVuIFNwYW5pZW5zIG1pdCB3ZWl0Z2VoZW5kZW4gTWl0YmVzdGltbXVuZ3NyZWNodGVuLiBBbSAzMC4gTWFpIDE5ODMgdGFndGUgenVtIGVyc3RlbiBNYWwgZGFzIGthbmFyaXNjaGUgUGFybGFtZW50IGluIFRlbmVyaWZmYS4gU2VpdCBkZW0gZmVpZXJuIGRpZSBLYW5hcmlzY2hlbiBJbnNlbG4gamVkZXMgSmFociBhbSAzMC4gTWFpIGlocmVuIEZlaWVydGFnIiwgZGVuIERpYSBkZSBDYW5hcmlhcyIuCkFuZCB0aGlzIGlzIHdoeSB5b3Ugbm90IGludm9sdmVkIGluIHRoZSBqdWRpY2lhbCBzeXN0ZW0gKEkgaG9wZSkuIFlvdSBkb24gbWFrZSBhc3N1bXB0aW9ucy4gClRoZSBmb29kIGlzIGdyZWF0LiBSb3Njb3Ntb3MgY2xldmVybHkgaGlyZWQgd2hhdCBoYXZlIHRvIGJlIHRoZSA1IGZpbmFsaXN0cyBpbiB0aGUgS2F6YWtoc3RhbiBOZXh0IFRvcCBNb2RlbCBjb250ZXN0LCBhbmQgdGhleSBiZWF1dGlmdWxseSBmZWVkIHVzIDMgZmVhc3RzIGEgZGF5LiBCcmVha2Zhc3QgaXMgb2F0bWVhbCwgeW9ndXJ0LCB0dm9yb2csIG9tZWxldHRlIHdpdGggcmVkIGNhdmlhciwgcGVyc2ltbW9ucyBhbmQgaG9uZXksIG51dHMgYW5kIGNvbXBvdGUsIHdpdGggY29mZmVlLCB0ZWEgb3IgY2hpY29yeS4gCkkgdGhpbmsgSSBhbSBvbmUgb2YgdGhlIGhhcHBpZXN0IHBlb3BsZSBJIGtub3cgYmVjYXVzZSBJIGFtIHZlcnkgc2VjdXJlIGluIG15IHNvY2lhbCBjb25uZWN0aW9ucy4gU28gbXkgcXVlc3Rpb24gKGNyaXRpcXVlKSBpc24gZm9yIG1lIGJ1dCBmb3IgbXkgYmVzdCBmcmllbmQuIEF0IDM6MTcsIHRoZSB2aWRlbyBzYXlzICJUaGVzZSBtZWNoYW5pc21zIGZvciBrZWVwaW5nIHVzIGNvbm5lY3RlZCAobG9uZWxpbmVzcyAgPiBwYWluICA+IGRlYXRoL2V2b2x1dGlvbikgd29ya2VkIGdyZWF0IGZvciBtb3N0IG9mIG91ciBoaXN0b3J5IiBhbmQgSSByZW1lbWJlciBteSBmcmllbmQgdm9pY2UgaW4gbXkgaGVhZCBzYXlpbmcgaW4gdGhlIHBhc3Q6ICJBbGwgb2YgdGhlIHJ1bGVzIGZvciBncm91cCBjb2hlc2lvbiwgc29jaWFsIHN1cHBvcnQsIHRyaWJlcyBhbmQgc29tZXRpbWVzIGNvbmZvcm1pdHkuIEl0IG1lYW50IHRoYXQgd2VpcmQgcGVvcGxlIGxpa2UgbWUgd2hvIGNvdWxkbiBjb25mb3JtIGRpZWQuIiBTaGUgY2FuIG9ubHkgdGhyaXZlIGluIGEgc29jaWV0eSBsaWtlIHRvZGF5IHdoZXJlIGluZGl2aWR1YWxzIGFyZSBub3QganVzdCB0b2xlcmF0ZWQgYnV0IGFjY29tbW9kYXRlZC4gSW4gdGhlIHBhc3QsIHRoZXJlIHdlcmUgbm90IGVub3VnaCByZXNvdXJjZXMgdG8gaGVscCBhbGwgdGhlIGluZGl2aWR1YWxzICBpdCB3YXMgbW9yZSBpbXBvcnRhbnQgdG8ga2VlcCB0aGUgZ3JvdXAgYWxpdmUgdGhhbiBhbiBpbmRpdmlkdWFsLgpJbiBhIHRvdGFsIGxhbmd1YWdlIHRoZSBiZW5lZml0IGlzIGxlc3Mgc2V2ZXJlLCBidXQgaW4gYSBwYXJ0aWFsIGxhbmd1YWdlIHRoZXkgY2FuIGJlIGNvbnNpZGVyYWJsZS4gSSBkbyBhZG1pdCB3ZSBsYWNrIHRoZSBkaXNjaXBsaW5lIGFzIGEgY29tbXVuaXR5IHRvIGNvbnNpc3RlbnRseSBhcHBseSBPa2FzYWtpIGxpa2UgdGVjaG5pcXVlcyB0byBhbmFseXplIGhvdyBtYW55IHRodW5rcyBidWlsZCB1cCBhdCB0eXBpY2FsIGNhbGwgc2l0ZXMsIGJ1dCBzaW1wbGUgcnVsZXMgb2YgdGh1bWIgbGlrZSB1bnBhY2tpbmcgSW50IGZpZWxkcywgZXRjLiAKSG93ZXZlciEgT2dvdW4gS3l1IGhhcyBTdG9wIE9wcC4gClRoZSBHYW1lIG9mIEJsYWNrSmFjayAoYXMgYSBDYXNpbm8gR2FtZSkgSXMgVGhlIE9OTFkgR2FtZSB0aGF0IGFsbG93cyBhIHBsYXllciB0byByZWR1Y2UgdGhlIGhvdXNlICUgb2RkcywgYXMgYSBkaXJlY3QgcmVzdWx0IG9mIGhvdyB0aGUgcGxheWVyIHBsYXlzIHRoZSBjYXJkcyB0aHJvdWdob3V0IHRoZSBnYW1lLiAKT3R0byBoYWQgdGhlIGRpYXJ5IHR5cGVkIHVwLCB0aG91Z2ggaGUgc2hpZnRlZCBhIGZldyBlbnRyaWVzIGFuZCBvbWl0dGVkIHNlY3Rpb25zIHRoYXQgd2VyZSBjcml0aWNhbCBvZiBoZXIgbW90aGVyIGFuZCBvZiBGcml0eiBQZmVmZmVyLCBhcyB3ZWxsIGFzIGNlcnRhaW4gZW50cmllcyB0aGF0IGluY2x1ZGVkIEFubmUncyBtdXNpbmdzIG9uIGhlciBlbWVyZ2luZyBzZXh1YWxpdHkuIEl0IHByb3ZlZCBkaWZmaWN1bHQgdG8gZmluZCBhIHB1Ymxpc2hlciB1bnRpbCBvbmUgb2YgT3R0bydzIGZyaWVuZHMgc2hvd2VkIGl0IHRvIHRoZSBoaXN0b3JpYW4gSmFuIFJvbWVpbiwgd2hvIHdyb3RlIGEgZnJvbnQgcGFnZSBhcnRpY2xlIHdpdGggdGhlIGhlYWRsaW5lICJLaW5kZXJzdGVtIiAoIkEgQ2hpbGQncyBWb2ljZSIpIGZvciB0aGUgQXByaWwgMywgMTk0NiwgZWRpdGlvbiBvZiB0aGUgbmV3c3BhcGVyIEhldCBQYXJvb2wuICJUbyBtZSwgaG93ZXZlciwgdGhpcyBhcHBhcmVudGx5IGluY29uc2VxdWVudGlhbCBkaWFyeSBieSBhIGNoaWxkLCIgUm9tZWluIHdyb3RlLCAic3RhbW1lcmVkIG91dCBpbiBhIGNoaWxkJ3Mgdm9pY2UsIGVtYm9kaWVzIGFsbCB0aGUgaGlkZW91c25lc3Mgb2YgZmFzY2lzbSwgbW9yZSBzbyB0aGFuIGFsbCB0aGUgZXZpZGVuY2UgYXQgTnVyZW1iZXJnIHB1dCB0b2dldGhlci4iIFNvb24gYWZ0ZXIsIHRoZSBBbXN0ZXJkYW0gcHVibGlzaGVyIENvbnRhY3QgYWdyZWVkIHRvIHB1Ymxpc2ggdGhlIGJvb2ssIGFuZCBvbiBKdW5lIDI1LCAxOTQ3LCBpdCBhcHBlYXJlZCBhcyBIZXQgQWNodGVyaHVpcyAoVGhlIFNlY3JldCBBbm5leCkuIApBYm91dCAxMDAgYmVhY2hnb2VycyBjbGVhcmVkIG91dCwgYW5kIHRoZSB0c3VuYW1pIHNvb24gcmFnZWQgaW4uIEl0IGVuZGVkIHVwIHRha2luZyBhYm91dCBhIHF1YXJ0ZXIgbWlsbGlvbiBsaXZlcyBpbiAxMyBjb3VudHJpZXMsIGJ1dCB6ZXJvIHBvaW50IHplcm8gbGl2ZXMgb24gVGlsbHkncyBiZWFjaC4uIApJZG8ncyB5b3VuZyBhc3NvY2lhdGVzLCBIdWdvIChLZWVhbiBKb2huc29uKSwgYnV0IG90aGVycyBpbiB0aGUgZG9jdG9yJ3MgY2lyY2xlIGFyZW4ndCBhcyBmcmllbmRseSAgIG5vdGFibHkgSWRvJ3MgZXgsIENoaXJlbiAoSmVubmlmZXIgQ29ubmVsbHkpLi4gCkl0J3Mgb25lIG9mIHRoZSB0b3VnaGVzdCBqb2JzIG91dCB0aGVyZSAgIGluIHBhcnQgYmVjYXVzZSB5b3UgaGF2ZSB0byBtYW5hZ2Ugb3RoZXIgcGVvcGxlJ3MgZXhwZWN0YXRpb25zICAgYW5kIGFsc28gYmVjYXVzZSBpdCdzIG9uZSBvZiB0aGUgbGVhc3QgYWNrbm93bGVkZ2VkIHRhc2tzLiAKQSBkYXVnaHRlciBvZiBhIGhpZ2ggcHJvZHVjdGlvbiAgc2lyZSwgZmVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbWV0aG9kcyBhZHZvY2F0ZWQgYnkgdGhlIHN0YXRlIGFncmljdWx0dXJhbCBjb2xsZWdlLCB3aWxsIHByb2R1Y2UgYXJvdW5kIHNpeCB0aG91ICBzYW5kIHBvdW5kcywgYW5kIGhlciBvZmZzcHJpbmcgdW5kZXIgdGhlIHNhbWUgY29uZGl0aW9ucyBpbiB0dXJuIHNob3VsZCBub3QgZmluZCBpdCBpbXBvc3NpYmxlIHRvIGJyaW5nIGhlciBwcm8gIGR1Y3Rpb24gdG8gdGhvIGVpZ2h0IHRob3VzYW5kIHBvdW5kIG1hcmsgcGVyIHllYXIuIApTIGVzdCBwb3NzaWJsZSBkIGxlcyBmZXVpbGxlcyBkZSBsYSBiZXJjZSwgaWwgZGVtZXVyZSBxdWUgbGVzIHByaW5jaXBhbGVzIHJlc3NvdXJjZXMgbWRpY2luYWxlcyBkZSBjZXR0ZSBwbGFudGUgc2Ugc2l0dWVudCAgc2VzIGV4dHJtaXRzOiBsZXMgcmFjaW5lcyBkIHBhcnQsIGxlcyBzZW1lbmNlcyBkIHBhcnQuIApGb3IgYSBwZXJpb2Qgb2YgYSB5ZWFyIGluIHRoZSBwbGFjZSB3aGVyZSBJIGxpdmUsIHRoZSBvbmxpbmUgZ2FtYmxpbmcgc2hvcHMgd2VyZSBjbG9zZWQgZHVlIHRvIGxhd3MuIApFc3BlY2lhbGx5IGluIHRoaXMgY2FzZS4gVGhlaXIgbmV0IGNvZGUgaXMgc28gZnVja2luZyBidXN0ZWQgdGhhdCB0aGVpciBzZXJ2ZXJzIGNhbiBmaWx0ZXIgb3V0IHdoYXQgYXJlIHZlcnkgb2J2aW91c2x5IGR1cGxpY2F0ZSByZXF1ZXN0cywgYW5kIGl0IHRoZSBwbGF5ZXJzIGZhdWx0PyBJdCBoYXJkIHRvIGV4cGxhaW4gdG8gc29tZW9uZSB3aG8gaXNudCBpbnRvIHNvZnR3YXJlIGV4YWN0bHkgaG93IGVncmVnaW91cyB0aGF0IGlzLiBJZiB0aGF0IHdhcyBicm91Z2h0IHRvIG1lIGFuZCBjYWxsZWQgcHJvZHVjdGlvbiBjb2RlLCB0aGUgaWRpb3RzIHdobyBicm91Z2h0IGl0IHRvIG1lIHdvdWxkIGJlIGRvaW5nIG5vdGhpbmcgYnV0IGNsZWFuaW5nIHVwIG90aGVyIHBlb3BsZSBjb2RlIGZvciB0aGUgcmVzdCBvZiB0aGVpciB0aW1lIHdvcmtpbmcgaW4gdGhhdCBjb2RlYmFzZS4gQXBwYXJlbnRseSBhdCBCZXRoZXNkYSB0aGV5IGdldCBsZWFkZXJzaGlwIHBvc2l0aW9ucy4KTW9zdCBvZiB0aGUgdGltZSBzaGUgZGlkbiBhbnN3ZXIgb3Igd291bGQgYW5zd2VyIDUgbWlucyBiZWZvcmUgc2F5aW5nIHNoZSB3YXMgaW4gaGVyIFBKcyBhbmQgdGlyZWQuIFRoZXkgYXNrZWQgaWYgd2Ugd2FudGVkIHRvIGdvIGljZSBza2F0aW5nLiBXZSBzYWlkIHN1cmUgYW5kIGdhdmUgc29tZSBkYXRlcy4gCkRvdWdsYXMgd3JvdGUgbWFueSBvZiB0aGUgZmlyc3QgRW50cmllcyB0byBhcHBlYXIgb24gSDJHMi4gQXMgd2VsbCBhcyBjb2xsYXRpbmcgYWxsIGhpcyBjb250cmlidXRpb25zIHRvIHRoZSBzaXRlLCB0aGlzIHBhZ2UgYWxzbyBoYXMgbGlua3MgdG8gYWxsIHRoZSBBcHByb3ZlZCBFbnRyaWVzIHdyaXR0ZW4gYnkgbWVtYmVycyBvZiB0aGUgY29tbXVuaXR5IHRoYXQgYXJlIGFib3V0IEFkYW1zIGFuZCBoaXMgd29yay4gClRoZSBtb3N0IHBvcHVsYXIgY2FyZCBnYW1lcyB3aGVyZSB0aGVzZSBwbGF5aW5nIGNhcmRzIGFyZSB1c2VkIGluY2x1ZGUgcG9rZXIsIGdpbiBydW1teSwgYW5kIHNvbGl0YWlyZS4gRGVwZW5kaW5nIG9uIHRoZSBudW1iZXIgb2YgcGxheWVycyBpbiB0aGUgY2FyZCBnYW1lcywgdGhleSBjYW4gYmUgY2xhc3NpZmllZCBhY2NvcmRpbmdseS4gClBhdWwsIE1pbm5lc290YS4gClF1YW5kIG9uIHBhcmxlIGRlIHNleGUgZGFucyBsYSBsaXR0cmF0dXJlIHF1YmNvaXNlLCBvbiBlc3Qgc291dmVudCBkYW5zIGxlIGdsYXVxdWUsIGRhbnMgbGUgbm9pci4gSmUgdm91bGFpcyBxdWUgYSBzb2l0IGxnZXIsIHB0aWxsYW50LCB1biBmZWVsIGdvb2QgYm9vayAsIHNvdWxpZ25lIFN0cGhhbmUgRG9tcGllcnJlLiAgQ2UgcXVlIGonZXNwcmUsIHF1YW5kIGxlcyBnZW5zIGxpcm9udCBsZXMgbm91dmVsbGVzLCBjJ2VzdCBxdSdpbHMgbGVzIGxpcm9udCBzYW5zIHNlIGRlbWFuZGVyIHNpIGMnZXN0IHVuIGdhcnMgb3UgdW5lIGZpbGxlIHF1aSBsJ2EgY3JpdC4uIApXZSBhcmUgZ29pbmcgdG8gaGF2ZSBhbm90aGVyIGxvb2sgYXQgaXQgaW4gdGhlIG5leHQgbW9udGggYW5kIGEgaGFsZiwgYnV0IG15IGNoYW5jZXMgb2YgZ29pbmcgYWhlYWQgYXJlIHNsaW1tZXIgdGhhbiB0aGV5IHdlcmUgd2hlbiB3ZSBzdGFydGVkLiAKSSB3YXMgYWJvdXQgJDNrIGxvdy4gCkVhY2ggc3RhdGUgaGFzIGRpZmZlcmVudCBlZHVjYXRpb25hbCByZXF1aXJlbWVudHMsIGJ1dCB0aGUgQkxTIG5vdGVzIHRoYXQgbW9zdCBtYXNzYWdlIHRoZXJhcHkgcHJvZ3JhbXMgcmVxdWlyZSBhYm91dCA1MDAgaG91cnMgb2Ygc3R1ZHkgYW5kIGhhbmRzIG9uIGV4cGVyaWVuY2UuIApCdXQgdGhlIHNvZnR3YXJlIHdhcyB3b3JraW5nIHRvbyBzbG93LiBUbyBiZSBob25lc3QsIGl0IHdhcyByYXRoZXIgdGVycmlibGUgZXhwZXJpZW5jZSBmb3IgcGxheWVycy4gCklmIHlvdSBvbmx5IHBsYXkgNWsgZ2FtZXMsIHlvdSBhcmUgc3RpbGwgcXVpdGUgbmV3LCB1bmxlc3MgeW91IGhhdmUgc29tZW9uZSBleHBlcmllbmNlZCBndWlkaW5nIHlvdS4gaSB3b3VsZG50IHNheSBpdCB1bmxlc3MgeW91IGhhdmUgc29tZW9uZSB0byBwbGF5IHdpdGggeW91LiBkaXNjdXNzaW5nIHN0cmF0ZWd5IGFuZCBleHBlcmllbmNlIHdpdGggb3RoZXJzIG1ha2UgdGhpcyBnYW1lIGEgbG90IGJldHRlci4KTmV4dCwgY29uc2lkZXIgZ2V0dGluZyBhIHBva2VyIHRhYmxlLiBXaGlsZSB0aGUgZGluaW5nIHJvb20gdGFibGUgbWF5IHdvcmssIHlvdSBjYW4gYWRkIGdyZWF0bHkgdG8geW91ciBnYW1lIGJ5IGhhdmluZyBhIGdlbnVpbmUgaG9sZGVtIHBva2VyIHRhYmxlLiBUaGV5IGNvbWUgaW4gYWxsIHByaWNlIHJhbmdlcy4gCkJlY2F1c2Ugb2YgU2FsbWFuJ3Mgd2lsbGluZ25lc3MgdG8gYWNrbm93bGVkZ2UgdGhlIGFuY2llbnQgSmV3aXNoIHJpZ2h0IHRvIGEgc2hhcmVkIEplcnVzYWxlbSBhbG9uZyB3aXRoIGNlcnRpZnlpbmcgbXVjaCBvZiB0aGUgc3Vycm91bmRpbmcgbGFuZHMsIHN0cmV0Y2hpbmcgZnJvbSBMZWJhbm9uIHRvIHRoZSBSZWQgU2VhLCBoZSBjb3VsZCBhZ2FpbiBlbWVyZ2UgYXMgYW4gdWx0aW1hdGUgYnJva2VyIG9mIHBlYWNlLCBzYWx2aW5nIHRoZSBwbGFuZXQncyBjb250YWdpb3VzIGFuZCBlbmRsZXNzIGNpcmN1aXQgb2YgSXNyYWVsaS9QYWxlc3RpbmlhbiB3YXJmYXJlLgpJIGhlYXIgcGVvcGxlIHNheSB5b3UgZ290dGEgcGxheSBsaWtlIDIwMCsgaG91cnMgYSBtb250aCB0byByZWFsbHkgZ3JpbmQgYW5kIGdldCBnb29kLiAKU28gTml4b24gZGVjbGluZWQgc2VjcmV0IHNlcnZpY2UsIHRoYXQgZ3JlYXQuIApBY2NvcmRpbmcgdG8geW91IEkgc2hvdWxkIG5vdCBoYXZlIGRvbmUgYW55dGhpbmcsIHJvbGxlZCBvdmVyIGFuZCBnb25lIHRvIHNsZWVwLiBJZiB5b3UgcmVhbGx5IGRvIGJlbGlldmUgYWxsIHRoZSBzdHVmZiB5b3UgaGF2ZSB3cml0dGVuIGluIHRoaXMgdGhyZWFkIEkgZmVlbCBiYWQgZm9yIHlvdSwgYW5kIEkgd291bGQgbGlrZSB0byBzYXkgc29ycnkgdGhhdCB5b3UgYXJlIHRoZSBwZXJzb24geW91IGhhdmUgYmVjb21lCldhc2hpbmd0b24gcG91cmVkIGFuIGFkZGl0aW9uYWwgMjEsMDAwIHRyb29wcyBpbnRvIEFmZ2hhbmlzdGFuIHRvIHByb3ZpZGUgc2VjdXJpdHkgZm9yIGl0cyByZWNlbnQgcHJlc2lkZW50aWFsIGVsZWN0aW9uLCB3aGljaCBoYXMgYmVlbiBtYXJyZWQgYnkgYWxsZWdhdGlvbnMgb2YgZnJhdWQuIHRyb29wcyB3ZXJlIGtpbGxlZCBpbiB0aGUgZmlnaHRpbmcsIHN1cnBhc3NpbmcgdGhlIHByZXZpb3VzIGhpZ2ggb2YgNDUgaW4gSnVseS4gQW5kIHRoZSB3YXIgaGFzIHNwcmVhZCBpbnRvIFBha2lzdGFuLCB3aGVyZSBUYWxpYmFuIGZpZ2h0ZXJzIGFyZSBub3cgYmF0dGxpbmcgZ292ZXJubWVudCB0cm9vcHMgaW4gdGhhdCBudWNsZWFyIGFybWVkIGNvdW50cnkuCkkgcmVhZCB0aGUgZW50aXJlIGFydGljbGUsIHNvIG5vIEkgZGlkbiBpZ25vcmUgY29udGV4dC4gV2hhdCBkbyB5b3Ugd2FudCB0aGVtIHRvIGRvLCBjb250aW51ZSBsb3NpbmcgJDIgbWlsbGlvbiBldmVyeSBmb3VyIHllYXJzIHRvIGhvdXNlIDEwMCByZXNpZGVudHMgaW4gYW4gYXJlYSB3aXRoIHByb2JhYmx5IHRoZSBoaWdoZXN0IGNvc3Qgb2YgbGl2aW5nIGluIHRoZSBlbnRpcmUgY2l0eT8gVGhhdCBkb2VzbiBzb3VuZCByZWFzb25hYmxlIGRvZXMgaXQ/IFdoYXQgZG9lcyBzb3VuZCByZWFzb25hYmxlIGlzIHRvIHNlbGwgdGhlIHByb3BlcnR5IHlvdSBhcmUgbG9zaW5nIG1pbGxpb25zIG9uIHRoYXQgaXMgbG9jYXRlZCBpbiBhcmVhIHRoYXQgaXMgbm90IGNvbmR1Y2l2ZSB0byB0aGUgaW5jb21lIG9mIHlvdXIgcmVzaWRlbnRzOyBhbmQgYXMgYSByZXN1bHQgb2YgdGhlIHNhbGUsIGJlIGFibGUgdG8gcmVsb2NhdGUgYWxsIDEwMCByZXNpZGVudHMgYW5kIHByb3ZpZGUgMjAwIE1PUkUgbG93IGluY29tZSBpbmRpdmlkdWFscyBob3VzaW5nLiBXaGF0IHRoZSBob3RlbCBhbmQgdGhlIGNpdHkgd2FudCB0byBkbyB3aXRoIHRoZSBwYXJraW5nIHNpdHVhdGlvbiBpcyBjb21wbGV0ZWx5IGlycmVsZXZhbnQgdG8gdGhlIGZhY3QgdGhhdCBDTUhBIGlzIGRvaW5nIHdoYXQgaXMgcmlnaHQgZmluYW5jaWFsbHkgYW5kIHdoYXQgbWFrZSBjYW4gbWFrZSB0aGUgbW9zdCBpbXBhY3QgdG8gdGhlIHBvcHVsYXRpb24gdGhleSBhcmUgZGVzaWduZWQgdG8gc2VydmUuIDAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpFdmVyeSBvdGhlciBXZWRuZXNkYXkgd2UgcnVuIGEgIlNob3J0IEFuc3dlcnMgdG8gU2ltcGxlIFF1ZXN0aW9ucyIsIGFuZCBpZiB5b3UgY2FuIGhhbmcgb24gdG8geW91ciBxdWVzdGlvbiB1bnRpbCB0aGVuLCBpdCBjYW4gbGlrZWx5IGZpdCB1bmNoYW5nZWQuCkRvd250b3duIExvbmRvbiBkZXZlbG9wZWQgYSB0cmVzcGFzc2luZyBzdGlja2VyIHRoYXQsIHdoZW4gcGxhY2VkIG9uIGEgd2luZG93LCBnaXZlcyBwb2xpY2UgYmxhbmtldCBhcHByb3ZhbCB0byBzZXQgZm9vdCBvbiB0aGUgcHJvcGVydHkgYW5kIG1vdmUgaG9tZWxlc3MgcGVvcGxlIGFsb25nLiBUaGUgYnVzaW5lc3MgaW1wcm92ZW1lbnQgYXNzb2NpYXRpb24gYWxzbyBkaXN0cmlidXRlZCB0aGUgc3RpY2tlciB0byB0d28gb3RoZXIgQklBcyBpbiBMb25kb24uCkJ1dCBpZiBJIGRvbid0IHBsYXkgaXQgZXZlciBhZ2FpbiwgdGhhdCdsbCBiZSBva2F5LCB0b287IHRoZXJlIGFyZSBwbGVudHkgb2Ygb3RoZXIgb3B0aW9ucyBpbiB0aGUgaW5kdXN0cnkuIi4gCkl0IG5vdCBtdWNoIG9mIGEgc3RyZXRjaCB0byBzZWUgaG93IHNvbWVvbmUgbGlrZSB0aGF0IG1pZ2h0IGZhbnRhc2l6ZSBhYm91dCBpdCBmb3IgeWVhcnMgYmVmb3JlIGNvbW1pdHRpbmcgdGhlaXIgZmlyc3Qga2lsbCwgd2hpY2ggdGhleSBzYXkgZmVlbHMgbGlrZSBhbiBlbW90aW9uYWwgcmVsZWFzZSBvciBhICJoaWdoIiBkdXJpbmcgdGhlIGNyaW1lLiAKQmlnIGRlYWwsIHJpZ2h0PyBMb3RzIG9mIGtpbmdzIGhhdmUgYmVlbiBtdXJkZXJlZC4gCk1heXdlYXRoZXIgaXMgVEJFCkxvY2F0ZWQgYWJvdXQgdGhyZWUgaW5jaGVzIGJlbG93IHRoZSBuYXZlbCwgaXQgaXMgY29uc2lkZXJlZCB0aGUgcm9vdCBvZiBxaSBpbiB0aGUgYm9keS4gClRoZSBpbnN1cmFuY2Ugc3lzdGVtIGhhcyBhIGh1Z2UgcHJvZml0IGluY2VudGl2ZSB0byBtYXhpbWl6ZSBkaXNjb3VudHMsIGV2ZW4gaWYgaXQgbWVhbnMgaGF2aW5nIHRoZSBob3NwaXRhbHMgZmFsc2VseSBtYXhpbWl6ZSB0aGVpciBiaWxsaW5nIHJhdGVzIHNvIHRoZSBicm9rZXJzIGNhbiBzYXkgdGhleSBnb3QgdGhlIGRpc2NvdW50cyBkb3duIGFub3RoZXIgNSUuIFRoaXMgZnVja3Mgb3ZlciB1bmluc3VyZWQgcGVvcGxlIHdobyBhcmUgbm93IG9uIHRoZSBob3NwaXRhbCBnb29kIGdyYWNlcyB0byBsb3dlciB0aGUgYmlsbCB2b2x1bnRhcmlseS4KSSBvbmNlIGhhZCBhIGpvYiBpbnRlcnZpZXcgZm9yIGEgaGlnaCBwYXlpbmcgam9iIEkgcmVhbGx5IHdhbnRlZC4gClRoZXkgaGF2ZSB0YWtlbiBzZXZlcmFsICQxMDBrIGxvc2VzIGZyb20gY2x1YiBvd25lcnMgdGhhdCBjYW4gcGF5IG91dC4gTm93IHRoZXkgYXJlIGhhdmluZyB0byBtaXRpZ2F0ZSB0aGVpciBsb3NlcyBieSBsb3dlcmluZyBsaW1pdHMgYW5kIHByb3ZpZGluZyBsZXNzIGFjdGlvbi4gCldoZW4gcGxheWluZyBwb2tlciBldmVuIHRob3VnaCB5b3Ugb25saW5lIHlvdSBub3QganVzdCBnb2luZyBhZ2FpbnN0IGEgbWFjaGluZSBhbmQgdGhlIGNvc21pYyBwb3dlcnMgYWxvbmUuIE5vLCB5b3UgZ29pbmcgYWdhaW5zdCBsaXZlIHBsYXllcnMgeW91cnNlbGYsIG9ubHkgeW91IGNhbiBzZWUgdGhlbS4gCldlJ3JlIGFsc28gcHV0dGluZyBNcy4gClRoZXNlIGluZnJlcXVlbmNpZXMgaW4gbGlnaHQgY29taW5nIGZyb20gdGhlIHN0YXIgY2FuIGJlIHVzZWQgdG8gZGlzY292ZXIgdGhlbSBhbmQgZ2FpbiBzb21lIGluc2lnaHRzIG9uIHRoZWlyIHNpemUgYW5kIG90aGVyIGNoYXJhY3RlcmlzdGljcy4gCllvdSBkbyB3YW50IHRoZSBjdXN0b21lciB0byBiZSBhYmxlIHRvIHNlZSB3aGF0IGl0IGlzIHRoYXQgeW91IGhhdmUgdG8gb2ZmZXIsIGJ1dCB5b3Ugd2FudCB0byB2ZWVyIGF3YXkgZnJvbSBwbGFjaW5nIGxhcmdlIGdyYXBoaWNzIG9uIHlvdXIgd2Vic2l0ZS4gCkp1ZGdlIEVsbGlzIGlzIGEgUmVhZ2FuIGFwcG9pbnRlZSwga25vd24gYXMgdG91Z2ggYW5kIG5vIG5vbnNlbnNlLiAKSGlzIGVmZm9ydHMgaGF2ZSBtYWRlIGhpbSBhIGZpbmFsaXN0IGZvciBPbnRhcmlvIEJ1c2luZXNzIEFjaGlldmVtZW50IEF3YXJkcyBZb3VuZyBFbnRyZXByZW5ldXIgb2YgdGhlIFllYXIgdGhpcyBOb3ZlbWJlciBhbmQgaGUgaXMgcHJlcGFyaW5nIHRvIHJlcHJlc2VudCBDYW5hZGEgaW4gdGhlIGdsb2JhbCBFTkFDVFVTIEJ1c2luZXNzIENoYW1waW9uc2hpcCwgYXMgd2lubmVyIG9mIGl0cyBuYXRpb25hbCBjb21wZXRpdGlvbiBlYXJsaWVyIHRoaXMgeWVhci4uIApQYXJ0aWN1bGFyLCBlbGVjdHJpY2FsIHN0aW11bGF0aW9uIG9mIHRoZSB2YWd1cyBuZXJ2ZSBoYXMgcmVjZW50bHkgYmVlbiBhcHByb3ZlZCBieSB0aGUgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbiBmb3IgdHJlYXRtZW50IHJlc2lzdGFudCBkZXByZXNzaW9uOyB0aGlzIHJlc2VhcmNoIG1heSBoZWxwIHJlc2VhcmNoZXJzIGJldHRlciB1bmRlcnN0YW5kIGFuZCBvcHRpbWl6ZSB0aGlzIG5ldyBhcHByb2FjaC4uIApUaGlzIGNhbiBhZmZlY3QgdGhlIGFtb3VudCBvZiByZWdpc3RlcmVkIHBsYXllcnMuIApXaGljaCBJIHNob3VsZHZlIGNvbnNpZGVyZWQuQ291bGQgc29tZW9uZSBob2xkIG15IGhhbmQgdGhyb3VnaCB0aGlzIGFuZCBleHBsYWluIHRvIG1lIHRoZSByYW5nZXMgYW5kIG9kZHMgb2YgY2FsbGluZy4gCkhlIGFsc28gc2FpZCB0aGUgbW9uZXkgc3BlbnQgaW4gcG9raWUgbWFjaGluZXMgaGFkIGEgcG9vciBtdWx0aXBsaWVyIHRocm91Z2ggdGhlIGxvY2FsIGVjb25vbXkgY29tcGFyZWQgd2l0aCBvdGhlciB0eXBlcyBvZiBzcGVuZGluZy4KQm9iIHdhcyBwcmVkZWNlYXNlZCBieSBoaXMgd2lmZSwgSm95Y2UgKERlY2VtYmVyIDIwMTYpLCBoaXMgYnJvdGhlciBpbiBsYXcgUmF5bW9uZCBKZW5raW5zb24gYW5kIFJheSdzIHdpZmUgTWFiZWwgKG5lZSBNY1ZpdHRpZSkuIEhlIGlzIHN1cnZpdmVkIGJ5IGhpcyBuaWVjZSBMaW5kYSAoQm9iKSBXZXJjaG9sb3ogYW5kIGhlciBmYW1pbHkuIEJvYidzIHRydWx5IHBvc2l0aXZlIHRoaW5raW5nIGFuZCBoaXMgYWJpbGl0eSB0byBmaW5kIGh1bW91ciBpbiBhbnkgc2l0dWF0aW9uIHdpbGwgYmUgdmVyeSBmb25kbHkgcmVtZW1iZXJlZCBieSBhbGwgd2hvIGhhZCB0aGUgcHJpdmlsZWdlIGFuZCBwbGVhc3VyZSBvZiBzcGVuZGluZyB0aW1lIHdpdGggaGltLiAKUElYOiBNaWFtaSBPcmFuZ2UgQm93bCBQbGF5ZWQgSG9zdCBUbyA1IFN1cGVyIEJvd2xzU1RFRUxFUlMgV0lOIFNVUEVSIEJPV0xQaXR0c2J1cmdoIFN0ZWVsZXJzIHF1YXJ0ZXJiYWNrIFRlcnJ5IEJyYWRzaGF3IGhvbGRzIHVwIG9uZSBmaW5nZXIsIGluZGljYXRpbmcgaGlzIHRlYW0gaXMgTm8uIDEsIGluIHRoZSBjbG9zaW5nIG1pbnV0ZXMgb2YgdGhlIFN1cGVyIEJvd2wsIGluIE1pYW1pLCBGbGEsIG9uIEphbnVhcnkgMjEsIDE5NzkuIApCdXQsbGV0J3MgZ2V0IGEgY2xvc2VyIGxvb2sgYW5kIHN0dWR5IGJvdGggZm9ybXMgb2YgcG9rZXIgc28gdGhhdCB5b3VoYXZlIGEgY2xlYXIgdmlldy4gUGxheSBwb2tlciBvbmxpbmUgYW5kIGVuam95IG1vcmUgYWR2YW50YWdlcyBUaGVyZSBhcmUgbWFueSBwbGF5ZXJzIG91dCB0aGVyZSBzZWFyY2hpbmcgZm9yIHRoZSBleGFjdCBmb3JtdWxhIG9mZ2FtZSBzdWNjZXNzLiBBbmQgaGVyZSB3ZSdyZSB0YWxraW5nIGFib3V0IGZhY3RvcnMgc3VjaCBhcyB0aGVzcGVlZCBvZiB0aGUgZ2FtZSwgdGhlIGVudmlyb25tZW50LCB0aGUgZGlzdHJhY3Rpb25zIG9yIHRoZWNvbnZlbmllbmNlLiAKSXQgZGVwZW5kcyBvbiB0aGUgZGV0YWlsIGluIHRoZSBwaWN0dXJlICEgVGhlIG1vcmUgZGV0YWlsIGEgcGhvdG9ncmFwaCBoYXMsIHRoZSBtb3JlIG1lbW9yeSBpcyB1c2VkIHRvIHN0b3JlIGl0LiBUaGluayBsaWtlIHRoaXMgICBBIHBpY3R1cmUgb2YgYSBibHVlIGNhciBhZ2FpbnN0IHRoZSBicm93biBicmlja3dvcmsgb2YgYSBob3VzZSB3b3VsZG4ndCB1c2UgbXVjaCBtZW1vcnksIGFzIHRoZSBjYXIgaG91c2UgYXJlIGxhcmdlICdibG9ja3MnIG9mIHVuaWZvcm0gY29sb3Vycy4gQSBnb29kIGF2ZXJhZ2UgYXQgMTQgbWVnYSBwaXhlbCByZXNvbHV0aW9uIHdvdWxkIGJlIGFyb3VuZCAxNjAgaW1hZ2VzLiAoRnVsbCBBbnN3ZXIpCkhvbmVzdGx5LCB3aWxsIGhhdmUgdG8gZGlzYWdyZWUuIApUaGUgc2FmZXN0IHdheSB0byB0YWtlIHlvdXIgcGV0IGFsb25nIGluIHRoZSBjYXIsIE1vbnRlaXJvIHNheXMsIGlzIGluIGEgY2FycmllciwgdHJhdmVsIGhhcm5lc3Mgb3Iga2VubmVsIHRoYXQncyBjcmFzaCB0ZXN0ZWQgYW5kIGFwcHJvdmVkIGJ5IHRoZSBDZW50ZXIgZm9yIFBldCBTYWZldHkuIE1vbnRlaXJvIGFuZCBXb2xrbyBib3RoIHNheSBpdCdzIHVsdGltYXRlbHkgdXAgdG8gZHJpdmVycyB0byByZXNlYXJjaCBhbmQgdXNlIHRoZSBwcm9wZXIgcmVzdHJhaW50cyB3aGVuIHRoZXkgaGF2ZSBhIGRvZyBpbiB0aGUgY2FyLiBXaGV0aGVyIG9yIG5vdCB0aGVzZSByZXN0cmFpbnRzICAgb3IgTWljaGlnYW4ncyBkcml2aW5nIHdpdGggYSBkb2cgaW4gdGhlIGxhcCAgIHdpbGwgYmVjb21lIGxhdyBpcyBhbnlvbmUncyBndWVzcy4gCkV2ZXJ5IHNoaXAgaGFzIGFuICJvdXRicmVhayBwcmV2ZW50aW9uIHBsYW4sIiB3aXRoIGEgaGFpciB0cmlnZ2VyOiBOb3RoaW5nIGlzIHNjYXJpZXIgdG8gY3J1aXNlcnMgdGhhbiBhIE5vcm92aXJ1cyBvdXRicmVhaywgd2hpY2ggc2hpcCBkb2N0b3IgRGUgTGEgUm9zYSBzYXlzIGlzIGFsbW9zdCBhbHdheXMgY2F1c2VkIGJ5IGEgcGFzc2VuZ2VyIHdobyBoYXMgYnJvdWdodCB0aGUgaWxsbmVzcyBhYm9hcmQsIHJhdGhlciB0aGFuIHBvb3Igc2FuaXRhcnkgY29uZGl0aW9ucyBvbiB0aGUgc2hpcC4gUmVxdWlyZXMgdGhhdCBldmVyeSBzaGlwIG1haW50YWluIGEgZGV0YWlsZWQgT1BQLCBvciBPdXRicmVhayBQcmV2ZW50aW9uIFBsYW4uIApUaGUgZmluYWwgZXZlbnQgb3JnYW5pc2VkIG15IFNVUEEgd2FzIHRoZSBlbmQgb2YgeWVhciBwaHlzaW90aGVyYXB5IGJhbGwgd2hlcmVieSBhIGNoYXJpdHkgYXVjdGlvbiB3b3VsZCBiZSBoZWxkIGluIG1lbW9yeSBvZiBBbGV4LiAKVGhhdCBmaXJzdCBuaWdodCBob3cgbXVjaCBtb25leSBkaWQgeW91IG1ha2UgaWYgdGlwcy4gClNoZSBsb3N0IGhlciBiZXN0IGZyaWVuZCBpbiB0aGUgd2FyLiAKIDEsNjg3IHBvaW50cyAgc3VibWl0dGVkIDIxIGhvdXJzIGFnb0ZveCBOZXdzIGlzIGZ1Y2tpbmcgaW5jcmVkaWJsZSBmb3IgdGhhdCByZWFzb24gYWxvbmUuIEFzIG11Y2ggYXMgSSBoYXRlIHRoZW0gd2l0aCBldmVyeSBmaWJlciBvZiBteSBiZWluZywgdGhleSBoYXZlIDI1IDQwJSBvZiB0aGUgcG9wdWxhdGlvbiBsaXZpbmcgaW4gYW4gYWx0ZXJuYXRlIHJlYWxpdHkgY29tcGxldGVseSBhdCB0aGVpciB3aGltLiBBbmQgdGhleSBjYW4gY29udHJvbCB0aGVzZSBwZW9wbGUgd2l0aCBhIGNvbWJpbmF0aW9uIG9mIHJhY2lzbSwgc2V4aXNtLCB4ZW5vcGhvYmlhLCBob21vcGhvYmlhLCBJc2xhbW9waG9iaWEsIGFnZWlzbSwgY2xhc3Npc20sIGFudGkgaW50ZWxsZWN0dWFsaXNtLCBhbmQgZ2VuZXJhbCBmZWFyIG9mIGNoYW5nZSB0aGF0IGNhbiBwaW5wb2ludCB0aGVpciB3b3JzdCBtb25zdGVycyBhbmQgbWFrZSB0aGVtIGdvIGFzIGZhciBhcyBraWxsaW5nIG9uIGNvbW1hbmQuIApIZSBzYWlkIHRoYXQgaWYgSSBkb24ndCBwbGF5IGZvciB0aGVtIG5vdyB0aGV5IHdpbGwgbmV2ZXIgaGF2ZSBhbm90aGVyIGNoYW5jZSB0byBoZWFyIHRoZSB2aW9saW4uIApUaGUgcG9pbnQgaXMgdGhhdCB0aGUgYnVycWEgYW5kIGJvb2Igam9icyBhbmQgQmxhaG5pa3MgYXJlIGFsbCBzeW1ib2xpYyBzaXRlcyBvZiBnZW5kZXIgb3BwcmVzc2lvbiBhbmQgdGhlIHBoeXNpY2FsIG1hbmlmZXN0YXRpb24gb2YgcGF0cmlhcmNoeS4gCkhvd2V2ZXIsIG9uZSBvZiB0aGUgYmlnZ2VzdCBkZXNpZ24gZmFjZXRzIG9mIHRoZSA3ODcgaXMgdGhlIHVwd2FyZCBjdXJ2ZWQgd2luZ3NwYW4sIHdoaWNoIHJlZHVjZXMgZHJhZyBhbmQgZ2l2ZXMgYSBzbW9vdGhlciByaWRlLiAKQ2FuYWRhIGhhcyBhbiBpbXByZXNzaXZlIHJvc3RlciBvZiBwZW9wbGUgd2l0aCBpbmZvcm1hdGlvbiBhbmQgY29tbXVuaWNhdGlvbnMgdGVjaG5vbG9neSBza2lsbHMgYW5kIGV4cGVydGlzZS4gQXBwcm94aW1hdGVseSA5MDAsMDAwIGluZGl2aWR1YWxzIHdvcmsgaW4gdGhlIElDVCBzZWN0b3IgYXQgbW9yZSB0aGFuIDM5LDAwMCBjb21wYW5pZXMuCk1yIEp1c3RpY2UgRWFnYXIgaW1wb3NlZCBhIDE1IHllYXIgc2VudGVuY2Ugb24gdGhlIGZhdGhlciBhbmQgc3VzcGVuZGVkIHRoZSBmaW5hbCB5ZWFyLiBUaGUgbWFuIGhhcyBhbHJlYWR5IGJlZW4gcmVnaXN0ZXJlZCBhcyBhIHNleCBvZmZlbmRlciBhbmQgd2lsbCBhbHNvIGJlIHN1YmplY3QgdG8gYSBmb3VyIHllYXIgc3VwZXJ2aXNpb24gb3JkZXIgb24gaGlzIHJlbGVhc2UuCkNocmlzdG9waGVyIERlbm5pcyBMdWNpZXIsIDI0IGF0IHRoZSB0aW1lIGFuZCBkZXNjcmliZWQgVGh1cnNkYXkgYnkgYXNzaXN0YW50IENyb3duIGF0dG9ybmV5IEdlb3JnZSBTcGFydGlub3MgYXMgdGhlIHJpbmdsZWFkZXIgYW5kIGRyaXZpbmcgZm9yY2UgYmVoaW5kIHRoZSBjb25maW5lbWVudCBhbmQgdG9ydHVyZSwgd2FzIHNlbnRlbmNlZCB0byBhIGZvdXIgeWVhciBwZW5pdGVudGlhcnkgdGVybS4KQWJvdXQgZWlnaHQgeWVhcnMgbGF0ZXIsIHdlIHRvb2sgaGVyIHRvIHRoZSBiZWFjaCBuZWFyIHdoZXJlIGhlciBmaXJzdCBvd25lcnMgbXVzdCBoYXZlIGxpdmVkLCBhbmQgc2hlIHRvb2sgb2ZmIHVudGlsIHNoZSB3YXMgc3RhbmRpbmcgaW4gZnJvbnQgb2YgYSBob3VzZS4gCkkgYW5kIE1yLiBCYW5rcyB3aXRoIHRoZSBvdGhlciBwYXJ0eSB3YXMgYWJvdXQgaGFsZiBhIE1pbGUgb2ZmLCByZXR1cm5pbmcgb3V0IG9mIHRoZSB3b29kcywgdXBvbiBoZWFyaW5nIHRoZSBmaXJpbmcgb2YgTXVza2V0cywgYW5kIHRoZSBOYXRpdmVzIGxlYXZpbmcgdXMgYXQgdGhlIHNhbWUgdGltZSwgd2UgU3VzcGVjdGVkIHRoYXQgc29tZXRoaW5nIHdhcyB0aGUgbWF0dGVyIGFuZCBoYXN0ZW5lZCBvdXIgbWFyY2gsIGJ1dCBiZWZvcmUgd2UgYXJyaXZlZCB0aGUgd2hvbGUgd2FzIG92ZXIsIGFuZCBldmVyeSBvbmUgb2YgdGhlIE5hdGl2ZXMgZmxlZCBleGNlcHQgb2xkIE93aGFhLCB3aG8gc3R1Y2sgYnkgdXMgdGhlIHdob2xlIHRpbWUsIGFuZCBJIGJlbGlldmUgZnJvbSB0aGUgZmlyc3QgaGUgZWl0aGVyIGtuZXcgb3IgaGFkIHNvbWUgc3VzcGljaW9uIHRoYXQgdGhlIFBlb3BsZSB3b3VsZCBhdHRlbXB0IHNvbWV0aGluZyBhdCB0aGUgVGVudCwgYXMgaGUgd2FzIHZlcnkgbXVjaCBhZ2FpbnN0IG91ciBnb2luZyBpbnRvIHRoZSBXb29kcyBvdXQgb2Ygc2lnaHQgb2YgdGhlIFRlbnQuIApBQVJPTiBCUk9XTiBpcyBhbiBleGVjdXRpdmUgZGlyZWN0b3IgYXQgdGhlIGludmVzdG1lbnQgYmFuayBNb3JnYW4gU3RhbmxleS4gSGUgd29uIHRoZSBXaWxtb3R0IEF3YXJkIGluIDIwMDUgYXMgRmluYW5jaWFsIEVkdWNhdG9yIG9mIHRoZSBZZWFyIGZvciBoaXMgc3BlYWtpbmcsIHdyaXRpbmcsIGFuZCBhY3RpdmlzbS4gSGUgaG9sZHMgZGVncmVlcyBpbiBhcHBsaWVkIG1hdGhlbWF0aWNzIGZyb20gSGFydmFyZCAod2hlcmUgaGUgcGxheWVkIHBva2VyIHdpdGggYSBmdXR1cmUgd29ybGQncyByaWNoZXN0IG1hbiBhbmQgYSBmdXR1cmUgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzKSBhbmQgZmluYW5jZSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIENoaWNhZ28gKHdoZXJlIGhlIHBsYXllZCBwb2tlciB3aXRoIHRocmVlIE5vYmVsIFByaXplIHdpbm5lcnMpLiBBIHdlbGwga25vd24gV2FsbCBTdHJlZXQgcXVhbnQsIGhlIGlzIGEgY29sdW1uaXN0IGZvciBXaWxtb3R0LCB0aGUgbGVhZGluZyBqb3VybmFsIHNlcnZpbmcgdGhlIHF1YW50aXRhdGl2ZSBmaW5hbmNlIGNvbW11bml0eS4gSGUgaGFzIGJlZW4gaW52b2x2ZWQgaW4gdHJhZGluZywgcmlzayBtYW5hZ2VtZW50LCBhbmQgcG9ydGZvbGlvIG1hbmFnZW1lbnQgZm9yIFBydWRlbnRpYWwgSW5zdXJhbmNlLCBKUE1vcmdhbiwgUmFib2JhbmssIGFuZCBDaXRpZ3JvdXAuIEhlIGlzIGFsc28gYSBzZXJpb3VzIGxpZmVsb25nIHBva2VyIHBsYXllciB3aG8gaGFzIHBsYXllZCB3aXRoIFdhbGwgU3RyZWV0IHR5Y29vbnMgYW5kIHdvcmxkIGNoYW1waW9uIHBva2VyIHByb3MuCkkndmUgYnVpbHQgYSBmZXcgZ3JlYXQgY29tcGFuaWVzLCBhbmQgd2l0aCB0aGF0IGNvbWVzIGEgcmVzcG9uc2liaWxpdHkgdG8gbXkgaW52ZXN0b3JzIGFuZCBhIHJlc3BvbnNpYmlsaXR5IHRvIG15IGVtcGxveWVlcy4gCkkgZG9uIGxvdmUgdGhlIGd1eS4gSGUgbm8gc2F2aW9yLCBsaWtlIHNvbWUgcGVvcGxlICh3aG8gc2hvdWxkIGJlIGxhYmVsbGVkIHdpdGggYW4gZXF1YWwgYW5kIG9wcG9zaXRlIHN5bmRyb21lKSB0aGluay4gSnVzdCBhbm90aGVyIGdyZWVkeSBiYXN0YXJkIElNTy4gSGVyIHJlc3BvbnNlIHdhcyBhbiBhbG1vc3Qgc3R1dHRlcmluZyBzaHJpZWssICJEb24geW91IHRhbGsgdG8gTUUhIEkgY2FuIHRhbGsgdG8gYSBNQU4gdG9kYXkhIEkgY2FuIGV2ZW4gbG9vayBhdCBhIE1BTiwgZXNwZWNpYWxseSBub3QgYSBXSElURSBNQU4hIFlvdSBBTEwgc2NhcmUgbWUhIi4K|<---