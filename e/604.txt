--->|QXJ0aWNsZXMgYXJlIHB1Ymxpc2hlZCB1bmRlciBhbiBleGNsdXNpdmUgbGljZW5jZSBvciBub24gZXhjbHVzaXZlIGxpY2VuY2UgZm9yIFVLIENyb3duIGVtcGxveWVlcyBvciB3aGVyZSBCTUogaGFzIGFncmVlZCBDQyBCWSBhcHBsaWVzLiBGb3IgVVMgRmVkZXJhbCBHb3Zlcm5tZW50IG9mZmljZXJzIG9yIGVtcGxveWVlcyBhY3RpbmcgYXMgcGFydCBvZiB0aGVpciBvZmZpY2lhbCBkdXRpZXMsIHRoZSB0ZXJtcyBhcmUgYXMgc3RhdGVkIGluIGFjY29yZGFuY2Ugd2l0aCBvdXIgbGljZW5jZSB0ZXJtcy4gUGxlYXNlIG5vdGUgdGhhdCB0aGVyZSBpcyBubyBndWFyYW50ZWUgb2YgYWNjZXB0YW5jZS4KSG93ZXZlciwgTWFsbGlrIGZhaWxzIHRvIHJlbGF0ZSB0byBpdCBhcyBhIHN0b3J5IG9yIHNjcmlwdCBhbmQgZmVlbHMgdGhhdCBpdCBpcyBvdmVyIGNvb2tlZCBpbiBzb21lIHdheXMuIApCdXQgd2hlbiBoZSBmaW5hbGx5IGdldHMgaGlzIGNoYW5jZSB0byBraWxsIGEgSmVkaSwgQm9iYSBjYW4gYXNzZXNzIHRoZSBtb21lbnQgZGlzcGFzc2lvbmF0ZWx5LiBIZSBvYnNlc3NlZCB3aXRoIGtpbGxpbmcgdGhlIEplZGkuIAoiVGhlcmUgd2FzIGEgbnVhbmNlIHRvIHRoaXMgcm9sZSwgYSBzdHJlbmd0aCwgYSB2ZXJ5IGludGVyZXN0aW5nIHNlbnNlIG9mIGh1bW9yLiAKRGlnZXIgYmlyIGtvbnUgaXNlIHphbWFuLiBFa29ub21payBzb3J1bmxhciBzb24gMSB5aWxkaXIgaXlpY2Ugc2lkZGV0bGVuZGkuIE9ydGEgdmFkZWRlIGRlIGR1emVsbWVzaSBwZWsgbXVta3VuIGRlZ2lsLiBEdXJndW5sdWsgdmUgcmVzZXN5b24ga2VuZGluaSBiZWxsaSBldHRpa2NlLCBwb2xpdGlrIGR1emxlbWRlIGtheW1hIGRhIGJhc2xheWFjYWt0aXIuIEluc2FubGFyIDIwMDEgYnVuYSBveSB2ZXJkaWxlciwgdmFrdGkgZ2VsaW5jZSB0ZWtyYXIgZ3V2ZW5lYmlsZWNla2xlcmkgYmlyIGFsdGVybmF0aWZlIHZlcmlybGVyLgpUaGUgYWxsZWdhdGlvbiB3YXMgc2VyaW91cy4gCkFuZCB0aGlzIGlkZWEgdGhhdCByZWdhaW5pbmcgbWFuYSBzaG91bGQgYmUgZnVuIG9yIGFjdGl2ZSBpcyBhYnN1cmQhIFRoaXMgaXNuIGEgdXRvcGlhLCB5b3UgY2FuIGp1c3QgYWx3YXlzIGJlaW5nIGhhdmluZyBmdW4uIApIdXRjaGluc29uIHRvbGQgdGhlIEFya2Fuc2FzIFRpbWVzIHRoYXQgaGUgZG9lc24ndCBoYXZlIGEgcG9zaXRpb24gb24gdGhlIGlzc3VlLCBhbHRob3VnaCBoZSBzYWlkIGhpcyBpbnRlbnRpb24gd2FzIHRvICJkZWxpbmVhdGUgdGhlIGRpc3RpbmN0aW9uIGJldHdlZW4gd2hhdCBpcyBjb21tb25seSB0aG91Z2h0IG9mIGFzIGdhbWJsaW5nIiBhbmQgdGhlIFVuaXRlZCBQb2tlciBMZWFndWUncyBhY3Rpdml0aWVzLiAKRGlzcGF0Y2ggZnJvbSBWYW5jb3V2ZXIncyByZXRhaWwsIHJlc3RhdXJhbnQgYW5kIGludGVyaW9yIGRlc2lnbiBjb21tdW5pdHlBbmNvcmEgQW1ibGVzaWRlIGRlc2lnbmVkIHRvIGJlIFdlc3QgVmFuJ3Mgc3R5bGlzaCBuZXcgaG90IHNwb3RXaGVuIHRhc2tlZCB3aXRoIGRlc2lnbmluZyBhIFdlc3QgVmFuY291dmVyIGxvY2F0aW9uIGZvciBBbmNvcmEgV2F0ZXJmcm9udCBEaW5pbmcgYW5kIFBhdGlvLCBTbWFydERlc2lnbiBrbmV3IGl0IHdvdWxkIGluY29ycG9yYXRlIHNvbWUgb2YgdGhlIGZyb20gdGhlIG9yaWdpbmFsIEZhbHNlIENyZWVrIHJlc3RhdXJhbnQuIApJbmVlZCB0byBmb2N1cyBvbiB0aGlzIHdyaXRpbmcgYW5kIG1vc3Qgb2YgbXkgdXBkYXRlcyBhcmUgYWJvdXQgYW5pbWFscyBpbiBteSBob3VzZSBsaWtlIG15IG5ldyBnb2F0LCBNb2xseSwgb3IgbXkgZnVua3kgY3JvY2hldCBjcmVhdHVyZXMuLiAKU3RvcCBoaWRpbmcgYW5kIHN0YXJ0IGxpdmluZywgd2l0aCBUZXF1aWxhLiAKQWx0aG91Z2ggdGhleSBzb21ldGltZXMgdGFsayB0b28gbXVjaCwgdGhleSBhcmUgY2hlZXJmdWwsIHBlcmNlcHRpdmUsIHRhbGVudGVkLCBlYXJ0aHkgYnV0IHN0dWJib3JuLiBUaGV5IGFyZSBhYmxlIHRvIGNvbWUgdXAgd2l0aCBuZXcgaWRlYXMgYW5kIGFjdGl2ZSBhdCB3b3JrIGFuZCByZWZ1c2UgdG8gYmUgcmVjb25jaWxlZCB0byBmYWlsdXJlLCBhbHRob3VnaCB0aGVpciBlbmRlYXZvciBjYW5ub3QgbGFzdCBpbmRlZmluaXRlbHkuIApGb3J0dW5hdGVseSwgaGF2aW5nIHdvcmtlZCBpbiBzYWZldHkgY3JpdGljYWwgYW5kIGNvbW1lcmNpYWwgKHByb2R1Y3QgZm9jdXNlZCkgZW5naW5lZXJpbmcgdGVhbXMsIHRoaXMgYXR0aXR1ZGUgaXMgZmFyIG1vcmUgcHJldmFsZW50IGluIHRoZSBsYXR0ZXIsIHdoZXJlIHByb2plY3QgbWFuYWdlbWVudCBpcyBnZW5lcmFsbHkgaW5jb21wZXRlbnQgdW50aWwgcHJvdmVuIG90aGVyd2lzZS4gQnV0LCB0aGUgZm9ybWVyIGNlcnRhaW5seSBkb2VzbiBlc2NhcGUgdGhlIG1pbmRzZXQgZW50aXJlbHkuIFNlZTogZmluYWwgcmVwb3J0cyBvbiBib3RoIHNodXR0bGUgbG9zc2VzLCBwbHVzIG9uIHByb2JhYmx5IGhhbGYgb2YgYWxsIGxhcmdlIGZhdGFsaXR5IGNpdmlsIGF2aWF0aW9uIGRpc2FzdGVycyBpbiB0aGUgbGFzdCAyNSB5ZWFycyBiYXJlIG1pbmltdW0sIGV0YykuIApZb3UgbWlnaHQgZmluZCBhIGNvdXBsZSBvZiBlbXBsb3llZXMgd2hvIGp1c3QgZG9uIHdhbnQgdG8gZGVhbCB3aXRoIHlvdSBhbmQgcGxheSB0aGUgdHJhbnNmZXIgZ2FtZS4gCkRlIHJjZW50ZXMgZGNvdXZlcnRlcyBlbiBwaHlzaXF1ZSBxdWFudGlxdWUgaW5kaXF1ZW50IHF1ZSBjZWx1aSBjaSBlc3QgcmVsLiAKT2ggY2l0ZXMgYW4gYXJ0aWNsZSBpbiBUaGUgR3VhcmRpYW4gYnkgQW5ha2FuYSBTY2hvZmllbGQsIHdyaXR0ZW4gYWZ0ZXIgU2Nob2ZpZWxkIHZpcmFsIEtvbk1hcmkgdHdlZXQsIGFzIG9uZSBleGFtcGxlIG9mICJhIHdpbGxmdWwgbWlzdW5kZXJzdGFuZGluZyBvZiBLb25kbyBzdGF0ZW1lbnRzIGhlcmUgdG8gc3VpdCBoZXIgb3duIG5hcnJhdGl2ZS4iIE9oIHNheXMsICJUaGVyZSBpcyBhbiBvdmVyZW1waGFzaXMgb24gdGhlIHdvcmRzIGpveSB3aXRob3V0IHVuZGVyc3RhbmRpbmcgd2hhdCBbS29uZG9dIHJlYWxseSBtZWFucyBieSBpdC4gVG9raW1la2kgZG9lc24gYWN0dWFsbHkgbWVhbiBqb3kuIEl0IG1lYW5zIHRocm9iLCBleGNpdGVtZW50LCBwYWxwaXRhdGlvbi4gClBva2VyIGFkZGljdHMgaGF2ZSBkZXZlbG9wZWQgYSBtZXRob2Qga2lsbGluZyB3YWl0aW5nIHRpbWUuIApKIHByaXMgbWEgc2VtYWluZSBkZSBjb25nIGxhIHNlbWFpbmUgcHJvY2hhaW5lIGNhciBqIGRlcyB0cnVjcyAgZmFpcmUgKyBjb25nICB0ZXJtaW5lciBzaW5vbiBqZSBsZXMgcGVyZHMgZG9uYyBwYXMgZXUgbGUgdGVtcHMgZGUgcHJ2b2lyIGRlIHBhcnRpciBlbiB2YWRyb3VpbGxlIERPTkMgamUgdmFpcyByZXN0ZXIgYXUgY2hhdWQgIGdlZWtlciBldCBmYWlyZSBkZSBsYSBwYXBlcmFzc2UuLiAKSWYgdGhhdCBoYXBwZW5lZCB0byBtZSBJJ2QgZWl0aGVyIGp1bXAgb2ZmIHRoZSB0YWJsZSBhbmQgc3dhdCB0aGVpciBoYW5kIGF3YXkgYW5kIHllbGwgICBvciBmcmVlemUgZnJvbSBzaG9jay4gSSB3b3VsZG4ndCBiZSBhbGwsICJPaCB0aGF0J3MgaW50ZXJlc3RpbmcuIE1heWJlIHRoaXMgd2FzIGludGVuZGVkOyB0aGV5IGRpZCB3aW5rIGF0IG1lIGVhcmxpZXIsIiBhbmQgZ28gYWxvbmcgd2l0aCBpdCwgZXNwZWNpYWxseSBpZiBJIHdhcyBtYXJyaWVkLgpQaWNrdXAgYW5kIGlkZW50aWZ5IGJvb3RzLCBiZWx0cyBhbmQgamV3ZWxyeSBvbmNlIGF0IG1hcHMuLiAKVGhpcyBpcyBiZWNhdXNlIHRoZSBnYW1lcyBhcmUgZXNzZW50aWFsbHkgbmV2ZXIgZW5kaW5nLCB3aXRoIHBsYXllcnMgY29uc2lzdGVudGx5IGNvbWluZyBhbmQgZ29pbmcgYW5kIGFsbG93ZWQgdG8gbGVhdmUgYXQgYW55IHRpbWUuIApHb29kIHdvcmsgaXMgbmV2ZXIgY2hlYXAsIHNvIGRvbnQgbGV0IHlvdXJzZWxmIGJlIGNoZWFwLiBJdCBhbiBpbmR1c3RyeSB0aGF0IENCcyBsb3ZlIHRvIHdvcm0gdGhlaXIgd2F5IGludG8geW91ciBjaGFpciBpbiBhbmQgZXhwZWN0IHRvIGhhdmUgSG9sbHl3b29kIGhhaXIgaW4gb25lIHNlc3Npb24gZm9yIGFzIGNoZWFwIGFzIHlvdSBjYW4gZ2V0IGZvciB0aGUgbGVhc3QgYW1vdW50IG9mIHRpbWUuIERvbiBwdXQgdXAgd2l0aCBpdC4uIApNb3JhdmlhbiBjb29raWVzClRoZSBIYXd0aG9ybiBIYXdrcyByZWFwZWQgdGhlIG1vc3QgbW9uZXkgZm9yIHRoZSB5ZWFyLCAkMjMuMjkgbWlsbGlvbiwgdXAgMy4xIHBlciBjZW50IG9uIGxhc3QgeWVhciAkMjIuNiBtaWxsaW9uLiAKQmlnIGludmVzdG1lbnRzIGF0IFBhbGFzYWQgbm9ydGggdG8ga2VlcCBwYWNlIGluIGZ1bgpNYXRoIGNhbGN1bGF0aW9ucyB3aWxsIGJlIGFsc28gYW5hbG9nb3VzIHRvIHRoZSAic3RpY2t5IiBib251cyBhbmQgdGhlIHN0cmF0ZWd5IG9mIHRoZSBnYW1lIGlzIHNpbWlsYXIgICB3ZSByaXNrLCB0cnkgdG8gd2luIGFzIG11Y2ggYXMgcG9zc2libGUuIApUaG9zZSBwZXNreSBmZWxsYXMgY2xpbmcgb250byBhbnl0aGluZywgZXZlbiB5b3VyIGJhZyBhbmQgY2xvdGhlcyBzbyB0aGUgcGFyYW5vaWEgaXMgcmVhbC4gCkhlcmUsIGNvbnNpZGVyIGhvdyB0aGUgImZpdmUiIHN1YmxpbmUgYnkgSGFhZ2VuIERheiBpcyBicm91Z2h0IHRvIGxpZmUuIFRoZSBwYWNrYWdpbmcgZG9lcyBhIGZhbnRhc3RpYyBqb2Igb2YgdW5kZXJzY29yaW5nIGEga2V5IGJyYW5kIGVxdWl0eSBwb2ludCBhcm91bmQgcHJlbWl1bSBuZXNzIGFuZCBwdXJlIGdvb2RuZXNzIGJ5IHNpbXBseSBsaXN0aW5nIGZpdmUgY29yZSBpbmdyZWRpZW50cyBwcm9taW5lbnRseSBvbiB0aGUgZnJvbnQgb2YgdGhlIHBhY2thZ2U6IG1pbGssIGNyZWFtLCBzdWdhciwgZWdncyBhbmQgd2hhdGV2ZXIgdGhlIG5hdHVyYWwgZmxhdm9yIGlzLgpUaGVzZSBoYXZlIGNvbG9yIGFjY3VyYWN5LCBjb2xvciBjb25zaXN0ZW5jeSB0aHJvdWdob3V0IHRoZSBtb25pdG9yLCBjb2xvciByYW5nZSAoMTAgYml0LCBSR0IsIGV0YyksIHdpZGUgYWNjdXJhdGUgdmlld2luZyBhbmdsZSwgbm8gaW1hZ2UgYnVybi4gCldpdGggYSBmbG9hdCBvY2Nhc2lvbmFsbHkgcGFzc2luZyBvdmVyaGVhZCBhbmQgZHJvcHBpbmcgYmVhZHMgd2hpbGUgZmVhdGhlcmVkIGRhbmNlcnMgZmlyZSB1cCB0aGUgZ2FtYmxlcnMgYmVsb3csIHRoZSBSaW8gdHJpZXMgdG8ga2VlcCBpdHMgMTIwLDAwMCBzcXVhcmUgZm9vdCBjYXNpbm8ganVtcGluZyB3aXRoIGV4Y2l0ZW1lbnQuIApXaGVuZXZlciBJIGhlYXIgYW4gRW5nbGlzaCBzcGVha2VyIHVzZSBpdCBteSBmaXJzdCB0aG91Z2h0IGlzICJXVEYgZGlkIHRoYXQgcmFjaXN0IHBpZWNlIG9mIHNoaXQganVzdCBzYXk/IiwgYmVmb3JlIEkgcmVtZW1iZXIgdGhlIGRpZmZlcmVudCBtZWFuaW5nLi4gCldlIGFyZSB2ZXJ5IHNpbWlsYXIgaW4gcmVnYXJkcyB0byBnYW1ibGluZy9iZXR0aW5nL3doYXRldmVyIHlvdSB3YW50IHRvIGNhbGwgaXQuIFRoZSBmaXJzdCBiZXQgSSBldmVyIG1hZGUgd2FzICQyMDAsIDIgeWVhcnMgYWdvLCB3aGljaCBJIGxvc3QgcmlnaHQgYXdheS4gU3RvcHBlZCBiZXR0aW5nIGZvciAyIHllYXJzLiBPbmx5IHN0YXJ0ZWQgdGhpcyBGZWJydWFyeSBhZ2Fpbi4gV2FzIHVwIGEgZmV3IHRob3VzYW5kIGFuZCB0aG91Z2h0IEkgd2FzIGhvdCBzaGl0LCBvbmx5IHRvIGxvc2UgaXQgYWxsIGV2ZW50dWFsbHksIHRoZW4gd2luIGl0IGJhY2ssIHRoZW4gbG9zZSBpdCBiYWNrIGFuZCBzb21lIG1vcmUuIFRoaXMgY3ljbGUgd2VudCBvbiBmb3IgYSBmZXcgbW9udGhzLCB1bnRpbCBJIHdhcyBkb3duIGxpa2UgJDE1ay4gSSB0aGVuIG1hZGUgYSBsYXN0ICJodXJyYWgiIGJldCwgc3RhcnRpbmcgd2l0aCAkMmsgYW5kIHJhbiB0aGF0IHVwIHRvICQ1MGsgb3ZlciAyIG1vbnRocy4gQXQgdGhpcyBwb2ludCwgSSB0aG91Z2h0IG15IGx1Y2sgYW5kIGxpZmUgd2FzIHR1cm5pbmcgYXJvdW5kIGFuZCB0aGF0IEkgY291bGQgYWN0dWFsbHkgbWFrZSBhIGxpdmluZyBmcm9tIHRoaXMuIEkgY291bGQgdGFzdGUgdGhlIGRyZWFtIG9mIHF1aXR0aW5nIG15IGpvYixtYW5pZmVzdCBpdHNlbGYgaW50byByZWFsaXR5LiBJIGNvbnRpbnVlZCB0byBiZXQsIGhvcGluZyB0byBoaXQgJDEwMGssIG9ubHkgdG8gbG9zZSwgYW5kIHRoZW4gbG9zZSBzb21lIG1vcmUsIGFuZCB0aGVuIHNvbWUgbW9yZSwgdW50aWwgZXZlcnl0aGluZyBjYW1lIGNyYXNoaW5nIGRvd24uIEkgbG9zdCBhbGwgJDUwayBpbiAyIHdlZWtzLCB3aGljaCBuYXR1cmFsbHkgbWFkZSBtZSBkZXBvc2l0IG1vcmUgbW9uZXksIGJlY2F1c2UgSSBiZWxpZXZlZCB0aGF0IEkgY291bGQgd2luIGl0IGFsbCBiYWNrIGFnYWluLiBOb3BlLiBJIHdhcyBkZWFkIHdyb25nLiBFbmRlZCB1cCBkZXBvc2l0aW5nIG92ZXIgJDMwayBvdmVyIGEgc3BhbiBvZiAyIG1vbnRocywgb25seSB0byBsb3NlIGl0IGFsbC4gSSBhbSBub3cgaW4gdGhlIGhvbGUgJDQwayBvZiBteSBvd24gbW9uZXksIGluc3RlYWQgb2YgYmVpbmcgdXAgJDUwayBpZiBJIGhhZCB3aXRoZHJhd24gYWxsIG15IHdpbm5pbmdzIGluc3RlYWQgb2YgbG9zaW5nIGl0IGFsbCwgYW5kIHRoZW4gJDQwayBvZiBteSBvd24gbW9uZXkuIEFueXdheSwgaG93IGFyZSB0aGluZ3MgZ29pbmcgZm9yIHlvdSBub3c/ClRoZSBPdHRvbWFuIHNoaXBtZW50IG9mIGFpZCB3YXMgc2VudCB0byBteSBob21ldG93biBhbmQgd2UgaGF2ZSB0aGUgc3RhciBhbmQgY3Jlc2NlbnQgYXMgb3VyIGVtYmxlbS4gUmVhZGluZyAiYSIgYm9vayBvciBhIHdpa2kgcGFnZSBkb2VzIG5vdCBtYWtlIHlvdSBhbiBleHBlcnQgb24gdGhlIHN1YmplY3QgYW5kIGl0IHByZXR0eSBvZmZlbnNpdmUgdG8gaGF2ZSB5b3Ugc3VnZ2VzdCBwZW9wbGUgc2hvdWxkIHJlYWQgdXAgb24gYSBzdWJqZWN0IHlvdSB0YWxraW5nIHNoaXQgYWJvdXQhCkxldCBsb29rIGF0IHNvbWUgb2YgdGhlIHJpZ2h0czogdGhlIHJpZ2h0IG9mIGZyZWUgcG9saXRpY2FsIHRob3VnaHQ7IHRoZSByaWdodCB0byBmcmVlZG9tIGFuZCBleHByZXNzaW9uIG9mIHJlbGlnaW9uOyB0aGUgcmlnaHQgdG8gcHVyc3VlIGRlbW9jcmF0aWNhbGx5IG5hdGlvbmFsIGFuZCBwb2xpdGljYWwgYXNwaXJhdGlvbnM7IHRoZSByaWdodCB0byBzZWVrIGNvbnN0aXR1dGlvbmFsIGNoYW5nZSBieSBwZWFjZWZ1bCBhbmQgbGVnaXRpbWF0ZSBtZWFuczsgdGhlIHJpZ2h0IHRvIGZyZWVseSBjaG9vc2Ugb25lJ3MgcGxhY2Ugb2YgcmVzaWRlbmNlOyB0aGUgcmlnaHQgdG8gZXF1YWwgb3Bwb3J0dW5pdHkgaW4gYWxsIHNvY2lhbCBhbmQgZWNvbm9taWMgYWN0aXZpdHksIHJlZ2FyZGxlc3Mgb2YgY2xhc3MsIGNyZWVkLCBkaXNhYmlsaXR5LCBnZW5kZXIgb3IgZXRobmljaXR5OyB0aGUgcmlnaHQgdG8gZnJlZWRvbSBmcm9tIHNlY3RhcmlhbiBoYXJhc3NtZW50OyBhbmQgdGhlIHJpZ2h0IG9mIHdvbWVuIHRvIGZ1bGwgYW5kIGVxdWFsIHBvbGl0aWNhbCBwYXJ0aWNpcGF0aW9uLk5vcGUuIApBbHRob3VnaCB0aGVyZSBhcmUgc3RpbGwgb25saW5lIGNhc2lub3MsIGJvb2tpZXMsIGFuZCBwb2tlciByb29tcyBhY2NlcHRpbmcgcGxheWVycyBmcm9tIHRoZSBTdGF0ZXMsIG1vdmluZyBtb25leSBhcm91bmQgY2FuIGJlIGEgdmVyeSBjb21wbGljYXRlZCBhbmQgbG9uZyBwcm9jZXNzLCB3aGljaCBkZXRlcnMgYSBtYWpvcml0eSBvZiBVUyByZXNpZGVudHMgZnJvbSBldmVuIHRyeWluZyB0byBwbGF5IG9ubGluZS4uIApJIGp1c3QgcmVhbGx5IHdhbnRlZCB0byBiZSBmcmllbmRzIHdpdGggdGhlbSBJIHdhcyB0aGlydGVlbiwgSSB3YXMgY2FzdCBpbiB0aGUgc2Nob29sIHBsYXksIGFuZCBwYXJ0IG9mIG15IGNvc3R1bWUgaW52b2x2ZWQgb25lIG9mIHRob3NlIENORCBuZWNrbGFjZXMuIApXaGF0IGRvZXMgaXQgbWVhbiBmb3IgQm9zdG9uIGJ1c2luZXNzZXMKSWYgdGhhdCdzIHRoZSBjYXNlIHJlYWQgb24hLiAKV3JpdGluZyBpbiB0aGUgSHVmZmluZ3RvbiBQb3N0IGxhc3Qgd2VlaywgZG9jdW1lbnRhcnkgZmlsbSBtYWtlcnMgRWxpemFiZXRoIEdvdWxkIGFuZCBQYXVsIEZpdHpnZXJhbGQgcG9pbnRlZCBvdXQgdGhhdCB0aGUgVVMgbWVkaWEgaGFzIG5ldmVyIGJlZW4gZ29vZCBhYm91dCBhY3R1YWxseSByZXBvcnRpbmcgb24gQWZnaGFuaXN0YW4uIEV2ZW4gd2hlbiBpdCB3YXMgY2xlYXIgdGhhdCB0aGUgVVMgd2FzIHB1cnBvc2VmdWxseSBsdXJpbmcgdGhlIFNvdmlldHMgaW4gYnkgc3VwcG9ydGluZyB0aGUgbXVqYWhhZGVlbiwgZXZlbiB3aGVuIGl0IGJlY2FtZSBjbGVhciB0aGF0IG1pbGxpb25zIG9mIEFmZ2hhbnMgd291bGQgYmUgbGVmdCBkZWFkIGFuZCBldmVuIG1vcmUgd291bGQgYmVjb21lIHJlZnVnZWVzIGFzIGEgZGlyZWN0IHJlc3VsdCBvZiB0aGUgVVMgImNvdmVydCIgc3VwcG9ydCBvZiB0aGUgbXVqYWhhZGVlbiwgdGhlIEFtZXJpY2FuIHByZXNzIGNvbnRpbnVlZCB0byBwcmV0ZW5kIGFzIGlmIEFmZ2hhbmlzdGFuIHdlcmUgYSBibGFjayBhbmQgd2hpdGUgbWVsb2RyYW1hLiAKSGUgaGFkIGEgbG9uZ3RpbWUgYWRkaWN0aW9uIHdpdGggZHJ1Z3MuIApUaGF0IHRydWUhIEkgYWN0dWFsbHkgc29tZXdoYXQgbGllZC4gSSBkbyBnbyBvdXQgdG8gZWF0IG1heWJlIDQgNiB0aW1lcyBhIHllYXIgYXQgYSBsb2NhbCByZXN0YXVyYW50IGJlY2F1c2UgdGhlIHdob2xlIHBvaW50IGlzIG5vIHRpcHBpbmcuIFRoZSBvd25lciBzdGFydHMgc2VydmVycyBhdCAkMTUgJDE4IGFuIGhvdXIgKGluIGEgcHJldHR5IGxvdyBjb3N0IG9mIGxpdmluZyBhcmVhICAgZm9yIGNvbnRleHQgbW9zdCBtYW51YWwgbGFib3IvZmFjdG9yeSB0eXBlIGpvYnMgaGVyZSBzdGFydCBhdCBhYm91dCAkMTEpIGFuZCBJIGtub3cgYSBjb3VwbGUgcGVvcGxlIHdobyBoYXZlIHdvcmtlZCB0aGVyZSBmb3Igc2V2ZXJhbCB5ZWFycyBhbmQgYXJlIG1ha2luZyAkMjIrLiAKSWYgeW91IGFyZSBzdWZmZXJpbmcgZnJvbTogU3BvcnRzIEluanVyaWVzLCBTcHJhaW5zLCBTdHJhaW5zLCBDYXIgYWNjaWRlbnQsIEhlcm5pYXRlZCBEaXNjLCBEaXNjIEJ1bGdlLCBEZWdlbmVyYXRpdmUgRGlzYyBEaXNlYXNlLCBOZWNrIHBhaW4sIEhlYWRhY2hlcywgTG93IGJhY2sgcGFpbiwgb2YganVzdCB3YW50IHRvIGZlZWwgYmV0dGVyIGFuZCBoYXZlIGJldHRlciBsaWZlIHBlcmZvcm1hbmNlICBwbGVhc2UgY2FsbCBvdXIgb2ZmaWNlIGluIElydmluZSwgQ2FsaWZvcm5pYSAgYXQgOTQ5Ljg1Ny4xODg4b3IgdmlzaXQgb3VyIHdlYnNpdGUgYXQgQURKVVNUMklUIHRvIGxlYXJuIG1vcmUgYWJvdXQgRnVuY3Rpb25hbCBGaXRuZXNzIENoaXJvcHJhY3RpYywgU3BvcnRzIG1hc3NhZ2UsIE15b2Zhc2NpYWwgUmVsZWFzZSwgQ29ycmVjdGl2ZSBFeGVyY2lzZSwgTm9uIFN1cmdpY2FsIFNwaW5hbCBEZWNvbXByZXNzaW9uLCBDbGFzcyBJViBsYXNlciwgRnVuY3Rpb25hbCBFbmRvY3Jpbm9sb2d5IGFuZCBGdW5jdGlvbmFsIE51dHJpdGlvbi4KSW5kZWVkLCB1cCB1bnRpbCByZWNlbnQgeWVhcnMsIHRoZSBtb3JlIHBvcHVsYXIgZGVzdGluYXRpb24gd2FzIGFsb25nIHRoZSBzb3V0aGVybiBlZGdlIG9mIHRoZSBtYWlubGFuZCBwb3J0aW9uIG9mIHRoZSBjb3VudHJ5LCBrbm93biBhcyB0aGUgQWxnYXJ2ZS4gCkV2ZW4gaWYgdHJhcHBpbmcgd2lsZCBwcmVkYXRvcnMgd2FzIHN1c3RhaW5hYmxlIChpdCBuZXZlciBpcywgYXQgbGVhc3Qgb24gYW4gaW5kdXN0cmlhbCBzY2FsZSksIHRyYXBwaW5nIGlzIGEgcHJldHR5IGhvcnJpZmljIHdheSB0byBraWxsIGFuIGFuaW1hbC4gSSBkb24gYnV5ICJodW1hbmUiIHNsYXVnaHRlciwgYnV0IHRoYXQgaXMgb3JkZXJzIG9mIG1hZ25pdHVkZSBiZXR0ZXIgdGhhbiBlbnNuYXJpbmcgYW4gYW5pbWFsIGFuZCBmdWNraW5nIHVwIGl0cyBsZWcsIHRoZW4gbGVhdmluZyBpdCBleHBvc2VkIGFuZCBzdGFydmluZyBmb3IgZGF5cyBiZWZvcmUgZmluYWxseSBraWxsaW5nIGl0IGluIHNvbWUgb3RoZXIgZ3J1ZXNvbWUgd2F5LiBOb3QgdG8gbWVudGlvbiB0aGUgb2J2aW91cyBldGhpY2FsIGFuc3dlciB0aGF0IGl0IG5vdCBva2F5IHRvIGtpbGwgc29tZXRoaW5nIGp1c3QgYmVjYXVzZSB5b3Ugd2FudCB0byB3ZWFyIGl0cyBza2luIGFyb3VuZCB5b3VyIG5lY2sgdG8gc2hvdyBvdGhlciBzaGl0YnJhaW5lZCB6b21iaWVzIHRoYXQgeW91IGZpdCBpbiB3aXRoIHRoZW0KQWxzbyBtb3VybmluZyBoZXIgbG9zcyBhcmUgNSBncmFuZGNoaWxkcmVuOiBLb3JleSBEZU5vYmxlIChEYXduKSwgVmljdG9yaWE7IE1pY2hlbGxlIEdpbGxpcyAoR3V5KSwgVmljdG9yaWE7IE1lbGlzc2EgRGVOb2JsZSAoVmljdG9yIE1hcnRlbGxvKSwgS2l0Y2hlbmVyOyBOaWNvbGUgRGVOb2JsZSAoTGVlIEJyb29rcyksIFdhdGVybG9vOyBhbmQgTWFyZWVuYSBNYWxsb3J5LCBLaW5nc3Rvbi4gTWFyZ2FyZXQgaXMgYWxzbyBzdXJ2aXZlZCBieSBmaXZlIGdyZWF0IGdyYW5kY2hpbGRyZW46IFRyZXZvciwgSnVzdGluLCBDcmFpZyBEZU5vYmxlOyBTaWVycmEgYW5kIEthZWxhIEdpbGxpcy4gCkl0IHByZXZlbnRzIHlvdSBmcm9tIGdldHRpbmcgcmFpc2VkIGFuZCBwdXQgaW4gc2hpdHR5IHNwb3RzLiBUaGF0IHdheSB3aGVuIHlvdSBiZXQgdHVybiBhbmQgaGUgcmFpc2VzIHlvdSBjYW4gY2FsbCBjb21mb3J0YWJseS4gCllvdSBjYW4gb25seSBtYWtlIG9uZSB0aGluZyB3b3JrIGF0IGEgdGltZS4gVXJnZWQgdGhlIGF1ZGllbmNlIHRvIGZvY3VzIG9uIGhpcyB0aHJlZSBtYW50cmFzOiBlbnRyZXByZW5ldXJzaGlwLCBtYXJrZXRpbmcsIGFuZCBwaGlsYW50aHJvcHkuIElzIGdvb2QgYnVzaW5lc3MsIGhlIHNhaWQuIApUaGUgTllDIERlcGFydG1lbnQgb2YgQ29uc3VtZXIgQWZmYWlycyBjb25kdWN0ZWQgYSBzdHVkeSB0aGF0IGNvbmNsdWRlcyB0aGF0IHdvbWVuIHByb2R1Y3RzIGFyZSB0eXBpY2FsbHkgbW9yZSBleHBlbnNpdmUgdGhhbiBtZW4gZm9yIG9mdGVuIHJlYXNvbmFibGUgY2F1c2UuIApUaGUgV2FuZGVyZXJzIHdlcmUgZW5kaW5nIHRoZWlyIHNlYXNvbiBieSBtYWtpbmcgdGhlaXIgMm5kIHRyaXAgdG8gRG9yc2V0IHRvIGRlZmVuZCB0aGUgQ2hhbGxlbmdlIHRyb3BoeSB0aGF0IHRoZXkgaGFkIHdvbiBhdCB0aGUgQ29tbWVyY2lhbCBhdCB0aGUgYmVnaW5uaW5nIG9mIE1hcmNoLiAKT3ZlcnZpZXcgZm9yIDRDaGFuClRoYXQncyB3aGF0IG1ha2VzIHRoZWlyIHByb2R1Y3RzIHBvcHVsYXIgYXQgdGhlIHNhbWUgdGltZS4gUG9rZXIgbG92ZXJzIGFsd2F5cyB3YW50IHNvbWUgYnJhbmRzIHRvIHdvcmsgd2l0aC4gRXJpY2sgTGluZGdyZW4gUG9rZXIgQ2FyZCBQcm90ZWN0b3IgY2FuIGJlIGEgZ3JlYXQgY2hvaWNlIGVuc3VyaW5nIHBlcnNvbmFsIGJyYW5kaW5nLi4gCldvcmxkIFBva2VyIFRvdXIKUGVvcGxlIGxpa2UgQmlsbCBHYXRlcyBtYW5hZ2UgdG8gYmUgYmlsbGlvbmFpcmVzIGFuZCB1c2UgdGhhdCB0byBiZSBtYXNzaXZlbHkgaGVscGZ1bCBodW1hbiBiZWluZ3MsIHRoZSBmb3JtZXIgZ3JvdXAgaGF2ZSBubyBwbGFjZSBpbiBhIG1vZGVybiBzb2NpZXR5IElNTy4gClRoZSBndWl0YXIgaXMgYWxzbyB2ZXJ5IGxpZ2h0ICAgc3VycHJpc2VkIG1lIGhvdyBsaWdodCBpdCB3YXMgdGhlIGZpcnN0IHRpbWUgSSBwaWNrZWQgb25lIHVwLiBBbmQgb24gdG9wIG9mIGl0IGFsbCB0aGUgZ3VpdGFyIGlzIGJlYXV0aWZ1bCBhbmQgdGhlIHNoYXBlIGlzIHVuaXF1ZS4gClB1YmxpYyBTcXVhcmUgYW5kIEdhcmRlbnMgICBUaGUgcGFyayBsaWtlIGdyb3VuZHMgcnVuIG5vcnRoIHRvIHNvdXRoIGJlaGluZCB0aGUgMTB0aCBBdmVudWUgYnVpbGRpbmdzLiBWaXNpdG9ycyBjYW4gY29tZSBhbmQgZ28gZGlyZWN0bHkgb250byB0aGUgSGlnaCBMaW5lIGF0IFdlc3QgMzB0aCBTdHJlZXQgYW5kIGFsc28gdG8gSHVkc29uIEJvdWxldmFyZCBQYXJrIGF0IFdlc3QgMzNyZCBzdHJlZXQuIEl0IHdpbGwgYm9hc3QgMjgsMDAwIHBsYW50cywgMjAwIG1hdHVyZSB0cmVlcywgYW5kIHNwZWNpYWwgc29pbHMgZm9yIGVmZmVjdGl2ZSBkcmFpbmFnZS4gCkkgdXNlIHRoZSBTaGlzaGVkbyBzdHVmZiBpbiB0aGUgc3VtbWVyLCBpdCBzb21ldGhpbmcgbGlrZSAxMDAwKyBTUEYgYW5kIHllcyBpdCBsZWF2ZXMgbWUgbG9va2luZyBsaWtlIGEgZ2hvc3Qgb24gdGhlIGJlYWNoLi4gClRoZSA0IFBvaW50IGlzIGEgImxpdmVkIGV4cGVyaWVuY2UiIHRoYXQgaXMgdGFudGFtb3VudCB0byBmZWVsaW5nIGxpa2UgYSBsaXZpbmcgc3BlZWQgYmFnIHRoYXQgYm94ZXJzIHRyYWluIG9uIFtpbnNlcnQgdGhlIHNvdW5kIG9mIGxlYXRoZXIgZ2xvdmVzIGhpdHRpbmcgYSBsZWF0aGVyIGJhZyBvbiBhIHBpdm90IGluIHJhcGlkIHN1Y2Nlc3Npb24gZHVoZHVoZHVoIGR1aGR1aGR1aCBldGMuXSBhbmQgdGhlIHNlbnNlIG9mIGxpZmUgc2hhdHRlcmluZyBvbiB1cyBsaWtlIGEga25vY2tvdXQgcHVuY2ggZnJvbSBnb2QgdG8gYSB3ZWFrZW5lZCBqYXcuIFRoZSA2IFBvaW50IGlzIGEgcG9pbnQgb2YgY3J5c3RhbGxpemF0aW9uLCB3aGVuIHdlIG1ha2UgaXQgdGhyb3VnaCB0aGUgImFzdGVyb2lkIGJlbHQiIGJldHdlZW4gdGhlIDQgcG9pbnQgYW5kIDUgcG9pbnQsIHdlIGFjY2VsZXJhdGUgdXAgdG8gdGhlIDYgcG9pbnQgb25seSB0byBoaXQgYSB3YWxsIHRoYXQgZm9yY2VzIGEgZHJhbWF0aWMgc2hpZnQuIAoiUHJpbmNlc3Mgb2YgSGVhcnQiIGlzIGtva29ybyBubyBwdXJpbnNlc3UgKCksIGZvciBpbnN0YW5jZS4gSGVhcnQsIGFzIGluIHRoZSBvcmdhbiwgaXMgc2hpbnogKCkuSSBnZXQgd2hhdCB5b3Ugd2VyZSB0cnlpbmcgdG8gc2F5LCBidXQgeW91IHVzaW5nIGFsbCB0aGUgd3Jvbmcgd29yZHMgYW5kIGl0IG1ha2VzIG1lIG5vdCB0cnVzdCB5b3VyIG9waW5pb24gb24gdGhpcy5JIGRvbiB0aGluayBHcmlmZmluIGlzIGEgYmFkIERNIGF0IGFsbC4gCk1vZGUgdG8gYWNxdWlyZS4gClRhbGsgYWJvdXQgZm9vZCwgc3BvcnRzLCBsb2NhbCBncm93dGgsIGhpcyB3b3JrLCBsb2NhbGVzLCBmYW1pbHkgaGlzdG9yeSwgZXhwZXJpZW5jZXMgLiB0aGVuIHNoYXJlIHlvdXJzLiBIZSBuZWVkcyB0aGF0IGlucHV0IGFzIHdlbGwuCldoaWNoIHdpbnMgaW4gcG9rZXIgc3RyYWlnaHQgb3IgYSBmbHVzaApQYXkgdGhlbSB0byBnbyB0byBkb2N0b3IgYXBwb2ludG1lbnRzLCBzbyB0aGF0IGlmIHRoZXkgZG8gZ2V0IHNpY2ssIGl0IGNhbiBiZSBjYXVnaHQgZmFzdGVyIGFuZCB0cmVhdGVkIGJldHRlci4gCkt4M2RyYWdvbiB1ClZlcnkgb2NjYXNpb25hbGx5IEknbGwgZ2l2ZSBvdGhlciBndXlzIGEgY29tcGxpbWVudCwgYnV0IHRoYXQncyBhcyBmYXIgYXMgSSdsbCB0YWtlIGl0LCBhbmQgb25seSBpZiBpdCdzIG9idmlvdXMgdGhleSB3ZXJlIHRyeWluZyB0byBsb29rIHBhcnRpY3VsYXJseSBzdWF2ZS9mYXNoaW9uYWJsZS4KQXMgbWVudGlvbmVkIGFib3ZlLCBtaWdyYWluZXMgaGF2ZSBiZWVuIGhlbHBlZCBieSBkcnVncyB0aGF0IGJsb2NrIHNlcm90b25pbiwgc3VjaCBhcyBzdW1hdHJpcHRhbiAoSW1pdHJleCkuIApUaGVyZSB3YXMgYW4gaW5pdGlhbCBpbXByb3ZlbWVudDsgaG93ZXZlciwgYXQgdGhhdCBzdGFnZSB0aGUgcGF0aHdheSBoYWRuJ3QgYmVjb21lIGVtYmVkZGVkIGFuZCB0aGUgYmVuZWZpdCB3YXMgbm90IHN1c3RhaW5lZCBhZnRlciB3ZSBsZWZ0IHRoZSBkZXBhcnRtZW50Li4gCkN1cnJlbnQgcHJvY2VlZGluZ3MgaW4gdGhlIHRyaWFsIGNvdXJ0IHdpbGwgdGFrZSBtb250aHMuIApHYW1ibGluZyBJbmR1c3RyeSAgIEtleSBTdGF0cyBhbmQgRmlndXJlcy4KQW1vbmcgdGhvc2UgY2hhcmFjdGVycyB3YXMgdGhlIGluZG9taXRhYmxlICJIdW1hbiBQaXJhbmhhLCIgd2hvIHByb2ZmZXJlZCBoaXMgZXhwZXJ0aXNlIHRvIExld2lzJ3MgdHJhaW5pbmcgY2xhc3MgaW4gImEgc3RlYWR5IHN0cmVhbSBvZiBib3R0b20gbGluZSBhbmFseXNpcyBhbmQgcHJvZmFuaXR5LiIuIApBbmQsIGFzIGFsbCB0ZWFjaGVycyBrbm93LCB5b3UgY2FuIHRvdGFsbHkganVzdCBub3QgYXNzaWduIGFueSBob21ld29yaywgYW5kIG1ha2UgYSBzeXN0ZW0gaW4geW91ciBjbGFzc3Jvb20gZm9yIGluIGNsYXNzIHN0dWRlbnQgZ3JhZGluZy4gVGhlIHBsYW5uaW5nIHdpbGwgbmVhcmx5IGtpbGwgeW91IHlvdXIgZmlyc3QgeWVhciwgYnV0IG9uY2UgeW91IGhhdmUgYSBzb2xpZCB3b3JraW5nIGJhbmsgb2YgbGVzc29ucyBhbmQgc29tZSBleHBlcmllbmNlIHdpbmdpbmcgaXQsIGl0IGJlY29tZXMgbXVjaCBtb3JlIHRvbGVyYWJsZS4gSSBuZXZlciB0YWtlIG15IHdvcmsgaG9tZSAodmVyeSBwdXJwb3NlZnVsbHkpLCBhbmQgSSBhbG1vc3QgYWx3YXlzIGdldCBob21lIGJ5IDUuU21hbGwgd29ybGQhIEkgYW0gaW4gS29yZWEgcmlnaHQgbm93IChhbHRob3VnaCBJIG1ha2UgYWJvdXQgYSB0aGlyZCBvZiB3aGF0IHlvdSB3ZXJlIG1ha2luZykuIApUaGlzIGltcGV0dXMgaXMgZXNwZWNpYWxseSBoZWxwZnVsbCBraWNraW5nIG1lIGluIHRoZSBhc3MgYW5kIGdldHRpbmcgbWUgb3ZlciB0aGUgaHVtcCBvZiBmZWFyIHRvIGFzayBhIGRvY3RvciB0aGlzIHF1ZXN0aW9uLiAKSWYgdGhlcmUgaXMgYSBraWQsIGl0IHdpbGwgYmUgYSBzaXR1YXRpb24gbGlrZSB5b3VyIGZyaWVuZCB3aXRoIHRoZSBTd2lzcyBGV0IgaGF2aW5nIGEgY2hpbGQgdG9nZXRoZXIuCkkgcmVhbGx5IGRvbiBrbm93IG9mIGFueSBvdGhlciB5ZWFyIHRoYXQgaGFkIHNvIG1hbnkgaW5ub3ZhdGl2ZSB0aXRsZXMgY29taW5nIG91dCBpbiBvbmUgeWVhci4gClRoZXNlIHdlcmUgc2hvd24sIGJ1dCBub3QgdG8gdGhlIHBvaW50IHRoYXQgaXQgaGFtcGVyZWQgaGVyIHNhdmluZyB0aGUgd29ybGQuIApFeGVyY2lzZSB3ZWxsLiBUaGlzIHdpbGwgbm90IG9ubHkgdG9uZSB5b3VyIG11c2NsZXMgYnV0IHdpbGwgYWxzbyBhd2FrZW4geW91ciBzZW5zZXMuIApBbG9uZyB3aXRoIGJlaW5nIG9uZSBvZiBDYW5hZGEncyBsYXJnZXN0ICJMaXZpbmcgV2FnZSIgZW1wbG95ZXJzICh3aXRoIHN0YXJ0aW5nIHBheSByYXRlcyBtdWNoIGhpZ2hlciB0aGFuIHRoZSBvZmZpY2lhbCBtaW5pbXVtIHdhZ2UpLCBWYW5jaXR5IGhlbHBzIGVtcGxveWVlcyBzYXZlIGZvciB0aGUgZnV0dXJlIHdpdGggY29udHJpYnV0aW9ucyB0byBhIGRlZmluZWQgYmVuZWZpdCBwZW5zaW9uIHBsYW4gYW5kIGEgbm9uIG1hdGNoaW5nIFJTUCBwbGFuICh3aXRoIGFuIG9wdGlvbiBmb3IgZW1wbG95ZWVzIHRvIGNvbnRyaWJ1dGUpCkhvcGUgeW91IGZpZ3VyZSBpdCBvdXQsIGdvb2QgbHVjay4uIApBcyB0aGUgbWFuYWdlciB3YXMgdW5sb2NraW5nIHRoZSBkb29ycyBoZSBtYWRlIGhpcyBtb3ZlLCBlbnRlcmluZyB0aGUgYnVpbGRpbmcgYW5kIHRocmVhdGVuaW5nIHRoZSBtYW5hZ2VyIHdpdGggYSBndW4uIApBZ2Fpbiwgbm90IGFuIGlzc3VlLCBhbmQgaGF2aW5nIGEgZmFtaWx5IGFzIGEgYmVkcm9jayBoYXMgaGVscGVkIFNPIE1VQ0gsIGFuZCBnaXZlbiBtZSBzbyBtdWNoIGNvbmZpZGVuY2Ugb3ZlciBzb21ldGhpbmcgSSBoYWQgY29uZmxpY3Rpbmcgdmlld3MgYWJvdXQgZm9yIGFsbW9zdCB0d28gZGVjYWRlcyBub3csIGJlY2F1c2UgbXkgc3Vydml2YWwgc3RyYXRlZ3kgaGFzIGJlZW4gdG8gaGF2ZSB0byBmaWd1cmUgb3V0IGhvdyBJIGZlbHQgaW4gYSBzb2NpZXR5IHRoYXQga2VlcHMgcHVzaGluZyBteSBmZWVsaW5ncyBvbmUgd2F5LCBBTkQgYmVpbmcgaW4gYSBwYXJ0IG9mIHRoZSBTb3V0aCB3aGVyZSBzb2NpYWwgc3Vydml2YWwgbWVhbnQgaGlkaW5nIG15IGJpc2V4dWFsaXR5LiAKSW1pc3N0aGV5b29wICAwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwoxNCBpcyBhIHJpY2ggdHdhbmdmZXN0IGxhY2VkIHdpdGggYmxhY2tseSBoaWxhcmlvdXMgc29uZ3MgYWJvdXQgaGVhcnRicmVhayBhbmQgZHJpbmtpbiBzdWljaWRlIGFuZCBtdXJkZXIsIGd1bnMgYW5kIGdyYXZlZGlnZ2VycywgZ290aCBnaXJscyBhbmQgR2VybWFuIG1vdG9yY3ljbGVzLCBhbmQgZXZlbiB0aGUgZW5kIG9mIHRoZSB3b3JsZC4gClRoZSBkcmF3aW5ncyBtYWRlIHRoZW0gaGFwcGVuLiBJIHN1cHBvc2UgSSBnb3QgYSBkYXRlIG9yIHR3byB0aGF0IHdheSBidXQgaXQgd2FzIG9ubHkgdG8gZ2V0IHRoZW0gdG8gdGFsayB0byBtZS4gCkRlc3BpdGUgdGhlIFRpbWVzIHNsYXZpc2ggZGV2b3Rpb24gdG8gY3JlYXRpbmcgYSBjdWx0IG9mIHRoZSBjdXJyZW50IHByZXNpZGVudCAoYW5kIHRoZSBsYXN0IG9uZSBmb3IgbWFueSB5ZWFycyksIGRlY2lkaW5nIGJldHdlZW4gMTAsMDAwIGFuZCA0MCwwMDAgaXMgbm90IGdyZWF0IGxlYWRlcnNoaXAuIERlY2lkaW5nIGJldHdlZW4gdG90YWwgd2l0aGRyYXdhbCBvciB0b3RhbCB3aXRoZHJhd2FsIG9mIGFsbCBtaWxpdGFyeSBwZXJzb25uZWwgdG8gYmUgcmVwbGFjZWQgYnkgUGVhY2UgQ29ycHMgdm9sdW50ZWVycyB0byBidWlsZCBzY2hvb2xzIGFuZCB3ZWxscyBvciBjcmVhdGluZyBtb3JlIHdhciB3b3VsZCBiZSBsZWFkZXJzaGlwLiBOb3QgY29uc2lkZXJpbmcgYWxsIHRoZSBvcHRpb25zIGxlZnQgT2JhbWEgd2l0aCBubyBjaG9pY2UgYnV0IHRvIGNvbnRpbnVlIEJ1c2ggd2FyLi4gClRoYW5rcyB0byB0aGUgZm9sa3Mgd2l0aCBMb2NhbCBUYWJsZSBUb3VycywgeW91IGNhbiBnZXQgYSBndWlkZWQgdG91ciBvZiB0aGVzZSBzaG9wcyBhbmQgdGhlaXIgYmVzdCBicmV3cy4gCkkgc2xlcHQgZnJvbSA3cG0gIDNhbSBhbmQgaGUgd2VudCB0byBiZWQgYXQgM2FtIHVudGlsIDEwYW0gb3Igc28uIApTaGUgc2FpZCBteSBtdXNjbGVzIGZlbHQgZmluZS4gCk1vdmluZyB0byBHZXJtYW55IHdhcyBhIGxpZmVsb25nIGRyZWFtIGFuZCB0aGUgZXhwZXJpZW5jZSBoYXMgYmVlbiBtb3N0bHkgcG9zaXRpdmUgcGVyc29uYWxseSBhbmQgcHJvZmVzc2lvbmFsbHkuIApUaGV5IGNvdWxkIHByb2JhYmx5IGFsc28gd3JpdGUgdG8gdGhlaXIgZm9ybWVyIGZhbWlsaWVzIGFuZCBoYXZlIG1vbmV5IG9yIGl0ZW1zIHNlbnQgdG8gdGhlbSBmcm9tIHRpbWUgdG8gdGltZS4gClJhaXNlIHlvdXIgaGFuZCBpZiB5b3UgZ28gdGhyb3VnaCBmZWx0IGNsb3RoIGxpa2UgaXQncyBnb2luZyBvdXQgb2Ygc3R5bGU/IE5vdCBiZWNhdXNlIHlvdSBnZXQgdGlyZWQgb2YgdGhlIGNvbG9yLCBidXQgeW91IGhhdmUgZnJpZW5kcyBhbmQgZmFtaWx5IG92ZXIgYWxsIHRoZSB0aW1lIHdobyB0ZW5kIHRvIHNwaWxsIHRoaW5ncyBoZXJlIGFuZCB0aGVyZS4gCkludGVuc2UsIHRoZW4gZmFkZS4gU28gaXQgc2xvd2x5IHN0YXJ0cyBtb3ZpbmcgYXJvdW5kIHRvIHRoZSBmcm9udCBvZiB5b3VyIGJvZHkuIFRoYXQgdGhlIGFic29sdXRlIHdvcnN0LiAKVGhlIGdhbWJsaW5nIHNwYWNlIGlzIGVub3Jtb3VzOyBpbWFnaW5lIHRocmVlIG9yIGZvdXIgV2FyIE1lbW9yaWFscyB3aXRob3V0IGFueSBzZWF0cy4uIApCZXR0ZXIgaG9wZSB5b3UgaGF2ZSBzb21lIEVzc2VuY2Ugb2YgRGl0dGFueSBmb3IgdGhhdCBzdWNraW5nIGNoZXN0IHdvdW5kLi4gCldoYXQgZG8geW91IGd1eXMgdGhpbms/LiAKTm93IGFsbCBvZiB0aGF0IGJlaW5nIHNhaWQsIGp1ZGdpbmcgYXQgZmFjZSB2YWx1ZSB0aGUgZ3V5IHNlZW1zIHRvIGtpbmQgb2YgYmUgYSBiaXQgb2YgYSBkb3VjaGViYWcgdGhhdCBrbmV3IHRoZXJlIHdhcyBubyBwcmVzZW50IHRocmVhdCwgYnV0IHRoYXQgc29tZSBzZXJpb3VzIGFybWNoYWlyIHF1YXJ0ZXJiYWNraW5nIHdoaWNoIEkgaGF2ZSBhIHZlcnkgaGFyZCB0aW1lIGRvaW5nLiAKSSBibGFjayBhbmQgYWNjZXB0IGNyaXRpY2lzbSBvcGVubHkuIApBQlNPTFVURUxZIE5PIGNvbW1lbnRzIHdpdGggcGVyc29uYWwgaW5mb3JtYXRpb24gc3VjaCBhcyBhY3R1YWwgbmFtZXMsIHBob25lIG51bWJlcnMsIGUgbWFpbCBhZGRyZXNzZXMsIEZhY2Vib29rIHByb2ZpbGVzLCBLYWthbyBJRHMsIGV0YywgYnV0IHlvdSB3ZWxjb21lIHRvIHRyYWRlIHRoYXQgaW5mb3JtYXRpb24gdmlhIHByaXZhdGUgbWVzc2FnZXMuIEFzIHdpdGggYW55IG9mZmxpbmUgbWVldHVwcywgZm9yIHNhZmV0eSByZWFzb25zIGl0IGJlc3QgdG8gbWVldCBpbiBhIHB1YmxpYyBhcmVhLCBsZXQgYSBmcmllbmQga25vdyB3aGVyZSB5b3UgZ29pbmcsIGFuZCBiZSBjYXJlZnVsIGFib3V0IGhvdyBtdWNoIHBlcnNvbmFsIGluZm9ybWF0aW9uIHlvdSBzaGFyZSB3aXRoIHNvbWVvbmUgeW91IGp1c3QgbWV0Li4gClNjaGFhcDogSWsgaGViIGdldnJhYWdkIG9mIGRlIEFPVyBhZnN0YW5kIHdpbGxlbiBuZW1lbiB2YW4gZGl0IHNvb3J0IHVpdGluZ2VuLiBNYWFyIGRhdCBnZWJldXJ0IG5pZXQgdm9sZG9lbmRlLiBIZXQgYmxpamZ0IGRhYXJvbSBuaWV0IGFsbGVlbiBiaWogZGUgY2x1YmplcyBkaWUgd2UgbmlldCBtZWVyIGJldGFsZW4sIGlrIHdpbCBvb2sgZGF0IHplIGJpbm5lbmtvcnQgaHVuIGF1dG8gbmlldCBtZWVyIG9wIGRlIGthemVybmUgemV0dGVuLCBhbHMgemUgcHJpdiBkZSBzdGFkIGluZ2Fhbi4gQW1zdGVyZGFtc2UgYnVyZ2VycyBtb2V0ZW4gb29rIHBhcmtlZXJnZWxkIGJldGFsZW4uICAgeWFoIFdURi4KUGVuaXNlcywgaXQgaXMgc2FmZSB0byBzYXksIGFyZSBhIGNvbXBsaWNhdGVkIGJ1bmNoLiBJbiB0aGUgZmxlc2gsIHRoZXkgcHJvdmlkZSBib3RoIHBsZWFzdXJlIGFuZCBwYWluLCB3aGlsZSBpbiB3b29kLCByb2NrLCBhbmQgcGFpbnQgdGhleSBqdXN0IGRvd25yaWdodCBjb25mb3VuZGluZy4KSSBkb24ndCB3YW50IHRvIGJlIGEgaGVsaWNvcHRlciBwYXJlbnQsIGJ1dCBpIHdpbGwgYmUgYSBmaWdodGVyIGpldCwgYW55IGRheSBhbnkgdGltZS4KVG8gcmFpc2UgdGhlbSBmcm9tIGVhcmx5IG9uIHRvIG9ubHkgYmUgaW5kb29ycy4gV2UgYXJlIHBsYW5uaW5nIHRvIGJ1aWxkIG9uZSBvZiB0aG9zZSAiQ2F0dGlvcyIgd2hpY2ggSSBoYXZlIHNlZW4gbWFueSBwZW9wbGUgcG9zdHMuIApPZW5vcGhpbGUgb3Igbm90LCBhIHRyaXAgdG8gVHVzY2FueSB3aWxsIGdpdmUgeW91IGEgdGFzdGUgb2YgdGhlIGdvb2QgbGlmZS4gCkR1ZGUgd2FzIHN0aWxsIGxlYXZpbmcgbWUgdm9pY2VtYWlscyBhdCA0QU0uIApNY2h0ZSBtYW4gdHJvdHpkZW0gZWluIGJpc3NjaGVuIEZhcmJlIHJlaW5icmluZ2VuLCBkYW5uIGtubnRlIG1hbiBlaW4gcGFhciBUcm9wZmVuIFNhbmRkb3JuZnJ1Y2h0ZmxlaXNjaGwgb2RlciBLYXJvdGlubCB2ZXJ3ZW5kZW4uIEFiZXIgaWNoIGZpbmRlIHNpZSBhdWNoIHNvIGhic2NoLiBOZXR0IHZlcnBhY2t0LCB6QiBpbiBlaW5lbSBDZWxsb3BoYW5zY2tjaGVuIG1pdCBTY2hsZWlmZSB1bmQgR2VzY2hlbmtzYW5obmdlciBzaW5kIHNpZSBicmlnZW5zIGF1Y2ggZWluIHNjaG5lcyBNaXRicmluZ3NlbCBiZWltIG5jaHN0ZW4gQmVzdWNoLiAKTGEgc2VtYWluZSBwcm9jaGFpbmUgOiBQb3Vycm9ucyBub3VzIHRvdWpvdXJzIG5vdXMgZmFpcmUgc29pZ25lciBxdWFuZCBub3VzIGVuIGF1cm9ucyBiZXNvaW4/CkZvciB1c2VycyB0aGF0IHlvdSBmaW5kIGludG9sZXJhYmxlIGNvbnNpZGVyIG1hbmFnaW5nIHlvdXIgZXhwZXJpZW5jZSBieSBibG9ja2luZyB0aGVtLiAKVGhlIHNlY29uZCByZWFzb24sIGlmIHlvdSBhcmUgcGF5aW5nIGF0dGVudGlvbiB0b28gbXVjaCB0byBhIGdvb2QgbG9va2luZyBwbGF5ZXIgb3IgZGVhbGVyIHRoZW4gc3RvcCBhbmQgZ28gYmFjayB0byBjb25jZW50cmF0aW5nIG9uIHlvdXIgZ2FtZS4gSWYgbm90LCB0aGVuIHRha2UgYSBicmVhayBhbmQgZ28gaW50cm9kdWNlIHlvdXJzZWxmIQpWYXJpb3VzIG9yZ2FuaXphdGlvbnMsIGluY2x1ZGluZyB0aGUgU3BhbmlzaCB1bmlvbnMgQ0NPTyBhbmQgVUdULCBoYXZlIGJhY2tlZCB0aGUgc3RyaWtlcywgd2hpY2ggYWltIHRvIGhpZ2hsaWdodCBkaXNjcmltaW5hdGlvbiwgZG9tZXN0aWMgdmlvbGVuY2UgYW5kIHRoZSB3YWdlIGdhcC4gCkJ1dCBJIGJlbGlldmUgdGhhdCBzY2llbmNlIGlzIGNvbnN0YW50bHkgZXZvbHZpbmcsIEknZCB0ZWxsIG15IGtpZHMgdG8gbGlzdGVuIHRvIHRoZWlyIGhlYWx0aCBjYXJlIHRlYW0uIEkgdGhpbmsgc29tZSBncmFuZHBhcmVudHMgc2VlIGl0IGFzIGEgcGVyc29uYWwgaW5zdWx0IHRvIHRoZWlyIGxvbmcgYWdvIHBhcmVudGluZyBza2lsbHMuIApUaGUgYmVzdCBhZHZpY2UgdGhvdWdoIGlzIGp1c3QgdGltZS4gCk15IGNvbmNlcm4gaXMgd2hldGhlciBpdCB3aWxsIGJlIGFibGUgdG8gZ2VuZXJhdGUgcmVwZWF0IGN1c3RvbWVycy4gVWx0aW1hdGVseSwgY29uc3VtZXJzIG1heSBjaG9vc2UgdG8gd29yayB3aXRoIHRoZSBhcnRpc3QgdGhhdCBpcyBleGVjdXRpbmcgdGhlIHRhdHRvby4uIApCdXQgdGhlIHJlc3Qgb2YgdGhlIGhvc3BpY2Ugd2FzIGZ1bGwgb2Ygc3VjaCBwZW9wbGUuIApUaGUgd2hpdGUgbWlycm9yIGNhcHMgaXQgY2FtZSB3aXRoIHdlcmUgcHJldHR5IGNoZWFwIGxvb2tpbmcgYnV0IEkgb2J2aW91c2x5IHN3aXRjaGVkIHRob3NlIG91dCBmb3IgbXkgT0VNIGdyZXkgb25lcyBhbnl3YXkuIFRoZXkgbG9vayBjb21wbGV0ZWx5IHN0b2NrIG5vdy4gSXQgdG9vayBhYm91dCAxMSBkYXlzIHRvIGFycml2ZSBmcm9tIENoaW5hLCB3aGljaCBpcyBwcmV0dHkgcXVpY2sgZm9yIEFsaUV4cHJlc3MuLiAKSWYgaGUgZG9lcyBub3QsIHRoZW4gd2UgY2FuIGNhbGwgYW5kIGJlIGhhcHB5IHRvIGJldCB3aGVuIGNoZWNrZWQgdG8gb24gYSBsb3Qgb2YgZmxvcHMgYW5kIHRha2UgaXQgZG93bi4gCiJGb2N1cyBvbiB0aGUgRmFtaWx5IGNvbnNpZGVycyBwb2tlciBpbW1vcmFsLCIgUmF5bWVyIHNhaWQsIGdlc3R1cmluZyB0b3dhcmRzIHRoZSBGb2N1cyBvbiB0aGUgRmFtaWx5IGJvb3RoIGRvd24gYW4gYWlzbGUuIApZb3VyIHdlaWdodCBpc24gYSBwZXJmZWN0IG1lYXN1cmVtZW50IG9mIGhvdyB5b3VyIGZhdCBsb3NzIGlzIGdvaW5nIGJlY2F1c2Ugd2F0ZXIgZmx1Y3R1YXRpb24gY2FuIGhpZGUgZmF0IGxvc3MuIApNYXliZSBoZSBuZWVkcyB0byBsZWFybiBidXQgSSBjYW4gc2VlIGhvdyBpdCdzIGZydXN0cmF0aW5nIHdoZW4geW91J3JlIHRoZSBvbmUgcGF5aW5nIGZvciBpdC4uIApQYXJ0YWdlciBkZXMgZXhwcmllbmNlcywgcmVuY29udHJlciBkJ2F1dHJlcyBwZXJzb25uZXMgZXN0IGVzc2VudGllbCBwb3VyIHNvcnRpciBkZSBsYSBjdWxwYWJpbGl0IGV0IGRlIGxhIGhvbnRlIHF1ZSByZXNzZW50ZW50IHRycyBzb3V2ZW50IGxlcyBwZXJzb25uZXMgZ3Jvc3NlcyBkdSBmYWl0IGR1IHJlZ2FyZCBkZSBsYSBzb2NpdC4uIApUb3VnaCBndXkgaGFzIGJlZW4gaW1wcm92ZWQgbWFraW5nIGhpbSBhcm1vciB0aHJvdWdoIHByZXR0eSBtdWNoIGV2ZXJ5IHJhcGlkIGphYiwgY2VydGFpbiBtdWx0aSBoaXQgbW92ZXMsIGFuZCBjZXJ0YWluIHdlYWsgcHJvamVjdGlsZXMgc3VjaCBhcyBtbSdzIHBlbGxldHMsIGx1aWdpIGZpcmViYWxsLCBwayBmaXJlLCBhbmQgaG9seSB3YXRlciBmb3IgZXhhbXBsZS4KSGUga25ldyB0aGF0IHRoaXMgd2FzIGFuIHVnbHkgc2l0dWF0aW9uIGZvciBldmVyeWJvZHkgaW52b2x2ZWQgYW5kIHNob3dlZCB0eXBpY2FsIEx1a2UgZW1wYXRoeSBhbmQgbGV2ZWwgaGVhZGVkIHRoaW5raW5nIGFuZCBmaW5lc3NlLiAKQ29uY2x1c2lvbjogVGhpcyBpcyB0aGUgZmlyc3QgcmFuZG9taXNlZCwgY3Jvc3Mgb3ZlciBzdHVkeSBpbiBtaWdyYWluZXVycywgc2hvd2luZyB0aGF0IGRpZXQgcmVzdHJpY3Rpb24gYmFzZWQgb24gSWdHIGFudGlib2RpZXMgaXMgYW4gZWZmZWN0aXZlIHN0cmF0ZWd5IGluIHJlZHVjaW5nIHRoZSBmcmVxdWVuY3kgb2YgbWlncmFpbmUgYXR0YWNrcy4KTWFueSBzY2hvbGFycyBub3cgdXNlIHRoZSB0ZXJtIGNoYXR0ZWwgc2xhdmVyeSB0byByZWZlciB0byB0aGlzIHNwZWNpZmljIHNlbnNlIG9mIGxlZ2FsaXNlZCwgZGUganVyZSBzbGF2ZXJ5LiBJbiBhIGJyb2FkZXIgc2Vuc2UsIGhvd2V2ZXIsIHRoZSB3b3JkIHNsYXZlcnkgbWF5IGFsc28gcmVmZXIgdG8gYW55IHNpdHVhdGlvbiBpbiB3aGljaCBhbiBpbmRpdmlkdWFsIGlzIGRlIGZhY3RvIGZvcmNlZCB0byB3b3JrIGFnYWluc3QgdGhlaXIgb3duIHdpbGwuIFNjaG9sYXJzIGFsc28gdXNlIHRoZSBtb3JlIGdlbmVyaWMgdGVybXMgc3VjaCBhcyB1bmZyZWUgbGFib3VyIG9yIGZvcmNlZCBsYWJvdXIgdG8gcmVmZXIgdG8gc3VjaCBzaXR1YXRpb25zLlsyXS4gCkJhY2sgZHVyaW5nIHRoZSBzYW1lIHRpbWUgZnJhbWUgd2hlbiBpIHdhcyBpbiBlbGVtZW50YXJ5IHNjaG9vbCwgb25jZSBhIHllYXIgYSBtYWxlIHRlYWNoZXIgd291bGQgaW52aXRlIHNldmVyYWwgY2hpbGRyZW4gaW4gZ29vZCBlZHVjYXRpb25hbCBzdGFuZGluZyBvdmVyIHRvIGhpcyBmYW1pbHkgaG9tZSBmb3IgYSBzbGVlcCBvdmVyIGFuZCBiYXNpY2FsbHkgaXQgd2FzIGp1c3QgYSBiaWcgcGFydHkgZm9yIHRoZSBraWRzLiAKRXZlbiB0aG91Z2ggSSBoYWQgYW4gdW5kZXJ3ZWlnaHQgQk1JIGluIHRoYXQgcGljdHVyZSwgSSBvbmx5IGxpa2UgMSAyJSB1bmRlcmZhdC4gCkFsbCB5b3UgaGVhciBpcyB0YWxrIGFib3V0ICJkaWduaXR5IiBhbmQgImh1Z3MiIGFuZCBvdGhlciBub24gc2Vuc2UgdGhhdCBpcyBub3QgcmVhbGx5IHNvbHV0aW9uIG9yaWVudGVkLiAKWWVzLCB3ZSBkby4gQWxsIHlvdSBuZWVkIHRvIGRvIGlzIGdpdmUgdXMgYSBjYWxsLCBnaXZlIHVzIHlvdXIgbGFzdCBuYW1lIGFuZCBhZnRlciBjb25maXJtaW5nIHlvdSBoYXZlIGEgcmVzZXJ2YXRpb24sIHdlIHdpbGwgY29tZSBhbmQgcGljayB5b3UgdXAuIApZb3UgY291bGQgdGhpbmsgb2YgdGhhdCBjb3N0ICAgbGlrZSB0aGUgY29zdCBvZiBjbGVhbmluZyB1cCB0aGUgUGluZXdvb2QgZHVtcCAgIGFzIHRoZSBwcmljZSB3ZSBoYXZlIHRvIHBheSBmb3IgbG9uZyBnb25lIHN0YXRlIGxlYWRlcnMgd2hvIHdlcmUgbG9va2luZyBvdXQgZm9yIHRoZWlyIGZyaWVuZHMgcmF0aGVyIHRoYW4gdGhlIG5hdHVyYWwgZW52aXJvbm1lbnQgdGhhdCB0aGV5IHdlcmUgZW50cnVzdGVkIHRvIHByb3RlY3QuIEl0J3MgdGhlIHByaWNlIHdlIHBheSBmb3IgbGVhZGVycyB3aG8gZGlkbid0IHJlY29nbml6ZSB0aGF0IHByb3RlY3RpbmcgdGhlIGVudmlyb25tZW50IGlzbid0IGp1c3QgYWJvdXQgaHVnZ2luZyB0cmVlcyBhbmQgc2FkZGxpbmcgYnVzaW5lc3NlcyB3aXRoIHJlZ3VsYXRpb25zIHRoZXkgZmluZCBidXJkZW5zb21lLiAKSG93IG1hbnkgdGltZXMgaGF2ZSB5b3Ugc2VlbiBtaW5kbGVzcyB1bmRlciBjb250cm9sPyBJdCBlaXRoZXIgYmVlbiBFcmVuIHNjcmVhbSBtaW5pb25zIG9yIFpla2Ugc2xhdmVzIHNvIGZhci4gV2hpbGUgYm90aCB0eXBlcyBhY3Qgb24gY29tbWFuZCwgd2UgaGF2ZW4gaGFkIGEgY2FzZSBsaWtlIHRoaXMgYmVmb3JlIHdoZXJlIHRoZSBjb250cm9sbGVyIGhhcyBiZWVuIGluIG1vcnRhbCBkYW5nZXIvdW5jb25zY2lvdXMgd2hpbGUgdGhlIGNvbnRyb2xsZWQgbWluZGxlc3Mgd2VyZSBhcm91bmQuIFpla2Ugc2xhdmVzIGFyZSBhIHdob2xlIG90aGVyIGJlYXN0KG5vIHB1biBpbnRlbmRlZCkgZHVlIHRvIGJhc2ljYWxseSBiZWluZyBpbmZ1c2VkIHdpdGggaGlzIGdlbmV0aWNzLiBUaGVyZSBzdGlsbCBhIGxvdCB3ZSBkb24ga25vdyBhYm91dCB0aXRhbnMsIHRpdGFuIGJpb2xvZ3ksIGFuZCBlc3BlY2lhbGx5IHRpdGFuIHBzeWNob2xvZ3kuIFRoZXJlIG5vIHJlYXNvbiB0byBiZWxpZXZlIHRoaXMgWmVrZSBzbGF2ZSB3YXNuIGNvbXBlbGxlZCB0byBjb21lIHRvIGl0cyBtYXN0ZXIgcmVzY3VlIGFuZCBnaXZlIGl0cyBsaWZlIHRvIHJldml2ZSBoaW0uIEluIHRlcm1zIG9mIHRoZSBoZWFsaW5nIGFiaWxpdHkgaXRzZWxmLCB3aGlsZSB3ZSBoYXZlbiBzZWVuIGl0IHdlIGNhbiBzYXkgZm9yIHN1cmUgaXQgbm90IGEgbm9ybWFsIHRpdGFuIHRoaW5nLCBmb3IgYWxsIHdlIGtub3cgdGhlIGZvdW5kaW5nIHRpdGFuIG9yIFpla2UgY291bGQgaGF2ZSBlYXNpbHkgY29tbWFuZGVkIHRoZWlyIGNvbnRyb2xsZWQgdGl0YW5zIHRvIGRvIHRoaXMgaWYgdGhleSBrbmV3IGl0IHdhcyBwb3NzaWJsZS4gWmVrZSBjb3VsZCBoYXZlIHBvdGVudGlhbGx5IHVzZWQgYSB0aXRhbiBzbGF2ZSBhdCBTaGlnYW5zaGluYSB0byBoZWFsIHVwIGZhc3RlciBsaWtlIHRoaXMgaWYgaGUgZ2F2ZSB0aGUgY29tbWFuZC4gVGhlIHRyYW5zZmVyIG9mIGZsZXNoIGlzIGEgdmVyeSBjb21tb24gdGhpbmcgaW4gdGhlIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBzaGlmdGVycywgdGhlaXIgdGl0YW4gYW5kIGh1bWFuIGZvcm1zLCBhbmQgbWluZGxlc3MgYXMgd2VsbC4KVGhlIGFubnVhbCBOQkEgRmluYWxzIGFwcGVhcmFuY2VzIHdpbGwgYmUgcmVwbGFjZWQgYnkgbG90dGVyeSBwcm9qZWN0aW9ucywgdGFua2luZyBkZWJhdGVzIGFuZCBzY291dGluZyB0aGUgbmV4dCBiaWcgdGhpbmcgb24gWW91VHViZS4gKExlQnJvbiBKYW1lcyBKci4gaW4gMjAyMyEpClRoaXMgaXMgYW4gaW5jcmVkaWJseSBpbXBvcnRhbnQgcG9pbnQsIHRoYW5rIHlvdSEgQSB0aW1lbGluZSBpcyBmYWxsaW5nIGludG8gcGxhY2UuIFVuZm9ydHVuYXRlbHkgSSBoaXQgdGhlIGNoYXJhY3RlciBsaW1pdCBzbyBJIGFwcHJlY2lhdGUgdGhhdCB5b3UgcG9pbnRlZCBvdXQgdGhlIG1lZXRpbmcgYmV0d2VlbiBhIGZvcm1lciBSdXNzaWFuIGludGVsbGlnZW5jZSBhZ2VudCBhbmQgdGhlIFRydW1wIENhbXBhaWduIE1hbmFnZXIgYW5kIERlcHV0eSBDYW1wYWlnbiBNYW5hZ2VyIHdoaWNoIHRvb2sgcGxhY2UgaW4gYSBidWlsZGluZyBvd25lZCBieSBKYXJlZCBLdXNobmVyLiAKT2J2aW91c2x5IGl0J3MgY2hlYXRpbmcuIFNvbWUgY291cGxlcyBhcmUgb2sgd2l0aCBnaXZpbmcgZWFjaCBvdGhlciBhIHBhc3Mgb3Igd2hhdGV2ZXIgdGhleSBjYWxsIGl0LiAKV2l0aG91dCBnb2luZyBpbnRvIHRvbyBtdWNoIGRldGFpbCBteSB3b3JrIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0bzsgb3JnYW5pemluZyBjaGFyaXR5IHNwb3J0cyB0b3VybmFtZW50cywgZGV2ZWxvcGluZyBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uIHRoYXQgaGVscHMgY2hpbGRyZW4gZnJvbSBsb3cgaW5jb21lIGZhbWlsaWVzIHBhcnRpY2lwYXRlIGluIHNwb3J0cyBwcm9ncmFtcyBmcmVlIG9mIGNoYXJnZSwgYW5kIHJ1bm5pbmcgYSBzcG9ydHMgYWNhZGVteSB0aGF0IHByb3ZpZGVzIGEgc2FmZSBhbmQgZnVuIGxlYXJuaW5nIGVudmlyb25tZW50IGZvciBraWRzIHdpdGggZGV2ZWxvcG1lbnRhbCBhbmQgaW50ZWxsZWN0dWFsIGRpc2FiaWxpdGllcy4gCkhubGljaGVzIGlzdCBtaXIgYWxzIEp1Z2VuZGxpY2hlciBtYWwgcGFzc2llcnQgKG5lLCBpY2ggaGF0dGUgZ2FyIG5pY2h0cyBlaW5nZXN0ZWNrdCwgZGllIFZlcmt1ZmVyaW4gaGF0dGUgZGFzIGZhbHNjaCBnZXNlaGVuIHVuZCBtaWNoIGRhbm4gZmZlbnRsaWNoIG5hY2ggZGVyIEthc3NlIGF1ZmdlaGFsdGVuKS4gR2FiIGVpbmUgRW50c2NodWxkaWd1bmcgdm9tIENoZWYgdW5kIGVpbmVuIHJlY2h0IGhvaGVuIEVpbmthdWZzZ3V0c2NoZWluIHVuZCBkZXIgd2FyIGhlaWxmcm9oLCBkYXNzIGljaCBuaWNodHMgd2VpdGVyZXMgdW50ZXJub21tZW4gaGFiLiAzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnby4gCkEgc2FtcGxlIHBsYW4gd291bGQgYmUgdG8gdGlwIHRoZSBkZWFsZXIgLjUwIG9uIGF2ZXJhZ2Ugc2l6ZSBwb3RzIGFuZCBwb3NzaWJseSAkMS4wMCBvbiBsYXJnZXIgcG90cyBpZiB0aGUgZGVhbGVyIGlzIGRvaW5nIGEgZ29vZCBqb2IuIEFsc28sIHlvdSBjYW4gd2F0Y2ggd2hhdCB0aGUgb3RoZXIgcGxheWVycyBhcmUgdGlwcGluZyB0byBnZXQgYW4gaWRlYS4gCk15IGhvcnNlIHdvdWxkIHJlZnVzZSB0byBwaWNrIHVwIGhpcyByaWdodCBsZWFkLCBidWNrLCBhbmQganVzdCBnZW5lcmFsbHkgc2VlbSB1bmhhcHB5IGluIGhpcyB3b3JrLiBXZSBjaGVja2VkIHRhY2sgYW5kIHRoYXQgd2FzIGFsbCBnb29kLiAKVGVzdHMgaGF2ZSBzaG93biBhY3R1YWwgcmVqdXZlbmF0aW9uIG9mIGNlbGx1bGFyIGFjdGl2aXR5LCB3aXRoIGRpdmlzaW9uIGNvbnRpbnVpbmcgd2VsbCBiZXlvbmQgdGhlIG5vcm1hbCBsaWZlc3BhbiBvZiBhbiBhZ2luZyBjZWxsIGFuZCBhY3Rpdml0aWVzIHdpdGhpbiB0aGUgY2VsbCByZXR1cm5pbmcgdG8gYSBub3JtYWwgc3BlZWQuIApRdWVzdGlvbiA0LiBTYXkgYSBwYXRpZW50IGhhcyBhIG1ldGFib2xpc20gdGhhdCBjYXVzZXMgdGhlbSB0byBwcm9jZXNzIHRoZWlyIG1lZGljYXRpb24gYnkgaGFsZiBldmVyeSAzNiBob3Vycy4gVGhleSBhcmUgc3RhYmxlIHRha2luZyBYIG1pbGxpZ3JhbXMgb2YgbWVkaWNhdGlvbiBkYWlseSAoYmxvb2Qgc2VydW0gbGV2ZWxzID0gW2ZpZ3VyZSBmb3VuZCBpbiBxdWVzdGlvbiAzXSkgYW5kIHRoZXkgZGVjcmVhc2UgdGhlaXIgZG9zZSBieSBZIG51bWJlciBvZiBtaWxsaWdyYW1zIGEgc2luZ2xlIHRpbWUsIHdoYXQgd2lsbCBiZSB0aGVpciBzZXJ1bSBsZXZlbHMgb24gZWFjaCBkYXkgZm9yIFtmaWd1cmUgZm91bmQgaW4gcXVlc3Rpb24gMl0gYWZ0ZXIgdGhlIGRyb3A/LiAKSXQgaXMgYSBwYXJ0IG9mIG15IHBhc3QgYW5kIGhlbHBlZCBzaGFwZSB3aG8gSSBoYXZlIGJlY29tZSwgYW5kIEkgbm90IGFzaGFtZWQgb2YgdGhhdC4uIApDb21tZSBTb3BoaWUsIGplIHNvdXJpcyAgbGEgbGVjdHVyZSBkZSB0b24gYmlsbGV0LCBjJ2VzdCBwYXMgZ2VudGlsIGhlaW4gISBvbiBlc3QgdnJhaW1lbnQgZGFucyBsJ2FtYmlhbmNlIHVuIHBldSBwbG9tYmUgbWFpcyBqZSBzdWlzIHNyZSBxdWUgdHUgbidhcyBjcml0IHF1ZSBsZSBuZ2F0aWYuIEMnZXN0IHF1b2kgY29tbWUgbWVudSwgbGUgc3BjaWFsIHAndGl0ZSBTb2V1ciA/CkFuYXogSGFpZGhhciB1CiJEZWZpbml0ZWx5IG1ha2UgcnVsZXMgYW5kIHNheSBzb21ldGhpbmcgaWYgdGhleSBicmVhayB0aGVtLCIgSGVoZXIgc2FpZC4KMy4gSm91cm5hbCBvZiB0aGUgQW1lcmljYW4gTWVkaWNhbCBBc3NvYy4gMjAwNDsyOTI6MjM4OCAyMzk1IEdvbGRlbmJlcmcgREwsIEJ1cmNraGFyZHQgQywgQ3JvVm9yZCBMIE1hbmFnZW1lbnQgb2YgZmlicm9teWFsZ2lhIHN5bmRyb21lLgpJbiBteSBleHBlcmllbmNlLCBGaXRiaXQgaXMgdGhlIGtpbmcgb2YgbGlmZXN0eWxlIHRyYWNraW5nLiBNZWFuaW5nLCB5b3VyIGRheSB0byBkYXkgYWN0aXZpdGllcyBsaWtlIHdhbGtpbmcgdG8gd29yaywgc2xlZXBpbmcsIGFuZCB5b3VyIG92ZXJhbGwgYXZlcmFnZSBoZWFydCByYXRlIGFyZSBhbGwgdHJhY2tlZCAyNC83LCBhbmQgbm8gb3RoZXIgdHJhY2tlciBkb2VzIHRoYXQgYXMgb2YgeWV0LiBCdXQgd2hlbiBpdCBjb21lcyB0byBzZXJpb3VzLCBpbiBkZXB0aCBsb29rcyBhdCB5b3VyIGV4ZXJjaXNlIHRyYWluaW5nLCBpdCBmYWxscyBhIGJpdCBzaG9ydC4gClNpeCBkbyB0aGF0LCBpdCB0aGF0IHRoZXkgZG8gbm90IGhhdmUgdGhlIG1vcmFsIGp1c3RpZmljYXRpb246IGJlaW5nIGEgZGVvbnRvbG9naXN0IHRoZXkgY2FuIGtpbGwgYmVjYXVzZSB0aGF0IHVuZXRoaWNhbCwgZXZlbiBpZiBpdCBwcmV2ZW50cyB0aGUgd29yc2UgdGhpbmdzLiAKIlBhcnQgb2YgaXQgaXMgdG8gaGF2ZSBkaXN0cmlidXRpb25zLiAKQ2hpbGRyZW4ncyBiZWRyb29tcywgZGF5Y2FyZSBjZW50ZXJzLCBhbmQgb3RoZXIgY2hpbGQgY2FyZSBmYWNpbGl0aWVzIGFsbW9zdCBhbHdheXMgaGF2ZSBhdCBsZWFzdCBvbmUgcm9ja2luZyBjaGFpci4gVXN1YWxseSwgYSBjaGlsZHJlbidzIHJvY2tpbmcgY2hhaXIgaXMgbWFkZSBmcm9tIHBsYXN0aWMgdG8gYXZvaWQgdW5mb3J0dW5hdGUgYWNjaWRlbnRzLiBXb29kZW4gcm9ja2luZyBjaGFpcnMgYXJlIG1vcmUgYXBwbGljYWJsZSBmb3Igb2xkZXIgY2hpbGRyZW4uLiAKQXUgZGVtZXVyYW50LCBzaSBycGFyYXRpb25zIGlsIGRvaXQgeSBhdm9pciwgY2VsYSBkZXZyYWl0IGNvbmNlcm5lciBhdmFudCB0b3V0IGxlcyBkZXNjZW5kYW50cyBkZSBjZXMgZW5mYW50cywgZGUgY2VzIGZlbW1lcyBldCBkZSBjZXMgaG9tbWVzLCBkb250IGxhIHZpZSBhIGJhc2N1bCBzYW5zIHJldG91ciBkYW5zIGwnaG9ycmV1ciBldCBsYSBkc29sYXRpb24uIApVc2UgdGhlIGxvbmcga25pZmUgdG8gY3V0IGEgcGVudGFnb24gb3IgYSBoZXhhZ29uIGFyb3VuZCB0aGUgc3RlbS4gQXMgeW91IGN1dCBpbnRvIHRoZSB0b3Agb2YgdGhlIHB1bXBraW4sIG1ha2UgeW91ciBjdXRzIGFuZ2xlIHRvd2FyZHMgZWFjaCBvdGhlciBiZW5lYXRoIHRoZSBzdGVtLiAKR29vZ2xlIHRoZW4gcnVucyBhbiBhbmFseXNpcyBvbiB0aG9zZSBwbGFubmVkIHBheW1lbnRzIGFuZCBjb3JyZWN0cyB0aGVtIHNvIHRoYXQgdGhlcmUgaXMgbm8gZGVtb2dyYXBoaWMgYmlhcyBpbiBhbnkgZ3JvdXAgb2Ygc2ltaWxhciBlbXBsb3llZXMuIFRoaXMgeWVhciwgaW4gb25lIHBhcnRpY3VsYXIgZ3JvdXAgKEw0KSBvZiBhbGwgdGhlIGxvd2VyIGxldmVsIHNvZnR3YXJlIGVuZ2luZWVycyB0aGV5IGZvdW5kIHRoYXQgbWVuIHdvdWxkIGhhdmUgcmVjZWl2ZWQgbGVzcyBvZiB0aG9zZSBkaXNjcmV0aW9uYXJ5IGZ1bmRzIHRoYW4gd29tZW4gcmF0aGVyIHRoYW4gdGhlIG90aGVyIHdheSBhcm91bmQuIApBbHNvLCBhdCBubyBwb2ludCBkdXJpbmcgdGhhdCB2aWRlbyBkb2VzIFRydW1wIHNheSBhbnl0aGluZywgbGV0IGFsb25lIHRoYW5rIFZpZXRuYW0gZm9yIGl0cyBob3N0aW5nLiAKVGhlIHBob25lIHdhcyBkaXNjb25uZWN0ZWQgZnJvbSBjZWxsdWxhciwgc28gaGUgcHJldHR5IG11Y2ggdXNlZCBpdCBhcyBpUG9kIG92ZXIgd2kgZmkuIEhlIG5lZWRlZCBoZWxwIGRvd25sb2FkaW5nIGFuZCBtYW5hZ2luZyBoaXMgc29uZ3MsIGJlY2F1c2UgaGUgd291bGQgd29yayBvdXQgaW4gaGlzIHlhcmQgYSBsb3QgYW5kIGxvc2UgaGlzIHdpZmkgY29ubmVjdGlvbi4gCllvdSBrbmV3IGhvdyB0byBtYW5hZ2UuIEJ1dCB5b3Ugd2VyZSBhbHdheXMgcmVhZGluZyBvciBzdHVkeWluZyB0aGUgbWFuYWdlbWVudCBzdHlsZXMgb2Ygb3RoZXIgYWdlbmNpZXMgYW5kIGNvbXBhbmllcywgdHJ5aW5nIHRvIGdldCBiZXR0ZXIuIFRoYW5rIHlvdSBmb3IgYWxsIHRoZSBzdWJzY3JpcHRpb25zIHRvIHRoZSB0cmFkZSBwdWJzLiBJdCBzaG93ZWQgdGhhdCB5b3Ugd2VyZSBpbnRlcmVzdGVkIGluIG91ciBncm93dGggYXMgbXVjaCBhcyB5b3Vycy4KV293IHdoeSB3b3VsZCB5b3UgZ2F0ZWtlZXAgY2FyaW5nIGZvciB0aGUgZW52aXJvbm1lbnQ/IFNob3VsZG4ndCB3ZSBiZSBlbmNvdXJhZ2luZyBwZW9wbGUgdG8gY2FyZSBhYm91dCB0aGUgZW52aXJvbm1lbnQsIGFuZCBkZWZpbml0ZWx5IG5vdCBzaGFtaW5nIHRoZSBvbmVzIHdobyBkbyBjYXJlIGZvciAibm90IGNhcmluZyBlbm91Z2giPyBZb3VyIGludGVudGlvbnMgYXJlIGdvb2QsIGJ1dCBsZXQncyB3b3JrIG9uIHRoZSBwcm9jZXNzIHRoZXJlIGEgYml0LiBBdHRhY2tpbmcgcGVvcGxlIGZvciAibm90IGNhcmluZyBlbm91Z2giIHdpbGwgYm90aCBwdXNoIHRob3NlIHBlb3BsZSBhd2F5IGFuZCB0aGUgcGVvcGxlIHdobyBkb24ndCBjYXJlIGF0IGFsbC4gCihBbmQgeWV0IGNvbXBsYWluZWQgdGhhdCB3ZSBuZXZlciBhY3R1YWxseSBmdWNrZWQuIApJdCB3YXMgdG9vIGhhcmQuIApEJ2F1dHJlIHBhcnQsIG5vbWJyZXVzZXMgdHJhZGl0aW9ucyBwb3NlbnQgcHJvYmxtZXMsIGNvbW1lIHBldXQgbCdpbGx1c3RyZXIgbCdleGNpc2lvbi4gCkZpcnN0IGl0IHdhcyBNb25kYXkgQ291cGxlIGFuZCBub3cgdGhpcyEgVGhlIHByb2JsZW0gaXMgc2hlIGxpa2VzIHRvIHRlYW0gdXAgd2l0aCBwZW9wbGUgc2hlIGlzIGNvbWZvcnRhYmxlIHdpdGggICBLSkssIEhhaGEgb3IgSmkgU3VrIEppbiBpbnN0ZWFkIG9mIHRha2luZyB0aGUgdHJvdWJsZSB0byBzdGFydCBjb252ZXJzYXRpb25zIHdpdGggbWFsZSBndWVzdHMuU3BhcnRhY2UgaXMgZGlmZmVyZW50IGZyb20gTW9uZGF5IENvdXBsZS4gSmkgSHlvIGFuZCBHYXJ5IGRpZG4gaW50ZXJhY3QgbXVjaCBvdXRzaWRlIHRoZSBzaG93IHNvIHRoZSBsb3ZlbGluZSBkaWRuIGxvb2sgbGlrZSB0aGF0IG9mIHNpYmxpbmdzIGFuZCB0aGUgdmliZSB3YXMgdG90YWxseSBkaWZmZXJlbnQuIEluIHRoZSBjYXNlIG9mIHNwYXJ0YWNlLCBLSksgYW5kIEpIIGhhdmUga25vd24gZWFjaCBvdGhlciBmb3Igc28gbWFueSB5ZWFycyBhcyBmYW1pbHkuIAoiU2hlJ3MgYW4gYW1hemluZyBwZXJzb24uIFRvZ2V0aGVyLCB3ZSBqdXN0IHVuZGVyc3RhbmQgZWFjaCBvdGhlci4gCkdvIGludG8gc29tZSBiYXIgb3IgYXBwcm9wcmlhdGUgYXJlYSwgYW5kIHRoZXJlIGEgc2NyZWVuIHRoYXQgZGlzcGxheXMgYSBwaWN0dXJlIG9mIGJvdGggdW5pcXVlLCBhbmQgZHluYW1pYyBwcm9maWxlcyBvZiBOUENzIHdobyBhcmUgd2FudGVkLCBhbmQgdGhlaXIgcHJpY2UuIApBcmUgeW91IHdpbGxpbmcgdG8gZG8gaXQgc3RpbGw/IE1heWJlIGEgZGlubmVyIGZvciBqdXN0IHVzPyIgU29tZXRoaW5nIGFsb25nIHRob3NlIGxpbmVzIGFzIHRoZSBjb21tZW50IGFib3ZlIHN0YXRlZC4uIAphZG1pcmVkIEJpbGwgV2Fsc2ggYW5kIGZhdm9yZWQgQmF5IEFyZWEgZWF0ZXJpZXMKVGhpcyBpcyBhIHJlYmVsbGlvdXMgTW9ybW9uIHRlZW4gd2hvIGhhcyBzZWVuIHNvbWUgb2YgdGhlIHN0dWZmIHdyaXR0ZW4gaW4gdGhlIHNub3cgdGhyZXcgaW4gc29tZSBvdGhlciByZWJlbGxpb3VzIHN5bWJvbHMuIEknbSBzdXJwcmlzZWQgYW4gaW52ZXJ0ZWQgcGVudGFncmFtIG9yIHNvbWUgc3VjaCBhcyB3ZWxsLiBIaXMgVEJNIG1hbWEgaXMgc3VyZWx5IGNsdXRjaGluZyBoZXIgcGVhcmxzLiAKSWYgeW91IGNhbiBmaW5kIHRoZW0geW91IGNhbiB0YWtlIGEgbG9vayBhdCB0aGUgSFAgTWljcm9zZXJ2ZXIgR2VuOCwgdGhlIEdlbjEwIGhhc24gd29ya2VkIHdpdGggRnJlZU5BUyBpZiBJIHJlY2FsbCBjb3JyZWN0bHkuLiAKWW91IG1heSBub3QgcmVhbGl6ZSBpdCBpZiB5b3UganVzdCB0b3VjaCB0aGVtLCB0aGV5IGZlZWwgd2FybSBvciB3aGF0ZXZlciwgYnV0IHN0aWNrIGEgZ29vZCB0ZW1wIHNlbnNvciBpbiB0aGVyZSBhbmQgeW91IHNlZSB0aGUgdGVtcHMgaGl0IHdlbGwgb3ZlciAxMDBGIGJ5IHRoZSBMRUQgcmluZyBvZnRlbiBlbm91Z2gsIGlmIHlvdSBoYXZlIGEgbG9uZ2lzaCBvbmUuLiAKRmVtYWxlIGhvcm1vbmVzIGFsc28gYWZmZWN0IGEgd29tYW4ncyBmb290IGJvbmVzIGFuZCBsaWdhbWVudHMuIApFeHRyYWN0IHRoZSBjb250ZW50cyBvZi4gQ2xpY2sgdG8gRG93bmxvYWQhIEZpbGUgQXJjaGl2ZSBbMTkgLiBFWEUgUGF0Y2ggZnJvbSB0aGUgRmlsZSBBcmNoaXZlIHRvIHRoZSBCSU4gZGlyZWN0b3J5LiAKRGVzcGl0ZSBwbGF5aW5nIGluIG1hbnkgZXZlbnRzLCB0aGUgZmlyc3QgMTggbW9udGhzIGFmdGVyIER1aGFtZWwgYmlnIHdpbiBoYWRuIGdvbmUgYXMgd2VsbCBhcyBoZSwgb3IgdGhlIHBva2VyIHdvcmxkLCBoYWQgaG9wZWQuIApIb3cgbG9uZyB3aWxsIHdlIHB1dCB1cCB3aXRoIGFuIGV2ZW4gZ3JlYXRlciBjb25jZW50cmF0aW9uIG9mIHdlYWx0aCBpbiB0aGUgdG9wIDElIG9mIEFtZXJpY2Fucz8gaW4gY2FzZSB5b3UgaGF2ZW4gbm90aWNlZCBiZWNhdXNlIHlvdSB3ZXJlIHRvbyBib21iYXJkZWQgd2l0aCBoZXJvaWMgVVMgc29sZGllcnMgaW4gQWZnaGFuaXN0YW4sIHRoZXJlIHdhcyBhbiBldmVuIGdyZWF0ZXIgdHJhbnNmZXIgb2Ygd2VhbHRoIHRvIHRoZSB0b3AgMSUgb2YgQW1lcmljYW5zIGluIDIwMDkuClBsZWFzZSBsZXQgdXMga25vdyB3aGVuIGhlIGNvbWVzIGhvbWUhIEkgaG9wZSBoZSBpcyBqdXN0IG91dCBoYXZpbmcgYSBzYWZlIGFkdmVudHVyZS4gCkxhc2NpYW1vY2kgaW5maW5lIGludmVzdGlyZSBkYSB1bmEgdmVudGF0YSBkaSBvdHRpbWlzbW86IHBlbnNpZXJpIHBpYWNldm9saSBwcm9kdXJyYW5ubyBlZmZldHRpIHBpYWNldm9saSBlLCBxdWFuZG8gc2kgIHNlcmVuaSwgZmlkdWNpb3NpLCBvZ25pIGNvc2EgIHJpc29sdmliaWxlIGUgbGEgZmlkdWNpYSBpbiBub2kgc3Rlc3NpLCB1bml0YW1lbnRlIGFsbGEgY29zdGFuemEsIGNvbnNlbnRlIGRpIGFycml2YXJlIGEgdHJhZ3VhcmRpIGFsdHJpbWVudGkgaXJyYWdnaXVuZ2liaWxpLiAgVXNjaXJlIGRhbCB0dW5uZWwgZGkgcXVlc3RhIHJlYWx0IGluZmVybmFsZSBlIGRpcmlnaWFtb2NpIHZlcnNvIG51b3ZpIGluaXppLCB2ZXJzbyBxdWVsbGEgcmVhbHQgcGFyYWRpc2lhY2EgY2hlIHRhbnRvIGJyYW1hIGlsIG5vc3RybyBjdW9yZSAuLiAKVGhlIGZhbWlseSBkaW5uZXIgc2NlbmUgYWZ0ZXIgdGhlIG1vbmFzdGVyeSB2aXNpdCBpcyBib3RoIGZ1bm55IGFuZCBwYWluZnVsLCBhbmQgaXMgcHJvYmFibHkgb25lIG9mIHRoZSBiZXN0IHRoaW5ncyBJIGV2ZXIgcmVhZC4gSSBrZWVwIGltYWdpbmluZyBEb3N0b3lldnNreSBwb3N0aW5nIG9uIHIvcmFpc2VkYnluYXJjaXNzaXN0cy5CdXQgZm9yIHRoZSBsb3ZlIG9mIEdvZCwgdGhlIGZlbWFsZSBjaGFyYWN0ZXJzIGFyZSBzbyBGTEFULCBldmVyeSBzaW5nbGUgb25lIG9mIHRoZW0uIENoYXB0ZXIgYWZ0ZXIgY2hhcHRlciwgdGhleSBzY3JlYW0gYW5kIHJ1biBvdXQgb2Ygcm9vbXMgYW5kIGludG8gcm9vbXMsIGFuZCBpdCBoYXJkIHRvIG5vdCB0byBiZSBhbm5veWVkIGJ5IHRoZW0uIApCaWcgR2FtZSBCaW5nbzogUGxheSBBbG9uZyBBcyBZb3UgV2F0Y2ggVGhlIFN1cGVyIEJvd2wgT24gQ0JTIVdhbnQgdG8gZW5qb3kgdGhlIEJpZyBHYW1lIHdpdGggc29tZSBCaWcgRnVuISBXaHkgbm90IHBsYXkgb3VyIEJpZyBHYW1lIEJpbmdvIHdpdGggb3RoZXIgZm9vdGJhbGwgZmFucyBvbiBTdW5kYXkuIERvd25sb2FkIHRoZSBjYXJkcyBoZXJlIQpMb29rIGF0IGdvcmdlb3VzIGhvbWVzIG9uIFRWLCBpbiBtYWdhemluZXMsIG9yIG9uIHNvY2lhbCBtZWRpYSBhbmQgd2UgZ2V0IGx1bGxlZCBpbnRvIHRoaW5raW5nIHRoYXQgd2hhdCB3ZSBzaG91bGQgaGF2ZSwgc2F5cyBUYWxib3QuIElmIHdlIGRyaWxsIGRvd24gaW50byB0aGUgY29yZSBpZGVhIGJlaGluZCBMb3ZlIEl0IG9yIExpc3QgSXQsIGl0IGlzIHRoaXM6IFdoYXQgYXJlIHRoZSBwcmltYXJ5IGZ1bmN0aW9uYWwgZWxlbWVudHMgdGhhdCBhcmUgbmVlZGVkIHRvIHN1cHBvcnQgdGhlIGxpZmVzdHlsZSB0aGF0IHdlIHdhbnQgdG8gbGl2ZT8gVGhhdCB3aGF0IG91ciBob21lIGlzIGRlc2lnbmVkIHRvIGRvLiAKV2hpbGUgdGhlc2Ugd2VyZSBub3QgYXMgaW50ZW5zZSBhcyB0b2RheSdzIHJpZGVzLCBpbWFnaW5lIGhhdmluZyBvbmUgaW4gZXZlcnkgbWFqb3IgY2l0eS4gCkl0IGltcG9zc2libGUgdG8gY29uc2lkZXIgdGhlIHByZWNpc2Ugd2FudHMgYW5kIG5lZWRzIG9mIGV2ZXJ5IHNpbmdsZSBodW1hbiBiZWluZyBpbiBhIGNvdW50cnkuIApDciBNb3JhbiB3aWxsIGFzayB0aGUgY291bmNpbCB0byB3cml0ZSB0byBwb2tlciBtYWNoaW5lIG9wZXJhdG9ycyBpbiB0aGUgYXJlYSB0byByZXF1ZXN0IHRoZXkgZG8gdGhlaXJiaXQgdG8gaGVscCBwcm9ibGVtIGdhbWJsZXJzLiAKV2VsbCBpZiB0aGV5IGNsb3Nlc3QgY291c2lucyAoaXQgc2hvdWxkIGluZGljYXRlIHdoZXRoZXIgRlRETkEgY29uc2lkZXJzIHRoZW0gcmVtb3RlIG9yIG5vdCksIHRoZW4gdGhleSBhcmUgZ29pbmcgdG8gYmUgeW91ciByZWxhdGl2ZXMuIEl0IHZlcnkgbXVjaCBwb3NzaWJsZSB0aGF0IGFsbCBvZiB0aG9zZSBjbGFzc2lmaWVkIGFzIHJlbW90ZSBjb3VzaW5zIGNvdWxkIGJlIHlvdXIgZGlzdGFudCByZWxhdGl2ZXMgdG9vLiAKQW5kIHdlIGJ5IGZhciB0aGUgMSB3ZWFwb25zIG1ha2VycyBhbmQgZXhwb3J0ZXJzIHNvIG90aGVyIGNvdW50cmllcyAobW9zdGx5IE5hdG8pIHVzZSB0aGUgLjIyMyByb3VuZCBmb3IgdGhlIE0gMTYgdHlwZSBhc3NhdWx0IHJpZmxlLiAKSU1PIGl0IGlzIHNob2NraW5nIHRvIHNlZSB0aGUgZGV0YWlscyBvZiBvZiBoaWdoIHBheSBhcHBvaW50bWVudHMvaW5jcmVhc2VzIHRoYXQgRm9yZCBoYXMgbWFkZSBkdXJpbmcgaGlzIHRpbWUgaW4gb2ZmaWNlLgpJdCB3YXMgbGlrZSB0aGUgRCBEYXkgaW52YXNpb24sIHNheXMgTGVWYW5naWUuIE5vdyB0aGVyZSBtb3JlIGZhbWlsaWVzLCBiZXR0ZXIgc2VjdXJpdHksIGFuZCB0aGUgcGxheWVycyBhcmUgZmFuIGZyaWVuZGx5LiAKSXQgd2FzIGEgdmVyeSBuaWNlIHN1cnByaXNlIGZvciBtZS4gVGhhdCBzYWlkLCBJIGNhbiBvbmx5IGltYWdpbmUgdGhlIGdpZGRpbmVzcyBhbmQgc3VzcGVuc2lvbiBvZiAoZGlzICliZWxpZWYgd2hlbiB0aGUgbWFzcyBtYXJrZXQgcmVhZGVyc2hpcCBvZiBSb2JlcnQgSG9va2UgTWljcm9ncmFwaGlhIGdvdCBhIGxvb2sgZm9yIHRoZSBmaXJzdCB0aW1lIG9uIHdoYXQgdGhlIHNtYWxsIGNyZWVweSBjcmF3bGllcyB0aGF0IGxpdmVkIGFyb3VuZCB0aGVtIGxvb2tlZCBsaWtlIHVuZGVyIG1hZ25pZmljYXRpb24uIApXaW5kb3dzIDcgSG9tZSBQcmVtaXVtIG1ha2VzIGl0IGVhc3kgdG8gY3JlYXRlIGEgaG9tZSBuZXR3b3JrIGFuZCBzaGFyZSBhbGwgb2YgeW91ciBmYXZvcml0ZSBwaG90b3MsIHZpZGVvcywgYW5kIG11c2ljLiBZb3UgY2FuIGV2ZW4gd2F0Y2gsIHBhdXNlLCByZXdpbmQsIGFuZCByZWNvcmQgVFYuIEdldCB0aGUgYmVzdCBlbnRlcnRhaW5tZW50IGV4cGVyaWVuY2Ugd2l0aCBXaW5kb3dzIDcgSG9tZSBQcmVtaXVtLiBJdCBjYW4gaGVscCB5b3UgYmUgbW9yZSBwcm9kdWN0aXZlIGFuZCBwcm90ZWN0IHRoZSBjcml0aWNhbCBpbmZvcm1hdGlvbiB5b3UgbmVlZCB0byB3b3JrIHdpdGguIE1hbnkgcm91dGluZSB0YXNrcyBqdXN0IHRha2UgYSBjb3VwbGUgb2YgY2xpY2tzLCBzbyB5b3UgY2FuIHNwZW5kIGxlc3MgdGltZSBzZXR0aW5nIHVwIHByb2plY3RvcnMsIHByaW50ZXJzLCBhbmQgbmV0d29ya3MuIEVuaGFuY2VkIGJhY2t1cCBvcHRpb25zIGNhbiBoZWxwIHlvdSBwcm90ZWN0IHlvdXIgaGFyZCB3b3JrIHdpdGggYXV0b21hdGljIGJhY2t1cHMgdG8geW91ciBob21lIG9yIGJ1c2luZXNzIG5ldHdvcmsuIEFuZCB3aXRoIFdpbmRvd3MgWFAgTW9kZSwgeW91IGNhbiB1c2UgbW9zdCBvZiB5b3VyIFdpbmRvd3MgWFAgcHJvZ3JhbXMgaW4gV2luZG93cyA3LiBjaG9vc2UgRk9MRCBBTkQgU0tJUCwuIHRoZW4sLiBpbW1lZGlhdGVseSBzZWxlY3QgRVhJVEdBTUUsLiBiYWNrIGF0IHRoZSBtYWluIG1lbnUuIGNsaWNrIFRVVE9SSUFMLC4gdGhlbi4gY2xpY2sgdGhlIHRvcHR1dG9yaWFsIGNhbGxlZCB0dXRvcmlhbCwuIGFuZCB3aGVudGhleSBhcmUsLiBpdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiBiYWNrIHRvIHRoZSBtYWluIG1lbnUsLiBvbmx5IG5vdyBhbGwgdGhlaXIgY2FyZHNhcmUgc2hvd24uIEdvb2QgbHVjayBpdCB3b3JrcyBmb3IgbWUuIChGdWxsIEFuc3dlcikKRm9yIGFsbW9zdCBhIHllYXIgbm93IHdlIGhhdmUgaGVhcmQgc28gbXVjaCBhYm91dCB0aGUgTlJPIGFuZCB0aGUgMTh0aCBBbWVuZG1lbnQgdGhhdCBtYW55IGFyZSBmZWQgdXAgd2l0aCB0aGUgdG9waWMuIEV2ZXJ5IHRpbWUsIHRoZSBTdXByZW1lIENvdXJ0IGlzc3VlcyBhbiB1bHRpbWF0dW0gYW5kIHRoZW4gYmFja3MgZG93biwgY3JlYXRpbmcgc2VyaW91cyByZXNlcnZhdGlvbnMgaW4gdGhlIG1pbmRzIG9mIHRoZSBwdWJsaWMgYWJvdXQgaXRzIHdyaXQgYW5kIHNpbmNlcml0eS4gSSBhbSBmYXIgZnJvbSBiZWluZyBhIGxlZ2FsIGV4cGVydCwgYnV0IEkgYW0gZmFtaWxpYXIgd2l0aCBqdWRnbWVudHMgbWV0ZWQgb3V0IGJ5IFFhemlzIGluIHBhc3QgdGltZXMuIE9uZSBoYXMgb25seSB0byByZWFkIGFib3V0IHRoZSBsaXZlcyBvZiBIYXpyYXQgVW1hciBlIEZhcm9vcSAoUkEpLCBIYXpyYXQgVW1hciBCaW4gQWJkdWwgQXppeiAoUkEpLCBjYWxpcGhzIEhhcm9vbiBhbCBSYXNoaWQgYW5kIE1hbW9vbiBhbCBSYXNoaWQsIGFuZCBIYWpqYWogYmluIFl1c3VmLCBBYmR1bCBNYWxpaywgSmFsYWx1ZGRpbiBLaHdhcml6bSBTaGFoLCBNYWhtdWQgR2hhem5hdmkgYW5kIEFsYXVkZGluIEtoaWxqaSwgZXRjLiwgdG8gc2VlIGp1c3QgaG93IHF1aWNrbHkganVzdGljZSB3YXMgZGlzcGVuc2VkIGR1cmluZyB0aGVpciBydWxlLiBBbGwgY2FzZXMgd2VyZSBkZWNpZGVkIGluIGEgc2luZ2xlIGhlYXJpbmcgYW5kIG5vYm9keSBjb21wbGFpbmVkIG9mIGluanVzdGljZS4gQ29udHJhcnkgdG8gdG9kYXkgbGFyZ2UgYmVuY2hlcywgYSBzaW5nbGUgUWF6aSBkaXNwZW5zZWQganVzdGljZS4gTm9ib2R5IGNvdWxkIHJhaXNlIGEgZmluZ2VyIGF0IHRoZSBpbnRlZ3JpdHkgb2YgdGhlIFFhemkuIEJlZm9yZSB0aGUgUWF6aSwgS2hhbGlmYSBIYXpyYXQgVW1hciBlIEZhcm9vcSAoUkEpIGFuZCBhIHNsYXZlIHdlcmUgZXF1YWwsIGFzIHdlcmUgTWFobXVkIGFuZCBBeWF6LiBUaGUgUWF6aXMgY29tbWFuZGVkIHJlc3BlY3QgZHVlIHRoZSBqdWRnbWVudHMgdGhleSBwYXNzZWQsIG5vdCBieSBzdGF0ZW1lbnRzIGFuZC9vciB0aHJlYXRzLiBBdCB0aGUgcHJlc2VudCB0aW1lIHdlIGhhdmUgZXhhbXBsZXMgb2YgcXVpY2ssIG5vbiBkaXNjcmltaW5hdG9yeSBqdXN0aWNlIGluIFNhdWRpIEFyYWJpYSBhbmQgQ2hpbmEuCiJBdCB0aGF0IG1vbWVudCwgaXQgd2FzIHJlYWxseSB3YXMgJ09LIHdoYXQgaXMgUGxhbiAxLCBCIGFuZCBDPycgQW5kIGluIG1vc3Qgc2l0dWF0aW9ucywgZnJvbSBteSBleHBlcmllbmNlLCBtb3N0IHRlYW1zIHdoZW4gdGhleSBsb3NlIGEgcGxheWVyIGxpa2UgdGhhdCwgdGhleSBkb24ndCBldmVuIGhhdmUgYSBQbGFuIEEsIiBoZSBhZGRlZC4gIlNvIEkgcmVhbGx5IGdpdmUgYSBsb3Qgb2YgY3JlZGl0IHRvIG91ciBzY291dGluZyBkZXBhcnRtZW50IGFuZCBvdGhlciBwZW9wbGUgd2l0aGluIHRoZSBvcmdhbml6YXRpb24gdGhhdCBoZWxwZWQgdXMgdG8gY2xlYXIgdGhlIGFpciBvbiB3aGF0IHR5cGUgb2YgdGFyZ2V0cyB3ZSBjb3VsZCBnbyBhZnRlci4iLiAKRm9yIGV4YW1wbGUsIGEgbG90IG9mIHNpbXBsaWZpY2F0aW9ucyBmcm9tIFBJTyByZWNvbW1lbmQgZ29pbmcgd2l0aCBhIHJhbmdlIGNoZWNrIG9yIHJhbmdlIGJldCAoMS8zIHBvdCkgc3RyYXRlZ3kgaW4gM0JQIE9PUCBDQmV0LiAKSXQncyBkZWZpbml0ZWx5IG5vciBzb21ldGhpbmcgeW91IGNhbiBzb3J0IG91dCBvbiB5b3VyIG93biwgYnV0IGEgZ29vZCBlbGRlciBjYXJlIGxhd3llciB3aWxsIGtub3cgd2hhdCBvcHRpb25zIG1ha2UgdGhlIG1vc3Qgc2Vuc2UuLiAKTWluaW11bSB3YWdlIGlzICQxMS4yNS4gCkJlaW0gU3RhcnQgZGVyIDEuIFRyYW5zdnVsY2FuaWEgaW0gSmFociAyMDA5IGdhYiBlcyBudXIiIDUwMCBUZWlsbmVobWVySW5uZW4sIGRvY2ggc2Nob24gendlaSBKYWhyZSBzcHRlciBoYXR0ZSBzaWNoIGRpZSBaYWhsIG1laHIgYWxzIHZlcmRvcHBlbHQuIApDaG9vc2luZyBhIHNwZWNpZmljIHNjZW50IHdpdGggYSB0aGVyYXB5IGluIG1pbmQgaXMgb25seSBoYWxmIHRoZSBiYXR0bGUuIElmIHRoZSBwZXJzb24gZG9lc24gbGlrZSB0aGUgc2NlbnQsIHNoZSB3b24gdXNlIGl0LiBGaW5kIG91dCB3aGF0IHRoZSBwZXJzb24gbm9ybWFsbHkgbGlrZXMuIApKdWxpZXR0YS9HYWVsaW8gYXJlIG15IG5ldyBzaGlwLCB0aGV5IGdldCBhbG9uZyByZW1hcmthYmx5IHdlbGwgbm93IHRoYXQgdGhleSBtYW5hZ2VkIHRvIHdvcmsgb3V0IHRoZSBncmVhdGVyIHBhcnQgb2YgdGhlaXIgcGVyc29uYWwgaXNzdWVzLiBTaGUgcmVzaXN0ZWQgYWJhbmRvbmluZyBoZXIgaHVtYW5pdHksIGFuZCBoZSB0aHJldyBoaXMgYXdheSBhbmQgcmVnYWluZWQgaXQ7IG5vdyB0aGV5IGNhbiB3YWxrIHRoZSBzYW1lIHBhdGggYXMgZnVuY3Rpb25hbCBodW1hbiBiZWluZ3MuCkVxdWFsIGFtb3VudHMsIG5vdCB0aGlzICJJIG1ha2UgbW9yZSBzbyBJIGdldCBtb3JlIiBzdHVmZi4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uUFVOVEVSUyBsb3N0IGNsb3NlIHRvICQ0OCBtaWxsaW9uIGRvbGxhcnMgb24gcG9rZXIgbWFjaGluZXMgaW4gdGhlIEdyZWF0ZXIgQmVuZGlnbyBhcmVhIGluIHRoZSAyMDE0LzIwMTUgZmluYW5jaWFsIHllYXIuIFRoZSBsb3NzIG9mICQ0Ny43IG1pbGxpb24gaXMgdXAgb24gbGFzdCB5ZWFyJ3MgZXhwZW5kaXR1cmUgb2YgJDQ2LjIgbWlsbGlvbi4gCkJ1dCB0aGUgbW9zdCBpbXBvcnRhbnQgcG9rZXIgc3RyYXRlZ3kgb2YgYWxsIGlzOiBuZXZlciBmb3JtIGEgcGF0dGVybiBvZiBwbGF5LiBCZWluZyBhYmxlIHRvIGRpc2d1aXNlIHlvdXIgcGxheSBtYXkgYmUgdGhlIG1vc3QgdmFsdWFibGUgcG9rZXIgc3RyYXRlZ3kgeW91IGNvdWxkIGhhdmUgYnV0IHRoZW4geW91IG11c3QgcmVtZW1iZXIgdG8gYXBwbHkgdGhlbSBhcyB2YXJpZWQgYXMgcG9zc2libGUuIFRoaXMgd2F5LCB5b3UgYXZvaWQgYmVpbmcga25vd24gdG8geW91ciBvcHBvbmVudHMgdGhlcmVieSBsZXNzZW5pbmcgdGhlIGNoYW5jZXMgb2YgbG9zaW5nIGJpZyBiZXRzLgpMYWR5IEdhZ2EKVGhhdCdzIG9ubHkgInRvbyBtdWNoIiB3aGVuIHlvdSBibHVkZ2VvbiB0aGUgb3RoZXIgcGxheWVycyB3aXRoIGFsbCB0aGF0IGluZm9ybWF0aW9uIGluIGEgd2F5IHRoYXQgZG9lc24ndCBmZWVsIG9yZ2FuaWMuLiAKQSBnb29kIHBvcnRpb24gb2YgbXkgdGltZSBpcyBjcmVhdGluZyBjb21wbGV4IHVucmVhbCBtYXRlcmlhbHMgdGhhdCdyZSBlYXN5IGZvciBhcnRpc3RzIHRvIHVuZGVyc3RhbmQsIGRvaW5nIHRoaW5ncyBpbiBzdWJzdGFuY2UgZGVzaWduZXIgdGhhdCdyZSBhcyB2ZXJzYXRpbGUgYXMgcG9zc2libGUgc28gcGVvcGxlIGNhbiB1c2UgdGhlbSB0byBkbyBhbGwgc29ydHMgaW4gcGFpbnRlci4gClRoaXMgd2FzIGEgc2ltcGxlIGluc3RhbmNlIG9mIGFza2luZyBhbmQgb2J0YWluaW5nIHBlcm1pc3Npb24gdG8gZmVlbCBhIHBlcnNvbiBnYXJtZW50ICh0aGVpciBwYW50cykgW3RoaXMgd2FzIGFuIGF1dGlzdGljIHNlbnNvcnkgZGVhbF0uIApJdCBhbHNvIHRhbGtlZCBhYm91dCB0aGluZ3MgeW91IG5ldmVyIGNvbnNpZGVyIHdoaWxlIGRyaXZpbmcgYSBjYXIsIGxpa2Ugd2hlcmUgdG8gcG9zaXRpb24geW91cnNlbGYgaW4gYSBsYW5lLCBldGMuIEZvciByZWZlcmVuY2UsIEkgYWxzbyBoYXZlIGRyaXZlbiBzdGljayBzaGlmdCBjYXJzIGZvciB0aGUgcGFzdCA4IHllYXJzIGFuZCBteSBjdXJyZW50IGNhciB3YXMgc3RpY2suIEl0IHRoZSBzYW1lIHByaW5jaXBsZXMgb2J2aW91c2x5LCBidXQganVzdCBhIGxpdHRsZSBsZXNzIGludHVpdGl2ZSBiZWNhdXNlIHlvdSBzaGlmdCB3aXRoIHlvdXIgZm9vdCBub3cuIApMb3dlJ3MgY2xvc2luZyAzMSBDYW5hZGlhbiBzdG9yZXMKSW5qdXJpZXMgb2Z0ZW4gZGVuaWVkIFN0IEtpbGRhIGl0cyBiZXN0IHNpZGUgb3ZlciB0aGUgcGFzdCBmb3VyIHllYXJzIGFuZCB0aGV5IGJlbGlldmUgYmV0dGVyIHRyYWluaW5nIGZhY2lsaXRpZXMgd2lsbCBoZWxwIHRoZWlyIHB1cnN1aXQgb2YgYWRkaW5nIGFub3RoZXIgcHJlbWllcnNoaXAgdG8gdGhlaXIgMTk2NiB0cml1bXBoLiAKSXQncyBhbiBleGhhdXN0aW5nLCAyNC83LCAzNjUgZGF5cyBhIHllYXIgcG9zaXRpb24sIHdoZXJlIGVhY2ggZGF5IHlvdSdyZSBub3QgZXZlbiBzdXJlIGhvdyBtYW55IG9mIHRoZSBPUFAncyAzNTAgcGx1cyBtdW5pY2lwYWxpdGllcyBhbmQgSW5kaWdlbm91cyBjb21tdW5pdGllcyB5b3UnbGwgYmUgdmlzaXRpbmc7IGhvdyBtYW55IG9mIHRoZSA5LDAwMCBlbXBsb3llZXMgeW91J2xsIG1lZXQ7IGFuZCBob3cgbXVjaCBvZiB0aGUgb3ZlciBvbmUgYmlsbGlvbiBkb2xsYXIgYnVkZ2V0IHlvdSdsbCBiZSBmaWdodGluZyB0byByZXRhaW4uIAoiV29tZW4gZ2VuZXJhbGx5IGxpa2UgdG8gZmVlbCBpbnRpbWFjeSBvZiBzb21lIHNvcnQuIEtub3dpbmcgdGhlIHBlcnNvbiB0aGV5J3JlIHdpdGggaXMgYWN0dWFsbHkgZ29pbmcgdG8gZW5qb3kgdGhlIG1vbWVudCBhbmQgYm90aCBvZiB5b3UgYXJlIGdvaW5nIHRvIGdldCBvdXQgb2YgaXQgd2hhdCB5b3Ugd2FudCBhbmQgd2FsayBhd2F5IHRoaW5raW5nIHRoYXQgd2FzIGdvb2QgaW5zdGVhZCBvZiBub3QgZmVlbGluZyBzbyBncmVhdCBhYm91dCBpdCBpcyBpbXBvcnRhbnQuIi4gCkl0J3Mgbm90IG9uZSBhZ2VuY3kgdmVyc3VzIGFub3RoZXIuIE9yIG9uZSBzcGVjaWFsaXN0IHRlYW0gdmVyc3VzIGFub3RoZXIuCkFsc28sIG1ha2Ugc3VyZSB0byByZWNvZ25pemUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBwcm9jcmFzdGluYXRpb24gYW5kIGxhY2sgb2YgZGlzY2lwbGluZSBpbiB5b3VyIG11c2ljIHZzIGJlaW5nIGNyZWF0aXZlbHkgZW1wdHkuIElmIHlvdSBjYW4gc2l0IGRvd24sIGFuZCBwbGF5L2NvbXBvc2UvcHJvZHVjZS9qYW0vZG93aGF0ZXZlcnlvdWRvIGJ1dCBmaW5kIGl0IHVuaW5zcGlyaW5nIGFuZCBpcnJpdGF0aW5nLCBzdG9wISBPbmNlIHlvdSBwcm92ZW4gdG8geW91cnNlbGYgdGhhdCB5b3UgaGF2ZSB0aGUgZGlzY2lwbGluZSB0byBhY3R1YWxseSB3b3JrLCBmaW5kaW5nIGl0IGxpa2UgdGhpcyBtZWFucyB5b3UgYXJlIGNyZWF0aXZlbHkgemVybyBXb3JraW5nIGxpa2UgdGhpcyByZXN1bHRzIGluIGZydXN0cmF0aW9uLCBhbmQgc3Vja3MuIApNZXNzYWdlcyBmcm9tIFdoaXNwZXIgb3IgT21lZ2xlIGFyZSBvbmx5IGFsbG93ZWQgb24gV2VkbmVzZGF5cy4KQnV0IGZvciBtZSwgSSBoYXZlbiBiZWVuIGludGVyZXN0ZWQgaW4gYW4gRlBTIHNpbmNlIHRoZXkgYWxsIG1vdmVkIHRvIHRoZSB0aW55IG1hcC9mb3JjZWQgY29uZmxpY3QgbW9kZWwuIFRvIG1lLCB0aGUgYnJpbGxpYW5jZSBvZiB3aGF0IEVsbGVuIGRvZXMgaXMgdGhhdCBvbiB0aGUgc3VyZmFjZSBzaGUganVzdCBkb2luZyB0byBtZW4gd2hhdCB3ZSBoYXZlIGRvbmUgdG8gd29tZW4gZm9yIGVvbnMuIEJ1dCBJIGNhbiBlc2NhcGUgdGhlIGlkZWEgdGhhdCBzaGUgYW5kIGhlciBwcm9kdWNlcnMgYXJlIGtlZW5seSBhd2FyZSBvZiB0aGUgb3RoZXIgbWVzc2FnZSBhbmQgYXJlIGRvaW5nIHRoaW5ncyBsaWtlIHRoaXMgdG8gbWFrZSBwZW9wbGUgdGhpbmsuLiAKUmVsZWFzZWQganVzdCB0aHJlZSBkYXlzIGFmdGVyIHRoZSBhbGJ1bSB0cmFpbGVyLCB0aGUgcHJvamVjdCdzIGxlYWQgc2luZ2xlLCB3aXRoIGl0cyBza2l0dGVyaW5nIFRpbWJhbGFuZCBiZWF0IGFuZCBpdHMgbHlyaWNzIGRlbWFuZGluZyB0aGUgbGlzdGVuZXIgdG8gInB1dCB5b3VyIGZpbHRoeSBoYW5kcyBhbGwgb3ZlciBtZSwiIGZlbHQgZW50aXJlbHkgb3V0IG9mIHN0ZXAgd2l0aCB3aGF0IFRpbWJlcmxha2UgaGFkIGJlZW4gYWR2ZXJ0aXNpbmcuIEhvdyB3YXMgdGhpcyB0cmFjaywgd2hpY2ggZmVsdCBsaWtlIGEgbGltcCBsZWZ0b3ZlciBmcm9tIGhpcyBGdXR1cmVTZXgvTG92ZVNvdW5kcyBkYXlzLCBpbnNwaXJlZCBieSBoaXMgZmFtaWx5IG9yIHdoZXJlIGhlIGNhbWUgZnJvbT8gV2VyZSB3ZSBiZWluZyBQdW5rJ2Q/IFdoYXQgd2FzIGdvaW5nIG9uIGhlcmU/Ckkgbm90IGdvbm5hIGRvd252b3RlIHlvdSBiZWNhdXNlIG1heWJlIEVuZ2xpc2ggaXNuIHlvdXIgZmlyc3QgbGFuZ3VhZ2UuIEJ1dCB0aGUgZGlhbG9ndWUgaW4gdGhlIHBpY3R1cmUgZG9lcyBub3QgYWN0dWFsbHkgc2F5IHRoYXQgdGhlIGtleSBvcGVucyBhbGwgbG9ja3MuIFRoZSBwaHJhc2UgImFsbCBzb3J0cyBvZiIgbWVhbnMgdmFyaW91cyBraW5kcywgYSB2YXJpZXR5IG9mIHR5cGVzIG9mIHNvbWV0aGluZy4gSXQgYSBjb21tb24gRW5nbGlzaCBleHByZXNzaW9uLCBhbmQgSSBndWVzcyBpdCBpcyBwcmV0dHkgY29uZnVzaW5nIGJlY2F1c2Ugb2YgdGhlIHVzZSBvZiB0aGUgd29yZCAiYWxsIi4gSXQgaW1wbGllcyB0aGF0IGFsbCBraW5kcyBvZiBsb2NrIGNhbiBiZSBvcGVuZWQsIHN1Y2ggYXMgZG9vciBsb2NrcywgdHJlYXN1cmUgY2hlc3QgbG9ja3MsIGdhdGUgbG9ja3MsIHNlY3JldCB0dW5uZWwgbG9ja3MsIHdoYXRldmVyLiBCdXQsIG5vdCBuZWNlc3NhcmlseSBldmVyeSBzaW5nbGUgZG9vciBsb2NrIG9yIGV2ZXJ5IHNpbmdsZSB0cmVhc3VyZSBjaGVzdCBsb2NrIHRoYXQgZXhpc3RzLgpJIGxvdmUgZ3JhcGhpYyBkZXNpZ24gYW5kIGV2ZW50IHBsYW5uaW5nLiBJIHRlbmQgdG8gYmUgcHJvamVjdCBvcmllbnRlZCwgYW5kIGFjdHVhbGx5IHdvcmsgYmV0dGVyIGluIGEgZmFzdCBwYWNlZCBlbnZpcm9ubWVudCB0aGF0IGFjdGl2YXRlcyBteSBwYW5pYyBidXR0b25zLCBhbGxvd3MgbWUgdG8gcmVzZWFyY2ggbmV3IHRoaW5ncyBhbGwgdGhlIHRpbWUsIGFuZCB3b3JrIGluIHdheXMgdGhhdCBhcmUgbGVzcyA5IDUgYW5kIG1vcmUsIEFIIEkgaGF2ZSB0byB0aHJvdyB0aGlzIHRoaW5nIHRvZ2V0aGVyIGluIGEgd2VlayEhISEgSSB0aGVuIGNhbiB0YWtlIGEgd2VlayBvciB0d28gb2ZmIGFmdGVyIGEgYmlnIGRlYWRsaW5lIGlzIG1ldC4gClRoaXMgdGhvdWdodCBleGVyY2lzZSB3YXMgdG8gaGlnaGxpZ2h0IGhvdyBlYXN5IGl0IGNhbiBiZSBmb3IgdGhlIG1hbnkgcGVvcGxlIHVzaW5nIGNvbnRyYWNlcHRpdmVzIHRvIHN0aWxsIGFjY2lkZW50YWxseSBnZXQgcHJlZ25hbnQuLiAKSGUgYXNrZWQgd2hhdCBJIGZlZWwgY29tZm9ydGFibGUgYWJvdXQgaGltIHNwZW5kaW5nIG9uIGEgcmluZywgYW5kIHdlIGJvdGggdGhpbmsgdGhhdCAkNTAwIGlzIGJvdGggYnVkZ2V0IGZyaWVuZGx5LCBhbmQgc29tZXRoaW5nIHdlIGJvdGggc3RpbGwgYmUgcHJvdWQgb2YsIGFuZCBJIGJlIGhhcHB5IHRvIHdlYXIgZXZlcnkgZGF5IGZvciB0aGUgcmVzdCBvZiBteSBsaWZlIChoaXMgcmluZyB3aWxsIHByb2JhYmx5IGJlIGFyb3VuZCAkMjUwKS4uIApUaGVuIGdvIHRvIHRoZSBsb2NrZXIgcm9vbSB0byBmaW5kIGJheHRlciwgVGhlbiBjaG9zZSB0aGUgMm5kIHBocmFzZS4gCk9QIGxhaWQgb3V0IHNjZW5hcmlvcyB3aGVyZSB3ZSBmaW5pc2ggb3VyIHJlbWFpbmluZyBnYW1lcyBldmVuIGFuZCBwb3NzaWJseSBmYWxsIG91dCBvZiB0aGUgdG9wIHRocmVlLiAKV2hlbiBJIHdhcyBsYXN0IHRoZXJlIHdlIGNvdWxkbiBsZWF2ZSBvdXIgaG9tZXMgYmV0d2VlbiA2YW0gOHBtLiAKVG9wcGVkIG9mZiB0aGUgZ2FzIHRhbmsgYnV0IHdoZW4gd2UgcmV0dXJuZWQgdGhlIGNhciwgdGhlIG1hbiBjaGVja2VkIHRoYXQgbHR0bGUgdGFuayBuIHRoZSB0cnVuayBhbmQgc2FkIHQgd2FzIGVtcHR5LiBXZSB3ZXJlIHNvIGNvbmZ1c2VkLiAKSWRyaXMgRWxiYSBtYWtlcyByb21hbmNlIHdpdGggZm9ybWVyIE1pc3MgVmFuY291dmVyIG9mZmljaWFsIGF0IFRJRkYKVGhlIHNpZ24gdGhlbiB3b3VsZCAiYmUgdmlzaWJsZSBhdCBuaWdodCwgZXhjZXB0aW5nIGluIGNhc2VzIG9mIHVudXN1YWwgZGFya25lc3MsIGFuZCBtYXkgZXZlbiB0aGVuLCBpZiBuZWNlc3NhcnksIGJlIHJlYWQgd2l0aCB0aGUgZmluZ2VycyIuIE15IHdvcmQuIApXZSBrbm9ja2VkIHRoZSBpbmR1c3RyeSBzdGFuZGFyZCBkd2VsbCB0aW1lIG91dCBvZiB0aGUgcGFyazsgd2Ugd2VyZSBhYmxlIHRvIHB1bGwgb2ZmIGFuIGF2ZXJhZ2UgdGltZSBzcGVudCBpbiB0aGUgYWN0aXZhdGlvbiBvZiAxNCBtaW51dGVzLCBub3QgdG8gbWVudGlvbiBhdHRyYWN0IG1pbGxpb25zIG9mIHZpc2l0b3JzLiBJdCBtYXkgc291bmQgbGlrZSBhIGNvbnRyYWRpY3Rpb24sIGJ1dCBpbiB0b2RheSdzIHViZXIgY29ubmVjdGVkIGxhbmRzY2FwZSwgdGVjaG5vbG9neSBoYXMgdGhlIHBvdGVudGlhbCB0byBoZWxwIGJyYW5kcyBvZmZlciBhIG1vcmUgaHVtYW4gZXhwZXJpZW5jZSBmb3IgY3VzdG9tZXJzLi4gCk15IGh1c2JhbmQgaXMgZnJlcXVlbnRseSB1bmFibGUgdG8gbGVhdmUgYmVkIHVudGlsIGhpcyBtZWRzIGFyZSB3b3JraW5nLiBBdCBteSB3b3JzdCwgZXZlbiB3aXRoIHRoZSBtZWRzIEkgaGF2ZSBiZWVuIG9uIGJlZHJlc3QgNCBkYXlzIGEgd2VlayB0byBmdW5jdGlvbiBpbiBhIG1pbmltYWwgZmFzaGlvbiBmb3IgdGhyZWUgZGF5cyBhIHdlZWsuIEluIHRoZSB3b3JzdCBjYXNlcywgcGVvcGxlIGNvbW1pdCBzdWljaWRlIGZyb20gdGhlIGV4dHJlbWUgcGFpbi4gCkFQUExFIExvZ2ljIFBybyA5ICAgTG9naWMgU3R1ZGlvIFYyLjEgQWNhZGVtaWMuIApEaWQgaXQgYWdhaW4gYmVjYXVzZSBldmVyeW9uZSBoYWQgYSBncmVhdCB0aW1lLiBJdCBhIGxvdCBvZiByaXNreSBmdW4gbG92ZXJzLiAkMjUwIGJ1eSBpbiBnYXZlIHBva2VyIHBsYXllcnMgdGhlIGNoYW5jZSB0bywgd2VsbCwgcGxheSBwb2tlci4gClRoZXJlIHdhcyBvbmx5IGV2ZXIgb25lIGdyb3VwIHRoYXQgd2FzIGFjdHVhbGx5IGdvaW5nIHRvIGluc3RpZ2F0ZSB2aW9sZW5jZSB0aGVyZS4uIApaZWFsIGZvciBjYXJuYWdlIGluc3BpcmVkIExhcyBWZWdhcyBzaG9vdGVyCkkgaGF2ZSBhIGZyaWVuZCB3aG8gZG9lcyBhIFRoYWkgbWFzc2FnZSBmdXNpb24gdGVjaG5pcXVlIGFuZCBoYXMgbWFuYWdlZCB0byBmaXQgaXQgd2l0aGluIHRoZSBTT1AgYnkgZWxpbWluYXRpbmcgYWxsIGZvbGsgdGVybWlub2xvZ3kvVENNIHBoaWxvc29waHkgYW5kIGNyZWF0aW5nIGN1c3RvbSB0ZXJtcyBjb21iaW5hdGlvbnMgc3VjaCBhcyAiZHluYW1pYyBmbG9vciBtYXQgam9pbnQgbW9iaWxpemF0aW9ucywgcGFzc2l2ZSBzdHJldGNoaW5nIGFuZCBtb3ZlbWVudCBjb29yZGluYXRlZCBtdXNjbGUgcmVsZWFzZSIsIGV0Yy4gCkluIGEgcmVzcG9uc2UgdG8gdGhlIGF1ZGl0LCB0aGUgRGVwYXJ0bWVudCBvZiBUcmFkZSBhbmQgSW52ZXN0bWVudCBzYXlzIHRoYXQgInNvbWUgb2YgdGhlIG9ic2VydmF0aW9ucyBpbiB0aGUgcmVwb3J0IGRvIG5vdCB0YWtlIGFjY291bnQgb2YgdGhlIHByaW5jaXBsZXMgdW5kZXJwaW5uaW5nIHRoZSBzY2hlbWUgb3BlcmF0aW9uLCBtdWNoIG9mIHdoaWNoIGlzIGRldGVybWluZWQgYnkgZ292ZXJubWVudCBwb2xpY3kiLiBBIHNwb2tlc21hbiBmb3IgTXIgU291cmlzIHNhaWQgdGhlIENvYWxpdGlvbiBoYWQgZmxhZ2dlZCBpdHMgaW50ZW50aW9uIHRvIGZ1bmQgdGhlIHByb21pc2VzIGZyb20gdGhlIENsdWJHcmFudHMgc2NoZW1lIGJlZm9yZSB0aGUgZWxlY3Rpb24uIEhlIHNhaWQgTXIgU291cmlzIGhhcyBhcHByb3ZlZCB0aGUgZXN0YWJsaXNobWVudCBvZiBhIG5ldyBDbHViR3JhbnRzIEZ1bmRzIGNvbW1pdHRlZSB0byBzdXBwb3J0IHRoZSBtaW5pc3RlciBpbiBjb25zaWRlcmluZyBhcHBsaWNhdGlvbnMgZm9yIENhdGVnb3J5IDMgZ3JhbnRzIGFuZCBkZXZlbG9wIG1lY2hhbmlzbXMgdG8gbW9uaXRvciBleHBlbmRpdHVyZS4gCkRvbid0IGxldCB0aGF0IHdvcmsgc2NoZWR1bGUgYW5kIHBhaW4gaW4geW91ciBuZWNrIGFuZCBiYWNrIHN0b3AgeW91IG9uIHlvdXIgd2F5IHRvIHJlbGF4YXRpb24sIGVuam95IHNvbWUgZ3JlYXQgbWFzc2FnZSBhbmQgbGV0IGl0IHJlc3QuIE5ldmVyIGxldCB5b3VyZGFpbHkgcm91dGluZSBjYXVzZSByZWFsIGFueGlldHkgb24gaXQgYW5kIGluanVyeSB5b3VyIGJvZHksIGdldCBhbWFzc2FnZXIgYW5kIHlvdSdsbCBsb3ZlIGZhbnRhc3RpYyBtYXNzYWdlIGludGhlIGNvbWZvcnQgb2YgeW91ciBwZXJzb25hbCBob21lLiBGb3JnZXQgYWJvdXQgdGhlIHJhdyBuZWNrIGFuZCB0aGUgZXh0cmVtZWx5IGRlYmlsaXRhdGluZyBmZWVsaW5nLCBhIHNob3VsZGVyIGFuZCBuZWNrIG1hc3NhZ2VyIGlzIHRoZSByZW1lZHkgeW91J3ZlIGJlZW4gbG9va2luZyBmb3Igc3VjaCBhIGxlbmd0aHl0aW1lLiBNZXJlbHlnZW51aW5lIHJlbGlldmUgZnJvbSBwYWluLCBubyBtb3JlIG1lZGljaW5lcyBhbmQgb2ludG1lbnRzIGlzIG5vdyBwb3NzaWJsZSB3aXRoIGEgcHJvcGVyIG1hc3NhZ2VyIHVzZWQgb24gYSByZWd1bGFyIGJhc2lzLiBPdXIgcHJpbWFyeSBnb2FsIGhlcmUgaXMgcHJlc2VudGluZyB5b3UgdmFyaW91cyBpZGVhcyBsaWtlIGV4YWN0bHl3aGF0IGlzIGEgbmVjayBtYXNzYWdlciwgd2h5IHNob3VsZCB5b3UgdXNlIG9uZSwgaG93IGNhbiBpdCBpbmZsdWVuY2UgeW91ciBjZXJ2aWNhbCBuZWNrIGFuZHNob3VsZGVycywgd2hpY2ggb25lIGlzIHRoZSBiZXN0IG9uZSBmb3IgeW91IGFuZCB3aGVuIHlvdSBuZWVkIHRvIHRyeSBvdXQgb25lLgpTbyBmYXIgaW52ZXN0aWdhdG9ycyBiZWxpZXZlIHRoZSBmaXJlYXJtcyB3ZXJlIHB1cmNoYXNlZCBsZWdhbGx5LgpJdCBhbHNvIHNheXMgc29tZXRoaW5nIGFib3V0IHRoZSBmYWNpbGUgbmF0dXJlIG9mIENHSSBhdCB0aGlzIHBvaW50IHdoZXJlIGl0IGNhbiBiZSB1c2VkIHRvIG1ha2UgYW4gZWZmb3J0bGVzcyBidWRkeSBjb21lZHkgd2l0aG91dCBzaG93Y2FzaW5nIHRoZSBDR0kuLiAKIk1vc3Qgb2YgdGhlIG1vcmUgY29tcGxleCBlbW90aW9ucyBhcmUgY29tbW9uIHRvIHRoZSBoaWdoZXIgYW5pbWFscyBhbmQgb3Vyc2VsdmVzLiBFdmVyeSBvbmUgaGFzIHNlZW4gamVhbG91cyBhIGRvZyBpcyBvZiBoaXMgbWFzdGVyJ3MgYWZmZWN0aW9uLCBpZiBsYXZpc2hlZCBvbiBhbnkgb3RoZXIgY3JlYXR1cmU7IGFuZCBJIGhhdmUgb2JzZXJ2ZWQgdGhlIHNhbWUgZmFjdCB3aXRoIG1vbmtleXMuIFRoaXMgc2hld3MgdGhhdCBhbmltYWxzIG5vdCBvbmx5IGxvdmUsIGJ1dCBoYXZlIHRoZSBkZXNpcmUgdG8gYmUgbG92ZWQuIEFuaW1hbHMgbWFuaWZlc3RseSBmZWVsIGVtdWxhdGlvbi4gVGhleSBsb3ZlIGFwcHJvYmF0aW9uIG9yIHByYWlzZTsgYW5kIGEgZG9nIGNhcnJ5aW5nIGEgYmFza2V0IGZvciBoaXMgbWFzdGVyIGV4aGliaXRzIGluIGEgaGlnaCBkZWdyZWUgc2VsZiBjb21wbGFjZW5jeSBvciBwcmlkZS4gVGhlcmUgY2FuLCBJIHRoaW5rLCBiZSBubyBkb3VidCB0aGF0IGEgZG9nIGZlZWxzIHNoYW1lLCBhcyBkaXN0aW5jdCBmcm9tIGZlYXIsIGFuZCBzb21ldGhpbmcgdmVyeSBsaWtlIG1vZGVzdHkgd2hlbiBiZWdnaW5nIHRvbyBvZnRlbiBmb3IgZm9vZC4gQSBncmVhdCBkb2cgc2Nvcm5zIHRoZSBzbmFybGluZyBvZiBhIGxpdHRsZSBkb2csIGFuZCB0aGlzIG1heSBiZSBjYWxsZWQgbWFnbmFuaW1pdHkuIFNldmVyYWwgb2JzZXJ2ZXJzIGhhdmUgc3RhdGVkIHRoYXQgbW9ua2V5cyBjZXJ0YWlubHkgZGlzbGlrZSBiZWluZyBsYXVnaGVkIGF0OyBhbmQgdGhleSBzb21ldGltZXMgaW52ZW50IGltYWdpbmFyeSBvZmZlbmNlcy4gSW4gdGhlIFpvb2xvZ2ljYWwgR2FyZGVucyBJIHNhdyBhIGJhYm9vbiB3aG8gYWx3YXlzIGdvdCBpbnRvIGEgZnVyaW91cyByYWdlIHdoZW4gaGlzIGtlZXBlciB0b29rIG91dCBhIGxldHRlciBvciBib29rIGFuZCByZWFkIGl0IGFsb3VkIHRvIGhpbTsgYW5kIGhpcyByYWdlIHdhcyBzbyB2aW9sZW50IHRoYXQsIGFzIEkgd2l0bmVzc2VkIG9uIG9uZSBvY2Nhc2lvbiwgaGUgYml0IGhpcyBvd24gbGVnIHRpbGwgdGhlIGJsb29kIGZsb3dlZC4iCk5vdyBzdW1tZXIgaXMgcHJldHR5IG11Y2ggb3ZlciwgaXQgZ2l2ZXMgdXMgbGVzcyByZWFzb25zIHRvIGhlYWQgdG8gdGhlIHB1YiBhZnRlciB3b3JrIG9yIHNwZW5kIG91ciB3ZWVrZW5kcyBsYXppbmcgYXJvdW5kIGluIHRoZSBnYXJkZW4uIFRoZSBuZXh0IGZldyB3ZWVrcyB3aXRoIHRoZSBraWRzIGJhY2sgYXQgc2Nob29sIGFuZCB0aGluZ3MgcmV0dXJuaW5nIHRvIG5vcm1hbCBhdCB3b3JrIG1lYW4gdGhhdCB5b3Ugd2lsbCBoYXZlIG11Y2ggbW9yZSB0aW1lIHRvIGdldCByZWFkaW5nIGJvb2tzIHRoYXQgYXJlIGdvaW5nIHRvIGhlbHAgeW91IGJlY29tZSBzdWNjZXNzZnVsLiAKV2FybmUgb3B0cyBmb3IgcG9rZXIgb3ZlciBUd2VudHkyMApUaGUgd2hvbGUgbWFya2V0aW5nIGNvbnN1bWVyIGNvbXBsZXggb2Ygb3VyIGVjb25vbXkgaGFzIHB1dCBiaWxsaW9ucyBvZiBkb2xsYXJzIGludG8gdHJ5aW5nIHRvIG1ha2UgcGVvcGxlIGZlZWwgaGFwcHkgYWxsIHRoZSB0aW1lLiBXZSBoYXZlIHRoaXMgZXh0cmF2YWdhbnQgZXhwZWN0YXRpb24gdGhhdCBvdXIgbGl2ZXMgc2hvdWxkIGJlIGZpbGxlZCB3aXRoIGxhdWdodGVyIGFuZCBzbWlsZXMgMjQvNywgd2hlbiBpbiByZWFsaXR5IG1vc3Qgb2Ygb3VyIGxpdmVzIGFyZSBwdW5jdHVhdGVkIGJ5IGxvbmcgcGVyaW9kcyBvZiBib3JlZG9tL3VuZWFzZS4gClRoaXMgaXMgZmFudGFzdGljLiAKUmVzcGVjdGZ1bGx5IEkgZGlzYWdyZWUuIE91ciBleHBlcmllbmNlIGlzIHRoYXQgVFMgaXMgYW4gdXBmcm9udCBpbnZlc3RtZW50IHRoYXQgcGF5cyBvZmYgaW4gdGhlIG1pZCAgdG8gbG9uZyB0ZXJtLiBCeSBpbnZlc3RtZW50IEkgZG9uIG1lYW4gaW4gdGVybXMgb2Ygd3JpdGluZyBjb2RlIChJIHdvdWxkIDk5JSBndWFyYW50ZWUgeW91IHRoYXQgSSBhbSBhIGZhc3RlciBhbmQgYmV0dGVyIGRldmVsb3BlciB3aXRoIFRTIHRoYW4gd2l0aG91dCksIGJ1dCBpbiB0ZXJtcyBvZiBvbmJvYXJkaW5nIG5ldyBkZXZzLgpJIHdhdGNoIGEgbG90IG9mIG1vdmllcywgYnV0IG1vc3QgdHYgaXMgcHJldHR5IGJvcmluZy4uIApMaWZlIHdpbGwgYWJzb2x1dGVseSBpbXByb3ZlLiAKTlRBIHlvdSBhcmUgdGhlIERBRC4gR29vZCBqb2IuIApMYSBsaWJlcnQgY29uc2lzdGUgIHBvdXZvaXIgZmFpcmUgdG91dCBjZSBxdWkgbmUgbnVpdCBwYXMgIGF1dHJ1aSA6IGFpbnNpLCBsJ2V4ZXJjaWNlIGRlcyBkcm9pdHMgbmF0dXJlbHMgZGUgY2hhcXVlIGhvbW1lIG4nYSBkZSBib3JuZXMgcXVlIGNlbGxlcyBxdWkgYXNzdXJlbnQgYXV4IGF1dHJlcyBNZW1icmVzIGRlIGxhIFNvY2l0IGxhIGpvdWlzc2FuY2UgZGUgY2VzIG1tZXMgZHJvaXRzLiAKTm8gb25lIGNsYWltaW5nIGRlYXRoIGFzIGEgbWVyY3kgYWN0dWFsbHkgYmVsaWV2ZSBpdCwgb3IgdGhleSB3b3VsZCBraWxsIHRoZW1zZWx2ZXMsIHRoZXJlZm9yZSBub3QgYmUgaGVyZSB0byBjbGFpbSBpdC4gCkxFRTogWW91IG5lZWQgdG8gaGF2ZSBhIG1lZGljYWwgY2VydGlmaWNhdGUgdG8gYnV5IGd1bSBmb3IgdGhvc2Ugd2hvIHdhbnQgdG8gZ2l2ZSB1cCBzbW9raW5nIGFuZCBoYXZlIGdvdCB0byBjaGV3IHNvbWUgbmljb3RpbmUuClRoZSBwYWlyJ3MgcmVsYXRpb25zaGlwIG9ubHkgZGVlcGVuZWQgaW4gdGhlIGZvbGxvd2luZyB5ZWFycy4gClRoZSBjbHViIGltcHJvdmVtZW50cyBpbmNsdWRlIGEgbmV3IG1haW4gbG91bmdlIGFyZWEsIHBsYXRpbnVtIHBsdXMgVEFCIGxvdW5nZSwgbW9kZXJuIEF1c3RyYWxpYW4gYnJhc3NlcmllLCBjYWYgYW5kIHBpenplcmlhIGFuZCByZW5vdmF0aW9ucyBvbiBleGlzdGluZyBjYWJpbnMgdG8gcmFpc2UgdGhlaXIgYWNjb21tb2RhdGlvbiByYXRpbmcgZnJvbSB0aHJlZSBzdGFyIHRvIGZvdXIgc3Rhci4gVGhlcmUgYXJlIGZ1dHVyZSBwbGFucyBnb2luZyBpbnRvIDIwMTYgdG8gZG91YmxlIHRoZSBjbHViIGFjY29tbW9kYXRpb24gY2FwYWNpdHkgZnJvbSAyMCBjYWJpbnMgdG8gNDMgYW5kIHRvIGNvbnZlcnQgYSBib3dscyBncmVlbiBpbnRvIGFuIGFsZnJlc2NvIGRpbmluZyBhcmVhLiAKVGhpcyBpcyBjcnVjaWFsIHdoZW4gaW1hZ2luZyBhdCBuaWdodCBlc3BlY2lhbGx5IHdoZW4gd2luZCBzcGVlZHMgdGVuZCB0byBraWNrIHVwLiAKU2VlbiBpdCBhbmQgeW91IGNvbnRpbnVlIHRvIHNlZSBpdCBhbmQgd2UgaGF2ZSBvdGhlciBzaXR1YXRpb25zIHRoYXQgbWlnaHQgd2FpdC4gCkNsaWNrd2hpc3RsZSB1CldlIGV4cGVjdGVkIGEgbWluaSBMYXMgVmVnYXMsIGl0IHdhcyBub3RoaW5nIGxpa2UgaXQuIApIb3cgbWFueSBzb25ncyBkb2VzIExhZHkgR2FnYSBzb2xkPwpMYXVnaGluZ2F0aW1iYWNpbGVzICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpTb3dhcyBnaWJ0cyBnYXJuaWNodCB1bmQgd2VubiBzb2xsdGUgZGFzIHZlcmJvdGVuIHNlaW4uIFdvIGtvbW1lbiB3aXIgZGVubiBoaW4gd2VubiBhbGxlIEZyYXVlbiBwbHR6bGljaCBtZWluZW4gc2llIHdyZW4gZ2VuYXVzbyB3aWNodGlnIHdpZSBkZXIgTWFubiBudXIgd2VpbCBzaWUgR2VsZCB2ZXJkaWVuZW4/IEV2ZW50dWVsbCBzb2dhciBub2NoIG1laHIgYWxzIGRlciBNYW5uIG9kZXIsIEdvdHQgYmV3YWhyZSwgYWxzIEVpbnppZ2U/IERhcyBpc3Qgc2ljaGVyIG5pY2h0IHZvbiBHb3R0IGdld29sbHQuIFNvIHdlcmRlbiBkb2NoIG51ciBVbmdsdWJpZ2UgZ2VzY2hhZmZlbiBkaWUgc2ljaCB2b24gZGVyIFdhaHJoZWl0IGFid2VuZGVuLi4gCldvbGZlIHRvIHRlbGwgYSBiZWF1dGlmdWwgc3Rvcnkgd2l0aCBsb3RzIHRvIGNoZXcgaW4uIApUaGUgUHJlc2lkZW50LCB0aGFuayBnb2QsIGlzIG5vdCB0aGUgb25seSBvbmUgd2l0aCBwb3dlciBpbiB0aGlzIGNvdW50cnkuIFRoYXQgd2FzIHRoZSB3aG9sZSBwb2ludCBvZiB0aGUgdGhyZWUgYnJhbmNoZXMgb2YgZ292ZXJubWVudCB0aGF0IHRoZSBGb3VuZGluZyBGYXRoZXJzIHdlcmUgd2lzZSBlbm91Z2ggdG8gc2V0IHVwLiBPYmFtYSBjYW4gc2F5OiBtb3JlIHdhciwgbW9yZSB3YXIsIG1vcmUgd2FyLiBCdXQgQ29uZ3Jlc3MgY29udHJvbHMgdGhlIHB1cnNlIHN0cmluZ3MuClRoZSBkYXkgc2hlIGFycml2ZWQgdGhlIG1pZHdpZmUgd2VudCB0byBnaXZlIGhlciBvbmUgb2YgdGhlIGtuaXR0ZWQgYmVhbmllcyBidXQgdGhlIG9uZSB3YWl0aW5nIGZvciBoZXIgd2FzIGJyb3duIHNvIHNoZSBzYWlkICJvaCBubywgdGhhdCB3b24ndCBkbyIgYW5kIGdvdCB1cyBhbm90aGVyIG9uZS4gU2hlIHB1dCBpdCBvbiBvdXIgYmFieSBhbmQgaXQgd2FzIGJsdWUgd2l0aCB0aGUgbW9zdCBkZWxpY2F0ZSBsaXR0bGUgc25vd2ZsYWtlIGtpbmQgb2YgcGF0dGVybiBvbiBpdC4gCkkndmUgZ2l2ZW4geW91IGFuIGFuc3dlciBidXQgaXQgaXNuJ3QgZ29vZCBlbm91Z2guIFdoYXQgbGF3IGRvIHlvdSB0aGluayBSdXNzaWEgaXMgYnJlYWtpbmc/IFRoZSBidXJkZW4gdG8gImNpdGUgdGhlIGxhdyIgaXMgb24geW91LiBJZiB5b3Ugd2VyZSBhbnl0aGluZyBtb3JlIHRoYW4gYW4gYXJtY2hhaXIgbGF3eWVyIHlvdSB3b3VsZCBrbm93IHRoYXQuCkxldCBtZSB0aGluayBvbiB0aGUgdGhyZWUgcXVlc3Rpb25zIHlvdSBhc2tlZC4gVGhpcyBwb3N0IGlzIGFscmVhZHkgbG9uZyBlbm91Z2gsIGFuZCBJIHdhbnQgdG8gZ2l2ZSB5b3UgZ29vZCBhbnN3ZXJzLgoxRmVsbG93IFRoaW5naXRlcyBzaG91bGQgbm90IHRha2UgdW1icmFnZSBhdCB0aGUgbWVudGlvbiBvZiB0aGUgd29yZHMgJ3dlZG5lc2RheScgYW5kICd0aHVyc2RheScgICB3aXRob3V0IHRoZWlyIHVzYWdlLCBpdCB3YXMgcHJvdmluZyBkaWZmaWN1bHQgdG8gZ2V0IHdoYXQgSSB3YW50ZWQgdG8gc2F5IGFjcm9zcyEyVGhlIGFib3ZlIGFkZHJlc3MgaXMgdG90YWxseSBmaWN0aW9uYWwuIEFueSByZXNlbWJsYW5jZSB0byBwZW9wbGUgb3IgcGVyc29ucyBpbiByZWFsIGxpZmUgaXMgY29pbmNpZGVudGFsM09mIHRoZSBzYW1wbGUgcG9wdWxhdGlvbiBvZiAxLCAxMDAlIG9mIHJlc3BvbmRlbnRzIGFncmVlZCB0aGUgQWJpIHdhcyB0aGVpciBmYXZvdXJpdGUgLiAKUnVlIFNhaW50IExhemFyZS4gQSBsJ2luaXRpYXRpdmUgY29uam9pbnRlIGQndHVkaWFudHMsIGRlIGxhIE1haXJpZSBkdSA5ZSBlbiBwYXJ0ZW5hcmlhdCBhdmVjIGwnYXNzb2NpYXRpb24gOWUgSGlzdG9pcmUgZG9udCBsZSBwcnNpZGVudCBlc3QgYXVzc2kgbGUgQ29uc2VpbGxlciBkJ2Fycm9uZGlzc2VtZW50IGVuIGNoYXJnZSBkZSBsYSBjdWx0dXJlLCBsYSBtYW5pZmVzdGF0aW9uICBMYSBydWUgU2FpbnQgTGF6YXJlIGNvbW1lIHZvdXMgbGUgbCdhdmV6IGVuY29yZSBqYW1haXMgdnVlICBlc3Qgb3JnYW5pc2UgY2Ugc2FtZWRpIDMgbWFpIGVudHJlIDEwaCBldCAxN2guIEMnZXN0IHVuZSBpbml0aWF0aXZlIGludHJlc3NhbnRlLCBjZSBxdWFydGllciBldCBjZXR0ZSBydWUgZW4gcGFydGljdWxpZXIgdGFudCB0cnMgcmljaGUgZCd1biBwYXNzIG1hbCBjb25udSBzb3V2ZW50LgpUaGVuIG1lc3Mgd2l0aCBib3RoIG9mIG15IGVhcnMgd2l0aCBib3RoIGhhbmRzLiBJIGRpZG4gZ2V0IGl0IGJ1dCBFdmVudHVhbGx5IGhlIHRvbGQgbWUgaGUgaGFkIGFuIGVhciBmZXRpc2guIEkgdG9sZCBteSBtb20gd2hhdCBoZSBzYWlkIGFuZCBzaGUgaW5zdGFudGx5IGRpZG4gbGlrZSB0aGUgZ3V5LiAKSSB3b2tlIHVwIGF0IDVhbSBzYW1lIGFzIGFsd2F5cyBiZWNhdXNlIEkgYW0gYW4gYWxpZW4gKHJlYWQ6IG1vcm5pbmcgcGVyc29uKS4gCklmIHlvdSBiZWxpZXZlIHRoZSBoeXBlLCBpdCdzIGFsc28gd2hhdCBtYWtlcyB1cyBjaGVjayBGYWNlYm9vayBldmVyeSAyMCBtaW51dGVzIGFuZCBzaXQgb24gdGhlIGNvdWNoIGZvciBob3VycyBraWxsaW5nIHpvbWJpZXMgaW4gYSB2aWRlbyBnYW1lLiBEb3BhbWluZSBpcyBvZnRlbiBsaW5rZWQgd2l0aCBhZGRpY3Rpb24sIGFsY29ob2xpc20sIHNleHVhbCBsdXN0LCBjb21wdWxzaXZlIGJlaGF2aW9yIGFuZCBkYW5nZXJvdXMgcmlzayB0YWtpbmcuLiAKIkl0IGlzIHBsZWFzYW50IHRvIHRoaW5rIHRoYXQgb3VyIGpvbGx5IHRhcnMgYXJlIG5vIHN1ZmZlcmVycyBieSB0aGlzIGV4cGVkaXRpb3VzIG1vZGUgb2YgbWFraW5nIHRoZWlyIHNlYSBicmVhZC4gSXQgc2VlbXMgdG8gYmUgYWRtaXR0ZWQgdGhhdCB0aGUgbWFjaGluZSBtYWRlIGJpc2N1aXRzIGFyZSBiZXR0ZXIgbWl4ZWQgYW5kIGJldHRlciBrbmVhZGVkIHRoYW4gdGhvc2UgbWFkZSBieSBoYW5kLiBUaGUgdGhyZWUgYmFrZXJpZXMgYXQgdGhlIHRocmVlIGFyc2VuYWxzIGJlZm9yZSBuYW1lZCBjb3VsZCBwcm9kdWNlIHdoZW4gYXQgZnVsbCB3b3JrIHNpeCBvciBlaWdodCB0aG91c2FuZCB0b25zIG9mIGJpc2N1aXRzIGluIGEgeWVhciB3aGljaCB3b3VsZCBlZmZlY3QgYSBzYXZpbmcgb2YgdGVuIG9yIHR3ZWx2ZSB0aG91c2FuZCBhIHllYXIgYXMgY29tcGFyZWQgd2l0aCB0aGUgb2xkIG1ldGhvZC4iLiAKSW4gdGhlIGV2ZW50IHRoYXQgdGhleSBkaWQgY29tZSB0byBoaW0gd2l0aCBxdWVzdGlvbnMgYWJvdXQgdGhvc2UgYmxvb2R5IHNob2UgcHJpbnRzLCBoZSB3b3VsZCBzaW1wbHkgYmUgYWJsZSB0byBzYXkgJ0kgd2VhciBhIHNpemUgMTAsJyAiIE5pZXRvIGV4cGxhaW5lZC4gQW5kIHRoZXJlIHdhcyBhbm90aGVyIGludHJpZ3VpbmcgYmxvb2QgdHJhaWwgdGhhdCBhbHdheXMgdHJvdWJsZWQgcG9saWNlLiAiVGhlcmUgd2VyZSBmb290cHJpbnRzIHRoYXQgbGVkIGZyb20gQ2hhcmxlbmUgdG8gRXJuZXN0LiAKSSB3b3VsZCBsaWtlIHRvIGp1c3Qgc3VnZ2VzdCByL3N0b3Bkcmlua2luZyBmb3IgdGhvc2Ugd2hvIEkgbWlnaHQgaGF2ZSBqdXN0IGhpdCBhIG5lcnZlLiBTdGF5IHN0cm9uZywgYW5kIGRyaXZlIGEgV2lsbHlzLi4gClVzZSBhIHN0cmF0ZWd5IGxpc3QuIEEgc3RyYXRlZ3kgbGlzdCBpcyBsaWtlIGEgY2hlYXQgc2hlZXQsIHRoYXQgaGFzIGFsbCBvZiB0aGUgZGlmZmVyZW50IHdheXMgeW91IGNhbiB3aW4gaW4gYSBwb2tlciBnYW1lIGluIGEgbGlzdCByYW5rZWQgZnJvbSBiZXN0IGhhbmRzIHRvIHdvcnNlIGhhbmRzLiBVc2luZyBhIGNoZWF0IHNoZWV0IHdpbGwgaGVscCB5b3UgZGV0ZXJtaW5lIHdoaWNoIGNhcmRzIHRvIGtlZXAgYW5kIHdoaWNoIGNhcmRzIHRvIGV4Y2hhbmdlIGZvciBuZXcgY2FyZHMuIApGcm96ZW4gZm9vZHMgd2lsbCBuZXZlciBiZSBhcyBoZWFsdGh5IGFzIHNvbWV0aGluZyBmcmVzaGx5IG1hZGUsIGJ1dCB0aW1lIGlzbid0IGFsd2F5cyBvbiBvdXIgc2lkZS4uIApFdmVuIGlmIHlvdSBhbmdyeSB0aGF0IGhlIHNoaXQgaW4geW91ciBtb3V0aCwgYWxsIG9mIGhpcyBzdXBwb3J0ZXJzIHdvdWxkIGJlIGxpa2UgImxvbCB3dXQgIHRydW1wIGlzIHRoZSBiZXN0IGNvcHJvcGhpbGlhYyBtYW4uIApBbnl3YXksIHRoZSBmZWx0IGlzIG9sZCB3aXRoIHNldmVyYWwgc3RhaW5zIG9uIGl0IHNvIGl0J3MgYSBiaXQgc29yZSBvbiB0aGUgZXllcy4gSG93ZXZlciwgSmVmZiBhbmQgS3Jpc3RhIGdhdmUgdXMgdGhpcyBTdWl0ZWQgQmx1ZSBQb2tlciBUYWJsZSBDbG90aCBmb3IgQ2hyaXN0bWFzIGFuZCBvbmNlIHdlIHB1dCBpdCBvbiwgeW91IHdvdWxkbid0IGV2ZW4gYmVsaWV2ZSB0aGUgZGlmZmVyZW5jZS4gClRoZSBnb29kIG5ld3MgaXM6IG15IGJyb3RoZXIgaXMgb3ZlciAxMiB5ZWFycyBjbGVhbiBhbmQgc29iZXIgZnJvbSBkcnVncyBhbmQgYWxjb2hvbCBhbmQgaGUgaXMgY29tcGxldGVseSBhd2Vzb21lIGFuZCBoaXMgYnJhaW4gc3RpbGwgd29ya3MuIE15IGhlYXJ0IGdvZXMgb3V0IHRvIHlvdS4gClRoZXJlIGEgdG9uIG9mIGRpZmZlcmVuY2UgYmV0d2VlbiAxIDUwIG1pbGxpb24gdG8gYSBiaWxsaW9uLiAKQm90aCBoZXIgcGFyZW50cyBoYWQgZ3Jvd251cCBoZXJlIGFuZCB3aGVuIGhlciBkYWQgZGllZCBpbiBBZmdoYW5pc3RhbiwgaGVyIG1vbSBtb3ZlZCB0aGVtIGJhY2sgd2hlcmUgdGhlaXIgcmVsYXRpdmVzIGxpdmVkLiAKTWluZCB5b3UsIG15IGZvcm1lciBmcmllbmQgQSBpcyBmZWVkaW5nIGhpbSBpbmZvIGFib3V0IG1lLCBzbyBoZSBrbm93cyBteSBidXR0b25zIGFuZCBmZWFycyBhbmQgZXZlcnl0aGluZy4gCihidXJlYXUgMTA5LCBidGltZW50IGNlbnRyYWwpICBUbCA6IDAyIDk4IDAxIDYwIDk3LgpXaGVuIHlvdXIgbXVzY2xlcyBmZWVsIHRpcmVkIGFuZCBzb3JlLCBza2lwIGEgZGF5IGFuZCBsZXQgeW91ciBib2R5IHJlc3QuIApJIGhvcGUgeW91IGNhbiBtYXliZSBmaW5kIHNvbWVvbmUgeW91IGNhbiBsaXZlIHdpdGggdGVtcG9yYXJpbHkuIApIZSBzb2xkIGhpcyB2ZWhpY2xlIGFuZCBib3Jyb3dlZCBtb25leSBmcm9tIG90aGVyIHNvdXJjZXMgdG8gY29tcGx5IHdpdGggdGhpcyBsYXN0IHJlcXVlc3QuIEludmVzdGlnYXRvcnMgc2FpZCBoZSBwYWlkIHNldmVyYWwgb3RoZXIgc3VtcyBvZiBtb25leSB0byBoZXIgYmVmb3JlIHBvbGljZSBpbnRlcnZlbmVkLgpBbm90aGVyIHBvcHVsYXIgd2ViIHNpdGUgZm9yIGFuaW1hdGVkIHNwb3RzIGFuZCB0YWJsZSBmbGFzaCBnYW1lcyBpcyBTaGVyaWZmIEdhbWJsaW5nLiBTaGVyaWZmIEdhbWluZyB3aWxsIHByb3ZpZGUgcGxheWVycyB3aXRoIDMgRCBtbW9ycGdzIGNyZWF0ZWQgYnkgYW4gZXhwZXJpZW5jZWQgd29ya2ZvcmNlIG9mIHByb2Zlc3Npb25hbCBhZG1pbmlzdHJhdG9ycyBhbmQgYnVzaW5lc3MgYWRtaW5pc3RyYXRvcnMgaW4gb3JkZXIgdG8gdXBkYXRlIGFuZCBhbHNvIGZvcm11bGF0ZSBuZXcgZmxhc2ggZ2FtZXMuIExpa2UgQmV0c29mdCBHYW1pbmcsIHRoZXkgaGF2ZSBnb3QgYWxsIHRoZSBuZWNlc3NhcnkgZHJpdmVyJ3MgbGljZW5zZSBpbiBvcmRlciB0byBydW4gdGhlIHBvc2l0aW9uaW5nLiAKMUNFbmluamEgICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpIZSBpcyB2aWV3ZWQgYXMgb25lIG9mIHRoZSBuZXh0IHN0YXJzIGluIHRoZSBnYW1lLiAKV2VsbCB0aGF0IHRoZSBwb2ludC4gUGVvcGxlIGhhdmUgYmVlbiBhYmxlIHRvICJiZWF0IiBhbGwgdGhvc2UgdGhpbmdzIHRoYXQga2lsbCB1cywgc28gdGhlIGF2ZXJhZ2UgYWdlIGhhcyByaXNlbi4gQnV0IGlmIHNvbWVvbmUgd2FzIGFibGUgdG8gbm90IGdldCBraWxsZWQgYXMgYSBiYWJ5IG9yIGJ5IGRpc2Vhc2Ugb3Igd2FyIG9yIGFuIGluanVyeSwgdGhleSBsaXZlIGludG8gdGhlaXIgNzBzIG9yIDgwcyBqdXN0IGxpa2Ugd2UgZG8gdG9kYXkgYmVmb3JlIHRoZWlyIGJvZHkganVzdCBnb3QgdG9vIG9sZC4gClRoaXMgc3lzdGVtIGNhbiBiZSB1c2VmdWwgZm9yIGxpbWl0aW5nIHN0dWRlbnRzIHdobyBkb21pbmF0ZSB0aGUgZGlzY3Vzc2lvbiBhbmQgZW5jb3VyYWdpbmcgcXVpZXQgc3R1ZGVudHMgdG8gY29udHJpYnV0ZS4uIApIZSBzYWlkIHNvbWV0aGluZyBsaWtlLCAiSGV5IG1hbiwgbGVhdmUgaGVyIGFsb25lLCBzaGUgYSBmcmllbmQiIGFuZCBzdG9vZCBieSBtZSB1bnRpbCB0aGUgc2NhcnkgZHVkZSBsZWZ0LiAKSSBhdCAxLjI1bSBjbGVhbiByYW5nZSAoWGVub24pLCBhbmQgaGF2ZSBkZWNlbnQgbGluayBza2lsbHMgYW5kIGxlZ2lvbiBhZnRlciBhYm91dCAzIG1vbnRocy4gCkJ1dCBub3csIEkgNDAgeWVhcnMgb2xkLCBmb2xrcy4gCklmIGl0IGlzIG9uZSBpbmp1cnksIHNhcnRvcml1cyBmaXRzIHRoZSBiaWxsLiAKTGUgY3JhdGV1ciBkZSBsYSBtYWlzb24gQ2hhbmVsLCBkY2QgbGUgMTkgZnZyaWVyICBsJ2dlIGRlIDg1IGFucywgdGFpdCBlbiBlZmZldCB1biBpbnRpbWUgZGUgbG9uZ3VlIGRhdGUgZGUgbCdhY3RyaWNlIHF1aSBhIGluY2FybiBNYWRlbW9pc2VsbGUgQ2hhbmVsIGF1IGNpbm1hIChkYW5zIENvY28gQ2hhbmVsIGV0IElnb3IgU3RyYXZpbnNreSBkZSBKYW4gS291bmVuKSBldCBxdWkgZXN0IGRlcHVpcyBkZSBsb25ndWVzIGFubmVzIHVuZSBncmllIGRlIGxhIG1haXNvbiBkZSBsdXhlLCBub3RhbW1lbnQgIHRyYXZlcnMgZGV1eCBmaWxtcyB0b3VybnMgcGFyIEthcmwgOiBUaGUgVGFsZSBvZiBhIEZhaXJ5IGVuIDIwMTEsIGV0IFRoZSBSZXR1cm4gZW4gMjAxMy4gCkkgZGVjaWRlZCBvbiBhIHJpYmJlZCBzcGlyYWwgaGF0IHByb2plY3QgdGhhdCB3b3JrZWQgaW4gdGhlIGJhY2sgbG9vcCBvbmx5IHRvIGJ1c3QgYSBsb3ZlbHkgYmx1ZSB5YXJuLiAKV2hvZXZlciB0cmllZCB0byBmb3JjZSBoaW0gdG8gZG8gc29tZXRoaW5nIG9yIHRvIGdpdmUgaGltIG9yZGVycyBoYWQgYSBiYWQgdGltZS4gCkRyLiAKSSBzYXlpbmcgdGhlIG9wcG9zaXRlLCB0aGF0IGF0IHNvbWUgb2YgdGhlIHNtYWxsZXIgcGxhY2VzLCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgb24gYSBzbWFsbCB0ZWFtLCB5b3UgbWlnaHQgaGF2ZSB0byBwdXQgaW4gaW5wcm9wb3J0aW9uYXRlIGFtb3VudCBvZiB3b3JrLiBFc3BlY2lhbGx5IHZlcnkgeW91bmcgdGVjaCBjb21wYW5pZXMgd2l0aG91dCBnb29kIHdvcmsvbGlmZSBwb2xpY2llcywgeW91IG1pZ2h0IHNlZSBlbmdpbmVlcnMgb25saW5lIGFsbW9zdCAyNC83IQpNb2Rlcm4gd29tZW4gY29uc2lzdGVudGx5IHNwZWFrIGFib3V0IHNhZmUgc3BhY2VzIGZvciBmZW1hbGVzLiAKTXkgbW90aGVyIGhvYXJkaW5nIGhhYml0cyBhcmUgYSBIVUdFIGFyZWEgb2YgY29udGVudGlvbiBmb3IgbXkgd2hvbGUgZmFtaWx5LCBhbmQgbm8gb25lIGlzIGV2ZXIgYWxsb3dlZCB0byBzYXkgYW55dGhpbmcgZm9yIGZlYXIgb2YgdXBzZXR0aW5nIGhlci4gCiBOb3VzIGF2b25zIGRlcyBlbmZhbnRzIHF1aSB0YWllbnQgdHJzIGNvbHJpcXVlcyBldCBxdWkgc29udCBtYWludGVuYW50IGNhcGFibGVzIGRlIGdyZXIgbGV1ciBjb2xyZSBldXggbW1lcy4gCklsIHkgYSB1bmUgZm9uY3Rpb24gZGUgcmVjaGVyY2hlIHBvdXIgInJhdHRyYXBlciBsZSB0cmFpbiBlbiBtYXJjaGUiLkFwcnMgYSBkcGVuZCBxdWVsIGVzdCB2b3RyZSBidXQuIApZb3UgaGF2ZSB0byB2b2x1bnRhcmlseSByZXF1ZXN0IGl0IGF0IHRoZSBwb2xpY2UgYW5kIHNob3cgaXQgdG8gaGltKS4gCkluc3RlYWQgb2Ygc2VlaW5nIGl0IGFzIGFub3RoZXIgY3Jpc2lzIHRvIG1hbmFnZSwgbG9vayBhdCBpdCBhcyBhbiBvcHBvcnR1bml0eSB0byBzaG93IHlvdXIgZW1wbG95ZWUgaG93IG11Y2ggeW91IHdhbnQgdGhpcyBvcmdhbml6YXRpb24gdG8gYmUgYSBmdWxmaWxsaW5nIHBsYWNlIHRvIHdvcmsuLiAKSWYgVGhlIFVuaXRlZCBTdGF0ZXMgbG9zdCBhIHdhciB0byBNZXhpY28gYW5kIHRoZXkgc2VpemVkIHBhcnQgb2YgTmV3IE1leGljbyBvciBUZXhhcyBhcyBwYXJ0IG9mIGFuIGFyYml0cmFyeSBhbmQgY29tcHVsc29yeSB0cmVhdHkgYW5kIE1leGljYW5zIHdlcmUgbWlzdHJlYXRpbmcgVVMgY2l0aXplbnMgd291bGQgaXQgbm90IGJlIGp1c3RpZmllZCB0byB3YW50IHRoZSB0ZXJyaXRvcnkgYmFjay4gVGhpcyB3YXMgdGhlIHNhbWUgc2l0dWF0aW9uIGluIDE5Mzggd2l0aCBuYXRpdmUgR2VybWFucyBob3dldmVyIHRoaXMgY3JpdGljYWwgcGFydCBvZiBpbmZvcm1hdGlvbiBpcyBkZWxpYmVyYXRlbHkgb21taXR0ZWQgZnJvbSBoaXN0b3J5IGJvb2tzLi4gCkJlY2F1c2UgaXRzIG5vdCB0cnVlPyBJZiB5b3UgdGhpbmsgdGhlcmUgbm8gZWRnZSB0byBiZSBoYWQgYWdhaW5zdCBmaXNoIGF0IDViYiBlZmZlY3RpdmUsIHlvdSBzZXJpb3VzbHkgdW5kZXJlc3RpbWF0ZSBob3cgYmFkIGZpc2ggYXJlIGF0IHBva2VyLiBJIGJlZW4gcGxheWluZyBhIGRlY2VudCBhbW91bnQgb2YgJDEgNm0gaHlwZXJzIHJlY2VudGx5IG9uIGlnbml0aW9uLiBJIHNvcnRlZCBteSBkYXRhYmFzZSBieSBlZmZlY3RpdmUgc3RhY2tzIG9mIDViYiBvciBsZXNzIGFuZCBoZXJlIGlzIHRoZSBncmFwaC4gVGhhdCBhIHdpbnJhdGUgb2YgMThiYiBwZXIgMTAwIGhhbmRzLiBTZWVtcyBsaWtlIHRoZXJlIG1pZ2h0IGJlIHNvbWUgZWRnZSB0aGVyZS4KSWwgY2xpbWEgPSBpbCBjbGltYXRpenphdG9yZSA9IGlsIGNvbmRpemlvbmF0b3JlIGQgKHRoZSBhaXIgY29uZGl0aW9uZXIpOyBidXQgY2xpbWEgYWxzbyBtZWFucyBjbGltYXRlLCB3ZWF0aGVyIHRlcm1vID0gaSB0ZXJtb3NpZm9uaSAodGhlIHJhZGlhdG9ycykKQW5vdGhlciBib3kgd2hvIHBsYXlzIHRoZSBnYW1lIGJ1dCBkb2VzbiBtYWtlIGl0IGEgc2VjcmV0IHRoYXQgaGUga25vd3Mgc2Nob29sIGp1c3QgYSBnYW1lIGFuZCBoZSBvbmx5IGRvaW5nIHRoZSByaWdodCB0aGluZyBiZWNhdXNlIGl0IHNtYXJ0ZXIgdGhhbiBnZXR0aW5nIHB1bmlzaGVkIGEgbG90IGlzIGhhdGVkIGJ5IHRoZSBmYWN1bHR5IGJlY2F1c2Ugb2YgaXQuIEEgZmV3IG90aGVyIHRlYWNoZXJzIGFuZCBJIHdlcmUgdGFsa2luZyBhYm91dCB3aG8gd2UgbW9zdCBpZGVudGlmeSB3aXRoIGluIHRoZSBjbGFzcyBhbmQgdGhleSB3ZXJlIHNob2NrZWQgdGhhdCBJIHBpY2tlZCB0aGUgYm95IGJlY2F1c2UgSSBhbHdheXMgZG9pbmcgdGhlIHJpZ2h0IHRoaW5nIGFuZCBzdGF5aW5nIGluIG15IGxhbmUuIApWb3VzIGV0IGNlIGJsb2cKQW1hbnRlYSBzYWlkIHNob3VsZCByZWFjaCAkMiBiaWxsaW9uIGJ5IDIwMjUuLiAKSW5mb3JtYXRpb24gZm9yIGFwcGxpY2FudHMKSSdtIHRvIHlvdW5nIHRvIGhhdmUgaGVhcmQgYWxsIHRoZSBiZXN0IHZpb2xpbmlzdHMgaW4gdGhlIHdvcmxkLCB0aGVuIGFnYWluIEkndmUgd29ya2VkIHdpdGggYSBsb3Qgb2Ygd29ybGQgZmFtb3VzIHZpb2xpbmlzdHMgZHVyaW5nIG15IHBlcmlvZCBpbiB0aGUgS0NPLCBhbmQgYnkgSm92ZSB0aGVyZSBhcmUgYSBnb29kIGZldyB2aW9saW5pc3RzIHdoaWNoIGNhbiBnZXQgdGhhdCBwcmVkaWNhdGUuIApTbyBmYXIgdGhlIHJlc3BvbnNlIGZyb20gdGhlIGVtcGxveWVlcyBoYXMgYmVlbiBwb3NpdGl2ZSBiZWNhdXNlIGl0IGdpdmVzIHVzIGFsbCB0aGUgYWJpbGl0eSB0byBzaG93IGhvdyByaWRpY3Vsb3VzIHdlIHRoaW5rIGl0IGlzIHdpdGhvdXQgc2F5aW5nIGFueXRoaW5nLiBPbmUgZW1wbG95ZWUgaW4gYW5vdGhlciBkZXBhcnRtZW50IGhhcyBkZWVtZWQgdXMgdGhlIGJyaWdhZGUgYmVjYXVzZSB0aGUgcGluayBvbmVzIGxvb2sgc3VzcGljaW91c2x5IGNsb3NlIHRvIGEgcGVuaXMgaGVhZCA6KS4gClRoaXMgd2VlayBoZSBzcG9rZSBhYm91dCB0aGUgcG93ZXIgdGhlIHByaWVzdCByZXRhaW5lZCBvdmVyIGhpcyBsaWZlLCBpbiBwYXJ0IGJlY2F1c2Ugb2YgdGhlIENodXJjaCdzIHdoaXRld2FzaGluZyBvZiBGYXRoZXIgQnJvY2sncyBoaXN0b3J5LCBhbmQgdGhlIGZhaWx1cmUgb2YgZXhpc3RpbmcgaW5zdGl0dXRpb25zIHRvIHNlY3VyZSBqdXN0aWNlLiAnJ0kgZG9uJ3QgaGF2ZSB0byBoaWRlIGFueSBtb3JlLiBJIGRvbid0IGhhdmUgdG8gYmUgYXNoYW1lZC4gCk92ZXJncm93biB5YXJkLCBwYXJ0IG9mIHRoZSByb29mIGNhdmVkIGluLCBib2FyZGVkIHVwIHdpbmRvd3MuIEluc2lkZSwgaXQgd2FzIGFsbCBhbnRpcXVlcywgYW5kIGZ1cm5pdHVyZSBmcm9tIHRoZSAzMCBhbmQgNDAgc2xvd2x5IGRldGVyaW9yYXRpbmcsIGFuZCBpdCBsb29rZWQgYXMgdGhvdWdoIHRoZXkgaGFkbiBkdXN0ZWQgaW4geWVhcnMuIApVbml0ZWQgU3RhdGVzIHYuIApTdWJzdGFudGlhbEpva2UgdQpBbGxvd2VkIGZvciBjdXN0b21pemFibGUgYXZhdGFycyAoc2VyaW91c2x5LCB3aGF0IHRoZSBwb2ludCBvZiBoYXZpbmcgYXZhdGFycyBvbiBYYm94IE9uZSBpZiB3ZSBjYW4gdXNlIHRoZW0gaW4gYW55IHJlYWwgY2FwYWNpdHkpClRoZSBGbG9wIERlY2lkaW5nIHdoZXRoZXIgdG8gY29udGludWUgcGxheWluZyBhZnRlciBzZWVpbmcgdGhlIGZsb3Agd2lsbCBiZSB5b3VyIHNlY29uZCBiaWdnZXN0IGRlY2lzaW9uLiBJdCBjYW4gYWxzbyBiZSBvbmUgb2YgdGhlIG1vc3QgY29zdGx5IGRlY2lzaW9ucyBpZiB5b3UgY29udGludWUgYWZ0ZXIgdGhlIGZsb3Agd2l0aCBhbiBpbmZlcmlvciBoYW5kLiAKQmFzZWQgb24gbXkgcmVzZWFyY2ggdGhhdCBob3cgY29rZSB3b3Jrcy4gRXZlbiBhIHRpbnkgYW1vdW50IGNhbiBmYWlsIHlvdSB0b28uLiAKQW5vdGhlciBwb3B1bGFyIHdlYiBzaXRlIGZvciBhbmltYXRlZCBzcG90cyBhbmQgdGFibGUgZmxhc2ggZ2FtZXMgaXMgU2hlcmlmZiBHYW1ibGluZy4gU2hlcmlmZiBHYW1pbmcgd2lsbCBwcm92aWRlIHBsYXllcnMgd2l0aCAzIEQgbW1vcnBncyBjcmVhdGVkIGJ5IGFuIGV4cGVyaWVuY2VkIHdvcmtmb3JjZSBvZiBwcm9mZXNzaW9uYWwgYWRtaW5pc3RyYXRvcnMgYW5kIGJ1c2luZXNzIGFkbWluaXN0cmF0b3JzIGluIG9yZGVyIHRvIHVwZGF0ZSBhbmQgYWxzbyBmb3JtdWxhdGUgbmV3IGZsYXNoIGdhbWVzLiAKV2hlbiBJIGFycml2ZWQgYmFjayBhdCBvdXIgcm9vbSAod2VsbCBhZnRlciB0aGUgc2hvdyBoYXMgZmluaXNoZWQpLCBzaGUgaGFkIDE1IHBlb3BsZSBjcmFtbWVkIGludG8gb3VyIHJvb20sIHdhdGNoaW5nIGFub3RoZXIgc2hvdy4gVGhlcmUgd2VyZSA0IHBlb3BsZSBvbiBteSBiZWQgYW5kIG9uZSBvZiB0aGVtIHdhcyB1c2luZyBteSBwaWxsb3cgYXMgYSBmb290IHJlc3QuIEFzIEkgd2Fsa2VkIGluLCB0aGVyZSB3ZXJlIGFsc28gc2V2ZXJhbCBwZW9wbGUgYnJvd3NpbmcgdGhyb3VnaCBteSBkcmF3ZXJzIGFuZCBteSBkZXNrOyB0aGV5IHdlcmVuIGV2ZW4gYmFzaGZ1bCBvciBlbWJhcnJhc3NlZCB3aGVuIEkgd2Fsa2VkIGluIGFuZCBjaGVlcmZ1bGx5IGFkZHJlc3NlZCB0aGUgY3Jvd2QsICJIaSwgZ3V5cyEgSSB3b25kZXJ3aWZlLCBNYXJpc3NhIChub3QgYm90aGVyaW5nIHRvIGNoYW5nZSBoZXIgbmFtZSkgcm9vbW1hdGUuIApTaGUgZGlkbiBzcGVhayBhbnkgRW5nbGlzaC4gCldoYXQgbWFraW5nIHlvdSBzb3VuZCBhd2Z1bCBpcyBxdWliYmxpbmcgYW5kIHRyeWluZyB0byBleGN1c2UgZGlzcmVnYXJkaW5nIGVudGh1c2lhc3RpYyBjb25zZW50IG9uIHRoZSBiYXNpcyBpdCAidW5yZWFsaXN0aWMiLiBEbyB5b3Uga25vdyB5b3UgZ2l2aW5nIGNvdmVyIHRvIHJhcGlzdHMgYnkgZG9pbmcgdGhpcz8gQmVjYXVzZSB0aGV5IGNhbiBzZWUgcGVvcGxlIGxpa2UgeW91IHNheWluZyB3aGF0IHlvdSBhcmUgc2F5aW5nIGFuZCBnbyAid2VsbCBzZWUsIHRoYXQgZ3V5IHRoaW5rcyBpdCBzdHVwaWQgdG9vIEkgZG9uIGhhdmUgdG8gZG8gc2hpdCB0byBtYWtlIHN1cmUgbXkgcGFydG5lciBpcyBjb25zZW50aW5nLiIuIApNci4gQW5kIE1ycy4gSm9obiBXLiBCbGFjayBhbmQgZGF1Z2h0ZXIsIERvcm90aHksIGFuZCBHbGVubiBKZWZmICBjb2F0IGF0dGVuZGVkIHRoZSBDaGlsZHJlbidzIERheSBzZXJ2ICBpY2VzIGhlbGQgYXQgTXQuIAoiTCdjcml2YWluIG1peWEgQWtpZnVzYSwgcGFyYWx5cywgZXN0IHByaXYgZGUgc29uIGxhbmdhZ2UsIGRlcyBzaWduZXMgZXQgZGVzIG1vdHMuIApNb2pvc29mdCBQaG90byBmcmFtZSBzdHVkaW8gaXMgYW4gb25lIG9mIHRoZSBiZXN0IGFuZCBpbnRlbnNlIGFwcGFyYXR1cyB0aGF0IGFkZHMgZnJhbWVzIHRvIC4gTW9qb3NvZnQgUGhvdG8gZnJhbWUgc3R1ZGlvIDIuOTYgQ3JhY2sgTGljZW5zZSBrZXlnZW4gR2V0IEZyZWUhIC4gWm9uZXIgUGhvdG8gU3R1ZGlvIFBybyAxNyBDcmFjayBTZXJpYWwgS2V5IEZyZWUgRG93bmxvYWQuLiAKTmluZSBsdXh1cmlvdXNseSBhcHBvaW50ZWQgZ3Vlc3Qgcm9vbXMgd2l0aCBwcml2YXRlIGJhdGggb3Igc2hvd2VyIHJvb20gYXJlIGFsbCBkaWZmZXJlbnQ7IHNpeCBpbiB0aGUgbWFpbiBob3VzZSBhbmQgdGhyZWUgY290dGFnZXMgb24gdGhlIGdhcmRlbi4gClRoZSBob3VzZSBzYXQgb24gdGhvc2UuIApCZXJuYXJkIEZSSU1BVCwgQ2hhcmxlcyBHQVVUSUVSLCBTZXJnZSBMQUdBVUNIRSwgSmVhbiBNYXJjIFBBU1RPUiwgQmVybmFyZCBQSVJBUywgTW1lIEdpc2xlIFBSSU5UWiwgTU0uIERhbmllbCBSQU9VTCwgRGFuaWVsIFJFSU5FUiwgTW1lIFBhdHJpY2lhIFNDSElMTElOR0VSLCBNLiBKZWFuIFBpZXJyZSBTVUVVUiwgTW1lIENhdGhlcmluZSBUQVNDQSBldCBsZXMgbWVtYnJlcyBkdSBncm91cGUgc29jaWFsaXN0ZSAoMSkgZXQgYXBwYXJlbnRzICgyKSwuIApUb3AgNCBDYWZlcwpBZnRlciBXVzIsIEV1cm9wZSB3YXMsIHRvIHB1dCBpdCBsaWdodGx5LCBpbiBydWlucy4gCldoZW4gaXQgb2J2aW91cyAoaWYgc29tZXRoaW5nIGlzIG9idmlvdXNseSBtb3JhbCkgdGhlIGRpc2N1c3Npb24gaXMgbm90IG5lZWRlZC4gCkkgYW0gYSBzb3V0aGVuIGdpcmwgYW5kIGNhcnJ5IHRoYXQgY2hhcm0gbmF0dXJhbGx5IGV2ZXJ5d2hlcmUgSSBnbyEgSSBoYXZlIGEgbmljZSBwZXJzb25hbGl0eSBhbmQgSSBhbHdheXMgYXR0ZW1wdCB0byB0YWtlIGdvb2QuIApOICBJc3RhbmJ1bCBlbiAxOTIwLCBpbCBhcnJpdmUgIFBhcmlzIGVuIDE5NTQuIElsIHMnaW5zdGFsbGUgZCdhYm9yZCBkYW5zIGxlIHZpbmd0aW1lIGFycm9uZGlzc2VtZW50IHB1aXMgZGFucyBub3RyZSBxdWFydGllciBkcyAxOTY4LgpPbmUgdGhhdCBkb2VzbiBhbGxvdyBhbnkgYmFkIHdlYXRoZXIsIG5vdCBldmVuIGEgcmFpbnN0b3JtIGJlY2F1c2UgdGhhdCBjb3VsZCBsZWFkIHRvIHBuZXVtb25pYS4gCkhlcnVtc2NobGFnZW4sIG1pdCBUcnVzdCBDZW50ZXIgeHgsIE1lZGlEYXRhIG9kZXIgcnp0ZWthc3NlLiAKVGhlcmUgYXJlIHBsZW50eSBvZiBhbHRlcm5hdGl2ZXMgdGhhdCBoZSBjb3VsZCB1c2UgdG8gc3RvcCBkcmlua2luZyBhbmQgZHJpdmluZy4gRXZlbiB0aGUgbW9zdCBleHBlbnNpdmUgdWJlciBpcyBjaGVhcGVyIHRoYW4gYW55IGxhd3llci4gT3IgRVIgYmlsbC4gCllvdSB0YWtlIGEgY2FyZCBhbmQgeW91IGdldCB0byBwaWNrIG51bWJlcnMuIApUaGUgUmFpc2VyICAgdGhpcyBpcyBhIHBsYXllciB3aG8gY29tZXMgbW9zdGx5IGZvciB0aGUgY29tcmFkZXJpZSwgYnV0IHdobyBhbHNvIHBsYXlzIHByZXR0eSBhZ2dyZXNzaXZlIHBva2VyIGJlY2F1c2UgaGUncyB1bmNvbmNlcm5lZCBhYm91dCB0aGUgb3V0Y29tZS4gCldoYXQgYXJlIGFsbCB0aGUga25vd24gUG9rZXIgZ2FtZXM/CkxldCdzIG5vdCBpZ25vcmUgdGhlIGJ1dHQgICB0aGF0IGlzIHdoZXJlIHRoZSBtb3N0IHBvd2VyZnVsIG11c2NsZXMgb2YgdGhlIGJvZHkgICB0aGUgdXBwZXIgbGVnIG11c2NsZXMgICBjb25uZWN0IHRvIHRoZSBtYWluIHBlbHZpYyBib25lLiAKSSB3b3JrZWQgd2l0aCBEZWFuIGFuZCBoZSBhbHdheXMga25ldyBob3cgdG8gaGF2ZSBmdW4gYW5kIHdhcyBhbHdheXMgYSBwbGVhc3VyZSB0byBiZSBhcm91bmQuIE91ciBzeW1wYXRoeSBhbmQgcHJheWVycyBnbyBvdXQgdG8gYWxsIGhpcyBmYW1pbHkgLiAKMSBtbyBhZ28gKyBCeSBKb3JkeW4gR3J6ZWxld3NraSwgVGhlIFBsYWluIERlYWxlcgpMZSByZXNwZWN0IGRlIHZvdHJlIHZpZSBwcml2ZSBlc3QgaW1wb3J0YW50IHBvdXIgbm91cy4gT3IsIGxlIG1hbmRhdCBiYW5jYWlyZSBxdWkgbHVpIGVzdCBwYXJ2ZW51IHBvdXIgcGF5ZXIgbGVzIG1hc3NhZ2VzIHRhaXQgZmF1eC4KRmF3bGV5IGdsYW5jZWQgb25jZSBtb3JlIGF0IGhpcyB3YXRjaC4gCk5ldyBwcm9ncmFtcyB0byBkaXNjb3VyYWdlIHVuZGVyIGFnZSBnYW1ibGluZyBhcmUgYmVpbmcgcGFpZCBmb3IgYW5kIGltcGxlbWVudGVkIGJ5IHRoZSBpbmR1cyAgc3R1ZGllcyBvbiBjb21wdWxzaXZlIGdhbSAgcGFydGljdWxhcmx5IGFtb25nIHVuZGVyICBhZ2UgYXJlIGJlaW5nIGNvbmR1Y3RlZCB0aHJvdWdoIGZyb20gaW5kdXN0cnkuIG9mIHRoZSB1bmRlciBhZ2UgZ2FtaW5nIGdvaW5nIG9uIGluIHRoaXMgY291bnRyeSBpcyBub3QgZ29pbmcgb24gaW5zaWRlIHRoZSBzYWlkIEZyYW5rIHByZXNpZGVudCBvZiB0aGUgQW1lcmljYW4gR2FtaW5nIHRoZSBjYXNpbm8gaW5kdXN0cnkncyBsb2JieWluZyBvciAgZ2FuaXphdGlvbi4gCllldCBidWRnZXQgaG90ZWxzLCBob3N0aWxlIHRha2Ugb3ZlciBiYXR0bGVzIGFuZCB0aGUgYW50aWNzIG9mIFNpciBHZXJyeSAgIGFuIGVhc3kgZ29pbmcgSXJpc2htYW4gYW5kIHRoZSBhbnRpdGhlc2lzIG9mIHRoZSBpbW1hY3VsYXRlbHkgZHJlc3NlZCBTaXIgUm9jY28gICBhcmUgdGhpbmdzIG9mIHRoZSBwYXN0LiAKWW91IGhhdmUgdG8gYXBwcm9hY2ggdGhlIHBhaW4gd2l0aCBkaXNjZXJubWVudCwgdG8gc2VlIHRoYXQgaXQncyBub3QgeW91LiAKSSBjYW4gdW5kZXJzdGFuZCB3YW50aW5nIHRvIGtlZXAgdGhlIGhhbmRzIHdhcm1lZCB1cCBhbmQgcmVhZHksIGJ1dCBpcyBzcHJheWluZyByZWFsbHkgdGhlIHdheSB0byBkbyB0aGF0P3Jjb3Y1MjUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1BsYXVzaWJsZSwgYnV0IHdoeSBsZWF2ZSBvdXQgb2YgdGhlIGxvcmUgYSBHZXJtYW4gYXJteSBnZW5ldGljIG1hbmlwdWxhdGlvbiB3aGVuIHRoZXkgd2VyZSBzbyBvcGVuIGFib3V0IFVTIHNvbGRpZXIgZW5oYW5jZW1lbnQgcHJvZ3JhbT8gQ29tcGFyZWQgdG8gdGhlIHZhZ3VlIHRoaW5ncyB3ZSBzYXcgZnJvbSB0aGUgVVMgcHJvZ3JhbSAoYWxsIHRoYXQgc3R1ZmYgdGhleSBwdW1wZWQgaW50byBNb3JyaXNvbiEgU28gcHJlc3VtYWJseSBzdGFtaW5hIGVuaGFuY2luZyBzdHVmZiB3aXRoIHNvbWUgYW50aSBhZ2luZyBzaWRlIGVmZmVjdCksIHRoYXQgZHJhbWF0aWMgb2YgYSBzaXplIGluY3JlYXNlIHdvdWxkIGJlIHRvbyB1bmV0aGljYWwsIGV2ZW4gd2l0aCB3aWxsaW5nIHN1YmplY3RzLiAKQSBndXkgbmFtZWQgSnVkZSBGbGFubmVsbHksIGZyb20gUXVlZW5zLCBOZXcgWW9yaywgYXBwZWFyZWQgaW4gdGhlIDMwIHNlY29uZCBzcG90LCB3aGljaCBkaWQgaW5kZWVkIGFpciBkdXJpbmcgYSBnYW1lIGEgYnJlYWsgb24gQU1DJ3MgWm9tYmllIEJvd2wgTWFyYXRob24uIApMZWdhbCBzZWNyZXRhcmllcyBuZWVkIHRvIGJlIGFibGUgdG8gcmVhZCBhbmQgc3ludGhlc2l6ZSBtYXRlcmlhbCB0aGV5IHJlY2VpdmUgZnJvbSB0aGVpciBzdXBlcnZpc29ycyBhbmQgbWFuYWdlci4gUmVjb3JkcyBjZW50ZXIgZW1wbG95ZWVzIHNob3VsZCBiZSBjYXBhYmxlIG9mIGFuYWx5emluZyBjYXNlIGZpbGVzIHRvIGRldGVybWluZSBob3cgYmVzdCB0byBtYWludGFpbiBjbGllbnQgaW5mb3JtYXRpb24gYW5kIGxlZ2FsIG1hdGVyaWFscy4gVGhleSBzaG91bGQgYmUgYWRlcHQgYXQgY2xhc3NpZnlpbmcgbGlicmFyeSBob2xkaW5ncyBhbmQgYW5hbHl6aW5nIHBvdGVudGlhbCBjb25mbGljdHMgcmVsYXRlZCB0byB0aGUgcmVwcmVzZW50YXRpb24gb2YgY2xpZW50cy4uIApTbyBJIHRvb2sgaXQgYWxsIGluc3RyaWRlLCBJIGNvdWxkbid0IHJlYWxseSB0aGluayBhYm91dCBhbnl0aGluZyBvdGhlciB0aGVuIHNldHRpbmcgdGhlIGFwcG9pbnRtZW50LCBhbmQgam9rZWQgdGhhdCBqZWFucyBpbiBteSBzaXplIGhhdmUgYWx3YXlzIGJlZW4gYSBwcm9ibGVtLCBoYSBoYSBoYSwgYmxhaCBibGFoIGJsYWgsIEkgZ2V0IGhvbWUsIGFuZCBnbyBzaXQgb24gdGhlIHRvaWxldCBJIGNyeS4gCkkga25ldyBhIGd1eSBsaWtlIHlvdS4gSSBjb3VsZG4ndCB1bmRlcnN0YW5kIGhpbSBhdCBhbGwgYW5kIHRvbGQgaGltIHRvIGJ1cm4gZXZlcnl0aGluZyBhbmQgZ2V0IGEgbmV3IGdpcmxmcmllbmQgYW5kIGFsbCB0aGUgdXN1YWwgYWR2aWNlLiBXaWZlIGNoZWF0ZWQgb24gaGltIGFuZCBsZWZ0IGhpbSB0byB0YWtlIGNhcmUgb2YgaGlzIHR3byBraWRzIGFsb25lLiAKU29tZXRoaW5nIGxpa2UgdGhpcyBwcm9iYWJseSBjb3VsZG4gYmUgZGF0ZWQgZGlyZWN0bHksIHNvIGl0cyBhZ2Ugd291bGQgaGF2ZSB0byBiZSBlc3RpbWF0ZWQgYnkgaXQgYXNzb2NpYXRpb24gd2l0aCBhcnRpZmFjdHMgb3IgY2hhcmNvYWwgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCB0aGF0IGNvdWxkIGJlIGRhdGVkLiAKSSBsaWtlIHRoZSBib2x0IHNuaXBlciBhbmQgaGF0ZSB0aGUgVlNTICh2ZXJ5IHNoaXR0eSBzbmlwZXIpLiBPbmx5IGdyYWIgYSBwaXN0b2wgb3IgYW55dGhpbmcgZ3JheSBpZiBpdCB0aGUgb25seSB0aGluZyB5b3UgY2FuIGdldCBhbmQgdXBncmFkZSBpbW1lZGlhdGVseSwgRG9uIGNhcnJ5IHR3byBBUnMsIGJ1dCB5b3UgY2FuIHBpY2sgdGhlbSB1cCBiZWNhdXNlIHlvdSBnZXQgZXh0cmEgYW1tby4gSSBzb21ldGltZXMgZXhjaGFuZ2UgdGhlIHNuaXBlciBmb3IgYSBzcGVjaWFsdHkgZ3VuLCBsaWtlIFJ1YmJlciBvciBtaW5pZ3VuLiAKQmVjYXVzZSB0aGVyZSBpcyBubyB2aWN0b3J5IGluIEFmZ2hhbmlzdGFuLiAKV2UgbG9vayBmb3J3YXJkIHRvIHdlbGNvbWUgeW91IGFuZCB5b3VyIEZhbWlseSB0byB5b3VyIG5leHQgdmlzaXQgdG8gS2F0YXRoYW5pISBXaXRoIEtpbmQgUmVnYXJkcywgQ3VzdG9tZXIgUmVsYXRpb25zIE1hbmFnZXIgLlJlYWQgbW9yZUlzIHRoZSBiZWFjaCBkaXJlY3RseSBhY2Nlc3NpYmxlIGZyb20gdGhlIHJlc29ydC4gClNoZSB0aGlua3MgaXQncyBnaG9zdHMuIEFuZCB3aGVuIEkgc2F5IGFsbCBob3VycyBJIG1lYW4gQUxMIEhPVVJTLCA2IHBtLCA5IHBtLCAzIGFtLCAxIHBtLCA2IGFtLiBXZSB3b2tlIHVwIHRvIGdvIHRvIHRoZSBzdW5yaXNlIHNlcnZpY2Ugb24gRWFzdGVyIFN1bmRheSBsYXN0IHllYXIgYW5kIEkgd2Fsa2VkIG15IGRvZyBiZWZvcmUgd2UgbGVmdCwgc2hlIGFuZCBoZXIgYm95ZnJpZW5kIHdlcmUgaW4gZnJvbnQgb2YgdGhlIHdpbmRvdyBhdCA1OjAwIGFtIGJ1dHQgYXNzIG5ha2VkIHdpdGggYWxsIHRoZSBsaWdodHMgb24uIApUbyB0aGUgc3VycHJpc2Ugb2YgcHJvZmVzc2lvbmFsIGVjb25vbWlzdHMsIHRoZSBJTUYgYWxzbyBzaG93ZWQgbm8gY29uY2VybiBpbiBpdHMgcHJlc3MgcmVsZWFzZSBhYm91dCB0aGUgYXBwcmVjaWF0aW9uIG9mIHRoZSByZWFsIGVmZmVjdGl2ZSBleGNoYW5nZSByYXRlIGluIGEgcGVyaW9kIG9mIGZhbGxpbmcgZXhwb3J0cyBhbmQgd2lkZW5pbmcgdHJhZGUgZGVmaWNpdC4gCkhvdyB0aGlzIHdvcmtzIGlzIGJlY2F1c2UgdGhlIGFyZW5hIGNob29zZXMgdGhlIDNyZCBvcHBvbmVudCBmb3IgeW91IGJhc2VkIG9uIGEgZnJhY3Rpb24gb2YgeW91ciBkZWZlbmNlIHRlYW0gcG93ZXIuIApIdWdoZXMgb3B0cyBmb3IgbW9yZSB1bml2ZXJzaXR5IGhvY2tleQpIb2xkaW5nIGEgTmV1dHJhbCBQZXJzb24gaW4gTG92aW5nIEtpbmRuZXNzIFRoaW5rIG9mIHNvbWVvbmUgeW91IHNlZSBidXQgZG8gbm90IGtub3cuIFRoZSBkcml2ZXIgb2YgeWVzdGVyZGF5J3MgYnVzLiBUaGUgcGVyc29uIHdobyBzZXJ2ZWQgeW91IGNvZmZlZSBvciBwdXQgeW91ciBncm9jZXJpZXMgdGhyb3VnaCB0aGUgdGlsbC4KU2hvcnRseSBhZnRlciBhbCBBYmFkaSdzIHNwZWVjaCwgdGhlIGNvYWxpdGlvbiBjb25ncmF0dWxhdGVkIGhpbSBvbiB0aGUgdmljdG9yeSBhZ2FpbnN0ICJhIGJydXRhbCBhbmQgZXZpbCBlbmVteSwiIGFjY29yZGluZyB0byBhIHN0YXRlbWVudC4KQW4gZWFybHkgYmx1ZmYgY2FuIGFsc28gYmUgYW4gZWZmZWN0aXZlIHN0cmF0ZWd5IGluIHlvdXIgZ2FtZSBhcyB3aGF0IGVhcmx5IGZvbGRzIGRvLiBZb3VyIGFnZ3Jlc3NpdmUgcGxheSBzaG91bGQgaW50ZW5zaWZ5IGRlZXBlciBpbnRvIHRoZSBnYW1lLiAKQ0plb3JnZSBLaW50IG1wYW5pY2QgaG9tZSBieSB0aGUgTXJzLiAKVHJvdHogZGVyIEdyZSBlbXBmaWVobHQgZXMgc2ljaCBlaW5lbiBUaXNjaCB6dSByZXNlcnZpZXJlbiwgdm9yIGFsbGVtIHdlbm4gbWFuIG1pdCBtZWhyZXJlbiBQZXJzb25lbiBrb21tdC4uIApNYXJ5IHNlcnZlZCBhcyBhIGdpcmwgc2NvdXQgbGVhZGVyIGJ1dCBhbHNvIHdhcyB0aGUgY29va2llIG1vdGhlciBmb3IgbWFueSB5ZWFycyBhcyB3ZWxsLiBTaGUgZW5qb3llZCB2b2x1bnRlZXJpbmcgYXQgdGhlIFQuIEkuIApQZWdneSwgQW5keSBPdmVyY2h1a1Bvc3RlZCBieSBDYXRoZXJpbmUgKE1hcmlvbiBRdWVzbmVsJ3MgZGF1Z2h0ZXIpIE9uIFdlZG5lc2RheSwgRGVjZW1iZXIgMTgsIDIwMTMuIApQbGVhc2UgZG9uJ3QgaHVydCB5b3VyIHNlbGYgYW5kIHBsZWFzZSBjYWxsIHRoZSBzdWljaWRlIGhvdCBsaW5lIGlmIHlvdSBldmVyIGFyZSBjb25zaWRlcmluZyBzdWljaWRlLiAKQnV0IEkndmUgYmVlbiB3cm9uZyBiZWZvcmUsIGFuZCBJJ2xsIGJlIHdyb25nIGFnYWluLiAKR2x5bm4gbWFkZSBoZXIgY29tbWl0bWVudCB0byBydW4gdHJhY2sgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gYmFjayBpbiBPY3RvYmVyLiBJdCB3YXMgYSBkZWNpc2lvbiB0aGF0IGhhcyB3ZWlnaGVkIG9uIGhlciBmb3IgbW9zdCBvZiBoZXIgaGlnaCBzY2hvb2wgY2FyZWVyLiBJdCBiZWdhbiB3aXRoIGEgZGlzY3Vzc2lvbiB3aXRoIG9uZSBvZiBoZXIgdHJhY2sgY29hY2hlcywgd2hvIHRvbGQgaGVyIHRoYXQgdGhlIHBhdGggdG8gcGxheWluZyBjb2xsZWdlIGF0aGxldGljcyB3b3VsZCBnbyB0aHJvdWdoIHRyYWNrIGFuZCBub3Qgdm9sbGV5YmFsbCwgbGlrZSBzaGUgaW1hZ2luZWQuCkFzaWFuY2hleG1peCAgMjAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpXZSBoYWQgaGltIHBsYXkgYSBmZXcgc3BlY2lhbCBzb25ncyBvZiBvdXIgY2hvb3NpbmcgYnV0IHRoZW4gd2hhdGV2ZXIgaGUgd2FudGVkLiAKRWFjaCBpbmRpdmlkdWFsIG1vZHVsZSBmb2N1c2VzIG9uIGJlc3QgcHJhY3RpY2VzIGFuZCBkZXBsb3ltZW50IGd1aWRhbmNlIGZvciBkZXBsb3lpbmcgYnVsbGV0IHByb29mLCBzZWN1cmUgY2xvdWQgc3lzdGVtcy4gV2Ugc2VlIGhvdyB0byBjb25maWd1cmUgdGhlIGFwcGxpY2F0aW9uIGFuZCB0aGVuIGN1c3RvbWl6ZSBpdC4gClBva2VyIGhhcyBiZWNvbWUgcG9wdWxhciBvbmx5IGluIHRoZSByZWNlbnQgZmV3IHllYXJzLiBZb3UgY2FuIG5vdyBnbyBpbnRvIGFueSBjYXNpbm9zIHdpdGggYSBnb29kIHBva2VyIHBpZWNlIGFzIHlvdSBjYW4gZ2V0IHRoZXNlIHBva2VyIHBpZWNlcyBhdmFpbGFibGUgaW4gbW9zdCBwb2tlciBzdG9yZXMuIFlvdSBjYW4gZ28gdG8gdGhlc2UgcG9rZXIgc3RvcmVzIHZpcnR1YWxseSBhcyB3ZWxsLiBOb3cgdGhlIGxlYWRpbmcgcG9rZXIgc3RvcmVzIGhhdmUgZ290IHRoZWlyIG9ubGluZSBvdXRsZXRzLiBZb3UgY2FuIGdvIHRvIHRoZXNlIG9ubGluZSBvdXRsZXRzIGFuZCB1c2UgdGhlIGF1dG9tYXRlZCBwYXltZW50IHN5c3RlbSB0byBwYXkgZm9yIHRoZSBwcm9kdWN0cy4gVGhlcmUgbWlnaHQgYmUgYSBmZXcgdGhvdXNhbmRzIG9mIHByb2R1Y3RzIHRvIGNob29zZSBiZXR3ZWVuLiBCdXQgeW91IGhhdmUgdG8gcGljayB1cCB0aGUgcmlnaHQgb25lIHVwIHRoYXQgY2FuIHNlcnZlIGFsbCB5b3VyIHB1cnBvc2VzLiBZb3Ugd2lsbCBuZWVkIHRoZSBiZXN0IHByb2R1Y3RzIGFtb25nIHRoZW0uIFRvIGNob29zZSBhIGdvb2QgcHJvZHVjdCwgbm93IHlvdSB3aWxsIG5lZWQgdGhlIHJldmlld3Mgb25jZSBhZ2FpbiBhbmQgbGVhcm4gc29tZSBob25lc3QgZmVlZGJhY2tzIGFib3V0IHRoZSBwb2tlciBwcm9kdWN0cyBhdmFpbGFibGUgaW4gdGhlIG1hcmtldHMuIFNheSwgeW91IGRvbid0IGhhdmUgYW55IGlkZWEsIHN0aWxsIHlvdSB3aWxsIGJlIGZpbmRpbmcgc29tZSBwcm9kdWN0cyB0byBwdXJjaGFzZSBhcyB0aGUgdG9wIGxpc3RlZCBvbmVzIGxpa2UgVGhlIEZsdXNoIEZhY2VzIFBva2VyIENhcmQgUHJvdGVjdG9yIHdpbGwgZGVmaW5pdGVseSBhdHRyYWN0IHlvdS4KQm90aCB0aGUgZW50cnkgYW5kIGV4aXQgcG9pbnRzIGluIHB1YmxpYyBob3VzaW5nIG5lZWQgZXhwbG9yYXRpb24sIHBlb3BsZSBuZWVkIHRvIGJlIGFibGUgdG8gZ2V0IGhvdXNlcyB3aGVuIHRoZXkgbmVlZCB0aGVtIGFuZCBnb3Zlcm5tZW50IG5lZWRzIHRvIHdvcmsgd2l0aCBwZW9wbGUgdG8gaGVscCB0aGVtIHN1Y2Nlc3NmdWxseSB0cmFuc2l0aW9uIG91dC4uIApIZXJqYXZlYyBwb3NpdGlvbi4gU2FkbHksIHRoaXMgaXMgb2Z0ZW4gdGhlIGNhc2UuIApCdXQgeW91IGNhbid0IGdvIHdyb25nIHdpdGggY2l2aWwgc2VydmFudHMgeW91J3ZlIG5ldmVyIGhlYXJkIG9mLiAKSSBoYXZlbiB3YXRjaGVkIGFueXRoaW5nIHRoYXQgd2FzbiBhaXJpbmcgYW5kIEkgd2F0Y2hpbmcgbGVzcyBhbmQgbGVzcyBvZiBhaXJpbmcgZHJhbWFzLiAKUGFkZG9jaydzIGdhbWJsaW5nIGhhYml0cyBtYWRlIGhpbSBhIHNvdWdodCBhZnRlciBjYXNpbm8gcGF0cm9uLiBPdmVyIHNldmVyYWwgZGF5cywgTWFuZGFsYXkgQmF5IGVtcGxveWVlcyByZWFkaWx5IGxldCBoaW0gdXNlIGEgc2VydmljZSBlbGV2YXRvciB0byB0YWtlIHN1aXRjYXNlcyB0byB0aGUgJDU5MCBwZXIgbmlnaHQgc3VpdGUgaGUgaGFkIGJlZW4gcHJvdmlkZWQgZm9yIGZyZWUuIFRoZSByb29tIGhhZCBhIGNvbW1hbmRpbmcgdmlldyBvZiB0aGUgU3RyaXAgYW5kIHRoZSBSb3V0ZSA5MSBIYXJ2ZXN0IEZlc3RpdmFsIGNvbmNlcnQgZ3JvdW5kcyBhY3Jvc3MgdGhlIHN0cmVldC4uIApTb21lb25lIHN0b2xlIGl0LiAKSXQgd2FzIHRoZSB3b3JzdCB0aGluZyB0aGF0IGNvdWxkIGhhdmUgaGFwcGVuZWQgdG8gbWUgc2tpbmNhcmUgd2lzZSBiZWNhdXNlIGl0J3Mgc28gc28gYW1hemluZyBhbmQgc28gc28gcGVyZmVjdCBmb3IgbXkgc2tpbiB0aGF0IEkgbXVzdCBoYXZlIG1vcmUhIEJ1dCB0aGUgMW96IHZlcnNpb24gaXMgJDcwISBBbmQgSSBjYW4ndCBhZmZvcmQgaXQuIApZb3UgY2FuIGFsc28gZ2V0IGZyZWUgb25saW5lIHBva2VyIG1vbmV5IGJ5IG1ha2luZyB1c2Ugb2YgYSBubyBkZXBvc2l0IGJvbnVzLiAKV293LiBJIGFwcHJlY2lhdGVkIHRoZSBjb250ZW50IGFzIHdlbGwgdGhlIHRpbWUgeW91IHRvb2sgdG8gd3JpdGUgaXQuIFRoZSBxdWljayByZWFzb24gSSBsb29raWcgZm9yIHRoZSBkYXRhIGlzIHRvIGludmVzdGlnYXRlIGFkdmVydGlzaW5nIGV4cGVuZGl0dXJlcyBJIHdhbnQgdG8gc2VlIHRoZSBtb25leSBhY3Jvc3MgdmFyaW91cyBhZ2UgZ3JvdXBzLCBzZXgsIHRpbWUgb2YgdGhlIGRheS93ZWVrCktub3dzIGhlIGhhcyBhIHByb2JsZW0sIEZyZWVkaGVpbSBzYWlkIG9mIEdvb2RtYW4uIERvZXNuIGNhcmUuIEJ1dCB0aGV5IGtlZXAgZ2V0dGluZyBpbnRvIHRoZWlyIGNhci4gCkR1cmluZyB0aGUgTm92ZW1iZXIgRGVjZW1iZXIgdGVzdCBydW4gaW4gQ2hpY2FnbywgY3JpdGljcyByaXBwZWQgdGhlIHNob3cgYW5kIGl0cyBjYXN0IG9mICJvYm5veGlvdXMiIGFuZCAiYWdncmVzc2l2ZSIgY2xvd25zLk5vdyB0aGUgY29tcGFueSBpcyByYWNpbmcgdG8gZml4IHRoZSBwcm9ibGVtcyBiZWZvcmUgYSBtdWNoIGh5cGVkIG9wZW5pbmcgaW4gTmV3IFlvcmssIHdoaWNoIGhhcyBiZWVuIGFscmVhZHkgZGVsYXllZCB0aHJlZSB0aW1lcy5UaGUgTmV3IFlvcmsgZGVidXQsIG9yaWdpbmFsbHkgc2xhdGVkIGZvciBGZWIuIApNYWlzIGVuZmluIHNpIGMndGFpdCBwb3VyIGZvdXRyZSBsYSBmcm91c3NlIGV0IGluY2l0ZXIgbGUgcHVibGljIGV0IHMnYWJzdGVuaXIgZHUgbW9pbmRyZSBjb250YWN0IGF2ZWMgY2V0dGUgbmJ1bGV1c2UsIGMnZXN0IGRlIGJvbm5lIGd1ZXJyZSAhIE51bCBkb3V0ZSBxdWUgbGEgbGVjdHVyZSBkZSBsJ2FydGljbGUgbSd2aXRlcmEgZHNvcm1haXMgZCdhdm9pciAgcnBvbmRyZSAgZGVzIHF1ZXN0aW9ucyBxdWkgcmV2aWVubmVudCBwcmlvZGlxdWVtZW50LiBEZXMgcXVlc3Rpb24gcXVpIG1lIGZhdGlndWVudC5DZSBwb3N0IGVzdCBwb3VyIGRpcmUsIHVuZSBmb2lzIGRlIHBsdXMsIHF1J2lsIGZhdXQgdml0ZXIgZGUgbWUgImdhdmVyIiBwYXIgbWFudXZyZXMgcGFyIHRyb3Agc2ludWV1c2VzICBtb2lucyBkZSBkc2lyZXIgb2J0ZW5pciBsJ2V4YWN0IGNvbnRyYWlyZSBkZSBjZSBxdWUgbCdvbiBzb3VoYWl0ZXJhaXMuRW4gMjAxMiwgaidhaSB2b3F1IGwnYWZmYWlyZSAgY29tbWUgdGFudCBlbWJsbWF0aXF1ZSBkJ3VuZSBmYXVzc2UgYWNjdXNhdGlvbiBkZSBkcml2ZSBzZWN0YWlyZSBxdWFuZCBpbCBzJ2VzdCBhZ2kgZGUgcmFkaWVyIHVuIG1kZWNpbiBub24gY29udmVudGlvbm5lbC4gCihGb3IgdGhlIHNha2Ugb2YgYWNjdXJhY3ksIFF1ZWJlYyBpcyBhYm91dCAxMCUgbm9uIHdoaXRlIHNvIHRoZXJlIHNvbWUgb3ZlcmxhcCB0aGVyZSBiZXR3ZWVuIEZyZW5jaCBzcGVha2VycyBhbmQgb3RoZXIgbWlub3JpdGllcykuLiAKV2UgaGF2ZSBvcGVuIGNhcnJ5IGFzc2Fzc2luYXRpb25zIGdvaW5nIG9uIGFuZCBwZW9wbGUgZmlnaHQgZm9yIHRoZSByaWdodCB0byBjYXJyeSBhIHJpZmxlIG9uIHRoZWlyIHNob3VsZGVyIGJ1dCBub3QgZm9yIHRoZSByaWdodHMgb2YgYSB2ZXRlcmFuIHRvIHJpZGUgaGlzIGJpa2Ugb24gaGlzIG93biBjaXR5IHN0cmVldC4gUG9pbnQgaXMsIGNvcHMgc2hvdWxkbid0IGJlIGZhY2luZyBtYXNzIHNob290aW5ncyB3aGlsZSB3b3JraW5nIGluIHNjaG9vbHMuIFRoZXkgc2hvdWxkIGJlIG1ha2luZyBzdXJlIGtpZHMgYXJlbid0IHNtb2tpbmcsIGN1dHRpbmcgY2xhc3Mgb3IgdGhyb3dpbmcgcGFwZXIgYWlycGxhbmVzLi4gCkJsb29tIGNhbiBtZWFuIHRvIGh5ZHJhdGUgZ2VsYXRpbiBpbiB3YXRlciBiZWZvcmUgYWRkaW5nIGl0IHRvIHdoYXQgeW91IGFyZSB0aGlja2VuaW5nLiBCbG9vbSBjYW4gYWxzbyByZWZlciB0byB0aGUgY2hhbGt5IHdoaXRlIGNvYXRpbmcgdGhhdCBhcHBlYXJzIG9uIGltcHJvcGVybHkgc3RvcmVkIGNob2NvbGF0ZSwgd2hlcmUgY29jb2EgYnV0dGVyIGhhcyBzZXBhcmF0ZWQgb3V0IGFuZCBzZXQgb24gdGhlIHN1cmZhY2UuU29mdCBjaGVlc2VzIHN1Y2ggYXMgQnJpZSBhcmUgc2FpZCB0byBiZSBibG9vbSByaXBlbmVkIGJlY2F1c2Ugb2YgdGhlIGxpZ2h0LCB3aGl0ZSBjb2F0aW5nIHRoYXQgZm9ybXMgb24gdGhlIHJpbmQgYXMgdGhlIGNoZWVzZSBhZ2VzLkJsb29tIGNhbiBhbHNvIHJlZmVyIHRvIHRoZSBiZW5lZmljaWFsIGZsb3JhIHRoYXQgZ3JvdyBvbiBzb21lIHZlZ2V0YWJsZXMgYW5kIGZydWl0cywgc3VjaCBhcyBncmFwZXMuUnVobG1hbiBzYXlzIGFub3RoZXIgbWVhbmluZyBvZiB0aGUgd29yZCBpcyB3aGVuIGNoZWZzIHB1dCBzcGljZXMgb3IgYXJvbWF0aWNzIGluIG9pbCBzbyB0aGF0IHRoZXkgImJsb29tIiBhbmQgcmVsZWFzZSB0aGVpciBmbGF2b3VyIGludG8gaXQuS2F0ZSwgb2YgY291cnNlLCBpcyBsb29raW5nIGZvciBpbmZvcm1hdGlvbiBvbiB0aGF0IGRlZmluaXRpb24uVGhlIHRlY2huaXF1ZSBpcyBtb3N0IG9mdGVuIHVzZWQgaW4gaG90IHByZXBhcmF0aW9ucywgc3VjaCBhcyBhbiBJbmRpYW4gY3VycnksIHdoZXJlIHNwaWNlcyBhcmUgaGVhdGVkIGluIG9pbCB0byBoZWxwIGRldmVsb3AgYW5kIHJlbGVhc2UgdGhlaXIgZmxhdm91cnMuVGhlIGJsb29taW5nIG9mIHNwaWNlcyBjYW4gYmUgZG9uZSBzZXBhcmF0ZWx5IGluIHRoZSBvaWwgb3Igb3RoZXIgZmF0LCBzdWNoIGFzIGdoZWUgKGNsYXJpZmllZCBidXR0ZXIpLiAKSGFuZGEgTG9wZXosIEluYy4gClRoZSBvbGRlc3QgcHJvZmVzc2lvbiBoYXMgZm9yIHNvbWUgYmVlbiBhIGNvbnNjaW91cyBjYXJlZXIgY2hvaWNlLi4gCk9wcG9zaW5nIGZsZWV0cyBtaWdodCBqb2NrZXkgZm9yIGZhdm9yYWJsZSBwb3NpdGlvbnMgZm9yIGRheXMgYmVmb3JlIHRoZSBmaXJzdCBtaXNzaWxlIGlzIGxhdW5jaGVkLi4gCkNQQUMgaGFzIGFsd2F5cyBiZWVuIHdvbmRlcmZ1bCBpbiBpdHMganVtYmxlIG9mIGNvbXBldGluZyBpc3N1ZSBncm91cHMgYWxsIGpvc3RsaW5nIGZvciBhdHRlbnRpb24uIEFuZCBpdCBjZXJ0YWlubHkgaGFzIHNlZW4gc2ltaWxhciB0ZW5zaW9ucyBpbiB5ZWFycyBwYXN0OiB0aGlzIGlzIHRoZSBzZWNvbmQgeWVhciB0aGF0IHRoZSBQb2tlciBBbGxpYW5jZSBoYXMgc2V0IHVwIHNob3AgYXQgQ1BBQy4gQnV0IGl0IHdhcyBzdHJpa2luZyB0byBzZWUgaW4gc3BlZWNoIGFmdGVyIHNwZWVjaCBtYW55IG9mIHRoZSB3ZWRnZSBpc3N1ZXMgdGhhdCBzbyBwcmVvY2N1cGllZCB0aGUgbW9zdCByZWNlbnQgR09QIG1ham9yaXR5ICAgVGVycnkgU2NoaWF2bywgYWJvcnRpb24sIHN0ZW0gY2VsbHMsIGdheXMsIGZhbWlseSB2YWx1ZXMsIHJlbGlnaW9uIGluIGdvdmVybm1lbnQgICBzdWJsaW1hdGVkIHRvIHRoZSBHT1AncyBsYXNlciBsaWtlIGZvY3VzIG9uIHRoZSBlY29ub215IGFuZCB0byBzZWUgdGhlIENQQUMgYXR0ZW1wdHMsIGFzIHdpdGggR09Qcm91ZCwgdG8gd2lkZW4gdGhlaXIgdGVudC4uIApBbmQgaW4gbXkgb3BpbmlvbiwgdGhlcmUgYXJlIHBsZW50eSBvZiByZWFvbnMgdG8gd3JpdGUgZXhwbGljaXQgcmFwZSBzY2VuZXMgb3RoZXIgdGhhbiBzaG9jayB2YWx1ZS4gCmhyZXIgenUgZGVuIE9seW1waXNjaGVuIFNwaWVsZW4gMjAwOApUdXJuIDN4LgpJZiB3ZSBuZWVkIHRvIGJlIGF2ZW5naW5nLCBwb3dlcmZ1bCwgb3IgdmljdGltaXplZCB0aGVuIHRoYXQncyB3aGF0IHdlIGhhdmUgdG8gbG9vayBmb3Igd2l0aGluIG91cnNlbHZlcyB0byBwb3J0cmF5IHRoZSB1bnNwb2tlbi5JcyB0aGVyZSBhIHByb2Nlc3MgdG8gdGhpcz9QbGF5aW5nIGEgYml0Y2gsIGZvciBleGFtcGxlLCB3ZSBoYXZlIHRvIGZpbmQgd2hhdCBtb3RpdmF0ZXMgdGhlIGNoYXJhY3RlciBhbmQgZmVlbCB0aGVtLiBTaGUgY291bGQgYmUgYSBtaXNndWlkZWQgYW5kIG1pc3VuZGVyc3Rvb2Qgd29tYW4sIHNoZSBjb3VsZCBiZSBoYXRlZnVsIGZvciBtYW55IHJlYXNvbnMgc28gaW4gYWN0aW5nIHRoZSBwYXJ0IHRoZSBwb3J0cmF5ZXIgaGFzIHRvIGZlZWwgaGVyIGNoYXJhY3RlcidzIHZlcnkgc291bC5JcyBpdCBzYWZlIHRvIHNheSB0aGVyZSdzIGEgY2VydGFpbiBzdGFiaWxpdHkgdG8gYW4gYWN0aW5nIGNhcmVlcj9PaCBteSBnb29kbmVzcyBubyEgT24gYW55IGdpdmVuIGRheSB3ZSBjb3VsZCBiZSBzYXZpbmcgdGhlIHdvcmxkLCBtb3VybmluZyBvdXIgZHlpbmcgY2hpbGQsIGdldHRpbmcgYmVhdGVuIHVwLCBvciBwb3J0cmF5aW5nIGEgc2V4cG90LiAKRG8gbm90IGluZmxhdGUgbWFzc2l2ZSBwb3RzIHdpdGggb25lIHR3byBwYWlyIGhhbmRzLiBVc2UgaW1wbGllZCBvZGRzLCBidXQgZG8gbm90IG92ZXJlc3RpbWF0ZSB0aGVtLiBSaXZlciBiZXRzIGFyZSBtb3N0IG9mIHRoZSB0aW1lIHZhbHVlIGJldHMuIApJIHNtaWxlZCBhcyBoZSBiZW50IG15IGJvZHkgaW50byBhIGNyZXNjZW50IEkgZGlkIG5vdCBrbm93IEkgcmVtZW1iZXJlZCBmcm9tIG15IHNlc3Npb24gd2l0aCBTcnlnbGV5LiAKSXQganVzdCBkb2Vzbid0IHdvcmsgdGhhdCB3YXkuIApJUHJlZGljdEFSZWRkaXQgIDIwLDUwMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KV2hlcmUgZG8geW91IHRlYWNoPyBBbGwgSSBiZWxpZXZlIGlzIHRoYXQgYSBzdHVkZW50IHdobyBpcyBkaXNlbmdhZ2VkIGFuZCB3YW50IHRvIGJlIHRoZXJlIGlzIHN0aWxsIGEgbWVtYmVyIG9mIHlvdXIgY2xhc3MuIApXZSBoYWQgYSBwcmV0dHkgZ29vZCBleHBlcmllbmNlIHdpdGggRGlsYXdyaSBCYW5rIFN0cmVldCBNYXpkYS4gCkFuYXN0YXNpYSBWYXNodWtldmljaCwga25vd24gYnkgaGVyIHBlbiBuYW1lIE5hc3R5YSBSeWJrYSwgd2FzIGhlbGQgZm9yIHF1ZXN0aW9uaW5nIGF0IGEgTW9zY293IGFpcnBvcnQgb24gVGh1cnNkYXkgZXZlbmluZyBhZnRlciBzaGUgd2FzIGRlcG9ydGVkIGZyb20gVGhhaWxhbmQgYXMgcGFydCBvZiBhIGdyb3VwIGNvbnZpY3RlZCBvZiBwYXJ0aWNpcGF0aW5nIGluIGEgInNleCB0cmFpbmluZyBjb3Vyc2UsIiBvdGhlciBwYXNzZW5nZXJzIG9uIHRoZSBmbGlnaHQgdG9sZCBBRlAuCklmIHlvdSByZWFsbHkgd2FudCBoZWxwIGF2b2lkaW5nIHRoaXMsIHRoZSBvbmx5IHRoaW5nIHlvdSBjYW4gcmVhbGx5IGRvIGlzIGFncmVlIHRvIHF1aXQgcGxheWluZyB4IGhvdXJzIGJlZm9yZSBiZWQgbm8gbWF0dGVyIGhvdyBnb29kIHRoZSBnYW1lIGlzIG9yIGhvdyBzdHVjayB5b3UgYXJlIGV0Yy4gCkxldHMgc2F5IFBsYXllciBvbmUgaGFzIDIsMiw1LDUsOCBhbmQgcGxheWVyIHR3byBoYXMgMiwyLDUsNSxKLiBQbGF5ZXIgdHdvIHdvdWxkIHdpbiBiZWNhdXNlIG9mIGhpcyBKYWNrLiAKQXJjaGl2ZXMgb2YgSW50ZXJuYWwgTWVkaWNpbmUgMjAxMApEZWZpbml0ZWx5IGdldCB3YXRlcnByb29mIHN0dWZmIHNhY2tzIGZvciBldmVyeXRoaW5nIGluIHlvdXIgYmFnLCBpdCBhIHdldCBwbGFjZSEuIApNb3N0IFBha2lzdGFuaXMgc2ltcGx5IGRvbid0IGJlbGlldmUgdGhhdCB0aGUgUGFraXN0YW5pIHN0YXRlIGlzIGNhcGFibGUgb3Igd2lsbGluZyB0byB0YWtlIG9uIHRoZSBjcmltaW5hbCBtYWZpYSwgdGhlIGV4dG9ydGlvbmlzdHMgYW5kIHRob3NlIGNhcnJ5aW5nIG91dCB0YXJnZXRlZCBraWxsaW5ncyB3aG8gYXJlIG1hcmtpbmcgdGhlaXIgZXRobmljIHRlcnJpdG9yeSB3aXRoIGJsb29kLiAKTG9sIER1cmluZyB0aGUgc3VtbWVyIHdlIGhhZCBhIHF1YWRydXBsZSBvdmVyZG9zZS4gCkhlIGZpbmlzaGVzIGFuZCBIb29rZXIgcmVhc3N1cmVzIHRoZSBjaGljay4gCkxpc3RlbiwgSSBvcHBvc2UgY3JhenksIHJpZ2h0IHdpbmcgaG9tb3Bob2JlcyBhcyBtdWNoIGFzIHRoZSBuZXh0IHBlcnNvbiwgYnV0IEkgY2FuIGhlbHAgdGhpbmsgdGhhdCBwZXJoYXBzIHRoZWlyIHBlcnNvbmFsIGxpdmVzIGFyZSBub3QgdGhlIHBvaW50PyBQZXJoYXBzIG5vIHBvbGl0aWNpYW4gcGVyc29uYWwgbGlmZSBpcyB0aGUgcG9pbnQ/LiAKSXQgc291bmRzIGFzIGlmIHlvdSBub3cgZmVlbCBndWlsdHkgZm9yIHRha2luZyBwYXJ0IGluIHRoZXNlIHRoaW5ncy4gCkxlYXJuIG1vcmUgUmVhZCBmb3IgRnJlZSAuIApTbyBJIHdvcmtlZCBuZXh0IHRvIHRoZW0gYW5kIGFsd2F5cyBoYWQgdG8gc2VlIGFuZCBoZWFyIGhvdyBtdWNoIHRoZXkgd2VyZSBnb2luZyB0aHJvdWdoIGFuZCB0aGUgbWFuYWdlcnMga25ldyB0aGlzIGFuZCBoYWQgYSBzaWduIHRoYXQgc3VnZ2VzdGVkIGN1c3RvbWVycyBzaG91bGQgdGlwIHRoZSB0byBnbyBwZW9wbGUuCkdvYWwgaXMgJDcwLDAwMCwgSGFsbGVyIHNhaWQuLiAKS25vd2luZyB0aGVtLCB0aGVyZSB3ZXJlIGEgbWlsbGlvbiBxdWVzdGlvbnMgdGhleSBhc2tlZCwgc28gaXQgbXVzdCBoYXZlIGJlZW4gZ29vZC4uIApQYjE0bXBoICAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQXV0cmUgY2FyYWN0cmlzdGlxdWUgcXVlIGxlIGNobmUgcGRvbmN1bCBuZSBwYXJ0YWdlIHBhcyBhdmVjIGxlIHJvdXZyZTogc29uIGltcHJpZXV4IGJlc29pbiBkIFNpIGxlIHNlY29uZCBwZXV0IHMgcGFzc2VyIHBlbmRhbnQgcXVlbHF1ZXMgc2VtYWluZXMsIGNlbGEgZXN0IGltcG9zc2libGUgcG91ciBsZSBwcmVtaWVyLiBDIGNlbGEgcXVpIGEgdCBmYXRhbCBhdSBjaG5lIHBkb25jdWwgZHVyYW50IGxhIHNjaGVyZXNzZSBlc3RpdmFsZSBkZSAxOTc2LCBlbiBwYXJ0aWN1bGllciBkYW5zIGxhIGZvcnQgZGUgVHJvbmFpcyAoMTcpIGVuIEF1dmVyZ25lLCBvIGwgY29tcHRlIGVuY29yZSBlbnZpcm9uIDUgJSBkZSBjaG5lcyBwZG9uY3VscywgY2V1eCBheWFudCBwcmlzIGR1cmFudCBjZXR0ZSBzY2hlcmVzc2UgYXlhbnQgdCByZW1wbGFjcyBwYXIgZHUgcm91dnJlLiBMYSBwcnNlbmNlIGR1IHBkb25jdWwgZGFucyBjZSBtYXNzaWYgZm9yZXN0aWVyIGRjb3VsZSBkdSBmYWl0IHF1ZSBsIGFmaW4gZCBsYSBwcm9kdWN0aW9uIGRlIGJvaXMsIGEgcGxhbnQgZHUgY2huZSBwZG9uY3VsIGRzIGxlIFhJWCBtZSBzaWNsZS4gClNvdW5kaW5nIHJvY2tldHMgb3JvdmlkZSB0aGUgb25seSBtZWFucyBmb3IgaW4gc2l0dSBtZWFzdXJlbWVudHMgYXQgYWx0aXR1ZGVzIGJldHdlZW4gdGhlIG1heGltdW0gYWx0aXR1ZGUgb2YgYmFsbG9vbnMgKGFib3V0IDQ4IGtpbG9tZXRlcnMgKDMwIG1pbGVzKSkgYW5kIHRoZSBtaW5pbXVtIGFsdGl0dWRlIGZvciBzYXRlbGxpdGVzIChhYm91dCAxNjAga2lsb21ldGVycyAoSU9PIG1pbGVzKSkuIFRoZSBmbGlnaHQgbm9ybWFsbHkgbGFzdHMgbGVzcyB0aGFuIDMwIG1pbnV0ZXMuIApJdCBqdXN0IGZlZWxzIGFyYml0cmFyeSBhbmQgc29tZXdoYXQgZGlzY3JpbWluYXRvcnkuIAo0IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvRm9yIG1lLCB0aGUgdGVkaXVtIGFuZCB0aGUgdHJpdmlhbCBkZXRhaWxzIGtpbmQgb2YgcmVpbmZvcmNlZCB0aGUgInJlYWxpc20iIHBvcnRpb24gb2YgdGhlIG1hZ2ljYWwgcmVhbGlzbS4gVGhpcyBpcyB3aGF0IHRoZSBsaWZlIGNvbnNpc3RzIG9mLCB0aGlzIGlzIGhvdyBpdCBsb29rcywgYW5kIG5vdCBldmVuIHRoZSBtYWdpYyBjYW4gbWFrZSBpdCBsZXNzIHBvaW50bGVzcy4gSW4gZmFjdCwgaXQgbWFrZXMgaXQgZXZlbiBtb3JlIHNvLiAKVGhleSBoYXZlIG9uZSBjaGlsZCwgd2hvIHdlIGNhbGwgS2VsbHksIGFnZSAzLiAKU2hlIGlzIHByZXR0eSBzdHJvbmcsIGJ1dCBzdGlsbCBmZW1pbmluZSBhbmQgbG92YWJsZS4gVGhhdCBkYXkgSSB0aG91Z2h0ICJXb3cuIFNoZSBjb3VsZCBiZSB3aWZlIG1hdGVyaWFsLiIgQW5kIHNoZSB3YXMuLiAKSWwgeSBhIGNpbnEgbWlsbGUgYW5zLCBsZXMgQ2hpbm9pcyBhdmFpZW50IG9ic2VydiBxdWUgZGVzIHBhcnRpZXMgZHUgY29ycHMgY29tbXVuaXF1YWllbnQgYXZlYyBsZSBtb25kZSBleHRyaWV1ciA6IGxhIHR0ZSwgcGFyIGxlcyBzZW5zIGV0IGxlIGNlcnZlYXUsIHNlcnQgZGUgcmVsYWlzIGF2ZWMgbGVzIGNpZXV4OyBsZXMgbWFpbnMsIHBhciBsZSB0b3VjaGVyIGV0IGwgY3JhdHJpY2UsIHNvbnQgbm9zIG1veWVucyBkZSBjb21tdW5pY2F0aW9uIGF2ZWMgbGVzIGF1dHJlczsgbGVzIG1hbWVsb25zLCBwYXIgbGV1ciBhc3BlY3Qgbm91cnJpY2llciBldCBzZW5zdWVsOyBsIG5vbiBzZXVsZW1lbnQgcGFyIGxhIGRmY2F0aW9uLCBtYWlzIGF1c3NpIHBhciBsYSBzZW5zdWFsaXQsIHN1cnRvdXQgY2hleiBsZXMgamV1bmVzIGVuZmFudHM7IGxlcyBvcmdhbmVzIGduaXRhdXgsIHBhciBsZSBmYWl0IHF1IHNvbnQgbGUgbGlldSBkZSBub3RyZSBuYWlzc2FuY2UgZXQgYXVzc2kgcGFyIGxldXIgc2Vuc3VhbGl0OyBldCBsZXMgcGllZHMgcXVpLCBwYXIgbGUgZmFpdCBxdSBub3VzIGRwbGFjZW50IGRhbnMgbGUgbW9uZGUsIHNvbnQgbm9zIG1veWVucyBkZSBjb21tdW5pY2F0aW9uIGF2ZWMgbGEgdGVycmUuIEMgYXUgbW9tZW50IG8gbm91cyBub3VzIHNvbW1lcyBwb3VyIGxhIHByZW1pcmUgZm9pcyB0ZW51cyBzdXIgbm9zIHBpZWRzIHF1ZSBzIGluc3RhdXJlIGxhIHBvbGFyaXQgZHUgY2llbCBldCBkZSBsYSB0ZXJyZSwgc3ltYm9saXNlIHBhciBsZXMgZm9yY2VzIGQgWWluIGV0IFlhbmcgZGFucyBsYSBwaGlsb3NvcGhpZSBjaGlub2lzZS4gCkJ1dCBJIGFsd2F5cyBrbmV3IHdpbm5pbmcgdGhlIE1haW4gRXZlbnQgd2FzIGEgYmlnIGxvbmcgc2hvdC4gClRoZXkgbWF5IGJlIGEgbGl0dGxlIHByaWN5IGJ1dCB0aGV5IHdpbGwgbGFzdCBqdXN0IGFzIGxvbmcgYXMgZG8gY2xheSBjaGlwcy4gClRoZXkgd291bGRuIHRhbGsgdG8gQ29tZXkgc28gaGUgd3JvdGUgYW4gZW1haWwgdG8gaGlzIGJvc3MgKHdoaWNoIGhlIG1hZGUgc3VyZSB3YXMgZG9jdW1lbnRlZCBhbmQgc2F2ZWQgYnkgdGhlIGRlcGFydG1lbnQpIHNheWluZyBoZSB0aGlua3MgdGhleSBzaG91bGQgdGFsayB0byBDb21leS4gSGUgZXZlbnR1YWxseSB3ZW50IHRvIFNETlkgYW5kIHNhaWQgaGUgd2FzIHZlcnkgd29ycmllZCBzb21ldGhpbmcgd2VpcmQgd2FzIGdvaW5nIG9uIGFuZCB0aGF0IGhlIHdhcyBiZWluZyBzZXQgdXAgYXMgdGhlIGZhbGwgZ3V5IGJ5IGhpcyBib3NzZXMgYXQgdGhlIE5ZIEZCSSBvZmZpY2UuIApBdmVyYWdlQnViYmxlIHUKVGhlcmUgcydubyBnbG9yeSBsaWtlIHRvIHRoaXMsIHRuZWljIHMgX2YsIHNucG50IFR3byBUYXZlcm5zOyBNci4gClBsdXNpZXVycyBwbGFpc2FudHMgZGpldW5lcnMgZG9udCB1biB0b3V0ICBmYWl0IGRsaWNpZXV4IGNoZXogQ29yZXR0YSAoYyd0YWl0IHVuZSBkZXV4aW1lIGZvaXMgcXVpIGNvbmZpcm1lIHF1ZSBjJ2VzdCB2cmFpbWVudCBiaWVuLCBwaG90b3MgZWZmYWNlcyBwYXIgZXJyZXVyLikgZXQgdW4gcmV0b3VyLCBlbmNvcmUgdW5lIGZvaXMsIGNoZXogTXVyZSBvIGxlIHRyaW8gZGUgc2FsYWRlcyBvcmlnaW5hbGVzIHBvdXIgNyw1MCBldXJvcyBlc3Qgc3JlbWVudCB1biBkZXMgbWVpbGxldXJzIHJhcHBvcnRzIHF1YWxpdCBwcml4IHF1ZSBqZSBjb25uYWlzc2UgKHBob3RvKS4KTWFydmluIFJldHRlbm1laWVyOiBBIEdlcm1hbiB0aGF0IGJlY2FtZSB0aGUgZmlyc3QgcGxheWVyIHRvIHdpbiBiYWNrIHRvIGJhY2sgV1BUIGV2ZW50cy4gSGUgYSBjcmF6eSBmdW4gbG92aW5nIGZvcmNlIHRoYXQgUGFydHkgUG9rZXIgbWFkZSBvbmUgb2YgdGhlaXIgZmV3IHNwb25zb3JlZCBwcm9zLiBIZSBpbiB0aGUgbWl4IGluIGFueSB0b3VybmFtZW50IGhlIHBsYXlzLgpJdCB3b3VsZCBhbG1vc3QgcmVzb3J0IHRvIGd1ZXJpbGxhIHN0eWxlIHRhY3RpY3MgYW5kIGluc3VyZ2VuY3ksIG5vdGhpbmcgcmVhbGx5IG5ldyBoZXJlLiAKRXZlbiBmYXJtaW5nIE1hbmRhbG9yaWFuIGFybW9yIG9yIGpldHBhY2tzIG1lYW50IGZhcm1pbmcgdGhlIHBhcnRzLCB3aGljaCBhIGNyYWZ0ZXIgdGhlbiBoYWQgdG8gdXNlIHRvIG1ha2UgdGhlbS5FYWNoIHJlc291cmNlIGhhZCBzdGF0cywgYW5kIHdhcyBvbmx5IGF2YWlsYWJsZSBpbiB0aGUgd29ybGQgZm9yIGEgbGltaXRlZCB0aW1lLiBTb21lIHNlcnZlcnMgY291bGRuIG1ha2UgY2VydGFpbiB3ZWFwb25zIGZvciBtb250aHMgYmVjYXVzZSBhIGNlcnRhaW4gdHlwZSBvZiBhbHVtaW51bSBkaWRuIHNwYXduLiAKQW5kIHRoZW4sIGFjY29yZGluZyB0byBSb21hbiBQb2xhbnNraTogV2FudGVkIGFuZCBEZXNpcmVkLCBhIGRvY3VtZW50YXJ5IG1hZGUgYnkgTWFyaW5hIFplbm92aWNoLCBoZSBtYXkgaGF2ZSBiZWVuIHNldCB1cCBmb3IgYXJyZXN0IGFuZCBwcm9zZWN1dGlvbiBieSBzZXZlcmFsIGtleSBwbGF5ZXJzIGluIHRoZSBMQSBEaXN0cmljdCBBdHRvcm5leSBvZmZpY2UsIGZvcmNpbmcgaGltIGludG8gaGlzIGxpZmUgaW4gZXhpbGUgaW4gRnJhbmNlLgpBcyBteSBmYXRoZXIgZG9jdG9yIGV4cGxhaW5lZCB0byBtZTogaW4gQ2FsaWZvcm5pYSwgdGhlIHRyaWNrIGlzIHRvIHRha2UgdGhlIGVsZGVybHkgcGF0aWVudCB0byB0aGUgaG9zcGl0YWwgYW5kIHRoZW4geW91IHJlZnVzZSB0byB0YWtlIHJlc3BvbnNpYmlsaXR5IHdoZW4gdGhlIGhvc3BpdGFsIHdhbnRzIHRvIHJlbGVhc2UgdGhlIHBhdGllbnQuIApZb3UgbG92ZSBmYXN0IHBhY2VkIGV4Y2l0ZW1lbnQuIApBbHNvIGlmIHlvdSBwbGF5aW5nIHBvY2tldCBmb3VycyBwcmUsIGl0IGtpbmQgaGFyZCB0byBqdXN0aWZ5IGJhY2tpbmcgYXdheSBmcm9tIGEgc2V0IG9mIGZvdXJzIG9uIGEgc2l4IGhpZ2ggYm9hcmQuIElmIGhlIGRpZG4gc2hvdmUgZmlyc3QsIHdoaWNoIGhlIHByb2JhYmx5IGRpZCwgc2luY2UgaGUgbm90IGJ1dHRvbiwgSSBndWVzcyBhIG1vbnN0ZXIgZm9sZCBjb3VsZCBiZSByYXRpb25hbGl6ZWQgb24gdGhlIGdyb3VuZHMgdGhhdCAiaWYgbXkgb3Bwb25lbnQgaXMgc2hvdmluZyB0aGlzIGJvYXJkIHRoZSBjb25kaXRpb25hbCBwcm9iYWJpbGl0eSBvZiBhIHNldCBvZiBzaXhlcyBvciBzdHJhaWdodCBpcyBoaWdoIiwgYnV0IGV2ZW4gdGhlbiwgc2V0IG9mIGRldWNlcyBvciBvdmVycGFpciBpcyBhbHNvIHBvc3NpYmxlIChldmVuIGFzc3VtaW5nIG5vYm9keSBpcyBnb2luZyB0byBzaG92ZSBibHVmZiB3aGVuIHRoZXkgc3RhcnRlZCB0aGUgaGFuZCB3aXRoIHRoaXJ0eSBiaWcgYmxpbmRzKS4gCkZvcnR1bmF0ZWx5LCB0aGUgY2xvc2luZyBkb3duIG9mIG90aGVyIHNleHVhbCBhbmQgcm9tYW50aWMgcG9zc2liaWxpdGllcyBpbiBBcmNoaWUgbWlnaHQgc2lnbmFsIHRoYXQgdGhpcyBzdHJpcCBoYXMgZmluYWxseSwgYWZ0ZXIgbmVhcmx5IDcwIHllYXJzLCBydW4gaXRzIGNvdXJzZS4gClRoZSBMb25kb24gUGxhbiB0cmFuc2l0IGNvcnJpZG9ycyB3ZXJlIGludGVuZGVkIGZvciBzb21lIGtpbmQgb2YgcXVhbGl0eSByYXBpZCB0cmFuc2l0IHN5c3RlbSwgd2l0aCB0aGUgZG9jdW1lbnQgc3BlY2lmaWNhbGx5IHBvaW50aW5nIHRvIGl0IGFzIGluY2VudGl2ZSBmb3IgZGV2ZWxvcG1lbnQgYWxvbmcgcmFwaWQgdHJhbnNpdCBjb3JyaWRvcnMgYW5kIGF0IHRyYW5zaXQgc3RhdGlvbnMuIHRyYW5zcG9ydGF0aW9uIHBsYW5uaW5nIGV4cGVydCBBbWVyIFNoYWxhYnksIGEgbWVtYmVyIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFRvcm9udG8gVHJhbnNwb3J0YXRpb24gUmVzZWFyY2ggSW5zdGl0dXRlLCBzYWlkIHRoZSBiZXN0IGFwcHJvYWNoIGlzIHRvIGludmVzdCBpbiB0cmFuc2l0LCBidXQgb25seSB3aGVyZSBpdCBtYWtlcyBzZW5zZS4KSGlzIHN0b3J5IGRvZXNuJ3QgYnJpbmcgbXVjaCBhY3Rpb24gYW5kIGluIHRoZSBlbmQgZml6emxlcyBvdXQgd2l0aCBMZXZpdHQgbG9zaW5nIG91dCB0byB0aGUgcG93ZXJmdWwgc2VuYXRvci5DbGl2ZSBPd2VuJ3MgY2hhcmFjdGVyIER3aWdodCBpcyBwbGF5ZWQgdGhpcyB0aW1lIGFyb3VuZCBieSBKb3NoIEJyb2xpbi4gClRoZXJlIGlzIGFtcGxlIG9uIHNpdGUgcGFya2luZy4gT3VyIGxvY2F0aW9uIGluIEJldGhsZWhlbSBUb3duc2hpcCwgUGVubnN5bHZhbmlhLCBpcyBvbmx5IGEgc2hvcnQgZHJpdmUgZnJvbSBRdWFrZXJ0b3duLCBQaGlsbGlwc2J1cmcsIFN0cm91ZHNidXJnLCBhbmQgbXVjaCBvZiBOZXcgSmVyc2V5LiAKV2UgYWxsIG5lZWQgYSBjZXJ0YWluIGFtb3VudCBvZiBtb25leSB0byBiZSBoYXBweS4gQnV0IGhvdyBtdWNoPwpJbiBmYWN0LCB3ZSd2ZSBoYWQgc29tZSBvdGhlcnMgb3ZlciBzaW5jZSB0aGVuIHdobyByZWFsbHkgdGhvdWdodCB3ZSBkaWQuIApUaGUgQWN0IGhhZCBhbm90aGVyIGltcG9ydGFudCBzdGlwdWxhdGlvbjogdGhlcmUgY291bGQgbmV2ZXIgYmUgbW9yZSB0aGFuIDQwIGNhc2lub3MgaW4gdGhlIHdob2xlIG9mIElyZWxhbmQgYW5kIHRoYXQgZWFjaCBvbmUgY291bGQgaGF2ZSBubyBtb3JlIHRoYW4gMTUgdGFibGVzLgpZb3Ugd29uIGJlIGtlZXBpbmcgdXAgd2l0aCBpbmZsYXRpb24uIFNpbmNlIHRoZSBwdXJwb3NlIG9mIHNhdmluZyBhbmQgaW52ZXN0aW5nIGluIHRoZSBmaXJzdCBwbGFjZSBpcyB0byBoYXZlIHlvdXIgbW9uZXkgZWFybiBtb25leSBmb3IgeW91LCB5b3UgYWN0dWFsbHkgbG9zaW5nIGdyb3VuZCwgc2FmZWx5LiBMb25nZXIgZGF0ZWQgYm9uZHMgYWxzbyBoYXZlIGludGVyZXN0IHJhdGUgcmlzayB3aGVuIHJhdGVzIHN0YXJ0IG1vdmluZyBiYWNrIHVwLgpCdXQgd2hhdCBJIHRlbGxpbmcgeW91IGlzIHdoYXQgdGhlIHBlb3BsZSB3aG8gdW5kZXJzdGFuZCB0aGF0IGRhdGEgYXJlIHNheWluZy4gV2hvIGFyZSB5b3UgbGlzdGVuaW5nIHRvLCBleGFjdGx5LCBhbmQgd2h5IGRvIHlvdSB0aGluayB0aGV5IGtub3cgbW9yZSBhYm91dCBjbGltYXRlIHNjaWVuY2UgdGhhbiBhY3R1YWwgY2xpbWF0ZSBzY2llbnRpc3RzPyhBbHNvLCBidHcsIG9uZSBzaG91bGQgbmV2ZXIgdGFrZSBhIHNpbmdsZSBzdHVkeSwgbm8gbWF0dGVyIGhvdyB3ZWxsIGRlc2lnbmVkIGFuZCBjb25kdWN0ZWQsIGFzIGdvc3BlbC4gQSBzaW5nbGUgc3R1ZHksIGF0IGJlc3QsIHNheXMgInRoaXMgaXMgY29tcGVsbGluZyBldmlkZW5jZSIuIApUaGUgb25lIHRpbWUgSSBoYWQgQWNlIEtpbmcgYW5kIGhlIGhhcyAyIHF1ZWVucy4gSXQgc2VlbWVkIHJpZ2dlZCBmb3Igc3VyZS4gCkJ1dCBpbnN0ZWFkIG9mICJjaGFuZ2UgbWFuYWdlbWVudCAiIHlvdSBoYXZlIGFkbWluaXN0cmF0b3JzLiAKSGlzIG1haW4gYXR0YWNrIHdhcyBvbiBCZW4gQ2Fyc29uLiBUaGUgbmV1cm9zdXJnZW9uIGlzIGxlYWRpbmcgaW4gbWFueSBwb2xscywgYW5kLCBjcnVjaWFsbHksIGhlIGxlYWRzIGluIElvd2EuCkRlZmluaXRlbHkgbXkgZmF2b3JpdGUgem9tYmllIGdhbWUgb2YgYWxsIHRpbWUuIFBsdXMgd2hlbiB5b3UgYSBsb3cgbGV2ZWwgYW5kIHRoZSBzdW4gZ29lcyBkb3duIHlvdSB3aWxsIGJlIG5lZWRpbmcgYSBmcmVzaCBwYWlyIG9mIHBhbnRzLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0xvb2sgYXQganVzdCB0aGlzIHBvc3QsIHRoZSB0ZXJtIGRvZXNuIHJlYWQgZGVyb2dhdG9yaWx5IHRvIG1lIGF0IGFsbC4gV2Ugbm90IHRyeWluZyB0byB0YWxrIGJhZCBhYm91dCB0aGVtLCBub3QgdHJ5aW5nIHRvIG1ha2UgZnVuIG9mIHRoZW0sIGV0Yy4gSG9uZXN0bHksIGlmIHlvdSBoYXZlIGEgcHJvYmxlbSB3aXRoIHRoaXMsIHlvdSBoYXZlIGEgbWFqb3IgcHJvYmxlbSB3aXRoIHRoZSBMdXRoZXJhbiBDb25mZXNzaW9ucyAgd2hpY2ggeW91IHN1YnNjcmliZSB0byBiZWNhdXNlIHRoZXkgY29udGFpbiB0aGUgV29yZCBvZiBHb2QgIGFuZCB0aGUgZW50aXJldHkgb2YgTHV0aGVyIFdvcmtzLCBhcyBpdCBhcHBlYXJzIGEgbGl0YW55IG9mIHRpbWVzIHRoZXJlaW4uIApYcmF5UHVuayB1CkkgdXNlZCB0byBsaXZlIGJ5IHNudSAoIHJlcHJlc2VudCEpIGFuZCB3b3JrZWQgb3ZlciBieSBqYW1zaWwuIEkgdGFrZSB0aGUgdHJhaW4gZnJvbSBzZW91bCBuYXRpb25hbCB1bml2ZXJzaXR5IGF0IGFyb3VuZCA4YW0uIApJbiBkZXIgSGF1cHRzdGFkdCBCZXJsaW4gd2lyZCBqdXN0IGluIGRpZXNlbSBKYWhyIGVpbiBlcm5ldXRlciBUb3VyaXNtdXNzY2h1YiBlcndhcnRldDogQW0gOS4gTm92ZW1iZXIgamhydCBzaWNoIGRlciBNYXVlcmZhbGwgenVtIDI1LiBNYWwgICB2aWVsZSBpbnRlcm5hdGlvbmFsZSBCZXN1Y2hlciB3ZXJkZW4gaW4gZGVuIEhvdGVscyBlcndhcnRldC4uIApPYnZpb3VzbHksIGlmIHlvdSdyZSB1bmNvbWZvcnRhYmxlIHdpdGggdGFraW5nIGFueSBtZWRpY2F0aW9uLCB0aGVuIHlvdSBoYXZlIGV2ZXJ5IHJpZ2h0IHRvIGNob29zZSBub3QgdG8uIEJ1dCBwbGVhc2UgZG9uJ3QgdGhpbmsgdGhhdCB5b3UgaGFkL2hhdmUgYW4gYWRkaWN0aW9uIHByb2JsZW0sIGFuZCBwbGVhc2UgZG9uJ3QgYmUgYWZyYWlkIHRvIHRha2Ugd2hhdGV2ZXIgbWVkaWNhdGlvbiB5b3UgbmVlZCB0byBjb250cm9sIHlvdXIgc3ltcHRvbXMuLiAKQnV0IHBsYXN0aXF1ZSByZWFjdGlvbiB0byBzY2FybGV0IHJlYWxseSBzYXlzIGl0IGFsbCBmb3IgbWUuIApJIGxvb2tlZCBpbnRvIHRoaXMsIGFuZCBJIGRvIGJlbGlldmUgdGhhdCBvdXIgZWZmb3J0cyB0byBoYW5kbGUgdGhpcyB3ZXJlIG5vdCBzdWZmaWNpZW50LiAKVGhpcyBpcyBhZnRlciBoZSBoZWFyZCBmcm9tIGhpcyBOYXZ5IGJyb3RoZXIuIApBcmUgdGhleSBnb29kIG5vdz8gV2hhdCBkb2VzIHRoYXQgbWVhbiBmb3IgdGhlaXIgdmljdGltcyBhbmQgdGhlaXIgYWN0cz8uIApJIGFtIDNyZCBnZW4gb24gbXkgb3RoZXIgc2lkZSwgYW5kIHRoZXkgY2FtZSBpbiB0aGUgMTk0MHMsIGxpdmluZyBpbiB0aGUgU291dGguIE15IG1vbSBhbmQgaGVyIHNpYmxpbmdzIGhhdmUgc291dGhlcm4gYWNjZW50cywgZXZlbiB3aGVuIHNwZWFraW5nIGluIENhbnRvbmVzZS4KQWJlciBpaHJlIEhuZGUgaGF0dGVuIHNjaG9uIGRlbiBlcnN0ZW4gU2F0eiBhbHMgQW50d29ydCBiZWdvbm5lbjogTmVpbiwgRG9jIENhcmxvcywgZGllIFdFIGJlc2NoZnRpZ3QgbWljaCBudXIgaW4gZGVyIEZhbnRhc2llIC4gCkkgbWVhbiBldmVuIHRoZSB0eXBlIG9mIGZsdXNoZXMgeW91IGNhbiBoYXZlIGFyZSBsaW1pdGVkIHNpbmNlIHRoZSBLYy9RYy85YyBiZWluZyBvdXQgdGhlcmUgYmxvY2tzIGEgbG90IG9mIGZsdXNoIGNvbWJvcyB5b3UgYXJlIGNhbGxpbmcgZnJvbSBVVEcrMi4KU29tZXRoaW5nIHNpbWlsYXIgaGFwcGVuZWQgdG8gbWUgb24gYSA5IGhvdXIgdHJhbnMgQXRsYW50aWMgZmxpZ2h0LiBJIGNoZWNrZWQgaW4gc3VwZXIgZWFybHksIGFuZCBzaW5jZSBJIDZmdCB0YWxsLCBJIGFza2VkIGZvciBhbiBleGl0IHJvdyBmb3IgZXh0cmEgbGVnIHJvb20gYW5kIG1hbmFnZWQgdG8gZ2V0IG9uZSBieSB0aGUgd2luZG93LiBJIGFscmVhZHkgYm9hcmRlZCBhbmQgc2VhdGVkIGFuZCB0aGlzIGNvdXBsZSB3aG8gY2hlY2tlZCBpbiBsYXRlIGFuZCBkaWRuIGdldCBzZWF0cyB0b2dldGhlciBhc2tlZCBtZSBpZiBJIHdvdWxkIHN3aXRjaCBzZWF0cyB3aXRoIG9uZSBvZiB0aGVtIGFuZCBzaXQgZmFydGhlciBiYWNrIGluIGVjb25vbXkgaW4gb25lIG9mIHRoZSBtaWRkbGUgc2VhdHMgaW4gYSByb3cgb2YgNS4gClRoZSB0aGluZyBhYm91dCB0aGUgc2FuIGZlcm5hbmRvIGdhbWUgaXMgeW91IHdhbnQgdG8gY29tZSBiZWZvcmUgdGhlIG1lc2FzIG9wZW4gc28gdGhhdCB5b3UgY2FuIHB1dCB5b3VyIG5hbWUgb24gdGhlIGxpc3QuIEkgdGhpbmsgdGFibGVzIG9wZW4gYXQgbm9vbiBvciBzb21ldGhpbmcgYW5kIHRoZSBnYW1lIHN0YXJ0cyBhdCB3aGVuZXZlciAycG0uIEJ1dCB5b3Ugd2FudCB0byBzaG93IHVwIGF0IGFyb3VuZCAxMSBhbSBhbmQgZ2V0IHlvdXIgbmFtZSBvbiB0aGUgbGlzdCwgb3RoZXJ3aXNlIHlvdSBtaWdodCBoYXZlIHRvIHdhaXQgZm9yZXZlci4uIApJIHJlY2VudGx5IHB1bGxlZCBteSBjcmVkaXQgcmVwb3J0IGFuZCBoYXZlIGEgcG9zaXRpdmUgcmVudGFsaGlzdG9yeS4uIApTdXJlLCB0aGVyZSB3ZXJlIGpva2VzIHRocm93biBpbiBsaWtlLCAiTG9vayBpdCdzIEphbWVzIEJvbmQiLCBvciAiVGhlc2UgQmVlciBQb2tlciBDaGlwcyBhcmUgaW5jcmVkaWJsZSIuIApQaWdnYWhiZWFyIHUKQXNobWVhIHUKSXQgc291bmRzIGxpa2UgeW91ciBiZiBtYWtlcyB5b3UgcmVhbGx5IGhhcHB5LCBzbyBzYXZvciB0aGF0IGZyb20gdGhlIHNvdXJjZXMgeW91IGNhbiBnZXQgaXQgZnJvbSBoaW0sIHlvdXIgY2xvc2UgY29uZmlkYW50cywgZnJpZW5kcywgYmFzaWNhbGx5IGFueW9uZSBidXQgeW91ciBmYW1pbHkuIFlvdSBoYXZlIHRvIGdldCB1c2VkIHRvIHRoZSBmYWN0IHRoYXQgeW91ciBmYW1pbHkganVzdCB3b24gYmUgcGVvcGxlIHlvdSBjYW4gcmVseSBvbiBmb3IgZW1vdGlvbmFsIHN1cHBvcnQsIGFuZCB0aGF0IGluY2x1ZGVzIHNoYXJpbmcgdGhlIGdvb2Qgc3R1ZmYgYXMgd2VsbCBhcyB0aGUgYmFkLiBJdCBjYW4gZmVlbCBwcmV0dHkgY3J1bW15IGFuZCBsb25lbHksIGJ1dCBpZiB5b3UgYnVpbGQgeW91ciBvd24gc3VwcG9ydCBuZXR3b3JrIChjaG9zZW4gZmFtaWx5KSB0aGV5IHdpbGwgYmUgYWxsIHRoZSBzdXBwb3J0IHlvdSBuZWVkLiBEb24gbGV0IHRoZWlyIGludG9sZXJhbmNlIGFuZCBmZWFyIGRpY3RhdGUgeW91ciBvd24gaGFwcGluZXNzLiBZb3UgYmUgYmV0dGVyIG9mZiBmb3IgaXQgaW4gdGhlIGxvbmcgcnVuLgpCZWdpbm5lcnMgY2FuIGdyYXNwIHRoZSBtYWluIGNvbmNlcHRzIG9mIHRoZSBnYW1lIGluIGp1c3QgYSBmZXcgbWludXRlcy4gCkxhaWxhIEFsaTogSGF2aW5nIGEgSG9tZWJpcnRoISBMTEwgRm91bmRlciBHb25lIEJyaWRlc21haWRzIFN1bm55IERpc3Bvc2l0aW9uIENlc2FyZWFuIFB1bmlzaG1lbnQgTWVnaGFubidzIFVDIEJpcnRoIFN0b3J5IFBhaW4gUnlhbiBCaW5naGFtICAgVG9uaWdodCBTaG93IFZpZGVvIFJhbmRvbSBTdHVmZiBQaGVub21lbmFsIEJyZWFzdGZlZWRpbmcgU3RvcnkgRGVsaXZlciBNZSBXaGVuIFdlIERvbid0IEtub3cgV2h5LiAKTWFnYXNpbiBkZSBwb2tlciBhIGxpZWdlClRoZSBtYWluIGRyaXZpbmcgZmFjdG9yIG9mIGNvbW1vbiBsYXcgcmVsYXRpb25zaGlwcywgb3V0c2lkZSBvZiBub3QgaGF2aW5nIHJlbGlnaW91cyB0aWVzLCBpcyB0aGUgd2hvbGUgZGl2aWRpbmcgb2Ygb25lcyBpbmNvbWUsIHByb3BlcnR5LCBldGMuIApMQUNPQjogWWVhaC4gV2hlbiB5b3Ugc2F5ICJlbnRvdXJhZ2UsIiB5b3UgbWVhbiBQUiBwZW9wbGUgYW5kIGFsbCB0aGF0PyBJIGhhdmUgYSBQUiBmaXJtLgpUcmVsaXZpbmcgYW5kIE1yLiBDcm94b24gd2VyZSBpbnRlcmVzdGVkIGluIGJ1dCB0aGUgdmFsdWF0aW9uIHdhcyB0b28gcmljaC4gCk9uZSB0aGluZyBJIHRoaW5rIG1vc3QgcGVvcGxlIGRvbiByZWFsaXplIGlzIHRoYXQgd2UgYXJlIGxpdGVyYWxseSBvbmUgb2YgdGhlIG9ubHkgbGFyZ2Ugc3VicmVkZGl0cyBvbiB0aGUgc2l0ZSB0aGF0IGhhcyBhIG1ldGEgc3VicmVkZGl0IHdpdGggdGhpcyBsZXZlbCBvZiB0cmFuc3BhcmVuY3kgYW5kIG1vZCBpbnRlcmFjdGlvbi4gOTklIG9mIG90aGVyIHN1YnMgaGF2ZSBub3RoaW5nIGxpa2UgdGhpcyBhbmQgdGhlaXIgY29tbXVuaXR5IHJlbGF0aW9ucyBhcmUgYmV0dGVyIGZvciBpdC4gCkl0IG9ubHkgYSA1IHBhbmVsIHNvIHRoYXQgbmljZS4gSXQgaW5jbHVkZXMgbWFyaWp1YW5hLCBvcGlhdGVzIChubyBvcGlvaWRzKSwgY29jYWluZSwgcGNwIGFuZCBtZXRoL2FtcGhldGFtaW5lLiBNeSBwcmV2aW91cyBlbXBsb3llcnMgNSBzdWJzdGl0dXRlZCBtZG1hIGZvciBwY3AuIAoiSXQncyByZWFsbHkgaW5ub3ZhdGl2ZS4KQWxzbywgbWFueXZlcnNpb25zIG9mIEdhR2EncyBzb25ncywgc3VjaCBhcyBwaWFubyBzb2xvcyBhbmQgbW9yZSBtZWRsZXlzIG9maGVyIHNvbmdzIGFyZSB1c3VhbGx5IHBlcmZvcm1lZCBhdCBoZXIgc2hvd3MsIGFuZCBzZWFyY2hpbmcgeW91dHViZWZvciB0aGVtIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBtYXkgeWllbGQgbW9yZSBzb25ncy4gCiJJZiBjbHVicyBhcmUgaW4gYSBzdHJvbmcgcG9zaXRpb24gYW5kIGhhdmUgYSBsYXJnZSBwYXJjZWwgb2YgbGFuZCwgdGhlbiBJIHRoaW5rIHRoZXJlIGEgZ3JlYXQgb3Bwb3J0dW5pdHkgdG8gaW52ZXN0IGJhY2sgaW50byB0aGUgY29tbXVuaXR5LCIgc2hlIHNhaWQuICJBIGNoaWxkY2FyZSBjZW50cmUgaXMgY2VydGFpbmx5IHBhcnQgb2Ygb3VyIG1hc3RlciBwbGFuIGFuZCB3b3VsZCBiZSBwb3NpdGlvbmVkIG9uIHRoZSB2ZXJ5IGZhciBjb3JuZXIgb2Ygb3VyIHNpdGUgYWRqYWNlbnQgdG8gYSByZXNpZGVudGlhbCBhcmVhLiAiSXQgd291bGQgYmUgYSBzdGFuZCBhbG9uZSBidXNpbmVzcywgcHJvYmFibHkgcnVuIGJ5IGEgc2VwYXJhdGUgb3BlcmF0b3IsIGFuZCB3b3VsZCBoYXZlIGEgc3Vic3RhbnRpYWwgb3V0ZG9vciBwbGF5IGFyZWEuIiBNcyBDb3Ntb3Mgc2FpZCBzaW5jZSB0aGUgbWFzdGVyIHBsYW4gd2FzIHVudmVpbGVkLCB0aGUgY2x1YiBoYWQgYWxyZWFkeSBiZWVuIGFwcHJvYWNoZWQgYnkgdGhyZWUgcHJpdmF0ZSBjaGlsZGNhcmUgb3BlcmF0b3JzLiAKSSBoZWFyZCBvZiB5b3VuZ2VyIGNhdHMgYmVpbmcgdG9vIHJlc2lzdGFudCBmb3IgbGVhc2ggdHJhaW5pbmcgb3IgdG9vIHVuZm9jdXNlZCB0byBsZWFybiB0cmlja3MuIApLYWxtIGhhcyBwcmV2aW91c2x5IHNhaWQgdGhlIG5ldyBydWxlcyB3ZXJlIG1lYW50IHRvIGFkZHJlc3MgaXNzdWVzIG9mIGdhbWluZyB2aW9sYXRpb25zLCB2aW9sZW5jZSBhbmQgb3RoZXIgcHJvYmxlbXMgYXQgc29tZSBwZXJtYW5lbnQgcG9rZXIgcm9vbXMuLiAKVml0YW1pbiBEIGlzIGEgZmF0IHNvbHVibGUgdml0YW1pbiB0aGF0IGFjdHMgYXMgYSBzdGVyb2lkIGhvcm1vbmUuIApCYWxhbmNlOiBUaGVyZSBhcmUgbWFueSBleGVyY2lzZXMgZGVzaWduZWQgdG8gcHJpbWFyaWx5IGNoYWxsZW5nZSB5b3VyIGJhbGFuY2UgaW5zdGVhZCBvZiB0YXJnZXRpbmcgc3BlY2lmaWMgbXVzY2xlcy4gVGhlc2UgZXhlcmNpc2VzIGFyZSBnb29kIGZvciBpbXByb3ZpbmcgdGhlIGVuZHVyYW5jZSBvZiBwb3N0dXJhbCBtdXNjbGVzIGFuZCBzcGF0aWFsIGF3YXJlbmVzcy4gRXhlcmNpc2UgZXhhbXBsZXM6Ck1BUlNILCBQZXRlciBJdCBpcyB3aXRoIGRlZXAgc2FkbmVzcyB0aGF0IHRoZSBmYW1pbHkgYW5ub3VuY2VzIHRoZSBwYXNzaW5nIG9mIFBldGVyIE1hcnNoIG9uIE1hcmNoIDIsIDIwMTQsIGF0IFN0LiBQZXRlcidzIEhvc3BpdGFsIGluIEhhbWlsdG9uLCBPbnRhcmlvLCBpbiBoaXMgNzJuZCB5ZWFyLiBIZSBpcyBzdXJ2aXZlZCBieSBoaXMgYmVsb3ZlZCB3aWZlIEd3ZW4sIGJyb3RoZXJzIERhdmlkIChDYXJvbGluZSkgaW4gdGhlIFVLIGFuZCBSaWNoYXJkIChIZWxlbikgaW4gQXVzdHJhbGlhLiAKTm90IGxlc3MgdGhhbiBtaW5pbXVtIHdhZ2UsIG5vLiBCdXQgaXQgaXMgYSBwaHlzaWNhbGx5IHN0cmVudW91cyBzZXJ2aWNlIGpvYiwgd2hlcmUgdGhlIGxhYm9yIGludm9sdmVzIHF1aXRlIGludGVuc2l2ZSBmb2N1c2VkIG1lbnRhbCwgZW1vdGlvbmFsLCBhbmQgcGh5c2ljYWwgYXR0ZW50aW9uIHRvIHlvdSwgdGhlIGNsaWVudCwgZm9yIGFuIGhvdXIgb3IgbW9yZS4gTXkgc3BhIGJpbGxzICQ2NS9ociBhbmQgSSBtYWtlIGF0IGJlc3QgJDE3IGZyb20gdGhhdC4gCkFuZCBzbyB3ZSB3YWl0IHRpbGwgd2UgYXJlIGxpdGVyYWxseSBhbGwgaW4gZGVlcCB3YXRlci4uIApTZWxlY3QgdGhlIGxpbmsgYW5kIGNvbXBsZXRlIHRoZSBmb3JtLiBCZSBzdXJlIHRvIGluY2x1ZGUgdGhlIFVSTCBvZiB0aGUgcGFnZSBjcmVhdGluZyB0aGUgYmFycmllci4gCk9mZiBjb2xvciByZW1hcmsgYWJvdXQgZGVhZGJlYXQgRVNMIC8gU2V4cGF0cy4gCklmIHlvdSdyZSBwbGFubmluZyBvbiBtYWtpbmcgdGhhdCAidGhlZSIgZ2FtZSBhdCB5b3VyIHBsYWNlLCB3aHkgbm90IGNoZWNrIG91dCBzb21lIFRleGFzIEhvbGQnZW0gcG9rZXIgdGFibGUgY2xvdGg/IFRoaXMgY29tZXMgd2l0aCB0aGUgc3BlY2lhbCBkZXNpZ24gbWFya2luZ3Mgb24gaXQgZXhhY3RseSBsaWtlIHdoYXQgeW91IHNlZSBvbiBhbGwgb2YgdGhvc2UgdGVsZXZpc2VkIFRleGFzIEhvbGQnZW0gdG91cm5pZXMuIApNYXJnYXJldCBEZW5vYmxlClRvIGJlIDEwMCUgY2xlYXI6IHdlIGtub3cgdGhhdCBtYW55IG9mIHlvdSBkaXNhZ3JlZSB3aXRoIHRoaXMgcG9saWN5IG9uIHByaW5jaXBsZS4gClRoZW4gd2UgaGF2ZSB0aGUgc2xhY2t0aXZpc3RzIGxpa2UgbXlzZWxmLCB3aG8gYXJndWUgaXQgdmVoZW1lbnRseSBvbiB0aGUgaW50ZXJuZXQgYnV0IGRvIGxpdHRsZSBlbHNlLCBzZWVpbmcgdGhlIGltcG9zc2liaWxpdHkgb2YgZXZlbiBmb3JtdWxhdGluZyB0aGUgcmlnaHQgY291cnNlIG9mIGFjdGlvbiBvbiBhbiBpbmRpdmlkdWFsIGxldmVsLCBhc2lkZSBmcm9tIGRvaW5nIHRoZSBub3JtYWwsIGV4cGVjdGVkIGxpdHRsZSB0aGluZ3MgbGlrZSBtYWtpbmcgdGhpbmdzIGxhc3QsIHJlZHVjaW5nIGNvbnN1bXB0aW9uLCBtb2RlcmF0aW5nIG15IGRpZXQgYW5kIGhhbmRsaW5nIHdhc3RlIHJlc3BvbnNpYmx5LgpXZSBzaG91bGQgc3RvcCB0YWxraW5nIGFib3V0IDIwMDIgbGlrZSBpdCB3YXMgYSByZWFsIGFjaGlldmVtZW50LiAKQ2hlbWljYWwgcGVlbHMgaGF2ZSBiZWNvbWUgaW5jcmVhc2luZ2x5IHBvcHVsYXIgdGhyb3VnaCB0aGUgeWVhcnMsIHdpdGggbW9zdCBwYXRpZW50cyB1bmRlcmdvaW5nIHRoZSBwcm9jZWR1cmUgdG8gdHJlYXQgdGhlIGZhY2UgICBwYXJ0aWN1bGFybHkgdGhlIGFyZWFzIGFyb3VuZCB0aGUgZXllcywgZm9yZWhlYWQgYW5kIG1vdXRoLiBUaGVyZSBhcmUgZGlmZmVyZW50IGxldmVscyBvZiBjaGVtaWNhbCBwZWVscyB0aGF0IHVzZSBkaWZmZXJlbnQgYWdlbnRzIHRoYXQgdmFyeSBmcm9tIGxpZ2h0IHRvIGRlZXAsIGJ1dCB0aGV5IGFsbCBpbnZvbHZlIHNwcmVhZGluZyBhIGNoZW1pY2FsIHNvbHV0aW9uIG9uIHRoZSBza2luLCBhbGxvd2luZyBpdCB0byBibGlzdGVyLCBhbmQgdGhlbiBwZWVsaW5nIHRoYXQgc2tpbiBhd2F5IHRvIHVubGVhc2ggdGhlIG5ldyBza2luIHVuZGVybmVhdGguIApQcmV2aW91c2x5LCB0aGUgY2l0eSBhbGxvd2VkIGhvbWVzIHVwIHRvIDEwLDc2NCBzcS4gCklmIHlvdSBwbGF5ZWQgYSBzbWFsbCBwYWlyIGZyb20gbGF0ZSBwb3NpdGlvbiBhbmQgeW91IGRvIG5vdCBmbG9wIGEgdGhpcmQgb25lIHRvIG1ha2UgYSBzZXQgeW91IHNob3VsZCB0aHJvdyB0aGUgcGFpciBhd2F5IGlmIHRoZXJlIGlzIGEgYmV0LiAuLiAKVGhlIHByb2JsZW0gaXMgaW4gdGhlIGxvbmcgcnVuLCBsb29zZS9hZ2dyZXNzaXZlIHBsYXllcnMgd2lsbCBiZSBsb3NpbmcgcGxheWVycyBiZWNhdXNlIG9mIHRoZWlyIHN0YXJ0aW5nIGhhbmQgc2VsZWN0aW9uLiAKSWYgeW91IHdlYXIgaXQgd2hpbGUgaGF2aW5nIHZhZ2luYWwgc2V4LCBoZSB3aWxsIGxvdmUgaG93IHRpZ2h0IGl0IG1ha2VzIHlvdXIgdmFnaW5hIGZlZWwuIApUaGVoaWdoZXIgc3Rha2VzIGdhbWUgY2FycmllZCBhICQyMjAgYnV5IGluLCB3aXRoIGNvbXBldGl0b3JzIHBsYXlpbmcgdW5kZXJhIGtub2NrIG91dCBmb3JtYXQuIFRoZSBlaWdodCB0YWJsZXMsIGVhY2ggd2l0aCAxMyBwbGF5ZXJzLCB3YXMgZHdpbmRsZWQgZG93biB0aHJvdWdob3V0IHRoZSBkYXkgdW50aWwgb25seSBMZWUsIE1pY2FsZWZmIGFuZCBTcGVuY2VyIHdlcmUgbGVmdCBzaXR0aW5nIGF0IHRoZSB0YWJsZS4gCkJhY2sgaW4gaGlzIHJvb20gYmVmb3JlIGRpbm5lciwgUmVuc2hhdyBpcyBvbiBoaXMgb3duIGJlZCBhbmQgc3VyZmluZyB0aGUgd2ViIGZvciBhIHJlcGxheSBvZiB0b2RheSdzIHN0YWdlIGZpbmlzaC4gV2l0aCBoaXMgY29tcHJlc3Npb24gdGlnaHRzIG9uIHRvIGFpZCBoaXMgcmVjb3ZlcmluZyBtdXNjbGVzLCBhbmQgYSBkcmluayBieSBoaXMgYmVkLCBoZSdzIHVzZWQgdG8gdGhlIHRlZGl1bSBvZiBzdGFnZSByYWNpbmcuIApJIHRoaW5rIHdlIEFtZXJpY2FucyBhcmUgZ29pbmcgdG8gdGFrZSBJbmRpYSBzaWRlIGJlY2F1c2Ugd2UgbmVlZCB0aGVtIHRvIGNvbnRhaW4gQ2hpbmEuIFJ1c3NpYSBtaWdodCBjb21wbGljYXRlIHRoaW5ncy4gUnVzc2lhIGFuZCBJbmRpYSBoYXZlIGJlZW4gYWxsaWVkIGFnYWluc3QgQ2hpbmEuIEJ1dCBpZiB3ZSBBbWVyaWNhbnMga2VlcCB0cnlpbmcgdG8gZXhwYW5kIE5BVE8gdG8gdGhlIFJ1c3NpYW4gYm9yZGVyLCBQdXRpbiB3aWxsIGRlY2lkZSB0byBidWRkeSB1cCB3aXRoIENoaW5hIGV2ZW4gdGhvdWdoIHRoZSB0d28gY291bnRyaWVzIHNoYXJlIGEgYm9yZGVyLiBUaGlzIHdvdWxkIGJlIGEgc2Vuc2libGUgcG9zaXRpb24gc2luY2UgdGhlIG1ham9yaXR5IG9mIFJ1c3NpYSBwb3B1bGF0aW9uIGlzIGluIEV1cm9wZSBhbmQgTkFUTyBpcyBhIGJpZ2dlciB0aHJlYXQgdG8gdGhlbSB0aGFuIENoaW5hLiBJIGp1c3QgdHJ5aW5nIHRvIGJlIHJlYWxpc3RpYyBoZXJlLgpXZSBiZWVuIGVhdGluZyBhIGxvdCBvZiBzb3Vwcy9zdGV3cywgdG9vLiBUaGV5IGdyZWF0IGJlY2F1c2UgSSBjYW4gdGhyb3cgZXZlcnl0aGluZyBpbiB0aGUgcG90IGFuZCBiYXNpY2FsbHkgYmUgZG9uZSB3aXRoIGl0LCBzbyBJIGRvbiBuZWVkIGEgbG90IG9mIGVuZXJneSBmb3Igc2VyaW91cyBjb29raW5nLCBidXQgdGhleSBkZWxpY2lvdXMgYW5kIGdvb2QgZm9yIG1lLgpGcmFua3N0b24gT3ZhbCBjdXJyZW50bHkgaG9zdHMgdGhlIEZyYW5rc3RvbiBEb2xwaGlucyBWRkwgc2lkZSwgd2hpY2ggd2lsbCBiZWNvbWUgYSBjbyB0ZW5hbnQuCkNDICAgQ29uc3RydWN0aXZlIENyaXRpY2lzbTogW1BJXXMgeW91IHdvdWxkIGxpa2UgY3JpdGlxdWVkCk9uIFdlZG5lc2RheSwgTWFyY2ggNiwgYW5kIGZlYXR1cmVzIHNhdW5hIHNlc3Npb25zLCBmb29kLCBhbmQgY29ja3RhaWxzLiAKQmxhY2tzdGFmZmxvIHUKRGVzcGl0ZSB0aGF0LCBJIHdvcmsgZnVsbCB0aW1lKGFuZCBub3QgTXR1cmssIEkgZG8gdGhhdCBwYXJ0IHRpbWUpIGFuZCBnbyB0byBjb2xsZWdlIGZ1bGwgdGltZShBbmQgSSB3ZW50IGJhY2sgYXQgMjUpLiBXaHk/IEJlY2F1c2UgSSBub3QgY29udGVudCB0byBqdXN0IGhpZCBodWRkbGVkIGJlaGluZCBteSBibGFtZSBibGFua2V0IGFuZCB3YW50IHdhbnQgdG8gbWFrZSBzb21ldGhpbmcgYXQgbGlmZS4uIApXaGF0IGVsc2UgY2FuIGJlIGJldHRlciB0aGFuIHRoZSBBY2UgQ2x1YnMgU3Bpbm5lciBQb2tlciBHYXJkIFByb3RlY3RvcnM/IFRoZXNlIGNhcmQgcHJvdGVjdG9ycyBhcmUgZWxpdGUgbG9va2luZywgY29sb3JmdWwgYW5kIGR1cmFibGUuIApTcGVha2luZyBvdXRzaWRlIGNvdXJ0LCBwcmVzaWRlbnQgYW5kIGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyIG9mIEdlbnRpbmcgVUsgUGF1bCBXaWxsY29jayBzYWlkOiAiVGhpcyBoYXMgYmVlbiBhIGxhbmRtYXJrIGNhc2UgaW4gaG93IHRoZSBjb3VydHMgYXBwcm9hY2ggY2hlYXRpbmcgaW4gdGhlIG1vZGVybiBkYXkuClRoYXQgaGFwcGVuZWQgZHVyaW5nIHRoZSB0aW1lIEJlbGdpdW0gd2FzIGEgImVubGlnaHRlbmVkIHBvc3QgV1cyIiBuYXRpb24uUGluZWxva28gIDQgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvV2hhdCB5b3Ugc2F5aW5nIGlzIGJhc3NpY2FsbHkgImJ5IHRoZSB0aW1lIG9mIGFubmV4YXRpb24gdGhlIGV4dHJlbWUgYnJ1dGFsIHRyZWF0bWVudCBhbHJlYWR5IGVuZGVkIiB5b3UgYXJlbiBzaG93aW5nIHNvbWUgZXhhbXBsZXMgb2YgaG93IGl0IHdhcyBzdGlsbCB0ZXJyaWJsZS5UaGUgcHJvYmxlbSBoZXJlIGlzIHRoYXQgeW91IGNvbXBhcmluZyBhIGJhZCBzaXR1YXRpb24oY29sb25pYWxpc20pIHRvIHNvbWUgaWRlYWxpemVkIGZpY3Rpb25hbCB2ZXJzaW9uIG9mIGhvdyB0aGluZ3Mgc2hvdWxkIGJlIGluIGEgcGVyZmVjdCB3b3JsZC5JIGNvbXBhcmluZyBpdCB0byB3aGF0IGFjdHVhbGx5IGhhcHBlbmVkIGFmdGVyIGluZGVwZW5kZW5jZS5UaGV5IHdhbnRlZCBpbmRlcGVuZGVuY2UgYmVjYXVzZSB0aGV5IHdhbnRlZCB0byBtYWtlIHRoZWlyIG93biBkZWNpc2lvbnMgYWJvdXQgdGhlaXIgb3duIGZ1dHVyZS4gSW5zdGVhZCB0aGV5IGdvdCBlbmRsZXNzIGRpY3RhdG9yc2hpcHMgYW5kIHdhcmxvcmRzIGZpZ2h0aW5nIGZvciBwZXJzb25hbCBwcm9maXQuVGhleSBiZWxpZXZlZCB0aGV5IHdlcmUgYmVpbmcgcm9iYmVkIGFuZCB3aWxsIGJlIG1vcmUgcHJvc3Blcm91cyBvbmNlIHRoZXkgc2VsZiBnb3Zlcm5pbmcsIGluc3RlYWQgdGhleSB3ZW50IGludG8gZWNvbm9taWMgZGVjbGluZSBhbmQgc3RhZ25hdGlvbi5Ib3cgaGFyZCBpcyBpdCB0byBhZG1pdCB0aGF0IGNvbG9uaWFsaXNtIHdhc24gaWRlYWwgd2hpbGUgYWxzbyBhZG1pdHRpbmcgdGhhdCBydXNoZWQgc3VkZGVuIGRlY29sb25pemF0aW9uIGxlZnQgdGhlc2UgY291bnRyaWVzIGluIGEgbm9uIGZ1bmN0aW9uYWwgc3RhdGUuSSBnYXZlIHlvdSBhIHNvdXJjZSBhcyBhc2tlZCB0aGF0IGNocm9uaWNsZXMgdGhlIGV2b2x1dGlvbiBvZiB0aGUgY29uZGl0aW9ucyBvZiB3b3JrZXJzLiBQZXJoYXBzIHJlYWQgaXQgbGlrZSB5b3Ugc2FpZCB5b3Ugd291bGQ/IFlvdSBjYW4gcmVhZCBhbGwgdGhvc2UgZXhhbXBsZXMgdGhlcmUuIAoiSSBqdXN0IGhvcGUgSSd2ZSBzcHJlYWQgYSBsaXR0bGUgbGlnaHQsIGhhcHBpbmVzcyBhbmQgZnVuIGluIHRoZSBnYW1lLiBJJ3ZlIGJlZW4gdG9sZCB0aGVyZSdzIGEgbG90IG9mIHBlb3BsZSB3YXRjaGluZyBpdCB3aG8gaGF2ZSBuZXZlciB3YXRjaGVkIGl0IGJlZm9yZSwgc28gaXQncyBnb3QgdG8gYmUgZ29vZCBmb3IgVFYgcmF0aW5ncy4KSW4gdGhlIHR3byBkYXlzIGhlIHdhcyB3aXRob3V0IGhlciBoZSB3YXMgdmVyeSBzYWQgYW5kIGtlcHQgbG9va2luZyBmb3IgaGVyIHdhaXRpbmcgYnkgdGhlIGRvb3IuIApQc3ljaG9sb2dpY2FsIGNvdW5zZWxsaW5nICgyIHRyaWFscyk6IHRoZXNlIHRyaWFscyBzaG93ZWQgdGhhdCBwc3ljaG9sb2dpY2FsIHN1cHBvcnQgYXBwZWFyZWQgdG8gYmUgb2YgYmVuZWZpdCBpbiB0ZXJtcyBvZiBsZXNzIHBhdGllbnQgZGVwcmVzc2lvbiwgYW54aWV0eSBhbmQgbmVnYXRpdmUgYXR0aXR1ZGUgdG93YXJkcyB0aGVpciBjb25kaXRpb24sIGFuZCB0byBhIGxlc3NlciBkZWdyZWUsIHRvIHNvbWUgcGh5c2ljYWwgc3ltcHRvbXMgb2YgdGhlIGNvbmRpdGlvbi4gVGhlcmUgYXJlIG5vIENBVHMgdGhhdCBoYXZlIGJlZW4gc2hvd24gdG8gYmUgdW5lcXVpdm9jYWxseSBlZmZlY3RpdmUuIFRoZXJlIGlzIHNvbWUgZXZpZGVuY2UgdGhhdCBkaWV0YXJ5IGxpbm9sZWljIGFjaWQgbWF5IGJlIG9mIGxvbmcgdGVybSBiZW5lZml0IGZvciB0aGUgcGh5c2ljYWwgc3ltcHRvbXMgb2YgTVMgcGF0aWVudHMuIE1hZ25ldGljIGZpZWxkIHRoZXJhcHkgYW5kIG5ldXJhbCB0aGVyYXB5IGFwcGVhciB0byBoYXZlIGEgc2hvcnQgdGVybSBhbWVsaW9yYXRpdmUgZWZmZWN0IG9uIHRoZSBwaHlzaWNhbCBNUyBzeW1wdG9tcy4gTWFzc2FnZSwgYm9keXdvcmsgYW5kIHBzeWNob2xvZ2ljYWwgY291bnNlbGxpbmcgc2VlbSB0byBpbXByb3ZlIGRlcHJlc3Npb24sIGFueGlldHkgYW5kIHNlbGYgZXN0ZWVtIGZlbHQgYnkgdGhlIHBhdGllbnQuIFRoZSBsaXRlcmF0dXJlIHNlYXJjaCBhcHBlYXJlZCB0byBiZSB0aG9yb3VnaCBhbmQgbm8gbGFuZ3VhZ2UgcmVzdHJpY3Rpb25zIHdlcmUgYXBwbGllZC4gQWRkaXRpb25hbCB1bnB1Ymxpc2hlZCBsaXRlcmF0dXJlIHdhcyBhbHNvIHNvdWdodC4gVGhlIHF1YWxpdHkgb2YgdGhlIGluY2x1ZGVkIHN0dWRpZXMgd2FzIGZvcm1hbGx5IGFzc2Vzc2VkLCBhbmQgdGhlIG1ldGhvZCBhbmQgcmVzdWx0cyBhcmUgcmVwb3J0ZWQgYW5kIGRpc2N1c3NlZCBpbiB0aGUgcmV2aWV3LgpDb3Jwb3JhdGUgQ2hhaXIgTWFzc2FnZSBCdXNpbmVzcyBJZGVhcwpUaGUgc3RyZXNzIGlzIGVsZXZhdGVkIGZyb20gY3JhdmluZyB0aGUgbmljb3RpbmUuIEFueSByZWxpZWYgaXMganVzdCB0ZW1wb3JhcnksIGFuZCBlbGV2YXRlZCBieSB0aGVpciBhZGRpY3Rpb24uLiAKVGhhdCBvdXRzdGFuZGluZyB0byBtZSB0aGF0IHRoZSBwb2xpY2Ugd2VyZSBldmVuIGNhbGxlZC4gCkhlIGlzIGp1c3QgYXNraW5nIHRvIGxldCBoaW0gY2F0Y2ggdXAgdGhlIHdob2xlIGhhbmQuIApUaGUgbnVtYmVyIG9mIGRvZ3MgaW5qdXJlZCBpcyBhIGZyYWN0aW9uIG9mIHRoZSAxLDIwMCBkb2dzIGtlcHQgaW4ga2VubmVscyBvbiB0aGUgcHJvcGVydHksIGJ1dCB0b28gbWFueSBmb3IgR1JFWTJLLCB3aGljaCBoYXMgY29tcGlsZWQgc3RhdGlzdGljcyBvbiBpbmp1cmllcyBhdCBTb3V0aGxhbmQgc2luY2UgSmFudWFyeSAyMDA4LiBBY2NvcmRpbmcgdG8gR1JFWTJLLCB0aGVyZSBoYXMgYmVlbiBhbiBhdmVyYWdlIG9mIDguODYgaW5qdXJpZXMgYSBtb250aCBhdCBTb3V0aGxhbmQgc2luY2UgMjAwOCwgb3IgNDUyIHJlcG9ydGVkIGluanVyaWVzIGluIDQ0MCBkb2dzLiBUaGUgaGlnaCB5ZWFyIHdhcyAyMDA4LCB3aXRoIDE4MiBpbmp1cmllczsgdGhlcmUgd2VyZSAxMDEgaW4gMjAwOSwgNTggaW4gMjAxMCBhbmQgODggaW4gMjAxMS4gTW9zdCBvZiB0aGUgaW5qdXJpZXMsIDQ3IHBlcmNlbnQsIHdlcmUgbGVnIGFuZCB0b2UgZnJhY3R1cmVzOyBzb21lIHN1ZmZlcmVkIGJyb2tlbiBuZWNrcyBhbmQgYmFja3MuCkJ1dCBpZiB5b3UgYnV5IHNvbWV0aGluZyB0aGF0IHJlYWxseSBpbmV4cGVuc2l2ZSwgSSBkb24ga25vdyBpZiBpdCB5b3VyIG1pbmQgdGhhdCBzYXlzIHdhcyByZWFsbHkgY2hlYXAgYW5kIEkgY2FuIGNoYW5nZSB0aGF0IG91dCBpbiBzaXggbW9udGhzIGJ1dCB0aGF0IGNhbiBzdGFydCB0byBmZWVsIGxpa2UgY2x1dHRlci4gClBsZWFzZSByZXZpZXcgdGhlIFRlcm1zIG9mIFVzZSBiZWZvcmUgdXNpbmcgdGhpcyBzaXRlLiBZb3VyIHVzZSBvZiB0aGUgc2l0ZSBpbmRpY2F0ZXMgeW91ciBhZ3JlZW1lbnQgdG8gYmUgYm91bmQgYnkgdGhlIFRlcm1zIG9mIFVzZS4uIApJIGRvbid0IHRoaW5rIHRoYXQncyB3aGF0IE9QIGlzIHNheWluZy4gSSByZW1lbWJlciB0aGUgcG9zdCB0aGV5J3JlIHRhbGtpbmcgYWJvdXQgYW5kIEkgcmVtZW1iZXIgdGhlaXIgY29tbWVudC4gSXQgd2FzIGV4dHJlbWVseSBraW5kIGFuZCBpbnNpZ2h0ZnVsIGp1c3Qgbm90IGEgY29tbWVudCBmdWxsIG9mIHByYWlzZSBmb3IgaGF2aW5nIHN1Y2ggYSBzaGlueSBzcGluZS4gCkNvbG9ub3Njb3B5LiBQZW9wbGUgbWFrZSBqb2tlcyBhYm91dCBpdCBhbmQgaXQgc291bmRzIGNyYXp5IGFuZCB1bmNvbWZvcnRhYmxlIHRvIGhhdmUgYSB0dWJlIHdpdGggYSBjYW1lcmEgZ29pbmcgc2V2ZXJhbCBmZWV0IHVwIHlvdXIgYXNzIGJ1dCB0aGUgcmVhbGl0eSBpcyB0aGF0IHlvdSBnZXQgZ3JlYXQgSVYgZHJ1Z3MgdGhhdCBrbm9jayB5b3Ugb3V0IGFuZCB5b3Ugd2FrZSB1cCBoYWxmIGFuIGhvdXIgbGF0ZXIgb3Igc28gYW5kIG5ldmVyIGV4cGVyaWVuY2VkIGFueSBvZiB0aGUgYWN0dWFsIHByb2NlZHVyZS4gVGhlIG9ubHkgcGFydCBhYm91dCB0aGUgcHJvY2VkdXJlIHRoYXQgaXMgdW5wbGVhc2FudCBpcyBub3QgYmVpbmcgYWxsb3dlZCB0byBlYXQgdGhlIGRheSBiZWZvcmUgYW5kIGhhdmluZyB0byB0YWtlIG1lZGljaW5lIChkcmluaykgdGhlIGRheSBiZWZvcmUgdGhhdCBtYWtlcyB5b3Ugc2hpdCB5b3VyIGJyYWlucyBvdXQgdW50aWwgeW91IGxpdGVyYWxseSBwb29waW5nIG91dCB3YXRlciwgd2hpY2ggaXMgYSBiaXphcnJlIGV4cGVyaWVuY2UuIApJIGhlYXJkIHBvb3JseSByYXRlZCBzcGVha3MgYmFkbHkgb2YgbWUgZG9uJ3Qgd2F0Y2ggYW55bW9yZS4gUmVtZW1iZXIsIHRob3VnaCwgdGhhdCBkb3VibGUgc3RhbmRhcmRzIGFyZSBiYXNlZCB1cG9uIGRpc2NyaW1pbmF0aXZlbHkgbGVhcm5pbmcgZGlmZmVyZW50IGJlaGF2aW9ycyBhbmQgb3V0Y29tZXMgYWNjb3JkaW5nIHRvIGRpZmZlcmVudCBwcmVzdXBwb3NpdGlvbnMsIHN0aW11bGksIGFuZCBjb25kaXRpb25zLiBIb3dldmVyLCBtYWtpbmcgYSBsaXN0IG9mIGJlaGF2aW9ycyB5b3UgZmluZCBkaXNyZXNwZWN0ZnVsIGlzIHRoZSBmaXJzdCBzdGVwIHRvIGNsYWltaW5nIHlvdXIgdmFsdWUgYW5kIHJhaXNpbmcgeW91ciB3b3J0aC4uIApFZGl0OiB0cmllZCB0byBmaW5kIG5ld3MgYXJ0aWNsZXMgb24gYm90aCwgYnV0IGNvdWxkbiBsYXN0IG9uZSB3YXMgYWJvdXQgOSB5ZWFycyBhZ28uCldoZW4gRmVsaWNpdHkgcmV0aXJlcyBhdCBhZ2UgNjUsIHRoZSBwaWN0dXJlIHdvdWxkIGNoYW5nZSBhZnRlciBzYWxlIG9mIHRoZSBjb25kby4gVGhleSB3b3VsZCBsb3NlIGhlciAkMzIsNzAwIHByZSB0YXggam9iIGFuZCBFSSBpbmNvbWUgYnV0IGdhaW4gaGVyIGVzdGltYXRlZCAkMTAsMjcyIENQUCBiZW5lZml0LiBUaGV5IHdvdWxkIG5vIGxvbmdlciBuZWVkIHRoZSBjb25kbyBuZWFyIGhlciBmb3JtZXIgcGxhY2Ugb2Ygd29yay4gQXNzdW1pbmcgcHJpY2UgYXBwcmVjaWF0aW9uIGNvdmVycyBzZWxsaW5nIGNvc3RzLCB0aGV5IGNvdWxkIGFkZCAkNzUwLDAwMCB0byB0aGVpciBjYXBpdGFsLiBBbm51aXRpemVkIHRvIHBheSB0aHJlZSBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gZm9yIDMwIHllYXJzLCBpdCB3b3VsZCBnZW5lcmF0ZSAkMzgsMjYwIHBlciB5ZWFyLiBUaGV5IGNvdWxkIGFkZCB0d28gT2xkIEFnZSBTZWN1cml0eSBiZW5lZml0cyBvZiBhYm91dCAkNywyMjAgcGVyIHllYXIuIFRoZWlyIHBlcm1hbmVudCBwcmUgdGF4IGluY29tZSB3b3VsZCB0aGVuIGJlICQxMjgsMzEyLiBBZnRlciBzcGxpdHMgb2YgZWxpZ2libGUgaW5jb21lIGFuZCAxOCBwZXIgY2VudCBhdmVyYWdlIHRheCwgdGhleSB3b3VsZCBoYXZlICQ4LDc3MCBwZXIgbW9udGggdG8gc3BlbmQgd2l0aCBleHBlbnNlcyBleCBtb3J0Z2FnZSByZWR1Y2VkIHRvICQ2LDMxMCBvciBsZXNzLgpFbGlnaWJpdHkgQ3JpdGVyaWEgVG8gdGFrZSBhbnkgb2YgdGhlIE9oaW8gRVBBJ3MgZXhhbXMsIHlvdSBtdXN0IGhhdmUgYXQgbGVhc3QgYSBoaWdoIHNjaG9vbCBkaXBsb21hIG9yIGVxdWl2YWxlbnQgcXVhbGlmaWNhdGlvbi4gWW91J2xsIGFsc28gbmVlZCB0byBtZWV0IG9wZXJhdGluZyB3b3JrIGNyaXRlcmlhIGFuZCwgaW4gc29tZSBjYXNlcywgY3VycmVudCBjZXJ0aWZpY2F0aW9uIHJlcXVpcmVtZW50cy4gCkknbSBub3Qgc3VyZSB3aHkgSSB3YXMgdGhpbmtpbmcgYWJvdXQgYWxsIHRoaXMsIGJ1dCBwdXJjaGFzaW5nIHRoZSAxIDIgRGVjayBEZWx1eGUgV29vZGVuIENhcmQgU2h1ZmZsZXIgZmVsdCBsaWtlIHRoZSByaWdodCB0aGluZyB0byBkby4gQWJvdXQgdGVuIG9mIG15IGh1c2JhbmQncyBmcmllbmRzIGhhdmUgc29tZSBzb3J0IG9mIGFydGhyaXRpcyBvciBvdGhlciBpc3N1ZXMgdGhhdCB0YWtlIGF3YXkgZnJvbSB0aGVpciBzaHVmZmxpbmcgYWJpbGl0aWVzLiBFdmVuIFRlcnJ5IChteSBodXNiYW5kKSBoYXMgYmVlbiBzdHJ1Z2dsaW5nIHdpdGggdGhpcyBtb3N0IHJlY2VudGx5LiBTbyB5b3UgY2FuIG9ubHkgaW1hZ2luZSB0aGUgbG9vayBvbiB0aGVpciBmYWNlcyB3aGVuIGEgd3JhcHBlZCBwcmVzZW50IHdhcyBzaXR0aW5nIG9uIHRoZWlyIHRhYmxlIGJlZm9yZSBvbmUgb2YgdGhlaXIgZ2FtZXMuClNpbXBseSBwdXQsIGJlY2F1c2UgdGhhdCBpcyB0aGUgbGVhc3QgaW50ZXJlc3RpbmcgcGFydCBhYm91dCBwb2tlci4gVGhlIHNheWluZyBnb2VzIHRoYXQgeW91IGFyZW4ndCBwbGF5aW5nIGFnYWluc3QgdGhlIGNhcmRzLCB5b3UncmUgcGxheWluZyBhZ2FpbnN0IHRoZSBvdGhlciBwZW9wbGUgYXQgdGhlIHRhYmxlLiBPbmxpbmUgcG9rZXIgdGVuZHMgdG8gdGFrZSBhIGxvdCBvZiB0aGF0IG91dCBvZiB0aGUgYW5hbHlzaXMsIHBhcnRpY3VsYXJseSB3aGVuIHNvIG1hbnkgb2YgdGhlIG90aGVyIHBheWVycyBhcmUgbGl0ZXJhbGx5IHByb2dyYW1tZWQgdG8gc2ltcGx5IHBsYXkgdGhlIG9kZHMuIFRoZSByZWFzb24gcG9rZXIgaXMgdW5wcmVkaWN0YWJsZSBpc24ndCBuZWNlc3NhcmlseSB0aGF0IHRoZSBjYXJkcyBhcmUgcmFuZG9tLCBiZWNhdXNlIGFzIHlvdSd2ZSBpbnR1aXRlZCwgdGhlIHByb2JhYmlsaXR5IGNhbGN1bGF0aW9ucyBhcmVuJ3QgdGhhdCBkaWZmaWN1bHQuIEl0J3MgYmVjYXVzZSAoMSkgbW9zdCBwZW9wbGUgYXJlIGJhZCBhdCBjYWxjdWxhdGlvbnMgb2YgdGhpcyBzb3J0IGluIHRoZWlyIGhlYWQsIGJ1dCBldmVuIG1vcmUgKDIpIHRoZSBtZXRhIGdhbWUgb2YgYmx1ZmZpbmcgYW5kIGNvdW50ZXIgYmx1ZmZpbmcgaXMgZW50aXJlbHkgZGl2b3JjZWQgZnJvbSB0aGUgbWF0aC4KUnVsZSA3ICBubyBsYWJlbGxpbmcganVzdCBkb24gbWFrZSBhc3N1bXB0aW9ucywgYW5kIHN0ZXJlb3R5cGVzIGJhc2VkIG9uIHRoZSB3YXkgeW91ciBTTyBpcy4gCkhlIGNsYWltZWQgc3RhZmYgd2VyZSByZXdhcmRlZCB3aXRoIGdpZnQgdm91Y2hlcnMgZm9yIG1lZXRpbmcgYmV0dGluZyB0YXJnZXRzIGFuZCBjZXJ0YWluIHBsYXllcnMgd2VyZSBiZWluZyBpbmR1Y2VkIHRvIHN0YXkgd2l0aCBkcmluayBjYXJkcyBhbmQgb3RoZXIgcHJvbW90aW9ucy4KIiBBbmQgQ2hhcmxlbmUncyBpbnR1aXRpb24gdGhhdCBFcm5pZSdzIGdhbWJsaW5nIGNvdWxkIGxlYWQgdG8gdHJvdWJsZSBjYW1lIHRydWUuICJXZSBtZXQgYXQgYSBjcmFwcyB0YWJsZSBpbiBUaGUgUmlvIGluIExhcyBWZWdhcywgIiBzYWlkIEFkcmlhbiBTb2xvbW9uLiBTb2xvbW9uIHdhcyBsaXZpbmcgaW4gTm9ydGggQ2Fyb2xpbmEgaW4gMjAwNiwgd2hlbiBhIGJ1c2luZXNzIHRyaXAgbGVkIGhlciB0byBhIGNoYW5jZSBlbmNvdW50ZXIgd2l0aCBFcm5pZSBTY2hlcmVyLiAKQWxvbmcgd2l0aCB0aGF0LCBBcm1lbmlhbiBnYW5ncyBjYXVzZWQgbG90cyBvZiBoYXJtIGR1cmluZyBXVzEuIE1hbnkgVHVya2lzaCBzb2xkaWVycyBmbGVkIHRoZSBhcm15IHRvIGdvIGJhY2sgdG8gZGVmZW5kIHRoZWlyIHZpbGxhZ2VzIGFuZCB0aGUgYXJteSB3YXMgYmVpbmcgYXR0YWNrZWQgYnkgdGhlc2UgZ2FuZ3MgY29udGluaW91c2x5LiAKU28gZXZlcnkgdGltZSBJIGhlYXIgYWJvdXQgYSBuZXcgZmluZGluZyBpbiB0aGUgTXVlbGxlciBpbnZlc3RpZ2F0aW9uLCBJIGJlY29tZSBtb3JlIGFuZCBtb3JlIGluY3JlZHVsb3VzLiAKT3ZlcnZpZXcgZm9yIHBldHJpZmllZGNhdHRsZQpMb3RzIG9mIHByb2plY3Rpb24gY29taW5nIGZyb20gcGVvcGxlIHdobyBjYW4gZXZlbiBpbWFnaW5lIHdoYXQgaXQgbGlrZSB0byBiZSBhIGNoaWxkIG9mIGFidXNlIGF0IHlvdXIgb3duIGZhbWlseSBoYW5kLiBObyBlbXBhdGh5IGZyb20gdGhlbSBiZWNhdXNlIGxvdHMgb2YgcGVvcGxlIGJlbGlldmUgYmxpbmRseSBpbiB0aGUgbmFycmF0aXZlIG9mIHBhcmVudHMgYXJlIG5vdCBwZXJmZWN0IGJ1dCBpbmhlcmVudGx5IGFsd2F5cyBsb3ZlIHRoZWlyIGtpZHMuIApUaGV5IGVuZGVkIHVwIHRha2luZyBhIGRlYWwgd2l0aCBNcy4gClRoZSBiaWdnZXIgcHJvYmxlbSBpcyB0aGF0IHR3byBtaW51dGVzIG9mIGJydXNoaW5nIGluIHRoZSBzaG93ZXIgdXNlcyBhYm91dCBmaXZlIGdhbGxvbnMgb2Ygd2F0ZXIsIHdoZXJlIHR3byBtaW51dGVzIG9mIG1vZGVzdCBmYXVjZXQgdXNhZ2UgKGV2ZW4gaWYgeW91J3JlIHRoZSB0eXBlIHdobyBsZWF2ZXMgaXQgcnVubmluZyB0aGUgd2hvbGUgdGltZSkgb25seSB1c2VzIGFib3V0IHR3byBnYWxsb25zLiBZb3UgZG9uJ3QgbmVlZCBhIHNwcmVhZHNoZWV0IHRvIHRlbGwgeW91IHdoaWNoIG9uZSBzYXZlcyB0aGUgbW9zdCB3YXRlci4gQWxzbywgd2UgY2FuIHNheSBmcm9tIHBlcnNvbmFsIGV4cGVyaWVuY2UgdGhhdCB5b3UgY2FuIHNhdmUgd2F5IG1vcmUgd2F0ZXIgdGhhbiBlaXRoZXIgbWV0aG9kIGJ5IHNpbXBseSBub3Qgc2hvd2VyaW5nIGF0IGFsbC4uIApUaGV5IGJldCBvciBmb2xkIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGV4Y2hhbmdlIGFuZCB0aGUgcmVtYWluaW5nIHBsYXllciB3aXRoIHRoZSBoaWdoZXN0IGhhbmQgd2lucy4uIAozIGJldHRpbmcgd2FzIGFsbW9zdCB1bmhlYXJkIG9mIHVubGVzcyB5b3UgaGFkIFFRKy4gCidBTURUcnRTVWZmbGpMT09DVVJRTkx5IF8gRUVLIE1FRUsgQlVHUyBBQlJBSEFNIEZSQVdLVVcsIEhlT1JZIEZPUkQsIEFMQkVSVCBNT1pBUlQsIDE1Nj8gdHIgbCBjIFRWICAxLjUuIFVpIFBldC4gCkkgaGF2ZSB0byBzYXkgSSBidXQgSSBhZ3JlZSB3aXRoIGEgbG90IG9mIHdoYXQgeW91IHNhaWQuIE9uZSBvZiB0aGUgdGhpbmdzIGFib3V0IG1pbGl0YXJ5IHZzIHBvbGljZSBob3dldmVyIGlzIHRoZSBwcmVzZW5jZSBvZiBsYXJnZSBzY2FsZSBmb3JjZS4gUnVsZXMgb2YgRW5nYWdlbWVudCBleGlzdCBiZWNhdXNlIG1vc3QgbG9naWNhbCBpbmRpdmlkdWFscyBrbm93IHRoYXQgd2hlbiB0aGV5IGFyZSBhdHRhY2tpbmcgb3IgYXNzYXVsdGluZyBhIGdyb3VwIG9mIG1pbGl0YXJ5IHBlcnNvbm5lbCwgd2hhdCBleGFjdGx5IHRoZXkgZ2V0dGluZyBpbnRvLiBQZXJzb25uZWwgaGF2ZSBleGNlc3NpdmUgdHJhaW5pbmcgYW5kIGhvdyB0byBjb21wbGV0ZWx5IGRlbGV0ZSBhIHRocmVhdCBmcm9tIHRoZSBmYWNlIG9mIHRoZSBFYXJ0aC4KVGhhdCdzIGFib3V0IHRoZSBwZXJjZW50YWdlIHlvdSdsbCBmaW5kIGluIG90aGVyIFVuaXRlZCBTdGF0ZXMgZ2FtaW5nIGRlc3RpbmF0aW9ucy4gClN1cGVyaW9yaXR5IG9yIGluZmVyaW9yaXR5IHdhcyBpbmRpY2F0ZWQgd2hlbiB0aGUgZWZmZWN0IHNpemUgZXF1YWxsZWQgcGx1cyBvciBtaW51cyAwLjUuSG93IHdlcmUgZGlmZmVyZW5jZXMgYmV0d2VlbiBzdHVkaWVzIGludmVzdGlnYXRlZD9TZW5zaXRpdml0eSBhbmFseXNlcyB3ZXJlIHBlcmZvcm1lZCBieSB1c2luZyBkaWZmZXJlbnQgY3V0IG9mZiBwb2ludHMgZm9yIHRoZSBxdWFsaXR5IHNjb3JlIHRvIHJlY2xhc3NpZnkgdGhlIGxldmVsIG9mIGV2aWRlbmNlLCBhbmQgYWxzbyBieSB1c2luZyBkaWZmZXJlbnQgZWZmZWN0IHNpemUgY3V0IG9mZiBwb2ludHMgdG8gY2xhc3NpZnkgZWZmaWNhY3kuUmVzdWx0cyBvZiB0aGUgcmV2aWV3TmluZSBSQ1RzICg2ODMgcGF0aWVudHMpIHdlcmUgaW5jbHVkZWQuTW9zdCBvZiB0aGUgaW5jbHVkZWQgUkNUcyBoYWQgc3Vic3RhbnRpYWwgbWV0aG9kb2xvZ2ljYWwgZmxhd3MuIApPbmUgbmlnaHQgSXJlbmUgaW52aXRlZCB1cyB0byBnbyBzbGVkZGluZy4gZ3Jvd24gdXAgaW4gTWljaGlnYW4sIHNsZWRkaW5nIHRvIG1lIGNvbnNpc3RzIG9mIGEgdGVuIHNlY29uZCByaWRlIG9uIGEgcGxhc3RpYyBzbGVkIGRvd24gYSBzbWFsbCBoaWxsICh1c3VhbGx5IGluIHNvbWVvbmUgYmFja3lhcmQpLiBpbiB0aGUgQWxwcyBpcyBhIGRpZmZlcmVudCBzdG9yeSEKVGhlbiBzb21lIHRyZWVzIHdlbnQgZG93bi4gV2hlbiB3ZSBoYWQgZ290dGVuIGRvd24gbmV4dCB0byBpdCB0aGVyZSB3YXMgYSBtZXRlciBvZiBtdWQgY292ZXJpbmcgMzAgZmVldCBhY3Jvc3MgdGhlIGRyaXZlIHdheSwgYW5kIGFib3V0IDIwIGZlZXQgZG93biB3YXMgYSBtYXNzaXZlIHRvcnJlbnQgb2YgbXVkLCB3aGVuIEkgbG9va2VkIGF3YXkgdGhlIG11ZCBoYWQgZGVwb3NpdGVkIGEgaHVnZSBib2xkZXIgb24gdGhlIHNpZGUsIGV2ZW50dWFsbHkgdGhlIG11ZCB0aGlubmVkIG91dCBhbmQgd2F0ZXIgc3RhcnRlZCB3YXNoaW5nIGRvd24sIGVycm9kZWQgdGhlIHNpZGVzIGFuZCB0b29rIHRoZSB0aGluZyBhd2F5LiAKVGhlIHRlbnNpb25zIHRoYXQgdGhlIHBvbGljZSBvcHMgaW4gTHlhcmkgYXJlIGluc3RpZ2F0aW5nIGFyZSBkYW5nZXJvdXMgYW5kIHdpZGVzcHJlYWQuIFRoZXkgZ28gZmFyIGJleW9uZCB0aGUgcHJvYmxlbXMgb2YgdXJiYW4gZGVjYXksIG9yIGV0aG5pYyBnaGV0dG9pc2F0aW9uIGluIEthcmFjaGkuIApEb24gd29ycnkgT1AsIGdhbWJsaW5nIGRvZXNudCBmZWVsIHJpZ2h0LiBBbGwgdGhlc2UgcmV0YXJkcyBmbG9hdGluZyBhcm91bmQgdGVsbGluZyBzdG9yaWVzIG9mIHdpbm5pbmcgZ2FtZXMgaW4gVmFsZW50aW5lIG9yIHNheWluZyB5b3UgZG9uIHVuZGVyc3RhbmQgaG93IHRvIHBsYXkgcG9rZXIgc29tZWhvdyBtaXNzZWQgdGhlIHBvaW50IGFuZCB0aGluayBpZiB0aGV5IGhhdmVuIGV4cGVyaWVuY2VkIHRoZSBwcm9ibGVtLCBpdCBkb2VzbiBleGlzdC4gdGhlIGtub3cgaXQgYWxsIG1lbnRhbGl0eSBpcyB3aGF0IG1ha2VzIHJlZGRpdCBwcmV0dHkgY3JpbmdlIG92ZXJhbGwgYnV0IGl0IGNlcnRhaW5seSBoaW5kZXJzIHRoZSBhYmlsaXR5IG9mIHBlb3BsZSB0byBhY3R1YWxseSBsb29rIGludG8gd2VhdGhlciBvciBub3QgZ2FtYmxpbmcgaW5mYWN0IGlzIHJpZ2dlZCBvciBpcyBidWdnaW5nIG91dC4KV2hlbiB5b3UgaHVudCBhbmQgdXNlIGV2ZXJ5IHBhcnQgb2YgYSBkZWVyLCB5b3UgcmVzcGVjdCBhbmQgaG9ub3Igbm90IG9ubHkganVzdCBuYXR1cmUgYnV0IGFnZSBvbGQgaHVudGluZyB0cmFkaXRpb25zIHRoYXQgd2Ugc2VlbSB0byBoYXZlIGZvcmdvdHRlbiBpbiBvdXIgYnVzeSBkaWdpdGFsIGxpZmUuCk1pc2V6IGF2ZWMgcHJjYXV0aW9uLiBMb3JzcXVlIHZvdXMgYXBwcmVuZXogIGpvdWVyLCBwcnZveWV6IHVuZSBzb21tZSB0b3RhbGUgcXVlIHZvdXMgYWNjZXB0ZXogZGUgcGVyZHJlIGV0IG5lIG1pc2V6IHBhcyBhdSBkZWwuIE4nZXNzYXlleiBwYXMgZCdlbmNocmlyIHBvdXIgdm91cyByYXR0cmFwZXIgdW5lIGZvaXMgcXVlIHZvdXMgYXZleiBwZXJkdSB0b3V0IGNlIHF1ZSB2b3VzIGF2aWV6IHBydnUgZGUgbWlzZXIuIApOb3cgSSBraW5kYSB3b3JyaWVkIHdoYXQgbXkgcmV0dXJuIGlzIGdvbm5hIGJlLiAKSW4gdGhlIGtpdGNoZW4sIGEgbWl4IG9mIHNoYXJlYWJsZSBwbGF0ZXMsIHNhbGFkcywgYW5kIHNhbmR3aWNoZXMgd2lsbCBiZSBhdmFpbGFibGUsIHdpdGggaW5ncmVkaWVudCBuYW1lcyB5b3UgbWlnaHQgcmVjb2duaXplIGZyb20gdGhlIGJlZXIgbGlzdC4gU2FsYWQgZHJlc3NpbmdzIGFuZCBvdGhlciBjb25kaW1lbnRzIHdpbGwgaW5jbHVkZSB0aGUgU2FudGlsbGkgQ2Flc2FyIGRyZXNzaW5nLCBBd2FrZSBiYWxzYW1pYyB2aW5haWdyZXR0ZSwgYW5kIE1vcnBoIElzbGFuZCBkcml6emxlLiBKb3NlcGhpbmUgc2xpZGVycyB3aWxsIGJlIHN0dWZmZWQgd2l0aCBiYXJiZWN1ZSBwdWxsZWQgcG9yayBhbmQgYmVlciBzbGF3LCBxdWlub2EgYml0ZXMgd2lsbCBjb21lIHdpdGggYmxhY2tiZXJyeSBXZWlzc2UgbWFybWFsYWRlLCBhbmQgYSBudW1iZXIgb2Ygb3RoZXIgZGlzaGVzICAgc3BlbnQgZ3JhaW4gcHJldHplbHMsIHRoZSBTaGlmdHkgYnVyZ2VyLCB0aGUgZm91bmRlcidzIG1hYyBhbmQgY2hlZXNlICAgd2lsbCB1c2UgaG91c2UgYmVlciBjaGVlc2UuIApMYXZpbmd0b24gU3F1YXJlIHdhcyBvcGVuZWQgYnkgdGhlbiBOU1cgUHJlbWllciBOZXZpbGxlIFdyYW4uIE1lYW53aGlsZSwgdGhlIFdhbmdhcmF0dGEgUlNMIGJ1aWxkaW5nIHdhcyBzb2xkIGFmdGVyIGF1Y3Rpb24gb24gRnJpZGF5IGZvciBhbiB1bmRpc2Nsb3NlZCBwcmljZS4gVGhlIFJlaWQgU3RyZWV0IHByb3BlcnR5IHdhcyBwYXNzZWQgZm9yICQ3ODAsMDAwLCBidXQgYWdlbnRzR2FycnlOYXNoIENvIGNsaW5jaGVkIGEgc2FsZSB0byBhIE5vcnRoIEVhc3QgaW52ZXN0b3IgZm9sbG93aW5nIHRoZSBhdWN0aW9uLiAKVGhleSBrbm93IHdoYXQgdGhleSBkb2luZy4gQXJlIHlvdSBhIGdhbWUgZGV2ZWxvcGVyPyBEbyB5b3UgdW5kZXJzdGFuZCB3aGF0IGdvZXMgaW50byBnYW1lIGRldmVsb3BtZW50PyBEZXNpZ24sIHRlc3RpbmcsIGl0ZXJhdGlvbiwgcmUgZGVzaWduLCB0ZXN0aW5nLCBpbXBsZW1lbnRhdGlvbiwgUUEsIG9uIGFuZCBvbj8gSWYgeW91IGRvLCB0ZWxsIHVzLCBzbyB3ZSBjYW4gYW5hbHl6ZSBZT1VSIHdvcmsuLiAKTm90IHN1cmUgd2hhdCB5b3UgdHJ5aW5nIHRvIHByb3ZlIGhlcmUsIHRoYXQgSmFwYW4gd2FzIGlubm9jZW50IGFuZCB3YXMgdmljdGltPy4gCldpdGggdGhlIGluY3JlYXNpbmcgcG9wdWxhcml0eSBvZiB0aGUgZGlhbW9uZCBlbmdhZ2VtZW50IHJpbmcsIGluIHBhcnQgYmVjYXVzZSBvZiB0aGUgYnJpbGxpYW5jZSBvZiBEZUJlZXJzICJEaWFtb25kcyBhcmUgZm9yZXZlciIgYWR2ZXJ0aXNpbmcgY2FtcGFpZ24sIHRoZSBkaWFtb25kIHNlbGxlcnMgdGhvdWdodCB0aGV5IHNob3VsZCBzZWxsIGEgc3BlY2lhbCB3YXkgb2YgcHJlc2VudGluZyB0aGVpciBnb29kcy4gCldobyBkb2VzIHRoZSBRdWVlbiB0aGluayBpcyBiZWluZyBzZW50IHRvIGZpZ2h0IHRoaXMgdXNlbGVzcyB3YXIgaW4gQWZnaGFuaXN0YW4/IE9sZCBnYWxzIGxpa2UgaGVyPyBPciBtZT8gTm9wZSwgaXQgeW91bmcgcGVvcGxlIGFuZCB3aGVuIHRoZSB3YXIgaW4gQWZnaGFuaXN0YW4gbWFuYWdlcyB0byBjb2xsYXBzZSB0aGUgQW1lcmljYW4gRW1waXJlLCBqdXN0IGxpa2UgaXQgZGlkIHRoZSBTb3ZpZXQgb25lLCBJIHdvdWxkIGhhdGUgdG8gdGhpbmsgdGhhdCBHcmVhdCBCcml0YWluIHdvdWxkIGFsc28gZmluYWxseSBjb2xsYXBzZSB1bmRlciB0aGUgd2VpZ2h0IG9mIGl0cyBsb25nIGRlYWQgRW1waXJlLiBBZnRlciBhbGwsIHRoYXQgd291bGQgbGVhZCAoaWYgSSBjYW4gcHVzaCB0aGUgU2V4IFBpc3RvbHMgcmVmZXJlbmNlIGEgYml0IGZhcnRoZXIpLCB0byBBbmFyY2h5IGluIHRoZSBVSy4gCk9oaW8gU3RhdGUgTWljaGlnYW4gaXMgc3RpbGwgYSByaXZhbHJ5IGdhbWUsIGluIHdheXMgdGhlIEJyb3ducycgZGl2aXNpb24gZ2FtZXMsIGV2ZW4gaW4gdmljdG9yeSwgYXJlbid0LjMgbW9zIGFnbyArIEJ5IEJpbGwgTGl2aW5nc3RvbiwgVGhlIFBsYWluIERlYWxlckRlZmVuc2VsZXNzIE9oaW8gU3RhdGUgZmFjZXMgbWlnaHR5IE1pY2hpZ2FuOiBCaWxsIExpdmluZ3N0b24gRGVmZW5zZWxlc3MgT2hpbyBTdGF0ZSBmYWNlcyBtaWdodHkgTWljaGlnYW46IEJpbGwgTGl2aW5nc3RvbiBDaW5kZXJlbGxhJ3Mgc2xpcHBlciB3b3VsZCBuZXZlciBmaXQgT2hpbyBTdGF0ZSBiZWNhdXNlIG9mIHRoZSBCdWNrZXllcycgbG9uZyB5ZWFycyBhcyBhbiBlbGl0ZSBwcm9ncmFtLiBCdXQgdGVycmlibGUgZGVmZW5zZSBpcyBwcm9iYWJseSB0b28gbXVjaCB0byBvdmVyY29tZSBhZ2FpbnN0IE1pY2hpZ2FuLjMgbW9zIGFnbyArIEJ5IEJpbGwgTGl2aW5nc3RvbiwgVGhlIFBsYWluIERlYWxlclRoYW5rc2dpdmluZyAgIEZvb3RiYWxsLCBmb29kIGFuZCBncmF0aXR1ZGU6IEJpbGwgTGl2aW5nc3RvbiBUaGFua3NnaXZpbmcgICBGb290YmFsbCwgZm9vZCBhbmQgZ3JhdGl0dWRlOiBCaWxsIExpdmluZ3N0b24gV2hlbiB3YXRjaGluZyBmb290YmFsbCBvciBnb3JnaW5nIG9uIGZvb2QsIGJlYXIgaW4gbWluZCB0aGF0IHRoZSBlc3NlbmNlIG9mIHRoZSBob2xpZGF5IGlzIGJlaW5nIGdyYXRlZnVsLjMgbW9zIGFnbyArIEJ5IEJpbGwgTGl2aW5nc3RvbiwgVGhlIFBsYWluIERlYWxlclRoZSBsYXN0IHdvcmQgb24gc3BvcnRzJyBsYXN0IHdvcmRzOiBCaWxsIExpdmluZ3N0b24gVGhlIGxhc3Qgd29yZCBvbiBzcG9ydHMnIGxhc3Qgd29yZHM6IEJpbGwgTGl2aW5nc3RvbiBUaGUgbGFzdCB3b3JkIG9uIE9oaW8gU3RhdGUncyBzZWFzb24gbWlnaHQgbm90IGJlICJwbGF5b2ZmcywgYnV0IGl0IGNvdWxkIGJlLiAKRnJhbmtmdXJ0IEF1dG8gU2hvdyBWaWRlbyBUb3VyIFJvdW5kdXAKSXQncyBsaWtlIHdoZW4gYSBjcmFjayBhZGRpY3QgZ29lcyB0aHJvdWdoIHdpdGhkcmF3YWxzLCBoZSdsbCBkbyBhbnl0aGluZyB0byBzZWUgdGhhdCBjaGluIGdvIGRvd24uIApGcm9tIHRoZW4gb24sIEkgcmVmdXNlZCB0byB0b3VjaCB0aGUgZ3V5LiBJIGZlbHQgYmFkLCBiZWNhdXNlIGhlIHdhcyBhIHN3ZWV0IG9sZCBnYXkgZ3V5IHdobyBqdXN0IGhhcHBlbmVkIHRvIGJlIDYgYW5kIDUwMGxicy4gCkkgY2FuIHNoYWtlIG15IGhlYWQsIHJvbGwgbXkgZXllcyBhbmQgd2FnIG15IGZpbmdlciBhbGwgSSB3YW50LCBidXQgaXQgd291bGQgYmUgaW1tb3JhbCB0byBkbyBhbnl0aGluZyBtb3JlIHRoYW4gdGhhdC4gTm90IHRoYXQgSSBoYWQgdGhlIHBvd2VyIHRvIHN0b3AgaGltIGFueWhvdy4gQmVmb3JlIHlvdSBnZXQgYW5ncnksIGtub3cgZmlyc3QgdGhhdCBJIGRvbiBwbGF5IGl0IGFnYWluc3Qgb3RoZXIgcGVvcGxlOyB0aGF0IHdvdWxkIGJlIGRpY2tpc2hseSB3cm9uZy4gClNvIHRoaXMgaXMgYWxsIGFib3V0IHRydXN0IGluIHRoZSBlbmQuCjIuIApGb2xsb3dpbmcgaGlzIHJldGlyZW1lbnQgZnJvbSBEb21pbmlvbiBMaWZlIGluIDE5ODYsIERhZCBzZXJ2ZWQgYXMgYW4gYWN0dWFyaWFsIGNvbnN1bHRhbnQgd2l0aCBXcmlnaHQgTW9nZyBBc3NvY2lhdGVzICAgYW5kIHRoZW4gdGhlIHBpZWNlIGRlIHJlc2lzdGFuY2UgYXMgaGUgd2FzIHJlY3J1aXRlZCB0byBzZXQgdXAgYW4gYWN0dWFyaWFsIHRyYWluaW5nIHByb2dyYW0gZm9yIHRoZSBJc2xhbmQgTGlmZSBJbnN1cmFuY2UgQ29tcGFueSBvZiBLaW5nc3RvbiwgSmFtYWljYSwgd2hlcmUgTW9tIGFuZCBEYWQgc3Vic2VxdWVudGx5IHNwZW50IHNldmVyYWwgbWVtb3JhYmxlIHllYXJzIG9uIHdvcmtpbmcgaG9saWRheXMuIApUaGlzIHllYXIsIGpvaW4gb3ZlciA1MCBsb2NhbCB3b21lbiBhdCBQYXJhbGxlbCdzIEhvbGRlbiBSb29tIGV2ZW50IHNwYWNlIGFuZCBzdXBwb3J0IHRoZXNlIGFtYXppbmcsIHRhbGVudGVkIG1ha2Vycy4gCkxvb2suIEkgc2hvdWxkbid0IGhhdmUgZ290dGVuIHNuYXJreSB3aXRoIHlvdS4gSSBhcG9sb2dpemUuIEknbSBqdXN0IGdldHRpbmcgYSBsaXR0bGUgdGlyZWQgb2Ygb2YgdGFsa2luZyB0byBwZW9wbGUgd2hvIGhhdmUgdmVyeSBzdHJvbmcgb3BpbmlvbnMgYWJvdXQgdGhlIGRvY3VtZW50YXJ5IGJ1dCB3b24ndCB0YWtlIHRoZSB0aW1lIHRvIGV2ZW4gd2F0Y2ggaXQgc28gdGhhdCBpZiBub3RoaW5nIGVsc2UgdGhleSBjYW4gaW50ZWxsaWdlbnRseSByZWJ1dCBpdC4KNS4gUHJpY2UgdG8gaW5jcmVhc2UgcHJvZml0cy4gSXQncyBhIG15dGggdGhhdCBpZiB5b3UgZGlzY291bnQgcHJpY2UgdG8gaW5jcmVhc2Ugc2FsZXMsIHlvdSB3aWxsIHNlZSBpbmNyZWFzZWQgcHJvZml0cy4gCllvdSBtaWdodCBhbHNvIGxpa2UgdGhlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdGhhdCBpcyB3cml0dGVuIG9uIHRoZSBzaXRlLCBsaWtlIGJsdWZmIHRhY3RpY3MsIGRpZmZlcmVudCB0eXBlcyBvZiBwcm9iYWJpbGl0aWVzIGFuZCBldmVuIHNvbWUgbWF0ZXJpYWxzIGZvciBtb3JlIGFkdmFuY2VkIHBsYXllcnMuIEFmdGVyIHRoYXQsIHlvdSB3aWxsIGhhdmUgdG8gZ28gdGhyb3VnaCBhIGxlbmd0aHkgLCBjb21wbGljYXRlZCBwcm9jZXNzIHRvIG1ha2UgYSByZWFsIG1vbmV5IGRlcG9zaXQuIElmIHlvdSBkb24ndCBnaXZlIHVwLCB5b3VyIGFjY291bnQgd2lsbCBiZSBkZXBvc2l0ZWQgaW4geW91ciBhY2NvdW50IGFuZCB0aGVuIHlvdSB3aWxsIGJlIGFibGUgdG8gcGxheSBqdXN0IGxpa2UgdGhlIGZyZWUgbW9uZXkgZ2FtZXMuIApUaGUgaHVtYW4gYm9keSBpcyB3ZWlyZC4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29NeSBmaXJzdCBtZWV0IEkgd2FzIHdvcm4gb3V0IGltbWVkaWF0ZWx5IGFmdGVyIGJ1dCB0d28gZGF5cyBsYXRlciBJIHdhcyBiYWNrIGluIHRoZSBneW0gdHJ5aW5nICh1bnN1Y2Nlc3NmdWxseSkgdG8gc3F1ZWV6ZSBvdXQgd2hhdCBJIHRob3VnaHQgd2VyZSBzb21lIHBvdW5kcyBJIGxlZnQgb24gdGhlIGJhci4gClRoZXJlIGFyZSBxdWl0ZSBhIGZldyBkaWZmZXJlbnQgb3B0aW9ucyB0aGF0IHlvdSBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2Ygd2hlbiB5b3UgYXJlIGNvbnNpZGVyaW5nIHRoaXMuIFJlbWVtYmVyIHRoYXQgZXZlbiBhIHNtYWxsZXIgb3ZhbCB0YWJsZSBjYW4gbG9vayBxdWl0ZSBzaGFycCBhbmQgdGhhdCBiZWNhdXNlIHRoZSB0YWJsZSBmb2xkcyB1cCwgaXQgY2FuIGJlIHF1aXRlIGEgdGVtcG9yYXJ5IHBhcnQgb2YgdGhlIHJvb20uIElmIHRoZSB0YWJsZSBpcyBvbmx5IGdvaW5nIHRvIGJlIHVwIGZvciBhIGZldyBob3VycywgeW91IHdpbGwgZGlzY292ZXIgdGhhdCB5b3UgY2FuIHRha2UgaXQgZG93biBsb25nIGJlZm9yZSBpdCBiZWNvbWVzIGFuIGluY29udmVuaWVuY2UuCkJlYXQgVGhlIFNsb3RzIFBva2VyIENvdXJzZSBDcml0aWNhbCBPdmVydmlldwpJIHdpbGwgc2hvdyBZb3UgMiB3YXlzIHRvIGdldCBmcmVlIHBva2VyIG1vbmV5IG9ubGluZS4gCldoYXQgbWFrZXMgU2xpbSB0aW1lIGluIGNvbW1hbmQgZHVyaW5nIHRoZSBTZWNvbmQgV29ybGQgV2FyIHNvIGFwcGVhbGluZyB0byBoaXN0b3JpYW5zIGFuZCBoaXMgY29udGVtcG9yYXJpZXMgd2FzIHRoZSBmYWN0IHRoYXQgaXQgYSBjbGFzc2ljIHVuZGVyZG9nIHN0b3J5LiAKSWYgeW91ciBnb2FsIGlzIHRvIGJlY29tZSBhIHdpbm5pbmcgVGV4YXMgSG9sZCdlbSBwbGF5ZXIsIHRoaXMgc2VjdGlvbiBpcyBpbnZhbHVhYmxlLiBBcyBzdGF0ZWQgYWJvdmUsIHRoZSBtb3N0IGltcG9ydGFudCBkZWNpc2lvbiB5b3UgbWFrZSBhcyBhIEhvbGQnZW0gcGxheWVyIGlzIHdoZXRoZXIgb3Igbm90IHRvIGVudGVyIHRoZSBwb3QgKG9yIHBsYXkgZm9yIHRoZSBwb3QpLiAKU28gZG9uJ3Qgd2FzdGUgbXVjaCB0aW1lIGFuZCBjYWxsIGFuIGF2aWFuIHZldCByaWdodCBhd2F5LiBBIHNlcmlvdXMgY29uZGl0aW9uIGxpa2UgdGhpcyBzaG91bGQgYmUgaGFuZGxlZCB3aXRoIHByb3BlciBjYXJlIGFuZCBvbmx5IHByb2Zlc3Npb25hbHMgY2FuIGRvIHRoYXQuIApBbW9uZ3N0IHZhcmlvdXMgb3RoZXIgcG9rZXIgZ2FtZXMgb25saW5lLCBUZXhhcyBIb2xkJ2VtIGFuZCBPbWFoYSBzZWVtIHRvIGJlIHRoZSBiZXN0IHRvIHN0YXJ0IHdpdGguIFNvIGp1c3QgZG8gbm90IHdhc3RlIGFueW1vcmUgdGltZS4gSnVzdCBkZWx2ZSBpbiB0byB0aGUgZXhjaXRlbWVudCBvZiBmcmVlIG9ubGluZSBwb2tlciBnYW1lLgpJJ2QgYWxzbyBsaWtlIHRvIHBvaW50IG91dCB0aGF0IHBlb3BsZSB3aXRob3V0IGF1dGlzbSBhbHNvIHJlYWN0IGxpa2UgdGhpcy4gVGhleSBjYW4ndCByZWNvbmNpbGUgdGhlIHBlcnNvbiB0aGV5IGtub3cgYW5kIGNhcmUgYWJvdXQgd2l0aCB0aGUgY3JpbWUgb2YgcmFwZS4KV2hpdGUgbm9ybWFsbHkgc3RhbmRzIGZvciAkMS4wMC4gUGluayBpbmRpY2F0ZXMgJDIuNTAsIGFuZCByZWQgbmVhcmx5IGFsd2F5cyBtZWFucyAkNS4wMC4gClN0YXJ0cyB3YWxraW5nLiBUaGUgdmlzdWFsIHByb3dlc3MgYWRkcyBhIGRpZmZlcmVudCBwYXJ0IHRvIHRoZSB3aG9sZSBzY2VuZS4gQXQgb25lIGhhbmQgeW91IHNlZSBKYWNraWUgcmVzaXN0YW5jZSB0byBjb21wbHkgd2l0aCB0aGUgcnVsZSB3aGljaCBjYW4gYmUgY2FsbGVkIGEgTWFjaGlhdmVsbGlhbiBhcnQsIG9uIHRoZSBvdGhlciBoYW5kIHlvdSBzZWUgb3Igc2hvdWxkIEkgc2F5LCBkb24gc2VlIFZpdG8gU3BhdGFmb3JlIHdobyB0cmllcyB0byBlbmQgYSBtYWpvciBubyBubyBieSBkaXNsb2NhdGluZyBKYWNraWUgZnJvbSB0aGlzIHdvcmxkLiAKSSBrbmV3IGhlIGhhZCBzb21ldGhpbmcgc3Ryb25nIGl0IHdhcyB3cml0dGVuIGFsbCBvdmVyIGhpcyBmYWNlLiBUaGUgZmFjdCBpcyB3aGVuIHRoZXNlIHJvY2tzIGVudGVyIHRoZSBwb3QsIHRoZXkgaGF2ZSB0aGUgZ29vZHMuIApEZSA3MSBqYXJpZ2UgUm9ubmVyIHpvdSBtb3JnZW4gaW4gZWVuIFQgc2hpcnQgdmFuIGRlIGJyYW5kd2VlciB2YW4gc3RhcnQgZ2FhbiBpbiBkZSBOaWptZWVnc2UgVmllcmRhYWdzZSBlbiB0YWNodGlnIGV1cm8gaW5zY2hyaWpmZ2VsZCBrcmlqZ2VuLiAKVGhleSBwdXQgdXAgZGVmZW5zaXZlIGZpZWxkcyBhbmQgYm93bGVkIHF1aXRlIGRlZmVuc2l2ZWx5LiAKRWRpdCAzICAgSSBoYXZlIHNlY29uZCBwYWlyLCBJIHNob3ZlLCB0aGV5IGZvbGQuIEVhc3kgZ2FtZS4KVGhlIGZpbmFsIGRheSBvbiB0aGUgY2FtcGFpZ24gdHJpYWwgd2FzIGFsc28gcm9ja2VkIGJ5IHJlcG9ydHMgYSB3b21hbiBoYWQgdGFrZW4gaGVyIG93biBsaWZlIHdoaWxlIGluIHRoZSBjYXJlIG9mIHRoZSBSb3lhbCBIb2JhcnQgSG9zcGl0YWwuCkZ1cnRoZXJtb3JlLCB0aGVpciB6b29tIGZ1bmN0aW9uYWxpdHkgaXMgcG9vciwgeW91IGNhbiBldmVuIHRha2Ugbm90ZXMgaW4gYSBwcmV2aW91cyBoYW5kIG9uY2UgeW91IG1vdmUgdG8gYSBuZXcgb25lLCB0aGV5IGhhdmUgbm8gem9vbSB0b3VybmllcyBhbmQgdGhlaXIgbGl2ZSBldmVudHMgaGF2ZSBiZWVuIGNhdWdodCBkb2luZyBleHRyZW1lbHkgc2hhZHkgc3R1ZmYuLiAKSSBwbGF5IGluIGEgcHJlZG9taW5hbnRseSBibGFjayBjaXR5LiBXZSBhcmUgYWxsIHRoZXJlIHRvIHdpbiBlYWNoIG90aGVyIHJvbGxzIHNvIGV2ZXJ5b25lIGlzIGFuIGVuZW15LiAKV2lsbCBGZXJyZWxsIGluIFRoZSBPdGhlciBHdXlzIHdhcyBoeXN0ZXJpY2FsLiAKVUtiZXR0aW5nIG9mZmVycyBjb21tZW50YXJ5IGFuZCBsaXZlIGF1ZGlvIG5ld3MgZm9yIGhvcnNlIHJhY2luZywgZ3JleWhvdW5kcywgZm9vdGJhbGwsIGFuZCBJcmlzaCByYWNpbmcuIEFkZGl0aW9uYWxseSBhbHNvIG9mZmVycyBzdGF0cyBsb25nIHdpdGggdGhlIGJldHRpbmcgZ3VpZGVzIHRoYXQgYXJlIGFjY2Vzc2libGUgdG8gYm90aCB0aGUgbWVtYmVycyBhbmQgbm9uIG1lbWJlcnMuIApXZSB3ZXJlIGNvbmR1Y3RlZCB0byBhIENoaWVmLCB3aG8gZm9yIGRpc3RpbmN0aW9uIHNha2Ugd2UgY2FsbGVkIEh1cmN1bGVzLiAKSGVyZSdzIGhvdyB0byBmaW5kIG1hc3NhZ2UgdG9vbHMuLiAKMykgbW92ZSB0aGUgbGVmdCBib3R0b20gcG9ydGFsLCh3aGljaCBpcyBmYWNpbmcgcmlnaHQpIHRvIHRoZSB0b3AgcmlnaHQgZXhpdCAod2hpY2ggaXMgZmFjaW5nIGRvd24pLCB0aGVuIGxldCBnbyBvZiB0aGUgYmFsbC4gTGV0IGl0IGdvIHRocm91Z2ggdGhlIHBvcnRhbCwgYW5kIGJ5IHRoZSB0aW1lIGl0IGhhcyBnb25lIHRocm91Z2ggYW5kIGlzIGFib3V0IHRvIHRvdWNoIHRoZSBib3R0b20sIHBhdXNlIHRoZSBiYWxsLCBhbmQgbW92ZSB0aGUgYm90dG9tIGxlZnQgcG9ydGFsIHRvIHRoZSBleGl0IHRoYXQgaXMgZmFjaW5nIHRoZSBvdGhlciBwb3J0YWwgNCkgbGV0IGl0IGdhaW4gc29tZSBzcGVlZCwgYW5kIG9uY2UgaXQgY2FudCBnbyBtdWNoIGZhc3RlciwgcGF1c2UgdGhlIGJhbGwuIDUpIGxlYXZlIHRoZSBib3R0b20gcmlnaHQgcG9ydGFsIGFsb25lLCBhbmQgbW92ZSB0aGUgb3RoZXIgb25lIGF0IHRoZSBib3R0b20gbGVmdCwgdGhlIGV4aXQgZmFjaW5nIHRoZSBibGFja2hvbGUgdGhpbmcuIFRoZSBzcGVlZCB3aWxsIGNhdGNoIGl0LCBhbmQgaXQgd2lsbCB0ZWxlcG9ydCB0aGUgYmFsbCB0byB0aGUgbGFzdCBwb2ludCB0aGluZyA2KSByZXZlcnNlIGV2ZXJ5IHRoaW5nIHRvIHRoZSBzdGFydCwgYW5kIG1vdmUgdGhlIGJvdHRvbSByaWdodCBwb3J0YWwgdG8gdGhlIHRvcCBsZWZ0LCB0aGUgb25lIGFsbW9zdCBmYWNpbmcgdGhlIGZpbmlzaCwgdGhlbiBsZXQgZ28gb2YgdGhlIGJhbGwuIChGdWxsIEFuc3dlcikKSmV0enQga25udGUgbWFuIGVudHdlZGVyIHNhZ2VuICJ3YXMgYmVzY2hmdGlndCBkaWNoIGVpZ2VudGxpY2ggZ2VyYWRlIHp1ciBaZWl0PyIsIG9kZXIgYWJlciBtYW4gaGF0IGVpbmUgc2lubmxvc2VzIHVuZCBvYmVyZmxjaGxpY2hlcyBHZXNwcmNoIGJlciAiZGFtYWxzIjsgb2RlciBtYW4gZml4aWVydCBzaWNoIGViZW4gYXVmIGRpZSBLaW5kZXIgKGRhenUga2FubiBqZWRlciBldHdhcyBzYWdlbiksIG9kZXIgYXVmIGRpZSBLcmFua2hlaXRlbiAoYXVjaCBkYSBrYW5uIGplZGVyIE1pdHJlZGVuKS4gV2FzIGR1IGRhIG1pdGJla29tbXN0LCBpc3QgbWVpbmVzIEVyYWNodGVucyBlaW5mYWNoIG51ciBTeW1wdG9tIGRlc3NlbiwgZGFzcyBkZWluZSBGYW1pbGllIHNpY2ggbmljaHRzIHp1IHNhZ2VuIGhhdDsgb2RlciB2aWVsbGVpY2h0IGF1Y2ggZWluZmFjaCBpbiBpaHJlbSBhbGx0Z2xpY2hlbiBMZWJlbiBzbyB3ZW5pZyBHZW1laW5zYW1rZWl0ZW4gaGF0LCBkYXNzIG1hbiBlYmVuIGJlciBPYmVyZmxjaGxpY2hlcyByZWRldC4gCiJJdCBhYnNvbHV0ZWx5IGRpc3Rhc3RlZnVsIHRvIHBvbGl0aWNpc2UgQW56YWMgRGF5LiBJdCBzaG91bGQgbmV2ZXIgYmUsIGV2ZXIsIGRpc2N1c3NlZCBpbiB0aGUgY29udGV4dCBvZiBwb2tlciBtYWNoaW5lcywiIE1zIFdoaXRlIHNhaWQgaW4gSG9iYXJ0LiAiSSB0aGluayBtb3N0IFRhc21hbmlhbnMgd2lsbCBsb29rIGF0IHdoYXQgYmVpbmcgc2FpZCBoZXJlIGFuZCB0aGluayB0aGF0IGEgc3RyZXRjaCB0b28gZmFyLiAKSXQgdHVybnMgb3V0IGdldHRpbmcgZnJpc2t5IHdpdGggdmFsdWUgYWRkZWQgbHVicmljYW50cyBpcyBmYXN0IGJlY29taW5nIGFzIEFtZXJpY2FuIGFzIGFwcGxlIHBpZS4gClRoaXMgcG90aW9uIHR1cm5zIGhpbSBpbnRvIGEgd29tYW4gd2hvIGhhcyBoZXIgb3duIHBlcnNvbmFsaXR5LiBBZnRlciBCdXJrZSBhbmQgSGFyZSBhcmUgY2F1Z2h0LCBKZWt5bGwgYmVjb21lcyBzbyBmb2N1c3NlZCBvbiBoaXMgd29yayBoZSBiZWNvbWVzIEphY2sgdGhlIFJpcHBlciwgYmVsaWV2aW5nIHRoYXQgYXMgaGlzIHVsdGltYXRlIGdvYWwgaXMgZm9yIHRoZSBiZW5lZml0IG9mIGFsbCBodW1hbml0eSwgaXQgaXMgd29ydGggdGhlIHNhY3JpZmljZSBvZiB0aGUgZGVhdGhzIG9mIGEgZmV3IHN0cmVldHdvcmtlcnMsIHByb3N0aXR1dGVzIGFuZCBmYWxsZW4gd29tZW4uIFdoZW4gdGhlIHBvbGljZSBzdGFydCBsb29raW5nIGZvciBhIHRhbGwgbWFuIHNlZW4gbGVhdmluZyB0aGUgc2NlbmUgb2YgdGhlIGNyaW1lcywgaGUgcmVndWxhcmx5IHVzZXMgaGlzIHBvdGlvbiB0byB0dXJuIGludG8gYSB3b21hbiBoZSBjbGFpbXMgaXMgaGlzIHdpZG93ZWQgc2lzdGVyLCBNcnMgSHlkZSAoYWZ0ZXIgc2VlaW5nICdIeWRlIFBhcmsnIGluIGEgbmV3c3BhcGVyIGhlYWRsaW5lKSBpbiBvcmRlciB0byBlc2NhcGUgdGhlaXIgZGV0ZWN0aW9uIGFuZCBnZXQgY2xvc2UgdG8gaGlzIHZpY3RpbXMuIFdoZW4gSG93YXJkIG1lZXRzIGhlciwgaGUgZmluZHMgaGVyIHJhdmlzaGluZ2x5IGF0dHJhY3RpdmUuCkZvciBleGFtcGxlLCB5b3UgbWlnaHQgYmVnaW4gYnkgc2hvd2luZyBhIHN0dWRlbnQgdGhhdCAyeDM9NiBidXQgdGhlbiBzaG93IHRoZW0gZXhhY3RseSBob3cgeW91IGNhbWUgdG8gdGhhdCBjb25jbHVzaW9uLiBZb3UgY2FuIGV4cGxhaW4gdGhhdCB0aGlzIHByb2JsZW0gaXMgYWN0dWFsbHkgYXNraW5nIHlvdSB0byBhZGQgdXAgMisyKzIuIEFzayB0aGVtIHRvIGFkZCB0aG9zZSBudW1iZXJzIHVwIHNvIHRoYXQgdGhleSBjYW4gc2VlIHRoYXQgbXVsdGlwbGljYXRpb24gaXMganVzdCBhIHNob3J0ZXIgd2F5IG9mIGFza2luZyB5b3UgdG8gYWRkIG9uZSBudW1iZXIgYSBjZXJ0YWluIG51bWJlciBvZiB0aW1lcy4KSGUgZGllZCBpbiAyMDE3LCBqdXN0IGJlZm9yZSBDaHJpc3RtYXMuIEFmdGVyIG5vdCBoYXZpbmcgZWF0ZW4gZW50aXJlbHkgcHJvcGVybHkgZm9yIGEgbG9uZyB0aW1lIChhcyBlbGRlcmx5IHBlb3BsZSBvZnRlbiBkbywgc2FkbHksIGRlc3BpdGUgaGF2aW5nIGhvbWUgY2FyZSkgbXkgZ3JhbmRwYSBhbmQgZ3JhbmRtYSBkZWNpZGVkIHRvIGhhdmUgc29tZSBkcmlua3MuIApTbyBpIHdvcmsgaW4gYSBtZW50YWwgaGVhbHRoIHR5cGUgb2YgaG9zcGl0YWwvcHJpc29uIGFuZCBzb21lIG9mIHRoZSBwZW9wbGUgdGhlcmUgaGF2ZSBzdHJhbmdlIHBvb3AgaXNzdWVzIGFuZCBhIGxvdCBvZiB0aGUgdGltZXMgaXRzIHJlbGF0ZWQgdG8gdHJhdW1hICh1c3VhbGx5IHNleHVhbCBhYnVzZSkgd2hlcmUgcG9vcCB3YXMgaW50cm9kdWNlZC4gQmUgc2Vuc2l0aXZlIGFib3V0IHRoaXMgT1AsIHRoZXJlcyBwcm9iYWJseSBhIGRlZXBlciByZWFzb25pbmcgZm9yIHRoaXMgZmVhciBvZiBnZXR0aW5nIHBvb3Agb24gaGVyLiAKSmFuZGEgd2FzIGluaXRpYWxseSB0cmFpbmVkIGFzIGEgbmV1cm9sb2dpc3Qgd2hvIGxhdGVyIHNwZWNpYWxpemVkIGluIG1hbnVhbCBtZWRpY2luZSAoTXVzY2xlIGFuZCBKb2ludCBNYW5pcHVsYXRpb24pIGFuZCByZWhhYmlsaXRhdGlvbjsgaGUgd2FzIHVuaXF1ZWx5IHF1YWxpZmllZCB0byBleHBsYWluIHRoZSBjb21wbGV4IG5hdHVyZSBvZiBjaHJvbmljIHBhaW4gc3luZHJvbWVzIGluIGEgbWFubmVyIHRoYXQgaW50ZWdyYXRlZCBuZXVyb2xvZ2ljYWxseSBiYXNlZCBwcmluY2lwbGVzIHdpdGggbWFudWFsIHRlY2huaXF1ZXMuIEhpcyBib29rcyBoYXZlIGJlZW4gdHJhbnNsYXRlZCBpbnRvIGZvdXIgbGFuZ3VhZ2VzIGluIG51bWVyb3VzIGVkaXRpb25zLiAKQWxzbyBjb2luY2lkZW50YWxseSwgbmVpdGhlciBDQVNPIG5vciBDaGlsdG9uIHBvbGljZSBkZXBhcnRtZW50cyBoYXZlIEFOWSByZWNvcmQgb2YgbXkgYnJvdGhlciBkZWF0aCBpbnZlc3RpZ2F0aW9uIGluIDE5NjcuIFRoZSBsb2NhbCBuZXdzcGFwZXJzIGNsYWltIGJvdGggd2VyZSBkb2luZyB0aGVpciBvd24gaW52ZXN0aWdhdGlvbiBhdCB0aGUgdGltZS4KT24gZWFydGgsIHZlcnkgc2xvdyBtb3Zpbmcgb2JqZWN0cyBiZWNvbWUgc3RhdGlvbmFyeSB2ZXJ5IHF1aWNrbHkgYmVjYXVzZSBvZiBmcmljdGlvbiB3aXRoIHRoZSBncm91bmQvIGFpciByZXNpc3RhbmNlLiBJbiBzcGFjZSBob3dldmVyLCBpZiB5b3UgZ29pbmcganVzdCAwLjAxIGttL2ggKDAuMDA2IG1waCkgaW4gdGhlIHdyb25nIGRpcmVjdGlvbiwgaXQgd291bGQgbWVhbiB0aGF0IGV2ZXJ5IDQgc2Vjb25kcywgeW91IG1vdmUgMWNtICgwLjAzMiBmZWV0KSBpbiBhIGRpcmVjdGlvbiB0aGF0IHlvdSBkb24gd2FudCB0byBiZSBtb3ZpbmcgaW4sIGFuZCB0aGVyZSBub3RoaW5nIHNsb3dpbmcgeW91IGRvd24uCkd1ZXN0cyBhcmUgZW5jb3VyYWdlZCB0byAidGFrZSB0byB0aGUgNjAwIHllYXIgb2xkIHdhdGVycyIgYW5kIGNvbm5lY3QgYm9keSB3aXRoIHNwaXJpdCBiZWZvcmUgZW5qb3lpbmcgdGhlIHNwYSB3ZWxsIGtub3duIGZvciBpdHMgaW50dWl0aXZlIGhlYWxlcnMgYW5kIGF1dGhlbnRpYyB0cmVhdG1lbnRzLiBUaGUgbmV3IEVzc2Vuc2UgcmVzdGF1cmFudCBmZWF0dXJlcyBoZWFsdGhpZXIgZ291cm1ldCBkaW5pbmcgcHJlcGFyZWQgYnkgYSBMZSBDb3Jkb24gQmxldSB0cmFpbmVkIGNoZWYgd2l0aCB0aGUgaGVscCBvZiBhIFBIRCBudXRyaXRpb25pc3QuIFdpdGggYSBub3VyaXNoZWQgYm9keSwgZ3Vlc3RzIG1heSBwYXJ0YWtlIGluIG1vcmUgdGhhbiAzNSB3ZWxsbmVzcyBhY3Rpdml0aWVzLCBzdWNoIGFzIG1lZGl0YXRpb24sIGFydCBjbGFzc2VzLCB0YWkgY2hpLCBxaWdvbmcgYW5kIHlvZ2EgaW4gdGhlIGJlYXV0aWZ1bCBuZXcgZG9tZS4uIApSZWFkIHRocm91Z2ggdGhlIHdob2xlIGJvb2sgYmVmb3JlIHlvdSBnZXQgaW4gdG9vIGRlZXAuIHRoZXJlIGFyZSBsb3RzIG9mIGRldGFpbHMgc3ByZWFkIHRocm91Z2ggdGhlIHdob2xlIHRoaW5nIHRoYXQgbGluayBwbGFjZXMgYW5kIHBlb3BsZSBhbmQgaWRlYXMgdG9nZXRoZXIgYW5kIGhlbHBzIHlvdSBmbGVzaCBvdXQgdGhlIHdvcmxkLiBhbHNvIGRvbid0IGV4cGVjdCBpdCB0byBiZSBsaW5lYXIgIHJhdmVubG9mdCBpcyBhIHZlcnkgb3BlbiB3b3JsZCBzZXR0aW5nLCBzbyBiZSBwcmVwYXJlZCBmb3IgYW55dGhpbmcgYW5kIGdpdmUgeW91ciBwbGF5ZXJzIG9wdGlvbnMuIHlvdSBtaWdodCB3YW5uYSByaWcgdGhlIGNhcmQgcmVhZGluZyB0byBnaXZlIHlvdXIgaGVscCBvdXQgeW91ciBwbGF5ZXJzIGEgYml0ICBpIGRvbid0IGxpa2UgaGF2aW5nIGFueSBvZiB0aGUgaXRlbXMgaW50byB0aGUgY2FzdGxlIHBlcnNvbmFsbHksIGFuZCBzb21lIGFsbGllcyBhcmUgYmV0dGVyIHRoYW4gb3RoZXJzLiBkb24ndCBiZSBhZnJhaWQgdG8gb21pdCBvcHRpb25zIG9yIGRldGFpbHMgeW91IGRvbid0IGxpa2UsIG9yIHRvIGluY2x1ZGUvdHdlYWsgdGhlIG9uZXMgeW91IGRvISBjYXRlciB0byB0aGUgcHJlZmVyZW5jZXMgb2YgeW91IGFuZCB5b3VyIHBsYXllcnMsIG1ha2UgaXQgZnVuISB0aGF0J3MgdGhlIHB1cnBvc2Ugb2YgdGhlIGdhbWUgOikKU28sIHRoZSBwcm9iYWJpbGl0eSBpcyA4LzUyID0gLjE1Mzg0Ni4gClRoZXJlIGFyZSBvdGhlciBwcmVzZXJ2YXRpb24gdGFjdGljcyBvdXQgdGhlcmUgdGhvdWdoOyB0aGUgU3VtbWVyIElzbGFuZGVycyBwdXQgTWFlc3RlciBBZW1vbiBpbiBhIGNhc2sgb2YgcnVtIHRvIHByZXNlcnZlIGhpbSB1bnRpbCBoZSBjYW4gcmVhY2ggT2xkdG93biB0byBiZSBidXJuZWQgaW4gVGFyZ2FyeWVuIHRyYWRpdGlvbi5UaGUgbWFqb3JpdHkgb2YgU3RhcmtzIGluIHRoZSBjcnlwdHMgbGlrZWx5IGRpZWQgYXQgV2ludGVyZmVsbCwgc2luY2UgdGhleSBhcmUgYWxsIExvcmRzLyBLaW5ncyBwcmlvciB0byBOZWQgaW5jbHVkaW5nIGhpcyBzaWJsaW5ncy4gU28gc29tZSBtYXkgYmUgc2tlbGV0b25zIGFuZCBvdGhlcnMgbWF5IGJlIHByZXNlcnZlZCBjb3Jwc2VzIGJ1dCB3ZSBkb24gcmVhbGx5IGtub3cgZm9yIHN1cmUuU2lyZW5PZlNjaWVuY2VBS0EgaXQgY2FsbGVkIHdoaXNrZXkgNjAgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1NoZSB3YXMgc28gaGFyZCBvbiB0aGUgc2VyaWVzIGluIHRoZSBwYXN0IGJ1dCByZWFsaXplZCBUd2lsaWdodCBpcyBhbm90aGVyIGV4YW1wbGUgb2YgaG93IHNvY2lldHkgaGF0ZSBvbiB0ZWVuYWdlIGdpcmxzIGFuZCBtb2NrIHRoaW5ncyB0aGF0IHRoZXkgbGlrZSBkZXNwaXRlIHRlZW5hZ2UgYm95cyBsaWtpbmcganVzdCBhcyBzaWxseSBvciBzdHVwaWQgZnJhbmNoaXNlcy4gCkJhYXpvdidzIGxhd3llciwgU29waGllIE1lbGNoZXJzLCBoYXMgc2FpZCB0aGF0IDE2IG1pbGxpb24gZmlsZXMgd2VyZSByZWxlYXNlZCB0byB0aGUgZGVmZW5jZSBpbiBtaWQgU2VwdGVtYmVyIGFuZCB0aGF0IHRoZSBjYXNlIHdvbid0IGJlIGFibGUgdG8gcHJvY2VlZCBpbiBhIHRpbWVseSBmYXNoaW9uLgpJIGFtIGhlYWRlZCB0byBBdXN0aW4gZm9yIDQgZGF5cyBmb3Igd29yay4gSSBoYXZlIDYgaG91cnMgb2Ygd29yayBvbiB0aGUgNHRoIGRheSBhbmQgYW0gZnJlZSB0byBkbyB3aGF0IEkgbGlrZSBmb3IgdGhlIGZpcnN0IDMsIHNvIEkgaGF2ZSBkZWNpZGVkIHRvIHNwZW5kIHRob3NlIGRheXMgcGxheWluZyBwb2tlci4KTWVyY3VyZSBIb3RlbCBXaXR0ZW5iZXJncGxhdHogQmVybGluICAgMTg1IFppbW1lciAgIEVyZmZudW5nIEFuZmFuZyAyMDE1CjUuIEFubnVpdGllcyAgIFRoZXNlIGFyZSBlc3NlbnRpYWxseSBsaWZldGltZSBHSUNzIHdpdGggYSBsb2NrZWQgaW4gcmF0ZSB0aGF0IGJlY29tZXMgYSBtb250aGx5IHNvdXJjZSBvZiBjYXNoIGZsb3cuIFRoZXkgaGF2ZSBiZWVuIGxlc3MgcG9wdWxhciBkdWUgdG8gbG93IGludGVyZXN0IHJhdGVzLCBidXQgZm9yIHRob3NlIHdobyBib3VnaHQgQW5udWl0aWVzIHRoaXJ0eSB5ZWFycyBhZ28gYW5kIGFyZSBzdGlsbCBhbGl2ZSwgdGhleSB3aWxsIGRlZmluaXRlbHkgc2luZyB0aGVpciBwcmFpc2VzIGFzIGFuIG9wdGlvbiBmb3IgcmV0aXJlbWVudCBpbmNvbWUuCjIuNCBUaGUgQ29udGVudCBvZiB0aGUgU2VydmljZXMgaXMgb3duZWQgb3IgbGljZW5zZWQgdG8gQkcuIApXaGVuIEkgc2F5IEkgd291bGQgaGF2ZSBnb25lIG51Y2xlYXIsIGxldCBtZSBleHBsYWluIHdoYXQgMTZ5byBtZSB3b3VsZCBoYXZlIGRvbmUgaW4gdGhpcyBzY2VuYXJpby4gSSB3b3VsZCBoYXZlIGxvb2tlZCB1cCB3aGV0aGVyIGkgY291bGQgb3ZlcnJpZGUgdGhlIGN1c3RvZHkgYXJyYW5nZW1lbnQgZ2l2ZW4gbXkgYWdlLiBVcG9uIGZpbmRpbmcgb3V0IHRoYXQgdGhlIGFuc3dlciBpcyB5ZXMgdmlydHVhbGx5IGV2ZXJ5d2hlcmUsIEkgd291bGQgaGF2ZSBnb25lIHRvIG15IGRhZCwgYW5kIGFza2VkIGhpbSB0byBjYWxsIGEgbGF3eWVyLiAKSmFtZXMgYW5kIGhpcyBjbG9zZXN0IGZyaWVuZHMgaWRvbGl6ZWQgTWljaGFlbCBKb3JkYW4gd2hpbGUgdGhleSBncmV3IHVwIHRvZ2V0aGVyIG9uIEFrcm9uJ3MgY29tcGV0aXRpdmUgcGxheWdyb3VuZHMgYW5kIHRvdWdoIHN0cmVldHMuIEFzIEphbWVzIGdyZXcgaW50byBhIHRhbnRhbGl6aW5nIGJhc2tldGJhbGwgcHJvc3BlY3QgY2FwYWJsZSBvZiBqdW1waW5nIGZyb20gaGlnaCBzY2hvb2wgdG8gdGhlIE5CQSBhcyB0aGUgTm8uIDEgZHJhZnQgcGljaywgaGUgc3R1ZGllZCwgaW1pdGF0ZWQgYW5kIGRyZXcgcHJvZm91bmQgaW5zcGlyYXRpb24gZnJvbSBKb3JkYW4ncyB0b25ndWUgd2FnZ2luZyBkdW5rcywgdGhhdCBmYWRlYXdheSBqdW1wZXIsIGhpcyBjb21wZXRpdGl2ZSBmaXJlICAgZXZlbiB0aGUgbGl0dGxlIGRldGFpbHMgb2YgdGhlIHdheSBKb3JkYW4gd29yZSBoaXMgc25lYWtlcnMgYW5kIHNob3J0cy4KVGhlaXIgaG91c2UgcGx1cyBsb2NhbCByZWFsIGVzdGF0ZSBpbnZlc3RtZW50cyBpbiB0aGVpciBSUlNQcyBhbmQgVEZTQSBwb3J0Zm9saW9zIGFtb3VudCB0byA3MCBwZXIgY2VudCBvZiB0aGVpciBhc3NldHMuIApZb3Ugd2lsbCBuZWVkIHRvIGJvb2sgb25lIG9mIHRoZXNlIGluIGFkdmFuY2UsIGJ1dCBldmVuIGlmIHlvdSBkbyB5b3UgbWF5IG5vdCBlbmQgbm90ZWQgaW4gcGFzc2VuZ2VycyBvbiBsb25nIGNhciBvciBidXMgdHJpcHMgYXMgd2VsbC4gVGhlIGNvdW50cnkncyBiaWdnZXN0IHJpdmVyLCB0aGUgUG8sIGN1dHMgaG9yaXpvbnRhbGx5IHRoZSB0ZXJyaXRvcnksIGlzIG11Y2ggbW9yZSBjb3N0IGVmZmVjdGl2ZSB0aGFuIHlvdSBtaWdodCB0aGluay4gRXZlcnkgdGltZSB5b3UgZmFsbCBhc2xlZXAgeW91ciBjb25zY2lvdXNuZXNzIHR1cm5zIGF3YXkgZnJvbSBkYXkgb2YgcGVhY2VmdWwgcmVsYXhhdGlvbiwgYW5kIGEgbmlnaHQgb2YgcGFydGllcyBhbmQgZnVuLiAKVG8gcG9rZXIgZmFucywgb3IgdG8gdGhvc2Ugd2hvIHJlbWVtYmVyIHRoZSBtb3ZpZSBSb3VuZGVycywgSSB3YXMgYSAiZ3JpbmRlci4iIEEgZ3JpbmRlciBpcyByaXNrIGF2ZXJzZSBhbmQgZ2VuZXJhbGx5IHdhaXRzIGZvciBzdHJvbmcgY2FyZHMsIHJlbHlpbmcgb24gaGlzIG9wcG9uZW50cyB0byBtYWtlIHRoYXQgYXNzdW1wdGlvbi4gCk5QYXJhZGlzZSBwb2tlciBpcyB0aGUgbW9zdCBwb3B1bGFyIGJ1dCBJIHByZWZlciBFU1BOIFBva2VyIENsdWIgYmVjYXVzZSBpdCBpcyB0aGUgbW9zdCBzdHJhaWdodCBmb3J3YXJkIGFuZCBpcyBlYXN5IHRvIHBsYXkuIFRvIHJlZ2lzdGVyIG1ha2UgYW4gRVNQTiBhY2NvdW50IHRoYW4gZ28gdG8gdGhlIGhvbWVwYWdlIGZvciBFU1BOIFBva2VyIENsdWIuIApUaGlzIGlzIGEgc3RvcnkgYnkgSGVucnkgSGFzc2UgYW5kIGl0IGludm9sdmVzIGEgZ3JlYXQgc2NpZW50aXN0IGFuZCB0aGUgaGlzIGVsaXhpciBjYWxsZWQgIlNocmlueCIgd2hpY2ggYWZ0ZXIgaXQgaGFzIGJlZW4gaW5qZWN0ZWQgaW50byBoaXMgYXNzaXN0YW50IHNocmlua3MgdGhlIG1hbiBpbW1lYXN1cmFibHksIHNvIHNjaWVuY2UgZmljdGlvbmFsbHkgc21hbGwsIHRoYXQgaGUgaGFzIHBhc3NlZCB0aHJvdWdoIHRoZSBtaWNyb3Njb21vcyBhbmQgInN1YnVuaXZlcnNlcyIgdG8gdGhlIHBvaW50IHdoZXJlIGhlIGVtZXJnZXMgb24gYSBwcmltaXRpdmUgcGxhY2UgY2FsbGVkIEVhcnRoLiBUaGUgYXNzaXN0YW50IGhhcyB0cmF2ZWxlZCBmcm9tIGEgcGxhbmV0IGluIGEgc29sYXIgc3lzdGVtIHJldm9sdmluZyBhcm91bmQgYSBzdW4gaW4gYSBzb2xhciBzeXN0ZW0gaW4gYSBnYWxheHkgaW4gYSB1bml2ZXJzZSB0byBzb21ldGhpbmcgc21hbGwsIHNvbWV0aGluZyBzdWIgYXRvbWljLCBsYW5kaW5nIGluIGFuIGVsZWN0cm9uIGhvbGRpbmcgd2l0aGluIGl0IGl0cyBvd24gdW5pdmVyc2UuIFNtYWxsLiAKR3V5IGF0IHdvcmsgc2FpZCBoZSBkaWQgYSBnb29kIGpvYiBhbmQgSSByYWlzZWQgbXkgZXllYnJvdywgYnV0IEkgZ3Vlc3Mgd2UgZWFjaCBoYXZlIG91ciBvd24gdGFzdGVzLiAKSW0gWmltbWVyIGhhdCBlcyBnZWZobHRlIDcwIEdyYWQgdW5kIGljaCBrb21tZSBrYXVtIG5hY2ggbWlyIGRlbiBTY2h3ZWkgdm9uIGRlciBTdGlybiB6dSB3aXNjaGVuLiAKQnV0IGV2ZXJ5IG9uY2UgaW4gYSB3aGlsZSwgSSBjYXRjaCBoaW0gaW4gYSBsaWUgICB0d2ljZSBhYm91dCB0aGUgcG9rZXIgYW5kIG9uY2UgYWJvdXQgaGltIGhhbmdpbmcgb3V0IHdpdGggaGlzIHdvbWFuaXppbmcgZnJpZW5kICAgYW5kIGVhY2ggdGltZSwgSSBnZXQgU1VQRVIgdXBzZXQsIGJ1dCBJIGRvbid0IGtub3cgaWYgSSBhbSBvdmVycmVhY3RpbmcgYmVjYXVzZSBvZiBoaXMgaGlzdG9yeSBvZiBseWluZyBhbmQgYWxzbyBiZWNhdXNlIEkgdGhpbmsgaG9uZXN0eSBpcyBSRUFMTFkgaW1wb3J0YW50IGFuZCBJIGtub3cgdGhhdCBub3QgZXZlcnlvbmUgZmVlbHMgdGhhdCB3YXkuIERIIGxpZXMgYmVjYXVzZSBoZSBoYXRlcyBjb25mbGljdCBoZSB3b3VsZCByYXRoZXIgdHJ5IHRvIGdldCBhd2F5IHdpdGggc29tZXRoaW5nIHRoYW4gdHJ5IHRvIHRhbGsgdGhpbmdzIHRocm91Z2ggd2l0aCBtZSAoaGUgaGF0ZXMgdGhlc2UgY29udmVyc2F0aW9ucykuIApPdXIgZGlzdHJpY3QgaGFzIGEgbG90IG9mIG5laWdoYm9yaG9vZCBnYW5nIGFjdGl2aXR5IGFuZCBkcnVnIHVzZSwgd2hpY2ggZnJlcXVlbnRseSBkaXN0cmFjdHMgc3R1ZGVudHMuIApBcyBhbiBhbmVkb3RlLiBXaGVuIEkgZ290IG15IFM1LCBpdCB3YXMgc2Vjb25kZWQgaGFuZCAodGhlIFM3IHdhcyBhbHJlYWR5IGFubm91bmNlZCksIGFuZCBiZWNhdXNlIG15IE1vdG8gRyB3YXMgZ2V0dGluZyBmaXhlZC4gSSBuZXZlciBpbnRlbmRlZCB0byBtb2Qgb3IgY2hhbmdlIHRoZSBPUywgZGlkbiB3YW50IHRvLiAKVXNlcyB0ZXJtcyBsaWtlICJhbHBoYSIgYW5kICJiZXRhIiBpbiBkZXNjcmliaW5nIGh1bWFuIHJlbGF0aW9uc2hpcHMuIApTbyBoZXJlIDQgZ3Jvd24gYWR1bHRzIHByb25lIG9uIHRoZSBncmFzcyBpbiBvdXIgdHJhaWxlciBwYXJrIFdpdGggbWF5YmUgMTUwIGRhcnRzIHRvIGV2ZXJ5b25lIG5hbWUuIEl0IHdhcyBhIGdvb2QgZGF5LiBIb3dldmVyIHdlIGRpZCBnZXQgYSBmZXcgc2lkZSBleWVzIGZyb20gbmVpZ2hib3JzIGFzIHdlIGJvbHRlZCBvdXQgdGhlIGhvdXNlIHdpdGggYSBwb3VjaCBvZiBkYXJ0cyBhbmQgYSBzbmlwZXIuLiAKRnJvbSBhIFBJTyBwZXJzcGVjdGl2ZSwgT09QIHNob3VsZCBiZSBjaGVja2luZyBoaXMgd2hvbGUgcmFuZ2Ugb24gdGhpcyBmbG9wLiBJUCB3aWxsIG1peCB3aXRoIEpUc3MgYnV0IHByb2JhYmx5IHByZWZlcnJpbmcgdG8gZ2V0IHdpdGggQmRGZC4gWW91ciBzaXppbmcgaXMgc2xpZ2h0bHkgc21hbGwgZm9yIHRoaXMgdGV4dHVyZSwgaGFsZiBwb3Qgd291bGQgYmUgYmV0dGVyIGJ1dCBpc24ndCBnb2luZyB0byBjaGFuZ2UgdGhlIEVWIHRoYXQgbXVjaC4gCkpvaG4gSGVzcCwgNjQsIHdpbGwgdGFrZSBob21lIG92ZXIgJDhtICg2LjFtKSBpZiBoZSB3aW5zIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIncyAoV1NPUCkgbWFpbiBldmVudCBpbiBMYXMgVmVnYXMuCkJ1dCBpdCB1cCB0byB5b3UgdG8gZmluZCBzdWJzdGl0dXRlcyBmb3IgdGhvc2UgY2xhc3NlcyBmb3IgMyB3ZWVrcy4gCkknbSBhbG1vc3QgZG9uZTsgdGhlcmUgYXJlIGF0IGxlYXN0IHR3byBvdGhlciBwZW9wbGUgaW4gdGhlIHB1YmxpYyByZXN0cm9vbSwgYW5kIGhlcmUncyBteSB0d28geWVhciBvbGQsICJBcmUgeW91IHBvb3BpbicgbWFtYT8gQXJlIHlvdSBwb29waW4nPyIgQW5kIEkgaGF2ZSB0byBhbnN3ZXIgaGltIG9yIGhlJ2xsIHRoaW5rIEkgaGF2ZW4ndCBoZWFyZCBoaW0gYW5kIGhlIGFzayBhZ2Fpbi4gClN0dWR5aW5nIG9wZW5pbmcgdGhlb3J5IGFsbG93cyB5b3UgdG8gc2F2ZSB0aW1lIGluIHRoZSBlYXJseSBnYW1lLiBZb3UgbGVhcm4gYWJvdXQgbW92ZSBvcmRlcnMgdGhhdCAic291bmQgZ29vZCIuIEluIGNoZXNzLCB3ZSB0YWxrIGFib3V0IGRldmVsb3BtZW50IGFuZCBzdHJhdGVnaWMgaWRlYXMuIFdlIHRhbGsgYWJvdXQgY29uY2VwdHMgbGlrZSBmb3JjZSwgdGltZSwgYW5kIHNwYWNlLiBPcGVuaW5ncyBhcmUgcGFydGljdWxhciBtb3ZlIG9yZGVycyBpbiBzdXBwb3J0IG9mIHNvbWUgY29uY3JldGUgaWRlYS4gU29tZSBvcGVuaW5ncyBzZWVrIHRvIGZpZ2h0IGZvciBhIHBhcnRpY3VsYXIgc3F1YXJlIGluIHRoZSBjZW50ZXI7IHNvbWUgc2VlayB0byBkZW55IHlvdXIgb3Bwb25lbnQgYSBwYXJ0aWN1bGFyIHNxdWFyZSBpbiB0aGUgY2VudGVyOyBzb21lIHNhY3JpZmljZSBwaWVjZXMgaW4gZmF2b3Igb2YgZGV2ZWxvcGluZyBmYXN0ZXIgdGhhbiB5b3VyIG9wcG9uZW50OyBzb21lIG9wZW5pbmdzIGFyZSBtb3JlIGxpa2VseSB0byBwcm9kdWNlIG9wZW4gcG9zaXRpb25zOyBvdGhlcnMgbW9yZSBsaWtlbHkgdG8gcHJvZHVjZSBjbG9zZWQgcG9zaXRpb25zOyBzb21lIG9wZW5pbmdzIHNlZWsgdG8gZGV2ZWxvcCB5b3VyIHBpZWNlcyBpbiBhIHBhcnRpY3VsYXIgbWFubmVyIHRvIGRlbnkgeW91ciBvcHBvbmVudCBmcm9tIHBsYXlpbmcgYSBzcGVjaWZpYyBvcGVuaW5nLCB3aGljaCBoYXBwZW5zIHRvIGJlIGhpcyBzcGVjaWFsdHkuCkFsbCB0aGF0IGlzIHRvIHNheSBkZXRlcm1pbmluZyBnYXNvbGluZSBwcmljZXMgaXMgY29tcGxpY2F0ZWQsIGFuZCB0aGUgcmVzdWx0IGlzIHRoYXQgZnJvbSBzdGF0ZSB0byBzdGF0ZSBhbmQgZXZlbiBjb3JuZXIgdG8gY29ybmVyLCB0aGUgcHJpY2UgdmFyaWVzICAgZ3JlYXRseS4uIApBbnl3YXksIGdyZWF0IGpvYiBEYWQgYW5kIE1vbSEgSXQgc291bmRzIGxpa2UgeW91IGRvbid0IHNvIG11Y2ggaG92ZXIgYXMgb2JzZXJ2ZSBhbmQgdGFrZSB0YXJnZXRlZCBhY3Rpb24uIFN0dWJib3JuIHNjaG9vbCBhZG1pbmlzdHJhdG9ycyBraW5kIG9mIGhhdGUgdGhpcyBiZWNhdXNlIGl0IHRlbmRzIHRvIGJlIG1vcmUgZWZmZWN0aXZlIGF0IGZvcmNpbmcgdGhlaXIgaGFuZC4gSU1PIHlvdSBkb24ndCBuZWVkIHRvIGRvdWJ0IHlvdXJzZWxmIHNvIG11Y2ggaW4gdGhpcyByZWdhcmQuIFlvdSdyZSByaWdodCBhbmQgcmVhc29uYWJsZS4KVGhleSBsb29rIGxpa2Ugb3Zlcmdyb3duIHJhdHMgd2l0aCBidWxnaW5nIGV5ZXMuIEhpZGVvdXMuIEkgdXNlZCB0byBiZSBvcGVuIG1pbmRlZCwgSSBkaWRuJ3Qgd2FudCB0byB3cml0ZSBvZmYgYSB3aG9sZSBicmVlZCAgIGJ1dCB3aGF0IGFyZSB0aGUgb2RkcyB0aGF0IEkndmUgZW5jb3VudGVyZWQgc28gbWFueSBvZiB0aGVzZSByYXRzIChzaW5jZSB0aGV5IHNlZW0gdG8gYmUgb2RkbHkgcG9wdWxhcikgYW5kIG5vdCBvbmUgaGFkIGEgbm9ybWFsLCBwbGVhc2FudCB0ZW1wZXJhbWVudC4gClRoZXJlIGlzIG5vICdjYXAnIG9uIHRoZSBudW1iZXIgb2YgcmFpc2VzIGFsbG93ZWQuIE1peGVkIEhvbGRlbSBUaGUgZ2FtZSBzd2l0Y2hlcyBiZXR3ZWVuIHJvdW5kcyBvZiBMaW1pdCBIb2xkZW0gYW5kIE5vIExpbWl0IEhvbGRlbS4gClRoZSBib29rcyBmcm9tIGJlZm9yZSBzaG91bGQgc3RpbGwgYmUgYWJsZSB0byB0ZWFjaCBhIGJlZ2lubmVyIHRoZSB2ZXJ5IGJhc2ljcywgYnV0IEkgd291bGQgc3VnZ2VzdCBsb29raW5nIHVwIGFueSByYW5kb20gWW91VHViZSB2aWRlbyBpbnN0ZWFkLiAKRmFjdCBOdW1iZXIgNDogVGhlIGFuaW1hbHMgZGVwaWN0ZWQgb24gdGhlIEF1c3RyYWxpYW4gQ29hdCBPZiBBcm1zLCB0aGUga2FuZ2Fyb28gYW5kIGVtdSwgd2VyZSBzZWxlY3RlZCBhcyBpdCBpcyBwaHlzaWNhbGx5IGltcG9zc2libGUgZm9yIHRoZW0gdG8gdGFrZSBhIGJhY2t3YXJkcyBzdGVwLgpJIHRob3VnaHQgaXQgd291bGQgYmUgbW9yZSBsaWtlIGEgbWFzc2FnZSAgIGl0J3Mgbm90IGxpa2UgdGhhdCBhdCBhbGwuIApJIHN1Z2dlc3QgTGV4IFZlbGRodWlzLCB0b25rYWFhYXAsIEtldmluIE1hcnRpbiwgYW5kIEphaW1lIFN0YXBsZXMuIFRoZSBza2lsbCBlZGdlIGJldHdlZW4gd2hhdCB5b3Ugc2VlIHRoZW0gZG8gYW5kIHdoYXQgaGFwcGVucyBpbiB0aGUgdG91cm5hbWVudHMgdGhleSBwbGF5IGlzIGxpZ2h0IHllYXJzIGFwYXJ0IGZyb20gd2hhdCB5b3UgcmVndWxhcmx5IHNlZSBpbiB5b3VyIHB1YiB0b3VybmFtZW50cywgZXZlbiBpZiBzb21ldGltZXMgdGhlIGJ1eSBpbnMgYXJlIHNtYWxsZXIsIHNvIGRvbiB0cnkgdG8gZW11bGF0ZSB0aGVtIGFueXRpbWUgc29vbiwgYnV0IHlvdSBnbGVhbiBzb21lIHZlcnkgdXNlZnVsIGZ1bmRhbWVudGFscyBieSB3YXRjaGluZyB0aGVtLiAKTkZMIFBsYXllcnMgQXNzb2NpYXRpb24gc2FpZCB0aGUgYXJyYW5nZW1lbnQgYmV0d2VlbiB0aGUgUGF0cmlvdHMgYW5kIEJyYWR5IGNlbnRlciBubyBpbXBsaWNhdGlvbiBvbiB0aGUgc2FsYXJ5IGNhcC4gClNoZSdzIG5vdCBiYWQgbG9va2luZywgZWl0aGVyLiAKTW9yZSBhZHZlbnR1cm91cyBjb3VwbGVzIGNhbiBjaGVjayBvdXQgSGlnaGxhbmRzIEFlcmlhbCBQYXJrLCBhIG5ldyB6aXBsaW5lIGF0dHJhY3Rpb24gd2hlcmUgeW91IGNhbiBmbHkgODAgZmVldCBhYm92ZSB0aGUgZ3JvdW5kIHBhc3QgdG93ZXJpbmcgb2FrIHRyZWVzIGFuZCBvdmVyIGRlZXAgcmF2aW5lcyBhbmQgZ29yZ2VzLiBJZiB5b3UgY3JhdmUgYSBsaXR0bGUgaW5kdWxnZW50IHBhbXBlcmluZywgdGhlIGlubidzIGx1eHVyaW91cyBzcGEgaGFzIHNldmVyYWwgY291cGxlcyBwYWNrYWdlcyBhdmFpbGFibGUsIHN1Y2ggYXMgUmFpbmZvcmVzdCBSZWp1dmVuYXRpb24sIHdoaWNoIGluY2x1ZGVzIGEgc3RlYW0gY2hhbWJlciwgYXJvbWF0aWMgYm9keSB3YXNoLCBjbGVhbnNpbmcgc2NydWJzLCBkZXRveGlmeWluZyBtdWQgYW5kIHB1bHNlIHBvaW50IHdhdGVyIG1hc3NhZ2UuIEFmdGVyd2FyZHMsIHJlbGF4IGJ5IHRoZSBmaXJlIGluIHRoZSBzcGEncyBsb3VuZ2UsIGx1eHVyaWF0ZSB1bmRlciBhIDEyIGhlYWQgU3dpc3Mgc2hvd2VyIG9yIHRha2UgYSBkaXAgaW4gdGhlIG91dGRvb3IgaGVhdGVkIG1pbmVyYWwgcG9vbC4gClRoaXMgY29tbXVuaXR5IGlzIGEgaHVnZSBwYXJ0IG9mIHRoZSByZWFzb24gV2VuZHkgdGhpbmtzIHRoaW5ncyBoYXZlIGdvdHRlbiBiZXR0ZXIgZm9yIHRyYW5zIHBlb3BsZSwgYW5kIGl0IHdoeSBzaGUgaXMgYXQgZmlyc3Qgc3VycHJpc2VkLCB0aGVuIGFuZ3J5LCB0aGF0IGhlciBmcmllbmQgd291bGQga2lsbCBoZXJzZWxmIHRoZXkgaGFkIHN1cHBvcnQgdGhhdCBkaWRuIGV4aXN0IHdoZW4gc2hlIGZpcnN0IHRyYW5zaXRpb25lZC4gU2hlIHNwZWFrcyBzZXZlcmFsIHRpbWVzIHdpdGggQW5uYSwgYSBmcmllbmQgd2hvIGtuZXcgaGVyIE9wYSBzZWNyZXQuIApTaW5jZSB5b3UgcHJvYmFibHkgd29uIGJlIGFibGUgdG8gcmVzZXJ2ZSB5b3VyIHRpY2tldHMgb25saW5lIHByaW9yIHRvIHRoZSBzaG93aW5nLCBJIHdvdWxkbiBnZXQgbXkgaG9wZXMgdXAgb2Ygc2VlaW5nIGl0IG9uIHRoZSBiZXN0IHNjcmVlbnMgVEhBVCBkYXkuLiAKWW91IGFyZSBub3QgdGhlIHVnbHkgYmxhY2sgc2hlZXAgdG8gQU5ZT05FIG9yIGluIEFOWSB1bml2ZXJzZS4gWW91IGFyZSBhIGJlYXV0aWZ1bCwgc3Ryb25nIHBlcnNvbiwgd2hvIGhhcyBtYWRlIGEgZ3JlYXQgbGlmZSBmb3IgeW91cnNlbGYgZGVzcGl0ZSB0ZXJyaWJsZSBhZHZlcnNpdHkuIApUZWxscyBtZSB0aGF0IHRoZXJlIGFyZSBhIGJ1bmNoIG9mIGFudGkgYnVsbHlpbmcgcG9zdGVycyBpbiB0aGUgaGFsbHMuIEl0IHRvIHRoZSBwb2ludCB3aGVyZSB5b3UgZG9uIGV2ZW4gc2VlIHRoZW0gYW55bW9yZS4gSGFtYmVyLCBsb2NhdGVkIG9uIHRoZSB3ZXN0IHNpZGUgb2YgVmFuY291dmVyLCBoYXMgYWJvdXQgMSw3MDAgc3R1ZGVudHMuIExhc3QgSnVuZSwgdGhlIHByb3ZpbmNpYWwgZ292ZXJubWVudCBhbm5vdW5jZWQgdGhhdCBiZWNhdXNlIG9mIGVhcnRocXVha2UgY29uY2VybnMsIGl0IHdpbGwgcmVwbGFjZSB0aGUgZXhpc3Rpbmcgc2Nob29sIHdpdGggYSBuZXcgb25lIGF0IGEgY29zdCBvZiAkNzkuMyBtaWxsaW9uIGJ5IDIwMjIuCkFuZCB0aGF0IHdpbGwgZW5kIGNhcGl0YWxpc20gYXMgYSBmdW5jdGlvbmFsIHN5c3RlbS4uIApUaGlzIGFiaWxpdHkgcmVsaWVzIG9uIGZsZXggIGlibGUgY29nbml0aXZlIHN5c3RlbXMgdGhhdCBhZGFwdCBpbiBvcmRlciB0byBlbmNvZGUgdGVtcG9yYXJ5IHByb2dyYW1zIGZvciBwcm9jZXNzaW5nIG5vbiBhdXRvbWF0ZWQgdGFza3MuIFByZXZpb3VzIGZ1bmN0aW9uYWwgaW1hZ2luZyBzdHVkaWVzIGhhdmUgcmV2ZWFsZWQgZGlzdGluY3Qgcm9sZXMgZm9yIHRoZSBsYXRlcmFsIGZyb250YWwgY29ydGljZXMgKExGQ3MpIGFuZCB0aGUgdmVuICB0cmFsIHN0cmlhdHVtIGluIGludGVudGlvbmFsIGxlYXJuaW5nIHByb2Nlc3Nlcy4gSG93ZXZlciwgdGhlIGh1bWFuIExGQ3MgYXJlIGNvbXBsZXg7IHRoZXkgaG91c2UgbXVsdGlwbGUgZGlzICB0aW5jdCBzdWIgcmVnaW9ucywgZWFjaCBvZiB3aGljaCBjbyBhY3RpdmF0ZXMgd2l0aCBhIGRpZmZlcmVudCBmdW5jdGlvbmFsIG5ldHdvcmsuIApUaGlzIGNvbnZlcnNhdGlvbiBpcyBidWlsdCBvbiB5b3VyIGFzc2VydGlvbiB0aGF0IGlmIGEgcGVyc29uIGhhcyB0aGUgY2FwYWNpdHkgdG8gcmVsaWV2ZSBoYXJtIGFuZCBjaG9vc2VzIG5vdCB0bywgdGhlbiB0aGV5IGhhdmUgZG9uZSB0aGUgbW9yYWwgZXF1aXZhbGVudCBvZiBjYXVzaW5nIHRoYXQgaGFybS4gSXQgbG9naWNhbGx5IGZvbGxvd3MgdGhhdCBpZiB0aGUgYWRkaXRpb25hbCByZWxpZWYgYSBwaGlsYW50aHJvcGlzdCBjb3VsZCBwcm92aWRlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgYWRkaXRpb25hbCByZWxpZWYgdGhlIGRlc3Ryb3llciBjb3VsZCBwcm92aWRlIChpbmNsdWRpbmcgdGhlIGxhY2sgb2YgZGVzdHJ1Y3Rpb24pLCB0aGUgcGhpbGFudGhyb3Bpc3QgaGFzIGRvbmUgdGhlIG1vcmFsIGVxdWl2YWxlbnQgb2YgY2F1c2luZyBhIGdyZWF0ZXIgYW1vdW50IG9mIGhhcm0gdGhhbiB0aGUgZGVzdG95ZXIuClNoZSB0ZWFjaGVzLGlzIGFjdGl2ZWx5IGludm9sdmVkIGluIHJlc2VhcmNoLCBhbmQgaGFzIHdyaXR0ZW4gdHdvIHdpZGVseSB1c2VkIHRleHRib29rczogTWFzc2FnZSBUaGVyYXB5OiBQcmluY2lwbGVzIGFuZCBQcmFjdGljZSBhbmQgTW9zYnkgUGF0aG9sb2d5IGZvciBNYXNzYWdlIFRoZXJhcGlzdHMuIApCZXN0IE9ubGluZSBQb2tlciBCb251cyBPZmZlcnMgUHJvbW90aW9ucwpBbHNvLCB0aGVyZSBpcyB2ZWdldGF0aW9uIG9uIE1hcnMgd2hpY2ggaXMgdmVyeSBkaWZmZXJlbnQgZnJvbSB0aGF0IG9mIEVhcnRoLCBhbmQgdGhhdCBpcyB3aGF0IGdpdmVzIHRoZSBwbGFuZXQgaXRzIHJlZCBjb2xvciwgYXMgdGhlIHBsYW50cyBncm93aW5nIHRoZXJlIG11c3QgYmUgcmVkLiB3YXMgYSBsb25nIGRpZ3Jlc3Npb24gdGhlIEVhcnRoIGZyb20gYWZhciBpbWFnZXMgZm9sbG93IHRoZSBmb290bm90ZXMuIEZsYW1tYXJpb24sIFBsYW50ZSBNYXJzIGQnYXBycyBsZXMgZGVybmlyZXMgb2JzZXJ2YXRpb25zIGFzdHJvbm9taXF1ZXMiIGluIExhIE5hdHVyZSAgIFJldnVlIGRlcyBzY2llbmNlcywgbiAxMCwgcGFnZSAxNDUuIF9fX19fLiAiU3VyIGxhIHBsYW5ldGUgTWFycyIsIGluIENvbXB0ZXMgUmVuZHVzLCB2b2wgNzcgbm8gNCwgcC4gMjc4LCBKdWx5IDI4LCAxODczLgpOb3cgaXQgbGl0ZXJhbGx5IGltcG9zc2libGUgdG8gZG8uIApGaW5kIHNvbWV0aGluZyB0aGF0IHlvdSBib3RoIGxpa2UgdGhhdCBpc24gdG9vIGludm9sdmVkIGFuZCBtYWtlIGEgbmlnaHQgb2YgY29va2luZyAob3IgcHJlcGFyaW5nIGlmIHlvdSB3b3JrIGFuZCBuZWVkIG1vcmUgb2YgYSBjcm9jayBvciBpbnN0YXBvdCBvcHRpb24pIGFuZCBlYXRpbmcgd2l0aCBvbmUgYW5vdGhlci4gClNoZSBzYXcgYSBsdW5nIHNwZWNpYWxpc3QgaW5zdGVhZCwgYW5kIGhlIHByZXNjcmliZWQgNDAgbWcgb2YgY29ydGlzb25lIGFuZCBhbiBpbmhhbGVyLiAKT3IgYXJvdW5kIHRoZSBwb2tlciB0YWJsZS4gCkJ1bmtlciBkb3duIGFuZCB3YWl0IGZvciBhIGhhbmQsIHRoZW4gdHJhcCB0aGVtLi4gCkkgZGlkIHRoaW5rIGl0IHdvdWxkIGJlIGNvb2wgYXQgdGhlIGVuZCBvZiB0aGUgeWVhciwgaWYgeW91IGJlYXQgYWxsIDMgc2V0cywgdGhlcmUgd291bGQgYmUgYSBzcGVjaWFsIHJld2FyZC4gCklmIGFueXRoaW5nLCBzZWUgaG93IG11Y2ggb2YgaGlzIHRpbWUgaGUgY291bGQgd29yayByZW1vdGUgYW5kL29yIHRha2Ugb2ZmIGFzIFBUTy91bnBhaWQgdGltZSBvZmYgYW5kIGpvaW4geW91IGluIEphcGFuIGJlZm9yZSBsb29raW5nIGF0IHF1aXR0aW5nIGV2ZXJ5dGhpbmcgdG8gZ28gd29yayBmb3IgUmFrdXRlbi4uIApHYXkgcGVvcGxlIGFyZSAiY3JpbWluYWxzIiBvbiBtb3N0IG9mIHRoZSBwbGFuZXQuIFBlb3BsZSBzbW9raW5nIGEgaGFybWxlc3MgcGxhbnQgYXJlIGluIHRoZSBzYW1lIHBvc2l0aW9uLiBUaGUgZ3V5IGVuam95aW5nIGhpcyByaWdodGZ1bGx5IGVhcm5lZCA2IHBhY2sgYWZ0ZXIgYSBoYXJkIGRheXMgd29yayB3b3VsZCBiZSBhIGNyaW1pbmFsIGp1c3QgYSBmZXcgZGVjYWRlcyBhZ28gaGVyZSBpbiBBbWVyaWNhIGFuZCBzdGlsbCBpcyBpbiBwbGVudHkgb2YgcGxhY2VzLiBUaGUgaWRlYSB0aGF0IHRoZSBsYXcgaXMgc29tZSBraW5kIG9mIG1vcmFsIGd1aWRlbGluZSBpcyBzb21ldGhpbmcgdGhhdCBleGlzdHMgb25seSBpbiB0aGUgbWluZHMgb2YgcG9saXRpY2FsbHkgaWxsaXRlcmF0ZSBwZW9wbGUgd2hvIGRvbiB1bmRlcnN0YW5kIGhvdyBvciB3aHkgbGF3cyBleGlzdCBpbiB0aGUgZmlyc3QgcGxhY2UuIFRocm93aW5nIHlvdXIgYnVzaW5lc3MgcGFydG5lcnMgdW5kZXIgdGhlIGJ1cyBpcyBtb3JlIHVuZXRoaWNhbCB0aGFuIG1vc3QgbGF3cyBvbiB0aGUgYm9va3MsZnJhbmtseS4KQXMgdGhlIGNhcHN1bGUgY2xvc2VkIGluIG9uIHRoZSBzcGFjZSBzdGF0aW9uLCBpdHMgbm9zZSBjYXAgd2FzIHdpZGUgb3BlbiBsaWtlIGEgZHJhZ29uJ3MgbW91dGggdG8gZXhwb3NlIHRoZSBkb2NraW5nIG1lY2hhbmlzbS4gSW4gYSBkb2NraW5nIHdpdGggYSBjcmV3IGFib2FyZCwgdGhlIGNhcHN1bGUgd291bGQgbGlrZXdpc2Ugb3BlcmF0ZSBhdXRvbm9tb3VzbHksIHRob3VnaCB0aGUgYXN0cm9uYXV0cyBtaWdodCBwdXNoIGEgYnV0dG9uIG9yIHR3byBhbmQgd291bGQgYmUgYWJsZSB0byBpbnRlcnZlbmUgaWYgbmVjZXNzYXJ5LiBXaXRoaW4gaG91cnMsIHRoZSBjYXBzdWxlJ3MgaGF0Y2ggc3d1bmcgb3BlbiBhbmQgdGhlIHRocmVlIGFzdHJvbmF1dHMgZmxvYXRlZCBpbnNpZGUgdG8gcmVtb3ZlIHN1cHBsaWVzIGFuZCB0YWtlIGFpciBzYW1wbGVzLCB3ZWFyaW5nIG94eWdlbiBtYXNrcyBhbmQgaG9vZHMgdW50aWwgdGhleSBnb3QgdGhlIGFsbCBjbGVhci4KVGhlIG1haW4gZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gaXMgdGhhdCBCYW9oIGlzIHN0dXBpZCBhbmQgdGVycmlibGUuIFNvIHRlcnJpYmxlLCBpbiBmYWN0LCB0aGF0IGl0IGdvdCBjYW5uZWQgYWZ0ZXIgMiB2b2x1bWVzIGFuZCBzbyB0aGUgNTAgbWludXRlIE9WQSBpcyBhIGNvbXBsZXRlIGFkYXB0YXRpb24gb2YgdGhlIHN0b3J5LiAKSnVzdCBhcyB0aGUgc2NpZW50aWZpYyBjb21tdW5pdHkgd2FzIHJlYWNoaW5nIGEgY29uc2Vuc3VzIG9uIHRoZSBkYW5nZXJvdXMgcmVhbGl0eSBvZiBjbGltYXRlIGNoYW5nZSwgdGhlIHBhcnRpc2FuIGRpdmlkZSBvbiBjbGltYXRlIGNoYW5nZSBiZWdhbiB0byB3aWRlbi4KIlRoZXJlIGFyZSBhIHJhbmdlIG9mIG1lYXN1cmVzIGluIHBsYWNlIGluIFF1ZWVuc2xhbmQgdG8gcHJvbW90ZSByZXNwb25zaWJsZSBnYW1ibGluZyBhbmQgYXNzaXN0IHBlb3BsZSBhZmZlY3RlZCBieSBnYW1ibGluZyBwcm9ibGVtcy4iClR5cGljYWxseSwganVzdCBoYXZpbmcgdGhlIGNvdXJzZSBvbiBteSB3cmlzdCB3aXRoIHR1cm4gYnkgdHVybiBhbGVydHMgb24gaXMgdmVyeSBzYXRpc2ZhY3RvcnkuIApBZnRlciB0aGUgVG9yb250byBXYXRlcmZyb250IE1hcmF0aG9uLCBJIHNodXQgaXQgZG93biBmb3IgYSBmZXcgd2Vla3MgdG8gZ2l2ZSBteXNlbGYgYSBiaXQgb2YgcmVjb3ZlcnksIG9ubHkgcnVubmluZyB0byBoZWxwIG1haW50YWluIG15IGJhc2UgKGFuZCBiZWNhdXNlIEkgbGlrZSBydW5uaW5nIHdheSB0b28gbXVjaCB0byBjb21wbGV0ZWx5IHN0b3AgaXQncyBpbXBvc3NpYmxlIGZvciBtZSkhIEkgcGlja2VkIGl0IGJhY2sgdXAgYWZ0ZXJ3YXJkcyBhbmQgc3RhcnRlZCBteSBidWlsZCwgbW9zdGx5IHJ1bm5pbmcgcm9hZCBkdWUgdG8gc25vdyBoaXR0aW5nIHRoZSBDYW5hZGlhbiBSb2NraWVzIChpdCdzIHRvdWdoIHRvIGhpdCBteSBwYWNlIHRhcmdldHMgd2hpbGUgc2xvZ2dpbmcgdGhyb3VnaCB0aGUgc25vd3kgdHJhaWxzKS4gCkVuIHBhcmNvdXJhbnQgdW4gbGl2cmV0IGRpdGUgcGFyIGxhIENvbW1pc3Npb24gRXVyb3Blbm5lLCAoIkF1IHNlcnZpY2UgZGVzIGNpdG95ZW5zIGV1cm9wZW5zLiBDZSBxdWUgbGEgQ29tbWlzc2lvbiBFdXJvcGVubmUgZmFpdCBwb3VyIHZvdXMiLCBTcmllIEwnRXVyb3BlIGVuIG1vdXZlbWVudCwgMjAwNiwgMjIgcCksIHZvaWwgY2UgcXVlIGonYWkgbHU6IkonYWkgZ2FsZW1lbnQgcHUgY29uc3RhdGVyIHF1ZSBsYSBDb21taXNzaW9uIGFwcGxpcXVhaXQgdnJhaW1lbnQgbCdnYWxpdCBkZXMgY2hhbmNlcyBlbiB0YW50IHF1J2VtcGxveWV1ci4gSid0YWlzIGVuY2VpbnRlIGRlIHNlcHQgbW9pcyBsb3JzIGRlIG1vbiBlbnRyZXRpZW4gZXQgamUgbSdhdHRlbmRhaXMgcXUnaWxzIG1lIGRlbWFuZGVudCBkJ2VudHJlciBlbiBmb25jdGlvbiBhcHJzIGxhIG5haXNzYW5jZSBkdSBiYiwgbWFpcyBpbHMgbSdvbnQgZGl0ICJGbGljaXRhdGlvbnMsIHZvdXMgdGVzIGVuZ2FnZSIgYXZhbnQgZGUgbSdlbnZveWVyIGVuIGNvbmcgZGUgbWF0ZXJuaXQgdW4gbW9pcyBwbHVzIHRhcmQiLiAKQ29tcGFueSBleGVjdXRpdmVzIGluYXVndXJhdGVkIHRoZSBIdWF3ZWkgRXVyb3BlYW4gQ3liZXJzZWN1cml0eSBDZW50ZXIsIHdoaWNoIHdpbGwgYWxsb3cgdGhlIHdpcmVsZXNzIGNvbXBhbmllcyB0aGF0IGFyZSBpdHMgY3VzdG9tZXJzIHRvIHJldmlldyB0aGUgc291cmNlIGNvZGUgcnVubmluZyBpdHMgbmV0d29yayBnZWFyLiBhbmQgQ2hpbmEgb3ZlciBIdWF3ZWkgVGVjaG5vbG9naWVzLCB0aGUgd29ybGQncyBiaWdnZXN0IG1ha2VyIG9mIHRlbGVjb20gaW5mcmFzdHJ1Y3R1cmUgZm9yIG5ldyBoaWdoIHNwZWVkIDVHIG5ldHdvcmtzLiBoYXMgYmVlbiBsb2JieWluZyBhbGxpZXMgdG8gc2h1biBIdWF3ZWkgYmVjYXVzZSBvZiBmZWFycyBpdHMgZXF1aXBtZW50IGNvdWxkIGZhY2lsaXRhdGUgZGlnaXRhbCBlc3Bpb25hZ2UgYnkgQ2hpbmEncyBjb21tdW5pc3QgbGVhZGVycy4KSGUgc2F3IHRoZSBodW1vciBpbiBpdCBhcyB3ZWxsLCBhbmQgaGUgYWxzbyBvd25zIGEgYmlrZS4gCkFsbCB0aGlzLCB0byBjYXRlciB0byBhIG1hcmtldCB0aGF0IGRvZXNuIHJlYWxseSBleGlzdCBpbiBtYXNzIHRlcm1zLiAKSXQgc2VlbXMgYSBiaXphcnJlIHN0YXRlbWVudCB0byBtZSB0aGF0IHlvdSBjb25zaWRlciBpdCBob3JyaWJsZSBmb3IgZW1vdGlvbnMgdG8gYmUgaW52b2x2ZWQgaW4gZGV2ZWxvcG1lbnQuIEVtb3Rpb25zIGFyZSBwcmVzZW50IGluIGFsbCBwb2xpdGljcyBhbmQgZGV2ZWxvcG1lbnQhIEluIGZhY3QsIHRoZSBtZXJlIGF0dGVtcHQgdG8gcmVtb3ZlIGVtb3Rpb25zLCBpbiBteSBvcGluaW9uLCBpcyBsaWtlbHkgdG8gbGVhZCB0byBjZW50cmFsIGNvbnRyb2wgb3ZlciBhIHByb2plY3QgYnkgdGhlIG1vc3Qgc29jaW9wYXRoaWMgbGVhZGVyIHdobyBpcyBsZWFzdCBib3RoZXJlZCBieSBlbW90aW9uYWwgYXR0YWNrcy4KVGhlIGZlc3RpdmUgc2Vhc29uIGlzIGFib3V0IHRvIGNvbWUgLGNhc2lub3MgYW5kIGJhcnMgd2lsbCBiZSBmbG9vZGVkIHdpdGggcGVvcGxlIHBsYXlpbmcgLCBUZWVuIFBhdHRpLCBydW1teSBhbmQgb3RoZXIgZ2FtZXMgb2YgdGhlIHBsYXlpbmcgY2FyZCBhbmQgaWYgeW91IGFyZSBhbHNvIHBsYW5uaW5nIHRvIHBsYXkgdGhlIGdhbWUgdGhpcyB0aW1lIHRoZW4gZG9uIGhlc2l0YXRlIHdoYXRldmVyIHRoZSBnYW1lIHdpbGwgYmUsIHlvdSB3aWxsIGRlZmluaXRlbHkgd2luLgpCdXQgdGhlcmUgYXJlIHR3byBkaWZmZXJlbnQgTWV4aWNhbiByZXN0YXVyYW50cy4gCkkgY2FuIHJlbGF0ZS4gClBlcmhhcHMgdGhlIG1vc3QgaW50ZXJlc3Rpbmcgc3RvcnkgdG8gY29tZSBteSB3YXkgd2FzIHRoZSB3aWZlIG9mIGEgc29sZGllciB3aG8gaGFkIGFscmVhZHkgbWFkZSBpdCB0byBDYW5hZGEuIFNoZSB3YXMgam9pbmluZyBoZXIgaHVzYmFuZCBiZWNhdXNlIGhpcyBDb21tYW5kaW5nIE9mZmljZXIgaGFkIGNvbWUgdG8gaGVyIHdpdGggYSBwbGFuIHRvIHRyaWNrIGhlciBodXNiYW5kIGludG8gY29taW5nIGJhY2sgdG8gdGhlIGJhc2UuIFRoZSBwbGFuIHdhcyB0byB0ZWxsIGhpbSBoaXMgd2lmZSBoYWQgYmVlbiBicnV0YWxseSByYXBlZCBhbmQgd2FzIGluIHRoZSBob3NwaXRhbC4gCkFsc28gSSBjZXJ0YWlubHkgaG9wZSB0aGF0IGlmIHNoZSBoYWQgY2VydGFpbiBleHBlY3RhdGlvbnMsIHNoZSBhY3R1YWxseSBnYXZlIGhpbSBzb21lIGluc3RydWN0aW9ucyBpbnN0ZWFkIG9mIHRoaW5raW5nIGhlIG91Z2h0IHRvIGZpZ3VyZSBpdCBvdXQgaGltc2VsZi5wYWxleGFuZGVyXzYgIDggcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgZ2V0IHRoYXQgc2hlIGZlbGwgb2ZmIGFuZCB3ZW50IGEgbGl0dGxlIG51dHMgKGRydWdzLCBhbGNvaG9sLCBldGMuKSBidXQgaGVyIGVudGlyZSBwZXJzb25hIG9uIGJlYWNoIGNsdWIgaXMgdHJvdWJsaW5nIHRvIG1lLiAKTmV4dCB0aGluZyBKZXRlciBrbm93cywgaGUncyBkcnVnZ2VkLCB0aWVkIHVwIGFuZCBiZWluZyBoZWxkIGJ5IHRoaXMgc2VsZiBwcm9jbGFpbWVkIHBhZWRvcGhpbGUgd2hvIGNsZWFybHkgaGFzIHNvbWUgc29ydCBvZiBhZ2VuZGEgaGVyZS4gClRoZW4gSSBnb3Qgb2xkZXIsIGFuZCBkZXNwaXRlIG15IHdlbGwgcmVub3duZWQgZm9ybWFsIGVkdWNhdGlvbiwgSSBmb3VuZCBteXNlbGYgaGF2aW5nIHRvIHN0YXJ0IGZyb20gc2NyYXRjaCBhZ2FpbiBmaXJzdCBvY2Nhc2lvbmFsbHkgbW9wcGluZyBhbmQgc3dlZXBpbmcgdXAgdGhlIGJsb2NrLCB0aGVuIHdvcmtpbmcgaW4gdGhlIGtpdGNoZW4gYXMgYSB0cnVzdGVlLCB0aGVuIGF0IGEgcGlja2xlIGZhY3RvcnkgcGxhbnQsIHRoZW4gYSB3YXJlaG91c2UgZGlzdHJpYnV0aW9uIGNlbnRlciwgYW5kIGZpbmFsbHkgaW4gYSB0cmFja2VkIGNhcmVlciBwcm9mZXNzaW9uIG1ha2luZyBnb29kIG1vbmV5IHdpdGggZ2VuZXJhbGx5IG1pbmltYWwgcGh5c2ljYWwgbGFib3IuIApUaGUgZ2lybHMgd2Ugd2VyZSB3aXRoIHNtdWdnbGVkIGV2ZXJ5dGhpbmcgdGhyb3VnaCBpbiB0aGVpciBicmFzLCBmcm9tIHNwbGlmZnMgdG8gSyB0byBjb2tlLi4gClRoaXMgaXMgcGFydGljdWxhcmx5IGltcG9ydGFudCB0byBtZSBiZWNhdXNlIHRoZSBtb3N0IHBvcHVsYXIgbW91dGhwaWVjZSBvbiB0aGUgbGVmdCBpcyBiZWluZyBjb250cm9sbGVkIGJ5IGEgQ2hpZWYgb2YgU3RhZmYgd2hvIGNlbGVicmF0ZXMgQm9zZS4uIApSaWRrZXIgc3RhdGVtZW50LCBKVVBJVEVSIHN1YmplY3RzIHdlcmUgdGhpbj8gUmVhbGx5Py4gCldpdGggdGhlIGNvdW5zZWxvciwgd2UgZG9uIGhhdmUgc29saWQgcHJvb2YgdGhhdCBzaGUgYnJlYWtpbmcgY29uZmlkZW50aWFsaXR5LCBldmVuIHRob3VnaCB3ZSBzdHJvbmdseSBzdXNwZWN0IGl0LiBJdCBhbGwgY2lyY3Vtc3RhbnRpYWwgYXQgYmVzdCwgZW5vdWdoIHRvIG1ha2UgbXkgc2lzdGVyIGZlZWwgdW5jb21mb3J0YWJsZSB0YWxraW5nIHRvIHRoZSB0aGVyYXBpc3QgYWJvdXQgYW55dGhpbmcsIGJ1dCBub3QgZW5vdWdoIHRvIGFjdHVhbGx5IHNheSBoZXksIHNoZSBicmVha2luZyB0aGUgbGF3LiBUaGUgdGhlcmFwaXN0IGRlbmllcyBpdC4gCldoZW4gc29tZW9uZSBoYXMgYmVlbiBhYnVzZWQgb3IgaG9sZGluZyBldmVyeXRoaW5nICJpbiIgdG91Y2ggY2FuIGJlIHZlcnkgcmVsYXhpbmcgd2hpY2ggaW4gdHVybiBjb3VsZCBhbGxvdyBwZW9wbGUgdG8gcmVsZWFzZSB0aGVpciBlbW90aW9ucyB0aGF0IHRoZXkgd2VyZW4gYWJsZSB0byBiZWZvcmUuIApJbiB0ZXJtcyBvZiBwbGFjZXMgdG8gZ28gICB5b3UgY2FuIGNsaW1iIHRoZSBiZWxsIHRvd2VyIG9mIHRoZSBBYmJleSB3aGljaCBpcyBnb29kLiBUaGVyZSB0aGUgc3BhIGFzIHdlbGwgb2J2ICAgZmxvYXRpbmcgcm91bmQgb24gdGhlIG91dGRvb3IgcG9vbCBpbiB0aGUgZXZlbmluZywgZXNwZWNpYWxseSBpZiB0aGUgd2VhdGhlciBpcyBiYWQgICB0aGF0IGZ1bi4gVGhlIEFtZXJpY2FuIE11c2V1bSBpcyBtZWFudCB0byBiZSBncmVhdCBhbHRob3VnaCB0byBteSBzaGFtZSBJIG5ldmVyIGJlZW4uIFRoZSBIb2xib3VybmUgaXMgZmFiIHRob3VnaC4KQSBSZXZpZXcgb2YgdGhlIDEwMCBQYXVsc29uIFBoYXJvYWhzIENsdWIgUG9rZXIgQ2hpcCBTZXQKRXhwbG9yZSB0aGUgcG9zc2liaWxpdHkgb2YgdXNpbmcgYSByZXdhcmQgc3lzdGVtLiBBdHRhY2ggc21hbGwgcHVyY2hhc2VzIHRvIHRoZSBsZW5ndGggb2YgdGltZSB5b3UndmUgZ29uZSB3aXRob3V0IG5pYmJsaW5nLiAKV2hlbiBuZXcgcGxheWVyIGNyZWF0ZXMgYW4gYWNjb3VudCBoZSBjYW4gZW50ZXIgdGhlIGNvZGUgYW5kIGdldHMgc3BlY2lhbCBjYXNoIGJvbnVzIGZvciBmcmVlLiAKQXQgQ2VkYXIgQnJlYWtzIExvZGdlIGJhciBpbiBCcmlhbiBIZWFkIHdoZXJlIHJpZGVycyB3aWxsIHR1cm4gaW4gdGhlaXIgY2FyZHMgYW5kIHdpbm5lcnMgb2YgdGhlIHBva2VyIGhhbmQgZHJhdyB3aWxsIGJlIGFubm91bmNlZC4gUHJpemVzIGZyb20gc3BvbnNvcnMgd2lsbCBiZSBnaXZlbiB0byB0aG9zZSB3aXRoIHRoZSBiZXN0IGhhbmQsIHdvcnN0IGhhbmQgYW5kIG1hbnkgbW9yZS4gVGhlZ3JhbmQgcHJpemUgaXMgY2FzaCBmb3IgeW91IHRvIHNwZW5kIG9uIHlvdXIgbG92ZWQgb25lIGZvciBWYWxlbnRpbmUncyBEYXkgdGhlIG5leHQgZGF5Li4gClRoZSBwb2ludCBpcyB0aGF0IHRoZXJlIHdhcyBtb3JlIGNvbnNlcXVlbmNlcyB0byB0aGUgc3VpdCB0aGFuIHNpbXBseSAibmVnYXRpbmcgYW4gTkRBIHRoYXQgd2FzIGFscmVhZHkgcmVjaW5kZWQiLiBJZiBpdCBoYWQgZ29uZSBmb3J3YXJkLCBpdCBjb3VsZCBoYXZlIGxlZCB0byBtb3JlIE5EQSBiZWluZyBpbnZhbGlkYXRlZCwgc28gdGhlIGNhc2Ugbm90IGdvaW5nIGZvcndhcmQga2VlcHMgdGhlIG90aGVyIE5EQSBhcyB0aGV5IHdlcmUgKHdoaWNoIGlzIGEgYmVhcmluZyBvbiB0aGUgb3RoZXIgTkRBcykuIApGYWN0IE51bWJlciAxOTogQXVzdHJhbGlhJ3Mgc21hbGxlc3Qgc3RhdGUsIFRhc21hbmlhLCBpcyBvbmx5IGFwcHJveGltYXRlbHkgMi41JSBvZiB0aGUgc2l6ZSBvZiBBdXN0cmFsaWEncyBsYXJnZXN0IHN0YXRlLCBXZXN0ZXJuIEF1c3RyYWxpYS4KU28gZWFjaCB0aW1lIGhlIGNhbGxlZCBpbiBJIHdvdWxkIGhvcCBpbiB3aXRoIFNjcmVlbiBTaGFyaW5nIGFuZCBoZWxwIGhpbSBvZmZsb2FkIHRoZSBtdXNpYyBoZSB3YXMgdGlyZWQgb2YgYW5kIGRvd25sb2FkIGFueSBuZXdlciBzb25ncyBoZSB3YW50ZWQuIEVhY2ggY2FsbCB0b3RhbGx5IGtpbGxlZCBteSBBSFQgZm9yIHRoZSBkYXksIGJ1dCBJIGFsd2F5cyBsaWtlZCB3b3JraW5nIHdpdGggaGltLiAKVGhlIGJpZ2dlciBwcm9ibGVtIGlzIHRoYXQgdHdvIG1pbnV0ZXMgb2YgYnJ1c2hpbmcgaW4gdGhlIHNob3dlciB1c2VzIGFib3V0IGZpdmUgZ2FsbG9ucyBvZiB3YXRlciwgd2hlcmUgdHdvIG1pbnV0ZXMgb2YgbW9kZXN0IGZhdWNldCB1c2FnZSAoZXZlbiBpZiB5b3UncmUgdGhlIHR5cGUgd2hvIGxlYXZlcyBpdCBydW5uaW5nIHRoZSB3aG9sZSB0aW1lKSBvbmx5IHVzZXMgYWJvdXQgdHdvIGdhbGxvbnMuIFlvdSBkb24ndCBuZWVkIGEgc3ByZWFkc2hlZXQgdG8gdGVsbCB5b3Ugd2hpY2ggb25lIHNhdmVzIHRoZSBtb3N0IHdhdGVyLiBBbHNvLCB3ZSBjYW4gc2F5IGZyb20gcGVyc29uYWwgZXhwZXJpZW5jZSB0aGF0IHlvdSBjYW4gc2F2ZSB3YXkgbW9yZSB3YXRlciB0aGFuIGVpdGhlciBtZXRob2QgYnkgc2ltcGx5IG5vdCBzaG93ZXJpbmcgYXQgYWxsLgpJIGFsc28gcmVwb3J0ZWQgdGhhdCB1bml2ZXJzaXR5IHBvbGljZSB3ZXJlLCByZXBvcnRlZGx5LCBsYXplcmluZyBEb2R0IGRheXMgYmVmb3JlIHRoZSBwb2tpbmcgdGhhdCBlbmRlZCBpbiB0aGUgcHJvdGVzdC4KRG9uJ3QgbGV0IGhpbSBncmFiIGFueSB0aHJvd2FibGUgb2JqZWN0cy4gSGUgd2lsbCB0aHJvdyB0aGVtIGF0IHlvdSwgZGVzdHJveWluZyB5b3VyIGNvdmVyIGRlcGVuZGluZyBvbiBob3cgYmlnIGl0IGlzLiBUaGUgYmVzdCB3YXkgdG8gc3RvcCBoaW0gaXMgdG8gc2ltcGx5IHNob290IHRoZSBvYmplY3QuIElmIGl0J3MgdG8gYmlnIGhvd2V2ZXIsIHNob290IGhpbSBpbiBib3RoIHRoZSBsZWdzLiBUaGF0IHdpbGwgcGlzcyBoaW0gb2ZmLCBhbmQgbWFrZSBoaW0gZG8gbW9yZSBkYW1hZ2UgZm9yIGFuIGF0dGFjaywgYnV0IGl0IHN0b3BzIHlvdXIgY292ZXIgZnJvbSBiZWluZyBkZXN0cm95ZWQuCkZvciBleGFtcGxlLCBJIGdvdCBhIENNMDAwMChzb21lIGRlc2t0b3AgUEMsIGNhbiByZW1lbWJlciB0aGUgZXhhY3QgbW9kZWwpIGZvciBDaHJpc3RtYXMgYmFjayBpbiAyMDA4LiAKSnVzdCBpbWFnaW5lIHdhbGtpbmcgYXJvdW5kIHdpdGggdGhlIExhcyBWZWdhcyBleHBlcmllbmNlIGluIHRoZSBwYWxtIG9mIHlvdXIgaGFuZHMuIApUbyBnaXZlIHlvdSBhbiBleGFtcGxlLCBoZSB3YXMgc28gY29tbWl0dGVkIHRvIGhpcyBwb2tlciBnYW1lcyB0aGF0IHdoZW4gdGhlIGZhbW91cyBoZXJvIHBpbG90L3JhY2lzdCBzdG9wcGVkIGJ5IHRoZSBpc2xhbmQgYmVjYXVzZSBpdCBvdmVybGFwcGVkIHdpdGggb25lIG9mIGhpcyBuaWdodGx5IG1vbmV5IHdpbm5pbmcgY29udGVzdHMuIFdpbm5pbmcgJDUwIGZyb20gYSBidW5jaCBvZiBkcnVua2VuIHNhaWxvcnMgd2FzIG1vcmUgaW1wb3J0YW50IHRvIFJpY2hhcmQgTml4b24gdGhhbiBtZWV0aW5nIG9uZSBvZiB0aGUgbW9zdCBmYW1vdXMgcGVvcGxlIGluIHRoZSB3b3JsZCwgYmVjYXVzZSBoZSB3YXMgUmljaGFyZCBnb2RkYW1uZWQgTml4b24gYW5kIHRoZXJlIHdhcyBnYW1ibGluZyBtb25leSB0byBiZSBtYWRlLiBLZWVwIGluIG1pbmQsIGhlIHdhcyBkb2luZyB0aGlzIGFsbCBpbiBhIGJhciBoZSBoYWQgb3BlbmVkIGhpbXNlbGYgYXQgYWdlIDI5IG9uIGFuIGlzbGFuZCBpbiB0aGUgU291dGggUGFjaWZpYyBkdXJpbmcgdGhlIGJpZ2dlc3QgZ2xvYmFsIHdhciBpbiBoaXN0b3J5Li4gCkluIDIwMTgsIHRoZSBtb3N0IHBvcHVsYXIgUEMgZ2FtZSBpbiB0aGUgd29ybGQgaXMgdGhlIExlYWd1ZSBvZiBMZWdlbmRzLiBJbiBDaGluYSwgUFVCRyBpcyB0aGUgZmF2b3JpdGUgd2l0aCBvdmVyIDUyJSBvZiBnYW1lcnMgdmlzaXRpbmcgdGhlIHdlYnNpdGUuIApNeSBnaXJsZnJpZW5kIGhhdGVzIGdhbWJsaW5nLiBTaGVzIG5ldmVyIGhhZCBhIGJhZCBleHBlcmllbmNlLCBzaGUganVzdCBzYXlzIGdhbWJsaW5nIGlzIGJhZC4gSSBhc2sgaGVyIHRvIHBsZWFzZSBub3QgY2FyZSBidXQgc2hlIGNyaWVzIHJpdmVycyBhbmQgc2F5cyBpdCB3aWxsIGJlIHRoZSBlbmQgb2YgdXMgaWYgSSBrZWVwIGdvaW5nLgpUaGUgc2V4aWVzdCBvZiBzZW1pY29sb25zIHUKRXZlbiB0aG91Z2ggaWRlYWxseSBJIG5ldmVyIGhhdmUga2lkcyBvZiBteSBvd24sIHNpbmNlIEkgZG8gbm90IGJlbGlldmUga2lkcyBhcmUgYSBwYXJ0IG9mIGxpZmUgdGhhdCBJIHdhbnQgdG8gZm9yIG1lLiBCdXQgaWYgSSBhbSBwdXQgaW4gYSBzaXR1YXRpb24sIGFuZCBJIGNhbiBiYXNlIG15IGRlY2lzaW9uIHNvbGVseSBvbiBteSBkZXNpcmVzICh3aGljaCBpcyBkaWZmaWN1bHQgdG8gZG8gc28gQVRNLCBkdWUgdG8gZmFtaWx5IGFuZCBjdWx0dXJhbCBiYWNrZ3JvdW5kKSBJIHdvdWxkIHdhbnQgdG8gYmUgYSBwYXNzaXZlIHBhcnQgYW5kIHNlZSBpZiBJIGhhdmUgaXQgaW4gbWUgdG8gYmVjb21lIGEgaGFwcHksIGFjdGl2ZWx5IGludm9sdmVkIGZhdGhlciByYXRoZXIgdGhhbiBhIHVuaGFwcHksIHNwaXRlZnVsIGFjdGl2ZSBmYXRoZXIuLiAKSG93IFRvIFJlbGlldmUgU29yZSBMZWcgTXVzY2xlcwpKYXBhbmVzZSBvbiB0aGUgb3RoZXIgaGFuZCwgdW5xdWVzdGlvbmluZ2x5IG9iZXkgYW5kIGZvbGxvdyB0aGVpciBsZWFkZXJzIGFuZCBiZWxpZXZlIHRoZW0gZXZlbiBpZiB0aGV5IGFyZSBjYXVnaHQgbHlpbmcgb3ZlciBhbmQgb3ZlciBhZ2Fpbi4gQWxzbywgS29yZWFucyBhcmUgcGFzc2lvbmF0ZWx5IHBvbGl0aWNhbGx5IGFjdGl2ZSwgYXMgb3Bwb3NlZCB0byBKYXBhbmVzZSB3aG8gYXJlIGFwYXRoZXRpYyB0b3dhcmRzIHBvbGl0aWNzLiBJbiBKYXBhbiwgb25seSB0aGUgb2xkIGd1YXJkIHN0aWxsIHBhcnRpY2lwYXRlIGluIHBvbGl0aWNhbCBwcm9jZXNzZXMuIApCdXQgU2NhbGlhIHJlamVjdGVkIHRoYXQgdmlldy4gU29tZSB0aGluayB0aGF0IHRoZSBTZWNvbmQgQW1lbmRtZW50IGlzIG91dG1vZGVkIGluIGEgc29jaWV0eSB3aGVyZSBvdXIgc3RhbmRpbmcgYXJteSBpcyB0aGUgcHJpZGUgb2Ygb3VyIE5hdGlvbiwgd2hlcmUgd2VsbCB0cmFpbmVkIHBvbGljZSBmb3JjZXMgcHJvdmlkZSBwZXJzb25hbCBzZWN1cml0eSwgYW5kIHdoZXJlIGd1biB2aW9sZW5jZSBpcyBhIHNlcmlvdXMgcHJvYmxlbS4gVGhhdCBpcyBwZXJoYXBzIGRlYmF0YWJsZSwgYnV0IHdoYXQgaXMgbm90IGRlYmF0YWJsZSBpcyB0aGF0IGl0IGlzIG5vdCB0aGUgcm9sZSBvZiB0aGlzIENvdXJ0IHRvIHByb25vdW5jZSB0aGUgU2Vjb25kIEFtZW5kbWVudCBleHRpbmN0LCBTY2FsaWEgd3JvdGUuLiAKSW1hZ2luZSA1MDAwKyBzbmlwZXJzIGRpc3BlcnNlZCBhY3Jvc3MgdGhlIHRvcCBvZiBhbGwgTmV3IFlvcmsgYnVpbGRpbmdzLiAKSG9yc2VKdW1wZXIgdQpEdWRlLiBZb3UgbWFzc2l2ZWx5IGZ1Y2tlZCB1cC4gWW91IHRvbGQgaGVyIHlvdSB0cmllZCB0byBraWxsIHlvdXJzZWxmIGJ5IGJlaW5nIGRydW5rIGFuZCBpbWJpYmluZyBvbiBwYWlua2lsbGVycy4gClRoZSAyMDE3IGV2ZW50IHdhcyBlc3BlY2lhbGx5IHBvaWduYW50IGZvciBsb2NhbCBidXMgZW50aHVzaWFzdHMgYXMgaXQgbWFya2VkIHRoZSBmaXJzdCB0aW1lIGZvciAyMCB5ZWFycyB0aGF0IHRoZSBmb3JtZXIgY2xvc2VkIHRvcCBTb3V0aGVybiBWZWN0aXMgVmludGFnZSBGbGVldCBoYWQgYmVlbiByZXVuaXRlZC4gClRvIG1ha2UgYSBsZWZ0IHRvIGdldCB0byB0aGUgU3RlZWwgU3RhY2tzIHdhcyBkYW0gbmVhciBpbXBvc3NpYmxlIGFuZCBkYW5nZXJvdXMuIElmIHlvdSB0YWtlIDM3OFMgYW5kIG1ha2UgYSBsZWZ0IG9uIFRoaXJkIHN0LiBFdmVuIHdvcnNlISBUaGVuIHRoaXJkIHN0LiAKTGEgUHJlc3NlIGZvdXJuaXQgY2VzIGh5cGVybGllbnMgcG91ciB2b3RyZSBjb21tb2RpdCBMZXMgU2l0ZXMgdGllcnMgbmUgc29udCBwYXMgc291cyBsZSBjb250ciBkZSBMYSBQcmVzc2UgZXQgbGVzIGh5cGVybGllbnMgbmUgcGV1dmVudCBpbnRlcnByIGNvbW1lIHVuZSBhcHByb2JhdGlvbiBvdSB1biBlbmRvc3NlbWVudCBkZSBsZXVyIGNvbnRlbnUgcGFyIExhIFByZXNzZS4gCkdsdXRlbiBpbnRvbGVyYW5jZSBpbiB0aGUgaW50ZXN0aW5lcyBhcyBhIHByb2Nlc3MsIGJ1dCBkb2VzbiBuZWNlc3NhcmlseSBzdGF5IGluIHRoZSBpbnRlc3RpbmVzLgpUaGF0IHdhcyB3aGVuIHRoZSBpbXByb2JhYmlsaXR5IG9mIG15IGxpZmUgYmVjYW1lIGltcG9zc2libGUgdG8gcmVjb25jaWxlICAgSSB3YXMgc3BlbmRpbmcgYWxsIGRheSBhbmQgYWxsIG5pZ2h0IGFsb25lLCBwbGF5aW5nIGNvbXB1dGVyIGdhbWVzIGFnYWluc3Qgc3RyYW5nZXJzLi4gClRoZXJlIGFyZSBzZXZlcmFsIHJlYXNvbnMgdGhhdCBhIG1vdGhlciBtb3VzZSBtYXkgZWF0IGhlciBiYWJpZXMuIDEuIElmIHRoaXMgaXMgaGVyIGZpcnN0IGxpdHRlciwgc2hlIG1heSBub3QgaGF2ZSBiZWVuIG1hdHVyZSBlbm91Z2ggeWV0IHRvIGNhcmUgZm9yIHRoZW0uIFRoaXMgaXMgZmFpcmx5IGNvbW1vbi4gMi4gU29tZW9uZSBtYXkgaGF2ZSBkaXN0dXJiZWQgdGhlIG5lc3QuIEFsc28geW91IHNob3VsZCBrZWVwIHlvdXIgaGFuZHMgb3V0IG9mIHRoZSBjYWdlIGFzIG11Y2ggYXMgcG9zc2libGUuIDMuIFRoZSBiYWJpZXMgbWF5IGhhdmUgYmVlbiBzaWNrIG9yIGluanVyZWQgYW5kIHNoZSBrbmV3IHRoZXkgd291bGQgbm90IGJlIGFibGUgdG8gc3Vydml2ZS4gUmF0aGVyIHRoYW4gY2FyZSBmb3IgYmFiaWVzIHRoYXQgd2VyZSBub3QgZ29pbmcgdG8gbGl2ZSBhbnl3YXksIHNoZSBhdGUgdGhlbSBzbyBzaGUgY291bGQgZGV2b3RlIGhlciB0aW1lIHRvIGNhcmluZyBmb3IgdGhlIGhlYWx0aHkgb25lcy4gNC4gVGhlIGJhYmllcyBtYXkgaGF2ZSBkaWVkIG9uIHRoZWlyIG93biwgYW5kIHNoZSBhdGUgdGhlbSB0byBwcmV2ZW50IHRoZW0gZnJvbSByb3R0aW5nIGFuZCBmb3VsaW5nIHRoZSBuZXN0LiA1LiBJZiBhZGVxdWF0ZSBmb29kIGFuZCB3YXRlciB3YXMgbm90IGtlcHQgaW4gdGhlIGNhZ2UsIHNoZSBtYXkgaGF2ZSBkZWNpZGVkIHNoZSBjb3VsZCBubyBsb25nZXIgY2FyZSBmb3IgdGhlbSBwcm9wZXJseS4gNi4gQWx0aG91Z2ggbm90IHJlbGF0ZWQgdG8gdGhpcyBxdWVzdGlvbiwgaWYgYSBtb3VzZSBnaXZlcyBiaXJ0aCB0byBhbiBleHRyZW1lbHkgbGFyZ2UgbGl0dGVyIHRoYXQgc2hlIGNhbm5vdCBjYXJlIGZvciB0aGUgZW50aXJlIHRoaW5nLCBzaGUgbWF5IGVhdCBzb21lIG9mIHRoZSBiYWJpZXMgdG8gbWFrZSB0aGUgbGl0dGVyIGEgbW9yZSBtYW5hZ2VhYmxlIHNpemUuIChGdWxsIEFuc3dlcikKSSBjYW4gYWdyZWUgc29tZSBvZiBoZXIgbGFuZ3VhZ2UgaGFzIGJlZW4gc2hpdHR5IGFuZCBzaGUgc2hvdWxkIGFwb2xvZ2l6ZSBmb3IgaGVyIGNob2ljZSBvZiB3b3JkcywgYXMgc2hlIGhhcyBkb25lLiBJdCBzZWVtcyBhIGxpdHRsZSB3aWxkIHRoYXQgYSBmcmVzaG1lbiBSZXAuIElzIGdldHRpbmcgdGhpcyBtdWNoIGF0dGVudGlvbiBhbmQgY29uZGVtbmF0aW9uIHdoZW4gdGhlIFByZXNpZGVudCB3YXMgc28gbXVjaCBtb3JlIGRpcmVjdGx5IHVzaW5nIGFudGkgU2VtaXRpYyBkb2d3aGlzdGxlcyB3aGVuIHJlZmVycmluZyBzcGVjaWZpY2FsbHkgdG8gSmV3aXNoIGluZGl2aWR1YWxzLCBhbmQgaGFzIG5ldmVyIGFwb2xvZ2l6ZWQuLiAKSSdtIGFuIG9sZCBzb3VsZWQgMzEgeWVhciBvbGQgbG9va2luZyBmb3Igc29tZSBmcmllbmRzIHRvIHNoYXJlIG15IHNtaWxlIHdpdGguIEkndmUgYmVlbiBpbmNhcmNlcmF0ZWQgc2luY2UgMjAwNiBhbmQgc3RpbGwgaGF2ZSBzZXZlcmFsIHllYXJzIHRvIGdvLCBzbyBJIGdldCBhIGJpdCBsb25lbHkgYXQgdGltZXMuIApJIGN1cnJlbnRseSBzdWxraW5nIGJlY2F1c2UgQ3JvYXRpYSBjYW1lIHNlY29uZCBpbiB0aGUgV29ybGQgQ3VwLiBJIHdhbnRlZCB0aGVtIHRvIHdpbi46KCBPbiBhIG1vcmUgcG9zaXRpdmUgbm90ZSBJIGRpZCBtYW5hZ2UgdG8gd2F0Y2ggdGhlIHByZXZpb3VzIEVuZ2xhbmQgQ3JvYXRpYSBnYW1lIHZpYSBTZXJiaWFuIFRWLCBjb21wbGV0ZWx5IGluIFNlcmJpYW4gd2l0aCBubyBzdWJ0aXRsZXMsIGFuZCBhY3R1YWxseSB3YXMgdW5kZXJzdGFuZGluZyBtb3JlIHRoYW4gSSB0aG91Z2h0LgpNZWFuaW5nIHRoYXQgbm8gbmVlZCBmb3IgdGhlICJndWFyZGlhbiIgdG8gYmUgcHJlc2VudCBvciBhY2NvbXBhbnlpbmcgZHVyaW5nIHRyYXZlbCAod2hlbiBJIHNheSB0cmF2ZWwgSSBtZWFuIG91dHNpZGUgdGhlIGNvdW50cnksIHRoZXJlIGFyZSBubyBsb2NrcyBvciBhbnkgc29ydCBvZiBoaW5kcmFuY2UgZm9yIHRyYXZlbCB3aXRoaW4gU2F1ZGkgQXJhYmlhIG9yIHdpdGhpbiB0aGUgR0NDIGFzIHdob2xlKS4uIApJdCBiZWVuIGF0IGxlYXN0IDMwIHllYXJzLiBDaGVlY2ggTWFyaW4ganVzdCBob25leSBkaWNrZWQgQW5kZXJzb24gQ29vcGVyIG9uIENlbGVicml0eSBKZW9wYXJkeSBhIGxpdHRsZSBiaXQgYmFjay4gTWFkZSBoaW0gbG9vayBzdHVwaWQsIGluIGZhY3QsIGFuZCBoZSBwcm9iYWJseSBiZWVuIHNtb2tpbmcgaGVhdmlseSBmb3IgNDAgNTAgeWVhcnMuClRoaXMgaXMgdGhlIHBlcmNlbnRhZ2Ugd2Ugd2VyZSBsb29raW5nIGZvci4gClRoYXQgaW4gdGhlIGRlZXBlc3QgZGFya2VzdCBwYXJ0IG9mIHRoZSB3b3JsZCB0aGVyZSBub3RoaW5nIGJ1dCBub2lzZS4gCkplIG5lIG0ndGFpcyBwYXMgdHJvbXBlLCBjZSBzb250IGRldXggZ291cm1hbmRlcyBCQ0JUIGV0IGonYWkgZXUgZW52aWUgZGUgbGVzIGludGVydmlld2VyIGVuIGR1by4gQydlc3QgYmllbiB0b21iLCBlbGxlcyBvbnQgZXUgcGxhaXNpciAgZmFpcmUgY29ubmFpc3NhbmNlIG1lIHNlbWJsZSB0IGlsLi4gCkFjY3JlZGl0ZWQgYnkgdGhlIE5hdGlvbmFsIEFzc29jaWF0aW9uIGZvciB0aGUgRWR1Y2F0aW9uIG9mIFlvdW5nIENoaWxkcmVuLCB3aGljaCBoYWQgbXVjaCBoaWdoZXIgc3RhbmRhcmRzIHRoYW4gc3RhdGUgcmVndWxhdGlvbnMuIApCdXQgZXZlbiB0aGF0IHdhcyBzaG9ydCBsaXZlZC4uIApIZSBvd2VzIGhpcyBwYXJ0eSBub3RoaW5nIChzaW5jZSBhbG1vc3QgYWxsIG9mIGl0IHdhcyB3b3JraW5nIHRvIHVuZGVybWluZSBoaW0pIGFuZCB5ZXQgaGUgd2lsbCBiZW5lZml0IGZyb20gdGhlIGRvbWluYW5jZSBvZiBDb25ncmVzcyBhbmQgdGhlIFN1cHJlbWUgQ291cnQgYnkgdGhlIFJlcHVibGljYW5zLiAKVGhvc2UgbG9va2luZyB0byBvZmZlciB0cmFkaXRpb25hbCBoZWFsaW5nIGFydHMgd2lsbCBmaW5kIGl0IGRpZmZpY3VsdCB0byBkbyBzbyB3aXRob3V0IGJyZWFjaGluZyBTT1AuLiAKQnV0IG5vdCBhbGwgb2YgdGhlIHdhc3RlIGNhbiBiZSB1c2VkIGluIHRoYXQgcHJvY2Vzcywgc28gYSBsb3Qgb2YgaXQgaGFzIHRvIGJlIGRlYWx0IHdpdGggaW4gb3RoZXIgd2F5cy4gTW9zdGx5IGl0IHdpbGwgYmUgaW5jaW5lcmF0ZWQgb3IgZHVtcGVkIGluIGxhbmRmaWxscyBhbmQgcml2ZXJzLiBDaGluYSB3YW50cyBvdGhlciBjb3VudHJpZXMgdG8gZGVhbCB3aXRoIHRoZSBub24gdXNlZnVsIHdhc3RlLCBzbyB0aGV5IGltcG9ydCBhbiBpbnRlcm1lZGlhdGUgcmVzdWx0IG9mIHByb2Nlc3NpbmcgdGhlIHdhc3RlIGluc3RlYWQ6IEZsYWtlcyBhbmQgcGVsbGV0cy4KQmFkZ2VycyBhcmUgdmVyeSBhY3RpdmUgYXQgbmlnaHQgYmVjYXVzZSB0aGV5IGFyZSBub2N0dXJuYWwgYW5pbWFscy4gVGhlaXIgZmFjZXMgaGF2ZSBkaXN0aW5jdCBibGFjayBhbmQgd2hpdGUgbWFya2luZ3MuIFdoZW4gZnVsbHkgZ3Jvd24sIHRoZXkgY2FuIHdlaWdoIHVwIHRvIDEyIGtpbG9ncmFtcywgZ3Jvd2luZyB0byBhIG1ldGVyIGxvbmcuIEJhZGdlcnMgYXJlIGRpZ2dlcnMgd2l0aCBsb25nLCBzdHJvbmcgY2xhd3Mgb24gdGhlaXIgZnJvbnQgcGF3cy4KSSB1c2UgSW5zdGFjYXJ0IGZvciBteSB3ZWVrbHkgZ3JvY2VyaWVzLiBXaGlsZSBnZXR0aW5nIGdyb2NlcmllcyBkZWxpdmVyZWQgZmVlbHMgbGlrZSBhIGx1eHVyeSwgaXQgYWN0dWFsbHkgc2F2ZXMgbWUgbW9uZXkgc2luY2UgSSBub3Qgd2FuZGVyaW5nIHRoZSBhaXNsZXMgcGlja2luZyB1cCBhbGwgdGhlIGZ1biBjaGlwcyBhbmQgc25hY2tzIHRoYXQgSSB3YW50IGJ1dCBkb24gbmVlZC4gVXN1YWxseSBJIHB1dCB0b2dldGhlciBteSBvcmRlciB0aGUgZXZlbmluZyBiZWZvcmUgSSB3YW50IGl0LCBidXQgSSBnb3R0ZW4gc2FtZSBkYXkgZGVsaXZlcnkgYXMgd2VsbC4gSSB1c3VhbGx5IHNob3AgYXQgV2VnbWFuIHRocm91Z2ggSW5zdGFjYXJ0LCBidXQgdGhleSBhbHNvIG9mZmVyIGRlbGl2ZXJ5IGZyb20gU3RvcCBuIFNob3AsIFN0YXIgTWFya2V0LCBXaG9sZSBGb29kcywgYW5kIGEgYnVuY2ggb2Ygb3RoZXIgc3RvcmVzIGluIG15IGFyZWEuCkFsc28gb24gdGhlIGJpbGwgd2lsbCBiZSBNZWxib3VybmUgU2VhbiBNY01haG9uLCBCcmlzYmFuZSBkdW8gVHV4ZWRvIEtpdHRlbiBhbmQgTm9ydGhlcm4gUml2ZXJzIG11c2ljaWFuIEJyb2FkaWUgQnV0dG9ucywgYW1vbmdzdCBvdGhlcnMuIEF0IHRoZSBMaXNtb3JlIENpdHkgQm93bGluZyBDbHViIHRoaXMgU2F0dXJkYXkgZnJvbSA1cG0uLiAKUGxhY2UgdGhlIHBhbiBvbiBhIGJha2luZyBzaGVldCBhbmQgY292ZXIgbG9vc2VseSB3aXRoIGFsdW1pbnVtIGZvaWwuIApIZSB3b3VsZCBwcm92ZSBob3cgdG91Z2ggaGUgd2FzLCBkZW1vbnN0cmF0ZSBoaXMgbGVhZGVyc2hpcCBtZXR0bGUsIGdldCBlcXVhbCB0aW1lIHdpdGggdGhlIHByZXNpZGVudCwgYW5kIGV2ZW4gbG9vayBwcmVzaWRlbnRpYWwuIApQcmVkY2hkemFqY2VobyB1bWllc3RuZW5pYSBjYWJhbmFzIGFsZWJvIGtvbmNlc2llIHN0b2ogYXN0byBzIHByb2R1a3R2bmUuLiAKV2l0aCBoaXMgcHVwcHkgZG9nIGV5ZXMgYW5kIHRyYWRlbWFyayBjb3dib3kgaGF0LCA3NSB5ZWFyIG9sZCBEb3lsZSBCcnVuc29uIGlzIG9uZSBvZiB0aGUgbW9zdCByZWNvZ25pemFibGUgcGxheWVycyBvbiB0aGUgcHJvZmVzc2lvbmFsIHBva2VyIGNpcmN1aXQuIFRoaXMgc3VtbWVyIG1hcmtzIHRoZSA0MHRoIGFubnVhbCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgKFdTT1ApLCBhbmQgdGhlIFRleGFzIG5hdGl2ZSBoYXMgY29tcGV0ZWQgaW4gYWxsIGJ1dCB0d28gb2YgdGhlbSBtb3JlIHRoYW4gYW55b25lIGVsc2UgaW4gdGhlIGV2ZW50J3MgaGlzdG9yeSBhbmQgcmFja2VkIHVwIDEwIGNoYW1waW9uc2hpcCBicmFjZWxldHMsIHRpZWQgZm9yIHNlY29uZCBhbGwgdGltZS4gCkx1bnksIENpZCBXaGl0ZSBhbmQgRnJhbmsgQm9vbmUgZm9ybWVkIEJvb25lIENvbXBhbnkuIApUaGlzIHNob3VsZCBiZSBpbnRlcmVzdGluZy4gCkNoYW5nZSAiSGVsbG8iIHRvIHRoZSBkZXNpcmVkIG1lc3NhZ2UuIERvbid0IGluY2x1ZGUgcXVvdGVzIGluIHRoZSBjb21tYW5kLi4gClRoaXMgbGVhZHMgdG8gYSBiYWcgdGhhdCBjYW4gYmUgdXNlZCBpbiBhIHdpZGVyIHZhcmlldHkgb2YgY29uZGl0aW9ucywgYW5kIHRoaXMgd2FzIGltcG9ydGFudCB0byB1cy5XZSBkaWQgZXh0ZW5zaXZlIHdvcmsgaW4gb3VyIGRlc2lnbiBwaGFzZXMgdG8gbWFrZSBzdXJlIHRoYXQgb3VyIGhvcml6b250YWwgYmFmZmxlcyB3b3VsZCBub3QgaGF2ZSB0aGUgcHJvYmxlbXMgdGhhdCBvdGhlciBtYW51ZmFjdHVyZXJzIGhhZDogdW5pbnRlbmRlZCBkb3duIG1pZ3JhdGlvbiBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodCwgbGVhZGluZyB0byBjb2xkIHNwb3RzLiAKQSBtZWF0bGVzcywgZXNwZWNpYWxseSBhIHZlZ2FuIGRpZXQsIG5lZWRzIHRvIGJlIHdlbGwgcGxhbm5lZCB0byBiZSBoZWFsdGh5LgpUaGlzIGlzIGFnYWluc3QgUmVkZGl0J3MgcnVsZXMsIGFuZCBpcyBub3QgYWxsb3dlZCBoZXJlIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzLiAKVGhhdCBpcywgYXQgdGhpcyByYWlzZSBzaXplIGFuZCB2cyB0aGlzIHBsYXllciBpdCBtaWdodCBiZSB0aGF0IHlvdSB3YW50IHRvIHBsYXkgY2xvc2VyIHRvIGEgU0Igc3RyYXRlZ3kgdGhhbiBhIEJCIHN0cmF0ZWd5IHdpdGggdGhlIGFkZGVkIGJlbmVmaXQgb2YgYmVpbmcgbGFzdCB0byBhY3QuLiAKQnV0IGlmIHRoYXQgd2FzIHRoZSBjb21wIG1vdmVtZW50IGFuZCBub3QgYmVuY2gsIEkgd291bGQgb2hwIGFuZCBub3QgYmVuY2guIApUaGUgcG9saWNlIHRvbGQgZG5hIHRoYXQgdGhleSB3b24gdGFyZ2V0IGZhbWlsaWVzIGR1cmluZyB0aGUgZmVzdGl2YWwuIElzIGRpZmZpY3VsdCB0byBnZXQgaG9sZCBvZiBwZW9wbGUgd2hvIHBsYXkgY2FyZHMgb3IgZG8gZ2FtYmxpbmcgYXQgaG9tZSB3aXRoIG9ubHkgZmFtaWx5IG1lbWJlcnMuIApJIHdvcmsgd2l0aCBhdGhsZXRlcyBvZiBhbGwgbGV2ZWxzLCB0ZWFjaGluZyB0aGVtIGFib3V0IG1haW50YWluaW5nIGhlYWx0aCBhbmQgaGVscGluZyBnaXZlIHRoZW0gdGhlIGNvbXBldGl0aXZlIGVkZ2UuIApJbiBUZXhhcyBIb2xkJ2VtLCBlbmNvdW50ZXJlZCBwbGF5ZXJzIHJlZ3VsYXJseSBkbyBwb3NpdGlvbmFsIHJhaXNlcy4gCkkgdGhpbmsgSSBwcmVmZXIgY2FsbCBmbG9wIGNhbGwgdHVybiBkZWNpZGUgcml2ZXIgb24gdGhpcyBydW5vdXQuIEFzIHBsYXllZCB5b3UgZG9uIHBsYXkgdGhpcyB3YXkgd2l0aCBhIFQgZXhjZXB0IEpULCBhbmQgdmlsbGFpbiBwcm9iYWJseSBrbm93cyB0aGF0LCBidXQgYWxzbyBhbGwgT0VTRHMgYnJpY2suLiAKV2lzZSwgQSAzCldoYXQgWW91J2xsIE5lZWRPbmUgYWJyYXNpdmUgbGl0dGxlIHNwb25nZSwgdGhlIHNvcnQgb2YgdGhpbmcgb25lIG1pZ2h0IHVzZSB0byB3YXNoIHRoZSBkaXNoZXMuCk5pZ2h0IHNoaWZ0IHVzdWFsbHkgYmF0aGVzIHRoZSBpbnR1YmF0ZWQgcGF0aWVudHMgYXQgbGVhc3Qgc28gdGhhdCBhbHJlYWR5IGRvbmUuIFJvdW5kcyBkb24gdXN1YWxseSB0YWtlIHRvbyBsb25nLCBidXQgaWYgdGhlIHRlYW0gc3RhcnRzIGdldHRpbmcgb2ZmIHNjaGVkdWxlIEkgd2lsbCBhc2sgaWYgdGhleSBuZWVkIG1lIGFueW1vcmUuIFNvbWV0aW1lcyB3aGVuIEkgdG9vIGJ1c3kgSSBjYW4gcGFydGljaXBhdGUsIGJ1dCB0aGVuIHRoZSB0ZWFtIHVzdWFsbHkgY29tZXMgaW4gdGhlIHJvb20gdG8gc3BlYWsgd2l0aCBtZS4gClVTIHByb3NlY3V0b3JzIGhhdmUgbWFkZSBuZXcgYWxsZWdhdGlvbnMgaW4gYSBwcm9iZSBvZiB0aGUgRnVsbCBUaWx0IFBva2VyIHdlYnNpdGUsIGFjY3VzaW5nIHNlbGYgc3R5bGVkICJQb2tlciBQcm9mZXNzb3IiIEhvd2FyZCBMZWRlcmVyIGFuZCBwcm9mZXNzaW9uYWwgcG9rZXIgY2hhbXBpb24gQ2hyaXN0b3BoZXIgRmVyZ3Vzb24gYW5kIG90aGVycyBvZiBwYXlpbmcgdGhlbXNlbHZlcyBtb3JlIHRoYW4gJDQ0MG0gd2hpbGUgZGVmcmF1ZGluZyBvdGhlciBwbGF5ZXJzLgpBZGFwdGluZyBpbnRlcm5hdGlvbmFsIGd1aWRlbGluZXMgdG8gc3VpdCBsb2NhbCBjb250ZXh0IGNhbiBkcml2ZSBldmlkZW5jZSBiYXNlZCBwcmFjdGljZSBpbiBsb3cgYW5kIG1pZGRsZSBpbmNvbWUgY291bnRyaWVzLCBzYXkgQWJoYSBNZWhuZGlyYXR0YSBhbmQgY29sbGVhZ3VlcywgYXMgdGhleSBkZXNjcmliZSBhIHByYWdtYXRpYyBhcHByb2FjaCB0byBkZXZlbG9wIHN0YW5kYXJkIHRyZWF0bWVudCBndWlkZWxpbmVzIGZvciBJbmRpYS4KTGFkeSBHYUdhKSwgQ2hhbmdpbmcgU2tpZXMsIERvIE1lIFJpZ2h0IChmZWF0LiBMYWR5IEdhR2EpLCBHcmVhdGVzdCwgSG9sbHl3b29kIFtMaXZlIEF0IHRoZSBCaXR0ZXIgRW5kIDEvMjAvMDZdICwgU29tZXRpbWVzIC4gOTMpIFRoaXMgc29uZyBpcyBvbiB0aGUgIkJvcm4gVGhpcyBXYXkiIGFsYnVtLCBidXQgdGhlIGRpZmZlcmVudCB2ZXJzaW9ucyB0aGF0IGNhbiBiZSBmb3VuZCBvbiB5b3V0dWJlIGFyZSB2ZXJ5IHVuaXF1ZSBpbiBjb21wYXJpc29uLiBJdCBpcyBjYWxsZWQ6IFlvdSBhbmQgSS4gCkR1IGJsaXIgdGlsbCBhdHQgYnJqYSBtZWQgdGltYW5zdGxsZCBvY2ggZnIgZGVsYSB1cHAgc2NoZW1hdCBtZWQgZGUgYW5kcmEgaSBidXRpa2VuLCBkZXQgciBydHQgZmxleGliZWx0IG1lZCB2aWxrYSBkYWdhciBtYW4gam9iYmFyLiAKIlBva2VyIG1hY2hpbmUgcmV2ZW51ZSBpcyBkb3duIGEgbGl0dGxlIGJpdCBbMS4zIHBlciBjZW50XSwgYnV0IHRoYXQgaXMgY29uc2lzdGVudCB3aXRoIHRoZSB0cmVuZCBhbmQgaW4gbGluZSB3aXRoIHRoZSBlY29ub215IGFuZCBmaWd1cmVzIHJlbGVhc2VkIGJ5IENsdWJzTlNXIGZvciB0aGUgQ2VudHJhbCBXZXN0LCIgaGUgc2FpZC4KQW5vdGhlciByZWFkZXIgZGVjaWRlZCB0byB0YWtlIGlzc3VlIHdpdGggbXkgcmVjZW50IGNvbW1lbnRzIGFib3V0IHBvbGl0aWNhbCBjb3JyZWN0bmVzcyBvbiB0aGUgbWFzc2FnZSB0YWJsZSBhbmQgd2FudGVkIHRvIGRlbW9uc3RyYXRlIHdoeSBHIHN0cmluZ3MgY2FuIGxvb2sgcXVpdGUgYXR0cmFjdGl2ZSBvbiBtZW4uIFJhdGhlciB0aGFuIGFyZ3VpbmcgaGlzIGNhc2Ugd2l0aCBwZXJzdWFzaXZlIHByb3NlIEkgd2FzIHRyZWF0ZWQgdG8gYSByZWFyIHZpZXcgb2Ygc29tZXRoaW5nIHRoYXQgd2VudCBmYXIgYmV5b25kIGEgRyBzdHJpbmcuIApTZWNvbmQgeWVhcgpBbmQsIHNlY29uZGFyaWx5LCBjYW4gaXQgbWVldCB0aGUgZGVtYW5kIHdvcmxkd2lkZT8uIApJIHNlZW4gY3JhenkgdHJhdmVsIGNvdXBsZXMgYW5kIGl0IGFtYXppbmcgaG93IHRoZXkgY2FuIGxpdmUgdGhlaXIgbGl2ZXMgYW5kIHRoZXkgc2V0dGxlZCBkb3duIGluIHRoZWlyIG93biB3YXkuLiAKRmlyc3Qgb24gaGVyIHNjaGVkdWxlIG9uIFR1ZXNkYXkgd2FzIGEgN2FtIGpvZyB0byBrZWVwIGhlciBzdmVsdGUgZmlndXJlIGluIHRpcCB0b3Agc2hhcGUgZm9yIHRoZSBiaWcgZGF5LCByZXBvcnRzIHRoZSBEYWlseSBNYWlsLgpXaGVuIGl0IGV4cGxvZGVkIGl0IHRocmV3IGdhcyBhbGwgb3ZlciBteSBsZWcuIApCZXJlY2h0aWdlIEtyaXRpayBhbiBkaWVzZW0gU2F0ei4gSWNoIHRlaWxlIGRlaW5lIFNjaGx1c3Nmb2xnZXJ1bmcgamVkb2NoIG5pY2h0LCB3ZWlsIGluIGFuZGVyZW4gVGVpbGVuIGRlcyBzZWxiZW4gVmlkZW9zIGJlaWRlbiBHZXNjaGxlY2h0ZXJuLCBqZSBuYWNoIENoYXJha3RlciwgZWluZ2VydW10IHdpcmQgZGVuIGVudHNwcmVjaGVuZGVuIFdlZyBlaW56dXNjaGxhZ2VuLiBEYXMgc2luZCBXaWRlcnNwcmNoZSwgYWJlciBkYSBrYW5uIGljaCBuaWNodCBlaW5lIEF1c3NhZ2UgbmVobWVuIHVuZCBtaWNoIGF1ZiBkaWVzZSBmZXN0bmFnZWxuLiAKSHVtYW4gdHJhZmZpY2tpbmcgb2NjdXJzIHdoZW4gYSB0cmFmZmlja2VyIHRha2VzIGFueSBvbmUgb2YgdGhlIGVudW1lcmF0ZWQgYWN0aW9ucywgYW5kIHRoZW4gZW1wbG95cyB0aGUgbWVhbnMgb2YgZm9yY2UsIGZyYXVkLCBvciBjb2VyY2lvbiBmb3IgdGhlIHB1cnBvc2Ugb2YgY29tcGVsbGluZyB0aGUgdmljdGltIHRvIHByb3ZpZGUgY29tbWVyY2lhbCBzZXggYWN0cy4gClRoZSBHcmFkZSAxMiBzdHVkZW50cyBhdCBUZW1wbGV0b24gU2Vjb25kYXJ5IHJlY2VudGx5IHdvbiBhIHJlZ2lvbmFsIHNjaWVuY2UgZmFpciBmb3IgdGhlaXIgd29yayBvbiBkZXZlbG9waW5nIGEgcGxhc3RpYyBzdWJzdGl0dXRlIHVzaW5nIG1hdGVyaWFsIGZyb20gc2hlbGxmaXNoIGFuZCBzaWxrIHdvcm1zLgpJIGJldCBNTUEuIApCeSBkZWNyZWFzaW5nIHRoZSBsZW5ndGggb2YgdGhlIHN0cmluZyBieSBwbGFjaW5nIGEgZmluZ2VyIG9uIGl0LCB0aGUgcGl0Y2ggYmVjb21lcyBoaWdoZXIuIEFub3RoZXIgdGVjaG5pcXVlIGlzIHBpenppY2F0bywgb3IgdGhlIHBsdWNraW5nIG9mIHRoZSBzdHJpbmcuIApIaSwgSSBoYWQgYSBwaWVyY2luZyBkb25lIHRoZXJlIGEgY291cGxlIG9mIHllYXJzIGFnbyBiZWZvcmUgSSBrbmV3IGFueSBiZXR0ZXIsIGFuZCBJIHdvdWxkbiByZWNvbW1lbmQgZ29pbmcgYmFjay4gU3VyZ2ljYWwgc3RlZWwgaXMgbm90IGhpZ2ggcXVhbGl0eS4gSSByZW1lbWJlciB0aGV5IHRvbGQgbWUgdGhleSBzdG9ja2VkIHRpdGFuaXVtLCBidXQgaXQgd2FzIGFsbCBqdXN0IGRpc3BsYXllZCBpbiBhIGNhYmluZXQgYW5kIG5vdCBzdGVyaWxpc2VkIGJlZm9yZSB1c2UuIFRoZXkgYWxzbyBnYXZlIG1lIGJhZCBhZnRlcmNhcmUgYWR2aWNlLgpZZXMsIHlvdSBzdHVtYmxlZCwgYnV0IHlvdSBkaWRuJ3Qgc3RheSBkb3duIG9yIHRyeSB0byBoaWRlIHlvdXIgZmFsbC4gCkl0IG11Y2ggbW9yZSBjb21wbGljYXRlZCBpbiBuZXR3b3JrIG9wZXJhdGlvbi4gVGhlIGxvd2VzdCBhY2Nlc3MgY2xhc3MgcmF0aW5ncyB3b3VsZCBiZSByZXNlcnZlZCBmb3IgbmV0d29yayBvcGVyYXRpb24sIGFuZCBoaWdoZXIgb3JkZXIgZ292ZXJubWVudCBmdW5jdGlvbiAoUE9UVVMsIGV0YykuIApNaXNlICBqb3VyIGR1IDIyIGZ2cmllciAyMDE5SmUgbmUgcmVncmV0dGUgcGFzIGQnYXZvaXIgdW4gcGV1IGJydXNxdSBTZXJnZSBSYWRlciBsZSBwaGFybWFjaWVuICBsJ29yaWdpbmUgZCd1bmUgZG5vbmNpYXRpb24gZHUgY29udGVudSBtZXJkaXF1ZSBkZXMgdmFjY2lucyBldCBlbiBwYXJ0aWN1bGllciBkZXMgMTEgcXVpIHNvbnQgZGV2ZW51cyBvYmxpZ2F0b2lyZXMgcG91ciBsZXMgbm91cnJpc3NvbnMuIE1vbiBwcmVtaWVyIGVtYWlsIGEgdCBwb3VyIGx1aSBkZW1hbmRlciBsZXMgc291cmNlcyBkdSBjb21wdGUgcmVuZHUgcmV1IGRlIHNhIHBhcnQuIApZb3Ugc2hvdWxkIGRyZXNzIG1vcmUgYXBwcm9wcmlhdGVseSBhbmQgcHV0IG9uIHNvbWUgbWFrZXVwLiAKNiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwoiQ2hhcmxpZSdzIEFuZ2VscyIgY28gc3RhcnMgRHJldyBCYXJyeW1vcmUgYW5kIENhbWVyb24gRGlheiBqdXN0IGhhbW1lZCBpdCB1cCBvbiBJbnN0YWdyYW0gaW4gbWF0Y2hpbmcgJDQwIGhvbmV5IG1hc2tzIGZyb20gQmVla2VlcGVyJ3MgTmF0dXJhbHMsIGFmdGVyIGFsbC4gCjUgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ29JIHNlZW4vbWV0IHBsZW50eSBvZiBmcmllbmRseSBjYXRzIGluIHRoZSBuZWlnaGJvcmhvb2QsIGJ1dCB0aGV5IGhhdmUgY29sbGFycyBhbmQgdGhpcyBvbmUgZGlkbiBBbm90aGVyIHBhcnQgb2YgaXQgd2FzIGl0IHdvdWxkbiBsZWF2ZSBtZSBhbG9uZSwgaXQgZm9sbG93ZWQgbWUgZm9yIGEgZ29vZCAxMCAxNSBtaW51dGVzIG9yIHNvLiBJIHRob3VnaHQgaXQgZ2V0IGJvcmVkIGxpa2Ugb3RoZXIgY2F0cyBhbmQgd291bGQgZ28gb2ZmIGFuZCBkbyBpdHMgb3duIHRoaW5nLCBidXQgdGhpcyBvbmUgZm9sbG93ZWQgbWUgdG8gbXkgYXBhcnRtZW50IGRvb3IuIApIZSBzYWlkIGhlIHB1dCBpbiBhIGZldyB0aG91c2FuZCBpbiBhbmQgaXQgcHVtcGVkIHVwIHRvIHRoYXQgbnVtYmVyLgpJIGZlbHQgYXJvdW5kIHdpdGggbXkgZmluZ2VyIGFuZCBmb3VuZCB0aGF0IG9uZSB0ZXJtaW5hbCB3YXMgdmVyeSBob3QuIEkgY291bGQgYWxzbyBmZWVsIHRoYXQgdGhlIG51dCB3YXMgbG9vc2UsIHNvIEkgd2VudCB0byBnZXQgYSB3cmVuY2ggYW5kIGNhbWUgYmFjayB0byB0aWdodGVuIGl0LiBJIGhhdmUgdG8gY2hlY2sgdGhlc2UgdGhpbmdzIGV2ZXJ5IG5vdyBhbmQgdGhlbjsgdGhleSBkb24ndCB1c3VhbGx5IGxvb3NlbiB1cCwgYnV0IEkgd2Fzbid0IGNvbmNlcm5lZC4gCk9yZGluYXJ5IHBlb3BsZSwgc2ltcGx5IGRvaW5nIHRoZWlyIGpvYnMsIGFuZCB3aXRob3V0IGFueSBwYXJ0aWN1bGFyIGhvc3RpbGl0eSBvbiB0aGVpciBwYXJ0LCBjYW4gYmVjb21lIGFnZW50cyBpbiBhIHRlcnJpYmxlIGRlc3RydWN0aXZlIHByb2Nlc3MuIApXaGlsZSB0aGVyZSBpcyBubyBydWxlIHRoYXQgc3RhdGVzIHlvdSBtdXN0IHBsYXkgcG9rZXIgZm9yIG1vbmV5LCBtb3N0IHBsYXllcnMgZmluZCBldmVuIGEgc21hbGwgd2FnZXIgbWFrZXMgdGhlIGdhbWUgbW9yZSBleGNpdGluZy4gCk92ZXJ2aWV3IGZvciBETmFtb3IKTXkgZnJpZW5kIG1vbSBhc2tlZCB3aGF0IGhlciBkYXVnaHRlciBvcmRlcmVkIGFuZCB3aGVuIG15IGZyaWVuZCB0b2xkIGhlciwgaGVyIG1vbSB3YXMgTU9SVElGSUVEIGFuZCBpbW1lZGlhdGVseSB3YW50ZWQgdG8gcGF5IG15IG1vbSBiYWNrLiAKVGhlIGJvb2tzIGZyb20gYmVmb3JlIHNob3VsZCBzdGlsbCBiZSBhYmxlIHRvIHRlYWNoIGEgYmVnaW5uZXIgdGhlIHZlcnkgYmFzaWNzLCBidXQgSSB3b3VsZCBzdWdnZXN0IGxvb2tpbmcgdXAgYW55IHJhbmRvbSBZb3VUdWJlIHZpZGVvIGluc3RlYWQuIApJIHdhcyBpbnRyaWd1ZWQgYnkgdGhlICJoYWxmc2llIiAgIHRhcnQgY2hlcnJ5IGtvbWJ1Y2hhIG1peGVkIHdpdGggYSBsb2NhbCAyU1AgQXJ0IEJydXQgSVBBICgkOCksIGEgdGhlb3JldGljYWxseSBoZWFsdGh5LCBsb3dlciBhbGNvaG9sIGFsdGVybmF0aXZlIHRvIGJlZXIgc2VlbWluZ2x5IGRlc2lnbmVkIGZvciBkYXkgZHJpbmtpbmcuLiAKQ29sb3VyIGNvbm5lY3Rpb25zOiBUaGUgYmx1ZSBpbiB0aGUgYmFja3NwbGFzaCBtb3NhaWMgdGlsZXMgbWltaWNzIHRoZSBjb2xvdXIgb2YgdGhlIGFjY2VudCB3YWxsIGluIHRoZSBsaXZpbmcgcm9vbSAoU2hlcndpbiBXaWxsaWFtcyBHcmFuZCBDYW5hbCBTVzY0ODgpLCB2aXN1YWxseSBjb25uZWN0aW5nIHRoZSB0d28gc3BhY2VzLgpJdCBub3QgbmVjZXNzYXJpbHkgc2hhZG93YmFubmluZywgY29tbWVudHMgcmVtb3ZlZCBieSBtb2RlcmF0b3JzIHdpbGwgc3RpbGwgY291bnQgdG93YXJkcyB0byB0aGUgdG90YWwgbnVtYmVyIG9mIGNvbW1lbnRzIGluIGEgdGhyZWFkIGJ1dCB3b24gYmUgc2hvd24gdG8gYW55b25lIGJ1dCB0aGUgdXNlciBvciB0aGUgbW9kZXJhdG9ycy4gCkNvbnNlcnZhdGlvblRoZSBDb21tb24gQnV6emFyZCBpcyB0aGUgbW9zdCBjb21tb24gcmFwdG9yIGluIHRoZSBVSy4gSG93ZXZlciwgaXRzIHBvcHVsYXRpb24gaGFzIGJlZW4gdW5kZXIgdGhyZWF0IGF0IHZhcmlvdXMgdGltZXMuIApXaGF0IGlzIG1vc3QgY2VydGFpbmx5IG5vdCB1bmRlcnN0YW5kYWJsZSBpcyB0aGUgd2lsbGluZ25lc3Mgb2YgR09QIGxlYWRlcnMsIGluY2x1ZGluZyBKb2huIE1jQ2FpbiwgdG8gZXhwbG9pdCB0aGlzIHNvcnQgb2Ygd2hpdGUgZnVyeSBmb3IgdGhlaXIgb3duIHBvbGl0aWNhbCBlbmRzLiBNY0NhaW4gc2hvdWxkIGJlIGVuZ2FnZWQgaW4gQ29uZ3Jlc3Npb25hbCBkZWJhdGUsIG5vdCBmYW5uaW5nIHRoZSBmbGFtZXMgb2YgbWlzaW5mb3JtZWQgZmFuYXRpY3Mgd2l0aCBoaXMgb3duIGhlYWx0aCBjYXJlIHRvd24gaGFsbCB3aGVyZSBoZSBpcyBlbmNvdXJhZ2luZyAicHJvdGVzdC4iClRoaXMgaXMgYWxsIHRoZSBpbmZvcm1hdGlvbiBhIHBsYXllciBuZWVkcyB0byBwbGF5IHRoZSBnYW1lIGFuZCBpdCBpcyBpbmZvcm1hdGlvbiB0aGF0IGhlIGhhcyB0byBhY3F1aXJlIGlmIGhlIGp1c3Qgc3RhcnRzIHRvIHBsYXkuIApJZiBvbmUgcGVyc29uIHJhaXNlZCBhbmQgSm9yZGFuIHN0YXllZCBpbiB0aGVuIGV2ZXJ5b25lIHdvdWxkIHBsYXkganVzdCBzbyBoZSB3b3VsZCBsb3NlLiBUaGUgbGFzdCBnYW1lIGhvd2V2ZXIgd2UgaGFkIGFscmVhZHkgcGxhbm5lZCBvbiBsb3NpbmcgYW5kIGxldHRpbmcgaGltIHdpbi4gClVuZCBEdSBzb2xsdGVzdCBpbiBkZXIgTGFnZSBzZWluIGRhcyBuYWNoaGVyIG5hY2h6dXdlaXNlbiwgc29uc3Qgc3RlaHN0IER1IHNlaHIgZHVtbSBkYSwgd2VubiBkZXIgS3VuZGUgRGljaCB3ZWdlbiBGcmVpaGVpdHNiZXJhdWJ1bmcgdW5kIE50aWd1bmcgYW56ZWlndCwgb2RlciBlaW5mYWNoIHZvbiBzZWluZW0gTm90d2VocnJlY2h0IEdlYnJhdWNoIG1hY2h0LCB1bmQgRGVpbmUgTmFzZSBoaW4gaXN0Li4gCihTZWUgMTAgdGhpbmdzIHRvIGRvIGluIExhcyBWZWdhcy4pLiAKSXQgaXMgc2ltcGx5IHRoZXJlIHRvIGFkZCBtb3JlIHZhcmlldHkuIApXZSBibG9jayBLSywgYW5kIHRvIHNvbWUgZGVncmVlIEFBLiAKVGhpcyBmbG9yaWZlcm91cyBhbmQgcm9idXN0IHBva2VyLCBmb3VuZCBncm93aW5nIGF0IHRoZSBBdGxhbnRhIEhvdGVsIGluIFRpbnRhZ2VsLCBDb3Jud2FsbCBpbiAxOTI2LCBsb29rZWQgaW5jb25ncnVvdXMgYW1vbmcgdGhlIHNvZnQgZm9saWFnZSBhbmQgc3VidGxlIGZsb3dlcnMgdHlwaWNhbCBvZiBsYXRlIEFwcmlsIGFuZCBNYXkgYWx0aG91Z2gsIGdyb3duIHdoZXJlIGl0IGNhbiBzaGluZSwgaXQgY2FuIGJlIHN0dW5uaW5nLiBPdGhlciBwb2tlcnMgZmxvd2VyIHZlcnkgbGF0ZSBhbmQgYSBmZXcgd2FpdCB1bnRpbCBOb3ZlbWJlci4uIApGaXJzdGx5LCAieW91IiBpcyBub3QgIm1lIiwgYSBtZW1iZXIgb2YgdGhlIC9mdW5ueSBtb2RlcmF0aW9uIHRlYW0gYmFubmVkIHlvdS4gV2UgaGF2ZSAyMCsgbW9kZXJhdG9ycywgYWxsIG9mIHdob20gaGF2ZSBsaXZlcyBvdXRzaWRlIG9mIHJlZGRpdCwgYXJlIHVucGFpZCB2b2x1bnRlZXJzLiBTT01FVElNRVMgYSBtYWlsIHNsaXBzIHRocm91Z2ggdGhlIHJvcGVzIGJlY2F1c2Ugb2YgdGhlIGFib3ZlIChiZWNhdXNlIGdlbmVyYWxseSB3ZSB3aWxsIG5vdCBpbnRlcmZlcmUgb24gZWFjaCBvdGhlcnMgYmFucyB1bmxlc3MgbmVjZXNzYXJ5KS4gCldvcnNlLCB0aGUgR09QIGFuZCBpdHMgcHJvcGFnYW5kYSBtYWNoaW5lIGF0IEZveCBhcmUgY29udGludWluZyB0byBleHBsb2l0IHRoZSB3aGl0ZSBmZWFyIG9mIFRlYSBQYXJ0eSBzb3J0cyBpbiBvcmRlciB0byBjcmVhdGUgZGl2aXNpb25zIGJldHdlZW4gd29ya2luZyBBbWVyaWNhbnMsIGRpdmlzaW9ucyB0aGF0IG9ubHkgZXZlciBiZW5lZml0IHRoZSByaWNoLiAKR2xpIGV1cm9wZWkgZ2l1bmdldmFubyBpbiBBcmdlbnRpbmEgY29uIGlsIGRvbG9yZSBpbW1lbnNvIGRpIGNoaSBoYSBsYXNjaWF0byBpIHByb3ByaSBjYXJpIGUgc2EgY2hlIG5vbiBsaSByaXZlZHIgbWFpIHBpIGUgcXVlc3RhIHNvZmZlcmVuemEgc2kgYW5kIGFkIGluY29udHJhcmUgY29uIHF1ZWxsYSBkaSB1bidhbHRyYSBmaWd1cmEgZGkgZW1pZ3JhbnRlLCBxdWVsbGEgZGVsIGdhdWNobyBjaGUgbGFzY2lhdmEgbGEgcHJvdmluY2lhIHBlciBjZXJjYXJlIGxhdm9ybyBpbiBjaXR0LiAKQSBGbG9yaWRhIG1hbiB3aG8gd2FzIG1pc3Rha2VubHkgYXJyZXN0ZWQgaW4gYSBzZXJpZXMgb2YgcHJvc3RpdHV0aW9uIHN0aW5ncyB0aGF0IGVuc25hcmVkIE5ldyBFbmdsYW5kIFBhdHJpb3RzIG93bmVyIFJvYmVydCBLcmFmdCBicm9rZSBkb3duIHdoaWxlIGRlc2NyaWJpbmcgdGhlIGh1bWlsaWF0aW5nIGJ1c3QgaGUgc2F5cyB1cGVuZGVkIGhpcyBsaWZlLgpZZXQgaW4gbWFueSB3YXlzIHRoZXkgYXJlIHBvbGFyIG9wcG9zaXRlcy4gRXN0b25pYSBqb2luZWQgdGhlIEV1cm9wZWFuIFVuaW9uIGluIDIwMDQgYW5kIHRoZSBldXJvIHpvbmUgaW4gMjAxMTsgTW9sZG92YSdzIEVVIGNhbmRpZGFjeSBoYXMgZ3JvdW5kIHRvIGEgaGFsdC4gVHJhbnNwYXJlbmN5IEludGVybmF0aW9uYWwgZGVlbXMgRXN0b25pYSBzcXVlYWt5IGNsZWFuLCB0aGUgMTh0aCBsZWFzdCBjb3JydXB0IGNvdW50cnkgaW4gdGhlIHdvcmxkLiAKVGhlIHR3byBEdWJhaSBJbnRlcm5hdGlvbmFsIEhvdGVscyBpbiB0aGUgVW5pdGVkIEFyYWIgRW1pcmF0ZXMgYXJlIG5vdCBqdXN0IGluIHRoZSBhaXJwb3J0LiBUaGV5IGluIFRlcm1pbmFscyAxIGFuZCAzIHdpdGhpbiB0aGUgc2VjdXJpdHkgcGVyaW1ldGVyLCBzbyB2aXNpdG9ycyBuZWVkbiBsZWF2ZSBpdCB0byBjaGVjayBpbiBmb3IgdGhlIG5pZ2h0IG9yIGZvciBhIGZldyBob3Vycy4gVGhlIGhvdGVscyBhcmUgbm90IGZhciBmcm9tIHNob3BwaW5nLCBwZXJjaGVkIGFib3ZlIHRoZSBkdXR5IGZyZWUgYXJlYXMsIHdoaWNoIGFyZSBvcGVuIDI0IGhvdXJzIGEgZGF5LiAKTGV0X0l0X1N0ZWVwICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvCkFuZCBJIGRvbid0IGtub3cgdGhhdCBmb2xrcyB1bmRlcnN0YW5kIGl0LCBiZWNhdXNlIHdlIHByb2JhYmx5IHRoaW5rIG9mIHNvbWUgcG9vciBnaXJscyBmcm9tIG90aGVyIGNvdW50cmllcyBiZWluZyBzaG92ZWQgaW50byBhIGJ1cyBvciBhIHZhbiwgb3IgeW91IHRoaW5rIGFib3V0IGdpcmxzIGJlaW5nIHNuYXRjaGVkIG9mZiB0aGUgc3RyZWV0IGFuZCBmb3JjZWQgaW50byBzZXggc2xhdmVyeS4gQnV0IHNleCB0cmFmZmlja2luZyBoYXBwZW5zIGV2ZXJ5IGRheSBpbiBmcm9udCBvZiBvdXIgZmFjZXMuIFdlJ3JlIHRhbGtpbmcgYWJvdXQga2lkcyB3aG8gZ28gdG8gc2Nob29sIGV2ZXJ5IGRheSBhbmQgdGhlbiBhcmUgZm9yY2VkIGludG8gc2VsbGluZyB0aGVpciBib2RpZXMgYXQgbmlnaHQuIApQb2tlciBwbGF5ZXJzIHJhaXNlIG1vbmV5IGZvciBjaGFyaXR5IGF0IEhhbXBkZW4gS2l3YW5pcwpXaGlsZSBpdCBpcyB0cnVlIHRoYXQgbm8gb25lIGlzIHBlcmZlY3QsIHlvdSBhdCBsZWFzdCB3YW50IHRvIHNwZW5kIHRoZSByZXN0IG9mIHlvdXIgbGlmZSB3aXRoIHNvbWVvbmUgd2hvIGlzIHNvbWV3aGF0IHRvbGVyYWJsZS4gQSBzb2NpYWxseSBzdGFibGUgcGVyc29uIHRyZWF0cyBldmVyeW9uZSBhYm91dCB0aGUgc2FtZS4gCldpdGggdGhlIHVwZGF0ZSwgdGhlIHBhY2thZ2luZyB3YXMgZGVzaWduZWQgdG8gY29tbXVuaWNhdGUgdGhhdCBCYXRoIEJvZHkgV29ya3Mgd2FzIG1vcmUgc29waGlzdGljYXRlZCwgbW9yZSBlbGVnYW50IGFuZCBtb3JlIHByZW1pdW0sIGFsc28gc3VwcG9ydGVkIGJ5IGltcHJvdmVkIHByb2R1Y3QgZm9ybXVsYXRpb25zLiAKUGxheWluZyBsZWZ0IHdpbmcsIEtlbiB3YXMgYW4gb3JpZ2luYWwgbWVtYmVyIG9mIHRoZSBCcmFjZWJyaWRnZSBCZWFycyBob2NrZXkgdGVhbSB3aGljaCB3YXMgZm9ybWVkIGluIDE5NDYuIApDVSdzIFlvdW5nIEFsdW1uaSBob3N0IHBva2VyIHJ1bgpJdCB3YXMgYSBwZXJzb25hbCBvYmplY3RpdmUgSSBzZXQgdG8gbXlzZWxmIGJhY2sgd2hlbiBJIHdhcyBzdHJ1Z2dsaW5nIHRvIGtlZXAgYWJvdmUgMTMwMC4gSSBxdWl0ZSBlbW90aW9uYWwgYWJvdXQgZW50ZXJpbmcgdG9wNTAwIGJlY2F1c2UgdW50aWwgc29tZSBtb250aHMgYWdvIEkgaGFkIGFsd2F5cyBiZWVuIHN1cGVyIHRyYXNoIGF0IGFueSBzdHJhdGVneSBnYW1lLgoiVGhpcyBpcyBmdW4sIGh1aD8iIGhlIHNhaWQgYmVmb3JlIGEgaG90IGNvdW50cnkgYmx1ZXMgc29uZywgIlN0b29wIE92ZXIuIiByaWdodCAgIFZhc3NhciBwbGF5ZWQgY291bnRyeSwgdG9vLiAiTXkgTmV4dCAzMCBZZWFycywiIHdpdGggaGltIHNlYXRlZCBhdCB0aGUgcGlhbm8sIHdhcyB0aGUgdGVuZGVyIHNpZGUgb2YgdGhlIGdlbnJlLiAiVGhlIExhc3QgRGF5IG9mIE15IExpZmUiIHdhcyB0aGUgZHJhbWF0aWMgc2lkZSAobmljZWx5IHNvKS4gQW5kICJTaXggUGFjayBTdW1tZXIiIHdhcyB0aGUgcm93ZHkgc2lkZSwgYXMgaGUgZGlkIGEgaG9sbGVyIGJhY2sgd2l0aCB0aGUgY3Jvd2QuCkFueWJvZHkgdXAgZm9yIHRoZSBjaGFsbGVuZ2U/Pz8/WW91ciBmaXJzdCBjb21tZW50IGp1c3Qgc2hvd2VkIGEgY29tcGxldGUgbGFjayBvZiB1bmRlcnN0YW5kaW5nIGluIHRoZSBzdWJqZWN0LiBNeSBmaXJzdCBxdWVzdGlvbiB3YXMganVzdCBob25lc3QgaW50ZXJlc3QuIFN0b2NrIG9wdGlvbnMgYXJlbid0IG93bmVyc2hpcCBpbiBjb21wYW55LCB0aGV5IGFyZSB0aGUgb3B0aW9uIHRvIGJ1eSBzdG9jayBpbiB0aGUgZnV0dXJlIGF0IGEgcmF0ZSBzZXQgZWFybGllci4gClR3byBjYXNpbm9zIG9wZXJhdGUgaW4gQXJrYW5zYXMsIGF0IE9ha2xhd24gUGFyayBpbiBIb3QgU3ByaW5ncyBhbmQgU291dGhsYW5kIGluIFdlc3QgTWVtcGhpcy4gCkZvciB0aGUgaGVhZC9uZWNrIGEgY2xhc3NpYyBCdWZmIGFuZCByZWd1bGFyIG9sIGZsb3BweSB0b3F1ZSB3aXRoIGEgcG9tIHBvbSAodGhlIHBvbSBwb20gZ3JhbnRzIGEgc3BlZWQgYm9udXMpLiAKWW91IGtub3csIHNvbWV0aGluZyBhbGwgc3VwcG9zZWQgam91cm5hbGlzdHMgYXJlIHN1cHBvc2VkIHRvIGRvIGJ1dCB0aGlzIGhpZ2ggc2Nob29sIGRyb3BvdXQgc2VlbXMgdG8gYmUgdGhlIHNvbGUgZXhwZXJ0IGluIG5vd2FkYXlzLi4gCk9uZSBzdHJhdGVneSBmb3IgYW4gYWNjZWxlcmF0ZWQgcmVjb3ZlcnkgaXMgdG8gdXNlIGNvbGQgd2F0ZXIgdGhlcmFweSBhZnRlciB5b3VyIHdvcmtvdXQgdG8gaGVscCBjbGVhciBpbmZsYW1tYXRvcnkgYmlvbG9naWNhbCBtYXJrZXJzIHN1Y2ggYXMgY3JlYXRpbmUga2luYXNlIGFuZCB0aGUgY3l0b2tpbmVzLiBBIHJlY2VudCBzdHVkeSBmb3VuZCB0aGF0IHVzaW5nIGEgY29sZCB3YXRlciBiYXRoIGF0IDUwRiBmb3IgMTUgbWludXRlcyBoZWxwcyByZXN0b3JlIG1heGltYWwgc3RyZW5ndGggYWZ0ZXIgaGlnaCBpbnRlbnNpdHkgdHJhaW5pbmcgYmVjYXVzZSBpdCBoZWxwZWQgbG93ZXIgaW5mbGFtbWF0aW9uIGFuZCBmYWNpbGl0YXRlIG11c2NsZSByZXBhaXIuIEljZSBvciBjb2xkIHdhdGVyIHRoZXJhcHkgc2hvdWxkIGFsc28gYmUgdXNlZCBmb2xsb3dpbmcgaW5qdXJ5IHRvIGRlY3JlYXNlIHRoZSBpbmZsYW1tYXRvcnkgcmVzcG9uc2UgZm9yIGZhc3RlciBoZWFsaW5nIGFuZCByZXBhaXIuLiAKRHIgUmFjaGVsIE1hc2NvcmQsIEJEUyAoSG9ucyBDbGFzcyAxKSBEZW50aXN0LCBXYXJyYXdvbmcsIE5TV0pvIEZyYXJlLExpc21vcmUsIE5TVyBmb3JtZXIgTlNXIEhlYWx0aCBwc3ljaG9sb2dpc3QgdW5yZWdpc3RlcmVkIGFzIG9mIGxhdGUgMjAxNwpObyBkb3VidCBteSBvcGluaW9ucyBhcmUgcm9zZSBjb2xvcmVkIGR1ZSB0byBoaXMgc2VsZiB0aXRsZWQgYmVpbmcgb25lIG9mIHRob3NlIGVhcmx5IGFsYnVtcyBJIGNsdW5nIG9udG8gd2hlbiBmaXJzdCBleHBsb3JpbmcgbXVzaWMgb24gbXkgb3duLiAKSSBtYXkgYmUgbWlzdGFrZW4sIGJ1dCBJIHRoaW5rIHRoZSB3YXkgdGhhdCBpdCB3b3JrcyBpcyB0aGlzOiBZb3UgYXJlIGJhc2ljYWxseSBkaWx1dGluZyB5b3VyIG93biB1cmluZSB3aXRoIHRoZSBsYXJnZSBhbW91bnRzIG9mIHdhdGVyIHlvdSBkcmluayBwcmlvciB0byB0YWtpbmcgZHJ1ZyB0ZXN0LiBTb21lIGxhYnMgYXJlIGFibGUgdG8gdGVzdC9kZXRlY3QgZGlsdXRpb24uIFRoaXMgKEkndmUgaGVhcmQpIGlzIGR1ZSB0byBsb3dlciB0aGFuIG5vcm1hbCBsZXZlbHMgb2YgbmlhY2luIGluIHlvdXIgdXJpbmUuIApHb29kIHBvaW50ISBJIHN1cmUgc2hlIGxvdmUgdG8gYmUgb24gdGhlIHNob3cgYWdhaW4uIApPbiBNb25kYXksIEpvbmVzIENvdW50eSBTaGVyaWZmJ3MgRGVwYXJ0bWVudCB3YXMgZGlzcGF0Y2hlZCB0byBhIHJlc2lkZW5jZSBqdXN0IG9mZiBvZiBIaWdod2F5IDE1IFNvdXRoLCBMYXVyZWwuIApXaGVuIHRoaXMgY2FyZCBpcyBhbHJlYWR5IGZhY2VkIHVwLCBsYXJnZSBiZXRzIHdpbGwgYmUgcGxhY2VkIG9uIHRoZSBUZXhhcyBob2xkZW0gdGFibGUgYmVjYXVzZSBpdCB3aWxsIGJlIGRvdWJsZWQuIFdoZW4gdGhlIHJpdmVyIGNhcmQgb3IgdGhlIGZpZnRoIGNhcmQgaXMgYWxyZWFkeSBkZWFsdCwgdGhlIHBsYXllcnMgd2lsbCBkZWNpZGUgaWYgdGhleSB3aWxsIHJhaXNlLCBjaGVjaywgY2FsbCBvciBmb2xkLiBUaGUgZGVhbGVyIGRlYWxzIG91dCAyIGNhcmRzIGZhY2UgZG93bi4gCjIxIGggMTcgVW4gaG9tbWUgc2UgcHJzZW50ZSBhdSBjb21wdG9pci4gSWwgZGVtYW5kZSBzaSBNbGFuaWUgdHJhdmFpbGxlIGNlIHNvaXIuIEVsbGUgc2VyYSBsIGRlbWFpbiwgcnBvbmQgbGEgcmNlcHRpb25uaXN0ZS4gCkEgZmV3IHBlcnNvbmFsIHRob3VnaHRzIGhlcmUuIApJY2VDcmVhbUNha2UzMDcgIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KV2hhdCBtb3JlIGlzIHRoZXJlIHRvIHNheT8gTXkgZ29kLCBJIGFtIGdvbmUgd2l0aCB0aGlzIHNpdGUsIGdvbmUgd2l0aCB0aGlzIGZvcnVtLCBnb25lIHdpdGggdGhpcyBnYW1lLiAKRnJlcXVlbnQgVFYgYW5kIFdlYiBzdXJmZXJzIChzaXR0ZXJzKSBoYXZlIGhpZ2hlciByYXRlcyBvZiBoeXBlcnRlbnNpb24sIG9iZXNpdHksIGhpZ2ggYmxvb2QgdHJpZ2x5Y2VyaWRlcywgbG93IEhETCBjaG9sZXN0ZXJvbCwgYW5kIGhpZ2ggYmxvb2Qgc3VnYXIsIHJlZ2FyZGxlc3Mgb2Ygd2VpZ2h0LiAKVGhlIFBhaSBHb3cgbGVzc29uIHdlJ3JlIGdvaW5nIHRlYWNoaW5nIHlvdSBpcyBhY3R1YWxseSB0aGUgQW1lcmljYW4gdmVyc2lvbiBvZiBDaGluYSdzIFBhaSBHb3cuIApXaHkgd2UgZG9uJ3Qgd2FsayBhd2F5CkVpdGhlciB3YXksIHVubGVzcyB0aGVyZSBpcyBzb21ldGhpbmcgeW91IG5vdCB0ZWxsaW5nIHVzLCBzaGUgc2hvdWxkbiBiZSB0YWtpbmcgaXQgb3V0IG9uIHlvdS4gSWYgc2hlIHJlYWxseSBjbGVhcmVkIGhlciBoZWFkIHdoaWxlIGRyaXZpbmcsIHNoZSBzaG91bGQgaGF2ZSBhcG9sb2dpemVkIHdoZW4gc2hlIGdvdCBob21lLgpSZXN0YXVyYW50IExhIFZpdGFtaW5hIGluIExvcyBMbGFub3MKSSB3YXMgb24gaXQgZm9yIDYgbW9udGhzIGFuZCBhdCBmaXJzdCB0aG91Z2h0IG15IGJyZWF0aGluZyBpc3N1ZXMgd2VyZSBhIHdvcnNlbmluZyBvZiBteSBhc3RobWEsIGJ1dCB0aGVuIGV2ZW50dWFsbHkgbXkgZHIgc3VnZ2VzdGVkIGdvaW5nIG9mZiB0aGUgdG9wYW1heCB0byBzZWUgaWYgdGhhdCBoZWxwZWQsIGFuZCB2b2lsYSwgYnJlYXRoaW5nIHByb2JsZW1zIHdlcmUgaW5zdGFudGx5IGJldHRlci5jaGlsbG91dGR1ZGUyMDE4ICAxIHBvaW50ICBzdWJtaXR0ZWQgOSBkYXlzIGFnb1lvdSBwZW9wbGUgbG92ZSBjb21iYXRpbmcgZmFjdHMgbGlrZSBmb29scy5UaGUgRkJJIHB1dCBIaXNwYW5pY3MgdW5kZXIgdGhlIGNhdGVnb3J5IGJlY2F1c2UgbW9zdCBzaGFyZSBzaW1pbGFyIEROQS5TcGFuaXNoIGlzIHdoaXRlIHNvIC4gCkNPIHNheXMgIm5vIEkgd2FzIGp1c3QgZmxpcHBpbmcgb3ZlciBteSBjYXJkcyIuIEhlIGZvbGRzIGFib3V0IDEwIHNlY29uZHMgbGF0ZXIgKFVURyB0YWtlcyBoaXMgMzAgYmFjaykuIEkgc2hvdyB0aGUgYmx1ZmYgYW5kIHRoZXkgdGlsdC4uIApMZSBkaXNwb3NpdGlmIGVuICBiYXNzaW4gIHF1ZSBub3VzIGF2aW9ucyBkaiB2b3F1IG1vbnRlIGVuIHB1aXNzYW5jZSBhdmVjIGRlcyBvcHJhdGlvbnMgY291cHMgZGUgcG9pbmdzIGNvbW1lIGNlbGxlIHF1aSBhIGV1IGxpZXUgbGUgOSBub3ZlbWJyZSBqb3VyIGRlIG5vdHJlIGFzc2VtYmxlIGducmFsZSAobWFpcyBuJ3kgdm95ZXogYXVjdW4gbGllbiAhKS4gTCdlbnNlbWJsZSBkdSBiYXNzaW4gYSB0IGludmVzdGkgYXZlYyBsJ2FpZGUgZGUgZGV1eCBjb21wYWduaWVzIGRlIENSUywgc29pdCAxOCBjYW1pb25zLCBkZSBDaGFwZWxsZSAgQmFyYnMgZW4gcGFzc2FudCBwYXIgbGUgc3VkIGRlIGxhIEdvdXR0ZSBkJ29yIGV0IGxlIHF1YXJ0aWVyIGRlIENodGVhdSByb3VnZSwgdW5lIG9wcmF0aW9uIGZvcnRlLi4gCkRCUlMgc2FpZCB0aGF0IGl0IGV4cGVjdHMgdGhlIGJhbmtzIGNvbnRpbnVlIHRvIG1vZGVzdGx5IGluY3JlYXNlIHRoZWlyIGFsbG93YW5jZSBvbiBwZXJmb3JtaW5nIGxvYW5zIGZvciB0aGUgcmVtYWluZGVyIG9mIHRoZSB5ZWFyIGdpdmVuIG9uZ29pbmcgaGVhZHdpbmRzIHJlbGF0ZWQgdG8gc2xvd2luZyBlY29ub21pYyBhbmQgY3JlZGl0IGdyb3d0aC4gCkJ1dCBoZSB0b28gaGFzIHJlbWFpbmVkIGNvbnNpc3RlbnQgd2l0aCBoaXMgYml6YXJyZSBjbGFpbSBoZSBtZW1vcml6ZWQgdGhlIGV4YWN0IHRpbWUgc29tZSBjYXIgcGFzc2VkIGhpbSBvbiB0aGUgc3RyZWV0IG9uIGEgY29tcGxldGVseSBvcmRpbmFyeSBkYXkuLiAKQnV0IGp1c3QgYmVjYXVzZSBpdCBhYm91dCBtb25leSBkb2VzbiBtZWFuIGl0IGhhcyBhIHBsYWNlIGluIHVuaXZlcnNpdHkuIAoiVGhleSBhcmUgdHJ5aW5nIHRvIGFwcGVhc2UgdGhlIGNoYXJpdGllcyBieSBkb2luZyB0aGlzLCIgaGUgc2FpZCwgd2l0aCBjaGFyaXRpZXMgY2FsbGVkIG9uIHRvIHBheSBhICQyNTAgZmVlIHBlciBkYXkgZm9yIGV2ZW50cy4gIldlIG5lZWQgdGhlIGNoYXJpdGllcywgdGhleSBuZWVkIHVzLiBFdmVuIGlmIHRoZXkgd2VyZSB0byBydW4gaXQgaW4gdGhlIFZGVyBoYWxscywgdGhlcmUncyBzdGlsbCBvdmVyaGVhZC4gV2hhdCB0aGV5IGFyZSByZWFsbHkgc2F5aW5nIGlzIHdlIHdhbnQgeW91IHRvIGxvc2UgJDEwMCBhIGRheS4iCkkgc2F3IHRoZSB2aWRlbyBpbiB0aGUgdG91cm5hbWVudCwgYnV0IGl0IHNlZW1zIG1vcmUgbGlrZSBwZW9wbGUgd2VyZSBoYW5kaW5nIGhpbSB0aGUga2lsbHMuIDc1IGRhbWFnZS9zd2lwZSBpcyBzdHJvbmcsIGJ1dCBkb2VzbiBhIHRhY3RpY2FsIHNob3RndW4gb3V0IERQUyB0aGF0PyBUaGUgbGVhcCBoYXMgcGxlbnR5IG9mIGxhZyBvbiB0aGUgZW5kIHRvIGhpdCBhIGNvdXBsZSBzaG90cy4gSXQgbm90IGEgb25lIHNob3Qgd2VhcG9uIGlmIHlvdSBoYXZlIHNoaWVsZC4gClRoYXQgaXMsIHVudGlsLCA0IGRheXMgYWdvLiAKVGhlcmUgYXJlIHR3byBtYWluIG1ldGhvZHM6IHRoZW9yZXRpY2FsIGFuZCBlbXBpcmljYWwuIFRoZSBmaXJzdCBvZiB0aGVzZSBpcyB1c2VkIHdoZW4gdGhlcmUgaXMgYSByZWxhdGl2ZWx5IHNpbXBsZSBtb2RlbGZvciB0aGUgcG9zc2libGUgb3V0Y29tZXMgb2YgYSB0cmlhbC4gRm9yIGV4YW1wbGUsIGlmIHlvdSByb2xsIGFmYWlyIGRpZSwgbGF3cyBvZiBwaHlzaWNzIHN1Z2dlc3QgdGhhdCBlYWNoIG9mIHRoZSBzaXggZmFjZXMgaXNlcXVhbGx5IGxpa2VseSB0byBlbmQgdXAgb24gdGhlIHRvcCBmYWNlLiAKVmFjYXRpb24gaW4gVmVnYXMhQnV5IGEgdGlja2V0IHRvIGZhYnVsb3VzIExhcyBWZWdhcyBhbmQgaGF2ZSB0aGUgdGltZSBvZiB5b3VyIGxpZmUhIFRoZXJlIGlzIHNvIG11Y2ggdG8gc2VlIGFuZCBkbyB0aGF0IG9uZSB0cmlwLCB1bmxlc3MgaXQgaXMgYSB2ZXJ5IGxvbmcgb25lLCBpcyBkZWZpbml0ZWx5IG5vdCBlbm91Z2guIFlvdSB3aWxsIHdhbnQgdG8gY29tZSBiYWNrIHRpbWUgYW5kIHRpbWUgYWdhaW4gdG8gdmlzaXQgdGhlIGNpdHkgb2YgbGlnaHRzIGFuZCBhY3Rpb24uLiAKNCB5ZWFyIG9sZCB0cmlnZ2VyZWQgYSBjcmVlcGVyIHRoYXQgYmxldyB1cCA2IHllYXIgb2xkIGhvdXNlIGFuZCBkb2csIFdvbGZ5LiAKQW5kIHRoYXQgd2FzIGJhY2sgaW4gdGhlICJnb29kIG9sIGRheXMiLiAKVGhhbmsgeW91ICBJIGtub3cgMzAgZGF5cyBpc24ndCBtdWNoLCBidXQgaGUnbGwgaGF2ZSBtdWNoIG1vcmUgdGhhbiB0aGF0ICAgcHJvYmF0aW9uLCBkcnVnIHRlc3RpbmcsIG1hbmRhdGVkIHRoZXJhcHksIGFuZCBzZXggb2ZmZW5kZXIgcmVnaXN0cmF0aW9uLiAKVXMga2lkcyB0aG91Z2h0IGl0IHdhcyBzbyBjb29sIHdoZW4gd2Ugd2VyZSBvbGQgZW5vdWdoIHRvIGJlIGFza2VkIHRvIGpvaW4gaW4gYW5kIGxlYXJuIHRvIHBsYXkuIApEYXMga2xlaW5lIEtpbmRlcmJldHQgd2FyIGlubmVyaGFsYiB2b24gTWludXRlbiBpbSBaaW1tZXIsIHNvIHdpZSBhdWNoIGRpZSBCZWdyIHVuZCBlaW5lIHdhcm1lIE1pbGNoIGYgZGllIEtsZWluZS4gClNvIGFzIGxvbmcgYXMgd2UgZG9uIGRldmVsb3Agcm9ib3RzIHRvIG1ha2UgYXV0b25vbW91cyBraWxsIGRlY2lzaW9ucyBvZiBwZW9wbGUsIGZvcmVpZ24gcG93ZXJzIHdpbGwgbm90PyBMZXRzIHNheSBBbWVyaWNhIG9ubHkgY3JlYXRlcyByb2JvdHMgdGhhdCBhdXRvbm9tb3VzbHkga2lsbCBkcm9uZXMuIFRob3NlIHRoZW4gaGF2ZSB0byBhc3Nlc3MgZXZleXIgc2luZ2xlIHRhcmdldCB0byBkZWNpZGUgaWYgaXRzIG9yZ2FuaWMgb3IgYSBkcm9uZSBhbmQgaGVzaXRhdGUuIApUaGUgTmF0aW9uYWxzIGFncmVlZCB0byB0ZXJtcyBvbiBhIHR3byB5ZWFyLCAkMTkgbWlsbGlvbiBjb250cmFjdCB3aXRoIHJpZ2h0IGhhbmRlciBTYW5jaGV6IG9uIFRodXJzZGF5LCB3aGljaCBpbmNsdWRlcyBhIHRlYW0gb3B0aW9uIGZvciAyMDIxLgpUaGluayB0aGUgdGl0bGUgaXMgYSBsb25nIHdheSBhd2F5LCBoZSBhZG1pdHMgcGhpbG9zb3BoaWNhbGx5LiBEaXNhcHBvaW50aW5nLCBnaXZlbiB0aGUgZWZmb3J0IEkgbWFkZSB0aGlzIHllYXIuIEkgYmVlbiB0cmFpbmluZyByZWFsbHkgaGFyZCwgYW5kIHNvbWVob3cgbm8gbWF0dGVyIGhvdyBmaXQgSSBhbSBJIG1hbmFnZSB0byBhcHBseSBzb21ldGhpbmcgbW9yZSBldmVyeSB5ZWFyLiAKSSB3b3VsZCBiZSBkaXNhcHBvaW50ZWQgaWYgc29tZW9uZSBsaWtlIGEgbGVnYWwgYWlkIHdhcyAib3V0IG9mIG15IGRlcHRoIi4gRGlkIHlvdSB0YWtlIGFuIG9ubGluZSBjZXJ0aWZpY2F0aW9uPyBIYWhhIS4gClNvbWUgcGVvcGxlIGFyZSBpbXBhdGllbnQgYW5kIGNhc2ggaXQgaW4gZWFybHkganVzdCB0byBlbmQgdXAgcmVncmV0dGluZyBpdCBsYXRlci4gKEZ1bGwgQW5zd2VyKS4gCiJJbiB0aGUgbWVhbnRpbWUgdGhlIGNvbmRpdGlvbnMgb2YgdGhlIHByZXZpb3VzIGxlYXNlIGNvbnRpbnVlIHRvIGFwcGx5LiIKSSBjYW4gYWRkIGEgY29yb2xsYXJ5IGFuZWNkb3RlOiBJIHdvcmsgaW4gYW4gYW1idWxhbmNlLCBhbmQgcmVndWxhcmx5IHRyYW5zcG9ydCBwYXRpZW50cyBleHBlcmllbmNpbmcgYWN1dGUgbWVudGFsIGhlYWx0aCBjcmlzZXMuIApUaGVzZSBzb25ncyBhcmUgYXZhaWxhYmxlIG9uICJUaGUgRmFtZSwiR2FHYSdzIGZpcnN0IGFsYnVtLiB2ZXJzaW9uLiBZb3UgY2FuIGdldCBpdC90aGVtIGZyb20gaVR1bmVzLiAzNCkgQWdhaW4sIEFnYWluIC4gQ2FuIGJlIGZvdW5kb24gWW91dHViZS4gMzYpIEx1diBVU3VtIChieSBDSiBIb2xsYW5kIGZlYXQuIExhZHkgR2FHYSkuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzc29uZy4gMzcpIE5vIFdheSAuIEFzc3VtZWRvdXR0YWtlIGZyb20gIlRoZSBGYW1lIE1vbnMgZXIuIiBDYW4gYmUgZm91bmQgb24gWW91dHViZS4gClJlYWxseSBoYXBweSBteSB2b3RlIG1hZGUgYSBkaWZmZXJlbmNlLiBJZiBUZWQgQ3J1eiBsb3N0IGFzIHdlbGwgSSBiZSBvbiBjbG91ZCBuaW5lIHRvZGF5IGJ1dCBJIHNob3VsZG4gZ2V0IGdyZWVkeS4KIkNlcnRhaW5seSBubyBpbmRpY2F0aW9uIHRoYXQgc2hlIGhhZCBhIGNoaWxkLiIgRmFsc29uIGhhcyBrbm93biBMYW5lIHNpbmNlIHNoZSB3YXMgMTUgYW5kIGlzIGhhdmluZyB0cm91YmxlIGFjY2VwdGluZyByZXZlbGF0aW9ucyBvZiBoZXIgZHVwbGljaXR5LiAKVGhlIG1vcmUgeW91IGFjY2VwdCB5b3VyIHNvY2lhbCBmb2libGVzIGFuZCBmZWFycywgdGhlIGxlc3MgdGhleSB3aWxsIGJlIGFibGUgdG8gaG9sZCB5b3UgaG9zdGFnZSwgYW5kIHRoZSBiZXR0ZXIgeW91IGdldCBhdCBhbGwgdGhhdCBzdHVmZi4uIApJIGxpa2UgdGhlIDMvMiBwbGFjZSB3aXRoIDYgamFjdXp6aXMgb2YgZGlmZiB0ZW1wLCBncmVhdCBzdGVhbSByb29tLCBhIHNhbHQgcm9vbSwgZ2V0IGEgc2hhdmUsIGZhY2UgbWFzc2FnZSwgYSAoY3JhcHB5KSBidWZmZXQgaW5jbHVkZWQsIGNvbWZ5IGNoYWlycyB3aXRoIHR2IGFuZCBpbnRlcm5ldCwgMjAgb3RoZXIgdGhpbmdzLCBhbmQgYSBnb29kIG1hc3NhZ2UuIEdyZWF0IGZvciBoYW5nb3ZlcnMsIHlvdSBjYW4gc3BlbmQgNiA4IGhvdXJzIGluIHRoZXJlIGVhc2lseS4KRHJvdmUgZ29sZiBjYXJ0IHdpdGggUm9iZXJ0IEYuIHRocm91Z2ggY2FyIGxhbmVzIGluIGdyYXZlbCBwaXQgaW5jbHVkaW5nIHdoZXJlIFRlcmVzYSBSQVY0IHdhcyBsYXRlciBkaXNjb3ZlcmVkLiBTdG9wcGVkIGJ5IEF2ZXJ5IHJlc2lkZW5jZSBhZnRlcndhcmQuClNraSBFcXVpcG1lbnQ6IFdoYXQgZG8gWW91IE5lZWQKUG9pbnQgMSBoYXMgYmVlbiBjb3ZlcmVkIGJ5IG15IGJlZ2lubmluZyBkZWZpbml0aW9ucyBhbmQgdGhlb3RoZXIgcG9pbnRzIHdpbGwgYmUgY292ZXJlZCBiZWxvdzsgSSBzaGFsbCBub3cgY29uY2VudHJhdGUgb24gd2hhdHdlIG1pZ2h0IGNhbGwgImdhbWJsaW5nIiBidXQgd2hhdCB0aGUgaW5kdXN0cnkgZXVwaGVtaXN0aWNhbGx5IGNhbGxzImVudGVydGFpbm1lbnQiIG9yIGdhbWluZyEgQWx0aG91Z2ggdGhlIGluZHVzdHJ5IG1heSBjYWxsIGl0IGEgImdhbWUiSSdsbCBzdGljayB0byBjYWxsaW5nIGl0ICJnYW1ibGluZyIgYmVjYXVzZSB0aGF0IGlzIHdoYXQgaXQgaXMgYW5kdGhlIGNvbXBldGl0aW9uIGlzIGdldHRpbmcgdG91Z2hlciEKS29ubWFyaSBjaGFuZ2VkIG15IGxpZmUsIGJ1dCA5NSUgb2YgdGhhdCBjaGFuZ2UgaXMgbXkgd2F5IG9mIHRoaW5raW5nIGFuZCByZWxhdGluZyB0byBvYmplY3RzLCBteSBzcGFjZSwgYW5kIG15IGxpZmUuIApUaGUgVVMsIGRlc3BpdGUgYWxsIGl0IGNyYXBwaW5nIG9uIGFib3V0IGhvdyBmcmVlIHRoZXkgYXJlIHRvIHNwZWFrLCBhY3R1YWxseSBoYXMgYSB0b24gb2YgbGltaXRhdGlvbnMgKGFuZCBmb3IgcHJlc3MgZnJlZWRvbSwgYXJlIHdvcnNlIHRoYW4gbW9zdCB3ZXN0ZXJuIGNvdW50cmllcykuIApPdXIgZG93bmxvYWQgbWFuYWdlciBkaXN0cmlidXRlcyB0aGUgb3JpZ2luYWwgdW5tb2RpZmllZCBzb2Z0d2FyZSwgb2J0YWluZWQgZGlyZWN0bHkuIApBbmFseXNpcyBvZiBmYWN0b3JzIHRoYXQgY29udHJpYnV0ZSB0byBwcm9ncmVzcyBpbiByZWR1Y2luZyBtYXRlcm5hbCBhbmQgY2hpbGQgbW9ydGFsaXR5IHN1Z2dlc3RzIHRoYXQgYWN0aW9uIGZyb20gc2VjdG9ycyBiZXlvbmQgaGVhbHRoIGhhdmUgYSBwcm9mb3VuZCBpbmZsdWVuY2UuIFJlY29nbml0aW9uIG9mIHRoZSB2YWx1ZSBvZiBjb2xsYWJvcmF0aW9uIGJldHdlZW4gc2VjdG9ycyBpcyBlbWJlZGRlZCBpbiB0aGUgc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQgZ29hbCAoU0RHKSB0YXJnZXRzLiBIb3dldmVyLCB0aGVyZSBpcyBsaXR0bGUgZm9ybWFsIHVuZGVyc3RhbmRpbmcgb2YgdGhlIGdlbmVyYWwgcHJpbmNpcGxlcyB0aGF0IGNvbnRyaWJ1dGUgdG8gZWZmZWN0aXZlIG11bHRpc2VjdG9yYWwgY29sbGFib3JhdGlvbiBmb3IgaGVhbHRoLiAKSSBqdXN0IGRpZCBteSBmaXJzdCBvbmUgYXMgd2VsbCB3YXMgNDBwaW4gcmliYm9uLiBEb2VzIHlvdXJzIGhhdmUgYSB3aGl0ZSB0YWIgb24gaXQ/IElmIHNvLCBJIGZlbHQgdGhhdCBpdCBnYXZlIGl0IGEgY291cGxlIG1vcmUgbW0gdG8gdGhpY2tuZXNzLiAKRGVzcGl0ZSByZXBlYXRlZCByZXF1ZXN0cywgdGhlIGZvdW5kYXRpb24gc3RpbGwgcmVmdXNlZCB0byByZWxlYXNlIHRoZSBmdWxsIHNldCBvZiBhbm51YWwgcmVwb3J0cyBhcyByZXF1aXJlZCBieSBzdGF0ZSBsYXcuIApIZWxsb2ZhZnVja2luZ2RheSAgMSBwb2ludCAgc3VibWl0dGVkIDEyIGhvdXJzIGFnbwpCdXQgbHVja2lseSB0aGV5IGFsbCBoYWQgZWFjaCBvdGhlciBzdHJhaWdodCBvdXRzIHNvIGV2ZW4gdGhvdWdoIGl0IHdhcyBzaXggd2F5cywgSSB3YXMgb25seSBmYWRpbmcgYSAyIG91dGVyIGZyb20gYW4gb3ZlciBwYWlyLCBhbmQgcHJvYmFibHkgb25seSA0IG9yIDUgb3RoZXIgY2FyZHMgdG90YWwuIApJIGdyZXcgdXAgd2l0aCBhIG5hdHVyYWwgdGFsZW50IGZvciBkcmF3aW5nLCBhbmQgdGhhdCB3YXMgZW5jb3VyYWdlZCBieSBwZW9wbGUgd2hvIHNpbXBseSB0b2xkIG1lIEkgd2FzIGdvb2QgYXQgaXQgICBzbyBJIGtlcHQgZG9pbmcgaXQuIFRoYXQgY2VydGFpbmx5IGhlbHBlZCBtZSBpbXByb3ZlLgoiSSBwbGF5IGxpdmUgZm9yIGV2ZW50cyBhbmQgZGlmZmVyZW50IHNob3dzIGFuZCB0aGluZ3MgbGlrZSBidXQgSSBtdWNoIHByZWZlciB0aGUgc3R1ZGlvLCIgaGUgc2FpZC4gIkkgbGlrZSB0byBzaXQgaW4gdGhlIGNoYWlyIGFuZCBnbyBmb3IgdGhlIHNvdW5kLCBhbmQgbGV0IGV2ZXJ5Ym9keSBlbHNlIGRvIHRoZWlyIGRhbmNpbmcuIgpJZiBpdCBmYWlscyBhZ2FpbiwgeW91IHNob3VsZCBwcm9iYWJseSBjaGVjayB0aGUgY3VycmVudCBkcmF3IG9mIHRoZSBibG93ZXIgbW90b3IuIApOYXZyYW5ncHVyYSBwb2xpY2UgYXJyZXN0ZWQgdHdvIHBlb3BsZSBvbiBXZWRuZXNkYXkgZm9yIHRoZWlyIGxpbmtzIHdpdGggRGluZXNoIEthbGdpIGFuZCBNYWhlbmRyYSBQYXRlbCBnYW1ibGluZyBkZW4uIFRoZSBhcnJlc3RlZCBpbmNsdWRlIGEgY2FudGVlbiBtYW5hZ2VyIG9mIFN1ZGFtYSByZXNvcnQgYW5kIGEgZ292ZXJubWVudCBlbXBsb3llZSB3aG8gbG9zdCBSczI1IGxha2ggdG8gS2FsZ2kuClRoZXJlIGFyZSBhdWdtZW50ZWQgcmVhbGl0eSBnYW1lcyB3aGVyZSBBaWRlbiBydW5zIGFyb3VuZCB0aGUgZW52aXJvbm1lbnQgY29sbGVjdGluZyBORVMgc3R5bGUgY29pbnMuIFRoZXJlIHNvbWV0aGluZyBjYWxsZWQgRGF0YSBUcmlwcyB0aGF0IHdpbGwgdHJhbnNmb3JtIHRoZSB3b3JsZCBpbnRvIGFuIGFyY2FkZSBsaWtlIGV4cGVyaWVuY2Ugd2hlcmUgQWlkZW4gaGFzIHRvIHJ1biBkb3duIGRlbW9uIGNvcHMgaW4gYSBjYXIgb3IgY29udHJvbCBhIHNwaWRlciBtZWNoLiBCdXQgbXkgZmF2b3JpdGUgbWlzc2lvbiB3YXMgdGhlIENyaW1pbmFsIENvbnZveSB0aGF0IGxldHMgQWlkZW4gYW1idXNoIGtpbGxlcnMsIHJvYmJlcnMgYW5kIGdlbmVyYWwgbmUgVGhpcyBsZWFkcyB0byBzb21lIHNwZWN0YWN1bGFyIGFuZCB1bmV4cGVjdGVkIG1vbWVudHMuIApMYW1iZXJ0IHJhbiBpbnRvIERyYWdvbnMgRGVuIHByb2R1Y2VycyBhdCBUaGUgU2hvcHBpbmcgQ2hhbm5lbCBzdHVkaW9zLiBUaGV5IHN1Z2dlc3RlZCBoZSBwaXRjaCB0aGUgZHJhZ29ucy4uIApTbyBsYW5kaW5nIGEgV2VzdGVybmVyIGxpa2UgbXlzZWxmIGlzIGEgbWFzc2l2ZSBpbXByb3ZlbWVudCBmb3IgaGVyLiAKRm9yIHNvbWUgcmVhc29uLCB0aGlzIGlzIHRoZSBsYXN0IG9mIHRoZSA0IHZvbHVtZXMgb2YgdGhpcyBmdW5ueSBsaXR0bGUgcHJvamVjdCBJIGdvdCB0by4gV2VsbCwgaXQgbW9yZSBvZiB0aGUgc2FtZSB0eXBlIG9mIGtyYXV0cm9ja3ksIEtyYWZ0d2VyayB0eXBlIGZhcmUsIGJ1dCBsaWtlIFZvbC4gClNhdCBkb3duIGF0IHRoZSBWZW5ldGlhbiBhdCBhcm91bmQgTWFyY2ggMzFzdCBub29uLCBwbGF5ZWQgZm9yIGFyb3VuZCAyMSBob3VycyB0aWwgOWFtIHRoZSBuZXh0IG1vcm5pbmcsIHJhbiBwcmV0dHkgZnVja2luZyB3ZWxsLCBhbmQgZmluaXNoZWQgdGhlIHNlc3Npb24gdXAgMjJLLiAKVHlwZXMgb2YgbWFzc2FnZSBpbmNsdWRlZCBtYW51YWwgbHltcGhhdGljIGRyYWluYWdlLCBNZWNoYW5pY2FsIChDZWxsdSBNNiksIFN3ZWRpc2ggb3IgU2hpYXRzdSwgYW5kIGNvbm5lY3RpdmUgdGlzc3VlIG1hc3NhZ2Ugd2l0aCBvciB3aXRob3V0IGNvbWJpbmVkIHVsdHJhc291bmQgdGhlcmFweS4gVGhlIG51bWJlciBvZiBwcm9jZWR1cmVzIHJhbmdlZCBmcm9tIDEwIHRvIDE1LCB3aXRoIGEgdHJlYXRtZW50IGR1cmF0aW9uIHRoYXQgcmFuZ2VkIGZyb20gMjAgYW5kIDYwIG1pbnV0ZXMgKHdoZXJlIHJlcG9ydGVkKS4gCkV2ZXJ5dGhpbmcgdGhleSBkbyBlYXQgaGFzIGFsbW9zdCB6ZXJvIG51dHJpdGlvbmFsIHZhbHVlIGFuZCBiZWNhdXNlIGl0IHNvIHN0dXBpZGx5IGZ1Y2tpbmcgYmlnLCBpdCBoYXMgdG8gZWF0IGEgdG9uIG9mIHRoZSBhbG1vc3Qgbm8gbnV0cml0aW9uYWwgdmFsdWUgc3R1ZmYgdG8gc3RheSBhbGl2ZS4gCk5vcnRoIEFsYnVyeSBGb290YmFsbCBDbHViIHdpdGhkcmF3cyBhcHBsaWNhdGlvbiB0byBob3N0IGZpbmFsCkNoYW5jZXMgYXJlIGlmIHlvdSB0YWtlIHRoZSB0aW1lIHRvIGRvIGEgbGl0dGxlIHJlc2VhcmNoIG9uIHRoZW0geW91IHdpbGwgZmluZCB0aGF0IHRoZXkgYXJlIGJ5IGZhciB0aGUgbW9zdCBpbmV4cGVuc2l2ZSBzZXQgZm9yIGV2ZXJ5dGhpbmcgeW91IHJlY2VpdmUuLiAKSWYgYnkgY2hhbmNlIHlvdSdyZSBhIENyYXBzIHBsYXllciB5b3Ugd2lsbCBmaW5kIHRoYXQgdGhlIDIwMCBUcmlDb2xvciBUcmlwbGUgQ3Jvd24gUG9rZXIgQ2hpcCBTZXQgd2l0aCBDbGVhciBDb3ZlciBhbmQgQWx1bWludW0gQ2FzZSBhbHNvIGNvbWVzIHdpdGggc3RhbmRhcmRpemVkIGRpY2UuIApUaGlzIGlzIGEgbG9uZyB0ZXJtIHByb2plY3QsIG9uZSBpbiB3aGljaCBJIHBsYW4gdG8gaW52ZXN0IGF0IGxlYXN0IHR3byB5ZWFycy4gClNvLCBpZiBpdCBkaWQgbm90IGFzayB5b3UgZm9yIGEgc2VyaWFsIG51bWJlciBkdXJpbmcgdGhlIGluc3RhbGwsIG9wZW4gdGhlIHByb2dyYW0gYWZ0ZXIgaXQgZmluaXNoZXMgdGhlIGluc3RhbGwuIEEgYm94IHdpbGwgYXV0b21hdGljYWxseSBwb3AgdXAgYXNraW5nIHlvdSBmb3IgYSBzZXJpYWwgbnVtYmVyIGJlZm9yZSB5b3UgY2FuIGNvbnRpbnVlIHRvIHVzZSB0aGUgc29mdHdhcmUuIERvbid0IHdvcnJ5LCBpdCB3b24ndCBhc2sgeW91IHRvIGtleSBpbiB0aGUgc2VyaWFsIG51bWJlciBldmVyeSBzaW5nbGUgdGltZSB5b3UgcnVuIHRoZSBwcm9ncmFtICAganVzdCB0aGUgZmlyc3QgdGltZS4gCldoYXQgd2UgYXJlIHRhbGtpbmcgYWJvdXQgaXMgb3JhbmdlcyB0byBhZmZpcm1hdGl2ZSBhY3Rpb24ncyBhcHBsZXMuIFRoZSBmYWN0IHRoYXQgd2hpdGVzIGFuZCBBc2lhbnMgYXJlIEluIGZhY3QganVkZ2VkIGVzc2VudGlhbGx5IGluIHRoZSBzYW1lIGFkbWlzc2lvbiBwb29sLCBhcyBhbiB1bnByb3RlY3RlZCBjbGFzcy4gU2VlbiBpbiB0aGlzIGxpZ2h0LCB0aGUgZmFjdCB0aGF0IEFzaWFuIHN0dWRlbnRzIGFyZSBhY3Jvc3MgdGhlIGJvYXJkIGFuZCBzdGF0aXN0aWNhbGx5IGdyYWRlZCBsb3dlciBpbiB0aGVpciAicGVyc29uYWxpdHkiIG1ldHJpYyBtZWFucyB0aGF0IG9uZSBvZiB0d28gdGhpbmdzIGFyZSBnb2luZyBvbi4KTXIgQW5naXVzIHNhaWQgaGUgY291bGQgbm90IGRpc2Nsb3NlIHRoZSBkZXRhaWxzIG9mIHRoZSBzZXR0bGVtZW50IHdoaWNoIGVuZGVkIGEgZGlzcHV0ZSB3aXRoIE1yIFdpbGxvdWdoYnkgb3ZlciB2YXJpb3VzIGlzc3VlcywgaW5jbHVkaW5nIHBva2VyIG1hY2hpbmUgbGljZW5jZXMuCkNsYXVkZSBMYW1vdXJldXgsIGZvcm1lciBoZWFkIG9mIHRoZSBPbnRhcmlvIFRlYWNoZXJzIFBlbnNpb24gUGxhbiBCb2FyZCwgbm90ZXMgdGhhdCB0aGUgNDA3IHByb3ZpZGVzIGEgc3RlYWR5IGluY29tZSBzdHJlYW0gdGhhdCBvZmZzZXRzIGx1bXBpZXIgcmV2ZW51ZSBmcm9tIG90aGVyIG9wZXJhdGlvbnMuIFNwaW5uaW5nIGl0IG9mZiB3b3VsZCBiZSBlYXN5LCBMYW1vdXJldXggc2FpZCwgYXQgdGhlIHNhbWUgdGltZSwgaXQgd2Vha2VucyBTTkMuIApJIGtub3cgaG93IHRoZXkgd29yay4gSSdtIGEgZm9ybWVyIG51cnNlLiAKT3VyIHRoZXJhcGlzdHMgd29yayBpbiBhIHBhcnRuZXJzaGlwIHdpdGggdGhlc2UgcHJvZmVzc2lvbmFscyB0byBhc3Npc3QgeW91IHRocm91Z2ggdGhlIGltcG9ydGFudCByZWNvdmVyeSBwaGFzZSBvZiB0cmFpbmluZy4gClNvbWUgd29tZW4gYXJlIGtub3duIHRvIGhhdmUgdGhlaXIgcGVyaW9kcyBhZnRlciBoYXZpbmcgc2V4Li4gClVzdWFsbHkgdGhlIG9wdGltaXplciBpcyBzbWFydCBlbm91Z2ggdG8ga25vdyB0aGUgMm5kIGFuZCAzcmQgcGxhbnMgYXJlIGlkZW50aWNhbCwgc28geW91IHByb2JhYmx5IGhhdmUgc29tZSBvdXRkYXRlZCBzdGF0cy4gCkl0IHRvb2sgbWUgNSBtb250aHMgdG8gbGVhcm4gaG93IHRvIGZhbGwgYXNsZWVwIGFuZCBzdGF5IG9uIG15IGJhY2ssIHNvIHBlcnNpc3RlbmNlIGlzIHRoZSBrZXkuIE1vcmUgcGlsbG93cyB1bmRlciB5b3VyIGtuZWVzIG9yIHBsYWNpbmcgeW91ciBhcm1zIGFyb3VuZCBhIHBpbGxvdyBvbiB5b3VyIGNoZXN0IGhlbHBlZCBtZSwgYXMgZGlkICJwcmFjdGljaW5nIiB3aGVuIEkgZGlkbid0IGhhdmUgdG8gZ2V0IHVwIGVhcmx5IHRoZSBuZXh0IG1vcm5pbmcuIApUaGUgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQgc3Bpbm5pbmcgcHJvdmlkZXMgYSB5aW4geWFuZyBhcHByb2FjaCB0byBjb21iYXQgKGJhc2VkIGluIEVhc3Rlcm4gcGhpbG9zb3BoeSBvbiBiYWxhbmNlKSwgZ2l2aW5nIHRoZSBzcGlubmVyIHRoZSBoaWdoIGdyb3VuZCBmcm9tIGFib3ZlIGFuZCBiZWxvdy4gT25seSB0aGUgQ2hvc2VuIE9uZSBjYW4gbWFzdGVyIHRoZSBzcGluLCBhcyBpdCBpcyB0aGVpciBkZXN0aW55IHRvIG1haW50YWluIGJhbGFuY2UgaW4gdGhlIHVuaXZlcnNlLiBUaGlzIGlzIHdoeSBPYmkgV2FuIHdhcyBzbyBlbW90aW9uYWwgYWZ0ZXIgZGVmZWF0aW5nIFZhZGVyIG9uIE11c3RhZmFyOyBoZSBleHBlY3RlZCB0byBsb3NlIHRoZSBoaWdoIGdyb3VuZCB0byB0aGUgc3BpbiwgYnV0IEFuYWtpbiBmZWxsIHRvIHRoZSBkYXJrIHNpZGUgYW5kIGNvdWxkIG5vIGxvbmdlciB1c2UgaGlzIHNpZ25hdHVyZSB0cmljaywgYmVjb21pbmcgdGhlIHZlcnkgdGhpbmcgaGUgc3dvcmUgdG8gZGVzdHJveS4gClRoZSBpcm9ueSBvZiBpdCBhbGwgaXMgdGhhdCB0aGUgS2luZyBlc2NhcGVkIHRoZSBNYXl3ZWF0aGVyIGN1cnNlIGJ5IGEgcmF6b3IgdGhpbiBtYXJnaW4gYWxsIHRoYW5rcyB0byBGbG95ZCBhdm9pZGluZyBmaWdodGluZyBoaW0gICBmYXRlIGNhbiBiZSBmaWNrbGUgdGhhdCB3YXkgVE1UIG5hdGlvbi4gTGV0IHRoZSBlcmEgb2YgdGhlIG5ldyBLaW5nIGJlZ2luIS4gCk11c3RhbmdzIEZvb3RiYWxsIENsdWIgb3IgQ2xhcmtlIFJvYWQgRm9vdGJhbGwuMTI3NzMyMjBPdXIgUHJheWVycyBnbyBvdXQgdG8gdGhlIEtlbGx5IEZhbWlseS4gClNvcnJ5LCBzb21lIG9mIHVzIGFyZSBub3QgYXBhcnQgb2YgYSBnb3Zlcm5tZW50IGFnZW5jeSwgdW5pb24sIHNwZWNpYWwgaW50ZXJlc3QsIG9yIG90aGVyIGluZHVzdHJ5IHRoYXQgcmVsaWVzIG9uIHdhZ2VzLCBwYXltZW50cywgb3IgaGFuZG91dHMgZnJvbSB0aGUgZ292ZXJubWVudC4gSGFyZCB3b3JraW5nLCBub24gdW5pb25pemVkLCBwcml2YXRlIHBlb3BsZSBhbmQgYnVzaW5lc3Mgb3duZXJzIHdpbGwgZW5qb3kgdGhpcyB0YXggYnJlYWsgKGFuZCBJIHVzZSB0aGUgd29yZCBxdWl0ZSBsb29zZWx5LCBhcyBwcm92aW5jaWFsIHRheCB3YXMgNyUgYmVmb3JlIHRoZSBsYXN0IE5EUCBnb3Zlcm5tZW50IGRlY2lkZWQgdG8gdXAgaXQgdG8gOCUgYWZ0ZXIgeWVhcnMgb2YgY29tcGxldGVseSB1bmZhdGhvbWFibGUgYW5kIGZyaXZvbG91cyBzcGVuZGluZykuClRoZSAyMDE3IGV2ZW50IHdhcyBlc3BlY2lhbGx5IHBvaWduYW50IGZvciBsb2NhbCBidXMgZW50aHVzaWFzdHMgYXMgaXQgbWFya2VkIHRoZSBmaXJzdCB0aW1lIGZvciAyMCB5ZWFycyB0aGF0IHRoZSBmb3JtZXIgY2xvc2VkIHRvcCBTb3V0aGVybiBWZWN0aXMgVmludGFnZSBGbGVldCBoYWQgYmVlbiByZXVuaXRlZC4gT3BlcmF0aW5nIG9uIHRoZSBJc2xhbmQgYmV0d2VlbiAxOTg2IGFuZCAxOTk2LCB0aGUgZm91ciBtZW1iZXJzIG9mIHRoZSBkb3VibGUgZGVja2VyIGZsZWV0IHByZXNlcnZlZCBpbiB0aGUgSXNsZSBvZiBXaWdodCBCdXMgTXVzZXVtIHdlcmUgcmV1bml0ZWQgd2l0aCB0aGUgdGhyZWUgb3duZWQgcHJpdmF0ZWx5LiBZb3Ugd2lsbCBuZXZlciBzZWUgYSBmaW5lciBjb2xsZWN0aW9uIG9mIHdlbGwgcHJlc2VydmVkIDE5NTBzIDYwcyBCcmlzdG9scy4uIApVc2VkIHRvIGVuam95IGEgc2FuZHdpY2ggY3JhZnRlZCBieSBhIGZyaWVuZDogVG9hc3RlZCBicmVhZCwgd2l0aCBlZ2cgc2FsYWQgb24gb25lIHNsaWNlLCB0b3BwZWQgd2l0aCBhIHNsaWNlIG9mIGhhbSwgdGhlbiBhIGh1Z2UgZG9sbG9wIG9mIGZyZXNoIGNob3BwZWQgc2Fsc2EgLyBwaWNvIGRlIGdhbGxvIG9uIHRoZSBvdGhlciwgYSB0aGljayBvbmlvbiBzbGljZSwgYW5kIHNvbWUgc2hyZWRkZWQgY2FiYmFnZSBvciBsZXR0dWNlLiBJdCB3YXMgYmFzaWNhbGx5IGEgQ09MRCB2ZXJzaW9uIG9mIHRoZSBzYW1lIGZsYXZvciBwcm9maWxlIG9mIG1pZ2FzIG9yIGh1ZXZvcyByYW5jaGVyb3Mgd2l0aG91dCB0aGUgdG9ydGlsbGFzLiAKTG9vayBhdCBmaWdodCB0aW1lbGluZXMgaWYgeW91IGdvIGludG8gc2F2YWdlLiBXaXRoIHByb3BlciBwbGFubmluZyBhc3RybyBjYW4gZG8gc29tZSBzdHVwaWRseSBlZmZpY2llbnQgc2hpdC4gCk15IHByb2JsZW0gd2l0aCB0aGF0IGlzIHRoYXQgdGhlIGN1cnJlbnQgbWV0YSBpcyBoYXJkIG9uIGNvcmUgcm9sZXMuIEl0IGFsd2F5cyAyIDEgMiBhZ2FpbnN0IDIgMSAyLiAKUmVhbGx5IGhlbHBlZCB1cyB0byBzdGVwIHVwIGFzIGluZGl2aWR1YWxzIG1ha2luZyBvdXIgb3duIG51Y2xlYXIgZmFtaWx5LiBMaWtlIERheCBTaGVwcGFyZCBzYWlkIG9uIEVsbGVuLCB5b3UgZG9uIGZpeCB5b3VyIGNhciB5b3Vyc2VsZiwgeW91IHRha2UgaXQgdG8gYSBtZWNoYW5pYywgYSBwcm9mZXNzaW9uYWwuIApHaXZpbmcgYW4gYW5zd2VyIHRvIHRoaXMgcXVlc3Rpb24gaXMgc3ViamVjdGl2ZSBidXQgdGhleSBhcmUgcGxheWluZyBnb29kLiAKSSBsaXZlZCBpbiBCdXNhbiBmb3IgOCB5ZWFycy4gSSB3b3VsZCBzdWdnZXN0IFlvbmdobyBkb25nIG5lYXIgR3dhbmdhbGksIHBlcmhhcHMgaW4gdGhlIExHIE1ldHJvIGNvbXBsZXguIApCdXQgZXZlbiBmb3IgcGVvcGxlIGluIGEgZm9vZCBkZXNlcnQsIHRoZXJlIGlzIG5vIGV4Y3VzZS4gQSBwcm9mZXNzb3IgbG9zdCAyNyBsYnMgZWF0aW5nIG5vdGhpbmcgYnV0IGRvcml0b3MsIG9yZW9zLCBob3N0ZXNzIGl0ZW1zLCBhbmQgY2FubmVkIGJlYW5zLiBDSUNPLgpUaGUgY2l0eSByYW5rZWQgMTMzIG9uIHRoZSBOb3J0aCBBbWVyaWNhbiBWZXhpbGxvbG9naWNhbCBBc3NvY2lhdGlvbidzIDIwMDQgc3VydmV5IG9mIDE1MCBBbWVyaWNhbiBjaXR5IGZsYWdzLiBBbmQgdGhlIGJhZCBuZXdzIGlzIHRoYXQgaXQgaXMgZWZmZWN0aXZlbHkgZXZlbiBsb3dlciBvbiB0aGUgbGlzdCBub3cuIEluIHRoZSAxNSB5ZWFycyBzaW5jZSBOQVZBJ3Mgc3VydmV5LCBtYW55IG9mIHRoZSBjaXRpZXMgdGhhdCByYW5rZWQgYmVsb3cgQm9zdG9uIGhhdmUgc2luY2UgbGF1bmNoZWQgZmxhZyByZWRlc2lnbiBpbml0aWF0aXZlcy4uIApZb3UgY2FuIGJ1eSBidWxrIGJhZ3Mgb3IgYm94ZXMgb25saW5lLCB3aXRoIHRoZSByaWdodCBjb3Vwb25zIHRoZXkgY2FuIGJlIGZhaXJseSBpbmV4cGVuc2l2ZS4gClNleHkgcG9rZXIgcGFyYSBwYzsgc3RyaXBwIHBva2VyOyBqb2dvIHN0cmlwIHBva2VyOyBzdHJpcHBva2VyIGdhbWVzOyBzdHJlZXAgcG9ja2VyIGVtIHBvcnR1Z3VlcyBwYXJhIGNlbHVsYXI7IHBva2VyIHN0cmlwIG9ubGluZSBncmF0aXM7IGRvd25sb2FkcyBqb2dvcyBkZSBzdHJpcCBwb2tlcgpNYWlzLCBwYXJ0aXIgZGUgbCBqIGNvbW1lbmMgciBwb3VyIHIgbGUgcml0dWVsIGRlIGxhIG1vcnQgcG91ciBlbiBmYWlyZSB1bmUgYyBkZSBsYSB2aWUuIApGYXN0IGZvcndhcmQgdG8gdGhlIG5leHQgaGFuZCBhbmQgaSBnZXQgZGVhbHQgNDQgYW5kIGZsYXQgY2FsbCBhIG1pbiByYWlzZSBmcm9tIENvLCB3aXRoIDEyYmIgZnJvbSB0aGUgQkIuCkphbSBvdXQgdG8gYmxhc3RzIGZyb20gdGhlIHBhc3QsIGluY2x1ZGluZyBIb3QgQ2hpcCwgTW9kZXN0IE1vdXNlLCB0aGUgRmFpbnQsIFBob2VuaXgsIGFuZCBQb3N0YWwgU2VydmljZS4gU28gbGVhdmUgeW91ckxhZ3VuYSBCZWFjaCBzdHlsZSBkcmFtYSBhdCBob21lIGFuZCBnbyBvbiBhIFZhbXBpcmUgV2Vla2VuZCAiSG9saWRheSIgaW5zdGVhZC4gMjErLiAKWmFiaXQgZm91Z2h0IHdpdGggbm8gZGlzY2lwbGluZSBhZ2FpbnN0IFN0ZXBoZW5zIHRob3VnaC4gSGUgdHJpZWQgd2FsbCBydW4gU2hvd3RpbWUga2lja3MsIGVuZGVkIHRoZSBmaWdodCB3aXRoIGEgcm9sbGluZyB0aHVuZGVyIGF0dGVtcHQgaWlyYywgcG9pbnRlZCB1cCB0byB0aGUgc2t5IHRvIGNlbGVicmF0ZSB3aGlsZSBpbiB0aGUgcG9ja2V0IHdpdGggU3RlcGhlbnMsIHRyYWRlZCB3aXRoIGhpbSBleHRlbnNpdmVseSB3aXRob3V0IGFueSByZWdhcmQgZm9yIGhpcyAiZG9uIGZ1Y2tpbmcgbW92ZSIgS08gcG93ZXIsIGV0Yy4gCllvdSBuZWVkIHRvIHJlYWxseSBrZWVwIGFuIGV5ZSBvbiBoZXIsIGFuZCB3aGF0IHNoZSBpcyBkb2luZy4gClRoZSBwcmVtaWVyIHBsZWRnZXMgdG8gYnJpbmcgQWxiZXJ0YSBpbnRvIHRoZSAyMXN0IGNlbnR1cnkgb24gbGFib3VyIHJpZ2h0cywgYW1vbmcgb3RoZXIgaXRlbXMuClNvLCB0aGUgRk5CIHdpbGwgbm90IHRlbGwgdXMgd2hhdCBQcm9mZXNzb3JzIEhlYW5leSBhbmQgV2lsbGV0dCB0aG91Z2h0IG9mIHRoZWlyIG5ldyByZXBvcnQ/IFdoeSBub3Q/LiAKSW4gdGhlIG1pZGRsZSBhdCB0aGlzIGxldmVsLCA0IDQgMiBwdXRzIGEgaHVnZSBzdHJhaW4gb24gdGhlIHR3byBpbiB0aGUgY2VudHJlLCBhbmQgRW5nbGFuZCBvd2UgYSBsYXJnZSBkZWJ0IHRvIFBhcmtlciBhbmQgR2VycmFyZCBmb3IgYWNjZXB0aW5nIHRoZSB3b3JrbG9hZCBzbyB3aWxsaW5nbHkuLiAKT25lIHRoaW5nIHRvIHVuZGVyc3RhbmQgdGhvdWdoIGlzIHRoYXQgd2UgdXNlIHRoZSBCbGFja2phY2sgdGFibGUgZm9yIFRleGFzIEhvbGQnZW0uIApQb2x5ZXVjdGU6IDE4ODcgVmVyc2lvbiBGcmVuY2ggRWRpdGlvbiAuIApDb3ZlciB0aGUgYXJlYSB3aXRoIGEgc29mdCBjbG90aCAoYSBjaGVlc2VjbG90aCBvciBoYW5ka2VyY2hpZWYgd29ya3Mgd2VsbCkgdG8ga2VlcCB0aGUgcGFzdGUgb24gdGhlIHNraW4gYW5kIHRvIGF2b2lkIGdldHRpbmcgaXQgaW4gY29udGFjdCB3aXRoIHlvdXIgY2xvdGhlcyBhbmQgb3RoZXIgc3VyZmFjZXMuClBsYXlpbmcgY2FyZHMgaGF2ZSBhIHJpY2ggaGlzdG9yeSBzaW5jZSBhIGxvbmcgdGltZS4gRXZlbiB0aGUga2luZ3Mgb2YgYWxsIHRoZSBmYW1vdXMgZHluYXN0aWVzIGhhdmUgdGhlaXIgb3duIGNhcmQgc3R5bGVzLiAKOCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSXQgcmVhbGx5IGFsbCBkZXBlbmRzIG9uIHlvdXIgc2VyaW91cyBsZXZlbCBmb3IgZWRpdGluZy4gCk9uZSBvZiB0aGUgYmlnZ2VzdCBiZW5lZml0cyB3YXMgdGhhdCB0aGUgb25saW5lIHByaWNlcyB3ZXJlIGFib3V0IGhhbGYgYXMgbXVjaCBhcyB0aGUgb3JpZ2luYWwgc3VwcGxpZXIuIEJldHRlciB5ZXQsIEkgd2FzIGFibGUgdG8gZmluZCBhIHNpdGUgd2l0aCBhbiBhZGRlZCBkaXNjb3VudCBvbiB0b3Agb2YgaXQuIFJlZ2FyZGxlc3MsIGV2ZXJ5dGhpbmcgeW91IGdldCB3aXRoIHRoaXMgc2V0IGlzIGltbWFjdWxhdGUuIEVhY2ggb25lIG9mIHRoZSBjaGlwcyBoYXMgYW4gaW5zZXJ0IHRoYXQgZ2l2ZXMgdGhlbSB0aGUgc291bmQgYW5kIGZlZWwgb2YgYSByZWFsIHBva2VyIGNoaXAgZnJvbSBhIGNhc2luby4KQWxlcnRzIHBhciBwbHVzaWV1cnMgYWRocmVudHMgYXUgc3VqZXQgZGUgbGEgdHJzIG1hdXZhaXNlIHRlbnVlIGRlIGNldHRlIHN1cHJldHRlLCBub3VzIHkgYXZvbnMgZmFpdCB1biB0b3VyIHVuIGx1bmRpIG1hdGluIGlsIHkgYSB1bmUgcGV0aXRlIHF1aW56YWluZSBkZSBqb3Vycy4gTm91cyB5IGF2b25zIHRyb3V2IGNlIGpvdXIgbCB1bmUgYm9ubmUgcXVhcmFudGFpbmUgZGUgZGlmZnJlbnRzIHByb2R1aXRzIGZyYWlzIHByaW1zIChlbiBtdWx0aXBsZXMgZXhlbXBsYWlyZXMpLCBkZSBsYSBjaGFyY3V0ZXJpZSBlbiBwYXNzYW50IHBhciBkZXMgcGxhdHMgY3Vpc2lucyBldCBkZXMgcHJvZHVpdHMgbGFpdGllcnMuIApUaGVzZSBzbWFsbGVyIHBpY3R1cmVzIHdpbGwgYmUgInRpbGVzIiB0aGF0IG1ha2UgdXAgeW91ciBsYXJnZXIgcGljdHVyZS5bNl0sIFs3XSBUaGVyZSBhcmUgYSBudW1iZXIgb2YgcGhvdG8gbW9zYWljIHdlYnNpdGVzIGFuZCBwcm9ncmFtcyBhdmFpbGFibGUgZm9yIGRvd25sb2FkLCBsaWtlIE1vc2FpY2FsbHksIEVhc3kgTW96YSwgYW5kIEFuZHJlYU1vc2FpYy4uIApIZSByYW4gc2V2ZXJhbCB0aW1lcywgbG9zaW5nIGVhY2ggdGltZSBiZWZvcmUgaGUgd2FzIGVsZWN0ZWQsIGFuZCBrZXB0IHNob3dpbmcgdXAgYW5kIGtub2NraW5nIG9uIGRvb3JzIGVhY2ggdGltZS4gSGUgbGlrZXMgdG8gaGVhciBjb21wZXRpbmcgb3BpbmlvbnMgYW5kIGZhY3RzLCBhbmQgdGhpcyBjYW4gc29tZXRpbWVzIG1ha2UgaGltIGFuIHVucmVsaWFibGUgdm90ZSBhdCBjb3VuY2lsLiAKQXNpYW4gc29jaWV0aWVzIGxvdmUgdW5pZm9ybWl0eSwgYW5kIHRob3NlIE5hemlzIHdlcmUgdW5kZW5pYWJseSBzbmFwcHkgZHJlc3NlcnMuIAoiSSBmZWVsIGxpa2UgOTAlIG9mIGJvdWxkZXIgcmVzaWRlbnRzIGFyZSAiIHdoZW4gd2UgYXJlIHRhbGtpbmcgYWJvdXQgYm91bGRlciByZXNpZGVudHMgYmVpbmcgZG9lcyBub3QgYWRkIHRvIHRoZSBkaXNjdXNzaW9uLiAKV2hlbiBoZSBkaWRuIHRoZXkgYnJpZWZseSB0cmllZCBjb3Vuc2VsaW5nIGFuZCB0aGVuIHNwbGl0IGFmdGVyIGJlaW5nIHRvZ2V0aGVyIGZvciAxIHllYXIuSGUgd2FzIHdpdGggYW5vdGhlciBnaXJsIGFmdGVyIHRoYXQgYW5kIGhhZCBhIGtpZC4gSSBtZXQgaGltIHdoZW4ga2lkIHdhcyAxIHllYXIgb2xkLiAKRHVyYWJpbGl0eTogRXhlcmNpc2UgYmFsbHMgY2FuIHZhcnkgd2lkZWx5IGFuZCBtb3N0IGNvbXBhbmllcyB3aWxsIHB1dCB0aGUgd2VpZ2h0IGxpbWl0IG9mIHRoZSBiYWxsIG9uIHRoZSBwYWNrYWdlLiAKQXF1YXJpdXMgaXMgb24gYSBjb21wbGV0ZWx5IGRpZmZlcmVudCBsZXZlbCwgYm90aCBtZW50YWxseSBhbmQgaW50ZWxsZWN0dWFsbHkuICJUaGVpciBodW1hbml0YXJpYW4gc3Bpcml0cyBhbmQgaW5uYXRlIGFiaWxpdHkgdG8gdGhpbmsgY29sbGVjdGl2ZWx5IGlzIHRydWx5IHVuaXF1ZS4gT3JpZ2luYWwgaXMgYW4gdW5kZXJzdGF0ZW1lbnQgZm9yIHRoaXMgYWlyIHNpZ24uIApCYXNpc2xlIHdlcmRlbiB6dW0gQmVpc3BpZWwgYXVzIHNlbiBNYW5kZWxuIG9kZXIgVHJhdWJlbmtlcm5lbiBoZXJnZXN0ZWxsdC4gTWFuZGVsbCBpc3QgbmljaHQgZW1wZmVobGVuc3dlcnQgYmVpIChWZXJkYWNodCBhdWYpIGVpbmUgTnVzc2FsbGVyZ2llLiAKVGhlIGZvcm1lciBOU1cgYW5kIEthbmdhcm9vcyByZXByZXNlbnRhdGl2ZSBhbHNvIGNsYWltZWQgaGUgd2FzIGJlZm9yZSB0aGUgcGFuZWwgYmVjYXVzZSBvZiBoaXMgcmVwdXRhdGlvbi4KTmV3IGJyZWFzdCByZWNvbnN0cnVjdGl2ZSBzdXJnZXJ5IHByb2dyYW0gb2ZmZXJpbmcgd29tZW4gaG9tZWdyb3duIG9wdGlvbnMKVGhlIG9yaWdpbmFsIHZlcnNpb24gb2YgY3JhcHMgY29udGFpbmVkIGEgZmxhdyB3aGVyZSBwZW9wbGUgY291bGQgYWN0dWFsbHkgd2luLiBUaGUgc2FyY2FzdGljYWxseSBuYW1lZCBKb2huIFdpbm4gaW50cm9kdWNlZCBhIG5ldyBydWxlIHRoYXQgZml4ZWQgdGhlIGhlbGwgb3V0IG9mIHRoYXQuIENhc2lubyBjcmFwcyBoYXMgYmVlbiBhbiBpbmNyZWRpYmxlIHBhcm9keSBvZiByZWxpZ2lvbiBhbmQgbW9iIGJhc2VkIGNhc2ggZXh0cmFjdGlvbiBzZXJ2aWNlcyAoYWthICJhbiBldmVuIGJldHRlciBwYXJvZHkgb2YgcmVsaWdpb24iKSBldmVyIHNpbmNlLiAKUGV0ZXJzYnVyZyBJbnRsIEFpcnBvcnRIb3RlbHMgbmVhciAoUEdEKSBDaGFybG90dGUgQ291bnR5IEFpcnBvcnROZWFyIENvbGxlZ2VzSG90ZWxzIG5lYXIgRmFzaGlvbiBGb2N1cyBIYWlyIEFjYWRlbXkgU2FyYXNvdGEsIEZMSG90ZWxzIG5lYXIgU2FyYXNvdGEgQ291bnR5IFRlY2huaWNhbCBJbnN0aXR1dGVIb3RlbHMgbmVhciBSaW5nbGluZyBDb2xsZWdlIG9mIEFydCBhbmQgRGVzaWduSG90ZWxzIG5lYXIgRWFzdCBXZXN0IENvbGxlZ2Ugb2YgTmF0dXJhbCBNZWRpY2luZUhvdGVscyBuZWFyIEFyZ29zeSBVbml2ZXJzaXR5IFNhcmFzb3RhSG90ZWxzIG5lYXIgTmV3IENvbGxlZ2Ugb2YgRmxvcmlkYUhvdGVscyBuZWFyIFVuaXZlcnNpdHkgb2YgU291dGggRmxvcmlkYSAgIFNhcmFzb3RhIE1hbmF0ZWUgU2FyYXNvdGEsIEZMSG90ZWxzIG5lYXIgU2FyYXNvdGEgU2Nob29sIG9mIE1hc3NhZ2UgVGhlcmFweVRyYXZlbCBHdWlkZXNBcHBzQ3J1aXNlc0dyZWVuTGVhZGVyc1JvYWQgVHJpcHMuIAo4OiBGb3IgRyByYXRlZCBmdW4sIGdvIHRvIEFuZHJlcyBCZWxsbyBQYXJrLCB3aGljaCBob3N0cyBmZXN0aXZhbHMgYW5kIGZhaXJzLCBpbmNsdWRpbmcgYSByZWNlbnQgY2hpbGRyZW4ncyBmZXN0aXZhbCwgY29tcGxldGUgd2l0aCBmb29kIHZlbmRvcnMsIGhhbmRjcmFmdHMgZm9yIHNhbGUsIGFuZCBkYW5jaW5nIHBlcmZvcm1hbmNlcyBvbiBzdGFnZS4gVGhlIHBhcmsgaXMgZ3JlYXQgZm9yIGEgbGVpc3VyZWx5IHN0cm9sbCBvciBhIHdvcmtvdXQgdXNpbmcgdGhlIGZyZWUgb3V0ZG9vciBlcXVpcG1lbnQuIFBpY2t1cCBiYXNrZXRiYWxsIGFuZCBzb2NjZXIgZ2FtZXMgYXJlIGNvbW1vbiBhbmQgYXR0cmFjdCBzcGVjdGF0b3JzIG9uIGV2ZW5pbmdzIGFuZCB3ZWVrZW5kcy4KQW1hem9uIGhhcyBjaGFuZ2VkIHRoaXMgdGhvdWdoIGJlY2F1c2Ugbm93IGFsbCBpdCB0YWtlcyBpcyBhIHRpbnkgYml0IG9mIHN1Y2Nlc3Mgb24gbXkgcGFydCwgdGhleSBzZWUgdGhhdCBhcyBhIGxlYWRpbmcgaW5kaWNhdG9yLCBzb3VyY2UgdGhlaXIgb3duIGNvbXBldGluZyBwcm9kdWN0IGVhcmxpZXIgdGhhbiBhIHR5cGljYWwgY29tcGV0aXRvciB3aG8gd291bGRuIGhhdmUgbXkgc2FsZXMgZGF0YS4gSSBub3cgdGFrZSBhbGwgdGhlIHJpc2sgdG8gb25seSBoYXZlIG15IGJpZyBwYXlvdXQgZ2V0IHRha2VuIGF3YXkgZnJvbSBtZSByaWdodCB3aGVuIEkgc3RhcnQgZ2V0dGluZyBtb21lbnR1bSBnb2luZy4gCkJ1dCByZWxpZ2lvdXMgZ3JvdXBzIGhhdmUgc2hvd24gdGhleSBjYW4gYWRhcHQgYW5kIHJldmlzZSB0aGVpciBhdHRpdHVkZXMgdG93YXJkIHZhY2NpbmVzLCBoZSBzYWlkIGluIGFuIGVtYWlsIGludGVydmlldy4gaXMgYSBtaXN0YWtlIHRvIHZpZXcgcmVsaWdpb3VzIG9iamVjdGlvbnMgdG8gaW1tdW5pemF0aW9uIGFzIG5vbiBuZWdvdGlhYmxlLCBldmVuIHRob3VnaCBsZWFkZXJzIG1pZ2h0IHByZXNlbnQgdGhlbSB0aGF0IHdheS4gZ292ZXJubWVudCB0byBib29zdCBpbW11bml6YXRpb24gc3RyYXRlZ3kgZm9yIG1lYXNsZXNTZWN1bGFyIHZhY2NpbmUgaGVzaXRhdGVycyBtYXkgdGFrZSBhIHZpZXcgb2YgdGhlIHVuaXZlcnNlIGFuZCB0aGVpciBib2RpZXMgYW5kIG1heSB2aWV3IGlsbG5lc3MgYXMgc29tZXRoaW5nIGJlc3QgbWFuYWdlZCB0aHJvdWdoIG5hdHVyYWwgbWVhbnMsIHN1Y2ggYXMgYWx0ZXJuYXRpdmUgbWVkaWNpbmUuIE9yIHRoZXkgbWF5IGhhcmJvdXIgc3VzcGljaW9ucyBhYm91dCB0aGUgaW5mbHVlbmNlIG9mIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcyBhbmQgdGhlIGludGVudGlvbnMgb2YgdGhlaXIgZ292ZXJubWVudC4KV2UgY291bGQgaGF2ZSBhIG1pbmQgYmxvd2luZyBhbW91bnQgb2YgZW5lcmd5IHByb2R1Y3Rpb24gYW5kIGEgbWluaW1hbCBhbW91bnQgb2Ygd2FzdGUuIApZb3UgbmVlZCB0byBiZSBhbiBhdmVyYWdlIHBlcnNvbiwgYW5kIHdpdGggYSBsaXR0bGUgcHJhY3RpY2UsIHlvdSBjYW4gYmUgYXMgZ29vZCBhcyBhbnkgb3RoZXIgcGxheWVyIHRoYXQgeW91IG1pZ2h0IGNvbWUgYWNyb3NzLiAKUE1VIGhhcyBub3Qgb25seSBzdXJ2aXZlZCB0aGUgbG9zcyBvZiBpdHMgb25saW5lIGdhbWluZyBtb25vcG9seSwgYnV0IGFsc28gaGFzIHRocml2ZWQgYnkgbGV2ZXJhZ2luZyBpdHMgY29yZSBjb21wZXRlbmNpZXMgdG8gbW9kZXJuaXplIGl0c2VsZiBmb3IgdGhlIG9ubGluZSBtYXJrZXQgYW5kIGdsb2JhbGl6ZSBGcmVuY2ggaG9yc2UgcmFjZSBiZXR0aW5nIG9wZXJhdGlvbnMuIApXaGVuIHRoZSBoYW5kIGlzIGZpbmlzaGVkIHRoZSBidXR0b24gZ2V0cyBtb3ZlZCBjbG9ja3dpc2UgZnJvbSBwbGF5ZXIgdG8gcGxheWVyLiBUaGUgRmxvcEJlZm9yZSByb3VuZCBvbmUgdGhlIHR3byBwbGF5ZXJzIHRvIHRoZSBsZWZ0IG9mIHRoZSBidXR0b24gcGxhY2UgZm9yY2VkIHdhZ2VycyAnYmxpbmRzJyBpbiBvcmRlciB0byBzdGFydCB0aGUgcG90LCB3aXRoIHRoZSBwbGF5ZXJzIGltbWVkaWF0ZWx5IGxlZnQgb2YgdGhlIGJ1dHRvbiBwb3N0aW5nIGEgc21hbGwgYmxpbmQ7IGEgYmV0IGVxdWFsIHRvIGhhbGYgdGhlIHZhbHVlIG9mIHRoZSB0YWJsZXMgbG93ZXIgc3Rha2UgbGltaXQ7IHdoaWxlIHRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIHNtYWxsIGJsaW5kIHBsYWNlcyBhIGJpZyBibGluZCB3YWdlcjsgZXF1YWwgdG8gdGhlIGZ1bGwgdmFsdWUgb2YgdGhlIHRhYmxlcyBsb3dlciBzdGFrZS4gCkluIGEgMi8zLzUgb3IgMi81IGdhbWUgc29tZSBwZW9wbGUgc3RpbGwgdGVuZCB0byBpZ25vcmUgdGhlIGZhY3QgdGhhdCB0aGUgYm9hcmQgaXMgcGFpcmVkIGFuZCBzZWUgdGhlaXIgbnV0IGZsdXNoIGFzIHRoZSByZWFsIG51dHMuIApFRElUOiBJZiB0aGUgcGF0aWVudCB3YW50cyB0byBmaWdodCwgdGhlIGRvY3RvciB3aWxsIGhlbHAgYnV0IHN0YWdlIElWIG1lYW5zIHRoZXkgd2lsbCBnbyB0byB0aGUgYmlnIGd1bnMgd2hpY2ggV0lMTCBkYW1hZ2UgeW91ciBib2R5IGltbWVuc2VseS4gU28gZXZlbiBpZiB5b3Ugc3Vydml2ZSwgeW91IHdpbGwgZW5kIHVwIHdpdGggc2lnbmlmaWNhbnQgZGFtYWdlIHRvIHlvdXIgb3JnYW5zIGRlcGVuZGluZyB3aGVyZSB0aGUgc2Vjb25kYXJ5IGNhbmNlcnMgcG9wIHVwLiBTdXJ2aXZhbCByYXRlcyBhcmUgbG93IGZvciBhIHJlYXNvbi4gRWl0aGVyIHRoZSBjYW5jZXIgd2lsbCBraWxsIHlvdSBvciB0aGUgdGhlcmFweS4gSGVhcmQgZW5vdWdoIHN0b3JpZXMgb2YgYnJhaW5zIGJlaW5nIGZyaWVkLCBsdW5ncyBiZWluZyBkZXN0cm95ZWQgdG8gYSBwb2ludCB3aGVyZSB0aGV5IGJhcmVseSB3b3JrLCBzcGluYWwgZGFtYWdlIGV0Yy4gRmlnaHRpbmcgc3RhZ2UgSVYgaXMgbWVzc2VkIHVwLCB0aGVyZSBpcyBhIHJlYXNvbiB3aHkgZG9jdG9ycyBvZnRlbiBzdWdnZXN0IG5vdCB0cnlpbmcgdG8gaGVhbCBpdCBidXQgbWFrZSBpdCBhcyBjb21mb3J0YWJsZSBhcyBwb3NzaWJsZS4KWW91IG1heSB0cnVzdCBtZSB3aGVuIEkgc2F5IHRoYXQsIG9yIHlvdSBtYXkgbm90LiAKTCBkZSAyMmFucyBhdXggYnVyZWF1eCBsb25kb25pZW5zIGRlIGxhIHNvY2l0IE1pcmFtYXggZXN0IGVudm95ZSBkYW5zIGxhIGNoYW1icmUgZCBkZSBIYXJ2ZXkgV2VpbnN0ZWluIHBvdXIgeSB0cmF2YWlsbGVyLiBJbCBsdWkgYXVyYWl0IGFsb3JzIHJjbGFtIHVuIG1hc3NhZ2UgZW4gYWZmaXJtYW50IHF1ZSBkIGZlbW1lcyBhdmFpZW50IGFjY2VwdCBkIGRlIGxhIHNvcnRlLiBFbGxlIGF1cmFpdCBxdWl0dCBsIGltbWRpYXRlbWVudC4KSSBkbyBhbiB1cGRhdGVkIHBvc3Qgb25jZSBpdCBhbGwgc2V0dGxlZCB0b28uLiAKIkFuZCB0aGVuIGp1c3QgW3NuYXBzXSBzb21ldGhpbmcgY2xpY2tlZC4gCk1hdGhlbWF0aWNhbGx5LCB5ZXMsIGlmIHRoZSBjdXJyZW50IHBvaW50cyB3ZXJlIGNvbnZlcnRlZCB0aGlzIG1vbWVudCBpbnRvIHRoaXMgcHJvcG9zZWQgc3lzdGVtIHlvdSBoYXZlIGxpdHRsZSBjaGFuZ2VkIGluIHRoZSBzdGFuZGluZ3MuCklmIEkgc3RlYWwgJDUwIGZyb20geW91ciBkZXNrIGF0IHdvcmssIHRoZXJlIGlzIGFic29sdXRlbHkgbm8gd2F5IEkgZ29pbmcgdG8gamFpbC4gRXZlbiBpZiB5b3UgY2FuIHByb3ZlIGl0LCBpdCBoaWdobHkgbGlrZWx5IEkgd29uIGV2ZW4gZmFjZSBjcmltaW5hbCBjaGFyZ2VzLCB0aG91Z2ggeW91IGNhbiBzdWUgbWUgY2l2aWxseSBhbmQgcHJvYmFibHkgd2luIGJlY2F1c2UgdGhlIHN0YW5kYXJkcyBvZiBldmlkZW5jZSB0aGVyZSBhcmUgd2F5IGluIHlvdXIgZmF2b3IuLiAKQXJlIHlvdSBhIGNhcmQgbG92ZXI/IERvIHlvdSB3YW50IHRvIGVhcm4gdGhlIHVubGltaXRlZCBtb25leSBpbiBhIHZlcnkgc2hvcnQgcGVyaW9kIG9mIHRpbWU/IFllcz8gSXQgbWF5IGJlIHF1aXRlIGhhcmQgZm9yIHRoZSBvbmUgd2hvIHdhbnRzIHRvIGVhcm4gdGhlIGh1Z2UgYnVja3Mgb2YgbW9uZXkgYnV0IHN0aWxsIHVuYWJsZSB0byBnZXQgdGhlIHNhbWUgYnV0IGl0IGlzIG5vdCBpbXBvc3NpYmxlIGF0IGFsbC4gUG9rZXIgaXMgYSBnYW1ibGluZyBnYW1lIHdoaWNoIGlzIGFscmVhZHkgdmVyeSBtdWNoIGZhbW91cyBhbmQgb25lIG9mIHRoZSBtb3N0IGZhdm9yaXRlIGdhbWVzIGFtb25nIHRoZSBjYXJkIGxvdmVycy4gSXQgaXMgbm90IG9ubHkgYSBnYW1lIGJ1dCBhbHNvIGEga2luZCBvZiBtdWNoIGxvdmVkLCB0aHJpbGxpbmcsIGFuZCBhIGZ1biBhY3Rpdml0eS4gCkFsc28gZ290IHRvIGhhdmUgbHVuY2ggd2l0aCBoaW0gYW5kIGEgY291cGxlIG9mIGhpcyBmcmllbmRzIGFmdGVyd2FyZHMuIApDJ2VzdCB1bmUgcXVlc3Rpb24gcXVlIGplIG1lIHBvc2UgZGVwdWlzIHBsdXMgZCd1bmUgZGl6YWluZSBkJ2FubmVzIGV0IGplIG5lIHBlbnNlIHBhcyBxdSdpbCB5IGFpdCB1bmUgcnBvbnNlIHVuaXF1ZS4gSWwgeSBhIGJpZW4gdmlkZW1tZW50LCBkZXJyaXJlLCB1biBub3JtZSBidXNpbmVzcyBjb25vbWlxdWUsIG1haXMgaWwgbmUgZmF1dCBwYXMgb3VibGllciwgZW4gY2UgcXVpIGNvbmNlcm5lIGxhIEZyYW5jZSwgcXVlIGxlcyBvbGllbm5lcyBzb250IGltcG9ydGVzIGQnQWxsZW1hZ25lIGV0IHF1ZSBsZXMgcGFubmVhdXggcGhvdG92b2x0YXF1ZXMgc29udCBlc3NlbnRpZWxsZW1lbnQgaW1wb3J0cyBkZSBDaGluZS4gRGVycmlyZSwgaWwgeSBhIHVuIG5vcm1lIGJ1c2luZXNzIGZpbmFuY2llci4gCkFueW9uZSB0aGF0IGtub3dzIG1lIGNhbiB2b3VjaCB0aGF0IEknbSBub3QgYSBiaWcgc3RheWVyIHdoZW4gaXQgY29tZXMgdG8gZHJpbmtpbmcgYXMgSSBnZXQgdmVyeSBzb2NpYWxseSBleGNpdGVkIGFuZCBub3JtYWxseSBmYWxsIGluIGEgaGVhcCBlYXJseSwgaGEgaGEuIApLZWxseSBleCBnaXJsZnJpZW5kIHNheXMgaGVyIGRhdWdodGVyIHdhcyBiZWF0ZW5Ob3RvcmlvdXMgQklHIGRhdWdodGVyIHJlb3BlbmluZyBjbG90aGluZyBzdG9yZSBpbiBCcm9va2x5blRoZSBHYXlsZSBLaW5nIEludGVydmlldyB3aXRoIFIuIEtlbGx5SG93IHRvIHdhdGNoICJUaGUgR2F5bGUgS2luZyBJbnRlcnZpZXcgd2l0aCBSLiBLZWxseSIiTW9iaXR1YXJpZXMiOiBUaGUgQXVidXJuIFVuaXZlcnNpdHkgdHJlZSBraWxsZXIgc3BlYWtzSmFuIE1pY2hhZWwgVmluY2VudCwgIkFpcndvbGYiIGFjdG9yLCBoYXMgZGllZCBhdCBhZ2UgNzMiWW91IGV2ZXIgYmVlbiBpbiBqYWlsLCBHYXlsZT8iIFIuIApQcmUgZmxvcCByYWlzaW5nIHJhbmdlIGF0IGV2ZXJ5IHNlYXQgb24gdGhlIHRhYmxlIGlzIGV4YWN0bHkgQUorIGFuZCBKSisuIExpa2VzIHRoZSBzbmVha3kgVVRHIGxpbXAgd2l0aCBBQSwgdGhlbiBjdXJzZXMgdGhlIGRlY2sgYW5kIGZsaXBzIGhpcyBjYXJkcyBkb3duIGluIGRpc2d1c3Qgd2hlbiBzb21lb25lIHN1Y2tzIG91dCBvbiBoaW0gaW4gdGhlIDUgd2F5IGxpbXBlZCBwb3QgaGUgY3JlYXRlZCwgYWx3YXlzIGZhY2UgdXAgc28geW91IGNhbiBzZWUgaGUgaGFkIEFBLiAKVGhlIG5pZ2h0IFRydW1wIHdhcyBlbGVjdGVkIEkgaGFkIGEgYml0IG9mIGEgbWVudGFsIGJyZWFrLiAKSWYgeW91IHdhbnQgdG8gZXhwZXJpZW5jZSBob3cgZ29vZCB0aGUgZ2FtZSBpcyB0cnkgdG8gcGxheSB0aGUgZnJlZSBwb2tlciBnYW1lIGZpcnN0LiAKRm9yIGEgeWVhciBhZnRlciBncmFkdWF0aW9uIGhlIHRhdWdodCBpbiBKYW5lc3ZpbGxlIEhpZ2ggU2Nob29sIGFuZCB3YXMgcHJvbWluZW50IGluIHRoZSBMaXR0bGUgVGhlYXRlci4gCk5ld2hvdXNlIE1ha2VzIDJuZCBTdHJhaWdodCBGaW5hbApUaGUgbWFuIGhhZCBjb21lIHRvIE5ldyBZb3JrIHRvIGF0dGVuZCBjb2xsZWdlIGJ1dCBncmV3IGludGVyZXN0ZWQgaW4gdGhlIGJ1c2luZXNzIGFmdGVyIG1lZXRpbmcgaGlzIGdpcmxmcmllbmQsIHdobyB3b3JrZWQgYXMgYSBtYXNzZXVzZSBhbmQga25ldyBzZXZlcmFsIGVtcGxveWVlcyBpbiBGbHVzaGluZy4uIApLcmlzdGluZSdzIEZpbm5pc2ggQmFja2dyb3VuZDogVGhlIEZpbm5pc2ggQ3VsdHVyZSBpcyBvbmUgdGhhdCBiZWxpZXZlcyBpbiBoYXJkIHdvcmsgYW5kIHRoZSBoZWFsaW5nIHBvd2VyIG9mIG5hdHVyZS4gU3RvaWNpc20gKCJzaXN1IikgcnVsZWQgYW5kIHJ1bGVzIHN0aWxsLiAKWW91IHNuZWFrZWQgYSBjaWdhcmV0dGU/IFNvcnJ5LCBHb29nbGVVU1dlbGxuZXNzLCB0aGUgZ292ZXJubWVudCdzIHBhcnRuZXIgaW4gdHJhY2tpbmcgQW1lcmljYW4gaGVhbHRoLCBmb3VuZCBvdXQuIFlvdSBqdXN0IHZvaWRlZCB5b3VyIGhlYWx0aCBpbnN1cmFuY2UuIApFbmQgcmVzdWx0IGlzIHJlZCBnbG93aW5nIG5lb25jcm9zcyBvbiBldmVyeSBjb3JuZXIgYW5kIGEgbG90IG9mIHBlb3BsZSBlZHVjYXRlZCBpbiB1bmNvbXByb21pc2luZyBoYXJkY29yZSBQcm90ZXN0YW50IGNodXJjaCBkb2N0cmluZSBmcm9tIHRoZWlyIGJpcnRoIHRvIGRlYXRoIGJlZC4KVXBkYXRlOiBJIHNwb2tlIHdpdGggYSBidWRkeSB3aG8gd29ya2VkIG9uIHByZXZpb3VzIHNlYXNvbnMgYW5kIGhlIHNhaWQgdGhleSBoYXZlIHByZXNldCByb29tcyBmb3IgdGhlIGludGVydmlld3MgYW5kIHRoZXkgc2hvb3QgaW50ZXJ2aWV3cyAiZXZlcnkgY291cGxlIGRheXMiLiAKQmFzaWNhbGx5IGlmIHRoZSBjdXJ2YXR1cmUgbWF0dGVycywgdGhhdCBtZWFucyB5b3UgaGF2ZSB0byBzaW5rIGl0IGEgYml0IGludG8gdGhlIGdyb3VuZCBzbyB0aGF0IHRoZSBjb3JuZXJzIHdvbiBiZSB1cCBpbiB0aGUgYWlyLiAKMTAgZ2FtZXMgaXNuIGVub3VnaCB0byBhY2N1cmF0ZWx5IGFzc2VzcyB3aGVyZSB5b3UgYXJlLCBzbyB5b3Ugc2hvdWxkIGJlIHBsYWNlZCBiZW5lYXRoIHlvdXIgbW1yLiAKSGUgd2lsbCBkZWZpbml0ZWx5IHdhbnQgdG8gYmUgb3V0IG9mIHRoZSBCdWxscyBpbiBhYm91dCB0d28gbW9yZSBzZWFzb25zIG9yIGxlc3MuIApXb3VsZG4geW91IGRlc2lnbiB0aGUgc2Vuc29ycyBvZiBhIHNlbGYgZHJpdmluZyBjYXIgd2l0aCBjbG90aGVkIHBlb3BsZSBpbiBtaW5kIHRob3VnaD8gSSBjYW4gaGFyZGx5IGltYWdpbmUgdGhlIGd1eXMgcnVubmluZyB0aGUgdGVzdHMgdG8gYWN0dWFsbHkgc2l0IHRoZXJlIGJ1dHQgbmFrZWQuIApKYWphLCBlciBkd2FycmVsZGVuIHdlbCBkZWdlbGlqayBzbmVldXd2bG9ramVzIG5lZXIhIERlIGhvZ2UgYmVyZ2VuIHJvbmRvbSBGbGFnc3RhZmYgaGFkZGVuIGR1aWRlbGlqayBiZXNuZWV1d2RlIHRvcHBlbi4uIApGcmFub2lzIEx1YmthIEFtaWd1ZXMgZXQgcmZyZW5jZXMgZCdhdXRyZXMgdGhyYXBldXRlcyAgUGFnZSBkJ2FjY3VlaWwKVGhlICJQb2tlciBGYWNlIiBzaW5nZXIsIGFuIG91dHNwb2tlbiBzdXBwb3J0ZXIgZm9yIEhpbGxhcnkgQ2xpbnRvbiwgaGFkIGJlZW4gYXQgdGhlIEhpbGxhcnkgZm9yIEFtZXJpY2EgRWxlY3Rpb24gTmlnaHQgRXZlbnQgYXQgdGhlIEphY29iIEsuIEphdml0cyBDb252ZW50aW9uIENlbnRlciBhcyB0aGUgcmVzdWx0cyBmcm9tIHRoZSBwb2xscyBjYW1lIGluIG9uIFR1ZXNkYXkgZXZlbmluZywgYnV0IGFzIGl0IGJlY2FtZSBjbGVhciBUcnVtcCB3b3VsZCBiZSBkZWNsYXJlZCBwcmVzaWRlbnQsIHNoZSBoZWFkZWQgb3V0IGFuZCB3ZW50IHRvIFRydW1wIFRvd2VyLCB3aGljaCBzZXJ2ZXMgYXMgaGlzIHJlc2lkZW5jZSBhbmQgaGVhZHF1YXJ0ZXJzIGZvciBUaGUgVHJ1bXAgT3JnYW5pemF0aW9uLgpCdXQgdW5mb3J0dW5hdGVseSBzb21lIGFjdGl2aXN0cyB3YW50ZWQgdG8gd29yayBhZ2FpbnN0IHRoaXMgYW5kIHRoZXJlIGJyaWdodCBpZGVhIHdhcyB0byBvcGVuIGFsbCB0aGUgZG9vcnMgYW5kIGxpZ2h0IHRoZSBwbGFjZSBvbiBmaXJlLiBUaGUgcGlncyB3b3VsZCBydW4gb3V0c2lkZSBhbmQgYmUgZnJpZ2h0ZW5lZCBhbmQgcnVuIGJhY2sgaW50byB0aGUgYnVybmluZyBidWlsZGluZyB0byBidXJuIGFsaXZlLCA3MCUgKHRob3VzYW5kcykgb2YgcGlncyBkaWVkIGZyb20gdGhpcywgdGhlIG90aGVyIDMwJSBoYWQgdG8gYmUgZXV0aGFuaXplZC4gClRoZXkgZmluYWxseSBnb3QgaXQgZG9uZSB3aXRoIHRoZSBGZWRlcmFsIFJlc2VydmUgQWN0IG9mIDE5MTMsIGRyYWZ0ZWQgYnkgdGhlIGJhbmtlciBhbmQgaW5kdXN0cmlhbCBvbGlnYXJjaHMgb2YgdGhlIGRheSBpbiBhIHNlY3JldCBtZWV0aW5nLCBhbmQgc2lnbmVkIGludG8gbGF3IGJ5IGFuIGVtcHR5IGNvbmdyZXNzIG5lYXIgQ2hyaXN0bWFzLiAKTWljaGFlbCBMZXdpczogWWVzLCBhbmQgSSB3YXMgYSAiZ2Vlay4iIEhlIHdvdWxkIGhhdmUgYmVlbiBzZW5pb3IgZW5vdWdoIHdoZW4gSSByb2xsZWQgaW50byB0aGUgcGxhY2UgdGhhdCBoZSB3YXMgc3BlYWtpbmcgdG8gdXMgaW4gdGhlIHRyYWluaW5nIHByb2dyYW0uIEhlIHdhcyBzb21lb25lIGV2ZXJ5Ym9keSB3YXMgYWZyYWlkIG9mLiBZb3UgZ290IHRoZSBzZW5zZSB0aGF0IGlmIHlvdSBzYWlkIHNvbWV0aGluZyBzdHVwaWQgaGUgd291bGQgbGV0IHlvdSBrbm93IGl0IChsYXVnaHMpLiAKVG8gbWFraW5nIG92ZXIgNDAwaywgaW4gcG9rZXIgYW5kIGluIGludmVzbWVudHMgaW4gbGVzcyB0aGFuIDEgYW5kIGhhbGYgeWVhci4gCkltaXRhdGlvbnMgb2YgcmVhbCBuZXJ2b3VzbmVzcyBhcmUgZG9uZSBiYWRseS4gSXQgaXMgdXN1YWxseSBncmVhdGx5IGV4YWdnZXJhdGVkIGFuZCB5b3UgY2FuIGVhc2lseSBkZXRlY3Qgd2hlbiBzb21lb25lIGlzIHJlYWxseSBuZXJ2b3VzLiAKQSBtYW4gaXMgdGFrZW4gaW50byBjdXN0b2R5IGR1cmluZyBhIHJhaWQgV2VkbmVzZGF5IG9uIEluZmluaXR5IFNwYSBhdCAxMDMzIFd5YW5kb3R0ZSBTdC4gVy4sIGZvbGxvd2luZyBhIHR3byBtb250aCBpbnZlc3RpZ2F0aW9uLiBXaW5kc29yIHBvbGljZSBzYXkgdGhlIGludmVzdGlnYXRpb24gcmV2ZWFsZWQgdGhlIGJ1c2luZXNzIHdhcyAiYSBmcm9udCBmb3IgaWxsZWdhbCBzZXh1YWwgYWN0aXZpdHkgYW5kIG5hcmNvdGljcy4iV2luZHNvciBwb2xpY2UgdGFrZSBhIG1hbiBpbnRvIGN1c3RvZHkgZHVyaW5nIGEgcmFpZCBXZWRuZXNkYXkgb2YgSW5maW5pdHkgU3BhIGF0IDEwMzMgV3lhbmRvdHRlIFN0LiBXLiwgZm9sbG93aW5nIGEgdHdvIG1vbnRoIGludmVzdGlnYXRpb24uIFBvbGljZSBzYWlkIHRoZSBpbnZlc3RpZ2F0aW9uIHJldmVhbGVkIHRoZSBidXNpbmVzcyB3YXMgImEgZnJvbnQgZm9yIGlsbGVnYWwgc2V4dWFsIGFjdGl2aXR5IGFuZCBuYXJjb3RpY3MuIgpCb3N0b24gR2xvYmUgTWVkaWEgUGFydG5lcnMgaXMgbWFkZSB1cCBvZiBkaWZmZXJlbnQgbGVnYWwgZW50aXRpZXMsIGluY2x1ZGluZyBpdHMgYWZmaWxpYXRlcyBhbmQgc3Vic2lkaWFyaWVzLiBXaGVuIHdlIG1lbnRpb24gR2xvYmUgb3IgaW4gdGhpcyBwcml2YWN5IG5vdGljZSwgd2UgYXJlIHJlZmVycmluZyB0byB0aGUgcmVsZXZhbnQgYWZmaWxpYXRlIG9yIHN1YnNpZGlhcnkgb2YgQm9zdG9uIEdsb2JlIE1lZGlhIFBhcnRuZXJzIHJlc3BvbnNpYmxlIGZvciBwcm9jZXNzaW5nIHlvdXIgaW5mb3JtYXRpb24uIERhdGEgYW5kIHByaXZhY3kgbGF3IGluIGNlcnRhaW4ganVyaXNkaWN0aW9ucyBkaWZmZXJlbnRpYXRlcyBiZXR3ZWVuIHRoZSAiY29udHJvbGxlciIgYW5kICJwcm9jZXNzb3IiIG9mIGluZm9ybWF0aW9uLiAKTmV2ZXIgbWluZCBERCBoYXMgbmV2ZXIgaGFkIGFuIGlzc3VlIHRlZXRoaW5nIGFuZCB3ZSBvbmx5IGtub3cgc2hlIGhhZCBuZXcgdGVldGggd2hlbiB3ZSBnb3QgYSBzbmVha3kgbG9vay4KT25seSB0aHJlZSBqb2JzIEkgaG9uZXN0bHkgY29uc2lkZXJlZCBpbiB0aGUgZW50aXJlIHRoaW5nLCBvbmUgYmVpbmcgYXQgdGhlIGxvY2FsIGNvbGxlZ2UgSSBhbHJlYWR5IHdvcmsgYXQgKHdoaWNoIHRvb2sgc28gbG9uZyB0byByZXNwb25kIHRvIG15IHN1Ym1pc3Npb24gdGhhdCBJIGhvbmVzdGx5IGZvcmdvdCBJIGhhZCBldmVuIGFwcGxpZWQsIEkgdGhpbmsgaXQgd2FzIG92ZXIgNCBtb250aHMpLCBhbmQgdGhlIG90aGVyIHR3byB3ZXJlIHBvc2l0aW9ucyB3aGVyZSBhIHJlY3J1aXRlciBkaXJlY3RseSBtZXNzYWdlZCBtZSBvdmVyIHRoZSBMaW5rZWRJbiBhcHAuClNuaXBlcnMgbmVlZCBtb3JlIHN0b3BwaW5nIHBvd2VyLCB0aGUgb25seSByZWFzb24gbG9uZ2JvdyBpcyBnb29kIGF0IHJhbmdlIGlzIGlmIGFsbCAzIGJ1bGxldHMgaGl0IHlvdSBhcmUgc2xvd2VkIHRvIGEgQ1JBV0wuIApLaW5nb2ZxdWVlbmFubmUgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClBlcmV6IHNhaWQgaGUgd2FzIHNvYmVyIGFuZCBpbnRlcnZpZXdpbmcgR2FnYSB3aGVuIHNoZSBiZWNhbWUgdXBzZXQgb3ZlciBhIHF1ZXN0aW9uIGFib3V0IGhlciBzaW5nbGUgSnVkYXMuCkNvbXBsYWludHMgYWJvdXQgc2hhcmRpbmcgaW4gc3RhcnRpbmcgYXJlYSBydWluaW5nIHRoZSBleHBlcmllbmNlCkkgZ3JldyB1cCBkaXJ0IHBvb3IuIApUaGV5IHNheSBpZiB5b3UgZ28gdGhyZWUgbW9udGhzIHdpdGhvdXQgYSB2aXNpb24sIHNvbWV0aGluZyBiYWQgaGFzIGhhcHBlbmVkLCBJIGFscmVhZHkga25vdywgdGhlIG51bWJlciBzaGUgY2FsbGVkLCBhIHN1aWNpZGUgaG90bGluZS4gCkFzIEkgZXhwbGFpbmVkLCB1bnRpbCBoZSB0dXJuZWQgNyB5ZWFycyBvZiBhZ2UsIGhlIGhhZCA1MCUgY2hhbmNlcyB0byBiZWNvbWUgdmVyYmFsIG9uZSBkYXkuIFRoaXMgcGVyY2VudGFnZSBpcyBkaW1pbmlzaGluZyB1bnRpbCBoZSB0dXJucyAxMyB5ZWFycyBvbGQuIAoiV2UncmUgYnJlYWtpbmcgZG93biBiYXJyaWVycywgZmlndXJhdGl2ZWx5IGFuZCBsaXRlcmFsbHksIiBzYXlzIE5hdGFzaGEgTXVycGh5LCBtYW5hZ2VyLCBJbnRlcmlvciBEZXNpZ24sIHdobyBsZWFkcyBhIHRlYW0gZm9jdXNlZCBvbiBidWlsZGluZyBjb21wb25lbnRzLiBTaGUgaGFzIGJlZW4gd2l0aCB0aGUgSG91c2UgZm9yIHRocmVlIHllYXJzLCBoYXZpbmcgcHJldmlvdXNseSB3b3JrZWQgaW4gdGhlIHByaXZhdGUgYW5kIHB1YmxpYyBzZWN0b3JzLiBXaGVuIHNoZSBoZWFyZCB0aGUgSG91c2UgaGFkIGFuIG9wZW5pbmcsIHNoZSB3YXMgY3VyaW91cyBiZWNhdXNlIHNoZSBkaWRuJ3Qga25vdyBtdWNoIGFib3V0IHRoZSBvcmdhbml6YXRpb24uLiAKT3IgaWYgdSBoYXZlIGFjZSBoaWdoIGZsdXNoIGFuZCByZWFsbHkgdGhlIG9ubHkgY2FsbGluZyBoYW5kcyBmb3IgdmlsbGFpbiBhcmUgayBvciBxIGhpIGZsdXNoIHRoZW4gYWdhaW4gdSB3YW50IHRvIGJldCBwb3RTbyBpZiB0aGUgZmxvcCB3YXMgUTcyIHJhaW5ib3cgdGhlbiB5b3Ugd291bGQgb2Z0ZW4gd2FudCB0byBjb25zaWRlciBiZXR0aW5nIG9ubHkgaGFsZiB0aGUgZmxvcCBiZWNhdXNlIHRoZXJlIGFyZSBubyBkcmF3cyBhdCBhbGwuIApQcmltYSBrYW1lciEuIApTcGVuY2VyIHVzZWQgdG8gd2FzaCBoZXIgaGFpciBhYm91dCBldmVyeSBvdGhlciBkYXksIGJ1dCBkZWNpZGVkIHRvIHF1aXQgc2hhbXBvbyBsYXN0IHN1bW1lciBhZnRlciByZWFkaW5nIHNldmVyYWwgcG9zaXRpdmUsIGxlbmd0aHkgZGlzY3Vzc2lvbiB0aHJlYWRzIG9uIHRoZSB0b3BpYyBvbiBhIHBhcmVudGluZyBtZXNzYWdlIGJvYXJkLiAiSSBoYXZlbid0IHRvbGQgbWFueSBwZW9wbGUgYWJvdXQgaXQsIiBzaGUgYWRtaXRzLiAiSXQncyBqdXN0IGtpbmQgb2YgIHdlaXJkLiIKQXJ0aWNsZXMgYnkgU3RhbmxleSBNYWpvcnMgUmVzdWx0cyAxCkhlIElzIGFib3ZlIHJlcHJvYWNoIG1vcmFsbHkgYW5kIGxlZ2FsbHkgb3RoZXIgdGhhbiBhIG1vcmFsIGltcGxpY2F0aW9uIHdpdGggdGhpcy4gU28gaXMgaGlzIHdpZmUuIApCdXQgdGhlIG9uZXMgb24gdGhlIGhpZ2hlc3QgZW5kIHdvdWxkIGdldCBsZXNzIHRyZWF0bWVudCBiZWNhdXNlIHRoZXJlIGJlIGxlc3MgbW9uZXkgYXZhaWxhYmxlIGZvciB0aGVtLiBTbyBnb29kIGZvciB0aGUgbWFqb3JpdHksIHdobyBhcmUgbm90IGhpZ2ggb24gdGhlIHNwZWN0cnVtLCBiYWQgZm9yIHRoZSB3b3JzdCBvZiB0aGVtLi4gCkEgcG9zc2liaWxpdHkgdG8gd2luIGJhY2sgdGhlIGNhc2lubyBib251cyBpbiB0aGlzIGNhc2UgaXMgYSBiaXQgbGVzcyB0aGFuIDUwJSAoZm9yIHRoYXQgeW91IG9ubHkgbmVlZCB0byBzdGFrZSB0aGUgZW50aXJlIGFtb3VudCBvbiB0aGUgY2hhbmNlcyBpbiByb3VsZXR0ZSkuIApXb21lbidzIG5hdGlvbmFsIHNvY2NlciB0ZWFtIHBsYXllcnMgc3VlIGZvciBlcXVpdGFibGUgcGF5CkluIHNvbWUgcmVzcGVjdHMgdGhleSBhcmUgbGVhZGluZyB0aGUgd2F5IGZvciB0aGVpciBlbGRlcnMuLiAKUG9rZXIgUm9vbSBSZXZpZXc6IFRvd2VyIFRvcm5lb3MgODg4Ck1hciAyMywgMjAxOCAuIE1pY3Jvc29mdCBXb3JkIGlzIHRoZSB3b3JkIHByb2Nlc3NvciB3aXRoIGNvbXBsZXgsIHlldCBpbnR1aXRpdmUsIC4gVGhlIE1pY3Jvc29mdCBPZmZpY2UgMjAxMCBkZW1vIGlzIGF2YWlsYWJsZSB0byBhbGwgc29mdHdhcmUgdXNlcnMgYXMgYSBmcmVlLiBNaWNyb3NvZnQgV29yZCAyMDEzLCBmcmVlIGFuZCBzYWZlIGRvd25sb2FkLiBNaWNyb3NvZnQgV29yZCAyMDEzIGxhdGVzdCB2ZXJzaW9uOiBPbmUgb2YgdGhlIGJlc3Qgd29yZCBwcm9jZXNzb3JzIGdldHMgZXZlbiBiZXR0ZXIuIApBY2NvcmRpbmcgdG8gdGhlIHdlYnNpdGUgIkJpZyBCcm90aGVyIERhaWx5Iiwgd2hpY2ggaGFzIGNvbXBpbGVkIHZhcmlvdXMgc3RhdHMgZnJvbSBhbGwgMTcgc2Vhc29ucyBvZiAnQmlnIEJyb3RoZXInLCBSb3Vzc28gaXMgcXVpY2tseSBiZWNvbWluZyBvbmUgdGhlIGJlc3QgcGxheWVycyBpbiBCQiBoaXN0b3J5LiBTaGUgaXMgdGllZCwgd2l0aCBzZXZlcmFsIG90aGVyIHBsYXllcnMsIGZvciBtb3N0IEhlYWQgb2YgSG91c2Vob2xkIHZpY3RvcmllcyAod2hlcmUgdGhlIHBsYXllciAiY29udHJvbHMiIHRoZSBob3VzZSBmb3IgdGhlIHdlZWsgYW5kIGdldHMgdG8gbm9taW5hdGUgdHdvIHBsYXllcnMgZm9yIGV2aWN0aW9uKSBhbmQgaXMgdGllZCBmb3Igc2Vjb25kIGFtb25nc3QgaG91c2UgZ3Vlc3RzIHdpdGggdGhlIG1vc3QgY29tYmluZWQgSG9IIGFuZCBQb3dlciBvZiBWZXRvIHZpY3Rvcmllcy4uIApPdXIgYXBwIGlzIGFjdHVhbGx5IHF1aXRlIGVmZmVjdGl2ZSBpbiB0aGF0IHNlbnNlLmFub3JldHUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29XaGF0IHlvdSBkZXNjcmliZSBhYm92ZSBieSBnb2luZyBiYWNrIHRvIGxldmVsIG9uZSBldmVyeSB0aW1lIHlvdSBmZWVsIHJlamVjdGVkICAgaXMgc29tZXRoaW5nIHRoYXQgaGFwcGVucyB3aGVuIG91ciBiZWxpZWZzIGFyZSBzdGlsbCBiYXNlZCBvbiBtYWxhZGFwdGl2ZSB0aGlua2luZ1doZW4geW91IHJlamVjdGVkIGJ5IHNvbWVvbmUgYmVjYXVzZSBvZiB5b3VyIGxvb2sgaXQgc2ltcGx5IG1lYW5zIHRoYXQgdGhpcyBwZXJzb24gZmluZHMgeW91IG5vdCBhdHJhY3RpdmUgYW5kIG1lYW5zIHlvdSBhcmUgbm90IGdvb2QgZW5vdWdodCAuIAo4OiBGb3IgRyByYXRlZCBmdW4sIGdvIHRvIEFuZHJlcyBCZWxsbyBQYXJrLCB3aGljaCBob3N0cyBmZXN0aXZhbHMgYW5kIGZhaXJzLCBpbmNsdWRpbmcgYSByZWNlbnQgY2hpbGRyZW4ncyBmZXN0aXZhbCwgY29tcGxldGUgd2l0aCBmb29kIHZlbmRvcnMsIGhhbmRjcmFmdHMgZm9yIHNhbGUsIGFuZCBkYW5jaW5nIHBlcmZvcm1hbmNlcyBvbiBzdGFnZS4gVGhlIHBhcmsgaXMgZ3JlYXQgZm9yIGEgbGVpc3VyZWx5IHN0cm9sbCBvciBhIHdvcmtvdXQgdXNpbmcgdGhlIGZyZWUgb3V0ZG9vciBlcXVpcG1lbnQuIFBpY2t1cCBiYXNrZXRiYWxsIGFuZCBzb2NjZXIgZ2FtZXMgYXJlIGNvbW1vbiBhbmQgYXR0cmFjdCBzcGVjdGF0b3JzIG9uIGV2ZW5pbmdzIGFuZCB3ZWVrZW5kcy4uIApSZWFsbHk/IE1vdmllIHdvcmxkIHdhcyBvbmUgb2YgdGhlIG1vc3QgcmVjb21tZW5kZWQgdGhpbmdzIHRvIGRvIGFjY29yZGluZyB0byBLb3JlYW4gdG91cmlzdHMuIElzIGl0IHNvbWV0aGluZyBsaWtlIFVuaXZlcnNpYWwgU3R1ZGlvLCBiZWNhdXNlIGlmIGl0IGlzIEkgYW0gdGVtcHRlZC4gSGF2ZW4gYmVlbiB0byBVbml2ZXJzaWFsIFN0dWRpbywgYnV0IEkgYW0gZ29pbmcgdGhlcmUgdGhpcyB0aW1lIGFzIHdlbGwuIEkgd2lsbCBsb29rIGludG8gb3RoZXIgdGhpbmdzIHlvdSBtZW50aW9uZWQsIHNvdW5kcyBmdW4hClVuc3Vic2NyaWJlIGZyb20gRGlnaXRhbEluc29tbmlhIC4gR3JlYXQgLiAKT25jZSBhZ2FpbiwgY2FuIHlvdSBwbGVhc2UgZ28gc2VlIGEgdGhlcmFwaXN0LCBCZXR0eSBDb29wZXI/LiAKSXQgd2FzIHZlcnkgc2VyaW91cyBidXNpbmVzcy4gClRoZWlyIGFsYnVtcyBGYWxsIEJlIEtpbmQgYW5kIFBhaW50aW5nIFdpdGggKGFuZCBNUFApIHJlbWluZCBtZSB0aGUgbW9zdCBvZiBUaGUgQmVhY2ggQm95cyBkdWUgdG8gdGhlaXIgZm9jdXMgb24gdm9jYWxzLiAKQXQgbGVhc3QgdGhlIGRvb3JzIHN0YXllZCBzaHV0IHRoaXMgeWVhciEgVGhlIHRocmVhdCBvZiBhbnkgcGxheWVyIChob21lIG9yIGF3YXkpIGhpdHRpbmcgc2l4IGFuZCB1bmRlciB3b3VsZCBiZSAiZ2VsbGVkIiBzZWVtZWQgdG8gYWZmZWN0IHRoZSBob21lIHRlYW0gbW9yZSBhcyB0aGV5IHN0cnVnZ2xlZCB0byBmaW5kIGFueSBzb3J0IG9mIHNjb3JlLiAKRm9vZCwgZHJpbmtzLCBNZXJjaCBvciB3aGF0ZXZlciBlbHNlIHlvdSdyZSBpbnRvLiBTdW5zY3JlZW4gZm9yIHN1cmUuIApJdCBpcyBwb2xsaW5nIGF0IDE3JS4uIApOb3Qgc3VyZSB3aHkgdGhhdCBwbGF5IHNob3VsZCBiZSBxdWVzdGlvbmVkLCBhcyBpdCBzdGlsbCB3b3VsZCBoYXZlIGJ1cm5lZCB0aGUgY2xvY2sgd2l0aCBhIGNvbXBsZXRpb24gYW5kIGdldHRpbmcgdGFja2xlZCBpbmJvdW5kcy4gCg==|<---