--->|IkhlIGtuZXcgd2hlcmUgQmluIExhZGVuIHdhcyBsaXZpbmcgYW5kIGhlIGhhZCBhbHJlYWR5IHNpZ25lZCBoaXMgZGVhdGggd2FycmFudCwgb3JkZXJpbmcgYSByaXNreSByYWlkIHRoYXQgd291bGQga2lsbCB0aGUgd29ybGQgbW9zdCB3YW50ZWQgdGVycm9yaXN0IHRoZSBmb2xsb3dpbmcgZGF5LCIgdGhlIFRpbWVzIHNhaWQuClNpbmdhcG9yZSBHRFAgcGVyIGNhcGl0YSB3YXMgVVMkMzYsNTczLCBjb21wYXJlZCB3aXRoIE1hbGF5c2lhIFVTJDYsOTc1LiBJbiAxOTY1LCBTaW5nYXBvcmUgYW5kIE1hbGF5c2lhIGhhZCBHRFAgcGVyIGNhcGl0YSBvZiBVUyQ1MTIgYW5kIFVTJDMzNSByZXNwZWN0aXZlbHkuIEJ1dCB3aGVyZSB0aGUgZWNvbm9teSBpcyBjb25jZXJuZWQsIFNpbmdhcG9yZSBpcyB3YXkgYWhlYWQgb2YgTWFsYXlzaWEuIEFib3V0IDQwMCwwMDAgTWFsYXlzaWFucyBhcmUgbm93IHdvcmtpbmcgaW4gU2luZ2Fwb3JlLiBTaW5nYXBvcmUgaGFzIGEgcG9wdWxhdGlvbiBvZiBvbmx5IGZpdmUgbWlsbGlvbi4KU28sIGZlbWFsZSBhbmF0b215ISBUaGUgdmFnaW5hIGl0c2VsZiBiZWNvbWVzIGxvbmdlciBhbmQgc2hvcnRlciB0aHJvdWdoIHlvdXIgbWVuc3RydWFsIGN5Y2xlIGFzIHRoZSBjZXJ2aXggcmFpc2VzIGFuZCBsb3dlcnMuIEl0IGFsc28gaXMgc29mdGVyIGFuZCBtb3JlIGZpcm0gYXQgZGlmZmVyZW50IHBvaW50cy4gRHVyaW5nIGFuZCBqdXN0IGFmdGVyIG1lbnN0cnVhdGlvbiwgeW91ciBjZXJ2aXggaXMgYXQgaXRzIGxvd2VzdCAoeW91ciB2YWdpbmEgaXMgdGh1cyBhdCBpdHMgc2hvcnRlc3QpIC4gCkV1IGZpeiB1bWEgcGVzcXVpc2Egbm8gR29vZ2xlIGUgbWUgZGVwYXJlaSBjb20gc2V1IHNpdGUuIEVyYSBleGF0YW1lbnRlIG8gcXVlIGV1IGVzdGF2YSBwcm9jdXJhbmRvIGUgZmlxdWVpIGltcHJlc3Npb25hZG8gYW8gZW5jb250cmFyIHVtYSBhbXBsYSBnYW1hIGRlIGFydGlnb3MuIENvbW8gZXUgZXN0b3UgbGFuYW5kbyB1bWEgcmV2aXN0YSBncmF0dWl0YSBlbSB1bWEgcGVxdWVuYSBjaWRhZGUgbmEgRmxyaWRhLCBldSBxdWVyaWEgc2VyIHRvIGhhYmlsaWRvc28gcXVhbnRvIHBvc3N2ZWwgZSBhaW5kYSBzZXIgY2FwYXogZGUgZm9ybmVjZXIgYWxndW0gY29udGVkbyBxdWUgIGludGVyZXNzYW50ZSBlIGJlbSBlc2NyaXRvLiBTZXUgc2l0ZSB0ZW0gdG9kYXMgYXMgdmFyaXZlaXMgbm8gbWl4LiBFeGNlbGVudGUgU2l0ZSBhY2VydGFuZG8gdG9kYXMgYXMgbm90YXMsIG8gdGlwbyBkZSBlc2NhbGEgZGUgZmFsYS4KQXQgMToxNCB5b3UgdGhlbiByZXBlYXQgeW91ciBwYXN0IG1pc3Rha2UgYW5kIGZlYXIgdGhlIGh1bnRlciBhZ2FpbiwgYW5kIHRoZSBkcnVpZCByZXBlYXRzIHRoZSBleGFjdCBzYW1lIHRoaW5nIGhlIGRpZCBiZWZvcmUuIEFuZCBpdCBoYXBwZW5zIGFnYWluLi4gCkFuZCB0aGVyZSdzIG9uZSBhbmdyeSBtb2IgdHJ5aW5nIGl0cyBoYXJkZXN0IHRvIHNob3cgaXQgc3RpbGwgaGFzIHBvd2VyIChhbmQgaXQncyBsb3NpbmcpIGJ5IHVzaW5nIG1vdmllcyBhcyBhIHByb3h5IHdhciBmb3IgdGhpcyBidWxsc2hpdC4gKEFuZCB2aWRlbyBnYW1lcykKSXQgaGFzIHNpbmNlIGJlY29tZSBzb3J0IG9mIGFuIHVyYmFuIGxlZ2VuZC4gTWFueSB5ZWFycyBsYXRlciwgdGhpcyBmZWxsb3cgKERvbikgS251dGggICBoZSBhIHZlcnkgd2VsbCBrbm93biBjb21wdXRlciBzY2llbnRpc3QgICB3YXMgYmljeWNsaW5nIGRvd24gdGhlIHN0cmVldCBvbmUgZGF5IGF0IFN0YW5mb3JkLCBhbmQgaGUgY29tZXMgdXAgdG8gbWUgYW5kIHNheXMsICJEbyB5b3Uga25vdyB5b3UgYXJlIGluZmx1ZW5jaW5nIHJlbGlnaW9uIGluIG1pZGRsZSBBbWVyaWNhPyIKR3JlZW5lcnkgYW5kIGdsZWFtaW5nIG9ybmFtZW50cyBzcHJhd2wgYWNyb3NzIGEgZmlyZXBsYWNlIGd1YXJkZWQgYnkgdHdvIGdpYW50IG51dGNyYWNrZXJzLgpDYXRtYW4zNjAgdQpJJ2Qgc2F5IGdvIGZvciB0aGUgTVJJIGlmIHlvdSBjYW4gYWZmb3JkIGl0LiBJIGxpdmUgaW4gQ2FuYWRhIHNvIE1SSSBpcyBmcmVlIGJ1dCBoYXJkIHRvIGdldC4gSSB3aXNoIEkgaGFkIGRlYWx0IHdpdGggaXQgYSB5ZWFyIGVhcmxpZXIuIEkgdHJpZWQgUFQgZm9yIGEgeWVhciBmaXJzdCBhbmQgaXQgZGlkIG5vdGhpbmcgZm9yIG1lLiBTaGUgd2FzIHdvcmtpbmcgb24gc3RyZW5ndGhlbmluZyBteSBoaXBzIGFuZCBxdWFkcyBidXQgdGhvc2Ugd2VyZW4ndCB3ZWFrIGluIHRoZSBmaXJzdCBwbGFjZSBzbyBJJ20gbm90IHN1cmUgd2hhdCB0aGUgcG9pbnQgd2FzLgpJIHRoaW5rIGV2ZXJ5dGhpbmcgaGUgc2F5cyBpcyBmYWxzZSB3aXRoIGEgcmluZyBvZiB0cnV0aC4gSSB0aG91Z2h0IGFib3V0IHRoaXMgeWVzdGVyZGF5OiBoZSBpcyBzdGlsbCBibGFtaW5nIFNXLiBFdmVuIGlmIGl0IHdhcyBhICJjcmltZSBvZiBwYXNzaW9uIiAod2hpY2ggSSBrbm93IHRoaXMgaXNuJ3QgYnV0IGl0IHNlZW1zIGxpa2UgdGhhdCdzIHdoYXQgaGUgaXMgaW5mZXJyaW5nKSBpdCB3b3VsZG4ndCBtYWtlIHNlbnNlIHRvIHRoZW4gbXVyZGVyIHlvdXIgY2hpbGRyZW4uIEFmdGVyIGRyaXZpbmcgdGhlbSA0MCBtaW51dGVzLiBOZWFybHkgYW4gaG91ciB3aGVyZSB5b3UgY291bGQgaGF2ZSBzYWlkICJ3YWl0IG9oIG5vIEkgbWVzc2VkIHVwIGJhZGx5IGxldCBtZSBkbyB0aGUgcmlnaHQgdGhpbmciIGlmIGFueXRoaW5nIGhpcyBuZXcgc3RhdGVtZW50IGp1c3QgaGlnaGxpZ2h0cyB0aGlzIGVudGlyZSB0aGluZyBiZWluZyBwcmVtZWRpdGF0ZWQuIFNvLCBJIHRoaW5rIHdpdGggdGhpcyBsYXRlc3QgImNvbmZlc3Npb24iIHNvbWUgdGhpbmdzIG1ha2UgbW9yZSBzZW5zZSB1bmZvcnR1bmF0ZWx5LiBBbHRob3VnaCBub3cgdGhhdCBJJ20gdHlwaW5nIHRoaXMgb3V0IGl0IGRvZXNuJ3QsIHdoeSBkcml2ZSB0aGUgZ2lybHMgNDAgbWludXRlcyB0byB0aGUgc2l0ZSBiZWZvcmUga2lsbGluZyB0aGVtPyBUaGUgb25seSByZWFzb24gdGhhdCBtYWtlcyBtb3JlIHNlbnNlIHRvIG1lIGlzIGJlY2F1c2Ugb2YgdGhlICJzaGFkb3dzIiB3aGljaCBJIHJlYWxpemUgaGFzbid0IGJlZW4gY29uZmlybWVkIGJ5IGFueW9uZSBpbiBMRSBzbyBJIGd1ZXNzIEkgc2hvdWxkbid0IGtlZXAgdGhpbmtpbmcgdGhhdCdzIGV2aWRlbmNlIHRoZXkgd2VyZSBzdGlsbCBhbGl2ZS4gU29ycnkgZm9yIHRoZSByYW1ibGluZy4gSSBhZ3JlZSB3aXRoIHlvdXIgcG9zdCBhYm91dCBoaW0gc3RpbGwgYmxhbWluZyBoZXIgaXQncyBzaWNrLgpUaGlzIGlzIGEgSm91cm5hbCBlbnRyeSBieSBuaW0gdGhlIGNhdCBTVElMTCBjaG9raW5nIGluIGFpciBwb2xsdXRpb24KSSBuZXZlciBnb3R0ZW4gY29tcGxldGVseSBsb3N0IGluc2lkZSBhIEZhbmRvbSwgYnV0IEkgcHJldHR5IGVtYmVkZGVkIHdpdGhpbiBpdCB3aGVuIEkgaW4gaXRzIG1vZGUuIEFuZCBpdCBuZXZlciBnZXRzIG91dCBvZiBjb250cm9sIChsaWtlIEkgZG9uIGltYWdpbmUgVCBpcyBteSBnaXJsZnJpZW5kIG9yIGFueXRoaW5nIHF1ZXN0aW9uYWJsZSBsaWtlIHRoYXQpLCBidXQgaXQgZG9lcyBiZWNvbWUgYSBiaXQgY29uc3VtaW5nIG9mIChvciBhdCBsZWFzdCBoZWF2aWx5IHNoYWRlKSBteSBmcmVlIHRpbWUuCkV2ZXJ5Ym9keSB3YXMgdXNpbmcgcmF6b3IgYmxhZGVzLCBjaGVtaWNhbHMsIHNwb25nZXMuIApIZWFkZWQgVG8gRm9ydCBMYXVkZXJkYWxlIEZvciBTcHJpbmcgQnJlYWsKTGUgZHJvaXQgcG5hbCBmcmFuYWlzIHBydm9pdCBxdWUgc2V1bGUgbGEgcGVyc29ubmUgZG91ZSBkZSBkaXNjZXJuZW1lbnQsIGxvcnMgZGUgbCdhY2NvbXBsaXNzZW1lbnQgZGUgbCdhY3RlIGRsaWN0dWV1eCwgcGV1dCB0cmUgdGVudWUgcG91ciByZXNwb25zYWJsZS4gCllvdXIgaGlwIGZsZXhvcnMgbGlmdCB5b3VyIGxlZ3MsIGFuZCBhcmUgdGh1cyBzb21lIG9mIHRoZSBzdHJvbmdlc3QgYW5kIG1vc3QgdXNlZCBtdXNjbGVzIGluIHlvdXIgYm9keS4gCkl0IGlzIHN0aWxsIGEgZmFpcmx5IG5ldyBjYXNpbm8sIHNvIGl0IG1pZ2h0IHN0aWxsIGdldCB0aGUgdHJhdmVsIGZyb20gdGhlIHJlZ2lvbi4gSSBhbHdheXMgbGlrZSB0byBhc2sgdGhlIHBsYXllcnMgbmVhciBtZSBpZiB0aGV5IGFyZSBmcm9tIHRoZSBhcmVhLiAKUmVtb3ZlIHRoZSAocHJvYi4gMTBtbSkgYm9sdHMgdGhhdCBob2xkIHRoZSB0cmFucyBwYW4gb24gYXJvdW5kIHRoZSBlZGdlIG9mIHRoZSB3aG9sZSBib3R0b20gb2YgaXQuIChsaWtlIDE1IG9yIHNvIG9mIHRoZW0pIExlYXZlIHRoZSBsYXN0IGJvbHQgdGlnaHQuIFB1dCBkcmFpbiBwYW4gYmVsb3cuIEZsdWlkIGlzIGdvaW5nIHRvIGNvbWUgZnJvbSBvcHBvc2l0ZSBzaWRlIG9mIHBhbiBmcm9tIHRoYXQgbGFzdCBib2x0LiBOb3csIHVuZG8gdGhlIGxhc3QgYm9sdCBhIGZldyB0dXJucyBhbmQgb24gdGhlIG9wcG9zaXRlIHNpZGUgdXNpbmcgYSBzbWFsbCBwcnliYXIgb3Igc2NyZXdkcml2ZXIgYnJlYWsgdGhlIHBhbiBmcmVlIGZyb20gdGhlIHRyYW5ueS4gClBvdXIgYmllbiBhcHByZW5kcmUsIGlsIGZhdXQgc2Ugc2VudGlyIGVuIHNjdXJpdC4gT3IgbGEgcnVzc2l0ZSBzdXIgbGUgcGxhbiBhY2FkbWlxdWUgZXN0IHJlbGllIGF1IGJpZW4gdHJlIHNvY2lhbC4uIApJbnN0ZWFkLCBJIGFtIHRhbGtpbmcgYWJvdXQgdGhlIGluY3JlZGlibHkgaW1wb3J0YW50IGlzc3VlIG9mIGxpY2Vuc2UgcGxhdGVzLi4gClRoZW4gd2hlbiB0aGV5IHNwcmF5ZWQgZm9yIG1vc3F1aXRvZXMsIHRoZXkgYmxhbWVkIHRoYXQgKGFmdGVyIHRoZSBmYWN0KSBhbmQgY2xhaW1lZCBpdCBzZXQgdGhlaXIgc29uIGJhY2suIApEJ3VuZSBwYXJ0LCBsJ2Vudm9pIGRlIG1hdGlyZXMgZGFuZ2VyZXVzZXMgb3UgZGUgdmFsZXVycyAoYmlsbGV0cyBkZSBiYW5xdWUpIGVzdCBzdHJpY3RlbWVudCBpbnRlcmRpdCBwYXIgdW4gZW52b2kgc2ltcGxlIChDb2RlIGRlcyBQb3N0ZXMgZXQgZGVzIENvbW11bmljYXRpb25zIGxlY3Ryb25pcXVlcyBDUENFKS4KSGUgbWFkZSBoaXMgcG9pbnQgYW5kIGF0IHRoZSBlbmQsIGhlIHdvbiAoaW4gc29tZSByZWdhcmQpLi4gCk1lYWwgcmVwbGFjZW1lbnRzLiBJIGtub3cgdGhhdCBtdWx0aXZpdGFtaW5zIGluIG15IG9waW5pb24gYXJlIHNoaXQuIFRoZXkncmUgc21lbGx5LCB0YXN0ZSBsaWtlIHN3ZWF0eSBhc3MgY3JhY2sgc21lbGxzIG1ha2UgbWUgZ2FnLiAKVGhlIHdvcmQgaGVhZGluZyBoYXMgdmFyaW91cyBtZWFuaW5nczogIEluIGNvbXB1dGluZywgYSBoZWFkaW5nIGlzIHVzZWQgdG8gcHJvdmlkZSBoaWVyYXJjaGljYWwgaW5mb3JtYXRpb24gYWJvdXQgb3RoZXIgaW5mb3JtYXRpb24uIEhlYWRpbmdzIGNhbiBlbXBoYXNpemUgb3IgdGVsbCBwZW9wbGUgd2hhdCBpbmZvcm1hdGlvbiBpcyB3aGVyZSwgc3VjaCBhcyBhIHRpdGxlIG9yIHN1YnRpdGxlIG9yIHRvcGljIGF0IHRoZSB0b3Agb3IgYmVnaW5uaW5nIG9mIGEgcGFyYWdyYXBoIG9yIGxldHRlciBvciBjaGFwdGVyLiAKVGhlIG9ubHkgZ3JlZWtzIHdlIGFyZSBjbG9zZSB0byBhcmUgYW5hdG9saWFuIG9uZXMsIGJ1dCB0aG9zZSBncmVla3MgYXJlIHZlcnkgZGlmZmVyZW50IGZyb20gbWFpbmxhbmQgb25lcy4gCkRvY3VtZW50cyByZWxlYXNlZCBXZWRuZXNkYXkgaW5jbHVkZSBpbnRlcnZpZXdzIHdpdGggd29ya2VycyB3aG8gaW50ZXJhY3RlZCB3aXRoIHRoZSBndW5tYW4gb24gdmlzaXRzIHRvIHRoZSBNYW5kYWxheSBCYXkgYW5kIG90aGVyIGhvdGVscyBiZWZvcmUgdGhlIE9jdG9iZXIgMSBzaG9vdGluZy5QYWRkb2NrIHN0YXllZCBpbiB0aGUgcm9vbSwgd2hpY2ggd2FzIG1vc3RseSBjbGVhbiwgZXhjZXB0IHRoZSBiZWQgYW5kIHRoZSBiYXRocm9vbSwgYW5kIHNwZW50IG11Y2ggb2YgaGlzIHRpbWUgb24gaGlzIGNvbXB1dGVyLCBlYXRpbmcgcm9vbSBzZXJ2aWNlIHNvdXAsIHNoZSBzYWlkLiBUaGVyZSB3YXMgbm8gdHJhc2ggaW4gaGlzIHdhc3RlYmFza2V0cywgc2hlIHRvbGQgaW52ZXN0aWdhdG9ycy5BdCBmaXJzdCBzaGUgZGlkbiBtaW5kIGhpbSBiZWluZyB0aGVyZSBidXQgc2hlIGdyZXcgdW5lYXN5LiJIZSAoa2VwdCkgc3RhcmluZyBhdCBtZSwiIHNoZSBzYWlkLndhcyBqdXN0IHdlaXJkIG1hbiB3aG8gd29ya2VkIGZvciBDYWVzYXJzIEVudGVydGFpbm1lbnQgd2hvIGhhZCBrbm93biBQYWRkb2NrIGZvciB5ZWFycyBzYWlkIFBhZGRvY2sgd2FzIGEgcmVndWxhciBndWVzdCBmb3Igc2V2ZXJhbCB5ZWFycyBidXQgQ2Flc2FycyB0b29rIG91dCBoaXMgZmF2b3JpdGUgdmlkZW8gcG9rZXIgbWFjaGluZXMuIFBhZGRvY2sgd2FzIGEgc2tpbGxlZCBnYW1ibGVyLCB0aGUgY2FzaW5vIGhvc3Qgc2FpZCwgYW5kIGhlIHN0b3BwZWQgY29taW5nIG9uY2UgdGhvc2UgZ2FtZXMgd2VyZSB0YWtlbiBvdXQuVGhlIGhvc3Qgc2FpZCBQYWRkb2NrIHdhcyBhbiBvZGQgZ3V5IHdobyBlaXRoZXIgY2FtZSB0byBvbmUgb2YgdGhlIENhZXNhcnMgcHJvcGVydGllcyBhbG9uZSBvciB3aXRoIGhpcyBnaXJsZnJpZW5kLCBNYXJpbG91IERhbmxleS4gCkl0IGNhbiB0YWtlIHRpbWUgZm9yIGFuIGFuc3dlciB0byBzaG93IHVwLCBzbyB3ZSB0aGFuayB5b3UgZm9yIHlvdXIgcGF0aWVuY2UuIApQcm92aWRlZCB0aGUgU29vZmFzIGNhbiBwdXQgb3V0IGVub3VnaCBlbmVyZ3ksIHlvdSBjb3VsZCBjb25jZWl2YWJseSBydW4gbGFyZ2VyLCBtb3JlIHBvd2VyIGh1bmdyeSBkZXZpY2VzIG9mZiB0aGVtIHNvbWVkYXkuLiAKSmltIG9ubHkgY2FtZSBhIGZldyB0aW1lcyBidXQgYWx3YXlzIHNlZW1lZCBhbG1vc3QgcmVja2xlc3MgaW4gdGhlIHdheSBoZSBtb3ZlZCBhYm91dCB0aGUgaG9ycm9yIG1vdmllIGJ1aWxkaW5ncyBsaWtlIGhlIHdhcyBkb2luZyBhIHdhbGt0aHJvdWdoIHdpdGggYSByZWFsdG9yLiBIZSBzZWUgYSBjbG9zZWQgZG9vciwgYW5kIG9wZW4gaXQgdXAgYW5kIHdhbGsgcmlnaHQgaW50byB0aGUgbWlkZGxlIG9mIHRoZSByb29tLiBJZiB5b3UgZXZlciBiZWVuIGV4cGxvcmluZyBhYmFuZG9uZWQgY3JlZXB5IGFzcyBidWlsZGluZ3MsIHlvdSBrbm93IHRoYXQgeW91IHRlbmQgdG8gY3JlZXAgYWJvdXQga2luZCBvZiBzbG93LCBwZWVraW5nIGFyb3VuZCBjb3JuZXJzIGFuZCB0aHJvdWdoIGNyYWNrZWQgZG9vcnMgYmVmb3JlIG1vdmluZyBvbi4gCkl0IGJhZmZsZXMgbWUgeW91IGNhbiBzZW5kIG91dCBzdWNoIGEgdmFndWUgYmFkIGFsZXJ0IGFuZCBub3QgaGF2ZSBhbnkgcHVibGljIGNvbW1lbnQgb24gaXQuIApUaGUgIFNlc3Npb24gaXMgaW5kaXZpZHVhbGx5IHRhaWxvcmVkIHRvIGVhY2ggY2xpZW50J3MgbmVlZHMgYmVjYXVzZSBpdCBjYW4gYmUgY29tcHJpc2VkIG9mIG1hbnkgcHJhY3RpY2VzIHN1Y2ggYXM6IFJlZmxleG9sb2d5LCBDcnlzdGFsIFdvcmssIGFuZCBDcmFuaWFsIFNhY3JhbCBUaGVyYXB5IGFzIHdlbGwgYXMgbWFueSBvdGhlcnMuLiAKQW5kIHdoZW4gSSBjYWxsZWQgdGhlIGhlbHAgY2VudGVyLCB0aGV5IHRvbGQgbWUgdGhhdCB0aGF0IHdhcyB0aGUgcmVhc29uIHdoeSBteSBiYW5rIGFjY291bnQgd2FzIHN1c3BlbmRlZC4gRXZlbiB0aG91Z2ggSSBoYXZlIGJlZW4gdXNpbmcgaXQgZm9yIG1hbnkgeWVhcnMuIApEYXZpZCBTZWRhcmlzCkNlIHF1aSBsJ2VzdCBtb2lucyBjJ2VzdCBxdWUgbGEgcHJlc3NlICBjZW5zdXIgbGVzIHZpc2NyYXRpb25zLCBkY2FwaXRhdGlvbiwgc2V4ZXMgY291cHMgZXQgbWlzIGRhbnMgbGEgYm91Y2hlIGQnYXUgbW9pbnMgdW4gamV1bmUsIHNpbXVsYWNyZSBkZSB2aW9sIGRlIGZlbW1lcyBhdmVjIHVuIGNvdXRlYXUuIEV0IG91aSBjJ2VzdCBtYWludGVuYW50IGF0dGVzdCBwYXIgdW4gcmFwcG9ydCBxdWkgZmlndXJlIHN1ciBsZSBzaXRlIGRlIGwnQXNzZW1ibGUgTmF0aW9uYWxlLkRlcyBtdXN1bG1hbnMgb250IHBheSB1biBsb3VyZCB0cmlidXQgIGxhIGZvbGllIHZlbmdlcmVzc2UgZHUgY2hhdWZmZXVyIHR1bmlzaWVuLiAKSm9uIGhhcyBhbHdheXMgaGF0ZWQgdXMgYmVjYXVzZSB3ZSB0YWxrZWQgc2hpdCBhYm91dCBoaW0gbGlrZS4gc2l4IG1vbnRocyBhZ28gb24gdGhlIHBvZGNhc3QgYW5kIGhlIGp1c3QgY2FuIGZ1Y2tpbmcgaGFuZGxlIHRoYXQuIFNvIG92ZXIgQ2hyaXN0bWFzIGhlIHdhcyBETSBpbmcgbWUgZnVyaW91c2x5IGFuZCBJIGh1bW9yZWQgaGltIGZvciBhIGJpdCwgYmVjYXVzZSBmb3IgYSBwZXJpb2Qgb2YgdGltZSBJIHRob3VnaHQgaGUgd2FzIHByZXR0eSBmdW5ueS4gRXZlciBzaW5jZSB0aGVuIGhlIGp1c3QgYmVlbiBtZWFuIGFuZCBzdHJhbmdlLCBwb3N0aW5nIGEgYml6YXJyZSBzdG9yeSBvdXQgb2Ygbm93aGVyZSBhYm91dCAiQ1JBWSBDUkFZUyIgZXZlcnkgd2VlayBvciBzby4KRmlyc3RseSwgaXQncyB3b3J0aCBub3RpbmcgdGhhdCBSdXNzaWEgaXMgYWN0dWFsbHkgbW92aW5nIGJhY2t3YXJkcyBvbiB0aGUgYW1vdW50IG9mIGhlbHAgaXQncyBsaWtlbHkgdG8gZXh0ZW5kIHRvIEN5cHJ1cy4gV2hlbiB0aGUgYmFpbG91dCBwbGFuIHdhcyBmaXJzdCBhbm5vdW5jZWQsIGl0IGluY2x1ZGVkIFJ1c3NpYSBleHRlbmRpbmcgaXRzIGV4aXN0aW5nIDIuNWJuIGxvYW4gdG8gdGhlIGNvdW50cnkgYnkgZml2ZSB5ZWFycywgYXMgd2VsbCBhcyByZWR1Y2luZyB0aGF0IGxvYW4ncyBpbnRlcmVzdCByYXRlLiBOb3csIFJ1c3NpYSBpcyByZWZ1c2luZyB0byBhZ3JlZSBldmVuIHRvIHRoYXQuCkluc2lkZSBRdWVlbnMnIGlsbGljaXQgYnJvdGhlbCBkaXN0cmljdAooU29tZSAxNTAgdHJpYmVzIGhhdmUgc2lnbmVkLCBvciBhcmVuZWdvdGlhdGluZywgY2FzaW5vIGNvbXBhY3RzIHdpdGggc3RhdGVzIGZvciBmb3JtcyBvZiBnYW1ibGluZy4gVGhlbmVhcmVzdCBsb2NhdGlvbiBmb3IgdXMgaXMgaW4gQ29sdXNhLikgQSByZWNlbnQgYWRkaXRpb24gdG8gZ2FtYmxpbmdjb21lcyB2aWEgQ3liZXJzcGFjZSBhbmQgYXMgYW4gYXJ0aWNsZSBpbiBUaGUgU2FuIEZyYW5jaXNjb0Nocm9uaWNsZSBvZiBNYXJjaCAzMCwgMTk5NiBwb2ludGVkIG91dDogIkEgeWVhciBhZ28sIGdhbWJsaW5nYW5kIHRoZSBOZXQgd2VyZSBhbG1vc3QgdG90YWwgc3RyYW5nZXJzLiAKVGhlIGgyZzIgRWRpdGVkIEd1aWRlLCB3aGljaCB3YXMgbGF1bmNoZWQgaW4gMTk5OSBhbmQgaXMgc3RpbGwgYmVpbmcgYWRkZWQgdG8gZGFpbHksIGNvbnRhaW5zIGEgbG90IG9mIHJlYWxseSBpbnRlcmVzdGluZyBpbmZvcm1hdGlvbiB0aGF0IGdvdCBsZWZ0IG91dCBvZiB0aGUgSGl0Y2hoaWtlcidzIEd1aWRlIGJ5IHRoYXQgaWdub3JhbXVzIFphcm5pd29vcC4gClRoZSBwb2xpY3kgcmF0ZSByZW1haW5zIGJlbG93IHRoZSBuZXV0cmFsIHJhdGUsIHRoZSBzZXR0aW5nIGF0IHdoaWNoIHRoZSBCYW5rIG9mIENhbmFkYSBlc3RpbWF0ZXMgdGhhdCBtb25ldGFyeSBwb2xpY3kgaXMgbmVpdGhlciBlbmNvdXJhZ2luZyBvciBkaXNjb3VyYWdpbmcgYm9ycm93aW5nLiAKV2hlbiBpdCBjb21lcyB0byBnYW1lcywgU2Ftc3VuZyBoYXZlIHRoZWlyIGhhbmRzZXRzIHBhY2tlZCB3aXRoIHRoZW0uIEl0J3MgcXVpdGUgcGxlYXNpbmcgdG8gc2VlIGFsbCB0aG9zZSB0aXRsZXMgc2l0dGluZyBpbiB0aGUgZnVuIGNvcm5lci4gCjIzNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBwbGF5aW5nIHZhcmlvdXMgdHlwZXMgb2YgcG9rZXIsIGl0IGlzIGxpa2VseSB0aGF0IHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBob3cgdG8gY2hvb3NlIGNhc2lubyBwb2tlciBjaGlwcyB0aGF0IGFyZSByaWdodCBmb3IgeW91LiBJdCBpcyBlc3NlbnRpYWwgdGhhdCB5b3Uga25vdyBhbmQgdW5kZXJzdGFuZCwgcmlnaHQgdXAgZnJvbnQsIHRoYXQgcG9rZXIgY2hpcHMgYXJlIGEgZ2FtaW5nIGl0ZW0gdGhhdCBhcmUgbm90IGNyZWF0ZWQgZXF1YWxseS4gWW91IHNob3VsZCBsZWFybiB0aGF0IHRoZXkgYXJlIHR5cGljYWxseSBjb21wb3NlZCBvZiBkaWZmZXJlbnQgbWF0ZXJpYWxzLCBhbmQgdmFyeWluZyBhbW91bnRzIGFyZSBuZWVkZWQgdG8gcGxheSB3aGVuIGl0IGNvbWVzIHRvIGdyb3VwIGdhbWluZy4gSW4gdGhpcyBob3cgdG8gZ3VpZGUsIHlvdSB3aWxsIGxlYXJuIGhvdyB0byBjaG9vc2UgY2FzaW5vIHBva2VyIGNoaXBzIHRoYXQgYXJlIHJpZ2h0IGZvciB5b3UgYnkgbGVhcm5pbmcgbW9yZSBhYm91dCB0aGUgcHJvZHVjdHMgaW4gZ2VuZXJhbC4KRmFsc2NoLiBFdXJvcGEgbWFnIG51ciBmciBlaW5lbiBUZWlsIGRlcyBLbGltYXdhbmRlbHMgdmVyYW50d29ydGxpY2ggc2Vpbi4gQWJlciBFdXJvcGEgaXN0IGF1Y2ggbmljaHQgZGllIGVpbnppZ2UgUmVnaW9uLCBpbiBkZXIgZGllIExldXRlIFZlcm5kZXJ1bmcgd29sbGVuLiAKTGFzdCBuaWdodCBiZWZvcmUgaGUgbGVmdCBJIHNhaWQgdG8gaGltIEkgaG9wZSB5b3UgcmVtZW1iZXIgd2hhdCBoYXBwZW5lZCBsYXN0IFRodXJzZGF5IGFuZCBjYW4gY29tZSBob21lIGF0IGEgZGVjZW50IHRpbWUuIApTbyBpbiBzdW0sIHRoZSBCcml0aXNoIENlbHRpYyBsYW5ndWFnZSBpbXBhcnRlZCBzbyBmZXcgbG9hbndvcmRzIGludG8gRW5nbGlzaCBiZWNhdXNlIDEpIGxpbmd1aXN0aWMgY29udGFjdCBvZnRlbiBjaGFuZ2VzIHN5bnRheCBtb3JwaG9sb2d5LCBub3Qgdm9jYWJ1bGFyeSAyKSBDZWx0aWMgbGFuZ3VhZ2VzIGluZmx1ZW5jZWQgRW5nbGlzaCBvbiB0d28gb2NjYXNpb25zOiBhIHBob25vbG9naWNhbCBpbmZsdWVuY2UgaW1wYXJ0ZWQgYnkgYSBoeXBvdGhldGljYWwgTG93bGFuZCBCcml0aXNoIENlbHRpYyBsYW5ndWFnZSB3aGljaCBjYW4gYmUgZGlzY2VybmVkIGluIE9sZCBJcmlzaCwgaXRzIGNsb3Nlc3Qgc3Vydml2aW5nIHJlbGF0aXZlLiBDZWx0aWMgZGlkbiBpbmZsdWVuY2Ugd3JpdHRlbiBPbGQgRW5nbGlzaCBzeW50YXggbW9ycGhvbG9neSBkdWUgdG8gc29jaW8gbGluZ3Vpc3RpYyByZWFzb25zLCBidXQgZGlkIGluZmx1ZW5jZSBNaWRkbGUgRW5nbGlzaCBncmFtbWFyIGFzIGEgcmVzdWx0IG9mIG90aGVyIHNvY2lvIGxpbmd1aXN0aWMgcGhlbm9tZW5hIDMpIHRoZSBkaWFsZWN0cyBzcG9rZW4gYnkgQnJpdG9ucyBpbiB0aGUgaW5pdGlhbCBhcmVhIG9mIEFuZ2xvIFNheG9uIGNvbG9uaXNhdGlvbiBtYXkgbm90IGhhdmUgYmVlbiBDZWx0aWMgYXQgYWxsIChzb21lIGZvcm0gb2YgQnJpdGlzaCBMYXRpbikgb3IgYSBoZWF2aWx5IExhdGluaXplZCBmb3JtIG9mIENlbHRpYyBkaXN0aW5jdCBmcm9tIG90aGVyIEluc3VsYXIgQ2VsdGljIGxhbmd1YWdlcy4gVGhpcyBpcyB3aHkgQ2VsdGljIGluZmx1ZW5jZSBvbiB0aGUgRW5nbGlzaCBsYW5ndWFnZSBpcyBpbmNyZWRpYmx5IGRpZmZpY3VsdCB0byBkaXNjZXJuIGlmIHdlIGFzc3VtZSB0aGF0IHRoZSBIaWdobGFuZCBCcml0aXNoIGxhbmd1YWdlcyAoV2Vsc2gsIEJyZXRvbiwgQ29ybmlzaCkgYXJlIHBhcmFkaWdtYXRpYyBvZiBCcml0aXNoIENlbHRpYyBsYW5ndWFnZXMgYXMgYSB3aG9sZS4uIApUaG9zZSBpbmp1cmllcywgY29tYmluZWQgd2l0aCBDVSdzIGNvbnRpbnVlZCByb3RhdGlvbiBhcyBndWFyZCwgaGF2ZSBjcmVhdGVkIGEgbG90IG9mIG1vdmluZyBwYXJ0cyB1cCBmcm9udC4gQ29udmVudGlvbmFsIHdpc2RvbSBzYXlzIGNvaGVzaW9uIGFtb25nIHRoZSBmaXZlIGxpbmVtYW4gaXMgY3JpdGljYWwsIGJ1dCBDVSBoYXNuJ3QgaGFkIHRoYXQuClRoZSBvdGhlciBoYWxmIGlzIGZvdW5kIHByZWRvbWluYW50bHkgaW5zaWRlIGNlbGxzIG9mIGJvZHkgdGlzc3VlcyBhbmQgb3JnYW5zLiBPbmx5IDElIG9mIG1hZ25lc2l1bSBpcyBmb3VuZCBpbiBibG9vZCwgYnV0IHRoZSBib2R5IHdvcmtzIHZlcnkgaGFyZCB0byBrZWVwIGJsb29kIGxldmVscyBvZiBtYWduZXNpdW0gY29uc3RhbnQuMS4gCllvdSB3ZWxjb21lIHRvIHBvc3QgdGhlIHZpZGVvIGFnYWluIGFuZCB3ZSB3b24gcmVtb3ZlIGl0LiBJIGNhbiB1bmRlcnN0YW5kIGJvdGggdGhlIHJlYXNvbnMgZm9yIHJlbW92YWwgYW5kIGZvciBsZXR0aW5nIGl0IGdvLCBhbmQgb2Z0ZW4gdGhpbmdzIGFyZW4gc28gY2xlYXIgY3V0IHdoZW4gbW9kZXJhdGluZy4gU29tZXRpbWVzIHdlIGhhdmUgdG8gbWFrZSBhbiBpbml0aWFsIGRlY2lzaW9uIGFmdGVyIGEgc2hvcnQgcmV2aWV3LCBhbmQgaXQgaXNuIGFsd2F5cyBjb3JyZWN0LCBidXQgd2Ugd2lsbGluZyB0byBnaXZlIHRoaW5ncyBhIHNlY29uZCBsb29rIHdoZW4gYXNrZWQuCkl0IDIwIG1pbnV0ZSBibGluZHMsIGFuZCB0aGV5IHVzdWFsbHkgaGF2ZSAyMDArIGVudHJpZXMgd2l0aCA3NSsgYWRkIG9ucy4gCldhcyBhIHByb3VkIHRoaXJkIGdlbmVyYXRpb24gU2FuIEZyYW5jaXNjYW4sIHdobyBkZXZvdGVkIGhpcyBmdWxsIHB1YmxpYyBhbmQgcHJpdmF0ZSBsaWZlIHRvIG91ciBjaXR5LCBQZWxvc2kgc2FpZCBpbiBzdGF0ZW1lbnQuIApXaXRoIHNvIG11Y2ggb2YgYSBtZWV0aW5nIHBsYW5uZXIncyBidXNpbmVzcyBiZWluZyByZXBlYXQgY2xpZW50cywgVHJpY2FubyBzYWlkIGhlIGJlbGlldmVzIGNhc2lub3MgY2FuIHB1dCBhIG5ldyBzcGluIG9uIGV2ZW50cyB0byBrZWVwIHRoZWlyIGNvcnBvcmF0ZSBhY2NvdW50cyBoYXBweS4KUGFyIHNvdXNjcmlwdGlvbiwgdm91cyBwYXJ0aWNpcGV6ICBsYSBwaGFzZSBmaW5hbGUgZGUgY3JhdGlvbjogbCBlc3QgZGUgY29sbGVjdGVyIHVuZSBzb21tZSBzdWZmaXNhbnRlIHBvdXIgbGFuY2VyIGwgZCAgMTUgam91cnMsIGNlIHF1aSBwZXJtZXR0cmFpdCBsIGRlcyBsaXZyZXMgZGFucyB1biBwZXUgbW9pbnMgZCBtb2lzLiBDZWxhIGZhaXQgcGx1cyBkZSB0cm9pcyBhbnMgcXVlIGNlIGxpdnJlIGVzdCBhdSB0cmF2YWlsLCBub3VzIG5lIHNvbW1lcyBwbHVzICBxdWVscXVlcyBzZW1haW5lcyBwcnMsIG4gcGFzID8gOikuIApJdCBpcyB0aGF0IHRoZXNlIHNpdGVzIG5lZWQgdG8gcHJvbW90ZSB0aGVtc2VsdmVzIGFuZCB3aGF0IGNhbiBiZSBiZXR0ZXIgdGhhbiBmcmVlIHJvbGwgYW5kIGJvbnVzZXMgdG8gcHVsbCBwZW9wbGU/IFRoZXJlIGFyZSBmZXcgY29uIHNpdGVzIHRoYXQgaGF2ZSBjcmVhdGVkIGEgYmFkIGltcHJlc3Npb24gYW5kIHBlb3BsZSBmZWFyIHRvIHRydXN0IHRoZW0gYW55IG1vcmUuIApUaGlzIGFsc28gd29ya3Mgd2l0aG91dCB3ZWlnaHRzIG9yIGJhbmRzIGJ5IGp1c3QgY29udHJhY3RpbmcgYW5kIHNxdWVlemluZyB0aGUgbXVzY2xlcyBmb3IgNSBzZWNvbmRzLCByZWxheGluZywgYW5kIHJlcGVhdGluZyAxMCB0aW1lcy4gCkkgd2FzIGluIGEgbWVudGFsIGZhY2lsaXR5IGFmdGVyIGEgc3VpY2lkZSBhdHRlbXB0LiAKUXVlc3Rpb246IElmIGFueSBjb21wYW55IGluIHRoaXMgYmVjb21lcyBhIG1lZ2EgbW9ub3BvbHksIGRvZXNuIGl0IGJhc2ljYWxseSBkZWZlYXQgdGhlIGlubm92YXRpdmUgcHVycG9zZSBvZiBsYWlzc2V6IGZhaXJlIGNvbXBldGl0aW9uLCByZXN1bHRpbmcgaW4gc2FpZCBtb25vcG9seSBzdWZmZXJpbmcgYW5kIGRlY2F5aW5nIGZyb20gc3RhZ25hdGlvbiBhbmQgaW5jcmVhc2luZyBpbmNvbXBldGVuY2U/IEV2ZW50dWFsbHksIHdvdWxkbiB0aGUgZWNvbm9teSBjb2xsYXBzZSBkdWUgdG8gYSBjYXBpdGFsaXN0aWMgc29jaWV0eSBpbmFiaWxpdHkgdG8gZnVuY3Rpb24gd2l0aG91dCBjYXBpdGFsaXNtPyBEb24gZ2V0IG1lIHdyb25nLCBtZWdhIGNvcnBzIGFyZSBpbnRlcmVzdGluZywgYW5kIHRoaXMgd29ybGQgaXMgcHJvYmFibHkgbm90IG1lYW50IHRvIGJlIHRvbyByZWFsaXN0aWMsIGJ1dCBpdCBkb2VzIG1ha2UgbWUgd29uZGVyLgpUaGF0IG1lYW5zIHRoZXkgY291bGQgcG90ZW50aWFsbHkgY2F0Y2ggY2hpY2tlbnBveCBhcyBhZHVsdHMgd2hlbiB0cmF2ZWxpbmcgYWJyb2FkLCBhbmQgdGhlbiBpdCB3b3VsZCBiZSBhIG1vcmUgc2VyaW91cyBoZWFsdGggdGhyZWF0IChzaW5jZSwgYXMgc3RhdGVkIGFib3ZlLCBjaGlja2VucG94IGlzIGEgbW9yZSBzZXJpb3VzIGRpc2Vhc2UgaW4gYWR1bHRzKS4gU28sIHllcywgd2UgdmFjY2luYXRlZCBvdXIga2lkcyBhZ2FpbnN0IHRoZSBkaXNlYXNlLCBidXQgSSBzdGlsbCByZXNwZWN0IHRoZSBtYWpvcml0eSBvZiBjb3VudHJpZXMgdGhhdCBkb24gdmFjY2luYXRlIGFnYWluc3QgaXQuLiAKVGhhdCBpcyBWZXJ5IGhhcmQgZm9yIG1lIHRvIGJlbGlldmUhISBGcm9tIG15IG9ic2VydmF0aW9ucyBhbmQgZnJvbSB0aGUgYXJ0aWNsZXMgSSBoYXZlIGJlZW4gcmVhZGluZywgdGhlcmUgV2lsbCBjb21lIGEgdGltZSBpbiB0aGUgbm90IHNvIGRpc3RhbnQgZnV0dXJlIHdoZW4gd2hpdGUgcGVvcGxlIHdpbGwgYmUgYSBNaW5vcml0eS4gClRoZXkgTG92ZSB0byBCbHVmZjogU29tZSBwZW9wbGUgcGxheSBwb2tlciBub3QganVzdCBmb3IgdGhlIG1vbmV5LCBidXQgc2ltcGx5IHRvIGJsdWZmLCB0byBnZXQgYXdheSB3aXRoIHNvbWV0aGluZyB0aGV5IGtub3cgdGhleSBzaG91bGRuJ3QuIFlvdSB3aWxsIHNlZSB0aGVzZSB0eXBlcyBvZiBwZW9wbGUgYXQgdGhlIHBva2VyIHRhYmxlLiAKQXN0aG1hIGNhbiBzaW1wbGUgYWxsZXJnaWVzIG1heSBhbHNvIHJlc3VsdCB0byBjaGVzdCB0aWdodG5lc3MuIFRoZXNlIGZhY3RvcnMgcHJpbWFyaWx5IGFmZmVjdHMgdGhlIGNoZXN0IGFuZCBicmVhdGhpbmcgZHVlIHRvIGFsbGVyZ2VucyBpbiB0aGUgZW52aXJvbm1lbnQuIElzIHRoZXJlIGFyZSB3YXkgdG8gY3VyZSBhc3RobWE/IFdoaWxlIGFzdGhtYSBpcyBhbiBhbGxlcmdpYyByZWFjdGlvbiBpbiBmb3JtLCBvbmUgY2FuIHNpbXBsZSByZWR1Y2UgdGhlIHJlYWN0aW9uIGJ5IHRha2luZyBhbnRpaGlzdGFtaW5lIG1lZGljaW5lcyBvciB1c2luZyBuZWJ1bGl6ZXJzLiAKSSBrbm93IGV4YWN0bHkgd2hhdCB0aGlzIGZlZWxzIGxpa2UuIE15IGRhZCBpcyBhIGxhd3llciBhbmQgbXkgbW9tIGFuIGVudHJlcHJlbmV1ciBhbmQgSSB1c2VkIHRvIGF0dGVuZCB0aGUgYmVzdCBlbmdpbmVlcmluZyBzY2hvb2wgb2YgbXkgY291bnRyeS4gQW5kIGV2ZW50dWFsbHkgKGF0IDR0aCB5ZWFyKSBJIGRlY2lkZWQgdG8gZHJvcCBvdXQgYW5kIGJlY29tZSBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIuCkhlIGFsc28gbWFkZSBhIHN0YXRlbWVudCBvbmxpbmUgYWZ0ZXIgcmVjZXB0aW9uIHRvIHRoZSBwaG90byBzcHJlYWQgZmFzdCBiZXR3ZWVuIGZyaWVuZHMgYW5kIHN0cmFuZ2Vycy4KV2hlbiBkZWFsaW5nIHdpdGggdGhlYXRyZSBjb25zdHJ1Y3Rpb24geW91IGhhdmUgdG8gcmVtZW1iZXIgdGhhdCBhbG1vc3QgZXZlcnl0aGluZyBpcyByZWxhdGVkIHRvIHRoZSBhdWRpZW5jZXMgYWJpbGl0eSB0byBzZWUuIEluIEdyZWVrIGFuZCBSb21hbiB0aGVhdGVyIHRoZSBhdWRpZW5jZSB3YXMgc2VhdGVkIGluIGFuIGFtcGhpdGhlYXRyZSwgd2hlcmUgdGhlIHN0YWdlIHdhcyBmbGF0IGFuZCB0aGUgYXVkaWVuY2Ugd2FzIHJhaXNlZC4gVGhpcyBhbGxvd2VkIGZvciBtb3N0IHBlb3BsZSBpbiB0aGUgYXVkaWVuY2UgdG8gc2VlLi4gCkhlIGFsc28gZGlzY3Vzc2VkIHRoZSBsZWFkZXJzaGlwIGNoYWxsZW5nZSBvZiB0cmFuc2Zvcm1pbmcgSW5mb3N5cydzIGN1bHR1cmUgd2l0aG91dCBhYmFuZG9uaW5nIGl0cyBpbm5vdmF0aXZlIHJvb3RzIG9yIHRoZSB2aXNpb24gb2YgaXRzIGZvdW5kZXJzLi4gCkdld2hudW5nc2JlZHJmdGlnIHNpbmQgZGllIEZhaHJwbG5lLCBkZW5uIGFsbGUgWmVpdGFuZ2FiZW4gc2luZCBqZXdlaWxzIGRpZSBBYmZhaHJ0c3plaXRlbiBiencuIApKdXN0IE5vcyBMT1ZFIGluZm9ybWF0aW9uLiAKQ0FQRSBDT1JBTCwgRmxhLiAgIEhlYXRoZXIgIkxlZnR5IiBTY2huZWNrIGhhbmRlZCBhIHN0YWNrIG9mIGNhcmRzIHRvIGFub3RoZXIgZGVhbGVyIHRvIHNodWZmbGUuIkknbSBoZXIgcmlnaHQgaGFuZCBtYW4sIiBzYWlkIExlbyBOYXZhcnJvLCBhcyBoZSB3aGFja2VkIGEgc2V0IG9mIG5vbmV4aXN0ZW50IGRydW1zLiBUaGUgMzYgeWVhciBvbGQncyBwZXJzb25hbGl0eSBsdXJlcyBwbGF5ZXJzLiBTaGUncyB1c3VhbGx5IHRoZSBvbmUgd2l0aCB0aGUgcHVuY2hsaW5lcyBhYm91dCB0aGUgbG9zcyBvZiBoZXIgcmlnaHQgYXJtLCB3aGljaCB3YXMgc2V2ZXJlZCBpbiBhIDIwMDggY2FyIGNyYXNoLiAKVGhlcmUgZGVmaW5pdGVseSBzb21ldGhpbmcgd3Jvbmcgd2l0aCBoZXIsIGFtb25nc3Qgb3RoZXIgdGhpbmdzLCBJIGp1c3QgZG9uIHNlZSBLIEthcmRhc2hpYW4gYmVpbmcgYSBncmVhdCByb2xlIG1vZGVsISAgVGhlIHRob3VnaHQgb2YgaGVyIGVzY29ydGluZyBjcm9zc2VkIG15IG1pbmQgd2hlbiBzaGUgcmVxdWVzdGVkIHRvIGJlIHB1dCBvbiBzb21lIG9mIExhcyBWZWdhcyBuaWdodGNsdWJzIFZJUCBsaXN0ISBPZGQgcmVxdWVzdCBmb3IgYSB3b21hbiB1bmxlc3MuIE9yIHRoYXQgdGhleSB1c2luZyBlYWNoIG90aGVyIGFuZCBoZSBsZXR0aW5nIGhlciB0aGluayB0aGF0IGhlIGEgbWlsbGlvbmFpcmUgYnV0IGFnYWluLCB0aGF0IGEgbG90IG9mIG1vbmV5IHRvIGZvciBhIDI2IHkgb2xkIHRvIGJlIHNwZW5kaW5nIGp1c3QgdG8gZ2V0IGxhaWQhIE9yIGxpa2UgeW91IHNhaWQsIHNoZSB1c2luZyBoaW0gbGlrZSBzaGUgZGlkIENvbHQgYW5kIHNoZSB0aGlua3MgaGUgd2VhbHRoeSBiYyBvZiBhbGwgdGhlIG1vbmV5IGhlIHNwZW5kaW5nISBIZSBkb2VzbiBzZWVtIHRvIGJlIGxvb2tpbmcgZm9yIGZhbWUgdGhvdWdoIG9yIGVsc2Ugd2Uga25vdyBieSBub3cgc28gaGUgYW4gZW5pZ21hIGZvciB0aGUgdGltZSBiZWluZy4gTG9sIFRydWUgd2UgbWlnaHQgaGVhciBvZiBoZXIgYXJyZXN0IGFnYWluIHNvb24sIHllcCwgaGlzdG9yeSB3aWxsIGNlcnRhaW5seSByZXBlYXQgaXRzZWxmLCBhbGwgdGhvc2UgcGFzdCBhcnJlc3RzIGluIGp1c3QgYSBmZXcgbW9udGhzIHdlcmVuIGEgZmx1a2UhIE9tZywgZGVmaW5pdGVseSBiZXR0ZXIgYXdheSBmcm9tIGhlciBraWRzLi4gCkJ1dCB0aGlzIGlzIGEgZmFudGFzdGljIG9wcG9ydHVuaXR5IHRvIGNoaXAgYXdheSBhdCB0aGUgZm91bmRhdGlvbnMgb2YgdW5pb25pemF0aW9uIGluIEtvcmVhIGFuZCBzcHJlYWQgZmVhciBieSBibGFtaW5nIHRoZSB3aG9sZSB0aGluZyBvbiB0aGVtLlBlb3BsZSBkZXNpcmluZyBhbmQgZmlnaHRpbmcgZm9yIGEgaGlnaCBzdGFuZGFyZCBvZiBsaXZpbmcgc2hvdWxkIG5vdCBiZSBhIHByb2JsZW0sIGFuZCBJIG5ldmVyIGNlYXNlIHRvIGJlIGFtYXplZCBob3cgdmVoZW1lbnRseSBvcHBvc2VkIHRvIGl0IHNvbWUgcGVvcGxlIHdpdGggbm8gcmVhbCB2ZXN0ZWQgaW50ZXJlc3RzIGFyZSBicmFpbndhc2hlZCB0byBiZS4gCkFnYWluLCB0aGVyZSBpcyBOTyBjaGFuY2UgaW4gaGVsbCB0aGF0IGVpdGhlciBvbmUgb2YgdGhlc2Ugc3BvbnNvcnMgd291bGQgaGFuZyBhcm91bmQgaWYgdGhlcmUgd2FzIHRoZSBzbGlnaHRlc3QgY2hhbmNlIHNoZSBnZXQgaW50byBhIGNhZ2Ugd2l0aCBhIG1hbi4uIApJIGhhdmUgZGF0ZWQgYW5kIGJlZW4gbWFycmllZCB0byBzb21lIHZlcnkgYmVhdXRpZnVsIHdvbWVuLiAKVGhlIHRoaW5nIGlzLCBwb29ybHkgZWR1Y2F0ZWQgcGVvcGxlIHdobyBkb24gdW5kZXJzdGFuZCBvciBjYXJlIGFib3V0IG51dHJpdGlvbiBidXQgc3RpbGwgZWF0IG1lYXQgYXJlIGp1c3QgYXMgcHJvbmUgdG8gdml0YW1pbiBkZWZpY2llbmNpZXMsIG9mIGRpZmZlcmVudCBraW5kcy4gRWF0aW5nIHByZWRvbWluYW50bHkgY2hlZXNlYnVyZ2VycyBhbmQgZnJpZXMgYW5kIGNlcmVhbCBpc24gaGVhbHRoeSByZWdhcmRsZXNzIG9mIGhvdyBtdWNoIGlyb24gb3IgcHJvdGVpbiB5b3UgZ2V0IGZyb20gdGhlIGJlZWYuIFRoZSBpc3N1ZSB3aXRoIG1hbG51dHJpdGlvbiBpbiBwb3ZlcnR5IHN0cmlja2VuIGNvbW11bml0aWVzIHByb2JhYmx5IGlzbiBnb2luZyB0byBiZSB3b3JzZW5lZCAob3IsIGhvbmVzdGx5LCBhbGxldmlhdGVkKSBieSBzdWRkZW5seSBnb2luZyB2ZWdldGFyaWFuIGR1ZSB0byBoaWdoIG1lYXQgcHJpY2VzLgpEYXMgbGV0emUga25udGVuIE11c2xpbWUgYWxzbyAibGVnYWwiIHRyaW5rZW4gICBkYXMga29zdGV0IHZlcmRubnQgZnIgbmVuIExpdGVyICJWb2RrYSIgZGFubiB1bSBkaWUgMzAgRXVyby4gNCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KRWFybHkgbW9ybmluZyBteSBodXNiYW5kIGhhZCBqdXN0IGxlZnQgZm9yIHdvcmsuIEkgdGhvdWdodCBJIGhlYXJkIHRoZSBiZWRyb29tIGRvb3IgY3JlYWsgb3BlbiwgaXQgcm91c2VkIG1lIGEgYml0LCBzbyBJIGFza2VkIGlmIGhlIGZvcmdldCBzb21ldGhpbmcuIFRoZW4gSSB0cnkgdG8gdHVybiBvdmVyIGFuZCBsb29rIGJ1dCBJIGNvdWxkbiBtb3ZlLiAKVGhleSBkb24ndCBrbm93IGhlciBsaWtlIEkgZG8uIFNoZSdzIGEgd29ya2Fob2xpYyB3aXRoIG1hc3NpdmUgcGVyc29uYWwgaW5zZWN1cml0aWVzLiBTaGUgZmVlbHMgc2hlIGlzbid0IHdvcnRoeSBvZiBhIG1hbiB0aGF0IHRyZWF0cyBoZXIgd2VsbCBhbmQgcmVzcGVjdHMgaGVyLiAKQW5vdGhlciB0aGluZyB0byBjb25zaWRlciBpcyB0aGF0IHlvdXIgbWluZCB3aWxsIGxhZyB5b3VyIGFjdHVhbCBwcm9ncmVzcy4gCkVubGlnaHRlbmVkX0NoaW1wICAyLDM0NSBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCk1hcmtldCBhbmQgcHJvbW90ZSB0aGUgcGFwZXI6IG11c3QgcHJvbW90ZSBDaXR5IFBhZ2VzIGluIGEgcG9zaXRpdmUgbWFubmVyIHRocm91Z2ggZGlzdHJpYnV0aW9uIG9mIG1hcmtldGluZyBtYXRlcmlhbHMsIHByaXplIHJlZ2lzdHJhdGlvbiBhbmQgZ2l2ZWF3YXlzLCB0YWtpbmcgcGhvdG9zIG9mIHByb2R1Y3QgaW4gaGFuZHMgQ29sbGVjdCBlIG1haWwgYWRkcmVzc2VzOiB0aGlzIGlzIHRoZSBtYWluIG9iamVjdCBvZiB0ZWFtIG1lbWJlcnMsIHVzZSBwcml6aW5nIGFzIGluY2VudGl2ZSB0byBhZGQgYXR0ZW5kZWVzIGVtYWlsIGFkZHJlc3MgdG8gb3VyIGRhdGFiYXNlcyBzbyB0aGV5IG1heSB0aGVuIHJlY2VpdmUgb3VyIHZhcmlvdXMgbmV3c2xldHRlcnMgYmFzZWQgb24gdGhlaXIgaW50ZXJlc3RzIFNlcnZlIGFzIGV2ZW50IHN0YWZmIGZvciBzaWduYXR1cmUgZXZlbnRzICg0IGFubnVhbGx5KTogd29yayBhbGwgc2lnbmF0dXJlIGV2ZW50cyBhcyBydW5uZXJzLCBkb29yIHN0YWZmLCBhc3Npc3RpbmcgbWFya2V0aW5nIG9uIGFueSBhZGRpdGlvbmFsIG5lZWRzIGR1cmluZyB0aGUgZXZlbnQgRXhlY3V0ZSBDbGllbnQgcHJvbW90aW9uczogYXR0ZW5kIGV2ZW50cyBhbmQgcHJvbW90ZSBjbGllbnQgcHJvZHVjdHMgb24gdGhlaXIgYmVoYWxmTXVzdCBiZSBwb3NpdGl2ZSwgZnJpZW5kbHksIGVuZ2FnaW5nIGFuZCBlbnRodXNpYXN0aWMgSGF2ZSBrbm93bGVkZ2Ugb2YgQ2l0eSBQYWdlcywgb3VyIGJyYW5kLCBvdXIgcHJvZHVjdHMgYW5kIG11c3Qgc3RheSBpbmZvcm1lZCB3aXRoIG91ciBwYXBlciBhbmQgb25saW5lIGJsb2dzLCBwcm9tb3Rpb25zIGV0Yy4gTXVzdCBiZSBvdmVyIHRoZSBhZ2Ugb2YgMjEgTXVzdCBiZSBhYmxlIHRvIHByb3ZpZGUgQ2l0eSBQYWdlcyB3aXRoIGEgZHJpdmluZyByZWNvcmRIb3VycyBhcmUgbW9zdGx5IGV2ZW5pbmdzIGFuZCB3ZWVrZW5kcyBTaGlmdHMgcmFuZ2UgZnJvbSAyIDggaG91cnMgVGhpcyBpcyBhbiBpbmRlcGVuZGVudCBjb250cmFjdG9yIHBvc2l0aW9uIE1vbnRobHkgaG91cnMgcmFuZ2UgZGVwZW5kaW5nIG9uIHRoZSBhbW91bnQgb2YgZXZlbnRzIFN0cmVldCBUZWFtIGlzIGF0dGVuZGluZywgc3VtbWVyIGJlaW5nIHRoZSBidXNpZXN0IG1vbnRoCkludGVycm9nIHN1ciBsZSByaXNxdWUgcXVlIHBvdXZhaXQgcmVwcnNlbnRlciBsYSBwZXJzb25uYWxpdCBkZSBQYWlyZSBldCBzYSBjYXBhY2l0ICBzZSBmb25kcmUgZGFucyB1bmUgcXVpcGUsIFlhbm5pY2sgTm9haCBhIGJhbGF5IG5ldDogIkplIG4nYWkgYXVjdW5lIGlucXVpdHVkZSAgY2Ugc3VqZXQuIE1vaSBjZSBxdWkgbSdpbnF1aXRlIHBhciBkZXNzdXMgdG91dCBjJ2VzdCBsZSBnYXVjaGVyIGVzcGFnbm9sIChOYWRhbCwgbmRscikuIEMnZXN0IGx1aSBxdWkgbSdpbnF1aXRlIi4KSXQgd2FzIG5hbWVkIHNvIGJlY2F1c2UgaXQgY2FuIGRpc3NvbHZlIHRoZSBub2JsZSBtZXRhbHMgZ29sZCBhbmQgcGxhdGludW0uIApUaGluayB3ZSBnb3QgYSBsb3Qgb2YgYSB2YWx1ZSBmb3Igd2hhdCB3ZSBwYWlkIHBlciBzcXVhcmUgZm9vdCBmb3Igb3VyIG5ldyBjb25kbyBjb21wYXJlZCB0byBhbnl3aGVyZSBlbHNlLCBoZSBzYWlkLiBsb3ZlIHRoZSBsb2NhdGlvbiB0b28uIFdlIGJlIGFibGUgdG8gd2FsayBhY3Jvc3MgdGhlIHN0cmVldCBhbmQgZ28gdG8gQnJvd24gZ28gdG8gU3RhcmJ1Y2tzLCBnZXQgc29tZSBncmVhdCBzdXNoaSwgZ28gc2hvcHBpbmcgb3IgZ28gdG8gdGhlIGxpcXVvciBzdG9yZS4gSXQgYWxsIHJpZ2h0IHRoZXJlLiBJdCBhIHR3byBtaW51dGUgd2FsayB0byBldmVyeXRoaW5nLiBJdCBhd2Vzb21lLiBsb2NhdGlvbjogMTU4OCBKb2huc3RvbiBSb2FkLCBXaGl0ZSBSb2NrCk5vdCBhIHRydWNrIGxvYWQgb2YgYnVsbHNoaXQgYnV0IGFuIGV4Y2hhbmdlIEkgcmVtZW1iZXIgY3J5c3RhbCBjbGVhci4gCkhlIGRyYXdzIGluc3BpcmF0aW9uIGZyb20gVFYsIGZpbG1zLCBib29rcyBhbmQgdHJhdmVsLCBhbmQgdmlkZW8gZ2FtZXMgbGlrZSAiSW5zaWRlLCIgaGUgc2F5cy4gCkl0IGRvZXNuIG1ha2UgdXAgZm9yIHRoZSBjYW1wcywgbm90IGF0IGFsbCwgYnV0IHdoZW4gdGhleSBkbyBicmVhayB0aGVpciBjaGFpbnMsIEkgaG9wZSB0aGV5IGtlZXAgdGhlIGdvb2Qgc3R1ZmYgYW5kIGRvbiBoYXN0ZW4gdG9vIHJhcGlkbHkgaW50byBwb3AgY3VsdHVyZSBhbmQgdGhlIEtvcmVhbiBlcXVpdmFsZW50IG9mIGhpa2lrb21vcmkuLiAKQnV0IHNpbmNlIGl0IGlzIFBha2lzdGFuJ3MgJ3BlYXNhbnQnIGFybXkgc3VmZmVyaW5nIHRoZXNlIGxvc3NlcyBpdCBpcyBhIGRpZmZlcmVudCBtYXR0ZXIgYWx0b2dldGhlci4gV2FzaGluZ3RvbiwgaG93ZXZlciwgaXMgbm90IHRvIGJsYW1lLiAKU28gZHVyaW5nIHRoZSBtYXNzYWdlIHNoZSBhc2tzIGlmIHdlIGNhbiBiZSBkb25lIGVhcmx5LiBTbyBteSBob3VyIG1hc3NhZ2UgaXMgbm93IDM1IG1pbnV0ZXMuIApMJ2hpc3RvaXJlIGFsb3JzIGVzdCBlbGxlIHZyYWllID8gT3VpLCBkYW5zIGxhIG1lc3VyZSBvIGVsbGUgcmV0cmFjZSBsJ2hpc3RvaXJlIGQndW4gcGV1cGxlLCB0ZWxsZSBxdSdpbCBsJ2EgY29tcHJpc2UgZW4gcmVsYXRpb24gc2luZ3VsaXJlIGF2ZWMgc29uIERpZXUgOyBldCBhdXNzaSBkYW5zIGxhIG1lc3VyZSBvIGNlIHF1ZSBkaXQgY2V0dGUgaGlzdG9pcmUgZGUgY2V0dGUgcmVsYXRpb24gbm91cyBwYXJsZSAgbm91cyBldCAgbm90cmUgcHJvcHJlIGhpc3RvaXJlLCBldCBwZXV0IGNsYWlyZXIgbm90cmUgcHJzZW50IGV0IG5vdHJlIGF2ZW5pci4gCkluIGFkZGl0aW9uIHRvIG5vIE9NQyB0aGVyZSB3ZXJlIGp1c3QgYSBsb3Qgb2YgYmFkIHBsYXllcnMuIApNYXliZSBJIGNvdWxkIGFzayBzb21lIHByb21pbmVudCBwZW9wbGUgZm9yICQxLDAwMCwwMDAgbGlrZSB0aGUgb3RoZXIgZ3V5LiAKQ29sb21iaWEgaXMgYW4gYXdlc29tZSBjb3VudHJ5LiBJIHNwZW50IGEgY291cGxlIG1vbnRocyB0aGVyZSBhbmQgaGFkIG5vdGhpbmcgYnV0IGdyZWF0IGV4cGVyaWVuY2VzLiAKT1AsIGFsbCBvZiB0aGVzZSBhcmUgZ3JlYXQgc3VnZ2VzdGlvbnMuIApBdCBTTUlUSCBGVU5FUkFMIEhPTUUsIDE1NzYgTG9uZG9uIExpbmUsU2FybmlhLiAKSHVtYW4gc2V4dWFsIGJlaGF2aW9yCkFub3RoZXIgcmVhc29uIHRvIGp1c3QgdGFibGUgeW91ciBkYW1uIGhhbmQgd2hlbiB0aGlzIHNoaXQgaGFwcGVucy4gRG9uIGV2ZW4gc2F5IGFueXRoaW5nIGp1c3QgdGFibGUgdGhlIGhhbmQgb3IgZm9sZCBpZiBzb21lb25lIHNob3dzIHNvbWV0aGluZyBiZXR0ZXIgZmlyc3QuIFlvdSBhcmVuIGJlY29taW5nIGEgamVkaSBwb2tlciBtYXN0ZXIgYnkgcmVmdXNpbmcgdG8gc2hvdyBoYW5kcyBhdCBzaG93ZG93biBhdCAxIDIuLiAKRmxvcCBjb21lcyBBSzQuIApBOiBUaGF0IHRydWUsIGJ1dCBJIGxpa2UgaXQgaWYgeW91IGNhbGxlZCBtZSBCaWxsLiBJIGZlZWwgbGlrZSB0aGUgbmFtZSAiU3RldmUiIGRvZXNuIHJlYWxseSBmaXQgbWUuIEkgZXZlbiBsZWdhbGx5IGdvdCBteSBuYW1lIGNoYW5nZWQuIExvb2sgaXQgb24gbXkgbGljZW5zZS4KSWYgeW91IGFyZSBub3QgdmVyeSBtYW55IHBsYXllcnMgYXdheSBmcm9tIHRoZSBmaW5hbCB0YWJsZSBwbGF5IHRpZ2h0ZXIgc2luY2UgdGhlIHBheW91dHMgYXJlIG11Y2ggYmlnZ2VyIGlmIHlvdSBtYWtlIGl0IHRvIHRoZSBmaW5hbCBwb2tlciB0YWJsZS4gS25vd2luZyB0aGlzLCBvZiBjb3Vyc2Ugd2lsbCBoYXZlIHRoZSBiaWcgc3RhY2tzIHRyeWluZyB0byBwdXNoIHlvdSBhcm91bmQuIFlvdSBjYW4gdXRpbGl6ZSB0aGlzIHRvIHlvdXIgYmVuZWZpdCB3aGVuIHVwIGFnYWluc3Qgb3RoZXIgc2hvcnQgb3IgbWVkaXVtIHN0YWNrcywgd2hvIGZlYXIgZ2V0dGluZyBlbGltaW5hdGVkLiAKVGFrZSBzb21lIHRpbWUgYW5kIHJlYWxseSB0aGluayBhYm91dCB3aGF0IHlvdSB3YW50IGZyb20geW91ciB0YWJsZSBhbmQgeW91ciBnYW1ibGluZyBmdXJuaXR1cmUuIE5vIG1hdHRlciB3aGF0IHlvdXIgZ2FtZSBpcywgb3Igd2hhdCB5b3UgYXJlIGxvb2tpbmcgdG8gZ2V0IG91dCBvZiBhIGdvb2QgcG9rZXIgdGFibGUsIHRoZXJlIGlzIGEgZ29vZCBjaGFuY2UgdGhhdCB5b3UgY2FuIGZpbmQgaXQgd2l0aCB0aGUgOTYgSW5jaCBUZXhhcyBIb2xkZW0gVGFibGUgV2l0aCBSZWQgRmVsdC4gVGhpcyB0YWJsZSBpcyBhIHN0YXIgYW5kIHlvdSBhcmUgc3VyZSB0byBmZWVsIGp1c3QgbGlrZSBvbmUgd2hlbiB5b3Ugc2l0IGRvd24gYXQgaXQhLiAKQnV0IHRoZXkgYXJlIGFtdXNpbmcgdGhlbXNlbHZlcywgZm9yIGl0IGlzIHRoZWlyIGFkdmVyc2FyeSB3aG8gaXMgb2JsaWdlZCB0byB1c2Ugd29yZHMgcmVzcG9uc2libHksIHNpbmNlIGhlIGJlbGlldmVzIGluIHdvcmRzLiAKWW91IHN0YXkgd2l0aCBmcmllbmRzIGluIGxvbmdlciBwcm9ncmFtcywgbmV0d29yaywgYW5kICJnaXZlIGJhY2siIGluIGEgd2F5IG1vc3QgYWx1bW5pIChvZiBib3RoIGNoYXB0ZXIgYW5kIHNjaG9vbCkgbmV2ZXIgY291bGQuIFRoZSB3YXJuaW5ncyBhcmUgbWVyZWx5IGEgc21hbGwgYmVuZWZpdCB0byB0aGUgbXVjaCBsYXJnZXIgcGljdHVyZS4gCkhvdyBtYW55IGxpa2UgQWxpIGNhbiBjbGFpbSBJIGVtYm9kaWVkIGNvdXJhZ2UgYW5kIGludGVncml0eSBUaGUgZXNzZW5jZSBvZiB0aG9zZSB3b3JkcyBwZXJtZWF0ZWQgaGlzIHBoeXNpY2FsIGZyYW1lLiAKT3ZlcnZpZXcgZm9yIGp1c3Rkd2VlemlsCkZEUiB3YW50ZWQgdG8gZXhwYW5kIHRoZSBlY29ub215IGFuZCBhY2Nlc3MgdG8gZWxlY3RyaWNpdHkuIFRoZSBncmVlbiBuZXcgZGVhbCB3YW50cyB0byBlbmQgYWlycGxhbmUgdHJhdmVsIGFuZCBjYXJzIHdoaWxlIGJ1aWxkaW5nIGEgbWFzc2l2ZSB1bnJlYWxpc3RpYyB0cmFpbiBzeXN0ZW0gdGhhdCBoYXMgeWV0IHRvIGJlIGRlZmluZWQgb3IgcGxhbm5lZC4gCjkuKSBEb24gY29tcGxhaW4gYWJvdXQgQUFWRSBvciBzbGFuZy4gVXNlIFVyYmFuIERpY3Rpb25hcnkgaWYgeW91IGRvIG5vdCB1bmRlcnN0YW5kIHRoZSBtZWFuaW5nIG9mIGEgd29yZC4gQ29tbWVudHMgYXNraW5nICJ3aGF0IGRvZXMgeCBtZWFuPyIgd2lsbCBiZSByZW1vdmVkLgpXaXIgc3RlaGVuIGZyIGVpbmUgc2FuZnRlIEZvcm0gZGVzIFRvdXJpc211cywgZnIgZGVuIFJlc3Bla3QgZ2VnZW5iZXIgZGVyIE5hdHVyIHNvd2llIGRlbiBTaXR0ZW4gdW5kIEJydWNoZW4gZGVyIEVpbmhlaW1pc2NoZW4uIEJlaSBhbGxlZGVtIHNvbGxlbiBkaWUgUHJvYmxlbWUgZWluZXIgVXJsYXVic3JlZ2lvbiBuaWNodCBnYW56IGF1cyBkZW0gQmxpY2sgdmVybG9yZW4gd2VyZGVuLCBzaWUgd2VyZGVuIGJlaGFuZGVsdCB1bmQgZGlza3V0aWVydC4gClRoZXJlIGFyZSBsaW1pdHMgaGVyZSBhcyByZWdhcmRzIHdoYXQgY2hhcmFjdGVycyBjYW4gYmUgcG9zdGVkLiBVc2UgdGhlIGxpbmsgYmVsb3cgdG8gc2VlIHRoZSBEcmFrZSBlcXVhdGlvbi4gV2hhdCB0aGUgRHJha2UgZXF1YXRpb24gaXMgZGVzaWduZWQgdG8gY2FsY3VsYXRlIGlzIHRoZSBudW1iZXIgTiAsIHdoZXJlIE4gaXMgdGhlIG51bWJlciBvZiBjaXZpbGl6YXRpb25zIGluIG91ciBnYWxheHkgd2l0aCB3aGljaCBjb21tdW5pY2F0aW9uIG1pZ2h0IGJlIHBvc3NpYmxlLiAKSGUgaXMgbm93IHJ1bm5pbmcgaW4gdGhlIGNpcmNsZXMgb2YgcG9saXRpY2FsIGFkdmlzb3JzLiBJIGZpbmQgaXQgYW11c2luZyB0aGF0IGhlIGZpbmRzIGl0IGEgImJlc3QgcHJhY3RpY2UiIHRvIGFkbW9uaXNoIG90aGVyIGNvbnN1bHRhbnRzIHdoaWxlIGhpcyBvd24gcmVjZW50IHBvcnRmb2xpbyBvZiAiY2xpZW50cyIgaGFzIG1vcmUgbG9zc2VzIHRoYW4gd2lucy4gClN0aWxsIGRvZXNuJ3QgcmVhbGl6ZSBoZSdzIGEgamVyay4gCk5leHQsIHJhaXNlIExvcmUgdG8gNy4gVGhpcyB3aWxsIGxldCB5b3UgbGVhcm4gdGhlIFNhbmRzdG9ybSBzcGVsbC4gCk1haWRlbiBpbiB0aGUgcmFpbgooNSBjbHVicyBvbiB0aGUgYm9hcmQpLiBJbiBwb2tlciB0aGUgaGlnaGVzdCBjb21iaW5hdGlvbiBvZiA1IGNhcmRzIHdpbnMgdGhlIHBvdC4gSW4gdGhpcyBjYXNlIHRoZSBoYW5kIG9mIHBsYXllciBBIGlzICJBYyBUYyA5YyA3YyA1YyIuIFRoZSBoYW5kIG9mIHBsYXllciBCIGlzICJBYyBUYyA4YyA3YyA0YyIuIEFzIHlvdSBjYW4gc2VlIGluIHRoaXMgc2l0dWF0aW9uLCB0aGVyZSBhcmUgNSBjbHVicyBvbiB0aGUgYm9hcmQgKHRhYmxlKSwgeWV0IGl0IGlzIG5vdCBhIHNwbGl0IHBvdCBhcyBwbGF5ZXIgQSBoYXMgdGhlIGhpZ2hlc3QgdmFsdWUgaW4gY2FyZHMgaW4gaGlzIGZsdXNoLiAKSW4gY29sbGVnZSBJIHdlbnQgdG8gdGhlIGRlbnRpc3QgZm9yIGEgY2hlY2t1cC4gSSBoYWQgcmVjZW50bHkgYmVlbiBkaWFnbm9zZWQgd2l0aCBtaWxkIGFjaWQgcmVmbHV4IHdoaWNoIHJ1bnMgaW4gbXkgZmFtaWx5IGFuZCBiZWluZyBpbiBjb2xsZWdlLCBJIGRyYW5rIGFib3V0IHRocmVlIGN1cHMgb2YgY29mZmVlIGEgZGF5LiBJIHRha2UgcmVhbGx5IGdvb2QgY2FyZSBvZiBteSB0ZWV0aCBidXQgdGhhdCB0cmlwIHRvIHRoZSBkZW50aXN0IEkgaGFkIGEgY2F2aXR5IGFuZCBhbiBvbGQgZmlsbGluZyBoYWQgdG8gYmUgcmVwbGFjZWQuIE15IGRlbnRpc3QgZGV0ZXJtaW5lZCBpdCB3YXMgZnJvbSBhY2lkIGVyb3Npb24KTGEgZGNvdXZlcnRlIGRlIHZ0ZW1lbnRzIGNvbmZlY3Rpb25ucyBlbiBmaWxzIGRlIGNoYW52cmUgZW4gQ2hpbmUgZXQgZG9udCBsIHJlbW9udGUgIDYwMCBhbnMgYXZhbnQgSi4gCkdldHRpbmcgUGFpZCBUaGVyZSBpcyBubyBzdGFuZGFyZCBjaGFyZ2UgZm9yIENQUiB0cmFpbmluZy4gCkNlbGEgbmUgdm91cyByYXBwZWxsZSByaWVuID8gU2UgYmFsYWRlciwgbyBxdSBhaWxsZSwgYXZlYyB1bmUgcGV0aXRlIGJvdGUgcmVtcGxpZSBkZSBkaXZlcnNlcyBwaWNlcyBldCBhcm9tYXRlcyBwZW5kdSBhdSBjb3Ugam91YWl0IHBldSBvdSBwcm91IGxlIG1tZSBybGUgYXUgWFZJSUkgbWUgc2ljbGUgZW4gRnJhbmNlLiAKUm95YWxoYXdrMzQ1ICA0LDEyMSBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KU2hvdWxkIEkgcGxheSBtb3JlLCBhbmQgdHJ5IHRvIGRvIGl0IGZvciBhIGxpdmluZywgb3IgSSdtIGp1c3QgYW5vdGhlciBwcm8gd2FubmFiZWUgd2hvIHNob3VsZCBxdWl0IGFuZCBnZXQgYmFjayB0byB3b3JrPwpDb2xpY2t5IGJhYmllcyBhcmUgZWFzaWx5IG92ZXJ3aGVsbWVkIGJ5IHRoZSBvdmVybG9hZCBvZiBzZW5zb3J5IGluZm9ybWF0aW9uIGluIHRoZWlyIGVudmlyb25tZW50LCBpZSBpdCdzIHRvbyBsb3VkIGFuZCBpdCdzIHRvbyBicmlnaHQgICAnSSB3YW50IGJhY2sgaW4gdGhlIHdvbWIhJwpMZWQgYnkgbXVwcGV0IGxvb2sgYWxpa2UgZm9ybWVyIFNlbmF0b3IgUGhpbCBHcmFtbSwgaGlzIHJpZ2h0IHdpbmcgYnJldGhyZW4gb24gQ2FwaXRvbCBIaWxsLCBhbmQgZm9ybWVyIENsaW50b24gVHJlYXN1cnkgU2VjcmV0YXJ5IEJvYiBSdWJpbiBhbmQgaGlzIGJhbmQgb2YgbWVycnkgUnViaW5pdGVzICh0aGUgc2FtZSBlY29ub21pYyB0ZWFtIGFkdmlzaW5nIFByZXNpZGVudCBCYXJhY2sgT2JhbWEpLCB0aGlzIGxlZ2lzbGF0aW9uLCBwZXJoYXBzIG1vcmUgdGhhbiBhbnkgb3RoZXIsIGNyZWF0ZWQgYSBDZWxlYnJpdHkgUG9rZXIgYXRtb3NwaGVyZSBvbiBXYWxsIFN0cmVldC4gVGhlIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIENvbW1pc3Npb24sIGFzIGEgcmVzdWx0LCBwcmV0dHkgbXVjaCBiZWNhbWUgYSBzdG9wIGluIHRoZSByZXZvbHZpbmcgZG9vciBmb3IgV2FsbCBTdHJlZXRlcnMgbGVmdCB0byBzZWxmIGdvdmVybi4KRG93biBiZWxvdyBhcmUgc29tZSBkaWZmZXJlbnQgcGxhY2VzIHRvIGJ1eSBwb29sIGRpbmluZyB0YWJsZXMgZm9yIHNhbGUgb25saW5lLi4gClNoZSBkZWZpbml0ZWx5IGlzIGVuYWJsaW5nIHRoZW0sIGZ1c3NpbmcgYXQgdGhlbSBvciBuby4gClNlb3VsIGlzIGEgYmVhdXRpZnVsIGNpdHkgd2l0aCB0b25zIG9mIHRhbGwgYW5kIG1vZGVybiBsb29raW5nIGJ1aWxkaW5ncyBjb25zdGFudGx5IGJlaW5nIGJ1aWx0IGJ1dCBhbG90IG9mIHRoYXQgY29tZXMgd2l0aCBhIHByaWNlLiAKSSB1bmRlcnN0YW5kIHdlIHdhbnQgYSBkcnVnIHRoYXQgY2FuIGZpeCBhbnhpZXR5IGFuZCBhZHJlbmFsaW5lIHJ1c2hlcyBiZWNhdXNlIHRoZXkgdGVycmlibGUgYnV0IGJlbnpvcyBhcmVuIHRoZSBhbnN3ZXIgc2luY2UgdGhleSBhcmUgbm90IG1lYW50IGZvciBsb25nIHRlcm0uLiAKSnVzdCB0byBudXJzZSB0aGUgbW9tIGhhZCB0byBiZSBpbiB0aGUgdmljaW5pdHkgb2YgdGhlIGJhYnksIHVubGVzcyB0aGV5IGNvdWxkIGFmZm9yZCBhIHdldCBudXJzZSAod2hpY2ggY3Jvc3NlcyBtb3JlIGludG8gdGhlIHVwcGVyIGNsYXNzIGFyZWEsIGFzIHlvdSBzYWlkKS4gQmlvbG9neSBkaWN0YXRlZCB5ZXQgYWdhaW4gaG93IGZhciBhIHdvbWFuIGNvdWxkIGJlIGZyb20gaGVyIGJhYnkuIApLYXJlbjogSSBrbm93IG1hbnkgaW1wb3J0YW50IHBlb3BsZSBpbiB0aGlzIHRvd24gYW5kIEkgd2lsbCBtYWtlIHN1cmUgdG8gcG9zdCBvbiBFVkVSWSBtb20gYW5kIHNlbGwgZ3JvdXAgdGhhdCB5b3UgYXJlIHVuZ3JhdGVmdWwsIHVucHJvZmVzc2lvbmFsLCBhbmQgaG93IHlvdSBiZWxpZXZlIHlvdSBhcmUgdG9vIGdvb2QgZm9yICQyMCB3aGVuIHlvdSBoYXZlIGEgZHlpbmcga2lkIHlvdSBjYW4gYWZmb3JkLiBZb3UgYXJlIHBhdGhldGljLgpHb29kIGx1Y2suIEkgbG92ZSBoYXZpbmcgY2xlYW5lcnMgYW5kIHdvdWxkIGdpdmUgdXAgbG90cyBvZiBvdGhlciAiZXh0cmFzIiBiZWZvcmUgSSdkIGdpdmUgdXAgdGhlIGNsZWFuaW5nIHNlcnZpY2UuCkJlZ2lubmluZyB0aGlzIE9jdG9iZXIsIEZveCBvbiBGcmlkYXkgbmlnaHRzIHdpbGwgYWlyICJTbWFja0Rvd24gTGl2ZSwiIGEgdHdvIGhvdXIgV1dFIHdyZXN0bGluZyBzaG93Y2FzZSBkZXNpZ25lZCB0byBhdHRyYWN0IGEgbW9yZSBhcHBsZSBjaGVla2VkIGNvaG9ydCBvZiBtYWxlIHZpZXdlcnMuIApDb21wbGFpbnQ6IEkgaHVydCBteSByaWJzIGxhc3Qgd2VlayBhbmQgaXQgaGFzIGJlZW4gc2xvd2x5IGdldHRpbmcgYmV0dGVyIGJ1dCB5ZXN0ZXJkYXkgSSBzbmVlemVkIGFuZCBvaCBib3kuIFRoYXQgd2FzIGEgdGVycmlibGUgZXZlbnQuIApFaW4gd2ljaHRpZ2VyIFB1bmt0IGluIGRpZXNlciBWZXJlaW5iYXJ1bmcgaXN0LCBkaWUgUmVjaG51bmdlbm1zc2VuIGFuIGRlbiBQYXRpZW50ZW4gZ2VzYW5kdCB3ZXJkZW4gdW5kIG5pY2h0IG1laHIgYW4gZGllIEthc3NlbiBkaXJla3QuIERpZXMga2FubiBkYXMgSW5rYXNzbyBSaXNpa28gZXJoaGVuLgpJIGxlYXJuZWQgdGhhdCBub3QgYWxsIG9mIHVzIGFyZSBtZWFudCB0byBsZWFkLiBJIHdhdGNoZWQgYW5kIGxpc3RlbiB0byB5b3UsIGFuZCBJIHJlYWxpemVkIHdoYXQgdHlwZSBvZiBib3NzIEkgbmV2ZXIgd2FudCB0byBiZS4gWW91IHRhdWdodCBtZSB0aGF0IGxlYWRlcnMgc2V0IHRoZSB0b25lIGFuZCB0ZW5vciBmb3IgYSB3b3JrcGxhY2UsIHRoYXQgbm8gbWF0dGVyIGhvdyB0YWxlbnRlZCB0aGUgdGVhbSwgZXZlcnl0aGluZyBkZXBlbmRzIG9uIHRoZSBib3NzLi4gCiJJdCdzIHRoZSBvbmUgdGhhdCBnaXZlcyB1cyBoZWFkYWNoZXMgYW5kIG1ha2VzIHVzIGZlZWwgbW9yZSBjb25nZXN0ZWQuIi4gCkknbSBzb3JyeSB5b3UncmUgZ29pbmcgdGhyb3VnaCB0aGlzIDooIGludGVybmV0IGh1Z3MgU2l4IHllYXJzIGlzIGEgbG9uZyB0aW1lLCBidXQgdGhlIHJlc3Qgb2YgeW91ciBsaWZlIHdpbGwgYmUgbXVjaCBsb25nZXIuIFlvdSBkZXNlcnZlIHRvIGJlIGhhcHB5IGR1cmluZyBpdCEKTWFueSBzdGF0ZXMgaGF2ZSBtb3ZlZCBxdWlja2x5IHRvIGFsbG93IG9ubGluZSBzYWxlcyBhbmQgdGhlIGxlZ2lzbGF0aW9uIGlzIGRlc2lnbmVkIHRvIHB1dCBNYWluZSBpbiB0aGUgcG9zaXRpb24gdG8gcmVhY3QgdG8gSW50ZXJuZXQgbG90dGVyeSBzYWxlcyBpbiBvdGhlciBzdGF0ZXMuIFRocmVlIGNvbW1pdHRlZSBtZW1iZXJzLCBQbG93bWFuLCBSZXAuIApOb3J2ZWxsIGFuZCBIYWNoaW11cmEgZWFjaCBtaXNzZWQgbG9uZyAzIHBvaW50ZXJzLCBzYW5kd2ljaGVkIGFyb3VuZCBLeWxlIEFsZXhhbmRlcidzIG1pc3NlZCBmcmVlIHRocm93LCB0aGF0IHdvdWxkIGhhdmUgdGllZCBpdC4KRWxsZSBhIHRyYWl0IGRlcyBmZW1tZSBlbmNlaW50ZXMgcGFyIHZvaWUgaW50ZXJuZS4gUXVlbGxlIHRhaXQgbGUgbm9tYnJlIGRlIHNlbWFpbmVzIGRlIGdyb3NzZXNzZSBkZSBjZXMgZmVtbWVzIGVuY2VpbnRlcyA/IGonYWltZXJhaXMgbGEgY2l0ZXIgZGFucyBtYSByZWNoZXJjaGUgbWFpcyBpbCBtZSBtYW5xdWUgY2V0dGUgaW5mb3JtYXRpb24uIFBvdXZleiB2b3VzIGx1aSB0cmFuc21ldHRyZSBsZSBtZXNzYWdlLiAKUmVzZWFyY2ggaXMgc3RpbGwgbmVlZGVkIHRvIGJvdGggc3Vic3RhbnRpYXRlIG1lbGF0b25pbiBzdXBwcmVzc2lvbiBhcyBhIHNpZ25pZmljYW50IHJpc2sgZmFjdG9yIGZvciBicmVhc3QgY2FuY2VyIGFuZCBkZXRlcm1pbmUgdGhlIG1lY2hhbmlzbXMgYnkgd2hpY2ggbWVsYXRvbmluIHJlZ3VsYXRlcyBnbHVjb3NlIG1ldGFib2xpc20uIFRoZSBFbmRvY3JpbmUgU29jaWV0eQpIZXIgb3RoZXIgYWN0aW5nIGNyZWRpdHMgaW5jbHVkZSByb2xlcyBpbiBUaGUgSW5jcmVkaWJsZSBNcnMuIAoiSWYgeW91IGhhdmUgYSBncmVhdCBhdHRpdHVkZSBhbmQgYSBnZW51aW5lIHN0eWxlIGZvciBwcm92aWRpbmcgbWVtb3JhYmxlIGN1c3RvbWVyIHNlcnZpY2UsIHlvdSBzaG91bGQgYXBwbHksIiBzYWlkIFNlbmlvciBWaWNlIFByZXNpZGVudCBhbmQgR2VuZXJhbCBNYW5hZ2VyIEtldmluIEtsaW5lLCB3aG8gYWxzbyBub3RlZCB0aGF0IHByaW9yIGNhc2lubyBleHBlcmllbmNlIGlzIG5vdCBuZWNlc3NhcnkgdG8gYmUgY29uc2lkZXJlZC4KVGhlIHByb3N0aXR1dGVzIHdlcmUgbm90IHJhcGVkLCBidXQgZW5nYWdlZCBpbiB0aGUgc2V4IGFjdHMgaW4gZXhjaGFuZ2UgZm9yIG1vbmV5LCBzbyBpc3N1ZXMgb2YgY29uc2VudCBiZWNvbWUgbGVzcyB0aG9ybnkgKHllcywgaWYgdGhleSB3ZXJlbiBob3JyaWJseSBwb29yLCB0aGV5IG1pZ2h0IG5vdCBjb25zZW50IHRvIGhhdmUgc2V4IHdpdGggZm9yZWlnbiBtZW4sIGJ1dCB0aGUgc2FtZSBjb3VsZCBiZSBzYWlkIGZvciBmYWN0b3J5IHdvcmtlcnMsIHJlc3RhdXJhbnQgd29ya2VycywgYW5kIGNsZWFuaW5nIHBlb3BsZSBhdCBsdXh1cnkgaG90ZWxzKS4uIApBIEZyZWVyb2xsIGlzIGEgRnJlZSBQb2tlciBUb3VybmFtbmV0IHdpdGggYSBzcG9uc29yZWQgcHJpemUgcG9vbC4gVGhlcmUgaXMgYSBmcmVlcm9sbCBydW5uaW5nIGFsbCB0aGUgdGltZSBvbiB0aGUgaW50ZXJuZXQuIEluIG1vc3Qgb2YgdGhlbSB0aGUgd2hvbGUgcHJpemVwb29sIGlzIGFyb3VuZCBvbmUgaHVuZHJlZCBkb2xsYXJzLiBZb3Ugd2lsbCBhbHNvIGZpbmQgdGhhdCBtYW55IG9mIHRoZXNlIGZyZWUgcG9rZXIgdG91cm5hbWVudHMgaGF2ZSBhIGh1Z2UgZmllbGQgb2YgcGFydGljaXBhbnRzLiAKU28gaW4gdGhhdCBjYXNlIHlvdSBhcmUgcmVmZXJyaW5nIHRvIHNvbWVvbmUncyBnZW5kZXIgcHJlc2VudGF0aW9uL2V4cHJlc3Npb24vY29uZm9ybWl0eSAgaG93IG11Y2ggdGhlaXIgYXBwZWFyYW5jZSBvciBiZWhhdmlvciBhbGlnbnMgd2l0aCB3aGF0IHdlIHN0ZXJlb3R5cGljYWxseSBhc3NvY2lhdGUgd2l0aCBvbmUgZ2VuZGVyIG9yIGFub3RoZXIuIApJIHVuZGVyc3RhbmQsIGFuZCB0aGF0IHlvdSB3ZXJlIHRyeWluZyB0byBiZSBmaXJtIGFuZCBzdXBwb3J0aXZlLiBJdCBtYXkgYmUgbXkgb3duIHByZWp1ZGljZXMgaGVyZSwgYnV0IHRlbGxpbmcgc29tZW9uZSB0byAic3RvcCBtZWRpY2F0aW5nIiByZWFkcyB0byBtZSBhcyBlaXRoZXIgdGVsbGluZyB0aGVtIHRvIHN0b3AgdXNpbmcgcHJlc2NyaWJlZCBtZWRpY2F0aW9ucywgb3Igc3RvcCBzZWxmIG1lZGljYXRpbmcuIFdoZW4gb25lIGNvbWJpbmVzIHRoYXQgc2Vjb25kIHBvc3NpYmxlIGludGVycHJldGF0aW9uIHdpdGggdGhlIGltcGxpY2F0aW9uIHRoYXQgc2VsZiBtZWRpY2F0aW9uIGlzIHByZXZlbnRpbmcgdGhlIE9QIGZyb20gdGFraW5nIHRoZSBhY3Rpb25zIHlvdSBzdWdnZXN0ZWQgICBpdCBhIGJpdCBtdWNoIGZvciBtZSB0byBhbGxvdy4uIApJIGJlZW4gYSBjaHViYnkgZHVkZSBhbGwgbXkgbGlmZSBhbmQgbGFzdCB5ZWFyIEkgaHVydCBteSBiYWNrLCBteSBkb2N0b3IgdG9sZCBtZSBhZnRlciB3ZWlnaGluZyBtZSB0aGF0IEkgd2FzIG9iZXNlLCBJIGhhZCBoaXQgOTVrZyBvbiBhIDE3MiBjbSBsb25nIGR1ZGUgdGhhdCBpcyBlbm91Z2ggdG8gZ2V0IHRoZSBCTUkgaW4gdG8gdGhlIHVuaGVhbHRoeSBvYmVzZSBjYXRlZ29yeSwgc28gSSBkZWNpZGVkIHRvIG5vdCBiZSBmYXQgYW55bW9yZSBzaW5jZSB0aGF0IG1vbnRoLCBtb250aCBhbmQgYSBoYWxmLCB3aXRoIGluc2FuZSBiYWNrIGlzc3VlcyB3YXMgbmV2ZXIgd29ydGggd2hhdGV2ZXIgSSB3b3VsZCB0byBkbyB0byBsb3NlIHNvbWUgd2VpZ2h0LgpHb29kIGx1Y2shLiAKV2hlbiBhbmQgdGhlIGFtb3VudCBzaGUgcGFpZCBkZXBlbmRlZCBvbiBob3cgbXVjaCBtb25leSBzaGUgaGFkIGF0IHRoZSB0aW1lLiBKdWRnZSBmb3VuZCBpdCBzdXJwcmlzaW5nIHRoYXQsIGRlc3BpdGUgYSBsYWNrIG9mIHJlY29yZHMsICh0aGUgY2FyZWdpdmVycykgY291bGQgcmVtZW1iZXIgYXQgdGhlIGVuZCBvZiBlYWNoIHllYXIgaG93IG11Y2ggc2hlIHBhaWQgdGhlbSBhbmQgZ2l2ZSBoZXIgYSByZWNlaXB0IGFuZCBzaGUgd2FzIHNhdGlzZmllZCB0aGF0IHRoZSByZWNlaXB0IHdhcyBjb3JyZWN0LiAKQSB3ZWxsIGtub3duIFdhbGwgU3RyZWV0IHF1YW50LCBoZSBpcyBhIGNvbHVtbmlzdCBmb3IgV2lsbW90dCwgdGhlIGxlYWRpbmcgam91cm5hbCBzZXJ2aW5nIHRoZSBxdWFudGl0YXRpdmUgZmluYW5jZSBjb21tdW5pdHkuIEhlIGhhcyBiZWVuIGludm9sdmVkIGluIHRyYWRpbmcsIHJpc2sgbWFuYWdlbWVudCwgYW5kIHBvcnRmb2xpbyBtYW5hZ2VtZW50IGZvciBQcnVkZW50aWFsIEluc3VyYW5jZSwgSlBNb3JnYW4sIFJhYm9iYW5rLCBhbmQgQ2l0aWdyb3VwLiBIZSBpcyBhbHNvIGEgc2VyaW91cyBsaWZlbG9uZyBwb2tlciBwbGF5ZXIgd2hvIGhhcyBwbGF5ZWQgd2l0aCBXYWxsIFN0cmVldCB0eWNvb25zIGFuZCB3b3JsZCBjaGFtcGlvbiBwb2tlciBwcm9zLi4gClN1YmplY3RpdmUgZXhwZXJpZW5jZSBhbmQgbWVhbmluZyBhcmUgdGhlIGVzc2VuY2Ugb2YgbGlmZS4gV2hhdCBQZXRlcnNvbiBwcm9wb3NlcyBhcyBhIGRpZmZlcmVudCB1bmRlcnN0YW5kaW5nIG9mIHRydXRoIGlzIG5vdCBhYm91dCBpZ25vcmluZyBzY2llbnRpZmljIGZhY3RzLCBidXQgcHV0dGluZyB0aGUgZXhwZXJpZW5jZSBvZiBtZWFuaW5nIGluIG9uZSBsaWZlIGFuZCB0aGUgc3ViamVjdGl2ZSB0cnV0aCB0aGF0IHJlc3VsdHMgYWJvdmUgdGhlIHNjaWVudGlmaWMgZGljdGF0ZS4gSGlzIHdob2xlIHBvaW50IG9mIE5pZXR6c2NoZSB3aGVuZXZlciBoZSBicmluZ3MgaGltIHVwIGNhbiBiZSBzdW1tZWQgdXAgYXMgdGhhdCwgdGhlIHNwaXJpdHVhbCB1bmRlcnN0YW5kaW5nIG9mIHRydXRoICh0aGlzIGNhbiBhbHNvIGJlIHNlZW4gYXMgZXRoaWNzLCBvciBjb2RlKSBoYXMgYmVlbiBraWxsZWQgaW4gZmF2b3Igb2Ygd2hhdCBhcmUgY29sZCwgaGFyZCBhbmQgc291bGxlc3MgZmFjdHMuIApTb21lIG9mIG91ciBmYXZvcml0ZSBwbGFjZXMgdG8gcGxheSBpbiBMYXMgVmVnYXMgYXJlIGF0IHRoZSBtYWpvciBjYXNpbm9zLCBvbmUgb2YgdGhlIG1vc3QgbHV4dXJpb3VzIHJvb21zIG9mIGNvdXJzZSwgaXMgaW4gb25lIG9mIHRoZSBtb3N0IGx1eHVyaW91cyBob3RlbHMsIFRoZSBCZWxsYWdpbyBieSBuYW1lLiBUZXhhcyBIb2xkICdlbSBpcyBhIHZlcnkgcG9wdWxhciBnYW1lIGhlcmUgYXMgd2VsbCBhcyA3IENhcmQgU3R1ZC4gCkkgZGlkbid0IHNsZWVwIGFzIHdlbGwgYXMgSSBoYWQgaG9wZWQuIEkgd2FzIGFsbG93ZWQgb3V0IG9mIGJlZCBhcm91bmQgMTFwbSB0byB1c2UgdGhlIGJhdGhyb29tICAgYXBwYXJlbnRseSB5b3UgY2FuIGdldCBhICJsYXp5IGJsYWRkZXIiIGFmdGVyIGFuIGFuYWVzdGhldGljIHNvIHRoZXkgaGFkIHRvIG1ha2Ugc3VyZSBJIGNvdWxkIGdvLiAKMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29Ob3QgZXZlcnl0aGluZyBub3IgYW0gSSBzYXkgZXZlcnl0aGluZyBsaWtlIHlvdSBpbXBseS4gCkFuZCB0byBmaW5kIG91dCBob3cgd2UgZGlkIHdpdGggb3VyIDIwMTggcHJlZGljdGlvbnMsIChTcG9pbGVyIGFsZXJ0OiBXZSBkb25lIGdvb2QuKS4gClBpYWdldCBhbHNvIGNvbmNsdWRlZCB0aGF0IHRoZXkgY291bGQgbm90IHVuZGVyc3RhbmQgQ29uc2VydmF0aW9uLiBUaGUgZXhwZXJpbWVudCBoZSByYW4gdG8gdmVyaWZ5IHRoaXMgaW52b2x2ZWQgYSB0YWxsIHNsaW0gZ2xhc3MgZmlsbGVkIHdpdGggd2F0ZXIgYW5kIGEgcm91bmQgc2hvcnRlciBjbGFzcyB0aGF0IHRoZSB3YXRlciBpcyBwb3VyZWQgaW50by4gV2hlbiBhc2tlZCBpZiB0aGVpciB3YXMgbW9yZSBvciBsZXNzIHdhdGVyIGFmdGVyIHRoZSB3YXRlciB3YXMgcG91cmVkIGZyb20gdGhlIHRhbGwgdG8gdGhlIHNob3J0IHZlc3NlbCBwcmVvcGVyYXRpb25hbCBjaGlsZHJlbiBvZnRlbiBzYWlkIHRoYXQgdGhlcmUgd2FzIGxlc3Mgd2F0ZXIgaW4gdGhlIHN0b3V0IGdsYXNzLiAKQW5kIHlldCwgZGVlcCBkb3duIGluIG15IGZhbnRhc3kgbGFkZW4gc3ViY29uc2Npb3VzLCBJIGtub3cgdGhhdCB0cnV0aCBhbmQganVzdGljZSByYXJlbHkgb2NjdXIgaW4gdGhlIHJlYWwgd29ybGQuIG90aGVyIHdvcmRzLCBJIGNyYXp5LCBidXQgSSBub3QgY3JhenkgZW5vdWdoIHRvIGJlbGlldmUgdGhlIGJhbmtlcnMgd2lsbCBiZSBwdW5pc2hlZC4geWV0LCBpcyBhIGxldHRlciBzaWduZWQgYnkgbW9yZSB0aGFuIDYwIGxhd21ha2VycyB0byB0aGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGRlbWFuZGluZyBhIGNyaW1pbmFsIGludmVzdGlnYXRpb24gb2YgR29sZG1hbiBTYWNocy4gU2VjdXJpdGllcyBhbmQgRXhjaGFuZ2UgQ29tbWlzc2lvbiBoYXMgY2hhcmdlZCBHb2xkbWFuIFNhY2hzIHdpdGggY29tbWl0dGluZy4gV2UgYXNrIHRoYXQgeW91IHRha2UgdXAgdGhpcyBjYXNlLCBhbmQgb3RoZXJzLCB0byBwdXJzdWUganVzdGljZSBmb3IgdGhlIEFtZXJpY2FuIHBlb3BsZSwgdG8gcHV0IGNyaW1pbmFscyBpbiBqYWlsLCBhbmQgc2VlayB0byByZXN0b3JlIHRoZSBpbnRlZ3JpdHkgb2Ygb3VyIG5hdGlvbidzIGZpbmFuY2lhbCBzeXN0ZW0uCkx1Y2tpbHkgSSB0aGluayB0aGUgcHJvYmxlbSBvZiBuYW1pbmcgYmFiaWVzIGFmdGVyIGN1cnJlbnQgZXZlbnRzIHdpbGwgYmUgdHJhbnNpdG9yeS4gVmVyeSBmZXcgbmFtZXMgKHVubGlrZSAiTWljaGFlbCBKYWNrc29uIiBvciBzb21ldGhpbmcpIHdpbGwgYmUgaW4gdGhlIHB1YmxpYyBleWUgZm9yIGEgbG9uZyB0aW1lLiBJbiBtYXliZSA1IHllYXJzIHRoZSBvbmx5IHRpbWUgc29tZW9uZSB3aWxsIHNheSAiU3Rvcm1pIERhbmllbHMiIGlzIGFzIHRoZSBwdW5jaGxpbmUgdG8gYSBqb2tlIChJIGhvcGUsIGFueXdheS4pCjR0aGRyaW5raW5zdGluY3QgIDM3IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KVGhlIFNhbmRiYXIgc2l0cyBvbiBJbnN0YWdyYW0gd29ydGh5IEFubmEgTWFyaWEgQmVhY2ggb24gdGhlIEd1bGYgZW5kIG9mIFBpbmUgQXZlbnVlLCBzb2Z0IHNhbmQgZWRnZWQgd2l0aCBwYWxtIHRyZWVzIGFuZCBzZWEgZ3JhcGVzIGFuZCBibHVlIGdyZWVuIHdhdGVyIHN0cmV0Y2hpbmcgYWxsIHRoZSB3YXkgdG8gdGhlIGhvcml6b24uIFRoZSBtZW51IGluY2x1ZGVzIG9yZ2FuaWMgcHJvZHVjZSBmcm9tIENoaWxlcydzIEdhbWJsZSBDcmVlayBGYXJtICh0aGluayBTZW1pbm9sZSBwdW1wa2lucyBhbmQgZWRpYmxlIGhpYmlzY3VzIGJsb3Nzb21zKSwgYWxvbmcgd2l0aCBsb2NhbCBmaXNoLCBzdWNoIGFzIGdyb3VwZXIsIHNuYXBwZXIsIGFuZCBib3R0YXJnYSwgbWFkZSBmcm9tIHRoZSByb2Ugb2Ygd2VzdCBGbG9yaWRhIHN0cmlwZWQgZ3JheSBtdWxsZXQuIFdlIHRyaWVkIGFwcGV0aXplcnMgb2YgYm90dGFyZ2Egc2hhdmVkIG92ZXIgY2hhcnJlZCB0b2FzdCwgbW9pc3RlbmVkIHdpdGggb2xpdmUgb2lsICAgYSBjbGVhbiwgc2FsdHkgYml0ZSAgIGFuZCBhaXJ5IFNlbWlub2xlIHB1bXBraW4gYmxvc3NvbXMgc3R1ZmZlZCB3aXRoIHJpY290dGEgYW5kIGdvYXQgY2hlZXNlLiAKSSBub3cgaGF2ZSBubyBkb3VidHMuIAo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIFRoaXMgaW5jbHVkZXMgbm9uIHJlbGV2YW50IHBvc3RzIHRvIHBva2VyLCBwdXNoaW5nIHlvdXIgbmV3cyBzaXRlLCBzaGlsbGluZyB5b3VyIGNyeXB0b2N1cnJlbmN5IHNwZWN1bGF0aW9ucywgZXhjZXNzaXZlIHNoaXQgcG9zdGluZywgYW5kIGNvbnRpbnVpbmcgdG8gcG9zdCBjb250ZW50IGFmdGVyIHlvdSBiZWVuIHNwZWNpZmljYWxseSB3YXJuZWQgbm90IHRvIGJ5IHRoZSBtb2QgdGVhbS4gSSB0YWxraW5nIHRvIHlvdSBsb3cgbGltaXQgImdyaW5kZXIiLiBUaGUgZ3V5IHdhdGNoaW5nIEdhbWUgb2YgVGhyb25lcyBvbiBoaXMgSXBob25lLCB0aGUgNjAgeWVhciBvbGQgZ3V5IHdpdGggbW9uZXkgd2hvIHNvbWVob3cgYW5ncnkgYWxsIHRoZSB0aW1lLCB0aGUgbXV0ZSBsYWR5LCB0aGUga2lkIHdobyBvbmx5IHNwZWFrcyBpbiBwb2tlciBqYXJnb247IHF1aXQgeW91ciBzaGl0IGFuZCBzdG9wIGJlaW5nIHNvIGdvZGRhbW4gbGFtZSwgYm9yaW5nLCBzZXJpb3VzIGF0IHRoZSAxLzMgdGFibGUhClRoZSBxdWVzdGlvbiB3aGV0aGVyIHRoYXQgaXMgdGhlIHBpbG90cyBvciBtZWNoYW5pY3Mgam9iIHRvIGRldGVybWluZSBpZiB0aGUgcGxhbmUgc2l0dGluZyB0aGVyZSBmb3IgMiBkYXlzIG1heSBoYXZlIGV4cGVyaWVuY2VkIG1vcmUgc2V2ZXJlIHdlYXRoZXIgaXMgYW4gb3BlbiBxdWVzdGlvbi4uIApKdXN0IGZvciB0aG9zZSB3aG8gZG9uJ3QgZmVlbCBsaWtlIGdvaW5nIG91dCBhbmQgYnV5aW5nIGluY2Vuc2UgYW5kIHRoZSBsaWtlKHN1Y2ggYXMgbWUpLCBkbyB3aGF0IEkgZG8uIFRoZXJlIGFyZSBzZXZlcmFsIHdlYnNpdGVzIHRoYXQgc2VsbCB0aGlzIHR5cGUgb2YsIHVtbSwgc3R1ZmYuIEJvdGggc2l0ZXMgb2ZmZXIgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2YgaW5jZW5zZSBmcm9tIFRpYmV0LCBJbmRpYSBhbmQgSmFwYW4uIApDcmVhdGUgYSByZWxheGluZywgc29vdGhpbmcgYW1iaWFuY2UgZm9yIHlvdXIgbWFzc2FnZS4gSXQncyBiZXN0IHRvIGRpbSB0aGUgbGlnaHRzLiAKSWYgeW91IGdvIHRvIGEgZG9jdG9yIHdpdGggaHlwb3RoeXJvaWQgc3ltcHRvbXMsIHlvdSdsbCBzaW1wbHkgYmUgZ2l2ZW4gcmVwbGFjZW1lbnQgaG9ybW9uZXMgd2l0aG91dCBhbnkgZnVydGhlciBpbnF1aXJ5IGludG8gdGhlIGNhdXNlIG9mIHlvdXIgY29uZGl0aW9uLgpBIE1hcmNoaW5nIEJhbmQgV2l0aG91dCBJbnN0cnVtZW50cwpCZWl0cmdlIERyaXR0ZXIgc2luZCBhbHMgc29sY2hlIGdla2VubnplaWNobmV0LiBEaWUgVmVydmllbGZsdGlndW5nLCBCZWFyYmVpdHVuZywgVmVyYnJlaXR1bmcgdW5kIGplZGUgQXJ0IGRlciBWZXJ3ZXJ0dW5nIGF1ZXJoYWxiIGRlciBHcmVuemVuIGRlcyBlcyBiZWRyZmVuIGRlciBzY2hyaWZ0bGljaGVuIFp1c3RpbW11bmcgZGVzIGpld2VpbGlnZW4gQXV0b3JzIGJ6dy4gClRoZSBsYXJnZXIgZmFjdG9ycyB3ZXJlIEJyYWR5IGhhdmluZyBmZXdlciB0YXJnZXRzLCBCcmFkeSB0cnlpbmcgdG8gZm9yY2UgaXQgZG93biB0aGUgZmllbGQgd2hlbiBoZSBoYXMgbGl0dGxlIHRvIG5vIGRvd25maWVsZCBhY2N1cmFjeSBhbnltb3JlL2xpdHRsZSB0byBubyBnb29kIGRvd25maWVsZCB0YXJnZXRzLCB0aGUgbGFjayBvZiBhIGdvb2Qgb2ZmZW5zaXZlIGxpbmUgcHJlc2VuY2UgdG8gc3RhcnQgYW55IGdvb2QgcnVubmluZyBwbGF5cywgYW5kIGEgZGVmZW5zZSB0aGF0IHRydWx5IGJsZXcgZ2l2aW5nIHVwIGh1Z2UgcnVuIHBsYXlzLCBsb25nIHJhbmdlIHBhc3MgcGxheXMsIGFuZCAoSUlSQykgdGhlIFBhdHMgd2VudCBuZWdhdGl2ZSBpbiB0aGUgdHVybm92ZXIgbWFyZ2luICh0b28gbGF6eSB0byBjb25maXJtKS4uIApIZSBzYWlkIGF0IGEgcmVjZW50IG1lZGlhIHdhbGsgdGhyb3VnaCwgIlRoaXMgaXMgbm90IGEgcHJvamVjdCBmb3IgdGhlIHJpY2gsIG5vdCBhbiBlbmNsYXZlLiAKUGxlYXNlIGhlbHAgbWUuIEhlIGhlYXJzIEplc3NpY2Egc29iYmluZyBhbmQgaXQgc3RhcnRzIHNvdW5kaW5nIGZ1cnRoZXIgYXdheS4gRXJpYy4gClNvbWUgb2YgTmV0RW50IHVuaXF1ZSBmZWF0dXJlcyBhcmUgdGhlIEF2YWxhbmNoZSBmZWF0dXJlIHdoaWNoIG1ha2VzIHN5bWJvbHMgZmFsbCBmcm9tIHRoZSB0b3Agb2YgdGhlIHNjcmVlbi4gQWxzbywgbWFueSBOZXRFbnQgZ2FtZXMgZmVhdHVyZSAzRCBlZmZlY3RzIGFuZCAzRCBleHBsb3Npb25zIGFzIHdlbGwgYXMgdW5pcXVlIGJvbnVzIGdhbWVzIHRoYXQgc29tZXRpbWVzIHJlcXVpcmUgYm90aCBza2lsbHMgYW5kIGx1Y2suIEl0cyBwb3B1bGFyaXR5IG1hZGUgaXQgb25lIG9mIHRoZSBtb3N0IGNvbW1vbmx5IHVzZWQgcHJvdmlkZXJzIGFuZCB0aGVyZWZvcmUgcGxheWVycyBjYW4gY2hvb3NlIGJldHdlZW4gYSBodWdlIG51bWJlcnMgb2YgY2FzaW5vcyB0aGF0IGZlYXR1cmUgaXRzIHRpdGxlcy4gCldoZXJlIEkgd291bGRuIHNheSB0aGF0IGNoZWFwLCBhbmQgSSBub3QgZWF0aW5nIHN1cGVyIGZhbmN5LCB5b3UgY2FuIGVhc2lseSBzcGVuZCB0aGF0IGJ5IGdvaW5nIG91dCB0byBlYXQgZm9yIGEgc2luZ2xlIG1lYWwgZm9yIG9uZSBwZXJzb24uSSB0aGluayBpZiBJIGRyb3BwZWQgYSB3ZWlnaHQgY2xhc3MgSSBzdGlsbCBiZSBuZWVkaW5nIHRvIGVhdCAzMDAwIDQwMDAgY2Fsb3JpZXMgYSBkYXksIHdoaWNoIHdvdWxkbiBiZSB0b28gbXVjaCBkaWZmZXJlbnQgaW4gcHJpY2UuIE1heWJlIHNhdmUgJDMgNCBhIGRheSBhcyBJIGVzc2VudGlhbGx5IGN1dCBvdXQgYSBtZWFsLCBzbyAkMTAwIGEgbW9udGg/IEkgZmVlbCBsaWtlIHRoYXQgYW1vdW50IG9mIG1vbmV5IGNvdWxkIHByb2JhYmx5IGJlIHNhdmVkIGVsc2V3aGVyZSwgYnV0IGl0IGFsbCBkZXBlbmRzIG9uIHByaW9yaXRpZXMuIDMgcG9pbnRzICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ29JIGxpa2UgZGVmaWNpdCBkZWFkbGlmdHMgYmVjYXVzZSB0aGV5IGZvcmNlIG1lIHRvIHdvcmsgb24gbXkgc3RhcnRpbmcgcG9zaXRpb24uIAoiVGhleSBhcmUgdHJ5aW5nIHRvIGFwcGVhc2UgdGhlIGNoYXJpdGllcyBieSBkb2luZyB0aGlzLCIgaGUgc2FpZCwgd2l0aCBjaGFyaXRpZXMgY2FsbGVkIG9uIHRvIHBheSBhICQyNTAgZmVlIHBlciBkYXkgZm9yIGV2ZW50cy4gIldlIG5lZWQgdGhlIGNoYXJpdGllcywgdGhleSBuZWVkIHVzLiAKSm9vdHNpZUNvcmUgMiBEdW8gRGltcGxlcwpUaGUgMjAxOCBjYXNlIGludm9sdmVkIGEgVG9yb250byBsaWdodGluZyB0ZWNobmljaWFuICh0aGUgYm95LCBpbiBpbmR1c3RyeSBwYXJsYW5jZSkgd2hvIHdhcyBlbXBsb3llZCBpbiB2YXJpb3VzIGZpbG0gcHJvZHVjdGlvbnMuIEhlIHJlcG9ydGVkIHRvIHRoZSBkaXJlY3RvciBvZiBsaWdodGluZyAodGhlIG9mIGVhY2ggcHJvZHVjdGlvbi4gRHVyaW5nIDIwMTAsIHRoZSB0YXhwYXllciByZWNlaXZlZCBhIFQ0IHNsaXAgY292ZXJpbmcgaGlzIGVtcGxveW1lbnQgb24gMTIgZGlmZmVyZW50IGZpbG0gb3IgVFYgcHJvamVjdHMgZm9yIGEgbnVtYmVyIG9mIHByb2R1Y3Rpb24gY29tcGFuaWVzIG92ZXIgdGhlIGNvdXJzZSBvZiB0aGUgeWVhci4KSW4gMjAwMCwgSGFydCBhbmQgTWFzIENvbGVsbCBpbnRyb2R1Y2VkIHRoZSBpbXBvcnRhbnQgZ2FtZSB0aGVvcmV0aWMgYWxnb3JpdGhtIG9mIHJlZ3JldCBtYXRjaGluZy4gCkhlIHdhcyAibG9va2luZyBmb3Igc29tZXRoaW5nIG1vcmUgZXhvdGljLCIgaGUgZXhwbGFpbnMuLiAKVGhvdWdoIGV4cGVydHMgYmVsaWV2ZSBvYnN0cnVjdGlvbiBieSB0d2VldCBpcyBwb3NzaWJsZSwgcHJvc2VjdXRvcnMgaGF2ZSB0byBwcm92ZSBiZXlvbmQgYSByZWFzb25hYmxlIGRvdWJ0IHRoYXQgYSBwYXJ0aWN1bGFyIGFjdCBnb3QgaW4gdGhlIHdheSBvZiBhbiBpbnZlc3RpZ2F0aW9uIGFuZCB0aGF0IHRoZSBwZXJzb24gd2hvIGRpZCBpdCBpbnRlbmRlZCB0byBvYnN0cnVjdC4uIApUaGF0IHdoYXQgc28gc3RyYW5nZSB0byBtZS4gTWF5YmUgSSBjYW4gdW5kZXJzdGFuZCBpZiB5b3VyIGxpZmUgaXMgbm90IGdyZWF0IGFuZCBhcmUgbG9va2luZyBmb3Igc29tZW9uZSB0byBicmluZyB5b3Ugb3V0IG9mIHlvdXIgdHJvdWJlLCBtYXliZSB5b3VyIHZlcnkgYW1iaXRpb3VzIGFuZCB3b3VsZCBsb29rIHRvIHBsZWFzZSBzb21lb25lIGluIGhvcGVzIG9mIGdldHRpbmcgYSBwcm9tb3Rpb24sIG1heWJlIHlvdSBsb3N0IGFuZCB5b3UganVzdCBsb29raW5nIGZvciBzb21lIGxlYWRlciB0byBmb2xsb3csIG9rLCBJIGdldCB0aGF0LApUaGlzIGJlIGFuIHVucG9wdWxhciBvcGluaW9uLCBidXQgSSBhbHdheXMgc2F3IHRoZSB3aW5rIHdpbmsgbnVkZ2UgbnVkZ2UgU3RhbiBMZWUgY2FtZW9zIGFzIHNpbWlsYXJseSBkaXN0YXN0ZWZ1bC4gClRoaXMgaXMgS29yZWEgZmFtb3VzIENoaWNrZW4gR2luc2VuZyBzb3VwLiBHbyBhdCBhbiBvZmYgdGltZSwgb3IgZXhwZWN0IGEgbG9uZyB3YWl0LiBUaGUgbmVpZ2hib3Job29kIHdoZXJlIHRoaXMgaXMgbG9jYXRlZCBpcyBteSBmYXZvcml0ZSBpbiBTZW91bC4gCkhhZCBhIG1haCBqb25nZyBzcGVjaWFsaXN0IGNvbWUgaW4gYW5kIGRlc2lnbiBhIGdhbWUgZm9yIHVzIGFuZCB0ZWFjaCB1cywgQ2h1IHNheXMsIGluIG9yZGVyIHRvIG5haWwgYSBjbGltYWN0aWMgdCBiZXR3ZWVuIFJhY2hlbCBhbmQgTmljayBtb3RoZXIgRWxlYW5vciwgcGxheWVkIGJ5IHRoZSB2ZW5lcmFibGUgYWN0b3IgTWljaGVsbGUgWWVvaC4gCiJXZSBoYWQgdG8gYWNjZXB0IHdlIHdlcmUgZ29pbmcgdG8gaGF2ZSB0byBtYWtlIGNvbXByb21pc2VzIHRoYXQgSSBhbSBub3QgaGFwcHkgd2l0aC4gVGhhdCBpcyBkaWN0YXRlZCBieSB0aGUgYnVkZ2V0IGFuZCB0aGF0IGRpY3RhdGVzIHdoYXQgeW91IGNhbiBkby4gV2UgYXJlIHRyeWluZyB0byB3b3JrIGhhcmQgYW5kIHRob3NlIHdobyBhcmVuIGluIEdhbHdheSBhbGwgdGhlIHRpbWUgYXJlIGV4cGVyaWVuY2VkIHBsYXllcnMsIGJ1dCB0aGVyZSBpcyBubyBkb3VidCBhYm91dCBpdCB0aGF0IGl0IHdvdWxkIG1ha2UgYSBiaWcgZGlmZmVyZW5jZSBpZiB3ZSBjb3VsZCBhbGwgd29yayB0b2dldGhlciBhbGwgb2YgdGhlIHRpbWUuIEkgdGhpbmsgd2UgYXJlIGhhdmluZyBhIGJhZCBydW4gb2YgbHVjay4gVGhlcmUgaXMgbm9ib2R5IG1vcmUgZGlzYXBwb2ludGVkIHRoYW4gbWUuClRoZSBhcmd1bWVudCBpcyBtb290IGFueXdheSBiZWNhdXNlIHdoZXRoZXIgaXQgd2FzIGJlbmVmaWNpYWwgb3Igbm90IGNhcGl0YWxpc20gaXMgYnJlYWtpbmcgZG93biwgcGVybWFuZW50bHkuIApJdCBpcyBub3QgcmlkaWN1bG91cyB3aGVuIHBlb3BsZSBhcmUgZHlpbmcgZnJvbSB0aGUgY29uc2VxdWVuY2VzIG9mIGlycmVzcG9uc2libGUgc2V4LiBJdCBpcyBub3QgcmlkaWN1bG91cyB3aGVuIHRoZSByYXRlIG9mIHRlZW4gcHJlZ25hbmNpZXMgaXMgc29hcmluZyBpbnRvIHRoZSBzdHJhdG9zcGhlcmUuIEl0IGlzIG5vdCByaWRpY3Vsb3VzIHdoZW4gdGVlbnMgYXJlIGJlaW5nIHVyZ2VkIHRvIGFic3RhaW4gZnJvbSBzZXguClRoZXJlIGhhcyBiZWVuIG5vIGFncmVlbWVudCBvdmVyIHdoZXRoZXIgb2JqZWN0aXZpdHkgaXMgcG9zc2libGUgaW4gYWNhZGVtZS4gSW4gZmFjdCwgdGhlcmUgaGFzIGJlZW4gYW4gaW5jcmVhc2luZyBpc29sYXRpb24gYmV0d2VlbiB0aG9zZSB3aG8gY2xhaW0gb2JqZWN0aXZpdHkgYW5kIHRob3NlIHdobyByZXNpc3Qgc3VjaCBjbGFpbXMuIApUaGUgdG9wIHRlbiByaWNoZXN0IGFyZSB3b3J0aCA3MjkuNyBiaWxsaW9uLCB0b3AgMTAwIHJpY2hlc3QobWF5YmUgcGx1cyA0IG1vcmUpIGFyZSB3b3J0aCAxLjg2OSBUcmlsbGlvbiwgYW5kIHRoZSBVUyBzcGVuZHMgYW55d2hlcmUgZnJvbSAxLjEgdHJpbGxpb24gKDIwMTcpICAzLjYgdHJpbGxpb24oMjAxMCkgYSB5ZWFyLiBFdmVuIGlmIHlvdSB0YXggYXQgMTAwJSBhbmQgaW5jbHVkZSB0YXhpbmcgdGhlaXIgYnVzaW5lc3NlcywgeW91IHdvdWxkIG5vdCBiZSBhYmxlIHRvIGZ1bmQgdGhlIGdvdmVybm1lbnQgZm9yIG1vcmUgdGhhbiBhIHllYXIgb3IgdHdvLiBLZWVwIGluIG1pbmQsIHRoZXNlIGFyZW4gYWxsIEFtZXJpY2FuIGNpdGl6ZW5zLgpJJ20gYWxzbyBub3Qgc2F5aW5nIHRoYXQncyBhIGJhZCB0aGluZyB0byByZW1haW4gaW5kZXBlbmRlbnQsIGFuZCBpZiBhbnl0aGluZyB0aGUgd2F5IDIwMTYgcGxheWVkIG91dCBzaG91bGQgYmUgYSBjYXNlIHN0dWR5IGZvciBhbiBlbnRpcmUgb3ZlcmhhdWwgdG8gdGhlIDIgcGFydHkgc3lzdGVtIGFuZCByZXF1aXJlbWVudHMgdG8gbWFrZSBpdCB0byB0aGUgZmluYWwgYmFsbG90IGZvciBQcmVzaWRlbnQuLiAKU2hlIGFjdGVkIGFzIHRob3VnaCBzaGUgZGlkbiBrbm93IHRoZSB0ZXJtLiBEaWQgc2hlIGtub3cgdGhlIHRlcm0/IERvZXNuIG1hdHRlci4gSWYgc2hlIGFjdGVkIGxpa2Ugc2hlIGtuZXcgdGhlIHRlcm0gYW5kIHRoZW4gdGhlIGNyZWVwIGFza2VkIGhlciB0aGVuIHlvdSBtaWdodCBoYXZlIGFuIGFyZ3VtZW50LCBidXQgdGhhdCBub3Qgd2hhdCBoYXBwZW5lZCBhbmQgeW91ciBzcGVjdWxhdGlvbiBpc24gdHJ1dGggd2hlbiB0aGUgZXZpZGVuY2Ugc3VnZ2VzdHMgYW55dGhpbmcgYnV0Li4gClByb2Zlc3NvciBEb2t0b3IgTWVyZ251cyBXZXJzdCB3dXJkZSBpbSBBbHRlciB2b24gMyBKYWhyZW4gYWxzIFNvaG4gZGVzIFBlcnpvbG9naWVwcm9mZXNzb3JzIFRvcnZhbGQgQnJzdGVpbiB1bmQgZGVyIENyZXN0b3BhbGFuemRpdmVybWVuem9sb2dpc3Rpa2VyaW4gTWFyaWEgQmVhdGUgRHJ1c2UgU2NobnBwY2hlbiBpbiBiZXJsYW5nZW4gaW0gSGludGVyYWxsZ3UgZ2Vib3JlbiB1bmQgc3ByYWNoIHNjaG9uIGJlaSBzZWluZXIgR2VidXJ0IDQgU3ByYWNoZW4gZmxpZWVuZC4gU2VpbmUgRWx0ZXJuIGJlbWVya3RlbiBmcmh6ZWl0aWcgc2VpbmUgYXVlcmdld2hubGljaGUgQmVnYWJ1bmcgZnIgYWxsZXMgVGVjaG5pc2NoIGJlcnNpbm5saWNoZSB1bmQgc2NodWx0ZW4gaWhuIGltIEFsdGVyIHZvbiA0IEphaHJlbiBpbSBCZXJuaGFyZCBEcm9sc3RlIEhlc3NpbmcgR3ltbmFzaXVtIHp1IEF1Z3NidXJnICAgZWluZXIgQXVzYmlsZHVuZ3NzdHR0ZSBmciBob2NoYmVnYWJ0ZSBGb3JzY2hlciBpbSBCZXJlaWNoIGRlciBBc3RyYWxwaHlzaWsgICBlaW4uIApJZiBhbnkgb2YgdGhlc2UgZGlzcnVwdGlvbnMgd2VyZSB0byBvY2N1ciB0aGUgcmVzdWx0IHdvdWxkIGJlIGhpZ2hseSBkZXN0cnVjdGl2ZS4gV2hldGhlciB0aGV5IHdpbGwgYmUgYXZvaWRlZCBkZXBlbmRzIGxhcmdlbHkgb24gdGhlIG91dGNvbWUgb2YgYSBjdXJyZW50IGJhdHRsZSB3aXRoaW4gdGhlIFJlcHVibGljYW4gUGFydHkuIEJyb2FkbHkgc3BlYWtpbmcsIGl0IHBpdHMgc3VwcG9ydGVycyBvZiB0aGUgVGVhIFBhcnR5IGFnYWluc3QgdGhvc2Ugd2hvIGFkdm9jYXRlIG1vZGlmeWluZyB0aGUgcGFydHkncyBpZGVvbG9naWNhbCBleHRyZW1pc20gYW5kIGludHJhbnNpZ2VuY2UgaW4gb3JkZXIgdG8gYXZvaWQgY29udGludWVkIGVsZWN0b3JhbCBkZWZlYXQgYW5kIGZpc2NhbCBjYWxhbWl0eS4KOTMpIDMgV2F5IChUaGVHb2xkZW4gUnVsZSkgW2ZlYXQuIEp1c3RpbiBUaW1iZXJsYWtlIExhZHkgR2FHYV0gaXMgYWNvbWVkeSBzaW5nbGUgd2l0aCBjb21lZGlhbnMgZmVhdHVyaW5nIHRoZSBvbmUgYW5kIG9ubHkgTGFkeSBHYUdhIUNhbiBnZXQgdGhpcyBzb25nIG9uIGlUdW5lcy4gOTQgOTYpIEFsbCBvZiB0aGVzZSBzb25ncyBjYW4gYmUgZm91bmQgb24gaVR1bmVzOiBNdXJkZXIgTXkgSGVhcnQgKGZlYXQuIApJdCB3YXMgaGFyc2gsIGJ1dCBJIHRoaW5rIGV2ZXJ5IGxpdHRsZSBkZWNpc2lvbiB3ZW50IGFnYWluc3QgdXMuIApBcmUgeW91IHRlbGxpbmcgdGhlbSB5b3UganVzdCBsb29raW5nIGZvciBzb21lYm9keSB0byBoYW5nIG91dCB3aXRoIG9ubHkgYWZ0ZXIgdGhleSBiZWdpbiBkaXNlbmdhZ2luZyBmcm9tIHlvdT8KOCBob3VycyBzbGVlcCBmb3IgbWUsIG5vIHJlZ3JldHMuIApPaCBjb21lIG9uIG5vdy4gVGhlcmUgd2VyZSB2ZXJ5IGZldyBwZW9wbGUgYXQgdGhhdCB0b3JjaCByYWxseS4gClRoZSBiZXN0IHBhcnQgaXMgZXZlcnlvbmUgYXBwcmVjaWF0ZWQgaXQuLiAKSWYgaXQgZG9lcyBub3QgYm91bmNlIGluIHRoZSBib3ggZGlhZ29uYWxseSBvcHBvc2l0ZSwgb3IgaGl0cyB0aGUgbmV0IGFuZCBkb2VzIG5vdCBnbyBvdmVyLCBvciBib3VuY2VzIGluIHRoZSB3cm9uZyBzZXJ2aWNlIGJveCwgb3IgdGhlIHNlcnZlciBmb290IGZhdWx0czUgdGhlIHNlcnZlIGl0IGlzIGNhbGxlZCBhIGZhdWx0LiAKVG8gc3RheSBoZWFsdGh5IG1lYW5zIHRvIGJlIGZyZWUgb2YgYWlsbWVudHMgYW5kIGRpc2FiaWxpdGllcy4gClJlbWVtYmVyIHRob3VnaCB0aGF0IGV2ZXJ5IGRvbGxhciB0aGF0IGdvZXMgdG8gdGhlIGRlYWxlciBpcyByZWR1Y2luZyB5b3VyIHdpbm5pbmdzLiAKVGhlIHR3byBDZW50cmUgQWxsaWFuY2Ugc2VuYXRvcnMgYXQgdGhpcyBwb2ludCBhcmUgYSBidXQgYXJlIHN0aWxsIHdlaWdoaW5nIHVwIHRoZWlyIG9wdGlvbnMsIHdoaWxlIGluZGVwZW5kZW50IFRpbSBTdG9yZXIgZG9lc24gc3VwcG9ydCB0aGUgY3V0cyBidXQgd2lsbCBjb25zaWRlciB0aGVtIGFzIHBhcnQgb2Ygd2lkZXIgdGF4IHJlZm9ybS4gClRoZW4gU2VuZCA4LiBJbiAyIG1pbnMgdSB3aWxsIGdldCBwYXNzd29yZCAuIApBbGwgbXkga2lkcyBoYXZlIGdyb3duIHVwIHdpdGggbXkgdGVhc2luZyB0aGVtIHNpbmNlIHRoZXkgd2VyZSB0aW55IG9uZXMuIFNvIHVzdWFsbHkgd2hlbiBpIHNlZSBoaW0gYXQgc2Nob29sIGkgZ2V0IG15IHJldmVuZ2UgYnkgeWVsbGluZyAiSEkgS0lEMiBJIExPVkUgWU9VIEFORCBNSVNTIFlPVSBTT09PT09PT08gTVVDSCEgSSBDQU5UIFdBSVQgRk9SIFlPVSBUTyBDT01FIEhPTUUgU08gSSBDQU4gTE9WRSBZT1UhIiBBZGQgaW4gbWUgcGlja2luZyBtZSB1cCBpbiBhIGJlYXIgaHVnIGFuZCBzd2luZ2luZyBoaW0gYXJvdW5kLiAKTGEgZ3Jvc3NvcGhvYmllIGZhaXQgZ3Jvc3NpciAhIEV0IGNlbGEgY29tbWVuY2UgcGFyIGxhIGdyb3Nzb3Bob2JpZSBmYW1pbGlhbGUuIE9uIGVzdCB0b3VzIGRpZmZyZW50KGUpcyBldCBwYXMgdG91cyBmYWl0KGUpcyBwb3VyIHRyZSBkZXMgYnJpbmRpbGxlcy4gCkkgdGhpbmsgeW91IGdvdCB0byByZWFsaXplIHRoYXQgaXQgd29ya3MgYm90aCB3YXlzLiAKSWwgZXN0IGVzc2VudGllbCBkJ2FjY29tcGFnbmVyIGNlcyBncm9zc2Vzc2VzIHNhbnMganVnZXIgbmkgY3VscGFiaWxpc2VyIG1haXMgZW4gaW5mb3JtYW50IGF2ZWMgY2xhcnQuLiAKQ2hpbGRyZW4gaW4gdGhlIGZvdW5kYXRpb24gcGhhc2UgcHJvZ3Jlc3MgYXMgdGhlIHllYXIgZ3Jvd3MuIFRlcm0gMSBpcyBhIGxvdCBvZiB0aGUgcHJldmlvdXMgeWVhcnMgd29yayBhbmQgdGhlcmVmb3IgdGhlIGNoaWxkcmVuIGdldCBoaWdoIHN5bWJvbHMuIEFzIHRoZSB5ZWFyIHByb2dyZXNzIHNvbWUgb2YgdGhlbSBmYWxsIGJlaGluZCwgYnV0IGJlY2F1c2UgdGhlaXIgZmlyc3QgdGVybSBtYXJrIG1pZ2h0IGJlIGhpZ2ggdGhlaXIgeWVhciBtYXJrIGlzIGhpZ2hlciB0aGFuIHdoYXQgdGhlIGNoaWxkIGlzIGFjdHVhbGx5IGFibGUgdG8gZG8gYnkgdGhlIGVuZCBvZiB0aGUgeWVhciBhbmQgbWlnaHQgZ2V0IGFuIG92ZXJhbGwgbWFyayBvZiBhIDQgZm9yIHRoZSB5ZWFyIGFuZCBwYXNzLiAKUGFyZW50aW5nIGEgeW91bmcgY2hpbGQgaXMgbm90IGVhc3kuIERvaW5nIHRoYXQgd2hpbGUgZ29pbmcgdG8gc2Nob29sIGFuZCBiZWluZyBiZXR3ZWVuIGhvbWVzIG1ha2VzIGl0IGhhcmRlci4gU3RheSBzdHJvbmcgYW5kIGRvbid0IHdvcnJ5IHRvbyBtdWNoLCB0aGUgYmFieSBkb2VzIG5vdCBjYXJlIHdobyBoYXMgd2hhdCBuYW1lIGFuZCBhcyBzb29uIGFzIGl0IGxlYXJucyBtb3JlIGxhbmd1YWdlIHRoaXMgd29uJ3QgZXZlbiBiZSBhbiBpc3N1ZS4gCiJJdCB3YXMgYSBoZWFydGJyZWFrIGV2ZXJ5IHRpbWUsIiBTbWl0aCBzYWlkLiAiVGhpcyB3YXMgYSB0cmFnZWR5IG9mIGdyYW5kIHNjYWxlLiAKVG9jaCBlZW4gYW5kZXJlIHdlcmVsZCFEZSB3YXJtd2F0ZXIgYnJvbm5lbiBkaWUgd2UgdGVnZW5rd2FtZW47IGhldCBibGlqZnQgc3BlY2lhYWwhTWV0IGRlIGdlb2NhY2hpbmcgYmlqem9uZGVyZSBwbGVramVzIG9udGRla3QgaW4gZGUgbWlqbnN0cmVlayByb25kIEJhbnNrYSBTdGlhdm5pY2FSb25kcml0IGxhbmdzIGRlIGhvdXRlbiBrZXJramVzIGluIGhldCBOb29yZG9vc3Rlbk9ucyB2ZXJibGlqZiBpbiBoZXQgS2VtcGluc2tpIGhvdGVsOiBoZWVybGlqa2UgbHV4ZSBvbmRhbmtzIGhldCByZWdlbndlZXIuIApBbGwgaG9tZXMgZmVhdHVyZSBoaWdoIGVmZmljaWVuY3kgaGVhdGluZywgd2l0aCBoZWF0IHJlY292ZXJ5IHZlbnRpbGF0aW9uIGFuZCBhaXIgY29uZGl0aW9uaW5nLi4gCldoaWxlIHR3byBwZW9wbGUgbWlnaHQgaGF2ZSBkcmVhbXMgd2l0aCBzaW1pbGFyIGRlc2NyaXB0aW9ucyAoIkkgZHJlYW1lZCBhYm91dCBoYXZpbmcgY2FuY2VyIi4gCkllLCBkb2N0b3JzIHdobyB3YW50IHRvIGJlIGRvY3RvcnMsIHJhdGhlciB0aGUgZG9jdG9ycyB3aG8gd2FudCB0byB3b3JrIGluIGEgd2VsbCBwYWlkIHByb2Zlc3Npb24uIApDYWxsIG1lIG5vdyBBcml5YSAwOTc1NjUxOTAwNCAyMnlvIE15IHBob3RvcyBhcmUgZ2VudWluZSBhbmQgcmVhbCBtZSAsSSBsb29rcyBleGFjdGx5IGxpa2UgbXkgcGljcyEgUGx1cyBhbGwgdGhlIHRoaXJkIHdvcmxkIGJzIGp1c3QgZ2V0cyByZXBsYWNlZCBieSBuYW5ueSBzdGF0ZSBhbmQgZmVtaW5pc3QgYnMgd2hlbiB5b3UgZ28gYmFjay4gSSBhbSBhIHNvZnQgc3Bva2VuLCBwYXNzaW9uYXRlLCB2ZXJ5IHNlbnN1YWwgYW5kIGFsbCBuYXR1cmFsIHdvbWFuIHdobyBoYXMgYSByYXJlIG1peHR1cmUgb2YgaW5jcmVkaWJsZSBzZXggYXBwZWFsLiBJIGFtIGEgc291dGhlbiBnaXJsIGFuZCBjYXJyeSB0aGF0IGNoYXJtIG5hdHVyYWxseSBldmVyeXdoZXJlIEkgZ28hIEkgaGF2ZSBhIG5pY2UgcGVyc29uYWxpdHkgYW5kIEkgYWx3YXlzIGF0dGVtcHQgdG8gdGFrZSBnb29kLiAKSSBoYWQgYWxyZWFkeSBiZWVuIHBsYXlpbmcgYSAxMG5sIG9yIDI1bmwgZ2FtZSBsaXZlIHdpdGggYSBidW5jaCBvZiBmcmllbmRzIGZhaXJseSByZWd1bGFybHkuIApBbnl3YXksIGFmdGVyIHBheWluZywgaXQgdXAgdG8gdGhlIHJvb20gaW4gYSBzbWFsbCBlbGV2YXRvci4uIApCdXNpbmVzcyBwZW9wbGUgaGF2ZSBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIGNvbnNlcnZhdGl2ZS4gCkpvYXIgTGVpZnNldGggVWxzb20sIHdobyB3b24gbGFzdCB5ZWFyLCBpcyBmcm9tIEZpbmxhbmQgTm9yd2F5IGJ1dCBoYXMgbGl2ZWQgaW4gQWxhc2thIHNpbmNlIDIwMTEgKGFuZCBkaWRuIHJ1biBpbiB0aGUgSWRpdGFyb2QgdW50aWwgMjAxMykuIApJIHJlYWxseSBlbmpveSBNYWdnYXJkIGtub3RzIHBlcnNvbmFsbHkgYmVjYXVzZSB0aGV5IGluZXhwZW5zaXZlIGFuZCBoaWdoIHF1YWxpdHkuIApJIHRob3VnaHQgaXQgd2FzIHNvIHdlaXJkIHRoYXQgYSkgaGUgY2FsbGVkIGhlciBpbiB0aGVyZSBpbiB0aGUgZmlyc3QgcGxhY2UgYW5kIGIpIHNlZW1lZCBzbyBhbm5veWVkIHRoYXQgSSB3YXMgdGhlcmUuIEkgbWVhbiBoZSBrbmV3IEkgc2xlcHQgb3ZlciEgSSBnb3QgYSBzcXVpY2t5IGZlZWxpbmcgYWJvdXQgaXQuIFNoZSBjYW1lIG91dCBvZiB0aGUgYmF0aHJvb20gZXZlbnR1YWxseSwgbm90IHdhc2hlZCBvciBiYXRoZWQgdGhhdCBJIGNvdWxkIHNlZSwgYW5kIGV2ZW4gYXMgYSBraWQgSSB3YXMgcmVhbGx5IHN1c3BpY2lvdXMgb2Ygd2hhdCB3ZW50IG9uIGluIHRoZXJlLiAKV2UganVzdCBuZWVkIHRvIGZpbmQgdGhlIHJpZ2h0IGNvbWJpbmF0aW9uIGJldHdlZW4gYXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2UgYW5kIGh1bWFuIHRvdWNoLCBzYWlkIE1vcm9zYW4uIApUSEUgSEVMSUNPUFRFUlMgYWMgIEtpZG5leXMgb2YgYm95LCAxMjsgbWF5IHNwYXJlIDIgbGl2ZXMsIG1ha2UgbWVkaWNhbCBoaXN0b3J5IENMRVZFTEFORCAoVVBJKSBBIDEyIHllYXIgb2xkIFBlbm5zeWx2YW5pYSBib3kgd2hvIGRpZWQgQ2hyaXN0bWFzIERheSBtYXkgaGF2ZSBnaXZlbiB0aGUgZ2lmdCBvZiBsaWZlIHRvIHR1byBsb3dhbnMuIE1ycy4gUmljaGFyZCBLZXJyLCAzOSwgb2YgQ2hhcnRvbiwgSW93YSwgYW5kIFJpY2hhcmQgTGVlcGVyLCAzOSwgPm9mIExlZSBDb3VudHksIElvd2EsIHdlcmUgcmVwb3J0ZWQgaW4gZ29vZCBjb25kaXRpb24gdG9kYXkgZm9sbG93aW5nIGtpZCAgbmV5IHRyYW5zcGxhbnQgb3BlcmF0aW9ucy4gClR3byBvciB0aHJlZSBtaW51dGVzIGxhdGVyLCB0aGUgd2F0ZXIgd2FzIGFscmVhZHkgdXAgdG8gbXkgYW5rbGVzIGFuZCB0aGF0IGlzIHdoZW4gdGhpcyBmYW1pbHkgYXBwcm9hY2hlZCBtZSwgYXNrZWQgbWUgaWYgSSB3YXMgYnkgbXlzZWxmLCBhbmQgdGhlbiBzYWlkIHRoYXQgd2UgaGFkIHRvIGNsaW1iIHRvIGhpZ2hlciBncm91bmQuIFN1ZmZlcmVkIGEgc2hhdHRlcmVkIHNwbGVlbiBhbmQgSmFjcXVpIGJyb2tlbiByaWJzIGFmdGVyIGJlaW5nIHRvc3NlZCB1cCBpbnRvIHRoZSB0cmVlIHRvcHMuLiAKTWFueSBwYXR0ZXJucyByZXBlYXQgdGhlbXNlbHZlcyBhbmQgeW91IGNvbWUgdG8gcmVjb2duaXplIHRoZW0gdGhyb3VnaCBzdHVkeS4gCkZvciB0aG9zZSB3aG8gYXJlIGNvbGxlY3RvcnMgYW5kIHdvdWxkIGxpa2UgdG8gYWNoaWV2ZSAxMDAlIGNvbXBsZXRpb24gKENvbGxlY3Rpb25zLCBUcml1bXBocywgd2hhdGV2ZXIpLCBQdlAgaXMgYSBtdWNoIG1vcmUgdmFyaWFibGUgYWN0aXZpdHkgdnMuIFB2RS4gRm9yIGV4YW1wbGUsIEkgY2FuIHNwZW5kIDggaG91cnMgb24gYSByYWlkLCBmYWlsIHRvIGNvbXBsZXRlIGl0LCBidXQgaGF2ZSBhIGNoZWNrcG9pbnQgdG8gY29tZSBiYWNrIHRoZSBuZXh0IGRheSBhbmQgc3RhcnQgd2hlcmUgSSBsZWZ0IG9mZi4gCkFmdGVyIHJlY29nbml6aW5nIHNpZ25zIG9mIHNlcmlvdXMgbWVkaWNhbCBjb21wbGljYXRpb25zLCBuZXdzIG9mIHNpZ25pZmljYW50IG5lZ2xlY3QgYW5kIHBoeXNpY2FsIGFidXNlIG9jY3VycmluZyB0byBteSBnb2QvZ3JhbmQgbW90aGVyIGFmdGVyIGJlaW5nIHRyYW5zcG9ydGVkIHRvIGEgbnVyc2luZyBjYXJlIGNlbnRlciwgYW5kIG9uZSBvZiB0aGUgbW9zdCBpbmNvbXBldGVudCBhbmQgbW9yb25pYyBhdHRvcm5leSAodmVyaWZpZWQpIGluIHRoZSBlbnRpcmUgYXJlYSwgSSB3YXMgZm9yY2VkIGludG8gYSBwbGVhIGNvbnZpY3Rpb24uIE15IHN1YmNvbnNjaW91cyBjb25kaXRpb25pbmcgZnJvbSBwYXJ0aWNpcGF0aW9uIGluIHRoZSBjYXRob2xpYyBzZXJ2aWNlcyBmdXJ0aGVyIHdhc2hlZCBhd2F5IG15IGNvbXBldGVuY3kgKENodXJjaCBoYXMgYSB3YXkgb2YgZHJvd25pbmcgb3V0IHRoZSByZWFsIGhlcmUgYW5kIG5vdyBhbmQgZ2V0cyBwZW9wbGUgdG8gcnVtaW5hdGUgYWJvdXQgdGhlIHRlYWNoaW5ncyBpbnN0ZWFkKS4gCk15IG5hbWUgaXMgQ2FpdGggV3JpZ2h0IGFuZCBJJ20gYSAyMDAgaHIgWW9nYSBBbGxpYW5jZSBjZXJ0aWZpZWQgeW9nYSBpbnN0cnVjdG9yLCBJIHByYWN0aWNlIGEgSGF0aGEgVmlueWFzYSBmbG93IGZyb20gdGhlIHRlYWNoaW5ncyBvZiBLcmlzaG5hbWFjaGFyeWEgKGFzIHdlbGwgYXMgaGF2aW5nIGEgYmFja2dyb3VuZCBpbiBJeWVuZ2FyIHlvZ2EpLiBJIGxpdmVkIGluIEluZG9uZXNpYSBmb3IgMiBtb250aHMgd2hpbGUgc3R1ZHlpbmcgYW5kIHByYWN0aWNpbmcgeW9nYSBldmVyeWRheS4gWW9nYSBpcyBhIHBlcmZlY3Qgd2F5IHRvIHJlbGlldmUgc3RyZXNzIGFuZCB3b3Jrb3V0LiAKUGljayB5b3VyIHRvcCBTaW5nbGUgdGFyZ2V0IHRhbGVudHMsIGRvbiBwaWNrIGFueSBhZGRpdGlvbmFsIHRhbGVudHMuIApXYXRjaCBMYWR5IEdhZ2EncyBTdHVubmluZyBCZWx2ZWRlcmUgJ1Bva2VyIEZhY2UnIFBlcmZvcm1hbmNlIEhlcmU6CkluIHRoZSBQYWNpZmljIHRoZWF0ZXIsIHRoZSBCYXR0bGUgb2YgTWlkd2F5IGluIDE5NDIgcHJldHR5IG11Y2ggbG9zdCBpdCBmb3IgdGhlIEphcGFuZXNlLCBhcyB0aGV5IGxvc3QgNCBpbXBvcnRhbnQgYWlyY3JhZnQgY2FycmllciwgYW5kIG1hbnkgY3J1aXNlciwgZGVzdHJveWVycywgYW5kIGh1bmRyZWRzIG9mIHdhcnBsYW5lcy4gVGhleSBhbHNvIGxvc3QgdGhlaXIgY29ja3kgY29uZmlkZW5jZSB0aGVuLiAKTGVzIHByb2pldHMgZW4gY291cnMgb3UgIHZlbmlyIHRvdWNoYW50IGxhIHZvaXJpZSBldCBsYSBjaXJjdWxhdGlvbgpGZWRvciBIb2x6IG9mIHRoZSBMQSBTdW5zZXQgd29uIHRoZSBFdXJvcGVhbiBQbGF5ZXIgb2YgdGhlIFllYXIgYXdhcmQsIGFuZCBMb25kb24gUm95YWxzIHRlYW0gbWFuYWdlciBMaXYgQm9lcmVlIHdvbiB0aGUgRXVyb3BlYW4gRmVtYWxlIFBsYXllciBvZiB0aGUgWWVhci4gClRoZSBhdHRhY2sgaXMgcm91bmQsIGp1aWN5IGFuZCBmcmVzaCB3aXRoIHJpcGUgY2hlcnJ5IGZydWl0IGZsZWNrZWQgd2l0aCBsaWNvcmljZSBhbmQgZHJpZWQgaGVyYnMgYW5kIGEgcGVyZmVjdCBhbW91bnQgb2YgYWNpZGl0eS4gVGhpbmsgbGFtYiBzdGV3IG9yIGNob3BzLCBhIGZhdm91cml0ZSBwb3JrIGRpc2ggb3Igb3BlbiBhcyBhIHZlcnNhdGlsZSBwYXJ0eSByZWQuLiAKV2hlbiBOaWNrIHRoZSBHcmVlayBmaW5hbGx5IHN0b29kIHVwIGZyb20gdGhlIHRhYmxlIGZvciB0aGUgbGFzdCB0aW1lIGFuZCBpbmZhbW91c2x5IGFubm91bmNlZCAiTXIuIApTaW5jZSBsYXVuY2hpbmcgUG9rZXJTdGFycyBpbiAyMDAxLCB0aGUgUmF0aW9uYWwgR3JvdXAgb2YgY29tcGFuaWVzIGhhcyBiZWNvbWUgdGhlIGluZHVzdHJ5IGxlYWRlciB3aXRoIGEgZm9jdXMgb24gb3BlcmF0aW9uYWwgZXhjZWxsZW5jZSBhbmQgY3VzdG9tZXIgc2F0aXNmYWN0aW9uLgpEcnlhZHMgYXJlIHNvIGJpZyBvZiBhIGRlYWwgaW4gdGhlaXIgd29ybGQgdGhhdCBqdXN0IGdldHRpbmcgYSBxdWVzdCBmcm9tIHRoZW0gaGFzIGFjdHVhbCB3ZWlnaHQuCkR1IHJlc3RlLCBlc3QgY2UgYmllbiBpbXBvcnRhbnQgZGUgbGUgc2F2b2lyLCBzYWNoYW50IHF1IHRyYWRpdGlvbiBxdWVsbGUgcXUgc29pdCBlc3QgZGVzdGluZSAgcHJpciBzaSBvbiBjaGVyY2hlICBsYSByZXByb2R1aXJlICBsIGluZGZpbmltZW50LiAKTG9zIEFuZ2VsZXMgcG9saWNlIFNndC4gCjE0IHllYXJzIGxhdGVyPyBIZSBnZXRzIHRvIHRha2UgaG9tZSAkNTI2LDc3OCBhcyBhIGNvbnNvbGF0aW9uIHByaXplIGFzIHBva2VyIGZhbnMgYXJlIGFsbCBsZWZ0IHdvbmRlcmluZyB3aGF0IGlmIE5lZ3JlYW51IGhhZCBtYWRlIHRoZSBOb3ZlbWJlciBOaW5lPyBPbmUgdGhpbmcgaXMgZm9yIHN1cmUsIEVTUE4gcmF0aW5ncyB3b3VsZCBoYXZlIGJlZW4gdGhyb3VnaCB0aGUgcm9vZiBhcyBsaXZlIGNvdmVyYWdlIG9mIHRoZSBmaW5hbCB0YWJsZWJlZ2lucyBvbiBTdW5kYXksIE5vdmVtYmVyIDggYXQgODozMHBtIEVULi4gCk92ZXJ2aWV3IGZvciBCaW9TZW1hbnRpY3MKSWYgeW91IHVzZSB0aGUgbG9jYWwgdGF4aSBhcHAgaXQgY29zdHMgJDEgdG8gZ2V0IHRvIGNlbnRlcikuIApMb0wgaXMgYW4gaW52ZXN0bWVudCBhbmQgYSBob2JieS9pbnRlcmVzdC4gCkkgYmFzaWNhbGx5IGJlY2FtZSB0aGUgYmlnZ2VzdCBwYWluIGluIHRoZSBidXR0LiA4IGRheXMgbGF0ZXIsIHdoZW4gdGhleSB3ZW50IHRvIHJlc3BpdGUsIG15IGFnZW5jeSBjb252aW5jZWQgdGhlIHJlc3BpdGUgZmFtaWx5IHRvIHRha2UgdGhlbS4uIApVZ2x5Rmlvc0R1ZGUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgcmVhbGl6ZWQgaXQgZG9lcyBsb29rIGxpa2UgdGhhdCBhZnRlciB0aGUgb3RoZXIgZ3V5IHRoYXQgcmVwbGllZCAvdS9JbVdhZGVXaWxzMG4sIHBvaW50ZWQgb3V0IHRoZSBzaW1pbGFyaXRpZXMgd2l0aG91dCBiZWluZyBhIGNvbXBsZXRlIGFzcyBhYm91dCBpdCBsaWtlIHlvdSBkaWQuSSBhbGwgZm9yIHRhbGtpbmcgYWJvdXQgdGhpbmdzIGxpa2UgdGhpcywgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSB3b3VsZCByZXNwb25kIHdlbGwgdG8geW91ciBhdHRpdHVkZS4gClRoaXMgaXMgYSBiaWcgdGhpbmcgcGVvcGxlIGFsd2F5cyBkb24gcmVhbGl6ZS4gCldoYXQgaXMgdGhlIEdSRUVOIEJJS0UgUFJPR1JBTT9BIGJpY3ljbGUgc2hhcmluZyBzeXN0ZW0gKGFsc28ga25vd24gYXM6IENvbW11bml0eSBiaWN5Y2xlIHByb2dyYW0sIFllbGxvdyBiaWN5Y2xlIHByb2dyYW1zLCBXaGl0ZSBiaWN5Y2xlIHByb2dyYW1zLCBwdWJsaWMgYmlrZSBvciBmcmVlIGJpa2UpIGlzIGFuIGluY3JlYXNpbmdseSBwb3B1bGFyIHN5c3RlbSB3aGVyZWJ5IGJpY3ljbGVzIGFyZSBtYWRlIGF2YWlsYWJsZSBvbiBhIGxhcmdlIHNjYWxlIGluIGEgY2l0eSBhbGxvd2luZyBwZW9wbGUgdG8gaGF2ZSByZWFkeSBhY2Nlc3MgdG8gdGhlc2UgcHVibGljIGJpa2VzIHJhdGhlciB0aGFuIHJlbHkgb24gdGhlaXIgb3duIGJpa2VzLiAKSSB3YXMgYXNrZWQgdG8gbm90IGRvIHRoYXQgb24gMm5kIGdyYWRlIGJ1dCBpIHN0aWxsIGZpbmlzaGVkIGJlZm9yZSBjaHJpc3RtYXMuIE9uIDNyZCBncmFkZSBpIHdhcyBwaHlzaWNhbGx5IHB1bmlzaGVkIGZvciByZWFkaW5nIGhhbGYgcGFnZSBhaGVhZCwgaXQgd2FzIGRpZmZlcmVudCB0ZWFjaGVyIHdobyBkaWRuIGFsbG93IGFueSBkZXZpYXRpb24gZnJvbSB0aGUgbm9ybS4gSSB3YXMgc21va2luZyBjaWdhcmV0dGVzIGFuZCBicmVha2luZyBpbiBlbXB0eSBob3VzZXMgYmVmb3JlIHRoYXQgY2hyaXN0bWFzLiAKT3IsIGluIHRoZSBjYXNlIG9mIHRocmVlIG5ldyBzb25ncyAgIHdpdGggYSBuZXcgZGlzYywgIlRoZSBTbWl0aGVyZWVucyAyMDExIiBqdXN0IG91dCwgdGhpcyBiYW5kIGlzIHN0aWxsIHJlY29yZGluZyBuZXcgbXVzaWMgbW9yZSB0aGFuIDMwIHllYXJzIGludG8gaXRzIGNhcmVlciAgIGFzIGdvb2QgYXMgdGhvc2Ugb3RoZXIgc29uZ3Mgc291bmRlZC4KV2UsIGFzIGNpdGl6ZW5zLCB3ZXJlIHNvbGQgYSBiYWQgYmlsbCBvZiBnb29kcy4gVHJ1bXAgY2FtcGFpZ25lZCBvbiBkcmFpbmluZyB0aGUgc3dhbXAsIHlldCBoZSBmaWxsZWQgaXQgd2l0aCBwZW9wbGUgb2YgcXVlc3Rpb25hYmxlIGp1ZGdlbWVudC4gClRoZWZlYXR1cmVkbWVtYmVycyBhcmUgb3VyIHByb2Zlc3Npb25hbCBib2R5IHdvcmtlcnMuIElmIHlvdSB3b3VsZCBsaWtlIHRvIGJlIGZlYXR1cmVkLCB5b3UgbXVzdCBpbmRpY2F0ZSB0aGF0IHlvdSBhcmUgYSBwcm9mZXNzaW9uYWwgaW4geW91ciBwcm9maWxlIGFuZCB5b3UgbXVzdCB1cGxvYWQgYSBwaWN0dXJlIG9mIHlvdXJzZWxmIGFzIHlvdXIgcHJvZmlsZSBwaWN0dXJlLiBZb3UgYXJlIGVuY291cmFnZWQgdG8gYWRkIGFzIG11Y2ggdG8geW91ciBwcm9maWxlIGFzIHBvc3NpYmxlIC4gCldyaXRpbmcsIGxldmVsIGRlc2lnbiwgbWVjaGFuaWNhbGx5LCBhdG1vc3BoZXJpY2FsbHkgICBsb3RzIG9mIGdhbWVzIGFyZSBwdXNoaW5nIHRoZSBib3VuZGFyaWVzLi4gCk9zdGVybWFuLCB0aGUgcHJlc2lkZW50IG9mIHRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIFBvZGlhdHJpYyBTcG9ydHMgTWVkaWNpbmUgYW5kIHRoZSB0ZWFtIHBvZGlhdHJpc3QgZm9yIHRoZSBXaXphcmRzLCBoYXMgbm90aWNlZCBob3cgdGhlIE5CQSBvY2N1cGF0aW9uYWwgaGF6YXJkIG9mIG9mdGVuIHdlYXJpbmcgbmV3IHNob2VzIGNhbiBwYXJ0aWFsbHkgZXhwbGFpbiB0aGUgdHJhdW1hIG9uIHBsYXllcnMgZmVldC4gCihBUCBQaG90by9EYXZpZCBLb2hsLCBGaWxlKS4gClRydXN0IHlvdXIgZ3V0LiBZZXMuIApGb3VuZGVyIG9mIFNwYWNlWCwgVGVzbGEgTW90b3JzLCBTb2xhciBDaXR5Li4gCllvdSBjYW4gYWxzbyBtYWtlIGJyZWFrZmFzdCBzYW5kd2ljaGVzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHdlZWsgYW5kIHdyYXAgdGhlbSB1cCB0byByZWhlYXQgZWFjaCBtb3JuaW5nLiBFbmdsaXNoIG11ZmZpbiB3aXRoIGVnZywgY2hlZXNlIGFuZCBiYWNvbi9oYW0vc2F1c2FnZS4KVGhlIHN0b3JpZXMgc3BlY3RhY3VsYXIsIHRoZSB0aW1lIHRvZ2V0aGVyIHByZWNpb3VzLiBJdCB3b3VsZCBiZSBhbWlzcyBub3QgdG8gbWVudGlvbiB0aGUgZnVuIGZpbGxlZCBwb2tlciBuaWdodHMgdGhhdCBzcGFubmVkIG92ZXIgNTAgeWVhcnMgd2l0aCBoaXMgY2xvc2UgZnJpZW5kcy4gCkluIGZhY3QsIGdvb2dsaW5nIGl0IGhhcyBVcmJhbiBEaWN0aW9uYXJ5IGFuZCBldmVyeSBmdWNraW5nIGFydGljbGUgc2F5aW5nIHRoYXQgaXQgc2xhbmcgZm9yIGV4aXRpbmcgcXVpZXRseSBhbmQgbm90IGxvbmcsIGRyYXduIG91dCBnb29kYnllcy4gU28gbm90IG9ubHkgYXJlIHlvdSB3cm9uZyBhYm91dCB0aGUgb3JpZ2luLCB5b3UgdGFsa2luZyBhYm91dCBhIHBocmFzZSB3aXRoIGEgZGlmZmVyZW50IG1lYW5pbmcgdGhhbiB0aGlzIGNvbnZlcnNhdGlvbiBjbGFpbWVkIGl0IGhhZC4gSG93IHdyb25nIGNhbiBvbmUgcGVyc29uIGJlPyBMbWFvCkl0cyBub3QganVzdCBoYXZpbmcgaXNzdWVzIGxpc3RlbmluZyBpbiBjbGFzcy4gCkxhc3QsIHRoZXNlIHNvbmdzIGFyZSBsaXN0ZWQgaW4gbm8gcGFydGljdWxhciBvcmRlci4gCkkgc2VlbiBzbyBtYW55IHN0b3JpZXMgb2YgcGVvcGxlIGV4Y2hhbmdpbmcgdGhlaXIgYWRkaWN0aW9ucyBmb3IgYSBrcmF0b20gYWRkaWN0aW9uLCB3aGVyZSB0aGV5IGZlZWwgbGlrZSB0aGV5IG5lZWQga3JhdG9tIHRvIGZ1bmN0aW9uLiAKU29tZW9uZSB3aG8ganVzdCBoYWQgYSBjb252dWxzaXZlIHNlaXp1cmUgd2hlcmUgdGhleSBsb3NlIGNvbnNpb3VzbmVzcyB3aWxsIHR5cGljYWxseSBiZSB2ZXJ5IGNvbmZ1c2VkIGFzIHRvIHdoYXQgaGFwcGVuZCBhZnRlcndhcmQsIHdoZXJlIHRoZXkgYXJlLCBldGMuIEFuZCB3aWxsIGJlIHRpcmVkIGFuZCBzb21ldGltZXMgbmF1c2VvdXMuIApVc2VyIGZsYWlycyB1cGRhdGVkOiAzLzUvMTkgICAxMjozNiBwbSBQU1QKRXZlcm9uZSBvbiBoZXJlIGtub3dzIGFtYmVyIGlzIGxhenksIGFuZCB0aGlzIGlzIHByb3ZpbmcgaXQuIElmIHNoZSBkaWRuIHdhbnQgdG8gcGFyZW50IGEgYmFieSB0aGVuIHNoZSBzaG91bGRuIGhhdmUgaGFkIGFub3RoZXIuIFNoZSBhbHJlYWR5IGZhaWxlZCBtaXNlcmFibHkgYXQgYmVpbmcgYSBtb20gdG8gTGVhaCwgYW5kIHNoZSBnb2luZyB0aGUgc2FtZSB3YXkgd2l0aCBKYW1lcy4gVGltZSB0byBncm93IHVwIGFuZCB0YWtlIGNhcmUgb2YgeW91ciBjaGlsZHJlbiwgYW1iZXIuTGFzdFN0b3BXaWxsb3VnaGJ5ICA0IHBvaW50cyAgc3VibWl0dGVkIDI1IGRheXMgYWdvSSB0aGluayBBbWJlciBoYXZpbmcgYSBuYW5ueSBpcyBhIGdvb2QgdGhpbmcuIApIZSBzaW1pbGFybHkgdGhvdWdodCBiaWcgd2hlbiBoZSBoaXJlZCBNb3JnYW4gU3RhbmxleSB0byB2YWx1ZSBUSFAgdG93YXJkcyB0aGUgZW5kIG9mIHRoZSBkZWNhZGUuIEhlIHdhbnRlZCB0aGUgYmVzdCBwb3NzaWJsZSBhZHZpY2UgZXZlbiB0aG91Z2ggaGUgaGFkIG5vIGV4cGVyaWVuY2UgZGVhbGluZyB3aXRoIGludmVzdG1lbnQgYmFua3MgYW5kIHRoZSBmZWVzIHRoZXkgcmFjayB1cC4gQnV0IGhpcyB2aWV3IGlzIHRoYXQgeW91IG9ubHkgYmVjb21lIGJpZyBpZiB5b3UgdGhpbmsgYW5kIGFjdCB0aGF0IHdheS4gCkp1c3Qgc2VlIGhvdyB0aGV5IGFmZmVjdCBvdXIgZXZlcnlkYXkgbGl2ZXM6CkhlIGRvZXNuJ3QgdGhpbmsgcmVzdCBhbmQgZWxpbWluYXRpbmcgc3RyZXNzIGFyZSB0aGUga2V5cyB0byBoYXBwaW5lc3MuIEhpcyByZXNlYXJjaCBoYXMgc2hvd24gcGFzc2l2ZSBsZWlzdXJlIGRvZXNuJ3QgY3JlYXRlIGNvbnRlbnRtZW50IG5vciBkb2VzIGl0IGJ1aWxkIHBvc2l0aXZlIGVuZXJneS4gV2hhdCBoZSBkaXNjb3ZlcmVkIGlzIHBlb3BsZSB3aG8gaGF2ZSBhIGNsZWFyIGdvYWwgd2hpY2ggZ2l2ZXMgYW4gaW1tZWRpYXRlIGZlZWRiYWNrIHRlbGxpbmcgdGhlbSB3aGF0IHRoZXkgYXJlIGRvaW5nIGlzIHBvc2l0aXZlIGFuZCBtYWtpbmcgYSBkaWZmZXJlbmNlIGFyZSBhbW9uZyB0aGUgbW9zdCBzdWNjZXNzZnVsIGFuZCBjb25maWRlbnQuLiAKU2hlcGFyZC4gR28gYnV5IHNvbWUgcmVhbGx5IGJyaWdodCBwb3N0ZXIgYm9hcmQgYW5kIHdyaXRlIGluIGJpZyBsZXR0ZXJzIHBsYWNpbmcgaXQgaW4gc3BvdHMgYWxsIG92ZXIgdGhlIGxhdW5kcnkgYXJlYS4gClRoYXQgaXMsIHBva2VyIHdhcyBteSBzb2xlIHNvdXJjZSBvZiBpbmNvbWUgKG5vdCB0byBtZW50aW9uIG15IG1haW4gc291cmNlIG9mIGFubm95YW5jZSBhbmQgZnJ1c3RyYXRpb24sIHdpdGggYSBoZWFwaW5nIHNpZGUgb2YgYW54aWV0eSkuIApIZSB3YW50ZWQgYSBwZXJzb24gaW4gSW5kaWdlbm91cyBTZXJ2aWNlcyB3aG8gd291bGQgc2VuZCBhIHN0cm9uZyBzaWduYWwgdGhhdCB0aGUgd29yayB3b3VsZCBrZWVwIGdvaW5nIGF0IHRoZSBzYW1lIHBhY2UsIGFuZCB0aGF0IHRoZSBmaWxlIHdvdWxkIGhhdmUgdGhlIHNhbWUgcGVyc29uYWwgcHJvbWluZW5jZSBmb3IgaGltLiBIZSBhbHNvIHdhbnRlZCB0byBtb3ZlIHNvbWVvbmUgd2hvIGNvdWxkIGJlIHJlcGxhY2VkIGZyb20gb3V0c2lkZSBvZiBjYWJpbmV0LCB0byBrZWVwIHRoZSBzaHVmZmxlIHNtYWxsIGFuZCBjb250YWluZWQuLiAKVG8gbWFrZSBtYXR0ZXJzIHdvcnNlLCBDTk4gaXMgc2F5aW5nIHRoYXQgd2hhdCB0aGUgcG9sbCBzaG93cyBpcyB0aGF0IE9iYW1hICJsYWNrcyB0b3VnaG5lc3MuIiBUaGlzIGZyb20gQ05OLCB3aG8gY291bGQgbm90IGJlIGJlYXRpbmcgdGhlIGRydW0gbG91ZGVyIGZvciBtb3JlIHdhciBzaW5jZSBvdGhlciB0aGFuIE1pY2hhZWwgSmFja3NvbiBkZWF0aCwgdGhleSBoYXZlIGNvdmVyZWQgdmlydHVhbGx5IG5vdGhpbmcgYnV0IElyYW4gYW5kIGhvdyAic29tZXRoaW5nIG5lZWRzIHRvIGJlIGRvbmUuIgpJbiBhZGRpdGlvbiB0byBvZmZlcmluZyBhbiBhbHRlcm5hdGl2ZSB0byBzcHJpbmcgbWF0dHJlc3NlcyB3aXRoIGl0cyB1bmlxdWUgbWFkZSBpbiBDYW5hZGEgZm9hbSBjcmVhdGlvbnMsIHRoZSBjb21wYW55IGFsc28gb2ZmZXJzIHBpbGxvd3MgdGhhdCBmZWF0dXJlIHNocmVkZGVkIGJhbWJvbyBjaGFyY29hbCBtZW1vcnkgZm9hbSBhcyBmaWxsZXIuIApXaGlsZSBpdCBzdGluZ3MgdG8gYmUgY2FsbGVkIG91dCBmb3IgcHJpdmlsZWdlIHRoYXQgeW91IGFyZW4gZXZlbiBhd2FyZSBvZiBzb21ldGltZXMsIGl0IHNvdW5kcyBsaWtlIGhlciBjb21tZW50IG1hZGUgc2Vuc2UgaW4gY29udGV4dC4gCk1heWJlIEkgc2hvdWxkbiBoYXZlIGV2ZW4gbWVudGlvbmVkIGl0LCBtYW55IHNlZW0gdG8gZm9jdXMgb24gdGhlIHdob2xlIFRSUCB2cyBSUFcgdGhpbmcgYW55d2F5LkkgcmVhbGx5IGp1c3QgbG9va2luZyBmb3IgbmV4dCBzdGVwIG1hdGVyaWFsL2luZm8vaWRlYXMvaW5zcGlyYXRpb24uIAoiVGhlIGNvbW11bmljYXRpb24gaGVyZSBpcyBmYW50YXN0aWMsIiBoZSBzYWlkLiAiT3VyIHBlcmZvcm1hbmNlIHRlYW0gaXMgYSB2ZXJ5IHRpZ2h0IGtuaXQgZ3JvdXAgLiBGcm9tIG15IGV4cGVyaWVuY2Ugd29ya2luZyBpbiBwcm9mZXNzaW9uYWwgc3BvcnQsIHRyeWluZyB0byBjb21tdW5pY2F0ZSB3aXRoIHRoZSBjb2FjaGVzLCB3aXRoIHRoZSBwbGF5ZXJzLCBhIGxvdCBvZiBtZXNzYWdlcyBnZXQgbG9zdC4gQnV0IGhlcmUgaXQncyB2ZXJ5IGNsZWFyIHdoYXQgd2UncmUgbG9vayB0byBkby4gV2UncmUgdHJ5aW5nIHRvIGJlIG9uZSBjbHViIGFuZCBub3Qgc2VwYXJhdGUgb3Vyc2VsdmVzIGZyb20gdGhlIGFjYWRlbXkgb3IgdGhlIFVTTCAodGVhbSkuIgpXZSB3YW50IHRvIGdpdmUgb3Vyc2VsdmVzIHRoZSBiZXN0IGNoYW5jZSB3ZSBjYW4gdG8gcHV0IG91cnNlbHZlcyBpbiBhIGdvb2Qgc3BvdC4gCkp1bGlhbiB3YXMgcmVpbmNhcm5hdGVkIGFzIEp1bGlhbiAzcmQgaW4gMTkzNyBhbmQgZnJvbSB0aGUgYWdlIG9mIDE2IHVudGlsIHRoZSBlbmQgb2YgdGhlIEdyZWF0IFdhciBpbiAxOTY4IGJlY2FtZSBBZG1pcmFsIG9mIHRoZSBBaXIgY29tbWFuZGluZyB0aGUgSW50ZXJuYXRpb25hbCBQZWFjZSBGbGVldCBiZWZvcmUgZHlpbmcgaW4gdGhlIGxpbmUgb2YgZHV0eSBpbiAxOTkyLiAKRXQgbGUgc3VycG9pZHMKSSBqdXN0IGFzc3VtZWQgdGhhdCBwYXJraW5nIGVuZm9yY2VycyB3b3JrZWQgTW9uZGF5IHRocm91Z2ggRnJpZGF5LiBUaGV5IGRvIGVuZm9yY2UgcGFya2luZyBvbiB3ZWVrbmlnaHRzIGFzIEkgaGF2ZSBmb3VuZCB0aGF0IG91dCB0aGUgaGFyZCB3YXkgd2hlbiBJIGdvdCBhIHRpY2tldCBhdCBhcm91bmQgODo0MCBwbSBvbiBldmVuaW5nLi4gCkhlIGxhc3RlZCBhYm91dCAzIG1vbnRocyBiZWZvcmUgdGhleSBmaW5hbGx5IHJlbGVudGVkIGFuZCBicm91Z2h0IGhpbSBiYWNrLiBJdCBhIHNoYW1lLCBoZSB3YXMgYSBnb3JnZW91cyBkb2cgYW5kIHZlcnkgcGxheWZ1bC4gSSBob3BlIGhlIGZvdW5kIGEgZmFtaWx5IHRoYXQgYWN0dWFsbHkgaGFzIHRoZSB0aW1lIGZvciBoaW0uIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCldpbm5lcnMgRG9uJ3QgUnVuIEFmdGVyOiBXaW5uZXJzIGhvbGQgdGhlIGNhcGFiaWxpdHkgdG8gZm9sZCB0aGUgaGFuZHMgb25seSB3aGVuIHRoZXkgbGVhcm4gdGhhdCB0aGV5IGFyZSBub3cgdHJvZGRlbi4gVGhleSBkb24ndCBydW4gYWZ0ZXIgdGhlIHBvdHMuIFdoZW4gdGhlIHBsYXllcnMgcnVuIGFmdGVyIGEgcG90LCB0aGV5IGNocmlzdGVuIGZvciB0aGUgbW9zdCBhd2Z1bCBoYW5kIG9uIHRlbnRlcmhvb2tzIHRvIG1ha2UgYSBmb3J0dW5lIG91dCBvZiBpdCBhbmQgb3B0IGZvciBhIGNhcmQgdGhhdCB3aWxsIHRha2Ugb3ZlciB0aGUgcG90IGZvciB0aGVtLiAKSSBuZXZlciB0aG91Z2h0IGFib3V0IGl0IHRoYXQgd2F5LiBJIGluIENhbmFkYSBpbiBhIG1lZGl1bSBsYXJnZSBjaXR5LCBhbmQgdGFsa2luZyB3aXRoIHN0cmFuZ2VycyBpbiBwdWJsaWMgaGVyZSBpcyBwcmV0dHkgY29tbW9uLiBZb3UgY2FuIHVzdWFsbHkgdGVsbCBpZiBzb21lb25lIGlzIGdvaW5nIHRvIGJlIGEgIkhlbGxvLCBuaWNlIHdlYXRoZXIgd2UgaGF2aW5nLCBob3cgeW91ciBkYXk/IiBraW5kIG9mIHBlcnNvbiwgb3IgYSAiSGVsbG8sIG5pY2Ugd2VhdGhlciB0b2RheSwgc3BhcmUgc29tZSBjaGFuZ2U/IiBraW5kIG9mIHBlcnNvbiBiYXNlZCBvbiB0aGVpciBhcHByb2FjaC4gVGhlIGZpcnN0IGtpbmQgYXJlIHVzdWFsbHkgd2FpdGluZyBpbiB0aGUgc2FtZSBzcGFjZSBhcyB5b3UgZm9yIHdoYXRldmVyIHJlYXNvbiAod2FpdGluZyByb29tLCBidXMgc3RvcCwgZXRjLikgYW5kIHdpbGwgc2F5IHNvbWV0aGluZyB0byBicmVhayB0aGUgc2lsZW5jZSBhZnRlciBhIHdoaWxlLCB3aGVyZWFzIHRoZSBzZWNvbmQga2luZCB3aWxsIHdhbGsgcmlnaHQgdXAgdG8geW91IHdoaWxlIHlvdSBtaW5kaW5nIHlvdXIgb3duIGJ1c2luZXNzIGFuZCBsYXVuY2ggc3RyYWlnaHQgaW50byBjb252ZXJzYXRpb24uCklmIHlvdSByZWFsbHkgd2FubmEgc2VlIGFueSBtb3JlIG9mIFN0cm9tYm9saSwgS29la29laywgUGVybGluaSwgU2lrdXJhLCBhbmQgSGF5ZGVuIGV2ZXJ5IG5pZ2h0IHRoZW4gSSB3b25kZXIgaWYgeW91IGxpa2Ugd2F0Y2hpbmcgYmFkIGhvY2tleS4gQWxsIDUgb2YgdGhlc2UgZ3V5cyBoYXZlIGRlbW9uc3RyYXRlZCB0aGV5IGFyZW4gYmV0dGVyIHRoYW4gNHRoIGxpbmUvM3JkIHBhaXJpbmcgcGxheWVycy4gCkpvaG4gSGVzcCBmcm9tIEJyaWRsaW5ndG9uIHdpbnMKVGhpcyB3ZWVrIGJvdGggY291bnRyaWVzIGhlbGQgZWxlY3Rpb25zLiBFc3RvbmlhJ3MgcG9sbHMgY2xvc2Ugb24gTWFyY2ggM3JkLCBidXQgaW50ZXJuZXQgdm90aW5nIHN0YXJ0ZWQgdGVuIGRheXMgZWFybGllci4gCkplIHN1aXMgcmVwYXJ0aWUgYXZlYyBkZXV4IGZhYnVsZXV4IG1pZWxzIGRlIHNhcnJhc2luIGxvY2F1eCAoZXQgc2FucyBhdWN1bmUgYW1lcnR1bWUgcXVlIGonYXZhaXMgcGFyZm9pcyB0cm91dmUgZGFucyBjZXR0ZSB2YXJpdCBkZSBtaWVsKSBldCBkZXMgZ3JhaW5zIHNvdWZmbHMgZXQgY3JvdXN0aWxsYW50cywgcXVlIGplIGRpc3NtaW5lIGRlcHVpcyBzdXIgZGVzIGJvbHMgZGUgcGV0aXQgZGpldW5lciBvdSBkZXMgc2FsYWRlcy4uIAoxNC4gTm8gVHJ1dGggUG9saWNpbmcKTXkgZmlyc3QgY2hpbGQgd2FzIGEgbGl0dGxlIGdpcmwsIGFuZCB3ZSBsb3N0IGhlciBhdCAxOCBtb250aHMgdG8gdW5leHNwYWluZWQgaGVhcnQgZmFpbHVyZShIYXBwZW5lZCBhdCBkYXljYXJlLikgQmVjYXVzZSBvZiBteSBzb25zIGhlYXJ0IHByb2JsZW0sIHdlJ3ZlIGNvbWUgdmVyeSBjbG9zZSB0byBsb3NpbmcgaGltIGEgZmV3IHRpbWVzLiAKSXQncyBraW5kIG9mIGxpa2UgYSBraWQgb3BlbnMgdXAgYSBsZW1vbmFkZSBzdGFuZCBhbmQgaXQncyBib3RoIHJlYWxseSB0YXN0eSBhbmQgZnJlZSEgVGhhdCBzYWlkIHRoZSBraWQgc2VlcyBhbGwgdGhlIG90aGVyIHN0YW5kcyBtYWtpbmcgbW9uZXkgc28gaGUgYWxzbyBvZmZlcnMgZXZlbiBCRVRURVIgbGVtb25hZGUgYnV0IHlvdSBuZWVkIHRvIHBheSBmb3IgdGhhdCBvbmUuIHNvIHBlb3BsZSBnZXQgbWFkIGF0IHRoZSBraWQgZm9yIGNoYXJnaW5nIGFuZCB0cnlpbmcgdG8gcHJvZml0IGV2ZW4gdGhvIGhlIGlzIG9mZmVyaW5nIGEgZnJlZSBvcHRpb24gdGhhdCBpcyBncmVhdCBhbmQgY29zdHMgdGhlIGN1c3RvbWVyIG5vdGhpbmcuClRoZSBzZXJ2aWNlcyBhcmVhIGluIHRoZSBjb250cmFjdCBtYXkgcmVmZXJlbmNlIHdobyB3b3VsZCBiZSByZXNwb25zaWJsZSBmb3IgcHJvdmlkaW5nIHRoZXNlIGl0ZW1zLi4gClBlb3BsZSBidXN0aW5nIG91dCBpbiBQb2tlciBpc250IGNvdW50aW5nIGZvciB0aGUgY2hhbGxlbmdlCkdlbnRpbmcgc2FpZCB0aGUgdGVjaG5pcXVlIG9mICJlZGdlIHNvcnRpbmciIGhlIHVzZWQsIHdoaWNoIGludm9sdmVzIGlkZW50aWZ5aW5nIHNtYWxsIGRpZmZlcmVuY2VzIGluIHRoZSBwYXR0ZXJuIG9uIHRoZSByZXZlcnNlIG9mIHBsYXlpbmcgY2FyZHMgYW5kIGV4cGxvaXRpbmcgdGhhdCBpbmZvcm1hdGlvbiB0byBpbmNyZWFzZSB0aGUgY2hhbmNlcyBvZiB3aW5uaW5nLCB3YXMgbm90IGEgbGVnaXRpbWF0ZSBzdHJhdGVneS4KV2hhdCBhYm91dCBhIG9mZmljZSB3b3JrZXIgcmVjZWl2aW5nIG5vIHBheWNoZWNrIGZvciBiZWluZyBvZmYgdGhlaXIgZ2FtZS4gCkNhbid0IG1pc3Mgbm90aWZpY2F0aW9ucz8gVGhpcyBmaXRuZXNzIHRyYWNrZXIgaGFzIHlvdSBjb3ZlcmVkLiAKSXQgaXMgcmVjb21tZW5kZWQgdG8gc3RhcnQgd2l0aCAzMDAgdGltZXMgdGhlIGJpZyBiZXQuIEEgbG90IG9mIHBsYXllcnMgcGxheSBtdWNoIGJldHRlciB3aGVuIHRoZXkgaGF2ZSB0aGlzIGN1c2hpb24uIApZb3UgY2hlY2sgdGhlIGxpdmluZyByb29tIGFnYWluIGFuZCBzdGVwIGZ1cnRoZXIgaW50byB0aGUgcm9vbS4gWW91IGFyZSBzdXJlIHRoZSBvdGhlciBwZXJwZXRyYXRvciBoYXMgZmxlZCBub3cuIFlvdSByZW1lbWJlciB0aGF0IHRoZSBndW4gd2VudCBvZmYuIFlvdSBjaGVjayB5b3Vyc2VsZiB0byBzZWUgaWYgeW91IHdlcmUgaGl0LiBEb2Vzbid0IGxvb2sgbGlrZSBpdC4gWW91IHdhbGsgcXVpY2tseSBiYWNrIHRvIHRoZSBmb3JtIG9mIHRoZSBtYW4gb24geW91ciBoYWxsd2F5IGZsb29yLgpXZSBoYXZlIDk5IHNsb3QgbWFjaGluZXMsIDIgQmxhY2tqYWNrIHRhYmxlcywgMSBwb2tlciB0YWJsZSBhbmQgMSAxIGFybWVkIGJhbmRpdCBzbG90IG1hY2hpbmUgYXZhaWxhYmxlIGZvciB5b3VyIGZ1bi5Fc3RhYmxpc2hlZCBpbiAxOTc5IHRoZSBTZWFyY2hsaWdodCBOdWdnZXQgQ2FzaW5vIHdhcyBhIGRyZWFtIGNvbWUgdHJ1ZSBmb3IgV2FycmVuIGFuZCBWZXJsaWUgRG9pbmcuIApDb250ZW50IG9sZGVyIHRoYW4gNiBtb250aHMgbXVzdCBoYXZlIFttb250aCwgeWVhcl0gaW4gdGhlIHRpdGxlClRoZXJlIHdlcmUgZWFybHkgcGVvcGxlIHdobyBiZWxpZXZlZCBpbiB0aGUgbmVidWxhZSBiZWluZyBvdXRzaWRlIG91ciBnYWxheHkgKGxpa2UgS2FudCkgYnV0IHRoZSBlbXBpcmljYWwgZXZpZGVuY2UgZGlkbiBwcmVzZW50IHVudGlsIHRoZSAyMCBtb3N0bHkgaW4gdGhlIHdvcmsgb2YgRWR3aW4gSHViYmxlLiBIZSB3b3VsZCBmaW5kIHRoYXQgdmFyaWFibGUgc3RhcnMgaW4gQW5kcm9tZWRhIHdlcmUgYW4gb3JkZXIgb2YgbWFnbml0dWRlIGZ1cnRoZXIgYXdheSB0aGFuIHRoZSBncmVhdGVzdCBkaXN0IGFudCBvZiB0aGUgZnVydGhlc3Qgc3RhciBpbiB0aGUgTWlsa3kgV2F5LCBhbmQgc28gZGV0ZXJtaW5lZCB0aGF0IEFuZHJvbWVkaWEgd2FzIGEgZ2FsYXh5IHVudG8gaXRzZWxmLCBhbmQgbm90IHdpdGhpbiBvdXIgb3duLiAKSXQgYSBiaXQgdHJpY2t5IHRvIG1vdmUgYXJvdW5kIHRoZSBhcmVhIHRvIGdldCB0aGUgY2hlc3RzIHVudGlsIHlvdSBpbnRvIHRoZSA0MHMsIHRob3VnaC4gCjMgQXMgYW4gYXNpZGUsIHRoZSBjb3VydCBvYnNlcnZlcyB0aGF0IHRoZSBsaXRpZ2F0aW9uIG9mIHRoaXMgbWF0dGVyIHdpbGwgYmUgYXMgZXhwZW5zaXZlIGFzIHRoZSBwYXJ0aWVzIGNob29zZSB0byBtYWtlIGl0LiAKSWYgYSBkdWRlIHdlYXJzIGxvbmcgYm94ZXJzIEkgbW92ZSB0aGVtIHVwIGEgYml0IGJ1dCBub3QgbXVjaC4gSWYgeW91IHdhbnRpbmcgYWxvdCBvZiB0aGlnaCBhbmQgaGlwIHdvcmsgYW5kIHlvdSBsZWF2ZSBib3hlcnMgb24geW91IGtpbmRhIHNlbmRpbmcgYSBtaXhlZCBtZXNzYWdlIHRvIHRoZSB0aGVyYXBpc3QuIFRoYXQgd2hlbiB5b3UgZ2V0IGJydWlzaW5nIGFuZCBzd2VsbGluZy4gCkkgZG9uJ3QgdGhpbmsgWVdCVEEgaWYgeW91IGhhZCBhIGNhbG0gY29udmVyc2F0aW9uIGV4cHJlc3NpbmcgeW91ciBjb25jZXJucyBhYm91dCBoZXIgZXNzZW50aWFsbHkgYmVjb21pbmcgYSBwYXJ0IHRpbWUgY2FyZWdpdmVyIHRvIHRoaXMgY2hpbGQgYW5kIG1vdmluZyBpbiB3aXRoIGhlciBCRiB3aGlsZSBzaGUncyBzdGlsbCBzbyB5b3VuZyBhbmQgc28gcXVpY2tseSAgIGJ1dCBpZiBzaGVzIHRob3VnaHQgdGhyb3VnaCBhbGwgdGhlIHJhbWlmaWNhdGlvbnMgeW91IGhhdmUgdG8gcmVzcGVjdCBoZXIgZGVjaXNpb24uIEkgZG8gdGhpbmsgWVdCVEEgZm9yIHRhbGtpbmcgYWJvdXQgaGVyIGJlaW5nIHNlY29uZCBmaWRkbGUgb3IgaGVyIG5vdCB3YW50aW5nIGNoaWxkcmVuICAgeW91IHJlYWxseSBkb24ndCBrbm93IHdoYXQgdGhleSd2ZSBkaXNjdXNzZWQgYW5kIHBsZW50eSBvZiBwZW9wbGUgaGF2ZSBhd2Vzb21lIHJlbGF0aW9uc2hpcHMgd2l0aCBwZW9wbGUgd2hvIGhhdmUgY2hpbGRyZW4gZnJvbSBwcmlvciByZWxhdGlvbnNoaXBzLiAKTGVzIHBlcnNvbm5lcyBlbiBzdXJwb2lkcyBzb250IHJhcmVzICBuZSBwYXMgdHJlIGNvbnNjaWVudGVzIGRlIGxldXIgc2l0dWF0aW9uIGNvcnBvcmVsbGUgZXQsIHRycyBzb3V2ZW50LCBlbGxlcyBlbiBzb3VmZnJlbnQuIEVsbGVzIHZpdmVudCBkYW5zIHVuIGVudmlyb25uZW1lbnQgbWFqb3JpdGFpcmVtZW50IGhvc3RpbGUsIHNhbnMgY29tcHRlciBsZXMgZGlmZmljdWx0cyAgcydoYWJpbGxlciwgbCdpbmNvbmZvcnQgcGh5c2lxdWUuIE1haXMgZWxsZXMgbidvbnQgcGFzIGZvcmNtZW50IGRhdmFudGFnZSBkZSBwcm9ibG1lcyBkZSBzYW50IHF1ZSBsZXMgYXV0cmVzIDogbGV1cnMgYW5hbHlzZXMgZGUgc2FuZyBzb250IHNvdXZlbnQgaW1wZWNjYWJsZXMuIEFsb3JzIHBvdXJxdW9pIGxlcyBlbm51eWVyIGF2ZWMgbGV1ciBwb2lkcyBxdWFuZCBlbGxlcyBuZSBjb25zdWx0ZW50IHBhcyBwb3VyIGNlbGEgPwpDYW4gZXZlbiBnbyB0byBCYXJjZWxvbmEgY2F1c2UgdGhlcmUgd2lsbCBiZSByaW90aW5nICh0aGF0IHBhcnQgb2YgdGhlIGNvdW50cnkgaXMgdHJ5aW5nIHRvIHNlcGFyYXRlIGZyb20gU3BhaW4pLiAKTU9USEVSRlVDS0VSIHUKVGhlIG1vcmUgeW91IHNpdCBvciBzbGVlcCB3aXRoIHlvdXIga25lZXMgcHVsbGVkIHVwLCB0aGUgc2hvcnRlciBhbmQgdGlnaHRlciB0aGUgbXVzY2xlcyBnZXQuIFdoaWxlIGl0IGlzIGhhcmQgdG8gbWFzc2FnZSB5b3VyIG93biBoaXAgZmxleG9ycywgc3RyZXRjaGluZyB0aGVtIG9mdGVuIHJlbGlldmVzIHRoZSBwYWluLiAKRVJSRVVSICEgQmllbiBhdSBjb250cmFpcmUgISBVbmUgYm9ubmUgY29ubmFpc3NhbmNlIGRlIGxhIHRyYWR1Y3Rpb24gZnJhbmFpc2UgZHUgTm91dmVhdSBUZXN0YW1lbnQgZXN0IHZpZGVtbWVudCB1biBhdG91dCBlc3NlbnRpZWwgcG91ciBsJ3R1ZGUgZHUgdGV4dGUgZ3JlYy4gRGUgcGx1cywgZGVzIHBhc3NhZ2VzIHF1aSBlbiB0cmFkdWN0aW9uIHNlbWJsZW50IGRpZmZpY2lsZXMsIGFwcGFyYWlzc2VudCBzb3V2ZW50LCBlbiBncmVjLCBwbHVzIGZhY2lsZW1lbnQgY29tcHJoZW5zaWJsZXMuIApJZiB5b3UgYmV0IDcuMDAsIGhvd2V2ZXIsIGFuZCB0aGUgdmlsbGFpbiBjYWxscywgdGhlcmUgaXMgMjkuMDAgaW4gdGhlIHBvdCwgYW5kIHRoZSByYWtlIGlzIDEzLjc5JS4gSW4gYm90aCBjYXNlcywgbGV0IHNheSB0aGUgVHVybiBjYXJkIGNvbWVzIG91dCwgeW91IGJldCwgYW5kIHlvdXIgb3Bwb25lbnQgZm9sZHMuIE92ZXIgdGhlIGxvbmcgcnVuLCB0aGF0IHJvdWdobHkgMiAxLzIlIGRpZmZlcmVuY2UgaW4gcmFrZSBiZXR3ZWVuIGRyYWdnaW5nIGEgMjkuMDAgcG90LCBhbmQgZHJhZ2dpbmcgYSAzMS4wMCBwb3QgYWRkcyB1cCwgYW5kIG1vc3QgcGxheWVycyBuZXZlciBldmVuIGNvbnNpZGVyIGl0Li4gCkFsbCBvZiB0aGVzZSBhbnN3ZXJzIGFyZSB0cnVlIGlkZWFsbHkgYW5kIGZvciBhIHNpZ25pZmljYW50IHBvcnRpb24gb2YgcHJvIHBsYXllcnMuIEJ1dCB0aGlzIGlzIGxpa2UgYXNraW5nIGFib3V0IHdoZXRoZXIgZXZlcnlvbmUgd2hvIGNvb2tzIGZvb2QgbWFrZXMgZ29vZCBmb29kLgpBZnRlciBkdWUgZGlsaWdlbmNlIGR1cmluZyB3aGljaCB3ZSBkaXNjb3ZlcmVkIGVhcmxpZXIgcmV2ZW51ZXMgd2VyZSBleGFjdGx5IHdoYXQgaGUgc3RhdGVkIEkgdG9wcGVkIHVwIHRoZSBlcXVpdHkgaW52ZXN0bWVudCBhbmQgb3BlcmF0aW5nIGxpbmUgYnkgJDMwLDAwMC4KT25seSBhaXIgSSBjYW4gaW1tZWRpYXRlbHkgdGhpbmsgb2YgdGhhdCBtaWdodCBibHVmZiB0aGlzIHNwb3QgaXMgQWhKeCBvciBBaFR4IGFuZCBtYXliZSBKaFR4IHdoaWNoIGNvdWxkIHJhaXNlIHlvdSBvbiB0aGUgdHVybiBidXQgdGhlIG5mZCtHUyBoYXZlIDEyIG91dHMgYW5kIEpoVHggaGFzIDE2LiBUaGlzIGlzIHRlcnJpYmxlIGZvciB5b3UgYmVjYXVzZSBpZiB5b3UgcmUgcmFpc2UgaGUgbWlnaHQgc3RpbGwgaGF2ZSB0aGUgZXF1aXR5IHRvIGNhbGwgcHJvZml0YWJseSBhbmQgaGFzIGFsbCB0aGUgb3RoZXIgaGFuZHMgdGhhdCBhcmUgZ29vZCB0byBzbmFwIHlvdSBvZmYgd2l0aC4gCkFoLCBidXQgSSB3YXMgZXZlciBzbyB5b3VuZyB3aGVuIFRydWUgU2xhbnQgZWRpdG9yIENvYXRlcyBCYXRlbWFuIGNhbGxlZCBtZSB1cCB0d28geWVhcnMgYWdvIGFuZCBzYWlkICJMaXN0ZW4sIHdlIGdvdCB0aGlzIGlkZWEuIiBjb3Vyc2UsIEkgZXZlciBzbyBtdWNoIG9sZGVyIG5vdyBhbmQgY2FuIHNlZSB0aGF0IHRoZSB3b3JsZCB3ZSBoYXZlIHdvbiBpcyBhIGJpZ2dlciBtZXNzIHRoYW4gSSBjb3VsZCBoYXZlIGV2ZXIgaW1hZ2luZWQuIEl0IGlzIGEgbWFwIG9mIHRoZSBsYXRlc3Qgdm90ZSBvbiBtaWxpdGFyeSBzcGVuZGluZyBpbiBBZmdoYW5pc3Rhbi4gCkplIG0nZWZmb3JjZXJhaSBkJ2VuIHB1YmxpZXIgdW4gY29tcHRlIHJlbmR1IHZvaXIgdW4gcnN1bSBkZSBjZXJ0YWlucyBwYXNzYWdlcy4gSWwgcydhZ2l0IGQndW5lIGRvY3VtZW50YXRpb24gdW5pcXVlIHN1ciBsZXMgY28gaW5mZWN0aW9ucywgbGEgY2xpbmlxdWUgZXQgbGVzIGV4YW1lbnMgZGUgbGFib3JhdG9pcmUgZGlzcG9uYmlibGVzLiBDZXQgb3V2cmFnZSB0cnMgZGVuc2Ugc291ZmZyZSAgbW9uIGF2aXMgZCd1biBkZmF1dCBkYW5zIHNhIHByc2VudGF0aW9uIHBldSBwZGFnb2dpcXVlLCBsYSByZGFjdGlvbiBlc3QgdHJvcCB2ZXJiZXVzZSBldCBvbiBtYW5xdWUgZGUgYmVhdWNvdXAgZGUgc291cyB0aXRyZXMgb3UgZGUgc291cyBydWJyaXF1ZXMgZXQgZG9uYyBkJ2FydGljdWxhdGlvbnMgcG91dmFudCBzZXJ2aXIgZGUgcmVwcmVzIGdyYXBoaXF1ZXMuIApUaGUgYmFycyBoZWxkIHRoZSBtZW1icmFuZSBpbiBwbGFjZS4gCjE4IGRjLiAKQWN0dWFsbHksIGl0IG1lYW5zIHRoYXQgdGhlIGNvbnN0cnVjdGlvbiBpbmR1c3RyeSBkb2VzbiBsaWtlIHRvIHBheSBmb3IgYmFzaWMgYnVpbGRpbmcgbWF0ZXJpYWxzLCBwbHVzIGNvbXBldGlvbiBkcml2ZXMgZG93biBwcmljZSBvbiB0aGUgbWF0ZXJpYWxzLiBVbmZvcnR1bmF0ZWx5LCB0aG9zZSBtYXRlcmlhbHMgcmVxdWlyZSB0ZXN0aW5nIGZvciB0aGllciBpbnRlbmRlZCBwdXJwb3NlcywgYnV0IG5vIG9uZSB3YW50cyB0byBwYXkgZm9yIHRoZW0gKHRoZSB0ZXN0aW5nLCBvciB0aGUgbWF0ZXJpYWxzIGZvciB0aGF0IG1hdHRlcikuCkkgZGlkbiB0aGluayBoZSB3b3VsZCBhY3R1YWxseSBzaG93IHVwLiBIZSBkaWQuIApJdCBub3QgbWVhbCBwcmVwLCBidXQgaXQgZ3JlYXQgZm9yIG5pZ2h0cyB3aGVuIHlvdSBqdXN0IGNhbiBzdG9tYWNoIHRoZSBpZGVhIG9mIHlvdXIgcHJlcCBvciBuZWVkIHRvIHVzZSB1cCB2ZWdnaWVzLiAKTG9vayBhdCB0aGUgZmlyc3QgdGhyZWUgY2hvcmRzOiB0aGF0IHBhdHRlcm4gb2YgdGhlIHJvb3QsIGZpZnRoLCBhbmQgdGVudGggcGxhbmluZyBhcm91bmQgY2hyb21hdGljYWxseSBtYWtlcyB1cCA1MCUgb2YgdGhlIHNvbmcuLiAKRXZlbiBhZnRlciB0aGUgaW50ZXJ2ZW50aW9uIGJ5IHRoZSBjb3VydCBhIGZldyB5ZWFycyBiYWNrLCBTaW5naCBmYWlsZWQgdG8gZ2V0IGhpcyBzaG9wIGJhY2sgdGlsbCBkYXRlLiBTaW5naCBjbGFpbXMgTXVubmEgaXMgYmVpbmcgcHJvdGVjdGVkIGJ5IEthbGdpLiBUaHVzLCBTaW5naCBoYXMgbm93IGFwcHJvYWNoZWQgdGhlIGNvcHMgc2Vla2luZyBoZWxwIGluIGdldHRpbmcgaGlzIHNob3AgYmFjayBmcm9tIEthbGdpIGFpZGUuLiAKRm9yIGEgbnVtYmVyIG9mIHllYXJzIEkgd2FzIHRoZSBmb3VuZGVyLCBhcmNoYmlzaG9wIGFuZCBwb3BlIG9mIFRoZSBGaXJzdCBDaHVyY2ggb2YgQWdub3N0aWNpc20gd2l0aCB0aGUgb2ZmaWNpYWwgdGl0bGUgIktlZXBlciBvZiBUaGUgT25seSBUcnVlIEZhaXRoOiBBZ25vc3RpY2lzbSIuIEJ1dCByZWNlbnRseSBJIGdhdmUgdGhhdCB1cCBzaW5jZSB0b28gbWFueSBtaXN1bmRlcnN0b29kIHRoZSBtZWFuaW5nIG9mIGFnbm9zdGljaXNtIGFuZCBJIGZlYXJlZCBoZXJldGljcyB3b3VsZCBpbnN0aWdhdGUgYSBzcGxpdHRpbmcgb2YgdGhlIGNodXJjaC4uIApEb2VzbiBpdCBnZXQgY29uZnVzaW5nPykgVGhhdCBkb2VzbiBjb3VudCB0aGUgc3RyZWV0IGRvZ3MsIHdpbGQgZG9ncyBhbmQgc2hlbHRlciBkb2dzIHRoYXQgYXJlIGNvbnNwaXJpbmcgdG8gZ2V0IGEgbGVnIHVwIG9uIGh1bWFuaXR5Li4gClNob3ZlIGNhbGxlZCB3aGVuIHlvdSd2ZSBwbGF5ZWQgdHdvIGhhbmRzIGluIGFuIGhvdXIgYW5kIGEgaGFsZi4gCkFmdGVyIHRoZSBleGVyY2lzZSBpbiBmZWVkIHRoZSBmYWl0aGZ1bCBvcmF0b3J5LCBOb3RsZXkgZXhwbGFpbnMgaGVyc2VsZiB0byB0aGUgbmV3c2hvdW5kcy4KQmVjYXVzZSB5b3UgYXJlIGNyZWF0aW5nIGEgY29sbGFnZSBvZiBtYW55IHBpY3R1cmVzLCB5b3UgY2FuIGFmZm9yZCB0byBpbmNsdWRlIHNvbWUgYmFja2dyb3VuZCBvciBkZXRhaWwgcGljdHVyZXMuLiAKSSBzYXkgSSBoYXZlIGFuIGFzc2lzdGFudCAob24gaGVyZSBmb3IgYnVzaW5lc3MpIGFuZCB0aGF0IHNoZSBjYW4gdHJhbnNsYXRlIGZvciB0aGUgcG9saWNlLi4gCkFydGlzdCBaZWZyZXkgVGhyb3dlbGwncyBuZXcgcGVyZm9ybWFuY2UgcGllY2UgJ0knbGwgUmFpc2UgWW91IE9uZS4nIHdpbGwgZG8gYSB3aG9sZSBsb3Qgb2YgdW52ZWlsaW5nLCBhcyA0OCBwYXJ0aWNpcGFudHMgZW5nYWdlIGluIGEgd2VlayBsb25nIHN0cmlwIHBva2VyIHRvdXJuYW1lbnQgaW4gZnJvbnQgb2YgYSBnbGFzcyB3aW5kb3cgaW4gVHJpQmVDYSwgTmV3IFlvcmsuLiAKUmFnbmF6ZXJvIGlzIG15IGZhdm9yaXRlIFhZWiBzbyBJIG1hZGUgYSBSYWduYXplcm8gdHVyYm8gZGVjayB0aGF0IGZvY3VzZWQgb24gbWFraW5nIGhpbSwgcmVkdWNpbmcgb3Bwb3NpbmcgbW9uc3RlcnMgYXR0YWNrcywga2lsbGluZyB0aGVtLCBhbmQgZHJhd2luZy4gCklkayB3aG8gZG93bnZvdGVkIHlvdSwgYnV0IHdoZW4gc2hlIHZpc2l0ZWQgc2hlIGp1c3QgbWFkZSBoZXIgdXN1YWwgZXhjdXNlcyBhYm91dCB3aHkgc2hlIHRvbyBidXN5IHRvIGNsZWFuIHVwIHRoZSBtZXNzIGluIGhlciBob3VzZS4gSSBuZXZlciBhY3R1YWxseSBtZXQgYW55b25lIGluIHBlcnNvbiBJIGhhZCBzb21ldGhpbmcgbGlrZSB0aGlzIHNvcnQgb2YgaW4gY29tbW9uIHdpdGguIApUaGVuIHdpdGggb25lIG1vdGlvbiB5b3UgZ29pbmcgdG8gcHVsbCB0aGUgeW95byBpbnRvIHRoZSBhaXIsIGFib3V0IHBhcmFsbGVsIHdpdGggeW91ciBmaW5nZXIsIG9yIG1heWJlIGEgbGl0dGxlIGhpZ2hlciwgd2hpbGUgYWxzbyBzd2luZ2luZyB0aGUgc2xhY2sgc3RyaW5nIHRvd2FyZHMgeW91ciBub24gdGhyb3doYW5kLiAKVGhhdCBiZWNhdXNlIEx1bmQgaXMgbm90IHlvdXIgdHlwaWNhbCBiaWcgaGF0dGVkIHBpY2tlciBncmlubmVyLiBIZXJlIGhvdyBMdW5kIHBsYXlzIGJ5IGhpcyBvd24gcnVsZXM6LiAKWW91IGFzc3VtZSBteSBicmFpbiBpcyBmYXVsdHkgYW5kIGNvbmRlc2NlbmQgbWUgYWxsIGluIHRoZSBwcm9jZXNzLiAKTWJyNDAyIHUKSXQgc2hvd2VkIHRoYXQgZ2FtZXJzIHRydWx5IGFyZSB0aGUgb25lcyB0byBiZSBmZWFyZWQsIGFuZCB3aXRoIGFsbCBvZiBvdXIgcG93ZXJzIGNvbWJpbmVkLCB3ZSBsZXQgb3V0IG91ciBzY3JlYW0gb2Ygd2FyLCBhbmQgc3RyaWtlZCB2YXJpb3VzIGdhbWluZyBzdWJyZWRkaXRzLiAKT25jZSB5b3UgaGF2ZSBsZWFybmVkIGEgYml0IGFib3V0IHRoZSBoaXN0b3J5IG9mIHRoZSBjaGlwLCBpdCBpcyBpbXBvcnRhbnQgdG8gY29uc2lkZXIgdGhlIHZhbHVlIG9mIHRoZSBjaGlwcy4gClNvbWUgcG9rZXIgcGxheWVycyBjYW4gY2hvb3NlIHdpbGQgZ2FtZXMgd2hpbGUgb3RoZXJzIHdpbGwgZ28gZm9yIHRoZSBwYXNzaXZlIG9uZXMuIApUcmVsaXZpbmcgc2F5cy4gCk1vc3QgcGFydHkgcG9rZXIgc2l0ZXMgd2lsbCByZXF1aXJlIHlvdSB0byBmaWxsIHVwIGEgcmVnaXN0cmF0aW9uIGZvcm0uIApIYXZlIHNvbWUgYW50aSBpbmZsYW1tYXRvcnkgcGFpbiBraWxsZXJzIHJlYWR5LiBTdG9jayB1cCBvbiBpYnVwcm9mZW4gYmVmb3JlIHlvdSBnZXQgeW91ciBicmFjZXMuIFRoZSBkYXkgYWZ0ZXIgeW91IGdldCB5b3VyIGJyYWNlcywgeW91IHdpbGwgZmVlbCBwYWluIGJlY2F1c2Ugb2YgdGhlIGFkanVzdG1lbnQgeW91IHRlZXRoIGFyZSB1bmRlcmdvaW5nLiBJdCBtYXkgYmUgZGlmZmljdWx0IHRvIGVhdCBhbmQgeW91IHdpbGwgZmVlbCBkaXNjb21mb3J0LgpXb3csIHJlYWxseSBuaWNlIGFydGljbGUsIEkgcmVhbGx5IGxpa2UgUG9rZXIsIGl0J3Mgc3RyYXRlZ3ksIHRoZSBwYXRpZW5jZSBhbmQgZXZlcnl0aGluZyBlbHNlIGluIHRoZSBnYW1lLiBHb29kIGJyZWFrZG93biBvZiBkaWZmZXJlbnQgdHlwZXMgb2YgcGxheWVycy4gRXZlbiB0aG91Z2ggSSBwbGF5IG9ubHkgYWxtb3N0IGV4Y2x1c2l2ZWx5LCBJdHMgaW1wb3J0YW50IHRvIGtub3cgd2hvIHlvdXIgb3Bwb25lbnQgaXMuNyB5ZWFycyBhZ28KWW91IG1heSBoYXZlIGpvaW5lZCBpbiBpZ25vcmFuY2UgYnV0IEkgZG9uIHRoaW5rIHlvdSBzaG91bGQgcXVpdCBpbiBpZ25vcmFuY2UgZWl0aGVyLiAKVGhlIGxpZnQgd291bGQgYmUgc3Vic2lkaXplZC4gClRoZSBicmlnaHQsIGFpcnkgc3BhY2UgaXMgc3RvY2tlZCB3aXRoIGRpc3BlbnNlcnMgZm9yIG9pbHMsIHZpbmVnYXJzIGFuZCBzeXJ1cHMsIGFzIHdlbGwgYXMgYmlnIGdsYXNzIGphcnMgZmlsbGVkIHdpdGggZHJ5IGdvb2RzIHN1Y2ggYXMgYmVhbnMsIG51dHMsIGRyaWVkIGZydWl0IGFuZCBzcGljZXMuIApTcGVha2luZyBvZiBsaWVzIGFuZCBzdGF0aXN0aWNzLCBDTk4gcmVsZWFzZWQgYSBwb2xsIHRoYXQgc3VwcG9zZWRseSBzaG93cyBPYmFtYSBzdGFuZGluZyB3aXRoIHRoZSBBbWVyaWNhbiBwZW9wbGUgc2xpcHBpbmcgYnkgbW9zdCBtZWFzdXJlc1NldmVudHkgdHdvIHBlcmNlbnQgb2YgcGVvcGxlIHF1ZXN0aW9uZWQgaW4gYSBDTk4vT3BpbmlvbiBSZXNlYXJjaCBDb3JwLiBTdXJ2ZXkgcmVsZWFzZWQgVGh1cnNkYXkgYmVsaWV2ZSBPYmFtYSBpbnNwaXJlcyBjb25maWRlbmNlLiAKSGVyZSBhcmUgc29tZSB2aWRlb3MgYW5kIGxpbmtzIHRvIHRoZSB3ZWJzaXRlcyBvZiBteSBmcmllbmRzIGFuZCB0ZWFjaGVyc0kgZG8gTXkgbWFzc2FnZXMgb24gYSBzbGlkaW5nIHNjYWxlIGJhc2VkIG9uIHlvdXIgYWJpbGl0eSB0byBwYXkuIApXaGVuZXZlciBpIHRyYXZlbCB0byBzZWUgZnJpZW5kcyBvdXQgb2Ygc3RhdGUgdGhleSBhbHdheXMgd2FudCB0byBkcmFnIG1lIHRvIHNvbWUgcmVzdGF1cmFudC4gSSBoYXZlIGEgZGVjZW50IHJlcHV0YXRpb24gYXMgYSBjb29rLCBhbmQgZm9yIHNvbWUgcmVhc29uIHRoZXkgYWx3YXlzIHRoaW5rIHRoZXkgZm91bmQgYmVzdCBjYWp1biBmb29kIG91dHNpZGUgb2YgTG91aXNpYW5hLgpObyBvbmUgbW92ZWQsIG5vIG9uZSBldmVuIGNhbGxlZCB0byBjb21wbGFpbi4KIkhlIHNheXMgaGUgaXMgZ29pbmcgdG8gJ2NoZWNrIHVwJyBvbiB0aGUgcGxhY2UuIFdlIGFyZSB0cnlpbmcgdG8gY29udmluY2UgaGltIHRoaXMgaXMgYSBiYWQgaWRlYS4iIFNoZSBnb2VzIG9uIGFib3V0IGhpbSBhbmQgaG93IGlmIGhlIGtlZXBzIHRoaXMgdXAgd2Ugd2lsbCBoYXZlIHRvIGdvIHRvIGEgc2FmZSBob3VzZSBhZ2Fpbi4gClJpZ2h0IG5vdyBJIGNhbiBvbmx5IGZlZWwgaXQgd2hlbiBkb2luZyBhbmtsZSBjaXJjbGVzLiBJIGRvbid0IGZlZWwgYW55IHBhaW4gYXQgYWxsLCBtYXliZSBzb21lIHRlbmRlcm5lc3MuLiAKU3F1YXQ6IGNsZWFuIHdhbGtvdXQuIFRoZSBtaW51dGUgeW91IHNjcmV3IHlvdXIgZmVldCBpbnRvIHRoZSBncm91bmQgYW5kIGxvY2sgeW91ciBrbmVlcyBnaXZlIHlvdXJzZWxmIGEgc3F1YXQgY29tbWFuZCBpbiB5b3VyIGhlYWQgYW5kIG9uY2UgeW91IGZpbmlzaCBwYXVzZSBhdCB0aGUgdG9wLCBzYXkgInJhY2siIGFuZCBvbmx5IHdhbGsgYmFjayBpbiBhZnRlciB5b3UgZmluaXNoIHRoZSBzYXlpbmcgdGhlIHdob2xlIGNvbW1hbmQuCk92ZXJhbGwsIEkgdGhpbmsgdGhlc2UgY2hhbmdlcyBhcmUgcG9zaXRpdmUgYW5kIGEgc3RlcCBpbiB0aGUgcmlnaHQgZGlyZWN0aW9uLCBlc3BlY2lhbGx5IHRoZSBwdXJnZS9wdzpzIGNoYW5nZS4gVGhhdCBzYWlkLCBJIHRoaW5rIHNldmVyYWwgbW9yZSBjaGFuZ2VzIG5lZWQgdG8gYmUgbWFkZS4gClRoYW5rcywgYW5kIHdoYXQgSSBkaXNjdXNzZWQgaW4gbXkgYXJ0aWNsZSBpcyBub3QgdGhlIGRyb3BsZXRzIGZsb2F0aW5nIGluIHRoZSBhaXIsIGRyb3BsZXRzIGxhcmdlIGVub3VnaCB0byBjb250YWluIHRoZSB2aXJ1cyBhcmUgdG9vIGxhcmdlIHRvIGZsb2F0IGZvciB2ZXJ5IGxvbmcsIGFuZCBncmF2aXR5IHB1bGxzIHRoZW0gZG93bi4gClRoZXJlIHdhcyBhbiBvbGQgbWFuIGZpc2hpbmcgaW4gdGhlIGxha2UsIEkgd2F2ZWQsIGhlIHdhdmVkIGJhY2suIApUaGUgd29yc3QgcGFydCwgdG8gbWUsIGlzIHRoYXQgaXQgZW5jb3VyYWdlcyB0aGUgcG9hY2hpbmcgb2Ygb3VyIHN0b3JpZXMgYW5kIHRyb2xscyBhbmQgbWFrZXMgdGhlIHN1YiBhIGxlc3Mgc2FmZSBwbGFjZSB0byBiZS4gCkdyZWVuLCBILiBCYWxsLCBSLiBNY0NveSwgRG9uYWxkIFJ5YW4sIExhd3JlbmNlIENhbm5pZmYsIFJvZ2VyIEt1ZWhuZSwgRWxsaXMgQ3Jvc3MsIEthcmwgUGVhcnNvbiwgRGFsZSBBdXN0aW4sIFZlcmxhbmQgSHVmZmFyLCBSb2IgJyBlcnQgTWNLaW5uZXksIFBhdWxpbmUgTWNHYXJ2aWUsIEVtZXJ5IE5lbHNvbiwgUGhpbGlwIEZlcm4gcml0ZSwgR2VyYWxkIEhvbG1lcywgSGFyb2xkIEJhVSwgUm9nZXIgQnJ5ZGVuLiBHcmFudCAgIE5vdi4gMTY7IERyLiBKLiBELiBTY2hyb2VkZXIsIHBoeXNpY2lhbjsgSWRhIEh1YmJhcmQsIFBhdHJpY2lhIEhlbm5pbmcsIG51cnNlczsgTW1lcywgRS4gCldoZXRoZXIgaXQgYmUgR29kaXZhIHRydWZmbGVzLCBmbG93ZXJzLCBhIGhvdCBsaXR0bGUgZHJlc3Mgb3IgdGhvc2UgcmVkIHN1ZWRlIE1hbm9sbydzIChsaWtlIHRoZSBvbmVzIHRoYXQgcmVzdCBpbiBteSBjbG9zZXQsIHNpZ2gpLCBidXkgaXQsIGNoZXJpc2ggaXQsIHlvdSBkZXNlcnZlIGl0LCBMYWR5LiAKV2hhdCB5b3Ugc2VlIGluIHRoZSBtZWRpYSBpcyBhIHN0YXRpc3RpY2FsIG1pc2ludGVycHJldGF0aW9uIG9mIHRoaXMgcGhlbm9tZW5vbi4gQWRkaXRpb25hbGx5LCBpdCBzaG93cyB1cyB0aGF0IHRoZXJlIGlzIHN0aWxsIGEgaHVnZSBpc3N1ZS4gV2h5IGFyZSBtZW4gbW9yZSBsaWtlbHkgdG8gYmUgYW4gZXhlY3V0aXZlPyBXaHkgYXJlbid0IHdvbWVuIG1vdmluZyB1cD8gU2lnbnMgcG9pbnQgdG8gaXQgYmVpbmcgYSBjb21iaW5hdGlvbiBvZiBzZXhpc20gQU5EIGN1bHR1cmFsIG5vcm1zLiAKQW5kIGZhYnJpYyBzb2Z0bmVycyBhZGQgYSBmbGFtbWlibGUgdG8geW91ciBjbG90aGluZy4gClRoZSBib3R0b20gbGluZSBoZXJlIGlzIHRoYXQgdGhpcyBpcyBhcyBnb29kIGFzIGFueSBib29rIG9mIHRoZSBoaXN0b3J5IG9mIGZsdXhpb25zIG9yIHRoZSBtYWtpbmcgb2YgdGhlIGF0b21pYyBib21iIG9yIGNvb2tpbmcgdXAgYSB2aXJ1cywgZ2l2ZW4gdGhlIHBhcmFtZXRlcnMgYW5kIGxpbWl0YXRpb25zIG9mIGl0cyBzdWJqZWN0LiBJdCB3YXMgY2FsbGVkIFN0dW1wIEJsYXN0aW5nLiAKIk5vIHBvc3RzIGFib3V0IGNlbGVicml0aWVzIG9yIHBlb3BsZSBpbiB0aGUgbWVkaWEgdGhhdCB5b3UgZG8gbm90IGtub3cgcGVyc29uYWxseS4gRGlzY3Vzc2lvbnMgYWJvdXQgdGhlIHBvc3NpYmxlIG5hcmNpc3Npc3RpYyB0cmFpdHMgb2YgY2VsZWJyaXRpZXMsIHRoYXQgbmFzdHkgbGFkeSB5b3UgcmVhZCBhYm91dCBpbiBhbiBhcnRpY2xlLCBvciB0aGF0IHlvdSBzYXcgaW4gU3RhcmJ1Y2tzIHRoYXQgb25lIHRpbWUgY2FuIGJlIHBvc3RlZCB0byAvci9uYXJjc2ludGhld2lsZC4gL3IvcmFpc2VkYnluYXJjaXNzaXN0cyBpcyBmb3IgcG9zdHMgYWJvdXQgYWJ1c2VycyB0aGF0IHlvdSBrbm93IHBlcnNvbmFsbHkgYW5kIHRoYXQgYXJlIGFidXNpbmcgeW91IHBlcnNvbmFsbHkuIgpBIG5ldyBicmVhc3QgcmVjb25zdHJ1Y3RpdmUgcHJvZ3JhbSBhdCBXaW5kc29yIFJlZ2lvbmFsIEhvc3BpdGFsIGhhcyBlbGltaW5hdGVkIHRoZSBuZWVkIHRvIHRyYXZlbCB0byBMb25kb24gb3IgVG9yb250byBmb3IgdGhlIHN1cmdlcnkgYW5kIGZpbmFsbHkgZ2l2ZW4gTW9uYWdoYW4gY2xvc3VyZSB0byBhIGRpZmZpY3VsdCBqb3VybmV5LgpUaGVyZSBhcmUgbWFueSBnb29kIG9uZXMgY3VycmVudGx5IGZvciBzYWxlLi4gClRoaXMgY2FuIGJlIGEgcGFydGljdWxhciBwcm9ibGVtIGZvciBibGFjayBhbmQgbWl4ZWQgcmFjZSB3b21lbiB3aG8gbWF5IGhhdmUgZXhwZXJpZW5jZWQgcHJlanVkaWNlIGJhc2VkIG9uIHRoZWlyIEFmcm8gaGFpci4KQW55d2F5cywgSSBoYXZlIG5vIGlkZWEgaWYgaGUgaXMgYmVpbmcgc2VyaW91cyBidXQgaGUgc2VlbWVkIHByZXR0eSBoZWxsIGJlbnQgb24gdGhlIGV4cGVyaWVuY2UgaGFoYWhhaGhhCkhlIHdhcyB2b2ljZWQgYnkgUGludG8gQ29sdmlnLCB3aG8gYWxzbyB2b2ljZWQgTXVuY2hraW5zIGluIFRoZSBXaXphcmQgb2YgT3ogYW5kIFNsZWVweSBhbmQgR3J1bXB5IGluIFNub3cgV2hpdGUgYW5kIHRoZSBTZXZlbiBEd2FyZnMuIApXaGV0aGVyIHlvdSBsaWtlIGl0IG9yIG5vdCwgaXQgY2FuIGJlIHNlZW4gYXMgYXR0ZW1wdGVkIG11cmRlci4uIApNeSBkYXVnaHRlciBhY3R1YWxseSBjYW1lIHVwIHdpdGggaXQgd2hlbiBzaGUgd2FzIGFib3V0IDggOSB5ZWFycyBvbGQuIApBbW9uZyB0aGUgY3JldywgZGF0aW5nIGlzIG5vdCBqdXN0IGFsbG93ZWQgYnV0IHRhY2l0bHkgZW5jb3VyYWdlZCAgIHRoZXkgbGl2ZSBvbmJvYXJkIHRocm91Z2ggdGhlIGVudGlyZXR5IG9mIHRoZWlyIGNvbnRyYWN0IHdpdGhvdXQgZGF5cyBvZmYsIG9mdGVuIDEwIG1vbnRocyBhIHllYXIuIFRoZXkgaGF2ZSB0aGVpciBvd24gY2FsZW5kYXIgb2YgZGFpbHkgZXZlbnRzIHRoYXQgcmFuZ2UgZnJvbSBrYXJhb2tlIHNlc3Npb25zIHRvIHBva2VyIGdhbWVzIGFuZCBmb3JlaWduIGxhbmd1YWdlIGNsYXNzZXMuIEFuZCBzaW5jZSBXaSBGaSBpcyBwcmljZXksIHJvbWFuY2UgaXMgdmVyeSBtdWNoIGFuYWxvZy4uIApCdXQgaXQgaW1wb3J0YW50IHRoYXQgdGhpcyBkb2VzIG5vdCBkZXRyYWN0IGZyb20gd2hhdCBpcyBhIGNydWNpYWwgZGViYXRlIGZvciBBZnJpY2FucyBhbmQgdGhlIGludGVybmF0aW9uYWwgY29tbXVuaXR5LkJCQyBhcG9sb2dpc2VzIGZvciAnU2hvdWxkIGdheXMgYmUgZXhlY3V0ZWQ/JyBkZWJhdGUgICBmcm9tIFBpbmsgTmV3cyAgIGFsbCB0aGUgbGF0ZXN0IGdheSBuZXdzIGZyb20gdGhlIGdheSBjb21tdW5pdHkgICBQaW5rIE5ld3MuT2J2aW91c2x5IG1hbnkgcGVvcGxlIHRob3VnaHQgZGViYXRpbmcgd2hldGhlciBob21vcyBzaG91bGQgYmUga2lsbGVkIGluIFVnYW5kYSB3YXMgYSBiaXQgbGlrZSBkZWJhdGluZyB3aGV0aGVyIEpld3Mgc2hvdWxkIGJlIGtpbGxlZCBpbiBOYXppIEdlcm1hbnkuIEJ1dCBpdCBnb3QgbWUgdGhpbmtpbmcgYWJvdXQgb3RoZXIgcGVvcGxlIHdlIGNvdWxkIGRlYmF0ZSBraWxsaW5nLiBMaWtlU2hvdWxkIHdvbWVuIGxpdmluZyB1bmRlciB0aGUgVGFsaWJhbiBiZSBzdG9uZWQgdG8gZGVhdGggZm9yIGJyZWFraW5nIFNoYXJpYSBsYXc/IFllcyBvciBubz9TaG91bGQgc3VzcGVjdGVkIHRlcnJvcmlzdHMgYmUgdG9ydHVyZWQ/IFdoYXQgYWJvdXQgY29udmljdGVkIG9uZXM/IFllcyBvciBuby5JIHRoaW5rIGl0IGNsZWFyIHdoZXJlIHRoaXMgaXMgZ29pbmcuIApBIGdyZWF0IHByb2dyYW0uIApTcGVha2luZyBpbiBmcm9udCBvZiB0aGUgY3Jvd2QgYXQgdGhlIGV2ZW50LCBJbnRlcmltIFBlZWwgUmVnaW9uYWwgUG9saWNlIENoaWVmIENocmlzIE1jQ29yZCByZWFkIGEgc3RhdGVtZW50IG9uIGJlaGFsZiBvZiBSaXlhJ3MgbW90aGVyLCBQcml5YSBSYW1kaW4uCllvdXIgZXllcyB3aWxsIHJldHVybiB0byBub3JtYWwgaW4gYXBwcm94aW1hdGVseSA0IHRvIDYgaG91cnMuIApNYW55IGNsaWVudHMgY2xhaW0gc2V4IGFidXNlIGF0IE1hc3NhZ2UgRW52eSBzcGFzCkFyZSB0aGVyZSBhbnkgc3VydmV5cyB5b3UgY2FuIGNvbXBsZXRlIHRoYXQgZ2l2ZSB5b3UgWnluZ2EgcG9rZXIgY2hpcHM/CkkgYWx3YXlzIHRyYWluZWQgd2l0aCBhIGxvdCBvZiB3YXRlci4gU29tZSByYWNlcyBhcmUgcmVhbGx5IGdvb2QgYW5kIGhhdmUgd2F0ZXIgZXZlcnl3aGVyZS4gCk92ZXJ2aWV3IGZvciB1OGVSClNpbmNlIHRoZW4sIHRoZSBjb21taXNzaW9uIGhhcyBzb2xkIGNhbm5hYmlzIHByb2R1Y3RzIG9ubGluZSBhbmQgZGlzdHJpYnV0ZWQgdGhlbSB0byBwcml2YXRlIHJldGFpbGVycy4KSGF2ZW4ndCBoaXQgdXAgYSBNaW5uZWFwb2xpcyBWaW50YWdlIE1hcmtldCB5ZXQ/IEl0J3MgdGltZSEgVGhpcyBtb250aCdzIGV2ZW50IG9uY2UgYWdhaW4gdGFrZXMgcGxhY2UgYXQgdGhlIE1hY2hpbmUgU2hvcCBldmVudCBzcGFjZSwgYW5kIHRoaXMgU3VuZGF5IGl0IHdpbGwgYmUgZmlsbGVkIHdpdGggbG9jYWwgdmludGFnZSB2ZW5kb3JzIHJlYWR5IHRvIGRlbGlnaHQgYW5kIGluc3BpcmUgeW91IHdpdGggdGhlaXIgZmluZHMuIApJIGFjdHVhbGx5IGNoZWNrZWQgb3V0IGEgYml0IG9ubGluZSBhbmQgYXBwYXJlbnRseSB0aGUgNzkwMCBzZXJpZXMgaXMgKHdhcykgcmVhbGx5IGJhZCB3aXRoIHRoaXMuIEFwcGFyZW50bHkgd2hhdCB3YXMgaGFwcGVuaW5nIHdhcyB0aGF0IDc5MDAgY2FyZHMgd291bGQgdHVybiBvZmYgdGhlIG1vbml0b3IgbGlrZSBub3JtYWwgYW5kIHRoZW4gYWZ0ZXIgdGhleSBkaWQgaXQsIHRoZSBjYXJkIHdlbnQgaW50byBhIHJlYWxseSBsb3cgcG93ZXIgc3RhdGUgd2l0aCBwb3dlcnBsYXkuIFNvbWV0aW1lcyB0aG91Z2gsIHRoZSBjYXJkIHdlbnQgc28gbG93LCB0aGF0IGl0IGNvdWxkbid0IHJlY292ZXIgd2hlbiB5b3Ugd2FudGVkIHRvIGNvbWUgYmFjayBpbnRvIFdpbmRvd3Mgc28gaXQganVzdCBmcm96ZSB0aGUgZW50aXJlIGNvbXB1dGVyIGJlY2F1c2UgdGhlIGRyaXZlcnMgY3Jhc2hlZC4gSSB0aGluayB0aGF0cyBhbHNvIHdoYXRzIGJlZW4gaGFwcGVuaW5nIHdpdGggbWUuClRMO0RSIGNvIHdvcmtlciBjb21lcyB0byB3b3JrLCB3aGVuIGhlIHJlYWxseSBkb2Vzbid0IGFic29sdXRlbHkgaGF2ZSB0bywgd2hlbiBoZSdzIGdvdCBwYWlkIHBhdGVybml0eSBsZWF2ZSBmcm9tIGhpcyBmaXJlZmlnaHRlciBqb2IgdG8gYXZvaWQgYmVpbmcgaG9tZSB3aXRoIGhpcyBraWRzIGFuZCBoZWxwaW5nIHdpZmUuClJlcHVibGljYW4gUmVwLiBNYXJrIE1lYWRvd3Mgb2YgTm9ydGggQ2Fyb2xpbmEsIGEgVHJ1bXAgYWxseSB3aG8gaGFzIGJlZW4gaW52b2x2ZWQgaW4gdGhlIHRhbGtzLCBzYWlkIHRoZSBwcmVzaWRlbnQgImlzIHZlcnkgZmlybSBpbiBoaXMgcmVzb2x2ZSB0aGF0IHdlIG5lZWQgdG8gc2VjdXJlIG91ciBib3JkZXIuIiBIZSB0b2xkIENOTiwgIklmIHRoZXkgYmVsaWV2ZSB0aGF0IHRoaXMgcHJlc2lkZW50IGlzIGdvaW5nIHRvIHlpZWxkIG9uIHRoaXMgcGFydGljdWxhciBpc3N1ZSwgdGhleSdyZSBtaXNyZWFkaW5nIGhpbS4iLiAKT25lIHRoaW5nIHlvdSBoYXZlIHJpZ2h0IGlzIHRoYXQgd2UgYXJlbiBhZGRpbmcgYW55dGhpbmcgbmV3IHRvIHRoZSBkZWJhdGUgICBiZWNhdXNlIG5vdGhpbmcgaGFzIGNoYW5nZWQuIFRoZSBvbmx5IHRoaW5nIHdlIGRvIGlzIHJlbWluZCB5b3UgYWxsIHRoYXQgcGlja2luZyBhIHNpZGUganVzdCBicmluZ3MgeW91IGZ1cnRoZXIgZnJvbSBwZWFjZSBhbmQgdW5kZXJzdGFuZGluZy4KVGhlIHN0dWR5IGFsc28gZm91bmQgdGhhdCBmb3Igc21hbGwgc3Rha2VzIHBsYXllcnMsIHNtYWxsIHBhaXJzIChmcm9tIHR3b3MgdG8gc2V2ZW5zKSB3ZXJlIGFjdHVhbGx5IG1vcmUgdmFsdWFibGUgdGhhbiBtZWRpdW0gcGFpcnMgKGVpZ2h0cyB0aHJvdWdoIGphY2tzKS4KU3BhY2VfZ3J1bXBraW4gIDE4IHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCnMgZnV0dXJlIGFwcHJvYWNoZXMgYSBDbGFzaWNvIGNyb3Nzcm9hZHMKVGhlc2UgYXJlIHBva2VyIGdhbWVzIHBsYXllZCBieSB0aGUgZ292ZXJubWVudCBhbmQgdGhlIElNRiwgd2l0aCB0aGUgcGVvcGxlIGFuZCB0aGUgZWNvbm9teSBvZiBQYWtpc3RhbiBiZWluZyBsb3NlcnMuIFRoZSBJTUYgaXMgYW4gb3V0c2lkZSBwbGF5ZXIgYnV0IHN1Y2ggZGVjZXB0aW9uIGJ5IG91ciBvd24gZ292ZXJubWVudCwgZWxlY3RlZCB0byBpbXByb3ZlIGVjb25vbWljIGdvdmVybmFuY2UsIHRyYW5zcGFyZW5jeSBhbmQgYWNjb3VudGFiaWxpdHksIGlzIHVuZm9yZ2l2YWJsZS4gClRoZXNlIGJhdHRlcmllcyBkb24ndCBsYXN0IGZvcmV2ZXIsIGFueXdheS4gClRoZSBjb25zZXJ2YXRpdmUgS29jaCBicm90aGVycyB3ZXJlIGJlaGluZCBpdC4gU28gd2FzIHRoZSBsaWJlcmFsIENlbnRlciBmb3IgQW1lcmljYW4gUHJvZ3Jlc3MgYW5kIGp1c3QgYWJvdXQgZXZlcnkgYWR2b2NhY3kgZ3JvdXAgaW4gYmV0d2Vlbi4gUG9sbHMgc2hvdyB0aGUgY29uY2VwdCBoYXMgYnJvYWQgcHVibGljIHN1cHBvcnQuIApIZSBlYXJuZWQgcGVvcGxlIHJlc3BlY3QgYXMgYSBmaWdodGVyLCBidXQgYXMgYSBwZXJzb24gaGUgd2FzIGFsd2F5cyBhIGZ1Y2tpbmcgcHJpY2sgdW50aWwgcmVjZW50bHkgd2hlcmUgaGUgc2VlbXMgbGlrZSBhIHJlYWxseSBjaGlsbCBodW1ibGUgZ3V5LiAKV2hpbGUgdGhlIGluZmVjdGlvbiBzZXRzIGluLCB0aGUgZW5zdWluZyBmbGllcyBqb2luIGluIG9uIHRoZSBhY3QuIFRoZSBjaGlsZHJlbiBmaWdodCBvdmVyIHR1Z2dpbmcgdGhlIHRhbXBvbiBvdXQgb2YgdGhlaXIgTW90aGVyIGV5ZSB3aGlsZSB0aGUgRmF0aGVyIHBvcHMgdGhlIG90ZWhyIGV5ZSBvdXQgb2YgdGhlIGV5ZSBzb2NrZXQgYW5kIGZ1Y2tzIGl0LiBNZWFud2hpbGUsIHRoZSBNb3RoZXIgZmluZ2VyIGZ1Y2tzIHRoZSBraWRzIGFzc2VzIHdoaWxlIHRoZSBkb2cgYmFya3MgYWxvbmcgdG8gTW90aGVyIHNpbmdpbmcsICJHT2QgYmxlc3MgQW1lcmljYSIuIApZb3VyIGxldHRlciBtdXN0IGJlIHNpZ25lZCBhbmQgaW5jbHVkZSBhbGwgb2YgdGhlIGluZm9ybWF0aW9uIHJlcXVlc3RlZCBhYm92ZS4gKE9ubHkgeW91ciBuYW1lIGFuZCBuZWlnaGJvcmhvb2QgYXJlIHB1Ymxpc2hlZCB3aXRoIHRoZSBsZXR0ZXIuKSBMZXR0ZXJzIHNob3VsZCBiZSBhcyBicmllZiBhcyBwb3NzaWJsZTsgd2hpbGUgdGhleSBtYXkgZGlzY3VzcyBhbnkgdG9waWMgb2YgaW50ZXJlc3QgdG8gb3VyIHJlYWRlcnMsIHByaW9yaXR5IHdpbGwgYmUgZ2l2ZW4gdG8gbGV0dGVycyB0aGF0IHJlbGF0ZSB0byBzdG9yaWVzIGNvdmVyZWQgYnkgVGhlIEJyb29rbHluIFBhcGVyLi4gCk15IGh1c2JhbmQgZGlkIHRoaXMhIE9tZywgd2hlbiB3ZSBsaXZlZCB3aXRoIG15IG1vbSBzaGUgaGFkIHRoZSBtYWludGVuYW5jZSBtZW4gY29tZSBjaGVjayBvbiBoZXIgYXBhcnRtZW50LCB0byBtYWtlIHN1cmUgZXZlcnl0aGluZyBpcyB3b3JraW5nIGFuZCBzdHVmZi4gCklmIHlvdSBhdCBob21lIEkgd291bGQgaW1hZ2luZSB5b3VyIFNPIHdvbiBoYXZlIGFuIGlzc3VlIHRlbGxpbmcgeW91IGlmIHdoYXQgeW91IGRvaW5nIGlzIGh1cnRpbmcgdGhlbS5JZiB5b3Ugd29yayB0b28gZGVlcCBpbnRvIHRoZSBtdXNjbGUgeW91IGNhbiBicnVpc2UgdGhlbSBvciBjYXVzZSBtaW5vciB0aXNzdWUgZGFtYWdlLiBJZiB5b3Ugd29yayB0byBoYXJkIG92ZXIgdGhlIGtpZG5leXMgaXQgd2lsbCBodXJ0Lk5vdGhpbmcgcmVhbGx5IGxpZmUgdGhyZWF0ZW5pbmcuU28gd2F0Y2ggdGhlaXIgcG9zdHVyZSwgaWYgeW91IG5vdGljZSBhbnkgc3F1aXJtaW5nLCBicmVhdGggaG9sZGluZyBvciBzaGFycCBpbnRha2VzIG9mIGJyZWF0aCAoanVzdCB0aGluayBhYm91dCBhbGwgdGhlIHRoaW5ncyB5b3UgZG8gd2hlbiBzb21ldGhpbmcgaHVydHMgeW91KSBhZGp1c3QgeW91ciBwcmVzc3VyZS4gU29tZXRpbWVzIGp1c3QgdXNpbmcgYSBicm9hZGVyIHN1cmZhY2UgYXJlYSBsaWtlIHRoZSBwYWxtIG9mIHlvdXIgaGFuZCBpbnN0ZWFkIG9mIHRoZSB2ZXJ5IHRpcHMgb2YgeW91ciBmaW5nZXJzIHdpbGwgbWFrZSBhIGh1Z2UgZGlmZmVyZW5jZS5JIHdvdWxkIGF2b2lkIGFueXRoaW5nIHRyYWN0aW9uIGxpa2U7IGRvbiBwdWxsIG9uIGFueSBqb2ludHMuT3RoZXJ3aXNlIGhhdmUgYXR0ZXIhIEdldCB0aGUgU08gdG8gdHJlYXQgeW91IGFzIHdlbGwhIFRoZXJlIG5vIGJldHRlciB3YXkgdG8ga25vdyB3aGF0IGZlZWxzIGdvb2Qgb24gc29tZW9uZSBlbHNlIHRoZW4gdG8gaGF2ZSBpdCBkb25lIG9uIHlvdXJzZWxmIUlmIHRoZXJlIGlzIGFuIGFjdHVhbCBpbmp1cnkgb3IgcHJvYmxlbSBnbyBzZWUgYSB0aGVyYXBpc3QgYW5kIHRoZXkgd2lsbCBvZnRlbiBnaXZlIHlvdSBhZHZpY2Ugb24gaG93IHRvIHNlbGYgdHJlYXQgYmV0d2VlbiBhcHBvaW50bWVudHMgKGFuZCB5b3UgY2FuIHBpY2sgdXAgdGVjaG5pcXVlcyBmcm9tIHRoZW0gYXMgd2VsbClJIHN3ZWFyIGJ5IGJvdGggdGhlIHN0aWNrIGFuZCBmb2FtIHJvbGxlcnMuIApUaGlzIGVuZXJneSBhdHRhY2hlcyB0byB1cy4gCldoYXRldmVyIHRoZSBsYXN0IHNjZW5lIGlzLCBpdCBiZSBpbXByaW50ZWQgaW4gbXkgbWVtb3J5IGZvcmV2ZXIuIApCdXQgeW91IHdvbiBmaW5kIGFueXRoaW5nIHVuZGVyICJBcnQiLiAKUmVmZXIgdG8geW91ciBmcmFtZXMgdGhhdCB5b3UndmUgbGFpZCBvdXQgb24gdGhlIGZsb29yIGFzIHlvdXIgZ3VpZGUuWzVdLiAKIkFzIG9uZSBvZiB0aGUgd29ybGQncyBmYXN0ZXN0IGdyb3dpbmcgb3V0Ym91bmQgdHJhdmVsIG1hcmtldHMsIFJ1c3NpYSByZXByZXNlbnRzIGEgZ3JlYXQgb3Bwb3J0dW5pdHkgZm9yIHVzLCIgc2FpZCBGcml0cyB2YW4gUGFhc3NjaGVuLCBQcmVzaWRlbnQgYW5kIENFTywgU3Rhcndvb2QgSG90ZWxzIFJlc29ydHMuIApUaGUgdGhyZWUgc3BvcnQgYXRobGV0ZSBpcyBoYXZpbmcgYSBnb29kIHNlbmlvciB5ZWFyIHNvIGZhci4gT24gdGhlIHZvbGxleWJhbGwgY291cnQsIHNoZSBsZWQgdGhlIHRlYW0gd2l0aCA3MyBibG9ja3MgYW5kIHdhcyBzZWNvbmQgd2l0aCAxODcga2lsbHMsIGhlbHBpbmcgTWVhZCByZWFjaCB0aGUgQ2xhc3MgNEEgc3RhdGUgdG91cm5hbWVudC4gRHVyaW5nIHRoZSB3aW50ZXIsIHNoZSB3YXMgdGhlIGxlYWRpbmcgc2NvcmVyIGFuZCByZWJvdW5kZXIgZm9yIHRoZSBnaXJscyBiYXNrZXRiYWxsIHRlYW0sIHdobyBhbHNvIHJlYWNoZWQgdGhlIENsYXNzIDRBIHN0YXRlIHRvdXJuYW1lbnQuLiAKSWYgYW4gSW5kaWFuIGd1eSBrbm93cyBzb21ldGhpbmcgYWJvdXQgUG9saXNoIGN1bHR1cmUsIHRoaXMgZ2V0cyBieSBhdHRlbnRpb24uIApBbmQgTXJzLiBEYXZpZCBIYXcgYmFrICBlciwgb2YgV2lsbGlhbmlzcG9ydCwgTWFyeWxhbmQsIGFuZCBKYW1lcyBQb2tlciBhbmQgZGF1Z2h0ZXJzLCBQZWFybCBhbmQgVmlyZ2luaWEsIG9mIFdheW5lc2Jvcm8uIApUaGUgZm9yd2FyZCBzY29yZWQgMjggZ29hbHMgaW4gYSB0b3RhbCBvZiAzMCBhcHBlYXJhbmNlcyB0aGlzIHNlYXNvbiBmb3IgUFNHIGJlZm9yZSBzdXN0YWluaW5nIGhpcyBzZWFzb24gZW5kaW5nIGluanVyeSBhdCB0aGUgZW5kIG9mIEZlYnJ1YXJ5LCB3aGlsZSBzcGVjdWxhdGlvbiBpcyBtb3VudGluZyBvdmVyIGEgcG9zc2libGUgbW92ZSB0byBSZWFsIE1hZHJpZC4KVGhlIHByZW1pZXIgcGxlZGdlcyB0byBicmluZyBBbGJlcnRhIGludG8gdGhlIDIxc3QgY2VudHVyeSBvbiBsYWJvdXIgcmlnaHRzLCBhbW9uZyBvdGhlciBpdGVtcy4KV2hhdCB0aGUgZGVhbCB3aXRoIHRoaXM/IEl0IGFsc28gc3RhcnRlZCBoYXBwZW5pbmcgd2hlbiBJIGFwcGx5IGxpcXVpZCBmb3VuZGF0aW9uIG92ZXIgbW9pc3R1cml6ZXIgKHdoaWNoIGlzIGEgdHJpY2sgc29tZW9uZSB0YXVnaHQgbWUgYSBsb25nIHRpbWUgYWdvIHRvIGdldCBzbW9vdGggbG9va2luZyBza2luKS4gClRoZXkgaW52ZW50ZWQgbWVkaWNhdGlvbiB0byB0cmVhdCBoZXJwZXMgYW5kIHdoZW4gaXQgZmlyc3QgY2FtZSBvdXQsIGl0IGRpZG4gc2VsbCB2ZXJ5IHdlbGwgYXQgYWxsLCB1bnRpbCB0aGV5IGJhc2ljYWxseSBzdGFydGVkIGEgc21lYXIgY2FtcGFpZ24gc3RhdGluZyB0aGF0IHBlb3BsZSB3aG8gaGF2ZSBoZXJwZXMgYXJlIGRpcnR5IGFuZCBpbW1vcmFsIGFuZCBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IHlvdSBoYXZlIGJlZW4gY29udmluY2VkIGFyZSB0cnVlIHRvZGF5LiAKIlByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIgQW5uaWUgRHVrZSBhZ3JlZWQgdG8gdGVhY2ggdGhlIEhvdXNld2l2ZXMgaG93IHRvIHBsYXkgcG9rZXIgYmVmb3JlIHRoZSB0b3VybmFtZW50IHN0YXJ0cywgc28gdGhleSB3aWxsIGFsbCBiZSBmaWxtaW5nIHRoYXQgZm9yIHRoZSBzaG93LCIgUXVpbnRpbGlhbmkgc2FpZC4KVGhlbiB0aGUgU3RhdGUgZ2V0cyB0byByZXNwb25kOyBubyBkZWFkbGluZSBmb3IgdGhhdC4gQWZ0ZXIgd2hpY2ggdGhlIHRyaWFsIGNvdXJ0IGRvZXMgd2hhdGV2ZXIgcHJvY2VlZGluZ3MgYXJlIG5lY2Vzc2FyeS4gCldlIGFyZSB2ZXJ5IGhhcHB5IHdpdGggdGhlIHNlcnZpY2UuIApBbmQgdGhhdCBpcyByZWFsbHkgdGhlIGJlYXV0eSBvZiBiZWluZyBhIGhhbGYgQXNpYW4gZ2lybC4uIApJdCBpcyB2ZXJ5IGltcG9ydGFudCBmb3Igc29tZSB0aGF0IHRoZXkgbWFrZSBzb21lIG1vbmV5IGZyb20gdGhlIHRvdXJuYW1lbnRzLCBlc3BlY2lhbGx5IGlmIHRoZXkgaGF2ZSBhIGJpZyBjaGFuY2Ugb2Ygd2lubmluZy4gT2Z0ZW50aW1lcywgaW5kaXZpZHVhbHMgd2hvIHBsYXkgcG9rZXIgZ2l2ZSBhIHBhcnQgb2YgdGhlaXIgd2lubmluZ3MgdG8gY2hhcml0eS4gCklzIGl0IG9rYXkgdG8ganVzdCBlYXQgZ2x1dGVuIG9uIG15IGNoZWF0IGRheT8KV2hlbiB0byBJZ25vcmUgWW91ciBQb2tlciBDYWxjdWxhdG9yCkEgY2hlZXN5IHN0cmF0IGlzIGRiMyBpbnRvIGRmMSBpZiB5b3VyIG9wcG9uZW50IGxpa2VzIHN0ZXBwaW5nLiBEZjEgdHJhY2tzIGxlZnQgc28gc3RlcHBpbmcgcmlnaHQgd291bGQgYmVhdCBpdCBidXQgZGIzIGZvcmNlcyBmdWxsIGNyb3VjaCBvbiBoaXQgc28gaWYgeW91ciBvcHBvbmVudCBpcyBwbGF5aW5nIG9uIHRoZSBsZWZ0IHNpZGUgKHdoaWNoIGlzIDkwJSBvZiB0aGUgdGltZSkgaGUgY2FudCBzdGVwIGl0IGJlY2F1c2UgaGUgaW4gY3JvdWNoaW5nIHNvIHRhcHBpbmcgZG93biB3b24gd29yay4uIApCdXQgSSBhc3N1bWUgaGUgdXNlIGFub3RoZXIgZW1haWwgb3Igc29tZXRoaW5nIGlmIGhlIHdhcyB0cnlpbmcgdG8gaGlkZSBpdC4gCmEgYXVjdW4gbGllbiBlbnRyZSBsZSB2YWNjaW4gY29udHJlIGxhIHJvdWdlb2xlIGV0IGwKRnJvbSB1bmkgc3R1ZGVudCB0byBtdWx0aSBtaWxsaW9uIGRvbGxhciBwb2tlciB3aW5uZXIKWWV0IGFub3RoZXIgcGV0dHkgbWFuaWZlc3RhdGlvbiBvZiBuYXJjIHBvd2VyIGFuZCBjb250cm9sLiAKV2hpbGUgaG9sZGluZyB5b3VyIHRvZXMgaW4gdGhlIHBvaW50ZWQgcG9zaXRpb24sIHJhaXNlIHlvdXIgdG9lcyBhd2F5IGZyb20gdGhlIGZsb29yIHdoaWxlIGFsc28gc2Nvb3BpbmcgeW91ciBmb290IGlud2FyZC4gUHJvdmlkZSBqdXN0IGVub3VnaCByZXNpc3RhbmNlIHdpdGggeW91ciBoYW5kIHRvIHRoYXQgaXQgZmVlbHMgbGlrZSB5b3UgYXJlIGRvaW5nIGxpdHRsZSB3ZWlnaHQgbGlmdGluZyBleGVyY2lzZXMgd2l0aCB5b3VyIGZvb3QuIApRdWUgcG91ciBsZXMgamV1eCB0cmFkaXRpb25uZWxzCldoaWNoIGJyaW5ncyBtZSB0byB0aGUgZW5lbXkgdHlwZXMuIEkgaGF2ZSBtYWpvciBhbmQgbWlub3IuIApBbHNvIGZ1biBmYWN0IHRoZXkncmUgZ3JlYXQgYmVmb3JlIGJlZCB0byBtaXRpZ2F0ZSBhIGhhbmdvdmVyIHRoZSBuZXh0IG1vcm5pbmchIS4gCkJ1dCBub3QgbG9uZyBhZnRlciB0aGVpciB3ZWRkaW5nIG5pZ2h0LCB0aGUgZm91bmRhdGlvbiBvZiBKZXNzJ3MgbWFycmlhZ2UgYmVnYW4gdG8gY3JhY2suIEhlciBodXNiYW5kIHdhcyBjb250cm9sbGluZyAgIHNuaXBpbmcgYXQgaGVyIGZvciBiZWluZyBkaXNvcmdhbml6ZWQsIGFuZCB0aGVuIGRpc2FwcGVhcmluZyB0byB3YXRjaCBwb3JuIG9ubGluZS4gTWVhbndoaWxlLCBKZXNzJ3Mgb3duIHNleHVhbGl0eSB3YXMgYnVyc3RpbmcgYXQgdGhlIHNlYW1zLiBTaGUgZmlsZWQgZm9yIGRpdm9yY2UgYWZ0ZXIganVzdCBmb3VyIHllYXJzLgpZb3UgY2FuIHBvdW5jZSBvbiB0aGUgd2VhayBvbmVzLCBhdm9pZCB0aGUgYmV0dGVyIG9uZXMgYW5kIHByYWN0aWNlIHlvdXIgZ2FtZS4gClNlY3VyaXR5IHZpZGVvIHNob3dzIG1ldGhvZGljYWwgZ3VubWFuIGluIGNhc2lubyBhdHRhY2sKSSB3b3JrIGFzIGEgbGFuZHNjYXBlci4gSXQgZGVwZW5kcyBvbiB3aGF0IHRoZSByb290cyBhcmUuIElmIHRoZXkgYXJlIGl2eSwgbW9ybmluZyBnbG9yeSBvciBzb21ldGhpbmcgZWxzZSByZWFsbHkgaGFyZHksIGdvb2QgbHVjayB5b3VyIGdvaW5nIHRvIGhhdmUgbnVrZSB5b3VyIGJhY2t5YXJkLiBJZiBpdHMgc29tZXRoaW5nIG1vcmUgZnJhZ2lsZSB0aGV5IHdpbGwganVzdCByb3QgYXdheS4gT25lIHRoaW5nIHRvIGtlZXAgaW4gbWluZCwgbWFueSBvZiB0aGUgZHJvdWdodCB0b2xlcmFudCBsYXduIGdyYXNzZXMgd2lsbCBiZSBraWxsZWQgYnkgd2VlZCBOIGZlZWQgb3Igb3RoZXIgd2VlZCBraWxsZXJzIHRoYXQgYXJlbiBzdXBwb3NlZCB0byB0YXJnZXQgZ3Jhc3MuIEkgbGl2ZSBpbiB0aGUgTm9ydGggV2VzdCB3aGVyZSB3ZSBoYXZlIHdhdGVyIGFuZCBJIGRvbiBoYXZlIGEgbG90IG9mIGxhd24uIE15IHlhcmQgaXMgZGVjb21wb3NlZCBncmFuaXRlIGFuZCByb3VuZCByb2NrIHdpdGggYm9yZGVycyBhbmQgc29tZSBkZWNvcmF0aXZlIHJvY2tzIGFuZCBncmFzc2VzLiBJdHMgbm90IGRvbmUgeWV0LCBhZGRpbmcgYSBjb3VwbGUgdHJlZXMuIEkgaGF2ZSBhIDMwMCBzcXVhcmUgZm9vdCBwaWVjZSBvZiBncmFzcyBmb3IgdGhlIGRvZ3MgdG8gcG9vcCBvbi4gQnV0IHRoZXkgaW5zaXN0IG9uIGdvaW5nIG9uIHRoZSBwYXRpby4KV2lsbCBiZSBkb25hdGVkIHRvIHRoZSBsb2NhbCBmaXJlZmlnaHRlcnMgYW5kIGZpcnN0IHJlc3BvbmRlcnMsIE9saXZlciBzYWlkLiBXZSBhcmUgYSBub25wcm9maXQgb3JnYW5pemF0aW9uIG1hZGUgdXAgb2YgbWlsaXRhcnksIHBvbGljZSwgZmlyZWZpZ2h0ZXJzLCBhbmQgZmlyc3QgcmVzcG9uZGVycy4gR2VvcmdlIE5ld3MgTGl2ZSBWaWRlb0hpZ2ggU2Nob29sIFNwb3J0c0RpeGllIEhpZ2hEZXNlcnQgSGlsbHNQaW5lIFZpZXdTbm93IENhbnlvbkh1cnJpY2FuZUVudGVycHJpc2VIZWFsdGhEaXhpZSBSZWJlbHMKSGUgc2VlbXMgY29udmluY2VkIHRoYXQgdGhlIGFkcyBhcmUgYWN0dWFsbHkgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIG1lbWJlcnMgb2YgYSBwb3NzaWJseSB2YXN0IHNlY3JldCBzb2NpZXR5IG9mIGludGVsbGVjdHVhbCBkaXNzaWRlbnRzLCBhbmQgc29tZXRoaW5nIHBvdGVudGlhbGx5IHNpbmlzdGVyIGlzIGF0IGhhbmQuLiAKTWFzc2FnZSBpdCB1bnRvIHRoZSBicnVpc2UgdW50aWwgeW91ciBza2luIGFic29yYnMgdGhlIHlvbGsuIApUaGV5IGFsc28gcHJvdmlkZSByZXZpZXdzIG9mIGJvbnVzIGZlYXR1cmUgc2xvdHMgYW5kIGZpdmUgcmVlbCBzbG90cy4gCkkgd291bGQgc2F5IGJlaW5nIGFibGUgdG8gcG9rZSBmdW4gYXQgbXkgZnJpZW5kcyBvZGRseSBzaG93cyB3ZSBoYXZlIGEgc3Ryb25nIGZyaWVuZHNoaXAgYW5kIGFyZSBjb21mb3J0YWJsZSB3aXRoIGVhY2ggb3RoZXIuIApGb3Igd2hhdGV2ZXIgcmVhc29uLCBzb21lIGdhbWUgZGV2ZWxvcGVycyBjcmVhdGUgY29tcGxldGVseSB1bmlxdWUgZ2FtZXBsYXkgZXhwZXJpZW5jZXMgYmFzZWQgb24gdGhlaXIgZXhpc3RpbmcgcHJvcGVydGllcyBhbmQgbm90IGJvdGhlciBuYW1pbmcgaXQgc29tZXRoaW5nIGVsc2UgZW50aXJlbHkuIApUaGUgQXJkdWlubyB1c2VzIGEgZGV2aWNlIGNhbGxlZCB0aGUgIlBvd2Vyc3dpdGNoIFRhaWwiIHRvIGFjdGl2YXRlIHRoZSBwdW1wIGV2ZXJ5IGRheSBvciBzbyBvbiBhIHRpbWVyLiAKWWVzLCB0aGUgZGV2ZWxvcGVkIHdvcmxkIGRvZXMgdXMgbW9yZSByZXNvdXJjZXMgbm93LCBidXQgbG9uZyB0ZXJtIHRoYXQgd2lsbCBwcm9iYWJseSBkZWNsaW5lLiAKSG93IG1hbnkgbW9yZSBtb3RoZXJzIGRvIHdlIHdhbnQgbHlpbmcgYmVzaWRlIHRoZWlyIGRlYWQgY2hpbGQgb3Zlcm5pZ2h0LCBhY2NvbXBhbnlpbmcgdGhlbSBhcyB0aGV5IGxpZSBjb2xkLCBydWJiaW5nIHRoZSBoYW5kcyB0aGF0IHdlcmUgb25jZSB3YXJtIGFuZCB2aWJyYW50IGFuZCBsb3ZpbmcuLiAKR2lybCAxIHdhcyBhIG1hc3NhZ2UgcGFybG9yIHdvcmtlci4gUGV0aXRlLCBsb25nIGJsYWNrIGhhaXIsIGFuZCBzd2VldC4gSSBmdWNrZWQgaGVyLCBzaGUgd2FzIG9wZW4gdG8ga2lzc2luZywgc28gSSBrZXB0IHNlZWluZyBoZXIuIApJdCBpcyBoaWdobHkgZG91YnRmdWwgeW91IGNvdWxkIGRvIHRoaXMgd2VsbCBieSBsaW1waW5nIGluIGFuZCBiZXR0aW5nIGZsb3BzLCBvciB0cnlpbmcgdG8gY2F0Y2ggYW4gYWNlLi4gCkFkdmFudGFnZXMgYW5kIERpc2FkdmFudGFnZXMgUXVhbGl0YXRpdmUgY2FyZWVyIGFzc2Vzc21lbnRzIGFkZCBhIHBlcnNvbmFsIGVsZW1lbnQgdG8gdGhlIGNvdW5zZWxpbmcgbWl4LCBhbGxvd2luZyBhIGNvdW5zZWxvciB0byB0YWtlIHlvdXIgc2VsZiBhd2FyZW5lc3MgaW50byBjb25zaWRlcmF0aW9uLiBUaGlzIGlzIHVzZWZ1bCBmb3IgcGVvcGxlIHdobyBhbHJlYWR5IGhhdmUgZXhwZXJpZW5jZSBhbmQga25vd2xlZGdlIG9mIGEgd29yayBlbnZpcm9ubWVudC4gU2VsZiBhd2FyZW5lc3MgaXMgbm90IGFsd2F5cyBvYmplY3RpdmUsIGhvd2V2ZXIsIGFuZCB0aGUgaW5kaXZpZHVhbCdzIHZpZXcgb2Ygd2hhdCBoZSBjYW4gb3IgY2Fubm90IGRvIG1heSBub3QgYmUgYWNjdXJhdGUuIFF1YW50aXRhdGl2ZSBhc3Nlc3NtZW50cyBsb29rIGF0IGhhcmQgZGF0YSBhbmQgY2FuICJwcm92ZSIgc2tpbGxzIG9yIGxhdGVudCBhYmlsaXR5LiBUaGlzIGlzIHVzZWZ1bCBmb3IgeW91bmdlciBwZW9wbGUgd2l0aCBsZXNzIGxpZmUgZXhwZXJpZW5jZSwgYnV0IGl0IGNhbm5vdCBmYWN0b3IgaW5kaXZpZHVhbCBwcmVmZXJlbmNlcyBhbmQgZXhwZXJpZW5jZXMgaW50byB0aGUgbWl4LgpJbiBvbmUgZXhwZXJpbWVudCwgdGhleSBhc2tlZCBwYXJ0aWNpcGFudHMgdG8gcmVhZCBoeXBvdGhldGljYWwgc2NlbmFyaW9zIGludm9sdmluZyBhIHBhdGllbnQgaGlnaCBibG9vZCBwcmVzc3VyZSBkaWFnbm9zaXMgYW5kIHRyZWF0bWVudCBhZHZpY2UgYmFzZWQgb24gZWl0aGVyIGEgV2VzdGVybiBtZWRpY2luZSBvciBUQ00gYXBwcm9hY2guIEhhbGYgb2YgdGhlIHNjZW5hcmlvcyBpbiBlYWNoIGdyb3VwIChXTSBhbmQgVENNKSBhbHNvIGluY2x1ZGVkIGFuIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgaGVhbHRoIHByb3RlY3RpdmUgYmVoYXZpb3JzIHRoYXQgd291bGQgY29tcGxlbWVudCB0aGUgcHJvcG9zZWQgdHJlYXRtZW50LiBQYXJ0aWNpcGFudHMgd2VyZSB0aGVuIGFza2VkIHRvIGdhdWdlIHRoZSBwYXRpZW50IG1vdGl2YXRpb24gdG8gZm9sbG93IHRocm91Z2ggb24gdGhlIHRyZWF0bWVudCBhZHZpY2UgYW5kIHRvIHdoYXQgZGVncmVlIHRoZXkgd291bGQgcmVjb2duaXplIHRoZSBpbXBvcnRhbmNlIG9mIGhlYWx0aHkgbGlmZXN0eWxlIGZhY3RvcnMuLiAKSSBhc3N1bWUgaXQgd2FzIHVzZWQgYXMgYW4gb25vbWF0b3BvZWlhIGluIHNvbWUgcGFydHMgb2YgdGhlIHdvcmxkLCBtYXliZSBhIGJhdHRsZSBjcnksIG1heWJlIGEgd2VpcmQgZmlyc3QgbmFtZSBpbiBNZXNvcG90YW1pYSB3aG8ga25vd3M/IEJ1dCBJIGtub3cgd2h5IGl0IGlzIHVzZWQgbm93LiAKQW50ZXMgY2FuIGFsc28gYmUgdXNlZCBhbG9uZyB3aXRod2luZG93IGJsaW5kcyBpbiB0aGUgbGF0ZXIgb24gc3RhZ2VzIG9mIHRoZSBjb21wZXRpdGlvbi4gTGV0J3Mgc2VlIHdoeSBzbyBtYW55IHBsYXllcnMgY2hvb3NlIHRvIHBsYXkgcG9rZXIgb25saW5lLiBGcm9tIGFub3RoZXIgcGVyc3BlY3RpdmUsIG9ubGluZSBwb2tlciBpc2EgZ3JlYXQgd2F5IHRvIGFuYWx5emUgeW91ciBnYW1lIGFuZCBlcnJvcnMgYXQgdGhlIHNhbWUgdGltZS4gClRoZSBlbGVjdGl2ZSBlbmFibGVzIHlvdSB0byBleHBlcmllbmNlIGRpZmZlcmVuY2VzIGluIGN1bHR1cmUsIGNsaW5pY2FsIHByYWN0aWNlLCBoZWFsdGhjYXJlIHN5c3RlbXMgYW5kIGxhbmd1YWdlcywgd2hpY2ggd2lsbCBiZW5lZml0IHlvdSBhcyBhIFJlZ2lzdGVyZWQgTnVyc2Ugd2hlbiBjYXJpbmcgZm9yIHBlb3BsZSBmcm9tIGRpZmZlcmVudCBiYWNrZ3JvdW5kcy4gCkkgZG8gdGhpbmsgaXQgYSBiaXQgaW5zdWx0aW5nIHdoZW4gcGVvcGxlIHNheSB0aGVzZSB0d28gaW5kaXZpZHVhbHMgYXJlIGxvb2tpbmcgZm9yIGEgY2FzaCBncmFiLiBOb3RoaW5nIG91dCBvZiB0aGUgcmVhbG0gb2YgcG9zc2liaWxpdHksIGJ1dCBpdCByYXJlIHRvIGhhdmUgdHdvIHNlcGFyYXRlIGluZGl2aWR1YWxzIHN1c3BlbmQgdGhlaXIgcmVwdXRhdGlvbiBhbmQgZ28gb24gcmVjb3JkIGFib3V0IHNvbWV0aGluZyBzbyBkZWVwbHkgcGVyc29uYWwuCkx1a2UgZGllZCBwcmV2ZW50aW5nIHRoZSBkZWF0aCBvZiBhIGhhbmRmdWwgb2YgcGVvcGxlLCBpbiBhIHNpdHVhdGlvbiBoZSBjYXVzZWQgYnkgaWxsb2dpY2FsbHkgc3Vsa2luZyBvbiBhbiBpc2xhbmQgZm9yIHllYXJzIChhbHNvIG91dCBvZiBjaGFyYWN0ZXIgZm9yIHRoZSBmYWl0aCBkcml2ZW4gd2FycmlvciBwcmllc3QgaGUgd2FzIGF0IHRoZSBlbmQgb2YgNikuClNvIG1hbnkgcGVvcGxlIG1pc3NpbmcgdGhlIHBvaW50LiBUaGlzIGlzIG5vdCBtZWFudCB0byBiZSBzb21lIHByaXN0aW5lIHBlcmZvcm1hbmNlLiBNb3JlIGxpa2VseSBpdCB3YXMganVzdCBhIG9uZSBvZmYgYXQgYSBjb25mZXJlbmNlLiBFaXRoZXIgdG8gc3RhcnQgb3IgZW5kIHRoZSBkYXkgb24gYSBuaWNlIG5vdGUgKHB1biBpbnRlbmRlZCkuIFNvIHJlbGF4IGFuZCBlbmpveSBpdCBmb3Igd2hhdCBpdCBpcyAgIGEgYnVuY2ggb2Ygdm9jYWwgZW50aHVzaWFzdHMgc2hvd2luZyB3aGF0IGNhbiBiZSBkb25lIHdpdGggYSBjb2xsZWN0aXZlIGh1bWFuIHZvaWNlLiBTdXJlLCBJIHByZWZlciBhIGJldHRlciByZWNvcmRpbmcgYW5kIEkgcmVhbGx5IHdpc2ggYWxsIHRob3NlIHBlb3BsZSB3aXRoIHRoZWlyIHBob25lcyB3b3VsZG4gZG8gdGhhdCwgYnV0IGRhbW4gSSB1c2VkIHRvIGxpdmUgZm9yIGNob3JhbCBtb21lbnRzIGxpa2UgdGhhdC4gVGhleSB3ZXJlIHJhcmUgYW5kIGFtYXppbmcgZXhwZXJpZW5jZXMuCkl0IHNob3dzIGFsbCB0aGUgcGxheWVycyBoYW5kcy4gCk1vbGx5IGlzIGEgYml0IGxpa2UgdGhhdC4gQXMgcG9ydHJheWVkIGJ5IEplc3NpY2EgQ2hhc3RhaW4sIHRoaXMgZHJpdmVuLCBicmlsbGlhbnQgd29tYW4gd2FzIG9uIGhlciB3YXkgdG8gT2x5bXBpYyBnbG9yeSB3aGVuIGEgZnJlYWsgYWNjaWRlbnQgdG9vayBoZXIgb3V0IG9mIGNvbXBldGl0aW9uLiBTaGUgaGFkIHRoZSBncmFkZXMgdG8gZ2V0IGludG8gbGF3IHNjaG9vbCwgYnV0IGRlY2lkZWQgdG8gdGFrZSBhIHllYXIgb2ZmIGZpcnN0LCBhbmQgd291bmQgdXAgcnVubmluZyBhIGhpZ2ggc3Rha2VzIHBva2VyIGdhbWUgaW4gTG9zIEFuZ2VsZXMuIEVhcmx5IGluIHRoZSBtb3ZpZSwgd2Ugc2VlIE1vbGx5IHRha2luZyBvbiB0aGUgc2VydmljZXMgb2YgQ2hhcmxpZSBKYWZmZXkgKElkcmlzIEVsYmEpLCBvbmUgb2YgdGhvc2UgaW5jb3JydXB0aWJsZSBsYXd5ZXJzIG1vdmllcyBhcmUgc28gZ29vZCBhdCBwcm92aWRpbmcuIChGaWxtIHNob3J0aGFuZDogSGUgZ290IGEgc3dlZXQgc2Nob29sIGFnZSBkYXVnaHRlciBzbyB3ZSBrbm93IGhlIG9uIHRoZSBsZXZlbC4pIEhlIHVyZ2VzIGhlciB0byB0dXJuIG9uIGhlciBmb3JtZXIgY2xpZW50cyBpbiBleGNoYW5nZSBmb3IgYSBsaWdodGVyIHNlbnRlbmNlLCBidXQgc2hlIGhhcyBwcmluY2lwbGVzIHRvbyEgRXZlbiB0aGUgbW92aWUgZG9lc24gZ2l2ZSB0aGUgcmVhbCBuYW1lcyBvZiBhbnkgb2YgdGhlIHBsYXllcnMsIGFsdGhvdWdoIGl0IGFuIG9wZW4gc2VjcmV0IHRoYXQgdGhlIHNtYXJteSB5b3VuZyBhY3RvciBwbGF5ZWQgYnkgTWljaGFlbCBDZXJhIGlzLCBpbiBmYWN0LCBUb2JleSBNYWd1aXJlLgpQZXJraW5zIG1hZGUganVzdCBvbmUgc2hvdCAgIGEgdG91Z2ggZmFkZWF3YXkgb3ZlciBCb2xkZW4gICBpbiB0aGUgb3BlbmluZyBoYWxmIGJ1dCBzbW9vdGhseSBkaXJlY3RlZCB0aGUgdHJhbnNpdGlvbiBnYW1lIGFuZCBoYWxmIGNvdXJ0IG9mZmVuc2Ugd2l0aCBmaXZlIGFzc2lzdHMuLiAKV2l0aCBhbGwgdGhlIGF0dGVudGlvbiBmb2N1c2VkIG9uIHRoZSBjYXJkcyBvbmNlIHRoZXkndmUgaGl0IHRoZSB0YWJsZSwgaXQncyBlYXN5IHRvIGZvcmdldCBhYm91dCB0aGUgbWVuIGFuZCB3b21lbiBkZWFsaW5nIHRoZW0uIEFsbCBpbiBhbGwsIHRoaXMgeWVhcidzIHNlcmllcyAgIDU3IGV2ZW50cyBmcm9tIE1heSAyNyB0byBKdWx5IDE1IChtYWluIGV2ZW50IGZpbmFsIHRhYmxlIHJlc3VtZXMgTm92LiA3IHRvIDEwKSAgIGhhcyBhIHN0YWJsZSBvZiA4NTAgZGVhbGVycyB0byBrZWVwIHRoZSBnYW1lcyBydW5uaW5nLgpUaGV5IGhhdmUgeW91ciBjcmVkaXQgY2FyZCBudW1iZXIsIHlvdXIgZW1haWxzLCB0ZXh0IG1lc3NhZ2VzLCBwYXNzd29yZHMuIEFsbCBvZiBpdC4gClRoZSBuZXh0IGNvbG9yIHRoYXQgeW91IHNob3VsZCBiZSBmYW1pbGlhciB3aXRoIHdoZW4gaXQgY29tZXMgdG8gQ2xheSBDYXNpbm8gUG9rZXIgQ2hpcHMgaXMgcmVkLiAKQXMgd2lsbCBhIGRyaXp6bGUgb2Ygb2xpdmUgb2lsIG92ZXIgdGhlIGZpbmlzaGVkIGRpc2guLiAKSGF2aW5nIHNhaWQgdGhhdCwgZGVhbGluZyB3aXRoIHRoZSBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBqb2Igb2Ygc29sdmluZyBuaWdodCBkdXN0L3dhc3RlL2RpcnQgaXNzdWVzIHdhcyBqdXN0IGEgZGlmZmljdWx0IHRoaW5nIHRvIGRvLCBpbiBwcmludC4gCkhvd2V2ZXIsIEkgZG8gZW5qb3kgZ3JhYmJpbmcgYSBiaXRlIHRvIGVhdCB0aGVyZS4gCkkgZmluZCBpdCB3b3JyeWluZywgYnV0IGFsc28gb2RkbHkgY29tZm9ydGluZy4gCkFjdHVhbGx5LCB0aGUgc29jaWFsIHBzeWNob2xvZ2ljYWwgZXZpZGVuY2UgaXMgbm90IG5ldy4gWWVhcnMgYWdvIGEgc2VyaWVzIG9mIGV4cGVyaW1lbnRzIHNob3dlZCB0aGF0IG1vc3QgcGVvcGxlIGxvc2UgYWxsIG1vcmFsIGdyb3VuZGluZyB3aGVuIHB1dCBpbiBjb25kaXRpb25zIHdoZXJlIGh1cnRpbmcgYW5vdGhlciBodW1hbiBiZWluZyBpcyBzZWVuIGFzIHRoZSAicmlnaHQiIHRoaW5nIHRvIGRvLiBGb3IgaW5zdGFuY2UsIGluIDE5NjEsIGluIHJlc3BvbnNlIHRvIHRoZSBFaWNobWFubiB0cmlhbCwgWWFsZSBzb2NpYWwgcHN5Y2hvbG9naXN0IFN0YW5sZXkgTWlsZ3JhbSBjb25kdWN0ZWQgaGlzIG5vdyBpbmZhbW91cyBleHBlcmltZW50cyBvbiBvcmRpbmFyeSBwZW9wbGUgd2hvIHdlcmUgaW5zdHJ1Y3RlZCB0byBhZG1pbmlzdGVyIGVsZWN0cmljIHNob2NrcyBvbiBzdHJhbmdlcnMuIApLaXNhaCBDYXJsbyBpcyBpc24gZXhhY3RseSB3aGF0IHlvdSBsb29raW5nIGZvci4gCkkgZG8gaGF2ZSBkcnkgc2tpbiBhbmQgY3VycmVudGx5IHVzZSBNVUZFIDE1Mz1ZNDA1IGZvciBmb3VuZGF0aW9uIHJlZmVyZW5jZS4uIApIZWxsbywgSSB3YW50IGNoYW5nZS4gSSB3YW50IHRvIHJlcHJlc2VudCB0aGUgcGVvcGxlIG92ZXIgdGhlIGNvcnBvcmF0aW9ucywgcGVhY2Ugb3ZlciB3YXIsIGFuZCBqdXN0aWNlIG92ZXIgaW5lcXVhbGl0eQpUaGUgRm9vZCBhbmQgTnV0cml0aW9uIEJvYXJkIGhhcyBmYWlsZWQgbWlsbGlvbnMKSGlzIGpvYiB0aGVyZSB3YXMgc2VjdXJpdHkuICJGb3ggaW4gdGhlIGhlbmhvdXNlLCAiIGhlIHNheXMuIEl0IHdhcyAxOTgxLCBhbmQgZ2FtYmxpbmcgaW4gQXRsYW50aWMgQ2l0eSBoYWQganVzdCBiZWVuIGxlZ2FsaXplZC4gQnV0IHRoZXJlIHdlcmUgc3RpbGwgcGxlbnR5IG9mIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBlbnRlcnByaXNpbmcgY3JpbWluYWwuCkl0IHdhcyBvbmNlIHRoZSBjYXNlIHRoYXQgaW4gbW9zdCBvZiBvdXIgY29tbXVuaXR5IGxpZmUsIHdlYWx0aCB3YXMgZXF1YXRlZCB3aXRoIHdvcmssIHRoZSBzeW1tZXRyeSBiZXR3ZWVuIHRoZSB0d28gaW52aW9sYXRlLiBUaGlzIGVuZG93ZWQgZW1wbG95bWVudCB3aXRoIGEgc2Vuc2Ugb2YgbWVhbmluZyBhbmQgc3RhdHVzIHdpdGhpbiB0aGUgY29tbXVuaXR5IHRoYXQgcmVmbGVjdGVkIGl0cyBpbXBvcnRhbmNlLiBCdXQsIHdpdGggaW5jcmVhc2luZyBhbW91bnRzIG9mIHdlYWx0aCBub3cgYmVpbmcgZ2VuZXJhdGVkIHdpdGhvdXQgbGFib3VyIGF0IGFsbCwgd29yayBpdHNlbGYgaXMgc2VlbiBhcyBtb3JlIGluY2lkZW50YWwgdGhhbiBlc3NlbnRpYWwuIEEgZ2VuZXJhdGlvbiBhZ28sIHdlIGJlbGlldmVkIHdlYWx0aCB3b3VsZCBpbmNyZWFzZSBpbiBkcmFtYXRpYyB0ZXJtcyBhbmQgdGhhdCBqb2JzIHdvdWxkIGJlIGF2YWlsYWJsZSBmb3IgZXZlcnlvbmUuIEl0IG5vdyBjbGVhciB3ZSBtaXNjYWxjdWxhdGVkIGFuZCB0aGF0IHdlYWx0aCBhbmQgd29yayBhcmUgbm8gbG9uZ2VyIGluZGl2aXNpYmxlLgpFYWNoIGNvdW50cnkgd2lsbCB0aGVuIG1lZXQgdXAgYXQgdGhlIHVsdGltYXRlIGZpbmFsIHRhYmxlIHdoZXJlIHRoZSB2aWN0b3Jpb3VzIGNvdW50cnkgd2lsbCB3aW4gdGhlIEdsb2JhbCBQb2tlciBNYXN0ZXJzIGFuZCB0aHVzIGJlIHJlY29nbml6ZWQgYXMgdGhlIGJlc3QgbmF0aW9uIGluIHRoZSBXb3JsZCEuIApTY2FsaWEgc2hvd2VkIGEgZGVlcCBjb21taXRtZW50IHRvIG9yaWdpbmFsaXNtLCB3aGljaCBoZSBsYXRlciBiZWdhbiBjYWxsaW5nIHRleHR1YWxpc20uIEp1ZGdlcyBoYWQgYSBkdXR5IHRvIGdpdmUgdGhlIHNhbWUgbWVhbmluZyB0byB0aGUgQ29uc3RpdHV0aW9uIGFuZCBsYXdzIGFzIHRoZXkgaGFkIHdoZW4gdGhleSB3ZXJlIHdyaXR0ZW4uIEluIGEgNSA0IGRlY2lzaW9uIHRoYXQgc3BsaXQgdGhlIGNvdXJ0IGNvbnNlcnZhdGl2ZXMgYW5kIGxpYmVyYWxzLCBTY2FsaWEgd3JvdGUgdGhhdCBhbiBleGFtaW5hdGlvbiBvZiBFbmdsaXNoIGFuZCBjb2xvbmlhbCBoaXN0b3J5IG1hZGUgaXQgZXhjZWVkaW5nbHkgY2xlYXIgdGhhdCB0aGUgU2Vjb25kIEFtZW5kbWVudCBwcm90ZWN0ZWQgQW1lcmljYW5zIHJpZ2h0IHRvIGhhdmUgZ3VucywgYXQgdGhlIHZlcnkgbGVhc3QgaW4gdGhlaXIgaG9tZXMgYW5kIGZvciBzZWxmIGRlZmVuc2UuIApXZSBlbmNvdXJhZ2UgcG9zdHMgd2l0aCBFZG1vbnRvbiByZWxhdGVkIG9yaWdpbmFsIGNvbnRlbnQsIHN0b3JpZXMsIG5ld3MsIGV2ZW50cywgaG90IGRpc2N1c3Npb24gdG9waWNzLCBhbmQgYXMgYSBwbGFjZSB0byBzZWVrIGxpa2UgbWluZGVkIG90aGVycyB3aG8gbWF5IHNoYXJlIHlvdXIgb2JzY3VyZSBpbnRlcmVzdCBvciBob2JieS4gTm90IHNvIG11Y2ggYSBtYXJrZXRwbGFjZSBvciBhZHZlcnRpc2luZyBwbGF0Zm9ybSAod2Ugbm90IEtpamlqaSksIGFuZCBwbGVhc2UsIGlmIHlvdSBoYXZlIGFuIGlucXVpcnksIHRyeSB0byBnb29nbGUgZmlyc3Qgb3IgdG8gY2hlY2sgb3V0IHRoZSB3aWtpIGFuZCB0aGUgcnVsZXMgYmVmb3JlIHBvc3RpbmcgaGVyZS4gRW5qb3khR28gdG8gTWFjRXdhbi4gSSB0b29rIHRoZWlyIHByb2dyYW0gaW4gMjAwNyBhbmQgaGF2ZSB0YWxrZWQgdG8gc2V2ZXJhbCBwZW9wbGUgdGhhdCBoYXZlIHRha2VuIHRoZSBjb3Vyc2Ugc2luY2UgdGhlbiwgaW5jbHVkaW5nIGdyYWQgMjAxNy4gSXQgd2FzIGFscmVhZHkgYSBncmVhdCBwcm9ncmFtIGFuZCBoYXMgc2luY2UgaW1wcm92ZWQgb24gaXRzIHdlYWtuZXNzZXMuIEkgd29ya2VkIHdpdGggYW5kIGhhZCBtYXNzYWdlcyBmcm9tIGdyYWRzIG9mIG90aGVyIHByb2dyYW1zLCBhbmQgaW4gbXkgZXhwZXJpZW5jZSwgTWFjRXdhbiBncmFkcyBhcmUgbW9yZSBjb21wZXRlbnQgYW5kIGNvbmZpZGVudCBjb21pbmcgb3V0IG9mIHNjaG9vbCB2cyBvdGhlcnMgd2hvLCBhZnRlciB5ZWFycyBvZiBwcmFjdGljZSwgc3RpbGwgZmVlbCBzY2FyZWQgdG8gdG91Y2ggYm9kaWVzLiBUaGVpciBtYXNzYWdlcyBhbHNvIGRvbiBzZWVtIHRvIG1ha2UgbWUgZmVlbCBkaWZmZXJlbnQgYWZ0ZXIgdGhlIHNlc3Npb24uIFRoaXMgaXMgYSBzd2VlcGluZyBnZW5lcmFsaXphdGlvbiwgYnV0IG9uZSB0aGF0IEkgZm91bmQgdG8gYmUgY29uc2lzdGVudGx5IHRydWUuIEkgdXNlZCB0byBidXMgZnJvbSBkb3dudG93biBhbGwgdGhlIHdheSB0byBNaWxsIFdvb2RzIHRvIHRha2UgTWFjRXdhbnMgbWFzc2FnZSBwcm9ncmFtLCBhbmQgaXQgd2FzIHdvcnRoIGl0LiBUaGVpciBmYWNpbGl0eSBpcyBub3cgd2F5IGJldHRlciBkb3dudG93bi4KSnVzdCB3b25kZXJpbmcsIHdpdGggYWxsIHRoZSBvcHRpb25zIGF2YWlsYWJsZSBkbyB5b3UgaGF2ZSBhbnkgYWR2aWNlIG9uIGhvdyBJIGNhbiBmaW5kIG15IG5leHQgam9iPyBSaWdodCBub3cgSSBsb29raW5nIG9uIGpvYiBib2FyZHMgbGlrZSBEYXZlIEVTTCBidXQgSSBub3Qgc3VyZSBpZiB0aGVyZSBhbm90aGVyIHNpdGUgb3IgYSBiZXR0ZXIgd2F5IHRvIGZpbmQgRVNMIGpvYnMgdGhhbiBvbmxpbmUgam9iIGJvYXJkcy4KIlRoZSB0b3AgMjcgcGxheWVycyBnb3QgcGFpZCBhbmQgdGhlcmUgd2VyZSAyOCBsZWZ0LiBJJ2Qgc3BlbnQgZXZlcnl0aGluZyBidXQgbXkgbGFzdCAkNjAgb24gdGhlIGJ1eSBpbi4gVGhyZWUgcGVvcGxlIHdlbnQgYWxsIGluIGJlZm9yZSBtZSwgYW5kIEkgbG9va2VkIGRvd24gdG8gc2VlIHBvY2tldCBBY2VzLiAKR3JhZHVhbGx5LCB0aGVzZSBnYW1lcyBiZWNvbWUgcG9wdWxhciBhbW9uZyBhbGwgdGhlIHBlb3BsZSBhbmQgYSBzdGF0cyBzYXkgdGhhdCBldmVyeSB0aHJlZSBwZW9wbGUgaW4gVVMgaGFzIGF0IGxlYXN0IG9uZSBwb2tlciBwbGF5ZXIuIApJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gY29sbGVjdGluZyBjYXNpbm8gc3R5bGUgcG9rZXIgY2hpcHMsIHlvdSBoYXZlIHRoZSBvcHRpb24gb2YgY2hvb3Npbmcgb25lIG9yIHR3byBjYXNpbm9zIGluIHBhcnRpY3VsYXIgdG8gY29sbGVjdCBmcm9tLiAKIllvdSBjYW4ndCBldmVuIHJlYWQgb3IgY29tcHJlaGVuZCBvbmUgZW50cnkiICAgVTIxMzExNgpGRFIgd2FudGVkIHRvIGV4cGFuZCB0aGUgZWNvbm9teSBhbmQgYWNjZXNzIHRvIGVsZWN0cmljaXR5LiAKSXQncyBhbG1vc3QgYXMgaXQgd2FzIGluIHRoZSBtYXRyaXgsICJUaGUgTWF0cml4IGlzIGEgc3lzdGVtLCBOZW8uIFRoYXQgc3lzdGVtIGlzIG91ciBlbmVteS4gQnV0IHdoZW4geW91IGluc2lkZSwgeW91IGxvb2sgYXJvdW5kLCB3aGF0IGRvIHlvdSBzZWU/IEJ1c2luZXNzbWVuLCB0ZWFjaGVycywgbGF3eWVycywgY2FycGVudGVycy4gCklmIGhlIGxpZXMgYWJvdXQgd2h5IEkgbGVmdCBJIHdpbGwgY29ycmVjdCBoaW0gb24gYWxsIHNvY2lhbCBtZWRpYSBoZSBldmVyIHB1bmNoZXMgbWUgd2hpY2ggaGUgaGFzIHRocmVhdGVuZWQgdG8gZG8gSSB3aWxsIGNhbGwgdGhlIHBvbGljZSBhbmQgQ1BTLiBJIHdpbGwgcHJvYmFibHkgbm90IGdvIGJhY2sgdG8gbXkgdG93biB3aGljaCBJIGxpdmVkIGluIG15IHdob2xlIGxpZmUgZm9yIGEgZmV3IHllYXJzLiBNeSBtb20gaXMgd2F5IGJldHRlciB0aGFuIG15IGRhZCBhbmQgc2hlIHdpbGwgaGVscCBtZSB3aXRoIGNvbGxlZ2UgdHVpdGlvbiBhbmQgZ3JvY2VyeSBtb25leS4uIApIb3cgZ29vZCBhcmUgdGhleSBpbiBwbGF5aW5nIHBva2VyID8KVm91cyBwb3V2ZXogZ2FsZW1lbnQsICB0b3V0IG1vbWVudCwgc3VwcHJpbWVyIGxlcyBjb29raWVzIHF1aSBvbnQgdCByYWN0aXZzLiAKT25lIG9mIGhlciBmcmllbmRzIHdhcyByYWlzZWQgYnkgNCBtb3RoZXJzICB0aGUgb3JpZ2luYWwgcGFpcmluZyBhbmQgdGhlbiwgYWZ0ZXIgdGhleSBzcGxpdCwgdGhlIHR3byBuZXcgcGFyZW50cy4gClNoZXJyeUJvYmJpbnMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyB5ZWFycyBhZ28KVGhlIHdpbm5lcnMgd2VyZSBpbnRyb2R1Y2VkIGJ5IHRoZSBjaGFpciBvZiB0aGUgYWRqdWRpY2F0aW9uIHBhbmVsIE1hcnkgQmVubmV0dCBhbmQgYXdhcmRzIG9yZ2FuaXNlciBPbGxpZSBSb2JpbnNvbiB0byBhIGxhcmdlIGF0dGVuZGFuY2Ugb2YgZmFtaWx5IGFuZCBzdXBwb3J0ZXJzLi4gCkluIGZhY3QsIHNvbWUgZXhwZXJ0cyBhcmUgc3VnZ2VzdGluZyB0aGF0IHdoYXQgaXMgcmVhbGx5IGdvaW5nIG9uIGlzIHRoYXQgY2xhc3MgaW50ZXJlc3RzIGFyZSBiZWluZyBwcm90ZWN0ZWQgYnkgU2VjcmV0YXJ5IEdlaXRobmVyIGFuZCBoaXMgZ2FuZy4gSW4gb3RoZXIgd29yZHMsIHRoZXJlIG1heSBiZSBhIHZlbmVlciBvZiBwb3B1bGlzbSBpbiB0aGUgbmV3IGFkbWluaXN0cmF0aW9uIHJoZXRvcmljLCBidXQgaXQgaXMgZGlzZ3Vpc2luZyB0aGUgc2FtZSBvbGQgY2xhc3MgaW50ZXJlc3RzIGFuZCB0aGUgY29uc29saWRhdGlvbiBvZiB3ZWFsdGggaW4gdGhlIGhhbmRzIG9mIHRoZSBmZXcgdGhhdCBoYXMgYmVlbiBnb2luZyBvbiB1bmRlciB0aGUgZ3Vpc2Ugb2YgbmVvbGliZXJhbGlzbSBmb3IgdGhyZWUgZGVjYWRlcy4uIApJIHNlZW4gYXMgbXVjaCBhcyAzMCUgb2YgcmV0YWlsIGZvciBzb21lIG9mIHRoZSBiaWdnZXIgYnJhbmRzIGxpa2UgT21lZ2EsIGFuZCBvbmx5IDMlIG9uIHNvbWV0aGluZyBsaWtlIGEgSkxDIE1VVCBtb29uLiBBbGwgYmFzZWQgb24gaG93IGVhc2lseSB0aGV5IHNlbGwgdGhlIHBpZWNlIGlmIHlvdSBkb24gYnV5IGl0Li4gCkRlIHZvbGdlbmRlIGRhZ2VuIHphbCBKYW4gaGV0IGRhZ2JvZWsgc2NocmlqdmVuLiBIaWogemFsIHZlcnRlbGxlbiB3YXQgaGlqIGhpZXIgYWxsZW1hYWwgbWVlbWFha3QuIFZhbmRhYWcgemlqbiBlciBhbCBlbmtlbGUga2xlaW5lIHRlc3QgZ2V3ZWVzdCBvbSB6aWpuIG1vZ2VsaWpraGVkZW4gd2F0IHRlIGNoZWNrZW4uCkkgbGlrZSBob3cgbmV3cyBzZWdtZW50cyB3aWxsIGhhdmUgb24gc29tZSB0ZWVuYWdlciB3aG8gc2F5cyB0aGVpciBwYXJlbnRzIGRpZG4gdmFjY2luYXRlIHRoZW0gYW5kIHRoZXkgZGVjaWRlZCB0byBnZXQgdGhlbSBvbiB0aGVpciBvd24uIApTZWUgd2UgaGFkIGEgbW9kZWwgb2YgZ2VuZXJpYyAkMjAgMzAgZWFyYnVkIGhlYWRwaG9uZXMgdGhhdCB3ZXJlIG5vdGhpbmcgc3BlY2lhbCwgYnV0IHRoZXkgY2FtZSBpbiAzIGNvbG9yczogYmxhY2ssIGdyZXksIGFuZCBwaW5rLiBFYWNoIGNvbG9yIHdhcyBjb25zaWRlcmVkIGl0cyBvd24gaXRlbSBhcyBmYXIgYXMgdGhlIHN5c3RlbSB3YXMgY29uY2VybmVkIChwcmV0dHkgY29tbW9uIGZvciBlbGVjdHJvbmljcykuIApUaGV5IGp1c3QgZ290IGEgYnVuY2ggb2YgcGl6emFzLCBiZWVyLCBzb2RhcywgcHJldHplbHMgdGhhdCB3YXMgaXQuIApJdCB3YXMgYSBtZXJlIFJzNTAwIHRoYXQgY29zdCAxMiB5ZWFyIG9sZCBBYmhpbGFzaCBoaXMgbGlmZS4gSGlzIHR3byBmcmllbmRzIG5vdCBvbmx5IGtpbGxlZCBoaW0sIHRoZXkgbXV0aWxhdGVkIGhpcyBib2R5CldpdGggdGhlIEJvb2sgMTAxIFdpbm5pbmcgVG91cm5hbWVudCBQb2tlciBNb3ZlcywgeW91IGNhbiBsZWFybiBhbGwgYWJvdXQgdGhlIHBva2VyIHBsYXlzIHRoYXQgaGF2ZSBtYWRlIGJpZyB3aW5uZXJzIG9mIHBsYXllcnMgbGlrZSBBbm5pZSBEdWtlIGFuZCBDaHJpcyBNb25leW1ha2VyLiAKVGhpcyBpcyBteSBzdGFuZGFyZCBsaXN0IG9mIGl0cyAicHJvcyIgdGhhdCB3aWxsIGV2ZW50dWFsbHkgbGVhZCB0byBhZG9wdGlvbjpEZWNlbnRyYWxpc2VkLCBib3RoIGluIGRlc2lnbiwgYW5kIGluIG9wZXJhdGlvbiwgYW5kIGJlY29taW5nIGluY3JlYXNpbmdseSBzb1NjYWxlYWJsZSAgIHRvIHBvc3NpYmx5IDcwMDB0cHMuIChhdmVyYWdlIHN1c3RhaW5lZCA3NSBibG9ja3MgcGVyIHNlY29uZCBvdmVyIDMwIG1pbnV0ZXMgaGFzIGJlZW4gc2VlbiBvbiBhbiB1bnNhdHVyYXRlZCBtYWlubmV0IHdpdGggYSByZXBvcnRlZCBwZWFrIG9mIDc1NiBibG9ja3MgcGVyIHNlY29uZCkuU2ltcGxlICAgYSBVc2VyIGVYcGVyaWVuY2UgdGhhdCBldmVuIHlvdXIgZ3Jhbm55IGNvdWxkIHVuZGVyc3RhbmQgICBzZWUgdGhlIE5hdHJpdW0gV2FsbGV0IGZvciBleGFtcGxlV29ya2luZyB0b2RheSAobm90IGZ1dHVyZSB2YXBvdXJ3YXJlKUFuZHJvaWQsIElPUywgZGVza3RvcCBhbmQgYnJvd3NlciB3YWxsZXRzSGFyZCBQcnVuaW5nIGNvbWluZyB2LiBTb29uIHRvIGVuYWJsZSBub2RlcyBvbiBsb3cgc3BhY2UgZGV2aWNlc1NlY3VyYWJsZSBvbiBMZWRnZXIgTmFubyBTIGhhcmR3YXJlIHdhbGxldCBub3csIGFuZCBKb2x0IHNvb25FYXN5IGZvciBtZXJjaGFudHMgdG8gaW50ZWdyYXRlIGludG8gUG9pbnQgb2YgU2FsZSB2aWE6SW50ZWdyYXRlZCBjYXJkIHBheW1lbnRzIHZpYSBXaXJleFdvcmtzIGV2ZW4gaWYgeW91IG9mZmxpbmUsIGV2ZW4gd2l0aCBwYXBlciB3YWxsZXRzQ2FuIHNhZmVseSByZXVzZSBBZGRyZXNzZXMgKHVubGlrZSBJT1RBKSBtYWtpbmcgQWRkcmVzcyBCb29rcyBwb3NzaWJsZSBmb3IgYSBuaWNlciBVWE5vdCBjbGFzc2lmaWFibGUgYXMgYSBTZWN1cml0eU9uIEJpbmFuY2UgYW5kIG11bHRpcGxlIG90aGVyIGV4Y2hhbmdlcyBpbmNsdWRpbmcgTmFuZXggZXhjaGFuZ2VXb3VsZCBjb3N0IGF0IGxlYXN0IG9uZSB0aGlyZCBvZiBpdHMgbWFya2V0IGNhcCB0byBicmVhY2ggaXRzIHNlY3VyaXR5IHdpdGggYSA1MSUgYXR0YWNrUHJvb2Ygb2YgV29yayBjYW4gbm93IGJlIGZhcm1lZCBvdXQgdG8gbXVsdGlwbGUgUG9XIHNlcnZlcnMgdG8gYWxsb3cgZXZlbiBoaWdoIHZvbHVtZSBleGNoYW5nZXMgdG8gc2VuZCBtYW55IHRyYW5zYWN0aW9ucyBwZXIgc2Vjb25kU28gbXVjaCBzdXBwb3J0IHRoYXQgaXQgaGFzIHNwdW4gb2ZmIHRoZSBtZW1lIGNvaW4gQmFuYW5vLiAKV2VsbCwgYXQgbGVhc3QgSSBiZWF0IHRoZSBwYWNlIGJ1bm55IDopIEZpdmUgbWludXRlcyBzbG93ZXIgdGhhbiBteSBsYXN0IHN1bW1lciBoYWxmLiBJIHN1cHBvc2UgdGhlcmUgd2VyZSBhIGxvdCBvZiBzbG93aW5nIGZhY3RvcnMgaGVyZSB0aG91Z2ggICBpY3kgYWlyLCBtdWx0aXBsZSBsYXllcnMsIHJ1bm5pbmcgb24gc25vdywgYSB3ZWUgYml0IG9mIGVsZXZhdGlvbi4uIApHbyBiYWNrIHRvIHRoZSBzcXVhcmUgb25lLgpOZXcgeWVhciBldmUgYWJvdXQgNSB5ZWFycyBhZ28uIEkgd2FzIHVwIGFib3V0IDE2MDAgZnJvbSBwbGF5aW5nIHBva2VyIHNvIGFib3V0IDUgbWludXRlcyBiZWZvcmUgbWlkbmlnaHQgaSBkZWNpZGUgaSBnb2luZyB0byBwdXQgMTAwIG9uIGJhbmtlciBvbiB0aGUgYmFjY2FyYXQgdGFibGUgYXQgbWlkbmlnaHQuIApFZW4gdm9sZ2VuZGUgc3RvcCB3YXMgR29ya3kgSG91c2U6IGVlbiBnZXZpZXJkZSBzY2hyaWp2ZXIgKHRqYSwgb29rIGRpZSBrZW5uZW4gd2lqIG5hdHV1cmxpamsgbmlldCkgbWFhciBpayB2cm9lZyBtaWogZWVyc3QgYWYgd2F0IHdpaiBpbiBkaXQgaHVpcyBtZXQgd2VsIGVlbiBoZWxlIG1vb2llIHR1aW4ga3dhbWVuIGRvZW4uIEJpbm5lbmluIHdhcyBoZXQgZWNodGVyIHZlcnJhc3NlbmQgbW9vaTogYXJ0IG5vdXZlYXUgdGVuIHRvcCwgbWV0IGdsYXNyYW1lbiAodmFuIHNjaGVscGVuIHBhcmVsbW9lciksIGVlbiBtb29pZSB0cmFwLCBvdWRlIG1ldWJlbGVuLC4gWmVrZXIgZWVuIGtpamtqZSB3YWFyZC4gCkFuZCB0aGUgbW9yZSBlbW90aW9uIGFuZCBtb25leSBpbnZlc3RlZCBpbiB0aGUgdHJhZGUgdGhlIG1vcmUgdGhlIGVmZmVjdHMgYXJlIG11bHRpcGxpZWQuLiAKSGVyZSB0aGUgZGVhbDogdGhlcmUgYXJlIHR3byBzaWRlcy4gSXQgdG9vayBtZSBhIGxvbmcsIGxvbmcgdGltZSB0byBhY2NlcHQgdGhpcy4gSSB3YW50ZWQgdG8gYmVsaWV2ZSB0aGF0IHdlIGp1c3QgaGF2ZSBpZGVvbG9naWNhbCBkaWZmZXJlbmNlcyB0aGF0IGNhbiBiZSBicmlkZ2VkIGJ5IG11dHVhbGx5IHJlc3BlY3RmdWwgY29udmVyc2F0aW9uLgpJIHRlbGwgaGltIGl0J3MgYWxsIG9yIG5vdGhpbmcsIGVpdGhlciB5b3UgYXJlIG9yIHlvdSBhcmUgbm90IGFuZCBoZSBpcyBub3QuIApUaW1lIHdlIGxvb2sgdG8gdGhlIGZ1dHVyZSBhbmQgdGVhY2ggb3VyIHlvdW5nIHBlb3BsZSB0aGF0IHRoZXJlIGlzIHNvbWV0aGluZyB0byBsb29rIGZvcndhcmQgdG8uIFdlLCBsaWtlIGFueW9uZSBlbHNlIGRlc2lyZSB0byBsZWF2ZSBhIGxlZ2FjeS4gQ291bGQgYmUgbXV0dWFsbHkgYmVuZWZpY2lhbCBmb3IgdGhlIFRvd24gb2YgU3ByaW5nZGFsZSBhbmQgdGhlIFBhaXV0ZSB0cmliZSwiIEhlYm5lciBzYWlkLiAKSWYgSSBub3QgbWlzdGFrZW4sIHJlcGV0aXRpdmUgaW5qdXJ5IHdpdGggY3ljbGluZyBjb21lcyBkb3duIHRvIGZvcm0sIG1vc3RseS4gTWFrZSBzdXJlIHRoZSBiaWtlIGlzIGZpdCB3ZWxsIGZvciB5b3UsIGFuZCBrZWVwIHlvdXIgY2FkZW5jZSB1cCBhbmQgeW91IHNob3VsZCBiZSBnb29kLiBJZiB5b3UgZmluZCBhIHdheSB0byBwcmV2ZW50IHNhZGRsZSBzb3JlcyBsZXQgbWUga25vdyBsb2wuCldoYXQgd2FzIHNhaWQgYmV0d2VlbiB5b3UgZ3V5cz8gV2VyZSB5b3UgcHJldHR5IHNwZWNpZmljIG9uIHdoYXQgeW91IHdlcmUgZ29ubmEgYmUgZG9pbmc/IFdpdGggaGVyIGhlYXJpbmcgeW91IGd1eXMgc2F5IHRoYXQgc3R1ZmYgdG8gb25lIGFub3RoZXIgaXQgbWF5IGJlIHRpbWUgZm9yIHlvdSB0byBleHBsYWluIHRvIGhlciB0aGF0IHdoYXQgeW91IGRpZCBpcyBzb21ldGhpbmcgYWR1bHRzIGRvIHRvIGV4cHJlc3MgbG92ZSB0byBlYWNoIG90aGVyLiBJZiBzaGUgaGFzbid0IGhhZCAidGhlIHRhbGsiIHlldCwgdGhhdCBtYXkgYmUgYSBnb29kIHNlZ3dheSBpbnRvIGhhdmluZyBpdCB3aXRoIGhlci4gSSBkdW5ubyBkbyB0aGV5IGhhdmUgU2V4IEVkIGluIHNjaG9vbCBhbnltb3JlPyBJIGhlYXJkIHRoZXkgZG9uJ3QuIEJ1dCBJIHdvdWxkIHNpdCBoZXIgZG93biBhbmQgZXhwbGFpbiB0byBoZXIgdGhhdCdzIGFub3RoZXIgd2F5IGZvciBhZHVsdHMgdG8gc2hvdyBsb3ZlIGFuZCBpZiBzaGUgaGFzIHF1ZXN0aW9ucyB0cnkgdG8gYmUgaG9uZXN0IHdpdGggaGVyLiBJIGluIFRYIDEwIGFuZCBteSB2b3RlIGlzIGRpbHV0ZWQgYnkgb3ZlciAxMDAgbWlsZXMgb2YgcnVyYWwgVGV4YXMuIE15IGRpc3RyaWN0IGluY2x1ZGVzIE5XIEhvdXN0b24sIHJ1cmFsIFRleGFzLCBTRSBBdXN0aW4sIGRvd250b3duIEF1c3RpbiwgYW5kIHdlc3QgQXVzdGluLgpEb3VnIHdhcyBhbiBhbWF6aW5nIERhZCB0byBoaXMgY2hpbGRyZW4gQ2Fyb2xlIChUZXJyeSkgS2V5cywgQ2hyaXMgKFNhbmRyYSkgTGFuZ21haWQgYW5kIFNhbmRpIChSaWNrKSBWaW5jZW50LiAKSXQgd29ya3MgZmFyIG1vcmUgb2Z0ZW4gdGhhdCB5b3Ugd291bGQgdGhpbmsuLiAKWW91IHdlcmUgY29uZnVzZWQgYXMgdG8gd2h5IGhlIGRpZG4gc2hvdmUgMTBiYiBwcmUgd2l0aCBLSy4gSSBzYWlkIHRoYXQgaWYgeW91IGFyZSBwbGF5aW5nIGFnYWluc3QgYmFkIHBsYXllcnMsIHdobyBjYW4gbm90IGV4cGxvaXQgeW91LCB5b3UgZG8gbm90IG5lZWQgdG8gYmFsYW5jZSB5b3UgY2FuIG1ha2UgbW9yZSBtb25leSBiZSBleHBsb2l0aW5nIHRoZW0uIFNvIHlvdSBjYW4gb3BlbiB5b3VyIG1vbnN0ZXJzIHRvIGdldCBtb3JlIGFjdGlvbiBhbmQgb25seSBzaG92ZSB5b3VyIG1pZCBzdHJlbmd0aCBoYW5kcy4KSSBkbyBub3QgaGF2ZSByZXNwZWN0IGZvciBwZW9wbGUgd2hvIG9wZXJhdGUgaW4gdGhpcyBtYW5uZXIsIGFuZCB3aGlsZSBJIHRoaW5rIHRoZSBwb2tlciBjb21tdW5pdHkgaGFzIGEgcGFydGljdWxhciBjb21wYXNzaW9uIGZvciB0aGlzIHR5cGUgb2YgYmVoYXZpb3IsIGl0IHdpbGwgYnVybiBicmlkZ2VzIHF1aWNrbHkgaW4gdGhlIGJ1c2luZXNzIHdvcmxkLCBhbmQgSSB3b3VsZCBub3Qgd2FudCB0byBoYXZlIHRvIGxpdmUgd2l0aCB0cnlpbmcgdG8gZXhwbG9pdCBteSBmcmllbmRzIHRvIG1ha2UgbW9yZSBtb25leS4uIApXaGlsZSBoZSBieSBkZWZpbml0aW9uIHdhcyB0aGVyZSBhbHJlYWR5IHRoZSB2aWxsYWluLCBoZSBuZXZlcnRoZWxlc3MgZm91Z2h0IGJyYXZlbHkgQnJpdGlzaCB0YW5rcyB3aXRoIGxpZ2h0IHdlYXBvbnMgdW50aWwgcmVpbmZvcmNlbWVudHMgY2FtZSBpbi4gSGUgc2F3IG1hbnkgY29tcmFkZXMgZGllIGFuZCBmZWx0IGd1aWx0eSBiZWNhdXNlIGhlIGp1c3QgbG9zdCBoaXMgYXJtLiBNeSBncmFuZG1vdGhlciB0b2xkIG1lIGhvdyBkZXByZXNzZWQgaGUgd2FzIHdoZW4gaGUgY2FtZSBiYWNrLi4gCiJJdCdzIGEgZGVlcCBkaXZlIGludG8gd2hhdCB0aGV5J3JlIGRvaW5nIG91dCB0aGVyZSwgdGhlIGltcGFjdCBvbiB0aGVpciBsaXZlcyBhbmQgd2hlcmUgaXQgY2FtZSBmcm9tLCIgc2FpZCBQZXRlciBRdWFsbGlvdGluZSBvZiB0aGUgY291cnNlLiBIZSBpcyB0aGUgY28gZm91bmRlciBvZiB0aGUgT3JnYW5pemF0aW9uIGZvciBQcm9zdGl0dXRpb24gU3Vydml2b3JzIChPUFMpLCBhIFNlYXR0bGUgbm9ucHJvZml0IHRoYXQgaGVscHMgY29ubmVjdCBwcm9zdGl0dXRlZCB3b21lbiB3aXRoIHNvY2lhbCBzZXJ2aWNlcy4KQnV0IHdlIHRoZSBQZW9wbGUgYWxzbyByZWNvcmQgYWxsIHRoaXMgd2l0aCBhbiB1bnByZWNlZGVudGVkIGFtb3VudCBvZiBmcmVlZG9tIGFuZCBtdWx0aXBsaWNpdHkgb2YgbWVkaWEuLiAKSSByZWFsbHkgd2FudCBpdCB0byBiZSB0aGlzIHllYXIsIGJ1dCBJIGRvbiB0aGluayBzby4gSSBkbyBhZ3JlZSB3aXRoIHlvdSBhYm91dCB0aGVtIGFsbCBjb21pbmcgb3V0IGluIGFib3V0IHRoZSBzYW1lIHllYXIuIEkganVzdCBrZWVwIGhhdmluZyB0aGlzIHN0dXBpZCBleHRyYSByZWFsaXN0IHZvaWNlIGluIG15IGhlYWQgc2F5aW5nIDIwMjAgYmVjYXVzZSBJIHRoaW5rIHRoYXQgaXMgd2hlbiB0aGUgbmV3IGNvbnNvbGVzIHdpbGwgY29tZSBvdXQuIApUaGUgaG90ZWwgaXMgZG9uZSB1cCBpbiBpbmR1c3RyaWFsIGNoaWMsIHdpdGggbG90cyBvZiB3b29kIGFuZCBleHBvc2VkIGNvbmNyZXRlLiBNeSAkMTc5IHJvb20gaGFkIGJyYXNzIGxhbXBzIHdpdGggb2xkIGZhc2hpb25lZCBFZGlzb24gYnVsYnMsIGRhcmsgY29sb3JzLCBhbmQgZnJhbWVkIGRpY3Rpb25hcnkgcGFnZXMgcHJpbnRlZCBvdmVyIHdpdGggd2hpbXNpY2FsIHNjZW5lcywgc3VjaCBhcyBhIHBpbmsgZWxlcGhhbnQgcmlkaW5nIGEgYmljeWNsZS4gVGhlcmUgYSByZWFsIGJvb2sgZml4ZWQgdG8gdGhlIHdhbGwgbGlrZSBhIHBpZWNlIG9mIGFydCwgb3BlbiB0byBwYWdlcyAxMDggMTA5LiBTb21lIEdvb2dsaW5nIHJldmVhbHMgdGhlIGJvb2sgdG8gYmUgVHJlYXN1cmUgQ2hlc3QsIHZvbHVtZSA0IG9mIHRoZSBNeSBCb29rIEhvdXNlIGNvbGxlY3Rpb24gYnkgT2xpdmUgQmVhdXByIE1pbGxlciwgcHVibGlzaGVkIGluIDE5MjAuIFN0cmFuZ2UsIHJpZ2h0PyBJbnRlcmVzdGluZyBhbmQgb3JpZ2luYWwuIE5vdCB0eXBpY2FsIGNhc2lubyBkZWNvci4KVGhlIHNjZW5lcyBpbiB3aGljaCBTdG91dCBkZWZlbmRzIGhpcyBhbmFseXNpcyBhZ2FpbnN0IHNvbWUgb2YgaGlzIHNtYXJ0ZXN0LCByaWNoZXN0IGFuZCBtb3N0IGVudGl0bGVkIHBlZXJzIGFyZSBhbW9uZyB0aGUgbW9zdCBkcmFtYXRpYyBpbiB0aGUgbm92ZWwuLiAKSGUgd2FzIHdyb25nLiBJIGtuZXcgZXhhY3RseSB3aGVuIEkgcGlzc2VkIGl0IG91dC4gSW4gdGhlIHNlY29uZCBzdGFsbCBpbiB0aGUgUnVzc2VsbHZpbGxlLCBBbGFiYW1hIFdhbG1hcnQuIFRoZSByZWFzb24gSSBrbm93IGlzIGJlY2F1c2UgaXQgZmVsdCBsaWtlIHNvbWVib2R5IGdyYWJiZWQgbXkgZGljaywgYW5kIGhpdCB0aGUgdG9wIG9mIGl0IGxpa2UgdGhleSB3ZXJlIHRyeWluZyB0byBoYW1tZXIgYSBuYWlsIGludG8gaXRzIGV0ZXJuYWwgcmVzdGluZyBwbGFjZS4gCkJhbmtlciB0d286IEJ1dCBpc24gdGhhdCB3aGF0IGNhdXNlZCB0aGUgY3JlZGl0IGNydW5jaCBhbmQgZWNvbm9taWMgZG93bnR1cm4/Ckl0IGlzbiBldmVuIGFib3V0ICJmaW5kaW5nIHRoZSBiZXN0IGFjdG9yLiIgVGhlaXIgdmFsdWVzIGFyZSBhcHBsaWVkIHNlbGVjdGl2ZWx5IHNvIGxvbmcgYXMgaXQgc3VwcG9ydHMgdGhlaXIgYmlhc2VzLiAKV2VsbCBpdCB3YXMgZ29vZCBpbiB0aGUgZnVuY3Rpb25hbCBzZW5zZS4gV2hlcmUgZWxzZSBjYW4geW91IGhhdmUgYSBmdWxsIG9uIHRocmVlc29tZSB3aXRoIGJpc2V4dWFsIHdvbWVuIGFuZCBpbmNsdWRpbmcgc2V4IHRveXM/IEl0IHdhcyBhIGxpdHRsZSBsYWNraW5nIGluIHBlcnNvbmFsIHRlcm1zIG9yIGdlbnVpbmUgZW50aHVzaWFzbSwgYnV0IGFnYWluLCB0aGF0IG5vdCB3aHkgcGVvcGxlIGdvIHRvIHRoZSBFZGVuIENsdWIuCk1yIENoYW8gWWFuIGlzIGEgcXVhbGlmaWVkIGxpY2Vuc2VkIFRDTSBwcmFjdGl0aW9uZXIgd2l0aCBzaWduaWZpY2FudCBleHBlcmllbmNlIGluIHRyZWF0aW5nIGJhY2sgcGFpbiwgaW5zb21uaWEgYW5kIHN0cm9rZSBzZXF1ZWwuCkhlIGJvdWdodCB1cyB0aWNrZXRzIHRvIGEgaG9ja2V5IGdhbWUuLiAKIkNsZWFyIGNvbW11bmljYXRpb24sIGNvdXBsZWQgd2l0aCBhbHdheXMgb2J0YWluaW5nIGluZm9ybWVkIGNvbnNlbnQgZnJvbSBjbGllbnRzLCBjYW4gdmlydHVhbGx5IGVsaW1pbmF0ZSB0aGUgcmlzayBvZiBsaXRpZ2F0aW9uLCIgdGhlIEFNVEEgYWR2aXNlcy4gCkl0J3MgYmFzaWNhbGx5IGEgbG9zZSBsb3NlIGZvciBtb2RlcmF0ZSBkZW1vY3JhdHMgYmVjYXVzZSBvZiB5b3Ugc2F5IG5vIHlvdSBhbGllbmF0ZSB5b3VyIHByb2dyZXNzaXZlIHdpbmcgYW5kIGlmIHlvdSBzYXkgeWVzIHlvdSBhbGllbmF0ZSB5b3VyIG1vZGVyYXRlIHdpbmcuIFRoZSB3aG9sZSB0aGluZyBpcyBhIHB1bmNoaW5nIGJhZyBmb3IgdGhlIHJpZ2h0IHRoYXQgY2FuIHBvdGVudGlhbGx5IG1ha2UgYWN0dWFsIHByb2dyZXNzIGV2ZW4gaGFyZGVyLi4gCjIuIERlcGxveWVkIHRoZSBwcm9qZWN0LCBjcmVhdGVkIGEgRmlsZSBzZW5kIHBvcnQsIGZpbHRlcmVkIGl0IHRvIHRoZSByZWNlaXZlIHBvcnQgaW1wb3J0ZWQgZnJvbSB0aGUgZ2VuZXJhdGVkIGJpbmRpbmdzIGZpbGUuCkEgeWVhciBsYXRlciwgTGFzIFZlZ2FzIHBvbGljZSBhbmQgdGhlIEZCSSBoYXZlIGZvdW5kIG5vIG1vdGl2ZSBmb3IgdGhlIHJhbXBhZ2UuIApIZSBqdXN0IGhhcHBlbmVkIHRvIGhhdmUgdGhlIGJpZ2dlc3QgcG90ZW50aWFsIHZvdGVyIGJhc2UgYW5kIHRoZSBiZXN0IGNhcGFiaWxpdHkgdG8gbWF4aW1pemUgaXQuSSBwZXJzb25hbGx5IHRoaW5rIHRoZSAkMTBtIHByaWNldGFnIGFuZCB0aGUgc2xldyBvZiBjb3VudGVyc3VpdHMgY29uZmlybXMgVExGIGlzIGp1c3QgdHJ5aW5nIHRvIGludGltaWRhdGUgSGFyaXRoIGludG8gYmFja2luZyBkb3duLiBUaGV5IGtub3cgdGhleSBub3QgZ29pbmcgdG8gaG9sZCB3YXRlciBpbiBjb3VydCwgYnV0IHRoZXkgbGlrZWx5IGhvcGluZyB0aGUgbGVnYWwgaG9vcHMgSGFyaXRoIG5vdyBoYXMgdG8gZ28gdGhyb3VnaCBhbmQgdGhlIGJhZCBwcmVzcyBoZSBnb2luZyB0byBnZXQgaW4gdGhlIHByb2Nlc3MgKGEgTmFqaWIgbmFtZWRyb3AgaXNuIGV4YWN0bHkgcHJldHR5IGhvdCByaWdodCBub3cpIGlzIGVub3VnaCB0byBnZXQgaGltIHRvIHNpdCBkb3duLi4gClNvIC4gV2hhdCBub3c/Ckp1c3QgcGxheSBldmVyeSBoYW5kIGFuZCBldmVyeSBiZXQgYW5kIHJhaXNlIHVudGlsIHRoZSBiaXR0ZXIgZW5kLiAKS2lkIGtpbGxlZCBoaXMgZ3JhbmRtb3RoZXIuIFVzZWQgaGVyIGNyZWRpdCBjYXJkIGFsbCB3ZWVrZW5kIFdlbnQgdG8gYSBkYW5jZS4gV2VudCB0byBQaXp6YSBIdXQgd2l0aCBhIGRhdGUuIEhhZCBhIHN0ZXJlbyBpbnN0YWxsZWQuIENhbGxlZCBmYW1pbHkgbWVtYmVycyBpbiBhbm90aGVyIHN0YXRlIG92ZXIgYW5kIG92ZXIgbGlrZSBub3RoaW5nIGhhcHBlbmVkLgpJIHVzZSB0aGF0IHdvcmQgbG9vc2VseSBzaW5jZSBvdXIgImNvbW11bmljYXRpb24iIGNvbnNpc3RlZCBvZiBXZW5kaSBhbmQgSSBsb29raW5nIHVwIGEgd29yZCBpbiB0aGUgZGljdGlvbmFyeSwgcmVwZWF0aW5nIGl0LCBhbmQgaGF2aW5nIHRoZW0gbm9kIHZpZ29yb3VzbHkuIFdlIHdlcmUgdmVyeSBjb21mb3J0YWJsZSB0aGVyZSBub25ldGhlbGVzcywgYW5kIG9uIG91ciB3YXkgb3V0IGluIHRoZSBtb3JuaW5nLCBBZGVtJ3MgbW9tICh3aG8gd2FzIHNpdHRpbmcgb24gdGhlIGRpcnQgZmxvb3IgaW4gdGhlIGtpdGNoZW4gYmFraW5nIGJyZWFkKSBzZW50IHVzIG9uIG91ciB3YXkgd2l0aCBzb21lIGZyZXNoIGJyZWFrZmFzdC4gCkkgYW0gaGFwcHkgYW5kIGF0IHBlYWNlIHJpZ2h0IG5vdyBhbmQgd2lzaCBhbGwgbXkgZnJpZW5kcyB0aGUgc2FtZS4gV2hlbiBpdCBpcyB5b3VyIHRpbWUsIG15IGZsYXAgaXMgb3BlbiBhbmQgdGhlIGhhcHB5IGh1bnRpbmcgZ3JvdW5kcyBib3VudGlmdWwuIFdlIHdpbGwgbWFrZSBtZWRpY2luZSwgYW5kIG1ha2UgbWVhdCwgYW5kIHBhc3MgdGhlIHBlYWNlIHBpcGUgd2hpbGUgdGhlIHNxdWF3cyB0ZW5kIHRvIHRoZSBjaG9yZXMgYW5kIHRha2UgY2FyZSBvZiB0aGUgeW91bmcuIApUaGlzIGlzIHRoZSBhbnN3ZXIuIEkgZm91bmQgYSBsb2NhbCBkcnkgY2xlYW5lcnMgdGhhdCBkb2VzIGFsdGVyYXRpb25zIHNpbmNlIEkgY2FuJ3Qgc2V3LiBPbiBhIHdoaW0gSSB0b29rIGEgc21hbGxlciBwYWNrIGluIGFuZCBhc2tlZCBpZiB0aGV5IGNvdWxkIGRvIGhlYXZ5IGR1dHkgc2V3aW5nIGFuZCBhZGQgYSBjb3VwbGUgZXh0ZXJpb3IgcG9ja2V0cy4gSSBoYWQgYSBjb3VwbGUgbWVzaCBwb2NrZXRzIEkgcGlja2VkIHVwIGF0IHN1cnBsdXMgc3RvcmUgYW5kIG9sZCByYWluIGphY2tldCB0aGF0IG5vIGxvbmdlciBmaXQgdG8gdXNlIHRoZSBtYXRlcmlhbCBmb3IgcmVpbmZvcmNlbWVudC4gTGl0dGxlIG9sZCBsYWR5IHdhcyBhYmxlIHRvIHNlZSB3aGF0IEkgaGFkIGluIG1pbmQuIFNoZSBzYWlkIGNvbWUgYmFjayBpbiA0IGRheXMuIEkgd2VudCBiYWNrIGZ1bGx5IHRoaW5raW5nIGl0IHdvdWxkIGJlIGFjY2VwdGFibGUgYW5kIG1heWJlIGNvc3QgJDMwLiBJdCB3YXMgcGVyZmVjdCBhbmQgc2hlIG9ubHkgY2hhcmdlZCBtZSAkOS4gUGFja3MgYXJlIGp1c3QgdGV4dGlsZXMsIHRoZXkgY2FuIGJlIG1vZGRlZCBob3dldmVyIGJ5IHRoZSBza2lsbGVkLgpTYXVmIHF1ZSBqZSBuJ2FpIGRjb3V2ZXJ0IG1hIGNvbmZvcm1pdCBhdSBtb2RsZSBhbnRpcXVlIHF1J2FwcnMgYXZvaXIgdCBpbnN1bHQuUmllbiAgdm9pciBhdmVjIGxlICJjeW5pc21lIG1vZGVybmUiIHF1aSBtJ2EgdCByZXByb2NoLiAKU2hlIHNhaWQ6ICJJdCB3YXMgaHVtaWxpYXRpbmcgYW5kIEkgd2FzIHV0dGVybHkgYXNoYW1lZC4gQnV0IGFzIHNvb24gYXMgbXkgZXggaHVzYmFuZCBkaWQgdGhhdCBJIGtuZXcgSSBoYWQgdG8gbGVhdmUgaGltLgpQcm9kdWN0aW9uIGdyb3dzIGFub3RoZXIgdHdvIG1pbGxpb24gYmFycmVscyBhIGRheSwgd2UgY291bGQgdGFrZSBtYXJrZXQgc2hhcmUsIGJ1dCBob3cgbG9uZyB3b3VsZCBPUEVDIGFsbG93IHRoYXQgdG8gaGFwcGVuPyBzYWlkIFNjb3R0IEQuIFNoZWZmaWVsZCwgY2hhaXJtYW4gb2YgUGlvbmVlciBOYXR1cmFsIFJlc291cmNlcywgYSBtYWpvciBQZXJtaWFuIHByb2R1Y2VyLiAKQ2xhcmtlIGFuZCBEci4gU2hpaCBib3RoIGhhdmUgaW1wcmVzc2l2ZSByZWNvcmRzIG9mIHByb2R1Y2luZyBpbXBhY3RmdWwgaW50ZWxsZWN0dWFsIHByb3BlcnR5IGFuZCBzcHVycmluZyBpbm5vdmF0aW9uIHRoYXQgaXMgcGVydGluZW50IHRvIHRoZSBIb3VzdG9uIHJlZ2lvbiwgRWxuYXNoYWkgc2FpZC4gCkZvciBCb2VobmVyIGFuZCB0aGUgYm95cyBvbiB0aGUgR09QIHNpZGUsIGl0IHdhcyB0aGUgZ3JlYXQgbGVhZGVyc2hpcCB0ZXN0IHN1YnBsb3QuIEhlIHdvdWxkIHByb3ZlIGhvdyB0b3VnaCBoZSB3YXMsIGRlbW9uc3RyYXRlIGhpcyBsZWFkZXJzaGlwIG1ldHRsZSwgZ2V0IGVxdWFsIHRpbWUgd2l0aCB0aGUgcHJlc2lkZW50LCBhbmQgZXZlbiBsb29rIHByZXNpZGVudGlhbC4gCkFmdGVyIGFib3V0IHR3byB3ZWVrcyBvZiB0aGlzLCB3ZSB3ZXJlIGF0IE1lbGlzc2EgaG91c2UgYWdhaW4sIE1lbGlzc2EgYW5kIERhdmUgaGFkIHZhbmlzaGVkLiBBbmQgTGF1cmEgYW5kIEkgd2VyZSBzaXR0aW5nIG9uIHRoZSBjb3VjaC4gCkhhdmluZyB5b3UgdGFrZSBjYXJlIG9mIHRoZSBjaGlsZCBmb3Igb25lIGV2ZW5pbmcgcGVyIHdlZWssIG9yIGEgZGF5IGV2ZXJ5IG90aGVyIHdlZWtlbmQgc28gdGhhdCB0aGUgbW90aGVyIGNhbiBoYXZlIHRpbWUgZm9yIGhlcnNlbGYgb3IganVzdCByZWxheCB3aWxsIHN0aWxsIGJlIGEgYmlnIHJlbGllZiBmb3IgaGVyLi4gClRoZXkgYXJlIGFsc28gbm90IGludGVyZXN0ZWQgaW4gcGxheWluZyBmYWlyIGluIGFueSBzaXR1YXRpb24uIEl0IGlzIHRoZXNlIHNhbWUgY2hhcmFjdGVyaXN0aWNzIHRoYXQgbWFrZSB1cCB3aGF0IGlzIGNvbW1vbmx5IGtub3duIGtub3cgZGF5cyBhcyBhIHBsYXllci5XZSBoYXZlIHJlY2VpdmVkIGEgbG90IG9mIGZlZWRiYWNrIGFuZCBxdWVzdGlvbnMgYXNraW5nIGZvciBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHBlb3BsZSB3aG8gYXJlIGNoYXJhY3RlciBkaXNvcmRlcmVkIGFuZCBob3cgdG8gdGVsbCBpZiB5b3VyIHBhcnRuZXIgaXMgb25lIG9mIHRoZW0uIApUaGFuayB5b3UsIHlvdSBzcGVhayB0aGUgdHJ1dGguIEkgd29yayBhdCBhIGJpa2Ugc2hvcCBhbmQgb2ggbXkgZ29kLCBpZiBJIGhhZCBhIG5pY2tsZSBmb3IgZXZlcnkgdGltZSBJIHNhdyBhIGRhbWFnZWQgU2Nod2lubiBvciBNb25nb29zZSBjb21lIGludG8gdGhlIHNob3AsIEkgd291bGQgaGF2ZSBsaWtlLCB1aCwgbG90cyBvZiBuaWNrbGVzLiBUaGUgc2FkZGVzdCBwYXJ0IGlzIHRoYXQgbW9zdCBvZiB0aGUgcGVvcGxlIGJ1eWluZyB0aG9zZSBiaWtlcyBhdCBXYWxtYXJ0IG9yIFRhcmdldCBhcmVuIGV2ZW4gYXdhcmUgdGhhdCB0aGV5IGJ1eWluZyBnYXJiYWdlLCBhbmQgdGhlbiB0aGV5IGNvbWUgaW50byBvdXIgc2hvcCBwaXNzZWQgdGhhdCB0aGVpciB3aGVlbCBpcyBiZW50IG9yIHRoZWlyIGJyYWtlIGNhbGlwZXIgc25hcHBlZCBvZmYsIHdoZW4gdGhleSAianVzdCBnb3QgdGhpcyB0aGluZyAyIHdlZWtzIGFnby4iIEkgb25jZSBoYWQgYSBndXkgY29tZSBpbiB3aXRoIGEgYnJhbmQgbmV3IFNjaHdpbm4gdGhhdCBzcHJhbmcgYSBmbGF0IGp1c3QgYXMgaGUgd2FzIHRha2luZyBpdCBvdXQgb2YgdGhlIGxvY2FsIFdhbG1hcnQgdG8gaGlzIGNhci4gCkFsdGhvdWdoIHR3byB0aGlyZHMgb2YgVmEgR2EgeW91bmcgYXJlIG1hbGUsIGZldyBtYWxlcyBzdXJ2aXZlIHRvIGFkdWx0aG9vZC4gVGhlIFZhIEdhIG5lZWQgbWVhdCBhcyB3ZWxsIGFzIHZlZ2V0YXRpb24gdG8gc3Vydml2ZSBhbmQgaGF2ZSByZXNvcnRlZCB0byBjYW5uaWJhbGlzbTsgaW5qdXJlZCBhbmQgZGlzb2JlZGllbnQgbWFsZXMgYXJlIGVhdGVuLiBGZW1hbGVzIGFyZSBuZXZlciBlYXRlbiBhcyBtYWxlcyBnYWluIHNvY2lhbCBzdGF0dXMgYmFzZWQgb24gdGhlIHNpemUgb2YgdGhlaXIgJ2hlcmQnIG9mIGZlbWFsZXMuLiAKVGhlcmUgYXJlIHBsYWNlcyBpbiB0aGUgVVMgSSB3b3VsZG4gZ28gYWdhaW4sIGJ1dCBhbHNvIHBsZW50eSBvZiBwbGFjZXMgSSB3b3VsZCBsb3ZlIHRvIHJldmlzaXQuIEkgcmVhbGx5IGRpZG4gbGlrZSBEYWxsYXMvRm9ydGggV29ydGggaW4gVGV4YXMgdmVyeSBtdWNoLCBidXQgdGhvdWdodCBBdXN0aW4gd2FzIGxvdmVseS4gSSBoYXZlIG5vIGRlc2lyZSB0byB2aXNpdCBMb3MgQW5nZWxlcyBhZ2FpbiwgYnV0IG5vcnRod2VzdCBVUyBpcyB3b25kZXJmdWwuIAoiUXVlZW5zbGFuZCdzIG1heGltdW0gYmV0IGZvciBjbHViIGFuZCBob3RlbCBnYW1pbmcgbWFjaGluZXMgaXMgdGhlIGVxdWFsIGxvd2VzdCBuYXRpb25hbGx5IGFuZCBpcyBsb3dlciB0aGFuIE5ldyBTb3V0aCBXYWxlcyBhbmQgdGhlIEFDVCwgc2hlIHNhaWQuClNvbWUgb2YgbXkgY293b3JrZXJzIGFyZSB1dHRlciBibG9icyB3aG8gaGF2ZSBubyBjbHVlIGhvdyBnb29kIHRoZXkgaGF2ZSBpdC4gCkRlciBQc3ljaG9sb2dlIFN0ZXZlbiBQaW5rZXIgemVpZ3QgZGllcyBpbiBzZWluZW0gQnVjaCBFbmxpZ2h0ZW5tZW50IE5vdyBpbiBlcmZyZXVsaWNoIG5jaHRlcm5lciBBcnQgdW5kIGF1ZiBzb2xpZGVyIFphaGxlbmJhc2lzOiBXaHJlbmQgenUgQmVnaW5uIGRlcyAyMC4gCkkgcHVsbGluZyBmb3IgbXkgYm95LCBkZXNwaXRlIG9ubHkgaGF2aW5nIHJlYWQgMSB2b2x1bWUgb2YgYmVyc2Vyay4gNCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvTm90IG11Y2ggdG8gc2F5IGFib3V0IHRvZGF5cyB2b3RlLCBvdGhlciB0aGFuIEtpbGx1YSBpcyBhYm91dCB0byBlbmQgdGhpcyBtYW5zIHdob2xlIGNhcmVlci4gClN1cmUsIHRoYXQgbWVhbnMgc29tZXRpbWVzIHNsaW5naW5nIG11ZCwgc29tZXRpbWVzIGJlaW5nIGRpcnR5LCBidXQsIGZvciB0aGUgbW9zdCBwYXJ0LCB0aGV5IGhhdmUgZ29uZSB3ZWxsIG91dCBvZiB0aGVpciB3YXkgdG8gdHJ5IGFuZCBhZGhlcmUgdG8gdGhlIHJ1bGVzIG9mIGRlY29ydW0uLiAKSSBhZ3JlZSB3aXRoIHByZXR0eSBtdWNoIGV2ZXJ5dGhpbmcgeW91IHNhaWQsIHdoaWNoIGlzIHByb2JhYmx5IHVuc3VycHJpc2luZyBiZWNhdXNlIFBidEEgaXMgbXkgbWFpbiBnYW1pbmcgaWRpb20uIFlvdSBleHBsYWluIHRoZSBhcHBlYWwgd2VsbCEKTGl0Y2hlZFN3ZXR0ZXJzICA1MSBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvClNvbWUgb2YgdGhlIG1ham9yIG9ubGluZSBwb2tlciBzaXRlcyBvZmZlciB2YXJ5aW5nIGZlYXR1cmVzIHRvIGVudGljZSBuZXcgcGxheWVycyBhbmQgc2VsZWN0IHNpdGVzIGJhc2VkIG9uIGdhbWVzLCByYXRlcywgY29tcGV0aXRpb24sIHByb21vdGlvbnMgYW5kIGJvbnVzZXMgb2ZmZXJlZCBieSB0aGUgc2l0ZS4uIApXYXMgdGhlcmUgYW55dGhpbmcgdGhhdCBtYWRlIHlvdSBoZXNpdGF0ZSB0byBnbyBhbGwgaW4gb24gdGhpcyBuZXdseSBjb25zdHJ1Y3RlZCB2YWx1ZSBwcm9wPwpJIHdvdWxkIGxpa2UgdG8gc2VlIG1vcmUgd29yayBkb25lIG9uIG5vIGxpbWl0IGhvbGQgYXMgSSB0aGluayBzb2x2aW5nIHRoYXQgcHJvYmxlbSB3aWxsIG9mZmVyIHByYWN0aWNhbCBpbnNpZ2h0cyBpbnRvIGhvdyBvbmUgY2FuIGVmZmVjdGl2ZWx5IG1hbmFnZSByaXNrIHVuZGVyIGluY29tcGxldGUgaW5mb3JtYXRpb24uIEFjdHVhbGx5LCBJIHRob3VnaHQgTGltaXQgcG9rZXIgd2FzIHdlYWtseSBzb2x2ZWQgeWVhcnMgYWdvLCBidXQgdGhpcyBwYXBlciBpcyBxdWl0ZSByZWNlbnQuSW4gcmVnYXJkcyB0byBwb2tlciwgdGhlIHdheSBJIHNlZSBpdCBpcyBhcyBhIHN0ZXBwaW5nIHN0b25lLiAKTXkgaW5zaWRlcyBzY3JlYW1lZC4gCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBwdXJzdWluZyBhIGhvYmJ5IGluIGNvbGxlY3RpbmcgY2FzaW5vIHBva2VyIGNoaXBzLCBpdCBpcyBpbXBvcnRhbnQgdG8ga25vdyBob3cgdG8gaWRlbnRpZnkgY2FzaW5vIGdyYWRlIHBva2VyIGNoaXBzLiBCeSBkb2luZyBzbywgeW91IGNhbiBvcGVuIHVwIGEgd2hvbGUgbmV3IGxldmVsIG9mIHByb2ZpdHMgZm9yIHlvdXJzZWxmLiAKIkxpc2Egc2FpZCBzb21ldGhpbmcgdGhhdCBzZXQgbXkgc2lzdGVyIG9mZiBhbmQgW0tpbV0ga2luZCBvZiBzYWlkIHNvbWV0aGluZyB0aGF0IHJlYWxseSwgcmVhbGx5IHVwc2V0IExpc2EgUmlubmEgYW5kIHNoZSBqdXN0IGxvc3QgaXQuIFNoZSBraW5kIG9mIGx1bmdlZCBhY3Jvc3MgdGhlIHRhYmxlIGFuZCBuZXh0IHRoaW5nIHlvdSBrbm93IGV2ZXJ5b25lIGlzIHNjcmVhbWluZy4gQW5kIHRoZW4gc2hlIHBpY2tlZCB1cCBhIGdsYXNzLCB0aHJldyBpdCB3ZW50IGZseWluZyBldmVyeXdoZXJlLCIgS3lsZSB0b2xkIHVzLi4gCkZvciBzdHVkaWVzIGluIGNoaWxkcmVuLCBkYXRhIHdlcmUgYWxzbyBleHRyYWN0ZWQgb24gY29uZGl0aW9uIGFuZCBhZ2UuTWV0aG9kcyBvZiBzeW50aGVzaXNIb3cgd2VyZSB0aGUgc3R1ZGllcyBjb21iaW5lZD9UaGUgcmVzdWx0cyBvZiB0aGUgc3R1ZGllcyB3ZXJlIHJlcG9ydGVkIHNlcGFyYXRlbHkgZm9yIG5lb25hdGVzIGFuZCBvbGRlciBjaGlsZHJlbi4gCjk1JSBzdXJlIEthaSBjYW4gZmlnaHQgYW5kIGlzIGp1c3QgYSB3ZWFrbGluZyBmcm9tIHdoYXQgd2Ugc2F3ICsgaGlzIGJvZHkgdHlwZSBjb21wYXJlZCB0byB0aGVzZSAiIHRlZW5hZ2VycyAiLiAKTU9TVCBISUdIIEdPRCByZXZlYWxlZCB0aGUgcHJvZ3Jlc3Npb24gb2YgTGFib3IgcGFpbnMgb2YgYSB3b21lbiAocHJvZ3Jlc3MgaW4gZnJlcXVlbmN5IGludGVuc2l0eSBvZiBuYXR1cmFsIGRpc2FzdGVycykgdG8gdGhlIHdob2xlIHdvcmxkLgpQbGFjZSBhbiBvZGRzIGJldCBpbiBjcmFwcy4gT2RkcyBiZXRzIGFyZSBvbmUgb2YgeW91ciBiZXN0IHNob3RzIGF0IHdpbm5pbmcgYmVjYXVzZSB0aGUgaG91c2UgaGFzIG5vIGVkZ2UuIEl0J3MgYSBiZXQgdGhhdCB0aGUgc2hvb3RlcidzIGZpcnN0IHJvbGwgKHRoZSAicG9pbnQiKSB3aWxsIGdldCByb2xsZWQgYWdhaW4gYmVmb3JlIHRoZXkgcm9sbCBhIDcuIFlvdSBjYW4gYWxzbyBiZXQgb24gdGhlIDcgY29taW5nIGZpcnN0LCBidXQgdGhhdCdzIGEgbGVzcyBwb3B1bGFyIGNob2ljZSBzaW5jZSB5b3UncmUgd2lubmluZyB3aGVuIHRoZSBvdGhlciBwbGF5ZXJzIGFyZSBsb3NpbmcuWzNdCkJha2UgYXQgMzUwIGZvciAyMCAyNSBtaW51dGVzIG9yIHVudGlsIGEgdG9vdGhwaWNrIGluc2VydGVkIG5lYXIgdGhlIGNlbnRlciBjb21lcyBvdXQgY2xlYW4uIENvb2wgb24gYSB3aXJlIHJhY2suIApHcmF2ZXNlbiBtYWRlIHRoZSBtb3ZlIHRvIFJlYWwgTWFkcmlkIGFmdGVyIGJlY29taW5nIHVuZG91YnRlZGx5IG9uZSBvZiBFdXJvcGUncyBsZWFkaW5nIG1pZGZpZWxkZXJzIGF0IHRoYXQgcG9pbnQgZHVlIHRvIGhpcyBwZXJmb3JtYW5jZXMgZm9yIGJvdGggRXZlcnRvbiBhbmQgRGVubWFyay4KQnV0IGxldCdzIGltYWdpbmUgdGhhdCB5b3UgYmVhdCB0aGUgb2RkcyBhbmQgaGl0IHRoZSBqYWNrcG90LiBDZWxlYnJhdGUgcXVpY2tseSwgYmVjYXVzZSB3ZSdsbCBnZXQgbW9zdCBvZiB0aGF0IG1vbmV5IGJhY2sgYmVmb3JlIHlvdSBsZWF2ZSB0aGUgYnVpbGRpbmcuIkxhZGllcyBhbmQgZ2VudGxlbWVuLCBiZWZvcmUgZXhpdGluZyB0aGUgZmFjaWxpdHkgcGxlYXNlIGRlcG9zaXQgYWxsIHdpbm5pbmdzIGludG8gb3VyIGNvbnZlbmllbnRseSBsb2NhdGVkICdiYW5rcy4nIi4gCkluIGFkZGl0aW9uLCBMaWJyYXR1cyBoYXMgYSB1bmlxdWUgc2VsZiBpbXByb3ZlbWVudCBtb2R1bGUgdG8gYXVnbWVudCB0aGUgYmx1ZXByaW50IHN0cmF0ZWd5IG92ZXIgdGltZSB0byBjb21wdXRlIGFuIGV2ZW4gY2xvc2VyIGFwcHJveGltYXRpb24gdG8gTmFzaCBlcXVpbGlicml1bSBpbiBwYXJ0cyBvZiB0aGUgZ2FtZSB0cmVlIHdoZXJlIHRoZSBvcHBvbmVudHMgaW4gYWdncmVnYXRlIGhhdmUgZm91bmQgcG90ZW50aWFsIGhvbGVzIGluIGl0cyBzdHJhdGVneS5JbiB0ZXJtcyBvZiBldmFsdWF0aW9uICAgaW4gYWRkaXRpb24gdG8gd2hhdCBMZXR0ZXJSaXAgd3JvdGUgYWJvdmUgYWJvdXQgdGhlIGV2YWx1YXRpb24gYWdhaW5zdCBodW1hbnMgICBEZWVwU3RhY2sgd2FzIG5ldmVyIHNob3duIHRvIG91dHBlcmZvcm0gcHJpb3IgcHVibGljbHkgYXZhaWxhYmxlIHRvcCBBSXMgaW4gaGVhZCB0byBoZWFkIHBlcmZvcm1hbmNlLCB3aGVyZWFzIExpYnJhdHVzIGJlYXRzIHRoZSBwcmlvciBiZXN0IEhVTkwgcG9rZXIgQUkgQmFieSBUYXJ0YW5pYW44ICh3aGljaCB3b24gdGhlIDIwMTYgQW5udWFsIENvbXB1dGVyIFBva2VyIENvbXBldGl0aW9uKSBieSBhIGxhcmdlIG1hcmdpbiAoNjMgbWJiL2dhbWUpLkFzIHRvIGNvb3BlcmF0aW9uLCB0aGUgdHdvIHJlc2VhcmNoIGdyb3VwcyBoYXZlIGJlZW4gcHVibGlzaGluZyB0aGVpciB0ZWNobmlxdWVzIGFuZCBidWlsZGluZyBvbiBlYWNoIG90aGVycyB0ZWNobmlxdWVzIGZvciAxMyB5ZWFycyBub3cuIApBbHdheXMgY2VsZWJyYXRlZCB0aGUgcm9hZCBsZXNzIHRyYXZlbGVkIGluIGxpZmUgYW5kIHRoaXMgaXMgYSBwbGFjZSB0byBkaXNjdXNzIHRob3NlIGV4cGVyaWVuY2VzLCBzYWlkIFdhbGxuZXIuIGFsc28gc29tZXdoZXJlIHRvIGNlbGVicmF0ZSBmcmllbmRzaGlwLCBvbmUgb2YgdGhlIHBpbGxhcnMgb2Ygb3VyIGJ1c2luZXNzLiBLcmlzdGluYSBhbmQgSSBjZXJ0YWlubHkgZG9uIGFsd2F5cyBhZ3JlZSBvbiB0aGluZ3MsIGJ1dCB3ZSBhbHdheXMgY2FsbCBlYWNoIG90aGVyIG91dCBvbiBzdHVmZi4gV2UgYmVsaWV2ZSB0aG9zZSBzb3J0cyBvZiBmcmllbmRzaGlwcyBwdXNoIHVzIGFsbCB0byBiZSBiZXR0ZXIgYW5kIGhhcHBpZXIuIHNpdGUgc3BsaXRzIG9mZiBpbnRvIGZpdmUgbGlmZXN0eWxlIGhlYWRpbmdzIEVhdCwgUHJpbXAsIEVzY2FwZSwgRHdlbGwgYW5kIFRocml2ZS4KVGhlIHdvcmQgIm1tZW1ub25haSIgaXMgYSBzdG9yeXRlbGxpbmcgd29yZCB3aGljaCBtZWFucyAiSSByZW1lbWJlciIgYnV0IHJlYWxseSAiSSByZW1lbWJlciBleGFjdGx5LiIgKE15IEFuY2llbnQgR3JlZWsgaXMgd2Vhaywgc28gcGxlYXNlIHBhcmRvbiBteSBsYWNrIG9mIGEgR3JlZWsga2V5Ym9hcmQsIGFuZCBteSBhbG1vc3QgY2VydGFpbiBtaXNzcGVsbGluZyBvZiB0aGUgdHJhbnNsaXRlcmF0aW9uLikgU28gZm9yIHVuY3JpdGljYWwgcmVhZGVycyBvciBkZXZvdXRseSByZWxpZ2lvdXMgb25lcywgdGhleSBwcm9iYWJseSB3b3VsZCBoYXZlIHVuZGVyc3Rvb2QgaXQgYXMgbGl0ZXJhbC4gClRoaXMgaXRlbTpIb3cgQnJ1Y2UgTGVlIENoYW5nZWQgVGhlIFdvcmxkIFtEVkRdIGJ5IEJydWNlIExlZSBEVkQgJDM1LjAwIC4gCk9rYXkgYSBzaWRlIG5vdGUgZnJvbSBtZSBOT1QgZnJvbSB0aGlzIHBhcnRpY3VsYXIgYXJ0aWNsZS4gU29tZSBwZW9wbGUgY2FuJ3QgZHJpbmsgY29mZmVlIGJlY2F1c2Ugb2YgdGhlaXIgaW1tdW5lIHN5c3RlbSBtaXN0YWtlcyBjb2ZmZWUgZm9yIGdsdXRlbiwgdHJpZ2dlcmluZyBhIHJlYWN0aW9uLkl0IGhhcyBiZWVuIHJlcG9ydGVkIHRoYXQgYSAyMDAgbWlsbGlsaXRlciBjdXAgb2Ygcm9hc3RlZCBncm91bmQgY29mZmVlIHN1cHBsaWVzIGFwcHJveCAyMDAgdG8gNjc1IG1pbGxpZ3JhbXMgb2YgQ1BQLlRoZSBkYWlseSBpbnRha2Ugb2YgQ1BQIGJ5IGEgY29mZmVlIGRyaW5rZXIgaXMgYXMgbXVjaCBhcyBsIGdyYW0uUmVzZWFyY2hlcnMgZmVkIHJhdHMgYSBoaWdoIGZhdCBkaWV0LCBhbmQgYWRtaW5pc3RlcmVkIHRoZSByYXRzIGNvZmZlZSBwb2x5cGhlbm9scyB0aGF0IHdlcmUgd2l0aG91dCBjYWZmZWluZS5Tb21ldGhpbmcgZmFzY2luYXRpbmcgaGFwcGVuZWQhIFRoZSBzdHVkeSBmb3VuZCB0aGF0IGxvbmcgdGVybSBpbnRha2Ugb2YgQ1BQIHNpZ25pZmljYW50bHkgc3VwcHJlc3NlZCB2aXNjZXJhbCBhbmQgbGl2ZXIgZmF0IGFjY3VtdWxhdGlvbiB0aGF0IHdhcyBpbmR1Y2VkIGJ5IGEgaGlnaCBmYXQgZGlldC4gQ1BQIGFsc28gaGVscGVkIHRoZSBwbGFzbWEgZ2x1Y29zZSwgaW5zdWxpbiBjb25jZW50cmF0aW9ucywgYW5kIGluY3JlYXNlZCBlbmVyZ3kgZXhwZW5kaXR1cmUuVmVyeSBpbnRlcmVzdGluZyBkaXNjb3ZlcmllcyB3ZXJlIG1hZGUuIEFuYWx5c2lzIG9mIHRoZSBhZGlwb3NlIHRpc3N1ZSByZXZlYWxlZCB0aGF0IENQUCBmZWQgbWljZSBoYWQgc21hbGxlciBhZGlwb2N5dGVzIChmYXQgY2VsbHMpIHRoYW4gdGhlIG1pY2UgZmVkIGEgaGlnaCBmYXQgZGlldCB3aXRob3V0IHRoZSBDUFAuRW5lcmd5IGV4cGVuZGl0dXJlIGV2YWx1YXRlZCBieSBpbmRpcmVjdCBjYWxvcmltZXRyeSB3YXMgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgaW4gQ1BQIGZlZCBtaWNlLkNQUCBhbHNvIGRvd24gcmVndWxhdGVkIGxpcG9nZW5pYyBlbnp5bWVzIGluIGFkaXBvc2UgdGlzc3VlLlRoaXMgc3R1ZHkgZGVtb25zdHJhdGVkIHRoYXQgY29mZmVlIHBvbHlwaGVub2xzIGNhbiBoYXZlIGFkZGVkIGVmZmVjdHMgb24gZmF0IGxvc3MuQW1lcmljYW4gSm91cm5hbCBQaHlzaW9sIEVuZG9jcmlub2wgTWV0YWIsIDIwMTAgT2N0IDEzIGJ5IGRvd24gcmVndWxhdGluZyBTUkVCUCAxYyBhbmQgcmVsYXRlZCBtb2xlY3VsZXMgaW4gQzU3QkwvNkogbWljZS4gIE11cmFzZSBULCBNaXNhd2EgSywgTWluZWdpc2hpIFksIEFva2kgTSwgT21pbmFtaSBILCBTdXp1a2kgWSwgU2hpYnV5YSBZLCBIYXNlIFQuClNpbmNlIGEgbG90IG9mIHlvdSBndXlzIGRlY2lkZWQgdG8gdXNlIG1lLCBpdCB0YWtlcyBtZSBxdWl0ZSBzb21lIHRpbWUgdG8gbm90aWZ5IHlvdSBhbGwuIFRoaXMgYWxzbyBtZWFucyB0aGF0IEkgd29uIHNlbmQgeW91IGEgUE0gdGhhdCB5b3Ugc3VjY2Vzc2Z1bGx5IHN1YnNjcmliZWQgcmlnaHQgYXdheSBzaW5jZSBJIGFtIGJ1c3kgbm90aWZpY2F0aW5nIG90aGVyIHJlZGRpdG9ycy4gCkFueW9uZSB0aGF0IGhhcyBpbnN1bGluIGRlcGVuZGVudCBkaWFiZXRlcyB0eXBpY2FsbHkgY2FycmllcyBhcm91bmQgc29tZSBzb3J0IG9mIGtpdCAobWluZSBpcyBibGFjayB6aXAgdXAgcG91Y2ggYW5kIGl0IGhhcyBhIGdsdWNvbWV0ZXIsIGluc3VsaW4gcGVuLCBuZWVkbGVzLCBhbmQgYWxjb2hvbCBwYWRzKS4gUmlnaHQgYWZ0ZXIgSSBsZWZ0IGhvbWUgdG8gaGVhZCBiYWNrIGZyb20gbGVhdmUgbXkgbW9tIHRleHRzIG1lIHRvIGFzayBpZiBJIG1pc3NpbmcgbXkgZGlhYmV0aWMga2l0LiAKSWNlY3J1emFkZXIgIDEwIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KV2h5IGlzIGEgcGFpciBvZiBnbGFzc2VzIGEgcGFpciBpZiBpdHMgb25seSBvbmU/CkkgZG9uJ3QgZXZlbiB0aGluayB0aGF0J3MgYSB3b3JkLiAKSSB3b3JrIGZvciBpbnN1cmFuY2UgY29tcGFuaWVzLCBhbmQgZ2VuZXJhbGx5LCBpdCBpcyBkaWZmZXJlbnQuIE1vc3QgY2FycmllcnMgYWRvcHQgYSBzY29yaW5nIG1vZGVsIGZyb20gYSB0aGlyZCBwYXJ0eSBpbiB0aGUgaW5zdXJhbmNlIGluZHVzdHJ5IHRoYXQgZ2VuZXJhdGVzIGEgImNyZWRpdCBiYXNlZCBpbnN1cmFuY2Ugc2NvcmUuIiBNeSB1bmRlcnN0YW5kaW5nIGlzIGl0IGlzIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiB5b3UnZCBzZWUgaW4gYSBjcmVkaXQgcmVwb3J0LCBidXQgd2VpZ2h0ZWQgZGlmZmVyZW50bHkgdG8gbW9yZSBoZWF2aWx5IHJlZmxlY3QgdGhlIGluZGljYXRvcnMgZm9yIHJpc2sgd2hlbiBpdCBjb21lcyB0byBpbnN1cmFuY2UuIApXZSBkbyBub3QgaGF2ZSBtdWNoIHRpbWUgbGVmdC4gV2FrZSB1cCBhbmQgZG8gdGhlIHdvcmsgb2YgdGhlIExvcmQuIApIZWxwaW5nIHRob3NlIGluIG5lZWQsIGJlaW5nIGEgZ2VuZXJhbGx5IG1vcmFsIHBlcnNvbiBpbiB3b3JkIGFuZCBkZWVkLCBzdHJpdmluZyB0byBsaXZlIGFuIGhvbmVzdCBsaWZlLCBldGMuIFRoZSBoaWdoIHJvYWQgaXNuIHRoZSAiZWFzeSIgcm9hZCBieSBhbnkgbWVhbnMsIGJ1dCBpdCBpc24gc29tZXRoaW5nIHRoYXQgbmVlZHMgdG8gY29uc3VtZSBldmVyeSBhc3BlY3Qgb2YgeW91ciBsaWZlIHRvIHRoZSBwb2ludCB5b3Ugbm90IGVuam95aW5nIGxpdmluZy4KVGhpcyBpcyB0aGUgd29tYW4gSSBhc2tlZCB0byBiZSBteSBjaGlsZCBnb2Rtb3RoZXIgYnV0IHNoZSBkb2VzbiBzZWVtIHRvIGhhdmUgdGhhdCBtdWNoIGludGVyZXN0IGlmIHNoZSBjb3VsZG4gZXZlbiB0ZWxsIG1lIHRoYXQgc2hlIHdhc24gY29taW5nIHRvIG15IHNob3dlci4gCkJ1dCBub3cgdGhlIHBsb3QgdGhpY2tlbnMuIApZb3VyIHBob25lIGNhbiB3b3JrIGluIGEgcGluY2gsIGJ1dCB0aGUgc2Vuc29ycyBhcmUgcHJldHR5IHRpbnkgYW5kIGEgRFNMUiB3b3VsZCBjYXB0dXJlIG11Y2ggbW9yZSBkZXRhaWwKQXQgaG9tZSBhbmQgYXQgc2Nob29sLCBub3cgdGhhdCBoZSBpcyBvZiBzY2hvb2wgYWdlIGF0IDcgeWVhcnMgb2xkLCBEYXNhbiBicmluZ3MgdXMgdGhlIHBpY3R1cmUgdGhhdCByZXByZXNlbnRzIGhpcyBuZWVkcyBvciBkZXNpcmVzLiAKVGhlIHJvb2Ygb2YgdGhhdCBncmVlbmhvdXNlIGlzIGVzc2VudGlhbGx5IGEgYmlnIG1pcnJvci4gClBTOiBJIGRvbiBsaWtlIGhhY2tpbmcgaXQgZmVlbHMgbGlrZSBjaGVhdGluZyA7KSBNeSBmYXZvdXJpdGUgd2luIG1vZGVzIGlzIHRlbGVwb3J0ZXIuIERlZiBEcm9uZSBhbmQgY2xvYWsgYW5kIGRlY2VudCBmaXJlcG93ZXIuIEF0IGxlYXN0IHRoaXMgTWFudGlzIGhhZCBvayBmaXJlcG93ZXIgYW5kIG9mIGNvdXJzZSBNYW50aXMgYm9hcmRpbmcuCldlIGhhdmUgYSBzb2NpZXRhbCBtYWxhaXNlIGZyb20gZGVjYWRlcyBvZiBpbmFkZXF1YXRlIGdvdmVybm1lbnQgaW5lcnRpYSBhbmQgdGhlIGZlZWxpbmdzIG9mIGZ1dGlsaXR5IHRoYXQgZm9sbG93LiBXZSBiZWNvbWUgYWNjdXN0b21lZCB0byBzdGVwcGluZyBwYXN0IG91ciBmZWxsb3cgY2l0aXplbnMsIGh1ZGRsZWQgdW5kZXIgYXduaW5ncyBhbmQgaW4gZG9vcndheXMuIFdlIHN0YXJ0IHRvIGFjY2VwdCB0aGF0IHRoaXMgaXMgdGhlIHdheSB0aGluZ3MgYXJlLiAKSXQgbW9yZSBvciBsZXNzIHRnZSBtaWxpdGFyeSBqdXN0IGtpbmQgb2YgbG9va3MgdGhlIG90aGVyIHdheSBvciBoYXMgYSBsb3Qgb2YgdmljdGltIGJsYW1pbmcgYXNzb2NpYXRlZCB3aXRoIHJhcGUuIExpa2UgdGhlIGFtb3VudCBvZiBwZW9wbGUgaW4gdGhlIG1pbGl0YXJ5IHdobyBhcmUgc2V4dWFsbHkgYXNzYXVsdGVkIGlzIHdheSBoaWdoZXIgdGhhbiB0aGUgYWN0dWFsIGNvbnZpY3Rpb25zLiBUaGUgaGlnaGVyIHVwcyBiYXNpY2FsbHkgbGV0IGl0IGhhcHBlbiwgYW5kIGRvbiBkbyBzaGl0IGFib3V0IGl0LiAKSSByZWNrb24gdGhleSB3b3VsZCBldmVudHVhbGx5IGdldCBzaWNrIG9mIGl0IGFuZCBibG9jayBoZXIgbnVtYmVyIGluZGVwZW5kZW50bHkgb3V0IG9mIGNvbnZlbmllbmNlLiAKTWFya2V0aW5nIGlzIHZlcnkgaW50ZXJlc3RpbmcsIGJ1dCBhIGNha2Ugd2Fsay5JZiB5b3UgbGlrZSB0cmVuZHMgYW5kIG1hdGggSSB0aGluayBmaW5hbmNlIGlzIGRlZiBhIGdvb2QgZml0IGJ1dCBhbHNvIGxvb2sgaW50byBlY29uLiAKRHJpbmsgbG90cyBvZiB3YXRlciBhbmQgbGVtb25hZGUsIHN0YXkgYXdheSBmcm9tIHRvbyBtdWNoIGZhc3QgZm9vZCwgYW5kIGhvbmVzdGx5LCBhdm9pZCBlbmVyZ3kgZHJpbmtzIGF0IGFsbCBjb3N0cy4gClRoZSBSaXNlIG9mIHRoZSBXb3JsZCdzIE1vc3QgUG93ZXJmdWwgTWVyY2VuYXJ5IEFybXkKU28gaGVyZSB3aXRoIHlvdS4gSSB3YXMgYWN0dWFsbHkganVzdCB3YXRjaGluZyAiTXIuIE1vbSIgbGFzdCBuaWdodCBhbmQgSSBjb3VsZCB0b3RhbGx5IHJlbGF0ZSBsb2wuIEVzcGVjaWFsbHkgdGhlIHBhcnQgd2hlcmUgaGUgbGV0cyBoaW1zZWxmIGdvIGFuZCBpcyB3ZWFyaW5nIHRoZSBzYW1lIGNsb3RoZXMgZGF5IGluIGFuZCBkYXkgb3V0IGxvbC4Kd2hlbiBjYW4gaSBwbGF5IHBva2VyClRoZSBJbXBvcnRhbmNlIG9mIHRoZSBDRU8KUmVjb3JkcyBmcm9tIGJvdGggY2x1YnMsIG9idGFpbmVkIGJ5IEZhaXIgVHJhZGluZywgcmV2ZWFsZWQgSGFycm9kIGdhbWJsZWQgJDEwLjEgbWlsbGlvbiBvbiBwb2tlciBtYWNoaW5lcyBvdmVyIGFib3V0IGEgc2V2ZW4geWVhciBwZXJpb2QsIGluY2x1ZGluZyB0aGUgeWVhcnMgc2hlIHdhcyBzd2luZGxpbmcgZnJvbSB0aGUgY29tcGFueS4gVGhlIHJlY29yZHMgc2hvdyBIYXJyb2Qgd29uIGEgY29tYmluZWQgJDkuMSBtaWxsaW9uIGR1cmluZyB0aGUgc2FtZSBwZXJpb2QuIEhlciBmcmF1ZHVsZW50IHJ1biB3YXMgZXZlbnR1YWxseSBoYWx0ZWQgYnkgaGVyIGZhdGhlciwgSmltIEhhcnJvZCwgd2hvIHJlcG9ydGVkIGhpcyBkYXVnaHRlcidzIGNyaW1lcyB0byBGYWlyIFRyYWRpbmcgaW4gZWFybHkgMjAxMi4gCkp1c3QgdGhlIHdheSBoZSB0cmVhdGVkIHBlb3BsZS4iIEkgYW0gdHJhbnNmaXhlZCBieSB0aGlzIHN0dWZmLiAKVGhhdCByaWdodC4gVGVycm9yaXN0IGF0dGFjayAod2hldGhlciBob21lZ3Jvd24gb3IgZm9yZWlnbikgaXMgaW5ldml0YWJsZS4gClRoZXkgdXNlIHF1YWxpdHkgc29mdHdhcmUgYW5kIG9mZmVyIDI0LzcgcG9rZXIgZ2FtZXMgYW5kIHRvdXJuYW1lbnRzLiBBdCB0aGVzZSBzaXRlcyBwbGF5ZXIgc2FmZXR5IGlzIGFsc28gb25lIG9mIHRoZSB0b3AgcHJpb3JpdGllcyBhbmQgdGhleSBvZmZlciBmYXN0IGFuZCByZWxpYWJsZSBkZXBvc2l0cyBhbmQgY2FzaG91dHMuIApEaWUgZ3JvZSBTdW1tZSwgZGllIGR1IGltIGxldHp0ZW4gQWJzY2huaXR0IGVybWl0dGVsdCBoYXN0PyBEaWUgYmVudGlnc3QgZHUgd2VubiBkdSBlcm5zdGhhZnQgc3BpZWxlbiBtY2h0ZXN0LiAKQW55b25lIGNvbXBsYWluaW5nIGFib3V0IGFsdGVybmF0aXZlcyB0byBBcHBsZSBXYXRjaCAgIHRoZXJlIGFyZSBsb2FkcyBvZiBncmVhdCBhbHRlcm5hdGl2ZXMuIFRoZXkgYXJlIGp1c3Qgbm90IG9uIEFuZHJvaWQuClVzZSBhIHN0cmF0ZWd5IGxpc3QuIEEgc3RyYXRlZ3kgbGlzdCBpcyBsaWtlIGEgY2hlYXQgc2hlZXQsIHRoYXQgaGFzIGFsbCBvZiB0aGUgZGlmZmVyZW50IHdheXMgeW91IGNhbiB3aW4gaW4gYSBwb2tlciBnYW1lIGluIGEgbGlzdCByYW5rZWQgZnJvbSBiZXN0IGhhbmRzIHRvIHdvcnNlIGhhbmRzLiBVc2luZyBhIGNoZWF0IHNoZWV0IHdpbGwgaGVscCB5b3UgZGV0ZXJtaW5lIHdoaWNoIGNhcmRzIHRvIGtlZXAgYW5kIHdoaWNoIGNhcmRzIHRvIGV4Y2hhbmdlIGZvciBuZXcgY2FyZHMuIApBcHJpbCAyNSwgMjAxMyAxOjQxIEFNIFN1YnNjcmliZQpQZXIgeWVhcikuIApMaWtlIENvbHQsIGhlIHNlZW1zIGF3a3dhcmQsIGluZXhwZXJpZW5jZWQgZWFzeSB0byBtYW5pcHVsYXRlIGFuZCBpbXByZXNzaW9uYWJsZSB0b28uIEhlIGxpa2VseSB0YWtlbiBieSB0aGUgZmFjdCB0aGF0IHNoZSB3YXMgb24gdHYgcGx1cywgc2hlIG5vdCBhd2Z1bCBsb29raW5nLiAKQnUgZGFuZ2FsYWtsYXIgdHJrIHZhdGFuZGEgb2xtYXNhIGRhIG9ubGFyIHl6bmRlbiBiZW5pbSBlbGltZGVraSBwYXNhcG9ydGxhIGJpciB5ZXJlIGdpZGVya2VuIGJlbiBzcmVrbGkgc29ydW4geWF5b3J1bS5TYW11cmFtdSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0kgdW5kZXJzdGFuZCB5b3VyIHBvaW50LCBob3dldmVyIHdlIGFyZSBub3QgYWltaW5nIHRvIHJlcGxhY2UgdGhlcmFweS4gVGhlIGFkdmFudGFnZSBpcyB0aGF0IHlvdSBjYW4gdXNlIHRoZSBhcHAgYW55dGltZSwgYW55d2hlcmUgYW5kIG1haW50YWluIHlvdXIgYWNoaWV2ZW1lbnRzIG9uY2UgeW91IHByb2dyZXNzLldoYXQgeW91IGRlc2NyaWJlIGFib3ZlIGJ5IGdvaW5nIGJhY2sgdG8gbGV2ZWwgb25lIGV2ZXJ5IHRpbWUgeW91IGZlZWwgcmVqZWN0ZWQgICBpcyBzb21ldGhpbmcgdGhhdCBoYXBwZW5zIHdoZW4gb3VyIGJlbGllZnMgYXJlIHN0aWxsIGJhc2VkIG9uIG1hbGFkYXB0aXZlIHRoaW5raW5nLiBUaGlzIGlzIHNvbWV0aGluZyB0aGF0IHRha2VzIGEgbG90IG9mIHRpbWUgYW5kIHByYWN0aWNlIHRvIGNoYW5nZSwgZXZlbiBpbiB0aGVyYXB5LiAKRHJ1ZGdlIHdhc24ndCBzb21lIGRhcmluZyBzYXZpb3IsIHdpbGxpbmcgdG8gcmlzayBpdCBhbGwgIGhlIGp1c3QgaGFkIG5vIHF1YWxtcyBhYm91dCBwcmludGluZyBnb3NzaXAgYW5kIGxpZXMuIFRoZXkgbGVha2VkIHRoZSBzdG9yeSB0byBoaW0gYmVjYXVzZSBldmVyeW9uZSBrbmV3IGhlIGhhZCBubyBqb3VybmFsaXN0aWMgaW50ZWdyaXR5LiBTdGlsbCBkb2Vzbid0LgpEb2VzIHRoYXQgbWVhbiB3ZSB3b24gZ2V0IGJvdW5jZWQgYnkgdGhlIER1Y2tzIGluIHRoZSBmaXJzdCByb3VuZD8gT2YgY291cnNlIHRoYXQgY291bGQgaGFwcGVuLCB0aGF0IGRvZXNuIG1lYW4gdGhhdCBvdXIgcGF0aCBpcyBhY3R1YWxseSBoYXJkZXIuIApPbiBKYW4uIApEeWVhYm9saWNhbCAgMSBwb2ludCAgc3VibWl0dGVkIDE3IGRheXMgYWdvCkRyYXVzc2VuIEVzc2VuClRoZSBIdW50ZXJzIHRlYW1lZCB1cCBzaXggeWVhcnMgYWdvIHRvIGRlbGl2ZXIgYSB3b3JsZCB1bmRlciAxOCBjaGFtcGlvbnNoaXAgZ29sZCBtZWRhbCBmb3IgQ2FuYWRhIGF0IHRoZSBzdW1tZXIgZXZlbnQgbm93IGtub3duIGFzIHRoZSBIbGlua2EgR3JldHpreSBDdXAgaW4gdGhlIEN6ZWNoIFJlcHVibGljLiBUaGF0IHJlbWFpbnMgRGFsZSBIdW50ZXIncyBvbmx5IGludGVybmF0aW9uYWwgY29hY2hpbmcgYXNzaWdubWVudCB0byBkYXRlLgpUaGUgS0tXIEJlYXV0eSBoZWFkLCB3aG8gcm9ja2VkIGEgYm9iIGFuZCBibGFjayBsZWF0aGVyIHBhbnRzIHRoYXQgZXZlbmluZywgbGF0ZXIgY2xhcmlmaWVkIHNoZSB3ZWlnaHMgbGVzcyB3aGVuIHNoZSB0YWtlcyBvdXQgaGVyIGhhaXIgZXh0ZW5zaW9ucy4KOCwgOSBJbiBoZWFsdGh5IHBlb3BsZSwgdGhlcmUgaXMgY29uc2lkZXJhYmxlIHZhcmlhYmlsaXR5IGluIGd1dCBiYWN0ZXJpYWwgY29tcG9zaXRpb24sIGFuZCB5ZXQgaWYgdGhlIHNhbWUgcGVyc29uJ3MgZ3V0IGJhY3RlcmlhIGFyZSBleGFtaW5lZCBhdCBkaWZmZXJlbnQgdGltZXMgKGEgZmV3IG1vbnRocyBvciBtb3JlIGFwYXJ0KSwgdGhleSBoYXJkbHkgY2hhbmdlLjQsIDEwLCAxMiBCdXQgaW4gc3RyZXNzZnVsIHNpdHVhdGlvbnMsIG9yIGluIHJlc3BvbnNlIHRvIHBoeXNpb2xvZ2ljYWwgb3IgZGlldCBjaGFuZ2VzLCB0aGUgbWljcm9iaW90YSBwcm9maWxlIG1heSBpdHNlbGYgY2hhbmdlLCBjcmVhdGluZyBhbiBpbWJhbGFuY2UgaW4gaG9zdCBtaWNyb2Jpb3RhIGludGVyYWN0aW9ucy4gU3VjaCBjaGFuZ2VzIGNhbiBhZmZlY3QgdGhlIHBlcnNvbidzIGhlYWx0aC5HdXQgbWljcm9iaW90YSBhcmUgaW1wb3J0YW50IHRvIGhlYWx0aHkgYnJhaW4gZGV2ZWxvcG1lbnQuIApLYXVtIGhhdHRlbiBMZW5hcyBGaW5nZXJrdXBwZW4gZGllIHdlaWNoZW4gVmVydGllZnVuZ2VuIGVycmVpY2h0LCB2ZXJuZGVydGUgc2ljaCBkZXIgR2VzaWNodHNhdXNkcnVjayBkZXIganVuZ2VuIEZyYXUuIEVpbiBicmVpdGVzIExjaGVsbiBlcnNjaGllbiBhdWYgaWhyZW0gR2VzaWNodCwgaWhyIEF0ZW0gZ2luZyBzY2huZWxsZXIsIGJpcyBlbmRsaWNoIGVpbiBob2hlcyBRdWlldHNjaGVuIHp1IGhyZW4gd2FyLCBkYXMgc2NobmVsbCBpbiBsZWlzZXMgS2ljaGVybiBiZXJnaW5nLgpUaGV5J3JlIG9sZCBhbmQgYmFzaWNhbGx5IGlycmVsZXZhbnQuCkdldCB0aGUgdGFsa3MgYmFjayBvbiB0cmFjayBpbiBTb3V0aCBBZnJpY2EsIEFmcmljYW4gY2l2aWwgc29jaWV0eSBpcyBjYWxsaW5nIG9uIHRoZSBTb3V0aCBBZnJpY2FuIEdvdmVybm1lbnQgdG8gaGF2ZSBhbiBvcGVuLCBkZW1vY3JhdGljIGFuZCBhY2NvdW50YWJsZSBwcm9jZXNzLCBNYXluYXJkIHNhaWQuIFRoYXQgbWVhbnMgc2F5aW5nIHdoZW4sIHdoZXJlIGFuZCB3aG8gdGhleSBhcmUgbWVldGluZyBhbmQgaG93IHRoZXkgd2lsbCBsZXQgdGhlIHBlb3BsZSBhY3R1YWxseSBpbXBhY3RlZCBieSBjbGltYXRlIGNoYW5nZSBoYXZlIHRoZWlyIHNheS4uIApEZXRlcm1pbmluZyB0aGUgbW9zdCBvcHRpbWFsIGJhc2Ugb2YgdGhlIGV4cG9uZW50aWFsIHNjYWxlIChub3JtYWxpemF0aW9uKSBpcyBkaWZmaWN1bHQgaW4gcHJhY3Rpc2UuIFRoZSBiYXNlIGNvcnJlc3BvbmRpbmcgdG8gdGhlIEZpYm9uYWNjaSBzY2FsZSBtYXkgb3IgbWF5IG5vdCBiZSBvcHRpbWFsLiJUaGUgcHJlY2lzaW9uIG9mIHlvdXIgZXN0aW1hdGlvbiBhcyB3ZWxsIGlzIHZlcnkgbGlrZWx5IHRvIGJlIHByb3BvcnRpb25hbCB0byB5b3VyIGVzdGltYXRpb24uIiBJcyB0aGlzIGEgcnVsZSBpbiBzdGF0aXN0aWNzIG9yIGlzIHRoaXMgc29tZXRoaW5nIGh1bWFucyBub3JtYWxseSBkbz8gSWYgeW91IHVzZSBGaWJvbmFjY2kgbnVtYmVycywgeW91IGFzc3VtZSwgdGhhdCB0aGUgcmVsYXRpdmUgZXJyb3Igb2YgYW4gZXN0aW1hdGlvbiBpcyBhYm91dCBmKG4gMSkvZihuKSA9IDEgZ29sZGVucmF0aW8gPSA2MSAlLiAKMS4gIkJldHdlZW4gNDAlIGFuZCA2MCUgb2YgQW1lcmljYW5zIHVzZSBjb21wbGVtZW50YXJ5IGFuZCBhbHRlcm5hdGl2ZSBtZWRpY2luZSB0byBtYW5hZ2UgbWVkaWNhbCBjb25kaXRpb25zLCBwcmV2ZW50IGRpc2Vhc2UsIGFuZCBwcm9tb3RlIGhlYWx0aCBhbmQgd2VsbCBiZWluZy4iCkR1aC4gSGV0ZXJvbm9ybWF0aXZlIGlzIHNvbWV0aGluZyB0aGF0IGRlc2NyaWJlcyBzb21ldGhpbmcgc29tZXdoYXQgbmVnYXRpdmUsIGJ1dCBpdCBtb3JlIHVzZWQgYXMgYSBtaWxkIGNhbGwgb3V0IG9mIGEgc29jaWV0YWwgaXNzdWUuIApDbGVldHVzMTIgIDUsOTc1IHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCkluIGVmZmVjdCwgeW91IGNhbiAiYnVsbHkiIHRoZSB0YWJsZSBieSBtYWtpbmcgYmlnIHJhaXNlcyBhbmQgcmUgcmFpc2VzLCBhbmQgZm9yY2luZyBvdGhlciBwbGF5ZXJzIHRvIHJpc2sgYWxsIG9yIGFsbW9zdCBhbGwgb2YgdGhlaXIgY2hpcHMgKHdoZXJlYXMgeW91IGhhdmUgYSBjdXNoaW9uIGJlY2F1c2UgeW91J3ZlIGFscmVhZHkgYWNjdW11bGF0ZWQgZXh0cmEgY2hpcHMpLiAKSSBiZWVuIHRoaW5raW5nIHRoZSBzYW1lIHRoaW5nIHRoZSBsYXN0IGNvdXBsZSBvZiBkYXlzLiBJIGhhdmUgd2ludGVyIHRpcmVzIGFuZCBoYXZlIGRyaXZlbiBpbiBFZG1vbnRvbiBtb3N0IG9mIG15IGxpZmUuIApBbG1vc3QgZGVtYW5kaW5nIGZyb20gRU4gc3RhZmYgdG8gcHJvdmlkZSBhbmQgY2F0ZXIgdG8gZXZlcnkgbGl0dGxlIHdoaW5lLmNvdWxkIGxlYXJuIGEgdGhpbmcgb3IgdHdvIGFib3V0IHBhdGllbmNlIGZyb20gSlAgb3IgQ04uIApJIGhhZCBwZW9wbGUgc2F5IHNvbWVvbmUgbG9va3MgbGlrZSBtZSwgYnV0IHRoZW4gdGhleSBkb24gdG8gbWUuIAooMSkgQ2UgZ3JvdXBlIGVzdCBjb21wb3MgZGUgOiBNbWVzIFBhdHJpY2lhIEFkYW0sIFN5bHZpZSBBbmRyaWV1eCwgTU0uIEplYW4gTWFyYyBBeXJhdWx0LCBKZWFuIFBhdWwgQmFjcXVldCwgRG9taW5pcXVlIEJhZXJ0LCBKZWFuIFBpZXJyZSBCYWxsaWdhbmQsIEdyYXJkIEJhcHQsIENsYXVkZSBCYXJ0b2xvbmUsIEphY3F1ZXMgQmFzY291LCBDaHJpc3RpYW4gQmF0YWlsbGUsIE1tZSBEZWxwaGluZSBCYXRobywgTS4gCk15IGZhbWlseSB1c2VkIHRvIGdvIGNhbXBpbmcgYSBsb3Qgd2hlbiBJIHdhcyBhIGtpZDsgb24gb25lIHN1Y2ggdHJpcCBJIHdhcyBmdWNraW5nIGFyb3VuZCBpbiBoaWdoIGJydXNoIGJ5IG15c2VsZiBhIGNvdXBsZSBob3VycyBiZWZvcmUgd2UgbGVmdC4gCk1hbnkgdGhvdWdodCB0aGlzIHdvdWxkIGJyaW5nIGluIHRoZSBtaWRkbGUgb2YgdHdvIE11c2xpbSBjb3VudHJpZXMgdHVzc2xlIGFuZCBhbW91bnRlZCB0byBpbnRlcmZlcmVuY2Ugb24gaW50ZXJuYWwgYWZmYWlycyBvZiBTeXJpYS4gVGhpcyB3YXMgc2VlbiBhcyBhIGRlcGFydHVyZSBmcm9tIG91ciBwb2xpY3kgb2Ygbm9uIGludGVyZmVyZW5jZS4uIApEb3dubG9hZCBib29rcyBmcmVlLiAKU28gaWYgc29tZWJvZHkgYnV5IHNvbWUgcmVwcyBpbiBzdG9yZSwgcHJvYmFibHkgaXQgY2FtZSBmcm9tIENoaW5hIG9yIFRoYWlsYW5kLkRlc2lnbmVyIGNsb3RoZXMgYW5kIGdvb2RzIGluIEtvcmVhIGlzIHZlcnkgZXhwZW5zaXZlLiAKRWR1Y2F0ZSBtZSBpbnN0ZWFkIG9mIGluc3VsdGluZyBtZS4gVGhhdCB0aGUgZ29hbCByaWdodD8gTm90IHRvIGFsaWVuYXRlIHBlb3BsZSBidXQgdG8gYnJpbmcgdGhlbSB0byBhIHBvaW50IG9mIHVuZGVyc3RhbmRpbmcgYW5kIGhvcGVmdWxseSwgZXZlbnR1YWxseSwgYWNjZXB0YW5jZS4gCllvdSB3aWxsIHJlY2VpdmUgeW91ciBvd24gZG9tYWluIEZPUkZSRUUgZm9yIDF5ZWFyIHdpdGggb3VyIHNwZWNpYWwgcHJvbW90aW9uLiBJbiB0aGUgZm9sbG93aW5nIHllYXJzLCB5b3UgY2FuIHJlbmV3IHRoZSBkb21haW4gZm9yIHRoZSBzdGFuZGFyZCByZW5ld2FsIGZlZS4KQWRkIG9ucyBhcmUgcGVyZm9ybWVkIGF0IHRoZSBmaXJzdCBicmVhayAgIHdoZXJlIHBsYXllcnMgaGF2ZSB0aGUgb3B0aW9uIHRvIHB1cmNoYXNlIHRoZSBpbml0aWFsIHN0YWtlLCB1c3VhbGx5IGF0IGEgZGlzY291bnQuIApJIHNlZW4gbWFueSB0ZWFjaGVyIGNvdXBsZXMsIGFuZCBvbmx5IHRoZSBvbmVzIHRoYXQgd2VyZSBhdCBkaWZmZXJlbnQgd29yayBwbGFjZXMgc2VlbWVkIHRvIGhhdmUgbm8gc3R1ZGVudCBkcmFtYS4uIApZb3Ugd2lsbCByZWNlaXZlICQyNSwwMDAgb2YgdGhlIHJlbWFpbmluZyBwcml6ZSBwb29sLiAKR3JhbmQgQ2VudHJhbCBCaXJtaW5naGFtQmlybWluZ2hhbSdzIG5ldyBLaXR0eSBDYWYgbmVlZHMgYSBtYW5hZ2VyICAgaGVyZSdzIGhvdyB0byBhcHBseVRoZSBxdWlya3kgS2l0dHkgQ2FmIHdpbGwgb3BlbiBpdHMgdGhpcmQgVUsgc2l0ZSBpbiBCcnVtLCBhZnRlciBzdWNjZXNzZnVsIGxhdW5jaGVzIGVsc2V3aGVyZSBpbiB0aGUgTWlkbGFuZHMgYW5kIGZ1cnRoZXIgbm9ydGgKQWZ0ZXIgYSBzaXAgZnJvbSBhIGh1Z2UgcG90dGVyeSBjaWRlciBjdXAsIHRoZSBRdWVlbiBwb3VycyB0aGUgcmVzdCBvbnRvIHRoZSByb290cyBvZiB0aGUgdHJlZSwgdG8gZ2l2ZSBpdCBhIHRhc3RlIG9mIGxhc3QgeWVhciBoYXJ2ZXN0LgpBbHRob3VnaCBtaW5kZnVsbmVzcywgd2lzZG9tLCBhbmQgY29tcGFzc2lvbiBhcmUgZXhwZXJpZW50aWFsbHkgcmVsYXRlZCAuIFRoaXMgYm9vayBleHBsb3JlcyBob3cgdGhlIHRoZW9yeSBhbmQgcHJhY3RpY2Ugb2YgbWluZGZ1bG5lc3MgYW5kIC4gSW4gaGFybW9ueSB3aXRoIG5hdHVyYWwgbGF3cyBhcmUgc2VlbiBhcyB0aGUgZXNzZW5jZSBvZiB3aXNkb20uIApIYXZlIGEgbG9vayBhdCB5b3VyIGxvY2FsIGxhd3MgYW5kIGNvbnN1bHQgd2l0aCBhIGxhd3llciBidXQgeW91IG1heSBiZSBhYmxlIHRvIHJlY29yZCBoZXIgYWRtaXR0aW5nIHRvIHdoYXQgc2hlIGRvbmUuIElmIG5vIGNyaW1pbmFsIGNoYXJnZXMgYXJlIGZpbGVkIGFmdGVyIHRoYXQgeW91IGNvdWxkIHRyeSB0byBnbyBhZnRlciBoZXIgaW4gY2l2aWwgY291cnQgZm9yIHNvbWUgc29ydCBvZiBjaGlsZCBzdXBwb3J0LiBOb3QgYSBsYXd5ZXIgdGhvdWdoLCBhc2sgb25lIGZpcnN0LgpBbmQgSSB3YWl0ZWQgZm9yIHRoZSBtaWxsaW9uIGRvbGxhciBwYXlvdXQuIEZvciBhIHdoaWxlLCBub3RoaW5nIG11Y2ggaGFwcGVuZWQuIEl0IHdhcyBqdXN0IGEgYnJpZ2h0IGRhemUgb2YgaW5jb21wcmVoZW5zaW9uIGFuZCB0aHJpbGwuIFRoZW4gbXkgZ3VpZGUgY3VtIG1hbmFnZXIgcGF0dGVkIG15IGJhY2sgYW5kIHNhaWQ6ICJZb3UganVzdCBsb3N0IDE3NSBkb2xsYXJzLiBXYW5uYSB1cCB0aGUgc3Rha2U/IgpSZWQgV2luZ3MgSG9ub3IgVGVkIExpbmRzYXksIFdpbiBJbiBTaG9vdG91dEF0aGFuYXNpb3Ugc2NvcmVkIGluIHRoZSB0aGlyZCBwZXJpb2QgYW5kIGhhZCB0aGUgb25seSBnb2FsIGluIGEgc2hvb3RvdXQgLCBsaWZ0aW5nIHRoZSBEZXRyb2l0IFJlZCBXaW5ncyBvdmVyIHRoZSBzY3VmZmxpbmcgTmV3IFlvcmsgUmFuZ2VycyAzIDIgb24gVGh1cnNkYXkgbmlnaHQgdG8gc25hcCBhbiBlaWdodCBnYW1lIGxvc2luZyBzdHJlYWsuIApJIHNlZSBpdCBhbGwgdGhlIHRpbWUgaW4gaGFuZCBhbmFseXNpcyBwb3N0cy4gSXQgbGlrZSAvci9wb2tlciB0YWtlcyBvdXQgYWxsIHRoZWlyIGZydXN0YXRpb25zIG9uIHRoaXMgc3ViLiBJZiB5b3UgZGlkbiBmaW5kIGl0IGZ1bm55LCBqdXN0IGRvd252b3RlIGFuZCBtb3ZlIG9uLiAKVGhlIHNlYWxzIGNhbXBhaWduIHNob3dlZCB0aGF0IHRoZSA5OSBwZXJjZW50LCBldmVuIHdoZW4gZmVlbGluZyBkaXNlbmZyYW5jaGlzZWQsIGFyZSBoYXJkbHkgcG93ZXJsZXNzIHRvIHJlcGFpciB0aGUgc2FmZXR5IG5ldCAgIGFuZCBldmVuIGluZmx1ZW5jZSB0aGUgYWN0aW9ucyBvZiB0aGUgMSBwZXJjZW50LiBJdCBoYXMgYWxzbyBicm91Z2h0IHN1YnN0YW50aWFsIGJlbmVmaXRzIHRvIHRoZSBiYW5rIGl0c2VsZiBhbmQgZXZlbiBsZWQgdG8gY2hhbmdlcyBpbiB3b3JraW5nIHByYWN0aWNlcy4gCkVkdWNhdGlvbmFsIGFuZCBhY2FkZW1pYyByZWxhdGVkIHByb2dyYW1zLCBza2lsbCBidWlsZGluZyB3b3Jrc2hvcHMgYW5kIG91dHJlYWNoIHByZXNlbnRhdGlvbnMgYXJlIG9mZmVyZWQgdG8gdGhlIGNhbXB1cyBjb21tdW5pdHkuIFNlcnZpY2VzIGFyZSBwcm9mZXNzaW9uYWwgYW5kY29uZmlkZW50aWFsLiAKVGhleSB3aWxsIG5vdCBoZXNpdGF0ZSB0byBzYXkgc29tZXRoaW5nIGxpa2UgIkhleSBjaGllZiBnZXQgb3V0IG9mIG15IHdheSwgaHVoPyIgb3IgIldoYXQgdGhlIGJpZyBpZGVhIHBhbD8iIG9yIGdlbmVyYWxseSBjb25mcm9udCBzb21lb25lIGlmIHRoZXkgZmVlbCBzbGlnaHRlZCBvciBpbmNvbnZlbmllbmNlZC4gVGhleSBhbHNvIGJ1c3QgeW91ciBjaG9wcyBhIGxvdCBtb3JlLgpUaGVyZSdzIHNvIG11Y2ggbW9yZSB0aGFuIHRoYXQuIFRoZXkgdXNlZCBGVUQgKGZlYXIsIHVuY2VydGFpbnR5IGFuZCBkb3VidCkgdG8ga2lsbCBvZmYgY29tcGV0aXRvcnMsIGFuZCAiZW1icmFjZSwgZXh0ZW5kLCBleHRpbmd1aXNoIiBhZ2FpbnN0IE9wZW4gU291cmNlLiAKUHVyY2hhc2luZyBhIEJsYWNramFjayBhbmQgVGV4YXMgSG9sZGVtIDM2IHggNzIgSW5jaCAyIFNpZGVkIExheW91dCBpcyBhbiBleGNlbGxlbnQgaWRlYSBpZiB5b3UgYXJlIGEgcG9rZXIgZW50aHVzaWFzdCBhbmQgeW91IGxpa2UgdG8gYXR0ZW5kIG9yIGhvbGQgYSBwb2tlciBuaWdodC4gWW91IG1pZ2h0IGV2ZW4gZmluZCB0aGlzIGlzIGEgZ3JlYXQgZ2lmdCBmb3Igc29tZW9uZSB5b3Uga25vdyB3aG8gbG92ZXMgcG9rZXIuIFRoaXMgbGF5b3V0IGluY2x1ZGVzIEJsYWNramFjayBhbmQgVGV4YXMgSG9sZGVtIGFuZCB3aWxsIG1ha2UgeW91ciB0YWJsZSBsb29rIGxpa2UgYSByZWFsIGNhc2lubyB0YWJsZS4gCldoYXQgYXJlIGZha2UgcGVyY29jZXQgMzBzIENhbiB5b3Ugc3RpbGwgdGFrZSBveHljb250aW4gb3Agb3JhbGx5IGFuZCBnZXQgaGlnaC4gLiBCZXN0IEFuc3dlcjogV2hhdCdzIHRoZSBwb2ludCBvZiBnaXZpbmcgaGVyIHBsYWNlYm9zIGluIHRoaXMgY2FzZT8gSWYgc2hlJ3MgYmVlbiAuClRoZSBDb21wdG9uIEdhbmdiYW5nIFlvdSBtZWV0IGEgeW91bmcgbGFkeSBhdCB0aGUgYmFyLi4gCldhcyBhIGdhbWJsZXIsIHRoYXQgd2FzIGhpcyBqb2IsIGhpcyBicm90aGVyLCBFcmljIFBhZGRvY2ssIHRvbGQgcmVwb3J0ZXJzIE1vbmRheSBhdCBoaXMgaG9tZSBpbiBPcmxhbmRvLiB3YXMgYSB3ZWFsdGh5IGd1eSwgcGxheWluZyB2aWRlbyBwb2tlciwgd2hvIHdlbnQgY3J1aXNpbmcgYWxsIHRoZSB0aW1lIGFuZCBsaXZlZCBpbiBhIGhvdGVsIHJvb20uIFBhZGRvY2sgZmF0aGVyIHdhcyBjb252aWN0ZWQgaW4gMTk2MSBvZiBjb21taXR0aW5nIGEgc2VyaWVzIG9mIGJhbmsgcm9iYmVyaWVzIGFuZCB3YXMgc2VudGVuY2VkIHRvIDIwIHllYXJzLCBidXQgaGUgZXNjYXBlZCBmcm9tIGEgZmVkZXJhbCBwcmlzb24gaW4gVGV4YXMgaW4gMTk2OCBhbmQgYmVjYW1lIGEgdXNlZCBjYXIgZGVhbGVyIGFuZCBiaW5nbyBwYXJsb3Igb3BlcmF0b3IgaW4gT3JlZ29uLgpTdW1tYXJpemluZyBhbiBhcnRpY2xlIGluIHRoZSB0aXRsZSBpcyBvaywgYnV0IGtlZXAgaXQgZnJlZSBvZiBvcGluaW9uLCBjb21tZW50YXJ5LCBvciBsb2FkZWQgbGFuZ3VhZ2Ugbm90IGNvbnRhaW5lZCBpbiB0aGUgYXJ0aWNsZS4gCkFzIHRoaXMgImludmVzdG1lbnQiIGlzIHVzdWFsbHkgZnJvbSB2ZXJ5IHNoYWR5IHNvdXJjZXMsIG5vdCBtYW55IGdvIHRoaXMgcm91dGUuLiAKU2hlIGFsc28gaXMgcGFpbmZ1bGx5IGF3a3dhcmQgaW4gZnJvbnQgb2YgdGhlIGNhbWVyYSB3aGVuIGhhdmUgdG8gYXJ0aWN1bGF0ZSBoZXIgZmVlbGluZ3MgYW5kIHN0dWZmLiBTaGUgZ290IG1vcmUgY29tZm9ydGFibGUgYXMgdGhlIHNlYXNvbiB3ZW50IG9uIGJ1dCBpdCBzZWVtcyBsaWtlIHNoZSBnZXQgd2F5IGludG8gaGVyIGhlYWQgYW5kIGlzIG5hdHVyYWxseSBjYW1lcmEgc2h5LiAKRm9ybWVyIGNvIHdvcmtlciwgbWlkIDMwIGxpdmVkIHdpdGggaGVyIHBhcmVudHMgcGF5aW5nICQwIGluIG1vbnRobHkgZXhwZW5zZXMsIG93bmVkIGhlciAxNSB5ZWFyIG9sZCBjYXIsIGhhZCByYWNrZWQgdXAgd2hhdCBzaGUgZXN0aW1hdGVkIHdhcyA2MCA3MGsgaW4gZGVidCBmb3IgY3Jvc3Mgc3RpdGNoIHN1cHBsaWVzLiBIZXIgcGFyZW50cyBwYWlkIG9mZiB0aGUgZGVidC4gQSB5ZWFyIGxhdGVyIHNoZSB3YXMgaGlkaW5nIGZyb20gdGhlbSB0aGUgZmFjdCB0aGF0IHNoZSB3YXMgYSBjdXJyZW50IDE4ayBpbiBkZWJ0LCBhbGwgcmVsYXRlZCB0byBjcm9zcyBzdGl0Y2hpbmcuCkNoaW5nbGV0cm9uZSBpcyBhYnNvbHV0ZWx5IHJpZ2h0LiBJIHdvdWxkIGxpa2UgdG8gYWRkIHVzaW5nIGRpZmZlcmVudCBjb2xvcnMgb2YgcGVucyB0byBzZXBhcmF0ZSBvdXQgbWFpbiBpZGVhcyBvbiBlYWNoIHBhZ2Ugb2Ygbm90ZXMuIApUYXN0ZSBhbmQgc2Vhc29uIHdpdGggc2FsdCBhbmQgcGVwcGVyLCB0aGVuIG1peCBpbiB0aGUgZWdnIHlvbGtzLiAKSSB3YXMgZ2l2ZW4gdGhpcyBib29rIGJ5IHNvbWVvbmUgd2hvIHNhaWQgdGhleSBjb3VsZG4gZ2V0IGludG8gaXQgYW5kIGRpZG4gbGlrZSBpdCwgYW5kIEkgZW5kZWQgdXAgZmFsbGluZyBpbiBsb3ZlIHdpdGggaXQuIEkgbG9vayBiYWNrIG9uIHRoZSB0aW1lIEkgd2FzIHJlYWRpbmcgaXQgZm9uZGx5LCBpdCB3YXMgbGlrZSBhIGNoYXB0ZXIgb2YgbXkgb3duIGxpZmUuIExpa2UgaG93IGNlcnRhaW4gc29uZ3MgcmVtaW5kIHlvdSBvZiBhIGhvbGlkYXksIHRoaW5raW5nIGFib3V0IHRoaXMgYm9vayByZW1pbmRzIG1lIG9mIGEgcGVyaW9kIG9mIG15IGxpZmUuLiAKVGhlcmUgYXJlIHNldmVyYWwgZGlmZmVyZW50IHdheXMgdGhhdCBjYXJkIHRhdHRvb3MgY2FuIGJlIGRlc2lnbmVkLiBZb3UgY2FuIGdldCBhbiBpZGVhIG9mIHdoYXQgYWxsIGlzIGF2YWlsYWJsZSBqdXN0IGJ5IGxvb2tpbmcgYXQgdGhlIHBpY3R1cmVzIG9uIHRoaXMgYXJ0aWNsZS4gT25lIGludGVyZXN0aW5nIGFwcHJvYWNoIGlzIHRvIHVzZSB0aGUgc3ltYm9sIG9mIGVhY2ggc3VpdDogdGhlIFNwYWRlLCBIZWFydCwgQ2x1YiwgYW5kIERpYW1vbmQuIApJIGJlZW4gcmVwbGFjaW5nIG15IHJ1bnMgd2l0aCBzdGVhZHkgc3RhdGUgc3dpbW1pbmcgc28gSSBzdGlsbCBnZXR0aW5nIGNhcmRpbyBpbi4uIApJbiBvbmUgaW5zdGFuY2UsIHRoZSB3b21hbiBjbGFpbWVkIHRoYXQgV3lubiBwaW5uZWQgaGVyIGFnYWluc3QgdGhlIHJlZnJpZ2VyYXRvciBhbmQgcmFwZWQgaGVyLiBTaGUgc2FpZCBoZSB0aGVuIG1hZGUgYSBwaG9uZSBjYWxsLCBraXNzZWQgaGVyIG9uIHRoZSBjaGVlayBhbmQgbGVmdC4gClRoZSBCb3JnYXRhIGhhcyBzaGFrZW4gdXAgaXRzIGhvbWV0b3duLCB3aGljaCBoYWQgaGlzdG9yaWNhbGx5IGNhdGVyZWQgdG8gYW4gb2xkZXIsIGxlc3MgdXBzY2FsZSBjcm93ZCB0aGFuIGdsaXR6eSwgZ2F1ZHkgVmVnYXMgYW5kIGhhc24ndCBhbHdheXMgcHJvdmVkIGZlcnRpbGUgZ3JvdW5kIGZvciBvdGhlciBjYXNpbm9zLiAKTWFyY2ggMTEuIApOYXRhcmVlIGlzIG9uZSBvZiBtYW55IHNvYXB5IG1hc3NhZ2Ugam9pbnRzIGFsb25nIFJhdGNoYWRhcGhpc2VrIFJvYWQsIHdoaWNoIGlzIGV2ZXIgc28gc2xpZ2h0bHkgb3V0c2lkZSB0aGUgZG93bnRvd24gYXJlYS4gVGhlIG5lYXJlc3QgcHVibGljIHRyYW5zcG9ydCBpcyBIdWF5IEtod2FuZyBzdWJ3YXkgc3RhdGlvbi4gClN3aXRjaGluZyBiYWNrIGFuZCBmb3J0aCBpcyBkb2FibGUsIG9idmlvdXNseSBpdCBpcyBtb3JlIGRpZmZpY3VsdCB0aGF0IGp1c3Qgc3RheWluZyBvbiBhIHJlZ3VsYXIgc2xlZXAgc2NoZWR1bGUuIE9uIHRoZSBmbGlwIHNpZGUsIHdlIHRlbmQgdG8gaGF2ZSBwb29yZXIgc3RhZmZpbmcgdGhhbiBkYXkgc2hpZnQuIFNvbWUgcGVvcGxlIGhhdmUgYSBsb3Qgb2YgZGlmZmljdWx0eSBhZGp1c3RpbmcgdG8gc2xlZXBpbmcgaW4gdGhlIGRheXRpbWUuIApCdXQgbXkgbGF0ZXN0IGFjcm9ueW0/IEknbSBub3cgb2ZmaWNpYWxseSBhbiBBQ09ELCBhbiBBZHVsdCBDaGlsZCBvZiBEaXZvcmNlLiJUaGVyZSBhcmUgdXNlZnVsIGdpZnQgc3VnZ2VzdGlvbnMgYW5kIHRoZW4gdGhlcmUncyBhIHN0b3J5IGFib3V0IG9uZSBvZiBXYWxsbmVyJ3MgZnJpZW5kcyB3aXNoaW5nIHNoZSBoYWQgcHV0IGEgdHJhbnNpdGlvbiByb29tIGluIGhlciBob21lLiAKSXQgaGFzIG9uZSBvZiB0aGUgbGFyZ2VzdCBjb2xsZWN0aW9ucyBvZiBBeXVydmVkaWMgbGl0ZXJhdHVyZSBhbmQgYSBnYXJkZW4gaW4gd2hpY2ggaXQgZ3Jvd3MgbWVkaWNpbmFsIGhlcmJzIHVzZWQgdG8gdHJlYXQgcGF0aWVudHMuLiAKSSBkaWQgbGl0ZXJhbGx5IGV2ZXJ5dGhpbmcgcG9zc2libGUgdG8gdHJ5IHRvIGZpeCBpdC4gCkFuZCB3aGVuIHRoZXkgZ2V0IG9uIHRoZSBjYXNpbm8gZmxvb3IgdGhlIHNlcnZpY2UgbGV2ZWwgdGhhdCBpcyBnb2luZyB0byBiZSBwcm92aWRlZCBmcm9tIHRoZWlyIGxvY2FsIGNvbW11bml0eSwgeWEga25vdywgdGhlIGxvY2FsIGVtcGxveWVlcyBpbiB0aGlzIGNvbW11bml0eS4gU28gSSB0aGluayB0aGF0IHRoYXQgaXMgdGhlIHdvdyBmYWN0b3IsIiBzYWlkIEdhbGxlLi4gCklmIGV2ZXJ5b25lIGlzIHZlcnkgc3RpZmYsIEkgdHJ5IHRvIGZpbmQgc21hbGxlciBncm91cHMgb2YgcGVvcGxlLiAKVGhpbmdzIGxpa2U6IEFtYXpvbiBvZmZlcmluZyB0byBidXkgWmFwcG9zIC8gQmFiaWVzZG90Y29tLCBnZXR0aW5nIHJlamVjdGVkLCBhbmQgdGhlbiByZWxlYXNpbmcgYSBjb21wZXRpbmcgcHJvZHVjdCBhdCBhIG5ldCBsb3NzIHVudGlsIHRoZSBjb21wYW5pZXMgd2VyZSBmb3JjZWQgdG8gYmUgYWNxdWlyZWQgb3IgZmFjZSBiYW5rcnVwdGN5LiAKTm90IGEgc2luZ2xlIHRoaW5nIGFnYWluc3QgYW4gYXR0YWNrIG9uIHRoaXMgY291bnRyeS4gClRoZSB3YXkgaW5jcmVhc2VkIGRlbWFuZCBnZXRzIGltcGxhbnRlZCBpbnRvIGNvbnN1bWVycyBpcyBzbyBzb3BoaXN0aWNhdGVkIGF0IHRoaXMgcG9pbnQgdGhhdCBpdCBpcyBuZWFybHkgaW1wb3NzaWJsZSB0byByZXNpc3QuIEFsc28gbGVhcm4gdGhhdCB0aGVyZSBhcmUgIm5ldXJvdHJhbnNtaXR0ZXJzIGFuZCBob3Jtb25lcyIgaW4gdGhlIGJyYWluIHRoYXQgbmVlZCB0aGUgZHJ1ZyB0byB3b3JrIHByb3Blcmx5LiAKRmFjZXMgeW91IGtub3cgZnJvbSB0aGUgcmVkIGNhcnBldCBkcmF3biB0byBoZXIgZ3JlZW4gZmVsdCB0YWJsZSBldmVyeSB3ZWVrIGZvciBhbiB1bmRlcmdyb3VuZCBoaWdoIHN0YWtlcyBnYW1lIG9mIG5vIGxpbWl0IFRleGFzIGhvbGQgJ2VtLiAKUkVNRU1CRVI6IENyZWVweVBNcyBpcyBhIHN1cHBvcnQgc3ViLgpSZXRpcmVtZW50IHNhdmVycyBpbiB0aGVpciA2MHMgd2hvIGFyZSBhcHByb2FjaGluZyBvciB3aG8gaGF2ZSBhbHJlYWR5IGJlZ3VuIGRlY3VtdWxhdGluZyB0aGVpciBzYXZpbmdzIHRlbmQgdG8gYmUgaWdub3JlZCB0aGlzIHRpbWUgb2YgeWVhci4gQnV0IHRoZXJlIGFyZSBzdHJhdGVnaWVzIHRoYXQgcGVvcGxlIGluIHRoYXQgYWdlIGdyb3VwIHdobyBzdGlsbCBoYXZlIFJlZ2lzdGVyZWQgUmV0aXJlbWVudCBTYXZpbmdzIFBsYW5zIHNob3VsZCBiZSBjb25zaWRlcmluZy4KQm9nZHVrIE4sIEFwcmlsbCBDLihEci4gTmlrb2xpIEJvZ2R1ayB3aG8gaXMgYW4gYW5hdG9taXN0IGFuZCBzdXJnZW9uIGZyb20gUXVlZW5zbGFuZCBBdXN0cmFsaWEuIApEci4gSmVmZnJleSBXaW5uaWNraSBzdGFydGVkIFRoZSBEZW50YWwgU2hvcHBlIGluIE1heSBvZiAyMDA2LiAKSSBhbHdheXMgdGhvdWdodCBpdCB3YXMgcmVhbGx5IHVuZmFpciB0byBoZXIgdGhhdCBzaGUgd2FzbiB0aGUgdmFsZWRpY3Rvcmlhbi4gCjJuZCBDcmFzaCBMYW5kaW5nIFRoaXMgV2VlayBBdCBLZXkgV2VzdCBBaXJwb3J0Rm9yIHRoZSBzZWNvbmQgdGltZSB0aGlzIHdlZWssIGEgc21hbGwgcGxhbmUgaGFzIG1hZGUgYW4gZW1lcmdlbmN5IGxhbmRpbmcgYXQgS2V5IFdlc3QncyBhaXJwb3J0LgpUaGUgQWhtZWRhYmFkIHBvbGljZSBjb21taXNzaW9uZXIgaXNzdWVkIGEgbm90aWZpY2F0aW9uIG9uIE1heSAyIHNheWluZyB0aGF0IHBva2VyIGlzIGEgZ2FtZSBvZiBjaGFuY2UgYW5kIGlzIG5vdCBleGVtcHRlZCB1bmRlciB0aGUgR3VqYXJhdCBQcmV2ZW50aW9uIG9mIEdhbWJsaW5nIEFjdCwgdGhlIElQQSBzYWlkLiBUaGUgYWN0IGV4ZW1wdHMgZ2FtZXMgd2hpY2ggaW52b2x2ZSBza2lsbC4KT25lIE1hbmhhdHRhbiBXZXN0UGFydCBvZiBhIHNpeCBidWlsZGluZyBtaXhlZCB1c2UgY29tcGxleCBzdXJyb3VuZGluZyBhIDIgYWNyZSBsYW5kc2NhcGVkIHBsYXphIG5vcnRoZWFzdCBvZiBIdWRzb24gWWFyZHMsIE9uZSBNYW5oYXR0YW4gV2VzdCBpcyB0aGUgb25seSBzdHJ1Y3R1cmUgdmlzaWJsZSBmcm9tIHRoZSB2YW50YWdlIHBvaW50IG9mIHRoZSBNZXQncyByb29mdG9wIGdhcmRlbi4gVGhlIDY3IHN0b3J5IHRvd2VyIGZyb20gQnJvb2tmaWVsZCBieSBTa2lkbW9yZSwgT3dpbmdzIE1lcnJpbGwgaXMgc2xhdGVkIHRvIGhvdXNlIG9mZmljZXMgZm9yIEVybnN0IFlvdW5nLCBTa2FkZGVuIGFuZCBBY2NlbnR1cmUgd2hlbiBpdCdzIGNvbXBsZXRlIGluIDIwMjEuCkZvciB0aGUgZmlyc3QgY291cGxlIHllYXJzIHlvdSBtYWtlIHN0dWZmLCBhbmQgaXQncyBqdXN0IG5vdCB0aGF0IGdvb2QuIAogdG8gYWxsIG9mIHlvdS4gClJvbWFudGljIFJlY3JlYXRpb25Zb3UgY2FuIHN0YXJ0IHlvdXIgcm9tYW50aWMgZ2V0YXdheSBieSBleHBsb3JpbmcgY2hhcm1pbmcgZG93bnRvd24gSGlnaGxhbmRzLCB3aGljaCBpcyBhIHNob3J0IHdhbGsgZnJvbSB0aGUgcmVzb3J0LiBUaGUgcXVhaW50IGFyZWEgaXMgYnVzdGxpbmcgd2l0aCBib3V0aXF1ZXMsIHNob3BzLCByZXN0YXVyYW50cyBhbmQgYXJ0IGdhbGxlcmllcy4gClNvIHlvdSBjYW4gZG8gcGVyZmVjdGx5IGZpbmUgd2l0aCBhICsxIHVuaXQgYW5kIGl0IG1ha2VzIGl0IG11Y2ggZWFzaWVyIHRvIGRlYWwgd2l0aCB0aGUgSVYgc3lzdGVtLkl0IHNlZW1zIHRoZSBnYW1lIGlzIHF1aXRlIGdlbmVyb3VzIHNvIGdldHRpbmcgYSBmZXcgbmV3IDUgc3RhcnMgZHVyaW5nIGEgbW9udGggaXMgbm90IHVubGlrZWx5LkdldHRpbmcgNXMgaXMgZWFzeSwgZ2V0dGluZyB0aGUgb25lIHlvdSB3YW50IGlzIG5vdCBzbyBlYXN5IHNpbmNlIHRoZSBwb29sIG9mIGNoYXJhY3RlcnMgaGFzIGJlZW4gZ2V0dGluZyBxdWl0ZSBsYXJnZSwgYW5kIGFzaWRlIGZyb20gTGVnZW5kYXJ5IEJhbm5lcnMsIHlvdSBjYW4gZ2V0IHBpdHkgYnJva2VuIGJ5IGEgdW5pdCB0aGF0IG5vdCBvbiB0aGUgYmFubmVyIGZvY3VzIHdoaWNoIHJlc2V0cyB5b3VyIHBpdHkgY2hhbmdlIG1ha2luZyBpdCBhIGJpdCBoYXJkZXIgdG8gZ2V0IHRoZSB1bml0IHlvdSB3YW50LiAKTm93IGV2ZXJ5dGhpbmcgaXMgcG9zc2libGUgYmVjYXVzZSBvZiBzY2llbmNlIHRlY2hub2xvZ3kgdGhhdCBhbHdheXMgZm91bmQgc29tZXRoaW5nIG5ldyBmb3IgdXMgdG8gbWFrZSBvdXIgbGlmZSBlYXN5LiAKTWVhbiB0aGF0IGluIHRoZSBwaHlzaWNzIHNlbnNlLCBub3QgaW4gdGhlIHdvbyB3b28gc2Vuc2UuIEkgYWx3YXlzIGZlbHQgdGhhdCBJIHNob3VsZCBtYWtlIHNvdW5kcyBvbmx5IGlmIHRoZXkgd2VyZSBzbyBwb3dlcmZ1bCB0aGF0IHRoZXkgY291bGQgbm90IG90aGVyd2lzZSBiZSBzdG9wcGVkIHRoYXQgdGhlIG9ubHkgd2F5IEkgZmVsdCB0aGF0IG15IHNleCBzb3VuZHMgd291bGQgYmUgYXV0aGVudGljLiBUaGUgcGh5c2ljYWwgc2Vuc2F0aW9ucywgaW4gbXkgbWluZCwgaGFkIHRvIGxlYWQgdG8gdGhlIGF1ZGlibGUuLiAKVGhhdCBzcGVjaWZpYyB0byBlYWNoIGluZGl2aWR1YWwgdGhvdWdoLCBzbyBoZXJlIGFyZSBzb21lIG1vcmUgZ2VuZXJpYyBpZGVhcy4uIApPaCBhbmQgYmlnIGNvbmdyYXR1bGF0aW9ucyB0byBDb2R5IG9uIHRoZSB3aW4gYW5kIG5ldyBjb3Vyc2UgQ1IhIEkgaGF2ZSBhIGZlZWxpbmcgdGhpcyB3aWxsIGJlIG15IGJlc3QgeWVhciB5ZXQsIGFuZCBhbSBleGNpdGVkIHRoYXQgaXQgaGFzIHN0YXJ0ZWQgd2l0aCBhIGJhbmcuIApUaGUgS2F6YWtoIG1haWQgd2FzaGVzIG15IGNsb3RoZXMgc2VlbWluZ2x5IGZhc3RlciB0aGFuIEkgY2FuIHdlYXIgdGhlbS4gClRoZSBkZWFsZXIgbXVzdCBiZSBkZWFsdCBhIFF1ZWVuIEhpZ2ggdG8gcGxheS4gVGhlIHBsYXllciBjYW4gcGxhY2UgYW4gQW50ZSBiZXQgYXMgd2VsbCBhcyBvcHRpb25hbCBQYWlyIFBsdXMgYW5kIFNpeCBDYXJkIEJvbnVzIGJldHMgdGhhdCBwcm92aWRlIHRoZW0gd2l0aCBhIGNoYW5jZSB0byB3aW4gdXAgdG8gMTAwOjEgb3IgMSwwMDA6MSByZXNwZWN0aXZlbHkgcmVnYXJkbGVzcyBvZiB0aGUgZGVhbGVyJ3MgaGFuZC4uIApUaGVzZSBhcmUgbm90IHF1aXRlIGFzIGR1cmFibGUgYXMgY2xheSBwb2tlciBjaGlwcywgb3IgZXZlbiBtZXRhbCBwb2tlciBjaGlwcywgYnV0IHRoZXkgYXJlIHJlYXNvbmFibHkgcHJpY2VkIGFuZCBzZXJ2ZSBtYW55IHZlcnkgd2VsbCEgSWYgeW91IGFyZSBzaG9wcGluZyBmb3IgcG9rZXIgc3VwcGxpZXMgb24gYSBidWRnZXQsIHlvdSB3aWxsIHNpbXBseSBlbmpveSB0aGUgZGVzaWduIGFuZCBsaWdodCB3ZWlnaHQgY2hhcmFjdGVyaXN0aWNzIG9mIHBsYXN0aWMgcG9rZXIgY2hpcHMuLiAKQW5kIEkgZmVlbCBsaWtlIEJldmVybHksIGtsZWJlciwgYW5kIHplbGxlciBhbGwgaGF2ZSB0b28gbXVjaCBwb3RlbnRpYWwgd2l0aCBhbGwgdGhlc2UgdHJhZGVzIGZseWluZyBhcm91bmQgdG8gZHJvcC4uIApJIGhhdmUgbm8gaWRlYSB3aG8gdGhpcyBndXkgaXMgYnV0IGl0cyBwcmV0dHkgY2xlYXIgZnJvbSB0aGUgZnVsbCB2aWRlbyB0aGF0IHRoZXNlIG1pZ3JhbnRzIG9yIHJlZnVnZWVzIGFyZSB2aW9sZW50IGFuZCB0aHJlYXRlbmluZy4gVGhleSBzZWVtIHRvIGhhdmUgY2xhaW1lZCBhcmVhcyBhcyB0aGVpciBvd24gYW5kIGFyZSBhdHRhY2tpbmcgcGVvcGxlIHdobyBjb21lIGluIHRoZWlyIGFyZWEuIE5vdywgaSBkb250IGtub3cgaWYgc29tZXRoaW5nIGVsc2UgaGFwcGVuZWQgYmVmb3JlIHRoZXkgc3RhcnRlZCBmaWxtaW5nIGJ1dCBmcm9tIHdoYXQgaSBzYXcgaW4gdGhlIHZpZGVvIHRoZSBndXkgd2hvIGdvdCBwdW5jaGVkIHdhcyBhc3NhdWx0aW5nIGhpcyBjYW1lcmEgbWFuIHRyeWluZyB0byB0YWtlIHRoZSBjYW1lcmEgYW5kIHRoZW4gc3RhcnRlZCBzYXlpbmcgaGUgd2FzIGdvaW5nIHRvIGtpbGwgaGltLCBhdCBvbmUgcG9pbnQgc2F5aW5nIHRha2UgeW91ciBsaWZlLCBpbXBseWluZyBoZSBzaG91bGQgd2FsayBhd2F5IGJlZm9yZSBoZSBraWxscyBoaW0uIApJIGFtIDEwMCUgc3VyZSB0aGF0IGV2ZW4gd29tZW4gd2l0aCAicGVyZmVjdCIgYm9kaWVzIGhhdmUgcmFuZG9tICJmbGF3cyIgdGhhdCB0aGV5IG9ic2VzcyBvdmVyLiBWaWN0b3JpYSBTZWNyZXQgbW9kZWxzIHN0aWxsIEZhY2V0dW5lIHRoZWlyIEluc3RhZ3JhbSBwaG90b3MgZm9yIGhlYXZlbnMgc2FrZSEgVGhlcmUgYXJlIHdob2xlIHJlbGlnaW91cyBwaGlsb3NvcGhpZXMgYXJvdW5kIGNvbnRlbnRtZW50IGFuZCBpdCB0YWtlcyBhIGxpZmV0aW1lIHRvIGFjaGlldmUgdGhlIGhpZ2hlc3QgbGV2ZWwuIFNvIEkgdGhpbmsgd2UgYXMgaHVtYW5zIGFyZSB3aXJlZCB0byBhbHdheXMgd2FudCBtb3JlIGFuZCBuZXZlciBiZSBzYXRpc2ZpZWQuIEluIHNvbWUgd2F5cyB0aGlzIGlzIGFubm95aW5nLCBidXQgaW4gb3RoZXIgd2F5cyB0aGlzIGtlZXBzIGxpZmUgaW50ZXJlc3RpbmcuClRoZSBjb3VudHJ5IGVjb25vbXkgZ3JldyBieSBqdXN0IDAuMSBwZXIgY2VudCBpbiB0aGUgZm91cnRoIHF1YXJ0ZXIsIGZvciBhbiBhbm51YWxpemVkIHBhY2Ugb2YgMC40IHBlciBjZW50LCBTdGF0aXN0aWNzIENhbmFkYSBzYWlkIEZyaWRheSBmcm9tIE90dGF3YS4gVGhhdCB0aGUgd29yc3QgcXVhcnRlcmx5IHBlcmZvcm1hbmNlIGluIHR3byBhbmQgYSBoYWxmIHllYXJzLCBkb3duIGZyb20gYW5udWFsaXplZCAyIHBlciBjZW50IGluIHRoZSB0aGlyZCBxdWFydGVyIGFuZCB3ZWxsIGJlbG93IGVjb25vbWlzdCBleHBlY3RhdGlvbnMgZm9yIGEgMSBwZXIgY2VudCBhbm51YWxpemVkIGluY3JlYXNlLi4gClRoZSB2aWRlb3MgYWlkIHlvdSBmb3JldGVsbCB0aGUgc29jaWV0eSBvZiBIb2xtZXMgYW5kIGZvY3VzIG9uIGRldGFpbHMgYWxzbyBoaXN0b3JpY2FsIHdob2xlIHN0b3J5IHRoYXQgZmFydGhlciBhbG9uZyBpbW1lcnNlIHRoZSBwdWJsaWMgaW4gb3VyIG93biBteXN0ZXJ5LiAKTm92ZW1iZXIgMjM6IEpvc2VwaCBTY2h1dHosIFN0ZXBoZW4gTWVsZGUsIFdpbGxpYW0gQm9vbmUsIFphY2hhcnkgSGFrZSwgTWljaGFlbCBNdWVsbGVyLCBhbmQgSmFtZXMgU2NobWl0dC4gCkl0IGlzIG5vdCB1bmNvbW1vbiBmb3IgcGVvcGxlIHRvIGhhdmUgYSBub24gcmVnaXN0ZXJlZCBjb21wYW55IHNhdmluZ3MgcGxhbiwgYSBzdG9jayBzYXZpbmdzIHBsYW4sIG9yIG90aGVyIGludmVzdG1lbnRzIHRoZXkgaGF2ZSBhY2N1bXVsYXRlZCBvdXRzaWRlIGFuIFJSU1AgYXMgdGhleSBhcHByb2FjaCByZXRpcmVtZW50LiBUaGlzIGNvdWxkIGV2ZW4gaW5jbHVkZSBhIFRheCBGcmVlIFNhdmluZ3MgQWNjb3VudC4gCk5vLCB0aGlzICJ0aHJlYXQgYWdhaW5zdCBmcmVlIHNwZWVjaCIgaXMgbm90IGFzIHVubmVydmluZy4gClRoZXJlIGlzIGEgbGl0ZXJhbCBpbmR1c3RyeSBiZWhpbmQgT1dJL0RVSXMuIApUaGVuIGNhbWUgY29uY2VybnMgYWJvdXQgdGhlIGZhdGUgb2YgdGhlIEt1cmRzLCB3aG8gZmFjZSBhc3NhdWx0IGZyb20gVHVya2V5LCB3aGljaCBjb25zaWRlcnMgdGhlbSBhIHRlcnJvcmlzdCBncm91cCwgYW5kIElyYW5pYW4gcmVnaW9uYWwgaW5mbHVlbmNlLi4gClRoZSBiYWxsIGlzIG1hZGUgb3V0IG9mIGluZmxhdGVkIHJ1YmJlciB3aXRoIGEgd29vbCBjb21wb3NpdGlvbi4gVGhleSBhcmUgcHJlc3N1cmlzZWQgZXNwZWNpYWxseSBmb3IgdGhpcyB1c2UuIFRoZXkgYXJlIDZjbSB0byA3Y20gKDIuNWluIHRvIDIuNjI1aW4pIHdpZGUyIGFuZCB3ZWlnaCBiZXR3ZWVuIDU3ZyB0byA1OGcgKDJveiB0byAyLjA2MjVveikuIApUaGF0IHByb21wdGVkIGFuIGFuZ3J5IHN0YXRlbWVudCBmcm9tIFdhcm1iaWVyJ3MgcGFyZW50cywgd2hvIG9uY2UgbGF1ZGVkIFRydW1wLiBBbm90aGVyIHN0dW1ibGUgYnkgdGhlIHByZXNpZGVudCBpbiBoaXMgZWZmb3J0cyB0byBlc3RhYmxpc2ggcGVyc29uYWwgZGlwbG9tYWN5IHdpdGggZGljdGF0b3JzPyBUaGUgRWRpdG9yaWFsIEJvYXJkIFJvdW5kdGFibGUgdGFrZXMgYSBsb29rLi4gCkR1YmJvIGFsc28gaGFzIHRoZSBtb3N0IGdhbWJsaW5nIG1hY2hpbmVzIGluIGNsdWJzICg0NzEpIGFuZCBob3RlbHMgKDI0MSkgaW4gdGhlIHJlZ2lvbi4gCkRvbnQga25vdyB3aGF0IGl0cyBjYWxsZWQsIGJ1dCBpaXJjIHRoZSBqYXBhbmVzZSB1c2VkIHRvIHB1dCBjb252aWN0cyBpbiBjb25jcmV0ZSBob2xlcyBpbiB0aGUgZ3JvdW5kLiBUaGUgd2FsbHMgYW5kIGZsb29yIHNlYWxlZCB3aXRoIHNvbWUgZm9ybSBvZiBzZWFsYW50LiBZb3Ugd291bGQganVzdCBzcGVuZCB5b3VyIGRheXMgYW5kIG5pZ2h0cyBpbiB0aGUgaG9sZSwgYmVpbmcgZmVkIGFuZCBldmVyeXRoaW5nLiBFdmVudHVhbGx5IHlvdSB3b3VsZCBoYXZlIHRvIHBlZSBhbmQgY3JhcCBpbiB0aGUgaG9sZSB5b3Ugd2VyZSBpbmhhYml0aW5nLiBCeSB0aGUgdGltZSB0aGUgZmlyc3QgZmV3IHdlZWtzIGhhZCBwYXNzZWQsdGhlIGZlY2VzIHdvdWxkIHN0YXJ0IHRvIHJvdCwgYWxvbmcgd2l0aCB5b3VyIGZlZXQgYW5kIHNraW4sIGJlY2F1c2UgdGhlIGhvbGUgd291bGQgbmV2ZXIgYmUgY2xlYW5lZC4gVGhleSB3b3VsZCBtYWtlIHN1cmUgdG8gdGFrZSBjYXJlIG9mIHlvdXIgd291bmRzIGZyb20gdGltZSB0byB0aW1lLCBqdXN0IHNvIG11Y2ggdGhhdCB5b3UgZGlkbnQgZ28gc2VwdGljIGFuZCBkaWUgdG8gcXVpY2tseS4gSSByZW1lbWJlciByZWFkaW5nIHNvbWUgcGVvcGxlIGxpdmluZyB1cCB0byBhIHllYXIgbGlrZSB0aGlzIGluIGFnb255LCB1bnRpbCB0aGV5IGRpZWQgZnJvbSB0aGUgaW5mZWN0aW9ucyBjYXVzZWQgYnkgdGhlIHJvdHRpbmcgd291bmRzLgpCdXQsIHRoZSBmaXJzdCBteXRoIGlzIHJlYWxseSB0aGUgd2hvcHBlcjogSSBtZWFuLCBob3cgZG8geW91IGV2ZW4gaGF0ZSBzb21lb25lIGZvciB0aGVpciBmcmVlZG9tcywgYW55aG93PyBUaGUgY2xvc2VzdCBhbmFsb2d5IEkgY2FuIHRoaW5rIG9mIGlzIGJsYWNrIEFtZXJpY2FucyByZXNlbnRpbmcgd2hpdGUgQW1lcmljYW5zIG92ZXIgdGhlaXIgc29jaWFsIHByaXZpbGVnZSwgd2hpY2ggdHJhbnNsYXRlcyB0byB0YW5naWJsZSBmcmVlZG9tcyBpbiBtYW55IGNhc2VzLiAKSSByZWFsbHkgbm90IGp1c3Qgd29ycmllZCBhYm91dCBteXNlbGYgKHRiaCwgSSBvbmUgb2YgdGhlIG1vc3Qgc2VsZiBtb3RpdmF0ZWQgc2thdGVycyBJIGtub3cpIGJ1dCBJIGFsd2F5cyBhZnJhaWQgdGFsa2luZyB0byBhbnlvbmUgYWJvdXQgaXQgc291bmRzIGxpa2UgSSBqdXN0IHdhbnQgdG8gZnVydGhlciBteXNlbGYuIEZXSVcgSSBkb24gaG93IGRvZXMgc2lua2luZyBtb3JlIGVmZm9ydCBpbnRvIG91ciBCIGFuZCBDIHRlYW1zIGJlbmVmaXQgbWU/IEJ1dCBpdCB3b3VsZCBiZW5lZml0IHRoZSBsZWFndWUgc28gbXVjaCFCdXQgeWVhaCwgSSB3b3VsZCByYXRoZXIgYmUgdG9sZCBoYXJkIHRydXRocyAoYXMgbG9uZyBhcyB0aGV5IGxpa2UsIHVzZWZ1bCBqdXN0IHNheWluZyBtZWFuIHNoaXQgdG8gc2F5IGl0IGlzIG5vdCBhcHByZWNpYXRlZCkgdGhhbiBhbnl0aGluZyBlbHNlLkkgYWxzbyBhIHN1cGVyIG1lZWsgYW5kIG5vbiBjb25mcm9udGF0aW9uYWwgaHVtYW4gdGhhdCB3aHkgSSBtYWRlIGEgdGhyb3dhd2F5IGFjY291bnQgdG8gYXNrIGZvciBhZHZpY2Ugb24gcmVkZGl0IGluc3RlYWQgb2YgdGFsa2luZyB0byBteSBvd24gdGVhbW1hdGVzLiAKV2UgaGF2ZSB0aGVzZSByb21hbmkgYmVnZ2FycyBpbiBTd2VkZW4gY29taW5nIGZyb20gc291dGhlcm4gSHVuZ2FyeSwgUm9tYW5pYSBhbmQgQnVsZ2FyaWEgZm9yIGEgZmV3IHllYXJzIGluIGEgcm93IG5vdy4gCldoZW4gdHJhZGluZyBlbmRlZCwgd2Ugc3lzdGVtYXRpY2FsbHkgY29tcGFyZWQgZWFjaCB0cmFkZXIncyBhbmFseXRpY2FsIHNraWxscyBhbmQgc3RyYXRlZ2ljIGludGVsbGlnZW5jZSwgbWVhc3VyZWQgYmVmb3JlIHRyYWRpbmcsIHdpdGggdGhlaXIgZXZlbnR1YWwgZWFybmluZ3MuIEEgY2xlYXIgcGF0dGVybiBlbWVyZ2VkOiBEZXNwaXRlIGludGVuc2UgY29tcGV0aXRpb24sIHNvbWUgdHJhZGVycyB0b29rIGhvbWUgbXVjaCBtb3JlIHRoYW4gb3RoZXJzLiBDb21wYXJpbmcgdHJhZGVycyB3aXRoIHNpbWlsYXIgYW5hbHl0aWMgc2tpbGxzLCB3ZSBmb3VuZCB0aGF0IHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2Ugd2FzIGEgc3Ryb25nIHByZWRpY3RvciBvZiBlYXJuaW5ncy4gRm9yIGluc3RhbmNlLCB0aG9zZSB3aXRoIGF2ZXJhZ2UgYW5hbHl0aWMgc2tpbGxzIGFuZCBiZWxvdyBhdmVyYWdlIHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2UgZWFybmVkIDI1JSBiZWxvdyBhdmVyYWdlLiBCdXQgdHJhZGVycyB3aXRoIGlkZW50aWNhbCBhbmFseXRpYyBza2lsbHMgYnV0IGFib3ZlIGF2ZXJhZ2Ugc3RyYXRlZ2ljIGludGVsbGlnZW5jZSBzY29yZWQgMjUlIGFib3ZlIGF2ZXJhZ2UgICBhIDUwJSBkaWZmZXJlbmNlIGluIHBlcmZvcm1hbmNlLiBBbmQgc3RyYXRlZ2ljIGludGVsbGlnZW5jZSBtYWRlIGFsbCB0aGUgZGlmZmVyZW5jZSBhbW9uZyB0b3AgcGVyZm9ybWVyczogVGhvc2Ugd2l0aCBnb29kIGFuYWx5dGljYWwgc2tpbGxzIGFuZCBleGNlbGxlbnQgc3RyYXRlZ2ljIGludGVsbGlnZW5jZSBwZXJmb3JtZWQgYWJvdXQgNzUlIGJldHRlciB0aGFuIHRob3NlIHdpdGggZXF1YWxseSBnb29kIGFuYWx5dGljYWwgc2tpbGxzIGJ1dCBwb29yIHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2UuClNoZSBoYWQgc2V2ZXJhbCB2b2ljZXMgZnJvbSBEaXNwYXRjaCBpbnF1aXJpbmcganVzdCB3aGF0IHRoZSBoZWxsIGhhZCBoYXBwZW5lZC4gU2hlIHN3aXRjaGVkIGhlciBjb21tdW5pY2F0aW9ucyBvZmYgYXMgV2lsIHRyaWVkIHRvIG1ha2Ugc2Vuc2Ugb2Ygd2hhdCBzaGUgd2FzIGRvaW5nIGFuZCBhcHBlYXNlIERpc3BhdGNoLiAKTWFkZSBieSBtYXJrZXQgbGlzdGVkIHNsb3RzIG1hbnVmYWN0dXJlciBBcmlzdG9jcmF0LCBEb2xwaGluIFRyZWFzdXJlIGlzIGp1c3Qgb25lIG9mIGFueSBudW1iZXIgb2YgcG9rZXIgbWFjaGluZSBicmFuZHMgdGhhdCBhcmUgYXZhaWxhYmxlIHRvIEF1c3RyYWxpYW4gcHVudGVycy4gQnV0LCBvdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIGNvbWluZyBtb250aCwgaXQgd2lsbCBiZSBhbmFseXNlZCwgc2NydXRpbmlzZWQgYW5kIHRhbGtlZCBhYm91dCBsaWtlIG5vIG90aGVyIG1hY2hpbmUgZXZlciBoYXMgYmVmb3JlLiAKTWFzc2FnZSB0aGVyYXB5IGNhbiBiZSB0YXhpbmcgb24gYSBwcmFjdGl0aW9uZXIncyBib2R5LCB3aGljaCByZXN0cmljdHMgdGhlIG51bWJlciBvZiBob3VycyBwZXIgZGF5LCBhbmQgcGVyIHdlZWssIHRoYXQgYSBtYXNzYWdlIHRoZXJhcGlzdCBjYW4gd29yay4gVGhvc2Ugd2hvIGRvIHdvcmsgZnVsbCB0aW1lIHdpbGwgc3BlbmQgYXQgbGVhc3Qgc29tZSBvZiB0aGVpciB3b3JrIGhvdXJzIGVuZ2FnZWQgaW4gYnVzaW5lc3MgbWFuYWdlbWVudCBhbmQgbWFya2V0aW5nIGFjdGl2aXRpZXM7IHRoZXkgbWF5IHBlcmZvcm0gcHJhY3RpY2FsIHRhc2tzIHN1Y2ggYXMgY2xlYW5pbmcgbGluZW5zIGFuZCBvdGhlciBlcXVpcG1lbnQ7IG9yLCB0aGV5IG1heSBlbmdhZ2UgaW4gb3RoZXIgcHJvZmVzc2lvbmFsIGFjdGl2aXRpZXMgc3VjaCBhcyB0ZWFjaGluZyBvciB3cml0aW5nLi4gClRoZSBwb3RlbnRpYWwgZm9yIHZhcmlvdXMgZm9ybXMgb2YgY29lcmNpb24gYW5kIHR5cmFubnkgaW4gc3VjaCBhIHNjZW5hcmlvIGlzIG9idmlvdXMuLiAKVGhlIExpZ2h0bmluZyByZXNlcnZlcyBvdXRzY29yZWQgSGFsaWZheCdzIGNvbnRpbmdlbnQgYnkgMTYsIHRoYW5rcyB0byAyMSBieSBNb29uIGFuZCBhbm90aGVyIDEyIGZyb20gQUogR2FpbmVzLgpCZXNvbmRlcnMgd2VoZ2V0YW4gaGF0IGVzIGJlaSBlaW5lbSBWaWRlbyBiZXIgVHJhbnNwZXJzb25lbiB1bmQgb2Igc2llIHNpY2ggaWhyZW0gR2VuZGVyIGVudHNwcmVjaGVuZCB2ZXJoYWx0ZW4gc29sbHRlbiB1bSBha3plcHRpZXJ0IHp1IHdlcmRlbi4gCjEuIERvIG5vdCBhbHRlciBoZWFkbGluZXM7IGNvcHkgYW5kIHBhc3RlLgo6ICBJbCByZWNldnJhIGRlIGNoYXF1ZSBwYXJ0aWUsIGwndW5lIGFwcnMgbCdhdXRyZSwgbGEgZGNsYXJhdGlvbiBxdSdlbGxlcyB2ZXVsZW50IHNlIHByZW5kcmUgcG91ciBtYXJpIGV0IGZlbW1lIDsgaWwgcHJvbm9uY2VyYSwgYXUgbm9tIGRlIGxhIGxvaSwgcXUnZWxsZXMgc29udCB1bmllcyBwYXIgbGUgbWFyaWFnZSwgZXQgaWwgZW4gZHJlc3NlcmEgYWN0ZSBzdXIgbGUgY2hhbXAgLiAKV0hJUFBFRCBDUkVBTS4gVGhpcyBpcyBhIGN1dGUgb25lLiBJZiB5b3UgaGF2ZSBsZWZ0b3ZlciB3aGlwcGVkIGNyZWFtIG9yIGEgY2FuIHRoYXQgaXMgbmVhcmluZyBpdHMgZXhwaXJhdGlvbiBkYXRlLCBzY29vcCBvciBzcHJheSBmYXQgZG9sbG9wcyBvZiB3aGlwcGVkIGNyZWFtIG9udG8gYSBzbWFsbCB0cmF5IG9yIHBsYXRlLiBQbGFjZSBpdCBpbiB0aGUgZnJlZXplciBhbmQsIHdoZW4gc29saWQsIHRyYW5zZmVyIHRoZSB3aGlwcGVkIGNyZWFtIHRvIGEgY29udGFpbmVyIG9yIGZyZWV6ZXIgcHJvb2YgYmFnLiBGcmVlemUsIGFuZCB0aGVuIHB1bGwgb3V0IGFzIHlvdSB3aXNoIHRvIGZsb2F0IGluIGEgbXVnIG9mIGhvdCBjaG9jb2xhdGUuClRoZSAyMiB5ZWFyIG9sZCB0b2xkIHRoZSBqdWRnZSBoZSAibGlrZXMgd29tZW4gYW5kIGFsY29ob2wiIGFuZCBkcmlua3MgbmVhcmx5IGV2ZXJ5IGRheS4gSGUgYWRkZWQgaGlzIGRyaW5raW5nIHByb2JsZW0gaXMgb2Zmc2V0IGJ5IHRoZSBmYWN0IHRoYXQgaGUgcmVndWxhcmx5IHRyYWlucyBhdCB0aGUgZ3ltLgpFc3BlY2lhbGx5IHdoZW4gc2hlIGdvaW5nIGFyb3VuZCBiYWRtb3V0aGluZyB5b3UgdG8gZXZlcnlvbmUgd2hpbGUgc2hlIGJlaW5nIHN1cHBvcnRlZCBieSB5b3UsIG92ZXIgcmVhc29uYWJsZSBob3VzZSBydWxlcy4gCk5vbiBvcGlvaWQgYW5hbGdlc2ljcywgbGlrZSBhc3BpcmluLCBhY2V0YW1pbm9waGVuIChUeWxlbm9sKSwgaWJ1cHJvZmVuIChBZHZpbCksIGFuZCBuYXByb3hlbiAoQWxldmUpLCBhY3QgYXQgdGhlIHNpdGUgb2YgcGFpbi4gVGhlIGRhbWFnZWQgdGlzc3VlIHJlbGVhc2VzIGVuenltZXMgdGhhdCBzdGltdWxhdGUgbG9jYWwgcGFpbiByZWNlcHRvcnMuIApJIGx1Y2tlZCB1cCBvbiBhIHBhaXIgb2YgYnJhbmQgbmV3IEJsYWNrIEFsbGVuIEVkbW9uZCBPeGZvcmQgYWJvdXQgZWlnaHQgeWVhcnMgYWdvIGF0IGEgc2FsdmFnZSBzdG9yZSB3aGVyZSBJIHVzZWQgdG8gbGl2ZS4gCkxvbCBkZWZpbml0ZWx5LiBJIGxpc3RlbiB0byBhIGxvdCBvZiBwZXJzb25hbCBmaW5hbmNlIHNoaXQgYW5kIHRoaXMgdHlwZSBvZiBiZWhhdmlvciB3aWxsIGFic29sdXRlbHkgYnVyeSBhIGhvdXNlaG9sZC4gU2hpdCBsaWtlIHRoaXMgd2lsbCBnbyB1bmNoZWNrZWQgZm9yIHllYXJzIHdpdGggb25lIHNwb3VzZSBrZWVwaW5nIHNlY3JldCBjcmVkaXQgY2FyZHMgZnJvbSBhbm90aGVyLCBhbmQgdGhlbiB0aGUgdHJ1dGggY29tZXMgb3V0IGFuZCBpdCBkaXNhc3Ryb3VzLiBOb3Qgb25seSBhcmUgeW91IGRlYWxpbmcgd2l0aCB0ZW5zIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzIGluIGNyZWRpdCBjYXJkIGRlYnRzIHRoYXQgaGF2ZSB0byBnZXQgcGFpZCBvZmYgdGhhdCBlZmZlY3QgeW91ciBsb25nIHRlcm0gZmluYW5jaWFsIHBsYW5zLCBidXQgeW91IGRlYWxpbmcgd2l0aCB0aGUgZmFjdCB0aGF0IG9uZSBvZiB5b3Uga2VwdCB0aGlzIG1hc3NpdmUgc2VjcmV0IGZyb20gdGhlIG90aGVyIGZvciB5ZWFycy4KIlJlY29nbml6aW5nIG15IGVycm9ycywgSSByZWFjaGVkIG91dCB0byBNci4gR3VvIGFuZCBhc2tlZCBoaW0gdG8gc2V0dGxlIGhpcyBkZWZhbWF0aW9uIHN1aXQgYWdhaW5zdCBtZSwiIFN0b25lIHNhaWQuICJNci4KVGhlIENvbHRzIGRlZmVuc2UgcmVhbGx5IHN0ZXBwZWQgdXAgaW4gdGhlIDJuZCBoYWxmLiBUaGV5IGhhZCBhIGNoYW5jZSwgYXMgcG9vcmx5IGFzIHRoZXkgcGxheWVkIGluIHRoZSBmaXJzdCBoYWxmIGFuZCBhcyBob3QgYXMgdGhlIENoaWVmcyBzdGFydGVkIHRoZSBnYW1lLiAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ29QYWNrZXJzIGFyZSB0aGF0IGd1eSB0aGF0IHdhcyByZWFsbHkgZ29vZCBhdCBzcG9ydHMgdGhyb3VnaCBjb2xsZWdlIGJ1dCBpcyBub3cgb3ZlciB3ZWlnaHQgYW5kIG91dCBvZiBzaGFwZSBidXQgYWN0cyBsaWtlIHRoZXkgc3RpbGwgYSBzdHVkLlZpa2luZ3MganVzdCBnb3QgYSBuZXcgc3VpdCBhbmQgYXJlIGZlZWxpbmcgZ29vZCBzbyB0aGV5IGhpdCBvbiBnaXJscyB3YXkgb3V0IG9mIHRoZWlyIGxlYWd1ZSBidXQgZmFpbCBtaXNlcmFibGUgcmVzdWx0aW5nIGluIHRyZW1lbmRvdXMgZGlzYXBwb2ludG1lbnQuQmVhcnMgYXJlIHRoZSBndXkgd2hvIGdvdCByZWFsbHkgZmF0IGFuZCB1Z2x5IGR1cmluZyBjb2xsZWdlIGJ1dCByZWNlbnRseSBzdGFydGVkIGV4ZXJjaXNpbmcgYW5kIGlzIG5vdyBnYWluaW5nIHNvbWUgaW50ZXJlc3QgZnJvbSB0aG9zZSBhcm91bmQgaGltLkxpb25zIGp1c3QgZGlkbnQgc2hvdyB1cCBhZ2FpbiBhbmQgYXJlIGluc3RlYWQgYXQgaG9tZSBkcmlua2luZyBhbG9uZS4gCkhlIDIgeWVhcnMgb2xkIGluIEFwcmlsIGkgdGhpbmsuIApJIG1heSBiZSBjb21wbGV0ZWx5IG9mZiBoZXJlIGJ1dCBqdWRnaW5nIGJ5IHRoZSBmYWN0IHRoYXQgZm9yIHNvbWUgcGVvcGxlIHJlc29sdmUgdGhlIGlzc3VlIGJ5IGVpdGhlciB0YWtpbmcgdGhlIHNpZGUgb2YgdGhlaXIgY2FzZSBvZmYsIG1heGluZyB0aGVpciBmYW4gc3BlZWQgb24gdGhlaXIgZ3B1LCBsb3dlcmluZyBmcHNfbWF4LCBsb3dlcmluZyB0aGUgdGV4dHVyZSBzdHJlYW1pbmcgc2V0dGluZywgaW5jcmVhc2luZyBwb3dlciBwZXJmb3JtYW5jZSB0byAicHJlZmVyIG1heCBwZXJmb3JtYW5jZSIgaW4gbnZpZGlhIGNvbnRyb2wgcGFuZWwsIGRpc2FibGluZyB0aGVpciAybmQgbW9uaXRvciwgY2xvc2luZyBkaXNjb3JkIG9yIGluIG15IGNhc2UgbWluaW1pemluZyBkaXNjb3JkIGFuZCB1c3VhbGx5IGl0IGhhcmR3YXJlIGFjY2VsZXJhdGVkIGJ5IHRoZSBncHUuIEl0IHNlZW1zIHZlcnkgbGlrZWx5IHRoYXQgdGhlIGNyYXNoIGlzIGNhdXNlZCBieSBtaXNtYW5hZ2VtZW50L2xhY2sgb2YgR1BVIHJlc291cmNlcyBvciBhIHN1ZGRlbiBkaXAgaW4gR1BVIHBlcmZvcm1hbmNlLiBDb25zaWRlcmluZyBhbGwgb2YgdGhvc2Ugb3B0aW9ucyBlaXRoZXIgaW1wcm92ZSBjb29saW5nIHBlcmZvcm1hbmNlIGFuZCB0aHVzIGRlY3JlYXNlcyB0aGUgY2hhbmNlIGEgR1BVIHdpbGwgdW5kZXJjbG9jayBpdHNlbGYgZnJvbSBnZXR0aW5nIHRvIGhvdCwgcHJvdmlkZXMgbWF4aW11bSBwb3dlciBmb3IgdGhlIEdQVSB0byB1dGlsaXplIG9yIGp1c3QgdXNpbmcgbGVzcyBHUFUgcmVzb3VyY2VzLi4gClRoZSBzZWNvbmQgbGluZSAoMzMxKSBpcyBmb3IgY2xhaW1pbmcgbWVkaWNhbCBleHBlbnNlcyB5b3UgaGVscGVkIHRvIHBheSBmb3IgYW4gYWR1bHQgY2hpbGQgb3IgYW4gYWdlZCBwYXJlbnQsIGZvciBleGFtcGxlLCB0aGF0IGRlcGVuZGVkIG9uIHlvdSBmb3Igc3VwcG9ydC4gSWYgeW91IGFyZSBhbiBlbXBsb3llZSwgbG9vayBmb3IgQm94IDg1IG9uIHlvdXIgVDQgc2xpcCBmb3IgcHJlbWl1bXMgeW91IHBhaWQgZm9yIGNvdmVyYWdlIHRocm91Z2ggeW91ciBlbXBsb3llciBncm91cCBwbGFuLgpUaGUgbWFpbiBvYmplZWN0aXZlIHdpdGggaW4gdGhlIGZpcnN0IGFuIGF2ZXJhZ2Ugb2YgNCB0byBhbiBleHRyZW1lIG9mIDggZHJhaW5hZ2VzIGlzIHRvIGNvdW50IHdiYyB1bmRlciBoaWdoIHBvd2VyIGZpZWxkIChIUE8pIG9yIHdpdGggYSBtYWduaWZpY2F0aW9uIG9mIDQwMFguIElzIHRvIGJlIGFibGUgdG8gY29sbGVjdCB0aGUgbW9zdCByZWxpYWJsZSBzcGVjaW1lbi4gCkEgJDEwIHJlbGVhc2Ugd291bGQgcmVxdWlyZSBhYm91dCAxNjcgRlBQLCBlYXJuZWQganVzdCBieSBwbGF5aW5nIHJlYWwgbW9uZXkgcG9rZXIgdGFibGVzIG9yIHRvdXJuYW1lbnRzLiAKSWYgYW55dGhpbmcsIHRoZXkgcmVwbHkgdG8gbWUgdGVsbGluZyB0aGVtIGkgaGF2ZSBubyBjYXNoIHdpdGggImdvZCBibGVzcyIuIApUaGVzZSBkYXlzLCBzbyBtYW55IHBlb3BsZSBhcmUgaW50ZXJlc3RlZCBpbiBQb2tlciB0aGF0IGl0IGhhcyBub3cgd2VudCBkaWdpdGFsLiBJdCBzZWVtcyB0aGVzZSB0aW1lcyBubyBtYXR0ZXIgd2hlcmUgeW91IGNsaWNrIHlvdSdsbCBzZWUgc29tZSB0eXBlIG9mIGJhbm5lciBvciBwb3B1cCB3aXRoIGZhbmN5IFBva2VyIENoaXBzIHByb2RkaW5nIHlvdSB0byBjbGljayB0aGVpciBhZCBzbyB5b3UgY2FuIHN0YXJ0IHRvIGdhbWJsZSBvbmxpbmUuIElmIEkgaGFkIHRvIHBpY2sgYSBnYW1lIEkgdmlld2VkIGFzIHRoZSBtb3N0IHBvcHVsYXIsIGl0IHdvdWxkIGJlIENhc2lubyBQb2tlci4gClRoZSBjb3VwbGUgYWxzbyBoYXMgVEZTQXMuIApXaXRoIGEgJDcgYnJlYWQgbWFrZXIgc2hlIHNjb3JlZCBhdCBhIGxvY2FsIHRocmlmdCBzaG9wLCBzaGUgbmV2ZXIgc3BlbmRzIG9uIHN0b3JlIGJvdWdodCBzbGljZXMuIFNoZSBub3Qgc2h5IGFib3V0IHByb2Zlc3NpbmcgaGVyIGxvdmUgZm9yIHdob2xlc2FsZSBzdG9yZXMgbGlrZSBDb3N0Y28sIHdoaWNoIGlzIGhlciBnbyB0byBzb3VyY2UgZm9yIGJha2luZyBpbmdyZWRpZW50cy4KSSB1c2Ugc3RvY2sgbWFya2V0cyBhcyByZXByZXNlbnRhdGl2ZSBvZiBhbGwga2luZHMgb2YgZmluYW5jaWFsIG1hcmtldHMgdGhyb3VnaCB0aGUgYXJ0aWNsZS4gCkplIGx1aSBleHBsaXF1ZSBkb25jIHF1ZSBqZSBzb3VoYWl0ZSB1biBlbnZvaSBlbiB0YXJpZiBsZXR0cmUuIEFwcnMgdW4gcmVmdXMsIGonbHZlIGxlIHRvbiBlbiBleHBsaXF1YW50IHF1ZSBsJ0FSQ0VQIGludGVyZGl0IHVuIHRlbCByZWZ1cyBzYXVmIGNpcmNvbnN0YW5jZXMgcGFydGljdWxpcmVzLCBldCBtZSBwcm9wb3NlIGRlIGwnZXhwbGlxdWVyICBzb24gcmVzcG9uc2FibGUuIApPbmUgY2FsbCBmcm9tIHlvdXIgYmFua3MgZnJhdWQgZGl2aXNpb24gYW5kIGdtYXJrZXQgd2lsbCBwcm9iYWJseSBzdWRkZW5seSBiZSByaWdodCBvbiB5b3VyIGNhc2UuIApUaGUgQmVzdCBXZXN0ZXJuIFByZW1pZXIgQWNjcmEgQWlycG9ydCBIb3RlbCBpbiBHaGFuYSBpcyBhIG5ld2x5IGJ1aWx0IGZvdXIgc3RhciBob3RlbCBsb2NhdGVkIGluIG9uZSBvZiBBY2NyYSBtb3N0IGFmZmx1ZW50IGFyZWFzIDUgbWludXRlcyBmcm9tIHRoZSBLb3Rva2EgSW50ZXJuYXRpb25hbCBBaXJwb3J0LiAKL3UvZG93bm5lY2ssIHRoYW5rIHlvdSBmb3IgeW91ciBzdWJtaXNzaW9uLiBVbmZvcnR1bmF0ZWx5LCBpdCBoYXMgYmVlbiByZW1vdmVkIGZvciB2aW9sYXRpbmcgdGhlIGZvbGxvd2luZyBydWxlKHMpOgpTZXJpYWwgbnVtYmVyIDI0OTEwLiAKVGVzdGRleCAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvCldoaWxlIHBva2VyIGludm9sdmVzIGV4cGxpY2l0IGJldHMsIG91ciBsaXZlcyBpbnZvbHZlIGltcGxpY2l0IGJldHMuIER1a2UgZXhwbGFpbnMsIGFuZCByZWxvY2F0aW9uIGRlY2lzaW9ucyBhcmUgYmV0cy4gU2FsZXMgbmVnb3RpYXRpb25zIGFuZCBjb250cmFjdHMgYXJlIGJldHMuIEJ1eWluZyBhIGhvdXNlIGlzIGEgYmV0LiBPcmRlcmluZyB0aGUgY2hpY2tlbiBpbnN0ZWFkIG9mIHRoZSBzdGVhayBpcyBhIGJldC4gRXZlcnl0aGluZyBpcyBhIGJldC4iCklCZUZsb2UgdQpCaXNwaGVub2xzICAgY2hlbWljYWxzIHVzZWQgdG8gY29hdCBtZXRhbCBmb29kIGNhbnMgYW5kIHBsYXN0aWMgY29udGFpbmVycyB0byBwcmV2ZW50IGNvcnJvc2lvbiAgIGFyZSBhYnNvcmJlZCBieSB0aGUgZm9vZCB0aGF0IHRoZXkgcHJvdGVjdCwgY2FuIGRlY3JlYXNlIGZlcnRpbGl0eSBieSBtaW1pY2tpbmcgZXN0cm9nZW4gaW4gdGhlIGJvZHksIGNhdXNlIHdlaWdodCBnYWluLCBhbmQgaW50ZXJmZXJlIHdpdGggbmV1cm9sb2dpYyBkZXZlbG9wbWVudCBpbiBjaGlsZHJlbi4gClRoaXMgaXMgbm90IHNvbWV0aGluZyB3ZSBjYW4gV0lMTCB0byBoYXBwZW4uIFRoZSByZWxheGF0aW9uIHRoYXQgb2NjdXJzIGR1cmluZyBtYXNzYWdlIHByb3ZpZGVzIGV4cGVyaWVuY2UgaW4gdGhpcyBzdGF0ZS4gV2l0aCBwcmFjdGljZSB0aGUgZ29sZmVyIHdpbGwgbW9yZSBlYXNpbHkgYmUgYWJsZSB0byBhbGxvdyB0aGVpciBtaW5kIHRvIHJlY3JlYXRlIHRoaXMgcmVsYXhlZCBmb2N1cyBldmVuIHVuZGVyIHN0cmVzc2Z1bCBjaXJjdW1zdGFuY2VzLi4gClNlaSB1biBjb25mZXJlbnppZXJlIG8gYXV0b3JlIGRpIHNlbWluYXJpLCBjb3JzaSBlIGF0dGl2aXQgbmVsbCBvbGlzdGljbyBvIGRlbGxhIGNyZXNjaXRhIHBlcnNvbmFsZSBlIHNwaXJpdHVhbGU/CkFuIE9mZmljaWFsIFNlbGVjdGlvbiBhdCB0aGUgU3VuZGFuY2UgRmlsbSBGZXN0aXZhbCwgQmV0dGVyIEx1Y2sgVG9tb3Jyb3cgaXMgYSBncmlwcGluZywgZWRneSBhbmQgcHJvdm9jYXRpdmUgZmlsbSB0aGF0IHJpcHMgdGhlIHRyYW5xdWlsLCB3ZWxsIG1hbmljdXJlZCBmYWNhZGUgb2ZmLiAyMCBNYXkgMjAxNyAuIApJIGRvbiB0aGluayBJIG1pc3NpbmcgdGhlIHBvaW50IGVudGlyZWx5LCBvciBldmVuIGEgbGl0dGxlLiBDcm9ja2ZvcmQgd2FzbiBlaXRoZXIuIApBIGxpdHRsZSBzbWFsbCwgcHJlZmVyIDEvMiBwb3Qgc2l6aW5nIGJ1dCBpdCBzdGlsbCBva2F5LiBHZXR0aW5nIHJhaXNlZCBhbGwgaW4gc3Vja3MuIFlvdSBibHVmZiBjYXRjaGluZyBoZXJlLCBzbyBpdCByZWFsbHkganVzdCBkZXBlbmRzIG9uIHdoYXQgeW91IHRoaW5rIG9mIHRoZWlyIGJsdWZmaW5nIHRlbmRlbmNpZXMuIElmIHRoZXkgYXJlIGJhbGFuY2VkLCBjYWxsIGlmIHlvdSB3YW50LiBJZiB0aGV5IG92ZXIgYmx1ZmYsIGNhbGwgYWxsIGRheS4gSWYgdGhleSB1bmRlciBibHVmZiwgc25hcCBmb2xkLiBJZiB5b3UgYWdhaW5zdCBhbiB1bmtub3duLCBqdXN0IGdvIGJ5IHBvcHVsYXRpb24gdGVuZGVuY2llcy4KQWx3YXlzIHNvbWVvbmUgd2l0aCBzb21ldGhpbmcgdG8gc2F5LCByaWdodD8gV2VsbCwgaXQgd2FzIG5ldmVyIGFueXRoaW5nIGJhZCwgYnV0IHVuZm9ydHVuYXRlbHkgdGhlIGNsZWFubGluZXNzIGFuZCBuZXcgbG9vayBkd2luZGxlIGluIGEgYmxpbmsgb2YgYW4gZXllLiBXZSB3ZXJlIGhhdmluZyBhIGhvdXNlIHdhcm1pbmcgcGFydHkgZm9yIG91ciBzb24gUnlhbiBhbmQgaGlzIHdpZmUgU3RhY3kgd2hlbiB3ZSBicm91Z2h0IHRoZSBjYWtlIGluIGFuZCB3ZWxsIGl0IGVuZGVkIHVwIG9uIHRvcCBvZiBvdXIgQmx1ZSBQb2tlciBUYWJsZSBGZWx0IENsb3RoLiAKSGUgaXMgYWxzbyBhIHNlcmlvdXMgbGlmZWxvbmcgcG9rZXIgcGxheWVyIHdobyBoYXMgcGxheWVkIHdpdGggV2FsbCBTdHJlZXQgdHljb29ucyBhbmQgd29ybGQgY2hhbXBpb24gcG9rZXIgcHJvcy4uIApWb2x1bWV0cmljIGFuYWx5c2lzIG9mIHNlcmlhbCBNUkkgc2NhbnMgZm91bmQgYW4gYXZlcmFnZSByZWR1Y3Rpb24gb2YgNjQlIGluIGRpc2Mgc2l6ZS4gCkp1c3QgZ2V0IHJlYWR5IHRvIGRhbmNlLiAKU3dlZXRtb3NlcyAgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ28KSSB0aGluayBvbiBzb21lIG5peCBzeXN0ZW1zLCBpdCBqdXN0IGluIC91c3Ivc2hhcmUvZGljdApTaWUgaGF0IGRhcyBTcGllbCBqYSBuaWNodCBtaXRnZXNwaWVsdCwgc2llIGhhdCB2b24gdm9ybmhlcmVpbiBpaHJlIEFibGVobnVuZyBkZXV0bGljaCBnZW1hY2h0LiBVbmQgbnVyIG1hbCBzbyBhbHMgSGlud2VpczogSmV0enQgYmxvY2tpZXJlIGljaCBEaWNoLCBiaCEgaXN0IG5pY2h0IGdlcmFkZSBkYXMgTml2ZWF1LCB2b24gd2VsY2hlbSBpY2ggYXVmIGlyZ2VuZGVpbiAiS25uZW4iIGluIFZlcmJpbmR1bmcgbWl0IFR3aXR0ZXIgc2NobGllZW4gd3JkZS4KQnVydG9uIEFsdHVyYSBzYWlkIHRoYXQgZHVyaW5nIGhpcyA0MCB5ZWFycyBvZiByZXNlYXJjaCBoZSB3YXMgYXBwYWxsZWQgYXQgdGhlIGxhY2sgb2YgYXR0ZW50aW9uIGdpdmVuIHRvIHRoaXMgbGlmZSBzYXZpbmcgbnV0cmllbnQuIApJdCBpcyBvbmUgb2YgYSBzZXJpZXMgb2YgcGFtcGhsZXRzLCBhbmQgaXQgZXZpZGVudGx5IHN1Y2tlZCB1cCBldmVyeSBiaXQgb2YgY3JlYXRpdml0eSBhdCBTdGFuZGFyZCBPaWw6IFRoZSBRdWVzdGlvbiBvZiBTdWJzb2lsIFJpZ2h0cyBpbiBNZXhpY28gYW5kIFRoZSBBY2N1c3RvbWVkIFByYWN0aWNlcyBpbiBDYXNlcyBvZiBFeHByb3ByaWF0aW9uIGFuZCBDb25maXNjYXRpb24gYXJlIHR3byB0aXRsZXMgdGhhdCBkZWxpdmVyIHRoZSBjb250ZW50cyBnb29kIGFjY3VyYXRlbHkgYW5kIGRyeWx5LiAKVGhleSBoYWQgbm8gaWRlYSB0aGF0IGhlIHdhcyBtYXJyaWVkLCB0aGF0IGhlIGhhZCBhIHNvbi4gClJ5b2tvIFNla2lndWNoaSBhIGxlIGdyYW5kIHRhbGVudCBkJ2NyaXJlIHN1ciBkZXMgc3VqZXRzIGZhbWlsaWVycyBtYWlzIGQneSBwb3J0ZXIgdW4gcmVnYXJkIHRvdXQgIGZhaXQgc2luZ3VsaWVyLiBKJ2FpIGx1IG5vdGFtbWVudCBsZSBNYW5nZXIgZmFudG1lLCBhZG9yIHNhIGNvbGxlY3RlIGQnY3JpdHMgamFwb25haXMgZ291cm1ldHMgTGUgQ2x1YiBkZXMgR291cm1ldHMuIEplIG1lIHN1aXMgYXVzc2kgcGxvbmdlIGF2ZWMgZGxpY2UgZGFucyBGYWRlIDogZWxsZSB5IHRyYWNlIGF2ZWMgZGxpY2F0ZXNzZSBldCBtYWxpY2UgdW5lIGZyb250aXJlIGVudHJlIEZyYW5haXMgZXQgSmFwb25haXMuIApJIGp1c3Qgd2FudGVkIHRvIHJlYXNzdXJlIHlvdSBmcm9tIGEgZmVtYWxlIHBlcnNwZWN0aXZlIHRoYXQgZXZlbiB0aG91Z2ggeW91IGFyZSB0aGUgaW4gdGhpcyBzaXR1YXRpb24gKGFsdGhvdWdoIEkgd291bGRuIHVzZSBhcyBzdHJvbmcgYSB3b3JkIGFzIHRoYXQhKSB5b3UgaGF2ZSBoYW5kbGVkIHRoaW5ncyB3aXRoIG11Y2ggbW9yZSBncmFjZSB0aGFuIG1hbnkgbWVuIGRvLCBldmVuIHdoZW4gdGhleSBoYXZlIGEgbG90IG9mIHJlbGF0aW9uc2hpcCBleHBlcmllbmNlIHVuZGVyIHRoZWlyIGJlbHQuIApUcnkgbm90IHRvIG92ZXJ0aGluayB0aGluZ3MgdG9vIG11Y2guIApOb3cgeW91ciBtb3RoZXIgbWF5IG5vdCBiZSBhbnl3aGVyZSBuZWFyIHRoaXMsIGJ1dCBoYXZpbmcgdGhlIGhvc3BpdGFsIHByZXBhcmVkIHRvIHJ1biBpbnRlcmZlcmVuY2UgZm9yIHdoYXRldmVyIGNyYXp5IGhhcHBlbnMgaXMgYWx3YXlzIGEgZ29vZCBpZGVhLiBQbHVzIG1hbnkgcGxhY2VzIGFwcHJlY2lhdGUgYmVpbmcgcHJlcGFyZWQgZm9yIHNvbWV0aGluZyB0aGF0IG5ldmVyIGhhcHBlbnMgcmF0aGVyIHRoYW4gZGVhbGluZyB3aXRoIHNvbWV0aGluZyB0aGV5IHdlcmVuIHJlYWR5IGZvci4uIApFZGlzaSBGdWxsIGludGlwIHlhbmcgbWVzdW0gZGkgd2FybmV0IC4gClRob3NlIHdobyBhcmUgY29uZmlkZW50IHRoYXQgdGhleSBjb3VsZCBoYXZlIGEgd2lubmluZyBoYW5kIHBsYWNlIHRoZWlyIGJldHMgd2l0aCBhIHNtb290aGVyIGFybSB0aGF0IHRob3NlIHdobyBhcmUgdHJ5aW5nIHRvIGJsYWcgdXNpbmcgcG9vciBjYXJkcywgYW5kIG9ic2VydmVycyBjYW4gZ3Vlc3MgaW4ganVzdCB0d28gc2Vjb25kcy4KQW5kIGhvdyBkaWQgaXQgZmFpbCB0byBkbyB0aGF0IGhlcmU/IFRoZSBjb250cm9sIHNhbXBsZSBpcyB1c2VkIHRvIHByb3ZlIHRoZSBETkEgb24gdGhlIGFjdHVhbCBldmlkZW5jZSBkaWQgbm90IGNvbWUgZnJvbSBjcm9zcyBjb250YW1pbmF0aW9uLiAKWW91IGFyZSBzb21ld2hhdCBjb25mdXNlZCBieSB0eXBlIEkgYW5kIHR5cGUgSUkgZXJyb3IgY29udHJvbC4gVHlwZSBJIGVycm9yIChmYWxzZSBwb3NpdGl2ZXMpIGFyZSBjb250cm9sbGVkIGluIGZyZXF1ZW50aXN0IHN0YXRpc3RpY3MgYnkgc2V0dGluZyBhIHAgdmFsdWUgdGhyZXNob2xkLiAKT3JnYW5pemVycywgc3VjaCBhcyBhIHNwaWNlIHB1bGxvdXQgYWxvbmdzaWRlIHRoZSByYW5nZSwgY3V0IGRvd24gb24gY291bnRlcnRvcCBjbHV0dGVyLldoaWxlIHRoZSB2YXVsdGVkIGNlaWxpbmcgaW4gdGhlIGtpdGNoZW4gaGVscHMgbWFrZSB0aGUgc3BhY2UgZmVlbCBhaXJ5IGFuZCBsaWdodCwgaXQgdGVzdGVkIHRoZSB0ZWFtIG1hdGggc2tpbGxzLiAKWW91ciBzYWZlc3QgYmV0IHdoZW4gY29sb3Jpbmcgb3IgcmVsYXhpbmcgeW91ciBoYWlyIGlzIHRvIGhhdmUgdGhlIGpvYiBkb25lIGJ5IGEgcXVhbGlmaWVkIHByb2Zlc3Npb25hbCBzdHlsaXN0IG9yIGNvbG9yaXN0LiBJZiB5b3UgZG8gY2hvb3NlIHRvIHVzZSBoYWlyIGR5ZXMgb3IgcmVsYXhlcnMgYXQgaG9tZSwgYWx3YXlzIGZvbGxvdyB0aGUgcGFja2FnZSBpbnN0cnVjdGlvbnMuIApIZXkgcHJlc3RvICEuLiAKSSBkaXNsaWtlIHNpdHRpbmcgZG93biBhdCBhIHBsYWNlLCBsb29raW5nIHRocm91Z2ggdGhlIG1lbnUgYW5kIGJlaW5nIHRvbGQgdG8gInBsZWFzZSBzY2FuIHRoZSBRUiBjb2RlLCB3ZSBkb24gdGFrZSBtYW51YWwgb3JkZXJzIGFueW1vcmUuIi4gCihQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBUcmFmZmljIFBpeGVsVGhpcyBpcyB1c2VkIHRvIGNvbGxlY3QgZGF0YSBvbiB0cmFmZmljIHRvIGFydGljbGVzIGFuZCBvdGhlciBwYWdlcyBvbiBvdXIgc2l0ZS4gVW5sZXNzIHlvdSBhcmUgc2lnbmVkIGluIHRvIGEgSHViUGFnZXMgYWNjb3VudCwgYWxsIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGluZm9ybWF0aW9uIGlzIGFub255bWl6ZWQuIApUaGV5IGEgdGVhbSB0aGF0IGhhcyBiZWVuIHRvIHRoZSB0b3VybmFtZW50IG5pbmUgeWVhcnMgaW4gYSByb3csIGFuZCB5b3UganVzdCB3YWl0aW5nIGZvciBNaWNrIENyb25pbiBhbmQgdGhlIHRlYW0gdG8gdGFrZSB0aGF0IG5leHQgc3RlcC4gCkRpYW5hIHdhcyBub3QgdGhlIG1vc3QgZGlzY2VybmluZyBvZiBtb3J0YWxzLCBidXQganVzdCBhdCB0aGlzIG1vbWVudCBpdCBzdHJ1Y2sgaGVyIHRoYXQgQW5uZSB3YXMgbm90IGxvb2tpbmcgZXhhY3RseSBvdmVyam95ZWQuIFRoZSBzdXJwcmlzZSB3YXMgdGhlcmUsIGJleW9uZCBkb3VidCAgIGJ1dCB3aGVyZSB3YXMgdGhlIGRlbGlnaHQ/Ck1lZGlhIHBlcnNvbiBhbmQgbWVkaWEgY29udGVudCBvZiB0aGUgeWVhciBhcmUgb2YgcGFydGljdWxhciBpbnRlcmVzdCB0byB0aG9zZSBvZiB1cyBpbiB0aGUgbWVkaWEsIG9mIGNvdXJzZSwgYnV0IHRoZSBwb2tlciBpbm5vdmF0aW9uIGFuZCBjaGFyaXRhYmxlIGluaXRpYXRpdmUgY2F0ZWdvcmllcyBhbHNvIGhpZ2hsaWdodCB0aGUgYmVzdCBvZiBvdXIgaW5kdXN0cnkuIEl0IGlzIGluc3BpcmluZyB0byBob25vciB0aGUgd2lubmVycyBhbmQgY2VsZWJyYXRlIHRoZSBnYW1lIGF0IHRoZSBzYW1lIHRpbWUuCkp1c3QgYXNrIGFueSBjb3Agd2hvIGhhcyB0byBnZXQgZXlld2l0bmVzcyB0ZXN0aW1vbnkgaG93IGNvbnNpc3RlbnQgcGVvcGxlIGFyZSBmcm9tIHBlcnNvbiB0byBwZXJzb24uCihQaG90byBieSBHZW5lIFN3ZWVuZXkgSnIvR2V0dHkgSW1hZ2VzKS4gClRoaXMgaXMgYnVsbHNoaXQuIEV2ZW4gaWYgdGhlIHdvcmxkIGdldHMgNSBkZWdyZWUgd2FybWVyIHdlIGNhbiBzdGlsbCBsaXZlIG9uIGl0LiBKdXN0IG5vdCBhcyBnb29kIGFzIG5vdy4gCkFjdHVhbGx5LCB0aGUgbW9yZSBJIHRoaW5rIGFib3V0IFNoZWVoYW4gbG9naWMsIHRoZSBtb3JlIEkgc2VlIHRoYXQgdGhlIG9ubHkgY29uY2x1c2lvbiB3ZSBjYW4gZHJhdyBpcyB0aGF0IG1hc2N1bGluZSBtZW4sIG5vdCBnYXlzLCB0aGUgcHJvYmxlbS4gTWVuLCByZWdhcmRsZXNzIG9mIGRlc2lyZSwgaW5zaXN0IG9uICJwcm90ZWN0aW5nIiB0aHJvdWdoICJlbGltaW5hdGluZy4iIE1hc2N1bGluZSBtZW4gaW5zaXN0IG9uIHB1cmdpbmcgYWxsIHRoYXQgaXMgdW5saWtlIHRoZW0gZnJvbSB0aGVpciBtaWRzdDogd29tZW4sIGdheXMsIHJhY2lhbC9ldGhuaWMvcmVsaWdpb3VzIG90aGVycy4uIApZb3UgY2hvc2VuIHRvIGJlIHNvIHNlbGZpc2ggdGhhdCB5b3Ugd291bGQgcnVpbiBhbiBlbnRpcmUgZHluYW1pYyBqdXN0IHNvIHlvdXIgZGF1Z2h0ZXIgY2FuIGxlYXJuIHRvIGZpc2ggd2l0aCBmcmllbmRzIHNoZSB3b24gZXZlbiBiZSBpbnRlcmVzdGVkIGluIGtlZXBpbmcuIApNZXd5YWJlIHUKMi4gVEhFIElOQ09NRSBQQVJUTkVSU0hJUCBQUk9HUkFNClRoZSBwbGF5ZXIgcHV0IGhpcyBzdHJhZGRsZSBpbnRvIHRoZSBwb3QgYmVmb3JlIHRoZSBjYXJkcyBhcmUgZGVhbHQsIGp1c3QgYXMgd2l0aCB0aGUgYmxpbmRzLiAKSGUgaGFzIG1vcmUgb2YgbXkgZGFkIGluIGhpbSB0aGFuIGhlIGRvZXMgb2YgSmVmZiBvciBldmVuIEplZmYgcGFyZW50cy4gSSBUSElOSyBZT1UgTkVFRCBZT1VSIEhFQUQgRVhBTUlORUQhIFdFIEhBVkUgQSBHUkVBVCBDT1VOU0VMT1JBVCBTQ0hPT0whIEkgRE9OIFRISU5LIE1BVFQgSVMgR09OTkEgTElLRSBUSElTIEFUIEFMTC4gCkkgcGVyc29uYWxseSBhbSAibW9yZSBBbWVyaWNhbiIgdGhhbiBUaGFpIChpZiB0aGF0IG1ha2VzIHNlbnNlKSwgZXZlbiB0aG91Z2ggSSBjYW4gc3BlYWsvcmVhZC93cml0ZSBUaGFpIGFuZCBhbSBpbiB0b3VjaCB3aXRoIG15IGZhbWlseSB0aGVyZS4gCkVkaXQ6IGhvd2V2ZXIgSSBzaG91bGQgYWRkLCB5b3VyIHJpZ2h0IHRvIHNheSB0aGluZ3MgdGhhdCBtYXkgYmUgb2ZmZW5zaXZlIGVuZHMgd2hlbiB5b3Ugc3RhcnQgbmVnYXRpdmVseSBhZmZlY3Rpbmcgb3RoZXJzLiAKS2lkZCBwb2ludHMgdG8gS2VycmlzZGFsZSBMdW1iZXIsIHdoaWNoIGhhcyB0YWtlbiBhIGJvb3RoIGF0IHRoZSBzaG93IGZvciB0aGUgZmlyc3QgdGltZS5UaGUgQkMgSG9tZSArIEdhcmRlbiBTaG93LCBGZWJydWFyeSAyMCB0byAyNCBhdCBCQyBQbGFjZSwgaXMgYnJpbW1pbmcgd2l0aCBpZGVhcyBmb3IgcHJvamVjdHMgYmlnIGFuZCBzbWFsbCB0byByZXZhbXAgeW91ciBsaXZpbmcgc3BhY2UuYSBhbmQgcG9wIHRoYXQgYmVlbiBhcm91bmQgYSByZWFsbHkgbG9uZyB0aW1lLCBhbmQgdGhleSBvZmZlciBhIHdpZGUgcmFuZ2Ugb2Ygb3V0ZG9vciBwcm9kdWN0cywgQkJRcywgcGF0aW8gZnVybml0dXJlLCBhbmQgbGF3biBhbmQgZ2FyZGVuIGVxdWlwbWVudCwgaGUgc2F5cy4gClRoZSBhbnN3ZXIgd2lsbCBub3QgYmUgdmFwZSBwZW5zLiBXaHk/IEJlY2F1c2UgdGhleSBhcmVuIGFzIGNvbnZlbmllbnQuIE5vdCBjb252aW5jZWQgSSBub3QgImJpZyB0b2JhY2NvIj8gR29vZ2xlIG15IHNjcmVlbiBuYW1lLi4gCkhvd2V2ZXIsIGl0IGFsbG93cyB5b3UgdG8gZW5qb3kgYSBzZXJ2ZXIgdGhhdCBpcyBhbGwgeW91ciBvd24sIGFuZCBpdCBhbGxvd3MgeW91IHRoZSBmbGV4aWJpbGl0eSB0byBtYWtlIGNoYW5nZXMgd2hlcmUgeW91IGRlZW0gZml0IGluIHRoZSBwcm9ncmFtIGFuZCBvdGhlciBhcmVhcyBvZiB0aGUgc2VydmVyLiBJZiB5b3UgcGxhbiB0byBoYXZlIGEgdmVyeSBsYXJnZSAzMDAgQ2xheSBQb2tlciBDaGlwcyBidXNpbmVzcywgaXQgaXMgaW1wb3J0YW50IHRvIGNvbnNpZGVyIHRoaXMgdHlwZSBvZiBvcHRpb24uLiAKWW91IGx1Y2t5LCB5b3UgY2F0Y2ggdGhlbSBzYXlpbmcgIndlIG5vdCBoYXZpbmcgcHJvYmxlbXMuIiBpdCBub3Qgam91cm5hbGlzbSwgaXMgaXQ/IHByb3Rlc3QgYW5kIGFjdGl2aXNtIGFuZCBwb3NzaWJseSBldmVuIGEgam9rZSBhbmQgdGhpcyBpcyB3aGVyZSBPIHN0ZXBzIG92ZXIgdGhlIGxpbmUgb2YgImZ1bm55IiBhbmQgInJpZ2h0IG9uIiBpbnRvICJzdHVwaWQiIGFuZCAic2VuZCBoaW0gdG8gamFpbC4iLiAKSXQgd2FzIGN1dHRocm9hdC4uIApTbyBtdWNoIG1vcmUgdGhvdWdoLiBMaXZpbmcgTXkgTGlmZSBpcyBhIGdyZWF0IHBsYWNlIHRvIHN0YXJ0LiAKVGhlICJUYWtpbmcgU3RvY2sgb2YgdGhlIEdsb2JhbCBQYXJ0bmVyc2hpcCBmb3IgRGV2ZWxvcG1lbnQiIHJlcG9ydCBvZiB0aGUgVU4gTURHIEdhcCBUYXNrIEZvcmNlIG1vbml0b3JzIHRoZSByZWNlbnQgYWNoaWV2ZW1lbnRzIGFuZCBjaGFsbGVuZ2VzIGluIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgTWlsbGVubml1bSBEZXZlbG9wbWVudCBHb2FsIDgsIHdoaWxlIGxvb2tpbmcgYWhlYWQgdG93YXJkcyB0aGUgbmV3IHN1c3RhaW5hYmxlIGRldmVsb3BtZW50IGFnZW5kYSB0aGF0IHdpbGwgYmUgYWRvcHRlZCBieSB3b3JsZCBsZWFkZXJzIGF0IHRoZSBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCBTdW1taXQgdGhpcyBtb250aCAoU2VwdGVtYmVyIDI1IDI3KSwgYW5kIHdoaWNoIHdpbGwgaW5jbHVkZSB0aGUgbGF1bmNoIG9mIGEgbmV3IHNldCBvZiBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCBHb2Fscy4gRG93bmxvYWQgdGhlIE1ERyBHYXAgVGFzayBGb3JjZSBSZXBvcnQgMjAxNS4gClNldHRsZWQgb24gYSBtaXhlZCB1c2UgaW5kdXN0cmlhbCBidWlsZGluZyBpbiB0aGUgYm9yb3VnaCBvZiBBaHVudHNpYyBmb3IgaXRzIDMyLDAwMCBzcXVhcmUgZm9vdCBwcm9kdWN0aW9uIHNpdGUgYW5kIGhlYWRxdWFydGVycywgbWFraW5nIGl0IHRoZSB3b3JsZCBmaXJzdCBjb21tZXJjaWFsIHJvb2Z0b3AgZ3JlZW5ob3VzZSwgYWNjb3JkaW5nIHRvIFJhdGhtZWxsLi4gCktsaW5nb24gQWNhZGVteSBpcyBzdXV1cGVyIGJ1Z2d5OyBpaXJjIHRoZXkgd2VyZSBiZWhpbmQgc2NoZWR1bGUgYW5kIHJlbGVhc2VkIGl0IGJlZm9yZSBpcm9uaW5nIG91dCBzb21lIG9mIHRoZSBraW5rcy4gCllvdXIgcGhvbmUgd2lsbCB0YWtlIEFIIE1BWkUgSU5HIHBob3RvcyB2aWRlby4gVW5sZXNzIHlvdSBhaW0gdG8gc3RhcnQgYSBwcm9mZXNzaW9uYWwgdHJhdmVsIHZsb2csIHlvdSB0cnVseSBkb250IG5lZWQgZXh0cmEgY2FtZXJhcyBhbmQgU0QgY2FyZHMuIFRha2UgcGhvdG9zIGFuZCB2aWRlb3MgdG8geW91ciBoZWFydCdzIGNvbnRlbnQgYW5kIHdoZW4geW91IHJvbGwgaW50byB0b3duIGp1c3QgaGFuZyBvdXQgYXQgYSBNY0RvbmFsZHMgKGZyZWUgd2lmaSkgYW5kIGVtYWlsIGFsbCB0aGF0IHN0dWZmIGhvbWUgdG8gbWFrZSBzcGFjZSBvbiB5b3VyIHBob25lIGZvciB0aGUgbmV4dCBsZWcgb2YgdGhlIHRyaXAuIApDZWNpIHRhbnQgZGl0LCBpbCBhdXJhaXQgdCBwcm9maXRhYmxlIHF1ZSBjZXQgb3V2cmFnZSBhbGxvbmdlIHF1ZWxxdWUgcGV1IGxhIHNhdWNlIHBvdXIgcXVpIG4gY29ubmF0IHJpZW4gZW4gbmVyZ3RpcXVlIGNoaW5vaXNlLiBJbCBlc3QgZCBkb21tYWdlIHF1ZSBjZXR0ZSBkaXRpb24gKHVuZSByaW1wcmVzc2lvbiwgZW4gZmFpdCkgbiBwYXMgdW4gcGx1cyBwYXIgcmFwcG9ydCAgY2VsbGUsIHBsdXMgYW5jaWVubmUsIGRlIDE5OTguIApJIGhhdmUgZ29hbHMgZm9yIHRoZSBuZXh0IHRocmVlIHRvIGZpdmUgeWVhcnMgdG8gYWNxdWlyZSAxLDAwMCBkb29ycywgYW5kIEkgd2lsbCByZWxlbnRsZXNzbHkgcHVyc3VlIHRoZSBnb2FsIHRvIGNvbXBsZXRpb24uIApCdXQgd2l0aG91dCB0aGUgYWNpZGljIGVmZmVjdCB0byBiYWxhbmNlIHRoZSBoYXJzaCBhbGthbGluZSBvZiB0aGUgYmFraW5nIHNvZGEsIHRoZSBoYWlyIGFuZCBzY2FscCBtaWdodCBiZWNvbWUgYnJpdHRsZSBhbmQgZHJ5LiAKTXkgZ2lybGZyaWVuZCBsaXZlcyBkb3duIHRoZXJlIChob3BlZnVsbHkgaSB3aWxsIHRvbywgc29vbikgYW5kIHNoZSB0cmllZCBmb3IgZGF5cyBhbmQgZGF5cyB0byBnZXQgaGVyIG1vbSB0byBsZWF2ZS4gc2hlIGxpdmVzIHdpdGggaGVyIHBhcmVudHMsIGhlciBzaXN0ZXIgYW5kIGFsbCB0aGVpciBwZXRzLCBhbmQgaGVyIGZhdGhlciB3YXMgb3V0IG9mIHRvd24gZHVyaW5nIHRoZSB3aG9sZSB0aGluZywgYW5kIHNoZSBjb3VsZG4ganVzdCBsZWF2ZSB0aGVtIHNvIHNoZSBzdHVjayBhcm91bmQuCkNhbiB0aGUgaW50ZXJ2ZXJ0ZWJyYWwgZGlzY3MgcmVoeWRyYXRlIGFuZCByZWdlbmVyYXRlPyBUaGUgZGlzY3MgbmVlZCB0aHJlZSB0aGluZ3MgdG8gcmVnZW5lcmF0ZToKV2Ugc3RpbGwgaGF2ZSBhIGxvbmcgd2F5IHRvIGdvLCBidXQgY2xlYXJseSB3ZSBhcmUgY2xvc2VyIHRvIHJlY292ZXJ5IHRvZGF5IHRoYW4gd2Ugd2VyZSBpbiBKYW51YXJ5LiAKVGhlbiB5b3UgYXJlIHBhaWQgZm9yIHlvdXIgZGVzaWduIHdvcmsgYW5kIHRoZXkgaGF2ZSB0aGUgZGVzaWducyB0aGF0IHRoZXkgY2FuIGNob29zZSB0byB1c2Ugbm93LCBsYXRlciwgd2l0aCB5b3UsIG9yIHdpdGggc29tZW9uZSBlbHNlLi4gCklmIHlvdSBnbyBhIGZldyB0aW1lcywgeW91IG1pZ2h0IGZpbmQgeW91IHByZWZlciB0aGUgYWVzdGhldGljIG9mIHNvbWV0aGluZyB5b3Ugc2VlLCBhbmQgdHJ5IGl0IGZvciB5b3Vyc2VsZiwgYnV0IGdlbmVyYWxseSBzcGVha2luZywgdGhlcmUgYXJlIG5vIHJ1bGVzIGFzIHN1Y2guSSBoYXZlIGdsYXNzZXMgYnkgbXlzZWxmLiBJbiBlYXJsaWVyIHRpbWVzIEkgcHV0IHRoZW0gaW50byBteSB0b3dlbCBhbmQgd3JhcHBlZCBpdCBhcm91bmQgdGhlbS4gClRoZXJlIGFyZSBwbGVudHkgb2YgY29udmVydGlibGUgcG9rZXIgZGluaW5nIHRhYmxlcyBhbmQgcHJvZmVzc2lvbmFsIHBva2VyIHRhYmxlcyBmb3Igc2FsZSB0aGF0IGFyZSBib3RoIGF1dGhlbnRpYyBhbmQgY2hlYXAuIApXaGVuIHlvdSBzZWUgdGhlIGxvZ28gb24gdGhlIGNoaXBzLCB0aGVyZSBpcyBhIGNlcnRhaW4gcHN5Y2hvbG9naWNhbCBiZW5lZml0IHRvIHRoZWlyIHByZXNlbmNlIHRoYXQgY2Fubm90IGJlIG92ZXJsb29rZWQuIE1haW5seSwgdGhlIGNoaXBzIHdpbGwgZGVsaXZlciB0aGUgbG9vayBhbmQgZmVlbCBvZiBhIHByb2Zlc3Npb25hbCBldmVudC4gU3VjaCBhIGJlbmVmaXQgc2hvdWxkIG5ldmVyIGJlIG92ZXJzdGF0ZWQgYmVjYXVzZSBpdCBjYW4gY29udHJpYnV0ZSBncmVhdGx5IHRvIHRoZSBhY3R1YWwgZW5qb3ltZW50IG9mIHVzaW5nIHRoZSBjaGlwcyBpbiBhIGZyaWVuZGx5IGdhbWUuLiAKSW4gb25lIG9mIHRoZSBtb3ZpZXMgUGljYXJkIGFuZCBEYXRhIGFyZSBpbiBhIHJvb20sIGRlZGljYXRlZCB0byBjaGFydGluZywgdHJhY2tpbmcgdGhlIHJpYmJvbnMgbmV3IGNvdXJzZSBhZnRlciBTb3JlbiAodGhlIGJhZCBndXkpIGJsb3dzIHVwIGEgc3RhciwgYWx0ZXJpbmcgdGhlIGdyYXZpdHkgaW4gdGhlIHNlY3RvciBhbmQgY2F1c2luZyBpdCB0byBjaGFuZ2UgY291cnNlLCBhbG9uZyB3aXRoIHNldmVyYWwgc2hpcHMgdHJhdmVsaW5nIHRocm91Z2ggdGhlIHNhbWUgc2VjdG9yLi4gCkkgbG92ZSB0aGUgZ2FtZSwgSSBkb24ndCB0aGluayBJJ20gYWRkaWN0ZWQsIGFzIEkgdXN1YWxseSBxdWl0IGR1cmluZyBteSBsb3Npbmcgc2Vzc2lvbnMgYW5kIGRvbid0IHN0b3AgZG9pbmcgb3RoZXIgc3R1ZmYgKGdpcmxmcmllbmQsIGRvZ3MsIGJlZXIsIGJlZXIsIGJlZXIpIGJlY2F1c2Ugb2YgaXQuIEhvd2V2ZXIsIHBva2VyIHNlZW1zIHRvIGJyaW5nIGJhY2sgdG8gbXkgbGlmZSB0aGUgdGhyaWxsIGFuZCBtb3RpdmF0aW9uIEkgaGFkIGJhY2sgaW4gbXkgZWFybHkgMjBzIHdoZW4gSSBzdGFydGVkIHByb2dyYW1taW5nIGNvbXB1dGVycyBmb3IgYSBsaXZpbmcuIEkgd2FzIHRoZSBraW5nIG9mIHRoZSB3b3JsZCBiYWNrIHRoZW4uClRoZXJlIHdlcmUgMjAgb2YgdXMuIFdlIGFsbCBoYWQgdG8gcGF5IDEwMCQgdG8gZ2V0IDEwMDAgY2hpcHMuIFdlIGFsbCBoYWQgYSBibHVlIGNoaXAgKFN1cnZpdmFsIGNoaXApIHdoaWNoIHdlIGNvdWxkIHVzZSBmb3IgYW5vdGhlciAxMDAwIGNoaXBzLiBUaGUgc3RydWN0dXJlIHdhcyAzMCBtaW51dGVzIGVhY2ggcm91bmQuIFN0YXJ0aW5nIHdpdGggMS8yLCAyLzUsIDUvMTAsIDcvMTUsIDEwLzIwLCAxNS8zMCwgMjUvNTAsIDUwLzEwMCBhbmQgc28gb24uIEkgbGFzdGVkIHRpbGwgdGhlIDUwLzEwMCAoYWxtb3N0IDYgaG91cnMgaW5jbHVkaW5nIHNvbWUgc2hvcnQgYnJlYWtzKS4gSSBzdGFydGVkIHNsb3cuIEkgaGl0IDEgOCBwYWlyIG9uIHRoZSBmbG9wIGFuZCAxIDEwIHBhaXIgb24gdGhlIHR1cm4uIFRoZSBjYXJkcyBvcGVuIHdlcmUgYSAyLDcsIDggYW5kIDEwLiBJIGhhZCA4IGFuZCAxMCBpbiBteSBoYW5kLiBJIHBsYXllZCBzbG93LiBUaGUgb3RoZXIgZ3V5cyBrbmV3IEkgd2FzIG5ldyBhbmQgSSBoYWQgYmVlbiByZSByYWlzZWQgd2hpY2ggbGVkIHRvIG1lIGZvbGRpbmcgaW4gdGhlIHBhc3QuIFRoaXMgdGltZSwgSSB3YXMgcmUgcmFpc2VkIG9uIHRoZSB0dXJuIGFuZCB0aGlzIHdhcyB0aGUgYmlnZ2VzdCByYWlzZSBzbyBmYXIgICAyMDAgY2hpcHMuIChTdHVwaWQgbWlzdGFrZSkgSSByZSByYWlzZWQgaGltIHRvIDUwMCBjaGlwcy4gTGl0dGxlIGRpZCBJIGtub3csIGhlIGluc3RhbnRseSBjYWxsZWQgbWUgYW5kIGhlIGhhZCBhIHN0cmFpZ2h0LiBJIHdhcyBkb3duIHRvIDMwMCAzNTAgb2RkIGNoaXBzLiBUaGVuIEkgd29uIGEgZmV3IGhhbmRzIGhlcmUgYW5kIHRoZXJlLiBJIHRob3VnaHQgSSBwbGF5ZWQgd2VsbCBiZWNhdXNlIEkgd2FzIGFibGUgdG8gaW5jcmVhc2UgdGhlIHNtYWxsIHBvdHMgd2VsbCB3aGVuIEkgaGFkIGEgc3Ryb25nZXIgaGFuZC4gSSBzb21laG93IGdvdCB0aHJvdWdoIDYgcm91bmRzICgzIGhvdXJzKSBhbmQgSSBoYWQgOTAwKyBjaGlwcy4gQW5kIHRoZW4gaXQgd2FzIHRoZSBsYXN0IGNhbGwgdG8gdXNlIHRoZSBleHRyYSBidXkgaW4uIEkgd2FzIG5vdCBnb25uYSwgYnV0IGV2ZXJ5Ym9keSB3aXRoIGJpZ2dlciBzdGFja3Mgb2YgMzAwMCBjaGlwcyBhbHNvIGJvdWdodC4gMjAgcGxheWVycyBoYWQgZ29uZSBkb3duIHRvIDEyLiBTbywgSSBzcGVudCAxMDAkIG1vcmUuCiJUaGV5IGNhbiB3YWdlIGZ1bGwgd2FyIHdpdGggdGhlIHN5c3RlbSBpbiBhIHdheSB0aGV5IGNhbid0IG5vdywiIGhlIHNhaWQuIApHcmVnIEJsZXdldHQga2lja2VkIG9mZiBoaXMgVGVzdCBjYXJlZXIgd2l0aCBhIGdsb3Jpb3VzIGNlbnR1cnkgYWdhaW5zdCBFbmdsYW5kIGluIEFkZWxhaWRlLiBCdXQgaXQgc28gbmVhcmx5IHR1cm5lZCBpbnRvIGEgZmFyY2U6IHdpdGggQ3JhaWcgTWNEZXJtb3R0IG9uIGhpcyB3YXkgYmFjayB0byB0aGUgZ3JvdW5kIGZyb20gaG9zcGl0YWwsIEJsZXdldHQgaGFkIG9ubHkgZmVsbG93IGRlYnV0YW50IGFuZCBhcmNoIHJhYmJpdCBQZXRlciBNY0ludHlyZSBmb3IgY29tcGFueSBhcyBoZSBob21lZCBpbiBvbiB0aHJlZSBmaWd1cmVzLiBNY0ludHlyZSBwbGF5ZWQgYSBibGluZGVyLCB0aG91Z2g6IGhpcyBzaXggYmFsbCBkdWNrIGdhdmUgQmxld2V0dCB0aGUgY2hhbmNlIHRvIGN1dCBBbmd1cyBGcmFzZXIgZm9yIHR3byB0byBiZWNvbWUgdGhlIDE2dGggQXVzdHJhbGlhbiB0byBtYWtlIGEgaHVuZHJlZCBvbiBkZWJ1dC4gRm9yIGdvb2QgbWVhc3VyZSBCbGV3ZXR0IGFkZGVkIGFub3RoZXIgaW4gdGhlIG5leHQgVGVzdCwgYW5kIGEgdGhpcmQgaW4gaGlzIHRoaXJkIEFzaGVzIFRlc3QsIGF0IEVkZ2Jhc3RvbiBpbiAxOTk3LgpUZXF1aWxhIG1heSBub3QgYmUgcmlnaHQgZm9yIGV2ZXJ5b25lLiBXb21lbiB3aG8gYXJlIHByZWduYW50IG9yIG51cnNpbmcgc2hvdWxkIG5vdCB1c2UgVGVxdWlsYSBIb3dldmVyLCB3b21lbiB3aG8gd291bGRuJ3QgbWluZCBudXJzaW5nIG9yIGJlY29taW5nIHByZWduYW50IGFyZSBlbmNvdXJhZ2VkIHRvIHRyeSBpdC4gU2lkZSBlZmZlY3RzIG1heSBpbmNsdWRlIGRpenppbmVzcywgbmF1c2VhLCB2b21pdGluZywgaW5jYXJjZXJhdGlvbiwgZXJvdGljIGx1c3RmdWxuZXNzLCBsb3NzIG9mIG1vdG9yIGNvbnRyb2wsIGxvc3Mgb2YgY2xvdGhpbmcsIGxvc3Mgb2YgbW9uZXksIGxvc3Mgb2YgdmlyZ2luaXR5LCBkZWx1c2lvbnMgb2YgZ3JhbmRldXIsIHRhYmxlIGRhbmNpbmcsIGhlYWRhY2hlLCBkZWh5ZHJhdGlvbiwgZHJ5IG1vdXRoLCBhbmQgYSBkZXNpcmUgdG8gc2luZyBLYXJhb2tlIGFuZCBwbGF5IGFsbCBuaWdodCByb3VuZHMgb2YgU3RyaXAgUG9rZXIsIFRydXRoIE9yIERhcmUsIGFuZCBOYWtlZCBUd2lzdGVyLi4gCkkgZ2VudWluZWx5IGRvIG5vdCB1bmRlcnN0YW5kIHdoeSB5b3UgdGhpbmsgSSBhbSAidHJpZ2dlcmVkIiBieSB0aGUgbWVudGlvbiBvZiB0aGVyYXB5LCBvciB0aGF0IEkgaGF2ZSBzb21ldGhpbmcgYWdhaW5zdCBpdC4gCllvdSBjYW4gdXNlIGtub3dsZWRnZSB0byByZWR1Y2UgZmVhciwgb3IgdmFyaW91cyB0aGVyYXBpZXMgdG8gY2hhbmdlIGhvdyB5b3UgZmVlbC4gClVwIHVudGlsIHRoaXMgcG9pbnQsIHlvdSdsbCBwcm9iYWJseSBiZSB0aHJvd2luZyBkb3duIGEgbG90IG9mIHJhbmRvbSBjYXJkcyBhbmQgdHJ5aW5nIHRvIGxvb2sgY29uZmlkZW50IHdoaWxlIGRvaW5nIGl0LiAKUGVyaGFwcyB0aGUgQW1lcmljYW4gRHJlYW0gbWFkZSBzZW5zZSBiZWZvcmUgdGhlIDE5ODBzLCB3aGVuIHdlYWx0aCBpbiB0aGUgVVMgd2FzIGluY3JlYXNpbmcgZm9yIGFsbCA1IGluY29tZSBsZXZlbHMsIGJ1dCB0aGUgZHJlYW0gdHVybmVkIGludG8gZGVtZW50aWEgYXMgUmVhZ2Fub21pY3MgdG9vayBob2xkVGhlIGRlcmVndWxhdGlvbiBvZiBiYW5raW5nIGFsb25nc2lkZSBhbiBlY29ub21pYyBwb2xpY3kgb2YgZ2l2aW5nIG1vbmV5IHRvIHRoZSByaWNoIGFuZCBzaW11bHRhbmVvdXNseSBzbGFzaGluZyB0aGUgc29jaWFsIHNhZmV0eSBuZXQgYW5kIGRlc3Ryb3lpbmcgbGFib3IgbWVhbnQgdGhhdCB0aGUgcmljaCBnb3QgcmljaGVyIGFuZCBldmVyeW9uZSBlbHNlICg4MCUpIGJlY2FtZSBwb29yZXIuIAoiSSBob3BlIHRoZXkgY2FuIGZpeCB0aGUgcHJvYmxlbSBzbyB3ZSBjYW4gZ28gYmFjayBvbiB3aXRoIG91ciBsaWZlLCBzaG9wcGluZyBleHBlcmllbmNlcyBhbmQgZXZlcnl0aGluZywgYmVjYXVzZSB0aGlzIGlzIGEgY3Jvd2RlZCBhcmVhIGRvd24gaGVyZSwiIFRheWxvciBhZGRlZC4gIllvdSBjYW4ndCBoYXZlIG5vdGhpbmcgbGlrZSB0aGF0IGdvaW5nIG9uLiIKSWQgc2F5IGl0IHJlcXVpcmVzIGEgc29saWQgdW5kZXJzdGFuZGluZyBvZiB2YXJpb3VzIHJvbGVzLCBpbmNsdWRpbmcgdW5kZXJzdGFuZGluZyBob3cgcHJvZ3JhbW1pbmcgd29ya3MsIHlvdSBkb24ndCBoYXZlIHRvIGJlIGEgZ29vZCBwcm9ncmFtbWVyLCBidXQgeW91J2xsIG9mdGVuIGJlIHRoZSBicmlkZ2UgYmV0d2VlbiBwcm9ncmFtbWluZyBhbmQgYXJ0LCBzbyBoYXZpbmcgYSBzdHJvbmcgdW5kZXJzdGFuZGluZyBvZiB3aGF0cyBpbnZvbHZlZCBpbiB0aGUgdmFyaW91cyB0YXNrcyB3aWxsIHJlYWxseSBoZWxwIHlvdSBzdWNjZWVkLgpJIGZpZ3VyZWQgaXQgd2FzIGEgbWF0dGVyIG9mIHRpbWUgYmVmb3JlIGhlIGdvdCB0byBtZSwgYW5kIHRoZW4gSSdkIGhhdmUgdG8gc2VlIGlmIEkgY291bGQgaGFuZyBvbi4uIApXZWxsYnV0cmluIGlzIHdoYXQgaGFzIGhlbHBlZCBtZSB0aGUgbW9zdCAgd2l0aCBsaXR0bGUgdG8gbm8gc2lkZSBlZmZlY3RzICBhbmQgSSBhc2tlZCBteSBkb2N0b3IgdHdpY2Ugbm93IHRvIGJlIHB1dCBiYWNrIG9uIGl0LCBidXQgaGUgaXNuIGNvbWZvcnRhYmxlIGRvaW5nIHNvIGJlY2F1c2UgSSBhbHJlYWR5IG9uIGFkaGQgbWVkcyBhbmQgaGUgc2F5cyBpdCAibGlrZSBhIGNvdXNpbiB0byB0aGVtIiBvciBzb21ldGhpbmcuIEkgYmVlbiBvbiBib3RoIEFESEQgbWVkcyBhbmQgV2VsbGJ1dHJpbiBpbiB0aGUgcGFzdCwgYW5kIGhhZCBubyBwcm9ibGVtcyB0aG8hIE1heWJlIGhlIHRoaW5rcyBpdCB3aWxsIGNhdXNlIGEgbWFuaWMgZXBpc29kZSB0aG8sIHNpbmNlIEkgYW0gYmlwb2xhciBhcyB3ZWxsLi4gCkEgZmV3IG1lZ2EgZm9yZWlnbiBjb25nbG9tZXJhdGVzIGFyZSBhbGxvd2VkIHRvIG1ha2UgbW9uZXkgdGhlcmUuIApBIGZldyBkcm9wcyBzaG91bGQgZG8gaXQuIFRoZSBlc3NlbnRpYWwgb2lscyB1c2VkIGluIGFyb21hdGhlcmFweSBhcmUgZGlzdGlsbGVkIHBsYW50IGVzc2VuY2VzIHRoYXQgd29yayBvbiBicmFpbiBhbmQgYm9keSBjaGVtaXN0cnkgaW4gYSBudW1iZXIgb2Ygd2F5cy4gCkJhZCBwbGF5ZXJzIGRvbiB1bmRlcnN0YW5kIHRoaXMgYW5kIHRyeSB0byBzZXQgbWluZSBpbiBiYWQgc3BvdHMgb3Igd2hlbiB0aGUgbWF0aCBpc24gcmlnaHQuIApUaGUgVGhpbmcgZmxldyBkaXJlY3RseSBhdCBtZSBhbmQgbXkgbW9tIGFuZCBzaXN0ZXIuIEkgd2FzIG9uIHRoZSBmbG9vciBsYXVnaGluZyB0b28gaGFyZCB0byBtb3ZlLCB3aGlsZSBteSBmYW1pbHkgc2NyZWFtZWQgYW5kIHJhbiBpbnRvIHRoZSBoYWxsd2F5IGFuZCBjbG9zZWQgdGhlIGJlZHJvb20gZG9vciBhbmQgbG9ja2VkIG1lIGluc2lkZSB3aXRoIGEgdmVyeSBzY2FyZWQgYmF0Li4gCllvdSBjb3VsZCBzYXkgaGUgaGFkIGEgY2hpcCBvbiBoaXMgc2hvdWxkZXIgYWJvdXQgbXkgZWR1Y2F0aW9uLiBUaGUgQmlnIFNpeCB3YXMgYSB2ZXJ0aWNhbCB3aGVlbCB3aXRoIG51bWJlcnMgYW5kIHNwb2tlcyAgIHlvdSBzcGluIGl0LCBpdCBnb2VzIGNsaWNrIGNsaWNrIGNsaWNrIGNsaWNrIGNsaWNrIGNsaWNrIGNsaWNrIGFuZCBsYW5kcyBvbiAkMjAsICQxLCBvciB3aGF0ZXZlci4gCkV2ZW4gdGhvdWdoIGl0IHdvdWxkIGJlIGhhcmQgdG8gYWNjb21wbGlzaCBzdWNoIGEgYmFuIG9yIHdoYXRldmVyLCBpdCByZWFsbHkgdW5mYWlyIHRvIGFueW9uZSBlbHNlIGFuZCB0aGVyZSBwcm9iYWJseSBzaG91bGQgYmUgc29tZSBjb25zZXF1ZW5jZXMsIHByZWZlcmFibHkgbm9uIGZpbmFuY2lhbCBpbiBvcmRlciB0byBoYXZlIGxlc3Mgc2N1bSBpbnZvbHZlZCBpbiBkb3RhLiBTZWVpbmcgYSByZXNwb25zZSBmcm9tIFZhbHZlIHdvdWxkIGJlIHJlYWxseSBjb29sIHRob3VnaC4uIApUaGlzIG1lYW5zIHRoYXQgeW91IGFyZSBzb2xlbHkgYW5kIGVudGlyZWx5IHJlc3BvbnNpYmxlIGZvciB0aGUgY29uc2VxdWVuY2VzIG9mIGFsbCBVc2VyIFBvc3RpbmdzIHRoYXQgeW91IHN1Ym1pdCwgdXBsb2FkLCBwb3N0LCBlbWFpbCwgZGlzcGxheSwgdHJhbnNtaXQgb3Igb3RoZXJ3aXNlIG1ha2UgYXZhaWxhYmxlLiAKQnVybGVzcXVlIHJvdXRpbmVzIHJld3JvdGUgc28gY2FsbGVkIGhpZ2hlciBhcnQgZm9ybXMsIHN1Y2ggYXMgb3BlcmEsIGFzIGNvbWVkeSBhbmQgZmFyY2UuLiAKQSB3YXkgZm9yIGhvdGVscyB0byBiZWNvbWUgbW9yZSBlZmZpY2llbnQgYW5kIGN1dCBkb3duIGNoZWNrIGluIHdhaXQgdGltZXMgZm9yIGd1ZXN0cywgc2FpZCBCb3dlbi4gSXQgd2lsbCBsZWFkIHRvIGEgYmV0dGVyIGd1ZXN0IGV4cGVyaWVuY2UgYW5kIGNyZWF0ZSBjdXN0b21lciB2YWx1ZS4gCldpdGggaW5qdXJpZXMgdG8gc3RhcnRpbmcgaW5zaWRlIGxpbmViYWNrZXJzIEFkZGlzb24gR2lsbGFtIGFuZCBLZW5uZXRoIE9sdWdib2RlLCBTZXZlcnNvbiB3aWxsIGdldCBoaXMgZmlyc3QgY2FyZWVyIHN0YXJ0IGF0IGxpbmViYWNrZXIgb24gU2F0dXJkYXkgd2hlbiB0aGUgQnVmZnMgKDMgMiwgMCAxIFBhYyAxMikgdmlzaXQgQXJpem9uYSBTdGF0ZSAoMyAyLCAxIDEpLgpNcyBCZXN0bWFuIHNhaWQ6ICcnVGhlIGhhcm1mdWwgYWZmZWN0cyBvZiBnYW1ibGluZyBhZHZlcnRpc2luZyBhcmUgd2VsbCBrbm93biBidXQgdGhpcyB3YXMgdGhlIGZpcnN0IHN0dWR5IHRvIGxvb2sgYXQgdGhlIGltcGFjdCBvZiBnYW1ibGluZyB2ZW51ZXMgb24gY2hpbGRyZW4uCkRlYWwgdGhlIGNhcmRzIHRvIHRoZSBwbGF5ZXJzLiBUaGVyZSBhcmUgdHdvIG1haW4gc3R5bGVzIG9mIGRlYWxpbmc6IEFtZXJpY2FuIGFuZCBFdXJvcGVhbi4gWW91IGNhbiBzd2l0Y2ggdXAgeW91ciBzdHlsZSBhY2NvcmRpbmcgdG8geW91ciBtb29kIG9yIHRvIHdobyB0aGUgcGxheWVycyBhcmU6WzZdCkxlIGNvcnBzIG4nYWltZSBwYXMgY2V0dGUgcHJpdmF0aW9uIGV0IGxhIHR0ZSBub24gcGx1cyAhIExhIG1hamV1cmUgcGFydGllIGRlcyBwZXJzb25uZXMgcXVpIHZpZW5uZW50IG1lIHZvaXIgc291aGFpdGVudCBwZXJkcmUgZHUgcG9pZHMuIApUaGV5IGp1c3QgYmVsaWV2ZSB0aGF0IGJlaW5nIHJhY2lzdCBpbmNsdWRlcyBvbmx5IHRoZSBtb3N0IHZpcnVsZW50IGZlZWxpbmdzIG9mIGhhdHJlZCBvZiBibGFjayBwZW9wbGUgIGxpa2UgImx5bmNoaW5ncyBhcmUgY29vbCIgdHlwZSBmZWVsaW5ncy4gCldlIGhhdmUgdG8gdGFrZSB0aGF0IHRocmVhdCBzZXJpb3VzbHkuIiJIdWF3ZWkgaGFzIGFuIGV4Y2VsbGVudCBzZWN1cml0eSByZWNvcmQgYW5kIHByb2dyYW0uIApTaSBkZXV4IHBlcnNvbm5lcyBvbnQgbGUgbW1lIHR5cGUgZGUgY29tYmluYWlzb24sIGNlbGxlIGF2ZWMgbGEgb3UgbGVzIGNhcnRlKHMpIGRvbnQgbGEgdmFsZXVyIGVzdCBsYSBwbHVzIGxldmUgbCdlbXBvcnRlLiBTaSBsZXMgdmFsZXVycyBzb250IGV4YWN0ZW1lbnQgbGVzIG1tZXMgKGxhIGNvdWxldXIgbmUgY29tcHRhbnQgcGFzKSwgbGVzIGRldXggam91ZXVycyBzb250ICBnYWxpdCBldCBwYXJ0YWdlbnQgbGUgcG90IHZlbnR1ZWwuCkVzbyBzaSwgZGViZW1vcyBlc3RhciBhdGVudG9zIGEgZW5nYW9zLgpCdXQgeW91IGNhbiBjb24gYSBjb24gYW5kIFZhbmVzc2Egd2FzIHJpZ2h0ZnVsbHkgc3VzcGljaW91cy4KVGhlIGRlYWxlcnMgdG9sZCB1cyB0aGF0IHRoaXMgc2FtZSBndXkgcmFuIGhpcyBLSyBpbnRvIGFub3RoZXIgcGxheWVyIEFBIGZvciBzb21ldGhpbmcgbGlrZSAkMjUwMCBlZmZlY3RpdmUgc3RhY2tzLiAKVGhpcyB3YXMgY2VtZW50ZWQgd2hlbiBzaGUgbW92ZWQgdG8gc3RyYWlnaHRlbiBteSBjb3N0dW1lIGFuZCBJIHN1ZGRlbmx5IGZlbHQgdmVyeSwgdmVyeSBoYXBweSwgYW5kIHZlcnksIHZlcnkgZW1iYXJyYXNzZWQgYXQgdGhlIHNhbWUgdGltZS4uIApXaGVuIHlvdSBvbiBhIGRyYXcgYW5kIGl0IGhpdHMsIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgYSBzb21ld2hhdCBzdXNwZWN0IGxpbmUgb3IgY2FsbGVkIG9ubHkgZHVlIHRvIGltcGxpZWQgb2RkcywgY29uc2lkZXIgYmV0dGluZyBvdmVyIHRoZSBwb3QuIApXaGVuIGl0IGhhcyBqdXN0IGJhcmVseSBiZWNvbWUgY29va2VkLCByZW1vdmUgZnJvbSBoZWF0LiBTZXJ2ZS4uIApBcyBmb3IgdGhlIGNhYmxlcyBiZWluZyBiZXR0ZXIgc291bmRpbmcsIHRoYXQgYSBsb2FkIG9mIGNyYXAuIFdvdWxkbiB5b3UgdGhpbmsgdGhhdCBpZiBjYWJsZXMgcmVhbGx5IG1hZGUgYSBkaWZmZXJlbmNlLCB0b3AgdG91cmluZyBzb3VuZCBjb21wYW5pZXMgc3VwcG9ydGluZyB0b3AgYmFuZHMgYW5kIGFydGlzdHMgd291bGQgYmUgdXNpbmcgc3VjaCBjYWJsZXMgdG8gb2ZmZXIgdGhlIGhpZ2hlc3QgcXVhbGl0eSBzb3VuZCBwb3NzaWJsZT8gU2FtZSB3aXRoIHN0dWRpb3MsIGJyb2FkY2FzdCB0ZWxldmlzaW9uIGFuZCBhbnkgb3RoZXIgZW50aXR5IGRlbGl2ZXJpbmcgYXVkaW8sIHZpZGVvIGFuZCBkYXRhLiBUaGV5IGFscmVhZHkgdXNlIHRoZSBmaW5lc3QgZWxlY3Ryb25pYyBkZXZpY2VzIGFuZCBjb21wb25lbnRzIHRvIGRlbGl2ZXIgdG9wIHF1YWxpdHkgdG8gdGhlaXIgYXVkaWVuY2VzLiAKWW91IGNhbiBtYWtlIGl0IHBsYXkgaG93ZXZlciB5b3Ugd2FudC4gSXQgdXNlcyBQcm9maWxlcyAoc2NyaXB0cykgZm9yIHRoZSBkZWNpc2lvbiBtYWtpbmcuIFlvdSBjYW4gbWFrZSBhIFByb2ZpbGUgeW91cnNlbGYgb3IgcHVyY2hhc2Ugb25lcyBtYWRlIGJ5IHByb2Zlc3Npb25hbCBwbGF5ZXJzLi4gCkFzIGZvciBncm91cCBob21lcywgaXQgYWx3YXlzIHZlcnkgc3BlY2lmaWMgdG8gd2hhdCBhdmFpbGFibGUgaW4gaG9tZSB2ZXJzdXMgaG93IGdvb2QgeW91ciBsb2NhbCBncm91cCBob21lcyBhcmUuIFRoZXJlIGEgbG90IG9mIHN1cHBvcnQgYXZhbGlhYmxlIGZvciBpbiBob21lIGNhcmUgYmVjYXVzZSB0aGUgc3RhdGUgaXMgbW92aW5nIGF3YXkgZnJvbSByZXNpZGVudGlhbCAocGFydGlhbGx5IG1vbmV5IGFuZCBwYXJ0aWFsbHkgYmVjYXVzZSBvZiBhbGwgdGhlIHNjYW5kYWxzIGxpa2Ugd2lsbG93YnJvb2spIGJ1dCBzb21lb25lIHdpdGggbmVlZHMgbGlrZSBoaXMgY2FuIGJlIHZlcnkgc3RyZXNzZnVsIGV2ZW4gaW4gYSBnb29kIGhvbWUgd2l0aCBjYXJldGFrZXJzIHdobyBhcmUgd2lsbGluZyBhbmQgcHJlcGFyZWQuIApUaGUgTGliZXJhbCBnb3Zlcm5tZW50IGFuZCBnYW1pbmcgaW5kdXN0cnksIGhlYWRsaW5lZCBieSBGZWRlcmFsIEdyb3VwIHdobyBvd24gYSBtb25vcG9seSBsaWNlbnNlIG9uIGdhbWluZyBtYWNoaW5lcyBpbiB0aGUgc3RhdGUsIGxhdW5jaGVkIGEgbWFzc2l2ZSBhZHZlcnRpc2luZyBjYW1wYWlnbiBjbGFpbWluZyB0aGUgcG9raWVzIGJhbiB3b3VsZCBjb3N0IHRob3VzYW5kcyBvZiBqb2JzLiBNcyBXaGl0ZSBoYXMgdHJla2tlZCB0byBtb3N0IGNvcm5lcnMgb2YgdGhlIEFwcGxlIElzbGUgdG8gc3BydWlrIHRoZSBwb2xpY3ksIGFsb25nIHdpdGggYSAkNTYwIG1pbGxpb24gaGVhbHRoIHBhY2thZ2UgICBkdWJiZWQgaGVyIG51bWJlciBvbmUgcHJpb3JpdHkuIApTaGUgYmUgY29tcGxldGVseSBsb3lhbCB0byBDYWxlYi4gCkRpZG4ga25vdyBhbnkgYmV0dGVyLiAKQ2hpbmEgaXMgcmlkaWN1bG91cy4gQXQgb25jZSBzdXByZW1lbHkgYXJyb2dhbnQsIHdoaWxlIGFsc28gbWFuYWdpbmcgdG8gYmUgdWx0cmEgc2Vuc2l0aXZlLiBMb29rIGF0IHdoYXQgdGhleSBkbyBpbiB0aGUgU291dGggQ2hpbmEgc2VhLiBHdW4gYm9hdHMgcnVubmluZyBvZmYgUGhpbGlwcGluZSBmaXNoZXJtYW4gd2hvIGFyZSBmaXNoaW5nIGluIHdhdGVycyBqdXN0IG9mZiB0aGUgY29hc3Qgb2YgdGhlaXIgb3duIGNvdW50cnkuIFRoZW4gd2hlbiBjb3VudHJpZXMgc2F5ICJoZXkgd3RmPyIgdGhlIENDUCB3aWxsIHJlc3BvbmQgaW4gc29tZSBsdWRpY3JvdXMgZWRpdG9yaWFsIHBpZWNlIGluIG9uZSBvZiB0aGVpciBwcm9wYWdhbmRhIHJhZ3MsIHBlZGFsbGluZyBqdXN0IHV0dGVyIGxpZXMuIE5vdCBldmVuIGEgbGl0dGxlIGJpdCBlbWJhcnJhc3NlZCB0aGF0IHRoZXkgYXJlIHNvIGNsZWFybHkgbHlpbmcuIEFuZCBhY3RpbmcgaW5jcmVkdWxvdXMgdGhhdCBhbnkgZm9yZWlnbiBjb3VudHJ5IHdvdWxkIGRhcmUgdG8gb3Blbmx5IGNoYWxsZW5nZSB0aGVtLgpPa2F5LCBub3QgdG8gbWFrZSBhbGwgeW91IFR3aWxpZ2h0IGZhbnMgaW5zYW5lbHkgamVhbG91cywgYnV0IEkgc3BlbnQgbXkgVmFsZW50aW5lIERheSBpbiBWb2x0ZXJyYSwgSXRhbHksIHRoZSBob21lIG9mIHRoZSBWb2x0dXJpIHZhbXBpcmUgbm9iaWxpdHkgaW4gU3RlcGhhbmllIE1leWVyIFR3aWxpZ2h0IHNhZ2EuIEdvIGFoZWFkICBlbnZ5IG1lIGFuZCBteSBWYWxlbnRpbmUgRGF5LiBjYW4geW91IGhlbHAgeW91cnNlbHZlcz8KRm9yIHRob3NlIHVuYXdhcmUsIGEgc3BsYXNoIHBhZCBpcyB1c3VhbGx5IGxvY2F0ZWQgYXQgYSBwbGF5Z3JvdW5kLCBhbmQgaXQgZXNzZW50aWFsbHkganVzdCBhIGJ1bmNoIG9mIHNwcmlua2xlcnMuIEFueXdheXMsIHBhcmVudHMgdXN1YWxseSBzaXQgdG8gdGhlIHNpZGUgd2hpbGUgdGhlIGtpZHMgcGxheS4gClBldGVyIHdvcmtlZCBhdCBJbmNvIGZvciBvdmVyIDIwIHllYXJzLiBIZSB3YXMgYSBsb25nIHN0YW5kaW5nIG1lbWJlciBvZiB0aGUgSXRhbGlhbiBIYWxsIGluIFBvcnQgQ29sYm9ybmUuIEhlIHdhcyBhIGF2aWQgcG9rZXIgcGxheWVyLCBib3dsZXIgYW5kIGdhcmRlbmVyLiAKV2hpbGUgdGhpbmdzIGxpa2UgYmFsbGVkIGZpc3RzIGFyZSBhbiBvYnZpb3VzIHNpZ24gb2YgYWdncmVzc2lvbiwga2VlcCBpbiBtaW5kIHRoYXQgbWFueSBhdHRhY2tzIGNvbWUgZnJvbSB0aGUgcG9zaXRpb24gb2YgY3Jvc3NlZCBhcm1zLCBvciBoYW5kcyBpbiBwb2NrZXRzLi4gCkd1aWRlbGluZXMgZm9yIENob3BwaW5nIGluIExpdmUgdG91cm5hbWVudHMKQnV0IGhlLiAKSW4gZmFjdCwgc29tZSBleHBlcnRzIGFyZSBzdWdnZXN0aW5nIHRoYXQgd2hhdCBpcyByZWFsbHkgZ29pbmcgb24gaXMgdGhhdCBjbGFzcyBpbnRlcmVzdHMgYXJlIGJlaW5nIHByb3RlY3RlZCBieSBTZWNyZXRhcnkgR2VpdGhuZXIgYW5kIGhpcyBnYW5nLiBJbiBvdGhlciB3b3JkcywgdGhlcmUgbWF5IGJlIGEgdmVuZWVyIG9mIHBvcHVsaXNtIGluIHRoZSBuZXcgYWRtaW5pc3RyYXRpb24gcmhldG9yaWMsIGJ1dCBpdCBpcyBkaXNndWlzaW5nIHRoZSBzYW1lIG9sZCBjbGFzcyBpbnRlcmVzdHMgYW5kIHRoZSBjb25zb2xpZGF0aW9uIG9mIHdlYWx0aCBpbiB0aGUgaGFuZHMgb2YgdGhlIGZldyB0aGF0IGhhcyBiZWVuIGdvaW5nIG9uIHVuZGVyIHRoZSBndWlzZSBvZiBuZW9saWJlcmFsaXNtIGZvciB0aHJlZSBkZWNhZGVzLi4gCkhvdyBtYW55IHdpbm5lcnMgd2lsbCB0aGVyZSBiZT9UaGUgbnVtYmVyIG9mIHBsYXllcnMgd2hvIHdpbGwgd2luIHBhcnQgb2YgdGhlIHByaXplIHBvb2wgbGFyZ2VseSBkZXBlbmRzIG9uIGhvdyBtYW55IHN0YXJ0IHRoZSB0b3VybmFtZW50LiBJZiB0aGVyZSBhcmUgZ29pbmcgdG8gYmUgMTAgcGxheWVycyBvciBsZXNzLCBJIHVzdWFsbHkgZG8gYSA2MCUvNDAlIHNwbGl0IG9mIHRoZSBwcml6ZSBwb29sIGZvciB0aGUgZmluYWwgMiBwbGF5ZXJzLiBCZXR3ZWVuIDExIGFuZCAzMCBwbGF5ZXJzLCBzcGxpdCB0aGUgcHJpemUgcG9vbCA1MCUvMzAlLzIwJS4gSWYgeW91ciB0b3VybmFtZW50IGlzIGdvaW5nIHRvIGJlIGxhcmdlciB0aGFuIDMwIHBsYXllcnMsIGZvciBlYWNoIDEwIGFkZGl0aW9uYWwgcGxheWVycywgYWRkIGFub3RoZXIgcGF5b3V0IHNwb3QuIFRha2UgYSBmZXcgcGVyY2VudGFnZSBwb2ludHMgb2ZmIGVhY2ggb2YgdGhlIGhpZ2hlciBwYXlvdXRzIGFzIG5lZWRlZC4KSGUnbGwgcm90YXRlIHRocm91Z2ggdGhlIG1pZGZpZWxkIGJ1dCBhIHN0cm9uZyBzaG93aW5nIGluIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSAyMDE5IEpMVCBjb21wZXRpdGlvbiB3aGVyZSBoZSBraWNrZWQgdGhyZWUgZ29hbHMgcG9pbnRzIHRvIGEgbW9yZSBmb3J3YXJkIGZvY3VzZWQgcm9sZSBmb3IgUmF5bmVyIGluIHRoZSAyMDE5IExpb25zJyBsaW5ldXAuLiAKT3ZlcnZpZXcgZm9yIEFuZ2VsT2ZMaWdodApXZSBsb29rIGJhY2sgYXQgb3VyIGFuY2VzdG9ycywgYmVjYXVzZSB3ZSByZXNwZWN0IG90aGVyIGN1bHR1cmVzIG11Y2ggYmV0dGVyIHRoYW4gQW1lcmljYW4gY3VsdHVyZSBoYXMgZXZlciBiZWVuIHJlc3BlY3RlZC4uIApJdCBzaG91bGQgYmUgYSByZWFsbHkgbG93IGNoYW5jZSBsaWtlIDAuMDElLCB0aGF0IHdheSBvbmx5IGEgdmVyeSBzbWFsbCBhbW91bnQgb2YgcGVvcGxlIHdvdWxkIGV4cGVyaWVuY2UgaXQuIE9uY2Ugd29yZCBnZXRzIG91dCBwZW9wbGUgd2lsbCBtb3N0IGxpa2VseSB0aGluayBpdCBhIGJ1ZyB0aGF0IGlzIG9ubHkgaGFwcGVuaW5nIHRvIGEgc21hbGwgYW1vdW50IG9mIHBlb3BsZSB3aXRoIHNlZW1pbmdseSBubyBjb21tb25hbGl0eSBiZXR3ZWVuIHRoZSB2aWN0aW1zLiAKTXkgZmlhbmNlZSBpbW1lZGlhdGVseSBzYWlkICJkb24gZG8gaXQiLCBidXQgaXQgd2FzIHRvbyBsYXRlLCBJIHBvaW50ZWQgYXQgdGhlbSB3aXRoIGF3ZSBhbmQgc3VycHJpc2UgYW5kIGV4Y2xhaW1lZCAiV0FZR09PS0lOISIgYXMgdGhleSBwYXNzZWQuIApTbyBpdCBub3QgcmVhbGx5IGEgcmFkaWNhbCBxdWVzdGlvbiB0byBhc2sgb3IgcnVsaW5nIHRvIG1ha2UuIEl0IHBlcnNvbmFsIHByZWZlcmVuY2Ugd2hldGhlciB5b3Ugd2FudCB0byBsZWFuIHRpZ2h0IHRvd2FyZCBSQVcgb3IgYWRqdXN0IHRoZSBydWxlcyBmb3IgbW9yZSB2ZXJpc2ltaWxpdHVkZS4gVGhlIGRlc2lnbmVycyB0aGVtc2VsdmVzIGRvbiBhZHZvY2F0ZSBmb3IgcmlnaWQgYWRoZXJlbmNlIHRvIFJBVyAgIG9yIHVzZSBSQVcgYWxvbmUgaW4gdGhlaXIgb3duIGdhbWVzLi4gCkkgZGlkbiB0aGluayBhbnl0aGluZyBvZiBpdCBhbmQgYXNzdW1lZCBoZSB3b3VsZCBoYWQgbWUgcHJvcGVybHkgZHJhcGVkLCBhbmQgSSBkaWRuIG9wZW4gbXkgZXllcyB0byBsb29rIGRvd24gYW5kIGNoZWNrIGJlY2F1c2UgSSBmZWx0IGF3a3dhcmQgZG9pbmcgdGhhdC4gKEkgc2hvdWxkIGFsc28gbWVudGlvbiB0aGF0IGhlIGFjY2lkZW50YWxseSBleHBvc2VkIGEgbGl0dGxlIG9mIG15IGFyZW9sYSBiZWZvcmUgaW4gYSBzZXNzaW9uIG1hbnkgbW9udGhzIGFnbywgYnV0IHdoZW4gaGUgbm90aWNlZCBoZSBxdWlja2x5IG1vdmVkIHRvIGNvdmVyIGl0IGJhY2sgdXAsIHNvIEkgYXNzdW1lIGl0IHdhcyBqdXN0IGFuIGFjY2lkZW50ICAgaGUgZGlkbiBkbyB0aGF0IHRoaXMgdGltZS4pIEhlIHRoZW4gb2ZmZXJlZCB0byBtYXNzYWdlIG15IGludGVyY29zdGFsIG11c2NsZXMgYW5kIGhhZCBtZSB0dXJuIHRvIGVhY2ggc2lkZSwgYW5kIHNob3dlZCBhIHBhcnRpY3VsYXIgaW50ZXJlc3QgaW4gbW92aW5nIGhpcyBoYW5kcyBmcm9tIG15IGxvd2VyIGJhY2sgdG93YXJkcyB0aGUgc3RhcnQgb2YgbXkgYnV0dCBjcmFjayBhZ2Fpbi4gCkV4dHJhdGpuc3RlciB0aWxsa29tbWVyLCBnaXZldHZpcy4gQmFyYSBlbiBoYWx2dGltbWUgaSBEYW5tYXJrIGdyIHAgZW4gMTUwMFNFSy4gCjAwcGxhbnRzICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCllvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciB0aGUgaW5mb3JtYXRpb24gYXNzb2NpYXRlZCB3aXRoIFlvdXIgQWNjb3VudCBhbmQgYW55dGhpbmcgdGhhdCBoYXBwZW5zIHJlbGF0ZWQgdG8gWW91ciBBY2NvdW50LiBZb3UgbXVzdCBtYWludGFpbiB0aGUgc2VjdXJpdHkgb2YgeW91ciBBY2NvdW50IGFuZCBwcm9tcHRseSBub3RpZnkgUmVkZGl0IGlmIHlvdSBkaXNjb3ZlciBvciBzdXNwZWN0IHRoYXQgc29tZW9uZSBoYXMgYWNjZXNzZWQgeW91ciBBY2NvdW50IHdpdGhvdXQgeW91ciBwZXJtaXNzaW9uLiAKIkZvciB0aGUgcG9saWNlLCBzaGUgaXMgb2ZmIHRoZSByYWRhciwiIHNheXMgTWljaGFlbC4gIlNoZSBkb2Vzbid0IGV4aXN0LiBUaGUgb3RoZXIgZ2lybHMgb2YgaGVyIGNhbGliZXIsIG9uIHRoZSBzYW1lIGxldmVsLCBhcmVuJ3Qgb24gdGhlIHJhZGFyIGVpdGhlci4gCkFub3RoZXIgY3VubmluZyB0cmljayBpcyB0byBzYXkgeW91ciBjaG9pY2Ugb3V0IGxvdWQ7IHlvdXIgb3Bwb25lbnQgd2lsbCB0aGluayB5b3UgYXJlIGJsdWZmaW5nIGFuZCB0aGVyZWZvcmUgY2hvb3NlIGEgbGVzcyB3aXNlIG9wdGlvbi4uIApDb21tdW5pdHkgUnVsZTogNy4gV2UgRGlzY291cmFnZSBMaW5raW5nIFdpdGhpbiBQb3N0cyAgIExpbmtzIGFyZSBhbGxvd2VkIHNwYXJpbmdseSBmcm9tIGFjdGl2ZSBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHkgaWYgdGhleSBwcm9tb3RlIGRpc2N1c3Npb24uIFlvdSBtdXN0IGJlIGFuIGFjdGl2ZSBhbmQgcGFydGljaXBhdGluZyBtZW1iZXIgb2Ygb3VyIGNvbW11bml0eSBiZWZvcmUgeW91IGFsbG93ZWQgdG8gbGluay4gCkhlIGFsc28gc2VsbHMgdGhlbSBvbiB0aGVpciBwb3RlbnRpYWwgZW1wbG95ZXIuIApTaG9wOiBVc2UgTWljcm9zb2Z0IGNvdXBvbiBjb2RlcyBmb3IgdHJlbmR5IGdhZGdldHMgZnJvbSB0aGUgTmV3IFlvcmsgUG9zdApUaGUgRml2ZSBTdGFyIEFsbGlhbmNlIHdpbGwgYWxzbyBoYXZlIGEgbGlzdCBvZiBsdXh1cnkgaG90ZWxzIHRoYXQgeW91IGNhbiBhbHNvIGNob29zZS4gCkNvbXBsaWNhdGluZyB0aGUgbWF0dGVyIGZ1cnRoZXIgZm9yIERlbm5pcyAgIGFuZCBwbGF5aW5nIHBlcmZlY3RseSBpbnRvIEJ1dHRvbidzIGhhbmRzICAgaXMgdGhlIG1hdHRlciBvZiBGZXJuYW5kbyBBbG9uc28ncyBmdXR1cmUgd2l0aCB0aGUgdGVhbSwgYnJvdWdodCBpbnRvIGRvdWJ0IGJ5IGNvbW1lbnRzIGZyb20gaGlzIG1hbmFnZXIgRmxhdmlvIEJyaWF0b3JlLCBhbmQgYWxzbyBieSBBbG9uc28ncyBmcnVzdHJhdGVkIGNvbW1lbnRzIGR1cmluZyB0aGUgSmFwYW5lc2UgR3JhbmQgUHJpeCBhYm91dCB0aGUgSG9uZGEncyBsYWNrIG9mIHBvd2VyIGF0IHRoZSBIb25kYSBvd25lZCBTdXp1a2EgY2lyY3VpdCBvbiBTdW5kYXkuIApUaGUgbGlua3VwIGRvZXNuJ3QgY2FuY2VsIGFueSB3b3JrIHRoZSBjb21wYW5pZXMgaGF2ZSBnb2luZyB3aXRoIG90aGVyIHBhcnRuZXJzLCBzdWNoIGFzIERhaW1sZXIncyBwaWxvdCBwcm9ncmFtIHdpdGggdGVjaG5vbG9neSBhbmQgcGFydHMgc3VwcGxpZXIgQm9zY2ggb24gc2VsZiBkcml2aW5nIHZlaGljbGVzIGluIENhbGlmb3JuaWEuIEJNVyBpcyB3b3JraW5nIG9uIGRldmVsb3BpbmcgYXV0b25vbW91cyBjYXJzIGF0IGl0cyBjYW1wdXMgaW4gVW50ZXJzY2hsaWVzc2hlaW0sIG5vcnRoIG9mIGl0cyBNdW5pY2ggaGVhZHF1YXJ0ZXJzLiBEYWltbGVyIGlzIGhlYWRxdWFydGVyZWQgaW4gU3R1dHRnYXJ0Li4gCkkgMTYyY20gdGFsbCBhbmQgdGhlIFMgaXMgYSByZWFsbHkgZ29vZCBmaXQgICB0aGUgYmFnIGlzbiBzdXBlciBzbGltIGJ1dCBpZiB5b3UgaGF2ZSBicm9hZCBzaG91bGRlcnMvaGlwcyBJIGRlZmluaXRlbHkgZG91YmxlIGNoZWNrIHdoZXRoZXIgeW91IG5lZWQgdGhlIHdpZGVyIG9wdGlvbnMuIFRoZSBob29kIGlzIHF1aXRlIGJhc2ljIGFuZCB3aWRlLCBidXQgbm90IGFzIHVzZWxlc3MgYXMgdGhlIGltYWdlcyBvbiB0aGVpciBzaXRlIG1ha2UgaXQgbG9vay4uIApUaGVyZSBhcmUgYSBidW5jaCBvZiBvdGhlciBzdG9yaWVzIHdoZXJlIHRoZXkgbWVudGlvbmVkIGFzIGJlaW5nIGluIEJyb2NrdG9uIGJ1dCBub3QgbWFkZSBhIGZvY3VzLiBSZXZlbmFudCBoYXMgYSBzaW5nbGUgZmlnaHQgd2l0aCB0aGVtIGJlZm9yZSB0aGUgZm9jdXMgc3dpdGNoZXMgYmFjayB0byBDb2lsLiBSdWJiZXIgU2hvZXMgSW4gTW90aW9uIGhhcyB0aGVtIGFzIGh1bWFuIHRyYWZmaWNrZXJzLiAKU29tZSBjaGFyaXRpZXMgaGF2ZSBzdGFydGVkIHRvIHJlamVjdCBzdWNoIGZ1bmRpbmcgb2ZmZXJzLCBidXQgdGhlIHN0YXRlJ3MgcHVibGljIGhvc3BpdGFsIHN5c3RlbSBjb250aW51ZXMgdG8gc3VwcG9ydCB0aGUgc2NoZW1lIGFuZCBpcyBpbmNyZWFzaW5nbHkgYmVuZWZpdGluZyBmcm9tIGl0LiAKSW5zdWxpbiBpcyB0aGVuIHJlbGVhc2VkIGFuZCBhY3RzIGFzIGEgaG9ybW9uZSB0byBzaWduYWwgb3RoZXIgY2VsbHMgdG8gaW5jcmVhc2UgdGhlaXIgdXB0YWtlIG9mIGdsdWNvc2UgaW50byB0aGUgY2VsbCwgdWx0aW1hdGVseSB3aXRoIHRoZSBnb2FsIG9mIGJhbGFuY2luZyB0aGUgZ2x1Y29zZSBsZXZlbHMuCkluIGRlciA1LiAKSWYgYnkgbm9kZXMgeW91IG1lYW4gbWluZXJzLCB5ZXMuIElmIHlvdSBtZWFuIG5vbiBtaW5pbmcgbm9kZXMsIHRoYW4gbm9ib2R5IGhhcyB0byBjb252aW5jZSB0aGVtIGFzIHRoZXkgaXJyZWxldmFudC4gClRoZXkgd2lsbCBiZSBydWJiaW5nIHRoZSB2ZWx2ZXQgZnJvbSB0aGVpciBhbnRsZXJzLi4gCldoeSByZWludmVudCB0aGUgd2hlZWw/IFlvdSBjb3VsZCBzcGVuZCBob3VycyBwZXJmZWN0aW5nIHRoZSB0dXJuIG9mIHBocmFzZSBtb3N0IHN1aXRlZCB0byB5b3VyIG11c2UsIGJ1dCB3aHkgYm90aGVyPyBUaGVyZSdzIGEgY2xpY2ggZm9yIGV2ZXJ5IG9jY2FzaW9uLCBhbmQgYW4gb2NjYXNpb24gZm9yIGV2ZXJ5IGNsaWNoLiBTZWFzb24geW91ciBwb2V0cnkgbGliZXJhbGx5IHdpdGggdGhlbS4gT25jZSBhZ2FpbiwgeW91IGNhbiBuZXZlciBoYXZlIHRvbyBtYW55OgpUaGUgcHJvYmxlbSBpcywgb25jZSBhIHNoZWV0IG1ldGFsIHJlcGFpciBzdGFydHMgdG8gZ28gYXdyeSwgeW91J3JlIHVzdWFsbHkgbXVjaCwgbXVjaCB3b3JzZSBvZmYgdGhhbiBpZiB5b3UnZCBqdXN0IGxlZnQgaXQgYWxvbmUuIApBbmQgb25lIG9mIHRoZSBmdWxsIHByb2Zlc3NvcnMgaW4gbXkgZmFjdWx0eSBwcmVmZXJyZWQgYmVpbmcgYWRkcmVzc2VkIGJ5IGdpdmVuIG5hbWUgb25seSwgaW5zdGVhZCBvZiBQcm9mZXNzb3IgW1N1cm5hbWVdLi4gCk9uIGxhIGRvaXQgIE1hcmNvIFBvbG8gcXVpIHJhcHBvcnRlIGxhIGNob3NlIGF1IFhJSUkgbWUgc2ljbGUuIFBsdXMgdGFyZCwgZW4gMTgwOSwgbCBBbnRvaW5lIElzYWFjIFNpbHZlc3RyZSBkZSBTYWN5IGNvbW1ldCwgc2FucyB2cml0YWJsZW1lbnQgcmVuY29udHJlciBkZSByc2lzdGFuY2UsIHVuZSBob3JyZXVyIHR5bW9sb2dpcXVlIGVuIG9zYW50IGZhaXJlIHVuIGRvdXRldXggcmFwcHJvY2hlbWVudCBlbnRyZSBsZXMgbW90cyBhc3Nhc3NpbiBldCBoYXNjaGlzY2hpbi4gCkkgZ3JldyBiZWF1dGlmdWwgc3BpbmFjaCBpbiB0aGUgaW50ZXJpb3Igb2YgdGhlIHByb3ZpbmNlLi4gCkFISSBvZiA0LjUuIApZb3UgbmVlZCB0byBzaWduIHVwIGluaXRpYWxseSBhbmQgbGlrZSB0aGlzIHlvdSBjYW4gbWFrZSB1cCB0aGUgZnVuZGFtZW50YWxzIG9mIHRoZSBzb2Z0d2FyZSBhbG9uZyB1c2luZyBpdHMgdXNlLiBPbmNlIHlvdSBhcmUgZmVlbGluZyBhY3F1YWludGVkIHdpdGggdGhlIHVzYWdlIG9mIHNvZnR3YXJlIGFsb25nIHdpdGggdGhlIGdhbWUgeW91IGFyZSBhYmxlIHRvIGRlcG9zaXQgY2FzaCBhbmQgcGxheSBhcyBhIHJlYWwgcGxheWVyLiAKIldlIGp1c3QgbmVlZCB0byBsb29rIGZvciBuZXcgcGVvcGxlIHRvIHN0ZXAgdXAgaW4gdGhvc2Ugcm9sZXMsIiBLcmVpZGwgc2FpZC4gIldlJ2xsIGJlIHNtYWxsZXIsIGJ1dCB0aGF0IGp1c3QgbWVhbnMgd2UnbGwgYmUgbW9yZSB0aWdodCBrbml0IHdpdGggdGhpcyBncm91cC4iCjM2MikuLiAKUnluYWxkbzkwMCAgNyBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KSHVudGluZyBiaXJkcyBhbmQgZ2F0b3JzIG5vcnRoIG9mIFN0IERlbmlzIGhhcyBiZWVuIG15IGdvIHRvIG1vbmV5IG1ha2VyIGFuZCBpdCBnZXRzIHN1cGVyIGFubm95aW5nIHRvIGtpbGwgYSBidW5jaCBvZiBnYXRvcnMganVzdCB0byB0dXJuIG15IHZpZXcsIHJ1biBhIGZldyBmZWV0LCBzaG9vdCBhIGZsb2NrIG9mIGJpcmRzLCBhbmQgcG9vZiBjYXJjYXNzZXMgZ29uZS4gClNtaXRoIHdhcyB0aGUgZmlyc3QgcGVyc29uIEthbGxpcyBtZXQgYW5kIHRoZSBjYXB0YWluIHBsYW50ZWQgYSBraXNzIG9uIGhpcyByaWdodCB0ZW1wbGUuLiAKVGhlIHB1cnBvc2Ugb2YgdGhpcyBhcnRpY2xlICAgYW5kIGl0cyBzdWJzZXF1ZW50IGluc3RhbGxtZW50cywgaWYgdGhlIGRlbWFuZCBpcyBncmVhdCBlbm91Z2ggZm9yIG1lIHRvIGNvbnRpbnVlICAgaXMgdG8gaGVscCB5b3UgYXBwbHkgdGhlIHByaW5jaXBsZXMgb2YgY29tYmluYXRvcmljcyBhbmQgcHJvYmFiaWxpdHkgdG8gd29yZCBwcm9ibGVtcywgaW4gdGhpcyBjYXNlIGNhcmQgZ2FtZSBxdWVzdGlvbnMuIApTdGFuZCBVcCBXb3JrIFN0YXRpb25zIE5ldyBZb3JrIFRpbWVzClRoZSBMYWtlcnMgY2FyZSB3aGF0IGhlIHdhbnRlZC4gTGlrZSBpdCBvciBub3QsIHRoZSBMYWtlcnMgYXJlIGFuIG9yZ2FuaXphdGlvbiB0aGF0IGRvZXMgd2VsbCBieSB0aGVpciBwbGF5ZXJzLiBXaGVuIFJhbmRsZSBzYWlkIGhlIGRpZG4gd2FudCB0byBjb21lIGJhY2ssIHdlIGxldCBoaW0gZ28uClRoZW4gc2hlIHdlbnQgdG8gaGVyIHBhcmVudHMgaG91c2UsIHdoZXJlIHNoZSBzaG93ZXJlZCBhbmQgY2hhbmdlZCBpbnRvIGhlciBjcmVhbSBzdWl0LiBJbiBjb3VydCwgaGVyIG1vdGhlciwgU2FuZHJhLCBzYXlzIHNoZSBub3RpY2VkIG5vdGhpbmcgdW51c3VhbCBhYm91dCBoZXIgYmVoYXZpb3VyIHRoYXQgYWZ0ZXJub29uLiBDb3JvbmVyIEFiZXJuZXRoeSByZWdpc3RlcnMgaGlzIGFtYXplbWVudC4gCkp1c3QgdHJpZWQgdG8gd3JpdGUgdGhlbSBhcyBJIHdvdWxkIGhhdmUgdG9sZCB0aGVtIG9uIHRoZSByYWRpbywgc2FpZCBHYXJyZXR0LiBUcmllZCB0byBtYWtlIGl0IGEgY29udmVyc2F0aW9uYWwgdHlwZSBvZiBkaWFsb2d1ZS4gSWYgeW91IG5vdGljZSB0aGV5IHNob3J0IHNlbnRlbmNlcywgd2hpY2ggaXMgYSBsaXR0bGUgZW1iYXJyYXNzaW5nLiAKRWluIGJpc3NjaGVuIG1laHIgVm9yYmVyZWl0dW5nc3plaXQgZiBlaW4gc3VqZXRmcmVtZGVzIFRoZW1hIHcgZGEgc2Nob24gdyBnZXdlc2VuLiBBYmVyIGRhcyBzZWhlbiB3aXIgRXVyb3AgaGFsdCBlaW5mYWNoIGFsbGVzIHZpZWwgenUgZW5nIFdlciBtZWhyIGRlbiBWZXJsYXVmIGRlcyBLdWx0dXJzY2hvY2tzIGVyZmFocmVuIHdpbGwsIGthbm4gc2ljaCBpbiBkaWVzZSBBYmhhbmRsdW5nIGVpbmxlc2VuOiBXYXMgaXN0IEt1bHR1cnNjaG9jayB1bmQgd2llIGdlaGUgaWNoIGRhbWl0IHVtPy4gCldoeSBnb2xmPyBJIGRvbiBrbm93LiBCdXQgdGhhdCBzb3VsIGNydXNoaW5nbHkgZHVsbCBzcG9ydCBhbmQgdGhlIGRlYWQgd2FyYmxlIG9mIGl0cyBhbm5vdW5jZXJzIGRyb25pbmcgdGhyb3VnaCB0aGUgYWZ0ZXJub29uIHdpbGwgYWx3YXlzIGxldCBtZSBrbm93IHRoYXQgaGUgaW4gdG93bi4gClRoaXMgaXMgZGlzY3JpbWluYXRpb24gYW5kIHByb2ZpbGluZyBhbmQgdGhlc2Ugc3RvcmllcyBsYWNrIGV2aWRlbmNlIGFuZCBmdXJ0aGVyIGludmVzdGlnYXRpb24gdGhhdCBzaG91bGQgYmUgZXhwZWN0ZWQgb2YgYSByZXNwZWN0YWJsZSBtZWRpYSBvdXRsZXQuIApCdXQgSmVzdXMuIEl0IGdsaXRjaHkgYW5kIGxhenkgYW5kIHRoZSBkaWFsb2d1ZSBpcyB0ZXJyaWJsZSAoc2VyaW91c2x5IGV2ZXJ5IGxpbmUgaGFzIGF0IGxlYXN0IG9uZSB1bm5lY2Vzc2FyeSBwcm9mYW5pdHkganVzdCB0byBzb3VuZCBlZGdpZXIpLgpQYXJ0eSBQb2tlciBpcyBnb2luZyBpbiB0aGUgZGlyZWN0aW9uIG9mIGJlaW5nIHRoZSBuZXh0IGdvb2QgZ3V5LCBvZmZlcmluZyAyMCUgMzUlIHJha2ViYWNrIHBhaWQgb3V0IGV2ZXJ5IE1vbmRheS4gCkZ1bGwgc29uZyBsaW5rIHBvc3RzIGFyZSBjb25zaWRlcmVkIGxvdyBlZmZvcnQgdW5sZXNzIG9mZmljaWFsbHkgdXBsb2FkZWQgYW5kIG5ld2x5IHJlbGVhc2VkLgpUaGUgbWFuIHdobyBkcm92ZSB0aGUgY2FyIHdoaWNoIGtpbGxlZCB5b3VuZyBDaWFyYW4gVHJlYWN5IHNhaWQganVzdCBkaWRuIHRoaW5rLiAKUGFkZG9jayBiZWdhbiBzaG9vdGluZyBpbnRvIHRoZSBjcm93ZCBhdHRlbmRpbmcgdGhlIFJvdXRlIDkxIE11c2ljIEZlc3RpdmFsIGZyb20gaGlzIGhvdGVsIHJvb20gaW50byBhIGNyb3dkIG9mIDIyLDAwMCBwZW9wbGUgYXR0ZW5kaW5nIHRoZSBSb3V0ZSA5MSBIYXJ2ZXN0IEZlc3RpdmFsIG11c2ljIGJlbG93IG9uIE9jdC4gClB1a2luZyBhbmQgZHJ5IGhlYXZpbmcgZnJvbSB0aGUgcGFpbi4gQWRtaXR0ZWQgdG8gaG9zcGl0YWwuIApQcnplY2llIHRvIHN0cmF0ZWdpYSBzdGFyYSBqYWsgc2FtYSBwb2xpdHlrYS4gTmllIG13aSBvIG5pZXd5Z29kbnljaCByemVjemFjaCBwcnplZCB3eWJvcmFtaS4gClZlbnR1cmUgQ2FwaXRhbCBhcyBSZXNlYXJjaCBEZXZlbG9wbWVudCAoUk5EKS4gVGhlIGludGVybmV0IGhhcyBwcm92ZW4gdG8gYmUgZHJhbWF0aWMgbGV2ZWxpbmcgb2YgdGhlIHBsYXlpbmcgZmllbGQsIGhlIHNheXMuIApQbHVzLCBzdHVkaWVzIHNob3cgeW91IHdpbGwgYmUgMTAwIHRpbWVzIG1vcmUgYXQgcmlzayBvZiBnZXR0aW5nIHNpY2sgZnJvbSBiYWN0ZXJpYWwgcGF0aG9nZW5zIGxpa2UgRS4gQ29saSB0aGFuIGlmIHlvdXIgc3RvbWFjaCB3YXMgYWJsZSB0byBtYWtlIGFkZXF1YXRlIEhDTC4KSXQgbm90IGVhc3kgdG8gaGl0IGEgOTAgbXBoIGZhc3RiYWxsLCBsZXQgYWxvbmUgb25lIDYgZnJvbSB5b3VyIGhhbmRzLiBFdmVuIGhhcmRlciB0byBkbyBpdCB3aGVuIHlvdSBzZWUgb25lIHBpdGNoIHRvIGhpdCBvbmNlIGV2ZXJ5IGZldyBnYW1lcy4gVG8gYnJpbmcgdXAgY2hlYXRpbmcsIHN0ZXJvaWRzIG9yIGFueXRoaW5nIGVsc2UgaXMgZG9pbmcgbm90aGluZyBidXQgdGFraW5nIGF3YXkgdGhlIGdsb3J5IG9mIHNvbWVvbmUgZWxzZSBzdWNjZXNzLCBpbiBhbiBhdHRlbXB0IHRvIHBlcnNvbmlmeSB0aGVpciBvd24gbGFnZ2luZyBjYXJlZXIuIApJIHRoaW5rIHRoaXMgaXMgdGhlIGJlc3QgdG91cm5hbWVudCBvZiB0aGUgd2hvbGUgeWVhci4gSXQgbWVhbnMgdGhlIHdvcmxkIHRvIHdpbi4iQmFjaCBiYW5rZWQgJDEsMjc2LDgwMiBmb3IgaGlzIGVuZHVyYW5jZSBmaWxsZWQgcGVyZm9ybWFuY2UgaW4gYWRkaXRpb24gdG8gaGlzIGZpcnN0IFdTT1AgZ29sZCBicmFjZWxldCBhbmQgdGhlIGNvdmV0ZWQgQ2hpcCBSZWVzZSBUcm9waHksIHdoaWNoIGlzIG5hbWVkIGFmdGVyIHRoZSB3aW5uZXIgb2YgdGhlIGZpcnN0ICQ1MCwwMDAgd29ybGQgY2hhbXBpb25zaGlwIEhPUlNFIHRvdXJuYW1lbnQuIApUaGlzIHByb2Nlc3MgaXMga25vd24gYXMgbWFya2V0aW5nLiAKQnV0IHllcywgYWN0dWFsbHkgZmlnaHRpbmcgYW5kIHByb3Rlc3RpbmcgYWdhaW5zdCBiaWdvdHJ5IHdvdWxkIGJlIGFtYXppbmcsIGJ1dCBjaGFuZ2luZyB0aGUgd2F5IHBlb3BsZSB0cmVhdCBlYWNoIG90aGVyIGluIHNvY2lhbCBzaXR1YXRpb25zIHdvdWxkIGFsc28gYmUgbmljZS4gSSBqdXN0IGRvbiB1bmRlcnN0YW5kIHdoeSB5b3UgYmVsaWV2ZSBpdCBlaXRoZXIgb25lIG9yIHRoZSBvdGhlciwgY2FuIHdlIHN0cml2ZSBmb3JlIGJvdGg/CkluIG5ldyByZXNlYXJjaCwgUHJvZiBHcmlmZml0aHMgY2l0ZWQgYSBzdXJ2ZXkgb2YgbW9yZSB0aGFuIDIsNzAwIHNlY29uZGFyeSBzY2hvb2wgcHVwaWxzIHRoYXQgZm91bmQgMTUgcGVyIGNlbnQgaGFkIHBsYXllZCBmcmVlIGdhbWJsaW5nIGdhbWVzIGluIHRoZSB3ZWVrIHByaW9yIHRvIHRoZSBzdHVkeS4KVGhhdCdzIGp1c3Qgd2hhdCBJIGdlbmVyYWxseSByZW1lbWJlciAgIHRoZXJlJ3MgbW9yZSwgSSdtIHN1cmUuLiAKQmVuIGJ1IEF5c2UgSHVyIG1ha2FsZXNpbmkgb3plbGxpa2xlIGFkYW1pbiB0ZWtpICJidSBzZW1ib2xpem1pIGdva3R1cmtsZXIsIHNhc3NuaWRsZXIgaGl0aXRsZXIiIGt1bGxhbm1pc3RpciBkZWRpZ2kgaWNpbiBnb25kZXJkaW0uIEN1bmt1IG1ha2FsZSBidW51IGFubGF0aXlvci4gTWFrYWxleWUgZ29yZSBkdW55YW5pbiBoZXIgeWVyaW5kZSBidSBzZW1ib2xpem0ga3VsbGFuaWxtaXMsIGFtYSBCaXphbnMga29udXN1bmRhIGJlbmltIHZlcmRpZ2ltIGdvcnVzdW4gYXluaXNpbmkgc295bGVtaXlvciwgYWtzaW5pIHNveWx1eW9yLgpXZWQgRmViIDI3LCA3OjQ5UE0gQ1NUCkJ1dCBJbSBzY2FyZWQgaGVsbCBzaG92ZSBhbmQgSSBkb250IGZlZWwgY29uZmlkZW50IHNob3ZpbmcgYmVoaW5kIHdpdGggdG9wIHBhaXIuIFNvIGkgY2FsbCBob3BpbmcgdG8gYXQgbGVhc3Qgc2VlIHRoZSB0dXJuLiAKQSAxNSUgY2FsbCByYW5nZSBoYXMgQTRvIGluIHByZXR0eSBiYWQgc2hhcGUuIApIb2xseXdvb2QgaGFzIGdyb3duIGluY3JlYXNpbmdseSBkZXBlbmRlbnQgb24gQXNpYW4gZmluYW5jaWVycyBhbmQgZ2xvYmFsIGF1ZGllbmNlcyB0byB0dXJuIGEgcHJvZml0LiBDcmF6eSBSaWNoIEFzaWFucyBoYXMgdGhlIHBvdGVudGlhbCB0byByZXZpdmUgdGhlIHJvbWFudGljIGNvbWVkeSBnZW5yZSB0aGF0IGhhcyBmb3VuZGVyZWQgYXQgdGhlIGJveCBvZmZpY2UgcmVjZW50bHkgYSBtYXNzaXZlIGdlbmVyYWwgYXVkaWVuY2UuIApULiAKU21hbGwgQnVzaW5lc3MgaXMgQmlnIGluIHRoZSBNb3RvciBDaXR5Ck1hcnNoYWxsLiAKQi4gRG9jdG9yID0gQXJ6dC9yenRpbikuIERhZHVyY2ggc3RlbGx0IHNpY2ggZnIgTWVuc2NoZW4gaW4gZW5nbGlzY2hzcHJhY2hpZ2VuIExuZGVybiBnYXIgbmljaHQgZXJzdCBkaWUgRnJhZ2UgdW5kIERpc2t1c3Npb25lbiBiZXIgZGVuIFNpbm4gb2RlciBVbnNpbm4gZ2VuZGVyZ2VyZWNodGVyIFNwcmFjaGUgd3JkZSBlcyBpbiBzZWluZXIgamV0emlnZW4gRm9ybSBuaWNodCBnZWJlbi4gCkR1cmluZyBzaG93ZXIsIGRhYiBhIGxpdHRsZSBzaGFtcG9vIG9udG8geW91ciBoYW5kcyBhbmQgY3JlYXRlIGxhdGhlci4gCkJyaWFuIFNhbmRvdmFsIGFuZCBDbGFyayBDb3VudHkgQ29tbWlzc2lvbiBDaGFpcm1hbiBTdGV2ZSBTaXNvbGFrLiBUaGlzIGlzIGEgbGl2ZSBmZWVkIGFuZCBtYXliZSBzdWJqZWN0cyB0byBicmVha3Mgb3IgcGF1c2VzLi4gCkEgb256ZSBoZXVyZXMgZHUgc29pciwgTmFwb2xvbiBCb25hcGFydGUgcydhZHJlc3NlIGF1IHBheXMgZGFucyB1bmUgcHJvY2xhbWF0aW9uLCBvIGlsIGV4cG9zZSB1biByY2l0IHBlcnNvbm5lbCBkZSBjZXR0ZSBqb3VybmUuIE9uIHJlbWFycXVlIHVuZSB2b2xvbnQgZGUganVzdGlmaWVyIGNlIGNvdXAgZCdFdGF0IGV0IGQnZW4gZG9ubmVyIHVuZSBhdXRyZSBkZmluaXRpb24uIApNYXliZSwgSSB0b28gYmlnIG9mIGEgc3BvcnRzIGZhbiwgYnV0IEkgcHJvYmFibHkgc2F5IGVpdGhlciBhIHNtYWxsIE5BU0NBUiB0b3kgb3IgYSBzbWFsbCBiYXNrZXRiYWxsIHdpdGggYWxsIG9mIG91ciBjb2xsZWdlIHRlYW1zIGxvZ29zIG9uIGl0LiAKTm93IHlvdSBjb3VsZCBoYXZlIGEgbG9vayBpbnRvIHBva2VyIGJvb2tzIG9uIHRhcGUsIHBva2VyIGJvb2tzIG9ubGluZSwgcG9rZXIgc3RyYXRlZ3kgYm9va3MsIGV0Yy4gClRoaXMgaXMgZGVmaW5pdGVseSBzb21ldGhpbmcgdG8gdHJ5IG91dCBpZiB5b3UgbmVlZCBzb21lIGFjdGlvbiBvZiB5b3VyIG93bi4uIApJIHRoaW5rIHRoYXQgdGhlIHF1ZXN0aW9uIEkgcG9zZWQgaW4gdGhlIGhlYWRsaW5lIGlzIHF1aXRlIGxlZ2l0aW1hdGU6IElmIHRoaXMgaXMgaG93IG91ciBtYXlvcnMgYXJlIGJlaGF2aW5nLCB3aGF0IGlzIHRoZSByZXN0IG9mIHRoZSBwb3B1bGF0aW9uIGRvaW5nIGJlaGluZCBjbG9zZWQgZG9vcnM/CkluIGhpcyBmYW1pbHksIGl0IHNlZW1zIHRoYXQgZXh0cmVtZSBzdHJlc3MgbGVhZHMgdG8gaG9hcmRpbmcgYmVoYXZpb3JzLiAKSWFtbHVuYXNvbCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpCeSB0aGUgZWFybHkgMTk5MHMgVWxsaW90dCB3YXMgd2lubmluZyB0b28gbXVjaCBtb25leSBhdCBwb2tlciBmb3IgSHVsbCBsb2NhbHMgdG8gd2FudCB0byBwbGF5IGhpbSwgc28gaGUgc3RhcnRlZCB0b3VyaW5nIHRoZSBnYW1pbmcgdGFibGVzIG9mIExlZWRzLCBCcmFkZm9yZCwgQmlybWluZ2hhbSBhbmQgTG9uZG9uLiBIb3dldmVyLCBoaXMgcG9rZXIgY2FyZWVyIGRpZCBub3QgcmVhbGx5IHRha2Ugb2ZmIHVudGlsIDE5OTcgd2hlbiBoZSB3b24gb25lIG9mIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZ29sZCBicmFjZWxldHMuLiAKSW4gbXkgZXhwZXJpZW5jZSB0aGF0J3MgaG93IGluY2lkZW50cyBoYXBwZW4gYmVjYXVzZSBpdCdzIG9mdGVuIHRvbyBtdWNoIHRvIGV4cGVjdCBwZW9wbGUgdG8gc2h1dCBnYXRlcyBvciBzZWN1cmUgZmVuY2VzLldoZW4gSSBzYXkgSSBnbyBmb3Igd2Fsa3MgYXQgb2ZmIHBlYWsgdGltZXMgSSBtZWFuIGdvaW5nIGF0IDMvNGFtIGFuZCA3cG0uIApBbnl3YXkgc3RyZXRjaGVzIHJlYWxseSB3b3JrLiBBbG90IG9mIG1hc3RlcnMgcnVubmVycyBzdWZmZXIgd2l0aCB0aGlzIGFuZCB0aHJvdWdoIG9uZSBvZiB0aGVpciB3ZWJzaXRlcyBpIGZvdW5kIHN0cmV0Y2hlcyBndWFyYW50ZWVkIHRvIHdvcmsuIHRoZXkgcmVhbGx5IGRpZCwgaSBjYW4ndCByZW1lbWJlciB0b3RhbGx5IGJ1dCBvbmUgd2FzIHRvIGRyYXcgdGhlIGFscGhhYmV0IGluIHRoZSBhaXIgdXNpbmcganVzdCB5b3VyIGZvb3QgYW5kIGFub3RoZXIgd2FzIHB1dCBhIHRvd2VsIG9uIHRoZSBmbG9vciByZWFjaCBvdXQgd2l0aCB5b3VyIHRvZXMgYW5kIHRyeSBhbmQgcHVsbCB0aGUgdG93ZWwgdG93YXJkIHlvdSBieSBjdXJsaW5nIHlvdXIgdG9lcyB1bmRlci4KWW91IGRvbiBoYXZlIHRvIGxpc3RlbiB0byBhbnkganVzdGlmaWNhdGlvbnMgb3IgYXBvbG9naWVzLiBJdCBpc24geW91IGhlIG93ZXMgdGhvc2UgYXBvbG9naWVzIHRvLiBKdXN0IHN0YXRlIHRoZSB0cnV0aCBhbmQgbm8gbW9yZS4gSXQgZWFzeSB0byB0ZWxsIHRoZSB0cnV0aCBvbmNlIHlvdSBnZXQgdXNlZCB0byBqdXN0IGRvaW5nIGl0LiBJIG5vdCBjYWxsaW5nIHlvdSBhIGxpYXIsIGp1c3QgdGhhdCBldmVyeW9uZSBhY3RzIGxpa2UgdGhlIHRydXRoIGlzIGEgYm9vZ2V5bWFuIHdoZW4gaXQgaXMgaGFyZC4gSXQganVzdCBmYWN0cy4gWW91IGtub3cgdGhlbS4gSGUga25vd3MgdGhlbS4gVGhlcmUgaXMgbm8gcHVycG9zZSB0byBseWluZy4KRXZlbiB0aGVuLCB0aGUgcmVjb2duaXRpb24gd2FzLCBhcyB5b3Ugc2F5LCBwcm9ibGVtYXRpYy4gCkJyZW5kb24gR29kZGFyZCAoaHlwZXIgZXh0ZW5kZWQga25lZSkgYW5kIENhbGUgSG9va2VyIChzb3JlIGtuZWUgY2FwKSB3aWxsIGJvdGggaGF2ZSB0byB0cmFpbiB0byBwbGF5LiAKVGhlIGZvbGxvd2luZyBhcmUgZml2ZSBvZiBmaW5lc3QgY2FzdGxlcyBpbiBBbWVyaWNhIHRvIGV4cGxvcmUgZm9yIHRoYXQgbmV4dCBiaWcgdmFjYXRpb24uLiAKQWluc2ksIG5vdXMgcG91dm9ucyBhZGFwdGVyIGxlIGNvbnRlbnUgZGUgbm90cmUgc2l0ZSB3ZWIgZGUgbWFuaXJlIHBlcnNvbm5hbGlzZSBldCBhZGFwdGUgYXV4IGJlc29pbnMgZGUgbm9zIHV0aWxpc2F0ZXVycyB0b3V0IGVuIG9wdGltaXNhbnQgbm90cmUgb2ZmcmUuIApCZWNhdXNlIGl0IGFwcGVhcnMgdG8gYWZmZWN0IG9ubHkgYWZmZWN0IHBlcmNlcHRpb24gb2YgcmVjb3ZlcnkgKHNldmVyaXR5IG9mIHNvcmVuZXNzKSwgYnV0IG5vdCBhbnkgcGh5c2lvbG9naWNhbCBhc3BlY3Qgb2YgcmVjb3ZlcnksIGl0IG1heSBhY3R1YWxseSBsZWFkIHRvIHNvbWVvbmUgdGhpbmtpbmcgdGhleSBjYW4gdHJhaW4gaGFyZGVyIHRoYW4gdGhlaXIgYm9keSBpcyByZWNvdmVyZWQgYW5kIHJlYWR5IGZvci4gCk9yaWdpbmFsbHkga25vd24gYXMgaGVycGVzIGdlc3RhdGlvbmlzICh0aGUgbmFtZSB3YXMgY2hhbmdlZCBiZWNhdXNlIGl0IHR1cm5lZCBvdXQgdG8gaGF2ZSB6ZXJvIHJlbGF0aW9uIHRvIHRoZSBoZXJwZXMgdmlydXMpLCBtb2Rlcm4gbWVkaWNpbmUgc3RpbGwgaXNuJ3Qgc3VyZSB3aHkgUEcgaGFwcGVucywgYnV0IHBsYWNlbnRhbCBpbnZvbHZlbWVudCBpcyBhIHBvcHVsYXIgdGhlb3J5LiBUaGUgcHJldmFpbGluZyBpZGVhIGlzIHRoYXQgbm9ybWFsbHkgaGFybWxlc3MgcGxhY2VudGFsIHRpc3N1ZSBlbnRlcnMgdGhlIG1vdGhlcidzIGJsb29kc3RyZWFtLCBvbmx5IHRvIGJlIGF0dGFja2VkIGJ5IGEgY29uZnVzZWQgaW1tdW5lIHN5c3RlbSwgYXMgaXMgdGhlIGNhc2Ugd2l0aCBvdGhlciB0eXBlcyBvZiBhdXRvaW1tdW5lIGRpc2Vhc2VzLiBGZW1hbGUgaG9ybW9uZXMsIHBhcnRpY3VsYXJseSBlc3Ryb2dlbiwgbWF5IGFnZ3JhdmF0ZSB0aGUgcmVhY3Rpb24sIHdoaWNoIGNvdWxkIGV4cGxhaW4gd2h5IHRoZSBkaXNlYXNlIG9jY3VycyBkdXJpbmcgbGF0ZXIgcHJlZ25hbmN5IGFzIGVzdHJvZ2VuIGxldmVscyByaXNlIFtzb3VyY2VzOiBGcmVpbWFuLCBFQURWXS4gCkNhcmUgbGVzcyBhYm91dCB0aGluZ3MgbGlrZSBkZWFkbGluZXMsIGltcHJlc3NpbmcgbXkgY28gd29ya2VycyBvciBteSBib3NzLiAKSWFtTm90QnVyZCAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhpcyBsZWQgdG8gaG9zdGlsaXRpZXMgYmV0d2VlbiBFbmdsYW5kIGFuZCBOb3JtYW5keSwgdG8gdGhlIGV4dGVudCB0aGF0IGV2ZW4gUG9wZSBKb2huIFhWIHRyaWVkIHRvIGJyaW5nIHBlYWNlIGJldHdlZW4gdGhlIHR3byBpbiBhIHRyZWF0eSBpbiBEZWNlbWJlciA5OTAuIFRoaXMgcHJvYmxlbSB3YXMgZXZlbnR1YWxseSBzb2x2ZWQgYnkgdGhlbHJlZCdzIG1hcnJpYWdlIHRvIEVtbWEsIHRoZSBDb3VudCBvZiBOb3JtYW5keSdzIGRhdWdodGVyLiAKSmVzc2ljYSB3b3VsZCBqdXN0IHNsb3dseSBmYWRlIGlmIEkgZHJldyBoZXIganVzdCBhcyBzaGUgaGFkIGJlZW4gZG9pbmcgZm9yIHllYXJzLiAKSGUgaXMgbXkgYmVzdGZyaWVuZCwgaGUgaGVscGVkIG1lIGEgbG90IHRocm91Z2ggYSBsb3Qgb2YgZGlyZSB0aW1lcyBhbmQgd291bGQgSSBiZSBpbiBhIGJldHRlciBzaXR1YXRpb24gd291bGQgbm90IGhhdmUgYmF0IGFuIGV5ZSBoZWxwaW5nIGhpbS4gCkxpc3RlbiwgdGhlIDYgaW4gMSBDYXNpbm8gR2FtaW5nIFRhYmxlIEZ1cm5pdHVyZSBjb21lcyB3aXRoIGV2ZXJ5dGhpbmcgdGhhdCB5b3UgbmVlZCBmb3IgZXZlcnkgZ2FtZS4gVGhpcyB3b3JrcyBmb3IgcGxheWluZyBjYXJkcywgc3RlZWwgbWFyYmxlcyBmb3IgdGhlIFJvdWxldHRlIHdoZWVsLCBjaGVja2VycywgYmFja2dhbW1vbiBwaWVjZXMsIGFuZCBldmVyeXRoaW5nIGVsc2UgaW5jbHVkaW5nIDUwMCBwb2tlciBjaGlwcy4gT2gsIGFuZCB3aGF0IGRpZCBKYXJlZCB0aGluayBvZiBvdXIgbmV3IHRhYmxlcz8gSGUgYWJzb2x1dGVseSBsb3ZlZCB0aGVtIGFuZCB0aG91Z2h0IGFib3V0IGdldHRpbmcgc29tZSBmb3IgaGltc2VsZiBhbmQgc2VsbGluZyB0aGUgb25lcyBoZSBoYXMgb25saW5lLi4gCkFuZCBub3cgc2hlIGhhcyBoZXIsIGV2ZW4gbW9yZSBzbyBvZiBhIHJlYXNvbiB0byBkaXNtaXNzIGthaXNlciBhbmQgbGV0IERhdmlkIGFidXNlIGhpbS4uIApFZGl0OiBJIHNlZSBjb21tZW50cyByZWdhcmRpbmcgJ3Byb29mJyBvZiB0aGlzIGV2ZW50LiAKSSBrbmV3IGdvaW5nIHB1YmxpYyBsaWtlIHRoaXMgd2FzbiBnb2luZyB0byBnbyBkb3duIHdlbGwgd2l0aCB0aGUgS2FyZGFzaGlhbi4gSSB0aGluayBzaGUgZGVmaW5pdGVseSBzaG91bGRuIGhhdmUgZG9uZSBpdCBiZWZvcmUgc3BlYWtpbmcgdG8gS2hsb2UuIApCZWNhdXNlIHdlIGFyZSBhIHJlZmxlY3Rpb24gb2YgVFJQLCB3ZSBhcHBseSBSUCB0aGVvcmllcywgdGVybXMgYW5kIGlkZWFzIHRvIGFpZCBpbiB0aGUgcHVyc3VpdCBvZiB0aGVzZSB3b21lbiBjZW50cmljIHJlZCBwaWxsIGdvYWxzLiBBbGwgbWVtYmVycyBhcmUgZXhwZWN0ZWQgdG8gdW5kZXJzdGFuZCB0aGF0IHRoZSBtYWxlIGFuZCBmZW1hbGUgc3RyYXRlZ2llcyBhcmUgZGlmZmVyZW50IGFuZCByZWZsZWN0IHRoZSBkaWZmZXJlbmNlcyBiZXR3ZWVuIG1lbiBhbmQgd29tZW4gY29uZGl0aW9ucyBmb3Igc3VjY2Vzcy4gRm9yIHRoaXMgcmVhc29uIG5laXRoZXIgZGVtb25pemluZyBtZW4gb3IgVFJQIG5vciB2aWxpZnlpbmcgd29tZW4gZm9yIHdhbnRpbmcgbWFycmlhZ2UgaXMgYWxsb3dlZC4gCkNlcyBwZW5zZXVycy4gQWJzZW50IGR1IG1vbmRlIGNhciB0ZWxsZW1lbnQgcHJzZW50IGVuIGx1aSBtbWUuIAoiSmltLCBpbiBoaXMgcm9sZSBhcyBwcmVzaWRlbnQsIG1hZGUgaGltc2VsZiBhd2FyZSBvZiB0aGUgem9uaW5nIGNvZGUgc28gdGhhdCBoZSBjb3VsZCB0YWxrIHRvIGRldmVsb3BlcnMgaW50ZWxsaWdlbnRseSwiIHNoZSBzYWlkLgpJIGRvbiByZWFsbHkgYnV5IHRoYXQuIFdoeSB3b3VsZG4gdGhleSBiZSBhYmxlIHRvIGNoYW5nZSB0aGVpciBvd24gc3lzdGVtPyBUaGUgb25seSB0aGluZyBJIGNhbiB0aGluayBvZiBpcyB0aGF0IGl0IGJlY2F1c2Ugb2YgdGhlIHNsb3dlciB1cGRhdGUgcHJvY2VzcyBmb3IgdGhlIG90aGVyIHBsYXRmb3JtcywgYnV0IHdoeSB3b3VsZCB0aGV5IG1ha2UgYSBzeXN0ZW0gbGlrZSB0aGlzIHRoZXkgaGF2ZSBubyBjb250cm9sIG92ZXI/IFRoZXkgY2FuIHNwaW4gdXAgYW4gQWxlcnQgb24gZXZlcnkgcGxhdGZvcm0gd2hlbmV2ZXIgdGhleSB3YW50LCB3aXRoIHdoYXRldmVyIHJld2FyZCB0aGV5IHdhbnQsIGFuZCBkbyBzbyBldmVyeSBvdGhlciB3ZWVrLiBDbGVhcmx5IHRoZXkgYnVpbHQgc3lzdGVtcyBsaWtlIHRoYXQgYmVmb3JlLiAKIlllYWguIApXaXRoIGNlbGwgcGhvbmVzLCB0aGUgdGVjaG5vbG9neSB3YXMgYW4gb2J2aW91cyBpbXByb3ZlbWVudCwgYW5kIGl0IHByb3ZpZGVzIGNyZWF0b3JzIGEgZm91bmRhdGlvbiB0byBidWlsZCB1cG9uLCBpdCBvdmVyYWxsIGEgbXV0dWFsbHkgYmVuZWZpY2lhbCBjaGFuZ2UsIHRoYXQgd2hhdCBwcm9ncmVzcyBzaG91bGQgYmUuIApEYW5jZSBpbnN0cnVjdG9ycyBjYW4gYmUgbGlrZSB0aGlzIGFuZCBJJ2Qgc2F5IGl0J3Mgbm9ybWFsLiAKQXMgYSByZXN1bHQsIHRoZSBjb21tb24gcGVyc29uIG5vdyBwZXJjZWl2ZXMgYXV0aXNtIGFuZCBob3cgaXQgd29ya3MgaW5jb3JyZWN0bHksIGFzIHRoaXMgZmlsbSBpcyB0aGUgb25seSBndWlkZSBmb3IgdGhlbSB0byBiYXNlIHRoZWlyIHVuZGVyc3RhbmRpbmcuIFRoaXMgb25seSBtYWtlcyBpdCBtb3JlIGZydXN0cmF0aW5nIGFuZCBvc3RyYWNpc2luZyBmb3IgYXV0aXN0aWMgcGVvcGxlLCBhcyB0aGV5IG5vdyBoYXZlIHRvIGRlYWwgd2l0aCBwZW9wbGUgd2hvIHRoaW5rIHRoZXkgdW5kZXJzdGFuZCBob3cgdGhlaXIgYXV0aXNtIHdvcmtzLCByYXRoZXIgdGhhbiBiZWluZyBjb21wbGV0ZWx5IGNsdWVsZXNzIHRvIGhvdyBpdCB3b3Jrcy4uIAoiSnVzdCBvbmUgb2YgZWFydGgncyBtYW55IG1pbGxpb25zIG9mIGhvbWVzLCBBbm5lIGdpcmwgYnV0IG91cnMgIE9VUlMgb3VyIGJlYWNvbiBpbiBhIG5hdWdodHkgd29ybGQuJyBXaGVuIGEgZmVsbG93IGhhcyBhIGhvbWUgYW5kIGEgZGVhciwgbGl0dGxlLCByZWQgaGFpcmVkIHdpZmUgaW4gaXQgd2hhdCBtb3JlIG5lZWQgaGUgYXNrIG9mIGxpZmU/IgpNclN0aWNrczIxICAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpCaWVuIHF1ZSBwaGFnb2N5dGVzIHBhciBsYSBjaHJ0aWVudCwgbGVzIGFuY2llbm5lcyBjcm95YW5jZXMgbW91cnVyZW50IGVsbGVzPyBQYXMgdnJhaW1lbnQuIE1hbGdyIGxlIHRyYXZhaWwgbWVuIGVuIHByb2ZvbmRldXIgcGFyIGwnZ2xpc2UsIGNlbGxlIGNpIG5lIHB1dCBqYW1haXMgYWxsZXIgYXUgYm91dCBkZSBzYSBxdXRlLiBDIHBvdXJxdW9pLCAgZXQgbCwgYXUgY291cnMgZGUgbCBvbiBhc3Npc3RhICBkaXZlcnNlcyBybWluaXNjZW5jZXMgZCBjdWx0ZXMgcGFlbnMgTCdnbGlzZSBuIGRvbmMgamFtYWlzIHJ1c3NpICBmYWlyZSB0YWJ1bGEgcmFzYS4gCldlIG5vdCBnb2luZyBkb3duIHRoZXJlLCB3ZSBhcmUgZnVja2luZyBsZWF2aW5nLiBXZSB3YWxrZWQgYmFjayB0byB0aGUgd2luZG93IHdlIGNyYXdsZWQgaW4gZnJvbSBhbmQgaGVscGVkIGVhY2ggb3RoZXIgb3V0LiAKSW4gMjAxNiwgS2F2YW5hdWdoIHJlcG9ydGVkIGNyZWRpdCBjYXJkIGFuZCBwZXJzb25hbCBsb2FuIGRlYnRzIG9mIGJldHdlZW4gJDYwLDAwMCBhbmQgJDIwMCwwMDAuIEthdmFuYXVnaCBleHBsYWluZWQgdGhhdCB0aGUgZG9sbGFyIGFtb3VudCBvZiB0aGUgZGVidCAid2FzIG5vdCBjbG9zZSB0byB0aGUgdG9wIG9mIHRoZSByYW5nZXMgbGlzdGVkIG9uIHRoZSAxMyBmaW5hbmNpYWwgZGlzY2xvc3VyZSByZXBvcnRzLiIgSGUgYWRkZWQgdGhhdCBtdWNoIG9mIHRoZSBkZWJ0IHdhcyBzcGVudCBvbiBhIHNlcmllcyBvZiBob21lIGltcHJvdmVtZW50cyBhbmQgb24gc2Vhc29uIHRpY2tldHMgdG8gdGhlIFdhc2hpbmd0b24gTmF0aW9uYWxzIGJhc2ViYWxsIHRlYW0sIGFuIGV4cGVuZGl0dXJlIHRoYXRhdHRyYWN0ZWQgYXR0ZW50aW9uIGZyb20gdGhlIG1lZGlhLiBUaGV5IHdvdWxkIGRpdmlkZSB0aGUgdGlja2V0cyBhdCBhInRpY2tldCBkcmFmdCIgYXQgaGlzIGhvdXNlLiAiRXZlcnlvbmUgaW4gdGhlIGdyb3VwIHBhaWQgbWUgZm9yIHRoZWlyIHRpY2tldHMgYmFzZWQgb24gdGhlIGNvc3Qgb2YgdGhlIHRpY2tldHMsIHRvIHRoZSBkb2xsYXIsIiBoZSB3cm90ZS4gIk5vIG9uZSBvdmVycGFpZCBvciB1bmRlcnBhaWQgbWUgZm9yIHRpY2tldHMuIE5vIGxvYW5zIHdlcmUgZ2l2ZW4gaW4gZWl0aGVyIGRpcmVjdGlvbi4iCkkgY291bGQga2VlcCBnb2luZywgYnV0IG9uZSBvZiB0aGUgdGhpbmdzIEkgbm90aWNlZCBpbiB0aGUgNDggaG91cnMgdmlkZW8gaXMgdGhhdCBkdXJpbmcgdGhlIGludGVydmlldyB3aXRoIEpvaG4gaW4gaGlzIGJvYXQsIHlvdSBjYW4gc2VlIGhlIGhhcyBzb21lIGluanVyaWVzIHRvIGhpcyBoYW5kLiBBIGJsYWNrZW5lZCBmaW5nZXIgbmFpbCBhbmQgaGlzIHRodW1ibmFpbCBhcHBlYXJzIHRvIGJlIGJyb2tlbiBvZmYgb24gdGhlIHNpZGUuLiAKTGVtdXJpYT8gQXRsYW50aXMgaXRzZWxmLCBldmVuIGlmIGxvY2F0ZWQgYXQgdGhlIEV5ZSBvZiB0aGUgU2FoYXJhP0x1a2U0XzV0aHJ1OEtKViAgMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvSSBoYWQgbmV2ZXIgaGVhcmQgb2YgR3VudW5nIFBhZGFuZywgYmVmb3JlIHlvdXIgY29tbWVudCwgYnV0IHR3byB0aGluZ3MgaW50ZXJlc3QgbWUgYWJvdXQgaXQ6IDEpIEl0IGJ1cmllZCB1bmRlciBxdWl0ZSBhIGJpdCBvZiBlYXJ0aC4gCldpdGggYSA0LjUgc3RhciBZZWxwIHJhdGluZyBvdXQgc2V2ZW4gcmV2aWV3cywgQmFzaWxpYyBFc3NlbnRpYWxseSBUaGFpIGhhcyBiZWVuIGdldHRpbmcgcG9zaXRpdmUgYXR0ZW50aW9uLgpJdCBhbGwgbXVtYm8ganVtYm8gdG8gbWUuIEkgZG9uIGtub3cgYW55b25lIGF0IHRoZSB0ZW1wbGUgSSBnbyB0byB0aGF0IGlzIGF3YWtlbmVkIG9yIHJlYWxseSBjYXJlcyBhYm91dCB0aGVpciBwcm9ncmVzcy4gSXQganVzdCBzZWVtcyBsaWtlIHRoZWlyIGp1bXBpbmcgdGhyb3VnaCByaXR1YWxpc3RpYyBob29wcyB0byBhY2NydWUgbWVyaXQgdGhhdCB3aWxsIGFjY3VtdWxhdGUgYW5kIHJlbW92ZSBvYnN0YWNsZXMgdG8gYXdha2VuaW5nLiBNYXliZSB0aGVyZSBtb3JlIHRvIGl0LCBtYXliZSBpdCBub3QgcmVhbGx5IFZhanJheWFuYSwgYnV0IEkgZG9uIGhhdmUgdGhlIHRpbWUgb3IgY2FzaCB0byByZWFsbHkgcGFydGljaXBhdGUgaW4gaXQuIExpa2UgaG93IGFyZSB5b3Ugc3VwcG9zZWQgdG8gbWVkaXRhdGUgb24gZW1wdGluZXNzIHdpdGhvdXQgdGhlIGNvbmNlbnRyYXRpb24gbmVlZGVkIGZvciB0aGF0LiBUaGV5IGhhdmUgYmVnaW5uZXIgeW9naXMgdHJ5aW5nIHRvIGRvIHRoZSBpbXBvc3NpYmxlLCBnaXZpbmcgdGhlbSByaXR1YWxzLCBjaGFudHMgYW5kIGVtcG93ZXJtZW50cyB0aGF0IGRvbnQgYWN0dWFsbHkgYnVpbGQgaGFyZCBjb25jZW50cmF0aW9uIGFuZCB2aXBhc3NhbmEgc2tpbGxzIHRoYXQgd2VsbC4KNSBDcnVjaWFsIFJ1bGVzIG9mIEV2ZXJ5IEdhbWUgTm90IEZvdW5kIGluIHRoZSBSdWxlYm9vawpJZiB5b3UgbmV3IHRvIExBTkRlc2ssIGVuam95IGNvZGluZywgYW5kIHdhbnQgdG8gc3VwZXJjaGFyZ2UgeW91ciBMQU5EZXNrIHVzYWdlLCB5b3Ugc2hvdWxkIGxvb2sgaW50byB0aGVpciBNQlNESy4gWW91IGNhbiBkbyBhIGxvdCBvZiBzdHVmZiB0aHJvdWdoIHRoZXJlLCB1c2luZyBhbnl0aGluZyB0aGF0IGxldHMgeW91IGNvbnN1bWUgd2ViIHNlcnZpY2VzLiBJIHVzZWQgaXQgdmlhIFZCQSBpbiBFeGNlbCwgUG93ZXJTaGVsbCwgYW5kIEMgdG8gZ3JlYXQgZWZmZWN0LgpUaGUgRGlzc2VjdGlvbiBSb29tIHNlc3Npb25zIHdpbGwgaW5jbHVkZSBzZXZlbiBzZXNzaW9ucyAgICgxKSB0aGUga25lZTsgKDIpIGxvd2VyIGxlZywgYW5rbGUgYW5kIGZvb3Q7ICgzKSB0aGUgc2hvdWxkZXI7ICg0KSBlbGJvdywgaGFuZCBhbmQgd3Jpc3Q7ICg1KSBiYWNrIGFuZCBuZWNrOyAoNikgYWJkb21lbiBhbmQgZ3JvaW4sIHBsdXMgKDcpIGEgcmV2aXNpb24gc2Vzc2lvLCBhbmQgKDgpIGEgZm9ybWF0aXZlIE9TQ0UgZXhhbS4gVGhlc2Ugc2Vzc2lvbnMgd2lsbCBjb25jZW50cmF0ZSBvbiB0aGUgYW5hdG9teSBvZiB0aGUgYm9keSByZWdpb25zIGluY2x1c2l2ZSBvZiBvc3Rlb2xvZ3ksIG15b2xvZ3ksIG5ldXJvbG9neSBhbmQgb3RoZXIgcmVsZXZhbnQgc3RydWN0dXJlcyB3aGVyZSByZXF1aXJlZC4gQSBwcmFjdGljYWwgZWxlbWVudCB3aWxsIGJlIHByb3ZpZGVkIHRvIHRoaXMgbW9kdWxlIGluIHRoZSBmb3JtIG9mIHN1cmZhY2UgYW5hdG9teSBvcmllbnRhdGlvbiBhbmQgcHJhY3RpY2UuClRoZSBzdG9yaWVzIHNwZWN0YWN1bGFyLCB0aGUgdGltZSB0b2dldGhlciBwcmVjaW91cy4gCllvdSBkb24gbmVlZCB0byBzdHVkeSBvcGVuaW5ncyB0byBwbGF5IHdlbGwsIGJ1dCBpdCBnZXRzIGhhcmRlciBhbmQgaGFyZGVyIHRvIHdpbiBpbiBjb21wZXRpdGl2ZSBjaGVzcyBpZiB5b3UgZG9uIE9wZW5pbmdzIGFyZSBsaWtlLiBTb25ncyB0byBhIG11c2ljaWFuLiAKSW4gbmVhcmx5IGV2ZXJ5IGN1bHR1cmUsIGluY2Vuc2Ugd2FzIGJlbGlldmVkIHRvIGF0dHJhY3QgdGhlIGdvZHMgYW5kIGdvZGRlc3Nlcywga2VlcCBldmlsIHNwaXJpdHMgYXQgYmF5LCBhbmQgcHVyaWZ5IGJvdGggYm9keSBhbmQgc291bC4gQW5jaWVudCBwZW9wbGVzLCBiZWxpZXZpbmcgdGhhdCBzcGlyaXQgYW5kIGxpZmUgZW50ZXJlZCB0aGUgYm9keSB0aHJvdWdoIHRoZWlyIGJyZWF0aCwgYWxzbyB0aG91Z2h0IHRoYXQgaW5oYWxpbmcgY2VydGFpbiBvZG9ycyBicm91Z2h0IHRoZW0gY2xvc2VyIHRvIEdvZC4gRnJhZ3JhbmNlIHdhcyBjb25zaWRlcmVkIGFraW4gdG8gdGhlIGRpdmluZSBiZWNhdXNlIGl0IHdhcyBpbnZpc2libGUsIG15c3RlcmlvdXMsIGFuZCBhdHRyYWN0aXZlLiAKVGhpcyBpcyBub3JtYWwgYW5kIG11c3QgYmUgc28sIG90aGVyd2lzZSB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBzdGl0Y2hlcyBvbiBmb3VyIG5lZWRsZXMgd291bGQgbm90IGJlIHBvc3NpYmxlLiAKTmV2ZXIgY3JpdGl6ZSBhIHBva2VyIHBsYXllciB1bmxlc3MgeW91IGhhdmUgd2Fsa2VkIGEgbWlsZSBpbiBoaXMgc2hvZXMuIElmIHlvdSBmb2xsb3cgdGhpcyBwb2tlciBldGlxdWV0dGUgdGlwLCB0aGFuIHlvdSB3aWxsIGJlIGEgbWlsZSBhd2F5IHdoZW4geW91IGNyaXRpemUgdGhlIHBsYXllciwgYW5kIHlvdSB3aWxsIGhhdmUgaGlzIHNob2VzLgpBbmQgc29tZSBvZiB0aGVzZSB0ZWNobmlxdWVzIGluIGZhY3QgRGVlcCBMZWFybmluZyBpdHNlbGYgYXJlIHBvc3NpYmxlIGJlY2F1c2Ugb2YgdGhlIGh1Z2UgcG93ZXIgb2YgY29tcHV0ZXJzIHRoYXQgaXMgY3JlYXRpbmcgYXBwbGljYXRpb25zIGluIGEgdmFzdCBudW1iZXIgb2YgYXJlYXMgYWNyb3NzIGluZHVzdHJpZXMuIFNvIGZhciwgdGhlIHdvcmsgaW4gQUkgaXMgbGFyZ2VseSBmb2N1c2VkIG9uIHRoZSBjb25zdW1lciB3b3JsZCwgYW5kIGluIHNvbWUgYXJlYXMgbGlrZSByb2JvdGljcyBhbmQgYXV0b25vbW91cyBkcml2aW5nLiBUaGUgZW50ZXJwcmlzZSB3b3JsZCBpcyB3aWRlIG9wZW4sIHJpY2ggd2l0aCBhcHBsaWNhdGlvbnMgYW5kIHNvIGZvcnRoLgpIb3cgZGlkIGdldCB0aGUgc3BlYWtlcnMgYW5kIGRpZCB5b3UgaGF2ZSB0byBwYXkgdGhlbT8KV2l0aCBtb3JlIHRoYW4gdHdvIGRvemVuIGxvY2F0aW9ucywgVG9wIFBvdCBzYXlzIGl0IHdhcyBpbnNwaXJlZCB0byBjcmVhdGUgYSBwbGFjZSB3aGVyZSBjb3VsZCBzbG93IGRvd24gYW5kIHNhdm9yIHRoZSBub3N0YWxnaWEgYW5kIHRhc3RlIG9mIGEgc2VjcmV0IDE5MjBzIGRvdWdobnV0IHJlY2lwZSwgcGVyIGl0cyB3ZWJzaXRlLiBPbiB0aGUgbWVudSwgbG9vayBmb3IgY2xhc3NpY3MgbGlrZSB0aGUgb2xkIGZhc2hpb25lZCBjYWtlIGRvdWdobnV0cywgZ2xhemVkIHJpbmdzIGFuZCBhcHBsZSBmcml0dGVycy4uIApPbmNlIG1vbSBpcyB0b28gb2xkIHNoZSB3YWxrcyBvZmYgb24gaGVyIG93biBhbmQgZGllcy4gClRoZSBzdWNjZXNzZnVsIGJsdWZmIGlzIG9uZSB3aGVyZSBub2JvZHkga25vd3MgeW91IGJsdWZmLCBiZWNhdXNlIGFsbCB0aGUgb3Bwb25lbnRzIGZvbGQvZ2l2ZSB1cCBiZWZvcmUgdGhlIGxhc3QgY2hhbmNlIHRvIGJldCwgYW5kIHlvdSB3aW4gdGhlIHBvdCBieSBkZWZhdWx0LiBJZiB0aGVyZSBpcyBhIHNob3dkb3duICh3aGVyZSB5b3UgbXVzdCBzaG93IHlvdXIgY2FyZHMpLCB5b3Ugd2lsbCBiZSBzaG93biB1cCBhcyBhIGJsdWZmZXIsIGlmIHlvdSBhcmUgc2VlbiBiZXR0aW5nIGJpZyB3aXRoIGEgd2VhayBvciB0cmFzaCBoYW5kLiBZb3Ugbm9ybWFsbHkgb25seSB3YW50IHRvIGdldCBpbnRvIGEgc2hvd2Rvd24gd2hlbiB5b3UgaGF2ZSBwcmV0dHkgZ29vZCBjYXJkcywgZXhjZXB0IGdldHRpbmcgY2F1Z2h0IG9uY2UgbWF5IGJlIG9rYXk7IHNvLCBiZSByZWFkeSB0byB1c2UgeW91ciBiYWNrZG9vciAoc28gZm9sZCksIGJlZm9yZSB0aGUgc2hvd2Rvd24gd2hlbiB5b3UgaGF2ZSBhIHdlYWsvb3IgdHJhc2ggaGFuZCEuIApBIHByb3BlcnR5IGxhdyB3YXMgcGFzc2VkIHRoYXQgZm9yYmFkZSBvd25lcnNoaXAgb2YgbW9yZSB0aGFuIG9uZSBwcml2YXRlIGR3ZWxsaW5nLCBhbmQgTGlieWFuIHdvcmtlcnMgdG9vayBjb250cm9sIG9mIGEgbGFyZ2UgbnVtYmVyIG9mIGNvbXBhbmllcywgdHVybmluZyB0aGVtIGludG8gc3RhdGUgcnVuIGVudGVycHJpc2VzLiBSZXRhaWwgYW5kIHdob2xlc2FsZSB0cmFkaW5nIG9wZXJhdGlvbnMgd2VyZSByZXBsYWNlZCBieSBzdGF0ZSBvd25lZCAicGVvcGxlIHN1cGVybWFya2V0cyIsIHdoZXJlIExpYnlhbnMgaW4gdGhlb3J5IGNvdWxkIHB1cmNoYXNlIHdoYXRldmVyIHRoZXkgbmVlZGVkIGF0IGxvdyBwcmljZXMuIApBcyBhIGZlbGxvdyBwb2tlciBwbGF5ZXIgaSBzaG91bGQgd2FybiB5b3UgdGhvdWdoLCBob2xsYW5kIGNhc2lubyBpcyBxdWl0ZSBhIHNoaXRzaG93LiAKV2lja2VkTGlsVGhpbmcgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvCkkgd291bGQgaGF0ZSB0byBub3QgZ2V0IGEgaG9tZSBiZWNhdXNlIEkgbWFrZSBzbWFsbCB3aXRoZHJhd2FscyBvciBpZiBhIGxhbmRsb3JkIGZlZWxzIEkgZWF0IG91dCB0byBtdWNoLiBUaGF0IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggTWVhc2EgdGVuYW50LiBNeSBjcmVkaXQgcmVwb3J0IHNob3dpbmcgSSBoYXZlIG5vIGV2aWN0aW9ucyBvciBicm9rZW4gbGVhc2VzIGlzIG1vcmUgaW1wb3J0YW50IHRoYW4gd2hhdCBJIHNwZW5kIG15IG1vbmV5IG9uLiAKU28gd2hhdCB5b3UgZ2V0IGlzIGEgYmlnIGV4Y2F2YXRpb24sIG9yIGEgYmlnIGhvbGUgaW4gdGhpcyBjYXNlLCIgU2hlYSBzYWlkLi4gClNwZWxscy4gV2hpbGUgaG9sZGluZyB0aGUgc3RhZmYsIHlvdSBjYW4gdXNlIGFuIGFjdGlvbiB0byBleHBlbmQgc29tZSBvZiBpdHMgY2hhcmdlcyB0byBjYXN0IG9uZSBvZiB0aGUgZm9sbG93aW5nIHNwZWxscyBmcm9tIGl0LCB1c2luZyB5b3VyIHNwZWxsIHNhdmUgREMgYW5kIHNwZWxsY2FzdGluZyBhYmlsaXR5OiBjb25qdXJlIGNlbGVzdGlhbCAoOCBjaGFyZ2VzKSwgZGlzcGVsIG1hZ2ljICgzIGNoYXJnZXMpLCBkYXduICg1IGNoYXJnZXMpLCBhaWQgKDIgY2hhcmdlcyksIHN0YWdnZXJpbmcgc21pdGUgKDQgY2hhcmdlcyksIGZpbmQgc3RlZWQgKDIgY2hhcmdlcyksIGtub2NrICgyIGNoYXJnZXMpLCB0ZW1wbGUgb2YgdGhlIGdvZHMgKDcgY2hhcmdlcyksIHByYXllciBvZiBoZWFsaW5nICgyIGNoYXJnZXMpLCBhdXJhIG9mIGxpZmUgKDQgY2hhcmdlcyksIHByaXZhdGUgc2FuY3R1bSAoNCBjaGFyZ2VzKSwgd2FsbCBvZiBzdG9uZSAoNSBjaGFyZ2VzKSwgb3IgcHJvdGVjdGlvbiBmcm9tIGVuZXJneSAoMyBjaGFyZ2VzKS4uIApLb3JkZW5icm9jayBzYWlkIHRoZSBsZWdpc2xhdHVyZSBoYXMgZXZlcnkgYWJpbGl0eSB0byBmaXggdGhpcyBwcm9ibGVtLCBhbmQgc2hlJ2QgYmVlbiB3b3JraW5nIHdpdGggbGVnaXNsYXRvcnMgbGlrZSBTZW4uIFJpY2sgSm9uZXMgb24gdGhpcyBpc3N1ZS4gTGFzdCB5ZWFyIEpvbmVzIGhhZCBpbnRyb2R1Y2VkIGEgYmlsbCBvbiB0aGUgdG9waWMsIHdoaWNoIHBhc3NlZCB0aGUgU2VuYXRlIGJ1dCBub3QgdGhlIEhvdXNlLiBIZSBzYWlkIGhlJ2QgYmUgd29ya2luZyB3aXRoIGNoYXJpdGllcyBhbmQgY29uc2lkZXJpbmcgb3RoZXIgbGVnaXNsYXRpb24gYmVjYXVzZSBpdCdzIHNvbWV0aGluZyBjb25zdGl0dWVudHMgY2FyZSBhYm91dC4KR2VybWluaGEgdQpUZXhhcyBIb2xkJ2VtIFBva2VyIFByYWN0aWNlIFRpcCAgMzogRm9sZCBpZiB5b3UgaGF2ZSBhIHBvb3IgaGFuZC4gUHJvZmVzc2lvbmFscyB1c3VhbGx5IGZvbGQgYW5kIGl0IGlzIG9uZSBvZiB0aGUgbW9zdCBjb21tb25seSBkb25lIG1vdmVzIGlmIHlvdSBvYnNlcnZlIGJpZyB0b3VybmFtZW50cy4gClRoaXMgcHJvY2VkdXJlIHByZXNlcnZlcyBub3JtYWwgZGlzYyBoZWlnaHQgYW5kIHBlcm1pdHMgcGFzc2l2ZSBkaWZmdXNpb24gYnV0IHByZXZlbnRzIGZsdWlkIGZsb3c7IHRoYXQgaXMsIHByZXNzdXJlIGRlcGVuZGVudCB0cmFuc2ZlciBvZiBmbHVpZCwgYW5kIGNyZWVwIGRlZm9ybWF0aW9uLkF0LCAzLCA1LCA4IG1vbnRocyBhZnRlciBmdXNpb24gdGhlIGRvZ3Mgd2VyZSBzYWNyaWZpY2VkLiAKNS4gRG9sbGFycyBmb3IgRHVzdCBEcm91Z2h0IFJlbGllZiBGdW5kcmFpc2VyIGluIExpc21vcmU6IERvbGxhcnMgRm9yIER1c3QgaXMgYSBkcm91Z2h0IHJlbGllZiBmdW5kcmFpc2VyIG9yZ2FuaXNlZCBieSB0aGUgTWFyeSBHIHRlYW0uIApUaGV5IGZvdW5kIGxldHRlcnMgSSB3cm90ZSB0byBoaW0gYXMgYSBjaGlsZCBhbmQgcGljdHVyZXMgb2YgbXkgc2libGluZ3MgYW5kIEkgYW5kIHNvbWVob3cgdGhleWZvdW5kIHVzIHRocm91Z2ggb3VyIGxvY2FsIFBEIGFuZCBjYW1lIHRvIG91ciBkb29yIHRvIGxldCB1cyBrbm93Li4gCldlIGFsbCBrbm93IHRoYXQgd2hhdCBtYWRlIHBva2VyIHZlcnkgcG9wdWxhciB0b2RheSB3YXMgdGhlIGludGVncmF0aW9uIG9mIG9ubGluZSBwb2tlciBhbmQgdGhlIHdvcmxkIHdpZGUgdG91cm5hbWVudHMgYmVpbmcgYnJvYWRjYXN0ZWQgb24gdGVsZXZpc2lvbi4gCk5ldmVyIHdhbnRlZCB0byBnZXQgdGhlbSBkb25lIGJlY2F1c2UgeW91IGVtYmFycmFzc2VkIG9mIHlvdXIgdG9lcywgc2FpZCBCcm9va3MsIHdobyBvbmx5IGVtYnJhY2VkIGdldHRpbmcgcGVkaWN1cmVzIHR3byB5ZWFycyBhZ28gd2l0aCBoaXMgd2lmZS4gClRoaXMgZm9sbG93cyB0aGUgZGlyZWN0aW9uIG9mIGZsb3cgaW4gdGhlIGRpZ2VzdGl2ZSBzeXN0ZW0sIHNvIHRoYXQgeW91IGFyZSB3b3JraW5nIHdpdGggdGhlIGJhYnkncyBvcmdhbnMgICBub3QgYWdhaW5zdCB0aGVtLiAKR292ZXJubWVudCB3ZWxmYXJlLCBpbiB0aGUgZm9ybSBvZiBUQVJQLCBpcyBzdWNoIGFuIG9idmlvdXMgY29uIGdhbWUgdGhhdCBldmVuIG1pZGRsZSBvZiAgdGhlIHJvYWQsIHBybyBidXNpbmVzcyBzb3J0cyBhcmUgZ2V0dGluZyBhbmdyeS4gQWxsLCB0aGUgYmFua3MgZ290IGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gdmVyeSBsb3cgaW50ZXJlc3QgbG9hbnMgdGhhdCB0aGV5IHRoZW4gdHVybmVkIGFyb3VuZCBhbmQgbGVudCBiYWNrIHRvIHRheCBwYXllcnMgYXQgaGlnaCBpbnRlcmVzdCByYXRlcyAgb24gY3JlZGl0IGNhcmRzLCBob21lIGxvYW5zLCBldGMuIApOYWNodGFyYSB1Ckxpa2UgSSBzYWlkIGJlZm9yZSwgeW91ciBnb3Zlcm5tZW50IGlzIGlzc3VpbmcgdGhlc2UgcGFzc3BvcnRzIGJlY2F1c2UgaXQgd2FudHMgdG8gcmVwb3B1bGF0ZSBBcm1lbmlhIGFuZCB3YW50cyB3ZXN0ZXJuIGFybWVuaWFucyB0byBpbnZlc3Qgc2luY2UgeW91IGd1eXMgaGF2ZSBubyBtb25leSBhbmQgd2FzdGVkIG1vc3Qgb2YgdGhlIGNoYXJpdHkgZnVuZHMgdG8gY29ycnVwdGlvbiBsaWtlIHlvdXIgUnVzc2lhbiBmcmllbmRzLiAKTXkgaHVzYmFuZCB3b3JrcywgYnV0IGJ5IGNob2ljZSBhbmQgbm90IG91dCBvZiBuZWNlc3NpdHkuIEluIHRoZSBwYXN0LCBoZSBoYXMgdGFrZW4gYSBtaW5pIHJldGlyZW1lbnQgdG8gc3BlbmQgdGltZSBwdXJzdWluZyBoaXMgcGFzc2lvbnMuIApWZXJ5IHNvcnJ5IHRvIGhlYXIgYWJvdXQgdGhlIHBvb3IgZXhwZXJpZW5jZSB5b3UgaGFkIHRyeWluZyB0byBnZXQgaW4gdG91Y2ggd2l0aCBvdXIgU291dGggQ29tbW9uIHN0b3JlLiAKV2hlbiBpdCBjb21lcyB0byB0aGUgb3ZlcmFsbCBwb2xpdGljYWwgYXRtb3NwaGVyZSwgSSB3b3VsZCBjZXJ0YWlubHkgbGlrZSB0byByZSBzdGF0ZSB0aGF0IEkgdGhpbmsgdGhpcyBpcyBnb2luZyB0byBzZXQgYSBwcmVjZWRlbnQsIGJ1dCBpdCBuaWNlIHRvIGtub3cgdGhhdCwgYXQgbGVhc3QgcHJvY2VkdXJhbGx5LCBpdCB3b24gU2FkbHksIG15IGxhcmdlciB0aG91Z2h0IGlzIHRoYXQgdGhlIHNvY2lhbC9wb2xpdGljYWwgcHJlY2VkZW50IHNldCBoZXJlIChzZXBlcmF0ZSB0byB0aGUgbGVnYWwgcHJlY2VkZW50KSBpcyBnb2luZyB0byBiZSB0aGUgb25lIHRoYXQgZ29pbmcgdG8gYmUuIGZvY3VzZWQgdXBvbi4gYW5kIHBvdGVudGlhbGx5IHJld2FyZGVkIGJ5IHRoZSB2b3RpbmcgcHVibGljLiBidXQgSSBnbGFkIHRoYXQsIHRvIHRoZSBwZW9wbGUgaW52b2x2ZWQgd2l0aGluIHRoZSBsZWdhbCBmaWVsZCBpbiB0aGUgVVNBLCBpdCBub3QgZ29pbmcgdG8gaG9sZCBtdWNoIHdlaWdodC4gSSB3b3VsZCBjZXJ0YWlubHkgcHJlZmVyIHRoYXQgdGhpcyBwYXJ0aWN1bGFyIGRlY2lzaW9uIHRvIG5vdCBob2xkIG11Y2ggd2VpZ2h0LCBmb3Igd2hhdGV2ZXIgdGhhdCB3b3J0aC4gbXkgb3BpbmlvbiBpcyB0aGF0IGl0IGFwcGVhcnMgdXR0ZXJseSBpbmNvbmdydWVudCBhbmQgZnVuZGFtZW50YWxseSB1bmp1c3QuIEJldHRlciB0aGF0IGF0IGxlYXN0IHNvbWUgcG9ydGlvbiBvZiBzb2NpZXR5IGNvbnNpZGVycyBpdC4gbm90IGFuIGV4ZW1wbGFyLgpTaW5jZSB0aGVuLCBtYW55IHN0dWRpZXMgaGF2ZSBpbGx1c3RyYXRlZCBob3cgdG91Y2ggYW5kIG1hc3NhZ2UgY2FuIGFzc2lzdCBpbmZhbnRzLCBlc3BlY2lhbGx5IGJhYmllcyBib3JuIHByZW1hdHVyZWx5LCB0byBzdXJ2aXZlLCBnYWluIHdlaWdodCBhbmQgdGhyaXZlLiAKV2l0aGluIGEgY291cGxlIG9mIGhvdXJzIG9mIHB1Ymxpc2hpbmcgYW4gYXJ0aWNsZSBpbiB0aGUgRlQgYW5ub3VuY2luZyB0aGF0IEkgd2FzIHJldHJhaW5pbmcgYXMgYSBtYXRocyB0ZWFjaGVyIGFuZCB1cmdpbmcgYm9yZWQgYmFua2VycyB0byBjb21lIHdpdGggbWUsIDEwMCBhcHBsaWNhdGlvbnMgaGFkIHBvdXJlZCBpbi4gCkJvdWdodCBhbGwgdGhlIGFsY29ob2wgZnJvbSBhIGZyaWVuZCB3aG8gb3duZWQgYSBiYXIgaW4gQnVzYW4gYW5kIHNoaXBwZWQgaXQgdXAgb24gdGhlIGJ1cy4gCkRpbGxvbiBtYWRlIHRoZSBwb2ludCBsYXN0IHllYXIgdGhhdCBEYW4gbGVmdCB0aGUgZG9vciBvcGVuIHRvIG9uZSB1cCBoaW0gYnkgY29taW5nIGluIGFzIHJ1bm5lciB1cCBpbiB0aGUgV1NPUCBNYWluIEV2ZW50LCBhbmQgaGUgc3RpbGwgdGhpbmtzIGFib3V0IGJlaW5nIHRoZSBmaXJzdCBvZiB0aGUgYnJvdGhlcnMgdG8gd2luIGEgYnJhY2VsZXQuCkEgaW5mbHVlbnphIHBhbmRlbWljIGlzIHZlcnkgcmVhbCBhbmQgZXhwZWN0ZWQgdG8gaGFwcGVuIGluIHRoZSBuZXh0IDUwIHllYXJzLiBFeHBlcnRzIGFyZSBldmVuIHN1cnByaXNlZCB0aGF0IHRoZXJlIHdhc24gb25lIGFscmVhZHksIGFzIHdlIGFyZSBvdmVyZHVlICgxOTE4IDE5NTcgMTk2OCkuIAo=|<---