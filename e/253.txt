<!DOCTYPE HTML>
<html lang="en">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="html not-front not-logged-in no-sidebars page-node page-node- page-node-116 node-type-peoplestaffscientists">
  <div class="header">
   <div class="row">
    <div class="site-logo">
     <h1>
      <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
     </h1>
    </div>
    <nav id="nav-wrap" role="navigation">
     <ul class="menu sf-menu sf-main-menu sf-horizontal sf-style-none sf-total-items-7 sf-parent-items-4 sf-single-items-3" id="superfish-1">
      <li class="first odd sf-item-1 sf-depth-1 sf-no-children" id="menu-2268-1">
       [link]
       
      </li>
      <li class="middle even sf-item-2 sf-depth-1 sf-total-children-3 sf-parent-children-2 sf-single-children-1 menuparent" id="menu-2357-1">
       [link]
       
       <ul>
        <li class="first odd sf-item-1 sf-depth-2 sf-total-children-5 sf-parent-children-0 sf-single-children-5 menuparent" id="menu-377-1">
         <a class="sf-depth-2 menuparent" href="/people">
          People
         </a>
         <ul>
          <li class="first odd sf-item-1 sf-depth-3 sf-no-children" id="menu-2365-1">
           <a class="sf-depth-3" href="/people" title="">
            Staff Scientists
           </a>
          </li>
          <li class="middle even sf-item-2 sf-depth-3 sf-no-children" id="menu-2366-1">
           <a class="sf-depth-3" href="/people/techadmin" title="">
            Technical &amp; Admin
           </a>
          </li>
          <li class="middle odd sf-item-3 sf-depth-3 sf-no-children" id="menu-2367-1">
           <a class="sf-depth-3" href="/people/postdoctoral" title="">
            Postdoctoral
           </a>
          </li>
          <li class="middle even sf-item-4 sf-depth-3 sf-no-children" id="menu-2381-1">
           [ahref]
           
          </li>
          <li class="last odd sf-item-5 sf-depth-3 sf-no-children" id="menu-2382-1">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="middle even sf-item-2 sf-depth-2 sf-total-children-3 sf-parent-children-0 sf-single-children-3 menuparent" id="menu-371-1">
         <a class="sf-depth-2 menuparent" href="/research">
          Research
         </a>
         <ul>
          <li class="first odd sf-item-1 sf-depth-3 sf-no-children" id="menu-2360-1">
           [link]
           
          </li>
          <li class="middle even sf-item-2 sf-depth-3 sf-no-children" id="menu-2361-1">
           [ahref]
           
          </li>
          <li class="last odd sf-item-3 sf-depth-3 sf-no-children" id="menu-2362-1">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="last odd sf-item-3 sf-depth-2 sf-no-children" id="menu-2358-1">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="middle odd sf-item-3 sf-depth-1 sf-total-children-2 sf-parent-children-0 sf-single-children-2 menuparent" id="menu-559-1">
       [ahref]
       
       <ul>
        <li class="first odd sf-item-1 sf-depth-2 sf-no-children" id="menu-2363-1">
         [ahref]
         
        </li>
        <li class="last even sf-item-2 sf-depth-2 sf-no-children" id="menu-2364-1">
         <a class="sf-depth-2" href="/newsletter-archive" title="">
          Newsletter Archive
         </a>
        </li>
       </ul>
      </li>
      <li class="middle even sf-item-4 sf-depth-1 sf-total-children-6 sf-parent-children-0 sf-single-children-6 menuparent" id="menu-218-1">
       [ahref]
       
       <ul>
        <li class="first odd sf-item-1 sf-depth-2 sf-no-children" id="menu-2025-1">
         <a class="sf-depth-2" href="/Carnegie">
          Library
         </a>
        </li>
        <li class="middle even sf-item-2 sf-depth-2 sf-no-children" id="menu-2454-1">
         <a class="sf-depth-2" href="/user/login?destination=node/4192">
          myCarnegie
         </a>
        </li>
        <li class="middle odd sf-item-3 sf-depth-2 sf-no-children" id="menu-381-1">
         [ahref]
         
        </li>
        <li class="middle even sf-item-4 sf-depth-2 sf-no-children" id="menu-592-1">
         <a class="sf-depth-2" href="/events">
          Events
         </a>
        </li>
        <li class="middle odd sf-item-5 sf-depth-2 sf-no-children" id="menu-2119-1">
         <a class="sf-depth-2" href="/bDupeb">
          Subscribe
         </a>
        </li>
        <li class="last even sf-item-6 sf-depth-2 sf-no-children" id="menu-2368-1">
         [link]
         
        </li>
       </ul>
      </li>
      <li class="middle odd sf-item-5 sf-depth-1 sf-no-children" id="menu-2291-1">
       [search]
       
      </li>
      <li class="middle even sf-item-6 sf-depth-1 sf-total-children-1 sf-parent-children-0 sf-single-children-1 menuparent" id="menu-380-1">
       <a class="sf-depth-1 menuparent" href="/contact">
        Contact
       </a>
       <ul>
        <li class="firstandlast odd sf-item-1 sf-depth-2 sf-no-children" id="menu-2359-1">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="last odd sf-item-7 sf-depth-1 sf-no-children" id="menu-2370-1">
       <a class="donate sf-depth-1" href="/donate?department=dtm" target="_blank">
        Donate
       </a>
      </li>
     </ul>
    </nav>
    <form accept-charset="UTF-8" action="/people/alan-p-boss" id="search-block-form" method="post">
     <div>
      <div class="form-item form-type-textfield form-item-search-block-form">
       <label class="element-invisible" for="edit-search-block-form--2">
        Search
       </label>
      </div>
      <div class="element-invisible form-actions form-wrapper" id="edit-actions">
      </div>
     </div>
    </form>
   </div>
  </div>
  <div class="contentContainer">
   <div class="mainContent">
    <div class="container content">
     <div class="row">
      <div class="twelvecol">
       <h2 class="interiorHeading">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
      </div>
     </div>
     <div class="tabs">
     </div>
     <div class="row">
      <div class="fourcol generalPadding peopleDetails">
       <div class="peopleImage">
       </div>
      </div>
      <div class="fourcol generalPadding peopleDetails">
       <h3 class="peopleHeading">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <p>
        Theoretical astrophysics; stellar and planetary system formation; extrasolar planets formation and detection
       </p>
       <h3 class="peopleHeading">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <p>
        B.S., Physics, University of South Florida, 1973 M.A., Physics, University of California, Santa Barbara, 1975 Ph.D., Physics, University of California, Santa Barbara, 1979
       </p>
      </div>
      <div class="fourcol generalPadding peopleDetails last">
       <h3 class="peopleHeading">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <ul class="peopleInfo">
        <li>
         <i class="icon-phone-sign icon-large">
         </i>
         (202) 478-8858 | fax: (202) 478-8821
        </li>
        <li>
         <i class="icon-envelope-alt icon-large">
         </i>
         aboss at carnegiescience.edu
        </li>
        <li>
         <i class="icon-map-marker icon-large">
         </i>
         Department of Terrestrial Magnetism
         <br>
          <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link][ahref]
         </br>
         <span class="address">
          <li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
        </li>
        <li>
         <i class="icon-info-sign icon-large">
         </i>
         [ahref]
         
        </li>
        <li>
         <i class="icon-paper-clip icon-large">
         </i>
         <a href="/users/boss/articles.html">
          Publications
         </a>
        </li>
        <li>
         <i class="icon-share-alt icon-large">
         </i>
         <a href="/users/boss/">
          Personal Website
         </a>
        </li>
       </ul>
      </div>
     </div>
     <div class="twelvecol divider events">
     </div>
     <div class="row">
      <div class="twelvecol">
       <h2 class="interiorHeading">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
      </div>
     </div>
     <div class="row">
      <div class="fourcol generalPadding peopleside">
       <figure>
        <div class="video-container">
         <iframe allowfullscreen="" frameborder="0" height="315" src="//www.youtube.com/embed/w9ThLQbCmyU" width="420">
         </iframe>
        </div>
        <figcaption class="sideVideo">
         Meet DTM Astrophysicist, Alan Boss!
        </figcaption>
       </figure>
       <figure>
        <figcaption class="sideVideo">
         This image shows the equatorial density - after 373 years - for a protoplanetary disk with a mass 10% that of the Sun. The formation of a multiple-Jupiter mass clump can be seen as a tiny white dot at 12 o'clock (not to scale). The region has a radius of 20 AU. The surface density in this relatively low-mass disk is comparable to that required for gas giant planet formation by the core accretion mechanism.
        </figcaption>
       </figure>
      </div>
      <div class="eightcol last generalPadding">
       <p>
        Alan Boss' theoretical research includes the formation of binary and multiple stars, triggered collapse of the presolar cloud, mixing and transport processes in protoplanetary disks, including thermal processing of particles during their journeys, and the formation of gas giant and ice giant protoplanets. His observational works centers on the Carnegie Astrometric Planet Search project, which has been underway for the last decade at Carnegie's Las Campanas Observatory in Chile.[link]<li>[search]</li>[link][search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[search]</li>[ahref][link]
       </p>
       <p>
        While fragmentation is universally recognized as the dominant formation mechanism for binary and multiple stars, there are still major questions remaining to be answered. The most important of these is the role of magnetic fields. Along with Sandy Keiser, Boss has been studying the collapse of individual molecular cloud cores with a MHD code, Enzo, in order to constrain the chances for binary and multiple star system formation. Enzo is an adaptive mesh refinement (AMR) code, giving it the flexibility needed to follow binary fragments. These calculations will also help to define which cloud cores are likely to collapse to form single stars, such as our Sun.
       </p>
       <p>
        A supernova shock front has been considered the most attractive mechanism for introducing short-lived radioisotopes (SLRIs) into the solar nebula. Along with Sandy Keiser, Boss has been using the FLASH code to study the problem of simultaneous triggering and injection. FLASH is also an AMR code, with a special strength in following shock waves. Boss has shown that FLASH 2D and 3D models support the supernova trigger hypothesis, over, e.g., the AGB star hypothesis for the origin of SLRIs, because thin supernova shocks are better at injecting SLRIs than the thick planetary nebula winds produced by AGB stars. Boss is currently running 3D models with FLASH, including the effects of target cloud rotation, to learn to what extent injection occurs into a protoplanetary disk formed as a result of triggered collapse.[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[ahref]<li>[search]</li>[ahref][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
       </p>
       <p>
        Boss also studies the mixing and transport of solids in protoplanetary disks of the type necessary in order to form gas giant planets similar to Jupiter, or to undergo FU Orionis outbursts, i.e., in marginally gravitationally unstable (MGU) disks. In such disks, solids of cm-size and smaller should be transported along with the gas through gravitational torques associated with the growing and chaotically evolving spiral arms and clumps. Boss' 3D models show how how crystalline silicates, observed in the outskirts of protoplanetary disks and in long-period comets, could have been formed by thermal annealing closer to their protostar and then transported back outward to cooler regions of the disk. Boss has joined with Conel Alexander and Morris Podolak to study the detailed thermal evolution of finite-size particles in MGU disks.
        <span>
         Besides studying rim formation, they intend to focus on the transport of ice mantles from the outer nebula to the inner nebula, with implications for the transport of water to the habitable zone of the solar nebula.[ahref][link]<li>[search]</li><li>[link]</li><li>[link]</li><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
        </span>
       </p>
       <p>
        While the core accretion mechanism is still considered by most to be the leading explanation for the formation of our solar system's gas giant planets, for the last decade Boss has been working to learn whether another mechanism, disk instability, could also form gas giant planets. Boss intends to use either Enzo or FLASH to begin a new set of disk instability calculations with an AMR code, with the final choice to be decided by the options available for handling radiative transfer in these codes.
       </p>
       <p>
        Along with Alycia Weinberger and Ian Thompson, Boss has been running the Carnegie Astrometric Planet Search (CAPS) program, which searchs for extrasolar planets by the astrometric method, where the planet's presence is detected indirectly through the wobble of the host star around the center of mass of the system. With over eight years of CAPSCam data, they are beginning to see likely true astrometric wobbles beginning to appear. The CAPSCam planet search effort is on the verge of yielding a harvest of astrometrically discovered planets, as well as accurate parallactic distances to many young stars and M dwarfs.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][link]<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]
       </p>
      </div>
     </div>
     <div class="twelvecol divider events">
     </div>
     <div class="row homerow">
      <div class="twelvecol Pagination">
       <a class="buttonPagination" href="/">
        Home
       </a>
       <a class="buttonPagination" href="/people">
        People Directory
       </a>
      </div>
     </div>
    </div>
   </div>
  </div>
  <footer class="clearfix">
   <div class="container">
    <div class="row footertop">
     <div class="fourcol">
     </div>
     <div class="fourcol">
      <div id="socialmedia">
       <ul>
        <li>
         <a href="/pg/carnegieplanets">
          <i class="fa fa-facebook-f">
          </i>
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="fourcol clearfix last">
      <a href="m">
       <div class="varvestudios">
       </div>
      </a>
     </div>
    </div>
    <div class="row footerbottom">
     <div class="twelvecol">
      <p class="copyright">
       Copyright © 2018 Department of Terrestrial Magnetism.
       [ahref]
       
      </p>
     </div>
    </div>
   </div>
  </footer>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0256
  </b>
 </body>
</html>
