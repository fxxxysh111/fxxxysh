<!DOCTYPE doctype html>
<html class="no-js" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="ie=edge" http-equiv="x-ua-compatible"/>
  <meta content="width=1140" name="viewport"/>
  <meta content="뉴시안" name="apple-mobile-web-app-title">
   <meta content="스마트 패드락... 자물쇠와 스마트폰의 특별한 만남" name="title">
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
     <meta content="Device > IoT 스마트 가전" name="Classification"/>
     <meta content="뉴시안" name="Copyright"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="http://www.newsian.co.kr/news/thumbnail/201810/33010_9715_2927_v150.jpg" property="og:image"/>
     <meta content="article" property="og:type"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="박성호 기자" property="og:article:author"/>
     <meta content="summary" name="twitter:card"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
     <meta content="http://www.newsian.co.kr/news/thumbnail/201810/33010_9715_2927_v150.jpg" name="twitter:image"/>
     <meta content="http://www.newsian.co.kr/news/articleView.html?idxno=33010" name="twitter:site"/>
     <meta content="박성호 기자" name="twitter:creator"/>
     <meta content="33010" property="dable:item_id"/>
     <meta content="박성호 기자" property="dable:author"/>
     <meta content="Device" property="article:section"/>
     <meta content="IoT 스마트 가전" property="article:section1"/>
     <meta content="2018-10-25T07:50:00+09:00" property="article:published_time"/>
     <title>
      [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
     </title>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <div class="off-canvas-wrapper">
   <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
    <div class="off-canvas user-canvas position-left" data-off-canvas="" id="offCanvas">
     <button aria-label="Close menu" class="close-button" data-close="" type="button">
      <span aria-hidden="true">
       ×<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
      </span>
     </button>
     <nav class="user-canvas-navs">
      <ul class="vertical menu" data-accordion-menu="" data-multi-open="false">
       <li>
        <a href="/news/articleList.html?view_type=sm">
         전체기사
        </a>
       </li>
       <li>
        [link]
        
        <ul class="menu vertical nested">
         <li>
          <a href="/news/articleList.html?sc_section_code=S1N11&amp;view_type=sm" target="_top">
           전체
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N6&amp;view_type=sm" target="_top">
           경제
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N7&amp;view_type=sm" target="_top">
           정치
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N8&amp;view_type=sm" target="_top">
           사회
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N29&amp;view_type=sm" target="_top">
           뉴시안 포토
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N30&amp;view_type=sm" target="_top">
           애드버토리얼
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [link]
        
        <ul class="menu vertical nested">
         <li>
          [link]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N26&amp;view_type=sm" target="_top">
           스마트폰
          </a>
         </li>
         <li>
          <h1>
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li>
        [link]
        
        <ul class="menu vertical nested">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li>
        [link]
        
        <ul class="menu vertical nested">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N23&amp;view_type=sm" target="_top">
           기업과 기술
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N19&amp;view_type=sm" target="_top">
         스페셜칼럼
        </a>
        <ul class="menu vertical nested">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N37&amp;view_type=sm" target="_top">
           노은지의 날씨와 생활
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N39&amp;view_type=sm" target="_top">
           최영일의 경제 전쟁
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N40&amp;view_type=sm" target="_top">
           백성문의 사건사고 분석
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N42&amp;view_type=sm" target="_top">
           김지윤의 글로벌 카페
          </a>
         </li>
        </ul>
       </li>
       <li>
        [ahref]
        
        <ul class="menu vertical nested">
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N19&amp;view_type=sm" target="_top">
           중국
          </a>
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N20&amp;view_type=sm" target="_top">
           일본
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        <a href="/news/articleList.html?sc_section_code=S1N3&amp;view_type=sm" target="_top">
         오피니언
        </a>
        <ul class="menu vertical nested">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/articleList.html?sc_sub_section_code=S2N11&amp;view_type=sm" target="_top">
           데스크칼럼
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
        <ul class="menu vertical nested">
         <li>
          <a href="/news/articleList.html?sc_section_code=S1N13&amp;view_type=sm" target="_top">
           전체
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </li>
      </ul>
     </nav>
    </div>
    <div class="off-canvas-content" data-off-canvas-content="">
     <div id="user-wrap">
      <header class="posi-re float-center" id="user-header">
       <div id="header-wrapper">
        <header id="nav-header">
         <div class="float-center width-1140" id="nav-header-wrapper">
          <div class="dis-table">
           <div class="dis-table-cell user-logo">
            [search]
            
           </div>
           <div class="dis-table-cell user-banner">
           </div>
           <div class="dis-table-cell user-banner">
           </div>
          </div>
          <ul class="user-updatedbox">
           <li class="updated">
            UPDATED. 2018-12-12 19:42 (수)
           </li>
          </ul>
          <ul class="user-logbox">
           <li class="sns">
            <a href="/뉴시안-169685026912956/" target="_blank">
            </a>
            <a href="/newsian1" target="_blank">
            </a>
            [ahref]
            
            [ahref]
            
            <a href="">
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </header>
        <nav id="user-nav">
         <div class="float-center width-1140" id="user-nav-wrapper">
          <ul class="mega-menu" id="mega-menu">
           <li class="megaline">
           </li>
           <li class="megaline">
            [link]
            
            <ul class="sub-menu-vertical">
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
             <li class="sub">
              [ahref]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N33&amp;view_type=sm" target="_top">
               IoT 스마트 가전
              </a>
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N34&amp;view_type=sm" target="_top">
               PC 주변기기
              </a>
             </li>
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_section_code=S1N10&amp;view_type=sm" target="_top">
             Tech
            </a>
            <ul class="sub-menu-vertical">
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N22&amp;view_type=sm" target="_top">
               4차산업혁명
              </a>
             </li>
             <li class="sub">
              [ahref]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N24&amp;view_type=sm" target="_top">
               스마트컬쳐
              </a>
             </li>
            </ul>
           </li>
           <li class="megaline">
            [link]
            
            <ul class="sub-menu-vertical">
            </ul>
           </li>
           <li class="megaline">
            <a href="/news/articleList.html?sc_multi_code=S641&amp;view_type=sm" target="_top">
             Opinion
            </a>
            <ul class="sub-menu-vertical">
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              [ahref]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N37&amp;view_type=sm" target="_top">
               노은지의 날씨와 생활
              </a>
             </li>
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_section_code=S1N14&amp;view_type=sm" target="_top">
               글로벌칼럼
              </a>
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N11&amp;view_type=sm" target="_top">
               데스크칼럼
              </a>
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N12&amp;view_type=sm" target="_top">
               기자수첩
              </a>
             </li>
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
             <li class="sub">
              [ahref]
              
             </li>
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N9&amp;view_type=sm" target="_top">
               국제
              </a>
             </li>
             <li class="sub">
              [ahref]
              
             </li>
             <li class="sub">
              <a href="/news/articleList.html?sc_sub_section_code=S2N29&amp;view_type=sm" target="_top">
               뉴시안 포토
              </a>
             </li>
             <li class="sub">
              [link]
              
             </li>
             <li class="sub">
              [link]
              
             </li>
            </ul>
           </li>
           <li class="megaline">
            [ahref]
            
            <ul class="sub-menu-vertical">
            </ul>
           </li>
          </ul>
          <fieldset class="user-search">
           <form action="/news/articleList.html" method="post" name="head-search">
            <label class="show-for-sr" for="search">
             기사검색
            </label>
            <button onclick="if(this.form.sc_word.value != ''){this.form.submit();}else{alert('검색어를 입력해주세요');this.form.sc_word.focus();return false;}" title="기사검색" type="button">
             <i class="s7-search">
             </i>
             <span class="show-for-sr">
              검색[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
             </span>
            </button>
           </form>
          </fieldset>
         </div>
        </nav>
       </div>
      </header>
      <section class="posi-re text-left auto-pady-25 float-center width-1140" id="user-container">
       <div class="float-center width-1140" id="layer-popups">
       </div>
       <div class="posi-re float-center width-1140">
       </div>
       <div class="float-center max-width-1140">
        <div class="clearfix">
        </div>
        <div class="dis-none show-for-large" id="article-header-title">
         <button class="aht-btn prev" onclick="javascript:articleHeader.move(
				'prev',
				'embargo_date',
				'1540421400_33010',
				'S1N17',
				'S2N33',
				'');" title="이전기사" type="button">
          <i class="fa fa-angle-left fa-fw">
          </i>
          <span class="sr-only">
           이전[search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[search]</li>[link][link]<li>[link]</li>
          </span>
         </button>
         <button class="aht-btn next" onclick="javascript:articleHeader.move(
				'next',
				'embargo_date',
				'1540421400_33010',
				'S1N17',
				'S2N33',
				'');" title="다음기사" type="button">
          <i class="fa fa-angle-right fa-fw">
          </i>
          <span class="sr-only">
           다음
          </span>
         </button>
         <div class="aht-wrapper width-1140">
          <div class="aht-columns aht-logo">
           [ahref]
           
          </div>
          <div class="aht-columns aht-title">
           <div class="aht-title-view">
            스마트 패드락... 자물쇠와 스마트폰의 특별한 만남
           </div>
          </div>
          <div class="aht-columns aht-options">
           <ul class="info-options no-bullet">
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-open="article-sns" data-tooltip="" title="기사공유하기" type="button">
              <i class="icon-share">
              </i>
              <span class="show-for-sr">
               기사공유하기
              </span>
             </button>
            </li>
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articlePrint('33010')" title="프린트" type="button">
              <i class="icon-printer">
              </i>
              <span class="show-for-sr">
               프린트[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
              </span>
             </button>
            </li>
            <li>
             <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articleMail('33010')" title="메일보내기" type="button">
              <i class="icon-email-b">
              </i>
              <span class="show-for-sr">
               메일보내기
              </span>
             </button>
            </li>
            <li class="fonts-option">
             <button class="fonts-btn options-btn" type="button">
              <i class="icon-plus">
              </i>
              <span class="show-for-sr">
               글씨키우기<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[ahref]</li><li>[link]</li>[search]
              </span>
             </button>
             <ul class="fonts-option-panel no-bullet">
              <li>
               <label for="font-size15_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size16_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size17_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size18_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size19_1">
                가나다라마바사
               </label>
              </li>
              <li>
               <label for="font-size20_1">
                가나다라마바사
               </label>
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </div>
        </div>
        <header class="article-view-header">
         <nav class="article-head-nav auto-marbtm-10">
          [ahref]
          
          <i class="fa fa-angle-right fa-fw">
          </i>
          <a href="/news/articleList.html?sc_section_code=S1N17">
           Device
          </a>
          <i class="fa fa-angle-right fa-fw">
          </i>
          [link]
          
         </nav>
         <header class="article-header-wrap">
          <div class="article-head-title">
           스마트 패드락... 자물쇠와 스마트폰의 특별한 만남
          </div>
         </header>
         <section class="article-head-info">
          <div class="info-text">
           <ul class="no-bullet auto-marbtm-0 line-height-6">
            <li>
             <i class="fa fa-user-o fa-fw">
             </i>
             박성호 기자
            </li>
            <li>
             <i class="fa fa-clock-o fa-fw">
             </i>
             승인 2018.10.25 07:50
            </li>
            <li>
             <i class="fa fa-commenting-o fa-fw">
             </i>
             댓글 
						0
            </li>
           </ul>
          </div>
          <ul class="info-options no-bullet">
           <li>
            <button class="options-btn has-tip" data-disable-hover="false" data-open="article-sns" data-tooltip="" title="기사공유하기" type="button">
             <i class="icon-share">
             </i>
             <span class="show-for-sr">
              기사공유하기
             </span>
            </button>
           </li>
           <li>
            <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articlePrint('33010')" title="프린트" type="button">
             <i class="icon-printer">
             </i>
             <span class="show-for-sr">
              프린트
             </span>
            </button>
           </li>
           <li>
            <button class="options-btn has-tip" data-disable-hover="false" data-tooltip="" onclick="articleMail('33010')" title="메일보내기" type="button">
             <i class="icon-email-b">
             </i>
             <span class="show-for-sr">
              메일보내기
             </span>
            </button>
           </li>
           <li class="fonts-option">
            <button class="fonts-btn options-btn" type="button">
             <i class="icon-plus">
             </i>
             <span class="show-for-sr">
              글씨키우기<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li><li>[search]</li>[search]<li>[ahref]</li>
             </span>
            </button>
            <ul class="fonts-option-panel no-bullet">
             <li>
              <label for="font-size15_2">
               가나다라마바사
              </label>
             </li>
             <li>
              <label for="font-size16_2">
               가나다라마바사
              </label>
             </li>
             <li>
              <label for="font-size17_2">
               가나다라마바사
              </label>
             </li>
             <li>
              <label for="font-size18_2">
               가나다라마바사
              </label>
             </li>
             <li>
              <label for="font-size19_2">
               가나다라마바사
              </label>
             </li>
             <li>
              <label for="font-size20_2">
               가나다라마바사
              </label>
             </li>
            </ul>
           </li>
          </ul>
          <div class="reveal gray" data-reveal="" id="article-sns">
           <header class="reveal-header">
            <div class="reveal-title">
             이 기사를 공유합니다
            </div>
           </header>
           <section class="reveal-container">
            <div class="article-sns-group">
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="facebook" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons facebook">
               <i class="icon-facebook">
               </i>
              </div>
              페이스북
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="twitter" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons twitter">
               <i class="icon-twitter">
               </i>
              </div>
              트위터
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="story" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons story">
               <i class="icon-story">
               </i>
              </div>
              카카오스토리
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="google" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons google">
               <i class="icon-google">
               </i>
              </div>
              구글+
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="band" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons band">
               <i class="icon-band">
               </i>
              </div>
              네이버밴드
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="blog" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons blog">
               <i class="icon-blog">
               </i>
              </div>
              네이버블로그
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="pholar" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons pholar">
               <i class="icon-pholar">
               </i>
              </div>
              네이버폴라
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="pinterest" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" type="button">
              <div class="sns-btn-icons pinterest">
               <i class="icon-pinterest">
               </i>
              </div>
              핀터레스트
             </button>
             <button class="sns-btns" data-desc="%5B%EB%89%B4%EC%8B%9C%EC%95%88%3D%EB%B0%95%EC%84%B1%ED%98%B8%20%EA%B8%B0%EC%9E%90%5D%20%EB%8B%A4%EC%96%91%ED%95%9C%20%EC%9A%94%EA%B5%AC%EB%A5%BC%20%EC%88%98%EC%9A%A9%ED%95%9C%20%EC%83%88%EB%A1%9C%EC%9A%B4%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%9E%90%EB%AC%BC%EC%87%A0%20%26%2339%3B%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%28Smart%20Padlock%29%EC%9D%B4%20%EB%84%A4%ED%8B%B0%EC%A6%8C%EC%9D%98%20%EB%A7%88%EC%9D%8C%EC%9D%84%20%EC%82%AC%EB%A1%9C%EC%9E%A1%EC%95%98%EB%8B%A4.%EC%9D%B4%EA%B8%80%EB%A3%A8%ED%99%88%28Igloohome%29%EC%9D%B4%20%EB%A7%8C%EB%93%A0%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD%EC%9D%80%20%EA%B2%89%20%EB%AA%A8%EC%8A%B5%EC%9D%80%20%EA%B3%A0%EA%B8%89%EC%8A%A4%EB%9F%AC%EC%9A%B4%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EB%B3%B4%EC%9D%B8%EB%8B%A4.%20%ED%95%98%EC%A7%80%EB%A7%8C%20%EC%9D%B4%20%EC%A0%9C%ED%92%88%EC%9D%80%20%EB%B8%94%EB%A3%A8%ED%88%AC%EC%8A%A4%EB%A5%BC%20%ED%86%B5%ED%95%B4%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%EC%A0%84%EC%9A%A9%EC%95%B1%EA%B3%BC%20%EC%97%B0%EA%B2%B0%EB%90%98%EB%8A%94%20%EB%94%94%EC%A7%80%ED%84%B8%20%EC%8B%9C%EB%8C%80%EB%A5%BC%20%EC%9C%84%ED%95%9C%20%EC%8B%A0%EA%B0%9C%EB%85%90%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%B4%EB%8B%A4.%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%B2%98%EB%9F%BC%20%EC%83%9D%EA%B8%B4%20%EC%99%B8%ED%98%95%EB%8C%80%EB%A1%9C%20%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%ED%8A%B8%EB%9D%BD%EC%9D%80%20%EA%B9%94%EB%81%94%ED%95%9C%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%9D%98%20%EC%97%AD%ED%95%A0%EC%9D%84%20%ED%95%9C%EB%8B%A4.%20%EC%B2%A0%EB%A1%9C%20%EB%A7%8C%EB%93%A0%20%EC%9D%BC%EB%B0%98%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EB%8B%A4%EB%A5%B8%20%EC%A0%90%EC%9D%80%20%EC%A0%84%EB%A9%B4%EC%97%90%20%EB%B2%88%ED%98%B8%20%ED%82%A4%ED%8C%A8%EB%93%9C%EA%B0%80%20%EB%B6%80%EC%B0%A9%EB%90%98%EC%96%B4%20%EC%9E%88%EB%8B%A4%EB%8A%94%20%EA%B2%83%20%EB%BF%90.%20%EB%AF%B8%EB%A6%AC%20%EC%A7%80%EC%A0%95%EB%90%9C%20%EB%B2%88%ED%98%B8%EB%A5%BC%20%EC%9E%85%EB%A0%A5%ED%95%98%EB%A9%B4%20%EC%96%B8%EC%A0%9C%EB%93%A0" data-image="http://www.newsian.co.kr/news/photo/201810/33010_9715_2927.jpg" data-sharesns="http" data-title="%EC%8A%A4%EB%A7%88%ED%8A%B8%20%ED%8C%A8%EB%93%9C%EB%9D%BD...%20%EC%9E%90%EB%AC%BC%EC%87%A0%EC%99%80%20%EC%8A%A4%EB%A7%88%ED%8A%B8%ED%8F%B0%EC%9D%98%20%ED%8A%B9%EB%B3%84%ED%95%9C%20%EB%A7%8C%EB%82%A8" data-url="http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010" id="sns-url-copy-button" type="button">
              <div class="sns-btn-icons user-bg">
               <i class="icon-http">
               </i>
              </div>
              URL복사
             </button>
            </div>
           </section>
           <button aria-label="Close modal" class="close-button" data-close="" type="button">
            <span aria-hidden="true">
             ×
            </span>
           </button>
          </div>
         </section>
        </header>
        <hr/>
        <div class="user-content">
         <section class="user-snb">
          <div class="user-snb-wrapper">
           <article class="article-veiw-body view-page">
            <div class="clearfix">
            </div>
            <div class="" id="article-view-content-div" itemprop="articleBody">
             <div class="article-head-sub">
              번호키가 달린 아날로그 자물쇠에 모바일 결합
              <br>
               [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search][search][search][ahref]
              </br>
              블루투스 연결로 번호 변경, 권한 조정 다양하게
             </div>
             <div style="text-align:center">
              <figure class="photo-layout image photo_9715 max-width-680 float-center" data-idxno="9715" data-type="photo" style="display:inline-block">
              </figure>
             </div>
             <p>
              [뉴시안=박성호 기자] 다양한 요구를 수용한 새로운 디지털 자물쇠 '스마트 패드락(Smart Padlock)이 네티즌의 마음을 사로잡았다.<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li>[link][ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
             </p>
             <p>
              이글루홈(Igloohome)이 만든  스마트 패드락은 겉 모습은 고급스러운 일반 자물쇠처럼 보인다. 하지만 이 제품은 블루투스를 통해 스마트폰의 전용앱과 연결되는 디지털 시대를 위한 신개념 자물쇠이다.
             </p>
             <p>
              일반 자물쇠처럼 생긴 외형대로 스마트 패트락은 깔끔한 자물쇠의 역할을 한다. 철로 만든 일반 자물쇠와 다른 점은 전면에 번호 키패드가 부착되어 있다는 것 뿐. 미리 지정된 번호를 입력하면 언제든 바로 잠금을 풀 수 있다. [search][search]<li>[link]</li>[link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
             </p>
             <p>
              특별한 점은 내부의 블루투스 모듈을 통해 사용자의 스마트폰과 연결이 된다는 점이다. 게다가 단 하나의 번호가 아니라 사람마다 각기 다른 번호를 부여할 수도 있다. 예컨대 A에게는 12345 B에게는 13579라고 지정해 놓는 식이다. 각자에 부여된 번호로 자물쇠를 열 수 있고, 자물쇠 사용자는 누가 언제 열었는지도 스마트폰에서 확인이 가능하다.
             </p>
             <p>
              [ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[link]</li>
             </p>
             <div style="text-align:center">
              <figure class="photo-layout image photo_9716 max-width-679 float-center" data-idxno="9716" data-type="photo" style="display:inline-block">
              </figure>
             </div>
             <p>
              또한 예고없이 찾아온 방문객을 위해 1회용 번호도 발급할 수 있고, 시간차를 두고 번호 변경도 가능하다.<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li>
             </p>
             <p>
              펜션 운영자가 창고나 외부 시설의 비밀번호를 잠시 머문 투숙객에게 알려주었다고 가정해보자. 이때, 이 번호를 기억했다가 누군가 다시 찾아와서 허가없이 물건을 가져가거나 이용한다면... 실제로 얼마든지 일어날 수 있는 상황이다.
             </p>
             <p>
              스마트 패드락은 이런 상황을 감안해 보안을 강화했다.[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[link]</li><li>[search]</li>[search][ahref]
             </p>
             <p>
              한시적으로 정해진 기간에만 사용할 수 있는 비밀번호를 부여할 수 있어서, 서비스 이용이 끝난 고객이 다시 찾아와 자물쇠를 열려는 경우 원천적 차단을 통해 보안을 유지시켜 준다. 바로 이런 장점으로 인해 에어비앤비와 연계, 홍보를 진행했고 폭발적 반응을 이끌어 냈다.  [ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref][link]
             </p>
             <p>
              안타깝지만 당장 구입할 수는 없는 제품이다. 인디고고(Indiegogo)에서 펀딩중인 상품으로 내년 4월 출시예정이며 가격은 $69이다. 5만달러를 목표로 했지만 이미 목표액의 260%를 달성했다. [link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[link]<li>[link]</li><li>[ahref]</li><li>[link]</li>
             </p>
             <p>
              [ahref][link]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][search]
             </p>
             <p>
              ⊙
              [link]
              
             </p>
             <div class="tag-group">
              <div class="tag-group-title">
               Tag
              </div>
              <a class="tag-button" href="/news/articleList.html?sc_area=A&amp;sc_word=스마트락">
               #스마트락
              </a>
              [ahref]
              
              <a class="tag-button" href="/news/articleList.html?sc_area=A&amp;sc_word=인디고고">
               #인디고고
              </a>
              [ahref]
              
             </div>
             <div class="view-copyright">
              저작권자 © 뉴시안 무단전재 및 재배포 금지
             </div>
             <div class="view-editors">
              <div class="float-left;">
               [link]
               
               <iframe allowtransparency="true" frameborder="0" scrolling="no" src="//www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.newsian.co.kr%2Fnews%2FarticleView.html%3Fidxno%3D33010&amp;width&amp;layout=button_count&amp;action=like&amp;show_faces=false&amp;share=false&amp;height=21" style="border:none; overflow:hidden; height:21px;">
               </iframe>
              </div>
              <div class="float-right">
               <div class="profile-images">
               </div>
               [ahref]
               
               <a class="articles" href="1">
                다른기사 보기
               </a>
              </div>
             </div>
            </div>
            <div class="clearfix">
            </div>
           </article>
           <hr/>
           <div class="clearfix">
           </div>
           <div class="vote-container">
           </div>
           <div class="reveal gray" data-reveal="" id="reply-delete-modal">
            <header class="reveal-header">
             <div class="reveal-title">
              댓글삭제
             </div>
            </header>
            <section class="reveal-container">
             <div class="reveal-msg">
              삭제한 댓글은 다시
              <span class="user-point">
               복구할 수 없습니다.<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[ahref]</li>[link]
              </span>
              <br/>
              그래도 삭제하시겠습니까?
             </div>
             <form action="p" id="reply-delete-form" method="post" name="replyForm">
             </form>
            </section>
            <button aria-label="Close modal" class="close-button" data-close="" type="button">
             <span aria-hidden="true">
              ×
             </span>
            </button>
           </div>
           <article class="article-reply" id="reply">
            <header class="reply-header">
             <strong>
              댓글
             </strong>
             <span class="text-muted">
              0<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[ahref]<li>[link]</li>[ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
            </header>
            <button class="reply-trick" data-mode="reply" id="reply-write-btn" type="button">
             댓글입력
            </button>
            <section class="reply-container" id="reply-container" style="display:none">
             <div class="reply-comment">
              <form action="p" id="reply-form" method="post" name="replyForm">
              </form>
             </div>
            </section>
            <div class="reveal gray" data-reveal="" id="reply-modal">
             <header class="reveal-header">
              <div class="reveal-title">
               댓글쓰기
              </div>
             </header>
             <section class="reveal-container">
              <div class="reveal-msg">
               계정을 선택하시면
               <span class="user-point">
                로그인·계정인증
               </span>
               을 통해
               <br/>
               댓글을 남기실 수 있습니다.
              </div>
              <div class="reply-login">
               <div class="button-group nd-white large">
                [link]
                
                <button class="button expanded" id="btn-nomember-write" type="button">
                 <i class="icon-chat fa-fw user-point">
                 </i>
                 비회원 글쓰기
                </button>
               </div>
               <div class="clearfix" id="nomember-info" style="display:none">
                <hr>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="name">
                    <strong class="key-point">
                     이름
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                  </div>
                 </fieldset>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="password">
                    <strong class="key-point">
                     비밀번호
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                  </div>
                 </fieldset>
                 <fieldset class="row expanded small-collapse medium-uncollapse">
                  <div class="small-12 medium-3 columns">
                   <label class="text-left medium-text-right medium-middle" for="kcaptcha">
                    <strong class="key-point">
                     자동등록방지
                    </strong>
                   </label>
                  </div>
                  <div class="small-12 medium-9 columns">
                   <div class="input-group auto-marbtm-5">
                    <div id="captcha_container">
                    </div>
                   </div>
                  </div>
                 </fieldset>
                 <hr/>
                 <footer class="clearfix">
                  <div class="float-right small-float-center">
                   <button class="button user-bg small-expanded" id="no-member-write">
                    <i class="fa fa-plus-circle fa-fw">
                    </i>
                    <strong>
                     확인
                    </strong>
                   </button>
                  </div>
                 </footer>
                </hr>
               </div>
              </div>
             </section>
             <button aria-label="Close modal" class="close-button" data-close="" id="login-close-button" type="button">
              <span aria-hidden="true">
               ×
              </span>
             </button>
            </div>
            <section class="reply-list">
             <header class="header">
              <div class="list-category">
               <a class="active" href="/news/articleView.html?idxno=33010&amp;replyAll=&amp;reply_sc_order_by=I#reply">
                <i class="s7-check">
                </i>
                최신순
               </a>
               [link]
               
              </div>
             </header>
             <section class="container">
             </section>
            </section>
            <hr/>
           </article>
           <div class="clearfix">
            <div data-widget_id="ml6D1Ko4" id="dablewidget_ml6D1Ko4">
            </div>
            <div class="tabs-wrap type-A" id="INC_TAB_A_2_container">
             <ul class="tabs-navs expanded" id="INC_TAB_A_2">
              <li class="tabs-item active">
               <a data-tabs-target="#panel1" href="#" target="_top">
                경제
               </a>
              </li>
              <li class="tabs-item">
               [link]
               
              </li>
              <li class="tabs-item">
               [link]
               
              </li>
              <li class="tabs-item">
               <a data-tabs-target="#panel4" href="#" target="_top">
                사회
               </a>
              </li>
             </ul>
             <div class="tabs-panel active" id="panel1">
              <div class="auto-article auto-ma04">
               <ul>
                <li class="float-left auto-reset width-165">
                 [link]
                 
                 <div class="size-14 auto-martop-8">
                  [ahref]
                  
                 </div>
                </li>
                <li class="auto-content">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [ahref]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=33654" target="_top">
                   <strong>
                    KB국민은행, 병의원 및 약국 세무회계 CMS연계 디지털플랫폼 구축
                   </strong>
                  </a>
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=33658" target="_top">
                   <strong>
                    KB국민은행, 미세먼지 근본적 해결 대책 마련…'발원지 관리 위한 업무협약' 체결
                   </strong>
                  </a>
                 </div>
                </li>
               </ul>
              </div>
             </div>
             <div class="tabs-panel" id="panel2">
              <div class="auto-article auto-ma04">
               <ul>
                <li class="float-left auto-reset width-165">
                 [link]
                 
                 <div class="size-14 auto-martop-8">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [ahref]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=32809" target="_top">
                   <strong>
                    리얼미터 "국민들이 주목하는 국감 쟁점 1위는 경제"
                   </strong>
                  </a>
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
               </ul>
              </div>
             </div>
             <div class="tabs-panel" id="panel3">
              <div class="auto-article auto-ma04">
               <ul>
                <li class="float-left auto-reset width-165">
                 [link]
                 
                 <div class="size-14 auto-martop-8">
                  <a class="line-height-3-2x auto-fontA onload" href="/news/articleView.html?idxno=33578" target="_top">
                   "노란 조끼의 분노, 그곳에  시민이 있었네”
                  </a>
                 </div>
                </li>
                <li class="auto-content">
                 <div class="size-16">
                  [ahref]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=32431" target="_top">
                   <strong>
                    오바마, 트럼프 때리기 동참...美 대통령 비판하는 칼럼·저서 연이어
                   </strong>
                  </a>
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
               </ul>
              </div>
             </div>
             <div class="tabs-panel" id="panel4">
              <div class="auto-article auto-ma04">
               <ul>
                <li class="float-left auto-reset width-165">
                 <a class="auto-images flow-hide line width-165 height-93 line" href="/news/articleView.html?idxno=33659" style="background:url(/news/thumbnail/201812/33659_10722_459_v150.jpg) no-repeat center top;background-size:cover;text-indent:-1000pt" target="_top">
                  <span class="show-for-sr">
                   한화투자증권, 임직원 참여 자선바자회 '플러스 마켓' 개최
                  </span>
                 </a>
                 <div class="size-14 auto-martop-8">
                  <a class="line-height-3-2x auto-fontA onload" href="/news/articleView.html?idxno=33659" target="_top">
                   한화투자증권, 임직원 참여 자선바자회 '플러스 마켓' 개최
                  </a>
                 </div>
                </li>
                <li class="auto-content">
                 <div class="size-16">
                  [ahref]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=33606" target="_top">
                   <strong>
                    KB국민은행, 학교폭력예방 뮤지컬 동아리방 개관식 개최
                   </strong>
                  </a>
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  <a class="line-height-3-x auto-fontA onload" href="/news/articleView.html?idxno=33580" target="_top">
                   <strong>
                    저축은행중앙회, 사랑의 연탄 나눔 행사 진행
                   </strong>
                  </a>
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
                <li class="auto-content auto-martop-12">
                 <div class="size-16">
                  [link]
                  
                 </div>
                </li>
               </ul>
              </div>
             </div>
            </div>
           </div>
          </div>
         </section>
         <aside class="user-aside">
          <article class="box-skin design-7">
           <header class="header">
            <strong>
             인기기사
            </strong>
           </header>
           <section class="content">
            <div class="auto-article auto-db01">
             <ul>
              <li class="clearfix">
               <div class="number count1 user-bg">
                1
               </div>
               [ahref]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count2 user-bg">
                2
               </div>
               <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33414" target="_top">
                [앱추천] 만개의 레시피, 한겨울 책임질 맛있는 요리앱
               </a>
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count3 user-bg">
                3
               </div>
               [link]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count4 default-bg">
                4
               </div>
               <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33577" target="_top">
                SKY캐슬 : 입시지옥과 계층상승욕구의 상관관계
               </a>
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count5 default-bg">
                5
               </div>
               [link]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count6 default-bg">
                6
               </div>
               [ahref]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count7 default-bg">
                7
               </div>
               [link]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count8 default-bg">
                8
               </div>
               [ahref]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count9 default-bg">
                9
               </div>
               [link]
               
              </li>
              <li class="clearfix auto-martop-8">
               <div class="number count10 default-bg">
                10
               </div>
               <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33466" target="_top">
                구글 등 해외 IT기업 과세범위 확대 추진... 정치권 속도 높여
               </a>
              </li>
             </ul>
            </div>
           </section>
          </article>
          <article class="box-skin design-7">
           <div class="box-margins height-35">
           </div>
           <article class="box-skin design-7">
            <header class="header">
             <strong>
              최신기사
             </strong>
            </header>
            <section class="content">
             <div class="auto-article" id="roll_2">
              <div class="dis-none clearfix">
               <a class="dis-block clearfix auto-padbtm-10" href="/news/articleView.html?idxno=33674" target="_top">
                [link]
                
                <div class="size-16 auto-martop-10 line-height-3-3x">
                 <a class="auto-fontA onload " href="/news/articleView.html?idxno=33674" target="_top">
                  <strong>
                   쫄깃한 또띠아와 고소한 치즈가 듬뿍…오뚜기 ‘리얼 멕시칸 브리또’ 3종 출시
                  </strong>
                 </a>
                </div>
                <p class="auto-martop-3 line-height-4-3x">
                 [ahref][search]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[link]
                </p>
                <div class="size-12 auto-fontB auto-martop-6">
                 <a class="auto-fontB" href="/news/articleView.html?idxno=33674" target="_top">
                  권혜경 기자
                 </a>
                 |  2018-12-12
                </div>
               </a>
              </div>
              <div class="dis-none clearfix">
               [link]
               
              </div>
              <div class="dis-none clearfix">
               <a class="dis-block clearfix auto-padbtm-10 auto-padtop-10 auto-sol" href="/news/articleView.html?idxno=33672" target="_top">
                [link]
                
                <div class="size-16 auto-martop-10 line-height-3-3x">
                 [ahref]
                 
                </div>
                <p class="auto-martop-3 line-height-4-3x">
                 <li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][search]
                </p>
                <div class="size-12 auto-fontB auto-martop-6">
                 <a class="auto-fontB" href="/news/articleView.html?idxno=33672" target="_top">
                  권혜경 기자
                 </a>
                 |  2018-12-12
                </div>
               </a>
              </div>
             </div>
            </section>
           </article>
           <div class="box-margins height-35">
           </div>
           <article class="box-skin design-7">
            <header class="header" style="border-bottom: none;margin-bottom: 0.500rem;">
             <strong>
              분야별 주요뉴스
             </strong>
            </header>
           </article>
           <div class="tabs-wrap type-A" id="INC_TAB_A_7_container">
            <ul class="tabs-navs expanded" id="INC_TAB_A_7">
             <li class="tabs-item active">
              <a data-tabs-target="#panel1" href="#" target="_top">
               Mobile
              </a>
             </li>
             <li class="tabs-item">
              [link]
              
             </li>
             <li class="tabs-item">
              [ahref]
              
             </li>
            </ul>
            <div class="tabs-panel active" id="panel1">
             <div class="auto-article auto-db01">
              <ul>
               <li class="clearfix">
                <div class="number count1 user-bg">
                 1
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count2 user-bg">
                 2
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33541" target="_top">
                 [뉴시안 유럽] 삼성전자 '육각형 스마트폰' 나온다…렛츠고디지털, 무경계 디스플레이 스마트폰 렌더링 공개
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count3 user-bg">
                 3
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33558" target="_top">
                 [뉴시안 북미] 마이크로소프트, 크롬 기반의 새 엣지 브라우저 출시 밝혀
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count4 default-bg">
                 4
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count5 default-bg">
                 5
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count6 default-bg">
                 6
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33456" target="_top">
                 구글 번역, 사이트 디자인 변경
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count7 default-bg">
                 7
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33644" target="_top">
                 [뉴시안 아시아] 中 잭 웡 메이주 CEO, 팬이 만든 렌더링 극찬
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count8 default-bg">
                 8
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33651" target="_top">
                 삼성전자, '홀 스크린' 갤럭시 A8s 중국에서 공개
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count9 default-bg">
                 9
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count10 default-bg">
                 10
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33587" target="_top">
                 [뉴시안 북미] 삼성전자 갤럭시 S10 케이스 통해 정보 유출
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count11 default-bg">
                 11
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count12 default-bg">
                 12
                </div>
                [link]
                
               </li>
              </ul>
             </div>
            </div>
            <div class="tabs-panel" id="panel2">
             <div class="auto-article auto-db01">
              <ul>
               <li class="clearfix">
                <div class="number count1 user-bg">
                 1
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33463" target="_top">
                 후지필름 , 연남동 카메라 체험존 오픈
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count2 user-bg">
                 2
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33430" target="_top">
                 후지필름, 초광각 줌렌즈 XF8-16mm F2.8 출시
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count3 user-bg">
                 3
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count4 default-bg">
                 4
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count5 default-bg">
                 5
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count6 default-bg">
                 6
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33554" target="_top">
                 작지만 강하다…DJI, 초소형 짐벌 카메라 '오즈모 포켓' 국내 공개
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count7 default-bg">
                 7
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count8 default-bg">
                 8
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count9 default-bg">
                 9
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33433" target="_top">
                 [뉴시안 아시아] 작고 강력한 짐벌 탄생…디제이아이 'DJI 오즈모 포켓 '출시
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count10 default-bg">
                 10
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33510" target="_top">
                 소니코리아, 엑스페리아 XZ3 레드ㆍ화이트 스페셜 컬러 출시
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count11 default-bg">
                 11
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count12 default-bg">
                 12
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33499" target="_top">
                 "이젠 양치질도 AR 이용하세요"…한화생명, 아이들 위한 치아보험 출시
                </a>
               </li>
              </ul>
             </div>
            </div>
            <div class="tabs-panel" id="panel3">
             <div class="auto-article auto-db01">
              <ul>
               <li class="clearfix">
                <div class="number count1 user-bg">
                 1
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33543" target="_top">
                 [뉴시안 북미] 톰스가이드 "퀄컴 스냅드래곤 855 칩셋의 8가지 변화"
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count2 user-bg">
                 2
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33466" target="_top">
                 구글 등 해외 IT기업 과세범위 확대 추진... 정치권 속도 높여
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count3 user-bg">
                 3
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count4 default-bg">
                 4
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33488" target="_top">
                 다음 아고라, 15년만에 역사의 뒤안길로…내년 1월 7일 서비스 종료
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count5 default-bg">
                 5
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count6 default-bg">
                 6
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33441" target="_top">
                 카카오, 인공지능(AI) 적용한 형태소 분석기 카이(khaiii) 공개
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count7 default-bg">
                 7
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count8 default-bg">
                 8
                </div>
                [link]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count9 default-bg">
                 9
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count10 default-bg">
                 10
                </div>
                [ahref]
                
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count11 default-bg">
                 11
                </div>
                <a class="size-14 line-height-4-x auto-fontA onload" href="/news/articleView.html?idxno=33518" target="_top">
                 한국인터넷진흥원, 2019년 주목해야 할 7대 사이버 공격 전망 발표
                </a>
               </li>
               <li class="clearfix auto-martop-8">
                <div class="number count12 default-bg">
                 12
                </div>
                [link]
                
               </li>
              </ul>
             </div>
            </div>
           </div>
          </article>
         </aside>
        </div>
        <div class="auto-martop-20 clearfix">
        </div>
       </div>
      </section>
      <footer class="user-style-default custorm-down-white" id="user-footer">
       <div class="footer-menu">
        <div class="float-center width-1140">
         <nav class="footer-columns user-nav">
          [link]
          
          <a class="deco-none" href="/com/ethic.html">
           <strong>
            윤리강령
           </strong>
          </a>
          [link]
          
          <a class="deco-none" href="/com/ad.html">
           <strong>
            광고문의
           </strong>
          </a>
          [link]
          
          [ahref]
          
          [link]
          
          <a class="deco-none" href="/com/emailno.html">
           <strong>
            이메일무단수집거부
           </strong>
          </a>
          [link]
          
         </nav>
        </div>
       </div>
       <div class="float-center width-1080 footer_wrap">
        <div class="user-logo-box">
         <div class="footer-columns user-logo">
         </div>
        </div>
        <div class="user-address-box">
         <address class="user-address">
          <ul class="no-bullet">
           <li class="bars clear">
            서울특별시 마포구 월드컵북로12안길 34-12 예건빌딩
           </li>
           <li class="bars">
            대표전화 : 02-332-4114
           </li>
           <li class="bars">
            팩스 : 02-322-9119
           </li>
           <li>
            청소년보호책임자 : 양미자
           </li>
           <li class="bars clear">
            명칭 : 줌 미디어(주)
           </li>
           <li class="bars">
            제호 : 뉴시안
           </li>
           <li class="bars">
            등록번호 : 서울 아 02050
           </li>
           <li class="bars">
            등록일 : 2012-03-30
           </li>
           <li class="bars">
            발행일 : 2012-09
           </li>
           <li class="bars clear">
            발행인·편집인 : 조규성
           </li>
           <li class="bars">
            편집국장 : 한기홍
           </li>
           <li class="bars">
            고문변호사 : 강길(법무법인한세, 대표번호사)
           </li>
           <li class="clear">
            뉴시안 모든 콘텐츠(영상,기사, 사진)는 저작권법의 보호를 받은바, 무단 전재와 복사, 배포 등을 금합니다.
           </li>
           <li class="clear">
            C
            [ahref]
            
            pyright © 2018 뉴시안. All rights reserved. mail to
            [ahref]
            
           </li>
          </ul>
          <a class="ndsoft" href="/" target="_blank">
          </a>
         </address>
        </div>
        <div class="user-mark-box">
         <ul>
          <li class="mark-img">
           <h2>
            [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
           </h2>
          </li>
          <li class="mark-img">
          </li>
         </ul>
        </div>
       </div>
      </footer>
      <button class="back-to-top" id="back-to-top" title="위로" type="button">
       <i class="s7-angle-up">
       </i>
       <span class="show-for-sr">
        위로[search][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][ahref]
       </span>
      </button>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0040
  </b>
 </body>
</html>